
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json.dir/test_json.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatbuffers_uint8_cast_to_pe>:
       0:	push	{fp}		; (str fp, [sp, #-4]!)
       4:	add	fp, sp, #0
       8:	sub	sp, sp, #12
       c:	mov	r3, r0
      10:	strb	r3, [fp, #-5]
      14:	ldrb	r3, [fp, #-5]
      18:	mov	r0, r3
      1c:	add	sp, fp, #0
      20:	pop	{fp}		; (ldr fp, [sp], #4)
      24:	bx	lr

00000028 <flatbuffers_uint8_write_to_pe>:
      28:	push	{fp, lr}
      2c:	add	fp, sp, #4
      30:	sub	sp, sp, #8
      34:	str	r0, [fp, #-8]
      38:	mov	r3, r1
      3c:	strb	r3, [fp, #-9]
      40:	ldrb	r3, [fp, #-9]
      44:	mov	r0, r3
      48:	bl	0 <flatbuffers_uint8_cast_to_pe>
      4c:	mov	r3, r0
      50:	mov	r2, r3
      54:	ldr	r3, [fp, #-8]
      58:	strb	r2, [r3]
      5c:	nop			; (mov r0, r0)
      60:	sub	sp, fp, #4
      64:	pop	{fp, pc}

00000068 <flatbuffers_uint16_cast_to_pe>:
      68:	push	{fp}		; (str fp, [sp, #-4]!)
      6c:	add	fp, sp, #0
      70:	sub	sp, sp, #12
      74:	mov	r3, r0
      78:	strh	r3, [fp, #-6]
      7c:	ldrh	r3, [fp, #-6]
      80:	mov	r0, r3
      84:	add	sp, fp, #0
      88:	pop	{fp}		; (ldr fp, [sp], #4)
      8c:	bx	lr

00000090 <flatbuffers_uint16_write_to_pe>:
      90:	push	{fp, lr}
      94:	add	fp, sp, #4
      98:	sub	sp, sp, #8
      9c:	str	r0, [fp, #-8]
      a0:	mov	r3, r1
      a4:	strh	r3, [fp, #-10]
      a8:	ldrh	r3, [fp, #-10]
      ac:	mov	r0, r3
      b0:	bl	68 <flatbuffers_uint16_cast_to_pe>
      b4:	mov	r3, r0
      b8:	mov	r2, r3
      bc:	ldr	r3, [fp, #-8]
      c0:	strh	r2, [r3]
      c4:	nop			; (mov r0, r0)
      c8:	sub	sp, fp, #4
      cc:	pop	{fp, pc}

000000d0 <flatbuffers_uint32_cast_to_pe>:
      d0:	push	{fp}		; (str fp, [sp, #-4]!)
      d4:	add	fp, sp, #0
      d8:	sub	sp, sp, #12
      dc:	str	r0, [fp, #-8]
      e0:	ldr	r3, [fp, #-8]
      e4:	mov	r0, r3
      e8:	add	sp, fp, #0
      ec:	pop	{fp}		; (ldr fp, [sp], #4)
      f0:	bx	lr

000000f4 <flatbuffers_uint32_write_to_pe>:
      f4:	push	{fp, lr}
      f8:	add	fp, sp, #4
      fc:	sub	sp, sp, #8
     100:	str	r0, [fp, #-8]
     104:	str	r1, [fp, #-12]
     108:	ldr	r0, [fp, #-12]
     10c:	bl	d0 <flatbuffers_uint32_cast_to_pe>
     110:	mov	r2, r0
     114:	ldr	r3, [fp, #-8]
     118:	str	r2, [r3]
     11c:	nop			; (mov r0, r0)
     120:	sub	sp, fp, #4
     124:	pop	{fp, pc}

00000128 <flatbuffers_uint64_cast_to_pe>:
     128:	push	{fp}		; (str fp, [sp, #-4]!)
     12c:	add	fp, sp, #0
     130:	sub	sp, sp, #12
     134:	strd	r0, [fp, #-12]
     138:	ldrd	r2, [fp, #-12]
     13c:	mov	r0, r2
     140:	mov	r1, r3
     144:	add	sp, fp, #0
     148:	pop	{fp}		; (ldr fp, [sp], #4)
     14c:	bx	lr

00000150 <flatbuffers_uint64_write_to_pe>:
     150:	push	{fp, lr}
     154:	add	fp, sp, #4
     158:	sub	sp, sp, #16
     15c:	str	r0, [fp, #-8]
     160:	strd	r2, [fp, #-20]	; 0xffffffec
     164:	ldrd	r0, [fp, #-20]	; 0xffffffec
     168:	bl	128 <flatbuffers_uint64_cast_to_pe>
     16c:	mov	r2, r0
     170:	mov	r3, r1
     174:	ldr	r1, [fp, #-8]
     178:	strd	r2, [r1]
     17c:	nop			; (mov r0, r0)
     180:	sub	sp, fp, #4
     184:	pop	{fp, pc}

00000188 <flatbuffers_int8_cast_to_pe>:
     188:	push	{fp}		; (str fp, [sp, #-4]!)
     18c:	add	fp, sp, #0
     190:	sub	sp, sp, #12
     194:	mov	r3, r0
     198:	strb	r3, [fp, #-5]
     19c:	ldrsb	r3, [fp, #-5]
     1a0:	mov	r0, r3
     1a4:	add	sp, fp, #0
     1a8:	pop	{fp}		; (ldr fp, [sp], #4)
     1ac:	bx	lr

000001b0 <flatbuffers_int8_write_to_pe>:
     1b0:	push	{fp, lr}
     1b4:	add	fp, sp, #4
     1b8:	sub	sp, sp, #8
     1bc:	str	r0, [fp, #-8]
     1c0:	mov	r3, r1
     1c4:	strb	r3, [fp, #-9]
     1c8:	ldrsb	r3, [fp, #-9]
     1cc:	mov	r0, r3
     1d0:	bl	188 <flatbuffers_int8_cast_to_pe>
     1d4:	mov	r3, r0
     1d8:	mov	r2, r3
     1dc:	ldr	r3, [fp, #-8]
     1e0:	strb	r2, [r3]
     1e4:	nop			; (mov r0, r0)
     1e8:	sub	sp, fp, #4
     1ec:	pop	{fp, pc}

000001f0 <flatbuffers_int16_cast_to_pe>:
     1f0:	push	{fp}		; (str fp, [sp, #-4]!)
     1f4:	add	fp, sp, #0
     1f8:	sub	sp, sp, #12
     1fc:	mov	r3, r0
     200:	strh	r3, [fp, #-6]
     204:	ldrsh	r3, [fp, #-6]
     208:	mov	r0, r3
     20c:	add	sp, fp, #0
     210:	pop	{fp}		; (ldr fp, [sp], #4)
     214:	bx	lr

00000218 <flatbuffers_int16_write_to_pe>:
     218:	push	{fp, lr}
     21c:	add	fp, sp, #4
     220:	sub	sp, sp, #8
     224:	str	r0, [fp, #-8]
     228:	mov	r3, r1
     22c:	strh	r3, [fp, #-10]
     230:	ldrsh	r3, [fp, #-10]
     234:	mov	r0, r3
     238:	bl	1f0 <flatbuffers_int16_cast_to_pe>
     23c:	mov	r3, r0
     240:	mov	r2, r3
     244:	ldr	r3, [fp, #-8]
     248:	strh	r2, [r3]
     24c:	nop			; (mov r0, r0)
     250:	sub	sp, fp, #4
     254:	pop	{fp, pc}

00000258 <flatbuffers_int32_cast_to_pe>:
     258:	push	{fp}		; (str fp, [sp, #-4]!)
     25c:	add	fp, sp, #0
     260:	sub	sp, sp, #12
     264:	str	r0, [fp, #-8]
     268:	ldr	r3, [fp, #-8]
     26c:	mov	r0, r3
     270:	add	sp, fp, #0
     274:	pop	{fp}		; (ldr fp, [sp], #4)
     278:	bx	lr

0000027c <flatbuffers_int32_write_to_pe>:
     27c:	push	{fp, lr}
     280:	add	fp, sp, #4
     284:	sub	sp, sp, #8
     288:	str	r0, [fp, #-8]
     28c:	str	r1, [fp, #-12]
     290:	ldr	r0, [fp, #-12]
     294:	bl	258 <flatbuffers_int32_cast_to_pe>
     298:	mov	r2, r0
     29c:	ldr	r3, [fp, #-8]
     2a0:	str	r2, [r3]
     2a4:	nop			; (mov r0, r0)
     2a8:	sub	sp, fp, #4
     2ac:	pop	{fp, pc}

000002b0 <flatbuffers_int64_cast_to_pe>:
     2b0:	push	{fp}		; (str fp, [sp, #-4]!)
     2b4:	add	fp, sp, #0
     2b8:	sub	sp, sp, #12
     2bc:	strd	r0, [fp, #-12]
     2c0:	ldrd	r2, [fp, #-12]
     2c4:	mov	r0, r2
     2c8:	mov	r1, r3
     2cc:	add	sp, fp, #0
     2d0:	pop	{fp}		; (ldr fp, [sp], #4)
     2d4:	bx	lr

000002d8 <flatbuffers_int64_write_to_pe>:
     2d8:	push	{fp, lr}
     2dc:	add	fp, sp, #4
     2e0:	sub	sp, sp, #16
     2e4:	str	r0, [fp, #-8]
     2e8:	strd	r2, [fp, #-20]	; 0xffffffec
     2ec:	ldrd	r0, [fp, #-20]	; 0xffffffec
     2f0:	bl	2b0 <flatbuffers_int64_cast_to_pe>
     2f4:	mov	r2, r0
     2f8:	mov	r3, r1
     2fc:	ldr	r1, [fp, #-8]
     300:	strd	r2, [r1]
     304:	nop			; (mov r0, r0)
     308:	sub	sp, fp, #4
     30c:	pop	{fp, pc}

00000310 <flatbuffers_float_cast_to_pe>:
     310:	push	{fp}		; (str fp, [sp, #-4]!)
     314:	add	fp, sp, #0
     318:	sub	sp, sp, #20
     31c:	vstr	s0, [fp, #-16]
     320:	ldr	r3, [fp, #-16]
     324:	str	r3, [fp, #-8]
     328:	ldr	r3, [fp, #-8]
     32c:	str	r3, [fp, #-8]
     330:	ldr	r3, [fp, #-8]
     334:	vmov	s15, r3
     338:	vmov.f32	s0, s15
     33c:	add	sp, fp, #0
     340:	pop	{fp}		; (ldr fp, [sp], #4)
     344:	bx	lr

00000348 <flatbuffers_float_write_to_pe>:
     348:	push	{fp, lr}
     34c:	add	fp, sp, #4
     350:	sub	sp, sp, #8
     354:	str	r0, [fp, #-8]
     358:	vstr	s0, [fp, #-12]
     35c:	vldr	s0, [fp, #-12]
     360:	bl	310 <flatbuffers_float_cast_to_pe>
     364:	vmov.f32	s15, s0
     368:	ldr	r3, [fp, #-8]
     36c:	vstr	s15, [r3]
     370:	nop			; (mov r0, r0)
     374:	sub	sp, fp, #4
     378:	pop	{fp, pc}

0000037c <flatbuffers_double_cast_to_pe>:
     37c:	push	{fp}		; (str fp, [sp, #-4]!)
     380:	add	fp, sp, #0
     384:	sub	sp, sp, #20
     388:	vstr	d0, [fp, #-20]	; 0xffffffec
     38c:	ldrd	r2, [fp, #-20]	; 0xffffffec
     390:	strd	r2, [fp, #-12]
     394:	ldrd	r2, [fp, #-12]
     398:	strd	r2, [fp, #-12]
     39c:	ldrd	r2, [fp, #-12]
     3a0:	vmov	d7, r2, r3
     3a4:	vmov.f64	d0, d7
     3a8:	add	sp, fp, #0
     3ac:	pop	{fp}		; (ldr fp, [sp], #4)
     3b0:	bx	lr

000003b4 <flatbuffers_double_write_to_pe>:
     3b4:	push	{fp, lr}
     3b8:	add	fp, sp, #4
     3bc:	sub	sp, sp, #16
     3c0:	str	r0, [fp, #-8]
     3c4:	vstr	d0, [fp, #-20]	; 0xffffffec
     3c8:	vldr	d0, [fp, #-20]	; 0xffffffec
     3cc:	bl	37c <flatbuffers_double_cast_to_pe>
     3d0:	vmov.f64	d7, d0
     3d4:	ldr	r3, [fp, #-8]
     3d8:	vstr	d7, [r3]
     3dc:	nop			; (mov r0, r0)
     3e0:	sub	sp, fp, #4
     3e4:	pop	{fp, pc}

000003e8 <flatbuffers_bool_cast_to_pe>:
     3e8:	push	{fp}		; (str fp, [sp, #-4]!)
     3ec:	add	fp, sp, #0
     3f0:	sub	sp, sp, #12
     3f4:	mov	r3, r0
     3f8:	strb	r3, [fp, #-5]
     3fc:	ldrb	r3, [fp, #-5]
     400:	mov	r0, r3
     404:	add	sp, fp, #0
     408:	pop	{fp}		; (ldr fp, [sp], #4)
     40c:	bx	lr

00000410 <flatbuffers_bool_write_to_pe>:
     410:	push	{fp, lr}
     414:	add	fp, sp, #4
     418:	sub	sp, sp, #8
     41c:	str	r0, [fp, #-8]
     420:	mov	r3, r1
     424:	strb	r3, [fp, #-9]
     428:	ldrb	r3, [fp, #-9]
     42c:	mov	r0, r3
     430:	bl	3e8 <flatbuffers_bool_cast_to_pe>
     434:	mov	r3, r0
     438:	mov	r2, r3
     43c:	ldr	r3, [fp, #-8]
     440:	strb	r2, [r3]
     444:	nop			; (mov r0, r0)
     448:	sub	sp, fp, #4
     44c:	pop	{fp, pc}

00000450 <flatcc_json_parser_init>:
     450:	push	{fp, lr}
     454:	add	fp, sp, #4
     458:	sub	sp, sp, #16
     45c:	str	r0, [fp, #-8]
     460:	str	r1, [fp, #-12]
     464:	str	r2, [fp, #-16]
     468:	str	r3, [fp, #-20]	; 0xffffffec
     46c:	mov	r2, #44	; 0x2c
     470:	mov	r1, #0
     474:	ldr	r0, [fp, #-8]
     478:	bl	0 <memset>
     47c:	ldr	r3, [fp, #-8]
     480:	ldr	r2, [fp, #-12]
     484:	str	r2, [r3]
     488:	ldr	r3, [fp, #-8]
     48c:	ldr	r2, [fp, #-16]
     490:	str	r2, [r3, #4]
     494:	ldr	r3, [fp, #-8]
     498:	mov	r2, #1
     49c:	str	r2, [r3, #16]
     4a0:	ldr	r3, [fp, #-8]
     4a4:	ldr	r2, [fp, #4]
     4a8:	str	r2, [r3, #8]
     4ac:	ldr	r3, [fp, #-8]
     4b0:	ldr	r2, [fp, #-16]
     4b4:	str	r2, [r3, #28]
     4b8:	ldr	r3, [fp, #-8]
     4bc:	ldr	r2, [fp, #-20]	; 0xffffffec
     4c0:	str	r2, [r3, #32]
     4c4:	ldr	r3, [fp, #-8]
     4c8:	ldr	r2, [fp, #-16]
     4cc:	str	r2, [r3, #36]	; 0x24
     4d0:	nop			; (mov r0, r0)
     4d4:	sub	sp, fp, #4
     4d8:	pop	{fp, pc}

000004dc <flatcc_json_parser_space>:
     4dc:	push	{fp, lr}
     4e0:	add	fp, sp, #4
     4e4:	sub	sp, sp, #16
     4e8:	str	r0, [fp, #-8]
     4ec:	str	r1, [fp, #-12]
     4f0:	str	r2, [fp, #-16]
     4f4:	ldr	r2, [fp, #-16]
     4f8:	ldr	r3, [fp, #-12]
     4fc:	sub	r3, r2, r3
     500:	cmp	r3, #1
     504:	ble	550 <flatcc_json_parser_space+0x74>
     508:	ldr	r3, [fp, #-12]
     50c:	ldrb	r3, [r3]
     510:	cmp	r3, #32
     514:	bls	520 <flatcc_json_parser_space+0x44>
     518:	ldr	r3, [fp, #-12]
     51c:	b	564 <flatcc_json_parser_space+0x88>
     520:	ldr	r3, [fp, #-12]
     524:	ldrb	r3, [r3]
     528:	cmp	r3, #32
     52c:	bne	550 <flatcc_json_parser_space+0x74>
     530:	ldr	r3, [fp, #-12]
     534:	add	r3, r3, #1
     538:	ldrb	r3, [r3]
     53c:	cmp	r3, #32
     540:	bls	550 <flatcc_json_parser_space+0x74>
     544:	ldr	r3, [fp, #-12]
     548:	add	r3, r3, #1
     54c:	b	564 <flatcc_json_parser_space+0x88>
     550:	ldr	r2, [fp, #-16]
     554:	ldr	r1, [fp, #-12]
     558:	ldr	r0, [fp, #-8]
     55c:	bl	0 <flatcc_json_parser_space_ext>
     560:	mov	r3, r0
     564:	mov	r0, r3
     568:	sub	sp, fp, #4
     56c:	pop	{fp, pc}

00000570 <flatcc_json_parser_symbol_start>:
     570:	push	{fp, lr}
     574:	add	fp, sp, #4
     578:	sub	sp, sp, #16
     57c:	str	r0, [fp, #-8]
     580:	str	r1, [fp, #-12]
     584:	str	r2, [fp, #-16]
     588:	ldr	r2, [fp, #-12]
     58c:	ldr	r3, [fp, #-16]
     590:	cmp	r2, r3
     594:	bne	5a0 <flatcc_json_parser_symbol_start+0x30>
     598:	ldr	r3, [fp, #-12]
     59c:	b	608 <flatcc_json_parser_symbol_start+0x98>
     5a0:	ldr	r3, [fp, #-12]
     5a4:	ldrb	r3, [r3]
     5a8:	cmp	r3, #34	; 0x22
     5ac:	bne	5cc <flatcc_json_parser_symbol_start+0x5c>
     5b0:	ldr	r3, [fp, #-12]
     5b4:	add	r3, r3, #1
     5b8:	str	r3, [fp, #-12]
     5bc:	ldr	r3, [fp, #-8]
     5c0:	mov	r2, #0
     5c4:	str	r2, [r3, #12]
     5c8:	b	604 <flatcc_json_parser_symbol_start+0x94>
     5cc:	ldr	r3, [fp, #-12]
     5d0:	ldrb	r3, [r3]
     5d4:	cmp	r3, #46	; 0x2e
     5d8:	bne	5f8 <flatcc_json_parser_symbol_start+0x88>
     5dc:	mov	r3, #5
     5e0:	ldr	r2, [fp, #-16]
     5e4:	ldr	r1, [fp, #-12]
     5e8:	ldr	r0, [fp, #-8]
     5ec:	bl	0 <flatcc_json_parser_set_error>
     5f0:	mov	r3, r0
     5f4:	b	608 <flatcc_json_parser_symbol_start+0x98>
     5f8:	ldr	r3, [fp, #-8]
     5fc:	mov	r2, #1
     600:	str	r2, [r3, #12]
     604:	ldr	r3, [fp, #-12]
     608:	mov	r0, r3
     60c:	sub	sp, fp, #4
     610:	pop	{fp, pc}

00000614 <flatcc_json_parser_symbol_part_ext>:
     614:	push	{r4, r5, r6, r7, r8, r9, fp}
     618:	add	fp, sp, #24
     61c:	sub	sp, sp, #60	; 0x3c
     620:	str	r0, [fp, #-48]	; 0xffffffd0
     624:	str	r1, [fp, #-52]	; 0xffffffcc
     628:	mov	r2, #0
     62c:	mov	r3, #0
     630:	strd	r2, [fp, #-36]	; 0xffffffdc
     634:	ldr	r2, [fp, #-52]	; 0xffffffcc
     638:	ldr	r3, [fp, #-48]	; 0xffffffd0
     63c:	sub	r3, r2, r3
     640:	str	r3, [fp, #-40]	; 0xffffffd8
     644:	ldr	r3, [fp, #-40]	; 0xffffffd8
     648:	cmp	r3, #8
     64c:	bls	658 <flatcc_json_parser_symbol_part_ext+0x44>
     650:	mov	r3, #8
     654:	str	r3, [fp, #-40]	; 0xffffffd8
     658:	ldr	r3, [fp, #-40]	; 0xffffffd8
     65c:	cmp	r3, #8
     660:	ldrls	pc, [pc, r3, lsl #2]
     664:	b	83c <flatcc_json_parser_symbol_part_ext+0x228>
     668:	.word	0x0000083c
     66c:	.word	0x000007fc
     670:	.word	0x000007bc
     674:	.word	0x0000077c
     678:	.word	0x0000073c
     67c:	.word	0x00000710
     680:	.word	0x000006e0
     684:	.word	0x000006b0
     688:	.word	0x0000068c
     68c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     690:	add	r3, r3, #7
     694:	ldrb	r3, [r3]
     698:	uxtb	r0, r3
     69c:	mov	r1, #0
     6a0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     6a4:	orr	r2, r2, r0
     6a8:	orr	r3, r3, r1
     6ac:	strd	r2, [fp, #-36]	; 0xffffffdc
     6b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
     6b4:	add	r3, r3, #6
     6b8:	ldrb	r3, [r3]
     6bc:	uxtb	r2, r3
     6c0:	mov	r3, #0
     6c4:	lsl	r5, r3, #8
     6c8:	orr	r5, r5, r2, lsr #24
     6cc:	lsl	r4, r2, #8
     6d0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     6d4:	orr	r2, r2, r4
     6d8:	orr	r3, r3, r5
     6dc:	strd	r2, [fp, #-36]	; 0xffffffdc
     6e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
     6e4:	add	r3, r3, #5
     6e8:	ldrb	r3, [r3]
     6ec:	uxtb	r2, r3
     6f0:	mov	r3, #0
     6f4:	lsl	r7, r3, #16
     6f8:	orr	r7, r7, r2, lsr #16
     6fc:	lsl	r6, r2, #16
     700:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     704:	orr	r2, r2, r6
     708:	orr	r3, r3, r7
     70c:	strd	r2, [fp, #-36]	; 0xffffffdc
     710:	ldr	r3, [fp, #-48]	; 0xffffffd0
     714:	add	r3, r3, #4
     718:	ldrb	r3, [r3]
     71c:	uxtb	r2, r3
     720:	mov	r3, #0
     724:	lsr	r9, r2, #8
     728:	lsl	r8, r2, #24
     72c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     730:	orr	r2, r2, r8
     734:	orr	r3, r3, r9
     738:	strd	r2, [fp, #-36]	; 0xffffffdc
     73c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     740:	add	r3, r3, #3
     744:	ldrb	r3, [r3]
     748:	uxtb	r2, r3
     74c:	mov	r3, #0
     750:	mov	r3, r2
     754:	str	r3, [fp, #-56]	; 0xffffffc8
     758:	mov	r3, #0
     75c:	str	r3, [fp, #-60]	; 0xffffffc4
     760:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     764:	ldrd	r0, [fp, #-60]	; 0xffffffc4
     768:	orr	r0, r0, r2
     76c:	orr	r1, r1, r3
     770:	mov	r2, r0
     774:	mov	r3, r1
     778:	strd	r2, [fp, #-36]	; 0xffffffdc
     77c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     780:	add	r3, r3, #2
     784:	ldrb	r3, [r3]
     788:	uxtb	r2, r3
     78c:	mov	r3, #0
     790:	lsl	r3, r2, #8
     794:	str	r3, [fp, #-64]	; 0xffffffc0
     798:	mov	r3, #0
     79c:	str	r3, [fp, #-68]	; 0xffffffbc
     7a0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     7a4:	ldrd	r0, [fp, #-68]	; 0xffffffbc
     7a8:	orr	r0, r0, r2
     7ac:	orr	r1, r1, r3
     7b0:	mov	r2, r0
     7b4:	mov	r3, r1
     7b8:	strd	r2, [fp, #-36]	; 0xffffffdc
     7bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
     7c0:	add	r3, r3, #1
     7c4:	ldrb	r3, [r3]
     7c8:	uxtb	r2, r3
     7cc:	mov	r3, #0
     7d0:	lsl	r3, r2, #16
     7d4:	str	r3, [fp, #-72]	; 0xffffffb8
     7d8:	mov	r3, #0
     7dc:	str	r3, [fp, #-76]	; 0xffffffb4
     7e0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     7e4:	ldrd	r0, [fp, #-76]	; 0xffffffb4
     7e8:	orr	r0, r0, r2
     7ec:	orr	r1, r1, r3
     7f0:	mov	r2, r0
     7f4:	mov	r3, r1
     7f8:	strd	r2, [fp, #-36]	; 0xffffffdc
     7fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
     800:	ldrb	r3, [r3]
     804:	uxtb	r2, r3
     808:	mov	r3, #0
     80c:	lsl	r3, r2, #24
     810:	str	r3, [fp, #-80]	; 0xffffffb0
     814:	mov	r3, #0
     818:	str	r3, [fp, #-84]	; 0xffffffac
     81c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     820:	ldrd	r0, [fp, #-84]	; 0xffffffac
     824:	orr	r0, r0, r2
     828:	orr	r1, r1, r3
     82c:	mov	r2, r0
     830:	mov	r3, r1
     834:	strd	r2, [fp, #-36]	; 0xffffffdc
     838:	nop			; (mov r0, r0)
     83c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     840:	mov	r0, r2
     844:	mov	r1, r3
     848:	sub	sp, fp, #24
     84c:	pop	{r4, r5, r6, r7, r8, r9, fp}
     850:	bx	lr

00000854 <flatcc_json_parser_symbol_part>:
     854:	push	{fp, lr}
     858:	add	fp, sp, #4
     85c:	sub	sp, sp, #16
     860:	str	r0, [fp, #-16]
     864:	str	r1, [fp, #-20]	; 0xffffffec
     868:	ldr	r2, [fp, #-20]	; 0xffffffec
     86c:	ldr	r3, [fp, #-16]
     870:	sub	r3, r2, r3
     874:	str	r3, [fp, #-8]
     878:	ldr	r1, [fp, #-20]	; 0xffffffec
     87c:	ldr	r0, [fp, #-16]
     880:	bl	614 <flatcc_json_parser_symbol_part_ext>
     884:	mov	r2, r0
     888:	mov	r3, r1
     88c:	mov	r0, r2
     890:	mov	r1, r3
     894:	sub	sp, fp, #4
     898:	pop	{fp, pc}

0000089c <flatcc_json_parser_match_scope>:
     89c:	push	{fp}		; (str fp, [sp, #-4]!)
     8a0:	add	fp, sp, #0
     8a4:	sub	sp, sp, #28
     8a8:	str	r0, [fp, #-16]
     8ac:	str	r1, [fp, #-20]	; 0xffffffec
     8b0:	str	r2, [fp, #-24]	; 0xffffffe8
     8b4:	str	r3, [fp, #-28]	; 0xffffffe4
     8b8:	ldr	r3, [fp, #-20]	; 0xffffffec
     8bc:	str	r3, [fp, #-8]
     8c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     8c4:	ldr	r3, [fp, #-20]	; 0xffffffec
     8c8:	sub	r2, r2, r3
     8cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     8d0:	cmp	r2, r3
     8d4:	bgt	8e0 <flatcc_json_parser_match_scope+0x44>
     8d8:	ldr	r3, [fp, #-8]
     8dc:	b	910 <flatcc_json_parser_match_scope+0x74>
     8e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     8e4:	ldr	r2, [fp, #-20]	; 0xffffffec
     8e8:	add	r3, r2, r3
     8ec:	ldrb	r3, [r3]
     8f0:	cmp	r3, #46	; 0x2e
     8f4:	beq	900 <flatcc_json_parser_match_scope+0x64>
     8f8:	ldr	r3, [fp, #-8]
     8fc:	b	910 <flatcc_json_parser_match_scope+0x74>
     900:	ldr	r3, [fp, #-28]	; 0xffffffe4
     904:	add	r3, r3, #1
     908:	ldr	r2, [fp, #-20]	; 0xffffffec
     90c:	add	r3, r2, r3
     910:	mov	r0, r3
     914:	add	sp, fp, #0
     918:	pop	{fp}		; (ldr fp, [sp], #4)
     91c:	bx	lr

00000920 <flatcc_json_parser_constant_start>:
     920:	push	{fp, lr}
     924:	add	fp, sp, #4
     928:	sub	sp, sp, #16
     92c:	str	r0, [fp, #-8]
     930:	str	r1, [fp, #-12]
     934:	str	r2, [fp, #-16]
     938:	ldr	r2, [fp, #-16]
     93c:	ldr	r1, [fp, #-12]
     940:	ldr	r0, [fp, #-8]
     944:	bl	570 <flatcc_json_parser_symbol_start>
     948:	str	r0, [fp, #-12]
     94c:	ldr	r3, [fp, #-8]
     950:	ldr	r3, [r3, #12]
     954:	cmp	r3, #0
     958:	bne	970 <flatcc_json_parser_constant_start+0x50>
     95c:	ldr	r2, [fp, #-16]
     960:	ldr	r1, [fp, #-12]
     964:	ldr	r0, [fp, #-8]
     968:	bl	4dc <flatcc_json_parser_space>
     96c:	str	r0, [fp, #-12]
     970:	ldr	r3, [fp, #-12]
     974:	mov	r0, r3
     978:	sub	sp, fp, #4
     97c:	pop	{fp, pc}

00000980 <flatcc_json_parser_object_start>:
     980:	push	{fp, lr}
     984:	add	fp, sp, #4
     988:	sub	sp, sp, #16
     98c:	str	r0, [fp, #-8]
     990:	str	r1, [fp, #-12]
     994:	str	r2, [fp, #-16]
     998:	str	r3, [fp, #-20]	; 0xffffffec
     99c:	ldr	r2, [fp, #-12]
     9a0:	ldr	r3, [fp, #-16]
     9a4:	cmp	r2, r3
     9a8:	beq	9bc <flatcc_json_parser_object_start+0x3c>
     9ac:	ldr	r3, [fp, #-12]
     9b0:	ldrb	r3, [r3]
     9b4:	cmp	r3, #123	; 0x7b
     9b8:	beq	9e4 <flatcc_json_parser_object_start+0x64>
     9bc:	ldr	r3, [fp, #-20]	; 0xffffffec
     9c0:	mov	r2, #0
     9c4:	str	r2, [r3]
     9c8:	mov	r3, #21
     9cc:	ldr	r2, [fp, #-16]
     9d0:	ldr	r1, [fp, #-12]
     9d4:	ldr	r0, [fp, #-8]
     9d8:	bl	0 <flatcc_json_parser_set_error>
     9dc:	mov	r3, r0
     9e0:	b	a5c <flatcc_json_parser_object_start+0xdc>
     9e4:	ldr	r3, [fp, #-12]
     9e8:	add	r3, r3, #1
     9ec:	ldr	r2, [fp, #-16]
     9f0:	mov	r1, r3
     9f4:	ldr	r0, [fp, #-8]
     9f8:	bl	4dc <flatcc_json_parser_space>
     9fc:	str	r0, [fp, #-12]
     a00:	ldr	r2, [fp, #-12]
     a04:	ldr	r3, [fp, #-16]
     a08:	cmp	r2, r3
     a0c:	beq	a4c <flatcc_json_parser_object_start+0xcc>
     a10:	ldr	r3, [fp, #-12]
     a14:	ldrb	r3, [r3]
     a18:	cmp	r3, #125	; 0x7d
     a1c:	bne	a4c <flatcc_json_parser_object_start+0xcc>
     a20:	ldr	r3, [fp, #-20]	; 0xffffffec
     a24:	mov	r2, #0
     a28:	str	r2, [r3]
     a2c:	ldr	r3, [fp, #-12]
     a30:	add	r3, r3, #1
     a34:	ldr	r2, [fp, #-16]
     a38:	mov	r1, r3
     a3c:	ldr	r0, [fp, #-8]
     a40:	bl	4dc <flatcc_json_parser_space>
     a44:	mov	r3, r0
     a48:	b	a5c <flatcc_json_parser_object_start+0xdc>
     a4c:	ldr	r3, [fp, #-20]	; 0xffffffec
     a50:	mov	r2, #1
     a54:	str	r2, [r3]
     a58:	ldr	r3, [fp, #-12]
     a5c:	mov	r0, r3
     a60:	sub	sp, fp, #4
     a64:	pop	{fp, pc}

00000a68 <flatcc_json_parser_object_end>:
     a68:	push	{fp, lr}
     a6c:	add	fp, sp, #4
     a70:	sub	sp, sp, #16
     a74:	str	r0, [fp, #-8]
     a78:	str	r1, [fp, #-12]
     a7c:	str	r2, [fp, #-16]
     a80:	str	r3, [fp, #-20]	; 0xffffffec
     a84:	ldr	r2, [fp, #-16]
     a88:	ldr	r1, [fp, #-12]
     a8c:	ldr	r0, [fp, #-8]
     a90:	bl	4dc <flatcc_json_parser_space>
     a94:	str	r0, [fp, #-12]
     a98:	ldr	r2, [fp, #-12]
     a9c:	ldr	r3, [fp, #-16]
     aa0:	cmp	r2, r3
     aa4:	bne	abc <flatcc_json_parser_object_end+0x54>
     aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
     aac:	mov	r2, #0
     ab0:	str	r2, [r3]
     ab4:	ldr	r3, [fp, #-12]
     ab8:	b	bc4 <flatcc_json_parser_object_end+0x15c>
     abc:	ldr	r3, [fp, #-12]
     ac0:	ldrb	r3, [r3]
     ac4:	cmp	r3, #44	; 0x2c
     ac8:	beq	b24 <flatcc_json_parser_object_end+0xbc>
     acc:	ldr	r3, [fp, #-20]	; 0xffffffec
     ad0:	mov	r2, #0
     ad4:	str	r2, [r3]
     ad8:	ldr	r3, [fp, #-12]
     adc:	ldrb	r3, [r3]
     ae0:	cmp	r3, #125	; 0x7d
     ae4:	beq	b04 <flatcc_json_parser_object_end+0x9c>
     ae8:	mov	r3, #10
     aec:	ldr	r2, [fp, #-16]
     af0:	ldr	r1, [fp, #-12]
     af4:	ldr	r0, [fp, #-8]
     af8:	bl	0 <flatcc_json_parser_set_error>
     afc:	mov	r3, r0
     b00:	b	bc4 <flatcc_json_parser_object_end+0x15c>
     b04:	ldr	r3, [fp, #-12]
     b08:	add	r3, r3, #1
     b0c:	ldr	r2, [fp, #-16]
     b10:	mov	r1, r3
     b14:	ldr	r0, [fp, #-8]
     b18:	bl	4dc <flatcc_json_parser_space>
     b1c:	mov	r3, r0
     b20:	b	bc4 <flatcc_json_parser_object_end+0x15c>
     b24:	ldr	r3, [fp, #-12]
     b28:	add	r3, r3, #1
     b2c:	ldr	r2, [fp, #-16]
     b30:	mov	r1, r3
     b34:	ldr	r0, [fp, #-8]
     b38:	bl	4dc <flatcc_json_parser_space>
     b3c:	str	r0, [fp, #-12]
     b40:	ldr	r2, [fp, #-12]
     b44:	ldr	r3, [fp, #-16]
     b48:	cmp	r2, r3
     b4c:	bne	b78 <flatcc_json_parser_object_end+0x110>
     b50:	ldr	r3, [fp, #-20]	; 0xffffffec
     b54:	mov	r2, #0
     b58:	str	r2, [r3]
     b5c:	mov	r3, #10
     b60:	ldr	r2, [fp, #-16]
     b64:	ldr	r1, [fp, #-12]
     b68:	ldr	r0, [fp, #-8]
     b6c:	bl	0 <flatcc_json_parser_set_error>
     b70:	mov	r3, r0
     b74:	b	bc4 <flatcc_json_parser_object_end+0x15c>
     b78:	ldr	r3, [fp, #-12]
     b7c:	ldrb	r3, [r3]
     b80:	cmp	r3, #125	; 0x7d
     b84:	bne	bb4 <flatcc_json_parser_object_end+0x14c>
     b88:	ldr	r3, [fp, #-20]	; 0xffffffec
     b8c:	mov	r2, #0
     b90:	str	r2, [r3]
     b94:	ldr	r3, [fp, #-12]
     b98:	add	r3, r3, #1
     b9c:	ldr	r2, [fp, #-16]
     ba0:	mov	r1, r3
     ba4:	ldr	r0, [fp, #-8]
     ba8:	bl	4dc <flatcc_json_parser_space>
     bac:	mov	r3, r0
     bb0:	b	bc4 <flatcc_json_parser_object_end+0x15c>
     bb4:	ldr	r3, [fp, #-20]	; 0xffffffec
     bb8:	mov	r2, #1
     bbc:	str	r2, [r3]
     bc0:	ldr	r3, [fp, #-12]
     bc4:	mov	r0, r3
     bc8:	sub	sp, fp, #4
     bcc:	pop	{fp, pc}

00000bd0 <flatcc_json_parser_array_start>:
     bd0:	push	{fp, lr}
     bd4:	add	fp, sp, #4
     bd8:	sub	sp, sp, #16
     bdc:	str	r0, [fp, #-8]
     be0:	str	r1, [fp, #-12]
     be4:	str	r2, [fp, #-16]
     be8:	str	r3, [fp, #-20]	; 0xffffffec
     bec:	ldr	r2, [fp, #-12]
     bf0:	ldr	r3, [fp, #-16]
     bf4:	cmp	r2, r3
     bf8:	beq	c0c <flatcc_json_parser_array_start+0x3c>
     bfc:	ldr	r3, [fp, #-12]
     c00:	ldrb	r3, [r3]
     c04:	cmp	r3, #91	; 0x5b
     c08:	beq	c34 <flatcc_json_parser_array_start+0x64>
     c0c:	ldr	r3, [fp, #-20]	; 0xffffffec
     c10:	mov	r2, #0
     c14:	str	r2, [r3]
     c18:	mov	r3, #22
     c1c:	ldr	r2, [fp, #-16]
     c20:	ldr	r1, [fp, #-12]
     c24:	ldr	r0, [fp, #-8]
     c28:	bl	0 <flatcc_json_parser_set_error>
     c2c:	mov	r3, r0
     c30:	b	cac <flatcc_json_parser_array_start+0xdc>
     c34:	ldr	r3, [fp, #-12]
     c38:	add	r3, r3, #1
     c3c:	ldr	r2, [fp, #-16]
     c40:	mov	r1, r3
     c44:	ldr	r0, [fp, #-8]
     c48:	bl	4dc <flatcc_json_parser_space>
     c4c:	str	r0, [fp, #-12]
     c50:	ldr	r2, [fp, #-12]
     c54:	ldr	r3, [fp, #-16]
     c58:	cmp	r2, r3
     c5c:	beq	c9c <flatcc_json_parser_array_start+0xcc>
     c60:	ldr	r3, [fp, #-12]
     c64:	ldrb	r3, [r3]
     c68:	cmp	r3, #93	; 0x5d
     c6c:	bne	c9c <flatcc_json_parser_array_start+0xcc>
     c70:	ldr	r3, [fp, #-20]	; 0xffffffec
     c74:	mov	r2, #0
     c78:	str	r2, [r3]
     c7c:	ldr	r3, [fp, #-12]
     c80:	add	r3, r3, #1
     c84:	ldr	r2, [fp, #-16]
     c88:	mov	r1, r3
     c8c:	ldr	r0, [fp, #-8]
     c90:	bl	4dc <flatcc_json_parser_space>
     c94:	mov	r3, r0
     c98:	b	cac <flatcc_json_parser_array_start+0xdc>
     c9c:	ldr	r3, [fp, #-20]	; 0xffffffec
     ca0:	mov	r2, #1
     ca4:	str	r2, [r3]
     ca8:	ldr	r3, [fp, #-12]
     cac:	mov	r0, r3
     cb0:	sub	sp, fp, #4
     cb4:	pop	{fp, pc}

00000cb8 <flatcc_json_parser_array_end>:
     cb8:	push	{fp, lr}
     cbc:	add	fp, sp, #4
     cc0:	sub	sp, sp, #16
     cc4:	str	r0, [fp, #-8]
     cc8:	str	r1, [fp, #-12]
     ccc:	str	r2, [fp, #-16]
     cd0:	str	r3, [fp, #-20]	; 0xffffffec
     cd4:	ldr	r2, [fp, #-16]
     cd8:	ldr	r1, [fp, #-12]
     cdc:	ldr	r0, [fp, #-8]
     ce0:	bl	4dc <flatcc_json_parser_space>
     ce4:	str	r0, [fp, #-12]
     ce8:	ldr	r2, [fp, #-12]
     cec:	ldr	r3, [fp, #-16]
     cf0:	cmp	r2, r3
     cf4:	bne	d0c <flatcc_json_parser_array_end+0x54>
     cf8:	ldr	r3, [fp, #-20]	; 0xffffffec
     cfc:	mov	r2, #0
     d00:	str	r2, [r3]
     d04:	ldr	r3, [fp, #-12]
     d08:	b	e14 <flatcc_json_parser_array_end+0x15c>
     d0c:	ldr	r3, [fp, #-12]
     d10:	ldrb	r3, [r3]
     d14:	cmp	r3, #44	; 0x2c
     d18:	beq	d74 <flatcc_json_parser_array_end+0xbc>
     d1c:	ldr	r3, [fp, #-20]	; 0xffffffec
     d20:	mov	r2, #0
     d24:	str	r2, [r3]
     d28:	ldr	r3, [fp, #-12]
     d2c:	ldrb	r3, [r3]
     d30:	cmp	r3, #93	; 0x5d
     d34:	beq	d54 <flatcc_json_parser_array_end+0x9c>
     d38:	mov	r3, #9
     d3c:	ldr	r2, [fp, #-16]
     d40:	ldr	r1, [fp, #-12]
     d44:	ldr	r0, [fp, #-8]
     d48:	bl	0 <flatcc_json_parser_set_error>
     d4c:	mov	r3, r0
     d50:	b	e14 <flatcc_json_parser_array_end+0x15c>
     d54:	ldr	r3, [fp, #-12]
     d58:	add	r3, r3, #1
     d5c:	ldr	r2, [fp, #-16]
     d60:	mov	r1, r3
     d64:	ldr	r0, [fp, #-8]
     d68:	bl	4dc <flatcc_json_parser_space>
     d6c:	mov	r3, r0
     d70:	b	e14 <flatcc_json_parser_array_end+0x15c>
     d74:	ldr	r3, [fp, #-12]
     d78:	add	r3, r3, #1
     d7c:	ldr	r2, [fp, #-16]
     d80:	mov	r1, r3
     d84:	ldr	r0, [fp, #-8]
     d88:	bl	4dc <flatcc_json_parser_space>
     d8c:	str	r0, [fp, #-12]
     d90:	ldr	r2, [fp, #-12]
     d94:	ldr	r3, [fp, #-16]
     d98:	cmp	r2, r3
     d9c:	bne	dc8 <flatcc_json_parser_array_end+0x110>
     da0:	ldr	r3, [fp, #-20]	; 0xffffffec
     da4:	mov	r2, #0
     da8:	str	r2, [r3]
     dac:	mov	r3, #9
     db0:	ldr	r2, [fp, #-16]
     db4:	ldr	r1, [fp, #-12]
     db8:	ldr	r0, [fp, #-8]
     dbc:	bl	0 <flatcc_json_parser_set_error>
     dc0:	mov	r3, r0
     dc4:	b	e14 <flatcc_json_parser_array_end+0x15c>
     dc8:	ldr	r3, [fp, #-12]
     dcc:	ldrb	r3, [r3]
     dd0:	cmp	r3, #93	; 0x5d
     dd4:	bne	e04 <flatcc_json_parser_array_end+0x14c>
     dd8:	ldr	r3, [fp, #-20]	; 0xffffffec
     ddc:	mov	r2, #0
     de0:	str	r2, [r3]
     de4:	ldr	r3, [fp, #-12]
     de8:	add	r3, r3, #1
     dec:	ldr	r2, [fp, #-16]
     df0:	mov	r1, r3
     df4:	ldr	r0, [fp, #-8]
     df8:	bl	4dc <flatcc_json_parser_space>
     dfc:	mov	r3, r0
     e00:	b	e14 <flatcc_json_parser_array_end+0x15c>
     e04:	ldr	r3, [fp, #-20]	; 0xffffffec
     e08:	mov	r2, #1
     e0c:	str	r2, [r3]
     e10:	ldr	r3, [fp, #-12]
     e14:	mov	r0, r3
     e18:	sub	sp, fp, #4
     e1c:	pop	{fp, pc}

00000e20 <flatcc_json_parser_match_symbol>:
     e20:	push	{fp, lr}
     e24:	add	fp, sp, #4
     e28:	sub	sp, sp, #24
     e2c:	str	r0, [fp, #-16]
     e30:	str	r1, [fp, #-20]	; 0xffffffec
     e34:	str	r2, [fp, #-24]	; 0xffffffe8
     e38:	str	r3, [fp, #-28]	; 0xffffffe4
     e3c:	ldr	r3, [fp, #-20]	; 0xffffffec
     e40:	str	r3, [fp, #-8]
     e44:	ldr	r2, [fp, #-24]	; 0xffffffe8
     e48:	ldr	r3, [fp, #-20]	; 0xffffffec
     e4c:	sub	r2, r2, r3
     e50:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e54:	cmp	r2, r3
     e58:	bgt	e64 <flatcc_json_parser_match_symbol+0x44>
     e5c:	ldr	r3, [fp, #-8]
     e60:	b	f70 <flatcc_json_parser_match_symbol+0x150>
     e64:	ldr	r3, [fp, #-16]
     e68:	ldr	r3, [r3, #12]
     e6c:	cmp	r3, #0
     e70:	beq	ecc <flatcc_json_parser_match_symbol+0xac>
     e74:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e78:	ldr	r2, [fp, #-20]	; 0xffffffec
     e7c:	add	r3, r2, r3
     e80:	ldrb	r3, [r3]
     e84:	cmp	r3, #32
     e88:	bls	eac <flatcc_json_parser_match_symbol+0x8c>
     e8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e90:	ldr	r2, [fp, #-20]	; 0xffffffec
     e94:	add	r3, r2, r3
     e98:	ldrb	r3, [r3]
     e9c:	cmp	r3, #58	; 0x3a
     ea0:	beq	eac <flatcc_json_parser_match_symbol+0x8c>
     ea4:	ldr	r3, [fp, #-8]
     ea8:	b	f70 <flatcc_json_parser_match_symbol+0x150>
     eac:	ldr	r3, [fp, #-28]	; 0xffffffe4
     eb0:	ldr	r2, [fp, #-20]	; 0xffffffec
     eb4:	add	r3, r2, r3
     eb8:	str	r3, [fp, #-20]	; 0xffffffec
     ebc:	ldr	r3, [fp, #-16]
     ec0:	mov	r2, #0
     ec4:	str	r2, [r3, #12]
     ec8:	b	f00 <flatcc_json_parser_match_symbol+0xe0>
     ecc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ed0:	ldr	r2, [fp, #-20]	; 0xffffffec
     ed4:	add	r3, r2, r3
     ed8:	ldrb	r3, [r3]
     edc:	cmp	r3, #34	; 0x22
     ee0:	beq	eec <flatcc_json_parser_match_symbol+0xcc>
     ee4:	ldr	r3, [fp, #-8]
     ee8:	b	f70 <flatcc_json_parser_match_symbol+0x150>
     eec:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ef0:	add	r3, r3, #1
     ef4:	ldr	r2, [fp, #-20]	; 0xffffffec
     ef8:	add	r3, r2, r3
     efc:	str	r3, [fp, #-20]	; 0xffffffec
     f00:	ldr	r2, [fp, #-24]	; 0xffffffe8
     f04:	ldr	r1, [fp, #-20]	; 0xffffffec
     f08:	ldr	r0, [fp, #-16]
     f0c:	bl	4dc <flatcc_json_parser_space>
     f10:	str	r0, [fp, #-20]	; 0xffffffec
     f14:	ldr	r2, [fp, #-20]	; 0xffffffec
     f18:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f1c:	cmp	r2, r3
     f20:	beq	f58 <flatcc_json_parser_match_symbol+0x138>
     f24:	ldr	r3, [fp, #-20]	; 0xffffffec
     f28:	ldrb	r3, [r3]
     f2c:	cmp	r3, #58	; 0x3a
     f30:	bne	f58 <flatcc_json_parser_match_symbol+0x138>
     f34:	ldr	r3, [fp, #-20]	; 0xffffffec
     f38:	add	r3, r3, #1
     f3c:	str	r3, [fp, #-20]	; 0xffffffec
     f40:	ldr	r2, [fp, #-24]	; 0xffffffe8
     f44:	ldr	r1, [fp, #-20]	; 0xffffffec
     f48:	ldr	r0, [fp, #-16]
     f4c:	bl	4dc <flatcc_json_parser_space>
     f50:	mov	r3, r0
     f54:	b	f70 <flatcc_json_parser_match_symbol+0x150>
     f58:	mov	r3, #4
     f5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     f60:	ldr	r1, [fp, #-20]	; 0xffffffec
     f64:	ldr	r0, [fp, #-16]
     f68:	bl	0 <flatcc_json_parser_set_error>
     f6c:	mov	r3, r0
     f70:	mov	r0, r3
     f74:	sub	sp, fp, #4
     f78:	pop	{fp, pc}

00000f7c <flatcc_json_parser_coerce_uint64>:
     f7c:	push	{fp, lr}
     f80:	add	fp, sp, #4
     f84:	sub	sp, sp, #16
     f88:	str	r0, [fp, #-8]
     f8c:	str	r1, [fp, #-12]
     f90:	str	r2, [fp, #-16]
     f94:	str	r3, [fp, #-20]	; 0xffffffec
     f98:	ldr	r3, [fp, #-20]	; 0xffffffec
     f9c:	cmp	r3, #0
     fa0:	beq	fc0 <flatcc_json_parser_coerce_uint64+0x44>
     fa4:	mov	r3, #8
     fa8:	ldr	r2, [fp, #-16]
     fac:	ldr	r1, [fp, #-12]
     fb0:	ldr	r0, [fp, #-8]
     fb4:	bl	0 <flatcc_json_parser_set_error>
     fb8:	mov	r3, r0
     fbc:	b	fd0 <flatcc_json_parser_coerce_uint64+0x54>
     fc0:	ldr	r1, [fp, #12]
     fc4:	ldrd	r2, [fp, #4]
     fc8:	strd	r2, [r1]
     fcc:	ldr	r3, [fp, #-12]
     fd0:	mov	r0, r3
     fd4:	sub	sp, fp, #4
     fd8:	pop	{fp, pc}

00000fdc <flatcc_json_parser_coerce_bool>:
     fdc:	push	{fp, lr}
     fe0:	add	fp, sp, #4
     fe4:	sub	sp, sp, #16
     fe8:	str	r0, [fp, #-8]
     fec:	str	r1, [fp, #-12]
     ff0:	str	r2, [fp, #-16]
     ff4:	str	r3, [fp, #-20]	; 0xffffffec
     ff8:	ldr	r3, [fp, #-20]	; 0xffffffec
     ffc:	cmp	r3, #0
    1000:	beq	1020 <flatcc_json_parser_coerce_bool+0x44>
    1004:	mov	r3, #8
    1008:	ldr	r2, [fp, #-16]
    100c:	ldr	r1, [fp, #-12]
    1010:	ldr	r0, [fp, #-8]
    1014:	bl	0 <flatcc_json_parser_set_error>
    1018:	mov	r3, r0
    101c:	b	104c <flatcc_json_parser_coerce_bool+0x70>
    1020:	ldr	r2, [fp, #4]
    1024:	ldr	r3, [fp, #8]
    1028:	orr	r3, r2, r3
    102c:	cmp	r3, #0
    1030:	movne	r3, #1
    1034:	moveq	r3, #0
    1038:	uxtb	r3, r3
    103c:	mov	r2, r3
    1040:	ldr	r3, [fp, #12]
    1044:	strb	r2, [r3]
    1048:	ldr	r3, [fp, #-12]
    104c:	mov	r0, r3
    1050:	sub	sp, fp, #4
    1054:	pop	{fp, pc}

00001058 <flatcc_json_parser_coerce_uint32>:
    1058:	push	{fp, lr}
    105c:	add	fp, sp, #4
    1060:	sub	sp, sp, #16
    1064:	str	r0, [fp, #-8]
    1068:	str	r1, [fp, #-12]
    106c:	str	r2, [fp, #-16]
    1070:	str	r3, [fp, #-20]	; 0xffffffec
    1074:	ldr	r3, [fp, #-20]	; 0xffffffec
    1078:	cmp	r3, #0
    107c:	beq	109c <flatcc_json_parser_coerce_uint32+0x44>
    1080:	mov	r3, #8
    1084:	ldr	r2, [fp, #-16]
    1088:	ldr	r1, [fp, #-12]
    108c:	ldr	r0, [fp, #-8]
    1090:	bl	0 <flatcc_json_parser_set_error>
    1094:	mov	r3, r0
    1098:	b	10e0 <flatcc_json_parser_coerce_uint32+0x88>
    109c:	ldrd	r2, [fp, #4]
    10a0:	mvn	r0, #0
    10a4:	mov	r1, #0
    10a8:	cmp	r3, r1
    10ac:	cmpeq	r2, r0
    10b0:	bls	10d0 <flatcc_json_parser_coerce_uint32+0x78>
    10b4:	mov	r3, #7
    10b8:	ldr	r2, [fp, #-16]
    10bc:	ldr	r1, [fp, #-12]
    10c0:	ldr	r0, [fp, #-8]
    10c4:	bl	0 <flatcc_json_parser_set_error>
    10c8:	mov	r3, r0
    10cc:	b	10e0 <flatcc_json_parser_coerce_uint32+0x88>
    10d0:	ldr	r2, [fp, #4]
    10d4:	ldr	r3, [fp, #12]
    10d8:	str	r2, [r3]
    10dc:	ldr	r3, [fp, #-12]
    10e0:	mov	r0, r3
    10e4:	sub	sp, fp, #4
    10e8:	pop	{fp, pc}

000010ec <flatcc_json_parser_coerce_uint16>:
    10ec:	push	{fp, lr}
    10f0:	add	fp, sp, #4
    10f4:	sub	sp, sp, #16
    10f8:	str	r0, [fp, #-8]
    10fc:	str	r1, [fp, #-12]
    1100:	str	r2, [fp, #-16]
    1104:	str	r3, [fp, #-20]	; 0xffffffec
    1108:	ldr	r3, [fp, #-20]	; 0xffffffec
    110c:	cmp	r3, #0
    1110:	beq	1130 <flatcc_json_parser_coerce_uint16+0x44>
    1114:	mov	r3, #8
    1118:	ldr	r2, [fp, #-16]
    111c:	ldr	r1, [fp, #-12]
    1120:	ldr	r0, [fp, #-8]
    1124:	bl	0 <flatcc_json_parser_set_error>
    1128:	mov	r3, r0
    112c:	b	1174 <flatcc_json_parser_coerce_uint16+0x88>
    1130:	ldrd	r2, [fp, #4]
    1134:	ldr	r0, [pc, #68]	; 1180 <flatcc_json_parser_coerce_uint16+0x94>
    1138:	mov	r1, #0
    113c:	cmp	r3, r1
    1140:	cmpeq	r2, r0
    1144:	bls	1164 <flatcc_json_parser_coerce_uint16+0x78>
    1148:	mov	r3, #7
    114c:	ldr	r2, [fp, #-16]
    1150:	ldr	r1, [fp, #-12]
    1154:	ldr	r0, [fp, #-8]
    1158:	bl	0 <flatcc_json_parser_set_error>
    115c:	mov	r3, r0
    1160:	b	1174 <flatcc_json_parser_coerce_uint16+0x88>
    1164:	ldrh	r2, [fp, #4]
    1168:	ldr	r3, [fp, #12]
    116c:	strh	r2, [r3]
    1170:	ldr	r3, [fp, #-12]
    1174:	mov	r0, r3
    1178:	sub	sp, fp, #4
    117c:	pop	{fp, pc}
    1180:	.word	0x0000ffff

00001184 <flatcc_json_parser_coerce_uint8>:
    1184:	push	{fp, lr}
    1188:	add	fp, sp, #4
    118c:	sub	sp, sp, #16
    1190:	str	r0, [fp, #-8]
    1194:	str	r1, [fp, #-12]
    1198:	str	r2, [fp, #-16]
    119c:	str	r3, [fp, #-20]	; 0xffffffec
    11a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    11a4:	cmp	r3, #0
    11a8:	beq	11c8 <flatcc_json_parser_coerce_uint8+0x44>
    11ac:	mov	r3, #8
    11b0:	ldr	r2, [fp, #-16]
    11b4:	ldr	r1, [fp, #-12]
    11b8:	ldr	r0, [fp, #-8]
    11bc:	bl	0 <flatcc_json_parser_set_error>
    11c0:	mov	r3, r0
    11c4:	b	1204 <flatcc_json_parser_coerce_uint8+0x80>
    11c8:	ldrd	r2, [fp, #4]
    11cc:	cmp	r3, #0
    11d0:	cmpeq	r2, #255	; 0xff
    11d4:	bls	11f4 <flatcc_json_parser_coerce_uint8+0x70>
    11d8:	mov	r3, #7
    11dc:	ldr	r2, [fp, #-16]
    11e0:	ldr	r1, [fp, #-12]
    11e4:	ldr	r0, [fp, #-8]
    11e8:	bl	0 <flatcc_json_parser_set_error>
    11ec:	mov	r3, r0
    11f0:	b	1204 <flatcc_json_parser_coerce_uint8+0x80>
    11f4:	ldrb	r2, [fp, #4]
    11f8:	ldr	r3, [fp, #12]
    11fc:	strb	r2, [r3]
    1200:	ldr	r3, [fp, #-12]
    1204:	mov	r0, r3
    1208:	sub	sp, fp, #4
    120c:	pop	{fp, pc}

00001210 <flatcc_json_parser_coerce_int64>:
    1210:	push	{fp, lr}
    1214:	add	fp, sp, #4
    1218:	sub	sp, sp, #16
    121c:	str	r0, [fp, #-8]
    1220:	str	r1, [fp, #-12]
    1224:	str	r2, [fp, #-16]
    1228:	str	r3, [fp, #-20]	; 0xffffffec
    122c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1230:	cmp	r3, #0
    1234:	beq	127c <flatcc_json_parser_coerce_int64+0x6c>
    1238:	ldrd	r2, [fp, #4]
    123c:	cmp	r3, #-2147483648	; 0x80000000
    1240:	cmpeq	r2, #0
    1244:	bls	1264 <flatcc_json_parser_coerce_int64+0x54>
    1248:	mov	r3, #8
    124c:	ldr	r2, [fp, #-16]
    1250:	ldr	r1, [fp, #-12]
    1254:	ldr	r0, [fp, #-8]
    1258:	bl	0 <flatcc_json_parser_set_error>
    125c:	mov	r3, r0
    1260:	b	12b8 <flatcc_json_parser_coerce_int64+0xa8>
    1264:	ldrd	r2, [fp, #4]
    1268:	rsbs	r2, r2, #0
    126c:	rsc	r3, r3, #0
    1270:	ldr	r1, [fp, #12]
    1274:	strd	r2, [r1]
    1278:	b	12b4 <flatcc_json_parser_coerce_int64+0xa4>
    127c:	ldrd	r2, [fp, #4]
    1280:	cmp	r2, #0
    1284:	sbcs	r3, r3, #0
    1288:	bge	12a8 <flatcc_json_parser_coerce_int64+0x98>
    128c:	mov	r3, #7
    1290:	ldr	r2, [fp, #-16]
    1294:	ldr	r1, [fp, #-12]
    1298:	ldr	r0, [fp, #-8]
    129c:	bl	0 <flatcc_json_parser_set_error>
    12a0:	mov	r3, r0
    12a4:	b	12b8 <flatcc_json_parser_coerce_int64+0xa8>
    12a8:	ldrd	r2, [fp, #4]
    12ac:	ldr	r1, [fp, #12]
    12b0:	strd	r2, [r1]
    12b4:	ldr	r3, [fp, #-12]
    12b8:	mov	r0, r3
    12bc:	sub	sp, fp, #4
    12c0:	pop	{fp, pc}

000012c4 <flatcc_json_parser_coerce_int32>:
    12c4:	push	{fp, lr}
    12c8:	add	fp, sp, #4
    12cc:	sub	sp, sp, #16
    12d0:	str	r0, [fp, #-8]
    12d4:	str	r1, [fp, #-12]
    12d8:	str	r2, [fp, #-16]
    12dc:	str	r3, [fp, #-20]	; 0xffffffec
    12e0:	ldr	r3, [fp, #-20]	; 0xffffffec
    12e4:	cmp	r3, #0
    12e8:	beq	1330 <flatcc_json_parser_coerce_int32+0x6c>
    12ec:	ldrd	r2, [fp, #4]
    12f0:	cmp	r3, #0
    12f4:	cmpeq	r2, #-2147483648	; 0x80000000
    12f8:	bls	1318 <flatcc_json_parser_coerce_int32+0x54>
    12fc:	mov	r3, #8
    1300:	ldr	r2, [fp, #-16]
    1304:	ldr	r1, [fp, #-12]
    1308:	ldr	r0, [fp, #-8]
    130c:	bl	0 <flatcc_json_parser_set_error>
    1310:	mov	r3, r0
    1314:	b	1374 <flatcc_json_parser_coerce_int32+0xb0>
    1318:	ldr	r3, [fp, #4]
    131c:	rsb	r3, r3, #0
    1320:	mov	r2, r3
    1324:	ldr	r3, [fp, #12]
    1328:	str	r2, [r3]
    132c:	b	1370 <flatcc_json_parser_coerce_int32+0xac>
    1330:	ldrd	r2, [fp, #4]
    1334:	mvn	r0, #-2147483648	; 0x80000000
    1338:	mov	r1, #0
    133c:	cmp	r3, r1
    1340:	cmpeq	r2, r0
    1344:	bls	1364 <flatcc_json_parser_coerce_int32+0xa0>
    1348:	mov	r3, #7
    134c:	ldr	r2, [fp, #-16]
    1350:	ldr	r1, [fp, #-12]
    1354:	ldr	r0, [fp, #-8]
    1358:	bl	0 <flatcc_json_parser_set_error>
    135c:	mov	r3, r0
    1360:	b	1374 <flatcc_json_parser_coerce_int32+0xb0>
    1364:	ldr	r2, [fp, #4]
    1368:	ldr	r3, [fp, #12]
    136c:	str	r2, [r3]
    1370:	ldr	r3, [fp, #-12]
    1374:	mov	r0, r3
    1378:	sub	sp, fp, #4
    137c:	pop	{fp, pc}

00001380 <flatcc_json_parser_coerce_int16>:
    1380:	push	{fp, lr}
    1384:	add	fp, sp, #4
    1388:	sub	sp, sp, #16
    138c:	str	r0, [fp, #-8]
    1390:	str	r1, [fp, #-12]
    1394:	str	r2, [fp, #-16]
    1398:	str	r3, [fp, #-20]	; 0xffffffec
    139c:	ldr	r3, [fp, #-20]	; 0xffffffec
    13a0:	cmp	r3, #0
    13a4:	beq	13f0 <flatcc_json_parser_coerce_int16+0x70>
    13a8:	ldrd	r2, [fp, #4]
    13ac:	cmp	r3, #0
    13b0:	cmpeq	r2, #32768	; 0x8000
    13b4:	bls	13d4 <flatcc_json_parser_coerce_int16+0x54>
    13b8:	mov	r3, #8
    13bc:	ldr	r2, [fp, #-16]
    13c0:	ldr	r1, [fp, #-12]
    13c4:	ldr	r0, [fp, #-8]
    13c8:	bl	0 <flatcc_json_parser_set_error>
    13cc:	mov	r3, r0
    13d0:	b	1434 <flatcc_json_parser_coerce_int16+0xb4>
    13d4:	ldrh	r3, [fp, #4]
    13d8:	rsb	r3, r3, #0
    13dc:	uxth	r3, r3
    13e0:	sxth	r2, r3
    13e4:	ldr	r3, [fp, #12]
    13e8:	strh	r2, [r3]
    13ec:	b	1430 <flatcc_json_parser_coerce_int16+0xb0>
    13f0:	ldrd	r2, [fp, #4]
    13f4:	ldr	r0, [pc, #68]	; 1440 <flatcc_json_parser_coerce_int16+0xc0>
    13f8:	mov	r1, #0
    13fc:	cmp	r3, r1
    1400:	cmpeq	r2, r0
    1404:	bls	1424 <flatcc_json_parser_coerce_int16+0xa4>
    1408:	mov	r3, #7
    140c:	ldr	r2, [fp, #-16]
    1410:	ldr	r1, [fp, #-12]
    1414:	ldr	r0, [fp, #-8]
    1418:	bl	0 <flatcc_json_parser_set_error>
    141c:	mov	r3, r0
    1420:	b	1434 <flatcc_json_parser_coerce_int16+0xb4>
    1424:	ldrsh	r2, [fp, #4]
    1428:	ldr	r3, [fp, #12]
    142c:	strh	r2, [r3]
    1430:	ldr	r3, [fp, #-12]
    1434:	mov	r0, r3
    1438:	sub	sp, fp, #4
    143c:	pop	{fp, pc}
    1440:	.word	0x00007fff

00001444 <flatcc_json_parser_coerce_int8>:
    1444:	push	{fp, lr}
    1448:	add	fp, sp, #4
    144c:	sub	sp, sp, #16
    1450:	str	r0, [fp, #-8]
    1454:	str	r1, [fp, #-12]
    1458:	str	r2, [fp, #-16]
    145c:	str	r3, [fp, #-20]	; 0xffffffec
    1460:	ldr	r3, [fp, #-20]	; 0xffffffec
    1464:	cmp	r3, #0
    1468:	beq	14b4 <flatcc_json_parser_coerce_int8+0x70>
    146c:	ldrd	r2, [fp, #4]
    1470:	cmp	r3, #0
    1474:	cmpeq	r2, #128	; 0x80
    1478:	bls	1498 <flatcc_json_parser_coerce_int8+0x54>
    147c:	mov	r3, #8
    1480:	ldr	r2, [fp, #-16]
    1484:	ldr	r1, [fp, #-12]
    1488:	ldr	r0, [fp, #-8]
    148c:	bl	0 <flatcc_json_parser_set_error>
    1490:	mov	r3, r0
    1494:	b	14f0 <flatcc_json_parser_coerce_int8+0xac>
    1498:	ldrb	r3, [fp, #4]
    149c:	rsb	r3, r3, #0
    14a0:	uxtb	r3, r3
    14a4:	sxtb	r2, r3
    14a8:	ldr	r3, [fp, #12]
    14ac:	strb	r2, [r3]
    14b0:	b	14ec <flatcc_json_parser_coerce_int8+0xa8>
    14b4:	ldrd	r2, [fp, #4]
    14b8:	cmp	r3, #0
    14bc:	cmpeq	r2, #127	; 0x7f
    14c0:	bls	14e0 <flatcc_json_parser_coerce_int8+0x9c>
    14c4:	mov	r3, #7
    14c8:	ldr	r2, [fp, #-16]
    14cc:	ldr	r1, [fp, #-12]
    14d0:	ldr	r0, [fp, #-8]
    14d4:	bl	0 <flatcc_json_parser_set_error>
    14d8:	mov	r3, r0
    14dc:	b	14f0 <flatcc_json_parser_coerce_int8+0xac>
    14e0:	ldrsb	r2, [fp, #4]
    14e4:	ldr	r3, [fp, #12]
    14e8:	strb	r2, [r3]
    14ec:	ldr	r3, [fp, #-12]
    14f0:	mov	r0, r3
    14f4:	sub	sp, fp, #4
    14f8:	pop	{fp, pc}

000014fc <flatcc_json_parser_coerce_float>:
    14fc:	push	{fp, lr}
    1500:	add	fp, sp, #4
    1504:	sub	sp, sp, #16
    1508:	str	r0, [fp, #-8]
    150c:	str	r1, [fp, #-12]
    1510:	str	r2, [fp, #-16]
    1514:	str	r3, [fp, #-20]	; 0xffffffec
    1518:	ldr	r3, [fp, #-20]	; 0xffffffec
    151c:	cmp	r3, #0
    1520:	beq	1538 <flatcc_json_parser_coerce_float+0x3c>
    1524:	ldrd	r0, [fp, #4]
    1528:	bl	0 <__aeabi_ul2f>
    152c:	mov	r3, r0
    1530:	eor	r2, r3, #-2147483648	; 0x80000000
    1534:	b	1544 <flatcc_json_parser_coerce_float+0x48>
    1538:	ldrd	r0, [fp, #4]
    153c:	bl	0 <__aeabi_ul2f>
    1540:	mov	r2, r0
    1544:	ldr	r3, [fp, #12]
    1548:	str	r2, [r3]
    154c:	ldr	r3, [fp, #-12]
    1550:	mov	r0, r3
    1554:	sub	sp, fp, #4
    1558:	pop	{fp, pc}

0000155c <flatcc_json_parser_coerce_double>:
    155c:	push	{fp, lr}
    1560:	add	fp, sp, #4
    1564:	sub	sp, sp, #16
    1568:	str	r0, [fp, #-8]
    156c:	str	r1, [fp, #-12]
    1570:	str	r2, [fp, #-16]
    1574:	str	r3, [fp, #-20]	; 0xffffffec
    1578:	ldr	r3, [fp, #-20]	; 0xffffffec
    157c:	cmp	r3, #0
    1580:	beq	159c <flatcc_json_parser_coerce_double+0x40>
    1584:	ldrd	r0, [fp, #4]
    1588:	bl	0 <__aeabi_ul2d>
    158c:	mov	r2, r0
    1590:	mov	r3, r1
    1594:	eor	r3, r3, #-2147483648	; 0x80000000
    1598:	b	15ac <flatcc_json_parser_coerce_double+0x50>
    159c:	ldrd	r0, [fp, #4]
    15a0:	bl	0 <__aeabi_ul2d>
    15a4:	mov	r2, r0
    15a8:	mov	r3, r1
    15ac:	ldr	r1, [fp, #12]
    15b0:	strd	r2, [r1]
    15b4:	ldr	r3, [fp, #-12]
    15b8:	mov	r0, r3
    15bc:	sub	sp, fp, #4
    15c0:	pop	{fp, pc}

000015c4 <flatcc_json_parser_none>:
    15c4:	push	{fp, lr}
    15c8:	add	fp, sp, #4
    15cc:	sub	sp, sp, #16
    15d0:	str	r0, [fp, #-8]
    15d4:	str	r1, [fp, #-12]
    15d8:	str	r2, [fp, #-16]
    15dc:	ldr	r2, [fp, #-16]
    15e0:	ldr	r3, [fp, #-12]
    15e4:	sub	r3, r2, r3
    15e8:	cmp	r3, #3
    15ec:	ble	1618 <flatcc_json_parser_none+0x54>
    15f0:	mov	r2, #4
    15f4:	ldr	r1, [pc, #64]	; 163c <flatcc_json_parser_none+0x78>
    15f8:	ldr	r0, [fp, #-12]
    15fc:	bl	0 <memcmp>
    1600:	mov	r3, r0
    1604:	cmp	r3, #0
    1608:	bne	1618 <flatcc_json_parser_none+0x54>
    160c:	ldr	r3, [fp, #-12]
    1610:	add	r3, r3, #4
    1614:	b	1630 <flatcc_json_parser_none+0x6c>
    1618:	mov	r3, #26
    161c:	ldr	r2, [fp, #-16]
    1620:	ldr	r1, [fp, #-12]
    1624:	ldr	r0, [fp, #-8]
    1628:	bl	0 <flatcc_json_parser_set_error>
    162c:	mov	r3, r0
    1630:	mov	r0, r3
    1634:	sub	sp, fp, #4
    1638:	pop	{fp, pc}
    163c:	.word	0x00000004

00001640 <flatcc_json_parser_uint64>:
    1640:	push	{fp, lr}
    1644:	add	fp, sp, #4
    1648:	sub	sp, sp, #56	; 0x38
    164c:	str	r0, [fp, #-32]	; 0xffffffe0
    1650:	str	r1, [fp, #-36]	; 0xffffffdc
    1654:	str	r2, [fp, #-40]	; 0xffffffd8
    1658:	str	r3, [fp, #-44]	; 0xffffffd4
    165c:	mov	r2, #0
    1660:	mov	r3, #0
    1664:	strd	r2, [fp, #-20]	; 0xffffffec
    1668:	mov	r3, #0
    166c:	str	r3, [fp, #-24]	; 0xffffffe8
    1670:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1674:	str	r3, [fp, #-8]
    1678:	ldr	r1, [fp, #-44]	; 0xffffffd4
    167c:	mov	r2, #0
    1680:	mov	r3, #0
    1684:	strd	r2, [r1]
    1688:	ldr	r2, [fp, #-36]	; 0xffffffdc
    168c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1690:	cmp	r2, r3
    1694:	bne	16a0 <flatcc_json_parser_uint64+0x60>
    1698:	ldr	r3, [fp, #-36]	; 0xffffffdc
    169c:	b	1708 <flatcc_json_parser_uint64+0xc8>
    16a0:	sub	r2, fp, #24
    16a4:	sub	r3, fp, #20
    16a8:	str	r3, [sp]
    16ac:	mov	r3, r2
    16b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    16b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    16b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    16bc:	bl	0 <flatcc_json_parser_integer>
    16c0:	str	r0, [fp, #-36]	; 0xffffffdc
    16c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    16c8:	ldr	r3, [fp, #-8]
    16cc:	cmp	r2, r3
    16d0:	beq	1704 <flatcc_json_parser_uint64+0xc4>
    16d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    16d8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    16dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    16e0:	str	r1, [sp, #8]
    16e4:	strd	r2, [sp]
    16e8:	mov	r3, r0
    16ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
    16f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    16f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    16f8:	bl	f7c <flatcc_json_parser_coerce_uint64>
    16fc:	mov	r3, r0
    1700:	b	1708 <flatcc_json_parser_uint64+0xc8>
    1704:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1708:	mov	r0, r3
    170c:	sub	sp, fp, #4
    1710:	pop	{fp, pc}

00001714 <flatcc_json_parser_uint32>:
    1714:	push	{fp, lr}
    1718:	add	fp, sp, #4
    171c:	sub	sp, sp, #56	; 0x38
    1720:	str	r0, [fp, #-32]	; 0xffffffe0
    1724:	str	r1, [fp, #-36]	; 0xffffffdc
    1728:	str	r2, [fp, #-40]	; 0xffffffd8
    172c:	str	r3, [fp, #-44]	; 0xffffffd4
    1730:	mov	r2, #0
    1734:	mov	r3, #0
    1738:	strd	r2, [fp, #-20]	; 0xffffffec
    173c:	mov	r3, #0
    1740:	str	r3, [fp, #-24]	; 0xffffffe8
    1744:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1748:	str	r3, [fp, #-8]
    174c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1750:	mov	r2, #0
    1754:	str	r2, [r3]
    1758:	ldr	r2, [fp, #-36]	; 0xffffffdc
    175c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1760:	cmp	r2, r3
    1764:	bne	1770 <flatcc_json_parser_uint32+0x5c>
    1768:	ldr	r3, [fp, #-36]	; 0xffffffdc
    176c:	b	17d8 <flatcc_json_parser_uint32+0xc4>
    1770:	sub	r2, fp, #24
    1774:	sub	r3, fp, #20
    1778:	str	r3, [sp]
    177c:	mov	r3, r2
    1780:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1784:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1788:	ldr	r0, [fp, #-32]	; 0xffffffe0
    178c:	bl	0 <flatcc_json_parser_integer>
    1790:	str	r0, [fp, #-36]	; 0xffffffdc
    1794:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1798:	ldr	r3, [fp, #-8]
    179c:	cmp	r2, r3
    17a0:	beq	17d4 <flatcc_json_parser_uint32+0xc0>
    17a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    17a8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    17ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
    17b0:	str	r1, [sp, #8]
    17b4:	strd	r2, [sp]
    17b8:	mov	r3, r0
    17bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    17c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    17c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    17c8:	bl	1058 <flatcc_json_parser_coerce_uint32>
    17cc:	mov	r3, r0
    17d0:	b	17d8 <flatcc_json_parser_uint32+0xc4>
    17d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    17d8:	mov	r0, r3
    17dc:	sub	sp, fp, #4
    17e0:	pop	{fp, pc}

000017e4 <flatcc_json_parser_uint16>:
    17e4:	push	{fp, lr}
    17e8:	add	fp, sp, #4
    17ec:	sub	sp, sp, #56	; 0x38
    17f0:	str	r0, [fp, #-32]	; 0xffffffe0
    17f4:	str	r1, [fp, #-36]	; 0xffffffdc
    17f8:	str	r2, [fp, #-40]	; 0xffffffd8
    17fc:	str	r3, [fp, #-44]	; 0xffffffd4
    1800:	mov	r2, #0
    1804:	mov	r3, #0
    1808:	strd	r2, [fp, #-20]	; 0xffffffec
    180c:	mov	r3, #0
    1810:	str	r3, [fp, #-24]	; 0xffffffe8
    1814:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1818:	str	r3, [fp, #-8]
    181c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1820:	mov	r2, #0
    1824:	strh	r2, [r3]
    1828:	ldr	r2, [fp, #-36]	; 0xffffffdc
    182c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1830:	cmp	r2, r3
    1834:	bne	1840 <flatcc_json_parser_uint16+0x5c>
    1838:	ldr	r3, [fp, #-36]	; 0xffffffdc
    183c:	b	18a8 <flatcc_json_parser_uint16+0xc4>
    1840:	sub	r2, fp, #24
    1844:	sub	r3, fp, #20
    1848:	str	r3, [sp]
    184c:	mov	r3, r2
    1850:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1854:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1858:	ldr	r0, [fp, #-32]	; 0xffffffe0
    185c:	bl	0 <flatcc_json_parser_integer>
    1860:	str	r0, [fp, #-36]	; 0xffffffdc
    1864:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1868:	ldr	r3, [fp, #-8]
    186c:	cmp	r2, r3
    1870:	beq	18a4 <flatcc_json_parser_uint16+0xc0>
    1874:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1878:	ldrd	r2, [fp, #-20]	; 0xffffffec
    187c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1880:	str	r1, [sp, #8]
    1884:	strd	r2, [sp]
    1888:	mov	r3, r0
    188c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1890:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1894:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1898:	bl	10ec <flatcc_json_parser_coerce_uint16>
    189c:	mov	r3, r0
    18a0:	b	18a8 <flatcc_json_parser_uint16+0xc4>
    18a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    18a8:	mov	r0, r3
    18ac:	sub	sp, fp, #4
    18b0:	pop	{fp, pc}

000018b4 <flatcc_json_parser_uint8>:
    18b4:	push	{fp, lr}
    18b8:	add	fp, sp, #4
    18bc:	sub	sp, sp, #56	; 0x38
    18c0:	str	r0, [fp, #-32]	; 0xffffffe0
    18c4:	str	r1, [fp, #-36]	; 0xffffffdc
    18c8:	str	r2, [fp, #-40]	; 0xffffffd8
    18cc:	str	r3, [fp, #-44]	; 0xffffffd4
    18d0:	mov	r2, #0
    18d4:	mov	r3, #0
    18d8:	strd	r2, [fp, #-20]	; 0xffffffec
    18dc:	mov	r3, #0
    18e0:	str	r3, [fp, #-24]	; 0xffffffe8
    18e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    18e8:	str	r3, [fp, #-8]
    18ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    18f0:	mov	r2, #0
    18f4:	strb	r2, [r3]
    18f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    18fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1900:	cmp	r2, r3
    1904:	bne	1910 <flatcc_json_parser_uint8+0x5c>
    1908:	ldr	r3, [fp, #-36]	; 0xffffffdc
    190c:	b	1978 <flatcc_json_parser_uint8+0xc4>
    1910:	sub	r2, fp, #24
    1914:	sub	r3, fp, #20
    1918:	str	r3, [sp]
    191c:	mov	r3, r2
    1920:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1924:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1928:	ldr	r0, [fp, #-32]	; 0xffffffe0
    192c:	bl	0 <flatcc_json_parser_integer>
    1930:	str	r0, [fp, #-36]	; 0xffffffdc
    1934:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1938:	ldr	r3, [fp, #-8]
    193c:	cmp	r2, r3
    1940:	beq	1974 <flatcc_json_parser_uint8+0xc0>
    1944:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1948:	ldrd	r2, [fp, #-20]	; 0xffffffec
    194c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1950:	str	r1, [sp, #8]
    1954:	strd	r2, [sp]
    1958:	mov	r3, r0
    195c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1960:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1964:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1968:	bl	1184 <flatcc_json_parser_coerce_uint8>
    196c:	mov	r3, r0
    1970:	b	1978 <flatcc_json_parser_uint8+0xc4>
    1974:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1978:	mov	r0, r3
    197c:	sub	sp, fp, #4
    1980:	pop	{fp, pc}

00001984 <flatcc_json_parser_int64>:
    1984:	push	{fp, lr}
    1988:	add	fp, sp, #4
    198c:	sub	sp, sp, #56	; 0x38
    1990:	str	r0, [fp, #-32]	; 0xffffffe0
    1994:	str	r1, [fp, #-36]	; 0xffffffdc
    1998:	str	r2, [fp, #-40]	; 0xffffffd8
    199c:	str	r3, [fp, #-44]	; 0xffffffd4
    19a0:	mov	r2, #0
    19a4:	mov	r3, #0
    19a8:	strd	r2, [fp, #-20]	; 0xffffffec
    19ac:	mov	r3, #0
    19b0:	str	r3, [fp, #-24]	; 0xffffffe8
    19b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    19b8:	str	r3, [fp, #-8]
    19bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    19c0:	mov	r2, #0
    19c4:	mov	r3, #0
    19c8:	strd	r2, [r1]
    19cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    19d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    19d4:	cmp	r2, r3
    19d8:	bne	19e4 <flatcc_json_parser_int64+0x60>
    19dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    19e0:	b	1a4c <flatcc_json_parser_int64+0xc8>
    19e4:	sub	r2, fp, #24
    19e8:	sub	r3, fp, #20
    19ec:	str	r3, [sp]
    19f0:	mov	r3, r2
    19f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    19f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    19fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1a00:	bl	0 <flatcc_json_parser_integer>
    1a04:	str	r0, [fp, #-36]	; 0xffffffdc
    1a08:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1a0c:	ldr	r3, [fp, #-8]
    1a10:	cmp	r2, r3
    1a14:	beq	1a48 <flatcc_json_parser_int64+0xc4>
    1a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1a1c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1a20:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1a24:	str	r1, [sp, #8]
    1a28:	strd	r2, [sp]
    1a2c:	mov	r3, r0
    1a30:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1a34:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1a38:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1a3c:	bl	1210 <flatcc_json_parser_coerce_int64>
    1a40:	mov	r3, r0
    1a44:	b	1a4c <flatcc_json_parser_int64+0xc8>
    1a48:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1a4c:	mov	r0, r3
    1a50:	sub	sp, fp, #4
    1a54:	pop	{fp, pc}

00001a58 <flatcc_json_parser_int32>:
    1a58:	push	{fp, lr}
    1a5c:	add	fp, sp, #4
    1a60:	sub	sp, sp, #56	; 0x38
    1a64:	str	r0, [fp, #-32]	; 0xffffffe0
    1a68:	str	r1, [fp, #-36]	; 0xffffffdc
    1a6c:	str	r2, [fp, #-40]	; 0xffffffd8
    1a70:	str	r3, [fp, #-44]	; 0xffffffd4
    1a74:	mov	r2, #0
    1a78:	mov	r3, #0
    1a7c:	strd	r2, [fp, #-20]	; 0xffffffec
    1a80:	mov	r3, #0
    1a84:	str	r3, [fp, #-24]	; 0xffffffe8
    1a88:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1a8c:	str	r3, [fp, #-8]
    1a90:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1a94:	mov	r2, #0
    1a98:	str	r2, [r3]
    1a9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1aa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1aa4:	cmp	r2, r3
    1aa8:	bne	1ab4 <flatcc_json_parser_int32+0x5c>
    1aac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1ab0:	b	1b1c <flatcc_json_parser_int32+0xc4>
    1ab4:	sub	r2, fp, #24
    1ab8:	sub	r3, fp, #20
    1abc:	str	r3, [sp]
    1ac0:	mov	r3, r2
    1ac4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1ac8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1acc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1ad0:	bl	0 <flatcc_json_parser_integer>
    1ad4:	str	r0, [fp, #-36]	; 0xffffffdc
    1ad8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1adc:	ldr	r3, [fp, #-8]
    1ae0:	cmp	r2, r3
    1ae4:	beq	1b18 <flatcc_json_parser_int32+0xc0>
    1ae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1aec:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1af0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1af4:	str	r1, [sp, #8]
    1af8:	strd	r2, [sp]
    1afc:	mov	r3, r0
    1b00:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1b04:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1b08:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1b0c:	bl	12c4 <flatcc_json_parser_coerce_int32>
    1b10:	mov	r3, r0
    1b14:	b	1b1c <flatcc_json_parser_int32+0xc4>
    1b18:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1b1c:	mov	r0, r3
    1b20:	sub	sp, fp, #4
    1b24:	pop	{fp, pc}

00001b28 <flatcc_json_parser_int16>:
    1b28:	push	{fp, lr}
    1b2c:	add	fp, sp, #4
    1b30:	sub	sp, sp, #56	; 0x38
    1b34:	str	r0, [fp, #-32]	; 0xffffffe0
    1b38:	str	r1, [fp, #-36]	; 0xffffffdc
    1b3c:	str	r2, [fp, #-40]	; 0xffffffd8
    1b40:	str	r3, [fp, #-44]	; 0xffffffd4
    1b44:	mov	r2, #0
    1b48:	mov	r3, #0
    1b4c:	strd	r2, [fp, #-20]	; 0xffffffec
    1b50:	mov	r3, #0
    1b54:	str	r3, [fp, #-24]	; 0xffffffe8
    1b58:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1b5c:	str	r3, [fp, #-8]
    1b60:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1b64:	mov	r2, #0
    1b68:	strh	r2, [r3]
    1b6c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1b70:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1b74:	cmp	r2, r3
    1b78:	bne	1b84 <flatcc_json_parser_int16+0x5c>
    1b7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1b80:	b	1bec <flatcc_json_parser_int16+0xc4>
    1b84:	sub	r2, fp, #24
    1b88:	sub	r3, fp, #20
    1b8c:	str	r3, [sp]
    1b90:	mov	r3, r2
    1b94:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1b98:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1b9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1ba0:	bl	0 <flatcc_json_parser_integer>
    1ba4:	str	r0, [fp, #-36]	; 0xffffffdc
    1ba8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1bac:	ldr	r3, [fp, #-8]
    1bb0:	cmp	r2, r3
    1bb4:	beq	1be8 <flatcc_json_parser_int16+0xc0>
    1bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1bbc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1bc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1bc4:	str	r1, [sp, #8]
    1bc8:	strd	r2, [sp]
    1bcc:	mov	r3, r0
    1bd0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1bd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1bdc:	bl	1380 <flatcc_json_parser_coerce_int16>
    1be0:	mov	r3, r0
    1be4:	b	1bec <flatcc_json_parser_int16+0xc4>
    1be8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1bec:	mov	r0, r3
    1bf0:	sub	sp, fp, #4
    1bf4:	pop	{fp, pc}

00001bf8 <flatcc_json_parser_int8>:
    1bf8:	push	{fp, lr}
    1bfc:	add	fp, sp, #4
    1c00:	sub	sp, sp, #56	; 0x38
    1c04:	str	r0, [fp, #-32]	; 0xffffffe0
    1c08:	str	r1, [fp, #-36]	; 0xffffffdc
    1c0c:	str	r2, [fp, #-40]	; 0xffffffd8
    1c10:	str	r3, [fp, #-44]	; 0xffffffd4
    1c14:	mov	r2, #0
    1c18:	mov	r3, #0
    1c1c:	strd	r2, [fp, #-20]	; 0xffffffec
    1c20:	mov	r3, #0
    1c24:	str	r3, [fp, #-24]	; 0xffffffe8
    1c28:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1c2c:	str	r3, [fp, #-8]
    1c30:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1c34:	mov	r2, #0
    1c38:	strb	r2, [r3]
    1c3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1c40:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1c44:	cmp	r2, r3
    1c48:	bne	1c54 <flatcc_json_parser_int8+0x5c>
    1c4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1c50:	b	1cbc <flatcc_json_parser_int8+0xc4>
    1c54:	sub	r2, fp, #24
    1c58:	sub	r3, fp, #20
    1c5c:	str	r3, [sp]
    1c60:	mov	r3, r2
    1c64:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1c68:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1c6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1c70:	bl	0 <flatcc_json_parser_integer>
    1c74:	str	r0, [fp, #-36]	; 0xffffffdc
    1c78:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1c7c:	ldr	r3, [fp, #-8]
    1c80:	cmp	r2, r3
    1c84:	beq	1cb8 <flatcc_json_parser_int8+0xc0>
    1c88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c8c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1c90:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1c94:	str	r1, [sp, #8]
    1c98:	strd	r2, [sp]
    1c9c:	mov	r3, r0
    1ca0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1ca4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1ca8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1cac:	bl	1444 <flatcc_json_parser_coerce_int8>
    1cb0:	mov	r3, r0
    1cb4:	b	1cbc <flatcc_json_parser_int8+0xc4>
    1cb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1cbc:	mov	r0, r3
    1cc0:	sub	sp, fp, #4
    1cc4:	pop	{fp, pc}

00001cc8 <flatcc_json_parser_bool>:
    1cc8:	push	{fp, lr}
    1ccc:	add	fp, sp, #4
    1cd0:	sub	sp, sp, #24
    1cd4:	str	r0, [fp, #-16]
    1cd8:	str	r1, [fp, #-20]	; 0xffffffec
    1cdc:	str	r2, [fp, #-24]	; 0xffffffe8
    1ce0:	str	r3, [fp, #-28]	; 0xffffffe4
    1ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
    1ce8:	str	r3, [fp, #-8]
    1cec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1cf0:	ldr	r3, [fp, #-20]	; 0xffffffec
    1cf4:	sub	r3, r2, r3
    1cf8:	cmp	r3, #3
    1cfc:	ble	1d34 <flatcc_json_parser_bool+0x6c>
    1d00:	mov	r2, #4
    1d04:	ldr	r1, [pc, #184]	; 1dc4 <flatcc_json_parser_bool+0xfc>
    1d08:	ldr	r0, [fp, #-20]	; 0xffffffec
    1d0c:	bl	0 <memcmp>
    1d10:	mov	r3, r0
    1d14:	cmp	r3, #0
    1d18:	bne	1d34 <flatcc_json_parser_bool+0x6c>
    1d1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1d20:	mov	r2, #1
    1d24:	strb	r2, [r3]
    1d28:	ldr	r3, [fp, #-8]
    1d2c:	add	r3, r3, #4
    1d30:	b	1db8 <flatcc_json_parser_bool+0xf0>
    1d34:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1d38:	ldr	r3, [fp, #-20]	; 0xffffffec
    1d3c:	sub	r3, r2, r3
    1d40:	cmp	r3, #4
    1d44:	ble	1d7c <flatcc_json_parser_bool+0xb4>
    1d48:	mov	r2, #5
    1d4c:	ldr	r1, [pc, #116]	; 1dc8 <flatcc_json_parser_bool+0x100>
    1d50:	ldr	r0, [fp, #-20]	; 0xffffffec
    1d54:	bl	0 <memcmp>
    1d58:	mov	r3, r0
    1d5c:	cmp	r3, #0
    1d60:	bne	1d7c <flatcc_json_parser_bool+0xb4>
    1d64:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1d68:	mov	r2, #0
    1d6c:	strb	r2, [r3]
    1d70:	ldr	r3, [fp, #-8]
    1d74:	add	r3, r3, #5
    1d78:	b	1db8 <flatcc_json_parser_bool+0xf0>
    1d7c:	sub	r3, fp, #9
    1d80:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1d84:	ldr	r1, [fp, #-20]	; 0xffffffec
    1d88:	ldr	r0, [fp, #-16]
    1d8c:	bl	18b4 <flatcc_json_parser_uint8>
    1d90:	str	r0, [fp, #-20]	; 0xffffffec
    1d94:	ldrb	r3, [fp, #-9]
    1d98:	cmp	r3, #0
    1d9c:	movne	r3, #1
    1da0:	moveq	r3, #0
    1da4:	uxtb	r3, r3
    1da8:	mov	r2, r3
    1dac:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1db0:	strb	r2, [r3]
    1db4:	ldr	r3, [fp, #-20]	; 0xffffffec
    1db8:	mov	r0, r3
    1dbc:	sub	sp, fp, #4
    1dc0:	pop	{fp, pc}
    1dc4:	.word	0x0000000c
    1dc8:	.word	0x00000014

00001dcc <flatcc_json_parser_symbolic_uint64>:
    1dcc:	push	{r4, fp, lr}
    1dd0:	add	fp, sp, #8
    1dd4:	sub	sp, sp, #76	; 0x4c
    1dd8:	str	r0, [fp, #-56]	; 0xffffffc8
    1ddc:	str	r1, [fp, #-60]	; 0xffffffc4
    1de0:	str	r2, [fp, #-64]	; 0xffffffc0
    1de4:	str	r3, [fp, #-68]	; 0xffffffbc
    1de8:	mov	r2, #0
    1dec:	mov	r3, #0
    1df0:	strd	r2, [fp, #-36]	; 0xffffffdc
    1df4:	mov	r3, #0
    1df8:	str	r3, [fp, #-20]	; 0xffffffec
    1dfc:	ldr	r1, [fp, #4]
    1e00:	mov	r2, #0
    1e04:	mov	r3, #0
    1e08:	strd	r2, [r1]
    1e0c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1e10:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1e14:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1e18:	bl	920 <flatcc_json_parser_constant_start>
    1e1c:	str	r0, [fp, #-60]	; 0xffffffc4
    1e20:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1e24:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1e28:	cmp	r2, r3
    1e2c:	bne	1e38 <flatcc_json_parser_symbolic_uint64+0x6c>
    1e30:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1e34:	b	1f98 <flatcc_json_parser_symbolic_uint64+0x1cc>
    1e38:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1e3c:	str	r3, [fp, #-16]
    1e40:	ldr	r3, [fp, #-16]
    1e44:	ldr	r4, [r3]
    1e48:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1e4c:	str	r3, [fp, #-24]	; 0xffffffe8
    1e50:	sub	r2, fp, #48	; 0x30
    1e54:	sub	r3, fp, #52	; 0x34
    1e58:	str	r3, [sp, #4]
    1e5c:	sub	r3, fp, #44	; 0x2c
    1e60:	str	r3, [sp]
    1e64:	mov	r3, r2
    1e68:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1e6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1e70:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1e74:	blx	r4
    1e78:	str	r0, [fp, #-60]	; 0xffffffc4
    1e7c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1e80:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1e84:	cmp	r2, r3
    1e88:	bne	1e94 <flatcc_json_parser_symbolic_uint64+0xc8>
    1e8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1e90:	b	1f98 <flatcc_json_parser_symbolic_uint64+0x1cc>
    1e94:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1e98:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e9c:	cmp	r2, r3
    1ea0:	bne	1ec0 <flatcc_json_parser_symbolic_uint64+0xf4>
    1ea4:	ldr	r3, [fp, #-16]
    1ea8:	add	r3, r3, #4
    1eac:	str	r3, [fp, #-16]
    1eb0:	ldr	r3, [fp, #-16]
    1eb4:	ldr	r3, [r3]
    1eb8:	cmp	r3, #0
    1ebc:	bne	1e40 <flatcc_json_parser_symbolic_uint64+0x74>
    1ec0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1ec4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1ec8:	cmp	r2, r3
    1ecc:	bne	1eec <flatcc_json_parser_symbolic_uint64+0x120>
    1ed0:	mov	r3, #23
    1ed4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1ed8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1edc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1ee0:	bl	0 <flatcc_json_parser_set_error>
    1ee4:	mov	r3, r0
    1ee8:	b	1f98 <flatcc_json_parser_symbolic_uint64+0x1cc>
    1eec:	ldr	r3, [fp, #-20]	; 0xffffffec
    1ef0:	add	r2, r3, #1
    1ef4:	str	r2, [fp, #-20]	; 0xffffffec
    1ef8:	cmp	r3, #0
    1efc:	beq	1f2c <flatcc_json_parser_symbolic_uint64+0x160>
    1f00:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1f04:	ldr	r3, [r3, #12]
    1f08:	cmp	r3, #0
    1f0c:	beq	1f2c <flatcc_json_parser_symbolic_uint64+0x160>
    1f10:	mov	r3, #14
    1f14:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1f18:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1f1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1f20:	bl	0 <flatcc_json_parser_set_error>
    1f24:	mov	r3, r0
    1f28:	b	1f98 <flatcc_json_parser_symbolic_uint64+0x1cc>
    1f2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f30:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    1f34:	sub	r1, fp, #36	; 0x24
    1f38:	str	r1, [sp, #8]
    1f3c:	strd	r2, [sp]
    1f40:	mov	r3, r0
    1f44:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1f48:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1f4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1f50:	bl	f7c <flatcc_json_parser_coerce_uint64>
    1f54:	mov	r2, r0
    1f58:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1f5c:	cmp	r2, r3
    1f60:	bne	1f6c <flatcc_json_parser_symbolic_uint64+0x1a0>
    1f64:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1f68:	b	1f98 <flatcc_json_parser_symbolic_uint64+0x1cc>
    1f6c:	ldr	r3, [fp, #4]
    1f70:	ldrd	r0, [r3]
    1f74:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1f78:	adds	r2, r2, r0
    1f7c:	adc	r3, r3, r1
    1f80:	ldr	r1, [fp, #4]
    1f84:	strd	r2, [r1]
    1f88:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1f8c:	cmp	r3, #0
    1f90:	bne	1e38 <flatcc_json_parser_symbolic_uint64+0x6c>
    1f94:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1f98:	mov	r0, r3
    1f9c:	sub	sp, fp, #8
    1fa0:	pop	{r4, fp, pc}

00001fa4 <flatcc_json_parser_symbolic_uint32>:
    1fa4:	push	{r4, fp, lr}
    1fa8:	add	fp, sp, #8
    1fac:	sub	sp, sp, #68	; 0x44
    1fb0:	str	r0, [fp, #-48]	; 0xffffffd0
    1fb4:	str	r1, [fp, #-52]	; 0xffffffcc
    1fb8:	str	r2, [fp, #-56]	; 0xffffffc8
    1fbc:	str	r3, [fp, #-60]	; 0xffffffc4
    1fc0:	mov	r3, #0
    1fc4:	str	r3, [fp, #-28]	; 0xffffffe4
    1fc8:	mov	r3, #0
    1fcc:	str	r3, [fp, #-20]	; 0xffffffec
    1fd0:	ldr	r3, [fp, #4]
    1fd4:	mov	r2, #0
    1fd8:	str	r2, [r3]
    1fdc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1fe0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1fe4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1fe8:	bl	920 <flatcc_json_parser_constant_start>
    1fec:	str	r0, [fp, #-52]	; 0xffffffcc
    1ff0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1ff4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1ff8:	cmp	r2, r3
    1ffc:	bne	2008 <flatcc_json_parser_symbolic_uint32+0x64>
    2000:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2004:	b	2164 <flatcc_json_parser_symbolic_uint32+0x1c0>
    2008:	ldr	r3, [fp, #-60]	; 0xffffffc4
    200c:	str	r3, [fp, #-16]
    2010:	ldr	r3, [fp, #-16]
    2014:	ldr	r4, [r3]
    2018:	ldr	r3, [fp, #-52]	; 0xffffffcc
    201c:	str	r3, [fp, #-24]	; 0xffffffe8
    2020:	sub	r2, fp, #40	; 0x28
    2024:	sub	r3, fp, #44	; 0x2c
    2028:	str	r3, [sp, #4]
    202c:	sub	r3, fp, #36	; 0x24
    2030:	str	r3, [sp]
    2034:	mov	r3, r2
    2038:	ldr	r2, [fp, #-56]	; 0xffffffc8
    203c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2040:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2044:	blx	r4
    2048:	str	r0, [fp, #-52]	; 0xffffffcc
    204c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2050:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2054:	cmp	r2, r3
    2058:	bne	2064 <flatcc_json_parser_symbolic_uint32+0xc0>
    205c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2060:	b	2164 <flatcc_json_parser_symbolic_uint32+0x1c0>
    2064:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2068:	ldr	r3, [fp, #-24]	; 0xffffffe8
    206c:	cmp	r2, r3
    2070:	bne	2090 <flatcc_json_parser_symbolic_uint32+0xec>
    2074:	ldr	r3, [fp, #-16]
    2078:	add	r3, r3, #4
    207c:	str	r3, [fp, #-16]
    2080:	ldr	r3, [fp, #-16]
    2084:	ldr	r3, [r3]
    2088:	cmp	r3, #0
    208c:	bne	2010 <flatcc_json_parser_symbolic_uint32+0x6c>
    2090:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2094:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2098:	cmp	r2, r3
    209c:	bne	20bc <flatcc_json_parser_symbolic_uint32+0x118>
    20a0:	mov	r3, #23
    20a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    20a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    20ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    20b0:	bl	0 <flatcc_json_parser_set_error>
    20b4:	mov	r3, r0
    20b8:	b	2164 <flatcc_json_parser_symbolic_uint32+0x1c0>
    20bc:	ldr	r3, [fp, #-20]	; 0xffffffec
    20c0:	add	r2, r3, #1
    20c4:	str	r2, [fp, #-20]	; 0xffffffec
    20c8:	cmp	r3, #0
    20cc:	beq	20fc <flatcc_json_parser_symbolic_uint32+0x158>
    20d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    20d4:	ldr	r3, [r3, #12]
    20d8:	cmp	r3, #0
    20dc:	beq	20fc <flatcc_json_parser_symbolic_uint32+0x158>
    20e0:	mov	r3, #14
    20e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    20e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    20ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    20f0:	bl	0 <flatcc_json_parser_set_error>
    20f4:	mov	r3, r0
    20f8:	b	2164 <flatcc_json_parser_symbolic_uint32+0x1c0>
    20fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2100:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2104:	sub	r1, fp, #28
    2108:	str	r1, [sp, #8]
    210c:	strd	r2, [sp]
    2110:	mov	r3, r0
    2114:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2118:	ldr	r1, [fp, #-52]	; 0xffffffcc
    211c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2120:	bl	1058 <flatcc_json_parser_coerce_uint32>
    2124:	mov	r2, r0
    2128:	ldr	r3, [fp, #-56]	; 0xffffffc8
    212c:	cmp	r2, r3
    2130:	bne	213c <flatcc_json_parser_symbolic_uint32+0x198>
    2134:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2138:	b	2164 <flatcc_json_parser_symbolic_uint32+0x1c0>
    213c:	ldr	r3, [fp, #4]
    2140:	ldr	r2, [r3]
    2144:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2148:	add	r2, r2, r3
    214c:	ldr	r3, [fp, #4]
    2150:	str	r2, [r3]
    2154:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2158:	cmp	r3, #0
    215c:	bne	2008 <flatcc_json_parser_symbolic_uint32+0x64>
    2160:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2164:	mov	r0, r3
    2168:	sub	sp, fp, #8
    216c:	pop	{r4, fp, pc}

00002170 <flatcc_json_parser_symbolic_uint16>:
    2170:	push	{r4, fp, lr}
    2174:	add	fp, sp, #8
    2178:	sub	sp, sp, #68	; 0x44
    217c:	str	r0, [fp, #-48]	; 0xffffffd0
    2180:	str	r1, [fp, #-52]	; 0xffffffcc
    2184:	str	r2, [fp, #-56]	; 0xffffffc8
    2188:	str	r3, [fp, #-60]	; 0xffffffc4
    218c:	mov	r3, #0
    2190:	strh	r3, [fp, #-26]	; 0xffffffe6
    2194:	mov	r3, #0
    2198:	str	r3, [fp, #-20]	; 0xffffffec
    219c:	ldr	r3, [fp, #4]
    21a0:	mov	r2, #0
    21a4:	strh	r2, [r3]
    21a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    21ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
    21b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    21b4:	bl	920 <flatcc_json_parser_constant_start>
    21b8:	str	r0, [fp, #-52]	; 0xffffffcc
    21bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    21c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    21c4:	cmp	r2, r3
    21c8:	bne	21d4 <flatcc_json_parser_symbolic_uint16+0x64>
    21cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    21d0:	b	2334 <flatcc_json_parser_symbolic_uint16+0x1c4>
    21d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    21d8:	str	r3, [fp, #-16]
    21dc:	ldr	r3, [fp, #-16]
    21e0:	ldr	r4, [r3]
    21e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    21e8:	str	r3, [fp, #-24]	; 0xffffffe8
    21ec:	sub	r2, fp, #40	; 0x28
    21f0:	sub	r3, fp, #44	; 0x2c
    21f4:	str	r3, [sp, #4]
    21f8:	sub	r3, fp, #36	; 0x24
    21fc:	str	r3, [sp]
    2200:	mov	r3, r2
    2204:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2208:	ldr	r1, [fp, #-24]	; 0xffffffe8
    220c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2210:	blx	r4
    2214:	str	r0, [fp, #-52]	; 0xffffffcc
    2218:	ldr	r2, [fp, #-52]	; 0xffffffcc
    221c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2220:	cmp	r2, r3
    2224:	bne	2230 <flatcc_json_parser_symbolic_uint16+0xc0>
    2228:	ldr	r3, [fp, #-52]	; 0xffffffcc
    222c:	b	2334 <flatcc_json_parser_symbolic_uint16+0x1c4>
    2230:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2234:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2238:	cmp	r2, r3
    223c:	bne	225c <flatcc_json_parser_symbolic_uint16+0xec>
    2240:	ldr	r3, [fp, #-16]
    2244:	add	r3, r3, #4
    2248:	str	r3, [fp, #-16]
    224c:	ldr	r3, [fp, #-16]
    2250:	ldr	r3, [r3]
    2254:	cmp	r3, #0
    2258:	bne	21dc <flatcc_json_parser_symbolic_uint16+0x6c>
    225c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2260:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2264:	cmp	r2, r3
    2268:	bne	2288 <flatcc_json_parser_symbolic_uint16+0x118>
    226c:	mov	r3, #23
    2270:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2274:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2278:	ldr	r0, [fp, #-48]	; 0xffffffd0
    227c:	bl	0 <flatcc_json_parser_set_error>
    2280:	mov	r3, r0
    2284:	b	2334 <flatcc_json_parser_symbolic_uint16+0x1c4>
    2288:	ldr	r3, [fp, #-20]	; 0xffffffec
    228c:	add	r2, r3, #1
    2290:	str	r2, [fp, #-20]	; 0xffffffec
    2294:	cmp	r3, #0
    2298:	beq	22c8 <flatcc_json_parser_symbolic_uint16+0x158>
    229c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    22a0:	ldr	r3, [r3, #12]
    22a4:	cmp	r3, #0
    22a8:	beq	22c8 <flatcc_json_parser_symbolic_uint16+0x158>
    22ac:	mov	r3, #14
    22b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    22b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    22b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    22bc:	bl	0 <flatcc_json_parser_set_error>
    22c0:	mov	r3, r0
    22c4:	b	2334 <flatcc_json_parser_symbolic_uint16+0x1c4>
    22c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    22cc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    22d0:	sub	r1, fp, #26
    22d4:	str	r1, [sp, #8]
    22d8:	strd	r2, [sp]
    22dc:	mov	r3, r0
    22e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    22e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    22e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    22ec:	bl	10ec <flatcc_json_parser_coerce_uint16>
    22f0:	mov	r2, r0
    22f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    22f8:	cmp	r2, r3
    22fc:	bne	2308 <flatcc_json_parser_symbolic_uint16+0x198>
    2300:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2304:	b	2334 <flatcc_json_parser_symbolic_uint16+0x1c4>
    2308:	ldr	r3, [fp, #4]
    230c:	ldrh	r2, [r3]
    2310:	ldrh	r3, [fp, #-26]	; 0xffffffe6
    2314:	add	r3, r2, r3
    2318:	uxth	r2, r3
    231c:	ldr	r3, [fp, #4]
    2320:	strh	r2, [r3]
    2324:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2328:	cmp	r3, #0
    232c:	bne	21d4 <flatcc_json_parser_symbolic_uint16+0x64>
    2330:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2334:	mov	r0, r3
    2338:	sub	sp, fp, #8
    233c:	pop	{r4, fp, pc}

00002340 <flatcc_json_parser_symbolic_uint8>:
    2340:	push	{r4, fp, lr}
    2344:	add	fp, sp, #8
    2348:	sub	sp, sp, #68	; 0x44
    234c:	str	r0, [fp, #-48]	; 0xffffffd0
    2350:	str	r1, [fp, #-52]	; 0xffffffcc
    2354:	str	r2, [fp, #-56]	; 0xffffffc8
    2358:	str	r3, [fp, #-60]	; 0xffffffc4
    235c:	mov	r3, #0
    2360:	strb	r3, [fp, #-25]	; 0xffffffe7
    2364:	mov	r3, #0
    2368:	str	r3, [fp, #-20]	; 0xffffffec
    236c:	ldr	r3, [fp, #4]
    2370:	mov	r2, #0
    2374:	strb	r2, [r3]
    2378:	ldr	r2, [fp, #-56]	; 0xffffffc8
    237c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2380:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2384:	bl	920 <flatcc_json_parser_constant_start>
    2388:	str	r0, [fp, #-52]	; 0xffffffcc
    238c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2390:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2394:	cmp	r2, r3
    2398:	bne	23a4 <flatcc_json_parser_symbolic_uint8+0x64>
    239c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23a0:	b	2504 <flatcc_json_parser_symbolic_uint8+0x1c4>
    23a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    23a8:	str	r3, [fp, #-16]
    23ac:	ldr	r3, [fp, #-16]
    23b0:	ldr	r4, [r3]
    23b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23b8:	str	r3, [fp, #-24]	; 0xffffffe8
    23bc:	sub	r2, fp, #40	; 0x28
    23c0:	sub	r3, fp, #44	; 0x2c
    23c4:	str	r3, [sp, #4]
    23c8:	sub	r3, fp, #36	; 0x24
    23cc:	str	r3, [sp]
    23d0:	mov	r3, r2
    23d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    23d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    23dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    23e0:	blx	r4
    23e4:	str	r0, [fp, #-52]	; 0xffffffcc
    23e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    23ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
    23f0:	cmp	r2, r3
    23f4:	bne	2400 <flatcc_json_parser_symbolic_uint8+0xc0>
    23f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23fc:	b	2504 <flatcc_json_parser_symbolic_uint8+0x1c4>
    2400:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2404:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2408:	cmp	r2, r3
    240c:	bne	242c <flatcc_json_parser_symbolic_uint8+0xec>
    2410:	ldr	r3, [fp, #-16]
    2414:	add	r3, r3, #4
    2418:	str	r3, [fp, #-16]
    241c:	ldr	r3, [fp, #-16]
    2420:	ldr	r3, [r3]
    2424:	cmp	r3, #0
    2428:	bne	23ac <flatcc_json_parser_symbolic_uint8+0x6c>
    242c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2430:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2434:	cmp	r2, r3
    2438:	bne	2458 <flatcc_json_parser_symbolic_uint8+0x118>
    243c:	mov	r3, #23
    2440:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2444:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2448:	ldr	r0, [fp, #-48]	; 0xffffffd0
    244c:	bl	0 <flatcc_json_parser_set_error>
    2450:	mov	r3, r0
    2454:	b	2504 <flatcc_json_parser_symbolic_uint8+0x1c4>
    2458:	ldr	r3, [fp, #-20]	; 0xffffffec
    245c:	add	r2, r3, #1
    2460:	str	r2, [fp, #-20]	; 0xffffffec
    2464:	cmp	r3, #0
    2468:	beq	2498 <flatcc_json_parser_symbolic_uint8+0x158>
    246c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2470:	ldr	r3, [r3, #12]
    2474:	cmp	r3, #0
    2478:	beq	2498 <flatcc_json_parser_symbolic_uint8+0x158>
    247c:	mov	r3, #14
    2480:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2484:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2488:	ldr	r0, [fp, #-48]	; 0xffffffd0
    248c:	bl	0 <flatcc_json_parser_set_error>
    2490:	mov	r3, r0
    2494:	b	2504 <flatcc_json_parser_symbolic_uint8+0x1c4>
    2498:	ldr	r0, [fp, #-40]	; 0xffffffd8
    249c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    24a0:	sub	r1, fp, #25
    24a4:	str	r1, [sp, #8]
    24a8:	strd	r2, [sp]
    24ac:	mov	r3, r0
    24b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    24b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    24b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    24bc:	bl	1184 <flatcc_json_parser_coerce_uint8>
    24c0:	mov	r2, r0
    24c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    24c8:	cmp	r2, r3
    24cc:	bne	24d8 <flatcc_json_parser_symbolic_uint8+0x198>
    24d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    24d4:	b	2504 <flatcc_json_parser_symbolic_uint8+0x1c4>
    24d8:	ldr	r3, [fp, #4]
    24dc:	ldrb	r2, [r3]
    24e0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    24e4:	add	r3, r2, r3
    24e8:	uxtb	r2, r3
    24ec:	ldr	r3, [fp, #4]
    24f0:	strb	r2, [r3]
    24f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    24f8:	cmp	r3, #0
    24fc:	bne	23a4 <flatcc_json_parser_symbolic_uint8+0x64>
    2500:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2504:	mov	r0, r3
    2508:	sub	sp, fp, #8
    250c:	pop	{r4, fp, pc}

00002510 <flatcc_json_parser_symbolic_int64>:
    2510:	push	{r4, fp, lr}
    2514:	add	fp, sp, #8
    2518:	sub	sp, sp, #76	; 0x4c
    251c:	str	r0, [fp, #-56]	; 0xffffffc8
    2520:	str	r1, [fp, #-60]	; 0xffffffc4
    2524:	str	r2, [fp, #-64]	; 0xffffffc0
    2528:	str	r3, [fp, #-68]	; 0xffffffbc
    252c:	mov	r2, #0
    2530:	mov	r3, #0
    2534:	strd	r2, [fp, #-36]	; 0xffffffdc
    2538:	mov	r3, #0
    253c:	str	r3, [fp, #-20]	; 0xffffffec
    2540:	ldr	r1, [fp, #4]
    2544:	mov	r2, #0
    2548:	mov	r3, #0
    254c:	strd	r2, [r1]
    2550:	ldr	r2, [fp, #-64]	; 0xffffffc0
    2554:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2558:	ldr	r0, [fp, #-56]	; 0xffffffc8
    255c:	bl	920 <flatcc_json_parser_constant_start>
    2560:	str	r0, [fp, #-60]	; 0xffffffc4
    2564:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2568:	ldr	r3, [fp, #-64]	; 0xffffffc0
    256c:	cmp	r2, r3
    2570:	bne	257c <flatcc_json_parser_symbolic_int64+0x6c>
    2574:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2578:	b	26dc <flatcc_json_parser_symbolic_int64+0x1cc>
    257c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2580:	str	r3, [fp, #-16]
    2584:	ldr	r3, [fp, #-16]
    2588:	ldr	r4, [r3]
    258c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2590:	str	r3, [fp, #-24]	; 0xffffffe8
    2594:	sub	r2, fp, #48	; 0x30
    2598:	sub	r3, fp, #52	; 0x34
    259c:	str	r3, [sp, #4]
    25a0:	sub	r3, fp, #44	; 0x2c
    25a4:	str	r3, [sp]
    25a8:	mov	r3, r2
    25ac:	ldr	r2, [fp, #-64]	; 0xffffffc0
    25b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    25b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    25b8:	blx	r4
    25bc:	str	r0, [fp, #-60]	; 0xffffffc4
    25c0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    25c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    25c8:	cmp	r2, r3
    25cc:	bne	25d8 <flatcc_json_parser_symbolic_int64+0xc8>
    25d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    25d4:	b	26dc <flatcc_json_parser_symbolic_int64+0x1cc>
    25d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    25dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25e0:	cmp	r2, r3
    25e4:	bne	2604 <flatcc_json_parser_symbolic_int64+0xf4>
    25e8:	ldr	r3, [fp, #-16]
    25ec:	add	r3, r3, #4
    25f0:	str	r3, [fp, #-16]
    25f4:	ldr	r3, [fp, #-16]
    25f8:	ldr	r3, [r3]
    25fc:	cmp	r3, #0
    2600:	bne	2584 <flatcc_json_parser_symbolic_int64+0x74>
    2604:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2608:	ldr	r3, [fp, #-60]	; 0xffffffc4
    260c:	cmp	r2, r3
    2610:	bne	2630 <flatcc_json_parser_symbolic_int64+0x120>
    2614:	mov	r3, #23
    2618:	ldr	r2, [fp, #-64]	; 0xffffffc0
    261c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2620:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2624:	bl	0 <flatcc_json_parser_set_error>
    2628:	mov	r3, r0
    262c:	b	26dc <flatcc_json_parser_symbolic_int64+0x1cc>
    2630:	ldr	r3, [fp, #-20]	; 0xffffffec
    2634:	add	r2, r3, #1
    2638:	str	r2, [fp, #-20]	; 0xffffffec
    263c:	cmp	r3, #0
    2640:	beq	2670 <flatcc_json_parser_symbolic_int64+0x160>
    2644:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2648:	ldr	r3, [r3, #12]
    264c:	cmp	r3, #0
    2650:	beq	2670 <flatcc_json_parser_symbolic_int64+0x160>
    2654:	mov	r3, #14
    2658:	ldr	r2, [fp, #-64]	; 0xffffffc0
    265c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2660:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2664:	bl	0 <flatcc_json_parser_set_error>
    2668:	mov	r3, r0
    266c:	b	26dc <flatcc_json_parser_symbolic_int64+0x1cc>
    2670:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2674:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    2678:	sub	r1, fp, #36	; 0x24
    267c:	str	r1, [sp, #8]
    2680:	strd	r2, [sp]
    2684:	mov	r3, r0
    2688:	ldr	r2, [fp, #-64]	; 0xffffffc0
    268c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2690:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2694:	bl	1210 <flatcc_json_parser_coerce_int64>
    2698:	mov	r2, r0
    269c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    26a0:	cmp	r2, r3
    26a4:	bne	26b0 <flatcc_json_parser_symbolic_int64+0x1a0>
    26a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    26ac:	b	26dc <flatcc_json_parser_symbolic_int64+0x1cc>
    26b0:	ldr	r3, [fp, #4]
    26b4:	ldrd	r0, [r3]
    26b8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    26bc:	adds	r2, r2, r0
    26c0:	adc	r3, r3, r1
    26c4:	ldr	r1, [fp, #4]
    26c8:	strd	r2, [r1]
    26cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    26d0:	cmp	r3, #0
    26d4:	bne	257c <flatcc_json_parser_symbolic_int64+0x6c>
    26d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    26dc:	mov	r0, r3
    26e0:	sub	sp, fp, #8
    26e4:	pop	{r4, fp, pc}

000026e8 <flatcc_json_parser_symbolic_int32>:
    26e8:	push	{r4, fp, lr}
    26ec:	add	fp, sp, #8
    26f0:	sub	sp, sp, #68	; 0x44
    26f4:	str	r0, [fp, #-48]	; 0xffffffd0
    26f8:	str	r1, [fp, #-52]	; 0xffffffcc
    26fc:	str	r2, [fp, #-56]	; 0xffffffc8
    2700:	str	r3, [fp, #-60]	; 0xffffffc4
    2704:	mov	r3, #0
    2708:	str	r3, [fp, #-28]	; 0xffffffe4
    270c:	mov	r3, #0
    2710:	str	r3, [fp, #-20]	; 0xffffffec
    2714:	ldr	r3, [fp, #4]
    2718:	mov	r2, #0
    271c:	str	r2, [r3]
    2720:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2724:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2728:	ldr	r0, [fp, #-48]	; 0xffffffd0
    272c:	bl	920 <flatcc_json_parser_constant_start>
    2730:	str	r0, [fp, #-52]	; 0xffffffcc
    2734:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2738:	ldr	r3, [fp, #-56]	; 0xffffffc8
    273c:	cmp	r2, r3
    2740:	bne	274c <flatcc_json_parser_symbolic_int32+0x64>
    2744:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2748:	b	28a8 <flatcc_json_parser_symbolic_int32+0x1c0>
    274c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2750:	str	r3, [fp, #-16]
    2754:	ldr	r3, [fp, #-16]
    2758:	ldr	r4, [r3]
    275c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2760:	str	r3, [fp, #-24]	; 0xffffffe8
    2764:	sub	r2, fp, #40	; 0x28
    2768:	sub	r3, fp, #44	; 0x2c
    276c:	str	r3, [sp, #4]
    2770:	sub	r3, fp, #36	; 0x24
    2774:	str	r3, [sp]
    2778:	mov	r3, r2
    277c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2780:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2784:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2788:	blx	r4
    278c:	str	r0, [fp, #-52]	; 0xffffffcc
    2790:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2794:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2798:	cmp	r2, r3
    279c:	bne	27a8 <flatcc_json_parser_symbolic_int32+0xc0>
    27a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    27a4:	b	28a8 <flatcc_json_parser_symbolic_int32+0x1c0>
    27a8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    27ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    27b0:	cmp	r2, r3
    27b4:	bne	27d4 <flatcc_json_parser_symbolic_int32+0xec>
    27b8:	ldr	r3, [fp, #-16]
    27bc:	add	r3, r3, #4
    27c0:	str	r3, [fp, #-16]
    27c4:	ldr	r3, [fp, #-16]
    27c8:	ldr	r3, [r3]
    27cc:	cmp	r3, #0
    27d0:	bne	2754 <flatcc_json_parser_symbolic_int32+0x6c>
    27d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    27d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    27dc:	cmp	r2, r3
    27e0:	bne	2800 <flatcc_json_parser_symbolic_int32+0x118>
    27e4:	mov	r3, #23
    27e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    27ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
    27f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    27f4:	bl	0 <flatcc_json_parser_set_error>
    27f8:	mov	r3, r0
    27fc:	b	28a8 <flatcc_json_parser_symbolic_int32+0x1c0>
    2800:	ldr	r3, [fp, #-20]	; 0xffffffec
    2804:	add	r2, r3, #1
    2808:	str	r2, [fp, #-20]	; 0xffffffec
    280c:	cmp	r3, #0
    2810:	beq	2840 <flatcc_json_parser_symbolic_int32+0x158>
    2814:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2818:	ldr	r3, [r3, #12]
    281c:	cmp	r3, #0
    2820:	beq	2840 <flatcc_json_parser_symbolic_int32+0x158>
    2824:	mov	r3, #14
    2828:	ldr	r2, [fp, #-56]	; 0xffffffc8
    282c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2830:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2834:	bl	0 <flatcc_json_parser_set_error>
    2838:	mov	r3, r0
    283c:	b	28a8 <flatcc_json_parser_symbolic_int32+0x1c0>
    2840:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2844:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2848:	sub	r1, fp, #28
    284c:	str	r1, [sp, #8]
    2850:	strd	r2, [sp]
    2854:	mov	r3, r0
    2858:	ldr	r2, [fp, #-56]	; 0xffffffc8
    285c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2860:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2864:	bl	12c4 <flatcc_json_parser_coerce_int32>
    2868:	mov	r2, r0
    286c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2870:	cmp	r2, r3
    2874:	bne	2880 <flatcc_json_parser_symbolic_int32+0x198>
    2878:	ldr	r3, [fp, #-56]	; 0xffffffc8
    287c:	b	28a8 <flatcc_json_parser_symbolic_int32+0x1c0>
    2880:	ldr	r3, [fp, #4]
    2884:	ldr	r2, [r3]
    2888:	ldr	r3, [fp, #-28]	; 0xffffffe4
    288c:	add	r2, r2, r3
    2890:	ldr	r3, [fp, #4]
    2894:	str	r2, [r3]
    2898:	ldr	r3, [fp, #-44]	; 0xffffffd4
    289c:	cmp	r3, #0
    28a0:	bne	274c <flatcc_json_parser_symbolic_int32+0x64>
    28a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    28a8:	mov	r0, r3
    28ac:	sub	sp, fp, #8
    28b0:	pop	{r4, fp, pc}

000028b4 <flatcc_json_parser_symbolic_int16>:
    28b4:	push	{r4, fp, lr}
    28b8:	add	fp, sp, #8
    28bc:	sub	sp, sp, #68	; 0x44
    28c0:	str	r0, [fp, #-48]	; 0xffffffd0
    28c4:	str	r1, [fp, #-52]	; 0xffffffcc
    28c8:	str	r2, [fp, #-56]	; 0xffffffc8
    28cc:	str	r3, [fp, #-60]	; 0xffffffc4
    28d0:	mov	r3, #0
    28d4:	strh	r3, [fp, #-26]	; 0xffffffe6
    28d8:	mov	r3, #0
    28dc:	str	r3, [fp, #-20]	; 0xffffffec
    28e0:	ldr	r3, [fp, #4]
    28e4:	mov	r2, #0
    28e8:	strh	r2, [r3]
    28ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    28f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    28f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    28f8:	bl	920 <flatcc_json_parser_constant_start>
    28fc:	str	r0, [fp, #-52]	; 0xffffffcc
    2900:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2904:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2908:	cmp	r2, r3
    290c:	bne	2918 <flatcc_json_parser_symbolic_int16+0x64>
    2910:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2914:	b	2a84 <flatcc_json_parser_symbolic_int16+0x1d0>
    2918:	ldr	r3, [fp, #-60]	; 0xffffffc4
    291c:	str	r3, [fp, #-16]
    2920:	ldr	r3, [fp, #-16]
    2924:	ldr	r4, [r3]
    2928:	ldr	r3, [fp, #-52]	; 0xffffffcc
    292c:	str	r3, [fp, #-24]	; 0xffffffe8
    2930:	sub	r2, fp, #40	; 0x28
    2934:	sub	r3, fp, #44	; 0x2c
    2938:	str	r3, [sp, #4]
    293c:	sub	r3, fp, #36	; 0x24
    2940:	str	r3, [sp]
    2944:	mov	r3, r2
    2948:	ldr	r2, [fp, #-56]	; 0xffffffc8
    294c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2950:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2954:	blx	r4
    2958:	str	r0, [fp, #-52]	; 0xffffffcc
    295c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2960:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2964:	cmp	r2, r3
    2968:	bne	2974 <flatcc_json_parser_symbolic_int16+0xc0>
    296c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2970:	b	2a84 <flatcc_json_parser_symbolic_int16+0x1d0>
    2974:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2978:	ldr	r3, [fp, #-24]	; 0xffffffe8
    297c:	cmp	r2, r3
    2980:	bne	29a0 <flatcc_json_parser_symbolic_int16+0xec>
    2984:	ldr	r3, [fp, #-16]
    2988:	add	r3, r3, #4
    298c:	str	r3, [fp, #-16]
    2990:	ldr	r3, [fp, #-16]
    2994:	ldr	r3, [r3]
    2998:	cmp	r3, #0
    299c:	bne	2920 <flatcc_json_parser_symbolic_int16+0x6c>
    29a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    29a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    29a8:	cmp	r2, r3
    29ac:	bne	29cc <flatcc_json_parser_symbolic_int16+0x118>
    29b0:	mov	r3, #23
    29b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    29b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    29bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    29c0:	bl	0 <flatcc_json_parser_set_error>
    29c4:	mov	r3, r0
    29c8:	b	2a84 <flatcc_json_parser_symbolic_int16+0x1d0>
    29cc:	ldr	r3, [fp, #-20]	; 0xffffffec
    29d0:	add	r2, r3, #1
    29d4:	str	r2, [fp, #-20]	; 0xffffffec
    29d8:	cmp	r3, #0
    29dc:	beq	2a0c <flatcc_json_parser_symbolic_int16+0x158>
    29e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    29e4:	ldr	r3, [r3, #12]
    29e8:	cmp	r3, #0
    29ec:	beq	2a0c <flatcc_json_parser_symbolic_int16+0x158>
    29f0:	mov	r3, #14
    29f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    29f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    29fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2a00:	bl	0 <flatcc_json_parser_set_error>
    2a04:	mov	r3, r0
    2a08:	b	2a84 <flatcc_json_parser_symbolic_int16+0x1d0>
    2a0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2a10:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2a14:	sub	r1, fp, #26
    2a18:	str	r1, [sp, #8]
    2a1c:	strd	r2, [sp]
    2a20:	mov	r3, r0
    2a24:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a28:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2a2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2a30:	bl	1380 <flatcc_json_parser_coerce_int16>
    2a34:	mov	r2, r0
    2a38:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2a3c:	cmp	r2, r3
    2a40:	bne	2a4c <flatcc_json_parser_symbolic_int16+0x198>
    2a44:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2a48:	b	2a84 <flatcc_json_parser_symbolic_int16+0x1d0>
    2a4c:	ldr	r3, [fp, #4]
    2a50:	ldrsh	r3, [r3]
    2a54:	uxth	r2, r3
    2a58:	ldrsh	r3, [fp, #-26]	; 0xffffffe6
    2a5c:	uxth	r3, r3
    2a60:	add	r3, r2, r3
    2a64:	uxth	r3, r3
    2a68:	sxth	r2, r3
    2a6c:	ldr	r3, [fp, #4]
    2a70:	strh	r2, [r3]
    2a74:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2a78:	cmp	r3, #0
    2a7c:	bne	2918 <flatcc_json_parser_symbolic_int16+0x64>
    2a80:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2a84:	mov	r0, r3
    2a88:	sub	sp, fp, #8
    2a8c:	pop	{r4, fp, pc}

00002a90 <flatcc_json_parser_symbolic_int8>:
    2a90:	push	{r4, fp, lr}
    2a94:	add	fp, sp, #8
    2a98:	sub	sp, sp, #68	; 0x44
    2a9c:	str	r0, [fp, #-48]	; 0xffffffd0
    2aa0:	str	r1, [fp, #-52]	; 0xffffffcc
    2aa4:	str	r2, [fp, #-56]	; 0xffffffc8
    2aa8:	str	r3, [fp, #-60]	; 0xffffffc4
    2aac:	mov	r3, #0
    2ab0:	strb	r3, [fp, #-25]	; 0xffffffe7
    2ab4:	mov	r3, #0
    2ab8:	str	r3, [fp, #-20]	; 0xffffffec
    2abc:	ldr	r3, [fp, #4]
    2ac0:	mov	r2, #0
    2ac4:	strb	r2, [r3]
    2ac8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2acc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2ad0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2ad4:	bl	920 <flatcc_json_parser_constant_start>
    2ad8:	str	r0, [fp, #-52]	; 0xffffffcc
    2adc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2ae0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2ae4:	cmp	r2, r3
    2ae8:	bne	2af4 <flatcc_json_parser_symbolic_int8+0x64>
    2aec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2af0:	b	2c60 <flatcc_json_parser_symbolic_int8+0x1d0>
    2af4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2af8:	str	r3, [fp, #-16]
    2afc:	ldr	r3, [fp, #-16]
    2b00:	ldr	r4, [r3]
    2b04:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2b08:	str	r3, [fp, #-24]	; 0xffffffe8
    2b0c:	sub	r2, fp, #40	; 0x28
    2b10:	sub	r3, fp, #44	; 0x2c
    2b14:	str	r3, [sp, #4]
    2b18:	sub	r3, fp, #36	; 0x24
    2b1c:	str	r3, [sp]
    2b20:	mov	r3, r2
    2b24:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b28:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2b2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2b30:	blx	r4
    2b34:	str	r0, [fp, #-52]	; 0xffffffcc
    2b38:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2b3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2b40:	cmp	r2, r3
    2b44:	bne	2b50 <flatcc_json_parser_symbolic_int8+0xc0>
    2b48:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2b4c:	b	2c60 <flatcc_json_parser_symbolic_int8+0x1d0>
    2b50:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2b54:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2b58:	cmp	r2, r3
    2b5c:	bne	2b7c <flatcc_json_parser_symbolic_int8+0xec>
    2b60:	ldr	r3, [fp, #-16]
    2b64:	add	r3, r3, #4
    2b68:	str	r3, [fp, #-16]
    2b6c:	ldr	r3, [fp, #-16]
    2b70:	ldr	r3, [r3]
    2b74:	cmp	r3, #0
    2b78:	bne	2afc <flatcc_json_parser_symbolic_int8+0x6c>
    2b7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2b80:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2b84:	cmp	r2, r3
    2b88:	bne	2ba8 <flatcc_json_parser_symbolic_int8+0x118>
    2b8c:	mov	r3, #23
    2b90:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b94:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2b98:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2b9c:	bl	0 <flatcc_json_parser_set_error>
    2ba0:	mov	r3, r0
    2ba4:	b	2c60 <flatcc_json_parser_symbolic_int8+0x1d0>
    2ba8:	ldr	r3, [fp, #-20]	; 0xffffffec
    2bac:	add	r2, r3, #1
    2bb0:	str	r2, [fp, #-20]	; 0xffffffec
    2bb4:	cmp	r3, #0
    2bb8:	beq	2be8 <flatcc_json_parser_symbolic_int8+0x158>
    2bbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2bc0:	ldr	r3, [r3, #12]
    2bc4:	cmp	r3, #0
    2bc8:	beq	2be8 <flatcc_json_parser_symbolic_int8+0x158>
    2bcc:	mov	r3, #14
    2bd0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2bd4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2bd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2bdc:	bl	0 <flatcc_json_parser_set_error>
    2be0:	mov	r3, r0
    2be4:	b	2c60 <flatcc_json_parser_symbolic_int8+0x1d0>
    2be8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2bec:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2bf0:	sub	r1, fp, #25
    2bf4:	str	r1, [sp, #8]
    2bf8:	strd	r2, [sp]
    2bfc:	mov	r3, r0
    2c00:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2c04:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2c08:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2c0c:	bl	1444 <flatcc_json_parser_coerce_int8>
    2c10:	mov	r2, r0
    2c14:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2c18:	cmp	r2, r3
    2c1c:	bne	2c28 <flatcc_json_parser_symbolic_int8+0x198>
    2c20:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2c24:	b	2c60 <flatcc_json_parser_symbolic_int8+0x1d0>
    2c28:	ldr	r3, [fp, #4]
    2c2c:	ldrsb	r3, [r3]
    2c30:	uxtb	r2, r3
    2c34:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
    2c38:	uxtb	r3, r3
    2c3c:	add	r3, r2, r3
    2c40:	uxtb	r3, r3
    2c44:	sxtb	r2, r3
    2c48:	ldr	r3, [fp, #4]
    2c4c:	strb	r2, [r3]
    2c50:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2c54:	cmp	r3, #0
    2c58:	bne	2af4 <flatcc_json_parser_symbolic_int8+0x64>
    2c5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c60:	mov	r0, r3
    2c64:	sub	sp, fp, #8
    2c68:	pop	{r4, fp, pc}

00002c6c <flatcc_json_parser_symbolic_bool>:
    2c6c:	push	{r4, fp, lr}
    2c70:	add	fp, sp, #8
    2c74:	sub	sp, sp, #68	; 0x44
    2c78:	str	r0, [fp, #-48]	; 0xffffffd0
    2c7c:	str	r1, [fp, #-52]	; 0xffffffcc
    2c80:	str	r2, [fp, #-56]	; 0xffffffc8
    2c84:	str	r3, [fp, #-60]	; 0xffffffc4
    2c88:	mov	r3, #0
    2c8c:	strb	r3, [fp, #-25]	; 0xffffffe7
    2c90:	mov	r3, #0
    2c94:	str	r3, [fp, #-20]	; 0xffffffec
    2c98:	ldr	r3, [fp, #4]
    2c9c:	mov	r2, #0
    2ca0:	strb	r2, [r3]
    2ca4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2ca8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2cac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2cb0:	bl	920 <flatcc_json_parser_constant_start>
    2cb4:	str	r0, [fp, #-52]	; 0xffffffcc
    2cb8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2cbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2cc0:	cmp	r2, r3
    2cc4:	bne	2cd0 <flatcc_json_parser_symbolic_bool+0x64>
    2cc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2ccc:	b	2e30 <flatcc_json_parser_symbolic_bool+0x1c4>
    2cd0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2cd4:	str	r3, [fp, #-16]
    2cd8:	ldr	r3, [fp, #-16]
    2cdc:	ldr	r4, [r3]
    2ce0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2ce4:	str	r3, [fp, #-24]	; 0xffffffe8
    2ce8:	sub	r2, fp, #40	; 0x28
    2cec:	sub	r3, fp, #44	; 0x2c
    2cf0:	str	r3, [sp, #4]
    2cf4:	sub	r3, fp, #36	; 0x24
    2cf8:	str	r3, [sp]
    2cfc:	mov	r3, r2
    2d00:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2d04:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2d08:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2d0c:	blx	r4
    2d10:	str	r0, [fp, #-52]	; 0xffffffcc
    2d14:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2d18:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2d1c:	cmp	r2, r3
    2d20:	bne	2d2c <flatcc_json_parser_symbolic_bool+0xc0>
    2d24:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d28:	b	2e30 <flatcc_json_parser_symbolic_bool+0x1c4>
    2d2c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2d30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2d34:	cmp	r2, r3
    2d38:	bne	2d58 <flatcc_json_parser_symbolic_bool+0xec>
    2d3c:	ldr	r3, [fp, #-16]
    2d40:	add	r3, r3, #4
    2d44:	str	r3, [fp, #-16]
    2d48:	ldr	r3, [fp, #-16]
    2d4c:	ldr	r3, [r3]
    2d50:	cmp	r3, #0
    2d54:	bne	2cd8 <flatcc_json_parser_symbolic_bool+0x6c>
    2d58:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2d5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d60:	cmp	r2, r3
    2d64:	bne	2d84 <flatcc_json_parser_symbolic_bool+0x118>
    2d68:	mov	r3, #23
    2d6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2d70:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2d74:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2d78:	bl	0 <flatcc_json_parser_set_error>
    2d7c:	mov	r3, r0
    2d80:	b	2e30 <flatcc_json_parser_symbolic_bool+0x1c4>
    2d84:	ldr	r3, [fp, #-20]	; 0xffffffec
    2d88:	add	r2, r3, #1
    2d8c:	str	r2, [fp, #-20]	; 0xffffffec
    2d90:	cmp	r3, #0
    2d94:	beq	2dc4 <flatcc_json_parser_symbolic_bool+0x158>
    2d98:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2d9c:	ldr	r3, [r3, #12]
    2da0:	cmp	r3, #0
    2da4:	beq	2dc4 <flatcc_json_parser_symbolic_bool+0x158>
    2da8:	mov	r3, #14
    2dac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2db0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2db4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2db8:	bl	0 <flatcc_json_parser_set_error>
    2dbc:	mov	r3, r0
    2dc0:	b	2e30 <flatcc_json_parser_symbolic_bool+0x1c4>
    2dc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2dc8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2dcc:	sub	r1, fp, #25
    2dd0:	str	r1, [sp, #8]
    2dd4:	strd	r2, [sp]
    2dd8:	mov	r3, r0
    2ddc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2de0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2de4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2de8:	bl	fdc <flatcc_json_parser_coerce_bool>
    2dec:	mov	r2, r0
    2df0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2df4:	cmp	r2, r3
    2df8:	bne	2e04 <flatcc_json_parser_symbolic_bool+0x198>
    2dfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2e00:	b	2e30 <flatcc_json_parser_symbolic_bool+0x1c4>
    2e04:	ldr	r3, [fp, #4]
    2e08:	ldrb	r2, [r3]
    2e0c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    2e10:	add	r3, r2, r3
    2e14:	uxtb	r2, r3
    2e18:	ldr	r3, [fp, #4]
    2e1c:	strb	r2, [r3]
    2e20:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2e24:	cmp	r3, #0
    2e28:	bne	2cd0 <flatcc_json_parser_symbolic_bool+0x64>
    2e2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e30:	mov	r0, r3
    2e34:	sub	sp, fp, #8
    2e38:	pop	{r4, fp, pc}

00002e3c <flatcc_json_parser_symbolic_float>:
    2e3c:	push	{r4, fp, lr}
    2e40:	add	fp, sp, #8
    2e44:	sub	sp, sp, #68	; 0x44
    2e48:	str	r0, [fp, #-48]	; 0xffffffd0
    2e4c:	str	r1, [fp, #-52]	; 0xffffffcc
    2e50:	str	r2, [fp, #-56]	; 0xffffffc8
    2e54:	str	r3, [fp, #-60]	; 0xffffffc4
    2e58:	mov	r3, #0
    2e5c:	str	r3, [fp, #-28]	; 0xffffffe4
    2e60:	mov	r3, #0
    2e64:	str	r3, [fp, #-20]	; 0xffffffec
    2e68:	ldr	r3, [fp, #4]
    2e6c:	mov	r2, #0
    2e70:	str	r2, [r3]
    2e74:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2e78:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2e7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2e80:	bl	920 <flatcc_json_parser_constant_start>
    2e84:	str	r0, [fp, #-52]	; 0xffffffcc
    2e88:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2e8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2e90:	cmp	r2, r3
    2e94:	bne	2ea0 <flatcc_json_parser_symbolic_float+0x64>
    2e98:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e9c:	b	2ffc <flatcc_json_parser_symbolic_float+0x1c0>
    2ea0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2ea4:	str	r3, [fp, #-16]
    2ea8:	ldr	r3, [fp, #-16]
    2eac:	ldr	r4, [r3]
    2eb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2eb4:	str	r3, [fp, #-24]	; 0xffffffe8
    2eb8:	sub	r2, fp, #40	; 0x28
    2ebc:	sub	r3, fp, #44	; 0x2c
    2ec0:	str	r3, [sp, #4]
    2ec4:	sub	r3, fp, #36	; 0x24
    2ec8:	str	r3, [sp]
    2ecc:	mov	r3, r2
    2ed0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2ed4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2ed8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2edc:	blx	r4
    2ee0:	str	r0, [fp, #-52]	; 0xffffffcc
    2ee4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2ee8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2eec:	cmp	r2, r3
    2ef0:	bne	2efc <flatcc_json_parser_symbolic_float+0xc0>
    2ef4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2ef8:	b	2ffc <flatcc_json_parser_symbolic_float+0x1c0>
    2efc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2f00:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2f04:	cmp	r2, r3
    2f08:	bne	2f28 <flatcc_json_parser_symbolic_float+0xec>
    2f0c:	ldr	r3, [fp, #-16]
    2f10:	add	r3, r3, #4
    2f14:	str	r3, [fp, #-16]
    2f18:	ldr	r3, [fp, #-16]
    2f1c:	ldr	r3, [r3]
    2f20:	cmp	r3, #0
    2f24:	bne	2ea8 <flatcc_json_parser_symbolic_float+0x6c>
    2f28:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2f2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2f30:	cmp	r2, r3
    2f34:	bne	2f54 <flatcc_json_parser_symbolic_float+0x118>
    2f38:	mov	r3, #23
    2f3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f40:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2f44:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2f48:	bl	0 <flatcc_json_parser_set_error>
    2f4c:	mov	r3, r0
    2f50:	b	2ffc <flatcc_json_parser_symbolic_float+0x1c0>
    2f54:	ldr	r3, [fp, #-20]	; 0xffffffec
    2f58:	add	r2, r3, #1
    2f5c:	str	r2, [fp, #-20]	; 0xffffffec
    2f60:	cmp	r3, #0
    2f64:	beq	2f94 <flatcc_json_parser_symbolic_float+0x158>
    2f68:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2f6c:	ldr	r3, [r3, #12]
    2f70:	cmp	r3, #0
    2f74:	beq	2f94 <flatcc_json_parser_symbolic_float+0x158>
    2f78:	mov	r3, #14
    2f7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f80:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2f84:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2f88:	bl	0 <flatcc_json_parser_set_error>
    2f8c:	mov	r3, r0
    2f90:	b	2ffc <flatcc_json_parser_symbolic_float+0x1c0>
    2f94:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2f98:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2f9c:	sub	r1, fp, #28
    2fa0:	str	r1, [sp, #8]
    2fa4:	strd	r2, [sp]
    2fa8:	mov	r3, r0
    2fac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2fb0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2fb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2fb8:	bl	14fc <flatcc_json_parser_coerce_float>
    2fbc:	mov	r2, r0
    2fc0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2fc4:	cmp	r2, r3
    2fc8:	bne	2fd4 <flatcc_json_parser_symbolic_float+0x198>
    2fcc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2fd0:	b	2ffc <flatcc_json_parser_symbolic_float+0x1c0>
    2fd4:	ldr	r3, [fp, #4]
    2fd8:	vldr	s14, [r3]
    2fdc:	vldr	s15, [fp, #-28]	; 0xffffffe4
    2fe0:	vadd.f32	s15, s14, s15
    2fe4:	ldr	r3, [fp, #4]
    2fe8:	vstr	s15, [r3]
    2fec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2ff0:	cmp	r3, #0
    2ff4:	bne	2ea0 <flatcc_json_parser_symbolic_float+0x64>
    2ff8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2ffc:	mov	r0, r3
    3000:	sub	sp, fp, #8
    3004:	pop	{r4, fp, pc}

00003008 <flatcc_json_parser_symbolic_double>:
    3008:	push	{r4, fp, lr}
    300c:	add	fp, sp, #8
    3010:	sub	sp, sp, #76	; 0x4c
    3014:	str	r0, [fp, #-56]	; 0xffffffc8
    3018:	str	r1, [fp, #-60]	; 0xffffffc4
    301c:	str	r2, [fp, #-64]	; 0xffffffc0
    3020:	str	r3, [fp, #-68]	; 0xffffffbc
    3024:	mov	r2, #0
    3028:	mov	r3, #0
    302c:	strd	r2, [fp, #-36]	; 0xffffffdc
    3030:	mov	r3, #0
    3034:	str	r3, [fp, #-20]	; 0xffffffec
    3038:	ldr	r1, [fp, #4]
    303c:	mov	r2, #0
    3040:	mov	r3, #0
    3044:	strd	r2, [r1]
    3048:	ldr	r2, [fp, #-64]	; 0xffffffc0
    304c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3050:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3054:	bl	920 <flatcc_json_parser_constant_start>
    3058:	str	r0, [fp, #-60]	; 0xffffffc4
    305c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    3060:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3064:	cmp	r2, r3
    3068:	bne	3074 <flatcc_json_parser_symbolic_double+0x6c>
    306c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3070:	b	31d0 <flatcc_json_parser_symbolic_double+0x1c8>
    3074:	ldr	r3, [fp, #-68]	; 0xffffffbc
    3078:	str	r3, [fp, #-16]
    307c:	ldr	r3, [fp, #-16]
    3080:	ldr	r4, [r3]
    3084:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3088:	str	r3, [fp, #-24]	; 0xffffffe8
    308c:	sub	r2, fp, #48	; 0x30
    3090:	sub	r3, fp, #52	; 0x34
    3094:	str	r3, [sp, #4]
    3098:	sub	r3, fp, #44	; 0x2c
    309c:	str	r3, [sp]
    30a0:	mov	r3, r2
    30a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    30a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    30ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
    30b0:	blx	r4
    30b4:	str	r0, [fp, #-60]	; 0xffffffc4
    30b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    30bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
    30c0:	cmp	r2, r3
    30c4:	bne	30d0 <flatcc_json_parser_symbolic_double+0xc8>
    30c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    30cc:	b	31d0 <flatcc_json_parser_symbolic_double+0x1c8>
    30d0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    30d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30d8:	cmp	r2, r3
    30dc:	bne	30fc <flatcc_json_parser_symbolic_double+0xf4>
    30e0:	ldr	r3, [fp, #-16]
    30e4:	add	r3, r3, #4
    30e8:	str	r3, [fp, #-16]
    30ec:	ldr	r3, [fp, #-16]
    30f0:	ldr	r3, [r3]
    30f4:	cmp	r3, #0
    30f8:	bne	307c <flatcc_json_parser_symbolic_double+0x74>
    30fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3100:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3104:	cmp	r2, r3
    3108:	bne	3128 <flatcc_json_parser_symbolic_double+0x120>
    310c:	mov	r3, #23
    3110:	ldr	r2, [fp, #-64]	; 0xffffffc0
    3114:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3118:	ldr	r0, [fp, #-56]	; 0xffffffc8
    311c:	bl	0 <flatcc_json_parser_set_error>
    3120:	mov	r3, r0
    3124:	b	31d0 <flatcc_json_parser_symbolic_double+0x1c8>
    3128:	ldr	r3, [fp, #-20]	; 0xffffffec
    312c:	add	r2, r3, #1
    3130:	str	r2, [fp, #-20]	; 0xffffffec
    3134:	cmp	r3, #0
    3138:	beq	3168 <flatcc_json_parser_symbolic_double+0x160>
    313c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3140:	ldr	r3, [r3, #12]
    3144:	cmp	r3, #0
    3148:	beq	3168 <flatcc_json_parser_symbolic_double+0x160>
    314c:	mov	r3, #14
    3150:	ldr	r2, [fp, #-64]	; 0xffffffc0
    3154:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3158:	ldr	r0, [fp, #-56]	; 0xffffffc8
    315c:	bl	0 <flatcc_json_parser_set_error>
    3160:	mov	r3, r0
    3164:	b	31d0 <flatcc_json_parser_symbolic_double+0x1c8>
    3168:	ldr	r0, [fp, #-48]	; 0xffffffd0
    316c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    3170:	sub	r1, fp, #36	; 0x24
    3174:	str	r1, [sp, #8]
    3178:	strd	r2, [sp]
    317c:	mov	r3, r0
    3180:	ldr	r2, [fp, #-64]	; 0xffffffc0
    3184:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3188:	ldr	r0, [fp, #-56]	; 0xffffffc8
    318c:	bl	155c <flatcc_json_parser_coerce_double>
    3190:	mov	r2, r0
    3194:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3198:	cmp	r2, r3
    319c:	bne	31a8 <flatcc_json_parser_symbolic_double+0x1a0>
    31a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    31a4:	b	31d0 <flatcc_json_parser_symbolic_double+0x1c8>
    31a8:	ldr	r3, [fp, #4]
    31ac:	vldr	d6, [r3]
    31b0:	vldr	d7, [fp, #-36]	; 0xffffffdc
    31b4:	vadd.f64	d7, d6, d7
    31b8:	ldr	r3, [fp, #4]
    31bc:	vstr	d7, [r3]
    31c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    31c4:	cmp	r3, #0
    31c8:	bne	3074 <flatcc_json_parser_symbolic_double+0x6c>
    31cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    31d0:	mov	r0, r3
    31d4:	sub	sp, fp, #8
    31d8:	pop	{r4, fp, pc}

000031dc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>:
    31dc:	push	{fp, lr}
    31e0:	add	fp, sp, #4
    31e4:	sub	sp, sp, #48	; 0x30
    31e8:	str	r0, [fp, #-32]	; 0xffffffe0
    31ec:	str	r1, [fp, #-36]	; 0xffffffdc
    31f0:	str	r2, [fp, #-40]	; 0xffffffd8
    31f4:	str	r3, [fp, #-44]	; 0xffffffd4
    31f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    31fc:	str	r3, [fp, #-8]
    3200:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3204:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3208:	bl	854 <flatcc_json_parser_symbol_part>
    320c:	strd	r0, [fp, #-20]	; 0xffffffec
    3210:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3214:	mov	r0, #0
    3218:	mvn	r1, #255	; 0xff
    321c:	and	r2, r2, r0
    3220:	and	r3, r3, r1
    3224:	add	r1, pc, #332	; 0x14c
    3228:	ldrd	r0, [r1]
    322c:	cmp	r3, r1
    3230:	cmpeq	r2, r0
    3234:	bne	3290 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xb4>
    3238:	ldr	r3, [fp, #-36]	; 0xffffffdc
    323c:	str	r3, [fp, #-24]	; 0xffffffe8
    3240:	ldr	r3, [fp, #8]
    3244:	str	r3, [sp]
    3248:	mov	r3, #3
    324c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3250:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3254:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3258:	bl	0 <flatcc_json_parser_match_constant>
    325c:	str	r0, [fp, #-36]	; 0xffffffdc
    3260:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3264:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3268:	cmp	r2, r3
    326c:	beq	3298 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xbc>
    3270:	ldr	r1, [fp, #4]
    3274:	mov	r2, #17
    3278:	mov	r3, #0
    327c:	strd	r2, [r1]
    3280:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3284:	mov	r2, #0
    3288:	str	r2, [r3]
    328c:	b	3368 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x18c>
    3290:	nop			; (mov r0, r0)
    3294:	b	329c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xc0>
    3298:	nop			; (mov r0, r0)
    329c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    32a0:	add	r1, pc, #216	; 0xd8
    32a4:	ldrd	r0, [r1]
    32a8:	cmp	r3, r1
    32ac:	cmpeq	r2, r0
    32b0:	bne	3360 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x184>
    32b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    32b8:	add	r3, r3, #8
    32bc:	str	r3, [fp, #-36]	; 0xffffffdc
    32c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    32c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    32c8:	bl	854 <flatcc_json_parser_symbol_part>
    32cc:	strd	r0, [fp, #-20]	; 0xffffffec
    32d0:	ldrd	r2, [fp, #-20]	; 0xffffffec
    32d4:	mov	r0, #0
    32d8:	ldr	r1, [pc, #168]	; 3388 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1ac>
    32dc:	and	r2, r2, r0
    32e0:	and	r3, r3, r1
    32e4:	mov	r0, #0
    32e8:	ldr	r1, [pc, #156]	; 338c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1b0>
    32ec:	cmp	r3, r1
    32f0:	cmpeq	r2, r0
    32f4:	bne	3358 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x17c>
    32f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    32fc:	str	r3, [fp, #-24]	; 0xffffffe8
    3300:	ldr	r3, [fp, #8]
    3304:	str	r3, [sp]
    3308:	mov	r3, #2
    330c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3310:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3314:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3318:	bl	0 <flatcc_json_parser_match_constant>
    331c:	str	r0, [fp, #-36]	; 0xffffffdc
    3320:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3324:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3328:	cmp	r2, r3
    332c:	beq	3350 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x174>
    3330:	ldr	r1, [fp, #4]
    3334:	mov	r2, #0
    3338:	mov	r3, #0
    333c:	strd	r2, [r1]
    3340:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3344:	mov	r2, #0
    3348:	str	r2, [r3]
    334c:	b	3368 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x18c>
    3350:	ldr	r3, [fp, #-8]
    3354:	b	336c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x190>
    3358:	ldr	r3, [fp, #-8]
    335c:	b	336c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x190>
    3360:	ldr	r3, [fp, #-8]
    3364:	b	336c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x190>
    3368:	ldr	r3, [fp, #-36]	; 0xffffffdc
    336c:	mov	r0, r3
    3370:	sub	sp, fp, #4
    3374:	pop	{fp, pc}
    3378:	.word	0x00000000
    337c:	.word	0x466f6f00
    3380:	.word	0x75646556
    3384:	.word	0x496e636c
    3388:	.word	0xffff0000
    338c:	.word	0x616c0000

00003390 <MyGame_OtherNameSpace_Unused_parse_json_struct_inline>:
    3390:	push	{fp, lr}
    3394:	add	fp, sp, #4
    3398:	sub	sp, sp, #24
    339c:	str	r0, [fp, #-16]
    33a0:	str	r1, [fp, #-20]	; 0xffffffec
    33a4:	str	r2, [fp, #-24]	; 0xffffffe8
    33a8:	str	r3, [fp, #-28]	; 0xffffffe4
    33ac:	sub	r3, fp, #8
    33b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    33b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    33b8:	ldr	r0, [fp, #-16]
    33bc:	bl	980 <flatcc_json_parser_object_start>
    33c0:	str	r0, [fp, #-20]	; 0xffffffec
    33c4:	b	33f4 <MyGame_OtherNameSpace_Unused_parse_json_struct_inline+0x64>
    33c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    33cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    33d0:	ldr	r0, [fp, #-16]
    33d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    33d8:	str	r0, [fp, #-20]	; 0xffffffec
    33dc:	sub	r3, fp, #8
    33e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    33e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    33e8:	ldr	r0, [fp, #-16]
    33ec:	bl	a68 <flatcc_json_parser_object_end>
    33f0:	str	r0, [fp, #-20]	; 0xffffffec
    33f4:	ldr	r3, [fp, #-8]
    33f8:	cmp	r3, #0
    33fc:	bne	33c8 <MyGame_OtherNameSpace_Unused_parse_json_struct_inline+0x38>
    3400:	ldr	r3, [fp, #-20]	; 0xffffffec
    3404:	mov	r0, r3
    3408:	sub	sp, fp, #4
    340c:	pop	{fp, pc}

00003410 <MyGame_OtherNameSpace_Unused_parse_json_struct>:
    3410:	push	{fp, lr}
    3414:	add	fp, sp, #4
    3418:	sub	sp, sp, #24
    341c:	str	r0, [fp, #-16]
    3420:	str	r1, [fp, #-20]	; 0xffffffec
    3424:	str	r2, [fp, #-24]	; 0xffffffe8
    3428:	str	r3, [fp, #-28]	; 0xffffffe4
    342c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3430:	mov	r2, #0
    3434:	str	r2, [r3]
    3438:	ldr	r3, [fp, #-16]
    343c:	ldr	r3, [r3]
    3440:	mov	r2, #1
    3444:	mov	r1, #0
    3448:	mov	r0, r3
    344c:	bl	0 <flatcc_builder_start_struct>
    3450:	str	r0, [fp, #-8]
    3454:	ldr	r3, [fp, #-8]
    3458:	cmp	r3, #0
    345c:	beq	34bc <MyGame_OtherNameSpace_Unused_parse_json_struct+0xac>
    3460:	ldr	r3, [fp, #-8]
    3464:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3468:	ldr	r1, [fp, #-20]	; 0xffffffec
    346c:	ldr	r0, [fp, #-16]
    3470:	bl	3390 <MyGame_OtherNameSpace_Unused_parse_json_struct_inline>
    3474:	str	r0, [fp, #-20]	; 0xffffffec
    3478:	ldr	r2, [fp, #-20]	; 0xffffffec
    347c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3480:	cmp	r2, r3
    3484:	beq	34c0 <MyGame_OtherNameSpace_Unused_parse_json_struct+0xb0>
    3488:	ldr	r3, [fp, #-16]
    348c:	ldr	r3, [r3]
    3490:	mov	r0, r3
    3494:	bl	0 <flatcc_builder_end_struct>
    3498:	mov	r2, r0
    349c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    34a0:	str	r2, [r3]
    34a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    34a8:	ldr	r3, [r3]
    34ac:	cmp	r3, #0
    34b0:	beq	34c0 <MyGame_OtherNameSpace_Unused_parse_json_struct+0xb0>
    34b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    34b8:	b	34d8 <MyGame_OtherNameSpace_Unused_parse_json_struct+0xc8>
    34bc:	nop			; (mov r0, r0)
    34c0:	mov	r3, #33	; 0x21
    34c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    34c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    34cc:	ldr	r0, [fp, #-16]
    34d0:	bl	0 <flatcc_json_parser_set_error>
    34d4:	mov	r3, r0
    34d8:	mov	r0, r3
    34dc:	sub	sp, fp, #4
    34e0:	pop	{fp, pc}

000034e4 <include_test2_local_json_parser_enum>:
    34e4:	push	{fp}		; (str fp, [sp, #-4]!)
    34e8:	add	fp, sp, #0
    34ec:	sub	sp, sp, #20
    34f0:	str	r0, [fp, #-8]
    34f4:	str	r1, [fp, #-12]
    34f8:	str	r2, [fp, #-16]
    34fc:	str	r3, [fp, #-20]	; 0xffffffec
    3500:	ldr	r3, [fp, #-12]
    3504:	mov	r0, r3
    3508:	add	sp, fp, #0
    350c:	pop	{fp}		; (ldr fp, [sp], #4)
    3510:	bx	lr

00003514 <include_test2_local_MyGame_Example_json_parser_enum>:
    3514:	push	{fp}		; (str fp, [sp, #-4]!)
    3518:	add	fp, sp, #0
    351c:	sub	sp, sp, #20
    3520:	str	r0, [fp, #-8]
    3524:	str	r1, [fp, #-12]
    3528:	str	r2, [fp, #-16]
    352c:	str	r3, [fp, #-20]	; 0xffffffec
    3530:	ldr	r3, [fp, #-12]
    3534:	mov	r0, r3
    3538:	add	sp, fp, #0
    353c:	pop	{fp}		; (ldr fp, [sp], #4)
    3540:	bx	lr

00003544 <include_test2_local_MyGame_Example2_json_parser_enum>:
    3544:	push	{fp}		; (str fp, [sp, #-4]!)
    3548:	add	fp, sp, #0
    354c:	sub	sp, sp, #20
    3550:	str	r0, [fp, #-8]
    3554:	str	r1, [fp, #-12]
    3558:	str	r2, [fp, #-16]
    355c:	str	r3, [fp, #-20]	; 0xffffffec
    3560:	ldr	r3, [fp, #-12]
    3564:	mov	r0, r3
    3568:	add	sp, fp, #0
    356c:	pop	{fp}		; (ldr fp, [sp], #4)
    3570:	bx	lr

00003574 <include_test2_local_MyGame_json_parser_enum>:
    3574:	push	{fp}		; (str fp, [sp, #-4]!)
    3578:	add	fp, sp, #0
    357c:	sub	sp, sp, #20
    3580:	str	r0, [fp, #-8]
    3584:	str	r1, [fp, #-12]
    3588:	str	r2, [fp, #-16]
    358c:	str	r3, [fp, #-20]	; 0xffffffec
    3590:	ldr	r3, [fp, #-12]
    3594:	mov	r0, r3
    3598:	add	sp, fp, #0
    359c:	pop	{fp}		; (ldr fp, [sp], #4)
    35a0:	bx	lr

000035a4 <include_test2_local_Fantasy_json_parser_enum>:
    35a4:	push	{fp}		; (str fp, [sp, #-4]!)
    35a8:	add	fp, sp, #0
    35ac:	sub	sp, sp, #20
    35b0:	str	r0, [fp, #-8]
    35b4:	str	r1, [fp, #-12]
    35b8:	str	r2, [fp, #-16]
    35bc:	str	r3, [fp, #-20]	; 0xffffffec
    35c0:	ldr	r3, [fp, #-12]
    35c4:	mov	r0, r3
    35c8:	add	sp, fp, #0
    35cc:	pop	{fp}		; (ldr fp, [sp], #4)
    35d0:	bx	lr

000035d4 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum>:
    35d4:	push	{fp, lr}
    35d8:	add	fp, sp, #4
    35dc:	sub	sp, sp, #48	; 0x30
    35e0:	str	r0, [fp, #-32]	; 0xffffffe0
    35e4:	str	r1, [fp, #-36]	; 0xffffffdc
    35e8:	str	r2, [fp, #-40]	; 0xffffffd8
    35ec:	str	r3, [fp, #-44]	; 0xffffffd4
    35f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    35f4:	str	r3, [fp, #-8]
    35f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    35fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3600:	bl	854 <flatcc_json_parser_symbol_part>
    3604:	strd	r0, [fp, #-20]	; 0xffffffec
    3608:	ldrd	r2, [fp, #-20]	; 0xffffffec
    360c:	add	r1, pc, #212	; 0xd4
    3610:	ldrd	r0, [r1]
    3614:	cmp	r3, r1
    3618:	cmpeq	r2, r0
    361c:	bne	36d4 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0x100>
    3620:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3624:	add	r3, r3, #8
    3628:	str	r3, [fp, #-36]	; 0xffffffdc
    362c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3630:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3634:	bl	854 <flatcc_json_parser_symbol_part>
    3638:	strd	r0, [fp, #-20]	; 0xffffffec
    363c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3640:	mov	r0, #0
    3644:	mvn	r1, #255	; 0xff
    3648:	and	r2, r2, r0
    364c:	and	r3, r3, r1
    3650:	add	r1, pc, #152	; 0x98
    3654:	ldrd	r0, [r1]
    3658:	cmp	r3, r1
    365c:	cmpeq	r2, r0
    3660:	bne	36cc <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0xf8>
    3664:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3668:	str	r3, [fp, #-24]	; 0xffffffe8
    366c:	mov	r3, #3
    3670:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3674:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3678:	ldr	r0, [fp, #-32]	; 0xffffffe0
    367c:	bl	89c <flatcc_json_parser_match_scope>
    3680:	str	r0, [fp, #-36]	; 0xffffffdc
    3684:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3688:	ldr	r3, [fp, #-24]	; 0xffffffe8
    368c:	cmp	r2, r3
    3690:	beq	36c4 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0xf0>
    3694:	ldr	r3, [fp, #8]
    3698:	str	r3, [sp, #4]
    369c:	ldr	r3, [fp, #4]
    36a0:	str	r3, [sp]
    36a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    36a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    36ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
    36b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    36b4:	bl	31dc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    36b8:	str	r0, [fp, #-36]	; 0xffffffdc
    36bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    36c0:	b	36d8 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
    36c4:	ldr	r3, [fp, #-8]
    36c8:	b	36d8 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
    36cc:	ldr	r3, [fp, #-8]
    36d0:	b	36d8 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
    36d4:	ldr	r3, [fp, #-8]
    36d8:	mov	r0, r3
    36dc:	sub	sp, fp, #4
    36e0:	pop	{fp, pc}
    36e4:	nop			; (mov r0, r0)
    36e8:	.word	0x496e636c
    36ec:	.word	0x46726f6d
    36f0:	.word	0x00000000
    36f4:	.word	0x75646500

000036f8 <include_test2_global_json_parser_enum>:
    36f8:	push	{fp, lr}
    36fc:	add	fp, sp, #4
    3700:	sub	sp, sp, #48	; 0x30
    3704:	str	r0, [fp, #-32]	; 0xffffffe0
    3708:	str	r1, [fp, #-36]	; 0xffffffdc
    370c:	str	r2, [fp, #-40]	; 0xffffffd8
    3710:	str	r3, [fp, #-44]	; 0xffffffd4
    3714:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3718:	str	r3, [fp, #-8]
    371c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3720:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3724:	bl	854 <flatcc_json_parser_symbol_part>
    3728:	strd	r0, [fp, #-20]	; 0xffffffec
    372c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3730:	add	r1, pc, #384	; 0x180
    3734:	ldrd	r0, [r1]
    3738:	cmp	r3, r1
    373c:	cmpeq	r2, r0
    3740:	bne	38a4 <include_test2_global_json_parser_enum+0x1ac>
    3744:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3748:	add	r3, r3, #8
    374c:	str	r3, [fp, #-36]	; 0xffffffdc
    3750:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3754:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3758:	bl	854 <flatcc_json_parser_symbol_part>
    375c:	strd	r0, [fp, #-20]	; 0xffffffec
    3760:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3764:	add	r1, pc, #340	; 0x154
    3768:	ldrd	r0, [r1]
    376c:	cmp	r3, r1
    3770:	cmpeq	r2, r0
    3774:	bne	389c <include_test2_global_json_parser_enum+0x1a4>
    3778:	ldr	r3, [fp, #-36]	; 0xffffffdc
    377c:	add	r3, r3, #8
    3780:	str	r3, [fp, #-36]	; 0xffffffdc
    3784:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3788:	ldr	r0, [fp, #-36]	; 0xffffffdc
    378c:	bl	854 <flatcc_json_parser_symbol_part>
    3790:	strd	r0, [fp, #-20]	; 0xffffffec
    3794:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3798:	add	r1, pc, #296	; 0x128
    379c:	ldrd	r0, [r1]
    37a0:	cmp	r3, r1
    37a4:	cmpeq	r2, r0
    37a8:	bne	3894 <include_test2_global_json_parser_enum+0x19c>
    37ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    37b0:	add	r3, r3, #8
    37b4:	str	r3, [fp, #-36]	; 0xffffffdc
    37b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    37bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    37c0:	bl	854 <flatcc_json_parser_symbol_part>
    37c4:	strd	r0, [fp, #-20]	; 0xffffffec
    37c8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    37cc:	add	r1, pc, #252	; 0xfc
    37d0:	ldrd	r0, [r1]
    37d4:	cmp	r3, r1
    37d8:	cmpeq	r2, r0
    37dc:	bne	388c <include_test2_global_json_parser_enum+0x194>
    37e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    37e4:	add	r3, r3, #8
    37e8:	str	r3, [fp, #-36]	; 0xffffffdc
    37ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
    37f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    37f4:	bl	854 <flatcc_json_parser_symbol_part>
    37f8:	strd	r0, [fp, #-20]	; 0xffffffec
    37fc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3800:	mov	r0, #0
    3804:	mov	r1, #-16777216	; 0xff000000
    3808:	and	r2, r2, r0
    380c:	and	r3, r3, r1
    3810:	cmp	r3, #1694498816	; 0x65000000
    3814:	cmpeq	r2, #0
    3818:	bne	3884 <include_test2_global_json_parser_enum+0x18c>
    381c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3820:	str	r3, [fp, #-24]	; 0xffffffe8
    3824:	mov	r3, #1
    3828:	ldr	r2, [fp, #-40]	; 0xffffffd8
    382c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3830:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3834:	bl	89c <flatcc_json_parser_match_scope>
    3838:	str	r0, [fp, #-36]	; 0xffffffdc
    383c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3840:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3844:	cmp	r2, r3
    3848:	beq	387c <include_test2_global_json_parser_enum+0x184>
    384c:	ldr	r3, [fp, #8]
    3850:	str	r3, [sp, #4]
    3854:	ldr	r3, [fp, #4]
    3858:	str	r3, [sp]
    385c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3860:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3864:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3868:	ldr	r0, [fp, #-32]	; 0xffffffe0
    386c:	bl	31dc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    3870:	str	r0, [fp, #-36]	; 0xffffffdc
    3874:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3878:	b	38a8 <include_test2_global_json_parser_enum+0x1b0>
    387c:	ldr	r3, [fp, #-8]
    3880:	b	38a8 <include_test2_global_json_parser_enum+0x1b0>
    3884:	ldr	r3, [fp, #-8]
    3888:	b	38a8 <include_test2_global_json_parser_enum+0x1b0>
    388c:	ldr	r3, [fp, #-8]
    3890:	b	38a8 <include_test2_global_json_parser_enum+0x1b0>
    3894:	ldr	r3, [fp, #-8]
    3898:	b	38a8 <include_test2_global_json_parser_enum+0x1b0>
    389c:	ldr	r3, [fp, #-8]
    38a0:	b	38a8 <include_test2_global_json_parser_enum+0x1b0>
    38a4:	ldr	r3, [fp, #-8]
    38a8:	mov	r0, r3
    38ac:	sub	sp, fp, #4
    38b0:	pop	{fp, pc}
    38b4:	nop			; (mov r0, r0)
    38b8:	.word	0x6d652e4f
    38bc:	.word	0x4d794761
    38c0:	.word	0x4e616d65
    38c4:	.word	0x74686572
    38c8:	.word	0x652e4672
    38cc:	.word	0x53706163
    38d0:	.word	0x636c7564
    38d4:	.word	0x6f6d496e

000038d8 <include_test1_local_json_parser_enum>:
    38d8:	push	{fp}		; (str fp, [sp, #-4]!)
    38dc:	add	fp, sp, #0
    38e0:	sub	sp, sp, #20
    38e4:	str	r0, [fp, #-8]
    38e8:	str	r1, [fp, #-12]
    38ec:	str	r2, [fp, #-16]
    38f0:	str	r3, [fp, #-20]	; 0xffffffec
    38f4:	ldr	r3, [fp, #-12]
    38f8:	mov	r0, r3
    38fc:	add	sp, fp, #0
    3900:	pop	{fp}		; (ldr fp, [sp], #4)
    3904:	bx	lr

00003908 <include_test1_local_MyGame_Example_json_parser_enum>:
    3908:	push	{fp}		; (str fp, [sp, #-4]!)
    390c:	add	fp, sp, #0
    3910:	sub	sp, sp, #20
    3914:	str	r0, [fp, #-8]
    3918:	str	r1, [fp, #-12]
    391c:	str	r2, [fp, #-16]
    3920:	str	r3, [fp, #-20]	; 0xffffffec
    3924:	ldr	r3, [fp, #-12]
    3928:	mov	r0, r3
    392c:	add	sp, fp, #0
    3930:	pop	{fp}		; (ldr fp, [sp], #4)
    3934:	bx	lr

00003938 <include_test1_local_MyGame_Example2_json_parser_enum>:
    3938:	push	{fp}		; (str fp, [sp, #-4]!)
    393c:	add	fp, sp, #0
    3940:	sub	sp, sp, #20
    3944:	str	r0, [fp, #-8]
    3948:	str	r1, [fp, #-12]
    394c:	str	r2, [fp, #-16]
    3950:	str	r3, [fp, #-20]	; 0xffffffec
    3954:	ldr	r3, [fp, #-12]
    3958:	mov	r0, r3
    395c:	add	sp, fp, #0
    3960:	pop	{fp}		; (ldr fp, [sp], #4)
    3964:	bx	lr

00003968 <include_test1_local_MyGame_json_parser_enum>:
    3968:	push	{fp}		; (str fp, [sp, #-4]!)
    396c:	add	fp, sp, #0
    3970:	sub	sp, sp, #20
    3974:	str	r0, [fp, #-8]
    3978:	str	r1, [fp, #-12]
    397c:	str	r2, [fp, #-16]
    3980:	str	r3, [fp, #-20]	; 0xffffffec
    3984:	ldr	r3, [fp, #-12]
    3988:	mov	r0, r3
    398c:	add	sp, fp, #0
    3990:	pop	{fp}		; (ldr fp, [sp], #4)
    3994:	bx	lr

00003998 <include_test1_local_Fantasy_json_parser_enum>:
    3998:	push	{fp}		; (str fp, [sp, #-4]!)
    399c:	add	fp, sp, #0
    39a0:	sub	sp, sp, #20
    39a4:	str	r0, [fp, #-8]
    39a8:	str	r1, [fp, #-12]
    39ac:	str	r2, [fp, #-16]
    39b0:	str	r3, [fp, #-20]	; 0xffffffec
    39b4:	ldr	r3, [fp, #-12]
    39b8:	mov	r0, r3
    39bc:	add	sp, fp, #0
    39c0:	pop	{fp}		; (ldr fp, [sp], #4)
    39c4:	bx	lr

000039c8 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum>:
    39c8:	push	{fp, lr}
    39cc:	add	fp, sp, #4
    39d0:	sub	sp, sp, #48	; 0x30
    39d4:	str	r0, [fp, #-32]	; 0xffffffe0
    39d8:	str	r1, [fp, #-36]	; 0xffffffdc
    39dc:	str	r2, [fp, #-40]	; 0xffffffd8
    39e0:	str	r3, [fp, #-44]	; 0xffffffd4
    39e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    39e8:	str	r3, [fp, #-8]
    39ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
    39f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    39f4:	bl	854 <flatcc_json_parser_symbol_part>
    39f8:	strd	r0, [fp, #-20]	; 0xffffffec
    39fc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3a00:	add	r1, pc, #208	; 0xd0
    3a04:	ldrd	r0, [r1]
    3a08:	cmp	r3, r1
    3a0c:	cmpeq	r2, r0
    3a10:	bne	3ac8 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0x100>
    3a14:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3a18:	add	r3, r3, #8
    3a1c:	str	r3, [fp, #-36]	; 0xffffffdc
    3a20:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3a24:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3a28:	bl	854 <flatcc_json_parser_symbol_part>
    3a2c:	strd	r0, [fp, #-20]	; 0xffffffec
    3a30:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3a34:	mov	r0, #0
    3a38:	mvn	r1, #255	; 0xff
    3a3c:	and	r2, r2, r0
    3a40:	and	r3, r3, r1
    3a44:	add	r1, pc, #148	; 0x94
    3a48:	ldrd	r0, [r1]
    3a4c:	cmp	r3, r1
    3a50:	cmpeq	r2, r0
    3a54:	bne	3ac0 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0xf8>
    3a58:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3a5c:	str	r3, [fp, #-24]	; 0xffffffe8
    3a60:	mov	r3, #3
    3a64:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3a68:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3a6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3a70:	bl	89c <flatcc_json_parser_match_scope>
    3a74:	str	r0, [fp, #-36]	; 0xffffffdc
    3a78:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a80:	cmp	r2, r3
    3a84:	beq	3ab8 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0xf0>
    3a88:	ldr	r3, [fp, #8]
    3a8c:	str	r3, [sp, #4]
    3a90:	ldr	r3, [fp, #4]
    3a94:	str	r3, [sp]
    3a98:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3a9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3aa0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3aa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3aa8:	bl	31dc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    3aac:	str	r0, [fp, #-36]	; 0xffffffdc
    3ab0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3ab4:	b	3acc <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
    3ab8:	ldr	r3, [fp, #-8]
    3abc:	b	3acc <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
    3ac0:	ldr	r3, [fp, #-8]
    3ac4:	b	3acc <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
    3ac8:	ldr	r3, [fp, #-8]
    3acc:	mov	r0, r3
    3ad0:	sub	sp, fp, #4
    3ad4:	pop	{fp, pc}
    3ad8:	.word	0x496e636c
    3adc:	.word	0x46726f6d
    3ae0:	.word	0x00000000
    3ae4:	.word	0x75646500

00003ae8 <include_test1_global_json_parser_enum>:
    3ae8:	push	{fp, lr}
    3aec:	add	fp, sp, #4
    3af0:	sub	sp, sp, #48	; 0x30
    3af4:	str	r0, [fp, #-32]	; 0xffffffe0
    3af8:	str	r1, [fp, #-36]	; 0xffffffdc
    3afc:	str	r2, [fp, #-40]	; 0xffffffd8
    3b00:	str	r3, [fp, #-44]	; 0xffffffd4
    3b04:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3b08:	str	r3, [fp, #-8]
    3b0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3b10:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3b14:	bl	854 <flatcc_json_parser_symbol_part>
    3b18:	strd	r0, [fp, #-20]	; 0xffffffec
    3b1c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3b20:	add	r1, pc, #384	; 0x180
    3b24:	ldrd	r0, [r1]
    3b28:	cmp	r3, r1
    3b2c:	cmpeq	r2, r0
    3b30:	bne	3c94 <include_test1_global_json_parser_enum+0x1ac>
    3b34:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3b38:	add	r3, r3, #8
    3b3c:	str	r3, [fp, #-36]	; 0xffffffdc
    3b40:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3b44:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3b48:	bl	854 <flatcc_json_parser_symbol_part>
    3b4c:	strd	r0, [fp, #-20]	; 0xffffffec
    3b50:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3b54:	add	r1, pc, #340	; 0x154
    3b58:	ldrd	r0, [r1]
    3b5c:	cmp	r3, r1
    3b60:	cmpeq	r2, r0
    3b64:	bne	3c8c <include_test1_global_json_parser_enum+0x1a4>
    3b68:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3b6c:	add	r3, r3, #8
    3b70:	str	r3, [fp, #-36]	; 0xffffffdc
    3b74:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3b78:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3b7c:	bl	854 <flatcc_json_parser_symbol_part>
    3b80:	strd	r0, [fp, #-20]	; 0xffffffec
    3b84:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3b88:	add	r1, pc, #296	; 0x128
    3b8c:	ldrd	r0, [r1]
    3b90:	cmp	r3, r1
    3b94:	cmpeq	r2, r0
    3b98:	bne	3c84 <include_test1_global_json_parser_enum+0x19c>
    3b9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3ba0:	add	r3, r3, #8
    3ba4:	str	r3, [fp, #-36]	; 0xffffffdc
    3ba8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3bac:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3bb0:	bl	854 <flatcc_json_parser_symbol_part>
    3bb4:	strd	r0, [fp, #-20]	; 0xffffffec
    3bb8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3bbc:	add	r1, pc, #252	; 0xfc
    3bc0:	ldrd	r0, [r1]
    3bc4:	cmp	r3, r1
    3bc8:	cmpeq	r2, r0
    3bcc:	bne	3c7c <include_test1_global_json_parser_enum+0x194>
    3bd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3bd4:	add	r3, r3, #8
    3bd8:	str	r3, [fp, #-36]	; 0xffffffdc
    3bdc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3be0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3be4:	bl	854 <flatcc_json_parser_symbol_part>
    3be8:	strd	r0, [fp, #-20]	; 0xffffffec
    3bec:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3bf0:	mov	r0, #0
    3bf4:	mov	r1, #-16777216	; 0xff000000
    3bf8:	and	r2, r2, r0
    3bfc:	and	r3, r3, r1
    3c00:	cmp	r3, #1694498816	; 0x65000000
    3c04:	cmpeq	r2, #0
    3c08:	bne	3c74 <include_test1_global_json_parser_enum+0x18c>
    3c0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3c10:	str	r3, [fp, #-24]	; 0xffffffe8
    3c14:	mov	r3, #1
    3c18:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3c1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3c20:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3c24:	bl	89c <flatcc_json_parser_match_scope>
    3c28:	str	r0, [fp, #-36]	; 0xffffffdc
    3c2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3c34:	cmp	r2, r3
    3c38:	beq	3c6c <include_test1_global_json_parser_enum+0x184>
    3c3c:	ldr	r3, [fp, #8]
    3c40:	str	r3, [sp, #4]
    3c44:	ldr	r3, [fp, #4]
    3c48:	str	r3, [sp]
    3c4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3c50:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3c54:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3c58:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3c5c:	bl	31dc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    3c60:	str	r0, [fp, #-36]	; 0xffffffdc
    3c64:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3c68:	b	3c98 <include_test1_global_json_parser_enum+0x1b0>
    3c6c:	ldr	r3, [fp, #-8]
    3c70:	b	3c98 <include_test1_global_json_parser_enum+0x1b0>
    3c74:	ldr	r3, [fp, #-8]
    3c78:	b	3c98 <include_test1_global_json_parser_enum+0x1b0>
    3c7c:	ldr	r3, [fp, #-8]
    3c80:	b	3c98 <include_test1_global_json_parser_enum+0x1b0>
    3c84:	ldr	r3, [fp, #-8]
    3c88:	b	3c98 <include_test1_global_json_parser_enum+0x1b0>
    3c8c:	ldr	r3, [fp, #-8]
    3c90:	b	3c98 <include_test1_global_json_parser_enum+0x1b0>
    3c94:	ldr	r3, [fp, #-8]
    3c98:	mov	r0, r3
    3c9c:	sub	sp, fp, #4
    3ca0:	pop	{fp, pc}
    3ca4:	nop			; (mov r0, r0)
    3ca8:	.word	0x6d652e4f
    3cac:	.word	0x4d794761
    3cb0:	.word	0x4e616d65
    3cb4:	.word	0x74686572
    3cb8:	.word	0x652e4672
    3cbc:	.word	0x53706163
    3cc0:	.word	0x636c7564
    3cc4:	.word	0x6f6d496e

00003cc8 <attributes_local_json_parser_enum>:
    3cc8:	push	{fp}		; (str fp, [sp, #-4]!)
    3ccc:	add	fp, sp, #0
    3cd0:	sub	sp, sp, #20
    3cd4:	str	r0, [fp, #-8]
    3cd8:	str	r1, [fp, #-12]
    3cdc:	str	r2, [fp, #-16]
    3ce0:	str	r3, [fp, #-20]	; 0xffffffec
    3ce4:	ldr	r3, [fp, #-12]
    3ce8:	mov	r0, r3
    3cec:	add	sp, fp, #0
    3cf0:	pop	{fp}		; (ldr fp, [sp], #4)
    3cf4:	bx	lr

00003cf8 <attributes_local_MyGame_Example_json_parser_enum>:
    3cf8:	push	{fp}		; (str fp, [sp, #-4]!)
    3cfc:	add	fp, sp, #0
    3d00:	sub	sp, sp, #20
    3d04:	str	r0, [fp, #-8]
    3d08:	str	r1, [fp, #-12]
    3d0c:	str	r2, [fp, #-16]
    3d10:	str	r3, [fp, #-20]	; 0xffffffec
    3d14:	ldr	r3, [fp, #-12]
    3d18:	mov	r0, r3
    3d1c:	add	sp, fp, #0
    3d20:	pop	{fp}		; (ldr fp, [sp], #4)
    3d24:	bx	lr

00003d28 <attributes_local_MyGame_Example2_json_parser_enum>:
    3d28:	push	{fp}		; (str fp, [sp, #-4]!)
    3d2c:	add	fp, sp, #0
    3d30:	sub	sp, sp, #20
    3d34:	str	r0, [fp, #-8]
    3d38:	str	r1, [fp, #-12]
    3d3c:	str	r2, [fp, #-16]
    3d40:	str	r3, [fp, #-20]	; 0xffffffec
    3d44:	ldr	r3, [fp, #-12]
    3d48:	mov	r0, r3
    3d4c:	add	sp, fp, #0
    3d50:	pop	{fp}		; (ldr fp, [sp], #4)
    3d54:	bx	lr

00003d58 <attributes_local_MyGame_json_parser_enum>:
    3d58:	push	{fp}		; (str fp, [sp, #-4]!)
    3d5c:	add	fp, sp, #0
    3d60:	sub	sp, sp, #20
    3d64:	str	r0, [fp, #-8]
    3d68:	str	r1, [fp, #-12]
    3d6c:	str	r2, [fp, #-16]
    3d70:	str	r3, [fp, #-20]	; 0xffffffec
    3d74:	ldr	r3, [fp, #-12]
    3d78:	mov	r0, r3
    3d7c:	add	sp, fp, #0
    3d80:	pop	{fp}		; (ldr fp, [sp], #4)
    3d84:	bx	lr

00003d88 <attributes_local_Fantasy_json_parser_enum>:
    3d88:	push	{fp}		; (str fp, [sp, #-4]!)
    3d8c:	add	fp, sp, #0
    3d90:	sub	sp, sp, #20
    3d94:	str	r0, [fp, #-8]
    3d98:	str	r1, [fp, #-12]
    3d9c:	str	r2, [fp, #-16]
    3da0:	str	r3, [fp, #-20]	; 0xffffffec
    3da4:	ldr	r3, [fp, #-12]
    3da8:	mov	r0, r3
    3dac:	add	sp, fp, #0
    3db0:	pop	{fp}		; (ldr fp, [sp], #4)
    3db4:	bx	lr

00003db8 <attributes_local_MyGame_OtherNameSpace_json_parser_enum>:
    3db8:	push	{fp}		; (str fp, [sp, #-4]!)
    3dbc:	add	fp, sp, #0
    3dc0:	sub	sp, sp, #20
    3dc4:	str	r0, [fp, #-8]
    3dc8:	str	r1, [fp, #-12]
    3dcc:	str	r2, [fp, #-16]
    3dd0:	str	r3, [fp, #-20]	; 0xffffffec
    3dd4:	ldr	r3, [fp, #-12]
    3dd8:	mov	r0, r3
    3ddc:	add	sp, fp, #0
    3de0:	pop	{fp}		; (ldr fp, [sp], #4)
    3de4:	bx	lr

00003de8 <attributes_global_json_parser_enum>:
    3de8:	push	{fp}		; (str fp, [sp, #-4]!)
    3dec:	add	fp, sp, #0
    3df0:	sub	sp, sp, #20
    3df4:	str	r0, [fp, #-8]
    3df8:	str	r1, [fp, #-12]
    3dfc:	str	r2, [fp, #-16]
    3e00:	str	r3, [fp, #-20]	; 0xffffffec
    3e04:	ldr	r3, [fp, #-12]
    3e08:	mov	r0, r3
    3e0c:	add	sp, fp, #0
    3e10:	pop	{fp}		; (ldr fp, [sp], #4)
    3e14:	bx	lr

00003e18 <InGlobalNamespace_parse_json_struct_inline>:
    3e18:	push	{fp, lr}
    3e1c:	add	fp, sp, #4
    3e20:	sub	sp, sp, #24
    3e24:	str	r0, [fp, #-16]
    3e28:	str	r1, [fp, #-20]	; 0xffffffec
    3e2c:	str	r2, [fp, #-24]	; 0xffffffe8
    3e30:	str	r3, [fp, #-28]	; 0xffffffe4
    3e34:	sub	r3, fp, #8
    3e38:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3e3c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3e40:	ldr	r0, [fp, #-16]
    3e44:	bl	980 <flatcc_json_parser_object_start>
    3e48:	str	r0, [fp, #-20]	; 0xffffffec
    3e4c:	b	3e7c <InGlobalNamespace_parse_json_struct_inline+0x64>
    3e50:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3e54:	ldr	r1, [fp, #-20]	; 0xffffffec
    3e58:	ldr	r0, [fp, #-16]
    3e5c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3e60:	str	r0, [fp, #-20]	; 0xffffffec
    3e64:	sub	r3, fp, #8
    3e68:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3e6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3e70:	ldr	r0, [fp, #-16]
    3e74:	bl	a68 <flatcc_json_parser_object_end>
    3e78:	str	r0, [fp, #-20]	; 0xffffffec
    3e7c:	ldr	r3, [fp, #-8]
    3e80:	cmp	r3, #0
    3e84:	bne	3e50 <InGlobalNamespace_parse_json_struct_inline+0x38>
    3e88:	ldr	r3, [fp, #-20]	; 0xffffffec
    3e8c:	mov	r0, r3
    3e90:	sub	sp, fp, #4
    3e94:	pop	{fp, pc}

00003e98 <InGlobalNamespace_parse_json_struct>:
    3e98:	push	{fp, lr}
    3e9c:	add	fp, sp, #4
    3ea0:	sub	sp, sp, #24
    3ea4:	str	r0, [fp, #-16]
    3ea8:	str	r1, [fp, #-20]	; 0xffffffec
    3eac:	str	r2, [fp, #-24]	; 0xffffffe8
    3eb0:	str	r3, [fp, #-28]	; 0xffffffe4
    3eb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3eb8:	mov	r2, #0
    3ebc:	str	r2, [r3]
    3ec0:	ldr	r3, [fp, #-16]
    3ec4:	ldr	r3, [r3]
    3ec8:	mov	r2, #1
    3ecc:	mov	r1, #0
    3ed0:	mov	r0, r3
    3ed4:	bl	0 <flatcc_builder_start_struct>
    3ed8:	str	r0, [fp, #-8]
    3edc:	ldr	r3, [fp, #-8]
    3ee0:	cmp	r3, #0
    3ee4:	beq	3f44 <InGlobalNamespace_parse_json_struct+0xac>
    3ee8:	ldr	r3, [fp, #-8]
    3eec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3ef0:	ldr	r1, [fp, #-20]	; 0xffffffec
    3ef4:	ldr	r0, [fp, #-16]
    3ef8:	bl	3e18 <InGlobalNamespace_parse_json_struct_inline>
    3efc:	str	r0, [fp, #-20]	; 0xffffffec
    3f00:	ldr	r2, [fp, #-20]	; 0xffffffec
    3f04:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3f08:	cmp	r2, r3
    3f0c:	beq	3f48 <InGlobalNamespace_parse_json_struct+0xb0>
    3f10:	ldr	r3, [fp, #-16]
    3f14:	ldr	r3, [r3]
    3f18:	mov	r0, r3
    3f1c:	bl	0 <flatcc_builder_end_struct>
    3f20:	mov	r2, r0
    3f24:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3f28:	str	r2, [r3]
    3f2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3f30:	ldr	r3, [r3]
    3f34:	cmp	r3, #0
    3f38:	beq	3f48 <InGlobalNamespace_parse_json_struct+0xb0>
    3f3c:	ldr	r3, [fp, #-20]	; 0xffffffec
    3f40:	b	3f60 <InGlobalNamespace_parse_json_struct+0xc8>
    3f44:	nop			; (mov r0, r0)
    3f48:	mov	r3, #33	; 0x21
    3f4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3f50:	ldr	r1, [fp, #-20]	; 0xffffffec
    3f54:	ldr	r0, [fp, #-16]
    3f58:	bl	0 <flatcc_json_parser_set_error>
    3f5c:	mov	r3, r0
    3f60:	mov	r0, r3
    3f64:	sub	sp, fp, #4
    3f68:	pop	{fp, pc}

00003f6c <MyGame_InParentNamespace_parse_json_table>:
    3f6c:	push	{fp, lr}
    3f70:	add	fp, sp, #4
    3f74:	sub	sp, sp, #24
    3f78:	str	r0, [fp, #-16]
    3f7c:	str	r1, [fp, #-20]	; 0xffffffec
    3f80:	str	r2, [fp, #-24]	; 0xffffffe8
    3f84:	str	r3, [fp, #-28]	; 0xffffffe4
    3f88:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3f8c:	mov	r2, #0
    3f90:	str	r2, [r3]
    3f94:	ldr	r3, [fp, #-16]
    3f98:	ldr	r3, [r3]
    3f9c:	mov	r1, #0
    3fa0:	mov	r0, r3
    3fa4:	bl	0 <flatcc_builder_start_table>
    3fa8:	mov	r3, r0
    3fac:	cmp	r3, #0
    3fb0:	bne	4060 <MyGame_InParentNamespace_parse_json_table+0xf4>
    3fb4:	sub	r3, fp, #8
    3fb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
    3fc0:	ldr	r0, [fp, #-16]
    3fc4:	bl	980 <flatcc_json_parser_object_start>
    3fc8:	str	r0, [fp, #-20]	; 0xffffffec
    3fcc:	b	4010 <MyGame_InParentNamespace_parse_json_table+0xa4>
    3fd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3fd4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3fd8:	ldr	r0, [fp, #-16]
    3fdc:	bl	570 <flatcc_json_parser_symbol_start>
    3fe0:	str	r0, [fp, #-20]	; 0xffffffec
    3fe4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3fe8:	ldr	r1, [fp, #-20]	; 0xffffffec
    3fec:	ldr	r0, [fp, #-16]
    3ff0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3ff4:	str	r0, [fp, #-20]	; 0xffffffec
    3ff8:	sub	r3, fp, #8
    3ffc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4000:	ldr	r1, [fp, #-20]	; 0xffffffec
    4004:	ldr	r0, [fp, #-16]
    4008:	bl	a68 <flatcc_json_parser_object_end>
    400c:	str	r0, [fp, #-20]	; 0xffffffec
    4010:	ldr	r3, [fp, #-8]
    4014:	cmp	r3, #0
    4018:	bne	3fd0 <MyGame_InParentNamespace_parse_json_table+0x64>
    401c:	ldr	r3, [fp, #-16]
    4020:	ldr	r3, [r3, #24]
    4024:	cmp	r3, #0
    4028:	bne	4068 <MyGame_InParentNamespace_parse_json_table+0xfc>
    402c:	ldr	r3, [fp, #-16]
    4030:	ldr	r3, [r3]
    4034:	mov	r0, r3
    4038:	bl	0 <flatcc_builder_end_table>
    403c:	mov	r2, r0
    4040:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4044:	str	r2, [r3]
    4048:	ldr	r3, [fp, #-28]	; 0xffffffe4
    404c:	ldr	r3, [r3]
    4050:	cmp	r3, #0
    4054:	beq	4070 <MyGame_InParentNamespace_parse_json_table+0x104>
    4058:	ldr	r3, [fp, #-20]	; 0xffffffec
    405c:	b	408c <MyGame_InParentNamespace_parse_json_table+0x120>
    4060:	nop			; (mov r0, r0)
    4064:	b	4074 <MyGame_InParentNamespace_parse_json_table+0x108>
    4068:	nop			; (mov r0, r0)
    406c:	b	4074 <MyGame_InParentNamespace_parse_json_table+0x108>
    4070:	nop			; (mov r0, r0)
    4074:	mov	r3, #33	; 0x21
    4078:	ldr	r2, [fp, #-24]	; 0xffffffe8
    407c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4080:	ldr	r0, [fp, #-16]
    4084:	bl	0 <flatcc_json_parser_set_error>
    4088:	mov	r3, r0
    408c:	mov	r0, r3
    4090:	sub	sp, fp, #4
    4094:	pop	{fp, pc}

00004098 <MyGame_Example2_Monster_parse_json_table>:
    4098:	push	{fp, lr}
    409c:	add	fp, sp, #4
    40a0:	sub	sp, sp, #24
    40a4:	str	r0, [fp, #-16]
    40a8:	str	r1, [fp, #-20]	; 0xffffffec
    40ac:	str	r2, [fp, #-24]	; 0xffffffe8
    40b0:	str	r3, [fp, #-28]	; 0xffffffe4
    40b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    40b8:	mov	r2, #0
    40bc:	str	r2, [r3]
    40c0:	ldr	r3, [fp, #-16]
    40c4:	ldr	r3, [r3]
    40c8:	mov	r1, #0
    40cc:	mov	r0, r3
    40d0:	bl	0 <flatcc_builder_start_table>
    40d4:	mov	r3, r0
    40d8:	cmp	r3, #0
    40dc:	bne	418c <MyGame_Example2_Monster_parse_json_table+0xf4>
    40e0:	sub	r3, fp, #8
    40e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    40e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    40ec:	ldr	r0, [fp, #-16]
    40f0:	bl	980 <flatcc_json_parser_object_start>
    40f4:	str	r0, [fp, #-20]	; 0xffffffec
    40f8:	b	413c <MyGame_Example2_Monster_parse_json_table+0xa4>
    40fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4100:	ldr	r1, [fp, #-20]	; 0xffffffec
    4104:	ldr	r0, [fp, #-16]
    4108:	bl	570 <flatcc_json_parser_symbol_start>
    410c:	str	r0, [fp, #-20]	; 0xffffffec
    4110:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4114:	ldr	r1, [fp, #-20]	; 0xffffffec
    4118:	ldr	r0, [fp, #-16]
    411c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4120:	str	r0, [fp, #-20]	; 0xffffffec
    4124:	sub	r3, fp, #8
    4128:	ldr	r2, [fp, #-24]	; 0xffffffe8
    412c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4130:	ldr	r0, [fp, #-16]
    4134:	bl	a68 <flatcc_json_parser_object_end>
    4138:	str	r0, [fp, #-20]	; 0xffffffec
    413c:	ldr	r3, [fp, #-8]
    4140:	cmp	r3, #0
    4144:	bne	40fc <MyGame_Example2_Monster_parse_json_table+0x64>
    4148:	ldr	r3, [fp, #-16]
    414c:	ldr	r3, [r3, #24]
    4150:	cmp	r3, #0
    4154:	bne	4194 <MyGame_Example2_Monster_parse_json_table+0xfc>
    4158:	ldr	r3, [fp, #-16]
    415c:	ldr	r3, [r3]
    4160:	mov	r0, r3
    4164:	bl	0 <flatcc_builder_end_table>
    4168:	mov	r2, r0
    416c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4170:	str	r2, [r3]
    4174:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4178:	ldr	r3, [r3]
    417c:	cmp	r3, #0
    4180:	beq	419c <MyGame_Example2_Monster_parse_json_table+0x104>
    4184:	ldr	r3, [fp, #-20]	; 0xffffffec
    4188:	b	41b8 <MyGame_Example2_Monster_parse_json_table+0x120>
    418c:	nop			; (mov r0, r0)
    4190:	b	41a0 <MyGame_Example2_Monster_parse_json_table+0x108>
    4194:	nop			; (mov r0, r0)
    4198:	b	41a0 <MyGame_Example2_Monster_parse_json_table+0x108>
    419c:	nop			; (mov r0, r0)
    41a0:	mov	r3, #33	; 0x21
    41a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    41a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    41ac:	ldr	r0, [fp, #-16]
    41b0:	bl	0 <flatcc_json_parser_set_error>
    41b4:	mov	r3, r0
    41b8:	mov	r0, r3
    41bc:	sub	sp, fp, #4
    41c0:	pop	{fp, pc}

000041c4 <MyGame_Example_Foo_parse_json_union>:
    41c4:	push	{fp, lr}
    41c8:	add	fp, sp, #4
    41cc:	sub	sp, sp, #16
    41d0:	str	r0, [fp, #-8]
    41d4:	str	r1, [fp, #-12]
    41d8:	str	r2, [fp, #-16]
    41dc:	strb	r3, [fp, #-17]	; 0xffffffef
    41e0:	ldr	r3, [fp, #4]
    41e4:	mov	r2, #0
    41e8:	str	r2, [r3]
    41ec:	ldrb	r3, [fp, #-17]	; 0xffffffef
    41f0:	cmp	r3, #0
    41f4:	beq	4204 <MyGame_Example_Foo_parse_json_union+0x40>
    41f8:	cmp	r3, #1
    41fc:	beq	421c <MyGame_Example_Foo_parse_json_union+0x58>
    4200:	b	424c <MyGame_Example_Foo_parse_json_union+0x88>
    4204:	ldr	r2, [fp, #-16]
    4208:	ldr	r1, [fp, #-12]
    420c:	ldr	r0, [fp, #-8]
    4210:	bl	15c4 <flatcc_json_parser_none>
    4214:	mov	r3, r0
    4218:	b	42cc <MyGame_Example_Foo_parse_json_union+0x108>
    421c:	ldr	r3, [fp, #4]
    4220:	ldr	r2, [fp, #-16]
    4224:	ldr	r1, [fp, #-12]
    4228:	ldr	r0, [fp, #-8]
    422c:	bl	3f6c <MyGame_InParentNamespace_parse_json_table>
    4230:	str	r0, [fp, #-12]
    4234:	nop			; (mov r0, r0)
    4238:	ldr	r3, [fp, #-8]
    423c:	ldr	r3, [r3, #24]
    4240:	cmp	r3, #0
    4244:	beq	429c <MyGame_Example_Foo_parse_json_union+0xd8>
    4248:	b	4294 <MyGame_Example_Foo_parse_json_union+0xd0>
    424c:	ldr	r3, [fp, #-8]
    4250:	ldr	r3, [r3, #8]
    4254:	and	r3, r3, #1
    4258:	cmp	r3, #0
    425c:	bne	427c <MyGame_Example_Foo_parse_json_union+0xb8>
    4260:	mov	r3, #15
    4264:	ldr	r2, [fp, #-16]
    4268:	ldr	r1, [fp, #-12]
    426c:	ldr	r0, [fp, #-8]
    4270:	bl	0 <flatcc_json_parser_set_error>
    4274:	mov	r3, r0
    4278:	b	42cc <MyGame_Example_Foo_parse_json_union+0x108>
    427c:	ldr	r2, [fp, #-16]
    4280:	ldr	r1, [fp, #-12]
    4284:	ldr	r0, [fp, #-8]
    4288:	bl	0 <flatcc_json_parser_generic_json>
    428c:	mov	r3, r0
    4290:	b	42cc <MyGame_Example_Foo_parse_json_union+0x108>
    4294:	ldr	r3, [fp, #-12]
    4298:	b	42cc <MyGame_Example_Foo_parse_json_union+0x108>
    429c:	ldr	r3, [fp, #4]
    42a0:	ldr	r3, [r3]
    42a4:	cmp	r3, #0
    42a8:	bne	42c8 <MyGame_Example_Foo_parse_json_union+0x104>
    42ac:	mov	r3, #33	; 0x21
    42b0:	ldr	r2, [fp, #-16]
    42b4:	ldr	r1, [fp, #-12]
    42b8:	ldr	r0, [fp, #-8]
    42bc:	bl	0 <flatcc_json_parser_set_error>
    42c0:	mov	r3, r0
    42c4:	b	42cc <MyGame_Example_Foo_parse_json_union+0x108>
    42c8:	ldr	r3, [fp, #-12]
    42cc:	mov	r0, r3
    42d0:	sub	sp, fp, #4
    42d4:	pop	{fp, pc}

000042d8 <MyGame_Example_Foo_json_union_accept_type>:
    42d8:	push	{fp}		; (str fp, [sp, #-4]!)
    42dc:	add	fp, sp, #0
    42e0:	sub	sp, sp, #12
    42e4:	mov	r3, r0
    42e8:	strb	r3, [fp, #-5]
    42ec:	ldrb	r3, [fp, #-5]
    42f0:	cmp	r3, #0
    42f4:	beq	4304 <MyGame_Example_Foo_json_union_accept_type+0x2c>
    42f8:	cmp	r3, #1
    42fc:	beq	430c <MyGame_Example_Foo_json_union_accept_type+0x34>
    4300:	b	4314 <MyGame_Example_Foo_json_union_accept_type+0x3c>
    4304:	mov	r3, #1
    4308:	b	4318 <MyGame_Example_Foo_json_union_accept_type+0x40>
    430c:	mov	r3, #1
    4310:	b	4318 <MyGame_Example_Foo_json_union_accept_type+0x40>
    4314:	mov	r3, #0
    4318:	mov	r0, r3
    431c:	add	sp, fp, #0
    4320:	pop	{fp}		; (ldr fp, [sp], #4)
    4324:	bx	lr

00004328 <MyGame_Example_Foo_parse_json_enum>:
    4328:	push	{fp, lr}
    432c:	add	fp, sp, #4
    4330:	sub	sp, sp, #48	; 0x30
    4334:	str	r0, [fp, #-32]	; 0xffffffe0
    4338:	str	r1, [fp, #-36]	; 0xffffffdc
    433c:	str	r2, [fp, #-40]	; 0xffffffd8
    4340:	str	r3, [fp, #-44]	; 0xffffffd4
    4344:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4348:	str	r3, [fp, #-8]
    434c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4350:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4354:	bl	854 <flatcc_json_parser_symbol_part>
    4358:	strd	r0, [fp, #-20]	; 0xffffffec
    435c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4360:	add	r1, pc, #400	; 0x190
    4364:	ldrd	r0, [r1]
    4368:	cmp	r3, r1
    436c:	cmpeq	r2, r0
    4370:	bne	4454 <MyGame_Example_Foo_parse_json_enum+0x12c>
    4374:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4378:	add	r3, r3, #8
    437c:	str	r3, [fp, #-36]	; 0xffffffdc
    4380:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4384:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4388:	bl	854 <flatcc_json_parser_symbol_part>
    438c:	strd	r0, [fp, #-20]	; 0xffffffec
    4390:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4394:	add	r1, pc, #356	; 0x164
    4398:	ldrd	r0, [r1]
    439c:	cmp	r3, r1
    43a0:	cmpeq	r2, r0
    43a4:	bne	444c <MyGame_Example_Foo_parse_json_enum+0x124>
    43a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    43ac:	add	r3, r3, #8
    43b0:	str	r3, [fp, #-36]	; 0xffffffdc
    43b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    43b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    43bc:	bl	854 <flatcc_json_parser_symbol_part>
    43c0:	strd	r0, [fp, #-20]	; 0xffffffec
    43c4:	ldrd	r2, [fp, #-20]	; 0xffffffec
    43c8:	mov	r0, #0
    43cc:	mov	r1, #-16777216	; 0xff000000
    43d0:	and	r2, r2, r0
    43d4:	and	r3, r3, r1
    43d8:	cmp	r3, #1694498816	; 0x65000000
    43dc:	cmpeq	r2, #0
    43e0:	bne	4444 <MyGame_Example_Foo_parse_json_enum+0x11c>
    43e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    43e8:	str	r3, [fp, #-24]	; 0xffffffe8
    43ec:	ldr	r3, [fp, #8]
    43f0:	str	r3, [sp]
    43f4:	mov	r3, #1
    43f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    43fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4400:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4404:	bl	0 <flatcc_json_parser_match_constant>
    4408:	str	r0, [fp, #-36]	; 0xffffffdc
    440c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4410:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4414:	cmp	r2, r3
    4418:	beq	443c <MyGame_Example_Foo_parse_json_enum+0x114>
    441c:	ldr	r1, [fp, #4]
    4420:	mov	r2, #1
    4424:	mov	r3, #0
    4428:	strd	r2, [r1]
    442c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4430:	mov	r2, #0
    4434:	str	r2, [r3]
    4438:	b	44e4 <MyGame_Example_Foo_parse_json_enum+0x1bc>
    443c:	ldr	r3, [fp, #-8]
    4440:	b	44e8 <MyGame_Example_Foo_parse_json_enum+0x1c0>
    4444:	ldr	r3, [fp, #-8]
    4448:	b	44e8 <MyGame_Example_Foo_parse_json_enum+0x1c0>
    444c:	ldr	r3, [fp, #-8]
    4450:	b	44e8 <MyGame_Example_Foo_parse_json_enum+0x1c0>
    4454:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4458:	mov	r0, #0
    445c:	mvn	r1, #0
    4460:	and	r2, r2, r0
    4464:	and	r3, r3, r1
    4468:	add	r1, pc, #152	; 0x98
    446c:	ldrd	r0, [r1]
    4470:	cmp	r3, r1
    4474:	cmpeq	r2, r0
    4478:	bne	44dc <MyGame_Example_Foo_parse_json_enum+0x1b4>
    447c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4480:	str	r3, [fp, #-24]	; 0xffffffe8
    4484:	ldr	r3, [fp, #8]
    4488:	str	r3, [sp]
    448c:	mov	r3, #4
    4490:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4494:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4498:	ldr	r0, [fp, #-32]	; 0xffffffe0
    449c:	bl	0 <flatcc_json_parser_match_constant>
    44a0:	str	r0, [fp, #-36]	; 0xffffffdc
    44a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    44a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    44ac:	cmp	r2, r3
    44b0:	beq	44d4 <MyGame_Example_Foo_parse_json_enum+0x1ac>
    44b4:	ldr	r1, [fp, #4]
    44b8:	mov	r2, #0
    44bc:	mov	r3, #0
    44c0:	strd	r2, [r1]
    44c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    44c8:	mov	r2, #0
    44cc:	str	r2, [r3]
    44d0:	b	44e4 <MyGame_Example_Foo_parse_json_enum+0x1bc>
    44d4:	ldr	r3, [fp, #-8]
    44d8:	b	44e8 <MyGame_Example_Foo_parse_json_enum+0x1c0>
    44dc:	ldr	r3, [fp, #-8]
    44e0:	b	44e8 <MyGame_Example_Foo_parse_json_enum+0x1c0>
    44e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    44e8:	mov	r0, r3
    44ec:	sub	sp, fp, #4
    44f0:	pop	{fp, pc}
    44f4:	nop			; (mov r0, r0)
    44f8:	.word	0x72656e74
    44fc:	.word	0x496e5061
    4500:	.word	0x73706163
    4504:	.word	0x4e616d65
    4508:	.word	0x00000000
    450c:	.word	0x4e4f4e45

00004510 <MyGame_Example_neg_enum_parse_json_enum>:
    4510:	push	{fp, lr}
    4514:	add	fp, sp, #4
    4518:	sub	sp, sp, #48	; 0x30
    451c:	str	r0, [fp, #-32]	; 0xffffffe0
    4520:	str	r1, [fp, #-36]	; 0xffffffdc
    4524:	str	r2, [fp, #-40]	; 0xffffffd8
    4528:	str	r3, [fp, #-44]	; 0xffffffd4
    452c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4530:	str	r3, [fp, #-8]
    4534:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4538:	ldr	r0, [fp, #-36]	; 0xffffffdc
    453c:	bl	854 <flatcc_json_parser_symbol_part>
    4540:	strd	r0, [fp, #-20]	; 0xffffffec
    4544:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4548:	add	r1, pc, #456	; 0x1c8
    454c:	ldrd	r0, [r1]
    4550:	cmp	r3, r1
    4554:	cmpeq	r2, r0
    4558:	bhi	45ec <MyGame_Example_neg_enum_parse_json_enum+0xdc>
    455c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4560:	mov	r0, #0
    4564:	mvn	r1, #0
    4568:	and	r2, r2, r0
    456c:	and	r3, r3, r1
    4570:	add	r1, pc, #424	; 0x1a8
    4574:	ldrd	r0, [r1]
    4578:	cmp	r3, r1
    457c:	cmpeq	r2, r0
    4580:	bne	45e4 <MyGame_Example_neg_enum_parse_json_enum+0xd4>
    4584:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4588:	str	r3, [fp, #-24]	; 0xffffffe8
    458c:	ldr	r3, [fp, #8]
    4590:	str	r3, [sp]
    4594:	mov	r3, #4
    4598:	ldr	r2, [fp, #-40]	; 0xffffffd8
    459c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    45a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    45a4:	bl	0 <flatcc_json_parser_match_constant>
    45a8:	str	r0, [fp, #-36]	; 0xffffffdc
    45ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
    45b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    45b4:	cmp	r2, r3
    45b8:	beq	45dc <MyGame_Example_neg_enum_parse_json_enum+0xcc>
    45bc:	ldr	r1, [fp, #4]
    45c0:	mvn	r2, #11
    45c4:	mvn	r3, #0
    45c8:	strd	r2, [r1]
    45cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    45d0:	mov	r2, #1
    45d4:	str	r2, [r3]
    45d8:	b	4704 <MyGame_Example_neg_enum_parse_json_enum+0x1f4>
    45dc:	ldr	r3, [fp, #-8]
    45e0:	b	4708 <MyGame_Example_neg_enum_parse_json_enum+0x1f8>
    45e4:	ldr	r3, [fp, #-8]
    45e8:	b	4708 <MyGame_Example_neg_enum_parse_json_enum+0x1f8>
    45ec:	ldrd	r2, [fp, #-20]	; 0xffffffec
    45f0:	mov	r0, #0
    45f4:	mvn	r1, #0
    45f8:	and	r2, r2, r0
    45fc:	and	r3, r3, r1
    4600:	add	r1, pc, #288	; 0x120
    4604:	ldrd	r0, [r1]
    4608:	cmp	r3, r1
    460c:	cmpeq	r2, r0
    4610:	bne	4674 <MyGame_Example_neg_enum_parse_json_enum+0x164>
    4614:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4618:	str	r3, [fp, #-24]	; 0xffffffe8
    461c:	ldr	r3, [fp, #8]
    4620:	str	r3, [sp]
    4624:	mov	r3, #4
    4628:	ldr	r2, [fp, #-40]	; 0xffffffd8
    462c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4630:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4634:	bl	0 <flatcc_json_parser_match_constant>
    4638:	str	r0, [fp, #-36]	; 0xffffffdc
    463c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4640:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4644:	cmp	r2, r3
    4648:	beq	466c <MyGame_Example_neg_enum_parse_json_enum+0x15c>
    464c:	ldr	r1, [fp, #4]
    4650:	mvn	r2, #9
    4654:	mvn	r3, #0
    4658:	strd	r2, [r1]
    465c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4660:	mov	r2, #1
    4664:	str	r2, [r3]
    4668:	b	4704 <MyGame_Example_neg_enum_parse_json_enum+0x1f4>
    466c:	ldr	r3, [fp, #-8]
    4670:	b	4708 <MyGame_Example_neg_enum_parse_json_enum+0x1f8>
    4674:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4678:	mov	r0, #0
    467c:	mvn	r1, #0
    4680:	and	r2, r2, r0
    4684:	and	r3, r3, r1
    4688:	add	r1, pc, #160	; 0xa0
    468c:	ldrd	r0, [r1]
    4690:	cmp	r3, r1
    4694:	cmpeq	r2, r0
    4698:	bne	46fc <MyGame_Example_neg_enum_parse_json_enum+0x1ec>
    469c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    46a0:	str	r3, [fp, #-24]	; 0xffffffe8
    46a4:	ldr	r3, [fp, #8]
    46a8:	str	r3, [sp]
    46ac:	mov	r3, #4
    46b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    46b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    46b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    46bc:	bl	0 <flatcc_json_parser_match_constant>
    46c0:	str	r0, [fp, #-36]	; 0xffffffdc
    46c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    46c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    46cc:	cmp	r2, r3
    46d0:	beq	46f4 <MyGame_Example_neg_enum_parse_json_enum+0x1e4>
    46d4:	ldr	r1, [fp, #4]
    46d8:	mvn	r2, #10
    46dc:	mvn	r3, #0
    46e0:	strd	r2, [r1]
    46e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    46e8:	mov	r2, #1
    46ec:	str	r2, [r3]
    46f0:	b	4704 <MyGame_Example_neg_enum_parse_json_enum+0x1f4>
    46f4:	ldr	r3, [fp, #-8]
    46f8:	b	4708 <MyGame_Example_neg_enum_parse_json_enum+0x1f8>
    46fc:	ldr	r3, [fp, #-8]
    4700:	b	4708 <MyGame_Example_neg_enum_parse_json_enum+0x1f8>
    4704:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4708:	mov	r0, r3
    470c:	sub	sp, fp, #4
    4710:	pop	{fp, pc}
    4714:	nop			; (mov r0, r0)
    4718:	.word	0xffffffff
    471c:	.word	0x6e656731
    4720:	.word	0x00000000
    4724:	.word	0x6e656731
    4728:	.word	0x00000000
    472c:	.word	0x6e656733
    4730:	.word	0x00000000
    4734:	.word	0x6e656732

00004738 <MyGame_Example_int_enum_parse_json_enum>:
    4738:	push	{fp, lr}
    473c:	add	fp, sp, #4
    4740:	sub	sp, sp, #48	; 0x30
    4744:	str	r0, [fp, #-32]	; 0xffffffe0
    4748:	str	r1, [fp, #-36]	; 0xffffffdc
    474c:	str	r2, [fp, #-40]	; 0xffffffd8
    4750:	str	r3, [fp, #-44]	; 0xffffffd4
    4754:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4758:	str	r3, [fp, #-8]
    475c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4760:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4764:	bl	854 <flatcc_json_parser_symbol_part>
    4768:	strd	r0, [fp, #-20]	; 0xffffffec
    476c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4770:	add	r1, pc, #624	; 0x270
    4774:	ldrd	r0, [r1]
    4778:	cmp	r3, r1
    477c:	cmpeq	r2, r0
    4780:	bhi	4814 <MyGame_Example_int_enum_parse_json_enum+0xdc>
    4784:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4788:	mov	r0, #0
    478c:	mvn	r1, #0
    4790:	and	r2, r2, r0
    4794:	and	r3, r3, r1
    4798:	add	r1, pc, #592	; 0x250
    479c:	ldrd	r0, [r1]
    47a0:	cmp	r3, r1
    47a4:	cmpeq	r2, r0
    47a8:	bne	480c <MyGame_Example_int_enum_parse_json_enum+0xd4>
    47ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    47b0:	str	r3, [fp, #-24]	; 0xffffffe8
    47b4:	ldr	r3, [fp, #8]
    47b8:	str	r3, [sp]
    47bc:	mov	r3, #4
    47c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    47c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    47c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    47cc:	bl	0 <flatcc_json_parser_match_constant>
    47d0:	str	r0, [fp, #-36]	; 0xffffffdc
    47d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    47d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    47dc:	cmp	r2, r3
    47e0:	beq	4804 <MyGame_Example_int_enum_parse_json_enum+0xcc>
    47e4:	ldr	r1, [fp, #4]
    47e8:	mov	r2, #2
    47ec:	mov	r3, #0
    47f0:	strd	r2, [r1]
    47f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    47f8:	mov	r2, #0
    47fc:	str	r2, [r3]
    4800:	b	49d4 <MyGame_Example_int_enum_parse_json_enum+0x29c>
    4804:	ldr	r3, [fp, #-8]
    4808:	b	49d8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    480c:	ldr	r3, [fp, #-8]
    4810:	b	49d8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    4814:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4818:	add	r1, pc, #472	; 0x1d8
    481c:	ldrd	r0, [r1]
    4820:	cmp	r3, r1
    4824:	cmpeq	r2, r0
    4828:	bhi	48bc <MyGame_Example_int_enum_parse_json_enum+0x184>
    482c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4830:	mov	r0, #0
    4834:	mvn	r1, #0
    4838:	and	r2, r2, r0
    483c:	and	r3, r3, r1
    4840:	add	r1, pc, #440	; 0x1b8
    4844:	ldrd	r0, [r1]
    4848:	cmp	r3, r1
    484c:	cmpeq	r2, r0
    4850:	bne	48b4 <MyGame_Example_int_enum_parse_json_enum+0x17c>
    4854:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4858:	str	r3, [fp, #-24]	; 0xffffffe8
    485c:	ldr	r3, [fp, #8]
    4860:	str	r3, [sp]
    4864:	mov	r3, #4
    4868:	ldr	r2, [fp, #-40]	; 0xffffffd8
    486c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4870:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4874:	bl	0 <flatcc_json_parser_match_constant>
    4878:	str	r0, [fp, #-36]	; 0xffffffdc
    487c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4880:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4884:	cmp	r2, r3
    4888:	beq	48ac <MyGame_Example_int_enum_parse_json_enum+0x174>
    488c:	ldr	r1, [fp, #4]
    4890:	mov	r2, #42	; 0x2a
    4894:	mov	r3, #0
    4898:	strd	r2, [r1]
    489c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    48a0:	mov	r2, #0
    48a4:	str	r2, [r3]
    48a8:	b	49d4 <MyGame_Example_int_enum_parse_json_enum+0x29c>
    48ac:	ldr	r3, [fp, #-8]
    48b0:	b	49d8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    48b4:	ldr	r3, [fp, #-8]
    48b8:	b	49d8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    48bc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    48c0:	mvn	r0, #255	; 0xff
    48c4:	mvn	r1, #0
    48c8:	and	r2, r2, r0
    48cc:	and	r3, r3, r1
    48d0:	add	r1, pc, #304	; 0x130
    48d4:	ldrd	r0, [r1]
    48d8:	cmp	r3, r1
    48dc:	cmpeq	r2, r0
    48e0:	bne	4944 <MyGame_Example_int_enum_parse_json_enum+0x20c>
    48e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    48e8:	str	r3, [fp, #-24]	; 0xffffffe8
    48ec:	ldr	r3, [fp, #8]
    48f0:	str	r3, [sp]
    48f4:	mov	r3, #7
    48f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    48fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4900:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4904:	bl	0 <flatcc_json_parser_match_constant>
    4908:	str	r0, [fp, #-36]	; 0xffffffdc
    490c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4910:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4914:	cmp	r2, r3
    4918:	beq	493c <MyGame_Example_int_enum_parse_json_enum+0x204>
    491c:	ldr	r1, [fp, #4]
    4920:	mvn	r2, #0
    4924:	mvn	r3, #0
    4928:	strd	r2, [r1]
    492c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4930:	mov	r2, #1
    4934:	str	r2, [r3]
    4938:	b	49d4 <MyGame_Example_int_enum_parse_json_enum+0x29c>
    493c:	ldr	r3, [fp, #-8]
    4940:	b	49d8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    4944:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4948:	ldr	r0, [pc, #200]	; 4a18 <MyGame_Example_int_enum_parse_json_enum+0x2e0>
    494c:	mvn	r1, #0
    4950:	and	r2, r2, r0
    4954:	and	r3, r3, r1
    4958:	add	r1, pc, #176	; 0xb0
    495c:	ldrd	r0, [r1]
    4960:	cmp	r3, r1
    4964:	cmpeq	r2, r0
    4968:	bne	49cc <MyGame_Example_int_enum_parse_json_enum+0x294>
    496c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4970:	str	r3, [fp, #-24]	; 0xffffffe8
    4974:	ldr	r3, [fp, #8]
    4978:	str	r3, [sp]
    497c:	mov	r3, #6
    4980:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4984:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4988:	ldr	r0, [fp, #-32]	; 0xffffffe0
    498c:	bl	0 <flatcc_json_parser_match_constant>
    4990:	str	r0, [fp, #-36]	; 0xffffffdc
    4994:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4998:	ldr	r3, [fp, #-24]	; 0xffffffe8
    499c:	cmp	r2, r3
    49a0:	beq	49c4 <MyGame_Example_int_enum_parse_json_enum+0x28c>
    49a4:	ldr	r1, [fp, #4]
    49a8:	mvn	r2, #1
    49ac:	mvn	r3, #0
    49b0:	strd	r2, [r1]
    49b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    49b8:	mov	r2, #1
    49bc:	str	r2, [r3]
    49c0:	b	49d4 <MyGame_Example_int_enum_parse_json_enum+0x29c>
    49c4:	ldr	r3, [fp, #-8]
    49c8:	b	49d8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    49cc:	ldr	r3, [fp, #-8]
    49d0:	b	49d8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    49d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    49d8:	mov	r0, r3
    49dc:	sub	sp, fp, #4
    49e0:	pop	{fp, pc}
    49e4:	nop			; (mov r0, r0)
    49e8:	.word	0xffffffff
    49ec:	.word	0x696e7431
    49f0:	.word	0x00000000
    49f4:	.word	0x696e7431
    49f8:	.word	0x6566ffff
    49fc:	.word	0x696e746e
    4a00:	.word	0x00000000
    4a04:	.word	0x696e7432
    4a08:	.word	0x65673200
    4a0c:	.word	0x696e746e
    4a10:	.word	0x65670000
    4a14:	.word	0x696e746e
    4a18:	.word	0xffff0000

00004a1c <MyGame_Example_hex_enum_parse_json_enum>:
    4a1c:	push	{fp, lr}
    4a20:	add	fp, sp, #4
    4a24:	sub	sp, sp, #48	; 0x30
    4a28:	str	r0, [fp, #-32]	; 0xffffffe0
    4a2c:	str	r1, [fp, #-36]	; 0xffffffdc
    4a30:	str	r2, [fp, #-40]	; 0xffffffd8
    4a34:	str	r3, [fp, #-44]	; 0xffffffd4
    4a38:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4a3c:	str	r3, [fp, #-8]
    4a40:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4a44:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4a48:	bl	854 <flatcc_json_parser_symbol_part>
    4a4c:	strd	r0, [fp, #-20]	; 0xffffffec
    4a50:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4a54:	add	r1, pc, #452	; 0x1c4
    4a58:	ldrd	r0, [r1]
    4a5c:	cmp	r3, r1
    4a60:	cmpeq	r2, r0
    4a64:	bhi	4af8 <MyGame_Example_hex_enum_parse_json_enum+0xdc>
    4a68:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4a6c:	mov	r0, #0
    4a70:	mvn	r1, #0
    4a74:	and	r2, r2, r0
    4a78:	and	r3, r3, r1
    4a7c:	add	r1, pc, #420	; 0x1a4
    4a80:	ldrd	r0, [r1]
    4a84:	cmp	r3, r1
    4a88:	cmpeq	r2, r0
    4a8c:	bne	4af0 <MyGame_Example_hex_enum_parse_json_enum+0xd4>
    4a90:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4a94:	str	r3, [fp, #-24]	; 0xffffffe8
    4a98:	ldr	r3, [fp, #8]
    4a9c:	str	r3, [sp]
    4aa0:	mov	r3, #4
    4aa4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4aa8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4aac:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4ab0:	bl	0 <flatcc_json_parser_match_constant>
    4ab4:	str	r0, [fp, #-36]	; 0xffffffdc
    4ab8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4ac0:	cmp	r2, r3
    4ac4:	beq	4ae8 <MyGame_Example_hex_enum_parse_json_enum+0xcc>
    4ac8:	ldr	r1, [fp, #4]
    4acc:	mov	r2, #3
    4ad0:	mov	r3, #0
    4ad4:	strd	r2, [r1]
    4ad8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4adc:	mov	r2, #0
    4ae0:	str	r2, [r3]
    4ae4:	b	4c10 <MyGame_Example_hex_enum_parse_json_enum+0x1f4>
    4ae8:	ldr	r3, [fp, #-8]
    4aec:	b	4c14 <MyGame_Example_hex_enum_parse_json_enum+0x1f8>
    4af0:	ldr	r3, [fp, #-8]
    4af4:	b	4c14 <MyGame_Example_hex_enum_parse_json_enum+0x1f8>
    4af8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4afc:	ldr	r0, [pc, #324]	; 4c48 <MyGame_Example_hex_enum_parse_json_enum+0x22c>
    4b00:	mvn	r1, #0
    4b04:	and	r2, r2, r0
    4b08:	and	r3, r3, r1
    4b0c:	add	r1, pc, #284	; 0x11c
    4b10:	ldrd	r0, [r1]
    4b14:	cmp	r3, r1
    4b18:	cmpeq	r2, r0
    4b1c:	bne	4b80 <MyGame_Example_hex_enum_parse_json_enum+0x164>
    4b20:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4b24:	str	r3, [fp, #-24]	; 0xffffffe8
    4b28:	ldr	r3, [fp, #8]
    4b2c:	str	r3, [sp]
    4b30:	mov	r3, #6
    4b34:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4b38:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4b3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4b40:	bl	0 <flatcc_json_parser_match_constant>
    4b44:	str	r0, [fp, #-36]	; 0xffffffdc
    4b48:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4b4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4b50:	cmp	r2, r3
    4b54:	beq	4b78 <MyGame_Example_hex_enum_parse_json_enum+0x15c>
    4b58:	ldr	r1, [fp, #4]
    4b5c:	mvn	r2, #1
    4b60:	mvn	r3, #0
    4b64:	strd	r2, [r1]
    4b68:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4b6c:	mov	r2, #1
    4b70:	str	r2, [r3]
    4b74:	b	4c10 <MyGame_Example_hex_enum_parse_json_enum+0x1f4>
    4b78:	ldr	r3, [fp, #-8]
    4b7c:	b	4c14 <MyGame_Example_hex_enum_parse_json_enum+0x1f8>
    4b80:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4b84:	mov	r0, #0
    4b88:	mvn	r1, #0
    4b8c:	and	r2, r2, r0
    4b90:	and	r3, r3, r1
    4b94:	add	r1, pc, #156	; 0x9c
    4b98:	ldrd	r0, [r1]
    4b9c:	cmp	r3, r1
    4ba0:	cmpeq	r2, r0
    4ba4:	bne	4c08 <MyGame_Example_hex_enum_parse_json_enum+0x1ec>
    4ba8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4bac:	str	r3, [fp, #-24]	; 0xffffffe8
    4bb0:	ldr	r3, [fp, #8]
    4bb4:	str	r3, [sp]
    4bb8:	mov	r3, #4
    4bbc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4bc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4bc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4bc8:	bl	0 <flatcc_json_parser_match_constant>
    4bcc:	str	r0, [fp, #-36]	; 0xffffffdc
    4bd0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4bd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4bd8:	cmp	r2, r3
    4bdc:	beq	4c00 <MyGame_Example_hex_enum_parse_json_enum+0x1e4>
    4be0:	ldr	r1, [fp, #4]
    4be4:	add	r3, pc, #84	; 0x54
    4be8:	ldrd	r2, [r3]
    4bec:	strd	r2, [r1]
    4bf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4bf4:	mov	r2, #0
    4bf8:	str	r2, [r3]
    4bfc:	b	4c10 <MyGame_Example_hex_enum_parse_json_enum+0x1f4>
    4c00:	ldr	r3, [fp, #-8]
    4c04:	b	4c14 <MyGame_Example_hex_enum_parse_json_enum+0x1f8>
    4c08:	ldr	r3, [fp, #-8]
    4c0c:	b	4c14 <MyGame_Example_hex_enum_parse_json_enum+0x1f8>
    4c10:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4c14:	mov	r0, r3
    4c18:	sub	sp, fp, #4
    4c1c:	pop	{fp, pc}
    4c20:	.word	0xffffffff
    4c24:	.word	0x68657831
    4c28:	.word	0x00000000
    4c2c:	.word	0x68657831
    4c30:	.word	0x65670000
    4c34:	.word	0x6865786e
    4c38:	.word	0x00000000
    4c3c:	.word	0x68657832
    4c40:	.word	0x7eafbeaf
    4c44:	.word	0x00000000
    4c48:	.word	0xffff0000

00004c4c <MyGame_Example_Color_parse_json_enum>:
    4c4c:	push	{fp, lr}
    4c50:	add	fp, sp, #4
    4c54:	sub	sp, sp, #48	; 0x30
    4c58:	str	r0, [fp, #-32]	; 0xffffffe0
    4c5c:	str	r1, [fp, #-36]	; 0xffffffdc
    4c60:	str	r2, [fp, #-40]	; 0xffffffd8
    4c64:	str	r3, [fp, #-44]	; 0xffffffd4
    4c68:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4c6c:	str	r3, [fp, #-8]
    4c70:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4c74:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4c78:	bl	854 <flatcc_json_parser_symbol_part>
    4c7c:	strd	r0, [fp, #-20]	; 0xffffffec
    4c80:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4c84:	add	r1, pc, #452	; 0x1c4
    4c88:	ldrd	r0, [r1]
    4c8c:	cmp	r3, r1
    4c90:	cmpeq	r2, r0
    4c94:	bhi	4d28 <MyGame_Example_Color_parse_json_enum+0xdc>
    4c98:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4c9c:	mov	r0, #0
    4ca0:	mvn	r1, #0
    4ca4:	and	r2, r2, r0
    4ca8:	and	r3, r3, r1
    4cac:	add	r1, pc, #420	; 0x1a4
    4cb0:	ldrd	r0, [r1]
    4cb4:	cmp	r3, r1
    4cb8:	cmpeq	r2, r0
    4cbc:	bne	4d20 <MyGame_Example_Color_parse_json_enum+0xd4>
    4cc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4cc4:	str	r3, [fp, #-24]	; 0xffffffe8
    4cc8:	ldr	r3, [fp, #8]
    4ccc:	str	r3, [sp]
    4cd0:	mov	r3, #4
    4cd4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4cd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4cdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4ce0:	bl	0 <flatcc_json_parser_match_constant>
    4ce4:	str	r0, [fp, #-36]	; 0xffffffdc
    4ce8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4cec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4cf0:	cmp	r2, r3
    4cf4:	beq	4d18 <MyGame_Example_Color_parse_json_enum+0xcc>
    4cf8:	ldr	r1, [fp, #4]
    4cfc:	mov	r2, #8
    4d00:	mov	r3, #0
    4d04:	strd	r2, [r1]
    4d08:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4d0c:	mov	r2, #0
    4d10:	str	r2, [r3]
    4d14:	b	4e40 <MyGame_Example_Color_parse_json_enum+0x1f4>
    4d18:	ldr	r3, [fp, #-8]
    4d1c:	b	4e44 <MyGame_Example_Color_parse_json_enum+0x1f8>
    4d20:	ldr	r3, [fp, #-8]
    4d24:	b	4e44 <MyGame_Example_Color_parse_json_enum+0x1f8>
    4d28:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4d2c:	mov	r0, #0
    4d30:	mvn	r1, #255	; 0xff
    4d34:	and	r2, r2, r0
    4d38:	and	r3, r3, r1
    4d3c:	add	r1, pc, #284	; 0x11c
    4d40:	ldrd	r0, [r1]
    4d44:	cmp	r3, r1
    4d48:	cmpeq	r2, r0
    4d4c:	bne	4db0 <MyGame_Example_Color_parse_json_enum+0x164>
    4d50:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4d54:	str	r3, [fp, #-24]	; 0xffffffe8
    4d58:	ldr	r3, [fp, #8]
    4d5c:	str	r3, [sp]
    4d60:	mov	r3, #3
    4d64:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4d68:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4d6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4d70:	bl	0 <flatcc_json_parser_match_constant>
    4d74:	str	r0, [fp, #-36]	; 0xffffffdc
    4d78:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4d7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4d80:	cmp	r2, r3
    4d84:	beq	4da8 <MyGame_Example_Color_parse_json_enum+0x15c>
    4d88:	ldr	r1, [fp, #4]
    4d8c:	mov	r2, #1
    4d90:	mov	r3, #0
    4d94:	strd	r2, [r1]
    4d98:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4d9c:	mov	r2, #0
    4da0:	str	r2, [r3]
    4da4:	b	4e40 <MyGame_Example_Color_parse_json_enum+0x1f4>
    4da8:	ldr	r3, [fp, #-8]
    4dac:	b	4e44 <MyGame_Example_Color_parse_json_enum+0x1f8>
    4db0:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4db4:	mov	r0, #-16777216	; 0xff000000
    4db8:	mvn	r1, #0
    4dbc:	and	r2, r2, r0
    4dc0:	and	r3, r3, r1
    4dc4:	add	r1, pc, #156	; 0x9c
    4dc8:	ldrd	r0, [r1]
    4dcc:	cmp	r3, r1
    4dd0:	cmpeq	r2, r0
    4dd4:	bne	4e38 <MyGame_Example_Color_parse_json_enum+0x1ec>
    4dd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4ddc:	str	r3, [fp, #-24]	; 0xffffffe8
    4de0:	ldr	r3, [fp, #8]
    4de4:	str	r3, [sp]
    4de8:	mov	r3, #5
    4dec:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4df0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4df4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4df8:	bl	0 <flatcc_json_parser_match_constant>
    4dfc:	str	r0, [fp, #-36]	; 0xffffffdc
    4e00:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4e04:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4e08:	cmp	r2, r3
    4e0c:	beq	4e30 <MyGame_Example_Color_parse_json_enum+0x1e4>
    4e10:	ldr	r1, [fp, #4]
    4e14:	mov	r2, #2
    4e18:	mov	r3, #0
    4e1c:	strd	r2, [r1]
    4e20:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4e24:	mov	r2, #0
    4e28:	str	r2, [r3]
    4e2c:	b	4e40 <MyGame_Example_Color_parse_json_enum+0x1f4>
    4e30:	ldr	r3, [fp, #-8]
    4e34:	b	4e44 <MyGame_Example_Color_parse_json_enum+0x1f8>
    4e38:	ldr	r3, [fp, #-8]
    4e3c:	b	4e44 <MyGame_Example_Color_parse_json_enum+0x1f8>
    4e40:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4e44:	mov	r0, r3
    4e48:	sub	sp, fp, #4
    4e4c:	pop	{fp, pc}
    4e50:	.word	0x6dffffff
    4e54:	.word	0x47726565
    4e58:	.word	0x00000000
    4e5c:	.word	0x426c7565
    4e60:	.word	0x00000000
    4e64:	.word	0x52656400
    4e68:	.word	0x6e000000
    4e6c:	.word	0x47726565

00004e70 <MyGame_Example_Any_parse_json_union>:
    4e70:	push	{fp, lr}
    4e74:	add	fp, sp, #4
    4e78:	sub	sp, sp, #16
    4e7c:	str	r0, [fp, #-8]
    4e80:	str	r1, [fp, #-12]
    4e84:	str	r2, [fp, #-16]
    4e88:	strb	r3, [fp, #-17]	; 0xffffffef
    4e8c:	ldr	r3, [fp, #4]
    4e90:	mov	r2, #0
    4e94:	str	r2, [r3]
    4e98:	ldrb	r3, [fp, #-17]	; 0xffffffef
    4e9c:	cmp	r3, #4
    4ea0:	ldrls	pc, [pc, r3, lsl #2]
    4ea4:	b	4f44 <MyGame_Example_Any_parse_json_union+0xd4>
    4ea8:	.word	0x00004ebc
    4eac:	.word	0x00004ed4
    4eb0:	.word	0x00004ef0
    4eb4:	.word	0x00004f0c
    4eb8:	.word	0x00004f28
    4ebc:	ldr	r2, [fp, #-16]
    4ec0:	ldr	r1, [fp, #-12]
    4ec4:	ldr	r0, [fp, #-8]
    4ec8:	bl	15c4 <flatcc_json_parser_none>
    4ecc:	mov	r3, r0
    4ed0:	b	4fd4 <MyGame_Example_Any_parse_json_union+0x164>
    4ed4:	ldr	r3, [fp, #4]
    4ed8:	ldr	r2, [fp, #-16]
    4edc:	ldr	r1, [fp, #-12]
    4ee0:	ldr	r0, [fp, #-8]
    4ee4:	bl	a08c <MyGame_Example_Monster_parse_json_table>
    4ee8:	str	r0, [fp, #-12]
    4eec:	b	4f8c <MyGame_Example_Any_parse_json_union+0x11c>
    4ef0:	ldr	r3, [fp, #4]
    4ef4:	ldr	r2, [fp, #-16]
    4ef8:	ldr	r1, [fp, #-12]
    4efc:	ldr	r0, [fp, #-8]
    4f00:	bl	5d08 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>
    4f04:	str	r0, [fp, #-12]
    4f08:	b	4f8c <MyGame_Example_Any_parse_json_union+0x11c>
    4f0c:	ldr	r3, [fp, #4]
    4f10:	ldr	r2, [fp, #-16]
    4f14:	ldr	r1, [fp, #-12]
    4f18:	ldr	r0, [fp, #-8]
    4f1c:	bl	4098 <MyGame_Example2_Monster_parse_json_table>
    4f20:	str	r0, [fp, #-12]
    4f24:	b	4f8c <MyGame_Example_Any_parse_json_union+0x11c>
    4f28:	ldr	r3, [fp, #4]
    4f2c:	ldr	r2, [fp, #-16]
    4f30:	ldr	r1, [fp, #-12]
    4f34:	ldr	r0, [fp, #-8]
    4f38:	bl	7e2c <MyGame_Example_Alt_parse_json_table>
    4f3c:	str	r0, [fp, #-12]
    4f40:	b	4f8c <MyGame_Example_Any_parse_json_union+0x11c>
    4f44:	ldr	r3, [fp, #-8]
    4f48:	ldr	r3, [r3, #8]
    4f4c:	and	r3, r3, #1
    4f50:	cmp	r3, #0
    4f54:	bne	4f74 <MyGame_Example_Any_parse_json_union+0x104>
    4f58:	mov	r3, #15
    4f5c:	ldr	r2, [fp, #-16]
    4f60:	ldr	r1, [fp, #-12]
    4f64:	ldr	r0, [fp, #-8]
    4f68:	bl	0 <flatcc_json_parser_set_error>
    4f6c:	mov	r3, r0
    4f70:	b	4fd4 <MyGame_Example_Any_parse_json_union+0x164>
    4f74:	ldr	r2, [fp, #-16]
    4f78:	ldr	r1, [fp, #-12]
    4f7c:	ldr	r0, [fp, #-8]
    4f80:	bl	0 <flatcc_json_parser_generic_json>
    4f84:	mov	r3, r0
    4f88:	b	4fd4 <MyGame_Example_Any_parse_json_union+0x164>
    4f8c:	ldr	r3, [fp, #-8]
    4f90:	ldr	r3, [r3, #24]
    4f94:	cmp	r3, #0
    4f98:	beq	4fa4 <MyGame_Example_Any_parse_json_union+0x134>
    4f9c:	ldr	r3, [fp, #-12]
    4fa0:	b	4fd4 <MyGame_Example_Any_parse_json_union+0x164>
    4fa4:	ldr	r3, [fp, #4]
    4fa8:	ldr	r3, [r3]
    4fac:	cmp	r3, #0
    4fb0:	bne	4fd0 <MyGame_Example_Any_parse_json_union+0x160>
    4fb4:	mov	r3, #33	; 0x21
    4fb8:	ldr	r2, [fp, #-16]
    4fbc:	ldr	r1, [fp, #-12]
    4fc0:	ldr	r0, [fp, #-8]
    4fc4:	bl	0 <flatcc_json_parser_set_error>
    4fc8:	mov	r3, r0
    4fcc:	b	4fd4 <MyGame_Example_Any_parse_json_union+0x164>
    4fd0:	ldr	r3, [fp, #-12]
    4fd4:	mov	r0, r3
    4fd8:	sub	sp, fp, #4
    4fdc:	pop	{fp, pc}

00004fe0 <MyGame_Example_Any_json_union_accept_type>:
    4fe0:	push	{fp}		; (str fp, [sp, #-4]!)
    4fe4:	add	fp, sp, #0
    4fe8:	sub	sp, sp, #12
    4fec:	mov	r3, r0
    4ff0:	strb	r3, [fp, #-5]
    4ff4:	ldrb	r3, [fp, #-5]
    4ff8:	cmp	r3, #4
    4ffc:	ldrls	pc, [pc, r3, lsl #2]
    5000:	b	5040 <MyGame_Example_Any_json_union_accept_type+0x60>
    5004:	.word	0x00005018
    5008:	.word	0x00005020
    500c:	.word	0x00005028
    5010:	.word	0x00005030
    5014:	.word	0x00005038
    5018:	mov	r3, #1
    501c:	b	5044 <MyGame_Example_Any_json_union_accept_type+0x64>
    5020:	mov	r3, #1
    5024:	b	5044 <MyGame_Example_Any_json_union_accept_type+0x64>
    5028:	mov	r3, #1
    502c:	b	5044 <MyGame_Example_Any_json_union_accept_type+0x64>
    5030:	mov	r3, #1
    5034:	b	5044 <MyGame_Example_Any_json_union_accept_type+0x64>
    5038:	mov	r3, #1
    503c:	b	5044 <MyGame_Example_Any_json_union_accept_type+0x64>
    5040:	mov	r3, #0
    5044:	mov	r0, r3
    5048:	add	sp, fp, #0
    504c:	pop	{fp}		; (ldr fp, [sp], #4)
    5050:	bx	lr

00005054 <MyGame_Example_Any_parse_json_enum>:
    5054:	push	{fp, lr}
    5058:	add	fp, sp, #4
    505c:	sub	sp, sp, #48	; 0x30
    5060:	str	r0, [fp, #-32]	; 0xffffffe0
    5064:	str	r1, [fp, #-36]	; 0xffffffdc
    5068:	str	r2, [fp, #-40]	; 0xffffffd8
    506c:	str	r3, [fp, #-44]	; 0xffffffd4
    5070:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5074:	str	r3, [fp, #-8]
    5078:	ldr	r1, [fp, #-40]	; 0xffffffd8
    507c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5080:	bl	854 <flatcc_json_parser_symbol_part>
    5084:	strd	r0, [fp, #-20]	; 0xffffffec
    5088:	ldrd	r2, [fp, #-20]	; 0xffffffec
    508c:	add	r1, pc, #836	; 0x344
    5090:	ldrd	r0, [r1]
    5094:	cmp	r3, r1
    5098:	cmpeq	r2, r0
    509c:	bhi	5130 <MyGame_Example_Any_parse_json_enum+0xdc>
    50a0:	ldrd	r2, [fp, #-20]	; 0xffffffec
    50a4:	mov	r0, #0
    50a8:	mvn	r1, #255	; 0xff
    50ac:	and	r2, r2, r0
    50b0:	and	r3, r3, r1
    50b4:	add	r1, pc, #804	; 0x324
    50b8:	ldrd	r0, [r1]
    50bc:	cmp	r3, r1
    50c0:	cmpeq	r2, r0
    50c4:	bne	5128 <MyGame_Example_Any_parse_json_enum+0xd4>
    50c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    50cc:	str	r3, [fp, #-24]	; 0xffffffe8
    50d0:	ldr	r3, [fp, #8]
    50d4:	str	r3, [sp]
    50d8:	mov	r3, #3
    50dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    50e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    50e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    50e8:	bl	0 <flatcc_json_parser_match_constant>
    50ec:	str	r0, [fp, #-36]	; 0xffffffdc
    50f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    50f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    50f8:	cmp	r2, r3
    50fc:	beq	5120 <MyGame_Example_Any_parse_json_enum+0xcc>
    5100:	ldr	r1, [fp, #4]
    5104:	mov	r2, #4
    5108:	mov	r3, #0
    510c:	strd	r2, [r1]
    5110:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5114:	mov	r2, #0
    5118:	str	r2, [r3]
    511c:	b	53c8 <MyGame_Example_Any_parse_json_enum+0x374>
    5120:	ldr	r3, [fp, #-8]
    5124:	b	53cc <MyGame_Example_Any_parse_json_enum+0x378>
    5128:	ldr	r3, [fp, #-8]
    512c:	b	53cc <MyGame_Example_Any_parse_json_enum+0x378>
    5130:	ldrd	r2, [fp, #-20]	; 0xffffffec
    5134:	add	r1, pc, #684	; 0x2ac
    5138:	ldrd	r0, [r1]
    513c:	cmp	r3, r1
    5140:	cmpeq	r2, r0
    5144:	bne	51a0 <MyGame_Example_Any_parse_json_enum+0x14c>
    5148:	ldr	r3, [fp, #-36]	; 0xffffffdc
    514c:	str	r3, [fp, #-24]	; 0xffffffe8
    5150:	ldr	r3, [fp, #8]
    5154:	str	r3, [sp]
    5158:	mov	r3, #8
    515c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5160:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5164:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5168:	bl	0 <flatcc_json_parser_match_constant>
    516c:	str	r0, [fp, #-36]	; 0xffffffdc
    5170:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5174:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5178:	cmp	r2, r3
    517c:	beq	5220 <MyGame_Example_Any_parse_json_enum+0x1cc>
    5180:	ldr	r1, [fp, #4]
    5184:	mov	r2, #3
    5188:	mov	r3, #0
    518c:	strd	r2, [r1]
    5190:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5194:	mov	r2, #0
    5198:	str	r2, [r3]
    519c:	b	53c8 <MyGame_Example_Any_parse_json_enum+0x374>
    51a0:	ldrd	r2, [fp, #-20]	; 0xffffffec
    51a4:	mvn	r0, #255	; 0xff
    51a8:	mvn	r1, #0
    51ac:	and	r2, r2, r0
    51b0:	and	r3, r3, r1
    51b4:	add	r1, pc, #564	; 0x234
    51b8:	ldrd	r0, [r1]
    51bc:	cmp	r3, r1
    51c0:	cmpeq	r2, r0
    51c4:	bne	5228 <MyGame_Example_Any_parse_json_enum+0x1d4>
    51c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    51cc:	str	r3, [fp, #-24]	; 0xffffffe8
    51d0:	ldr	r3, [fp, #8]
    51d4:	str	r3, [sp]
    51d8:	mov	r3, #7
    51dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    51e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    51e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    51e8:	bl	0 <flatcc_json_parser_match_constant>
    51ec:	str	r0, [fp, #-36]	; 0xffffffdc
    51f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    51f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    51f8:	cmp	r2, r3
    51fc:	beq	5230 <MyGame_Example_Any_parse_json_enum+0x1dc>
    5200:	ldr	r1, [fp, #4]
    5204:	mov	r2, #1
    5208:	mov	r3, #0
    520c:	strd	r2, [r1]
    5210:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5214:	mov	r2, #0
    5218:	str	r2, [r3]
    521c:	b	53c8 <MyGame_Example_Any_parse_json_enum+0x374>
    5220:	nop			; (mov r0, r0)
    5224:	b	5234 <MyGame_Example_Any_parse_json_enum+0x1e0>
    5228:	nop			; (mov r0, r0)
    522c:	b	5234 <MyGame_Example_Any_parse_json_enum+0x1e0>
    5230:	nop			; (mov r0, r0)
    5234:	ldrd	r2, [fp, #-20]	; 0xffffffec
    5238:	mov	r0, #0
    523c:	mvn	r1, #0
    5240:	and	r2, r2, r0
    5244:	and	r3, r3, r1
    5248:	add	r1, pc, #424	; 0x1a8
    524c:	ldrd	r0, [r1]
    5250:	cmp	r3, r1
    5254:	cmpeq	r2, r0
    5258:	bne	52b4 <MyGame_Example_Any_parse_json_enum+0x260>
    525c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5260:	str	r3, [fp, #-24]	; 0xffffffe8
    5264:	ldr	r3, [fp, #8]
    5268:	str	r3, [sp]
    526c:	mov	r3, #4
    5270:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5274:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5278:	ldr	r0, [fp, #-32]	; 0xffffffe0
    527c:	bl	0 <flatcc_json_parser_match_constant>
    5280:	str	r0, [fp, #-36]	; 0xffffffdc
    5284:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5288:	ldr	r3, [fp, #-24]	; 0xffffffe8
    528c:	cmp	r2, r3
    5290:	beq	52bc <MyGame_Example_Any_parse_json_enum+0x268>
    5294:	ldr	r1, [fp, #4]
    5298:	mov	r2, #0
    529c:	mov	r3, #0
    52a0:	strd	r2, [r1]
    52a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    52a8:	mov	r2, #0
    52ac:	str	r2, [r3]
    52b0:	b	53c8 <MyGame_Example_Any_parse_json_enum+0x374>
    52b4:	nop			; (mov r0, r0)
    52b8:	b	52c0 <MyGame_Example_Any_parse_json_enum+0x26c>
    52bc:	nop			; (mov r0, r0)
    52c0:	ldrd	r2, [fp, #-20]	; 0xffffffec
    52c4:	add	r1, pc, #308	; 0x134
    52c8:	ldrd	r0, [r1]
    52cc:	cmp	r3, r1
    52d0:	cmpeq	r2, r0
    52d4:	bne	53c0 <MyGame_Example_Any_parse_json_enum+0x36c>
    52d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    52dc:	add	r3, r3, #8
    52e0:	str	r3, [fp, #-36]	; 0xffffffdc
    52e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    52e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    52ec:	bl	854 <flatcc_json_parser_symbol_part>
    52f0:	strd	r0, [fp, #-20]	; 0xffffffec
    52f4:	ldrd	r2, [fp, #-20]	; 0xffffffec
    52f8:	add	r1, pc, #264	; 0x108
    52fc:	ldrd	r0, [r1]
    5300:	cmp	r3, r1
    5304:	cmpeq	r2, r0
    5308:	bne	53b8 <MyGame_Example_Any_parse_json_enum+0x364>
    530c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5310:	add	r3, r3, #8
    5314:	str	r3, [fp, #-36]	; 0xffffffdc
    5318:	ldr	r1, [fp, #-40]	; 0xffffffd8
    531c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5320:	bl	854 <flatcc_json_parser_symbol_part>
    5324:	strd	r0, [fp, #-20]	; 0xffffffec
    5328:	ldrd	r2, [fp, #-20]	; 0xffffffec
    532c:	mvn	r0, #255	; 0xff
    5330:	mvn	r1, #0
    5334:	and	r2, r2, r0
    5338:	and	r3, r3, r1
    533c:	add	r1, pc, #204	; 0xcc
    5340:	ldrd	r0, [r1]
    5344:	cmp	r3, r1
    5348:	cmpeq	r2, r0
    534c:	bne	53b0 <MyGame_Example_Any_parse_json_enum+0x35c>
    5350:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5354:	str	r3, [fp, #-24]	; 0xffffffe8
    5358:	ldr	r3, [fp, #8]
    535c:	str	r3, [sp]
    5360:	mov	r3, #7
    5364:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5368:	ldr	r1, [fp, #-24]	; 0xffffffe8
    536c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5370:	bl	0 <flatcc_json_parser_match_constant>
    5374:	str	r0, [fp, #-36]	; 0xffffffdc
    5378:	ldr	r2, [fp, #-36]	; 0xffffffdc
    537c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5380:	cmp	r2, r3
    5384:	beq	53a8 <MyGame_Example_Any_parse_json_enum+0x354>
    5388:	ldr	r1, [fp, #4]
    538c:	mov	r2, #2
    5390:	mov	r3, #0
    5394:	strd	r2, [r1]
    5398:	ldr	r3, [fp, #-44]	; 0xffffffd4
    539c:	mov	r2, #0
    53a0:	str	r2, [r3]
    53a4:	b	53c8 <MyGame_Example_Any_parse_json_enum+0x374>
    53a8:	ldr	r3, [fp, #-8]
    53ac:	b	53cc <MyGame_Example_Any_parse_json_enum+0x378>
    53b0:	ldr	r3, [fp, #-8]
    53b4:	b	53cc <MyGame_Example_Any_parse_json_enum+0x378>
    53b8:	ldr	r3, [fp, #-8]
    53bc:	b	53cc <MyGame_Example_Any_parse_json_enum+0x378>
    53c0:	ldr	r3, [fp, #-8]
    53c4:	b	53cc <MyGame_Example_Any_parse_json_enum+0x378>
    53c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    53cc:	mov	r0, r3
    53d0:	sub	sp, fp, #4
    53d4:	pop	{fp, pc}
    53d8:	.word	0x746571ff
    53dc:	.word	0x4d6f6e73
    53e0:	.word	0x00000000
    53e4:	.word	0x416c7400
    53e8:	.word	0x74657232
    53ec:	.word	0x4d6f6e73
    53f0:	.word	0x74657200
    53f4:	.word	0x4d6f6e73
    53f8:	.word	0x00000000
    53fc:	.word	0x4e4f4e45
    5400:	.word	0x53696d70
    5404:	.word	0x54657374
    5408:	.word	0x626c6557
    540c:	.word	0x6c655461
    5410:	.word	0x6e756d00
    5414:	.word	0x69746845

00005418 <MyGame_Example_Test_parse_json_struct_inline>:
    5418:	push	{fp, lr}
    541c:	add	fp, sp, #4
    5420:	sub	sp, sp, #48	; 0x30
    5424:	str	r0, [fp, #-32]	; 0xffffffe0
    5428:	str	r1, [fp, #-36]	; 0xffffffdc
    542c:	str	r2, [fp, #-40]	; 0xffffffd8
    5430:	str	r3, [fp, #-44]	; 0xffffffd4
    5434:	sub	r3, fp, #24
    5438:	ldr	r2, [fp, #-40]	; 0xffffffd8
    543c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5440:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5444:	bl	980 <flatcc_json_parser_object_start>
    5448:	str	r0, [fp, #-36]	; 0xffffffdc
    544c:	b	56ac <MyGame_Example_Test_parse_json_struct_inline+0x294>
    5450:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5454:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5458:	ldr	r0, [fp, #-32]	; 0xffffffe0
    545c:	bl	570 <flatcc_json_parser_symbol_start>
    5460:	str	r0, [fp, #-36]	; 0xffffffdc
    5464:	ldr	r1, [fp, #-40]	; 0xffffffd8
    5468:	ldr	r0, [fp, #-36]	; 0xffffffdc
    546c:	bl	854 <flatcc_json_parser_symbol_part>
    5470:	strd	r0, [fp, #-12]
    5474:	ldrd	r2, [fp, #-12]
    5478:	mov	r0, #0
    547c:	mov	r1, #-16777216	; 0xff000000
    5480:	and	r2, r2, r0
    5484:	and	r3, r3, r1
    5488:	cmp	r3, #1644167168	; 0x62000000
    548c:	cmpeq	r2, #0
    5490:	bne	557c <MyGame_Example_Test_parse_json_struct_inline+0x164>
    5494:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5498:	str	r3, [fp, #-16]
    549c:	mov	r3, #1
    54a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    54a4:	ldr	r1, [fp, #-16]
    54a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    54ac:	bl	e20 <flatcc_json_parser_match_symbol>
    54b0:	str	r0, [fp, #-36]	; 0xffffffdc
    54b4:	ldr	r2, [fp, #-16]
    54b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    54bc:	cmp	r2, r3
    54c0:	beq	5564 <MyGame_Example_Test_parse_json_struct_inline+0x14c>
    54c4:	mov	r3, #0
    54c8:	strb	r3, [fp, #-25]	; 0xffffffe7
    54cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    54d0:	add	r3, r3, #2
    54d4:	str	r3, [fp, #-20]	; 0xffffffec
    54d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    54dc:	str	r3, [fp, #-16]
    54e0:	sub	r3, fp, #25
    54e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    54e8:	ldr	r1, [fp, #-16]
    54ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    54f0:	bl	1bf8 <flatcc_json_parser_int8>
    54f4:	str	r0, [fp, #-36]	; 0xffffffdc
    54f8:	ldr	r2, [fp, #-16]
    54fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5500:	cmp	r2, r3
    5504:	bne	5550 <MyGame_Example_Test_parse_json_struct_inline+0x138>
    5508:	ldr	r3, [fp, #-36]	; 0xffffffdc
    550c:	str	r3, [fp, #-16]
    5510:	sub	r3, fp, #25
    5514:	str	r3, [sp]
    5518:	ldr	r3, [pc, #452]	; 56e4 <MyGame_Example_Test_parse_json_struct_inline+0x2cc>
    551c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5520:	ldr	r1, [fp, #-16]
    5524:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5528:	bl	2a90 <flatcc_json_parser_symbolic_int8>
    552c:	str	r0, [fp, #-36]	; 0xffffffdc
    5530:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5534:	ldr	r3, [fp, #-16]
    5538:	cmp	r2, r3
    553c:	beq	56c0 <MyGame_Example_Test_parse_json_struct_inline+0x2a8>
    5540:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5544:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5548:	cmp	r2, r3
    554c:	beq	56c0 <MyGame_Example_Test_parse_json_struct_inline+0x2a8>
    5550:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
    5554:	mov	r1, r3
    5558:	ldr	r0, [fp, #-20]	; 0xffffffec
    555c:	bl	1b0 <flatbuffers_int8_write_to_pe>
    5560:	b	5694 <MyGame_Example_Test_parse_json_struct_inline+0x27c>
    5564:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5568:	ldr	r1, [fp, #-36]	; 0xffffffdc
    556c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5570:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5574:	str	r0, [fp, #-36]	; 0xffffffdc
    5578:	b	5694 <MyGame_Example_Test_parse_json_struct_inline+0x27c>
    557c:	ldrd	r2, [fp, #-12]
    5580:	mov	r0, #0
    5584:	mov	r1, #-16777216	; 0xff000000
    5588:	and	r2, r2, r0
    558c:	and	r3, r3, r1
    5590:	cmp	r3, #1627389952	; 0x61000000
    5594:	cmpeq	r2, #0
    5598:	bne	5680 <MyGame_Example_Test_parse_json_struct_inline+0x268>
    559c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    55a0:	str	r3, [fp, #-16]
    55a4:	mov	r3, #1
    55a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    55ac:	ldr	r1, [fp, #-16]
    55b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    55b4:	bl	e20 <flatcc_json_parser_match_symbol>
    55b8:	str	r0, [fp, #-36]	; 0xffffffdc
    55bc:	ldr	r2, [fp, #-16]
    55c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    55c4:	cmp	r2, r3
    55c8:	beq	5668 <MyGame_Example_Test_parse_json_struct_inline+0x250>
    55cc:	mov	r3, #0
    55d0:	strh	r3, [fp, #-28]	; 0xffffffe4
    55d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    55d8:	str	r3, [fp, #-20]	; 0xffffffec
    55dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    55e0:	str	r3, [fp, #-16]
    55e4:	sub	r3, fp, #28
    55e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    55ec:	ldr	r1, [fp, #-16]
    55f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    55f4:	bl	1b28 <flatcc_json_parser_int16>
    55f8:	str	r0, [fp, #-36]	; 0xffffffdc
    55fc:	ldr	r2, [fp, #-16]
    5600:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5604:	cmp	r2, r3
    5608:	bne	5654 <MyGame_Example_Test_parse_json_struct_inline+0x23c>
    560c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5610:	str	r3, [fp, #-16]
    5614:	sub	r3, fp, #28
    5618:	str	r3, [sp]
    561c:	ldr	r3, [pc, #196]	; 56e8 <MyGame_Example_Test_parse_json_struct_inline+0x2d0>
    5620:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5624:	ldr	r1, [fp, #-16]
    5628:	ldr	r0, [fp, #-32]	; 0xffffffe0
    562c:	bl	28b4 <flatcc_json_parser_symbolic_int16>
    5630:	str	r0, [fp, #-36]	; 0xffffffdc
    5634:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5638:	ldr	r3, [fp, #-16]
    563c:	cmp	r2, r3
    5640:	beq	56c0 <MyGame_Example_Test_parse_json_struct_inline+0x2a8>
    5644:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5648:	ldr	r3, [fp, #-40]	; 0xffffffd8
    564c:	cmp	r2, r3
    5650:	beq	56c0 <MyGame_Example_Test_parse_json_struct_inline+0x2a8>
    5654:	ldrsh	r3, [fp, #-28]	; 0xffffffe4
    5658:	mov	r1, r3
    565c:	ldr	r0, [fp, #-20]	; 0xffffffec
    5660:	bl	218 <flatbuffers_int16_write_to_pe>
    5664:	b	5694 <MyGame_Example_Test_parse_json_struct_inline+0x27c>
    5668:	ldr	r2, [fp, #-40]	; 0xffffffd8
    566c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5670:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5674:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5678:	str	r0, [fp, #-36]	; 0xffffffdc
    567c:	b	5694 <MyGame_Example_Test_parse_json_struct_inline+0x27c>
    5680:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5684:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5688:	ldr	r0, [fp, #-32]	; 0xffffffe0
    568c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5690:	str	r0, [fp, #-36]	; 0xffffffdc
    5694:	sub	r3, fp, #24
    5698:	ldr	r2, [fp, #-40]	; 0xffffffd8
    569c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    56a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    56a4:	bl	a68 <flatcc_json_parser_object_end>
    56a8:	str	r0, [fp, #-36]	; 0xffffffdc
    56ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    56b0:	cmp	r3, #0
    56b4:	bne	5450 <MyGame_Example_Test_parse_json_struct_inline+0x38>
    56b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    56bc:	b	56d8 <MyGame_Example_Test_parse_json_struct_inline+0x2c0>
    56c0:	mov	r3, #33	; 0x21
    56c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    56c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    56cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    56d0:	bl	0 <flatcc_json_parser_set_error>
    56d4:	mov	r3, r0
    56d8:	mov	r0, r3
    56dc:	sub	sp, fp, #4
    56e0:	pop	{fp, pc}
    56e4:	.word	0x00000008
    56e8:	.word	0x00000014

000056ec <MyGame_Example_Test_parse_json_struct>:
    56ec:	push	{fp, lr}
    56f0:	add	fp, sp, #4
    56f4:	sub	sp, sp, #24
    56f8:	str	r0, [fp, #-16]
    56fc:	str	r1, [fp, #-20]	; 0xffffffec
    5700:	str	r2, [fp, #-24]	; 0xffffffe8
    5704:	str	r3, [fp, #-28]	; 0xffffffe4
    5708:	ldr	r3, [fp, #-28]	; 0xffffffe4
    570c:	mov	r2, #0
    5710:	str	r2, [r3]
    5714:	ldr	r3, [fp, #-16]
    5718:	ldr	r3, [r3]
    571c:	mov	r2, #2
    5720:	mov	r1, #4
    5724:	mov	r0, r3
    5728:	bl	0 <flatcc_builder_start_struct>
    572c:	str	r0, [fp, #-8]
    5730:	ldr	r3, [fp, #-8]
    5734:	cmp	r3, #0
    5738:	beq	5798 <MyGame_Example_Test_parse_json_struct+0xac>
    573c:	ldr	r3, [fp, #-8]
    5740:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5744:	ldr	r1, [fp, #-20]	; 0xffffffec
    5748:	ldr	r0, [fp, #-16]
    574c:	bl	5418 <MyGame_Example_Test_parse_json_struct_inline>
    5750:	str	r0, [fp, #-20]	; 0xffffffec
    5754:	ldr	r2, [fp, #-20]	; 0xffffffec
    5758:	ldr	r3, [fp, #-24]	; 0xffffffe8
    575c:	cmp	r2, r3
    5760:	beq	579c <MyGame_Example_Test_parse_json_struct+0xb0>
    5764:	ldr	r3, [fp, #-16]
    5768:	ldr	r3, [r3]
    576c:	mov	r0, r3
    5770:	bl	0 <flatcc_builder_end_struct>
    5774:	mov	r2, r0
    5778:	ldr	r3, [fp, #-28]	; 0xffffffe4
    577c:	str	r2, [r3]
    5780:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5784:	ldr	r3, [r3]
    5788:	cmp	r3, #0
    578c:	beq	579c <MyGame_Example_Test_parse_json_struct+0xb0>
    5790:	ldr	r3, [fp, #-20]	; 0xffffffec
    5794:	b	57b4 <MyGame_Example_Test_parse_json_struct+0xc8>
    5798:	nop			; (mov r0, r0)
    579c:	mov	r3, #33	; 0x21
    57a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    57a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    57a8:	ldr	r0, [fp, #-16]
    57ac:	bl	0 <flatcc_json_parser_set_error>
    57b0:	mov	r3, r0
    57b4:	mov	r0, r3
    57b8:	sub	sp, fp, #4
    57bc:	pop	{fp, pc}

000057c0 <MyGame_Example_emptystruct_parse_json_struct_inline>:
    57c0:	push	{fp, lr}
    57c4:	add	fp, sp, #4
    57c8:	sub	sp, sp, #24
    57cc:	str	r0, [fp, #-16]
    57d0:	str	r1, [fp, #-20]	; 0xffffffec
    57d4:	str	r2, [fp, #-24]	; 0xffffffe8
    57d8:	str	r3, [fp, #-28]	; 0xffffffe4
    57dc:	sub	r3, fp, #8
    57e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    57e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    57e8:	ldr	r0, [fp, #-16]
    57ec:	bl	980 <flatcc_json_parser_object_start>
    57f0:	str	r0, [fp, #-20]	; 0xffffffec
    57f4:	b	5824 <MyGame_Example_emptystruct_parse_json_struct_inline+0x64>
    57f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    57fc:	ldr	r1, [fp, #-20]	; 0xffffffec
    5800:	ldr	r0, [fp, #-16]
    5804:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5808:	str	r0, [fp, #-20]	; 0xffffffec
    580c:	sub	r3, fp, #8
    5810:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5814:	ldr	r1, [fp, #-20]	; 0xffffffec
    5818:	ldr	r0, [fp, #-16]
    581c:	bl	a68 <flatcc_json_parser_object_end>
    5820:	str	r0, [fp, #-20]	; 0xffffffec
    5824:	ldr	r3, [fp, #-8]
    5828:	cmp	r3, #0
    582c:	bne	57f8 <MyGame_Example_emptystruct_parse_json_struct_inline+0x38>
    5830:	ldr	r3, [fp, #-20]	; 0xffffffec
    5834:	mov	r0, r3
    5838:	sub	sp, fp, #4
    583c:	pop	{fp, pc}

00005840 <MyGame_Example_emptystruct_parse_json_struct>:
    5840:	push	{fp, lr}
    5844:	add	fp, sp, #4
    5848:	sub	sp, sp, #24
    584c:	str	r0, [fp, #-16]
    5850:	str	r1, [fp, #-20]	; 0xffffffec
    5854:	str	r2, [fp, #-24]	; 0xffffffe8
    5858:	str	r3, [fp, #-28]	; 0xffffffe4
    585c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5860:	mov	r2, #0
    5864:	str	r2, [r3]
    5868:	ldr	r3, [fp, #-16]
    586c:	ldr	r3, [r3]
    5870:	mov	r2, #1
    5874:	mov	r1, #0
    5878:	mov	r0, r3
    587c:	bl	0 <flatcc_builder_start_struct>
    5880:	str	r0, [fp, #-8]
    5884:	ldr	r3, [fp, #-8]
    5888:	cmp	r3, #0
    588c:	beq	58ec <MyGame_Example_emptystruct_parse_json_struct+0xac>
    5890:	ldr	r3, [fp, #-8]
    5894:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5898:	ldr	r1, [fp, #-20]	; 0xffffffec
    589c:	ldr	r0, [fp, #-16]
    58a0:	bl	57c0 <MyGame_Example_emptystruct_parse_json_struct_inline>
    58a4:	str	r0, [fp, #-20]	; 0xffffffec
    58a8:	ldr	r2, [fp, #-20]	; 0xffffffec
    58ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    58b0:	cmp	r2, r3
    58b4:	beq	58f0 <MyGame_Example_emptystruct_parse_json_struct+0xb0>
    58b8:	ldr	r3, [fp, #-16]
    58bc:	ldr	r3, [r3]
    58c0:	mov	r0, r3
    58c4:	bl	0 <flatcc_builder_end_struct>
    58c8:	mov	r2, r0
    58cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    58d0:	str	r2, [r3]
    58d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    58d8:	ldr	r3, [r3]
    58dc:	cmp	r3, #0
    58e0:	beq	58f0 <MyGame_Example_emptystruct_parse_json_struct+0xb0>
    58e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    58e8:	b	5908 <MyGame_Example_emptystruct_parse_json_struct+0xc8>
    58ec:	nop			; (mov r0, r0)
    58f0:	mov	r3, #33	; 0x21
    58f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    58f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    58fc:	ldr	r0, [fp, #-16]
    5900:	bl	0 <flatcc_json_parser_set_error>
    5904:	mov	r3, r0
    5908:	mov	r0, r3
    590c:	sub	sp, fp, #4
    5910:	pop	{fp, pc}

00005914 <MyGame_Example_emptytable_parse_json_table>:
    5914:	push	{fp, lr}
    5918:	add	fp, sp, #4
    591c:	sub	sp, sp, #24
    5920:	str	r0, [fp, #-16]
    5924:	str	r1, [fp, #-20]	; 0xffffffec
    5928:	str	r2, [fp, #-24]	; 0xffffffe8
    592c:	str	r3, [fp, #-28]	; 0xffffffe4
    5930:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5934:	mov	r2, #0
    5938:	str	r2, [r3]
    593c:	ldr	r3, [fp, #-16]
    5940:	ldr	r3, [r3]
    5944:	mov	r1, #0
    5948:	mov	r0, r3
    594c:	bl	0 <flatcc_builder_start_table>
    5950:	mov	r3, r0
    5954:	cmp	r3, #0
    5958:	bne	5a08 <MyGame_Example_emptytable_parse_json_table+0xf4>
    595c:	sub	r3, fp, #8
    5960:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5964:	ldr	r1, [fp, #-20]	; 0xffffffec
    5968:	ldr	r0, [fp, #-16]
    596c:	bl	980 <flatcc_json_parser_object_start>
    5970:	str	r0, [fp, #-20]	; 0xffffffec
    5974:	b	59b8 <MyGame_Example_emptytable_parse_json_table+0xa4>
    5978:	ldr	r2, [fp, #-24]	; 0xffffffe8
    597c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5980:	ldr	r0, [fp, #-16]
    5984:	bl	570 <flatcc_json_parser_symbol_start>
    5988:	str	r0, [fp, #-20]	; 0xffffffec
    598c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5990:	ldr	r1, [fp, #-20]	; 0xffffffec
    5994:	ldr	r0, [fp, #-16]
    5998:	bl	0 <flatcc_json_parser_unmatched_symbol>
    599c:	str	r0, [fp, #-20]	; 0xffffffec
    59a0:	sub	r3, fp, #8
    59a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    59a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    59ac:	ldr	r0, [fp, #-16]
    59b0:	bl	a68 <flatcc_json_parser_object_end>
    59b4:	str	r0, [fp, #-20]	; 0xffffffec
    59b8:	ldr	r3, [fp, #-8]
    59bc:	cmp	r3, #0
    59c0:	bne	5978 <MyGame_Example_emptytable_parse_json_table+0x64>
    59c4:	ldr	r3, [fp, #-16]
    59c8:	ldr	r3, [r3, #24]
    59cc:	cmp	r3, #0
    59d0:	bne	5a10 <MyGame_Example_emptytable_parse_json_table+0xfc>
    59d4:	ldr	r3, [fp, #-16]
    59d8:	ldr	r3, [r3]
    59dc:	mov	r0, r3
    59e0:	bl	0 <flatcc_builder_end_table>
    59e4:	mov	r2, r0
    59e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    59ec:	str	r2, [r3]
    59f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    59f4:	ldr	r3, [r3]
    59f8:	cmp	r3, #0
    59fc:	beq	5a18 <MyGame_Example_emptytable_parse_json_table+0x104>
    5a00:	ldr	r3, [fp, #-20]	; 0xffffffec
    5a04:	b	5a34 <MyGame_Example_emptytable_parse_json_table+0x120>
    5a08:	nop			; (mov r0, r0)
    5a0c:	b	5a1c <MyGame_Example_emptytable_parse_json_table+0x108>
    5a10:	nop			; (mov r0, r0)
    5a14:	b	5a1c <MyGame_Example_emptytable_parse_json_table+0x108>
    5a18:	nop			; (mov r0, r0)
    5a1c:	mov	r3, #33	; 0x21
    5a20:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5a24:	ldr	r1, [fp, #-20]	; 0xffffffec
    5a28:	ldr	r0, [fp, #-16]
    5a2c:	bl	0 <flatcc_json_parser_set_error>
    5a30:	mov	r3, r0
    5a34:	mov	r0, r3
    5a38:	sub	sp, fp, #4
    5a3c:	pop	{fp, pc}

00005a40 <MyGame_Example_with_emptystruct_parse_json_table>:
    5a40:	push	{fp, lr}
    5a44:	add	fp, sp, #4
    5a48:	sub	sp, sp, #40	; 0x28
    5a4c:	str	r0, [fp, #-32]	; 0xffffffe0
    5a50:	str	r1, [fp, #-36]	; 0xffffffdc
    5a54:	str	r2, [fp, #-40]	; 0xffffffd8
    5a58:	str	r3, [fp, #-44]	; 0xffffffd4
    5a5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5a60:	mov	r2, #0
    5a64:	str	r2, [r3]
    5a68:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5a6c:	ldr	r3, [r3]
    5a70:	mov	r1, #1
    5a74:	mov	r0, r3
    5a78:	bl	0 <flatcc_builder_start_table>
    5a7c:	mov	r3, r0
    5a80:	cmp	r3, #0
    5a84:	bne	5bf8 <MyGame_Example_with_emptystruct_parse_json_table+0x1b8>
    5a88:	sub	r3, fp, #24
    5a8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5a90:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5a94:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5a98:	bl	980 <flatcc_json_parser_object_start>
    5a9c:	str	r0, [fp, #-36]	; 0xffffffdc
    5aa0:	b	5ba8 <MyGame_Example_with_emptystruct_parse_json_table+0x168>
    5aa4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5aa8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5aac:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5ab0:	bl	570 <flatcc_json_parser_symbol_start>
    5ab4:	str	r0, [fp, #-36]	; 0xffffffdc
    5ab8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    5abc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5ac0:	bl	854 <flatcc_json_parser_symbol_part>
    5ac4:	strd	r0, [fp, #-12]
    5ac8:	ldrd	r2, [fp, #-12]
    5acc:	mov	r0, #-16777216	; 0xff000000
    5ad0:	mvn	r1, #0
    5ad4:	and	r2, r2, r0
    5ad8:	and	r3, r3, r1
    5adc:	add	r1, pc, #340	; 0x154
    5ae0:	ldrd	r0, [r1]
    5ae4:	cmp	r3, r1
    5ae8:	cmpeq	r2, r0
    5aec:	bne	5b7c <MyGame_Example_with_emptystruct_parse_json_table+0x13c>
    5af0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5af4:	str	r3, [fp, #-16]
    5af8:	mov	r3, #5
    5afc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5b00:	ldr	r1, [fp, #-16]
    5b04:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5b08:	bl	e20 <flatcc_json_parser_match_symbol>
    5b0c:	str	r0, [fp, #-36]	; 0xffffffdc
    5b10:	ldr	r2, [fp, #-16]
    5b14:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5b18:	cmp	r2, r3
    5b1c:	beq	5b64 <MyGame_Example_with_emptystruct_parse_json_table+0x124>
    5b20:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5b24:	ldr	r0, [r3]
    5b28:	mov	r3, #1
    5b2c:	mov	r2, #0
    5b30:	mov	r1, #0
    5b34:	bl	0 <flatcc_builder_table_add>
    5b38:	str	r0, [fp, #-20]	; 0xffffffec
    5b3c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5b40:	cmp	r3, #0
    5b44:	beq	5c00 <MyGame_Example_with_emptystruct_parse_json_table+0x1c0>
    5b48:	ldr	r3, [fp, #-20]	; 0xffffffec
    5b4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5b50:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5b54:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5b58:	bl	57c0 <MyGame_Example_emptystruct_parse_json_struct_inline>
    5b5c:	str	r0, [fp, #-36]	; 0xffffffdc
    5b60:	b	5b90 <MyGame_Example_with_emptystruct_parse_json_table+0x150>
    5b64:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5b68:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5b6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5b70:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5b74:	str	r0, [fp, #-36]	; 0xffffffdc
    5b78:	b	5b90 <MyGame_Example_with_emptystruct_parse_json_table+0x150>
    5b7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5b80:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5b84:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5b88:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5b8c:	str	r0, [fp, #-36]	; 0xffffffdc
    5b90:	sub	r3, fp, #24
    5b94:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5b98:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5b9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5ba0:	bl	a68 <flatcc_json_parser_object_end>
    5ba4:	str	r0, [fp, #-36]	; 0xffffffdc
    5ba8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5bac:	cmp	r3, #0
    5bb0:	bne	5aa4 <MyGame_Example_with_emptystruct_parse_json_table+0x64>
    5bb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5bb8:	ldr	r3, [r3, #24]
    5bbc:	cmp	r3, #0
    5bc0:	bne	5c08 <MyGame_Example_with_emptystruct_parse_json_table+0x1c8>
    5bc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5bc8:	ldr	r3, [r3]
    5bcc:	mov	r0, r3
    5bd0:	bl	0 <flatcc_builder_end_table>
    5bd4:	mov	r2, r0
    5bd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5bdc:	str	r2, [r3]
    5be0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5be4:	ldr	r3, [r3]
    5be8:	cmp	r3, #0
    5bec:	beq	5c10 <MyGame_Example_with_emptystruct_parse_json_table+0x1d0>
    5bf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5bf4:	b	5c2c <MyGame_Example_with_emptystruct_parse_json_table+0x1ec>
    5bf8:	nop			; (mov r0, r0)
    5bfc:	b	5c14 <MyGame_Example_with_emptystruct_parse_json_table+0x1d4>
    5c00:	nop			; (mov r0, r0)
    5c04:	b	5c14 <MyGame_Example_with_emptystruct_parse_json_table+0x1d4>
    5c08:	nop			; (mov r0, r0)
    5c0c:	b	5c14 <MyGame_Example_with_emptystruct_parse_json_table+0x1d4>
    5c10:	nop			; (mov r0, r0)
    5c14:	mov	r3, #33	; 0x21
    5c18:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5c1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5c20:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5c24:	bl	0 <flatcc_json_parser_set_error>
    5c28:	mov	r3, r0
    5c2c:	mov	r0, r3
    5c30:	sub	sp, fp, #4
    5c34:	pop	{fp, pc}
    5c38:	.word	0x79000000
    5c3c:	.word	0x656d7074

00005c40 <MyGame_Example_notemptyenum_parse_json_enum>:
    5c40:	push	{fp, lr}
    5c44:	add	fp, sp, #4
    5c48:	sub	sp, sp, #48	; 0x30
    5c4c:	str	r0, [fp, #-32]	; 0xffffffe0
    5c50:	str	r1, [fp, #-36]	; 0xffffffdc
    5c54:	str	r2, [fp, #-40]	; 0xffffffd8
    5c58:	str	r3, [fp, #-44]	; 0xffffffd4
    5c5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5c60:	str	r3, [fp, #-8]
    5c64:	ldr	r1, [fp, #-40]	; 0xffffffd8
    5c68:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5c6c:	bl	854 <flatcc_json_parser_symbol_part>
    5c70:	strd	r0, [fp, #-20]	; 0xffffffec
    5c74:	ldrd	r2, [fp, #-20]	; 0xffffffec
    5c78:	mov	r0, #0
    5c7c:	mov	r1, #-16777216	; 0xff000000
    5c80:	and	r2, r2, r0
    5c84:	and	r3, r3, r1
    5c88:	cmp	r3, #2013265920	; 0x78000000
    5c8c:	cmpeq	r2, #0
    5c90:	bne	5cf8 <MyGame_Example_notemptyenum_parse_json_enum+0xb8>
    5c94:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5c98:	str	r3, [fp, #-24]	; 0xffffffe8
    5c9c:	ldr	r3, [fp, #8]
    5ca0:	str	r3, [sp]
    5ca4:	mov	r3, #1
    5ca8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5cac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5cb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5cb4:	bl	0 <flatcc_json_parser_match_constant>
    5cb8:	str	r0, [fp, #-36]	; 0xffffffdc
    5cbc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5cc4:	cmp	r2, r3
    5cc8:	beq	5cf0 <MyGame_Example_notemptyenum_parse_json_enum+0xb0>
    5ccc:	ldr	r1, [fp, #4]
    5cd0:	mov	r2, #0
    5cd4:	mov	r3, #0
    5cd8:	strd	r2, [r1]
    5cdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5ce0:	mov	r2, #0
    5ce4:	str	r2, [r3]
    5ce8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5cec:	b	5cfc <MyGame_Example_notemptyenum_parse_json_enum+0xbc>
    5cf0:	ldr	r3, [fp, #-8]
    5cf4:	b	5cfc <MyGame_Example_notemptyenum_parse_json_enum+0xbc>
    5cf8:	ldr	r3, [fp, #-8]
    5cfc:	mov	r0, r3
    5d00:	sub	sp, fp, #4
    5d04:	pop	{fp, pc}

00005d08 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>:
    5d08:	push	{fp, lr}
    5d0c:	add	fp, sp, #4
    5d10:	sub	sp, sp, #48	; 0x30
    5d14:	str	r0, [fp, #-32]	; 0xffffffe0
    5d18:	str	r1, [fp, #-36]	; 0xffffffdc
    5d1c:	str	r2, [fp, #-40]	; 0xffffffd8
    5d20:	str	r3, [fp, #-44]	; 0xffffffd4
    5d24:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5d28:	mov	r2, #0
    5d2c:	str	r2, [r3]
    5d30:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5d34:	ldr	r3, [r3]
    5d38:	mov	r1, #4
    5d3c:	mov	r0, r3
    5d40:	bl	0 <flatcc_builder_start_table>
    5d44:	mov	r3, r0
    5d48:	cmp	r3, #0
    5d4c:	bne	6358 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x650>
    5d50:	sub	r3, fp, #24
    5d54:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5d58:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5d5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5d60:	bl	980 <flatcc_json_parser_object_start>
    5d64:	str	r0, [fp, #-36]	; 0xffffffdc
    5d68:	b	6308 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x600>
    5d6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5d70:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5d74:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5d78:	bl	570 <flatcc_json_parser_symbol_start>
    5d7c:	str	r0, [fp, #-36]	; 0xffffffdc
    5d80:	ldr	r1, [fp, #-40]	; 0xffffffd8
    5d84:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5d88:	bl	854 <flatcc_json_parser_symbol_part>
    5d8c:	strd	r0, [fp, #-12]
    5d90:	ldrd	r2, [fp, #-12]
    5d94:	ldr	r0, [pc, #992]	; 617c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x474>
    5d98:	mvn	r1, #0
    5d9c:	and	r2, r2, r0
    5da0:	and	r3, r3, r1
    5da4:	add	r1, pc, #940	; 0x3ac
    5da8:	ldrd	r0, [r1]
    5dac:	cmp	r3, r1
    5db0:	cmpeq	r2, r0
    5db4:	bne	5ec4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1bc>
    5db8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5dbc:	str	r3, [fp, #-16]
    5dc0:	mov	r3, #6
    5dc4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5dc8:	ldr	r1, [fp, #-16]
    5dcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5dd0:	bl	e20 <flatcc_json_parser_match_symbol>
    5dd4:	str	r0, [fp, #-36]	; 0xffffffdc
    5dd8:	ldr	r2, [fp, #-16]
    5ddc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5de0:	cmp	r2, r3
    5de4:	beq	5ff8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2f0>
    5de8:	mov	r3, #0
    5dec:	strb	r3, [fp, #-25]	; 0xffffffe7
    5df0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5df4:	str	r3, [fp, #-16]
    5df8:	sub	r3, fp, #25
    5dfc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5e00:	ldr	r1, [fp, #-16]
    5e04:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5e08:	bl	1bf8 <flatcc_json_parser_int8>
    5e0c:	str	r0, [fp, #-36]	; 0xffffffdc
    5e10:	ldr	r2, [fp, #-16]
    5e14:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5e18:	cmp	r2, r3
    5e1c:	bne	5e68 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x160>
    5e20:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5e24:	str	r3, [fp, #-16]
    5e28:	sub	r3, fp, #25
    5e2c:	str	r3, [sp]
    5e30:	ldr	r3, [pc, #824]	; 6170 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x468>
    5e34:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5e38:	ldr	r1, [fp, #-16]
    5e3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5e40:	bl	2a90 <flatcc_json_parser_symbolic_int8>
    5e44:	str	r0, [fp, #-36]	; 0xffffffdc
    5e48:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5e4c:	ldr	r3, [fp, #-16]
    5e50:	cmp	r2, r3
    5e54:	beq	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    5e58:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5e5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5e60:	cmp	r2, r3
    5e64:	beq	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    5e68:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
    5e6c:	cmp	r3, #2
    5e70:	bne	5e88 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x180>
    5e74:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5e78:	ldr	r3, [r3, #8]
    5e7c:	and	r3, r3, #2
    5e80:	cmp	r3, #0
    5e84:	beq	62ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e4>
    5e88:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5e8c:	ldr	r0, [r3]
    5e90:	mov	r3, #1
    5e94:	mov	r2, #1
    5e98:	mov	r1, #1
    5e9c:	bl	0 <flatcc_builder_table_add>
    5ea0:	str	r0, [fp, #-20]	; 0xffffffec
    5ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
    5ea8:	cmp	r3, #0
    5eac:	beq	6360 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x658>
    5eb0:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
    5eb4:	mov	r1, r3
    5eb8:	ldr	r0, [fp, #-20]	; 0xffffffec
    5ebc:	bl	1b0 <flatbuffers_int8_write_to_pe>
    5ec0:	b	62ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e4>
    5ec4:	ldrd	r2, [fp, #-12]
    5ec8:	mov	r0, #-16777216	; 0xff000000
    5ecc:	mvn	r1, #0
    5ed0:	and	r2, r2, r0
    5ed4:	and	r3, r3, r1
    5ed8:	add	r1, pc, #640	; 0x280
    5edc:	ldrd	r0, [r1]
    5ee0:	cmp	r3, r1
    5ee4:	cmpeq	r2, r0
    5ee8:	bne	6000 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2f8>
    5eec:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5ef0:	str	r3, [fp, #-16]
    5ef4:	mov	r3, #5
    5ef8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5efc:	ldr	r1, [fp, #-16]
    5f00:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5f04:	bl	e20 <flatcc_json_parser_match_symbol>
    5f08:	str	r0, [fp, #-36]	; 0xffffffdc
    5f0c:	ldr	r2, [fp, #-16]
    5f10:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5f14:	cmp	r2, r3
    5f18:	beq	6008 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x300>
    5f1c:	mov	r3, #0
    5f20:	strb	r3, [fp, #-26]	; 0xffffffe6
    5f24:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5f28:	str	r3, [fp, #-16]
    5f2c:	sub	r3, fp, #26
    5f30:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5f34:	ldr	r1, [fp, #-16]
    5f38:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5f3c:	bl	1bf8 <flatcc_json_parser_int8>
    5f40:	str	r0, [fp, #-36]	; 0xffffffdc
    5f44:	ldr	r2, [fp, #-16]
    5f48:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5f4c:	cmp	r2, r3
    5f50:	bne	5f9c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x294>
    5f54:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5f58:	str	r3, [fp, #-16]
    5f5c:	sub	r3, fp, #26
    5f60:	str	r3, [sp]
    5f64:	ldr	r3, [pc, #520]	; 6174 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x46c>
    5f68:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5f6c:	ldr	r1, [fp, #-16]
    5f70:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5f74:	bl	2a90 <flatcc_json_parser_symbolic_int8>
    5f78:	str	r0, [fp, #-36]	; 0xffffffdc
    5f7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5f80:	ldr	r3, [fp, #-16]
    5f84:	cmp	r2, r3
    5f88:	beq	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    5f8c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5f90:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5f94:	cmp	r2, r3
    5f98:	beq	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    5f9c:	ldrsb	r3, [fp, #-26]	; 0xffffffe6
    5fa0:	cmp	r3, #2
    5fa4:	bne	5fbc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b4>
    5fa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5fac:	ldr	r3, [r3, #8]
    5fb0:	and	r3, r3, #2
    5fb4:	cmp	r3, #0
    5fb8:	beq	62ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e4>
    5fbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5fc0:	ldr	r0, [r3]
    5fc4:	mov	r3, #1
    5fc8:	mov	r2, #1
    5fcc:	mov	r1, #0
    5fd0:	bl	0 <flatcc_builder_table_add>
    5fd4:	str	r0, [fp, #-20]	; 0xffffffec
    5fd8:	ldr	r3, [fp, #-20]	; 0xffffffec
    5fdc:	cmp	r3, #0
    5fe0:	beq	6368 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x660>
    5fe4:	ldrsb	r3, [fp, #-26]	; 0xffffffe6
    5fe8:	mov	r1, r3
    5fec:	ldr	r0, [fp, #-20]	; 0xffffffec
    5ff0:	bl	1b0 <flatbuffers_int8_write_to_pe>
    5ff4:	b	62ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e4>
    5ff8:	nop			; (mov r0, r0)
    5ffc:	b	600c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x304>
    6000:	nop			; (mov r0, r0)
    6004:	b	600c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x304>
    6008:	nop			; (mov r0, r0)
    600c:	ldrd	r2, [fp, #-12]
    6010:	mov	r0, #0
    6014:	mvn	r1, #255	; 0xff
    6018:	and	r2, r2, r0
    601c:	and	r3, r3, r1
    6020:	add	r1, pc, #320	; 0x140
    6024:	ldrd	r0, [r1]
    6028:	cmp	r3, r1
    602c:	cmpeq	r2, r0
    6030:	bne	6188 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x480>
    6034:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6038:	str	r3, [fp, #-16]
    603c:	mov	r3, #3
    6040:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6044:	ldr	r1, [fp, #-16]
    6048:	ldr	r0, [fp, #-32]	; 0xffffffe0
    604c:	bl	e20 <flatcc_json_parser_match_symbol>
    6050:	str	r0, [fp, #-36]	; 0xffffffdc
    6054:	ldr	r2, [fp, #-16]
    6058:	ldr	r3, [fp, #-36]	; 0xffffffdc
    605c:	cmp	r2, r3
    6060:	beq	6140 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x438>
    6064:	mov	r3, #0
    6068:	strb	r3, [fp, #-27]	; 0xffffffe5
    606c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6070:	str	r3, [fp, #-16]
    6074:	sub	r3, fp, #27
    6078:	ldr	r2, [fp, #-40]	; 0xffffffd8
    607c:	ldr	r1, [fp, #-16]
    6080:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6084:	bl	18b4 <flatcc_json_parser_uint8>
    6088:	str	r0, [fp, #-36]	; 0xffffffdc
    608c:	ldr	r2, [fp, #-16]
    6090:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6094:	cmp	r2, r3
    6098:	bne	60e4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3dc>
    609c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    60a0:	str	r3, [fp, #-16]
    60a4:	sub	r3, fp, #27
    60a8:	str	r3, [sp]
    60ac:	ldr	r3, [pc, #196]	; 6178 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x470>
    60b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    60b4:	ldr	r1, [fp, #-16]
    60b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    60bc:	bl	2340 <flatcc_json_parser_symbolic_uint8>
    60c0:	str	r0, [fp, #-36]	; 0xffffffdc
    60c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    60c8:	ldr	r3, [fp, #-16]
    60cc:	cmp	r2, r3
    60d0:	beq	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    60d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    60d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    60dc:	cmp	r2, r3
    60e0:	beq	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    60e4:	ldrb	r3, [fp, #-27]	; 0xffffffe5
    60e8:	cmp	r3, #2
    60ec:	bne	6104 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3fc>
    60f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    60f4:	ldr	r3, [r3, #8]
    60f8:	and	r3, r3, #2
    60fc:	cmp	r3, #0
    6100:	beq	62f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    6104:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6108:	ldr	r0, [r3]
    610c:	mov	r3, #1
    6110:	mov	r2, #1
    6114:	mov	r1, #3
    6118:	bl	0 <flatcc_builder_table_add>
    611c:	str	r0, [fp, #-20]	; 0xffffffec
    6120:	ldr	r3, [fp, #-20]	; 0xffffffec
    6124:	cmp	r3, #0
    6128:	beq	6370 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x668>
    612c:	ldrb	r3, [fp, #-27]	; 0xffffffe5
    6130:	mov	r1, r3
    6134:	ldr	r0, [fp, #-20]	; 0xffffffec
    6138:	bl	28 <flatbuffers_uint8_write_to_pe>
    613c:	b	62f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    6140:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6144:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6148:	ldr	r0, [fp, #-32]	; 0xffffffe0
    614c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6150:	str	r0, [fp, #-36]	; 0xffffffdc
    6154:	b	62f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    6158:	.word	0x72320000
    615c:	.word	0x636f6c6f
    6160:	.word	0x72000000
    6164:	.word	0x636f6c6f
    6168:	.word	0x00000000
    616c:	.word	0x75633200
    6170:	.word	0x00000020
    6174:	.word	0x00000030
    6178:	.word	0x00000040
    617c:	.word	0xffff0000
    6180:	.word	0x75630000
    6184:	.word	0x0000004c
    6188:	ldrd	r2, [fp, #-12]
    618c:	mov	r0, #0
    6190:	ldr	r1, [pc, #-28]	; 617c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x474>
    6194:	and	r2, r2, r0
    6198:	and	r3, r3, r1
    619c:	mov	r0, #0
    61a0:	ldr	r1, [pc, #-40]	; 6180 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x478>
    61a4:	cmp	r3, r1
    61a8:	cmpeq	r2, r0
    61ac:	bne	62d4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5cc>
    61b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    61b4:	str	r3, [fp, #-16]
    61b8:	mov	r3, #2
    61bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    61c0:	ldr	r1, [fp, #-16]
    61c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    61c8:	bl	e20 <flatcc_json_parser_match_symbol>
    61cc:	str	r0, [fp, #-36]	; 0xffffffdc
    61d0:	ldr	r2, [fp, #-16]
    61d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    61d8:	cmp	r2, r3
    61dc:	beq	62bc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5b4>
    61e0:	mov	r3, #0
    61e4:	strb	r3, [fp, #-28]	; 0xffffffe4
    61e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    61ec:	str	r3, [fp, #-16]
    61f0:	sub	r3, fp, #28
    61f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    61f8:	ldr	r1, [fp, #-16]
    61fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6200:	bl	18b4 <flatcc_json_parser_uint8>
    6204:	str	r0, [fp, #-36]	; 0xffffffdc
    6208:	ldr	r2, [fp, #-16]
    620c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6210:	cmp	r2, r3
    6214:	bne	6260 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x558>
    6218:	ldr	r3, [fp, #-36]	; 0xffffffdc
    621c:	str	r3, [fp, #-16]
    6220:	sub	r3, fp, #28
    6224:	str	r3, [sp]
    6228:	ldr	r3, [pc, #-172]	; 6184 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x47c>
    622c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6230:	ldr	r1, [fp, #-16]
    6234:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6238:	bl	2340 <flatcc_json_parser_symbolic_uint8>
    623c:	str	r0, [fp, #-36]	; 0xffffffdc
    6240:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6244:	ldr	r3, [fp, #-16]
    6248:	cmp	r2, r3
    624c:	beq	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6250:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6254:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6258:	cmp	r2, r3
    625c:	beq	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6260:	ldrb	r3, [fp, #-28]	; 0xffffffe4
    6264:	cmp	r3, #2
    6268:	bne	6280 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x578>
    626c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6270:	ldr	r3, [r3, #8]
    6274:	and	r3, r3, #2
    6278:	cmp	r3, #0
    627c:	beq	62f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    6280:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6284:	ldr	r0, [r3]
    6288:	mov	r3, #1
    628c:	mov	r2, #1
    6290:	mov	r1, #2
    6294:	bl	0 <flatcc_builder_table_add>
    6298:	str	r0, [fp, #-20]	; 0xffffffec
    629c:	ldr	r3, [fp, #-20]	; 0xffffffec
    62a0:	cmp	r3, #0
    62a4:	beq	6378 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x670>
    62a8:	ldrb	r3, [fp, #-28]	; 0xffffffe4
    62ac:	mov	r1, r3
    62b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    62b4:	bl	28 <flatbuffers_uint8_write_to_pe>
    62b8:	b	62f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    62bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    62c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    62c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    62c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    62cc:	str	r0, [fp, #-36]	; 0xffffffdc
    62d0:	b	62f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    62d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    62d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    62dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    62e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    62e4:	str	r0, [fp, #-36]	; 0xffffffdc
    62e8:	b	62f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e8>
    62ec:	nop			; (mov r0, r0)
    62f0:	sub	r3, fp, #24
    62f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    62f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    62fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6300:	bl	a68 <flatcc_json_parser_object_end>
    6304:	str	r0, [fp, #-36]	; 0xffffffdc
    6308:	ldr	r3, [fp, #-24]	; 0xffffffe8
    630c:	cmp	r3, #0
    6310:	bne	5d6c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x64>
    6314:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6318:	ldr	r3, [r3, #24]
    631c:	cmp	r3, #0
    6320:	bne	6380 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x678>
    6324:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6328:	ldr	r3, [r3]
    632c:	mov	r0, r3
    6330:	bl	0 <flatcc_builder_end_table>
    6334:	mov	r2, r0
    6338:	ldr	r3, [fp, #-44]	; 0xffffffd4
    633c:	str	r2, [r3]
    6340:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6344:	ldr	r3, [r3]
    6348:	cmp	r3, #0
    634c:	beq	6388 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x680>
    6350:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6354:	b	63a4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x69c>
    6358:	nop			; (mov r0, r0)
    635c:	b	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6360:	nop			; (mov r0, r0)
    6364:	b	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6368:	nop			; (mov r0, r0)
    636c:	b	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6370:	nop			; (mov r0, r0)
    6374:	b	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6378:	nop			; (mov r0, r0)
    637c:	b	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6380:	nop			; (mov r0, r0)
    6384:	b	638c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    6388:	nop			; (mov r0, r0)
    638c:	mov	r3, #33	; 0x21
    6390:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6394:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6398:	ldr	r0, [fp, #-32]	; 0xffffffe0
    639c:	bl	0 <flatcc_json_parser_set_error>
    63a0:	mov	r3, r0
    63a4:	mov	r0, r3
    63a8:	sub	sp, fp, #4
    63ac:	pop	{fp, pc}

000063b0 <MyGame_Example_TestInclude_parse_json_table>:
    63b0:	push	{fp, lr}
    63b4:	add	fp, sp, #4
    63b8:	sub	sp, sp, #88	; 0x58
    63bc:	str	r0, [fp, #-72]	; 0xffffffb8
    63c0:	str	r1, [fp, #-76]	; 0xffffffb4
    63c4:	str	r2, [fp, #-80]	; 0xffffffb0
    63c8:	str	r3, [fp, #-84]	; 0xffffffac
    63cc:	ldr	r3, [fp, #-84]	; 0xffffffac
    63d0:	mov	r2, #0
    63d4:	str	r2, [r3]
    63d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    63dc:	ldr	r3, [r3]
    63e0:	mov	r1, #6
    63e4:	mov	r0, r3
    63e8:	bl	0 <flatcc_builder_start_table>
    63ec:	mov	r3, r0
    63f0:	cmp	r3, #0
    63f4:	bne	6cd0 <MyGame_Example_TestInclude_parse_json_table+0x920>
    63f8:	sub	r3, fp, #24
    63fc:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6400:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6404:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6408:	bl	980 <flatcc_json_parser_object_start>
    640c:	str	r0, [fp, #-76]	; 0xffffffb4
    6410:	b	6c80 <MyGame_Example_TestInclude_parse_json_table+0x8d0>
    6414:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6418:	ldr	r1, [fp, #-76]	; 0xffffffb4
    641c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6420:	bl	570 <flatcc_json_parser_symbol_start>
    6424:	str	r0, [fp, #-76]	; 0xffffffb4
    6428:	ldr	r1, [fp, #-80]	; 0xffffffb0
    642c:	ldr	r0, [fp, #-76]	; 0xffffffb4
    6430:	bl	854 <flatcc_json_parser_symbol_part>
    6434:	strd	r0, [fp, #-12]
    6438:	ldrd	r2, [fp, #-12]
    643c:	add	r1, pc, #932	; 0x3a4
    6440:	ldrd	r0, [r1]
    6444:	cmp	r3, r1
    6448:	cmpeq	r2, r0
    644c:	bhi	651c <MyGame_Example_TestInclude_parse_json_table+0x16c>
    6450:	ldrd	r2, [fp, #-12]
    6454:	ldr	r0, [pc, #948]	; 6810 <MyGame_Example_TestInclude_parse_json_table+0x460>
    6458:	mvn	r1, #0
    645c:	and	r2, r2, r0
    6460:	and	r3, r3, r1
    6464:	add	r1, pc, #900	; 0x384
    6468:	ldrd	r0, [r1]
    646c:	cmp	r3, r1
    6470:	cmpeq	r2, r0
    6474:	bne	6504 <MyGame_Example_TestInclude_parse_json_table+0x154>
    6478:	ldr	r3, [fp, #-76]	; 0xffffffb4
    647c:	str	r3, [fp, #-16]
    6480:	mov	r3, #6
    6484:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6488:	ldr	r1, [fp, #-16]
    648c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6490:	bl	e20 <flatcc_json_parser_match_symbol>
    6494:	str	r0, [fp, #-76]	; 0xffffffb4
    6498:	ldr	r2, [fp, #-16]
    649c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    64a0:	cmp	r2, r3
    64a4:	beq	64ec <MyGame_Example_TestInclude_parse_json_table+0x13c>
    64a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    64ac:	ldr	r0, [r3]
    64b0:	mov	r3, #1
    64b4:	mov	r2, #0
    64b8:	mov	r1, #0
    64bc:	bl	0 <flatcc_builder_table_add>
    64c0:	str	r0, [fp, #-20]	; 0xffffffec
    64c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    64c8:	cmp	r3, #0
    64cc:	beq	6cd8 <MyGame_Example_TestInclude_parse_json_table+0x928>
    64d0:	ldr	r3, [fp, #-20]	; 0xffffffec
    64d4:	ldr	r2, [fp, #-80]	; 0xffffffb0
    64d8:	ldr	r1, [fp, #-76]	; 0xffffffb4
    64dc:	ldr	r0, [fp, #-72]	; 0xffffffb8
    64e0:	bl	3e18 <InGlobalNamespace_parse_json_struct_inline>
    64e4:	str	r0, [fp, #-76]	; 0xffffffb4
    64e8:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    64ec:	ldr	r2, [fp, #-80]	; 0xffffffb0
    64f0:	ldr	r1, [fp, #-76]	; 0xffffffb4
    64f4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    64f8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    64fc:	str	r0, [fp, #-76]	; 0xffffffb4
    6500:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6504:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6508:	ldr	r1, [fp, #-76]	; 0xffffffb4
    650c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6510:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6514:	str	r0, [fp, #-76]	; 0xffffffb4
    6518:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    651c:	ldrd	r2, [fp, #-12]
    6520:	add	r1, pc, #720	; 0x2d0
    6524:	ldrd	r0, [r1]
    6528:	cmp	r3, r1
    652c:	cmpeq	r2, r0
    6530:	bhi	681c <MyGame_Example_TestInclude_parse_json_table+0x46c>
    6534:	ldrd	r2, [fp, #-12]
    6538:	mvn	r0, #255	; 0xff
    653c:	mvn	r1, #0
    6540:	and	r2, r2, r0
    6544:	and	r3, r3, r1
    6548:	add	r1, pc, #688	; 0x2b0
    654c:	ldrd	r0, [r1]
    6550:	cmp	r3, r1
    6554:	cmpeq	r2, r0
    6558:	bne	6680 <MyGame_Example_TestInclude_parse_json_table+0x2d0>
    655c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6560:	str	r3, [fp, #-16]
    6564:	mov	r3, #7
    6568:	ldr	r2, [fp, #-80]	; 0xffffffb0
    656c:	ldr	r1, [fp, #-16]
    6570:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6574:	bl	e20 <flatcc_json_parser_match_symbol>
    6578:	str	r0, [fp, #-76]	; 0xffffffb4
    657c:	ldr	r2, [fp, #-16]
    6580:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6584:	cmp	r2, r3
    6588:	beq	6668 <MyGame_Example_TestInclude_parse_json_table+0x2b8>
    658c:	mov	r2, #0
    6590:	mov	r3, #0
    6594:	strd	r2, [fp, #-36]	; 0xffffffdc
    6598:	ldr	r3, [fp, #-76]	; 0xffffffb4
    659c:	str	r3, [fp, #-16]
    65a0:	sub	r3, fp, #36	; 0x24
    65a4:	ldr	r2, [fp, #-80]	; 0xffffffb0
    65a8:	ldr	r1, [fp, #-16]
    65ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
    65b0:	bl	1984 <flatcc_json_parser_int64>
    65b4:	str	r0, [fp, #-76]	; 0xffffffb4
    65b8:	ldr	r2, [fp, #-16]
    65bc:	ldr	r3, [fp, #-76]	; 0xffffffb4
    65c0:	cmp	r2, r3
    65c4:	bne	6610 <MyGame_Example_TestInclude_parse_json_table+0x260>
    65c8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    65cc:	str	r3, [fp, #-16]
    65d0:	sub	r3, fp, #36	; 0x24
    65d4:	str	r3, [sp]
    65d8:	ldr	r3, [pc, #564]	; 6814 <MyGame_Example_TestInclude_parse_json_table+0x464>
    65dc:	ldr	r2, [fp, #-80]	; 0xffffffb0
    65e0:	ldr	r1, [fp, #-16]
    65e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    65e8:	bl	2510 <flatcc_json_parser_symbolic_int64>
    65ec:	str	r0, [fp, #-76]	; 0xffffffb4
    65f0:	ldr	r2, [fp, #-76]	; 0xffffffb4
    65f4:	ldr	r3, [fp, #-16]
    65f8:	cmp	r2, r3
    65fc:	beq	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6600:	ldr	r2, [fp, #-76]	; 0xffffffb4
    6604:	ldr	r3, [fp, #-80]	; 0xffffffb0
    6608:	cmp	r2, r3
    660c:	beq	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6610:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    6614:	orrs	r3, r2, r3
    6618:	bne	6630 <MyGame_Example_TestInclude_parse_json_table+0x280>
    661c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6620:	ldr	r3, [r3, #8]
    6624:	and	r3, r3, #2
    6628:	cmp	r3, #0
    662c:	beq	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6630:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6634:	ldr	r0, [r3]
    6638:	mov	r3, #8
    663c:	mov	r2, #8
    6640:	mov	r1, #2
    6644:	bl	0 <flatcc_builder_table_add>
    6648:	str	r0, [fp, #-20]	; 0xffffffec
    664c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6650:	cmp	r3, #0
    6654:	beq	6ce0 <MyGame_Example_TestInclude_parse_json_table+0x930>
    6658:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    665c:	ldr	r0, [fp, #-20]	; 0xffffffec
    6660:	bl	2d8 <flatbuffers_int64_write_to_pe>
    6664:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6668:	ldr	r2, [fp, #-80]	; 0xffffffb0
    666c:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6670:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6674:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6678:	str	r0, [fp, #-76]	; 0xffffffb4
    667c:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6680:	ldrd	r2, [fp, #-12]
    6684:	ldr	r0, [pc, #388]	; 6810 <MyGame_Example_TestInclude_parse_json_table+0x460>
    6688:	mvn	r1, #0
    668c:	and	r2, r2, r0
    6690:	and	r3, r3, r1
    6694:	add	r1, pc, #364	; 0x16c
    6698:	ldrd	r0, [r1]
    669c:	cmp	r3, r1
    66a0:	cmpeq	r2, r0
    66a4:	bne	67cc <MyGame_Example_TestInclude_parse_json_table+0x41c>
    66a8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    66ac:	str	r3, [fp, #-16]
    66b0:	mov	r3, #6
    66b4:	ldr	r2, [fp, #-80]	; 0xffffffb0
    66b8:	ldr	r1, [fp, #-16]
    66bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
    66c0:	bl	e20 <flatcc_json_parser_match_symbol>
    66c4:	str	r0, [fp, #-76]	; 0xffffffb4
    66c8:	ldr	r2, [fp, #-16]
    66cc:	ldr	r3, [fp, #-76]	; 0xffffffb4
    66d0:	cmp	r2, r3
    66d4:	beq	67b4 <MyGame_Example_TestInclude_parse_json_table+0x404>
    66d8:	mov	r2, #0
    66dc:	mov	r3, #0
    66e0:	strd	r2, [fp, #-44]	; 0xffffffd4
    66e4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    66e8:	str	r3, [fp, #-16]
    66ec:	sub	r3, fp, #44	; 0x2c
    66f0:	ldr	r2, [fp, #-80]	; 0xffffffb0
    66f4:	ldr	r1, [fp, #-16]
    66f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    66fc:	bl	1984 <flatcc_json_parser_int64>
    6700:	str	r0, [fp, #-76]	; 0xffffffb4
    6704:	ldr	r2, [fp, #-16]
    6708:	ldr	r3, [fp, #-76]	; 0xffffffb4
    670c:	cmp	r2, r3
    6710:	bne	675c <MyGame_Example_TestInclude_parse_json_table+0x3ac>
    6714:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6718:	str	r3, [fp, #-16]
    671c:	sub	r3, fp, #44	; 0x2c
    6720:	str	r3, [sp]
    6724:	ldr	r3, [pc, #236]	; 6818 <MyGame_Example_TestInclude_parse_json_table+0x468>
    6728:	ldr	r2, [fp, #-80]	; 0xffffffb0
    672c:	ldr	r1, [fp, #-16]
    6730:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6734:	bl	2510 <flatcc_json_parser_symbolic_int64>
    6738:	str	r0, [fp, #-76]	; 0xffffffb4
    673c:	ldr	r2, [fp, #-76]	; 0xffffffb4
    6740:	ldr	r3, [fp, #-16]
    6744:	cmp	r2, r3
    6748:	beq	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    674c:	ldr	r2, [fp, #-76]	; 0xffffffb4
    6750:	ldr	r3, [fp, #-80]	; 0xffffffb0
    6754:	cmp	r2, r3
    6758:	beq	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    675c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    6760:	orrs	r3, r2, r3
    6764:	bne	677c <MyGame_Example_TestInclude_parse_json_table+0x3cc>
    6768:	ldr	r3, [fp, #-72]	; 0xffffffb8
    676c:	ldr	r3, [r3, #8]
    6770:	and	r3, r3, #2
    6774:	cmp	r3, #0
    6778:	beq	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    677c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6780:	ldr	r0, [r3]
    6784:	mov	r3, #8
    6788:	mov	r2, #8
    678c:	mov	r1, #1
    6790:	bl	0 <flatcc_builder_table_add>
    6794:	str	r0, [fp, #-20]	; 0xffffffec
    6798:	ldr	r3, [fp, #-20]	; 0xffffffec
    679c:	cmp	r3, #0
    67a0:	beq	6ce8 <MyGame_Example_TestInclude_parse_json_table+0x938>
    67a4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    67a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    67ac:	bl	2d8 <flatbuffers_int64_write_to_pe>
    67b0:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    67b4:	ldr	r2, [fp, #-80]	; 0xffffffb0
    67b8:	ldr	r1, [fp, #-76]	; 0xffffffb4
    67bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
    67c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    67c4:	str	r0, [fp, #-76]	; 0xffffffb4
    67c8:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    67cc:	ldr	r2, [fp, #-80]	; 0xffffffb0
    67d0:	ldr	r1, [fp, #-76]	; 0xffffffb4
    67d4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    67d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    67dc:	str	r0, [fp, #-76]	; 0xffffffb4
    67e0:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    67e4:	nop			; (mov r0, r0)
    67e8:	.word	0x616bffff
    67ec:	.word	0x696e6376
    67f0:	.word	0x616c0000
    67f4:	.word	0x676c6f62
    67f8:	.word	0x616c32ff
    67fc:	.word	0x696e6376
    6800:	.word	0x616c3200
    6804:	.word	0x696e6376
    6808:	.word	0x616c0000
    680c:	.word	0x696e6376
    6810:	.word	0xffff0000
    6814:	.word	0x00000058
    6818:	.word	0x00000068
    681c:	ldrd	r2, [fp, #-12]
    6820:	add	r1, pc, #704	; 0x2c0
    6824:	ldrd	r0, [r1]
    6828:	cmp	r3, r1
    682c:	cmpeq	r2, r0
    6830:	bhi	6998 <MyGame_Example_TestInclude_parse_json_table+0x5e8>
    6834:	ldrd	r2, [fp, #-12]
    6838:	mvn	r0, #255	; 0xff
    683c:	mvn	r1, #0
    6840:	and	r2, r2, r0
    6844:	and	r3, r3, r1
    6848:	add	r1, pc, #672	; 0x2a0
    684c:	ldrd	r0, [r1]
    6850:	cmp	r3, r1
    6854:	cmpeq	r2, r0
    6858:	bne	6980 <MyGame_Example_TestInclude_parse_json_table+0x5d0>
    685c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6860:	str	r3, [fp, #-16]
    6864:	mov	r3, #7
    6868:	ldr	r2, [fp, #-80]	; 0xffffffb0
    686c:	ldr	r1, [fp, #-16]
    6870:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6874:	bl	e20 <flatcc_json_parser_match_symbol>
    6878:	str	r0, [fp, #-76]	; 0xffffffb4
    687c:	ldr	r2, [fp, #-16]
    6880:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6884:	cmp	r2, r3
    6888:	beq	6968 <MyGame_Example_TestInclude_parse_json_table+0x5b8>
    688c:	mov	r3, #0
    6890:	str	r3, [fp, #-48]	; 0xffffffd0
    6894:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6898:	str	r3, [fp, #-16]
    689c:	sub	r3, fp, #48	; 0x30
    68a0:	ldr	r2, [fp, #-80]	; 0xffffffb0
    68a4:	ldr	r1, [fp, #-16]
    68a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    68ac:	bl	1a58 <flatcc_json_parser_int32>
    68b0:	str	r0, [fp, #-76]	; 0xffffffb4
    68b4:	ldr	r2, [fp, #-16]
    68b8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    68bc:	cmp	r2, r3
    68c0:	bne	690c <MyGame_Example_TestInclude_parse_json_table+0x55c>
    68c4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    68c8:	str	r3, [fp, #-16]
    68cc:	sub	r3, fp, #48	; 0x30
    68d0:	str	r3, [sp]
    68d4:	ldr	r3, [pc, #548]	; 6b00 <MyGame_Example_TestInclude_parse_json_table+0x750>
    68d8:	ldr	r2, [fp, #-80]	; 0xffffffb0
    68dc:	ldr	r1, [fp, #-16]
    68e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    68e4:	bl	26e8 <flatcc_json_parser_symbolic_int32>
    68e8:	str	r0, [fp, #-76]	; 0xffffffb4
    68ec:	ldr	r2, [fp, #-76]	; 0xffffffb4
    68f0:	ldr	r3, [fp, #-16]
    68f4:	cmp	r2, r3
    68f8:	beq	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    68fc:	ldr	r2, [fp, #-76]	; 0xffffffb4
    6900:	ldr	r3, [fp, #-80]	; 0xffffffb0
    6904:	cmp	r2, r3
    6908:	beq	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    690c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6910:	cmp	r3, #0
    6914:	bne	692c <MyGame_Example_TestInclude_parse_json_table+0x57c>
    6918:	ldr	r3, [fp, #-72]	; 0xffffffb8
    691c:	ldr	r3, [r3, #8]
    6920:	and	r3, r3, #2
    6924:	cmp	r3, #0
    6928:	beq	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    692c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6930:	ldr	r0, [r3]
    6934:	mov	r3, #4
    6938:	mov	r2, #4
    693c:	mov	r1, #3
    6940:	bl	0 <flatcc_builder_table_add>
    6944:	str	r0, [fp, #-20]	; 0xffffffec
    6948:	ldr	r3, [fp, #-20]	; 0xffffffec
    694c:	cmp	r3, #0
    6950:	beq	6cf0 <MyGame_Example_TestInclude_parse_json_table+0x940>
    6954:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6958:	mov	r1, r3
    695c:	ldr	r0, [fp, #-20]	; 0xffffffec
    6960:	bl	27c <flatbuffers_int32_write_to_pe>
    6964:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6968:	ldr	r2, [fp, #-80]	; 0xffffffb0
    696c:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6970:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6974:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6978:	str	r0, [fp, #-76]	; 0xffffffb4
    697c:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6980:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6984:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6988:	ldr	r0, [fp, #-72]	; 0xffffffb8
    698c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6990:	str	r0, [fp, #-76]	; 0xffffffb4
    6994:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6998:	ldrd	r2, [fp, #-12]
    699c:	mvn	r0, #255	; 0xff
    69a0:	mvn	r1, #0
    69a4:	and	r2, r2, r0
    69a8:	and	r3, r3, r1
    69ac:	add	r1, pc, #324	; 0x144
    69b0:	ldrd	r0, [r1]
    69b4:	cmp	r3, r1
    69b8:	cmpeq	r2, r0
    69bc:	bne	6b08 <MyGame_Example_TestInclude_parse_json_table+0x758>
    69c0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    69c4:	str	r3, [fp, #-16]
    69c8:	mov	r3, #7
    69cc:	ldr	r2, [fp, #-80]	; 0xffffffb0
    69d0:	ldr	r1, [fp, #-16]
    69d4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    69d8:	bl	e20 <flatcc_json_parser_match_symbol>
    69dc:	str	r0, [fp, #-76]	; 0xffffffb4
    69e0:	ldr	r2, [fp, #-16]
    69e4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    69e8:	cmp	r2, r3
    69ec:	beq	6acc <MyGame_Example_TestInclude_parse_json_table+0x71c>
    69f0:	mov	r2, #0
    69f4:	mov	r3, #0
    69f8:	strd	r2, [fp, #-60]	; 0xffffffc4
    69fc:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6a00:	str	r3, [fp, #-16]
    6a04:	sub	r3, fp, #60	; 0x3c
    6a08:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6a0c:	ldr	r1, [fp, #-16]
    6a10:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6a14:	bl	1984 <flatcc_json_parser_int64>
    6a18:	str	r0, [fp, #-76]	; 0xffffffb4
    6a1c:	ldr	r2, [fp, #-16]
    6a20:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6a24:	cmp	r2, r3
    6a28:	bne	6a74 <MyGame_Example_TestInclude_parse_json_table+0x6c4>
    6a2c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6a30:	str	r3, [fp, #-16]
    6a34:	sub	r3, fp, #60	; 0x3c
    6a38:	str	r3, [sp]
    6a3c:	ldr	r3, [pc, #192]	; 6b04 <MyGame_Example_TestInclude_parse_json_table+0x754>
    6a40:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6a44:	ldr	r1, [fp, #-16]
    6a48:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6a4c:	bl	2510 <flatcc_json_parser_symbolic_int64>
    6a50:	str	r0, [fp, #-76]	; 0xffffffb4
    6a54:	ldr	r2, [fp, #-76]	; 0xffffffb4
    6a58:	ldr	r3, [fp, #-16]
    6a5c:	cmp	r2, r3
    6a60:	beq	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6a64:	ldr	r2, [fp, #-76]	; 0xffffffb4
    6a68:	ldr	r3, [fp, #-80]	; 0xffffffb0
    6a6c:	cmp	r2, r3
    6a70:	beq	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6a74:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    6a78:	orrs	r3, r2, r3
    6a7c:	bne	6a94 <MyGame_Example_TestInclude_parse_json_table+0x6e4>
    6a80:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6a84:	ldr	r3, [r3, #8]
    6a88:	and	r3, r3, #2
    6a8c:	cmp	r3, #0
    6a90:	beq	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6a94:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6a98:	ldr	r0, [r3]
    6a9c:	mov	r3, #8
    6aa0:	mov	r2, #8
    6aa4:	mov	r1, #5
    6aa8:	bl	0 <flatcc_builder_table_add>
    6aac:	str	r0, [fp, #-20]	; 0xffffffec
    6ab0:	ldr	r3, [fp, #-20]	; 0xffffffec
    6ab4:	cmp	r3, #0
    6ab8:	beq	6cf8 <MyGame_Example_TestInclude_parse_json_table+0x948>
    6abc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    6ac0:	ldr	r0, [fp, #-20]	; 0xffffffec
    6ac4:	bl	2d8 <flatbuffers_int64_write_to_pe>
    6ac8:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6acc:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6ad0:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6ad4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6ad8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6adc:	str	r0, [fp, #-76]	; 0xffffffb4
    6ae0:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6ae4:	nop			; (mov r0, r0)
    6ae8:	.word	0x616c33ff
    6aec:	.word	0x696e6376
    6af0:	.word	0x616c3300
    6af4:	.word	0x696e6376
    6af8:	.word	0x616c3500
    6afc:	.word	0x696e6376
    6b00:	.word	0x00000078
    6b04:	.word	0x00000084
    6b08:	ldrd	r2, [fp, #-12]
    6b0c:	mvn	r0, #255	; 0xff
    6b10:	mvn	r1, #0
    6b14:	and	r2, r2, r0
    6b18:	and	r3, r3, r1
    6b1c:	add	r1, pc, #532	; 0x214
    6b20:	ldrd	r0, [r1]
    6b24:	cmp	r3, r1
    6b28:	cmpeq	r2, r0
    6b2c:	bne	6c54 <MyGame_Example_TestInclude_parse_json_table+0x8a4>
    6b30:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6b34:	str	r3, [fp, #-16]
    6b38:	mov	r3, #7
    6b3c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6b40:	ldr	r1, [fp, #-16]
    6b44:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6b48:	bl	e20 <flatcc_json_parser_match_symbol>
    6b4c:	str	r0, [fp, #-76]	; 0xffffffb4
    6b50:	ldr	r2, [fp, #-16]
    6b54:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6b58:	cmp	r2, r3
    6b5c:	beq	6c3c <MyGame_Example_TestInclude_parse_json_table+0x88c>
    6b60:	mov	r2, #0
    6b64:	mov	r3, #0
    6b68:	strd	r2, [fp, #-68]	; 0xffffffbc
    6b6c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6b70:	str	r3, [fp, #-16]
    6b74:	sub	r3, fp, #68	; 0x44
    6b78:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6b7c:	ldr	r1, [fp, #-16]
    6b80:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6b84:	bl	1984 <flatcc_json_parser_int64>
    6b88:	str	r0, [fp, #-76]	; 0xffffffb4
    6b8c:	ldr	r2, [fp, #-16]
    6b90:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6b94:	cmp	r2, r3
    6b98:	bne	6be4 <MyGame_Example_TestInclude_parse_json_table+0x834>
    6b9c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6ba0:	str	r3, [fp, #-16]
    6ba4:	sub	r3, fp, #68	; 0x44
    6ba8:	str	r3, [sp]
    6bac:	ldr	r3, [pc, #396]	; 6d40 <MyGame_Example_TestInclude_parse_json_table+0x990>
    6bb0:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6bb4:	ldr	r1, [fp, #-16]
    6bb8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6bbc:	bl	2510 <flatcc_json_parser_symbolic_int64>
    6bc0:	str	r0, [fp, #-76]	; 0xffffffb4
    6bc4:	ldr	r2, [fp, #-76]	; 0xffffffb4
    6bc8:	ldr	r3, [fp, #-16]
    6bcc:	cmp	r2, r3
    6bd0:	beq	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6bd4:	ldr	r2, [fp, #-76]	; 0xffffffb4
    6bd8:	ldr	r3, [fp, #-80]	; 0xffffffb0
    6bdc:	cmp	r2, r3
    6be0:	beq	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6be4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    6be8:	orrs	r3, r2, r3
    6bec:	bne	6c04 <MyGame_Example_TestInclude_parse_json_table+0x854>
    6bf0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6bf4:	ldr	r3, [r3, #8]
    6bf8:	and	r3, r3, #2
    6bfc:	cmp	r3, #0
    6c00:	beq	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6c04:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6c08:	ldr	r0, [r3]
    6c0c:	mov	r3, #8
    6c10:	mov	r2, #8
    6c14:	mov	r1, #4
    6c18:	bl	0 <flatcc_builder_table_add>
    6c1c:	str	r0, [fp, #-20]	; 0xffffffec
    6c20:	ldr	r3, [fp, #-20]	; 0xffffffec
    6c24:	cmp	r3, #0
    6c28:	beq	6d00 <MyGame_Example_TestInclude_parse_json_table+0x950>
    6c2c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    6c30:	ldr	r0, [fp, #-20]	; 0xffffffec
    6c34:	bl	2d8 <flatbuffers_int64_write_to_pe>
    6c38:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6c3c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6c40:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6c44:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6c48:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6c4c:	str	r0, [fp, #-76]	; 0xffffffb4
    6c50:	b	6c68 <MyGame_Example_TestInclude_parse_json_table+0x8b8>
    6c54:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6c58:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6c5c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6c60:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6c64:	str	r0, [fp, #-76]	; 0xffffffb4
    6c68:	sub	r3, fp, #24
    6c6c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6c70:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6c74:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6c78:	bl	a68 <flatcc_json_parser_object_end>
    6c7c:	str	r0, [fp, #-76]	; 0xffffffb4
    6c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6c84:	cmp	r3, #0
    6c88:	bne	6414 <MyGame_Example_TestInclude_parse_json_table+0x64>
    6c8c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6c90:	ldr	r3, [r3, #24]
    6c94:	cmp	r3, #0
    6c98:	bne	6d08 <MyGame_Example_TestInclude_parse_json_table+0x958>
    6c9c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6ca0:	ldr	r3, [r3]
    6ca4:	mov	r0, r3
    6ca8:	bl	0 <flatcc_builder_end_table>
    6cac:	mov	r2, r0
    6cb0:	ldr	r3, [fp, #-84]	; 0xffffffac
    6cb4:	str	r2, [r3]
    6cb8:	ldr	r3, [fp, #-84]	; 0xffffffac
    6cbc:	ldr	r3, [r3]
    6cc0:	cmp	r3, #0
    6cc4:	beq	6d10 <MyGame_Example_TestInclude_parse_json_table+0x960>
    6cc8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    6ccc:	b	6d2c <MyGame_Example_TestInclude_parse_json_table+0x97c>
    6cd0:	nop			; (mov r0, r0)
    6cd4:	b	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6cd8:	nop			; (mov r0, r0)
    6cdc:	b	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6ce0:	nop			; (mov r0, r0)
    6ce4:	b	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6ce8:	nop			; (mov r0, r0)
    6cec:	b	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6cf0:	nop			; (mov r0, r0)
    6cf4:	b	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6cf8:	nop			; (mov r0, r0)
    6cfc:	b	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6d00:	nop			; (mov r0, r0)
    6d04:	b	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6d08:	nop			; (mov r0, r0)
    6d0c:	b	6d14 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6d10:	nop			; (mov r0, r0)
    6d14:	mov	r3, #33	; 0x21
    6d18:	ldr	r2, [fp, #-80]	; 0xffffffb0
    6d1c:	ldr	r1, [fp, #-76]	; 0xffffffb4
    6d20:	ldr	r0, [fp, #-72]	; 0xffffffb8
    6d24:	bl	0 <flatcc_json_parser_set_error>
    6d28:	mov	r3, r0
    6d2c:	mov	r0, r3
    6d30:	sub	sp, fp, #4
    6d34:	pop	{fp, pc}
    6d38:	.word	0x616c3400
    6d3c:	.word	0x696e6376
    6d40:	.word	0x00000090

00006d44 <MyGame_Example_Vec3_parse_json_struct_inline>:
    6d44:	push	{fp, lr}
    6d48:	add	fp, sp, #4
    6d4c:	sub	sp, sp, #72	; 0x48
    6d50:	str	r0, [fp, #-56]	; 0xffffffc8
    6d54:	str	r1, [fp, #-60]	; 0xffffffc4
    6d58:	str	r2, [fp, #-64]	; 0xffffffc0
    6d5c:	str	r3, [fp, #-68]	; 0xffffffbc
    6d60:	sub	r3, fp, #24
    6d64:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6d68:	ldr	r1, [fp, #-60]	; 0xffffffc4
    6d6c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6d70:	bl	980 <flatcc_json_parser_object_start>
    6d74:	str	r0, [fp, #-60]	; 0xffffffc4
    6d78:	b	7464 <MyGame_Example_Vec3_parse_json_struct_inline+0x720>
    6d7c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6d80:	ldr	r1, [fp, #-60]	; 0xffffffc4
    6d84:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6d88:	bl	570 <flatcc_json_parser_symbol_start>
    6d8c:	str	r0, [fp, #-60]	; 0xffffffc4
    6d90:	ldr	r1, [fp, #-64]	; 0xffffffc0
    6d94:	ldr	r0, [fp, #-60]	; 0xffffffc4
    6d98:	bl	854 <flatcc_json_parser_symbol_part>
    6d9c:	strd	r0, [fp, #-12]
    6da0:	ldrd	r2, [fp, #-12]
    6da4:	add	r1, pc, #788	; 0x314
    6da8:	ldrd	r0, [r1]
    6dac:	cmp	r3, r1
    6db0:	cmpeq	r2, r0
    6db4:	bhi	6ff4 <MyGame_Example_Vec3_parse_json_struct_inline+0x2b0>
    6db8:	ldrd	r2, [fp, #-12]
    6dbc:	mov	r0, #-16777216	; 0xff000000
    6dc0:	mvn	r1, #0
    6dc4:	and	r2, r2, r0
    6dc8:	and	r3, r3, r1
    6dcc:	add	r1, pc, #756	; 0x2f4
    6dd0:	ldrd	r0, [r1]
    6dd4:	cmp	r3, r1
    6dd8:	cmpeq	r2, r0
    6ddc:	bne	6ec8 <MyGame_Example_Vec3_parse_json_struct_inline+0x184>
    6de0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6de4:	str	r3, [fp, #-16]
    6de8:	mov	r3, #5
    6dec:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6df0:	ldr	r1, [fp, #-16]
    6df4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6df8:	bl	e20 <flatcc_json_parser_match_symbol>
    6dfc:	str	r0, [fp, #-60]	; 0xffffffc4
    6e00:	ldr	r2, [fp, #-16]
    6e04:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6e08:	cmp	r2, r3
    6e0c:	beq	6eb0 <MyGame_Example_Vec3_parse_json_struct_inline+0x16c>
    6e10:	mov	r3, #0
    6e14:	strb	r3, [fp, #-25]	; 0xffffffe7
    6e18:	ldr	r3, [fp, #-68]	; 0xffffffbc
    6e1c:	add	r3, r3, #24
    6e20:	str	r3, [fp, #-20]	; 0xffffffec
    6e24:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6e28:	str	r3, [fp, #-16]
    6e2c:	sub	r3, fp, #25
    6e30:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6e34:	ldr	r1, [fp, #-16]
    6e38:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6e3c:	bl	1bf8 <flatcc_json_parser_int8>
    6e40:	str	r0, [fp, #-60]	; 0xffffffc4
    6e44:	ldr	r2, [fp, #-16]
    6e48:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6e4c:	cmp	r2, r3
    6e50:	bne	6e9c <MyGame_Example_Vec3_parse_json_struct_inline+0x158>
    6e54:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6e58:	str	r3, [fp, #-16]
    6e5c:	sub	r3, fp, #25
    6e60:	str	r3, [sp]
    6e64:	ldr	r3, [pc, #628]	; 70e0 <MyGame_Example_Vec3_parse_json_struct_inline+0x39c>
    6e68:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6e6c:	ldr	r1, [fp, #-16]
    6e70:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6e74:	bl	2a90 <flatcc_json_parser_symbolic_int8>
    6e78:	str	r0, [fp, #-60]	; 0xffffffc4
    6e7c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    6e80:	ldr	r3, [fp, #-16]
    6e84:	cmp	r2, r3
    6e88:	beq	7478 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    6e8c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    6e90:	ldr	r3, [fp, #-64]	; 0xffffffc0
    6e94:	cmp	r2, r3
    6e98:	beq	7478 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    6e9c:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
    6ea0:	mov	r1, r3
    6ea4:	ldr	r0, [fp, #-20]	; 0xffffffec
    6ea8:	bl	1b0 <flatbuffers_int8_write_to_pe>
    6eac:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    6eb0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6eb4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    6eb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6ebc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6ec0:	str	r0, [fp, #-60]	; 0xffffffc4
    6ec4:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    6ec8:	ldrd	r2, [fp, #-12]
    6ecc:	mov	r0, #-16777216	; 0xff000000
    6ed0:	mvn	r1, #0
    6ed4:	and	r2, r2, r0
    6ed8:	and	r3, r3, r1
    6edc:	add	r1, pc, #492	; 0x1ec
    6ee0:	ldrd	r0, [r1]
    6ee4:	cmp	r3, r1
    6ee8:	cmpeq	r2, r0
    6eec:	bne	6fdc <MyGame_Example_Vec3_parse_json_struct_inline+0x298>
    6ef0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6ef4:	str	r3, [fp, #-16]
    6ef8:	mov	r3, #5
    6efc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6f00:	ldr	r1, [fp, #-16]
    6f04:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6f08:	bl	e20 <flatcc_json_parser_match_symbol>
    6f0c:	str	r0, [fp, #-60]	; 0xffffffc4
    6f10:	ldr	r2, [fp, #-16]
    6f14:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6f18:	cmp	r2, r3
    6f1c:	beq	6fc4 <MyGame_Example_Vec3_parse_json_struct_inline+0x280>
    6f20:	mov	r2, #0
    6f24:	mov	r3, #0
    6f28:	strd	r2, [fp, #-36]	; 0xffffffdc
    6f2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    6f30:	add	r3, r3, #16
    6f34:	str	r3, [fp, #-20]	; 0xffffffec
    6f38:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6f3c:	str	r3, [fp, #-16]
    6f40:	sub	r3, fp, #36	; 0x24
    6f44:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6f48:	ldr	r1, [fp, #-16]
    6f4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6f50:	bl	0 <flatcc_json_parser_double>
    6f54:	str	r0, [fp, #-60]	; 0xffffffc4
    6f58:	ldr	r2, [fp, #-16]
    6f5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6f60:	cmp	r2, r3
    6f64:	bne	6fb0 <MyGame_Example_Vec3_parse_json_struct_inline+0x26c>
    6f68:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6f6c:	str	r3, [fp, #-16]
    6f70:	sub	r3, fp, #36	; 0x24
    6f74:	str	r3, [sp]
    6f78:	ldr	r3, [pc, #356]	; 70e4 <MyGame_Example_Vec3_parse_json_struct_inline+0x3a0>
    6f7c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6f80:	ldr	r1, [fp, #-16]
    6f84:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6f88:	bl	3008 <flatcc_json_parser_symbolic_double>
    6f8c:	str	r0, [fp, #-60]	; 0xffffffc4
    6f90:	ldr	r2, [fp, #-60]	; 0xffffffc4
    6f94:	ldr	r3, [fp, #-16]
    6f98:	cmp	r2, r3
    6f9c:	beq	7478 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    6fa0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    6fa4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    6fa8:	cmp	r2, r3
    6fac:	beq	7478 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    6fb0:	vldr	d7, [fp, #-36]	; 0xffffffdc
    6fb4:	vmov.f64	d0, d7
    6fb8:	ldr	r0, [fp, #-20]	; 0xffffffec
    6fbc:	bl	3b4 <flatbuffers_double_write_to_pe>
    6fc0:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    6fc4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6fc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    6fcc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6fd0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6fd4:	str	r0, [fp, #-60]	; 0xffffffc4
    6fd8:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    6fdc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6fe0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    6fe4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6fe8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6fec:	str	r0, [fp, #-60]	; 0xffffffc4
    6ff0:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    6ff4:	ldrd	r2, [fp, #-12]
    6ff8:	mvn	r0, #0
    6ffc:	mvn	r1, #-2013265920	; 0x88000000
    7000:	cmp	r3, r1
    7004:	cmpeq	r2, r0
    7008:	bhi	70f4 <MyGame_Example_Vec3_parse_json_struct_inline+0x3b0>
    700c:	ldrd	r2, [fp, #-12]
    7010:	mov	r0, #-16777216	; 0xff000000
    7014:	mvn	r1, #0
    7018:	and	r2, r2, r0
    701c:	and	r3, r3, r1
    7020:	add	r1, pc, #176	; 0xb0
    7024:	ldrd	r0, [r1]
    7028:	cmp	r3, r1
    702c:	cmpeq	r2, r0
    7030:	bne	70a4 <MyGame_Example_Vec3_parse_json_struct_inline+0x360>
    7034:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7038:	str	r3, [fp, #-16]
    703c:	mov	r3, #5
    7040:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7044:	ldr	r1, [fp, #-16]
    7048:	ldr	r0, [fp, #-56]	; 0xffffffc8
    704c:	bl	e20 <flatcc_json_parser_match_symbol>
    7050:	str	r0, [fp, #-60]	; 0xffffffc4
    7054:	ldr	r2, [fp, #-16]
    7058:	ldr	r3, [fp, #-60]	; 0xffffffc4
    705c:	cmp	r2, r3
    7060:	beq	708c <MyGame_Example_Vec3_parse_json_struct_inline+0x348>
    7064:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7068:	add	r3, r3, #26
    706c:	str	r3, [fp, #-20]	; 0xffffffec
    7070:	ldr	r3, [fp, #-20]	; 0xffffffec
    7074:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7078:	ldr	r1, [fp, #-60]	; 0xffffffc4
    707c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7080:	bl	5418 <MyGame_Example_Test_parse_json_struct_inline>
    7084:	str	r0, [fp, #-60]	; 0xffffffc4
    7088:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    708c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7090:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7094:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7098:	bl	0 <flatcc_json_parser_unmatched_symbol>
    709c:	str	r0, [fp, #-60]	; 0xffffffc4
    70a0:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    70a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    70a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    70ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
    70b0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    70b4:	str	r0, [fp, #-60]	; 0xffffffc4
    70b8:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    70bc:	nop			; (mov r0, r0)
    70c0:	.word	0x32ffffff
    70c4:	.word	0x74657374
    70c8:	.word	0x32000000
    70cc:	.word	0x74657374
    70d0:	.word	0x31000000
    70d4:	.word	0x74657374
    70d8:	.word	0x33000000
    70dc:	.word	0x74657374
    70e0:	.word	0x000000a0
    70e4:	.word	0x000000b0
    70e8:	.word	0x000000bc
    70ec:	.word	0x000000c8
    70f0:	.word	0x000000d4
    70f4:	ldrd	r2, [fp, #-12]
    70f8:	mvn	r0, #0
    70fc:	mvn	r1, #-2030043136	; 0x87000000
    7100:	cmp	r3, r1
    7104:	cmpeq	r2, r0
    7108:	bhi	7228 <MyGame_Example_Vec3_parse_json_struct_inline+0x4e4>
    710c:	ldrd	r2, [fp, #-12]
    7110:	mov	r0, #0
    7114:	mov	r1, #-16777216	; 0xff000000
    7118:	and	r2, r2, r0
    711c:	and	r3, r3, r1
    7120:	cmp	r3, #2013265920	; 0x78000000
    7124:	cmpeq	r2, #0
    7128:	bne	7210 <MyGame_Example_Vec3_parse_json_struct_inline+0x4cc>
    712c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7130:	str	r3, [fp, #-16]
    7134:	mov	r3, #1
    7138:	ldr	r2, [fp, #-64]	; 0xffffffc0
    713c:	ldr	r1, [fp, #-16]
    7140:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7144:	bl	e20 <flatcc_json_parser_match_symbol>
    7148:	str	r0, [fp, #-60]	; 0xffffffc4
    714c:	ldr	r2, [fp, #-16]
    7150:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7154:	cmp	r2, r3
    7158:	beq	71f8 <MyGame_Example_Vec3_parse_json_struct_inline+0x4b4>
    715c:	mov	r3, #0
    7160:	str	r3, [fp, #-40]	; 0xffffffd8
    7164:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7168:	str	r3, [fp, #-20]	; 0xffffffec
    716c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7170:	str	r3, [fp, #-16]
    7174:	sub	r3, fp, #40	; 0x28
    7178:	ldr	r2, [fp, #-64]	; 0xffffffc0
    717c:	ldr	r1, [fp, #-16]
    7180:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7184:	bl	0 <flatcc_json_parser_float>
    7188:	str	r0, [fp, #-60]	; 0xffffffc4
    718c:	ldr	r2, [fp, #-16]
    7190:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7194:	cmp	r2, r3
    7198:	bne	71e4 <MyGame_Example_Vec3_parse_json_struct_inline+0x4a0>
    719c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    71a0:	str	r3, [fp, #-16]
    71a4:	sub	r3, fp, #40	; 0x28
    71a8:	str	r3, [sp]
    71ac:	ldr	r3, [pc, #-204]	; 70e8 <MyGame_Example_Vec3_parse_json_struct_inline+0x3a4>
    71b0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    71b4:	ldr	r1, [fp, #-16]
    71b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    71bc:	bl	2e3c <flatcc_json_parser_symbolic_float>
    71c0:	str	r0, [fp, #-60]	; 0xffffffc4
    71c4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    71c8:	ldr	r3, [fp, #-16]
    71cc:	cmp	r2, r3
    71d0:	beq	7478 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    71d4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    71d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    71dc:	cmp	r2, r3
    71e0:	beq	7478 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    71e4:	vldr	s15, [fp, #-40]	; 0xffffffd8
    71e8:	vmov.f32	s0, s15
    71ec:	ldr	r0, [fp, #-20]	; 0xffffffec
    71f0:	bl	348 <flatbuffers_float_write_to_pe>
    71f4:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    71f8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    71fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7200:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7204:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7208:	str	r0, [fp, #-60]	; 0xffffffc4
    720c:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7210:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7214:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7218:	ldr	r0, [fp, #-56]	; 0xffffffc8
    721c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7220:	str	r0, [fp, #-60]	; 0xffffffc4
    7224:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7228:	ldrd	r2, [fp, #-12]
    722c:	mov	r0, #0
    7230:	mov	r1, #-16777216	; 0xff000000
    7234:	and	r2, r2, r0
    7238:	and	r3, r3, r1
    723c:	cmp	r3, #2046820352	; 0x7a000000
    7240:	cmpeq	r2, #0
    7244:	bne	7330 <MyGame_Example_Vec3_parse_json_struct_inline+0x5ec>
    7248:	ldr	r3, [fp, #-60]	; 0xffffffc4
    724c:	str	r3, [fp, #-16]
    7250:	mov	r3, #1
    7254:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7258:	ldr	r1, [fp, #-16]
    725c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7260:	bl	e20 <flatcc_json_parser_match_symbol>
    7264:	str	r0, [fp, #-60]	; 0xffffffc4
    7268:	ldr	r2, [fp, #-16]
    726c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7270:	cmp	r2, r3
    7274:	beq	7318 <MyGame_Example_Vec3_parse_json_struct_inline+0x5d4>
    7278:	mov	r3, #0
    727c:	str	r3, [fp, #-44]	; 0xffffffd4
    7280:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7284:	add	r3, r3, #8
    7288:	str	r3, [fp, #-20]	; 0xffffffec
    728c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7290:	str	r3, [fp, #-16]
    7294:	sub	r3, fp, #44	; 0x2c
    7298:	ldr	r2, [fp, #-64]	; 0xffffffc0
    729c:	ldr	r1, [fp, #-16]
    72a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    72a4:	bl	0 <flatcc_json_parser_float>
    72a8:	str	r0, [fp, #-60]	; 0xffffffc4
    72ac:	ldr	r2, [fp, #-16]
    72b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    72b4:	cmp	r2, r3
    72b8:	bne	7304 <MyGame_Example_Vec3_parse_json_struct_inline+0x5c0>
    72bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    72c0:	str	r3, [fp, #-16]
    72c4:	sub	r3, fp, #44	; 0x2c
    72c8:	str	r3, [sp]
    72cc:	ldr	r3, [pc, #-488]	; 70ec <MyGame_Example_Vec3_parse_json_struct_inline+0x3a8>
    72d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    72d4:	ldr	r1, [fp, #-16]
    72d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    72dc:	bl	2e3c <flatcc_json_parser_symbolic_float>
    72e0:	str	r0, [fp, #-60]	; 0xffffffc4
    72e4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    72e8:	ldr	r3, [fp, #-16]
    72ec:	cmp	r2, r3
    72f0:	beq	7478 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    72f4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    72f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    72fc:	cmp	r2, r3
    7300:	beq	7478 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    7304:	vldr	s15, [fp, #-44]	; 0xffffffd4
    7308:	vmov.f32	s0, s15
    730c:	ldr	r0, [fp, #-20]	; 0xffffffec
    7310:	bl	348 <flatbuffers_float_write_to_pe>
    7314:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7318:	ldr	r2, [fp, #-64]	; 0xffffffc0
    731c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7320:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7324:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7328:	str	r0, [fp, #-60]	; 0xffffffc4
    732c:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7330:	ldrd	r2, [fp, #-12]
    7334:	mov	r0, #0
    7338:	mov	r1, #-16777216	; 0xff000000
    733c:	and	r2, r2, r0
    7340:	and	r3, r3, r1
    7344:	cmp	r3, #2030043136	; 0x79000000
    7348:	cmpeq	r2, #0
    734c:	bne	7438 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f4>
    7350:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7354:	str	r3, [fp, #-16]
    7358:	mov	r3, #1
    735c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7360:	ldr	r1, [fp, #-16]
    7364:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7368:	bl	e20 <flatcc_json_parser_match_symbol>
    736c:	str	r0, [fp, #-60]	; 0xffffffc4
    7370:	ldr	r2, [fp, #-16]
    7374:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7378:	cmp	r2, r3
    737c:	beq	7420 <MyGame_Example_Vec3_parse_json_struct_inline+0x6dc>
    7380:	mov	r3, #0
    7384:	str	r3, [fp, #-48]	; 0xffffffd0
    7388:	ldr	r3, [fp, #-68]	; 0xffffffbc
    738c:	add	r3, r3, #4
    7390:	str	r3, [fp, #-20]	; 0xffffffec
    7394:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7398:	str	r3, [fp, #-16]
    739c:	sub	r3, fp, #48	; 0x30
    73a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    73a4:	ldr	r1, [fp, #-16]
    73a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    73ac:	bl	0 <flatcc_json_parser_float>
    73b0:	str	r0, [fp, #-60]	; 0xffffffc4
    73b4:	ldr	r2, [fp, #-16]
    73b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    73bc:	cmp	r2, r3
    73c0:	bne	740c <MyGame_Example_Vec3_parse_json_struct_inline+0x6c8>
    73c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    73c8:	str	r3, [fp, #-16]
    73cc:	sub	r3, fp, #48	; 0x30
    73d0:	str	r3, [sp]
    73d4:	ldr	r3, [pc, #-748]	; 70f0 <MyGame_Example_Vec3_parse_json_struct_inline+0x3ac>
    73d8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    73dc:	ldr	r1, [fp, #-16]
    73e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    73e4:	bl	2e3c <flatcc_json_parser_symbolic_float>
    73e8:	str	r0, [fp, #-60]	; 0xffffffc4
    73ec:	ldr	r2, [fp, #-60]	; 0xffffffc4
    73f0:	ldr	r3, [fp, #-16]
    73f4:	cmp	r2, r3
    73f8:	beq	7478 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    73fc:	ldr	r2, [fp, #-60]	; 0xffffffc4
    7400:	ldr	r3, [fp, #-64]	; 0xffffffc0
    7404:	cmp	r2, r3
    7408:	beq	7478 <MyGame_Example_Vec3_parse_json_struct_inline+0x734>
    740c:	vldr	s15, [fp, #-48]	; 0xffffffd0
    7410:	vmov.f32	s0, s15
    7414:	ldr	r0, [fp, #-20]	; 0xffffffec
    7418:	bl	348 <flatbuffers_float_write_to_pe>
    741c:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7420:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7424:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7428:	ldr	r0, [fp, #-56]	; 0xffffffc8
    742c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7430:	str	r0, [fp, #-60]	; 0xffffffc4
    7434:	b	744c <MyGame_Example_Vec3_parse_json_struct_inline+0x708>
    7438:	ldr	r2, [fp, #-64]	; 0xffffffc0
    743c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7440:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7444:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7448:	str	r0, [fp, #-60]	; 0xffffffc4
    744c:	sub	r3, fp, #24
    7450:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7454:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7458:	ldr	r0, [fp, #-56]	; 0xffffffc8
    745c:	bl	a68 <flatcc_json_parser_object_end>
    7460:	str	r0, [fp, #-60]	; 0xffffffc4
    7464:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7468:	cmp	r3, #0
    746c:	bne	6d7c <MyGame_Example_Vec3_parse_json_struct_inline+0x38>
    7470:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7474:	b	7490 <MyGame_Example_Vec3_parse_json_struct_inline+0x74c>
    7478:	mov	r3, #33	; 0x21
    747c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    7480:	ldr	r1, [fp, #-60]	; 0xffffffc4
    7484:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7488:	bl	0 <flatcc_json_parser_set_error>
    748c:	mov	r3, r0
    7490:	mov	r0, r3
    7494:	sub	sp, fp, #4
    7498:	pop	{fp, pc}

0000749c <MyGame_Example_Vec3_parse_json_struct>:
    749c:	push	{fp, lr}
    74a0:	add	fp, sp, #4
    74a4:	sub	sp, sp, #24
    74a8:	str	r0, [fp, #-16]
    74ac:	str	r1, [fp, #-20]	; 0xffffffec
    74b0:	str	r2, [fp, #-24]	; 0xffffffe8
    74b4:	str	r3, [fp, #-28]	; 0xffffffe4
    74b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    74bc:	mov	r2, #0
    74c0:	str	r2, [r3]
    74c4:	ldr	r3, [fp, #-16]
    74c8:	ldr	r3, [r3]
    74cc:	mov	r2, #16
    74d0:	mov	r1, #32
    74d4:	mov	r0, r3
    74d8:	bl	0 <flatcc_builder_start_struct>
    74dc:	str	r0, [fp, #-8]
    74e0:	ldr	r3, [fp, #-8]
    74e4:	cmp	r3, #0
    74e8:	beq	7548 <MyGame_Example_Vec3_parse_json_struct+0xac>
    74ec:	ldr	r3, [fp, #-8]
    74f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    74f4:	ldr	r1, [fp, #-20]	; 0xffffffec
    74f8:	ldr	r0, [fp, #-16]
    74fc:	bl	6d44 <MyGame_Example_Vec3_parse_json_struct_inline>
    7500:	str	r0, [fp, #-20]	; 0xffffffec
    7504:	ldr	r2, [fp, #-20]	; 0xffffffec
    7508:	ldr	r3, [fp, #-24]	; 0xffffffe8
    750c:	cmp	r2, r3
    7510:	beq	754c <MyGame_Example_Vec3_parse_json_struct+0xb0>
    7514:	ldr	r3, [fp, #-16]
    7518:	ldr	r3, [r3]
    751c:	mov	r0, r3
    7520:	bl	0 <flatcc_builder_end_struct>
    7524:	mov	r2, r0
    7528:	ldr	r3, [fp, #-28]	; 0xffffffe4
    752c:	str	r2, [r3]
    7530:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7534:	ldr	r3, [r3]
    7538:	cmp	r3, #0
    753c:	beq	754c <MyGame_Example_Vec3_parse_json_struct+0xb0>
    7540:	ldr	r3, [fp, #-20]	; 0xffffffec
    7544:	b	7564 <MyGame_Example_Vec3_parse_json_struct+0xc8>
    7548:	nop			; (mov r0, r0)
    754c:	mov	r3, #33	; 0x21
    7550:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7554:	ldr	r1, [fp, #-20]	; 0xffffffec
    7558:	ldr	r0, [fp, #-16]
    755c:	bl	0 <flatcc_json_parser_set_error>
    7560:	mov	r3, r0
    7564:	mov	r0, r3
    7568:	sub	sp, fp, #4
    756c:	pop	{fp, pc}

00007570 <MyGame_Example_Ability_parse_json_struct_inline>:
    7570:	push	{fp, lr}
    7574:	add	fp, sp, #4
    7578:	sub	sp, sp, #56	; 0x38
    757c:	str	r0, [fp, #-40]	; 0xffffffd8
    7580:	str	r1, [fp, #-44]	; 0xffffffd4
    7584:	str	r2, [fp, #-48]	; 0xffffffd0
    7588:	str	r3, [fp, #-52]	; 0xffffffcc
    758c:	sub	r3, fp, #24
    7590:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7594:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7598:	ldr	r0, [fp, #-40]	; 0xffffffd8
    759c:	bl	980 <flatcc_json_parser_object_start>
    75a0:	str	r0, [fp, #-44]	; 0xffffffd4
    75a4:	b	7804 <MyGame_Example_Ability_parse_json_struct_inline+0x294>
    75a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    75ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
    75b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    75b4:	bl	570 <flatcc_json_parser_symbol_start>
    75b8:	str	r0, [fp, #-44]	; 0xffffffd4
    75bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    75c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    75c4:	bl	854 <flatcc_json_parser_symbol_part>
    75c8:	strd	r0, [fp, #-12]
    75cc:	ldrd	r2, [fp, #-12]
    75d0:	mov	r0, #0
    75d4:	ldr	r1, [pc, #620]	; 7848 <MyGame_Example_Ability_parse_json_struct_inline+0x2d8>
    75d8:	and	r2, r2, r0
    75dc:	and	r3, r3, r1
    75e0:	mov	r0, #0
    75e4:	ldr	r1, [pc, #608]	; 784c <MyGame_Example_Ability_parse_json_struct_inline+0x2dc>
    75e8:	cmp	r3, r1
    75ec:	cmpeq	r2, r0
    75f0:	bne	76d8 <MyGame_Example_Ability_parse_json_struct_inline+0x168>
    75f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    75f8:	str	r3, [fp, #-16]
    75fc:	mov	r3, #2
    7600:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7604:	ldr	r1, [fp, #-16]
    7608:	ldr	r0, [fp, #-40]	; 0xffffffd8
    760c:	bl	e20 <flatcc_json_parser_match_symbol>
    7610:	str	r0, [fp, #-44]	; 0xffffffd4
    7614:	ldr	r2, [fp, #-16]
    7618:	ldr	r3, [fp, #-44]	; 0xffffffd4
    761c:	cmp	r2, r3
    7620:	beq	76c0 <MyGame_Example_Ability_parse_json_struct_inline+0x150>
    7624:	mov	r3, #0
    7628:	str	r3, [fp, #-28]	; 0xffffffe4
    762c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7630:	str	r3, [fp, #-20]	; 0xffffffec
    7634:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7638:	str	r3, [fp, #-16]
    763c:	sub	r3, fp, #28
    7640:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7644:	ldr	r1, [fp, #-16]
    7648:	ldr	r0, [fp, #-40]	; 0xffffffd8
    764c:	bl	1714 <flatcc_json_parser_uint32>
    7650:	str	r0, [fp, #-44]	; 0xffffffd4
    7654:	ldr	r2, [fp, #-16]
    7658:	ldr	r3, [fp, #-44]	; 0xffffffd4
    765c:	cmp	r2, r3
    7660:	bne	76ac <MyGame_Example_Ability_parse_json_struct_inline+0x13c>
    7664:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7668:	str	r3, [fp, #-16]
    766c:	sub	r3, fp, #28
    7670:	str	r3, [sp]
    7674:	ldr	r3, [pc, #468]	; 7850 <MyGame_Example_Ability_parse_json_struct_inline+0x2e0>
    7678:	ldr	r2, [fp, #-48]	; 0xffffffd0
    767c:	ldr	r1, [fp, #-16]
    7680:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7684:	bl	1fa4 <flatcc_json_parser_symbolic_uint32>
    7688:	str	r0, [fp, #-44]	; 0xffffffd4
    768c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    7690:	ldr	r3, [fp, #-16]
    7694:	cmp	r2, r3
    7698:	beq	7818 <MyGame_Example_Ability_parse_json_struct_inline+0x2a8>
    769c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    76a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    76a4:	cmp	r2, r3
    76a8:	beq	7818 <MyGame_Example_Ability_parse_json_struct_inline+0x2a8>
    76ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
    76b0:	mov	r1, r3
    76b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    76b8:	bl	f4 <flatbuffers_uint32_write_to_pe>
    76bc:	b	77ec <MyGame_Example_Ability_parse_json_struct_inline+0x27c>
    76c0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    76c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    76c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    76cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    76d0:	str	r0, [fp, #-44]	; 0xffffffd4
    76d4:	b	77ec <MyGame_Example_Ability_parse_json_struct_inline+0x27c>
    76d8:	ldrd	r2, [fp, #-12]
    76dc:	add	r1, pc, #348	; 0x15c
    76e0:	ldrd	r0, [r1]
    76e4:	cmp	r3, r1
    76e8:	cmpeq	r2, r0
    76ec:	bne	77d8 <MyGame_Example_Ability_parse_json_struct_inline+0x268>
    76f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    76f4:	str	r3, [fp, #-16]
    76f8:	mov	r3, #8
    76fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7700:	ldr	r1, [fp, #-16]
    7704:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7708:	bl	e20 <flatcc_json_parser_match_symbol>
    770c:	str	r0, [fp, #-44]	; 0xffffffd4
    7710:	ldr	r2, [fp, #-16]
    7714:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7718:	cmp	r2, r3
    771c:	beq	77c0 <MyGame_Example_Ability_parse_json_struct_inline+0x250>
    7720:	mov	r3, #0
    7724:	str	r3, [fp, #-32]	; 0xffffffe0
    7728:	ldr	r3, [fp, #-52]	; 0xffffffcc
    772c:	add	r3, r3, #4
    7730:	str	r3, [fp, #-20]	; 0xffffffec
    7734:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7738:	str	r3, [fp, #-16]
    773c:	sub	r3, fp, #32
    7740:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7744:	ldr	r1, [fp, #-16]
    7748:	ldr	r0, [fp, #-40]	; 0xffffffd8
    774c:	bl	1714 <flatcc_json_parser_uint32>
    7750:	str	r0, [fp, #-44]	; 0xffffffd4
    7754:	ldr	r2, [fp, #-16]
    7758:	ldr	r3, [fp, #-44]	; 0xffffffd4
    775c:	cmp	r2, r3
    7760:	bne	77ac <MyGame_Example_Ability_parse_json_struct_inline+0x23c>
    7764:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7768:	str	r3, [fp, #-16]
    776c:	sub	r3, fp, #32
    7770:	str	r3, [sp]
    7774:	ldr	r3, [pc, #216]	; 7854 <MyGame_Example_Ability_parse_json_struct_inline+0x2e4>
    7778:	ldr	r2, [fp, #-48]	; 0xffffffd0
    777c:	ldr	r1, [fp, #-16]
    7780:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7784:	bl	1fa4 <flatcc_json_parser_symbolic_uint32>
    7788:	str	r0, [fp, #-44]	; 0xffffffd4
    778c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    7790:	ldr	r3, [fp, #-16]
    7794:	cmp	r2, r3
    7798:	beq	7818 <MyGame_Example_Ability_parse_json_struct_inline+0x2a8>
    779c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    77a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    77a4:	cmp	r2, r3
    77a8:	beq	7818 <MyGame_Example_Ability_parse_json_struct_inline+0x2a8>
    77ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    77b0:	mov	r1, r3
    77b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    77b8:	bl	f4 <flatbuffers_uint32_write_to_pe>
    77bc:	b	77ec <MyGame_Example_Ability_parse_json_struct_inline+0x27c>
    77c0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    77c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    77c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    77cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    77d0:	str	r0, [fp, #-44]	; 0xffffffd4
    77d4:	b	77ec <MyGame_Example_Ability_parse_json_struct_inline+0x27c>
    77d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    77dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    77e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    77e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    77e8:	str	r0, [fp, #-44]	; 0xffffffd4
    77ec:	sub	r3, fp, #24
    77f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    77f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    77f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    77fc:	bl	a68 <flatcc_json_parser_object_end>
    7800:	str	r0, [fp, #-44]	; 0xffffffd4
    7804:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7808:	cmp	r3, #0
    780c:	bne	75a8 <MyGame_Example_Ability_parse_json_struct_inline+0x38>
    7810:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7814:	b	7830 <MyGame_Example_Ability_parse_json_struct_inline+0x2c0>
    7818:	mov	r3, #33	; 0x21
    781c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7820:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7824:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7828:	bl	0 <flatcc_json_parser_set_error>
    782c:	mov	r3, r0
    7830:	mov	r0, r3
    7834:	sub	sp, fp, #4
    7838:	pop	{fp, pc}
    783c:	nop			; (mov r0, r0)
    7840:	.word	0x616e6365
    7844:	.word	0x64697374
    7848:	.word	0xffff0000
    784c:	.word	0x69640000
    7850:	.word	0x000000e0
    7854:	.word	0x000000ec

00007858 <MyGame_Example_Ability_parse_json_struct>:
    7858:	push	{fp, lr}
    785c:	add	fp, sp, #4
    7860:	sub	sp, sp, #24
    7864:	str	r0, [fp, #-16]
    7868:	str	r1, [fp, #-20]	; 0xffffffec
    786c:	str	r2, [fp, #-24]	; 0xffffffe8
    7870:	str	r3, [fp, #-28]	; 0xffffffe4
    7874:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7878:	mov	r2, #0
    787c:	str	r2, [r3]
    7880:	ldr	r3, [fp, #-16]
    7884:	ldr	r3, [r3]
    7888:	mov	r2, #4
    788c:	mov	r1, #8
    7890:	mov	r0, r3
    7894:	bl	0 <flatcc_builder_start_struct>
    7898:	str	r0, [fp, #-8]
    789c:	ldr	r3, [fp, #-8]
    78a0:	cmp	r3, #0
    78a4:	beq	7904 <MyGame_Example_Ability_parse_json_struct+0xac>
    78a8:	ldr	r3, [fp, #-8]
    78ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    78b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    78b4:	ldr	r0, [fp, #-16]
    78b8:	bl	7570 <MyGame_Example_Ability_parse_json_struct_inline>
    78bc:	str	r0, [fp, #-20]	; 0xffffffec
    78c0:	ldr	r2, [fp, #-20]	; 0xffffffec
    78c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    78c8:	cmp	r2, r3
    78cc:	beq	7908 <MyGame_Example_Ability_parse_json_struct+0xb0>
    78d0:	ldr	r3, [fp, #-16]
    78d4:	ldr	r3, [r3]
    78d8:	mov	r0, r3
    78dc:	bl	0 <flatcc_builder_end_struct>
    78e0:	mov	r2, r0
    78e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    78e8:	str	r2, [r3]
    78ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
    78f0:	ldr	r3, [r3]
    78f4:	cmp	r3, #0
    78f8:	beq	7908 <MyGame_Example_Ability_parse_json_struct+0xb0>
    78fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    7900:	b	7920 <MyGame_Example_Ability_parse_json_struct+0xc8>
    7904:	nop			; (mov r0, r0)
    7908:	mov	r3, #33	; 0x21
    790c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7910:	ldr	r1, [fp, #-20]	; 0xffffffec
    7914:	ldr	r0, [fp, #-16]
    7918:	bl	0 <flatcc_json_parser_set_error>
    791c:	mov	r3, r0
    7920:	mov	r0, r3
    7924:	sub	sp, fp, #4
    7928:	pop	{fp, pc}

0000792c <MyGame_Example_Stat_parse_json_table>:
    792c:	push	{fp, lr}
    7930:	add	fp, sp, #4
    7934:	sub	sp, sp, #64	; 0x40
    7938:	str	r0, [fp, #-48]	; 0xffffffd0
    793c:	str	r1, [fp, #-52]	; 0xffffffcc
    7940:	str	r2, [fp, #-56]	; 0xffffffc8
    7944:	str	r3, [fp, #-60]	; 0xffffffc4
    7948:	ldr	r3, [fp, #-60]	; 0xffffffc4
    794c:	mov	r2, #0
    7950:	str	r2, [r3]
    7954:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7958:	ldr	r3, [r3]
    795c:	mov	r1, #3
    7960:	mov	r0, r3
    7964:	bl	0 <flatcc_builder_start_table>
    7968:	mov	r3, r0
    796c:	cmp	r3, #0
    7970:	bne	7de4 <MyGame_Example_Stat_parse_json_table+0x4b8>
    7974:	sub	r3, fp, #28
    7978:	ldr	r2, [fp, #-56]	; 0xffffffc8
    797c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7980:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7984:	bl	980 <flatcc_json_parser_object_start>
    7988:	str	r0, [fp, #-52]	; 0xffffffcc
    798c:	b	7d70 <MyGame_Example_Stat_parse_json_table+0x444>
    7990:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7994:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7998:	ldr	r0, [fp, #-48]	; 0xffffffd0
    799c:	bl	570 <flatcc_json_parser_symbol_start>
    79a0:	str	r0, [fp, #-52]	; 0xffffffcc
    79a4:	ldr	r1, [fp, #-56]	; 0xffffffc8
    79a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    79ac:	bl	854 <flatcc_json_parser_symbol_part>
    79b0:	strd	r0, [fp, #-12]
    79b4:	ldrd	r2, [fp, #-12]
    79b8:	mvn	r0, #0
    79bc:	ldr	r1, [pc, #1036]	; 7dd0 <MyGame_Example_Stat_parse_json_table+0x4a4>
    79c0:	cmp	r3, r1
    79c4:	cmpeq	r2, r0
    79c8:	bhi	7b30 <MyGame_Example_Stat_parse_json_table+0x204>
    79cc:	ldrd	r2, [fp, #-12]
    79d0:	mov	r0, #-16777216	; 0xff000000
    79d4:	mvn	r1, #0
    79d8:	and	r2, r2, r0
    79dc:	and	r3, r3, r1
    79e0:	add	r1, pc, #984	; 0x3d8
    79e4:	ldrd	r0, [r1]
    79e8:	cmp	r3, r1
    79ec:	cmpeq	r2, r0
    79f0:	bne	7b18 <MyGame_Example_Stat_parse_json_table+0x1ec>
    79f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    79f8:	str	r3, [fp, #-16]
    79fc:	mov	r3, #5
    7a00:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7a04:	ldr	r1, [fp, #-16]
    7a08:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7a0c:	bl	e20 <flatcc_json_parser_match_symbol>
    7a10:	str	r0, [fp, #-52]	; 0xffffffcc
    7a14:	ldr	r2, [fp, #-16]
    7a18:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7a1c:	cmp	r2, r3
    7a20:	beq	7b00 <MyGame_Example_Stat_parse_json_table+0x1d4>
    7a24:	mov	r3, #0
    7a28:	strh	r3, [fp, #-34]	; 0xffffffde
    7a2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7a30:	str	r3, [fp, #-16]
    7a34:	sub	r3, fp, #34	; 0x22
    7a38:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7a3c:	ldr	r1, [fp, #-16]
    7a40:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7a44:	bl	17e4 <flatcc_json_parser_uint16>
    7a48:	str	r0, [fp, #-52]	; 0xffffffcc
    7a4c:	ldr	r2, [fp, #-16]
    7a50:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7a54:	cmp	r2, r3
    7a58:	bne	7aa4 <MyGame_Example_Stat_parse_json_table+0x178>
    7a5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7a60:	str	r3, [fp, #-16]
    7a64:	sub	r3, fp, #34	; 0x22
    7a68:	str	r3, [sp]
    7a6c:	ldr	r3, [pc, #864]	; 7dd4 <MyGame_Example_Stat_parse_json_table+0x4a8>
    7a70:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7a74:	ldr	r1, [fp, #-16]
    7a78:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7a7c:	bl	2170 <flatcc_json_parser_symbolic_uint16>
    7a80:	str	r0, [fp, #-52]	; 0xffffffcc
    7a84:	ldr	r2, [fp, #-52]	; 0xffffffcc
    7a88:	ldr	r3, [fp, #-16]
    7a8c:	cmp	r2, r3
    7a90:	beq	7e08 <MyGame_Example_Stat_parse_json_table+0x4dc>
    7a94:	ldr	r2, [fp, #-52]	; 0xffffffcc
    7a98:	ldr	r3, [fp, #-56]	; 0xffffffc8
    7a9c:	cmp	r2, r3
    7aa0:	beq	7e08 <MyGame_Example_Stat_parse_json_table+0x4dc>
    7aa4:	ldrh	r3, [fp, #-34]	; 0xffffffde
    7aa8:	cmp	r3, #0
    7aac:	bne	7ac4 <MyGame_Example_Stat_parse_json_table+0x198>
    7ab0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7ab4:	ldr	r3, [r3, #8]
    7ab8:	and	r3, r3, #2
    7abc:	cmp	r3, #0
    7ac0:	beq	7d58 <MyGame_Example_Stat_parse_json_table+0x42c>
    7ac4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7ac8:	ldr	r0, [r3]
    7acc:	mov	r3, #2
    7ad0:	mov	r2, #2
    7ad4:	mov	r1, #2
    7ad8:	bl	0 <flatcc_builder_table_add>
    7adc:	str	r0, [fp, #-20]	; 0xffffffec
    7ae0:	ldr	r3, [fp, #-20]	; 0xffffffec
    7ae4:	cmp	r3, #0
    7ae8:	beq	7dec <MyGame_Example_Stat_parse_json_table+0x4c0>
    7aec:	ldrh	r3, [fp, #-34]	; 0xffffffde
    7af0:	mov	r1, r3
    7af4:	ldr	r0, [fp, #-20]	; 0xffffffec
    7af8:	bl	90 <flatbuffers_uint16_write_to_pe>
    7afc:	b	7d58 <MyGame_Example_Stat_parse_json_table+0x42c>
    7b00:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7b04:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7b08:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7b0c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7b10:	str	r0, [fp, #-52]	; 0xffffffcc
    7b14:	b	7d58 <MyGame_Example_Stat_parse_json_table+0x42c>
    7b18:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7b1c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7b20:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7b24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7b28:	str	r0, [fp, #-52]	; 0xffffffcc
    7b2c:	b	7d58 <MyGame_Example_Stat_parse_json_table+0x42c>
    7b30:	ldrd	r2, [fp, #-12]
    7b34:	mov	r0, #0
    7b38:	mvn	r1, #255	; 0xff
    7b3c:	and	r2, r2, r0
    7b40:	and	r3, r3, r1
    7b44:	add	r1, pc, #636	; 0x27c
    7b48:	ldrd	r0, [r1]
    7b4c:	cmp	r3, r1
    7b50:	cmpeq	r2, r0
    7b54:	bne	7c7c <MyGame_Example_Stat_parse_json_table+0x350>
    7b58:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7b5c:	str	r3, [fp, #-16]
    7b60:	mov	r3, #3
    7b64:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7b68:	ldr	r1, [fp, #-16]
    7b6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7b70:	bl	e20 <flatcc_json_parser_match_symbol>
    7b74:	str	r0, [fp, #-52]	; 0xffffffcc
    7b78:	ldr	r2, [fp, #-16]
    7b7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7b80:	cmp	r2, r3
    7b84:	beq	7c64 <MyGame_Example_Stat_parse_json_table+0x338>
    7b88:	mov	r2, #0
    7b8c:	mov	r3, #0
    7b90:	strd	r2, [fp, #-44]	; 0xffffffd4
    7b94:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7b98:	str	r3, [fp, #-16]
    7b9c:	sub	r3, fp, #44	; 0x2c
    7ba0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7ba4:	ldr	r1, [fp, #-16]
    7ba8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7bac:	bl	1984 <flatcc_json_parser_int64>
    7bb0:	str	r0, [fp, #-52]	; 0xffffffcc
    7bb4:	ldr	r2, [fp, #-16]
    7bb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7bbc:	cmp	r2, r3
    7bc0:	bne	7c0c <MyGame_Example_Stat_parse_json_table+0x2e0>
    7bc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7bc8:	str	r3, [fp, #-16]
    7bcc:	sub	r3, fp, #44	; 0x2c
    7bd0:	str	r3, [sp]
    7bd4:	ldr	r3, [pc, #508]	; 7dd8 <MyGame_Example_Stat_parse_json_table+0x4ac>
    7bd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7bdc:	ldr	r1, [fp, #-16]
    7be0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7be4:	bl	2510 <flatcc_json_parser_symbolic_int64>
    7be8:	str	r0, [fp, #-52]	; 0xffffffcc
    7bec:	ldr	r2, [fp, #-52]	; 0xffffffcc
    7bf0:	ldr	r3, [fp, #-16]
    7bf4:	cmp	r2, r3
    7bf8:	beq	7e08 <MyGame_Example_Stat_parse_json_table+0x4dc>
    7bfc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    7c00:	ldr	r3, [fp, #-56]	; 0xffffffc8
    7c04:	cmp	r2, r3
    7c08:	beq	7e08 <MyGame_Example_Stat_parse_json_table+0x4dc>
    7c0c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    7c10:	orrs	r3, r2, r3
    7c14:	bne	7c2c <MyGame_Example_Stat_parse_json_table+0x300>
    7c18:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7c1c:	ldr	r3, [r3, #8]
    7c20:	and	r3, r3, #2
    7c24:	cmp	r3, #0
    7c28:	beq	7d58 <MyGame_Example_Stat_parse_json_table+0x42c>
    7c2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7c30:	ldr	r0, [r3]
    7c34:	mov	r3, #8
    7c38:	mov	r2, #8
    7c3c:	mov	r1, #1
    7c40:	bl	0 <flatcc_builder_table_add>
    7c44:	str	r0, [fp, #-20]	; 0xffffffec
    7c48:	ldr	r3, [fp, #-20]	; 0xffffffec
    7c4c:	cmp	r3, #0
    7c50:	beq	7df4 <MyGame_Example_Stat_parse_json_table+0x4c8>
    7c54:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    7c58:	ldr	r0, [fp, #-20]	; 0xffffffec
    7c5c:	bl	2d8 <flatbuffers_int64_write_to_pe>
    7c60:	b	7d58 <MyGame_Example_Stat_parse_json_table+0x42c>
    7c64:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7c68:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7c6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7c70:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7c74:	str	r0, [fp, #-52]	; 0xffffffcc
    7c78:	b	7d58 <MyGame_Example_Stat_parse_json_table+0x42c>
    7c7c:	ldrd	r2, [fp, #-12]
    7c80:	mov	r0, #0
    7c84:	ldr	r1, [pc, #336]	; 7ddc <MyGame_Example_Stat_parse_json_table+0x4b0>
    7c88:	and	r2, r2, r0
    7c8c:	and	r3, r3, r1
    7c90:	mov	r0, #0
    7c94:	ldr	r1, [pc, #324]	; 7de0 <MyGame_Example_Stat_parse_json_table+0x4b4>
    7c98:	cmp	r3, r1
    7c9c:	cmpeq	r2, r0
    7ca0:	bne	7d44 <MyGame_Example_Stat_parse_json_table+0x418>
    7ca4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7ca8:	str	r3, [fp, #-16]
    7cac:	mov	r3, #2
    7cb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7cb4:	ldr	r1, [fp, #-16]
    7cb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7cbc:	bl	e20 <flatcc_json_parser_match_symbol>
    7cc0:	str	r0, [fp, #-52]	; 0xffffffcc
    7cc4:	ldr	r2, [fp, #-16]
    7cc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7ccc:	cmp	r2, r3
    7cd0:	beq	7d2c <MyGame_Example_Stat_parse_json_table+0x400>
    7cd4:	sub	r3, fp, #32
    7cd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7cdc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7ce0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7ce4:	bl	0 <flatcc_json_parser_build_string>
    7ce8:	str	r0, [fp, #-52]	; 0xffffffcc
    7cec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7cf0:	cmp	r3, #0
    7cf4:	beq	7e08 <MyGame_Example_Stat_parse_json_table+0x4dc>
    7cf8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7cfc:	ldr	r3, [r3]
    7d00:	mov	r1, #0
    7d04:	mov	r0, r3
    7d08:	bl	0 <flatcc_builder_table_add_offset>
    7d0c:	str	r0, [fp, #-24]	; 0xffffffe8
    7d10:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7d14:	cmp	r3, #0
    7d18:	beq	7e08 <MyGame_Example_Stat_parse_json_table+0x4dc>
    7d1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    7d20:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7d24:	str	r2, [r3]
    7d28:	b	7d58 <MyGame_Example_Stat_parse_json_table+0x42c>
    7d2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7d30:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7d34:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7d38:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7d3c:	str	r0, [fp, #-52]	; 0xffffffcc
    7d40:	b	7d58 <MyGame_Example_Stat_parse_json_table+0x42c>
    7d44:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7d48:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7d4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7d50:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7d54:	str	r0, [fp, #-52]	; 0xffffffcc
    7d58:	sub	r3, fp, #28
    7d5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7d60:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7d64:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7d68:	bl	a68 <flatcc_json_parser_object_end>
    7d6c:	str	r0, [fp, #-52]	; 0xffffffcc
    7d70:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7d74:	cmp	r3, #0
    7d78:	bne	7990 <MyGame_Example_Stat_parse_json_table+0x64>
    7d7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7d80:	ldr	r3, [r3, #24]
    7d84:	cmp	r3, #0
    7d88:	bne	7dfc <MyGame_Example_Stat_parse_json_table+0x4d0>
    7d8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7d90:	ldr	r3, [r3]
    7d94:	mov	r0, r3
    7d98:	bl	0 <flatcc_builder_end_table>
    7d9c:	mov	r2, r0
    7da0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7da4:	str	r2, [r3]
    7da8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7dac:	ldr	r3, [r3]
    7db0:	cmp	r3, #0
    7db4:	beq	7e04 <MyGame_Example_Stat_parse_json_table+0x4d8>
    7db8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7dbc:	b	7e20 <MyGame_Example_Stat_parse_json_table+0x4f4>
    7dc0:	.word	0x74000000
    7dc4:	.word	0x636f756e
    7dc8:	.word	0x00000000
    7dcc:	.word	0x76616c00
    7dd0:	.word	0x6963ffff
    7dd4:	.word	0x000000f8
    7dd8:	.word	0x00000104
    7ddc:	.word	0xffff0000
    7de0:	.word	0x69640000
    7de4:	nop			; (mov r0, r0)
    7de8:	b	7e08 <MyGame_Example_Stat_parse_json_table+0x4dc>
    7dec:	nop			; (mov r0, r0)
    7df0:	b	7e08 <MyGame_Example_Stat_parse_json_table+0x4dc>
    7df4:	nop			; (mov r0, r0)
    7df8:	b	7e08 <MyGame_Example_Stat_parse_json_table+0x4dc>
    7dfc:	nop			; (mov r0, r0)
    7e00:	b	7e08 <MyGame_Example_Stat_parse_json_table+0x4dc>
    7e04:	nop			; (mov r0, r0)
    7e08:	mov	r3, #33	; 0x21
    7e0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7e10:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7e14:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7e18:	bl	0 <flatcc_json_parser_set_error>
    7e1c:	mov	r3, r0
    7e20:	mov	r0, r3
    7e24:	sub	sp, fp, #4
    7e28:	pop	{fp, pc}

00007e2c <MyGame_Example_Alt_parse_json_table>:
    7e2c:	push	{fp, lr}
    7e30:	add	fp, sp, #4
    7e34:	sub	sp, sp, #72	; 0x48
    7e38:	str	r0, [fp, #-40]	; 0xffffffd8
    7e3c:	str	r1, [fp, #-44]	; 0xffffffd4
    7e40:	str	r2, [fp, #-48]	; 0xffffffd0
    7e44:	str	r3, [fp, #-52]	; 0xffffffcc
    7e48:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7e4c:	mov	r2, #0
    7e50:	str	r2, [r3]
    7e54:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7e58:	ldr	r3, [r3]
    7e5c:	mov	r1, #4
    7e60:	mov	r0, r3
    7e64:	bl	0 <flatcc_builder_start_table>
    7e68:	mov	r3, r0
    7e6c:	cmp	r3, #0
    7e70:	bne	829c <MyGame_Example_Alt_parse_json_table+0x470>
    7e74:	sub	r3, fp, #32
    7e78:	str	r3, [sp]
    7e7c:	mov	r3, #1
    7e80:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7e84:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7e88:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7e8c:	bl	0 <flatcc_json_parser_prepare_unions>
    7e90:	mov	r2, r0
    7e94:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7e98:	cmp	r2, r3
    7e9c:	beq	82a4 <MyGame_Example_Alt_parse_json_table+0x478>
    7ea0:	sub	r3, fp, #24
    7ea4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7ea8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7eac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7eb0:	bl	980 <flatcc_json_parser_object_start>
    7eb4:	str	r0, [fp, #-44]	; 0xffffffd4
    7eb8:	b	8234 <MyGame_Example_Alt_parse_json_table+0x408>
    7ebc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7ec0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7ec4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7ec8:	bl	570 <flatcc_json_parser_symbol_start>
    7ecc:	str	r0, [fp, #-44]	; 0xffffffd4
    7ed0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    7ed4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    7ed8:	bl	854 <flatcc_json_parser_symbol_part>
    7edc:	strd	r0, [fp, #-12]
    7ee0:	ldrd	r2, [fp, #-12]
    7ee4:	add	r1, pc, #972	; 0x3cc
    7ee8:	ldrd	r0, [r1]
    7eec:	cmp	r3, r1
    7ef0:	cmpeq	r2, r0
    7ef4:	bne	7fe0 <MyGame_Example_Alt_parse_json_table+0x1b4>
    7ef8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7efc:	add	r3, r3, #8
    7f00:	str	r3, [fp, #-44]	; 0xffffffd4
    7f04:	ldr	r1, [fp, #-48]	; 0xffffffd0
    7f08:	ldr	r0, [fp, #-44]	; 0xffffffd4
    7f0c:	bl	854 <flatcc_json_parser_symbol_part>
    7f10:	strd	r0, [fp, #-12]
    7f14:	ldrd	r2, [fp, #-12]
    7f18:	mov	r0, #0
    7f1c:	mvn	r1, #0
    7f20:	and	r2, r2, r0
    7f24:	and	r3, r3, r1
    7f28:	add	r1, pc, #912	; 0x390
    7f2c:	ldrd	r0, [r1]
    7f30:	cmp	r3, r1
    7f34:	cmpeq	r2, r0
    7f38:	bne	7fc8 <MyGame_Example_Alt_parse_json_table+0x19c>
    7f3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7f40:	str	r3, [fp, #-16]
    7f44:	mov	r3, #4
    7f48:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7f4c:	ldr	r1, [fp, #-16]
    7f50:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7f54:	bl	e20 <flatcc_json_parser_match_symbol>
    7f58:	str	r0, [fp, #-44]	; 0xffffffd4
    7f5c:	ldr	r2, [fp, #-16]
    7f60:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7f64:	cmp	r2, r3
    7f68:	beq	7fb0 <MyGame_Example_Alt_parse_json_table+0x184>
    7f6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7f70:	ldr	r2, [pc, #872]	; 82e0 <MyGame_Example_Alt_parse_json_table+0x4b4>
    7f74:	str	r2, [sp, #16]
    7f78:	ldr	r2, [pc, #868]	; 82e4 <MyGame_Example_Alt_parse_json_table+0x4b8>
    7f7c:	str	r2, [sp, #12]
    7f80:	ldr	r2, [pc, #864]	; 82e8 <MyGame_Example_Alt_parse_json_table+0x4bc>
    7f84:	str	r2, [sp, #8]
    7f88:	str	r3, [sp, #4]
    7f8c:	mov	r3, #3
    7f90:	str	r3, [sp]
    7f94:	mov	r3, #0
    7f98:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7f9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7fa0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7fa4:	bl	0 <flatcc_json_parser_union_type_vector>
    7fa8:	str	r0, [fp, #-44]	; 0xffffffd4
    7fac:	b	821c <MyGame_Example_Alt_parse_json_table+0x3f0>
    7fb0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7fb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7fb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7fbc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7fc0:	str	r0, [fp, #-44]	; 0xffffffd4
    7fc4:	b	821c <MyGame_Example_Alt_parse_json_table+0x3f0>
    7fc8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    7fcc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    7fd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7fd4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7fd8:	str	r0, [fp, #-44]	; 0xffffffd4
    7fdc:	b	821c <MyGame_Example_Alt_parse_json_table+0x3f0>
    7fe0:	ldrd	r2, [fp, #-12]
    7fe4:	mvn	r0, #255	; 0xff
    7fe8:	mvn	r1, #0
    7fec:	and	r2, r2, r0
    7ff0:	and	r3, r3, r1
    7ff4:	add	r1, pc, #716	; 0x2cc
    7ff8:	ldrd	r0, [r1]
    7ffc:	cmp	r3, r1
    8000:	cmpeq	r2, r0
    8004:	bne	806c <MyGame_Example_Alt_parse_json_table+0x240>
    8008:	ldr	r3, [fp, #-44]	; 0xffffffd4
    800c:	str	r3, [fp, #-16]
    8010:	mov	r3, #7
    8014:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8018:	ldr	r1, [fp, #-16]
    801c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8020:	bl	e20 <flatcc_json_parser_match_symbol>
    8024:	str	r0, [fp, #-44]	; 0xffffffd4
    8028:	ldr	r2, [fp, #-16]
    802c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8030:	cmp	r2, r3
    8034:	beq	8074 <MyGame_Example_Alt_parse_json_table+0x248>
    8038:	ldr	r3, [fp, #-32]	; 0xffffffe0
    803c:	ldr	r2, [pc, #672]	; 82e4 <MyGame_Example_Alt_parse_json_table+0x4b8>
    8040:	str	r2, [sp, #8]
    8044:	str	r3, [sp, #4]
    8048:	mov	r3, #3
    804c:	str	r3, [sp]
    8050:	mov	r3, #0
    8054:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8058:	ldr	r1, [fp, #-44]	; 0xffffffd4
    805c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8060:	bl	0 <flatcc_json_parser_union_vector>
    8064:	str	r0, [fp, #-44]	; 0xffffffd4
    8068:	b	821c <MyGame_Example_Alt_parse_json_table+0x3f0>
    806c:	nop			; (mov r0, r0)
    8070:	b	8078 <MyGame_Example_Alt_parse_json_table+0x24c>
    8074:	nop			; (mov r0, r0)
    8078:	ldrd	r2, [fp, #-12]
    807c:	ldr	r0, [pc, #616]	; 82ec <MyGame_Example_Alt_parse_json_table+0x4c0>
    8080:	mvn	r1, #0
    8084:	and	r2, r2, r0
    8088:	and	r3, r3, r1
    808c:	add	r1, pc, #572	; 0x23c
    8090:	ldrd	r0, [r1]
    8094:	cmp	r3, r1
    8098:	cmpeq	r2, r0
    809c:	bne	8140 <MyGame_Example_Alt_parse_json_table+0x314>
    80a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    80a4:	str	r3, [fp, #-16]
    80a8:	mov	r3, #6
    80ac:	ldr	r2, [fp, #-48]	; 0xffffffd0
    80b0:	ldr	r1, [fp, #-16]
    80b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    80b8:	bl	e20 <flatcc_json_parser_match_symbol>
    80bc:	str	r0, [fp, #-44]	; 0xffffffd4
    80c0:	ldr	r2, [fp, #-16]
    80c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    80c8:	cmp	r2, r3
    80cc:	beq	8128 <MyGame_Example_Alt_parse_json_table+0x2fc>
    80d0:	sub	r3, fp, #28
    80d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    80d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    80dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    80e0:	bl	8318 <MyGame_Example_TestJSONPrefix_parse_json_table>
    80e4:	str	r0, [fp, #-44]	; 0xffffffd4
    80e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    80ec:	cmp	r3, #0
    80f0:	beq	82f4 <MyGame_Example_Alt_parse_json_table+0x4c8>
    80f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    80f8:	ldr	r3, [r3]
    80fc:	mov	r1, #0
    8100:	mov	r0, r3
    8104:	bl	0 <flatcc_builder_table_add_offset>
    8108:	str	r0, [fp, #-20]	; 0xffffffec
    810c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8110:	cmp	r3, #0
    8114:	beq	82f4 <MyGame_Example_Alt_parse_json_table+0x4c8>
    8118:	ldr	r2, [fp, #-28]	; 0xffffffe4
    811c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8120:	str	r2, [r3]
    8124:	b	821c <MyGame_Example_Alt_parse_json_table+0x3f0>
    8128:	ldr	r2, [fp, #-48]	; 0xffffffd0
    812c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8130:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8134:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8138:	str	r0, [fp, #-44]	; 0xffffffd4
    813c:	b	821c <MyGame_Example_Alt_parse_json_table+0x3f0>
    8140:	ldrd	r2, [fp, #-12]
    8144:	mov	r0, #-16777216	; 0xff000000
    8148:	mvn	r1, #0
    814c:	and	r2, r2, r0
    8150:	and	r3, r3, r1
    8154:	add	r1, pc, #380	; 0x17c
    8158:	ldrd	r0, [r1]
    815c:	cmp	r3, r1
    8160:	cmpeq	r2, r0
    8164:	bne	8208 <MyGame_Example_Alt_parse_json_table+0x3dc>
    8168:	ldr	r3, [fp, #-44]	; 0xffffffd4
    816c:	str	r3, [fp, #-16]
    8170:	mov	r3, #5
    8174:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8178:	ldr	r1, [fp, #-16]
    817c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8180:	bl	e20 <flatcc_json_parser_match_symbol>
    8184:	str	r0, [fp, #-44]	; 0xffffffd4
    8188:	ldr	r2, [fp, #-16]
    818c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8190:	cmp	r2, r3
    8194:	beq	81f0 <MyGame_Example_Alt_parse_json_table+0x3c4>
    8198:	sub	r3, fp, #28
    819c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    81a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    81a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    81a8:	bl	ff98 <Fantasy_Movie_parse_json_table>
    81ac:	str	r0, [fp, #-44]	; 0xffffffd4
    81b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    81b4:	cmp	r3, #0
    81b8:	beq	82f4 <MyGame_Example_Alt_parse_json_table+0x4c8>
    81bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    81c0:	ldr	r3, [r3]
    81c4:	mov	r1, #1
    81c8:	mov	r0, r3
    81cc:	bl	0 <flatcc_builder_table_add_offset>
    81d0:	str	r0, [fp, #-20]	; 0xffffffec
    81d4:	ldr	r3, [fp, #-20]	; 0xffffffec
    81d8:	cmp	r3, #0
    81dc:	beq	82f4 <MyGame_Example_Alt_parse_json_table+0x4c8>
    81e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    81e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    81e8:	str	r2, [r3]
    81ec:	b	821c <MyGame_Example_Alt_parse_json_table+0x3f0>
    81f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    81f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    81f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    81fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8200:	str	r0, [fp, #-44]	; 0xffffffd4
    8204:	b	821c <MyGame_Example_Alt_parse_json_table+0x3f0>
    8208:	ldr	r2, [fp, #-48]	; 0xffffffd0
    820c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8210:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8214:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8218:	str	r0, [fp, #-44]	; 0xffffffd4
    821c:	sub	r3, fp, #24
    8220:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8224:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8228:	ldr	r0, [fp, #-40]	; 0xffffffd8
    822c:	bl	a68 <flatcc_json_parser_object_end>
    8230:	str	r0, [fp, #-44]	; 0xffffffd4
    8234:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8238:	cmp	r3, #0
    823c:	bne	7ebc <MyGame_Example_Alt_parse_json_table+0x90>
    8240:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8244:	ldr	r3, [r3, #24]
    8248:	cmp	r3, #0
    824c:	bne	82ac <MyGame_Example_Alt_parse_json_table+0x480>
    8250:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8254:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8258:	ldr	r1, [fp, #-44]	; 0xffffffd4
    825c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8260:	bl	0 <flatcc_json_parser_finalize_unions>
    8264:	str	r0, [fp, #-44]	; 0xffffffd4
    8268:	ldr	r3, [fp, #-40]	; 0xffffffd8
    826c:	ldr	r3, [r3]
    8270:	mov	r0, r3
    8274:	bl	0 <flatcc_builder_end_table>
    8278:	mov	r2, r0
    827c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8280:	str	r2, [r3]
    8284:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8288:	ldr	r3, [r3]
    828c:	cmp	r3, #0
    8290:	beq	82f0 <MyGame_Example_Alt_parse_json_table+0x4c4>
    8294:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8298:	b	830c <MyGame_Example_Alt_parse_json_table+0x4e0>
    829c:	nop			; (mov r0, r0)
    82a0:	b	82f4 <MyGame_Example_Alt_parse_json_table+0x4c8>
    82a4:	nop			; (mov r0, r0)
    82a8:	b	82f4 <MyGame_Example_Alt_parse_json_table+0x4c8>
    82ac:	nop			; (mov r0, r0)
    82b0:	b	82f4 <MyGame_Example_Alt_parse_json_table+0x4c8>
    82b4:	nop			; (mov r0, r0)
    82b8:	.word	0x616e795f
    82bc:	.word	0x6d616e79
    82c0:	.word	0x00000000
    82c4:	.word	0x74797065
    82c8:	.word	0x616e7900
    82cc:	.word	0x6d616e79
    82d0:	.word	0x69780000
    82d4:	.word	0x70726566
    82d8:	.word	0x65000000
    82dc:	.word	0x6d6f7669
	...
    82e8:	.word	0x00000110
    82ec:	.word	0xffff0000
    82f0:	nop			; (mov r0, r0)
    82f4:	mov	r3, #33	; 0x21
    82f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    82fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8300:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8304:	bl	0 <flatcc_json_parser_set_error>
    8308:	mov	r3, r0
    830c:	mov	r0, r3
    8310:	sub	sp, fp, #4
    8314:	pop	{fp, pc}

00008318 <MyGame_Example_TestJSONPrefix_parse_json_table>:
    8318:	push	{fp, lr}
    831c:	add	fp, sp, #4
    8320:	sub	sp, sp, #40	; 0x28
    8324:	str	r0, [fp, #-32]	; 0xffffffe0
    8328:	str	r1, [fp, #-36]	; 0xffffffdc
    832c:	str	r2, [fp, #-40]	; 0xffffffd8
    8330:	str	r3, [fp, #-44]	; 0xffffffd4
    8334:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8338:	mov	r2, #0
    833c:	str	r2, [r3]
    8340:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8344:	ldr	r3, [r3]
    8348:	mov	r1, #3
    834c:	mov	r0, r3
    8350:	bl	0 <flatcc_builder_start_table>
    8354:	mov	r3, r0
    8358:	cmp	r3, #0
    835c:	bne	86f0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3d8>
    8360:	sub	r3, fp, #24
    8364:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8368:	ldr	r1, [fp, #-36]	; 0xffffffdc
    836c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8370:	bl	980 <flatcc_json_parser_object_start>
    8374:	str	r0, [fp, #-36]	; 0xffffffdc
    8378:	b	86a0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x388>
    837c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8380:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8384:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8388:	bl	570 <flatcc_json_parser_symbol_start>
    838c:	str	r0, [fp, #-36]	; 0xffffffdc
    8390:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8394:	ldr	r0, [fp, #-36]	; 0xffffffdc
    8398:	bl	854 <flatcc_json_parser_symbol_part>
    839c:	strd	r0, [fp, #-12]
    83a0:	ldrd	r2, [fp, #-12]
    83a4:	add	r1, pc, #892	; 0x37c
    83a8:	ldrd	r0, [r1]
    83ac:	cmp	r3, r1
    83b0:	cmpeq	r2, r0
    83b4:	bne	8674 <MyGame_Example_TestJSONPrefix_parse_json_table+0x35c>
    83b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    83bc:	add	r3, r3, #8
    83c0:	str	r3, [fp, #-36]	; 0xffffffdc
    83c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    83c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    83cc:	bl	854 <flatcc_json_parser_symbol_part>
    83d0:	strd	r0, [fp, #-12]
    83d4:	ldrd	r2, [fp, #-12]
    83d8:	add	r1, pc, #848	; 0x350
    83dc:	ldrd	r0, [r1]
    83e0:	cmp	r3, r1
    83e4:	cmpeq	r2, r0
    83e8:	bne	865c <MyGame_Example_TestJSONPrefix_parse_json_table+0x344>
    83ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
    83f0:	add	r3, r3, #8
    83f4:	str	r3, [fp, #-36]	; 0xffffffdc
    83f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    83fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    8400:	bl	854 <flatcc_json_parser_symbol_part>
    8404:	strd	r0, [fp, #-12]
    8408:	ldrd	r2, [fp, #-12]
    840c:	ldr	r0, [pc, #828]	; 8750 <MyGame_Example_TestJSONPrefix_parse_json_table+0x438>
    8410:	mvn	r1, #0
    8414:	and	r2, r2, r0
    8418:	and	r3, r3, r1
    841c:	add	r1, pc, #788	; 0x314
    8420:	ldrd	r0, [r1]
    8424:	cmp	r3, r1
    8428:	cmpeq	r2, r0
    842c:	bne	84b8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1a0>
    8430:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8434:	str	r3, [fp, #-16]
    8438:	mov	r3, #6
    843c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8440:	ldr	r1, [fp, #-16]
    8444:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8448:	bl	e20 <flatcc_json_parser_match_symbol>
    844c:	str	r0, [fp, #-36]	; 0xffffffdc
    8450:	ldr	r2, [fp, #-16]
    8454:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8458:	cmp	r2, r3
    845c:	beq	8568 <MyGame_Example_TestJSONPrefix_parse_json_table+0x250>
    8460:	sub	r3, fp, #28
    8464:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8468:	ldr	r1, [fp, #-36]	; 0xffffffdc
    846c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8470:	bl	9398 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>
    8474:	str	r0, [fp, #-36]	; 0xffffffdc
    8478:	ldr	r3, [fp, #-28]	; 0xffffffe4
    847c:	cmp	r3, #0
    8480:	beq	8704 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    8484:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8488:	ldr	r3, [r3]
    848c:	mov	r1, #1
    8490:	mov	r0, r3
    8494:	bl	0 <flatcc_builder_table_add_offset>
    8498:	str	r0, [fp, #-20]	; 0xffffffec
    849c:	ldr	r3, [fp, #-20]	; 0xffffffec
    84a0:	cmp	r3, #0
    84a4:	beq	8704 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    84a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    84ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    84b0:	str	r2, [r3]
    84b4:	b	8688 <MyGame_Example_TestJSONPrefix_parse_json_table+0x370>
    84b8:	ldrd	r2, [fp, #-12]
    84bc:	mov	r0, #-16777216	; 0xff000000
    84c0:	mvn	r1, #0
    84c4:	and	r2, r2, r0
    84c8:	and	r3, r3, r1
    84cc:	add	r1, pc, #620	; 0x26c
    84d0:	ldrd	r0, [r1]
    84d4:	cmp	r3, r1
    84d8:	cmpeq	r2, r0
    84dc:	bne	8570 <MyGame_Example_TestJSONPrefix_parse_json_table+0x258>
    84e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    84e4:	str	r3, [fp, #-16]
    84e8:	mov	r3, #5
    84ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
    84f0:	ldr	r1, [fp, #-16]
    84f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    84f8:	bl	e20 <flatcc_json_parser_match_symbol>
    84fc:	str	r0, [fp, #-36]	; 0xffffffdc
    8500:	ldr	r2, [fp, #-16]
    8504:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8508:	cmp	r2, r3
    850c:	beq	8578 <MyGame_Example_TestJSONPrefix_parse_json_table+0x260>
    8510:	sub	r3, fp, #28
    8514:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8518:	ldr	r1, [fp, #-36]	; 0xffffffdc
    851c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8520:	bl	8754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>
    8524:	str	r0, [fp, #-36]	; 0xffffffdc
    8528:	ldr	r3, [fp, #-28]	; 0xffffffe4
    852c:	cmp	r3, #0
    8530:	beq	8704 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    8534:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8538:	ldr	r3, [r3]
    853c:	mov	r1, #0
    8540:	mov	r0, r3
    8544:	bl	0 <flatcc_builder_table_add_offset>
    8548:	str	r0, [fp, #-20]	; 0xffffffec
    854c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8550:	cmp	r3, #0
    8554:	beq	8704 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    8558:	ldr	r2, [fp, #-28]	; 0xffffffe4
    855c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8560:	str	r2, [r3]
    8564:	b	8688 <MyGame_Example_TestJSONPrefix_parse_json_table+0x370>
    8568:	nop			; (mov r0, r0)
    856c:	b	857c <MyGame_Example_TestJSONPrefix_parse_json_table+0x264>
    8570:	nop			; (mov r0, r0)
    8574:	b	857c <MyGame_Example_TestJSONPrefix_parse_json_table+0x264>
    8578:	nop			; (mov r0, r0)
    857c:	ldrd	r2, [fp, #-12]
    8580:	ldr	r0, [pc, #456]	; 8750 <MyGame_Example_TestJSONPrefix_parse_json_table+0x438>
    8584:	mvn	r1, #0
    8588:	and	r2, r2, r0
    858c:	and	r3, r3, r1
    8590:	add	r1, pc, #432	; 0x1b0
    8594:	ldrd	r0, [r1]
    8598:	cmp	r3, r1
    859c:	cmpeq	r2, r0
    85a0:	bne	8644 <MyGame_Example_TestJSONPrefix_parse_json_table+0x32c>
    85a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    85a8:	str	r3, [fp, #-16]
    85ac:	mov	r3, #6
    85b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    85b4:	ldr	r1, [fp, #-16]
    85b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    85bc:	bl	e20 <flatcc_json_parser_match_symbol>
    85c0:	str	r0, [fp, #-36]	; 0xffffffdc
    85c4:	ldr	r2, [fp, #-16]
    85c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    85cc:	cmp	r2, r3
    85d0:	beq	862c <MyGame_Example_TestJSONPrefix_parse_json_table+0x314>
    85d4:	sub	r3, fp, #28
    85d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    85dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    85e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    85e4:	bl	97d8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>
    85e8:	str	r0, [fp, #-36]	; 0xffffffdc
    85ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
    85f0:	cmp	r3, #0
    85f4:	beq	8704 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    85f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    85fc:	ldr	r3, [r3]
    8600:	mov	r1, #2
    8604:	mov	r0, r3
    8608:	bl	0 <flatcc_builder_table_add_offset>
    860c:	str	r0, [fp, #-20]	; 0xffffffec
    8610:	ldr	r3, [fp, #-20]	; 0xffffffec
    8614:	cmp	r3, #0
    8618:	beq	8704 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    861c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    8620:	ldr	r3, [fp, #-20]	; 0xffffffec
    8624:	str	r2, [r3]
    8628:	b	8688 <MyGame_Example_TestJSONPrefix_parse_json_table+0x370>
    862c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8630:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8634:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8638:	bl	0 <flatcc_json_parser_unmatched_symbol>
    863c:	str	r0, [fp, #-36]	; 0xffffffdc
    8640:	b	8688 <MyGame_Example_TestJSONPrefix_parse_json_table+0x370>
    8644:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8648:	ldr	r1, [fp, #-36]	; 0xffffffdc
    864c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8650:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8654:	str	r0, [fp, #-36]	; 0xffffffdc
    8658:	b	8688 <MyGame_Example_TestJSONPrefix_parse_json_table+0x370>
    865c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8660:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8664:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8668:	bl	0 <flatcc_json_parser_unmatched_symbol>
    866c:	str	r0, [fp, #-36]	; 0xffffffdc
    8670:	b	8688 <MyGame_Example_TestJSONPrefix_parse_json_table+0x370>
    8674:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8678:	ldr	r1, [fp, #-36]	; 0xffffffdc
    867c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8680:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8684:	str	r0, [fp, #-36]	; 0xffffffdc
    8688:	sub	r3, fp, #24
    868c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8690:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8694:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8698:	bl	a68 <flatcc_json_parser_object_end>
    869c:	str	r0, [fp, #-36]	; 0xffffffdc
    86a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    86a4:	cmp	r3, #0
    86a8:	bne	837c <MyGame_Example_TestJSONPrefix_parse_json_table+0x64>
    86ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    86b0:	ldr	r3, [r3, #24]
    86b4:	cmp	r3, #0
    86b8:	bne	86f8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3e0>
    86bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    86c0:	ldr	r3, [r3]
    86c4:	mov	r0, r3
    86c8:	bl	0 <flatcc_builder_end_table>
    86cc:	mov	r2, r0
    86d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    86d4:	str	r2, [r3]
    86d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    86dc:	ldr	r3, [r3]
    86e0:	cmp	r3, #0
    86e4:	beq	8700 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3e8>
    86e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    86ec:	b	871c <MyGame_Example_TestJSONPrefix_parse_json_table+0x404>
    86f0:	nop			; (mov r0, r0)
    86f4:	b	8704 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    86f8:	nop			; (mov r0, r0)
    86fc:	b	8704 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ec>
    8700:	nop			; (mov r0, r0)
    8704:	mov	r3, #33	; 0x21
    8708:	ldr	r2, [fp, #-40]	; 0xffffffd8
    870c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8710:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8714:	bl	0 <flatcc_json_parser_set_error>
    8718:	mov	r3, r0
    871c:	mov	r0, r3
    8720:	sub	sp, fp, #4
    8724:	pop	{fp, pc}
    8728:	.word	0x6a736f6e
    872c:	.word	0x74657374
    8730:	.word	0x69787061
    8734:	.word	0x70726566
    8738:	.word	0x67320000
    873c:	.word	0x7273696e
    8740:	.word	0x67000000
    8744:	.word	0x7273696e
    8748:	.word	0x67330000
    874c:	.word	0x7273696e
    8750:	.word	0xffff0000

00008754 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>:
    8754:	push	{fp, lr}
    8758:	add	fp, sp, #4
    875c:	sub	sp, sp, #96	; 0x60
    8760:	str	r0, [fp, #-80]	; 0xffffffb0
    8764:	str	r1, [fp, #-84]	; 0xffffffac
    8768:	str	r2, [fp, #-88]	; 0xffffffa8
    876c:	str	r3, [fp, #-92]	; 0xffffffa4
    8770:	ldr	r3, [fp, #-92]	; 0xffffffa4
    8774:	mov	r2, #0
    8778:	str	r2, [r3]
    877c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8780:	ldr	r3, [r3]
    8784:	mov	r1, #9
    8788:	mov	r0, r3
    878c:	bl	0 <flatcc_builder_start_table>
    8790:	mov	r3, r0
    8794:	cmp	r3, #0
    8798:	bne	9314 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbc0>
    879c:	sub	r3, fp, #28
    87a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    87a4:	ldr	r1, [fp, #-84]	; 0xffffffac
    87a8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    87ac:	bl	980 <flatcc_json_parser_object_start>
    87b0:	str	r0, [fp, #-84]	; 0xffffffac
    87b4:	b	92c4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb70>
    87b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
    87bc:	ldr	r1, [fp, #-84]	; 0xffffffac
    87c0:	ldr	r0, [fp, #-80]	; 0xffffffb0
    87c4:	bl	570 <flatcc_json_parser_symbol_start>
    87c8:	str	r0, [fp, #-84]	; 0xffffffac
    87cc:	ldr	r1, [fp, #-88]	; 0xffffffa8
    87d0:	ldr	r0, [fp, #-84]	; 0xffffffac
    87d4:	bl	854 <flatcc_json_parser_symbol_part>
    87d8:	strd	r0, [fp, #-12]
    87dc:	ldrd	r2, [fp, #-12]
    87e0:	add	r1, pc, #920	; 0x398
    87e4:	ldrd	r0, [r1]
    87e8:	cmp	r3, r1
    87ec:	cmpeq	r2, r0
    87f0:	bhi	8c88 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x534>
    87f4:	ldrd	r2, [fp, #-12]
    87f8:	add	r1, pc, #904	; 0x388
    87fc:	ldrd	r0, [r1]
    8800:	cmp	r3, r1
    8804:	cmpeq	r2, r0
    8808:	bne	8984 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x230>
    880c:	ldr	r3, [fp, #-84]	; 0xffffffac
    8810:	add	r3, r3, #8
    8814:	str	r3, [fp, #-84]	; 0xffffffac
    8818:	ldr	r1, [fp, #-88]	; 0xffffffa8
    881c:	ldr	r0, [fp, #-84]	; 0xffffffac
    8820:	bl	854 <flatcc_json_parser_symbol_part>
    8824:	strd	r0, [fp, #-12]
    8828:	ldrd	r2, [fp, #-12]
    882c:	mov	r0, #0
    8830:	mov	r1, #-16777216	; 0xff000000
    8834:	and	r2, r2, r0
    8838:	and	r3, r3, r1
    883c:	cmp	r3, #889192448	; 0x35000000
    8840:	cmpeq	r2, #0
    8844:	bne	896c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x218>
    8848:	ldr	r3, [fp, #-84]	; 0xffffffac
    884c:	str	r3, [fp, #-16]
    8850:	mov	r3, #1
    8854:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8858:	ldr	r1, [fp, #-16]
    885c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8860:	bl	e20 <flatcc_json_parser_match_symbol>
    8864:	str	r0, [fp, #-84]	; 0xffffffac
    8868:	ldr	r2, [fp, #-16]
    886c:	ldr	r3, [fp, #-84]	; 0xffffffac
    8870:	cmp	r2, r3
    8874:	beq	8954 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x200>
    8878:	mov	r3, #0
    887c:	str	r3, [fp, #-36]	; 0xffffffdc
    8880:	ldr	r3, [fp, #-84]	; 0xffffffac
    8884:	str	r3, [fp, #-16]
    8888:	sub	r3, fp, #36	; 0x24
    888c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8890:	ldr	r1, [fp, #-16]
    8894:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8898:	bl	1714 <flatcc_json_parser_uint32>
    889c:	str	r0, [fp, #-84]	; 0xffffffac
    88a0:	ldr	r2, [fp, #-16]
    88a4:	ldr	r3, [fp, #-84]	; 0xffffffac
    88a8:	cmp	r2, r3
    88ac:	bne	88f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1a4>
    88b0:	ldr	r3, [fp, #-84]	; 0xffffffac
    88b4:	str	r3, [fp, #-16]
    88b8:	sub	r3, fp, #36	; 0x24
    88bc:	str	r3, [sp]
    88c0:	ldr	r3, [pc, #728]	; 8ba0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x44c>
    88c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    88c8:	ldr	r1, [fp, #-16]
    88cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    88d0:	bl	1fa4 <flatcc_json_parser_symbolic_uint32>
    88d4:	str	r0, [fp, #-84]	; 0xffffffac
    88d8:	ldr	r2, [fp, #-84]	; 0xffffffac
    88dc:	ldr	r3, [fp, #-16]
    88e0:	cmp	r2, r3
    88e4:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    88e8:	ldr	r2, [fp, #-84]	; 0xffffffac
    88ec:	ldr	r3, [fp, #-88]	; 0xffffffa8
    88f0:	cmp	r2, r3
    88f4:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    88f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    88fc:	cmp	r3, #0
    8900:	bne	8918 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1c4>
    8904:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8908:	ldr	r3, [r3, #8]
    890c:	and	r3, r3, #2
    8910:	cmp	r3, #0
    8914:	beq	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8918:	ldr	r3, [fp, #-80]	; 0xffffffb0
    891c:	ldr	r0, [r3]
    8920:	mov	r3, #4
    8924:	mov	r2, #4
    8928:	mov	r1, #1
    892c:	bl	0 <flatcc_builder_table_add>
    8930:	str	r0, [fp, #-20]	; 0xffffffec
    8934:	ldr	r3, [fp, #-20]	; 0xffffffec
    8938:	cmp	r3, #0
    893c:	beq	931c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbc8>
    8940:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8944:	mov	r1, r3
    8948:	ldr	r0, [fp, #-20]	; 0xffffffec
    894c:	bl	f4 <flatbuffers_uint32_write_to_pe>
    8950:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8954:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8958:	ldr	r1, [fp, #-84]	; 0xffffffac
    895c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8960:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8964:	str	r0, [fp, #-84]	; 0xffffffac
    8968:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    896c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8970:	ldr	r1, [fp, #-84]	; 0xffffffac
    8974:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8978:	bl	0 <flatcc_json_parser_unmatched_symbol>
    897c:	str	r0, [fp, #-84]	; 0xffffffac
    8980:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8984:	ldrd	r2, [fp, #-12]
    8988:	mov	r0, #0
    898c:	mvn	r1, #0
    8990:	and	r2, r2, r0
    8994:	and	r3, r3, r1
    8998:	add	r1, pc, #496	; 0x1f0
    899c:	ldrd	r0, [r1]
    89a0:	cmp	r3, r1
    89a4:	cmpeq	r2, r0
    89a8:	bne	8a34 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2e0>
    89ac:	ldr	r3, [fp, #-84]	; 0xffffffac
    89b0:	str	r3, [fp, #-16]
    89b4:	mov	r3, #4
    89b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
    89bc:	ldr	r1, [fp, #-16]
    89c0:	ldr	r0, [fp, #-80]	; 0xffffffb0
    89c4:	bl	e20 <flatcc_json_parser_match_symbol>
    89c8:	str	r0, [fp, #-84]	; 0xffffffac
    89cc:	ldr	r2, [fp, #-16]
    89d0:	ldr	r3, [fp, #-84]	; 0xffffffac
    89d4:	cmp	r2, r3
    89d8:	beq	8a3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2e8>
    89dc:	sub	r3, fp, #32
    89e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    89e4:	ldr	r1, [fp, #-84]	; 0xffffffac
    89e8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    89ec:	bl	0 <flatcc_json_parser_build_string>
    89f0:	str	r0, [fp, #-84]	; 0xffffffac
    89f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    89f8:	cmp	r3, #0
    89fc:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    8a00:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8a04:	ldr	r3, [r3]
    8a08:	mov	r1, #0
    8a0c:	mov	r0, r3
    8a10:	bl	0 <flatcc_builder_table_add_offset>
    8a14:	str	r0, [fp, #-24]	; 0xffffffe8
    8a18:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8a1c:	cmp	r3, #0
    8a20:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    8a24:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8a28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8a2c:	str	r2, [r3]
    8a30:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8a34:	nop			; (mov r0, r0)
    8a38:	b	8a40 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2ec>
    8a3c:	nop			; (mov r0, r0)
    8a40:	ldrd	r2, [fp, #-12]
    8a44:	add	r1, pc, #332	; 0x14c
    8a48:	ldrd	r0, [r1]
    8a4c:	cmp	r3, r1
    8a50:	cmpeq	r2, r0
    8a54:	bne	8ba8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x454>
    8a58:	ldr	r3, [fp, #-84]	; 0xffffffac
    8a5c:	str	r3, [fp, #-16]
    8a60:	mov	r3, #8
    8a64:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8a68:	ldr	r1, [fp, #-16]
    8a6c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8a70:	bl	e20 <flatcc_json_parser_match_symbol>
    8a74:	str	r0, [fp, #-84]	; 0xffffffac
    8a78:	ldr	r2, [fp, #-16]
    8a7c:	ldr	r3, [fp, #-84]	; 0xffffffac
    8a80:	cmp	r2, r3
    8a84:	beq	8b64 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x410>
    8a88:	mov	r2, #0
    8a8c:	mov	r3, #0
    8a90:	strd	r2, [fp, #-44]	; 0xffffffd4
    8a94:	ldr	r3, [fp, #-84]	; 0xffffffac
    8a98:	str	r3, [fp, #-16]
    8a9c:	sub	r3, fp, #44	; 0x2c
    8aa0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8aa4:	ldr	r1, [fp, #-16]
    8aa8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8aac:	bl	1984 <flatcc_json_parser_int64>
    8ab0:	str	r0, [fp, #-84]	; 0xffffffac
    8ab4:	ldr	r2, [fp, #-16]
    8ab8:	ldr	r3, [fp, #-84]	; 0xffffffac
    8abc:	cmp	r2, r3
    8ac0:	bne	8b0c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3b8>
    8ac4:	ldr	r3, [fp, #-84]	; 0xffffffac
    8ac8:	str	r3, [fp, #-16]
    8acc:	sub	r3, fp, #44	; 0x2c
    8ad0:	str	r3, [sp]
    8ad4:	ldr	r3, [pc, #200]	; 8ba4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x450>
    8ad8:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8adc:	ldr	r1, [fp, #-16]
    8ae0:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8ae4:	bl	2510 <flatcc_json_parser_symbolic_int64>
    8ae8:	str	r0, [fp, #-84]	; 0xffffffac
    8aec:	ldr	r2, [fp, #-84]	; 0xffffffac
    8af0:	ldr	r3, [fp, #-16]
    8af4:	cmp	r2, r3
    8af8:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    8afc:	ldr	r2, [fp, #-84]	; 0xffffffac
    8b00:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8b04:	cmp	r2, r3
    8b08:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    8b0c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    8b10:	orrs	r3, r2, r3
    8b14:	bne	8b2c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3d8>
    8b18:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8b1c:	ldr	r3, [r3, #8]
    8b20:	and	r3, r3, #2
    8b24:	cmp	r3, #0
    8b28:	beq	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8b2c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8b30:	ldr	r0, [r3]
    8b34:	mov	r3, #8
    8b38:	mov	r2, #8
    8b3c:	mov	r1, #3
    8b40:	bl	0 <flatcc_builder_table_add>
    8b44:	str	r0, [fp, #-20]	; 0xffffffec
    8b48:	ldr	r3, [fp, #-20]	; 0xffffffec
    8b4c:	cmp	r3, #0
    8b50:	beq	9324 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbd0>
    8b54:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    8b58:	ldr	r0, [fp, #-20]	; 0xffffffec
    8b5c:	bl	2d8 <flatbuffers_int64_write_to_pe>
    8b60:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8b64:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8b68:	ldr	r1, [fp, #-84]	; 0xffffffac
    8b6c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8b70:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8b74:	str	r0, [fp, #-84]	; 0xffffffac
    8b78:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8b7c:	nop			; (mov r0, r0)
    8b80:	.word	0xffffffff
    8b84:	.word	0x63636362
    8b88:	.word	0x31323334
    8b8c:	.word	0x61616161
    8b90:	.word	0x00000000
    8b94:	.word	0x61616161
    8b98:	.word	0x31323334
    8b9c:	.word	0x62626262
    8ba0:	.word	0x00000120
    8ba4:	.word	0x0000012c
    8ba8:	ldrd	r2, [fp, #-12]
    8bac:	mov	r0, #0
    8bb0:	mvn	r1, #0
    8bb4:	and	r2, r2, r0
    8bb8:	and	r3, r3, r1
    8bbc:	add	r1, pc, #868	; 0x364
    8bc0:	ldrd	r0, [r1]
    8bc4:	cmp	r3, r1
    8bc8:	cmpeq	r2, r0
    8bcc:	bne	8c70 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x51c>
    8bd0:	ldr	r3, [fp, #-84]	; 0xffffffac
    8bd4:	str	r3, [fp, #-16]
    8bd8:	mov	r3, #4
    8bdc:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8be0:	ldr	r1, [fp, #-16]
    8be4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8be8:	bl	e20 <flatcc_json_parser_match_symbol>
    8bec:	str	r0, [fp, #-84]	; 0xffffffac
    8bf0:	ldr	r2, [fp, #-16]
    8bf4:	ldr	r3, [fp, #-84]	; 0xffffffac
    8bf8:	cmp	r2, r3
    8bfc:	beq	8c58 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x504>
    8c00:	sub	r3, fp, #32
    8c04:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8c08:	ldr	r1, [fp, #-84]	; 0xffffffac
    8c0c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8c10:	bl	0 <flatcc_json_parser_build_string>
    8c14:	str	r0, [fp, #-84]	; 0xffffffac
    8c18:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8c1c:	cmp	r3, #0
    8c20:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    8c24:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8c28:	ldr	r3, [r3]
    8c2c:	mov	r1, #2
    8c30:	mov	r0, r3
    8c34:	bl	0 <flatcc_builder_table_add_offset>
    8c38:	str	r0, [fp, #-24]	; 0xffffffe8
    8c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8c40:	cmp	r3, #0
    8c44:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    8c48:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8c4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8c50:	str	r2, [r3]
    8c54:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8c58:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8c5c:	ldr	r1, [fp, #-84]	; 0xffffffac
    8c60:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8c64:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8c68:	str	r0, [fp, #-84]	; 0xffffffac
    8c6c:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8c70:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8c74:	ldr	r1, [fp, #-84]	; 0xffffffac
    8c78:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8c7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8c80:	str	r0, [fp, #-84]	; 0xffffffac
    8c84:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8c88:	ldrd	r2, [fp, #-12]
    8c8c:	add	r1, pc, #668	; 0x29c
    8c90:	ldrd	r0, [r1]
    8c94:	cmp	r3, r1
    8c98:	cmpeq	r2, r0
    8c9c:	bne	8f40 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7ec>
    8ca0:	ldr	r3, [fp, #-84]	; 0xffffffac
    8ca4:	str	r3, [fp, #-16]
    8ca8:	mov	r3, #8
    8cac:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8cb0:	ldr	r1, [fp, #-16]
    8cb4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8cb8:	bl	e20 <flatcc_json_parser_match_symbol>
    8cbc:	str	r0, [fp, #-84]	; 0xffffffac
    8cc0:	ldr	r2, [fp, #-16]
    8cc4:	ldr	r3, [fp, #-84]	; 0xffffffac
    8cc8:	cmp	r2, r3
    8ccc:	beq	8dac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x658>
    8cd0:	mov	r2, #0
    8cd4:	mov	r3, #0
    8cd8:	strd	r2, [fp, #-52]	; 0xffffffcc
    8cdc:	ldr	r3, [fp, #-84]	; 0xffffffac
    8ce0:	str	r3, [fp, #-16]
    8ce4:	sub	r3, fp, #52	; 0x34
    8ce8:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8cec:	ldr	r1, [fp, #-16]
    8cf0:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8cf4:	bl	1984 <flatcc_json_parser_int64>
    8cf8:	str	r0, [fp, #-84]	; 0xffffffac
    8cfc:	ldr	r2, [fp, #-16]
    8d00:	ldr	r3, [fp, #-84]	; 0xffffffac
    8d04:	cmp	r2, r3
    8d08:	bne	8d54 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x600>
    8d0c:	ldr	r3, [fp, #-84]	; 0xffffffac
    8d10:	str	r3, [fp, #-16]
    8d14:	sub	r3, fp, #52	; 0x34
    8d18:	str	r3, [sp]
    8d1c:	ldr	r3, [pc, #532]	; 8f38 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7e4>
    8d20:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8d24:	ldr	r1, [fp, #-16]
    8d28:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8d2c:	bl	2510 <flatcc_json_parser_symbolic_int64>
    8d30:	str	r0, [fp, #-84]	; 0xffffffac
    8d34:	ldr	r2, [fp, #-84]	; 0xffffffac
    8d38:	ldr	r3, [fp, #-16]
    8d3c:	cmp	r2, r3
    8d40:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    8d44:	ldr	r2, [fp, #-84]	; 0xffffffac
    8d48:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8d4c:	cmp	r2, r3
    8d50:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    8d54:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    8d58:	orrs	r3, r2, r3
    8d5c:	bne	8d74 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x620>
    8d60:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8d64:	ldr	r3, [r3, #8]
    8d68:	and	r3, r3, #2
    8d6c:	cmp	r3, #0
    8d70:	beq	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8d74:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8d78:	ldr	r0, [r3]
    8d7c:	mov	r3, #8
    8d80:	mov	r2, #8
    8d84:	mov	r1, #5
    8d88:	bl	0 <flatcc_builder_table_add>
    8d8c:	str	r0, [fp, #-20]	; 0xffffffec
    8d90:	ldr	r3, [fp, #-20]	; 0xffffffec
    8d94:	cmp	r3, #0
    8d98:	beq	9348 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbf4>
    8d9c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    8da0:	ldr	r0, [fp, #-20]	; 0xffffffec
    8da4:	bl	2d8 <flatbuffers_int64_write_to_pe>
    8da8:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8dac:	ldr	r3, [fp, #-84]	; 0xffffffac
    8db0:	add	r3, r3, #8
    8db4:	str	r3, [fp, #-84]	; 0xffffffac
    8db8:	ldr	r1, [fp, #-88]	; 0xffffffa8
    8dbc:	ldr	r0, [fp, #-84]	; 0xffffffac
    8dc0:	bl	854 <flatcc_json_parser_symbol_part>
    8dc4:	strd	r0, [fp, #-12]
    8dc8:	ldrd	r2, [fp, #-12]
    8dcc:	mov	r0, #0
    8dd0:	mov	r1, #-16777216	; 0xff000000
    8dd4:	and	r2, r2, r0
    8dd8:	and	r3, r3, r1
    8ddc:	cmp	r3, #889192448	; 0x35000000
    8de0:	cmpeq	r2, #0
    8de4:	bne	8f0c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7b8>
    8de8:	ldr	r3, [fp, #-84]	; 0xffffffac
    8dec:	str	r3, [fp, #-16]
    8df0:	mov	r3, #1
    8df4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8df8:	ldr	r1, [fp, #-16]
    8dfc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8e00:	bl	e20 <flatcc_json_parser_match_symbol>
    8e04:	str	r0, [fp, #-84]	; 0xffffffac
    8e08:	ldr	r2, [fp, #-16]
    8e0c:	ldr	r3, [fp, #-84]	; 0xffffffac
    8e10:	cmp	r2, r3
    8e14:	beq	8ef4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7a0>
    8e18:	mov	r3, #0
    8e1c:	str	r3, [fp, #-56]	; 0xffffffc8
    8e20:	ldr	r3, [fp, #-84]	; 0xffffffac
    8e24:	str	r3, [fp, #-16]
    8e28:	sub	r3, fp, #56	; 0x38
    8e2c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8e30:	ldr	r1, [fp, #-16]
    8e34:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8e38:	bl	1714 <flatcc_json_parser_uint32>
    8e3c:	str	r0, [fp, #-84]	; 0xffffffac
    8e40:	ldr	r2, [fp, #-16]
    8e44:	ldr	r3, [fp, #-84]	; 0xffffffac
    8e48:	cmp	r2, r3
    8e4c:	bne	8e98 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x744>
    8e50:	ldr	r3, [fp, #-84]	; 0xffffffac
    8e54:	str	r3, [fp, #-16]
    8e58:	sub	r3, fp, #56	; 0x38
    8e5c:	str	r3, [sp]
    8e60:	ldr	r3, [pc, #212]	; 8f3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7e8>
    8e64:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8e68:	ldr	r1, [fp, #-16]
    8e6c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8e70:	bl	1fa4 <flatcc_json_parser_symbolic_uint32>
    8e74:	str	r0, [fp, #-84]	; 0xffffffac
    8e78:	ldr	r2, [fp, #-84]	; 0xffffffac
    8e7c:	ldr	r3, [fp, #-16]
    8e80:	cmp	r2, r3
    8e84:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    8e88:	ldr	r2, [fp, #-84]	; 0xffffffac
    8e8c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8e90:	cmp	r2, r3
    8e94:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    8e98:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8e9c:	cmp	r3, #0
    8ea0:	bne	8eb8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x764>
    8ea4:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8ea8:	ldr	r3, [r3, #8]
    8eac:	and	r3, r3, #2
    8eb0:	cmp	r3, #0
    8eb4:	beq	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8eb8:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8ebc:	ldr	r0, [r3]
    8ec0:	mov	r3, #4
    8ec4:	mov	r2, #4
    8ec8:	mov	r1, #6
    8ecc:	bl	0 <flatcc_builder_table_add>
    8ed0:	str	r0, [fp, #-20]	; 0xffffffec
    8ed4:	ldr	r3, [fp, #-20]	; 0xffffffec
    8ed8:	cmp	r3, #0
    8edc:	beq	9350 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    8ee0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8ee4:	mov	r1, r3
    8ee8:	ldr	r0, [fp, #-20]	; 0xffffffec
    8eec:	bl	f4 <flatbuffers_uint32_write_to_pe>
    8ef0:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8ef4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8ef8:	ldr	r1, [fp, #-84]	; 0xffffffac
    8efc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8f00:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8f04:	str	r0, [fp, #-84]	; 0xffffffac
    8f08:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8f0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8f10:	ldr	r1, [fp, #-84]	; 0xffffffac
    8f14:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8f18:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8f1c:	str	r0, [fp, #-84]	; 0xffffffac
    8f20:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8f24:	nop			; (mov r0, r0)
    8f28:	.word	0x00000000
    8f2c:	.word	0x62626262
    8f30:	.word	0x31323334
    8f34:	.word	0x63636363
    8f38:	.word	0x00000138
    8f3c:	.word	0x00000144
    8f40:	ldrd	r2, [fp, #-12]
    8f44:	mov	r0, #0
    8f48:	mvn	r1, #0
    8f4c:	and	r2, r2, r0
    8f50:	and	r3, r3, r1
    8f54:	add	r1, pc, #980	; 0x3d4
    8f58:	ldrd	r0, [r1]
    8f5c:	cmp	r3, r1
    8f60:	cmpeq	r2, r0
    8f64:	bne	8ff0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x89c>
    8f68:	ldr	r3, [fp, #-84]	; 0xffffffac
    8f6c:	str	r3, [fp, #-16]
    8f70:	mov	r3, #4
    8f74:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8f78:	ldr	r1, [fp, #-16]
    8f7c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8f80:	bl	e20 <flatcc_json_parser_match_symbol>
    8f84:	str	r0, [fp, #-84]	; 0xffffffac
    8f88:	ldr	r2, [fp, #-16]
    8f8c:	ldr	r3, [fp, #-84]	; 0xffffffac
    8f90:	cmp	r2, r3
    8f94:	beq	8ff8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8a4>
    8f98:	sub	r3, fp, #32
    8f9c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8fa0:	ldr	r1, [fp, #-84]	; 0xffffffac
    8fa4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8fa8:	bl	0 <flatcc_json_parser_build_string>
    8fac:	str	r0, [fp, #-84]	; 0xffffffac
    8fb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8fb4:	cmp	r3, #0
    8fb8:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    8fbc:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8fc0:	ldr	r3, [r3]
    8fc4:	mov	r1, #4
    8fc8:	mov	r0, r3
    8fcc:	bl	0 <flatcc_builder_table_add_offset>
    8fd0:	str	r0, [fp, #-24]	; 0xffffffe8
    8fd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8fd8:	cmp	r3, #0
    8fdc:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    8fe0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8fe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8fe8:	str	r2, [r3]
    8fec:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    8ff0:	nop			; (mov r0, r0)
    8ff4:	b	8ffc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8a8>
    8ff8:	nop			; (mov r0, r0)
    8ffc:	ldrd	r2, [fp, #-12]
    9000:	add	r1, pc, #816	; 0x330
    9004:	ldrd	r0, [r1]
    9008:	cmp	r3, r1
    900c:	cmpeq	r2, r0
    9010:	bne	9298 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb44>
    9014:	ldr	r3, [fp, #-84]	; 0xffffffac
    9018:	str	r3, [fp, #-16]
    901c:	mov	r3, #8
    9020:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9024:	ldr	r1, [fp, #-16]
    9028:	ldr	r0, [fp, #-80]	; 0xffffffb0
    902c:	bl	e20 <flatcc_json_parser_match_symbol>
    9030:	str	r0, [fp, #-84]	; 0xffffffac
    9034:	ldr	r2, [fp, #-16]
    9038:	ldr	r3, [fp, #-84]	; 0xffffffac
    903c:	cmp	r2, r3
    9040:	beq	9120 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9cc>
    9044:	mov	r2, #0
    9048:	mov	r3, #0
    904c:	strd	r2, [fp, #-68]	; 0xffffffbc
    9050:	ldr	r3, [fp, #-84]	; 0xffffffac
    9054:	str	r3, [fp, #-16]
    9058:	sub	r3, fp, #68	; 0x44
    905c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9060:	ldr	r1, [fp, #-16]
    9064:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9068:	bl	1984 <flatcc_json_parser_int64>
    906c:	str	r0, [fp, #-84]	; 0xffffffac
    9070:	ldr	r2, [fp, #-16]
    9074:	ldr	r3, [fp, #-84]	; 0xffffffac
    9078:	cmp	r2, r3
    907c:	bne	90c8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x974>
    9080:	ldr	r3, [fp, #-84]	; 0xffffffac
    9084:	str	r3, [fp, #-16]
    9088:	sub	r3, fp, #68	; 0x44
    908c:	str	r3, [sp]
    9090:	ldr	r3, [pc, #680]	; 9340 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbec>
    9094:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9098:	ldr	r1, [fp, #-16]
    909c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    90a0:	bl	2510 <flatcc_json_parser_symbolic_int64>
    90a4:	str	r0, [fp, #-84]	; 0xffffffac
    90a8:	ldr	r2, [fp, #-84]	; 0xffffffac
    90ac:	ldr	r3, [fp, #-16]
    90b0:	cmp	r2, r3
    90b4:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    90b8:	ldr	r2, [fp, #-84]	; 0xffffffac
    90bc:	ldr	r3, [fp, #-88]	; 0xffffffa8
    90c0:	cmp	r2, r3
    90c4:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    90c8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    90cc:	orrs	r3, r2, r3
    90d0:	bne	90e8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x994>
    90d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
    90d8:	ldr	r3, [r3, #8]
    90dc:	and	r3, r3, #2
    90e0:	cmp	r3, #0
    90e4:	beq	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    90e8:	ldr	r3, [fp, #-80]	; 0xffffffb0
    90ec:	ldr	r0, [r3]
    90f0:	mov	r3, #8
    90f4:	mov	r2, #8
    90f8:	mov	r1, #7
    90fc:	bl	0 <flatcc_builder_table_add>
    9100:	str	r0, [fp, #-20]	; 0xffffffec
    9104:	ldr	r3, [fp, #-20]	; 0xffffffec
    9108:	cmp	r3, #0
    910c:	beq	9358 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc04>
    9110:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    9114:	ldr	r0, [fp, #-20]	; 0xffffffec
    9118:	bl	2d8 <flatbuffers_int64_write_to_pe>
    911c:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    9120:	ldr	r3, [fp, #-84]	; 0xffffffac
    9124:	add	r3, r3, #8
    9128:	str	r3, [fp, #-84]	; 0xffffffac
    912c:	ldr	r1, [fp, #-88]	; 0xffffffa8
    9130:	ldr	r0, [fp, #-84]	; 0xffffffac
    9134:	bl	854 <flatcc_json_parser_symbol_part>
    9138:	strd	r0, [fp, #-12]
    913c:	ldrd	r2, [fp, #-12]
    9140:	mov	r0, #0
    9144:	mov	r1, #-16777216	; 0xff000000
    9148:	and	r2, r2, r0
    914c:	and	r3, r3, r1
    9150:	cmp	r3, #889192448	; 0x35000000
    9154:	cmpeq	r2, #0
    9158:	bne	9280 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb2c>
    915c:	ldr	r3, [fp, #-84]	; 0xffffffac
    9160:	str	r3, [fp, #-16]
    9164:	mov	r3, #1
    9168:	ldr	r2, [fp, #-88]	; 0xffffffa8
    916c:	ldr	r1, [fp, #-16]
    9170:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9174:	bl	e20 <flatcc_json_parser_match_symbol>
    9178:	str	r0, [fp, #-84]	; 0xffffffac
    917c:	ldr	r2, [fp, #-16]
    9180:	ldr	r3, [fp, #-84]	; 0xffffffac
    9184:	cmp	r2, r3
    9188:	beq	9268 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb14>
    918c:	mov	r3, #0
    9190:	str	r3, [fp, #-72]	; 0xffffffb8
    9194:	ldr	r3, [fp, #-84]	; 0xffffffac
    9198:	str	r3, [fp, #-16]
    919c:	sub	r3, fp, #72	; 0x48
    91a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    91a4:	ldr	r1, [fp, #-16]
    91a8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    91ac:	bl	1714 <flatcc_json_parser_uint32>
    91b0:	str	r0, [fp, #-84]	; 0xffffffac
    91b4:	ldr	r2, [fp, #-16]
    91b8:	ldr	r3, [fp, #-84]	; 0xffffffac
    91bc:	cmp	r2, r3
    91c0:	bne	920c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xab8>
    91c4:	ldr	r3, [fp, #-84]	; 0xffffffac
    91c8:	str	r3, [fp, #-16]
    91cc:	sub	r3, fp, #72	; 0x48
    91d0:	str	r3, [sp]
    91d4:	ldr	r3, [pc, #360]	; 9344 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbf0>
    91d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
    91dc:	ldr	r1, [fp, #-16]
    91e0:	ldr	r0, [fp, #-80]	; 0xffffffb0
    91e4:	bl	1fa4 <flatcc_json_parser_symbolic_uint32>
    91e8:	str	r0, [fp, #-84]	; 0xffffffac
    91ec:	ldr	r2, [fp, #-84]	; 0xffffffac
    91f0:	ldr	r3, [fp, #-16]
    91f4:	cmp	r2, r3
    91f8:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    91fc:	ldr	r2, [fp, #-84]	; 0xffffffac
    9200:	ldr	r3, [fp, #-88]	; 0xffffffa8
    9204:	cmp	r2, r3
    9208:	beq	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    920c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    9210:	cmp	r3, #0
    9214:	bne	922c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad8>
    9218:	ldr	r3, [fp, #-80]	; 0xffffffb0
    921c:	ldr	r3, [r3, #8]
    9220:	and	r3, r3, #2
    9224:	cmp	r3, #0
    9228:	beq	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    922c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9230:	ldr	r0, [r3]
    9234:	mov	r3, #4
    9238:	mov	r2, #4
    923c:	mov	r1, #8
    9240:	bl	0 <flatcc_builder_table_add>
    9244:	str	r0, [fp, #-20]	; 0xffffffec
    9248:	ldr	r3, [fp, #-20]	; 0xffffffec
    924c:	cmp	r3, #0
    9250:	beq	9360 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc0c>
    9254:	ldr	r3, [fp, #-72]	; 0xffffffb8
    9258:	mov	r1, r3
    925c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9260:	bl	f4 <flatbuffers_uint32_write_to_pe>
    9264:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    9268:	ldr	r2, [fp, #-88]	; 0xffffffa8
    926c:	ldr	r1, [fp, #-84]	; 0xffffffac
    9270:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9274:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9278:	str	r0, [fp, #-84]	; 0xffffffac
    927c:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    9280:	ldr	r2, [fp, #-88]	; 0xffffffa8
    9284:	ldr	r1, [fp, #-84]	; 0xffffffac
    9288:	ldr	r0, [fp, #-80]	; 0xffffffb0
    928c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9290:	str	r0, [fp, #-84]	; 0xffffffac
    9294:	b	92ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb58>
    9298:	ldr	r2, [fp, #-88]	; 0xffffffa8
    929c:	ldr	r1, [fp, #-84]	; 0xffffffac
    92a0:	ldr	r0, [fp, #-80]	; 0xffffffb0
    92a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    92a8:	str	r0, [fp, #-84]	; 0xffffffac
    92ac:	sub	r3, fp, #28
    92b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    92b4:	ldr	r1, [fp, #-84]	; 0xffffffac
    92b8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    92bc:	bl	a68 <flatcc_json_parser_object_end>
    92c0:	str	r0, [fp, #-84]	; 0xffffffac
    92c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    92c8:	cmp	r3, #0
    92cc:	bne	87b8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x64>
    92d0:	ldr	r3, [fp, #-80]	; 0xffffffb0
    92d4:	ldr	r3, [r3, #24]
    92d8:	cmp	r3, #0
    92dc:	bne	9368 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc14>
    92e0:	ldr	r3, [fp, #-80]	; 0xffffffb0
    92e4:	ldr	r3, [r3]
    92e8:	mov	r0, r3
    92ec:	bl	0 <flatcc_builder_end_table>
    92f0:	mov	r2, r0
    92f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
    92f8:	str	r2, [r3]
    92fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
    9300:	ldr	r3, [r3]
    9304:	cmp	r3, #0
    9308:	beq	9370 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc1c>
    930c:	ldr	r3, [fp, #-84]	; 0xffffffac
    9310:	b	938c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc38>
    9314:	nop			; (mov r0, r0)
    9318:	b	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    931c:	nop			; (mov r0, r0)
    9320:	b	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9324:	nop			; (mov r0, r0)
    9328:	b	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    932c:	nop			; (mov r0, r0)
    9330:	.word	0x00000000
    9334:	.word	0x63636363
    9338:	.word	0x31323334
    933c:	.word	0x64646464
    9340:	.word	0x00000150
    9344:	.word	0x0000015c
    9348:	nop			; (mov r0, r0)
    934c:	b	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9350:	nop			; (mov r0, r0)
    9354:	b	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9358:	nop			; (mov r0, r0)
    935c:	b	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9360:	nop			; (mov r0, r0)
    9364:	b	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9368:	nop			; (mov r0, r0)
    936c:	b	9374 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc20>
    9370:	nop			; (mov r0, r0)
    9374:	mov	r3, #33	; 0x21
    9378:	ldr	r2, [fp, #-88]	; 0xffffffa8
    937c:	ldr	r1, [fp, #-84]	; 0xffffffac
    9380:	ldr	r0, [fp, #-80]	; 0xffffffb0
    9384:	bl	0 <flatcc_json_parser_set_error>
    9388:	mov	r3, r0
    938c:	mov	r0, r3
    9390:	sub	sp, fp, #4
    9394:	pop	{fp, pc}

00009398 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>:
    9398:	push	{fp, lr}
    939c:	add	fp, sp, #4
    93a0:	sub	sp, sp, #64	; 0x40
    93a4:	str	r0, [fp, #-48]	; 0xffffffd0
    93a8:	str	r1, [fp, #-52]	; 0xffffffcc
    93ac:	str	r2, [fp, #-56]	; 0xffffffc8
    93b0:	str	r3, [fp, #-60]	; 0xffffffc4
    93b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    93b8:	mov	r2, #0
    93bc:	str	r2, [r3]
    93c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    93c4:	ldr	r3, [r3]
    93c8:	mov	r1, #2
    93cc:	mov	r0, r3
    93d0:	bl	0 <flatcc_builder_start_table>
    93d4:	mov	r3, r0
    93d8:	cmp	r3, #0
    93dc:	bne	9770 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3d8>
    93e0:	sub	r3, fp, #24
    93e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    93e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    93ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    93f0:	bl	980 <flatcc_json_parser_object_start>
    93f4:	str	r0, [fp, #-52]	; 0xffffffcc
    93f8:	b	9720 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x388>
    93fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9400:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9404:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9408:	bl	570 <flatcc_json_parser_symbol_start>
    940c:	str	r0, [fp, #-52]	; 0xffffffcc
    9410:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9414:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9418:	bl	854 <flatcc_json_parser_symbol_part>
    941c:	strd	r0, [fp, #-12]
    9420:	ldrd	r2, [fp, #-12]
    9424:	add	r1, pc, #908	; 0x38c
    9428:	ldrd	r0, [r1]
    942c:	cmp	r3, r1
    9430:	cmpeq	r2, r0
    9434:	bne	96f4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x35c>
    9438:	ldr	r3, [fp, #-52]	; 0xffffffcc
    943c:	add	r3, r3, #8
    9440:	str	r3, [fp, #-52]	; 0xffffffcc
    9444:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9448:	ldr	r0, [fp, #-52]	; 0xffffffcc
    944c:	bl	854 <flatcc_json_parser_symbol_part>
    9450:	strd	r0, [fp, #-12]
    9454:	ldrd	r2, [fp, #-12]
    9458:	mvn	r0, #255	; 0xff
    945c:	mvn	r1, #0
    9460:	and	r2, r2, r0
    9464:	and	r3, r3, r1
    9468:	add	r1, pc, #848	; 0x350
    946c:	ldrd	r0, [r1]
    9470:	cmp	r3, r1
    9474:	cmpeq	r2, r0
    9478:	bne	95a0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x208>
    947c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9480:	str	r3, [fp, #-16]
    9484:	mov	r3, #7
    9488:	ldr	r2, [fp, #-56]	; 0xffffffc8
    948c:	ldr	r1, [fp, #-16]
    9490:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9494:	bl	e20 <flatcc_json_parser_match_symbol>
    9498:	str	r0, [fp, #-52]	; 0xffffffcc
    949c:	ldr	r2, [fp, #-16]
    94a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    94a4:	cmp	r2, r3
    94a8:	beq	9588 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1f0>
    94ac:	mov	r2, #0
    94b0:	mov	r3, #0
    94b4:	strd	r2, [fp, #-36]	; 0xffffffdc
    94b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    94bc:	str	r3, [fp, #-16]
    94c0:	sub	r3, fp, #36	; 0x24
    94c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    94c8:	ldr	r1, [fp, #-16]
    94cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    94d0:	bl	1984 <flatcc_json_parser_int64>
    94d4:	str	r0, [fp, #-52]	; 0xffffffcc
    94d8:	ldr	r2, [fp, #-16]
    94dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    94e0:	cmp	r2, r3
    94e4:	bne	9530 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x198>
    94e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    94ec:	str	r3, [fp, #-16]
    94f0:	sub	r3, fp, #36	; 0x24
    94f4:	str	r3, [sp]
    94f8:	ldr	r3, [pc, #720]	; 97d0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    94fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9500:	ldr	r1, [fp, #-16]
    9504:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9508:	bl	2510 <flatcc_json_parser_symbolic_int64>
    950c:	str	r0, [fp, #-52]	; 0xffffffcc
    9510:	ldr	r2, [fp, #-52]	; 0xffffffcc
    9514:	ldr	r3, [fp, #-16]
    9518:	cmp	r2, r3
    951c:	beq	9794 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9520:	ldr	r2, [fp, #-52]	; 0xffffffcc
    9524:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9528:	cmp	r2, r3
    952c:	beq	9794 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9530:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    9534:	orrs	r3, r2, r3
    9538:	bne	9550 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1b8>
    953c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9540:	ldr	r3, [r3, #8]
    9544:	and	r3, r3, #2
    9548:	cmp	r3, #0
    954c:	beq	9708 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    9550:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9554:	ldr	r0, [r3]
    9558:	mov	r3, #8
    955c:	mov	r2, #8
    9560:	mov	r1, #0
    9564:	bl	0 <flatcc_builder_table_add>
    9568:	str	r0, [fp, #-20]	; 0xffffffec
    956c:	ldr	r3, [fp, #-20]	; 0xffffffec
    9570:	cmp	r3, #0
    9574:	beq	9778 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3e0>
    9578:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    957c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9580:	bl	2d8 <flatbuffers_int64_write_to_pe>
    9584:	b	9708 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    9588:	ldr	r2, [fp, #-56]	; 0xffffffc8
    958c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9590:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9594:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9598:	str	r0, [fp, #-52]	; 0xffffffcc
    959c:	b	9708 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    95a0:	ldrd	r2, [fp, #-12]
    95a4:	add	r1, pc, #540	; 0x21c
    95a8:	ldrd	r0, [r1]
    95ac:	cmp	r3, r1
    95b0:	cmpeq	r2, r0
    95b4:	bne	96dc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x344>
    95b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    95bc:	str	r3, [fp, #-16]
    95c0:	mov	r3, #8
    95c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    95c8:	ldr	r1, [fp, #-16]
    95cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    95d0:	bl	e20 <flatcc_json_parser_match_symbol>
    95d4:	str	r0, [fp, #-52]	; 0xffffffcc
    95d8:	ldr	r2, [fp, #-16]
    95dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    95e0:	cmp	r2, r3
    95e4:	beq	96c4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x32c>
    95e8:	mov	r3, #0
    95ec:	str	r3, [fp, #-40]	; 0xffffffd8
    95f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    95f4:	str	r3, [fp, #-16]
    95f8:	sub	r3, fp, #40	; 0x28
    95fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9600:	ldr	r1, [fp, #-16]
    9604:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9608:	bl	1714 <flatcc_json_parser_uint32>
    960c:	str	r0, [fp, #-52]	; 0xffffffcc
    9610:	ldr	r2, [fp, #-16]
    9614:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9618:	cmp	r2, r3
    961c:	bne	9668 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x2d0>
    9620:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9624:	str	r3, [fp, #-16]
    9628:	sub	r3, fp, #40	; 0x28
    962c:	str	r3, [sp]
    9630:	ldr	r3, [pc, #412]	; 97d4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x43c>
    9634:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9638:	ldr	r1, [fp, #-16]
    963c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9640:	bl	1fa4 <flatcc_json_parser_symbolic_uint32>
    9644:	str	r0, [fp, #-52]	; 0xffffffcc
    9648:	ldr	r2, [fp, #-52]	; 0xffffffcc
    964c:	ldr	r3, [fp, #-16]
    9650:	cmp	r2, r3
    9654:	beq	9794 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9658:	ldr	r2, [fp, #-52]	; 0xffffffcc
    965c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9660:	cmp	r2, r3
    9664:	beq	9794 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9668:	ldr	r3, [fp, #-40]	; 0xffffffd8
    966c:	cmp	r3, #0
    9670:	bne	9688 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x2f0>
    9674:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9678:	ldr	r3, [r3, #8]
    967c:	and	r3, r3, #2
    9680:	cmp	r3, #0
    9684:	beq	9708 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    9688:	ldr	r3, [fp, #-48]	; 0xffffffd0
    968c:	ldr	r0, [r3]
    9690:	mov	r3, #4
    9694:	mov	r2, #4
    9698:	mov	r1, #1
    969c:	bl	0 <flatcc_builder_table_add>
    96a0:	str	r0, [fp, #-20]	; 0xffffffec
    96a4:	ldr	r3, [fp, #-20]	; 0xffffffec
    96a8:	cmp	r3, #0
    96ac:	beq	9780 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3e8>
    96b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    96b4:	mov	r1, r3
    96b8:	ldr	r0, [fp, #-20]	; 0xffffffec
    96bc:	bl	f4 <flatbuffers_uint32_write_to_pe>
    96c0:	b	9708 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    96c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    96c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    96cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    96d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    96d4:	str	r0, [fp, #-52]	; 0xffffffcc
    96d8:	b	9708 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    96dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    96e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    96e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    96e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    96ec:	str	r0, [fp, #-52]	; 0xffffffcc
    96f0:	b	9708 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x370>
    96f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    96f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    96fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9700:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9704:	str	r0, [fp, #-52]	; 0xffffffcc
    9708:	sub	r3, fp, #24
    970c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9710:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9714:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9718:	bl	a68 <flatcc_json_parser_object_end>
    971c:	str	r0, [fp, #-52]	; 0xffffffcc
    9720:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9724:	cmp	r3, #0
    9728:	bne	93fc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x64>
    972c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9730:	ldr	r3, [r3, #24]
    9734:	cmp	r3, #0
    9738:	bne	9788 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3f0>
    973c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9740:	ldr	r3, [r3]
    9744:	mov	r0, r3
    9748:	bl	0 <flatcc_builder_end_table>
    974c:	mov	r2, r0
    9750:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9754:	str	r2, [r3]
    9758:	ldr	r3, [fp, #-60]	; 0xffffffc4
    975c:	ldr	r3, [r3]
    9760:	cmp	r3, #0
    9764:	beq	9790 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3f8>
    9768:	ldr	r3, [fp, #-52]	; 0xffffffcc
    976c:	b	97ac <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x414>
    9770:	nop			; (mov r0, r0)
    9774:	b	9794 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9778:	nop			; (mov r0, r0)
    977c:	b	9794 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9780:	nop			; (mov r0, r0)
    9784:	b	9794 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9788:	nop			; (mov r0, r0)
    978c:	b	9794 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3fc>
    9790:	nop			; (mov r0, r0)
    9794:	mov	r3, #33	; 0x21
    9798:	ldr	r2, [fp, #-56]	; 0xffffffc8
    979c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    97a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    97a4:	bl	0 <flatcc_json_parser_set_error>
    97a8:	mov	r3, r0
    97ac:	mov	r0, r3
    97b0:	sub	sp, fp, #4
    97b4:	pop	{fp, pc}
    97b8:	.word	0x5f626262
    97bc:	.word	0x61616161
    97c0:	.word	0x65707300
    97c4:	.word	0x625f7374
    97c8:	.word	0x6172745f
    97cc:	.word	0x625f7374
    97d0:	.word	0x00000168
    97d4:	.word	0x00000174

000097d8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>:
    97d8:	push	{fp, lr}
    97dc:	add	fp, sp, #4
    97e0:	sub	sp, sp, #56	; 0x38
    97e4:	str	r0, [fp, #-40]	; 0xffffffd8
    97e8:	str	r1, [fp, #-44]	; 0xffffffd4
    97ec:	str	r2, [fp, #-48]	; 0xffffffd0
    97f0:	str	r3, [fp, #-52]	; 0xffffffcc
    97f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    97f8:	mov	r2, #0
    97fc:	str	r2, [r3]
    9800:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9804:	ldr	r3, [r3]
    9808:	mov	r1, #2
    980c:	mov	r0, r3
    9810:	bl	0 <flatcc_builder_start_table>
    9814:	mov	r3, r0
    9818:	cmp	r3, #0
    981c:	bne	9c0c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x434>
    9820:	sub	r3, fp, #24
    9824:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9828:	ldr	r1, [fp, #-44]	; 0xffffffd4
    982c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9830:	bl	980 <flatcc_json_parser_object_start>
    9834:	str	r0, [fp, #-44]	; 0xffffffd4
    9838:	b	9bbc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e4>
    983c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9840:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9844:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9848:	bl	570 <flatcc_json_parser_symbol_start>
    984c:	str	r0, [fp, #-44]	; 0xffffffd4
    9850:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9854:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9858:	bl	854 <flatcc_json_parser_symbol_part>
    985c:	strd	r0, [fp, #-12]
    9860:	ldrd	r2, [fp, #-12]
    9864:	add	r1, pc, #964	; 0x3c4
    9868:	ldrd	r0, [r1]
    986c:	cmp	r3, r1
    9870:	cmpeq	r2, r0
    9874:	bne	9b90 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3b8>
    9878:	ldr	r3, [fp, #-44]	; 0xffffffd4
    987c:	add	r3, r3, #8
    9880:	str	r3, [fp, #-44]	; 0xffffffd4
    9884:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9888:	ldr	r0, [fp, #-44]	; 0xffffffd4
    988c:	bl	854 <flatcc_json_parser_symbol_part>
    9890:	strd	r0, [fp, #-12]
    9894:	ldrd	r2, [fp, #-12]
    9898:	add	r1, pc, #920	; 0x398
    989c:	ldrd	r0, [r1]
    98a0:	cmp	r3, r1
    98a4:	cmpeq	r2, r0
    98a8:	bne	9a2c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x254>
    98ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
    98b0:	add	r3, r3, #8
    98b4:	str	r3, [fp, #-44]	; 0xffffffd4
    98b8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    98bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    98c0:	bl	854 <flatcc_json_parser_symbol_part>
    98c4:	strd	r0, [fp, #-12]
    98c8:	ldrd	r2, [fp, #-12]
    98cc:	mov	r0, #-16777216	; 0xff000000
    98d0:	mvn	r1, #0
    98d4:	and	r2, r2, r0
    98d8:	and	r3, r3, r1
    98dc:	add	r1, pc, #860	; 0x35c
    98e0:	ldrd	r0, [r1]
    98e4:	cmp	r3, r1
    98e8:	cmpeq	r2, r0
    98ec:	bne	9a14 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x23c>
    98f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    98f4:	str	r3, [fp, #-16]
    98f8:	mov	r3, #5
    98fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9900:	ldr	r1, [fp, #-16]
    9904:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9908:	bl	e20 <flatcc_json_parser_match_symbol>
    990c:	str	r0, [fp, #-44]	; 0xffffffd4
    9910:	ldr	r2, [fp, #-16]
    9914:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9918:	cmp	r2, r3
    991c:	beq	99fc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x224>
    9920:	mov	r3, #0
    9924:	str	r3, [fp, #-28]	; 0xffffffe4
    9928:	ldr	r3, [fp, #-44]	; 0xffffffd4
    992c:	str	r3, [fp, #-16]
    9930:	sub	r3, fp, #28
    9934:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9938:	ldr	r1, [fp, #-16]
    993c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9940:	bl	1714 <flatcc_json_parser_uint32>
    9944:	str	r0, [fp, #-44]	; 0xffffffd4
    9948:	ldr	r2, [fp, #-16]
    994c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9950:	cmp	r2, r3
    9954:	bne	99a0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1c8>
    9958:	ldr	r3, [fp, #-44]	; 0xffffffd4
    995c:	str	r3, [fp, #-16]
    9960:	sub	r3, fp, #28
    9964:	str	r3, [sp]
    9968:	ldr	r3, [pc, #736]	; 9c50 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x478>
    996c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9970:	ldr	r1, [fp, #-16]
    9974:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9978:	bl	1fa4 <flatcc_json_parser_symbolic_uint32>
    997c:	str	r0, [fp, #-44]	; 0xffffffd4
    9980:	ldr	r2, [fp, #-44]	; 0xffffffd4
    9984:	ldr	r3, [fp, #-16]
    9988:	cmp	r2, r3
    998c:	beq	9c5c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    9990:	ldr	r2, [fp, #-44]	; 0xffffffd4
    9994:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9998:	cmp	r2, r3
    999c:	beq	9c5c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    99a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    99a4:	cmp	r3, #0
    99a8:	bne	99c0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1e8>
    99ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    99b0:	ldr	r3, [r3, #8]
    99b4:	and	r3, r3, #2
    99b8:	cmp	r3, #0
    99bc:	beq	9ba4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    99c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    99c4:	ldr	r0, [r3]
    99c8:	mov	r3, #4
    99cc:	mov	r2, #4
    99d0:	mov	r1, #1
    99d4:	bl	0 <flatcc_builder_table_add>
    99d8:	str	r0, [fp, #-20]	; 0xffffffec
    99dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    99e0:	cmp	r3, #0
    99e4:	beq	9c14 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x43c>
    99e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    99ec:	mov	r1, r3
    99f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    99f4:	bl	f4 <flatbuffers_uint32_write_to_pe>
    99f8:	b	9ba4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    99fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9a00:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9a04:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9a08:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9a0c:	str	r0, [fp, #-44]	; 0xffffffd4
    9a10:	b	9ba4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    9a14:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9a18:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9a1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9a20:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9a24:	str	r0, [fp, #-44]	; 0xffffffd4
    9a28:	b	9ba4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    9a2c:	ldrd	r2, [fp, #-12]
    9a30:	mvn	r0, #255	; 0xff
    9a34:	mvn	r1, #0
    9a38:	and	r2, r2, r0
    9a3c:	and	r3, r3, r1
    9a40:	add	r1, pc, #512	; 0x200
    9a44:	ldrd	r0, [r1]
    9a48:	cmp	r3, r1
    9a4c:	cmpeq	r2, r0
    9a50:	bne	9b78 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3a0>
    9a54:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9a58:	str	r3, [fp, #-16]
    9a5c:	mov	r3, #7
    9a60:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9a64:	ldr	r1, [fp, #-16]
    9a68:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9a6c:	bl	e20 <flatcc_json_parser_match_symbol>
    9a70:	str	r0, [fp, #-44]	; 0xffffffd4
    9a74:	ldr	r2, [fp, #-16]
    9a78:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9a7c:	cmp	r2, r3
    9a80:	beq	9b60 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x388>
    9a84:	mov	r2, #0
    9a88:	mov	r3, #0
    9a8c:	strd	r2, [fp, #-36]	; 0xffffffdc
    9a90:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9a94:	str	r3, [fp, #-16]
    9a98:	sub	r3, fp, #36	; 0x24
    9a9c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9aa0:	ldr	r1, [fp, #-16]
    9aa4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9aa8:	bl	1984 <flatcc_json_parser_int64>
    9aac:	str	r0, [fp, #-44]	; 0xffffffd4
    9ab0:	ldr	r2, [fp, #-16]
    9ab4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9ab8:	cmp	r2, r3
    9abc:	bne	9b08 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x330>
    9ac0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9ac4:	str	r3, [fp, #-16]
    9ac8:	sub	r3, fp, #36	; 0x24
    9acc:	str	r3, [sp]
    9ad0:	ldr	r3, [pc, #380]	; 9c54 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x47c>
    9ad4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9ad8:	ldr	r1, [fp, #-16]
    9adc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9ae0:	bl	2510 <flatcc_json_parser_symbolic_int64>
    9ae4:	str	r0, [fp, #-44]	; 0xffffffd4
    9ae8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    9aec:	ldr	r3, [fp, #-16]
    9af0:	cmp	r2, r3
    9af4:	beq	9c5c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    9af8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    9afc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9b00:	cmp	r2, r3
    9b04:	beq	9c5c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    9b08:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    9b0c:	orrs	r3, r2, r3
    9b10:	bne	9b28 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x350>
    9b14:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9b18:	ldr	r3, [r3, #8]
    9b1c:	and	r3, r3, #2
    9b20:	cmp	r3, #0
    9b24:	beq	9ba4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    9b28:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9b2c:	ldr	r0, [r3]
    9b30:	mov	r3, #8
    9b34:	mov	r2, #8
    9b38:	mov	r1, #0
    9b3c:	bl	0 <flatcc_builder_table_add>
    9b40:	str	r0, [fp, #-20]	; 0xffffffec
    9b44:	ldr	r3, [fp, #-20]	; 0xffffffec
    9b48:	cmp	r3, #0
    9b4c:	beq	9c1c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x444>
    9b50:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    9b54:	ldr	r0, [fp, #-20]	; 0xffffffec
    9b58:	bl	2d8 <flatbuffers_int64_write_to_pe>
    9b5c:	b	9ba4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    9b60:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9b64:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9b68:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9b6c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9b70:	str	r0, [fp, #-44]	; 0xffffffd4
    9b74:	b	9ba4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    9b78:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9b7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9b80:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9b84:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9b88:	str	r0, [fp, #-44]	; 0xffffffd4
    9b8c:	b	9ba4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    9b90:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9b94:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9b98:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9b9c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9ba0:	str	r0, [fp, #-44]	; 0xffffffd4
    9ba4:	sub	r3, fp, #24
    9ba8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9bac:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9bb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9bb4:	bl	a68 <flatcc_json_parser_object_end>
    9bb8:	str	r0, [fp, #-44]	; 0xffffffd4
    9bbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9bc0:	cmp	r3, #0
    9bc4:	bne	983c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x64>
    9bc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9bcc:	ldr	r3, [r3, #24]
    9bd0:	cmp	r3, #0
    9bd4:	bne	9c24 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x44c>
    9bd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9bdc:	ldr	r3, [r3]
    9be0:	mov	r0, r3
    9be4:	bl	0 <flatcc_builder_end_table>
    9be8:	mov	r2, r0
    9bec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9bf0:	str	r2, [r3]
    9bf4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9bf8:	ldr	r3, [r3]
    9bfc:	cmp	r3, #0
    9c00:	beq	9c58 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x480>
    9c04:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9c08:	b	9c74 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    9c0c:	nop			; (mov r0, r0)
    9c10:	b	9c5c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    9c14:	nop			; (mov r0, r0)
    9c18:	b	9c5c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    9c1c:	nop			; (mov r0, r0)
    9c20:	b	9c5c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    9c24:	nop			; (mov r0, r0)
    9c28:	b	9c5c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x484>
    9c2c:	nop			; (mov r0, r0)
    9c30:	.word	0x5f626262
    9c34:	.word	0x61616161
    9c38:	.word	0x6172745f
    9c3c:	.word	0x625f7374
    9c40:	.word	0x73000000
    9c44:	.word	0x73746570
    9c48:	.word	0x65707300
    9c4c:	.word	0x625f7374
    9c50:	.word	0x00000180
    9c54:	.word	0x0000018c
    9c58:	nop			; (mov r0, r0)
    9c5c:	mov	r3, #33	; 0x21
    9c60:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9c64:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9c68:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9c6c:	bl	0 <flatcc_json_parser_set_error>
    9c70:	mov	r3, r0
    9c74:	mov	r0, r3
    9c78:	sub	sp, fp, #4
    9c7c:	pop	{fp, pc}

00009c80 <MyGame_Example_TestBase64_parse_json_table>:
    9c80:	push	{fp, lr}
    9c84:	add	fp, sp, #4
    9c88:	sub	sp, sp, #48	; 0x30
    9c8c:	str	r0, [fp, #-32]	; 0xffffffe0
    9c90:	str	r1, [fp, #-36]	; 0xffffffdc
    9c94:	str	r2, [fp, #-40]	; 0xffffffd8
    9c98:	str	r3, [fp, #-44]	; 0xffffffd4
    9c9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9ca0:	mov	r2, #0
    9ca4:	str	r2, [r3]
    9ca8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9cac:	ldr	r3, [r3]
    9cb0:	mov	r1, #3
    9cb4:	mov	r0, r3
    9cb8:	bl	0 <flatcc_builder_start_table>
    9cbc:	mov	r3, r0
    9cc0:	cmp	r3, #0
    9cc4:	bne	a030 <MyGame_Example_TestBase64_parse_json_table+0x3b0>
    9cc8:	sub	r3, fp, #24
    9ccc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9cd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9cd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9cd8:	bl	980 <flatcc_json_parser_object_start>
    9cdc:	str	r0, [fp, #-36]	; 0xffffffdc
    9ce0:	b	9fe0 <MyGame_Example_TestBase64_parse_json_table+0x360>
    9ce4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9ce8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9cec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9cf0:	bl	570 <flatcc_json_parser_symbol_start>
    9cf4:	str	r0, [fp, #-36]	; 0xffffffdc
    9cf8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9cfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9d00:	bl	854 <flatcc_json_parser_symbol_part>
    9d04:	strd	r0, [fp, #-12]
    9d08:	ldrd	r2, [fp, #-12]
    9d0c:	add	r1, pc, #852	; 0x354
    9d10:	ldrd	r0, [r1]
    9d14:	cmp	r3, r1
    9d18:	cmpeq	r2, r0
    9d1c:	bhi	9e0c <MyGame_Example_TestBase64_parse_json_table+0x18c>
    9d20:	ldrd	r2, [fp, #-12]
    9d24:	mov	r0, #0
    9d28:	mvn	r1, #0
    9d2c:	and	r2, r2, r0
    9d30:	and	r3, r3, r1
    9d34:	add	r1, pc, #820	; 0x334
    9d38:	ldrd	r0, [r1]
    9d3c:	cmp	r3, r1
    9d40:	cmpeq	r2, r0
    9d44:	bne	9df4 <MyGame_Example_TestBase64_parse_json_table+0x174>
    9d48:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9d4c:	str	r3, [fp, #-16]
    9d50:	mov	r3, #4
    9d54:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9d58:	ldr	r1, [fp, #-16]
    9d5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9d60:	bl	e20 <flatcc_json_parser_match_symbol>
    9d64:	str	r0, [fp, #-36]	; 0xffffffdc
    9d68:	ldr	r2, [fp, #-16]
    9d6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9d70:	cmp	r2, r3
    9d74:	beq	9ddc <MyGame_Example_TestBase64_parse_json_table+0x15c>
    9d78:	sub	r2, fp, #28
    9d7c:	mov	r3, #0
    9d80:	str	r3, [sp]
    9d84:	mov	r3, r2
    9d88:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9d8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9d90:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9d94:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    9d98:	str	r0, [fp, #-36]	; 0xffffffdc
    9d9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9da0:	cmp	r3, #0
    9da4:	beq	a044 <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    9da8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9dac:	ldr	r3, [r3]
    9db0:	mov	r1, #0
    9db4:	mov	r0, r3
    9db8:	bl	0 <flatcc_builder_table_add_offset>
    9dbc:	str	r0, [fp, #-20]	; 0xffffffec
    9dc0:	ldr	r3, [fp, #-20]	; 0xffffffec
    9dc4:	cmp	r3, #0
    9dc8:	beq	a044 <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    9dcc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9dd0:	ldr	r3, [fp, #-20]	; 0xffffffec
    9dd4:	str	r2, [r3]
    9dd8:	b	9fc8 <MyGame_Example_TestBase64_parse_json_table+0x348>
    9ddc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9de0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9de4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9de8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9dec:	str	r0, [fp, #-36]	; 0xffffffdc
    9df0:	b	9fc8 <MyGame_Example_TestBase64_parse_json_table+0x348>
    9df4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9df8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9dfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9e00:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9e04:	str	r0, [fp, #-36]	; 0xffffffdc
    9e08:	b	9fc8 <MyGame_Example_TestBase64_parse_json_table+0x348>
    9e0c:	ldrd	r2, [fp, #-12]
    9e10:	mvn	r0, #255	; 0xff
    9e14:	mvn	r1, #0
    9e18:	and	r2, r2, r0
    9e1c:	and	r3, r3, r1
    9e20:	add	r1, pc, #592	; 0x250
    9e24:	ldrd	r0, [r1]
    9e28:	cmp	r3, r1
    9e2c:	cmpeq	r2, r0
    9e30:	bne	9ee0 <MyGame_Example_TestBase64_parse_json_table+0x260>
    9e34:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9e38:	str	r3, [fp, #-16]
    9e3c:	mov	r3, #7
    9e40:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9e44:	ldr	r1, [fp, #-16]
    9e48:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9e4c:	bl	e20 <flatcc_json_parser_match_symbol>
    9e50:	str	r0, [fp, #-36]	; 0xffffffdc
    9e54:	ldr	r2, [fp, #-16]
    9e58:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9e5c:	cmp	r2, r3
    9e60:	beq	9ec8 <MyGame_Example_TestBase64_parse_json_table+0x248>
    9e64:	sub	r2, fp, #28
    9e68:	mov	r3, #1
    9e6c:	str	r3, [sp]
    9e70:	mov	r3, r2
    9e74:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9e78:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9e7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9e80:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    9e84:	str	r0, [fp, #-36]	; 0xffffffdc
    9e88:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9e8c:	cmp	r3, #0
    9e90:	beq	a044 <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    9e94:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9e98:	ldr	r3, [r3]
    9e9c:	mov	r1, #1
    9ea0:	mov	r0, r3
    9ea4:	bl	0 <flatcc_builder_table_add_offset>
    9ea8:	str	r0, [fp, #-20]	; 0xffffffec
    9eac:	ldr	r3, [fp, #-20]	; 0xffffffec
    9eb0:	cmp	r3, #0
    9eb4:	beq	a044 <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    9eb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9ebc:	ldr	r3, [fp, #-20]	; 0xffffffec
    9ec0:	str	r2, [r3]
    9ec4:	b	9fc8 <MyGame_Example_TestBase64_parse_json_table+0x348>
    9ec8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9ecc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9ed0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9ed4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9ed8:	str	r0, [fp, #-36]	; 0xffffffdc
    9edc:	b	9fc8 <MyGame_Example_TestBase64_parse_json_table+0x348>
    9ee0:	ldrd	r2, [fp, #-12]
    9ee4:	ldr	r0, [pc, #412]	; a088 <MyGame_Example_TestBase64_parse_json_table+0x408>
    9ee8:	mvn	r1, #0
    9eec:	and	r2, r2, r0
    9ef0:	and	r3, r3, r1
    9ef4:	add	r1, pc, #388	; 0x184
    9ef8:	ldrd	r0, [r1]
    9efc:	cmp	r3, r1
    9f00:	cmpeq	r2, r0
    9f04:	bne	9fb4 <MyGame_Example_TestBase64_parse_json_table+0x334>
    9f08:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9f0c:	str	r3, [fp, #-16]
    9f10:	mov	r3, #6
    9f14:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9f18:	ldr	r1, [fp, #-16]
    9f1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9f20:	bl	e20 <flatcc_json_parser_match_symbol>
    9f24:	str	r0, [fp, #-36]	; 0xffffffdc
    9f28:	ldr	r2, [fp, #-16]
    9f2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9f30:	cmp	r2, r3
    9f34:	beq	9f9c <MyGame_Example_TestBase64_parse_json_table+0x31c>
    9f38:	sub	r2, fp, #28
    9f3c:	mov	r3, #0
    9f40:	str	r3, [sp]
    9f44:	mov	r3, r2
    9f48:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9f4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9f50:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9f54:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    9f58:	str	r0, [fp, #-36]	; 0xffffffdc
    9f5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9f60:	cmp	r3, #0
    9f64:	beq	a044 <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    9f68:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9f6c:	ldr	r3, [r3]
    9f70:	mov	r1, #2
    9f74:	mov	r0, r3
    9f78:	bl	0 <flatcc_builder_table_add_offset>
    9f7c:	str	r0, [fp, #-20]	; 0xffffffec
    9f80:	ldr	r3, [fp, #-20]	; 0xffffffec
    9f84:	cmp	r3, #0
    9f88:	beq	a044 <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    9f8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9f90:	ldr	r3, [fp, #-20]	; 0xffffffec
    9f94:	str	r2, [r3]
    9f98:	b	9fc8 <MyGame_Example_TestBase64_parse_json_table+0x348>
    9f9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9fa0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9fa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9fa8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9fac:	str	r0, [fp, #-36]	; 0xffffffdc
    9fb0:	b	9fc8 <MyGame_Example_TestBase64_parse_json_table+0x348>
    9fb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9fb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9fbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9fc0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9fc4:	str	r0, [fp, #-36]	; 0xffffffdc
    9fc8:	sub	r3, fp, #24
    9fcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9fd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9fd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9fd8:	bl	a68 <flatcc_json_parser_object_end>
    9fdc:	str	r0, [fp, #-36]	; 0xffffffdc
    9fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9fe4:	cmp	r3, #0
    9fe8:	bne	9ce4 <MyGame_Example_TestBase64_parse_json_table+0x64>
    9fec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9ff0:	ldr	r3, [r3, #24]
    9ff4:	cmp	r3, #0
    9ff8:	bne	a038 <MyGame_Example_TestBase64_parse_json_table+0x3b8>
    9ffc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a000:	ldr	r3, [r3]
    a004:	mov	r0, r3
    a008:	bl	0 <flatcc_builder_end_table>
    a00c:	mov	r2, r0
    a010:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a014:	str	r2, [r3]
    a018:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a01c:	ldr	r3, [r3]
    a020:	cmp	r3, #0
    a024:	beq	a040 <MyGame_Example_TestBase64_parse_json_table+0x3c0>
    a028:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a02c:	b	a05c <MyGame_Example_TestBase64_parse_json_table+0x3dc>
    a030:	nop			; (mov r0, r0)
    a034:	b	a044 <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    a038:	nop			; (mov r0, r0)
    a03c:	b	a044 <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    a040:	nop			; (mov r0, r0)
    a044:	mov	r3, #33	; 0x21
    a048:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a04c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a050:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a054:	bl	0 <flatcc_json_parser_set_error>
    a058:	mov	r3, r0
    a05c:	mov	r0, r3
    a060:	sub	sp, fp, #4
    a064:	pop	{fp, pc}
    a068:	.word	0x6563ffff
    a06c:	.word	0x6e657374
    a070:	.word	0x00000000
    a074:	.word	0x64617461
    a078:	.word	0x61746100
    a07c:	.word	0x75726c64
    a080:	.word	0x65640000
    a084:	.word	0x6e657374
    a088:	.word	0xffff0000

0000a08c <MyGame_Example_Monster_parse_json_table>:
    a08c:	push	{fp, lr}
    a090:	add	fp, sp, #4
    a094:	sub	sp, sp, #160	; 0xa0
    a098:	str	r0, [fp, #-136]	; 0xffffff78
    a09c:	str	r1, [fp, #-140]	; 0xffffff74
    a0a0:	str	r2, [fp, #-144]	; 0xffffff70
    a0a4:	str	r3, [fp, #-148]	; 0xffffff6c
    a0a8:	ldr	r3, [fp, #-148]	; 0xffffff6c
    a0ac:	mov	r2, #0
    a0b0:	str	r2, [r3]
    a0b4:	ldr	r3, [fp, #-136]	; 0xffffff78
    a0b8:	ldr	r3, [r3]
    a0bc:	mov	r1, #36	; 0x24
    a0c0:	mov	r0, r3
    a0c4:	bl	0 <flatcc_builder_start_table>
    a0c8:	mov	r3, r0
    a0cc:	cmp	r3, #0
    a0d0:	bne	d908 <MyGame_Example_Monster_parse_json_table+0x387c>
    a0d4:	sub	r3, fp, #36	; 0x24
    a0d8:	str	r3, [sp]
    a0dc:	mov	r3, #1
    a0e0:	ldr	r2, [fp, #-144]	; 0xffffff70
    a0e4:	ldr	r1, [fp, #-140]	; 0xffffff74
    a0e8:	ldr	r0, [fp, #-136]	; 0xffffff78
    a0ec:	bl	0 <flatcc_json_parser_prepare_unions>
    a0f0:	mov	r2, r0
    a0f4:	ldr	r3, [fp, #-144]	; 0xffffff70
    a0f8:	cmp	r2, r3
    a0fc:	beq	d910 <MyGame_Example_Monster_parse_json_table+0x3884>
    a100:	sub	r3, fp, #28
    a104:	ldr	r2, [fp, #-144]	; 0xffffff70
    a108:	ldr	r1, [fp, #-140]	; 0xffffff74
    a10c:	ldr	r0, [fp, #-136]	; 0xffffff78
    a110:	bl	980 <flatcc_json_parser_object_start>
    a114:	str	r0, [fp, #-140]	; 0xffffff74
    a118:	b	d864 <MyGame_Example_Monster_parse_json_table+0x37d8>
    a11c:	ldr	r2, [fp, #-144]	; 0xffffff70
    a120:	ldr	r1, [fp, #-140]	; 0xffffff74
    a124:	ldr	r0, [fp, #-136]	; 0xffffff78
    a128:	bl	570 <flatcc_json_parser_symbol_start>
    a12c:	str	r0, [fp, #-140]	; 0xffffff74
    a130:	ldr	r1, [fp, #-144]	; 0xffffff70
    a134:	ldr	r0, [fp, #-140]	; 0xffffff74
    a138:	bl	854 <flatcc_json_parser_symbol_part>
    a13c:	strd	r0, [fp, #-12]
    a140:	ldrd	r2, [fp, #-12]
    a144:	add	r1, pc, #796	; 0x31c
    a148:	ldrd	r0, [r1]
    a14c:	cmp	r3, r1
    a150:	cmpeq	r2, r0
    a154:	bhi	b320 <MyGame_Example_Monster_parse_json_table+0x1294>
    a158:	ldrd	r2, [fp, #-12]
    a15c:	add	r1, pc, #780	; 0x30c
    a160:	ldrd	r0, [r1]
    a164:	cmp	r3, r1
    a168:	cmpeq	r2, r0
    a16c:	bhi	ab2c <MyGame_Example_Monster_parse_json_table+0xaa0>
    a170:	ldrd	r2, [fp, #-12]
    a174:	add	r1, pc, #764	; 0x2fc
    a178:	ldrd	r0, [r1]
    a17c:	cmp	r3, r1
    a180:	cmpeq	r2, r0
    a184:	bhi	a3b4 <MyGame_Example_Monster_parse_json_table+0x328>
    a188:	ldrd	r2, [fp, #-12]
    a18c:	mov	r0, #-16777216	; 0xff000000
    a190:	mvn	r1, #0
    a194:	and	r2, r2, r0
    a198:	and	r3, r3, r1
    a19c:	add	r1, pc, #732	; 0x2dc
    a1a0:	ldrd	r0, [r1]
    a1a4:	cmp	r3, r1
    a1a8:	cmpeq	r2, r0
    a1ac:	bne	a250 <MyGame_Example_Monster_parse_json_table+0x1c4>
    a1b0:	ldr	r3, [fp, #-140]	; 0xffffff74
    a1b4:	str	r3, [fp, #-16]
    a1b8:	mov	r3, #5
    a1bc:	ldr	r2, [fp, #-144]	; 0xffffff70
    a1c0:	ldr	r1, [fp, #-16]
    a1c4:	ldr	r0, [fp, #-136]	; 0xffffff78
    a1c8:	bl	e20 <flatcc_json_parser_match_symbol>
    a1cc:	str	r0, [fp, #-140]	; 0xffffff74
    a1d0:	ldr	r2, [fp, #-16]
    a1d4:	ldr	r3, [fp, #-140]	; 0xffffff74
    a1d8:	cmp	r2, r3
    a1dc:	beq	a238 <MyGame_Example_Monster_parse_json_table+0x1ac>
    a1e0:	sub	r3, fp, #32
    a1e4:	ldr	r2, [fp, #-144]	; 0xffffff70
    a1e8:	ldr	r1, [fp, #-140]	; 0xffffff74
    a1ec:	ldr	r0, [fp, #-136]	; 0xffffff78
    a1f0:	bl	a08c <MyGame_Example_Monster_parse_json_table>
    a1f4:	str	r0, [fp, #-140]	; 0xffffff74
    a1f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a1fc:	cmp	r3, #0
    a200:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    a204:	ldr	r3, [fp, #-136]	; 0xffffff78
    a208:	ldr	r3, [r3]
    a20c:	mov	r1, #12
    a210:	mov	r0, r3
    a214:	bl	0 <flatcc_builder_table_add_offset>
    a218:	str	r0, [fp, #-20]	; 0xffffffec
    a21c:	ldr	r3, [fp, #-20]	; 0xffffffec
    a220:	cmp	r3, #0
    a224:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    a228:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a22c:	ldr	r3, [fp, #-20]	; 0xffffffec
    a230:	str	r2, [r3]
    a234:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a238:	ldr	r2, [fp, #-144]	; 0xffffff70
    a23c:	ldr	r1, [fp, #-140]	; 0xffffff74
    a240:	ldr	r0, [fp, #-136]	; 0xffffff78
    a244:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a248:	str	r0, [fp, #-140]	; 0xffffff74
    a24c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a250:	ldrd	r2, [fp, #-12]
    a254:	mov	r0, #-16777216	; 0xff000000
    a258:	mvn	r1, #0
    a25c:	and	r2, r2, r0
    a260:	and	r3, r3, r1
    a264:	add	r1, pc, #540	; 0x21c
    a268:	ldrd	r0, [r1]
    a26c:	cmp	r3, r1
    a270:	cmpeq	r2, r0
    a274:	bne	a39c <MyGame_Example_Monster_parse_json_table+0x310>
    a278:	ldr	r3, [fp, #-140]	; 0xffffff74
    a27c:	str	r3, [fp, #-16]
    a280:	mov	r3, #5
    a284:	ldr	r2, [fp, #-144]	; 0xffffff70
    a288:	ldr	r1, [fp, #-16]
    a28c:	ldr	r0, [fp, #-136]	; 0xffffff78
    a290:	bl	e20 <flatcc_json_parser_match_symbol>
    a294:	str	r0, [fp, #-140]	; 0xffffff74
    a298:	ldr	r2, [fp, #-16]
    a29c:	ldr	r3, [fp, #-140]	; 0xffffff74
    a2a0:	cmp	r2, r3
    a2a4:	beq	a384 <MyGame_Example_Monster_parse_json_table+0x2f8>
    a2a8:	mov	r3, #0
    a2ac:	strb	r3, [fp, #-37]	; 0xffffffdb
    a2b0:	ldr	r3, [fp, #-140]	; 0xffffff74
    a2b4:	str	r3, [fp, #-16]
    a2b8:	sub	r3, fp, #37	; 0x25
    a2bc:	ldr	r2, [fp, #-144]	; 0xffffff70
    a2c0:	ldr	r1, [fp, #-16]
    a2c4:	ldr	r0, [fp, #-136]	; 0xffffff78
    a2c8:	bl	1bf8 <flatcc_json_parser_int8>
    a2cc:	str	r0, [fp, #-140]	; 0xffffff74
    a2d0:	ldr	r2, [fp, #-16]
    a2d4:	ldr	r3, [fp, #-140]	; 0xffffff74
    a2d8:	cmp	r2, r3
    a2dc:	bne	a328 <MyGame_Example_Monster_parse_json_table+0x29c>
    a2e0:	ldr	r3, [fp, #-140]	; 0xffffff74
    a2e4:	str	r3, [fp, #-16]
    a2e8:	sub	r3, fp, #37	; 0x25
    a2ec:	str	r3, [sp]
    a2f0:	ldr	r3, [pc, #416]	; a498 <MyGame_Example_Monster_parse_json_table+0x40c>
    a2f4:	ldr	r2, [fp, #-144]	; 0xffffff70
    a2f8:	ldr	r1, [fp, #-16]
    a2fc:	ldr	r0, [fp, #-136]	; 0xffffff78
    a300:	bl	2a90 <flatcc_json_parser_symbolic_int8>
    a304:	str	r0, [fp, #-140]	; 0xffffff74
    a308:	ldr	r2, [fp, #-140]	; 0xffffff74
    a30c:	ldr	r3, [fp, #-16]
    a310:	cmp	r2, r3
    a314:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    a318:	ldr	r2, [fp, #-140]	; 0xffffff74
    a31c:	ldr	r3, [fp, #-144]	; 0xffffff70
    a320:	cmp	r2, r3
    a324:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    a328:	ldrsb	r3, [fp, #-37]	; 0xffffffdb
    a32c:	cmp	r3, #8
    a330:	bne	a348 <MyGame_Example_Monster_parse_json_table+0x2bc>
    a334:	ldr	r3, [fp, #-136]	; 0xffffff78
    a338:	ldr	r3, [r3, #8]
    a33c:	and	r3, r3, #2
    a340:	cmp	r3, #0
    a344:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a348:	ldr	r3, [fp, #-136]	; 0xffffff78
    a34c:	ldr	r0, [r3]
    a350:	mov	r3, #1
    a354:	mov	r2, #1
    a358:	mov	r1, #6
    a35c:	bl	0 <flatcc_builder_table_add>
    a360:	str	r0, [fp, #-24]	; 0xffffffe8
    a364:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a368:	cmp	r3, #0
    a36c:	beq	d918 <MyGame_Example_Monster_parse_json_table+0x388c>
    a370:	ldrsb	r3, [fp, #-37]	; 0xffffffdb
    a374:	mov	r1, r3
    a378:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a37c:	bl	1b0 <flatbuffers_int8_write_to_pe>
    a380:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a384:	ldr	r2, [fp, #-144]	; 0xffffff70
    a388:	ldr	r1, [fp, #-140]	; 0xffffff74
    a38c:	ldr	r0, [fp, #-136]	; 0xffffff78
    a390:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a394:	str	r0, [fp, #-140]	; 0xffffff74
    a398:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a39c:	ldr	r2, [fp, #-144]	; 0xffffff70
    a3a0:	ldr	r1, [fp, #-140]	; 0xffffff74
    a3a4:	ldr	r0, [fp, #-136]	; 0xffffff78
    a3a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a3ac:	str	r0, [fp, #-140]	; 0xffffff74
    a3b0:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a3b4:	ldrd	r2, [fp, #-12]
    a3b8:	mvn	r0, #0
    a3bc:	ldr	r1, [pc, #216]	; a49c <MyGame_Example_Monster_parse_json_table+0x410>
    a3c0:	cmp	r3, r1
    a3c4:	cmpeq	r2, r0
    a3c8:	bhi	a604 <MyGame_Example_Monster_parse_json_table+0x578>
    a3cc:	ldrd	r2, [fp, #-12]
    a3d0:	mov	r0, #0
    a3d4:	mvn	r1, #0
    a3d8:	and	r2, r2, r0
    a3dc:	and	r3, r3, r1
    a3e0:	add	r1, pc, #168	; 0xa8
    a3e4:	ldrd	r0, [r1]
    a3e8:	cmp	r3, r1
    a3ec:	cmpeq	r2, r0
    a3f0:	bne	a5ec <MyGame_Example_Monster_parse_json_table+0x560>
    a3f4:	ldr	r3, [fp, #-140]	; 0xffffff74
    a3f8:	str	r3, [fp, #-16]
    a3fc:	mov	r3, #4
    a400:	ldr	r2, [fp, #-144]	; 0xffffff70
    a404:	ldr	r1, [fp, #-16]
    a408:	ldr	r0, [fp, #-136]	; 0xffffff78
    a40c:	bl	e20 <flatcc_json_parser_match_symbol>
    a410:	str	r0, [fp, #-140]	; 0xffffff74
    a414:	ldr	r2, [fp, #-16]
    a418:	ldr	r3, [fp, #-140]	; 0xffffff74
    a41c:	cmp	r2, r3
    a420:	beq	a5d4 <MyGame_Example_Monster_parse_json_table+0x548>
    a424:	ldr	r3, [fp, #-136]	; 0xffffff78
    a428:	ldr	r0, [r3]
    a42c:	mvn	r3, #0
    a430:	mov	r2, #1
    a434:	mov	r1, #1
    a438:	bl	0 <flatcc_builder_start_vector>
    a43c:	mov	r3, r0
    a440:	cmp	r3, #0
    a444:	bne	d920 <MyGame_Example_Monster_parse_json_table+0x3894>
    a448:	sub	r3, fp, #28
    a44c:	ldr	r2, [fp, #-144]	; 0xffffff70
    a450:	ldr	r1, [fp, #-140]	; 0xffffff74
    a454:	ldr	r0, [fp, #-136]	; 0xffffff78
    a458:	bl	bd0 <flatcc_json_parser_array_start>
    a45c:	str	r0, [fp, #-140]	; 0xffffff74
    a460:	b	a570 <MyGame_Example_Monster_parse_json_table+0x4e4>
    a464:	nop			; (mov r0, r0)
    a468:	.word	0x61727260
    a46c:	.word	0x74657374
    a470:	.word	0xffffffff
    a474:	.word	0x6e616d64
    a478:	.word	0xffffffff
    a47c:	.word	0x666c6577
    a480:	.word	0x79000000
    a484:	.word	0x656e656d
    a488:	.word	0x72000000
    a48c:	.word	0x636f6c6f
    a490:	.word	0x00000000
    a494:	.word	0x666c6578
    a498:	.word	0x00000198
    a49c:	.word	0x686fffff
    a4a0:	.word	0x000001a8
    a4a4:	mov	r3, #0
    a4a8:	strb	r3, [fp, #-38]	; 0xffffffda
    a4ac:	ldr	r3, [fp, #-136]	; 0xffffff78
    a4b0:	ldr	r3, [r3]
    a4b4:	mov	r1, #1
    a4b8:	mov	r0, r3
    a4bc:	bl	0 <flatcc_builder_extend_vector>
    a4c0:	str	r0, [fp, #-24]	; 0xffffffe8
    a4c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a4c8:	cmp	r3, #0
    a4cc:	beq	d928 <MyGame_Example_Monster_parse_json_table+0x389c>
    a4d0:	ldr	r3, [fp, #-140]	; 0xffffff74
    a4d4:	str	r3, [fp, #-16]
    a4d8:	sub	r3, fp, #38	; 0x26
    a4dc:	ldr	r2, [fp, #-144]	; 0xffffff70
    a4e0:	ldr	r1, [fp, #-16]
    a4e4:	ldr	r0, [fp, #-136]	; 0xffffff78
    a4e8:	bl	18b4 <flatcc_json_parser_uint8>
    a4ec:	str	r0, [fp, #-140]	; 0xffffff74
    a4f0:	ldr	r2, [fp, #-16]
    a4f4:	ldr	r3, [fp, #-140]	; 0xffffff74
    a4f8:	cmp	r2, r3
    a4fc:	bne	a548 <MyGame_Example_Monster_parse_json_table+0x4bc>
    a500:	ldr	r3, [fp, #-140]	; 0xffffff74
    a504:	str	r3, [fp, #-16]
    a508:	sub	r3, fp, #38	; 0x26
    a50c:	str	r3, [sp]
    a510:	ldr	r3, [pc, #-120]	; a4a0 <MyGame_Example_Monster_parse_json_table+0x414>
    a514:	ldr	r2, [fp, #-144]	; 0xffffff70
    a518:	ldr	r1, [fp, #-16]
    a51c:	ldr	r0, [fp, #-136]	; 0xffffff78
    a520:	bl	2340 <flatcc_json_parser_symbolic_uint8>
    a524:	str	r0, [fp, #-140]	; 0xffffff74
    a528:	ldr	r2, [fp, #-140]	; 0xffffff74
    a52c:	ldr	r3, [fp, #-16]
    a530:	cmp	r2, r3
    a534:	beq	d928 <MyGame_Example_Monster_parse_json_table+0x389c>
    a538:	ldr	r2, [fp, #-140]	; 0xffffff74
    a53c:	ldr	r3, [fp, #-144]	; 0xffffff70
    a540:	cmp	r2, r3
    a544:	beq	d928 <MyGame_Example_Monster_parse_json_table+0x389c>
    a548:	ldrb	r3, [fp, #-38]	; 0xffffffda
    a54c:	mov	r1, r3
    a550:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a554:	bl	28 <flatbuffers_uint8_write_to_pe>
    a558:	sub	r3, fp, #28
    a55c:	ldr	r2, [fp, #-144]	; 0xffffff70
    a560:	ldr	r1, [fp, #-140]	; 0xffffff74
    a564:	ldr	r0, [fp, #-136]	; 0xffffff78
    a568:	bl	cb8 <flatcc_json_parser_array_end>
    a56c:	str	r0, [fp, #-140]	; 0xffffff74
    a570:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a574:	cmp	r3, #0
    a578:	bne	a4a4 <MyGame_Example_Monster_parse_json_table+0x418>
    a57c:	ldr	r3, [fp, #-136]	; 0xffffff78
    a580:	ldr	r3, [r3]
    a584:	mov	r0, r3
    a588:	bl	0 <flatcc_builder_end_vector>
    a58c:	mov	r3, r0
    a590:	str	r3, [fp, #-32]	; 0xffffffe0
    a594:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a598:	cmp	r3, #0
    a59c:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    a5a0:	ldr	r3, [fp, #-136]	; 0xffffff78
    a5a4:	ldr	r3, [r3]
    a5a8:	mov	r1, #30
    a5ac:	mov	r0, r3
    a5b0:	bl	0 <flatcc_builder_table_add_offset>
    a5b4:	str	r0, [fp, #-20]	; 0xffffffec
    a5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    a5bc:	cmp	r3, #0
    a5c0:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    a5c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a5c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    a5cc:	str	r2, [r3]
    a5d0:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a5d4:	ldr	r2, [fp, #-144]	; 0xffffff70
    a5d8:	ldr	r1, [fp, #-140]	; 0xffffff74
    a5dc:	ldr	r0, [fp, #-136]	; 0xffffff78
    a5e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a5e4:	str	r0, [fp, #-140]	; 0xffffff74
    a5e8:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a5ec:	ldr	r2, [fp, #-144]	; 0xffffff70
    a5f0:	ldr	r1, [fp, #-140]	; 0xffffff74
    a5f4:	ldr	r0, [fp, #-136]	; 0xffffff78
    a5f8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a5fc:	str	r0, [fp, #-140]	; 0xffffff74
    a600:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a604:	ldrd	r2, [fp, #-12]
    a608:	add	r1, pc, #920	; 0x398
    a60c:	ldrd	r0, [r1]
    a610:	cmp	r3, r1
    a614:	cmpeq	r2, r0
    a618:	bhi	a780 <MyGame_Example_Monster_parse_json_table+0x6f4>
    a61c:	ldrd	r2, [fp, #-12]
    a620:	mov	r0, #0
    a624:	ldr	r1, [pc, #908]	; a9b8 <MyGame_Example_Monster_parse_json_table+0x92c>
    a628:	and	r2, r2, r0
    a62c:	and	r3, r3, r1
    a630:	mov	r0, #0
    a634:	ldr	r1, [pc, #896]	; a9bc <MyGame_Example_Monster_parse_json_table+0x930>
    a638:	cmp	r3, r1
    a63c:	cmpeq	r2, r0
    a640:	bne	a768 <MyGame_Example_Monster_parse_json_table+0x6dc>
    a644:	ldr	r3, [fp, #-140]	; 0xffffff74
    a648:	str	r3, [fp, #-16]
    a64c:	mov	r3, #2
    a650:	ldr	r2, [fp, #-144]	; 0xffffff70
    a654:	ldr	r1, [fp, #-16]
    a658:	ldr	r0, [fp, #-136]	; 0xffffff78
    a65c:	bl	e20 <flatcc_json_parser_match_symbol>
    a660:	str	r0, [fp, #-140]	; 0xffffff74
    a664:	ldr	r2, [fp, #-16]
    a668:	ldr	r3, [fp, #-140]	; 0xffffff74
    a66c:	cmp	r2, r3
    a670:	beq	a750 <MyGame_Example_Monster_parse_json_table+0x6c4>
    a674:	mov	r3, #0
    a678:	strh	r3, [fp, #-40]	; 0xffffffd8
    a67c:	ldr	r3, [fp, #-140]	; 0xffffff74
    a680:	str	r3, [fp, #-16]
    a684:	sub	r3, fp, #40	; 0x28
    a688:	ldr	r2, [fp, #-144]	; 0xffffff70
    a68c:	ldr	r1, [fp, #-16]
    a690:	ldr	r0, [fp, #-136]	; 0xffffff78
    a694:	bl	1b28 <flatcc_json_parser_int16>
    a698:	str	r0, [fp, #-140]	; 0xffffff74
    a69c:	ldr	r2, [fp, #-16]
    a6a0:	ldr	r3, [fp, #-140]	; 0xffffff74
    a6a4:	cmp	r2, r3
    a6a8:	bne	a6f4 <MyGame_Example_Monster_parse_json_table+0x668>
    a6ac:	ldr	r3, [fp, #-140]	; 0xffffff74
    a6b0:	str	r3, [fp, #-16]
    a6b4:	sub	r3, fp, #40	; 0x28
    a6b8:	str	r3, [sp]
    a6bc:	ldr	r3, [pc, #764]	; a9c0 <MyGame_Example_Monster_parse_json_table+0x934>
    a6c0:	ldr	r2, [fp, #-144]	; 0xffffff70
    a6c4:	ldr	r1, [fp, #-16]
    a6c8:	ldr	r0, [fp, #-136]	; 0xffffff78
    a6cc:	bl	28b4 <flatcc_json_parser_symbolic_int16>
    a6d0:	str	r0, [fp, #-140]	; 0xffffff74
    a6d4:	ldr	r2, [fp, #-140]	; 0xffffff74
    a6d8:	ldr	r3, [fp, #-16]
    a6dc:	cmp	r2, r3
    a6e0:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    a6e4:	ldr	r2, [fp, #-140]	; 0xffffff74
    a6e8:	ldr	r3, [fp, #-144]	; 0xffffff70
    a6ec:	cmp	r2, r3
    a6f0:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    a6f4:	ldrsh	r3, [fp, #-40]	; 0xffffffd8
    a6f8:	cmp	r3, #100	; 0x64
    a6fc:	bne	a714 <MyGame_Example_Monster_parse_json_table+0x688>
    a700:	ldr	r3, [fp, #-136]	; 0xffffff78
    a704:	ldr	r3, [r3, #8]
    a708:	and	r3, r3, #2
    a70c:	cmp	r3, #0
    a710:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a714:	ldr	r3, [fp, #-136]	; 0xffffff78
    a718:	ldr	r0, [r3]
    a71c:	mov	r3, #2
    a720:	mov	r2, #2
    a724:	mov	r1, #2
    a728:	bl	0 <flatcc_builder_table_add>
    a72c:	str	r0, [fp, #-24]	; 0xffffffe8
    a730:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a734:	cmp	r3, #0
    a738:	beq	d930 <MyGame_Example_Monster_parse_json_table+0x38a4>
    a73c:	ldrsh	r3, [fp, #-40]	; 0xffffffd8
    a740:	mov	r1, r3
    a744:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a748:	bl	218 <flatbuffers_int16_write_to_pe>
    a74c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a750:	ldr	r2, [fp, #-144]	; 0xffffff70
    a754:	ldr	r1, [fp, #-140]	; 0xffffff74
    a758:	ldr	r0, [fp, #-136]	; 0xffffff78
    a75c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a760:	str	r0, [fp, #-140]	; 0xffffff74
    a764:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a768:	ldr	r2, [fp, #-144]	; 0xffffff70
    a76c:	ldr	r1, [fp, #-140]	; 0xffffff74
    a770:	ldr	r0, [fp, #-136]	; 0xffffff78
    a774:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a778:	str	r0, [fp, #-140]	; 0xffffff74
    a77c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a780:	ldrd	r2, [fp, #-12]
    a784:	add	r1, pc, #548	; 0x224
    a788:	ldrd	r0, [r1]
    a78c:	cmp	r3, r1
    a790:	cmpeq	r2, r0
    a794:	bne	a9c8 <MyGame_Example_Monster_parse_json_table+0x93c>
    a798:	ldr	r3, [fp, #-140]	; 0xffffff74
    a79c:	add	r3, r3, #8
    a7a0:	str	r3, [fp, #-140]	; 0xffffff74
    a7a4:	ldr	r1, [fp, #-144]	; 0xffffff70
    a7a8:	ldr	r0, [fp, #-140]	; 0xffffff74
    a7ac:	bl	854 <flatcc_json_parser_symbol_part>
    a7b0:	strd	r0, [fp, #-12]
    a7b4:	ldrd	r2, [fp, #-12]
    a7b8:	mov	r0, #0
    a7bc:	mov	r1, #-16777216	; 0xff000000
    a7c0:	and	r2, r2, r0
    a7c4:	and	r3, r3, r1
    a7c8:	cmp	r3, #2030043136	; 0x79000000
    a7cc:	cmpeq	r2, #0
    a7d0:	bne	a98c <MyGame_Example_Monster_parse_json_table+0x900>
    a7d4:	ldr	r3, [fp, #-140]	; 0xffffff74
    a7d8:	str	r3, [fp, #-16]
    a7dc:	mov	r3, #1
    a7e0:	ldr	r2, [fp, #-144]	; 0xffffff70
    a7e4:	ldr	r1, [fp, #-16]
    a7e8:	ldr	r0, [fp, #-136]	; 0xffffff78
    a7ec:	bl	e20 <flatcc_json_parser_match_symbol>
    a7f0:	str	r0, [fp, #-140]	; 0xffffff74
    a7f4:	ldr	r2, [fp, #-16]
    a7f8:	ldr	r3, [fp, #-140]	; 0xffffff74
    a7fc:	cmp	r2, r3
    a800:	beq	a974 <MyGame_Example_Monster_parse_json_table+0x8e8>
    a804:	ldr	r3, [fp, #-136]	; 0xffffff78
    a808:	ldr	r0, [r3]
    a80c:	mvn	r3, #0
    a810:	mov	r2, #1
    a814:	mov	r1, #1
    a818:	bl	0 <flatcc_builder_start_vector>
    a81c:	mov	r3, r0
    a820:	cmp	r3, #0
    a824:	bne	d938 <MyGame_Example_Monster_parse_json_table+0x38ac>
    a828:	sub	r3, fp, #28
    a82c:	ldr	r2, [fp, #-144]	; 0xffffff70
    a830:	ldr	r1, [fp, #-140]	; 0xffffff74
    a834:	ldr	r0, [fp, #-136]	; 0xffffff78
    a838:	bl	bd0 <flatcc_json_parser_array_start>
    a83c:	str	r0, [fp, #-140]	; 0xffffff74
    a840:	b	a910 <MyGame_Example_Monster_parse_json_table+0x884>
    a844:	mov	r3, #0
    a848:	strb	r3, [fp, #-41]	; 0xffffffd7
    a84c:	ldr	r3, [fp, #-136]	; 0xffffff78
    a850:	ldr	r3, [r3]
    a854:	mov	r1, #1
    a858:	mov	r0, r3
    a85c:	bl	0 <flatcc_builder_extend_vector>
    a860:	str	r0, [fp, #-24]	; 0xffffffe8
    a864:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a868:	cmp	r3, #0
    a86c:	beq	d940 <MyGame_Example_Monster_parse_json_table+0x38b4>
    a870:	ldr	r3, [fp, #-140]	; 0xffffff74
    a874:	str	r3, [fp, #-16]
    a878:	sub	r3, fp, #41	; 0x29
    a87c:	ldr	r2, [fp, #-144]	; 0xffffff70
    a880:	ldr	r1, [fp, #-16]
    a884:	ldr	r0, [fp, #-136]	; 0xffffff78
    a888:	bl	18b4 <flatcc_json_parser_uint8>
    a88c:	str	r0, [fp, #-140]	; 0xffffff74
    a890:	ldr	r2, [fp, #-16]
    a894:	ldr	r3, [fp, #-140]	; 0xffffff74
    a898:	cmp	r2, r3
    a89c:	bne	a8e8 <MyGame_Example_Monster_parse_json_table+0x85c>
    a8a0:	ldr	r3, [fp, #-140]	; 0xffffff74
    a8a4:	str	r3, [fp, #-16]
    a8a8:	sub	r3, fp, #41	; 0x29
    a8ac:	str	r3, [sp]
    a8b0:	ldr	r3, [pc, #268]	; a9c4 <MyGame_Example_Monster_parse_json_table+0x938>
    a8b4:	ldr	r2, [fp, #-144]	; 0xffffff70
    a8b8:	ldr	r1, [fp, #-16]
    a8bc:	ldr	r0, [fp, #-136]	; 0xffffff78
    a8c0:	bl	2340 <flatcc_json_parser_symbolic_uint8>
    a8c4:	str	r0, [fp, #-140]	; 0xffffff74
    a8c8:	ldr	r2, [fp, #-140]	; 0xffffff74
    a8cc:	ldr	r3, [fp, #-16]
    a8d0:	cmp	r2, r3
    a8d4:	beq	d940 <MyGame_Example_Monster_parse_json_table+0x38b4>
    a8d8:	ldr	r2, [fp, #-140]	; 0xffffff74
    a8dc:	ldr	r3, [fp, #-144]	; 0xffffff70
    a8e0:	cmp	r2, r3
    a8e4:	beq	d940 <MyGame_Example_Monster_parse_json_table+0x38b4>
    a8e8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
    a8ec:	mov	r1, r3
    a8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a8f4:	bl	28 <flatbuffers_uint8_write_to_pe>
    a8f8:	sub	r3, fp, #28
    a8fc:	ldr	r2, [fp, #-144]	; 0xffffff70
    a900:	ldr	r1, [fp, #-140]	; 0xffffff74
    a904:	ldr	r0, [fp, #-136]	; 0xffffff78
    a908:	bl	cb8 <flatcc_json_parser_array_end>
    a90c:	str	r0, [fp, #-140]	; 0xffffff74
    a910:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a914:	cmp	r3, #0
    a918:	bne	a844 <MyGame_Example_Monster_parse_json_table+0x7b8>
    a91c:	ldr	r3, [fp, #-136]	; 0xffffff78
    a920:	ldr	r3, [r3]
    a924:	mov	r0, r3
    a928:	bl	0 <flatcc_builder_end_vector>
    a92c:	mov	r3, r0
    a930:	str	r3, [fp, #-32]	; 0xffffffe0
    a934:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a938:	cmp	r3, #0
    a93c:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    a940:	ldr	r3, [fp, #-136]	; 0xffffff78
    a944:	ldr	r3, [r3]
    a948:	mov	r1, #5
    a94c:	mov	r0, r3
    a950:	bl	0 <flatcc_builder_table_add_offset>
    a954:	str	r0, [fp, #-20]	; 0xffffffec
    a958:	ldr	r3, [fp, #-20]	; 0xffffffec
    a95c:	cmp	r3, #0
    a960:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    a964:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a968:	ldr	r3, [fp, #-20]	; 0xffffffec
    a96c:	str	r2, [r3]
    a970:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a974:	ldr	r2, [fp, #-144]	; 0xffffff70
    a978:	ldr	r1, [fp, #-140]	; 0xffffff74
    a97c:	ldr	r0, [fp, #-136]	; 0xffffff78
    a980:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a984:	str	r0, [fp, #-140]	; 0xffffff74
    a988:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a98c:	ldr	r2, [fp, #-144]	; 0xffffff70
    a990:	ldr	r1, [fp, #-140]	; 0xffffff74
    a994:	ldr	r0, [fp, #-136]	; 0xffffff78
    a998:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a99c:	str	r0, [fp, #-140]	; 0xffffff74
    a9a0:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    a9a4:	nop			; (mov r0, r0)
    a9a8:	.word	0x6e746f71
    a9ac:	.word	0x696e7665
    a9b0:	.word	0x6e746f72
    a9b4:	.word	0x696e7665
    a9b8:	.word	0xffff0000
    a9bc:	.word	0x68700000
    a9c0:	.word	0x000001b4
    a9c4:	.word	0x000001c0
    a9c8:	ldrd	r2, [fp, #-12]
    a9cc:	mov	r0, #0
    a9d0:	mvn	r1, #0
    a9d4:	and	r2, r2, r0
    a9d8:	and	r3, r3, r1
    a9dc:	add	r1, pc, #956	; 0x3bc
    a9e0:	ldrd	r0, [r1]
    a9e4:	cmp	r3, r1
    a9e8:	cmpeq	r2, r0
    a9ec:	bne	ab14 <MyGame_Example_Monster_parse_json_table+0xa88>
    a9f0:	ldr	r3, [fp, #-140]	; 0xffffff74
    a9f4:	str	r3, [fp, #-16]
    a9f8:	mov	r3, #4
    a9fc:	ldr	r2, [fp, #-144]	; 0xffffff70
    aa00:	ldr	r1, [fp, #-16]
    aa04:	ldr	r0, [fp, #-136]	; 0xffffff78
    aa08:	bl	e20 <flatcc_json_parser_match_symbol>
    aa0c:	str	r0, [fp, #-140]	; 0xffffff74
    aa10:	ldr	r2, [fp, #-16]
    aa14:	ldr	r3, [fp, #-140]	; 0xffffff74
    aa18:	cmp	r2, r3
    aa1c:	beq	aafc <MyGame_Example_Monster_parse_json_table+0xa70>
    aa20:	mov	r3, #0
    aa24:	strh	r3, [fp, #-44]	; 0xffffffd4
    aa28:	ldr	r3, [fp, #-140]	; 0xffffff74
    aa2c:	str	r3, [fp, #-16]
    aa30:	sub	r3, fp, #44	; 0x2c
    aa34:	ldr	r2, [fp, #-144]	; 0xffffff70
    aa38:	ldr	r1, [fp, #-16]
    aa3c:	ldr	r0, [fp, #-136]	; 0xffffff78
    aa40:	bl	1b28 <flatcc_json_parser_int16>
    aa44:	str	r0, [fp, #-140]	; 0xffffff74
    aa48:	ldr	r2, [fp, #-16]
    aa4c:	ldr	r3, [fp, #-140]	; 0xffffff74
    aa50:	cmp	r2, r3
    aa54:	bne	aaa0 <MyGame_Example_Monster_parse_json_table+0xa14>
    aa58:	ldr	r3, [fp, #-140]	; 0xffffff74
    aa5c:	str	r3, [fp, #-16]
    aa60:	sub	r3, fp, #44	; 0x2c
    aa64:	str	r3, [sp]
    aa68:	ldr	r3, [pc, #872]	; add8 <MyGame_Example_Monster_parse_json_table+0xd4c>
    aa6c:	ldr	r2, [fp, #-144]	; 0xffffff70
    aa70:	ldr	r1, [fp, #-16]
    aa74:	ldr	r0, [fp, #-136]	; 0xffffff78
    aa78:	bl	28b4 <flatcc_json_parser_symbolic_int16>
    aa7c:	str	r0, [fp, #-140]	; 0xffffff74
    aa80:	ldr	r2, [fp, #-140]	; 0xffffff74
    aa84:	ldr	r3, [fp, #-16]
    aa88:	cmp	r2, r3
    aa8c:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    aa90:	ldr	r2, [fp, #-140]	; 0xffffff74
    aa94:	ldr	r3, [fp, #-144]	; 0xffffff70
    aa98:	cmp	r2, r3
    aa9c:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    aaa0:	ldrsh	r3, [fp, #-44]	; 0xffffffd4
    aaa4:	cmp	r3, #150	; 0x96
    aaa8:	bne	aac0 <MyGame_Example_Monster_parse_json_table+0xa34>
    aaac:	ldr	r3, [fp, #-136]	; 0xffffff78
    aab0:	ldr	r3, [r3, #8]
    aab4:	and	r3, r3, #2
    aab8:	cmp	r3, #0
    aabc:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    aac0:	ldr	r3, [fp, #-136]	; 0xffffff78
    aac4:	ldr	r0, [r3]
    aac8:	mov	r3, #2
    aacc:	mov	r2, #2
    aad0:	mov	r1, #1
    aad4:	bl	0 <flatcc_builder_table_add>
    aad8:	str	r0, [fp, #-24]	; 0xffffffe8
    aadc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    aae0:	cmp	r3, #0
    aae4:	beq	d948 <MyGame_Example_Monster_parse_json_table+0x38bc>
    aae8:	ldrsh	r3, [fp, #-44]	; 0xffffffd4
    aaec:	mov	r1, r3
    aaf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aaf4:	bl	218 <flatbuffers_int16_write_to_pe>
    aaf8:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    aafc:	ldr	r2, [fp, #-144]	; 0xffffff70
    ab00:	ldr	r1, [fp, #-140]	; 0xffffff74
    ab04:	ldr	r0, [fp, #-136]	; 0xffffff78
    ab08:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ab0c:	str	r0, [fp, #-140]	; 0xffffff74
    ab10:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ab14:	ldr	r2, [fp, #-144]	; 0xffffff70
    ab18:	ldr	r1, [fp, #-140]	; 0xffffff74
    ab1c:	ldr	r0, [fp, #-136]	; 0xffffff78
    ab20:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ab24:	str	r0, [fp, #-140]	; 0xffffff74
    ab28:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ab2c:	ldrd	r2, [fp, #-12]
    ab30:	add	r1, pc, #624	; 0x270
    ab34:	ldrd	r0, [r1]
    ab38:	cmp	r3, r1
    ab3c:	cmpeq	r2, r0
    ab40:	bhi	aea8 <MyGame_Example_Monster_parse_json_table+0xe1c>
    ab44:	ldrd	r2, [fp, #-12]
    ab48:	add	r1, pc, #608	; 0x260
    ab4c:	ldrd	r0, [r1]
    ab50:	cmp	r3, r1
    ab54:	cmpeq	r2, r0
    ab58:	bhi	ac3c <MyGame_Example_Monster_parse_json_table+0xbb0>
    ab5c:	ldrd	r2, [fp, #-12]
    ab60:	mov	r0, #0
    ab64:	mvn	r1, #0
    ab68:	and	r2, r2, r0
    ab6c:	and	r3, r3, r1
    ab70:	add	r1, pc, #576	; 0x240
    ab74:	ldrd	r0, [r1]
    ab78:	cmp	r3, r1
    ab7c:	cmpeq	r2, r0
    ab80:	bne	ac24 <MyGame_Example_Monster_parse_json_table+0xb98>
    ab84:	ldr	r3, [fp, #-140]	; 0xffffff74
    ab88:	str	r3, [fp, #-16]
    ab8c:	mov	r3, #4
    ab90:	ldr	r2, [fp, #-144]	; 0xffffff70
    ab94:	ldr	r1, [fp, #-16]
    ab98:	ldr	r0, [fp, #-136]	; 0xffffff78
    ab9c:	bl	e20 <flatcc_json_parser_match_symbol>
    aba0:	str	r0, [fp, #-140]	; 0xffffff74
    aba4:	ldr	r2, [fp, #-16]
    aba8:	ldr	r3, [fp, #-140]	; 0xffffff74
    abac:	cmp	r2, r3
    abb0:	beq	ac0c <MyGame_Example_Monster_parse_json_table+0xb80>
    abb4:	sub	r3, fp, #32
    abb8:	ldr	r2, [fp, #-144]	; 0xffffff70
    abbc:	ldr	r1, [fp, #-140]	; 0xffffff74
    abc0:	ldr	r0, [fp, #-136]	; 0xffffff78
    abc4:	bl	0 <flatcc_json_parser_build_string>
    abc8:	str	r0, [fp, #-140]	; 0xffffff74
    abcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    abd0:	cmp	r3, #0
    abd4:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    abd8:	ldr	r3, [fp, #-136]	; 0xffffff78
    abdc:	ldr	r3, [r3]
    abe0:	mov	r1, #3
    abe4:	mov	r0, r3
    abe8:	bl	0 <flatcc_builder_table_add_offset>
    abec:	str	r0, [fp, #-20]	; 0xffffffec
    abf0:	ldr	r3, [fp, #-20]	; 0xffffffec
    abf4:	cmp	r3, #0
    abf8:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    abfc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ac00:	ldr	r3, [fp, #-20]	; 0xffffffec
    ac04:	str	r2, [r3]
    ac08:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ac0c:	ldr	r2, [fp, #-144]	; 0xffffff70
    ac10:	ldr	r1, [fp, #-140]	; 0xffffff74
    ac14:	ldr	r0, [fp, #-136]	; 0xffffff78
    ac18:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ac1c:	str	r0, [fp, #-140]	; 0xffffff74
    ac20:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ac24:	ldr	r2, [fp, #-144]	; 0xffffff70
    ac28:	ldr	r1, [fp, #-140]	; 0xffffff74
    ac2c:	ldr	r0, [fp, #-136]	; 0xffffff78
    ac30:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ac34:	str	r0, [fp, #-140]	; 0xffffff74
    ac38:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ac3c:	ldrd	r2, [fp, #-12]
    ac40:	add	r1, pc, #376	; 0x178
    ac44:	ldrd	r0, [r1]
    ac48:	cmp	r3, r1
    ac4c:	cmpeq	r2, r0
    ac50:	bne	addc <MyGame_Example_Monster_parse_json_table+0xd50>
    ac54:	ldr	r3, [fp, #-140]	; 0xffffff74
    ac58:	add	r3, r3, #8
    ac5c:	str	r3, [fp, #-140]	; 0xffffff74
    ac60:	ldr	r1, [fp, #-144]	; 0xffffff70
    ac64:	ldr	r0, [fp, #-140]	; 0xffffff74
    ac68:	bl	854 <flatcc_json_parser_symbol_part>
    ac6c:	strd	r0, [fp, #-12]
    ac70:	ldrd	r2, [fp, #-12]
    ac74:	add	r1, pc, #332	; 0x14c
    ac78:	ldrd	r0, [r1]
    ac7c:	cmp	r3, r1
    ac80:	cmpeq	r2, r0
    ac84:	bne	ad84 <MyGame_Example_Monster_parse_json_table+0xcf8>
    ac88:	ldr	r3, [fp, #-140]	; 0xffffff74
    ac8c:	add	r3, r3, #8
    ac90:	str	r3, [fp, #-140]	; 0xffffff74
    ac94:	ldr	r1, [fp, #-144]	; 0xffffff70
    ac98:	ldr	r0, [fp, #-140]	; 0xffffff74
    ac9c:	bl	854 <flatcc_json_parser_symbol_part>
    aca0:	strd	r0, [fp, #-12]
    aca4:	ldrd	r2, [fp, #-12]
    aca8:	mov	r0, #-16777216	; 0xff000000
    acac:	mvn	r1, #0
    acb0:	and	r2, r2, r0
    acb4:	and	r3, r3, r1
    acb8:	add	r1, pc, #272	; 0x110
    acbc:	ldrd	r0, [r1]
    acc0:	cmp	r3, r1
    acc4:	cmpeq	r2, r0
    acc8:	bne	ad6c <MyGame_Example_Monster_parse_json_table+0xce0>
    accc:	ldr	r3, [fp, #-140]	; 0xffffff74
    acd0:	str	r3, [fp, #-16]
    acd4:	mov	r3, #5
    acd8:	ldr	r2, [fp, #-144]	; 0xffffff70
    acdc:	ldr	r1, [fp, #-16]
    ace0:	ldr	r0, [fp, #-136]	; 0xffffff78
    ace4:	bl	e20 <flatcc_json_parser_match_symbol>
    ace8:	str	r0, [fp, #-140]	; 0xffffff74
    acec:	ldr	r2, [fp, #-16]
    acf0:	ldr	r3, [fp, #-140]	; 0xffffff74
    acf4:	cmp	r2, r3
    acf8:	beq	ad54 <MyGame_Example_Monster_parse_json_table+0xcc8>
    acfc:	sub	r3, fp, #32
    ad00:	ldr	r2, [fp, #-144]	; 0xffffff70
    ad04:	ldr	r1, [fp, #-140]	; 0xffffff74
    ad08:	ldr	r0, [fp, #-136]	; 0xffffff78
    ad0c:	bl	3f6c <MyGame_InParentNamespace_parse_json_table>
    ad10:	str	r0, [fp, #-140]	; 0xffffff74
    ad14:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ad18:	cmp	r3, #0
    ad1c:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    ad20:	ldr	r3, [fp, #-136]	; 0xffffff78
    ad24:	ldr	r3, [r3]
    ad28:	mov	r1, #34	; 0x22
    ad2c:	mov	r0, r3
    ad30:	bl	0 <flatcc_builder_table_add_offset>
    ad34:	str	r0, [fp, #-20]	; 0xffffffec
    ad38:	ldr	r3, [fp, #-20]	; 0xffffffec
    ad3c:	cmp	r3, #0
    ad40:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    ad44:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ad48:	ldr	r3, [fp, #-20]	; 0xffffffec
    ad4c:	str	r2, [r3]
    ad50:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ad54:	ldr	r2, [fp, #-144]	; 0xffffff70
    ad58:	ldr	r1, [fp, #-140]	; 0xffffff74
    ad5c:	ldr	r0, [fp, #-136]	; 0xffffff78
    ad60:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ad64:	str	r0, [fp, #-140]	; 0xffffff74
    ad68:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ad6c:	ldr	r2, [fp, #-144]	; 0xffffff70
    ad70:	ldr	r1, [fp, #-140]	; 0xffffff74
    ad74:	ldr	r0, [fp, #-136]	; 0xffffff78
    ad78:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ad7c:	str	r0, [fp, #-140]	; 0xffffff74
    ad80:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ad84:	ldr	r2, [fp, #-144]	; 0xffffff70
    ad88:	ldr	r1, [fp, #-140]	; 0xffffff74
    ad8c:	ldr	r0, [fp, #-136]	; 0xffffff78
    ad90:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ad94:	str	r0, [fp, #-140]	; 0xffffff74
    ad98:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ad9c:	nop			; (mov r0, r0)
    ada0:	.word	0x00000000
    ada4:	.word	0x6d616e61
    ada8:	.word	0xffffffff
    adac:	.word	0x74657373
    adb0:	.word	0x6e745f6d
    adb4:	.word	0x70617265
    adb8:	.word	0x00000000
    adbc:	.word	0x6e616d65
    adc0:	.word	0x6e745f6e
    adc4:	.word	0x70617265
    adc8:	.word	0x70616365
    adcc:	.word	0x616d6573
    add0:	.word	0x74000000
    add4:	.word	0x5f746573
    add8:	.word	0x000001cc
    addc:	ldrd	r2, [fp, #-12]
    ade0:	mov	r0, #0
    ade4:	mvn	r1, #255	; 0xff
    ade8:	and	r2, r2, r0
    adec:	and	r3, r3, r1
    adf0:	add	r1, pc, #824	; 0x338
    adf4:	ldrd	r0, [r1]
    adf8:	cmp	r3, r1
    adfc:	cmpeq	r2, r0
    ae00:	bne	ae90 <MyGame_Example_Monster_parse_json_table+0xe04>
    ae04:	ldr	r3, [fp, #-140]	; 0xffffff74
    ae08:	str	r3, [fp, #-16]
    ae0c:	mov	r3, #3
    ae10:	ldr	r2, [fp, #-144]	; 0xffffff70
    ae14:	ldr	r1, [fp, #-16]
    ae18:	ldr	r0, [fp, #-136]	; 0xffffff78
    ae1c:	bl	e20 <flatcc_json_parser_match_symbol>
    ae20:	str	r0, [fp, #-140]	; 0xffffff74
    ae24:	ldr	r2, [fp, #-16]
    ae28:	ldr	r3, [fp, #-140]	; 0xffffff74
    ae2c:	cmp	r2, r3
    ae30:	beq	ae78 <MyGame_Example_Monster_parse_json_table+0xdec>
    ae34:	ldr	r3, [fp, #-136]	; 0xffffff78
    ae38:	ldr	r0, [r3]
    ae3c:	mov	r3, #16
    ae40:	mov	r2, #32
    ae44:	mov	r1, #0
    ae48:	bl	0 <flatcc_builder_table_add>
    ae4c:	str	r0, [fp, #-24]	; 0xffffffe8
    ae50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ae54:	cmp	r3, #0
    ae58:	beq	d950 <MyGame_Example_Monster_parse_json_table+0x38c4>
    ae5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ae60:	ldr	r2, [fp, #-144]	; 0xffffff70
    ae64:	ldr	r1, [fp, #-140]	; 0xffffff74
    ae68:	ldr	r0, [fp, #-136]	; 0xffffff78
    ae6c:	bl	6d44 <MyGame_Example_Vec3_parse_json_struct_inline>
    ae70:	str	r0, [fp, #-140]	; 0xffffff74
    ae74:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ae78:	ldr	r2, [fp, #-144]	; 0xffffff70
    ae7c:	ldr	r1, [fp, #-140]	; 0xffffff74
    ae80:	ldr	r0, [fp, #-136]	; 0xffffff78
    ae84:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ae88:	str	r0, [fp, #-140]	; 0xffffff74
    ae8c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ae90:	ldr	r2, [fp, #-144]	; 0xffffff70
    ae94:	ldr	r1, [fp, #-140]	; 0xffffff74
    ae98:	ldr	r0, [fp, #-136]	; 0xffffff78
    ae9c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aea0:	str	r0, [fp, #-140]	; 0xffffff74
    aea4:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    aea8:	ldrd	r2, [fp, #-12]
    aeac:	mov	r0, #-16777216	; 0xff000000
    aeb0:	mvn	r1, #0
    aeb4:	and	r2, r2, r0
    aeb8:	and	r3, r3, r1
    aebc:	add	r1, pc, #628	; 0x274
    aec0:	ldrd	r0, [r1]
    aec4:	cmp	r3, r1
    aec8:	cmpeq	r2, r0
    aecc:	bne	aff8 <MyGame_Example_Monster_parse_json_table+0xf6c>
    aed0:	ldr	r3, [fp, #-140]	; 0xffffff74
    aed4:	str	r3, [fp, #-16]
    aed8:	mov	r3, #5
    aedc:	ldr	r2, [fp, #-144]	; 0xffffff70
    aee0:	ldr	r1, [fp, #-16]
    aee4:	ldr	r0, [fp, #-136]	; 0xffffff78
    aee8:	bl	e20 <flatcc_json_parser_match_symbol>
    aeec:	str	r0, [fp, #-140]	; 0xffffff74
    aef0:	ldr	r2, [fp, #-16]
    aef4:	ldr	r3, [fp, #-140]	; 0xffffff74
    aef8:	cmp	r2, r3
    aefc:	beq	b084 <MyGame_Example_Monster_parse_json_table+0xff8>
    af00:	ldr	r3, [fp, #-136]	; 0xffffff78
    af04:	ldr	r0, [r3]
    af08:	mvn	r3, #-1073741824	; 0xc0000000
    af0c:	mov	r2, #2
    af10:	mov	r1, #4
    af14:	bl	0 <flatcc_builder_start_vector>
    af18:	mov	r3, r0
    af1c:	cmp	r3, #0
    af20:	bne	d958 <MyGame_Example_Monster_parse_json_table+0x38cc>
    af24:	sub	r3, fp, #28
    af28:	ldr	r2, [fp, #-144]	; 0xffffff70
    af2c:	ldr	r1, [fp, #-140]	; 0xffffff74
    af30:	ldr	r0, [fp, #-136]	; 0xffffff78
    af34:	bl	bd0 <flatcc_json_parser_array_start>
    af38:	str	r0, [fp, #-140]	; 0xffffff74
    af3c:	b	af94 <MyGame_Example_Monster_parse_json_table+0xf08>
    af40:	ldr	r3, [fp, #-136]	; 0xffffff78
    af44:	ldr	r3, [r3]
    af48:	mov	r1, #1
    af4c:	mov	r0, r3
    af50:	bl	0 <flatcc_builder_extend_vector>
    af54:	str	r0, [fp, #-24]	; 0xffffffe8
    af58:	ldr	r3, [fp, #-24]	; 0xffffffe8
    af5c:	cmp	r3, #0
    af60:	beq	d960 <MyGame_Example_Monster_parse_json_table+0x38d4>
    af64:	ldr	r3, [fp, #-24]	; 0xffffffe8
    af68:	ldr	r2, [fp, #-144]	; 0xffffff70
    af6c:	ldr	r1, [fp, #-140]	; 0xffffff74
    af70:	ldr	r0, [fp, #-136]	; 0xffffff78
    af74:	bl	5418 <MyGame_Example_Test_parse_json_struct_inline>
    af78:	str	r0, [fp, #-140]	; 0xffffff74
    af7c:	sub	r3, fp, #28
    af80:	ldr	r2, [fp, #-144]	; 0xffffff70
    af84:	ldr	r1, [fp, #-140]	; 0xffffff74
    af88:	ldr	r0, [fp, #-136]	; 0xffffff78
    af8c:	bl	cb8 <flatcc_json_parser_array_end>
    af90:	str	r0, [fp, #-140]	; 0xffffff74
    af94:	ldr	r3, [fp, #-28]	; 0xffffffe4
    af98:	cmp	r3, #0
    af9c:	bne	af40 <MyGame_Example_Monster_parse_json_table+0xeb4>
    afa0:	ldr	r3, [fp, #-136]	; 0xffffff78
    afa4:	ldr	r3, [r3]
    afa8:	mov	r0, r3
    afac:	bl	0 <flatcc_builder_end_vector>
    afb0:	mov	r3, r0
    afb4:	str	r3, [fp, #-32]	; 0xffffffe0
    afb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    afbc:	cmp	r3, #0
    afc0:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    afc4:	ldr	r3, [fp, #-136]	; 0xffffff78
    afc8:	ldr	r3, [r3]
    afcc:	mov	r1, #9
    afd0:	mov	r0, r3
    afd4:	bl	0 <flatcc_builder_table_add_offset>
    afd8:	str	r0, [fp, #-20]	; 0xffffffec
    afdc:	ldr	r3, [fp, #-20]	; 0xffffffec
    afe0:	cmp	r3, #0
    afe4:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    afe8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    afec:	ldr	r3, [fp, #-20]	; 0xffffffec
    aff0:	str	r2, [r3]
    aff4:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    aff8:	ldrd	r2, [fp, #-12]
    affc:	mov	r0, #0
    b000:	mvn	r1, #0
    b004:	and	r2, r2, r0
    b008:	and	r3, r3, r1
    b00c:	add	r1, pc, #300	; 0x12c
    b010:	ldrd	r0, [r1]
    b014:	cmp	r3, r1
    b018:	cmpeq	r2, r0
    b01c:	bne	b08c <MyGame_Example_Monster_parse_json_table+0x1000>
    b020:	ldr	r3, [fp, #-140]	; 0xffffff74
    b024:	str	r3, [fp, #-16]
    b028:	mov	r3, #4
    b02c:	ldr	r2, [fp, #-144]	; 0xffffff70
    b030:	ldr	r1, [fp, #-16]
    b034:	ldr	r0, [fp, #-136]	; 0xffffff78
    b038:	bl	e20 <flatcc_json_parser_match_symbol>
    b03c:	str	r0, [fp, #-140]	; 0xffffff74
    b040:	ldr	r2, [fp, #-16]
    b044:	ldr	r3, [fp, #-140]	; 0xffffff74
    b048:	cmp	r2, r3
    b04c:	beq	b094 <MyGame_Example_Monster_parse_json_table+0x1008>
    b050:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b054:	ldr	r2, [pc, #244]	; b150 <MyGame_Example_Monster_parse_json_table+0x10c4>
    b058:	str	r2, [sp, #8]
    b05c:	str	r3, [sp, #4]
    b060:	mov	r3, #8
    b064:	str	r3, [sp]
    b068:	mov	r3, #0
    b06c:	ldr	r2, [fp, #-144]	; 0xffffff70
    b070:	ldr	r1, [fp, #-140]	; 0xffffff74
    b074:	ldr	r0, [fp, #-136]	; 0xffffff78
    b078:	bl	0 <flatcc_json_parser_union>
    b07c:	str	r0, [fp, #-140]	; 0xffffff74
    b080:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    b084:	nop			; (mov r0, r0)
    b088:	b	b098 <MyGame_Example_Monster_parse_json_table+0x100c>
    b08c:	nop			; (mov r0, r0)
    b090:	b	b098 <MyGame_Example_Monster_parse_json_table+0x100c>
    b094:	nop			; (mov r0, r0)
    b098:	ldrd	r2, [fp, #-12]
    b09c:	mov	r0, #-16777216	; 0xff000000
    b0a0:	mvn	r1, #0
    b0a4:	and	r2, r2, r0
    b0a8:	and	r3, r3, r1
    b0ac:	add	r1, pc, #148	; 0x94
    b0b0:	ldrd	r0, [r1]
    b0b4:	cmp	r3, r1
    b0b8:	cmpeq	r2, r0
    b0bc:	bne	b20c <MyGame_Example_Monster_parse_json_table+0x1180>
    b0c0:	ldr	r3, [fp, #-140]	; 0xffffff74
    b0c4:	str	r3, [fp, #-16]
    b0c8:	mov	r3, #5
    b0cc:	ldr	r2, [fp, #-144]	; 0xffffff70
    b0d0:	ldr	r1, [fp, #-16]
    b0d4:	ldr	r0, [fp, #-136]	; 0xffffff78
    b0d8:	bl	e20 <flatcc_json_parser_match_symbol>
    b0dc:	str	r0, [fp, #-140]	; 0xffffff74
    b0e0:	ldr	r2, [fp, #-16]
    b0e4:	ldr	r3, [fp, #-140]	; 0xffffff74
    b0e8:	cmp	r2, r3
    b0ec:	beq	b214 <MyGame_Example_Monster_parse_json_table+0x1188>
    b0f0:	ldr	r3, [fp, #-136]	; 0xffffff78
    b0f4:	ldr	r0, [r3]
    b0f8:	mvn	r3, #-1073741824	; 0xc0000000
    b0fc:	mov	r2, #2
    b100:	mov	r1, #4
    b104:	bl	0 <flatcc_builder_start_vector>
    b108:	mov	r3, r0
    b10c:	cmp	r3, #0
    b110:	bne	d968 <MyGame_Example_Monster_parse_json_table+0x38dc>
    b114:	sub	r3, fp, #28
    b118:	ldr	r2, [fp, #-144]	; 0xffffff70
    b11c:	ldr	r1, [fp, #-140]	; 0xffffff74
    b120:	ldr	r0, [fp, #-136]	; 0xffffff78
    b124:	bl	bd0 <flatcc_json_parser_array_start>
    b128:	str	r0, [fp, #-140]	; 0xffffff74
    b12c:	b	b1a8 <MyGame_Example_Monster_parse_json_table+0x111c>
    b130:	.word	0x00000000
    b134:	.word	0x706f7300
    b138:	.word	0x34000000
    b13c:	.word	0x74657374
    b140:	.word	0x00000000
    b144:	.word	0x74657374
    b148:	.word	0x35000000
    b14c:	.word	0x74657374
    b150:	.word	0x00000000
    b154:	ldr	r3, [fp, #-136]	; 0xffffff78
    b158:	ldr	r3, [r3]
    b15c:	mov	r1, #1
    b160:	mov	r0, r3
    b164:	bl	0 <flatcc_builder_extend_vector>
    b168:	str	r0, [fp, #-24]	; 0xffffffe8
    b16c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b170:	cmp	r3, #0
    b174:	beq	d970 <MyGame_Example_Monster_parse_json_table+0x38e4>
    b178:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b17c:	ldr	r2, [fp, #-144]	; 0xffffff70
    b180:	ldr	r1, [fp, #-140]	; 0xffffff74
    b184:	ldr	r0, [fp, #-136]	; 0xffffff78
    b188:	bl	5418 <MyGame_Example_Test_parse_json_struct_inline>
    b18c:	str	r0, [fp, #-140]	; 0xffffff74
    b190:	sub	r3, fp, #28
    b194:	ldr	r2, [fp, #-144]	; 0xffffff70
    b198:	ldr	r1, [fp, #-140]	; 0xffffff74
    b19c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b1a0:	bl	cb8 <flatcc_json_parser_array_end>
    b1a4:	str	r0, [fp, #-140]	; 0xffffff74
    b1a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b1ac:	cmp	r3, #0
    b1b0:	bne	b154 <MyGame_Example_Monster_parse_json_table+0x10c8>
    b1b4:	ldr	r3, [fp, #-136]	; 0xffffff78
    b1b8:	ldr	r3, [r3]
    b1bc:	mov	r0, r3
    b1c0:	bl	0 <flatcc_builder_end_vector>
    b1c4:	mov	r3, r0
    b1c8:	str	r3, [fp, #-32]	; 0xffffffe0
    b1cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b1d0:	cmp	r3, #0
    b1d4:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    b1d8:	ldr	r3, [fp, #-136]	; 0xffffff78
    b1dc:	ldr	r3, [r3]
    b1e0:	mov	r1, #31
    b1e4:	mov	r0, r3
    b1e8:	bl	0 <flatcc_builder_table_add_offset>
    b1ec:	str	r0, [fp, #-20]	; 0xffffffec
    b1f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    b1f4:	cmp	r3, #0
    b1f8:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    b1fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b200:	ldr	r3, [fp, #-20]	; 0xffffffec
    b204:	str	r2, [r3]
    b208:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    b20c:	nop			; (mov r0, r0)
    b210:	b	b218 <MyGame_Example_Monster_parse_json_table+0x118c>
    b214:	nop			; (mov r0, r0)
    b218:	ldrd	r2, [fp, #-12]
    b21c:	add	r1, pc, #804	; 0x324
    b220:	ldrd	r0, [r1]
    b224:	cmp	r3, r1
    b228:	cmpeq	r2, r0
    b22c:	bne	b308 <MyGame_Example_Monster_parse_json_table+0x127c>
    b230:	ldr	r3, [fp, #-140]	; 0xffffff74
    b234:	add	r3, r3, #8
    b238:	str	r3, [fp, #-140]	; 0xffffff74
    b23c:	ldr	r1, [fp, #-144]	; 0xffffff70
    b240:	ldr	r0, [fp, #-140]	; 0xffffff74
    b244:	bl	854 <flatcc_json_parser_symbol_part>
    b248:	strd	r0, [fp, #-12]
    b24c:	ldrd	r2, [fp, #-12]
    b250:	mov	r0, #0
    b254:	mov	r1, #-16777216	; 0xff000000
    b258:	and	r2, r2, r0
    b25c:	and	r3, r3, r1
    b260:	cmp	r3, #1694498816	; 0x65000000
    b264:	cmpeq	r2, #0
    b268:	bne	b2f0 <MyGame_Example_Monster_parse_json_table+0x1264>
    b26c:	ldr	r3, [fp, #-140]	; 0xffffff74
    b270:	str	r3, [fp, #-16]
    b274:	mov	r3, #1
    b278:	ldr	r2, [fp, #-144]	; 0xffffff70
    b27c:	ldr	r1, [fp, #-16]
    b280:	ldr	r0, [fp, #-136]	; 0xffffff78
    b284:	bl	e20 <flatcc_json_parser_match_symbol>
    b288:	str	r0, [fp, #-140]	; 0xffffff74
    b28c:	ldr	r2, [fp, #-16]
    b290:	ldr	r3, [fp, #-140]	; 0xffffff74
    b294:	cmp	r2, r3
    b298:	beq	b2d8 <MyGame_Example_Monster_parse_json_table+0x124c>
    b29c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b2a0:	ldr	r2, [pc, #712]	; b570 <MyGame_Example_Monster_parse_json_table+0x14e4>
    b2a4:	str	r2, [sp, #12]
    b2a8:	ldr	r2, [pc, #708]	; b574 <MyGame_Example_Monster_parse_json_table+0x14e8>
    b2ac:	str	r2, [sp, #8]
    b2b0:	str	r3, [sp, #4]
    b2b4:	mov	r3, #8
    b2b8:	str	r3, [sp]
    b2bc:	mov	r3, #0
    b2c0:	ldr	r2, [fp, #-144]	; 0xffffff70
    b2c4:	ldr	r1, [fp, #-140]	; 0xffffff74
    b2c8:	ldr	r0, [fp, #-136]	; 0xffffff78
    b2cc:	bl	0 <flatcc_json_parser_union_type>
    b2d0:	str	r0, [fp, #-140]	; 0xffffff74
    b2d4:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    b2d8:	ldr	r2, [fp, #-144]	; 0xffffff70
    b2dc:	ldr	r1, [fp, #-140]	; 0xffffff74
    b2e0:	ldr	r0, [fp, #-136]	; 0xffffff78
    b2e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b2e8:	str	r0, [fp, #-140]	; 0xffffff74
    b2ec:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    b2f0:	ldr	r2, [fp, #-144]	; 0xffffff70
    b2f4:	ldr	r1, [fp, #-140]	; 0xffffff74
    b2f8:	ldr	r0, [fp, #-136]	; 0xffffff78
    b2fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b300:	str	r0, [fp, #-140]	; 0xffffff74
    b304:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    b308:	ldr	r2, [fp, #-144]	; 0xffffff70
    b30c:	ldr	r1, [fp, #-140]	; 0xffffff74
    b310:	ldr	r0, [fp, #-136]	; 0xffffff78
    b314:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b318:	str	r0, [fp, #-140]	; 0xffffff74
    b31c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    b320:	ldrd	r2, [fp, #-12]
    b324:	add	r1, pc, #548	; 0x224
    b328:	ldrd	r0, [r1]
    b32c:	cmp	r3, r1
    b330:	cmpeq	r2, r0
    b334:	bhi	c344 <MyGame_Example_Monster_parse_json_table+0x22b8>
    b338:	ldrd	r2, [fp, #-12]
    b33c:	add	r1, pc, #532	; 0x214
    b340:	ldrd	r0, [r1]
    b344:	cmp	r3, r1
    b348:	cmpeq	r2, r0
    b34c:	bne	bc74 <MyGame_Example_Monster_parse_json_table+0x1be8>
    b350:	ldr	r3, [fp, #-140]	; 0xffffff74
    b354:	add	r3, r3, #8
    b358:	str	r3, [fp, #-140]	; 0xffffff74
    b35c:	ldr	r1, [fp, #-144]	; 0xffffff70
    b360:	ldr	r0, [fp, #-140]	; 0xffffff74
    b364:	bl	854 <flatcc_json_parser_symbol_part>
    b368:	strd	r0, [fp, #-12]
    b36c:	ldrd	r2, [fp, #-12]
    b370:	add	r1, pc, #488	; 0x1e8
    b374:	ldrd	r0, [r1]
    b378:	cmp	r3, r1
    b37c:	cmpeq	r2, r0
    b380:	bhi	b74c <MyGame_Example_Monster_parse_json_table+0x16c0>
    b384:	ldrd	r2, [fp, #-12]
    b388:	add	r1, pc, #472	; 0x1d8
    b38c:	ldrd	r0, [r1]
    b390:	cmp	r3, r1
    b394:	cmpeq	r2, r0
    b398:	bne	b53c <MyGame_Example_Monster_parse_json_table+0x14b0>
    b39c:	ldr	r3, [fp, #-140]	; 0xffffff74
    b3a0:	str	r3, [fp, #-16]
    b3a4:	mov	r3, #8
    b3a8:	ldr	r2, [fp, #-144]	; 0xffffff70
    b3ac:	ldr	r1, [fp, #-16]
    b3b0:	ldr	r0, [fp, #-136]	; 0xffffff78
    b3b4:	bl	e20 <flatcc_json_parser_match_symbol>
    b3b8:	str	r0, [fp, #-140]	; 0xffffff74
    b3bc:	ldr	r2, [fp, #-16]
    b3c0:	ldr	r3, [fp, #-140]	; 0xffffff74
    b3c4:	cmp	r2, r3
    b3c8:	beq	b57c <MyGame_Example_Monster_parse_json_table+0x14f0>
    b3cc:	ldr	r3, [fp, #-136]	; 0xffffff78
    b3d0:	ldr	r0, [r3]
    b3d4:	mvn	r3, #0
    b3d8:	mov	r2, #1
    b3dc:	mov	r1, #1
    b3e0:	bl	0 <flatcc_builder_start_vector>
    b3e4:	mov	r3, r0
    b3e8:	cmp	r3, #0
    b3ec:	bne	d978 <MyGame_Example_Monster_parse_json_table+0x38ec>
    b3f0:	sub	r3, fp, #28
    b3f4:	ldr	r2, [fp, #-144]	; 0xffffff70
    b3f8:	ldr	r1, [fp, #-140]	; 0xffffff74
    b3fc:	ldr	r0, [fp, #-136]	; 0xffffff78
    b400:	bl	bd0 <flatcc_json_parser_array_start>
    b404:	str	r0, [fp, #-140]	; 0xffffff74
    b408:	b	b4d8 <MyGame_Example_Monster_parse_json_table+0x144c>
    b40c:	mov	r3, #0
    b410:	strb	r3, [fp, #-45]	; 0xffffffd3
    b414:	ldr	r3, [fp, #-136]	; 0xffffff78
    b418:	ldr	r3, [r3]
    b41c:	mov	r1, #1
    b420:	mov	r0, r3
    b424:	bl	0 <flatcc_builder_extend_vector>
    b428:	str	r0, [fp, #-24]	; 0xffffffe8
    b42c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b430:	cmp	r3, #0
    b434:	beq	d980 <MyGame_Example_Monster_parse_json_table+0x38f4>
    b438:	ldr	r3, [fp, #-140]	; 0xffffff74
    b43c:	str	r3, [fp, #-16]
    b440:	sub	r3, fp, #45	; 0x2d
    b444:	ldr	r2, [fp, #-144]	; 0xffffff70
    b448:	ldr	r1, [fp, #-16]
    b44c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b450:	bl	1cc8 <flatcc_json_parser_bool>
    b454:	str	r0, [fp, #-140]	; 0xffffff74
    b458:	ldr	r2, [fp, #-16]
    b45c:	ldr	r3, [fp, #-140]	; 0xffffff74
    b460:	cmp	r2, r3
    b464:	bne	b4b0 <MyGame_Example_Monster_parse_json_table+0x1424>
    b468:	ldr	r3, [fp, #-140]	; 0xffffff74
    b46c:	str	r3, [fp, #-16]
    b470:	sub	r3, fp, #45	; 0x2d
    b474:	str	r3, [sp]
    b478:	ldr	r3, [pc, #248]	; b578 <MyGame_Example_Monster_parse_json_table+0x14ec>
    b47c:	ldr	r2, [fp, #-144]	; 0xffffff70
    b480:	ldr	r1, [fp, #-16]
    b484:	ldr	r0, [fp, #-136]	; 0xffffff78
    b488:	bl	2c6c <flatcc_json_parser_symbolic_bool>
    b48c:	str	r0, [fp, #-140]	; 0xffffff74
    b490:	ldr	r2, [fp, #-140]	; 0xffffff74
    b494:	ldr	r3, [fp, #-16]
    b498:	cmp	r2, r3
    b49c:	beq	d980 <MyGame_Example_Monster_parse_json_table+0x38f4>
    b4a0:	ldr	r2, [fp, #-140]	; 0xffffff74
    b4a4:	ldr	r3, [fp, #-144]	; 0xffffff70
    b4a8:	cmp	r2, r3
    b4ac:	beq	d980 <MyGame_Example_Monster_parse_json_table+0x38f4>
    b4b0:	ldrb	r3, [fp, #-45]	; 0xffffffd3
    b4b4:	mov	r1, r3
    b4b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b4bc:	bl	410 <flatbuffers_bool_write_to_pe>
    b4c0:	sub	r3, fp, #28
    b4c4:	ldr	r2, [fp, #-144]	; 0xffffff70
    b4c8:	ldr	r1, [fp, #-140]	; 0xffffff74
    b4cc:	ldr	r0, [fp, #-136]	; 0xffffff78
    b4d0:	bl	cb8 <flatcc_json_parser_array_end>
    b4d4:	str	r0, [fp, #-140]	; 0xffffff74
    b4d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b4dc:	cmp	r3, #0
    b4e0:	bne	b40c <MyGame_Example_Monster_parse_json_table+0x1380>
    b4e4:	ldr	r3, [fp, #-136]	; 0xffffff78
    b4e8:	ldr	r3, [r3]
    b4ec:	mov	r0, r3
    b4f0:	bl	0 <flatcc_builder_end_vector>
    b4f4:	mov	r3, r0
    b4f8:	str	r3, [fp, #-32]	; 0xffffffe0
    b4fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b500:	cmp	r3, #0
    b504:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    b508:	ldr	r3, [fp, #-136]	; 0xffffff78
    b50c:	ldr	r3, [r3]
    b510:	mov	r1, #24
    b514:	mov	r0, r3
    b518:	bl	0 <flatcc_builder_table_add_offset>
    b51c:	str	r0, [fp, #-20]	; 0xffffffec
    b520:	ldr	r3, [fp, #-20]	; 0xffffffec
    b524:	cmp	r3, #0
    b528:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    b52c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b530:	ldr	r3, [fp, #-20]	; 0xffffffec
    b534:	str	r2, [r3]
    b538:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    b53c:	nop			; (mov r0, r0)
    b540:	b	b580 <MyGame_Example_Monster_parse_json_table+0x14f4>
    b544:	nop			; (mov r0, r0)
    b548:	.word	0x5f747970
    b54c:	.word	0x74657374
    b550:	.word	0x6632ffff
    b554:	.word	0x74657374
    b558:	.word	0x61727261
    b55c:	.word	0x74657374
    b560:	.word	0x7472696d
    b564:	.word	0x796f6673
    b568:	.word	0x6f6f6c73
    b56c:	.word	0x796f6662
    b570:	.word	0x00000000
    b574:	.word	0x000001d8
    b578:	.word	0x000001e8
    b57c:	nop			; (mov r0, r0)
    b580:	ldrd	r2, [fp, #-12]
    b584:	add	r1, pc, #876	; 0x36c
    b588:	ldrd	r0, [r1]
    b58c:	cmp	r3, r1
    b590:	cmpeq	r2, r0
    b594:	bne	b734 <MyGame_Example_Monster_parse_json_table+0x16a8>
    b598:	ldr	r3, [fp, #-140]	; 0xffffff74
    b59c:	add	r3, r3, #8
    b5a0:	str	r3, [fp, #-140]	; 0xffffff74
    b5a4:	ldr	r1, [fp, #-144]	; 0xffffff70
    b5a8:	ldr	r0, [fp, #-140]	; 0xffffff74
    b5ac:	bl	854 <flatcc_json_parser_symbol_part>
    b5b0:	strd	r0, [fp, #-12]
    b5b4:	ldrd	r2, [fp, #-12]
    b5b8:	mvn	r0, #255	; 0xff
    b5bc:	mvn	r1, #0
    b5c0:	and	r2, r2, r0
    b5c4:	and	r3, r3, r1
    b5c8:	add	r1, pc, #816	; 0x330
    b5cc:	ldrd	r0, [r1]
    b5d0:	cmp	r3, r1
    b5d4:	cmpeq	r2, r0
    b5d8:	bne	b71c <MyGame_Example_Monster_parse_json_table+0x1690>
    b5dc:	ldr	r3, [fp, #-140]	; 0xffffff74
    b5e0:	str	r3, [fp, #-16]
    b5e4:	mov	r3, #7
    b5e8:	ldr	r2, [fp, #-144]	; 0xffffff70
    b5ec:	ldr	r1, [fp, #-16]
    b5f0:	ldr	r0, [fp, #-136]	; 0xffffff78
    b5f4:	bl	e20 <flatcc_json_parser_match_symbol>
    b5f8:	str	r0, [fp, #-140]	; 0xffffff74
    b5fc:	ldr	r2, [fp, #-16]
    b600:	ldr	r3, [fp, #-140]	; 0xffffff74
    b604:	cmp	r2, r3
    b608:	beq	b704 <MyGame_Example_Monster_parse_json_table+0x1678>
    b60c:	ldr	r3, [fp, #-136]	; 0xffffff78
    b610:	ldr	r0, [r3]
    b614:	mvn	r3, #-536870912	; 0xe0000000
    b618:	mov	r2, #4
    b61c:	mov	r1, #8
    b620:	bl	0 <flatcc_builder_start_vector>
    b624:	mov	r3, r0
    b628:	cmp	r3, #0
    b62c:	bne	d988 <MyGame_Example_Monster_parse_json_table+0x38fc>
    b630:	sub	r3, fp, #28
    b634:	ldr	r2, [fp, #-144]	; 0xffffff70
    b638:	ldr	r1, [fp, #-140]	; 0xffffff74
    b63c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b640:	bl	bd0 <flatcc_json_parser_array_start>
    b644:	str	r0, [fp, #-140]	; 0xffffff74
    b648:	b	b6a0 <MyGame_Example_Monster_parse_json_table+0x1614>
    b64c:	ldr	r3, [fp, #-136]	; 0xffffff78
    b650:	ldr	r3, [r3]
    b654:	mov	r1, #1
    b658:	mov	r0, r3
    b65c:	bl	0 <flatcc_builder_extend_vector>
    b660:	str	r0, [fp, #-24]	; 0xffffffe8
    b664:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b668:	cmp	r3, #0
    b66c:	beq	d990 <MyGame_Example_Monster_parse_json_table+0x3904>
    b670:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b674:	ldr	r2, [fp, #-144]	; 0xffffff70
    b678:	ldr	r1, [fp, #-140]	; 0xffffff74
    b67c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b680:	bl	7570 <MyGame_Example_Ability_parse_json_struct_inline>
    b684:	str	r0, [fp, #-140]	; 0xffffff74
    b688:	sub	r3, fp, #28
    b68c:	ldr	r2, [fp, #-144]	; 0xffffff70
    b690:	ldr	r1, [fp, #-140]	; 0xffffff74
    b694:	ldr	r0, [fp, #-136]	; 0xffffff78
    b698:	bl	cb8 <flatcc_json_parser_array_end>
    b69c:	str	r0, [fp, #-140]	; 0xffffff74
    b6a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b6a4:	cmp	r3, #0
    b6a8:	bne	b64c <MyGame_Example_Monster_parse_json_table+0x15c0>
    b6ac:	ldr	r3, [fp, #-136]	; 0xffffff78
    b6b0:	ldr	r3, [r3]
    b6b4:	mov	r0, r3
    b6b8:	bl	0 <flatcc_builder_end_vector>
    b6bc:	mov	r3, r0
    b6c0:	str	r3, [fp, #-32]	; 0xffffffe0
    b6c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b6c8:	cmp	r3, #0
    b6cc:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    b6d0:	ldr	r3, [fp, #-136]	; 0xffffff78
    b6d4:	ldr	r3, [r3]
    b6d8:	mov	r1, #29
    b6dc:	mov	r0, r3
    b6e0:	bl	0 <flatcc_builder_table_add_offset>
    b6e4:	str	r0, [fp, #-20]	; 0xffffffec
    b6e8:	ldr	r3, [fp, #-20]	; 0xffffffec
    b6ec:	cmp	r3, #0
    b6f0:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    b6f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b6f8:	ldr	r3, [fp, #-20]	; 0xffffffec
    b6fc:	str	r2, [r3]
    b700:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    b704:	ldr	r2, [fp, #-144]	; 0xffffff70
    b708:	ldr	r1, [fp, #-140]	; 0xffffff74
    b70c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b710:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b714:	str	r0, [fp, #-140]	; 0xffffff74
    b718:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    b71c:	ldr	r2, [fp, #-144]	; 0xffffff70
    b720:	ldr	r1, [fp, #-140]	; 0xffffff74
    b724:	ldr	r0, [fp, #-136]	; 0xffffff78
    b728:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b72c:	str	r0, [fp, #-140]	; 0xffffff74
    b730:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    b734:	ldr	r2, [fp, #-144]	; 0xffffff70
    b738:	ldr	r1, [fp, #-140]	; 0xffffff74
    b73c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b740:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b744:	str	r0, [fp, #-140]	; 0xffffff74
    b748:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    b74c:	ldrd	r2, [fp, #-12]
    b750:	add	r1, pc, #432	; 0x1b0
    b754:	ldrd	r0, [r1]
    b758:	cmp	r3, r1
    b75c:	cmpeq	r2, r0
    b760:	bne	baa0 <MyGame_Example_Monster_parse_json_table+0x1a14>
    b764:	ldr	r3, [fp, #-140]	; 0xffffff74
    b768:	add	r3, r3, #8
    b76c:	str	r3, [fp, #-140]	; 0xffffff74
    b770:	ldr	r1, [fp, #-144]	; 0xffffff70
    b774:	ldr	r0, [fp, #-140]	; 0xffffff74
    b778:	bl	854 <flatcc_json_parser_symbol_part>
    b77c:	strd	r0, [fp, #-12]
    b780:	ldrd	r2, [fp, #-12]
    b784:	mov	r0, #0
    b788:	ldr	r1, [pc, #384]	; b910 <MyGame_Example_Monster_parse_json_table+0x1884>
    b78c:	and	r2, r2, r0
    b790:	and	r3, r3, r1
    b794:	mov	r0, #0
    b798:	ldr	r1, [pc, #372]	; b914 <MyGame_Example_Monster_parse_json_table+0x1888>
    b79c:	cmp	r3, r1
    b7a0:	cmpeq	r2, r0
    b7a4:	bne	b918 <MyGame_Example_Monster_parse_json_table+0x188c>
    b7a8:	ldr	r3, [fp, #-140]	; 0xffffff74
    b7ac:	str	r3, [fp, #-16]
    b7b0:	mov	r3, #2
    b7b4:	ldr	r2, [fp, #-144]	; 0xffffff70
    b7b8:	ldr	r1, [fp, #-16]
    b7bc:	ldr	r0, [fp, #-136]	; 0xffffff78
    b7c0:	bl	e20 <flatcc_json_parser_match_symbol>
    b7c4:	str	r0, [fp, #-140]	; 0xffffff74
    b7c8:	ldr	r2, [fp, #-16]
    b7cc:	ldr	r3, [fp, #-140]	; 0xffffff74
    b7d0:	cmp	r2, r3
    b7d4:	beq	b8e0 <MyGame_Example_Monster_parse_json_table+0x1854>
    b7d8:	ldr	r3, [fp, #-136]	; 0xffffff78
    b7dc:	ldr	r3, [r3]
    b7e0:	mov	r0, r3
    b7e4:	bl	0 <flatcc_builder_start_offset_vector>
    b7e8:	mov	r3, r0
    b7ec:	cmp	r3, #0
    b7f0:	bne	d998 <MyGame_Example_Monster_parse_json_table+0x390c>
    b7f4:	sub	r3, fp, #28
    b7f8:	ldr	r2, [fp, #-144]	; 0xffffff70
    b7fc:	ldr	r1, [fp, #-140]	; 0xffffff74
    b800:	ldr	r0, [fp, #-136]	; 0xffffff78
    b804:	bl	bd0 <flatcc_json_parser_array_start>
    b808:	str	r0, [fp, #-140]	; 0xffffff74
    b80c:	b	b87c <MyGame_Example_Monster_parse_json_table+0x17f0>
    b810:	sub	r3, fp, #32
    b814:	ldr	r2, [fp, #-144]	; 0xffffff70
    b818:	ldr	r1, [fp, #-140]	; 0xffffff74
    b81c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b820:	bl	0 <flatcc_json_parser_build_string>
    b824:	str	r0, [fp, #-140]	; 0xffffff74
    b828:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b82c:	cmp	r3, #0
    b830:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    b834:	ldr	r3, [fp, #-136]	; 0xffffff78
    b838:	ldr	r3, [r3]
    b83c:	mov	r1, #1
    b840:	mov	r0, r3
    b844:	bl	0 <flatcc_builder_extend_offset_vector>
    b848:	str	r0, [fp, #-20]	; 0xffffffec
    b84c:	ldr	r3, [fp, #-20]	; 0xffffffec
    b850:	cmp	r3, #0
    b854:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    b858:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b85c:	ldr	r3, [fp, #-20]	; 0xffffffec
    b860:	str	r2, [r3]
    b864:	sub	r3, fp, #28
    b868:	ldr	r2, [fp, #-144]	; 0xffffff70
    b86c:	ldr	r1, [fp, #-140]	; 0xffffff74
    b870:	ldr	r0, [fp, #-136]	; 0xffffff78
    b874:	bl	cb8 <flatcc_json_parser_array_end>
    b878:	str	r0, [fp, #-140]	; 0xffffff74
    b87c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b880:	cmp	r3, #0
    b884:	bne	b810 <MyGame_Example_Monster_parse_json_table+0x1784>
    b888:	ldr	r3, [fp, #-136]	; 0xffffff78
    b88c:	ldr	r3, [r3]
    b890:	mov	r0, r3
    b894:	bl	0 <flatcc_builder_end_offset_vector>
    b898:	mov	r3, r0
    b89c:	str	r3, [fp, #-32]	; 0xffffffe0
    b8a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b8a4:	cmp	r3, #0
    b8a8:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    b8ac:	ldr	r3, [fp, #-136]	; 0xffffff78
    b8b0:	ldr	r3, [r3]
    b8b4:	mov	r1, #28
    b8b8:	mov	r0, r3
    b8bc:	bl	0 <flatcc_builder_table_add_offset>
    b8c0:	str	r0, [fp, #-20]	; 0xffffffec
    b8c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    b8c8:	cmp	r3, #0
    b8cc:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    b8d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b8d4:	ldr	r3, [fp, #-20]	; 0xffffffec
    b8d8:	str	r2, [r3]
    b8dc:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    b8e0:	ldr	r2, [fp, #-144]	; 0xffffff70
    b8e4:	ldr	r1, [fp, #-140]	; 0xffffff74
    b8e8:	ldr	r0, [fp, #-136]	; 0xffffff78
    b8ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b8f0:	str	r0, [fp, #-140]	; 0xffffff74
    b8f4:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    b8f8:	.word	0x6f727465
    b8fc:	.word	0x796f6673
    b900:	.word	0x75637400
    b904:	.word	0x64737472
    b908:	.word	0x7472696e
    b90c:	.word	0x796f6673
    b910:	.word	0xffff0000
    b914:	.word	0x67320000
    b918:	ldrd	r2, [fp, #-12]
    b91c:	mov	r0, #0
    b920:	mov	r1, #-16777216	; 0xff000000
    b924:	and	r2, r2, r0
    b928:	and	r3, r3, r1
    b92c:	cmp	r3, #1728053248	; 0x67000000
    b930:	cmpeq	r2, #0
    b934:	bne	ba88 <MyGame_Example_Monster_parse_json_table+0x19fc>
    b938:	ldr	r3, [fp, #-140]	; 0xffffff74
    b93c:	str	r3, [fp, #-16]
    b940:	mov	r3, #1
    b944:	ldr	r2, [fp, #-144]	; 0xffffff70
    b948:	ldr	r1, [fp, #-16]
    b94c:	ldr	r0, [fp, #-136]	; 0xffffff78
    b950:	bl	e20 <flatcc_json_parser_match_symbol>
    b954:	str	r0, [fp, #-140]	; 0xffffff74
    b958:	ldr	r2, [fp, #-16]
    b95c:	ldr	r3, [fp, #-140]	; 0xffffff74
    b960:	cmp	r2, r3
    b964:	beq	ba70 <MyGame_Example_Monster_parse_json_table+0x19e4>
    b968:	ldr	r3, [fp, #-136]	; 0xffffff78
    b96c:	ldr	r3, [r3]
    b970:	mov	r0, r3
    b974:	bl	0 <flatcc_builder_start_offset_vector>
    b978:	mov	r3, r0
    b97c:	cmp	r3, #0
    b980:	bne	d9a0 <MyGame_Example_Monster_parse_json_table+0x3914>
    b984:	sub	r3, fp, #28
    b988:	ldr	r2, [fp, #-144]	; 0xffffff70
    b98c:	ldr	r1, [fp, #-140]	; 0xffffff74
    b990:	ldr	r0, [fp, #-136]	; 0xffffff78
    b994:	bl	bd0 <flatcc_json_parser_array_start>
    b998:	str	r0, [fp, #-140]	; 0xffffff74
    b99c:	b	ba0c <MyGame_Example_Monster_parse_json_table+0x1980>
    b9a0:	sub	r3, fp, #32
    b9a4:	ldr	r2, [fp, #-144]	; 0xffffff70
    b9a8:	ldr	r1, [fp, #-140]	; 0xffffff74
    b9ac:	ldr	r0, [fp, #-136]	; 0xffffff78
    b9b0:	bl	0 <flatcc_json_parser_build_string>
    b9b4:	str	r0, [fp, #-140]	; 0xffffff74
    b9b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b9bc:	cmp	r3, #0
    b9c0:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    b9c4:	ldr	r3, [fp, #-136]	; 0xffffff78
    b9c8:	ldr	r3, [r3]
    b9cc:	mov	r1, #1
    b9d0:	mov	r0, r3
    b9d4:	bl	0 <flatcc_builder_extend_offset_vector>
    b9d8:	str	r0, [fp, #-20]	; 0xffffffec
    b9dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    b9e0:	cmp	r3, #0
    b9e4:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    b9e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b9ec:	ldr	r3, [fp, #-20]	; 0xffffffec
    b9f0:	str	r2, [r3]
    b9f4:	sub	r3, fp, #28
    b9f8:	ldr	r2, [fp, #-144]	; 0xffffff70
    b9fc:	ldr	r1, [fp, #-140]	; 0xffffff74
    ba00:	ldr	r0, [fp, #-136]	; 0xffffff78
    ba04:	bl	cb8 <flatcc_json_parser_array_end>
    ba08:	str	r0, [fp, #-140]	; 0xffffff74
    ba0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ba10:	cmp	r3, #0
    ba14:	bne	b9a0 <MyGame_Example_Monster_parse_json_table+0x1914>
    ba18:	ldr	r3, [fp, #-136]	; 0xffffff78
    ba1c:	ldr	r3, [r3]
    ba20:	mov	r0, r3
    ba24:	bl	0 <flatcc_builder_end_offset_vector>
    ba28:	mov	r3, r0
    ba2c:	str	r3, [fp, #-32]	; 0xffffffe0
    ba30:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ba34:	cmp	r3, #0
    ba38:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    ba3c:	ldr	r3, [fp, #-136]	; 0xffffff78
    ba40:	ldr	r3, [r3]
    ba44:	mov	r1, #10
    ba48:	mov	r0, r3
    ba4c:	bl	0 <flatcc_builder_table_add_offset>
    ba50:	str	r0, [fp, #-20]	; 0xffffffec
    ba54:	ldr	r3, [fp, #-20]	; 0xffffffec
    ba58:	cmp	r3, #0
    ba5c:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    ba60:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ba64:	ldr	r3, [fp, #-20]	; 0xffffffec
    ba68:	str	r2, [r3]
    ba6c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ba70:	ldr	r2, [fp, #-144]	; 0xffffff70
    ba74:	ldr	r1, [fp, #-140]	; 0xffffff74
    ba78:	ldr	r0, [fp, #-136]	; 0xffffff78
    ba7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ba80:	str	r0, [fp, #-140]	; 0xffffff74
    ba84:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ba88:	ldr	r2, [fp, #-144]	; 0xffffff70
    ba8c:	ldr	r1, [fp, #-140]	; 0xffffff74
    ba90:	ldr	r0, [fp, #-136]	; 0xffffff78
    ba94:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ba98:	str	r0, [fp, #-140]	; 0xffffff74
    ba9c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    baa0:	ldrd	r2, [fp, #-12]
    baa4:	add	r1, pc, #756	; 0x2f4
    baa8:	ldrd	r0, [r1]
    baac:	cmp	r3, r1
    bab0:	cmpeq	r2, r0
    bab4:	bne	bc5c <MyGame_Example_Monster_parse_json_table+0x1bd0>
    bab8:	ldr	r3, [fp, #-140]	; 0xffffff74
    babc:	add	r3, r3, #8
    bac0:	str	r3, [fp, #-140]	; 0xffffff74
    bac4:	ldr	r1, [fp, #-144]	; 0xffffff70
    bac8:	ldr	r0, [fp, #-140]	; 0xffffff74
    bacc:	bl	854 <flatcc_json_parser_symbol_part>
    bad0:	strd	r0, [fp, #-12]
    bad4:	ldrd	r2, [fp, #-12]
    bad8:	mov	r0, #0
    badc:	mov	r1, #-16777216	; 0xff000000
    bae0:	and	r2, r2, r0
    bae4:	and	r3, r3, r1
    bae8:	cmp	r3, #1929379840	; 0x73000000
    baec:	cmpeq	r2, #0
    baf0:	bne	bc44 <MyGame_Example_Monster_parse_json_table+0x1bb8>
    baf4:	ldr	r3, [fp, #-140]	; 0xffffff74
    baf8:	str	r3, [fp, #-16]
    bafc:	mov	r3, #1
    bb00:	ldr	r2, [fp, #-144]	; 0xffffff70
    bb04:	ldr	r1, [fp, #-16]
    bb08:	ldr	r0, [fp, #-136]	; 0xffffff78
    bb0c:	bl	e20 <flatcc_json_parser_match_symbol>
    bb10:	str	r0, [fp, #-140]	; 0xffffff74
    bb14:	ldr	r2, [fp, #-16]
    bb18:	ldr	r3, [fp, #-140]	; 0xffffff74
    bb1c:	cmp	r2, r3
    bb20:	beq	bc2c <MyGame_Example_Monster_parse_json_table+0x1ba0>
    bb24:	ldr	r3, [fp, #-136]	; 0xffffff78
    bb28:	ldr	r3, [r3]
    bb2c:	mov	r0, r3
    bb30:	bl	0 <flatcc_builder_start_offset_vector>
    bb34:	mov	r3, r0
    bb38:	cmp	r3, #0
    bb3c:	bne	d9a8 <MyGame_Example_Monster_parse_json_table+0x391c>
    bb40:	sub	r3, fp, #28
    bb44:	ldr	r2, [fp, #-144]	; 0xffffff70
    bb48:	ldr	r1, [fp, #-140]	; 0xffffff74
    bb4c:	ldr	r0, [fp, #-136]	; 0xffffff78
    bb50:	bl	bd0 <flatcc_json_parser_array_start>
    bb54:	str	r0, [fp, #-140]	; 0xffffff74
    bb58:	b	bbc8 <MyGame_Example_Monster_parse_json_table+0x1b3c>
    bb5c:	sub	r3, fp, #32
    bb60:	ldr	r2, [fp, #-144]	; 0xffffff70
    bb64:	ldr	r1, [fp, #-140]	; 0xffffff74
    bb68:	ldr	r0, [fp, #-136]	; 0xffffff78
    bb6c:	bl	a08c <MyGame_Example_Monster_parse_json_table>
    bb70:	str	r0, [fp, #-140]	; 0xffffff74
    bb74:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bb78:	cmp	r3, #0
    bb7c:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    bb80:	ldr	r3, [fp, #-136]	; 0xffffff78
    bb84:	ldr	r3, [r3]
    bb88:	mov	r1, #1
    bb8c:	mov	r0, r3
    bb90:	bl	0 <flatcc_builder_extend_offset_vector>
    bb94:	str	r0, [fp, #-20]	; 0xffffffec
    bb98:	ldr	r3, [fp, #-20]	; 0xffffffec
    bb9c:	cmp	r3, #0
    bba0:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    bba4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bba8:	ldr	r3, [fp, #-20]	; 0xffffffec
    bbac:	str	r2, [r3]
    bbb0:	sub	r3, fp, #28
    bbb4:	ldr	r2, [fp, #-144]	; 0xffffff70
    bbb8:	ldr	r1, [fp, #-140]	; 0xffffff74
    bbbc:	ldr	r0, [fp, #-136]	; 0xffffff78
    bbc0:	bl	cb8 <flatcc_json_parser_array_end>
    bbc4:	str	r0, [fp, #-140]	; 0xffffff74
    bbc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bbcc:	cmp	r3, #0
    bbd0:	bne	bb5c <MyGame_Example_Monster_parse_json_table+0x1ad0>
    bbd4:	ldr	r3, [fp, #-136]	; 0xffffff78
    bbd8:	ldr	r3, [r3]
    bbdc:	mov	r0, r3
    bbe0:	bl	0 <flatcc_builder_end_offset_vector>
    bbe4:	mov	r3, r0
    bbe8:	str	r3, [fp, #-32]	; 0xffffffe0
    bbec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bbf0:	cmp	r3, #0
    bbf4:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    bbf8:	ldr	r3, [fp, #-136]	; 0xffffff78
    bbfc:	ldr	r3, [r3]
    bc00:	mov	r1, #11
    bc04:	mov	r0, r3
    bc08:	bl	0 <flatcc_builder_table_add_offset>
    bc0c:	str	r0, [fp, #-20]	; 0xffffffec
    bc10:	ldr	r3, [fp, #-20]	; 0xffffffec
    bc14:	cmp	r3, #0
    bc18:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    bc1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bc20:	ldr	r3, [fp, #-20]	; 0xffffffec
    bc24:	str	r2, [r3]
    bc28:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    bc2c:	ldr	r2, [fp, #-144]	; 0xffffff70
    bc30:	ldr	r1, [fp, #-140]	; 0xffffff74
    bc34:	ldr	r0, [fp, #-136]	; 0xffffff78
    bc38:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc3c:	str	r0, [fp, #-140]	; 0xffffff74
    bc40:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    bc44:	ldr	r2, [fp, #-144]	; 0xffffff70
    bc48:	ldr	r1, [fp, #-140]	; 0xffffff74
    bc4c:	ldr	r0, [fp, #-136]	; 0xffffff78
    bc50:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc54:	str	r0, [fp, #-140]	; 0xffffff74
    bc58:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    bc5c:	ldr	r2, [fp, #-144]	; 0xffffff70
    bc60:	ldr	r1, [fp, #-140]	; 0xffffff74
    bc64:	ldr	r0, [fp, #-136]	; 0xffffff78
    bc68:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc6c:	str	r0, [fp, #-140]	; 0xffffff74
    bc70:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    bc74:	ldrd	r2, [fp, #-12]
    bc78:	add	r1, pc, #296	; 0x128
    bc7c:	ldrd	r0, [r1]
    bc80:	cmp	r3, r1
    bc84:	cmpeq	r2, r0
    bc88:	bhi	bf14 <MyGame_Example_Monster_parse_json_table+0x1e88>
    bc8c:	ldrd	r2, [fp, #-12]
    bc90:	add	r1, pc, #280	; 0x118
    bc94:	ldrd	r0, [r1]
    bc98:	cmp	r3, r1
    bc9c:	cmpeq	r2, r0
    bca0:	bne	bdc0 <MyGame_Example_Monster_parse_json_table+0x1d34>
    bca4:	ldr	r3, [fp, #-140]	; 0xffffff74
    bca8:	add	r3, r3, #8
    bcac:	str	r3, [fp, #-140]	; 0xffffff74
    bcb0:	ldr	r1, [fp, #-144]	; 0xffffff70
    bcb4:	ldr	r0, [fp, #-140]	; 0xffffff74
    bcb8:	bl	854 <flatcc_json_parser_symbol_part>
    bcbc:	strd	r0, [fp, #-12]
    bcc0:	ldrd	r2, [fp, #-12]
    bcc4:	mov	r0, #0
    bcc8:	ldr	r1, [pc, #232]	; bdb8 <MyGame_Example_Monster_parse_json_table+0x1d2c>
    bccc:	and	r2, r2, r0
    bcd0:	and	r3, r3, r1
    bcd4:	mov	r0, #0
    bcd8:	ldr	r1, [pc, #220]	; bdbc <MyGame_Example_Monster_parse_json_table+0x1d30>
    bcdc:	cmp	r3, r1
    bce0:	cmpeq	r2, r0
    bce4:	bne	bd88 <MyGame_Example_Monster_parse_json_table+0x1cfc>
    bce8:	ldr	r3, [fp, #-140]	; 0xffffff74
    bcec:	str	r3, [fp, #-16]
    bcf0:	mov	r3, #2
    bcf4:	ldr	r2, [fp, #-144]	; 0xffffff70
    bcf8:	ldr	r1, [fp, #-16]
    bcfc:	ldr	r0, [fp, #-136]	; 0xffffff78
    bd00:	bl	e20 <flatcc_json_parser_match_symbol>
    bd04:	str	r0, [fp, #-140]	; 0xffffff74
    bd08:	ldr	r2, [fp, #-16]
    bd0c:	ldr	r3, [fp, #-140]	; 0xffffff74
    bd10:	cmp	r2, r3
    bd14:	beq	bd70 <MyGame_Example_Monster_parse_json_table+0x1ce4>
    bd18:	sub	r3, fp, #32
    bd1c:	ldr	r2, [fp, #-144]	; 0xffffff70
    bd20:	ldr	r1, [fp, #-140]	; 0xffffff74
    bd24:	ldr	r0, [fp, #-136]	; 0xffffff78
    bd28:	bl	9c80 <MyGame_Example_TestBase64_parse_json_table>
    bd2c:	str	r0, [fp, #-140]	; 0xffffff74
    bd30:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bd34:	cmp	r3, #0
    bd38:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    bd3c:	ldr	r3, [fp, #-136]	; 0xffffff78
    bd40:	ldr	r3, [r3]
    bd44:	mov	r1, #35	; 0x23
    bd48:	mov	r0, r3
    bd4c:	bl	0 <flatcc_builder_table_add_offset>
    bd50:	str	r0, [fp, #-20]	; 0xffffffec
    bd54:	ldr	r3, [fp, #-20]	; 0xffffffec
    bd58:	cmp	r3, #0
    bd5c:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    bd60:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bd64:	ldr	r3, [fp, #-20]	; 0xffffffec
    bd68:	str	r2, [r3]
    bd6c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    bd70:	ldr	r2, [fp, #-144]	; 0xffffff70
    bd74:	ldr	r1, [fp, #-140]	; 0xffffff74
    bd78:	ldr	r0, [fp, #-136]	; 0xffffff78
    bd7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bd80:	str	r0, [fp, #-140]	; 0xffffff74
    bd84:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    bd88:	ldr	r2, [fp, #-144]	; 0xffffff70
    bd8c:	ldr	r1, [fp, #-140]	; 0xffffff74
    bd90:	ldr	r0, [fp, #-136]	; 0xffffff78
    bd94:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bd98:	str	r0, [fp, #-140]	; 0xffffff74
    bd9c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    bda0:	.word	0x61626c65
    bda4:	.word	0x796f6674
    bda8:	.word	0x656d7073
    bdac:	.word	0x74657374
    bdb0:	.word	0x62617365
    bdb4:	.word	0x74657374
    bdb8:	.word	0xffff0000
    bdbc:	.word	0x36340000
    bdc0:	ldrd	r2, [fp, #-12]
    bdc4:	add	r1, pc, #988	; 0x3dc
    bdc8:	ldrd	r0, [r1]
    bdcc:	cmp	r3, r1
    bdd0:	cmpeq	r2, r0
    bdd4:	bne	befc <MyGame_Example_Monster_parse_json_table+0x1e70>
    bdd8:	ldr	r3, [fp, #-140]	; 0xffffff74
    bddc:	str	r3, [fp, #-16]
    bde0:	mov	r3, #8
    bde4:	ldr	r2, [fp, #-144]	; 0xffffff70
    bde8:	ldr	r1, [fp, #-16]
    bdec:	ldr	r0, [fp, #-136]	; 0xffffff78
    bdf0:	bl	e20 <flatcc_json_parser_match_symbol>
    bdf4:	str	r0, [fp, #-140]	; 0xffffff74
    bdf8:	ldr	r2, [fp, #-16]
    bdfc:	ldr	r3, [fp, #-140]	; 0xffffff74
    be00:	cmp	r2, r3
    be04:	beq	bee4 <MyGame_Example_Monster_parse_json_table+0x1e58>
    be08:	mov	r3, #0
    be0c:	strb	r3, [fp, #-46]	; 0xffffffd2
    be10:	ldr	r3, [fp, #-140]	; 0xffffff74
    be14:	str	r3, [fp, #-16]
    be18:	sub	r3, fp, #46	; 0x2e
    be1c:	ldr	r2, [fp, #-144]	; 0xffffff70
    be20:	ldr	r1, [fp, #-16]
    be24:	ldr	r0, [fp, #-136]	; 0xffffff78
    be28:	bl	1cc8 <flatcc_json_parser_bool>
    be2c:	str	r0, [fp, #-140]	; 0xffffff74
    be30:	ldr	r2, [fp, #-16]
    be34:	ldr	r3, [fp, #-140]	; 0xffffff74
    be38:	cmp	r2, r3
    be3c:	bne	be88 <MyGame_Example_Monster_parse_json_table+0x1dfc>
    be40:	ldr	r3, [fp, #-140]	; 0xffffff74
    be44:	str	r3, [fp, #-16]
    be48:	sub	r3, fp, #46	; 0x2e
    be4c:	str	r3, [sp]
    be50:	ldr	r3, [pc, #884]	; c1cc <MyGame_Example_Monster_parse_json_table+0x2140>
    be54:	ldr	r2, [fp, #-144]	; 0xffffff70
    be58:	ldr	r1, [fp, #-16]
    be5c:	ldr	r0, [fp, #-136]	; 0xffffff78
    be60:	bl	2c6c <flatcc_json_parser_symbolic_bool>
    be64:	str	r0, [fp, #-140]	; 0xffffff74
    be68:	ldr	r2, [fp, #-140]	; 0xffffff74
    be6c:	ldr	r3, [fp, #-16]
    be70:	cmp	r2, r3
    be74:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    be78:	ldr	r2, [fp, #-140]	; 0xffffff74
    be7c:	ldr	r3, [fp, #-144]	; 0xffffff70
    be80:	cmp	r2, r3
    be84:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    be88:	ldrb	r3, [fp, #-46]	; 0xffffffd2
    be8c:	cmp	r3, #1
    be90:	bne	bea8 <MyGame_Example_Monster_parse_json_table+0x1e1c>
    be94:	ldr	r3, [fp, #-136]	; 0xffffff78
    be98:	ldr	r3, [r3, #8]
    be9c:	and	r3, r3, #2
    bea0:	cmp	r3, #0
    bea4:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    bea8:	ldr	r3, [fp, #-136]	; 0xffffff78
    beac:	ldr	r0, [r3]
    beb0:	mov	r3, #1
    beb4:	mov	r2, #1
    beb8:	mov	r1, #15
    bebc:	bl	0 <flatcc_builder_table_add>
    bec0:	str	r0, [fp, #-24]	; 0xffffffe8
    bec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    bec8:	cmp	r3, #0
    becc:	beq	d9b0 <MyGame_Example_Monster_parse_json_table+0x3924>
    bed0:	ldrb	r3, [fp, #-46]	; 0xffffffd2
    bed4:	mov	r1, r3
    bed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bedc:	bl	410 <flatbuffers_bool_write_to_pe>
    bee0:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    bee4:	ldr	r2, [fp, #-144]	; 0xffffff70
    bee8:	ldr	r1, [fp, #-140]	; 0xffffff74
    beec:	ldr	r0, [fp, #-136]	; 0xffffff78
    bef0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bef4:	str	r0, [fp, #-140]	; 0xffffff74
    bef8:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    befc:	ldr	r2, [fp, #-144]	; 0xffffff70
    bf00:	ldr	r1, [fp, #-140]	; 0xffffff74
    bf04:	ldr	r0, [fp, #-136]	; 0xffffff78
    bf08:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bf0c:	str	r0, [fp, #-140]	; 0xffffff74
    bf10:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    bf14:	ldrd	r2, [fp, #-12]
    bf18:	add	r1, pc, #656	; 0x290
    bf1c:	ldrd	r0, [r1]
    bf20:	cmp	r3, r1
    bf24:	cmpeq	r2, r0
    bf28:	bhi	c050 <MyGame_Example_Monster_parse_json_table+0x1fc4>
    bf2c:	ldrd	r2, [fp, #-12]
    bf30:	add	r1, pc, #640	; 0x280
    bf34:	ldrd	r0, [r1]
    bf38:	cmp	r3, r1
    bf3c:	cmpeq	r2, r0
    bf40:	bne	c038 <MyGame_Example_Monster_parse_json_table+0x1fac>
    bf44:	ldr	r3, [fp, #-140]	; 0xffffff74
    bf48:	add	r3, r3, #8
    bf4c:	str	r3, [fp, #-140]	; 0xffffff74
    bf50:	ldr	r1, [fp, #-144]	; 0xffffff70
    bf54:	ldr	r0, [fp, #-140]	; 0xffffff74
    bf58:	bl	854 <flatcc_json_parser_symbol_part>
    bf5c:	strd	r0, [fp, #-12]
    bf60:	ldrd	r2, [fp, #-12]
    bf64:	mov	r0, #0
    bf68:	mov	r1, #-16777216	; 0xff000000
    bf6c:	and	r2, r2, r0
    bf70:	and	r3, r3, r1
    bf74:	cmp	r3, #2030043136	; 0x79000000
    bf78:	cmpeq	r2, #0
    bf7c:	bne	c020 <MyGame_Example_Monster_parse_json_table+0x1f94>
    bf80:	ldr	r3, [fp, #-140]	; 0xffffff74
    bf84:	str	r3, [fp, #-16]
    bf88:	mov	r3, #1
    bf8c:	ldr	r2, [fp, #-144]	; 0xffffff70
    bf90:	ldr	r1, [fp, #-16]
    bf94:	ldr	r0, [fp, #-136]	; 0xffffff78
    bf98:	bl	e20 <flatcc_json_parser_match_symbol>
    bf9c:	str	r0, [fp, #-140]	; 0xffffff74
    bfa0:	ldr	r2, [fp, #-16]
    bfa4:	ldr	r3, [fp, #-140]	; 0xffffff74
    bfa8:	cmp	r2, r3
    bfac:	beq	c008 <MyGame_Example_Monster_parse_json_table+0x1f7c>
    bfb0:	sub	r3, fp, #32
    bfb4:	ldr	r2, [fp, #-144]	; 0xffffff70
    bfb8:	ldr	r1, [fp, #-140]	; 0xffffff74
    bfbc:	ldr	r0, [fp, #-136]	; 0xffffff78
    bfc0:	bl	792c <MyGame_Example_Stat_parse_json_table>
    bfc4:	str	r0, [fp, #-140]	; 0xffffff74
    bfc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bfcc:	cmp	r3, #0
    bfd0:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    bfd4:	ldr	r3, [fp, #-136]	; 0xffffff78
    bfd8:	ldr	r3, [r3]
    bfdc:	mov	r1, #14
    bfe0:	mov	r0, r3
    bfe4:	bl	0 <flatcc_builder_table_add_offset>
    bfe8:	str	r0, [fp, #-20]	; 0xffffffec
    bfec:	ldr	r3, [fp, #-20]	; 0xffffffec
    bff0:	cmp	r3, #0
    bff4:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    bff8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bffc:	ldr	r3, [fp, #-20]	; 0xffffffec
    c000:	str	r2, [r3]
    c004:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c008:	ldr	r2, [fp, #-144]	; 0xffffff70
    c00c:	ldr	r1, [fp, #-140]	; 0xffffff74
    c010:	ldr	r0, [fp, #-136]	; 0xffffff78
    c014:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c018:	str	r0, [fp, #-140]	; 0xffffff74
    c01c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c020:	ldr	r2, [fp, #-144]	; 0xffffff70
    c024:	ldr	r1, [fp, #-140]	; 0xffffff74
    c028:	ldr	r0, [fp, #-136]	; 0xffffff78
    c02c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c030:	str	r0, [fp, #-140]	; 0xffffff74
    c034:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c038:	ldr	r2, [fp, #-144]	; 0xffffff70
    c03c:	ldr	r1, [fp, #-140]	; 0xffffff74
    c040:	ldr	r0, [fp, #-136]	; 0xffffff78
    c044:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c048:	str	r0, [fp, #-140]	; 0xffffff74
    c04c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c050:	ldrd	r2, [fp, #-12]
    c054:	ldr	r0, [pc, #372]	; c1d0 <MyGame_Example_Monster_parse_json_table+0x2144>
    c058:	mvn	r1, #0
    c05c:	and	r2, r2, r0
    c060:	and	r3, r3, r1
    c064:	add	r1, pc, #340	; 0x154
    c068:	ldrd	r0, [r1]
    c06c:	cmp	r3, r1
    c070:	cmpeq	r2, r0
    c074:	bne	c1d8 <MyGame_Example_Monster_parse_json_table+0x214c>
    c078:	ldr	r3, [fp, #-140]	; 0xffffff74
    c07c:	str	r3, [fp, #-16]
    c080:	mov	r3, #6
    c084:	ldr	r2, [fp, #-144]	; 0xffffff70
    c088:	ldr	r1, [fp, #-16]
    c08c:	ldr	r0, [fp, #-136]	; 0xffffff78
    c090:	bl	e20 <flatcc_json_parser_match_symbol>
    c094:	str	r0, [fp, #-140]	; 0xffffff74
    c098:	ldr	r2, [fp, #-16]
    c09c:	ldr	r3, [fp, #-140]	; 0xffffff74
    c0a0:	cmp	r2, r3
    c0a4:	beq	c18c <MyGame_Example_Monster_parse_json_table+0x2100>
    c0a8:	mov	r3, #0
    c0ac:	str	r3, [fp, #-52]	; 0xffffffcc
    c0b0:	ldr	r3, [fp, #-140]	; 0xffffff74
    c0b4:	str	r3, [fp, #-16]
    c0b8:	sub	r3, fp, #52	; 0x34
    c0bc:	ldr	r2, [fp, #-144]	; 0xffffff70
    c0c0:	ldr	r1, [fp, #-16]
    c0c4:	ldr	r0, [fp, #-136]	; 0xffffff78
    c0c8:	bl	0 <flatcc_json_parser_float>
    c0cc:	str	r0, [fp, #-140]	; 0xffffff74
    c0d0:	ldr	r2, [fp, #-16]
    c0d4:	ldr	r3, [fp, #-140]	; 0xffffff74
    c0d8:	cmp	r2, r3
    c0dc:	bne	c128 <MyGame_Example_Monster_parse_json_table+0x209c>
    c0e0:	ldr	r3, [fp, #-140]	; 0xffffff74
    c0e4:	str	r3, [fp, #-16]
    c0e8:	sub	r3, fp, #52	; 0x34
    c0ec:	str	r3, [sp]
    c0f0:	ldr	r3, [pc, #220]	; c1d4 <MyGame_Example_Monster_parse_json_table+0x2148>
    c0f4:	ldr	r2, [fp, #-144]	; 0xffffff70
    c0f8:	ldr	r1, [fp, #-16]
    c0fc:	ldr	r0, [fp, #-136]	; 0xffffff78
    c100:	bl	2e3c <flatcc_json_parser_symbolic_float>
    c104:	str	r0, [fp, #-140]	; 0xffffff74
    c108:	ldr	r2, [fp, #-140]	; 0xffffff74
    c10c:	ldr	r3, [fp, #-16]
    c110:	cmp	r2, r3
    c114:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    c118:	ldr	r2, [fp, #-140]	; 0xffffff74
    c11c:	ldr	r3, [fp, #-144]	; 0xffffff70
    c120:	cmp	r2, r3
    c124:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    c128:	vldr	s15, [fp, #-52]	; 0xffffffcc
    c12c:	vldr	s14, [pc, #148]	; c1c8 <MyGame_Example_Monster_parse_json_table+0x213c>
    c130:	vcmp.f32	s15, s14
    c134:	vmrs	APSR_nzcv, fpscr
    c138:	bne	c150 <MyGame_Example_Monster_parse_json_table+0x20c4>
    c13c:	ldr	r3, [fp, #-136]	; 0xffffff78
    c140:	ldr	r3, [r3, #8]
    c144:	and	r3, r3, #2
    c148:	cmp	r3, #0
    c14c:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c150:	ldr	r3, [fp, #-136]	; 0xffffff78
    c154:	ldr	r0, [r3]
    c158:	mov	r3, #4
    c15c:	mov	r2, #4
    c160:	mov	r1, #26
    c164:	bl	0 <flatcc_builder_table_add>
    c168:	str	r0, [fp, #-24]	; 0xffffffe8
    c16c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c170:	cmp	r3, #0
    c174:	beq	d9b8 <MyGame_Example_Monster_parse_json_table+0x392c>
    c178:	vldr	s15, [fp, #-52]	; 0xffffffcc
    c17c:	vmov.f32	s0, s15
    c180:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c184:	bl	348 <flatbuffers_float_write_to_pe>
    c188:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c18c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c190:	ldr	r1, [fp, #-140]	; 0xffffff74
    c194:	ldr	r0, [fp, #-136]	; 0xffffff78
    c198:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c19c:	str	r0, [fp, #-140]	; 0xffffff74
    c1a0:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c1a4:	nop			; (mov r0, r0)
    c1a8:	.word	0x626f6f6c
    c1ac:	.word	0x74657374
    c1b0:	.word	0x65ffffff
    c1b4:	.word	0x74657374
    c1b8:	.word	0x656d7074
    c1bc:	.word	0x74657374
    c1c0:	.word	0x66320000
    c1c4:	.word	0x74657374
    c1c8:	.word	0x40400000
    c1cc:	.word	0x000001f4
    c1d0:	.word	0xffff0000
    c1d4:	.word	0x00000200
    c1d8:	ldrd	r2, [fp, #-12]
    c1dc:	mov	r0, #-16777216	; 0xff000000
    c1e0:	mvn	r1, #0
    c1e4:	and	r2, r2, r0
    c1e8:	and	r3, r3, r1
    c1ec:	add	r1, pc, #724	; 0x2d4
    c1f0:	ldrd	r0, [r1]
    c1f4:	cmp	r3, r1
    c1f8:	cmpeq	r2, r0
    c1fc:	bne	c32c <MyGame_Example_Monster_parse_json_table+0x22a0>
    c200:	ldr	r3, [fp, #-140]	; 0xffffff74
    c204:	str	r3, [fp, #-16]
    c208:	mov	r3, #5
    c20c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c210:	ldr	r1, [fp, #-16]
    c214:	ldr	r0, [fp, #-136]	; 0xffffff78
    c218:	bl	e20 <flatcc_json_parser_match_symbol>
    c21c:	str	r0, [fp, #-140]	; 0xffffff74
    c220:	ldr	r2, [fp, #-16]
    c224:	ldr	r3, [fp, #-140]	; 0xffffff74
    c228:	cmp	r2, r3
    c22c:	beq	c314 <MyGame_Example_Monster_parse_json_table+0x2288>
    c230:	mov	r3, #0
    c234:	str	r3, [fp, #-56]	; 0xffffffc8
    c238:	ldr	r3, [fp, #-140]	; 0xffffff74
    c23c:	str	r3, [fp, #-16]
    c240:	sub	r3, fp, #56	; 0x38
    c244:	ldr	r2, [fp, #-144]	; 0xffffff70
    c248:	ldr	r1, [fp, #-16]
    c24c:	ldr	r0, [fp, #-136]	; 0xffffff78
    c250:	bl	0 <flatcc_json_parser_float>
    c254:	str	r0, [fp, #-140]	; 0xffffff74
    c258:	ldr	r2, [fp, #-16]
    c25c:	ldr	r3, [fp, #-140]	; 0xffffff74
    c260:	cmp	r2, r3
    c264:	bne	c2b0 <MyGame_Example_Monster_parse_json_table+0x2224>
    c268:	ldr	r3, [fp, #-140]	; 0xffffff74
    c26c:	str	r3, [fp, #-16]
    c270:	sub	r3, fp, #56	; 0x38
    c274:	str	r3, [sp]
    c278:	ldr	r3, [pc, #612]	; c4e4 <MyGame_Example_Monster_parse_json_table+0x2458>
    c27c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c280:	ldr	r1, [fp, #-16]
    c284:	ldr	r0, [fp, #-136]	; 0xffffff78
    c288:	bl	2e3c <flatcc_json_parser_symbolic_float>
    c28c:	str	r0, [fp, #-140]	; 0xffffff74
    c290:	ldr	r2, [fp, #-140]	; 0xffffff74
    c294:	ldr	r3, [fp, #-16]
    c298:	cmp	r2, r3
    c29c:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    c2a0:	ldr	r2, [fp, #-140]	; 0xffffff74
    c2a4:	ldr	r3, [fp, #-144]	; 0xffffff70
    c2a8:	cmp	r2, r3
    c2ac:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    c2b0:	vldr	s15, [fp, #-56]	; 0xffffffc8
    c2b4:	vldr	s14, [pc, #548]	; c4e0 <MyGame_Example_Monster_parse_json_table+0x2454>
    c2b8:	vcmp.f32	s15, s14
    c2bc:	vmrs	APSR_nzcv, fpscr
    c2c0:	bne	c2d8 <MyGame_Example_Monster_parse_json_table+0x224c>
    c2c4:	ldr	r3, [fp, #-136]	; 0xffffff78
    c2c8:	ldr	r3, [r3, #8]
    c2cc:	and	r3, r3, #2
    c2d0:	cmp	r3, #0
    c2d4:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c2d8:	ldr	r3, [fp, #-136]	; 0xffffff78
    c2dc:	ldr	r0, [r3]
    c2e0:	mov	r3, #4
    c2e4:	mov	r2, #4
    c2e8:	mov	r1, #25
    c2ec:	bl	0 <flatcc_builder_table_add>
    c2f0:	str	r0, [fp, #-24]	; 0xffffffe8
    c2f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c2f8:	cmp	r3, #0
    c2fc:	beq	d9c0 <MyGame_Example_Monster_parse_json_table+0x3934>
    c300:	vldr	s15, [fp, #-56]	; 0xffffffc8
    c304:	vmov.f32	s0, s15
    c308:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c30c:	bl	348 <flatbuffers_float_write_to_pe>
    c310:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c314:	ldr	r2, [fp, #-144]	; 0xffffff70
    c318:	ldr	r1, [fp, #-140]	; 0xffffff74
    c31c:	ldr	r0, [fp, #-136]	; 0xffffff78
    c320:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c324:	str	r0, [fp, #-140]	; 0xffffff74
    c328:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c32c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c330:	ldr	r1, [fp, #-140]	; 0xffffff74
    c334:	ldr	r0, [fp, #-136]	; 0xffffff78
    c338:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c33c:	str	r0, [fp, #-140]	; 0xffffff74
    c340:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c344:	ldrd	r2, [fp, #-12]
    c348:	add	r1, pc, #384	; 0x180
    c34c:	ldrd	r0, [r1]
    c350:	cmp	r3, r1
    c354:	cmpeq	r2, r0
    c358:	bhi	c4f0 <MyGame_Example_Monster_parse_json_table+0x2464>
    c35c:	ldrd	r2, [fp, #-12]
    c360:	ldr	r0, [pc, #384]	; c4e8 <MyGame_Example_Monster_parse_json_table+0x245c>
    c364:	mvn	r1, #0
    c368:	and	r2, r2, r0
    c36c:	and	r3, r3, r1
    c370:	add	r1, pc, #352	; 0x160
    c374:	ldrd	r0, [r1]
    c378:	cmp	r3, r1
    c37c:	cmpeq	r2, r0
    c380:	bne	c4ac <MyGame_Example_Monster_parse_json_table+0x2420>
    c384:	ldr	r3, [fp, #-140]	; 0xffffff74
    c388:	str	r3, [fp, #-16]
    c38c:	mov	r3, #6
    c390:	ldr	r2, [fp, #-144]	; 0xffffff70
    c394:	ldr	r1, [fp, #-16]
    c398:	ldr	r0, [fp, #-136]	; 0xffffff78
    c39c:	bl	e20 <flatcc_json_parser_match_symbol>
    c3a0:	str	r0, [fp, #-140]	; 0xffffff74
    c3a4:	ldr	r2, [fp, #-16]
    c3a8:	ldr	r3, [fp, #-140]	; 0xffffff74
    c3ac:	cmp	r2, r3
    c3b0:	beq	c494 <MyGame_Example_Monster_parse_json_table+0x2408>
    c3b4:	mov	r3, #0
    c3b8:	str	r3, [fp, #-60]	; 0xffffffc4
    c3bc:	ldr	r3, [fp, #-140]	; 0xffffff74
    c3c0:	str	r3, [fp, #-16]
    c3c4:	sub	r3, fp, #60	; 0x3c
    c3c8:	ldr	r2, [fp, #-144]	; 0xffffff70
    c3cc:	ldr	r1, [fp, #-16]
    c3d0:	ldr	r0, [fp, #-136]	; 0xffffff78
    c3d4:	bl	0 <flatcc_json_parser_float>
    c3d8:	str	r0, [fp, #-140]	; 0xffffff74
    c3dc:	ldr	r2, [fp, #-16]
    c3e0:	ldr	r3, [fp, #-140]	; 0xffffff74
    c3e4:	cmp	r2, r3
    c3e8:	bne	c434 <MyGame_Example_Monster_parse_json_table+0x23a8>
    c3ec:	ldr	r3, [fp, #-140]	; 0xffffff74
    c3f0:	str	r3, [fp, #-16]
    c3f4:	sub	r3, fp, #60	; 0x3c
    c3f8:	str	r3, [sp]
    c3fc:	ldr	r3, [pc, #232]	; c4ec <MyGame_Example_Monster_parse_json_table+0x2460>
    c400:	ldr	r2, [fp, #-144]	; 0xffffff70
    c404:	ldr	r1, [fp, #-16]
    c408:	ldr	r0, [fp, #-136]	; 0xffffff78
    c40c:	bl	2e3c <flatcc_json_parser_symbolic_float>
    c410:	str	r0, [fp, #-140]	; 0xffffff74
    c414:	ldr	r2, [fp, #-140]	; 0xffffff74
    c418:	ldr	r3, [fp, #-16]
    c41c:	cmp	r2, r3
    c420:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    c424:	ldr	r2, [fp, #-140]	; 0xffffff74
    c428:	ldr	r3, [fp, #-144]	; 0xffffff70
    c42c:	cmp	r2, r3
    c430:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    c434:	vldr	s15, [fp, #-60]	; 0xffffffc4
    c438:	vcmp.f32	s15, #0.0
    c43c:	vmrs	APSR_nzcv, fpscr
    c440:	bne	c458 <MyGame_Example_Monster_parse_json_table+0x23cc>
    c444:	ldr	r3, [fp, #-136]	; 0xffffff78
    c448:	ldr	r3, [r3, #8]
    c44c:	and	r3, r3, #2
    c450:	cmp	r3, #0
    c454:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c458:	ldr	r3, [fp, #-136]	; 0xffffff78
    c45c:	ldr	r0, [r3]
    c460:	mov	r3, #4
    c464:	mov	r2, #4
    c468:	mov	r1, #27
    c46c:	bl	0 <flatcc_builder_table_add>
    c470:	str	r0, [fp, #-24]	; 0xffffffe8
    c474:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c478:	cmp	r3, #0
    c47c:	beq	d9c8 <MyGame_Example_Monster_parse_json_table+0x393c>
    c480:	vldr	s15, [fp, #-60]	; 0xffffffc4
    c484:	vmov.f32	s0, s15
    c488:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c48c:	bl	348 <flatbuffers_float_write_to_pe>
    c490:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c494:	ldr	r2, [fp, #-144]	; 0xffffff70
    c498:	ldr	r1, [fp, #-140]	; 0xffffff74
    c49c:	ldr	r0, [fp, #-136]	; 0xffffff78
    c4a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c4a4:	str	r0, [fp, #-140]	; 0xffffff74
    c4a8:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c4ac:	ldr	r2, [fp, #-144]	; 0xffffff70
    c4b0:	ldr	r1, [fp, #-140]	; 0xffffff74
    c4b4:	ldr	r0, [fp, #-136]	; 0xffffff78
    c4b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c4bc:	str	r0, [fp, #-140]	; 0xffffff74
    c4c0:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c4c4:	nop			; (mov r0, r0)
    c4c8:	.word	0x66000000
    c4cc:	.word	0x74657374
    c4d0:	.word	0x68617367
    c4d4:	.word	0x74657374
    c4d8:	.word	0x66330000
    c4dc:	.word	0x74657374
    c4e0:	.word	0x489965e0
    c4e4:	.word	0x0000020c
    c4e8:	.word	0xffff0000
    c4ec:	.word	0x00000218
    c4f0:	ldrd	r2, [fp, #-12]
    c4f4:	add	r1, pc, #756	; 0x2f4
    c4f8:	ldrd	r0, [r1]
    c4fc:	cmp	r3, r1
    c500:	cmpeq	r2, r0
    c504:	bne	d068 <MyGame_Example_Monster_parse_json_table+0x2fdc>
    c508:	ldr	r3, [fp, #-140]	; 0xffffff74
    c50c:	add	r3, r3, #8
    c510:	str	r3, [fp, #-140]	; 0xffffff74
    c514:	ldr	r1, [fp, #-144]	; 0xffffff70
    c518:	ldr	r0, [fp, #-140]	; 0xffffff74
    c51c:	bl	854 <flatcc_json_parser_symbol_part>
    c520:	strd	r0, [fp, #-12]
    c524:	ldrd	r2, [fp, #-12]
    c528:	add	r1, pc, #712	; 0x2c8
    c52c:	ldrd	r0, [r1]
    c530:	cmp	r3, r1
    c534:	cmpeq	r2, r0
    c538:	bhi	c810 <MyGame_Example_Monster_parse_json_table+0x2784>
    c53c:	ldrd	r2, [fp, #-12]
    c540:	add	r1, pc, #696	; 0x2b8
    c544:	ldrd	r0, [r1]
    c548:	cmp	r3, r1
    c54c:	cmpeq	r2, r0
    c550:	bne	c7d8 <MyGame_Example_Monster_parse_json_table+0x274c>
    c554:	ldr	r3, [fp, #-140]	; 0xffffff74
    c558:	str	r3, [fp, #-16]
    c55c:	mov	r3, #8
    c560:	ldr	r2, [fp, #-144]	; 0xffffff70
    c564:	ldr	r1, [fp, #-16]
    c568:	ldr	r0, [fp, #-136]	; 0xffffff78
    c56c:	bl	e20 <flatcc_json_parser_match_symbol>
    c570:	str	r0, [fp, #-140]	; 0xffffff74
    c574:	ldr	r2, [fp, #-16]
    c578:	ldr	r3, [fp, #-140]	; 0xffffff74
    c57c:	cmp	r2, r3
    c580:	beq	c660 <MyGame_Example_Monster_parse_json_table+0x25d4>
    c584:	mov	r3, #0
    c588:	str	r3, [fp, #-64]	; 0xffffffc0
    c58c:	ldr	r3, [fp, #-140]	; 0xffffff74
    c590:	str	r3, [fp, #-16]
    c594:	sub	r3, fp, #64	; 0x40
    c598:	ldr	r2, [fp, #-144]	; 0xffffff70
    c59c:	ldr	r1, [fp, #-16]
    c5a0:	ldr	r0, [fp, #-136]	; 0xffffff78
    c5a4:	bl	1a58 <flatcc_json_parser_int32>
    c5a8:	str	r0, [fp, #-140]	; 0xffffff74
    c5ac:	ldr	r2, [fp, #-16]
    c5b0:	ldr	r3, [fp, #-140]	; 0xffffff74
    c5b4:	cmp	r2, r3
    c5b8:	bne	c604 <MyGame_Example_Monster_parse_json_table+0x2578>
    c5bc:	ldr	r3, [fp, #-140]	; 0xffffff74
    c5c0:	str	r3, [fp, #-16]
    c5c4:	sub	r3, fp, #64	; 0x40
    c5c8:	str	r3, [sp]
    c5cc:	ldr	r3, [pc, #564]	; c808 <MyGame_Example_Monster_parse_json_table+0x277c>
    c5d0:	ldr	r2, [fp, #-144]	; 0xffffff70
    c5d4:	ldr	r1, [fp, #-16]
    c5d8:	ldr	r0, [fp, #-136]	; 0xffffff78
    c5dc:	bl	26e8 <flatcc_json_parser_symbolic_int32>
    c5e0:	str	r0, [fp, #-140]	; 0xffffff74
    c5e4:	ldr	r2, [fp, #-140]	; 0xffffff74
    c5e8:	ldr	r3, [fp, #-16]
    c5ec:	cmp	r2, r3
    c5f0:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    c5f4:	ldr	r2, [fp, #-140]	; 0xffffff74
    c5f8:	ldr	r3, [fp, #-144]	; 0xffffff70
    c5fc:	cmp	r2, r3
    c600:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    c604:	ldr	r3, [fp, #-64]	; 0xffffffc0
    c608:	cmp	r3, #0
    c60c:	bne	c624 <MyGame_Example_Monster_parse_json_table+0x2598>
    c610:	ldr	r3, [fp, #-136]	; 0xffffff78
    c614:	ldr	r3, [r3, #8]
    c618:	and	r3, r3, #2
    c61c:	cmp	r3, #0
    c620:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c624:	ldr	r3, [fp, #-136]	; 0xffffff78
    c628:	ldr	r0, [r3]
    c62c:	mov	r3, #4
    c630:	mov	r2, #4
    c634:	mov	r1, #16
    c638:	bl	0 <flatcc_builder_table_add>
    c63c:	str	r0, [fp, #-24]	; 0xffffffe8
    c640:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c644:	cmp	r3, #0
    c648:	beq	d9d0 <MyGame_Example_Monster_parse_json_table+0x3944>
    c64c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    c650:	mov	r1, r3
    c654:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c658:	bl	27c <flatbuffers_int32_write_to_pe>
    c65c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c660:	ldr	r3, [fp, #-140]	; 0xffffff74
    c664:	add	r3, r3, #8
    c668:	str	r3, [fp, #-140]	; 0xffffff74
    c66c:	ldr	r1, [fp, #-144]	; 0xffffff70
    c670:	ldr	r0, [fp, #-140]	; 0xffffff74
    c674:	bl	854 <flatcc_json_parser_symbol_part>
    c678:	strd	r0, [fp, #-12]
    c67c:	ldrd	r2, [fp, #-12]
    c680:	mov	r0, #0
    c684:	mov	r1, #-16777216	; 0xff000000
    c688:	and	r2, r2, r0
    c68c:	and	r3, r3, r1
    c690:	cmp	r3, #1627389952	; 0x61000000
    c694:	cmpeq	r2, #0
    c698:	bne	c7c0 <MyGame_Example_Monster_parse_json_table+0x2734>
    c69c:	ldr	r3, [fp, #-140]	; 0xffffff74
    c6a0:	str	r3, [fp, #-16]
    c6a4:	mov	r3, #1
    c6a8:	ldr	r2, [fp, #-144]	; 0xffffff70
    c6ac:	ldr	r1, [fp, #-16]
    c6b0:	ldr	r0, [fp, #-136]	; 0xffffff78
    c6b4:	bl	e20 <flatcc_json_parser_match_symbol>
    c6b8:	str	r0, [fp, #-140]	; 0xffffff74
    c6bc:	ldr	r2, [fp, #-16]
    c6c0:	ldr	r3, [fp, #-140]	; 0xffffff74
    c6c4:	cmp	r2, r3
    c6c8:	beq	c7a8 <MyGame_Example_Monster_parse_json_table+0x271c>
    c6cc:	mov	r3, #0
    c6d0:	str	r3, [fp, #-68]	; 0xffffffbc
    c6d4:	ldr	r3, [fp, #-140]	; 0xffffff74
    c6d8:	str	r3, [fp, #-16]
    c6dc:	sub	r3, fp, #68	; 0x44
    c6e0:	ldr	r2, [fp, #-144]	; 0xffffff70
    c6e4:	ldr	r1, [fp, #-16]
    c6e8:	ldr	r0, [fp, #-136]	; 0xffffff78
    c6ec:	bl	1a58 <flatcc_json_parser_int32>
    c6f0:	str	r0, [fp, #-140]	; 0xffffff74
    c6f4:	ldr	r2, [fp, #-16]
    c6f8:	ldr	r3, [fp, #-140]	; 0xffffff74
    c6fc:	cmp	r2, r3
    c700:	bne	c74c <MyGame_Example_Monster_parse_json_table+0x26c0>
    c704:	ldr	r3, [fp, #-140]	; 0xffffff74
    c708:	str	r3, [fp, #-16]
    c70c:	sub	r3, fp, #68	; 0x44
    c710:	str	r3, [sp]
    c714:	ldr	r3, [pc, #240]	; c80c <MyGame_Example_Monster_parse_json_table+0x2780>
    c718:	ldr	r2, [fp, #-144]	; 0xffffff70
    c71c:	ldr	r1, [fp, #-16]
    c720:	ldr	r0, [fp, #-136]	; 0xffffff78
    c724:	bl	26e8 <flatcc_json_parser_symbolic_int32>
    c728:	str	r0, [fp, #-140]	; 0xffffff74
    c72c:	ldr	r2, [fp, #-140]	; 0xffffff74
    c730:	ldr	r3, [fp, #-16]
    c734:	cmp	r2, r3
    c738:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    c73c:	ldr	r2, [fp, #-140]	; 0xffffff74
    c740:	ldr	r3, [fp, #-144]	; 0xffffff70
    c744:	cmp	r2, r3
    c748:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    c74c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    c750:	cmp	r3, #0
    c754:	bne	c76c <MyGame_Example_Monster_parse_json_table+0x26e0>
    c758:	ldr	r3, [fp, #-136]	; 0xffffff78
    c75c:	ldr	r3, [r3, #8]
    c760:	and	r3, r3, #2
    c764:	cmp	r3, #0
    c768:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c76c:	ldr	r3, [fp, #-136]	; 0xffffff78
    c770:	ldr	r0, [r3]
    c774:	mov	r3, #4
    c778:	mov	r2, #4
    c77c:	mov	r1, #20
    c780:	bl	0 <flatcc_builder_table_add>
    c784:	str	r0, [fp, #-24]	; 0xffffffe8
    c788:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c78c:	cmp	r3, #0
    c790:	beq	d9d8 <MyGame_Example_Monster_parse_json_table+0x394c>
    c794:	ldr	r3, [fp, #-68]	; 0xffffffbc
    c798:	mov	r1, r3
    c79c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c7a0:	bl	27c <flatbuffers_int32_write_to_pe>
    c7a4:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c7a8:	ldr	r2, [fp, #-144]	; 0xffffff70
    c7ac:	ldr	r1, [fp, #-140]	; 0xffffff74
    c7b0:	ldr	r0, [fp, #-136]	; 0xffffff78
    c7b4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c7b8:	str	r0, [fp, #-140]	; 0xffffff74
    c7bc:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c7c0:	ldr	r2, [fp, #-144]	; 0xffffff70
    c7c4:	ldr	r1, [fp, #-140]	; 0xffffff74
    c7c8:	ldr	r0, [fp, #-136]	; 0xffffff78
    c7cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c7d0:	str	r0, [fp, #-140]	; 0xffffff74
    c7d4:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c7d8:	ldr	r2, [fp, #-144]	; 0xffffff70
    c7dc:	ldr	r1, [fp, #-140]	; 0xffffff74
    c7e0:	ldr	r0, [fp, #-136]	; 0xffffff78
    c7e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c7e8:	str	r0, [fp, #-140]	; 0xffffff74
    c7ec:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c7f0:	.word	0x68617368
    c7f4:	.word	0x74657374
    c7f8:	.word	0x666e7630
    c7fc:	.word	0x7336345f
    c800:	.word	0x666e7631
    c804:	.word	0x7333325f
    c808:	.word	0x00000224
    c80c:	.word	0x00000230
    c810:	ldrd	r2, [fp, #-12]
    c814:	add	r1, pc, #708	; 0x2c4
    c818:	ldrd	r0, [r1]
    c81c:	cmp	r3, r1
    c820:	cmpeq	r2, r0
    c824:	bhi	caf8 <MyGame_Example_Monster_parse_json_table+0x2a6c>
    c828:	ldrd	r2, [fp, #-12]
    c82c:	add	r1, pc, #692	; 0x2b4
    c830:	ldrd	r0, [r1]
    c834:	cmp	r3, r1
    c838:	cmpeq	r2, r0
    c83c:	bne	cac4 <MyGame_Example_Monster_parse_json_table+0x2a38>
    c840:	ldr	r3, [fp, #-140]	; 0xffffff74
    c844:	str	r3, [fp, #-16]
    c848:	mov	r3, #8
    c84c:	ldr	r2, [fp, #-144]	; 0xffffff70
    c850:	ldr	r1, [fp, #-16]
    c854:	ldr	r0, [fp, #-136]	; 0xffffff78
    c858:	bl	e20 <flatcc_json_parser_match_symbol>
    c85c:	str	r0, [fp, #-140]	; 0xffffff74
    c860:	ldr	r2, [fp, #-16]
    c864:	ldr	r3, [fp, #-140]	; 0xffffff74
    c868:	cmp	r2, r3
    c86c:	beq	c94c <MyGame_Example_Monster_parse_json_table+0x28c0>
    c870:	mov	r2, #0
    c874:	mov	r3, #0
    c878:	strd	r2, [fp, #-76]	; 0xffffffb4
    c87c:	ldr	r3, [fp, #-140]	; 0xffffff74
    c880:	str	r3, [fp, #-16]
    c884:	sub	r3, fp, #76	; 0x4c
    c888:	ldr	r2, [fp, #-144]	; 0xffffff70
    c88c:	ldr	r1, [fp, #-16]
    c890:	ldr	r0, [fp, #-136]	; 0xffffff78
    c894:	bl	1984 <flatcc_json_parser_int64>
    c898:	str	r0, [fp, #-140]	; 0xffffff74
    c89c:	ldr	r2, [fp, #-16]
    c8a0:	ldr	r3, [fp, #-140]	; 0xffffff74
    c8a4:	cmp	r2, r3
    c8a8:	bne	c8f4 <MyGame_Example_Monster_parse_json_table+0x2868>
    c8ac:	ldr	r3, [fp, #-140]	; 0xffffff74
    c8b0:	str	r3, [fp, #-16]
    c8b4:	sub	r3, fp, #76	; 0x4c
    c8b8:	str	r3, [sp]
    c8bc:	ldr	r3, [pc, #556]	; caf0 <MyGame_Example_Monster_parse_json_table+0x2a64>
    c8c0:	ldr	r2, [fp, #-144]	; 0xffffff70
    c8c4:	ldr	r1, [fp, #-16]
    c8c8:	ldr	r0, [fp, #-136]	; 0xffffff78
    c8cc:	bl	2510 <flatcc_json_parser_symbolic_int64>
    c8d0:	str	r0, [fp, #-140]	; 0xffffff74
    c8d4:	ldr	r2, [fp, #-140]	; 0xffffff74
    c8d8:	ldr	r3, [fp, #-16]
    c8dc:	cmp	r2, r3
    c8e0:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    c8e4:	ldr	r2, [fp, #-140]	; 0xffffff74
    c8e8:	ldr	r3, [fp, #-144]	; 0xffffff70
    c8ec:	cmp	r2, r3
    c8f0:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    c8f4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    c8f8:	orrs	r3, r2, r3
    c8fc:	bne	c914 <MyGame_Example_Monster_parse_json_table+0x2888>
    c900:	ldr	r3, [fp, #-136]	; 0xffffff78
    c904:	ldr	r3, [r3, #8]
    c908:	and	r3, r3, #2
    c90c:	cmp	r3, #0
    c910:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c914:	ldr	r3, [fp, #-136]	; 0xffffff78
    c918:	ldr	r0, [r3]
    c91c:	mov	r3, #8
    c920:	mov	r2, #8
    c924:	mov	r1, #18
    c928:	bl	0 <flatcc_builder_table_add>
    c92c:	str	r0, [fp, #-24]	; 0xffffffe8
    c930:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c934:	cmp	r3, #0
    c938:	beq	d9e0 <MyGame_Example_Monster_parse_json_table+0x3954>
    c93c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    c940:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c944:	bl	2d8 <flatbuffers_int64_write_to_pe>
    c948:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    c94c:	ldr	r3, [fp, #-140]	; 0xffffff74
    c950:	add	r3, r3, #8
    c954:	str	r3, [fp, #-140]	; 0xffffff74
    c958:	ldr	r1, [fp, #-144]	; 0xffffff70
    c95c:	ldr	r0, [fp, #-140]	; 0xffffff74
    c960:	bl	854 <flatcc_json_parser_symbol_part>
    c964:	strd	r0, [fp, #-12]
    c968:	ldrd	r2, [fp, #-12]
    c96c:	mov	r0, #0
    c970:	mov	r1, #-16777216	; 0xff000000
    c974:	and	r2, r2, r0
    c978:	and	r3, r3, r1
    c97c:	cmp	r3, #1627389952	; 0x61000000
    c980:	cmpeq	r2, #0
    c984:	bne	caac <MyGame_Example_Monster_parse_json_table+0x2a20>
    c988:	ldr	r3, [fp, #-140]	; 0xffffff74
    c98c:	str	r3, [fp, #-16]
    c990:	mov	r3, #1
    c994:	ldr	r2, [fp, #-144]	; 0xffffff70
    c998:	ldr	r1, [fp, #-16]
    c99c:	ldr	r0, [fp, #-136]	; 0xffffff78
    c9a0:	bl	e20 <flatcc_json_parser_match_symbol>
    c9a4:	str	r0, [fp, #-140]	; 0xffffff74
    c9a8:	ldr	r2, [fp, #-16]
    c9ac:	ldr	r3, [fp, #-140]	; 0xffffff74
    c9b0:	cmp	r2, r3
    c9b4:	beq	ca94 <MyGame_Example_Monster_parse_json_table+0x2a08>
    c9b8:	mov	r2, #0
    c9bc:	mov	r3, #0
    c9c0:	strd	r2, [fp, #-84]	; 0xffffffac
    c9c4:	ldr	r3, [fp, #-140]	; 0xffffff74
    c9c8:	str	r3, [fp, #-16]
    c9cc:	sub	r3, fp, #84	; 0x54
    c9d0:	ldr	r2, [fp, #-144]	; 0xffffff70
    c9d4:	ldr	r1, [fp, #-16]
    c9d8:	ldr	r0, [fp, #-136]	; 0xffffff78
    c9dc:	bl	1984 <flatcc_json_parser_int64>
    c9e0:	str	r0, [fp, #-140]	; 0xffffff74
    c9e4:	ldr	r2, [fp, #-16]
    c9e8:	ldr	r3, [fp, #-140]	; 0xffffff74
    c9ec:	cmp	r2, r3
    c9f0:	bne	ca3c <MyGame_Example_Monster_parse_json_table+0x29b0>
    c9f4:	ldr	r3, [fp, #-140]	; 0xffffff74
    c9f8:	str	r3, [fp, #-16]
    c9fc:	sub	r3, fp, #84	; 0x54
    ca00:	str	r3, [sp]
    ca04:	ldr	r3, [pc, #232]	; caf4 <MyGame_Example_Monster_parse_json_table+0x2a68>
    ca08:	ldr	r2, [fp, #-144]	; 0xffffff70
    ca0c:	ldr	r1, [fp, #-16]
    ca10:	ldr	r0, [fp, #-136]	; 0xffffff78
    ca14:	bl	2510 <flatcc_json_parser_symbolic_int64>
    ca18:	str	r0, [fp, #-140]	; 0xffffff74
    ca1c:	ldr	r2, [fp, #-140]	; 0xffffff74
    ca20:	ldr	r3, [fp, #-16]
    ca24:	cmp	r2, r3
    ca28:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    ca2c:	ldr	r2, [fp, #-140]	; 0xffffff74
    ca30:	ldr	r3, [fp, #-144]	; 0xffffff70
    ca34:	cmp	r2, r3
    ca38:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    ca3c:	ldrd	r2, [fp, #-84]	; 0xffffffac
    ca40:	orrs	r3, r2, r3
    ca44:	bne	ca5c <MyGame_Example_Monster_parse_json_table+0x29d0>
    ca48:	ldr	r3, [fp, #-136]	; 0xffffff78
    ca4c:	ldr	r3, [r3, #8]
    ca50:	and	r3, r3, #2
    ca54:	cmp	r3, #0
    ca58:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ca5c:	ldr	r3, [fp, #-136]	; 0xffffff78
    ca60:	ldr	r0, [r3]
    ca64:	mov	r3, #8
    ca68:	mov	r2, #8
    ca6c:	mov	r1, #22
    ca70:	bl	0 <flatcc_builder_table_add>
    ca74:	str	r0, [fp, #-24]	; 0xffffffe8
    ca78:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ca7c:	cmp	r3, #0
    ca80:	beq	d9e8 <MyGame_Example_Monster_parse_json_table+0x395c>
    ca84:	ldrd	r2, [fp, #-84]	; 0xffffffac
    ca88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ca8c:	bl	2d8 <flatbuffers_int64_write_to_pe>
    ca90:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ca94:	ldr	r2, [fp, #-144]	; 0xffffff70
    ca98:	ldr	r1, [fp, #-140]	; 0xffffff74
    ca9c:	ldr	r0, [fp, #-136]	; 0xffffff78
    caa0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    caa4:	str	r0, [fp, #-140]	; 0xffffff74
    caa8:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    caac:	ldr	r2, [fp, #-144]	; 0xffffff70
    cab0:	ldr	r1, [fp, #-140]	; 0xffffff74
    cab4:	ldr	r0, [fp, #-136]	; 0xffffff78
    cab8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cabc:	str	r0, [fp, #-140]	; 0xffffff74
    cac0:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    cac4:	ldr	r2, [fp, #-144]	; 0xffffff70
    cac8:	ldr	r1, [fp, #-140]	; 0xffffff74
    cacc:	ldr	r0, [fp, #-136]	; 0xffffff78
    cad0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cad4:	str	r0, [fp, #-140]	; 0xffffff74
    cad8:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    cadc:	nop			; (mov r0, r0)
    cae0:	.word	0x666e7630
    cae4:	.word	0x7533325f
    cae8:	.word	0x666e7631
    caec:	.word	0x7336345f
    caf0:	.word	0x0000023c
    caf4:	.word	0x00000248
    caf8:	ldrd	r2, [fp, #-12]
    cafc:	add	r1, pc, #948	; 0x3b4
    cb00:	ldrd	r0, [r1]
    cb04:	cmp	r3, r1
    cb08:	cmpeq	r2, r0
    cb0c:	bne	cd94 <MyGame_Example_Monster_parse_json_table+0x2d08>
    cb10:	ldr	r3, [fp, #-140]	; 0xffffff74
    cb14:	str	r3, [fp, #-16]
    cb18:	mov	r3, #8
    cb1c:	ldr	r2, [fp, #-144]	; 0xffffff70
    cb20:	ldr	r1, [fp, #-16]
    cb24:	ldr	r0, [fp, #-136]	; 0xffffff78
    cb28:	bl	e20 <flatcc_json_parser_match_symbol>
    cb2c:	str	r0, [fp, #-140]	; 0xffffff74
    cb30:	ldr	r2, [fp, #-16]
    cb34:	ldr	r3, [fp, #-140]	; 0xffffff74
    cb38:	cmp	r2, r3
    cb3c:	beq	cc1c <MyGame_Example_Monster_parse_json_table+0x2b90>
    cb40:	mov	r3, #0
    cb44:	str	r3, [fp, #-88]	; 0xffffffa8
    cb48:	ldr	r3, [fp, #-140]	; 0xffffff74
    cb4c:	str	r3, [fp, #-16]
    cb50:	sub	r3, fp, #88	; 0x58
    cb54:	ldr	r2, [fp, #-144]	; 0xffffff70
    cb58:	ldr	r1, [fp, #-16]
    cb5c:	ldr	r0, [fp, #-136]	; 0xffffff78
    cb60:	bl	1714 <flatcc_json_parser_uint32>
    cb64:	str	r0, [fp, #-140]	; 0xffffff74
    cb68:	ldr	r2, [fp, #-16]
    cb6c:	ldr	r3, [fp, #-140]	; 0xffffff74
    cb70:	cmp	r2, r3
    cb74:	bne	cbc0 <MyGame_Example_Monster_parse_json_table+0x2b34>
    cb78:	ldr	r3, [fp, #-140]	; 0xffffff74
    cb7c:	str	r3, [fp, #-16]
    cb80:	sub	r3, fp, #88	; 0x58
    cb84:	str	r3, [sp]
    cb88:	ldr	r3, [pc, #824]	; cec8 <MyGame_Example_Monster_parse_json_table+0x2e3c>
    cb8c:	ldr	r2, [fp, #-144]	; 0xffffff70
    cb90:	ldr	r1, [fp, #-16]
    cb94:	ldr	r0, [fp, #-136]	; 0xffffff78
    cb98:	bl	1fa4 <flatcc_json_parser_symbolic_uint32>
    cb9c:	str	r0, [fp, #-140]	; 0xffffff74
    cba0:	ldr	r2, [fp, #-140]	; 0xffffff74
    cba4:	ldr	r3, [fp, #-16]
    cba8:	cmp	r2, r3
    cbac:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    cbb0:	ldr	r2, [fp, #-140]	; 0xffffff74
    cbb4:	ldr	r3, [fp, #-144]	; 0xffffff70
    cbb8:	cmp	r2, r3
    cbbc:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    cbc0:	ldr	r3, [fp, #-88]	; 0xffffffa8
    cbc4:	cmp	r3, #0
    cbc8:	bne	cbe0 <MyGame_Example_Monster_parse_json_table+0x2b54>
    cbcc:	ldr	r3, [fp, #-136]	; 0xffffff78
    cbd0:	ldr	r3, [r3, #8]
    cbd4:	and	r3, r3, #2
    cbd8:	cmp	r3, #0
    cbdc:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    cbe0:	ldr	r3, [fp, #-136]	; 0xffffff78
    cbe4:	ldr	r0, [r3]
    cbe8:	mov	r3, #4
    cbec:	mov	r2, #4
    cbf0:	mov	r1, #17
    cbf4:	bl	0 <flatcc_builder_table_add>
    cbf8:	str	r0, [fp, #-24]	; 0xffffffe8
    cbfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cc00:	cmp	r3, #0
    cc04:	beq	d9f0 <MyGame_Example_Monster_parse_json_table+0x3964>
    cc08:	ldr	r3, [fp, #-88]	; 0xffffffa8
    cc0c:	mov	r1, r3
    cc10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cc14:	bl	f4 <flatbuffers_uint32_write_to_pe>
    cc18:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    cc1c:	ldr	r3, [fp, #-140]	; 0xffffff74
    cc20:	add	r3, r3, #8
    cc24:	str	r3, [fp, #-140]	; 0xffffff74
    cc28:	ldr	r1, [fp, #-144]	; 0xffffff70
    cc2c:	ldr	r0, [fp, #-140]	; 0xffffff74
    cc30:	bl	854 <flatcc_json_parser_symbol_part>
    cc34:	strd	r0, [fp, #-12]
    cc38:	ldrd	r2, [fp, #-12]
    cc3c:	mov	r0, #0
    cc40:	mov	r1, #-16777216	; 0xff000000
    cc44:	and	r2, r2, r0
    cc48:	and	r3, r3, r1
    cc4c:	cmp	r3, #1627389952	; 0x61000000
    cc50:	cmpeq	r2, #0
    cc54:	bne	cd7c <MyGame_Example_Monster_parse_json_table+0x2cf0>
    cc58:	ldr	r3, [fp, #-140]	; 0xffffff74
    cc5c:	str	r3, [fp, #-16]
    cc60:	mov	r3, #1
    cc64:	ldr	r2, [fp, #-144]	; 0xffffff70
    cc68:	ldr	r1, [fp, #-16]
    cc6c:	ldr	r0, [fp, #-136]	; 0xffffff78
    cc70:	bl	e20 <flatcc_json_parser_match_symbol>
    cc74:	str	r0, [fp, #-140]	; 0xffffff74
    cc78:	ldr	r2, [fp, #-16]
    cc7c:	ldr	r3, [fp, #-140]	; 0xffffff74
    cc80:	cmp	r2, r3
    cc84:	beq	cd64 <MyGame_Example_Monster_parse_json_table+0x2cd8>
    cc88:	mov	r3, #0
    cc8c:	str	r3, [fp, #-92]	; 0xffffffa4
    cc90:	ldr	r3, [fp, #-140]	; 0xffffff74
    cc94:	str	r3, [fp, #-16]
    cc98:	sub	r3, fp, #92	; 0x5c
    cc9c:	ldr	r2, [fp, #-144]	; 0xffffff70
    cca0:	ldr	r1, [fp, #-16]
    cca4:	ldr	r0, [fp, #-136]	; 0xffffff78
    cca8:	bl	1714 <flatcc_json_parser_uint32>
    ccac:	str	r0, [fp, #-140]	; 0xffffff74
    ccb0:	ldr	r2, [fp, #-16]
    ccb4:	ldr	r3, [fp, #-140]	; 0xffffff74
    ccb8:	cmp	r2, r3
    ccbc:	bne	cd08 <MyGame_Example_Monster_parse_json_table+0x2c7c>
    ccc0:	ldr	r3, [fp, #-140]	; 0xffffff74
    ccc4:	str	r3, [fp, #-16]
    ccc8:	sub	r3, fp, #92	; 0x5c
    cccc:	str	r3, [sp]
    ccd0:	ldr	r3, [pc, #500]	; cecc <MyGame_Example_Monster_parse_json_table+0x2e40>
    ccd4:	ldr	r2, [fp, #-144]	; 0xffffff70
    ccd8:	ldr	r1, [fp, #-16]
    ccdc:	ldr	r0, [fp, #-136]	; 0xffffff78
    cce0:	bl	1fa4 <flatcc_json_parser_symbolic_uint32>
    cce4:	str	r0, [fp, #-140]	; 0xffffff74
    cce8:	ldr	r2, [fp, #-140]	; 0xffffff74
    ccec:	ldr	r3, [fp, #-16]
    ccf0:	cmp	r2, r3
    ccf4:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    ccf8:	ldr	r2, [fp, #-140]	; 0xffffff74
    ccfc:	ldr	r3, [fp, #-144]	; 0xffffff70
    cd00:	cmp	r2, r3
    cd04:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    cd08:	ldr	r3, [fp, #-92]	; 0xffffffa4
    cd0c:	cmp	r3, #0
    cd10:	bne	cd28 <MyGame_Example_Monster_parse_json_table+0x2c9c>
    cd14:	ldr	r3, [fp, #-136]	; 0xffffff78
    cd18:	ldr	r3, [r3, #8]
    cd1c:	and	r3, r3, #2
    cd20:	cmp	r3, #0
    cd24:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    cd28:	ldr	r3, [fp, #-136]	; 0xffffff78
    cd2c:	ldr	r0, [r3]
    cd30:	mov	r3, #4
    cd34:	mov	r2, #4
    cd38:	mov	r1, #21
    cd3c:	bl	0 <flatcc_builder_table_add>
    cd40:	str	r0, [fp, #-24]	; 0xffffffe8
    cd44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cd48:	cmp	r3, #0
    cd4c:	beq	d9f8 <MyGame_Example_Monster_parse_json_table+0x396c>
    cd50:	ldr	r3, [fp, #-92]	; 0xffffffa4
    cd54:	mov	r1, r3
    cd58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cd5c:	bl	f4 <flatbuffers_uint32_write_to_pe>
    cd60:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    cd64:	ldr	r2, [fp, #-144]	; 0xffffff70
    cd68:	ldr	r1, [fp, #-140]	; 0xffffff74
    cd6c:	ldr	r0, [fp, #-136]	; 0xffffff78
    cd70:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cd74:	str	r0, [fp, #-140]	; 0xffffff74
    cd78:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    cd7c:	ldr	r2, [fp, #-144]	; 0xffffff70
    cd80:	ldr	r1, [fp, #-140]	; 0xffffff74
    cd84:	ldr	r0, [fp, #-136]	; 0xffffff78
    cd88:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cd8c:	str	r0, [fp, #-140]	; 0xffffff74
    cd90:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    cd94:	ldrd	r2, [fp, #-12]
    cd98:	add	r1, pc, #288	; 0x120
    cd9c:	ldrd	r0, [r1]
    cda0:	cmp	r3, r1
    cda4:	cmpeq	r2, r0
    cda8:	bne	d050 <MyGame_Example_Monster_parse_json_table+0x2fc4>
    cdac:	ldr	r3, [fp, #-140]	; 0xffffff74
    cdb0:	str	r3, [fp, #-16]
    cdb4:	mov	r3, #8
    cdb8:	ldr	r2, [fp, #-144]	; 0xffffff70
    cdbc:	ldr	r1, [fp, #-16]
    cdc0:	ldr	r0, [fp, #-136]	; 0xffffff78
    cdc4:	bl	e20 <flatcc_json_parser_match_symbol>
    cdc8:	str	r0, [fp, #-140]	; 0xffffff74
    cdcc:	ldr	r2, [fp, #-16]
    cdd0:	ldr	r3, [fp, #-140]	; 0xffffff74
    cdd4:	cmp	r2, r3
    cdd8:	beq	ced8 <MyGame_Example_Monster_parse_json_table+0x2e4c>
    cddc:	mov	r2, #0
    cde0:	mov	r3, #0
    cde4:	strd	r2, [fp, #-100]	; 0xffffff9c
    cde8:	ldr	r3, [fp, #-140]	; 0xffffff74
    cdec:	str	r3, [fp, #-16]
    cdf0:	sub	r3, fp, #100	; 0x64
    cdf4:	ldr	r2, [fp, #-144]	; 0xffffff70
    cdf8:	ldr	r1, [fp, #-16]
    cdfc:	ldr	r0, [fp, #-136]	; 0xffffff78
    ce00:	bl	1640 <flatcc_json_parser_uint64>
    ce04:	str	r0, [fp, #-140]	; 0xffffff74
    ce08:	ldr	r2, [fp, #-16]
    ce0c:	ldr	r3, [fp, #-140]	; 0xffffff74
    ce10:	cmp	r2, r3
    ce14:	bne	ce60 <MyGame_Example_Monster_parse_json_table+0x2dd4>
    ce18:	ldr	r3, [fp, #-140]	; 0xffffff74
    ce1c:	str	r3, [fp, #-16]
    ce20:	sub	r3, fp, #100	; 0x64
    ce24:	str	r3, [sp]
    ce28:	ldr	r3, [pc, #160]	; ced0 <MyGame_Example_Monster_parse_json_table+0x2e44>
    ce2c:	ldr	r2, [fp, #-144]	; 0xffffff70
    ce30:	ldr	r1, [fp, #-16]
    ce34:	ldr	r0, [fp, #-136]	; 0xffffff78
    ce38:	bl	1dcc <flatcc_json_parser_symbolic_uint64>
    ce3c:	str	r0, [fp, #-140]	; 0xffffff74
    ce40:	ldr	r2, [fp, #-140]	; 0xffffff74
    ce44:	ldr	r3, [fp, #-16]
    ce48:	cmp	r2, r3
    ce4c:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    ce50:	ldr	r2, [fp, #-140]	; 0xffffff74
    ce54:	ldr	r3, [fp, #-144]	; 0xffffff70
    ce58:	cmp	r2, r3
    ce5c:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    ce60:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    ce64:	orrs	r3, r2, r3
    ce68:	bne	ce80 <MyGame_Example_Monster_parse_json_table+0x2df4>
    ce6c:	ldr	r3, [fp, #-136]	; 0xffffff78
    ce70:	ldr	r3, [r3, #8]
    ce74:	and	r3, r3, #2
    ce78:	cmp	r3, #0
    ce7c:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ce80:	ldr	r3, [fp, #-136]	; 0xffffff78
    ce84:	ldr	r0, [r3]
    ce88:	mov	r3, #8
    ce8c:	mov	r2, #8
    ce90:	mov	r1, #19
    ce94:	bl	0 <flatcc_builder_table_add>
    ce98:	str	r0, [fp, #-24]	; 0xffffffe8
    ce9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cea0:	cmp	r3, #0
    cea4:	beq	da00 <MyGame_Example_Monster_parse_json_table+0x3974>
    cea8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    ceac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ceb0:	bl	150 <flatbuffers_uint64_write_to_pe>
    ceb4:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    ceb8:	.word	0x666e7631
    cebc:	.word	0x7533325f
    cec0:	.word	0x666e7631
    cec4:	.word	0x7536345f
    cec8:	.word	0x00000254
    cecc:	.word	0x00000260
    ced0:	.word	0x0000026c
    ced4:	.word	0x00000278
    ced8:	ldr	r3, [fp, #-140]	; 0xffffff74
    cedc:	add	r3, r3, #8
    cee0:	str	r3, [fp, #-140]	; 0xffffff74
    cee4:	ldr	r1, [fp, #-144]	; 0xffffff70
    cee8:	ldr	r0, [fp, #-140]	; 0xffffff74
    ceec:	bl	854 <flatcc_json_parser_symbol_part>
    cef0:	strd	r0, [fp, #-12]
    cef4:	ldrd	r2, [fp, #-12]
    cef8:	mov	r0, #0
    cefc:	mov	r1, #-16777216	; 0xff000000
    cf00:	and	r2, r2, r0
    cf04:	and	r3, r3, r1
    cf08:	cmp	r3, #1627389952	; 0x61000000
    cf0c:	cmpeq	r2, #0
    cf10:	bne	d038 <MyGame_Example_Monster_parse_json_table+0x2fac>
    cf14:	ldr	r3, [fp, #-140]	; 0xffffff74
    cf18:	str	r3, [fp, #-16]
    cf1c:	mov	r3, #1
    cf20:	ldr	r2, [fp, #-144]	; 0xffffff70
    cf24:	ldr	r1, [fp, #-16]
    cf28:	ldr	r0, [fp, #-136]	; 0xffffff78
    cf2c:	bl	e20 <flatcc_json_parser_match_symbol>
    cf30:	str	r0, [fp, #-140]	; 0xffffff74
    cf34:	ldr	r2, [fp, #-16]
    cf38:	ldr	r3, [fp, #-140]	; 0xffffff74
    cf3c:	cmp	r2, r3
    cf40:	beq	d020 <MyGame_Example_Monster_parse_json_table+0x2f94>
    cf44:	mov	r2, #0
    cf48:	mov	r3, #0
    cf4c:	strd	r2, [fp, #-108]	; 0xffffff94
    cf50:	ldr	r3, [fp, #-140]	; 0xffffff74
    cf54:	str	r3, [fp, #-16]
    cf58:	sub	r3, fp, #108	; 0x6c
    cf5c:	ldr	r2, [fp, #-144]	; 0xffffff70
    cf60:	ldr	r1, [fp, #-16]
    cf64:	ldr	r0, [fp, #-136]	; 0xffffff78
    cf68:	bl	1640 <flatcc_json_parser_uint64>
    cf6c:	str	r0, [fp, #-140]	; 0xffffff74
    cf70:	ldr	r2, [fp, #-16]
    cf74:	ldr	r3, [fp, #-140]	; 0xffffff74
    cf78:	cmp	r2, r3
    cf7c:	bne	cfc8 <MyGame_Example_Monster_parse_json_table+0x2f3c>
    cf80:	ldr	r3, [fp, #-140]	; 0xffffff74
    cf84:	str	r3, [fp, #-16]
    cf88:	sub	r3, fp, #108	; 0x6c
    cf8c:	str	r3, [sp]
    cf90:	ldr	r3, [pc, #-196]	; ced4 <MyGame_Example_Monster_parse_json_table+0x2e48>
    cf94:	ldr	r2, [fp, #-144]	; 0xffffff70
    cf98:	ldr	r1, [fp, #-16]
    cf9c:	ldr	r0, [fp, #-136]	; 0xffffff78
    cfa0:	bl	1dcc <flatcc_json_parser_symbolic_uint64>
    cfa4:	str	r0, [fp, #-140]	; 0xffffff74
    cfa8:	ldr	r2, [fp, #-140]	; 0xffffff74
    cfac:	ldr	r3, [fp, #-16]
    cfb0:	cmp	r2, r3
    cfb4:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    cfb8:	ldr	r2, [fp, #-140]	; 0xffffff74
    cfbc:	ldr	r3, [fp, #-144]	; 0xffffff70
    cfc0:	cmp	r2, r3
    cfc4:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    cfc8:	ldrd	r2, [fp, #-108]	; 0xffffff94
    cfcc:	orrs	r3, r2, r3
    cfd0:	bne	cfe8 <MyGame_Example_Monster_parse_json_table+0x2f5c>
    cfd4:	ldr	r3, [fp, #-136]	; 0xffffff78
    cfd8:	ldr	r3, [r3, #8]
    cfdc:	and	r3, r3, #2
    cfe0:	cmp	r3, #0
    cfe4:	beq	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    cfe8:	ldr	r3, [fp, #-136]	; 0xffffff78
    cfec:	ldr	r0, [r3]
    cff0:	mov	r3, #8
    cff4:	mov	r2, #8
    cff8:	mov	r1, #23
    cffc:	bl	0 <flatcc_builder_table_add>
    d000:	str	r0, [fp, #-24]	; 0xffffffe8
    d004:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d008:	cmp	r3, #0
    d00c:	beq	da08 <MyGame_Example_Monster_parse_json_table+0x397c>
    d010:	ldrd	r2, [fp, #-108]	; 0xffffff94
    d014:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d018:	bl	150 <flatbuffers_uint64_write_to_pe>
    d01c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d020:	ldr	r2, [fp, #-144]	; 0xffffff70
    d024:	ldr	r1, [fp, #-140]	; 0xffffff74
    d028:	ldr	r0, [fp, #-136]	; 0xffffff78
    d02c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d030:	str	r0, [fp, #-140]	; 0xffffff74
    d034:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d038:	ldr	r2, [fp, #-144]	; 0xffffff70
    d03c:	ldr	r1, [fp, #-140]	; 0xffffff74
    d040:	ldr	r0, [fp, #-136]	; 0xffffff78
    d044:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d048:	str	r0, [fp, #-140]	; 0xffffff74
    d04c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d050:	ldr	r2, [fp, #-144]	; 0xffffff70
    d054:	ldr	r1, [fp, #-140]	; 0xffffff74
    d058:	ldr	r0, [fp, #-136]	; 0xffffff78
    d05c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d060:	str	r0, [fp, #-140]	; 0xffffff74
    d064:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d068:	ldrd	r2, [fp, #-12]
    d06c:	add	r1, pc, #812	; 0x32c
    d070:	ldrd	r0, [r1]
    d074:	cmp	r3, r1
    d078:	cmpeq	r2, r0
    d07c:	bhi	d3c4 <MyGame_Example_Monster_parse_json_table+0x3338>
    d080:	ldrd	r2, [fp, #-12]
    d084:	add	r1, pc, #796	; 0x31c
    d088:	ldrd	r0, [r1]
    d08c:	cmp	r3, r1
    d090:	cmpeq	r2, r0
    d094:	bne	d384 <MyGame_Example_Monster_parse_json_table+0x32f8>
    d098:	ldr	r3, [fp, #-140]	; 0xffffff74
    d09c:	add	r3, r3, #8
    d0a0:	str	r3, [fp, #-140]	; 0xffffff74
    d0a4:	ldr	r1, [fp, #-144]	; 0xffffff70
    d0a8:	ldr	r0, [fp, #-140]	; 0xffffff74
    d0ac:	bl	854 <flatcc_json_parser_symbol_part>
    d0b0:	strd	r0, [fp, #-12]
    d0b4:	ldrd	r2, [fp, #-12]
    d0b8:	add	r1, pc, #752	; 0x2f0
    d0bc:	ldrd	r0, [r1]
    d0c0:	cmp	r3, r1
    d0c4:	cmpeq	r2, r0
    d0c8:	bne	d36c <MyGame_Example_Monster_parse_json_table+0x32e0>
    d0cc:	ldr	r3, [fp, #-140]	; 0xffffff74
    d0d0:	add	r3, r3, #8
    d0d4:	str	r3, [fp, #-140]	; 0xffffff74
    d0d8:	ldr	r1, [fp, #-144]	; 0xffffff70
    d0dc:	ldr	r0, [fp, #-140]	; 0xffffff74
    d0e0:	bl	854 <flatcc_json_parser_symbol_part>
    d0e4:	strd	r0, [fp, #-12]
    d0e8:	ldrd	r2, [fp, #-12]
    d0ec:	mov	r0, #0
    d0f0:	mvn	r1, #0
    d0f4:	and	r2, r2, r0
    d0f8:	and	r3, r3, r1
    d0fc:	add	r1, pc, #692	; 0x2b4
    d100:	ldrd	r0, [r1]
    d104:	cmp	r3, r1
    d108:	cmpeq	r2, r0
    d10c:	bne	d354 <MyGame_Example_Monster_parse_json_table+0x32c8>
    d110:	ldr	r3, [fp, #-140]	; 0xffffff74
    d114:	str	r3, [fp, #-16]
    d118:	mov	r3, #4
    d11c:	ldr	r2, [fp, #-144]	; 0xffffff70
    d120:	ldr	r1, [fp, #-16]
    d124:	ldr	r0, [fp, #-136]	; 0xffffff78
    d128:	bl	e20 <flatcc_json_parser_match_symbol>
    d12c:	str	r0, [fp, #-140]	; 0xffffff74
    d130:	ldr	r2, [fp, #-16]
    d134:	ldr	r3, [fp, #-140]	; 0xffffff74
    d138:	cmp	r2, r3
    d13c:	beq	d33c <MyGame_Example_Monster_parse_json_table+0x32b0>
    d140:	ldr	r2, [fp, #-140]	; 0xffffff74
    d144:	ldr	r3, [fp, #-144]	; 0xffffff70
    d148:	cmp	r2, r3
    d14c:	beq	d294 <MyGame_Example_Monster_parse_json_table+0x3208>
    d150:	ldr	r3, [fp, #-140]	; 0xffffff74
    d154:	ldrb	r3, [r3]
    d158:	cmp	r3, #91	; 0x5b
    d15c:	bne	d294 <MyGame_Example_Monster_parse_json_table+0x3208>
    d160:	ldr	r3, [fp, #-136]	; 0xffffff78
    d164:	ldr	r0, [r3]
    d168:	mvn	r3, #0
    d16c:	mov	r2, #1
    d170:	mov	r1, #1
    d174:	bl	0 <flatcc_builder_start_vector>
    d178:	mov	r3, r0
    d17c:	cmp	r3, #0
    d180:	bne	da10 <MyGame_Example_Monster_parse_json_table+0x3984>
    d184:	sub	r3, fp, #28
    d188:	ldr	r2, [fp, #-144]	; 0xffffff70
    d18c:	ldr	r1, [fp, #-140]	; 0xffffff74
    d190:	ldr	r0, [fp, #-136]	; 0xffffff78
    d194:	bl	bd0 <flatcc_json_parser_array_start>
    d198:	str	r0, [fp, #-140]	; 0xffffff74
    d19c:	b	d26c <MyGame_Example_Monster_parse_json_table+0x31e0>
    d1a0:	mov	r3, #0
    d1a4:	strb	r3, [fp, #-109]	; 0xffffff93
    d1a8:	ldr	r3, [fp, #-136]	; 0xffffff78
    d1ac:	ldr	r3, [r3]
    d1b0:	mov	r1, #1
    d1b4:	mov	r0, r3
    d1b8:	bl	0 <flatcc_builder_extend_vector>
    d1bc:	str	r0, [fp, #-24]	; 0xffffffe8
    d1c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d1c4:	cmp	r3, #0
    d1c8:	beq	da18 <MyGame_Example_Monster_parse_json_table+0x398c>
    d1cc:	ldr	r3, [fp, #-140]	; 0xffffff74
    d1d0:	str	r3, [fp, #-16]
    d1d4:	sub	r3, fp, #109	; 0x6d
    d1d8:	ldr	r2, [fp, #-144]	; 0xffffff70
    d1dc:	ldr	r1, [fp, #-16]
    d1e0:	ldr	r0, [fp, #-136]	; 0xffffff78
    d1e4:	bl	18b4 <flatcc_json_parser_uint8>
    d1e8:	str	r0, [fp, #-140]	; 0xffffff74
    d1ec:	ldr	r2, [fp, #-16]
    d1f0:	ldr	r3, [fp, #-140]	; 0xffffff74
    d1f4:	cmp	r2, r3
    d1f8:	bne	d244 <MyGame_Example_Monster_parse_json_table+0x31b8>
    d1fc:	ldr	r3, [fp, #-140]	; 0xffffff74
    d200:	str	r3, [fp, #-16]
    d204:	sub	r3, fp, #109	; 0x6d
    d208:	str	r3, [sp]
    d20c:	ldr	r3, [pc, #428]	; d3c0 <MyGame_Example_Monster_parse_json_table+0x3334>
    d210:	ldr	r2, [fp, #-144]	; 0xffffff70
    d214:	ldr	r1, [fp, #-16]
    d218:	ldr	r0, [fp, #-136]	; 0xffffff78
    d21c:	bl	2340 <flatcc_json_parser_symbolic_uint8>
    d220:	str	r0, [fp, #-140]	; 0xffffff74
    d224:	ldr	r2, [fp, #-140]	; 0xffffff74
    d228:	ldr	r3, [fp, #-16]
    d22c:	cmp	r2, r3
    d230:	beq	da18 <MyGame_Example_Monster_parse_json_table+0x398c>
    d234:	ldr	r2, [fp, #-140]	; 0xffffff74
    d238:	ldr	r3, [fp, #-144]	; 0xffffff70
    d23c:	cmp	r2, r3
    d240:	beq	da18 <MyGame_Example_Monster_parse_json_table+0x398c>
    d244:	ldrb	r3, [fp, #-109]	; 0xffffff93
    d248:	mov	r1, r3
    d24c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d250:	bl	28 <flatbuffers_uint8_write_to_pe>
    d254:	sub	r3, fp, #28
    d258:	ldr	r2, [fp, #-144]	; 0xffffff70
    d25c:	ldr	r1, [fp, #-140]	; 0xffffff74
    d260:	ldr	r0, [fp, #-136]	; 0xffffff78
    d264:	bl	cb8 <flatcc_json_parser_array_end>
    d268:	str	r0, [fp, #-140]	; 0xffffff74
    d26c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d270:	cmp	r3, #0
    d274:	bne	d1a0 <MyGame_Example_Monster_parse_json_table+0x3114>
    d278:	ldr	r3, [fp, #-136]	; 0xffffff78
    d27c:	ldr	r3, [r3]
    d280:	mov	r0, r3
    d284:	bl	0 <flatcc_builder_end_vector>
    d288:	mov	r3, r0
    d28c:	str	r3, [fp, #-32]	; 0xffffffe0
    d290:	b	d2fc <MyGame_Example_Monster_parse_json_table+0x3270>
    d294:	ldr	r3, [fp, #-136]	; 0xffffff78
    d298:	ldr	r0, [r3]
    d29c:	mov	r3, #0
    d2a0:	mov	r2, #0
    d2a4:	mov	r1, #0
    d2a8:	bl	0 <flatcc_builder_start_buffer>
    d2ac:	mov	r3, r0
    d2b0:	cmp	r3, #0
    d2b4:	bne	da20 <MyGame_Example_Monster_parse_json_table+0x3994>
    d2b8:	sub	r3, fp, #32
    d2bc:	ldr	r2, [fp, #-144]	; 0xffffff70
    d2c0:	ldr	r1, [fp, #-140]	; 0xffffff74
    d2c4:	ldr	r0, [fp, #-136]	; 0xffffff78
    d2c8:	bl	a08c <MyGame_Example_Monster_parse_json_table>
    d2cc:	str	r0, [fp, #-140]	; 0xffffff74
    d2d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d2d4:	cmp	r3, #0
    d2d8:	beq	da28 <MyGame_Example_Monster_parse_json_table+0x399c>
    d2dc:	ldr	r3, [fp, #-136]	; 0xffffff78
    d2e0:	ldr	r3, [r3]
    d2e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    d2e8:	mov	r1, r2
    d2ec:	mov	r0, r3
    d2f0:	bl	0 <flatcc_builder_end_buffer>
    d2f4:	mov	r3, r0
    d2f8:	str	r3, [fp, #-32]	; 0xffffffe0
    d2fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d300:	cmp	r3, #0
    d304:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d308:	ldr	r3, [fp, #-136]	; 0xffffff78
    d30c:	ldr	r3, [r3]
    d310:	mov	r1, #13
    d314:	mov	r0, r3
    d318:	bl	0 <flatcc_builder_table_add_offset>
    d31c:	str	r0, [fp, #-20]	; 0xffffffec
    d320:	ldr	r3, [fp, #-20]	; 0xffffffec
    d324:	cmp	r3, #0
    d328:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d32c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    d330:	ldr	r3, [fp, #-20]	; 0xffffffec
    d334:	str	r2, [r3]
    d338:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d33c:	ldr	r2, [fp, #-144]	; 0xffffff70
    d340:	ldr	r1, [fp, #-140]	; 0xffffff74
    d344:	ldr	r0, [fp, #-136]	; 0xffffff78
    d348:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d34c:	str	r0, [fp, #-140]	; 0xffffff74
    d350:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d354:	ldr	r2, [fp, #-144]	; 0xffffff70
    d358:	ldr	r1, [fp, #-140]	; 0xffffff74
    d35c:	ldr	r0, [fp, #-136]	; 0xffffff78
    d360:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d364:	str	r0, [fp, #-140]	; 0xffffff74
    d368:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d36c:	ldr	r2, [fp, #-144]	; 0xffffff70
    d370:	ldr	r1, [fp, #-140]	; 0xffffff74
    d374:	ldr	r0, [fp, #-136]	; 0xffffff78
    d378:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d37c:	str	r0, [fp, #-140]	; 0xffffff74
    d380:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d384:	ldr	r2, [fp, #-144]	; 0xffffff70
    d388:	ldr	r1, [fp, #-140]	; 0xffffff74
    d38c:	ldr	r0, [fp, #-136]	; 0xffffff78
    d390:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d394:	str	r0, [fp, #-140]	; 0xffffff74
    d398:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d39c:	nop			; (mov r0, r0)
    d3a0:	.word	0x6f725f6e
    d3a4:	.word	0x76656374
    d3a8:	.word	0x6e657374
    d3ac:	.word	0x74657374
    d3b0:	.word	0x61746275
    d3b4:	.word	0x6564666c
    d3b8:	.word	0x00000000
    d3bc:	.word	0x66666572
    d3c0:	.word	0x00000284
    d3c4:	ldrd	r2, [fp, #-12]
    d3c8:	add	r1, pc, #744	; 0x2e8
    d3cc:	ldrd	r0, [r1]
    d3d0:	cmp	r3, r1
    d3d4:	cmpeq	r2, r0
    d3d8:	bne	d838 <MyGame_Example_Monster_parse_json_table+0x37ac>
    d3dc:	ldr	r3, [fp, #-140]	; 0xffffff74
    d3e0:	add	r3, r3, #8
    d3e4:	str	r3, [fp, #-140]	; 0xffffff74
    d3e8:	ldr	r1, [fp, #-144]	; 0xffffff70
    d3ec:	ldr	r0, [fp, #-140]	; 0xffffff74
    d3f0:	bl	854 <flatcc_json_parser_symbol_part>
    d3f4:	strd	r0, [fp, #-12]
    d3f8:	ldrd	r2, [fp, #-12]
    d3fc:	add	r1, pc, #700	; 0x2bc
    d400:	ldrd	r0, [r1]
    d404:	cmp	r3, r1
    d408:	cmpeq	r2, r0
    d40c:	bne	d620 <MyGame_Example_Monster_parse_json_table+0x3594>
    d410:	ldr	r3, [fp, #-140]	; 0xffffff74
    d414:	add	r3, r3, #8
    d418:	str	r3, [fp, #-140]	; 0xffffff74
    d41c:	ldr	r1, [fp, #-144]	; 0xffffff70
    d420:	ldr	r0, [fp, #-140]	; 0xffffff74
    d424:	bl	854 <flatcc_json_parser_symbol_part>
    d428:	strd	r0, [fp, #-12]
    d42c:	ldrd	r2, [fp, #-12]
    d430:	mov	r0, #0
    d434:	mov	r1, #-16777216	; 0xff000000
    d438:	and	r2, r2, r0
    d43c:	and	r3, r3, r1
    d440:	cmp	r3, #1929379840	; 0x73000000
    d444:	cmpeq	r2, #0
    d448:	bne	d608 <MyGame_Example_Monster_parse_json_table+0x357c>
    d44c:	ldr	r3, [fp, #-140]	; 0xffffff74
    d450:	str	r3, [fp, #-16]
    d454:	mov	r3, #1
    d458:	ldr	r2, [fp, #-144]	; 0xffffff70
    d45c:	ldr	r1, [fp, #-16]
    d460:	ldr	r0, [fp, #-136]	; 0xffffff78
    d464:	bl	e20 <flatcc_json_parser_match_symbol>
    d468:	str	r0, [fp, #-140]	; 0xffffff74
    d46c:	ldr	r2, [fp, #-16]
    d470:	ldr	r3, [fp, #-140]	; 0xffffff74
    d474:	cmp	r2, r3
    d478:	beq	d5f0 <MyGame_Example_Monster_parse_json_table+0x3564>
    d47c:	ldr	r3, [fp, #-136]	; 0xffffff78
    d480:	ldr	r0, [r3]
    d484:	mvn	r3, #-536870912	; 0xe0000000
    d488:	mov	r2, #8
    d48c:	mov	r1, #8
    d490:	bl	0 <flatcc_builder_start_vector>
    d494:	mov	r3, r0
    d498:	cmp	r3, #0
    d49c:	bne	da30 <MyGame_Example_Monster_parse_json_table+0x39a4>
    d4a0:	sub	r3, fp, #28
    d4a4:	ldr	r2, [fp, #-144]	; 0xffffff70
    d4a8:	ldr	r1, [fp, #-140]	; 0xffffff74
    d4ac:	ldr	r0, [fp, #-136]	; 0xffffff78
    d4b0:	bl	bd0 <flatcc_json_parser_array_start>
    d4b4:	str	r0, [fp, #-140]	; 0xffffff74
    d4b8:	b	d58c <MyGame_Example_Monster_parse_json_table+0x3500>
    d4bc:	mov	r2, #0
    d4c0:	mov	r3, #0
    d4c4:	strd	r2, [fp, #-124]	; 0xffffff84
    d4c8:	ldr	r3, [fp, #-136]	; 0xffffff78
    d4cc:	ldr	r3, [r3]
    d4d0:	mov	r1, #1
    d4d4:	mov	r0, r3
    d4d8:	bl	0 <flatcc_builder_extend_vector>
    d4dc:	str	r0, [fp, #-24]	; 0xffffffe8
    d4e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d4e4:	cmp	r3, #0
    d4e8:	beq	da38 <MyGame_Example_Monster_parse_json_table+0x39ac>
    d4ec:	ldr	r3, [fp, #-140]	; 0xffffff74
    d4f0:	str	r3, [fp, #-16]
    d4f4:	sub	r3, fp, #124	; 0x7c
    d4f8:	ldr	r2, [fp, #-144]	; 0xffffff70
    d4fc:	ldr	r1, [fp, #-16]
    d500:	ldr	r0, [fp, #-136]	; 0xffffff78
    d504:	bl	0 <flatcc_json_parser_double>
    d508:	str	r0, [fp, #-140]	; 0xffffff74
    d50c:	ldr	r2, [fp, #-16]
    d510:	ldr	r3, [fp, #-140]	; 0xffffff74
    d514:	cmp	r2, r3
    d518:	bne	d564 <MyGame_Example_Monster_parse_json_table+0x34d8>
    d51c:	ldr	r3, [fp, #-140]	; 0xffffff74
    d520:	str	r3, [fp, #-16]
    d524:	sub	r3, fp, #124	; 0x7c
    d528:	str	r3, [sp]
    d52c:	ldr	r3, [pc, #412]	; d6d0 <MyGame_Example_Monster_parse_json_table+0x3644>
    d530:	ldr	r2, [fp, #-144]	; 0xffffff70
    d534:	ldr	r1, [fp, #-16]
    d538:	ldr	r0, [fp, #-136]	; 0xffffff78
    d53c:	bl	3008 <flatcc_json_parser_symbolic_double>
    d540:	str	r0, [fp, #-140]	; 0xffffff74
    d544:	ldr	r2, [fp, #-140]	; 0xffffff74
    d548:	ldr	r3, [fp, #-16]
    d54c:	cmp	r2, r3
    d550:	beq	da38 <MyGame_Example_Monster_parse_json_table+0x39ac>
    d554:	ldr	r2, [fp, #-140]	; 0xffffff74
    d558:	ldr	r3, [fp, #-144]	; 0xffffff70
    d55c:	cmp	r2, r3
    d560:	beq	da38 <MyGame_Example_Monster_parse_json_table+0x39ac>
    d564:	vldr	d7, [fp, #-124]	; 0xffffff84
    d568:	vmov.f64	d0, d7
    d56c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d570:	bl	3b4 <flatbuffers_double_write_to_pe>
    d574:	sub	r3, fp, #28
    d578:	ldr	r2, [fp, #-144]	; 0xffffff70
    d57c:	ldr	r1, [fp, #-140]	; 0xffffff74
    d580:	ldr	r0, [fp, #-136]	; 0xffffff78
    d584:	bl	cb8 <flatcc_json_parser_array_end>
    d588:	str	r0, [fp, #-140]	; 0xffffff74
    d58c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d590:	cmp	r3, #0
    d594:	bne	d4bc <MyGame_Example_Monster_parse_json_table+0x3430>
    d598:	ldr	r3, [fp, #-136]	; 0xffffff78
    d59c:	ldr	r3, [r3]
    d5a0:	mov	r0, r3
    d5a4:	bl	0 <flatcc_builder_end_vector>
    d5a8:	mov	r3, r0
    d5ac:	str	r3, [fp, #-32]	; 0xffffffe0
    d5b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d5b4:	cmp	r3, #0
    d5b8:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d5bc:	ldr	r3, [fp, #-136]	; 0xffffff78
    d5c0:	ldr	r3, [r3]
    d5c4:	mov	r1, #33	; 0x21
    d5c8:	mov	r0, r3
    d5cc:	bl	0 <flatcc_builder_table_add_offset>
    d5d0:	str	r0, [fp, #-20]	; 0xffffffec
    d5d4:	ldr	r3, [fp, #-20]	; 0xffffffec
    d5d8:	cmp	r3, #0
    d5dc:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d5e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    d5e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    d5e8:	str	r2, [r3]
    d5ec:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d5f0:	ldr	r2, [fp, #-144]	; 0xffffff70
    d5f4:	ldr	r1, [fp, #-140]	; 0xffffff74
    d5f8:	ldr	r0, [fp, #-136]	; 0xffffff78
    d5fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d600:	str	r0, [fp, #-140]	; 0xffffff74
    d604:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d608:	ldr	r2, [fp, #-144]	; 0xffffff70
    d60c:	ldr	r1, [fp, #-140]	; 0xffffff74
    d610:	ldr	r0, [fp, #-136]	; 0xffffff78
    d614:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d618:	str	r0, [fp, #-140]	; 0xffffff74
    d61c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d620:	ldrd	r2, [fp, #-12]
    d624:	mvn	r0, #255	; 0xff
    d628:	mvn	r1, #0
    d62c:	and	r2, r2, r0
    d630:	and	r3, r3, r1
    d634:	add	r1, pc, #140	; 0x8c
    d638:	ldrd	r0, [r1]
    d63c:	cmp	r3, r1
    d640:	cmpeq	r2, r0
    d644:	bne	d820 <MyGame_Example_Monster_parse_json_table+0x3794>
    d648:	ldr	r3, [fp, #-140]	; 0xffffff74
    d64c:	str	r3, [fp, #-16]
    d650:	mov	r3, #7
    d654:	ldr	r2, [fp, #-144]	; 0xffffff70
    d658:	ldr	r1, [fp, #-16]
    d65c:	ldr	r0, [fp, #-136]	; 0xffffff78
    d660:	bl	e20 <flatcc_json_parser_match_symbol>
    d664:	str	r0, [fp, #-140]	; 0xffffff74
    d668:	ldr	r2, [fp, #-16]
    d66c:	ldr	r3, [fp, #-140]	; 0xffffff74
    d670:	cmp	r2, r3
    d674:	beq	d808 <MyGame_Example_Monster_parse_json_table+0x377c>
    d678:	ldr	r3, [fp, #-136]	; 0xffffff78
    d67c:	ldr	r0, [r3]
    d680:	mvn	r3, #-536870912	; 0xe0000000
    d684:	mov	r2, #8
    d688:	mov	r1, #8
    d68c:	bl	0 <flatcc_builder_start_vector>
    d690:	mov	r3, r0
    d694:	cmp	r3, #0
    d698:	bne	da40 <MyGame_Example_Monster_parse_json_table+0x39b4>
    d69c:	sub	r3, fp, #28
    d6a0:	ldr	r2, [fp, #-144]	; 0xffffff70
    d6a4:	ldr	r1, [fp, #-140]	; 0xffffff74
    d6a8:	ldr	r0, [fp, #-136]	; 0xffffff78
    d6ac:	bl	bd0 <flatcc_json_parser_array_start>
    d6b0:	str	r0, [fp, #-140]	; 0xffffff74
    d6b4:	b	d7a4 <MyGame_Example_Monster_parse_json_table+0x3718>
    d6b8:	.word	0x6f725f6f
    d6bc:	.word	0x76656374
    d6c0:	.word	0x75626c65
    d6c4:	.word	0x665f646f
    d6c8:	.word	0x6e677300
    d6cc:	.word	0x665f6c6f
    d6d0:	.word	0x00000290
    d6d4:	.word	0x0000029c
    d6d8:	mov	r2, #0
    d6dc:	mov	r3, #0
    d6e0:	strd	r2, [fp, #-132]	; 0xffffff7c
    d6e4:	ldr	r3, [fp, #-136]	; 0xffffff78
    d6e8:	ldr	r3, [r3]
    d6ec:	mov	r1, #1
    d6f0:	mov	r0, r3
    d6f4:	bl	0 <flatcc_builder_extend_vector>
    d6f8:	str	r0, [fp, #-24]	; 0xffffffe8
    d6fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d700:	cmp	r3, #0
    d704:	beq	da48 <MyGame_Example_Monster_parse_json_table+0x39bc>
    d708:	ldr	r3, [fp, #-140]	; 0xffffff74
    d70c:	str	r3, [fp, #-16]
    d710:	sub	r3, fp, #132	; 0x84
    d714:	ldr	r2, [fp, #-144]	; 0xffffff70
    d718:	ldr	r1, [fp, #-16]
    d71c:	ldr	r0, [fp, #-136]	; 0xffffff78
    d720:	bl	1984 <flatcc_json_parser_int64>
    d724:	str	r0, [fp, #-140]	; 0xffffff74
    d728:	ldr	r2, [fp, #-16]
    d72c:	ldr	r3, [fp, #-140]	; 0xffffff74
    d730:	cmp	r2, r3
    d734:	bne	d780 <MyGame_Example_Monster_parse_json_table+0x36f4>
    d738:	ldr	r3, [fp, #-140]	; 0xffffff74
    d73c:	str	r3, [fp, #-16]
    d740:	sub	r3, fp, #132	; 0x84
    d744:	str	r3, [sp]
    d748:	ldr	r3, [pc, #-124]	; d6d4 <MyGame_Example_Monster_parse_json_table+0x3648>
    d74c:	ldr	r2, [fp, #-144]	; 0xffffff70
    d750:	ldr	r1, [fp, #-16]
    d754:	ldr	r0, [fp, #-136]	; 0xffffff78
    d758:	bl	2510 <flatcc_json_parser_symbolic_int64>
    d75c:	str	r0, [fp, #-140]	; 0xffffff74
    d760:	ldr	r2, [fp, #-140]	; 0xffffff74
    d764:	ldr	r3, [fp, #-16]
    d768:	cmp	r2, r3
    d76c:	beq	da48 <MyGame_Example_Monster_parse_json_table+0x39bc>
    d770:	ldr	r2, [fp, #-140]	; 0xffffff74
    d774:	ldr	r3, [fp, #-144]	; 0xffffff70
    d778:	cmp	r2, r3
    d77c:	beq	da48 <MyGame_Example_Monster_parse_json_table+0x39bc>
    d780:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    d784:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d788:	bl	2d8 <flatbuffers_int64_write_to_pe>
    d78c:	sub	r3, fp, #28
    d790:	ldr	r2, [fp, #-144]	; 0xffffff70
    d794:	ldr	r1, [fp, #-140]	; 0xffffff74
    d798:	ldr	r0, [fp, #-136]	; 0xffffff78
    d79c:	bl	cb8 <flatcc_json_parser_array_end>
    d7a0:	str	r0, [fp, #-140]	; 0xffffff74
    d7a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d7a8:	cmp	r3, #0
    d7ac:	bne	d6d8 <MyGame_Example_Monster_parse_json_table+0x364c>
    d7b0:	ldr	r3, [fp, #-136]	; 0xffffff78
    d7b4:	ldr	r3, [r3]
    d7b8:	mov	r0, r3
    d7bc:	bl	0 <flatcc_builder_end_vector>
    d7c0:	mov	r3, r0
    d7c4:	str	r3, [fp, #-32]	; 0xffffffe0
    d7c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d7cc:	cmp	r3, #0
    d7d0:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d7d4:	ldr	r3, [fp, #-136]	; 0xffffff78
    d7d8:	ldr	r3, [r3]
    d7dc:	mov	r1, #32
    d7e0:	mov	r0, r3
    d7e4:	bl	0 <flatcc_builder_table_add_offset>
    d7e8:	str	r0, [fp, #-20]	; 0xffffffec
    d7ec:	ldr	r3, [fp, #-20]	; 0xffffffec
    d7f0:	cmp	r3, #0
    d7f4:	beq	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d7f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    d7fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    d800:	str	r2, [r3]
    d804:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d808:	ldr	r2, [fp, #-144]	; 0xffffff70
    d80c:	ldr	r1, [fp, #-140]	; 0xffffff74
    d810:	ldr	r0, [fp, #-136]	; 0xffffff78
    d814:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d818:	str	r0, [fp, #-140]	; 0xffffff74
    d81c:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d820:	ldr	r2, [fp, #-144]	; 0xffffff70
    d824:	ldr	r1, [fp, #-140]	; 0xffffff74
    d828:	ldr	r0, [fp, #-136]	; 0xffffff78
    d82c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d830:	str	r0, [fp, #-140]	; 0xffffff74
    d834:	b	d84c <MyGame_Example_Monster_parse_json_table+0x37c0>
    d838:	ldr	r2, [fp, #-144]	; 0xffffff70
    d83c:	ldr	r1, [fp, #-140]	; 0xffffff74
    d840:	ldr	r0, [fp, #-136]	; 0xffffff78
    d844:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d848:	str	r0, [fp, #-140]	; 0xffffff74
    d84c:	sub	r3, fp, #28
    d850:	ldr	r2, [fp, #-144]	; 0xffffff70
    d854:	ldr	r1, [fp, #-140]	; 0xffffff74
    d858:	ldr	r0, [fp, #-136]	; 0xffffff78
    d85c:	bl	a68 <flatcc_json_parser_object_end>
    d860:	str	r0, [fp, #-140]	; 0xffffff74
    d864:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d868:	cmp	r3, #0
    d86c:	bne	a11c <MyGame_Example_Monster_parse_json_table+0x90>
    d870:	ldr	r3, [fp, #-136]	; 0xffffff78
    d874:	ldr	r3, [r3, #24]
    d878:	cmp	r3, #0
    d87c:	bne	da50 <MyGame_Example_Monster_parse_json_table+0x39c4>
    d880:	ldr	r3, [fp, #-136]	; 0xffffff78
    d884:	ldr	r3, [r3]
    d888:	mov	r1, #3
    d88c:	mov	r0, r3
    d890:	bl	0 <flatcc_builder_check_required_field>
    d894:	mov	r3, r0
    d898:	cmp	r3, #0
    d89c:	bne	d8bc <MyGame_Example_Monster_parse_json_table+0x3830>
    d8a0:	mov	r3, #29
    d8a4:	ldr	r2, [fp, #-144]	; 0xffffff70
    d8a8:	ldr	r1, [fp, #-140]	; 0xffffff74
    d8ac:	ldr	r0, [fp, #-136]	; 0xffffff78
    d8b0:	bl	0 <flatcc_json_parser_set_error>
    d8b4:	str	r0, [fp, #-140]	; 0xffffff74
    d8b8:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d8bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d8c0:	ldr	r2, [fp, #-144]	; 0xffffff70
    d8c4:	ldr	r1, [fp, #-140]	; 0xffffff74
    d8c8:	ldr	r0, [fp, #-136]	; 0xffffff78
    d8cc:	bl	0 <flatcc_json_parser_finalize_unions>
    d8d0:	str	r0, [fp, #-140]	; 0xffffff74
    d8d4:	ldr	r3, [fp, #-136]	; 0xffffff78
    d8d8:	ldr	r3, [r3]
    d8dc:	mov	r0, r3
    d8e0:	bl	0 <flatcc_builder_end_table>
    d8e4:	mov	r2, r0
    d8e8:	ldr	r3, [fp, #-148]	; 0xffffff6c
    d8ec:	str	r2, [r3]
    d8f0:	ldr	r3, [fp, #-148]	; 0xffffff6c
    d8f4:	ldr	r3, [r3]
    d8f8:	cmp	r3, #0
    d8fc:	beq	da58 <MyGame_Example_Monster_parse_json_table+0x39cc>
    d900:	ldr	r3, [fp, #-140]	; 0xffffff74
    d904:	b	da74 <MyGame_Example_Monster_parse_json_table+0x39e8>
    d908:	nop			; (mov r0, r0)
    d90c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d910:	nop			; (mov r0, r0)
    d914:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d918:	nop			; (mov r0, r0)
    d91c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d920:	nop			; (mov r0, r0)
    d924:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d928:	nop			; (mov r0, r0)
    d92c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d930:	nop			; (mov r0, r0)
    d934:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d938:	nop			; (mov r0, r0)
    d93c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d940:	nop			; (mov r0, r0)
    d944:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d948:	nop			; (mov r0, r0)
    d94c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d950:	nop			; (mov r0, r0)
    d954:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d958:	nop			; (mov r0, r0)
    d95c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d960:	nop			; (mov r0, r0)
    d964:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d968:	nop			; (mov r0, r0)
    d96c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d970:	nop			; (mov r0, r0)
    d974:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d978:	nop			; (mov r0, r0)
    d97c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d980:	nop			; (mov r0, r0)
    d984:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d988:	nop			; (mov r0, r0)
    d98c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d990:	nop			; (mov r0, r0)
    d994:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d998:	nop			; (mov r0, r0)
    d99c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d9a0:	nop			; (mov r0, r0)
    d9a4:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d9a8:	nop			; (mov r0, r0)
    d9ac:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d9b0:	nop			; (mov r0, r0)
    d9b4:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d9b8:	nop			; (mov r0, r0)
    d9bc:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d9c0:	nop			; (mov r0, r0)
    d9c4:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d9c8:	nop			; (mov r0, r0)
    d9cc:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d9d0:	nop			; (mov r0, r0)
    d9d4:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d9d8:	nop			; (mov r0, r0)
    d9dc:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d9e0:	nop			; (mov r0, r0)
    d9e4:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d9e8:	nop			; (mov r0, r0)
    d9ec:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d9f0:	nop			; (mov r0, r0)
    d9f4:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    d9f8:	nop			; (mov r0, r0)
    d9fc:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    da00:	nop			; (mov r0, r0)
    da04:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    da08:	nop			; (mov r0, r0)
    da0c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    da10:	nop			; (mov r0, r0)
    da14:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    da18:	nop			; (mov r0, r0)
    da1c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    da20:	nop			; (mov r0, r0)
    da24:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    da28:	nop			; (mov r0, r0)
    da2c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    da30:	nop			; (mov r0, r0)
    da34:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    da38:	nop			; (mov r0, r0)
    da3c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    da40:	nop			; (mov r0, r0)
    da44:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    da48:	nop			; (mov r0, r0)
    da4c:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    da50:	nop			; (mov r0, r0)
    da54:	b	da5c <MyGame_Example_Monster_parse_json_table+0x39d0>
    da58:	nop			; (mov r0, r0)
    da5c:	mov	r3, #33	; 0x21
    da60:	ldr	r2, [fp, #-144]	; 0xffffff70
    da64:	ldr	r1, [fp, #-140]	; 0xffffff74
    da68:	ldr	r0, [fp, #-136]	; 0xffffff78
    da6c:	bl	0 <flatcc_json_parser_set_error>
    da70:	mov	r3, r0
    da74:	mov	r0, r3
    da78:	sub	sp, fp, #4
    da7c:	pop	{fp, pc}

0000da80 <MyGame_Example_TypeAliases_parse_json_table>:
    da80:	push	{fp, lr}
    da84:	add	fp, sp, #4
    da88:	sub	sp, sp, #128	; 0x80
    da8c:	str	r0, [fp, #-112]	; 0xffffff90
    da90:	str	r1, [fp, #-116]	; 0xffffff8c
    da94:	str	r2, [fp, #-120]	; 0xffffff88
    da98:	str	r3, [fp, #-124]	; 0xffffff84
    da9c:	ldr	r3, [fp, #-124]	; 0xffffff84
    daa0:	mov	r2, #0
    daa4:	str	r2, [r3]
    daa8:	ldr	r3, [fp, #-112]	; 0xffffff90
    daac:	ldr	r3, [r3]
    dab0:	mov	r1, #12
    dab4:	mov	r0, r3
    dab8:	bl	0 <flatcc_builder_start_table>
    dabc:	mov	r3, r0
    dac0:	cmp	r3, #0
    dac4:	bne	ee58 <MyGame_Example_TypeAliases_parse_json_table+0x13d8>
    dac8:	sub	r3, fp, #32
    dacc:	ldr	r2, [fp, #-120]	; 0xffffff88
    dad0:	ldr	r1, [fp, #-116]	; 0xffffff8c
    dad4:	ldr	r0, [fp, #-112]	; 0xffffff90
    dad8:	bl	980 <flatcc_json_parser_object_start>
    dadc:	str	r0, [fp, #-116]	; 0xffffff8c
    dae0:	b	ee08 <MyGame_Example_TypeAliases_parse_json_table+0x1388>
    dae4:	ldr	r2, [fp, #-120]	; 0xffffff88
    dae8:	ldr	r1, [fp, #-116]	; 0xffffff8c
    daec:	ldr	r0, [fp, #-112]	; 0xffffff90
    daf0:	bl	570 <flatcc_json_parser_symbol_start>
    daf4:	str	r0, [fp, #-116]	; 0xffffff8c
    daf8:	ldr	r1, [fp, #-120]	; 0xffffff88
    dafc:	ldr	r0, [fp, #-116]	; 0xffffff8c
    db00:	bl	854 <flatcc_json_parser_symbol_part>
    db04:	strd	r0, [fp, #-12]
    db08:	ldrd	r2, [fp, #-12]
    db0c:	mvn	r0, #0
    db10:	ldr	r1, [pc, #760]	; de10 <MyGame_Example_TypeAliases_parse_json_table+0x390>
    db14:	cmp	r3, r1
    db18:	cmpeq	r2, r0
    db1c:	bhi	e26c <MyGame_Example_TypeAliases_parse_json_table+0x7ec>
    db20:	ldrd	r2, [fp, #-12]
    db24:	add	r1, pc, #716	; 0x2cc
    db28:	ldrd	r0, [r1]
    db2c:	cmp	r3, r1
    db30:	cmpeq	r2, r0
    db34:	bhi	de1c <MyGame_Example_TypeAliases_parse_json_table+0x39c>
    db38:	ldrd	r2, [fp, #-12]
    db3c:	mov	r0, #0
    db40:	mvn	r1, #255	; 0xff
    db44:	and	r2, r2, r0
    db48:	and	r3, r3, r1
    db4c:	add	r1, pc, #684	; 0x2ac
    db50:	ldrd	r0, [r1]
    db54:	cmp	r3, r1
    db58:	cmpeq	r2, r0
    db5c:	bne	dc8c <MyGame_Example_TypeAliases_parse_json_table+0x20c>
    db60:	ldr	r3, [fp, #-116]	; 0xffffff8c
    db64:	str	r3, [fp, #-16]
    db68:	mov	r3, #3
    db6c:	ldr	r2, [fp, #-120]	; 0xffffff88
    db70:	ldr	r1, [fp, #-16]
    db74:	ldr	r0, [fp, #-112]	; 0xffffff90
    db78:	bl	e20 <flatcc_json_parser_match_symbol>
    db7c:	str	r0, [fp, #-116]	; 0xffffff8c
    db80:	ldr	r2, [fp, #-16]
    db84:	ldr	r3, [fp, #-116]	; 0xffffff8c
    db88:	cmp	r2, r3
    db8c:	beq	dc74 <MyGame_Example_TypeAliases_parse_json_table+0x1f4>
    db90:	mov	r2, #0
    db94:	mov	r3, #0
    db98:	strd	r2, [fp, #-44]	; 0xffffffd4
    db9c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    dba0:	str	r3, [fp, #-16]
    dba4:	sub	r3, fp, #44	; 0x2c
    dba8:	ldr	r2, [fp, #-120]	; 0xffffff88
    dbac:	ldr	r1, [fp, #-16]
    dbb0:	ldr	r0, [fp, #-112]	; 0xffffff90
    dbb4:	bl	0 <flatcc_json_parser_double>
    dbb8:	str	r0, [fp, #-116]	; 0xffffff8c
    dbbc:	ldr	r2, [fp, #-16]
    dbc0:	ldr	r3, [fp, #-116]	; 0xffffff8c
    dbc4:	cmp	r2, r3
    dbc8:	bne	dc14 <MyGame_Example_TypeAliases_parse_json_table+0x194>
    dbcc:	ldr	r3, [fp, #-116]	; 0xffffff8c
    dbd0:	str	r3, [fp, #-16]
    dbd4:	sub	r3, fp, #44	; 0x2c
    dbd8:	str	r3, [sp]
    dbdc:	ldr	r3, [pc, #560]	; de14 <MyGame_Example_TypeAliases_parse_json_table+0x394>
    dbe0:	ldr	r2, [fp, #-120]	; 0xffffff88
    dbe4:	ldr	r1, [fp, #-16]
    dbe8:	ldr	r0, [fp, #-112]	; 0xffffff90
    dbec:	bl	3008 <flatcc_json_parser_symbolic_double>
    dbf0:	str	r0, [fp, #-116]	; 0xffffff8c
    dbf4:	ldr	r2, [fp, #-116]	; 0xffffff8c
    dbf8:	ldr	r3, [fp, #-16]
    dbfc:	cmp	r2, r3
    dc00:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    dc04:	ldr	r2, [fp, #-116]	; 0xffffff8c
    dc08:	ldr	r3, [fp, #-120]	; 0xffffff88
    dc0c:	cmp	r2, r3
    dc10:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    dc14:	vldr	d7, [fp, #-44]	; 0xffffffd4
    dc18:	vcmp.f64	d7, #0.0
    dc1c:	vmrs	APSR_nzcv, fpscr
    dc20:	bne	dc38 <MyGame_Example_TypeAliases_parse_json_table+0x1b8>
    dc24:	ldr	r3, [fp, #-112]	; 0xffffff90
    dc28:	ldr	r3, [r3, #8]
    dc2c:	and	r3, r3, #2
    dc30:	cmp	r3, #0
    dc34:	beq	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    dc38:	ldr	r3, [fp, #-112]	; 0xffffff90
    dc3c:	ldr	r0, [r3]
    dc40:	mov	r3, #8
    dc44:	mov	r2, #8
    dc48:	mov	r1, #9
    dc4c:	bl	0 <flatcc_builder_table_add>
    dc50:	str	r0, [fp, #-20]	; 0xffffffec
    dc54:	ldr	r3, [fp, #-20]	; 0xffffffec
    dc58:	cmp	r3, #0
    dc5c:	beq	ee60 <MyGame_Example_TypeAliases_parse_json_table+0x13e0>
    dc60:	vldr	d7, [fp, #-44]	; 0xffffffd4
    dc64:	vmov.f64	d0, d7
    dc68:	ldr	r0, [fp, #-20]	; 0xffffffec
    dc6c:	bl	3b4 <flatbuffers_double_write_to_pe>
    dc70:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    dc74:	ldr	r2, [fp, #-120]	; 0xffffff88
    dc78:	ldr	r1, [fp, #-116]	; 0xffffff8c
    dc7c:	ldr	r0, [fp, #-112]	; 0xffffff90
    dc80:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dc84:	str	r0, [fp, #-116]	; 0xffffff8c
    dc88:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    dc8c:	ldrd	r2, [fp, #-12]
    dc90:	mov	r0, #0
    dc94:	mvn	r1, #255	; 0xff
    dc98:	and	r2, r2, r0
    dc9c:	and	r3, r3, r1
    dca0:	add	r1, pc, #352	; 0x160
    dca4:	ldrd	r0, [r1]
    dca8:	cmp	r3, r1
    dcac:	cmpeq	r2, r0
    dcb0:	bne	dddc <MyGame_Example_TypeAliases_parse_json_table+0x35c>
    dcb4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    dcb8:	str	r3, [fp, #-16]
    dcbc:	mov	r3, #3
    dcc0:	ldr	r2, [fp, #-120]	; 0xffffff88
    dcc4:	ldr	r1, [fp, #-16]
    dcc8:	ldr	r0, [fp, #-112]	; 0xffffff90
    dccc:	bl	e20 <flatcc_json_parser_match_symbol>
    dcd0:	str	r0, [fp, #-116]	; 0xffffff8c
    dcd4:	ldr	r2, [fp, #-16]
    dcd8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    dcdc:	cmp	r2, r3
    dce0:	beq	ddc4 <MyGame_Example_TypeAliases_parse_json_table+0x344>
    dce4:	mov	r3, #0
    dce8:	str	r3, [fp, #-48]	; 0xffffffd0
    dcec:	ldr	r3, [fp, #-116]	; 0xffffff8c
    dcf0:	str	r3, [fp, #-16]
    dcf4:	sub	r3, fp, #48	; 0x30
    dcf8:	ldr	r2, [fp, #-120]	; 0xffffff88
    dcfc:	ldr	r1, [fp, #-16]
    dd00:	ldr	r0, [fp, #-112]	; 0xffffff90
    dd04:	bl	0 <flatcc_json_parser_float>
    dd08:	str	r0, [fp, #-116]	; 0xffffff8c
    dd0c:	ldr	r2, [fp, #-16]
    dd10:	ldr	r3, [fp, #-116]	; 0xffffff8c
    dd14:	cmp	r2, r3
    dd18:	bne	dd64 <MyGame_Example_TypeAliases_parse_json_table+0x2e4>
    dd1c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    dd20:	str	r3, [fp, #-16]
    dd24:	sub	r3, fp, #48	; 0x30
    dd28:	str	r3, [sp]
    dd2c:	ldr	r3, [pc, #228]	; de18 <MyGame_Example_TypeAliases_parse_json_table+0x398>
    dd30:	ldr	r2, [fp, #-120]	; 0xffffff88
    dd34:	ldr	r1, [fp, #-16]
    dd38:	ldr	r0, [fp, #-112]	; 0xffffff90
    dd3c:	bl	2e3c <flatcc_json_parser_symbolic_float>
    dd40:	str	r0, [fp, #-116]	; 0xffffff8c
    dd44:	ldr	r2, [fp, #-116]	; 0xffffff8c
    dd48:	ldr	r3, [fp, #-16]
    dd4c:	cmp	r2, r3
    dd50:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    dd54:	ldr	r2, [fp, #-116]	; 0xffffff8c
    dd58:	ldr	r3, [fp, #-120]	; 0xffffff88
    dd5c:	cmp	r2, r3
    dd60:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    dd64:	vldr	s15, [fp, #-48]	; 0xffffffd0
    dd68:	vcmp.f32	s15, #0.0
    dd6c:	vmrs	APSR_nzcv, fpscr
    dd70:	bne	dd88 <MyGame_Example_TypeAliases_parse_json_table+0x308>
    dd74:	ldr	r3, [fp, #-112]	; 0xffffff90
    dd78:	ldr	r3, [r3, #8]
    dd7c:	and	r3, r3, #2
    dd80:	cmp	r3, #0
    dd84:	beq	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    dd88:	ldr	r3, [fp, #-112]	; 0xffffff90
    dd8c:	ldr	r0, [r3]
    dd90:	mov	r3, #4
    dd94:	mov	r2, #4
    dd98:	mov	r1, #8
    dd9c:	bl	0 <flatcc_builder_table_add>
    dda0:	str	r0, [fp, #-20]	; 0xffffffec
    dda4:	ldr	r3, [fp, #-20]	; 0xffffffec
    dda8:	cmp	r3, #0
    ddac:	beq	ee68 <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    ddb0:	vldr	s15, [fp, #-48]	; 0xffffffd0
    ddb4:	vmov.f32	s0, s15
    ddb8:	ldr	r0, [fp, #-20]	; 0xffffffec
    ddbc:	bl	348 <flatbuffers_float_write_to_pe>
    ddc0:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    ddc4:	ldr	r2, [fp, #-120]	; 0xffffff88
    ddc8:	ldr	r1, [fp, #-116]	; 0xffffff8c
    ddcc:	ldr	r0, [fp, #-112]	; 0xffffff90
    ddd0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ddd4:	str	r0, [fp, #-116]	; 0xffffff8c
    ddd8:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    dddc:	ldr	r2, [fp, #-120]	; 0xffffff88
    dde0:	ldr	r1, [fp, #-116]	; 0xffffff8c
    dde4:	ldr	r0, [fp, #-112]	; 0xffffff90
    dde8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ddec:	str	r0, [fp, #-116]	; 0xffffff8c
    ddf0:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    ddf4:	nop			; (mov r0, r0)
    ddf8:	.word	0xffffffff
    ddfc:	.word	0x693135ff
    de00:	.word	0x00000000
    de04:	.word	0x66363400
    de08:	.word	0x00000000
    de0c:	.word	0x66333200
    de10:	.word	0x6937ffff
    de14:	.word	0x000002a8
    de18:	.word	0x000002b4
    de1c:	ldrd	r2, [fp, #-12]
    de20:	add	r1, pc, #704	; 0x2c0
    de24:	ldrd	r0, [r1]
    de28:	cmp	r3, r1
    de2c:	cmpeq	r2, r0
    de30:	bhi	df98 <MyGame_Example_TypeAliases_parse_json_table+0x518>
    de34:	ldrd	r2, [fp, #-12]
    de38:	mov	r0, #0
    de3c:	mvn	r1, #255	; 0xff
    de40:	and	r2, r2, r0
    de44:	and	r3, r3, r1
    de48:	add	r1, pc, #672	; 0x2a0
    de4c:	ldrd	r0, [r1]
    de50:	cmp	r3, r1
    de54:	cmpeq	r2, r0
    de58:	bne	df80 <MyGame_Example_TypeAliases_parse_json_table+0x500>
    de5c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    de60:	str	r3, [fp, #-16]
    de64:	mov	r3, #3
    de68:	ldr	r2, [fp, #-120]	; 0xffffff88
    de6c:	ldr	r1, [fp, #-16]
    de70:	ldr	r0, [fp, #-112]	; 0xffffff90
    de74:	bl	e20 <flatcc_json_parser_match_symbol>
    de78:	str	r0, [fp, #-116]	; 0xffffff8c
    de7c:	ldr	r2, [fp, #-16]
    de80:	ldr	r3, [fp, #-116]	; 0xffffff8c
    de84:	cmp	r2, r3
    de88:	beq	df68 <MyGame_Example_TypeAliases_parse_json_table+0x4e8>
    de8c:	mov	r3, #0
    de90:	strh	r3, [fp, #-50]	; 0xffffffce
    de94:	ldr	r3, [fp, #-116]	; 0xffffff8c
    de98:	str	r3, [fp, #-16]
    de9c:	sub	r3, fp, #50	; 0x32
    dea0:	ldr	r2, [fp, #-120]	; 0xffffff88
    dea4:	ldr	r1, [fp, #-16]
    dea8:	ldr	r0, [fp, #-112]	; 0xffffff90
    deac:	bl	1b28 <flatcc_json_parser_int16>
    deb0:	str	r0, [fp, #-116]	; 0xffffff8c
    deb4:	ldr	r2, [fp, #-16]
    deb8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    debc:	cmp	r2, r3
    dec0:	bne	df0c <MyGame_Example_TypeAliases_parse_json_table+0x48c>
    dec4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    dec8:	str	r3, [fp, #-16]
    decc:	sub	r3, fp, #50	; 0x32
    ded0:	str	r3, [sp]
    ded4:	ldr	r3, [pc, #548]	; e100 <MyGame_Example_TypeAliases_parse_json_table+0x680>
    ded8:	ldr	r2, [fp, #-120]	; 0xffffff88
    dedc:	ldr	r1, [fp, #-16]
    dee0:	ldr	r0, [fp, #-112]	; 0xffffff90
    dee4:	bl	28b4 <flatcc_json_parser_symbolic_int16>
    dee8:	str	r0, [fp, #-116]	; 0xffffff8c
    deec:	ldr	r2, [fp, #-116]	; 0xffffff8c
    def0:	ldr	r3, [fp, #-16]
    def4:	cmp	r2, r3
    def8:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    defc:	ldr	r2, [fp, #-116]	; 0xffffff8c
    df00:	ldr	r3, [fp, #-120]	; 0xffffff88
    df04:	cmp	r2, r3
    df08:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    df0c:	ldrsh	r3, [fp, #-50]	; 0xffffffce
    df10:	cmp	r3, #0
    df14:	bne	df2c <MyGame_Example_TypeAliases_parse_json_table+0x4ac>
    df18:	ldr	r3, [fp, #-112]	; 0xffffff90
    df1c:	ldr	r3, [r3, #8]
    df20:	and	r3, r3, #2
    df24:	cmp	r3, #0
    df28:	beq	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    df2c:	ldr	r3, [fp, #-112]	; 0xffffff90
    df30:	ldr	r0, [r3]
    df34:	mov	r3, #2
    df38:	mov	r2, #2
    df3c:	mov	r1, #2
    df40:	bl	0 <flatcc_builder_table_add>
    df44:	str	r0, [fp, #-20]	; 0xffffffec
    df48:	ldr	r3, [fp, #-20]	; 0xffffffec
    df4c:	cmp	r3, #0
    df50:	beq	ee70 <MyGame_Example_TypeAliases_parse_json_table+0x13f0>
    df54:	ldrsh	r3, [fp, #-50]	; 0xffffffce
    df58:	mov	r1, r3
    df5c:	ldr	r0, [fp, #-20]	; 0xffffffec
    df60:	bl	218 <flatbuffers_int16_write_to_pe>
    df64:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    df68:	ldr	r2, [fp, #-120]	; 0xffffff88
    df6c:	ldr	r1, [fp, #-116]	; 0xffffff8c
    df70:	ldr	r0, [fp, #-112]	; 0xffffff90
    df74:	bl	0 <flatcc_json_parser_unmatched_symbol>
    df78:	str	r0, [fp, #-116]	; 0xffffff8c
    df7c:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    df80:	ldr	r2, [fp, #-120]	; 0xffffff88
    df84:	ldr	r1, [fp, #-116]	; 0xffffff8c
    df88:	ldr	r0, [fp, #-112]	; 0xffffff90
    df8c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    df90:	str	r0, [fp, #-116]	; 0xffffff8c
    df94:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    df98:	ldrd	r2, [fp, #-12]
    df9c:	mov	r0, #0
    dfa0:	mvn	r1, #255	; 0xff
    dfa4:	and	r2, r2, r0
    dfa8:	and	r3, r3, r1
    dfac:	add	r1, pc, #324	; 0x144
    dfb0:	ldrd	r0, [r1]
    dfb4:	cmp	r3, r1
    dfb8:	cmpeq	r2, r0
    dfbc:	bne	e108 <MyGame_Example_TypeAliases_parse_json_table+0x688>
    dfc0:	ldr	r3, [fp, #-116]	; 0xffffff8c
    dfc4:	str	r3, [fp, #-16]
    dfc8:	mov	r3, #3
    dfcc:	ldr	r2, [fp, #-120]	; 0xffffff88
    dfd0:	ldr	r1, [fp, #-16]
    dfd4:	ldr	r0, [fp, #-112]	; 0xffffff90
    dfd8:	bl	e20 <flatcc_json_parser_match_symbol>
    dfdc:	str	r0, [fp, #-116]	; 0xffffff8c
    dfe0:	ldr	r2, [fp, #-16]
    dfe4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    dfe8:	cmp	r2, r3
    dfec:	beq	e0cc <MyGame_Example_TypeAliases_parse_json_table+0x64c>
    dff0:	mov	r2, #0
    dff4:	mov	r3, #0
    dff8:	strd	r2, [fp, #-60]	; 0xffffffc4
    dffc:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e000:	str	r3, [fp, #-16]
    e004:	sub	r3, fp, #60	; 0x3c
    e008:	ldr	r2, [fp, #-120]	; 0xffffff88
    e00c:	ldr	r1, [fp, #-16]
    e010:	ldr	r0, [fp, #-112]	; 0xffffff90
    e014:	bl	1984 <flatcc_json_parser_int64>
    e018:	str	r0, [fp, #-116]	; 0xffffff8c
    e01c:	ldr	r2, [fp, #-16]
    e020:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e024:	cmp	r2, r3
    e028:	bne	e074 <MyGame_Example_TypeAliases_parse_json_table+0x5f4>
    e02c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e030:	str	r3, [fp, #-16]
    e034:	sub	r3, fp, #60	; 0x3c
    e038:	str	r3, [sp]
    e03c:	ldr	r3, [pc, #192]	; e104 <MyGame_Example_TypeAliases_parse_json_table+0x684>
    e040:	ldr	r2, [fp, #-120]	; 0xffffff88
    e044:	ldr	r1, [fp, #-16]
    e048:	ldr	r0, [fp, #-112]	; 0xffffff90
    e04c:	bl	2510 <flatcc_json_parser_symbolic_int64>
    e050:	str	r0, [fp, #-116]	; 0xffffff8c
    e054:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e058:	ldr	r3, [fp, #-16]
    e05c:	cmp	r2, r3
    e060:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e064:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e068:	ldr	r3, [fp, #-120]	; 0xffffff88
    e06c:	cmp	r2, r3
    e070:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e074:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    e078:	orrs	r3, r2, r3
    e07c:	bne	e094 <MyGame_Example_TypeAliases_parse_json_table+0x614>
    e080:	ldr	r3, [fp, #-112]	; 0xffffff90
    e084:	ldr	r3, [r3, #8]
    e088:	and	r3, r3, #2
    e08c:	cmp	r3, #0
    e090:	beq	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e094:	ldr	r3, [fp, #-112]	; 0xffffff90
    e098:	ldr	r0, [r3]
    e09c:	mov	r3, #8
    e0a0:	mov	r2, #8
    e0a4:	mov	r1, #6
    e0a8:	bl	0 <flatcc_builder_table_add>
    e0ac:	str	r0, [fp, #-20]	; 0xffffffec
    e0b0:	ldr	r3, [fp, #-20]	; 0xffffffec
    e0b4:	cmp	r3, #0
    e0b8:	beq	ee78 <MyGame_Example_TypeAliases_parse_json_table+0x13f8>
    e0bc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    e0c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    e0c4:	bl	2d8 <flatbuffers_int64_write_to_pe>
    e0c8:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e0cc:	ldr	r2, [fp, #-120]	; 0xffffff88
    e0d0:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e0d4:	ldr	r0, [fp, #-112]	; 0xffffff90
    e0d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e0dc:	str	r0, [fp, #-116]	; 0xffffff8c
    e0e0:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e0e4:	nop			; (mov r0, r0)
    e0e8:	.word	0xffffffff
    e0ec:	.word	0x693331ff
    e0f0:	.word	0x00000000
    e0f4:	.word	0x69313600
    e0f8:	.word	0x00000000
    e0fc:	.word	0x69363400
    e100:	.word	0x000002c0
    e104:	.word	0x000002cc
    e108:	ldrd	r2, [fp, #-12]
    e10c:	mov	r0, #0
    e110:	mvn	r1, #255	; 0xff
    e114:	and	r2, r2, r0
    e118:	and	r3, r3, r1
    e11c:	add	r1, pc, #732	; 0x2dc
    e120:	ldrd	r0, [r1]
    e124:	cmp	r3, r1
    e128:	cmpeq	r2, r0
    e12c:	bne	e254 <MyGame_Example_TypeAliases_parse_json_table+0x7d4>
    e130:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e134:	str	r3, [fp, #-16]
    e138:	mov	r3, #3
    e13c:	ldr	r2, [fp, #-120]	; 0xffffff88
    e140:	ldr	r1, [fp, #-16]
    e144:	ldr	r0, [fp, #-112]	; 0xffffff90
    e148:	bl	e20 <flatcc_json_parser_match_symbol>
    e14c:	str	r0, [fp, #-116]	; 0xffffff8c
    e150:	ldr	r2, [fp, #-16]
    e154:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e158:	cmp	r2, r3
    e15c:	beq	e23c <MyGame_Example_TypeAliases_parse_json_table+0x7bc>
    e160:	mov	r3, #0
    e164:	str	r3, [fp, #-64]	; 0xffffffc0
    e168:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e16c:	str	r3, [fp, #-16]
    e170:	sub	r3, fp, #64	; 0x40
    e174:	ldr	r2, [fp, #-120]	; 0xffffff88
    e178:	ldr	r1, [fp, #-16]
    e17c:	ldr	r0, [fp, #-112]	; 0xffffff90
    e180:	bl	1a58 <flatcc_json_parser_int32>
    e184:	str	r0, [fp, #-116]	; 0xffffff8c
    e188:	ldr	r2, [fp, #-16]
    e18c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e190:	cmp	r2, r3
    e194:	bne	e1e0 <MyGame_Example_TypeAliases_parse_json_table+0x760>
    e198:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e19c:	str	r3, [fp, #-16]
    e1a0:	sub	r3, fp, #64	; 0x40
    e1a4:	str	r3, [sp]
    e1a8:	ldr	r3, [pc, #616]	; e418 <MyGame_Example_TypeAliases_parse_json_table+0x998>
    e1ac:	ldr	r2, [fp, #-120]	; 0xffffff88
    e1b0:	ldr	r1, [fp, #-16]
    e1b4:	ldr	r0, [fp, #-112]	; 0xffffff90
    e1b8:	bl	26e8 <flatcc_json_parser_symbolic_int32>
    e1bc:	str	r0, [fp, #-116]	; 0xffffff8c
    e1c0:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e1c4:	ldr	r3, [fp, #-16]
    e1c8:	cmp	r2, r3
    e1cc:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e1d0:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e1d4:	ldr	r3, [fp, #-120]	; 0xffffff88
    e1d8:	cmp	r2, r3
    e1dc:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e1e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    e1e4:	cmp	r3, #0
    e1e8:	bne	e200 <MyGame_Example_TypeAliases_parse_json_table+0x780>
    e1ec:	ldr	r3, [fp, #-112]	; 0xffffff90
    e1f0:	ldr	r3, [r3, #8]
    e1f4:	and	r3, r3, #2
    e1f8:	cmp	r3, #0
    e1fc:	beq	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e200:	ldr	r3, [fp, #-112]	; 0xffffff90
    e204:	ldr	r0, [r3]
    e208:	mov	r3, #4
    e20c:	mov	r2, #4
    e210:	mov	r1, #4
    e214:	bl	0 <flatcc_builder_table_add>
    e218:	str	r0, [fp, #-20]	; 0xffffffec
    e21c:	ldr	r3, [fp, #-20]	; 0xffffffec
    e220:	cmp	r3, #0
    e224:	beq	ee80 <MyGame_Example_TypeAliases_parse_json_table+0x1400>
    e228:	ldr	r3, [fp, #-64]	; 0xffffffc0
    e22c:	mov	r1, r3
    e230:	ldr	r0, [fp, #-20]	; 0xffffffec
    e234:	bl	27c <flatbuffers_int32_write_to_pe>
    e238:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e23c:	ldr	r2, [fp, #-120]	; 0xffffff88
    e240:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e244:	ldr	r0, [fp, #-112]	; 0xffffff90
    e248:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e24c:	str	r0, [fp, #-116]	; 0xffffff8c
    e250:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e254:	ldr	r2, [fp, #-120]	; 0xffffff88
    e258:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e25c:	ldr	r0, [fp, #-112]	; 0xffffff90
    e260:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e264:	str	r0, [fp, #-116]	; 0xffffff8c
    e268:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e26c:	ldrd	r2, [fp, #-12]
    e270:	add	r1, pc, #400	; 0x190
    e274:	ldrd	r0, [r1]
    e278:	cmp	r3, r1
    e27c:	cmpeq	r2, r0
    e280:	bhi	e6f4 <MyGame_Example_TypeAliases_parse_json_table+0xc74>
    e284:	ldrd	r2, [fp, #-12]
    e288:	add	r1, pc, #384	; 0x180
    e28c:	ldrd	r0, [r1]
    e290:	cmp	r3, r1
    e294:	cmpeq	r2, r0
    e298:	bhi	e428 <MyGame_Example_TypeAliases_parse_json_table+0x9a8>
    e29c:	ldrd	r2, [fp, #-12]
    e2a0:	mov	r0, #0
    e2a4:	ldr	r1, [pc, #368]	; e41c <MyGame_Example_TypeAliases_parse_json_table+0x99c>
    e2a8:	and	r2, r2, r0
    e2ac:	and	r3, r3, r1
    e2b0:	mov	r0, #0
    e2b4:	ldr	r1, [pc, #356]	; e420 <MyGame_Example_TypeAliases_parse_json_table+0x9a0>
    e2b8:	cmp	r3, r1
    e2bc:	cmpeq	r2, r0
    e2c0:	bne	e3e8 <MyGame_Example_TypeAliases_parse_json_table+0x968>
    e2c4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e2c8:	str	r3, [fp, #-16]
    e2cc:	mov	r3, #2
    e2d0:	ldr	r2, [fp, #-120]	; 0xffffff88
    e2d4:	ldr	r1, [fp, #-16]
    e2d8:	ldr	r0, [fp, #-112]	; 0xffffff90
    e2dc:	bl	e20 <flatcc_json_parser_match_symbol>
    e2e0:	str	r0, [fp, #-116]	; 0xffffff8c
    e2e4:	ldr	r2, [fp, #-16]
    e2e8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e2ec:	cmp	r2, r3
    e2f0:	beq	e3d0 <MyGame_Example_TypeAliases_parse_json_table+0x950>
    e2f4:	mov	r3, #0
    e2f8:	strb	r3, [fp, #-65]	; 0xffffffbf
    e2fc:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e300:	str	r3, [fp, #-16]
    e304:	sub	r3, fp, #65	; 0x41
    e308:	ldr	r2, [fp, #-120]	; 0xffffff88
    e30c:	ldr	r1, [fp, #-16]
    e310:	ldr	r0, [fp, #-112]	; 0xffffff90
    e314:	bl	1bf8 <flatcc_json_parser_int8>
    e318:	str	r0, [fp, #-116]	; 0xffffff8c
    e31c:	ldr	r2, [fp, #-16]
    e320:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e324:	cmp	r2, r3
    e328:	bne	e374 <MyGame_Example_TypeAliases_parse_json_table+0x8f4>
    e32c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e330:	str	r3, [fp, #-16]
    e334:	sub	r3, fp, #65	; 0x41
    e338:	str	r3, [sp]
    e33c:	ldr	r3, [pc, #224]	; e424 <MyGame_Example_TypeAliases_parse_json_table+0x9a4>
    e340:	ldr	r2, [fp, #-120]	; 0xffffff88
    e344:	ldr	r1, [fp, #-16]
    e348:	ldr	r0, [fp, #-112]	; 0xffffff90
    e34c:	bl	2a90 <flatcc_json_parser_symbolic_int8>
    e350:	str	r0, [fp, #-116]	; 0xffffff8c
    e354:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e358:	ldr	r3, [fp, #-16]
    e35c:	cmp	r2, r3
    e360:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e364:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e368:	ldr	r3, [fp, #-120]	; 0xffffff88
    e36c:	cmp	r2, r3
    e370:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e374:	ldrsb	r3, [fp, #-65]	; 0xffffffbf
    e378:	cmp	r3, #0
    e37c:	bne	e394 <MyGame_Example_TypeAliases_parse_json_table+0x914>
    e380:	ldr	r3, [fp, #-112]	; 0xffffff90
    e384:	ldr	r3, [r3, #8]
    e388:	and	r3, r3, #2
    e38c:	cmp	r3, #0
    e390:	beq	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e394:	ldr	r3, [fp, #-112]	; 0xffffff90
    e398:	ldr	r0, [r3]
    e39c:	mov	r3, #1
    e3a0:	mov	r2, #1
    e3a4:	mov	r1, #0
    e3a8:	bl	0 <flatcc_builder_table_add>
    e3ac:	str	r0, [fp, #-20]	; 0xffffffec
    e3b0:	ldr	r3, [fp, #-20]	; 0xffffffec
    e3b4:	cmp	r3, #0
    e3b8:	beq	ee88 <MyGame_Example_TypeAliases_parse_json_table+0x1408>
    e3bc:	ldrsb	r3, [fp, #-65]	; 0xffffffbf
    e3c0:	mov	r1, r3
    e3c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    e3c8:	bl	1b0 <flatbuffers_int8_write_to_pe>
    e3cc:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e3d0:	ldr	r2, [fp, #-120]	; 0xffffff88
    e3d4:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e3d8:	ldr	r0, [fp, #-112]	; 0xffffff90
    e3dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e3e0:	str	r0, [fp, #-116]	; 0xffffff8c
    e3e4:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e3e8:	ldr	r2, [fp, #-120]	; 0xffffff88
    e3ec:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e3f0:	ldr	r0, [fp, #-112]	; 0xffffff90
    e3f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e3f8:	str	r0, [fp, #-116]	; 0xffffff8c
    e3fc:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e400:	.word	0x00000000
    e404:	.word	0x69333200
    e408:	.word	0xffffffff
    e40c:	.word	0x753633ff
    e410:	.word	0xffffffff
    e414:	.word	0x753135ff
    e418:	.word	0x000002d8
    e41c:	.word	0xffff0000
    e420:	.word	0x69380000
    e424:	.word	0x000002e4
    e428:	ldrd	r2, [fp, #-12]
    e42c:	mov	r0, #0
    e430:	mvn	r1, #255	; 0xff
    e434:	and	r2, r2, r0
    e438:	and	r3, r3, r1
    e43c:	add	r1, pc, #660	; 0x294
    e440:	ldrd	r0, [r1]
    e444:	cmp	r3, r1
    e448:	cmpeq	r2, r0
    e44c:	bne	e574 <MyGame_Example_TypeAliases_parse_json_table+0xaf4>
    e450:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e454:	str	r3, [fp, #-16]
    e458:	mov	r3, #3
    e45c:	ldr	r2, [fp, #-120]	; 0xffffff88
    e460:	ldr	r1, [fp, #-16]
    e464:	ldr	r0, [fp, #-112]	; 0xffffff90
    e468:	bl	e20 <flatcc_json_parser_match_symbol>
    e46c:	str	r0, [fp, #-116]	; 0xffffff8c
    e470:	ldr	r2, [fp, #-16]
    e474:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e478:	cmp	r2, r3
    e47c:	beq	e55c <MyGame_Example_TypeAliases_parse_json_table+0xadc>
    e480:	mov	r3, #0
    e484:	str	r3, [fp, #-72]	; 0xffffffb8
    e488:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e48c:	str	r3, [fp, #-16]
    e490:	sub	r3, fp, #72	; 0x48
    e494:	ldr	r2, [fp, #-120]	; 0xffffff88
    e498:	ldr	r1, [fp, #-16]
    e49c:	ldr	r0, [fp, #-112]	; 0xffffff90
    e4a0:	bl	1714 <flatcc_json_parser_uint32>
    e4a4:	str	r0, [fp, #-116]	; 0xffffff8c
    e4a8:	ldr	r2, [fp, #-16]
    e4ac:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e4b0:	cmp	r2, r3
    e4b4:	bne	e500 <MyGame_Example_TypeAliases_parse_json_table+0xa80>
    e4b8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e4bc:	str	r3, [fp, #-16]
    e4c0:	sub	r3, fp, #72	; 0x48
    e4c4:	str	r3, [sp]
    e4c8:	ldr	r3, [pc, #536]	; e6e8 <MyGame_Example_TypeAliases_parse_json_table+0xc68>
    e4cc:	ldr	r2, [fp, #-120]	; 0xffffff88
    e4d0:	ldr	r1, [fp, #-16]
    e4d4:	ldr	r0, [fp, #-112]	; 0xffffff90
    e4d8:	bl	1fa4 <flatcc_json_parser_symbolic_uint32>
    e4dc:	str	r0, [fp, #-116]	; 0xffffff8c
    e4e0:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e4e4:	ldr	r3, [fp, #-16]
    e4e8:	cmp	r2, r3
    e4ec:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e4f0:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e4f4:	ldr	r3, [fp, #-120]	; 0xffffff88
    e4f8:	cmp	r2, r3
    e4fc:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e500:	ldr	r3, [fp, #-72]	; 0xffffffb8
    e504:	cmp	r3, #0
    e508:	bne	e520 <MyGame_Example_TypeAliases_parse_json_table+0xaa0>
    e50c:	ldr	r3, [fp, #-112]	; 0xffffff90
    e510:	ldr	r3, [r3, #8]
    e514:	and	r3, r3, #2
    e518:	cmp	r3, #0
    e51c:	beq	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e520:	ldr	r3, [fp, #-112]	; 0xffffff90
    e524:	ldr	r0, [r3]
    e528:	mov	r3, #4
    e52c:	mov	r2, #4
    e530:	mov	r1, #5
    e534:	bl	0 <flatcc_builder_table_add>
    e538:	str	r0, [fp, #-20]	; 0xffffffec
    e53c:	ldr	r3, [fp, #-20]	; 0xffffffec
    e540:	cmp	r3, #0
    e544:	beq	ee90 <MyGame_Example_TypeAliases_parse_json_table+0x1410>
    e548:	ldr	r3, [fp, #-72]	; 0xffffffb8
    e54c:	mov	r1, r3
    e550:	ldr	r0, [fp, #-20]	; 0xffffffec
    e554:	bl	f4 <flatbuffers_uint32_write_to_pe>
    e558:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e55c:	ldr	r2, [fp, #-120]	; 0xffffff88
    e560:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e564:	ldr	r0, [fp, #-112]	; 0xffffff90
    e568:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e56c:	str	r0, [fp, #-116]	; 0xffffff8c
    e570:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e574:	ldrd	r2, [fp, #-12]
    e578:	mov	r0, #0
    e57c:	mvn	r1, #255	; 0xff
    e580:	and	r2, r2, r0
    e584:	and	r3, r3, r1
    e588:	add	r1, pc, #336	; 0x150
    e58c:	ldrd	r0, [r1]
    e590:	cmp	r3, r1
    e594:	cmpeq	r2, r0
    e598:	bne	e6c0 <MyGame_Example_TypeAliases_parse_json_table+0xc40>
    e59c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e5a0:	str	r3, [fp, #-16]
    e5a4:	mov	r3, #3
    e5a8:	ldr	r2, [fp, #-120]	; 0xffffff88
    e5ac:	ldr	r1, [fp, #-16]
    e5b0:	ldr	r0, [fp, #-112]	; 0xffffff90
    e5b4:	bl	e20 <flatcc_json_parser_match_symbol>
    e5b8:	str	r0, [fp, #-116]	; 0xffffff8c
    e5bc:	ldr	r2, [fp, #-16]
    e5c0:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e5c4:	cmp	r2, r3
    e5c8:	beq	e6a8 <MyGame_Example_TypeAliases_parse_json_table+0xc28>
    e5cc:	mov	r3, #0
    e5d0:	strh	r3, [fp, #-74]	; 0xffffffb6
    e5d4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e5d8:	str	r3, [fp, #-16]
    e5dc:	sub	r3, fp, #74	; 0x4a
    e5e0:	ldr	r2, [fp, #-120]	; 0xffffff88
    e5e4:	ldr	r1, [fp, #-16]
    e5e8:	ldr	r0, [fp, #-112]	; 0xffffff90
    e5ec:	bl	17e4 <flatcc_json_parser_uint16>
    e5f0:	str	r0, [fp, #-116]	; 0xffffff8c
    e5f4:	ldr	r2, [fp, #-16]
    e5f8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e5fc:	cmp	r2, r3
    e600:	bne	e64c <MyGame_Example_TypeAliases_parse_json_table+0xbcc>
    e604:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e608:	str	r3, [fp, #-16]
    e60c:	sub	r3, fp, #74	; 0x4a
    e610:	str	r3, [sp]
    e614:	ldr	r3, [pc, #208]	; e6ec <MyGame_Example_TypeAliases_parse_json_table+0xc6c>
    e618:	ldr	r2, [fp, #-120]	; 0xffffff88
    e61c:	ldr	r1, [fp, #-16]
    e620:	ldr	r0, [fp, #-112]	; 0xffffff90
    e624:	bl	2170 <flatcc_json_parser_symbolic_uint16>
    e628:	str	r0, [fp, #-116]	; 0xffffff8c
    e62c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e630:	ldr	r3, [fp, #-16]
    e634:	cmp	r2, r3
    e638:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e63c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e640:	ldr	r3, [fp, #-120]	; 0xffffff88
    e644:	cmp	r2, r3
    e648:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e64c:	ldrh	r3, [fp, #-74]	; 0xffffffb6
    e650:	cmp	r3, #0
    e654:	bne	e66c <MyGame_Example_TypeAliases_parse_json_table+0xbec>
    e658:	ldr	r3, [fp, #-112]	; 0xffffff90
    e65c:	ldr	r3, [r3, #8]
    e660:	and	r3, r3, #2
    e664:	cmp	r3, #0
    e668:	beq	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e66c:	ldr	r3, [fp, #-112]	; 0xffffff90
    e670:	ldr	r0, [r3]
    e674:	mov	r3, #2
    e678:	mov	r2, #2
    e67c:	mov	r1, #3
    e680:	bl	0 <flatcc_builder_table_add>
    e684:	str	r0, [fp, #-20]	; 0xffffffec
    e688:	ldr	r3, [fp, #-20]	; 0xffffffec
    e68c:	cmp	r3, #0
    e690:	beq	ee98 <MyGame_Example_TypeAliases_parse_json_table+0x1418>
    e694:	ldrh	r3, [fp, #-74]	; 0xffffffb6
    e698:	mov	r1, r3
    e69c:	ldr	r0, [fp, #-20]	; 0xffffffec
    e6a0:	bl	90 <flatbuffers_uint16_write_to_pe>
    e6a4:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e6a8:	ldr	r2, [fp, #-120]	; 0xffffff88
    e6ac:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e6b0:	ldr	r0, [fp, #-112]	; 0xffffff90
    e6b4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e6b8:	str	r0, [fp, #-116]	; 0xffffff8c
    e6bc:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e6c0:	ldr	r2, [fp, #-120]	; 0xffffff88
    e6c4:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e6c8:	ldr	r0, [fp, #-112]	; 0xffffff90
    e6cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e6d0:	str	r0, [fp, #-116]	; 0xffffff8c
    e6d4:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e6d8:	.word	0x00000000
    e6dc:	.word	0x75333200
    e6e0:	.word	0x00000000
    e6e4:	.word	0x75313600
    e6e8:	.word	0x000002f0
    e6ec:	.word	0x000002fc
    e6f0:	.word	0x7537ffff
    e6f4:	ldrd	r2, [fp, #-12]
    e6f8:	mvn	r0, #0
    e6fc:	ldr	r1, [pc, #-20]	; e6f0 <MyGame_Example_TypeAliases_parse_json_table+0xc70>
    e700:	cmp	r3, r1
    e704:	cmpeq	r2, r0
    e708:	bhi	e870 <MyGame_Example_TypeAliases_parse_json_table+0xdf0>
    e70c:	ldrd	r2, [fp, #-12]
    e710:	mov	r0, #0
    e714:	mvn	r1, #255	; 0xff
    e718:	and	r2, r2, r0
    e71c:	and	r3, r3, r1
    e720:	add	r1, pc, #864	; 0x360
    e724:	ldrd	r0, [r1]
    e728:	cmp	r3, r1
    e72c:	cmpeq	r2, r0
    e730:	bne	e858 <MyGame_Example_TypeAliases_parse_json_table+0xdd8>
    e734:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e738:	str	r3, [fp, #-16]
    e73c:	mov	r3, #3
    e740:	ldr	r2, [fp, #-120]	; 0xffffff88
    e744:	ldr	r1, [fp, #-16]
    e748:	ldr	r0, [fp, #-112]	; 0xffffff90
    e74c:	bl	e20 <flatcc_json_parser_match_symbol>
    e750:	str	r0, [fp, #-116]	; 0xffffff8c
    e754:	ldr	r2, [fp, #-16]
    e758:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e75c:	cmp	r2, r3
    e760:	beq	e840 <MyGame_Example_TypeAliases_parse_json_table+0xdc0>
    e764:	mov	r2, #0
    e768:	mov	r3, #0
    e76c:	strd	r2, [fp, #-84]	; 0xffffffac
    e770:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e774:	str	r3, [fp, #-16]
    e778:	sub	r3, fp, #84	; 0x54
    e77c:	ldr	r2, [fp, #-120]	; 0xffffff88
    e780:	ldr	r1, [fp, #-16]
    e784:	ldr	r0, [fp, #-112]	; 0xffffff90
    e788:	bl	1640 <flatcc_json_parser_uint64>
    e78c:	str	r0, [fp, #-116]	; 0xffffff8c
    e790:	ldr	r2, [fp, #-16]
    e794:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e798:	cmp	r2, r3
    e79c:	bne	e7e8 <MyGame_Example_TypeAliases_parse_json_table+0xd68>
    e7a0:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e7a4:	str	r3, [fp, #-16]
    e7a8:	sub	r3, fp, #84	; 0x54
    e7ac:	str	r3, [sp]
    e7b0:	ldr	r3, [pc, #736]	; ea98 <MyGame_Example_TypeAliases_parse_json_table+0x1018>
    e7b4:	ldr	r2, [fp, #-120]	; 0xffffff88
    e7b8:	ldr	r1, [fp, #-16]
    e7bc:	ldr	r0, [fp, #-112]	; 0xffffff90
    e7c0:	bl	1dcc <flatcc_json_parser_symbolic_uint64>
    e7c4:	str	r0, [fp, #-116]	; 0xffffff8c
    e7c8:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e7cc:	ldr	r3, [fp, #-16]
    e7d0:	cmp	r2, r3
    e7d4:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e7d8:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e7dc:	ldr	r3, [fp, #-120]	; 0xffffff88
    e7e0:	cmp	r2, r3
    e7e4:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e7e8:	ldrd	r2, [fp, #-84]	; 0xffffffac
    e7ec:	orrs	r3, r2, r3
    e7f0:	bne	e808 <MyGame_Example_TypeAliases_parse_json_table+0xd88>
    e7f4:	ldr	r3, [fp, #-112]	; 0xffffff90
    e7f8:	ldr	r3, [r3, #8]
    e7fc:	and	r3, r3, #2
    e800:	cmp	r3, #0
    e804:	beq	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e808:	ldr	r3, [fp, #-112]	; 0xffffff90
    e80c:	ldr	r0, [r3]
    e810:	mov	r3, #8
    e814:	mov	r2, #8
    e818:	mov	r1, #7
    e81c:	bl	0 <flatcc_builder_table_add>
    e820:	str	r0, [fp, #-20]	; 0xffffffec
    e824:	ldr	r3, [fp, #-20]	; 0xffffffec
    e828:	cmp	r3, #0
    e82c:	beq	eea0 <MyGame_Example_TypeAliases_parse_json_table+0x1420>
    e830:	ldrd	r2, [fp, #-84]	; 0xffffffac
    e834:	ldr	r0, [fp, #-20]	; 0xffffffec
    e838:	bl	150 <flatbuffers_uint64_write_to_pe>
    e83c:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e840:	ldr	r2, [fp, #-120]	; 0xffffff88
    e844:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e848:	ldr	r0, [fp, #-112]	; 0xffffff90
    e84c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e850:	str	r0, [fp, #-116]	; 0xffffff8c
    e854:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e858:	ldr	r2, [fp, #-120]	; 0xffffff88
    e85c:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e860:	ldr	r0, [fp, #-112]	; 0xffffff90
    e864:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e868:	str	r0, [fp, #-116]	; 0xffffff8c
    e86c:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e870:	ldrd	r2, [fp, #-12]
    e874:	mvn	r0, #0
    e878:	ldr	r1, [pc, #540]	; ea9c <MyGame_Example_TypeAliases_parse_json_table+0x101c>
    e87c:	cmp	r3, r1
    e880:	cmpeq	r2, r0
    e884:	bhi	e9ec <MyGame_Example_TypeAliases_parse_json_table+0xf6c>
    e888:	ldrd	r2, [fp, #-12]
    e88c:	mov	r0, #0
    e890:	ldr	r1, [pc, #532]	; eaac <MyGame_Example_TypeAliases_parse_json_table+0x102c>
    e894:	and	r2, r2, r0
    e898:	and	r3, r3, r1
    e89c:	mov	r0, #0
    e8a0:	ldr	r1, [pc, #504]	; eaa0 <MyGame_Example_TypeAliases_parse_json_table+0x1020>
    e8a4:	cmp	r3, r1
    e8a8:	cmpeq	r2, r0
    e8ac:	bne	e9d4 <MyGame_Example_TypeAliases_parse_json_table+0xf54>
    e8b0:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e8b4:	str	r3, [fp, #-16]
    e8b8:	mov	r3, #2
    e8bc:	ldr	r2, [fp, #-120]	; 0xffffff88
    e8c0:	ldr	r1, [fp, #-16]
    e8c4:	ldr	r0, [fp, #-112]	; 0xffffff90
    e8c8:	bl	e20 <flatcc_json_parser_match_symbol>
    e8cc:	str	r0, [fp, #-116]	; 0xffffff8c
    e8d0:	ldr	r2, [fp, #-16]
    e8d4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e8d8:	cmp	r2, r3
    e8dc:	beq	e9bc <MyGame_Example_TypeAliases_parse_json_table+0xf3c>
    e8e0:	mov	r3, #0
    e8e4:	strb	r3, [fp, #-85]	; 0xffffffab
    e8e8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e8ec:	str	r3, [fp, #-16]
    e8f0:	sub	r3, fp, #85	; 0x55
    e8f4:	ldr	r2, [fp, #-120]	; 0xffffff88
    e8f8:	ldr	r1, [fp, #-16]
    e8fc:	ldr	r0, [fp, #-112]	; 0xffffff90
    e900:	bl	18b4 <flatcc_json_parser_uint8>
    e904:	str	r0, [fp, #-116]	; 0xffffff8c
    e908:	ldr	r2, [fp, #-16]
    e90c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e910:	cmp	r2, r3
    e914:	bne	e960 <MyGame_Example_TypeAliases_parse_json_table+0xee0>
    e918:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e91c:	str	r3, [fp, #-16]
    e920:	sub	r3, fp, #85	; 0x55
    e924:	str	r3, [sp]
    e928:	ldr	r3, [pc, #372]	; eaa4 <MyGame_Example_TypeAliases_parse_json_table+0x1024>
    e92c:	ldr	r2, [fp, #-120]	; 0xffffff88
    e930:	ldr	r1, [fp, #-16]
    e934:	ldr	r0, [fp, #-112]	; 0xffffff90
    e938:	bl	2340 <flatcc_json_parser_symbolic_uint8>
    e93c:	str	r0, [fp, #-116]	; 0xffffff8c
    e940:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e944:	ldr	r3, [fp, #-16]
    e948:	cmp	r2, r3
    e94c:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e950:	ldr	r2, [fp, #-116]	; 0xffffff8c
    e954:	ldr	r3, [fp, #-120]	; 0xffffff88
    e958:	cmp	r2, r3
    e95c:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    e960:	ldrb	r3, [fp, #-85]	; 0xffffffab
    e964:	cmp	r3, #0
    e968:	bne	e980 <MyGame_Example_TypeAliases_parse_json_table+0xf00>
    e96c:	ldr	r3, [fp, #-112]	; 0xffffff90
    e970:	ldr	r3, [r3, #8]
    e974:	and	r3, r3, #2
    e978:	cmp	r3, #0
    e97c:	beq	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e980:	ldr	r3, [fp, #-112]	; 0xffffff90
    e984:	ldr	r0, [r3]
    e988:	mov	r3, #1
    e98c:	mov	r2, #1
    e990:	mov	r1, #1
    e994:	bl	0 <flatcc_builder_table_add>
    e998:	str	r0, [fp, #-20]	; 0xffffffec
    e99c:	ldr	r3, [fp, #-20]	; 0xffffffec
    e9a0:	cmp	r3, #0
    e9a4:	beq	eea8 <MyGame_Example_TypeAliases_parse_json_table+0x1428>
    e9a8:	ldrb	r3, [fp, #-85]	; 0xffffffab
    e9ac:	mov	r1, r3
    e9b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    e9b4:	bl	28 <flatbuffers_uint8_write_to_pe>
    e9b8:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e9bc:	ldr	r2, [fp, #-120]	; 0xffffff88
    e9c0:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e9c4:	ldr	r0, [fp, #-112]	; 0xffffff90
    e9c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e9cc:	str	r0, [fp, #-116]	; 0xffffff8c
    e9d0:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e9d4:	ldr	r2, [fp, #-120]	; 0xffffff88
    e9d8:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e9dc:	ldr	r0, [fp, #-112]	; 0xffffff90
    e9e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e9e4:	str	r0, [fp, #-116]	; 0xffffff8c
    e9e8:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    e9ec:	ldrd	r2, [fp, #-12]
    e9f0:	mov	r0, #0
    e9f4:	mvn	r1, #0
    e9f8:	and	r2, r2, r0
    e9fc:	and	r3, r3, r1
    ea00:	add	r1, pc, #136	; 0x88
    ea04:	ldrd	r0, [r1]
    ea08:	cmp	r3, r1
    ea0c:	cmpeq	r2, r0
    ea10:	bne	ec00 <MyGame_Example_TypeAliases_parse_json_table+0x1180>
    ea14:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ea18:	str	r3, [fp, #-16]
    ea1c:	mov	r3, #4
    ea20:	ldr	r2, [fp, #-120]	; 0xffffff88
    ea24:	ldr	r1, [fp, #-16]
    ea28:	ldr	r0, [fp, #-112]	; 0xffffff90
    ea2c:	bl	e20 <flatcc_json_parser_match_symbol>
    ea30:	str	r0, [fp, #-116]	; 0xffffff8c
    ea34:	ldr	r2, [fp, #-16]
    ea38:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ea3c:	cmp	r2, r3
    ea40:	beq	ebe8 <MyGame_Example_TypeAliases_parse_json_table+0x1168>
    ea44:	ldr	r3, [fp, #-112]	; 0xffffff90
    ea48:	ldr	r0, [r3]
    ea4c:	mvn	r3, #-536870912	; 0xe0000000
    ea50:	mov	r2, #8
    ea54:	mov	r1, #8
    ea58:	bl	0 <flatcc_builder_start_vector>
    ea5c:	mov	r3, r0
    ea60:	cmp	r3, #0
    ea64:	bne	eeb0 <MyGame_Example_TypeAliases_parse_json_table+0x1430>
    ea68:	sub	r3, fp, #32
    ea6c:	ldr	r2, [fp, #-120]	; 0xffffff88
    ea70:	ldr	r1, [fp, #-116]	; 0xffffff8c
    ea74:	ldr	r0, [fp, #-112]	; 0xffffff90
    ea78:	bl	bd0 <flatcc_json_parser_array_start>
    ea7c:	str	r0, [fp, #-116]	; 0xffffff8c
    ea80:	b	eb88 <MyGame_Example_TypeAliases_parse_json_table+0x1108>
    ea84:	nop			; (mov r0, r0)
    ea88:	.word	0x00000000
    ea8c:	.word	0x75363400
    ea90:	.word	0x00000000
    ea94:	.word	0x76663634
    ea98:	.word	0x00000308
    ea9c:	.word	0x7637ffff
    eaa0:	.word	0x75380000
    eaa4:	.word	0x00000314
    eaa8:	.word	0x00000320
    eaac:	.word	0xffff0000
    eab0:	.word	0x76380000
    eab4:	.word	0x0000032c
    eab8:	mov	r2, #0
    eabc:	mov	r3, #0
    eac0:	strd	r2, [fp, #-100]	; 0xffffff9c
    eac4:	ldr	r3, [fp, #-112]	; 0xffffff90
    eac8:	ldr	r3, [r3]
    eacc:	mov	r1, #1
    ead0:	mov	r0, r3
    ead4:	bl	0 <flatcc_builder_extend_vector>
    ead8:	str	r0, [fp, #-20]	; 0xffffffec
    eadc:	ldr	r3, [fp, #-20]	; 0xffffffec
    eae0:	cmp	r3, #0
    eae4:	beq	eeb8 <MyGame_Example_TypeAliases_parse_json_table+0x1438>
    eae8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    eaec:	str	r3, [fp, #-16]
    eaf0:	sub	r3, fp, #100	; 0x64
    eaf4:	ldr	r2, [fp, #-120]	; 0xffffff88
    eaf8:	ldr	r1, [fp, #-16]
    eafc:	ldr	r0, [fp, #-112]	; 0xffffff90
    eb00:	bl	0 <flatcc_json_parser_double>
    eb04:	str	r0, [fp, #-116]	; 0xffffff8c
    eb08:	ldr	r2, [fp, #-16]
    eb0c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    eb10:	cmp	r2, r3
    eb14:	bne	eb60 <MyGame_Example_TypeAliases_parse_json_table+0x10e0>
    eb18:	ldr	r3, [fp, #-116]	; 0xffffff8c
    eb1c:	str	r3, [fp, #-16]
    eb20:	sub	r3, fp, #100	; 0x64
    eb24:	str	r3, [sp]
    eb28:	ldr	r3, [pc, #-136]	; eaa8 <MyGame_Example_TypeAliases_parse_json_table+0x1028>
    eb2c:	ldr	r2, [fp, #-120]	; 0xffffff88
    eb30:	ldr	r1, [fp, #-16]
    eb34:	ldr	r0, [fp, #-112]	; 0xffffff90
    eb38:	bl	3008 <flatcc_json_parser_symbolic_double>
    eb3c:	str	r0, [fp, #-116]	; 0xffffff8c
    eb40:	ldr	r2, [fp, #-116]	; 0xffffff8c
    eb44:	ldr	r3, [fp, #-16]
    eb48:	cmp	r2, r3
    eb4c:	beq	eeb8 <MyGame_Example_TypeAliases_parse_json_table+0x1438>
    eb50:	ldr	r2, [fp, #-116]	; 0xffffff8c
    eb54:	ldr	r3, [fp, #-120]	; 0xffffff88
    eb58:	cmp	r2, r3
    eb5c:	beq	eeb8 <MyGame_Example_TypeAliases_parse_json_table+0x1438>
    eb60:	vldr	d7, [fp, #-100]	; 0xffffff9c
    eb64:	vmov.f64	d0, d7
    eb68:	ldr	r0, [fp, #-20]	; 0xffffffec
    eb6c:	bl	3b4 <flatbuffers_double_write_to_pe>
    eb70:	sub	r3, fp, #32
    eb74:	ldr	r2, [fp, #-120]	; 0xffffff88
    eb78:	ldr	r1, [fp, #-116]	; 0xffffff8c
    eb7c:	ldr	r0, [fp, #-112]	; 0xffffff90
    eb80:	bl	cb8 <flatcc_json_parser_array_end>
    eb84:	str	r0, [fp, #-116]	; 0xffffff8c
    eb88:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eb8c:	cmp	r3, #0
    eb90:	bne	eab8 <MyGame_Example_TypeAliases_parse_json_table+0x1038>
    eb94:	ldr	r3, [fp, #-112]	; 0xffffff90
    eb98:	ldr	r3, [r3]
    eb9c:	mov	r0, r3
    eba0:	bl	0 <flatcc_builder_end_vector>
    eba4:	str	r0, [fp, #-24]	; 0xffffffe8
    eba8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ebac:	cmp	r3, #0
    ebb0:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ebb4:	ldr	r3, [fp, #-112]	; 0xffffff90
    ebb8:	ldr	r3, [r3]
    ebbc:	mov	r1, #11
    ebc0:	mov	r0, r3
    ebc4:	bl	0 <flatcc_builder_table_add_offset>
    ebc8:	str	r0, [fp, #-28]	; 0xffffffe4
    ebcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ebd0:	cmp	r3, #0
    ebd4:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ebd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ebdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ebe0:	str	r2, [r3]
    ebe4:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    ebe8:	ldr	r2, [fp, #-120]	; 0xffffff88
    ebec:	ldr	r1, [fp, #-116]	; 0xffffff8c
    ebf0:	ldr	r0, [fp, #-112]	; 0xffffff90
    ebf4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ebf8:	str	r0, [fp, #-116]	; 0xffffff8c
    ebfc:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    ec00:	ldrd	r2, [fp, #-12]
    ec04:	mov	r0, #0
    ec08:	ldr	r1, [pc, #-356]	; eaac <MyGame_Example_TypeAliases_parse_json_table+0x102c>
    ec0c:	and	r2, r2, r0
    ec10:	and	r3, r3, r1
    ec14:	mov	r0, #0
    ec18:	ldr	r1, [pc, #-368]	; eab0 <MyGame_Example_TypeAliases_parse_json_table+0x1030>
    ec1c:	cmp	r3, r1
    ec20:	cmpeq	r2, r0
    ec24:	bne	eddc <MyGame_Example_TypeAliases_parse_json_table+0x135c>
    ec28:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ec2c:	str	r3, [fp, #-16]
    ec30:	mov	r3, #2
    ec34:	ldr	r2, [fp, #-120]	; 0xffffff88
    ec38:	ldr	r1, [fp, #-16]
    ec3c:	ldr	r0, [fp, #-112]	; 0xffffff90
    ec40:	bl	e20 <flatcc_json_parser_match_symbol>
    ec44:	str	r0, [fp, #-116]	; 0xffffff8c
    ec48:	ldr	r2, [fp, #-16]
    ec4c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ec50:	cmp	r2, r3
    ec54:	beq	edc4 <MyGame_Example_TypeAliases_parse_json_table+0x1344>
    ec58:	ldr	r3, [fp, #-112]	; 0xffffff90
    ec5c:	ldr	r0, [r3]
    ec60:	mvn	r3, #0
    ec64:	mov	r2, #1
    ec68:	mov	r1, #1
    ec6c:	bl	0 <flatcc_builder_start_vector>
    ec70:	mov	r3, r0
    ec74:	cmp	r3, #0
    ec78:	bne	eec0 <MyGame_Example_TypeAliases_parse_json_table+0x1440>
    ec7c:	sub	r3, fp, #32
    ec80:	ldr	r2, [fp, #-120]	; 0xffffff88
    ec84:	ldr	r1, [fp, #-116]	; 0xffffff8c
    ec88:	ldr	r0, [fp, #-112]	; 0xffffff90
    ec8c:	bl	bd0 <flatcc_json_parser_array_start>
    ec90:	str	r0, [fp, #-116]	; 0xffffff8c
    ec94:	b	ed64 <MyGame_Example_TypeAliases_parse_json_table+0x12e4>
    ec98:	mov	r3, #0
    ec9c:	strb	r3, [fp, #-101]	; 0xffffff9b
    eca0:	ldr	r3, [fp, #-112]	; 0xffffff90
    eca4:	ldr	r3, [r3]
    eca8:	mov	r1, #1
    ecac:	mov	r0, r3
    ecb0:	bl	0 <flatcc_builder_extend_vector>
    ecb4:	str	r0, [fp, #-20]	; 0xffffffec
    ecb8:	ldr	r3, [fp, #-20]	; 0xffffffec
    ecbc:	cmp	r3, #0
    ecc0:	beq	eec8 <MyGame_Example_TypeAliases_parse_json_table+0x1448>
    ecc4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ecc8:	str	r3, [fp, #-16]
    eccc:	sub	r3, fp, #101	; 0x65
    ecd0:	ldr	r2, [fp, #-120]	; 0xffffff88
    ecd4:	ldr	r1, [fp, #-16]
    ecd8:	ldr	r0, [fp, #-112]	; 0xffffff90
    ecdc:	bl	1bf8 <flatcc_json_parser_int8>
    ece0:	str	r0, [fp, #-116]	; 0xffffff8c
    ece4:	ldr	r2, [fp, #-16]
    ece8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ecec:	cmp	r2, r3
    ecf0:	bne	ed3c <MyGame_Example_TypeAliases_parse_json_table+0x12bc>
    ecf4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ecf8:	str	r3, [fp, #-16]
    ecfc:	sub	r3, fp, #101	; 0x65
    ed00:	str	r3, [sp]
    ed04:	ldr	r3, [pc, #-600]	; eab4 <MyGame_Example_TypeAliases_parse_json_table+0x1034>
    ed08:	ldr	r2, [fp, #-120]	; 0xffffff88
    ed0c:	ldr	r1, [fp, #-16]
    ed10:	ldr	r0, [fp, #-112]	; 0xffffff90
    ed14:	bl	2a90 <flatcc_json_parser_symbolic_int8>
    ed18:	str	r0, [fp, #-116]	; 0xffffff8c
    ed1c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    ed20:	ldr	r3, [fp, #-16]
    ed24:	cmp	r2, r3
    ed28:	beq	eec8 <MyGame_Example_TypeAliases_parse_json_table+0x1448>
    ed2c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    ed30:	ldr	r3, [fp, #-120]	; 0xffffff88
    ed34:	cmp	r2, r3
    ed38:	beq	eec8 <MyGame_Example_TypeAliases_parse_json_table+0x1448>
    ed3c:	ldrsb	r3, [fp, #-101]	; 0xffffff9b
    ed40:	mov	r1, r3
    ed44:	ldr	r0, [fp, #-20]	; 0xffffffec
    ed48:	bl	1b0 <flatbuffers_int8_write_to_pe>
    ed4c:	sub	r3, fp, #32
    ed50:	ldr	r2, [fp, #-120]	; 0xffffff88
    ed54:	ldr	r1, [fp, #-116]	; 0xffffff8c
    ed58:	ldr	r0, [fp, #-112]	; 0xffffff90
    ed5c:	bl	cb8 <flatcc_json_parser_array_end>
    ed60:	str	r0, [fp, #-116]	; 0xffffff8c
    ed64:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ed68:	cmp	r3, #0
    ed6c:	bne	ec98 <MyGame_Example_TypeAliases_parse_json_table+0x1218>
    ed70:	ldr	r3, [fp, #-112]	; 0xffffff90
    ed74:	ldr	r3, [r3]
    ed78:	mov	r0, r3
    ed7c:	bl	0 <flatcc_builder_end_vector>
    ed80:	str	r0, [fp, #-24]	; 0xffffffe8
    ed84:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ed88:	cmp	r3, #0
    ed8c:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ed90:	ldr	r3, [fp, #-112]	; 0xffffff90
    ed94:	ldr	r3, [r3]
    ed98:	mov	r1, #10
    ed9c:	mov	r0, r3
    eda0:	bl	0 <flatcc_builder_table_add_offset>
    eda4:	str	r0, [fp, #-28]	; 0xffffffe4
    eda8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    edac:	cmp	r3, #0
    edb0:	beq	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    edb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    edb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    edbc:	str	r2, [r3]
    edc0:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    edc4:	ldr	r2, [fp, #-120]	; 0xffffff88
    edc8:	ldr	r1, [fp, #-116]	; 0xffffff8c
    edcc:	ldr	r0, [fp, #-112]	; 0xffffff90
    edd0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    edd4:	str	r0, [fp, #-116]	; 0xffffff8c
    edd8:	b	edf0 <MyGame_Example_TypeAliases_parse_json_table+0x1370>
    eddc:	ldr	r2, [fp, #-120]	; 0xffffff88
    ede0:	ldr	r1, [fp, #-116]	; 0xffffff8c
    ede4:	ldr	r0, [fp, #-112]	; 0xffffff90
    ede8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    edec:	str	r0, [fp, #-116]	; 0xffffff8c
    edf0:	sub	r3, fp, #32
    edf4:	ldr	r2, [fp, #-120]	; 0xffffff88
    edf8:	ldr	r1, [fp, #-116]	; 0xffffff8c
    edfc:	ldr	r0, [fp, #-112]	; 0xffffff90
    ee00:	bl	a68 <flatcc_json_parser_object_end>
    ee04:	str	r0, [fp, #-116]	; 0xffffff8c
    ee08:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ee0c:	cmp	r3, #0
    ee10:	bne	dae4 <MyGame_Example_TypeAliases_parse_json_table+0x64>
    ee14:	ldr	r3, [fp, #-112]	; 0xffffff90
    ee18:	ldr	r3, [r3, #24]
    ee1c:	cmp	r3, #0
    ee20:	bne	eed0 <MyGame_Example_TypeAliases_parse_json_table+0x1450>
    ee24:	ldr	r3, [fp, #-112]	; 0xffffff90
    ee28:	ldr	r3, [r3]
    ee2c:	mov	r0, r3
    ee30:	bl	0 <flatcc_builder_end_table>
    ee34:	mov	r2, r0
    ee38:	ldr	r3, [fp, #-124]	; 0xffffff84
    ee3c:	str	r2, [r3]
    ee40:	ldr	r3, [fp, #-124]	; 0xffffff84
    ee44:	ldr	r3, [r3]
    ee48:	cmp	r3, #0
    ee4c:	beq	eed8 <MyGame_Example_TypeAliases_parse_json_table+0x1458>
    ee50:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ee54:	b	eef4 <MyGame_Example_TypeAliases_parse_json_table+0x1474>
    ee58:	nop			; (mov r0, r0)
    ee5c:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ee60:	nop			; (mov r0, r0)
    ee64:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ee68:	nop			; (mov r0, r0)
    ee6c:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ee70:	nop			; (mov r0, r0)
    ee74:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ee78:	nop			; (mov r0, r0)
    ee7c:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ee80:	nop			; (mov r0, r0)
    ee84:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ee88:	nop			; (mov r0, r0)
    ee8c:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ee90:	nop			; (mov r0, r0)
    ee94:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    ee98:	nop			; (mov r0, r0)
    ee9c:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    eea0:	nop			; (mov r0, r0)
    eea4:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    eea8:	nop			; (mov r0, r0)
    eeac:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    eeb0:	nop			; (mov r0, r0)
    eeb4:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    eeb8:	nop			; (mov r0, r0)
    eebc:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    eec0:	nop			; (mov r0, r0)
    eec4:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    eec8:	nop			; (mov r0, r0)
    eecc:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    eed0:	nop			; (mov r0, r0)
    eed4:	b	eedc <MyGame_Example_TypeAliases_parse_json_table+0x145c>
    eed8:	nop			; (mov r0, r0)
    eedc:	mov	r3, #33	; 0x21
    eee0:	ldr	r2, [fp, #-120]	; 0xffffff88
    eee4:	ldr	r1, [fp, #-116]	; 0xffffff8c
    eee8:	ldr	r0, [fp, #-112]	; 0xffffff90
    eeec:	bl	0 <flatcc_json_parser_set_error>
    eef0:	mov	r3, r0
    eef4:	mov	r0, r3
    eef8:	sub	sp, fp, #4
    eefc:	pop	{fp, pc}

0000ef00 <Fantasy_Attacker_parse_json_table>:
    ef00:	push	{fp, lr}
    ef04:	add	fp, sp, #4
    ef08:	sub	sp, sp, #48	; 0x30
    ef0c:	str	r0, [fp, #-32]	; 0xffffffe0
    ef10:	str	r1, [fp, #-36]	; 0xffffffdc
    ef14:	str	r2, [fp, #-40]	; 0xffffffd8
    ef18:	str	r3, [fp, #-44]	; 0xffffffd4
    ef1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ef20:	mov	r2, #0
    ef24:	str	r2, [r3]
    ef28:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef2c:	ldr	r3, [r3]
    ef30:	mov	r1, #1
    ef34:	mov	r0, r3
    ef38:	bl	0 <flatcc_builder_start_table>
    ef3c:	mov	r3, r0
    ef40:	cmp	r3, #0
    ef44:	bne	f1e8 <Fantasy_Attacker_parse_json_table+0x2e8>
    ef48:	sub	r3, fp, #24
    ef4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ef50:	ldr	r1, [fp, #-36]	; 0xffffffdc
    ef54:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ef58:	bl	980 <flatcc_json_parser_object_start>
    ef5c:	str	r0, [fp, #-36]	; 0xffffffdc
    ef60:	b	f198 <Fantasy_Attacker_parse_json_table+0x298>
    ef64:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ef68:	ldr	r1, [fp, #-36]	; 0xffffffdc
    ef6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ef70:	bl	570 <flatcc_json_parser_symbol_start>
    ef74:	str	r0, [fp, #-36]	; 0xffffffdc
    ef78:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ef7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    ef80:	bl	854 <flatcc_json_parser_symbol_part>
    ef84:	strd	r0, [fp, #-12]
    ef88:	ldrd	r2, [fp, #-12]
    ef8c:	add	r1, pc, #660	; 0x294
    ef90:	ldrd	r0, [r1]
    ef94:	cmp	r3, r1
    ef98:	cmpeq	r2, r0
    ef9c:	bne	f16c <Fantasy_Attacker_parse_json_table+0x26c>
    efa0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    efa4:	add	r3, r3, #8
    efa8:	str	r3, [fp, #-36]	; 0xffffffdc
    efac:	ldr	r1, [fp, #-40]	; 0xffffffd8
    efb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    efb4:	bl	854 <flatcc_json_parser_symbol_part>
    efb8:	strd	r0, [fp, #-12]
    efbc:	ldrd	r2, [fp, #-12]
    efc0:	add	r1, pc, #616	; 0x268
    efc4:	ldrd	r0, [r1]
    efc8:	cmp	r3, r1
    efcc:	cmpeq	r2, r0
    efd0:	bne	f154 <Fantasy_Attacker_parse_json_table+0x254>
    efd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    efd8:	add	r3, r3, #8
    efdc:	str	r3, [fp, #-36]	; 0xffffffdc
    efe0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    efe4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    efe8:	bl	854 <flatcc_json_parser_symbol_part>
    efec:	strd	r0, [fp, #-12]
    eff0:	ldrd	r2, [fp, #-12]
    eff4:	mov	r0, #0
    eff8:	mvn	r1, #255	; 0xff
    effc:	and	r2, r2, r0
    f000:	and	r3, r3, r1
    f004:	add	r1, pc, #556	; 0x22c
    f008:	ldrd	r0, [r1]
    f00c:	cmp	r3, r1
    f010:	cmpeq	r2, r0
    f014:	bne	f13c <Fantasy_Attacker_parse_json_table+0x23c>
    f018:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f01c:	str	r3, [fp, #-16]
    f020:	mov	r3, #3
    f024:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f028:	ldr	r1, [fp, #-16]
    f02c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f030:	bl	e20 <flatcc_json_parser_match_symbol>
    f034:	str	r0, [fp, #-36]	; 0xffffffdc
    f038:	ldr	r2, [fp, #-16]
    f03c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f040:	cmp	r2, r3
    f044:	beq	f124 <Fantasy_Attacker_parse_json_table+0x224>
    f048:	mov	r3, #0
    f04c:	str	r3, [fp, #-28]	; 0xffffffe4
    f050:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f054:	str	r3, [fp, #-16]
    f058:	sub	r3, fp, #28
    f05c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f060:	ldr	r1, [fp, #-16]
    f064:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f068:	bl	1a58 <flatcc_json_parser_int32>
    f06c:	str	r0, [fp, #-36]	; 0xffffffdc
    f070:	ldr	r2, [fp, #-16]
    f074:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f078:	cmp	r2, r3
    f07c:	bne	f0c8 <Fantasy_Attacker_parse_json_table+0x1c8>
    f080:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f084:	str	r3, [fp, #-16]
    f088:	sub	r3, fp, #28
    f08c:	str	r3, [sp]
    f090:	ldr	r3, [pc, #424]	; f240 <Fantasy_Attacker_parse_json_table+0x340>
    f094:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f098:	ldr	r1, [fp, #-16]
    f09c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f0a0:	bl	26e8 <flatcc_json_parser_symbolic_int32>
    f0a4:	str	r0, [fp, #-36]	; 0xffffffdc
    f0a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    f0ac:	ldr	r3, [fp, #-16]
    f0b0:	cmp	r2, r3
    f0b4:	beq	f204 <Fantasy_Attacker_parse_json_table+0x304>
    f0b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    f0bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f0c0:	cmp	r2, r3
    f0c4:	beq	f204 <Fantasy_Attacker_parse_json_table+0x304>
    f0c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f0cc:	cmp	r3, #0
    f0d0:	bne	f0e8 <Fantasy_Attacker_parse_json_table+0x1e8>
    f0d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f0d8:	ldr	r3, [r3, #8]
    f0dc:	and	r3, r3, #2
    f0e0:	cmp	r3, #0
    f0e4:	beq	f180 <Fantasy_Attacker_parse_json_table+0x280>
    f0e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f0ec:	ldr	r0, [r3]
    f0f0:	mov	r3, #4
    f0f4:	mov	r2, #4
    f0f8:	mov	r1, #0
    f0fc:	bl	0 <flatcc_builder_table_add>
    f100:	str	r0, [fp, #-20]	; 0xffffffec
    f104:	ldr	r3, [fp, #-20]	; 0xffffffec
    f108:	cmp	r3, #0
    f10c:	beq	f1f0 <Fantasy_Attacker_parse_json_table+0x2f0>
    f110:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f114:	mov	r1, r3
    f118:	ldr	r0, [fp, #-20]	; 0xffffffec
    f11c:	bl	27c <flatbuffers_int32_write_to_pe>
    f120:	b	f180 <Fantasy_Attacker_parse_json_table+0x280>
    f124:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f128:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f12c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f130:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f134:	str	r0, [fp, #-36]	; 0xffffffdc
    f138:	b	f180 <Fantasy_Attacker_parse_json_table+0x280>
    f13c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f140:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f144:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f148:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f14c:	str	r0, [fp, #-36]	; 0xffffffdc
    f150:	b	f180 <Fantasy_Attacker_parse_json_table+0x280>
    f154:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f158:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f15c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f160:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f164:	str	r0, [fp, #-36]	; 0xffffffdc
    f168:	b	f180 <Fantasy_Attacker_parse_json_table+0x280>
    f16c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f170:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f174:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f178:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f17c:	str	r0, [fp, #-36]	; 0xffffffdc
    f180:	sub	r3, fp, #24
    f184:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f188:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f18c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f190:	bl	a68 <flatcc_json_parser_object_end>
    f194:	str	r0, [fp, #-36]	; 0xffffffdc
    f198:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f19c:	cmp	r3, #0
    f1a0:	bne	ef64 <Fantasy_Attacker_parse_json_table+0x64>
    f1a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f1a8:	ldr	r3, [r3, #24]
    f1ac:	cmp	r3, #0
    f1b0:	bne	f1f8 <Fantasy_Attacker_parse_json_table+0x2f8>
    f1b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f1b8:	ldr	r3, [r3]
    f1bc:	mov	r0, r3
    f1c0:	bl	0 <flatcc_builder_end_table>
    f1c4:	mov	r2, r0
    f1c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f1cc:	str	r2, [r3]
    f1d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f1d4:	ldr	r3, [r3]
    f1d8:	cmp	r3, #0
    f1dc:	beq	f200 <Fantasy_Attacker_parse_json_table+0x300>
    f1e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f1e4:	b	f21c <Fantasy_Attacker_parse_json_table+0x31c>
    f1e8:	nop			; (mov r0, r0)
    f1ec:	b	f204 <Fantasy_Attacker_parse_json_table+0x304>
    f1f0:	nop			; (mov r0, r0)
    f1f4:	b	f204 <Fantasy_Attacker_parse_json_table+0x304>
    f1f8:	nop			; (mov r0, r0)
    f1fc:	b	f204 <Fantasy_Attacker_parse_json_table+0x304>
    f200:	nop			; (mov r0, r0)
    f204:	mov	r3, #33	; 0x21
    f208:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f20c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f210:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f214:	bl	0 <flatcc_json_parser_set_error>
    f218:	mov	r3, r0
    f21c:	mov	r0, r3
    f220:	sub	sp, fp, #4
    f224:	pop	{fp, pc}
    f228:	.word	0x645f6174
    f22c:	.word	0x73776f72
    f230:	.word	0x5f64616d
    f234:	.word	0x7461636b
    f238:	.word	0x00000000
    f23c:	.word	0x61676500
    f240:	.word	0x00000338

0000f244 <Fantasy_Rapunzel_parse_json_struct_inline>:
    f244:	push	{fp, lr}
    f248:	add	fp, sp, #4
    f24c:	sub	sp, sp, #48	; 0x30
    f250:	str	r0, [fp, #-32]	; 0xffffffe0
    f254:	str	r1, [fp, #-36]	; 0xffffffdc
    f258:	str	r2, [fp, #-40]	; 0xffffffd8
    f25c:	str	r3, [fp, #-44]	; 0xffffffd4
    f260:	sub	r3, fp, #24
    f264:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f268:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f26c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f270:	bl	980 <flatcc_json_parser_object_start>
    f274:	str	r0, [fp, #-36]	; 0xffffffdc
    f278:	b	f424 <Fantasy_Rapunzel_parse_json_struct_inline+0x1e0>
    f27c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f280:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f284:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f288:	bl	570 <flatcc_json_parser_symbol_start>
    f28c:	str	r0, [fp, #-36]	; 0xffffffdc
    f290:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f294:	ldr	r0, [fp, #-36]	; 0xffffffdc
    f298:	bl	854 <flatcc_json_parser_symbol_part>
    f29c:	strd	r0, [fp, #-12]
    f2a0:	ldrd	r2, [fp, #-12]
    f2a4:	add	r1, pc, #436	; 0x1b4
    f2a8:	ldrd	r0, [r1]
    f2ac:	cmp	r3, r1
    f2b0:	cmpeq	r2, r0
    f2b4:	bne	f3f8 <Fantasy_Rapunzel_parse_json_struct_inline+0x1b4>
    f2b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f2bc:	add	r3, r3, #8
    f2c0:	str	r3, [fp, #-36]	; 0xffffffdc
    f2c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f2c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    f2cc:	bl	854 <flatcc_json_parser_symbol_part>
    f2d0:	strd	r0, [fp, #-12]
    f2d4:	ldrd	r2, [fp, #-12]
    f2d8:	mov	r0, #0
    f2dc:	mvn	r1, #255	; 0xff
    f2e0:	and	r2, r2, r0
    f2e4:	and	r3, r3, r1
    f2e8:	add	r1, pc, #376	; 0x178
    f2ec:	ldrd	r0, [r1]
    f2f0:	cmp	r3, r1
    f2f4:	cmpeq	r2, r0
    f2f8:	bne	f3e0 <Fantasy_Rapunzel_parse_json_struct_inline+0x19c>
    f2fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f300:	str	r3, [fp, #-16]
    f304:	mov	r3, #3
    f308:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f30c:	ldr	r1, [fp, #-16]
    f310:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f314:	bl	e20 <flatcc_json_parser_match_symbol>
    f318:	str	r0, [fp, #-36]	; 0xffffffdc
    f31c:	ldr	r2, [fp, #-16]
    f320:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f324:	cmp	r2, r3
    f328:	beq	f3c8 <Fantasy_Rapunzel_parse_json_struct_inline+0x184>
    f32c:	mov	r3, #0
    f330:	strh	r3, [fp, #-26]	; 0xffffffe6
    f334:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f338:	str	r3, [fp, #-20]	; 0xffffffec
    f33c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f340:	str	r3, [fp, #-16]
    f344:	sub	r3, fp, #26
    f348:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f34c:	ldr	r1, [fp, #-16]
    f350:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f354:	bl	17e4 <flatcc_json_parser_uint16>
    f358:	str	r0, [fp, #-36]	; 0xffffffdc
    f35c:	ldr	r2, [fp, #-16]
    f360:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f364:	cmp	r2, r3
    f368:	bne	f3b4 <Fantasy_Rapunzel_parse_json_struct_inline+0x170>
    f36c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f370:	str	r3, [fp, #-16]
    f374:	sub	r3, fp, #26
    f378:	str	r3, [sp]
    f37c:	ldr	r3, [pc, #236]	; f470 <Fantasy_Rapunzel_parse_json_struct_inline+0x22c>
    f380:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f384:	ldr	r1, [fp, #-16]
    f388:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f38c:	bl	2170 <flatcc_json_parser_symbolic_uint16>
    f390:	str	r0, [fp, #-36]	; 0xffffffdc
    f394:	ldr	r2, [fp, #-36]	; 0xffffffdc
    f398:	ldr	r3, [fp, #-16]
    f39c:	cmp	r2, r3
    f3a0:	beq	f438 <Fantasy_Rapunzel_parse_json_struct_inline+0x1f4>
    f3a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    f3a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f3ac:	cmp	r2, r3
    f3b0:	beq	f438 <Fantasy_Rapunzel_parse_json_struct_inline+0x1f4>
    f3b4:	ldrh	r3, [fp, #-26]	; 0xffffffe6
    f3b8:	mov	r1, r3
    f3bc:	ldr	r0, [fp, #-20]	; 0xffffffec
    f3c0:	bl	90 <flatbuffers_uint16_write_to_pe>
    f3c4:	b	f40c <Fantasy_Rapunzel_parse_json_struct_inline+0x1c8>
    f3c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f3cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f3d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f3d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f3d8:	str	r0, [fp, #-36]	; 0xffffffdc
    f3dc:	b	f40c <Fantasy_Rapunzel_parse_json_struct_inline+0x1c8>
    f3e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f3e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f3e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f3ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f3f0:	str	r0, [fp, #-36]	; 0xffffffdc
    f3f4:	b	f40c <Fantasy_Rapunzel_parse_json_struct_inline+0x1c8>
    f3f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f3fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f400:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f404:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f408:	str	r0, [fp, #-36]	; 0xffffffdc
    f40c:	sub	r3, fp, #24
    f410:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f414:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f418:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f41c:	bl	a68 <flatcc_json_parser_object_end>
    f420:	str	r0, [fp, #-36]	; 0xffffffdc
    f424:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f428:	cmp	r3, #0
    f42c:	bne	f27c <Fantasy_Rapunzel_parse_json_struct_inline+0x38>
    f430:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f434:	b	f450 <Fantasy_Rapunzel_parse_json_struct_inline+0x20c>
    f438:	mov	r3, #33	; 0x21
    f43c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f440:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f444:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f448:	bl	0 <flatcc_json_parser_set_error>
    f44c:	mov	r3, r0
    f450:	mov	r0, r3
    f454:	sub	sp, fp, #4
    f458:	pop	{fp, pc}
    f45c:	nop			; (mov r0, r0)
    f460:	.word	0x5f6c656e
    f464:	.word	0x68616972
    f468:	.word	0x00000000
    f46c:	.word	0x67746800
    f470:	.word	0x00000344

0000f474 <Fantasy_Rapunzel_parse_json_struct>:
    f474:	push	{fp, lr}
    f478:	add	fp, sp, #4
    f47c:	sub	sp, sp, #24
    f480:	str	r0, [fp, #-16]
    f484:	str	r1, [fp, #-20]	; 0xffffffec
    f488:	str	r2, [fp, #-24]	; 0xffffffe8
    f48c:	str	r3, [fp, #-28]	; 0xffffffe4
    f490:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f494:	mov	r2, #0
    f498:	str	r2, [r3]
    f49c:	ldr	r3, [fp, #-16]
    f4a0:	ldr	r3, [r3]
    f4a4:	mov	r2, #2
    f4a8:	mov	r1, #2
    f4ac:	mov	r0, r3
    f4b0:	bl	0 <flatcc_builder_start_struct>
    f4b4:	str	r0, [fp, #-8]
    f4b8:	ldr	r3, [fp, #-8]
    f4bc:	cmp	r3, #0
    f4c0:	beq	f520 <Fantasy_Rapunzel_parse_json_struct+0xac>
    f4c4:	ldr	r3, [fp, #-8]
    f4c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f4cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    f4d0:	ldr	r0, [fp, #-16]
    f4d4:	bl	f244 <Fantasy_Rapunzel_parse_json_struct_inline>
    f4d8:	str	r0, [fp, #-20]	; 0xffffffec
    f4dc:	ldr	r2, [fp, #-20]	; 0xffffffec
    f4e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f4e4:	cmp	r2, r3
    f4e8:	beq	f524 <Fantasy_Rapunzel_parse_json_struct+0xb0>
    f4ec:	ldr	r3, [fp, #-16]
    f4f0:	ldr	r3, [r3]
    f4f4:	mov	r0, r3
    f4f8:	bl	0 <flatcc_builder_end_struct>
    f4fc:	mov	r2, r0
    f500:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f504:	str	r2, [r3]
    f508:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f50c:	ldr	r3, [r3]
    f510:	cmp	r3, #0
    f514:	beq	f524 <Fantasy_Rapunzel_parse_json_struct+0xb0>
    f518:	ldr	r3, [fp, #-20]	; 0xffffffec
    f51c:	b	f53c <Fantasy_Rapunzel_parse_json_struct+0xc8>
    f520:	nop			; (mov r0, r0)
    f524:	mov	r3, #33	; 0x21
    f528:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f52c:	ldr	r1, [fp, #-20]	; 0xffffffec
    f530:	ldr	r0, [fp, #-16]
    f534:	bl	0 <flatcc_json_parser_set_error>
    f538:	mov	r3, r0
    f53c:	mov	r0, r3
    f540:	sub	sp, fp, #4
    f544:	pop	{fp, pc}

0000f548 <Fantasy_BookReader_parse_json_struct_inline>:
    f548:	push	{fp, lr}
    f54c:	add	fp, sp, #4
    f550:	sub	sp, sp, #48	; 0x30
    f554:	str	r0, [fp, #-32]	; 0xffffffe0
    f558:	str	r1, [fp, #-36]	; 0xffffffdc
    f55c:	str	r2, [fp, #-40]	; 0xffffffd8
    f560:	str	r3, [fp, #-44]	; 0xffffffd4
    f564:	sub	r3, fp, #24
    f568:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f56c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f570:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f574:	bl	980 <flatcc_json_parser_object_start>
    f578:	str	r0, [fp, #-36]	; 0xffffffdc
    f57c:	b	f728 <Fantasy_BookReader_parse_json_struct_inline+0x1e0>
    f580:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f584:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f588:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f58c:	bl	570 <flatcc_json_parser_symbol_start>
    f590:	str	r0, [fp, #-36]	; 0xffffffdc
    f594:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f598:	ldr	r0, [fp, #-36]	; 0xffffffdc
    f59c:	bl	854 <flatcc_json_parser_symbol_part>
    f5a0:	strd	r0, [fp, #-12]
    f5a4:	ldrd	r2, [fp, #-12]
    f5a8:	add	r1, pc, #432	; 0x1b0
    f5ac:	ldrd	r0, [r1]
    f5b0:	cmp	r3, r1
    f5b4:	cmpeq	r2, r0
    f5b8:	bne	f6fc <Fantasy_BookReader_parse_json_struct_inline+0x1b4>
    f5bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f5c0:	add	r3, r3, #8
    f5c4:	str	r3, [fp, #-36]	; 0xffffffdc
    f5c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f5cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    f5d0:	bl	854 <flatcc_json_parser_symbol_part>
    f5d4:	strd	r0, [fp, #-12]
    f5d8:	ldrd	r2, [fp, #-12]
    f5dc:	mov	r0, #0
    f5e0:	ldr	r1, [pc, #384]	; f768 <Fantasy_BookReader_parse_json_struct_inline+0x220>
    f5e4:	and	r2, r2, r0
    f5e8:	and	r3, r3, r1
    f5ec:	mov	r0, #0
    f5f0:	ldr	r1, [pc, #372]	; f76c <Fantasy_BookReader_parse_json_struct_inline+0x224>
    f5f4:	cmp	r3, r1
    f5f8:	cmpeq	r2, r0
    f5fc:	bne	f6e4 <Fantasy_BookReader_parse_json_struct_inline+0x19c>
    f600:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f604:	str	r3, [fp, #-16]
    f608:	mov	r3, #2
    f60c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f610:	ldr	r1, [fp, #-16]
    f614:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f618:	bl	e20 <flatcc_json_parser_match_symbol>
    f61c:	str	r0, [fp, #-36]	; 0xffffffdc
    f620:	ldr	r2, [fp, #-16]
    f624:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f628:	cmp	r2, r3
    f62c:	beq	f6cc <Fantasy_BookReader_parse_json_struct_inline+0x184>
    f630:	mov	r3, #0
    f634:	str	r3, [fp, #-28]	; 0xffffffe4
    f638:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f63c:	str	r3, [fp, #-20]	; 0xffffffec
    f640:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f644:	str	r3, [fp, #-16]
    f648:	sub	r3, fp, #28
    f64c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f650:	ldr	r1, [fp, #-16]
    f654:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f658:	bl	1a58 <flatcc_json_parser_int32>
    f65c:	str	r0, [fp, #-36]	; 0xffffffdc
    f660:	ldr	r2, [fp, #-16]
    f664:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f668:	cmp	r2, r3
    f66c:	bne	f6b8 <Fantasy_BookReader_parse_json_struct_inline+0x170>
    f670:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f674:	str	r3, [fp, #-16]
    f678:	sub	r3, fp, #28
    f67c:	str	r3, [sp]
    f680:	ldr	r3, [pc, #232]	; f770 <Fantasy_BookReader_parse_json_struct_inline+0x228>
    f684:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f688:	ldr	r1, [fp, #-16]
    f68c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f690:	bl	26e8 <flatcc_json_parser_symbolic_int32>
    f694:	str	r0, [fp, #-36]	; 0xffffffdc
    f698:	ldr	r2, [fp, #-36]	; 0xffffffdc
    f69c:	ldr	r3, [fp, #-16]
    f6a0:	cmp	r2, r3
    f6a4:	beq	f73c <Fantasy_BookReader_parse_json_struct_inline+0x1f4>
    f6a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    f6ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f6b0:	cmp	r2, r3
    f6b4:	beq	f73c <Fantasy_BookReader_parse_json_struct_inline+0x1f4>
    f6b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f6bc:	mov	r1, r3
    f6c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    f6c4:	bl	27c <flatbuffers_int32_write_to_pe>
    f6c8:	b	f710 <Fantasy_BookReader_parse_json_struct_inline+0x1c8>
    f6cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f6d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f6d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f6d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f6dc:	str	r0, [fp, #-36]	; 0xffffffdc
    f6e0:	b	f710 <Fantasy_BookReader_parse_json_struct_inline+0x1c8>
    f6e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f6e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f6ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f6f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f6f4:	str	r0, [fp, #-36]	; 0xffffffdc
    f6f8:	b	f710 <Fantasy_BookReader_parse_json_struct_inline+0x1c8>
    f6fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f700:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f704:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f708:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f70c:	str	r0, [fp, #-36]	; 0xffffffdc
    f710:	sub	r3, fp, #24
    f714:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f718:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f71c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f720:	bl	a68 <flatcc_json_parser_object_end>
    f724:	str	r0, [fp, #-36]	; 0xffffffdc
    f728:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f72c:	cmp	r3, #0
    f730:	bne	f580 <Fantasy_BookReader_parse_json_struct_inline+0x38>
    f734:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f738:	b	f754 <Fantasy_BookReader_parse_json_struct_inline+0x20c>
    f73c:	mov	r3, #33	; 0x21
    f740:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f744:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f748:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f74c:	bl	0 <flatcc_json_parser_set_error>
    f750:	mov	r3, r0
    f754:	mov	r0, r3
    f758:	sub	sp, fp, #4
    f75c:	pop	{fp, pc}
    f760:	.word	0x735f7265
    f764:	.word	0x626f6f6b
    f768:	.word	0xffff0000
    f76c:	.word	0x61640000
    f770:	.word	0x00000350

0000f774 <Fantasy_BookReader_parse_json_struct>:
    f774:	push	{fp, lr}
    f778:	add	fp, sp, #4
    f77c:	sub	sp, sp, #24
    f780:	str	r0, [fp, #-16]
    f784:	str	r1, [fp, #-20]	; 0xffffffec
    f788:	str	r2, [fp, #-24]	; 0xffffffe8
    f78c:	str	r3, [fp, #-28]	; 0xffffffe4
    f790:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f794:	mov	r2, #0
    f798:	str	r2, [r3]
    f79c:	ldr	r3, [fp, #-16]
    f7a0:	ldr	r3, [r3]
    f7a4:	mov	r2, #4
    f7a8:	mov	r1, #4
    f7ac:	mov	r0, r3
    f7b0:	bl	0 <flatcc_builder_start_struct>
    f7b4:	str	r0, [fp, #-8]
    f7b8:	ldr	r3, [fp, #-8]
    f7bc:	cmp	r3, #0
    f7c0:	beq	f820 <Fantasy_BookReader_parse_json_struct+0xac>
    f7c4:	ldr	r3, [fp, #-8]
    f7c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f7cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    f7d0:	ldr	r0, [fp, #-16]
    f7d4:	bl	f548 <Fantasy_BookReader_parse_json_struct_inline>
    f7d8:	str	r0, [fp, #-20]	; 0xffffffec
    f7dc:	ldr	r2, [fp, #-20]	; 0xffffffec
    f7e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f7e4:	cmp	r2, r3
    f7e8:	beq	f824 <Fantasy_BookReader_parse_json_struct+0xb0>
    f7ec:	ldr	r3, [fp, #-16]
    f7f0:	ldr	r3, [r3]
    f7f4:	mov	r0, r3
    f7f8:	bl	0 <flatcc_builder_end_struct>
    f7fc:	mov	r2, r0
    f800:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f804:	str	r2, [r3]
    f808:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f80c:	ldr	r3, [r3]
    f810:	cmp	r3, #0
    f814:	beq	f824 <Fantasy_BookReader_parse_json_struct+0xb0>
    f818:	ldr	r3, [fp, #-20]	; 0xffffffec
    f81c:	b	f83c <Fantasy_BookReader_parse_json_struct+0xc8>
    f820:	nop			; (mov r0, r0)
    f824:	mov	r3, #33	; 0x21
    f828:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f82c:	ldr	r1, [fp, #-20]	; 0xffffffec
    f830:	ldr	r0, [fp, #-16]
    f834:	bl	0 <flatcc_json_parser_set_error>
    f838:	mov	r3, r0
    f83c:	mov	r0, r3
    f840:	sub	sp, fp, #4
    f844:	pop	{fp, pc}

0000f848 <Fantasy_Character_parse_json_union>:
    f848:	push	{fp, lr}
    f84c:	add	fp, sp, #4
    f850:	sub	sp, sp, #16
    f854:	str	r0, [fp, #-8]
    f858:	str	r1, [fp, #-12]
    f85c:	str	r2, [fp, #-16]
    f860:	strb	r3, [fp, #-17]	; 0xffffffef
    f864:	ldr	r3, [fp, #4]
    f868:	mov	r2, #0
    f86c:	str	r2, [r3]
    f870:	ldrb	r3, [fp, #-17]	; 0xffffffef
    f874:	cmp	r3, #9
    f878:	beq	f90c <Fantasy_Character_parse_json_union+0xc4>
    f87c:	cmp	r3, #9
    f880:	bgt	f8a0 <Fantasy_Character_parse_json_union+0x58>
    f884:	cmp	r3, #2
    f888:	beq	f8d4 <Fantasy_Character_parse_json_union+0x8c>
    f88c:	cmp	r3, #8
    f890:	beq	f8f0 <Fantasy_Character_parse_json_union+0xa8>
    f894:	cmp	r3, #0
    f898:	beq	f8bc <Fantasy_Character_parse_json_union+0x74>
    f89c:	b	f97c <Fantasy_Character_parse_json_union+0x134>
    f8a0:	cmp	r3, #11
    f8a4:	beq	f944 <Fantasy_Character_parse_json_union+0xfc>
    f8a8:	cmp	r3, #11
    f8ac:	blt	f928 <Fantasy_Character_parse_json_union+0xe0>
    f8b0:	cmp	r3, #255	; 0xff
    f8b4:	beq	f960 <Fantasy_Character_parse_json_union+0x118>
    f8b8:	b	f97c <Fantasy_Character_parse_json_union+0x134>
    f8bc:	ldr	r2, [fp, #-16]
    f8c0:	ldr	r1, [fp, #-12]
    f8c4:	ldr	r0, [fp, #-8]
    f8c8:	bl	15c4 <flatcc_json_parser_none>
    f8cc:	mov	r3, r0
    f8d0:	b	fa0c <Fantasy_Character_parse_json_union+0x1c4>
    f8d4:	ldr	r3, [fp, #4]
    f8d8:	ldr	r2, [fp, #-16]
    f8dc:	ldr	r1, [fp, #-12]
    f8e0:	ldr	r0, [fp, #-8]
    f8e4:	bl	ef00 <Fantasy_Attacker_parse_json_table>
    f8e8:	str	r0, [fp, #-12]
    f8ec:	b	f9c4 <Fantasy_Character_parse_json_union+0x17c>
    f8f0:	ldr	r3, [fp, #4]
    f8f4:	ldr	r2, [fp, #-16]
    f8f8:	ldr	r1, [fp, #-12]
    f8fc:	ldr	r0, [fp, #-8]
    f900:	bl	f474 <Fantasy_Rapunzel_parse_json_struct>
    f904:	str	r0, [fp, #-12]
    f908:	b	f9c4 <Fantasy_Character_parse_json_union+0x17c>
    f90c:	ldr	r3, [fp, #4]
    f910:	ldr	r2, [fp, #-16]
    f914:	ldr	r1, [fp, #-12]
    f918:	ldr	r0, [fp, #-8]
    f91c:	bl	f774 <Fantasy_BookReader_parse_json_struct>
    f920:	str	r0, [fp, #-12]
    f924:	b	f9c4 <Fantasy_Character_parse_json_union+0x17c>
    f928:	ldr	r3, [fp, #4]
    f92c:	ldr	r2, [fp, #-16]
    f930:	ldr	r1, [fp, #-12]
    f934:	ldr	r0, [fp, #-8]
    f938:	bl	f774 <Fantasy_BookReader_parse_json_struct>
    f93c:	str	r0, [fp, #-12]
    f940:	b	f9c4 <Fantasy_Character_parse_json_union+0x17c>
    f944:	ldr	r3, [fp, #4]
    f948:	ldr	r2, [fp, #-16]
    f94c:	ldr	r1, [fp, #-12]
    f950:	ldr	r0, [fp, #-8]
    f954:	bl	0 <flatcc_json_parser_build_string>
    f958:	str	r0, [fp, #-12]
    f95c:	b	f9c4 <Fantasy_Character_parse_json_union+0x17c>
    f960:	ldr	r3, [fp, #4]
    f964:	ldr	r2, [fp, #-16]
    f968:	ldr	r1, [fp, #-12]
    f96c:	ldr	r0, [fp, #-8]
    f970:	bl	0 <flatcc_json_parser_build_string>
    f974:	str	r0, [fp, #-12]
    f978:	b	f9c4 <Fantasy_Character_parse_json_union+0x17c>
    f97c:	ldr	r3, [fp, #-8]
    f980:	ldr	r3, [r3, #8]
    f984:	and	r3, r3, #1
    f988:	cmp	r3, #0
    f98c:	bne	f9ac <Fantasy_Character_parse_json_union+0x164>
    f990:	mov	r3, #15
    f994:	ldr	r2, [fp, #-16]
    f998:	ldr	r1, [fp, #-12]
    f99c:	ldr	r0, [fp, #-8]
    f9a0:	bl	0 <flatcc_json_parser_set_error>
    f9a4:	mov	r3, r0
    f9a8:	b	fa0c <Fantasy_Character_parse_json_union+0x1c4>
    f9ac:	ldr	r2, [fp, #-16]
    f9b0:	ldr	r1, [fp, #-12]
    f9b4:	ldr	r0, [fp, #-8]
    f9b8:	bl	0 <flatcc_json_parser_generic_json>
    f9bc:	mov	r3, r0
    f9c0:	b	fa0c <Fantasy_Character_parse_json_union+0x1c4>
    f9c4:	ldr	r3, [fp, #-8]
    f9c8:	ldr	r3, [r3, #24]
    f9cc:	cmp	r3, #0
    f9d0:	beq	f9dc <Fantasy_Character_parse_json_union+0x194>
    f9d4:	ldr	r3, [fp, #-12]
    f9d8:	b	fa0c <Fantasy_Character_parse_json_union+0x1c4>
    f9dc:	ldr	r3, [fp, #4]
    f9e0:	ldr	r3, [r3]
    f9e4:	cmp	r3, #0
    f9e8:	bne	fa08 <Fantasy_Character_parse_json_union+0x1c0>
    f9ec:	mov	r3, #33	; 0x21
    f9f0:	ldr	r2, [fp, #-16]
    f9f4:	ldr	r1, [fp, #-12]
    f9f8:	ldr	r0, [fp, #-8]
    f9fc:	bl	0 <flatcc_json_parser_set_error>
    fa00:	mov	r3, r0
    fa04:	b	fa0c <Fantasy_Character_parse_json_union+0x1c4>
    fa08:	ldr	r3, [fp, #-12]
    fa0c:	mov	r0, r3
    fa10:	sub	sp, fp, #4
    fa14:	pop	{fp, pc}

0000fa18 <Fantasy_Character_json_union_accept_type>:
    fa18:	push	{fp}		; (str fp, [sp, #-4]!)
    fa1c:	add	fp, sp, #0
    fa20:	sub	sp, sp, #12
    fa24:	mov	r3, r0
    fa28:	strb	r3, [fp, #-5]
    fa2c:	ldrb	r3, [fp, #-5]
    fa30:	cmp	r3, #9
    fa34:	beq	fa90 <Fantasy_Character_json_union_accept_type+0x78>
    fa38:	cmp	r3, #9
    fa3c:	bgt	fa5c <Fantasy_Character_json_union_accept_type+0x44>
    fa40:	cmp	r3, #2
    fa44:	beq	fa80 <Fantasy_Character_json_union_accept_type+0x68>
    fa48:	cmp	r3, #8
    fa4c:	beq	fa88 <Fantasy_Character_json_union_accept_type+0x70>
    fa50:	cmp	r3, #0
    fa54:	beq	fa78 <Fantasy_Character_json_union_accept_type+0x60>
    fa58:	b	fab0 <Fantasy_Character_json_union_accept_type+0x98>
    fa5c:	cmp	r3, #11
    fa60:	beq	faa0 <Fantasy_Character_json_union_accept_type+0x88>
    fa64:	cmp	r3, #11
    fa68:	blt	fa98 <Fantasy_Character_json_union_accept_type+0x80>
    fa6c:	cmp	r3, #255	; 0xff
    fa70:	beq	faa8 <Fantasy_Character_json_union_accept_type+0x90>
    fa74:	b	fab0 <Fantasy_Character_json_union_accept_type+0x98>
    fa78:	mov	r3, #1
    fa7c:	b	fab4 <Fantasy_Character_json_union_accept_type+0x9c>
    fa80:	mov	r3, #1
    fa84:	b	fab4 <Fantasy_Character_json_union_accept_type+0x9c>
    fa88:	mov	r3, #1
    fa8c:	b	fab4 <Fantasy_Character_json_union_accept_type+0x9c>
    fa90:	mov	r3, #1
    fa94:	b	fab4 <Fantasy_Character_json_union_accept_type+0x9c>
    fa98:	mov	r3, #1
    fa9c:	b	fab4 <Fantasy_Character_json_union_accept_type+0x9c>
    faa0:	mov	r3, #1
    faa4:	b	fab4 <Fantasy_Character_json_union_accept_type+0x9c>
    faa8:	mov	r3, #1
    faac:	b	fab4 <Fantasy_Character_json_union_accept_type+0x9c>
    fab0:	mov	r3, #0
    fab4:	mov	r0, r3
    fab8:	add	sp, fp, #0
    fabc:	pop	{fp}		; (ldr fp, [sp], #4)
    fac0:	bx	lr

0000fac4 <Fantasy_Character_parse_json_enum>:
    fac4:	push	{fp, lr}
    fac8:	add	fp, sp, #4
    facc:	sub	sp, sp, #48	; 0x30
    fad0:	str	r0, [fp, #-32]	; 0xffffffe0
    fad4:	str	r1, [fp, #-36]	; 0xffffffdc
    fad8:	str	r2, [fp, #-40]	; 0xffffffd8
    fadc:	str	r3, [fp, #-44]	; 0xffffffd4
    fae0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fae4:	str	r3, [fp, #-8]
    fae8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    faec:	ldr	r0, [fp, #-36]	; 0xffffffdc
    faf0:	bl	854 <flatcc_json_parser_symbol_part>
    faf4:	strd	r0, [fp, #-20]	; 0xffffffec
    faf8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    fafc:	add	r1, pc, #932	; 0x3a4
    fb00:	ldrd	r0, [r1]
    fb04:	cmp	r3, r1
    fb08:	cmpeq	r2, r0
    fb0c:	bhi	fcd0 <Fantasy_Character_parse_json_enum+0x20c>
    fb10:	ldrd	r2, [fp, #-20]	; 0xffffffec
    fb14:	add	r1, pc, #916	; 0x394
    fb18:	ldrd	r0, [r1]
    fb1c:	cmp	r3, r1
    fb20:	cmpeq	r2, r0
    fb24:	bhi	fbb8 <Fantasy_Character_parse_json_enum+0xf4>
    fb28:	ldrd	r2, [fp, #-20]	; 0xffffffec
    fb2c:	mov	r0, #-16777216	; 0xff000000
    fb30:	mvn	r1, #0
    fb34:	and	r2, r2, r0
    fb38:	and	r3, r3, r1
    fb3c:	add	r1, pc, #884	; 0x374
    fb40:	ldrd	r0, [r1]
    fb44:	cmp	r3, r1
    fb48:	cmpeq	r2, r0
    fb4c:	bne	fbb0 <Fantasy_Character_parse_json_enum+0xec>
    fb50:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fb54:	str	r3, [fp, #-24]	; 0xffffffe8
    fb58:	ldr	r3, [fp, #8]
    fb5c:	str	r3, [sp]
    fb60:	mov	r3, #5
    fb64:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fb68:	ldr	r1, [fp, #-24]	; 0xffffffe8
    fb6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fb70:	bl	0 <flatcc_json_parser_match_constant>
    fb74:	str	r0, [fp, #-36]	; 0xffffffdc
    fb78:	ldr	r2, [fp, #-36]	; 0xffffffdc
    fb7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fb80:	cmp	r2, r3
    fb84:	beq	fba8 <Fantasy_Character_parse_json_enum+0xe4>
    fb88:	ldr	r1, [fp, #4]
    fb8c:	mov	r2, #9
    fb90:	mov	r3, #0
    fb94:	strd	r2, [r1]
    fb98:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fb9c:	mov	r2, #0
    fba0:	str	r2, [r3]
    fba4:	b	ff7c <Fantasy_Character_parse_json_enum+0x4b8>
    fba8:	ldr	r3, [fp, #-8]
    fbac:	b	ff80 <Fantasy_Character_parse_json_enum+0x4bc>
    fbb0:	ldr	r3, [fp, #-8]
    fbb4:	b	ff80 <Fantasy_Character_parse_json_enum+0x4bc>
    fbb8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    fbbc:	mov	r0, #-16777216	; 0xff000000
    fbc0:	mvn	r1, #0
    fbc4:	and	r2, r2, r0
    fbc8:	and	r3, r3, r1
    fbcc:	add	r1, pc, #748	; 0x2ec
    fbd0:	ldrd	r0, [r1]
    fbd4:	cmp	r3, r1
    fbd8:	cmpeq	r2, r0
    fbdc:	bne	fc40 <Fantasy_Character_parse_json_enum+0x17c>
    fbe0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fbe4:	str	r3, [fp, #-24]	; 0xffffffe8
    fbe8:	ldr	r3, [fp, #8]
    fbec:	str	r3, [sp]
    fbf0:	mov	r3, #5
    fbf4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fbf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    fbfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fc00:	bl	0 <flatcc_json_parser_match_constant>
    fc04:	str	r0, [fp, #-36]	; 0xffffffdc
    fc08:	ldr	r2, [fp, #-36]	; 0xffffffdc
    fc0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fc10:	cmp	r2, r3
    fc14:	beq	fc38 <Fantasy_Character_parse_json_enum+0x174>
    fc18:	ldr	r1, [fp, #4]
    fc1c:	mov	r2, #2
    fc20:	mov	r3, #0
    fc24:	strd	r2, [r1]
    fc28:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fc2c:	mov	r2, #0
    fc30:	str	r2, [r3]
    fc34:	b	ff7c <Fantasy_Character_parse_json_enum+0x4b8>
    fc38:	ldr	r3, [fp, #-8]
    fc3c:	b	ff80 <Fantasy_Character_parse_json_enum+0x4bc>
    fc40:	ldrd	r2, [fp, #-20]	; 0xffffffec
    fc44:	mvn	r0, #255	; 0xff
    fc48:	mvn	r1, #0
    fc4c:	and	r2, r2, r0
    fc50:	and	r3, r3, r1
    fc54:	add	r1, pc, #620	; 0x26c
    fc58:	ldrd	r0, [r1]
    fc5c:	cmp	r3, r1
    fc60:	cmpeq	r2, r0
    fc64:	bne	fcc8 <Fantasy_Character_parse_json_enum+0x204>
    fc68:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fc6c:	str	r3, [fp, #-24]	; 0xffffffe8
    fc70:	ldr	r3, [fp, #8]
    fc74:	str	r3, [sp]
    fc78:	mov	r3, #7
    fc7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fc80:	ldr	r1, [fp, #-24]	; 0xffffffe8
    fc84:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fc88:	bl	0 <flatcc_json_parser_match_constant>
    fc8c:	str	r0, [fp, #-36]	; 0xffffffdc
    fc90:	ldr	r2, [fp, #-36]	; 0xffffffdc
    fc94:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fc98:	cmp	r2, r3
    fc9c:	beq	fcc0 <Fantasy_Character_parse_json_enum+0x1fc>
    fca0:	ldr	r1, [fp, #4]
    fca4:	mov	r2, #10
    fca8:	mov	r3, #0
    fcac:	strd	r2, [r1]
    fcb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fcb4:	mov	r2, #0
    fcb8:	str	r2, [r3]
    fcbc:	b	ff7c <Fantasy_Character_parse_json_enum+0x4b8>
    fcc0:	ldr	r3, [fp, #-8]
    fcc4:	b	ff80 <Fantasy_Character_parse_json_enum+0x4bc>
    fcc8:	ldr	r3, [fp, #-8]
    fccc:	b	ff80 <Fantasy_Character_parse_json_enum+0x4bc>
    fcd0:	ldrd	r2, [fp, #-20]	; 0xffffffec
    fcd4:	add	r1, pc, #500	; 0x1f4
    fcd8:	ldrd	r0, [r1]
    fcdc:	cmp	r3, r1
    fce0:	cmpeq	r2, r0
    fce4:	bhi	fd78 <Fantasy_Character_parse_json_enum+0x2b4>
    fce8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    fcec:	mov	r0, #0
    fcf0:	mvn	r1, #0
    fcf4:	and	r2, r2, r0
    fcf8:	and	r3, r3, r1
    fcfc:	add	r1, pc, #468	; 0x1d4
    fd00:	ldrd	r0, [r1]
    fd04:	cmp	r3, r1
    fd08:	cmpeq	r2, r0
    fd0c:	bne	fd70 <Fantasy_Character_parse_json_enum+0x2ac>
    fd10:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fd14:	str	r3, [fp, #-24]	; 0xffffffe8
    fd18:	ldr	r3, [fp, #8]
    fd1c:	str	r3, [sp]
    fd20:	mov	r3, #4
    fd24:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fd28:	ldr	r1, [fp, #-24]	; 0xffffffe8
    fd2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fd30:	bl	0 <flatcc_json_parser_match_constant>
    fd34:	str	r0, [fp, #-36]	; 0xffffffdc
    fd38:	ldr	r2, [fp, #-36]	; 0xffffffdc
    fd3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fd40:	cmp	r2, r3
    fd44:	beq	fd68 <Fantasy_Character_parse_json_enum+0x2a4>
    fd48:	ldr	r1, [fp, #4]
    fd4c:	mov	r2, #0
    fd50:	mov	r3, #0
    fd54:	strd	r2, [r1]
    fd58:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fd5c:	mov	r2, #0
    fd60:	str	r2, [r3]
    fd64:	b	ff7c <Fantasy_Character_parse_json_enum+0x4b8>
    fd68:	ldr	r3, [fp, #-8]
    fd6c:	b	ff80 <Fantasy_Character_parse_json_enum+0x4bc>
    fd70:	ldr	r3, [fp, #-8]
    fd74:	b	ff80 <Fantasy_Character_parse_json_enum+0x4bc>
    fd78:	ldrd	r2, [fp, #-20]	; 0xffffffec
    fd7c:	add	r1, pc, #348	; 0x15c
    fd80:	ldrd	r0, [r1]
    fd84:	cmp	r3, r1
    fd88:	cmpeq	r2, r0
    fd8c:	bhi	fe20 <Fantasy_Character_parse_json_enum+0x35c>
    fd90:	ldrd	r2, [fp, #-20]	; 0xffffffec
    fd94:	mov	r0, #-16777216	; 0xff000000
    fd98:	mvn	r1, #0
    fd9c:	and	r2, r2, r0
    fda0:	and	r3, r3, r1
    fda4:	add	r1, pc, #316	; 0x13c
    fda8:	ldrd	r0, [r1]
    fdac:	cmp	r3, r1
    fdb0:	cmpeq	r2, r0
    fdb4:	bne	fe18 <Fantasy_Character_parse_json_enum+0x354>
    fdb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fdbc:	str	r3, [fp, #-24]	; 0xffffffe8
    fdc0:	ldr	r3, [fp, #8]
    fdc4:	str	r3, [sp]
    fdc8:	mov	r3, #5
    fdcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fdd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    fdd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fdd8:	bl	0 <flatcc_json_parser_match_constant>
    fddc:	str	r0, [fp, #-36]	; 0xffffffdc
    fde0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    fde4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fde8:	cmp	r2, r3
    fdec:	beq	fe10 <Fantasy_Character_parse_json_enum+0x34c>
    fdf0:	ldr	r1, [fp, #4]
    fdf4:	mov	r2, #11
    fdf8:	mov	r3, #0
    fdfc:	strd	r2, [r1]
    fe00:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fe04:	mov	r2, #0
    fe08:	str	r2, [r3]
    fe0c:	b	ff7c <Fantasy_Character_parse_json_enum+0x4b8>
    fe10:	ldr	r3, [fp, #-8]
    fe14:	b	ff80 <Fantasy_Character_parse_json_enum+0x4bc>
    fe18:	ldr	r3, [fp, #-8]
    fe1c:	b	ff80 <Fantasy_Character_parse_json_enum+0x4bc>
    fe20:	ldrd	r2, [fp, #-20]	; 0xffffffec
    fe24:	ldr	r0, [pc, #204]	; fef8 <Fantasy_Character_parse_json_enum+0x434>
    fe28:	mvn	r1, #0
    fe2c:	and	r2, r2, r0
    fe30:	and	r3, r3, r1
    fe34:	add	r1, pc, #180	; 0xb4
    fe38:	ldrd	r0, [r1]
    fe3c:	cmp	r3, r1
    fe40:	cmpeq	r2, r0
    fe44:	bne	fefc <Fantasy_Character_parse_json_enum+0x438>
    fe48:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fe4c:	str	r3, [fp, #-24]	; 0xffffffe8
    fe50:	ldr	r3, [fp, #8]
    fe54:	str	r3, [sp]
    fe58:	mov	r3, #6
    fe5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fe60:	ldr	r1, [fp, #-24]	; 0xffffffe8
    fe64:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fe68:	bl	0 <flatcc_json_parser_match_constant>
    fe6c:	str	r0, [fp, #-36]	; 0xffffffdc
    fe70:	ldr	r2, [fp, #-36]	; 0xffffffdc
    fe74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fe78:	cmp	r2, r3
    fe7c:	beq	fea0 <Fantasy_Character_parse_json_enum+0x3dc>
    fe80:	ldr	r1, [fp, #4]
    fe84:	mov	r2, #255	; 0xff
    fe88:	mov	r3, #0
    fe8c:	strd	r2, [r1]
    fe90:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fe94:	mov	r2, #0
    fe98:	str	r2, [r3]
    fe9c:	b	ff7c <Fantasy_Character_parse_json_enum+0x4b8>
    fea0:	ldr	r3, [fp, #-8]
    fea4:	b	ff80 <Fantasy_Character_parse_json_enum+0x4bc>
    fea8:	.word	0xffffffff
    feac:	.word	0x4e4f4e44
    feb0:	.word	0x46616dff
    feb4:	.word	0x426f6f6b
    feb8:	.word	0x65000000
    febc:	.word	0x42656c6c
    fec0:	.word	0x6e000000
    fec4:	.word	0x4d754c61
    fec8:	.word	0x46616e00
    fecc:	.word	0x426f6f6b
    fed0:	.word	0x71ffffff
    fed4:	.word	0x4f746865
    fed8:	.word	0x00000000
    fedc:	.word	0x4e4f4e45
    fee0:	.word	0x6e7a656b
    fee4:	.word	0x52617075
    fee8:	.word	0x72000000
    feec:	.word	0x4f746865
    fef0:	.word	0x65640000
    fef4:	.word	0x556e7573
    fef8:	.word	0xffff0000
    fefc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    ff00:	add	r1, pc, #136	; 0x88
    ff04:	ldrd	r0, [r1]
    ff08:	cmp	r3, r1
    ff0c:	cmpeq	r2, r0
    ff10:	bne	ff74 <Fantasy_Character_parse_json_enum+0x4b0>
    ff14:	ldr	r3, [fp, #-36]	; 0xffffffdc
    ff18:	str	r3, [fp, #-24]	; 0xffffffe8
    ff1c:	ldr	r3, [fp, #8]
    ff20:	str	r3, [sp]
    ff24:	mov	r3, #8
    ff28:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ff2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    ff30:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ff34:	bl	0 <flatcc_json_parser_match_constant>
    ff38:	str	r0, [fp, #-36]	; 0xffffffdc
    ff3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    ff40:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ff44:	cmp	r2, r3
    ff48:	beq	ff6c <Fantasy_Character_parse_json_enum+0x4a8>
    ff4c:	ldr	r1, [fp, #4]
    ff50:	mov	r2, #8
    ff54:	mov	r3, #0
    ff58:	strd	r2, [r1]
    ff5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ff60:	mov	r2, #0
    ff64:	str	r2, [r3]
    ff68:	b	ff7c <Fantasy_Character_parse_json_enum+0x4b8>
    ff6c:	ldr	r3, [fp, #-8]
    ff70:	b	ff80 <Fantasy_Character_parse_json_enum+0x4bc>
    ff74:	ldr	r3, [fp, #-8]
    ff78:	b	ff80 <Fantasy_Character_parse_json_enum+0x4bc>
    ff7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    ff80:	mov	r0, r3
    ff84:	sub	sp, fp, #4
    ff88:	pop	{fp, pc}
    ff8c:	nop			; (mov r0, r0)
    ff90:	.word	0x6e7a656c
    ff94:	.word	0x52617075

0000ff98 <Fantasy_Movie_parse_json_table>:
    ff98:	push	{fp, lr}
    ff9c:	add	fp, sp, #4
    ffa0:	sub	sp, sp, #64	; 0x40
    ffa4:	str	r0, [fp, #-32]	; 0xffffffe0
    ffa8:	str	r1, [fp, #-36]	; 0xffffffdc
    ffac:	str	r2, [fp, #-40]	; 0xffffffd8
    ffb0:	str	r3, [fp, #-44]	; 0xffffffd4
    ffb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ffb8:	mov	r2, #0
    ffbc:	str	r2, [r3]
    ffc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ffc4:	ldr	r3, [r3]
    ffc8:	mov	r1, #10
    ffcc:	mov	r0, r3
    ffd0:	bl	0 <flatcc_builder_start_table>
    ffd4:	mov	r3, r0
    ffd8:	cmp	r3, #0
    ffdc:	bne	10a30 <Fantasy_Movie_parse_json_table+0xa98>
    ffe0:	sub	r3, fp, #24
    ffe4:	str	r3, [sp]
    ffe8:	mov	r3, #5
    ffec:	ldr	r2, [fp, #-40]	; 0xffffffd8
    fff0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    fff4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fff8:	bl	0 <flatcc_json_parser_prepare_unions>
    fffc:	mov	r2, r0
   10000:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10004:	cmp	r2, r3
   10008:	beq	10a38 <Fantasy_Movie_parse_json_table+0xaa0>
   1000c:	sub	r3, fp, #20
   10010:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10014:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10018:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1001c:	bl	980 <flatcc_json_parser_object_start>
   10020:	str	r0, [fp, #-36]	; 0xffffffdc
   10024:	b	109c8 <Fantasy_Movie_parse_json_table+0xa30>
   10028:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1002c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10030:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10034:	bl	570 <flatcc_json_parser_symbol_start>
   10038:	str	r0, [fp, #-36]	; 0xffffffdc
   1003c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10040:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10044:	bl	854 <flatcc_json_parser_symbol_part>
   10048:	strd	r0, [fp, #-12]
   1004c:	ldrd	r2, [fp, #-12]
   10050:	add	r1, pc, #864	; 0x360
   10054:	ldrd	r0, [r1]
   10058:	cmp	r3, r1
   1005c:	cmpeq	r2, r0
   10060:	bhi	103f8 <Fantasy_Movie_parse_json_table+0x460>
   10064:	ldrd	r2, [fp, #-12]
   10068:	add	r1, pc, #848	; 0x350
   1006c:	ldrd	r0, [r1]
   10070:	cmp	r3, r1
   10074:	cmpeq	r2, r0
   10078:	bne	10200 <Fantasy_Movie_parse_json_table+0x268>
   1007c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10080:	add	r3, r3, #8
   10084:	str	r3, [fp, #-36]	; 0xffffffdc
   10088:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1008c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10090:	bl	854 <flatcc_json_parser_symbol_part>
   10094:	strd	r0, [fp, #-12]
   10098:	ldrd	r2, [fp, #-12]
   1009c:	mvn	r0, #255	; 0xff
   100a0:	mvn	r1, #0
   100a4:	and	r2, r2, r0
   100a8:	and	r3, r3, r1
   100ac:	add	r1, pc, #788	; 0x314
   100b0:	ldrd	r0, [r1]
   100b4:	cmp	r3, r1
   100b8:	cmpeq	r2, r0
   100bc:	bne	10144 <Fantasy_Movie_parse_json_table+0x1ac>
   100c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   100c4:	str	r3, [fp, #-16]
   100c8:	mov	r3, #7
   100cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   100d0:	ldr	r1, [fp, #-16]
   100d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   100d8:	bl	e20 <flatcc_json_parser_match_symbol>
   100dc:	str	r0, [fp, #-36]	; 0xffffffdc
   100e0:	ldr	r2, [fp, #-16]
   100e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   100e8:	cmp	r2, r3
   100ec:	beq	1012c <Fantasy_Movie_parse_json_table+0x194>
   100f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   100f4:	ldr	r2, [pc, #740]	; 103e0 <Fantasy_Movie_parse_json_table+0x448>
   100f8:	str	r2, [sp, #12]
   100fc:	ldr	r2, [pc, #736]	; 103e4 <Fantasy_Movie_parse_json_table+0x44c>
   10100:	str	r2, [sp, #8]
   10104:	str	r3, [sp, #4]
   10108:	mov	r3, #3
   1010c:	str	r3, [sp]
   10110:	mov	r3, #1
   10114:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10118:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1011c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10120:	bl	0 <flatcc_json_parser_union_type>
   10124:	str	r0, [fp, #-36]	; 0xffffffdc
   10128:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   1012c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10130:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10134:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10138:	bl	0 <flatcc_json_parser_unmatched_symbol>
   1013c:	str	r0, [fp, #-36]	; 0xffffffdc
   10140:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   10144:	ldrd	r2, [fp, #-12]
   10148:	mov	r0, #0
   1014c:	ldr	r1, [pc, #660]	; 103e8 <Fantasy_Movie_parse_json_table+0x450>
   10150:	and	r2, r2, r0
   10154:	and	r3, r3, r1
   10158:	mov	r0, #0
   1015c:	ldr	r1, [pc, #648]	; 103ec <Fantasy_Movie_parse_json_table+0x454>
   10160:	cmp	r3, r1
   10164:	cmpeq	r2, r0
   10168:	bne	101e8 <Fantasy_Movie_parse_json_table+0x250>
   1016c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10170:	str	r3, [fp, #-16]
   10174:	mov	r3, #2
   10178:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1017c:	ldr	r1, [fp, #-16]
   10180:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10184:	bl	e20 <flatcc_json_parser_match_symbol>
   10188:	str	r0, [fp, #-36]	; 0xffffffdc
   1018c:	ldr	r2, [fp, #-16]
   10190:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10194:	cmp	r2, r3
   10198:	beq	101d0 <Fantasy_Movie_parse_json_table+0x238>
   1019c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   101a0:	ldr	r2, [pc, #568]	; 103e0 <Fantasy_Movie_parse_json_table+0x448>
   101a4:	str	r2, [sp, #8]
   101a8:	str	r3, [sp, #4]
   101ac:	mov	r3, #3
   101b0:	str	r3, [sp]
   101b4:	mov	r3, #1
   101b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   101bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   101c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   101c4:	bl	0 <flatcc_json_parser_union>
   101c8:	str	r0, [fp, #-36]	; 0xffffffdc
   101cc:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   101d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   101d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   101d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   101dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
   101e0:	str	r0, [fp, #-36]	; 0xffffffdc
   101e4:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   101e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   101ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   101f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   101f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
   101f8:	str	r0, [fp, #-36]	; 0xffffffdc
   101fc:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   10200:	ldrd	r2, [fp, #-12]
   10204:	add	r1, pc, #452	; 0x1c4
   10208:	ldrd	r0, [r1]
   1020c:	cmp	r3, r1
   10210:	cmpeq	r2, r0
   10214:	bne	102f8 <Fantasy_Movie_parse_json_table+0x360>
   10218:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1021c:	add	r3, r3, #8
   10220:	str	r3, [fp, #-36]	; 0xffffffdc
   10224:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10228:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1022c:	bl	854 <flatcc_json_parser_symbol_part>
   10230:	strd	r0, [fp, #-12]
   10234:	ldrd	r2, [fp, #-12]
   10238:	mov	r0, #0
   1023c:	ldr	r1, [pc, #420]	; 103e8 <Fantasy_Movie_parse_json_table+0x450>
   10240:	and	r2, r2, r0
   10244:	and	r3, r3, r1
   10248:	mov	r0, #0
   1024c:	ldr	r1, [pc, #412]	; 103f0 <Fantasy_Movie_parse_json_table+0x458>
   10250:	cmp	r3, r1
   10254:	cmpeq	r2, r0
   10258:	bne	102e0 <Fantasy_Movie_parse_json_table+0x348>
   1025c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10260:	str	r3, [fp, #-16]
   10264:	mov	r3, #2
   10268:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1026c:	ldr	r1, [fp, #-16]
   10270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10274:	bl	e20 <flatcc_json_parser_match_symbol>
   10278:	str	r0, [fp, #-36]	; 0xffffffdc
   1027c:	ldr	r2, [fp, #-16]
   10280:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10284:	cmp	r2, r3
   10288:	beq	102c8 <Fantasy_Movie_parse_json_table+0x330>
   1028c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10290:	ldr	r2, [pc, #328]	; 103e0 <Fantasy_Movie_parse_json_table+0x448>
   10294:	str	r2, [sp, #12]
   10298:	ldr	r2, [pc, #340]	; 103f4 <Fantasy_Movie_parse_json_table+0x45c>
   1029c:	str	r2, [sp, #8]
   102a0:	str	r3, [sp, #4]
   102a4:	mov	r3, #7
   102a8:	str	r3, [sp]
   102ac:	mov	r3, #3
   102b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   102b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   102b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   102bc:	bl	0 <flatcc_json_parser_union_type>
   102c0:	str	r0, [fp, #-36]	; 0xffffffdc
   102c4:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   102c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   102cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   102d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   102d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
   102d8:	str	r0, [fp, #-36]	; 0xffffffdc
   102dc:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   102e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   102e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   102e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   102ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
   102f0:	str	r0, [fp, #-36]	; 0xffffffdc
   102f4:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   102f8:	ldrd	r2, [fp, #-12]
   102fc:	mov	r0, #-16777216	; 0xff000000
   10300:	mvn	r1, #0
   10304:	and	r2, r2, r0
   10308:	and	r3, r3, r1
   1030c:	add	r1, pc, #196	; 0xc4
   10310:	ldrd	r0, [r1]
   10314:	cmp	r3, r1
   10318:	cmpeq	r2, r0
   1031c:	bne	1039c <Fantasy_Movie_parse_json_table+0x404>
   10320:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10324:	str	r3, [fp, #-16]
   10328:	mov	r3, #5
   1032c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10330:	ldr	r1, [fp, #-16]
   10334:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10338:	bl	e20 <flatcc_json_parser_match_symbol>
   1033c:	str	r0, [fp, #-36]	; 0xffffffdc
   10340:	ldr	r2, [fp, #-16]
   10344:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10348:	cmp	r2, r3
   1034c:	beq	10384 <Fantasy_Movie_parse_json_table+0x3ec>
   10350:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10354:	ldr	r2, [pc, #132]	; 103e0 <Fantasy_Movie_parse_json_table+0x448>
   10358:	str	r2, [sp, #8]
   1035c:	str	r3, [sp, #4]
   10360:	mov	r3, #7
   10364:	str	r3, [sp]
   10368:	mov	r3, #3
   1036c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10370:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10374:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10378:	bl	0 <flatcc_json_parser_union>
   1037c:	str	r0, [fp, #-36]	; 0xffffffdc
   10380:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   10384:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10388:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1038c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10390:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10394:	str	r0, [fp, #-36]	; 0xffffffdc
   10398:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   1039c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   103a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   103a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   103a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   103ac:	str	r0, [fp, #-36]	; 0xffffffdc
   103b0:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   103b4:	nop			; (mov r0, r0)
   103b8:	.word	0x61637464
   103bc:	.word	0x63686172
   103c0:	.word	0x676f6e69
   103c4:	.word	0x616e7461
   103c8:	.word	0x79706500
   103cc:	.word	0x73745f74
   103d0:	.word	0x6f5f7479
   103d4:	.word	0x63616d65
   103d8:	.word	0x6f000000
   103dc:	.word	0x63616d65
   103e0:	.word	0x00000000
   103e4:	.word	0x0000035c
   103e8:	.word	0xffff0000
   103ec:	.word	0x73740000
   103f0:	.word	0x70650000
   103f4:	.word	0x0000036c
   103f8:	ldrd	r2, [fp, #-12]
   103fc:	add	r1, pc, #948	; 0x3b4
   10400:	ldrd	r0, [r1]
   10404:	cmp	r3, r1
   10408:	cmpeq	r2, r0
   1040c:	bhi	105cc <Fantasy_Movie_parse_json_table+0x634>
   10410:	ldrd	r2, [fp, #-12]
   10414:	add	r1, pc, #932	; 0x3a4
   10418:	ldrd	r0, [r1]
   1041c:	cmp	r3, r1
   10420:	cmpeq	r2, r0
   10424:	bne	105b4 <Fantasy_Movie_parse_json_table+0x61c>
   10428:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1042c:	add	r3, r3, #8
   10430:	str	r3, [fp, #-36]	; 0xffffffdc
   10434:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10438:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1043c:	bl	854 <flatcc_json_parser_symbol_part>
   10440:	strd	r0, [fp, #-12]
   10444:	ldrd	r2, [fp, #-12]
   10448:	mvn	r0, #255	; 0xff
   1044c:	mvn	r1, #0
   10450:	and	r2, r2, r0
   10454:	and	r3, r3, r1
   10458:	add	r1, pc, #872	; 0x368
   1045c:	ldrd	r0, [r1]
   10460:	cmp	r3, r1
   10464:	cmpeq	r2, r0
   10468:	bne	104f8 <Fantasy_Movie_parse_json_table+0x560>
   1046c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10470:	str	r3, [fp, #-16]
   10474:	mov	r3, #7
   10478:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1047c:	ldr	r1, [fp, #-16]
   10480:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10484:	bl	e20 <flatcc_json_parser_match_symbol>
   10488:	str	r0, [fp, #-36]	; 0xffffffdc
   1048c:	ldr	r2, [fp, #-16]
   10490:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10494:	cmp	r2, r3
   10498:	beq	104e0 <Fantasy_Movie_parse_json_table+0x548>
   1049c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   104a0:	ldr	r2, [pc, #840]	; 107f0 <Fantasy_Movie_parse_json_table+0x858>
   104a4:	str	r2, [sp, #16]
   104a8:	ldr	r2, [pc, #836]	; 107f4 <Fantasy_Movie_parse_json_table+0x85c>
   104ac:	str	r2, [sp, #12]
   104b0:	ldr	r2, [pc, #832]	; 107f8 <Fantasy_Movie_parse_json_table+0x860>
   104b4:	str	r2, [sp, #8]
   104b8:	str	r3, [sp, #4]
   104bc:	mov	r3, #9
   104c0:	str	r3, [sp]
   104c4:	mov	r3, #4
   104c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   104cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   104d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   104d4:	bl	0 <flatcc_json_parser_union_type_vector>
   104d8:	str	r0, [fp, #-36]	; 0xffffffdc
   104dc:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   104e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   104e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   104e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   104ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
   104f0:	str	r0, [fp, #-36]	; 0xffffffdc
   104f4:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   104f8:	ldrd	r2, [fp, #-12]
   104fc:	mov	r0, #0
   10500:	ldr	r1, [pc, #756]	; 107fc <Fantasy_Movie_parse_json_table+0x864>
   10504:	and	r2, r2, r0
   10508:	and	r3, r3, r1
   1050c:	mov	r0, #0
   10510:	ldr	r1, [pc, #744]	; 10800 <Fantasy_Movie_parse_json_table+0x868>
   10514:	cmp	r3, r1
   10518:	cmpeq	r2, r0
   1051c:	bne	1059c <Fantasy_Movie_parse_json_table+0x604>
   10520:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10524:	str	r3, [fp, #-16]
   10528:	mov	r3, #2
   1052c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10530:	ldr	r1, [fp, #-16]
   10534:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10538:	bl	e20 <flatcc_json_parser_match_symbol>
   1053c:	str	r0, [fp, #-36]	; 0xffffffdc
   10540:	ldr	r2, [fp, #-16]
   10544:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10548:	cmp	r2, r3
   1054c:	beq	10584 <Fantasy_Movie_parse_json_table+0x5ec>
   10550:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10554:	ldr	r2, [pc, #664]	; 107f4 <Fantasy_Movie_parse_json_table+0x85c>
   10558:	str	r2, [sp, #8]
   1055c:	str	r3, [sp, #4]
   10560:	mov	r3, #9
   10564:	str	r3, [sp]
   10568:	mov	r3, #4
   1056c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10570:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10574:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10578:	bl	0 <flatcc_json_parser_union_vector>
   1057c:	str	r0, [fp, #-36]	; 0xffffffdc
   10580:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   10584:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10588:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1058c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10590:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10594:	str	r0, [fp, #-36]	; 0xffffffdc
   10598:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   1059c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   105a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   105a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   105a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   105ac:	str	r0, [fp, #-36]	; 0xffffffdc
   105b0:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   105b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   105b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   105bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   105c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
   105c4:	str	r0, [fp, #-36]	; 0xffffffdc
   105c8:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   105cc:	ldrd	r2, [fp, #-12]
   105d0:	add	r1, pc, #504	; 0x1f8
   105d4:	ldrd	r0, [r1]
   105d8:	cmp	r3, r1
   105dc:	cmpeq	r2, r0
   105e0:	bne	10808 <Fantasy_Movie_parse_json_table+0x870>
   105e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   105e8:	add	r3, r3, #8
   105ec:	str	r3, [fp, #-36]	; 0xffffffdc
   105f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   105f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   105f8:	bl	854 <flatcc_json_parser_symbol_part>
   105fc:	strd	r0, [fp, #-12]
   10600:	ldrd	r2, [fp, #-12]
   10604:	add	r1, pc, #460	; 0x1cc
   10608:	ldrd	r0, [r1]
   1060c:	cmp	r3, r1
   10610:	cmpeq	r2, r0
   10614:	bne	106f8 <Fantasy_Movie_parse_json_table+0x760>
   10618:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1061c:	add	r3, r3, #8
   10620:	str	r3, [fp, #-36]	; 0xffffffdc
   10624:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10628:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1062c:	bl	854 <flatcc_json_parser_symbol_part>
   10630:	strd	r0, [fp, #-12]
   10634:	ldrd	r2, [fp, #-12]
   10638:	mov	r0, #0
   1063c:	mvn	r1, #255	; 0xff
   10640:	and	r2, r2, r0
   10644:	and	r3, r3, r1
   10648:	add	r1, pc, #400	; 0x190
   1064c:	ldrd	r0, [r1]
   10650:	cmp	r3, r1
   10654:	cmpeq	r2, r0
   10658:	bne	106e0 <Fantasy_Movie_parse_json_table+0x748>
   1065c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10660:	str	r3, [fp, #-16]
   10664:	mov	r3, #3
   10668:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1066c:	ldr	r1, [fp, #-16]
   10670:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10674:	bl	e20 <flatcc_json_parser_match_symbol>
   10678:	str	r0, [fp, #-36]	; 0xffffffdc
   1067c:	ldr	r2, [fp, #-16]
   10680:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10684:	cmp	r2, r3
   10688:	beq	106c8 <Fantasy_Movie_parse_json_table+0x730>
   1068c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10690:	ldr	r2, [pc, #348]	; 107f4 <Fantasy_Movie_parse_json_table+0x85c>
   10694:	str	r2, [sp, #12]
   10698:	ldr	r2, [pc, #356]	; 10804 <Fantasy_Movie_parse_json_table+0x86c>
   1069c:	str	r2, [sp, #8]
   106a0:	str	r3, [sp, #4]
   106a4:	mov	r3, #1
   106a8:	str	r3, [sp]
   106ac:	mov	r3, #0
   106b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   106b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   106b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   106bc:	bl	0 <flatcc_json_parser_union_type>
   106c0:	str	r0, [fp, #-36]	; 0xffffffdc
   106c4:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   106c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   106cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   106d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   106d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
   106d8:	str	r0, [fp, #-36]	; 0xffffffdc
   106dc:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   106e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   106e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   106e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   106ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
   106f0:	str	r0, [fp, #-36]	; 0xffffffdc
   106f4:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   106f8:	ldrd	r2, [fp, #-12]
   106fc:	ldr	r0, [pc, #248]	; 107fc <Fantasy_Movie_parse_json_table+0x864>
   10700:	mvn	r1, #0
   10704:	and	r2, r2, r0
   10708:	and	r3, r3, r1
   1070c:	add	r1, pc, #212	; 0xd4
   10710:	ldrd	r0, [r1]
   10714:	cmp	r3, r1
   10718:	cmpeq	r2, r0
   1071c:	bne	1079c <Fantasy_Movie_parse_json_table+0x804>
   10720:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10724:	str	r3, [fp, #-16]
   10728:	mov	r3, #6
   1072c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10730:	ldr	r1, [fp, #-16]
   10734:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10738:	bl	e20 <flatcc_json_parser_match_symbol>
   1073c:	str	r0, [fp, #-36]	; 0xffffffdc
   10740:	ldr	r2, [fp, #-16]
   10744:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10748:	cmp	r2, r3
   1074c:	beq	10784 <Fantasy_Movie_parse_json_table+0x7ec>
   10750:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10754:	ldr	r2, [pc, #152]	; 107f4 <Fantasy_Movie_parse_json_table+0x85c>
   10758:	str	r2, [sp, #8]
   1075c:	str	r3, [sp, #4]
   10760:	mov	r3, #1
   10764:	str	r3, [sp]
   10768:	mov	r3, #0
   1076c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10770:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10774:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10778:	bl	0 <flatcc_json_parser_union>
   1077c:	str	r0, [fp, #-36]	; 0xffffffdc
   10780:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   10784:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10788:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1078c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10790:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10794:	str	r0, [fp, #-36]	; 0xffffffdc
   10798:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   1079c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   107a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   107a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   107a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   107ac:	str	r0, [fp, #-36]	; 0xffffffdc
   107b0:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   107b4:	nop			; (mov r0, r0)
   107b8:	.word	0x5f636860
   107bc:	.word	0x6d61696e
   107c0:	.word	0x61637465
   107c4:	.word	0x63686172
   107c8:	.word	0x79706500
   107cc:	.word	0x72735f74
   107d0:	.word	0x5f636861
   107d4:	.word	0x6d61696e
   107d8:	.word	0x65725f74
   107dc:	.word	0x72616374
   107e0:	.word	0x00000000
   107e4:	.word	0x79706500
   107e8:	.word	0x65720000
   107ec:	.word	0x72616374
	...
   107f8:	.word	0x0000037c
   107fc:	.word	0xffff0000
   10800:	.word	0x72730000
   10804:	.word	0x0000038c
   10808:	ldrd	r2, [fp, #-12]
   1080c:	add	r1, pc, #604	; 0x25c
   10810:	ldrd	r0, [r1]
   10814:	cmp	r3, r1
   10818:	cmpeq	r2, r0
   1081c:	bne	1099c <Fantasy_Movie_parse_json_table+0xa04>
   10820:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10824:	add	r3, r3, #8
   10828:	str	r3, [fp, #-36]	; 0xffffffdc
   1082c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10830:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10834:	bl	854 <flatcc_json_parser_symbol_part>
   10838:	strd	r0, [fp, #-12]
   1083c:	ldrd	r2, [fp, #-12]
   10840:	ldr	r0, [pc, #568]	; 10a80 <Fantasy_Movie_parse_json_table+0xae8>
   10844:	mvn	r1, #0
   10848:	and	r2, r2, r0
   1084c:	and	r3, r3, r1
   10850:	add	r1, pc, #544	; 0x220
   10854:	ldrd	r0, [r1]
   10858:	cmp	r3, r1
   1085c:	cmpeq	r2, r0
   10860:	bne	108e8 <Fantasy_Movie_parse_json_table+0x950>
   10864:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10868:	str	r3, [fp, #-16]
   1086c:	mov	r3, #6
   10870:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10874:	ldr	r1, [fp, #-16]
   10878:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1087c:	bl	e20 <flatcc_json_parser_match_symbol>
   10880:	str	r0, [fp, #-36]	; 0xffffffdc
   10884:	ldr	r2, [fp, #-16]
   10888:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1088c:	cmp	r2, r3
   10890:	beq	108d0 <Fantasy_Movie_parse_json_table+0x938>
   10894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10898:	ldr	r2, [pc, #484]	; 10a84 <Fantasy_Movie_parse_json_table+0xaec>
   1089c:	str	r2, [sp, #12]
   108a0:	ldr	r2, [pc, #480]	; 10a88 <Fantasy_Movie_parse_json_table+0xaf0>
   108a4:	str	r2, [sp, #8]
   108a8:	str	r3, [sp, #4]
   108ac:	mov	r3, #5
   108b0:	str	r3, [sp]
   108b4:	mov	r3, #2
   108b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   108bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   108c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   108c4:	bl	0 <flatcc_json_parser_union_type>
   108c8:	str	r0, [fp, #-36]	; 0xffffffdc
   108cc:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   108d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   108d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   108d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   108dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
   108e0:	str	r0, [fp, #-36]	; 0xffffffdc
   108e4:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   108e8:	ldrd	r2, [fp, #-12]
   108ec:	mov	r0, #0
   108f0:	mov	r1, #-16777216	; 0xff000000
   108f4:	and	r2, r2, r0
   108f8:	and	r3, r3, r1
   108fc:	cmp	r3, #1795162112	; 0x6b000000
   10900:	cmpeq	r2, #0
   10904:	bne	10984 <Fantasy_Movie_parse_json_table+0x9ec>
   10908:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1090c:	str	r3, [fp, #-16]
   10910:	mov	r3, #1
   10914:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10918:	ldr	r1, [fp, #-16]
   1091c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10920:	bl	e20 <flatcc_json_parser_match_symbol>
   10924:	str	r0, [fp, #-36]	; 0xffffffdc
   10928:	ldr	r2, [fp, #-16]
   1092c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10930:	cmp	r2, r3
   10934:	beq	1096c <Fantasy_Movie_parse_json_table+0x9d4>
   10938:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1093c:	ldr	r2, [pc, #320]	; 10a84 <Fantasy_Movie_parse_json_table+0xaec>
   10940:	str	r2, [sp, #8]
   10944:	str	r3, [sp, #4]
   10948:	mov	r3, #5
   1094c:	str	r3, [sp]
   10950:	mov	r3, #2
   10954:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10958:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1095c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10960:	bl	0 <flatcc_json_parser_union>
   10964:	str	r0, [fp, #-36]	; 0xffffffdc
   10968:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   1096c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10970:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10974:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10978:	bl	0 <flatcc_json_parser_unmatched_symbol>
   1097c:	str	r0, [fp, #-36]	; 0xffffffdc
   10980:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   10984:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10988:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1098c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10990:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10994:	str	r0, [fp, #-36]	; 0xffffffdc
   10998:	b	109b0 <Fantasy_Movie_parse_json_table+0xa18>
   1099c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   109a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   109a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   109a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   109ac:	str	r0, [fp, #-36]	; 0xffffffdc
   109b0:	sub	r3, fp, #20
   109b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   109b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   109bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   109c0:	bl	a68 <flatcc_json_parser_object_end>
   109c4:	str	r0, [fp, #-36]	; 0xffffffdc
   109c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   109cc:	cmp	r3, #0
   109d0:	bne	10028 <Fantasy_Movie_parse_json_table+0x90>
   109d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   109d8:	ldr	r3, [r3, #24]
   109dc:	cmp	r3, #0
   109e0:	bne	10a40 <Fantasy_Movie_parse_json_table+0xaa8>
   109e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   109e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   109ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   109f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   109f4:	bl	0 <flatcc_json_parser_finalize_unions>
   109f8:	str	r0, [fp, #-36]	; 0xffffffdc
   109fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10a00:	ldr	r3, [r3]
   10a04:	mov	r0, r3
   10a08:	bl	0 <flatcc_builder_end_table>
   10a0c:	mov	r2, r0
   10a10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10a14:	str	r2, [r3]
   10a18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10a1c:	ldr	r3, [r3]
   10a20:	cmp	r3, #0
   10a24:	beq	10a48 <Fantasy_Movie_parse_json_table+0xab0>
   10a28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10a2c:	b	10a64 <Fantasy_Movie_parse_json_table+0xacc>
   10a30:	nop			; (mov r0, r0)
   10a34:	b	10a4c <Fantasy_Movie_parse_json_table+0xab4>
   10a38:	nop			; (mov r0, r0)
   10a3c:	b	10a4c <Fantasy_Movie_parse_json_table+0xab4>
   10a40:	nop			; (mov r0, r0)
   10a44:	b	10a4c <Fantasy_Movie_parse_json_table+0xab4>
   10a48:	nop			; (mov r0, r0)
   10a4c:	mov	r3, #33	; 0x21
   10a50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10a54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10a58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10a5c:	bl	0 <flatcc_json_parser_set_error>
   10a60:	mov	r3, r0
   10a64:	mov	r0, r3
   10a68:	sub	sp, fp, #4
   10a6c:	pop	{fp, pc}
   10a70:	.word	0x5f6b6963
   10a74:	.word	0x73696465
   10a78:	.word	0x70650000
   10a7c:	.word	0x6b5f7479
   10a80:	.word	0xffff0000
   10a84:	.word	0x00000000
   10a88:	.word	0x0000039c

00010a8c <monster_test_local_json_parser_enum>:
   10a8c:	push	{fp}		; (str fp, [sp, #-4]!)
   10a90:	add	fp, sp, #0
   10a94:	sub	sp, sp, #20
   10a98:	str	r0, [fp, #-8]
   10a9c:	str	r1, [fp, #-12]
   10aa0:	str	r2, [fp, #-16]
   10aa4:	str	r3, [fp, #-20]	; 0xffffffec
   10aa8:	ldr	r3, [fp, #-12]
   10aac:	mov	r0, r3
   10ab0:	add	sp, fp, #0
   10ab4:	pop	{fp}		; (ldr fp, [sp], #4)
   10ab8:	bx	lr

00010abc <monster_test_local_MyGame_Example_json_parser_enum>:
   10abc:	push	{fp, lr}
   10ac0:	add	fp, sp, #4
   10ac4:	sub	sp, sp, #48	; 0x30
   10ac8:	str	r0, [fp, #-32]	; 0xffffffe0
   10acc:	str	r1, [fp, #-36]	; 0xffffffdc
   10ad0:	str	r2, [fp, #-40]	; 0xffffffd8
   10ad4:	str	r3, [fp, #-44]	; 0xffffffd4
   10ad8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10adc:	str	r3, [fp, #-8]
   10ae0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10ae4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10ae8:	bl	854 <flatcc_json_parser_symbol_part>
   10aec:	strd	r0, [fp, #-20]	; 0xffffffec
   10af0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10af4:	add	r1, pc, #908	; 0x38c
   10af8:	ldrd	r0, [r1]
   10afc:	cmp	r3, r1
   10b00:	cmpeq	r2, r0
   10b04:	bhi	10cd4 <monster_test_local_MyGame_Example_json_parser_enum+0x218>
   10b08:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10b0c:	add	r1, pc, #892	; 0x37c
   10b10:	ldrd	r0, [r1]
   10b14:	cmp	r3, r1
   10b18:	cmpeq	r2, r0
   10b1c:	bhi	10bb4 <monster_test_local_MyGame_Example_json_parser_enum+0xf8>
   10b20:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10b24:	mov	r0, #0
   10b28:	mvn	r1, #255	; 0xff
   10b2c:	and	r2, r2, r0
   10b30:	and	r3, r3, r1
   10b34:	add	r1, pc, #860	; 0x35c
   10b38:	ldrd	r0, [r1]
   10b3c:	cmp	r3, r1
   10b40:	cmpeq	r2, r0
   10b44:	bne	10bac <monster_test_local_MyGame_Example_json_parser_enum+0xf0>
   10b48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10b4c:	str	r3, [fp, #-24]	; 0xffffffe8
   10b50:	mov	r3, #3
   10b54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10b58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10b5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10b60:	bl	89c <flatcc_json_parser_match_scope>
   10b64:	str	r0, [fp, #-36]	; 0xffffffdc
   10b68:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10b6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10b70:	cmp	r2, r3
   10b74:	beq	10ba4 <monster_test_local_MyGame_Example_json_parser_enum+0xe8>
   10b78:	ldr	r3, [fp, #8]
   10b7c:	str	r3, [sp, #4]
   10b80:	ldr	r3, [fp, #4]
   10b84:	str	r3, [sp]
   10b88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10b8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10b90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10b94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10b98:	bl	5054 <MyGame_Example_Any_parse_json_enum>
   10b9c:	str	r0, [fp, #-36]	; 0xffffffdc
   10ba0:	b	10fbc <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   10ba4:	ldr	r3, [fp, #-8]
   10ba8:	b	10fc0 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   10bac:	ldr	r3, [fp, #-8]
   10bb0:	b	10fc0 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   10bb4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10bb8:	mov	r0, #0
   10bbc:	mvn	r1, #255	; 0xff
   10bc0:	and	r2, r2, r0
   10bc4:	and	r3, r3, r1
   10bc8:	add	r1, pc, #720	; 0x2d0
   10bcc:	ldrd	r0, [r1]
   10bd0:	cmp	r3, r1
   10bd4:	cmpeq	r2, r0
   10bd8:	bne	10c40 <monster_test_local_MyGame_Example_json_parser_enum+0x184>
   10bdc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10be0:	str	r3, [fp, #-24]	; 0xffffffe8
   10be4:	mov	r3, #3
   10be8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10bec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10bf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10bf4:	bl	89c <flatcc_json_parser_match_scope>
   10bf8:	str	r0, [fp, #-36]	; 0xffffffdc
   10bfc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10c00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c04:	cmp	r2, r3
   10c08:	beq	10c38 <monster_test_local_MyGame_Example_json_parser_enum+0x17c>
   10c0c:	ldr	r3, [fp, #8]
   10c10:	str	r3, [sp, #4]
   10c14:	ldr	r3, [fp, #4]
   10c18:	str	r3, [sp]
   10c1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10c20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10c24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10c28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10c2c:	bl	4328 <MyGame_Example_Foo_parse_json_enum>
   10c30:	str	r0, [fp, #-36]	; 0xffffffdc
   10c34:	b	10fbc <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   10c38:	ldr	r3, [fp, #-8]
   10c3c:	b	10fc0 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   10c40:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10c44:	mov	r0, #-16777216	; 0xff000000
   10c48:	mvn	r1, #0
   10c4c:	and	r2, r2, r0
   10c50:	and	r3, r3, r1
   10c54:	add	r1, pc, #588	; 0x24c
   10c58:	ldrd	r0, [r1]
   10c5c:	cmp	r3, r1
   10c60:	cmpeq	r2, r0
   10c64:	bne	10ccc <monster_test_local_MyGame_Example_json_parser_enum+0x210>
   10c68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10c6c:	str	r3, [fp, #-24]	; 0xffffffe8
   10c70:	mov	r3, #5
   10c74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10c78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10c7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10c80:	bl	89c <flatcc_json_parser_match_scope>
   10c84:	str	r0, [fp, #-36]	; 0xffffffdc
   10c88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10c8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c90:	cmp	r2, r3
   10c94:	beq	10cc4 <monster_test_local_MyGame_Example_json_parser_enum+0x208>
   10c98:	ldr	r3, [fp, #8]
   10c9c:	str	r3, [sp, #4]
   10ca0:	ldr	r3, [fp, #4]
   10ca4:	str	r3, [sp]
   10ca8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10cac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10cb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10cb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10cb8:	bl	4c4c <MyGame_Example_Color_parse_json_enum>
   10cbc:	str	r0, [fp, #-36]	; 0xffffffdc
   10cc0:	b	10fbc <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   10cc4:	ldr	r3, [fp, #-8]
   10cc8:	b	10fc0 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   10ccc:	ldr	r3, [fp, #-8]
   10cd0:	b	10fc0 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   10cd4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10cd8:	add	r1, pc, #464	; 0x1d0
   10cdc:	ldrd	r0, [r1]
   10ce0:	cmp	r3, r1
   10ce4:	cmpeq	r2, r0
   10ce8:	bhi	10d70 <monster_test_local_MyGame_Example_json_parser_enum+0x2b4>
   10cec:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10cf0:	add	r1, pc, #448	; 0x1c0
   10cf4:	ldrd	r0, [r1]
   10cf8:	cmp	r3, r1
   10cfc:	cmpeq	r2, r0
   10d00:	bne	10d68 <monster_test_local_MyGame_Example_json_parser_enum+0x2ac>
   10d04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10d08:	str	r3, [fp, #-24]	; 0xffffffe8
   10d0c:	mov	r3, #8
   10d10:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10d14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10d18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10d1c:	bl	89c <flatcc_json_parser_match_scope>
   10d20:	str	r0, [fp, #-36]	; 0xffffffdc
   10d24:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10d28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d2c:	cmp	r2, r3
   10d30:	beq	10d60 <monster_test_local_MyGame_Example_json_parser_enum+0x2a4>
   10d34:	ldr	r3, [fp, #8]
   10d38:	str	r3, [sp, #4]
   10d3c:	ldr	r3, [fp, #4]
   10d40:	str	r3, [sp]
   10d44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10d48:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10d4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10d50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10d54:	bl	4a1c <MyGame_Example_hex_enum_parse_json_enum>
   10d58:	str	r0, [fp, #-36]	; 0xffffffdc
   10d5c:	b	10fbc <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   10d60:	ldr	r3, [fp, #-8]
   10d64:	b	10fc0 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   10d68:	ldr	r3, [fp, #-8]
   10d6c:	b	10fc0 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   10d70:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10d74:	add	r1, pc, #324	; 0x144
   10d78:	ldrd	r0, [r1]
   10d7c:	cmp	r3, r1
   10d80:	cmpeq	r2, r0
   10d84:	bhi	10e0c <monster_test_local_MyGame_Example_json_parser_enum+0x350>
   10d88:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10d8c:	add	r1, pc, #308	; 0x134
   10d90:	ldrd	r0, [r1]
   10d94:	cmp	r3, r1
   10d98:	cmpeq	r2, r0
   10d9c:	bne	10e04 <monster_test_local_MyGame_Example_json_parser_enum+0x348>
   10da0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10da4:	str	r3, [fp, #-24]	; 0xffffffe8
   10da8:	mov	r3, #8
   10dac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10db0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10db4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10db8:	bl	89c <flatcc_json_parser_match_scope>
   10dbc:	str	r0, [fp, #-36]	; 0xffffffdc
   10dc0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10dc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10dc8:	cmp	r2, r3
   10dcc:	beq	10dfc <monster_test_local_MyGame_Example_json_parser_enum+0x340>
   10dd0:	ldr	r3, [fp, #8]
   10dd4:	str	r3, [sp, #4]
   10dd8:	ldr	r3, [fp, #4]
   10ddc:	str	r3, [sp]
   10de0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10de4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10de8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10df0:	bl	4738 <MyGame_Example_int_enum_parse_json_enum>
   10df4:	str	r0, [fp, #-36]	; 0xffffffdc
   10df8:	b	10fbc <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   10dfc:	ldr	r3, [fp, #-8]
   10e00:	b	10fc0 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   10e04:	ldr	r3, [fp, #-8]
   10e08:	b	10fc0 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   10e0c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10e10:	add	r1, pc, #184	; 0xb8
   10e14:	ldrd	r0, [r1]
   10e18:	cmp	r3, r1
   10e1c:	cmpeq	r2, r0
   10e20:	bne	10e80 <monster_test_local_MyGame_Example_json_parser_enum+0x3c4>
   10e24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10e28:	str	r3, [fp, #-24]	; 0xffffffe8
   10e2c:	mov	r3, #8
   10e30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10e34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10e3c:	bl	89c <flatcc_json_parser_match_scope>
   10e40:	str	r0, [fp, #-36]	; 0xffffffdc
   10e44:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10e48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10e4c:	cmp	r2, r3
   10e50:	beq	10ee8 <monster_test_local_MyGame_Example_json_parser_enum+0x42c>
   10e54:	ldr	r3, [fp, #8]
   10e58:	str	r3, [sp, #4]
   10e5c:	ldr	r3, [fp, #4]
   10e60:	str	r3, [sp]
   10e64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10e68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10e6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10e70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10e74:	bl	4510 <MyGame_Example_neg_enum_parse_json_enum>
   10e78:	str	r0, [fp, #-36]	; 0xffffffdc
   10e7c:	b	10fbc <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   10e80:	nop			; (mov r0, r0)
   10e84:	b	10eec <monster_test_local_MyGame_Example_json_parser_enum+0x430>
   10e88:	.word	0x656e756c
   10e8c:	.word	0x6865785f
   10e90:	.word	0x71ffffff
   10e94:	.word	0x436f6c6f
   10e98:	.word	0x00000000
   10e9c:	.word	0x416e7900
   10ea0:	.word	0x00000000
   10ea4:	.word	0x466f6f00
   10ea8:	.word	0x72000000
   10eac:	.word	0x436f6c6f
   10eb0:	.word	0x656e756c
   10eb4:	.word	0x696e745f
   10eb8:	.word	0x656e756d
   10ebc:	.word	0x6865785f
   10ec0:	.word	0x656e756c
   10ec4:	.word	0x6e65675f
   10ec8:	.word	0x656e756d
   10ecc:	.word	0x696e745f
   10ed0:	.word	0x656e756d
   10ed4:	.word	0x6e65675f
   10ed8:	.word	0x6d707479
   10edc:	.word	0x6e6f7465
   10ee0:	.word	0x00000000
   10ee4:	.word	0x656e756d
   10ee8:	nop			; (mov r0, r0)
   10eec:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10ef0:	sub	r1, pc, #32
   10ef4:	ldrd	r0, [r1]
   10ef8:	cmp	r3, r1
   10efc:	cmpeq	r2, r0
   10f00:	bne	10fb4 <monster_test_local_MyGame_Example_json_parser_enum+0x4f8>
   10f04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10f08:	add	r3, r3, #8
   10f0c:	str	r3, [fp, #-36]	; 0xffffffdc
   10f10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10f14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10f18:	bl	854 <flatcc_json_parser_symbol_part>
   10f1c:	strd	r0, [fp, #-20]	; 0xffffffec
   10f20:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10f24:	mov	r0, #0
   10f28:	mvn	r1, #0
   10f2c:	and	r2, r2, r0
   10f30:	and	r3, r3, r1
   10f34:	sub	r1, pc, #92	; 0x5c
   10f38:	ldrd	r0, [r1]
   10f3c:	cmp	r3, r1
   10f40:	cmpeq	r2, r0
   10f44:	bne	10fac <monster_test_local_MyGame_Example_json_parser_enum+0x4f0>
   10f48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10f4c:	str	r3, [fp, #-24]	; 0xffffffe8
   10f50:	mov	r3, #4
   10f54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10f58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10f60:	bl	89c <flatcc_json_parser_match_scope>
   10f64:	str	r0, [fp, #-36]	; 0xffffffdc
   10f68:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10f6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f70:	cmp	r2, r3
   10f74:	beq	10fa4 <monster_test_local_MyGame_Example_json_parser_enum+0x4e8>
   10f78:	ldr	r3, [fp, #8]
   10f7c:	str	r3, [sp, #4]
   10f80:	ldr	r3, [fp, #4]
   10f84:	str	r3, [sp]
   10f88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10f8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10f90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10f94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10f98:	bl	5c40 <MyGame_Example_notemptyenum_parse_json_enum>
   10f9c:	str	r0, [fp, #-36]	; 0xffffffdc
   10fa0:	b	10fbc <monster_test_local_MyGame_Example_json_parser_enum+0x500>
   10fa4:	ldr	r3, [fp, #-8]
   10fa8:	b	10fc0 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   10fac:	ldr	r3, [fp, #-8]
   10fb0:	b	10fc0 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   10fb4:	ldr	r3, [fp, #-8]
   10fb8:	b	10fc0 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   10fbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10fc0:	mov	r0, r3
   10fc4:	sub	sp, fp, #4
   10fc8:	pop	{fp, pc}

00010fcc <monster_test_local_MyGame_Example2_json_parser_enum>:
   10fcc:	push	{fp}		; (str fp, [sp, #-4]!)
   10fd0:	add	fp, sp, #0
   10fd4:	sub	sp, sp, #20
   10fd8:	str	r0, [fp, #-8]
   10fdc:	str	r1, [fp, #-12]
   10fe0:	str	r2, [fp, #-16]
   10fe4:	str	r3, [fp, #-20]	; 0xffffffec
   10fe8:	ldr	r3, [fp, #-12]
   10fec:	mov	r0, r3
   10ff0:	add	sp, fp, #0
   10ff4:	pop	{fp}		; (ldr fp, [sp], #4)
   10ff8:	bx	lr

00010ffc <monster_test_local_MyGame_json_parser_enum>:
   10ffc:	push	{fp}		; (str fp, [sp, #-4]!)
   11000:	add	fp, sp, #0
   11004:	sub	sp, sp, #20
   11008:	str	r0, [fp, #-8]
   1100c:	str	r1, [fp, #-12]
   11010:	str	r2, [fp, #-16]
   11014:	str	r3, [fp, #-20]	; 0xffffffec
   11018:	ldr	r3, [fp, #-12]
   1101c:	mov	r0, r3
   11020:	add	sp, fp, #0
   11024:	pop	{fp}		; (ldr fp, [sp], #4)
   11028:	bx	lr

0001102c <monster_test_local_Fantasy_json_parser_enum>:
   1102c:	push	{fp, lr}
   11030:	add	fp, sp, #4
   11034:	sub	sp, sp, #48	; 0x30
   11038:	str	r0, [fp, #-32]	; 0xffffffe0
   1103c:	str	r1, [fp, #-36]	; 0xffffffdc
   11040:	str	r2, [fp, #-40]	; 0xffffffd8
   11044:	str	r3, [fp, #-44]	; 0xffffffd4
   11048:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1104c:	str	r3, [fp, #-8]
   11050:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11054:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11058:	bl	854 <flatcc_json_parser_symbol_part>
   1105c:	strd	r0, [fp, #-20]	; 0xffffffec
   11060:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11064:	add	r1, pc, #204	; 0xcc
   11068:	ldrd	r0, [r1]
   1106c:	cmp	r3, r1
   11070:	cmpeq	r2, r0
   11074:	bne	11124 <monster_test_local_Fantasy_json_parser_enum+0xf8>
   11078:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1107c:	add	r3, r3, #8
   11080:	str	r3, [fp, #-36]	; 0xffffffdc
   11084:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11088:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1108c:	bl	854 <flatcc_json_parser_symbol_part>
   11090:	strd	r0, [fp, #-20]	; 0xffffffec
   11094:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11098:	mov	r0, #0
   1109c:	mov	r1, #-16777216	; 0xff000000
   110a0:	and	r2, r2, r0
   110a4:	and	r3, r3, r1
   110a8:	cmp	r3, #1912602624	; 0x72000000
   110ac:	cmpeq	r2, #0
   110b0:	bne	1111c <monster_test_local_Fantasy_json_parser_enum+0xf0>
   110b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   110b8:	str	r3, [fp, #-24]	; 0xffffffe8
   110bc:	mov	r3, #1
   110c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   110c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   110c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   110cc:	bl	89c <flatcc_json_parser_match_scope>
   110d0:	str	r0, [fp, #-36]	; 0xffffffdc
   110d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   110d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110dc:	cmp	r2, r3
   110e0:	beq	11114 <monster_test_local_Fantasy_json_parser_enum+0xe8>
   110e4:	ldr	r3, [fp, #8]
   110e8:	str	r3, [sp, #4]
   110ec:	ldr	r3, [fp, #4]
   110f0:	str	r3, [sp]
   110f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   110f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   110fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11100:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11104:	bl	fac4 <Fantasy_Character_parse_json_enum>
   11108:	str	r0, [fp, #-36]	; 0xffffffdc
   1110c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11110:	b	11128 <monster_test_local_Fantasy_json_parser_enum+0xfc>
   11114:	ldr	r3, [fp, #-8]
   11118:	b	11128 <monster_test_local_Fantasy_json_parser_enum+0xfc>
   1111c:	ldr	r3, [fp, #-8]
   11120:	b	11128 <monster_test_local_Fantasy_json_parser_enum+0xfc>
   11124:	ldr	r3, [fp, #-8]
   11128:	mov	r0, r3
   1112c:	sub	sp, fp, #4
   11130:	pop	{fp, pc}
   11134:	nop			; (mov r0, r0)
   11138:	.word	0x61637465
   1113c:	.word	0x43686172

00011140 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum>:
   11140:	push	{fp, lr}
   11144:	add	fp, sp, #4
   11148:	sub	sp, sp, #48	; 0x30
   1114c:	str	r0, [fp, #-32]	; 0xffffffe0
   11150:	str	r1, [fp, #-36]	; 0xffffffdc
   11154:	str	r2, [fp, #-40]	; 0xffffffd8
   11158:	str	r3, [fp, #-44]	; 0xffffffd4
   1115c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11160:	str	r3, [fp, #-8]
   11164:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11168:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1116c:	bl	854 <flatcc_json_parser_symbol_part>
   11170:	strd	r0, [fp, #-20]	; 0xffffffec
   11174:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11178:	add	r1, pc, #208	; 0xd0
   1117c:	ldrd	r0, [r1]
   11180:	cmp	r3, r1
   11184:	cmpeq	r2, r0
   11188:	bne	11240 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0x100>
   1118c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11190:	add	r3, r3, #8
   11194:	str	r3, [fp, #-36]	; 0xffffffdc
   11198:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1119c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   111a0:	bl	854 <flatcc_json_parser_symbol_part>
   111a4:	strd	r0, [fp, #-20]	; 0xffffffec
   111a8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   111ac:	mov	r0, #0
   111b0:	mvn	r1, #255	; 0xff
   111b4:	and	r2, r2, r0
   111b8:	and	r3, r3, r1
   111bc:	add	r1, pc, #148	; 0x94
   111c0:	ldrd	r0, [r1]
   111c4:	cmp	r3, r1
   111c8:	cmpeq	r2, r0
   111cc:	bne	11238 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0xf8>
   111d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   111d4:	str	r3, [fp, #-24]	; 0xffffffe8
   111d8:	mov	r3, #3
   111dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   111e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   111e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   111e8:	bl	89c <flatcc_json_parser_match_scope>
   111ec:	str	r0, [fp, #-36]	; 0xffffffdc
   111f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   111f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   111f8:	cmp	r2, r3
   111fc:	beq	11230 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0xf0>
   11200:	ldr	r3, [fp, #8]
   11204:	str	r3, [sp, #4]
   11208:	ldr	r3, [fp, #4]
   1120c:	str	r3, [sp]
   11210:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11214:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11218:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1121c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11220:	bl	31dc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
   11224:	str	r0, [fp, #-36]	; 0xffffffdc
   11228:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1122c:	b	11244 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
   11230:	ldr	r3, [fp, #-8]
   11234:	b	11244 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
   11238:	ldr	r3, [fp, #-8]
   1123c:	b	11244 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0x104>
   11240:	ldr	r3, [fp, #-8]
   11244:	mov	r0, r3
   11248:	sub	sp, fp, #4
   1124c:	pop	{fp, pc}
   11250:	.word	0x496e636c
   11254:	.word	0x46726f6d
   11258:	.word	0x00000000
   1125c:	.word	0x75646500

00011260 <monster_test_global_json_parser_enum>:
   11260:	push	{fp, lr}
   11264:	add	fp, sp, #4
   11268:	sub	sp, sp, #48	; 0x30
   1126c:	str	r0, [fp, #-32]	; 0xffffffe0
   11270:	str	r1, [fp, #-36]	; 0xffffffdc
   11274:	str	r2, [fp, #-40]	; 0xffffffd8
   11278:	str	r3, [fp, #-44]	; 0xffffffd4
   1127c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11280:	str	r3, [fp, #-8]
   11284:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11288:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1128c:	bl	854 <flatcc_json_parser_symbol_part>
   11290:	strd	r0, [fp, #-20]	; 0xffffffec
   11294:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11298:	add	r1, pc, #784	; 0x310
   1129c:	ldrd	r0, [r1]
   112a0:	cmp	r3, r1
   112a4:	cmpeq	r2, r0
   112a8:	bhi	113b0 <monster_test_global_json_parser_enum+0x150>
   112ac:	ldrd	r2, [fp, #-20]	; 0xffffffec
   112b0:	add	r1, pc, #768	; 0x300
   112b4:	ldrd	r0, [r1]
   112b8:	cmp	r3, r1
   112bc:	cmpeq	r2, r0
   112c0:	bne	113a8 <monster_test_global_json_parser_enum+0x148>
   112c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   112c8:	add	r3, r3, #8
   112cc:	str	r3, [fp, #-36]	; 0xffffffdc
   112d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   112d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   112d8:	bl	854 <flatcc_json_parser_symbol_part>
   112dc:	strd	r0, [fp, #-20]	; 0xffffffec
   112e0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   112e4:	add	r1, pc, #724	; 0x2d4
   112e8:	ldrd	r0, [r1]
   112ec:	cmp	r3, r1
   112f0:	cmpeq	r2, r0
   112f4:	bne	113a0 <monster_test_global_json_parser_enum+0x140>
   112f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   112fc:	add	r3, r3, #8
   11300:	str	r3, [fp, #-36]	; 0xffffffdc
   11304:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11308:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1130c:	bl	854 <flatcc_json_parser_symbol_part>
   11310:	strd	r0, [fp, #-20]	; 0xffffffec
   11314:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11318:	mov	r0, #0
   1131c:	mov	r1, #-16777216	; 0xff000000
   11320:	and	r2, r2, r0
   11324:	and	r3, r3, r1
   11328:	cmp	r3, #1912602624	; 0x72000000
   1132c:	cmpeq	r2, #0
   11330:	bne	11398 <monster_test_global_json_parser_enum+0x138>
   11334:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11338:	str	r3, [fp, #-24]	; 0xffffffe8
   1133c:	mov	r3, #1
   11340:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11344:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11348:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1134c:	bl	89c <flatcc_json_parser_match_scope>
   11350:	str	r0, [fp, #-36]	; 0xffffffdc
   11354:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1135c:	cmp	r2, r3
   11360:	beq	11390 <monster_test_global_json_parser_enum+0x130>
   11364:	ldr	r3, [fp, #8]
   11368:	str	r3, [sp, #4]
   1136c:	ldr	r3, [fp, #4]
   11370:	str	r3, [sp]
   11374:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11378:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1137c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11380:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11384:	bl	fac4 <Fantasy_Character_parse_json_enum>
   11388:	str	r0, [fp, #-36]	; 0xffffffdc
   1138c:	b	11c00 <monster_test_global_json_parser_enum+0x9a0>
   11390:	ldr	r3, [fp, #-8]
   11394:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   11398:	ldr	r3, [fp, #-8]
   1139c:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   113a0:	ldr	r3, [fp, #-8]
   113a4:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   113a8:	ldr	r3, [fp, #-8]
   113ac:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   113b0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   113b4:	add	r1, pc, #524	; 0x20c
   113b8:	ldrd	r0, [r1]
   113bc:	cmp	r3, r1
   113c0:	cmpeq	r2, r0
   113c4:	bne	11a84 <monster_test_global_json_parser_enum+0x824>
   113c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   113cc:	add	r3, r3, #8
   113d0:	str	r3, [fp, #-36]	; 0xffffffdc
   113d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   113d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   113dc:	bl	854 <flatcc_json_parser_symbol_part>
   113e0:	strd	r0, [fp, #-20]	; 0xffffffec
   113e4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   113e8:	add	r1, pc, #480	; 0x1e0
   113ec:	ldrd	r0, [r1]
   113f0:	cmp	r3, r1
   113f4:	cmpeq	r2, r0
   113f8:	bhi	116d0 <monster_test_global_json_parser_enum+0x470>
   113fc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11400:	add	r1, pc, #464	; 0x1d0
   11404:	ldrd	r0, [r1]
   11408:	cmp	r3, r1
   1140c:	cmpeq	r2, r0
   11410:	bhi	114e4 <monster_test_global_json_parser_enum+0x284>
   11414:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11418:	add	r1, pc, #448	; 0x1c0
   1141c:	ldrd	r0, [r1]
   11420:	cmp	r3, r1
   11424:	cmpeq	r2, r0
   11428:	bne	114dc <monster_test_global_json_parser_enum+0x27c>
   1142c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11430:	add	r3, r3, #8
   11434:	str	r3, [fp, #-36]	; 0xffffffdc
   11438:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1143c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11440:	bl	854 <flatcc_json_parser_symbol_part>
   11444:	strd	r0, [fp, #-20]	; 0xffffffec
   11448:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1144c:	mov	r0, #0
   11450:	ldr	r1, [pc, #416]	; 115f8 <monster_test_global_json_parser_enum+0x398>
   11454:	and	r2, r2, r0
   11458:	and	r3, r3, r1
   1145c:	mov	r0, #0
   11460:	ldr	r1, [pc, #404]	; 115fc <monster_test_global_json_parser_enum+0x39c>
   11464:	cmp	r3, r1
   11468:	cmpeq	r2, r0
   1146c:	bne	114d4 <monster_test_global_json_parser_enum+0x274>
   11470:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11474:	str	r3, [fp, #-24]	; 0xffffffe8
   11478:	mov	r3, #2
   1147c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11484:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11488:	bl	89c <flatcc_json_parser_match_scope>
   1148c:	str	r0, [fp, #-36]	; 0xffffffdc
   11490:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11498:	cmp	r2, r3
   1149c:	beq	114cc <monster_test_global_json_parser_enum+0x26c>
   114a0:	ldr	r3, [fp, #8]
   114a4:	str	r3, [sp, #4]
   114a8:	ldr	r3, [fp, #4]
   114ac:	str	r3, [sp]
   114b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   114b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   114b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   114bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   114c0:	bl	5054 <MyGame_Example_Any_parse_json_enum>
   114c4:	str	r0, [fp, #-36]	; 0xffffffdc
   114c8:	b	11c00 <monster_test_global_json_parser_enum+0x9a0>
   114cc:	ldr	r3, [fp, #-8]
   114d0:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   114d4:	ldr	r3, [fp, #-8]
   114d8:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   114dc:	ldr	r3, [fp, #-8]
   114e0:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   114e4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   114e8:	add	r1, pc, #248	; 0xf8
   114ec:	ldrd	r0, [r1]
   114f0:	cmp	r3, r1
   114f4:	cmpeq	r2, r0
   114f8:	bne	11600 <monster_test_global_json_parser_enum+0x3a0>
   114fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11500:	add	r3, r3, #8
   11504:	str	r3, [fp, #-36]	; 0xffffffdc
   11508:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1150c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11510:	bl	854 <flatcc_json_parser_symbol_part>
   11514:	strd	r0, [fp, #-20]	; 0xffffffec
   11518:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1151c:	mov	r0, #0
   11520:	mvn	r1, #0
   11524:	and	r2, r2, r0
   11528:	and	r3, r3, r1
   1152c:	add	r1, pc, #188	; 0xbc
   11530:	ldrd	r0, [r1]
   11534:	cmp	r3, r1
   11538:	cmpeq	r2, r0
   1153c:	bne	115a4 <monster_test_global_json_parser_enum+0x344>
   11540:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11544:	str	r3, [fp, #-24]	; 0xffffffe8
   11548:	mov	r3, #4
   1154c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11554:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11558:	bl	89c <flatcc_json_parser_match_scope>
   1155c:	str	r0, [fp, #-36]	; 0xffffffdc
   11560:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11568:	cmp	r2, r3
   1156c:	beq	1159c <monster_test_global_json_parser_enum+0x33c>
   11570:	ldr	r3, [fp, #8]
   11574:	str	r3, [sp, #4]
   11578:	ldr	r3, [fp, #4]
   1157c:	str	r3, [sp]
   11580:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11584:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11588:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1158c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11590:	bl	4c4c <MyGame_Example_Color_parse_json_enum>
   11594:	str	r0, [fp, #-36]	; 0xffffffdc
   11598:	b	11c00 <monster_test_global_json_parser_enum+0x9a0>
   1159c:	ldr	r3, [fp, #-8]
   115a0:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   115a4:	ldr	r3, [fp, #-8]
   115a8:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   115ac:	nop			; (mov r0, r0)
   115b0:	.word	0x6d652e44
   115b4:	.word	0x4d794761
   115b8:	.word	0x6173792e
   115bc:	.word	0x46616e74
   115c0:	.word	0x61637465
   115c4:	.word	0x43686172
   115c8:	.word	0x6d652e45
   115cc:	.word	0x4d794761
   115d0:	.word	0x6c652e67
   115d4:	.word	0x78616d70
   115d8:	.word	0x6c652e42
   115dc:	.word	0x78616d70
   115e0:	.word	0x6c652e41
   115e4:	.word	0x78616d70
   115e8:	.word	0x6c652e43
   115ec:	.word	0x78616d70
   115f0:	.word	0x00000000
   115f4:	.word	0x6f6c6f72
   115f8:	.word	0xffff0000
   115fc:	.word	0x6e790000
   11600:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11604:	add	r1, pc, #852	; 0x354
   11608:	ldrd	r0, [r1]
   1160c:	cmp	r3, r1
   11610:	cmpeq	r2, r0
   11614:	bne	116c8 <monster_test_global_json_parser_enum+0x468>
   11618:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1161c:	add	r3, r3, #8
   11620:	str	r3, [fp, #-36]	; 0xffffffdc
   11624:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11628:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1162c:	bl	854 <flatcc_json_parser_symbol_part>
   11630:	strd	r0, [fp, #-20]	; 0xffffffec
   11634:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11638:	mov	r0, #0
   1163c:	ldr	r1, [pc, #860]	; 119a0 <monster_test_global_json_parser_enum+0x740>
   11640:	and	r2, r2, r0
   11644:	and	r3, r3, r1
   11648:	mov	r0, #0
   1164c:	ldr	r1, [pc, #848]	; 119a4 <monster_test_global_json_parser_enum+0x744>
   11650:	cmp	r3, r1
   11654:	cmpeq	r2, r0
   11658:	bne	116c0 <monster_test_global_json_parser_enum+0x460>
   1165c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11660:	str	r3, [fp, #-24]	; 0xffffffe8
   11664:	mov	r3, #2
   11668:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1166c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11670:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11674:	bl	89c <flatcc_json_parser_match_scope>
   11678:	str	r0, [fp, #-36]	; 0xffffffdc
   1167c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11684:	cmp	r2, r3
   11688:	beq	116b8 <monster_test_global_json_parser_enum+0x458>
   1168c:	ldr	r3, [fp, #8]
   11690:	str	r3, [sp, #4]
   11694:	ldr	r3, [fp, #4]
   11698:	str	r3, [sp]
   1169c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   116a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   116a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   116a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   116ac:	bl	4328 <MyGame_Example_Foo_parse_json_enum>
   116b0:	str	r0, [fp, #-36]	; 0xffffffdc
   116b4:	b	11c00 <monster_test_global_json_parser_enum+0x9a0>
   116b8:	ldr	r3, [fp, #-8]
   116bc:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   116c0:	ldr	r3, [fp, #-8]
   116c4:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   116c8:	ldr	r3, [fp, #-8]
   116cc:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   116d0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   116d4:	add	r1, pc, #652	; 0x28c
   116d8:	ldrd	r0, [r1]
   116dc:	cmp	r3, r1
   116e0:	cmpeq	r2, r0
   116e4:	bhi	117b8 <monster_test_global_json_parser_enum+0x558>
   116e8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   116ec:	add	r1, pc, #628	; 0x274
   116f0:	ldrd	r0, [r1]
   116f4:	cmp	r3, r1
   116f8:	cmpeq	r2, r0
   116fc:	bne	117b0 <monster_test_global_json_parser_enum+0x550>
   11700:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11704:	add	r3, r3, #8
   11708:	str	r3, [fp, #-36]	; 0xffffffdc
   1170c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11710:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11714:	bl	854 <flatcc_json_parser_symbol_part>
   11718:	strd	r0, [fp, #-20]	; 0xffffffec
   1171c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11720:	mvn	r0, #255	; 0xff
   11724:	mvn	r1, #0
   11728:	and	r2, r2, r0
   1172c:	and	r3, r3, r1
   11730:	add	r1, pc, #568	; 0x238
   11734:	ldrd	r0, [r1]
   11738:	cmp	r3, r1
   1173c:	cmpeq	r2, r0
   11740:	bne	117a8 <monster_test_global_json_parser_enum+0x548>
   11744:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11748:	str	r3, [fp, #-24]	; 0xffffffe8
   1174c:	mov	r3, #7
   11750:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11754:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11758:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1175c:	bl	89c <flatcc_json_parser_match_scope>
   11760:	str	r0, [fp, #-36]	; 0xffffffdc
   11764:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11768:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1176c:	cmp	r2, r3
   11770:	beq	117a0 <monster_test_global_json_parser_enum+0x540>
   11774:	ldr	r3, [fp, #8]
   11778:	str	r3, [sp, #4]
   1177c:	ldr	r3, [fp, #4]
   11780:	str	r3, [sp]
   11784:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11788:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1178c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11790:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11794:	bl	4a1c <MyGame_Example_hex_enum_parse_json_enum>
   11798:	str	r0, [fp, #-36]	; 0xffffffdc
   1179c:	b	11c00 <monster_test_global_json_parser_enum+0x9a0>
   117a0:	ldr	r3, [fp, #-8]
   117a4:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   117a8:	ldr	r3, [fp, #-8]
   117ac:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   117b0:	ldr	r3, [fp, #-8]
   117b4:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   117b8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   117bc:	add	r1, pc, #436	; 0x1b4
   117c0:	ldrd	r0, [r1]
   117c4:	cmp	r3, r1
   117c8:	cmpeq	r2, r0
   117cc:	bhi	118a0 <monster_test_global_json_parser_enum+0x640>
   117d0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   117d4:	add	r1, pc, #420	; 0x1a4
   117d8:	ldrd	r0, [r1]
   117dc:	cmp	r3, r1
   117e0:	cmpeq	r2, r0
   117e4:	bne	11898 <monster_test_global_json_parser_enum+0x638>
   117e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   117ec:	add	r3, r3, #8
   117f0:	str	r3, [fp, #-36]	; 0xffffffdc
   117f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   117f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   117fc:	bl	854 <flatcc_json_parser_symbol_part>
   11800:	strd	r0, [fp, #-20]	; 0xffffffec
   11804:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11808:	mvn	r0, #255	; 0xff
   1180c:	mvn	r1, #0
   11810:	and	r2, r2, r0
   11814:	and	r3, r3, r1
   11818:	add	r1, pc, #360	; 0x168
   1181c:	ldrd	r0, [r1]
   11820:	cmp	r3, r1
   11824:	cmpeq	r2, r0
   11828:	bne	11890 <monster_test_global_json_parser_enum+0x630>
   1182c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11830:	str	r3, [fp, #-24]	; 0xffffffe8
   11834:	mov	r3, #7
   11838:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1183c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11840:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11844:	bl	89c <flatcc_json_parser_match_scope>
   11848:	str	r0, [fp, #-36]	; 0xffffffdc
   1184c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11850:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11854:	cmp	r2, r3
   11858:	beq	11888 <monster_test_global_json_parser_enum+0x628>
   1185c:	ldr	r3, [fp, #8]
   11860:	str	r3, [sp, #4]
   11864:	ldr	r3, [fp, #4]
   11868:	str	r3, [sp]
   1186c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11870:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11874:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11878:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1187c:	bl	4738 <MyGame_Example_int_enum_parse_json_enum>
   11880:	str	r0, [fp, #-36]	; 0xffffffdc
   11884:	b	11c00 <monster_test_global_json_parser_enum+0x9a0>
   11888:	ldr	r3, [fp, #-8]
   1188c:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   11890:	ldr	r3, [fp, #-8]
   11894:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   11898:	ldr	r3, [fp, #-8]
   1189c:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   118a0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   118a4:	add	r1, pc, #228	; 0xe4
   118a8:	ldrd	r0, [r1]
   118ac:	cmp	r3, r1
   118b0:	cmpeq	r2, r0
   118b4:	bne	11a7c <monster_test_global_json_parser_enum+0x81c>
   118b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   118bc:	add	r3, r3, #8
   118c0:	str	r3, [fp, #-36]	; 0xffffffdc
   118c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   118c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   118cc:	bl	854 <flatcc_json_parser_symbol_part>
   118d0:	strd	r0, [fp, #-20]	; 0xffffffec
   118d4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   118d8:	mvn	r0, #255	; 0xff
   118dc:	mvn	r1, #0
   118e0:	and	r2, r2, r0
   118e4:	and	r3, r3, r1
   118e8:	add	r1, pc, #168	; 0xa8
   118ec:	ldrd	r0, [r1]
   118f0:	cmp	r3, r1
   118f4:	cmpeq	r2, r0
   118f8:	bne	11958 <monster_test_global_json_parser_enum+0x6f8>
   118fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11900:	str	r3, [fp, #-24]	; 0xffffffe8
   11904:	mov	r3, #7
   11908:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1190c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11914:	bl	89c <flatcc_json_parser_match_scope>
   11918:	str	r0, [fp, #-36]	; 0xffffffdc
   1191c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11920:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11924:	cmp	r2, r3
   11928:	beq	119a8 <monster_test_global_json_parser_enum+0x748>
   1192c:	ldr	r3, [fp, #8]
   11930:	str	r3, [sp, #4]
   11934:	ldr	r3, [fp, #4]
   11938:	str	r3, [sp]
   1193c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11940:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11944:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11948:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1194c:	bl	4510 <MyGame_Example_neg_enum_parse_json_enum>
   11950:	str	r0, [fp, #-36]	; 0xffffffdc
   11954:	b	11c00 <monster_test_global_json_parser_enum+0x9a0>
   11958:	nop			; (mov r0, r0)
   1195c:	b	119ac <monster_test_global_json_parser_enum+0x74c>
   11960:	.word	0x6c652e46
   11964:	.word	0x78616d70
   11968:	.word	0x6c652e68
   1196c:	.word	0x78616d70
   11970:	.word	0x6e756d00
   11974:	.word	0x65785f65
   11978:	.word	0x6c652e6d
   1197c:	.word	0x78616d70
   11980:	.word	0x6c652e69
   11984:	.word	0x78616d70
   11988:	.word	0x6e756d00
   1198c:	.word	0x6e745f65
   11990:	.word	0x6c652e6e
   11994:	.word	0x78616d70
   11998:	.word	0x6e756d00
   1199c:	.word	0x65675f65
   119a0:	.word	0xffff0000
   119a4:	.word	0x6f6f0000
   119a8:	nop			; (mov r0, r0)
   119ac:	ldrd	r2, [fp, #-20]	; 0xffffffec
   119b0:	add	r1, pc, #600	; 0x258
   119b4:	ldrd	r0, [r1]
   119b8:	cmp	r3, r1
   119bc:	cmpeq	r2, r0
   119c0:	bne	11a74 <monster_test_global_json_parser_enum+0x814>
   119c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   119c8:	add	r3, r3, #8
   119cc:	str	r3, [fp, #-36]	; 0xffffffdc
   119d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   119d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   119d8:	bl	854 <flatcc_json_parser_symbol_part>
   119dc:	strd	r0, [fp, #-20]	; 0xffffffec
   119e0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   119e4:	mov	r0, #0
   119e8:	mvn	r1, #255	; 0xff
   119ec:	and	r2, r2, r0
   119f0:	and	r3, r3, r1
   119f4:	add	r1, pc, #540	; 0x21c
   119f8:	ldrd	r0, [r1]
   119fc:	cmp	r3, r1
   11a00:	cmpeq	r2, r0
   11a04:	bne	11a6c <monster_test_global_json_parser_enum+0x80c>
   11a08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11a0c:	str	r3, [fp, #-24]	; 0xffffffe8
   11a10:	mov	r3, #3
   11a14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11a18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11a1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11a20:	bl	89c <flatcc_json_parser_match_scope>
   11a24:	str	r0, [fp, #-36]	; 0xffffffdc
   11a28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11a2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a30:	cmp	r2, r3
   11a34:	beq	11a64 <monster_test_global_json_parser_enum+0x804>
   11a38:	ldr	r3, [fp, #8]
   11a3c:	str	r3, [sp, #4]
   11a40:	ldr	r3, [fp, #4]
   11a44:	str	r3, [sp]
   11a48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11a4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11a50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11a54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11a58:	bl	5c40 <MyGame_Example_notemptyenum_parse_json_enum>
   11a5c:	str	r0, [fp, #-36]	; 0xffffffdc
   11a60:	b	11c00 <monster_test_global_json_parser_enum+0x9a0>
   11a64:	ldr	r3, [fp, #-8]
   11a68:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   11a6c:	ldr	r3, [fp, #-8]
   11a70:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   11a74:	ldr	r3, [fp, #-8]
   11a78:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   11a7c:	ldr	r3, [fp, #-8]
   11a80:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   11a84:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11a88:	add	r1, pc, #400	; 0x190
   11a8c:	ldrd	r0, [r1]
   11a90:	cmp	r3, r1
   11a94:	cmpeq	r2, r0
   11a98:	bne	11bf8 <monster_test_global_json_parser_enum+0x998>
   11a9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11aa0:	add	r3, r3, #8
   11aa4:	str	r3, [fp, #-36]	; 0xffffffdc
   11aa8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11aac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11ab0:	bl	854 <flatcc_json_parser_symbol_part>
   11ab4:	strd	r0, [fp, #-20]	; 0xffffffec
   11ab8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11abc:	add	r1, pc, #356	; 0x164
   11ac0:	ldrd	r0, [r1]
   11ac4:	cmp	r3, r1
   11ac8:	cmpeq	r2, r0
   11acc:	bne	11bf0 <monster_test_global_json_parser_enum+0x990>
   11ad0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11ad4:	add	r3, r3, #8
   11ad8:	str	r3, [fp, #-36]	; 0xffffffdc
   11adc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11ae0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11ae4:	bl	854 <flatcc_json_parser_symbol_part>
   11ae8:	strd	r0, [fp, #-20]	; 0xffffffec
   11aec:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11af0:	add	r1, pc, #312	; 0x138
   11af4:	ldrd	r0, [r1]
   11af8:	cmp	r3, r1
   11afc:	cmpeq	r2, r0
   11b00:	bne	11be8 <monster_test_global_json_parser_enum+0x988>
   11b04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11b08:	add	r3, r3, #8
   11b0c:	str	r3, [fp, #-36]	; 0xffffffdc
   11b10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11b14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11b18:	bl	854 <flatcc_json_parser_symbol_part>
   11b1c:	strd	r0, [fp, #-20]	; 0xffffffec
   11b20:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11b24:	add	r1, pc, #268	; 0x10c
   11b28:	ldrd	r0, [r1]
   11b2c:	cmp	r3, r1
   11b30:	cmpeq	r2, r0
   11b34:	bne	11be0 <monster_test_global_json_parser_enum+0x980>
   11b38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11b3c:	add	r3, r3, #8
   11b40:	str	r3, [fp, #-36]	; 0xffffffdc
   11b44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11b48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11b4c:	bl	854 <flatcc_json_parser_symbol_part>
   11b50:	strd	r0, [fp, #-20]	; 0xffffffec
   11b54:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11b58:	mov	r0, #0
   11b5c:	mov	r1, #-16777216	; 0xff000000
   11b60:	and	r2, r2, r0
   11b64:	and	r3, r3, r1
   11b68:	cmp	r3, #1694498816	; 0x65000000
   11b6c:	cmpeq	r2, #0
   11b70:	bne	11bd8 <monster_test_global_json_parser_enum+0x978>
   11b74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11b78:	str	r3, [fp, #-24]	; 0xffffffe8
   11b7c:	mov	r3, #1
   11b80:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11b84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11b88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11b8c:	bl	89c <flatcc_json_parser_match_scope>
   11b90:	str	r0, [fp, #-36]	; 0xffffffdc
   11b94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11b98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b9c:	cmp	r2, r3
   11ba0:	beq	11bd0 <monster_test_global_json_parser_enum+0x970>
   11ba4:	ldr	r3, [fp, #8]
   11ba8:	str	r3, [sp, #4]
   11bac:	ldr	r3, [fp, #4]
   11bb0:	str	r3, [sp]
   11bb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11bb8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11bbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11bc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11bc4:	bl	31dc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
   11bc8:	str	r0, [fp, #-36]	; 0xffffffdc
   11bcc:	b	11c00 <monster_test_global_json_parser_enum+0x9a0>
   11bd0:	ldr	r3, [fp, #-8]
   11bd4:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   11bd8:	ldr	r3, [fp, #-8]
   11bdc:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   11be0:	ldr	r3, [fp, #-8]
   11be4:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   11be8:	ldr	r3, [fp, #-8]
   11bec:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   11bf0:	ldr	r3, [fp, #-8]
   11bf4:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   11bf8:	ldr	r3, [fp, #-8]
   11bfc:	b	11c04 <monster_test_global_json_parser_enum+0x9a4>
   11c00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11c04:	mov	r0, r3
   11c08:	sub	sp, fp, #4
   11c0c:	pop	{fp, pc}
   11c10:	.word	0x70747965
   11c14:	.word	0x6f74656d
   11c18:	.word	0x00000000
   11c1c:	.word	0x6e756d00
   11c20:	.word	0x6d652e4f
   11c24:	.word	0x4d794761
   11c28:	.word	0x4e616d65
   11c2c:	.word	0x74686572
   11c30:	.word	0x652e4672
   11c34:	.word	0x53706163
   11c38:	.word	0x636c7564
   11c3c:	.word	0x6f6d496e

00011c40 <monster_test_parse_json>:
   11c40:	push	{fp, lr}
   11c44:	add	fp, sp, #4
   11c48:	sub	sp, sp, #72	; 0x48
   11c4c:	str	r0, [fp, #-56]	; 0xffffffc8
   11c50:	str	r1, [fp, #-60]	; 0xffffffc4
   11c54:	str	r2, [fp, #-64]	; 0xffffffc0
   11c58:	str	r3, [fp, #-68]	; 0xffffffbc
   11c5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11c60:	cmp	r3, #0
   11c64:	bne	11c70 <monster_test_parse_json+0x30>
   11c68:	sub	r3, fp, #48	; 0x30
   11c6c:	b	11c74 <monster_test_parse_json+0x34>
   11c70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11c74:	str	r3, [fp, #-60]	; 0xffffffc4
   11c78:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11c7c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11c80:	add	r2, r2, r3
   11c84:	ldr	r3, [fp, #4]
   11c88:	str	r3, [sp]
   11c8c:	mov	r3, r2
   11c90:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11c94:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11c98:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11c9c:	bl	450 <flatcc_json_parser_init>
   11ca0:	mov	r3, #0
   11ca4:	mov	r2, #0
   11ca8:	ldr	r1, [pc, #144]	; 11d40 <monster_test_parse_json+0x100>
   11cac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11cb0:	bl	0 <flatcc_builder_start_buffer>
   11cb4:	mov	r3, r0
   11cb8:	cmp	r3, #0
   11cbc:	beq	11cc8 <monster_test_parse_json+0x88>
   11cc0:	mvn	r3, #0
   11cc4:	b	11d34 <monster_test_parse_json+0xf4>
   11cc8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11ccc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11cd0:	add	r2, r2, r3
   11cd4:	sub	r3, fp, #52	; 0x34
   11cd8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11cdc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11ce0:	bl	a08c <MyGame_Example_Monster_parse_json_table>
   11ce4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11ce8:	ldr	r3, [r3, #24]
   11cec:	cmp	r3, #0
   11cf0:	beq	11d00 <monster_test_parse_json+0xc0>
   11cf4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11cf8:	ldr	r3, [r3, #24]
   11cfc:	b	11d34 <monster_test_parse_json+0xf4>
   11d00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11d04:	mov	r1, r3
   11d08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11d0c:	bl	0 <flatcc_builder_end_buffer>
   11d10:	mov	r3, r0
   11d14:	cmp	r3, #0
   11d18:	bne	11d24 <monster_test_parse_json+0xe4>
   11d1c:	mvn	r3, #0
   11d20:	b	11d34 <monster_test_parse_json+0xf4>
   11d24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11d28:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11d2c:	str	r2, [r3, #40]	; 0x28
   11d30:	mov	r3, #0
   11d34:	mov	r0, r3
   11d38:	sub	sp, fp, #4
   11d3c:	pop	{fp, pc}
   11d40:	.word	0x0000001c

00011d44 <flatcc_json_printer_set_unquoted>:
   11d44:	push	{fp}		; (str fp, [sp, #-4]!)
   11d48:	add	fp, sp, #0
   11d4c:	sub	sp, sp, #12
   11d50:	str	r0, [fp, #-8]
   11d54:	str	r1, [fp, #-12]
   11d58:	ldr	r3, [fp, #-12]
   11d5c:	cmp	r3, #0
   11d60:	movne	r3, #1
   11d64:	moveq	r3, #0
   11d68:	uxtb	r3, r3
   11d6c:	mov	r2, r3
   11d70:	ldr	r3, [fp, #-8]
   11d74:	strb	r2, [r3, #26]
   11d78:	nop			; (mov r0, r0)
   11d7c:	add	sp, fp, #0
   11d80:	pop	{fp}		; (ldr fp, [sp], #4)
   11d84:	bx	lr

00011d88 <flatcc_json_printer_set_noenum>:
   11d88:	push	{fp}		; (str fp, [sp, #-4]!)
   11d8c:	add	fp, sp, #0
   11d90:	sub	sp, sp, #12
   11d94:	str	r0, [fp, #-8]
   11d98:	str	r1, [fp, #-12]
   11d9c:	ldr	r3, [fp, #-12]
   11da0:	cmp	r3, #0
   11da4:	movne	r3, #1
   11da8:	moveq	r3, #0
   11dac:	uxtb	r3, r3
   11db0:	mov	r2, r3
   11db4:	ldr	r3, [fp, #-8]
   11db8:	strb	r2, [r3, #27]
   11dbc:	nop			; (mov r0, r0)
   11dc0:	add	sp, fp, #0
   11dc4:	pop	{fp}		; (ldr fp, [sp], #4)
   11dc8:	bx	lr

00011dcc <flatcc_json_printer_set_indent>:
   11dcc:	push	{fp}		; (str fp, [sp, #-4]!)
   11dd0:	add	fp, sp, #0
   11dd4:	sub	sp, sp, #12
   11dd8:	str	r0, [fp, #-8]
   11ddc:	mov	r3, r1
   11de0:	strb	r3, [fp, #-9]
   11de4:	ldr	r3, [fp, #-8]
   11de8:	ldrb	r2, [fp, #-9]
   11dec:	strb	r2, [r3, #25]
   11df0:	nop			; (mov r0, r0)
   11df4:	add	sp, fp, #0
   11df8:	pop	{fp}		; (ldr fp, [sp], #4)
   11dfc:	bx	lr

00011e00 <flatcc_json_printer_set_nonstrict>:
   11e00:	push	{fp, lr}
   11e04:	add	fp, sp, #4
   11e08:	sub	sp, sp, #8
   11e0c:	str	r0, [fp, #-8]
   11e10:	mov	r1, #2
   11e14:	ldr	r0, [fp, #-8]
   11e18:	bl	11dcc <flatcc_json_printer_set_indent>
   11e1c:	mov	r1, #1
   11e20:	ldr	r0, [fp, #-8]
   11e24:	bl	11d44 <flatcc_json_printer_set_unquoted>
   11e28:	mov	r1, #0
   11e2c:	ldr	r0, [fp, #-8]
   11e30:	bl	11d88 <flatcc_json_printer_set_noenum>
   11e34:	nop			; (mov r0, r0)
   11e38:	sub	sp, fp, #4
   11e3c:	pop	{fp, pc}

00011e40 <flatcc_json_printer_set_flags>:
   11e40:	push	{fp, lr}
   11e44:	add	fp, sp, #4
   11e48:	sub	sp, sp, #8
   11e4c:	str	r0, [fp, #-8]
   11e50:	str	r1, [fp, #-12]
   11e54:	ldr	r3, [fp, #-12]
   11e58:	and	r3, r3, #1
   11e5c:	cmp	r3, #0
   11e60:	movne	r3, #1
   11e64:	moveq	r3, #0
   11e68:	uxtb	r3, r3
   11e6c:	mov	r2, r3
   11e70:	ldr	r3, [fp, #-8]
   11e74:	strb	r2, [r3, #26]
   11e78:	ldr	r3, [fp, #-12]
   11e7c:	and	r3, r3, #2
   11e80:	cmp	r3, #0
   11e84:	movne	r3, #1
   11e88:	moveq	r3, #0
   11e8c:	uxtb	r3, r3
   11e90:	mov	r2, r3
   11e94:	ldr	r3, [fp, #-8]
   11e98:	strb	r2, [r3, #27]
   11e9c:	ldr	r3, [fp, #-12]
   11ea0:	and	r3, r3, #4
   11ea4:	cmp	r3, #0
   11ea8:	movne	r3, #1
   11eac:	moveq	r3, #0
   11eb0:	uxtb	r3, r3
   11eb4:	mov	r2, r3
   11eb8:	ldr	r3, [fp, #-8]
   11ebc:	strb	r2, [r3, #28]
   11ec0:	ldr	r3, [fp, #-12]
   11ec4:	and	r3, r3, #8
   11ec8:	cmp	r3, #0
   11ecc:	movne	r3, #1
   11ed0:	moveq	r3, #0
   11ed4:	uxtb	r3, r3
   11ed8:	mov	r2, r3
   11edc:	ldr	r3, [fp, #-8]
   11ee0:	strb	r2, [r3, #29]
   11ee4:	ldr	r3, [fp, #-12]
   11ee8:	and	r3, r3, #16
   11eec:	cmp	r3, #0
   11ef0:	beq	11f00 <flatcc_json_printer_set_flags+0xc0>
   11ef4:	mov	r1, #2
   11ef8:	ldr	r0, [fp, #-8]
   11efc:	bl	11dcc <flatcc_json_printer_set_indent>
   11f00:	ldr	r3, [fp, #-12]
   11f04:	and	r3, r3, #32
   11f08:	cmp	r3, #0
   11f0c:	beq	11f18 <flatcc_json_printer_set_flags+0xd8>
   11f10:	ldr	r0, [fp, #-8]
   11f14:	bl	11e00 <flatcc_json_printer_set_nonstrict>
   11f18:	nop			; (mov r0, r0)
   11f1c:	sub	sp, fp, #4
   11f20:	pop	{fp, pc}

00011f24 <MyGame_OtherNameSpace_FromInclude_print_json_enum>:
   11f24:	push	{fp, lr}
   11f28:	add	fp, sp, #4
   11f2c:	sub	sp, sp, #16
   11f30:	str	r0, [fp, #-8]
   11f34:	strd	r2, [fp, #-20]	; 0xffffffec
   11f38:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11f3c:	orrs	r1, r2, r3
   11f40:	beq	11f54 <MyGame_OtherNameSpace_FromInclude_print_json_enum+0x30>
   11f44:	cmp	r3, #0
   11f48:	cmpeq	r2, #17
   11f4c:	beq	11f68 <MyGame_OtherNameSpace_FromInclude_print_json_enum+0x44>
   11f50:	b	11f7c <MyGame_OtherNameSpace_FromInclude_print_json_enum+0x58>
   11f54:	mov	r2, #10
   11f58:	ldr	r1, [pc, #56]	; 11f98 <MyGame_OtherNameSpace_FromInclude_print_json_enum+0x74>
   11f5c:	ldr	r0, [fp, #-8]
   11f60:	bl	0 <flatcc_json_printer_enum>
   11f64:	b	11f8c <MyGame_OtherNameSpace_FromInclude_print_json_enum+0x68>
   11f68:	mov	r2, #3
   11f6c:	ldr	r1, [pc, #40]	; 11f9c <MyGame_OtherNameSpace_FromInclude_print_json_enum+0x78>
   11f70:	ldr	r0, [fp, #-8]
   11f74:	bl	0 <flatcc_json_printer_enum>
   11f78:	b	11f8c <MyGame_OtherNameSpace_FromInclude_print_json_enum+0x68>
   11f7c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11f80:	ldr	r0, [fp, #-8]
   11f84:	bl	0 <flatcc_json_printer_int64>
   11f88:	nop			; (mov r0, r0)
   11f8c:	nop			; (mov r0, r0)
   11f90:	sub	sp, fp, #4
   11f94:	pop	{fp, pc}
   11f98:	.word	0x00000024
   11f9c:	.word	0x00000030

00011fa0 <MyGame_OtherNameSpace_Unused_print_json_struct>:
   11fa0:	push	{fp}		; (str fp, [sp, #-4]!)
   11fa4:	add	fp, sp, #0
   11fa8:	sub	sp, sp, #12
   11fac:	str	r0, [fp, #-8]
   11fb0:	str	r1, [fp, #-12]
   11fb4:	nop			; (mov r0, r0)
   11fb8:	add	sp, fp, #0
   11fbc:	pop	{fp}		; (ldr fp, [sp], #4)
   11fc0:	bx	lr

00011fc4 <MyGame_Example_neg_enum_print_json_enum>:
   11fc4:	push	{fp, lr}
   11fc8:	add	fp, sp, #4
   11fcc:	sub	sp, sp, #8
   11fd0:	str	r0, [fp, #-8]
   11fd4:	str	r1, [fp, #-12]
   11fd8:	ldr	r3, [fp, #-12]
   11fdc:	cmn	r3, #11
   11fe0:	beq	12008 <MyGame_Example_neg_enum_print_json_enum+0x44>
   11fe4:	cmn	r3, #10
   11fe8:	beq	1201c <MyGame_Example_neg_enum_print_json_enum+0x58>
   11fec:	cmn	r3, #12
   11ff0:	bne	12030 <MyGame_Example_neg_enum_print_json_enum+0x6c>
   11ff4:	mov	r2, #4
   11ff8:	ldr	r1, [pc, #76]	; 1204c <MyGame_Example_neg_enum_print_json_enum+0x88>
   11ffc:	ldr	r0, [fp, #-8]
   12000:	bl	0 <flatcc_json_printer_enum>
   12004:	b	12040 <MyGame_Example_neg_enum_print_json_enum+0x7c>
   12008:	mov	r2, #4
   1200c:	ldr	r1, [pc, #60]	; 12050 <MyGame_Example_neg_enum_print_json_enum+0x8c>
   12010:	ldr	r0, [fp, #-8]
   12014:	bl	0 <flatcc_json_printer_enum>
   12018:	b	12040 <MyGame_Example_neg_enum_print_json_enum+0x7c>
   1201c:	mov	r2, #4
   12020:	ldr	r1, [pc, #44]	; 12054 <MyGame_Example_neg_enum_print_json_enum+0x90>
   12024:	ldr	r0, [fp, #-8]
   12028:	bl	0 <flatcc_json_printer_enum>
   1202c:	b	12040 <MyGame_Example_neg_enum_print_json_enum+0x7c>
   12030:	ldr	r1, [fp, #-12]
   12034:	ldr	r0, [fp, #-8]
   12038:	bl	0 <flatcc_json_printer_int32>
   1203c:	nop			; (mov r0, r0)
   12040:	nop			; (mov r0, r0)
   12044:	sub	sp, fp, #4
   12048:	pop	{fp, pc}
   1204c:	.word	0x00000034
   12050:	.word	0x0000003c
   12054:	.word	0x00000044

00012058 <MyGame_Example_int_enum_print_json_enum>:
   12058:	push	{fp, lr}
   1205c:	add	fp, sp, #4
   12060:	sub	sp, sp, #8
   12064:	str	r0, [fp, #-8]
   12068:	str	r1, [fp, #-12]
   1206c:	ldr	r3, [fp, #-12]
   12070:	cmn	r3, #1
   12074:	beq	120b4 <MyGame_Example_int_enum_print_json_enum+0x5c>
   12078:	cmn	r3, #1
   1207c:	bgt	1208c <MyGame_Example_int_enum_print_json_enum+0x34>
   12080:	cmn	r3, #2
   12084:	beq	120a0 <MyGame_Example_int_enum_print_json_enum+0x48>
   12088:	b	120f0 <MyGame_Example_int_enum_print_json_enum+0x98>
   1208c:	cmp	r3, #2
   12090:	beq	120c8 <MyGame_Example_int_enum_print_json_enum+0x70>
   12094:	cmp	r3, #42	; 0x2a
   12098:	beq	120dc <MyGame_Example_int_enum_print_json_enum+0x84>
   1209c:	b	120f0 <MyGame_Example_int_enum_print_json_enum+0x98>
   120a0:	mov	r2, #6
   120a4:	ldr	r1, [pc, #96]	; 1210c <MyGame_Example_int_enum_print_json_enum+0xb4>
   120a8:	ldr	r0, [fp, #-8]
   120ac:	bl	0 <flatcc_json_printer_enum>
   120b0:	b	12100 <MyGame_Example_int_enum_print_json_enum+0xa8>
   120b4:	mov	r2, #7
   120b8:	ldr	r1, [pc, #80]	; 12110 <MyGame_Example_int_enum_print_json_enum+0xb8>
   120bc:	ldr	r0, [fp, #-8]
   120c0:	bl	0 <flatcc_json_printer_enum>
   120c4:	b	12100 <MyGame_Example_int_enum_print_json_enum+0xa8>
   120c8:	mov	r2, #4
   120cc:	ldr	r1, [pc, #64]	; 12114 <MyGame_Example_int_enum_print_json_enum+0xbc>
   120d0:	ldr	r0, [fp, #-8]
   120d4:	bl	0 <flatcc_json_printer_enum>
   120d8:	b	12100 <MyGame_Example_int_enum_print_json_enum+0xa8>
   120dc:	mov	r2, #4
   120e0:	ldr	r1, [pc, #48]	; 12118 <MyGame_Example_int_enum_print_json_enum+0xc0>
   120e4:	ldr	r0, [fp, #-8]
   120e8:	bl	0 <flatcc_json_printer_enum>
   120ec:	b	12100 <MyGame_Example_int_enum_print_json_enum+0xa8>
   120f0:	ldr	r1, [fp, #-12]
   120f4:	ldr	r0, [fp, #-8]
   120f8:	bl	0 <flatcc_json_printer_int32>
   120fc:	nop			; (mov r0, r0)
   12100:	nop			; (mov r0, r0)
   12104:	sub	sp, fp, #4
   12108:	pop	{fp, pc}
   1210c:	.word	0x0000004c
   12110:	.word	0x00000054
   12114:	.word	0x0000005c
   12118:	.word	0x00000064

0001211c <MyGame_Example_hex_enum_print_json_enum>:
   1211c:	push	{fp, lr}
   12120:	add	fp, sp, #4
   12124:	sub	sp, sp, #8
   12128:	str	r0, [fp, #-8]
   1212c:	str	r1, [fp, #-12]
   12130:	ldr	r3, [fp, #-12]
   12134:	cmp	r3, #3
   12138:	beq	12164 <MyGame_Example_hex_enum_print_json_enum+0x48>
   1213c:	ldr	r2, [pc, #100]	; 121a8 <MyGame_Example_hex_enum_print_json_enum+0x8c>
   12140:	cmp	r3, r2
   12144:	beq	12178 <MyGame_Example_hex_enum_print_json_enum+0x5c>
   12148:	cmn	r3, #2
   1214c:	bne	1218c <MyGame_Example_hex_enum_print_json_enum+0x70>
   12150:	mov	r2, #6
   12154:	ldr	r1, [pc, #80]	; 121ac <MyGame_Example_hex_enum_print_json_enum+0x90>
   12158:	ldr	r0, [fp, #-8]
   1215c:	bl	0 <flatcc_json_printer_enum>
   12160:	b	1219c <MyGame_Example_hex_enum_print_json_enum+0x80>
   12164:	mov	r2, #4
   12168:	ldr	r1, [pc, #64]	; 121b0 <MyGame_Example_hex_enum_print_json_enum+0x94>
   1216c:	ldr	r0, [fp, #-8]
   12170:	bl	0 <flatcc_json_printer_enum>
   12174:	b	1219c <MyGame_Example_hex_enum_print_json_enum+0x80>
   12178:	mov	r2, #4
   1217c:	ldr	r1, [pc, #48]	; 121b4 <MyGame_Example_hex_enum_print_json_enum+0x98>
   12180:	ldr	r0, [fp, #-8]
   12184:	bl	0 <flatcc_json_printer_enum>
   12188:	b	1219c <MyGame_Example_hex_enum_print_json_enum+0x80>
   1218c:	ldr	r1, [fp, #-12]
   12190:	ldr	r0, [fp, #-8]
   12194:	bl	0 <flatcc_json_printer_int32>
   12198:	nop			; (mov r0, r0)
   1219c:	nop			; (mov r0, r0)
   121a0:	sub	sp, fp, #4
   121a4:	pop	{fp, pc}
   121a8:	.word	0x7eafbeaf
   121ac:	.word	0x0000006c
   121b0:	.word	0x00000074
   121b4:	.word	0x0000007c

000121b8 <MyGame_Example_Color_print_json_enum>:
   121b8:	push	{fp, lr}
   121bc:	add	fp, sp, #4
   121c0:	sub	sp, sp, #24
   121c4:	str	r0, [fp, #-24]	; 0xffffffe8
   121c8:	mov	r3, r1
   121cc:	strb	r3, [fp, #-25]	; 0xffffffe7
   121d0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   121d4:	strb	r3, [fp, #-9]
   121d8:	ldrb	r2, [fp, #-9]
   121dc:	ldrb	r3, [fp, #-9]
   121e0:	sub	r3, r3, #1
   121e4:	and	r3, r3, r2
   121e8:	cmp	r3, #0
   121ec:	movne	r3, #1
   121f0:	moveq	r3, #0
   121f4:	uxtb	r3, r3
   121f8:	str	r3, [fp, #-16]
   121fc:	mov	r3, #0
   12200:	str	r3, [fp, #-8]
   12204:	ldrb	r3, [fp, #-9]
   12208:	and	r3, r3, #244	; 0xf4
   1220c:	cmp	r3, #0
   12210:	bne	12220 <MyGame_Example_Color_print_json_enum+0x68>
   12214:	ldrb	r3, [fp, #-9]
   12218:	cmp	r3, #0
   1221c:	bne	12234 <MyGame_Example_Color_print_json_enum+0x7c>
   12220:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   12224:	mov	r1, r3
   12228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1222c:	bl	0 <flatcc_json_printer_int8>
   12230:	b	122d0 <MyGame_Example_Color_print_json_enum+0x118>
   12234:	ldr	r1, [fp, #-16]
   12238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1223c:	bl	0 <flatcc_json_printer_delimit_enum_flags>
   12240:	ldrb	r3, [fp, #-9]
   12244:	and	r3, r3, #1
   12248:	cmp	r3, #0
   1224c:	beq	1226c <MyGame_Example_Color_print_json_enum+0xb4>
   12250:	ldr	r1, [fp, #-8]
   12254:	add	r3, r1, #1
   12258:	str	r3, [fp, #-8]
   1225c:	mov	r3, #3
   12260:	ldr	r2, [pc, #112]	; 122d8 <MyGame_Example_Color_print_json_enum+0x120>
   12264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12268:	bl	0 <flatcc_json_printer_enum_flag>
   1226c:	ldrb	r3, [fp, #-9]
   12270:	and	r3, r3, #2
   12274:	cmp	r3, #0
   12278:	beq	12298 <MyGame_Example_Color_print_json_enum+0xe0>
   1227c:	ldr	r1, [fp, #-8]
   12280:	add	r3, r1, #1
   12284:	str	r3, [fp, #-8]
   12288:	mov	r3, #5
   1228c:	ldr	r2, [pc, #72]	; 122dc <MyGame_Example_Color_print_json_enum+0x124>
   12290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12294:	bl	0 <flatcc_json_printer_enum_flag>
   12298:	ldrb	r3, [fp, #-9]
   1229c:	and	r3, r3, #8
   122a0:	cmp	r3, #0
   122a4:	beq	122c4 <MyGame_Example_Color_print_json_enum+0x10c>
   122a8:	ldr	r1, [fp, #-8]
   122ac:	add	r3, r1, #1
   122b0:	str	r3, [fp, #-8]
   122b4:	mov	r3, #4
   122b8:	ldr	r2, [pc, #32]	; 122e0 <MyGame_Example_Color_print_json_enum+0x128>
   122bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122c0:	bl	0 <flatcc_json_printer_enum_flag>
   122c4:	ldr	r1, [fp, #-16]
   122c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122cc:	bl	0 <flatcc_json_printer_delimit_enum_flags>
   122d0:	sub	sp, fp, #4
   122d4:	pop	{fp, pc}
   122d8:	.word	0x00000084
   122dc:	.word	0x00000088
   122e0:	.word	0x00000090

000122e4 <MyGame_Example_notemptyenum_print_json_enum>:
   122e4:	push	{fp, lr}
   122e8:	add	fp, sp, #4
   122ec:	sub	sp, sp, #8
   122f0:	str	r0, [fp, #-8]
   122f4:	str	r1, [fp, #-12]
   122f8:	ldr	r3, [fp, #-12]
   122fc:	cmp	r3, #0
   12300:	bne	12318 <MyGame_Example_notemptyenum_print_json_enum+0x34>
   12304:	mov	r2, #1
   12308:	ldr	r1, [pc, #36]	; 12334 <MyGame_Example_notemptyenum_print_json_enum+0x50>
   1230c:	ldr	r0, [fp, #-8]
   12310:	bl	0 <flatcc_json_printer_enum>
   12314:	b	12328 <MyGame_Example_notemptyenum_print_json_enum+0x44>
   12318:	ldr	r1, [fp, #-12]
   1231c:	ldr	r0, [fp, #-8]
   12320:	bl	0 <flatcc_json_printer_int32>
   12324:	nop			; (mov r0, r0)
   12328:	nop			; (mov r0, r0)
   1232c:	sub	sp, fp, #4
   12330:	pop	{fp, pc}
   12334:	.word	0x00000098

00012338 <MyGame_Example_Foo_print_json_union_type>:
   12338:	push	{fp, lr}
   1233c:	add	fp, sp, #4
   12340:	sub	sp, sp, #8
   12344:	str	r0, [fp, #-8]
   12348:	mov	r3, r1
   1234c:	strb	r3, [fp, #-9]
   12350:	ldrb	r3, [fp, #-9]
   12354:	cmp	r3, #1
   12358:	bne	12370 <MyGame_Example_Foo_print_json_union_type+0x38>
   1235c:	mov	r2, #17
   12360:	ldr	r1, [pc, #40]	; 12390 <MyGame_Example_Foo_print_json_union_type+0x58>
   12364:	ldr	r0, [fp, #-8]
   12368:	bl	0 <flatcc_json_printer_enum>
   1236c:	b	12384 <MyGame_Example_Foo_print_json_union_type+0x4c>
   12370:	mov	r2, #4
   12374:	ldr	r1, [pc, #24]	; 12394 <MyGame_Example_Foo_print_json_union_type+0x5c>
   12378:	ldr	r0, [fp, #-8]
   1237c:	bl	0 <flatcc_json_printer_enum>
   12380:	nop			; (mov r0, r0)
   12384:	nop			; (mov r0, r0)
   12388:	sub	sp, fp, #4
   1238c:	pop	{fp, pc}
   12390:	.word	0x0000009c
   12394:	.word	0x000000b0

00012398 <MyGame_Example_Foo_print_json_union>:
   12398:	push	{fp, lr}
   1239c:	add	fp, sp, #4
   123a0:	sub	sp, sp, #8
   123a4:	str	r0, [fp, #-8]
   123a8:	str	r1, [fp, #-12]
   123ac:	ldr	r3, [fp, #-12]
   123b0:	ldrb	r3, [r3, #8]
   123b4:	cmp	r3, #1
   123b8:	beq	123c0 <MyGame_Example_Foo_print_json_union+0x28>
   123bc:	b	123d4 <MyGame_Example_Foo_print_json_union+0x3c>
   123c0:	ldr	r2, [pc, #24]	; 123e0 <MyGame_Example_Foo_print_json_union+0x48>
   123c4:	ldr	r1, [fp, #-12]
   123c8:	ldr	r0, [fp, #-8]
   123cc:	bl	0 <flatcc_json_printer_union_table>
   123d0:	nop			; (mov r0, r0)
   123d4:	nop			; (mov r0, r0)
   123d8:	sub	sp, fp, #4
   123dc:	pop	{fp, pc}
   123e0:	.word	0x00000000

000123e4 <MyGame_Example_Any_print_json_union_type>:
   123e4:	push	{fp, lr}
   123e8:	add	fp, sp, #4
   123ec:	sub	sp, sp, #8
   123f0:	str	r0, [fp, #-8]
   123f4:	mov	r3, r1
   123f8:	strb	r3, [fp, #-9]
   123fc:	ldrb	r3, [fp, #-9]
   12400:	sub	r3, r3, #1
   12404:	cmp	r3, #3
   12408:	ldrls	pc, [pc, r3, lsl #2]
   1240c:	b	12470 <MyGame_Example_Any_print_json_union_type+0x8c>
   12410:	.word	0x00012420
   12414:	.word	0x00012434
   12418:	.word	0x00012448
   1241c:	.word	0x0001245c
   12420:	mov	r2, #7
   12424:	ldr	r1, [pc, #100]	; 12490 <MyGame_Example_Any_print_json_union_type+0xac>
   12428:	ldr	r0, [fp, #-8]
   1242c:	bl	0 <flatcc_json_printer_enum>
   12430:	b	12484 <MyGame_Example_Any_print_json_union_type+0xa0>
   12434:	mov	r2, #23
   12438:	ldr	r1, [pc, #84]	; 12494 <MyGame_Example_Any_print_json_union_type+0xb0>
   1243c:	ldr	r0, [fp, #-8]
   12440:	bl	0 <flatcc_json_printer_enum>
   12444:	b	12484 <MyGame_Example_Any_print_json_union_type+0xa0>
   12448:	mov	r2, #8
   1244c:	ldr	r1, [pc, #68]	; 12498 <MyGame_Example_Any_print_json_union_type+0xb4>
   12450:	ldr	r0, [fp, #-8]
   12454:	bl	0 <flatcc_json_printer_enum>
   12458:	b	12484 <MyGame_Example_Any_print_json_union_type+0xa0>
   1245c:	mov	r2, #3
   12460:	ldr	r1, [pc, #52]	; 1249c <MyGame_Example_Any_print_json_union_type+0xb8>
   12464:	ldr	r0, [fp, #-8]
   12468:	bl	0 <flatcc_json_printer_enum>
   1246c:	b	12484 <MyGame_Example_Any_print_json_union_type+0xa0>
   12470:	mov	r2, #4
   12474:	ldr	r1, [pc, #36]	; 124a0 <MyGame_Example_Any_print_json_union_type+0xbc>
   12478:	ldr	r0, [fp, #-8]
   1247c:	bl	0 <flatcc_json_printer_enum>
   12480:	nop			; (mov r0, r0)
   12484:	nop			; (mov r0, r0)
   12488:	sub	sp, fp, #4
   1248c:	pop	{fp, pc}
   12490:	.word	0x000000b8
   12494:	.word	0x000000c0
   12498:	.word	0x000000d8
   1249c:	.word	0x000000e4
   124a0:	.word	0x000000b0

000124a4 <MyGame_Example_Any_print_json_union>:
   124a4:	push	{fp, lr}
   124a8:	add	fp, sp, #4
   124ac:	sub	sp, sp, #8
   124b0:	str	r0, [fp, #-8]
   124b4:	str	r1, [fp, #-12]
   124b8:	ldr	r3, [fp, #-12]
   124bc:	ldrb	r3, [r3, #8]
   124c0:	sub	r3, r3, #1
   124c4:	cmp	r3, #3
   124c8:	ldrls	pc, [pc, r3, lsl #2]
   124cc:	b	12530 <MyGame_Example_Any_print_json_union+0x8c>
   124d0:	.word	0x000124e0
   124d4:	.word	0x000124f4
   124d8:	.word	0x00012508
   124dc:	.word	0x0001251c
   124e0:	ldr	r2, [pc, #88]	; 12540 <MyGame_Example_Any_print_json_union+0x9c>
   124e4:	ldr	r1, [fp, #-12]
   124e8:	ldr	r0, [fp, #-8]
   124ec:	bl	0 <flatcc_json_printer_union_table>
   124f0:	b	12534 <MyGame_Example_Any_print_json_union+0x90>
   124f4:	ldr	r2, [pc, #72]	; 12544 <MyGame_Example_Any_print_json_union+0xa0>
   124f8:	ldr	r1, [fp, #-12]
   124fc:	ldr	r0, [fp, #-8]
   12500:	bl	0 <flatcc_json_printer_union_table>
   12504:	b	12534 <MyGame_Example_Any_print_json_union+0x90>
   12508:	ldr	r2, [pc, #56]	; 12548 <MyGame_Example_Any_print_json_union+0xa4>
   1250c:	ldr	r1, [fp, #-12]
   12510:	ldr	r0, [fp, #-8]
   12514:	bl	0 <flatcc_json_printer_union_table>
   12518:	b	12534 <MyGame_Example_Any_print_json_union+0x90>
   1251c:	ldr	r2, [pc, #40]	; 1254c <MyGame_Example_Any_print_json_union+0xa8>
   12520:	ldr	r1, [fp, #-12]
   12524:	ldr	r0, [fp, #-8]
   12528:	bl	0 <flatcc_json_printer_union_table>
   1252c:	b	12534 <MyGame_Example_Any_print_json_union+0x90>
   12530:	nop			; (mov r0, r0)
   12534:	nop			; (mov r0, r0)
   12538:	sub	sp, fp, #4
   1253c:	pop	{fp, pc}
	...

00012550 <Fantasy_Character_print_json_union_type>:
   12550:	push	{fp, lr}
   12554:	add	fp, sp, #4
   12558:	sub	sp, sp, #8
   1255c:	str	r0, [fp, #-8]
   12560:	mov	r3, r1
   12564:	strb	r3, [fp, #-9]
   12568:	ldrb	r3, [fp, #-9]
   1256c:	cmp	r3, #9
   12570:	beq	125d4 <Fantasy_Character_print_json_union_type+0x84>
   12574:	cmp	r3, #9
   12578:	bgt	12590 <Fantasy_Character_print_json_union_type+0x40>
   1257c:	cmp	r3, #2
   12580:	beq	125ac <Fantasy_Character_print_json_union_type+0x5c>
   12584:	cmp	r3, #8
   12588:	beq	125c0 <Fantasy_Character_print_json_union_type+0x70>
   1258c:	b	12624 <Fantasy_Character_print_json_union_type+0xd4>
   12590:	cmp	r3, #11
   12594:	beq	125fc <Fantasy_Character_print_json_union_type+0xac>
   12598:	cmp	r3, #11
   1259c:	blt	125e8 <Fantasy_Character_print_json_union_type+0x98>
   125a0:	cmp	r3, #255	; 0xff
   125a4:	beq	12610 <Fantasy_Character_print_json_union_type+0xc0>
   125a8:	b	12624 <Fantasy_Character_print_json_union_type+0xd4>
   125ac:	mov	r2, #5
   125b0:	ldr	r1, [pc, #140]	; 12644 <Fantasy_Character_print_json_union_type+0xf4>
   125b4:	ldr	r0, [fp, #-8]
   125b8:	bl	0 <flatcc_json_printer_enum>
   125bc:	b	12638 <Fantasy_Character_print_json_union_type+0xe8>
   125c0:	mov	r2, #8
   125c4:	ldr	r1, [pc, #124]	; 12648 <Fantasy_Character_print_json_union_type+0xf8>
   125c8:	ldr	r0, [fp, #-8]
   125cc:	bl	0 <flatcc_json_printer_enum>
   125d0:	b	12638 <Fantasy_Character_print_json_union_type+0xe8>
   125d4:	mov	r2, #5
   125d8:	ldr	r1, [pc, #108]	; 1264c <Fantasy_Character_print_json_union_type+0xfc>
   125dc:	ldr	r0, [fp, #-8]
   125e0:	bl	0 <flatcc_json_printer_enum>
   125e4:	b	12638 <Fantasy_Character_print_json_union_type+0xe8>
   125e8:	mov	r2, #7
   125ec:	ldr	r1, [pc, #92]	; 12650 <Fantasy_Character_print_json_union_type+0x100>
   125f0:	ldr	r0, [fp, #-8]
   125f4:	bl	0 <flatcc_json_printer_enum>
   125f8:	b	12638 <Fantasy_Character_print_json_union_type+0xe8>
   125fc:	mov	r2, #5
   12600:	ldr	r1, [pc, #76]	; 12654 <Fantasy_Character_print_json_union_type+0x104>
   12604:	ldr	r0, [fp, #-8]
   12608:	bl	0 <flatcc_json_printer_enum>
   1260c:	b	12638 <Fantasy_Character_print_json_union_type+0xe8>
   12610:	mov	r2, #6
   12614:	ldr	r1, [pc, #60]	; 12658 <Fantasy_Character_print_json_union_type+0x108>
   12618:	ldr	r0, [fp, #-8]
   1261c:	bl	0 <flatcc_json_printer_enum>
   12620:	b	12638 <Fantasy_Character_print_json_union_type+0xe8>
   12624:	mov	r2, #4
   12628:	ldr	r1, [pc, #44]	; 1265c <Fantasy_Character_print_json_union_type+0x10c>
   1262c:	ldr	r0, [fp, #-8]
   12630:	bl	0 <flatcc_json_printer_enum>
   12634:	nop			; (mov r0, r0)
   12638:	nop			; (mov r0, r0)
   1263c:	sub	sp, fp, #4
   12640:	pop	{fp, pc}
   12644:	.word	0x000000e8
   12648:	.word	0x000000f0
   1264c:	.word	0x000000fc
   12650:	.word	0x00000104
   12654:	.word	0x0000010c
   12658:	.word	0x00000114
   1265c:	.word	0x000000b0

00012660 <Fantasy_Character_print_json_union>:
   12660:	push	{fp, lr}
   12664:	add	fp, sp, #4
   12668:	sub	sp, sp, #8
   1266c:	str	r0, [fp, #-8]
   12670:	str	r1, [fp, #-12]
   12674:	ldr	r3, [fp, #-12]
   12678:	ldrb	r3, [r3, #8]
   1267c:	cmp	r3, #9
   12680:	beq	126e4 <Fantasy_Character_print_json_union+0x84>
   12684:	cmp	r3, #9
   12688:	bgt	126a0 <Fantasy_Character_print_json_union+0x40>
   1268c:	cmp	r3, #2
   12690:	beq	126bc <Fantasy_Character_print_json_union+0x5c>
   12694:	cmp	r3, #8
   12698:	beq	126d0 <Fantasy_Character_print_json_union+0x70>
   1269c:	b	1272c <Fantasy_Character_print_json_union+0xcc>
   126a0:	cmp	r3, #11
   126a4:	beq	1270c <Fantasy_Character_print_json_union+0xac>
   126a8:	cmp	r3, #11
   126ac:	blt	126f8 <Fantasy_Character_print_json_union+0x98>
   126b0:	cmp	r3, #255	; 0xff
   126b4:	beq	1271c <Fantasy_Character_print_json_union+0xbc>
   126b8:	b	1272c <Fantasy_Character_print_json_union+0xcc>
   126bc:	ldr	r2, [pc, #116]	; 12738 <Fantasy_Character_print_json_union+0xd8>
   126c0:	ldr	r1, [fp, #-12]
   126c4:	ldr	r0, [fp, #-8]
   126c8:	bl	0 <flatcc_json_printer_union_table>
   126cc:	b	1272c <Fantasy_Character_print_json_union+0xcc>
   126d0:	ldr	r2, [pc, #100]	; 1273c <Fantasy_Character_print_json_union+0xdc>
   126d4:	ldr	r1, [fp, #-12]
   126d8:	ldr	r0, [fp, #-8]
   126dc:	bl	0 <flatcc_json_printer_union_struct>
   126e0:	b	1272c <Fantasy_Character_print_json_union+0xcc>
   126e4:	ldr	r2, [pc, #84]	; 12740 <Fantasy_Character_print_json_union+0xe0>
   126e8:	ldr	r1, [fp, #-12]
   126ec:	ldr	r0, [fp, #-8]
   126f0:	bl	0 <flatcc_json_printer_union_struct>
   126f4:	b	1272c <Fantasy_Character_print_json_union+0xcc>
   126f8:	ldr	r2, [pc, #64]	; 12740 <Fantasy_Character_print_json_union+0xe0>
   126fc:	ldr	r1, [fp, #-12]
   12700:	ldr	r0, [fp, #-8]
   12704:	bl	0 <flatcc_json_printer_union_struct>
   12708:	b	1272c <Fantasy_Character_print_json_union+0xcc>
   1270c:	ldr	r1, [fp, #-12]
   12710:	ldr	r0, [fp, #-8]
   12714:	bl	0 <flatcc_json_printer_union_string>
   12718:	b	1272c <Fantasy_Character_print_json_union+0xcc>
   1271c:	ldr	r1, [fp, #-12]
   12720:	ldr	r0, [fp, #-8]
   12724:	bl	0 <flatcc_json_printer_union_string>
   12728:	nop			; (mov r0, r0)
   1272c:	nop			; (mov r0, r0)
   12730:	sub	sp, fp, #4
   12734:	pop	{fp, pc}
	...

00012744 <InGlobalNamespace_print_json_struct>:
   12744:	push	{fp}		; (str fp, [sp, #-4]!)
   12748:	add	fp, sp, #0
   1274c:	sub	sp, sp, #12
   12750:	str	r0, [fp, #-8]
   12754:	str	r1, [fp, #-12]
   12758:	nop			; (mov r0, r0)
   1275c:	add	sp, fp, #0
   12760:	pop	{fp}		; (ldr fp, [sp], #4)
   12764:	bx	lr

00012768 <MyGame_Example_Test_print_json_struct>:
   12768:	push	{fp, lr}
   1276c:	add	fp, sp, #4
   12770:	sub	sp, sp, #16
   12774:	str	r0, [fp, #-8]
   12778:	str	r1, [fp, #-12]
   1277c:	mov	r3, #1
   12780:	str	r3, [sp, #4]
   12784:	ldr	r3, [pc, #68]	; 127d0 <MyGame_Example_Test_print_json_struct+0x68>
   12788:	str	r3, [sp]
   1278c:	mov	r3, #0
   12790:	ldr	r2, [fp, #-12]
   12794:	mov	r1, #0
   12798:	ldr	r0, [fp, #-8]
   1279c:	bl	0 <flatcc_json_printer_int16_struct_field>
   127a0:	mov	r3, #1
   127a4:	str	r3, [sp, #4]
   127a8:	ldr	r3, [pc, #36]	; 127d4 <MyGame_Example_Test_print_json_struct+0x6c>
   127ac:	str	r3, [sp]
   127b0:	mov	r3, #2
   127b4:	ldr	r2, [fp, #-12]
   127b8:	mov	r1, #1
   127bc:	ldr	r0, [fp, #-8]
   127c0:	bl	0 <flatcc_json_printer_int8_struct_field>
   127c4:	nop			; (mov r0, r0)
   127c8:	sub	sp, fp, #4
   127cc:	pop	{fp, pc}
   127d0:	.word	0x0000011c
   127d4:	.word	0x00000120

000127d8 <MyGame_Example_emptystruct_print_json_struct>:
   127d8:	push	{fp}		; (str fp, [sp, #-4]!)
   127dc:	add	fp, sp, #0
   127e0:	sub	sp, sp, #12
   127e4:	str	r0, [fp, #-8]
   127e8:	str	r1, [fp, #-12]
   127ec:	nop			; (mov r0, r0)
   127f0:	add	sp, fp, #0
   127f4:	pop	{fp}		; (ldr fp, [sp], #4)
   127f8:	bx	lr

000127fc <MyGame_Example_Vec3_print_json_struct>:
   127fc:	push	{fp, lr}
   12800:	add	fp, sp, #4
   12804:	sub	sp, sp, #24
   12808:	str	r0, [fp, #-8]
   1280c:	str	r1, [fp, #-12]
   12810:	mov	r3, #1
   12814:	str	r3, [sp, #4]
   12818:	ldr	r3, [pc, #228]	; 12904 <MyGame_Example_Vec3_print_json_struct+0x108>
   1281c:	str	r3, [sp]
   12820:	mov	r3, #0
   12824:	ldr	r2, [fp, #-12]
   12828:	mov	r1, #0
   1282c:	ldr	r0, [fp, #-8]
   12830:	bl	0 <flatcc_json_printer_float_struct_field>
   12834:	mov	r3, #1
   12838:	str	r3, [sp, #4]
   1283c:	ldr	r3, [pc, #196]	; 12908 <MyGame_Example_Vec3_print_json_struct+0x10c>
   12840:	str	r3, [sp]
   12844:	mov	r3, #4
   12848:	ldr	r2, [fp, #-12]
   1284c:	mov	r1, #1
   12850:	ldr	r0, [fp, #-8]
   12854:	bl	0 <flatcc_json_printer_float_struct_field>
   12858:	mov	r3, #1
   1285c:	str	r3, [sp, #4]
   12860:	ldr	r3, [pc, #164]	; 1290c <MyGame_Example_Vec3_print_json_struct+0x110>
   12864:	str	r3, [sp]
   12868:	mov	r3, #8
   1286c:	ldr	r2, [fp, #-12]
   12870:	mov	r1, #2
   12874:	ldr	r0, [fp, #-8]
   12878:	bl	0 <flatcc_json_printer_float_struct_field>
   1287c:	mov	r3, #5
   12880:	str	r3, [sp, #4]
   12884:	ldr	r3, [pc, #132]	; 12910 <MyGame_Example_Vec3_print_json_struct+0x114>
   12888:	str	r3, [sp]
   1288c:	mov	r3, #16
   12890:	ldr	r2, [fp, #-12]
   12894:	mov	r1, #3
   12898:	ldr	r0, [fp, #-8]
   1289c:	bl	0 <flatcc_json_printer_double_struct_field>
   128a0:	ldr	r3, [pc, #108]	; 12914 <MyGame_Example_Vec3_print_json_struct+0x118>
   128a4:	str	r3, [sp, #8]
   128a8:	mov	r3, #5
   128ac:	str	r3, [sp, #4]
   128b0:	ldr	r3, [pc, #96]	; 12918 <MyGame_Example_Vec3_print_json_struct+0x11c>
   128b4:	str	r3, [sp]
   128b8:	mov	r3, #24
   128bc:	ldr	r2, [fp, #-12]
   128c0:	mov	r1, #4
   128c4:	ldr	r0, [fp, #-8]
   128c8:	bl	0 <flatcc_json_printer_int8_enum_struct_field>
   128cc:	ldr	r3, [pc, #72]	; 1291c <MyGame_Example_Vec3_print_json_struct+0x120>
   128d0:	str	r3, [sp, #8]
   128d4:	mov	r3, #5
   128d8:	str	r3, [sp, #4]
   128dc:	ldr	r3, [pc, #60]	; 12920 <MyGame_Example_Vec3_print_json_struct+0x124>
   128e0:	str	r3, [sp]
   128e4:	mov	r3, #26
   128e8:	ldr	r2, [fp, #-12]
   128ec:	mov	r1, #5
   128f0:	ldr	r0, [fp, #-8]
   128f4:	bl	0 <flatcc_json_printer_embedded_struct_field>
   128f8:	nop			; (mov r0, r0)
   128fc:	sub	sp, fp, #4
   12900:	pop	{fp, pc}
   12904:	.word	0x00000098
   12908:	.word	0x00000124
   1290c:	.word	0x00000128
   12910:	.word	0x0000012c
   12914:	.word	0x00000000
   12918:	.word	0x00000134
   1291c:	.word	0x00000000
   12920:	.word	0x0000013c

00012924 <MyGame_Example_Ability_print_json_struct>:
   12924:	push	{fp, lr}
   12928:	add	fp, sp, #4
   1292c:	sub	sp, sp, #16
   12930:	str	r0, [fp, #-8]
   12934:	str	r1, [fp, #-12]
   12938:	mov	r3, #2
   1293c:	str	r3, [sp, #4]
   12940:	ldr	r3, [pc, #68]	; 1298c <MyGame_Example_Ability_print_json_struct+0x68>
   12944:	str	r3, [sp]
   12948:	mov	r3, #0
   1294c:	ldr	r2, [fp, #-12]
   12950:	mov	r1, #0
   12954:	ldr	r0, [fp, #-8]
   12958:	bl	0 <flatcc_json_printer_uint32_struct_field>
   1295c:	mov	r3, #8
   12960:	str	r3, [sp, #4]
   12964:	ldr	r3, [pc, #36]	; 12990 <MyGame_Example_Ability_print_json_struct+0x6c>
   12968:	str	r3, [sp]
   1296c:	mov	r3, #4
   12970:	ldr	r2, [fp, #-12]
   12974:	mov	r1, #1
   12978:	ldr	r0, [fp, #-8]
   1297c:	bl	0 <flatcc_json_printer_uint32_struct_field>
   12980:	nop			; (mov r0, r0)
   12984:	sub	sp, fp, #4
   12988:	pop	{fp, pc}
   1298c:	.word	0x00000144
   12990:	.word	0x00000148

00012994 <Fantasy_Rapunzel_print_json_struct>:
   12994:	push	{fp, lr}
   12998:	add	fp, sp, #4
   1299c:	sub	sp, sp, #16
   129a0:	str	r0, [fp, #-8]
   129a4:	str	r1, [fp, #-12]
   129a8:	mov	r3, #11
   129ac:	str	r3, [sp, #4]
   129b0:	ldr	r3, [pc, #32]	; 129d8 <Fantasy_Rapunzel_print_json_struct+0x44>
   129b4:	str	r3, [sp]
   129b8:	mov	r3, #0
   129bc:	ldr	r2, [fp, #-12]
   129c0:	mov	r1, #0
   129c4:	ldr	r0, [fp, #-8]
   129c8:	bl	0 <flatcc_json_printer_uint16_struct_field>
   129cc:	nop			; (mov r0, r0)
   129d0:	sub	sp, fp, #4
   129d4:	pop	{fp, pc}
   129d8:	.word	0x00000154

000129dc <Fantasy_BookReader_print_json_struct>:
   129dc:	push	{fp, lr}
   129e0:	add	fp, sp, #4
   129e4:	sub	sp, sp, #16
   129e8:	str	r0, [fp, #-8]
   129ec:	str	r1, [fp, #-12]
   129f0:	mov	r3, #10
   129f4:	str	r3, [sp, #4]
   129f8:	ldr	r3, [pc, #32]	; 12a20 <Fantasy_BookReader_print_json_struct+0x44>
   129fc:	str	r3, [sp]
   12a00:	mov	r3, #0
   12a04:	ldr	r2, [fp, #-12]
   12a08:	mov	r1, #0
   12a0c:	ldr	r0, [fp, #-8]
   12a10:	bl	0 <flatcc_json_printer_int32_struct_field>
   12a14:	nop			; (mov r0, r0)
   12a18:	sub	sp, fp, #4
   12a1c:	pop	{fp, pc}
   12a20:	.word	0x00000160

00012a24 <MyGame_InParentNamespace_print_json_table>:
   12a24:	push	{fp}		; (str fp, [sp, #-4]!)
   12a28:	add	fp, sp, #0
   12a2c:	sub	sp, sp, #12
   12a30:	str	r0, [fp, #-8]
   12a34:	str	r1, [fp, #-12]
   12a38:	nop			; (mov r0, r0)
   12a3c:	add	sp, fp, #0
   12a40:	pop	{fp}		; (ldr fp, [sp], #4)
   12a44:	bx	lr

00012a48 <MyGame_Example2_Monster_print_json_table>:
   12a48:	push	{fp}		; (str fp, [sp, #-4]!)
   12a4c:	add	fp, sp, #0
   12a50:	sub	sp, sp, #12
   12a54:	str	r0, [fp, #-8]
   12a58:	str	r1, [fp, #-12]
   12a5c:	nop			; (mov r0, r0)
   12a60:	add	sp, fp, #0
   12a64:	pop	{fp}		; (ldr fp, [sp], #4)
   12a68:	bx	lr

00012a6c <MyGame_Example_emptytable_print_json_table>:
   12a6c:	push	{fp}		; (str fp, [sp, #-4]!)
   12a70:	add	fp, sp, #0
   12a74:	sub	sp, sp, #12
   12a78:	str	r0, [fp, #-8]
   12a7c:	str	r1, [fp, #-12]
   12a80:	nop			; (mov r0, r0)
   12a84:	add	sp, fp, #0
   12a88:	pop	{fp}		; (ldr fp, [sp], #4)
   12a8c:	bx	lr

00012a90 <MyGame_Example_with_emptystruct_print_json_table>:
   12a90:	push	{fp, lr}
   12a94:	add	fp, sp, #4
   12a98:	sub	sp, sp, #16
   12a9c:	str	r0, [fp, #-8]
   12aa0:	str	r1, [fp, #-12]
   12aa4:	ldr	r3, [pc, #40]	; 12ad4 <MyGame_Example_with_emptystruct_print_json_table+0x44>
   12aa8:	str	r3, [sp, #4]
   12aac:	mov	r3, #5
   12ab0:	str	r3, [sp]
   12ab4:	ldr	r3, [pc, #28]	; 12ad8 <MyGame_Example_with_emptystruct_print_json_table+0x48>
   12ab8:	mov	r2, #0
   12abc:	ldr	r1, [fp, #-12]
   12ac0:	ldr	r0, [fp, #-8]
   12ac4:	bl	0 <flatcc_json_printer_struct_field>
   12ac8:	nop			; (mov r0, r0)
   12acc:	sub	sp, fp, #4
   12ad0:	pop	{fp, pc}
   12ad4:	.word	0x00000000
   12ad8:	.word	0x0000016c

00012adc <MyGame_Example_TestSimpleTableWithEnum_print_json_table>:
   12adc:	push	{fp, lr}
   12ae0:	add	fp, sp, #4
   12ae4:	sub	sp, sp, #24
   12ae8:	str	r0, [fp, #-8]
   12aec:	str	r1, [fp, #-12]
   12af0:	ldr	r3, [pc, #164]	; 12b9c <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xc0>
   12af4:	str	r3, [sp, #8]
   12af8:	mov	r3, #2
   12afc:	str	r3, [sp, #4]
   12b00:	mov	r3, #5
   12b04:	str	r3, [sp]
   12b08:	ldr	r3, [pc, #144]	; 12ba0 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xc4>
   12b0c:	mov	r2, #0
   12b10:	ldr	r1, [fp, #-12]
   12b14:	ldr	r0, [fp, #-8]
   12b18:	bl	0 <flatcc_json_printer_int8_enum_field>
   12b1c:	ldr	r3, [pc, #120]	; 12b9c <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xc0>
   12b20:	str	r3, [sp, #8]
   12b24:	mov	r3, #2
   12b28:	str	r3, [sp, #4]
   12b2c:	mov	r3, #6
   12b30:	str	r3, [sp]
   12b34:	ldr	r3, [pc, #104]	; 12ba4 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xc8>
   12b38:	mov	r2, #1
   12b3c:	ldr	r1, [fp, #-12]
   12b40:	ldr	r0, [fp, #-8]
   12b44:	bl	0 <flatcc_json_printer_int8_enum_field>
   12b48:	mov	r3, #2
   12b4c:	str	r3, [sp, #4]
   12b50:	mov	r3, #2
   12b54:	str	r3, [sp]
   12b58:	ldr	r3, [pc, #72]	; 12ba8 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xcc>
   12b5c:	mov	r2, #2
   12b60:	ldr	r1, [fp, #-12]
   12b64:	ldr	r0, [fp, #-8]
   12b68:	bl	0 <flatcc_json_printer_uint8_field>
   12b6c:	mov	r3, #2
   12b70:	str	r3, [sp, #4]
   12b74:	mov	r3, #3
   12b78:	str	r3, [sp]
   12b7c:	ldr	r3, [pc, #40]	; 12bac <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xd0>
   12b80:	mov	r2, #3
   12b84:	ldr	r1, [fp, #-12]
   12b88:	ldr	r0, [fp, #-8]
   12b8c:	bl	0 <flatcc_json_printer_uint8_field>
   12b90:	nop			; (mov r0, r0)
   12b94:	sub	sp, fp, #4
   12b98:	pop	{fp, pc}
   12b9c:	.word	0x00000000
   12ba0:	.word	0x00000174
   12ba4:	.word	0x0000017c
   12ba8:	.word	0x00000184
   12bac:	.word	0x00000188

00012bb0 <MyGame_Example_TestInclude_print_json_table>:
   12bb0:	push	{fp, lr}
   12bb4:	add	fp, sp, #4
   12bb8:	sub	sp, sp, #32
   12bbc:	str	r0, [fp, #-8]
   12bc0:	str	r1, [fp, #-12]
   12bc4:	ldr	r3, [pc, #260]	; 12cd0 <MyGame_Example_TestInclude_print_json_table+0x120>
   12bc8:	str	r3, [sp, #4]
   12bcc:	mov	r3, #6
   12bd0:	str	r3, [sp]
   12bd4:	ldr	r3, [pc, #248]	; 12cd4 <MyGame_Example_TestInclude_print_json_table+0x124>
   12bd8:	mov	r2, #0
   12bdc:	ldr	r1, [fp, #-12]
   12be0:	ldr	r0, [fp, #-8]
   12be4:	bl	0 <flatcc_json_printer_struct_field>
   12be8:	ldr	r3, [pc, #232]	; 12cd8 <MyGame_Example_TestInclude_print_json_table+0x128>
   12bec:	str	r3, [sp, #16]
   12bf0:	mov	r2, #0
   12bf4:	mov	r3, #0
   12bf8:	strd	r2, [sp, #8]
   12bfc:	mov	r3, #6
   12c00:	str	r3, [sp]
   12c04:	ldr	r3, [pc, #208]	; 12cdc <MyGame_Example_TestInclude_print_json_table+0x12c>
   12c08:	mov	r2, #1
   12c0c:	ldr	r1, [fp, #-12]
   12c10:	ldr	r0, [fp, #-8]
   12c14:	bl	0 <flatcc_json_printer_int64_enum_field>
   12c18:	ldr	r3, [pc, #184]	; 12cd8 <MyGame_Example_TestInclude_print_json_table+0x128>
   12c1c:	str	r3, [sp, #16]
   12c20:	mov	r2, #0
   12c24:	mov	r3, #0
   12c28:	strd	r2, [sp, #8]
   12c2c:	mov	r3, #7
   12c30:	str	r3, [sp]
   12c34:	ldr	r3, [pc, #164]	; 12ce0 <MyGame_Example_TestInclude_print_json_table+0x130>
   12c38:	mov	r2, #2
   12c3c:	ldr	r1, [fp, #-12]
   12c40:	ldr	r0, [fp, #-8]
   12c44:	bl	0 <flatcc_json_printer_int64_enum_field>
   12c48:	mov	r3, #0
   12c4c:	str	r3, [sp, #4]
   12c50:	mov	r3, #7
   12c54:	str	r3, [sp]
   12c58:	ldr	r3, [pc, #132]	; 12ce4 <MyGame_Example_TestInclude_print_json_table+0x134>
   12c5c:	mov	r2, #3
   12c60:	ldr	r1, [fp, #-12]
   12c64:	ldr	r0, [fp, #-8]
   12c68:	bl	0 <flatcc_json_printer_int32_field>
   12c6c:	ldr	r3, [pc, #100]	; 12cd8 <MyGame_Example_TestInclude_print_json_table+0x128>
   12c70:	str	r3, [sp, #16]
   12c74:	mov	r2, #0
   12c78:	mov	r3, #0
   12c7c:	strd	r2, [sp, #8]
   12c80:	mov	r3, #7
   12c84:	str	r3, [sp]
   12c88:	ldr	r3, [pc, #88]	; 12ce8 <MyGame_Example_TestInclude_print_json_table+0x138>
   12c8c:	mov	r2, #4
   12c90:	ldr	r1, [fp, #-12]
   12c94:	ldr	r0, [fp, #-8]
   12c98:	bl	0 <flatcc_json_printer_int64_enum_field>
   12c9c:	mov	r2, #0
   12ca0:	mov	r3, #0
   12ca4:	strd	r2, [sp, #8]
   12ca8:	mov	r3, #7
   12cac:	str	r3, [sp]
   12cb0:	ldr	r3, [pc, #52]	; 12cec <MyGame_Example_TestInclude_print_json_table+0x13c>
   12cb4:	mov	r2, #5
   12cb8:	ldr	r1, [fp, #-12]
   12cbc:	ldr	r0, [fp, #-8]
   12cc0:	bl	0 <flatcc_json_printer_int64_field>
   12cc4:	nop			; (mov r0, r0)
   12cc8:	sub	sp, fp, #4
   12ccc:	pop	{fp, pc}
   12cd0:	.word	0x00000000
   12cd4:	.word	0x0000018c
   12cd8:	.word	0x00000000
   12cdc:	.word	0x00000194
   12ce0:	.word	0x0000019c
   12ce4:	.word	0x000001a4
   12ce8:	.word	0x000001ac
   12cec:	.word	0x000001b4

00012cf0 <MyGame_Example_Stat_print_json_table>:
   12cf0:	push	{fp, lr}
   12cf4:	add	fp, sp, #4
   12cf8:	sub	sp, sp, #24
   12cfc:	str	r0, [fp, #-8]
   12d00:	str	r1, [fp, #-12]
   12d04:	mov	r3, #2
   12d08:	str	r3, [sp]
   12d0c:	ldr	r3, [pc, #100]	; 12d78 <MyGame_Example_Stat_print_json_table+0x88>
   12d10:	mov	r2, #0
   12d14:	ldr	r1, [fp, #-12]
   12d18:	ldr	r0, [fp, #-8]
   12d1c:	bl	0 <flatcc_json_printer_string_field>
   12d20:	mov	r2, #0
   12d24:	mov	r3, #0
   12d28:	strd	r2, [sp, #8]
   12d2c:	mov	r3, #3
   12d30:	str	r3, [sp]
   12d34:	ldr	r3, [pc, #64]	; 12d7c <MyGame_Example_Stat_print_json_table+0x8c>
   12d38:	mov	r2, #1
   12d3c:	ldr	r1, [fp, #-12]
   12d40:	ldr	r0, [fp, #-8]
   12d44:	bl	0 <flatcc_json_printer_int64_field>
   12d48:	mov	r3, #0
   12d4c:	str	r3, [sp, #4]
   12d50:	mov	r3, #5
   12d54:	str	r3, [sp]
   12d58:	ldr	r3, [pc, #32]	; 12d80 <MyGame_Example_Stat_print_json_table+0x90>
   12d5c:	mov	r2, #2
   12d60:	ldr	r1, [fp, #-12]
   12d64:	ldr	r0, [fp, #-8]
   12d68:	bl	0 <flatcc_json_printer_uint16_field>
   12d6c:	nop			; (mov r0, r0)
   12d70:	sub	sp, fp, #4
   12d74:	pop	{fp, pc}
   12d78:	.word	0x00000144
   12d7c:	.word	0x000001bc
   12d80:	.word	0x000001c0

00012d84 <MyGame_Example_Alt_print_json_table>:
   12d84:	push	{fp, lr}
   12d88:	add	fp, sp, #4
   12d8c:	sub	sp, sp, #24
   12d90:	str	r0, [fp, #-8]
   12d94:	str	r1, [fp, #-12]
   12d98:	ldr	r3, [pc, #120]	; 12e18 <MyGame_Example_Alt_print_json_table+0x94>
   12d9c:	str	r3, [sp, #4]
   12da0:	mov	r3, #6
   12da4:	str	r3, [sp]
   12da8:	ldr	r3, [pc, #108]	; 12e1c <MyGame_Example_Alt_print_json_table+0x98>
   12dac:	mov	r2, #0
   12db0:	ldr	r1, [fp, #-12]
   12db4:	ldr	r0, [fp, #-8]
   12db8:	bl	0 <flatcc_json_printer_table_field>
   12dbc:	ldr	r3, [pc, #92]	; 12e20 <MyGame_Example_Alt_print_json_table+0x9c>
   12dc0:	str	r3, [sp, #4]
   12dc4:	mov	r3, #5
   12dc8:	str	r3, [sp]
   12dcc:	ldr	r3, [pc, #80]	; 12e24 <MyGame_Example_Alt_print_json_table+0xa0>
   12dd0:	mov	r2, #1
   12dd4:	ldr	r1, [fp, #-12]
   12dd8:	ldr	r0, [fp, #-8]
   12ddc:	bl	0 <flatcc_json_printer_table_field>
   12de0:	ldr	r3, [pc, #64]	; 12e28 <MyGame_Example_Alt_print_json_table+0xa4>
   12de4:	str	r3, [sp, #8]
   12de8:	ldr	r3, [pc, #60]	; 12e2c <MyGame_Example_Alt_print_json_table+0xa8>
   12dec:	str	r3, [sp, #4]
   12df0:	mov	r3, #7
   12df4:	str	r3, [sp]
   12df8:	ldr	r3, [pc, #48]	; 12e30 <MyGame_Example_Alt_print_json_table+0xac>
   12dfc:	mov	r2, #3
   12e00:	ldr	r1, [fp, #-12]
   12e04:	ldr	r0, [fp, #-8]
   12e08:	bl	0 <flatcc_json_printer_union_vector_field>
   12e0c:	nop			; (mov r0, r0)
   12e10:	sub	sp, fp, #4
   12e14:	pop	{fp, pc}
   12e18:	.word	0x00000000
   12e1c:	.word	0x000001c8
   12e20:	.word	0x00000000
   12e24:	.word	0x000001d0
	...
   12e30:	.word	0x000001d8

00012e34 <MyGame_Example_TestJSONPrefix_print_json_table>:
   12e34:	push	{fp, lr}
   12e38:	add	fp, sp, #4
   12e3c:	sub	sp, sp, #16
   12e40:	str	r0, [fp, #-8]
   12e44:	str	r1, [fp, #-12]
   12e48:	ldr	r3, [pc, #112]	; 12ec0 <MyGame_Example_TestJSONPrefix_print_json_table+0x8c>
   12e4c:	str	r3, [sp, #4]
   12e50:	mov	r3, #21
   12e54:	str	r3, [sp]
   12e58:	ldr	r3, [pc, #100]	; 12ec4 <MyGame_Example_TestJSONPrefix_print_json_table+0x90>
   12e5c:	mov	r2, #0
   12e60:	ldr	r1, [fp, #-12]
   12e64:	ldr	r0, [fp, #-8]
   12e68:	bl	0 <flatcc_json_printer_table_field>
   12e6c:	ldr	r3, [pc, #84]	; 12ec8 <MyGame_Example_TestJSONPrefix_print_json_table+0x94>
   12e70:	str	r3, [sp, #4]
   12e74:	mov	r3, #22
   12e78:	str	r3, [sp]
   12e7c:	ldr	r3, [pc, #72]	; 12ecc <MyGame_Example_TestJSONPrefix_print_json_table+0x98>
   12e80:	mov	r2, #1
   12e84:	ldr	r1, [fp, #-12]
   12e88:	ldr	r0, [fp, #-8]
   12e8c:	bl	0 <flatcc_json_printer_table_field>
   12e90:	ldr	r3, [pc, #56]	; 12ed0 <MyGame_Example_TestJSONPrefix_print_json_table+0x9c>
   12e94:	str	r3, [sp, #4]
   12e98:	mov	r3, #22
   12e9c:	str	r3, [sp]
   12ea0:	ldr	r3, [pc, #44]	; 12ed4 <MyGame_Example_TestJSONPrefix_print_json_table+0xa0>
   12ea4:	mov	r2, #2
   12ea8:	ldr	r1, [fp, #-12]
   12eac:	ldr	r0, [fp, #-8]
   12eb0:	bl	0 <flatcc_json_printer_table_field>
   12eb4:	nop			; (mov r0, r0)
   12eb8:	sub	sp, fp, #4
   12ebc:	pop	{fp, pc}
   12ec0:	.word	0x00000000
   12ec4:	.word	0x000001e0
   12ec8:	.word	0x00000000
   12ecc:	.word	0x000001f8
   12ed0:	.word	0x00000000
   12ed4:	.word	0x00000210

00012ed8 <MyGame_Example_TestJSONPrefixParsing_print_json_table>:
   12ed8:	push	{fp, lr}
   12edc:	add	fp, sp, #4
   12ee0:	sub	sp, sp, #24
   12ee4:	str	r0, [fp, #-8]
   12ee8:	str	r1, [fp, #-12]
   12eec:	mov	r3, #4
   12ef0:	str	r3, [sp]
   12ef4:	ldr	r3, [pc, #308]	; 13030 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x158>
   12ef8:	mov	r2, #0
   12efc:	ldr	r1, [fp, #-12]
   12f00:	ldr	r0, [fp, #-8]
   12f04:	bl	0 <flatcc_json_printer_string_field>
   12f08:	mov	r3, #0
   12f0c:	str	r3, [sp, #4]
   12f10:	mov	r3, #9
   12f14:	str	r3, [sp]
   12f18:	ldr	r3, [pc, #276]	; 13034 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x15c>
   12f1c:	mov	r2, #1
   12f20:	ldr	r1, [fp, #-12]
   12f24:	ldr	r0, [fp, #-8]
   12f28:	bl	0 <flatcc_json_printer_uint32_field>
   12f2c:	mov	r3, #4
   12f30:	str	r3, [sp]
   12f34:	ldr	r3, [pc, #252]	; 13038 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x160>
   12f38:	mov	r2, #2
   12f3c:	ldr	r1, [fp, #-12]
   12f40:	ldr	r0, [fp, #-8]
   12f44:	bl	0 <flatcc_json_printer_string_field>
   12f48:	mov	r2, #0
   12f4c:	mov	r3, #0
   12f50:	strd	r2, [sp, #8]
   12f54:	mov	r3, #8
   12f58:	str	r3, [sp]
   12f5c:	ldr	r3, [pc, #216]	; 1303c <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x164>
   12f60:	mov	r2, #3
   12f64:	ldr	r1, [fp, #-12]
   12f68:	ldr	r0, [fp, #-8]
   12f6c:	bl	0 <flatcc_json_printer_int64_field>
   12f70:	mov	r3, #4
   12f74:	str	r3, [sp]
   12f78:	ldr	r3, [pc, #192]	; 13040 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x168>
   12f7c:	mov	r2, #4
   12f80:	ldr	r1, [fp, #-12]
   12f84:	ldr	r0, [fp, #-8]
   12f88:	bl	0 <flatcc_json_printer_string_field>
   12f8c:	mov	r2, #0
   12f90:	mov	r3, #0
   12f94:	strd	r2, [sp, #8]
   12f98:	mov	r3, #8
   12f9c:	str	r3, [sp]
   12fa0:	ldr	r3, [pc, #156]	; 13044 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x16c>
   12fa4:	mov	r2, #5
   12fa8:	ldr	r1, [fp, #-12]
   12fac:	ldr	r0, [fp, #-8]
   12fb0:	bl	0 <flatcc_json_printer_int64_field>
   12fb4:	mov	r3, #0
   12fb8:	str	r3, [sp, #4]
   12fbc:	mov	r3, #9
   12fc0:	str	r3, [sp]
   12fc4:	ldr	r3, [pc, #124]	; 13048 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x170>
   12fc8:	mov	r2, #6
   12fcc:	ldr	r1, [fp, #-12]
   12fd0:	ldr	r0, [fp, #-8]
   12fd4:	bl	0 <flatcc_json_printer_uint32_field>
   12fd8:	mov	r2, #0
   12fdc:	mov	r3, #0
   12fe0:	strd	r2, [sp, #8]
   12fe4:	mov	r3, #8
   12fe8:	str	r3, [sp]
   12fec:	ldr	r3, [pc, #88]	; 1304c <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x174>
   12ff0:	mov	r2, #7
   12ff4:	ldr	r1, [fp, #-12]
   12ff8:	ldr	r0, [fp, #-8]
   12ffc:	bl	0 <flatcc_json_printer_int64_field>
   13000:	mov	r3, #0
   13004:	str	r3, [sp, #4]
   13008:	mov	r3, #9
   1300c:	str	r3, [sp]
   13010:	ldr	r3, [pc, #56]	; 13050 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x178>
   13014:	mov	r2, #8
   13018:	ldr	r1, [fp, #-12]
   1301c:	ldr	r0, [fp, #-8]
   13020:	bl	0 <flatcc_json_printer_uint32_field>
   13024:	nop			; (mov r0, r0)
   13028:	sub	sp, fp, #4
   1302c:	pop	{fp, pc}
   13030:	.word	0x00000228
   13034:	.word	0x00000230
   13038:	.word	0x0000023c
   1303c:	.word	0x00000244
   13040:	.word	0x00000250
   13044:	.word	0x00000258
   13048:	.word	0x00000264
   1304c:	.word	0x00000270
   13050:	.word	0x0000027c

00013054 <MyGame_Example_TestJSONPrefixParsing2_print_json_table>:
   13054:	push	{fp, lr}
   13058:	add	fp, sp, #4
   1305c:	sub	sp, sp, #24
   13060:	str	r0, [fp, #-8]
   13064:	str	r1, [fp, #-12]
   13068:	mov	r2, #0
   1306c:	mov	r3, #0
   13070:	strd	r2, [sp, #8]
   13074:	mov	r3, #15
   13078:	str	r3, [sp]
   1307c:	ldr	r3, [pc, #60]	; 130c0 <MyGame_Example_TestJSONPrefixParsing2_print_json_table+0x6c>
   13080:	mov	r2, #0
   13084:	ldr	r1, [fp, #-12]
   13088:	ldr	r0, [fp, #-8]
   1308c:	bl	0 <flatcc_json_printer_int64_field>
   13090:	mov	r3, #0
   13094:	str	r3, [sp, #4]
   13098:	mov	r3, #16
   1309c:	str	r3, [sp]
   130a0:	ldr	r3, [pc, #28]	; 130c4 <MyGame_Example_TestJSONPrefixParsing2_print_json_table+0x70>
   130a4:	mov	r2, #1
   130a8:	ldr	r1, [fp, #-12]
   130ac:	ldr	r0, [fp, #-8]
   130b0:	bl	0 <flatcc_json_printer_uint32_field>
   130b4:	nop			; (mov r0, r0)
   130b8:	sub	sp, fp, #4
   130bc:	pop	{fp, pc}
   130c0:	.word	0x00000288
   130c4:	.word	0x00000298

000130c8 <MyGame_Example_TestJSONPrefixParsing3_print_json_table>:
   130c8:	push	{fp, lr}
   130cc:	add	fp, sp, #4
   130d0:	sub	sp, sp, #24
   130d4:	str	r0, [fp, #-8]
   130d8:	str	r1, [fp, #-12]
   130dc:	mov	r2, #0
   130e0:	mov	r3, #0
   130e4:	strd	r2, [sp, #8]
   130e8:	mov	r3, #15
   130ec:	str	r3, [sp]
   130f0:	ldr	r3, [pc, #60]	; 13134 <MyGame_Example_TestJSONPrefixParsing3_print_json_table+0x6c>
   130f4:	mov	r2, #0
   130f8:	ldr	r1, [fp, #-12]
   130fc:	ldr	r0, [fp, #-8]
   13100:	bl	0 <flatcc_json_printer_int64_field>
   13104:	mov	r3, #0
   13108:	str	r3, [sp, #4]
   1310c:	mov	r3, #21
   13110:	str	r3, [sp]
   13114:	ldr	r3, [pc, #28]	; 13138 <MyGame_Example_TestJSONPrefixParsing3_print_json_table+0x70>
   13118:	mov	r2, #1
   1311c:	ldr	r1, [fp, #-12]
   13120:	ldr	r0, [fp, #-8]
   13124:	bl	0 <flatcc_json_printer_uint32_field>
   13128:	nop			; (mov r0, r0)
   1312c:	sub	sp, fp, #4
   13130:	pop	{fp, pc}
   13134:	.word	0x00000288
   13138:	.word	0x000002ac

0001313c <MyGame_Example_TestBase64_print_json_table>:
   1313c:	push	{fp, lr}
   13140:	add	fp, sp, #4
   13144:	sub	sp, sp, #16
   13148:	str	r0, [fp, #-8]
   1314c:	str	r1, [fp, #-12]
   13150:	mov	r3, #0
   13154:	str	r3, [sp, #4]
   13158:	mov	r3, #4
   1315c:	str	r3, [sp]
   13160:	ldr	r3, [pc, #96]	; 131c8 <MyGame_Example_TestBase64_print_json_table+0x8c>
   13164:	mov	r2, #0
   13168:	ldr	r1, [fp, #-12]
   1316c:	ldr	r0, [fp, #-8]
   13170:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
   13174:	mov	r3, #1
   13178:	str	r3, [sp, #4]
   1317c:	mov	r3, #7
   13180:	str	r3, [sp]
   13184:	ldr	r3, [pc, #64]	; 131cc <MyGame_Example_TestBase64_print_json_table+0x90>
   13188:	mov	r2, #1
   1318c:	ldr	r1, [fp, #-12]
   13190:	ldr	r0, [fp, #-8]
   13194:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
   13198:	mov	r3, #0
   1319c:	str	r3, [sp, #4]
   131a0:	mov	r3, #6
   131a4:	str	r3, [sp]
   131a8:	ldr	r3, [pc, #32]	; 131d0 <MyGame_Example_TestBase64_print_json_table+0x94>
   131ac:	mov	r2, #2
   131b0:	ldr	r1, [fp, #-12]
   131b4:	ldr	r0, [fp, #-8]
   131b8:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
   131bc:	nop			; (mov r0, r0)
   131c0:	sub	sp, fp, #4
   131c4:	pop	{fp, pc}
   131c8:	.word	0x000002c4
   131cc:	.word	0x000002cc
   131d0:	.word	0x000002d4

000131d4 <MyGame_Example_Monster_print_json_table>:
   131d4:	push	{fp, lr}
   131d8:	add	fp, sp, #4
   131dc:	sub	sp, sp, #24
   131e0:	str	r0, [fp, #-8]
   131e4:	str	r1, [fp, #-12]
   131e8:	ldr	r3, [pc, #1228]	; 136bc <MyGame_Example_Monster_print_json_table+0x4e8>
   131ec:	str	r3, [sp, #4]
   131f0:	mov	r3, #3
   131f4:	str	r3, [sp]
   131f8:	ldr	r3, [pc, #1216]	; 136c0 <MyGame_Example_Monster_print_json_table+0x4ec>
   131fc:	mov	r2, #0
   13200:	ldr	r1, [fp, #-12]
   13204:	ldr	r0, [fp, #-8]
   13208:	bl	0 <flatcc_json_printer_struct_field>
   1320c:	mov	r3, #150	; 0x96
   13210:	str	r3, [sp, #4]
   13214:	mov	r3, #4
   13218:	str	r3, [sp]
   1321c:	ldr	r3, [pc, #1184]	; 136c4 <MyGame_Example_Monster_print_json_table+0x4f0>
   13220:	mov	r2, #1
   13224:	ldr	r1, [fp, #-12]
   13228:	ldr	r0, [fp, #-8]
   1322c:	bl	0 <flatcc_json_printer_int16_field>
   13230:	mov	r3, #100	; 0x64
   13234:	str	r3, [sp, #4]
   13238:	mov	r3, #2
   1323c:	str	r3, [sp]
   13240:	ldr	r3, [pc, #1152]	; 136c8 <MyGame_Example_Monster_print_json_table+0x4f4>
   13244:	mov	r2, #2
   13248:	ldr	r1, [fp, #-12]
   1324c:	ldr	r0, [fp, #-8]
   13250:	bl	0 <flatcc_json_printer_int16_field>
   13254:	mov	r3, #4
   13258:	str	r3, [sp]
   1325c:	ldr	r3, [pc, #1128]	; 136cc <MyGame_Example_Monster_print_json_table+0x4f8>
   13260:	mov	r2, #3
   13264:	ldr	r1, [fp, #-12]
   13268:	ldr	r0, [fp, #-8]
   1326c:	bl	0 <flatcc_json_printer_string_field>
   13270:	mov	r3, #9
   13274:	str	r3, [sp]
   13278:	ldr	r3, [pc, #1104]	; 136d0 <MyGame_Example_Monster_print_json_table+0x4fc>
   1327c:	mov	r2, #5
   13280:	ldr	r1, [fp, #-12]
   13284:	ldr	r0, [fp, #-8]
   13288:	bl	0 <flatcc_json_printer_uint8_vector_field>
   1328c:	ldr	r3, [pc, #1088]	; 136d4 <MyGame_Example_Monster_print_json_table+0x500>
   13290:	str	r3, [sp, #8]
   13294:	mov	r3, #8
   13298:	str	r3, [sp, #4]
   1329c:	mov	r3, #5
   132a0:	str	r3, [sp]
   132a4:	ldr	r3, [pc, #1068]	; 136d8 <MyGame_Example_Monster_print_json_table+0x504>
   132a8:	mov	r2, #6
   132ac:	ldr	r1, [fp, #-12]
   132b0:	ldr	r0, [fp, #-8]
   132b4:	bl	0 <flatcc_json_printer_int8_enum_field>
   132b8:	ldr	r3, [pc, #1052]	; 136dc <MyGame_Example_Monster_print_json_table+0x508>
   132bc:	str	r3, [sp, #8]
   132c0:	ldr	r3, [pc, #1048]	; 136e0 <MyGame_Example_Monster_print_json_table+0x50c>
   132c4:	str	r3, [sp, #4]
   132c8:	mov	r3, #4
   132cc:	str	r3, [sp]
   132d0:	ldr	r3, [pc, #1036]	; 136e4 <MyGame_Example_Monster_print_json_table+0x510>
   132d4:	mov	r2, #8
   132d8:	ldr	r1, [fp, #-12]
   132dc:	ldr	r0, [fp, #-8]
   132e0:	bl	0 <flatcc_json_printer_union_field>
   132e4:	ldr	r3, [pc, #1020]	; 136e8 <MyGame_Example_Monster_print_json_table+0x514>
   132e8:	str	r3, [sp, #8]
   132ec:	mov	r3, #4
   132f0:	str	r3, [sp, #4]
   132f4:	mov	r3, #5
   132f8:	str	r3, [sp]
   132fc:	ldr	r3, [pc, #1000]	; 136ec <MyGame_Example_Monster_print_json_table+0x518>
   13300:	mov	r2, #9
   13304:	ldr	r1, [fp, #-12]
   13308:	ldr	r0, [fp, #-8]
   1330c:	bl	0 <flatcc_json_printer_struct_vector_field>
   13310:	mov	r3, #17
   13314:	str	r3, [sp]
   13318:	ldr	r3, [pc, #976]	; 136f0 <MyGame_Example_Monster_print_json_table+0x51c>
   1331c:	mov	r2, #10
   13320:	ldr	r1, [fp, #-12]
   13324:	ldr	r0, [fp, #-8]
   13328:	bl	0 <flatcc_json_printer_string_vector_field>
   1332c:	ldr	r3, [pc, #960]	; 136f4 <MyGame_Example_Monster_print_json_table+0x520>
   13330:	str	r3, [sp, #4]
   13334:	mov	r3, #17
   13338:	str	r3, [sp]
   1333c:	ldr	r3, [pc, #948]	; 136f8 <MyGame_Example_Monster_print_json_table+0x524>
   13340:	mov	r2, #11
   13344:	ldr	r1, [fp, #-12]
   13348:	ldr	r0, [fp, #-8]
   1334c:	bl	0 <flatcc_json_printer_table_vector_field>
   13350:	ldr	r3, [pc, #924]	; 136f4 <MyGame_Example_Monster_print_json_table+0x520>
   13354:	str	r3, [sp, #4]
   13358:	mov	r3, #5
   1335c:	str	r3, [sp]
   13360:	ldr	r3, [pc, #916]	; 136fc <MyGame_Example_Monster_print_json_table+0x528>
   13364:	mov	r2, #12
   13368:	ldr	r1, [fp, #-12]
   1336c:	ldr	r0, [fp, #-8]
   13370:	bl	0 <flatcc_json_printer_table_field>
   13374:	ldr	r3, [pc, #888]	; 136f4 <MyGame_Example_Monster_print_json_table+0x520>
   13378:	str	r3, [sp, #8]
   1337c:	mov	r3, #0
   13380:	str	r3, [sp, #4]
   13384:	mov	r3, #20
   13388:	str	r3, [sp]
   1338c:	ldr	r3, [pc, #876]	; 13700 <MyGame_Example_Monster_print_json_table+0x52c>
   13390:	mov	r2, #13
   13394:	ldr	r1, [fp, #-12]
   13398:	ldr	r0, [fp, #-8]
   1339c:	bl	0 <flatcc_json_printer_table_as_nested_root>
   133a0:	ldr	r3, [pc, #860]	; 13704 <MyGame_Example_Monster_print_json_table+0x530>
   133a4:	str	r3, [sp, #4]
   133a8:	mov	r3, #9
   133ac:	str	r3, [sp]
   133b0:	ldr	r3, [pc, #848]	; 13708 <MyGame_Example_Monster_print_json_table+0x534>
   133b4:	mov	r2, #14
   133b8:	ldr	r1, [fp, #-12]
   133bc:	ldr	r0, [fp, #-8]
   133c0:	bl	0 <flatcc_json_printer_table_field>
   133c4:	mov	r3, #1
   133c8:	str	r3, [sp, #4]
   133cc:	mov	r3, #8
   133d0:	str	r3, [sp]
   133d4:	ldr	r3, [pc, #816]	; 1370c <MyGame_Example_Monster_print_json_table+0x538>
   133d8:	mov	r2, #15
   133dc:	ldr	r1, [fp, #-12]
   133e0:	ldr	r0, [fp, #-8]
   133e4:	bl	0 <flatcc_json_printer_bool_field>
   133e8:	mov	r3, #0
   133ec:	str	r3, [sp, #4]
   133f0:	mov	r3, #16
   133f4:	str	r3, [sp]
   133f8:	ldr	r3, [pc, #784]	; 13710 <MyGame_Example_Monster_print_json_table+0x53c>
   133fc:	mov	r2, #16
   13400:	ldr	r1, [fp, #-12]
   13404:	ldr	r0, [fp, #-8]
   13408:	bl	0 <flatcc_json_printer_int32_field>
   1340c:	mov	r3, #0
   13410:	str	r3, [sp, #4]
   13414:	mov	r3, #16
   13418:	str	r3, [sp]
   1341c:	ldr	r3, [pc, #752]	; 13714 <MyGame_Example_Monster_print_json_table+0x540>
   13420:	mov	r2, #17
   13424:	ldr	r1, [fp, #-12]
   13428:	ldr	r0, [fp, #-8]
   1342c:	bl	0 <flatcc_json_printer_uint32_field>
   13430:	mov	r2, #0
   13434:	mov	r3, #0
   13438:	strd	r2, [sp, #8]
   1343c:	mov	r3, #16
   13440:	str	r3, [sp]
   13444:	ldr	r3, [pc, #716]	; 13718 <MyGame_Example_Monster_print_json_table+0x544>
   13448:	mov	r2, #18
   1344c:	ldr	r1, [fp, #-12]
   13450:	ldr	r0, [fp, #-8]
   13454:	bl	0 <flatcc_json_printer_int64_field>
   13458:	mov	r2, #0
   1345c:	mov	r3, #0
   13460:	strd	r2, [sp, #8]
   13464:	mov	r3, #16
   13468:	str	r3, [sp]
   1346c:	ldr	r3, [pc, #680]	; 1371c <MyGame_Example_Monster_print_json_table+0x548>
   13470:	mov	r2, #19
   13474:	ldr	r1, [fp, #-12]
   13478:	ldr	r0, [fp, #-8]
   1347c:	bl	0 <flatcc_json_printer_uint64_field>
   13480:	mov	r3, #0
   13484:	str	r3, [sp, #4]
   13488:	mov	r3, #17
   1348c:	str	r3, [sp]
   13490:	ldr	r3, [pc, #648]	; 13720 <MyGame_Example_Monster_print_json_table+0x54c>
   13494:	mov	r2, #20
   13498:	ldr	r1, [fp, #-12]
   1349c:	ldr	r0, [fp, #-8]
   134a0:	bl	0 <flatcc_json_printer_int32_field>
   134a4:	mov	r3, #0
   134a8:	str	r3, [sp, #4]
   134ac:	mov	r3, #17
   134b0:	str	r3, [sp]
   134b4:	ldr	r3, [pc, #616]	; 13724 <MyGame_Example_Monster_print_json_table+0x550>
   134b8:	mov	r2, #21
   134bc:	ldr	r1, [fp, #-12]
   134c0:	ldr	r0, [fp, #-8]
   134c4:	bl	0 <flatcc_json_printer_uint32_field>
   134c8:	mov	r2, #0
   134cc:	mov	r3, #0
   134d0:	strd	r2, [sp, #8]
   134d4:	mov	r3, #17
   134d8:	str	r3, [sp]
   134dc:	ldr	r3, [pc, #580]	; 13728 <MyGame_Example_Monster_print_json_table+0x554>
   134e0:	mov	r2, #22
   134e4:	ldr	r1, [fp, #-12]
   134e8:	ldr	r0, [fp, #-8]
   134ec:	bl	0 <flatcc_json_printer_int64_field>
   134f0:	mov	r2, #0
   134f4:	mov	r3, #0
   134f8:	strd	r2, [sp, #8]
   134fc:	mov	r3, #17
   13500:	str	r3, [sp]
   13504:	ldr	r3, [pc, #544]	; 1372c <MyGame_Example_Monster_print_json_table+0x558>
   13508:	mov	r2, #23
   1350c:	ldr	r1, [fp, #-12]
   13510:	ldr	r0, [fp, #-8]
   13514:	bl	0 <flatcc_json_printer_uint64_field>
   13518:	mov	r3, #16
   1351c:	str	r3, [sp]
   13520:	ldr	r3, [pc, #520]	; 13730 <MyGame_Example_Monster_print_json_table+0x55c>
   13524:	mov	r2, #24
   13528:	ldr	r1, [fp, #-12]
   1352c:	ldr	r0, [fp, #-8]
   13530:	bl	0 <flatcc_json_printer_bool_vector_field>
   13534:	mov	r3, #5
   13538:	str	r3, [sp]
   1353c:	vldr	s0, [pc, #364]	; 136b0 <MyGame_Example_Monster_print_json_table+0x4dc>
   13540:	ldr	r3, [pc, #492]	; 13734 <MyGame_Example_Monster_print_json_table+0x560>
   13544:	mov	r2, #25
   13548:	ldr	r1, [fp, #-12]
   1354c:	ldr	r0, [fp, #-8]
   13550:	bl	0 <flatcc_json_printer_float_field>
   13554:	mov	r3, #6
   13558:	str	r3, [sp]
   1355c:	vldr	s0, [pc, #336]	; 136b4 <MyGame_Example_Monster_print_json_table+0x4e0>
   13560:	ldr	r3, [pc, #464]	; 13738 <MyGame_Example_Monster_print_json_table+0x564>
   13564:	mov	r2, #26
   13568:	ldr	r1, [fp, #-12]
   1356c:	ldr	r0, [fp, #-8]
   13570:	bl	0 <flatcc_json_printer_float_field>
   13574:	mov	r3, #6
   13578:	str	r3, [sp]
   1357c:	vldr	s0, [pc, #308]	; 136b8 <MyGame_Example_Monster_print_json_table+0x4e4>
   13580:	ldr	r3, [pc, #436]	; 1373c <MyGame_Example_Monster_print_json_table+0x568>
   13584:	mov	r2, #27
   13588:	ldr	r1, [fp, #-12]
   1358c:	ldr	r0, [fp, #-8]
   13590:	bl	0 <flatcc_json_printer_float_field>
   13594:	mov	r3, #18
   13598:	str	r3, [sp]
   1359c:	ldr	r3, [pc, #412]	; 13740 <MyGame_Example_Monster_print_json_table+0x56c>
   135a0:	mov	r2, #28
   135a4:	ldr	r1, [fp, #-12]
   135a8:	ldr	r0, [fp, #-8]
   135ac:	bl	0 <flatcc_json_printer_string_vector_field>
   135b0:	ldr	r3, [pc, #396]	; 13744 <MyGame_Example_Monster_print_json_table+0x570>
   135b4:	str	r3, [sp, #8]
   135b8:	mov	r3, #8
   135bc:	str	r3, [sp, #4]
   135c0:	mov	r3, #23
   135c4:	str	r3, [sp]
   135c8:	ldr	r3, [pc, #376]	; 13748 <MyGame_Example_Monster_print_json_table+0x574>
   135cc:	mov	r2, #29
   135d0:	ldr	r1, [fp, #-12]
   135d4:	ldr	r0, [fp, #-8]
   135d8:	bl	0 <flatcc_json_printer_struct_vector_field>
   135dc:	mov	r3, #4
   135e0:	str	r3, [sp]
   135e4:	ldr	r3, [pc, #352]	; 1374c <MyGame_Example_Monster_print_json_table+0x578>
   135e8:	mov	r2, #30
   135ec:	ldr	r1, [fp, #-12]
   135f0:	ldr	r0, [fp, #-8]
   135f4:	bl	0 <flatcc_json_printer_uint8_vector_field>
   135f8:	ldr	r3, [pc, #232]	; 136e8 <MyGame_Example_Monster_print_json_table+0x514>
   135fc:	str	r3, [sp, #8]
   13600:	mov	r3, #4
   13604:	str	r3, [sp, #4]
   13608:	mov	r3, #5
   1360c:	str	r3, [sp]
   13610:	ldr	r3, [pc, #312]	; 13750 <MyGame_Example_Monster_print_json_table+0x57c>
   13614:	mov	r2, #31
   13618:	ldr	r1, [fp, #-12]
   1361c:	ldr	r0, [fp, #-8]
   13620:	bl	0 <flatcc_json_printer_struct_vector_field>
   13624:	mov	r3, #15
   13628:	str	r3, [sp]
   1362c:	ldr	r3, [pc, #288]	; 13754 <MyGame_Example_Monster_print_json_table+0x580>
   13630:	mov	r2, #32
   13634:	ldr	r1, [fp, #-12]
   13638:	ldr	r0, [fp, #-8]
   1363c:	bl	0 <flatcc_json_printer_int64_vector_field>
   13640:	mov	r3, #17
   13644:	str	r3, [sp]
   13648:	ldr	r3, [pc, #264]	; 13758 <MyGame_Example_Monster_print_json_table+0x584>
   1364c:	mov	r2, #33	; 0x21
   13650:	ldr	r1, [fp, #-12]
   13654:	ldr	r0, [fp, #-8]
   13658:	bl	0 <flatcc_json_printer_double_vector_field>
   1365c:	ldr	r3, [pc, #248]	; 1375c <MyGame_Example_Monster_print_json_table+0x588>
   13660:	str	r3, [sp, #4]
   13664:	mov	r3, #21
   13668:	str	r3, [sp]
   1366c:	ldr	r3, [pc, #236]	; 13760 <MyGame_Example_Monster_print_json_table+0x58c>
   13670:	mov	r2, #34	; 0x22
   13674:	ldr	r1, [fp, #-12]
   13678:	ldr	r0, [fp, #-8]
   1367c:	bl	0 <flatcc_json_printer_table_field>
   13680:	ldr	r3, [pc, #220]	; 13764 <MyGame_Example_Monster_print_json_table+0x590>
   13684:	str	r3, [sp, #4]
   13688:	mov	r3, #10
   1368c:	str	r3, [sp]
   13690:	ldr	r3, [pc, #208]	; 13768 <MyGame_Example_Monster_print_json_table+0x594>
   13694:	mov	r2, #35	; 0x23
   13698:	ldr	r1, [fp, #-12]
   1369c:	ldr	r0, [fp, #-8]
   136a0:	bl	0 <flatcc_json_printer_table_field>
   136a4:	nop			; (mov r0, r0)
   136a8:	sub	sp, fp, #4
   136ac:	pop	{fp, pc}
   136b0:	.word	0x489965e0
   136b4:	.word	0x40400000
	...
   136c0:	.word	0x000002dc
   136c4:	.word	0x000002e0
   136c8:	.word	0x000002e8
   136cc:	.word	0x000002ec
   136d0:	.word	0x000002f4
   136d4:	.word	0x00000000
   136d8:	.word	0x00000174
	...
   136e4:	.word	0x00000300
   136e8:	.word	0x00000000
   136ec:	.word	0x00000308
   136f0:	.word	0x00000310
   136f4:	.word	0x00000000
   136f8:	.word	0x00000324
   136fc:	.word	0x00000338
   13700:	.word	0x00000340
   13704:	.word	0x00000000
   13708:	.word	0x00000358
   1370c:	.word	0x00000364
   13710:	.word	0x00000370
   13714:	.word	0x00000384
   13718:	.word	0x00000398
   1371c:	.word	0x000003ac
   13720:	.word	0x000003c0
   13724:	.word	0x000003d4
   13728:	.word	0x000003e8
   1372c:	.word	0x000003fc
   13730:	.word	0x00000410
   13734:	.word	0x00000424
   13738:	.word	0x0000042c
   1373c:	.word	0x00000434
   13740:	.word	0x0000043c
   13744:	.word	0x00000000
   13748:	.word	0x00000450
   1374c:	.word	0x00000468
   13750:	.word	0x00000470
   13754:	.word	0x00000478
   13758:	.word	0x00000488
   1375c:	.word	0x00000000
   13760:	.word	0x0000049c
   13764:	.word	0x00000000
   13768:	.word	0x000004b4

0001376c <MyGame_Example_Monster_print_json_as_root>:
   1376c:	push	{fp, lr}
   13770:	add	fp, sp, #4
   13774:	sub	sp, sp, #24
   13778:	str	r0, [fp, #-8]
   1377c:	str	r1, [fp, #-12]
   13780:	str	r2, [fp, #-16]
   13784:	str	r3, [fp, #-20]	; 0xffffffec
   13788:	ldr	r3, [pc, #36]	; 137b4 <MyGame_Example_Monster_print_json_as_root+0x48>
   1378c:	str	r3, [sp]
   13790:	ldr	r3, [fp, #-20]	; 0xffffffec
   13794:	ldr	r2, [fp, #-16]
   13798:	ldr	r1, [fp, #-12]
   1379c:	ldr	r0, [fp, #-8]
   137a0:	bl	0 <flatcc_json_printer_table_as_root>
   137a4:	mov	r3, r0
   137a8:	mov	r0, r3
   137ac:	sub	sp, fp, #4
   137b0:	pop	{fp, pc}
   137b4:	.word	0x00000000

000137b8 <MyGame_Example_TypeAliases_print_json_table>:
   137b8:	push	{fp, lr}
   137bc:	add	fp, sp, #4
   137c0:	sub	sp, sp, #24
   137c4:	str	r0, [fp, #-8]
   137c8:	str	r1, [fp, #-12]
   137cc:	mov	r3, #0
   137d0:	str	r3, [sp, #4]
   137d4:	mov	r3, #2
   137d8:	str	r3, [sp]
   137dc:	ldr	r3, [pc, #416]	; 13984 <MyGame_Example_TypeAliases_print_json_table+0x1cc>
   137e0:	mov	r2, #0
   137e4:	ldr	r1, [fp, #-12]
   137e8:	ldr	r0, [fp, #-8]
   137ec:	bl	0 <flatcc_json_printer_int8_field>
   137f0:	mov	r3, #0
   137f4:	str	r3, [sp, #4]
   137f8:	mov	r3, #2
   137fc:	str	r3, [sp]
   13800:	ldr	r3, [pc, #384]	; 13988 <MyGame_Example_TypeAliases_print_json_table+0x1d0>
   13804:	mov	r2, #1
   13808:	ldr	r1, [fp, #-12]
   1380c:	ldr	r0, [fp, #-8]
   13810:	bl	0 <flatcc_json_printer_uint8_field>
   13814:	mov	r3, #0
   13818:	str	r3, [sp, #4]
   1381c:	mov	r3, #3
   13820:	str	r3, [sp]
   13824:	ldr	r3, [pc, #352]	; 1398c <MyGame_Example_TypeAliases_print_json_table+0x1d4>
   13828:	mov	r2, #2
   1382c:	ldr	r1, [fp, #-12]
   13830:	ldr	r0, [fp, #-8]
   13834:	bl	0 <flatcc_json_printer_int16_field>
   13838:	mov	r3, #0
   1383c:	str	r3, [sp, #4]
   13840:	mov	r3, #3
   13844:	str	r3, [sp]
   13848:	ldr	r3, [pc, #320]	; 13990 <MyGame_Example_TypeAliases_print_json_table+0x1d8>
   1384c:	mov	r2, #3
   13850:	ldr	r1, [fp, #-12]
   13854:	ldr	r0, [fp, #-8]
   13858:	bl	0 <flatcc_json_printer_uint16_field>
   1385c:	mov	r3, #0
   13860:	str	r3, [sp, #4]
   13864:	mov	r3, #3
   13868:	str	r3, [sp]
   1386c:	ldr	r3, [pc, #288]	; 13994 <MyGame_Example_TypeAliases_print_json_table+0x1dc>
   13870:	mov	r2, #4
   13874:	ldr	r1, [fp, #-12]
   13878:	ldr	r0, [fp, #-8]
   1387c:	bl	0 <flatcc_json_printer_int32_field>
   13880:	mov	r3, #0
   13884:	str	r3, [sp, #4]
   13888:	mov	r3, #3
   1388c:	str	r3, [sp]
   13890:	ldr	r3, [pc, #256]	; 13998 <MyGame_Example_TypeAliases_print_json_table+0x1e0>
   13894:	mov	r2, #5
   13898:	ldr	r1, [fp, #-12]
   1389c:	ldr	r0, [fp, #-8]
   138a0:	bl	0 <flatcc_json_printer_uint32_field>
   138a4:	mov	r2, #0
   138a8:	mov	r3, #0
   138ac:	strd	r2, [sp, #8]
   138b0:	mov	r3, #3
   138b4:	str	r3, [sp]
   138b8:	ldr	r3, [pc, #220]	; 1399c <MyGame_Example_TypeAliases_print_json_table+0x1e4>
   138bc:	mov	r2, #6
   138c0:	ldr	r1, [fp, #-12]
   138c4:	ldr	r0, [fp, #-8]
   138c8:	bl	0 <flatcc_json_printer_int64_field>
   138cc:	mov	r2, #0
   138d0:	mov	r3, #0
   138d4:	strd	r2, [sp, #8]
   138d8:	mov	r3, #3
   138dc:	str	r3, [sp]
   138e0:	ldr	r3, [pc, #184]	; 139a0 <MyGame_Example_TypeAliases_print_json_table+0x1e8>
   138e4:	mov	r2, #7
   138e8:	ldr	r1, [fp, #-12]
   138ec:	ldr	r0, [fp, #-8]
   138f0:	bl	0 <flatcc_json_printer_uint64_field>
   138f4:	mov	r3, #3
   138f8:	str	r3, [sp]
   138fc:	vldr	s0, [pc, #124]	; 13980 <MyGame_Example_TypeAliases_print_json_table+0x1c8>
   13900:	ldr	r3, [pc, #156]	; 139a4 <MyGame_Example_TypeAliases_print_json_table+0x1ec>
   13904:	mov	r2, #8
   13908:	ldr	r1, [fp, #-12]
   1390c:	ldr	r0, [fp, #-8]
   13910:	bl	0 <flatcc_json_printer_float_field>
   13914:	mov	r3, #3
   13918:	str	r3, [sp]
   1391c:	vldr	d0, [pc, #84]	; 13978 <MyGame_Example_TypeAliases_print_json_table+0x1c0>
   13920:	ldr	r3, [pc, #128]	; 139a8 <MyGame_Example_TypeAliases_print_json_table+0x1f0>
   13924:	mov	r2, #9
   13928:	ldr	r1, [fp, #-12]
   1392c:	ldr	r0, [fp, #-8]
   13930:	bl	0 <flatcc_json_printer_double_field>
   13934:	mov	r3, #2
   13938:	str	r3, [sp]
   1393c:	ldr	r3, [pc, #104]	; 139ac <MyGame_Example_TypeAliases_print_json_table+0x1f4>
   13940:	mov	r2, #10
   13944:	ldr	r1, [fp, #-12]
   13948:	ldr	r0, [fp, #-8]
   1394c:	bl	0 <flatcc_json_printer_int8_vector_field>
   13950:	mov	r3, #4
   13954:	str	r3, [sp]
   13958:	ldr	r3, [pc, #80]	; 139b0 <MyGame_Example_TypeAliases_print_json_table+0x1f8>
   1395c:	mov	r2, #11
   13960:	ldr	r1, [fp, #-12]
   13964:	ldr	r0, [fp, #-8]
   13968:	bl	0 <flatcc_json_printer_double_vector_field>
   1396c:	nop			; (mov r0, r0)
   13970:	sub	sp, fp, #4
   13974:	pop	{fp, pc}
	...
   13984:	.word	0x000004c0
   13988:	.word	0x000004c4
   1398c:	.word	0x000004c8
   13990:	.word	0x000004cc
   13994:	.word	0x000004d0
   13998:	.word	0x000004d4
   1399c:	.word	0x000004d8
   139a0:	.word	0x000004dc
   139a4:	.word	0x000004e0
   139a8:	.word	0x000004e4
   139ac:	.word	0x000004e8
   139b0:	.word	0x000004ec

000139b4 <Fantasy_Attacker_print_json_table>:
   139b4:	push	{fp, lr}
   139b8:	add	fp, sp, #4
   139bc:	sub	sp, sp, #16
   139c0:	str	r0, [fp, #-8]
   139c4:	str	r1, [fp, #-12]
   139c8:	mov	r3, #0
   139cc:	str	r3, [sp, #4]
   139d0:	mov	r3, #19
   139d4:	str	r3, [sp]
   139d8:	ldr	r3, [pc, #24]	; 139f8 <Fantasy_Attacker_print_json_table+0x44>
   139dc:	mov	r2, #0
   139e0:	ldr	r1, [fp, #-12]
   139e4:	ldr	r0, [fp, #-8]
   139e8:	bl	0 <flatcc_json_printer_int32_field>
   139ec:	nop			; (mov r0, r0)
   139f0:	sub	sp, fp, #4
   139f4:	pop	{fp, pc}
   139f8:	.word	0x000004f4

000139fc <Fantasy_Movie_print_json_table>:
   139fc:	push	{fp, lr}
   13a00:	add	fp, sp, #4
   13a04:	sub	sp, sp, #24
   13a08:	str	r0, [fp, #-8]
   13a0c:	str	r1, [fp, #-12]
   13a10:	ldr	r3, [pc, #224]	; 13af8 <Fantasy_Movie_print_json_table+0xfc>
   13a14:	str	r3, [sp, #8]
   13a18:	ldr	r3, [pc, #220]	; 13afc <Fantasy_Movie_print_json_table+0x100>
   13a1c:	str	r3, [sp, #4]
   13a20:	mov	r3, #14
   13a24:	str	r3, [sp]
   13a28:	ldr	r3, [pc, #208]	; 13b00 <Fantasy_Movie_print_json_table+0x104>
   13a2c:	mov	r2, #1
   13a30:	ldr	r1, [fp, #-12]
   13a34:	ldr	r0, [fp, #-8]
   13a38:	bl	0 <flatcc_json_printer_union_field>
   13a3c:	ldr	r3, [pc, #180]	; 13af8 <Fantasy_Movie_print_json_table+0xfc>
   13a40:	str	r3, [sp, #8]
   13a44:	ldr	r3, [pc, #176]	; 13afc <Fantasy_Movie_print_json_table+0x100>
   13a48:	str	r3, [sp, #4]
   13a4c:	mov	r3, #10
   13a50:	str	r3, [sp]
   13a54:	ldr	r3, [pc, #168]	; 13b04 <Fantasy_Movie_print_json_table+0x108>
   13a58:	mov	r2, #3
   13a5c:	ldr	r1, [fp, #-12]
   13a60:	ldr	r0, [fp, #-8]
   13a64:	bl	0 <flatcc_json_printer_union_field>
   13a68:	ldr	r3, [pc, #136]	; 13af8 <Fantasy_Movie_print_json_table+0xfc>
   13a6c:	str	r3, [sp, #8]
   13a70:	ldr	r3, [pc, #132]	; 13afc <Fantasy_Movie_print_json_table+0x100>
   13a74:	str	r3, [sp, #4]
   13a78:	mov	r3, #9
   13a7c:	str	r3, [sp]
   13a80:	ldr	r3, [pc, #128]	; 13b08 <Fantasy_Movie_print_json_table+0x10c>
   13a84:	mov	r2, #5
   13a88:	ldr	r1, [fp, #-12]
   13a8c:	ldr	r0, [fp, #-8]
   13a90:	bl	0 <flatcc_json_printer_union_field>
   13a94:	ldr	r3, [pc, #92]	; 13af8 <Fantasy_Movie_print_json_table+0xfc>
   13a98:	str	r3, [sp, #8]
   13a9c:	ldr	r3, [pc, #88]	; 13afc <Fantasy_Movie_print_json_table+0x100>
   13aa0:	str	r3, [sp, #4]
   13aa4:	mov	r3, #5
   13aa8:	str	r3, [sp]
   13aac:	ldr	r3, [pc, #88]	; 13b0c <Fantasy_Movie_print_json_table+0x110>
   13ab0:	mov	r2, #7
   13ab4:	ldr	r1, [fp, #-12]
   13ab8:	ldr	r0, [fp, #-8]
   13abc:	bl	0 <flatcc_json_printer_union_field>
   13ac0:	ldr	r3, [pc, #48]	; 13af8 <Fantasy_Movie_print_json_table+0xfc>
   13ac4:	str	r3, [sp, #8]
   13ac8:	ldr	r3, [pc, #44]	; 13afc <Fantasy_Movie_print_json_table+0x100>
   13acc:	str	r3, [sp, #4]
   13ad0:	mov	r3, #10
   13ad4:	str	r3, [sp]
   13ad8:	ldr	r3, [pc, #48]	; 13b10 <Fantasy_Movie_print_json_table+0x114>
   13adc:	mov	r2, #9
   13ae0:	ldr	r1, [fp, #-12]
   13ae4:	ldr	r0, [fp, #-8]
   13ae8:	bl	0 <flatcc_json_printer_union_vector_field>
   13aec:	nop			; (mov r0, r0)
   13af0:	sub	sp, fp, #4
   13af4:	pop	{fp, pc}
	...
   13b00:	.word	0x00000508
   13b04:	.word	0x00000518
   13b08:	.word	0x00000524
   13b0c:	.word	0x00000530
   13b10:	.word	0x00000538

00013b14 <monster_test_print_json>:
   13b14:	push	{fp, lr}
   13b18:	add	fp, sp, #4
   13b1c:	sub	sp, sp, #64	; 0x40
   13b20:	str	r0, [fp, #-56]	; 0xffffffc8
   13b24:	str	r1, [fp, #-60]	; 0xffffffc4
   13b28:	str	r2, [fp, #-64]	; 0xffffffc0
   13b2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13b30:	cmp	r3, #0
   13b34:	bne	13b4c <monster_test_print_json+0x38>
   13b38:	sub	r3, fp, #52	; 0x34
   13b3c:	str	r3, [fp, #-56]	; 0xffffffc8
   13b40:	mov	r1, #0
   13b44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13b48:	bl	0 <flatcc_json_printer_init>
   13b4c:	ldr	r3, [pc, #28]	; 13b70 <monster_test_print_json+0x5c>
   13b50:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13b54:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13b58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13b5c:	bl	1376c <MyGame_Example_Monster_print_json_as_root>
   13b60:	mov	r3, r0
   13b64:	mov	r0, r3
   13b68:	sub	sp, fp, #4
   13b6c:	pop	{fp, pc}
   13b70:	.word	0x0000001c

00013b74 <MyGame_Example_Foo_union_verifier>:
   13b74:	push	{fp, lr}
   13b78:	add	fp, sp, #4
   13b7c:	sub	sp, sp, #8
   13b80:	str	r0, [fp, #-8]
   13b84:	ldr	r3, [fp, #-8]
   13b88:	ldrb	r3, [r3, #12]
   13b8c:	cmp	r3, #1
   13b90:	bne	13ba8 <MyGame_Example_Foo_union_verifier+0x34>
   13b94:	ldr	r1, [pc, #28]	; 13bb8 <MyGame_Example_Foo_union_verifier+0x44>
   13b98:	ldr	r0, [fp, #-8]
   13b9c:	bl	0 <flatcc_verify_union_table>
   13ba0:	mov	r3, r0
   13ba4:	b	13bac <MyGame_Example_Foo_union_verifier+0x38>
   13ba8:	mov	r3, #0
   13bac:	mov	r0, r3
   13bb0:	sub	sp, fp, #4
   13bb4:	pop	{fp, pc}
   13bb8:	.word	0x00000000

00013bbc <MyGame_Example_Any_union_verifier>:
   13bbc:	push	{fp, lr}
   13bc0:	add	fp, sp, #4
   13bc4:	sub	sp, sp, #8
   13bc8:	str	r0, [fp, #-8]
   13bcc:	ldr	r3, [fp, #-8]
   13bd0:	ldrb	r3, [r3, #12]
   13bd4:	sub	r3, r3, #1
   13bd8:	cmp	r3, #3
   13bdc:	ldrls	pc, [pc, r3, lsl #2]
   13be0:	b	13c44 <MyGame_Example_Any_union_verifier+0x88>
   13be4:	.word	0x00013bf4
   13be8:	.word	0x00013c08
   13bec:	.word	0x00013c1c
   13bf0:	.word	0x00013c30
   13bf4:	ldr	r1, [pc, #88]	; 13c54 <MyGame_Example_Any_union_verifier+0x98>
   13bf8:	ldr	r0, [fp, #-8]
   13bfc:	bl	0 <flatcc_verify_union_table>
   13c00:	mov	r3, r0
   13c04:	b	13c48 <MyGame_Example_Any_union_verifier+0x8c>
   13c08:	ldr	r1, [pc, #72]	; 13c58 <MyGame_Example_Any_union_verifier+0x9c>
   13c0c:	ldr	r0, [fp, #-8]
   13c10:	bl	0 <flatcc_verify_union_table>
   13c14:	mov	r3, r0
   13c18:	b	13c48 <MyGame_Example_Any_union_verifier+0x8c>
   13c1c:	ldr	r1, [pc, #56]	; 13c5c <MyGame_Example_Any_union_verifier+0xa0>
   13c20:	ldr	r0, [fp, #-8]
   13c24:	bl	0 <flatcc_verify_union_table>
   13c28:	mov	r3, r0
   13c2c:	b	13c48 <MyGame_Example_Any_union_verifier+0x8c>
   13c30:	ldr	r1, [pc, #40]	; 13c60 <MyGame_Example_Any_union_verifier+0xa4>
   13c34:	ldr	r0, [fp, #-8]
   13c38:	bl	0 <flatcc_verify_union_table>
   13c3c:	mov	r3, r0
   13c40:	b	13c48 <MyGame_Example_Any_union_verifier+0x8c>
   13c44:	mov	r3, #0
   13c48:	mov	r0, r3
   13c4c:	sub	sp, fp, #4
   13c50:	pop	{fp, pc}
	...

00013c64 <Fantasy_Character_union_verifier>:
   13c64:	push	{fp, lr}
   13c68:	add	fp, sp, #4
   13c6c:	sub	sp, sp, #8
   13c70:	str	r0, [fp, #-8]
   13c74:	ldr	r3, [fp, #-8]
   13c78:	ldrb	r3, [r3, #12]
   13c7c:	cmp	r3, #9
   13c80:	beq	13ce8 <Fantasy_Character_union_verifier+0x84>
   13c84:	cmp	r3, #9
   13c88:	bgt	13ca0 <Fantasy_Character_union_verifier+0x3c>
   13c8c:	cmp	r3, #2
   13c90:	beq	13cbc <Fantasy_Character_union_verifier+0x58>
   13c94:	cmp	r3, #8
   13c98:	beq	13cd0 <Fantasy_Character_union_verifier+0x6c>
   13c9c:	b	13d38 <Fantasy_Character_union_verifier+0xd4>
   13ca0:	cmp	r3, #11
   13ca4:	beq	13d18 <Fantasy_Character_union_verifier+0xb4>
   13ca8:	cmp	r3, #11
   13cac:	blt	13d00 <Fantasy_Character_union_verifier+0x9c>
   13cb0:	cmp	r3, #255	; 0xff
   13cb4:	beq	13d28 <Fantasy_Character_union_verifier+0xc4>
   13cb8:	b	13d38 <Fantasy_Character_union_verifier+0xd4>
   13cbc:	ldr	r1, [pc, #132]	; 13d48 <Fantasy_Character_union_verifier+0xe4>
   13cc0:	ldr	r0, [fp, #-8]
   13cc4:	bl	0 <flatcc_verify_union_table>
   13cc8:	mov	r3, r0
   13ccc:	b	13d3c <Fantasy_Character_union_verifier+0xd8>
   13cd0:	mov	r2, #2
   13cd4:	mov	r1, #2
   13cd8:	ldr	r0, [fp, #-8]
   13cdc:	bl	0 <flatcc_verify_union_struct>
   13ce0:	mov	r3, r0
   13ce4:	b	13d3c <Fantasy_Character_union_verifier+0xd8>
   13ce8:	mov	r2, #4
   13cec:	mov	r1, #4
   13cf0:	ldr	r0, [fp, #-8]
   13cf4:	bl	0 <flatcc_verify_union_struct>
   13cf8:	mov	r3, r0
   13cfc:	b	13d3c <Fantasy_Character_union_verifier+0xd8>
   13d00:	mov	r2, #4
   13d04:	mov	r1, #4
   13d08:	ldr	r0, [fp, #-8]
   13d0c:	bl	0 <flatcc_verify_union_struct>
   13d10:	mov	r3, r0
   13d14:	b	13d3c <Fantasy_Character_union_verifier+0xd8>
   13d18:	ldr	r0, [fp, #-8]
   13d1c:	bl	0 <flatcc_verify_union_string>
   13d20:	mov	r3, r0
   13d24:	b	13d3c <Fantasy_Character_union_verifier+0xd8>
   13d28:	ldr	r0, [fp, #-8]
   13d2c:	bl	0 <flatcc_verify_union_string>
   13d30:	mov	r3, r0
   13d34:	b	13d3c <Fantasy_Character_union_verifier+0xd8>
   13d38:	mov	r3, #0
   13d3c:	mov	r0, r3
   13d40:	sub	sp, fp, #4
   13d44:	pop	{fp, pc}
   13d48:	.word	0x00000000

00013d4c <MyGame_InParentNamespace_verify_table>:
   13d4c:	push	{fp}		; (str fp, [sp, #-4]!)
   13d50:	add	fp, sp, #0
   13d54:	sub	sp, sp, #12
   13d58:	str	r0, [fp, #-8]
   13d5c:	mov	r3, #0
   13d60:	mov	r0, r3
   13d64:	add	sp, fp, #0
   13d68:	pop	{fp}		; (ldr fp, [sp], #4)
   13d6c:	bx	lr

00013d70 <MyGame_Example2_Monster_verify_table>:
   13d70:	push	{fp}		; (str fp, [sp, #-4]!)
   13d74:	add	fp, sp, #0
   13d78:	sub	sp, sp, #12
   13d7c:	str	r0, [fp, #-8]
   13d80:	mov	r3, #0
   13d84:	mov	r0, r3
   13d88:	add	sp, fp, #0
   13d8c:	pop	{fp}		; (ldr fp, [sp], #4)
   13d90:	bx	lr

00013d94 <MyGame_Example_emptytable_verify_table>:
   13d94:	push	{fp}		; (str fp, [sp, #-4]!)
   13d98:	add	fp, sp, #0
   13d9c:	sub	sp, sp, #12
   13da0:	str	r0, [fp, #-8]
   13da4:	mov	r3, #0
   13da8:	mov	r0, r3
   13dac:	add	sp, fp, #0
   13db0:	pop	{fp}		; (ldr fp, [sp], #4)
   13db4:	bx	lr

00013db8 <MyGame_Example_with_emptystruct_verify_table>:
   13db8:	push	{fp, lr}
   13dbc:	add	fp, sp, #4
   13dc0:	sub	sp, sp, #16
   13dc4:	str	r0, [fp, #-16]
   13dc8:	mov	r3, #1
   13dcc:	mov	r2, #0
   13dd0:	mov	r1, #0
   13dd4:	ldr	r0, [fp, #-16]
   13dd8:	bl	0 <flatcc_verify_field>
   13ddc:	str	r0, [fp, #-8]
   13de0:	ldr	r3, [fp, #-8]
   13de4:	cmp	r3, #0
   13de8:	beq	13df4 <MyGame_Example_with_emptystruct_verify_table+0x3c>
   13dec:	ldr	r3, [fp, #-8]
   13df0:	b	13df8 <MyGame_Example_with_emptystruct_verify_table+0x40>
   13df4:	mov	r3, #0
   13df8:	mov	r0, r3
   13dfc:	sub	sp, fp, #4
   13e00:	pop	{fp, pc}

00013e04 <MyGame_Example_TestSimpleTableWithEnum_verify_table>:
   13e04:	push	{fp, lr}
   13e08:	add	fp, sp, #4
   13e0c:	sub	sp, sp, #16
   13e10:	str	r0, [fp, #-16]
   13e14:	mov	r3, #1
   13e18:	mov	r2, #1
   13e1c:	mov	r1, #0
   13e20:	ldr	r0, [fp, #-16]
   13e24:	bl	0 <flatcc_verify_field>
   13e28:	str	r0, [fp, #-8]
   13e2c:	ldr	r3, [fp, #-8]
   13e30:	cmp	r3, #0
   13e34:	beq	13e40 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x3c>
   13e38:	ldr	r3, [fp, #-8]
   13e3c:	b	13ec8 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xc4>
   13e40:	mov	r3, #1
   13e44:	mov	r2, #1
   13e48:	mov	r1, #1
   13e4c:	ldr	r0, [fp, #-16]
   13e50:	bl	0 <flatcc_verify_field>
   13e54:	str	r0, [fp, #-8]
   13e58:	ldr	r3, [fp, #-8]
   13e5c:	cmp	r3, #0
   13e60:	beq	13e6c <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x68>
   13e64:	ldr	r3, [fp, #-8]
   13e68:	b	13ec8 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xc4>
   13e6c:	mov	r3, #1
   13e70:	mov	r2, #1
   13e74:	mov	r1, #2
   13e78:	ldr	r0, [fp, #-16]
   13e7c:	bl	0 <flatcc_verify_field>
   13e80:	str	r0, [fp, #-8]
   13e84:	ldr	r3, [fp, #-8]
   13e88:	cmp	r3, #0
   13e8c:	beq	13e98 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x94>
   13e90:	ldr	r3, [fp, #-8]
   13e94:	b	13ec8 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xc4>
   13e98:	mov	r3, #1
   13e9c:	mov	r2, #1
   13ea0:	mov	r1, #3
   13ea4:	ldr	r0, [fp, #-16]
   13ea8:	bl	0 <flatcc_verify_field>
   13eac:	str	r0, [fp, #-8]
   13eb0:	ldr	r3, [fp, #-8]
   13eb4:	cmp	r3, #0
   13eb8:	beq	13ec4 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xc0>
   13ebc:	ldr	r3, [fp, #-8]
   13ec0:	b	13ec8 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xc4>
   13ec4:	mov	r3, #0
   13ec8:	mov	r0, r3
   13ecc:	sub	sp, fp, #4
   13ed0:	pop	{fp, pc}

00013ed4 <MyGame_Example_TestInclude_verify_table>:
   13ed4:	push	{fp, lr}
   13ed8:	add	fp, sp, #4
   13edc:	sub	sp, sp, #16
   13ee0:	str	r0, [fp, #-16]
   13ee4:	mov	r3, #1
   13ee8:	mov	r2, #0
   13eec:	mov	r1, #0
   13ef0:	ldr	r0, [fp, #-16]
   13ef4:	bl	0 <flatcc_verify_field>
   13ef8:	str	r0, [fp, #-8]
   13efc:	ldr	r3, [fp, #-8]
   13f00:	cmp	r3, #0
   13f04:	beq	13f10 <MyGame_Example_TestInclude_verify_table+0x3c>
   13f08:	ldr	r3, [fp, #-8]
   13f0c:	b	13ff0 <MyGame_Example_TestInclude_verify_table+0x11c>
   13f10:	mov	r3, #8
   13f14:	mov	r2, #8
   13f18:	mov	r1, #1
   13f1c:	ldr	r0, [fp, #-16]
   13f20:	bl	0 <flatcc_verify_field>
   13f24:	str	r0, [fp, #-8]
   13f28:	ldr	r3, [fp, #-8]
   13f2c:	cmp	r3, #0
   13f30:	beq	13f3c <MyGame_Example_TestInclude_verify_table+0x68>
   13f34:	ldr	r3, [fp, #-8]
   13f38:	b	13ff0 <MyGame_Example_TestInclude_verify_table+0x11c>
   13f3c:	mov	r3, #8
   13f40:	mov	r2, #8
   13f44:	mov	r1, #2
   13f48:	ldr	r0, [fp, #-16]
   13f4c:	bl	0 <flatcc_verify_field>
   13f50:	str	r0, [fp, #-8]
   13f54:	ldr	r3, [fp, #-8]
   13f58:	cmp	r3, #0
   13f5c:	beq	13f68 <MyGame_Example_TestInclude_verify_table+0x94>
   13f60:	ldr	r3, [fp, #-8]
   13f64:	b	13ff0 <MyGame_Example_TestInclude_verify_table+0x11c>
   13f68:	mov	r3, #4
   13f6c:	mov	r2, #4
   13f70:	mov	r1, #3
   13f74:	ldr	r0, [fp, #-16]
   13f78:	bl	0 <flatcc_verify_field>
   13f7c:	str	r0, [fp, #-8]
   13f80:	ldr	r3, [fp, #-8]
   13f84:	cmp	r3, #0
   13f88:	beq	13f94 <MyGame_Example_TestInclude_verify_table+0xc0>
   13f8c:	ldr	r3, [fp, #-8]
   13f90:	b	13ff0 <MyGame_Example_TestInclude_verify_table+0x11c>
   13f94:	mov	r3, #8
   13f98:	mov	r2, #8
   13f9c:	mov	r1, #4
   13fa0:	ldr	r0, [fp, #-16]
   13fa4:	bl	0 <flatcc_verify_field>
   13fa8:	str	r0, [fp, #-8]
   13fac:	ldr	r3, [fp, #-8]
   13fb0:	cmp	r3, #0
   13fb4:	beq	13fc0 <MyGame_Example_TestInclude_verify_table+0xec>
   13fb8:	ldr	r3, [fp, #-8]
   13fbc:	b	13ff0 <MyGame_Example_TestInclude_verify_table+0x11c>
   13fc0:	mov	r3, #8
   13fc4:	mov	r2, #8
   13fc8:	mov	r1, #5
   13fcc:	ldr	r0, [fp, #-16]
   13fd0:	bl	0 <flatcc_verify_field>
   13fd4:	str	r0, [fp, #-8]
   13fd8:	ldr	r3, [fp, #-8]
   13fdc:	cmp	r3, #0
   13fe0:	beq	13fec <MyGame_Example_TestInclude_verify_table+0x118>
   13fe4:	ldr	r3, [fp, #-8]
   13fe8:	b	13ff0 <MyGame_Example_TestInclude_verify_table+0x11c>
   13fec:	mov	r3, #0
   13ff0:	mov	r0, r3
   13ff4:	sub	sp, fp, #4
   13ff8:	pop	{fp, pc}

00013ffc <MyGame_Example_Stat_verify_table>:
   13ffc:	push	{fp, lr}
   14000:	add	fp, sp, #4
   14004:	sub	sp, sp, #16
   14008:	str	r0, [fp, #-16]
   1400c:	mov	r2, #0
   14010:	mov	r1, #0
   14014:	ldr	r0, [fp, #-16]
   14018:	bl	0 <flatcc_verify_string_field>
   1401c:	str	r0, [fp, #-8]
   14020:	ldr	r3, [fp, #-8]
   14024:	cmp	r3, #0
   14028:	beq	14034 <MyGame_Example_Stat_verify_table+0x38>
   1402c:	ldr	r3, [fp, #-8]
   14030:	b	14090 <MyGame_Example_Stat_verify_table+0x94>
   14034:	mov	r3, #8
   14038:	mov	r2, #8
   1403c:	mov	r1, #1
   14040:	ldr	r0, [fp, #-16]
   14044:	bl	0 <flatcc_verify_field>
   14048:	str	r0, [fp, #-8]
   1404c:	ldr	r3, [fp, #-8]
   14050:	cmp	r3, #0
   14054:	beq	14060 <MyGame_Example_Stat_verify_table+0x64>
   14058:	ldr	r3, [fp, #-8]
   1405c:	b	14090 <MyGame_Example_Stat_verify_table+0x94>
   14060:	mov	r3, #2
   14064:	mov	r2, #2
   14068:	mov	r1, #2
   1406c:	ldr	r0, [fp, #-16]
   14070:	bl	0 <flatcc_verify_field>
   14074:	str	r0, [fp, #-8]
   14078:	ldr	r3, [fp, #-8]
   1407c:	cmp	r3, #0
   14080:	beq	1408c <MyGame_Example_Stat_verify_table+0x90>
   14084:	ldr	r3, [fp, #-8]
   14088:	b	14090 <MyGame_Example_Stat_verify_table+0x94>
   1408c:	mov	r3, #0
   14090:	mov	r0, r3
   14094:	sub	sp, fp, #4
   14098:	pop	{fp, pc}

0001409c <MyGame_Example_Alt_verify_table>:
   1409c:	push	{fp, lr}
   140a0:	add	fp, sp, #4
   140a4:	sub	sp, sp, #16
   140a8:	str	r0, [fp, #-16]
   140ac:	ldr	r3, [pc, #140]	; 14140 <MyGame_Example_Alt_verify_table+0xa4>
   140b0:	mov	r2, #0
   140b4:	mov	r1, #0
   140b8:	ldr	r0, [fp, #-16]
   140bc:	bl	0 <flatcc_verify_table_field>
   140c0:	str	r0, [fp, #-8]
   140c4:	ldr	r3, [fp, #-8]
   140c8:	cmp	r3, #0
   140cc:	beq	140d8 <MyGame_Example_Alt_verify_table+0x3c>
   140d0:	ldr	r3, [fp, #-8]
   140d4:	b	14134 <MyGame_Example_Alt_verify_table+0x98>
   140d8:	ldr	r3, [pc, #100]	; 14144 <MyGame_Example_Alt_verify_table+0xa8>
   140dc:	mov	r2, #0
   140e0:	mov	r1, #1
   140e4:	ldr	r0, [fp, #-16]
   140e8:	bl	0 <flatcc_verify_table_field>
   140ec:	str	r0, [fp, #-8]
   140f0:	ldr	r3, [fp, #-8]
   140f4:	cmp	r3, #0
   140f8:	beq	14104 <MyGame_Example_Alt_verify_table+0x68>
   140fc:	ldr	r3, [fp, #-8]
   14100:	b	14134 <MyGame_Example_Alt_verify_table+0x98>
   14104:	ldr	r3, [pc, #60]	; 14148 <MyGame_Example_Alt_verify_table+0xac>
   14108:	mov	r2, #0
   1410c:	mov	r1, #3
   14110:	ldr	r0, [fp, #-16]
   14114:	bl	0 <flatcc_verify_union_vector_field>
   14118:	str	r0, [fp, #-8]
   1411c:	ldr	r3, [fp, #-8]
   14120:	cmp	r3, #0
   14124:	beq	14130 <MyGame_Example_Alt_verify_table+0x94>
   14128:	ldr	r3, [fp, #-8]
   1412c:	b	14134 <MyGame_Example_Alt_verify_table+0x98>
   14130:	mov	r3, #0
   14134:	mov	r0, r3
   14138:	sub	sp, fp, #4
   1413c:	pop	{fp, pc}
	...

0001414c <MyGame_Example_TestJSONPrefix_verify_table>:
   1414c:	push	{fp, lr}
   14150:	add	fp, sp, #4
   14154:	sub	sp, sp, #16
   14158:	str	r0, [fp, #-16]
   1415c:	ldr	r3, [pc, #140]	; 141f0 <MyGame_Example_TestJSONPrefix_verify_table+0xa4>
   14160:	mov	r2, #0
   14164:	mov	r1, #0
   14168:	ldr	r0, [fp, #-16]
   1416c:	bl	0 <flatcc_verify_table_field>
   14170:	str	r0, [fp, #-8]
   14174:	ldr	r3, [fp, #-8]
   14178:	cmp	r3, #0
   1417c:	beq	14188 <MyGame_Example_TestJSONPrefix_verify_table+0x3c>
   14180:	ldr	r3, [fp, #-8]
   14184:	b	141e4 <MyGame_Example_TestJSONPrefix_verify_table+0x98>
   14188:	ldr	r3, [pc, #100]	; 141f4 <MyGame_Example_TestJSONPrefix_verify_table+0xa8>
   1418c:	mov	r2, #0
   14190:	mov	r1, #1
   14194:	ldr	r0, [fp, #-16]
   14198:	bl	0 <flatcc_verify_table_field>
   1419c:	str	r0, [fp, #-8]
   141a0:	ldr	r3, [fp, #-8]
   141a4:	cmp	r3, #0
   141a8:	beq	141b4 <MyGame_Example_TestJSONPrefix_verify_table+0x68>
   141ac:	ldr	r3, [fp, #-8]
   141b0:	b	141e4 <MyGame_Example_TestJSONPrefix_verify_table+0x98>
   141b4:	ldr	r3, [pc, #60]	; 141f8 <MyGame_Example_TestJSONPrefix_verify_table+0xac>
   141b8:	mov	r2, #0
   141bc:	mov	r1, #2
   141c0:	ldr	r0, [fp, #-16]
   141c4:	bl	0 <flatcc_verify_table_field>
   141c8:	str	r0, [fp, #-8]
   141cc:	ldr	r3, [fp, #-8]
   141d0:	cmp	r3, #0
   141d4:	beq	141e0 <MyGame_Example_TestJSONPrefix_verify_table+0x94>
   141d8:	ldr	r3, [fp, #-8]
   141dc:	b	141e4 <MyGame_Example_TestJSONPrefix_verify_table+0x98>
   141e0:	mov	r3, #0
   141e4:	mov	r0, r3
   141e8:	sub	sp, fp, #4
   141ec:	pop	{fp, pc}
	...

000141fc <MyGame_Example_TestJSONPrefixParsing_verify_table>:
   141fc:	push	{fp, lr}
   14200:	add	fp, sp, #4
   14204:	sub	sp, sp, #16
   14208:	str	r0, [fp, #-16]
   1420c:	mov	r2, #0
   14210:	mov	r1, #0
   14214:	ldr	r0, [fp, #-16]
   14218:	bl	0 <flatcc_verify_string_field>
   1421c:	str	r0, [fp, #-8]
   14220:	ldr	r3, [fp, #-8]
   14224:	cmp	r3, #0
   14228:	beq	14234 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x38>
   1422c:	ldr	r3, [fp, #-8]
   14230:	b	14390 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x194>
   14234:	mov	r3, #4
   14238:	mov	r2, #4
   1423c:	mov	r1, #1
   14240:	ldr	r0, [fp, #-16]
   14244:	bl	0 <flatcc_verify_field>
   14248:	str	r0, [fp, #-8]
   1424c:	ldr	r3, [fp, #-8]
   14250:	cmp	r3, #0
   14254:	beq	14260 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x64>
   14258:	ldr	r3, [fp, #-8]
   1425c:	b	14390 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x194>
   14260:	mov	r2, #0
   14264:	mov	r1, #2
   14268:	ldr	r0, [fp, #-16]
   1426c:	bl	0 <flatcc_verify_string_field>
   14270:	str	r0, [fp, #-8]
   14274:	ldr	r3, [fp, #-8]
   14278:	cmp	r3, #0
   1427c:	beq	14288 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x8c>
   14280:	ldr	r3, [fp, #-8]
   14284:	b	14390 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x194>
   14288:	mov	r3, #8
   1428c:	mov	r2, #8
   14290:	mov	r1, #3
   14294:	ldr	r0, [fp, #-16]
   14298:	bl	0 <flatcc_verify_field>
   1429c:	str	r0, [fp, #-8]
   142a0:	ldr	r3, [fp, #-8]
   142a4:	cmp	r3, #0
   142a8:	beq	142b4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0xb8>
   142ac:	ldr	r3, [fp, #-8]
   142b0:	b	14390 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x194>
   142b4:	mov	r2, #0
   142b8:	mov	r1, #4
   142bc:	ldr	r0, [fp, #-16]
   142c0:	bl	0 <flatcc_verify_string_field>
   142c4:	str	r0, [fp, #-8]
   142c8:	ldr	r3, [fp, #-8]
   142cc:	cmp	r3, #0
   142d0:	beq	142dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0xe0>
   142d4:	ldr	r3, [fp, #-8]
   142d8:	b	14390 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x194>
   142dc:	mov	r3, #8
   142e0:	mov	r2, #8
   142e4:	mov	r1, #5
   142e8:	ldr	r0, [fp, #-16]
   142ec:	bl	0 <flatcc_verify_field>
   142f0:	str	r0, [fp, #-8]
   142f4:	ldr	r3, [fp, #-8]
   142f8:	cmp	r3, #0
   142fc:	beq	14308 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
   14300:	ldr	r3, [fp, #-8]
   14304:	b	14390 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x194>
   14308:	mov	r3, #4
   1430c:	mov	r2, #4
   14310:	mov	r1, #6
   14314:	ldr	r0, [fp, #-16]
   14318:	bl	0 <flatcc_verify_field>
   1431c:	str	r0, [fp, #-8]
   14320:	ldr	r3, [fp, #-8]
   14324:	cmp	r3, #0
   14328:	beq	14334 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x138>
   1432c:	ldr	r3, [fp, #-8]
   14330:	b	14390 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x194>
   14334:	mov	r3, #8
   14338:	mov	r2, #8
   1433c:	mov	r1, #7
   14340:	ldr	r0, [fp, #-16]
   14344:	bl	0 <flatcc_verify_field>
   14348:	str	r0, [fp, #-8]
   1434c:	ldr	r3, [fp, #-8]
   14350:	cmp	r3, #0
   14354:	beq	14360 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x164>
   14358:	ldr	r3, [fp, #-8]
   1435c:	b	14390 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x194>
   14360:	mov	r3, #4
   14364:	mov	r2, #4
   14368:	mov	r1, #8
   1436c:	ldr	r0, [fp, #-16]
   14370:	bl	0 <flatcc_verify_field>
   14374:	str	r0, [fp, #-8]
   14378:	ldr	r3, [fp, #-8]
   1437c:	cmp	r3, #0
   14380:	beq	1438c <MyGame_Example_TestJSONPrefixParsing_verify_table+0x190>
   14384:	ldr	r3, [fp, #-8]
   14388:	b	14390 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x194>
   1438c:	mov	r3, #0
   14390:	mov	r0, r3
   14394:	sub	sp, fp, #4
   14398:	pop	{fp, pc}

0001439c <MyGame_Example_TestJSONPrefixParsing2_verify_table>:
   1439c:	push	{fp, lr}
   143a0:	add	fp, sp, #4
   143a4:	sub	sp, sp, #16
   143a8:	str	r0, [fp, #-16]
   143ac:	mov	r3, #8
   143b0:	mov	r2, #8
   143b4:	mov	r1, #0
   143b8:	ldr	r0, [fp, #-16]
   143bc:	bl	0 <flatcc_verify_field>
   143c0:	str	r0, [fp, #-8]
   143c4:	ldr	r3, [fp, #-8]
   143c8:	cmp	r3, #0
   143cc:	beq	143d8 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x3c>
   143d0:	ldr	r3, [fp, #-8]
   143d4:	b	14408 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x6c>
   143d8:	mov	r3, #4
   143dc:	mov	r2, #4
   143e0:	mov	r1, #1
   143e4:	ldr	r0, [fp, #-16]
   143e8:	bl	0 <flatcc_verify_field>
   143ec:	str	r0, [fp, #-8]
   143f0:	ldr	r3, [fp, #-8]
   143f4:	cmp	r3, #0
   143f8:	beq	14404 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x68>
   143fc:	ldr	r3, [fp, #-8]
   14400:	b	14408 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x6c>
   14404:	mov	r3, #0
   14408:	mov	r0, r3
   1440c:	sub	sp, fp, #4
   14410:	pop	{fp, pc}

00014414 <MyGame_Example_TestJSONPrefixParsing3_verify_table>:
   14414:	push	{fp, lr}
   14418:	add	fp, sp, #4
   1441c:	sub	sp, sp, #16
   14420:	str	r0, [fp, #-16]
   14424:	mov	r3, #8
   14428:	mov	r2, #8
   1442c:	mov	r1, #0
   14430:	ldr	r0, [fp, #-16]
   14434:	bl	0 <flatcc_verify_field>
   14438:	str	r0, [fp, #-8]
   1443c:	ldr	r3, [fp, #-8]
   14440:	cmp	r3, #0
   14444:	beq	14450 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x3c>
   14448:	ldr	r3, [fp, #-8]
   1444c:	b	14480 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x6c>
   14450:	mov	r3, #4
   14454:	mov	r2, #4
   14458:	mov	r1, #1
   1445c:	ldr	r0, [fp, #-16]
   14460:	bl	0 <flatcc_verify_field>
   14464:	str	r0, [fp, #-8]
   14468:	ldr	r3, [fp, #-8]
   1446c:	cmp	r3, #0
   14470:	beq	1447c <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x68>
   14474:	ldr	r3, [fp, #-8]
   14478:	b	14480 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x6c>
   1447c:	mov	r3, #0
   14480:	mov	r0, r3
   14484:	sub	sp, fp, #4
   14488:	pop	{fp, pc}

0001448c <MyGame_Example_TestBase64_verify_table>:
   1448c:	push	{fp, lr}
   14490:	add	fp, sp, #4
   14494:	sub	sp, sp, #24
   14498:	str	r0, [fp, #-16]
   1449c:	mvn	r3, #0
   144a0:	str	r3, [sp, #4]
   144a4:	mov	r3, #1
   144a8:	str	r3, [sp]
   144ac:	mov	r3, #1
   144b0:	mov	r2, #0
   144b4:	mov	r1, #0
   144b8:	ldr	r0, [fp, #-16]
   144bc:	bl	0 <flatcc_verify_vector_field>
   144c0:	str	r0, [fp, #-8]
   144c4:	ldr	r3, [fp, #-8]
   144c8:	cmp	r3, #0
   144cc:	beq	144d8 <MyGame_Example_TestBase64_verify_table+0x4c>
   144d0:	ldr	r3, [fp, #-8]
   144d4:	b	14554 <MyGame_Example_TestBase64_verify_table+0xc8>
   144d8:	mvn	r3, #0
   144dc:	str	r3, [sp, #4]
   144e0:	mov	r3, #1
   144e4:	str	r3, [sp]
   144e8:	mov	r3, #1
   144ec:	mov	r2, #0
   144f0:	mov	r1, #1
   144f4:	ldr	r0, [fp, #-16]
   144f8:	bl	0 <flatcc_verify_vector_field>
   144fc:	str	r0, [fp, #-8]
   14500:	ldr	r3, [fp, #-8]
   14504:	cmp	r3, #0
   14508:	beq	14514 <MyGame_Example_TestBase64_verify_table+0x88>
   1450c:	ldr	r3, [fp, #-8]
   14510:	b	14554 <MyGame_Example_TestBase64_verify_table+0xc8>
   14514:	ldr	r3, [pc, #68]	; 14560 <MyGame_Example_TestBase64_verify_table+0xd4>
   14518:	str	r3, [sp, #4]
   1451c:	mov	r3, #1
   14520:	str	r3, [sp]
   14524:	mov	r3, #0
   14528:	mov	r2, #0
   1452c:	mov	r1, #2
   14530:	ldr	r0, [fp, #-16]
   14534:	bl	0 <flatcc_verify_table_as_nested_root>
   14538:	str	r0, [fp, #-8]
   1453c:	ldr	r3, [fp, #-8]
   14540:	cmp	r3, #0
   14544:	beq	14550 <MyGame_Example_TestBase64_verify_table+0xc4>
   14548:	ldr	r3, [fp, #-8]
   1454c:	b	14554 <MyGame_Example_TestBase64_verify_table+0xc8>
   14550:	mov	r3, #0
   14554:	mov	r0, r3
   14558:	sub	sp, fp, #4
   1455c:	pop	{fp, pc}
   14560:	.word	0x00000000

00014564 <MyGame_Example_Monster_verify_table>:
   14564:	push	{fp, lr}
   14568:	add	fp, sp, #4
   1456c:	sub	sp, sp, #24
   14570:	str	r0, [fp, #-16]
   14574:	mov	r3, #16
   14578:	mov	r2, #32
   1457c:	mov	r1, #0
   14580:	ldr	r0, [fp, #-16]
   14584:	bl	0 <flatcc_verify_field>
   14588:	str	r0, [fp, #-8]
   1458c:	ldr	r3, [fp, #-8]
   14590:	cmp	r3, #0
   14594:	beq	145a0 <MyGame_Example_Monster_verify_table+0x3c>
   14598:	ldr	r3, [fp, #-8]
   1459c:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   145a0:	mov	r3, #2
   145a4:	mov	r2, #2
   145a8:	mov	r1, #2
   145ac:	ldr	r0, [fp, #-16]
   145b0:	bl	0 <flatcc_verify_field>
   145b4:	str	r0, [fp, #-8]
   145b8:	ldr	r3, [fp, #-8]
   145bc:	cmp	r3, #0
   145c0:	beq	145cc <MyGame_Example_Monster_verify_table+0x68>
   145c4:	ldr	r3, [fp, #-8]
   145c8:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   145cc:	mov	r3, #2
   145d0:	mov	r2, #2
   145d4:	mov	r1, #1
   145d8:	ldr	r0, [fp, #-16]
   145dc:	bl	0 <flatcc_verify_field>
   145e0:	str	r0, [fp, #-8]
   145e4:	ldr	r3, [fp, #-8]
   145e8:	cmp	r3, #0
   145ec:	beq	145f8 <MyGame_Example_Monster_verify_table+0x94>
   145f0:	ldr	r3, [fp, #-8]
   145f4:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   145f8:	mov	r2, #1
   145fc:	mov	r1, #3
   14600:	ldr	r0, [fp, #-16]
   14604:	bl	0 <flatcc_verify_string_field>
   14608:	str	r0, [fp, #-8]
   1460c:	ldr	r3, [fp, #-8]
   14610:	cmp	r3, #0
   14614:	beq	14620 <MyGame_Example_Monster_verify_table+0xbc>
   14618:	ldr	r3, [fp, #-8]
   1461c:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14620:	mov	r3, #1
   14624:	mov	r2, #1
   14628:	mov	r1, #6
   1462c:	ldr	r0, [fp, #-16]
   14630:	bl	0 <flatcc_verify_field>
   14634:	str	r0, [fp, #-8]
   14638:	ldr	r3, [fp, #-8]
   1463c:	cmp	r3, #0
   14640:	beq	1464c <MyGame_Example_Monster_verify_table+0xe8>
   14644:	ldr	r3, [fp, #-8]
   14648:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   1464c:	mvn	r3, #0
   14650:	str	r3, [sp, #4]
   14654:	mov	r3, #1
   14658:	str	r3, [sp]
   1465c:	mov	r3, #1
   14660:	mov	r2, #0
   14664:	mov	r1, #5
   14668:	ldr	r0, [fp, #-16]
   1466c:	bl	0 <flatcc_verify_vector_field>
   14670:	str	r0, [fp, #-8]
   14674:	ldr	r3, [fp, #-8]
   14678:	cmp	r3, #0
   1467c:	beq	14688 <MyGame_Example_Monster_verify_table+0x124>
   14680:	ldr	r3, [fp, #-8]
   14684:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14688:	ldr	r3, [pc, #1360]	; 14be0 <MyGame_Example_Monster_verify_table+0x67c>
   1468c:	mov	r2, #0
   14690:	mov	r1, #11
   14694:	ldr	r0, [fp, #-16]
   14698:	bl	0 <flatcc_verify_table_vector_field>
   1469c:	str	r0, [fp, #-8]
   146a0:	ldr	r3, [fp, #-8]
   146a4:	cmp	r3, #0
   146a8:	beq	146b4 <MyGame_Example_Monster_verify_table+0x150>
   146ac:	ldr	r3, [fp, #-8]
   146b0:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   146b4:	mov	r2, #0
   146b8:	mov	r1, #10
   146bc:	ldr	r0, [fp, #-16]
   146c0:	bl	0 <flatcc_verify_string_vector_field>
   146c4:	str	r0, [fp, #-8]
   146c8:	ldr	r3, [fp, #-8]
   146cc:	cmp	r3, #0
   146d0:	beq	146dc <MyGame_Example_Monster_verify_table+0x178>
   146d4:	ldr	r3, [fp, #-8]
   146d8:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   146dc:	mov	r2, #0
   146e0:	mov	r1, #28
   146e4:	ldr	r0, [fp, #-16]
   146e8:	bl	0 <flatcc_verify_string_vector_field>
   146ec:	str	r0, [fp, #-8]
   146f0:	ldr	r3, [fp, #-8]
   146f4:	cmp	r3, #0
   146f8:	beq	14704 <MyGame_Example_Monster_verify_table+0x1a0>
   146fc:	ldr	r3, [fp, #-8]
   14700:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14704:	mvn	r3, #0
   14708:	str	r3, [sp, #4]
   1470c:	mov	r3, #1
   14710:	str	r3, [sp]
   14714:	mov	r3, #1
   14718:	mov	r2, #0
   1471c:	mov	r1, #24
   14720:	ldr	r0, [fp, #-16]
   14724:	bl	0 <flatcc_verify_vector_field>
   14728:	str	r0, [fp, #-8]
   1472c:	ldr	r3, [fp, #-8]
   14730:	cmp	r3, #0
   14734:	beq	14740 <MyGame_Example_Monster_verify_table+0x1dc>
   14738:	ldr	r3, [fp, #-8]
   1473c:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14740:	mvn	r3, #-536870912	; 0xe0000000
   14744:	str	r3, [sp, #4]
   14748:	mov	r3, #4
   1474c:	str	r3, [sp]
   14750:	mov	r3, #8
   14754:	mov	r2, #0
   14758:	mov	r1, #29
   1475c:	ldr	r0, [fp, #-16]
   14760:	bl	0 <flatcc_verify_vector_field>
   14764:	str	r0, [fp, #-8]
   14768:	ldr	r3, [fp, #-8]
   1476c:	cmp	r3, #0
   14770:	beq	1477c <MyGame_Example_Monster_verify_table+0x218>
   14774:	ldr	r3, [fp, #-8]
   14778:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   1477c:	ldr	r3, [pc, #1116]	; 14be0 <MyGame_Example_Monster_verify_table+0x67c>
   14780:	mov	r2, #0
   14784:	mov	r1, #12
   14788:	ldr	r0, [fp, #-16]
   1478c:	bl	0 <flatcc_verify_table_field>
   14790:	str	r0, [fp, #-8]
   14794:	ldr	r3, [fp, #-8]
   14798:	cmp	r3, #0
   1479c:	beq	147a8 <MyGame_Example_Monster_verify_table+0x244>
   147a0:	ldr	r3, [fp, #-8]
   147a4:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   147a8:	ldr	r3, [pc, #1076]	; 14be4 <MyGame_Example_Monster_verify_table+0x680>
   147ac:	mov	r2, #0
   147b0:	mov	r1, #8
   147b4:	ldr	r0, [fp, #-16]
   147b8:	bl	0 <flatcc_verify_union_field>
   147bc:	str	r0, [fp, #-8]
   147c0:	ldr	r3, [fp, #-8]
   147c4:	cmp	r3, #0
   147c8:	beq	147d4 <MyGame_Example_Monster_verify_table+0x270>
   147cc:	ldr	r3, [fp, #-8]
   147d0:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   147d4:	mvn	r3, #-1073741824	; 0xc0000000
   147d8:	str	r3, [sp, #4]
   147dc:	mov	r3, #2
   147e0:	str	r3, [sp]
   147e4:	mov	r3, #4
   147e8:	mov	r2, #0
   147ec:	mov	r1, #9
   147f0:	ldr	r0, [fp, #-16]
   147f4:	bl	0 <flatcc_verify_vector_field>
   147f8:	str	r0, [fp, #-8]
   147fc:	ldr	r3, [fp, #-8]
   14800:	cmp	r3, #0
   14804:	beq	14810 <MyGame_Example_Monster_verify_table+0x2ac>
   14808:	ldr	r3, [fp, #-8]
   1480c:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14810:	mvn	r3, #-1073741824	; 0xc0000000
   14814:	str	r3, [sp, #4]
   14818:	mov	r3, #2
   1481c:	str	r3, [sp]
   14820:	mov	r3, #4
   14824:	mov	r2, #0
   14828:	mov	r1, #31
   1482c:	ldr	r0, [fp, #-16]
   14830:	bl	0 <flatcc_verify_vector_field>
   14834:	str	r0, [fp, #-8]
   14838:	ldr	r3, [fp, #-8]
   1483c:	cmp	r3, #0
   14840:	beq	1484c <MyGame_Example_Monster_verify_table+0x2e8>
   14844:	ldr	r3, [fp, #-8]
   14848:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   1484c:	ldr	r3, [pc, #908]	; 14be0 <MyGame_Example_Monster_verify_table+0x67c>
   14850:	str	r3, [sp, #4]
   14854:	mov	r3, #1
   14858:	str	r3, [sp]
   1485c:	mov	r3, #0
   14860:	mov	r2, #0
   14864:	mov	r1, #13
   14868:	ldr	r0, [fp, #-16]
   1486c:	bl	0 <flatcc_verify_table_as_nested_root>
   14870:	str	r0, [fp, #-8]
   14874:	ldr	r3, [fp, #-8]
   14878:	cmp	r3, #0
   1487c:	beq	14888 <MyGame_Example_Monster_verify_table+0x324>
   14880:	ldr	r3, [fp, #-8]
   14884:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14888:	ldr	r3, [pc, #856]	; 14be8 <MyGame_Example_Monster_verify_table+0x684>
   1488c:	mov	r2, #0
   14890:	mov	r1, #14
   14894:	ldr	r0, [fp, #-16]
   14898:	bl	0 <flatcc_verify_table_field>
   1489c:	str	r0, [fp, #-8]
   148a0:	ldr	r3, [fp, #-8]
   148a4:	cmp	r3, #0
   148a8:	beq	148b4 <MyGame_Example_Monster_verify_table+0x350>
   148ac:	ldr	r3, [fp, #-8]
   148b0:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   148b4:	mov	r3, #1
   148b8:	mov	r2, #1
   148bc:	mov	r1, #15
   148c0:	ldr	r0, [fp, #-16]
   148c4:	bl	0 <flatcc_verify_field>
   148c8:	str	r0, [fp, #-8]
   148cc:	ldr	r3, [fp, #-8]
   148d0:	cmp	r3, #0
   148d4:	beq	148e0 <MyGame_Example_Monster_verify_table+0x37c>
   148d8:	ldr	r3, [fp, #-8]
   148dc:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   148e0:	mov	r3, #4
   148e4:	mov	r2, #4
   148e8:	mov	r1, #16
   148ec:	ldr	r0, [fp, #-16]
   148f0:	bl	0 <flatcc_verify_field>
   148f4:	str	r0, [fp, #-8]
   148f8:	ldr	r3, [fp, #-8]
   148fc:	cmp	r3, #0
   14900:	beq	1490c <MyGame_Example_Monster_verify_table+0x3a8>
   14904:	ldr	r3, [fp, #-8]
   14908:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   1490c:	mov	r3, #4
   14910:	mov	r2, #4
   14914:	mov	r1, #17
   14918:	ldr	r0, [fp, #-16]
   1491c:	bl	0 <flatcc_verify_field>
   14920:	str	r0, [fp, #-8]
   14924:	ldr	r3, [fp, #-8]
   14928:	cmp	r3, #0
   1492c:	beq	14938 <MyGame_Example_Monster_verify_table+0x3d4>
   14930:	ldr	r3, [fp, #-8]
   14934:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14938:	mov	r3, #8
   1493c:	mov	r2, #8
   14940:	mov	r1, #18
   14944:	ldr	r0, [fp, #-16]
   14948:	bl	0 <flatcc_verify_field>
   1494c:	str	r0, [fp, #-8]
   14950:	ldr	r3, [fp, #-8]
   14954:	cmp	r3, #0
   14958:	beq	14964 <MyGame_Example_Monster_verify_table+0x400>
   1495c:	ldr	r3, [fp, #-8]
   14960:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14964:	mov	r3, #8
   14968:	mov	r2, #8
   1496c:	mov	r1, #19
   14970:	ldr	r0, [fp, #-16]
   14974:	bl	0 <flatcc_verify_field>
   14978:	str	r0, [fp, #-8]
   1497c:	ldr	r3, [fp, #-8]
   14980:	cmp	r3, #0
   14984:	beq	14990 <MyGame_Example_Monster_verify_table+0x42c>
   14988:	ldr	r3, [fp, #-8]
   1498c:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14990:	mov	r3, #4
   14994:	mov	r2, #4
   14998:	mov	r1, #20
   1499c:	ldr	r0, [fp, #-16]
   149a0:	bl	0 <flatcc_verify_field>
   149a4:	str	r0, [fp, #-8]
   149a8:	ldr	r3, [fp, #-8]
   149ac:	cmp	r3, #0
   149b0:	beq	149bc <MyGame_Example_Monster_verify_table+0x458>
   149b4:	ldr	r3, [fp, #-8]
   149b8:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   149bc:	mov	r3, #4
   149c0:	mov	r2, #4
   149c4:	mov	r1, #21
   149c8:	ldr	r0, [fp, #-16]
   149cc:	bl	0 <flatcc_verify_field>
   149d0:	str	r0, [fp, #-8]
   149d4:	ldr	r3, [fp, #-8]
   149d8:	cmp	r3, #0
   149dc:	beq	149e8 <MyGame_Example_Monster_verify_table+0x484>
   149e0:	ldr	r3, [fp, #-8]
   149e4:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   149e8:	mov	r3, #8
   149ec:	mov	r2, #8
   149f0:	mov	r1, #22
   149f4:	ldr	r0, [fp, #-16]
   149f8:	bl	0 <flatcc_verify_field>
   149fc:	str	r0, [fp, #-8]
   14a00:	ldr	r3, [fp, #-8]
   14a04:	cmp	r3, #0
   14a08:	beq	14a14 <MyGame_Example_Monster_verify_table+0x4b0>
   14a0c:	ldr	r3, [fp, #-8]
   14a10:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14a14:	mov	r3, #8
   14a18:	mov	r2, #8
   14a1c:	mov	r1, #23
   14a20:	ldr	r0, [fp, #-16]
   14a24:	bl	0 <flatcc_verify_field>
   14a28:	str	r0, [fp, #-8]
   14a2c:	ldr	r3, [fp, #-8]
   14a30:	cmp	r3, #0
   14a34:	beq	14a40 <MyGame_Example_Monster_verify_table+0x4dc>
   14a38:	ldr	r3, [fp, #-8]
   14a3c:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14a40:	mov	r3, #4
   14a44:	mov	r2, #4
   14a48:	mov	r1, #25
   14a4c:	ldr	r0, [fp, #-16]
   14a50:	bl	0 <flatcc_verify_field>
   14a54:	str	r0, [fp, #-8]
   14a58:	ldr	r3, [fp, #-8]
   14a5c:	cmp	r3, #0
   14a60:	beq	14a6c <MyGame_Example_Monster_verify_table+0x508>
   14a64:	ldr	r3, [fp, #-8]
   14a68:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14a6c:	mov	r3, #4
   14a70:	mov	r2, #4
   14a74:	mov	r1, #26
   14a78:	ldr	r0, [fp, #-16]
   14a7c:	bl	0 <flatcc_verify_field>
   14a80:	str	r0, [fp, #-8]
   14a84:	ldr	r3, [fp, #-8]
   14a88:	cmp	r3, #0
   14a8c:	beq	14a98 <MyGame_Example_Monster_verify_table+0x534>
   14a90:	ldr	r3, [fp, #-8]
   14a94:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14a98:	mov	r3, #4
   14a9c:	mov	r2, #4
   14aa0:	mov	r1, #27
   14aa4:	ldr	r0, [fp, #-16]
   14aa8:	bl	0 <flatcc_verify_field>
   14aac:	str	r0, [fp, #-8]
   14ab0:	ldr	r3, [fp, #-8]
   14ab4:	cmp	r3, #0
   14ab8:	beq	14ac4 <MyGame_Example_Monster_verify_table+0x560>
   14abc:	ldr	r3, [fp, #-8]
   14ac0:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14ac4:	mvn	r3, #0
   14ac8:	str	r3, [sp, #4]
   14acc:	mov	r3, #1
   14ad0:	str	r3, [sp]
   14ad4:	mov	r3, #1
   14ad8:	mov	r2, #0
   14adc:	mov	r1, #30
   14ae0:	ldr	r0, [fp, #-16]
   14ae4:	bl	0 <flatcc_verify_vector_field>
   14ae8:	str	r0, [fp, #-8]
   14aec:	ldr	r3, [fp, #-8]
   14af0:	cmp	r3, #0
   14af4:	beq	14b00 <MyGame_Example_Monster_verify_table+0x59c>
   14af8:	ldr	r3, [fp, #-8]
   14afc:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14b00:	mvn	r3, #-536870912	; 0xe0000000
   14b04:	str	r3, [sp, #4]
   14b08:	mov	r3, #8
   14b0c:	str	r3, [sp]
   14b10:	mov	r3, #8
   14b14:	mov	r2, #0
   14b18:	mov	r1, #32
   14b1c:	ldr	r0, [fp, #-16]
   14b20:	bl	0 <flatcc_verify_vector_field>
   14b24:	str	r0, [fp, #-8]
   14b28:	ldr	r3, [fp, #-8]
   14b2c:	cmp	r3, #0
   14b30:	beq	14b3c <MyGame_Example_Monster_verify_table+0x5d8>
   14b34:	ldr	r3, [fp, #-8]
   14b38:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14b3c:	mvn	r3, #-536870912	; 0xe0000000
   14b40:	str	r3, [sp, #4]
   14b44:	mov	r3, #8
   14b48:	str	r3, [sp]
   14b4c:	mov	r3, #8
   14b50:	mov	r2, #0
   14b54:	mov	r1, #33	; 0x21
   14b58:	ldr	r0, [fp, #-16]
   14b5c:	bl	0 <flatcc_verify_vector_field>
   14b60:	str	r0, [fp, #-8]
   14b64:	ldr	r3, [fp, #-8]
   14b68:	cmp	r3, #0
   14b6c:	beq	14b78 <MyGame_Example_Monster_verify_table+0x614>
   14b70:	ldr	r3, [fp, #-8]
   14b74:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14b78:	ldr	r3, [pc, #108]	; 14bec <MyGame_Example_Monster_verify_table+0x688>
   14b7c:	mov	r2, #0
   14b80:	mov	r1, #34	; 0x22
   14b84:	ldr	r0, [fp, #-16]
   14b88:	bl	0 <flatcc_verify_table_field>
   14b8c:	str	r0, [fp, #-8]
   14b90:	ldr	r3, [fp, #-8]
   14b94:	cmp	r3, #0
   14b98:	beq	14ba4 <MyGame_Example_Monster_verify_table+0x640>
   14b9c:	ldr	r3, [fp, #-8]
   14ba0:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14ba4:	ldr	r3, [pc, #68]	; 14bf0 <MyGame_Example_Monster_verify_table+0x68c>
   14ba8:	mov	r2, #0
   14bac:	mov	r1, #35	; 0x23
   14bb0:	ldr	r0, [fp, #-16]
   14bb4:	bl	0 <flatcc_verify_table_field>
   14bb8:	str	r0, [fp, #-8]
   14bbc:	ldr	r3, [fp, #-8]
   14bc0:	cmp	r3, #0
   14bc4:	beq	14bd0 <MyGame_Example_Monster_verify_table+0x66c>
   14bc8:	ldr	r3, [fp, #-8]
   14bcc:	b	14bd4 <MyGame_Example_Monster_verify_table+0x670>
   14bd0:	mov	r3, #0
   14bd4:	mov	r0, r3
   14bd8:	sub	sp, fp, #4
   14bdc:	pop	{fp, pc}
	...

00014bf4 <MyGame_Example_TypeAliases_verify_table>:
   14bf4:	push	{fp, lr}
   14bf8:	add	fp, sp, #4
   14bfc:	sub	sp, sp, #24
   14c00:	str	r0, [fp, #-16]
   14c04:	mov	r3, #1
   14c08:	mov	r2, #1
   14c0c:	mov	r1, #0
   14c10:	ldr	r0, [fp, #-16]
   14c14:	bl	0 <flatcc_verify_field>
   14c18:	str	r0, [fp, #-8]
   14c1c:	ldr	r3, [fp, #-8]
   14c20:	cmp	r3, #0
   14c24:	beq	14c30 <MyGame_Example_TypeAliases_verify_table+0x3c>
   14c28:	ldr	r3, [fp, #-8]
   14c2c:	b	14e38 <MyGame_Example_TypeAliases_verify_table+0x244>
   14c30:	mov	r3, #1
   14c34:	mov	r2, #1
   14c38:	mov	r1, #1
   14c3c:	ldr	r0, [fp, #-16]
   14c40:	bl	0 <flatcc_verify_field>
   14c44:	str	r0, [fp, #-8]
   14c48:	ldr	r3, [fp, #-8]
   14c4c:	cmp	r3, #0
   14c50:	beq	14c5c <MyGame_Example_TypeAliases_verify_table+0x68>
   14c54:	ldr	r3, [fp, #-8]
   14c58:	b	14e38 <MyGame_Example_TypeAliases_verify_table+0x244>
   14c5c:	mov	r3, #2
   14c60:	mov	r2, #2
   14c64:	mov	r1, #2
   14c68:	ldr	r0, [fp, #-16]
   14c6c:	bl	0 <flatcc_verify_field>
   14c70:	str	r0, [fp, #-8]
   14c74:	ldr	r3, [fp, #-8]
   14c78:	cmp	r3, #0
   14c7c:	beq	14c88 <MyGame_Example_TypeAliases_verify_table+0x94>
   14c80:	ldr	r3, [fp, #-8]
   14c84:	b	14e38 <MyGame_Example_TypeAliases_verify_table+0x244>
   14c88:	mov	r3, #2
   14c8c:	mov	r2, #2
   14c90:	mov	r1, #3
   14c94:	ldr	r0, [fp, #-16]
   14c98:	bl	0 <flatcc_verify_field>
   14c9c:	str	r0, [fp, #-8]
   14ca0:	ldr	r3, [fp, #-8]
   14ca4:	cmp	r3, #0
   14ca8:	beq	14cb4 <MyGame_Example_TypeAliases_verify_table+0xc0>
   14cac:	ldr	r3, [fp, #-8]
   14cb0:	b	14e38 <MyGame_Example_TypeAliases_verify_table+0x244>
   14cb4:	mov	r3, #4
   14cb8:	mov	r2, #4
   14cbc:	mov	r1, #4
   14cc0:	ldr	r0, [fp, #-16]
   14cc4:	bl	0 <flatcc_verify_field>
   14cc8:	str	r0, [fp, #-8]
   14ccc:	ldr	r3, [fp, #-8]
   14cd0:	cmp	r3, #0
   14cd4:	beq	14ce0 <MyGame_Example_TypeAliases_verify_table+0xec>
   14cd8:	ldr	r3, [fp, #-8]
   14cdc:	b	14e38 <MyGame_Example_TypeAliases_verify_table+0x244>
   14ce0:	mov	r3, #4
   14ce4:	mov	r2, #4
   14ce8:	mov	r1, #5
   14cec:	ldr	r0, [fp, #-16]
   14cf0:	bl	0 <flatcc_verify_field>
   14cf4:	str	r0, [fp, #-8]
   14cf8:	ldr	r3, [fp, #-8]
   14cfc:	cmp	r3, #0
   14d00:	beq	14d0c <MyGame_Example_TypeAliases_verify_table+0x118>
   14d04:	ldr	r3, [fp, #-8]
   14d08:	b	14e38 <MyGame_Example_TypeAliases_verify_table+0x244>
   14d0c:	mov	r3, #8
   14d10:	mov	r2, #8
   14d14:	mov	r1, #6
   14d18:	ldr	r0, [fp, #-16]
   14d1c:	bl	0 <flatcc_verify_field>
   14d20:	str	r0, [fp, #-8]
   14d24:	ldr	r3, [fp, #-8]
   14d28:	cmp	r3, #0
   14d2c:	beq	14d38 <MyGame_Example_TypeAliases_verify_table+0x144>
   14d30:	ldr	r3, [fp, #-8]
   14d34:	b	14e38 <MyGame_Example_TypeAliases_verify_table+0x244>
   14d38:	mov	r3, #8
   14d3c:	mov	r2, #8
   14d40:	mov	r1, #7
   14d44:	ldr	r0, [fp, #-16]
   14d48:	bl	0 <flatcc_verify_field>
   14d4c:	str	r0, [fp, #-8]
   14d50:	ldr	r3, [fp, #-8]
   14d54:	cmp	r3, #0
   14d58:	beq	14d64 <MyGame_Example_TypeAliases_verify_table+0x170>
   14d5c:	ldr	r3, [fp, #-8]
   14d60:	b	14e38 <MyGame_Example_TypeAliases_verify_table+0x244>
   14d64:	mov	r3, #4
   14d68:	mov	r2, #4
   14d6c:	mov	r1, #8
   14d70:	ldr	r0, [fp, #-16]
   14d74:	bl	0 <flatcc_verify_field>
   14d78:	str	r0, [fp, #-8]
   14d7c:	ldr	r3, [fp, #-8]
   14d80:	cmp	r3, #0
   14d84:	beq	14d90 <MyGame_Example_TypeAliases_verify_table+0x19c>
   14d88:	ldr	r3, [fp, #-8]
   14d8c:	b	14e38 <MyGame_Example_TypeAliases_verify_table+0x244>
   14d90:	mov	r3, #8
   14d94:	mov	r2, #8
   14d98:	mov	r1, #9
   14d9c:	ldr	r0, [fp, #-16]
   14da0:	bl	0 <flatcc_verify_field>
   14da4:	str	r0, [fp, #-8]
   14da8:	ldr	r3, [fp, #-8]
   14dac:	cmp	r3, #0
   14db0:	beq	14dbc <MyGame_Example_TypeAliases_verify_table+0x1c8>
   14db4:	ldr	r3, [fp, #-8]
   14db8:	b	14e38 <MyGame_Example_TypeAliases_verify_table+0x244>
   14dbc:	mvn	r3, #0
   14dc0:	str	r3, [sp, #4]
   14dc4:	mov	r3, #1
   14dc8:	str	r3, [sp]
   14dcc:	mov	r3, #1
   14dd0:	mov	r2, #0
   14dd4:	mov	r1, #10
   14dd8:	ldr	r0, [fp, #-16]
   14ddc:	bl	0 <flatcc_verify_vector_field>
   14de0:	str	r0, [fp, #-8]
   14de4:	ldr	r3, [fp, #-8]
   14de8:	cmp	r3, #0
   14dec:	beq	14df8 <MyGame_Example_TypeAliases_verify_table+0x204>
   14df0:	ldr	r3, [fp, #-8]
   14df4:	b	14e38 <MyGame_Example_TypeAliases_verify_table+0x244>
   14df8:	mvn	r3, #-536870912	; 0xe0000000
   14dfc:	str	r3, [sp, #4]
   14e00:	mov	r3, #8
   14e04:	str	r3, [sp]
   14e08:	mov	r3, #8
   14e0c:	mov	r2, #0
   14e10:	mov	r1, #11
   14e14:	ldr	r0, [fp, #-16]
   14e18:	bl	0 <flatcc_verify_vector_field>
   14e1c:	str	r0, [fp, #-8]
   14e20:	ldr	r3, [fp, #-8]
   14e24:	cmp	r3, #0
   14e28:	beq	14e34 <MyGame_Example_TypeAliases_verify_table+0x240>
   14e2c:	ldr	r3, [fp, #-8]
   14e30:	b	14e38 <MyGame_Example_TypeAliases_verify_table+0x244>
   14e34:	mov	r3, #0
   14e38:	mov	r0, r3
   14e3c:	sub	sp, fp, #4
   14e40:	pop	{fp, pc}

00014e44 <Fantasy_Attacker_verify_table>:
   14e44:	push	{fp, lr}
   14e48:	add	fp, sp, #4
   14e4c:	sub	sp, sp, #16
   14e50:	str	r0, [fp, #-16]
   14e54:	mov	r3, #4
   14e58:	mov	r2, #4
   14e5c:	mov	r1, #0
   14e60:	ldr	r0, [fp, #-16]
   14e64:	bl	0 <flatcc_verify_field>
   14e68:	str	r0, [fp, #-8]
   14e6c:	ldr	r3, [fp, #-8]
   14e70:	cmp	r3, #0
   14e74:	beq	14e80 <Fantasy_Attacker_verify_table+0x3c>
   14e78:	ldr	r3, [fp, #-8]
   14e7c:	b	14e84 <Fantasy_Attacker_verify_table+0x40>
   14e80:	mov	r3, #0
   14e84:	mov	r0, r3
   14e88:	sub	sp, fp, #4
   14e8c:	pop	{fp, pc}

00014e90 <Fantasy_Movie_verify_table>:
   14e90:	push	{fp, lr}
   14e94:	add	fp, sp, #4
   14e98:	sub	sp, sp, #16
   14e9c:	str	r0, [fp, #-16]
   14ea0:	ldr	r3, [pc, #228]	; 14f8c <Fantasy_Movie_verify_table+0xfc>
   14ea4:	mov	r2, #0
   14ea8:	mov	r1, #1
   14eac:	ldr	r0, [fp, #-16]
   14eb0:	bl	0 <flatcc_verify_union_field>
   14eb4:	str	r0, [fp, #-8]
   14eb8:	ldr	r3, [fp, #-8]
   14ebc:	cmp	r3, #0
   14ec0:	beq	14ecc <Fantasy_Movie_verify_table+0x3c>
   14ec4:	ldr	r3, [fp, #-8]
   14ec8:	b	14f80 <Fantasy_Movie_verify_table+0xf0>
   14ecc:	ldr	r3, [pc, #184]	; 14f8c <Fantasy_Movie_verify_table+0xfc>
   14ed0:	mov	r2, #0
   14ed4:	mov	r1, #3
   14ed8:	ldr	r0, [fp, #-16]
   14edc:	bl	0 <flatcc_verify_union_field>
   14ee0:	str	r0, [fp, #-8]
   14ee4:	ldr	r3, [fp, #-8]
   14ee8:	cmp	r3, #0
   14eec:	beq	14ef8 <Fantasy_Movie_verify_table+0x68>
   14ef0:	ldr	r3, [fp, #-8]
   14ef4:	b	14f80 <Fantasy_Movie_verify_table+0xf0>
   14ef8:	ldr	r3, [pc, #140]	; 14f8c <Fantasy_Movie_verify_table+0xfc>
   14efc:	mov	r2, #0
   14f00:	mov	r1, #5
   14f04:	ldr	r0, [fp, #-16]
   14f08:	bl	0 <flatcc_verify_union_field>
   14f0c:	str	r0, [fp, #-8]
   14f10:	ldr	r3, [fp, #-8]
   14f14:	cmp	r3, #0
   14f18:	beq	14f24 <Fantasy_Movie_verify_table+0x94>
   14f1c:	ldr	r3, [fp, #-8]
   14f20:	b	14f80 <Fantasy_Movie_verify_table+0xf0>
   14f24:	ldr	r3, [pc, #96]	; 14f8c <Fantasy_Movie_verify_table+0xfc>
   14f28:	mov	r2, #0
   14f2c:	mov	r1, #7
   14f30:	ldr	r0, [fp, #-16]
   14f34:	bl	0 <flatcc_verify_union_field>
   14f38:	str	r0, [fp, #-8]
   14f3c:	ldr	r3, [fp, #-8]
   14f40:	cmp	r3, #0
   14f44:	beq	14f50 <Fantasy_Movie_verify_table+0xc0>
   14f48:	ldr	r3, [fp, #-8]
   14f4c:	b	14f80 <Fantasy_Movie_verify_table+0xf0>
   14f50:	ldr	r3, [pc, #52]	; 14f8c <Fantasy_Movie_verify_table+0xfc>
   14f54:	mov	r2, #0
   14f58:	mov	r1, #9
   14f5c:	ldr	r0, [fp, #-16]
   14f60:	bl	0 <flatcc_verify_union_vector_field>
   14f64:	str	r0, [fp, #-8]
   14f68:	ldr	r3, [fp, #-8]
   14f6c:	cmp	r3, #0
   14f70:	beq	14f7c <Fantasy_Movie_verify_table+0xec>
   14f74:	ldr	r3, [fp, #-8]
   14f78:	b	14f80 <Fantasy_Movie_verify_table+0xf0>
   14f7c:	mov	r3, #0
   14f80:	mov	r0, r3
   14f84:	sub	sp, fp, #4
   14f88:	pop	{fp, pc}
   14f8c:	.word	0x00000000

00014f90 <hexdump>:
   14f90:	push	{fp, lr}
   14f94:	add	fp, sp, #4
   14f98:	sub	sp, sp, #48	; 0x30
   14f9c:	str	r0, [fp, #-40]	; 0xffffffd8
   14fa0:	str	r1, [fp, #-44]	; 0xffffffd4
   14fa4:	str	r2, [fp, #-48]	; 0xffffffd0
   14fa8:	str	r3, [fp, #-52]	; 0xffffffcc
   14fac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14fb0:	str	r3, [fp, #-12]
   14fb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14fb8:	cmp	r3, #0
   14fbc:	beq	14fd0 <hexdump+0x40>
   14fc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14fc4:	ldr	r1, [pc, #396]	; 15158 <hexdump+0x1c8>
   14fc8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14fcc:	bl	0 <fprintf>
   14fd0:	mov	r3, #0
   14fd4:	str	r3, [fp, #-8]
   14fd8:	b	150f4 <hexdump+0x164>
   14fdc:	ldr	r3, [fp, #-8]
   14fe0:	and	r3, r3, #15
   14fe4:	cmp	r3, #0
   14fe8:	bne	15020 <hexdump+0x90>
   14fec:	ldr	r3, [fp, #-8]
   14ff0:	cmp	r3, #0
   14ff4:	beq	1500c <hexdump+0x7c>
   14ff8:	sub	r3, fp, #32
   14ffc:	mov	r2, r3
   15000:	ldr	r1, [pc, #340]	; 1515c <hexdump+0x1cc>
   15004:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15008:	bl	0 <fprintf>
   1500c:	ldr	r2, [fp, #-8]
   15010:	ldr	r1, [pc, #328]	; 15160 <hexdump+0x1d0>
   15014:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15018:	bl	0 <fprintf>
   1501c:	b	1503c <hexdump+0xac>
   15020:	ldr	r3, [fp, #-8]
   15024:	and	r3, r3, #7
   15028:	cmp	r3, #0
   1502c:	bne	1503c <hexdump+0xac>
   15030:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15034:	mov	r0, #32
   15038:	bl	0 <fputc>
   1503c:	ldr	r2, [fp, #-12]
   15040:	ldr	r3, [fp, #-8]
   15044:	add	r3, r2, r3
   15048:	ldrb	r3, [r3]
   1504c:	mov	r2, r3
   15050:	ldr	r1, [pc, #268]	; 15164 <hexdump+0x1d4>
   15054:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15058:	bl	0 <fprintf>
   1505c:	ldr	r2, [fp, #-12]
   15060:	ldr	r3, [fp, #-8]
   15064:	add	r3, r2, r3
   15068:	ldrb	r3, [r3]
   1506c:	cmp	r3, #31
   15070:	bls	1508c <hexdump+0xfc>
   15074:	ldr	r2, [fp, #-12]
   15078:	ldr	r3, [fp, #-8]
   1507c:	add	r3, r2, r3
   15080:	ldrb	r3, [r3]
   15084:	cmp	r3, #126	; 0x7e
   15088:	bls	150a8 <hexdump+0x118>
   1508c:	ldr	r3, [fp, #-8]
   15090:	and	r3, r3, #15
   15094:	sub	r2, fp, #4
   15098:	add	r3, r2, r3
   1509c:	mov	r2, #46	; 0x2e
   150a0:	strb	r2, [r3, #-28]	; 0xffffffe4
   150a4:	b	150cc <hexdump+0x13c>
   150a8:	ldr	r3, [fp, #-8]
   150ac:	and	r3, r3, #15
   150b0:	ldr	r1, [fp, #-12]
   150b4:	ldr	r2, [fp, #-8]
   150b8:	add	r2, r1, r2
   150bc:	ldrb	r2, [r2]
   150c0:	sub	r1, fp, #4
   150c4:	add	r3, r1, r3
   150c8:	strb	r2, [r3, #-28]	; 0xffffffe4
   150cc:	ldr	r3, [fp, #-8]
   150d0:	and	r3, r3, #15
   150d4:	add	r3, r3, #1
   150d8:	sub	r2, fp, #4
   150dc:	add	r3, r2, r3
   150e0:	mov	r2, #0
   150e4:	strb	r2, [r3, #-28]	; 0xffffffe4
   150e8:	ldr	r3, [fp, #-8]
   150ec:	add	r3, r3, #1
   150f0:	str	r3, [fp, #-8]
   150f4:	ldr	r2, [fp, #-8]
   150f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   150fc:	cmp	r2, r3
   15100:	bcc	14fdc <hexdump+0x4c>
   15104:	b	15128 <hexdump+0x198>
   15108:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1510c:	mov	r2, #3
   15110:	mov	r1, #1
   15114:	ldr	r0, [pc, #76]	; 15168 <hexdump+0x1d8>
   15118:	bl	0 <fwrite>
   1511c:	ldr	r3, [fp, #-8]
   15120:	add	r3, r3, #1
   15124:	str	r3, [fp, #-8]
   15128:	ldr	r3, [fp, #-8]
   1512c:	and	r3, r3, #15
   15130:	cmp	r3, #0
   15134:	bne	15108 <hexdump+0x178>
   15138:	sub	r3, fp, #32
   1513c:	mov	r2, r3
   15140:	ldr	r1, [pc, #20]	; 1515c <hexdump+0x1cc>
   15144:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15148:	bl	0 <fprintf>
   1514c:	nop			; (mov r0, r0)
   15150:	sub	sp, fp, #4
   15154:	pop	{fp, pc}
   15158:	.word	0x00000544
   1515c:	.word	0x0000054c
   15160:	.word	0x00000554
   15164:	.word	0x0000055c
   15168:	.word	0x00000564

0001516c <test_json>:
   1516c:	push	{r4, fp, lr}
   15170:	add	fp, sp, #8
   15174:	sub	sp, sp, #396	; 0x18c
   15178:	str	r0, [fp, #-376]	; 0xfffffe88
   1517c:	str	r1, [fp, #-380]	; 0xfffffe84
   15180:	str	r2, [fp, #-384]	; 0xfffffe80
   15184:	str	r3, [fp, #-388]	; 0xfffffe7c
   15188:	mvn	r3, #0
   1518c:	str	r3, [fp, #-16]
   15190:	mov	r3, #0
   15194:	str	r3, [fp, #-20]	; 0xffffffec
   15198:	mov	r3, #0
   1519c:	str	r3, [fp, #-28]	; 0xffffffe4
   151a0:	sub	r3, fp, #276	; 0x114
   151a4:	str	r3, [fp, #-32]	; 0xffffffe0
   151a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151ac:	bl	0 <flatcc_builder_init>
   151b0:	sub	r3, fp, #368	; 0x170
   151b4:	mov	r1, #0
   151b8:	mov	r0, r3
   151bc:	bl	0 <flatcc_json_printer_init_dynamic_buffer>
   151c0:	sub	r3, fp, #368	; 0x170
   151c4:	ldr	r1, [fp, #8]
   151c8:	mov	r0, r3
   151cc:	bl	11e40 <flatcc_json_printer_set_flags>
   151d0:	ldr	r0, [fp, #-380]	; 0xfffffe84
   151d4:	bl	0 <strlen>
   151d8:	ldr	r3, [fp, #-376]	; 0xfffffe88
   151dc:	ldr	r3, [r3]
   151e0:	ldr	r2, [fp, #-376]	; 0xfffffe88
   151e4:	ldr	r2, [r2, #4]
   151e8:	sub	r1, fp, #320	; 0x140
   151ec:	str	r2, [sp, #8]
   151f0:	str	r3, [sp, #4]
   151f4:	ldr	r3, [fp, #4]
   151f8:	str	r3, [sp]
   151fc:	mov	r3, r0
   15200:	ldr	r2, [fp, #-380]	; 0xfffffe84
   15204:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15208:	bl	0 <flatcc_json_parser_table_as_root>
   1520c:	str	r0, [fp, #-36]	; 0xffffffdc
   15210:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15214:	ldr	r3, [fp, #-388]	; 0xfffffe7c
   15218:	cmp	r2, r3
   1521c:	beq	15374 <test_json+0x208>
   15220:	ldr	r3, [fp, #-388]	; 0xfffffe7c
   15224:	cmp	r3, #0
   15228:	beq	152dc <test_json+0x170>
   1522c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15230:	cmp	r3, #0
   15234:	beq	1529c <test_json+0x130>
   15238:	ldr	r3, [pc, #748]	; 1552c <test_json+0x3c0>
   1523c:	ldr	r4, [r3]
   15240:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15244:	bl	0 <flatcc_json_parser_error_string>
   15248:	mov	r3, r0
   1524c:	ldr	r2, [fp, #12]
   15250:	ldr	r1, [pc, #728]	; 15530 <test_json+0x3c4>
   15254:	mov	r0, r4
   15258:	bl	0 <fprintf>
   1525c:	ldr	r3, [pc, #712]	; 1552c <test_json+0x3c0>
   15260:	ldr	r4, [r3]
   15264:	ldr	r0, [fp, #-388]	; 0xfffffe7c
   15268:	bl	0 <flatcc_json_parser_error_string>
   1526c:	mov	r3, r0
   15270:	mov	r2, r3
   15274:	ldr	r1, [pc, #696]	; 15534 <test_json+0x3c8>
   15278:	mov	r0, r4
   1527c:	bl	0 <fprintf>
   15280:	ldr	r3, [pc, #676]	; 1552c <test_json+0x3c0>
   15284:	ldr	r3, [r3]
   15288:	ldr	r2, [fp, #-380]	; 0xfffffe84
   1528c:	ldr	r1, [pc, #676]	; 15538 <test_json+0x3cc>
   15290:	mov	r0, r3
   15294:	bl	0 <fprintf>
   15298:	b	15318 <test_json+0x1ac>
   1529c:	ldr	r3, [pc, #648]	; 1552c <test_json+0x3c0>
   152a0:	ldr	r4, [r3]
   152a4:	ldr	r0, [fp, #-388]	; 0xfffffe7c
   152a8:	bl	0 <flatcc_json_parser_error_string>
   152ac:	mov	r3, r0
   152b0:	ldr	r2, [fp, #12]
   152b4:	ldr	r1, [pc, #640]	; 1553c <test_json+0x3d0>
   152b8:	mov	r0, r4
   152bc:	bl	0 <fprintf>
   152c0:	ldr	r3, [pc, #612]	; 1552c <test_json+0x3c0>
   152c4:	ldr	r3, [r3]
   152c8:	ldr	r2, [fp, #-380]	; 0xfffffe84
   152cc:	ldr	r1, [pc, #612]	; 15538 <test_json+0x3cc>
   152d0:	mov	r0, r3
   152d4:	bl	0 <fprintf>
   152d8:	b	15318 <test_json+0x1ac>
   152dc:	ldr	r3, [pc, #584]	; 1552c <test_json+0x3c0>
   152e0:	ldr	r4, [r3]
   152e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   152e8:	bl	0 <flatcc_json_parser_error_string>
   152ec:	mov	r3, r0
   152f0:	ldr	r2, [fp, #12]
   152f4:	ldr	r1, [pc, #580]	; 15540 <test_json+0x3d4>
   152f8:	mov	r0, r4
   152fc:	bl	0 <fprintf>
   15300:	ldr	r3, [pc, #548]	; 1552c <test_json+0x3c0>
   15304:	ldr	r3, [r3]
   15308:	ldr	r2, [fp, #-380]	; 0xfffffe84
   1530c:	ldr	r1, [pc, #548]	; 15538 <test_json+0x3cc>
   15310:	mov	r0, r3
   15314:	bl	0 <fprintf>
   15318:	mov	r3, #0
   1531c:	str	r3, [fp, #-24]	; 0xffffffe8
   15320:	b	15344 <test_json+0x1d8>
   15324:	ldr	r3, [pc, #512]	; 1552c <test_json+0x3c0>
   15328:	ldr	r3, [r3]
   1532c:	mov	r1, r3
   15330:	mov	r0, #32
   15334:	bl	0 <fputc>
   15338:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1533c:	add	r3, r3, #1
   15340:	str	r3, [fp, #-24]	; 0xffffffe8
   15344:	ldr	r3, [fp, #-300]	; 0xfffffed4
   15348:	sub	r2, r3, #1
   1534c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15350:	cmp	r2, r3
   15354:	bgt	15324 <test_json+0x1b8>
   15358:	ldr	r3, [pc, #460]	; 1552c <test_json+0x3c0>
   1535c:	ldr	r3, [r3]
   15360:	mov	r2, #2
   15364:	mov	r1, #1
   15368:	ldr	r0, [pc, #468]	; 15544 <test_json+0x3d8>
   1536c:	bl	0 <fwrite>
   15370:	b	154f0 <test_json+0x384>
   15374:	ldr	r3, [fp, #-388]	; 0xfffffe7c
   15378:	cmp	r3, #0
   1537c:	beq	1538c <test_json+0x220>
   15380:	mov	r3, #0
   15384:	str	r3, [fp, #-16]
   15388:	b	154cc <test_json+0x360>
   1538c:	sub	r3, fp, #40	; 0x28
   15390:	mov	r1, r3
   15394:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15398:	bl	0 <flatcc_builder_finalize_aligned_buffer>
   1539c:	str	r0, [fp, #-20]	; 0xffffffec
   153a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   153a4:	ldr	r3, [fp, #-376]	; 0xfffffe88
   153a8:	ldr	r2, [r3]
   153ac:	ldr	r3, [fp, #-376]	; 0xfffffe88
   153b0:	ldr	r3, [r3, #12]
   153b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   153b8:	bl	0 <flatcc_verify_table_as_root>
   153bc:	str	r0, [fp, #-16]
   153c0:	ldr	r3, [fp, #-16]
   153c4:	cmp	r3, #0
   153c8:	beq	153fc <test_json+0x290>
   153cc:	ldr	r3, [pc, #344]	; 1552c <test_json+0x3c0>
   153d0:	ldr	r4, [r3]
   153d4:	ldr	r0, [fp, #-16]
   153d8:	bl	0 <flatcc_verify_error_string>
   153dc:	mov	r3, r0
   153e0:	str	r3, [sp]
   153e4:	ldr	r3, [fp, #12]
   153e8:	ldr	r2, [pc, #344]	; 15548 <test_json+0x3dc>
   153ec:	ldr	r1, [pc, #344]	; 1554c <test_json+0x3e0>
   153f0:	mov	r0, r4
   153f4:	bl	0 <fprintf>
   153f8:	b	154f0 <test_json+0x384>
   153fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15400:	ldr	r3, [fp, #-376]	; 0xfffffe88
   15404:	ldr	r1, [r3]
   15408:	ldr	r3, [fp, #-376]	; 0xfffffe88
   1540c:	ldr	r3, [r3, #8]
   15410:	sub	r0, fp, #368	; 0x170
   15414:	str	r3, [sp]
   15418:	mov	r3, r1
   1541c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15420:	bl	0 <flatcc_json_printer_table_as_root>
   15424:	sub	r2, fp, #44	; 0x2c
   15428:	sub	r3, fp, #368	; 0x170
   1542c:	mov	r1, r2
   15430:	mov	r0, r3
   15434:	bl	0 <flatcc_json_printer_get_buffer>
   15438:	str	r0, [fp, #-28]	; 0xffffffe4
   1543c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15440:	cmp	r3, #0
   15444:	beq	15460 <test_json+0x2f4>
   15448:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1544c:	ldr	r0, [fp, #-384]	; 0xfffffe80
   15450:	bl	0 <strcmp>
   15454:	mov	r3, r0
   15458:	cmp	r3, #0
   1545c:	beq	154c4 <test_json+0x358>
   15460:	ldr	r3, [pc, #196]	; 1552c <test_json+0x3c0>
   15464:	ldr	r3, [r3]
   15468:	ldr	r2, [fp, #12]
   1546c:	ldr	r1, [pc, #220]	; 15550 <test_json+0x3e4>
   15470:	mov	r0, r3
   15474:	bl	0 <fprintf>
   15478:	ldr	r3, [pc, #172]	; 1552c <test_json+0x3c0>
   1547c:	ldr	r3, [r3]
   15480:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15484:	ldr	r1, [pc, #172]	; 15538 <test_json+0x3cc>
   15488:	mov	r0, r3
   1548c:	bl	0 <fprintf>
   15490:	ldr	r3, [pc, #148]	; 1552c <test_json+0x3c0>
   15494:	ldr	r3, [r3]
   15498:	mov	r2, #10
   1549c:	mov	r1, #1
   154a0:	ldr	r0, [pc, #172]	; 15554 <test_json+0x3e8>
   154a4:	bl	0 <fwrite>
   154a8:	ldr	r3, [pc, #124]	; 1552c <test_json+0x3c0>
   154ac:	ldr	r3, [r3]
   154b0:	ldr	r2, [fp, #-384]	; 0xfffffe80
   154b4:	ldr	r1, [pc, #124]	; 15538 <test_json+0x3cc>
   154b8:	mov	r0, r3
   154bc:	bl	0 <fprintf>
   154c0:	b	154f0 <test_json+0x384>
   154c4:	mov	r3, #0
   154c8:	str	r3, [fp, #-16]
   154cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   154d0:	bl	0 <flatcc_builder_aligned_free>
   154d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154d8:	bl	0 <flatcc_builder_clear>
   154dc:	sub	r3, fp, #368	; 0x170
   154e0:	mov	r0, r3
   154e4:	bl	0 <flatcc_json_printer_clear>
   154e8:	ldr	r3, [fp, #-16]
   154ec:	b	15520 <test_json+0x3b4>
   154f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   154f4:	cmp	r3, #0
   154f8:	beq	15514 <test_json+0x3a8>
   154fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15500:	ldr	r3, [pc, #36]	; 1552c <test_json+0x3c0>
   15504:	ldr	r3, [r3]
   15508:	ldr	r1, [fp, #-20]	; 0xffffffec
   1550c:	ldr	r0, [pc, #68]	; 15558 <test_json+0x3ec>
   15510:	bl	14f90 <hexdump>
   15514:	mvn	r3, #0
   15518:	str	r3, [fp, #-16]
   1551c:	b	154cc <test_json+0x360>
   15520:	mov	r0, r3
   15524:	sub	sp, fp, #8
   15528:	pop	{r4, fp, pc}
   1552c:	.word	0x00000000
   15530:	.word	0x000005a8
   15534:	.word	0x000005d0
   15538:	.word	0x000005f0
   1553c:	.word	0x000005f4
   15540:	.word	0x00000634
   15544:	.word	0x00000658
   15548:	.word	0x0000065c
   1554c:	.word	0x000006b0
   15550:	.word	0x000006d8
   15554:	.word	0x00000710
   15558:	.word	0x0000071c

0001555c <edge_case_tests>:
   1555c:	push	{fp, lr}
   15560:	add	fp, sp, #4
   15564:	sub	sp, sp, #24
   15568:	mov	r3, #0
   1556c:	str	r3, [fp, #-8]
   15570:	ldr	r3, [pc, #1036]	; 15984 <edge_case_tests+0x428>
   15574:	str	r3, [fp, #-12]
   15578:	mov	r3, #155	; 0x9b
   1557c:	str	r3, [sp, #8]
   15580:	mov	r3, #0
   15584:	str	r3, [sp, #4]
   15588:	mov	r3, #0
   1558c:	str	r3, [sp]
   15590:	mov	r3, #0
   15594:	ldr	r2, [pc, #1004]	; 15988 <edge_case_tests+0x42c>
   15598:	ldr	r1, [pc, #1004]	; 1598c <edge_case_tests+0x430>
   1559c:	ldr	r0, [fp, #-12]
   155a0:	bl	1516c <test_json>
   155a4:	mov	r2, r0
   155a8:	ldr	r3, [fp, #-8]
   155ac:	orr	r3, r3, r2
   155b0:	str	r3, [fp, #-8]
   155b4:	mov	r3, #168	; 0xa8
   155b8:	str	r3, [sp, #8]
   155bc:	mov	r3, #0
   155c0:	str	r3, [sp, #4]
   155c4:	mov	r3, #2
   155c8:	str	r3, [sp]
   155cc:	mov	r3, #0
   155d0:	ldr	r2, [pc, #952]	; 15990 <edge_case_tests+0x434>
   155d4:	ldr	r1, [pc, #952]	; 15994 <edge_case_tests+0x438>
   155d8:	ldr	r0, [fp, #-12]
   155dc:	bl	1516c <test_json>
   155e0:	mov	r2, r0
   155e4:	ldr	r3, [fp, #-8]
   155e8:	orr	r3, r3, r2
   155ec:	str	r3, [fp, #-8]
   155f0:	mov	r3, #172	; 0xac
   155f4:	str	r3, [sp, #8]
   155f8:	mov	r3, #2
   155fc:	str	r3, [sp, #4]
   15600:	mov	r3, #0
   15604:	str	r3, [sp]
   15608:	mov	r3, #0
   1560c:	ldr	r2, [pc, #900]	; 15998 <edge_case_tests+0x43c>
   15610:	ldr	r1, [pc, #900]	; 1599c <edge_case_tests+0x440>
   15614:	ldr	r0, [fp, #-12]
   15618:	bl	1516c <test_json>
   1561c:	mov	r2, r0
   15620:	ldr	r3, [fp, #-8]
   15624:	orr	r3, r3, r2
   15628:	str	r3, [fp, #-8]
   1562c:	mov	r3, #176	; 0xb0
   15630:	str	r3, [sp, #8]
   15634:	mov	r3, #4
   15638:	str	r3, [sp, #4]
   1563c:	mov	r3, #2
   15640:	str	r3, [sp]
   15644:	mov	r3, #0
   15648:	ldr	r2, [pc, #848]	; 159a0 <edge_case_tests+0x444>
   1564c:	ldr	r1, [pc, #832]	; 15994 <edge_case_tests+0x438>
   15650:	ldr	r0, [fp, #-12]
   15654:	bl	1516c <test_json>
   15658:	mov	r2, r0
   1565c:	ldr	r3, [fp, #-8]
   15660:	orr	r3, r3, r2
   15664:	str	r3, [fp, #-8]
   15668:	mov	r3, #180	; 0xb4
   1566c:	str	r3, [sp, #8]
   15670:	mov	r3, #8
   15674:	str	r3, [sp, #4]
   15678:	mov	r3, #0
   1567c:	str	r3, [sp]
   15680:	mov	r3, #0
   15684:	ldr	r2, [pc, #792]	; 159a4 <edge_case_tests+0x448>
   15688:	ldr	r1, [pc, #792]	; 159a8 <edge_case_tests+0x44c>
   1568c:	ldr	r0, [fp, #-12]
   15690:	bl	1516c <test_json>
   15694:	mov	r2, r0
   15698:	ldr	r3, [fp, #-8]
   1569c:	orr	r3, r3, r2
   156a0:	str	r3, [fp, #-8]
   156a4:	mov	r3, #195	; 0xc3
   156a8:	str	r3, [sp, #8]
   156ac:	mov	r3, #0
   156b0:	str	r3, [sp, #4]
   156b4:	mov	r3, #2
   156b8:	str	r3, [sp]
   156bc:	mov	r3, #0
   156c0:	ldr	r2, [pc, #712]	; 15990 <edge_case_tests+0x434>
   156c4:	ldr	r1, [pc, #736]	; 159ac <edge_case_tests+0x450>
   156c8:	ldr	r0, [fp, #-12]
   156cc:	bl	1516c <test_json>
   156d0:	mov	r2, r0
   156d4:	ldr	r3, [fp, #-8]
   156d8:	orr	r3, r3, r2
   156dc:	str	r3, [fp, #-8]
   156e0:	mov	r3, #199	; 0xc7
   156e4:	str	r3, [sp, #8]
   156e8:	mov	r3, #0
   156ec:	str	r3, [sp, #4]
   156f0:	mov	r3, #1
   156f4:	str	r3, [sp]
   156f8:	mov	r3, #0
   156fc:	ldr	r2, [pc, #684]	; 159b0 <edge_case_tests+0x454>
   15700:	ldr	r1, [pc, #684]	; 159b4 <edge_case_tests+0x458>
   15704:	ldr	r0, [fp, #-12]
   15708:	bl	1516c <test_json>
   1570c:	mov	r2, r0
   15710:	ldr	r3, [fp, #-8]
   15714:	orr	r3, r3, r2
   15718:	str	r3, [fp, #-8]
   1571c:	mov	r3, #203	; 0xcb
   15720:	str	r3, [sp, #8]
   15724:	mov	r3, #1
   15728:	str	r3, [sp, #4]
   1572c:	mov	r3, #1
   15730:	str	r3, [sp]
   15734:	mov	r3, #0
   15738:	ldr	r2, [pc, #632]	; 159b8 <edge_case_tests+0x45c>
   1573c:	ldr	r1, [pc, #624]	; 159b4 <edge_case_tests+0x458>
   15740:	ldr	r0, [fp, #-12]
   15744:	bl	1516c <test_json>
   15748:	mov	r2, r0
   1574c:	ldr	r3, [fp, #-8]
   15750:	orr	r3, r3, r2
   15754:	str	r3, [fp, #-8]
   15758:	mov	r3, #209	; 0xd1
   1575c:	str	r3, [sp, #8]
   15760:	mov	r3, #0
   15764:	str	r3, [sp, #4]
   15768:	mov	r3, #1
   1576c:	str	r3, [sp]
   15770:	mov	r3, #0
   15774:	ldr	r2, [pc, #564]	; 159b0 <edge_case_tests+0x454>
   15778:	ldr	r1, [pc, #572]	; 159bc <edge_case_tests+0x460>
   1577c:	ldr	r0, [fp, #-12]
   15780:	bl	1516c <test_json>
   15784:	mov	r2, r0
   15788:	ldr	r3, [fp, #-8]
   1578c:	orr	r3, r3, r2
   15790:	str	r3, [fp, #-8]
   15794:	mov	r3, #217	; 0xd9
   15798:	str	r3, [sp, #8]
   1579c:	mov	r3, #0
   157a0:	str	r3, [sp, #4]
   157a4:	mov	r3, #2
   157a8:	str	r3, [sp]
   157ac:	mov	r3, #0
   157b0:	ldr	r2, [pc, #472]	; 15990 <edge_case_tests+0x434>
   157b4:	ldr	r1, [pc, #516]	; 159c0 <edge_case_tests+0x464>
   157b8:	ldr	r0, [fp, #-12]
   157bc:	bl	1516c <test_json>
   157c0:	mov	r2, r0
   157c4:	ldr	r3, [fp, #-8]
   157c8:	orr	r3, r3, r2
   157cc:	str	r3, [fp, #-8]
   157d0:	mov	r3, #221	; 0xdd
   157d4:	str	r3, [sp, #8]
   157d8:	mov	r3, #2
   157dc:	str	r3, [sp, #4]
   157e0:	mov	r3, #0
   157e4:	str	r3, [sp]
   157e8:	mov	r3, #0
   157ec:	ldr	r2, [pc, #420]	; 15998 <edge_case_tests+0x43c>
   157f0:	ldr	r1, [pc, #460]	; 159c4 <edge_case_tests+0x468>
   157f4:	ldr	r0, [fp, #-12]
   157f8:	bl	1516c <test_json>
   157fc:	mov	r2, r0
   15800:	ldr	r3, [fp, #-8]
   15804:	orr	r3, r3, r2
   15808:	str	r3, [fp, #-8]
   1580c:	mov	r3, #225	; 0xe1
   15810:	str	r3, [sp, #8]
   15814:	mov	r3, #4
   15818:	str	r3, [sp, #4]
   1581c:	mov	r3, #2
   15820:	str	r3, [sp]
   15824:	mov	r3, #0
   15828:	ldr	r2, [pc, #368]	; 159a0 <edge_case_tests+0x444>
   1582c:	ldr	r1, [pc, #396]	; 159c0 <edge_case_tests+0x464>
   15830:	ldr	r0, [fp, #-12]
   15834:	bl	1516c <test_json>
   15838:	mov	r2, r0
   1583c:	ldr	r3, [fp, #-8]
   15840:	orr	r3, r3, r2
   15844:	str	r3, [fp, #-8]
   15848:	mov	r3, #229	; 0xe5
   1584c:	str	r3, [sp, #8]
   15850:	mov	r3, #8
   15854:	str	r3, [sp, #4]
   15858:	mov	r3, #0
   1585c:	str	r3, [sp]
   15860:	mov	r3, #0
   15864:	ldr	r2, [pc, #348]	; 159c8 <edge_case_tests+0x46c>
   15868:	ldr	r1, [pc, #348]	; 159cc <edge_case_tests+0x470>
   1586c:	ldr	r0, [fp, #-12]
   15870:	bl	1516c <test_json>
   15874:	mov	r2, r0
   15878:	ldr	r3, [fp, #-8]
   1587c:	orr	r3, r3, r2
   15880:	str	r3, [fp, #-8]
   15884:	mov	r3, #233	; 0xe9
   15888:	str	r3, [sp, #8]
   1588c:	mov	r3, #0
   15890:	str	r3, [sp, #4]
   15894:	mov	r3, #2
   15898:	str	r3, [sp]
   1589c:	mov	r3, #0
   158a0:	ldr	r2, [pc, #232]	; 15990 <edge_case_tests+0x434>
   158a4:	ldr	r1, [pc, #292]	; 159d0 <edge_case_tests+0x474>
   158a8:	ldr	r0, [fp, #-12]
   158ac:	bl	1516c <test_json>
   158b0:	mov	r2, r0
   158b4:	ldr	r3, [fp, #-8]
   158b8:	orr	r3, r3, r2
   158bc:	str	r3, [fp, #-8]
   158c0:	mov	r3, #237	; 0xed
   158c4:	str	r3, [sp, #8]
   158c8:	mov	r3, #0
   158cc:	str	r3, [sp, #4]
   158d0:	mov	r3, #1
   158d4:	str	r3, [sp]
   158d8:	mov	r3, #0
   158dc:	ldr	r2, [pc, #204]	; 159b0 <edge_case_tests+0x454>
   158e0:	ldr	r1, [pc, #236]	; 159d4 <edge_case_tests+0x478>
   158e4:	ldr	r0, [fp, #-12]
   158e8:	bl	1516c <test_json>
   158ec:	mov	r2, r0
   158f0:	ldr	r3, [fp, #-8]
   158f4:	orr	r3, r3, r2
   158f8:	str	r3, [fp, #-8]
   158fc:	mov	r3, #241	; 0xf1
   15900:	str	r3, [sp, #8]
   15904:	mov	r3, #1
   15908:	str	r3, [sp, #4]
   1590c:	mov	r3, #1
   15910:	str	r3, [sp]
   15914:	mov	r3, #0
   15918:	ldr	r2, [pc, #152]	; 159b8 <edge_case_tests+0x45c>
   1591c:	ldr	r1, [pc, #176]	; 159d4 <edge_case_tests+0x478>
   15920:	ldr	r0, [fp, #-12]
   15924:	bl	1516c <test_json>
   15928:	mov	r2, r0
   1592c:	ldr	r3, [fp, #-8]
   15930:	orr	r3, r3, r2
   15934:	str	r3, [fp, #-8]
   15938:	mov	r3, #247	; 0xf7
   1593c:	str	r3, [sp, #8]
   15940:	mov	r3, #0
   15944:	str	r3, [sp, #4]
   15948:	mov	r3, #1
   1594c:	str	r3, [sp]
   15950:	mov	r3, #0
   15954:	ldr	r2, [pc, #84]	; 159b0 <edge_case_tests+0x454>
   15958:	ldr	r1, [pc, #120]	; 159d8 <edge_case_tests+0x47c>
   1595c:	ldr	r0, [fp, #-12]
   15960:	bl	1516c <test_json>
   15964:	mov	r2, r0
   15968:	ldr	r3, [fp, #-8]
   1596c:	orr	r3, r3, r2
   15970:	str	r3, [fp, #-8]
   15974:	ldr	r3, [fp, #-8]
   15978:	mov	r0, r3
   1597c:	sub	sp, fp, #4
   15980:	pop	{fp, pc}
   15984:	.word	0x00000568
   15988:	.word	0x0000072c
   1598c:	.word	0x0000074c
   15990:	.word	0x00000780
   15994:	.word	0x000007a4
   15998:	.word	0x000007c8
   1599c:	.word	0x000007e8
   159a0:	.word	0x00000810
   159a4:	.word	0x00000824
   159a8:	.word	0x00000938
   159ac:	.word	0x0000095c
   159b0:	.word	0x00000984
   159b4:	.word	0x000009a0
   159b8:	.word	0x000009d4
   159bc:	.word	0x000009ec
   159c0:	.word	0x00000a60
   159c4:	.word	0x00000a80
   159c8:	.word	0x00000aa4
   159cc:	.word	0x00000bbc
   159d0:	.word	0x00000bd0
   159d4:	.word	0x00000bf0
   159d8:	.word	0x00000c1c

000159dc <error_case_tests>:
   159dc:	push	{fp, lr}
   159e0:	add	fp, sp, #4
   159e4:	sub	sp, sp, #24
   159e8:	mov	r3, #0
   159ec:	str	r3, [fp, #-8]
   159f0:	ldr	r3, [pc, #1096]	; 15e40 <error_case_tests+0x464>
   159f4:	str	r3, [fp, #-12]
   159f8:	ldr	r3, [pc, #1092]	; 15e44 <error_case_tests+0x468>
   159fc:	str	r3, [sp, #8]
   15a00:	mov	r3, #0
   15a04:	str	r3, [sp, #4]
   15a08:	mov	r3, #0
   15a0c:	str	r3, [sp]
   15a10:	mov	r3, #13
   15a14:	mov	r2, #0
   15a18:	ldr	r1, [pc, #1064]	; 15e48 <error_case_tests+0x46c>
   15a1c:	ldr	r0, [fp, #-12]
   15a20:	bl	1516c <test_json>
   15a24:	mov	r2, r0
   15a28:	ldr	r3, [fp, #-8]
   15a2c:	orr	r3, r3, r2
   15a30:	str	r3, [fp, #-8]
   15a34:	ldr	r3, [pc, #1040]	; 15e4c <error_case_tests+0x470>
   15a38:	str	r3, [sp, #8]
   15a3c:	mov	r3, #0
   15a40:	str	r3, [sp, #4]
   15a44:	mov	r3, #0
   15a48:	str	r3, [sp]
   15a4c:	mov	r3, #13
   15a50:	mov	r2, #0
   15a54:	ldr	r1, [pc, #1012]	; 15e50 <error_case_tests+0x474>
   15a58:	ldr	r0, [fp, #-12]
   15a5c:	bl	1516c <test_json>
   15a60:	mov	r2, r0
   15a64:	ldr	r3, [fp, #-8]
   15a68:	orr	r3, r3, r2
   15a6c:	str	r3, [fp, #-8]
   15a70:	ldr	r3, [pc, #988]	; 15e54 <error_case_tests+0x478>
   15a74:	str	r3, [sp, #8]
   15a78:	mov	r3, #0
   15a7c:	str	r3, [sp, #4]
   15a80:	mov	r3, #0
   15a84:	str	r3, [sp]
   15a88:	mov	r3, #13
   15a8c:	mov	r2, #0
   15a90:	ldr	r1, [pc, #960]	; 15e58 <error_case_tests+0x47c>
   15a94:	ldr	r0, [fp, #-12]
   15a98:	bl	1516c <test_json>
   15a9c:	mov	r2, r0
   15aa0:	ldr	r3, [fp, #-8]
   15aa4:	orr	r3, r3, r2
   15aa8:	str	r3, [fp, #-8]
   15aac:	ldr	r3, [pc, #936]	; 15e5c <error_case_tests+0x480>
   15ab0:	str	r3, [sp, #8]
   15ab4:	mov	r3, #0
   15ab8:	str	r3, [sp, #4]
   15abc:	mov	r3, #0
   15ac0:	str	r3, [sp]
   15ac4:	mov	r3, #13
   15ac8:	mov	r2, #0
   15acc:	ldr	r1, [pc, #908]	; 15e60 <error_case_tests+0x484>
   15ad0:	ldr	r0, [fp, #-12]
   15ad4:	bl	1516c <test_json>
   15ad8:	mov	r2, r0
   15adc:	ldr	r3, [fp, #-8]
   15ae0:	orr	r3, r3, r2
   15ae4:	str	r3, [fp, #-8]
   15ae8:	ldr	r3, [pc, #884]	; 15e64 <error_case_tests+0x488>
   15aec:	str	r3, [sp, #8]
   15af0:	mov	r3, #0
   15af4:	str	r3, [sp, #4]
   15af8:	mov	r3, #0
   15afc:	str	r3, [sp]
   15b00:	mov	r3, #13
   15b04:	mov	r2, #0
   15b08:	ldr	r1, [pc, #856]	; 15e68 <error_case_tests+0x48c>
   15b0c:	ldr	r0, [fp, #-12]
   15b10:	bl	1516c <test_json>
   15b14:	mov	r2, r0
   15b18:	ldr	r3, [fp, #-8]
   15b1c:	orr	r3, r3, r2
   15b20:	str	r3, [fp, #-8]
   15b24:	mov	r3, #296	; 0x128
   15b28:	str	r3, [sp, #8]
   15b2c:	mov	r3, #0
   15b30:	str	r3, [sp, #4]
   15b34:	mov	r3, #0
   15b38:	str	r3, [sp]
   15b3c:	mov	r3, #13
   15b40:	mov	r2, #0
   15b44:	ldr	r1, [pc, #800]	; 15e6c <error_case_tests+0x490>
   15b48:	ldr	r0, [fp, #-12]
   15b4c:	bl	1516c <test_json>
   15b50:	mov	r2, r0
   15b54:	ldr	r3, [fp, #-8]
   15b58:	orr	r3, r3, r2
   15b5c:	str	r3, [fp, #-8]
   15b60:	ldr	r3, [pc, #776]	; 15e70 <error_case_tests+0x494>
   15b64:	str	r3, [sp, #8]
   15b68:	mov	r3, #0
   15b6c:	str	r3, [sp, #4]
   15b70:	mov	r3, #0
   15b74:	str	r3, [sp]
   15b78:	mov	r3, #13
   15b7c:	mov	r2, #0
   15b80:	ldr	r1, [pc, #748]	; 15e74 <error_case_tests+0x498>
   15b84:	ldr	r0, [fp, #-12]
   15b88:	bl	1516c <test_json>
   15b8c:	mov	r2, r0
   15b90:	ldr	r3, [fp, #-8]
   15b94:	orr	r3, r3, r2
   15b98:	str	r3, [fp, #-8]
   15b9c:	ldr	r3, [pc, #724]	; 15e78 <error_case_tests+0x49c>
   15ba0:	str	r3, [sp, #8]
   15ba4:	mov	r3, #0
   15ba8:	str	r3, [sp, #4]
   15bac:	mov	r3, #0
   15bb0:	str	r3, [sp]
   15bb4:	mov	r3, #13
   15bb8:	mov	r2, #0
   15bbc:	ldr	r1, [pc, #696]	; 15e7c <error_case_tests+0x4a0>
   15bc0:	ldr	r0, [fp, #-12]
   15bc4:	bl	1516c <test_json>
   15bc8:	mov	r2, r0
   15bcc:	ldr	r3, [fp, #-8]
   15bd0:	orr	r3, r3, r2
   15bd4:	str	r3, [fp, #-8]
   15bd8:	ldr	r3, [pc, #672]	; 15e80 <error_case_tests+0x4a4>
   15bdc:	str	r3, [sp, #8]
   15be0:	mov	r3, #0
   15be4:	str	r3, [sp, #4]
   15be8:	mov	r3, #0
   15bec:	str	r3, [sp]
   15bf0:	mov	r3, #13
   15bf4:	mov	r2, #0
   15bf8:	ldr	r1, [pc, #644]	; 15e84 <error_case_tests+0x4a8>
   15bfc:	ldr	r0, [fp, #-12]
   15c00:	bl	1516c <test_json>
   15c04:	mov	r2, r0
   15c08:	ldr	r3, [fp, #-8]
   15c0c:	orr	r3, r3, r2
   15c10:	str	r3, [fp, #-8]
   15c14:	ldr	r3, [pc, #620]	; 15e88 <error_case_tests+0x4ac>
   15c18:	str	r3, [sp, #8]
   15c1c:	mov	r3, #0
   15c20:	str	r3, [sp, #4]
   15c24:	mov	r3, #0
   15c28:	str	r3, [sp]
   15c2c:	mov	r3, #13
   15c30:	mov	r2, #0
   15c34:	ldr	r1, [pc, #592]	; 15e8c <error_case_tests+0x4b0>
   15c38:	ldr	r0, [fp, #-12]
   15c3c:	bl	1516c <test_json>
   15c40:	mov	r2, r0
   15c44:	ldr	r3, [fp, #-8]
   15c48:	orr	r3, r3, r2
   15c4c:	str	r3, [fp, #-8]
   15c50:	mov	r3, #324	; 0x144
   15c54:	str	r3, [sp, #8]
   15c58:	mov	r3, #0
   15c5c:	str	r3, [sp, #4]
   15c60:	mov	r3, #0
   15c64:	str	r3, [sp]
   15c68:	mov	r3, #13
   15c6c:	mov	r2, #0
   15c70:	ldr	r1, [pc, #536]	; 15e90 <error_case_tests+0x4b4>
   15c74:	ldr	r0, [fp, #-12]
   15c78:	bl	1516c <test_json>
   15c7c:	mov	r2, r0
   15c80:	ldr	r3, [fp, #-8]
   15c84:	orr	r3, r3, r2
   15c88:	str	r3, [fp, #-8]
   15c8c:	ldr	r3, [pc, #512]	; 15e94 <error_case_tests+0x4b8>
   15c90:	str	r3, [sp, #8]
   15c94:	mov	r3, #0
   15c98:	str	r3, [sp, #4]
   15c9c:	mov	r3, #0
   15ca0:	str	r3, [sp]
   15ca4:	mov	r3, #13
   15ca8:	mov	r2, #0
   15cac:	ldr	r1, [pc, #484]	; 15e98 <error_case_tests+0x4bc>
   15cb0:	ldr	r0, [fp, #-12]
   15cb4:	bl	1516c <test_json>
   15cb8:	mov	r2, r0
   15cbc:	ldr	r3, [fp, #-8]
   15cc0:	orr	r3, r3, r2
   15cc4:	str	r3, [fp, #-8]
   15cc8:	mov	r3, #328	; 0x148
   15ccc:	str	r3, [sp, #8]
   15cd0:	mov	r3, #0
   15cd4:	str	r3, [sp, #4]
   15cd8:	mov	r3, #0
   15cdc:	str	r3, [sp]
   15ce0:	mov	r3, #13
   15ce4:	mov	r2, #0
   15ce8:	ldr	r1, [pc, #428]	; 15e9c <error_case_tests+0x4c0>
   15cec:	ldr	r0, [fp, #-12]
   15cf0:	bl	1516c <test_json>
   15cf4:	mov	r2, r0
   15cf8:	ldr	r3, [fp, #-8]
   15cfc:	orr	r3, r3, r2
   15d00:	str	r3, [fp, #-8]
   15d04:	ldr	r3, [pc, #404]	; 15ea0 <error_case_tests+0x4c4>
   15d08:	str	r3, [sp, #8]
   15d0c:	mov	r3, #0
   15d10:	str	r3, [sp, #4]
   15d14:	mov	r3, #0
   15d18:	str	r3, [sp]
   15d1c:	mov	r3, #13
   15d20:	mov	r2, #0
   15d24:	ldr	r1, [pc, #376]	; 15ea4 <error_case_tests+0x4c8>
   15d28:	ldr	r0, [fp, #-12]
   15d2c:	bl	1516c <test_json>
   15d30:	mov	r2, r0
   15d34:	ldr	r3, [fp, #-8]
   15d38:	orr	r3, r3, r2
   15d3c:	str	r3, [fp, #-8]
   15d40:	ldr	r3, [pc, #352]	; 15ea8 <error_case_tests+0x4cc>
   15d44:	str	r3, [sp, #8]
   15d48:	mov	r3, #0
   15d4c:	str	r3, [sp, #4]
   15d50:	mov	r3, #0
   15d54:	str	r3, [sp]
   15d58:	mov	r3, #13
   15d5c:	mov	r2, #0
   15d60:	ldr	r1, [pc, #324]	; 15eac <error_case_tests+0x4d0>
   15d64:	ldr	r0, [fp, #-12]
   15d68:	bl	1516c <test_json>
   15d6c:	mov	r2, r0
   15d70:	ldr	r3, [fp, #-8]
   15d74:	orr	r3, r3, r2
   15d78:	str	r3, [fp, #-8]
   15d7c:	mov	r3, #336	; 0x150
   15d80:	str	r3, [sp, #8]
   15d84:	mov	r3, #0
   15d88:	str	r3, [sp, #4]
   15d8c:	mov	r3, #0
   15d90:	str	r3, [sp]
   15d94:	mov	r3, #13
   15d98:	mov	r2, #0
   15d9c:	ldr	r1, [pc, #268]	; 15eb0 <error_case_tests+0x4d4>
   15da0:	ldr	r0, [fp, #-12]
   15da4:	bl	1516c <test_json>
   15da8:	mov	r2, r0
   15dac:	ldr	r3, [fp, #-8]
   15db0:	orr	r3, r3, r2
   15db4:	str	r3, [fp, #-8]
   15db8:	mov	r3, #340	; 0x154
   15dbc:	str	r3, [sp, #8]
   15dc0:	mov	r3, #0
   15dc4:	str	r3, [sp, #4]
   15dc8:	mov	r3, #0
   15dcc:	str	r3, [sp]
   15dd0:	mov	r3, #13
   15dd4:	mov	r2, #0
   15dd8:	ldr	r1, [pc, #212]	; 15eb4 <error_case_tests+0x4d8>
   15ddc:	ldr	r0, [fp, #-12]
   15de0:	bl	1516c <test_json>
   15de4:	mov	r2, r0
   15de8:	ldr	r3, [fp, #-8]
   15dec:	orr	r3, r3, r2
   15df0:	str	r3, [fp, #-8]
   15df4:	mov	r3, #344	; 0x158
   15df8:	str	r3, [sp, #8]
   15dfc:	mov	r3, #0
   15e00:	str	r3, [sp, #4]
   15e04:	mov	r3, #0
   15e08:	str	r3, [sp]
   15e0c:	mov	r3, #13
   15e10:	mov	r2, #0
   15e14:	ldr	r1, [pc, #156]	; 15eb8 <error_case_tests+0x4dc>
   15e18:	ldr	r0, [fp, #-12]
   15e1c:	bl	1516c <test_json>
   15e20:	mov	r2, r0
   15e24:	ldr	r3, [fp, #-8]
   15e28:	orr	r3, r3, r2
   15e2c:	str	r3, [fp, #-8]
   15e30:	ldr	r3, [fp, #-8]
   15e34:	mov	r0, r3
   15e38:	sub	sp, fp, #4
   15e3c:	pop	{fp, pc}
   15e40:	.word	0x00000568
   15e44:	.word	0x0000011d
   15e48:	.word	0x00000c7c
   15e4c:	.word	0x0000011f
   15e50:	.word	0x00000c98
   15e54:	.word	0x00000121
   15e58:	.word	0x00000cfc
   15e5c:	.word	0x00000123
   15e60:	.word	0x00000d5c
   15e64:	.word	0x00000125
   15e68:	.word	0x00000db4
   15e6c:	.word	0x00000e0c
   15e70:	.word	0x0000012b
   15e74:	.word	0x00000eac
   15e78:	.word	0x0000012f
   15e7c:	.word	0x00000f48
   15e80:	.word	0x00000133
   15e84:	.word	0x00001010
   15e88:	.word	0x00000142
   15e8c:	.word	0x000010d8
   15e90:	.word	0x000010f0
   15e94:	.word	0x00000146
   15e98:	.word	0x00001148
   15e9c:	.word	0x0000119c
   15ea0:	.word	0x0000014a
   15ea4:	.word	0x000011ec
   15ea8:	.word	0x0000014d
   15eac:	.word	0x0000123c
   15eb0:	.word	0x000012c8
   15eb4:	.word	0x00001354
   15eb8:	.word	0x00001404

00015ebc <base64_tests>:
   15ebc:	push	{fp, lr}
   15ec0:	add	fp, sp, #4
   15ec4:	sub	sp, sp, #24
   15ec8:	mov	r3, #0
   15ecc:	str	r3, [fp, #-8]
   15ed0:	ldr	r3, [pc, #616]	; 16140 <base64_tests+0x284>
   15ed4:	str	r3, [fp, #-12]
   15ed8:	ldr	r3, [pc, #612]	; 16144 <base64_tests+0x288>
   15edc:	str	r3, [sp, #8]
   15ee0:	mov	r3, #0
   15ee4:	str	r3, [sp, #4]
   15ee8:	mov	r3, #0
   15eec:	str	r3, [sp]
   15ef0:	mov	r3, #0
   15ef4:	ldr	r2, [pc, #588]	; 16148 <base64_tests+0x28c>
   15ef8:	ldr	r1, [pc, #588]	; 1614c <base64_tests+0x290>
   15efc:	ldr	r0, [fp, #-12]
   15f00:	bl	1516c <test_json>
   15f04:	mov	r2, r0
   15f08:	ldr	r3, [fp, #-8]
   15f0c:	orr	r3, r3, r2
   15f10:	str	r3, [fp, #-8]
   15f14:	mov	r3, #372	; 0x174
   15f18:	str	r3, [sp, #8]
   15f1c:	mov	r3, #0
   15f20:	str	r3, [sp, #4]
   15f24:	mov	r3, #0
   15f28:	str	r3, [sp]
   15f2c:	mov	r3, #0
   15f30:	ldr	r2, [pc, #536]	; 16150 <base64_tests+0x294>
   15f34:	ldr	r1, [pc, #536]	; 16154 <base64_tests+0x298>
   15f38:	ldr	r0, [fp, #-12]
   15f3c:	bl	1516c <test_json>
   15f40:	mov	r2, r0
   15f44:	ldr	r3, [fp, #-8]
   15f48:	orr	r3, r3, r2
   15f4c:	str	r3, [fp, #-8]
   15f50:	mov	r3, #376	; 0x178
   15f54:	str	r3, [sp, #8]
   15f58:	mov	r3, #0
   15f5c:	str	r3, [sp, #4]
   15f60:	mov	r3, #0
   15f64:	str	r3, [sp]
   15f68:	mov	r3, #0
   15f6c:	ldr	r2, [pc, #484]	; 16158 <base64_tests+0x29c>
   15f70:	ldr	r1, [pc, #484]	; 1615c <base64_tests+0x2a0>
   15f74:	ldr	r0, [fp, #-12]
   15f78:	bl	1516c <test_json>
   15f7c:	mov	r2, r0
   15f80:	ldr	r3, [fp, #-8]
   15f84:	orr	r3, r3, r2
   15f88:	str	r3, [fp, #-8]
   15f8c:	ldr	r3, [pc, #460]	; 16160 <base64_tests+0x2a4>
   15f90:	str	r3, [sp, #8]
   15f94:	mov	r3, #0
   15f98:	str	r3, [sp, #4]
   15f9c:	mov	r3, #0
   15fa0:	str	r3, [sp]
   15fa4:	mov	r3, #0
   15fa8:	ldr	r2, [pc, #436]	; 16164 <base64_tests+0x2a8>
   15fac:	ldr	r1, [pc, #436]	; 16168 <base64_tests+0x2ac>
   15fb0:	ldr	r0, [fp, #-12]
   15fb4:	bl	1516c <test_json>
   15fb8:	mov	r2, r0
   15fbc:	ldr	r3, [fp, #-8]
   15fc0:	orr	r3, r3, r2
   15fc4:	str	r3, [fp, #-8]
   15fc8:	ldr	r3, [pc, #412]	; 1616c <base64_tests+0x2b0>
   15fcc:	str	r3, [sp, #8]
   15fd0:	mov	r3, #0
   15fd4:	str	r3, [sp, #4]
   15fd8:	mov	r3, #0
   15fdc:	str	r3, [sp]
   15fe0:	mov	r3, #0
   15fe4:	ldr	r2, [pc, #364]	; 16158 <base64_tests+0x29c>
   15fe8:	ldr	r1, [pc, #384]	; 16170 <base64_tests+0x2b4>
   15fec:	ldr	r0, [fp, #-12]
   15ff0:	bl	1516c <test_json>
   15ff4:	mov	r2, r0
   15ff8:	ldr	r3, [fp, #-8]
   15ffc:	orr	r3, r3, r2
   16000:	str	r3, [fp, #-8]
   16004:	ldr	r3, [pc, #360]	; 16174 <base64_tests+0x2b8>
   16008:	str	r3, [sp, #8]
   1600c:	mov	r3, #0
   16010:	str	r3, [sp, #4]
   16014:	mov	r3, #0
   16018:	str	r3, [sp]
   1601c:	mov	r3, #0
   16020:	ldr	r2, [pc, #316]	; 16164 <base64_tests+0x2a8>
   16024:	ldr	r1, [pc, #332]	; 16178 <base64_tests+0x2bc>
   16028:	ldr	r0, [fp, #-12]
   1602c:	bl	1516c <test_json>
   16030:	mov	r2, r0
   16034:	ldr	r3, [fp, #-8]
   16038:	orr	r3, r3, r2
   1603c:	str	r3, [fp, #-8]
   16040:	mov	r3, #388	; 0x184
   16044:	str	r3, [sp, #8]
   16048:	mov	r3, #0
   1604c:	str	r3, [sp, #4]
   16050:	mov	r3, #0
   16054:	str	r3, [sp]
   16058:	mov	r3, #31
   1605c:	mov	r2, #0
   16060:	ldr	r1, [pc, #276]	; 1617c <base64_tests+0x2c0>
   16064:	ldr	r0, [fp, #-12]
   16068:	bl	1516c <test_json>
   1606c:	mov	r2, r0
   16070:	ldr	r3, [fp, #-8]
   16074:	orr	r3, r3, r2
   16078:	str	r3, [fp, #-8]
   1607c:	ldr	r3, [pc, #252]	; 16180 <base64_tests+0x2c4>
   16080:	str	r3, [sp, #8]
   16084:	mov	r3, #0
   16088:	str	r3, [sp, #4]
   1608c:	mov	r3, #0
   16090:	str	r3, [sp]
   16094:	mov	r3, #32
   16098:	mov	r2, #0
   1609c:	ldr	r1, [pc, #224]	; 16184 <base64_tests+0x2c8>
   160a0:	ldr	r0, [fp, #-12]
   160a4:	bl	1516c <test_json>
   160a8:	mov	r2, r0
   160ac:	ldr	r3, [fp, #-8]
   160b0:	orr	r3, r3, r2
   160b4:	str	r3, [fp, #-8]
   160b8:	ldr	r3, [pc, #200]	; 16188 <base64_tests+0x2cc>
   160bc:	str	r3, [sp, #8]
   160c0:	mov	r3, #0
   160c4:	str	r3, [sp, #4]
   160c8:	mov	r3, #0
   160cc:	str	r3, [sp]
   160d0:	mov	r3, #0
   160d4:	ldr	r2, [pc, #176]	; 1618c <base64_tests+0x2d0>
   160d8:	ldr	r1, [pc, #176]	; 16190 <base64_tests+0x2d4>
   160dc:	ldr	r0, [fp, #-12]
   160e0:	bl	1516c <test_json>
   160e4:	mov	r2, r0
   160e8:	ldr	r3, [fp, #-8]
   160ec:	orr	r3, r3, r2
   160f0:	str	r3, [fp, #-8]
   160f4:	ldr	r3, [pc, #152]	; 16194 <base64_tests+0x2d8>
   160f8:	str	r3, [sp, #8]
   160fc:	mov	r3, #0
   16100:	str	r3, [sp, #4]
   16104:	mov	r3, #0
   16108:	str	r3, [sp]
   1610c:	mov	r3, #0
   16110:	ldr	r2, [pc, #116]	; 1618c <base64_tests+0x2d0>
   16114:	ldr	r1, [pc, #124]	; 16198 <base64_tests+0x2dc>
   16118:	ldr	r0, [fp, #-12]
   1611c:	bl	1516c <test_json>
   16120:	mov	r2, r0
   16124:	ldr	r3, [fp, #-8]
   16128:	orr	r3, r3, r2
   1612c:	str	r3, [fp, #-8]
   16130:	ldr	r3, [fp, #-8]
   16134:	mov	r0, r3
   16138:	sub	sp, fp, #4
   1613c:	pop	{fp, pc}
   16140:	.word	0x00000568
   16144:	.word	0x00000171
   16148:	.word	0x00000810
   1614c:	.word	0x000014b4
   16150:	.word	0x000014cc
   16154:	.word	0x000014f0
   16158:	.word	0x00001518
   1615c:	.word	0x000015cc
   16160:	.word	0x0000017b
   16164:	.word	0x00001688
   16168:	.word	0x00001740
   1616c:	.word	0x0000017e
   16170:	.word	0x000017fc
   16174:	.word	0x00000181
   16178:	.word	0x000018b4
   1617c:	.word	0x00001970
   16180:	.word	0x00000187
   16184:	.word	0x00001a2c
   16188:	.word	0x00000196
   1618c:	.word	0x00001ae8
   16190:	.word	0x00001bc0
   16194:	.word	0x000001a3
   16198:	.word	0x00001c90

0001619c <mixed_type_union_tests>:
   1619c:	push	{fp, lr}
   161a0:	add	fp, sp, #4
   161a4:	sub	sp, sp, #24
   161a8:	mov	r3, #0
   161ac:	str	r3, [fp, #-8]
   161b0:	ldr	r3, [pc, #436]	; 1636c <mixed_type_union_tests+0x1d0>
   161b4:	str	r3, [fp, #-12]
   161b8:	mov	r3, #432	; 0x1b0
   161bc:	str	r3, [sp, #8]
   161c0:	mov	r3, #0
   161c4:	str	r3, [sp, #4]
   161c8:	mov	r3, #0
   161cc:	str	r3, [sp]
   161d0:	mov	r3, #0
   161d4:	ldr	r2, [pc, #404]	; 16370 <mixed_type_union_tests+0x1d4>
   161d8:	ldr	r1, [pc, #404]	; 16374 <mixed_type_union_tests+0x1d8>
   161dc:	ldr	r0, [fp, #-12]
   161e0:	bl	1516c <test_json>
   161e4:	mov	r2, r0
   161e8:	ldr	r3, [fp, #-8]
   161ec:	orr	r3, r3, r2
   161f0:	str	r3, [fp, #-8]
   161f4:	ldr	r3, [pc, #380]	; 16378 <mixed_type_union_tests+0x1dc>
   161f8:	str	r3, [sp, #8]
   161fc:	mov	r3, #0
   16200:	str	r3, [sp, #4]
   16204:	mov	r3, #0
   16208:	str	r3, [sp]
   1620c:	mov	r3, #0
   16210:	ldr	r2, [pc, #356]	; 1637c <mixed_type_union_tests+0x1e0>
   16214:	ldr	r1, [pc, #356]	; 16380 <mixed_type_union_tests+0x1e4>
   16218:	ldr	r0, [fp, #-12]
   1621c:	bl	1516c <test_json>
   16220:	mov	r2, r0
   16224:	ldr	r3, [fp, #-8]
   16228:	orr	r3, r3, r2
   1622c:	str	r3, [fp, #-8]
   16230:	ldr	r3, [pc, #332]	; 16384 <mixed_type_union_tests+0x1e8>
   16234:	str	r3, [sp, #8]
   16238:	mov	r3, #0
   1623c:	str	r3, [sp, #4]
   16240:	mov	r3, #0
   16244:	str	r3, [sp]
   16248:	mov	r3, #0
   1624c:	ldr	r2, [pc, #296]	; 1637c <mixed_type_union_tests+0x1e0>
   16250:	ldr	r1, [pc, #304]	; 16388 <mixed_type_union_tests+0x1ec>
   16254:	ldr	r0, [fp, #-12]
   16258:	bl	1516c <test_json>
   1625c:	mov	r2, r0
   16260:	ldr	r3, [fp, #-8]
   16264:	orr	r3, r3, r2
   16268:	str	r3, [fp, #-8]
   1626c:	ldr	r3, [pc, #280]	; 1638c <mixed_type_union_tests+0x1f0>
   16270:	str	r3, [sp, #8]
   16274:	mov	r3, #0
   16278:	str	r3, [sp, #4]
   1627c:	mov	r3, #0
   16280:	str	r3, [sp]
   16284:	mov	r3, #0
   16288:	ldr	r2, [pc, #256]	; 16390 <mixed_type_union_tests+0x1f4>
   1628c:	ldr	r1, [pc, #256]	; 16394 <mixed_type_union_tests+0x1f8>
   16290:	ldr	r0, [fp, #-12]
   16294:	bl	1516c <test_json>
   16298:	mov	r2, r0
   1629c:	ldr	r3, [fp, #-8]
   162a0:	orr	r3, r3, r2
   162a4:	str	r3, [fp, #-8]
   162a8:	ldr	r3, [pc, #232]	; 16398 <mixed_type_union_tests+0x1fc>
   162ac:	str	r3, [sp, #8]
   162b0:	mov	r3, #0
   162b4:	str	r3, [sp, #4]
   162b8:	mov	r3, #0
   162bc:	str	r3, [sp]
   162c0:	mov	r3, #0
   162c4:	ldr	r2, [pc, #208]	; 1639c <mixed_type_union_tests+0x200>
   162c8:	ldr	r1, [pc, #208]	; 163a0 <mixed_type_union_tests+0x204>
   162cc:	ldr	r0, [fp, #-12]
   162d0:	bl	1516c <test_json>
   162d4:	mov	r2, r0
   162d8:	ldr	r3, [fp, #-8]
   162dc:	orr	r3, r3, r2
   162e0:	str	r3, [fp, #-8]
   162e4:	ldr	r3, [pc, #184]	; 163a4 <mixed_type_union_tests+0x208>
   162e8:	str	r3, [sp, #8]
   162ec:	mov	r3, #0
   162f0:	str	r3, [sp, #4]
   162f4:	mov	r3, #0
   162f8:	str	r3, [sp]
   162fc:	mov	r3, #0
   16300:	ldr	r2, [pc, #160]	; 163a8 <mixed_type_union_tests+0x20c>
   16304:	ldr	r1, [pc, #160]	; 163ac <mixed_type_union_tests+0x210>
   16308:	ldr	r0, [fp, #-12]
   1630c:	bl	1516c <test_json>
   16310:	mov	r2, r0
   16314:	ldr	r3, [fp, #-8]
   16318:	orr	r3, r3, r2
   1631c:	str	r3, [fp, #-8]
   16320:	ldr	r3, [pc, #136]	; 163b0 <mixed_type_union_tests+0x214>
   16324:	str	r3, [sp, #8]
   16328:	mov	r3, #0
   1632c:	str	r3, [sp, #4]
   16330:	mov	r3, #0
   16334:	str	r3, [sp]
   16338:	mov	r3, #0
   1633c:	ldr	r2, [pc, #56]	; 1637c <mixed_type_union_tests+0x1e0>
   16340:	ldr	r1, [pc, #108]	; 163b4 <mixed_type_union_tests+0x218>
   16344:	ldr	r0, [fp, #-12]
   16348:	bl	1516c <test_json>
   1634c:	mov	r2, r0
   16350:	ldr	r3, [fp, #-8]
   16354:	orr	r3, r3, r2
   16358:	str	r3, [fp, #-8]
   1635c:	ldr	r3, [fp, #-8]
   16360:	mov	r0, r3
   16364:	sub	sp, fp, #4
   16368:	pop	{fp, pc}
   1636c:	.word	0x00000598
   16370:	.word	0x00001d5c
   16374:	.word	0x00001da4
   16378:	.word	0x000001b5
   1637c:	.word	0x00001df4
   16380:	.word	0x00001e6c
   16384:	.word	0x000001ba
   16388:	.word	0x00001ef0
   1638c:	.word	0x000001c1
   16390:	.word	0x00001f88
   16394:	.word	0x00002044
   16398:	.word	0x000001ca
   1639c:	.word	0x00002124
   163a0:	.word	0x00002204
   163a4:	.word	0x000001d5
   163a8:	.word	0x0000230c
   163ac:	.word	0x00002454
   163b0:	.word	0x000001da
   163b4:	.word	0x000025d8

000163b8 <union_vector_tests>:
   163b8:	push	{fp, lr}
   163bc:	add	fp, sp, #4
   163c0:	sub	sp, sp, #24
   163c4:	mov	r3, #0
   163c8:	str	r3, [fp, #-8]
   163cc:	ldr	r3, [pc, #376]	; 1654c <union_vector_tests+0x194>
   163d0:	str	r3, [fp, #-12]
   163d4:	ldr	r3, [pc, #372]	; 16550 <union_vector_tests+0x198>
   163d8:	str	r3, [sp, #8]
   163dc:	mov	r3, #0
   163e0:	str	r3, [sp, #4]
   163e4:	mov	r3, #0
   163e8:	str	r3, [sp]
   163ec:	mov	r3, #0
   163f0:	ldr	r2, [pc, #348]	; 16554 <union_vector_tests+0x19c>
   163f4:	ldr	r1, [pc, #348]	; 16558 <union_vector_tests+0x1a0>
   163f8:	ldr	r0, [fp, #-12]
   163fc:	bl	1516c <test_json>
   16400:	mov	r2, r0
   16404:	ldr	r3, [fp, #-8]
   16408:	orr	r3, r3, r2
   1640c:	str	r3, [fp, #-8]
   16410:	mov	r3, #488	; 0x1e8
   16414:	str	r3, [sp, #8]
   16418:	mov	r3, #0
   1641c:	str	r3, [sp, #4]
   16420:	mov	r3, #0
   16424:	str	r3, [sp]
   16428:	mov	r3, #0
   1642c:	ldr	r2, [pc, #296]	; 1655c <union_vector_tests+0x1a4>
   16430:	ldr	r1, [pc, #296]	; 16560 <union_vector_tests+0x1a8>
   16434:	ldr	r0, [fp, #-12]
   16438:	bl	1516c <test_json>
   1643c:	mov	r2, r0
   16440:	ldr	r3, [fp, #-8]
   16444:	orr	r3, r3, r2
   16448:	str	r3, [fp, #-8]
   1644c:	ldr	r3, [pc, #272]	; 16564 <union_vector_tests+0x1ac>
   16450:	str	r3, [sp, #8]
   16454:	mov	r3, #0
   16458:	str	r3, [sp, #4]
   1645c:	mov	r3, #0
   16460:	str	r3, [sp]
   16464:	mov	r3, #0
   16468:	ldr	r2, [pc, #248]	; 16568 <union_vector_tests+0x1b0>
   1646c:	ldr	r1, [pc, #248]	; 1656c <union_vector_tests+0x1b4>
   16470:	ldr	r0, [fp, #-12]
   16474:	bl	1516c <test_json>
   16478:	mov	r2, r0
   1647c:	ldr	r3, [fp, #-8]
   16480:	orr	r3, r3, r2
   16484:	str	r3, [fp, #-8]
   16488:	ldr	r3, [pc, #224]	; 16570 <union_vector_tests+0x1b8>
   1648c:	str	r3, [sp, #8]
   16490:	mov	r3, #0
   16494:	str	r3, [sp, #4]
   16498:	mov	r3, #0
   1649c:	str	r3, [sp]
   164a0:	mov	r3, #0
   164a4:	ldr	r2, [pc, #200]	; 16574 <union_vector_tests+0x1bc>
   164a8:	ldr	r1, [pc, #200]	; 16578 <union_vector_tests+0x1c0>
   164ac:	ldr	r0, [fp, #-12]
   164b0:	bl	1516c <test_json>
   164b4:	mov	r2, r0
   164b8:	ldr	r3, [fp, #-8]
   164bc:	orr	r3, r3, r2
   164c0:	str	r3, [fp, #-8]
   164c4:	ldr	r3, [pc, #176]	; 1657c <union_vector_tests+0x1c4>
   164c8:	str	r3, [sp, #8]
   164cc:	mov	r3, #0
   164d0:	str	r3, [sp, #4]
   164d4:	mov	r3, #0
   164d8:	str	r3, [sp]
   164dc:	mov	r3, #0
   164e0:	ldr	r2, [pc, #108]	; 16554 <union_vector_tests+0x19c>
   164e4:	ldr	r1, [pc, #148]	; 16580 <union_vector_tests+0x1c8>
   164e8:	ldr	r0, [fp, #-12]
   164ec:	bl	1516c <test_json>
   164f0:	mov	r2, r0
   164f4:	ldr	r3, [fp, #-8]
   164f8:	orr	r3, r3, r2
   164fc:	str	r3, [fp, #-8]
   16500:	mov	r3, #500	; 0x1f4
   16504:	str	r3, [sp, #8]
   16508:	mov	r3, #0
   1650c:	str	r3, [sp, #4]
   16510:	mov	r3, #0
   16514:	str	r3, [sp]
   16518:	mov	r3, #0
   1651c:	ldr	r2, [pc, #96]	; 16584 <union_vector_tests+0x1cc>
   16520:	ldr	r1, [pc, #96]	; 16588 <union_vector_tests+0x1d0>
   16524:	ldr	r0, [fp, #-12]
   16528:	bl	1516c <test_json>
   1652c:	mov	r2, r0
   16530:	ldr	r3, [fp, #-8]
   16534:	orr	r3, r3, r2
   16538:	str	r3, [fp, #-8]
   1653c:	ldr	r3, [fp, #-8]
   16540:	mov	r0, r3
   16544:	sub	sp, fp, #4
   16548:	pop	{fp, pc}
   1654c:	.word	0x00000580
   16550:	.word	0x000001e5
   16554:	.word	0x00002668
   16558:	.word	0x000026a0
   1655c:	.word	0x000026e0
   16560:	.word	0x0000270c
   16564:	.word	0x000001eb
   16568:	.word	0x00002740
   1656c:	.word	0x00002784
   16570:	.word	0x000001ee
   16574:	.word	0x000027d4
   16578:	.word	0x00002840
   1657c:	.word	0x000001f1
   16580:	.word	0x000028c0
   16584:	.word	0x00002900
   16588:	.word	0x0000295c

0001658c <main>:
   1658c:	push	{fp, lr}
   16590:	add	fp, sp, #4
   16594:	sub	sp, sp, #24
   16598:	mov	r3, #0
   1659c:	str	r3, [fp, #-8]
   165a0:	ldr	r3, [pc, #3976]	; 17530 <main+0xfa4>
   165a4:	str	r3, [fp, #-12]
   165a8:	bl	1555c <edge_case_tests>
   165ac:	mov	r2, r0
   165b0:	ldr	r3, [fp, #-8]
   165b4:	orr	r3, r3, r2
   165b8:	str	r3, [fp, #-8]
   165bc:	bl	159dc <error_case_tests>
   165c0:	mov	r2, r0
   165c4:	ldr	r3, [fp, #-8]
   165c8:	orr	r3, r3, r2
   165cc:	str	r3, [fp, #-8]
   165d0:	bl	163b8 <union_vector_tests>
   165d4:	mov	r2, r0
   165d8:	ldr	r3, [fp, #-8]
   165dc:	orr	r3, r3, r2
   165e0:	str	r3, [fp, #-8]
   165e4:	bl	15ebc <base64_tests>
   165e8:	mov	r2, r0
   165ec:	ldr	r3, [fp, #-8]
   165f0:	orr	r3, r3, r2
   165f4:	str	r3, [fp, #-8]
   165f8:	bl	1619c <mixed_type_union_tests>
   165fc:	mov	r2, r0
   16600:	ldr	r3, [fp, #-8]
   16604:	orr	r3, r3, r2
   16608:	str	r3, [fp, #-8]
   1660c:	ldr	r3, [pc, #3872]	; 17534 <main+0xfa8>
   16610:	str	r3, [sp, #8]
   16614:	mov	r3, #0
   16618:	str	r3, [sp, #4]
   1661c:	mov	r3, #0
   16620:	str	r3, [sp]
   16624:	mov	r3, #0
   16628:	ldr	r2, [pc, #3848]	; 17538 <main+0xfac>
   1662c:	ldr	r1, [pc, #3848]	; 1753c <main+0xfb0>
   16630:	ldr	r0, [fp, #-12]
   16634:	bl	1516c <test_json>
   16638:	mov	r2, r0
   1663c:	ldr	r3, [fp, #-8]
   16640:	orr	r3, r3, r2
   16644:	str	r3, [fp, #-8]
   16648:	mov	r3, #528	; 0x210
   1664c:	str	r3, [sp, #8]
   16650:	mov	r3, #0
   16654:	str	r3, [sp, #4]
   16658:	mov	r3, #0
   1665c:	str	r3, [sp]
   16660:	mov	r3, #0
   16664:	ldr	r2, [pc, #3796]	; 17540 <main+0xfb4>
   16668:	ldr	r1, [pc, #3796]	; 17544 <main+0xfb8>
   1666c:	ldr	r0, [fp, #-12]
   16670:	bl	1516c <test_json>
   16674:	mov	r2, r0
   16678:	ldr	r3, [fp, #-8]
   1667c:	orr	r3, r3, r2
   16680:	str	r3, [fp, #-8]
   16684:	ldr	r3, [pc, #3772]	; 17548 <main+0xfbc>
   16688:	str	r3, [sp, #8]
   1668c:	mov	r3, #0
   16690:	str	r3, [sp, #4]
   16694:	mov	r3, #0
   16698:	str	r3, [sp]
   1669c:	mov	r3, #0
   166a0:	ldr	r2, [pc, #3748]	; 1754c <main+0xfc0>
   166a4:	ldr	r1, [pc, #3748]	; 17550 <main+0xfc4>
   166a8:	ldr	r0, [fp, #-12]
   166ac:	bl	1516c <test_json>
   166b0:	mov	r2, r0
   166b4:	ldr	r3, [fp, #-8]
   166b8:	orr	r3, r3, r2
   166bc:	str	r3, [fp, #-8]
   166c0:	ldr	r3, [pc, #3724]	; 17554 <main+0xfc8>
   166c4:	str	r3, [sp, #8]
   166c8:	mov	r3, #0
   166cc:	str	r3, [sp, #4]
   166d0:	mov	r3, #0
   166d4:	str	r3, [sp]
   166d8:	mov	r3, #0
   166dc:	ldr	r2, [pc, #3700]	; 17558 <main+0xfcc>
   166e0:	ldr	r1, [pc, #3700]	; 1755c <main+0xfd0>
   166e4:	ldr	r0, [fp, #-12]
   166e8:	bl	1516c <test_json>
   166ec:	mov	r2, r0
   166f0:	ldr	r3, [fp, #-8]
   166f4:	orr	r3, r3, r2
   166f8:	str	r3, [fp, #-8]
   166fc:	ldr	r3, [pc, #3676]	; 17560 <main+0xfd4>
   16700:	str	r3, [sp, #8]
   16704:	mov	r3, #0
   16708:	str	r3, [sp, #4]
   1670c:	mov	r3, #0
   16710:	str	r3, [sp]
   16714:	mov	r3, #0
   16718:	ldr	r2, [pc, #3640]	; 17558 <main+0xfcc>
   1671c:	ldr	r1, [pc, #3648]	; 17564 <main+0xfd8>
   16720:	ldr	r0, [fp, #-12]
   16724:	bl	1516c <test_json>
   16728:	mov	r2, r0
   1672c:	ldr	r3, [fp, #-8]
   16730:	orr	r3, r3, r2
   16734:	str	r3, [fp, #-8]
   16738:	mov	r3, #540	; 0x21c
   1673c:	str	r3, [sp, #8]
   16740:	mov	r3, #0
   16744:	str	r3, [sp, #4]
   16748:	mov	r3, #0
   1674c:	str	r3, [sp]
   16750:	mov	r3, #0
   16754:	ldr	r2, [pc, #3556]	; 17540 <main+0xfb4>
   16758:	ldr	r1, [pc, #3592]	; 17568 <main+0xfdc>
   1675c:	ldr	r0, [fp, #-12]
   16760:	bl	1516c <test_json>
   16764:	mov	r2, r0
   16768:	ldr	r3, [fp, #-8]
   1676c:	orr	r3, r3, r2
   16770:	str	r3, [fp, #-8]
   16774:	ldr	r3, [pc, #3568]	; 1756c <main+0xfe0>
   16778:	str	r3, [sp, #8]
   1677c:	mov	r3, #0
   16780:	str	r3, [sp, #4]
   16784:	mov	r3, #0
   16788:	str	r3, [sp]
   1678c:	mov	r3, #0
   16790:	ldr	r2, [pc, #3508]	; 1754c <main+0xfc0>
   16794:	ldr	r1, [pc, #3540]	; 17570 <main+0xfe4>
   16798:	ldr	r0, [fp, #-12]
   1679c:	bl	1516c <test_json>
   167a0:	mov	r2, r0
   167a4:	ldr	r3, [fp, #-8]
   167a8:	orr	r3, r3, r2
   167ac:	str	r3, [fp, #-8]
   167b0:	ldr	r3, [pc, #3516]	; 17574 <main+0xfe8>
   167b4:	str	r3, [sp, #8]
   167b8:	mov	r3, #0
   167bc:	str	r3, [sp, #4]
   167c0:	mov	r3, #0
   167c4:	str	r3, [sp]
   167c8:	mov	r3, #0
   167cc:	ldr	r2, [pc, #3428]	; 17538 <main+0xfac>
   167d0:	ldr	r1, [pc, #3488]	; 17578 <main+0xfec>
   167d4:	ldr	r0, [fp, #-12]
   167d8:	bl	1516c <test_json>
   167dc:	mov	r2, r0
   167e0:	ldr	r3, [fp, #-8]
   167e4:	orr	r3, r3, r2
   167e8:	str	r3, [fp, #-8]
   167ec:	ldr	r3, [pc, #3464]	; 1757c <main+0xff0>
   167f0:	str	r3, [sp, #8]
   167f4:	mov	r3, #0
   167f8:	str	r3, [sp, #4]
   167fc:	mov	r3, #0
   16800:	str	r3, [sp]
   16804:	mov	r3, #0
   16808:	ldr	r2, [pc, #3368]	; 17538 <main+0xfac>
   1680c:	ldr	r1, [pc, #3436]	; 17580 <main+0xff4>
   16810:	ldr	r0, [fp, #-12]
   16814:	bl	1516c <test_json>
   16818:	mov	r2, r0
   1681c:	ldr	r3, [fp, #-8]
   16820:	orr	r3, r3, r2
   16824:	str	r3, [fp, #-8]
   16828:	ldr	r3, [pc, #3412]	; 17584 <main+0xff8>
   1682c:	str	r3, [sp, #8]
   16830:	mov	r3, #0
   16834:	str	r3, [sp, #4]
   16838:	mov	r3, #0
   1683c:	str	r3, [sp]
   16840:	mov	r3, #0
   16844:	ldr	r2, [pc, #3308]	; 17538 <main+0xfac>
   16848:	ldr	r1, [pc, #3384]	; 17588 <main+0xffc>
   1684c:	ldr	r0, [fp, #-12]
   16850:	bl	1516c <test_json>
   16854:	mov	r2, r0
   16858:	ldr	r3, [fp, #-8]
   1685c:	orr	r3, r3, r2
   16860:	str	r3, [fp, #-8]
   16864:	ldr	r3, [pc, #3360]	; 1758c <main+0x1000>
   16868:	str	r3, [sp, #8]
   1686c:	mov	r3, #0
   16870:	str	r3, [sp, #4]
   16874:	mov	r3, #0
   16878:	str	r3, [sp]
   1687c:	mov	r3, #0
   16880:	ldr	r2, [pc, #3256]	; 17540 <main+0xfb4>
   16884:	ldr	r1, [pc, #3332]	; 17590 <main+0x1004>
   16888:	ldr	r0, [fp, #-12]
   1688c:	bl	1516c <test_json>
   16890:	mov	r2, r0
   16894:	ldr	r3, [fp, #-8]
   16898:	orr	r3, r3, r2
   1689c:	str	r3, [fp, #-8]
   168a0:	ldr	r3, [pc, #3308]	; 17594 <main+0x1008>
   168a4:	str	r3, [sp, #8]
   168a8:	mov	r3, #0
   168ac:	str	r3, [sp, #4]
   168b0:	mov	r3, #0
   168b4:	str	r3, [sp]
   168b8:	mov	r3, #0
   168bc:	ldr	r2, [pc, #3208]	; 1754c <main+0xfc0>
   168c0:	ldr	r1, [pc, #3280]	; 17598 <main+0x100c>
   168c4:	ldr	r0, [fp, #-12]
   168c8:	bl	1516c <test_json>
   168cc:	mov	r2, r0
   168d0:	ldr	r3, [fp, #-8]
   168d4:	orr	r3, r3, r2
   168d8:	str	r3, [fp, #-8]
   168dc:	mov	r3, #564	; 0x234
   168e0:	str	r3, [sp, #8]
   168e4:	mov	r3, #0
   168e8:	str	r3, [sp, #4]
   168ec:	mov	r3, #0
   168f0:	str	r3, [sp]
   168f4:	mov	r3, #0
   168f8:	ldr	r2, [pc, #3160]	; 17558 <main+0xfcc>
   168fc:	ldr	r1, [pc, #3224]	; 1759c <main+0x1010>
   16900:	ldr	r0, [fp, #-12]
   16904:	bl	1516c <test_json>
   16908:	mov	r2, r0
   1690c:	ldr	r3, [fp, #-8]
   16910:	orr	r3, r3, r2
   16914:	str	r3, [fp, #-8]
   16918:	ldr	r3, [pc, #3200]	; 175a0 <main+0x1014>
   1691c:	str	r3, [sp, #8]
   16920:	mov	r3, #0
   16924:	str	r3, [sp, #4]
   16928:	mov	r3, #0
   1692c:	str	r3, [sp]
   16930:	mov	r3, #0
   16934:	ldr	r2, [pc, #3100]	; 17558 <main+0xfcc>
   16938:	ldr	r1, [pc, #3172]	; 175a4 <main+0x1018>
   1693c:	ldr	r0, [fp, #-12]
   16940:	bl	1516c <test_json>
   16944:	mov	r2, r0
   16948:	ldr	r3, [fp, #-8]
   1694c:	orr	r3, r3, r2
   16950:	str	r3, [fp, #-8]
   16954:	ldr	r3, [pc, #3148]	; 175a8 <main+0x101c>
   16958:	str	r3, [sp, #8]
   1695c:	mov	r3, #0
   16960:	str	r3, [sp, #4]
   16964:	mov	r3, #0
   16968:	str	r3, [sp]
   1696c:	mov	r3, #0
   16970:	ldr	r2, [pc, #3016]	; 17540 <main+0xfb4>
   16974:	ldr	r1, [pc, #3120]	; 175ac <main+0x1020>
   16978:	ldr	r0, [fp, #-12]
   1697c:	bl	1516c <test_json>
   16980:	mov	r2, r0
   16984:	ldr	r3, [fp, #-8]
   16988:	orr	r3, r3, r2
   1698c:	str	r3, [fp, #-8]
   16990:	ldr	r3, [pc, #3096]	; 175b0 <main+0x1024>
   16994:	str	r3, [sp, #8]
   16998:	mov	r3, #0
   1699c:	str	r3, [sp, #4]
   169a0:	mov	r3, #0
   169a4:	str	r3, [sp]
   169a8:	mov	r3, #0
   169ac:	ldr	r2, [pc, #2968]	; 1754c <main+0xfc0>
   169b0:	ldr	r1, [pc, #3068]	; 175b4 <main+0x1028>
   169b4:	ldr	r0, [fp, #-12]
   169b8:	bl	1516c <test_json>
   169bc:	mov	r2, r0
   169c0:	ldr	r3, [fp, #-8]
   169c4:	orr	r3, r3, r2
   169c8:	str	r3, [fp, #-8]
   169cc:	ldr	r3, [pc, #3044]	; 175b8 <main+0x102c>
   169d0:	str	r3, [sp, #8]
   169d4:	mov	r3, #0
   169d8:	str	r3, [sp, #4]
   169dc:	mov	r3, #0
   169e0:	str	r3, [sp]
   169e4:	mov	r3, #0
   169e8:	ldr	r2, [pc, #2888]	; 17538 <main+0xfac>
   169ec:	ldr	r1, [pc, #3016]	; 175bc <main+0x1030>
   169f0:	ldr	r0, [fp, #-12]
   169f4:	bl	1516c <test_json>
   169f8:	mov	r2, r0
   169fc:	ldr	r3, [fp, #-8]
   16a00:	orr	r3, r3, r2
   16a04:	str	r3, [fp, #-8]
   16a08:	ldr	r3, [pc, #2992]	; 175c0 <main+0x1034>
   16a0c:	str	r3, [sp, #8]
   16a10:	mov	r3, #0
   16a14:	str	r3, [sp, #4]
   16a18:	mov	r3, #0
   16a1c:	str	r3, [sp]
   16a20:	mov	r3, #0
   16a24:	ldr	r2, [pc, #2828]	; 17538 <main+0xfac>
   16a28:	ldr	r1, [pc, #2964]	; 175c4 <main+0x1038>
   16a2c:	ldr	r0, [fp, #-12]
   16a30:	bl	1516c <test_json>
   16a34:	mov	r2, r0
   16a38:	ldr	r3, [fp, #-8]
   16a3c:	orr	r3, r3, r2
   16a40:	str	r3, [fp, #-8]
   16a44:	ldr	r3, [pc, #2940]	; 175c8 <main+0x103c>
   16a48:	str	r3, [sp, #8]
   16a4c:	mov	r3, #0
   16a50:	str	r3, [sp, #4]
   16a54:	mov	r3, #0
   16a58:	str	r3, [sp]
   16a5c:	mov	r3, #0
   16a60:	ldr	r2, [pc, #2776]	; 17540 <main+0xfb4>
   16a64:	ldr	r1, [pc, #2912]	; 175cc <main+0x1040>
   16a68:	ldr	r0, [fp, #-12]
   16a6c:	bl	1516c <test_json>
   16a70:	mov	r2, r0
   16a74:	ldr	r3, [fp, #-8]
   16a78:	orr	r3, r3, r2
   16a7c:	str	r3, [fp, #-8]
   16a80:	mov	r3, #604	; 0x25c
   16a84:	str	r3, [sp, #8]
   16a88:	mov	r3, #0
   16a8c:	str	r3, [sp, #4]
   16a90:	mov	r3, #0
   16a94:	str	r3, [sp]
   16a98:	mov	r3, #0
   16a9c:	ldr	r2, [pc, #2728]	; 1754c <main+0xfc0>
   16aa0:	ldr	r1, [pc, #2856]	; 175d0 <main+0x1044>
   16aa4:	ldr	r0, [fp, #-12]
   16aa8:	bl	1516c <test_json>
   16aac:	mov	r2, r0
   16ab0:	ldr	r3, [fp, #-8]
   16ab4:	orr	r3, r3, r2
   16ab8:	str	r3, [fp, #-8]
   16abc:	ldr	r3, [pc, #2832]	; 175d4 <main+0x1048>
   16ac0:	str	r3, [sp, #8]
   16ac4:	mov	r3, #0
   16ac8:	str	r3, [sp, #4]
   16acc:	mov	r3, #0
   16ad0:	str	r3, [sp]
   16ad4:	mov	r3, #0
   16ad8:	ldr	r2, [pc, #2808]	; 175d8 <main+0x104c>
   16adc:	ldr	r1, [pc, #2808]	; 175dc <main+0x1050>
   16ae0:	ldr	r0, [fp, #-12]
   16ae4:	bl	1516c <test_json>
   16ae8:	mov	r2, r0
   16aec:	ldr	r3, [fp, #-8]
   16af0:	orr	r3, r3, r2
   16af4:	str	r3, [fp, #-8]
   16af8:	ldr	r3, [pc, #2784]	; 175e0 <main+0x1054>
   16afc:	str	r3, [sp, #8]
   16b00:	mov	r3, #0
   16b04:	str	r3, [sp, #4]
   16b08:	mov	r3, #0
   16b0c:	str	r3, [sp]
   16b10:	mov	r3, #0
   16b14:	ldr	r2, [pc, #2620]	; 17558 <main+0xfcc>
   16b18:	ldr	r1, [pc, #2756]	; 175e4 <main+0x1058>
   16b1c:	ldr	r0, [fp, #-12]
   16b20:	bl	1516c <test_json>
   16b24:	mov	r2, r0
   16b28:	ldr	r3, [fp, #-8]
   16b2c:	orr	r3, r3, r2
   16b30:	str	r3, [fp, #-8]
   16b34:	ldr	r3, [pc, #2732]	; 175e8 <main+0x105c>
   16b38:	str	r3, [sp, #8]
   16b3c:	mov	r3, #0
   16b40:	str	r3, [sp, #4]
   16b44:	mov	r3, #0
   16b48:	str	r3, [sp]
   16b4c:	mov	r3, #0
   16b50:	ldr	r2, [pc, #2708]	; 175ec <main+0x1060>
   16b54:	ldr	r1, [pc, #2708]	; 175f0 <main+0x1064>
   16b58:	ldr	r0, [fp, #-12]
   16b5c:	bl	1516c <test_json>
   16b60:	mov	r2, r0
   16b64:	ldr	r3, [fp, #-8]
   16b68:	orr	r3, r3, r2
   16b6c:	str	r3, [fp, #-8]
   16b70:	mov	r3, #616	; 0x268
   16b74:	str	r3, [sp, #8]
   16b78:	mov	r3, #0
   16b7c:	str	r3, [sp, #4]
   16b80:	mov	r3, #0
   16b84:	str	r3, [sp]
   16b88:	mov	r3, #0
   16b8c:	ldr	r2, [pc, #2656]	; 175f4 <main+0x1068>
   16b90:	ldr	r1, [pc, #2656]	; 175f8 <main+0x106c>
   16b94:	ldr	r0, [fp, #-12]
   16b98:	bl	1516c <test_json>
   16b9c:	mov	r2, r0
   16ba0:	ldr	r3, [fp, #-8]
   16ba4:	orr	r3, r3, r2
   16ba8:	str	r3, [fp, #-8]
   16bac:	ldr	r3, [pc, #2632]	; 175fc <main+0x1070>
   16bb0:	str	r3, [sp, #8]
   16bb4:	mov	r3, #0
   16bb8:	str	r3, [sp, #4]
   16bbc:	mov	r3, #0
   16bc0:	str	r3, [sp]
   16bc4:	mov	r3, #0
   16bc8:	ldr	r2, [pc, #2608]	; 17600 <main+0x1074>
   16bcc:	ldr	r1, [pc, #2608]	; 17604 <main+0x1078>
   16bd0:	ldr	r0, [fp, #-12]
   16bd4:	bl	1516c <test_json>
   16bd8:	mov	r2, r0
   16bdc:	ldr	r3, [fp, #-8]
   16be0:	orr	r3, r3, r2
   16be4:	str	r3, [fp, #-8]
   16be8:	ldr	r3, [pc, #2584]	; 17608 <main+0x107c>
   16bec:	str	r3, [sp, #8]
   16bf0:	mov	r3, #0
   16bf4:	str	r3, [sp, #4]
   16bf8:	mov	r3, #0
   16bfc:	str	r3, [sp]
   16c00:	mov	r3, #0
   16c04:	ldr	r2, [pc, #2356]	; 17540 <main+0xfb4>
   16c08:	ldr	r1, [pc, #2556]	; 1760c <main+0x1080>
   16c0c:	ldr	r0, [fp, #-12]
   16c10:	bl	1516c <test_json>
   16c14:	mov	r2, r0
   16c18:	ldr	r3, [fp, #-8]
   16c1c:	orr	r3, r3, r2
   16c20:	str	r3, [fp, #-8]
   16c24:	ldr	r3, [pc, #2532]	; 17610 <main+0x1084>
   16c28:	str	r3, [sp, #8]
   16c2c:	mov	r3, #0
   16c30:	str	r3, [sp, #4]
   16c34:	mov	r3, #0
   16c38:	str	r3, [sp]
   16c3c:	mov	r3, #0
   16c40:	ldr	r2, [pc, #2296]	; 17540 <main+0xfb4>
   16c44:	ldr	r1, [pc, #2504]	; 17614 <main+0x1088>
   16c48:	ldr	r0, [fp, #-12]
   16c4c:	bl	1516c <test_json>
   16c50:	mov	r2, r0
   16c54:	ldr	r3, [fp, #-8]
   16c58:	orr	r3, r3, r2
   16c5c:	str	r3, [fp, #-8]
   16c60:	mov	r3, #628	; 0x274
   16c64:	str	r3, [sp, #8]
   16c68:	mov	r3, #0
   16c6c:	str	r3, [sp, #4]
   16c70:	mov	r3, #0
   16c74:	str	r3, [sp]
   16c78:	mov	r3, #0
   16c7c:	ldr	r2, [pc, #2452]	; 17618 <main+0x108c>
   16c80:	ldr	r1, [pc, #2452]	; 1761c <main+0x1090>
   16c84:	ldr	r0, [fp, #-12]
   16c88:	bl	1516c <test_json>
   16c8c:	mov	r2, r0
   16c90:	ldr	r3, [fp, #-8]
   16c94:	orr	r3, r3, r2
   16c98:	str	r3, [fp, #-8]
   16c9c:	ldr	r3, [pc, #2428]	; 17620 <main+0x1094>
   16ca0:	str	r3, [sp, #8]
   16ca4:	mov	r3, #0
   16ca8:	str	r3, [sp, #4]
   16cac:	mov	r3, #0
   16cb0:	str	r3, [sp]
   16cb4:	mov	r3, #0
   16cb8:	ldr	r2, [pc, #2392]	; 17618 <main+0x108c>
   16cbc:	ldr	r1, [pc, #2392]	; 1761c <main+0x1090>
   16cc0:	ldr	r0, [fp, #-12]
   16cc4:	bl	1516c <test_json>
   16cc8:	mov	r2, r0
   16ccc:	ldr	r3, [fp, #-8]
   16cd0:	orr	r3, r3, r2
   16cd4:	str	r3, [fp, #-8]
   16cd8:	ldr	r3, [pc, #2372]	; 17624 <main+0x1098>
   16cdc:	str	r3, [sp, #8]
   16ce0:	mov	r3, #0
   16ce4:	str	r3, [sp, #4]
   16ce8:	mov	r3, #0
   16cec:	str	r3, [sp]
   16cf0:	mov	r3, #0
   16cf4:	ldr	r2, [pc, #2348]	; 17628 <main+0x109c>
   16cf8:	ldr	r1, [pc, #2348]	; 1762c <main+0x10a0>
   16cfc:	ldr	r0, [fp, #-12]
   16d00:	bl	1516c <test_json>
   16d04:	mov	r2, r0
   16d08:	ldr	r3, [fp, #-8]
   16d0c:	orr	r3, r3, r2
   16d10:	str	r3, [fp, #-8]
   16d14:	ldr	r3, [pc, #2324]	; 17630 <main+0x10a4>
   16d18:	str	r3, [sp, #8]
   16d1c:	mov	r3, #0
   16d20:	str	r3, [sp, #4]
   16d24:	mov	r3, #0
   16d28:	str	r3, [sp]
   16d2c:	mov	r3, #0
   16d30:	ldr	r2, [pc, #2300]	; 17634 <main+0x10a8>
   16d34:	ldr	r1, [pc, #2300]	; 17638 <main+0x10ac>
   16d38:	ldr	r0, [fp, #-12]
   16d3c:	bl	1516c <test_json>
   16d40:	mov	r2, r0
   16d44:	ldr	r3, [fp, #-8]
   16d48:	orr	r3, r3, r2
   16d4c:	str	r3, [fp, #-8]
   16d50:	ldr	r3, [pc, #2276]	; 1763c <main+0x10b0>
   16d54:	str	r3, [sp, #8]
   16d58:	mov	r3, #0
   16d5c:	str	r3, [sp, #4]
   16d60:	mov	r3, #0
   16d64:	str	r3, [sp]
   16d68:	mov	r3, #0
   16d6c:	ldr	r2, [pc, #2252]	; 17640 <main+0x10b4>
   16d70:	ldr	r1, [pc, #2252]	; 17644 <main+0x10b8>
   16d74:	ldr	r0, [fp, #-12]
   16d78:	bl	1516c <test_json>
   16d7c:	mov	r2, r0
   16d80:	ldr	r3, [fp, #-8]
   16d84:	orr	r3, r3, r2
   16d88:	str	r3, [fp, #-8]
   16d8c:	ldr	r3, [pc, #2228]	; 17648 <main+0x10bc>
   16d90:	str	r3, [sp, #8]
   16d94:	mov	r3, #0
   16d98:	str	r3, [sp, #4]
   16d9c:	mov	r3, #0
   16da0:	str	r3, [sp]
   16da4:	mov	r3, #0
   16da8:	ldr	r2, [pc, #1928]	; 17538 <main+0xfac>
   16dac:	ldr	r1, [pc, #2200]	; 1764c <main+0x10c0>
   16db0:	ldr	r0, [fp, #-12]
   16db4:	bl	1516c <test_json>
   16db8:	mov	r2, r0
   16dbc:	ldr	r3, [fp, #-8]
   16dc0:	orr	r3, r3, r2
   16dc4:	str	r3, [fp, #-8]
   16dc8:	ldr	r3, [pc, #2176]	; 17650 <main+0x10c4>
   16dcc:	str	r3, [sp, #8]
   16dd0:	mov	r3, #0
   16dd4:	str	r3, [sp, #4]
   16dd8:	mov	r3, #0
   16ddc:	str	r3, [sp]
   16de0:	mov	r3, #0
   16de4:	ldr	r2, [pc, #1868]	; 17538 <main+0xfac>
   16de8:	ldr	r1, [pc, #2148]	; 17654 <main+0x10c8>
   16dec:	ldr	r0, [fp, #-12]
   16df0:	bl	1516c <test_json>
   16df4:	mov	r2, r0
   16df8:	ldr	r3, [fp, #-8]
   16dfc:	orr	r3, r3, r2
   16e00:	str	r3, [fp, #-8]
   16e04:	ldr	r3, [pc, #2124]	; 17658 <main+0x10cc>
   16e08:	str	r3, [sp, #8]
   16e0c:	mov	r3, #0
   16e10:	str	r3, [sp, #4]
   16e14:	mov	r3, #0
   16e18:	str	r3, [sp]
   16e1c:	mov	r3, #0
   16e20:	ldr	r2, [pc, #1816]	; 17540 <main+0xfb4>
   16e24:	ldr	r1, [pc, #2096]	; 1765c <main+0x10d0>
   16e28:	ldr	r0, [fp, #-12]
   16e2c:	bl	1516c <test_json>
   16e30:	mov	r2, r0
   16e34:	ldr	r3, [fp, #-8]
   16e38:	orr	r3, r3, r2
   16e3c:	str	r3, [fp, #-8]
   16e40:	mov	r3, #656	; 0x290
   16e44:	str	r3, [sp, #8]
   16e48:	mov	r3, #0
   16e4c:	str	r3, [sp, #4]
   16e50:	mov	r3, #0
   16e54:	str	r3, [sp]
   16e58:	mov	r3, #0
   16e5c:	ldr	r2, [pc, #1768]	; 1754c <main+0xfc0>
   16e60:	ldr	r1, [pc, #2040]	; 17660 <main+0x10d4>
   16e64:	ldr	r0, [fp, #-12]
   16e68:	bl	1516c <test_json>
   16e6c:	mov	r2, r0
   16e70:	ldr	r3, [fp, #-8]
   16e74:	orr	r3, r3, r2
   16e78:	str	r3, [fp, #-8]
   16e7c:	ldr	r3, [pc, #2016]	; 17664 <main+0x10d8>
   16e80:	str	r3, [sp, #8]
   16e84:	mov	r3, #0
   16e88:	str	r3, [sp, #4]
   16e8c:	mov	r3, #0
   16e90:	str	r3, [sp]
   16e94:	mov	r3, #0
   16e98:	ldr	r2, [pc, #1848]	; 175d8 <main+0x104c>
   16e9c:	ldr	r1, [pc, #1988]	; 17668 <main+0x10dc>
   16ea0:	ldr	r0, [fp, #-12]
   16ea4:	bl	1516c <test_json>
   16ea8:	mov	r2, r0
   16eac:	ldr	r3, [fp, #-8]
   16eb0:	orr	r3, r3, r2
   16eb4:	str	r3, [fp, #-8]
   16eb8:	ldr	r3, [pc, #1964]	; 1766c <main+0x10e0>
   16ebc:	str	r3, [sp, #8]
   16ec0:	mov	r3, #0
   16ec4:	str	r3, [sp, #4]
   16ec8:	mov	r3, #0
   16ecc:	str	r3, [sp]
   16ed0:	mov	r3, #0
   16ed4:	ldr	r2, [pc, #1660]	; 17558 <main+0xfcc>
   16ed8:	ldr	r1, [pc, #1936]	; 17670 <main+0x10e4>
   16edc:	ldr	r0, [fp, #-12]
   16ee0:	bl	1516c <test_json>
   16ee4:	mov	r2, r0
   16ee8:	ldr	r3, [fp, #-8]
   16eec:	orr	r3, r3, r2
   16ef0:	str	r3, [fp, #-8]
   16ef4:	ldr	r3, [pc, #1912]	; 17674 <main+0x10e8>
   16ef8:	str	r3, [sp, #8]
   16efc:	mov	r3, #0
   16f00:	str	r3, [sp, #4]
   16f04:	mov	r3, #0
   16f08:	str	r3, [sp]
   16f0c:	mov	r3, #0
   16f10:	ldr	r2, [pc, #1748]	; 175ec <main+0x1060>
   16f14:	ldr	r1, [pc, #1884]	; 17678 <main+0x10ec>
   16f18:	ldr	r0, [fp, #-12]
   16f1c:	bl	1516c <test_json>
   16f20:	mov	r2, r0
   16f24:	ldr	r3, [fp, #-8]
   16f28:	orr	r3, r3, r2
   16f2c:	str	r3, [fp, #-8]
   16f30:	mov	r3, #668	; 0x29c
   16f34:	str	r3, [sp, #8]
   16f38:	mov	r3, #0
   16f3c:	str	r3, [sp, #4]
   16f40:	mov	r3, #0
   16f44:	str	r3, [sp]
   16f48:	mov	r3, #0
   16f4c:	ldr	r2, [pc, #1696]	; 175f4 <main+0x1068>
   16f50:	ldr	r1, [pc, #1828]	; 1767c <main+0x10f0>
   16f54:	ldr	r0, [fp, #-12]
   16f58:	bl	1516c <test_json>
   16f5c:	mov	r2, r0
   16f60:	ldr	r3, [fp, #-8]
   16f64:	orr	r3, r3, r2
   16f68:	str	r3, [fp, #-8]
   16f6c:	ldr	r3, [pc, #1804]	; 17680 <main+0x10f4>
   16f70:	str	r3, [sp, #8]
   16f74:	mov	r3, #0
   16f78:	str	r3, [sp, #4]
   16f7c:	mov	r3, #0
   16f80:	str	r3, [sp]
   16f84:	mov	r3, #0
   16f88:	ldr	r2, [pc, #1648]	; 17600 <main+0x1074>
   16f8c:	ldr	r1, [pc, #1776]	; 17684 <main+0x10f8>
   16f90:	ldr	r0, [fp, #-12]
   16f94:	bl	1516c <test_json>
   16f98:	mov	r2, r0
   16f9c:	ldr	r3, [fp, #-8]
   16fa0:	orr	r3, r3, r2
   16fa4:	str	r3, [fp, #-8]
   16fa8:	ldr	r3, [pc, #1752]	; 17688 <main+0x10fc>
   16fac:	str	r3, [sp, #8]
   16fb0:	mov	r3, #0
   16fb4:	str	r3, [sp, #4]
   16fb8:	mov	r3, #0
   16fbc:	str	r3, [sp]
   16fc0:	mov	r3, #0
   16fc4:	ldr	r2, [pc, #1396]	; 17540 <main+0xfb4>
   16fc8:	ldr	r1, [pc, #1724]	; 1768c <main+0x1100>
   16fcc:	ldr	r0, [fp, #-12]
   16fd0:	bl	1516c <test_json>
   16fd4:	mov	r2, r0
   16fd8:	ldr	r3, [fp, #-8]
   16fdc:	orr	r3, r3, r2
   16fe0:	str	r3, [fp, #-8]
   16fe4:	ldr	r3, [pc, #1700]	; 17690 <main+0x1104>
   16fe8:	str	r3, [sp, #8]
   16fec:	mov	r3, #0
   16ff0:	str	r3, [sp, #4]
   16ff4:	mov	r3, #0
   16ff8:	str	r3, [sp]
   16ffc:	mov	r3, #0
   17000:	ldr	r2, [pc, #1336]	; 17540 <main+0xfb4>
   17004:	ldr	r1, [pc, #1672]	; 17694 <main+0x1108>
   17008:	ldr	r0, [fp, #-12]
   1700c:	bl	1516c <test_json>
   17010:	mov	r2, r0
   17014:	ldr	r3, [fp, #-8]
   17018:	orr	r3, r3, r2
   1701c:	str	r3, [fp, #-8]
   17020:	mov	r3, #680	; 0x2a8
   17024:	str	r3, [sp, #8]
   17028:	mov	r3, #0
   1702c:	str	r3, [sp, #4]
   17030:	mov	r3, #0
   17034:	str	r3, [sp]
   17038:	mov	r3, #0
   1703c:	ldr	r2, [pc, #1492]	; 17618 <main+0x108c>
   17040:	ldr	r1, [pc, #1616]	; 17698 <main+0x110c>
   17044:	ldr	r0, [fp, #-12]
   17048:	bl	1516c <test_json>
   1704c:	mov	r2, r0
   17050:	ldr	r3, [fp, #-8]
   17054:	orr	r3, r3, r2
   17058:	str	r3, [fp, #-8]
   1705c:	ldr	r3, [pc, #1592]	; 1769c <main+0x1110>
   17060:	str	r3, [sp, #8]
   17064:	mov	r3, #0
   17068:	str	r3, [sp, #4]
   1706c:	mov	r3, #0
   17070:	str	r3, [sp]
   17074:	mov	r3, #0
   17078:	ldr	r2, [pc, #1432]	; 17618 <main+0x108c>
   1707c:	ldr	r1, [pc, #1556]	; 17698 <main+0x110c>
   17080:	ldr	r0, [fp, #-12]
   17084:	bl	1516c <test_json>
   17088:	mov	r2, r0
   1708c:	ldr	r3, [fp, #-8]
   17090:	orr	r3, r3, r2
   17094:	str	r3, [fp, #-8]
   17098:	ldr	r3, [pc, #1536]	; 176a0 <main+0x1114>
   1709c:	str	r3, [sp, #8]
   170a0:	mov	r3, #0
   170a4:	str	r3, [sp, #4]
   170a8:	mov	r3, #0
   170ac:	str	r3, [sp]
   170b0:	mov	r3, #0
   170b4:	ldr	r2, [pc, #1388]	; 17628 <main+0x109c>
   170b8:	ldr	r1, [pc, #1508]	; 176a4 <main+0x1118>
   170bc:	ldr	r0, [fp, #-12]
   170c0:	bl	1516c <test_json>
   170c4:	mov	r2, r0
   170c8:	ldr	r3, [fp, #-8]
   170cc:	orr	r3, r3, r2
   170d0:	str	r3, [fp, #-8]
   170d4:	ldr	r3, [pc, #1484]	; 176a8 <main+0x111c>
   170d8:	str	r3, [sp, #8]
   170dc:	mov	r3, #0
   170e0:	str	r3, [sp, #4]
   170e4:	mov	r3, #0
   170e8:	str	r3, [sp]
   170ec:	mov	r3, #0
   170f0:	ldr	r2, [pc, #1340]	; 17634 <main+0x10a8>
   170f4:	ldr	r1, [pc, #1456]	; 176ac <main+0x1120>
   170f8:	ldr	r0, [fp, #-12]
   170fc:	bl	1516c <test_json>
   17100:	mov	r2, r0
   17104:	ldr	r3, [fp, #-8]
   17108:	orr	r3, r3, r2
   1710c:	str	r3, [fp, #-8]
   17110:	ldr	r3, [pc, #1432]	; 176b0 <main+0x1124>
   17114:	str	r3, [sp, #8]
   17118:	mov	r3, #0
   1711c:	str	r3, [sp, #4]
   17120:	mov	r3, #0
   17124:	str	r3, [sp]
   17128:	mov	r3, #0
   1712c:	ldr	r2, [pc, #1292]	; 17640 <main+0x10b4>
   17130:	ldr	r1, [pc, #1404]	; 176b4 <main+0x1128>
   17134:	ldr	r0, [fp, #-12]
   17138:	bl	1516c <test_json>
   1713c:	mov	r2, r0
   17140:	ldr	r3, [fp, #-8]
   17144:	orr	r3, r3, r2
   17148:	str	r3, [fp, #-8]
   1714c:	ldr	r3, [pc, #1380]	; 176b8 <main+0x112c>
   17150:	str	r3, [sp, #8]
   17154:	mov	r3, #0
   17158:	str	r3, [sp, #4]
   1715c:	mov	r3, #0
   17160:	str	r3, [sp]
   17164:	mov	r3, #0
   17168:	ldr	r2, [pc, #968]	; 17538 <main+0xfac>
   1716c:	ldr	r1, [pc, #1352]	; 176bc <main+0x1130>
   17170:	ldr	r0, [fp, #-12]
   17174:	bl	1516c <test_json>
   17178:	mov	r2, r0
   1717c:	ldr	r3, [fp, #-8]
   17180:	orr	r3, r3, r2
   17184:	str	r3, [fp, #-8]
   17188:	ldr	r3, [pc, #1328]	; 176c0 <main+0x1134>
   1718c:	str	r3, [sp, #8]
   17190:	mov	r3, #0
   17194:	str	r3, [sp, #4]
   17198:	mov	r3, #0
   1719c:	str	r3, [sp]
   171a0:	mov	r3, #0
   171a4:	ldr	r2, [pc, #908]	; 17538 <main+0xfac>
   171a8:	ldr	r1, [pc, #1300]	; 176c4 <main+0x1138>
   171ac:	ldr	r0, [fp, #-12]
   171b0:	bl	1516c <test_json>
   171b4:	mov	r2, r0
   171b8:	ldr	r3, [fp, #-8]
   171bc:	orr	r3, r3, r2
   171c0:	str	r3, [fp, #-8]
   171c4:	mov	r3, #716	; 0x2cc
   171c8:	str	r3, [sp, #8]
   171cc:	mov	r3, #0
   171d0:	str	r3, [sp, #4]
   171d4:	mov	r3, #0
   171d8:	str	r3, [sp]
   171dc:	mov	r3, #0
   171e0:	ldr	r2, [pc, #1248]	; 176c8 <main+0x113c>
   171e4:	ldr	r1, [pc, #1248]	; 176cc <main+0x1140>
   171e8:	ldr	r0, [fp, #-12]
   171ec:	bl	1516c <test_json>
   171f0:	mov	r2, r0
   171f4:	ldr	r3, [fp, #-8]
   171f8:	orr	r3, r3, r2
   171fc:	str	r3, [fp, #-8]
   17200:	ldr	r3, [pc, #1224]	; 176d0 <main+0x1144>
   17204:	str	r3, [sp, #8]
   17208:	mov	r3, #0
   1720c:	str	r3, [sp, #4]
   17210:	mov	r3, #0
   17214:	str	r3, [sp]
   17218:	mov	r3, #0
   1721c:	ldr	r2, [pc, #1200]	; 176d4 <main+0x1148>
   17220:	ldr	r1, [pc, #1200]	; 176d8 <main+0x114c>
   17224:	ldr	r0, [fp, #-12]
   17228:	bl	1516c <test_json>
   1722c:	mov	r2, r0
   17230:	ldr	r3, [fp, #-8]
   17234:	orr	r3, r3, r2
   17238:	str	r3, [fp, #-8]
   1723c:	ldr	r3, [pc, #1176]	; 176dc <main+0x1150>
   17240:	str	r3, [sp, #8]
   17244:	mov	r3, #0
   17248:	str	r3, [sp, #4]
   1724c:	mov	r3, #0
   17250:	str	r3, [sp]
   17254:	mov	r3, #0
   17258:	ldr	r2, [pc, #1152]	; 176e0 <main+0x1154>
   1725c:	ldr	r1, [pc, #1152]	; 176e4 <main+0x1158>
   17260:	ldr	r0, [fp, #-12]
   17264:	bl	1516c <test_json>
   17268:	mov	r2, r0
   1726c:	ldr	r3, [fp, #-8]
   17270:	orr	r3, r3, r2
   17274:	str	r3, [fp, #-8]
   17278:	ldr	r3, [pc, #1128]	; 176e8 <main+0x115c>
   1727c:	str	r3, [sp, #8]
   17280:	mov	r3, #0
   17284:	str	r3, [sp, #4]
   17288:	mov	r3, #0
   1728c:	str	r3, [sp]
   17290:	mov	r3, #0
   17294:	ldr	r2, [pc, #1104]	; 176ec <main+0x1160>
   17298:	ldr	r1, [pc, #1104]	; 176f0 <main+0x1164>
   1729c:	ldr	r0, [fp, #-12]
   172a0:	bl	1516c <test_json>
   172a4:	mov	r2, r0
   172a8:	ldr	r3, [fp, #-8]
   172ac:	orr	r3, r3, r2
   172b0:	str	r3, [fp, #-8]
   172b4:	ldr	r3, [pc, #1080]	; 176f4 <main+0x1168>
   172b8:	str	r3, [sp, #8]
   172bc:	mov	r3, #0
   172c0:	str	r3, [sp, #4]
   172c4:	mov	r3, #0
   172c8:	str	r3, [sp]
   172cc:	mov	r3, #0
   172d0:	ldr	r2, [pc, #1044]	; 176ec <main+0x1160>
   172d4:	ldr	r1, [pc, #1052]	; 176f8 <main+0x116c>
   172d8:	ldr	r0, [fp, #-12]
   172dc:	bl	1516c <test_json>
   172e0:	mov	r2, r0
   172e4:	ldr	r3, [fp, #-8]
   172e8:	orr	r3, r3, r2
   172ec:	str	r3, [fp, #-8]
   172f0:	ldr	r3, [pc, #1028]	; 176fc <main+0x1170>
   172f4:	str	r3, [sp, #8]
   172f8:	mov	r3, #0
   172fc:	str	r3, [sp, #4]
   17300:	mov	r3, #0
   17304:	str	r3, [sp]
   17308:	mov	r3, #0
   1730c:	ldr	r2, [pc, #1004]	; 17700 <main+0x1174>
   17310:	ldr	r1, [pc, #1004]	; 17704 <main+0x1178>
   17314:	ldr	r0, [fp, #-12]
   17318:	bl	1516c <test_json>
   1731c:	mov	r2, r0
   17320:	ldr	r3, [fp, #-8]
   17324:	orr	r3, r3, r2
   17328:	str	r3, [fp, #-8]
   1732c:	ldr	r3, [pc, #980]	; 17708 <main+0x117c>
   17330:	str	r3, [sp, #8]
   17334:	mov	r3, #0
   17338:	str	r3, [sp, #4]
   1733c:	mov	r3, #0
   17340:	str	r3, [sp]
   17344:	mov	r3, #0
   17348:	ldr	r2, [pc, #956]	; 1770c <main+0x1180>
   1734c:	ldr	r1, [pc, #956]	; 17710 <main+0x1184>
   17350:	ldr	r0, [fp, #-12]
   17354:	bl	1516c <test_json>
   17358:	mov	r2, r0
   1735c:	ldr	r3, [fp, #-8]
   17360:	orr	r3, r3, r2
   17364:	str	r3, [fp, #-8]
   17368:	mov	r3, #776	; 0x308
   1736c:	str	r3, [sp, #8]
   17370:	mov	r3, #0
   17374:	str	r3, [sp, #4]
   17378:	mov	r3, #0
   1737c:	str	r3, [sp]
   17380:	mov	r3, #0
   17384:	ldr	r2, [pc, #904]	; 17714 <main+0x1188>
   17388:	ldr	r1, [pc, #904]	; 17718 <main+0x118c>
   1738c:	ldr	r0, [fp, #-12]
   17390:	bl	1516c <test_json>
   17394:	mov	r2, r0
   17398:	ldr	r3, [fp, #-8]
   1739c:	orr	r3, r3, r2
   173a0:	str	r3, [fp, #-8]
   173a4:	ldr	r3, [pc, #880]	; 1771c <main+0x1190>
   173a8:	str	r3, [sp, #8]
   173ac:	mov	r3, #0
   173b0:	str	r3, [sp, #4]
   173b4:	mov	r3, #0
   173b8:	str	r3, [sp]
   173bc:	mov	r3, #0
   173c0:	ldr	r2, [pc, #368]	; 17538 <main+0xfac>
   173c4:	ldr	r1, [pc, #852]	; 17720 <main+0x1194>
   173c8:	ldr	r0, [fp, #-12]
   173cc:	bl	1516c <test_json>
   173d0:	mov	r2, r0
   173d4:	ldr	r3, [fp, #-8]
   173d8:	orr	r3, r3, r2
   173dc:	str	r3, [fp, #-8]
   173e0:	ldr	r3, [pc, #828]	; 17724 <main+0x1198>
   173e4:	str	r3, [sp, #8]
   173e8:	mov	r3, #0
   173ec:	str	r3, [sp, #4]
   173f0:	mov	r3, #0
   173f4:	str	r3, [sp]
   173f8:	mov	r3, #0
   173fc:	ldr	r2, [pc, #804]	; 17728 <main+0x119c>
   17400:	ldr	r1, [pc, #804]	; 1772c <main+0x11a0>
   17404:	ldr	r0, [fp, #-12]
   17408:	bl	1516c <test_json>
   1740c:	mov	r2, r0
   17410:	ldr	r3, [fp, #-8]
   17414:	orr	r3, r3, r2
   17418:	str	r3, [fp, #-8]
   1741c:	ldr	r3, [pc, #780]	; 17730 <main+0x11a4>
   17420:	str	r3, [sp, #8]
   17424:	mov	r3, #0
   17428:	str	r3, [sp, #4]
   1742c:	mov	r3, #0
   17430:	str	r3, [sp]
   17434:	mov	r3, #0
   17438:	ldr	r2, [pc, #756]	; 17734 <main+0x11a8>
   1743c:	ldr	r1, [pc, #756]	; 17738 <main+0x11ac>
   17440:	ldr	r0, [fp, #-12]
   17444:	bl	1516c <test_json>
   17448:	mov	r2, r0
   1744c:	ldr	r3, [fp, #-8]
   17450:	orr	r3, r3, r2
   17454:	str	r3, [fp, #-8]
   17458:	mov	r3, #796	; 0x31c
   1745c:	str	r3, [sp, #8]
   17460:	mov	r3, #0
   17464:	str	r3, [sp, #4]
   17468:	mov	r3, #0
   1746c:	str	r3, [sp]
   17470:	mov	r3, #0
   17474:	ldr	r2, [pc, #704]	; 1773c <main+0x11b0>
   17478:	ldr	r1, [pc, #704]	; 17740 <main+0x11b4>
   1747c:	ldr	r0, [fp, #-12]
   17480:	bl	1516c <test_json>
   17484:	mov	r2, r0
   17488:	ldr	r3, [fp, #-8]
   1748c:	orr	r3, r3, r2
   17490:	str	r3, [fp, #-8]
   17494:	ldr	r3, [pc, #680]	; 17744 <main+0x11b8>
   17498:	str	r3, [sp, #8]
   1749c:	mov	r3, #0
   174a0:	str	r3, [sp, #4]
   174a4:	mov	r3, #0
   174a8:	str	r3, [sp]
   174ac:	mov	r3, #0
   174b0:	ldr	r2, [pc, #656]	; 17748 <main+0x11bc>
   174b4:	ldr	r1, [pc, #656]	; 1774c <main+0x11c0>
   174b8:	ldr	r0, [fp, #-12]
   174bc:	bl	1516c <test_json>
   174c0:	mov	r2, r0
   174c4:	ldr	r3, [fp, #-8]
   174c8:	orr	r3, r3, r2
   174cc:	str	r3, [fp, #-8]
   174d0:	ldr	r3, [pc, #632]	; 17750 <main+0x11c4>
   174d4:	str	r3, [sp, #8]
   174d8:	mov	r3, #0
   174dc:	str	r3, [sp, #4]
   174e0:	mov	r3, #0
   174e4:	str	r3, [sp]
   174e8:	mov	r3, #0
   174ec:	ldr	r2, [pc, #608]	; 17754 <main+0x11c8>
   174f0:	ldr	r1, [pc, #608]	; 17758 <main+0x11cc>
   174f4:	ldr	r0, [fp, #-12]
   174f8:	bl	1516c <test_json>
   174fc:	mov	r2, r0
   17500:	ldr	r3, [fp, #-8]
   17504:	orr	r3, r3, r2
   17508:	str	r3, [fp, #-8]
   1750c:	ldr	r3, [fp, #-8]
   17510:	cmp	r3, #0
   17514:	beq	17520 <main+0xf94>
   17518:	mvn	r3, #0
   1751c:	b	17524 <main+0xf98>
   17520:	mov	r3, #0
   17524:	mov	r0, r3
   17528:	sub	sp, fp, #4
   1752c:	pop	{fp, pc}
   17530:	.word	0x00000568
   17534:	.word	0x0000020d
   17538:	.word	0x00000810
   1753c:	.word	0x000029c4
   17540:	.word	0x000029dc
   17544:	.word	0x00002a00
   17548:	.word	0x00000213
   1754c:	.word	0x00002a28
   17550:	.word	0x00002a4c
   17554:	.word	0x00000216
   17558:	.word	0x00002a74
   1755c:	.word	0x00002aa0
   17560:	.word	0x00000219
   17564:	.word	0x00002ad4
   17568:	.word	0x00002b10
   1756c:	.word	0x0000021f
   17570:	.word	0x00002b38
   17574:	.word	0x00000223
   17578:	.word	0x00002b64
   1757c:	.word	0x00000227
   17580:	.word	0x000007a4
   17584:	.word	0x0000022b
   17588:	.word	0x00002b8c
   1758c:	.word	0x0000022e
   17590:	.word	0x00002ba4
   17594:	.word	0x00000231
   17598:	.word	0x00002bc8
   1759c:	.word	0x00002bec
   175a0:	.word	0x00000237
   175a4:	.word	0x00002c1c
   175a8:	.word	0x0000023a
   175ac:	.word	0x00002c54
   175b0:	.word	0x0000023d
   175b4:	.word	0x00002c74
   175b8:	.word	0x00000241
   175bc:	.word	0x00002c98
   175c0:	.word	0x00000245
   175c4:	.word	0x00000a60
   175c8:	.word	0x00000259
   175cc:	.word	0x00002cbc
   175d0:	.word	0x00002ce0
   175d4:	.word	0x0000025f
   175d8:	.word	0x00002d04
   175dc:	.word	0x00002d2c
   175e0:	.word	0x00000262
   175e4:	.word	0x00002d50
   175e8:	.word	0x00000265
   175ec:	.word	0x00002d74
   175f0:	.word	0x00002d94
   175f4:	.word	0x00002db8
   175f8:	.word	0x00002dd8
   175fc:	.word	0x0000026b
   17600:	.word	0x00002dfc
   17604:	.word	0x00002e1c
   17608:	.word	0x0000026e
   1760c:	.word	0x00002e40
   17610:	.word	0x00000271
   17614:	.word	0x00002e6c
   17618:	.word	0x00002ea8
   1761c:	.word	0x00002ec4
   17620:	.word	0x00000277
   17624:	.word	0x0000027a
   17628:	.word	0x00002ef0
   1762c:	.word	0x00002f38
   17630:	.word	0x0000027e
   17634:	.word	0x00002f8c
   17638:	.word	0x00002fd8
   1763c:	.word	0x00000282
   17640:	.word	0x00003030
   17644:	.word	0x00003094
   17648:	.word	0x00000286
   1764c:	.word	0x00003104
   17650:	.word	0x00000289
   17654:	.word	0x00003130
   17658:	.word	0x0000028d
   1765c:	.word	0x00003158
   17660:	.word	0x00003178
   17664:	.word	0x00000293
   17668:	.word	0x00003198
   1766c:	.word	0x00000296
   17670:	.word	0x000031b8
   17674:	.word	0x00000299
   17678:	.word	0x000031d8
   1767c:	.word	0x000031f8
   17680:	.word	0x0000029f
   17684:	.word	0x00003218
   17688:	.word	0x000002a2
   1768c:	.word	0x00003238
   17690:	.word	0x000002a5
   17694:	.word	0x00003260
   17698:	.word	0x00003294
   1769c:	.word	0x000002ab
   176a0:	.word	0x000002ae
   176a4:	.word	0x000032b8
   176a8:	.word	0x000002b2
   176ac:	.word	0x00003300
   176b0:	.word	0x000002b6
   176b4:	.word	0x0000334c
   176b8:	.word	0x000002ba
   176bc:	.word	0x000033ac
   176c0:	.word	0x000002bd
   176c4:	.word	0x000033d4
   176c8:	.word	0x000033f8
   176cc:	.word	0x00003458
   176d0:	.word	0x000002db
   176d4:	.word	0x000034c8
   176d8:	.word	0x000034f8
   176dc:	.word	0x000002de
   176e0:	.word	0x00003538
   176e4:	.word	0x0000354c
   176e8:	.word	0x000002e2
   176ec:	.word	0x00003568
   176f0:	.word	0x000035ac
   176f4:	.word	0x000002ee
   176f8:	.word	0x000035f4
   176fc:	.word	0x000002fe
   17700:	.word	0x00003694
   17704:	.word	0x000036b8
   17708:	.word	0x00000302
   1770c:	.word	0x000036e0
   17710:	.word	0x0000370c
   17714:	.word	0x0000373c
   17718:	.word	0x000037ac
   1771c:	.word	0x0000030d
   17720:	.word	0x00003828
   17724:	.word	0x00000312
   17728:	.word	0x000038a0
   1772c:	.word	0x00003910
   17730:	.word	0x00000317
   17734:	.word	0x0000398c
   17738:	.word	0x00003a0c
   1773c:	.word	0x00003a98
   17740:	.word	0x00003b08
   17744:	.word	0x00000321
   17748:	.word	0x00003b84
   1774c:	.word	0x00003c04
   17750:	.word	0x00000326
   17754:	.word	0x00003c90
   17758:	.word	0x00003d14
