
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_cdf_reopen>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #48	; 0x30
       c:	str	r0, [fp, #-8]
      10:	movw	r0, #120	; 0x78
      14:	bl	0 <malloc>
      18:	str	r0, [fp, #-12]
      1c:	ldr	r0, [fp, #-12]
      20:	movw	r1, #0
      24:	cmp	r0, r1
      28:	bne	68 <coda_cdf_reopen+0x68>
      2c:	mvn	r0, #0
      30:	movw	r1, #0
      34:	movt	r1, #0
      38:	movw	r2, #120	; 0x78
      3c:	movw	r3, #0
      40:	movt	r3, #0
      44:	movw	ip, #1315	; 0x523
      48:	str	ip, [sp]
      4c:	bl	0 <coda_set_error>
      50:	ldr	r0, [fp, #-8]
      54:	ldr	r0, [r0]
      58:	bl	0 <coda_close>
      5c:	mvn	r1, #0
      60:	str	r1, [fp, #-4]
      64:	b	320 <coda_cdf_reopen+0x320>
      68:	ldr	r0, [fp, #-12]
      6c:	mov	r1, #0
      70:	str	r1, [r0]
      74:	ldr	r0, [fp, #-8]
      78:	ldr	r0, [r0]
      7c:	ldr	r2, [r0, #8]
      80:	ldr	r0, [r0, #12]
      84:	ldr	r3, [fp, #-12]
      88:	str	r0, [r3, #12]
      8c:	str	r2, [r3, #8]
      90:	ldr	r0, [fp, #-12]
      94:	mov	r2, #5
      98:	str	r2, [r0, #16]
      9c:	ldr	r0, [fp, #-12]
      a0:	str	r1, [r0, #20]
      a4:	ldr	r0, [fp, #-12]
      a8:	str	r1, [r0, #24]
      ac:	ldr	r0, [fp, #-12]
      b0:	str	r1, [r0, #28]
      b4:	ldr	r0, [fp, #-12]
      b8:	str	r1, [r0, #32]
      bc:	ldr	r0, [fp, #-12]
      c0:	str	r1, [r0, #44]	; 0x2c
      c4:	str	r1, [r0, #40]	; 0x28
      c8:	ldr	r0, [fp, #-12]
      cc:	movw	r1, #0
      d0:	str	r1, [r0, #48]	; 0x30
      d4:	ldr	r0, [fp, #-8]
      d8:	ldr	r0, [r0]
      dc:	ldr	r1, [fp, #-12]
      e0:	str	r0, [r1, #52]	; 0x34
      e4:	ldr	r0, [fp, #-8]
      e8:	ldr	r0, [r0]
      ec:	ldr	r0, [r0]
      f0:	bl	0 <strdup>
      f4:	ldr	r1, [fp, #-12]
      f8:	str	r0, [r1]
      fc:	ldr	r0, [fp, #-12]
     100:	ldr	r0, [r0]
     104:	movw	r1, #0
     108:	cmp	r0, r1
     10c:	bne	140 <coda_cdf_reopen+0x140>
     110:	mvn	r0, #0
     114:	movw	r1, #0
     118:	movt	r1, #0
     11c:	movw	r2, #0
     120:	movt	r2, #0
     124:	movw	r3, #1335	; 0x537
     128:	bl	0 <coda_set_error>
     12c:	ldr	r0, [fp, #-12]
     130:	bl	338 <coda_cdf_close>
     134:	mvn	r1, #0
     138:	str	r1, [fp, #-4]
     13c:	b	320 <coda_cdf_reopen+0x320>
     140:	add	r0, sp, #24
     144:	ldr	r1, [fp, #-12]
     148:	ldr	r1, [r1, #52]	; 0x34
     14c:	mov	r2, sp
     150:	str	r0, [r2, #8]
     154:	mov	r0, #0
     158:	str	r0, [r2, #4]
     15c:	mov	r3, #8
     160:	str	r3, [r2]
     164:	str	r0, [sp, #20]
     168:	mov	r0, r1
     16c:	ldr	r2, [sp, #20]
     170:	ldr	r3, [sp, #20]
     174:	bl	3e4 <read_bytes>
     178:	cmp	r0, #0
     17c:	bge	194 <coda_cdf_reopen+0x194>
     180:	ldr	r0, [fp, #-12]
     184:	bl	338 <coda_cdf_close>
     188:	mvn	r1, #0
     18c:	str	r1, [fp, #-4]
     190:	b	320 <coda_cdf_reopen+0x320>
     194:	add	r0, sp, #24
     198:	bl	638 <swap4>
     19c:	add	r0, sp, #24
     1a0:	add	r0, r0, #4
     1a4:	bl	638 <swap4>
     1a8:	ldr	r0, [sp, #24]
     1ac:	movw	r1, #65535	; 0xffff
     1b0:	cmp	r0, r1
     1b4:	beq	1c8 <coda_cdf_reopen+0x1c8>
     1b8:	ldr	r0, [pc, #364]	; 32c <coda_cdf_reopen+0x32c>
     1bc:	ldr	r1, [sp, #24]
     1c0:	cmp	r1, r0
     1c4:	bne	1ec <coda_cdf_reopen+0x1ec>
     1c8:	mvn	r0, #199	; 0xc7
     1cc:	movw	r1, #0
     1d0:	movt	r1, #0
     1d4:	bl	0 <coda_set_error>
     1d8:	ldr	r0, [fp, #-12]
     1dc:	bl	338 <coda_cdf_close>
     1e0:	mvn	r1, #0
     1e4:	str	r1, [fp, #-4]
     1e8:	b	320 <coda_cdf_reopen+0x320>
     1ec:	ldr	r0, [pc, #316]	; 330 <coda_cdf_reopen+0x330>
     1f0:	ldr	r1, [sp, #28]
     1f4:	cmp	r1, r0
     1f8:	bne	220 <coda_cdf_reopen+0x220>
     1fc:	mvn	r0, #199	; 0xc7
     200:	movw	r1, #0
     204:	movt	r1, #0
     208:	bl	0 <coda_set_error>
     20c:	ldr	r0, [fp, #-12]
     210:	bl	338 <coda_cdf_close>
     214:	mvn	r1, #0
     218:	str	r1, [fp, #-4]
     21c:	b	320 <coda_cdf_reopen+0x320>
     220:	ldr	r0, [pc, #268]	; 334 <coda_cdf_reopen+0x334>
     224:	ldr	r1, [sp, #24]
     228:	cmp	r1, r0
     22c:	bne	244 <coda_cdf_reopen+0x244>
     230:	ldr	r0, [sp, #28]
     234:	movw	r1, #65535	; 0xffff
     238:	cmp	r0, r1
     23c:	bne	244 <coda_cdf_reopen+0x244>
     240:	b	264 <coda_cdf_reopen+0x264>
     244:	movw	r0, #0
     248:	movt	r0, #0
     24c:	movw	r1, #0
     250:	movt	r1, #0
     254:	movw	r2, #1362	; 0x552
     258:	movw	r3, #0
     25c:	movt	r3, #0
     260:	bl	0 <__assert_fail>
     264:	movw	r0, #5
     268:	bl	0 <coda_type_record_new>
     26c:	str	r0, [fp, #-16]
     270:	ldr	r0, [fp, #-16]
     274:	movw	r1, #0
     278:	cmp	r0, r1
     27c:	bne	294 <coda_cdf_reopen+0x294>
     280:	ldr	r0, [fp, #-12]
     284:	bl	338 <coda_cdf_close>
     288:	mvn	r1, #0
     28c:	str	r1, [fp, #-4]
     290:	b	320 <coda_cdf_reopen+0x320>
     294:	ldr	r0, [fp, #-16]
     298:	movw	r1, #0
     29c:	bl	0 <coda_mem_record_new>
     2a0:	ldr	r1, [fp, #-12]
     2a4:	str	r0, [r1, #20]
     2a8:	ldr	r0, [fp, #-12]
     2ac:	ldr	r0, [r0, #20]
     2b0:	movw	r1, #0
     2b4:	cmp	r0, r1
     2b8:	bne	2e0 <coda_cdf_reopen+0x2e0>
     2bc:	ldr	r0, [fp, #-12]
     2c0:	bl	338 <coda_cdf_close>
     2c4:	ldr	r1, [fp, #-16]
     2c8:	str	r0, [sp, #16]
     2cc:	mov	r0, r1
     2d0:	bl	0 <coda_type_release>
     2d4:	mvn	r0, #0
     2d8:	str	r0, [fp, #-4]
     2dc:	b	320 <coda_cdf_reopen+0x320>
     2e0:	ldr	r0, [fp, #-16]
     2e4:	bl	0 <coda_type_release>
     2e8:	ldr	r0, [fp, #-12]
     2ec:	bl	6f8 <read_file>
     2f0:	cmp	r0, #0
     2f4:	beq	30c <coda_cdf_reopen+0x30c>
     2f8:	ldr	r0, [fp, #-12]
     2fc:	bl	338 <coda_cdf_close>
     300:	mvn	r1, #0
     304:	str	r1, [fp, #-4]
     308:	b	320 <coda_cdf_reopen+0x320>
     30c:	ldr	r0, [fp, #-12]
     310:	ldr	r1, [fp, #-8]
     314:	str	r0, [r1]
     318:	movw	r0, #0
     31c:	str	r0, [fp, #-4]
     320:	ldr	r0, [fp, #-4]
     324:	mov	sp, fp
     328:	pop	{fp, pc}
     32c:	.word	0xcdf26002
     330:	.word	0xcccc0001
     334:	.word	0xcdf30001

00000338 <coda_cdf_close>:
     338:	push	{fp, lr}
     33c:	mov	fp, sp
     340:	sub	sp, sp, #8
     344:	str	r0, [sp, #4]
     348:	ldr	r0, [sp, #4]
     34c:	str	r0, [sp]
     350:	ldr	r0, [sp]
     354:	ldr	r0, [r0]
     358:	movw	r1, #0
     35c:	cmp	r0, r1
     360:	beq	370 <coda_cdf_close+0x38>
     364:	ldr	r0, [sp]
     368:	ldr	r0, [r0]
     36c:	bl	0 <free>
     370:	ldr	r0, [sp]
     374:	ldr	r0, [r0, #20]
     378:	movw	r1, #0
     37c:	cmp	r0, r1
     380:	beq	390 <coda_cdf_close+0x58>
     384:	ldr	r0, [sp]
     388:	ldr	r0, [r0, #20]
     38c:	bl	0 <coda_dynamic_type_delete>
     390:	ldr	r0, [sp]
     394:	ldr	r0, [r0, #48]	; 0x30
     398:	movw	r1, #0
     39c:	cmp	r0, r1
     3a0:	beq	3b0 <coda_cdf_close+0x78>
     3a4:	ldr	r0, [sp]
     3a8:	ldr	r0, [r0, #48]	; 0x30
     3ac:	bl	0 <free>
     3b0:	ldr	r0, [sp]
     3b4:	ldr	r0, [r0, #52]	; 0x34
     3b8:	movw	r1, #0
     3bc:	cmp	r0, r1
     3c0:	beq	3d0 <coda_cdf_close+0x98>
     3c4:	ldr	r0, [sp]
     3c8:	ldr	r0, [r0, #52]	; 0x34
     3cc:	bl	0 <coda_bin_close>
     3d0:	ldr	r0, [sp]
     3d4:	bl	0 <free>
     3d8:	movw	r0, #0
     3dc:	mov	sp, fp
     3e0:	pop	{fp, pc}

000003e4 <read_bytes>:
     3e4:	push	{fp, lr}
     3e8:	mov	fp, sp
     3ec:	sub	sp, sp, #112	; 0x70
     3f0:	ldr	r1, [fp, #12]
     3f4:	ldr	ip, [fp, #8]
     3f8:	ldr	lr, [fp, #16]
     3fc:	str	r0, [fp, #-8]
     400:	str	r3, [fp, #-12]
     404:	str	r2, [fp, #-16]
     408:	str	r1, [fp, #-20]	; 0xffffffec
     40c:	str	ip, [fp, #-24]	; 0xffffffe8
     410:	ldr	r0, [fp, #-8]
     414:	ldr	r0, [r0, #48]	; 0x30
     418:	movw	r1, #0
     41c:	cmp	r0, r1
     420:	beq	538 <read_bytes+0x154>
     424:	ldr	r0, [fp, #-16]
     428:	ldr	r1, [fp, #-12]
     42c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     430:	ldr	r3, [fp, #-20]	; 0xffffffec
     434:	adds	r0, r0, r2
     438:	adc	r1, r1, r3
     43c:	ldr	r2, [fp, #-8]
     440:	ldr	r3, [r2, #40]	; 0x28
     444:	ldr	r2, [r2, #44]	; 0x2c
     448:	subs	r0, r3, r0
     44c:	sbcs	r1, r2, r1
     450:	bcs	518 <read_bytes+0x134>
     454:	b	458 <read_bytes+0x74>
     458:	ldr	r0, [fp, #-8]
     45c:	ldr	r0, [r0, #16]
     460:	cmp	r0, #0
     464:	beq	478 <read_bytes+0x94>
     468:	ldr	r0, [fp, #-8]
     46c:	ldr	r0, [r0, #16]
     470:	cmp	r0, #1
     474:	bne	494 <read_bytes+0xb0>
     478:	mvn	r0, #300	; 0x12c
     47c:	movw	r1, #0
     480:	movt	r1, #0
     484:	bl	0 <coda_set_error>
     488:	mvn	r0, #0
     48c:	str	r0, [fp, #-4]
     490:	b	62c <read_bytes+0x248>
     494:	add	r2, sp, #25
     498:	ldr	r0, [fp, #-24]	; 0xffffffe8
     49c:	ldr	r1, [fp, #-20]	; 0xffffffec
     4a0:	sub	r3, fp, #45	; 0x2d
     4a4:	str	r2, [sp, #20]
     4a8:	mov	r2, r3
     4ac:	bl	0 <coda_str64>
     4b0:	ldr	r0, [fp, #-16]
     4b4:	ldr	r1, [fp, #-12]
     4b8:	add	r2, sp, #46	; 0x2e
     4bc:	bl	0 <coda_str64>
     4c0:	ldr	r0, [fp, #-8]
     4c4:	ldr	r1, [r0, #40]	; 0x28
     4c8:	ldr	r0, [r0, #44]	; 0x2c
     4cc:	str	r0, [sp, #16]
     4d0:	mov	r0, r1
     4d4:	ldr	r1, [sp, #16]
     4d8:	ldr	r2, [sp, #20]
     4dc:	bl	0 <coda_str64>
     4e0:	add	r0, sp, #25
     4e4:	add	r3, sp, #46	; 0x2e
     4e8:	sub	r2, fp, #45	; 0x2d
     4ec:	mvn	r1, #300	; 0x12c
     4f0:	str	r0, [sp, #12]
     4f4:	mov	r0, r1
     4f8:	movw	r1, #0
     4fc:	movt	r1, #0
     500:	ldr	ip, [sp, #12]
     504:	str	ip, [sp]
     508:	bl	0 <coda_set_error>
     50c:	mvn	r0, #0
     510:	str	r0, [fp, #-4]
     514:	b	62c <read_bytes+0x248>
     518:	ldr	r0, [fp, #16]
     51c:	ldr	r1, [fp, #-8]
     520:	ldr	r1, [r1, #48]	; 0x30
     524:	ldr	r2, [fp, #-16]
     528:	add	r1, r1, r2
     52c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     530:	bl	0 <memcpy>
     534:	b	624 <read_bytes+0x240>
     538:	ldr	r0, [fp, #-8]
     53c:	ldr	r0, [r0, #16]
     540:	cmp	r0, #0
     544:	beq	558 <read_bytes+0x174>
     548:	ldr	r0, [fp, #-8]
     54c:	ldr	r0, [r0, #16]
     550:	cmp	r0, #1
     554:	bne	55c <read_bytes+0x178>
     558:	b	57c <read_bytes+0x198>
     55c:	movw	r0, #0
     560:	movt	r0, #0
     564:	movw	r1, #0
     568:	movt	r1, #0
     56c:	movw	r2, #83	; 0x53
     570:	movw	r3, #0
     574:	movt	r3, #0
     578:	bl	0 <__assert_fail>
     57c:	ldr	r0, [fp, #-16]
     580:	ldr	r1, [fp, #-12]
     584:	ldr	r2, [fp, #-24]	; 0xffffffe8
     588:	ldr	r3, [fp, #-20]	; 0xffffffec
     58c:	adds	r0, r0, r2
     590:	adc	r1, r1, r3
     594:	ldr	r2, [fp, #-8]
     598:	ldr	r3, [r2, #8]
     59c:	ldr	r2, [r2, #12]
     5a0:	subs	r0, r3, r0
     5a4:	sbcs	r1, r2, r1
     5a8:	bcs	5cc <read_bytes+0x1e8>
     5ac:	b	5b0 <read_bytes+0x1cc>
     5b0:	mvn	r0, #300	; 0x12c
     5b4:	movw	r1, #0
     5b8:	movt	r1, #0
     5bc:	bl	0 <coda_set_error>
     5c0:	mvn	r0, #0
     5c4:	str	r0, [fp, #-4]
     5c8:	b	62c <read_bytes+0x248>
     5cc:	ldr	r0, [fp, #-8]
     5d0:	ldr	r0, [r0, #56]	; 0x38
     5d4:	ldr	r1, [fp, #16]
     5d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     5dc:	ldr	r3, [fp, #-16]
     5e0:	bl	0 <pread>
     5e4:	cmp	r0, #0
     5e8:	bge	620 <read_bytes+0x23c>
     5ec:	bl	0 <__errno_location>
     5f0:	ldr	r0, [r0]
     5f4:	bl	0 <strerror>
     5f8:	mvn	r1, #21
     5fc:	str	r0, [sp, #8]
     600:	mov	r0, r1
     604:	movw	r1, #0
     608:	movt	r1, #0
     60c:	ldr	r2, [sp, #8]
     610:	bl	0 <coda_set_error>
     614:	mvn	r0, #0
     618:	str	r0, [fp, #-4]
     61c:	b	62c <read_bytes+0x248>
     620:	b	624 <read_bytes+0x240>
     624:	movw	r0, #0
     628:	str	r0, [fp, #-4]
     62c:	ldr	r0, [fp, #-4]
     630:	mov	sp, fp
     634:	pop	{fp, pc}

00000638 <swap4>:
     638:	sub	sp, sp, #8
     63c:	str	r0, [sp, #4]
     640:	ldr	r0, [sp, #4]
     644:	str	r0, [sp]
     648:	ldr	r0, [sp]
     64c:	ldrb	r0, [r0]
     650:	ldr	r1, [sp]
     654:	ldrb	r1, [r1, #3]
     658:	eor	r0, r0, r1
     65c:	ldr	r1, [sp]
     660:	strb	r0, [r1]
     664:	ldr	r0, [sp]
     668:	ldrb	r0, [r0]
     66c:	ldr	r1, [sp]
     670:	ldrb	r1, [r1, #3]
     674:	eor	r0, r0, r1
     678:	ldr	r1, [sp]
     67c:	strb	r0, [r1, #3]
     680:	ldr	r0, [sp]
     684:	ldrb	r0, [r0]
     688:	ldr	r1, [sp]
     68c:	ldrb	r1, [r1, #3]
     690:	eor	r0, r0, r1
     694:	ldr	r1, [sp]
     698:	strb	r0, [r1]
     69c:	ldr	r0, [sp]
     6a0:	ldrb	r0, [r0, #1]
     6a4:	ldr	r1, [sp]
     6a8:	ldrb	r1, [r1, #2]
     6ac:	eor	r0, r0, r1
     6b0:	ldr	r1, [sp]
     6b4:	strb	r0, [r1, #1]
     6b8:	ldr	r0, [sp]
     6bc:	ldrb	r0, [r0, #1]
     6c0:	ldr	r1, [sp]
     6c4:	ldrb	r1, [r1, #2]
     6c8:	eor	r0, r0, r1
     6cc:	ldr	r1, [sp]
     6d0:	strb	r0, [r1, #2]
     6d4:	ldr	r0, [sp]
     6d8:	ldrb	r0, [r0, #1]
     6dc:	ldr	r1, [sp]
     6e0:	ldrb	r1, [r1, #2]
     6e4:	eor	r0, r0, r1
     6e8:	ldr	r1, [sp]
     6ec:	strb	r0, [r1, #1]
     6f0:	add	sp, sp, #8
     6f4:	bx	lr

000006f8 <read_file>:
     6f8:	push	{fp, lr}
     6fc:	mov	fp, sp
     700:	sub	sp, sp, #56	; 0x38
     704:	str	r0, [fp, #-8]
     708:	ldr	r0, [fp, #-8]
     70c:	ldr	r0, [r0, #52]	; 0x34
     710:	sub	r1, fp, #12
     714:	mov	r2, sp
     718:	str	r1, [r2, #8]
     71c:	mov	r1, #0
     720:	str	r1, [r2, #4]
     724:	mov	r3, #4
     728:	str	r3, [r2]
     72c:	mov	r2, #16
     730:	mov	r3, r1
     734:	bl	3e4 <read_bytes>
     738:	cmp	r0, #0
     73c:	bge	74c <read_file+0x54>
     740:	mvn	r0, #0
     744:	str	r0, [fp, #-4]
     748:	b	b40 <read_file+0x448>
     74c:	sub	r0, fp, #12
     750:	bl	638 <swap4>
     754:	ldr	r0, [fp, #-12]
     758:	cmp	r0, #1
     75c:	beq	780 <read_file+0x88>
     760:	ldr	r0, [pc, #996]	; b4c <read_file+0x454>
     764:	ldr	r2, [fp, #-12]
     768:	movw	r1, #0
     76c:	movt	r1, #0
     770:	bl	0 <coda_set_error>
     774:	mvn	r0, #0
     778:	str	r0, [fp, #-4]
     77c:	b	b40 <read_file+0x448>
     780:	ldr	r0, [fp, #-8]
     784:	ldr	r0, [r0, #52]	; 0x34
     788:	sub	r1, fp, #24
     78c:	mov	r2, sp
     790:	str	r1, [r2, #8]
     794:	mov	r1, #0
     798:	str	r1, [r2, #4]
     79c:	mov	r3, #8
     7a0:	str	r3, [r2]
     7a4:	mov	r2, #20
     7a8:	mov	r3, r1
     7ac:	bl	3e4 <read_bytes>
     7b0:	cmp	r0, #0
     7b4:	bge	7c4 <read_file+0xcc>
     7b8:	mvn	r0, #0
     7bc:	str	r0, [fp, #-4]
     7c0:	b	b40 <read_file+0x448>
     7c4:	ldr	r0, [fp, #-8]
     7c8:	ldr	r0, [r0, #52]	; 0x34
     7cc:	ldr	r1, [fp, #-8]
     7d0:	add	r1, r1, #56	; 0x38
     7d4:	mov	r2, sp
     7d8:	str	r1, [r2, #8]
     7dc:	mov	r1, #0
     7e0:	str	r1, [r2, #4]
     7e4:	mov	r3, #4
     7e8:	str	r3, [r2]
     7ec:	mov	r2, #28
     7f0:	mov	r3, r1
     7f4:	bl	3e4 <read_bytes>
     7f8:	cmp	r0, #0
     7fc:	bge	80c <read_file+0x114>
     800:	mvn	r0, #0
     804:	str	r0, [fp, #-4]
     808:	b	b40 <read_file+0x448>
     80c:	ldr	r0, [fp, #-8]
     810:	ldr	r0, [r0, #52]	; 0x34
     814:	ldr	r1, [fp, #-8]
     818:	add	r1, r1, #60	; 0x3c
     81c:	mov	r2, sp
     820:	str	r1, [r2, #8]
     824:	mov	r1, #0
     828:	str	r1, [r2, #4]
     82c:	mov	r3, #4
     830:	str	r3, [r2]
     834:	mov	r2, #32
     838:	mov	r3, r1
     83c:	bl	3e4 <read_bytes>
     840:	cmp	r0, #0
     844:	bge	854 <read_file+0x15c>
     848:	mvn	r0, #0
     84c:	str	r0, [fp, #-4]
     850:	b	b40 <read_file+0x448>
     854:	ldr	r0, [fp, #-8]
     858:	ldr	r0, [r0, #52]	; 0x34
     85c:	add	r1, sp, #28
     860:	mov	r2, sp
     864:	str	r1, [r2, #8]
     868:	mov	r1, #0
     86c:	str	r1, [r2, #4]
     870:	mov	r3, #4
     874:	str	r3, [r2]
     878:	mov	r2, #36	; 0x24
     87c:	mov	r3, r1
     880:	bl	3e4 <read_bytes>
     884:	cmp	r0, #0
     888:	bge	898 <read_file+0x1a0>
     88c:	mvn	r0, #0
     890:	str	r0, [fp, #-4]
     894:	b	b40 <read_file+0x448>
     898:	ldr	r0, [fp, #-8]
     89c:	ldr	r0, [r0, #52]	; 0x34
     8a0:	add	r1, sp, #24
     8a4:	mov	r2, sp
     8a8:	str	r1, [r2, #8]
     8ac:	mov	r1, #0
     8b0:	str	r1, [r2, #4]
     8b4:	mov	r3, #4
     8b8:	str	r3, [r2]
     8bc:	mov	r2, #40	; 0x28
     8c0:	mov	r3, r1
     8c4:	bl	3e4 <read_bytes>
     8c8:	cmp	r0, #0
     8cc:	bge	8dc <read_file+0x1e4>
     8d0:	mvn	r0, #0
     8d4:	str	r0, [fp, #-4]
     8d8:	b	b40 <read_file+0x448>
     8dc:	ldr	r0, [fp, #-8]
     8e0:	ldr	r0, [r0, #52]	; 0x34
     8e4:	ldr	r1, [fp, #-8]
     8e8:	add	r1, r1, #64	; 0x40
     8ec:	mov	r2, sp
     8f0:	str	r1, [r2, #8]
     8f4:	mov	r1, #0
     8f8:	str	r1, [r2, #4]
     8fc:	mov	r3, #4
     900:	str	r3, [r2]
     904:	mov	r2, #52	; 0x34
     908:	mov	r3, r1
     90c:	bl	3e4 <read_bytes>
     910:	cmp	r0, #0
     914:	bge	924 <read_file+0x22c>
     918:	mvn	r0, #0
     91c:	str	r0, [fp, #-4]
     920:	b	b40 <read_file+0x448>
     924:	sub	r0, fp, #24
     928:	bl	b50 <swap8>
     92c:	ldr	r0, [fp, #-8]
     930:	add	r0, r0, #56	; 0x38
     934:	bl	638 <swap4>
     938:	ldr	r0, [fp, #-8]
     93c:	add	r0, r0, #60	; 0x3c
     940:	bl	638 <swap4>
     944:	add	r0, sp, #28
     948:	bl	638 <swap4>
     94c:	add	r0, sp, #24
     950:	bl	638 <swap4>
     954:	ldr	r0, [fp, #-8]
     958:	add	r0, r0, #64	; 0x40
     95c:	bl	638 <swap4>
     960:	ldr	r0, [sp, #28]
     964:	sub	r1, r0, #1
     968:	cmp	r1, #2
     96c:	str	r0, [sp, #20]
     970:	bcc	a20 <read_file+0x328>
     974:	b	978 <read_file+0x280>
     978:	ldr	r0, [sp, #20]
     97c:	cmp	r0, #3
     980:	beq	a40 <read_file+0x348>
     984:	b	988 <read_file+0x290>
     988:	ldr	r0, [sp, #20]
     98c:	cmp	r0, #4
     990:	beq	a30 <read_file+0x338>
     994:	b	998 <read_file+0x2a0>
     998:	ldr	r0, [sp, #20]
     99c:	cmp	r0, #5
     9a0:	beq	a20 <read_file+0x328>
     9a4:	b	9a8 <read_file+0x2b0>
     9a8:	ldr	r0, [sp, #20]
     9ac:	cmp	r0, #6
     9b0:	beq	a30 <read_file+0x338>
     9b4:	b	9b8 <read_file+0x2c0>
     9b8:	ldr	r0, [sp, #20]
     9bc:	cmp	r0, #7
     9c0:	beq	a20 <read_file+0x328>
     9c4:	b	9c8 <read_file+0x2d0>
     9c8:	ldr	r0, [sp, #20]
     9cc:	cmp	r0, #9
     9d0:	beq	a20 <read_file+0x328>
     9d4:	b	9d8 <read_file+0x2e0>
     9d8:	ldr	r0, [sp, #20]
     9dc:	sub	r1, r0, #11
     9e0:	cmp	r1, #2
     9e4:	bcc	a20 <read_file+0x328>
     9e8:	b	9ec <read_file+0x2f4>
     9ec:	ldr	r0, [sp, #20]
     9f0:	cmp	r0, #13
     9f4:	beq	a30 <read_file+0x338>
     9f8:	b	9fc <read_file+0x304>
     9fc:	ldr	r0, [sp, #20]
     a00:	sub	r1, r0, #14
     a04:	cmp	r1, #2
     a08:	bcc	a40 <read_file+0x348>
     a0c:	b	a10 <read_file+0x318>
     a10:	ldr	r0, [sp, #20]
     a14:	cmp	r0, #16
     a18:	beq	a30 <read_file+0x338>
     a1c:	b	a5c <read_file+0x364>
     a20:	ldr	r0, [fp, #-8]
     a24:	movw	r1, #0
     a28:	str	r1, [r0, #68]	; 0x44
     a2c:	b	a7c <read_file+0x384>
     a30:	ldr	r0, [fp, #-8]
     a34:	movw	r1, #1
     a38:	str	r1, [r0, #68]	; 0x44
     a3c:	b	a7c <read_file+0x384>
     a40:	mvn	r0, #199	; 0xc7
     a44:	movw	r1, #0
     a48:	movt	r1, #0
     a4c:	bl	0 <coda_set_error>
     a50:	mvn	r0, #0
     a54:	str	r0, [fp, #-4]
     a58:	b	b40 <read_file+0x448>
     a5c:	ldr	r2, [sp, #28]
     a60:	mvn	r0, #199	; 0xc7
     a64:	movw	r1, #0
     a68:	movt	r1, #0
     a6c:	bl	0 <coda_set_error>
     a70:	mvn	r0, #0
     a74:	str	r0, [fp, #-4]
     a78:	b	b40 <read_file+0x448>
     a7c:	ldr	r0, [sp, #24]
     a80:	and	r0, r0, #1
     a84:	cmp	r0, #0
     a88:	beq	a9c <read_file+0x3a4>
     a8c:	ldr	r0, [fp, #-8]
     a90:	movw	r1, #0
     a94:	str	r1, [r0, #72]	; 0x48
     a98:	b	aa8 <read_file+0x3b0>
     a9c:	ldr	r0, [fp, #-8]
     aa0:	movw	r1, #1
     aa4:	str	r1, [r0, #72]	; 0x48
     aa8:	ldr	r0, [sp, #24]
     aac:	and	r0, r0, #2
     ab0:	cmp	r0, #0
     ab4:	bne	ad4 <read_file+0x3dc>
     ab8:	mvn	r0, #199	; 0xc7
     abc:	movw	r1, #0
     ac0:	movt	r1, #0
     ac4:	bl	0 <coda_set_error>
     ac8:	mvn	r0, #0
     acc:	str	r0, [fp, #-4]
     ad0:	b	b40 <read_file+0x448>
     ad4:	ldr	r0, [sp, #24]
     ad8:	and	r0, r0, #4
     adc:	cmp	r0, #0
     ae0:	movw	r0, #0
     ae4:	str	r0, [sp, #16]
     ae8:	beq	b04 <read_file+0x40c>
     aec:	ldr	r0, [sp, #24]
     af0:	and	r0, r0, #8
     af4:	cmp	r0, #0
     af8:	movw	r0, #0
     afc:	movne	r0, #1
     b00:	str	r0, [sp, #16]
     b04:	ldr	r0, [sp, #16]
     b08:	and	r0, r0, #1
     b0c:	ldr	r1, [fp, #-8]
     b10:	str	r0, [r1, #76]	; 0x4c
     b14:	ldr	r0, [fp, #-8]
     b18:	ldr	r2, [fp, #-24]	; 0xffffffe8
     b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
     b20:	bl	cb8 <read_GDR>
     b24:	cmp	r0, #0
     b28:	beq	b38 <read_file+0x440>
     b2c:	mvn	r0, #0
     b30:	str	r0, [fp, #-4]
     b34:	b	b40 <read_file+0x448>
     b38:	movw	r0, #0
     b3c:	str	r0, [fp, #-4]
     b40:	ldr	r0, [fp, #-4]
     b44:	mov	sp, fp
     b48:	pop	{fp, pc}
     b4c:	.word	0xfffffed4

00000b50 <swap8>:
     b50:	sub	sp, sp, #8
     b54:	str	r0, [sp, #4]
     b58:	ldr	r0, [sp, #4]
     b5c:	str	r0, [sp]
     b60:	ldr	r0, [sp]
     b64:	ldrb	r0, [r0]
     b68:	ldr	r1, [sp]
     b6c:	ldrb	r1, [r1, #7]
     b70:	eor	r0, r0, r1
     b74:	ldr	r1, [sp]
     b78:	strb	r0, [r1]
     b7c:	ldr	r0, [sp]
     b80:	ldrb	r0, [r0]
     b84:	ldr	r1, [sp]
     b88:	ldrb	r1, [r1, #7]
     b8c:	eor	r0, r0, r1
     b90:	ldr	r1, [sp]
     b94:	strb	r0, [r1, #7]
     b98:	ldr	r0, [sp]
     b9c:	ldrb	r0, [r0]
     ba0:	ldr	r1, [sp]
     ba4:	ldrb	r1, [r1, #7]
     ba8:	eor	r0, r0, r1
     bac:	ldr	r1, [sp]
     bb0:	strb	r0, [r1]
     bb4:	ldr	r0, [sp]
     bb8:	ldrb	r0, [r0, #1]
     bbc:	ldr	r1, [sp]
     bc0:	ldrb	r1, [r1, #6]
     bc4:	eor	r0, r0, r1
     bc8:	ldr	r1, [sp]
     bcc:	strb	r0, [r1, #1]
     bd0:	ldr	r0, [sp]
     bd4:	ldrb	r0, [r0, #1]
     bd8:	ldr	r1, [sp]
     bdc:	ldrb	r1, [r1, #6]
     be0:	eor	r0, r0, r1
     be4:	ldr	r1, [sp]
     be8:	strb	r0, [r1, #6]
     bec:	ldr	r0, [sp]
     bf0:	ldrb	r0, [r0, #1]
     bf4:	ldr	r1, [sp]
     bf8:	ldrb	r1, [r1, #6]
     bfc:	eor	r0, r0, r1
     c00:	ldr	r1, [sp]
     c04:	strb	r0, [r1, #1]
     c08:	ldr	r0, [sp]
     c0c:	ldrb	r0, [r0, #2]
     c10:	ldr	r1, [sp]
     c14:	ldrb	r1, [r1, #5]
     c18:	eor	r0, r0, r1
     c1c:	ldr	r1, [sp]
     c20:	strb	r0, [r1, #2]
     c24:	ldr	r0, [sp]
     c28:	ldrb	r0, [r0, #2]
     c2c:	ldr	r1, [sp]
     c30:	ldrb	r1, [r1, #5]
     c34:	eor	r0, r0, r1
     c38:	ldr	r1, [sp]
     c3c:	strb	r0, [r1, #5]
     c40:	ldr	r0, [sp]
     c44:	ldrb	r0, [r0, #2]
     c48:	ldr	r1, [sp]
     c4c:	ldrb	r1, [r1, #5]
     c50:	eor	r0, r0, r1
     c54:	ldr	r1, [sp]
     c58:	strb	r0, [r1, #2]
     c5c:	ldr	r0, [sp]
     c60:	ldrb	r0, [r0, #3]
     c64:	ldr	r1, [sp]
     c68:	ldrb	r1, [r1, #4]
     c6c:	eor	r0, r0, r1
     c70:	ldr	r1, [sp]
     c74:	strb	r0, [r1, #3]
     c78:	ldr	r0, [sp]
     c7c:	ldrb	r0, [r0, #3]
     c80:	ldr	r1, [sp]
     c84:	ldrb	r1, [r1, #4]
     c88:	eor	r0, r0, r1
     c8c:	ldr	r1, [sp]
     c90:	strb	r0, [r1, #4]
     c94:	ldr	r0, [sp]
     c98:	ldrb	r0, [r0, #3]
     c9c:	ldr	r1, [sp]
     ca0:	ldrb	r1, [r1, #4]
     ca4:	eor	r0, r0, r1
     ca8:	ldr	r1, [sp]
     cac:	strb	r0, [r1, #3]
     cb0:	add	sp, sp, #8
     cb4:	bx	lr

00000cb8 <read_GDR>:
     cb8:	push	{fp, lr}
     cbc:	mov	fp, sp
     cc0:	sub	sp, sp, #136	; 0x88
     cc4:	str	r0, [fp, #-8]
     cc8:	str	r3, [fp, #-12]
     ccc:	str	r2, [fp, #-16]
     cd0:	ldr	r0, [fp, #-8]
     cd4:	ldr	r0, [r0, #52]	; 0x34
     cd8:	ldr	r1, [fp, #-16]
     cdc:	ldr	r2, [fp, #-12]
     ce0:	adds	r1, r1, #8
     ce4:	adc	r3, r2, #0
     ce8:	sub	r2, fp, #20
     cec:	mov	ip, sp
     cf0:	str	r2, [ip, #8]
     cf4:	mov	r2, #0
     cf8:	str	r2, [ip, #4]
     cfc:	mov	r2, #4
     d00:	str	r2, [ip]
     d04:	mov	r2, r1
     d08:	bl	3e4 <read_bytes>
     d0c:	cmp	r0, #0
     d10:	bge	d20 <read_GDR+0x68>
     d14:	mvn	r0, #0
     d18:	str	r0, [fp, #-4]
     d1c:	b	116c <read_GDR+0x4b4>
     d20:	sub	r0, fp, #20
     d24:	bl	638 <swap4>
     d28:	ldr	r0, [fp, #-20]	; 0xffffffec
     d2c:	cmp	r0, #2
     d30:	beq	d54 <read_GDR+0x9c>
     d34:	ldr	r0, [pc, #1084]	; 1178 <read_GDR+0x4c0>
     d38:	ldr	r2, [fp, #-20]	; 0xffffffec
     d3c:	movw	r1, #0
     d40:	movt	r1, #0
     d44:	bl	0 <coda_set_error>
     d48:	mvn	r0, #0
     d4c:	str	r0, [fp, #-4]
     d50:	b	116c <read_GDR+0x4b4>
     d54:	ldr	r0, [fp, #-8]
     d58:	ldr	r0, [r0, #52]	; 0x34
     d5c:	ldr	r1, [fp, #-16]
     d60:	ldr	r2, [fp, #-12]
     d64:	adds	r1, r1, #12
     d68:	adc	r3, r2, #0
     d6c:	sub	r2, fp, #32
     d70:	mov	ip, sp
     d74:	str	r2, [ip, #8]
     d78:	mov	r2, #0
     d7c:	str	r2, [ip, #4]
     d80:	mov	r2, #8
     d84:	str	r2, [ip]
     d88:	mov	r2, r1
     d8c:	bl	3e4 <read_bytes>
     d90:	cmp	r0, #0
     d94:	bge	da4 <read_GDR+0xec>
     d98:	mvn	r0, #0
     d9c:	str	r0, [fp, #-4]
     da0:	b	116c <read_GDR+0x4b4>
     da4:	ldr	r0, [fp, #-8]
     da8:	ldr	r0, [r0, #52]	; 0x34
     dac:	ldr	r1, [fp, #-16]
     db0:	ldr	r2, [fp, #-12]
     db4:	adds	r1, r1, #20
     db8:	adc	r3, r2, #0
     dbc:	sub	r2, fp, #40	; 0x28
     dc0:	mov	ip, sp
     dc4:	str	r2, [ip, #8]
     dc8:	mov	r2, #0
     dcc:	str	r2, [ip, #4]
     dd0:	mov	r2, #8
     dd4:	str	r2, [ip]
     dd8:	mov	r2, r1
     ddc:	bl	3e4 <read_bytes>
     de0:	cmp	r0, #0
     de4:	bge	df4 <read_GDR+0x13c>
     de8:	mvn	r0, #0
     dec:	str	r0, [fp, #-4]
     df0:	b	116c <read_GDR+0x4b4>
     df4:	ldr	r0, [fp, #-8]
     df8:	ldr	r0, [r0, #52]	; 0x34
     dfc:	ldr	r1, [fp, #-16]
     e00:	ldr	r2, [fp, #-12]
     e04:	adds	r1, r1, #28
     e08:	adc	r3, r2, #0
     e0c:	sub	r2, fp, #48	; 0x30
     e10:	mov	ip, sp
     e14:	str	r2, [ip, #8]
     e18:	mov	r2, #0
     e1c:	str	r2, [ip, #4]
     e20:	mov	r2, #8
     e24:	str	r2, [ip]
     e28:	mov	r2, r1
     e2c:	bl	3e4 <read_bytes>
     e30:	cmp	r0, #0
     e34:	bge	e44 <read_GDR+0x18c>
     e38:	mvn	r0, #0
     e3c:	str	r0, [fp, #-4]
     e40:	b	116c <read_GDR+0x4b4>
     e44:	ldr	r0, [fp, #-8]
     e48:	ldr	r0, [r0, #52]	; 0x34
     e4c:	ldr	r1, [fp, #-16]
     e50:	ldr	r2, [fp, #-12]
     e54:	adds	r1, r1, #36	; 0x24
     e58:	adc	r3, r2, #0
     e5c:	sub	r2, fp, #56	; 0x38
     e60:	mov	ip, sp
     e64:	str	r2, [ip, #8]
     e68:	mov	r2, #0
     e6c:	str	r2, [ip, #4]
     e70:	mov	r2, #8
     e74:	str	r2, [ip]
     e78:	mov	r2, r1
     e7c:	bl	3e4 <read_bytes>
     e80:	cmp	r0, #0
     e84:	bge	e94 <read_GDR+0x1dc>
     e88:	mvn	r0, #0
     e8c:	str	r0, [fp, #-4]
     e90:	b	116c <read_GDR+0x4b4>
     e94:	ldr	r0, [fp, #-8]
     e98:	ldr	r0, [r0, #52]	; 0x34
     e9c:	ldr	r1, [fp, #-16]
     ea0:	ldr	r2, [fp, #-12]
     ea4:	adds	r1, r1, #44	; 0x2c
     ea8:	adc	r3, r2, #0
     eac:	sub	r2, fp, #60	; 0x3c
     eb0:	mov	ip, sp
     eb4:	str	r2, [ip, #8]
     eb8:	mov	r2, #0
     ebc:	str	r2, [ip, #4]
     ec0:	mov	r2, #4
     ec4:	str	r2, [ip]
     ec8:	mov	r2, r1
     ecc:	bl	3e4 <read_bytes>
     ed0:	cmp	r0, #0
     ed4:	bge	ee4 <read_GDR+0x22c>
     ed8:	mvn	r0, #0
     edc:	str	r0, [fp, #-4]
     ee0:	b	116c <read_GDR+0x4b4>
     ee4:	ldr	r0, [fp, #-8]
     ee8:	ldr	r0, [r0, #52]	; 0x34
     eec:	ldr	r1, [fp, #-16]
     ef0:	ldr	r2, [fp, #-12]
     ef4:	adds	r1, r1, #48	; 0x30
     ef8:	adc	r3, r2, #0
     efc:	sub	r2, fp, #64	; 0x40
     f00:	mov	ip, sp
     f04:	str	r2, [ip, #8]
     f08:	mov	r2, #0
     f0c:	str	r2, [ip, #4]
     f10:	mov	r2, #4
     f14:	str	r2, [ip]
     f18:	mov	r2, r1
     f1c:	bl	3e4 <read_bytes>
     f20:	cmp	r0, #0
     f24:	bge	f34 <read_GDR+0x27c>
     f28:	mvn	r0, #0
     f2c:	str	r0, [fp, #-4]
     f30:	b	116c <read_GDR+0x4b4>
     f34:	ldr	r0, [fp, #-8]
     f38:	ldr	r0, [r0, #52]	; 0x34
     f3c:	ldr	r1, [fp, #-16]
     f40:	ldr	r2, [fp, #-12]
     f44:	adds	r1, r1, #56	; 0x38
     f48:	adc	r3, r2, #0
     f4c:	ldr	r2, [fp, #-8]
     f50:	add	r2, r2, #80	; 0x50
     f54:	mov	ip, sp
     f58:	str	r2, [ip, #8]
     f5c:	mov	r2, #0
     f60:	str	r2, [ip, #4]
     f64:	mov	r2, #4
     f68:	str	r2, [ip]
     f6c:	mov	r2, r1
     f70:	bl	3e4 <read_bytes>
     f74:	cmp	r0, #0
     f78:	bge	f88 <read_GDR+0x2d0>
     f7c:	mvn	r0, #0
     f80:	str	r0, [fp, #-4]
     f84:	b	116c <read_GDR+0x4b4>
     f88:	ldr	r0, [fp, #-8]
     f8c:	ldr	r0, [r0, #52]	; 0x34
     f90:	ldr	r1, [fp, #-16]
     f94:	ldr	r2, [fp, #-12]
     f98:	adds	r1, r1, #60	; 0x3c
     f9c:	adc	r3, r2, #0
     fa0:	add	r2, sp, #68	; 0x44
     fa4:	mov	ip, sp
     fa8:	str	r2, [ip, #8]
     fac:	mov	r2, #0
     fb0:	str	r2, [ip, #4]
     fb4:	mov	r2, #4
     fb8:	str	r2, [ip]
     fbc:	mov	r2, r1
     fc0:	bl	3e4 <read_bytes>
     fc4:	cmp	r0, #0
     fc8:	bge	fd8 <read_GDR+0x320>
     fcc:	mvn	r0, #0
     fd0:	str	r0, [fp, #-4]
     fd4:	b	116c <read_GDR+0x4b4>
     fd8:	sub	r0, fp, #32
     fdc:	bl	b50 <swap8>
     fe0:	sub	r0, fp, #40	; 0x28
     fe4:	bl	b50 <swap8>
     fe8:	sub	r0, fp, #48	; 0x30
     fec:	bl	b50 <swap8>
     ff0:	sub	r0, fp, #56	; 0x38
     ff4:	bl	b50 <swap8>
     ff8:	sub	r0, fp, #60	; 0x3c
     ffc:	bl	638 <swap4>
    1000:	sub	r0, fp, #64	; 0x40
    1004:	bl	638 <swap4>
    1008:	ldr	r0, [fp, #-8]
    100c:	add	r0, r0, #80	; 0x50
    1010:	bl	638 <swap4>
    1014:	add	r0, sp, #68	; 0x44
    1018:	bl	638 <swap4>
    101c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1020:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1024:	ldr	r2, [fp, #-8]
    1028:	ldr	r3, [r2, #8]
    102c:	ldr	r2, [r2, #12]
    1030:	eor	r1, r1, r2
    1034:	eor	r0, r0, r3
    1038:	orr	r0, r0, r1
    103c:	cmp	r0, #0
    1040:	beq	10a8 <read_GDR+0x3f0>
    1044:	b	1048 <read_GDR+0x390>
    1048:	add	r2, sp, #26
    104c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1050:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1054:	add	r3, sp, #47	; 0x2f
    1058:	str	r2, [sp, #20]
    105c:	mov	r2, r3
    1060:	bl	0 <coda_str64>
    1064:	ldr	r0, [fp, #-8]
    1068:	ldr	r1, [r0, #8]
    106c:	ldr	r0, [r0, #12]
    1070:	str	r0, [sp, #16]
    1074:	mov	r0, r1
    1078:	ldr	r1, [sp, #16]
    107c:	ldr	r2, [sp, #20]
    1080:	bl	0 <coda_str64>
    1084:	ldr	r0, [pc, #236]	; 1178 <read_GDR+0x4c0>
    1088:	add	r3, sp, #26
    108c:	add	r2, sp, #47	; 0x2f
    1090:	movw	r1, #0
    1094:	movt	r1, #0
    1098:	bl	0 <coda_set_error>
    109c:	mvn	r0, #0
    10a0:	str	r0, [fp, #-4]
    10a4:	b	116c <read_GDR+0x4b4>
    10a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    10ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
    10b0:	orr	r0, r0, r1
    10b4:	cmp	r0, #0
    10b8:	beq	10f4 <read_GDR+0x43c>
    10bc:	b	10c0 <read_GDR+0x408>
    10c0:	ldr	r0, [fp, #-8]
    10c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    10c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10cc:	mov	r1, sp
    10d0:	mov	ip, #0
    10d4:	str	ip, [r1]
    10d8:	bl	117c <read_VDR>
    10dc:	cmp	r0, #0
    10e0:	beq	10f0 <read_GDR+0x438>
    10e4:	mvn	r0, #0
    10e8:	str	r0, [fp, #-4]
    10ec:	b	116c <read_GDR+0x4b4>
    10f0:	b	10f4 <read_GDR+0x43c>
    10f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    10f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    10fc:	orr	r0, r0, r1
    1100:	cmp	r0, #0
    1104:	beq	1140 <read_GDR+0x488>
    1108:	b	110c <read_GDR+0x454>
    110c:	ldr	r0, [fp, #-8]
    1110:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1114:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1118:	mov	r1, sp
    111c:	mov	ip, #1
    1120:	str	ip, [r1]
    1124:	bl	117c <read_VDR>
    1128:	cmp	r0, #0
    112c:	beq	113c <read_GDR+0x484>
    1130:	mvn	r0, #0
    1134:	str	r0, [fp, #-4]
    1138:	b	116c <read_GDR+0x4b4>
    113c:	b	1140 <read_GDR+0x488>
    1140:	ldr	r0, [fp, #-8]
    1144:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1148:	ldr	r3, [fp, #-44]	; 0xffffffd4
    114c:	bl	1bec <read_ADR>
    1150:	cmp	r0, #0
    1154:	beq	1164 <read_GDR+0x4ac>
    1158:	mvn	r0, #0
    115c:	str	r0, [fp, #-4]
    1160:	b	116c <read_GDR+0x4b4>
    1164:	movw	r0, #0
    1168:	str	r0, [fp, #-4]
    116c:	ldr	r0, [fp, #-4]
    1170:	mov	sp, fp
    1174:	pop	{fp, pc}
    1178:	.word	0xfffffed4

0000117c <read_VDR>:
    117c:	push	{r4, r5, r6, sl, fp, lr}
    1180:	add	fp, sp, #16
    1184:	sub	sp, sp, #480	; 0x1e0
    1188:	ldr	r1, [fp, #8]
    118c:	str	r0, [fp, #-24]	; 0xffffffe8
    1190:	str	r3, [fp, #-28]	; 0xffffffe4
    1194:	str	r2, [fp, #-32]	; 0xffffffe0
    1198:	ldr	r0, [fp, #-32]	; 0xffffffe0
    119c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    11a0:	orr	r0, r0, r2
    11a4:	cmp	r0, #0
    11a8:	bne	11bc <read_VDR+0x40>
    11ac:	b	11b0 <read_VDR+0x34>
    11b0:	movw	r0, #0
    11b4:	str	r0, [fp, #-20]	; 0xffffffec
    11b8:	b	1bdc <read_VDR+0xa60>
    11bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    11c0:	ldr	r0, [r0, #52]	; 0x34
    11c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    11c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    11cc:	adds	r1, r1, #8
    11d0:	adc	r3, r2, #0
    11d4:	sub	r2, fp, #44	; 0x2c
    11d8:	mov	ip, sp
    11dc:	str	r2, [ip, #8]
    11e0:	mov	r2, #0
    11e4:	str	r2, [ip, #4]
    11e8:	mov	r2, #4
    11ec:	str	r2, [ip]
    11f0:	mov	r2, r1
    11f4:	bl	3e4 <read_bytes>
    11f8:	cmp	r0, #0
    11fc:	bge	120c <read_VDR+0x90>
    1200:	mvn	r0, #0
    1204:	str	r0, [fp, #-20]	; 0xffffffec
    1208:	b	1bdc <read_VDR+0xa60>
    120c:	sub	r0, fp, #44	; 0x2c
    1210:	bl	638 <swap4>
    1214:	ldr	r0, [fp, #8]
    1218:	cmp	r0, #0
    121c:	beq	1250 <read_VDR+0xd4>
    1220:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1224:	cmp	r0, #8
    1228:	beq	124c <read_VDR+0xd0>
    122c:	ldr	r0, [pc, #2484]	; 1be8 <read_VDR+0xa6c>
    1230:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1234:	movw	r1, #0
    1238:	movt	r1, #0
    123c:	bl	0 <coda_set_error>
    1240:	mvn	r0, #0
    1244:	str	r0, [fp, #-20]	; 0xffffffec
    1248:	b	1bdc <read_VDR+0xa60>
    124c:	b	1280 <read_VDR+0x104>
    1250:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1254:	cmp	r0, #3
    1258:	beq	127c <read_VDR+0x100>
    125c:	ldr	r0, [pc, #2436]	; 1be8 <read_VDR+0xa6c>
    1260:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1264:	movw	r1, #0
    1268:	movt	r1, #0
    126c:	bl	0 <coda_set_error>
    1270:	mvn	r0, #0
    1274:	str	r0, [fp, #-20]	; 0xffffffec
    1278:	b	1bdc <read_VDR+0xa60>
    127c:	b	1280 <read_VDR+0x104>
    1280:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1284:	ldr	r0, [r0, #52]	; 0x34
    1288:	ldr	r1, [fp, #-32]	; 0xffffffe0
    128c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1290:	adds	r1, r1, #12
    1294:	adc	r3, r2, #0
    1298:	sub	r2, fp, #56	; 0x38
    129c:	mov	ip, sp
    12a0:	str	r2, [ip, #8]
    12a4:	mov	r2, #0
    12a8:	str	r2, [ip, #4]
    12ac:	mov	r2, #8
    12b0:	str	r2, [ip]
    12b4:	mov	r2, r1
    12b8:	bl	3e4 <read_bytes>
    12bc:	cmp	r0, #0
    12c0:	bge	12d0 <read_VDR+0x154>
    12c4:	mvn	r0, #0
    12c8:	str	r0, [fp, #-20]	; 0xffffffec
    12cc:	b	1bdc <read_VDR+0xa60>
    12d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    12d4:	ldr	r0, [r0, #52]	; 0x34
    12d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    12dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    12e0:	adds	r1, r1, #20
    12e4:	adc	r3, r2, #0
    12e8:	sub	r2, fp, #60	; 0x3c
    12ec:	mov	ip, sp
    12f0:	str	r2, [ip, #8]
    12f4:	mov	r2, #0
    12f8:	str	r2, [ip, #4]
    12fc:	mov	r2, #4
    1300:	str	r2, [ip]
    1304:	mov	r2, r1
    1308:	bl	3e4 <read_bytes>
    130c:	cmp	r0, #0
    1310:	bge	1320 <read_VDR+0x1a4>
    1314:	mvn	r0, #0
    1318:	str	r0, [fp, #-20]	; 0xffffffec
    131c:	b	1bdc <read_VDR+0xa60>
    1320:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1324:	ldr	r0, [r0, #52]	; 0x34
    1328:	ldr	r1, [fp, #-32]	; 0xffffffe0
    132c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1330:	adds	r1, r1, #24
    1334:	adc	r3, r2, #0
    1338:	sub	r2, fp, #64	; 0x40
    133c:	mov	ip, sp
    1340:	str	r2, [ip, #8]
    1344:	mov	r2, #0
    1348:	str	r2, [ip, #4]
    134c:	mov	r2, #4
    1350:	str	r2, [ip]
    1354:	mov	r2, r1
    1358:	bl	3e4 <read_bytes>
    135c:	cmp	r0, #0
    1360:	bge	1370 <read_VDR+0x1f4>
    1364:	mvn	r0, #0
    1368:	str	r0, [fp, #-20]	; 0xffffffec
    136c:	b	1bdc <read_VDR+0xa60>
    1370:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1374:	ldr	r0, [r0, #52]	; 0x34
    1378:	ldr	r1, [fp, #-32]	; 0xffffffe0
    137c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1380:	adds	r1, r1, #28
    1384:	adc	r3, r2, #0
    1388:	sub	r2, fp, #72	; 0x48
    138c:	mov	ip, sp
    1390:	str	r2, [ip, #8]
    1394:	mov	r2, #0
    1398:	str	r2, [ip, #4]
    139c:	mov	r2, #8
    13a0:	str	r2, [ip]
    13a4:	mov	r2, r1
    13a8:	bl	3e4 <read_bytes>
    13ac:	cmp	r0, #0
    13b0:	bge	13c0 <read_VDR+0x244>
    13b4:	mvn	r0, #0
    13b8:	str	r0, [fp, #-20]	; 0xffffffec
    13bc:	b	1bdc <read_VDR+0xa60>
    13c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13c4:	ldr	r0, [r0, #52]	; 0x34
    13c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    13cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    13d0:	adds	r1, r1, #36	; 0x24
    13d4:	adc	r3, r2, #0
    13d8:	sub	r2, fp, #80	; 0x50
    13dc:	mov	ip, sp
    13e0:	str	r2, [ip, #8]
    13e4:	mov	r2, #0
    13e8:	str	r2, [ip, #4]
    13ec:	mov	r2, #8
    13f0:	str	r2, [ip]
    13f4:	mov	r2, r1
    13f8:	bl	3e4 <read_bytes>
    13fc:	cmp	r0, #0
    1400:	bge	1410 <read_VDR+0x294>
    1404:	mvn	r0, #0
    1408:	str	r0, [fp, #-20]	; 0xffffffec
    140c:	b	1bdc <read_VDR+0xa60>
    1410:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1414:	ldr	r0, [r0, #52]	; 0x34
    1418:	ldr	r1, [fp, #-32]	; 0xffffffe0
    141c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1420:	adds	r1, r1, #44	; 0x2c
    1424:	adc	r3, r2, #0
    1428:	sub	r2, fp, #84	; 0x54
    142c:	mov	ip, sp
    1430:	str	r2, [ip, #8]
    1434:	mov	r2, #0
    1438:	str	r2, [ip, #4]
    143c:	mov	r2, #4
    1440:	str	r2, [ip]
    1444:	mov	r2, r1
    1448:	bl	3e4 <read_bytes>
    144c:	cmp	r0, #0
    1450:	bge	1460 <read_VDR+0x2e4>
    1454:	mvn	r0, #0
    1458:	str	r0, [fp, #-20]	; 0xffffffec
    145c:	b	1bdc <read_VDR+0xa60>
    1460:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1464:	ldr	r0, [r0, #52]	; 0x34
    1468:	ldr	r1, [fp, #-32]	; 0xffffffe0
    146c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1470:	adds	r1, r1, #48	; 0x30
    1474:	adc	r3, r2, #0
    1478:	sub	r2, fp, #88	; 0x58
    147c:	mov	ip, sp
    1480:	str	r2, [ip, #8]
    1484:	mov	r2, #0
    1488:	str	r2, [ip, #4]
    148c:	mov	r2, #4
    1490:	str	r2, [ip]
    1494:	mov	r2, r1
    1498:	bl	3e4 <read_bytes>
    149c:	cmp	r0, #0
    14a0:	bge	14b0 <read_VDR+0x334>
    14a4:	mvn	r0, #0
    14a8:	str	r0, [fp, #-20]	; 0xffffffec
    14ac:	b	1bdc <read_VDR+0xa60>
    14b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    14b4:	ldr	r0, [r0, #52]	; 0x34
    14b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    14bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    14c0:	adds	r1, r1, #64	; 0x40
    14c4:	adc	r3, r2, #0
    14c8:	sub	r2, fp, #92	; 0x5c
    14cc:	mov	ip, sp
    14d0:	str	r2, [ip, #8]
    14d4:	mov	r2, #0
    14d8:	str	r2, [ip, #4]
    14dc:	mov	r2, #4
    14e0:	str	r2, [ip]
    14e4:	mov	r2, r1
    14e8:	bl	3e4 <read_bytes>
    14ec:	cmp	r0, #0
    14f0:	bge	1500 <read_VDR+0x384>
    14f4:	mvn	r0, #0
    14f8:	str	r0, [fp, #-20]	; 0xffffffec
    14fc:	b	1bdc <read_VDR+0xa60>
    1500:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1504:	ldr	r0, [r0, #52]	; 0x34
    1508:	ldr	r1, [fp, #-32]	; 0xffffffe0
    150c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1510:	adds	r1, r1, #68	; 0x44
    1514:	adc	r3, r2, #0
    1518:	sub	r2, fp, #96	; 0x60
    151c:	mov	ip, sp
    1520:	str	r2, [ip, #8]
    1524:	mov	r2, #0
    1528:	str	r2, [ip, #4]
    152c:	mov	r2, #4
    1530:	str	r2, [ip]
    1534:	mov	r2, r1
    1538:	bl	3e4 <read_bytes>
    153c:	cmp	r0, #0
    1540:	bge	1550 <read_VDR+0x3d4>
    1544:	mvn	r0, #0
    1548:	str	r0, [fp, #-20]	; 0xffffffec
    154c:	b	1bdc <read_VDR+0xa60>
    1550:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1554:	ldr	r0, [r0, #52]	; 0x34
    1558:	ldr	r1, [fp, #-32]	; 0xffffffe0
    155c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1560:	adds	r1, r1, #72	; 0x48
    1564:	adc	r3, r2, #0
    1568:	sub	r2, fp, #104	; 0x68
    156c:	mov	ip, sp
    1570:	str	r2, [ip, #8]
    1574:	mov	r2, #0
    1578:	str	r2, [ip, #4]
    157c:	mov	r2, #8
    1580:	str	r2, [ip]
    1584:	mov	r2, r1
    1588:	bl	3e4 <read_bytes>
    158c:	cmp	r0, #0
    1590:	bge	15a0 <read_VDR+0x424>
    1594:	mvn	r0, #0
    1598:	str	r0, [fp, #-20]	; 0xffffffec
    159c:	b	1bdc <read_VDR+0xa60>
    15a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    15a4:	ldr	r0, [r0, #52]	; 0x34
    15a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    15ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
    15b0:	adds	r1, r1, #80	; 0x50
    15b4:	adc	r3, r2, #0
    15b8:	sub	r2, fp, #108	; 0x6c
    15bc:	mov	ip, sp
    15c0:	str	r2, [ip, #8]
    15c4:	mov	r2, #0
    15c8:	str	r2, [ip, #4]
    15cc:	mov	r2, #4
    15d0:	str	r2, [ip]
    15d4:	mov	r2, r1
    15d8:	bl	3e4 <read_bytes>
    15dc:	cmp	r0, #0
    15e0:	bge	15f0 <read_VDR+0x474>
    15e4:	mvn	r0, #0
    15e8:	str	r0, [fp, #-20]	; 0xffffffec
    15ec:	b	1bdc <read_VDR+0xa60>
    15f0:	add	r0, sp, #131	; 0x83
    15f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    15f8:	ldr	r1, [r1, #52]	; 0x34
    15fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1600:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1604:	adds	r2, r2, #84	; 0x54
    1608:	adc	r3, r3, #0
    160c:	mov	ip, sp
    1610:	str	r0, [ip, #8]
    1614:	mov	r0, #0
    1618:	str	r0, [ip, #4]
    161c:	mov	r0, #256	; 0x100
    1620:	str	r0, [ip]
    1624:	mov	r0, r1
    1628:	bl	3e4 <read_bytes>
    162c:	cmp	r0, #0
    1630:	bge	1640 <read_VDR+0x4c4>
    1634:	mvn	r0, #0
    1638:	str	r0, [fp, #-20]	; 0xffffffec
    163c:	b	1bdc <read_VDR+0xa60>
    1640:	add	r0, sp, #131	; 0x83
    1644:	movw	r1, #0
    1648:	strb	r1, [sp, #387]	; 0x183
    164c:	bl	210c <rtrim>
    1650:	sub	r0, fp, #56	; 0x38
    1654:	bl	b50 <swap8>
    1658:	sub	r0, fp, #60	; 0x3c
    165c:	bl	638 <swap4>
    1660:	sub	r0, fp, #64	; 0x40
    1664:	bl	638 <swap4>
    1668:	sub	r0, fp, #72	; 0x48
    166c:	bl	b50 <swap8>
    1670:	sub	r0, fp, #80	; 0x50
    1674:	bl	b50 <swap8>
    1678:	sub	r0, fp, #84	; 0x54
    167c:	bl	638 <swap4>
    1680:	sub	r0, fp, #88	; 0x58
    1684:	bl	638 <swap4>
    1688:	sub	r0, fp, #92	; 0x5c
    168c:	bl	638 <swap4>
    1690:	sub	r0, fp, #96	; 0x60
    1694:	bl	638 <swap4>
    1698:	sub	r0, fp, #104	; 0x68
    169c:	bl	b50 <swap8>
    16a0:	sub	r0, fp, #108	; 0x6c
    16a4:	bl	638 <swap4>
    16a8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    16ac:	cmp	r0, #32
    16b0:	bne	16d0 <read_VDR+0x554>
    16b4:	mvn	r0, #199	; 0xc7
    16b8:	movw	r1, #0
    16bc:	movt	r1, #0
    16c0:	bl	0 <coda_set_error>
    16c4:	mvn	r0, #0
    16c8:	str	r0, [fp, #-20]	; 0xffffffec
    16cc:	b	1bdc <read_VDR+0xa60>
    16d0:	ldr	r0, [fp, #8]
    16d4:	cmp	r0, #0
    16d8:	beq	1878 <read_VDR+0x6fc>
    16dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    16e0:	ldr	r0, [r0, #52]	; 0x34
    16e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    16e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    16ec:	adds	r1, r1, #340	; 0x154
    16f0:	adc	r3, r2, #0
    16f4:	add	r2, sp, #124	; 0x7c
    16f8:	mov	ip, sp
    16fc:	str	r2, [ip, #8]
    1700:	mov	r2, #0
    1704:	str	r2, [ip, #4]
    1708:	mov	r2, #4
    170c:	str	r2, [ip]
    1710:	mov	r2, r1
    1714:	bl	3e4 <read_bytes>
    1718:	cmp	r0, #0
    171c:	bge	172c <read_VDR+0x5b0>
    1720:	mvn	r0, #0
    1724:	str	r0, [fp, #-20]	; 0xffffffec
    1728:	b	1bdc <read_VDR+0xa60>
    172c:	add	r0, sp, #124	; 0x7c
    1730:	bl	638 <swap4>
    1734:	ldr	r0, [sp, #124]	; 0x7c
    1738:	cmp	r0, #0
    173c:	bge	1764 <read_VDR+0x5e8>
    1740:	ldr	r0, [pc, #1184]	; 1be8 <read_VDR+0xa6c>
    1744:	add	r2, sp, #131	; 0x83
    1748:	ldr	r3, [sp, #124]	; 0x7c
    174c:	movw	r1, #0
    1750:	movt	r1, #0
    1754:	bl	0 <coda_set_error>
    1758:	mvn	r0, #0
    175c:	str	r0, [fp, #-20]	; 0xffffffec
    1760:	b	1bdc <read_VDR+0xa60>
    1764:	ldr	r0, [sp, #124]	; 0x7c
    1768:	cmp	r0, #8
    176c:	ble	1794 <read_VDR+0x618>
    1770:	ldr	r0, [pc, #1136]	; 1be8 <read_VDR+0xa6c>
    1774:	add	r2, sp, #131	; 0x83
    1778:	ldr	r3, [sp, #124]	; 0x7c
    177c:	movw	r1, #0
    1780:	movt	r1, #0
    1784:	bl	0 <coda_set_error>
    1788:	mvn	r0, #0
    178c:	str	r0, [fp, #-20]	; 0xffffffec
    1790:	b	1bdc <read_VDR+0xa60>
    1794:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1798:	ldr	r1, [fp, #-28]	; 0xffffffe4
    179c:	adds	r0, r0, #344	; 0x158
    17a0:	adc	r1, r1, #0
    17a4:	str	r0, [fp, #-32]	; 0xffffffe0
    17a8:	str	r1, [fp, #-28]	; 0xffffffe4
    17ac:	ldr	r0, [sp, #124]	; 0x7c
    17b0:	cmp	r0, #0
    17b4:	ble	1874 <read_VDR+0x6f8>
    17b8:	movw	r0, #0
    17bc:	str	r0, [sp, #48]	; 0x30
    17c0:	ldr	r0, [sp, #48]	; 0x30
    17c4:	ldr	r1, [sp, #124]	; 0x7c
    17c8:	cmp	r0, r1
    17cc:	bge	1854 <read_VDR+0x6d8>
    17d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    17d4:	ldr	r0, [r0, #52]	; 0x34
    17d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    17dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    17e0:	ldr	r3, [sp, #48]	; 0x30
    17e4:	adds	r1, r1, r3, lsl #2
    17e8:	lsl	ip, r3, #2
    17ec:	adc	r2, r2, ip, asr #31
    17f0:	add	ip, sp, #92	; 0x5c
    17f4:	add	r3, ip, r3, lsl #2
    17f8:	mov	ip, sp
    17fc:	str	r3, [ip, #8]
    1800:	mov	r3, #0
    1804:	str	r3, [ip, #4]
    1808:	mov	r3, #4
    180c:	str	r3, [ip]
    1810:	str	r2, [sp, #44]	; 0x2c
    1814:	mov	r2, r1
    1818:	ldr	r3, [sp, #44]	; 0x2c
    181c:	bl	3e4 <read_bytes>
    1820:	cmp	r0, #0
    1824:	bge	1834 <read_VDR+0x6b8>
    1828:	mvn	r0, #0
    182c:	str	r0, [fp, #-20]	; 0xffffffec
    1830:	b	1bdc <read_VDR+0xa60>
    1834:	ldr	r0, [sp, #48]	; 0x30
    1838:	add	r1, sp, #92	; 0x5c
    183c:	add	r0, r1, r0, lsl #2
    1840:	bl	638 <swap4>
    1844:	ldr	r0, [sp, #48]	; 0x30
    1848:	add	r0, r0, #1
    184c:	str	r0, [sp, #48]	; 0x30
    1850:	b	17c0 <read_VDR+0x644>
    1854:	ldr	r0, [sp, #124]	; 0x7c
    1858:	lsl	r1, r0, #2
    185c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1860:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1864:	adds	r0, r2, r0, lsl #2
    1868:	adc	r1, r3, r1, asr #31
    186c:	str	r0, [fp, #-32]	; 0xffffffe0
    1870:	str	r1, [fp, #-28]	; 0xffffffe4
    1874:	b	1884 <read_VDR+0x708>
    1878:	ldr	r0, [fp, #-24]	; 0xffffffe8
    187c:	ldr	r0, [r0, #80]	; 0x50
    1880:	str	r0, [sp, #124]	; 0x7c
    1884:	ldr	r0, [sp, #124]	; 0x7c
    1888:	cmp	r0, #0
    188c:	ble	194c <read_VDR+0x7d0>
    1890:	movw	r0, #0
    1894:	str	r0, [sp, #48]	; 0x30
    1898:	ldr	r0, [sp, #48]	; 0x30
    189c:	ldr	r1, [sp, #124]	; 0x7c
    18a0:	cmp	r0, r1
    18a4:	bge	192c <read_VDR+0x7b0>
    18a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    18ac:	ldr	r0, [r0, #52]	; 0x34
    18b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    18b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    18b8:	ldr	r3, [sp, #48]	; 0x30
    18bc:	adds	r1, r1, r3, lsl #2
    18c0:	lsl	ip, r3, #2
    18c4:	adc	r2, r2, ip, asr #31
    18c8:	add	ip, sp, #60	; 0x3c
    18cc:	add	r3, ip, r3, lsl #2
    18d0:	mov	ip, sp
    18d4:	str	r3, [ip, #8]
    18d8:	mov	r3, #0
    18dc:	str	r3, [ip, #4]
    18e0:	mov	r3, #4
    18e4:	str	r3, [ip]
    18e8:	str	r2, [sp, #40]	; 0x28
    18ec:	mov	r2, r1
    18f0:	ldr	r3, [sp, #40]	; 0x28
    18f4:	bl	3e4 <read_bytes>
    18f8:	cmp	r0, #0
    18fc:	bge	190c <read_VDR+0x790>
    1900:	mvn	r0, #0
    1904:	str	r0, [fp, #-20]	; 0xffffffec
    1908:	b	1bdc <read_VDR+0xa60>
    190c:	ldr	r0, [sp, #48]	; 0x30
    1910:	add	r1, sp, #60	; 0x3c
    1914:	add	r0, r1, r0, lsl #2
    1918:	bl	638 <swap4>
    191c:	ldr	r0, [sp, #48]	; 0x30
    1920:	add	r0, r0, #1
    1924:	str	r0, [sp, #48]	; 0x30
    1928:	b	1898 <read_VDR+0x71c>
    192c:	ldr	r0, [sp, #124]	; 0x7c
    1930:	lsl	r1, r0, #2
    1934:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1938:	ldr	r3, [fp, #-28]	; 0xffffffe4
    193c:	adds	r0, r2, r0, lsl #2
    1940:	adc	r1, r3, r1, asr #31
    1944:	str	r0, [fp, #-32]	; 0xffffffe0
    1948:	str	r1, [fp, #-28]	; 0xffffffe4
    194c:	ldr	r0, [fp, #-84]	; 0xffffffac
    1950:	and	r0, r0, #1
    1954:	str	r0, [sp, #56]	; 0x38
    1958:	ldr	r0, [fp, #-84]	; 0xffffffac
    195c:	and	r0, r0, #4
    1960:	str	r0, [sp, #52]	; 0x34
    1964:	ldr	r0, [sp, #56]	; 0x38
    1968:	cmp	r0, #0
    196c:	bne	19a4 <read_VDR+0x828>
    1970:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1974:	cmp	r0, #0
    1978:	beq	19a4 <read_VDR+0x828>
    197c:	ldr	r0, [pc, #612]	; 1be8 <read_VDR+0xa6c>
    1980:	add	r2, sp, #131	; 0x83
    1984:	ldr	r1, [fp, #-64]	; 0xffffffc0
    1988:	add	r3, r1, #1
    198c:	movw	r1, #0
    1990:	movt	r1, #0
    1994:	bl	0 <coda_set_error>
    1998:	mvn	r0, #0
    199c:	str	r0, [fp, #-20]	; 0xffffffec
    19a0:	b	1bdc <read_VDR+0xa60>
    19a4:	ldr	r0, [sp, #52]	; 0x34
    19a8:	cmp	r0, #0
    19ac:	beq	19f0 <read_VDR+0x874>
    19b0:	ldr	r0, [fp, #-104]	; 0xffffff98
    19b4:	ldr	r1, [fp, #-100]	; 0xffffff9c
    19b8:	and	r0, r0, r1
    19bc:	cmn	r0, #1
    19c0:	beq	19f0 <read_VDR+0x874>
    19c4:	b	19c8 <read_VDR+0x84c>
    19c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    19cc:	ldr	r2, [fp, #-104]	; 0xffffff98
    19d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
    19d4:	bl	21a0 <read_CPR>
    19d8:	cmp	r0, #0
    19dc:	beq	19ec <read_VDR+0x870>
    19e0:	mvn	r0, #0
    19e4:	str	r0, [fp, #-20]	; 0xffffffec
    19e8:	b	1bdc <read_VDR+0xa60>
    19ec:	b	19f0 <read_VDR+0x874>
    19f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    19f4:	ldr	r0, [r0, #20]
    19f8:	ldr	r0, [r0, #16]
    19fc:	ldr	r1, [fp, #-96]	; 0xffffffa0
    1a00:	cmp	r0, r1
    1a04:	beq	1a34 <read_VDR+0x8b8>
    1a08:	ldr	r0, [pc, #472]	; 1be8 <read_VDR+0xa6c>
    1a0c:	ldr	r2, [fp, #-96]	; 0xffffffa0
    1a10:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1a14:	ldr	r1, [r1, #20]
    1a18:	ldr	r3, [r1, #16]
    1a1c:	movw	r1, #0
    1a20:	movt	r1, #0
    1a24:	bl	0 <coda_set_error>
    1a28:	mvn	r0, #0
    1a2c:	str	r0, [fp, #-20]	; 0xffffffec
    1a30:	b	1bdc <read_VDR+0xa60>
    1a34:	ldr	r0, [fp, #8]
    1a38:	cmp	r0, #0
    1a3c:	beq	1ab0 <read_VDR+0x934>
    1a40:	add	r0, sp, #60	; 0x3c
    1a44:	add	r1, sp, #92	; 0x5c
    1a48:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1a4c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1a50:	ldr	ip, [sp, #56]	; 0x38
    1a54:	ldr	lr, [sp, #124]	; 0x7c
    1a58:	ldr	r4, [fp, #-24]	; 0xffffffe8
    1a5c:	ldr	r4, [r4, #72]	; 0x48
    1a60:	ldr	r5, [fp, #-92]	; 0xffffffa4
    1a64:	ldr	r6, [fp, #-88]	; 0xffffffa8
    1a68:	str	r0, [sp, #36]	; 0x24
    1a6c:	mov	r0, r2
    1a70:	str	r1, [sp, #32]
    1a74:	mov	r1, r3
    1a78:	mov	r2, ip
    1a7c:	mov	r3, lr
    1a80:	ldr	ip, [sp, #32]
    1a84:	str	ip, [sp]
    1a88:	ldr	lr, [sp, #36]	; 0x24
    1a8c:	str	lr, [sp, #4]
    1a90:	str	r4, [sp, #8]
    1a94:	str	r5, [sp, #12]
    1a98:	str	r6, [sp, #16]
    1a9c:	sub	r4, fp, #40	; 0x28
    1aa0:	str	r4, [sp, #20]
    1aa4:	bl	0 <coda_cdf_variable_new>
    1aa8:	str	r0, [fp, #-36]	; 0xffffffdc
    1aac:	b	1b18 <read_VDR+0x99c>
    1ab0:	add	r0, sp, #60	; 0x3c
    1ab4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1ab8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1abc:	ldr	r3, [sp, #56]	; 0x38
    1ac0:	ldr	ip, [sp, #124]	; 0x7c
    1ac4:	ldr	lr, [fp, #-24]	; 0xffffffe8
    1ac8:	add	lr, lr, #84	; 0x54
    1acc:	ldr	r4, [fp, #-24]	; 0xffffffe8
    1ad0:	ldr	r4, [r4, #72]	; 0x48
    1ad4:	ldr	r5, [fp, #-92]	; 0xffffffa4
    1ad8:	ldr	r6, [fp, #-88]	; 0xffffffa8
    1adc:	str	r0, [sp, #28]
    1ae0:	mov	r0, r1
    1ae4:	mov	r1, r2
    1ae8:	mov	r2, r3
    1aec:	mov	r3, ip
    1af0:	str	lr, [sp]
    1af4:	ldr	ip, [sp, #28]
    1af8:	str	ip, [sp, #4]
    1afc:	str	r4, [sp, #8]
    1b00:	str	r5, [sp, #12]
    1b04:	str	r6, [sp, #16]
    1b08:	sub	lr, fp, #40	; 0x28
    1b0c:	str	lr, [sp, #20]
    1b10:	bl	0 <coda_cdf_variable_new>
    1b14:	str	r0, [fp, #-36]	; 0xffffffdc
    1b18:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1b1c:	movw	r1, #0
    1b20:	cmp	r0, r1
    1b24:	bne	1b34 <read_VDR+0x9b8>
    1b28:	mvn	r0, #0
    1b2c:	str	r0, [fp, #-20]	; 0xffffffec
    1b30:	b	1bdc <read_VDR+0xa60>
    1b34:	add	r1, sp, #131	; 0x83
    1b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1b3c:	ldr	r0, [r0, #20]
    1b40:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1b44:	movw	r3, #1
    1b48:	bl	0 <coda_mem_record_add_field>
    1b4c:	cmp	r0, #0
    1b50:	beq	1b68 <read_VDR+0x9ec>
    1b54:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1b58:	bl	0 <coda_cdf_type_delete>
    1b5c:	mvn	r0, #0
    1b60:	str	r0, [fp, #-20]	; 0xffffffec
    1b64:	b	1bdc <read_VDR+0xa60>
    1b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1b6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1b70:	ldr	r2, [fp, #-72]	; 0xffffffb8
    1b74:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1b78:	mov	ip, sp
    1b7c:	mvn	lr, #0
    1b80:	str	lr, [ip, #4]
    1b84:	mov	lr, #0
    1b88:	str	lr, [ip]
    1b8c:	bl	22fc <read_VXR>
    1b90:	cmp	r0, #0
    1b94:	beq	1ba4 <read_VDR+0xa28>
    1b98:	mvn	r0, #0
    1b9c:	str	r0, [fp, #-20]	; 0xffffffec
    1ba0:	b	1bdc <read_VDR+0xa60>
    1ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ba8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1bac:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1bb0:	ldr	r1, [fp, #8]
    1bb4:	mov	ip, sp
    1bb8:	str	r1, [ip]
    1bbc:	bl	117c <read_VDR>
    1bc0:	cmp	r0, #0
    1bc4:	beq	1bd4 <read_VDR+0xa58>
    1bc8:	mvn	r0, #0
    1bcc:	str	r0, [fp, #-20]	; 0xffffffec
    1bd0:	b	1bdc <read_VDR+0xa60>
    1bd4:	movw	r0, #0
    1bd8:	str	r0, [fp, #-20]	; 0xffffffec
    1bdc:	ldr	r0, [fp, #-20]	; 0xffffffec
    1be0:	sub	sp, fp, #16
    1be4:	pop	{r4, r5, r6, sl, fp, pc}
    1be8:	.word	0xfffffed4

00001bec <read_ADR>:
    1bec:	push	{r4, r5, fp, lr}
    1bf0:	add	fp, sp, #8
    1bf4:	sub	sp, sp, #352	; 0x160
    1bf8:	str	r0, [fp, #-16]
    1bfc:	str	r3, [fp, #-20]	; 0xffffffec
    1c00:	str	r2, [fp, #-24]	; 0xffffffe8
    1c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c08:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c0c:	orr	r0, r0, r1
    1c10:	cmp	r0, #0
    1c14:	bne	1c28 <read_ADR+0x3c>
    1c18:	b	1c1c <read_ADR+0x30>
    1c1c:	movw	r0, #0
    1c20:	str	r0, [fp, #-12]
    1c24:	b	20fc <read_ADR+0x510>
    1c28:	ldr	r0, [fp, #-16]
    1c2c:	ldr	r0, [r0, #52]	; 0x34
    1c30:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1c34:	ldr	r2, [fp, #-20]	; 0xffffffec
    1c38:	adds	r1, r1, #8
    1c3c:	adc	r3, r2, #0
    1c40:	sub	r2, fp, #28
    1c44:	mov	ip, sp
    1c48:	str	r2, [ip, #8]
    1c4c:	mov	r2, #0
    1c50:	str	r2, [ip, #4]
    1c54:	mov	r2, #4
    1c58:	str	r2, [ip]
    1c5c:	mov	r2, r1
    1c60:	bl	3e4 <read_bytes>
    1c64:	cmp	r0, #0
    1c68:	bge	1c78 <read_ADR+0x8c>
    1c6c:	mvn	r0, #0
    1c70:	str	r0, [fp, #-12]
    1c74:	b	20fc <read_ADR+0x510>
    1c78:	sub	r0, fp, #28
    1c7c:	bl	638 <swap4>
    1c80:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1c84:	cmp	r0, #4
    1c88:	beq	1cac <read_ADR+0xc0>
    1c8c:	ldr	r0, [pc, #1140]	; 2108 <read_ADR+0x51c>
    1c90:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1c94:	movw	r1, #0
    1c98:	movt	r1, #0
    1c9c:	bl	0 <coda_set_error>
    1ca0:	mvn	r0, #0
    1ca4:	str	r0, [fp, #-12]
    1ca8:	b	20fc <read_ADR+0x510>
    1cac:	ldr	r0, [fp, #-16]
    1cb0:	ldr	r0, [r0, #52]	; 0x34
    1cb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1cb8:	ldr	r2, [fp, #-20]	; 0xffffffec
    1cbc:	adds	r1, r1, #12
    1cc0:	adc	r3, r2, #0
    1cc4:	sub	r2, fp, #40	; 0x28
    1cc8:	mov	ip, sp
    1ccc:	str	r2, [ip, #8]
    1cd0:	mov	r2, #0
    1cd4:	str	r2, [ip, #4]
    1cd8:	mov	r2, #8
    1cdc:	str	r2, [ip]
    1ce0:	mov	r2, r1
    1ce4:	bl	3e4 <read_bytes>
    1ce8:	cmp	r0, #0
    1cec:	bge	1cfc <read_ADR+0x110>
    1cf0:	mvn	r0, #0
    1cf4:	str	r0, [fp, #-12]
    1cf8:	b	20fc <read_ADR+0x510>
    1cfc:	ldr	r0, [fp, #-16]
    1d00:	ldr	r0, [r0, #52]	; 0x34
    1d04:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1d08:	ldr	r2, [fp, #-20]	; 0xffffffec
    1d0c:	adds	r1, r1, #20
    1d10:	adc	r3, r2, #0
    1d14:	sub	r2, fp, #48	; 0x30
    1d18:	mov	ip, sp
    1d1c:	str	r2, [ip, #8]
    1d20:	mov	r2, #0
    1d24:	str	r2, [ip, #4]
    1d28:	mov	r2, #8
    1d2c:	str	r2, [ip]
    1d30:	mov	r2, r1
    1d34:	bl	3e4 <read_bytes>
    1d38:	cmp	r0, #0
    1d3c:	bge	1d4c <read_ADR+0x160>
    1d40:	mvn	r0, #0
    1d44:	str	r0, [fp, #-12]
    1d48:	b	20fc <read_ADR+0x510>
    1d4c:	ldr	r0, [fp, #-16]
    1d50:	ldr	r0, [r0, #52]	; 0x34
    1d54:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1d58:	ldr	r2, [fp, #-20]	; 0xffffffec
    1d5c:	adds	r1, r1, #28
    1d60:	adc	r3, r2, #0
    1d64:	sub	r2, fp, #52	; 0x34
    1d68:	mov	ip, sp
    1d6c:	str	r2, [ip, #8]
    1d70:	mov	r2, #0
    1d74:	str	r2, [ip, #4]
    1d78:	mov	r2, #4
    1d7c:	str	r2, [ip]
    1d80:	mov	r2, r1
    1d84:	bl	3e4 <read_bytes>
    1d88:	cmp	r0, #0
    1d8c:	bge	1d9c <read_ADR+0x1b0>
    1d90:	mvn	r0, #0
    1d94:	str	r0, [fp, #-12]
    1d98:	b	20fc <read_ADR+0x510>
    1d9c:	ldr	r0, [fp, #-16]
    1da0:	ldr	r0, [r0, #52]	; 0x34
    1da4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1da8:	ldr	r2, [fp, #-20]	; 0xffffffec
    1dac:	adds	r1, r1, #32
    1db0:	adc	r3, r2, #0
    1db4:	sub	r2, fp, #56	; 0x38
    1db8:	mov	ip, sp
    1dbc:	str	r2, [ip, #8]
    1dc0:	mov	r2, #0
    1dc4:	str	r2, [ip, #4]
    1dc8:	mov	r2, #4
    1dcc:	str	r2, [ip]
    1dd0:	mov	r2, r1
    1dd4:	bl	3e4 <read_bytes>
    1dd8:	cmp	r0, #0
    1ddc:	bge	1dec <read_ADR+0x200>
    1de0:	mvn	r0, #0
    1de4:	str	r0, [fp, #-12]
    1de8:	b	20fc <read_ADR+0x510>
    1dec:	ldr	r0, [fp, #-16]
    1df0:	ldr	r0, [r0, #52]	; 0x34
    1df4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1df8:	ldr	r2, [fp, #-20]	; 0xffffffec
    1dfc:	adds	r1, r1, #36	; 0x24
    1e00:	adc	r3, r2, #0
    1e04:	sub	r2, fp, #60	; 0x3c
    1e08:	mov	ip, sp
    1e0c:	str	r2, [ip, #8]
    1e10:	mov	r2, #0
    1e14:	str	r2, [ip, #4]
    1e18:	mov	r2, #4
    1e1c:	str	r2, [ip]
    1e20:	mov	r2, r1
    1e24:	bl	3e4 <read_bytes>
    1e28:	cmp	r0, #0
    1e2c:	bge	1e3c <read_ADR+0x250>
    1e30:	mvn	r0, #0
    1e34:	str	r0, [fp, #-12]
    1e38:	b	20fc <read_ADR+0x510>
    1e3c:	ldr	r0, [fp, #-16]
    1e40:	ldr	r0, [r0, #52]	; 0x34
    1e44:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1e48:	ldr	r2, [fp, #-20]	; 0xffffffec
    1e4c:	adds	r1, r1, #40	; 0x28
    1e50:	adc	r3, r2, #0
    1e54:	sub	r2, fp, #64	; 0x40
    1e58:	mov	ip, sp
    1e5c:	str	r2, [ip, #8]
    1e60:	mov	r2, #0
    1e64:	str	r2, [ip, #4]
    1e68:	mov	r2, #4
    1e6c:	str	r2, [ip]
    1e70:	mov	r2, r1
    1e74:	bl	3e4 <read_bytes>
    1e78:	cmp	r0, #0
    1e7c:	bge	1e8c <read_ADR+0x2a0>
    1e80:	mvn	r0, #0
    1e84:	str	r0, [fp, #-12]
    1e88:	b	20fc <read_ADR+0x510>
    1e8c:	ldr	r0, [fp, #-16]
    1e90:	ldr	r0, [r0, #52]	; 0x34
    1e94:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1e98:	ldr	r2, [fp, #-20]	; 0xffffffec
    1e9c:	adds	r1, r1, #48	; 0x30
    1ea0:	adc	r3, r2, #0
    1ea4:	sub	r2, fp, #72	; 0x48
    1ea8:	mov	ip, sp
    1eac:	str	r2, [ip, #8]
    1eb0:	mov	r2, #0
    1eb4:	str	r2, [ip, #4]
    1eb8:	mov	r2, #8
    1ebc:	str	r2, [ip]
    1ec0:	mov	r2, r1
    1ec4:	bl	3e4 <read_bytes>
    1ec8:	cmp	r0, #0
    1ecc:	bge	1edc <read_ADR+0x2f0>
    1ed0:	mvn	r0, #0
    1ed4:	str	r0, [fp, #-12]
    1ed8:	b	20fc <read_ADR+0x510>
    1edc:	ldr	r0, [fp, #-16]
    1ee0:	ldr	r0, [r0, #52]	; 0x34
    1ee4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1ee8:	ldr	r2, [fp, #-20]	; 0xffffffec
    1eec:	adds	r1, r1, #56	; 0x38
    1ef0:	adc	r3, r2, #0
    1ef4:	sub	r2, fp, #76	; 0x4c
    1ef8:	mov	ip, sp
    1efc:	str	r2, [ip, #8]
    1f00:	mov	r2, #0
    1f04:	str	r2, [ip, #4]
    1f08:	mov	r2, #4
    1f0c:	str	r2, [ip]
    1f10:	mov	r2, r1
    1f14:	bl	3e4 <read_bytes>
    1f18:	cmp	r0, #0
    1f1c:	bge	1f2c <read_ADR+0x340>
    1f20:	mvn	r0, #0
    1f24:	str	r0, [fp, #-12]
    1f28:	b	20fc <read_ADR+0x510>
    1f2c:	ldr	r0, [fp, #-16]
    1f30:	ldr	r0, [r0, #52]	; 0x34
    1f34:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1f38:	ldr	r2, [fp, #-20]	; 0xffffffec
    1f3c:	adds	r1, r1, #60	; 0x3c
    1f40:	adc	r3, r2, #0
    1f44:	sub	r2, fp, #80	; 0x50
    1f48:	mov	ip, sp
    1f4c:	str	r2, [ip, #8]
    1f50:	mov	r2, #0
    1f54:	str	r2, [ip, #4]
    1f58:	mov	r2, #4
    1f5c:	str	r2, [ip]
    1f60:	mov	r2, r1
    1f64:	bl	3e4 <read_bytes>
    1f68:	cmp	r0, #0
    1f6c:	bge	1f7c <read_ADR+0x390>
    1f70:	mvn	r0, #0
    1f74:	str	r0, [fp, #-12]
    1f78:	b	20fc <read_ADR+0x510>
    1f7c:	add	r0, sp, #15
    1f80:	ldr	r1, [fp, #-16]
    1f84:	ldr	r1, [r1, #52]	; 0x34
    1f88:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1f8c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1f90:	adds	r2, r2, #68	; 0x44
    1f94:	adc	r3, r3, #0
    1f98:	mov	ip, sp
    1f9c:	str	r0, [ip, #8]
    1fa0:	mov	r0, #0
    1fa4:	str	r0, [ip, #4]
    1fa8:	mov	r0, #256	; 0x100
    1fac:	str	r0, [ip]
    1fb0:	mov	r0, r1
    1fb4:	bl	3e4 <read_bytes>
    1fb8:	cmp	r0, #0
    1fbc:	bge	1fcc <read_ADR+0x3e0>
    1fc0:	mvn	r0, #0
    1fc4:	str	r0, [fp, #-12]
    1fc8:	b	20fc <read_ADR+0x510>
    1fcc:	mov	r0, #0
    1fd0:	strb	r0, [sp, #271]	; 0x10f
    1fd4:	add	r0, sp, #15
    1fd8:	bl	210c <rtrim>
    1fdc:	sub	r0, fp, #40	; 0x28
    1fe0:	bl	b50 <swap8>
    1fe4:	sub	r0, fp, #48	; 0x30
    1fe8:	bl	b50 <swap8>
    1fec:	sub	r0, fp, #52	; 0x34
    1ff0:	bl	638 <swap4>
    1ff4:	sub	r0, fp, #56	; 0x38
    1ff8:	bl	638 <swap4>
    1ffc:	sub	r0, fp, #60	; 0x3c
    2000:	bl	638 <swap4>
    2004:	sub	r0, fp, #64	; 0x40
    2008:	bl	638 <swap4>
    200c:	sub	r0, fp, #72	; 0x48
    2010:	bl	b50 <swap8>
    2014:	sub	r0, fp, #76	; 0x4c
    2018:	bl	638 <swap4>
    201c:	sub	r0, fp, #80	; 0x50
    2020:	bl	638 <swap4>
    2024:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2028:	ldr	r1, [fp, #-44]	; 0xffffffd4
    202c:	str	r1, [fp, #-84]	; 0xffffffac
    2030:	str	r0, [fp, #-88]	; 0xffffffa8
    2034:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2038:	and	r0, r0, #1
    203c:	cmp	r0, #0
    2040:	beq	2074 <read_ADR+0x488>
    2044:	ldr	r0, [fp, #-76]	; 0xffffffb4
    2048:	cmp	r0, #0
    204c:	beq	2070 <read_ADR+0x484>
    2050:	ldr	r0, [pc, #176]	; 2108 <read_ADR+0x51c>
    2054:	ldr	r2, [fp, #-76]	; 0xffffffb4
    2058:	movw	r1, #0
    205c:	movt	r1, #0
    2060:	bl	0 <coda_set_error>
    2064:	mvn	r0, #0
    2068:	str	r0, [fp, #-12]
    206c:	b	20fc <read_ADR+0x510>
    2070:	b	2094 <read_ADR+0x4a8>
    2074:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2078:	cmp	r0, #0
    207c:	bne	2090 <read_ADR+0x4a4>
    2080:	ldr	r0, [fp, #-72]	; 0xffffffb8
    2084:	ldr	r1, [fp, #-68]	; 0xffffffbc
    2088:	str	r1, [fp, #-84]	; 0xffffffac
    208c:	str	r0, [fp, #-88]	; 0xffffffa8
    2090:	b	2094 <read_ADR+0x4a8>
    2094:	add	r0, sp, #15
    2098:	ldr	r1, [fp, #-16]
    209c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    20a0:	ldr	r3, [fp, #-84]	; 0xffffffac
    20a4:	ldr	ip, [fp, #-52]	; 0xffffffcc
    20a8:	mov	lr, sp
    20ac:	str	ip, [lr, #4]
    20b0:	str	r0, [lr]
    20b4:	mov	r0, r1
    20b8:	bl	2d90 <read_AEDR>
    20bc:	cmp	r0, #0
    20c0:	beq	20d0 <read_ADR+0x4e4>
    20c4:	mvn	r0, #0
    20c8:	str	r0, [fp, #-12]
    20cc:	b	20fc <read_ADR+0x510>
    20d0:	ldr	r0, [fp, #-16]
    20d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    20d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    20dc:	bl	1bec <read_ADR>
    20e0:	cmp	r0, #0
    20e4:	beq	20f4 <read_ADR+0x508>
    20e8:	mvn	r0, #0
    20ec:	str	r0, [fp, #-12]
    20f0:	b	20fc <read_ADR+0x510>
    20f4:	movw	r0, #0
    20f8:	str	r0, [fp, #-12]
    20fc:	ldr	r0, [fp, #-12]
    2100:	sub	sp, fp, #8
    2104:	pop	{r4, r5, fp, pc}
    2108:	.word	0xfffffed4

0000210c <rtrim>:
    210c:	push	{fp, lr}
    2110:	mov	fp, sp
    2114:	sub	sp, sp, #16
    2118:	str	r0, [fp, #-4]
    211c:	ldr	r0, [fp, #-4]
    2120:	bl	0 <strlen>
    2124:	str	r0, [sp, #8]
    2128:	ldr	r0, [sp, #8]
    212c:	cmp	r0, #0
    2130:	movw	r0, #0
    2134:	str	r0, [sp, #4]
    2138:	ble	2160 <rtrim+0x54>
    213c:	ldr	r0, [fp, #-4]
    2140:	ldr	r1, [sp, #8]
    2144:	sub	r1, r1, #1
    2148:	add	r0, r0, r1
    214c:	ldrb	r0, [r0]
    2150:	cmp	r0, #32
    2154:	movw	r0, #0
    2158:	moveq	r0, #1
    215c:	str	r0, [sp, #4]
    2160:	ldr	r0, [sp, #4]
    2164:	tst	r0, #1
    2168:	beq	2198 <rtrim+0x8c>
    216c:	ldr	r0, [fp, #-4]
    2170:	ldr	r1, [sp, #8]
    2174:	sub	r1, r1, #1
    2178:	add	r0, r0, r1
    217c:	movw	r1, #0
    2180:	strb	r1, [r0]
    2184:	ldr	r0, [sp, #8]
    2188:	mvn	r1, #0
    218c:	add	r0, r0, r1
    2190:	str	r0, [sp, #8]
    2194:	b	2128 <rtrim+0x1c>
    2198:	mov	sp, fp
    219c:	pop	{fp, pc}

000021a0 <read_CPR>:
    21a0:	push	{fp, lr}
    21a4:	mov	fp, sp
    21a8:	sub	sp, sp, #40	; 0x28
    21ac:	str	r0, [fp, #-8]
    21b0:	str	r3, [fp, #-12]
    21b4:	str	r2, [fp, #-16]
    21b8:	ldr	r0, [fp, #-16]
    21bc:	ldr	r1, [fp, #-12]
    21c0:	orr	r0, r0, r1
    21c4:	cmp	r0, #0
    21c8:	bne	21dc <read_CPR+0x3c>
    21cc:	b	21d0 <read_CPR+0x30>
    21d0:	movw	r0, #0
    21d4:	str	r0, [fp, #-4]
    21d8:	b	22ec <read_CPR+0x14c>
    21dc:	ldr	r0, [fp, #-8]
    21e0:	ldr	r0, [r0, #52]	; 0x34
    21e4:	ldr	r1, [fp, #-16]
    21e8:	ldr	r2, [fp, #-12]
    21ec:	adds	r1, r1, #8
    21f0:	adc	r3, r2, #0
    21f4:	add	r2, sp, #20
    21f8:	mov	ip, sp
    21fc:	str	r2, [ip, #8]
    2200:	mov	r2, #0
    2204:	str	r2, [ip, #4]
    2208:	mov	r2, #4
    220c:	str	r2, [ip]
    2210:	mov	r2, r1
    2214:	bl	3e4 <read_bytes>
    2218:	cmp	r0, #0
    221c:	bge	222c <read_CPR+0x8c>
    2220:	mvn	r0, #0
    2224:	str	r0, [fp, #-4]
    2228:	b	22ec <read_CPR+0x14c>
    222c:	add	r0, sp, #20
    2230:	bl	638 <swap4>
    2234:	ldr	r0, [sp, #20]
    2238:	cmp	r0, #11
    223c:	beq	2260 <read_CPR+0xc0>
    2240:	ldr	r0, [pc, #176]	; 22f8 <read_CPR+0x158>
    2244:	ldr	r2, [sp, #20]
    2248:	movw	r1, #0
    224c:	movt	r1, #0
    2250:	bl	0 <coda_set_error>
    2254:	mvn	r0, #0
    2258:	str	r0, [fp, #-4]
    225c:	b	22ec <read_CPR+0x14c>
    2260:	ldr	r0, [fp, #-8]
    2264:	ldr	r0, [r0, #52]	; 0x34
    2268:	ldr	r1, [fp, #-16]
    226c:	ldr	r2, [fp, #-12]
    2270:	adds	r1, r1, #12
    2274:	adc	r3, r2, #0
    2278:	add	r2, sp, #16
    227c:	mov	ip, sp
    2280:	str	r2, [ip, #8]
    2284:	mov	r2, #0
    2288:	str	r2, [ip, #4]
    228c:	mov	r2, #4
    2290:	str	r2, [ip]
    2294:	mov	r2, r1
    2298:	bl	3e4 <read_bytes>
    229c:	cmp	r0, #0
    22a0:	bge	22b0 <read_CPR+0x110>
    22a4:	mvn	r0, #0
    22a8:	str	r0, [fp, #-4]
    22ac:	b	22ec <read_CPR+0x14c>
    22b0:	add	r0, sp, #16
    22b4:	bl	638 <swap4>
    22b8:	ldr	r0, [sp, #16]
    22bc:	cmp	r0, #5
    22c0:	beq	22e4 <read_CPR+0x144>
    22c4:	ldr	r2, [sp, #16]
    22c8:	mvn	r0, #199	; 0xc7
    22cc:	movw	r1, #0
    22d0:	movt	r1, #0
    22d4:	bl	0 <coda_set_error>
    22d8:	mvn	r0, #0
    22dc:	str	r0, [fp, #-4]
    22e0:	b	22ec <read_CPR+0x14c>
    22e4:	movw	r0, #0
    22e8:	str	r0, [fp, #-4]
    22ec:	ldr	r0, [fp, #-4]
    22f0:	mov	sp, fp
    22f4:	pop	{fp, pc}
    22f8:	.word	0xfffffed4

000022fc <read_VXR>:
    22fc:	push	{r4, sl, fp, lr}
    2300:	add	fp, sp, #8
    2304:	sub	sp, sp, #88	; 0x58
    2308:	ldr	ip, [fp, #12]
    230c:	ldr	lr, [fp, #8]
    2310:	str	r0, [fp, #-16]
    2314:	str	r1, [fp, #-20]	; 0xffffffec
    2318:	str	r3, [fp, #-28]	; 0xffffffe4
    231c:	str	r2, [fp, #-32]	; 0xffffffe0
    2320:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2324:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2328:	orr	r0, r0, r1
    232c:	cmp	r0, #0
    2330:	bne	2344 <read_VXR+0x48>
    2334:	b	2338 <read_VXR+0x3c>
    2338:	movw	r0, #0
    233c:	str	r0, [fp, #-12]
    2340:	b	26c4 <read_VXR+0x3c8>
    2344:	ldr	r0, [fp, #-16]
    2348:	ldr	r0, [r0, #52]	; 0x34
    234c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2350:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2354:	adds	r1, r1, #8
    2358:	adc	r3, r2, #0
    235c:	sub	r2, fp, #36	; 0x24
    2360:	mov	ip, sp
    2364:	str	r2, [ip, #8]
    2368:	mov	r2, #0
    236c:	str	r2, [ip, #4]
    2370:	mov	r2, #4
    2374:	str	r2, [ip]
    2378:	mov	r2, r1
    237c:	bl	3e4 <read_bytes>
    2380:	cmp	r0, #0
    2384:	bge	2394 <read_VXR+0x98>
    2388:	mvn	r0, #0
    238c:	str	r0, [fp, #-12]
    2390:	b	26c4 <read_VXR+0x3c8>
    2394:	sub	r0, fp, #36	; 0x24
    2398:	bl	638 <swap4>
    239c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    23a0:	cmp	r0, #6
    23a4:	beq	23c8 <read_VXR+0xcc>
    23a8:	ldr	r0, [pc, #800]	; 26d0 <read_VXR+0x3d4>
    23ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
    23b0:	movw	r1, #0
    23b4:	movt	r1, #0
    23b8:	bl	0 <coda_set_error>
    23bc:	mvn	r0, #0
    23c0:	str	r0, [fp, #-12]
    23c4:	b	26c4 <read_VXR+0x3c8>
    23c8:	ldr	r0, [fp, #-16]
    23cc:	ldr	r0, [r0, #52]	; 0x34
    23d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    23d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    23d8:	adds	r1, r1, #12
    23dc:	adc	r3, r2, #0
    23e0:	add	r2, sp, #48	; 0x30
    23e4:	mov	ip, sp
    23e8:	str	r2, [ip, #8]
    23ec:	mov	r2, #0
    23f0:	str	r2, [ip, #4]
    23f4:	mov	r2, #8
    23f8:	str	r2, [ip]
    23fc:	mov	r2, r1
    2400:	bl	3e4 <read_bytes>
    2404:	cmp	r0, #0
    2408:	bge	2418 <read_VXR+0x11c>
    240c:	mvn	r0, #0
    2410:	str	r0, [fp, #-12]
    2414:	b	26c4 <read_VXR+0x3c8>
    2418:	ldr	r0, [fp, #-16]
    241c:	ldr	r0, [r0, #52]	; 0x34
    2420:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2424:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2428:	adds	r1, r1, #20
    242c:	adc	r3, r2, #0
    2430:	add	r2, sp, #44	; 0x2c
    2434:	mov	ip, sp
    2438:	str	r2, [ip, #8]
    243c:	mov	r2, #0
    2440:	str	r2, [ip, #4]
    2444:	mov	r2, #4
    2448:	str	r2, [ip]
    244c:	mov	r2, r1
    2450:	bl	3e4 <read_bytes>
    2454:	cmp	r0, #0
    2458:	bge	2468 <read_VXR+0x16c>
    245c:	mvn	r0, #0
    2460:	str	r0, [fp, #-12]
    2464:	b	26c4 <read_VXR+0x3c8>
    2468:	ldr	r0, [fp, #-16]
    246c:	ldr	r0, [r0, #52]	; 0x34
    2470:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2474:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2478:	adds	r1, r1, #24
    247c:	adc	r3, r2, #0
    2480:	add	r2, sp, #40	; 0x28
    2484:	mov	ip, sp
    2488:	str	r2, [ip, #8]
    248c:	mov	r2, #0
    2490:	str	r2, [ip, #4]
    2494:	mov	r2, #4
    2498:	str	r2, [ip]
    249c:	mov	r2, r1
    24a0:	bl	3e4 <read_bytes>
    24a4:	cmp	r0, #0
    24a8:	bge	24b8 <read_VXR+0x1bc>
    24ac:	mvn	r0, #0
    24b0:	str	r0, [fp, #-12]
    24b4:	b	26c4 <read_VXR+0x3c8>
    24b8:	add	r0, sp, #48	; 0x30
    24bc:	bl	b50 <swap8>
    24c0:	add	r0, sp, #44	; 0x2c
    24c4:	bl	638 <swap4>
    24c8:	add	r0, sp, #40	; 0x28
    24cc:	bl	638 <swap4>
    24d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    24d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    24d8:	adds	r0, r0, #28
    24dc:	adc	r1, r1, #0
    24e0:	str	r0, [fp, #-32]	; 0xffffffe0
    24e4:	str	r1, [fp, #-28]	; 0xffffffe4
    24e8:	movw	r0, #0
    24ec:	str	r0, [sp, #36]	; 0x24
    24f0:	ldr	r0, [sp, #36]	; 0x24
    24f4:	ldr	r1, [sp, #40]	; 0x28
    24f8:	cmp	r0, r1
    24fc:	bge	2680 <read_VXR+0x384>
    2500:	ldr	r0, [fp, #-16]
    2504:	ldr	r0, [r0, #52]	; 0x34
    2508:	ldr	r1, [fp, #-32]	; 0xffffffe0
    250c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2510:	ldr	r3, [sp, #36]	; 0x24
    2514:	lsl	ip, r3, #2
    2518:	adds	r1, r1, r3, lsl #2
    251c:	adc	r3, r2, ip, asr #31
    2520:	add	r2, sp, #32
    2524:	mov	ip, sp
    2528:	str	r2, [ip, #8]
    252c:	mov	r2, #0
    2530:	str	r2, [ip, #4]
    2534:	mov	r2, #4
    2538:	str	r2, [ip]
    253c:	mov	r2, r1
    2540:	bl	3e4 <read_bytes>
    2544:	cmp	r0, #0
    2548:	bge	2558 <read_VXR+0x25c>
    254c:	mvn	r0, #0
    2550:	str	r0, [fp, #-12]
    2554:	b	26c4 <read_VXR+0x3c8>
    2558:	ldr	r0, [fp, #-16]
    255c:	ldr	r0, [r0, #52]	; 0x34
    2560:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2564:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2568:	ldr	r3, [sp, #36]	; 0x24
    256c:	ldr	ip, [sp, #44]	; 0x2c
    2570:	add	r3, r3, ip
    2574:	lsl	ip, r3, #2
    2578:	adds	r1, r1, r3, lsl #2
    257c:	adc	r3, r2, ip, asr #31
    2580:	add	r2, sp, #28
    2584:	mov	ip, sp
    2588:	str	r2, [ip, #8]
    258c:	mov	r2, #0
    2590:	str	r2, [ip, #4]
    2594:	mov	r2, #4
    2598:	str	r2, [ip]
    259c:	mov	r2, r1
    25a0:	bl	3e4 <read_bytes>
    25a4:	cmp	r0, #0
    25a8:	bge	25b8 <read_VXR+0x2bc>
    25ac:	mvn	r0, #0
    25b0:	str	r0, [fp, #-12]
    25b4:	b	26c4 <read_VXR+0x3c8>
    25b8:	ldr	r0, [fp, #-16]
    25bc:	ldr	r0, [r0, #52]	; 0x34
    25c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    25c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    25c8:	ldr	r3, [sp, #36]	; 0x24
    25cc:	ldr	ip, [sp, #44]	; 0x2c
    25d0:	add	r3, r3, ip
    25d4:	lsl	ip, r3, #3
    25d8:	adds	r1, r1, r3, lsl #3
    25dc:	adc	r3, r2, ip, asr #31
    25e0:	add	r2, sp, #16
    25e4:	mov	ip, sp
    25e8:	str	r2, [ip, #8]
    25ec:	mov	r2, #0
    25f0:	str	r2, [ip, #4]
    25f4:	mov	r2, #8
    25f8:	str	r2, [ip]
    25fc:	mov	r2, r1
    2600:	bl	3e4 <read_bytes>
    2604:	cmp	r0, #0
    2608:	bge	2618 <read_VXR+0x31c>
    260c:	mvn	r0, #0
    2610:	str	r0, [fp, #-12]
    2614:	b	26c4 <read_VXR+0x3c8>
    2618:	add	r0, sp, #32
    261c:	bl	638 <swap4>
    2620:	add	r0, sp, #28
    2624:	bl	638 <swap4>
    2628:	add	r0, sp, #16
    262c:	bl	b50 <swap8>
    2630:	ldr	r0, [fp, #-16]
    2634:	ldr	r1, [fp, #-20]	; 0xffffffec
    2638:	ldr	r2, [sp, #16]
    263c:	ldr	r3, [sp, #20]
    2640:	ldr	ip, [sp, #32]
    2644:	ldr	lr, [sp, #28]
    2648:	mov	r4, sp
    264c:	str	lr, [r4, #4]
    2650:	str	ip, [r4]
    2654:	bl	26d4 <read_VR>
    2658:	cmp	r0, #0
    265c:	beq	266c <read_VXR+0x370>
    2660:	mvn	r0, #0
    2664:	str	r0, [fp, #-12]
    2668:	b	26c4 <read_VXR+0x3c8>
    266c:	b	2670 <read_VXR+0x374>
    2670:	ldr	r0, [sp, #36]	; 0x24
    2674:	add	r0, r0, #1
    2678:	str	r0, [sp, #36]	; 0x24
    267c:	b	24f0 <read_VXR+0x1f4>
    2680:	ldr	r0, [fp, #-16]
    2684:	ldr	r1, [fp, #-20]	; 0xffffffec
    2688:	ldr	r2, [sp, #48]	; 0x30
    268c:	ldr	r3, [sp, #52]	; 0x34
    2690:	ldr	ip, [fp, #8]
    2694:	ldr	lr, [fp, #12]
    2698:	mov	r4, sp
    269c:	str	lr, [r4, #4]
    26a0:	str	ip, [r4]
    26a4:	bl	22fc <read_VXR>
    26a8:	cmp	r0, #0
    26ac:	beq	26bc <read_VXR+0x3c0>
    26b0:	mvn	r0, #0
    26b4:	str	r0, [fp, #-12]
    26b8:	b	26c4 <read_VXR+0x3c8>
    26bc:	movw	r0, #0
    26c0:	str	r0, [fp, #-12]
    26c4:	ldr	r0, [fp, #-12]
    26c8:	sub	sp, fp, #8
    26cc:	pop	{r4, sl, fp, pc}
    26d0:	.word	0xfffffed4

000026d4 <read_VR>:
    26d4:	push	{r4, sl, fp, lr}
    26d8:	add	fp, sp, #8
    26dc:	sub	sp, sp, #136	; 0x88
    26e0:	ldr	ip, [fp, #12]
    26e4:	ldr	lr, [fp, #8]
    26e8:	str	r0, [fp, #-16]
    26ec:	str	r1, [fp, #-20]	; 0xffffffec
    26f0:	str	r3, [fp, #-28]	; 0xffffffe4
    26f4:	str	r2, [fp, #-32]	; 0xffffffe0
    26f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    26fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2700:	orr	r0, r0, r1
    2704:	cmp	r0, #0
    2708:	bne	271c <read_VR+0x48>
    270c:	b	2710 <read_VR+0x3c>
    2710:	movw	r0, #0
    2714:	str	r0, [fp, #-12]
    2718:	b	2d80 <read_VR+0x6ac>
    271c:	ldr	r0, [fp, #-16]
    2720:	ldr	r0, [r0, #52]	; 0x34
    2724:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2728:	ldr	r2, [fp, #-28]	; 0xffffffe4
    272c:	adds	r1, r1, #8
    2730:	adc	r3, r2, #0
    2734:	sub	r2, fp, #36	; 0x24
    2738:	mov	ip, sp
    273c:	str	r2, [ip, #8]
    2740:	mov	r2, #0
    2744:	str	r2, [ip, #4]
    2748:	mov	r2, #4
    274c:	str	r2, [ip]
    2750:	mov	r2, r1
    2754:	bl	3e4 <read_bytes>
    2758:	cmp	r0, #0
    275c:	bge	276c <read_VR+0x98>
    2760:	mvn	r0, #0
    2764:	str	r0, [fp, #-12]
    2768:	b	2d80 <read_VR+0x6ac>
    276c:	sub	r0, fp, #36	; 0x24
    2770:	bl	638 <swap4>
    2774:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2778:	cmp	r0, #6
    277c:	bne	27b0 <read_VR+0xdc>
    2780:	ldr	r0, [fp, #-16]
    2784:	ldr	r1, [fp, #-20]	; 0xffffffec
    2788:	ldr	r2, [fp, #-32]	; 0xffffffe0
    278c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2790:	ldr	ip, [fp, #8]
    2794:	ldr	lr, [fp, #12]
    2798:	mov	r4, sp
    279c:	str	lr, [r4, #4]
    27a0:	str	ip, [r4]
    27a4:	bl	22fc <read_VXR>
    27a8:	str	r0, [fp, #-12]
    27ac:	b	2d80 <read_VR+0x6ac>
    27b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    27b4:	cmp	r0, #7
    27b8:	bne	2850 <read_VR+0x17c>
    27bc:	ldr	r0, [fp, #12]
    27c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    27c4:	ldr	r1, [r1, #20]
    27c8:	cmp	r0, r1
    27cc:	blt	27e0 <read_VR+0x10c>
    27d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    27d4:	ldr	r0, [r0, #20]
    27d8:	sub	r0, r0, #1
    27dc:	str	r0, [fp, #12]
    27e0:	ldr	r0, [fp, #8]
    27e4:	str	r0, [fp, #-40]	; 0xffffffd8
    27e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    27ec:	ldr	r1, [fp, #12]
    27f0:	cmp	r0, r1
    27f4:	bgt	284c <read_VR+0x178>
    27f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    27fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2800:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2804:	ldr	r3, [fp, #8]
    2808:	sub	r3, r2, r3
    280c:	ldr	ip, [fp, #-20]	; 0xffffffec
    2810:	ldr	lr, [ip, #24]
    2814:	ldr	r4, [ip, #28]
    2818:	ldr	ip, [ip, #36]	; 0x24
    281c:	mul	r3, r3, lr
    2820:	mul	r3, r3, r4
    2824:	adds	r0, r0, r3
    2828:	adc	r1, r1, r3, asr #31
    282c:	adds	r0, r0, #12
    2830:	adc	r1, r1, #0
    2834:	str	r0, [ip, r2, lsl #3]!
    2838:	str	r1, [ip, #4]
    283c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2840:	add	r0, r0, #1
    2844:	str	r0, [fp, #-40]	; 0xffffffd8
    2848:	b	27e8 <read_VR+0x114>
    284c:	b	2d78 <read_VR+0x6a4>
    2850:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2854:	cmp	r0, #13
    2858:	bne	2d54 <read_VR+0x680>
    285c:	movw	r0, #0
    2860:	str	r0, [sp, #32]
    2864:	ldr	r0, [fp, #8]
    2868:	ldr	r1, [fp, #-20]	; 0xffffffec
    286c:	ldr	r1, [r1, #20]
    2870:	cmp	r0, r1
    2874:	blt	2884 <read_VR+0x1b0>
    2878:	movw	r0, #0
    287c:	str	r0, [fp, #-12]
    2880:	b	2d80 <read_VR+0x6ac>
    2884:	ldr	r0, [fp, #-20]	; 0xffffffec
    2888:	ldr	r0, [r0, #40]	; 0x28
    288c:	movw	r1, #0
    2890:	cmp	r0, r1
    2894:	bne	2928 <read_VR+0x254>
    2898:	ldr	r0, [fp, #-20]	; 0xffffffec
    289c:	ldr	r0, [r0, #20]
    28a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    28a4:	ldr	r1, [r1, #24]
    28a8:	mul	r0, r0, r1
    28ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    28b0:	ldr	r1, [r1, #28]
    28b4:	mul	r0, r0, r1
    28b8:	bl	0 <malloc>
    28bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    28c0:	str	r0, [r1, #40]	; 0x28
    28c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    28c8:	ldr	r0, [r0, #40]	; 0x28
    28cc:	movw	r1, #0
    28d0:	cmp	r0, r1
    28d4:	bne	2924 <read_VR+0x250>
    28d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    28dc:	ldr	r0, [r0, #20]
    28e0:	ldr	r1, [fp, #-20]	; 0xffffffec
    28e4:	ldr	r1, [r1, #24]
    28e8:	mul	r0, r0, r1
    28ec:	ldr	r1, [fp, #-20]	; 0xffffffec
    28f0:	ldr	r1, [r1, #28]
    28f4:	mul	r2, r0, r1
    28f8:	mvn	r0, #0
    28fc:	movw	r1, #0
    2900:	movt	r1, #0
    2904:	movw	r3, #0
    2908:	movt	r3, #0
    290c:	movw	ip, #629	; 0x275
    2910:	str	ip, [sp]
    2914:	bl	0 <coda_set_error>
    2918:	mvn	r0, #0
    291c:	str	r0, [fp, #-12]
    2920:	b	2d80 <read_VR+0x6ac>
    2924:	b	2928 <read_VR+0x254>
    2928:	ldr	r0, [fp, #-16]
    292c:	ldr	r0, [r0, #52]	; 0x34
    2930:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2934:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2938:	adds	r1, r1, #16
    293c:	adc	r3, r2, #0
    2940:	sub	r2, fp, #48	; 0x30
    2944:	mov	ip, sp
    2948:	str	r2, [ip, #8]
    294c:	mov	r2, #0
    2950:	str	r2, [ip, #4]
    2954:	mov	r2, #8
    2958:	str	r2, [ip]
    295c:	mov	r2, r1
    2960:	bl	3e4 <read_bytes>
    2964:	cmp	r0, #0
    2968:	bge	2978 <read_VR+0x2a4>
    296c:	mvn	r0, #0
    2970:	str	r0, [fp, #-12]
    2974:	b	2d80 <read_VR+0x6ac>
    2978:	sub	r0, fp, #48	; 0x30
    297c:	bl	b50 <swap8>
    2980:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2984:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2988:	adds	r0, r0, #24
    298c:	adc	r1, r1, #0
    2990:	str	r0, [fp, #-32]	; 0xffffffe0
    2994:	str	r1, [fp, #-28]	; 0xffffffe4
    2998:	ldr	r0, [fp, #-48]	; 0xffffffd0
    299c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    29a0:	rsbs	r0, r0, #19
    29a4:	rscs	r1, r1, #0
    29a8:	blt	29cc <read_VR+0x2f8>
    29ac:	b	29b0 <read_VR+0x2dc>
    29b0:	ldr	r0, [pc, #980]	; 2d8c <read_VR+0x6b8>
    29b4:	movw	r1, #0
    29b8:	movt	r1, #0
    29bc:	bl	0 <coda_set_error>
    29c0:	mvn	r0, #0
    29c4:	str	r0, [fp, #-12]
    29c8:	b	2d80 <read_VR+0x6ac>
    29cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    29d0:	bl	0 <malloc>
    29d4:	str	r0, [fp, #-52]	; 0xffffffcc
    29d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    29dc:	movw	r1, #0
    29e0:	cmp	r0, r1
    29e4:	bne	2a18 <read_VR+0x344>
    29e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    29ec:	mvn	r0, #0
    29f0:	movw	r1, #0
    29f4:	movt	r1, #0
    29f8:	movw	r3, #0
    29fc:	movt	r3, #0
    2a00:	movw	ip, #652	; 0x28c
    2a04:	str	ip, [sp]
    2a08:	bl	0 <coda_set_error>
    2a0c:	mvn	r0, #0
    2a10:	str	r0, [fp, #-12]
    2a14:	b	2d80 <read_VR+0x6ac>
    2a18:	ldr	r0, [fp, #-16]
    2a1c:	ldr	r0, [r0, #52]	; 0x34
    2a20:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2a24:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2a28:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2a2c:	ldr	ip, [fp, #-44]	; 0xffffffd4
    2a30:	ldr	lr, [fp, #-52]	; 0xffffffcc
    2a34:	mov	r4, sp
    2a38:	str	lr, [r4, #8]
    2a3c:	str	ip, [r4, #4]
    2a40:	str	r1, [r4]
    2a44:	bl	3e4 <read_bytes>
    2a48:	cmp	r0, #0
    2a4c:	bge	2a64 <read_VR+0x390>
    2a50:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2a54:	bl	0 <free>
    2a58:	mvn	r0, #0
    2a5c:	str	r0, [fp, #-12]
    2a60:	b	2d80 <read_VR+0x6ac>
    2a64:	movw	r0, #0
    2a68:	str	r0, [sp, #36]	; 0x24
    2a6c:	str	r0, [sp, #40]	; 0x28
    2a70:	str	r0, [sp, #68]	; 0x44
    2a74:	str	r0, [sp, #72]	; 0x48
    2a78:	str	r0, [sp, #76]	; 0x4c
    2a7c:	str	r0, [sp, #60]	; 0x3c
    2a80:	add	r0, sp, #36	; 0x24
    2a84:	movw	r1, #31
    2a88:	movw	r2, #0
    2a8c:	movt	r2, #0
    2a90:	movw	r3, #56	; 0x38
    2a94:	bl	0 <coda_inflateInit2_>
    2a98:	cmp	r0, #0
    2a9c:	beq	2ae4 <read_VR+0x410>
    2aa0:	mvn	r0, #21
    2aa4:	movw	r1, #0
    2aa8:	movt	r1, #0
    2aac:	bl	0 <coda_set_error>
    2ab0:	ldr	r0, [sp, #60]	; 0x3c
    2ab4:	movw	r1, #0
    2ab8:	cmp	r0, r1
    2abc:	beq	2ad0 <read_VR+0x3fc>
    2ac0:	ldr	r1, [sp, #60]	; 0x3c
    2ac4:	movw	r0, #0
    2ac8:	movt	r0, #0
    2acc:	bl	0 <coda_add_error_message>
    2ad0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2ad4:	bl	0 <free>
    2ad8:	mvn	r0, #0
    2adc:	str	r0, [fp, #-12]
    2ae0:	b	2d80 <read_VR+0x6ac>
    2ae4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2ae8:	str	r0, [sp, #36]	; 0x24
    2aec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2af0:	str	r0, [sp, #40]	; 0x28
    2af4:	ldr	r0, [fp, #12]
    2af8:	ldr	r1, [fp, #-20]	; 0xffffffec
    2afc:	ldr	r1, [r1, #20]
    2b00:	cmp	r0, r1
    2b04:	blt	2b20 <read_VR+0x44c>
    2b08:	ldr	r0, [fp, #-20]	; 0xffffffec
    2b0c:	ldr	r0, [r0, #20]
    2b10:	sub	r0, r0, #1
    2b14:	str	r0, [fp, #12]
    2b18:	movw	r0, #1
    2b1c:	str	r0, [sp, #32]
    2b20:	ldr	r0, [fp, #-20]	; 0xffffffec
    2b24:	ldr	r0, [r0, #40]	; 0x28
    2b28:	ldr	r1, [fp, #8]
    2b2c:	ldr	r2, [fp, #-20]	; 0xffffffec
    2b30:	ldr	r2, [r2, #24]
    2b34:	mul	r1, r1, r2
    2b38:	ldr	r2, [fp, #-20]	; 0xffffffec
    2b3c:	ldr	r2, [r2, #28]
    2b40:	mul	r1, r1, r2
    2b44:	add	r0, r0, r1
    2b48:	str	r0, [sp, #48]	; 0x30
    2b4c:	ldr	r0, [fp, #12]
    2b50:	ldr	r1, [fp, #8]
    2b54:	sub	r0, r0, r1
    2b58:	add	r0, r0, #1
    2b5c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b60:	ldr	r1, [r1, #24]
    2b64:	mul	r0, r0, r1
    2b68:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b6c:	ldr	r1, [r1, #28]
    2b70:	mul	r0, r0, r1
    2b74:	str	r0, [sp, #52]	; 0x34
    2b78:	add	r0, sp, #36	; 0x24
    2b7c:	movw	r1, #4
    2b80:	bl	0 <coda_inflate>
    2b84:	str	r0, [sp, #28]
    2b88:	ldr	r0, [sp, #28]
    2b8c:	cmn	r0, #2
    2b90:	beq	2b98 <read_VR+0x4c4>
    2b94:	b	2bb8 <read_VR+0x4e4>
    2b98:	movw	r0, #0
    2b9c:	movt	r0, #0
    2ba0:	movw	r1, #0
    2ba4:	movt	r1, #0
    2ba8:	movw	r2, #687	; 0x2af
    2bac:	movw	r3, #0
    2bb0:	movt	r3, #0
    2bb4:	bl	0 <__assert_fail>
    2bb8:	ldr	r0, [sp, #28]
    2bbc:	cmp	r0, #0
    2bc0:	bge	2cac <read_VR+0x5d8>
    2bc4:	ldr	r0, [sp, #28]
    2bc8:	cmn	r0, #5
    2bcc:	bne	2bdc <read_VR+0x508>
    2bd0:	ldr	r0, [sp, #32]
    2bd4:	cmp	r0, #0
    2bd8:	bne	2cac <read_VR+0x5d8>
    2bdc:	ldr	r0, [sp, #28]
    2be0:	cmn	r0, #4
    2be4:	str	r0, [sp, #20]
    2be8:	beq	2c44 <read_VR+0x570>
    2bec:	b	2bf0 <read_VR+0x51c>
    2bf0:	ldr	r0, [sp, #20]
    2bf4:	cmn	r0, #3
    2bf8:	beq	2c10 <read_VR+0x53c>
    2bfc:	b	2c00 <read_VR+0x52c>
    2c00:	ldr	r0, [sp, #20]
    2c04:	cmp	r0, #2
    2c08:	bne	2c54 <read_VR+0x580>
    2c0c:	b	2c10 <read_VR+0x53c>
    2c10:	mvn	r0, #21
    2c14:	movw	r1, #0
    2c18:	movt	r1, #0
    2c1c:	bl	0 <coda_set_error>
    2c20:	ldr	r0, [sp, #60]	; 0x3c
    2c24:	movw	r1, #0
    2c28:	cmp	r0, r1
    2c2c:	beq	2c40 <read_VR+0x56c>
    2c30:	ldr	r1, [sp, #60]	; 0x3c
    2c34:	movw	r0, #0
    2c38:	movt	r0, #0
    2c3c:	bl	0 <coda_add_error_message>
    2c40:	b	2c88 <read_VR+0x5b4>
    2c44:	mvn	r0, #0
    2c48:	movw	r1, #0
    2c4c:	bl	0 <coda_set_error>
    2c50:	b	2c88 <read_VR+0x5b4>
    2c54:	mvn	r0, #21
    2c58:	movw	r1, #0
    2c5c:	movt	r1, #0
    2c60:	bl	0 <coda_set_error>
    2c64:	ldr	r0, [sp, #60]	; 0x3c
    2c68:	movw	r1, #0
    2c6c:	cmp	r0, r1
    2c70:	beq	2c84 <read_VR+0x5b0>
    2c74:	ldr	r1, [sp, #60]	; 0x3c
    2c78:	movw	r0, #0
    2c7c:	movt	r0, #0
    2c80:	bl	0 <coda_add_error_message>
    2c84:	b	2c88 <read_VR+0x5b4>
    2c88:	add	r0, sp, #36	; 0x24
    2c8c:	bl	0 <coda_inflateEnd>
    2c90:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2c94:	str	r0, [sp, #16]
    2c98:	mov	r0, r1
    2c9c:	bl	0 <free>
    2ca0:	mvn	r0, #0
    2ca4:	str	r0, [fp, #-12]
    2ca8:	b	2d80 <read_VR+0x6ac>
    2cac:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2cb0:	bl	0 <free>
    2cb4:	add	r0, sp, #36	; 0x24
    2cb8:	bl	0 <coda_inflateEnd>
    2cbc:	cmp	r0, #0
    2cc0:	beq	2d00 <read_VR+0x62c>
    2cc4:	mvn	r0, #21
    2cc8:	movw	r1, #0
    2ccc:	movt	r1, #0
    2cd0:	bl	0 <coda_set_error>
    2cd4:	ldr	r0, [sp, #60]	; 0x3c
    2cd8:	movw	r1, #0
    2cdc:	cmp	r0, r1
    2ce0:	beq	2cf4 <read_VR+0x620>
    2ce4:	ldr	r1, [sp, #60]	; 0x3c
    2ce8:	movw	r0, #0
    2cec:	movt	r0, #0
    2cf0:	bl	0 <coda_add_error_message>
    2cf4:	mvn	r0, #0
    2cf8:	str	r0, [fp, #-12]
    2cfc:	b	2d80 <read_VR+0x6ac>
    2d00:	ldr	r0, [fp, #8]
    2d04:	str	r0, [sp, #24]
    2d08:	ldr	r0, [sp, #24]
    2d0c:	ldr	r1, [fp, #12]
    2d10:	cmp	r0, r1
    2d14:	bgt	2d50 <read_VR+0x67c>
    2d18:	ldr	r0, [sp, #24]
    2d1c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d20:	ldr	r2, [r1, #24]
    2d24:	ldr	r3, [r1, #28]
    2d28:	ldr	r1, [r1, #36]	; 0x24
    2d2c:	mul	r2, r0, r2
    2d30:	mul	r2, r2, r3
    2d34:	asr	r3, r2, #31
    2d38:	str	r2, [r1, r0, lsl #3]!
    2d3c:	str	r3, [r1, #4]
    2d40:	ldr	r0, [sp, #24]
    2d44:	add	r0, r0, #1
    2d48:	str	r0, [sp, #24]
    2d4c:	b	2d08 <read_VR+0x634>
    2d50:	b	2d74 <read_VR+0x6a0>
    2d54:	ldr	r0, [pc, #48]	; 2d8c <read_VR+0x6b8>
    2d58:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2d5c:	movw	r1, #0
    2d60:	movt	r1, #0
    2d64:	bl	0 <coda_set_error>
    2d68:	mvn	r0, #0
    2d6c:	str	r0, [fp, #-12]
    2d70:	b	2d80 <read_VR+0x6ac>
    2d74:	b	2d78 <read_VR+0x6a4>
    2d78:	movw	r0, #0
    2d7c:	str	r0, [fp, #-12]
    2d80:	ldr	r0, [fp, #-12]
    2d84:	sub	sp, fp, #8
    2d88:	pop	{r4, sl, fp, pc}
    2d8c:	.word	0xfffffed4

00002d90 <read_AEDR>:
    2d90:	push	{r4, sl, fp, lr}
    2d94:	add	fp, sp, #8
    2d98:	sub	sp, sp, #64	; 0x40
    2d9c:	ldr	r1, [fp, #12]
    2da0:	ldr	ip, [fp, #8]
    2da4:	str	r0, [fp, #-16]
    2da8:	str	r3, [fp, #-20]	; 0xffffffec
    2dac:	str	r2, [fp, #-24]	; 0xffffffe8
    2db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2db4:	ldr	r2, [fp, #-20]	; 0xffffffec
    2db8:	orr	r0, r0, r2
    2dbc:	cmp	r0, #0
    2dc0:	bne	2dd4 <read_AEDR+0x44>
    2dc4:	b	2dc8 <read_AEDR+0x38>
    2dc8:	movw	r0, #0
    2dcc:	str	r0, [fp, #-12]
    2dd0:	b	3214 <read_AEDR+0x484>
    2dd4:	ldr	r0, [fp, #-16]
    2dd8:	ldr	r0, [r0, #52]	; 0x34
    2ddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2de0:	ldr	r2, [fp, #-20]	; 0xffffffec
    2de4:	adds	r1, r1, #8
    2de8:	adc	r3, r2, #0
    2dec:	sub	r2, fp, #32
    2df0:	mov	ip, sp
    2df4:	str	r2, [ip, #8]
    2df8:	mov	r2, #0
    2dfc:	str	r2, [ip, #4]
    2e00:	mov	r2, #4
    2e04:	str	r2, [ip]
    2e08:	mov	r2, r1
    2e0c:	bl	3e4 <read_bytes>
    2e10:	cmp	r0, #0
    2e14:	bge	2e24 <read_AEDR+0x94>
    2e18:	mvn	r0, #0
    2e1c:	str	r0, [fp, #-12]
    2e20:	b	3214 <read_AEDR+0x484>
    2e24:	sub	r0, fp, #32
    2e28:	bl	638 <swap4>
    2e2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2e30:	cmp	r0, #5
    2e34:	beq	2e64 <read_AEDR+0xd4>
    2e38:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2e3c:	cmp	r0, #9
    2e40:	beq	2e64 <read_AEDR+0xd4>
    2e44:	ldr	r0, [pc, #980]	; 3220 <read_AEDR+0x490>
    2e48:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2e4c:	movw	r1, #0
    2e50:	movt	r1, #0
    2e54:	bl	0 <coda_set_error>
    2e58:	mvn	r0, #0
    2e5c:	str	r0, [fp, #-12]
    2e60:	b	3214 <read_AEDR+0x484>
    2e64:	ldr	r0, [fp, #-16]
    2e68:	ldr	r0, [r0, #52]	; 0x34
    2e6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2e70:	ldr	r2, [fp, #-20]	; 0xffffffec
    2e74:	adds	r1, r1, #12
    2e78:	adc	r3, r2, #0
    2e7c:	add	r2, sp, #32
    2e80:	mov	ip, sp
    2e84:	str	r2, [ip, #8]
    2e88:	mov	r2, #0
    2e8c:	str	r2, [ip, #4]
    2e90:	mov	r2, #8
    2e94:	str	r2, [ip]
    2e98:	mov	r2, r1
    2e9c:	bl	3e4 <read_bytes>
    2ea0:	cmp	r0, #0
    2ea4:	bge	2eb4 <read_AEDR+0x124>
    2ea8:	mvn	r0, #0
    2eac:	str	r0, [fp, #-12]
    2eb0:	b	3214 <read_AEDR+0x484>
    2eb4:	ldr	r0, [fp, #-16]
    2eb8:	ldr	r0, [r0, #52]	; 0x34
    2ebc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2ec0:	ldr	r2, [fp, #-20]	; 0xffffffec
    2ec4:	adds	r1, r1, #20
    2ec8:	adc	r3, r2, #0
    2ecc:	add	r2, sp, #28
    2ed0:	mov	ip, sp
    2ed4:	str	r2, [ip, #8]
    2ed8:	mov	r2, #0
    2edc:	str	r2, [ip, #4]
    2ee0:	mov	r2, #4
    2ee4:	str	r2, [ip]
    2ee8:	mov	r2, r1
    2eec:	bl	3e4 <read_bytes>
    2ef0:	cmp	r0, #0
    2ef4:	bge	2f04 <read_AEDR+0x174>
    2ef8:	mvn	r0, #0
    2efc:	str	r0, [fp, #-12]
    2f00:	b	3214 <read_AEDR+0x484>
    2f04:	ldr	r0, [fp, #-16]
    2f08:	ldr	r0, [r0, #52]	; 0x34
    2f0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2f10:	ldr	r2, [fp, #-20]	; 0xffffffec
    2f14:	adds	r1, r1, #24
    2f18:	adc	r3, r2, #0
    2f1c:	add	r2, sp, #24
    2f20:	mov	ip, sp
    2f24:	str	r2, [ip, #8]
    2f28:	mov	r2, #0
    2f2c:	str	r2, [ip, #4]
    2f30:	mov	r2, #4
    2f34:	str	r2, [ip]
    2f38:	mov	r2, r1
    2f3c:	bl	3e4 <read_bytes>
    2f40:	cmp	r0, #0
    2f44:	bge	2f54 <read_AEDR+0x1c4>
    2f48:	mvn	r0, #0
    2f4c:	str	r0, [fp, #-12]
    2f50:	b	3214 <read_AEDR+0x484>
    2f54:	ldr	r0, [fp, #-16]
    2f58:	ldr	r0, [r0, #52]	; 0x34
    2f5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2f60:	ldr	r2, [fp, #-20]	; 0xffffffec
    2f64:	adds	r1, r1, #28
    2f68:	adc	r3, r2, #0
    2f6c:	add	r2, sp, #20
    2f70:	mov	ip, sp
    2f74:	str	r2, [ip, #8]
    2f78:	mov	r2, #0
    2f7c:	str	r2, [ip, #4]
    2f80:	mov	r2, #4
    2f84:	str	r2, [ip]
    2f88:	mov	r2, r1
    2f8c:	bl	3e4 <read_bytes>
    2f90:	cmp	r0, #0
    2f94:	bge	2fa4 <read_AEDR+0x214>
    2f98:	mvn	r0, #0
    2f9c:	str	r0, [fp, #-12]
    2fa0:	b	3214 <read_AEDR+0x484>
    2fa4:	ldr	r0, [fp, #-16]
    2fa8:	ldr	r0, [r0, #52]	; 0x34
    2fac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2fb0:	ldr	r2, [fp, #-20]	; 0xffffffec
    2fb4:	adds	r1, r1, #32
    2fb8:	adc	r3, r2, #0
    2fbc:	add	r2, sp, #16
    2fc0:	mov	ip, sp
    2fc4:	str	r2, [ip, #8]
    2fc8:	mov	r2, #0
    2fcc:	str	r2, [ip, #4]
    2fd0:	mov	r2, #4
    2fd4:	str	r2, [ip]
    2fd8:	mov	r2, r1
    2fdc:	bl	3e4 <read_bytes>
    2fe0:	cmp	r0, #0
    2fe4:	bge	2ff4 <read_AEDR+0x264>
    2fe8:	mvn	r0, #0
    2fec:	str	r0, [fp, #-12]
    2ff0:	b	3214 <read_AEDR+0x484>
    2ff4:	add	r0, sp, #32
    2ff8:	bl	b50 <swap8>
    2ffc:	add	r0, sp, #28
    3000:	bl	638 <swap4>
    3004:	add	r0, sp, #24
    3008:	bl	638 <swap4>
    300c:	add	r0, sp, #20
    3010:	bl	638 <swap4>
    3014:	add	r0, sp, #16
    3018:	bl	638 <swap4>
    301c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3020:	ldr	r1, [fp, #-20]	; 0xffffffec
    3024:	adds	r0, r0, #56	; 0x38
    3028:	adc	r1, r1, #0
    302c:	str	r0, [fp, #-24]	; 0xffffffe8
    3030:	str	r1, [fp, #-20]	; 0xffffffec
    3034:	ldr	r0, [sp, #24]
    3038:	cmp	r0, #32
    303c:	bne	305c <read_AEDR+0x2cc>
    3040:	mvn	r0, #199	; 0xc7
    3044:	movw	r1, #0
    3048:	movt	r1, #0
    304c:	bl	0 <coda_set_error>
    3050:	mvn	r0, #0
    3054:	str	r0, [fp, #-12]
    3058:	b	3214 <read_AEDR+0x484>
    305c:	ldr	r0, [fp, #-16]
    3060:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3064:	ldr	r3, [fp, #-20]	; 0xffffffec
    3068:	ldr	r1, [sp, #24]
    306c:	ldr	ip, [sp, #16]
    3070:	mov	lr, sp
    3074:	sub	r4, fp, #28
    3078:	str	r4, [lr, #8]
    307c:	str	ip, [lr, #4]
    3080:	str	r1, [lr]
    3084:	bl	3224 <read_attribute>
    3088:	cmp	r0, #0
    308c:	beq	309c <read_AEDR+0x30c>
    3090:	mvn	r0, #0
    3094:	str	r0, [fp, #-12]
    3098:	b	3214 <read_AEDR+0x484>
    309c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    30a0:	cmp	r0, #5
    30a4:	bne	30f0 <read_AEDR+0x360>
    30a8:	ldr	r0, [fp, #12]
    30ac:	and	r0, r0, #1
    30b0:	cmp	r0, #0
    30b4:	beq	30f0 <read_AEDR+0x360>
    30b8:	ldr	r0, [fp, #-16]
    30bc:	ldr	r0, [r0, #20]
    30c0:	ldr	r1, [fp, #8]
    30c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    30c8:	movw	r3, #1
    30cc:	bl	0 <coda_mem_type_add_attribute>
    30d0:	cmp	r0, #0
    30d4:	beq	30ec <read_AEDR+0x35c>
    30d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    30dc:	bl	0 <coda_dynamic_type_delete>
    30e0:	mvn	r0, #0
    30e4:	str	r0, [fp, #-12]
    30e8:	b	3214 <read_AEDR+0x484>
    30ec:	b	31d4 <read_AEDR+0x444>
    30f0:	ldr	r0, [sp, #20]
    30f4:	cmp	r0, #0
    30f8:	blt	3114 <read_AEDR+0x384>
    30fc:	ldr	r0, [sp, #20]
    3100:	ldr	r1, [fp, #-16]
    3104:	ldr	r1, [r1, #20]
    3108:	ldr	r1, [r1, #16]
    310c:	cmp	r0, r1
    3110:	blt	3144 <read_AEDR+0x3b4>
    3114:	ldr	r0, [pc, #260]	; 3220 <read_AEDR+0x490>
    3118:	ldr	r2, [sp, #20]
    311c:	ldr	r1, [fp, #-16]
    3120:	ldr	r1, [r1, #20]
    3124:	ldr	r1, [r1, #16]
    3128:	sub	r3, r1, #1
    312c:	movw	r1, #0
    3130:	movt	r1, #0
    3134:	bl	0 <coda_set_error>
    3138:	mvn	r0, #0
    313c:	str	r0, [fp, #-12]
    3140:	b	3214 <read_AEDR+0x484>
    3144:	ldr	r0, [fp, #-16]
    3148:	ldr	r0, [r0, #20]
    314c:	ldr	r0, [r0, #20]
    3150:	ldr	r1, [sp, #20]
    3154:	add	r0, r0, r1, lsl #2
    3158:	ldr	r0, [r0]
    315c:	ldr	r0, [r0]
    3160:	cmp	r0, #103	; 0x67
    3164:	bne	316c <read_AEDR+0x3dc>
    3168:	b	318c <read_AEDR+0x3fc>
    316c:	movw	r0, #0
    3170:	movt	r0, #0
    3174:	movw	r1, #0
    3178:	movt	r1, #0
    317c:	movw	r2, #439	; 0x1b7
    3180:	movw	r3, #0
    3184:	movt	r3, #0
    3188:	bl	0 <__assert_fail>
    318c:	ldr	r0, [fp, #-16]
    3190:	ldr	r0, [r0, #20]
    3194:	ldr	r0, [r0, #20]
    3198:	ldr	r1, [sp, #20]
    319c:	add	r0, r0, r1, lsl #2
    31a0:	ldr	r0, [r0]
    31a4:	ldr	r1, [fp, #8]
    31a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    31ac:	movw	r3, #1
    31b0:	bl	0 <coda_cdf_variable_add_attribute>
    31b4:	cmp	r0, #0
    31b8:	beq	31d0 <read_AEDR+0x440>
    31bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    31c0:	bl	0 <coda_dynamic_type_delete>
    31c4:	mvn	r0, #0
    31c8:	str	r0, [fp, #-12]
    31cc:	b	3214 <read_AEDR+0x484>
    31d0:	b	31d4 <read_AEDR+0x444>
    31d4:	ldr	r0, [fp, #-16]
    31d8:	ldr	r2, [sp, #32]
    31dc:	ldr	r3, [sp, #36]	; 0x24
    31e0:	ldr	r1, [fp, #8]
    31e4:	ldr	ip, [fp, #12]
    31e8:	mov	lr, sp
    31ec:	str	ip, [lr, #4]
    31f0:	str	r1, [lr]
    31f4:	bl	2d90 <read_AEDR>
    31f8:	cmp	r0, #0
    31fc:	beq	320c <read_AEDR+0x47c>
    3200:	mvn	r0, #0
    3204:	str	r0, [fp, #-12]
    3208:	b	3214 <read_AEDR+0x484>
    320c:	movw	r0, #0
    3210:	str	r0, [fp, #-12]
    3214:	ldr	r0, [fp, #-12]
    3218:	sub	sp, fp, #8
    321c:	pop	{r4, sl, fp, pc}
    3220:	.word	0xfffffed4

00003224 <read_attribute>:
    3224:	push	{r4, sl, fp, lr}
    3228:	add	fp, sp, #8
    322c:	sub	sp, sp, #64	; 0x40
    3230:	ldr	r1, [fp, #16]
    3234:	ldr	ip, [fp, #12]
    3238:	ldr	lr, [fp, #8]
    323c:	str	r0, [fp, #-16]
    3240:	str	r3, [fp, #-20]	; 0xffffffec
    3244:	str	r2, [fp, #-24]	; 0xffffffe8
    3248:	ldr	r0, [fp, #8]
    324c:	sub	r0, r0, #1
    3250:	cmp	r0, #51	; 0x33
    3254:	str	r0, [sp, #16]
    3258:	bhi	3440 <read_attribute+0x21c>
    325c:	add	r0, pc, #8
    3260:	ldr	r1, [sp, #16]
    3264:	ldr	r0, [r0, r1, lsl #2]
    3268:	mov	pc, r0
    326c:	.word	0x0000333c
    3270:	.word	0x00003358
    3274:	.word	0x00003440
    3278:	.word	0x0000336c
    327c:	.word	0x00003440
    3280:	.word	0x00003440
    3284:	.word	0x00003440
    3288:	.word	0x00003384
    328c:	.word	0x00003440
    3290:	.word	0x00003440
    3294:	.word	0x000033a0
    3298:	.word	0x000033b8
    329c:	.word	0x00003440
    32a0:	.word	0x000033d0
    32a4:	.word	0x00003440
    32a8:	.word	0x00003440
    32ac:	.word	0x00003440
    32b0:	.word	0x00003440
    32b4:	.word	0x00003440
    32b8:	.word	0x00003440
    32bc:	.word	0x000033ec
    32c0:	.word	0x00003408
    32c4:	.word	0x00003440
    32c8:	.word	0x00003440
    32cc:	.word	0x00003440
    32d0:	.word	0x00003440
    32d4:	.word	0x00003440
    32d8:	.word	0x00003440
    32dc:	.word	0x00003440
    32e0:	.word	0x00003440
    32e4:	.word	0x00003408
    32e8:	.word	0x00003440
    32ec:	.word	0x00003384
    32f0:	.word	0x00003440
    32f4:	.word	0x00003440
    32f8:	.word	0x00003440
    32fc:	.word	0x00003440
    3300:	.word	0x00003440
    3304:	.word	0x00003440
    3308:	.word	0x00003440
    330c:	.word	0x0000333c
    3310:	.word	0x00003440
    3314:	.word	0x00003440
    3318:	.word	0x000033ec
    331c:	.word	0x00003408
    3320:	.word	0x00003440
    3324:	.word	0x00003440
    3328:	.word	0x00003440
    332c:	.word	0x00003440
    3330:	.word	0x00003440
    3334:	.word	0x00003424
    3338:	.word	0x00003424
    333c:	movw	r0, #2
    3340:	str	r0, [fp, #-28]	; 0xffffffe4
    3344:	movw	r0, #0
    3348:	str	r0, [fp, #-32]	; 0xffffffe0
    334c:	movw	r0, #1
    3350:	str	r0, [sp, #32]
    3354:	b	3460 <read_attribute+0x23c>
    3358:	movw	r0, #2
    335c:	str	r0, [fp, #-28]	; 0xffffffe4
    3360:	str	r0, [fp, #-32]	; 0xffffffe0
    3364:	str	r0, [sp, #32]
    3368:	b	3460 <read_attribute+0x23c>
    336c:	movw	r0, #2
    3370:	str	r0, [fp, #-28]	; 0xffffffe4
    3374:	movw	r0, #4
    3378:	str	r0, [fp, #-32]	; 0xffffffe0
    337c:	str	r0, [sp, #32]
    3380:	b	3460 <read_attribute+0x23c>
    3384:	movw	r0, #2
    3388:	str	r0, [fp, #-28]	; 0xffffffe4
    338c:	movw	r0, #6
    3390:	str	r0, [fp, #-32]	; 0xffffffe0
    3394:	movw	r0, #8
    3398:	str	r0, [sp, #32]
    339c:	b	3460 <read_attribute+0x23c>
    33a0:	movw	r0, #2
    33a4:	str	r0, [fp, #-28]	; 0xffffffe4
    33a8:	movw	r0, #1
    33ac:	str	r0, [fp, #-32]	; 0xffffffe0
    33b0:	str	r0, [sp, #32]
    33b4:	b	3460 <read_attribute+0x23c>
    33b8:	movw	r0, #2
    33bc:	str	r0, [fp, #-28]	; 0xffffffe4
    33c0:	movw	r1, #3
    33c4:	str	r1, [fp, #-32]	; 0xffffffe0
    33c8:	str	r0, [sp, #32]
    33cc:	b	3460 <read_attribute+0x23c>
    33d0:	movw	r0, #2
    33d4:	str	r0, [fp, #-28]	; 0xffffffe4
    33d8:	movw	r0, #5
    33dc:	str	r0, [fp, #-32]	; 0xffffffe0
    33e0:	movw	r0, #4
    33e4:	str	r0, [sp, #32]
    33e8:	b	3460 <read_attribute+0x23c>
    33ec:	movw	r0, #3
    33f0:	str	r0, [fp, #-28]	; 0xffffffe4
    33f4:	movw	r0, #8
    33f8:	str	r0, [fp, #-32]	; 0xffffffe0
    33fc:	movw	r0, #4
    3400:	str	r0, [sp, #32]
    3404:	b	3460 <read_attribute+0x23c>
    3408:	movw	r0, #3
    340c:	str	r0, [fp, #-28]	; 0xffffffe4
    3410:	movw	r0, #9
    3414:	str	r0, [fp, #-32]	; 0xffffffe0
    3418:	movw	r0, #8
    341c:	str	r0, [sp, #32]
    3420:	b	3460 <read_attribute+0x23c>
    3424:	movw	r0, #4
    3428:	str	r0, [fp, #-28]	; 0xffffffe4
    342c:	movw	r0, #11
    3430:	str	r0, [fp, #-32]	; 0xffffffe0
    3434:	ldr	r0, [fp, #12]
    3438:	str	r0, [sp, #32]
    343c:	b	3460 <read_attribute+0x23c>
    3440:	ldr	r2, [fp, #8]
    3444:	mvn	r0, #99	; 0x63
    3448:	movw	r1, #0
    344c:	movt	r1, #0
    3450:	bl	0 <coda_set_error>
    3454:	mvn	r0, #0
    3458:	str	r0, [fp, #-12]
    345c:	b	3790 <read_attribute+0x56c>
    3460:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3464:	sub	r1, r0, #2
    3468:	cmp	r1, #2
    346c:	str	r0, [sp, #12]
    3470:	bcc	3488 <read_attribute+0x264>
    3474:	b	3478 <read_attribute+0x254>
    3478:	ldr	r0, [sp, #12]
    347c:	cmp	r0, #4
    3480:	beq	349c <read_attribute+0x278>
    3484:	b	34ac <read_attribute+0x288>
    3488:	ldr	r1, [fp, #-28]	; 0xffffffe4
    348c:	movw	r0, #5
    3490:	bl	0 <coda_type_number_new>
    3494:	str	r0, [sp, #36]	; 0x24
    3498:	b	34cc <read_attribute+0x2a8>
    349c:	movw	r0, #5
    34a0:	bl	0 <coda_type_text_new>
    34a4:	str	r0, [sp, #36]	; 0x24
    34a8:	b	34cc <read_attribute+0x2a8>
    34ac:	movw	r0, #0
    34b0:	movt	r0, #0
    34b4:	movw	r1, #0
    34b8:	movt	r1, #0
    34bc:	movw	r2, #266	; 0x10a
    34c0:	movw	r3, #0
    34c4:	movt	r3, #0
    34c8:	bl	0 <__assert_fail>
    34cc:	ldr	r0, [sp, #36]	; 0x24
    34d0:	movw	r1, #0
    34d4:	cmp	r0, r1
    34d8:	bne	34e8 <read_attribute+0x2c4>
    34dc:	mvn	r0, #0
    34e0:	str	r0, [fp, #-12]
    34e4:	b	3790 <read_attribute+0x56c>
    34e8:	ldr	r0, [sp, #36]	; 0x24
    34ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
    34f0:	bl	0 <coda_type_set_read_type>
    34f4:	cmp	r0, #0
    34f8:	beq	3510 <read_attribute+0x2ec>
    34fc:	ldr	r0, [sp, #36]	; 0x24
    3500:	bl	0 <coda_type_release>
    3504:	mvn	r0, #0
    3508:	str	r0, [fp, #-12]
    350c:	b	3790 <read_attribute+0x56c>
    3510:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3514:	cmp	r0, #4
    3518:	beq	3578 <read_attribute+0x354>
    351c:	ldr	r0, [sp, #36]	; 0x24
    3520:	ldr	r1, [sp, #32]
    3524:	asr	r3, r1, #31
    3528:	mov	r2, r1
    352c:	bl	0 <coda_type_set_byte_size>
    3530:	cmp	r0, #0
    3534:	beq	354c <read_attribute+0x328>
    3538:	ldr	r0, [sp, #36]	; 0x24
    353c:	bl	0 <coda_type_release>
    3540:	mvn	r0, #0
    3544:	str	r0, [fp, #-12]
    3548:	b	3790 <read_attribute+0x56c>
    354c:	ldr	r0, [sp, #36]	; 0x24
    3550:	movw	r1, #1
    3554:	bl	0 <coda_type_number_set_endianness>
    3558:	cmp	r0, #0
    355c:	beq	3574 <read_attribute+0x350>
    3560:	ldr	r0, [sp, #36]	; 0x24
    3564:	bl	0 <coda_type_release>
    3568:	mvn	r0, #0
    356c:	str	r0, [fp, #-12]
    3570:	b	3790 <read_attribute+0x56c>
    3574:	b	3578 <read_attribute+0x354>
    3578:	ldr	r0, [fp, #12]
    357c:	cmp	r0, #1
    3580:	beq	3738 <read_attribute+0x514>
    3584:	ldr	r0, [fp, #8]
    3588:	cmp	r0, #51	; 0x33
    358c:	beq	3738 <read_attribute+0x514>
    3590:	ldr	r0, [fp, #8]
    3594:	cmp	r0, #52	; 0x34
    3598:	beq	3738 <read_attribute+0x514>
    359c:	movw	r0, #0
    35a0:	str	r0, [sp, #24]
    35a4:	movw	r0, #5
    35a8:	bl	0 <coda_type_array_new>
    35ac:	str	r0, [sp, #28]
    35b0:	ldr	r0, [sp, #28]
    35b4:	movw	r1, #0
    35b8:	cmp	r0, r1
    35bc:	bne	35d4 <read_attribute+0x3b0>
    35c0:	ldr	r0, [sp, #36]	; 0x24
    35c4:	bl	0 <coda_type_release>
    35c8:	mvn	r0, #0
    35cc:	str	r0, [fp, #-12]
    35d0:	b	3790 <read_attribute+0x56c>
    35d4:	ldr	r0, [sp, #28]
    35d8:	ldr	r1, [sp, #36]	; 0x24
    35dc:	bl	0 <coda_type_array_set_base_type>
    35e0:	cmp	r0, #0
    35e4:	beq	3604 <read_attribute+0x3e0>
    35e8:	ldr	r0, [sp, #28]
    35ec:	bl	0 <coda_type_release>
    35f0:	ldr	r0, [sp, #36]	; 0x24
    35f4:	bl	0 <coda_type_release>
    35f8:	mvn	r0, #0
    35fc:	str	r0, [fp, #-12]
    3600:	b	3790 <read_attribute+0x56c>
    3604:	ldr	r0, [sp, #36]	; 0x24
    3608:	bl	0 <coda_type_release>
    360c:	ldr	r0, [sp, #28]
    3610:	movw	r1, #0
    3614:	bl	0 <coda_type_array_add_variable_dimension>
    3618:	cmp	r0, #0
    361c:	beq	3634 <read_attribute+0x410>
    3620:	ldr	r0, [sp, #28]
    3624:	bl	0 <coda_type_release>
    3628:	mvn	r0, #0
    362c:	str	r0, [fp, #-12]
    3630:	b	3790 <read_attribute+0x56c>
    3634:	ldr	r0, [sp, #28]
    3638:	movw	r1, #0
    363c:	bl	0 <coda_mem_array_new>
    3640:	str	r0, [sp, #24]
    3644:	ldr	r0, [sp, #24]
    3648:	movw	r1, #0
    364c:	cmp	r0, r1
    3650:	bne	3668 <read_attribute+0x444>
    3654:	ldr	r0, [sp, #28]
    3658:	bl	0 <coda_type_release>
    365c:	mvn	r0, #0
    3660:	str	r0, [fp, #-12]
    3664:	b	3790 <read_attribute+0x56c>
    3668:	ldr	r0, [sp, #28]
    366c:	bl	0 <coda_type_release>
    3670:	movw	r0, #0
    3674:	str	r0, [sp, #20]
    3678:	ldr	r0, [sp, #20]
    367c:	ldr	r1, [fp, #12]
    3680:	cmp	r0, r1
    3684:	bge	3734 <read_attribute+0x510>
    3688:	ldr	r0, [fp, #-16]
    368c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3690:	ldr	r2, [fp, #-20]	; 0xffffffec
    3694:	ldr	r3, [sp, #20]
    3698:	ldr	ip, [sp, #32]
    369c:	mul	r3, r3, ip
    36a0:	adds	r1, r1, r3
    36a4:	adc	r3, r2, r3, asr #31
    36a8:	ldr	r2, [sp, #32]
    36ac:	ldr	ip, [sp, #36]	; 0x24
    36b0:	ldr	lr, [fp, #16]
    36b4:	mov	r4, sp
    36b8:	str	lr, [r4, #8]
    36bc:	str	ip, [r4, #4]
    36c0:	str	r2, [r4]
    36c4:	mov	r2, r1
    36c8:	bl	379c <read_attribute_sub>
    36cc:	cmp	r0, #0
    36d0:	beq	36e8 <read_attribute+0x4c4>
    36d4:	ldr	r0, [sp, #24]
    36d8:	bl	0 <coda_dynamic_type_delete>
    36dc:	mvn	r0, #0
    36e0:	str	r0, [fp, #-12]
    36e4:	b	3790 <read_attribute+0x56c>
    36e8:	ldr	r0, [sp, #24]
    36ec:	ldr	r1, [fp, #16]
    36f0:	ldr	r1, [r1]
    36f4:	bl	0 <coda_mem_array_add_element>
    36f8:	cmp	r0, #0
    36fc:	beq	3720 <read_attribute+0x4fc>
    3700:	ldr	r0, [sp, #24]
    3704:	bl	0 <coda_dynamic_type_delete>
    3708:	ldr	r0, [fp, #16]
    370c:	ldr	r0, [r0]
    3710:	bl	0 <coda_dynamic_type_delete>
    3714:	mvn	r0, #0
    3718:	str	r0, [fp, #-12]
    371c:	b	3790 <read_attribute+0x56c>
    3720:	b	3724 <read_attribute+0x500>
    3724:	ldr	r0, [sp, #20]
    3728:	add	r0, r0, #1
    372c:	str	r0, [sp, #20]
    3730:	b	3678 <read_attribute+0x454>
    3734:	b	3788 <read_attribute+0x564>
    3738:	ldr	r0, [fp, #-16]
    373c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3740:	ldr	r3, [fp, #-20]	; 0xffffffec
    3744:	ldr	r1, [sp, #32]
    3748:	ldr	ip, [sp, #36]	; 0x24
    374c:	ldr	lr, [fp, #16]
    3750:	mov	r4, sp
    3754:	str	lr, [r4, #8]
    3758:	str	ip, [r4, #4]
    375c:	str	r1, [r4]
    3760:	bl	379c <read_attribute_sub>
    3764:	cmp	r0, #0
    3768:	beq	3780 <read_attribute+0x55c>
    376c:	ldr	r0, [sp, #36]	; 0x24
    3770:	bl	0 <coda_type_release>
    3774:	mvn	r0, #0
    3778:	str	r0, [fp, #-12]
    377c:	b	3790 <read_attribute+0x56c>
    3780:	ldr	r0, [sp, #36]	; 0x24
    3784:	bl	0 <coda_type_release>
    3788:	movw	r0, #0
    378c:	str	r0, [fp, #-12]
    3790:	ldr	r0, [fp, #-12]
    3794:	sub	sp, fp, #8
    3798:	pop	{r4, sl, fp, pc}

0000379c <read_attribute_sub>:
    379c:	push	{r4, sl, fp, lr}
    37a0:	add	fp, sp, #8
    37a4:	sub	sp, sp, #88	; 0x58
    37a8:	ldr	r1, [fp, #16]
    37ac:	ldr	ip, [fp, #12]
    37b0:	ldr	lr, [fp, #8]
    37b4:	str	r0, [fp, #-16]
    37b8:	str	r3, [fp, #-20]	; 0xffffffec
    37bc:	str	r2, [fp, #-24]	; 0xffffffe8
    37c0:	ldr	r0, [fp, #12]
    37c4:	ldr	r0, [r0, #8]
    37c8:	cmp	r0, #4
    37cc:	bne	38b8 <read_attribute_sub+0x11c>
    37d0:	ldr	r0, [fp, #8]
    37d4:	add	r0, r0, #1
    37d8:	bl	0 <malloc>
    37dc:	str	r0, [fp, #-28]	; 0xffffffe4
    37e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    37e4:	movw	r1, #0
    37e8:	cmp	r0, r1
    37ec:	bne	3824 <read_attribute_sub+0x88>
    37f0:	ldr	r0, [fp, #8]
    37f4:	add	r2, r0, #1
    37f8:	mvn	r0, #0
    37fc:	movw	r1, #0
    3800:	movt	r1, #0
    3804:	movw	r3, #0
    3808:	movt	r3, #0
    380c:	movw	ip, #76	; 0x4c
    3810:	str	ip, [sp]
    3814:	bl	0 <coda_set_error>
    3818:	mvn	r0, #0
    381c:	str	r0, [fp, #-12]
    3820:	b	3bd0 <read_attribute_sub+0x434>
    3824:	ldr	r0, [fp, #-16]
    3828:	ldr	r0, [r0, #52]	; 0x34
    382c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3830:	ldr	r3, [fp, #-20]	; 0xffffffec
    3834:	ldr	r1, [fp, #8]
    3838:	asr	ip, r1, #31
    383c:	ldr	lr, [fp, #-28]	; 0xffffffe4
    3840:	mov	r4, sp
    3844:	str	lr, [r4, #8]
    3848:	str	ip, [r4, #4]
    384c:	str	r1, [r4]
    3850:	bl	3e4 <read_bytes>
    3854:	cmp	r0, #0
    3858:	beq	3870 <read_attribute_sub+0xd4>
    385c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3860:	bl	0 <free>
    3864:	mvn	r0, #0
    3868:	str	r0, [fp, #-12]
    386c:	b	3bd0 <read_attribute_sub+0x434>
    3870:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3874:	ldr	r1, [fp, #8]
    3878:	add	r0, r0, r1
    387c:	movw	r1, #0
    3880:	strb	r1, [r0]
    3884:	ldr	r0, [fp, #12]
    3888:	ldr	r1, [fp, #-16]
    388c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3890:	movw	r2, #0
    3894:	str	r1, [fp, #-44]	; 0xffffffd4
    3898:	mov	r1, r2
    389c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    38a0:	bl	0 <coda_mem_string_new>
    38a4:	ldr	r1, [fp, #16]
    38a8:	str	r0, [r1]
    38ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    38b0:	bl	0 <free>
    38b4:	b	3ba8 <read_attribute_sub+0x40c>
    38b8:	mov	r0, #0
    38bc:	str	r0, [fp, #-32]	; 0xffffffe0
    38c0:	ldr	r0, [fp, #-16]
    38c4:	ldr	r0, [r0, #52]	; 0x34
    38c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    38cc:	ldr	r3, [fp, #-20]	; 0xffffffec
    38d0:	ldr	r1, [fp, #8]
    38d4:	asr	ip, r1, #31
    38d8:	sub	lr, fp, #40	; 0x28
    38dc:	mov	r4, sp
    38e0:	str	lr, [r4, #8]
    38e4:	str	ip, [r4, #4]
    38e8:	str	r1, [r4]
    38ec:	bl	3e4 <read_bytes>
    38f0:	cmp	r0, #0
    38f4:	beq	3904 <read_attribute_sub+0x168>
    38f8:	mvn	r0, #0
    38fc:	str	r0, [fp, #-12]
    3900:	b	3bd0 <read_attribute_sub+0x434>
    3904:	ldr	r0, [fp, #-16]
    3908:	ldr	r0, [r0, #68]	; 0x44
    390c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    3910:	cmp	r0, r1
    3914:	bne	39a8 <read_attribute_sub+0x20c>
    3918:	ldr	r0, [fp, #8]
    391c:	sub	r0, r0, #1
    3920:	cmp	r0, #7
    3924:	str	r0, [sp, #48]	; 0x30
    3928:	bhi	3984 <read_attribute_sub+0x1e8>
    392c:	add	r0, pc, #8
    3930:	ldr	r1, [sp, #48]	; 0x30
    3934:	ldr	r0, [r0, r1, lsl #2]
    3938:	mov	pc, r0
    393c:	.word	0x0000395c
    3940:	.word	0x00003960
    3944:	.word	0x00003984
    3948:	.word	0x0000396c
    394c:	.word	0x00003984
    3950:	.word	0x00003984
    3954:	.word	0x00003984
    3958:	.word	0x00003978
    395c:	b	39a4 <read_attribute_sub+0x208>
    3960:	sub	r0, fp, #40	; 0x28
    3964:	bl	3bdc <swap2>
    3968:	b	39a4 <read_attribute_sub+0x208>
    396c:	sub	r0, fp, #40	; 0x28
    3970:	bl	638 <swap4>
    3974:	b	39a4 <read_attribute_sub+0x208>
    3978:	sub	r0, fp, #40	; 0x28
    397c:	bl	b50 <swap8>
    3980:	b	39a4 <read_attribute_sub+0x208>
    3984:	movw	r0, #0
    3988:	movt	r0, #0
    398c:	movw	r1, #0
    3990:	movt	r1, #0
    3994:	movw	r2, #129	; 0x81
    3998:	movw	r3, #0
    399c:	movt	r3, #0
    39a0:	bl	0 <__assert_fail>
    39a4:	b	39a8 <read_attribute_sub+0x20c>
    39a8:	ldr	r0, [fp, #12]
    39ac:	ldr	r0, [r0, #12]
    39b0:	cmp	r0, #9
    39b4:	str	r0, [sp, #44]	; 0x2c
    39b8:	bhi	3b84 <read_attribute_sub+0x3e8>
    39bc:	add	r0, pc, #8
    39c0:	ldr	r1, [sp, #44]	; 0x2c
    39c4:	ldr	r0, [r0, r1, lsl #2]
    39c8:	mov	pc, r0
    39cc:	.word	0x000039f4
    39d0:	.word	0x00003a20
    39d4:	.word	0x00003a4c
    39d8:	.word	0x00003a78
    39dc:	.word	0x00003aa4
    39e0:	.word	0x00003ad0
    39e4:	.word	0x00003afc
    39e8:	.word	0x00003b84
    39ec:	.word	0x00003b2c
    39f0:	.word	0x00003b58
    39f4:	ldr	r0, [fp, #12]
    39f8:	ldr	r1, [fp, #-16]
    39fc:	movw	r2, #0
    3a00:	str	r1, [sp, #40]	; 0x28
    3a04:	mov	r1, r2
    3a08:	ldr	r2, [sp, #40]	; 0x28
    3a0c:	ldrsb	r3, [fp, #-40]	; 0xffffffd8
    3a10:	bl	0 <coda_mem_int8_new>
    3a14:	ldr	r1, [fp, #16]
    3a18:	str	r0, [r1]
    3a1c:	b	3ba4 <read_attribute_sub+0x408>
    3a20:	ldr	r0, [fp, #12]
    3a24:	ldr	r1, [fp, #-16]
    3a28:	movw	r2, #0
    3a2c:	str	r1, [sp, #36]	; 0x24
    3a30:	mov	r1, r2
    3a34:	ldr	r2, [sp, #36]	; 0x24
    3a38:	ldrb	r3, [fp, #-40]	; 0xffffffd8
    3a3c:	bl	0 <coda_mem_uint8_new>
    3a40:	ldr	r1, [fp, #16]
    3a44:	str	r0, [r1]
    3a48:	b	3ba4 <read_attribute_sub+0x408>
    3a4c:	ldr	r0, [fp, #12]
    3a50:	ldr	r1, [fp, #-16]
    3a54:	movw	r2, #0
    3a58:	str	r1, [sp, #32]
    3a5c:	mov	r1, r2
    3a60:	ldr	r2, [sp, #32]
    3a64:	ldrsh	r3, [fp, #-40]	; 0xffffffd8
    3a68:	bl	0 <coda_mem_int16_new>
    3a6c:	ldr	r1, [fp, #16]
    3a70:	str	r0, [r1]
    3a74:	b	3ba4 <read_attribute_sub+0x408>
    3a78:	ldr	r0, [fp, #12]
    3a7c:	ldr	r1, [fp, #-16]
    3a80:	movw	r2, #0
    3a84:	str	r1, [sp, #28]
    3a88:	mov	r1, r2
    3a8c:	ldr	r2, [sp, #28]
    3a90:	ldrh	r3, [fp, #-40]	; 0xffffffd8
    3a94:	bl	0 <coda_mem_uint16_new>
    3a98:	ldr	r1, [fp, #16]
    3a9c:	str	r0, [r1]
    3aa0:	b	3ba4 <read_attribute_sub+0x408>
    3aa4:	ldr	r0, [fp, #12]
    3aa8:	ldr	r1, [fp, #-16]
    3aac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3ab0:	movw	r2, #0
    3ab4:	str	r1, [sp, #24]
    3ab8:	mov	r1, r2
    3abc:	ldr	r2, [sp, #24]
    3ac0:	bl	0 <coda_mem_int32_new>
    3ac4:	ldr	r1, [fp, #16]
    3ac8:	str	r0, [r1]
    3acc:	b	3ba4 <read_attribute_sub+0x408>
    3ad0:	ldr	r0, [fp, #12]
    3ad4:	ldr	r1, [fp, #-16]
    3ad8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3adc:	movw	r2, #0
    3ae0:	str	r1, [sp, #20]
    3ae4:	mov	r1, r2
    3ae8:	ldr	r2, [sp, #20]
    3aec:	bl	0 <coda_mem_uint32_new>
    3af0:	ldr	r1, [fp, #16]
    3af4:	str	r0, [r1]
    3af8:	b	3ba4 <read_attribute_sub+0x408>
    3afc:	ldr	r0, [fp, #12]
    3b00:	ldr	r2, [fp, #-16]
    3b04:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3b08:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3b0c:	mov	ip, sp
    3b10:	str	r3, [ip, #4]
    3b14:	str	r1, [ip]
    3b18:	mov	r1, #0
    3b1c:	bl	0 <coda_mem_int64_new>
    3b20:	ldr	r1, [fp, #16]
    3b24:	str	r0, [r1]
    3b28:	b	3ba4 <read_attribute_sub+0x408>
    3b2c:	ldr	r0, [fp, #12]
    3b30:	ldr	r1, [fp, #-16]
    3b34:	vldr	s0, [fp, #-40]	; 0xffffffd8
    3b38:	movw	r2, #0
    3b3c:	str	r1, [sp, #16]
    3b40:	mov	r1, r2
    3b44:	ldr	r2, [sp, #16]
    3b48:	bl	0 <coda_mem_float_new>
    3b4c:	ldr	r1, [fp, #16]
    3b50:	str	r0, [r1]
    3b54:	b	3ba4 <read_attribute_sub+0x408>
    3b58:	ldr	r0, [fp, #12]
    3b5c:	ldr	r1, [fp, #-16]
    3b60:	vldr	d0, [fp, #-40]	; 0xffffffd8
    3b64:	movw	r2, #0
    3b68:	str	r1, [sp, #12]
    3b6c:	mov	r1, r2
    3b70:	ldr	r2, [sp, #12]
    3b74:	bl	0 <coda_mem_double_new>
    3b78:	ldr	r1, [fp, #16]
    3b7c:	str	r0, [r1]
    3b80:	b	3ba4 <read_attribute_sub+0x408>
    3b84:	movw	r0, #0
    3b88:	movt	r0, #0
    3b8c:	movw	r1, #0
    3b90:	movt	r1, #0
    3b94:	movw	r2, #175	; 0xaf
    3b98:	movw	r3, #0
    3b9c:	movt	r3, #0
    3ba0:	bl	0 <__assert_fail>
    3ba4:	b	3ba8 <read_attribute_sub+0x40c>
    3ba8:	ldr	r0, [fp, #16]
    3bac:	ldr	r0, [r0]
    3bb0:	movw	r1, #0
    3bb4:	cmp	r0, r1
    3bb8:	bne	3bc8 <read_attribute_sub+0x42c>
    3bbc:	mvn	r0, #0
    3bc0:	str	r0, [fp, #-12]
    3bc4:	b	3bd0 <read_attribute_sub+0x434>
    3bc8:	movw	r0, #0
    3bcc:	str	r0, [fp, #-12]
    3bd0:	ldr	r0, [fp, #-12]
    3bd4:	sub	sp, fp, #8
    3bd8:	pop	{r4, sl, fp, pc}

00003bdc <swap2>:
    3bdc:	sub	sp, sp, #8
    3be0:	str	r0, [sp, #4]
    3be4:	ldr	r0, [sp, #4]
    3be8:	str	r0, [sp]
    3bec:	ldr	r0, [sp]
    3bf0:	ldrb	r0, [r0]
    3bf4:	ldr	r1, [sp]
    3bf8:	ldrb	r1, [r1, #1]
    3bfc:	eor	r0, r0, r1
    3c00:	ldr	r1, [sp]
    3c04:	strb	r0, [r1]
    3c08:	ldr	r0, [sp]
    3c0c:	ldrb	r0, [r0]
    3c10:	ldr	r1, [sp]
    3c14:	ldrb	r1, [r1, #1]
    3c18:	eor	r0, r0, r1
    3c1c:	ldr	r1, [sp]
    3c20:	strb	r0, [r1, #1]
    3c24:	ldr	r0, [sp]
    3c28:	ldrb	r0, [r0]
    3c2c:	ldr	r1, [sp]
    3c30:	ldrb	r1, [r1, #1]
    3c34:	eor	r0, r0, r1
    3c38:	ldr	r1, [sp]
    3c3c:	strb	r0, [r1]
    3c40:	add	sp, sp, #8
    3c44:	bx	lr
