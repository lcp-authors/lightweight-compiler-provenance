
../compcert-repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

00010ab0 <.init>:
   10ab0:	push	{r3, lr}
   10ab4:	bl	10bd8 <_start@@Base+0x3c>
   10ab8:	pop	{r3, pc}

Disassembly of section .plt:

00010abc <calloc@plt-0x14>:
   10abc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ac0:	ldr	lr, [pc, #4]	; 10acc <calloc@plt-0x4>
   10ac4:	add	lr, pc, lr
   10ac8:	ldr	pc, [lr, #8]!
   10acc:	andeq	r1, r1, r4, lsr r5

00010ad0 <calloc@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #69632	; 0x11000
   10ad8:	ldr	pc, [ip, #1332]!	; 0x534

00010adc <strcmp@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #69632	; 0x11000
   10ae4:	ldr	pc, [ip, #1324]!	; 0x52c

00010ae8 <printf@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #69632	; 0x11000
   10af0:	ldr	pc, [ip, #1316]!	; 0x524

00010af4 <free@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #69632	; 0x11000
   10afc:	ldr	pc, [ip, #1308]!	; 0x51c

00010b00 <fgets@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #69632	; 0x11000
   10b08:	ldr	pc, [ip, #1300]!	; 0x514

00010b0c <time@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1292]!	; 0x50c

00010b18 <realloc@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1284]!	; 0x504

00010b24 <strcat@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b30 <strcpy@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b3c <malloc@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b48 <__libc_start_main@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b54 <__gmon_start__@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b60 <strlen@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b6c <srand@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b78 <rand@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b84 <__isoc99_scanf@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b90 <abort@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1204]!	; 0x4b4

Disassembly of section .text:

00010b9c <_start@@Base>:
   10b9c:	mov	fp, #0
   10ba0:	mov	lr, #0
   10ba4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ba8:	mov	r2, sp
   10bac:	push	{r2}		; (str r2, [sp, #-4]!)
   10bb0:	push	{r0}		; (str r0, [sp, #-4]!)
   10bb4:	ldr	ip, [pc, #16]	; 10bcc <_start@@Base+0x30>
   10bb8:	push	{ip}		; (str ip, [sp, #-4]!)
   10bbc:	ldr	r0, [pc, #12]	; 10bd0 <_start@@Base+0x34>
   10bc0:	ldr	r3, [pc, #12]	; 10bd4 <_start@@Base+0x38>
   10bc4:	bl	10b48 <__libc_start_main@plt>
   10bc8:	bl	10b90 <abort@plt>
   10bcc:	andeq	r1, r1, r8, ror #16
   10bd0:	andeq	r0, r1, r0, lsl #26
   10bd4:	andeq	r1, r1, r8, lsl #16
   10bd8:	ldr	r3, [pc, #20]	; 10bf4 <_start@@Base+0x58>
   10bdc:	ldr	r2, [pc, #20]	; 10bf8 <_start@@Base+0x5c>
   10be0:	add	r3, pc, r3
   10be4:	ldr	r2, [r3, r2]
   10be8:	cmp	r2, #0
   10bec:	bxeq	lr
   10bf0:	b	10b54 <__gmon_start__@plt>
   10bf4:	andeq	r1, r1, r8, lsl r4
   10bf8:	andeq	r0, r0, r0, asr r0
   10bfc:	ldr	r0, [pc, #24]	; 10c1c <_start@@Base+0x80>
   10c00:	ldr	r3, [pc, #24]	; 10c20 <_start@@Base+0x84>
   10c04:	cmp	r3, r0
   10c08:	bxeq	lr
   10c0c:	ldr	r3, [pc, #16]	; 10c24 <_start@@Base+0x88>
   10c10:	cmp	r3, #0
   10c14:	bxeq	lr
   10c18:	bx	r3
   10c1c:	andeq	r2, r2, ip, asr r0
   10c20:	andeq	r2, r2, ip, asr r0
   10c24:	andeq	r0, r0, r0
   10c28:	ldr	r0, [pc, #36]	; 10c54 <_start@@Base+0xb8>
   10c2c:	ldr	r1, [pc, #36]	; 10c58 <_start@@Base+0xbc>
   10c30:	sub	r1, r1, r0
   10c34:	asr	r1, r1, #2
   10c38:	add	r1, r1, r1, lsr #31
   10c3c:	asrs	r1, r1, #1
   10c40:	bxeq	lr
   10c44:	ldr	r3, [pc, #16]	; 10c5c <_start@@Base+0xc0>
   10c48:	cmp	r3, #0
   10c4c:	bxeq	lr
   10c50:	bx	r3
   10c54:	andeq	r2, r2, ip, asr r0
   10c58:	andeq	r2, r2, ip, asr r0
   10c5c:	andeq	r0, r0, r0
   10c60:	push	{r4, lr}
   10c64:	ldr	r4, [pc, #24]	; 10c84 <_start@@Base+0xe8>
   10c68:	ldrb	r3, [r4]
   10c6c:	cmp	r3, #0
   10c70:	popne	{r4, pc}
   10c74:	bl	10bfc <_start@@Base+0x60>
   10c78:	mov	r3, #1
   10c7c:	strb	r3, [r4]
   10c80:	pop	{r4, pc}
   10c84:	andeq	r2, r2, r4, rrx
   10c88:	b	10c28 <_start@@Base+0x8c>

00010c8c <imprime@@Base>:
   10c8c:	push	{fp, lr}
   10c90:	mov	fp, sp
   10c94:	sub	sp, sp, #16
   10c98:	str	r0, [fp, #-4]
   10c9c:	movw	r0, #0
   10ca0:	str	r0, [sp, #8]
   10ca4:	ldr	r0, [sp, #8]
   10ca8:	cmp	r0, #5
   10cac:	bge	10cf8 <imprime@@Base+0x6c>
   10cb0:	ldr	r0, [sp, #8]
   10cb4:	add	r1, r0, #1
   10cb8:	ldr	r0, [fp, #-4]
   10cbc:	ldr	r2, [sp, #8]
   10cc0:	str	r1, [sp, #4]
   10cc4:	mov	r1, r2
   10cc8:	bl	110b8 <vetor_elemento@@Base>
   10ccc:	movw	r1, #6264	; 0x1878
   10cd0:	movt	r1, #1
   10cd4:	str	r0, [sp]
   10cd8:	mov	r0, r1
   10cdc:	ldr	r1, [sp, #4]
   10ce0:	ldr	r2, [sp]
   10ce4:	bl	10ae8 <printf@plt>
   10ce8:	ldr	r0, [sp, #8]
   10cec:	add	r0, r0, #1
   10cf0:	str	r0, [sp, #8]
   10cf4:	b	10ca4 <imprime@@Base+0x18>
   10cf8:	mov	sp, fp
   10cfc:	pop	{fp, pc}

00010d00 <main@@Base>:
   10d00:	push	{fp, lr}
   10d04:	mov	fp, sp
   10d08:	sub	sp, sp, #144	; 0x90
   10d0c:	movw	r0, #3704	; 0xe78
   10d10:	movt	r0, #1
   10d14:	movw	r1, #0
   10d18:	str	r1, [fp, #-4]
   10d1c:	blx	r0
   10d20:	str	r0, [sp, #32]
   10d24:	movw	r0, #0
   10d28:	str	r0, [fp, #-8]
   10d2c:	ldr	r0, [fp, #-8]
   10d30:	cmp	r0, #5
   10d34:	bge	10db0 <main@@Base+0xb0>
   10d38:	ldr	r0, [fp, #-8]
   10d3c:	add	r1, r0, #1
   10d40:	movw	r0, #6293	; 0x1895
   10d44:	movt	r0, #1
   10d48:	bl	10ae8 <printf@plt>
   10d4c:	add	r1, sp, #36	; 0x24
   10d50:	movw	r2, #8288	; 0x2060
   10d54:	movt	r2, #2
   10d58:	ldr	r2, [r2]
   10d5c:	str	r0, [sp, #28]
   10d60:	mov	r0, r1
   10d64:	movw	r1, #100	; 0x64
   10d68:	bl	10b00 <fgets@plt>
   10d6c:	add	r1, sp, #36	; 0x24
   10d70:	str	r0, [sp, #24]
   10d74:	mov	r0, r1
   10d78:	str	r1, [sp, #20]
   10d7c:	bl	10b60 <strlen@plt>
   10d80:	sub	r0, r0, #1
   10d84:	ldr	r1, [sp, #20]
   10d88:	add	r0, r1, r0
   10d8c:	movw	r2, #0
   10d90:	strb	r2, [r0]
   10d94:	ldr	r0, [sp, #32]
   10d98:	ldr	r2, [fp, #-8]
   10d9c:	bl	11124 <vetor_insere@@Base>
   10da0:	ldr	r0, [fp, #-8]
   10da4:	add	r0, r0, #1
   10da8:	str	r0, [fp, #-8]
   10dac:	b	10d2c <main@@Base+0x2c>
   10db0:	ldr	r0, [sp, #32]
   10db4:	bl	10c8c <imprime@@Base>
   10db8:	movw	r0, #6312	; 0x18a8
   10dbc:	movt	r0, #1
   10dc0:	bl	10ae8 <printf@plt>
   10dc4:	add	r1, sp, #36	; 0x24
   10dc8:	movw	r2, #6344	; 0x18c8
   10dcc:	movt	r2, #1
   10dd0:	str	r0, [sp, #16]
   10dd4:	mov	r0, r2
   10dd8:	bl	10b84 <__isoc99_scanf@plt>
   10ddc:	add	r1, sp, #36	; 0x24
   10de0:	ldr	r2, [sp, #32]
   10de4:	ldr	r3, [sp, #32]
   10de8:	str	r0, [sp, #12]
   10dec:	mov	r0, r3
   10df0:	str	r2, [sp, #8]
   10df4:	bl	113bc <vetor_pesquisa@@Base>
   10df8:	ldr	r1, [sp, #8]
   10dfc:	str	r0, [sp, #4]
   10e00:	mov	r0, r1
   10e04:	ldr	r1, [sp, #4]
   10e08:	bl	112e0 <vetor_remove@@Base>
   10e0c:	cmp	r0, #0
   10e10:	beq	10e24 <main@@Base+0x124>
   10e14:	movw	r0, #6347	; 0x18cb
   10e18:	movt	r0, #1
   10e1c:	bl	10ae8 <printf@plt>
   10e20:	b	10e2c <main@@Base+0x12c>
   10e24:	ldr	r0, [sp, #32]
   10e28:	bl	10c8c <imprime@@Base>
   10e2c:	ldr	r0, [sp, #32]
   10e30:	bl	11460 <vetor_ordena@@Base>
   10e34:	cmp	r0, #0
   10e38:	beq	10e48 <main@@Base+0x148>
   10e3c:	movw	r0, #6370	; 0x18e2
   10e40:	movt	r0, #1
   10e44:	bl	10ae8 <printf@plt>
   10e48:	movw	r0, #6404	; 0x1904
   10e4c:	movt	r0, #1
   10e50:	bl	10ae8 <printf@plt>
   10e54:	ldr	r1, [sp, #32]
   10e58:	str	r0, [sp]
   10e5c:	mov	r0, r1
   10e60:	bl	10c8c <imprime@@Base>
   10e64:	ldr	r0, [sp, #32]
   10e68:	bl	10edc <vetor_apaga@@Base>
   10e6c:	movw	r0, #0
   10e70:	mov	sp, fp
   10e74:	pop	{fp, pc}

00010e78 <vetor_novo@@Base>:
   10e78:	push	{fp, lr}
   10e7c:	mov	fp, sp
   10e80:	sub	sp, sp, #8
   10e84:	movw	r0, #12
   10e88:	bl	10b3c <malloc@plt>
   10e8c:	str	r0, [sp]
   10e90:	ldr	r0, [sp]
   10e94:	movw	r1, #0
   10e98:	cmp	r0, r1
   10e9c:	bne	10eac <vetor_novo@@Base+0x34>
   10ea0:	movw	r0, #0
   10ea4:	str	r0, [sp, #4]
   10ea8:	b	10ed0 <vetor_novo@@Base+0x58>
   10eac:	ldr	r0, [sp]
   10eb0:	movw	r1, #0
   10eb4:	str	r1, [r0]
   10eb8:	ldr	r0, [sp]
   10ebc:	str	r1, [r0, #4]
   10ec0:	ldr	r0, [sp]
   10ec4:	str	r1, [r0, #8]
   10ec8:	ldr	r0, [sp]
   10ecc:	str	r0, [sp, #4]
   10ed0:	ldr	r0, [sp, #4]
   10ed4:	mov	sp, fp
   10ed8:	pop	{fp, pc}

00010edc <vetor_apaga@@Base>:
   10edc:	push	{fp, lr}
   10ee0:	mov	fp, sp
   10ee4:	sub	sp, sp, #8
   10ee8:	str	r0, [sp, #4]
   10eec:	ldr	r0, [sp, #4]
   10ef0:	movw	r1, #0
   10ef4:	cmp	r0, r1
   10ef8:	bne	10f00 <vetor_apaga@@Base+0x24>
   10efc:	b	10f58 <vetor_apaga@@Base+0x7c>
   10f00:	movw	r0, #0
   10f04:	str	r0, [sp]
   10f08:	ldr	r0, [sp]
   10f0c:	ldr	r1, [sp, #4]
   10f10:	ldr	r1, [r1]
   10f14:	cmp	r0, r1
   10f18:	bge	10f44 <vetor_apaga@@Base+0x68>
   10f1c:	ldr	r0, [sp, #4]
   10f20:	ldr	r0, [r0, #8]
   10f24:	ldr	r1, [sp]
   10f28:	add	r0, r0, r1, lsl #2
   10f2c:	ldr	r0, [r0]
   10f30:	bl	10af4 <free@plt>
   10f34:	ldr	r0, [sp]
   10f38:	add	r0, r0, #1
   10f3c:	str	r0, [sp]
   10f40:	b	10f08 <vetor_apaga@@Base+0x2c>
   10f44:	ldr	r0, [sp, #4]
   10f48:	ldr	r0, [r0, #8]
   10f4c:	bl	10af4 <free@plt>
   10f50:	ldr	r0, [sp, #4]
   10f54:	bl	10af4 <free@plt>
   10f58:	mov	sp, fp
   10f5c:	pop	{fp, pc}

00010f60 <vetor_atribui@@Base>:
   10f60:	push	{fp, lr}
   10f64:	mov	fp, sp
   10f68:	sub	sp, sp, #24
   10f6c:	str	r0, [fp, #-8]
   10f70:	str	r1, [sp, #12]
   10f74:	str	r2, [sp, #8]
   10f78:	ldr	r0, [fp, #-8]
   10f7c:	movw	r1, #0
   10f80:	cmp	r0, r1
   10f84:	beq	10fa8 <vetor_atribui@@Base+0x48>
   10f88:	ldr	r0, [sp, #12]
   10f8c:	cmp	r0, #0
   10f90:	blt	10fa8 <vetor_atribui@@Base+0x48>
   10f94:	ldr	r0, [sp, #12]
   10f98:	ldr	r1, [fp, #-8]
   10f9c:	ldr	r1, [r1]
   10fa0:	cmp	r0, r1
   10fa4:	blt	10fb4 <vetor_atribui@@Base+0x54>
   10fa8:	mvn	r0, #0
   10fac:	str	r0, [fp, #-4]
   10fb0:	b	11070 <vetor_atribui@@Base+0x110>
   10fb4:	ldr	r0, [sp, #8]
   10fb8:	bl	10b60 <strlen@plt>
   10fbc:	str	r0, [sp, #4]
   10fc0:	ldr	r0, [sp, #4]
   10fc4:	ldr	r1, [fp, #-8]
   10fc8:	ldr	r1, [r1, #8]
   10fcc:	ldr	r2, [sp, #12]
   10fd0:	add	r1, r1, r2, lsl #2
   10fd4:	ldr	r1, [r1]
   10fd8:	str	r0, [sp]
   10fdc:	mov	r0, r1
   10fe0:	bl	10b60 <strlen@plt>
   10fe4:	ldr	r1, [sp]
   10fe8:	cmp	r1, r0
   10fec:	bls	1104c <vetor_atribui@@Base+0xec>
   10ff0:	ldr	r0, [fp, #-8]
   10ff4:	ldr	r0, [r0, #8]
   10ff8:	ldr	r1, [sp, #12]
   10ffc:	ldr	r0, [r0, r1, lsl #2]
   11000:	ldr	r1, [sp, #4]
   11004:	add	r1, r1, #1
   11008:	bl	10b18 <realloc@plt>
   1100c:	ldr	r1, [fp, #-8]
   11010:	ldr	r1, [r1, #8]
   11014:	ldr	r2, [sp, #12]
   11018:	str	r0, [r1, r2, lsl #2]
   1101c:	ldr	r0, [fp, #-8]
   11020:	ldr	r0, [r0, #8]
   11024:	ldr	r1, [sp, #12]
   11028:	add	r0, r0, r1, lsl #2
   1102c:	ldr	r0, [r0]
   11030:	movw	r1, #0
   11034:	cmp	r0, r1
   11038:	bne	11048 <vetor_atribui@@Base+0xe8>
   1103c:	mvn	r0, #0
   11040:	str	r0, [fp, #-4]
   11044:	b	11070 <vetor_atribui@@Base+0x110>
   11048:	b	1104c <vetor_atribui@@Base+0xec>
   1104c:	ldr	r0, [fp, #-8]
   11050:	ldr	r0, [r0, #8]
   11054:	ldr	r1, [sp, #12]
   11058:	add	r0, r0, r1, lsl #2
   1105c:	ldr	r0, [r0]
   11060:	ldr	r1, [sp, #8]
   11064:	bl	10b30 <strcpy@plt>
   11068:	ldr	r1, [sp, #12]
   1106c:	str	r1, [fp, #-4]
   11070:	ldr	r0, [fp, #-4]
   11074:	mov	sp, fp
   11078:	pop	{fp, pc}

0001107c <vetor_tamanho@@Base>:
   1107c:	sub	sp, sp, #8
   11080:	str	r0, [sp]
   11084:	ldr	r0, [sp]
   11088:	movw	r1, #0
   1108c:	cmp	r0, r1
   11090:	bne	110a0 <vetor_tamanho@@Base+0x24>
   11094:	mvn	r0, #0
   11098:	str	r0, [sp, #4]
   1109c:	b	110ac <vetor_tamanho@@Base+0x30>
   110a0:	ldr	r0, [sp]
   110a4:	ldr	r0, [r0]
   110a8:	str	r0, [sp, #4]
   110ac:	ldr	r0, [sp, #4]
   110b0:	add	sp, sp, #8
   110b4:	bx	lr

000110b8 <vetor_elemento@@Base>:
   110b8:	sub	sp, sp, #12
   110bc:	str	r0, [sp, #4]
   110c0:	str	r1, [sp]
   110c4:	ldr	r0, [sp, #4]
   110c8:	movw	r1, #0
   110cc:	cmp	r0, r1
   110d0:	beq	110f4 <vetor_elemento@@Base+0x3c>
   110d4:	ldr	r0, [sp]
   110d8:	cmp	r0, #0
   110dc:	blt	110f4 <vetor_elemento@@Base+0x3c>
   110e0:	ldr	r0, [sp]
   110e4:	ldr	r1, [sp, #4]
   110e8:	ldr	r1, [r1]
   110ec:	cmp	r0, r1
   110f0:	blt	11100 <vetor_elemento@@Base+0x48>
   110f4:	movw	r0, #0
   110f8:	str	r0, [sp, #8]
   110fc:	b	11118 <vetor_elemento@@Base+0x60>
   11100:	ldr	r0, [sp, #4]
   11104:	ldr	r0, [r0, #8]
   11108:	ldr	r1, [sp]
   1110c:	add	r0, r0, r1, lsl #2
   11110:	ldr	r0, [r0]
   11114:	str	r0, [sp, #8]
   11118:	ldr	r0, [sp, #8]
   1111c:	add	sp, sp, #12
   11120:	bx	lr

00011124 <vetor_insere@@Base>:
   11124:	push	{fp, lr}
   11128:	mov	fp, sp
   1112c:	sub	sp, sp, #24
   11130:	str	r0, [fp, #-8]
   11134:	str	r1, [sp, #12]
   11138:	str	r2, [sp, #8]
   1113c:	ldr	r0, [fp, #-8]
   11140:	movw	r1, #0
   11144:	cmp	r0, r1
   11148:	beq	1116c <vetor_insere@@Base+0x48>
   1114c:	ldr	r0, [sp, #8]
   11150:	cmp	r0, #0
   11154:	blt	1116c <vetor_insere@@Base+0x48>
   11158:	ldr	r0, [sp, #8]
   1115c:	ldr	r1, [fp, #-8]
   11160:	ldr	r1, [r1]
   11164:	cmp	r0, r1
   11168:	ble	11178 <vetor_insere@@Base+0x54>
   1116c:	mvn	r0, #0
   11170:	str	r0, [fp, #-4]
   11174:	b	112d4 <vetor_insere@@Base+0x1b0>
   11178:	ldr	r0, [fp, #-8]
   1117c:	ldr	r0, [r0]
   11180:	ldr	r1, [fp, #-8]
   11184:	ldr	r1, [r1, #4]
   11188:	cmp	r0, r1
   1118c:	bne	11200 <vetor_insere@@Base+0xdc>
   11190:	ldr	r0, [fp, #-8]
   11194:	ldr	r0, [r0, #4]
   11198:	cmp	r0, #0
   1119c:	bne	111b0 <vetor_insere@@Base+0x8c>
   111a0:	ldr	r0, [fp, #-8]
   111a4:	movw	r1, #1
   111a8:	str	r1, [r0, #4]
   111ac:	b	111c0 <vetor_insere@@Base+0x9c>
   111b0:	ldr	r0, [fp, #-8]
   111b4:	ldr	r1, [r0, #4]
   111b8:	lsl	r1, r1, #1
   111bc:	str	r1, [r0, #4]
   111c0:	ldr	r0, [fp, #-8]
   111c4:	ldr	r1, [r0, #4]
   111c8:	ldr	r0, [r0, #8]
   111cc:	lsl	r1, r1, #2
   111d0:	bl	10b18 <realloc@plt>
   111d4:	ldr	r1, [fp, #-8]
   111d8:	str	r0, [r1, #8]
   111dc:	ldr	r0, [fp, #-8]
   111e0:	ldr	r0, [r0, #8]
   111e4:	movw	r1, #0
   111e8:	cmp	r0, r1
   111ec:	bne	111fc <vetor_insere@@Base+0xd8>
   111f0:	mvn	r0, #0
   111f4:	str	r0, [fp, #-4]
   111f8:	b	112d4 <vetor_insere@@Base+0x1b0>
   111fc:	b	11200 <vetor_insere@@Base+0xdc>
   11200:	ldr	r0, [fp, #-8]
   11204:	ldr	r0, [r0]
   11208:	sub	r0, r0, #1
   1120c:	str	r0, [sp, #4]
   11210:	ldr	r0, [sp, #4]
   11214:	ldr	r1, [sp, #8]
   11218:	cmp	r0, r1
   1121c:	blt	11250 <vetor_insere@@Base+0x12c>
   11220:	ldr	r0, [fp, #-8]
   11224:	ldr	r0, [r0, #8]
   11228:	ldr	r1, [sp, #4]
   1122c:	add	r0, r0, r1, lsl #2
   11230:	add	r1, r0, #4
   11234:	ldr	r0, [r0]
   11238:	str	r0, [r1]
   1123c:	ldr	r0, [sp, #4]
   11240:	mvn	r1, #0
   11244:	add	r0, r0, r1
   11248:	str	r0, [sp, #4]
   1124c:	b	11210 <vetor_insere@@Base+0xec>
   11250:	ldr	r0, [sp, #12]
   11254:	bl	10b60 <strlen@plt>
   11258:	add	r0, r0, #1
   1125c:	mov	r1, #1
   11260:	bl	10ad0 <calloc@plt>
   11264:	ldr	r1, [fp, #-8]
   11268:	ldr	r1, [r1, #8]
   1126c:	ldr	r2, [sp, #8]
   11270:	str	r0, [r1, r2, lsl #2]
   11274:	ldr	r0, [fp, #-8]
   11278:	ldr	r0, [r0, #8]
   1127c:	ldr	r1, [sp, #8]
   11280:	add	r0, r0, r1, lsl #2
   11284:	ldr	r0, [r0]
   11288:	movw	r1, #0
   1128c:	cmp	r0, r1
   11290:	bne	112a0 <vetor_insere@@Base+0x17c>
   11294:	mvn	r0, #0
   11298:	str	r0, [fp, #-4]
   1129c:	b	112d4 <vetor_insere@@Base+0x1b0>
   112a0:	ldr	r0, [fp, #-8]
   112a4:	ldr	r0, [r0, #8]
   112a8:	ldr	r1, [sp, #8]
   112ac:	add	r0, r0, r1, lsl #2
   112b0:	ldr	r0, [r0]
   112b4:	ldr	r1, [sp, #12]
   112b8:	bl	10b30 <strcpy@plt>
   112bc:	ldr	r1, [fp, #-8]
   112c0:	ldr	r2, [r1]
   112c4:	add	r2, r2, #1
   112c8:	str	r2, [r1]
   112cc:	ldr	r1, [sp, #8]
   112d0:	str	r1, [fp, #-4]
   112d4:	ldr	r0, [fp, #-4]
   112d8:	mov	sp, fp
   112dc:	pop	{fp, pc}

000112e0 <vetor_remove@@Base>:
   112e0:	push	{fp, lr}
   112e4:	mov	fp, sp
   112e8:	sub	sp, sp, #16
   112ec:	str	r0, [sp, #8]
   112f0:	str	r1, [sp, #4]
   112f4:	ldr	r0, [sp, #8]
   112f8:	movw	r1, #0
   112fc:	cmp	r0, r1
   11300:	beq	11324 <vetor_remove@@Base+0x44>
   11304:	ldr	r0, [sp, #4]
   11308:	cmp	r0, #0
   1130c:	blt	11324 <vetor_remove@@Base+0x44>
   11310:	ldr	r0, [sp, #4]
   11314:	ldr	r1, [sp, #8]
   11318:	ldr	r1, [r1]
   1131c:	cmp	r0, r1
   11320:	blt	11330 <vetor_remove@@Base+0x50>
   11324:	mvn	r0, #0
   11328:	str	r0, [fp, #-4]
   1132c:	b	113b0 <vetor_remove@@Base+0xd0>
   11330:	ldr	r0, [sp, #8]
   11334:	ldr	r0, [r0, #8]
   11338:	ldr	r1, [sp, #4]
   1133c:	add	r0, r0, r1, lsl #2
   11340:	ldr	r0, [r0]
   11344:	bl	10af4 <free@plt>
   11348:	ldr	r0, [sp, #4]
   1134c:	add	r0, r0, #1
   11350:	str	r0, [sp]
   11354:	ldr	r0, [sp]
   11358:	ldr	r1, [sp, #8]
   1135c:	ldr	r1, [r1]
   11360:	cmp	r0, r1
   11364:	bge	11394 <vetor_remove@@Base+0xb4>
   11368:	ldr	r0, [sp, #8]
   1136c:	ldr	r0, [r0, #8]
   11370:	ldr	r1, [sp]
   11374:	add	r0, r0, r1, lsl #2
   11378:	sub	r1, r0, #4
   1137c:	ldr	r0, [r0]
   11380:	str	r0, [r1]
   11384:	ldr	r0, [sp]
   11388:	add	r0, r0, #1
   1138c:	str	r0, [sp]
   11390:	b	11354 <vetor_remove@@Base+0x74>
   11394:	ldr	r0, [sp, #8]
   11398:	ldr	r1, [r0]
   1139c:	mvn	r2, #0
   113a0:	add	r1, r1, r2
   113a4:	str	r1, [r0]
   113a8:	movw	r0, #0
   113ac:	str	r0, [fp, #-4]
   113b0:	ldr	r0, [fp, #-4]
   113b4:	mov	sp, fp
   113b8:	pop	{fp, pc}

000113bc <vetor_pesquisa@@Base>:
   113bc:	push	{fp, lr}
   113c0:	mov	fp, sp
   113c4:	sub	sp, sp, #16
   113c8:	str	r0, [sp, #8]
   113cc:	str	r1, [sp, #4]
   113d0:	ldr	r0, [sp, #8]
   113d4:	movw	r1, #0
   113d8:	cmp	r0, r1
   113dc:	bne	113ec <vetor_pesquisa@@Base+0x30>
   113e0:	mvn	r0, #0
   113e4:	str	r0, [fp, #-4]
   113e8:	b	11454 <vetor_pesquisa@@Base+0x98>
   113ec:	movw	r0, #0
   113f0:	str	r0, [sp]
   113f4:	ldr	r0, [sp]
   113f8:	ldr	r1, [sp, #8]
   113fc:	ldr	r1, [r1]
   11400:	cmp	r0, r1
   11404:	bge	1144c <vetor_pesquisa@@Base+0x90>
   11408:	ldr	r0, [sp, #8]
   1140c:	ldr	r0, [r0, #8]
   11410:	ldr	r1, [sp]
   11414:	add	r0, r0, r1, lsl #2
   11418:	ldr	r0, [r0]
   1141c:	ldr	r1, [sp, #4]
   11420:	bl	10adc <strcmp@plt>
   11424:	cmp	r0, #0
   11428:	bne	11438 <vetor_pesquisa@@Base+0x7c>
   1142c:	ldr	r0, [sp]
   11430:	str	r0, [fp, #-4]
   11434:	b	11454 <vetor_pesquisa@@Base+0x98>
   11438:	b	1143c <vetor_pesquisa@@Base+0x80>
   1143c:	ldr	r0, [sp]
   11440:	add	r0, r0, #1
   11444:	str	r0, [sp]
   11448:	b	113f4 <vetor_pesquisa@@Base+0x38>
   1144c:	mvn	r0, #0
   11450:	str	r0, [fp, #-4]
   11454:	ldr	r0, [fp, #-4]
   11458:	mov	sp, fp
   1145c:	pop	{fp, pc}

00011460 <vetor_ordena@@Base>:
   11460:	push	{fp, lr}
   11464:	mov	fp, sp
   11468:	sub	sp, sp, #24
   1146c:	str	r0, [fp, #-8]
   11470:	ldr	r0, [fp, #-8]
   11474:	movw	r1, #0
   11478:	cmp	r0, r1
   1147c:	bne	1148c <vetor_ordena@@Base+0x2c>
   11480:	mvn	r0, #0
   11484:	str	r0, [fp, #-4]
   11488:	b	1157c <vetor_ordena@@Base+0x11c>
   1148c:	movw	r0, #1
   11490:	str	r0, [sp, #12]
   11494:	ldr	r0, [sp, #12]
   11498:	ldr	r1, [fp, #-8]
   1149c:	ldr	r1, [r1]
   114a0:	cmp	r0, r1
   114a4:	bge	11574 <vetor_ordena@@Base+0x114>
   114a8:	ldr	r0, [fp, #-8]
   114ac:	ldr	r0, [r0, #8]
   114b0:	ldr	r1, [sp, #12]
   114b4:	add	r0, r0, r1, lsl #2
   114b8:	ldr	r0, [r0]
   114bc:	str	r0, [sp, #4]
   114c0:	ldr	r0, [sp, #12]
   114c4:	str	r0, [sp, #8]
   114c8:	ldr	r0, [sp, #8]
   114cc:	cmp	r0, #0
   114d0:	movw	r0, #0
   114d4:	str	r0, [sp]
   114d8:	ble	1150c <vetor_ordena@@Base+0xac>
   114dc:	ldr	r0, [sp, #4]
   114e0:	ldr	r1, [fp, #-8]
   114e4:	ldr	r1, [r1, #8]
   114e8:	ldr	r2, [sp, #8]
   114ec:	sub	r2, r2, #1
   114f0:	add	r1, r1, r2, lsl #2
   114f4:	ldr	r1, [r1]
   114f8:	bl	10adc <strcmp@plt>
   114fc:	cmp	r0, #0
   11500:	movw	r0, #0
   11504:	movlt	r0, #1
   11508:	str	r0, [sp]
   1150c:	ldr	r0, [sp]
   11510:	tst	r0, #1
   11514:	beq	1154c <vetor_ordena@@Base+0xec>
   11518:	ldr	r0, [fp, #-8]
   1151c:	ldr	r0, [r0, #8]
   11520:	ldr	r1, [sp, #8]
   11524:	add	r2, r0, r1, lsl #2
   11528:	sub	r1, r1, #1
   1152c:	add	r0, r0, r1, lsl #2
   11530:	ldr	r0, [r0]
   11534:	str	r0, [r2]
   11538:	ldr	r0, [sp, #8]
   1153c:	mvn	r1, #0
   11540:	add	r0, r0, r1
   11544:	str	r0, [sp, #8]
   11548:	b	114c8 <vetor_ordena@@Base+0x68>
   1154c:	ldr	r0, [sp, #4]
   11550:	ldr	r1, [fp, #-8]
   11554:	ldr	r1, [r1, #8]
   11558:	ldr	r2, [sp, #8]
   1155c:	add	r1, r1, r2, lsl #2
   11560:	str	r0, [r1]
   11564:	ldr	r0, [sp, #12]
   11568:	add	r0, r0, #1
   1156c:	str	r0, [sp, #12]
   11570:	b	11494 <vetor_ordena@@Base+0x34>
   11574:	movw	r0, #0
   11578:	str	r0, [fp, #-4]
   1157c:	ldr	r0, [fp, #-4]
   11580:	mov	sp, fp
   11584:	pop	{fp, pc}

00011588 <vetor_concatena@@Base>:
   11588:	push	{fp, lr}
   1158c:	mov	fp, sp
   11590:	sub	sp, sp, #24
   11594:	str	r0, [fp, #-8]
   11598:	str	r1, [sp, #12]
   1159c:	ldr	r0, [fp, #-8]
   115a0:	movw	r1, #0
   115a4:	cmp	r0, r1
   115a8:	beq	115bc <vetor_concatena@@Base+0x34>
   115ac:	ldr	r0, [sp, #12]
   115b0:	movw	r1, #0
   115b4:	cmp	r0, r1
   115b8:	bne	115c8 <vetor_concatena@@Base+0x40>
   115bc:	movw	r0, #0
   115c0:	str	r0, [fp, #-4]
   115c4:	b	11654 <vetor_concatena@@Base+0xcc>
   115c8:	bl	10e78 <vetor_novo@@Base>
   115cc:	str	r0, [sp, #8]
   115d0:	ldr	r0, [fp, #-8]
   115d4:	ldr	r0, [r0]
   115d8:	ldr	r1, [sp, #12]
   115dc:	ldr	r1, [r1]
   115e0:	add	r0, r0, r1, lsl #2
   115e4:	ldr	r1, [sp, #8]
   115e8:	str	r0, [r1, #8]
   115ec:	ldr	r0, [fp, #-8]
   115f0:	ldr	r0, [r0, #4]
   115f4:	ldr	r1, [sp, #12]
   115f8:	ldr	r1, [r1, #4]
   115fc:	add	r0, r0, r1
   11600:	ldr	r1, [sp, #8]
   11604:	str	r0, [r1, #4]
   11608:	ldr	r0, [sp, #8]
   1160c:	ldr	r0, [r0, #8]
   11610:	ldr	r0, [r0]
   11614:	ldr	r1, [fp, #-8]
   11618:	ldr	r1, [r1, #8]
   1161c:	ldr	r1, [r1]
   11620:	bl	10b30 <strcpy@plt>
   11624:	ldr	r1, [sp, #8]
   11628:	ldr	r1, [r1, #8]
   1162c:	ldr	r1, [r1]
   11630:	ldr	r2, [sp, #12]
   11634:	ldr	r2, [r2, #8]
   11638:	ldr	r2, [r2]
   1163c:	str	r0, [sp, #4]
   11640:	mov	r0, r1
   11644:	mov	r1, r2
   11648:	bl	10b24 <strcat@plt>
   1164c:	ldr	r1, [sp, #8]
   11650:	str	r1, [fp, #-4]
   11654:	ldr	r0, [fp, #-4]
   11658:	mov	sp, fp
   1165c:	pop	{fp, pc}

00011660 <vetor_inverte@@Base>:
   11660:	push	{fp, lr}
   11664:	mov	fp, sp
   11668:	sub	sp, sp, #24
   1166c:	str	r0, [fp, #-4]
   11670:	ldr	r0, [fp, #-4]
   11674:	bl	1107c <vetor_tamanho@@Base>
   11678:	str	r0, [fp, #-8]
   1167c:	ldr	r0, [fp, #-8]
   11680:	str	r0, [sp, #8]
   11684:	ldr	r0, [fp, #-8]
   11688:	cmp	r0, #0
   1168c:	ble	1173c <vetor_inverte@@Base+0xdc>
   11690:	movw	r0, #0
   11694:	str	r0, [sp, #12]
   11698:	ldr	r0, [sp, #12]
   1169c:	ldr	r1, [fp, #-8]
   116a0:	cmp	r0, r1
   116a4:	movw	r0, #0
   116a8:	str	r0, [sp]
   116ac:	bge	116c8 <vetor_inverte@@Base+0x68>
   116b0:	ldr	r0, [sp, #12]
   116b4:	ldr	r1, [sp, #8]
   116b8:	cmp	r0, r1
   116bc:	movw	r0, #0
   116c0:	movlt	r0, #1
   116c4:	str	r0, [sp]
   116c8:	ldr	r0, [sp]
   116cc:	tst	r0, #1
   116d0:	beq	11738 <vetor_inverte@@Base+0xd8>
   116d4:	ldr	r0, [fp, #-4]
   116d8:	ldr	r0, [r0, #8]
   116dc:	ldr	r1, [sp, #12]
   116e0:	ldr	r0, [r0, r1, lsl #2]
   116e4:	str	r0, [sp, #4]
   116e8:	ldr	r0, [fp, #-4]
   116ec:	ldr	r0, [r0, #8]
   116f0:	ldr	r1, [sp, #12]
   116f4:	ldr	r2, [sp, #8]
   116f8:	ldr	r2, [r0, r2, lsl #2]
   116fc:	str	r2, [r0, r1, lsl #2]
   11700:	ldr	r0, [fp, #-4]
   11704:	ldr	r0, [r0, #8]
   11708:	ldr	r1, [sp, #8]
   1170c:	add	r0, r0, r1, lsl #2
   11710:	ldr	r1, [sp, #4]
   11714:	str	r1, [r0]
   11718:	ldr	r0, [sp, #8]
   1171c:	mvn	r1, #0
   11720:	add	r0, r0, r1
   11724:	str	r0, [sp, #8]
   11728:	ldr	r0, [sp, #12]
   1172c:	add	r0, r0, #1
   11730:	str	r0, [sp, #12]
   11734:	b	11698 <vetor_inverte@@Base+0x38>
   11738:	b	1173c <vetor_inverte@@Base+0xdc>
   1173c:	movw	r0, #0
   11740:	mov	sp, fp
   11744:	pop	{fp, pc}

00011748 <vetor_baralha@@Base>:
   11748:	push	{fp, lr}
   1174c:	mov	fp, sp
   11750:	sub	sp, sp, #32
   11754:	str	r0, [fp, #-4]
   11758:	ldr	r0, [fp, #-4]
   1175c:	ldr	r0, [r0]
   11760:	str	r0, [fp, #-12]
   11764:	bl	10e78 <vetor_novo@@Base>
   11768:	str	r0, [sp, #8]
   1176c:	add	r0, sp, #16
   11770:	bl	10b0c <time@plt>
   11774:	bl	10b6c <srand@plt>
   11778:	movw	r0, #0
   1177c:	str	r0, [fp, #-8]
   11780:	ldr	r0, [fp, #-8]
   11784:	ldr	r1, [fp, #-12]
   11788:	cmp	r0, r1
   1178c:	bge	117fc <vetor_baralha@@Base+0xb4>
   11790:	bl	10b78 <rand@plt>
   11794:	ldr	r1, [fp, #-12]
   11798:	add	r1, r1, #1
   1179c:	sdiv	r2, r0, r1
   117a0:	mls	r0, r2, r1, r0
   117a4:	str	r0, [sp, #4]
   117a8:	ldr	r0, [sp, #8]
   117ac:	ldr	r0, [r0, #8]
   117b0:	ldr	r1, [fp, #-8]
   117b4:	ldr	r0, [r0, r1, lsl #2]
   117b8:	str	r0, [sp, #12]
   117bc:	ldr	r0, [sp, #8]
   117c0:	ldr	r0, [r0, #8]
   117c4:	ldr	r1, [fp, #-8]
   117c8:	ldr	r2, [sp, #4]
   117cc:	ldr	r2, [r0, r2, lsl #2]
   117d0:	str	r2, [r0, r1, lsl #2]
   117d4:	ldr	r0, [sp, #8]
   117d8:	ldr	r0, [r0, #8]
   117dc:	ldr	r1, [sp, #4]
   117e0:	add	r0, r0, r1, lsl #2
   117e4:	ldr	r1, [sp, #12]
   117e8:	str	r1, [r0]
   117ec:	ldr	r0, [fp, #-8]
   117f0:	add	r0, r0, #1
   117f4:	str	r0, [fp, #-8]
   117f8:	b	11780 <vetor_baralha@@Base+0x38>
   117fc:	ldr	r0, [sp, #8]
   11800:	mov	sp, fp
   11804:	pop	{fp, pc}

00011808 <__libc_csu_init@@Base>:
   11808:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1180c:	mov	r7, r0
   11810:	ldr	r6, [pc, #72]	; 11860 <__libc_csu_init@@Base+0x58>
   11814:	ldr	r5, [pc, #72]	; 11864 <__libc_csu_init@@Base+0x5c>
   11818:	add	r6, pc, r6
   1181c:	add	r5, pc, r5
   11820:	sub	r6, r6, r5
   11824:	mov	r8, r1
   11828:	mov	r9, r2
   1182c:	bl	10ab0 <calloc@plt-0x20>
   11830:	asrs	r6, r6, #2
   11834:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11838:	mov	r4, #0
   1183c:	add	r4, r4, #1
   11840:	ldr	r3, [r5], #4
   11844:	mov	r2, r9
   11848:	mov	r1, r8
   1184c:	mov	r0, r7
   11850:	blx	r3
   11854:	cmp	r6, r4
   11858:	bne	1183c <__libc_csu_init@@Base+0x34>
   1185c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11860:	andeq	r0, r1, ip, ror #13
   11864:	andeq	r0, r1, r4, ror #13

00011868 <__libc_csu_fini@@Base>:
   11868:	bx	lr

Disassembly of section .fini:

0001186c <.fini>:
   1186c:	push	{r3, lr}
   11870:	pop	{r3, pc}
