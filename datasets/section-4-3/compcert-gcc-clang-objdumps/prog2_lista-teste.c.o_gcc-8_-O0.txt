
../compcert-repos/prog2/CMakeFiles/4.dir/Aula04_Listas_T1/lista-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_l>:
       0:	push	{r0, r1, r2, r3}
       4:	str	fp, [sp, #-8]!
       8:	str	lr, [sp, #4]
       c:	add	fp, sp, #4
      10:	sub	sp, sp, #24
      14:	mov	r0, #12
      18:	bl	0 <malloc>
      1c:	mov	r3, r0
      20:	str	r3, [fp, #-16]
      24:	ldr	r3, [fp, #-16]
      28:	mov	r2, #0
      2c:	str	r2, [r3]
      30:	ldr	r3, [fp, #-16]
      34:	mov	r2, #0
      38:	str	r2, [r3, #4]
      3c:	ldr	r3, [fp, #-16]
      40:	ldr	r2, [fp, #4]
      44:	str	r2, [r3, #8]
      48:	add	r3, fp, #8
      4c:	str	r3, [fp, #-24]	; 0xffffffe8
      50:	mov	r3, #0
      54:	str	r3, [fp, #-12]
      58:	b	12c <_l+0x12c>
      5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
      60:	add	r2, r3, #4
      64:	str	r2, [fp, #-24]	; 0xffffffe8
      68:	ldr	r3, [r3]
      6c:	str	r3, [fp, #-20]	; 0xffffffec
      70:	ldr	r3, [fp, #-12]
      74:	cmp	r3, #0
      78:	bne	b0 <_l+0xb0>
      7c:	mov	r0, #12
      80:	bl	0 <malloc>
      84:	mov	r3, r0
      88:	mov	r2, r3
      8c:	ldr	r3, [fp, #-16]
      90:	str	r2, [r3]
      94:	ldr	r3, [fp, #-16]
      98:	ldr	r3, [r3]
      9c:	str	r3, [fp, #-8]
      a0:	ldr	r3, [fp, #-8]
      a4:	mov	r2, #0
      a8:	str	r2, [r3, #8]
      ac:	b	e4 <_l+0xe4>
      b0:	mov	r0, #12
      b4:	bl	0 <malloc>
      b8:	mov	r3, r0
      bc:	mov	r2, r3
      c0:	ldr	r3, [fp, #-8]
      c4:	str	r2, [r3, #4]
      c8:	ldr	r3, [fp, #-8]
      cc:	ldr	r3, [r3, #4]
      d0:	ldr	r2, [fp, #-8]
      d4:	str	r2, [r3, #8]
      d8:	ldr	r3, [fp, #-8]
      dc:	ldr	r3, [r3, #4]
      e0:	str	r3, [fp, #-8]
      e4:	ldr	r0, [fp, #-20]	; 0xffffffec
      e8:	bl	0 <strlen>
      ec:	mov	r3, r0
      f0:	add	r3, r3, #1
      f4:	mov	r0, r3
      f8:	bl	0 <malloc>
      fc:	mov	r3, r0
     100:	mov	r2, r3
     104:	ldr	r3, [fp, #-8]
     108:	str	r2, [r3]
     10c:	ldr	r3, [fp, #-8]
     110:	ldr	r3, [r3]
     114:	ldr	r1, [fp, #-20]	; 0xffffffec
     118:	mov	r0, r3
     11c:	bl	0 <strcpy>
     120:	ldr	r3, [fp, #-12]
     124:	add	r3, r3, #1
     128:	str	r3, [fp, #-12]
     12c:	ldr	r2, [fp, #-12]
     130:	ldr	r3, [fp, #4]
     134:	cmp	r2, r3
     138:	blt	5c <_l+0x5c>
     13c:	ldr	r3, [fp, #-8]
     140:	mov	r2, #0
     144:	str	r2, [r3, #4]
     148:	ldr	r3, [fp, #-16]
     14c:	ldr	r2, [fp, #-8]
     150:	str	r2, [r3, #4]
     154:	ldr	r3, [fp, #-16]
     158:	mov	r0, r3
     15c:	sub	sp, fp, #4
     160:	ldr	fp, [sp]
     164:	ldr	lr, [sp, #4]
     168:	add	sp, sp, #8
     16c:	add	sp, sp, #16
     170:	bx	lr

00000174 <_f>:
     174:	push	{fp}		; (str fp, [sp, #-4]!)
     178:	add	fp, sp, #0
     17c:	sub	sp, sp, #20
     180:	str	r0, [fp, #-16]
     184:	str	r1, [fp, #-20]	; 0xffffffec
     188:	ldr	r3, [fp, #-16]
     18c:	cmp	r3, #0
     190:	bne	19c <_f+0x28>
     194:	mov	r3, #0
     198:	b	20c <_f+0x98>
     19c:	ldr	r3, [fp, #-16]
     1a0:	ldr	r3, [r3]
     1a4:	str	r3, [fp, #-12]
     1a8:	mov	r3, #0
     1ac:	str	r3, [fp, #-8]
     1b0:	b	1cc <_f+0x58>
     1b4:	ldr	r3, [fp, #-12]
     1b8:	ldr	r3, [r3, #4]
     1bc:	str	r3, [fp, #-12]
     1c0:	ldr	r3, [fp, #-8]
     1c4:	add	r3, r3, #1
     1c8:	str	r3, [fp, #-8]
     1cc:	ldr	r2, [fp, #-8]
     1d0:	ldr	r3, [fp, #-20]	; 0xffffffec
     1d4:	cmp	r2, r3
     1d8:	bge	1e8 <_f+0x74>
     1dc:	ldr	r3, [fp, #-12]
     1e0:	cmp	r3, #0
     1e4:	bne	1b4 <_f+0x40>
     1e8:	ldr	r2, [fp, #-20]	; 0xffffffec
     1ec:	ldr	r3, [fp, #-8]
     1f0:	cmp	r2, r3
     1f4:	bne	204 <_f+0x90>
     1f8:	ldr	r3, [fp, #-12]
     1fc:	ldr	r3, [r3]
     200:	b	20c <_f+0x98>
     204:	movw	r3, #0
     208:	movt	r3, #0
     20c:	mov	r0, r3
     210:	add	sp, fp, #0
     214:	pop	{fp}		; (ldr fp, [sp], #4)
     218:	bx	lr

0000021c <teste_lista_nova>:
     21c:	str	fp, [sp, #-8]!
     220:	str	lr, [sp, #4]
     224:	add	fp, sp, #4
     228:	sub	sp, sp, #8
     22c:	mov	r3, #0
     230:	str	r3, [fp, #-8]
     234:	movw	r0, #0
     238:	movt	r0, #0
     23c:	bl	0 <printf>
     240:	bl	0 <lista_nova>
     244:	str	r0, [fp, #-12]
     248:	ldr	r3, [fp, #-12]
     24c:	cmp	r3, #0
     250:	bne	298 <teste_lista_nova+0x7c>
     254:	movw	r0, #0
     258:	movt	r0, #0
     25c:	bl	0 <printf>
     260:	ldr	r3, [fp, #-8]
     264:	add	r3, r3, #1
     268:	str	r3, [fp, #-8]
     26c:	ldr	r3, [fp, #-8]
     270:	cmp	r3, #0
     274:	bne	288 <teste_lista_nova+0x6c>
     278:	movw	r0, #0
     27c:	movt	r0, #0
     280:	bl	0 <puts>
     284:	b	290 <teste_lista_nova+0x74>
     288:	mov	r0, #10
     28c:	bl	0 <putchar>
     290:	ldr	r3, [fp, #-8]
     294:	b	2f0 <teste_lista_nova+0xd4>
     298:	ldr	r3, [fp, #-12]
     29c:	ldr	r3, [r3, #8]
     2a0:	cmp	r3, #0
     2a4:	beq	2c0 <teste_lista_nova+0xa4>
     2a8:	movw	r0, #0
     2ac:	movt	r0, #0
     2b0:	bl	0 <printf>
     2b4:	ldr	r3, [fp, #-8]
     2b8:	add	r3, r3, #1
     2bc:	str	r3, [fp, #-8]
     2c0:	ldr	r0, [fp, #-12]
     2c4:	bl	0 <lista_apaga>
     2c8:	ldr	r3, [fp, #-8]
     2cc:	cmp	r3, #0
     2d0:	bne	2e4 <teste_lista_nova+0xc8>
     2d4:	movw	r0, #0
     2d8:	movt	r0, #0
     2dc:	bl	0 <puts>
     2e0:	b	2ec <teste_lista_nova+0xd0>
     2e4:	mov	r0, #10
     2e8:	bl	0 <putchar>
     2ec:	ldr	r3, [fp, #-8]
     2f0:	mov	r0, r3
     2f4:	sub	sp, fp, #4
     2f8:	ldr	fp, [sp]
     2fc:	add	sp, sp, #4
     300:	pop	{pc}		; (ldr pc, [sp], #4)

00000304 <teste_lista_insere>:
     304:	str	fp, [sp, #-8]!
     308:	str	lr, [sp, #4]
     30c:	add	fp, sp, #4
     310:	sub	sp, sp, #24
     314:	mov	r3, #0
     318:	str	r3, [fp, #-8]
     31c:	movw	r3, #0
     320:	movt	r3, #0
     324:	str	r3, [fp, #-12]
     328:	movw	r3, #0
     32c:	movt	r3, #0
     330:	str	r3, [fp, #-16]
     334:	ldr	r2, [fp, #-12]
     338:	ldr	r1, [fp, #-12]
     33c:	mov	r0, #2
     340:	bl	0 <_l>
     344:	str	r0, [fp, #-20]	; 0xffffffec
     348:	movw	r0, #0
     34c:	movt	r0, #0
     350:	bl	0 <printf>
     354:	ldr	r3, [fp, #-20]	; 0xffffffec
     358:	ldr	r3, [r3]
     35c:	ldr	r3, [r3, #4]
     360:	mov	r2, r3
     364:	ldr	r1, [fp, #-16]
     368:	ldr	r0, [fp, #-20]	; 0xffffffec
     36c:	bl	0 <lista_insere>
     370:	str	r0, [fp, #-24]	; 0xffffffe8
     374:	ldr	r3, [fp, #-24]	; 0xffffffe8
     378:	cmp	r3, #0
     37c:	bne	398 <teste_lista_insere+0x94>
     380:	movw	r0, #0
     384:	movt	r0, #0
     388:	bl	0 <printf>
     38c:	ldr	r3, [fp, #-8]
     390:	add	r3, r3, #1
     394:	str	r3, [fp, #-8]
     398:	ldr	r3, [fp, #-20]	; 0xffffffec
     39c:	ldr	r3, [r3, #8]
     3a0:	cmp	r3, #3
     3a4:	beq	3c0 <teste_lista_insere+0xbc>
     3a8:	movw	r0, #0
     3ac:	movt	r0, #0
     3b0:	bl	0 <printf>
     3b4:	ldr	r3, [fp, #-8]
     3b8:	add	r3, r3, #1
     3bc:	str	r3, [fp, #-8]
     3c0:	ldr	r3, [fp, #-20]	; 0xffffffec
     3c4:	ldr	r3, [r3, #8]
     3c8:	cmp	r3, #3
     3cc:	beq	3fc <teste_lista_insere+0xf8>
     3d0:	ldr	r3, [fp, #-8]
     3d4:	cmp	r3, #0
     3d8:	bne	3ec <teste_lista_insere+0xe8>
     3dc:	movw	r0, #0
     3e0:	movt	r0, #0
     3e4:	bl	0 <puts>
     3e8:	b	3f4 <teste_lista_insere+0xf0>
     3ec:	mov	r0, #10
     3f0:	bl	0 <putchar>
     3f4:	ldr	r3, [fp, #-8]
     3f8:	b	7bc <teste_lista_insere+0x4b8>
     3fc:	ldr	r3, [fp, #-20]	; 0xffffffec
     400:	ldr	r3, [r3]
     404:	ldr	r3, [r3]
     408:	ldr	r1, [fp, #-12]
     40c:	mov	r0, r3
     410:	bl	0 <strcmp>
     414:	mov	r3, r0
     418:	cmp	r3, #0
     41c:	bne	474 <teste_lista_insere+0x170>
     420:	ldr	r3, [fp, #-20]	; 0xffffffec
     424:	ldr	r3, [r3]
     428:	ldr	r3, [r3, #4]
     42c:	ldr	r3, [r3]
     430:	ldr	r1, [fp, #-16]
     434:	mov	r0, r3
     438:	bl	0 <strcmp>
     43c:	mov	r3, r0
     440:	cmp	r3, #0
     444:	bne	474 <teste_lista_insere+0x170>
     448:	ldr	r3, [fp, #-20]	; 0xffffffec
     44c:	ldr	r3, [r3]
     450:	ldr	r3, [r3, #4]
     454:	ldr	r3, [r3, #4]
     458:	ldr	r3, [r3]
     45c:	ldr	r1, [fp, #-12]
     460:	mov	r0, r3
     464:	bl	0 <strcmp>
     468:	mov	r3, r0
     46c:	cmp	r3, #0
     470:	beq	48c <teste_lista_insere+0x188>
     474:	movw	r0, #0
     478:	movt	r0, #0
     47c:	bl	0 <printf>
     480:	ldr	r3, [fp, #-8]
     484:	add	r3, r3, #1
     488:	str	r3, [fp, #-8]
     48c:	ldr	r3, [fp, #-20]	; 0xffffffec
     490:	ldr	r3, [r3]
     494:	mov	r2, r3
     498:	ldr	r1, [fp, #-16]
     49c:	ldr	r0, [fp, #-20]	; 0xffffffec
     4a0:	bl	0 <lista_insere>
     4a4:	str	r0, [fp, #-24]	; 0xffffffe8
     4a8:	ldr	r3, [fp, #-20]	; 0xffffffec
     4ac:	ldr	r3, [r3]
     4b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     4b4:	cmp	r2, r3
     4b8:	beq	4d4 <teste_lista_insere+0x1d0>
     4bc:	movw	r0, #0
     4c0:	movt	r0, #0
     4c4:	bl	0 <printf>
     4c8:	ldr	r3, [fp, #-8]
     4cc:	add	r3, r3, #1
     4d0:	str	r3, [fp, #-8]
     4d4:	ldr	r3, [fp, #-20]	; 0xffffffec
     4d8:	ldr	r3, [r3, #8]
     4dc:	cmp	r3, #4
     4e0:	beq	4fc <teste_lista_insere+0x1f8>
     4e4:	movw	r0, #0
     4e8:	movt	r0, #0
     4ec:	bl	0 <printf>
     4f0:	ldr	r3, [fp, #-8]
     4f4:	add	r3, r3, #1
     4f8:	str	r3, [fp, #-8]
     4fc:	ldr	r3, [fp, #-20]	; 0xffffffec
     500:	ldr	r3, [r3, #8]
     504:	cmp	r3, #4
     508:	beq	538 <teste_lista_insere+0x234>
     50c:	ldr	r3, [fp, #-8]
     510:	cmp	r3, #0
     514:	bne	528 <teste_lista_insere+0x224>
     518:	movw	r0, #0
     51c:	movt	r0, #0
     520:	bl	0 <puts>
     524:	b	530 <teste_lista_insere+0x22c>
     528:	mov	r0, #10
     52c:	bl	0 <putchar>
     530:	ldr	r3, [fp, #-8]
     534:	b	7bc <teste_lista_insere+0x4b8>
     538:	ldr	r3, [fp, #-20]	; 0xffffffec
     53c:	ldr	r3, [r3]
     540:	ldr	r3, [r3]
     544:	ldr	r1, [fp, #-16]
     548:	mov	r0, r3
     54c:	bl	0 <strcmp>
     550:	mov	r3, r0
     554:	cmp	r3, #0
     558:	bne	5e0 <teste_lista_insere+0x2dc>
     55c:	ldr	r3, [fp, #-20]	; 0xffffffec
     560:	ldr	r3, [r3]
     564:	ldr	r3, [r3, #4]
     568:	ldr	r3, [r3]
     56c:	ldr	r1, [fp, #-12]
     570:	mov	r0, r3
     574:	bl	0 <strcmp>
     578:	mov	r3, r0
     57c:	cmp	r3, #0
     580:	bne	5e0 <teste_lista_insere+0x2dc>
     584:	ldr	r3, [fp, #-20]	; 0xffffffec
     588:	ldr	r3, [r3]
     58c:	ldr	r3, [r3, #4]
     590:	ldr	r3, [r3, #4]
     594:	ldr	r3, [r3]
     598:	ldr	r1, [fp, #-16]
     59c:	mov	r0, r3
     5a0:	bl	0 <strcmp>
     5a4:	mov	r3, r0
     5a8:	cmp	r3, #0
     5ac:	bne	5e0 <teste_lista_insere+0x2dc>
     5b0:	ldr	r3, [fp, #-20]	; 0xffffffec
     5b4:	ldr	r3, [r3]
     5b8:	ldr	r3, [r3, #4]
     5bc:	ldr	r3, [r3, #4]
     5c0:	ldr	r3, [r3, #4]
     5c4:	ldr	r3, [r3]
     5c8:	ldr	r1, [fp, #-12]
     5cc:	mov	r0, r3
     5d0:	bl	0 <strcmp>
     5d4:	mov	r3, r0
     5d8:	cmp	r3, #0
     5dc:	beq	5f8 <teste_lista_insere+0x2f4>
     5e0:	movw	r0, #0
     5e4:	movt	r0, #0
     5e8:	bl	0 <printf>
     5ec:	ldr	r3, [fp, #-8]
     5f0:	add	r3, r3, #1
     5f4:	str	r3, [fp, #-8]
     5f8:	mov	r2, #0
     5fc:	movw	r1, #0
     600:	movt	r1, #0
     604:	ldr	r0, [fp, #-20]	; 0xffffffec
     608:	bl	0 <lista_insere>
     60c:	ldr	r3, [fp, #-20]	; 0xffffffec
     610:	ldr	r3, [r3, #8]
     614:	cmp	r3, #5
     618:	beq	634 <teste_lista_insere+0x330>
     61c:	movw	r0, #0
     620:	movt	r0, #0
     624:	bl	0 <printf>
     628:	ldr	r3, [fp, #-8]
     62c:	add	r3, r3, #1
     630:	str	r3, [fp, #-8]
     634:	ldr	r3, [fp, #-20]	; 0xffffffec
     638:	ldr	r3, [r3, #8]
     63c:	cmp	r3, #5
     640:	beq	670 <teste_lista_insere+0x36c>
     644:	ldr	r3, [fp, #-8]
     648:	cmp	r3, #0
     64c:	bne	660 <teste_lista_insere+0x35c>
     650:	movw	r0, #0
     654:	movt	r0, #0
     658:	bl	0 <puts>
     65c:	b	668 <teste_lista_insere+0x364>
     660:	mov	r0, #10
     664:	bl	0 <putchar>
     668:	ldr	r3, [fp, #-8]
     66c:	b	7bc <teste_lista_insere+0x4b8>
     670:	ldr	r3, [fp, #-20]	; 0xffffffec
     674:	ldr	r3, [r3]
     678:	ldr	r3, [r3, #4]
     67c:	ldr	r3, [r3, #4]
     680:	ldr	r3, [r3, #4]
     684:	ldr	r3, [r3, #4]
     688:	ldr	r3, [r3]
     68c:	movw	r1, #0
     690:	movt	r1, #0
     694:	mov	r0, r3
     698:	bl	0 <strcmp>
     69c:	mov	r3, r0
     6a0:	cmp	r3, #0
     6a4:	beq	6c0 <teste_lista_insere+0x3bc>
     6a8:	movw	r0, #0
     6ac:	movt	r0, #0
     6b0:	bl	0 <printf>
     6b4:	ldr	r3, [fp, #-8]
     6b8:	add	r3, r3, #1
     6bc:	str	r3, [fp, #-8]
     6c0:	ldr	r0, [fp, #-20]	; 0xffffffec
     6c4:	bl	0 <lista_apaga>
     6c8:	bl	0 <lista_nova>
     6cc:	str	r0, [fp, #-20]	; 0xffffffec
     6d0:	mov	r2, #0
     6d4:	movw	r1, #0
     6d8:	movt	r1, #0
     6dc:	ldr	r0, [fp, #-20]	; 0xffffffec
     6e0:	bl	0 <lista_insere>
     6e4:	ldr	r3, [fp, #-20]	; 0xffffffec
     6e8:	ldr	r3, [r3, #8]
     6ec:	cmp	r3, #1
     6f0:	beq	70c <teste_lista_insere+0x408>
     6f4:	movw	r0, #0
     6f8:	movt	r0, #0
     6fc:	bl	0 <printf>
     700:	ldr	r3, [fp, #-8]
     704:	add	r3, r3, #1
     708:	str	r3, [fp, #-8]
     70c:	ldr	r0, [fp, #-20]	; 0xffffffec
     710:	bl	0 <lista_tamanho>
     714:	mov	r3, r0
     718:	cmp	r3, #1
     71c:	beq	74c <teste_lista_insere+0x448>
     720:	ldr	r3, [fp, #-8]
     724:	cmp	r3, #0
     728:	bne	73c <teste_lista_insere+0x438>
     72c:	movw	r0, #0
     730:	movt	r0, #0
     734:	bl	0 <puts>
     738:	b	744 <teste_lista_insere+0x440>
     73c:	mov	r0, #10
     740:	bl	0 <putchar>
     744:	ldr	r3, [fp, #-8]
     748:	b	7bc <teste_lista_insere+0x4b8>
     74c:	ldr	r3, [fp, #-20]	; 0xffffffec
     750:	ldr	r3, [r3]
     754:	ldr	r3, [r3]
     758:	movw	r1, #0
     75c:	movt	r1, #0
     760:	mov	r0, r3
     764:	bl	0 <strcmp>
     768:	mov	r3, r0
     76c:	cmp	r3, #0
     770:	beq	78c <teste_lista_insere+0x488>
     774:	movw	r0, #0
     778:	movt	r0, #0
     77c:	bl	0 <printf>
     780:	ldr	r3, [fp, #-8]
     784:	add	r3, r3, #1
     788:	str	r3, [fp, #-8]
     78c:	ldr	r0, [fp, #-20]	; 0xffffffec
     790:	bl	0 <lista_apaga>
     794:	ldr	r3, [fp, #-8]
     798:	cmp	r3, #0
     79c:	bne	7b0 <teste_lista_insere+0x4ac>
     7a0:	movw	r0, #0
     7a4:	movt	r0, #0
     7a8:	bl	0 <puts>
     7ac:	b	7b8 <teste_lista_insere+0x4b4>
     7b0:	mov	r0, #10
     7b4:	bl	0 <putchar>
     7b8:	ldr	r3, [fp, #-8]
     7bc:	mov	r0, r3
     7c0:	sub	sp, fp, #4
     7c4:	ldr	fp, [sp]
     7c8:	add	sp, sp, #4
     7cc:	pop	{pc}		; (ldr pc, [sp], #4)

000007d0 <teste_lista_remove>:
     7d0:	str	fp, [sp, #-8]!
     7d4:	str	lr, [sp, #4]
     7d8:	add	fp, sp, #4
     7dc:	sub	sp, sp, #24
     7e0:	mov	r3, #0
     7e4:	str	r3, [fp, #-8]
     7e8:	movw	r3, #0
     7ec:	movt	r3, #0
     7f0:	str	r3, [sp, #4]
     7f4:	movw	r3, #0
     7f8:	movt	r3, #0
     7fc:	str	r3, [sp]
     800:	movw	r3, #0
     804:	movt	r3, #0
     808:	movw	r2, #0
     80c:	movt	r2, #0
     810:	movw	r1, #0
     814:	movt	r1, #0
     818:	mov	r0, #5
     81c:	bl	0 <_l>
     820:	str	r0, [fp, #-12]
     824:	movw	r0, #0
     828:	movt	r0, #0
     82c:	bl	0 <printf>
     830:	ldr	r3, [fp, #-12]
     834:	ldr	r3, [r3]
     838:	ldr	r3, [r3, #4]
     83c:	ldr	r3, [r3, #4]
     840:	ldr	r3, [r3, #4]
     844:	mov	r1, r3
     848:	ldr	r0, [fp, #-12]
     84c:	bl	0 <lista_remove>
     850:	str	r0, [fp, #-16]
     854:	ldr	r3, [fp, #-12]
     858:	ldr	r3, [r3, #4]
     85c:	ldr	r2, [fp, #-16]
     860:	cmp	r2, r3
     864:	beq	880 <teste_lista_remove+0xb0>
     868:	movw	r0, #0
     86c:	movt	r0, #0
     870:	bl	0 <printf>
     874:	ldr	r3, [fp, #-8]
     878:	add	r3, r3, #1
     87c:	str	r3, [fp, #-8]
     880:	ldr	r3, [fp, #-12]
     884:	ldr	r3, [r3, #8]
     888:	cmp	r3, #4
     88c:	beq	8a8 <teste_lista_remove+0xd8>
     890:	movw	r0, #0
     894:	movt	r0, #0
     898:	bl	0 <printf>
     89c:	ldr	r3, [fp, #-8]
     8a0:	add	r3, r3, #1
     8a4:	str	r3, [fp, #-8]
     8a8:	ldr	r3, [fp, #-12]
     8ac:	ldr	r3, [r3]
     8b0:	ldr	r3, [r3]
     8b4:	movw	r1, #0
     8b8:	movt	r1, #0
     8bc:	mov	r0, r3
     8c0:	bl	0 <strcmp>
     8c4:	mov	r3, r0
     8c8:	cmp	r3, #0
     8cc:	bne	960 <teste_lista_remove+0x190>
     8d0:	ldr	r3, [fp, #-12]
     8d4:	ldr	r3, [r3]
     8d8:	ldr	r3, [r3, #4]
     8dc:	ldr	r3, [r3]
     8e0:	movw	r1, #0
     8e4:	movt	r1, #0
     8e8:	mov	r0, r3
     8ec:	bl	0 <strcmp>
     8f0:	mov	r3, r0
     8f4:	cmp	r3, #0
     8f8:	bne	960 <teste_lista_remove+0x190>
     8fc:	ldr	r3, [fp, #-12]
     900:	ldr	r3, [r3]
     904:	ldr	r3, [r3, #4]
     908:	ldr	r3, [r3, #4]
     90c:	ldr	r3, [r3]
     910:	movw	r1, #0
     914:	movt	r1, #0
     918:	mov	r0, r3
     91c:	bl	0 <strcmp>
     920:	mov	r3, r0
     924:	cmp	r3, #0
     928:	bne	960 <teste_lista_remove+0x190>
     92c:	ldr	r3, [fp, #-12]
     930:	ldr	r3, [r3]
     934:	ldr	r3, [r3, #4]
     938:	ldr	r3, [r3, #4]
     93c:	ldr	r3, [r3, #4]
     940:	ldr	r3, [r3]
     944:	movw	r1, #0
     948:	movt	r1, #0
     94c:	mov	r0, r3
     950:	bl	0 <strcmp>
     954:	mov	r3, r0
     958:	cmp	r3, #0
     95c:	beq	978 <teste_lista_remove+0x1a8>
     960:	movw	r0, #0
     964:	movt	r0, #0
     968:	bl	0 <printf>
     96c:	ldr	r3, [fp, #-8]
     970:	add	r3, r3, #1
     974:	str	r3, [fp, #-8]
     978:	mov	r1, #0
     97c:	ldr	r0, [fp, #-12]
     980:	bl	0 <lista_remove>
     984:	str	r0, [fp, #-16]
     988:	ldr	r3, [fp, #-16]
     98c:	cmp	r3, #0
     990:	beq	9ac <teste_lista_remove+0x1dc>
     994:	movw	r0, #0
     998:	movt	r0, #0
     99c:	bl	0 <printf>
     9a0:	ldr	r3, [fp, #-8]
     9a4:	add	r3, r3, #1
     9a8:	str	r3, [fp, #-8]
     9ac:	ldr	r0, [fp, #-12]
     9b0:	bl	0 <lista_apaga>
     9b4:	ldr	r3, [fp, #-8]
     9b8:	cmp	r3, #0
     9bc:	bne	9d0 <teste_lista_remove+0x200>
     9c0:	movw	r0, #0
     9c4:	movt	r0, #0
     9c8:	bl	0 <puts>
     9cc:	b	9d8 <teste_lista_remove+0x208>
     9d0:	mov	r0, #10
     9d4:	bl	0 <putchar>
     9d8:	ldr	r3, [fp, #-8]
     9dc:	mov	r0, r3
     9e0:	sub	sp, fp, #4
     9e4:	ldr	fp, [sp]
     9e8:	add	sp, sp, #4
     9ec:	pop	{pc}		; (ldr pc, [sp], #4)

000009f0 <teste_lista_pesquisa>:
     9f0:	str	fp, [sp, #-8]!
     9f4:	str	lr, [sp, #4]
     9f8:	add	fp, sp, #4
     9fc:	sub	sp, sp, #32
     a00:	mov	r3, #0
     a04:	str	r3, [fp, #-8]
     a08:	movw	r3, #0
     a0c:	movt	r3, #0
     a10:	str	r3, [fp, #-12]
     a14:	movw	r3, #0
     a18:	movt	r3, #0
     a1c:	str	r3, [fp, #-16]
     a20:	ldr	r3, [fp, #-12]
     a24:	str	r3, [sp, #12]
     a28:	ldr	r3, [fp, #-12]
     a2c:	str	r3, [sp, #8]
     a30:	ldr	r3, [fp, #-16]
     a34:	str	r3, [sp, #4]
     a38:	ldr	r3, [fp, #-12]
     a3c:	str	r3, [sp]
     a40:	ldr	r3, [fp, #-12]
     a44:	ldr	r2, [fp, #-12]
     a48:	ldr	r1, [fp, #-12]
     a4c:	mov	r0, #7
     a50:	bl	0 <_l>
     a54:	str	r0, [fp, #-20]	; 0xffffffec
     a58:	movw	r0, #0
     a5c:	movt	r0, #0
     a60:	bl	0 <printf>
     a64:	mov	r2, #0
     a68:	ldr	r1, [fp, #-16]
     a6c:	ldr	r0, [fp, #-20]	; 0xffffffec
     a70:	bl	0 <lista_pesquisa>
     a74:	mov	r2, r0
     a78:	ldr	r3, [fp, #-20]	; 0xffffffec
     a7c:	ldr	r3, [r3]
     a80:	ldr	r3, [r3, #4]
     a84:	ldr	r3, [r3, #4]
     a88:	ldr	r3, [r3, #4]
     a8c:	ldr	r3, [r3, #4]
     a90:	cmp	r2, r3
     a94:	beq	ab0 <teste_lista_pesquisa+0xc0>
     a98:	movw	r0, #0
     a9c:	movt	r0, #0
     aa0:	bl	0 <printf>
     aa4:	ldr	r3, [fp, #-8]
     aa8:	add	r3, r3, #1
     aac:	str	r3, [fp, #-8]
     ab0:	mov	r2, #0
     ab4:	movw	r1, #0
     ab8:	movt	r1, #0
     abc:	ldr	r0, [fp, #-20]	; 0xffffffec
     ac0:	bl	0 <lista_pesquisa>
     ac4:	mov	r3, r0
     ac8:	cmp	r3, #0
     acc:	beq	ae8 <teste_lista_pesquisa+0xf8>
     ad0:	movw	r0, #0
     ad4:	movt	r0, #0
     ad8:	bl	0 <printf>
     adc:	ldr	r3, [fp, #-8]
     ae0:	add	r3, r3, #1
     ae4:	str	r3, [fp, #-8]
     ae8:	mov	r2, #1
     aec:	ldr	r1, [fp, #-12]
     af0:	ldr	r0, [fp, #-20]	; 0xffffffec
     af4:	bl	0 <lista_pesquisa>
     af8:	mov	r2, r0
     afc:	ldr	r3, [fp, #-20]	; 0xffffffec
     b00:	ldr	r3, [r3]
     b04:	ldr	r3, [r3, #4]
     b08:	ldr	r3, [r3, #4]
     b0c:	ldr	r3, [r3, #4]
     b10:	ldr	r3, [r3, #4]
     b14:	ldr	r3, [r3, #4]
     b18:	ldr	r3, [r3, #4]
     b1c:	cmp	r2, r3
     b20:	beq	b3c <teste_lista_pesquisa+0x14c>
     b24:	movw	r0, #0
     b28:	movt	r0, #0
     b2c:	bl	0 <printf>
     b30:	ldr	r3, [fp, #-8]
     b34:	add	r3, r3, #1
     b38:	str	r3, [fp, #-8]
     b3c:	mov	r2, #1
     b40:	movw	r1, #0
     b44:	movt	r1, #0
     b48:	ldr	r0, [fp, #-20]	; 0xffffffec
     b4c:	bl	0 <lista_pesquisa>
     b50:	mov	r3, r0
     b54:	cmp	r3, #0
     b58:	beq	b74 <teste_lista_pesquisa+0x184>
     b5c:	movw	r0, #0
     b60:	movt	r0, #0
     b64:	bl	0 <printf>
     b68:	ldr	r3, [fp, #-8]
     b6c:	add	r3, r3, #1
     b70:	str	r3, [fp, #-8]
     b74:	ldr	r0, [fp, #-20]	; 0xffffffec
     b78:	bl	0 <lista_apaga>
     b7c:	ldr	r3, [fp, #-8]
     b80:	cmp	r3, #0
     b84:	bne	b98 <teste_lista_pesquisa+0x1a8>
     b88:	movw	r0, #0
     b8c:	movt	r0, #0
     b90:	bl	0 <puts>
     b94:	b	ba0 <teste_lista_pesquisa+0x1b0>
     b98:	mov	r0, #10
     b9c:	bl	0 <putchar>
     ba0:	ldr	r3, [fp, #-8]
     ba4:	mov	r0, r3
     ba8:	sub	sp, fp, #4
     bac:	ldr	fp, [sp]
     bb0:	add	sp, sp, #4
     bb4:	pop	{pc}		; (ldr pc, [sp], #4)

00000bb8 <teste_lista_ordena>:
     bb8:	str	fp, [sp, #-8]!
     bbc:	str	lr, [sp, #4]
     bc0:	add	fp, sp, #4
     bc4:	sub	sp, sp, #24
     bc8:	mov	r3, #0
     bcc:	str	r3, [fp, #-8]
     bd0:	movw	r3, #0
     bd4:	movt	r3, #0
     bd8:	str	r3, [sp, #4]
     bdc:	movw	r3, #0
     be0:	movt	r3, #0
     be4:	str	r3, [sp]
     be8:	movw	r3, #0
     bec:	movt	r3, #0
     bf0:	movw	r2, #0
     bf4:	movt	r2, #0
     bf8:	movw	r1, #0
     bfc:	movt	r1, #0
     c00:	mov	r0, #5
     c04:	bl	0 <_l>
     c08:	str	r0, [fp, #-12]
     c0c:	movw	r0, #0
     c10:	movt	r0, #0
     c14:	bl	0 <printf>
     c18:	mov	r0, #0
     c1c:	bl	0 <lista_ordena>
     c20:	str	r0, [fp, #-16]
     c24:	ldr	r3, [fp, #-16]
     c28:	cmn	r3, #1
     c2c:	beq	c48 <teste_lista_ordena+0x90>
     c30:	movw	r0, #0
     c34:	movt	r0, #0
     c38:	bl	0 <printf>
     c3c:	ldr	r3, [fp, #-8]
     c40:	add	r3, r3, #1
     c44:	str	r3, [fp, #-8]
     c48:	ldr	r0, [fp, #-12]
     c4c:	bl	0 <lista_ordena>
     c50:	ldr	r3, [fp, #-12]
     c54:	ldr	r3, [r3]
     c58:	ldr	r3, [r3]
     c5c:	movw	r1, #0
     c60:	movt	r1, #0
     c64:	mov	r0, r3
     c68:	bl	0 <strcmp>
     c6c:	mov	r3, r0
     c70:	cmp	r3, #0
     c74:	bne	d40 <teste_lista_ordena+0x188>
     c78:	ldr	r3, [fp, #-12]
     c7c:	ldr	r3, [r3]
     c80:	ldr	r3, [r3, #4]
     c84:	ldr	r3, [r3]
     c88:	movw	r1, #0
     c8c:	movt	r1, #0
     c90:	mov	r0, r3
     c94:	bl	0 <strcmp>
     c98:	mov	r3, r0
     c9c:	cmp	r3, #0
     ca0:	bne	d40 <teste_lista_ordena+0x188>
     ca4:	ldr	r3, [fp, #-12]
     ca8:	ldr	r3, [r3]
     cac:	ldr	r3, [r3, #4]
     cb0:	ldr	r3, [r3, #4]
     cb4:	ldr	r3, [r3]
     cb8:	movw	r1, #0
     cbc:	movt	r1, #0
     cc0:	mov	r0, r3
     cc4:	bl	0 <strcmp>
     cc8:	mov	r3, r0
     ccc:	cmp	r3, #0
     cd0:	bne	d40 <teste_lista_ordena+0x188>
     cd4:	ldr	r3, [fp, #-12]
     cd8:	ldr	r3, [r3]
     cdc:	ldr	r3, [r3, #4]
     ce0:	ldr	r3, [r3, #4]
     ce4:	ldr	r3, [r3, #4]
     ce8:	ldr	r3, [r3]
     cec:	movw	r1, #0
     cf0:	movt	r1, #0
     cf4:	mov	r0, r3
     cf8:	bl	0 <strcmp>
     cfc:	mov	r3, r0
     d00:	cmp	r3, #0
     d04:	bne	d40 <teste_lista_ordena+0x188>
     d08:	ldr	r3, [fp, #-12]
     d0c:	ldr	r3, [r3]
     d10:	ldr	r3, [r3, #4]
     d14:	ldr	r3, [r3, #4]
     d18:	ldr	r3, [r3, #4]
     d1c:	ldr	r3, [r3, #4]
     d20:	ldr	r3, [r3]
     d24:	movw	r1, #0
     d28:	movt	r1, #0
     d2c:	mov	r0, r3
     d30:	bl	0 <strcmp>
     d34:	mov	r3, r0
     d38:	cmp	r3, #0
     d3c:	beq	d58 <teste_lista_ordena+0x1a0>
     d40:	movw	r0, #0
     d44:	movt	r0, #0
     d48:	bl	0 <printf>
     d4c:	ldr	r3, [fp, #-8]
     d50:	add	r3, r3, #1
     d54:	str	r3, [fp, #-8]
     d58:	ldr	r3, [fp, #-12]
     d5c:	ldr	r3, [r3, #4]
     d60:	ldr	r3, [r3]
     d64:	movw	r1, #0
     d68:	movt	r1, #0
     d6c:	mov	r0, r3
     d70:	bl	0 <strcmp>
     d74:	mov	r3, r0
     d78:	cmp	r3, #0
     d7c:	bne	e48 <teste_lista_ordena+0x290>
     d80:	ldr	r3, [fp, #-12]
     d84:	ldr	r3, [r3, #4]
     d88:	ldr	r3, [r3, #8]
     d8c:	ldr	r3, [r3]
     d90:	movw	r1, #0
     d94:	movt	r1, #0
     d98:	mov	r0, r3
     d9c:	bl	0 <strcmp>
     da0:	mov	r3, r0
     da4:	cmp	r3, #0
     da8:	bne	e48 <teste_lista_ordena+0x290>
     dac:	ldr	r3, [fp, #-12]
     db0:	ldr	r3, [r3, #4]
     db4:	ldr	r3, [r3, #8]
     db8:	ldr	r3, [r3, #8]
     dbc:	ldr	r3, [r3]
     dc0:	movw	r1, #0
     dc4:	movt	r1, #0
     dc8:	mov	r0, r3
     dcc:	bl	0 <strcmp>
     dd0:	mov	r3, r0
     dd4:	cmp	r3, #0
     dd8:	bne	e48 <teste_lista_ordena+0x290>
     ddc:	ldr	r3, [fp, #-12]
     de0:	ldr	r3, [r3, #4]
     de4:	ldr	r3, [r3, #8]
     de8:	ldr	r3, [r3, #8]
     dec:	ldr	r3, [r3, #8]
     df0:	ldr	r3, [r3]
     df4:	movw	r1, #0
     df8:	movt	r1, #0
     dfc:	mov	r0, r3
     e00:	bl	0 <strcmp>
     e04:	mov	r3, r0
     e08:	cmp	r3, #0
     e0c:	bne	e48 <teste_lista_ordena+0x290>
     e10:	ldr	r3, [fp, #-12]
     e14:	ldr	r3, [r3, #4]
     e18:	ldr	r3, [r3, #8]
     e1c:	ldr	r3, [r3, #8]
     e20:	ldr	r3, [r3, #8]
     e24:	ldr	r3, [r3, #8]
     e28:	ldr	r3, [r3]
     e2c:	movw	r1, #0
     e30:	movt	r1, #0
     e34:	mov	r0, r3
     e38:	bl	0 <strcmp>
     e3c:	mov	r3, r0
     e40:	cmp	r3, #0
     e44:	beq	e60 <teste_lista_ordena+0x2a8>
     e48:	movw	r0, #0
     e4c:	movt	r0, #0
     e50:	bl	0 <printf>
     e54:	ldr	r3, [fp, #-8]
     e58:	add	r3, r3, #1
     e5c:	str	r3, [fp, #-8]
     e60:	ldr	r0, [fp, #-12]
     e64:	bl	0 <lista_apaga>
     e68:	ldr	r3, [fp, #-8]
     e6c:	cmp	r3, #0
     e70:	bne	e84 <teste_lista_ordena+0x2cc>
     e74:	movw	r0, #0
     e78:	movt	r0, #0
     e7c:	bl	0 <puts>
     e80:	b	e8c <teste_lista_ordena+0x2d4>
     e84:	mov	r0, #10
     e88:	bl	0 <putchar>
     e8c:	ldr	r3, [fp, #-8]
     e90:	mov	r0, r3
     e94:	sub	sp, fp, #4
     e98:	ldr	fp, [sp]
     e9c:	add	sp, sp, #4
     ea0:	pop	{pc}		; (ldr pc, [sp], #4)

00000ea4 <teste_lista_inverte>:
     ea4:	str	fp, [sp, #-8]!
     ea8:	str	lr, [sp, #4]
     eac:	add	fp, sp, #4
     eb0:	sub	sp, sp, #24
     eb4:	mov	r3, #0
     eb8:	str	r3, [fp, #-8]
     ebc:	movw	r3, #0
     ec0:	movt	r3, #0
     ec4:	str	r3, [sp, #4]
     ec8:	movw	r3, #0
     ecc:	movt	r3, #0
     ed0:	str	r3, [sp]
     ed4:	movw	r3, #0
     ed8:	movt	r3, #0
     edc:	movw	r2, #0
     ee0:	movt	r2, #0
     ee4:	movw	r1, #0
     ee8:	movt	r1, #0
     eec:	mov	r0, #5
     ef0:	bl	0 <_l>
     ef4:	str	r0, [fp, #-12]
     ef8:	movw	r0, #0
     efc:	movt	r0, #0
     f00:	bl	0 <printf>
     f04:	mov	r0, #0
     f08:	bl	0 <lista_inverte>
     f0c:	str	r0, [fp, #-16]
     f10:	ldr	r3, [fp, #-16]
     f14:	cmn	r3, #1
     f18:	beq	f34 <teste_lista_inverte+0x90>
     f1c:	movw	r0, #0
     f20:	movt	r0, #0
     f24:	bl	0 <printf>
     f28:	ldr	r3, [fp, #-8]
     f2c:	add	r3, r3, #1
     f30:	str	r3, [fp, #-8]
     f34:	ldr	r0, [fp, #-12]
     f38:	bl	0 <lista_inverte>
     f3c:	str	r0, [fp, #-16]
     f40:	ldr	r3, [fp, #-12]
     f44:	ldr	r3, [r3, #8]
     f48:	cmp	r3, #5
     f4c:	beq	f68 <teste_lista_inverte+0xc4>
     f50:	movw	r0, #0
     f54:	movt	r0, #0
     f58:	bl	0 <printf>
     f5c:	ldr	r3, [fp, #-8]
     f60:	add	r3, r3, #1
     f64:	str	r3, [fp, #-8]
     f68:	ldr	r3, [fp, #-12]
     f6c:	ldr	r3, [r3]
     f70:	ldr	r3, [r3]
     f74:	movw	r1, #0
     f78:	movt	r1, #0
     f7c:	mov	r0, r3
     f80:	bl	0 <strcmp>
     f84:	mov	r3, r0
     f88:	cmp	r3, #0
     f8c:	bne	1058 <teste_lista_inverte+0x1b4>
     f90:	ldr	r3, [fp, #-12]
     f94:	ldr	r3, [r3]
     f98:	ldr	r3, [r3, #4]
     f9c:	ldr	r3, [r3]
     fa0:	movw	r1, #0
     fa4:	movt	r1, #0
     fa8:	mov	r0, r3
     fac:	bl	0 <strcmp>
     fb0:	mov	r3, r0
     fb4:	cmp	r3, #0
     fb8:	bne	1058 <teste_lista_inverte+0x1b4>
     fbc:	ldr	r3, [fp, #-12]
     fc0:	ldr	r3, [r3]
     fc4:	ldr	r3, [r3, #4]
     fc8:	ldr	r3, [r3, #4]
     fcc:	ldr	r3, [r3]
     fd0:	movw	r1, #0
     fd4:	movt	r1, #0
     fd8:	mov	r0, r3
     fdc:	bl	0 <strcmp>
     fe0:	mov	r3, r0
     fe4:	cmp	r3, #0
     fe8:	bne	1058 <teste_lista_inverte+0x1b4>
     fec:	ldr	r3, [fp, #-12]
     ff0:	ldr	r3, [r3]
     ff4:	ldr	r3, [r3, #4]
     ff8:	ldr	r3, [r3, #4]
     ffc:	ldr	r3, [r3, #4]
    1000:	ldr	r3, [r3]
    1004:	movw	r1, #0
    1008:	movt	r1, #0
    100c:	mov	r0, r3
    1010:	bl	0 <strcmp>
    1014:	mov	r3, r0
    1018:	cmp	r3, #0
    101c:	bne	1058 <teste_lista_inverte+0x1b4>
    1020:	ldr	r3, [fp, #-12]
    1024:	ldr	r3, [r3]
    1028:	ldr	r3, [r3, #4]
    102c:	ldr	r3, [r3, #4]
    1030:	ldr	r3, [r3, #4]
    1034:	ldr	r3, [r3, #4]
    1038:	ldr	r3, [r3]
    103c:	movw	r1, #0
    1040:	movt	r1, #0
    1044:	mov	r0, r3
    1048:	bl	0 <strcmp>
    104c:	mov	r3, r0
    1050:	cmp	r3, #0
    1054:	beq	1070 <teste_lista_inverte+0x1cc>
    1058:	movw	r0, #0
    105c:	movt	r0, #0
    1060:	bl	0 <printf>
    1064:	ldr	r3, [fp, #-8]
    1068:	add	r3, r3, #1
    106c:	str	r3, [fp, #-8]
    1070:	ldr	r3, [fp, #-12]
    1074:	ldr	r3, [r3, #4]
    1078:	ldr	r3, [r3]
    107c:	movw	r1, #0
    1080:	movt	r1, #0
    1084:	mov	r0, r3
    1088:	bl	0 <strcmp>
    108c:	mov	r3, r0
    1090:	cmp	r3, #0
    1094:	bne	1160 <teste_lista_inverte+0x2bc>
    1098:	ldr	r3, [fp, #-12]
    109c:	ldr	r3, [r3, #4]
    10a0:	ldr	r3, [r3, #8]
    10a4:	ldr	r3, [r3]
    10a8:	movw	r1, #0
    10ac:	movt	r1, #0
    10b0:	mov	r0, r3
    10b4:	bl	0 <strcmp>
    10b8:	mov	r3, r0
    10bc:	cmp	r3, #0
    10c0:	bne	1160 <teste_lista_inverte+0x2bc>
    10c4:	ldr	r3, [fp, #-12]
    10c8:	ldr	r3, [r3, #4]
    10cc:	ldr	r3, [r3, #8]
    10d0:	ldr	r3, [r3, #8]
    10d4:	ldr	r3, [r3]
    10d8:	movw	r1, #0
    10dc:	movt	r1, #0
    10e0:	mov	r0, r3
    10e4:	bl	0 <strcmp>
    10e8:	mov	r3, r0
    10ec:	cmp	r3, #0
    10f0:	bne	1160 <teste_lista_inverte+0x2bc>
    10f4:	ldr	r3, [fp, #-12]
    10f8:	ldr	r3, [r3, #4]
    10fc:	ldr	r3, [r3, #8]
    1100:	ldr	r3, [r3, #8]
    1104:	ldr	r3, [r3, #8]
    1108:	ldr	r3, [r3]
    110c:	movw	r1, #0
    1110:	movt	r1, #0
    1114:	mov	r0, r3
    1118:	bl	0 <strcmp>
    111c:	mov	r3, r0
    1120:	cmp	r3, #0
    1124:	bne	1160 <teste_lista_inverte+0x2bc>
    1128:	ldr	r3, [fp, #-12]
    112c:	ldr	r3, [r3, #4]
    1130:	ldr	r3, [r3, #8]
    1134:	ldr	r3, [r3, #8]
    1138:	ldr	r3, [r3, #8]
    113c:	ldr	r3, [r3, #8]
    1140:	ldr	r3, [r3]
    1144:	movw	r1, #0
    1148:	movt	r1, #0
    114c:	mov	r0, r3
    1150:	bl	0 <strcmp>
    1154:	mov	r3, r0
    1158:	cmp	r3, #0
    115c:	beq	1178 <teste_lista_inverte+0x2d4>
    1160:	movw	r0, #0
    1164:	movt	r0, #0
    1168:	bl	0 <printf>
    116c:	ldr	r3, [fp, #-8]
    1170:	add	r3, r3, #1
    1174:	str	r3, [fp, #-8]
    1178:	ldr	r0, [fp, #-12]
    117c:	bl	0 <lista_apaga>
    1180:	ldr	r3, [fp, #-8]
    1184:	cmp	r3, #0
    1188:	bne	119c <teste_lista_inverte+0x2f8>
    118c:	movw	r0, #0
    1190:	movt	r0, #0
    1194:	bl	0 <puts>
    1198:	b	11a4 <teste_lista_inverte+0x300>
    119c:	mov	r0, #10
    11a0:	bl	0 <putchar>
    11a4:	ldr	r3, [fp, #-8]
    11a8:	mov	r0, r3
    11ac:	sub	sp, fp, #4
    11b0:	ldr	fp, [sp]
    11b4:	add	sp, sp, #4
    11b8:	pop	{pc}		; (ldr pc, [sp], #4)

000011bc <main>:
    11bc:	str	fp, [sp, #-8]!
    11c0:	str	lr, [sp, #4]
    11c4:	add	fp, sp, #4
    11c8:	sub	sp, sp, #8
    11cc:	movw	r3, #0
    11d0:	movt	r3, #0
    11d4:	ldr	r0, [r3]
    11d8:	mov	r3, #0
    11dc:	mov	r2, #2
    11e0:	mov	r1, #0
    11e4:	bl	0 <setvbuf>
    11e8:	movw	r3, #0
    11ec:	movt	r3, #0
    11f0:	ldr	r0, [r3]
    11f4:	mov	r3, #0
    11f8:	mov	r2, #2
    11fc:	mov	r1, #0
    1200:	bl	0 <setvbuf>
    1204:	mov	r3, #0
    1208:	str	r3, [fp, #-8]
    120c:	bl	21c <teste_lista_nova>
    1210:	mov	r2, r0
    1214:	ldr	r3, [fp, #-8]
    1218:	add	r3, r3, r2
    121c:	str	r3, [fp, #-8]
    1220:	bl	304 <teste_lista_insere>
    1224:	mov	r2, r0
    1228:	ldr	r3, [fp, #-8]
    122c:	add	r3, r3, r2
    1230:	str	r3, [fp, #-8]
    1234:	bl	7d0 <teste_lista_remove>
    1238:	mov	r2, r0
    123c:	ldr	r3, [fp, #-8]
    1240:	add	r3, r3, r2
    1244:	str	r3, [fp, #-8]
    1248:	bl	9f0 <teste_lista_pesquisa>
    124c:	mov	r2, r0
    1250:	ldr	r3, [fp, #-8]
    1254:	add	r3, r3, r2
    1258:	str	r3, [fp, #-8]
    125c:	bl	bb8 <teste_lista_ordena>
    1260:	mov	r2, r0
    1264:	ldr	r3, [fp, #-8]
    1268:	add	r3, r3, r2
    126c:	str	r3, [fp, #-8]
    1270:	bl	ea4 <teste_lista_inverte>
    1274:	mov	r2, r0
    1278:	ldr	r3, [fp, #-8]
    127c:	add	r3, r3, r2
    1280:	str	r3, [fp, #-8]
    1284:	ldr	r3, [fp, #-8]
    1288:	cmp	r3, #0
    128c:	bne	12a0 <main+0xe4>
    1290:	movw	r0, #0
    1294:	movt	r0, #0
    1298:	bl	0 <puts>
    129c:	b	12b0 <main+0xf4>
    12a0:	ldr	r1, [fp, #-8]
    12a4:	movw	r0, #0
    12a8:	movt	r0, #0
    12ac:	bl	0 <printf>
    12b0:	mov	r3, #0
    12b4:	mov	r0, r3
    12b8:	sub	sp, fp, #4
    12bc:	ldr	fp, [sp]
    12c0:	add	sp, sp, #4
    12c4:	pop	{pc}		; (ldr pc, [sp], #4)
