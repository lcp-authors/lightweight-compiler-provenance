
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json_parser.dir/test_json_parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatbuffers_uint8_cast_to_pe>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	and	r0, r0, #255	; 0xff
      14:	ldr	lr, [sp, #4]
      18:	add	sp, sp, #8
      1c:	bx	lr

00000020 <flatbuffers_uint8_write_to_pe>:
      20:	mov	ip, sp
      24:	sub	sp, sp, #16
      28:	str	ip, [sp]
      2c:	str	lr, [sp, #4]
      30:	str	r4, [sp, #8]
      34:	mov	r4, r0
      38:	and	r0, r1, #255	; 0xff
      3c:	bl	0 <flatbuffers_uint8_cast_to_pe>
      40:	and	r1, r0, #255	; 0xff
      44:	strb	r1, [r4]
      48:	ldr	r4, [sp, #8]
      4c:	ldr	lr, [sp, #4]
      50:	add	sp, sp, #16
      54:	bx	lr

00000058 <flatbuffers_uint16_cast_to_pe>:
      58:	mov	ip, sp
      5c:	sub	sp, sp, #8
      60:	str	ip, [sp]
      64:	str	lr, [sp, #4]
      68:	bic	r0, r0, #16711680	; 0xff0000
      6c:	bic	r0, r0, #-16777216	; 0xff000000
      70:	ldr	lr, [sp, #4]
      74:	add	sp, sp, #8
      78:	bx	lr

0000007c <flatbuffers_uint16_write_to_pe>:
      7c:	mov	ip, sp
      80:	sub	sp, sp, #16
      84:	str	ip, [sp]
      88:	str	lr, [sp, #4]
      8c:	str	r4, [sp, #8]
      90:	mov	r4, r0
      94:	bic	r0, r1, #16711680	; 0xff0000
      98:	bic	r0, r0, #-16777216	; 0xff000000
      9c:	bl	58 <flatbuffers_uint16_cast_to_pe>
      a0:	bic	r1, r0, #16711680	; 0xff0000
      a4:	bic	r1, r1, #-16777216	; 0xff000000
      a8:	strh	r1, [r4]
      ac:	ldr	r4, [sp, #8]
      b0:	ldr	lr, [sp, #4]
      b4:	add	sp, sp, #16
      b8:	bx	lr

000000bc <flatbuffers_uint32_cast_to_pe>:
      bc:	mov	ip, sp
      c0:	sub	sp, sp, #8
      c4:	str	ip, [sp]
      c8:	str	lr, [sp, #4]
      cc:	ldr	lr, [sp, #4]
      d0:	add	sp, sp, #8
      d4:	bx	lr

000000d8 <flatbuffers_uint32_write_to_pe>:
      d8:	mov	ip, sp
      dc:	sub	sp, sp, #16
      e0:	str	ip, [sp]
      e4:	str	lr, [sp, #4]
      e8:	str	r4, [sp, #8]
      ec:	mov	r4, r0
      f0:	mov	r0, r1
      f4:	bl	bc <flatbuffers_uint32_cast_to_pe>
      f8:	str	r0, [r4]
      fc:	ldr	r4, [sp, #8]
     100:	ldr	lr, [sp, #4]
     104:	add	sp, sp, #16
     108:	bx	lr

0000010c <flatbuffers_uint64_cast_to_pe>:
     10c:	mov	ip, sp
     110:	sub	sp, sp, #8
     114:	str	ip, [sp]
     118:	str	lr, [sp, #4]
     11c:	ldr	lr, [sp, #4]
     120:	add	sp, sp, #8
     124:	bx	lr

00000128 <flatbuffers_uint64_write_to_pe>:
     128:	mov	ip, sp
     12c:	sub	sp, sp, #16
     130:	str	ip, [sp]
     134:	str	lr, [sp, #4]
     138:	str	r4, [sp, #8]
     13c:	mov	r1, r3
     140:	mov	r4, r0
     144:	mov	r0, r2
     148:	bl	10c <flatbuffers_uint64_cast_to_pe>
     14c:	str	r0, [r4]
     150:	str	r1, [r4, #4]
     154:	ldr	r4, [sp, #8]
     158:	ldr	lr, [sp, #4]
     15c:	add	sp, sp, #16
     160:	bx	lr

00000164 <flatbuffers_int8_cast_from_pe>:
     164:	mov	ip, sp
     168:	sub	sp, sp, #8
     16c:	str	ip, [sp]
     170:	str	lr, [sp, #4]
     174:	and	r0, r0, #255	; 0xff
     178:	sbfx	r0, r0, #0, #8
     17c:	sbfx	r0, r0, #0, #8
     180:	ldr	lr, [sp, #4]
     184:	add	sp, sp, #8
     188:	bx	lr

0000018c <flatbuffers_int8_cast_to_pe>:
     18c:	mov	ip, sp
     190:	sub	sp, sp, #8
     194:	str	ip, [sp]
     198:	str	lr, [sp, #4]
     19c:	and	r0, r0, #255	; 0xff
     1a0:	sbfx	r0, r0, #0, #8
     1a4:	sbfx	r0, r0, #0, #8
     1a8:	ldr	lr, [sp, #4]
     1ac:	add	sp, sp, #8
     1b0:	bx	lr

000001b4 <flatbuffers_int8_read_from_pe>:
     1b4:	mov	ip, sp
     1b8:	sub	sp, sp, #8
     1bc:	str	ip, [sp]
     1c0:	str	lr, [sp, #4]
     1c4:	ldrsb	r0, [r0]
     1c8:	sbfx	r0, r0, #0, #8
     1cc:	bl	164 <flatbuffers_int8_cast_from_pe>
     1d0:	sbfx	r0, r0, #0, #8
     1d4:	ldr	lr, [sp, #4]
     1d8:	add	sp, sp, #8
     1dc:	bx	lr

000001e0 <flatbuffers_int8_write_to_pe>:
     1e0:	mov	ip, sp
     1e4:	sub	sp, sp, #16
     1e8:	str	ip, [sp]
     1ec:	str	lr, [sp, #4]
     1f0:	str	r4, [sp, #8]
     1f4:	mov	r4, r0
     1f8:	sbfx	r0, r1, #0, #8
     1fc:	bl	18c <flatbuffers_int8_cast_to_pe>
     200:	sbfx	r1, r0, #0, #8
     204:	strb	r1, [r4]
     208:	ldr	r4, [sp, #8]
     20c:	ldr	lr, [sp, #4]
     210:	add	sp, sp, #16
     214:	bx	lr

00000218 <flatbuffers_int16_cast_from_pe>:
     218:	mov	ip, sp
     21c:	sub	sp, sp, #8
     220:	str	ip, [sp]
     224:	str	lr, [sp, #4]
     228:	bic	r0, r0, #16711680	; 0xff0000
     22c:	bic	r0, r0, #-16777216	; 0xff000000
     230:	sbfx	r0, r0, #0, #16
     234:	sbfx	r0, r0, #0, #16
     238:	ldr	lr, [sp, #4]
     23c:	add	sp, sp, #8
     240:	bx	lr

00000244 <flatbuffers_int16_cast_to_pe>:
     244:	mov	ip, sp
     248:	sub	sp, sp, #8
     24c:	str	ip, [sp]
     250:	str	lr, [sp, #4]
     254:	bic	r0, r0, #16711680	; 0xff0000
     258:	bic	r0, r0, #-16777216	; 0xff000000
     25c:	sbfx	r0, r0, #0, #16
     260:	sbfx	r0, r0, #0, #16
     264:	ldr	lr, [sp, #4]
     268:	add	sp, sp, #8
     26c:	bx	lr

00000270 <flatbuffers_int16_read_from_pe>:
     270:	mov	ip, sp
     274:	sub	sp, sp, #8
     278:	str	ip, [sp]
     27c:	str	lr, [sp, #4]
     280:	ldrsh	r0, [r0]
     284:	sbfx	r0, r0, #0, #16
     288:	bl	218 <flatbuffers_int16_cast_from_pe>
     28c:	sbfx	r0, r0, #0, #16
     290:	ldr	lr, [sp, #4]
     294:	add	sp, sp, #8
     298:	bx	lr

0000029c <flatbuffers_int16_write_to_pe>:
     29c:	mov	ip, sp
     2a0:	sub	sp, sp, #16
     2a4:	str	ip, [sp]
     2a8:	str	lr, [sp, #4]
     2ac:	str	r4, [sp, #8]
     2b0:	mov	r4, r0
     2b4:	sbfx	r0, r1, #0, #16
     2b8:	bl	244 <flatbuffers_int16_cast_to_pe>
     2bc:	sbfx	r1, r0, #0, #16
     2c0:	strh	r1, [r4]
     2c4:	ldr	r4, [sp, #8]
     2c8:	ldr	lr, [sp, #4]
     2cc:	add	sp, sp, #16
     2d0:	bx	lr

000002d4 <flatbuffers_int32_cast_to_pe>:
     2d4:	mov	ip, sp
     2d8:	sub	sp, sp, #8
     2dc:	str	ip, [sp]
     2e0:	str	lr, [sp, #4]
     2e4:	ldr	lr, [sp, #4]
     2e8:	add	sp, sp, #8
     2ec:	bx	lr

000002f0 <flatbuffers_int32_write_to_pe>:
     2f0:	mov	ip, sp
     2f4:	sub	sp, sp, #16
     2f8:	str	ip, [sp]
     2fc:	str	lr, [sp, #4]
     300:	str	r4, [sp, #8]
     304:	mov	r4, r0
     308:	mov	r0, r1
     30c:	bl	2d4 <flatbuffers_int32_cast_to_pe>
     310:	str	r0, [r4]
     314:	ldr	r4, [sp, #8]
     318:	ldr	lr, [sp, #4]
     31c:	add	sp, sp, #16
     320:	bx	lr

00000324 <flatbuffers_int64_cast_to_pe>:
     324:	mov	ip, sp
     328:	sub	sp, sp, #8
     32c:	str	ip, [sp]
     330:	str	lr, [sp, #4]
     334:	ldr	lr, [sp, #4]
     338:	add	sp, sp, #8
     33c:	bx	lr

00000340 <flatbuffers_int64_write_to_pe>:
     340:	mov	ip, sp
     344:	sub	sp, sp, #16
     348:	str	ip, [sp]
     34c:	str	lr, [sp, #4]
     350:	str	r4, [sp, #8]
     354:	mov	r1, r3
     358:	mov	r4, r0
     35c:	mov	r0, r2
     360:	bl	324 <flatbuffers_int64_cast_to_pe>
     364:	str	r0, [r4]
     368:	str	r1, [r4, #4]
     36c:	ldr	r4, [sp, #8]
     370:	ldr	lr, [sp, #4]
     374:	add	sp, sp, #16
     378:	bx	lr

0000037c <flatbuffers_float_cast_from_pe>:
     37c:	mov	ip, sp
     380:	sub	sp, sp, #16
     384:	str	ip, [sp]
     388:	str	lr, [sp, #4]
     38c:	vstr	s0, [sp, #8]
     390:	ldr	r0, [sp, #8]
     394:	str	r0, [sp, #8]
     398:	vldr	s0, [sp, #8]
     39c:	ldr	lr, [sp, #4]
     3a0:	add	sp, sp, #16
     3a4:	bx	lr

000003a8 <flatbuffers_float_cast_to_pe>:
     3a8:	mov	ip, sp
     3ac:	sub	sp, sp, #16
     3b0:	str	ip, [sp]
     3b4:	str	lr, [sp, #4]
     3b8:	vstr	s0, [sp, #8]
     3bc:	ldr	r0, [sp, #8]
     3c0:	str	r0, [sp, #8]
     3c4:	vldr	s0, [sp, #8]
     3c8:	ldr	lr, [sp, #4]
     3cc:	add	sp, sp, #16
     3d0:	bx	lr

000003d4 <flatbuffers_float_read_from_pe>:
     3d4:	mov	ip, sp
     3d8:	sub	sp, sp, #8
     3dc:	str	ip, [sp]
     3e0:	str	lr, [sp, #4]
     3e4:	vldr	s0, [r0]
     3e8:	vmov.f32	s0, s0
     3ec:	bl	37c <flatbuffers_float_cast_from_pe>
     3f0:	ldr	lr, [sp, #4]
     3f4:	add	sp, sp, #8
     3f8:	bx	lr

000003fc <flatbuffers_float_write_to_pe>:
     3fc:	mov	ip, sp
     400:	sub	sp, sp, #16
     404:	str	ip, [sp]
     408:	str	lr, [sp, #4]
     40c:	str	r4, [sp, #8]
     410:	mov	r4, r0
     414:	vmov.f32	s0, s0
     418:	bl	3a8 <flatbuffers_float_cast_to_pe>
     41c:	vstr	s0, [r4]
     420:	ldr	r4, [sp, #8]
     424:	ldr	lr, [sp, #4]
     428:	add	sp, sp, #16
     42c:	bx	lr

00000430 <flatbuffers_double_cast_from_pe>:
     430:	mov	ip, sp
     434:	sub	sp, sp, #16
     438:	str	ip, [sp]
     43c:	str	lr, [sp, #4]
     440:	vstr	d0, [sp, #8]
     444:	ldr	r0, [sp, #8]
     448:	ldr	r1, [sp, #12]
     44c:	str	r0, [sp, #8]
     450:	str	r1, [sp, #12]
     454:	vldr	d0, [sp, #8]
     458:	ldr	lr, [sp, #4]
     45c:	add	sp, sp, #16
     460:	bx	lr

00000464 <flatbuffers_double_cast_to_pe>:
     464:	mov	ip, sp
     468:	sub	sp, sp, #16
     46c:	str	ip, [sp]
     470:	str	lr, [sp, #4]
     474:	vstr	d0, [sp, #8]
     478:	ldr	r0, [sp, #8]
     47c:	ldr	r1, [sp, #12]
     480:	str	r0, [sp, #8]
     484:	str	r1, [sp, #12]
     488:	vldr	d0, [sp, #8]
     48c:	ldr	lr, [sp, #4]
     490:	add	sp, sp, #16
     494:	bx	lr

00000498 <flatbuffers_double_read_from_pe>:
     498:	mov	ip, sp
     49c:	sub	sp, sp, #8
     4a0:	str	ip, [sp]
     4a4:	str	lr, [sp, #4]
     4a8:	vldr	d0, [r0]
     4ac:	bl	430 <flatbuffers_double_cast_from_pe>
     4b0:	ldr	lr, [sp, #4]
     4b4:	add	sp, sp, #8
     4b8:	bx	lr

000004bc <flatbuffers_double_write_to_pe>:
     4bc:	mov	ip, sp
     4c0:	sub	sp, sp, #16
     4c4:	str	ip, [sp]
     4c8:	str	lr, [sp, #4]
     4cc:	str	r4, [sp, #8]
     4d0:	mov	r4, r0
     4d4:	bl	464 <flatbuffers_double_cast_to_pe>
     4d8:	vstr	d0, [r4]
     4dc:	ldr	r4, [sp, #8]
     4e0:	ldr	lr, [sp, #4]
     4e4:	add	sp, sp, #16
     4e8:	bx	lr

000004ec <flatbuffers_bool_cast_to_pe>:
     4ec:	mov	ip, sp
     4f0:	sub	sp, sp, #8
     4f4:	str	ip, [sp]
     4f8:	str	lr, [sp, #4]
     4fc:	and	r0, r0, #255	; 0xff
     500:	ldr	lr, [sp, #4]
     504:	add	sp, sp, #8
     508:	bx	lr

0000050c <flatbuffers_bool_write_to_pe>:
     50c:	mov	ip, sp
     510:	sub	sp, sp, #16
     514:	str	ip, [sp]
     518:	str	lr, [sp, #4]
     51c:	str	r4, [sp, #8]
     520:	mov	r4, r0
     524:	and	r0, r1, #255	; 0xff
     528:	bl	4ec <flatbuffers_bool_cast_to_pe>
     52c:	and	r1, r0, #255	; 0xff
     530:	strb	r1, [r4]
     534:	ldr	r4, [sp, #8]
     538:	ldr	lr, [sp, #4]
     53c:	add	sp, sp, #16
     540:	bx	lr

00000544 <__flatbuffers_uoffset_cast_from_pe>:
     544:	mov	ip, sp
     548:	sub	sp, sp, #8
     54c:	str	ip, [sp]
     550:	str	lr, [sp, #4]
     554:	ldr	lr, [sp, #4]
     558:	add	sp, sp, #8
     55c:	bx	lr

00000560 <__flatbuffers_uoffset_read_from_pe>:
     560:	mov	ip, sp
     564:	sub	sp, sp, #8
     568:	str	ip, [sp]
     56c:	str	lr, [sp, #4]
     570:	ldr	r0, [r0]
     574:	bl	544 <__flatbuffers_uoffset_cast_from_pe>
     578:	ldr	lr, [sp, #4]
     57c:	add	sp, sp, #8
     580:	bx	lr

00000584 <__flatbuffers_soffset_cast_from_pe>:
     584:	mov	ip, sp
     588:	sub	sp, sp, #8
     58c:	str	ip, [sp]
     590:	str	lr, [sp, #4]
     594:	ldr	lr, [sp, #4]
     598:	add	sp, sp, #8
     59c:	bx	lr

000005a0 <__flatbuffers_soffset_read_from_pe>:
     5a0:	mov	ip, sp
     5a4:	sub	sp, sp, #8
     5a8:	str	ip, [sp]
     5ac:	str	lr, [sp, #4]
     5b0:	ldr	r0, [r0]
     5b4:	bl	584 <__flatbuffers_soffset_cast_from_pe>
     5b8:	ldr	lr, [sp, #4]
     5bc:	add	sp, sp, #8
     5c0:	bx	lr

000005c4 <__flatbuffers_voffset_cast_from_pe>:
     5c4:	mov	ip, sp
     5c8:	sub	sp, sp, #8
     5cc:	str	ip, [sp]
     5d0:	str	lr, [sp, #4]
     5d4:	bic	r0, r0, #16711680	; 0xff0000
     5d8:	bic	r0, r0, #-16777216	; 0xff000000
     5dc:	ldr	lr, [sp, #4]
     5e0:	add	sp, sp, #8
     5e4:	bx	lr

000005e8 <__flatbuffers_voffset_read_from_pe>:
     5e8:	mov	ip, sp
     5ec:	sub	sp, sp, #8
     5f0:	str	ip, [sp]
     5f4:	str	lr, [sp, #4]
     5f8:	ldrh	r0, [r0]
     5fc:	bic	r0, r0, #16711680	; 0xff0000
     600:	bic	r0, r0, #-16777216	; 0xff000000
     604:	bl	5c4 <__flatbuffers_voffset_cast_from_pe>
     608:	bic	r0, r0, #16711680	; 0xff0000
     60c:	bic	r0, r0, #-16777216	; 0xff000000
     610:	ldr	lr, [sp, #4]
     614:	add	sp, sp, #8
     618:	bx	lr

0000061c <__flatbuffers_thash_cast_from_pe>:
     61c:	mov	ip, sp
     620:	sub	sp, sp, #8
     624:	str	ip, [sp]
     628:	str	lr, [sp, #4]
     62c:	ldr	lr, [sp, #4]
     630:	add	sp, sp, #8
     634:	bx	lr

00000638 <__flatbuffers_thash_cast_from_le>:
     638:	mov	ip, sp
     63c:	sub	sp, sp, #8
     640:	str	ip, [sp]
     644:	str	lr, [sp, #4]
     648:	ldr	lr, [sp, #4]
     64c:	add	sp, sp, #8
     650:	bx	lr

00000654 <__flatbuffers_thash_read_from_pe>:
     654:	mov	ip, sp
     658:	sub	sp, sp, #8
     65c:	str	ip, [sp]
     660:	str	lr, [sp, #4]
     664:	ldr	r0, [r0]
     668:	bl	61c <__flatbuffers_thash_cast_from_pe>
     66c:	ldr	lr, [sp, #4]
     670:	add	sp, sp, #8
     674:	bx	lr

00000678 <flatbuffers_has_identifier>:
     678:	mov	ip, sp
     67c:	sub	sp, sp, #24
     680:	str	ip, [sp]
     684:	str	lr, [sp, #4]
     688:	str	r4, [sp, #8]
     68c:	mov	r4, r0
     690:	mov	r3, #0
     694:	str	r3, [sp, #16]
     698:	cmp	r1, #0
     69c:	bne	6a8 <flatbuffers_has_identifier+0x30>
     6a0:	mov	r0, #1
     6a4:	b	6ec <flatbuffers_has_identifier+0x74>
     6a8:	add	r0, sp, #16
     6ac:	mov	r2, #4
     6b0:	bl	0 <strncpy>
     6b4:	ldr	r0, [sp, #16]
     6b8:	bl	638 <__flatbuffers_thash_cast_from_le>
     6bc:	str	r0, [sp, #16]
     6c0:	add	r0, r4, #4
     6c4:	bl	654 <__flatbuffers_thash_read_from_pe>
     6c8:	ldr	r1, [sp, #16]
     6cc:	cmp	r1, #0
     6d0:	beq	6e8 <flatbuffers_has_identifier+0x70>
     6d4:	ldr	r1, [sp, #16]
     6d8:	cmp	r0, r1
     6dc:	moveq	r0, #1
     6e0:	movne	r0, #0
     6e4:	b	6ec <flatbuffers_has_identifier+0x74>
     6e8:	mov	r0, #1
     6ec:	ldr	r4, [sp, #8]
     6f0:	ldr	lr, [sp, #4]
     6f4:	add	sp, sp, #24
     6f8:	bx	lr

000006fc <MyGame_Example_Color_cast_from_pe>:
     6fc:	mov	ip, sp
     700:	sub	sp, sp, #8
     704:	str	ip, [sp]
     708:	str	lr, [sp, #4]
     70c:	and	r0, r0, #255	; 0xff
     710:	sbfx	r0, r0, #0, #8
     714:	sbfx	r0, r0, #0, #8
     718:	ldr	lr, [sp, #4]
     71c:	add	sp, sp, #8
     720:	bx	lr

00000724 <MyGame_Example_Color_read_from_pe>:
     724:	mov	ip, sp
     728:	sub	sp, sp, #8
     72c:	str	ip, [sp]
     730:	str	lr, [sp, #4]
     734:	ldrsb	r0, [r0]
     738:	sbfx	r0, r0, #0, #8
     73c:	bl	6fc <MyGame_Example_Color_cast_from_pe>
     740:	sbfx	r0, r0, #0, #8
     744:	ldr	lr, [sp, #4]
     748:	add	sp, sp, #8
     74c:	bx	lr

00000750 <MyGame_Example_Test_a>:
     750:	mov	ip, sp
     754:	sub	sp, sp, #8
     758:	str	ip, [sp]
     75c:	str	lr, [sp, #4]
     760:	cmp	r0, #0
     764:	beq	770 <MyGame_Example_Test_a+0x20>
     768:	bl	270 <flatbuffers_int16_read_from_pe>
     76c:	b	774 <MyGame_Example_Test_a+0x24>
     770:	mov	r0, #0
     774:	sbfx	r0, r0, #0, #16
     778:	ldr	lr, [sp, #4]
     77c:	add	sp, sp, #8
     780:	bx	lr

00000784 <MyGame_Example_Test_b>:
     784:	mov	ip, sp
     788:	sub	sp, sp, #8
     78c:	str	ip, [sp]
     790:	str	lr, [sp, #4]
     794:	cmp	r0, #0
     798:	beq	7a8 <MyGame_Example_Test_b+0x24>
     79c:	add	r0, r0, #2
     7a0:	bl	1b4 <flatbuffers_int8_read_from_pe>
     7a4:	b	7ac <MyGame_Example_Test_b+0x28>
     7a8:	mov	r0, #0
     7ac:	sbfx	r0, r0, #0, #8
     7b0:	ldr	lr, [sp, #4]
     7b4:	add	sp, sp, #8
     7b8:	bx	lr

000007bc <MyGame_Example_Vec3_x>:
     7bc:	mov	ip, sp
     7c0:	sub	sp, sp, #8
     7c4:	str	ip, [sp]
     7c8:	str	lr, [sp, #4]
     7cc:	cmp	r0, #0
     7d0:	beq	7dc <MyGame_Example_Vec3_x+0x20>
     7d4:	bl	3d4 <flatbuffers_float_read_from_pe>
     7d8:	b	7e0 <MyGame_Example_Vec3_x+0x24>
     7dc:	vldr	s0, [pc, #8]	; 7ec <MyGame_Example_Vec3_x+0x30>
     7e0:	ldr	lr, [sp, #4]
     7e4:	add	sp, sp, #8
     7e8:	bx	lr
     7ec:	.word	0x00000000

000007f0 <MyGame_Example_Vec3_y>:
     7f0:	mov	ip, sp
     7f4:	sub	sp, sp, #8
     7f8:	str	ip, [sp]
     7fc:	str	lr, [sp, #4]
     800:	cmp	r0, #0
     804:	beq	814 <MyGame_Example_Vec3_y+0x24>
     808:	add	r0, r0, #4
     80c:	bl	3d4 <flatbuffers_float_read_from_pe>
     810:	b	818 <MyGame_Example_Vec3_y+0x28>
     814:	vldr	s0, [pc, #8]	; 824 <MyGame_Example_Vec3_y+0x34>
     818:	ldr	lr, [sp, #4]
     81c:	add	sp, sp, #8
     820:	bx	lr
     824:	.word	0x00000000

00000828 <MyGame_Example_Vec3_z>:
     828:	mov	ip, sp
     82c:	sub	sp, sp, #8
     830:	str	ip, [sp]
     834:	str	lr, [sp, #4]
     838:	cmp	r0, #0
     83c:	beq	84c <MyGame_Example_Vec3_z+0x24>
     840:	add	r0, r0, #8
     844:	bl	3d4 <flatbuffers_float_read_from_pe>
     848:	b	850 <MyGame_Example_Vec3_z+0x28>
     84c:	vldr	s0, [pc, #8]	; 85c <MyGame_Example_Vec3_z+0x34>
     850:	ldr	lr, [sp, #4]
     854:	add	sp, sp, #8
     858:	bx	lr
     85c:	.word	0x00000000

00000860 <MyGame_Example_Vec3_test1>:
     860:	mov	ip, sp
     864:	sub	sp, sp, #8
     868:	str	ip, [sp]
     86c:	str	lr, [sp, #4]
     870:	cmp	r0, #0
     874:	beq	884 <MyGame_Example_Vec3_test1+0x24>
     878:	add	r0, r0, #16
     87c:	bl	498 <flatbuffers_double_read_from_pe>
     880:	b	888 <MyGame_Example_Vec3_test1+0x28>
     884:	vldr	d0, [pc, #8]	; 894 <MyGame_Example_Vec3_test1+0x34>
     888:	ldr	lr, [sp, #4]
     88c:	add	sp, sp, #8
     890:	bx	lr
	...

0000089c <MyGame_Example_Vec3_test2>:
     89c:	mov	ip, sp
     8a0:	sub	sp, sp, #8
     8a4:	str	ip, [sp]
     8a8:	str	lr, [sp, #4]
     8ac:	cmp	r0, #0
     8b0:	beq	8c0 <MyGame_Example_Vec3_test2+0x24>
     8b4:	add	r0, r0, #24
     8b8:	bl	724 <MyGame_Example_Color_read_from_pe>
     8bc:	b	8c4 <MyGame_Example_Vec3_test2+0x28>
     8c0:	mov	r0, #0
     8c4:	sbfx	r0, r0, #0, #8
     8c8:	ldr	lr, [sp, #4]
     8cc:	add	sp, sp, #8
     8d0:	bx	lr

000008d4 <MyGame_Example_Vec3_test3>:
     8d4:	mov	ip, sp
     8d8:	sub	sp, sp, #8
     8dc:	str	ip, [sp]
     8e0:	str	lr, [sp, #4]
     8e4:	cmp	r0, #0
     8e8:	bne	8f4 <MyGame_Example_Vec3_test3+0x20>
     8ec:	mov	r0, #0
     8f0:	b	8f8 <MyGame_Example_Vec3_test3+0x24>
     8f4:	add	r0, r0, #26
     8f8:	ldr	lr, [sp, #4]
     8fc:	add	sp, sp, #8
     900:	bx	lr

00000904 <MyGame_Example_Monster_as_root_with_identifier>:
     904:	mov	ip, sp
     908:	sub	sp, sp, #16
     90c:	str	ip, [sp]
     910:	str	lr, [sp, #4]
     914:	str	r4, [sp, #8]
     918:	mov	r4, r0
     91c:	cmp	r4, #0
     920:	beq	93c <MyGame_Example_Monster_as_root_with_identifier+0x38>
     924:	mov	r0, r4
     928:	bl	678 <flatbuffers_has_identifier>
     92c:	cmp	r0, #0
     930:	moveq	r2, #1
     934:	movne	r2, #0
     938:	b	940 <MyGame_Example_Monster_as_root_with_identifier+0x3c>
     93c:	mov	r2, #1
     940:	cmp	r2, #0
     944:	bne	958 <MyGame_Example_Monster_as_root_with_identifier+0x54>
     948:	mov	r0, r4
     94c:	bl	560 <__flatbuffers_uoffset_read_from_pe>
     950:	add	r0, r4, r0
     954:	b	95c <MyGame_Example_Monster_as_root_with_identifier+0x58>
     958:	mov	r0, #0
     95c:	ldr	r4, [sp, #8]
     960:	ldr	lr, [sp, #4]
     964:	add	sp, sp, #16
     968:	bx	lr

0000096c <MyGame_Example_Monster_pos>:
     96c:	mov	ip, sp
     970:	sub	sp, sp, #24
     974:	str	ip, [sp]
     978:	str	lr, [sp, #4]
     97c:	str	r4, [sp, #8]
     980:	str	r5, [sp, #12]
     984:	str	r6, [sp, #16]
     988:	str	r7, [sp, #20]
     98c:	mov	r4, r0
     990:	mov	r5, #0
     994:	cmp	r4, #0
     998:	beq	9b0 <MyGame_Example_Monster_pos+0x44>
     99c:	ldr	r1, [pc, #232]	; a8c <MyGame_Example_Monster_pos+0x120>
     9a0:	cmp	r1, #0
     9a4:	movne	r2, #1
     9a8:	moveq	r2, #0
     9ac:	b	9b4 <MyGame_Example_Monster_pos+0x48>
     9b0:	mov	r2, #0
     9b4:	cmp	r2, #0
     9b8:	bne	9d0 <MyGame_Example_Monster_pos+0x64>
     9bc:	ldr	r0, [pc, #204]	; a90 <MyGame_Example_Monster_pos+0x124>
     9c0:	ldr	r1, [pc, #192]	; a88 <MyGame_Example_Monster_pos+0x11c>
     9c4:	mov	r2, #696	; 0x2b8
     9c8:	ldr	r3, [pc, #180]	; a84 <MyGame_Example_Monster_pos+0x118>
     9cc:	bl	0 <__assert_fail>
     9d0:	mov	r7, #0
     9d4:	mov	r0, r4
     9d8:	bl	5a0 <__flatbuffers_soffset_read_from_pe>
     9dc:	sub	r6, r4, r0
     9e0:	mov	r0, r6
     9e4:	bl	5e8 <__flatbuffers_voffset_read_from_pe>
     9e8:	lsl	r1, r7, #1
     9ec:	add	r1, r1, #6
     9f0:	cmp	r0, r1
     9f4:	bcc	a0c <MyGame_Example_Monster_pos+0xa0>
     9f8:	add	r3, r6, r7, lsl #1
     9fc:	add	r0, r3, #4
     a00:	bl	5e8 <__flatbuffers_voffset_read_from_pe>
     a04:	bic	r5, r0, #16711680	; 0xff0000
     a08:	bic	r5, r5, #-16777216	; 0xff000000
     a0c:	cmp	r5, #0
     a10:	beq	a1c <MyGame_Example_Monster_pos+0xb0>
     a14:	add	r0, r4, r5
     a18:	b	a60 <MyGame_Example_Monster_pos+0xf4>
     a1c:	mov	r0, #1
     a20:	cmp	r0, #0
     a24:	beq	a3c <MyGame_Example_Monster_pos+0xd0>
     a28:	ldr	r0, [pc, #76]	; a7c <MyGame_Example_Monster_pos+0x110>
     a2c:	cmp	r0, #0
     a30:	movne	r0, #1
     a34:	moveq	r0, #0
     a38:	b	a40 <MyGame_Example_Monster_pos+0xd4>
     a3c:	mov	r0, #0
     a40:	cmp	r0, #0
     a44:	bne	a5c <MyGame_Example_Monster_pos+0xf0>
     a48:	ldr	r0, [pc, #48]	; a80 <MyGame_Example_Monster_pos+0x114>
     a4c:	ldr	r1, [pc, #52]	; a88 <MyGame_Example_Monster_pos+0x11c>
     a50:	mov	r2, #696	; 0x2b8
     a54:	ldr	r3, [pc, #40]	; a84 <MyGame_Example_Monster_pos+0x118>
     a58:	bl	0 <__assert_fail>
     a5c:	mov	r0, #0
     a60:	ldr	r4, [sp, #8]
     a64:	ldr	r5, [sp, #12]
     a68:	ldr	r6, [sp, #16]
     a6c:	ldr	r7, [sp, #20]
     a70:	ldr	lr, [sp, #4]
     a74:	add	sp, sp, #24
     a78:	bx	lr
     a7c:	.word	0x00000238
     a80:	.word	0x000000a6
     a84:	.word	0x000002d1
     a88:	.word	0x000001bd
     a8c:	.word	0x00000054
     a90:	.word	0x00000026

00000a94 <flatcc_json_parser_init>:
     a94:	mov	ip, sp
     a98:	sub	sp, sp, #32
     a9c:	str	ip, [sp]
     aa0:	str	lr, [sp, #4]
     aa4:	str	r4, [sp, #8]
     aa8:	str	r5, [sp, #12]
     aac:	str	r6, [sp, #16]
     ab0:	str	r7, [sp, #20]
     ab4:	str	r8, [sp, #24]
     ab8:	ldr	r8, [ip]
     abc:	mov	r5, r3
     ac0:	mov	r6, r2
     ac4:	mov	r7, r1
     ac8:	mov	r4, r0
     acc:	mov	r1, #0
     ad0:	mov	r2, #44	; 0x2c
     ad4:	mov	r0, r4
     ad8:	bl	0 <memset>
     adc:	str	r7, [r4]
     ae0:	str	r6, [r4, #4]
     ae4:	mov	r2, #1
     ae8:	str	r2, [r4, #16]
     aec:	str	r8, [r4, #8]
     af0:	str	r6, [r4, #28]
     af4:	str	r5, [r4, #32]
     af8:	str	r6, [r4, #36]	; 0x24
     afc:	ldr	r4, [sp, #8]
     b00:	ldr	r5, [sp, #12]
     b04:	ldr	r6, [sp, #16]
     b08:	ldr	r7, [sp, #20]
     b0c:	ldr	r8, [sp, #24]
     b10:	ldr	lr, [sp, #4]
     b14:	add	sp, sp, #32
     b18:	bx	lr

00000b1c <flatcc_json_parser_space>:
     b1c:	mov	ip, sp
     b20:	sub	sp, sp, #8
     b24:	str	ip, [sp]
     b28:	str	lr, [sp, #4]
     b2c:	sub	ip, r2, r1
     b30:	cmp	ip, #1
     b34:	ble	b78 <flatcc_json_parser_space+0x5c>
     b38:	ldrb	r3, [r1]
     b3c:	cmp	r3, #32
     b40:	bgt	b80 <flatcc_json_parser_space+0x64>
     b44:	ldrb	r3, [r1]
     b48:	cmp	r3, #32
     b4c:	bne	b64 <flatcc_json_parser_space+0x48>
     b50:	ldrb	r3, [r1, #1]
     b54:	cmp	r3, #32
     b58:	movgt	r3, #1
     b5c:	movle	r3, #0
     b60:	b	b68 <flatcc_json_parser_space+0x4c>
     b64:	mov	r3, #0
     b68:	cmp	r3, #0
     b6c:	beq	b78 <flatcc_json_parser_space+0x5c>
     b70:	add	r1, r1, #1
     b74:	b	b80 <flatcc_json_parser_space+0x64>
     b78:	bl	0 <flatcc_json_parser_space_ext>
     b7c:	mov	r1, r0
     b80:	mov	r0, r1
     b84:	ldr	lr, [sp, #4]
     b88:	add	sp, sp, #8
     b8c:	bx	lr

00000b90 <flatcc_json_parser_symbol_start>:
     b90:	mov	ip, sp
     b94:	sub	sp, sp, #8
     b98:	str	ip, [sp]
     b9c:	str	lr, [sp, #4]
     ba0:	cmp	r1, r2
     ba4:	beq	be8 <flatcc_json_parser_symbol_start+0x58>
     ba8:	ldrb	r3, [r1]
     bac:	cmp	r3, #34	; 0x22
     bb0:	beq	bdc <flatcc_json_parser_symbol_start+0x4c>
     bb4:	ldrb	ip, [r1]
     bb8:	cmp	ip, #46	; 0x2e
     bbc:	bne	bd0 <flatcc_json_parser_symbol_start+0x40>
     bc0:	mov	r3, #5
     bc4:	bl	0 <flatcc_json_parser_set_error>
     bc8:	mov	r1, r0
     bcc:	b	be8 <flatcc_json_parser_symbol_start+0x58>
     bd0:	mov	r3, #1
     bd4:	str	r3, [r0, #12]
     bd8:	b	be8 <flatcc_json_parser_symbol_start+0x58>
     bdc:	add	r1, r1, #1
     be0:	mov	r2, #0
     be4:	str	r2, [r0, #12]
     be8:	mov	r0, r1
     bec:	ldr	lr, [sp, #4]
     bf0:	add	sp, sp, #8
     bf4:	bx	lr

00000bf8 <flatcc_json_parser_symbol_part_ext>:
     bf8:	mov	ip, sp
     bfc:	sub	sp, sp, #8
     c00:	str	ip, [sp]
     c04:	str	lr, [sp, #4]
     c08:	mov	r3, #0
     c0c:	mov	r2, #0
     c10:	sub	ip, r1, r0
     c14:	cmp	ip, #8
     c18:	bls	c20 <flatcc_json_parser_symbol_part_ext+0x28>
     c1c:	mov	ip, #8
     c20:	cmp	ip, #9
     c24:	bcs	cac <flatcc_json_parser_symbol_part_ext+0xb4>
     c28:	add	pc, pc, ip, lsl #2
     c2c:	nop	{0}
     c30:	b	cac <flatcc_json_parser_symbol_part_ext+0xb4>
     c34:	b	ca4 <flatcc_json_parser_symbol_part_ext+0xac>
     c38:	b	c9c <flatcc_json_parser_symbol_part_ext+0xa4>
     c3c:	b	c94 <flatcc_json_parser_symbol_part_ext+0x9c>
     c40:	b	c8c <flatcc_json_parser_symbol_part_ext+0x94>
     c44:	b	c7c <flatcc_json_parser_symbol_part_ext+0x84>
     c48:	b	c6c <flatcc_json_parser_symbol_part_ext+0x74>
     c4c:	b	c5c <flatcc_json_parser_symbol_part_ext+0x64>
     c50:	b	c54 <flatcc_json_parser_symbol_part_ext+0x5c>
     c54:	ldrb	r1, [r0, #7]
     c58:	orr	r2, r2, r1
     c5c:	ldrb	ip, [r0, #6]
     c60:	orr	r3, r3, ip, lsr #24
     c64:	ldrb	ip, [r0, #6]
     c68:	orr	r2, r2, ip, lsl #8
     c6c:	ldrb	ip, [r0, #5]
     c70:	orr	r3, r3, ip, lsr #16
     c74:	ldrb	ip, [r0, #5]
     c78:	orr	r2, r2, ip, lsl #16
     c7c:	ldrb	r1, [r0, #4]
     c80:	orr	r3, r3, r1, lsr #8
     c84:	ldrb	r1, [r0, #4]
     c88:	orr	r2, r2, r1, lsl #24
     c8c:	ldrb	r1, [r0, #3]
     c90:	orr	r3, r3, r1
     c94:	ldrb	ip, [r0, #2]
     c98:	orr	r3, r3, ip, lsl #8
     c9c:	ldrb	ip, [r0, #1]
     ca0:	orr	r3, r3, ip, lsl #16
     ca4:	ldrb	r1, [r0]
     ca8:	orr	r3, r3, r1, lsl #24
     cac:	mov	r1, r3
     cb0:	mov	r0, r2
     cb4:	ldr	lr, [sp, #4]
     cb8:	add	sp, sp, #8
     cbc:	bx	lr

00000cc0 <flatcc_json_parser_symbol_part>:
     cc0:	mov	ip, sp
     cc4:	sub	sp, sp, #8
     cc8:	str	ip, [sp]
     ccc:	str	lr, [sp, #4]
     cd0:	bl	bf8 <flatcc_json_parser_symbol_part_ext>
     cd4:	ldr	lr, [sp, #4]
     cd8:	add	sp, sp, #8
     cdc:	bx	lr

00000ce0 <flatcc_json_parser_match_scope>:
     ce0:	mov	ip, sp
     ce4:	sub	sp, sp, #8
     ce8:	str	ip, [sp]
     cec:	str	lr, [sp, #4]
     cf0:	mov	r0, r1
     cf4:	sub	r2, r2, r1
     cf8:	cmp	r2, r3
     cfc:	ble	d14 <flatcc_json_parser_match_scope+0x34>
     d00:	ldrb	r2, [r1, r3]
     d04:	cmp	r2, #46	; 0x2e
     d08:	bne	d14 <flatcc_json_parser_match_scope+0x34>
     d0c:	add	r0, r1, r3
     d10:	add	r0, r0, #1
     d14:	ldr	lr, [sp, #4]
     d18:	add	sp, sp, #8
     d1c:	bx	lr

00000d20 <flatcc_json_parser_constant_start>:
     d20:	mov	ip, sp
     d24:	sub	sp, sp, #16
     d28:	str	ip, [sp]
     d2c:	str	lr, [sp, #4]
     d30:	str	r4, [sp, #8]
     d34:	str	r5, [sp, #12]
     d38:	mov	r4, r2
     d3c:	mov	r5, r0
     d40:	mov	r2, r4
     d44:	mov	r0, r5
     d48:	bl	b90 <flatcc_json_parser_symbol_start>
     d4c:	ldr	r1, [r5, #12]
     d50:	cmp	r1, #0
     d54:	bne	d68 <flatcc_json_parser_constant_start+0x48>
     d58:	mov	r2, r4
     d5c:	mov	r1, r0
     d60:	mov	r0, r5
     d64:	bl	b1c <flatcc_json_parser_space>
     d68:	ldr	r4, [sp, #8]
     d6c:	ldr	r5, [sp, #12]
     d70:	ldr	lr, [sp, #4]
     d74:	add	sp, sp, #16
     d78:	bx	lr

00000d7c <flatcc_json_parser_object_start>:
     d7c:	mov	ip, sp
     d80:	sub	sp, sp, #24
     d84:	str	ip, [sp]
     d88:	str	lr, [sp, #4]
     d8c:	str	r4, [sp, #8]
     d90:	str	r5, [sp, #12]
     d94:	str	r6, [sp, #16]
     d98:	mov	r6, r3
     d9c:	mov	r4, r2
     da0:	mov	r5, r0
     da4:	cmp	r1, r4
     da8:	beq	dc0 <flatcc_json_parser_object_start+0x44>
     dac:	ldrb	r2, [r1]
     db0:	cmp	r2, #123	; 0x7b
     db4:	movne	r2, #1
     db8:	moveq	r2, #0
     dbc:	b	dc4 <flatcc_json_parser_object_start+0x48>
     dc0:	mov	r2, #1
     dc4:	cmp	r2, #0
     dc8:	beq	de8 <flatcc_json_parser_object_start+0x6c>
     dcc:	mov	r2, #0
     dd0:	str	r2, [r6]
     dd4:	mov	r3, #21
     dd8:	mov	r2, r4
     ddc:	mov	r0, r5
     de0:	bl	0 <flatcc_json_parser_set_error>
     de4:	b	e44 <flatcc_json_parser_object_start+0xc8>
     de8:	add	r1, r1, #1
     dec:	mov	r2, r4
     df0:	mov	r0, r5
     df4:	bl	b1c <flatcc_json_parser_space>
     df8:	cmp	r0, r4
     dfc:	beq	e14 <flatcc_json_parser_object_start+0x98>
     e00:	ldrb	ip, [r0]
     e04:	cmp	ip, #125	; 0x7d
     e08:	moveq	r2, #1
     e0c:	movne	r2, #0
     e10:	b	e18 <flatcc_json_parser_object_start+0x9c>
     e14:	mov	r2, #0
     e18:	cmp	r2, #0
     e1c:	beq	e3c <flatcc_json_parser_object_start+0xc0>
     e20:	mov	r3, #0
     e24:	str	r3, [r6]
     e28:	add	r1, r0, #1
     e2c:	mov	r2, r4
     e30:	mov	r0, r5
     e34:	bl	b1c <flatcc_json_parser_space>
     e38:	b	e44 <flatcc_json_parser_object_start+0xc8>
     e3c:	mov	r1, #1
     e40:	str	r1, [r6]
     e44:	ldr	r4, [sp, #8]
     e48:	ldr	r5, [sp, #12]
     e4c:	ldr	r6, [sp, #16]
     e50:	ldr	lr, [sp, #4]
     e54:	add	sp, sp, #24
     e58:	bx	lr

00000e5c <flatcc_json_parser_object_end>:
     e5c:	mov	ip, sp
     e60:	sub	sp, sp, #24
     e64:	str	ip, [sp]
     e68:	str	lr, [sp, #4]
     e6c:	str	r4, [sp, #8]
     e70:	str	r5, [sp, #12]
     e74:	str	r6, [sp, #16]
     e78:	mov	r6, r3
     e7c:	mov	r4, r2
     e80:	mov	r5, r0
     e84:	mov	r2, r4
     e88:	mov	r0, r5
     e8c:	bl	b1c <flatcc_json_parser_space>
     e90:	mov	r1, r0
     e94:	cmp	r1, r4
     e98:	bne	ea8 <flatcc_json_parser_object_end+0x4c>
     e9c:	mov	r2, #0
     ea0:	str	r2, [r6]
     ea4:	b	f68 <flatcc_json_parser_object_end+0x10c>
     ea8:	ldrb	r2, [r1]
     eac:	cmp	r2, #44	; 0x2c
     eb0:	beq	ef8 <flatcc_json_parser_object_end+0x9c>
     eb4:	mov	ip, #0
     eb8:	str	ip, [r6]
     ebc:	ldrb	r0, [r1]
     ec0:	cmp	r0, #125	; 0x7d
     ec4:	beq	ee0 <flatcc_json_parser_object_end+0x84>
     ec8:	mov	r3, #10
     ecc:	mov	r2, r4
     ed0:	mov	r0, r5
     ed4:	bl	0 <flatcc_json_parser_set_error>
     ed8:	mov	r1, r0
     edc:	b	f68 <flatcc_json_parser_object_end+0x10c>
     ee0:	add	r1, r1, #1
     ee4:	mov	r2, r4
     ee8:	mov	r0, r5
     eec:	bl	b1c <flatcc_json_parser_space>
     ef0:	mov	r1, r0
     ef4:	b	f68 <flatcc_json_parser_object_end+0x10c>
     ef8:	add	r1, r1, #1
     efc:	mov	r2, r4
     f00:	mov	r0, r5
     f04:	bl	b1c <flatcc_json_parser_space>
     f08:	mov	r1, r0
     f0c:	cmp	r1, r4
     f10:	bne	f34 <flatcc_json_parser_object_end+0xd8>
     f14:	mov	r2, #0
     f18:	str	r2, [r6]
     f1c:	mov	r3, #10
     f20:	mov	r2, r4
     f24:	mov	r0, r5
     f28:	bl	0 <flatcc_json_parser_set_error>
     f2c:	mov	r1, r0
     f30:	b	f68 <flatcc_json_parser_object_end+0x10c>
     f34:	ldrb	r2, [r1]
     f38:	cmp	r2, #125	; 0x7d
     f3c:	bne	f60 <flatcc_json_parser_object_end+0x104>
     f40:	mov	r0, #0
     f44:	str	r0, [r6]
     f48:	add	r1, r1, #1
     f4c:	mov	r2, r4
     f50:	mov	r0, r5
     f54:	bl	b1c <flatcc_json_parser_space>
     f58:	mov	r1, r0
     f5c:	b	f68 <flatcc_json_parser_object_end+0x10c>
     f60:	mov	r3, #1
     f64:	str	r3, [r6]
     f68:	mov	r0, r1
     f6c:	ldr	r4, [sp, #8]
     f70:	ldr	r5, [sp, #12]
     f74:	ldr	r6, [sp, #16]
     f78:	ldr	lr, [sp, #4]
     f7c:	add	sp, sp, #24
     f80:	bx	lr

00000f84 <flatcc_json_parser_array_start>:
     f84:	mov	ip, sp
     f88:	sub	sp, sp, #24
     f8c:	str	ip, [sp]
     f90:	str	lr, [sp, #4]
     f94:	str	r4, [sp, #8]
     f98:	str	r5, [sp, #12]
     f9c:	str	r6, [sp, #16]
     fa0:	mov	r6, r3
     fa4:	mov	r4, r2
     fa8:	mov	r5, r0
     fac:	cmp	r1, r4
     fb0:	beq	fc8 <flatcc_json_parser_array_start+0x44>
     fb4:	ldrb	r2, [r1]
     fb8:	cmp	r2, #91	; 0x5b
     fbc:	movne	r2, #1
     fc0:	moveq	r2, #0
     fc4:	b	fcc <flatcc_json_parser_array_start+0x48>
     fc8:	mov	r2, #1
     fcc:	cmp	r2, #0
     fd0:	beq	ff0 <flatcc_json_parser_array_start+0x6c>
     fd4:	mov	r2, #0
     fd8:	str	r2, [r6]
     fdc:	mov	r3, #22
     fe0:	mov	r2, r4
     fe4:	mov	r0, r5
     fe8:	bl	0 <flatcc_json_parser_set_error>
     fec:	b	104c <flatcc_json_parser_array_start+0xc8>
     ff0:	add	r1, r1, #1
     ff4:	mov	r2, r4
     ff8:	mov	r0, r5
     ffc:	bl	b1c <flatcc_json_parser_space>
    1000:	cmp	r0, r4
    1004:	beq	101c <flatcc_json_parser_array_start+0x98>
    1008:	ldrb	ip, [r0]
    100c:	cmp	ip, #93	; 0x5d
    1010:	moveq	r2, #1
    1014:	movne	r2, #0
    1018:	b	1020 <flatcc_json_parser_array_start+0x9c>
    101c:	mov	r2, #0
    1020:	cmp	r2, #0
    1024:	beq	1044 <flatcc_json_parser_array_start+0xc0>
    1028:	mov	r3, #0
    102c:	str	r3, [r6]
    1030:	add	r1, r0, #1
    1034:	mov	r2, r4
    1038:	mov	r0, r5
    103c:	bl	b1c <flatcc_json_parser_space>
    1040:	b	104c <flatcc_json_parser_array_start+0xc8>
    1044:	mov	r1, #1
    1048:	str	r1, [r6]
    104c:	ldr	r4, [sp, #8]
    1050:	ldr	r5, [sp, #12]
    1054:	ldr	r6, [sp, #16]
    1058:	ldr	lr, [sp, #4]
    105c:	add	sp, sp, #24
    1060:	bx	lr

00001064 <flatcc_json_parser_array_end>:
    1064:	mov	ip, sp
    1068:	sub	sp, sp, #24
    106c:	str	ip, [sp]
    1070:	str	lr, [sp, #4]
    1074:	str	r4, [sp, #8]
    1078:	str	r5, [sp, #12]
    107c:	str	r6, [sp, #16]
    1080:	mov	r6, r3
    1084:	mov	r4, r2
    1088:	mov	r5, r0
    108c:	mov	r2, r4
    1090:	mov	r0, r5
    1094:	bl	b1c <flatcc_json_parser_space>
    1098:	mov	r1, r0
    109c:	cmp	r1, r4
    10a0:	bne	10b0 <flatcc_json_parser_array_end+0x4c>
    10a4:	mov	r2, #0
    10a8:	str	r2, [r6]
    10ac:	b	1170 <flatcc_json_parser_array_end+0x10c>
    10b0:	ldrb	r2, [r1]
    10b4:	cmp	r2, #44	; 0x2c
    10b8:	beq	1100 <flatcc_json_parser_array_end+0x9c>
    10bc:	mov	ip, #0
    10c0:	str	ip, [r6]
    10c4:	ldrb	r0, [r1]
    10c8:	cmp	r0, #93	; 0x5d
    10cc:	beq	10e8 <flatcc_json_parser_array_end+0x84>
    10d0:	mov	r3, #9
    10d4:	mov	r2, r4
    10d8:	mov	r0, r5
    10dc:	bl	0 <flatcc_json_parser_set_error>
    10e0:	mov	r1, r0
    10e4:	b	1170 <flatcc_json_parser_array_end+0x10c>
    10e8:	add	r1, r1, #1
    10ec:	mov	r2, r4
    10f0:	mov	r0, r5
    10f4:	bl	b1c <flatcc_json_parser_space>
    10f8:	mov	r1, r0
    10fc:	b	1170 <flatcc_json_parser_array_end+0x10c>
    1100:	add	r1, r1, #1
    1104:	mov	r2, r4
    1108:	mov	r0, r5
    110c:	bl	b1c <flatcc_json_parser_space>
    1110:	mov	r1, r0
    1114:	cmp	r1, r4
    1118:	bne	113c <flatcc_json_parser_array_end+0xd8>
    111c:	mov	r2, #0
    1120:	str	r2, [r6]
    1124:	mov	r3, #9
    1128:	mov	r2, r4
    112c:	mov	r0, r5
    1130:	bl	0 <flatcc_json_parser_set_error>
    1134:	mov	r1, r0
    1138:	b	1170 <flatcc_json_parser_array_end+0x10c>
    113c:	ldrb	r2, [r1]
    1140:	cmp	r2, #93	; 0x5d
    1144:	bne	1168 <flatcc_json_parser_array_end+0x104>
    1148:	mov	r0, #0
    114c:	str	r0, [r6]
    1150:	add	r1, r1, #1
    1154:	mov	r2, r4
    1158:	mov	r0, r5
    115c:	bl	b1c <flatcc_json_parser_space>
    1160:	mov	r1, r0
    1164:	b	1170 <flatcc_json_parser_array_end+0x10c>
    1168:	mov	r3, #1
    116c:	str	r3, [r6]
    1170:	mov	r0, r1
    1174:	ldr	r4, [sp, #8]
    1178:	ldr	r5, [sp, #12]
    117c:	ldr	r6, [sp, #16]
    1180:	ldr	lr, [sp, #4]
    1184:	add	sp, sp, #24
    1188:	bx	lr

0000118c <flatcc_json_parser_match_symbol>:
    118c:	mov	ip, sp
    1190:	sub	sp, sp, #16
    1194:	str	ip, [sp]
    1198:	str	lr, [sp, #4]
    119c:	str	r4, [sp, #8]
    11a0:	str	r5, [sp, #12]
    11a4:	mov	r4, r2
    11a8:	mov	r5, r0
    11ac:	mov	r0, r1
    11b0:	sub	r2, r4, r0
    11b4:	cmp	r2, r3
    11b8:	ble	1274 <flatcc_json_parser_match_symbol+0xe8>
    11bc:	ldr	ip, [r5, #12]
    11c0:	cmp	ip, #0
    11c4:	beq	1204 <flatcc_json_parser_match_symbol+0x78>
    11c8:	ldrb	r1, [r0, r3]
    11cc:	cmp	r1, #32
    11d0:	ble	11e8 <flatcc_json_parser_match_symbol+0x5c>
    11d4:	ldrb	r1, [r0, r3]
    11d8:	cmp	r1, #58	; 0x3a
    11dc:	movne	ip, #1
    11e0:	moveq	ip, #0
    11e4:	b	11ec <flatcc_json_parser_match_symbol+0x60>
    11e8:	mov	ip, #0
    11ec:	cmp	ip, #0
    11f0:	bne	1274 <flatcc_json_parser_match_symbol+0xe8>
    11f4:	add	r1, r0, r3
    11f8:	mov	r2, #0
    11fc:	str	r2, [r5, #12]
    1200:	b	1218 <flatcc_json_parser_match_symbol+0x8c>
    1204:	ldrb	r2, [r0, r3]
    1208:	cmp	r2, #34	; 0x22
    120c:	bne	1274 <flatcc_json_parser_match_symbol+0xe8>
    1210:	add	r2, r0, r3
    1214:	add	r1, r2, #1
    1218:	mov	r2, r4
    121c:	mov	r0, r5
    1220:	bl	b1c <flatcc_json_parser_space>
    1224:	mov	r1, r0
    1228:	cmp	r1, r4
    122c:	beq	1244 <flatcc_json_parser_match_symbol+0xb8>
    1230:	ldrb	r0, [r1]
    1234:	cmp	r0, #58	; 0x3a
    1238:	moveq	ip, #1
    123c:	movne	ip, #0
    1240:	b	1248 <flatcc_json_parser_match_symbol+0xbc>
    1244:	mov	ip, #0
    1248:	cmp	ip, #0
    124c:	beq	1264 <flatcc_json_parser_match_symbol+0xd8>
    1250:	add	r1, r1, #1
    1254:	mov	r2, r4
    1258:	mov	r0, r5
    125c:	bl	b1c <flatcc_json_parser_space>
    1260:	b	1274 <flatcc_json_parser_match_symbol+0xe8>
    1264:	mov	r3, #4
    1268:	mov	r2, r4
    126c:	mov	r0, r5
    1270:	bl	0 <flatcc_json_parser_set_error>
    1274:	ldr	r4, [sp, #8]
    1278:	ldr	r5, [sp, #12]
    127c:	ldr	lr, [sp, #4]
    1280:	add	sp, sp, #16
    1284:	bx	lr

00001288 <flatcc_json_parser_coerce_uint64>:
    1288:	mov	ip, sp
    128c:	sub	sp, sp, #24
    1290:	str	ip, [sp]
    1294:	str	lr, [sp, #4]
    1298:	str	r4, [sp, #8]
    129c:	str	r5, [sp, #12]
    12a0:	str	r6, [sp, #16]
    12a4:	ldr	r5, [ip, #8]
    12a8:	ldr	r4, [ip, #4]
    12ac:	ldr	r6, [ip]
    12b0:	cmp	r3, #0
    12b4:	beq	12c4 <flatcc_json_parser_coerce_uint64+0x3c>
    12b8:	mov	r3, #8
    12bc:	bl	0 <flatcc_json_parser_set_error>
    12c0:	b	12d0 <flatcc_json_parser_coerce_uint64+0x48>
    12c4:	str	r6, [r5]
    12c8:	str	r4, [r5, #4]
    12cc:	mov	r0, r1
    12d0:	ldr	r4, [sp, #8]
    12d4:	ldr	r5, [sp, #12]
    12d8:	ldr	r6, [sp, #16]
    12dc:	ldr	lr, [sp, #4]
    12e0:	add	sp, sp, #24
    12e4:	bx	lr

000012e8 <flatcc_json_parser_coerce_bool>:
    12e8:	mov	ip, sp
    12ec:	sub	sp, sp, #24
    12f0:	str	ip, [sp]
    12f4:	str	lr, [sp, #4]
    12f8:	str	r4, [sp, #8]
    12fc:	str	r5, [sp, #12]
    1300:	str	r6, [sp, #16]
    1304:	ldr	r6, [ip, #8]
    1308:	ldr	r5, [ip, #4]
    130c:	ldr	r4, [ip]
    1310:	cmp	r3, #0
    1314:	beq	1324 <flatcc_json_parser_coerce_bool+0x3c>
    1318:	mov	r3, #8
    131c:	bl	0 <flatcc_json_parser_set_error>
    1320:	b	134c <flatcc_json_parser_coerce_bool+0x64>
    1324:	orr	r0, r5, r4
    1328:	cmp	r0, #0
    132c:	moveq	r2, #1
    1330:	movne	r2, #0
    1334:	cmp	r2, #0
    1338:	moveq	r0, #1
    133c:	movne	r0, #0
    1340:	and	ip, r0, #255	; 0xff
    1344:	strb	ip, [r6]
    1348:	mov	r0, r1
    134c:	ldr	r4, [sp, #8]
    1350:	ldr	r5, [sp, #12]
    1354:	ldr	r6, [sp, #16]
    1358:	ldr	lr, [sp, #4]
    135c:	add	sp, sp, #24
    1360:	bx	lr

00001364 <flatcc_json_parser_coerce_uint32>:
    1364:	mov	ip, sp
    1368:	sub	sp, sp, #24
    136c:	str	ip, [sp]
    1370:	str	lr, [sp, #4]
    1374:	str	r4, [sp, #8]
    1378:	str	r5, [sp, #12]
    137c:	str	r6, [sp, #16]
    1380:	ldr	r6, [ip, #8]
    1384:	ldr	r4, [ip, #4]
    1388:	ldr	r5, [ip]
    138c:	cmp	r3, #0
    1390:	beq	13a0 <flatcc_json_parser_coerce_uint32+0x3c>
    1394:	mov	r3, #8
    1398:	bl	0 <flatcc_json_parser_set_error>
    139c:	b	13e0 <flatcc_json_parser_coerce_uint32+0x7c>
    13a0:	mov	r3, r5
    13a4:	mov	ip, #0
    13a8:	cmp	r4, ip
    13ac:	bne	13c0 <flatcc_json_parser_coerce_uint32+0x5c>
    13b0:	mvn	ip, #0
    13b4:	cmp	r3, ip
    13b8:	bhi	13cc <flatcc_json_parser_coerce_uint32+0x68>
    13bc:	b	13d8 <flatcc_json_parser_coerce_uint32+0x74>
    13c0:	mov	ip, #0
    13c4:	cmp	r4, ip
    13c8:	bls	13d8 <flatcc_json_parser_coerce_uint32+0x74>
    13cc:	mov	r3, #7
    13d0:	bl	0 <flatcc_json_parser_set_error>
    13d4:	b	13e0 <flatcc_json_parser_coerce_uint32+0x7c>
    13d8:	str	r5, [r6]
    13dc:	mov	r0, r1
    13e0:	ldr	r4, [sp, #8]
    13e4:	ldr	r5, [sp, #12]
    13e8:	ldr	r6, [sp, #16]
    13ec:	ldr	lr, [sp, #4]
    13f0:	add	sp, sp, #24
    13f4:	bx	lr

000013f8 <flatcc_json_parser_coerce_uint16>:
    13f8:	mov	ip, sp
    13fc:	sub	sp, sp, #24
    1400:	str	ip, [sp]
    1404:	str	lr, [sp, #4]
    1408:	str	r4, [sp, #8]
    140c:	str	r5, [sp, #12]
    1410:	str	r6, [sp, #16]
    1414:	ldr	r6, [ip, #8]
    1418:	ldr	r5, [ip, #4]
    141c:	ldr	r4, [ip]
    1420:	cmp	r3, #0
    1424:	beq	1434 <flatcc_json_parser_coerce_uint16+0x3c>
    1428:	mov	r3, #8
    142c:	bl	0 <flatcc_json_parser_set_error>
    1430:	b	147c <flatcc_json_parser_coerce_uint16+0x84>
    1434:	mov	r3, r4
    1438:	mov	ip, #0
    143c:	cmp	r5, ip
    1440:	bne	1454 <flatcc_json_parser_coerce_uint16+0x5c>
    1444:	movw	ip, #65535	; 0xffff
    1448:	cmp	r3, ip
    144c:	bhi	1460 <flatcc_json_parser_coerce_uint16+0x68>
    1450:	b	146c <flatcc_json_parser_coerce_uint16+0x74>
    1454:	mov	r3, #0
    1458:	cmp	r5, r3
    145c:	bls	146c <flatcc_json_parser_coerce_uint16+0x74>
    1460:	mov	r3, #7
    1464:	bl	0 <flatcc_json_parser_set_error>
    1468:	b	147c <flatcc_json_parser_coerce_uint16+0x84>
    146c:	bic	r3, r4, #16711680	; 0xff0000
    1470:	bic	r3, r3, #-16777216	; 0xff000000
    1474:	strh	r3, [r6]
    1478:	mov	r0, r1
    147c:	ldr	r4, [sp, #8]
    1480:	ldr	r5, [sp, #12]
    1484:	ldr	r6, [sp, #16]
    1488:	ldr	lr, [sp, #4]
    148c:	add	sp, sp, #24
    1490:	bx	lr

00001494 <flatcc_json_parser_coerce_uint8>:
    1494:	mov	ip, sp
    1498:	sub	sp, sp, #24
    149c:	str	ip, [sp]
    14a0:	str	lr, [sp, #4]
    14a4:	str	r4, [sp, #8]
    14a8:	str	r5, [sp, #12]
    14ac:	str	r6, [sp, #16]
    14b0:	ldr	r6, [ip, #8]
    14b4:	ldr	r5, [ip, #4]
    14b8:	ldr	r4, [ip]
    14bc:	cmp	r3, #0
    14c0:	beq	14d0 <flatcc_json_parser_coerce_uint8+0x3c>
    14c4:	mov	r3, #8
    14c8:	bl	0 <flatcc_json_parser_set_error>
    14cc:	b	1514 <flatcc_json_parser_coerce_uint8+0x80>
    14d0:	mov	r3, r4
    14d4:	mov	ip, #0
    14d8:	cmp	r5, ip
    14dc:	bne	14f0 <flatcc_json_parser_coerce_uint8+0x5c>
    14e0:	mov	ip, #255	; 0xff
    14e4:	cmp	r3, ip
    14e8:	bhi	14fc <flatcc_json_parser_coerce_uint8+0x68>
    14ec:	b	1508 <flatcc_json_parser_coerce_uint8+0x74>
    14f0:	mov	r3, #0
    14f4:	cmp	r5, r3
    14f8:	bls	1508 <flatcc_json_parser_coerce_uint8+0x74>
    14fc:	mov	r3, #7
    1500:	bl	0 <flatcc_json_parser_set_error>
    1504:	b	1514 <flatcc_json_parser_coerce_uint8+0x80>
    1508:	and	r3, r4, #255	; 0xff
    150c:	strb	r3, [r6]
    1510:	mov	r0, r1
    1514:	ldr	r4, [sp, #8]
    1518:	ldr	r5, [sp, #12]
    151c:	ldr	r6, [sp, #16]
    1520:	ldr	lr, [sp, #4]
    1524:	add	sp, sp, #24
    1528:	bx	lr

0000152c <flatcc_json_parser_coerce_int64>:
    152c:	mov	ip, sp
    1530:	sub	sp, sp, #24
    1534:	str	ip, [sp]
    1538:	str	lr, [sp, #4]
    153c:	str	r4, [sp, #8]
    1540:	str	r5, [sp, #12]
    1544:	str	r6, [sp, #16]
    1548:	str	r7, [sp, #20]
    154c:	ldr	r6, [ip, #8]
    1550:	ldr	r5, [ip, #4]
    1554:	ldr	r4, [ip]
    1558:	cmp	r3, #0
    155c:	beq	15b4 <flatcc_json_parser_coerce_int64+0x88>
    1560:	mov	r3, r5
    1564:	mov	ip, #-2147483648	; 0x80000000
    1568:	cmp	r3, ip
    156c:	bne	1584 <flatcc_json_parser_coerce_int64+0x58>
    1570:	mov	ip, r4
    1574:	mov	r3, #0
    1578:	cmp	ip, r3
    157c:	bhi	1594 <flatcc_json_parser_coerce_int64+0x68>
    1580:	b	15a0 <flatcc_json_parser_coerce_int64+0x74>
    1584:	mov	r3, r5
    1588:	mov	ip, #-2147483648	; 0x80000000
    158c:	cmp	r3, ip
    1590:	bls	15a0 <flatcc_json_parser_coerce_int64+0x74>
    1594:	mov	r3, #8
    1598:	bl	0 <flatcc_json_parser_set_error>
    159c:	b	15fc <flatcc_json_parser_coerce_int64+0xd0>
    15a0:	rsbs	r3, r4, #0
    15a4:	rsc	r0, r5, #0
    15a8:	str	r3, [r6]
    15ac:	str	r0, [r6, #4]
    15b0:	b	15f8 <flatcc_json_parser_coerce_int64+0xcc>
    15b4:	mov	ip, r5
    15b8:	mov	r3, r4
    15bc:	mvn	r7, #-2147483648	; 0x80000000
    15c0:	cmp	ip, r7
    15c4:	bne	15d8 <flatcc_json_parser_coerce_int64+0xac>
    15c8:	mvn	ip, #0
    15cc:	cmp	r3, ip
    15d0:	bhi	15e4 <flatcc_json_parser_coerce_int64+0xb8>
    15d4:	b	15f0 <flatcc_json_parser_coerce_int64+0xc4>
    15d8:	mvn	r3, #-2147483648	; 0x80000000
    15dc:	cmp	ip, r3
    15e0:	bls	15f0 <flatcc_json_parser_coerce_int64+0xc4>
    15e4:	mov	r3, #7
    15e8:	bl	0 <flatcc_json_parser_set_error>
    15ec:	b	15fc <flatcc_json_parser_coerce_int64+0xd0>
    15f0:	str	r4, [r6]
    15f4:	str	r5, [r6, #4]
    15f8:	mov	r0, r1
    15fc:	ldr	r4, [sp, #8]
    1600:	ldr	r5, [sp, #12]
    1604:	ldr	r6, [sp, #16]
    1608:	ldr	r7, [sp, #20]
    160c:	ldr	lr, [sp, #4]
    1610:	add	sp, sp, #24
    1614:	bx	lr

00001618 <flatcc_json_parser_coerce_int32>:
    1618:	mov	ip, sp
    161c:	sub	sp, sp, #24
    1620:	str	ip, [sp]
    1624:	str	lr, [sp, #4]
    1628:	str	r4, [sp, #8]
    162c:	str	r5, [sp, #12]
    1630:	str	r6, [sp, #16]
    1634:	str	r7, [sp, #20]
    1638:	ldr	r6, [ip, #8]
    163c:	ldr	r4, [ip, #4]
    1640:	ldr	r5, [ip]
    1644:	cmp	r3, #0
    1648:	beq	169c <flatcc_json_parser_coerce_int32+0x84>
    164c:	mov	ip, r5
    1650:	mov	r3, r4
    1654:	mov	r7, #0
    1658:	cmp	r3, r7
    165c:	bne	1670 <flatcc_json_parser_coerce_int32+0x58>
    1660:	mov	r3, #-2147483648	; 0x80000000
    1664:	cmp	ip, r3
    1668:	bhi	1680 <flatcc_json_parser_coerce_int32+0x68>
    166c:	b	168c <flatcc_json_parser_coerce_int32+0x74>
    1670:	mov	r3, r4
    1674:	mov	ip, #0
    1678:	cmp	r3, ip
    167c:	bls	168c <flatcc_json_parser_coerce_int32+0x74>
    1680:	mov	r3, #8
    1684:	bl	0 <flatcc_json_parser_set_error>
    1688:	b	16dc <flatcc_json_parser_coerce_int32+0xc4>
    168c:	rsbs	r0, r5, #0
    1690:	rsc	r2, r4, #0
    1694:	str	r0, [r6]
    1698:	b	16d8 <flatcc_json_parser_coerce_int32+0xc0>
    169c:	mov	ip, r5
    16a0:	mov	r3, #0
    16a4:	cmp	r4, r3
    16a8:	bne	16bc <flatcc_json_parser_coerce_int32+0xa4>
    16ac:	mvn	r3, #-2147483648	; 0x80000000
    16b0:	cmp	ip, r3
    16b4:	bhi	16c8 <flatcc_json_parser_coerce_int32+0xb0>
    16b8:	b	16d4 <flatcc_json_parser_coerce_int32+0xbc>
    16bc:	mov	ip, #0
    16c0:	cmp	r4, ip
    16c4:	bls	16d4 <flatcc_json_parser_coerce_int32+0xbc>
    16c8:	mov	r3, #7
    16cc:	bl	0 <flatcc_json_parser_set_error>
    16d0:	b	16dc <flatcc_json_parser_coerce_int32+0xc4>
    16d4:	str	r5, [r6]
    16d8:	mov	r0, r1
    16dc:	ldr	r4, [sp, #8]
    16e0:	ldr	r5, [sp, #12]
    16e4:	ldr	r6, [sp, #16]
    16e8:	ldr	r7, [sp, #20]
    16ec:	ldr	lr, [sp, #4]
    16f0:	add	sp, sp, #24
    16f4:	bx	lr

000016f8 <flatcc_json_parser_coerce_int16>:
    16f8:	mov	ip, sp
    16fc:	sub	sp, sp, #24
    1700:	str	ip, [sp]
    1704:	str	lr, [sp, #4]
    1708:	str	r4, [sp, #8]
    170c:	str	r5, [sp, #12]
    1710:	str	r6, [sp, #16]
    1714:	ldr	r6, [ip, #8]
    1718:	ldr	r4, [ip, #4]
    171c:	ldr	r5, [ip]
    1720:	cmp	r3, #0
    1724:	beq	1780 <flatcc_json_parser_coerce_int16+0x88>
    1728:	mov	r3, r4
    172c:	mov	ip, #0
    1730:	cmp	r3, ip
    1734:	bne	174c <flatcc_json_parser_coerce_int16+0x54>
    1738:	mov	r3, r5
    173c:	mov	ip, #32768	; 0x8000
    1740:	cmp	r3, ip
    1744:	bhi	175c <flatcc_json_parser_coerce_int16+0x64>
    1748:	b	1768 <flatcc_json_parser_coerce_int16+0x70>
    174c:	mov	r3, r4
    1750:	mov	ip, #0
    1754:	cmp	r3, ip
    1758:	bls	1768 <flatcc_json_parser_coerce_int16+0x70>
    175c:	mov	r3, #8
    1760:	bl	0 <flatcc_json_parser_set_error>
    1764:	b	17c8 <flatcc_json_parser_coerce_int16+0xd0>
    1768:	rsbs	r0, r5, #0
    176c:	rsc	r3, r4, #0
    1770:	sbfx	r0, r0, #0, #16
    1774:	sbfx	r3, r0, #0, #16
    1778:	strh	r3, [r6]
    177c:	b	17c4 <flatcc_json_parser_coerce_int16+0xcc>
    1780:	mov	ip, r5
    1784:	mov	r3, #0
    1788:	cmp	r4, r3
    178c:	bne	17a0 <flatcc_json_parser_coerce_int16+0xa8>
    1790:	movw	r3, #32767	; 0x7fff
    1794:	cmp	ip, r3
    1798:	bhi	17ac <flatcc_json_parser_coerce_int16+0xb4>
    179c:	b	17b8 <flatcc_json_parser_coerce_int16+0xc0>
    17a0:	mov	r3, #0
    17a4:	cmp	r4, r3
    17a8:	bls	17b8 <flatcc_json_parser_coerce_int16+0xc0>
    17ac:	mov	r3, #7
    17b0:	bl	0 <flatcc_json_parser_set_error>
    17b4:	b	17c8 <flatcc_json_parser_coerce_int16+0xd0>
    17b8:	sbfx	r2, r5, #0, #16
    17bc:	sbfx	ip, r2, #0, #16
    17c0:	strh	ip, [r6]
    17c4:	mov	r0, r1
    17c8:	ldr	r4, [sp, #8]
    17cc:	ldr	r5, [sp, #12]
    17d0:	ldr	r6, [sp, #16]
    17d4:	ldr	lr, [sp, #4]
    17d8:	add	sp, sp, #24
    17dc:	bx	lr

000017e0 <flatcc_json_parser_coerce_int8>:
    17e0:	mov	ip, sp
    17e4:	sub	sp, sp, #24
    17e8:	str	ip, [sp]
    17ec:	str	lr, [sp, #4]
    17f0:	str	r4, [sp, #8]
    17f4:	str	r5, [sp, #12]
    17f8:	str	r6, [sp, #16]
    17fc:	ldr	r6, [ip, #8]
    1800:	ldr	r4, [ip, #4]
    1804:	ldr	r5, [ip]
    1808:	cmp	r3, #0
    180c:	beq	1868 <flatcc_json_parser_coerce_int8+0x88>
    1810:	mov	r3, r4
    1814:	mov	ip, #0
    1818:	cmp	r3, ip
    181c:	bne	1834 <flatcc_json_parser_coerce_int8+0x54>
    1820:	mov	r3, r5
    1824:	mov	ip, #128	; 0x80
    1828:	cmp	r3, ip
    182c:	bhi	1844 <flatcc_json_parser_coerce_int8+0x64>
    1830:	b	1850 <flatcc_json_parser_coerce_int8+0x70>
    1834:	mov	r3, r4
    1838:	mov	ip, #0
    183c:	cmp	r3, ip
    1840:	bls	1850 <flatcc_json_parser_coerce_int8+0x70>
    1844:	mov	r3, #8
    1848:	bl	0 <flatcc_json_parser_set_error>
    184c:	b	18b0 <flatcc_json_parser_coerce_int8+0xd0>
    1850:	rsbs	r0, r5, #0
    1854:	rsc	r3, r4, #0
    1858:	sbfx	r0, r0, #0, #8
    185c:	sbfx	r3, r0, #0, #8
    1860:	strb	r3, [r6]
    1864:	b	18ac <flatcc_json_parser_coerce_int8+0xcc>
    1868:	mov	ip, r5
    186c:	mov	r3, #0
    1870:	cmp	r4, r3
    1874:	bne	1888 <flatcc_json_parser_coerce_int8+0xa8>
    1878:	mov	r3, #127	; 0x7f
    187c:	cmp	ip, r3
    1880:	bhi	1894 <flatcc_json_parser_coerce_int8+0xb4>
    1884:	b	18a0 <flatcc_json_parser_coerce_int8+0xc0>
    1888:	mov	r3, #0
    188c:	cmp	r4, r3
    1890:	bls	18a0 <flatcc_json_parser_coerce_int8+0xc0>
    1894:	mov	r3, #7
    1898:	bl	0 <flatcc_json_parser_set_error>
    189c:	b	18b0 <flatcc_json_parser_coerce_int8+0xd0>
    18a0:	sbfx	r2, r5, #0, #8
    18a4:	sbfx	ip, r2, #0, #8
    18a8:	strb	ip, [r6]
    18ac:	mov	r0, r1
    18b0:	ldr	r4, [sp, #8]
    18b4:	ldr	r5, [sp, #12]
    18b8:	ldr	r6, [sp, #16]
    18bc:	ldr	lr, [sp, #4]
    18c0:	add	sp, sp, #24
    18c4:	bx	lr

000018c8 <flatcc_json_parser_coerce_float>:
    18c8:	mov	ip, sp
    18cc:	sub	sp, sp, #16
    18d0:	str	ip, [sp]
    18d4:	str	lr, [sp, #4]
    18d8:	str	r4, [sp, #8]
    18dc:	str	r5, [sp, #12]
    18e0:	ldr	r5, [ip, #8]
    18e4:	mov	r4, r1
    18e8:	ldr	r1, [ip, #4]
    18ec:	ldr	r0, [ip]
    18f0:	cmp	r3, #0
    18f4:	beq	1904 <flatcc_json_parser_coerce_float+0x3c>
    18f8:	bl	0 <__compcert_i64_utof>
    18fc:	vneg.f32	s0, s0
    1900:	b	1908 <flatcc_json_parser_coerce_float+0x40>
    1904:	bl	0 <__compcert_i64_utof>
    1908:	vstr	s0, [r5]
    190c:	mov	r0, r4
    1910:	ldr	r4, [sp, #8]
    1914:	ldr	r5, [sp, #12]
    1918:	ldr	lr, [sp, #4]
    191c:	add	sp, sp, #16
    1920:	bx	lr

00001924 <flatcc_json_parser_coerce_double>:
    1924:	mov	ip, sp
    1928:	sub	sp, sp, #16
    192c:	str	ip, [sp]
    1930:	str	lr, [sp, #4]
    1934:	str	r4, [sp, #8]
    1938:	str	r5, [sp, #12]
    193c:	ldr	r5, [ip, #8]
    1940:	mov	r4, r1
    1944:	ldr	r1, [ip, #4]
    1948:	ldr	r0, [ip]
    194c:	cmp	r3, #0
    1950:	beq	1960 <flatcc_json_parser_coerce_double+0x3c>
    1954:	bl	0 <__compcert_i64_utod>
    1958:	vneg.f64	d0, d0
    195c:	b	1964 <flatcc_json_parser_coerce_double+0x40>
    1960:	bl	0 <__compcert_i64_utod>
    1964:	vstr	d0, [r5]
    1968:	mov	r0, r4
    196c:	ldr	r4, [sp, #8]
    1970:	ldr	r5, [sp, #12]
    1974:	ldr	lr, [sp, #4]
    1978:	add	sp, sp, #16
    197c:	bx	lr

00001980 <flatcc_json_parser_none>:
    1980:	mov	ip, sp
    1984:	sub	sp, sp, #24
    1988:	str	ip, [sp]
    198c:	str	lr, [sp, #4]
    1990:	str	r4, [sp, #8]
    1994:	str	r5, [sp, #12]
    1998:	str	r6, [sp, #16]
    199c:	mov	r4, r2
    19a0:	mov	r5, r1
    19a4:	mov	r6, r0
    19a8:	sub	r2, r4, r5
    19ac:	cmp	r2, #4
    19b0:	blt	19d4 <flatcc_json_parser_none+0x54>
    19b4:	ldr	r1, [pc, #88]	; 1a14 <flatcc_json_parser_none+0x94>
    19b8:	mov	r2, #4
    19bc:	mov	r0, r5
    19c0:	bl	0 <memcmp>
    19c4:	cmp	r0, #0
    19c8:	moveq	ip, #1
    19cc:	movne	ip, #0
    19d0:	b	19d8 <flatcc_json_parser_none+0x58>
    19d4:	mov	ip, #0
    19d8:	cmp	ip, #0
    19dc:	beq	19e8 <flatcc_json_parser_none+0x68>
    19e0:	add	r0, r5, #4
    19e4:	b	19fc <flatcc_json_parser_none+0x7c>
    19e8:	mov	r3, #26
    19ec:	mov	r2, r4
    19f0:	mov	r1, r5
    19f4:	mov	r0, r6
    19f8:	bl	0 <flatcc_json_parser_set_error>
    19fc:	ldr	r4, [sp, #8]
    1a00:	ldr	r5, [sp, #12]
    1a04:	ldr	r6, [sp, #16]
    1a08:	ldr	lr, [sp, #4]
    1a0c:	add	sp, sp, #24
    1a10:	bx	lr
    1a14:	.word	0x0000024f

00001a18 <flatcc_json_parser_uint64>:
    1a18:	mov	ip, sp
    1a1c:	sub	sp, sp, #56	; 0x38
    1a20:	str	ip, [sp, #12]
    1a24:	str	lr, [sp, #16]
    1a28:	str	r4, [sp, #24]
    1a2c:	str	r5, [sp, #28]
    1a30:	str	r6, [sp, #32]
    1a34:	str	r7, [sp, #36]	; 0x24
    1a38:	mov	r7, r3
    1a3c:	mov	r4, r2
    1a40:	mov	r5, r0
    1a44:	mov	r2, #0
    1a48:	mov	r0, #0
    1a4c:	str	r0, [sp, #48]	; 0x30
    1a50:	str	r2, [sp, #52]	; 0x34
    1a54:	mov	r2, #0
    1a58:	str	r2, [sp, #40]	; 0x28
    1a5c:	mov	r6, r1
    1a60:	mov	r3, #0
    1a64:	mov	r2, #0
    1a68:	str	r2, [r7]
    1a6c:	str	r3, [r7, #4]
    1a70:	cmp	r1, r4
    1a74:	bne	1a80 <flatcc_json_parser_uint64+0x68>
    1a78:	mov	r0, r1
    1a7c:	b	1ac8 <flatcc_json_parser_uint64+0xb0>
    1a80:	add	r3, sp, #40	; 0x28
    1a84:	add	r2, sp, #48	; 0x30
    1a88:	str	r2, [sp]
    1a8c:	mov	r2, r4
    1a90:	mov	r0, r5
    1a94:	bl	0 <flatcc_json_parser_integer>
    1a98:	cmp	r0, r6
    1a9c:	beq	1ac8 <flatcc_json_parser_uint64+0xb0>
    1aa0:	ldr	r3, [sp, #40]	; 0x28
    1aa4:	ldr	ip, [sp, #48]	; 0x30
    1aa8:	ldr	r1, [sp, #52]	; 0x34
    1aac:	str	r7, [sp, #8]
    1ab0:	str	r1, [sp, #4]
    1ab4:	str	ip, [sp]
    1ab8:	mov	r2, r4
    1abc:	mov	r1, r0
    1ac0:	mov	r0, r5
    1ac4:	bl	1288 <flatcc_json_parser_coerce_uint64>
    1ac8:	ldr	r4, [sp, #24]
    1acc:	ldr	r5, [sp, #28]
    1ad0:	ldr	r6, [sp, #32]
    1ad4:	ldr	r7, [sp, #36]	; 0x24
    1ad8:	ldr	lr, [sp, #16]
    1adc:	add	sp, sp, #56	; 0x38
    1ae0:	bx	lr

00001ae4 <flatcc_json_parser_uint32>:
    1ae4:	mov	ip, sp
    1ae8:	sub	sp, sp, #56	; 0x38
    1aec:	str	ip, [sp, #12]
    1af0:	str	lr, [sp, #16]
    1af4:	str	r4, [sp, #24]
    1af8:	str	r5, [sp, #28]
    1afc:	str	r6, [sp, #32]
    1b00:	str	r7, [sp, #36]	; 0x24
    1b04:	mov	r7, r3
    1b08:	mov	r5, r2
    1b0c:	mov	r6, r0
    1b10:	mov	r2, #0
    1b14:	mov	r0, #0
    1b18:	str	r0, [sp, #48]	; 0x30
    1b1c:	str	r2, [sp, #52]	; 0x34
    1b20:	mov	r3, #0
    1b24:	str	r3, [sp, #40]	; 0x28
    1b28:	mov	r4, r1
    1b2c:	mov	r3, #0
    1b30:	str	r3, [r7]
    1b34:	cmp	r1, r5
    1b38:	bne	1b44 <flatcc_json_parser_uint32+0x60>
    1b3c:	mov	r0, r1
    1b40:	b	1b8c <flatcc_json_parser_uint32+0xa8>
    1b44:	add	r3, sp, #40	; 0x28
    1b48:	add	r2, sp, #48	; 0x30
    1b4c:	str	r2, [sp]
    1b50:	mov	r2, r5
    1b54:	mov	r0, r6
    1b58:	bl	0 <flatcc_json_parser_integer>
    1b5c:	cmp	r0, r4
    1b60:	beq	1b8c <flatcc_json_parser_uint32+0xa8>
    1b64:	ldr	r3, [sp, #40]	; 0x28
    1b68:	ldr	ip, [sp, #48]	; 0x30
    1b6c:	ldr	r2, [sp, #52]	; 0x34
    1b70:	str	r7, [sp, #8]
    1b74:	str	r2, [sp, #4]
    1b78:	str	ip, [sp]
    1b7c:	mov	r2, r5
    1b80:	mov	r1, r0
    1b84:	mov	r0, r6
    1b88:	bl	1364 <flatcc_json_parser_coerce_uint32>
    1b8c:	ldr	r4, [sp, #24]
    1b90:	ldr	r5, [sp, #28]
    1b94:	ldr	r6, [sp, #32]
    1b98:	ldr	r7, [sp, #36]	; 0x24
    1b9c:	ldr	lr, [sp, #16]
    1ba0:	add	sp, sp, #56	; 0x38
    1ba4:	bx	lr

00001ba8 <flatcc_json_parser_uint16>:
    1ba8:	mov	ip, sp
    1bac:	sub	sp, sp, #56	; 0x38
    1bb0:	str	ip, [sp, #12]
    1bb4:	str	lr, [sp, #16]
    1bb8:	str	r4, [sp, #24]
    1bbc:	str	r5, [sp, #28]
    1bc0:	str	r6, [sp, #32]
    1bc4:	str	r7, [sp, #36]	; 0x24
    1bc8:	mov	r7, r3
    1bcc:	mov	r5, r2
    1bd0:	mov	r6, r0
    1bd4:	mov	r2, #0
    1bd8:	mov	r0, #0
    1bdc:	str	r0, [sp, #48]	; 0x30
    1be0:	str	r2, [sp, #52]	; 0x34
    1be4:	mov	r3, #0
    1be8:	str	r3, [sp, #40]	; 0x28
    1bec:	mov	r4, r1
    1bf0:	mov	r3, #0
    1bf4:	strh	r3, [r7]
    1bf8:	cmp	r1, r5
    1bfc:	bne	1c08 <flatcc_json_parser_uint16+0x60>
    1c00:	mov	r0, r1
    1c04:	b	1c50 <flatcc_json_parser_uint16+0xa8>
    1c08:	add	r3, sp, #40	; 0x28
    1c0c:	add	r2, sp, #48	; 0x30
    1c10:	str	r2, [sp]
    1c14:	mov	r2, r5
    1c18:	mov	r0, r6
    1c1c:	bl	0 <flatcc_json_parser_integer>
    1c20:	cmp	r0, r4
    1c24:	beq	1c50 <flatcc_json_parser_uint16+0xa8>
    1c28:	ldr	r3, [sp, #40]	; 0x28
    1c2c:	ldr	ip, [sp, #48]	; 0x30
    1c30:	ldr	r2, [sp, #52]	; 0x34
    1c34:	str	r7, [sp, #8]
    1c38:	str	r2, [sp, #4]
    1c3c:	str	ip, [sp]
    1c40:	mov	r2, r5
    1c44:	mov	r1, r0
    1c48:	mov	r0, r6
    1c4c:	bl	13f8 <flatcc_json_parser_coerce_uint16>
    1c50:	ldr	r4, [sp, #24]
    1c54:	ldr	r5, [sp, #28]
    1c58:	ldr	r6, [sp, #32]
    1c5c:	ldr	r7, [sp, #36]	; 0x24
    1c60:	ldr	lr, [sp, #16]
    1c64:	add	sp, sp, #56	; 0x38
    1c68:	bx	lr

00001c6c <flatcc_json_parser_uint8>:
    1c6c:	mov	ip, sp
    1c70:	sub	sp, sp, #56	; 0x38
    1c74:	str	ip, [sp, #12]
    1c78:	str	lr, [sp, #16]
    1c7c:	str	r4, [sp, #24]
    1c80:	str	r5, [sp, #28]
    1c84:	str	r6, [sp, #32]
    1c88:	str	r7, [sp, #36]	; 0x24
    1c8c:	mov	r7, r3
    1c90:	mov	r5, r2
    1c94:	mov	r6, r0
    1c98:	mov	r2, #0
    1c9c:	mov	r0, #0
    1ca0:	str	r0, [sp, #48]	; 0x30
    1ca4:	str	r2, [sp, #52]	; 0x34
    1ca8:	mov	r3, #0
    1cac:	str	r3, [sp, #40]	; 0x28
    1cb0:	mov	r4, r1
    1cb4:	mov	r3, #0
    1cb8:	strb	r3, [r7]
    1cbc:	cmp	r1, r5
    1cc0:	bne	1ccc <flatcc_json_parser_uint8+0x60>
    1cc4:	mov	r0, r1
    1cc8:	b	1d14 <flatcc_json_parser_uint8+0xa8>
    1ccc:	add	r3, sp, #40	; 0x28
    1cd0:	add	r2, sp, #48	; 0x30
    1cd4:	str	r2, [sp]
    1cd8:	mov	r2, r5
    1cdc:	mov	r0, r6
    1ce0:	bl	0 <flatcc_json_parser_integer>
    1ce4:	cmp	r0, r4
    1ce8:	beq	1d14 <flatcc_json_parser_uint8+0xa8>
    1cec:	ldr	r3, [sp, #40]	; 0x28
    1cf0:	ldr	ip, [sp, #48]	; 0x30
    1cf4:	ldr	r2, [sp, #52]	; 0x34
    1cf8:	str	r7, [sp, #8]
    1cfc:	str	r2, [sp, #4]
    1d00:	str	ip, [sp]
    1d04:	mov	r2, r5
    1d08:	mov	r1, r0
    1d0c:	mov	r0, r6
    1d10:	bl	1494 <flatcc_json_parser_coerce_uint8>
    1d14:	ldr	r4, [sp, #24]
    1d18:	ldr	r5, [sp, #28]
    1d1c:	ldr	r6, [sp, #32]
    1d20:	ldr	r7, [sp, #36]	; 0x24
    1d24:	ldr	lr, [sp, #16]
    1d28:	add	sp, sp, #56	; 0x38
    1d2c:	bx	lr

00001d30 <flatcc_json_parser_int64>:
    1d30:	mov	ip, sp
    1d34:	sub	sp, sp, #56	; 0x38
    1d38:	str	ip, [sp, #12]
    1d3c:	str	lr, [sp, #16]
    1d40:	str	r4, [sp, #24]
    1d44:	str	r5, [sp, #28]
    1d48:	str	r6, [sp, #32]
    1d4c:	str	r7, [sp, #36]	; 0x24
    1d50:	mov	r7, r3
    1d54:	mov	r4, r2
    1d58:	mov	r5, r0
    1d5c:	mov	r2, #0
    1d60:	mov	r0, #0
    1d64:	str	r0, [sp, #48]	; 0x30
    1d68:	str	r2, [sp, #52]	; 0x34
    1d6c:	mov	r2, #0
    1d70:	str	r2, [sp, #40]	; 0x28
    1d74:	mov	r6, r1
    1d78:	mov	r3, #0
    1d7c:	mov	r2, #0
    1d80:	str	r2, [r7]
    1d84:	str	r3, [r7, #4]
    1d88:	cmp	r1, r4
    1d8c:	bne	1d98 <flatcc_json_parser_int64+0x68>
    1d90:	mov	r0, r1
    1d94:	b	1de0 <flatcc_json_parser_int64+0xb0>
    1d98:	add	r3, sp, #40	; 0x28
    1d9c:	add	r2, sp, #48	; 0x30
    1da0:	str	r2, [sp]
    1da4:	mov	r2, r4
    1da8:	mov	r0, r5
    1dac:	bl	0 <flatcc_json_parser_integer>
    1db0:	cmp	r0, r6
    1db4:	beq	1de0 <flatcc_json_parser_int64+0xb0>
    1db8:	ldr	r3, [sp, #40]	; 0x28
    1dbc:	ldr	ip, [sp, #48]	; 0x30
    1dc0:	ldr	r1, [sp, #52]	; 0x34
    1dc4:	str	r7, [sp, #8]
    1dc8:	str	r1, [sp, #4]
    1dcc:	str	ip, [sp]
    1dd0:	mov	r2, r4
    1dd4:	mov	r1, r0
    1dd8:	mov	r0, r5
    1ddc:	bl	152c <flatcc_json_parser_coerce_int64>
    1de0:	ldr	r4, [sp, #24]
    1de4:	ldr	r5, [sp, #28]
    1de8:	ldr	r6, [sp, #32]
    1dec:	ldr	r7, [sp, #36]	; 0x24
    1df0:	ldr	lr, [sp, #16]
    1df4:	add	sp, sp, #56	; 0x38
    1df8:	bx	lr

00001dfc <flatcc_json_parser_int32>:
    1dfc:	mov	ip, sp
    1e00:	sub	sp, sp, #56	; 0x38
    1e04:	str	ip, [sp, #12]
    1e08:	str	lr, [sp, #16]
    1e0c:	str	r4, [sp, #24]
    1e10:	str	r5, [sp, #28]
    1e14:	str	r6, [sp, #32]
    1e18:	str	r7, [sp, #36]	; 0x24
    1e1c:	mov	r7, r3
    1e20:	mov	r5, r2
    1e24:	mov	r6, r0
    1e28:	mov	r2, #0
    1e2c:	mov	r0, #0
    1e30:	str	r0, [sp, #48]	; 0x30
    1e34:	str	r2, [sp, #52]	; 0x34
    1e38:	mov	r3, #0
    1e3c:	str	r3, [sp, #40]	; 0x28
    1e40:	mov	r4, r1
    1e44:	mov	r3, #0
    1e48:	str	r3, [r7]
    1e4c:	cmp	r1, r5
    1e50:	bne	1e5c <flatcc_json_parser_int32+0x60>
    1e54:	mov	r0, r1
    1e58:	b	1ea4 <flatcc_json_parser_int32+0xa8>
    1e5c:	add	r3, sp, #40	; 0x28
    1e60:	add	r2, sp, #48	; 0x30
    1e64:	str	r2, [sp]
    1e68:	mov	r2, r5
    1e6c:	mov	r0, r6
    1e70:	bl	0 <flatcc_json_parser_integer>
    1e74:	cmp	r0, r4
    1e78:	beq	1ea4 <flatcc_json_parser_int32+0xa8>
    1e7c:	ldr	r3, [sp, #40]	; 0x28
    1e80:	ldr	ip, [sp, #48]	; 0x30
    1e84:	ldr	r2, [sp, #52]	; 0x34
    1e88:	str	r7, [sp, #8]
    1e8c:	str	r2, [sp, #4]
    1e90:	str	ip, [sp]
    1e94:	mov	r2, r5
    1e98:	mov	r1, r0
    1e9c:	mov	r0, r6
    1ea0:	bl	1618 <flatcc_json_parser_coerce_int32>
    1ea4:	ldr	r4, [sp, #24]
    1ea8:	ldr	r5, [sp, #28]
    1eac:	ldr	r6, [sp, #32]
    1eb0:	ldr	r7, [sp, #36]	; 0x24
    1eb4:	ldr	lr, [sp, #16]
    1eb8:	add	sp, sp, #56	; 0x38
    1ebc:	bx	lr

00001ec0 <flatcc_json_parser_int16>:
    1ec0:	mov	ip, sp
    1ec4:	sub	sp, sp, #56	; 0x38
    1ec8:	str	ip, [sp, #12]
    1ecc:	str	lr, [sp, #16]
    1ed0:	str	r4, [sp, #24]
    1ed4:	str	r5, [sp, #28]
    1ed8:	str	r6, [sp, #32]
    1edc:	str	r7, [sp, #36]	; 0x24
    1ee0:	mov	r7, r3
    1ee4:	mov	r5, r2
    1ee8:	mov	r6, r0
    1eec:	mov	r2, #0
    1ef0:	mov	r0, #0
    1ef4:	str	r0, [sp, #48]	; 0x30
    1ef8:	str	r2, [sp, #52]	; 0x34
    1efc:	mov	r3, #0
    1f00:	str	r3, [sp, #40]	; 0x28
    1f04:	mov	r4, r1
    1f08:	mov	r3, #0
    1f0c:	strh	r3, [r7]
    1f10:	cmp	r1, r5
    1f14:	bne	1f20 <flatcc_json_parser_int16+0x60>
    1f18:	mov	r0, r1
    1f1c:	b	1f68 <flatcc_json_parser_int16+0xa8>
    1f20:	add	r3, sp, #40	; 0x28
    1f24:	add	r2, sp, #48	; 0x30
    1f28:	str	r2, [sp]
    1f2c:	mov	r2, r5
    1f30:	mov	r0, r6
    1f34:	bl	0 <flatcc_json_parser_integer>
    1f38:	cmp	r0, r4
    1f3c:	beq	1f68 <flatcc_json_parser_int16+0xa8>
    1f40:	ldr	r3, [sp, #40]	; 0x28
    1f44:	ldr	ip, [sp, #48]	; 0x30
    1f48:	ldr	r2, [sp, #52]	; 0x34
    1f4c:	str	r7, [sp, #8]
    1f50:	str	r2, [sp, #4]
    1f54:	str	ip, [sp]
    1f58:	mov	r2, r5
    1f5c:	mov	r1, r0
    1f60:	mov	r0, r6
    1f64:	bl	16f8 <flatcc_json_parser_coerce_int16>
    1f68:	ldr	r4, [sp, #24]
    1f6c:	ldr	r5, [sp, #28]
    1f70:	ldr	r6, [sp, #32]
    1f74:	ldr	r7, [sp, #36]	; 0x24
    1f78:	ldr	lr, [sp, #16]
    1f7c:	add	sp, sp, #56	; 0x38
    1f80:	bx	lr

00001f84 <flatcc_json_parser_int8>:
    1f84:	mov	ip, sp
    1f88:	sub	sp, sp, #56	; 0x38
    1f8c:	str	ip, [sp, #12]
    1f90:	str	lr, [sp, #16]
    1f94:	str	r4, [sp, #24]
    1f98:	str	r5, [sp, #28]
    1f9c:	str	r6, [sp, #32]
    1fa0:	str	r7, [sp, #36]	; 0x24
    1fa4:	mov	r7, r3
    1fa8:	mov	r5, r2
    1fac:	mov	r6, r0
    1fb0:	mov	r2, #0
    1fb4:	mov	r0, #0
    1fb8:	str	r0, [sp, #48]	; 0x30
    1fbc:	str	r2, [sp, #52]	; 0x34
    1fc0:	mov	r3, #0
    1fc4:	str	r3, [sp, #40]	; 0x28
    1fc8:	mov	r4, r1
    1fcc:	mov	r3, #0
    1fd0:	strb	r3, [r7]
    1fd4:	cmp	r1, r5
    1fd8:	bne	1fe4 <flatcc_json_parser_int8+0x60>
    1fdc:	mov	r0, r1
    1fe0:	b	202c <flatcc_json_parser_int8+0xa8>
    1fe4:	add	r3, sp, #40	; 0x28
    1fe8:	add	r2, sp, #48	; 0x30
    1fec:	str	r2, [sp]
    1ff0:	mov	r2, r5
    1ff4:	mov	r0, r6
    1ff8:	bl	0 <flatcc_json_parser_integer>
    1ffc:	cmp	r0, r4
    2000:	beq	202c <flatcc_json_parser_int8+0xa8>
    2004:	ldr	r3, [sp, #40]	; 0x28
    2008:	ldr	ip, [sp, #48]	; 0x30
    200c:	ldr	r2, [sp, #52]	; 0x34
    2010:	str	r7, [sp, #8]
    2014:	str	r2, [sp, #4]
    2018:	str	ip, [sp]
    201c:	mov	r2, r5
    2020:	mov	r1, r0
    2024:	mov	r0, r6
    2028:	bl	17e0 <flatcc_json_parser_coerce_int8>
    202c:	ldr	r4, [sp, #24]
    2030:	ldr	r5, [sp, #28]
    2034:	ldr	r6, [sp, #32]
    2038:	ldr	r7, [sp, #36]	; 0x24
    203c:	ldr	lr, [sp, #16]
    2040:	add	sp, sp, #56	; 0x38
    2044:	bx	lr

00002048 <flatcc_json_parser_bool>:
    2048:	mov	ip, sp
    204c:	sub	sp, sp, #32
    2050:	str	ip, [sp]
    2054:	str	lr, [sp, #4]
    2058:	str	r4, [sp, #8]
    205c:	str	r5, [sp, #12]
    2060:	str	r6, [sp, #16]
    2064:	str	r7, [sp, #20]
    2068:	mov	r5, r3
    206c:	mov	r6, r2
    2070:	mov	r4, r1
    2074:	mov	r7, r0
    2078:	sub	r3, r6, r4
    207c:	cmp	r3, #4
    2080:	blt	20a4 <flatcc_json_parser_bool+0x5c>
    2084:	ldr	r1, [pc, #200]	; 2154 <flatcc_json_parser_bool+0x10c>
    2088:	mov	r2, #4
    208c:	mov	r0, r4
    2090:	bl	0 <memcmp>
    2094:	cmp	r0, #0
    2098:	moveq	r1, #1
    209c:	movne	r1, #0
    20a0:	b	20a8 <flatcc_json_parser_bool+0x60>
    20a4:	mov	r1, #0
    20a8:	cmp	r1, #0
    20ac:	bne	2128 <flatcc_json_parser_bool+0xe0>
    20b0:	sub	r3, r6, r4
    20b4:	cmp	r3, #5
    20b8:	blt	20dc <flatcc_json_parser_bool+0x94>
    20bc:	ldr	r1, [pc, #140]	; 2150 <flatcc_json_parser_bool+0x108>
    20c0:	mov	r2, #5
    20c4:	mov	r0, r4
    20c8:	bl	0 <memcmp>
    20cc:	cmp	r0, #0
    20d0:	moveq	ip, #1
    20d4:	movne	ip, #0
    20d8:	b	20e0 <flatcc_json_parser_bool+0x98>
    20dc:	mov	ip, #0
    20e0:	cmp	ip, #0
    20e4:	beq	20f8 <flatcc_json_parser_bool+0xb0>
    20e8:	mov	r2, #0
    20ec:	strb	r2, [r5]
    20f0:	add	r0, r4, #5
    20f4:	b	2134 <flatcc_json_parser_bool+0xec>
    20f8:	add	r3, sp, #24
    20fc:	mov	r2, r6
    2100:	mov	r1, r4
    2104:	mov	r0, r7
    2108:	bl	1c6c <flatcc_json_parser_uint8>
    210c:	ldrb	r1, [sp, #24]
    2110:	cmp	r1, #0
    2114:	movne	r1, #1
    2118:	moveq	r1, #0
    211c:	and	r1, r1, #255	; 0xff
    2120:	strb	r1, [r5]
    2124:	b	2134 <flatcc_json_parser_bool+0xec>
    2128:	mov	r0, #1
    212c:	strb	r0, [r5]
    2130:	add	r0, r4, #4
    2134:	ldr	r4, [sp, #8]
    2138:	ldr	r5, [sp, #12]
    213c:	ldr	r6, [sp, #16]
    2140:	ldr	r7, [sp, #20]
    2144:	ldr	lr, [sp, #4]
    2148:	add	sp, sp, #32
    214c:	bx	lr
    2150:	.word	0x00000278
    2154:	.word	0x0000004f

00002158 <flatcc_json_parser_symbolic_uint64>:
    2158:	mov	ip, sp
    215c:	sub	sp, sp, #80	; 0x50
    2160:	str	ip, [sp, #12]
    2164:	str	lr, [sp, #16]
    2168:	str	r4, [sp, #24]
    216c:	str	r5, [sp, #28]
    2170:	str	r6, [sp, #32]
    2174:	str	r7, [sp, #36]	; 0x24
    2178:	str	r8, [sp, #40]	; 0x28
    217c:	str	r9, [sp, #44]	; 0x2c
    2180:	str	sl, [sp, #48]	; 0x30
    2184:	str	fp, [sp, #52]	; 0x34
    2188:	ldr	r9, [ip]
    218c:	mov	r4, r3
    2190:	mov	r5, r2
    2194:	mov	r6, r0
    2198:	mov	r0, #0
    219c:	mov	ip, #0
    21a0:	str	ip, [sp, #64]	; 0x40
    21a4:	str	r0, [sp, #68]	; 0x44
    21a8:	mov	r8, #0
    21ac:	mov	r2, #0
    21b0:	mov	r0, #0
    21b4:	str	r0, [r9]
    21b8:	str	r2, [r9, #4]
    21bc:	mov	r2, r5
    21c0:	mov	r0, r6
    21c4:	bl	d20 <flatcc_json_parser_constant_start>
    21c8:	mov	r7, r0
    21cc:	cmp	r7, r5
    21d0:	beq	2318 <flatcc_json_parser_symbolic_uint64+0x1c0>
    21d4:	mov	fp, r4
    21d8:	mov	r1, r7
    21dc:	mov	sl, r1
    21e0:	ldr	r7, [fp]
    21e4:	add	r3, sp, #56	; 0x38
    21e8:	add	r0, sp, #72	; 0x48
    21ec:	add	r2, sp, #60	; 0x3c
    21f0:	str	r2, [sp, #4]
    21f4:	str	r0, [sp]
    21f8:	mov	r2, r5
    21fc:	mov	r0, r6
    2200:	blx	r7
    2204:	mov	r7, r0
    2208:	cmp	r7, r5
    220c:	beq	2318 <flatcc_json_parser_symbolic_uint64+0x1c0>
    2210:	cmp	r7, sl
    2214:	bne	2230 <flatcc_json_parser_symbolic_uint64+0xd8>
    2218:	add	fp, fp, #4
    221c:	ldr	r3, [fp]
    2220:	cmp	r3, #0
    2224:	movne	r0, #1
    2228:	moveq	r0, #0
    222c:	b	2234 <flatcc_json_parser_symbolic_uint64+0xdc>
    2230:	mov	r0, #0
    2234:	cmp	r0, #0
    2238:	bne	21d8 <flatcc_json_parser_symbolic_uint64+0x80>
    223c:	cmp	sl, r7
    2240:	bne	2260 <flatcc_json_parser_symbolic_uint64+0x108>
    2244:	mov	r3, #23
    2248:	mov	r2, r5
    224c:	mov	r1, r7
    2250:	mov	r0, r6
    2254:	bl	0 <flatcc_json_parser_set_error>
    2258:	mov	r7, r0
    225c:	b	2318 <flatcc_json_parser_symbolic_uint64+0x1c0>
    2260:	mov	r3, r8
    2264:	add	r8, r3, #1
    2268:	cmp	r3, #0
    226c:	beq	2284 <flatcc_json_parser_symbolic_uint64+0x12c>
    2270:	ldr	r1, [r6, #12]
    2274:	cmp	r1, #0
    2278:	movne	r2, #1
    227c:	moveq	r2, #0
    2280:	b	2288 <flatcc_json_parser_symbolic_uint64+0x130>
    2284:	mov	r2, #0
    2288:	cmp	r2, #0
    228c:	beq	22ac <flatcc_json_parser_symbolic_uint64+0x154>
    2290:	mov	r3, #14
    2294:	mov	r2, r5
    2298:	mov	r1, r7
    229c:	mov	r0, r6
    22a0:	bl	0 <flatcc_json_parser_set_error>
    22a4:	mov	r7, r0
    22a8:	b	2318 <flatcc_json_parser_symbolic_uint64+0x1c0>
    22ac:	ldr	r3, [sp, #56]	; 0x38
    22b0:	ldr	r1, [sp, #72]	; 0x48
    22b4:	ldr	r0, [sp, #76]	; 0x4c
    22b8:	add	r2, sp, #64	; 0x40
    22bc:	str	r2, [sp, #8]
    22c0:	str	r0, [sp, #4]
    22c4:	str	r1, [sp]
    22c8:	mov	r2, r5
    22cc:	mov	r1, r7
    22d0:	mov	r0, r6
    22d4:	bl	1288 <flatcc_json_parser_coerce_uint64>
    22d8:	cmp	r5, r0
    22dc:	bne	22e8 <flatcc_json_parser_symbolic_uint64+0x190>
    22e0:	mov	r7, r5
    22e4:	b	2318 <flatcc_json_parser_symbolic_uint64+0x1c0>
    22e8:	ldr	r1, [r9]
    22ec:	ldr	r2, [r9, #4]
    22f0:	ldr	ip, [sp, #64]	; 0x40
    22f4:	ldr	r3, [sp, #68]	; 0x44
    22f8:	adds	lr, r1, ip
    22fc:	adc	r2, r2, r3
    2300:	mov	r3, lr
    2304:	str	r3, [r9]
    2308:	str	r2, [r9, #4]
    230c:	ldr	r1, [sp, #60]	; 0x3c
    2310:	cmp	r1, #0
    2314:	bne	21d4 <flatcc_json_parser_symbolic_uint64+0x7c>
    2318:	mov	r0, r7
    231c:	ldr	r4, [sp, #24]
    2320:	ldr	r5, [sp, #28]
    2324:	ldr	r6, [sp, #32]
    2328:	ldr	r7, [sp, #36]	; 0x24
    232c:	ldr	r8, [sp, #40]	; 0x28
    2330:	ldr	r9, [sp, #44]	; 0x2c
    2334:	ldr	sl, [sp, #48]	; 0x30
    2338:	ldr	fp, [sp, #52]	; 0x34
    233c:	ldr	lr, [sp, #16]
    2340:	add	sp, sp, #80	; 0x50
    2344:	bx	lr

00002348 <flatcc_json_parser_symbolic_uint32>:
    2348:	mov	ip, sp
    234c:	sub	sp, sp, #80	; 0x50
    2350:	str	ip, [sp, #12]
    2354:	str	lr, [sp, #16]
    2358:	str	r4, [sp, #24]
    235c:	str	r5, [sp, #28]
    2360:	str	r6, [sp, #32]
    2364:	str	r7, [sp, #36]	; 0x24
    2368:	str	r8, [sp, #40]	; 0x28
    236c:	str	r9, [sp, #44]	; 0x2c
    2370:	str	sl, [sp, #48]	; 0x30
    2374:	str	fp, [sp, #52]	; 0x34
    2378:	ldr	r9, [ip]
    237c:	mov	r7, r3
    2380:	mov	r5, r2
    2384:	mov	r6, r0
    2388:	mov	r2, #0
    238c:	str	r2, [sp, #56]	; 0x38
    2390:	mov	r8, #0
    2394:	mov	r2, #0
    2398:	str	r2, [r9]
    239c:	mov	r2, r5
    23a0:	mov	r0, r6
    23a4:	bl	d20 <flatcc_json_parser_constant_start>
    23a8:	mov	r4, r0
    23ac:	cmp	r4, r5
    23b0:	beq	24e4 <flatcc_json_parser_symbolic_uint32+0x19c>
    23b4:	mov	fp, r7
    23b8:	mov	r1, r4
    23bc:	mov	sl, r1
    23c0:	ldr	r4, [fp]
    23c4:	add	r3, sp, #60	; 0x3c
    23c8:	add	r2, sp, #72	; 0x48
    23cc:	add	r0, sp, #64	; 0x40
    23d0:	str	r0, [sp, #4]
    23d4:	str	r2, [sp]
    23d8:	mov	r2, r5
    23dc:	mov	r0, r6
    23e0:	blx	r4
    23e4:	mov	r4, r0
    23e8:	cmp	r4, r5
    23ec:	beq	24e4 <flatcc_json_parser_symbolic_uint32+0x19c>
    23f0:	cmp	r4, sl
    23f4:	bne	2410 <flatcc_json_parser_symbolic_uint32+0xc8>
    23f8:	add	fp, fp, #4
    23fc:	ldr	r0, [fp]
    2400:	cmp	r0, #0
    2404:	movne	ip, #1
    2408:	moveq	ip, #0
    240c:	b	2414 <flatcc_json_parser_symbolic_uint32+0xcc>
    2410:	mov	ip, #0
    2414:	cmp	ip, #0
    2418:	bne	23b8 <flatcc_json_parser_symbolic_uint32+0x70>
    241c:	cmp	sl, r4
    2420:	bne	2440 <flatcc_json_parser_symbolic_uint32+0xf8>
    2424:	mov	r3, #23
    2428:	mov	r2, r5
    242c:	mov	r1, r4
    2430:	mov	r0, r6
    2434:	bl	0 <flatcc_json_parser_set_error>
    2438:	mov	r4, r0
    243c:	b	24e4 <flatcc_json_parser_symbolic_uint32+0x19c>
    2440:	mov	r1, r8
    2444:	add	r8, r1, #1
    2448:	cmp	r1, #0
    244c:	beq	2464 <flatcc_json_parser_symbolic_uint32+0x11c>
    2450:	ldr	r0, [r6, #12]
    2454:	cmp	r0, #0
    2458:	movne	r3, #1
    245c:	moveq	r3, #0
    2460:	b	2468 <flatcc_json_parser_symbolic_uint32+0x120>
    2464:	mov	r3, #0
    2468:	cmp	r3, #0
    246c:	beq	248c <flatcc_json_parser_symbolic_uint32+0x144>
    2470:	mov	r3, #14
    2474:	mov	r2, r5
    2478:	mov	r1, r4
    247c:	mov	r0, r6
    2480:	bl	0 <flatcc_json_parser_set_error>
    2484:	mov	r4, r0
    2488:	b	24e4 <flatcc_json_parser_symbolic_uint32+0x19c>
    248c:	ldr	r3, [sp, #60]	; 0x3c
    2490:	ldr	r0, [sp, #72]	; 0x48
    2494:	ldr	ip, [sp, #76]	; 0x4c
    2498:	add	r1, sp, #56	; 0x38
    249c:	str	r1, [sp, #8]
    24a0:	str	ip, [sp, #4]
    24a4:	str	r0, [sp]
    24a8:	mov	r2, r5
    24ac:	mov	r1, r4
    24b0:	mov	r0, r6
    24b4:	bl	1364 <flatcc_json_parser_coerce_uint32>
    24b8:	cmp	r5, r0
    24bc:	bne	24c8 <flatcc_json_parser_symbolic_uint32+0x180>
    24c0:	mov	r4, r5
    24c4:	b	24e4 <flatcc_json_parser_symbolic_uint32+0x19c>
    24c8:	ldr	r3, [r9]
    24cc:	ldr	ip, [sp, #56]	; 0x38
    24d0:	add	r2, r3, ip
    24d4:	str	r2, [r9]
    24d8:	ldr	ip, [sp, #64]	; 0x40
    24dc:	cmp	ip, #0
    24e0:	bne	23b4 <flatcc_json_parser_symbolic_uint32+0x6c>
    24e4:	mov	r0, r4
    24e8:	ldr	r4, [sp, #24]
    24ec:	ldr	r5, [sp, #28]
    24f0:	ldr	r6, [sp, #32]
    24f4:	ldr	r7, [sp, #36]	; 0x24
    24f8:	ldr	r8, [sp, #40]	; 0x28
    24fc:	ldr	r9, [sp, #44]	; 0x2c
    2500:	ldr	sl, [sp, #48]	; 0x30
    2504:	ldr	fp, [sp, #52]	; 0x34
    2508:	ldr	lr, [sp, #16]
    250c:	add	sp, sp, #80	; 0x50
    2510:	bx	lr

00002514 <flatcc_json_parser_symbolic_uint16>:
    2514:	mov	ip, sp
    2518:	sub	sp, sp, #80	; 0x50
    251c:	str	ip, [sp, #12]
    2520:	str	lr, [sp, #16]
    2524:	str	r4, [sp, #24]
    2528:	str	r5, [sp, #28]
    252c:	str	r6, [sp, #32]
    2530:	str	r7, [sp, #36]	; 0x24
    2534:	str	r8, [sp, #40]	; 0x28
    2538:	str	r9, [sp, #44]	; 0x2c
    253c:	str	sl, [sp, #48]	; 0x30
    2540:	str	fp, [sp, #52]	; 0x34
    2544:	ldr	r9, [ip]
    2548:	mov	r7, r3
    254c:	mov	sl, r2
    2550:	mov	r8, r0
    2554:	mov	r0, #0
    2558:	strh	r0, [sp, #56]	; 0x38
    255c:	mov	r6, #0
    2560:	mov	r2, #0
    2564:	strh	r2, [r9]
    2568:	mov	r2, sl
    256c:	mov	r0, r8
    2570:	bl	d20 <flatcc_json_parser_constant_start>
    2574:	mov	r4, r0
    2578:	cmp	r4, sl
    257c:	beq	26b8 <flatcc_json_parser_symbolic_uint16+0x1a4>
    2580:	mov	fp, r7
    2584:	mov	r5, r4
    2588:	ldr	ip, [fp]
    258c:	add	r3, sp, #60	; 0x3c
    2590:	add	r0, sp, #72	; 0x48
    2594:	add	r2, sp, #64	; 0x40
    2598:	str	r2, [sp, #4]
    259c:	str	r0, [sp]
    25a0:	mov	r2, sl
    25a4:	mov	r1, r5
    25a8:	mov	r0, r8
    25ac:	blx	ip
    25b0:	mov	r4, r0
    25b4:	cmp	r4, sl
    25b8:	beq	26b8 <flatcc_json_parser_symbolic_uint16+0x1a4>
    25bc:	cmp	r4, r5
    25c0:	bne	25dc <flatcc_json_parser_symbolic_uint16+0xc8>
    25c4:	add	fp, fp, #4
    25c8:	ldr	ip, [fp]
    25cc:	cmp	ip, #0
    25d0:	movne	ip, #1
    25d4:	moveq	ip, #0
    25d8:	b	25e0 <flatcc_json_parser_symbolic_uint16+0xcc>
    25dc:	mov	ip, #0
    25e0:	cmp	ip, #0
    25e4:	bne	2584 <flatcc_json_parser_symbolic_uint16+0x70>
    25e8:	cmp	r5, r4
    25ec:	bne	260c <flatcc_json_parser_symbolic_uint16+0xf8>
    25f0:	mov	r3, #23
    25f4:	mov	r2, sl
    25f8:	mov	r1, r4
    25fc:	mov	r0, r8
    2600:	bl	0 <flatcc_json_parser_set_error>
    2604:	mov	r4, r0
    2608:	b	26b8 <flatcc_json_parser_symbolic_uint16+0x1a4>
    260c:	mov	r1, r6
    2610:	add	r6, r1, #1
    2614:	cmp	r1, #0
    2618:	beq	2630 <flatcc_json_parser_symbolic_uint16+0x11c>
    261c:	ldr	r1, [r8, #12]
    2620:	cmp	r1, #0
    2624:	movne	r2, #1
    2628:	moveq	r2, #0
    262c:	b	2634 <flatcc_json_parser_symbolic_uint16+0x120>
    2630:	mov	r2, #0
    2634:	cmp	r2, #0
    2638:	beq	2658 <flatcc_json_parser_symbolic_uint16+0x144>
    263c:	mov	r3, #14
    2640:	mov	r2, sl
    2644:	mov	r1, r4
    2648:	mov	r0, r8
    264c:	bl	0 <flatcc_json_parser_set_error>
    2650:	mov	r4, r0
    2654:	b	26b8 <flatcc_json_parser_symbolic_uint16+0x1a4>
    2658:	ldr	r3, [sp, #60]	; 0x3c
    265c:	ldr	ip, [sp, #72]	; 0x48
    2660:	ldr	r0, [sp, #76]	; 0x4c
    2664:	add	r1, sp, #56	; 0x38
    2668:	str	r1, [sp, #8]
    266c:	str	r0, [sp, #4]
    2670:	str	ip, [sp]
    2674:	mov	r2, sl
    2678:	mov	r1, r4
    267c:	mov	r0, r8
    2680:	bl	13f8 <flatcc_json_parser_coerce_uint16>
    2684:	cmp	sl, r0
    2688:	bne	2694 <flatcc_json_parser_symbolic_uint16+0x180>
    268c:	mov	r4, sl
    2690:	b	26b8 <flatcc_json_parser_symbolic_uint16+0x1a4>
    2694:	ldrh	r3, [r9]
    2698:	ldrh	r1, [sp, #56]	; 0x38
    269c:	add	ip, r3, r1
    26a0:	bic	r0, ip, #16711680	; 0xff0000
    26a4:	bic	r0, r0, #-16777216	; 0xff000000
    26a8:	strh	r0, [r9]
    26ac:	ldr	r2, [sp, #64]	; 0x40
    26b0:	cmp	r2, #0
    26b4:	bne	2580 <flatcc_json_parser_symbolic_uint16+0x6c>
    26b8:	mov	r0, r4
    26bc:	ldr	r4, [sp, #24]
    26c0:	ldr	r5, [sp, #28]
    26c4:	ldr	r6, [sp, #32]
    26c8:	ldr	r7, [sp, #36]	; 0x24
    26cc:	ldr	r8, [sp, #40]	; 0x28
    26d0:	ldr	r9, [sp, #44]	; 0x2c
    26d4:	ldr	sl, [sp, #48]	; 0x30
    26d8:	ldr	fp, [sp, #52]	; 0x34
    26dc:	ldr	lr, [sp, #16]
    26e0:	add	sp, sp, #80	; 0x50
    26e4:	bx	lr

000026e8 <flatcc_json_parser_symbolic_uint8>:
    26e8:	mov	ip, sp
    26ec:	sub	sp, sp, #80	; 0x50
    26f0:	str	ip, [sp, #12]
    26f4:	str	lr, [sp, #16]
    26f8:	str	r4, [sp, #24]
    26fc:	str	r5, [sp, #28]
    2700:	str	r6, [sp, #32]
    2704:	str	r7, [sp, #36]	; 0x24
    2708:	str	r8, [sp, #40]	; 0x28
    270c:	str	r9, [sp, #44]	; 0x2c
    2710:	str	sl, [sp, #48]	; 0x30
    2714:	str	fp, [sp, #52]	; 0x34
    2718:	ldr	r9, [ip]
    271c:	mov	r7, r3
    2720:	mov	sl, r2
    2724:	mov	r8, r0
    2728:	mov	r0, #0
    272c:	strb	r0, [sp, #56]	; 0x38
    2730:	mov	r6, #0
    2734:	mov	r2, #0
    2738:	strb	r2, [r9]
    273c:	mov	r2, sl
    2740:	mov	r0, r8
    2744:	bl	d20 <flatcc_json_parser_constant_start>
    2748:	mov	r4, r0
    274c:	cmp	r4, sl
    2750:	beq	2888 <flatcc_json_parser_symbolic_uint8+0x1a0>
    2754:	mov	fp, r7
    2758:	mov	r5, r4
    275c:	ldr	ip, [fp]
    2760:	add	r3, sp, #60	; 0x3c
    2764:	add	r0, sp, #72	; 0x48
    2768:	add	r2, sp, #64	; 0x40
    276c:	str	r2, [sp, #4]
    2770:	str	r0, [sp]
    2774:	mov	r2, sl
    2778:	mov	r1, r5
    277c:	mov	r0, r8
    2780:	blx	ip
    2784:	mov	r4, r0
    2788:	cmp	r4, sl
    278c:	beq	2888 <flatcc_json_parser_symbolic_uint8+0x1a0>
    2790:	cmp	r4, r5
    2794:	bne	27b0 <flatcc_json_parser_symbolic_uint8+0xc8>
    2798:	add	fp, fp, #4
    279c:	ldr	ip, [fp]
    27a0:	cmp	ip, #0
    27a4:	movne	ip, #1
    27a8:	moveq	ip, #0
    27ac:	b	27b4 <flatcc_json_parser_symbolic_uint8+0xcc>
    27b0:	mov	ip, #0
    27b4:	cmp	ip, #0
    27b8:	bne	2758 <flatcc_json_parser_symbolic_uint8+0x70>
    27bc:	cmp	r5, r4
    27c0:	bne	27e0 <flatcc_json_parser_symbolic_uint8+0xf8>
    27c4:	mov	r3, #23
    27c8:	mov	r2, sl
    27cc:	mov	r1, r4
    27d0:	mov	r0, r8
    27d4:	bl	0 <flatcc_json_parser_set_error>
    27d8:	mov	r4, r0
    27dc:	b	2888 <flatcc_json_parser_symbolic_uint8+0x1a0>
    27e0:	mov	r1, r6
    27e4:	add	r6, r1, #1
    27e8:	cmp	r1, #0
    27ec:	beq	2804 <flatcc_json_parser_symbolic_uint8+0x11c>
    27f0:	ldr	r1, [r8, #12]
    27f4:	cmp	r1, #0
    27f8:	movne	r2, #1
    27fc:	moveq	r2, #0
    2800:	b	2808 <flatcc_json_parser_symbolic_uint8+0x120>
    2804:	mov	r2, #0
    2808:	cmp	r2, #0
    280c:	beq	282c <flatcc_json_parser_symbolic_uint8+0x144>
    2810:	mov	r3, #14
    2814:	mov	r2, sl
    2818:	mov	r1, r4
    281c:	mov	r0, r8
    2820:	bl	0 <flatcc_json_parser_set_error>
    2824:	mov	r4, r0
    2828:	b	2888 <flatcc_json_parser_symbolic_uint8+0x1a0>
    282c:	ldr	r3, [sp, #60]	; 0x3c
    2830:	ldr	ip, [sp, #72]	; 0x48
    2834:	ldr	r0, [sp, #76]	; 0x4c
    2838:	add	r1, sp, #56	; 0x38
    283c:	str	r1, [sp, #8]
    2840:	str	r0, [sp, #4]
    2844:	str	ip, [sp]
    2848:	mov	r2, sl
    284c:	mov	r1, r4
    2850:	mov	r0, r8
    2854:	bl	1494 <flatcc_json_parser_coerce_uint8>
    2858:	cmp	sl, r0
    285c:	bne	2868 <flatcc_json_parser_symbolic_uint8+0x180>
    2860:	mov	r4, sl
    2864:	b	2888 <flatcc_json_parser_symbolic_uint8+0x1a0>
    2868:	ldrb	r3, [r9]
    286c:	ldrb	r1, [sp, #56]	; 0x38
    2870:	add	ip, r3, r1
    2874:	and	r0, ip, #255	; 0xff
    2878:	strb	r0, [r9]
    287c:	ldr	r2, [sp, #64]	; 0x40
    2880:	cmp	r2, #0
    2884:	bne	2754 <flatcc_json_parser_symbolic_uint8+0x6c>
    2888:	mov	r0, r4
    288c:	ldr	r4, [sp, #24]
    2890:	ldr	r5, [sp, #28]
    2894:	ldr	r6, [sp, #32]
    2898:	ldr	r7, [sp, #36]	; 0x24
    289c:	ldr	r8, [sp, #40]	; 0x28
    28a0:	ldr	r9, [sp, #44]	; 0x2c
    28a4:	ldr	sl, [sp, #48]	; 0x30
    28a8:	ldr	fp, [sp, #52]	; 0x34
    28ac:	ldr	lr, [sp, #16]
    28b0:	add	sp, sp, #80	; 0x50
    28b4:	bx	lr

000028b8 <flatcc_json_parser_symbolic_int64>:
    28b8:	mov	ip, sp
    28bc:	sub	sp, sp, #80	; 0x50
    28c0:	str	ip, [sp, #12]
    28c4:	str	lr, [sp, #16]
    28c8:	str	r4, [sp, #24]
    28cc:	str	r5, [sp, #28]
    28d0:	str	r6, [sp, #32]
    28d4:	str	r7, [sp, #36]	; 0x24
    28d8:	str	r8, [sp, #40]	; 0x28
    28dc:	str	r9, [sp, #44]	; 0x2c
    28e0:	str	sl, [sp, #48]	; 0x30
    28e4:	str	fp, [sp, #52]	; 0x34
    28e8:	ldr	r9, [ip]
    28ec:	mov	r4, r3
    28f0:	mov	r5, r2
    28f4:	mov	r6, r0
    28f8:	mov	r0, #0
    28fc:	mov	ip, #0
    2900:	str	ip, [sp, #64]	; 0x40
    2904:	str	r0, [sp, #68]	; 0x44
    2908:	mov	r8, #0
    290c:	mov	r2, #0
    2910:	mov	r0, #0
    2914:	str	r0, [r9]
    2918:	str	r2, [r9, #4]
    291c:	mov	r2, r5
    2920:	mov	r0, r6
    2924:	bl	d20 <flatcc_json_parser_constant_start>
    2928:	mov	r7, r0
    292c:	cmp	r7, r5
    2930:	beq	2a78 <flatcc_json_parser_symbolic_int64+0x1c0>
    2934:	mov	fp, r4
    2938:	mov	r1, r7
    293c:	mov	sl, r1
    2940:	ldr	r7, [fp]
    2944:	add	r3, sp, #56	; 0x38
    2948:	add	r0, sp, #72	; 0x48
    294c:	add	r2, sp, #60	; 0x3c
    2950:	str	r2, [sp, #4]
    2954:	str	r0, [sp]
    2958:	mov	r2, r5
    295c:	mov	r0, r6
    2960:	blx	r7
    2964:	mov	r7, r0
    2968:	cmp	r7, r5
    296c:	beq	2a78 <flatcc_json_parser_symbolic_int64+0x1c0>
    2970:	cmp	r7, sl
    2974:	bne	2990 <flatcc_json_parser_symbolic_int64+0xd8>
    2978:	add	fp, fp, #4
    297c:	ldr	r3, [fp]
    2980:	cmp	r3, #0
    2984:	movne	r0, #1
    2988:	moveq	r0, #0
    298c:	b	2994 <flatcc_json_parser_symbolic_int64+0xdc>
    2990:	mov	r0, #0
    2994:	cmp	r0, #0
    2998:	bne	2938 <flatcc_json_parser_symbolic_int64+0x80>
    299c:	cmp	sl, r7
    29a0:	bne	29c0 <flatcc_json_parser_symbolic_int64+0x108>
    29a4:	mov	r3, #23
    29a8:	mov	r2, r5
    29ac:	mov	r1, r7
    29b0:	mov	r0, r6
    29b4:	bl	0 <flatcc_json_parser_set_error>
    29b8:	mov	r7, r0
    29bc:	b	2a78 <flatcc_json_parser_symbolic_int64+0x1c0>
    29c0:	mov	r3, r8
    29c4:	add	r8, r3, #1
    29c8:	cmp	r3, #0
    29cc:	beq	29e4 <flatcc_json_parser_symbolic_int64+0x12c>
    29d0:	ldr	r1, [r6, #12]
    29d4:	cmp	r1, #0
    29d8:	movne	r2, #1
    29dc:	moveq	r2, #0
    29e0:	b	29e8 <flatcc_json_parser_symbolic_int64+0x130>
    29e4:	mov	r2, #0
    29e8:	cmp	r2, #0
    29ec:	beq	2a0c <flatcc_json_parser_symbolic_int64+0x154>
    29f0:	mov	r3, #14
    29f4:	mov	r2, r5
    29f8:	mov	r1, r7
    29fc:	mov	r0, r6
    2a00:	bl	0 <flatcc_json_parser_set_error>
    2a04:	mov	r7, r0
    2a08:	b	2a78 <flatcc_json_parser_symbolic_int64+0x1c0>
    2a0c:	ldr	r3, [sp, #56]	; 0x38
    2a10:	ldr	r1, [sp, #72]	; 0x48
    2a14:	ldr	r0, [sp, #76]	; 0x4c
    2a18:	add	r2, sp, #64	; 0x40
    2a1c:	str	r2, [sp, #8]
    2a20:	str	r0, [sp, #4]
    2a24:	str	r1, [sp]
    2a28:	mov	r2, r5
    2a2c:	mov	r1, r7
    2a30:	mov	r0, r6
    2a34:	bl	152c <flatcc_json_parser_coerce_int64>
    2a38:	cmp	r5, r0
    2a3c:	bne	2a48 <flatcc_json_parser_symbolic_int64+0x190>
    2a40:	mov	r7, r5
    2a44:	b	2a78 <flatcc_json_parser_symbolic_int64+0x1c0>
    2a48:	ldr	r1, [r9]
    2a4c:	ldr	r2, [r9, #4]
    2a50:	ldr	ip, [sp, #64]	; 0x40
    2a54:	ldr	r3, [sp, #68]	; 0x44
    2a58:	adds	lr, r1, ip
    2a5c:	adc	r2, r2, r3
    2a60:	mov	r3, lr
    2a64:	str	r3, [r9]
    2a68:	str	r2, [r9, #4]
    2a6c:	ldr	r1, [sp, #60]	; 0x3c
    2a70:	cmp	r1, #0
    2a74:	bne	2934 <flatcc_json_parser_symbolic_int64+0x7c>
    2a78:	mov	r0, r7
    2a7c:	ldr	r4, [sp, #24]
    2a80:	ldr	r5, [sp, #28]
    2a84:	ldr	r6, [sp, #32]
    2a88:	ldr	r7, [sp, #36]	; 0x24
    2a8c:	ldr	r8, [sp, #40]	; 0x28
    2a90:	ldr	r9, [sp, #44]	; 0x2c
    2a94:	ldr	sl, [sp, #48]	; 0x30
    2a98:	ldr	fp, [sp, #52]	; 0x34
    2a9c:	ldr	lr, [sp, #16]
    2aa0:	add	sp, sp, #80	; 0x50
    2aa4:	bx	lr

00002aa8 <flatcc_json_parser_symbolic_int32>:
    2aa8:	mov	ip, sp
    2aac:	sub	sp, sp, #80	; 0x50
    2ab0:	str	ip, [sp, #12]
    2ab4:	str	lr, [sp, #16]
    2ab8:	str	r4, [sp, #24]
    2abc:	str	r5, [sp, #28]
    2ac0:	str	r6, [sp, #32]
    2ac4:	str	r7, [sp, #36]	; 0x24
    2ac8:	str	r8, [sp, #40]	; 0x28
    2acc:	str	r9, [sp, #44]	; 0x2c
    2ad0:	str	sl, [sp, #48]	; 0x30
    2ad4:	str	fp, [sp, #52]	; 0x34
    2ad8:	ldr	r9, [ip]
    2adc:	mov	r7, r3
    2ae0:	mov	r5, r2
    2ae4:	mov	r6, r0
    2ae8:	mov	r2, #0
    2aec:	str	r2, [sp, #56]	; 0x38
    2af0:	mov	r8, #0
    2af4:	mov	r2, #0
    2af8:	str	r2, [r9]
    2afc:	mov	r2, r5
    2b00:	mov	r0, r6
    2b04:	bl	d20 <flatcc_json_parser_constant_start>
    2b08:	mov	r4, r0
    2b0c:	cmp	r4, r5
    2b10:	beq	2c44 <flatcc_json_parser_symbolic_int32+0x19c>
    2b14:	mov	fp, r7
    2b18:	mov	r1, r4
    2b1c:	mov	sl, r1
    2b20:	ldr	r4, [fp]
    2b24:	add	r3, sp, #60	; 0x3c
    2b28:	add	r2, sp, #72	; 0x48
    2b2c:	add	r0, sp, #64	; 0x40
    2b30:	str	r0, [sp, #4]
    2b34:	str	r2, [sp]
    2b38:	mov	r2, r5
    2b3c:	mov	r0, r6
    2b40:	blx	r4
    2b44:	mov	r4, r0
    2b48:	cmp	r4, r5
    2b4c:	beq	2c44 <flatcc_json_parser_symbolic_int32+0x19c>
    2b50:	cmp	r4, sl
    2b54:	bne	2b70 <flatcc_json_parser_symbolic_int32+0xc8>
    2b58:	add	fp, fp, #4
    2b5c:	ldr	r0, [fp]
    2b60:	cmp	r0, #0
    2b64:	movne	ip, #1
    2b68:	moveq	ip, #0
    2b6c:	b	2b74 <flatcc_json_parser_symbolic_int32+0xcc>
    2b70:	mov	ip, #0
    2b74:	cmp	ip, #0
    2b78:	bne	2b18 <flatcc_json_parser_symbolic_int32+0x70>
    2b7c:	cmp	sl, r4
    2b80:	bne	2ba0 <flatcc_json_parser_symbolic_int32+0xf8>
    2b84:	mov	r3, #23
    2b88:	mov	r2, r5
    2b8c:	mov	r1, r4
    2b90:	mov	r0, r6
    2b94:	bl	0 <flatcc_json_parser_set_error>
    2b98:	mov	r4, r0
    2b9c:	b	2c44 <flatcc_json_parser_symbolic_int32+0x19c>
    2ba0:	mov	r1, r8
    2ba4:	add	r8, r1, #1
    2ba8:	cmp	r1, #0
    2bac:	beq	2bc4 <flatcc_json_parser_symbolic_int32+0x11c>
    2bb0:	ldr	r0, [r6, #12]
    2bb4:	cmp	r0, #0
    2bb8:	movne	r3, #1
    2bbc:	moveq	r3, #0
    2bc0:	b	2bc8 <flatcc_json_parser_symbolic_int32+0x120>
    2bc4:	mov	r3, #0
    2bc8:	cmp	r3, #0
    2bcc:	beq	2bec <flatcc_json_parser_symbolic_int32+0x144>
    2bd0:	mov	r3, #14
    2bd4:	mov	r2, r5
    2bd8:	mov	r1, r4
    2bdc:	mov	r0, r6
    2be0:	bl	0 <flatcc_json_parser_set_error>
    2be4:	mov	r4, r0
    2be8:	b	2c44 <flatcc_json_parser_symbolic_int32+0x19c>
    2bec:	ldr	r3, [sp, #60]	; 0x3c
    2bf0:	ldr	r0, [sp, #72]	; 0x48
    2bf4:	ldr	ip, [sp, #76]	; 0x4c
    2bf8:	add	r1, sp, #56	; 0x38
    2bfc:	str	r1, [sp, #8]
    2c00:	str	ip, [sp, #4]
    2c04:	str	r0, [sp]
    2c08:	mov	r2, r5
    2c0c:	mov	r1, r4
    2c10:	mov	r0, r6
    2c14:	bl	1618 <flatcc_json_parser_coerce_int32>
    2c18:	cmp	r5, r0
    2c1c:	bne	2c28 <flatcc_json_parser_symbolic_int32+0x180>
    2c20:	mov	r4, r5
    2c24:	b	2c44 <flatcc_json_parser_symbolic_int32+0x19c>
    2c28:	ldr	r3, [r9]
    2c2c:	ldr	ip, [sp, #56]	; 0x38
    2c30:	add	r2, r3, ip
    2c34:	str	r2, [r9]
    2c38:	ldr	ip, [sp, #64]	; 0x40
    2c3c:	cmp	ip, #0
    2c40:	bne	2b14 <flatcc_json_parser_symbolic_int32+0x6c>
    2c44:	mov	r0, r4
    2c48:	ldr	r4, [sp, #24]
    2c4c:	ldr	r5, [sp, #28]
    2c50:	ldr	r6, [sp, #32]
    2c54:	ldr	r7, [sp, #36]	; 0x24
    2c58:	ldr	r8, [sp, #40]	; 0x28
    2c5c:	ldr	r9, [sp, #44]	; 0x2c
    2c60:	ldr	sl, [sp, #48]	; 0x30
    2c64:	ldr	fp, [sp, #52]	; 0x34
    2c68:	ldr	lr, [sp, #16]
    2c6c:	add	sp, sp, #80	; 0x50
    2c70:	bx	lr

00002c74 <flatcc_json_parser_symbolic_int16>:
    2c74:	mov	ip, sp
    2c78:	sub	sp, sp, #80	; 0x50
    2c7c:	str	ip, [sp, #12]
    2c80:	str	lr, [sp, #16]
    2c84:	str	r4, [sp, #24]
    2c88:	str	r5, [sp, #28]
    2c8c:	str	r6, [sp, #32]
    2c90:	str	r7, [sp, #36]	; 0x24
    2c94:	str	r8, [sp, #40]	; 0x28
    2c98:	str	r9, [sp, #44]	; 0x2c
    2c9c:	str	sl, [sp, #48]	; 0x30
    2ca0:	str	fp, [sp, #52]	; 0x34
    2ca4:	ldr	r9, [ip]
    2ca8:	mov	r7, r3
    2cac:	mov	sl, r2
    2cb0:	mov	r8, r0
    2cb4:	mov	r0, #0
    2cb8:	strh	r0, [sp, #56]	; 0x38
    2cbc:	mov	r6, #0
    2cc0:	mov	r2, #0
    2cc4:	strh	r2, [r9]
    2cc8:	mov	r2, sl
    2ccc:	mov	r0, r8
    2cd0:	bl	d20 <flatcc_json_parser_constant_start>
    2cd4:	mov	r4, r0
    2cd8:	cmp	r4, sl
    2cdc:	beq	2e14 <flatcc_json_parser_symbolic_int16+0x1a0>
    2ce0:	mov	fp, r7
    2ce4:	mov	r5, r4
    2ce8:	ldr	ip, [fp]
    2cec:	add	r3, sp, #60	; 0x3c
    2cf0:	add	r0, sp, #72	; 0x48
    2cf4:	add	r2, sp, #64	; 0x40
    2cf8:	str	r2, [sp, #4]
    2cfc:	str	r0, [sp]
    2d00:	mov	r2, sl
    2d04:	mov	r1, r5
    2d08:	mov	r0, r8
    2d0c:	blx	ip
    2d10:	mov	r4, r0
    2d14:	cmp	r4, sl
    2d18:	beq	2e14 <flatcc_json_parser_symbolic_int16+0x1a0>
    2d1c:	cmp	r4, r5
    2d20:	bne	2d3c <flatcc_json_parser_symbolic_int16+0xc8>
    2d24:	add	fp, fp, #4
    2d28:	ldr	ip, [fp]
    2d2c:	cmp	ip, #0
    2d30:	movne	ip, #1
    2d34:	moveq	ip, #0
    2d38:	b	2d40 <flatcc_json_parser_symbolic_int16+0xcc>
    2d3c:	mov	ip, #0
    2d40:	cmp	ip, #0
    2d44:	bne	2ce4 <flatcc_json_parser_symbolic_int16+0x70>
    2d48:	cmp	r5, r4
    2d4c:	bne	2d6c <flatcc_json_parser_symbolic_int16+0xf8>
    2d50:	mov	r3, #23
    2d54:	mov	r2, sl
    2d58:	mov	r1, r4
    2d5c:	mov	r0, r8
    2d60:	bl	0 <flatcc_json_parser_set_error>
    2d64:	mov	r4, r0
    2d68:	b	2e14 <flatcc_json_parser_symbolic_int16+0x1a0>
    2d6c:	mov	r1, r6
    2d70:	add	r6, r1, #1
    2d74:	cmp	r1, #0
    2d78:	beq	2d90 <flatcc_json_parser_symbolic_int16+0x11c>
    2d7c:	ldr	r1, [r8, #12]
    2d80:	cmp	r1, #0
    2d84:	movne	r2, #1
    2d88:	moveq	r2, #0
    2d8c:	b	2d94 <flatcc_json_parser_symbolic_int16+0x120>
    2d90:	mov	r2, #0
    2d94:	cmp	r2, #0
    2d98:	beq	2db8 <flatcc_json_parser_symbolic_int16+0x144>
    2d9c:	mov	r3, #14
    2da0:	mov	r2, sl
    2da4:	mov	r1, r4
    2da8:	mov	r0, r8
    2dac:	bl	0 <flatcc_json_parser_set_error>
    2db0:	mov	r4, r0
    2db4:	b	2e14 <flatcc_json_parser_symbolic_int16+0x1a0>
    2db8:	ldr	r3, [sp, #60]	; 0x3c
    2dbc:	ldr	ip, [sp, #72]	; 0x48
    2dc0:	ldr	r0, [sp, #76]	; 0x4c
    2dc4:	add	r1, sp, #56	; 0x38
    2dc8:	str	r1, [sp, #8]
    2dcc:	str	r0, [sp, #4]
    2dd0:	str	ip, [sp]
    2dd4:	mov	r2, sl
    2dd8:	mov	r1, r4
    2ddc:	mov	r0, r8
    2de0:	bl	16f8 <flatcc_json_parser_coerce_int16>
    2de4:	cmp	sl, r0
    2de8:	bne	2df4 <flatcc_json_parser_symbolic_int16+0x180>
    2dec:	mov	r4, sl
    2df0:	b	2e14 <flatcc_json_parser_symbolic_int16+0x1a0>
    2df4:	ldrsh	r3, [r9]
    2df8:	ldrsh	r1, [sp, #56]	; 0x38
    2dfc:	add	ip, r3, r1
    2e00:	sbfx	r0, ip, #0, #16
    2e04:	strh	r0, [r9]
    2e08:	ldr	r2, [sp, #64]	; 0x40
    2e0c:	cmp	r2, #0
    2e10:	bne	2ce0 <flatcc_json_parser_symbolic_int16+0x6c>
    2e14:	mov	r0, r4
    2e18:	ldr	r4, [sp, #24]
    2e1c:	ldr	r5, [sp, #28]
    2e20:	ldr	r6, [sp, #32]
    2e24:	ldr	r7, [sp, #36]	; 0x24
    2e28:	ldr	r8, [sp, #40]	; 0x28
    2e2c:	ldr	r9, [sp, #44]	; 0x2c
    2e30:	ldr	sl, [sp, #48]	; 0x30
    2e34:	ldr	fp, [sp, #52]	; 0x34
    2e38:	ldr	lr, [sp, #16]
    2e3c:	add	sp, sp, #80	; 0x50
    2e40:	bx	lr

00002e44 <flatcc_json_parser_symbolic_int8>:
    2e44:	mov	ip, sp
    2e48:	sub	sp, sp, #80	; 0x50
    2e4c:	str	ip, [sp, #12]
    2e50:	str	lr, [sp, #16]
    2e54:	str	r4, [sp, #24]
    2e58:	str	r5, [sp, #28]
    2e5c:	str	r6, [sp, #32]
    2e60:	str	r7, [sp, #36]	; 0x24
    2e64:	str	r8, [sp, #40]	; 0x28
    2e68:	str	r9, [sp, #44]	; 0x2c
    2e6c:	str	sl, [sp, #48]	; 0x30
    2e70:	str	fp, [sp, #52]	; 0x34
    2e74:	ldr	r9, [ip]
    2e78:	mov	r7, r3
    2e7c:	mov	sl, r2
    2e80:	mov	r8, r0
    2e84:	mov	r0, #0
    2e88:	strb	r0, [sp, #56]	; 0x38
    2e8c:	mov	r6, #0
    2e90:	mov	r2, #0
    2e94:	strb	r2, [r9]
    2e98:	mov	r2, sl
    2e9c:	mov	r0, r8
    2ea0:	bl	d20 <flatcc_json_parser_constant_start>
    2ea4:	mov	r4, r0
    2ea8:	cmp	r4, sl
    2eac:	beq	2fe4 <flatcc_json_parser_symbolic_int8+0x1a0>
    2eb0:	mov	fp, r7
    2eb4:	mov	r5, r4
    2eb8:	ldr	ip, [fp]
    2ebc:	add	r3, sp, #60	; 0x3c
    2ec0:	add	r0, sp, #72	; 0x48
    2ec4:	add	r2, sp, #64	; 0x40
    2ec8:	str	r2, [sp, #4]
    2ecc:	str	r0, [sp]
    2ed0:	mov	r2, sl
    2ed4:	mov	r1, r5
    2ed8:	mov	r0, r8
    2edc:	blx	ip
    2ee0:	mov	r4, r0
    2ee4:	cmp	r4, sl
    2ee8:	beq	2fe4 <flatcc_json_parser_symbolic_int8+0x1a0>
    2eec:	cmp	r4, r5
    2ef0:	bne	2f0c <flatcc_json_parser_symbolic_int8+0xc8>
    2ef4:	add	fp, fp, #4
    2ef8:	ldr	ip, [fp]
    2efc:	cmp	ip, #0
    2f00:	movne	ip, #1
    2f04:	moveq	ip, #0
    2f08:	b	2f10 <flatcc_json_parser_symbolic_int8+0xcc>
    2f0c:	mov	ip, #0
    2f10:	cmp	ip, #0
    2f14:	bne	2eb4 <flatcc_json_parser_symbolic_int8+0x70>
    2f18:	cmp	r5, r4
    2f1c:	bne	2f3c <flatcc_json_parser_symbolic_int8+0xf8>
    2f20:	mov	r3, #23
    2f24:	mov	r2, sl
    2f28:	mov	r1, r4
    2f2c:	mov	r0, r8
    2f30:	bl	0 <flatcc_json_parser_set_error>
    2f34:	mov	r4, r0
    2f38:	b	2fe4 <flatcc_json_parser_symbolic_int8+0x1a0>
    2f3c:	mov	r1, r6
    2f40:	add	r6, r1, #1
    2f44:	cmp	r1, #0
    2f48:	beq	2f60 <flatcc_json_parser_symbolic_int8+0x11c>
    2f4c:	ldr	r1, [r8, #12]
    2f50:	cmp	r1, #0
    2f54:	movne	r2, #1
    2f58:	moveq	r2, #0
    2f5c:	b	2f64 <flatcc_json_parser_symbolic_int8+0x120>
    2f60:	mov	r2, #0
    2f64:	cmp	r2, #0
    2f68:	beq	2f88 <flatcc_json_parser_symbolic_int8+0x144>
    2f6c:	mov	r3, #14
    2f70:	mov	r2, sl
    2f74:	mov	r1, r4
    2f78:	mov	r0, r8
    2f7c:	bl	0 <flatcc_json_parser_set_error>
    2f80:	mov	r4, r0
    2f84:	b	2fe4 <flatcc_json_parser_symbolic_int8+0x1a0>
    2f88:	ldr	r3, [sp, #60]	; 0x3c
    2f8c:	ldr	ip, [sp, #72]	; 0x48
    2f90:	ldr	r0, [sp, #76]	; 0x4c
    2f94:	add	r1, sp, #56	; 0x38
    2f98:	str	r1, [sp, #8]
    2f9c:	str	r0, [sp, #4]
    2fa0:	str	ip, [sp]
    2fa4:	mov	r2, sl
    2fa8:	mov	r1, r4
    2fac:	mov	r0, r8
    2fb0:	bl	17e0 <flatcc_json_parser_coerce_int8>
    2fb4:	cmp	sl, r0
    2fb8:	bne	2fc4 <flatcc_json_parser_symbolic_int8+0x180>
    2fbc:	mov	r4, sl
    2fc0:	b	2fe4 <flatcc_json_parser_symbolic_int8+0x1a0>
    2fc4:	ldrsb	r3, [r9]
    2fc8:	ldrsb	r1, [sp, #56]	; 0x38
    2fcc:	add	ip, r3, r1
    2fd0:	sbfx	r0, ip, #0, #8
    2fd4:	strb	r0, [r9]
    2fd8:	ldr	r2, [sp, #64]	; 0x40
    2fdc:	cmp	r2, #0
    2fe0:	bne	2eb0 <flatcc_json_parser_symbolic_int8+0x6c>
    2fe4:	mov	r0, r4
    2fe8:	ldr	r4, [sp, #24]
    2fec:	ldr	r5, [sp, #28]
    2ff0:	ldr	r6, [sp, #32]
    2ff4:	ldr	r7, [sp, #36]	; 0x24
    2ff8:	ldr	r8, [sp, #40]	; 0x28
    2ffc:	ldr	r9, [sp, #44]	; 0x2c
    3000:	ldr	sl, [sp, #48]	; 0x30
    3004:	ldr	fp, [sp, #52]	; 0x34
    3008:	ldr	lr, [sp, #16]
    300c:	add	sp, sp, #80	; 0x50
    3010:	bx	lr

00003014 <flatcc_json_parser_symbolic_bool>:
    3014:	mov	ip, sp
    3018:	sub	sp, sp, #80	; 0x50
    301c:	str	ip, [sp, #12]
    3020:	str	lr, [sp, #16]
    3024:	str	r4, [sp, #24]
    3028:	str	r5, [sp, #28]
    302c:	str	r6, [sp, #32]
    3030:	str	r7, [sp, #36]	; 0x24
    3034:	str	r8, [sp, #40]	; 0x28
    3038:	str	r9, [sp, #44]	; 0x2c
    303c:	str	sl, [sp, #48]	; 0x30
    3040:	str	fp, [sp, #52]	; 0x34
    3044:	ldr	r9, [ip]
    3048:	mov	r7, r3
    304c:	mov	sl, r2
    3050:	mov	r8, r0
    3054:	mov	r0, #0
    3058:	strb	r0, [sp, #56]	; 0x38
    305c:	mov	r6, #0
    3060:	mov	r2, #0
    3064:	strb	r2, [r9]
    3068:	mov	r2, sl
    306c:	mov	r0, r8
    3070:	bl	d20 <flatcc_json_parser_constant_start>
    3074:	mov	r4, r0
    3078:	cmp	r4, sl
    307c:	beq	31b4 <flatcc_json_parser_symbolic_bool+0x1a0>
    3080:	mov	fp, r7
    3084:	mov	r5, r4
    3088:	ldr	ip, [fp]
    308c:	add	r3, sp, #60	; 0x3c
    3090:	add	r0, sp, #72	; 0x48
    3094:	add	r2, sp, #64	; 0x40
    3098:	str	r2, [sp, #4]
    309c:	str	r0, [sp]
    30a0:	mov	r2, sl
    30a4:	mov	r1, r5
    30a8:	mov	r0, r8
    30ac:	blx	ip
    30b0:	mov	r4, r0
    30b4:	cmp	r4, sl
    30b8:	beq	31b4 <flatcc_json_parser_symbolic_bool+0x1a0>
    30bc:	cmp	r4, r5
    30c0:	bne	30dc <flatcc_json_parser_symbolic_bool+0xc8>
    30c4:	add	fp, fp, #4
    30c8:	ldr	ip, [fp]
    30cc:	cmp	ip, #0
    30d0:	movne	ip, #1
    30d4:	moveq	ip, #0
    30d8:	b	30e0 <flatcc_json_parser_symbolic_bool+0xcc>
    30dc:	mov	ip, #0
    30e0:	cmp	ip, #0
    30e4:	bne	3084 <flatcc_json_parser_symbolic_bool+0x70>
    30e8:	cmp	r5, r4
    30ec:	bne	310c <flatcc_json_parser_symbolic_bool+0xf8>
    30f0:	mov	r3, #23
    30f4:	mov	r2, sl
    30f8:	mov	r1, r4
    30fc:	mov	r0, r8
    3100:	bl	0 <flatcc_json_parser_set_error>
    3104:	mov	r4, r0
    3108:	b	31b4 <flatcc_json_parser_symbolic_bool+0x1a0>
    310c:	mov	r1, r6
    3110:	add	r6, r1, #1
    3114:	cmp	r1, #0
    3118:	beq	3130 <flatcc_json_parser_symbolic_bool+0x11c>
    311c:	ldr	r1, [r8, #12]
    3120:	cmp	r1, #0
    3124:	movne	r2, #1
    3128:	moveq	r2, #0
    312c:	b	3134 <flatcc_json_parser_symbolic_bool+0x120>
    3130:	mov	r2, #0
    3134:	cmp	r2, #0
    3138:	beq	3158 <flatcc_json_parser_symbolic_bool+0x144>
    313c:	mov	r3, #14
    3140:	mov	r2, sl
    3144:	mov	r1, r4
    3148:	mov	r0, r8
    314c:	bl	0 <flatcc_json_parser_set_error>
    3150:	mov	r4, r0
    3154:	b	31b4 <flatcc_json_parser_symbolic_bool+0x1a0>
    3158:	ldr	r3, [sp, #60]	; 0x3c
    315c:	ldr	ip, [sp, #72]	; 0x48
    3160:	ldr	r0, [sp, #76]	; 0x4c
    3164:	add	r1, sp, #56	; 0x38
    3168:	str	r1, [sp, #8]
    316c:	str	r0, [sp, #4]
    3170:	str	ip, [sp]
    3174:	mov	r2, sl
    3178:	mov	r1, r4
    317c:	mov	r0, r8
    3180:	bl	12e8 <flatcc_json_parser_coerce_bool>
    3184:	cmp	sl, r0
    3188:	bne	3194 <flatcc_json_parser_symbolic_bool+0x180>
    318c:	mov	r4, sl
    3190:	b	31b4 <flatcc_json_parser_symbolic_bool+0x1a0>
    3194:	ldrb	r3, [r9]
    3198:	ldrb	r1, [sp, #56]	; 0x38
    319c:	add	ip, r3, r1
    31a0:	and	r0, ip, #255	; 0xff
    31a4:	strb	r0, [r9]
    31a8:	ldr	r2, [sp, #64]	; 0x40
    31ac:	cmp	r2, #0
    31b0:	bne	3080 <flatcc_json_parser_symbolic_bool+0x6c>
    31b4:	mov	r0, r4
    31b8:	ldr	r4, [sp, #24]
    31bc:	ldr	r5, [sp, #28]
    31c0:	ldr	r6, [sp, #32]
    31c4:	ldr	r7, [sp, #36]	; 0x24
    31c8:	ldr	r8, [sp, #40]	; 0x28
    31cc:	ldr	r9, [sp, #44]	; 0x2c
    31d0:	ldr	sl, [sp, #48]	; 0x30
    31d4:	ldr	fp, [sp, #52]	; 0x34
    31d8:	ldr	lr, [sp, #16]
    31dc:	add	sp, sp, #80	; 0x50
    31e0:	bx	lr

000031e4 <flatcc_json_parser_symbolic_float>:
    31e4:	mov	ip, sp
    31e8:	sub	sp, sp, #80	; 0x50
    31ec:	str	ip, [sp, #12]
    31f0:	str	lr, [sp, #16]
    31f4:	str	r4, [sp, #24]
    31f8:	str	r5, [sp, #28]
    31fc:	str	r6, [sp, #32]
    3200:	str	r7, [sp, #36]	; 0x24
    3204:	str	r8, [sp, #40]	; 0x28
    3208:	str	r9, [sp, #44]	; 0x2c
    320c:	str	sl, [sp, #48]	; 0x30
    3210:	str	fp, [sp, #52]	; 0x34
    3214:	ldr	r9, [ip]
    3218:	mov	r7, r3
    321c:	mov	r5, r2
    3220:	mov	r6, r0
    3224:	vldr	s0, [pc, #388]	; 33b0 <flatcc_json_parser_symbolic_float+0x1cc>
    3228:	vstr	s0, [sp, #56]	; 0x38
    322c:	mov	r8, #0
    3230:	vldr	s4, [pc, #376]	; 33b0 <flatcc_json_parser_symbolic_float+0x1cc>
    3234:	vstr	s4, [r9]
    3238:	mov	r2, r5
    323c:	mov	r0, r6
    3240:	bl	d20 <flatcc_json_parser_constant_start>
    3244:	mov	r4, r0
    3248:	cmp	r4, r5
    324c:	beq	3380 <flatcc_json_parser_symbolic_float+0x19c>
    3250:	mov	fp, r7
    3254:	mov	r1, r4
    3258:	mov	sl, r1
    325c:	ldr	r4, [fp]
    3260:	add	r3, sp, #60	; 0x3c
    3264:	add	r0, sp, #72	; 0x48
    3268:	add	r2, sp, #64	; 0x40
    326c:	str	r2, [sp, #4]
    3270:	str	r0, [sp]
    3274:	mov	r2, r5
    3278:	mov	r0, r6
    327c:	blx	r4
    3280:	mov	r4, r0
    3284:	cmp	r4, r5
    3288:	beq	3380 <flatcc_json_parser_symbolic_float+0x19c>
    328c:	cmp	r4, sl
    3290:	bne	32ac <flatcc_json_parser_symbolic_float+0xc8>
    3294:	add	fp, fp, #4
    3298:	ldr	r1, [fp]
    329c:	cmp	r1, #0
    32a0:	movne	r1, #1
    32a4:	moveq	r1, #0
    32a8:	b	32b0 <flatcc_json_parser_symbolic_float+0xcc>
    32ac:	mov	r1, #0
    32b0:	cmp	r1, #0
    32b4:	bne	3254 <flatcc_json_parser_symbolic_float+0x70>
    32b8:	cmp	sl, r4
    32bc:	bne	32dc <flatcc_json_parser_symbolic_float+0xf8>
    32c0:	mov	r3, #23
    32c4:	mov	r2, r5
    32c8:	mov	r1, r4
    32cc:	mov	r0, r6
    32d0:	bl	0 <flatcc_json_parser_set_error>
    32d4:	mov	r4, r0
    32d8:	b	3380 <flatcc_json_parser_symbolic_float+0x19c>
    32dc:	mov	r1, r8
    32e0:	add	r8, r1, #1
    32e4:	cmp	r1, #0
    32e8:	beq	3300 <flatcc_json_parser_symbolic_float+0x11c>
    32ec:	ldr	r0, [r6, #12]
    32f0:	cmp	r0, #0
    32f4:	movne	ip, #1
    32f8:	moveq	ip, #0
    32fc:	b	3304 <flatcc_json_parser_symbolic_float+0x120>
    3300:	mov	ip, #0
    3304:	cmp	ip, #0
    3308:	beq	3328 <flatcc_json_parser_symbolic_float+0x144>
    330c:	mov	r3, #14
    3310:	mov	r2, r5
    3314:	mov	r1, r4
    3318:	mov	r0, r6
    331c:	bl	0 <flatcc_json_parser_set_error>
    3320:	mov	r4, r0
    3324:	b	3380 <flatcc_json_parser_symbolic_float+0x19c>
    3328:	ldr	r3, [sp, #60]	; 0x3c
    332c:	ldr	r0, [sp, #72]	; 0x48
    3330:	ldr	r2, [sp, #76]	; 0x4c
    3334:	add	r1, sp, #56	; 0x38
    3338:	str	r1, [sp, #8]
    333c:	str	r2, [sp, #4]
    3340:	str	r0, [sp]
    3344:	mov	r2, r5
    3348:	mov	r1, r4
    334c:	mov	r0, r6
    3350:	bl	18c8 <flatcc_json_parser_coerce_float>
    3354:	cmp	r5, r0
    3358:	bne	3364 <flatcc_json_parser_symbolic_float+0x180>
    335c:	mov	r4, r5
    3360:	b	3380 <flatcc_json_parser_symbolic_float+0x19c>
    3364:	vldr	s8, [r9]
    3368:	vldr	s14, [sp, #56]	; 0x38
    336c:	vadd.f32	s10, s8, s14
    3370:	vstr	s10, [r9]
    3374:	ldr	r0, [sp, #64]	; 0x40
    3378:	cmp	r0, #0
    337c:	bne	3250 <flatcc_json_parser_symbolic_float+0x6c>
    3380:	mov	r0, r4
    3384:	ldr	r4, [sp, #24]
    3388:	ldr	r5, [sp, #28]
    338c:	ldr	r6, [sp, #32]
    3390:	ldr	r7, [sp, #36]	; 0x24
    3394:	ldr	r8, [sp, #40]	; 0x28
    3398:	ldr	r9, [sp, #44]	; 0x2c
    339c:	ldr	sl, [sp, #48]	; 0x30
    33a0:	ldr	fp, [sp, #52]	; 0x34
    33a4:	ldr	lr, [sp, #16]
    33a8:	add	sp, sp, #80	; 0x50
    33ac:	bx	lr
    33b0:	.word	0x00000000

000033b4 <flatcc_json_parser_symbolic_double>:
    33b4:	mov	ip, sp
    33b8:	sub	sp, sp, #80	; 0x50
    33bc:	str	ip, [sp, #12]
    33c0:	str	lr, [sp, #16]
    33c4:	str	r4, [sp, #24]
    33c8:	str	r5, [sp, #28]
    33cc:	str	r6, [sp, #32]
    33d0:	str	r7, [sp, #36]	; 0x24
    33d4:	str	r8, [sp, #40]	; 0x28
    33d8:	str	r9, [sp, #44]	; 0x2c
    33dc:	str	sl, [sp, #48]	; 0x30
    33e0:	str	fp, [sp, #52]	; 0x34
    33e4:	ldr	r9, [ip]
    33e8:	mov	r7, r3
    33ec:	mov	r5, r2
    33f0:	mov	r6, r0
    33f4:	vldr	d2, [pc, #388]	; 3580 <flatcc_json_parser_symbolic_double+0x1cc>
    33f8:	vstr	d2, [sp, #64]	; 0x40
    33fc:	mov	r8, #0
    3400:	vldr	d5, [pc, #376]	; 3580 <flatcc_json_parser_symbolic_double+0x1cc>
    3404:	vstr	d5, [r9]
    3408:	mov	r2, r5
    340c:	mov	r0, r6
    3410:	bl	d20 <flatcc_json_parser_constant_start>
    3414:	mov	r4, r0
    3418:	cmp	r4, r5
    341c:	beq	3550 <flatcc_json_parser_symbolic_double+0x19c>
    3420:	mov	fp, r7
    3424:	mov	r1, r4
    3428:	mov	sl, r1
    342c:	ldr	r4, [fp]
    3430:	add	r3, sp, #56	; 0x38
    3434:	add	r0, sp, #72	; 0x48
    3438:	add	r2, sp, #60	; 0x3c
    343c:	str	r2, [sp, #4]
    3440:	str	r0, [sp]
    3444:	mov	r2, r5
    3448:	mov	r0, r6
    344c:	blx	r4
    3450:	mov	r4, r0
    3454:	cmp	r4, r5
    3458:	beq	3550 <flatcc_json_parser_symbolic_double+0x19c>
    345c:	cmp	r4, sl
    3460:	bne	347c <flatcc_json_parser_symbolic_double+0xc8>
    3464:	add	fp, fp, #4
    3468:	ldr	r1, [fp]
    346c:	cmp	r1, #0
    3470:	movne	r1, #1
    3474:	moveq	r1, #0
    3478:	b	3480 <flatcc_json_parser_symbolic_double+0xcc>
    347c:	mov	r1, #0
    3480:	cmp	r1, #0
    3484:	bne	3424 <flatcc_json_parser_symbolic_double+0x70>
    3488:	cmp	sl, r4
    348c:	bne	34ac <flatcc_json_parser_symbolic_double+0xf8>
    3490:	mov	r3, #23
    3494:	mov	r2, r5
    3498:	mov	r1, r4
    349c:	mov	r0, r6
    34a0:	bl	0 <flatcc_json_parser_set_error>
    34a4:	mov	r4, r0
    34a8:	b	3550 <flatcc_json_parser_symbolic_double+0x19c>
    34ac:	mov	r1, r8
    34b0:	add	r8, r1, #1
    34b4:	cmp	r1, #0
    34b8:	beq	34d0 <flatcc_json_parser_symbolic_double+0x11c>
    34bc:	ldr	r0, [r6, #12]
    34c0:	cmp	r0, #0
    34c4:	movne	ip, #1
    34c8:	moveq	ip, #0
    34cc:	b	34d4 <flatcc_json_parser_symbolic_double+0x120>
    34d0:	mov	ip, #0
    34d4:	cmp	ip, #0
    34d8:	beq	34f8 <flatcc_json_parser_symbolic_double+0x144>
    34dc:	mov	r3, #14
    34e0:	mov	r2, r5
    34e4:	mov	r1, r4
    34e8:	mov	r0, r6
    34ec:	bl	0 <flatcc_json_parser_set_error>
    34f0:	mov	r4, r0
    34f4:	b	3550 <flatcc_json_parser_symbolic_double+0x19c>
    34f8:	ldr	r3, [sp, #56]	; 0x38
    34fc:	ldr	r0, [sp, #72]	; 0x48
    3500:	ldr	r2, [sp, #76]	; 0x4c
    3504:	add	r1, sp, #64	; 0x40
    3508:	str	r1, [sp, #8]
    350c:	str	r2, [sp, #4]
    3510:	str	r0, [sp]
    3514:	mov	r2, r5
    3518:	mov	r1, r4
    351c:	mov	r0, r6
    3520:	bl	1924 <flatcc_json_parser_coerce_double>
    3524:	cmp	r5, r0
    3528:	bne	3534 <flatcc_json_parser_symbolic_double+0x180>
    352c:	mov	r4, r5
    3530:	b	3550 <flatcc_json_parser_symbolic_double+0x19c>
    3534:	vldr	d0, [r9]
    3538:	vldr	d7, [sp, #64]	; 0x40
    353c:	vadd.f64	d6, d0, d7
    3540:	vstr	d6, [r9]
    3544:	ldr	r0, [sp, #60]	; 0x3c
    3548:	cmp	r0, #0
    354c:	bne	3420 <flatcc_json_parser_symbolic_double+0x6c>
    3550:	mov	r0, r4
    3554:	ldr	r4, [sp, #24]
    3558:	ldr	r5, [sp, #28]
    355c:	ldr	r6, [sp, #32]
    3560:	ldr	r7, [sp, #36]	; 0x24
    3564:	ldr	r8, [sp, #40]	; 0x28
    3568:	ldr	r9, [sp, #44]	; 0x2c
    356c:	ldr	sl, [sp, #48]	; 0x30
    3570:	ldr	fp, [sp, #52]	; 0x34
    3574:	ldr	lr, [sp, #16]
    3578:	add	sp, sp, #80	; 0x50
    357c:	bx	lr
	...

00003588 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>:
    3588:	mov	ip, sp
    358c:	sub	sp, sp, #56	; 0x38
    3590:	str	ip, [sp, #4]
    3594:	str	lr, [sp, #8]
    3598:	str	r4, [sp, #24]
    359c:	str	r5, [sp, #28]
    35a0:	str	r6, [sp, #32]
    35a4:	str	r7, [sp, #36]	; 0x24
    35a8:	str	r8, [sp, #40]	; 0x28
    35ac:	str	r9, [sp, #44]	; 0x2c
    35b0:	str	sl, [sp, #48]	; 0x30
    35b4:	str	fp, [sp, #52]	; 0x34
    35b8:	ldr	ip, [ip, #4]
    35bc:	str	ip, [sp, #16]
    35c0:	ldr	ip, [sp, #4]
    35c4:	ldr	r8, [ip]
    35c8:	mov	r7, r3
    35cc:	mov	r6, r2
    35d0:	mov	r5, r1
    35d4:	str	r0, [sp, #20]
    35d8:	mov	r4, r5
    35dc:	mov	r1, r6
    35e0:	mov	r0, r5
    35e4:	bl	cc0 <flatcc_json_parser_symbol_part>
    35e8:	mov	fp, r1
    35ec:	mov	sl, r0
    35f0:	mov	r1, fp
    35f4:	bic	ip, r1, #255	; 0xff
    35f8:	mov	r3, #0
    35fc:	eor	r0, ip, #28416	; 0x6f00
    3600:	eor	r0, r0, #7274496	; 0x6f0000
    3604:	eor	r0, r0, #1174405120	; 0x46000000
    3608:	orr	r2, r0, r3
    360c:	cmp	r2, #0
    3610:	bne	365c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd4>
    3614:	mov	r1, r5
    3618:	mov	r9, r1
    361c:	mov	r3, #3
    3620:	ldr	ip, [sp, #16]
    3624:	str	ip, [sp]
    3628:	mov	r2, r6
    362c:	ldr	r0, [sp, #20]
    3630:	bl	0 <flatcc_json_parser_match_constant>
    3634:	mov	r5, r0
    3638:	cmp	r5, r9
    363c:	beq	365c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd4>
    3640:	mov	r2, #0
    3644:	mov	r1, #17
    3648:	str	r1, [r8]
    364c:	str	r2, [r8, #4]
    3650:	mov	r0, #0
    3654:	str	r0, [r7]
    3658:	b	36f8 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x170>
    365c:	eor	r2, fp, #876	; 0x36c
    3660:	eor	r2, r2, #942080	; 0xe6000
    3664:	eor	r2, r2, #157286400	; 0x9600000
    3668:	eor	r2, r2, #1073741824	; 0x40000000
    366c:	eor	r1, sl, #86	; 0x56
    3670:	eor	r1, r1, #25856	; 0x6500
    3674:	eor	r1, r1, #23330816	; 0x1640000
    3678:	eor	r1, r1, #1946157056	; 0x74000000
    367c:	orr	r0, r2, r1
    3680:	cmp	r0, #0
    3684:	bne	3710 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x188>
    3688:	add	r9, r5, #8
    368c:	mov	r1, r6
    3690:	mov	r0, r9
    3694:	bl	cc0 <flatcc_json_parser_symbol_part>
    3698:	bic	r0, r1, #255	; 0xff
    369c:	bic	r0, r0, #65280	; 0xff00
    36a0:	mov	r2, #0
    36a4:	eor	r3, r0, #23855104	; 0x16c0000
    36a8:	eor	r3, r3, #1610612736	; 0x60000000
    36ac:	orr	ip, r3, r2
    36b0:	cmp	ip, #0
    36b4:	bne	3708 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x180>
    36b8:	mov	r3, #2
    36bc:	ldr	ip, [sp, #16]
    36c0:	str	ip, [sp]
    36c4:	mov	r2, r6
    36c8:	mov	r1, r9
    36cc:	ldr	r0, [sp, #20]
    36d0:	bl	0 <flatcc_json_parser_match_constant>
    36d4:	mov	r5, r0
    36d8:	cmp	r5, r9
    36dc:	beq	3700 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x178>
    36e0:	mov	ip, #0
    36e4:	mov	r3, #0
    36e8:	str	r3, [r8]
    36ec:	str	ip, [r8, #4]
    36f0:	mov	r1, #0
    36f4:	str	r1, [r7]
    36f8:	mov	r0, r5
    36fc:	b	3714 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x18c>
    3700:	mov	r0, r4
    3704:	b	3714 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x18c>
    3708:	mov	r0, r4
    370c:	b	3714 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x18c>
    3710:	mov	r0, r4
    3714:	ldr	r4, [sp, #24]
    3718:	ldr	r5, [sp, #28]
    371c:	ldr	r6, [sp, #32]
    3720:	ldr	r7, [sp, #36]	; 0x24
    3724:	ldr	r8, [sp, #40]	; 0x28
    3728:	ldr	r9, [sp, #44]	; 0x2c
    372c:	ldr	sl, [sp, #48]	; 0x30
    3730:	ldr	fp, [sp, #52]	; 0x34
    3734:	ldr	lr, [sp, #8]
    3738:	add	sp, sp, #56	; 0x38
    373c:	bx	lr

00003740 <MyGame_InParentNamespace_parse_json_table>:
    3740:	mov	ip, sp
    3744:	sub	sp, sp, #32
    3748:	str	ip, [sp]
    374c:	str	lr, [sp, #4]
    3750:	str	r4, [sp, #8]
    3754:	str	r5, [sp, #12]
    3758:	str	r6, [sp, #16]
    375c:	str	r7, [sp, #20]
    3760:	mov	r7, r3
    3764:	mov	r5, r2
    3768:	mov	r4, r1
    376c:	mov	r6, r0
    3770:	mov	r1, #0
    3774:	str	r1, [r7]
    3778:	ldr	r0, [r6]
    377c:	mov	r1, #0
    3780:	bl	0 <flatcc_builder_start_table>
    3784:	cmp	r0, #0
    3788:	bne	3814 <MyGame_InParentNamespace_parse_json_table+0xd4>
    378c:	add	r3, sp, #24
    3790:	mov	r2, r5
    3794:	mov	r1, r4
    3798:	mov	r0, r6
    379c:	bl	d7c <flatcc_json_parser_object_start>
    37a0:	mov	r4, r0
    37a4:	ldr	r3, [sp, #24]
    37a8:	cmp	r3, #0
    37ac:	beq	37ec <MyGame_InParentNamespace_parse_json_table+0xac>
    37b0:	mov	r2, r5
    37b4:	mov	r1, r4
    37b8:	mov	r0, r6
    37bc:	bl	b90 <flatcc_json_parser_symbol_start>
    37c0:	mov	r1, r0
    37c4:	mov	r2, r5
    37c8:	mov	r0, r6
    37cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    37d0:	add	r3, sp, #24
    37d4:	mov	r2, r5
    37d8:	mov	r1, r0
    37dc:	mov	r0, r6
    37e0:	bl	e5c <flatcc_json_parser_object_end>
    37e4:	mov	r4, r0
    37e8:	b	37a4 <MyGame_InParentNamespace_parse_json_table+0x64>
    37ec:	ldr	r1, [r6, #24]
    37f0:	cmp	r1, #0
    37f4:	bne	3814 <MyGame_InParentNamespace_parse_json_table+0xd4>
    37f8:	ldr	r0, [r6]
    37fc:	bl	0 <flatcc_builder_end_table>
    3800:	str	r0, [r7]
    3804:	cmp	r0, #0
    3808:	beq	3814 <MyGame_InParentNamespace_parse_json_table+0xd4>
    380c:	mov	r0, r4
    3810:	b	3828 <MyGame_InParentNamespace_parse_json_table+0xe8>
    3814:	mov	r3, #33	; 0x21
    3818:	mov	r2, r5
    381c:	mov	r1, r4
    3820:	mov	r0, r6
    3824:	bl	0 <flatcc_json_parser_set_error>
    3828:	ldr	r4, [sp, #8]
    382c:	ldr	r5, [sp, #12]
    3830:	ldr	r6, [sp, #16]
    3834:	ldr	r7, [sp, #20]
    3838:	ldr	lr, [sp, #4]
    383c:	add	sp, sp, #32
    3840:	bx	lr

00003844 <MyGame_Example2_Monster_parse_json_table>:
    3844:	mov	ip, sp
    3848:	sub	sp, sp, #32
    384c:	str	ip, [sp]
    3850:	str	lr, [sp, #4]
    3854:	str	r4, [sp, #8]
    3858:	str	r5, [sp, #12]
    385c:	str	r6, [sp, #16]
    3860:	str	r7, [sp, #20]
    3864:	mov	r7, r3
    3868:	mov	r5, r2
    386c:	mov	r4, r1
    3870:	mov	r6, r0
    3874:	mov	r1, #0
    3878:	str	r1, [r7]
    387c:	ldr	r0, [r6]
    3880:	mov	r1, #0
    3884:	bl	0 <flatcc_builder_start_table>
    3888:	cmp	r0, #0
    388c:	bne	3918 <MyGame_Example2_Monster_parse_json_table+0xd4>
    3890:	add	r3, sp, #24
    3894:	mov	r2, r5
    3898:	mov	r1, r4
    389c:	mov	r0, r6
    38a0:	bl	d7c <flatcc_json_parser_object_start>
    38a4:	mov	r4, r0
    38a8:	ldr	r3, [sp, #24]
    38ac:	cmp	r3, #0
    38b0:	beq	38f0 <MyGame_Example2_Monster_parse_json_table+0xac>
    38b4:	mov	r2, r5
    38b8:	mov	r1, r4
    38bc:	mov	r0, r6
    38c0:	bl	b90 <flatcc_json_parser_symbol_start>
    38c4:	mov	r1, r0
    38c8:	mov	r2, r5
    38cc:	mov	r0, r6
    38d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    38d4:	add	r3, sp, #24
    38d8:	mov	r2, r5
    38dc:	mov	r1, r0
    38e0:	mov	r0, r6
    38e4:	bl	e5c <flatcc_json_parser_object_end>
    38e8:	mov	r4, r0
    38ec:	b	38a8 <MyGame_Example2_Monster_parse_json_table+0x64>
    38f0:	ldr	r1, [r6, #24]
    38f4:	cmp	r1, #0
    38f8:	bne	3918 <MyGame_Example2_Monster_parse_json_table+0xd4>
    38fc:	ldr	r0, [r6]
    3900:	bl	0 <flatcc_builder_end_table>
    3904:	str	r0, [r7]
    3908:	cmp	r0, #0
    390c:	beq	3918 <MyGame_Example2_Monster_parse_json_table+0xd4>
    3910:	mov	r0, r4
    3914:	b	392c <MyGame_Example2_Monster_parse_json_table+0xe8>
    3918:	mov	r3, #33	; 0x21
    391c:	mov	r2, r5
    3920:	mov	r1, r4
    3924:	mov	r0, r6
    3928:	bl	0 <flatcc_json_parser_set_error>
    392c:	ldr	r4, [sp, #8]
    3930:	ldr	r5, [sp, #12]
    3934:	ldr	r6, [sp, #16]
    3938:	ldr	r7, [sp, #20]
    393c:	ldr	lr, [sp, #4]
    3940:	add	sp, sp, #32
    3944:	bx	lr

00003948 <MyGame_Example_Foo_parse_json_enum>:
    3948:	mov	ip, sp
    394c:	sub	sp, sp, #48	; 0x30
    3950:	str	ip, [sp, #4]
    3954:	str	lr, [sp, #8]
    3958:	str	r4, [sp, #16]
    395c:	str	r5, [sp, #20]
    3960:	str	r6, [sp, #24]
    3964:	str	r7, [sp, #28]
    3968:	str	r8, [sp, #32]
    396c:	str	r9, [sp, #36]	; 0x24
    3970:	str	sl, [sp, #40]	; 0x28
    3974:	ldr	r5, [ip, #4]
    3978:	ldr	r8, [ip]
    397c:	mov	sl, r3
    3980:	mov	r9, r2
    3984:	mov	r4, r1
    3988:	mov	r7, r0
    398c:	mov	r1, r9
    3990:	mov	r0, r4
    3994:	bl	cc0 <flatcc_json_parser_symbol_part>
    3998:	mov	ip, r1
    399c:	eor	r3, ip, #97	; 0x61
    39a0:	eor	r3, r3, #937984	; 0xe5000
    39a4:	eor	r3, r3, #157286400	; 0x9600000
    39a8:	eor	r3, r3, #1073741824	; 0x40000000
    39ac:	eor	r2, r0, #628	; 0x274
    39b0:	eor	r2, r2, #93184	; 0x16c00
    39b4:	eor	r2, r2, #40108032	; 0x2640000
    39b8:	eor	r2, r2, #1879048192	; 0x70000000
    39bc:	orr	r2, r3, r2
    39c0:	cmp	r2, #0
    39c4:	bne	3a80 <MyGame_Example_Foo_parse_json_enum+0x138>
    39c8:	add	r6, r4, #8
    39cc:	mov	r1, r9
    39d0:	mov	r0, r6
    39d4:	bl	cc0 <flatcc_json_parser_symbol_part>
    39d8:	eor	r1, r1, #101	; 0x65
    39dc:	eor	r1, r1, #27904	; 0x6d00
    39e0:	eor	r1, r1, #6356992	; 0x610000
    39e4:	eor	r1, r1, #1308622848	; 0x4e000000
    39e8:	eor	r0, r0, #99	; 0x63
    39ec:	eor	r0, r0, #24832	; 0x6100
    39f0:	eor	r0, r0, #57671680	; 0x3700000
    39f4:	eor	r0, r0, #1879048192	; 0x70000000
    39f8:	orr	ip, r1, r0
    39fc:	cmp	ip, #0
    3a00:	bne	3a78 <MyGame_Example_Foo_parse_json_enum+0x130>
    3a04:	add	r6, r6, #8
    3a08:	mov	r1, r9
    3a0c:	mov	r0, r6
    3a10:	bl	cc0 <flatcc_json_parser_symbol_part>
    3a14:	and	r3, r1, #-16777216	; 0xff000000
    3a18:	mov	r2, #0
    3a1c:	eor	r3, r3, #1694498816	; 0x65000000
    3a20:	orr	ip, r3, r2
    3a24:	cmp	ip, #0
    3a28:	bne	3a70 <MyGame_Example_Foo_parse_json_enum+0x128>
    3a2c:	mov	r3, #1
    3a30:	str	r5, [sp]
    3a34:	mov	r2, r9
    3a38:	mov	r1, r6
    3a3c:	mov	r0, r7
    3a40:	bl	0 <flatcc_json_parser_match_constant>
    3a44:	cmp	r0, r6
    3a48:	beq	3a68 <MyGame_Example_Foo_parse_json_enum+0x120>
    3a4c:	mov	ip, #0
    3a50:	mov	r3, #1
    3a54:	str	r3, [r8]
    3a58:	str	ip, [r8, #4]
    3a5c:	mov	r1, #0
    3a60:	str	r1, [sl]
    3a64:	b	3aec <MyGame_Example_Foo_parse_json_enum+0x1a4>
    3a68:	mov	r0, r4
    3a6c:	b	3aec <MyGame_Example_Foo_parse_json_enum+0x1a4>
    3a70:	mov	r0, r4
    3a74:	b	3aec <MyGame_Example_Foo_parse_json_enum+0x1a4>
    3a78:	mov	r0, r4
    3a7c:	b	3aec <MyGame_Example_Foo_parse_json_enum+0x1a4>
    3a80:	mov	r2, #0
    3a84:	eor	r1, r1, #69	; 0x45
    3a88:	eor	r1, r1, #19968	; 0x4e00
    3a8c:	eor	r1, r1, #5177344	; 0x4f0000
    3a90:	eor	r1, r1, #1308622848	; 0x4e000000
    3a94:	orr	r1, r1, r2
    3a98:	cmp	r1, #0
    3a9c:	bne	3ae8 <MyGame_Example_Foo_parse_json_enum+0x1a0>
    3aa0:	mov	r6, r4
    3aa4:	mov	r3, #4
    3aa8:	str	r5, [sp]
    3aac:	mov	r2, r9
    3ab0:	mov	r1, r6
    3ab4:	mov	r0, r7
    3ab8:	bl	0 <flatcc_json_parser_match_constant>
    3abc:	cmp	r0, r6
    3ac0:	beq	3ae0 <MyGame_Example_Foo_parse_json_enum+0x198>
    3ac4:	mov	r1, #0
    3ac8:	mov	ip, #0
    3acc:	str	ip, [r8]
    3ad0:	str	r1, [r8, #4]
    3ad4:	mov	r1, #0
    3ad8:	str	r1, [sl]
    3adc:	b	3aec <MyGame_Example_Foo_parse_json_enum+0x1a4>
    3ae0:	mov	r0, r4
    3ae4:	b	3aec <MyGame_Example_Foo_parse_json_enum+0x1a4>
    3ae8:	mov	r0, r4
    3aec:	ldr	r4, [sp, #16]
    3af0:	ldr	r5, [sp, #20]
    3af4:	ldr	r6, [sp, #24]
    3af8:	ldr	r7, [sp, #28]
    3afc:	ldr	r8, [sp, #32]
    3b00:	ldr	r9, [sp, #36]	; 0x24
    3b04:	ldr	sl, [sp, #40]	; 0x28
    3b08:	ldr	lr, [sp, #8]
    3b0c:	add	sp, sp, #48	; 0x30
    3b10:	bx	lr

00003b14 <MyGame_Example_neg_enum_parse_json_enum>:
    3b14:	mov	ip, sp
    3b18:	sub	sp, sp, #48	; 0x30
    3b1c:	str	ip, [sp, #4]
    3b20:	str	lr, [sp, #8]
    3b24:	str	r4, [sp, #16]
    3b28:	str	r5, [sp, #20]
    3b2c:	str	r6, [sp, #24]
    3b30:	str	r7, [sp, #28]
    3b34:	str	r8, [sp, #32]
    3b38:	str	r9, [sp, #36]	; 0x24
    3b3c:	str	sl, [sp, #40]	; 0x28
    3b40:	ldr	r9, [ip, #4]
    3b44:	ldr	r5, [ip]
    3b48:	mov	r8, r3
    3b4c:	mov	r4, r2
    3b50:	mov	r7, r1
    3b54:	mov	sl, r0
    3b58:	mov	r6, r7
    3b5c:	mov	r1, r4
    3b60:	mov	r0, r7
    3b64:	bl	cc0 <flatcc_json_parser_symbol_part>
    3b68:	mov	r2, r1
    3b6c:	movw	r3, #26418	; 0x6732
    3b70:	movt	r3, #28261	; 0x6e65
    3b74:	cmp	r2, r3
    3b78:	bne	3b8c <MyGame_Example_neg_enum_parse_json_enum+0x78>
    3b7c:	mov	r2, #0
    3b80:	cmp	r0, r2
    3b84:	bcc	3c78 <MyGame_Example_neg_enum_parse_json_enum+0x164>
    3b88:	b	3ba0 <MyGame_Example_neg_enum_parse_json_enum+0x8c>
    3b8c:	mov	ip, r1
    3b90:	movw	r0, #26418	; 0x6732
    3b94:	movt	r0, #28261	; 0x6e65
    3b98:	cmp	ip, r0
    3b9c:	bcc	3c78 <MyGame_Example_neg_enum_parse_json_enum+0x164>
    3ba0:	mov	r2, r1
    3ba4:	mov	r3, #0
    3ba8:	eor	ip, r2, #51	; 0x33
    3bac:	eor	ip, ip, #26368	; 0x6700
    3bb0:	eor	ip, ip, #6619136	; 0x650000
    3bb4:	eor	ip, ip, #1845493760	; 0x6e000000
    3bb8:	orr	r3, ip, r3
    3bbc:	cmp	r3, #0
    3bc0:	beq	3c30 <MyGame_Example_neg_enum_parse_json_enum+0x11c>
    3bc4:	mov	r0, #0
    3bc8:	eor	r3, r1, #50	; 0x32
    3bcc:	eor	r3, r3, #26368	; 0x6700
    3bd0:	eor	r3, r3, #6619136	; 0x650000
    3bd4:	eor	r3, r3, #1845493760	; 0x6e000000
    3bd8:	orr	r3, r3, r0
    3bdc:	cmp	r3, #0
    3be0:	bne	3c28 <MyGame_Example_neg_enum_parse_json_enum+0x114>
    3be4:	mov	r3, #4
    3be8:	str	r9, [sp]
    3bec:	mov	r2, r4
    3bf0:	mov	r1, r7
    3bf4:	mov	r0, sl
    3bf8:	bl	0 <flatcc_json_parser_match_constant>
    3bfc:	cmp	r0, r7
    3c00:	beq	3c20 <MyGame_Example_neg_enum_parse_json_enum+0x10c>
    3c04:	mvn	r2, #0
    3c08:	mvn	r1, #10
    3c0c:	str	r1, [r5]
    3c10:	str	r2, [r5, #4]
    3c14:	mov	ip, #1
    3c18:	str	ip, [r8]
    3c1c:	b	3ce0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    3c20:	mov	r0, r6
    3c24:	b	3ce0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    3c28:	mov	r0, r6
    3c2c:	b	3ce0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    3c30:	mov	r1, r7
    3c34:	mov	r7, r1
    3c38:	mov	r3, #4
    3c3c:	str	r9, [sp]
    3c40:	mov	r2, r4
    3c44:	mov	r0, sl
    3c48:	bl	0 <flatcc_json_parser_match_constant>
    3c4c:	cmp	r0, r7
    3c50:	beq	3c70 <MyGame_Example_neg_enum_parse_json_enum+0x15c>
    3c54:	mvn	ip, #0
    3c58:	mvn	r3, #9
    3c5c:	str	r3, [r5]
    3c60:	str	ip, [r5, #4]
    3c64:	mov	ip, #1
    3c68:	str	ip, [r8]
    3c6c:	b	3ce0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    3c70:	mov	r0, r6
    3c74:	b	3ce0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    3c78:	mov	r2, #0
    3c7c:	eor	r1, r1, #49	; 0x31
    3c80:	eor	r1, r1, #26368	; 0x6700
    3c84:	eor	r1, r1, #6619136	; 0x650000
    3c88:	eor	r1, r1, #1845493760	; 0x6e000000
    3c8c:	orr	r1, r1, r2
    3c90:	cmp	r1, #0
    3c94:	bne	3cdc <MyGame_Example_neg_enum_parse_json_enum+0x1c8>
    3c98:	mov	r3, #4
    3c9c:	str	r9, [sp]
    3ca0:	mov	r2, r4
    3ca4:	mov	r1, r7
    3ca8:	mov	r0, sl
    3cac:	bl	0 <flatcc_json_parser_match_constant>
    3cb0:	cmp	r0, r7
    3cb4:	beq	3cd4 <MyGame_Example_neg_enum_parse_json_enum+0x1c0>
    3cb8:	mvn	r2, #0
    3cbc:	mvn	r1, #11
    3cc0:	str	r1, [r5]
    3cc4:	str	r2, [r5, #4]
    3cc8:	mov	r2, #1
    3ccc:	str	r2, [r8]
    3cd0:	b	3ce0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    3cd4:	mov	r0, r6
    3cd8:	b	3ce0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    3cdc:	mov	r0, r6
    3ce0:	ldr	r4, [sp, #16]
    3ce4:	ldr	r5, [sp, #20]
    3ce8:	ldr	r6, [sp, #24]
    3cec:	ldr	r7, [sp, #28]
    3cf0:	ldr	r8, [sp, #32]
    3cf4:	ldr	r9, [sp, #36]	; 0x24
    3cf8:	ldr	sl, [sp, #40]	; 0x28
    3cfc:	ldr	lr, [sp, #8]
    3d00:	add	sp, sp, #48	; 0x30
    3d04:	bx	lr

00003d08 <MyGame_Example_int_enum_parse_json_enum>:
    3d08:	mov	ip, sp
    3d0c:	sub	sp, sp, #48	; 0x30
    3d10:	str	ip, [sp, #4]
    3d14:	str	lr, [sp, #8]
    3d18:	str	r4, [sp, #16]
    3d1c:	str	r5, [sp, #20]
    3d20:	str	r6, [sp, #24]
    3d24:	str	r7, [sp, #28]
    3d28:	str	r8, [sp, #32]
    3d2c:	str	r9, [sp, #36]	; 0x24
    3d30:	str	sl, [sp, #40]	; 0x28
    3d34:	ldr	r8, [ip, #4]
    3d38:	ldr	r6, [ip]
    3d3c:	mov	r9, r3
    3d40:	mov	r4, r2
    3d44:	mov	r5, r1
    3d48:	mov	r7, r0
    3d4c:	mov	r1, r4
    3d50:	mov	r0, r5
    3d54:	bl	cc0 <flatcc_json_parser_symbol_part>
    3d58:	mov	r3, r0
    3d5c:	mov	r2, r1
    3d60:	movw	ip, #29746	; 0x7432
    3d64:	movt	ip, #26990	; 0x696e
    3d68:	cmp	r2, ip
    3d6c:	bne	3d80 <MyGame_Example_int_enum_parse_json_enum+0x78>
    3d70:	mov	r2, #0
    3d74:	cmp	r3, r2
    3d78:	bcc	3f3c <MyGame_Example_int_enum_parse_json_enum+0x234>
    3d7c:	b	3d94 <MyGame_Example_int_enum_parse_json_enum+0x8c>
    3d80:	mov	ip, r1
    3d84:	movw	r2, #29746	; 0x7432
    3d88:	movt	r2, #26990	; 0x696e
    3d8c:	cmp	ip, r2
    3d90:	bcc	3f3c <MyGame_Example_int_enum_parse_json_enum+0x234>
    3d94:	mov	r3, r1
    3d98:	movw	ip, #29806	; 0x746e
    3d9c:	movt	ip, #26990	; 0x696e
    3da0:	cmp	r3, ip
    3da4:	bne	3dc0 <MyGame_Example_int_enum_parse_json_enum+0xb8>
    3da8:	mov	r2, r0
    3dac:	movw	ip, #0
    3db0:	movt	ip, #25959	; 0x6567
    3db4:	cmp	r2, ip
    3db8:	bcc	3ecc <MyGame_Example_int_enum_parse_json_enum+0x1c4>
    3dbc:	b	3dd4 <MyGame_Example_int_enum_parse_json_enum+0xcc>
    3dc0:	mov	r2, r1
    3dc4:	movw	r3, #29806	; 0x746e
    3dc8:	movt	r3, #26990	; 0x696e
    3dcc:	cmp	r2, r3
    3dd0:	bcc	3ecc <MyGame_Example_int_enum_parse_json_enum+0x1c4>
    3dd4:	mov	ip, r0
    3dd8:	mov	r2, r1
    3ddc:	bic	ip, ip, #255	; 0xff
    3de0:	eor	r3, r2, #110	; 0x6e
    3de4:	eor	r3, r3, #160768	; 0x27400
    3de8:	eor	r3, r3, #23855104	; 0x16c0000
    3dec:	eor	r3, r3, #1744830464	; 0x68000000
    3df0:	eor	r2, ip, #12800	; 0x3200
    3df4:	eor	r2, r2, #6750208	; 0x670000
    3df8:	eor	r2, r2, #1694498816	; 0x65000000
    3dfc:	orr	r2, r3, r2
    3e00:	cmp	r2, #0
    3e04:	beq	3e84 <MyGame_Example_int_enum_parse_json_enum+0x17c>
    3e08:	bic	r2, r0, #255	; 0xff
    3e0c:	bic	r2, r2, #65280	; 0xff00
    3e10:	eor	r3, r1, #110	; 0x6e
    3e14:	eor	r3, r3, #160768	; 0x27400
    3e18:	eor	r3, r3, #23855104	; 0x16c0000
    3e1c:	eor	r3, r3, #1744830464	; 0x68000000
    3e20:	eor	r0, r2, #6750208	; 0x670000
    3e24:	eor	r0, r0, #1694498816	; 0x65000000
    3e28:	orr	r1, r3, r0
    3e2c:	cmp	r1, #0
    3e30:	bne	3e7c <MyGame_Example_int_enum_parse_json_enum+0x174>
    3e34:	mov	r1, r5
    3e38:	mov	sl, r1
    3e3c:	mov	r3, #6
    3e40:	str	r8, [sp]
    3e44:	mov	r2, r4
    3e48:	mov	r0, r7
    3e4c:	bl	0 <flatcc_json_parser_match_constant>
    3e50:	cmp	r0, sl
    3e54:	beq	3e74 <MyGame_Example_int_enum_parse_json_enum+0x16c>
    3e58:	mvn	r3, #0
    3e5c:	mvn	r2, #1
    3e60:	str	r2, [r6]
    3e64:	str	r3, [r6, #4]
    3e68:	mov	r1, #1
    3e6c:	str	r1, [r9]
    3e70:	b	3fa8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3e74:	mov	r0, r5
    3e78:	b	3fa8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3e7c:	mov	r0, r5
    3e80:	b	3fa8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3e84:	mov	sl, r5
    3e88:	mov	r3, #7
    3e8c:	str	r8, [sp]
    3e90:	mov	r2, r4
    3e94:	mov	r1, sl
    3e98:	mov	r0, r7
    3e9c:	bl	0 <flatcc_json_parser_match_constant>
    3ea0:	cmp	r0, sl
    3ea4:	beq	3ec4 <MyGame_Example_int_enum_parse_json_enum+0x1bc>
    3ea8:	mvn	r2, #0
    3eac:	mvn	r1, #0
    3eb0:	str	r1, [r6]
    3eb4:	str	r2, [r6, #4]
    3eb8:	mov	r2, #1
    3ebc:	str	r2, [r9]
    3ec0:	b	3fa8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3ec4:	mov	r0, r5
    3ec8:	b	3fa8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3ecc:	mov	r2, #0
    3ed0:	eor	r0, r1, #50	; 0x32
    3ed4:	eor	r0, r0, #160768	; 0x27400
    3ed8:	eor	r0, r0, #23855104	; 0x16c0000
    3edc:	eor	r0, r0, #1744830464	; 0x68000000
    3ee0:	orr	ip, r0, r2
    3ee4:	cmp	ip, #0
    3ee8:	bne	3f34 <MyGame_Example_int_enum_parse_json_enum+0x22c>
    3eec:	mov	r1, r5
    3ef0:	mov	sl, r1
    3ef4:	mov	r3, #4
    3ef8:	str	r8, [sp]
    3efc:	mov	r2, r4
    3f00:	mov	r0, r7
    3f04:	bl	0 <flatcc_json_parser_match_constant>
    3f08:	cmp	r0, sl
    3f0c:	beq	3f2c <MyGame_Example_int_enum_parse_json_enum+0x224>
    3f10:	mov	r3, #0
    3f14:	mov	r2, #42	; 0x2a
    3f18:	str	r2, [r6]
    3f1c:	str	r3, [r6, #4]
    3f20:	mov	r3, #0
    3f24:	str	r3, [r9]
    3f28:	b	3fa8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3f2c:	mov	r0, r5
    3f30:	b	3fa8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3f34:	mov	r0, r5
    3f38:	b	3fa8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3f3c:	mov	r2, #0
    3f40:	eor	ip, r1, #49	; 0x31
    3f44:	eor	ip, ip, #160768	; 0x27400
    3f48:	eor	ip, ip, #23855104	; 0x16c0000
    3f4c:	eor	ip, ip, #1744830464	; 0x68000000
    3f50:	orr	r3, ip, r2
    3f54:	cmp	r3, #0
    3f58:	bne	3fa4 <MyGame_Example_int_enum_parse_json_enum+0x29c>
    3f5c:	mov	sl, r5
    3f60:	mov	r3, #4
    3f64:	str	r8, [sp]
    3f68:	mov	r2, r4
    3f6c:	mov	r1, sl
    3f70:	mov	r0, r7
    3f74:	bl	0 <flatcc_json_parser_match_constant>
    3f78:	cmp	r0, sl
    3f7c:	beq	3f9c <MyGame_Example_int_enum_parse_json_enum+0x294>
    3f80:	mov	ip, #0
    3f84:	mov	r3, #2
    3f88:	str	r3, [r6]
    3f8c:	str	ip, [r6, #4]
    3f90:	mov	r1, #0
    3f94:	str	r1, [r9]
    3f98:	b	3fa8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3f9c:	mov	r0, r5
    3fa0:	b	3fa8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3fa4:	mov	r0, r5
    3fa8:	ldr	r4, [sp, #16]
    3fac:	ldr	r5, [sp, #20]
    3fb0:	ldr	r6, [sp, #24]
    3fb4:	ldr	r7, [sp, #28]
    3fb8:	ldr	r8, [sp, #32]
    3fbc:	ldr	r9, [sp, #36]	; 0x24
    3fc0:	ldr	sl, [sp, #40]	; 0x28
    3fc4:	ldr	lr, [sp, #8]
    3fc8:	add	sp, sp, #48	; 0x30
    3fcc:	bx	lr

00003fd0 <MyGame_Example_hex_enum_parse_json_enum>:
    3fd0:	mov	ip, sp
    3fd4:	sub	sp, sp, #48	; 0x30
    3fd8:	str	ip, [sp, #4]
    3fdc:	str	lr, [sp, #8]
    3fe0:	str	r4, [sp, #16]
    3fe4:	str	r5, [sp, #20]
    3fe8:	str	r6, [sp, #24]
    3fec:	str	r7, [sp, #28]
    3ff0:	str	r8, [sp, #32]
    3ff4:	str	r9, [sp, #36]	; 0x24
    3ff8:	str	sl, [sp, #40]	; 0x28
    3ffc:	ldr	r4, [ip, #4]
    4000:	ldr	sl, [ip]
    4004:	mov	r6, r3
    4008:	mov	r5, r2
    400c:	mov	r8, r1
    4010:	mov	r9, r0
    4014:	mov	r7, r8
    4018:	mov	r1, r5
    401c:	mov	r0, r8
    4020:	bl	cc0 <flatcc_json_parser_symbol_part>
    4024:	mov	r3, r0
    4028:	mov	r2, r1
    402c:	movw	ip, #30770	; 0x7832
    4030:	movt	ip, #26725	; 0x6865
    4034:	cmp	r2, ip
    4038:	bne	404c <MyGame_Example_hex_enum_parse_json_enum+0x7c>
    403c:	mov	ip, #0
    4040:	cmp	r3, ip
    4044:	bcc	4148 <MyGame_Example_hex_enum_parse_json_enum+0x178>
    4048:	b	4060 <MyGame_Example_hex_enum_parse_json_enum+0x90>
    404c:	mov	r2, r1
    4050:	movw	r3, #30770	; 0x7832
    4054:	movt	r3, #26725	; 0x6865
    4058:	cmp	r2, r3
    405c:	bcc	4148 <MyGame_Example_hex_enum_parse_json_enum+0x178>
    4060:	mov	r2, r1
    4064:	bic	ip, r0, #255	; 0xff
    4068:	bic	ip, ip, #65280	; 0xff00
    406c:	eor	r0, r2, #110	; 0x6e
    4070:	eor	r0, r0, #96256	; 0x17800
    4074:	eor	r0, r0, #6553600	; 0x640000
    4078:	eor	r0, r0, #1744830464	; 0x68000000
    407c:	eor	ip, ip, #6750208	; 0x670000
    4080:	eor	ip, ip, #1694498816	; 0x65000000
    4084:	orr	r0, r0, ip
    4088:	cmp	r0, #0
    408c:	beq	4100 <MyGame_Example_hex_enum_parse_json_enum+0x130>
    4090:	mov	r0, #0
    4094:	eor	r3, r1, #50	; 0x32
    4098:	eor	r3, r3, #96256	; 0x17800
    409c:	eor	r3, r3, #6553600	; 0x640000
    40a0:	eor	r3, r3, #1744830464	; 0x68000000
    40a4:	orr	r2, r3, r0
    40a8:	cmp	r2, #0
    40ac:	bne	40f8 <MyGame_Example_hex_enum_parse_json_enum+0x128>
    40b0:	mov	r3, #4
    40b4:	str	r4, [sp]
    40b8:	mov	r2, r5
    40bc:	mov	r1, r8
    40c0:	mov	r0, r9
    40c4:	bl	0 <flatcc_json_parser_match_constant>
    40c8:	cmp	r0, r8
    40cc:	beq	40f0 <MyGame_Example_hex_enum_parse_json_enum+0x120>
    40d0:	mov	ip, #0
    40d4:	movw	r3, #48815	; 0xbeaf
    40d8:	movt	r3, #32431	; 0x7eaf
    40dc:	str	r3, [sl]
    40e0:	str	ip, [sl, #4]
    40e4:	mov	r3, #0
    40e8:	str	r3, [r6]
    40ec:	b	41b0 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    40f0:	mov	r0, r7
    40f4:	b	41b0 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    40f8:	mov	r0, r7
    40fc:	b	41b0 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    4100:	mov	r1, r8
    4104:	mov	r8, r1
    4108:	mov	r3, #6
    410c:	str	r4, [sp]
    4110:	mov	r2, r5
    4114:	mov	r0, r9
    4118:	bl	0 <flatcc_json_parser_match_constant>
    411c:	cmp	r0, r8
    4120:	beq	4140 <MyGame_Example_hex_enum_parse_json_enum+0x170>
    4124:	mvn	r1, #0
    4128:	mvn	ip, #1
    412c:	str	ip, [sl]
    4130:	str	r1, [sl, #4]
    4134:	mov	r2, #1
    4138:	str	r2, [r6]
    413c:	b	41b0 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    4140:	mov	r0, r7
    4144:	b	41b0 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    4148:	mov	r2, #0
    414c:	eor	r1, r1, #49	; 0x31
    4150:	eor	r1, r1, #96256	; 0x17800
    4154:	eor	r1, r1, #6553600	; 0x640000
    4158:	eor	r1, r1, #1744830464	; 0x68000000
    415c:	orr	r1, r1, r2
    4160:	cmp	r1, #0
    4164:	bne	41ac <MyGame_Example_hex_enum_parse_json_enum+0x1dc>
    4168:	mov	r3, #4
    416c:	str	r4, [sp]
    4170:	mov	r2, r5
    4174:	mov	r1, r8
    4178:	mov	r0, r9
    417c:	bl	0 <flatcc_json_parser_match_constant>
    4180:	cmp	r0, r8
    4184:	beq	41a4 <MyGame_Example_hex_enum_parse_json_enum+0x1d4>
    4188:	mov	r3, #0
    418c:	mov	r2, #3
    4190:	str	r2, [sl]
    4194:	str	r3, [sl, #4]
    4198:	mov	ip, #0
    419c:	str	ip, [r6]
    41a0:	b	41b0 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    41a4:	mov	r0, r7
    41a8:	b	41b0 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    41ac:	mov	r0, r7
    41b0:	ldr	r4, [sp, #16]
    41b4:	ldr	r5, [sp, #20]
    41b8:	ldr	r6, [sp, #24]
    41bc:	ldr	r7, [sp, #28]
    41c0:	ldr	r8, [sp, #32]
    41c4:	ldr	r9, [sp, #36]	; 0x24
    41c8:	ldr	sl, [sp, #40]	; 0x28
    41cc:	ldr	lr, [sp, #8]
    41d0:	add	sp, sp, #48	; 0x30
    41d4:	bx	lr

000041d8 <MyGame_Example_Color_parse_json_enum>:
    41d8:	mov	ip, sp
    41dc:	sub	sp, sp, #48	; 0x30
    41e0:	str	ip, [sp, #4]
    41e4:	str	lr, [sp, #8]
    41e8:	str	r4, [sp, #16]
    41ec:	str	r5, [sp, #20]
    41f0:	str	r6, [sp, #24]
    41f4:	str	r7, [sp, #28]
    41f8:	str	r8, [sp, #32]
    41fc:	str	r9, [sp, #36]	; 0x24
    4200:	str	sl, [sp, #40]	; 0x28
    4204:	ldr	sl, [ip, #4]
    4208:	ldr	r9, [ip]
    420c:	mov	r4, r3
    4210:	mov	r5, r2
    4214:	mov	r6, r1
    4218:	mov	r7, r0
    421c:	mov	r1, r5
    4220:	mov	r0, r6
    4224:	bl	cc0 <flatcc_json_parser_symbol_part>
    4228:	mov	r2, r1
    422c:	movw	r3, #25957	; 0x6565
    4230:	movt	r3, #18290	; 0x4772
    4234:	cmp	r2, r3
    4238:	bne	4250 <MyGame_Example_Color_parse_json_enum+0x78>
    423c:	mov	r3, r0
    4240:	mov	r2, #1845493760	; 0x6e000000
    4244:	cmp	r3, r2
    4248:	bcc	4340 <MyGame_Example_Color_parse_json_enum+0x168>
    424c:	b	4260 <MyGame_Example_Color_parse_json_enum+0x88>
    4250:	movw	ip, #25957	; 0x6565
    4254:	movt	ip, #18290	; 0x4772
    4258:	cmp	r2, ip
    425c:	bcc	4340 <MyGame_Example_Color_parse_json_enum+0x168>
    4260:	mov	r3, r1
    4264:	bic	r3, r3, #255	; 0xff
    4268:	mov	r2, #0
    426c:	eor	ip, r3, #91136	; 0x16400
    4270:	eor	ip, ip, #40108032	; 0x2640000
    4274:	eor	ip, ip, #1342177280	; 0x50000000
    4278:	orr	ip, ip, r2
    427c:	cmp	ip, #0
    4280:	beq	42f8 <MyGame_Example_Color_parse_json_enum+0x120>
    4284:	and	ip, r0, #-16777216	; 0xff000000
    4288:	eor	r2, r1, #101	; 0x65
    428c:	eor	r2, r2, #25856	; 0x6500
    4290:	eor	r2, r2, #7471104	; 0x720000
    4294:	eor	r2, r2, #1191182336	; 0x47000000
    4298:	eor	r1, ip, #1845493760	; 0x6e000000
    429c:	orr	r3, r2, r1
    42a0:	cmp	r3, #0
    42a4:	bne	42f0 <MyGame_Example_Color_parse_json_enum+0x118>
    42a8:	mov	r8, r6
    42ac:	mov	r3, #5
    42b0:	str	sl, [sp]
    42b4:	mov	r2, r5
    42b8:	mov	r1, r8
    42bc:	mov	r0, r7
    42c0:	bl	0 <flatcc_json_parser_match_constant>
    42c4:	cmp	r0, r8
    42c8:	beq	42e8 <MyGame_Example_Color_parse_json_enum+0x110>
    42cc:	mov	ip, #0
    42d0:	mov	r3, #2
    42d4:	str	r3, [r9]
    42d8:	str	ip, [r9, #4]
    42dc:	mov	r1, #0
    42e0:	str	r1, [r4]
    42e4:	b	43ac <MyGame_Example_Color_parse_json_enum+0x1d4>
    42e8:	mov	r0, r6
    42ec:	b	43ac <MyGame_Example_Color_parse_json_enum+0x1d4>
    42f0:	mov	r0, r6
    42f4:	b	43ac <MyGame_Example_Color_parse_json_enum+0x1d4>
    42f8:	mov	r1, r6
    42fc:	mov	r8, r1
    4300:	mov	r3, #3
    4304:	str	sl, [sp]
    4308:	mov	r2, r5
    430c:	mov	r0, r7
    4310:	bl	0 <flatcc_json_parser_match_constant>
    4314:	cmp	r0, r8
    4318:	beq	4338 <MyGame_Example_Color_parse_json_enum+0x160>
    431c:	mov	r2, #0
    4320:	mov	r1, #1
    4324:	str	r1, [r9]
    4328:	str	r2, [r9, #4]
    432c:	mov	r3, #0
    4330:	str	r3, [r4]
    4334:	b	43ac <MyGame_Example_Color_parse_json_enum+0x1d4>
    4338:	mov	r0, r6
    433c:	b	43ac <MyGame_Example_Color_parse_json_enum+0x1d4>
    4340:	mov	r2, #0
    4344:	eor	ip, r1, #101	; 0x65
    4348:	eor	ip, ip, #29952	; 0x7500
    434c:	eor	ip, ip, #40632320	; 0x26c0000
    4350:	eor	ip, ip, #1073741824	; 0x40000000
    4354:	orr	r1, ip, r2
    4358:	cmp	r1, #0
    435c:	bne	43a8 <MyGame_Example_Color_parse_json_enum+0x1d0>
    4360:	mov	r8, r6
    4364:	mov	r3, #4
    4368:	str	sl, [sp]
    436c:	mov	r2, r5
    4370:	mov	r1, r8
    4374:	mov	r0, r7
    4378:	bl	0 <flatcc_json_parser_match_constant>
    437c:	cmp	r0, r8
    4380:	beq	43a0 <MyGame_Example_Color_parse_json_enum+0x1c8>
    4384:	mov	r2, #0
    4388:	mov	r1, #8
    438c:	str	r1, [r9]
    4390:	str	r2, [r9, #4]
    4394:	mov	r1, #0
    4398:	str	r1, [r4]
    439c:	b	43ac <MyGame_Example_Color_parse_json_enum+0x1d4>
    43a0:	mov	r0, r6
    43a4:	b	43ac <MyGame_Example_Color_parse_json_enum+0x1d4>
    43a8:	mov	r0, r6
    43ac:	ldr	r4, [sp, #16]
    43b0:	ldr	r5, [sp, #20]
    43b4:	ldr	r6, [sp, #24]
    43b8:	ldr	r7, [sp, #28]
    43bc:	ldr	r8, [sp, #32]
    43c0:	ldr	r9, [sp, #36]	; 0x24
    43c4:	ldr	sl, [sp, #40]	; 0x28
    43c8:	ldr	lr, [sp, #8]
    43cc:	add	sp, sp, #48	; 0x30
    43d0:	bx	lr

000043d4 <MyGame_Example_Any_parse_json_union>:
    43d4:	mov	ip, sp
    43d8:	sub	sp, sp, #24
    43dc:	str	ip, [sp]
    43e0:	str	lr, [sp, #4]
    43e4:	str	r4, [sp, #8]
    43e8:	str	r5, [sp, #12]
    43ec:	str	r6, [sp, #16]
    43f0:	ldr	r6, [ip]
    43f4:	mov	r4, r2
    43f8:	mov	r5, r0
    43fc:	mov	r2, #0
    4400:	str	r2, [r6]
    4404:	cmp	r3, #2
    4408:	bcs	4438 <MyGame_Example_Any_parse_json_union+0x64>
    440c:	cmp	r3, #0
    4410:	bne	4424 <MyGame_Example_Any_parse_json_union+0x50>
    4414:	mov	r2, r4
    4418:	mov	r0, r5
    441c:	bl	1980 <flatcc_json_parser_none>
    4420:	b	44e8 <MyGame_Example_Any_parse_json_union+0x114>
    4424:	mov	r3, r6
    4428:	mov	r2, r4
    442c:	mov	r0, r5
    4430:	bl	7fac <MyGame_Example_Monster_parse_json_table>
    4434:	b	44bc <MyGame_Example_Any_parse_json_union+0xe8>
    4438:	cmp	r3, #2
    443c:	beq	44ac <MyGame_Example_Any_parse_json_union+0xd8>
    4440:	cmp	r3, #3
    4444:	beq	4498 <MyGame_Example_Any_parse_json_union+0xc4>
    4448:	cmp	r3, #4
    444c:	bne	4464 <MyGame_Example_Any_parse_json_union+0x90>
    4450:	mov	r3, r6
    4454:	mov	r2, r4
    4458:	mov	r0, r5
    445c:	bl	6020 <MyGame_Example_Alt_parse_json_table>
    4460:	b	44bc <MyGame_Example_Any_parse_json_union+0xe8>
    4464:	ldr	r2, [r5, #8]
    4468:	and	r3, r2, #1
    446c:	cmp	r3, #0
    4470:	bne	4488 <MyGame_Example_Any_parse_json_union+0xb4>
    4474:	mov	r3, #15
    4478:	mov	r2, r4
    447c:	mov	r0, r5
    4480:	bl	0 <flatcc_json_parser_set_error>
    4484:	b	44e8 <MyGame_Example_Any_parse_json_union+0x114>
    4488:	mov	r2, r4
    448c:	mov	r0, r5
    4490:	bl	0 <flatcc_json_parser_generic_json>
    4494:	b	44e8 <MyGame_Example_Any_parse_json_union+0x114>
    4498:	mov	r3, r6
    449c:	mov	r2, r4
    44a0:	mov	r0, r5
    44a4:	bl	3844 <MyGame_Example2_Monster_parse_json_table>
    44a8:	b	44bc <MyGame_Example_Any_parse_json_union+0xe8>
    44ac:	mov	r3, r6
    44b0:	mov	r2, r4
    44b4:	mov	r0, r5
    44b8:	bl	4c94 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>
    44bc:	ldr	ip, [r5, #24]
    44c0:	cmp	ip, #0
    44c4:	bne	44e8 <MyGame_Example_Any_parse_json_union+0x114>
    44c8:	ldr	r1, [r6]
    44cc:	cmp	r1, #0
    44d0:	bne	44e8 <MyGame_Example_Any_parse_json_union+0x114>
    44d4:	mov	r3, #33	; 0x21
    44d8:	mov	r2, r4
    44dc:	mov	r1, r0
    44e0:	mov	r0, r5
    44e4:	bl	0 <flatcc_json_parser_set_error>
    44e8:	ldr	r4, [sp, #8]
    44ec:	ldr	r5, [sp, #12]
    44f0:	ldr	r6, [sp, #16]
    44f4:	ldr	lr, [sp, #4]
    44f8:	add	sp, sp, #24
    44fc:	bx	lr

00004500 <MyGame_Example_Any_json_union_accept_type>:
    4500:	mov	ip, sp
    4504:	sub	sp, sp, #8
    4508:	str	ip, [sp]
    450c:	str	lr, [sp, #4]
    4510:	cmp	r0, #2
    4514:	bcs	4530 <MyGame_Example_Any_json_union_accept_type+0x30>
    4518:	cmp	r0, #0
    451c:	bne	4528 <MyGame_Example_Any_json_union_accept_type+0x28>
    4520:	mov	r0, #1
    4524:	b	4564 <MyGame_Example_Any_json_union_accept_type+0x64>
    4528:	mov	r0, #1
    452c:	b	4564 <MyGame_Example_Any_json_union_accept_type+0x64>
    4530:	cmp	r0, #2
    4534:	beq	4560 <MyGame_Example_Any_json_union_accept_type+0x60>
    4538:	cmp	r0, #3
    453c:	beq	4558 <MyGame_Example_Any_json_union_accept_type+0x58>
    4540:	cmp	r0, #4
    4544:	bne	4550 <MyGame_Example_Any_json_union_accept_type+0x50>
    4548:	mov	r0, #1
    454c:	b	4564 <MyGame_Example_Any_json_union_accept_type+0x64>
    4550:	mov	r0, #0
    4554:	b	4564 <MyGame_Example_Any_json_union_accept_type+0x64>
    4558:	mov	r0, #1
    455c:	b	4564 <MyGame_Example_Any_json_union_accept_type+0x64>
    4560:	mov	r0, #1
    4564:	ldr	lr, [sp, #4]
    4568:	add	sp, sp, #8
    456c:	bx	lr

00004570 <MyGame_Example_Any_parse_json_enum>:
    4570:	mov	ip, sp
    4574:	sub	sp, sp, #56	; 0x38
    4578:	str	ip, [sp, #4]
    457c:	str	lr, [sp, #8]
    4580:	str	r4, [sp, #24]
    4584:	str	r5, [sp, #28]
    4588:	str	r6, [sp, #32]
    458c:	str	r7, [sp, #36]	; 0x24
    4590:	str	r8, [sp, #40]	; 0x28
    4594:	str	r9, [sp, #44]	; 0x2c
    4598:	str	sl, [sp, #48]	; 0x30
    459c:	str	fp, [sp, #52]	; 0x34
    45a0:	ldr	ip, [ip, #4]
    45a4:	str	ip, [sp, #20]
    45a8:	ldr	ip, [sp, #4]
    45ac:	ldr	r7, [ip]
    45b0:	mov	fp, r3
    45b4:	mov	r8, r2
    45b8:	mov	r5, r1
    45bc:	str	r0, [sp, #16]
    45c0:	mov	r6, r5
    45c4:	mov	r1, r8
    45c8:	mov	r0, r5
    45cc:	bl	cc0 <flatcc_json_parser_symbol_part>
    45d0:	mov	r9, r1
    45d4:	mov	sl, r0
    45d8:	mov	r1, sl
    45dc:	mov	r0, r9
    45e0:	movw	r2, #28275	; 0x6e73
    45e4:	movt	r2, #19823	; 0x4d6f
    45e8:	cmp	r0, r2
    45ec:	bne	4604 <MyGame_Example_Any_parse_json_enum+0x94>
    45f0:	movw	r2, #29184	; 0x7200
    45f4:	movt	r2, #29797	; 0x7465
    45f8:	cmp	r1, r2
    45fc:	bcc	4884 <MyGame_Example_Any_parse_json_enum+0x314>
    4600:	b	4618 <MyGame_Example_Any_parse_json_enum+0xa8>
    4604:	mov	r3, r9
    4608:	movw	r2, #28275	; 0x6e73
    460c:	movt	r2, #19823	; 0x4d6f
    4610:	cmp	r3, r2
    4614:	bcc	4884 <MyGame_Example_Any_parse_json_enum+0x314>
    4618:	mov	r3, r9
    461c:	eor	r0, r3, #115	; 0x73
    4620:	eor	r0, r0, #28160	; 0x6e00
    4624:	eor	r0, r0, #7274496	; 0x6f0000
    4628:	eor	r0, r0, #1291845632	; 0x4d000000
    462c:	mov	r2, sl
    4630:	eor	ip, r2, #50	; 0x32
    4634:	eor	ip, ip, #29184	; 0x7200
    4638:	eor	ip, ip, #6619136	; 0x650000
    463c:	eor	ip, ip, #1946157056	; 0x74000000
    4640:	orr	r1, r0, ip
    4644:	cmp	r1, #0
    4648:	beq	46c8 <MyGame_Example_Any_parse_json_enum+0x158>
    464c:	mov	r2, r9
    4650:	mov	r3, sl
    4654:	bic	ip, r3, #255	; 0xff
    4658:	eor	r1, r2, #115	; 0x73
    465c:	eor	r1, r1, #28160	; 0x6e00
    4660:	eor	r1, r1, #7274496	; 0x6f0000
    4664:	eor	r1, r1, #1291845632	; 0x4d000000
    4668:	eor	r2, ip, #29184	; 0x7200
    466c:	eor	r2, r2, #6619136	; 0x650000
    4670:	eor	r2, r2, #1946157056	; 0x74000000
    4674:	orr	r0, r1, r2
    4678:	cmp	r0, #0
    467c:	bne	4710 <MyGame_Example_Any_parse_json_enum+0x1a0>
    4680:	mov	r1, r5
    4684:	mov	r4, r1
    4688:	mov	r3, #7
    468c:	ldr	ip, [sp, #20]
    4690:	str	ip, [sp]
    4694:	mov	r2, r8
    4698:	ldr	r0, [sp, #16]
    469c:	bl	0 <flatcc_json_parser_match_constant>
    46a0:	mov	r5, r0
    46a4:	cmp	r5, r4
    46a8:	beq	4710 <MyGame_Example_Any_parse_json_enum+0x1a0>
    46ac:	mov	ip, #0
    46b0:	mov	r3, #1
    46b4:	str	r3, [r7]
    46b8:	str	ip, [r7, #4]
    46bc:	mov	ip, #0
    46c0:	str	ip, [fp]
    46c4:	b	48e8 <MyGame_Example_Any_parse_json_enum+0x378>
    46c8:	mov	r1, r5
    46cc:	mov	r4, r1
    46d0:	mov	r3, #8
    46d4:	ldr	ip, [sp, #20]
    46d8:	str	ip, [sp]
    46dc:	mov	r2, r8
    46e0:	ldr	r0, [sp, #16]
    46e4:	bl	0 <flatcc_json_parser_match_constant>
    46e8:	mov	r5, r0
    46ec:	cmp	r5, r4
    46f0:	beq	4710 <MyGame_Example_Any_parse_json_enum+0x1a0>
    46f4:	mov	r0, #0
    46f8:	mov	ip, #3
    46fc:	str	ip, [r7]
    4700:	str	r0, [r7, #4]
    4704:	mov	r2, #0
    4708:	str	r2, [fp]
    470c:	b	48e8 <MyGame_Example_Any_parse_json_enum+0x378>
    4710:	mov	r3, r9
    4714:	mov	r0, #0
    4718:	eor	r1, r3, #69	; 0x45
    471c:	eor	r1, r1, #19968	; 0x4e00
    4720:	eor	r1, r1, #5177344	; 0x4f0000
    4724:	eor	r1, r1, #1308622848	; 0x4e000000
    4728:	orr	r0, r1, r0
    472c:	cmp	r0, #0
    4730:	bne	477c <MyGame_Example_Any_parse_json_enum+0x20c>
    4734:	mov	r4, r5
    4738:	mov	r3, #4
    473c:	ldr	ip, [sp, #20]
    4740:	str	ip, [sp]
    4744:	mov	r2, r8
    4748:	mov	r1, r4
    474c:	ldr	r0, [sp, #16]
    4750:	bl	0 <flatcc_json_parser_match_constant>
    4754:	mov	r5, r0
    4758:	cmp	r5, r4
    475c:	beq	477c <MyGame_Example_Any_parse_json_enum+0x20c>
    4760:	mov	r3, #0
    4764:	mov	r2, #0
    4768:	str	r2, [r7]
    476c:	str	r3, [r7, #4]
    4770:	mov	r1, #0
    4774:	str	r1, [fp]
    4778:	b	48e8 <MyGame_Example_Any_parse_json_enum+0x378>
    477c:	eor	r1, r9, #884	; 0x374
    4780:	eor	r1, r1, #356352	; 0x57000
    4784:	eor	r1, r1, #73400320	; 0x4600000
    4788:	eor	r1, r1, #1342177280	; 0x50000000
    478c:	eor	r0, sl, #3440	; 0xd70
    4790:	eor	r0, r0, #614400	; 0x96000
    4794:	eor	r0, r0, #56623104	; 0x3600000
    4798:	eor	r0, r0, #1342177280	; 0x50000000
    479c:	orr	r3, r1, r0
    47a0:	cmp	r3, #0
    47a4:	bne	487c <MyGame_Example_Any_parse_json_enum+0x30c>
    47a8:	add	r4, r5, #8
    47ac:	mov	r1, r8
    47b0:	mov	r0, r4
    47b4:	bl	cc0 <flatcc_json_parser_symbol_part>
    47b8:	eor	r1, r1, #97	; 0x61
    47bc:	eor	r1, r1, #87040	; 0x15400
    47c0:	eor	r1, r1, #6553600	; 0x640000
    47c4:	eor	r1, r1, #1811939328	; 0x6c000000
    47c8:	eor	r0, r0, #87	; 0x57
    47cc:	eor	r0, r0, #25856	; 0x6500
    47d0:	eor	r0, r0, #40632320	; 0x26c0000
    47d4:	eor	r0, r0, #1610612736	; 0x60000000
    47d8:	orr	r0, r1, r0
    47dc:	cmp	r0, #0
    47e0:	bne	4874 <MyGame_Example_Any_parse_json_enum+0x304>
    47e4:	add	r4, r4, #8
    47e8:	mov	r1, r8
    47ec:	mov	r0, r4
    47f0:	bl	cc0 <flatcc_json_parser_symbol_part>
    47f4:	bic	r0, r0, #255	; 0xff
    47f8:	eor	r3, r1, #69	; 0x45
    47fc:	eor	r3, r3, #26624	; 0x6800
    4800:	eor	r3, r3, #24379392	; 0x1740000
    4804:	eor	r3, r3, #1744830464	; 0x68000000
    4808:	eor	r2, r0, #27904	; 0x6d00
    480c:	eor	r2, r2, #7667712	; 0x750000
    4810:	eor	r2, r2, #1845493760	; 0x6e000000
    4814:	orr	ip, r3, r2
    4818:	cmp	ip, #0
    481c:	bne	486c <MyGame_Example_Any_parse_json_enum+0x2fc>
    4820:	mov	r3, #7
    4824:	ldr	ip, [sp, #20]
    4828:	str	ip, [sp]
    482c:	mov	r2, r8
    4830:	mov	r1, r4
    4834:	ldr	r0, [sp, #16]
    4838:	bl	0 <flatcc_json_parser_match_constant>
    483c:	mov	r5, r0
    4840:	cmp	r5, r4
    4844:	beq	4864 <MyGame_Example_Any_parse_json_enum+0x2f4>
    4848:	mov	r2, #0
    484c:	mov	r1, #2
    4850:	str	r1, [r7]
    4854:	str	r2, [r7, #4]
    4858:	mov	r0, #0
    485c:	str	r0, [fp]
    4860:	b	48e8 <MyGame_Example_Any_parse_json_enum+0x378>
    4864:	mov	r0, r6
    4868:	b	48fc <MyGame_Example_Any_parse_json_enum+0x38c>
    486c:	mov	r0, r6
    4870:	b	48fc <MyGame_Example_Any_parse_json_enum+0x38c>
    4874:	mov	r0, r6
    4878:	b	48fc <MyGame_Example_Any_parse_json_enum+0x38c>
    487c:	mov	r0, r6
    4880:	b	48fc <MyGame_Example_Any_parse_json_enum+0x38c>
    4884:	bic	r2, r9, #255	; 0xff
    4888:	mov	r1, #0
    488c:	eor	ip, r2, #29696	; 0x7400
    4890:	eor	ip, ip, #23855104	; 0x16c0000
    4894:	eor	ip, ip, #1073741824	; 0x40000000
    4898:	orr	r3, ip, r1
    489c:	cmp	r3, #0
    48a0:	bne	48f8 <MyGame_Example_Any_parse_json_enum+0x388>
    48a4:	mov	r4, r5
    48a8:	mov	r3, #3
    48ac:	ldr	ip, [sp, #20]
    48b0:	str	ip, [sp]
    48b4:	mov	r2, r8
    48b8:	mov	r1, r4
    48bc:	ldr	r0, [sp, #16]
    48c0:	bl	0 <flatcc_json_parser_match_constant>
    48c4:	mov	r5, r0
    48c8:	cmp	r5, r4
    48cc:	beq	48f0 <MyGame_Example_Any_parse_json_enum+0x380>
    48d0:	mov	ip, #0
    48d4:	mov	r3, #4
    48d8:	str	r3, [r7]
    48dc:	str	ip, [r7, #4]
    48e0:	mov	r2, #0
    48e4:	str	r2, [fp]
    48e8:	mov	r0, r5
    48ec:	b	48fc <MyGame_Example_Any_parse_json_enum+0x38c>
    48f0:	mov	r0, r6
    48f4:	b	48fc <MyGame_Example_Any_parse_json_enum+0x38c>
    48f8:	mov	r0, r6
    48fc:	ldr	r4, [sp, #24]
    4900:	ldr	r5, [sp, #28]
    4904:	ldr	r6, [sp, #32]
    4908:	ldr	r7, [sp, #36]	; 0x24
    490c:	ldr	r8, [sp, #40]	; 0x28
    4910:	ldr	r9, [sp, #44]	; 0x2c
    4914:	ldr	sl, [sp, #48]	; 0x30
    4918:	ldr	fp, [sp, #52]	; 0x34
    491c:	ldr	lr, [sp, #8]
    4920:	add	sp, sp, #56	; 0x38
    4924:	bx	lr

00004928 <MyGame_Example_Test_parse_json_struct_inline>:
    4928:	mov	ip, sp
    492c:	sub	sp, sp, #48	; 0x30
    4930:	str	ip, [sp, #4]
    4934:	str	lr, [sp, #8]
    4938:	str	r4, [sp, #16]
    493c:	str	r5, [sp, #20]
    4940:	str	r6, [sp, #24]
    4944:	str	r7, [sp, #28]
    4948:	str	r8, [sp, #32]
    494c:	str	r9, [sp, #36]	; 0x24
    4950:	mov	r4, r3
    4954:	mov	r6, r2
    4958:	mov	r8, r0
    495c:	add	r3, sp, #44	; 0x2c
    4960:	mov	r2, r6
    4964:	mov	r0, r8
    4968:	bl	d7c <flatcc_json_parser_object_start>
    496c:	mov	r1, r0
    4970:	ldr	r3, [sp, #44]	; 0x2c
    4974:	cmp	r3, #0
    4978:	beq	4b90 <MyGame_Example_Test_parse_json_struct_inline+0x268>
    497c:	mov	r2, r6
    4980:	mov	r0, r8
    4984:	bl	b90 <flatcc_json_parser_symbol_start>
    4988:	mov	r5, r0
    498c:	mov	r1, r6
    4990:	mov	r0, r5
    4994:	bl	cc0 <flatcc_json_parser_symbol_part>
    4998:	mov	r3, r1
    499c:	and	r3, r3, #-16777216	; 0xff000000
    49a0:	mov	r2, #0
    49a4:	eor	ip, r3, #1644167168	; 0x62000000
    49a8:	orr	r2, ip, r2
    49ac:	cmp	r2, #0
    49b0:	beq	4aa0 <MyGame_Example_Test_parse_json_struct_inline+0x178>
    49b4:	and	r0, r1, #-16777216	; 0xff000000
    49b8:	mov	r1, #0
    49bc:	eor	r2, r0, #1627389952	; 0x61000000
    49c0:	orr	r3, r2, r1
    49c4:	cmp	r3, #0
    49c8:	bne	4a88 <MyGame_Example_Test_parse_json_struct_inline+0x160>
    49cc:	mov	r3, #1
    49d0:	mov	r2, r6
    49d4:	mov	r1, r5
    49d8:	mov	r0, r8
    49dc:	bl	118c <flatcc_json_parser_match_symbol>
    49e0:	mov	r7, r0
    49e4:	cmp	r5, r7
    49e8:	beq	4a70 <MyGame_Example_Test_parse_json_struct_inline+0x148>
    49ec:	mov	r1, #0
    49f0:	strh	r1, [sp, #42]	; 0x2a
    49f4:	add	r3, sp, #42	; 0x2a
    49f8:	mov	r2, r6
    49fc:	mov	r1, r7
    4a00:	mov	r0, r8
    4a04:	bl	1ec0 <flatcc_json_parser_int16>
    4a08:	mov	r5, r0
    4a0c:	cmp	r7, r5
    4a10:	bne	4a5c <MyGame_Example_Test_parse_json_struct_inline+0x134>
    4a14:	mov	r1, r5
    4a18:	mov	r7, r1
    4a1c:	ldr	r3, [pc, #404]	; 4bb8 <MyGame_Example_Test_parse_json_struct_inline+0x290>
    4a20:	add	r0, sp, #42	; 0x2a
    4a24:	str	r0, [sp]
    4a28:	mov	r2, r6
    4a2c:	mov	r0, r8
    4a30:	bl	2c74 <flatcc_json_parser_symbolic_int16>
    4a34:	mov	r5, r0
    4a38:	cmp	r5, r7
    4a3c:	beq	4a50 <MyGame_Example_Test_parse_json_struct_inline+0x128>
    4a40:	cmp	r5, r6
    4a44:	moveq	r2, #1
    4a48:	movne	r2, #0
    4a4c:	b	4a54 <MyGame_Example_Test_parse_json_struct_inline+0x12c>
    4a50:	mov	r2, #1
    4a54:	cmp	r2, #0
    4a58:	bne	4b34 <MyGame_Example_Test_parse_json_struct_inline+0x20c>
    4a5c:	ldrsh	r1, [sp, #42]	; 0x2a
    4a60:	sbfx	r1, r1, #0, #16
    4a64:	mov	r0, r4
    4a68:	bl	29c <flatbuffers_int16_write_to_pe>
    4a6c:	b	4b74 <MyGame_Example_Test_parse_json_struct_inline+0x24c>
    4a70:	mov	r2, r6
    4a74:	mov	r1, r7
    4a78:	mov	r0, r8
    4a7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4a80:	mov	r5, r0
    4a84:	b	4b74 <MyGame_Example_Test_parse_json_struct_inline+0x24c>
    4a88:	mov	r2, r6
    4a8c:	mov	r1, r5
    4a90:	mov	r0, r8
    4a94:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4a98:	mov	r5, r0
    4a9c:	b	4b74 <MyGame_Example_Test_parse_json_struct_inline+0x24c>
    4aa0:	mov	r3, #1
    4aa4:	mov	r2, r6
    4aa8:	mov	r1, r5
    4aac:	mov	r0, r8
    4ab0:	bl	118c <flatcc_json_parser_match_symbol>
    4ab4:	mov	r7, r0
    4ab8:	cmp	r5, r7
    4abc:	beq	4b60 <MyGame_Example_Test_parse_json_struct_inline+0x238>
    4ac0:	mov	ip, #0
    4ac4:	strb	ip, [sp, #40]	; 0x28
    4ac8:	add	r9, r4, #2
    4acc:	add	r3, sp, #40	; 0x28
    4ad0:	mov	r2, r6
    4ad4:	mov	r1, r7
    4ad8:	mov	r0, r8
    4adc:	bl	1f84 <flatcc_json_parser_int8>
    4ae0:	mov	r5, r0
    4ae4:	cmp	r7, r5
    4ae8:	bne	4b4c <MyGame_Example_Test_parse_json_struct_inline+0x224>
    4aec:	mov	r1, r5
    4af0:	mov	r7, r1
    4af4:	ldr	r3, [pc, #192]	; 4bbc <MyGame_Example_Test_parse_json_struct_inline+0x294>
    4af8:	add	r2, sp, #40	; 0x28
    4afc:	str	r2, [sp]
    4b00:	mov	r2, r6
    4b04:	mov	r0, r8
    4b08:	bl	2e44 <flatcc_json_parser_symbolic_int8>
    4b0c:	mov	r5, r0
    4b10:	cmp	r5, r7
    4b14:	beq	4b28 <MyGame_Example_Test_parse_json_struct_inline+0x200>
    4b18:	cmp	r5, r6
    4b1c:	moveq	r3, #1
    4b20:	movne	r3, #0
    4b24:	b	4b2c <MyGame_Example_Test_parse_json_struct_inline+0x204>
    4b28:	mov	r3, #1
    4b2c:	cmp	r3, #0
    4b30:	beq	4b4c <MyGame_Example_Test_parse_json_struct_inline+0x224>
    4b34:	mov	r3, #33	; 0x21
    4b38:	mov	r2, r6
    4b3c:	mov	r1, r5
    4b40:	mov	r0, r8
    4b44:	bl	0 <flatcc_json_parser_set_error>
    4b48:	b	4b94 <MyGame_Example_Test_parse_json_struct_inline+0x26c>
    4b4c:	ldrsb	r3, [sp, #40]	; 0x28
    4b50:	sbfx	r1, r3, #0, #8
    4b54:	mov	r0, r9
    4b58:	bl	1e0 <flatbuffers_int8_write_to_pe>
    4b5c:	b	4b74 <MyGame_Example_Test_parse_json_struct_inline+0x24c>
    4b60:	mov	r2, r6
    4b64:	mov	r1, r7
    4b68:	mov	r0, r8
    4b6c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4b70:	mov	r5, r0
    4b74:	add	r3, sp, #44	; 0x2c
    4b78:	mov	r2, r6
    4b7c:	mov	r1, r5
    4b80:	mov	r0, r8
    4b84:	bl	e5c <flatcc_json_parser_object_end>
    4b88:	mov	r1, r0
    4b8c:	b	4970 <MyGame_Example_Test_parse_json_struct_inline+0x48>
    4b90:	mov	r0, r1
    4b94:	ldr	r4, [sp, #16]
    4b98:	ldr	r5, [sp, #20]
    4b9c:	ldr	r6, [sp, #24]
    4ba0:	ldr	r7, [sp, #28]
    4ba4:	ldr	r8, [sp, #32]
    4ba8:	ldr	r9, [sp, #36]	; 0x24
    4bac:	ldr	lr, [sp, #8]
    4bb0:	add	sp, sp, #48	; 0x30
    4bb4:	bx	lr
    4bb8:	.word	0x0000000c
    4bbc:	.word	0x00000000

00004bc0 <MyGame_Example_notemptyenum_parse_json_enum>:
    4bc0:	mov	ip, sp
    4bc4:	sub	sp, sp, #48	; 0x30
    4bc8:	str	ip, [sp, #4]
    4bcc:	str	lr, [sp, #8]
    4bd0:	str	r4, [sp, #16]
    4bd4:	str	r5, [sp, #20]
    4bd8:	str	r6, [sp, #24]
    4bdc:	str	r7, [sp, #28]
    4be0:	str	r8, [sp, #32]
    4be4:	str	r9, [sp, #36]	; 0x24
    4be8:	str	sl, [sp, #40]	; 0x28
    4bec:	ldr	r9, [ip, #4]
    4bf0:	ldr	r7, [ip]
    4bf4:	mov	r6, r3
    4bf8:	mov	sl, r2
    4bfc:	mov	r4, r1
    4c00:	mov	r8, r0
    4c04:	mov	r5, r4
    4c08:	mov	r1, sl
    4c0c:	mov	r0, r4
    4c10:	bl	cc0 <flatcc_json_parser_symbol_part>
    4c14:	and	r2, r1, #-16777216	; 0xff000000
    4c18:	mov	ip, #0
    4c1c:	eor	r3, r2, #2013265920	; 0x78000000
    4c20:	orr	ip, r3, ip
    4c24:	cmp	ip, #0
    4c28:	bne	4c68 <MyGame_Example_notemptyenum_parse_json_enum+0xa8>
    4c2c:	mov	r3, #1
    4c30:	str	r9, [sp]
    4c34:	mov	r2, sl
    4c38:	mov	r1, r4
    4c3c:	mov	r0, r8
    4c40:	bl	0 <flatcc_json_parser_match_constant>
    4c44:	cmp	r0, r4
    4c48:	beq	4c68 <MyGame_Example_notemptyenum_parse_json_enum+0xa8>
    4c4c:	mov	r2, #0
    4c50:	mov	r1, #0
    4c54:	str	r1, [r7]
    4c58:	str	r2, [r7, #4]
    4c5c:	mov	r3, #0
    4c60:	str	r3, [r6]
    4c64:	mov	r5, r0
    4c68:	mov	r0, r5
    4c6c:	ldr	r4, [sp, #16]
    4c70:	ldr	r5, [sp, #20]
    4c74:	ldr	r6, [sp, #24]
    4c78:	ldr	r7, [sp, #28]
    4c7c:	ldr	r8, [sp, #32]
    4c80:	ldr	r9, [sp, #36]	; 0x24
    4c84:	ldr	sl, [sp, #40]	; 0x28
    4c88:	ldr	lr, [sp, #8]
    4c8c:	add	sp, sp, #48	; 0x30
    4c90:	bx	lr

00004c94 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>:
    4c94:	mov	ip, sp
    4c98:	sub	sp, sp, #48	; 0x30
    4c9c:	str	ip, [sp, #4]
    4ca0:	str	lr, [sp, #8]
    4ca4:	str	r4, [sp, #16]
    4ca8:	str	r5, [sp, #20]
    4cac:	str	r6, [sp, #24]
    4cb0:	str	r7, [sp, #28]
    4cb4:	str	r8, [sp, #32]
    4cb8:	str	r9, [sp, #36]	; 0x24
    4cbc:	mov	r7, r3
    4cc0:	mov	r5, r2
    4cc4:	mov	r4, r1
    4cc8:	mov	r6, r0
    4ccc:	mov	r1, #0
    4cd0:	str	r1, [r7]
    4cd4:	ldr	r0, [r6]
    4cd8:	mov	r1, #4
    4cdc:	bl	0 <flatcc_builder_start_table>
    4ce0:	cmp	r0, #0
    4ce4:	bne	5208 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    4ce8:	add	r3, sp, #44	; 0x2c
    4cec:	mov	r2, r5
    4cf0:	mov	r1, r4
    4cf4:	mov	r0, r6
    4cf8:	bl	d7c <flatcc_json_parser_object_start>
    4cfc:	mov	r4, r0
    4d00:	ldr	r3, [sp, #44]	; 0x2c
    4d04:	cmp	r3, #0
    4d08:	beq	51e0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x54c>
    4d0c:	mov	r2, r5
    4d10:	mov	r1, r4
    4d14:	mov	r0, r6
    4d18:	bl	b90 <flatcc_json_parser_symbol_start>
    4d1c:	mov	r8, r0
    4d20:	mov	r1, r5
    4d24:	mov	r0, r8
    4d28:	bl	cc0 <flatcc_json_parser_symbol_part>
    4d2c:	mov	r4, r1
    4d30:	mov	r2, r4
    4d34:	mov	r1, r0
    4d38:	bic	r1, r1, #255	; 0xff
    4d3c:	bic	r1, r1, #65280	; 0xff00
    4d40:	eor	r3, r2, #111	; 0x6f
    4d44:	eor	r3, r3, #224256	; 0x36c00
    4d48:	eor	r3, r3, #57409536	; 0x36c0000
    4d4c:	eor	r3, r3, #1610612736	; 0x60000000
    4d50:	eor	ip, r1, #3276800	; 0x320000
    4d54:	eor	ip, ip, #1912602624	; 0x72000000
    4d58:	orr	r1, r3, ip
    4d5c:	cmp	r1, #0
    4d60:	beq	4e7c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1e8>
    4d64:	mov	r1, r4
    4d68:	and	r3, r0, #-16777216	; 0xff000000
    4d6c:	eor	r2, r1, #111	; 0x6f
    4d70:	eor	r2, r2, #224256	; 0x36c00
    4d74:	eor	r2, r2, #57409536	; 0x36c0000
    4d78:	eor	r2, r2, #1610612736	; 0x60000000
    4d7c:	eor	r1, r3, #1912602624	; 0x72000000
    4d80:	orr	r0, r2, r1
    4d84:	cmp	r0, #0
    4d88:	bne	4f6c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2d8>
    4d8c:	mov	r9, r8
    4d90:	mov	r3, #5
    4d94:	mov	r2, r5
    4d98:	mov	r1, r8
    4d9c:	mov	r0, r6
    4da0:	bl	118c <flatcc_json_parser_match_symbol>
    4da4:	mov	r8, r0
    4da8:	cmp	r9, r8
    4dac:	beq	4f6c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2d8>
    4db0:	mov	r3, #0
    4db4:	strb	r3, [sp, #42]	; 0x2a
    4db8:	add	r3, sp, #42	; 0x2a
    4dbc:	mov	r2, r5
    4dc0:	mov	r1, r8
    4dc4:	mov	r0, r6
    4dc8:	bl	1f84 <flatcc_json_parser_int8>
    4dcc:	mov	r4, r0
    4dd0:	cmp	r8, r4
    4dd4:	bne	4e20 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x18c>
    4dd8:	mov	r8, r4
    4ddc:	ldr	r3, [pc, #1120]	; 5244 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5b0>
    4de0:	add	r0, sp, #42	; 0x2a
    4de4:	str	r0, [sp]
    4de8:	mov	r2, r5
    4dec:	mov	r1, r4
    4df0:	mov	r0, r6
    4df4:	bl	2e44 <flatcc_json_parser_symbolic_int8>
    4df8:	mov	r4, r0
    4dfc:	cmp	r4, r8
    4e00:	beq	4e14 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x180>
    4e04:	cmp	r4, r5
    4e08:	moveq	r3, #1
    4e0c:	movne	r3, #0
    4e10:	b	4e18 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x184>
    4e14:	mov	r3, #1
    4e18:	cmp	r3, #0
    4e1c:	bne	5208 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    4e20:	ldrsb	r2, [sp, #42]	; 0x2a
    4e24:	cmp	r2, #2
    4e28:	bne	4e44 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1b0>
    4e2c:	ldr	r3, [r6, #8]
    4e30:	and	r3, r3, #2
    4e34:	cmp	r3, #0
    4e38:	movne	ip, #1
    4e3c:	moveq	ip, #0
    4e40:	b	4e48 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1b4>
    4e44:	mov	ip, #1
    4e48:	cmp	ip, #0
    4e4c:	beq	51c4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    4e50:	ldr	r0, [r6]
    4e54:	mov	r1, #0
    4e58:	mov	r2, #1
    4e5c:	mov	r3, #1
    4e60:	bl	0 <flatcc_builder_table_add>
    4e64:	cmp	r0, #0
    4e68:	beq	5208 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    4e6c:	ldrsb	r1, [sp, #42]	; 0x2a
    4e70:	sbfx	r1, r1, #0, #8
    4e74:	bl	1e0 <flatbuffers_int8_write_to_pe>
    4e78:	b	51c4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    4e7c:	mov	r9, r8
    4e80:	mov	r3, #6
    4e84:	mov	r2, r5
    4e88:	mov	r1, r8
    4e8c:	mov	r0, r6
    4e90:	bl	118c <flatcc_json_parser_match_symbol>
    4e94:	mov	r8, r0
    4e98:	cmp	r9, r8
    4e9c:	beq	4f6c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2d8>
    4ea0:	mov	r0, #0
    4ea4:	strb	r0, [sp, #41]	; 0x29
    4ea8:	add	r3, sp, #41	; 0x29
    4eac:	mov	r2, r5
    4eb0:	mov	r1, r8
    4eb4:	mov	r0, r6
    4eb8:	bl	1f84 <flatcc_json_parser_int8>
    4ebc:	mov	r4, r0
    4ec0:	cmp	r8, r4
    4ec4:	bne	4f10 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x27c>
    4ec8:	mov	r1, r4
    4ecc:	mov	r8, r1
    4ed0:	ldr	r3, [pc, #872]	; 5240 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5ac>
    4ed4:	add	r0, sp, #41	; 0x29
    4ed8:	str	r0, [sp]
    4edc:	mov	r2, r5
    4ee0:	mov	r0, r6
    4ee4:	bl	2e44 <flatcc_json_parser_symbolic_int8>
    4ee8:	mov	r4, r0
    4eec:	cmp	r4, r8
    4ef0:	beq	4f04 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x270>
    4ef4:	cmp	r4, r5
    4ef8:	moveq	ip, #1
    4efc:	movne	ip, #0
    4f00:	b	4f08 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x274>
    4f04:	mov	ip, #1
    4f08:	cmp	ip, #0
    4f0c:	bne	5208 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    4f10:	ldrsb	r2, [sp, #41]	; 0x29
    4f14:	cmp	r2, #2
    4f18:	bne	4f34 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2a0>
    4f1c:	ldr	r2, [r6, #8]
    4f20:	and	r2, r2, #2
    4f24:	cmp	r2, #0
    4f28:	movne	r0, #1
    4f2c:	moveq	r0, #0
    4f30:	b	4f38 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2a4>
    4f34:	mov	r0, #1
    4f38:	cmp	r0, #0
    4f3c:	beq	51c4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    4f40:	ldr	r0, [r6]
    4f44:	mov	r1, #1
    4f48:	mov	r2, #1
    4f4c:	mov	r3, #1
    4f50:	bl	0 <flatcc_builder_table_add>
    4f54:	cmp	r0, #0
    4f58:	beq	5208 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    4f5c:	ldrsb	r1, [sp, #41]	; 0x29
    4f60:	sbfx	r1, r1, #0, #8
    4f64:	bl	1e0 <flatbuffers_int8_write_to_pe>
    4f68:	b	51c4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    4f6c:	mov	r2, r4
    4f70:	bic	r0, r2, #255	; 0xff
    4f74:	mov	ip, #0
    4f78:	eor	r0, r0, #12800	; 0x3200
    4f7c:	eor	r0, r0, #6488064	; 0x630000
    4f80:	eor	r0, r0, #1962934272	; 0x75000000
    4f84:	orr	r0, r0, ip
    4f88:	cmp	r0, #0
    4f8c:	beq	50c8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x434>
    4f90:	bic	ip, r4, #255	; 0xff
    4f94:	bic	ip, ip, #65280	; 0xff00
    4f98:	mov	r3, #0
    4f9c:	eor	ip, ip, #6488064	; 0x630000
    4fa0:	eor	ip, ip, #1962934272	; 0x75000000
    4fa4:	orr	ip, ip, r3
    4fa8:	cmp	ip, #0
    4fac:	bne	50b0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x41c>
    4fb0:	mov	r3, #2
    4fb4:	mov	r2, r5
    4fb8:	mov	r1, r8
    4fbc:	mov	r0, r6
    4fc0:	bl	118c <flatcc_json_parser_match_symbol>
    4fc4:	mov	r1, r0
    4fc8:	cmp	r8, r1
    4fcc:	beq	509c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x408>
    4fd0:	mov	r2, #0
    4fd4:	strb	r2, [sp, #40]	; 0x28
    4fd8:	mov	r8, r1
    4fdc:	add	r3, sp, #40	; 0x28
    4fe0:	mov	r2, r5
    4fe4:	mov	r0, r6
    4fe8:	bl	1c6c <flatcc_json_parser_uint8>
    4fec:	mov	r4, r0
    4ff0:	cmp	r8, r4
    4ff4:	bne	5040 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3ac>
    4ff8:	mov	r8, r4
    4ffc:	ldr	r3, [pc, #580]	; 5248 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5b4>
    5000:	add	ip, sp, #40	; 0x28
    5004:	str	ip, [sp]
    5008:	mov	r2, r5
    500c:	mov	r1, r4
    5010:	mov	r0, r6
    5014:	bl	26e8 <flatcc_json_parser_symbolic_uint8>
    5018:	mov	r4, r0
    501c:	cmp	r4, r8
    5020:	beq	5034 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3a0>
    5024:	cmp	r4, r5
    5028:	moveq	r1, #1
    502c:	movne	r1, #0
    5030:	b	5038 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3a4>
    5034:	mov	r1, #1
    5038:	cmp	r1, #0
    503c:	bne	5208 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    5040:	ldrb	r1, [sp, #40]	; 0x28
    5044:	cmp	r1, #2
    5048:	bne	5064 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3d0>
    504c:	ldr	r2, [r6, #8]
    5050:	and	r0, r2, #2
    5054:	cmp	r0, #0
    5058:	movne	r2, #1
    505c:	moveq	r2, #0
    5060:	b	5068 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3d4>
    5064:	mov	r2, #1
    5068:	cmp	r2, #0
    506c:	beq	51c4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    5070:	ldr	r0, [r6]
    5074:	mov	r1, #2
    5078:	mov	r2, #1
    507c:	mov	r3, #1
    5080:	bl	0 <flatcc_builder_table_add>
    5084:	cmp	r0, #0
    5088:	beq	5208 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    508c:	ldrb	r3, [sp, #40]	; 0x28
    5090:	and	r1, r3, #255	; 0xff
    5094:	bl	20 <flatbuffers_uint8_write_to_pe>
    5098:	b	51c4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    509c:	mov	r2, r5
    50a0:	mov	r0, r6
    50a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    50a8:	mov	r4, r0
    50ac:	b	51c4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    50b0:	mov	r2, r5
    50b4:	mov	r1, r8
    50b8:	mov	r0, r6
    50bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    50c0:	mov	r4, r0
    50c4:	b	51c4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    50c8:	mov	r3, #3
    50cc:	mov	r2, r5
    50d0:	mov	r1, r8
    50d4:	mov	r0, r6
    50d8:	bl	118c <flatcc_json_parser_match_symbol>
    50dc:	mov	r1, r0
    50e0:	cmp	r8, r1
    50e4:	beq	51b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x520>
    50e8:	mov	r2, #0
    50ec:	strb	r2, [sp, #43]	; 0x2b
    50f0:	mov	r8, r1
    50f4:	add	r3, sp, #43	; 0x2b
    50f8:	mov	r2, r5
    50fc:	mov	r0, r6
    5100:	bl	1c6c <flatcc_json_parser_uint8>
    5104:	mov	r4, r0
    5108:	cmp	r8, r4
    510c:	bne	5158 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x4c4>
    5110:	mov	r8, r4
    5114:	ldr	r3, [pc, #304]	; 524c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5b8>
    5118:	add	r0, sp, #43	; 0x2b
    511c:	str	r0, [sp]
    5120:	mov	r2, r5
    5124:	mov	r1, r4
    5128:	mov	r0, r6
    512c:	bl	26e8 <flatcc_json_parser_symbolic_uint8>
    5130:	mov	r4, r0
    5134:	cmp	r4, r8
    5138:	beq	514c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x4b8>
    513c:	cmp	r4, r5
    5140:	moveq	ip, #1
    5144:	movne	ip, #0
    5148:	b	5150 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x4bc>
    514c:	mov	ip, #1
    5150:	cmp	ip, #0
    5154:	bne	5208 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    5158:	ldrb	ip, [sp, #43]	; 0x2b
    515c:	cmp	ip, #2
    5160:	bne	517c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x4e8>
    5164:	ldr	r0, [r6, #8]
    5168:	and	r3, r0, #2
    516c:	cmp	r3, #0
    5170:	movne	ip, #1
    5174:	moveq	ip, #0
    5178:	b	5180 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x4ec>
    517c:	mov	ip, #1
    5180:	cmp	ip, #0
    5184:	beq	51c4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    5188:	ldr	r0, [r6]
    518c:	mov	r1, #3
    5190:	mov	r2, #1
    5194:	mov	r3, #1
    5198:	bl	0 <flatcc_builder_table_add>
    519c:	cmp	r0, #0
    51a0:	beq	5208 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    51a4:	ldrb	r2, [sp, #43]	; 0x2b
    51a8:	and	r1, r2, #255	; 0xff
    51ac:	bl	20 <flatbuffers_uint8_write_to_pe>
    51b0:	b	51c4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    51b4:	mov	r2, r5
    51b8:	mov	r0, r6
    51bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    51c0:	mov	r4, r0
    51c4:	add	r3, sp, #44	; 0x2c
    51c8:	mov	r2, r5
    51cc:	mov	r1, r4
    51d0:	mov	r0, r6
    51d4:	bl	e5c <flatcc_json_parser_object_end>
    51d8:	mov	r4, r0
    51dc:	b	4d00 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6c>
    51e0:	ldr	r1, [r6, #24]
    51e4:	cmp	r1, #0
    51e8:	bne	5208 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    51ec:	ldr	r0, [r6]
    51f0:	bl	0 <flatcc_builder_end_table>
    51f4:	str	r0, [r7]
    51f8:	cmp	r0, #0
    51fc:	beq	5208 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    5200:	mov	r0, r4
    5204:	b	521c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x588>
    5208:	mov	r3, #33	; 0x21
    520c:	mov	r2, r5
    5210:	mov	r1, r4
    5214:	mov	r0, r6
    5218:	bl	0 <flatcc_json_parser_set_error>
    521c:	ldr	r4, [sp, #16]
    5220:	ldr	r5, [sp, #20]
    5224:	ldr	r6, [sp, #24]
    5228:	ldr	r7, [sp, #28]
    522c:	ldr	r8, [sp, #32]
    5230:	ldr	r9, [sp, #36]	; 0x24
    5234:	ldr	lr, [sp, #8]
    5238:	add	sp, sp, #48	; 0x30
    523c:	bx	lr
    5240:	.word	0x00000018
    5244:	.word	0x00000028
    5248:	.word	0x00000044
    524c:	.word	0x00000038

00005250 <MyGame_Example_Vec3_parse_json_struct_inline>:
    5250:	mov	ip, sp
    5254:	sub	sp, sp, #72	; 0x48
    5258:	str	ip, [sp, #4]
    525c:	str	lr, [sp, #8]
    5260:	str	r4, [sp, #16]
    5264:	str	r5, [sp, #20]
    5268:	str	r6, [sp, #24]
    526c:	str	r7, [sp, #28]
    5270:	str	r8, [sp, #32]
    5274:	str	r9, [sp, #36]	; 0x24
    5278:	mov	r7, r3
    527c:	mov	r5, r2
    5280:	mov	r6, r0
    5284:	add	r3, sp, #52	; 0x34
    5288:	mov	r2, r5
    528c:	mov	r0, r6
    5290:	bl	d7c <flatcc_json_parser_object_start>
    5294:	ldr	r1, [sp, #52]	; 0x34
    5298:	cmp	r1, #0
    529c:	beq	58b8 <MyGame_Example_Vec3_parse_json_struct_inline+0x668>
    52a0:	mov	r2, r5
    52a4:	mov	r1, r0
    52a8:	mov	r0, r6
    52ac:	bl	b90 <flatcc_json_parser_symbol_start>
    52b0:	mov	r4, r0
    52b4:	mov	r1, r5
    52b8:	mov	r0, r4
    52bc:	bl	cc0 <flatcc_json_parser_symbol_part>
    52c0:	mov	r3, r1
    52c4:	movw	ip, #29556	; 0x7374
    52c8:	movt	ip, #29797	; 0x7465
    52cc:	cmp	r3, ip
    52d0:	bne	52e8 <MyGame_Example_Vec3_parse_json_struct_inline+0x98>
    52d4:	mov	r2, r0
    52d8:	mov	r3, #855638016	; 0x33000000
    52dc:	cmp	r2, r3
    52e0:	bcc	5690 <MyGame_Example_Vec3_parse_json_struct_inline+0x440>
    52e4:	b	52f8 <MyGame_Example_Vec3_parse_json_struct_inline+0xa8>
    52e8:	movw	ip, #29556	; 0x7374
    52ec:	movt	ip, #29797	; 0x7465
    52f0:	cmp	r3, ip
    52f4:	bcc	5690 <MyGame_Example_Vec3_parse_json_struct_inline+0x440>
    52f8:	mov	r2, r1
    52fc:	mov	r3, #2013265920	; 0x78000000
    5300:	cmp	r2, r3
    5304:	bne	531c <MyGame_Example_Vec3_parse_json_struct_inline+0xcc>
    5308:	mov	r2, r0
    530c:	mov	r3, #0
    5310:	cmp	r2, r3
    5314:	bcc	5608 <MyGame_Example_Vec3_parse_json_struct_inline+0x3b8>
    5318:	b	5328 <MyGame_Example_Vec3_parse_json_struct_inline+0xd8>
    531c:	mov	r3, #2013265920	; 0x78000000
    5320:	cmp	r2, r3
    5324:	bcc	5608 <MyGame_Example_Vec3_parse_json_struct_inline+0x3b8>
    5328:	mov	r2, r1
    532c:	mov	ip, #2030043136	; 0x79000000
    5330:	cmp	r2, ip
    5334:	bne	5348 <MyGame_Example_Vec3_parse_json_struct_inline+0xf8>
    5338:	mov	r2, #0
    533c:	cmp	r0, r2
    5340:	bcc	551c <MyGame_Example_Vec3_parse_json_struct_inline+0x2cc>
    5344:	b	5354 <MyGame_Example_Vec3_parse_json_struct_inline+0x104>
    5348:	mov	r3, #2030043136	; 0x79000000
    534c:	cmp	r2, r3
    5350:	bcc	551c <MyGame_Example_Vec3_parse_json_struct_inline+0x2cc>
    5354:	mov	r0, r1
    5358:	and	r2, r0, #-16777216	; 0xff000000
    535c:	mov	ip, #0
    5360:	eor	r0, r2, #2046820352	; 0x7a000000
    5364:	orr	r2, r0, ip
    5368:	cmp	r2, #0
    536c:	beq	5460 <MyGame_Example_Vec3_parse_json_struct_inline+0x210>
    5370:	and	r2, r1, #-16777216	; 0xff000000
    5374:	mov	r0, #0
    5378:	eor	r1, r2, #2030043136	; 0x79000000
    537c:	orr	r3, r1, r0
    5380:	cmp	r3, #0
    5384:	bne	5448 <MyGame_Example_Vec3_parse_json_struct_inline+0x1f8>
    5388:	mov	r1, r4
    538c:	mov	r4, r1
    5390:	mov	r3, #1
    5394:	mov	r2, r5
    5398:	mov	r0, r6
    539c:	bl	118c <flatcc_json_parser_match_symbol>
    53a0:	mov	r1, r0
    53a4:	cmp	r4, r1
    53a8:	beq	5434 <MyGame_Example_Vec3_parse_json_struct_inline+0x1e4>
    53ac:	vldr	s10, [pc, #964]	; 5778 <MyGame_Example_Vec3_parse_json_struct_inline+0x528>
    53b0:	vstr	s10, [sp, #48]	; 0x30
    53b4:	add	r8, r7, #4
    53b8:	mov	r9, r1
    53bc:	add	r3, sp, #48	; 0x30
    53c0:	mov	r2, r5
    53c4:	mov	r0, r6
    53c8:	bl	0 <flatcc_json_parser_float>
    53cc:	mov	r4, r0
    53d0:	cmp	r9, r4
    53d4:	bne	5420 <MyGame_Example_Vec3_parse_json_struct_inline+0x1d0>
    53d8:	mov	r9, r4
    53dc:	ldr	r3, [pc, #904]	; 576c <MyGame_Example_Vec3_parse_json_struct_inline+0x51c>
    53e0:	add	r0, sp, #48	; 0x30
    53e4:	str	r0, [sp]
    53e8:	mov	r2, r5
    53ec:	mov	r1, r4
    53f0:	mov	r0, r6
    53f4:	bl	31e4 <flatcc_json_parser_symbolic_float>
    53f8:	mov	r4, r0
    53fc:	cmp	r4, r9
    5400:	beq	5414 <MyGame_Example_Vec3_parse_json_struct_inline+0x1c4>
    5404:	cmp	r4, r5
    5408:	moveq	r2, #1
    540c:	movne	r2, #0
    5410:	b	5418 <MyGame_Example_Vec3_parse_json_struct_inline+0x1c8>
    5414:	mov	r2, #1
    5418:	cmp	r2, #0
    541c:	bne	5860 <MyGame_Example_Vec3_parse_json_struct_inline+0x610>
    5420:	vldr	s0, [sp, #48]	; 0x30
    5424:	mov	r0, r8
    5428:	vmov.f32	s0, s0
    542c:	bl	3fc <flatbuffers_float_write_to_pe>
    5430:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    5434:	mov	r2, r5
    5438:	mov	r0, r6
    543c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5440:	mov	r4, r0
    5444:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    5448:	mov	r2, r5
    544c:	mov	r1, r4
    5450:	mov	r0, r6
    5454:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5458:	mov	r4, r0
    545c:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    5460:	mov	r3, #1
    5464:	mov	r2, r5
    5468:	mov	r1, r4
    546c:	mov	r0, r6
    5470:	bl	118c <flatcc_json_parser_match_symbol>
    5474:	mov	r1, r0
    5478:	cmp	r4, r1
    547c:	beq	5508 <MyGame_Example_Vec3_parse_json_struct_inline+0x2b8>
    5480:	vldr	s0, [pc, #752]	; 5778 <MyGame_Example_Vec3_parse_json_struct_inline+0x528>
    5484:	vstr	s0, [sp, #44]	; 0x2c
    5488:	add	r9, r7, #8
    548c:	mov	r8, r1
    5490:	add	r3, sp, #44	; 0x2c
    5494:	mov	r2, r5
    5498:	mov	r0, r6
    549c:	bl	0 <flatcc_json_parser_float>
    54a0:	mov	r4, r0
    54a4:	cmp	r8, r4
    54a8:	bne	54f4 <MyGame_Example_Vec3_parse_json_struct_inline+0x2a4>
    54ac:	mov	r8, r4
    54b0:	ldr	r3, [pc, #688]	; 5768 <MyGame_Example_Vec3_parse_json_struct_inline+0x518>
    54b4:	add	r2, sp, #44	; 0x2c
    54b8:	str	r2, [sp]
    54bc:	mov	r2, r5
    54c0:	mov	r1, r8
    54c4:	mov	r0, r6
    54c8:	bl	31e4 <flatcc_json_parser_symbolic_float>
    54cc:	mov	r4, r0
    54d0:	cmp	r4, r8
    54d4:	beq	54e8 <MyGame_Example_Vec3_parse_json_struct_inline+0x298>
    54d8:	cmp	r4, r5
    54dc:	moveq	r0, #1
    54e0:	movne	r0, #0
    54e4:	b	54ec <MyGame_Example_Vec3_parse_json_struct_inline+0x29c>
    54e8:	mov	r0, #1
    54ec:	cmp	r0, #0
    54f0:	bne	5860 <MyGame_Example_Vec3_parse_json_struct_inline+0x610>
    54f4:	vldr	s0, [sp, #44]	; 0x2c
    54f8:	mov	r0, r9
    54fc:	vmov.f32	s0, s0
    5500:	bl	3fc <flatbuffers_float_write_to_pe>
    5504:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    5508:	mov	r2, r5
    550c:	mov	r0, r6
    5510:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5514:	mov	r4, r0
    5518:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    551c:	and	r0, r1, #-16777216	; 0xff000000
    5520:	mov	r1, #0
    5524:	eor	r3, r0, #2013265920	; 0x78000000
    5528:	orr	ip, r3, r1
    552c:	cmp	ip, #0
    5530:	bne	55f0 <MyGame_Example_Vec3_parse_json_struct_inline+0x3a0>
    5534:	mov	r3, #1
    5538:	mov	r2, r5
    553c:	mov	r1, r4
    5540:	mov	r0, r6
    5544:	bl	118c <flatcc_json_parser_match_symbol>
    5548:	cmp	r4, r0
    554c:	beq	55d8 <MyGame_Example_Vec3_parse_json_struct_inline+0x388>
    5550:	vldr	s2, [pc, #544]	; 5778 <MyGame_Example_Vec3_parse_json_struct_inline+0x528>
    5554:	vstr	s2, [sp, #56]	; 0x38
    5558:	mov	r8, r0
    555c:	add	r3, sp, #56	; 0x38
    5560:	mov	r2, r5
    5564:	mov	r1, r8
    5568:	mov	r0, r6
    556c:	bl	0 <flatcc_json_parser_float>
    5570:	mov	r4, r0
    5574:	cmp	r8, r4
    5578:	bne	55c4 <MyGame_Example_Vec3_parse_json_struct_inline+0x374>
    557c:	mov	r8, r4
    5580:	ldr	r3, [pc, #488]	; 5770 <MyGame_Example_Vec3_parse_json_struct_inline+0x520>
    5584:	add	ip, sp, #56	; 0x38
    5588:	str	ip, [sp]
    558c:	mov	r2, r5
    5590:	mov	r1, r8
    5594:	mov	r0, r6
    5598:	bl	31e4 <flatcc_json_parser_symbolic_float>
    559c:	mov	r4, r0
    55a0:	cmp	r4, r8
    55a4:	beq	55b8 <MyGame_Example_Vec3_parse_json_struct_inline+0x368>
    55a8:	cmp	r4, r5
    55ac:	moveq	r2, #1
    55b0:	movne	r2, #0
    55b4:	b	55bc <MyGame_Example_Vec3_parse_json_struct_inline+0x36c>
    55b8:	mov	r2, #1
    55bc:	cmp	r2, #0
    55c0:	bne	5860 <MyGame_Example_Vec3_parse_json_struct_inline+0x610>
    55c4:	vldr	s0, [sp, #56]	; 0x38
    55c8:	mov	r0, r7
    55cc:	vmov.f32	s0, s0
    55d0:	bl	3fc <flatbuffers_float_write_to_pe>
    55d4:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    55d8:	mov	r2, r5
    55dc:	mov	r1, r0
    55e0:	mov	r0, r6
    55e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    55e8:	mov	r4, r0
    55ec:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    55f0:	mov	r2, r5
    55f4:	mov	r1, r4
    55f8:	mov	r0, r6
    55fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5600:	mov	r4, r0
    5604:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    5608:	and	ip, r0, #-16777216	; 0xff000000
    560c:	eor	r2, r1, #884	; 0x374
    5610:	eor	r2, r2, #356352	; 0x57000
    5614:	eor	r2, r2, #73400320	; 0x4600000
    5618:	eor	r2, r2, #1879048192	; 0x70000000
    561c:	eor	r0, ip, #855638016	; 0x33000000
    5620:	orr	r1, r2, r0
    5624:	cmp	r1, #0
    5628:	bne	5678 <MyGame_Example_Vec3_parse_json_struct_inline+0x428>
    562c:	mov	r3, #5
    5630:	mov	r2, r5
    5634:	mov	r1, r4
    5638:	mov	r0, r6
    563c:	bl	118c <flatcc_json_parser_match_symbol>
    5640:	mov	r1, r0
    5644:	cmp	r4, r1
    5648:	beq	5664 <MyGame_Example_Vec3_parse_json_struct_inline+0x414>
    564c:	add	r3, r7, #26
    5650:	mov	r2, r5
    5654:	mov	r0, r6
    5658:	bl	4928 <MyGame_Example_Test_parse_json_struct_inline>
    565c:	mov	r4, r0
    5660:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    5664:	mov	r2, r5
    5668:	mov	r0, r6
    566c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5670:	mov	r4, r0
    5674:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    5678:	mov	r2, r5
    567c:	mov	r1, r4
    5680:	mov	r0, r6
    5684:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5688:	mov	r4, r0
    568c:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    5690:	mov	ip, r1
    5694:	mov	r2, r0
    5698:	and	r2, r2, #-16777216	; 0xff000000
    569c:	eor	ip, ip, #884	; 0x374
    56a0:	eor	ip, ip, #356352	; 0x57000
    56a4:	eor	ip, ip, #73400320	; 0x4600000
    56a8:	eor	ip, ip, #1879048192	; 0x70000000
    56ac:	eor	r3, r2, #838860800	; 0x32000000
    56b0:	orr	r3, ip, r3
    56b4:	cmp	r3, #0
    56b8:	beq	57cc <MyGame_Example_Vec3_parse_json_struct_inline+0x57c>
    56bc:	and	r2, r0, #-16777216	; 0xff000000
    56c0:	eor	ip, r1, #884	; 0x374
    56c4:	eor	ip, ip, #356352	; 0x57000
    56c8:	eor	ip, ip, #73400320	; 0x4600000
    56cc:	eor	ip, ip, #1879048192	; 0x70000000
    56d0:	eor	r3, r2, #822083584	; 0x31000000
    56d4:	orr	r1, ip, r3
    56d8:	cmp	r1, #0
    56dc:	bne	57b4 <MyGame_Example_Vec3_parse_json_struct_inline+0x564>
    56e0:	mov	r3, #5
    56e4:	mov	r2, r5
    56e8:	mov	r1, r4
    56ec:	mov	r0, r6
    56f0:	bl	118c <flatcc_json_parser_match_symbol>
    56f4:	mov	r1, r0
    56f8:	cmp	r4, r1
    56fc:	beq	57a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x550>
    5700:	vldr	d7, [pc, #116]	; 577c <MyGame_Example_Vec3_parse_json_struct_inline+0x52c>
    5704:	vstr	d7, [sp, #64]	; 0x40
    5708:	add	r9, r7, #16
    570c:	mov	r8, r1
    5710:	add	r3, sp, #64	; 0x40
    5714:	mov	r2, r5
    5718:	mov	r0, r6
    571c:	bl	0 <flatcc_json_parser_double>
    5720:	mov	r4, r0
    5724:	cmp	r8, r4
    5728:	bne	5790 <MyGame_Example_Vec3_parse_json_struct_inline+0x540>
    572c:	mov	r8, r4
    5730:	ldr	r3, [pc, #60]	; 5774 <MyGame_Example_Vec3_parse_json_struct_inline+0x524>
    5734:	add	r2, sp, #64	; 0x40
    5738:	str	r2, [sp]
    573c:	mov	r2, r5
    5740:	mov	r1, r8
    5744:	mov	r0, r6
    5748:	bl	33b4 <flatcc_json_parser_symbolic_double>
    574c:	mov	r4, r0
    5750:	cmp	r4, r8
    5754:	beq	5784 <MyGame_Example_Vec3_parse_json_struct_inline+0x534>
    5758:	cmp	r4, r5
    575c:	moveq	r2, #1
    5760:	movne	r2, #0
    5764:	b	5788 <MyGame_Example_Vec3_parse_json_struct_inline+0x538>
    5768:	.word	0x00000078
    576c:	.word	0x00000084
    5770:	.word	0x0000006c
    5774:	.word	0x00000060
	...
    5784:	mov	r2, #1
    5788:	cmp	r2, #0
    578c:	bne	5860 <MyGame_Example_Vec3_parse_json_struct_inline+0x610>
    5790:	vldr	d0, [sp, #64]	; 0x40
    5794:	mov	r0, r9
    5798:	bl	4bc <flatbuffers_double_write_to_pe>
    579c:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    57a0:	mov	r2, r5
    57a4:	mov	r0, r6
    57a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    57ac:	mov	r4, r0
    57b0:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    57b4:	mov	r2, r5
    57b8:	mov	r1, r4
    57bc:	mov	r0, r6
    57c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    57c4:	mov	r4, r0
    57c8:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    57cc:	mov	r3, #5
    57d0:	mov	r2, r5
    57d4:	mov	r1, r4
    57d8:	mov	r0, r6
    57dc:	bl	118c <flatcc_json_parser_match_symbol>
    57e0:	mov	r8, r0
    57e4:	cmp	r4, r8
    57e8:	beq	588c <MyGame_Example_Vec3_parse_json_struct_inline+0x63c>
    57ec:	mov	r1, #0
    57f0:	strb	r1, [sp, #40]	; 0x28
    57f4:	add	r9, r7, #24
    57f8:	add	r3, sp, #40	; 0x28
    57fc:	mov	r2, r5
    5800:	mov	r1, r8
    5804:	mov	r0, r6
    5808:	bl	1f84 <flatcc_json_parser_int8>
    580c:	mov	r4, r0
    5810:	cmp	r8, r4
    5814:	bne	5878 <MyGame_Example_Vec3_parse_json_struct_inline+0x628>
    5818:	mov	r1, r4
    581c:	mov	r8, r1
    5820:	ldr	r3, [pc, #180]	; 58dc <MyGame_Example_Vec3_parse_json_struct_inline+0x68c>
    5824:	add	r2, sp, #40	; 0x28
    5828:	str	r2, [sp]
    582c:	mov	r2, r5
    5830:	mov	r0, r6
    5834:	bl	2e44 <flatcc_json_parser_symbolic_int8>
    5838:	mov	r4, r0
    583c:	cmp	r4, r8
    5840:	beq	5854 <MyGame_Example_Vec3_parse_json_struct_inline+0x604>
    5844:	cmp	r4, r5
    5848:	moveq	r0, #1
    584c:	movne	r0, #0
    5850:	b	5858 <MyGame_Example_Vec3_parse_json_struct_inline+0x608>
    5854:	mov	r0, #1
    5858:	cmp	r0, #0
    585c:	beq	5878 <MyGame_Example_Vec3_parse_json_struct_inline+0x628>
    5860:	mov	r3, #33	; 0x21
    5864:	mov	r2, r5
    5868:	mov	r1, r4
    586c:	mov	r0, r6
    5870:	bl	0 <flatcc_json_parser_set_error>
    5874:	b	58b8 <MyGame_Example_Vec3_parse_json_struct_inline+0x668>
    5878:	ldrsb	r2, [sp, #40]	; 0x28
    587c:	sbfx	r1, r2, #0, #8
    5880:	mov	r0, r9
    5884:	bl	1e0 <flatbuffers_int8_write_to_pe>
    5888:	b	58a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    588c:	mov	r2, r5
    5890:	mov	r1, r8
    5894:	mov	r0, r6
    5898:	bl	0 <flatcc_json_parser_unmatched_symbol>
    589c:	mov	r4, r0
    58a0:	add	r3, sp, #52	; 0x34
    58a4:	mov	r2, r5
    58a8:	mov	r1, r4
    58ac:	mov	r0, r6
    58b0:	bl	e5c <flatcc_json_parser_object_end>
    58b4:	b	5294 <MyGame_Example_Vec3_parse_json_struct_inline+0x44>
    58b8:	ldr	r4, [sp, #16]
    58bc:	ldr	r5, [sp, #20]
    58c0:	ldr	r6, [sp, #24]
    58c4:	ldr	r7, [sp, #28]
    58c8:	ldr	r8, [sp, #32]
    58cc:	ldr	r9, [sp, #36]	; 0x24
    58d0:	ldr	lr, [sp, #8]
    58d4:	add	sp, sp, #72	; 0x48
    58d8:	bx	lr
    58dc:	.word	0x00000050

000058e0 <MyGame_Example_Ability_parse_json_struct_inline>:
    58e0:	mov	ip, sp
    58e4:	sub	sp, sp, #56	; 0x38
    58e8:	str	ip, [sp, #4]
    58ec:	str	lr, [sp, #8]
    58f0:	str	r4, [sp, #16]
    58f4:	str	r5, [sp, #20]
    58f8:	str	r6, [sp, #24]
    58fc:	str	r7, [sp, #28]
    5900:	str	r8, [sp, #32]
    5904:	str	r9, [sp, #36]	; 0x24
    5908:	mov	r7, r3
    590c:	mov	r5, r2
    5910:	mov	r6, r0
    5914:	add	r3, sp, #44	; 0x2c
    5918:	mov	r2, r5
    591c:	mov	r0, r6
    5920:	bl	d7c <flatcc_json_parser_object_start>
    5924:	mov	r1, r0
    5928:	ldr	r3, [sp, #44]	; 0x2c
    592c:	cmp	r3, #0
    5930:	beq	5b58 <MyGame_Example_Ability_parse_json_struct_inline+0x278>
    5934:	mov	r2, r5
    5938:	mov	r0, r6
    593c:	bl	b90 <flatcc_json_parser_symbol_start>
    5940:	mov	r4, r0
    5944:	mov	r1, r5
    5948:	mov	r0, r4
    594c:	bl	cc0 <flatcc_json_parser_symbol_part>
    5950:	mov	r2, r1
    5954:	bic	r2, r2, #255	; 0xff
    5958:	bic	r2, r2, #65280	; 0xff00
    595c:	mov	ip, #0
    5960:	eor	r2, r2, #23330816	; 0x1640000
    5964:	eor	r2, r2, #1744830464	; 0x68000000
    5968:	orr	ip, r2, ip
    596c:	cmp	ip, #0
    5970:	beq	5a74 <MyGame_Example_Ability_parse_json_struct_inline+0x194>
    5974:	eor	r3, r1, #884	; 0x374
    5978:	eor	r3, r3, #618496	; 0x97000
    597c:	eor	r3, r3, #73400320	; 0x4600000
    5980:	eor	r3, r3, #1610612736	; 0x60000000
    5984:	eor	r0, r0, #101	; 0x65
    5988:	eor	r0, r0, #25344	; 0x6300
    598c:	eor	r0, r0, #7208960	; 0x6e0000
    5990:	eor	r0, r0, #1627389952	; 0x61000000
    5994:	orr	r1, r3, r0
    5998:	cmp	r1, #0
    599c:	bne	5a5c <MyGame_Example_Ability_parse_json_struct_inline+0x17c>
    59a0:	mov	r1, r4
    59a4:	mov	r4, r1
    59a8:	mov	r3, #8
    59ac:	mov	r2, r5
    59b0:	mov	r0, r6
    59b4:	bl	118c <flatcc_json_parser_match_symbol>
    59b8:	mov	r1, r0
    59bc:	cmp	r4, r1
    59c0:	beq	5a48 <MyGame_Example_Ability_parse_json_struct_inline+0x168>
    59c4:	mov	r2, #0
    59c8:	str	r2, [sp, #40]	; 0x28
    59cc:	add	r8, r7, #4
    59d0:	mov	r9, r1
    59d4:	add	r3, sp, #40	; 0x28
    59d8:	mov	r2, r5
    59dc:	mov	r0, r6
    59e0:	bl	1ae4 <flatcc_json_parser_uint32>
    59e4:	mov	r4, r0
    59e8:	cmp	r9, r4
    59ec:	bne	5a38 <MyGame_Example_Ability_parse_json_struct_inline+0x158>
    59f0:	mov	r9, r4
    59f4:	ldr	r3, [pc, #388]	; 5b80 <MyGame_Example_Ability_parse_json_struct_inline+0x2a0>
    59f8:	add	r0, sp, #40	; 0x28
    59fc:	str	r0, [sp]
    5a00:	mov	r2, r5
    5a04:	mov	r1, r4
    5a08:	mov	r0, r6
    5a0c:	bl	2348 <flatcc_json_parser_symbolic_uint32>
    5a10:	mov	r4, r0
    5a14:	cmp	r4, r9
    5a18:	beq	5a2c <MyGame_Example_Ability_parse_json_struct_inline+0x14c>
    5a1c:	cmp	r4, r5
    5a20:	moveq	r3, #1
    5a24:	movne	r3, #0
    5a28:	b	5a30 <MyGame_Example_Ability_parse_json_struct_inline+0x150>
    5a2c:	mov	r3, #1
    5a30:	cmp	r3, #0
    5a34:	bne	5b04 <MyGame_Example_Ability_parse_json_struct_inline+0x224>
    5a38:	ldr	r1, [sp, #40]	; 0x28
    5a3c:	mov	r0, r8
    5a40:	bl	d8 <flatbuffers_uint32_write_to_pe>
    5a44:	b	5b3c <MyGame_Example_Ability_parse_json_struct_inline+0x25c>
    5a48:	mov	r2, r5
    5a4c:	mov	r0, r6
    5a50:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5a54:	mov	r4, r0
    5a58:	b	5b3c <MyGame_Example_Ability_parse_json_struct_inline+0x25c>
    5a5c:	mov	r2, r5
    5a60:	mov	r1, r4
    5a64:	mov	r0, r6
    5a68:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5a6c:	mov	r4, r0
    5a70:	b	5b3c <MyGame_Example_Ability_parse_json_struct_inline+0x25c>
    5a74:	mov	r3, #2
    5a78:	mov	r2, r5
    5a7c:	mov	r1, r4
    5a80:	mov	r0, r6
    5a84:	bl	118c <flatcc_json_parser_match_symbol>
    5a88:	mov	r1, r0
    5a8c:	cmp	r4, r1
    5a90:	beq	5b2c <MyGame_Example_Ability_parse_json_struct_inline+0x24c>
    5a94:	mov	ip, #0
    5a98:	str	ip, [sp, #48]	; 0x30
    5a9c:	mov	r8, r1
    5aa0:	add	r3, sp, #48	; 0x30
    5aa4:	mov	r2, r5
    5aa8:	mov	r0, r6
    5aac:	bl	1ae4 <flatcc_json_parser_uint32>
    5ab0:	mov	r4, r0
    5ab4:	cmp	r8, r4
    5ab8:	bne	5b1c <MyGame_Example_Ability_parse_json_struct_inline+0x23c>
    5abc:	mov	r8, r4
    5ac0:	ldr	r3, [pc, #188]	; 5b84 <MyGame_Example_Ability_parse_json_struct_inline+0x2a4>
    5ac4:	add	r0, sp, #48	; 0x30
    5ac8:	str	r0, [sp]
    5acc:	mov	r2, r5
    5ad0:	mov	r1, r8
    5ad4:	mov	r0, r6
    5ad8:	bl	2348 <flatcc_json_parser_symbolic_uint32>
    5adc:	mov	r4, r0
    5ae0:	cmp	r4, r8
    5ae4:	beq	5af8 <MyGame_Example_Ability_parse_json_struct_inline+0x218>
    5ae8:	cmp	r4, r5
    5aec:	moveq	r0, #1
    5af0:	movne	r0, #0
    5af4:	b	5afc <MyGame_Example_Ability_parse_json_struct_inline+0x21c>
    5af8:	mov	r0, #1
    5afc:	cmp	r0, #0
    5b00:	beq	5b1c <MyGame_Example_Ability_parse_json_struct_inline+0x23c>
    5b04:	mov	r3, #33	; 0x21
    5b08:	mov	r2, r5
    5b0c:	mov	r1, r4
    5b10:	mov	r0, r6
    5b14:	bl	0 <flatcc_json_parser_set_error>
    5b18:	b	5b5c <MyGame_Example_Ability_parse_json_struct_inline+0x27c>
    5b1c:	ldr	r1, [sp, #48]	; 0x30
    5b20:	mov	r0, r7
    5b24:	bl	d8 <flatbuffers_uint32_write_to_pe>
    5b28:	b	5b3c <MyGame_Example_Ability_parse_json_struct_inline+0x25c>
    5b2c:	mov	r2, r5
    5b30:	mov	r0, r6
    5b34:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5b38:	mov	r4, r0
    5b3c:	add	r3, sp, #44	; 0x2c
    5b40:	mov	r2, r5
    5b44:	mov	r1, r4
    5b48:	mov	r0, r6
    5b4c:	bl	e5c <flatcc_json_parser_object_end>
    5b50:	mov	r1, r0
    5b54:	b	5928 <MyGame_Example_Ability_parse_json_struct_inline+0x48>
    5b58:	mov	r0, r1
    5b5c:	ldr	r4, [sp, #16]
    5b60:	ldr	r5, [sp, #20]
    5b64:	ldr	r6, [sp, #24]
    5b68:	ldr	r7, [sp, #28]
    5b6c:	ldr	r8, [sp, #32]
    5b70:	ldr	r9, [sp, #36]	; 0x24
    5b74:	ldr	lr, [sp, #8]
    5b78:	add	sp, sp, #56	; 0x38
    5b7c:	bx	lr
    5b80:	.word	0x0000009c
    5b84:	.word	0x00000090

00005b88 <MyGame_Example_Stat_parse_json_table>:
    5b88:	mov	ip, sp
    5b8c:	sub	sp, sp, #64	; 0x40
    5b90:	str	ip, [sp, #4]
    5b94:	str	lr, [sp, #8]
    5b98:	str	r4, [sp, #16]
    5b9c:	str	r5, [sp, #20]
    5ba0:	str	r6, [sp, #24]
    5ba4:	str	r7, [sp, #28]
    5ba8:	str	r8, [sp, #32]
    5bac:	str	r9, [sp, #36]	; 0x24
    5bb0:	mov	r9, r3
    5bb4:	mov	r5, r2
    5bb8:	mov	r4, r1
    5bbc:	mov	r6, r0
    5bc0:	mov	r3, #0
    5bc4:	str	r3, [r9]
    5bc8:	ldr	r0, [r6]
    5bcc:	mov	r1, #3
    5bd0:	bl	0 <flatcc_builder_start_table>
    5bd4:	cmp	r0, #0
    5bd8:	bne	5fe0 <MyGame_Example_Stat_parse_json_table+0x458>
    5bdc:	add	r3, sp, #44	; 0x2c
    5be0:	mov	r2, r5
    5be4:	mov	r1, r4
    5be8:	mov	r0, r6
    5bec:	bl	d7c <flatcc_json_parser_object_start>
    5bf0:	mov	r4, r0
    5bf4:	ldr	ip, [sp, #44]	; 0x2c
    5bf8:	cmp	ip, #0
    5bfc:	beq	5fb8 <MyGame_Example_Stat_parse_json_table+0x430>
    5c00:	mov	r2, r5
    5c04:	mov	r1, r4
    5c08:	mov	r0, r6
    5c0c:	bl	b90 <flatcc_json_parser_symbol_start>
    5c10:	mov	r4, r0
    5c14:	mov	r1, r5
    5c18:	mov	r0, r4
    5c1c:	bl	cc0 <flatcc_json_parser_symbol_part>
    5c20:	mov	r2, r1
    5c24:	movw	r3, #0
    5c28:	movt	r3, #26980	; 0x6964
    5c2c:	cmp	r2, r3
    5c30:	bne	5c48 <MyGame_Example_Stat_parse_json_table+0xc0>
    5c34:	mov	r2, r0
    5c38:	mov	ip, #0
    5c3c:	cmp	r2, ip
    5c40:	bcc	5e60 <MyGame_Example_Stat_parse_json_table+0x2d8>
    5c44:	b	5c5c <MyGame_Example_Stat_parse_json_table+0xd4>
    5c48:	mov	r2, r1
    5c4c:	movw	r3, #0
    5c50:	movt	r3, #26980	; 0x6964
    5c54:	cmp	r2, r3
    5c58:	bcc	5e60 <MyGame_Example_Stat_parse_json_table+0x2d8>
    5c5c:	mov	r2, r1
    5c60:	bic	ip, r2, #255	; 0xff
    5c64:	mov	r3, #0
    5c68:	eor	ip, ip, #93184	; 0x16c00
    5c6c:	eor	ip, ip, #106954752	; 0x6600000
    5c70:	eor	ip, ip, #1879048192	; 0x70000000
    5c74:	orr	r3, ip, r3
    5c78:	cmp	r3, #0
    5c7c:	bne	5d98 <MyGame_Example_Stat_parse_json_table+0x210>
    5c80:	mov	r1, r4
    5c84:	mov	r4, r1
    5c88:	mov	r3, #3
    5c8c:	mov	r2, r5
    5c90:	mov	r0, r6
    5c94:	bl	118c <flatcc_json_parser_match_symbol>
    5c98:	mov	r1, r0
    5c9c:	cmp	r4, r1
    5ca0:	beq	5d84 <MyGame_Example_Stat_parse_json_table+0x1fc>
    5ca4:	mov	r2, #0
    5ca8:	mov	r0, #0
    5cac:	str	r0, [sp, #56]	; 0x38
    5cb0:	str	r2, [sp, #60]	; 0x3c
    5cb4:	mov	r7, r1
    5cb8:	add	r3, sp, #56	; 0x38
    5cbc:	mov	r2, r5
    5cc0:	mov	r1, r7
    5cc4:	mov	r0, r6
    5cc8:	bl	1d30 <flatcc_json_parser_int64>
    5ccc:	mov	r4, r0
    5cd0:	cmp	r7, r4
    5cd4:	bne	5d20 <MyGame_Example_Stat_parse_json_table+0x198>
    5cd8:	mov	r7, r4
    5cdc:	ldr	r3, [pc, #824]	; 601c <MyGame_Example_Stat_parse_json_table+0x494>
    5ce0:	add	ip, sp, #56	; 0x38
    5ce4:	str	ip, [sp]
    5ce8:	mov	r2, r5
    5cec:	mov	r1, r7
    5cf0:	mov	r0, r6
    5cf4:	bl	28b8 <flatcc_json_parser_symbolic_int64>
    5cf8:	mov	r4, r0
    5cfc:	cmp	r4, r7
    5d00:	beq	5d14 <MyGame_Example_Stat_parse_json_table+0x18c>
    5d04:	cmp	r4, r5
    5d08:	moveq	ip, #1
    5d0c:	movne	ip, #0
    5d10:	b	5d18 <MyGame_Example_Stat_parse_json_table+0x190>
    5d14:	mov	ip, #1
    5d18:	cmp	ip, #0
    5d1c:	bne	5fe0 <MyGame_Example_Stat_parse_json_table+0x458>
    5d20:	ldr	r3, [sp, #56]	; 0x38
    5d24:	ldr	r0, [sp, #60]	; 0x3c
    5d28:	orr	r0, r0, r3
    5d2c:	cmp	r0, #0
    5d30:	bne	5d4c <MyGame_Example_Stat_parse_json_table+0x1c4>
    5d34:	ldr	ip, [r6, #8]
    5d38:	and	r0, ip, #2
    5d3c:	cmp	r0, #0
    5d40:	movne	r0, #1
    5d44:	moveq	r0, #0
    5d48:	b	5d50 <MyGame_Example_Stat_parse_json_table+0x1c8>
    5d4c:	mov	r0, #1
    5d50:	cmp	r0, #0
    5d54:	beq	5f9c <MyGame_Example_Stat_parse_json_table+0x414>
    5d58:	ldr	r0, [r6]
    5d5c:	mov	r1, #1
    5d60:	mov	r2, #8
    5d64:	mov	r3, #8
    5d68:	bl	0 <flatcc_builder_table_add>
    5d6c:	cmp	r0, #0
    5d70:	beq	5fe0 <MyGame_Example_Stat_parse_json_table+0x458>
    5d74:	ldr	r2, [sp, #56]	; 0x38
    5d78:	ldr	r3, [sp, #60]	; 0x3c
    5d7c:	bl	340 <flatbuffers_int64_write_to_pe>
    5d80:	b	5f9c <MyGame_Example_Stat_parse_json_table+0x414>
    5d84:	mov	r2, r5
    5d88:	mov	r0, r6
    5d8c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5d90:	mov	r4, r0
    5d94:	b	5f9c <MyGame_Example_Stat_parse_json_table+0x414>
    5d98:	bic	r0, r1, #255	; 0xff
    5d9c:	bic	r0, r0, #65280	; 0xff00
    5da0:	mov	ip, #0
    5da4:	eor	r0, r0, #23330816	; 0x1640000
    5da8:	eor	r0, r0, #1744830464	; 0x68000000
    5dac:	orr	r0, r0, ip
    5db0:	cmp	r0, #0
    5db4:	bne	5e48 <MyGame_Example_Stat_parse_json_table+0x2c0>
    5db8:	mov	r1, r4
    5dbc:	mov	r4, r1
    5dc0:	mov	r3, #2
    5dc4:	mov	r2, r5
    5dc8:	mov	r0, r6
    5dcc:	bl	118c <flatcc_json_parser_match_symbol>
    5dd0:	mov	r1, r0
    5dd4:	cmp	r4, r1
    5dd8:	beq	5e34 <MyGame_Example_Stat_parse_json_table+0x2ac>
    5ddc:	add	r3, sp, #48	; 0x30
    5de0:	mov	r2, r5
    5de4:	mov	r0, r6
    5de8:	bl	0 <flatcc_json_parser_build_string>
    5dec:	mov	r4, r0
    5df0:	ldr	ip, [sp, #48]	; 0x30
    5df4:	cmp	ip, #0
    5df8:	beq	5e1c <MyGame_Example_Stat_parse_json_table+0x294>
    5dfc:	ldr	r0, [r6]
    5e00:	mov	r1, #0
    5e04:	bl	0 <flatcc_builder_table_add_offset>
    5e08:	mov	r8, r0
    5e0c:	cmp	r8, #0
    5e10:	moveq	r1, #1
    5e14:	movne	r1, #0
    5e18:	b	5e20 <MyGame_Example_Stat_parse_json_table+0x298>
    5e1c:	mov	r1, #1
    5e20:	cmp	r1, #0
    5e24:	bne	5fe0 <MyGame_Example_Stat_parse_json_table+0x458>
    5e28:	ldr	r1, [sp, #48]	; 0x30
    5e2c:	str	r1, [r8]
    5e30:	b	5f9c <MyGame_Example_Stat_parse_json_table+0x414>
    5e34:	mov	r2, r5
    5e38:	mov	r0, r6
    5e3c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5e40:	mov	r4, r0
    5e44:	b	5f9c <MyGame_Example_Stat_parse_json_table+0x414>
    5e48:	mov	r2, r5
    5e4c:	mov	r1, r4
    5e50:	mov	r0, r6
    5e54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5e58:	mov	r4, r0
    5e5c:	b	5f9c <MyGame_Example_Stat_parse_json_table+0x414>
    5e60:	and	r3, r0, #-16777216	; 0xff000000
    5e64:	eor	r2, r1, #110	; 0x6e
    5e68:	eor	r2, r2, #29952	; 0x7500
    5e6c:	eor	r2, r2, #7274496	; 0x6f0000
    5e70:	eor	r2, r2, #1660944384	; 0x63000000
    5e74:	eor	r1, r3, #1946157056	; 0x74000000
    5e78:	orr	r2, r2, r1
    5e7c:	cmp	r2, #0
    5e80:	bne	5f88 <MyGame_Example_Stat_parse_json_table+0x400>
    5e84:	mov	r3, #5
    5e88:	mov	r2, r5
    5e8c:	mov	r1, r4
    5e90:	mov	r0, r6
    5e94:	bl	118c <flatcc_json_parser_match_symbol>
    5e98:	mov	r1, r0
    5e9c:	cmp	r4, r1
    5ea0:	beq	5f74 <MyGame_Example_Stat_parse_json_table+0x3ec>
    5ea4:	mov	r2, #0
    5ea8:	strh	r2, [sp, #40]	; 0x28
    5eac:	mov	r7, r1
    5eb0:	add	r3, sp, #40	; 0x28
    5eb4:	mov	r2, r5
    5eb8:	mov	r0, r6
    5ebc:	bl	1ba8 <flatcc_json_parser_uint16>
    5ec0:	mov	r4, r0
    5ec4:	cmp	r7, r4
    5ec8:	bne	5f14 <MyGame_Example_Stat_parse_json_table+0x38c>
    5ecc:	mov	r1, r4
    5ed0:	mov	r7, r1
    5ed4:	ldr	r3, [pc, #316]	; 6018 <MyGame_Example_Stat_parse_json_table+0x490>
    5ed8:	add	r0, sp, #40	; 0x28
    5edc:	str	r0, [sp]
    5ee0:	mov	r2, r5
    5ee4:	mov	r0, r6
    5ee8:	bl	2514 <flatcc_json_parser_symbolic_uint16>
    5eec:	mov	r4, r0
    5ef0:	cmp	r4, r7
    5ef4:	beq	5f08 <MyGame_Example_Stat_parse_json_table+0x380>
    5ef8:	cmp	r4, r5
    5efc:	moveq	r2, #1
    5f00:	movne	r2, #0
    5f04:	b	5f0c <MyGame_Example_Stat_parse_json_table+0x384>
    5f08:	mov	r2, #1
    5f0c:	cmp	r2, #0
    5f10:	bne	5fe0 <MyGame_Example_Stat_parse_json_table+0x458>
    5f14:	ldrh	r2, [sp, #40]	; 0x28
    5f18:	cmp	r2, #0
    5f1c:	bne	5f38 <MyGame_Example_Stat_parse_json_table+0x3b0>
    5f20:	ldr	r3, [r6, #8]
    5f24:	and	ip, r3, #2
    5f28:	cmp	ip, #0
    5f2c:	movne	r2, #1
    5f30:	moveq	r2, #0
    5f34:	b	5f3c <MyGame_Example_Stat_parse_json_table+0x3b4>
    5f38:	mov	r2, #1
    5f3c:	cmp	r2, #0
    5f40:	beq	5f9c <MyGame_Example_Stat_parse_json_table+0x414>
    5f44:	ldr	r0, [r6]
    5f48:	mov	r1, #2
    5f4c:	mov	r2, #2
    5f50:	mov	r3, #2
    5f54:	bl	0 <flatcc_builder_table_add>
    5f58:	cmp	r0, #0
    5f5c:	beq	5fe0 <MyGame_Example_Stat_parse_json_table+0x458>
    5f60:	ldrh	r2, [sp, #40]	; 0x28
    5f64:	bic	r1, r2, #16711680	; 0xff0000
    5f68:	bic	r1, r1, #-16777216	; 0xff000000
    5f6c:	bl	7c <flatbuffers_uint16_write_to_pe>
    5f70:	b	5f9c <MyGame_Example_Stat_parse_json_table+0x414>
    5f74:	mov	r2, r5
    5f78:	mov	r0, r6
    5f7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5f80:	mov	r4, r0
    5f84:	b	5f9c <MyGame_Example_Stat_parse_json_table+0x414>
    5f88:	mov	r2, r5
    5f8c:	mov	r1, r4
    5f90:	mov	r0, r6
    5f94:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5f98:	mov	r4, r0
    5f9c:	add	r3, sp, #44	; 0x2c
    5fa0:	mov	r2, r5
    5fa4:	mov	r1, r4
    5fa8:	mov	r0, r6
    5fac:	bl	e5c <flatcc_json_parser_object_end>
    5fb0:	mov	r4, r0
    5fb4:	b	5bf4 <MyGame_Example_Stat_parse_json_table+0x6c>
    5fb8:	ldr	ip, [r6, #24]
    5fbc:	cmp	ip, #0
    5fc0:	bne	5fe0 <MyGame_Example_Stat_parse_json_table+0x458>
    5fc4:	ldr	r0, [r6]
    5fc8:	bl	0 <flatcc_builder_end_table>
    5fcc:	str	r0, [r9]
    5fd0:	cmp	r0, #0
    5fd4:	beq	5fe0 <MyGame_Example_Stat_parse_json_table+0x458>
    5fd8:	mov	r0, r4
    5fdc:	b	5ff4 <MyGame_Example_Stat_parse_json_table+0x46c>
    5fe0:	mov	r3, #33	; 0x21
    5fe4:	mov	r2, r5
    5fe8:	mov	r1, r4
    5fec:	mov	r0, r6
    5ff0:	bl	0 <flatcc_json_parser_set_error>
    5ff4:	ldr	r4, [sp, #16]
    5ff8:	ldr	r5, [sp, #20]
    5ffc:	ldr	r6, [sp, #24]
    6000:	ldr	r7, [sp, #28]
    6004:	ldr	r8, [sp, #32]
    6008:	ldr	r9, [sp, #36]	; 0x24
    600c:	ldr	lr, [sp, #8]
    6010:	add	sp, sp, #64	; 0x40
    6014:	bx	lr
    6018:	.word	0x000000a8
    601c:	.word	0x000000b4

00006020 <MyGame_Example_Alt_parse_json_table>:
    6020:	mov	ip, sp
    6024:	sub	sp, sp, #80	; 0x50
    6028:	str	ip, [sp, #20]
    602c:	str	lr, [sp, #24]
    6030:	str	r4, [sp, #32]
    6034:	str	r5, [sp, #36]	; 0x24
    6038:	str	r6, [sp, #40]	; 0x28
    603c:	str	r7, [sp, #44]	; 0x2c
    6040:	str	r8, [sp, #48]	; 0x30
    6044:	str	r9, [sp, #52]	; 0x34
    6048:	str	sl, [sp, #56]	; 0x38
    604c:	str	fp, [sp, #60]	; 0x3c
    6050:	mov	r7, r3
    6054:	mov	sl, r2
    6058:	mov	r4, r1
    605c:	mov	r9, r0
    6060:	mov	r1, #0
    6064:	str	r1, [r7]
    6068:	ldr	r0, [r9]
    606c:	mov	r1, #4
    6070:	bl	0 <flatcc_builder_start_table>
    6074:	cmp	r0, #0
    6078:	bne	644c <MyGame_Example_Alt_parse_json_table+0x42c>
    607c:	mov	r3, #1
    6080:	add	ip, sp, #64	; 0x40
    6084:	str	ip, [sp]
    6088:	mov	r2, sl
    608c:	mov	r1, r4
    6090:	mov	r0, r9
    6094:	bl	0 <flatcc_json_parser_prepare_unions>
    6098:	cmp	sl, r0
    609c:	beq	644c <MyGame_Example_Alt_parse_json_table+0x42c>
    60a0:	add	r3, sp, #68	; 0x44
    60a4:	mov	r2, sl
    60a8:	mov	r1, r4
    60ac:	mov	r0, r9
    60b0:	bl	d7c <flatcc_json_parser_object_start>
    60b4:	mov	r4, r0
    60b8:	ldr	r3, [sp, #68]	; 0x44
    60bc:	cmp	r3, #0
    60c0:	beq	640c <MyGame_Example_Alt_parse_json_table+0x3ec>
    60c4:	mov	r2, sl
    60c8:	mov	r1, r4
    60cc:	mov	r0, r9
    60d0:	bl	b90 <flatcc_json_parser_symbol_start>
    60d4:	mov	r6, r0
    60d8:	mov	r1, sl
    60dc:	mov	r0, r6
    60e0:	bl	cc0 <flatcc_json_parser_symbol_part>
    60e4:	mov	r4, r1
    60e8:	mov	r8, r0
    60ec:	mov	r0, r4
    60f0:	eor	r2, r0, #121	; 0x79
    60f4:	eor	r2, r2, #28160	; 0x6e00
    60f8:	eor	r2, r2, #6356992	; 0x610000
    60fc:	eor	r2, r2, #1828716544	; 0x6d000000
    6100:	mov	r1, r8
    6104:	eor	r1, r1, #95	; 0x5f
    6108:	eor	r1, r1, #30976	; 0x7900
    610c:	eor	r1, r1, #7208960	; 0x6e0000
    6110:	eor	r1, r1, #1627389952	; 0x61000000
    6114:	orr	r0, r2, r1
    6118:	cmp	r0, #0
    611c:	beq	6334 <MyGame_Example_Alt_parse_json_table+0x314>
    6120:	mov	ip, r8
    6124:	mov	r3, r4
    6128:	bic	r1, ip, #255	; 0xff
    612c:	eor	r3, r3, #121	; 0x79
    6130:	eor	r3, r3, #28160	; 0x6e00
    6134:	eor	r3, r3, #6356992	; 0x610000
    6138:	eor	r3, r3, #1828716544	; 0x6d000000
    613c:	eor	r2, r1, #30976	; 0x7900
    6140:	eor	r2, r2, #7208960	; 0x6e0000
    6144:	eor	r2, r2, #1627389952	; 0x61000000
    6148:	orr	ip, r3, r2
    614c:	cmp	ip, #0
    6150:	bne	61ac <MyGame_Example_Alt_parse_json_table+0x18c>
    6154:	mov	fp, r6
    6158:	mov	r3, #7
    615c:	mov	r2, sl
    6160:	mov	r1, fp
    6164:	mov	r0, r9
    6168:	bl	118c <flatcc_json_parser_match_symbol>
    616c:	mov	r6, r0
    6170:	cmp	fp, r6
    6174:	beq	61ac <MyGame_Example_Alt_parse_json_table+0x18c>
    6178:	mov	r3, #0
    617c:	mov	r1, #3
    6180:	ldr	ip, [sp, #64]	; 0x40
    6184:	ldr	r0, [pc, #768]	; 648c <MyGame_Example_Alt_parse_json_table+0x46c>
    6188:	str	r0, [sp, #8]
    618c:	str	ip, [sp, #4]
    6190:	str	r1, [sp]
    6194:	mov	r2, sl
    6198:	mov	r1, r6
    619c:	mov	r0, r9
    61a0:	bl	0 <flatcc_json_parser_union_vector>
    61a4:	mov	r4, r0
    61a8:	b	63f0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    61ac:	mov	r3, r8
    61b0:	mov	r0, r4
    61b4:	bic	ip, r3, #255	; 0xff
    61b8:	bic	ip, ip, #65280	; 0xff00
    61bc:	eor	r0, r0, #102	; 0x66
    61c0:	eor	r0, r0, #25856	; 0x6500
    61c4:	eor	r0, r0, #7471104	; 0x720000
    61c8:	eor	r0, r0, #1879048192	; 0x70000000
    61cc:	eor	ip, ip, #24641536	; 0x1780000
    61d0:	eor	ip, ip, #1744830464	; 0x68000000
    61d4:	orr	r1, r0, ip
    61d8:	cmp	r1, #0
    61dc:	beq	62a8 <MyGame_Example_Alt_parse_json_table+0x288>
    61e0:	and	r0, r8, #-16777216	; 0xff000000
    61e4:	eor	r3, r4, #105	; 0x69
    61e8:	eor	r3, r3, #30208	; 0x7600
    61ec:	eor	r3, r3, #7274496	; 0x6f0000
    61f0:	eor	r3, r3, #1828716544	; 0x6d000000
    61f4:	eor	r2, r0, #1694498816	; 0x65000000
    61f8:	orr	ip, r3, r2
    61fc:	cmp	ip, #0
    6200:	bne	6290 <MyGame_Example_Alt_parse_json_table+0x270>
    6204:	mov	r3, #5
    6208:	mov	r2, sl
    620c:	mov	r1, r6
    6210:	mov	r0, r9
    6214:	bl	118c <flatcc_json_parser_match_symbol>
    6218:	mov	r1, r0
    621c:	cmp	r6, r1
    6220:	beq	627c <MyGame_Example_Alt_parse_json_table+0x25c>
    6224:	add	r3, sp, #72	; 0x48
    6228:	mov	r2, sl
    622c:	mov	r0, r9
    6230:	bl	c3d4 <Fantasy_Movie_parse_json_table>
    6234:	mov	r4, r0
    6238:	ldr	r2, [sp, #72]	; 0x48
    623c:	cmp	r2, #0
    6240:	beq	6264 <MyGame_Example_Alt_parse_json_table+0x244>
    6244:	ldr	r0, [r9]
    6248:	mov	r1, #1
    624c:	bl	0 <flatcc_builder_table_add_offset>
    6250:	mov	r5, r0
    6254:	cmp	r5, #0
    6258:	moveq	r1, #1
    625c:	movne	r1, #0
    6260:	b	6268 <MyGame_Example_Alt_parse_json_table+0x248>
    6264:	mov	r1, #1
    6268:	cmp	r1, #0
    626c:	bne	644c <MyGame_Example_Alt_parse_json_table+0x42c>
    6270:	ldr	r0, [sp, #72]	; 0x48
    6274:	str	r0, [r5]
    6278:	b	63f0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    627c:	mov	r2, sl
    6280:	mov	r0, r9
    6284:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6288:	mov	r4, r0
    628c:	b	63f0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    6290:	mov	r2, sl
    6294:	mov	r1, r6
    6298:	mov	r0, r9
    629c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    62a0:	mov	r4, r0
    62a4:	b	63f0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    62a8:	mov	r3, #6
    62ac:	mov	r2, sl
    62b0:	mov	r1, r6
    62b4:	mov	r0, r9
    62b8:	bl	118c <flatcc_json_parser_match_symbol>
    62bc:	mov	r1, r0
    62c0:	cmp	r6, r1
    62c4:	beq	6320 <MyGame_Example_Alt_parse_json_table+0x300>
    62c8:	add	r3, sp, #72	; 0x48
    62cc:	mov	r2, sl
    62d0:	mov	r0, r9
    62d4:	bl	6498 <MyGame_Example_TestJSONPrefix_parse_json_table>
    62d8:	mov	r4, r0
    62dc:	ldr	r0, [sp, #72]	; 0x48
    62e0:	cmp	r0, #0
    62e4:	beq	6308 <MyGame_Example_Alt_parse_json_table+0x2e8>
    62e8:	ldr	r0, [r9]
    62ec:	mov	r1, #0
    62f0:	bl	0 <flatcc_builder_table_add_offset>
    62f4:	mov	r5, r0
    62f8:	cmp	r5, #0
    62fc:	moveq	r2, #1
    6300:	movne	r2, #0
    6304:	b	630c <MyGame_Example_Alt_parse_json_table+0x2ec>
    6308:	mov	r2, #1
    630c:	cmp	r2, #0
    6310:	bne	644c <MyGame_Example_Alt_parse_json_table+0x42c>
    6314:	ldr	r3, [sp, #72]	; 0x48
    6318:	str	r3, [r5]
    631c:	b	63f0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    6320:	mov	r2, sl
    6324:	mov	r0, r9
    6328:	bl	0 <flatcc_json_parser_unmatched_symbol>
    632c:	mov	r4, r0
    6330:	b	63f0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    6334:	add	r4, r6, #8
    6338:	mov	r1, sl
    633c:	mov	r0, r4
    6340:	bl	cc0 <flatcc_json_parser_symbol_part>
    6344:	mov	ip, #0
    6348:	eor	r2, r1, #101	; 0x65
    634c:	eor	r2, r2, #618496	; 0x97000
    6350:	eor	r2, r2, #74448896	; 0x4700000
    6354:	eor	r2, r2, #1879048192	; 0x70000000
    6358:	orr	r3, r2, ip
    635c:	cmp	r3, #0
    6360:	bne	63dc <MyGame_Example_Alt_parse_json_table+0x3bc>
    6364:	mov	r1, r4
    6368:	mov	r4, r1
    636c:	mov	r3, #4
    6370:	mov	r2, sl
    6374:	mov	r0, r9
    6378:	bl	118c <flatcc_json_parser_match_symbol>
    637c:	mov	r1, r0
    6380:	cmp	r4, r1
    6384:	beq	63c8 <MyGame_Example_Alt_parse_json_table+0x3a8>
    6388:	mov	r3, #0
    638c:	mov	r4, #3
    6390:	ldr	r6, [sp, #64]	; 0x40
    6394:	ldr	r2, [pc, #248]	; 6494 <MyGame_Example_Alt_parse_json_table+0x474>
    6398:	ldr	r8, [pc, #236]	; 648c <MyGame_Example_Alt_parse_json_table+0x46c>
    639c:	ldr	r0, [pc, #236]	; 6490 <MyGame_Example_Alt_parse_json_table+0x470>
    63a0:	str	r0, [sp, #16]
    63a4:	str	r8, [sp, #12]
    63a8:	str	r2, [sp, #8]
    63ac:	str	r6, [sp, #4]
    63b0:	str	r4, [sp]
    63b4:	mov	r2, sl
    63b8:	mov	r0, r9
    63bc:	bl	0 <flatcc_json_parser_union_type_vector>
    63c0:	mov	r4, r0
    63c4:	b	63f0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    63c8:	mov	r2, sl
    63cc:	mov	r0, r9
    63d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    63d4:	mov	r4, r0
    63d8:	b	63f0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    63dc:	mov	r2, sl
    63e0:	mov	r1, r4
    63e4:	mov	r0, r9
    63e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    63ec:	mov	r4, r0
    63f0:	add	r3, sp, #68	; 0x44
    63f4:	mov	r2, sl
    63f8:	mov	r1, r4
    63fc:	mov	r0, r9
    6400:	bl	e5c <flatcc_json_parser_object_end>
    6404:	mov	r4, r0
    6408:	b	60b8 <MyGame_Example_Alt_parse_json_table+0x98>
    640c:	ldr	r0, [r9, #24]
    6410:	cmp	r0, #0
    6414:	bne	644c <MyGame_Example_Alt_parse_json_table+0x42c>
    6418:	ldr	r3, [sp, #64]	; 0x40
    641c:	mov	r2, sl
    6420:	mov	r1, r4
    6424:	mov	r0, r9
    6428:	bl	0 <flatcc_json_parser_finalize_unions>
    642c:	mov	r4, r0
    6430:	ldr	r0, [r9]
    6434:	bl	0 <flatcc_builder_end_table>
    6438:	str	r0, [r7]
    643c:	cmp	r0, #0
    6440:	beq	644c <MyGame_Example_Alt_parse_json_table+0x42c>
    6444:	mov	r0, r4
    6448:	b	6460 <MyGame_Example_Alt_parse_json_table+0x440>
    644c:	mov	r3, #33	; 0x21
    6450:	mov	r2, sl
    6454:	mov	r1, r4
    6458:	mov	r0, r9
    645c:	bl	0 <flatcc_json_parser_set_error>
    6460:	ldr	r4, [sp, #32]
    6464:	ldr	r5, [sp, #36]	; 0x24
    6468:	ldr	r6, [sp, #40]	; 0x28
    646c:	ldr	r7, [sp, #44]	; 0x2c
    6470:	ldr	r8, [sp, #48]	; 0x30
    6474:	ldr	r9, [sp, #52]	; 0x34
    6478:	ldr	sl, [sp, #56]	; 0x38
    647c:	ldr	fp, [sp, #60]	; 0x3c
    6480:	ldr	lr, [sp, #24]
    6484:	add	sp, sp, #80	; 0x50
    6488:	bx	lr
	...
    6494:	.word	0x000000c0

00006498 <MyGame_Example_TestJSONPrefix_parse_json_table>:
    6498:	mov	ip, sp
    649c:	sub	sp, sp, #48	; 0x30
    64a0:	str	ip, [sp]
    64a4:	str	lr, [sp, #4]
    64a8:	str	r4, [sp, #8]
    64ac:	str	r5, [sp, #12]
    64b0:	str	r6, [sp, #16]
    64b4:	str	r7, [sp, #20]
    64b8:	str	r8, [sp, #24]
    64bc:	str	r9, [sp, #28]
    64c0:	str	sl, [sp, #32]
    64c4:	str	fp, [sp, #36]	; 0x24
    64c8:	mov	r9, r3
    64cc:	mov	r8, r2
    64d0:	mov	r5, r1
    64d4:	mov	sl, r0
    64d8:	mov	r3, #0
    64dc:	str	r3, [r9]
    64e0:	ldr	r0, [sl]
    64e4:	mov	r1, #3
    64e8:	bl	0 <flatcc_builder_start_table>
    64ec:	cmp	r0, #0
    64f0:	bne	685c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    64f4:	add	r3, sp, #40	; 0x28
    64f8:	mov	r2, r8
    64fc:	mov	r1, r5
    6500:	mov	r0, sl
    6504:	bl	d7c <flatcc_json_parser_object_start>
    6508:	mov	r5, r0
    650c:	ldr	r1, [sp, #40]	; 0x28
    6510:	cmp	r1, #0
    6514:	beq	6834 <MyGame_Example_TestJSONPrefix_parse_json_table+0x39c>
    6518:	mov	r2, r8
    651c:	mov	r1, r5
    6520:	mov	r0, sl
    6524:	bl	b90 <flatcc_json_parser_symbol_start>
    6528:	mov	r5, r0
    652c:	mov	r1, r8
    6530:	mov	r0, r5
    6534:	bl	cc0 <flatcc_json_parser_symbol_part>
    6538:	eor	r2, r1, #884	; 0x374
    653c:	eor	r2, r2, #356352	; 0x57000
    6540:	eor	r2, r2, #73400320	; 0x4600000
    6544:	eor	r2, r2, #1879048192	; 0x70000000
    6548:	eor	r0, r0, #110	; 0x6e
    654c:	eor	r0, r0, #28416	; 0x6f00
    6550:	eor	r0, r0, #7536640	; 0x730000
    6554:	eor	r0, r0, #1778384896	; 0x6a000000
    6558:	orr	r0, r2, r0
    655c:	cmp	r0, #0
    6560:	bne	6804 <MyGame_Example_TestJSONPrefix_parse_json_table+0x36c>
    6564:	add	r5, r5, #8
    6568:	mov	r1, r8
    656c:	mov	r0, r5
    6570:	bl	cc0 <flatcc_json_parser_symbol_part>
    6574:	eor	r2, r1, #102	; 0x66
    6578:	eor	r2, r2, #25856	; 0x6500
    657c:	eor	r2, r2, #7471104	; 0x720000
    6580:	eor	r2, r2, #1879048192	; 0x70000000
    6584:	eor	r1, r0, #97	; 0x61
    6588:	eor	r1, r1, #552960	; 0x87000
    658c:	eor	r1, r1, #158334976	; 0x9700000
    6590:	eor	r1, r1, #1610612736	; 0x60000000
    6594:	orr	r0, r2, r1
    6598:	cmp	r0, #0
    659c:	bne	67ec <MyGame_Example_TestJSONPrefix_parse_json_table+0x354>
    65a0:	add	r7, r5, #8
    65a4:	mov	r1, r8
    65a8:	mov	r0, r7
    65ac:	bl	cc0 <flatcc_json_parser_symbol_part>
    65b0:	mov	r6, r1
    65b4:	mov	r5, r0
    65b8:	mov	r1, r6
    65bc:	mov	ip, r5
    65c0:	bic	r0, ip, #255	; 0xff
    65c4:	bic	r0, r0, #65280	; 0xff00
    65c8:	eor	r3, r1, #110	; 0x6e
    65cc:	eor	r3, r3, #26880	; 0x6900
    65d0:	eor	r3, r3, #7536640	; 0x730000
    65d4:	eor	r3, r3, #1912602624	; 0x72000000
    65d8:	eor	r1, r0, #3276800	; 0x320000
    65dc:	eor	r1, r1, #1728053248	; 0x67000000
    65e0:	orr	r2, r3, r1
    65e4:	cmp	r2, #0
    65e8:	beq	6698 <MyGame_Example_TestJSONPrefix_parse_json_table+0x200>
    65ec:	mov	r2, r6
    65f0:	mov	r0, r5
    65f4:	and	r1, r0, #-16777216	; 0xff000000
    65f8:	eor	r3, r2, #110	; 0x6e
    65fc:	eor	r3, r3, #26880	; 0x6900
    6600:	eor	r3, r3, #7536640	; 0x730000
    6604:	eor	r3, r3, #1912602624	; 0x72000000
    6608:	eor	r2, r1, #1728053248	; 0x67000000
    660c:	orr	ip, r3, r2
    6610:	cmp	ip, #0
    6614:	bne	6718 <MyGame_Example_TestJSONPrefix_parse_json_table+0x280>
    6618:	mov	fp, r7
    661c:	mov	r3, #5
    6620:	mov	r2, r8
    6624:	mov	r1, fp
    6628:	mov	r0, sl
    662c:	bl	118c <flatcc_json_parser_match_symbol>
    6630:	mov	r7, r0
    6634:	cmp	fp, r7
    6638:	beq	6718 <MyGame_Example_TestJSONPrefix_parse_json_table+0x280>
    663c:	add	r3, sp, #44	; 0x2c
    6640:	mov	r2, r8
    6644:	mov	r1, r7
    6648:	mov	r0, sl
    664c:	bl	689c <MyGame_Example_TestJSONPrefixParsing_parse_json_table>
    6650:	mov	r5, r0
    6654:	ldr	r3, [sp, #44]	; 0x2c
    6658:	cmp	r3, #0
    665c:	beq	6680 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1e8>
    6660:	ldr	r0, [sl]
    6664:	mov	r1, #0
    6668:	bl	0 <flatcc_builder_table_add_offset>
    666c:	mov	r4, r0
    6670:	cmp	r4, #0
    6674:	moveq	ip, #1
    6678:	movne	ip, #0
    667c:	b	6684 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1ec>
    6680:	mov	ip, #1
    6684:	cmp	ip, #0
    6688:	bne	685c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    668c:	ldr	r0, [sp, #44]	; 0x2c
    6690:	str	r0, [r4]
    6694:	b	6818 <MyGame_Example_TestJSONPrefix_parse_json_table+0x380>
    6698:	mov	fp, r7
    669c:	mov	r3, #6
    66a0:	mov	r2, r8
    66a4:	mov	r1, fp
    66a8:	mov	r0, sl
    66ac:	bl	118c <flatcc_json_parser_match_symbol>
    66b0:	mov	r7, r0
    66b4:	cmp	fp, r7
    66b8:	beq	6718 <MyGame_Example_TestJSONPrefix_parse_json_table+0x280>
    66bc:	add	r3, sp, #44	; 0x2c
    66c0:	mov	r2, r8
    66c4:	mov	r1, r7
    66c8:	mov	r0, sl
    66cc:	bl	73c4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>
    66d0:	mov	r5, r0
    66d4:	ldr	r3, [sp, #44]	; 0x2c
    66d8:	cmp	r3, #0
    66dc:	beq	6700 <MyGame_Example_TestJSONPrefix_parse_json_table+0x268>
    66e0:	ldr	r0, [sl]
    66e4:	mov	r1, #1
    66e8:	bl	0 <flatcc_builder_table_add_offset>
    66ec:	mov	r4, r0
    66f0:	cmp	r0, #0
    66f4:	moveq	r2, #1
    66f8:	movne	r2, #0
    66fc:	b	6704 <MyGame_Example_TestJSONPrefix_parse_json_table+0x26c>
    6700:	mov	r2, #1
    6704:	cmp	r2, #0
    6708:	bne	685c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    670c:	ldr	r1, [sp, #44]	; 0x2c
    6710:	str	r1, [r4]
    6714:	b	6818 <MyGame_Example_TestJSONPrefix_parse_json_table+0x380>
    6718:	bic	r3, r5, #255	; 0xff
    671c:	bic	r3, r3, #65280	; 0xff00
    6720:	eor	r0, r6, #110	; 0x6e
    6724:	eor	r0, r0, #26880	; 0x6900
    6728:	eor	r0, r0, #7536640	; 0x730000
    672c:	eor	r0, r0, #1912602624	; 0x72000000
    6730:	eor	ip, r3, #3342336	; 0x330000
    6734:	eor	ip, ip, #1728053248	; 0x67000000
    6738:	orr	r1, r0, ip
    673c:	cmp	r1, #0
    6740:	bne	67d4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x33c>
    6744:	mov	r1, r7
    6748:	mov	r5, r1
    674c:	mov	r3, #6
    6750:	mov	r2, r8
    6754:	mov	r0, sl
    6758:	bl	118c <flatcc_json_parser_match_symbol>
    675c:	mov	r1, r0
    6760:	cmp	r5, r1
    6764:	beq	67c0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x328>
    6768:	add	r3, sp, #44	; 0x2c
    676c:	mov	r2, r8
    6770:	mov	r0, sl
    6774:	bl	77b8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>
    6778:	mov	r5, r0
    677c:	ldr	ip, [sp, #44]	; 0x2c
    6780:	cmp	ip, #0
    6784:	beq	67a8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x310>
    6788:	ldr	r0, [sl]
    678c:	mov	r1, #2
    6790:	bl	0 <flatcc_builder_table_add_offset>
    6794:	mov	r4, r0
    6798:	cmp	r4, #0
    679c:	moveq	ip, #1
    67a0:	movne	ip, #0
    67a4:	b	67ac <MyGame_Example_TestJSONPrefix_parse_json_table+0x314>
    67a8:	mov	ip, #1
    67ac:	cmp	ip, #0
    67b0:	bne	685c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    67b4:	ldr	r1, [sp, #44]	; 0x2c
    67b8:	str	r1, [r4]
    67bc:	b	6818 <MyGame_Example_TestJSONPrefix_parse_json_table+0x380>
    67c0:	mov	r2, r8
    67c4:	mov	r0, sl
    67c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    67cc:	mov	r5, r0
    67d0:	b	6818 <MyGame_Example_TestJSONPrefix_parse_json_table+0x380>
    67d4:	mov	r2, r8
    67d8:	mov	r1, r7
    67dc:	mov	r0, sl
    67e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    67e4:	mov	r5, r0
    67e8:	b	6818 <MyGame_Example_TestJSONPrefix_parse_json_table+0x380>
    67ec:	mov	r2, r8
    67f0:	mov	r1, r5
    67f4:	mov	r0, sl
    67f8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    67fc:	mov	r5, r0
    6800:	b	6818 <MyGame_Example_TestJSONPrefix_parse_json_table+0x380>
    6804:	mov	r2, r8
    6808:	mov	r1, r5
    680c:	mov	r0, sl
    6810:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6814:	mov	r5, r0
    6818:	add	r3, sp, #40	; 0x28
    681c:	mov	r2, r8
    6820:	mov	r1, r5
    6824:	mov	r0, sl
    6828:	bl	e5c <flatcc_json_parser_object_end>
    682c:	mov	r5, r0
    6830:	b	650c <MyGame_Example_TestJSONPrefix_parse_json_table+0x74>
    6834:	ldr	r3, [sl, #24]
    6838:	cmp	r3, #0
    683c:	bne	685c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    6840:	ldr	r0, [sl]
    6844:	bl	0 <flatcc_builder_end_table>
    6848:	str	r0, [r9]
    684c:	cmp	r0, #0
    6850:	beq	685c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    6854:	mov	r0, r5
    6858:	b	6870 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3d8>
    685c:	mov	r3, #33	; 0x21
    6860:	mov	r2, r8
    6864:	mov	r1, r5
    6868:	mov	r0, sl
    686c:	bl	0 <flatcc_json_parser_set_error>
    6870:	ldr	r4, [sp, #8]
    6874:	ldr	r5, [sp, #12]
    6878:	ldr	r6, [sp, #16]
    687c:	ldr	r7, [sp, #20]
    6880:	ldr	r8, [sp, #24]
    6884:	ldr	r9, [sp, #28]
    6888:	ldr	sl, [sp, #32]
    688c:	ldr	fp, [sp, #36]	; 0x24
    6890:	ldr	lr, [sp, #4]
    6894:	add	sp, sp, #48	; 0x30
    6898:	bx	lr

0000689c <MyGame_Example_TestJSONPrefixParsing_parse_json_table>:
    689c:	mov	ip, sp
    68a0:	sub	sp, sp, #96	; 0x60
    68a4:	str	ip, [sp, #4]
    68a8:	str	lr, [sp, #8]
    68ac:	str	r4, [sp, #16]
    68b0:	str	r5, [sp, #20]
    68b4:	str	r6, [sp, #24]
    68b8:	str	r7, [sp, #28]
    68bc:	str	r8, [sp, #32]
    68c0:	str	r9, [sp, #36]	; 0x24
    68c4:	str	sl, [sp, #40]	; 0x28
    68c8:	str	fp, [sp, #44]	; 0x2c
    68cc:	mov	r8, r3
    68d0:	mov	r5, r2
    68d4:	mov	r4, r1
    68d8:	mov	r6, r0
    68dc:	mov	r0, #0
    68e0:	str	r0, [r8]
    68e4:	ldr	r0, [r6]
    68e8:	mov	r1, #9
    68ec:	bl	0 <flatcc_builder_start_table>
    68f0:	cmp	r0, #0
    68f4:	bne	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    68f8:	add	r3, sp, #48	; 0x30
    68fc:	mov	r2, r5
    6900:	mov	r1, r4
    6904:	mov	r0, r6
    6908:	bl	d7c <flatcc_json_parser_object_start>
    690c:	mov	r4, r0
    6910:	ldr	ip, [sp, #48]	; 0x30
    6914:	cmp	ip, #0
    6918:	beq	7344 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xaa8>
    691c:	mov	r2, r5
    6920:	mov	r1, r4
    6924:	mov	r0, r6
    6928:	bl	b90 <flatcc_json_parser_symbol_start>
    692c:	mov	r4, r0
    6930:	mov	r1, r5
    6934:	mov	r0, r4
    6938:	bl	cc0 <flatcc_json_parser_symbol_part>
    693c:	mov	r9, r1
    6940:	mov	sl, r0
    6944:	mov	r1, r9
    6948:	movw	r2, #25443	; 0x6363
    694c:	movt	r2, #25443	; 0x6363
    6950:	cmp	r1, r2
    6954:	bne	696c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xd0>
    6958:	mov	r0, sl
    695c:	mov	r1, #0
    6960:	cmp	r0, r1
    6964:	bcc	6f08 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x66c>
    6968:	b	697c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xe0>
    696c:	movw	r3, #25443	; 0x6363
    6970:	movt	r3, #25443	; 0x6363
    6974:	cmp	r1, r3
    6978:	bcc	6f08 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x66c>
    697c:	mov	ip, r9
    6980:	mov	r3, sl
    6984:	eor	ip, ip, #99	; 0x63
    6988:	eor	ip, ip, #25344	; 0x6300
    698c:	eor	ip, ip, #6488064	; 0x630000
    6990:	eor	ip, ip, #1660944384	; 0x63000000
    6994:	eor	r1, r3, #820	; 0x334
    6998:	eor	r1, r1, #143360	; 0x23000
    699c:	eor	r1, r1, #19922944	; 0x1300000
    69a0:	eor	r1, r1, #805306368	; 0x30000000
    69a4:	orr	r0, ip, r1
    69a8:	cmp	r0, #0
    69ac:	beq	6cd0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x434>
    69b0:	mov	r1, r9
    69b4:	mov	r0, #0
    69b8:	eor	r3, r1, #99	; 0x63
    69bc:	eor	r3, r3, #25344	; 0x6300
    69c0:	eor	r3, r3, #6488064	; 0x630000
    69c4:	eor	r3, r3, #1660944384	; 0x63000000
    69c8:	orr	r2, r3, r0
    69cc:	cmp	r2, #0
    69d0:	bne	6a54 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1b8>
    69d4:	mov	fp, r4
    69d8:	mov	r3, #4
    69dc:	mov	r2, r5
    69e0:	mov	r1, fp
    69e4:	mov	r0, r6
    69e8:	bl	118c <flatcc_json_parser_match_symbol>
    69ec:	mov	r4, r0
    69f0:	cmp	fp, r4
    69f4:	beq	6a54 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1b8>
    69f8:	add	r3, sp, #52	; 0x34
    69fc:	mov	r2, r5
    6a00:	mov	r1, r4
    6a04:	mov	r0, r6
    6a08:	bl	0 <flatcc_json_parser_build_string>
    6a0c:	mov	r4, r0
    6a10:	ldr	r1, [sp, #52]	; 0x34
    6a14:	cmp	r1, #0
    6a18:	beq	6a3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1a0>
    6a1c:	ldr	r0, [r6]
    6a20:	mov	r1, #4
    6a24:	bl	0 <flatcc_builder_table_add_offset>
    6a28:	mov	r7, r0
    6a2c:	cmp	r7, #0
    6a30:	moveq	r3, #1
    6a34:	movne	r3, #0
    6a38:	b	6a40 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1a4>
    6a3c:	mov	r3, #1
    6a40:	cmp	r3, #0
    6a44:	bne	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6a48:	ldr	r2, [sp, #52]	; 0x34
    6a4c:	str	r2, [r7]
    6a50:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6a54:	eor	r1, r9, #100	; 0x64
    6a58:	eor	r1, r1, #25600	; 0x6400
    6a5c:	eor	r1, r1, #6553600	; 0x640000
    6a60:	eor	r1, r1, #1677721600	; 0x64000000
    6a64:	eor	r0, sl, #820	; 0x334
    6a68:	eor	r0, r0, #143360	; 0x23000
    6a6c:	eor	r0, r0, #19922944	; 0x1300000
    6a70:	eor	r0, r0, #805306368	; 0x30000000
    6a74:	orr	ip, r1, r0
    6a78:	cmp	ip, #0
    6a7c:	bne	6cb8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x41c>
    6a80:	mov	r3, #8
    6a84:	mov	r2, r5
    6a88:	mov	r1, r4
    6a8c:	mov	r0, r6
    6a90:	bl	118c <flatcc_json_parser_match_symbol>
    6a94:	mov	r9, r0
    6a98:	cmp	r4, r9
    6a9c:	bne	6bdc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x340>
    6aa0:	add	r4, r9, #8
    6aa4:	mov	r1, r5
    6aa8:	mov	r0, r4
    6aac:	bl	cc0 <flatcc_json_parser_symbol_part>
    6ab0:	and	r1, r1, #-16777216	; 0xff000000
    6ab4:	mov	r0, #0
    6ab8:	eor	r2, r1, #889192448	; 0x35000000
    6abc:	orr	r2, r2, r0
    6ac0:	cmp	r2, #0
    6ac4:	bne	6bc4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x328>
    6ac8:	mov	r3, #1
    6acc:	mov	r2, r5
    6ad0:	mov	r1, r4
    6ad4:	mov	r0, r6
    6ad8:	bl	118c <flatcc_json_parser_match_symbol>
    6adc:	mov	r1, r0
    6ae0:	cmp	r4, r1
    6ae4:	beq	6bb0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x314>
    6ae8:	mov	r0, #0
    6aec:	str	r0, [sp, #64]	; 0x40
    6af0:	mov	r9, r1
    6af4:	add	r3, sp, #64	; 0x40
    6af8:	mov	r2, r5
    6afc:	mov	r0, r6
    6b00:	bl	1ae4 <flatcc_json_parser_uint32>
    6b04:	mov	r4, r0
    6b08:	cmp	r9, r4
    6b0c:	bne	6b58 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2bc>
    6b10:	mov	r9, r4
    6b14:	ldr	r3, [pc, #2208]	; 73bc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb20>
    6b18:	add	r1, sp, #64	; 0x40
    6b1c:	str	r1, [sp]
    6b20:	mov	r2, r5
    6b24:	mov	r1, r4
    6b28:	mov	r0, r6
    6b2c:	bl	2348 <flatcc_json_parser_symbolic_uint32>
    6b30:	mov	r4, r0
    6b34:	cmp	r4, r9
    6b38:	beq	6b4c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2b0>
    6b3c:	cmp	r4, r5
    6b40:	moveq	ip, #1
    6b44:	movne	ip, #0
    6b48:	b	6b50 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2b4>
    6b4c:	mov	ip, #1
    6b50:	cmp	ip, #0
    6b54:	bne	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6b58:	ldr	r3, [sp, #64]	; 0x40
    6b5c:	cmp	r3, #0
    6b60:	bne	6b7c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2e0>
    6b64:	ldr	ip, [r6, #8]
    6b68:	and	r1, ip, #2
    6b6c:	cmp	r1, #0
    6b70:	movne	ip, #1
    6b74:	moveq	ip, #0
    6b78:	b	6b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2e4>
    6b7c:	mov	ip, #1
    6b80:	cmp	ip, #0
    6b84:	beq	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6b88:	ldr	r0, [r6]
    6b8c:	mov	r1, #8
    6b90:	mov	r2, #4
    6b94:	mov	r3, #4
    6b98:	bl	0 <flatcc_builder_table_add>
    6b9c:	cmp	r0, #0
    6ba0:	beq	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6ba4:	ldr	r1, [sp, #64]	; 0x40
    6ba8:	bl	d8 <flatbuffers_uint32_write_to_pe>
    6bac:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6bb0:	mov	r2, r5
    6bb4:	mov	r0, r6
    6bb8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6bbc:	mov	r4, r0
    6bc0:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6bc4:	mov	r2, r5
    6bc8:	mov	r1, r4
    6bcc:	mov	r0, r6
    6bd0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6bd4:	mov	r4, r0
    6bd8:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6bdc:	mov	r0, #0
    6be0:	mov	ip, #0
    6be4:	str	ip, [sp, #88]	; 0x58
    6be8:	str	r0, [sp, #92]	; 0x5c
    6bec:	add	r3, sp, #88	; 0x58
    6bf0:	mov	r2, r5
    6bf4:	mov	r1, r9
    6bf8:	mov	r0, r6
    6bfc:	bl	1d30 <flatcc_json_parser_int64>
    6c00:	mov	r4, r0
    6c04:	cmp	r9, r4
    6c08:	bne	6c54 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3b8>
    6c0c:	mov	r9, r4
    6c10:	ldr	r3, [pc, #1952]	; 73b8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb1c>
    6c14:	add	r2, sp, #88	; 0x58
    6c18:	str	r2, [sp]
    6c1c:	mov	r2, r5
    6c20:	mov	r1, r9
    6c24:	mov	r0, r6
    6c28:	bl	28b8 <flatcc_json_parser_symbolic_int64>
    6c2c:	mov	r4, r0
    6c30:	cmp	r4, r9
    6c34:	beq	6c48 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3ac>
    6c38:	cmp	r4, r5
    6c3c:	moveq	r2, #1
    6c40:	movne	r2, #0
    6c44:	b	6c4c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3b0>
    6c48:	mov	r2, #1
    6c4c:	cmp	r2, #0
    6c50:	bne	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6c54:	ldr	ip, [sp, #88]	; 0x58
    6c58:	ldr	r2, [sp, #92]	; 0x5c
    6c5c:	orr	ip, r2, ip
    6c60:	cmp	ip, #0
    6c64:	bne	6c80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3e4>
    6c68:	ldr	r3, [r6, #8]
    6c6c:	and	r2, r3, #2
    6c70:	cmp	r2, #0
    6c74:	movne	r0, #1
    6c78:	moveq	r0, #0
    6c7c:	b	6c84 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3e8>
    6c80:	mov	r0, #1
    6c84:	cmp	r0, #0
    6c88:	beq	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6c8c:	ldr	r0, [r6]
    6c90:	mov	r1, #7
    6c94:	mov	r2, #8
    6c98:	mov	r3, #8
    6c9c:	bl	0 <flatcc_builder_table_add>
    6ca0:	cmp	r0, #0
    6ca4:	beq	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6ca8:	ldr	r2, [sp, #88]	; 0x58
    6cac:	ldr	r3, [sp, #92]	; 0x5c
    6cb0:	bl	340 <flatbuffers_int64_write_to_pe>
    6cb4:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6cb8:	mov	r2, r5
    6cbc:	mov	r1, r4
    6cc0:	mov	r0, r6
    6cc4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6cc8:	mov	r4, r0
    6ccc:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6cd0:	mov	r3, #8
    6cd4:	mov	r2, r5
    6cd8:	mov	r1, r4
    6cdc:	mov	r0, r6
    6ce0:	bl	118c <flatcc_json_parser_match_symbol>
    6ce4:	mov	r9, r0
    6ce8:	cmp	r4, r9
    6cec:	bne	6e2c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x590>
    6cf0:	add	r4, r9, #8
    6cf4:	mov	r1, r5
    6cf8:	mov	r0, r4
    6cfc:	bl	cc0 <flatcc_json_parser_symbol_part>
    6d00:	and	r0, r1, #-16777216	; 0xff000000
    6d04:	mov	ip, #0
    6d08:	eor	r0, r0, #889192448	; 0x35000000
    6d0c:	orr	r0, r0, ip
    6d10:	cmp	r0, #0
    6d14:	bne	6e14 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x578>
    6d18:	mov	r3, #1
    6d1c:	mov	r2, r5
    6d20:	mov	r1, r4
    6d24:	mov	r0, r6
    6d28:	bl	118c <flatcc_json_parser_match_symbol>
    6d2c:	mov	r1, r0
    6d30:	cmp	r4, r1
    6d34:	beq	6e00 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x564>
    6d38:	mov	ip, #0
    6d3c:	str	ip, [sp, #60]	; 0x3c
    6d40:	mov	r9, r1
    6d44:	add	r3, sp, #60	; 0x3c
    6d48:	mov	r2, r5
    6d4c:	mov	r0, r6
    6d50:	bl	1ae4 <flatcc_json_parser_uint32>
    6d54:	mov	r4, r0
    6d58:	cmp	r9, r4
    6d5c:	bne	6da8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x50c>
    6d60:	mov	r9, r4
    6d64:	ldr	r3, [pc, #1600]	; 73ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb10>
    6d68:	add	r2, sp, #60	; 0x3c
    6d6c:	str	r2, [sp]
    6d70:	mov	r2, r5
    6d74:	mov	r1, r4
    6d78:	mov	r0, r6
    6d7c:	bl	2348 <flatcc_json_parser_symbolic_uint32>
    6d80:	mov	r4, r0
    6d84:	cmp	r4, r9
    6d88:	beq	6d9c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x500>
    6d8c:	cmp	r4, r5
    6d90:	moveq	r2, #1
    6d94:	movne	r2, #0
    6d98:	b	6da0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x504>
    6d9c:	mov	r2, #1
    6da0:	cmp	r2, #0
    6da4:	bne	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6da8:	ldr	r2, [sp, #60]	; 0x3c
    6dac:	cmp	r2, #0
    6db0:	bne	6dcc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x530>
    6db4:	ldr	r2, [r6, #8]
    6db8:	and	r1, r2, #2
    6dbc:	cmp	r1, #0
    6dc0:	movne	r3, #1
    6dc4:	moveq	r3, #0
    6dc8:	b	6dd0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x534>
    6dcc:	mov	r3, #1
    6dd0:	cmp	r3, #0
    6dd4:	beq	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6dd8:	ldr	r0, [r6]
    6ddc:	mov	r1, #6
    6de0:	mov	r2, #4
    6de4:	mov	r3, #4
    6de8:	bl	0 <flatcc_builder_table_add>
    6dec:	cmp	r0, #0
    6df0:	beq	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6df4:	ldr	r1, [sp, #60]	; 0x3c
    6df8:	bl	d8 <flatbuffers_uint32_write_to_pe>
    6dfc:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6e00:	mov	r2, r5
    6e04:	mov	r0, r6
    6e08:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6e0c:	mov	r4, r0
    6e10:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6e14:	mov	r2, r5
    6e18:	mov	r1, r4
    6e1c:	mov	r0, r6
    6e20:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6e24:	mov	r4, r0
    6e28:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6e2c:	mov	r1, #0
    6e30:	mov	r0, #0
    6e34:	str	r0, [sp, #80]	; 0x50
    6e38:	str	r1, [sp, #84]	; 0x54
    6e3c:	add	r3, sp, #80	; 0x50
    6e40:	mov	r2, r5
    6e44:	mov	r1, r9
    6e48:	mov	r0, r6
    6e4c:	bl	1d30 <flatcc_json_parser_int64>
    6e50:	mov	r4, r0
    6e54:	cmp	r9, r4
    6e58:	bne	6ea4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x608>
    6e5c:	mov	r9, r4
    6e60:	ldr	r3, [pc, #1356]	; 73b4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb18>
    6e64:	add	r0, sp, #80	; 0x50
    6e68:	str	r0, [sp]
    6e6c:	mov	r2, r5
    6e70:	mov	r1, r9
    6e74:	mov	r0, r6
    6e78:	bl	28b8 <flatcc_json_parser_symbolic_int64>
    6e7c:	mov	r4, r0
    6e80:	cmp	r4, r9
    6e84:	beq	6e98 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x5fc>
    6e88:	cmp	r4, r5
    6e8c:	moveq	r1, #1
    6e90:	movne	r1, #0
    6e94:	b	6e9c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x600>
    6e98:	mov	r1, #1
    6e9c:	cmp	r1, #0
    6ea0:	bne	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6ea4:	ldr	r2, [sp, #80]	; 0x50
    6ea8:	ldr	r3, [sp, #84]	; 0x54
    6eac:	orr	r3, r3, r2
    6eb0:	cmp	r3, #0
    6eb4:	bne	6ed0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x634>
    6eb8:	ldr	r1, [r6, #8]
    6ebc:	and	ip, r1, #2
    6ec0:	cmp	ip, #0
    6ec4:	movne	r1, #1
    6ec8:	moveq	r1, #0
    6ecc:	b	6ed4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x638>
    6ed0:	mov	r1, #1
    6ed4:	cmp	r1, #0
    6ed8:	beq	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6edc:	ldr	r0, [r6]
    6ee0:	mov	r1, #5
    6ee4:	mov	r2, #8
    6ee8:	mov	r3, #8
    6eec:	bl	0 <flatcc_builder_table_add>
    6ef0:	cmp	r0, #0
    6ef4:	beq	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6ef8:	ldr	r2, [sp, #80]	; 0x50
    6efc:	ldr	r3, [sp, #84]	; 0x54
    6f00:	bl	340 <flatbuffers_int64_write_to_pe>
    6f04:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6f08:	mov	r0, r9
    6f0c:	eor	r3, r0, #97	; 0x61
    6f10:	eor	r3, r3, #24832	; 0x6100
    6f14:	eor	r3, r3, #6356992	; 0x610000
    6f18:	eor	r3, r3, #1627389952	; 0x61000000
    6f1c:	mov	ip, sl
    6f20:	eor	r2, ip, #820	; 0x334
    6f24:	eor	r2, r2, #143360	; 0x23000
    6f28:	eor	r2, r2, #19922944	; 0x1300000
    6f2c:	eor	r2, r2, #805306368	; 0x30000000
    6f30:	orr	ip, r3, r2
    6f34:	cmp	ip, #0
    6f38:	beq	71ec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x950>
    6f3c:	mov	r0, r9
    6f40:	mov	ip, #0
    6f44:	eor	r2, r0, #97	; 0x61
    6f48:	eor	r2, r2, #24832	; 0x6100
    6f4c:	eor	r2, r2, #6356992	; 0x610000
    6f50:	eor	r2, r2, #1627389952	; 0x61000000
    6f54:	orr	r0, r2, ip
    6f58:	cmp	r0, #0
    6f5c:	bne	6fe0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x744>
    6f60:	mov	fp, r4
    6f64:	mov	r3, #4
    6f68:	mov	r2, r5
    6f6c:	mov	r1, fp
    6f70:	mov	r0, r6
    6f74:	bl	118c <flatcc_json_parser_match_symbol>
    6f78:	mov	r4, r0
    6f7c:	cmp	fp, r4
    6f80:	beq	6fe0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x744>
    6f84:	add	r3, sp, #52	; 0x34
    6f88:	mov	r2, r5
    6f8c:	mov	r1, r4
    6f90:	mov	r0, r6
    6f94:	bl	0 <flatcc_json_parser_build_string>
    6f98:	mov	r4, r0
    6f9c:	ldr	r2, [sp, #52]	; 0x34
    6fa0:	cmp	r2, #0
    6fa4:	beq	6fc8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x72c>
    6fa8:	ldr	r0, [r6]
    6fac:	mov	r1, #0
    6fb0:	bl	0 <flatcc_builder_table_add_offset>
    6fb4:	mov	r7, r0
    6fb8:	cmp	r0, #0
    6fbc:	moveq	ip, #1
    6fc0:	movne	ip, #0
    6fc4:	b	6fcc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x730>
    6fc8:	mov	ip, #1
    6fcc:	cmp	ip, #0
    6fd0:	bne	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6fd4:	ldr	ip, [sp, #52]	; 0x34
    6fd8:	str	ip, [r7]
    6fdc:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6fe0:	mov	r1, r9
    6fe4:	eor	r1, r1, #98	; 0x62
    6fe8:	eor	r1, r1, #25088	; 0x6200
    6fec:	eor	r1, r1, #6422528	; 0x620000
    6ff0:	eor	r1, r1, #1644167168	; 0x62000000
    6ff4:	eor	r0, sl, #820	; 0x334
    6ff8:	eor	r0, r0, #143360	; 0x23000
    6ffc:	eor	r0, r0, #19922944	; 0x1300000
    7000:	eor	r0, r0, #805306368	; 0x30000000
    7004:	orr	r2, r1, r0
    7008:	cmp	r2, #0
    700c:	bne	7128 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x88c>
    7010:	mov	r1, r4
    7014:	mov	r4, r1
    7018:	mov	r3, #8
    701c:	mov	r2, r5
    7020:	mov	r0, r6
    7024:	bl	118c <flatcc_json_parser_match_symbol>
    7028:	mov	r1, r0
    702c:	cmp	r4, r1
    7030:	beq	7114 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x878>
    7034:	mov	r3, #0
    7038:	mov	r2, #0
    703c:	str	r2, [sp, #72]	; 0x48
    7040:	str	r3, [sp, #76]	; 0x4c
    7044:	mov	r9, r1
    7048:	add	r3, sp, #72	; 0x48
    704c:	mov	r2, r5
    7050:	mov	r1, r9
    7054:	mov	r0, r6
    7058:	bl	1d30 <flatcc_json_parser_int64>
    705c:	mov	r4, r0
    7060:	cmp	r9, r4
    7064:	bne	70b0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x814>
    7068:	mov	r9, r4
    706c:	ldr	r3, [pc, #828]	; 73b0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb14>
    7070:	add	r0, sp, #72	; 0x48
    7074:	str	r0, [sp]
    7078:	mov	r2, r5
    707c:	mov	r1, r9
    7080:	mov	r0, r6
    7084:	bl	28b8 <flatcc_json_parser_symbolic_int64>
    7088:	mov	r4, r0
    708c:	cmp	r4, r9
    7090:	beq	70a4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x808>
    7094:	cmp	r4, r5
    7098:	moveq	r3, #1
    709c:	movne	r3, #0
    70a0:	b	70a8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x80c>
    70a4:	mov	r3, #1
    70a8:	cmp	r3, #0
    70ac:	bne	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    70b0:	ldr	r0, [sp, #72]	; 0x48
    70b4:	ldr	ip, [sp, #76]	; 0x4c
    70b8:	orr	r3, ip, r0
    70bc:	cmp	r3, #0
    70c0:	bne	70dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x840>
    70c4:	ldr	r3, [r6, #8]
    70c8:	and	ip, r3, #2
    70cc:	cmp	ip, #0
    70d0:	movne	r2, #1
    70d4:	moveq	r2, #0
    70d8:	b	70e0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x844>
    70dc:	mov	r2, #1
    70e0:	cmp	r2, #0
    70e4:	beq	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    70e8:	ldr	r0, [r6]
    70ec:	mov	r1, #3
    70f0:	mov	r2, #8
    70f4:	mov	r3, #8
    70f8:	bl	0 <flatcc_builder_table_add>
    70fc:	cmp	r0, #0
    7100:	beq	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    7104:	ldr	r2, [sp, #72]	; 0x48
    7108:	ldr	r3, [sp, #76]	; 0x4c
    710c:	bl	340 <flatbuffers_int64_write_to_pe>
    7110:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    7114:	mov	r2, r5
    7118:	mov	r0, r6
    711c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7120:	mov	r4, r0
    7124:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    7128:	mov	r2, #0
    712c:	eor	r3, r9, #98	; 0x62
    7130:	eor	r3, r3, #25088	; 0x6200
    7134:	eor	r3, r3, #6422528	; 0x620000
    7138:	eor	r3, r3, #1644167168	; 0x62000000
    713c:	orr	ip, r3, r2
    7140:	cmp	ip, #0
    7144:	bne	71d4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x938>
    7148:	mov	r3, #4
    714c:	mov	r2, r5
    7150:	mov	r1, r4
    7154:	mov	r0, r6
    7158:	bl	118c <flatcc_json_parser_match_symbol>
    715c:	mov	r1, r0
    7160:	cmp	r4, r1
    7164:	beq	71c0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x924>
    7168:	add	r3, sp, #52	; 0x34
    716c:	mov	r2, r5
    7170:	mov	r0, r6
    7174:	bl	0 <flatcc_json_parser_build_string>
    7178:	mov	r4, r0
    717c:	ldr	r0, [sp, #52]	; 0x34
    7180:	cmp	r0, #0
    7184:	beq	71a8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x90c>
    7188:	ldr	r0, [r6]
    718c:	mov	r1, #2
    7190:	bl	0 <flatcc_builder_table_add_offset>
    7194:	mov	r7, r0
    7198:	cmp	r0, #0
    719c:	moveq	r2, #1
    71a0:	movne	r2, #0
    71a4:	b	71ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x910>
    71a8:	mov	r2, #1
    71ac:	cmp	r2, #0
    71b0:	bne	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    71b4:	ldr	r2, [sp, #52]	; 0x34
    71b8:	str	r2, [r7]
    71bc:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    71c0:	mov	r2, r5
    71c4:	mov	r0, r6
    71c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    71cc:	mov	r4, r0
    71d0:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    71d4:	mov	r2, r5
    71d8:	mov	r1, r4
    71dc:	mov	r0, r6
    71e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    71e4:	mov	r4, r0
    71e8:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    71ec:	add	r4, r4, #8
    71f0:	mov	r1, r5
    71f4:	mov	r0, r4
    71f8:	bl	cc0 <flatcc_json_parser_symbol_part>
    71fc:	and	r2, r1, #-16777216	; 0xff000000
    7200:	mov	r1, #0
    7204:	eor	r3, r2, #889192448	; 0x35000000
    7208:	orr	r0, r3, r1
    720c:	cmp	r0, #0
    7210:	bne	7314 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa78>
    7214:	mov	r1, r4
    7218:	mov	r4, r1
    721c:	mov	r3, #1
    7220:	mov	r2, r5
    7224:	mov	r0, r6
    7228:	bl	118c <flatcc_json_parser_match_symbol>
    722c:	mov	r1, r0
    7230:	cmp	r4, r1
    7234:	beq	7300 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa64>
    7238:	mov	r3, #0
    723c:	str	r3, [sp, #56]	; 0x38
    7240:	mov	r9, r1
    7244:	add	r3, sp, #56	; 0x38
    7248:	mov	r2, r5
    724c:	mov	r0, r6
    7250:	bl	1ae4 <flatcc_json_parser_uint32>
    7254:	mov	r4, r0
    7258:	cmp	r9, r4
    725c:	bne	72a8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa0c>
    7260:	mov	r9, r4
    7264:	ldr	r3, [pc, #340]	; 73c0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb24>
    7268:	add	r0, sp, #56	; 0x38
    726c:	str	r0, [sp]
    7270:	mov	r2, r5
    7274:	mov	r1, r9
    7278:	mov	r0, r6
    727c:	bl	2348 <flatcc_json_parser_symbolic_uint32>
    7280:	mov	r4, r0
    7284:	cmp	r4, r9
    7288:	beq	729c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa00>
    728c:	cmp	r4, r5
    7290:	moveq	r1, #1
    7294:	movne	r1, #0
    7298:	b	72a0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa04>
    729c:	mov	r1, #1
    72a0:	cmp	r1, #0
    72a4:	bne	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    72a8:	ldr	r2, [sp, #56]	; 0x38
    72ac:	cmp	r2, #0
    72b0:	bne	72cc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa30>
    72b4:	ldr	r3, [r6, #8]
    72b8:	and	r2, r3, #2
    72bc:	cmp	r2, #0
    72c0:	movne	ip, #1
    72c4:	moveq	ip, #0
    72c8:	b	72d0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa34>
    72cc:	mov	ip, #1
    72d0:	cmp	ip, #0
    72d4:	beq	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    72d8:	ldr	r0, [r6]
    72dc:	mov	r1, #1
    72e0:	mov	r2, #4
    72e4:	mov	r3, #4
    72e8:	bl	0 <flatcc_builder_table_add>
    72ec:	cmp	r0, #0
    72f0:	beq	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    72f4:	ldr	r1, [sp, #56]	; 0x38
    72f8:	bl	d8 <flatbuffers_uint32_write_to_pe>
    72fc:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    7300:	mov	r2, r5
    7304:	mov	r0, r6
    7308:	bl	0 <flatcc_json_parser_unmatched_symbol>
    730c:	mov	r4, r0
    7310:	b	7328 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    7314:	mov	r2, r5
    7318:	mov	r1, r4
    731c:	mov	r0, r6
    7320:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7324:	mov	r4, r0
    7328:	add	r3, sp, #48	; 0x30
    732c:	mov	r2, r5
    7330:	mov	r1, r4
    7334:	mov	r0, r6
    7338:	bl	e5c <flatcc_json_parser_object_end>
    733c:	mov	r4, r0
    7340:	b	6910 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x74>
    7344:	ldr	r1, [r6, #24]
    7348:	cmp	r1, #0
    734c:	bne	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    7350:	ldr	r0, [r6]
    7354:	bl	0 <flatcc_builder_end_table>
    7358:	str	r0, [r8]
    735c:	cmp	r0, #0
    7360:	beq	736c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    7364:	mov	r0, r4
    7368:	b	7380 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xae4>
    736c:	mov	r3, #33	; 0x21
    7370:	mov	r2, r5
    7374:	mov	r1, r4
    7378:	mov	r0, r6
    737c:	bl	0 <flatcc_json_parser_set_error>
    7380:	ldr	r4, [sp, #16]
    7384:	ldr	r5, [sp, #20]
    7388:	ldr	r6, [sp, #24]
    738c:	ldr	r7, [sp, #28]
    7390:	ldr	r8, [sp, #32]
    7394:	ldr	r9, [sp, #36]	; 0x24
    7398:	ldr	sl, [sp, #40]	; 0x28
    739c:	ldr	fp, [sp, #44]	; 0x2c
    73a0:	ldr	lr, [sp, #8]
    73a4:	add	sp, sp, #96	; 0x60
    73a8:	bx	lr
    73ac:	.word	0x000000f4
    73b0:	.word	0x000000dc
    73b4:	.word	0x000000e8
    73b8:	.word	0x00000100
    73bc:	.word	0x0000010c
    73c0:	.word	0x000000d0

000073c4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>:
    73c4:	mov	ip, sp
    73c8:	sub	sp, sp, #56	; 0x38
    73cc:	str	ip, [sp, #4]
    73d0:	str	lr, [sp, #8]
    73d4:	str	r4, [sp, #16]
    73d8:	str	r5, [sp, #20]
    73dc:	str	r6, [sp, #24]
    73e0:	str	r7, [sp, #28]
    73e4:	str	r8, [sp, #32]
    73e8:	mov	r7, r3
    73ec:	mov	r5, r2
    73f0:	mov	r4, r1
    73f4:	mov	r6, r0
    73f8:	mov	r2, #0
    73fc:	str	r2, [r7]
    7400:	ldr	r0, [r6]
    7404:	mov	r1, #2
    7408:	bl	0 <flatcc_builder_start_table>
    740c:	cmp	r0, #0
    7410:	bne	777c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    7414:	add	r3, sp, #44	; 0x2c
    7418:	mov	r2, r5
    741c:	mov	r1, r4
    7420:	mov	r0, r6
    7424:	bl	d7c <flatcc_json_parser_object_start>
    7428:	mov	r4, r0
    742c:	ldr	r0, [sp, #44]	; 0x2c
    7430:	cmp	r0, #0
    7434:	beq	7754 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x390>
    7438:	mov	r2, r5
    743c:	mov	r1, r4
    7440:	mov	r0, r6
    7444:	bl	b90 <flatcc_json_parser_symbol_start>
    7448:	mov	r4, r0
    744c:	mov	r1, r5
    7450:	mov	r0, r4
    7454:	bl	cc0 <flatcc_json_parser_symbol_part>
    7458:	eor	r1, r1, #97	; 0x61
    745c:	eor	r1, r1, #24832	; 0x6100
    7460:	eor	r1, r1, #6356992	; 0x610000
    7464:	eor	r1, r1, #1627389952	; 0x61000000
    7468:	eor	r2, r0, #98	; 0x62
    746c:	eor	r2, r2, #25088	; 0x6200
    7470:	eor	r2, r2, #6422528	; 0x620000
    7474:	eor	r2, r2, #1593835520	; 0x5f000000
    7478:	orr	r0, r1, r2
    747c:	cmp	r0, #0
    7480:	bne	7724 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x360>
    7484:	add	r4, r4, #8
    7488:	mov	r1, r5
    748c:	mov	r0, r4
    7490:	bl	cc0 <flatcc_json_parser_symbol_part>
    7494:	mov	r2, r1
    7498:	mov	r3, r0
    749c:	bic	ip, r3, #255	; 0xff
    74a0:	eor	r3, r2, #884	; 0x374
    74a4:	eor	r3, r3, #1011712	; 0xf7000
    74a8:	eor	r3, r3, #38797312	; 0x2500000
    74ac:	eor	r3, r3, #1610612736	; 0x60000000
    74b0:	eor	r2, ip, #29440	; 0x7300
    74b4:	eor	r2, r2, #91226112	; 0x5700000
    74b8:	eor	r2, r2, #1610612736	; 0x60000000
    74bc:	orr	r2, r3, r2
    74c0:	cmp	r2, #0
    74c4:	beq	760c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x248>
    74c8:	eor	r3, r1, #884	; 0x374
    74cc:	eor	r3, r3, #1011712	; 0xf7000
    74d0:	eor	r3, r3, #38797312	; 0x2500000
    74d4:	eor	r3, r3, #1610612736	; 0x60000000
    74d8:	eor	r2, r0, #95	; 0x5f
    74dc:	eor	r2, r2, #160768	; 0x27400
    74e0:	eor	r2, r2, #24117248	; 0x1700000
    74e4:	eor	r2, r2, #1610612736	; 0x60000000
    74e8:	orr	ip, r3, r2
    74ec:	cmp	ip, #0
    74f0:	bne	75f4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x230>
    74f4:	mov	r3, #8
    74f8:	mov	r2, r5
    74fc:	mov	r1, r4
    7500:	mov	r0, r6
    7504:	bl	118c <flatcc_json_parser_match_symbol>
    7508:	mov	r8, r0
    750c:	cmp	r4, r8
    7510:	beq	75dc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x218>
    7514:	mov	r0, #0
    7518:	str	r0, [sp, #40]	; 0x28
    751c:	add	r3, sp, #40	; 0x28
    7520:	mov	r2, r5
    7524:	mov	r1, r8
    7528:	mov	r0, r6
    752c:	bl	1ae4 <flatcc_json_parser_uint32>
    7530:	mov	r4, r0
    7534:	cmp	r8, r4
    7538:	bne	7584 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1c0>
    753c:	mov	r8, r4
    7540:	ldr	r3, [pc, #620]	; 77b4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3f0>
    7544:	add	r1, sp, #40	; 0x28
    7548:	str	r1, [sp]
    754c:	mov	r2, r5
    7550:	mov	r1, r4
    7554:	mov	r0, r6
    7558:	bl	2348 <flatcc_json_parser_symbolic_uint32>
    755c:	mov	r4, r0
    7560:	cmp	r4, r8
    7564:	beq	7578 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1b4>
    7568:	cmp	r4, r5
    756c:	moveq	r3, #1
    7570:	movne	r3, #0
    7574:	b	757c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1b8>
    7578:	mov	r3, #1
    757c:	cmp	r3, #0
    7580:	bne	777c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    7584:	ldr	r0, [sp, #40]	; 0x28
    7588:	cmp	r0, #0
    758c:	bne	75a8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1e4>
    7590:	ldr	r1, [r6, #8]
    7594:	and	ip, r1, #2
    7598:	cmp	ip, #0
    759c:	movne	r3, #1
    75a0:	moveq	r3, #0
    75a4:	b	75ac <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1e8>
    75a8:	mov	r3, #1
    75ac:	cmp	r3, #0
    75b0:	beq	7738 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    75b4:	ldr	r0, [r6]
    75b8:	mov	r1, #1
    75bc:	mov	r2, #4
    75c0:	mov	r3, #4
    75c4:	bl	0 <flatcc_builder_table_add>
    75c8:	cmp	r0, #0
    75cc:	beq	777c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    75d0:	ldr	r1, [sp, #40]	; 0x28
    75d4:	bl	d8 <flatbuffers_uint32_write_to_pe>
    75d8:	b	7738 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    75dc:	mov	r2, r5
    75e0:	mov	r1, r8
    75e4:	mov	r0, r6
    75e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    75ec:	mov	r4, r0
    75f0:	b	7738 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    75f4:	mov	r2, r5
    75f8:	mov	r1, r4
    75fc:	mov	r0, r6
    7600:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7604:	mov	r4, r0
    7608:	b	7738 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    760c:	mov	r1, r4
    7610:	mov	r4, r1
    7614:	mov	r3, #7
    7618:	mov	r2, r5
    761c:	mov	r0, r6
    7620:	bl	118c <flatcc_json_parser_match_symbol>
    7624:	mov	r1, r0
    7628:	cmp	r4, r1
    762c:	beq	7710 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x34c>
    7630:	mov	r0, #0
    7634:	mov	ip, #0
    7638:	str	ip, [sp, #48]	; 0x30
    763c:	str	r0, [sp, #52]	; 0x34
    7640:	mov	r8, r1
    7644:	add	r3, sp, #48	; 0x30
    7648:	mov	r2, r5
    764c:	mov	r1, r8
    7650:	mov	r0, r6
    7654:	bl	1d30 <flatcc_json_parser_int64>
    7658:	mov	r4, r0
    765c:	cmp	r8, r4
    7660:	bne	76ac <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x2e8>
    7664:	mov	r8, r4
    7668:	ldr	r3, [pc, #320]	; 77b0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3ec>
    766c:	add	r2, sp, #48	; 0x30
    7670:	str	r2, [sp]
    7674:	mov	r2, r5
    7678:	mov	r1, r8
    767c:	mov	r0, r6
    7680:	bl	28b8 <flatcc_json_parser_symbolic_int64>
    7684:	mov	r4, r0
    7688:	cmp	r4, r8
    768c:	beq	76a0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x2dc>
    7690:	cmp	r4, r5
    7694:	moveq	r3, #1
    7698:	movne	r3, #0
    769c:	b	76a4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x2e0>
    76a0:	mov	r3, #1
    76a4:	cmp	r3, #0
    76a8:	bne	777c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    76ac:	ldr	r3, [sp, #48]	; 0x30
    76b0:	ldr	r1, [sp, #52]	; 0x34
    76b4:	orr	ip, r1, r3
    76b8:	cmp	ip, #0
    76bc:	bne	76d8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x314>
    76c0:	ldr	r2, [r6, #8]
    76c4:	and	r2, r2, #2
    76c8:	cmp	r2, #0
    76cc:	movne	r3, #1
    76d0:	moveq	r3, #0
    76d4:	b	76dc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x318>
    76d8:	mov	r3, #1
    76dc:	cmp	r3, #0
    76e0:	beq	7738 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    76e4:	ldr	r0, [r6]
    76e8:	mov	r1, #0
    76ec:	mov	r2, #8
    76f0:	mov	r3, #8
    76f4:	bl	0 <flatcc_builder_table_add>
    76f8:	cmp	r0, #0
    76fc:	beq	777c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    7700:	ldr	r2, [sp, #48]	; 0x30
    7704:	ldr	r3, [sp, #52]	; 0x34
    7708:	bl	340 <flatbuffers_int64_write_to_pe>
    770c:	b	7738 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    7710:	mov	r2, r5
    7714:	mov	r0, r6
    7718:	bl	0 <flatcc_json_parser_unmatched_symbol>
    771c:	mov	r4, r0
    7720:	b	7738 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    7724:	mov	r2, r5
    7728:	mov	r1, r4
    772c:	mov	r0, r6
    7730:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7734:	mov	r4, r0
    7738:	add	r3, sp, #44	; 0x2c
    773c:	mov	r2, r5
    7740:	mov	r1, r4
    7744:	mov	r0, r6
    7748:	bl	e5c <flatcc_json_parser_object_end>
    774c:	mov	r4, r0
    7750:	b	742c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x68>
    7754:	ldr	r0, [r6, #24]
    7758:	cmp	r0, #0
    775c:	bne	777c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    7760:	ldr	r0, [r6]
    7764:	bl	0 <flatcc_builder_end_table>
    7768:	str	r0, [r7]
    776c:	cmp	r0, #0
    7770:	beq	777c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    7774:	mov	r0, r4
    7778:	b	7790 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3cc>
    777c:	mov	r3, #33	; 0x21
    7780:	mov	r2, r5
    7784:	mov	r1, r4
    7788:	mov	r0, r6
    778c:	bl	0 <flatcc_json_parser_set_error>
    7790:	ldr	r4, [sp, #16]
    7794:	ldr	r5, [sp, #20]
    7798:	ldr	r6, [sp, #24]
    779c:	ldr	r7, [sp, #28]
    77a0:	ldr	r8, [sp, #32]
    77a4:	ldr	lr, [sp, #8]
    77a8:	add	sp, sp, #56	; 0x38
    77ac:	bx	lr
    77b0:	.word	0x00000118
    77b4:	.word	0x00000124

000077b8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>:
    77b8:	mov	ip, sp
    77bc:	sub	sp, sp, #56	; 0x38
    77c0:	str	ip, [sp, #4]
    77c4:	str	lr, [sp, #8]
    77c8:	str	r4, [sp, #16]
    77cc:	str	r5, [sp, #20]
    77d0:	str	r6, [sp, #24]
    77d4:	str	r7, [sp, #28]
    77d8:	str	r8, [sp, #32]
    77dc:	mov	r6, r3
    77e0:	mov	r5, r2
    77e4:	mov	r4, r1
    77e8:	mov	r7, r0
    77ec:	mov	r1, #0
    77f0:	str	r1, [r6]
    77f4:	ldr	r0, [r7]
    77f8:	mov	r1, #2
    77fc:	bl	0 <flatcc_builder_start_table>
    7800:	cmp	r0, #0
    7804:	bne	7bbc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    7808:	add	r3, sp, #40	; 0x28
    780c:	mov	r2, r5
    7810:	mov	r1, r4
    7814:	mov	r0, r7
    7818:	bl	d7c <flatcc_json_parser_object_start>
    781c:	mov	r4, r0
    7820:	ldr	r2, [sp, #40]	; 0x28
    7824:	cmp	r2, #0
    7828:	beq	7b94 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3dc>
    782c:	mov	r2, r5
    7830:	mov	r1, r4
    7834:	mov	r0, r7
    7838:	bl	b90 <flatcc_json_parser_symbol_start>
    783c:	mov	r4, r0
    7840:	mov	r1, r5
    7844:	mov	r0, r4
    7848:	bl	cc0 <flatcc_json_parser_symbol_part>
    784c:	eor	r3, r1, #97	; 0x61
    7850:	eor	r3, r3, #24832	; 0x6100
    7854:	eor	r3, r3, #6356992	; 0x610000
    7858:	eor	r3, r3, #1627389952	; 0x61000000
    785c:	eor	ip, r0, #98	; 0x62
    7860:	eor	ip, ip, #25088	; 0x6200
    7864:	eor	ip, ip, #6422528	; 0x620000
    7868:	eor	ip, ip, #1593835520	; 0x5f000000
    786c:	orr	r2, r3, ip
    7870:	cmp	r2, #0
    7874:	bne	7b64 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3ac>
    7878:	add	r4, r4, #8
    787c:	mov	r1, r5
    7880:	mov	r0, r4
    7884:	bl	cc0 <flatcc_json_parser_symbol_part>
    7888:	mov	r2, r1
    788c:	mov	ip, r0
    7890:	eor	r2, r2, #884	; 0x374
    7894:	eor	r2, r2, #1011712	; 0xf7000
    7898:	eor	r2, r2, #38797312	; 0x2500000
    789c:	eor	r2, r2, #1610612736	; 0x60000000
    78a0:	eor	ip, ip, #95	; 0x5f
    78a4:	eor	ip, ip, #160768	; 0x27400
    78a8:	eor	ip, ip, #24117248	; 0x1700000
    78ac:	eor	ip, ip, #1610612736	; 0x60000000
    78b0:	orr	r2, r2, ip
    78b4:	cmp	r2, #0
    78b8:	beq	7a18 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x260>
    78bc:	bic	r0, r0, #255	; 0xff
    78c0:	eor	r1, r1, #884	; 0x374
    78c4:	eor	r1, r1, #1011712	; 0xf7000
    78c8:	eor	r1, r1, #38797312	; 0x2500000
    78cc:	eor	r1, r1, #1610612736	; 0x60000000
    78d0:	eor	r3, r0, #29440	; 0x7300
    78d4:	eor	r3, r3, #91226112	; 0x5700000
    78d8:	eor	r3, r3, #1610612736	; 0x60000000
    78dc:	orr	r2, r1, r3
    78e0:	cmp	r2, #0
    78e4:	bne	7a00 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x248>
    78e8:	mov	r1, r4
    78ec:	mov	r4, r1
    78f0:	mov	r3, #7
    78f4:	mov	r2, r5
    78f8:	mov	r0, r7
    78fc:	bl	118c <flatcc_json_parser_match_symbol>
    7900:	mov	r1, r0
    7904:	cmp	r4, r1
    7908:	beq	79ec <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x234>
    790c:	mov	r3, #0
    7910:	mov	r2, #0
    7914:	str	r2, [sp, #48]	; 0x30
    7918:	str	r3, [sp, #52]	; 0x34
    791c:	mov	r8, r1
    7920:	add	r3, sp, #48	; 0x30
    7924:	mov	r2, r5
    7928:	mov	r1, r8
    792c:	mov	r0, r7
    7930:	bl	1d30 <flatcc_json_parser_int64>
    7934:	mov	r4, r0
    7938:	cmp	r8, r4
    793c:	bne	7988 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1d0>
    7940:	mov	r8, r4
    7944:	ldr	r3, [pc, #676]	; 7bf0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x438>
    7948:	add	r1, sp, #48	; 0x30
    794c:	str	r1, [sp]
    7950:	mov	r2, r5
    7954:	mov	r1, r8
    7958:	mov	r0, r7
    795c:	bl	28b8 <flatcc_json_parser_symbolic_int64>
    7960:	mov	r4, r0
    7964:	cmp	r4, r8
    7968:	beq	797c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1c4>
    796c:	cmp	r4, r5
    7970:	moveq	r2, #1
    7974:	movne	r2, #0
    7978:	b	7980 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1c8>
    797c:	mov	r2, #1
    7980:	cmp	r2, #0
    7984:	bne	7bbc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    7988:	ldr	r2, [sp, #48]	; 0x30
    798c:	ldr	r1, [sp, #52]	; 0x34
    7990:	orr	r3, r1, r2
    7994:	cmp	r3, #0
    7998:	bne	79b4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1fc>
    799c:	ldr	r2, [r7, #8]
    79a0:	and	r1, r2, #2
    79a4:	cmp	r1, #0
    79a8:	movne	r2, #1
    79ac:	moveq	r2, #0
    79b0:	b	79b8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x200>
    79b4:	mov	r2, #1
    79b8:	cmp	r2, #0
    79bc:	beq	7b78 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    79c0:	ldr	r0, [r7]
    79c4:	mov	r1, #0
    79c8:	mov	r2, #8
    79cc:	mov	r3, #8
    79d0:	bl	0 <flatcc_builder_table_add>
    79d4:	cmp	r0, #0
    79d8:	beq	7bbc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    79dc:	ldr	r2, [sp, #48]	; 0x30
    79e0:	ldr	r3, [sp, #52]	; 0x34
    79e4:	bl	340 <flatbuffers_int64_write_to_pe>
    79e8:	b	7b78 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    79ec:	mov	r2, r5
    79f0:	mov	r0, r7
    79f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    79f8:	mov	r4, r0
    79fc:	b	7b78 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    7a00:	mov	r2, r5
    7a04:	mov	r1, r4
    7a08:	mov	r0, r7
    7a0c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a10:	mov	r4, r0
    7a14:	b	7b78 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    7a18:	add	r4, r4, #8
    7a1c:	mov	r1, r5
    7a20:	mov	r0, r4
    7a24:	bl	cc0 <flatcc_json_parser_symbol_part>
    7a28:	and	r2, r0, #-16777216	; 0xff000000
    7a2c:	eor	r3, r1, #1392	; 0x570
    7a30:	eor	r3, r3, #286720	; 0x46000
    7a34:	eor	r3, r3, #57671680	; 0x3700000
    7a38:	eor	r3, r3, #1879048192	; 0x70000000
    7a3c:	eor	r0, r2, #1929379840	; 0x73000000
    7a40:	orr	r0, r3, r0
    7a44:	cmp	r0, #0
    7a48:	bne	7b4c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x394>
    7a4c:	mov	r3, #5
    7a50:	mov	r2, r5
    7a54:	mov	r1, r4
    7a58:	mov	r0, r7
    7a5c:	bl	118c <flatcc_json_parser_match_symbol>
    7a60:	mov	r1, r0
    7a64:	cmp	r4, r1
    7a68:	beq	7b38 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x380>
    7a6c:	mov	r0, #0
    7a70:	str	r0, [sp, #44]	; 0x2c
    7a74:	mov	r8, r1
    7a78:	add	r3, sp, #44	; 0x2c
    7a7c:	mov	r2, r5
    7a80:	mov	r1, r8
    7a84:	mov	r0, r7
    7a88:	bl	1ae4 <flatcc_json_parser_uint32>
    7a8c:	mov	r4, r0
    7a90:	cmp	r8, r4
    7a94:	bne	7ae0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x328>
    7a98:	mov	r8, r4
    7a9c:	ldr	r3, [pc, #336]	; 7bf4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x43c>
    7aa0:	add	r0, sp, #44	; 0x2c
    7aa4:	str	r0, [sp]
    7aa8:	mov	r2, r5
    7aac:	mov	r1, r8
    7ab0:	mov	r0, r7
    7ab4:	bl	2348 <flatcc_json_parser_symbolic_uint32>
    7ab8:	mov	r4, r0
    7abc:	cmp	r4, r8
    7ac0:	beq	7ad4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x31c>
    7ac4:	cmp	r4, r5
    7ac8:	moveq	r1, #1
    7acc:	movne	r1, #0
    7ad0:	b	7ad8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x320>
    7ad4:	mov	r1, #1
    7ad8:	cmp	r1, #0
    7adc:	bne	7bbc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    7ae0:	ldr	r1, [sp, #44]	; 0x2c
    7ae4:	cmp	r1, #0
    7ae8:	bne	7b04 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x34c>
    7aec:	ldr	r0, [r7, #8]
    7af0:	and	r2, r0, #2
    7af4:	cmp	r2, #0
    7af8:	movne	r3, #1
    7afc:	moveq	r3, #0
    7b00:	b	7b08 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x350>
    7b04:	mov	r3, #1
    7b08:	cmp	r3, #0
    7b0c:	beq	7b78 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    7b10:	ldr	r0, [r7]
    7b14:	mov	r1, #1
    7b18:	mov	r2, #4
    7b1c:	mov	r3, #4
    7b20:	bl	0 <flatcc_builder_table_add>
    7b24:	cmp	r0, #0
    7b28:	beq	7bbc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    7b2c:	ldr	r1, [sp, #44]	; 0x2c
    7b30:	bl	d8 <flatbuffers_uint32_write_to_pe>
    7b34:	b	7b78 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    7b38:	mov	r2, r5
    7b3c:	mov	r0, r7
    7b40:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7b44:	mov	r4, r0
    7b48:	b	7b78 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    7b4c:	mov	r2, r5
    7b50:	mov	r1, r4
    7b54:	mov	r0, r7
    7b58:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7b5c:	mov	r4, r0
    7b60:	b	7b78 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    7b64:	mov	r2, r5
    7b68:	mov	r1, r4
    7b6c:	mov	r0, r7
    7b70:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7b74:	mov	r4, r0
    7b78:	add	r3, sp, #40	; 0x28
    7b7c:	mov	r2, r5
    7b80:	mov	r1, r4
    7b84:	mov	r0, r7
    7b88:	bl	e5c <flatcc_json_parser_object_end>
    7b8c:	mov	r4, r0
    7b90:	b	7820 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x68>
    7b94:	ldr	ip, [r7, #24]
    7b98:	cmp	ip, #0
    7b9c:	bne	7bbc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    7ba0:	ldr	r0, [r7]
    7ba4:	bl	0 <flatcc_builder_end_table>
    7ba8:	str	r0, [r6]
    7bac:	cmp	r0, #0
    7bb0:	beq	7bbc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    7bb4:	mov	r0, r4
    7bb8:	b	7bd0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x418>
    7bbc:	mov	r3, #33	; 0x21
    7bc0:	mov	r2, r5
    7bc4:	mov	r1, r4
    7bc8:	mov	r0, r7
    7bcc:	bl	0 <flatcc_json_parser_set_error>
    7bd0:	ldr	r4, [sp, #16]
    7bd4:	ldr	r5, [sp, #20]
    7bd8:	ldr	r6, [sp, #24]
    7bdc:	ldr	r7, [sp, #28]
    7be0:	ldr	r8, [sp, #32]
    7be4:	ldr	lr, [sp, #8]
    7be8:	add	sp, sp, #56	; 0x38
    7bec:	bx	lr
    7bf0:	.word	0x0000013c
    7bf4:	.word	0x00000130

00007bf8 <MyGame_Example_TestBase64_parse_json_table>:
    7bf8:	mov	ip, sp
    7bfc:	sub	sp, sp, #48	; 0x30
    7c00:	str	ip, [sp, #4]
    7c04:	str	lr, [sp, #8]
    7c08:	str	r4, [sp, #16]
    7c0c:	str	r5, [sp, #20]
    7c10:	str	r6, [sp, #24]
    7c14:	str	r7, [sp, #28]
    7c18:	str	r8, [sp, #32]
    7c1c:	mov	r5, r3
    7c20:	mov	r6, r2
    7c24:	mov	r7, r1
    7c28:	mov	r8, r0
    7c2c:	mov	r1, #0
    7c30:	str	r1, [r5]
    7c34:	ldr	r0, [r8]
    7c38:	mov	r1, #3
    7c3c:	bl	0 <flatcc_builder_start_table>
    7c40:	cmp	r0, #0
    7c44:	bne	7f78 <MyGame_Example_TestBase64_parse_json_table+0x380>
    7c48:	add	r3, sp, #40	; 0x28
    7c4c:	mov	r2, r6
    7c50:	mov	r1, r7
    7c54:	mov	r0, r8
    7c58:	bl	d7c <flatcc_json_parser_object_start>
    7c5c:	mov	r7, r0
    7c60:	ldr	r0, [sp, #40]	; 0x28
    7c64:	cmp	r0, #0
    7c68:	beq	7f50 <MyGame_Example_TestBase64_parse_json_table+0x358>
    7c6c:	mov	r2, r6
    7c70:	mov	r1, r7
    7c74:	mov	r0, r8
    7c78:	bl	b90 <flatcc_json_parser_symbol_start>
    7c7c:	mov	r7, r0
    7c80:	mov	r1, r6
    7c84:	mov	r0, r7
    7c88:	bl	cc0 <flatcc_json_parser_symbol_part>
    7c8c:	mov	r3, r1
    7c90:	movw	ip, #29556	; 0x7374
    7c94:	movt	ip, #28261	; 0x6e65
    7c98:	cmp	r3, ip
    7c9c:	bne	7cb8 <MyGame_Example_TestBase64_parse_json_table+0xc0>
    7ca0:	mov	r2, r0
    7ca4:	movw	r3, #0
    7ca8:	movt	r3, #25956	; 0x6564
    7cac:	cmp	r2, r3
    7cb0:	bcc	7e6c <MyGame_Example_TestBase64_parse_json_table+0x274>
    7cb4:	b	7ccc <MyGame_Example_TestBase64_parse_json_table+0xd4>
    7cb8:	mov	ip, r1
    7cbc:	movw	r3, #29556	; 0x7374
    7cc0:	movt	r3, #28261	; 0x6e65
    7cc4:	cmp	ip, r3
    7cc8:	bcc	7e6c <MyGame_Example_TestBase64_parse_json_table+0x274>
    7ccc:	mov	r3, r0
    7cd0:	mov	r2, r1
    7cd4:	bic	ip, r3, #255	; 0xff
    7cd8:	eor	r3, r2, #100	; 0x64
    7cdc:	eor	r3, r3, #158720	; 0x26c00
    7ce0:	eor	r3, r3, #91226112	; 0x5700000
    7ce4:	eor	r3, r3, #1879048192	; 0x70000000
    7ce8:	eor	r2, ip, #24832	; 0x6100
    7cec:	eor	r2, r2, #24379392	; 0x1740000
    7cf0:	eor	r2, r2, #1610612736	; 0x60000000
    7cf4:	orr	r2, r3, r2
    7cf8:	cmp	r2, #0
    7cfc:	beq	7dd8 <MyGame_Example_TestBase64_parse_json_table+0x1e0>
    7d00:	bic	r3, r0, #255	; 0xff
    7d04:	bic	r3, r3, #65280	; 0xff00
    7d08:	eor	ip, r1, #884	; 0x374
    7d0c:	eor	ip, ip, #356352	; 0x57000
    7d10:	eor	ip, ip, #241172480	; 0xe600000
    7d14:	eor	ip, ip, #1610612736	; 0x60000000
    7d18:	eor	r0, r3, #23330816	; 0x1640000
    7d1c:	eor	r0, r0, #1677721600	; 0x64000000
    7d20:	orr	ip, ip, r0
    7d24:	cmp	ip, #0
    7d28:	bne	7dc0 <MyGame_Example_TestBase64_parse_json_table+0x1c8>
    7d2c:	mov	r3, #6
    7d30:	mov	r2, r6
    7d34:	mov	r1, r7
    7d38:	mov	r0, r8
    7d3c:	bl	118c <flatcc_json_parser_match_symbol>
    7d40:	mov	r1, r0
    7d44:	cmp	r7, r1
    7d48:	beq	7dac <MyGame_Example_TestBase64_parse_json_table+0x1b4>
    7d4c:	add	r3, sp, #44	; 0x2c
    7d50:	mov	r2, #0
    7d54:	str	r2, [sp]
    7d58:	mov	r2, r6
    7d5c:	mov	r0, r8
    7d60:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    7d64:	mov	r7, r0
    7d68:	ldr	r3, [sp, #44]	; 0x2c
    7d6c:	cmp	r3, #0
    7d70:	beq	7d94 <MyGame_Example_TestBase64_parse_json_table+0x19c>
    7d74:	ldr	r0, [r8]
    7d78:	mov	r1, #2
    7d7c:	bl	0 <flatcc_builder_table_add_offset>
    7d80:	mov	r4, r0
    7d84:	cmp	r4, #0
    7d88:	moveq	r0, #1
    7d8c:	movne	r0, #0
    7d90:	b	7d98 <MyGame_Example_TestBase64_parse_json_table+0x1a0>
    7d94:	mov	r0, #1
    7d98:	cmp	r0, #0
    7d9c:	bne	7f78 <MyGame_Example_TestBase64_parse_json_table+0x380>
    7da0:	ldr	ip, [sp, #44]	; 0x2c
    7da4:	str	ip, [r4]
    7da8:	b	7f34 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    7dac:	mov	r2, r6
    7db0:	mov	r0, r8
    7db4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7db8:	mov	r7, r0
    7dbc:	b	7f34 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    7dc0:	mov	r2, r6
    7dc4:	mov	r1, r7
    7dc8:	mov	r0, r8
    7dcc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7dd0:	mov	r7, r0
    7dd4:	b	7f34 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    7dd8:	mov	r3, #7
    7ddc:	mov	r2, r6
    7de0:	mov	r1, r7
    7de4:	mov	r0, r8
    7de8:	bl	118c <flatcc_json_parser_match_symbol>
    7dec:	mov	r1, r0
    7df0:	cmp	r7, r1
    7df4:	beq	7e58 <MyGame_Example_TestBase64_parse_json_table+0x260>
    7df8:	add	r3, sp, #44	; 0x2c
    7dfc:	mov	ip, #1
    7e00:	str	ip, [sp]
    7e04:	mov	r2, r6
    7e08:	mov	r0, r8
    7e0c:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    7e10:	mov	r7, r0
    7e14:	ldr	r2, [sp, #44]	; 0x2c
    7e18:	cmp	r2, #0
    7e1c:	beq	7e40 <MyGame_Example_TestBase64_parse_json_table+0x248>
    7e20:	ldr	r0, [r8]
    7e24:	mov	r1, #1
    7e28:	bl	0 <flatcc_builder_table_add_offset>
    7e2c:	mov	r4, r0
    7e30:	cmp	r4, #0
    7e34:	moveq	r0, #1
    7e38:	movne	r0, #0
    7e3c:	b	7e44 <MyGame_Example_TestBase64_parse_json_table+0x24c>
    7e40:	mov	r0, #1
    7e44:	cmp	r0, #0
    7e48:	bne	7f78 <MyGame_Example_TestBase64_parse_json_table+0x380>
    7e4c:	ldr	r0, [sp, #44]	; 0x2c
    7e50:	str	r0, [r4]
    7e54:	b	7f34 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    7e58:	mov	r2, r6
    7e5c:	mov	r0, r8
    7e60:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7e64:	mov	r7, r0
    7e68:	b	7f34 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    7e6c:	mov	r2, #0
    7e70:	eor	r3, r1, #97	; 0x61
    7e74:	eor	r3, r3, #95232	; 0x17400
    7e78:	eor	r3, r3, #73400320	; 0x4600000
    7e7c:	eor	r3, r3, #1610612736	; 0x60000000
    7e80:	orr	r3, r3, r2
    7e84:	cmp	r3, #0
    7e88:	bne	7f20 <MyGame_Example_TestBase64_parse_json_table+0x328>
    7e8c:	mov	r3, #4
    7e90:	mov	r2, r6
    7e94:	mov	r1, r7
    7e98:	mov	r0, r8
    7e9c:	bl	118c <flatcc_json_parser_match_symbol>
    7ea0:	mov	r1, r0
    7ea4:	cmp	r7, r1
    7ea8:	beq	7f0c <MyGame_Example_TestBase64_parse_json_table+0x314>
    7eac:	add	r3, sp, #44	; 0x2c
    7eb0:	mov	r0, #0
    7eb4:	str	r0, [sp]
    7eb8:	mov	r2, r6
    7ebc:	mov	r0, r8
    7ec0:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    7ec4:	mov	r7, r0
    7ec8:	ldr	r1, [sp, #44]	; 0x2c
    7ecc:	cmp	r1, #0
    7ed0:	beq	7ef4 <MyGame_Example_TestBase64_parse_json_table+0x2fc>
    7ed4:	ldr	r0, [r8]
    7ed8:	mov	r1, #0
    7edc:	bl	0 <flatcc_builder_table_add_offset>
    7ee0:	mov	r4, r0
    7ee4:	cmp	r4, #0
    7ee8:	moveq	r2, #1
    7eec:	movne	r2, #0
    7ef0:	b	7ef8 <MyGame_Example_TestBase64_parse_json_table+0x300>
    7ef4:	mov	r2, #1
    7ef8:	cmp	r2, #0
    7efc:	bne	7f78 <MyGame_Example_TestBase64_parse_json_table+0x380>
    7f00:	ldr	r2, [sp, #44]	; 0x2c
    7f04:	str	r2, [r4]
    7f08:	b	7f34 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    7f0c:	mov	r2, r6
    7f10:	mov	r0, r8
    7f14:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7f18:	mov	r7, r0
    7f1c:	b	7f34 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    7f20:	mov	r2, r6
    7f24:	mov	r1, r7
    7f28:	mov	r0, r8
    7f2c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7f30:	mov	r7, r0
    7f34:	add	r3, sp, #40	; 0x28
    7f38:	mov	r2, r6
    7f3c:	mov	r1, r7
    7f40:	mov	r0, r8
    7f44:	bl	e5c <flatcc_json_parser_object_end>
    7f48:	mov	r7, r0
    7f4c:	b	7c60 <MyGame_Example_TestBase64_parse_json_table+0x68>
    7f50:	ldr	r0, [r8, #24]
    7f54:	cmp	r0, #0
    7f58:	bne	7f78 <MyGame_Example_TestBase64_parse_json_table+0x380>
    7f5c:	ldr	r0, [r8]
    7f60:	bl	0 <flatcc_builder_end_table>
    7f64:	str	r0, [r5]
    7f68:	cmp	r0, #0
    7f6c:	beq	7f78 <MyGame_Example_TestBase64_parse_json_table+0x380>
    7f70:	mov	r0, r7
    7f74:	b	7f8c <MyGame_Example_TestBase64_parse_json_table+0x394>
    7f78:	mov	r3, #33	; 0x21
    7f7c:	mov	r2, r6
    7f80:	mov	r1, r7
    7f84:	mov	r0, r8
    7f88:	bl	0 <flatcc_json_parser_set_error>
    7f8c:	ldr	r4, [sp, #16]
    7f90:	ldr	r5, [sp, #20]
    7f94:	ldr	r6, [sp, #24]
    7f98:	ldr	r7, [sp, #28]
    7f9c:	ldr	r8, [sp, #32]
    7fa0:	ldr	lr, [sp, #8]
    7fa4:	add	sp, sp, #48	; 0x30
    7fa8:	bx	lr

00007fac <MyGame_Example_Monster_parse_json_table>:
    7fac:	mov	ip, sp
    7fb0:	sub	sp, sp, #160	; 0xa0
    7fb4:	str	ip, [sp, #16]
    7fb8:	str	lr, [sp, #20]
    7fbc:	str	r4, [sp, #24]
    7fc0:	str	r5, [sp, #28]
    7fc4:	str	r6, [sp, #32]
    7fc8:	str	r7, [sp, #36]	; 0x24
    7fcc:	str	r8, [sp, #40]	; 0x28
    7fd0:	str	r9, [sp, #44]	; 0x2c
    7fd4:	str	sl, [sp, #48]	; 0x30
    7fd8:	str	fp, [sp, #52]	; 0x34
    7fdc:	mov	r8, r3
    7fe0:	mov	r5, r2
    7fe4:	mov	r4, r1
    7fe8:	mov	r6, r0
    7fec:	mov	r3, #0
    7ff0:	str	r3, [r8]
    7ff4:	ldr	r0, [r6]
    7ff8:	mov	r1, #36	; 0x24
    7ffc:	bl	0 <flatcc_builder_start_table>
    8000:	cmp	r0, #0
    8004:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8008:	mov	r3, #1
    800c:	add	r0, sp, #84	; 0x54
    8010:	str	r0, [sp]
    8014:	mov	r2, r5
    8018:	mov	r1, r4
    801c:	mov	r0, r6
    8020:	bl	0 <flatcc_json_parser_prepare_unions>
    8024:	cmp	r5, r0
    8028:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    802c:	add	r3, sp, #76	; 0x4c
    8030:	mov	r2, r5
    8034:	mov	r1, r4
    8038:	mov	r0, r6
    803c:	bl	d7c <flatcc_json_parser_object_start>
    8040:	mov	r4, r0
    8044:	ldr	ip, [sp, #76]	; 0x4c
    8048:	cmp	ip, #0
    804c:	beq	b3cc <MyGame_Example_Monster_parse_json_table+0x3420>
    8050:	mov	r2, r5
    8054:	mov	r1, r4
    8058:	mov	r0, r6
    805c:	bl	b90 <flatcc_json_parser_symbol_start>
    8060:	mov	r4, r0
    8064:	mov	r1, r5
    8068:	mov	r0, r4
    806c:	bl	cc0 <flatcc_json_parser_symbol_part>
    8070:	mov	fp, r1
    8074:	mov	sl, r0
    8078:	mov	r1, fp
    807c:	movw	r3, #29556	; 0x7374
    8080:	movt	r3, #29797	; 0x7465
    8084:	cmp	r1, r3
    8088:	bne	80a4 <MyGame_Example_Monster_parse_json_table+0xf8>
    808c:	mov	r1, sl
    8090:	movw	r0, #29281	; 0x7261
    8094:	movt	r0, #24946	; 0x6172
    8098:	cmp	r1, r0
    809c:	bcc	a370 <MyGame_Example_Monster_parse_json_table+0x23c4>
    80a0:	b	80b8 <MyGame_Example_Monster_parse_json_table+0x10c>
    80a4:	mov	r1, fp
    80a8:	movw	r2, #29556	; 0x7374
    80ac:	movt	r2, #29797	; 0x7465
    80b0:	cmp	r1, r2
    80b4:	bcc	a370 <MyGame_Example_Monster_parse_json_table+0x23c4>
    80b8:	mov	r1, sl
    80bc:	mov	r3, fp
    80c0:	movw	r2, #29556	; 0x7374
    80c4:	movt	r2, #29797	; 0x7465
    80c8:	cmp	r3, r2
    80cc:	bne	80e4 <MyGame_Example_Monster_parse_json_table+0x138>
    80d0:	movw	r2, #0
    80d4:	movt	r2, #26163	; 0x6633
    80d8:	cmp	r1, r2
    80dc:	bcc	80f8 <MyGame_Example_Monster_parse_json_table+0x14c>
    80e0:	b	8fe8 <MyGame_Example_Monster_parse_json_table+0x103c>
    80e4:	mov	r2, fp
    80e8:	movw	r3, #29556	; 0x7374
    80ec:	movt	r3, #29797	; 0x7465
    80f0:	cmp	r2, r3
    80f4:	bcs	8fe8 <MyGame_Example_Monster_parse_json_table+0x103c>
    80f8:	mov	ip, fp
    80fc:	eor	r2, ip, #884	; 0x374
    8100:	eor	r2, r2, #356352	; 0x57000
    8104:	eor	r2, r2, #73400320	; 0x4600000
    8108:	eor	r2, r2, #1879048192	; 0x70000000
    810c:	mov	r0, sl
    8110:	eor	r1, r0, #97	; 0x61
    8114:	eor	r1, r1, #29184	; 0x7200
    8118:	eor	r1, r1, #7471104	; 0x720000
    811c:	eor	r1, r1, #1627389952	; 0x61000000
    8120:	orr	ip, r2, r1
    8124:	cmp	ip, #0
    8128:	bne	8970 <MyGame_Example_Monster_parse_json_table+0x9c4>
    812c:	add	r4, r4, #8
    8130:	mov	r1, r5
    8134:	mov	r0, r4
    8138:	bl	cc0 <flatcc_json_parser_symbol_part>
    813c:	mov	sl, r1
    8140:	mov	r9, r0
    8144:	mov	r0, sl
    8148:	movw	r1, #26227	; 0x6673
    814c:	movt	r1, #31087	; 0x796f
    8150:	cmp	r0, r1
    8154:	bne	8170 <MyGame_Example_Monster_parse_json_table+0x1c4>
    8158:	mov	r1, r9
    815c:	movw	ip, #26990	; 0x696e
    8160:	movt	ip, #29810	; 0x7472
    8164:	cmp	r1, ip
    8168:	bcc	8180 <MyGame_Example_Monster_parse_json_table+0x1d4>
    816c:	b	84c4 <MyGame_Example_Monster_parse_json_table+0x518>
    8170:	movw	ip, #26227	; 0x6673
    8174:	movt	ip, #31087	; 0x796f
    8178:	cmp	r0, ip
    817c:	bcs	84c4 <MyGame_Example_Monster_parse_json_table+0x518>
    8180:	mov	r0, sl
    8184:	mov	ip, r9
    8188:	eor	r3, r0, #98	; 0x62
    818c:	eor	r3, r3, #26112	; 0x6600
    8190:	eor	r3, r3, #7274496	; 0x6f0000
    8194:	eor	r3, r3, #2030043136	; 0x79000000
    8198:	eor	r1, ip, #115	; 0x73
    819c:	eor	r1, r1, #224256	; 0x36c00
    81a0:	eor	r1, r1, #57409536	; 0x36c0000
    81a4:	eor	r1, r1, #1811939328	; 0x6c000000
    81a8:	orr	r2, r3, r1
    81ac:	cmp	r2, #0
    81b0:	bne	8320 <MyGame_Example_Monster_parse_json_table+0x374>
    81b4:	mov	fp, r4
    81b8:	mov	r3, #8
    81bc:	mov	r2, r5
    81c0:	mov	r1, fp
    81c4:	mov	r0, r6
    81c8:	bl	118c <flatcc_json_parser_match_symbol>
    81cc:	mov	r4, r0
    81d0:	cmp	fp, r4
    81d4:	beq	8320 <MyGame_Example_Monster_parse_json_table+0x374>
    81d8:	ldr	r0, [r6]
    81dc:	mov	r1, #1
    81e0:	mov	r2, #1
    81e4:	mvn	r3, #0
    81e8:	bl	0 <flatcc_builder_start_vector>
    81ec:	cmp	r0, #0
    81f0:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    81f4:	add	r3, sp, #76	; 0x4c
    81f8:	mov	r2, r5
    81fc:	mov	r1, r4
    8200:	mov	r0, r6
    8204:	bl	f84 <flatcc_json_parser_array_start>
    8208:	mov	r4, r0
    820c:	ldr	r0, [sp, #76]	; 0x4c
    8210:	cmp	r0, #0
    8214:	beq	82d0 <MyGame_Example_Monster_parse_json_table+0x324>
    8218:	mov	r0, #0
    821c:	strb	r0, [sp, #60]	; 0x3c
    8220:	ldr	r0, [r6]
    8224:	mov	r1, #1
    8228:	bl	0 <flatcc_builder_extend_vector>
    822c:	mov	r9, r0
    8230:	cmp	r0, #0
    8234:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8238:	mov	r1, r4
    823c:	mov	sl, r1
    8240:	add	r3, sp, #60	; 0x3c
    8244:	mov	r2, r5
    8248:	mov	r0, r6
    824c:	bl	2048 <flatcc_json_parser_bool>
    8250:	mov	r4, r0
    8254:	cmp	sl, r4
    8258:	bne	82a4 <MyGame_Example_Monster_parse_json_table+0x2f8>
    825c:	mov	sl, r4
    8260:	ldr	r3, [pc, #2800]	; 8d58 <MyGame_Example_Monster_parse_json_table+0xdac>
    8264:	add	r0, sp, #60	; 0x3c
    8268:	str	r0, [sp]
    826c:	mov	r2, r5
    8270:	mov	r1, sl
    8274:	mov	r0, r6
    8278:	bl	3014 <flatcc_json_parser_symbolic_bool>
    827c:	mov	r4, r0
    8280:	cmp	r4, sl
    8284:	beq	8298 <MyGame_Example_Monster_parse_json_table+0x2ec>
    8288:	cmp	r4, r5
    828c:	moveq	r1, #1
    8290:	movne	r1, #0
    8294:	b	829c <MyGame_Example_Monster_parse_json_table+0x2f0>
    8298:	mov	r1, #1
    829c:	cmp	r1, #0
    82a0:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    82a4:	ldrb	r3, [sp, #60]	; 0x3c
    82a8:	and	r1, r3, #255	; 0xff
    82ac:	mov	r0, r9
    82b0:	bl	50c <flatbuffers_bool_write_to_pe>
    82b4:	add	r3, sp, #76	; 0x4c
    82b8:	mov	r2, r5
    82bc:	mov	r1, r4
    82c0:	mov	r0, r6
    82c4:	bl	1064 <flatcc_json_parser_array_end>
    82c8:	mov	r4, r0
    82cc:	b	820c <MyGame_Example_Monster_parse_json_table+0x260>
    82d0:	ldr	r0, [r6]
    82d4:	bl	0 <flatcc_builder_end_vector>
    82d8:	str	r0, [sp, #80]	; 0x50
    82dc:	ldr	r1, [sp, #80]	; 0x50
    82e0:	cmp	r1, #0
    82e4:	beq	8308 <MyGame_Example_Monster_parse_json_table+0x35c>
    82e8:	ldr	r0, [r6]
    82ec:	mov	r1, #24
    82f0:	bl	0 <flatcc_builder_table_add_offset>
    82f4:	mov	r7, r0
    82f8:	cmp	r7, #0
    82fc:	moveq	r2, #1
    8300:	movne	r2, #0
    8304:	b	830c <MyGame_Example_Monster_parse_json_table+0x360>
    8308:	mov	r2, #1
    830c:	cmp	r2, #0
    8310:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8314:	ldr	r3, [sp, #80]	; 0x50
    8318:	str	r3, [r7]
    831c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8320:	eor	r3, sl, #115	; 0x73
    8324:	eor	r3, r3, #26112	; 0x6600
    8328:	eor	r3, r3, #7274496	; 0x6f0000
    832c:	eor	r3, r3, #2030043136	; 0x79000000
    8330:	eor	r0, r9, #101	; 0x65
    8334:	eor	r0, r0, #160768	; 0x27400
    8338:	eor	r0, r0, #258998272	; 0xf700000
    833c:	eor	r0, r0, #1610612736	; 0x60000000
    8340:	orr	r0, r3, r0
    8344:	cmp	r0, #0
    8348:	bne	84ac <MyGame_Example_Monster_parse_json_table+0x500>
    834c:	add	r9, r4, #8
    8350:	mov	r1, r5
    8354:	mov	r0, r9
    8358:	bl	cc0 <flatcc_json_parser_symbol_part>
    835c:	bic	r3, r0, #255	; 0xff
    8360:	eor	r2, r1, #114	; 0x72
    8364:	eor	r2, r2, #226304	; 0x37400
    8368:	eor	r2, r2, #74448896	; 0x4700000
    836c:	eor	r2, r2, #1610612736	; 0x60000000
    8370:	eor	r1, r3, #226304	; 0x37400
    8374:	eor	r1, r1, #90177536	; 0x5600000
    8378:	eor	r1, r1, #1879048192	; 0x70000000
    837c:	orr	r0, r2, r1
    8380:	cmp	r0, #0
    8384:	bne	8494 <MyGame_Example_Monster_parse_json_table+0x4e8>
    8388:	mov	r3, #7
    838c:	mov	r2, r5
    8390:	mov	r1, r9
    8394:	mov	r0, r6
    8398:	bl	118c <flatcc_json_parser_match_symbol>
    839c:	mov	r4, r0
    83a0:	cmp	r9, r4
    83a4:	beq	847c <MyGame_Example_Monster_parse_json_table+0x4d0>
    83a8:	ldr	r0, [r6]
    83ac:	mov	r1, #8
    83b0:	mov	r2, #4
    83b4:	mvn	r3, #-536870912	; 0xe0000000
    83b8:	bl	0 <flatcc_builder_start_vector>
    83bc:	cmp	r0, #0
    83c0:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    83c4:	add	r3, sp, #76	; 0x4c
    83c8:	mov	r2, r5
    83cc:	mov	r1, r4
    83d0:	mov	r0, r6
    83d4:	bl	f84 <flatcc_json_parser_array_start>
    83d8:	mov	r4, r0
    83dc:	ldr	r1, [sp, #76]	; 0x4c
    83e0:	cmp	r1, #0
    83e4:	beq	842c <MyGame_Example_Monster_parse_json_table+0x480>
    83e8:	ldr	r0, [r6]
    83ec:	mov	r1, #1
    83f0:	bl	0 <flatcc_builder_extend_vector>
    83f4:	mov	r3, r0
    83f8:	cmp	r3, #0
    83fc:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8400:	mov	r2, r5
    8404:	mov	r1, r4
    8408:	mov	r0, r6
    840c:	bl	58e0 <MyGame_Example_Ability_parse_json_struct_inline>
    8410:	add	r3, sp, #76	; 0x4c
    8414:	mov	r2, r5
    8418:	mov	r1, r0
    841c:	mov	r0, r6
    8420:	bl	1064 <flatcc_json_parser_array_end>
    8424:	mov	r4, r0
    8428:	b	83dc <MyGame_Example_Monster_parse_json_table+0x430>
    842c:	ldr	r0, [r6]
    8430:	bl	0 <flatcc_builder_end_vector>
    8434:	str	r0, [sp, #80]	; 0x50
    8438:	ldr	ip, [sp, #80]	; 0x50
    843c:	cmp	ip, #0
    8440:	beq	8464 <MyGame_Example_Monster_parse_json_table+0x4b8>
    8444:	ldr	r0, [r6]
    8448:	mov	r1, #29
    844c:	bl	0 <flatcc_builder_table_add_offset>
    8450:	mov	r7, r0
    8454:	cmp	r0, #0
    8458:	moveq	r0, #1
    845c:	movne	r0, #0
    8460:	b	8468 <MyGame_Example_Monster_parse_json_table+0x4bc>
    8464:	mov	r0, #1
    8468:	cmp	r0, #0
    846c:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8470:	ldr	r3, [sp, #80]	; 0x50
    8474:	str	r3, [r7]
    8478:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    847c:	mov	r2, r5
    8480:	mov	r1, r4
    8484:	mov	r0, r6
    8488:	bl	0 <flatcc_json_parser_unmatched_symbol>
    848c:	mov	r4, r0
    8490:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8494:	mov	r2, r5
    8498:	mov	r1, r9
    849c:	mov	r0, r6
    84a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    84a4:	mov	r4, r0
    84a8:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    84ac:	mov	r2, r5
    84b0:	mov	r1, r4
    84b4:	mov	r0, r6
    84b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    84bc:	mov	r4, r0
    84c0:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    84c4:	mov	r0, sl
    84c8:	mov	ip, r9
    84cc:	eor	r0, r0, #115	; 0x73
    84d0:	eor	r0, r0, #26112	; 0x6600
    84d4:	eor	r0, r0, #7274496	; 0x6f0000
    84d8:	eor	r0, r0, #2030043136	; 0x79000000
    84dc:	eor	r3, ip, #110	; 0x6e
    84e0:	eor	r3, r3, #26880	; 0x6900
    84e4:	eor	r3, r3, #7471104	; 0x720000
    84e8:	eor	r3, r3, #1946157056	; 0x74000000
    84ec:	orr	r3, r0, r3
    84f0:	cmp	r3, #0
    84f4:	bne	87bc <MyGame_Example_Monster_parse_json_table+0x810>
    84f8:	add	r9, r4, #8
    84fc:	mov	r1, r5
    8500:	mov	r0, r9
    8504:	bl	cc0 <flatcc_json_parser_symbol_part>
    8508:	mov	r2, r1
    850c:	bic	r2, r2, #255	; 0xff
    8510:	bic	r2, r2, #65280	; 0xff00
    8514:	mov	r0, #0
    8518:	eor	r2, r2, #3276800	; 0x320000
    851c:	eor	r2, r2, #1728053248	; 0x67000000
    8520:	orr	ip, r2, r0
    8524:	cmp	ip, #0
    8528:	beq	868c <MyGame_Example_Monster_parse_json_table+0x6e0>
    852c:	and	r2, r1, #-16777216	; 0xff000000
    8530:	mov	r0, #0
    8534:	eor	r3, r2, #1728053248	; 0x67000000
    8538:	orr	r0, r3, r0
    853c:	cmp	r0, #0
    8540:	bne	8674 <MyGame_Example_Monster_parse_json_table+0x6c8>
    8544:	mov	r3, #1
    8548:	mov	r2, r5
    854c:	mov	r1, r9
    8550:	mov	r0, r6
    8554:	bl	118c <flatcc_json_parser_match_symbol>
    8558:	mov	r4, r0
    855c:	cmp	r9, r4
    8560:	beq	865c <MyGame_Example_Monster_parse_json_table+0x6b0>
    8564:	ldr	r0, [r6]
    8568:	bl	0 <flatcc_builder_start_offset_vector>
    856c:	cmp	r0, #0
    8570:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8574:	add	r3, sp, #76	; 0x4c
    8578:	mov	r2, r5
    857c:	mov	r1, r4
    8580:	mov	r0, r6
    8584:	bl	f84 <flatcc_json_parser_array_start>
    8588:	mov	r4, r0
    858c:	ldr	r0, [sp, #76]	; 0x4c
    8590:	cmp	r0, #0
    8594:	beq	860c <MyGame_Example_Monster_parse_json_table+0x660>
    8598:	add	r3, sp, #80	; 0x50
    859c:	mov	r2, r5
    85a0:	mov	r1, r4
    85a4:	mov	r0, r6
    85a8:	bl	0 <flatcc_json_parser_build_string>
    85ac:	mov	r4, r0
    85b0:	ldr	ip, [sp, #80]	; 0x50
    85b4:	cmp	ip, #0
    85b8:	beq	85dc <MyGame_Example_Monster_parse_json_table+0x630>
    85bc:	ldr	r0, [r6]
    85c0:	mov	r1, #1
    85c4:	bl	0 <flatcc_builder_extend_offset_vector>
    85c8:	mov	r7, r0
    85cc:	cmp	r7, #0
    85d0:	moveq	r1, #1
    85d4:	movne	r1, #0
    85d8:	b	85e0 <MyGame_Example_Monster_parse_json_table+0x634>
    85dc:	mov	r1, #1
    85e0:	cmp	r1, #0
    85e4:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    85e8:	ldr	r2, [sp, #80]	; 0x50
    85ec:	str	r2, [r7]
    85f0:	add	r3, sp, #76	; 0x4c
    85f4:	mov	r2, r5
    85f8:	mov	r1, r4
    85fc:	mov	r0, r6
    8600:	bl	1064 <flatcc_json_parser_array_end>
    8604:	mov	r4, r0
    8608:	b	858c <MyGame_Example_Monster_parse_json_table+0x5e0>
    860c:	ldr	r0, [r6]
    8610:	bl	0 <flatcc_builder_end_offset_vector>
    8614:	str	r0, [sp, #80]	; 0x50
    8618:	ldr	r0, [sp, #80]	; 0x50
    861c:	cmp	r0, #0
    8620:	beq	8644 <MyGame_Example_Monster_parse_json_table+0x698>
    8624:	ldr	r0, [r6]
    8628:	mov	r1, #10
    862c:	bl	0 <flatcc_builder_table_add_offset>
    8630:	mov	r7, r0
    8634:	cmp	r7, #0
    8638:	moveq	r2, #1
    863c:	movne	r2, #0
    8640:	b	8648 <MyGame_Example_Monster_parse_json_table+0x69c>
    8644:	mov	r2, #1
    8648:	cmp	r2, #0
    864c:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8650:	ldr	ip, [sp, #80]	; 0x50
    8654:	str	ip, [r7]
    8658:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    865c:	mov	r2, r5
    8660:	mov	r1, r4
    8664:	mov	r0, r6
    8668:	bl	0 <flatcc_json_parser_unmatched_symbol>
    866c:	mov	r4, r0
    8670:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8674:	mov	r2, r5
    8678:	mov	r1, r9
    867c:	mov	r0, r6
    8680:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8684:	mov	r4, r0
    8688:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    868c:	mov	r3, #2
    8690:	mov	r2, r5
    8694:	mov	r1, r9
    8698:	mov	r0, r6
    869c:	bl	118c <flatcc_json_parser_match_symbol>
    86a0:	mov	r4, r0
    86a4:	cmp	r9, r4
    86a8:	beq	87a4 <MyGame_Example_Monster_parse_json_table+0x7f8>
    86ac:	ldr	r0, [r6]
    86b0:	bl	0 <flatcc_builder_start_offset_vector>
    86b4:	cmp	r0, #0
    86b8:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    86bc:	add	r3, sp, #76	; 0x4c
    86c0:	mov	r2, r5
    86c4:	mov	r1, r4
    86c8:	mov	r0, r6
    86cc:	bl	f84 <flatcc_json_parser_array_start>
    86d0:	mov	r4, r0
    86d4:	ldr	ip, [sp, #76]	; 0x4c
    86d8:	cmp	ip, #0
    86dc:	beq	8754 <MyGame_Example_Monster_parse_json_table+0x7a8>
    86e0:	add	r3, sp, #80	; 0x50
    86e4:	mov	r2, r5
    86e8:	mov	r1, r4
    86ec:	mov	r0, r6
    86f0:	bl	0 <flatcc_json_parser_build_string>
    86f4:	mov	r4, r0
    86f8:	ldr	ip, [sp, #80]	; 0x50
    86fc:	cmp	ip, #0
    8700:	beq	8724 <MyGame_Example_Monster_parse_json_table+0x778>
    8704:	ldr	r0, [r6]
    8708:	mov	r1, #1
    870c:	bl	0 <flatcc_builder_extend_offset_vector>
    8710:	mov	r7, r0
    8714:	cmp	r0, #0
    8718:	moveq	r1, #1
    871c:	movne	r1, #0
    8720:	b	8728 <MyGame_Example_Monster_parse_json_table+0x77c>
    8724:	mov	r1, #1
    8728:	cmp	r1, #0
    872c:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8730:	ldr	r1, [sp, #80]	; 0x50
    8734:	str	r1, [r7]
    8738:	add	r3, sp, #76	; 0x4c
    873c:	mov	r2, r5
    8740:	mov	r1, r4
    8744:	mov	r0, r6
    8748:	bl	1064 <flatcc_json_parser_array_end>
    874c:	mov	r4, r0
    8750:	b	86d4 <MyGame_Example_Monster_parse_json_table+0x728>
    8754:	ldr	r0, [r6]
    8758:	bl	0 <flatcc_builder_end_offset_vector>
    875c:	str	r0, [sp, #80]	; 0x50
    8760:	ldr	ip, [sp, #80]	; 0x50
    8764:	cmp	ip, #0
    8768:	beq	878c <MyGame_Example_Monster_parse_json_table+0x7e0>
    876c:	ldr	r0, [r6]
    8770:	mov	r1, #28
    8774:	bl	0 <flatcc_builder_table_add_offset>
    8778:	mov	r7, r0
    877c:	cmp	r7, #0
    8780:	moveq	r3, #1
    8784:	movne	r3, #0
    8788:	b	8790 <MyGame_Example_Monster_parse_json_table+0x7e4>
    878c:	mov	r3, #1
    8790:	cmp	r3, #0
    8794:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8798:	ldr	r3, [sp, #80]	; 0x50
    879c:	str	r3, [r7]
    87a0:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    87a4:	mov	r2, r5
    87a8:	mov	r1, r4
    87ac:	mov	r0, r6
    87b0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    87b4:	mov	r4, r0
    87b8:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    87bc:	eor	r2, sl, #628	; 0x274
    87c0:	eor	r2, r2, #222208	; 0x36400
    87c4:	eor	r2, r2, #23855104	; 0x16c0000
    87c8:	eor	r2, r2, #2013265920	; 0x78000000
    87cc:	eor	r1, r9, #101	; 0x65
    87d0:	eor	r1, r1, #158720	; 0x26c00
    87d4:	eor	r1, r1, #23068672	; 0x1600000
    87d8:	eor	r1, r1, #1610612736	; 0x60000000
    87dc:	orr	r3, r2, r1
    87e0:	cmp	r3, #0
    87e4:	bne	8958 <MyGame_Example_Monster_parse_json_table+0x9ac>
    87e8:	add	r9, r4, #8
    87ec:	mov	r1, r5
    87f0:	mov	r0, r9
    87f4:	bl	cc0 <flatcc_json_parser_symbol_part>
    87f8:	and	r2, r1, #-16777216	; 0xff000000
    87fc:	mov	r1, #0
    8800:	eor	r2, r2, #1929379840	; 0x73000000
    8804:	orr	r2, r2, r1
    8808:	cmp	r2, #0
    880c:	bne	8940 <MyGame_Example_Monster_parse_json_table+0x994>
    8810:	mov	r3, #1
    8814:	mov	r2, r5
    8818:	mov	r1, r9
    881c:	mov	r0, r6
    8820:	bl	118c <flatcc_json_parser_match_symbol>
    8824:	mov	r4, r0
    8828:	cmp	r9, r4
    882c:	beq	8928 <MyGame_Example_Monster_parse_json_table+0x97c>
    8830:	ldr	r0, [r6]
    8834:	bl	0 <flatcc_builder_start_offset_vector>
    8838:	cmp	r0, #0
    883c:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8840:	add	r3, sp, #76	; 0x4c
    8844:	mov	r2, r5
    8848:	mov	r1, r4
    884c:	mov	r0, r6
    8850:	bl	f84 <flatcc_json_parser_array_start>
    8854:	mov	r4, r0
    8858:	ldr	r1, [sp, #76]	; 0x4c
    885c:	cmp	r1, #0
    8860:	beq	88d8 <MyGame_Example_Monster_parse_json_table+0x92c>
    8864:	add	r3, sp, #80	; 0x50
    8868:	mov	r2, r5
    886c:	mov	r1, r4
    8870:	mov	r0, r6
    8874:	bl	7fac <MyGame_Example_Monster_parse_json_table>
    8878:	mov	r4, r0
    887c:	ldr	r1, [sp, #80]	; 0x50
    8880:	cmp	r1, #0
    8884:	beq	88a8 <MyGame_Example_Monster_parse_json_table+0x8fc>
    8888:	ldr	r0, [r6]
    888c:	mov	r1, #1
    8890:	bl	0 <flatcc_builder_extend_offset_vector>
    8894:	mov	r7, r0
    8898:	cmp	r7, #0
    889c:	moveq	r1, #1
    88a0:	movne	r1, #0
    88a4:	b	88ac <MyGame_Example_Monster_parse_json_table+0x900>
    88a8:	mov	r1, #1
    88ac:	cmp	r1, #0
    88b0:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    88b4:	ldr	r1, [sp, #80]	; 0x50
    88b8:	str	r1, [r7]
    88bc:	add	r3, sp, #76	; 0x4c
    88c0:	mov	r2, r5
    88c4:	mov	r1, r4
    88c8:	mov	r0, r6
    88cc:	bl	1064 <flatcc_json_parser_array_end>
    88d0:	mov	r4, r0
    88d4:	b	8858 <MyGame_Example_Monster_parse_json_table+0x8ac>
    88d8:	ldr	r0, [r6]
    88dc:	bl	0 <flatcc_builder_end_offset_vector>
    88e0:	str	r0, [sp, #80]	; 0x50
    88e4:	ldr	r0, [sp, #80]	; 0x50
    88e8:	cmp	r0, #0
    88ec:	beq	8910 <MyGame_Example_Monster_parse_json_table+0x964>
    88f0:	ldr	r0, [r6]
    88f4:	mov	r1, #11
    88f8:	bl	0 <flatcc_builder_table_add_offset>
    88fc:	mov	r7, r0
    8900:	cmp	r0, #0
    8904:	moveq	r0, #1
    8908:	movne	r0, #0
    890c:	b	8914 <MyGame_Example_Monster_parse_json_table+0x968>
    8910:	mov	r0, #1
    8914:	cmp	r0, #0
    8918:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    891c:	ldr	ip, [sp, #80]	; 0x50
    8920:	str	ip, [r7]
    8924:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8928:	mov	r2, r5
    892c:	mov	r1, r4
    8930:	mov	r0, r6
    8934:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8938:	mov	r4, r0
    893c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8940:	mov	r2, r5
    8944:	mov	r1, r9
    8948:	mov	r0, r6
    894c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8950:	mov	r4, r0
    8954:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8958:	mov	r2, r5
    895c:	mov	r1, r4
    8960:	mov	r0, r6
    8964:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8968:	mov	r4, r0
    896c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8970:	mov	r1, fp
    8974:	mov	r0, sl
    8978:	movw	r2, #29556	; 0x7374
    897c:	movt	r2, #29797	; 0x7465
    8980:	cmp	r1, r2
    8984:	bne	899c <MyGame_Example_Monster_parse_json_table+0x9f0>
    8988:	movw	r2, #28788	; 0x7074
    898c:	movt	r2, #25965	; 0x656d
    8990:	cmp	r0, r2
    8994:	bcc	8d9c <MyGame_Example_Monster_parse_json_table+0xdf0>
    8998:	b	89ac <MyGame_Example_Monster_parse_json_table+0xa00>
    899c:	movw	r2, #29556	; 0x7374
    89a0:	movt	r2, #29797	; 0x7465
    89a4:	cmp	r1, r2
    89a8:	bcc	8d9c <MyGame_Example_Monster_parse_json_table+0xdf0>
    89ac:	mov	r3, fp
    89b0:	movw	r1, #29556	; 0x7374
    89b4:	movt	r1, #29797	; 0x7465
    89b8:	cmp	r3, r1
    89bc:	bne	89d4 <MyGame_Example_Monster_parse_json_table+0xa28>
    89c0:	mov	r3, sl
    89c4:	mov	ip, #1711276032	; 0x66000000
    89c8:	cmp	r3, ip
    89cc:	bcc	8c70 <MyGame_Example_Monster_parse_json_table+0xcc4>
    89d0:	b	89e4 <MyGame_Example_Monster_parse_json_table+0xa38>
    89d4:	movw	ip, #29556	; 0x7374
    89d8:	movt	ip, #29797	; 0x7465
    89dc:	cmp	r3, ip
    89e0:	bcc	8c70 <MyGame_Example_Monster_parse_json_table+0xcc4>
    89e4:	mov	r2, fp
    89e8:	mov	r0, sl
    89ec:	bic	r1, r0, #255	; 0xff
    89f0:	bic	r1, r1, #65280	; 0xff00
    89f4:	eor	r2, r2, #884	; 0x374
    89f8:	eor	r2, r2, #356352	; 0x57000
    89fc:	eor	r2, r2, #73400320	; 0x4600000
    8a00:	eor	r2, r2, #1879048192	; 0x70000000
    8a04:	eor	r3, r1, #3276800	; 0x320000
    8a08:	eor	r3, r3, #1711276032	; 0x66000000
    8a0c:	orr	ip, r2, r3
    8a10:	cmp	ip, #0
    8a14:	beq	8b64 <MyGame_Example_Monster_parse_json_table+0xbb8>
    8a18:	and	r1, sl, #-16777216	; 0xff000000
    8a1c:	eor	ip, fp, #884	; 0x374
    8a20:	eor	ip, ip, #356352	; 0x57000
    8a24:	eor	ip, ip, #73400320	; 0x4600000
    8a28:	eor	ip, ip, #1879048192	; 0x70000000
    8a2c:	eor	r3, r1, #1711276032	; 0x66000000
    8a30:	orr	ip, ip, r3
    8a34:	cmp	ip, #0
    8a38:	bne	8b4c <MyGame_Example_Monster_parse_json_table+0xba0>
    8a3c:	mov	r3, #5
    8a40:	mov	r2, r5
    8a44:	mov	r1, r4
    8a48:	mov	r0, r6
    8a4c:	bl	118c <flatcc_json_parser_match_symbol>
    8a50:	mov	r1, r0
    8a54:	cmp	r4, r1
    8a58:	beq	8b38 <MyGame_Example_Monster_parse_json_table+0xb8c>
    8a5c:	vldr	s2, [pc, #764]	; 8d60 <MyGame_Example_Monster_parse_json_table+0xdb4>
    8a60:	vstr	s2, [sp, #92]	; 0x5c
    8a64:	mov	r9, r1
    8a68:	add	r3, sp, #92	; 0x5c
    8a6c:	mov	r2, r5
    8a70:	mov	r1, r9
    8a74:	mov	r0, r6
    8a78:	bl	0 <flatcc_json_parser_float>
    8a7c:	mov	r4, r0
    8a80:	cmp	r9, r4
    8a84:	bne	8ad0 <MyGame_Example_Monster_parse_json_table+0xb24>
    8a88:	mov	r9, r4
    8a8c:	ldr	r3, [pc, #712]	; 8d5c <MyGame_Example_Monster_parse_json_table+0xdb0>
    8a90:	add	r1, sp, #92	; 0x5c
    8a94:	str	r1, [sp]
    8a98:	mov	r2, r5
    8a9c:	mov	r1, r9
    8aa0:	mov	r0, r6
    8aa4:	bl	31e4 <flatcc_json_parser_symbolic_float>
    8aa8:	mov	r4, r0
    8aac:	cmp	r4, r9
    8ab0:	beq	8ac4 <MyGame_Example_Monster_parse_json_table+0xb18>
    8ab4:	cmp	r4, r5
    8ab8:	moveq	ip, #1
    8abc:	movne	ip, #0
    8ac0:	b	8ac8 <MyGame_Example_Monster_parse_json_table+0xb1c>
    8ac4:	mov	ip, #1
    8ac8:	cmp	ip, #0
    8acc:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8ad0:	vldr	s6, [sp, #92]	; 0x5c
    8ad4:	vcvt.f64.f32	d1, s6
    8ad8:	vldr	d0, [pc, #644]	; 8d64 <MyGame_Example_Monster_parse_json_table+0xdb8>
    8adc:	vcmp.f64	d1, d0
    8ae0:	vmrs	APSR_nzcv, fpscr
    8ae4:	bne	8b00 <MyGame_Example_Monster_parse_json_table+0xb54>
    8ae8:	ldr	ip, [r6, #8]
    8aec:	and	r2, ip, #2
    8af0:	cmp	r2, #0
    8af4:	movne	r1, #1
    8af8:	moveq	r1, #0
    8afc:	b	8b04 <MyGame_Example_Monster_parse_json_table+0xb58>
    8b00:	mov	r1, #1
    8b04:	cmp	r1, #0
    8b08:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8b0c:	ldr	r0, [r6]
    8b10:	mov	r1, #25
    8b14:	mov	r2, #4
    8b18:	mov	r3, #4
    8b1c:	bl	0 <flatcc_builder_table_add>
    8b20:	cmp	r0, #0
    8b24:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8b28:	vldr	s0, [sp, #92]	; 0x5c
    8b2c:	vmov.f32	s0, s0
    8b30:	bl	3fc <flatbuffers_float_write_to_pe>
    8b34:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8b38:	mov	r2, r5
    8b3c:	mov	r0, r6
    8b40:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8b44:	mov	r4, r0
    8b48:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8b4c:	mov	r2, r5
    8b50:	mov	r1, r4
    8b54:	mov	r0, r6
    8b58:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8b5c:	mov	r4, r0
    8b60:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8b64:	mov	r3, #6
    8b68:	mov	r2, r5
    8b6c:	mov	r1, r4
    8b70:	mov	r0, r6
    8b74:	bl	118c <flatcc_json_parser_match_symbol>
    8b78:	mov	r1, r0
    8b7c:	cmp	r4, r1
    8b80:	beq	8c5c <MyGame_Example_Monster_parse_json_table+0xcb0>
    8b84:	vldr	s6, [pc, #468]	; 8d60 <MyGame_Example_Monster_parse_json_table+0xdb4>
    8b88:	vstr	s6, [sp, #88]	; 0x58
    8b8c:	mov	r9, r1
    8b90:	add	r3, sp, #88	; 0x58
    8b94:	mov	r2, r5
    8b98:	mov	r0, r6
    8b9c:	bl	0 <flatcc_json_parser_float>
    8ba0:	mov	r4, r0
    8ba4:	cmp	r9, r4
    8ba8:	bne	8bf4 <MyGame_Example_Monster_parse_json_table+0xc48>
    8bac:	mov	r1, r4
    8bb0:	mov	r9, r1
    8bb4:	ldr	r3, [pc, #408]	; 8d54 <MyGame_Example_Monster_parse_json_table+0xda8>
    8bb8:	add	r0, sp, #88	; 0x58
    8bbc:	str	r0, [sp]
    8bc0:	mov	r2, r5
    8bc4:	mov	r0, r6
    8bc8:	bl	31e4 <flatcc_json_parser_symbolic_float>
    8bcc:	mov	r4, r0
    8bd0:	cmp	r4, r9
    8bd4:	beq	8be8 <MyGame_Example_Monster_parse_json_table+0xc3c>
    8bd8:	cmp	r4, r5
    8bdc:	moveq	r0, #1
    8be0:	movne	r0, #0
    8be4:	b	8bec <MyGame_Example_Monster_parse_json_table+0xc40>
    8be8:	mov	r0, #1
    8bec:	cmp	r0, #0
    8bf0:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8bf4:	vldr	s2, [sp, #88]	; 0x58
    8bf8:	vcvt.f64.f32	d0, s2
    8bfc:	vmov.f64	d5, #8	; 0x40400000  3.0
    8c00:	vcmp.f64	d0, d5
    8c04:	vmrs	APSR_nzcv, fpscr
    8c08:	bne	8c24 <MyGame_Example_Monster_parse_json_table+0xc78>
    8c0c:	ldr	ip, [r6, #8]
    8c10:	and	r3, ip, #2
    8c14:	cmp	r3, #0
    8c18:	movne	r0, #1
    8c1c:	moveq	r0, #0
    8c20:	b	8c28 <MyGame_Example_Monster_parse_json_table+0xc7c>
    8c24:	mov	r0, #1
    8c28:	cmp	r0, #0
    8c2c:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8c30:	ldr	r0, [r6]
    8c34:	mov	r1, #26
    8c38:	mov	r2, #4
    8c3c:	mov	r3, #4
    8c40:	bl	0 <flatcc_builder_table_add>
    8c44:	cmp	r0, #0
    8c48:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8c4c:	vldr	s0, [sp, #88]	; 0x58
    8c50:	vmov.f32	s0, s0
    8c54:	bl	3fc <flatbuffers_float_write_to_pe>
    8c58:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8c5c:	mov	r2, r5
    8c60:	mov	r0, r6
    8c64:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8c68:	mov	r4, r0
    8c6c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8c70:	eor	r3, fp, #884	; 0x374
    8c74:	eor	r3, r3, #356352	; 0x57000
    8c78:	eor	r3, r3, #73400320	; 0x4600000
    8c7c:	eor	r3, r3, #1879048192	; 0x70000000
    8c80:	eor	ip, sl, #116	; 0x74
    8c84:	eor	ip, ip, #880640	; 0xd7000
    8c88:	eor	ip, ip, #90177536	; 0x5600000
    8c8c:	eor	ip, ip, #1610612736	; 0x60000000
    8c90:	orr	r0, r3, ip
    8c94:	cmp	r0, #0
    8c98:	bne	8d84 <MyGame_Example_Monster_parse_json_table+0xdd8>
    8c9c:	add	r4, r4, #8
    8ca0:	mov	r1, r5
    8ca4:	mov	r0, r4
    8ca8:	bl	cc0 <flatcc_json_parser_symbol_part>
    8cac:	and	r0, r1, #-16777216	; 0xff000000
    8cb0:	mov	r3, #0
    8cb4:	eor	r0, r0, #2030043136	; 0x79000000
    8cb8:	orr	r2, r0, r3
    8cbc:	cmp	r2, #0
    8cc0:	bne	8d6c <MyGame_Example_Monster_parse_json_table+0xdc0>
    8cc4:	mov	r1, r4
    8cc8:	mov	r4, r1
    8ccc:	mov	r3, #1
    8cd0:	mov	r2, r5
    8cd4:	mov	r0, r6
    8cd8:	bl	118c <flatcc_json_parser_match_symbol>
    8cdc:	mov	r1, r0
    8ce0:	cmp	r4, r1
    8ce4:	beq	8d40 <MyGame_Example_Monster_parse_json_table+0xd94>
    8ce8:	add	r3, sp, #80	; 0x50
    8cec:	mov	r2, r5
    8cf0:	mov	r0, r6
    8cf4:	bl	5b88 <MyGame_Example_Stat_parse_json_table>
    8cf8:	mov	r4, r0
    8cfc:	ldr	r1, [sp, #80]	; 0x50
    8d00:	cmp	r1, #0
    8d04:	beq	8d28 <MyGame_Example_Monster_parse_json_table+0xd7c>
    8d08:	ldr	r0, [r6]
    8d0c:	mov	r1, #14
    8d10:	bl	0 <flatcc_builder_table_add_offset>
    8d14:	mov	r7, r0
    8d18:	cmp	r7, #0
    8d1c:	moveq	r1, #1
    8d20:	movne	r1, #0
    8d24:	b	8d2c <MyGame_Example_Monster_parse_json_table+0xd80>
    8d28:	mov	r1, #1
    8d2c:	cmp	r1, #0
    8d30:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8d34:	ldr	r1, [sp, #80]	; 0x50
    8d38:	str	r1, [r7]
    8d3c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8d40:	mov	r2, r5
    8d44:	mov	r0, r6
    8d48:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8d4c:	mov	r4, r0
    8d50:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8d54:	.word	0x000001b0
    8d58:	.word	0x00000198
    8d5c:	.word	0x000001bc
	...
    8d68:	.word	0x41132cbc
    8d6c:	mov	r2, r5
    8d70:	mov	r1, r4
    8d74:	mov	r0, r6
    8d78:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8d7c:	mov	r4, r0
    8d80:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8d84:	mov	r2, r5
    8d88:	mov	r1, r4
    8d8c:	mov	r0, r6
    8d90:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8d94:	mov	r4, r0
    8d98:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8d9c:	mov	r2, fp
    8da0:	eor	r0, r2, #884	; 0x374
    8da4:	eor	r0, r0, #356352	; 0x57000
    8da8:	eor	r0, r0, #73400320	; 0x4600000
    8dac:	eor	r0, r0, #1879048192	; 0x70000000
    8db0:	mov	ip, sl
    8db4:	eor	r2, ip, #101	; 0x65
    8db8:	eor	r2, r2, #29440	; 0x7300
    8dbc:	eor	r2, r2, #6356992	; 0x610000
    8dc0:	eor	r2, r2, #1644167168	; 0x62000000
    8dc4:	orr	r3, r0, r2
    8dc8:	cmp	r3, #0
    8dcc:	beq	8f14 <MyGame_Example_Monster_parse_json_table+0xf68>
    8dd0:	eor	r0, fp, #884	; 0x374
    8dd4:	eor	r0, r0, #356352	; 0x57000
    8dd8:	eor	r0, r0, #73400320	; 0x4600000
    8ddc:	eor	r0, r0, #1879048192	; 0x70000000
    8de0:	eor	ip, sl, #876	; 0x36c
    8de4:	eor	ip, ip, #224256	; 0x36c00
    8de8:	eor	ip, ip, #40632320	; 0x26c0000
    8dec:	eor	ip, ip, #1610612736	; 0x60000000
    8df0:	orr	r2, r0, ip
    8df4:	cmp	r2, #0
    8df8:	bne	8efc <MyGame_Example_Monster_parse_json_table+0xf50>
    8dfc:	mov	r3, #8
    8e00:	mov	r2, r5
    8e04:	mov	r1, r4
    8e08:	mov	r0, r6
    8e0c:	bl	118c <flatcc_json_parser_match_symbol>
    8e10:	mov	r1, r0
    8e14:	cmp	r4, r1
    8e18:	beq	8ee8 <MyGame_Example_Monster_parse_json_table+0xf3c>
    8e1c:	mov	r3, #0
    8e20:	strb	r3, [sp, #61]	; 0x3d
    8e24:	mov	r9, r1
    8e28:	add	r3, sp, #61	; 0x3d
    8e2c:	mov	r2, r5
    8e30:	mov	r0, r6
    8e34:	bl	2048 <flatcc_json_parser_bool>
    8e38:	mov	r4, r0
    8e3c:	cmp	r9, r4
    8e40:	bne	8e8c <MyGame_Example_Monster_parse_json_table+0xee0>
    8e44:	mov	r9, r4
    8e48:	ldr	r3, [pc, #2816]	; 9950 <MyGame_Example_Monster_parse_json_table+0x19a4>
    8e4c:	add	r0, sp, #61	; 0x3d
    8e50:	str	r0, [sp]
    8e54:	mov	r2, r5
    8e58:	mov	r1, r4
    8e5c:	mov	r0, r6
    8e60:	bl	3014 <flatcc_json_parser_symbolic_bool>
    8e64:	mov	r4, r0
    8e68:	cmp	r4, r9
    8e6c:	beq	8e80 <MyGame_Example_Monster_parse_json_table+0xed4>
    8e70:	cmp	r4, r5
    8e74:	moveq	ip, #1
    8e78:	movne	ip, #0
    8e7c:	b	8e84 <MyGame_Example_Monster_parse_json_table+0xed8>
    8e80:	mov	ip, #1
    8e84:	cmp	ip, #0
    8e88:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8e8c:	ldrb	r2, [sp, #61]	; 0x3d
    8e90:	cmp	r2, #1
    8e94:	bne	8eb0 <MyGame_Example_Monster_parse_json_table+0xf04>
    8e98:	ldr	ip, [r6, #8]
    8e9c:	and	r0, ip, #2
    8ea0:	cmp	r0, #0
    8ea4:	movne	r1, #1
    8ea8:	moveq	r1, #0
    8eac:	b	8eb4 <MyGame_Example_Monster_parse_json_table+0xf08>
    8eb0:	mov	r1, #1
    8eb4:	cmp	r1, #0
    8eb8:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8ebc:	ldr	r0, [r6]
    8ec0:	mov	r1, #15
    8ec4:	mov	r2, #1
    8ec8:	mov	r3, #1
    8ecc:	bl	0 <flatcc_builder_table_add>
    8ed0:	cmp	r0, #0
    8ed4:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8ed8:	ldrb	r1, [sp, #61]	; 0x3d
    8edc:	and	r1, r1, #255	; 0xff
    8ee0:	bl	50c <flatbuffers_bool_write_to_pe>
    8ee4:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8ee8:	mov	r2, r5
    8eec:	mov	r0, r6
    8ef0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8ef4:	mov	r4, r0
    8ef8:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8efc:	mov	r2, r5
    8f00:	mov	r1, r4
    8f04:	mov	r0, r6
    8f08:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8f0c:	mov	r4, r0
    8f10:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8f14:	add	r4, r4, #8
    8f18:	mov	r1, r5
    8f1c:	mov	r0, r4
    8f20:	bl	cc0 <flatcc_json_parser_symbol_part>
    8f24:	bic	r2, r1, #255	; 0xff
    8f28:	bic	r2, r2, #65280	; 0xff00
    8f2c:	mov	ip, #0
    8f30:	eor	r0, r2, #36962304	; 0x2340000
    8f34:	eor	r0, r0, #872415232	; 0x34000000
    8f38:	orr	r3, r0, ip
    8f3c:	cmp	r3, #0
    8f40:	bne	8fd0 <MyGame_Example_Monster_parse_json_table+0x1024>
    8f44:	mov	r3, #2
    8f48:	mov	r2, r5
    8f4c:	mov	r1, r4
    8f50:	mov	r0, r6
    8f54:	bl	118c <flatcc_json_parser_match_symbol>
    8f58:	mov	r1, r0
    8f5c:	cmp	r4, r1
    8f60:	beq	8fbc <MyGame_Example_Monster_parse_json_table+0x1010>
    8f64:	add	r3, sp, #80	; 0x50
    8f68:	mov	r2, r5
    8f6c:	mov	r0, r6
    8f70:	bl	7bf8 <MyGame_Example_TestBase64_parse_json_table>
    8f74:	mov	r4, r0
    8f78:	ldr	r3, [sp, #80]	; 0x50
    8f7c:	cmp	r3, #0
    8f80:	beq	8fa4 <MyGame_Example_Monster_parse_json_table+0xff8>
    8f84:	ldr	r0, [r6]
    8f88:	mov	r1, #35	; 0x23
    8f8c:	bl	0 <flatcc_builder_table_add_offset>
    8f90:	mov	r7, r0
    8f94:	cmp	r7, #0
    8f98:	moveq	r0, #1
    8f9c:	movne	r0, #0
    8fa0:	b	8fa8 <MyGame_Example_Monster_parse_json_table+0xffc>
    8fa4:	mov	r0, #1
    8fa8:	cmp	r0, #0
    8fac:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    8fb0:	ldr	ip, [sp, #80]	; 0x50
    8fb4:	str	ip, [r7]
    8fb8:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8fbc:	mov	r2, r5
    8fc0:	mov	r0, r6
    8fc4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8fc8:	mov	r4, r0
    8fcc:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8fd0:	mov	r2, r5
    8fd4:	mov	r1, r4
    8fd8:	mov	r0, r6
    8fdc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8fe0:	mov	r4, r0
    8fe4:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    8fe8:	mov	r2, fp
    8fec:	movw	r0, #29556	; 0x7374
    8ff0:	movt	r0, #29797	; 0x7465
    8ff4:	cmp	r2, r0
    8ff8:	bne	9014 <MyGame_Example_Monster_parse_json_table+0x1068>
    8ffc:	mov	r3, sl
    9000:	movw	ip, #29544	; 0x7368
    9004:	movt	ip, #26721	; 0x6861
    9008:	cmp	r3, ip
    900c:	bcc	a21c <MyGame_Example_Monster_parse_json_table+0x2270>
    9010:	b	9024 <MyGame_Example_Monster_parse_json_table+0x1078>
    9014:	movw	r3, #29556	; 0x7374
    9018:	movt	r3, #29797	; 0x7465
    901c:	cmp	r2, r3
    9020:	bcc	a21c <MyGame_Example_Monster_parse_json_table+0x2270>
    9024:	mov	ip, fp
    9028:	mov	r3, sl
    902c:	eor	r2, ip, #884	; 0x374
    9030:	eor	r2, r2, #356352	; 0x57000
    9034:	eor	r2, r2, #73400320	; 0x4600000
    9038:	eor	r2, r2, #1879048192	; 0x70000000
    903c:	eor	ip, r3, #872	; 0x368
    9040:	eor	ip, ip, #94208	; 0x17000
    9044:	eor	ip, ip, #140509184	; 0x8600000
    9048:	eor	ip, ip, #1610612736	; 0x60000000
    904c:	orr	r2, r2, ip
    9050:	cmp	r2, #0
    9054:	beq	9784 <MyGame_Example_Monster_parse_json_table+0x17d8>
    9058:	mov	r1, fp
    905c:	mov	r0, sl
    9060:	movw	ip, #25460	; 0x6374
    9064:	movt	ip, #30309	; 0x7665
    9068:	cmp	r1, ip
    906c:	bne	9084 <MyGame_Example_Monster_parse_json_table+0x10d8>
    9070:	movw	r1, #24431	; 0x5f6f
    9074:	movt	r1, #28530	; 0x6f72
    9078:	cmp	r0, r1
    907c:	bcc	9094 <MyGame_Example_Monster_parse_json_table+0x10e8>
    9080:	b	9370 <MyGame_Example_Monster_parse_json_table+0x13c4>
    9084:	movw	r2, #25460	; 0x6374
    9088:	movt	r2, #30309	; 0x7665
    908c:	cmp	r1, r2
    9090:	bcs	9370 <MyGame_Example_Monster_parse_json_table+0x13c4>
    9094:	eor	r1, fp, #884	; 0x374
    9098:	eor	r1, r1, #356352	; 0x57000
    909c:	eor	r1, r1, #73400320	; 0x4600000
    90a0:	eor	r1, r1, #1879048192	; 0x70000000
    90a4:	eor	r2, sl, #884	; 0x374
    90a8:	eor	r2, r2, #356352	; 0x57000
    90ac:	eor	r2, r2, #241172480	; 0xe600000
    90b0:	eor	r2, r2, #1610612736	; 0x60000000
    90b4:	orr	r3, r1, r2
    90b8:	cmp	r3, #0
    90bc:	bne	9358 <MyGame_Example_Monster_parse_json_table+0x13ac>
    90c0:	add	r4, r4, #8
    90c4:	mov	r1, r5
    90c8:	mov	r0, r4
    90cc:	bl	cc0 <flatcc_json_parser_symbol_part>
    90d0:	eor	r1, r1, #620	; 0x26c
    90d4:	eor	r1, r1, #25600	; 0x6400
    90d8:	eor	r1, r1, #23330816	; 0x1640000
    90dc:	eor	r1, r1, #1677721600	; 0x64000000
    90e0:	eor	ip, r0, #117	; 0x75
    90e4:	eor	ip, ip, #25088	; 0x6200
    90e8:	eor	ip, ip, #24379392	; 0x1740000
    90ec:	eor	ip, ip, #1610612736	; 0x60000000
    90f0:	orr	r2, r1, ip
    90f4:	cmp	r2, #0
    90f8:	bne	9340 <MyGame_Example_Monster_parse_json_table+0x1394>
    90fc:	add	r9, r4, #8
    9100:	mov	r1, r5
    9104:	mov	r0, r9
    9108:	bl	cc0 <flatcc_json_parser_symbol_part>
    910c:	mov	ip, #0
    9110:	eor	r1, r1, #114	; 0x72
    9114:	eor	r1, r1, #25856	; 0x6500
    9118:	eor	r1, r1, #6684672	; 0x660000
    911c:	eor	r1, r1, #1711276032	; 0x66000000
    9120:	orr	r2, r1, ip
    9124:	cmp	r2, #0
    9128:	bne	9328 <MyGame_Example_Monster_parse_json_table+0x137c>
    912c:	mov	r3, #4
    9130:	mov	r2, r5
    9134:	mov	r1, r9
    9138:	mov	r0, r6
    913c:	bl	118c <flatcc_json_parser_match_symbol>
    9140:	mov	r4, r0
    9144:	cmp	r9, r4
    9148:	beq	9310 <MyGame_Example_Monster_parse_json_table+0x1364>
    914c:	cmp	r4, r5
    9150:	beq	9168 <MyGame_Example_Monster_parse_json_table+0x11bc>
    9154:	ldrb	r0, [r4]
    9158:	cmp	r0, #91	; 0x5b
    915c:	moveq	r1, #1
    9160:	movne	r1, #0
    9164:	b	916c <MyGame_Example_Monster_parse_json_table+0x11c0>
    9168:	mov	r1, #0
    916c:	cmp	r1, #0
    9170:	beq	927c <MyGame_Example_Monster_parse_json_table+0x12d0>
    9174:	ldr	r0, [r6]
    9178:	mov	r1, #1
    917c:	mov	r2, #1
    9180:	mvn	r3, #0
    9184:	bl	0 <flatcc_builder_start_vector>
    9188:	cmp	r0, #0
    918c:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9190:	add	r3, sp, #76	; 0x4c
    9194:	mov	r2, r5
    9198:	mov	r1, r4
    919c:	mov	r0, r6
    91a0:	bl	f84 <flatcc_json_parser_array_start>
    91a4:	mov	r4, r0
    91a8:	ldr	r0, [sp, #76]	; 0x4c
    91ac:	cmp	r0, #0
    91b0:	beq	926c <MyGame_Example_Monster_parse_json_table+0x12c0>
    91b4:	mov	r1, #0
    91b8:	strb	r1, [sp, #56]	; 0x38
    91bc:	ldr	r0, [r6]
    91c0:	mov	r1, #1
    91c4:	bl	0 <flatcc_builder_extend_vector>
    91c8:	mov	sl, r0
    91cc:	cmp	sl, #0
    91d0:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    91d4:	mov	r9, r4
    91d8:	add	r3, sp, #56	; 0x38
    91dc:	mov	r2, r5
    91e0:	mov	r1, r4
    91e4:	mov	r0, r6
    91e8:	bl	1c6c <flatcc_json_parser_uint8>
    91ec:	mov	r4, r0
    91f0:	cmp	r9, r4
    91f4:	bne	9240 <MyGame_Example_Monster_parse_json_table+0x1294>
    91f8:	mov	r1, r4
    91fc:	mov	r9, r1
    9200:	ldr	r3, [pc, #1848]	; 9940 <MyGame_Example_Monster_parse_json_table+0x1994>
    9204:	add	r0, sp, #56	; 0x38
    9208:	str	r0, [sp]
    920c:	mov	r2, r5
    9210:	mov	r0, r6
    9214:	bl	26e8 <flatcc_json_parser_symbolic_uint8>
    9218:	mov	r4, r0
    921c:	cmp	r4, r9
    9220:	beq	9234 <MyGame_Example_Monster_parse_json_table+0x1288>
    9224:	cmp	r4, r5
    9228:	moveq	r3, #1
    922c:	movne	r3, #0
    9230:	b	9238 <MyGame_Example_Monster_parse_json_table+0x128c>
    9234:	mov	r3, #1
    9238:	cmp	r3, #0
    923c:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9240:	ldrb	r3, [sp, #56]	; 0x38
    9244:	and	r1, r3, #255	; 0xff
    9248:	mov	r0, sl
    924c:	bl	20 <flatbuffers_uint8_write_to_pe>
    9250:	add	r3, sp, #76	; 0x4c
    9254:	mov	r2, r5
    9258:	mov	r1, r4
    925c:	mov	r0, r6
    9260:	bl	1064 <flatcc_json_parser_array_end>
    9264:	mov	r4, r0
    9268:	b	91a8 <MyGame_Example_Monster_parse_json_table+0x11fc>
    926c:	ldr	r0, [r6]
    9270:	bl	0 <flatcc_builder_end_vector>
    9274:	str	r0, [sp, #80]	; 0x50
    9278:	b	92cc <MyGame_Example_Monster_parse_json_table+0x1320>
    927c:	ldr	r0, [r6]
    9280:	mov	r1, #0
    9284:	mov	r2, #0
    9288:	mov	r3, #0
    928c:	bl	0 <flatcc_builder_start_buffer>
    9290:	cmp	r0, #0
    9294:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9298:	add	r3, sp, #80	; 0x50
    929c:	mov	r2, r5
    92a0:	mov	r1, r4
    92a4:	mov	r0, r6
    92a8:	bl	7fac <MyGame_Example_Monster_parse_json_table>
    92ac:	mov	r4, r0
    92b0:	ldr	r1, [sp, #80]	; 0x50
    92b4:	cmp	r1, #0
    92b8:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    92bc:	ldr	r0, [r6]
    92c0:	ldr	r1, [sp, #80]	; 0x50
    92c4:	bl	0 <flatcc_builder_end_buffer>
    92c8:	str	r0, [sp, #80]	; 0x50
    92cc:	ldr	ip, [sp, #80]	; 0x50
    92d0:	cmp	ip, #0
    92d4:	beq	92f8 <MyGame_Example_Monster_parse_json_table+0x134c>
    92d8:	ldr	r0, [r6]
    92dc:	mov	r1, #13
    92e0:	bl	0 <flatcc_builder_table_add_offset>
    92e4:	mov	r7, r0
    92e8:	cmp	r7, #0
    92ec:	moveq	r1, #1
    92f0:	movne	r1, #0
    92f4:	b	92fc <MyGame_Example_Monster_parse_json_table+0x1350>
    92f8:	mov	r1, #1
    92fc:	cmp	r1, #0
    9300:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9304:	ldr	r3, [sp, #80]	; 0x50
    9308:	str	r3, [r7]
    930c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9310:	mov	r2, r5
    9314:	mov	r1, r4
    9318:	mov	r0, r6
    931c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9320:	mov	r4, r0
    9324:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9328:	mov	r2, r5
    932c:	mov	r1, r9
    9330:	mov	r0, r6
    9334:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9338:	mov	r4, r0
    933c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9340:	mov	r2, r5
    9344:	mov	r1, r4
    9348:	mov	r0, r6
    934c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9350:	mov	r4, r0
    9354:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9358:	mov	r2, r5
    935c:	mov	r1, r4
    9360:	mov	r0, r6
    9364:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9368:	mov	r4, r0
    936c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9370:	eor	r1, fp, #884	; 0x374
    9374:	eor	r1, r1, #352256	; 0x56000
    9378:	eor	r1, r1, #106954752	; 0x6600000
    937c:	eor	r1, r1, #1879048192	; 0x70000000
    9380:	eor	r2, sl, #111	; 0x6f
    9384:	eor	r2, r2, #24320	; 0x5f00
    9388:	eor	r2, r2, #7471104	; 0x720000
    938c:	eor	r2, r2, #1862270976	; 0x6f000000
    9390:	orr	r2, r1, r2
    9394:	cmp	r2, #0
    9398:	bne	976c <MyGame_Example_Monster_parse_json_table+0x17c0>
    939c:	add	r9, r4, #8
    93a0:	mov	r1, r5
    93a4:	mov	r0, r9
    93a8:	bl	cc0 <flatcc_json_parser_symbol_part>
    93ac:	mov	r2, r1
    93b0:	eor	ip, r2, #111	; 0x6f
    93b4:	eor	ip, ip, #222208	; 0x36400
    93b8:	eor	ip, ip, #39583744	; 0x25c0000
    93bc:	eor	ip, ip, #1677721600	; 0x64000000
    93c0:	mov	r3, r0
    93c4:	eor	r2, r3, #101	; 0x65
    93c8:	eor	r2, r2, #158720	; 0x26c00
    93cc:	eor	r2, r2, #90177536	; 0x5600000
    93d0:	eor	r2, r2, #1879048192	; 0x70000000
    93d4:	orr	r2, ip, r2
    93d8:	cmp	r2, #0
    93dc:	beq	95ac <MyGame_Example_Monster_parse_json_table+0x1600>
    93e0:	bic	ip, r0, #255	; 0xff
    93e4:	eor	r0, r1, #111	; 0x6f
    93e8:	eor	r0, r0, #224256	; 0x36c00
    93ec:	eor	r0, r0, #39583744	; 0x25c0000
    93f0:	eor	r0, r0, #1677721600	; 0x64000000
    93f4:	eor	ip, ip, #29440	; 0x7300
    93f8:	eor	ip, ip, #6750208	; 0x670000
    93fc:	eor	ip, ip, #1845493760	; 0x6e000000
    9400:	orr	r1, r0, ip
    9404:	cmp	r1, #0
    9408:	bne	9594 <MyGame_Example_Monster_parse_json_table+0x15e8>
    940c:	mov	r3, #7
    9410:	mov	r2, r5
    9414:	mov	r1, r9
    9418:	mov	r0, r6
    941c:	bl	118c <flatcc_json_parser_match_symbol>
    9420:	mov	r4, r0
    9424:	cmp	r9, r4
    9428:	beq	957c <MyGame_Example_Monster_parse_json_table+0x15d0>
    942c:	ldr	r0, [r6]
    9430:	mov	r1, #8
    9434:	mov	r2, #8
    9438:	mvn	r3, #-536870912	; 0xe0000000
    943c:	bl	0 <flatcc_builder_start_vector>
    9440:	cmp	r0, #0
    9444:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9448:	add	r3, sp, #76	; 0x4c
    944c:	mov	r2, r5
    9450:	mov	r1, r4
    9454:	mov	r0, r6
    9458:	bl	f84 <flatcc_json_parser_array_start>
    945c:	mov	r4, r0
    9460:	ldr	r2, [sp, #76]	; 0x4c
    9464:	cmp	r2, #0
    9468:	beq	952c <MyGame_Example_Monster_parse_json_table+0x1580>
    946c:	mov	ip, #0
    9470:	mov	r3, #0
    9474:	str	r3, [sp, #144]	; 0x90
    9478:	str	ip, [sp, #148]	; 0x94
    947c:	ldr	r0, [r6]
    9480:	mov	r1, #1
    9484:	bl	0 <flatcc_builder_extend_vector>
    9488:	mov	sl, r0
    948c:	cmp	sl, #0
    9490:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9494:	mov	r9, r4
    9498:	add	r3, sp, #144	; 0x90
    949c:	mov	r2, r5
    94a0:	mov	r1, r4
    94a4:	mov	r0, r6
    94a8:	bl	1d30 <flatcc_json_parser_int64>
    94ac:	mov	r4, r0
    94b0:	cmp	r9, r4
    94b4:	bne	9500 <MyGame_Example_Monster_parse_json_table+0x1554>
    94b8:	mov	r9, r4
    94bc:	ldr	r3, [pc, #1152]	; 9944 <MyGame_Example_Monster_parse_json_table+0x1998>
    94c0:	add	r0, sp, #144	; 0x90
    94c4:	str	r0, [sp]
    94c8:	mov	r2, r5
    94cc:	mov	r1, r4
    94d0:	mov	r0, r6
    94d4:	bl	28b8 <flatcc_json_parser_symbolic_int64>
    94d8:	mov	r4, r0
    94dc:	cmp	r4, r9
    94e0:	beq	94f4 <MyGame_Example_Monster_parse_json_table+0x1548>
    94e4:	cmp	r4, r5
    94e8:	moveq	ip, #1
    94ec:	movne	ip, #0
    94f0:	b	94f8 <MyGame_Example_Monster_parse_json_table+0x154c>
    94f4:	mov	ip, #1
    94f8:	cmp	ip, #0
    94fc:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9500:	ldr	r2, [sp, #144]	; 0x90
    9504:	ldr	r3, [sp, #148]	; 0x94
    9508:	mov	r0, sl
    950c:	bl	340 <flatbuffers_int64_write_to_pe>
    9510:	add	r3, sp, #76	; 0x4c
    9514:	mov	r2, r5
    9518:	mov	r1, r4
    951c:	mov	r0, r6
    9520:	bl	1064 <flatcc_json_parser_array_end>
    9524:	mov	r4, r0
    9528:	b	9460 <MyGame_Example_Monster_parse_json_table+0x14b4>
    952c:	ldr	r0, [r6]
    9530:	bl	0 <flatcc_builder_end_vector>
    9534:	str	r0, [sp, #80]	; 0x50
    9538:	ldr	r3, [sp, #80]	; 0x50
    953c:	cmp	r3, #0
    9540:	beq	9564 <MyGame_Example_Monster_parse_json_table+0x15b8>
    9544:	ldr	r0, [r6]
    9548:	mov	r1, #32
    954c:	bl	0 <flatcc_builder_table_add_offset>
    9550:	mov	r7, r0
    9554:	cmp	r0, #0
    9558:	moveq	r1, #1
    955c:	movne	r1, #0
    9560:	b	9568 <MyGame_Example_Monster_parse_json_table+0x15bc>
    9564:	mov	r1, #1
    9568:	cmp	r1, #0
    956c:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9570:	ldr	r0, [sp, #80]	; 0x50
    9574:	str	r0, [r7]
    9578:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    957c:	mov	r2, r5
    9580:	mov	r1, r4
    9584:	mov	r0, r6
    9588:	bl	0 <flatcc_json_parser_unmatched_symbol>
    958c:	mov	r4, r0
    9590:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9594:	mov	r2, r5
    9598:	mov	r1, r9
    959c:	mov	r0, r6
    95a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    95a4:	mov	r4, r0
    95a8:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    95ac:	add	r4, r9, #8
    95b0:	mov	r1, r5
    95b4:	mov	r0, r4
    95b8:	bl	cc0 <flatcc_json_parser_symbol_part>
    95bc:	and	ip, r1, #-16777216	; 0xff000000
    95c0:	mov	r3, #0
    95c4:	eor	ip, ip, #1929379840	; 0x73000000
    95c8:	orr	r3, ip, r3
    95cc:	cmp	r3, #0
    95d0:	bne	9754 <MyGame_Example_Monster_parse_json_table+0x17a8>
    95d4:	mov	r1, r4
    95d8:	mov	r9, r1
    95dc:	mov	r3, #1
    95e0:	mov	r2, r5
    95e4:	mov	r0, r6
    95e8:	bl	118c <flatcc_json_parser_match_symbol>
    95ec:	mov	r4, r0
    95f0:	cmp	r9, r4
    95f4:	beq	973c <MyGame_Example_Monster_parse_json_table+0x1790>
    95f8:	ldr	r0, [r6]
    95fc:	mov	r1, #8
    9600:	mov	r2, #8
    9604:	mvn	r3, #-536870912	; 0xe0000000
    9608:	bl	0 <flatcc_builder_start_vector>
    960c:	cmp	r0, #0
    9610:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9614:	add	r3, sp, #76	; 0x4c
    9618:	mov	r2, r5
    961c:	mov	r1, r4
    9620:	mov	r0, r6
    9624:	bl	f84 <flatcc_json_parser_array_start>
    9628:	mov	r4, r0
    962c:	ldr	r2, [sp, #76]	; 0x4c
    9630:	cmp	r2, #0
    9634:	beq	96ec <MyGame_Example_Monster_parse_json_table+0x1740>
    9638:	vldr	d6, [pc, #788]	; 9954 <MyGame_Example_Monster_parse_json_table+0x19a8>
    963c:	vstr	d6, [sp, #136]	; 0x88
    9640:	ldr	r0, [r6]
    9644:	mov	r1, #1
    9648:	bl	0 <flatcc_builder_extend_vector>
    964c:	mov	sl, r0
    9650:	cmp	sl, #0
    9654:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9658:	mov	r9, r4
    965c:	add	r3, sp, #136	; 0x88
    9660:	mov	r2, r5
    9664:	mov	r1, r9
    9668:	mov	r0, r6
    966c:	bl	0 <flatcc_json_parser_double>
    9670:	mov	r4, r0
    9674:	cmp	r9, r4
    9678:	bne	96c4 <MyGame_Example_Monster_parse_json_table+0x1718>
    967c:	mov	r9, r4
    9680:	ldr	r3, [pc, #704]	; 9948 <MyGame_Example_Monster_parse_json_table+0x199c>
    9684:	add	r0, sp, #136	; 0x88
    9688:	str	r0, [sp]
    968c:	mov	r2, r5
    9690:	mov	r1, r9
    9694:	mov	r0, r6
    9698:	bl	33b4 <flatcc_json_parser_symbolic_double>
    969c:	mov	r4, r0
    96a0:	cmp	r4, r9
    96a4:	beq	96b8 <MyGame_Example_Monster_parse_json_table+0x170c>
    96a8:	cmp	r4, r5
    96ac:	moveq	r3, #1
    96b0:	movne	r3, #0
    96b4:	b	96bc <MyGame_Example_Monster_parse_json_table+0x1710>
    96b8:	mov	r3, #1
    96bc:	cmp	r3, #0
    96c0:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    96c4:	vldr	d0, [sp, #136]	; 0x88
    96c8:	mov	r0, sl
    96cc:	bl	4bc <flatbuffers_double_write_to_pe>
    96d0:	add	r3, sp, #76	; 0x4c
    96d4:	mov	r2, r5
    96d8:	mov	r1, r4
    96dc:	mov	r0, r6
    96e0:	bl	1064 <flatcc_json_parser_array_end>
    96e4:	mov	r4, r0
    96e8:	b	962c <MyGame_Example_Monster_parse_json_table+0x1680>
    96ec:	ldr	r0, [r6]
    96f0:	bl	0 <flatcc_builder_end_vector>
    96f4:	str	r0, [sp, #80]	; 0x50
    96f8:	ldr	ip, [sp, #80]	; 0x50
    96fc:	cmp	ip, #0
    9700:	beq	9724 <MyGame_Example_Monster_parse_json_table+0x1778>
    9704:	ldr	r0, [r6]
    9708:	mov	r1, #33	; 0x21
    970c:	bl	0 <flatcc_builder_table_add_offset>
    9710:	mov	r7, r0
    9714:	cmp	r7, #0
    9718:	moveq	ip, #1
    971c:	movne	ip, #0
    9720:	b	9728 <MyGame_Example_Monster_parse_json_table+0x177c>
    9724:	mov	ip, #1
    9728:	cmp	ip, #0
    972c:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9730:	ldr	r3, [sp, #80]	; 0x50
    9734:	str	r3, [r7]
    9738:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    973c:	mov	r2, r5
    9740:	mov	r1, r4
    9744:	mov	r0, r6
    9748:	bl	0 <flatcc_json_parser_unmatched_symbol>
    974c:	mov	r4, r0
    9750:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9754:	mov	r2, r5
    9758:	mov	r1, r4
    975c:	mov	r0, r6
    9760:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9764:	mov	r4, r0
    9768:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    976c:	mov	r2, r5
    9770:	mov	r1, r4
    9774:	mov	r0, r6
    9778:	bl	0 <flatcc_json_parser_unmatched_symbol>
    977c:	mov	r4, r0
    9780:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9784:	add	r4, r4, #8
    9788:	mov	r1, r5
    978c:	mov	r0, r4
    9790:	bl	cc0 <flatcc_json_parser_symbol_part>
    9794:	mov	ip, r1
    9798:	mov	r3, r0
    979c:	movw	r2, #13407	; 0x345f
    97a0:	movt	r2, #29494	; 0x7336
    97a4:	cmp	ip, r2
    97a8:	bne	97c0 <MyGame_Example_Monster_parse_json_table+0x1814>
    97ac:	movw	r2, #30257	; 0x7631
    97b0:	movt	r2, #26222	; 0x666e
    97b4:	cmp	r3, r2
    97b8:	bcc	9fb0 <MyGame_Example_Monster_parse_json_table+0x2004>
    97bc:	b	97d0 <MyGame_Example_Monster_parse_json_table+0x1824>
    97c0:	movw	r2, #13407	; 0x345f
    97c4:	movt	r2, #29494	; 0x7336
    97c8:	cmp	ip, r2
    97cc:	bcc	9fb0 <MyGame_Example_Monster_parse_json_table+0x2004>
    97d0:	mov	r3, r1
    97d4:	mov	r2, r0
    97d8:	movw	ip, #12895	; 0x325f
    97dc:	movt	ip, #30003	; 0x7533
    97e0:	cmp	r3, ip
    97e4:	bne	97fc <MyGame_Example_Monster_parse_json_table+0x1850>
    97e8:	movw	r3, #30257	; 0x7631
    97ec:	movt	r3, #26222	; 0x666e
    97f0:	cmp	r2, r3
    97f4:	bcc	9d1c <MyGame_Example_Monster_parse_json_table+0x1d70>
    97f8:	b	980c <MyGame_Example_Monster_parse_json_table+0x1860>
    97fc:	movw	r2, #12895	; 0x325f
    9800:	movt	r2, #30003	; 0x7533
    9804:	cmp	r3, r2
    9808:	bcc	9d1c <MyGame_Example_Monster_parse_json_table+0x1d70>
    980c:	mov	ip, r1
    9810:	mov	r3, r0
    9814:	eor	r2, ip, #95	; 0x5f
    9818:	eor	r2, r2, #12800	; 0x3200
    981c:	eor	r2, r2, #3342336	; 0x330000
    9820:	eor	r2, r2, #1962934272	; 0x75000000
    9824:	eor	r3, r3, #49	; 0x31
    9828:	eor	r3, r3, #30208	; 0x7600
    982c:	eor	r3, r3, #7208960	; 0x6e0000
    9830:	eor	r3, r3, #1711276032	; 0x66000000
    9834:	orr	r3, r2, r3
    9838:	cmp	r3, #0
    983c:	beq	9af0 <MyGame_Example_Monster_parse_json_table+0x1b44>
    9840:	eor	ip, r1, #95	; 0x5f
    9844:	eor	ip, ip, #144384	; 0x23400
    9848:	eor	ip, ip, #20185088	; 0x1340000
    984c:	eor	ip, ip, #1946157056	; 0x74000000
    9850:	eor	r0, r0, #49	; 0x31
    9854:	eor	r0, r0, #30208	; 0x7600
    9858:	eor	r0, r0, #7208960	; 0x6e0000
    985c:	eor	r0, r0, #1711276032	; 0x66000000
    9860:	orr	r1, ip, r0
    9864:	cmp	r1, #0
    9868:	bne	9ad8 <MyGame_Example_Monster_parse_json_table+0x1b2c>
    986c:	mov	r1, r4
    9870:	mov	r4, r1
    9874:	mov	r3, #8
    9878:	mov	r2, r5
    987c:	mov	r0, r6
    9880:	bl	118c <flatcc_json_parser_match_symbol>
    9884:	cmp	r4, r0
    9888:	bne	99f8 <MyGame_Example_Monster_parse_json_table+0x1a4c>
    988c:	add	r4, r0, #8
    9890:	mov	r1, r5
    9894:	mov	r0, r4
    9898:	bl	cc0 <flatcc_json_parser_symbol_part>
    989c:	and	r3, r1, #-16777216	; 0xff000000
    98a0:	mov	ip, #0
    98a4:	eor	r1, r3, #1627389952	; 0x61000000
    98a8:	orr	r1, r1, ip
    98ac:	cmp	r1, #0
    98b0:	bne	99e0 <MyGame_Example_Monster_parse_json_table+0x1a34>
    98b4:	mov	r3, #1
    98b8:	mov	r2, r5
    98bc:	mov	r1, r4
    98c0:	mov	r0, r6
    98c4:	bl	118c <flatcc_json_parser_match_symbol>
    98c8:	mov	r1, r0
    98cc:	cmp	r4, r1
    98d0:	beq	99cc <MyGame_Example_Monster_parse_json_table+0x1a20>
    98d4:	mov	ip, #0
    98d8:	mov	r3, #0
    98dc:	str	r3, [sp, #128]	; 0x80
    98e0:	str	ip, [sp, #132]	; 0x84
    98e4:	mov	r9, r1
    98e8:	add	r3, sp, #128	; 0x80
    98ec:	mov	r2, r5
    98f0:	mov	r0, r6
    98f4:	bl	1a18 <flatcc_json_parser_uint64>
    98f8:	mov	r4, r0
    98fc:	cmp	r9, r4
    9900:	bne	9968 <MyGame_Example_Monster_parse_json_table+0x19bc>
    9904:	mov	r9, r4
    9908:	ldr	r3, [pc, #60]	; 994c <MyGame_Example_Monster_parse_json_table+0x19a0>
    990c:	add	r1, sp, #128	; 0x80
    9910:	str	r1, [sp]
    9914:	mov	r2, r5
    9918:	mov	r1, r9
    991c:	mov	r0, r6
    9920:	bl	2158 <flatcc_json_parser_symbolic_uint64>
    9924:	mov	r4, r0
    9928:	cmp	r4, r9
    992c:	beq	995c <MyGame_Example_Monster_parse_json_table+0x19b0>
    9930:	cmp	r4, r5
    9934:	moveq	ip, #1
    9938:	movne	ip, #0
    993c:	b	9960 <MyGame_Example_Monster_parse_json_table+0x19b4>
    9940:	.word	0x00000234
    9944:	.word	0x0000024c
    9948:	.word	0x00000240
    994c:	.word	0x00000228
    9950:	.word	0x000001a4
	...
    995c:	mov	ip, #1
    9960:	cmp	ip, #0
    9964:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9968:	ldr	r3, [sp, #128]	; 0x80
    996c:	ldr	r1, [sp, #132]	; 0x84
    9970:	orr	r1, r1, r3
    9974:	cmp	r1, #0
    9978:	bne	9994 <MyGame_Example_Monster_parse_json_table+0x19e8>
    997c:	ldr	r1, [r6, #8]
    9980:	and	r0, r1, #2
    9984:	cmp	r0, #0
    9988:	movne	r1, #1
    998c:	moveq	r1, #0
    9990:	b	9998 <MyGame_Example_Monster_parse_json_table+0x19ec>
    9994:	mov	r1, #1
    9998:	cmp	r1, #0
    999c:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    99a0:	ldr	r0, [r6]
    99a4:	mov	r1, #23
    99a8:	mov	r2, #8
    99ac:	mov	r3, #8
    99b0:	bl	0 <flatcc_builder_table_add>
    99b4:	cmp	r0, #0
    99b8:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    99bc:	ldr	r2, [sp, #128]	; 0x80
    99c0:	ldr	r3, [sp, #132]	; 0x84
    99c4:	bl	128 <flatbuffers_uint64_write_to_pe>
    99c8:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    99cc:	mov	r2, r5
    99d0:	mov	r0, r6
    99d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    99d8:	mov	r4, r0
    99dc:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    99e0:	mov	r2, r5
    99e4:	mov	r1, r4
    99e8:	mov	r0, r6
    99ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    99f0:	mov	r4, r0
    99f4:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    99f8:	mov	r1, #0
    99fc:	mov	ip, #0
    9a00:	str	ip, [sp, #120]	; 0x78
    9a04:	str	r1, [sp, #124]	; 0x7c
    9a08:	mov	r9, r0
    9a0c:	add	r3, sp, #120	; 0x78
    9a10:	mov	r2, r5
    9a14:	mov	r1, r0
    9a18:	mov	r0, r6
    9a1c:	bl	1a18 <flatcc_json_parser_uint64>
    9a20:	mov	r4, r0
    9a24:	cmp	r9, r4
    9a28:	bne	9a74 <MyGame_Example_Monster_parse_json_table+0x1ac8>
    9a2c:	mov	r9, r4
    9a30:	ldr	r3, [pc, #2908]	; a594 <MyGame_Example_Monster_parse_json_table+0x25e8>
    9a34:	add	r0, sp, #120	; 0x78
    9a38:	str	r0, [sp]
    9a3c:	mov	r2, r5
    9a40:	mov	r1, r4
    9a44:	mov	r0, r6
    9a48:	bl	2158 <flatcc_json_parser_symbolic_uint64>
    9a4c:	mov	r4, r0
    9a50:	cmp	r4, r9
    9a54:	beq	9a68 <MyGame_Example_Monster_parse_json_table+0x1abc>
    9a58:	cmp	r4, r5
    9a5c:	moveq	r0, #1
    9a60:	movne	r0, #0
    9a64:	b	9a6c <MyGame_Example_Monster_parse_json_table+0x1ac0>
    9a68:	mov	r0, #1
    9a6c:	cmp	r0, #0
    9a70:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9a74:	ldr	r3, [sp, #120]	; 0x78
    9a78:	ldr	ip, [sp, #124]	; 0x7c
    9a7c:	orr	r2, ip, r3
    9a80:	cmp	r2, #0
    9a84:	bne	9aa0 <MyGame_Example_Monster_parse_json_table+0x1af4>
    9a88:	ldr	r1, [r6, #8]
    9a8c:	and	r3, r1, #2
    9a90:	cmp	r3, #0
    9a94:	movne	r0, #1
    9a98:	moveq	r0, #0
    9a9c:	b	9aa4 <MyGame_Example_Monster_parse_json_table+0x1af8>
    9aa0:	mov	r0, #1
    9aa4:	cmp	r0, #0
    9aa8:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9aac:	ldr	r0, [r6]
    9ab0:	mov	r1, #19
    9ab4:	mov	r2, #8
    9ab8:	mov	r3, #8
    9abc:	bl	0 <flatcc_builder_table_add>
    9ac0:	cmp	r0, #0
    9ac4:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9ac8:	ldr	r2, [sp, #120]	; 0x78
    9acc:	ldr	r3, [sp, #124]	; 0x7c
    9ad0:	bl	128 <flatbuffers_uint64_write_to_pe>
    9ad4:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9ad8:	mov	r2, r5
    9adc:	mov	r1, r4
    9ae0:	mov	r0, r6
    9ae4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9ae8:	mov	r4, r0
    9aec:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9af0:	mov	r1, r4
    9af4:	mov	r4, r1
    9af8:	mov	r3, #8
    9afc:	mov	r2, r5
    9b00:	mov	r0, r6
    9b04:	bl	118c <flatcc_json_parser_match_symbol>
    9b08:	cmp	r4, r0
    9b0c:	bne	9c50 <MyGame_Example_Monster_parse_json_table+0x1ca4>
    9b10:	add	r4, r0, #8
    9b14:	mov	r1, r5
    9b18:	mov	r0, r4
    9b1c:	bl	cc0 <flatcc_json_parser_symbol_part>
    9b20:	and	r1, r1, #-16777216	; 0xff000000
    9b24:	mov	r3, #0
    9b28:	eor	ip, r1, #1627389952	; 0x61000000
    9b2c:	orr	r1, ip, r3
    9b30:	cmp	r1, #0
    9b34:	bne	9c38 <MyGame_Example_Monster_parse_json_table+0x1c8c>
    9b38:	mov	r3, #1
    9b3c:	mov	r2, r5
    9b40:	mov	r1, r4
    9b44:	mov	r0, r6
    9b48:	bl	118c <flatcc_json_parser_match_symbol>
    9b4c:	mov	r1, r0
    9b50:	cmp	r4, r1
    9b54:	beq	9c24 <MyGame_Example_Monster_parse_json_table+0x1c78>
    9b58:	mov	r2, #0
    9b5c:	str	r2, [sp, #72]	; 0x48
    9b60:	mov	r9, r1
    9b64:	add	r3, sp, #72	; 0x48
    9b68:	mov	r2, r5
    9b6c:	mov	r1, r9
    9b70:	mov	r0, r6
    9b74:	bl	1ae4 <flatcc_json_parser_uint32>
    9b78:	mov	r4, r0
    9b7c:	cmp	r9, r4
    9b80:	bne	9bcc <MyGame_Example_Monster_parse_json_table+0x1c20>
    9b84:	mov	r9, r4
    9b88:	ldr	r3, [pc, #2576]	; a5a0 <MyGame_Example_Monster_parse_json_table+0x25f4>
    9b8c:	add	r2, sp, #72	; 0x48
    9b90:	str	r2, [sp]
    9b94:	mov	r2, r5
    9b98:	mov	r1, r9
    9b9c:	mov	r0, r6
    9ba0:	bl	2348 <flatcc_json_parser_symbolic_uint32>
    9ba4:	mov	r4, r0
    9ba8:	cmp	r4, r9
    9bac:	beq	9bc0 <MyGame_Example_Monster_parse_json_table+0x1c14>
    9bb0:	cmp	r4, r5
    9bb4:	moveq	r1, #1
    9bb8:	movne	r1, #0
    9bbc:	b	9bc4 <MyGame_Example_Monster_parse_json_table+0x1c18>
    9bc0:	mov	r1, #1
    9bc4:	cmp	r1, #0
    9bc8:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9bcc:	ldr	r1, [sp, #72]	; 0x48
    9bd0:	cmp	r1, #0
    9bd4:	bne	9bf0 <MyGame_Example_Monster_parse_json_table+0x1c44>
    9bd8:	ldr	ip, [r6, #8]
    9bdc:	and	r3, ip, #2
    9be0:	cmp	r3, #0
    9be4:	movne	r3, #1
    9be8:	moveq	r3, #0
    9bec:	b	9bf4 <MyGame_Example_Monster_parse_json_table+0x1c48>
    9bf0:	mov	r3, #1
    9bf4:	cmp	r3, #0
    9bf8:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9bfc:	ldr	r0, [r6]
    9c00:	mov	r1, #21
    9c04:	mov	r2, #4
    9c08:	mov	r3, #4
    9c0c:	bl	0 <flatcc_builder_table_add>
    9c10:	cmp	r0, #0
    9c14:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9c18:	ldr	r1, [sp, #72]	; 0x48
    9c1c:	bl	d8 <flatbuffers_uint32_write_to_pe>
    9c20:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9c24:	mov	r2, r5
    9c28:	mov	r0, r6
    9c2c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9c30:	mov	r4, r0
    9c34:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9c38:	mov	r2, r5
    9c3c:	mov	r1, r4
    9c40:	mov	r0, r6
    9c44:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9c48:	mov	r4, r0
    9c4c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9c50:	mov	r1, #0
    9c54:	str	r1, [sp, #68]	; 0x44
    9c58:	mov	r9, r0
    9c5c:	add	r3, sp, #68	; 0x44
    9c60:	mov	r2, r5
    9c64:	mov	r1, r0
    9c68:	mov	r0, r6
    9c6c:	bl	1ae4 <flatcc_json_parser_uint32>
    9c70:	mov	r4, r0
    9c74:	cmp	r9, r4
    9c78:	bne	9cc4 <MyGame_Example_Monster_parse_json_table+0x1d18>
    9c7c:	mov	r9, r4
    9c80:	ldr	r3, [pc, #2312]	; a590 <MyGame_Example_Monster_parse_json_table+0x25e4>
    9c84:	add	r0, sp, #68	; 0x44
    9c88:	str	r0, [sp]
    9c8c:	mov	r2, r5
    9c90:	mov	r1, r4
    9c94:	mov	r0, r6
    9c98:	bl	2348 <flatcc_json_parser_symbolic_uint32>
    9c9c:	mov	r4, r0
    9ca0:	cmp	r4, r9
    9ca4:	beq	9cb8 <MyGame_Example_Monster_parse_json_table+0x1d0c>
    9ca8:	cmp	r4, r5
    9cac:	moveq	r2, #1
    9cb0:	movne	r2, #0
    9cb4:	b	9cbc <MyGame_Example_Monster_parse_json_table+0x1d10>
    9cb8:	mov	r2, #1
    9cbc:	cmp	r2, #0
    9cc0:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9cc4:	ldr	r2, [sp, #68]	; 0x44
    9cc8:	cmp	r2, #0
    9ccc:	bne	9ce8 <MyGame_Example_Monster_parse_json_table+0x1d3c>
    9cd0:	ldr	r0, [r6, #8]
    9cd4:	and	r0, r0, #2
    9cd8:	cmp	r0, #0
    9cdc:	movne	r2, #1
    9ce0:	moveq	r2, #0
    9ce4:	b	9cec <MyGame_Example_Monster_parse_json_table+0x1d40>
    9ce8:	mov	r2, #1
    9cec:	cmp	r2, #0
    9cf0:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9cf4:	ldr	r0, [r6]
    9cf8:	mov	r1, #17
    9cfc:	mov	r2, #4
    9d00:	mov	r3, #4
    9d04:	bl	0 <flatcc_builder_table_add>
    9d08:	cmp	r0, #0
    9d0c:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9d10:	ldr	r1, [sp, #68]	; 0x44
    9d14:	bl	d8 <flatbuffers_uint32_write_to_pe>
    9d18:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9d1c:	eor	r3, r1, #95	; 0x5f
    9d20:	eor	r3, r3, #144384	; 0x23400
    9d24:	eor	r3, r3, #53739520	; 0x3340000
    9d28:	eor	r3, r3, #1879048192	; 0x70000000
    9d2c:	eor	r1, r0, #49	; 0x31
    9d30:	eor	r1, r1, #30208	; 0x7600
    9d34:	eor	r1, r1, #7208960	; 0x6e0000
    9d38:	eor	r1, r1, #1711276032	; 0x66000000
    9d3c:	orr	r3, r3, r1
    9d40:	cmp	r3, #0
    9d44:	bne	9f98 <MyGame_Example_Monster_parse_json_table+0x1fec>
    9d48:	mov	r1, r4
    9d4c:	mov	r4, r1
    9d50:	mov	r3, #8
    9d54:	mov	r2, r5
    9d58:	mov	r0, r6
    9d5c:	bl	118c <flatcc_json_parser_match_symbol>
    9d60:	cmp	r4, r0
    9d64:	bne	9eb8 <MyGame_Example_Monster_parse_json_table+0x1f0c>
    9d68:	add	r4, r0, #8
    9d6c:	mov	r1, r5
    9d70:	mov	r0, r4
    9d74:	bl	cc0 <flatcc_json_parser_symbol_part>
    9d78:	and	r1, r1, #-16777216	; 0xff000000
    9d7c:	mov	ip, #0
    9d80:	eor	r0, r1, #1627389952	; 0x61000000
    9d84:	orr	r0, r0, ip
    9d88:	cmp	r0, #0
    9d8c:	bne	9ea0 <MyGame_Example_Monster_parse_json_table+0x1ef4>
    9d90:	mov	r3, #1
    9d94:	mov	r2, r5
    9d98:	mov	r1, r4
    9d9c:	mov	r0, r6
    9da0:	bl	118c <flatcc_json_parser_match_symbol>
    9da4:	mov	r1, r0
    9da8:	cmp	r4, r1
    9dac:	beq	9e8c <MyGame_Example_Monster_parse_json_table+0x1ee0>
    9db0:	mov	r0, #0
    9db4:	mov	ip, #0
    9db8:	str	ip, [sp, #112]	; 0x70
    9dbc:	str	r0, [sp, #116]	; 0x74
    9dc0:	mov	r9, r1
    9dc4:	add	r3, sp, #112	; 0x70
    9dc8:	mov	r2, r5
    9dcc:	mov	r0, r6
    9dd0:	bl	1d30 <flatcc_json_parser_int64>
    9dd4:	mov	r4, r0
    9dd8:	cmp	r9, r4
    9ddc:	bne	9e28 <MyGame_Example_Monster_parse_json_table+0x1e7c>
    9de0:	mov	r9, r4
    9de4:	ldr	r3, [pc, #1948]	; a588 <MyGame_Example_Monster_parse_json_table+0x25dc>
    9de8:	add	r0, sp, #112	; 0x70
    9dec:	str	r0, [sp]
    9df0:	mov	r2, r5
    9df4:	mov	r1, r9
    9df8:	mov	r0, r6
    9dfc:	bl	28b8 <flatcc_json_parser_symbolic_int64>
    9e00:	mov	r4, r0
    9e04:	cmp	r4, r9
    9e08:	beq	9e1c <MyGame_Example_Monster_parse_json_table+0x1e70>
    9e0c:	cmp	r4, r5
    9e10:	moveq	r1, #1
    9e14:	movne	r1, #0
    9e18:	b	9e20 <MyGame_Example_Monster_parse_json_table+0x1e74>
    9e1c:	mov	r1, #1
    9e20:	cmp	r1, #0
    9e24:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9e28:	ldr	r2, [sp, #112]	; 0x70
    9e2c:	ldr	r0, [sp, #116]	; 0x74
    9e30:	orr	r2, r0, r2
    9e34:	cmp	r2, #0
    9e38:	bne	9e54 <MyGame_Example_Monster_parse_json_table+0x1ea8>
    9e3c:	ldr	r0, [r6, #8]
    9e40:	and	r1, r0, #2
    9e44:	cmp	r1, #0
    9e48:	movne	r2, #1
    9e4c:	moveq	r2, #0
    9e50:	b	9e58 <MyGame_Example_Monster_parse_json_table+0x1eac>
    9e54:	mov	r2, #1
    9e58:	cmp	r2, #0
    9e5c:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9e60:	ldr	r0, [r6]
    9e64:	mov	r1, #22
    9e68:	mov	r2, #8
    9e6c:	mov	r3, #8
    9e70:	bl	0 <flatcc_builder_table_add>
    9e74:	cmp	r0, #0
    9e78:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9e7c:	ldr	r2, [sp, #112]	; 0x70
    9e80:	ldr	r3, [sp, #116]	; 0x74
    9e84:	bl	340 <flatbuffers_int64_write_to_pe>
    9e88:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9e8c:	mov	r2, r5
    9e90:	mov	r0, r6
    9e94:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9e98:	mov	r4, r0
    9e9c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9ea0:	mov	r2, r5
    9ea4:	mov	r1, r4
    9ea8:	mov	r0, r6
    9eac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9eb0:	mov	r4, r0
    9eb4:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9eb8:	mov	r1, #0
    9ebc:	mov	ip, #0
    9ec0:	str	ip, [sp, #152]	; 0x98
    9ec4:	str	r1, [sp, #156]	; 0x9c
    9ec8:	mov	r9, r0
    9ecc:	add	r3, sp, #152	; 0x98
    9ed0:	mov	r2, r5
    9ed4:	mov	r1, r0
    9ed8:	mov	r0, r6
    9edc:	bl	1d30 <flatcc_json_parser_int64>
    9ee0:	mov	r4, r0
    9ee4:	cmp	r9, r4
    9ee8:	bne	9f34 <MyGame_Example_Monster_parse_json_table+0x1f88>
    9eec:	mov	r9, r4
    9ef0:	ldr	r3, [pc, #1708]	; a5a4 <MyGame_Example_Monster_parse_json_table+0x25f8>
    9ef4:	add	r0, sp, #152	; 0x98
    9ef8:	str	r0, [sp]
    9efc:	mov	r2, r5
    9f00:	mov	r1, r4
    9f04:	mov	r0, r6
    9f08:	bl	28b8 <flatcc_json_parser_symbolic_int64>
    9f0c:	mov	r4, r0
    9f10:	cmp	r4, r9
    9f14:	beq	9f28 <MyGame_Example_Monster_parse_json_table+0x1f7c>
    9f18:	cmp	r4, r5
    9f1c:	moveq	r0, #1
    9f20:	movne	r0, #0
    9f24:	b	9f2c <MyGame_Example_Monster_parse_json_table+0x1f80>
    9f28:	mov	r0, #1
    9f2c:	cmp	r0, #0
    9f30:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9f34:	ldr	r3, [sp, #152]	; 0x98
    9f38:	ldr	ip, [sp, #156]	; 0x9c
    9f3c:	orr	r1, ip, r3
    9f40:	cmp	r1, #0
    9f44:	bne	9f60 <MyGame_Example_Monster_parse_json_table+0x1fb4>
    9f48:	ldr	r1, [r6, #8]
    9f4c:	and	r0, r1, #2
    9f50:	cmp	r0, #0
    9f54:	movne	r2, #1
    9f58:	moveq	r2, #0
    9f5c:	b	9f64 <MyGame_Example_Monster_parse_json_table+0x1fb8>
    9f60:	mov	r2, #1
    9f64:	cmp	r2, #0
    9f68:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9f6c:	ldr	r0, [r6]
    9f70:	mov	r1, #18
    9f74:	mov	r2, #8
    9f78:	mov	r3, #8
    9f7c:	bl	0 <flatcc_builder_table_add>
    9f80:	cmp	r0, #0
    9f84:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    9f88:	ldr	r2, [sp, #152]	; 0x98
    9f8c:	ldr	r3, [sp, #156]	; 0x9c
    9f90:	bl	340 <flatbuffers_int64_write_to_pe>
    9f94:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9f98:	mov	r2, r5
    9f9c:	mov	r1, r4
    9fa0:	mov	r0, r6
    9fa4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9fa8:	mov	r4, r0
    9fac:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    9fb0:	eor	r3, r1, #95	; 0x5f
    9fb4:	eor	r3, r3, #12800	; 0x3200
    9fb8:	eor	r3, r3, #3342336	; 0x330000
    9fbc:	eor	r3, r3, #1929379840	; 0x73000000
    9fc0:	eor	r2, r0, #49	; 0x31
    9fc4:	eor	r2, r2, #30208	; 0x7600
    9fc8:	eor	r2, r2, #7208960	; 0x6e0000
    9fcc:	eor	r2, r2, #1711276032	; 0x66000000
    9fd0:	orr	r0, r3, r2
    9fd4:	cmp	r0, #0
    9fd8:	bne	a204 <MyGame_Example_Monster_parse_json_table+0x2258>
    9fdc:	mov	r3, #8
    9fe0:	mov	r2, r5
    9fe4:	mov	r1, r4
    9fe8:	mov	r0, r6
    9fec:	bl	118c <flatcc_json_parser_match_symbol>
    9ff0:	mov	r9, r0
    9ff4:	cmp	r4, r9
    9ff8:	bne	a13c <MyGame_Example_Monster_parse_json_table+0x2190>
    9ffc:	add	r4, r9, #8
    a000:	mov	r1, r5
    a004:	mov	r0, r4
    a008:	bl	cc0 <flatcc_json_parser_symbol_part>
    a00c:	and	r3, r1, #-16777216	; 0xff000000
    a010:	mov	ip, #0
    a014:	eor	r0, r3, #1627389952	; 0x61000000
    a018:	orr	ip, r0, ip
    a01c:	cmp	ip, #0
    a020:	bne	a124 <MyGame_Example_Monster_parse_json_table+0x2178>
    a024:	mov	r1, r4
    a028:	mov	r4, r1
    a02c:	mov	r3, #1
    a030:	mov	r2, r5
    a034:	mov	r0, r6
    a038:	bl	118c <flatcc_json_parser_match_symbol>
    a03c:	mov	r1, r0
    a040:	cmp	r4, r1
    a044:	beq	a110 <MyGame_Example_Monster_parse_json_table+0x2164>
    a048:	mov	r0, #0
    a04c:	str	r0, [sp, #104]	; 0x68
    a050:	mov	r9, r1
    a054:	add	r3, sp, #104	; 0x68
    a058:	mov	r2, r5
    a05c:	mov	r0, r6
    a060:	bl	1dfc <flatcc_json_parser_int32>
    a064:	mov	r4, r0
    a068:	cmp	r9, r4
    a06c:	bne	a0b8 <MyGame_Example_Monster_parse_json_table+0x210c>
    a070:	mov	r9, r4
    a074:	ldr	r3, [pc, #1312]	; a59c <MyGame_Example_Monster_parse_json_table+0x25f0>
    a078:	add	r1, sp, #104	; 0x68
    a07c:	str	r1, [sp]
    a080:	mov	r2, r5
    a084:	mov	r1, r9
    a088:	mov	r0, r6
    a08c:	bl	2aa8 <flatcc_json_parser_symbolic_int32>
    a090:	mov	r4, r0
    a094:	cmp	r4, r9
    a098:	beq	a0ac <MyGame_Example_Monster_parse_json_table+0x2100>
    a09c:	cmp	r4, r5
    a0a0:	moveq	r1, #1
    a0a4:	movne	r1, #0
    a0a8:	b	a0b0 <MyGame_Example_Monster_parse_json_table+0x2104>
    a0ac:	mov	r1, #1
    a0b0:	cmp	r1, #0
    a0b4:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a0b8:	ldr	r1, [sp, #104]	; 0x68
    a0bc:	cmp	r1, #0
    a0c0:	bne	a0dc <MyGame_Example_Monster_parse_json_table+0x2130>
    a0c4:	ldr	r2, [r6, #8]
    a0c8:	and	r0, r2, #2
    a0cc:	cmp	r0, #0
    a0d0:	movne	r1, #1
    a0d4:	moveq	r1, #0
    a0d8:	b	a0e0 <MyGame_Example_Monster_parse_json_table+0x2134>
    a0dc:	mov	r1, #1
    a0e0:	cmp	r1, #0
    a0e4:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a0e8:	ldr	r0, [r6]
    a0ec:	mov	r1, #20
    a0f0:	mov	r2, #4
    a0f4:	mov	r3, #4
    a0f8:	bl	0 <flatcc_builder_table_add>
    a0fc:	cmp	r0, #0
    a100:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a104:	ldr	r1, [sp, #104]	; 0x68
    a108:	bl	2f0 <flatbuffers_int32_write_to_pe>
    a10c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a110:	mov	r2, r5
    a114:	mov	r0, r6
    a118:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a11c:	mov	r4, r0
    a120:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a124:	mov	r2, r5
    a128:	mov	r1, r4
    a12c:	mov	r0, r6
    a130:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a134:	mov	r4, r0
    a138:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a13c:	mov	r1, #0
    a140:	str	r1, [sp, #100]	; 0x64
    a144:	add	r3, sp, #100	; 0x64
    a148:	mov	r2, r5
    a14c:	mov	r1, r9
    a150:	mov	r0, r6
    a154:	bl	1dfc <flatcc_json_parser_int32>
    a158:	mov	r4, r0
    a15c:	cmp	r9, r4
    a160:	bne	a1ac <MyGame_Example_Monster_parse_json_table+0x2200>
    a164:	mov	r9, r4
    a168:	ldr	r3, [pc, #1080]	; a5a8 <MyGame_Example_Monster_parse_json_table+0x25fc>
    a16c:	add	r1, sp, #100	; 0x64
    a170:	str	r1, [sp]
    a174:	mov	r2, r5
    a178:	mov	r1, r4
    a17c:	mov	r0, r6
    a180:	bl	2aa8 <flatcc_json_parser_symbolic_int32>
    a184:	mov	r4, r0
    a188:	cmp	r4, r9
    a18c:	beq	a1a0 <MyGame_Example_Monster_parse_json_table+0x21f4>
    a190:	cmp	r4, r5
    a194:	moveq	r1, #1
    a198:	movne	r1, #0
    a19c:	b	a1a4 <MyGame_Example_Monster_parse_json_table+0x21f8>
    a1a0:	mov	r1, #1
    a1a4:	cmp	r1, #0
    a1a8:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a1ac:	ldr	r3, [sp, #100]	; 0x64
    a1b0:	cmp	r3, #0
    a1b4:	bne	a1d0 <MyGame_Example_Monster_parse_json_table+0x2224>
    a1b8:	ldr	r3, [r6, #8]
    a1bc:	and	ip, r3, #2
    a1c0:	cmp	ip, #0
    a1c4:	movne	r1, #1
    a1c8:	moveq	r1, #0
    a1cc:	b	a1d4 <MyGame_Example_Monster_parse_json_table+0x2228>
    a1d0:	mov	r1, #1
    a1d4:	cmp	r1, #0
    a1d8:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a1dc:	ldr	r0, [r6]
    a1e0:	mov	r1, #16
    a1e4:	mov	r2, #4
    a1e8:	mov	r3, #4
    a1ec:	bl	0 <flatcc_builder_table_add>
    a1f0:	cmp	r0, #0
    a1f4:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a1f8:	ldr	r1, [sp, #100]	; 0x64
    a1fc:	bl	2f0 <flatbuffers_int32_write_to_pe>
    a200:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a204:	mov	r2, r5
    a208:	mov	r1, r4
    a20c:	mov	r0, r6
    a210:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a214:	mov	r4, r0
    a218:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a21c:	bic	ip, sl, #255	; 0xff
    a220:	bic	ip, ip, #65280	; 0xff00
    a224:	eor	r2, fp, #884	; 0x374
    a228:	eor	r2, r2, #356352	; 0x57000
    a22c:	eor	r2, r2, #73400320	; 0x4600000
    a230:	eor	r2, r2, #1879048192	; 0x70000000
    a234:	eor	r3, ip, #3342336	; 0x330000
    a238:	eor	r3, r3, #1711276032	; 0x66000000
    a23c:	orr	r0, r2, r3
    a240:	cmp	r0, #0
    a244:	bne	a358 <MyGame_Example_Monster_parse_json_table+0x23ac>
    a248:	mov	r1, r4
    a24c:	mov	r4, r1
    a250:	mov	r3, #6
    a254:	mov	r2, r5
    a258:	mov	r0, r6
    a25c:	bl	118c <flatcc_json_parser_match_symbol>
    a260:	mov	r1, r0
    a264:	cmp	r4, r1
    a268:	beq	a344 <MyGame_Example_Monster_parse_json_table+0x2398>
    a26c:	vldr	s4, [pc, #824]	; a5ac <MyGame_Example_Monster_parse_json_table+0x2600>
    a270:	vstr	s4, [sp, #96]	; 0x60
    a274:	mov	r9, r1
    a278:	add	r3, sp, #96	; 0x60
    a27c:	mov	r2, r5
    a280:	mov	r0, r6
    a284:	bl	0 <flatcc_json_parser_float>
    a288:	mov	r4, r0
    a28c:	cmp	r9, r4
    a290:	bne	a2dc <MyGame_Example_Monster_parse_json_table+0x2330>
    a294:	mov	r9, r4
    a298:	ldr	r3, [pc, #748]	; a58c <MyGame_Example_Monster_parse_json_table+0x25e0>
    a29c:	add	r1, sp, #96	; 0x60
    a2a0:	str	r1, [sp]
    a2a4:	mov	r2, r5
    a2a8:	mov	r1, r9
    a2ac:	mov	r0, r6
    a2b0:	bl	31e4 <flatcc_json_parser_symbolic_float>
    a2b4:	mov	r4, r0
    a2b8:	cmp	r4, r9
    a2bc:	beq	a2d0 <MyGame_Example_Monster_parse_json_table+0x2324>
    a2c0:	cmp	r4, r5
    a2c4:	moveq	r1, #1
    a2c8:	movne	r1, #0
    a2cc:	b	a2d4 <MyGame_Example_Monster_parse_json_table+0x2328>
    a2d0:	mov	r1, #1
    a2d4:	cmp	r1, #0
    a2d8:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a2dc:	vldr	s2, [sp, #96]	; 0x60
    a2e0:	vcvt.f64.f32	d6, s2
    a2e4:	vldr	d7, [pc, #708]	; a5b0 <MyGame_Example_Monster_parse_json_table+0x2604>
    a2e8:	vcmp.f64	d6, d7
    a2ec:	vmrs	APSR_nzcv, fpscr
    a2f0:	bne	a30c <MyGame_Example_Monster_parse_json_table+0x2360>
    a2f4:	ldr	r0, [r6, #8]
    a2f8:	and	r3, r0, #2
    a2fc:	cmp	r3, #0
    a300:	movne	r2, #1
    a304:	moveq	r2, #0
    a308:	b	a310 <MyGame_Example_Monster_parse_json_table+0x2364>
    a30c:	mov	r2, #1
    a310:	cmp	r2, #0
    a314:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a318:	ldr	r0, [r6]
    a31c:	mov	r1, #27
    a320:	mov	r2, #4
    a324:	mov	r3, #4
    a328:	bl	0 <flatcc_builder_table_add>
    a32c:	cmp	r0, #0
    a330:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a334:	vldr	s0, [sp, #96]	; 0x60
    a338:	vmov.f32	s0, s0
    a33c:	bl	3fc <flatbuffers_float_write_to_pe>
    a340:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a344:	mov	r2, r5
    a348:	mov	r0, r6
    a34c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a350:	mov	r4, r0
    a354:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a358:	mov	r2, r5
    a35c:	mov	r1, r4
    a360:	mov	r0, r6
    a364:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a368:	mov	r4, r0
    a36c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a370:	mov	r2, sl
    a374:	mov	ip, fp
    a378:	movw	r3, #28005	; 0x6d65
    a37c:	movt	r3, #28257	; 0x6e61
    a380:	cmp	ip, r3
    a384:	bne	a398 <MyGame_Example_Monster_parse_json_table+0x23ec>
    a388:	mov	r3, #0
    a38c:	cmp	r2, r3
    a390:	bcc	aadc <MyGame_Example_Monster_parse_json_table+0x2b30>
    a394:	b	a3ac <MyGame_Example_Monster_parse_json_table+0x2400>
    a398:	mov	r2, fp
    a39c:	movw	r0, #28005	; 0x6d65
    a3a0:	movt	r0, #28257	; 0x6e61
    a3a4:	cmp	r2, r0
    a3a8:	bcc	aadc <MyGame_Example_Monster_parse_json_table+0x2b30>
    a3ac:	mov	r0, sl
    a3b0:	mov	r3, fp
    a3b4:	movw	ip, #29556	; 0x7374
    a3b8:	movt	ip, #29797	; 0x7465
    a3bc:	cmp	r3, ip
    a3c0:	bne	a3d4 <MyGame_Example_Monster_parse_json_table+0x2428>
    a3c4:	mov	ip, #0
    a3c8:	cmp	r0, ip
    a3cc:	bcc	a7cc <MyGame_Example_Monster_parse_json_table+0x2820>
    a3d0:	b	a3e8 <MyGame_Example_Monster_parse_json_table+0x243c>
    a3d4:	mov	r1, fp
    a3d8:	movw	r0, #29556	; 0x7374
    a3dc:	movt	r0, #29797	; 0x7465
    a3e0:	cmp	r1, r0
    a3e4:	bcc	a7cc <MyGame_Example_Monster_parse_json_table+0x2820>
    a3e8:	mov	r3, fp
    a3ec:	mov	r0, sl
    a3f0:	and	r1, r0, #-16777216	; 0xff000000
    a3f4:	eor	r2, r3, #884	; 0x374
    a3f8:	eor	r2, r2, #356352	; 0x57000
    a3fc:	eor	r2, r2, #73400320	; 0x4600000
    a400:	eor	r2, r2, #1879048192	; 0x70000000
    a404:	eor	r0, r1, #872415232	; 0x34000000
    a408:	orr	r0, r2, r0
    a40c:	cmp	r0, #0
    a410:	bne	a50c <MyGame_Example_Monster_parse_json_table+0x2560>
    a414:	mov	r1, r4
    a418:	mov	r9, r1
    a41c:	mov	r3, #5
    a420:	mov	r2, r5
    a424:	mov	r0, r6
    a428:	bl	118c <flatcc_json_parser_match_symbol>
    a42c:	mov	r4, r0
    a430:	cmp	r9, r4
    a434:	beq	a5b8 <MyGame_Example_Monster_parse_json_table+0x260c>
    a438:	ldr	r0, [r6]
    a43c:	mov	r1, #4
    a440:	mov	r2, #2
    a444:	mvn	r3, #-1073741824	; 0xc0000000
    a448:	bl	0 <flatcc_builder_start_vector>
    a44c:	cmp	r0, #0
    a450:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a454:	add	r3, sp, #76	; 0x4c
    a458:	mov	r2, r5
    a45c:	mov	r1, r4
    a460:	mov	r0, r6
    a464:	bl	f84 <flatcc_json_parser_array_start>
    a468:	mov	r4, r0
    a46c:	ldr	r1, [sp, #76]	; 0x4c
    a470:	cmp	r1, #0
    a474:	beq	a4bc <MyGame_Example_Monster_parse_json_table+0x2510>
    a478:	ldr	r0, [r6]
    a47c:	mov	r1, #1
    a480:	bl	0 <flatcc_builder_extend_vector>
    a484:	mov	r3, r0
    a488:	cmp	r3, #0
    a48c:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a490:	mov	r2, r5
    a494:	mov	r1, r4
    a498:	mov	r0, r6
    a49c:	bl	4928 <MyGame_Example_Test_parse_json_struct_inline>
    a4a0:	mov	r1, r0
    a4a4:	add	r3, sp, #76	; 0x4c
    a4a8:	mov	r2, r5
    a4ac:	mov	r0, r6
    a4b0:	bl	1064 <flatcc_json_parser_array_end>
    a4b4:	mov	r4, r0
    a4b8:	b	a46c <MyGame_Example_Monster_parse_json_table+0x24c0>
    a4bc:	ldr	r0, [r6]
    a4c0:	bl	0 <flatcc_builder_end_vector>
    a4c4:	str	r0, [sp, #80]	; 0x50
    a4c8:	ldr	r3, [sp, #80]	; 0x50
    a4cc:	cmp	r3, #0
    a4d0:	beq	a4f4 <MyGame_Example_Monster_parse_json_table+0x2548>
    a4d4:	ldr	r0, [r6]
    a4d8:	mov	r1, #9
    a4dc:	bl	0 <flatcc_builder_table_add_offset>
    a4e0:	mov	r7, r0
    a4e4:	cmp	r7, #0
    a4e8:	moveq	r1, #1
    a4ec:	movne	r1, #0
    a4f0:	b	a4f8 <MyGame_Example_Monster_parse_json_table+0x254c>
    a4f4:	mov	r1, #1
    a4f8:	cmp	r1, #0
    a4fc:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a500:	ldr	r2, [sp, #80]	; 0x50
    a504:	str	r2, [r7]
    a508:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a50c:	mov	r0, fp
    a510:	mov	r1, #0
    a514:	eor	r2, r0, #884	; 0x374
    a518:	eor	r2, r2, #356352	; 0x57000
    a51c:	eor	r2, r2, #73400320	; 0x4600000
    a520:	eor	r2, r2, #1879048192	; 0x70000000
    a524:	orr	ip, r2, r1
    a528:	cmp	ip, #0
    a52c:	bne	a5b8 <MyGame_Example_Monster_parse_json_table+0x260c>
    a530:	mov	r9, r4
    a534:	mov	r3, #4
    a538:	mov	r2, r5
    a53c:	mov	r1, r9
    a540:	mov	r0, r6
    a544:	bl	118c <flatcc_json_parser_match_symbol>
    a548:	mov	r4, r0
    a54c:	cmp	r9, r4
    a550:	beq	a5b8 <MyGame_Example_Monster_parse_json_table+0x260c>
    a554:	mov	r3, #0
    a558:	mov	ip, #8
    a55c:	ldr	r0, [sp, #84]	; 0x54
    a560:	ldr	r1, [pc, #48]	; a598 <MyGame_Example_Monster_parse_json_table+0x25ec>
    a564:	str	r1, [sp, #8]
    a568:	str	r0, [sp, #4]
    a56c:	str	ip, [sp]
    a570:	mov	r2, r5
    a574:	mov	r1, r4
    a578:	mov	r0, r6
    a57c:	bl	0 <flatcc_json_parser_union>
    a580:	mov	r4, r0
    a584:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a588:	.word	0x000001f8
    a58c:	.word	0x000001c8
    a590:	.word	0x00000204
    a594:	.word	0x0000021c
    a598:	.word	0x00000000
    a59c:	.word	0x000001e0
    a5a0:	.word	0x00000210
    a5a4:	.word	0x000001ec
    a5a8:	.word	0x000001d4
	...
    a5b8:	mov	r3, fp
    a5bc:	mov	r2, sl
    a5c0:	and	r2, r2, #-16777216	; 0xff000000
    a5c4:	eor	r3, r3, #884	; 0x374
    a5c8:	eor	r3, r3, #356352	; 0x57000
    a5cc:	eor	r3, r3, #73400320	; 0x4600000
    a5d0:	eor	r3, r3, #1879048192	; 0x70000000
    a5d4:	eor	r1, r2, #889192448	; 0x35000000
    a5d8:	orr	r2, r3, r1
    a5dc:	cmp	r2, #0
    a5e0:	bne	a6dc <MyGame_Example_Monster_parse_json_table+0x2730>
    a5e4:	mov	r9, r4
    a5e8:	mov	r3, #5
    a5ec:	mov	r2, r5
    a5f0:	mov	r1, r9
    a5f4:	mov	r0, r6
    a5f8:	bl	118c <flatcc_json_parser_match_symbol>
    a5fc:	mov	r4, r0
    a600:	cmp	r9, r4
    a604:	beq	a6dc <MyGame_Example_Monster_parse_json_table+0x2730>
    a608:	ldr	r0, [r6]
    a60c:	mov	r1, #4
    a610:	mov	r2, #2
    a614:	mvn	r3, #-1073741824	; 0xc0000000
    a618:	bl	0 <flatcc_builder_start_vector>
    a61c:	cmp	r0, #0
    a620:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a624:	add	r3, sp, #76	; 0x4c
    a628:	mov	r2, r5
    a62c:	mov	r1, r4
    a630:	mov	r0, r6
    a634:	bl	f84 <flatcc_json_parser_array_start>
    a638:	mov	r4, r0
    a63c:	ldr	r2, [sp, #76]	; 0x4c
    a640:	cmp	r2, #0
    a644:	beq	a68c <MyGame_Example_Monster_parse_json_table+0x26e0>
    a648:	ldr	r0, [r6]
    a64c:	mov	r1, #1
    a650:	bl	0 <flatcc_builder_extend_vector>
    a654:	mov	r3, r0
    a658:	cmp	r3, #0
    a65c:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a660:	mov	r2, r5
    a664:	mov	r1, r4
    a668:	mov	r0, r6
    a66c:	bl	4928 <MyGame_Example_Test_parse_json_struct_inline>
    a670:	mov	r1, r0
    a674:	add	r3, sp, #76	; 0x4c
    a678:	mov	r2, r5
    a67c:	mov	r0, r6
    a680:	bl	1064 <flatcc_json_parser_array_end>
    a684:	mov	r4, r0
    a688:	b	a63c <MyGame_Example_Monster_parse_json_table+0x2690>
    a68c:	ldr	r0, [r6]
    a690:	bl	0 <flatcc_builder_end_vector>
    a694:	str	r0, [sp, #80]	; 0x50
    a698:	ldr	r1, [sp, #80]	; 0x50
    a69c:	cmp	r1, #0
    a6a0:	beq	a6c4 <MyGame_Example_Monster_parse_json_table+0x2718>
    a6a4:	ldr	r0, [r6]
    a6a8:	mov	r1, #31
    a6ac:	bl	0 <flatcc_builder_table_add_offset>
    a6b0:	mov	r7, r0
    a6b4:	cmp	r7, #0
    a6b8:	moveq	r0, #1
    a6bc:	movne	r0, #0
    a6c0:	b	a6c8 <MyGame_Example_Monster_parse_json_table+0x271c>
    a6c4:	mov	r0, #1
    a6c8:	cmp	r0, #0
    a6cc:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a6d0:	ldr	r1, [sp, #80]	; 0x50
    a6d4:	str	r1, [r7]
    a6d8:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a6dc:	eor	r3, fp, #884	; 0x374
    a6e0:	eor	r3, r3, #356352	; 0x57000
    a6e4:	eor	r3, r3, #73400320	; 0x4600000
    a6e8:	eor	r3, r3, #1879048192	; 0x70000000
    a6ec:	eor	r2, sl, #2416	; 0x970
    a6f0:	eor	r2, r2, #290816	; 0x47000
    a6f4:	eor	r2, r2, #258998272	; 0xf700000
    a6f8:	eor	r2, r2, #1342177280	; 0x50000000
    a6fc:	orr	r2, r3, r2
    a700:	cmp	r2, #0
    a704:	bne	a7b4 <MyGame_Example_Monster_parse_json_table+0x2808>
    a708:	add	r4, r4, #8
    a70c:	mov	r1, r5
    a710:	mov	r0, r4
    a714:	bl	cc0 <flatcc_json_parser_symbol_part>
    a718:	and	r0, r1, #-16777216	; 0xff000000
    a71c:	mov	ip, #0
    a720:	eor	r0, r0, #1694498816	; 0x65000000
    a724:	orr	r1, r0, ip
    a728:	cmp	r1, #0
    a72c:	bne	a79c <MyGame_Example_Monster_parse_json_table+0x27f0>
    a730:	mov	r3, #1
    a734:	mov	r2, r5
    a738:	mov	r1, r4
    a73c:	mov	r0, r6
    a740:	bl	118c <flatcc_json_parser_match_symbol>
    a744:	mov	r1, r0
    a748:	cmp	r4, r1
    a74c:	beq	a788 <MyGame_Example_Monster_parse_json_table+0x27dc>
    a750:	mov	r3, #0
    a754:	mov	r0, #8
    a758:	ldr	r9, [sp, #84]	; 0x54
    a75c:	ldr	ip, [pc, #3368]	; b48c <MyGame_Example_Monster_parse_json_table+0x34e0>
    a760:	ldr	r2, [pc, #3356]	; b484 <MyGame_Example_Monster_parse_json_table+0x34d8>
    a764:	str	r2, [sp, #12]
    a768:	str	ip, [sp, #8]
    a76c:	str	r9, [sp, #4]
    a770:	str	r0, [sp]
    a774:	mov	r2, r5
    a778:	mov	r0, r6
    a77c:	bl	0 <flatcc_json_parser_union_type>
    a780:	mov	r4, r0
    a784:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a788:	mov	r2, r5
    a78c:	mov	r0, r6
    a790:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a794:	mov	r4, r0
    a798:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a79c:	mov	r2, r5
    a7a0:	mov	r1, r4
    a7a4:	mov	r0, r6
    a7a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a7ac:	mov	r4, r0
    a7b0:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a7b4:	mov	r2, r5
    a7b8:	mov	r1, r4
    a7bc:	mov	r0, r6
    a7c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a7c4:	mov	r4, r0
    a7c8:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a7cc:	mov	r0, fp
    a7d0:	mov	ip, sl
    a7d4:	movw	r1, #29285	; 0x7265
    a7d8:	movt	r1, #28769	; 0x7061
    a7dc:	cmp	r0, r1
    a7e0:	bne	a7f8 <MyGame_Example_Monster_parse_json_table+0x284c>
    a7e4:	movw	r2, #24430	; 0x5f6e
    a7e8:	movt	r2, #28276	; 0x6e74
    a7ec:	cmp	ip, r2
    a7f0:	bcc	aa14 <MyGame_Example_Monster_parse_json_table+0x2a68>
    a7f4:	b	a808 <MyGame_Example_Monster_parse_json_table+0x285c>
    a7f8:	movw	r1, #29285	; 0x7265
    a7fc:	movt	r1, #28769	; 0x7061
    a800:	cmp	r0, r1
    a804:	bcc	aa14 <MyGame_Example_Monster_parse_json_table+0x2a68>
    a808:	mov	r2, fp
    a80c:	eor	ip, r2, #101	; 0x65
    a810:	eor	ip, ip, #29184	; 0x7200
    a814:	eor	ip, ip, #6356992	; 0x610000
    a818:	eor	ip, ip, #1879048192	; 0x70000000
    a81c:	eor	r1, sl, #110	; 0x6e
    a820:	eor	r1, r1, #24320	; 0x5f00
    a824:	eor	r1, r1, #41156608	; 0x2740000
    a828:	eor	r1, r1, #1811939328	; 0x6c000000
    a82c:	orr	ip, ip, r1
    a830:	cmp	ip, #0
    a834:	bne	a968 <MyGame_Example_Monster_parse_json_table+0x29bc>
    a838:	add	r4, r4, #8
    a83c:	mov	r1, r5
    a840:	mov	r0, r4
    a844:	bl	cc0 <flatcc_json_parser_symbol_part>
    a848:	eor	ip, r1, #115	; 0x73
    a84c:	eor	ip, ip, #25856	; 0x6500
    a850:	eor	ip, ip, #7143424	; 0x6d0000
    a854:	eor	ip, ip, #1627389952	; 0x61000000
    a858:	eor	r3, r0, #101	; 0x65
    a85c:	eor	r3, r3, #25344	; 0x6300
    a860:	eor	r3, r3, #6356992	; 0x610000
    a864:	eor	r3, r3, #1879048192	; 0x70000000
    a868:	orr	r3, ip, r3
    a86c:	cmp	r3, #0
    a870:	bne	a950 <MyGame_Example_Monster_parse_json_table+0x29a4>
    a874:	add	r4, r4, #8
    a878:	mov	r1, r5
    a87c:	mov	r0, r4
    a880:	bl	cc0 <flatcc_json_parser_symbol_part>
    a884:	and	r3, r0, #-16777216	; 0xff000000
    a888:	eor	r2, r1, #115	; 0x73
    a88c:	eor	r2, r2, #25856	; 0x6500
    a890:	eor	r2, r2, #57933824	; 0x3740000
    a894:	eor	r2, r2, #1543503872	; 0x5c000000
    a898:	eor	ip, r3, #1946157056	; 0x74000000
    a89c:	orr	r3, r2, ip
    a8a0:	cmp	r3, #0
    a8a4:	bne	a938 <MyGame_Example_Monster_parse_json_table+0x298c>
    a8a8:	mov	r1, r4
    a8ac:	mov	r4, r1
    a8b0:	mov	r3, #5
    a8b4:	mov	r2, r5
    a8b8:	mov	r0, r6
    a8bc:	bl	118c <flatcc_json_parser_match_symbol>
    a8c0:	mov	r1, r0
    a8c4:	cmp	r4, r1
    a8c8:	beq	a924 <MyGame_Example_Monster_parse_json_table+0x2978>
    a8cc:	add	r3, sp, #80	; 0x50
    a8d0:	mov	r2, r5
    a8d4:	mov	r0, r6
    a8d8:	bl	3740 <MyGame_InParentNamespace_parse_json_table>
    a8dc:	mov	r4, r0
    a8e0:	ldr	r2, [sp, #80]	; 0x50
    a8e4:	cmp	r2, #0
    a8e8:	beq	a90c <MyGame_Example_Monster_parse_json_table+0x2960>
    a8ec:	ldr	r0, [r6]
    a8f0:	mov	r1, #34	; 0x22
    a8f4:	bl	0 <flatcc_builder_table_add_offset>
    a8f8:	mov	r7, r0
    a8fc:	cmp	r7, #0
    a900:	moveq	r1, #1
    a904:	movne	r1, #0
    a908:	b	a910 <MyGame_Example_Monster_parse_json_table+0x2964>
    a90c:	mov	r1, #1
    a910:	cmp	r1, #0
    a914:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a918:	ldr	ip, [sp, #80]	; 0x50
    a91c:	str	ip, [r7]
    a920:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a924:	mov	r2, r5
    a928:	mov	r0, r6
    a92c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a930:	mov	r4, r0
    a934:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a938:	mov	r2, r5
    a93c:	mov	r1, r4
    a940:	mov	r0, r6
    a944:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a948:	mov	r4, r0
    a94c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a950:	mov	r2, r5
    a954:	mov	r1, r4
    a958:	mov	r0, r6
    a95c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a960:	mov	r4, r0
    a964:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a968:	bic	ip, fp, #255	; 0xff
    a96c:	mov	r3, #0
    a970:	eor	ip, ip, #29440	; 0x7300
    a974:	eor	ip, ip, #7274496	; 0x6f0000
    a978:	eor	ip, ip, #1879048192	; 0x70000000
    a97c:	orr	r2, ip, r3
    a980:	cmp	r2, #0
    a984:	bne	a9fc <MyGame_Example_Monster_parse_json_table+0x2a50>
    a988:	mov	r1, r4
    a98c:	mov	r9, r1
    a990:	mov	r3, #3
    a994:	mov	r2, r5
    a998:	mov	r0, r6
    a99c:	bl	118c <flatcc_json_parser_match_symbol>
    a9a0:	mov	r4, r0
    a9a4:	cmp	r9, r4
    a9a8:	beq	a9e4 <MyGame_Example_Monster_parse_json_table+0x2a38>
    a9ac:	ldr	r0, [r6]
    a9b0:	mov	r1, #0
    a9b4:	mov	r2, #32
    a9b8:	mov	r3, #16
    a9bc:	bl	0 <flatcc_builder_table_add>
    a9c0:	cmp	r0, #0
    a9c4:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    a9c8:	mov	r3, r0
    a9cc:	mov	r2, r5
    a9d0:	mov	r1, r4
    a9d4:	mov	r0, r6
    a9d8:	bl	5250 <MyGame_Example_Vec3_parse_json_struct_inline>
    a9dc:	mov	r4, r0
    a9e0:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a9e4:	mov	r2, r5
    a9e8:	mov	r1, r4
    a9ec:	mov	r0, r6
    a9f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a9f4:	mov	r4, r0
    a9f8:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    a9fc:	mov	r2, r5
    aa00:	mov	r1, r4
    aa04:	mov	r0, r6
    aa08:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aa0c:	mov	r4, r0
    aa10:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    aa14:	mov	r0, #0
    aa18:	eor	r1, fp, #101	; 0x65
    aa1c:	eor	r1, r1, #27904	; 0x6d00
    aa20:	eor	r1, r1, #6356992	; 0x610000
    aa24:	eor	r1, r1, #1845493760	; 0x6e000000
    aa28:	orr	r2, r1, r0
    aa2c:	cmp	r2, #0
    aa30:	bne	aac4 <MyGame_Example_Monster_parse_json_table+0x2b18>
    aa34:	mov	r1, r4
    aa38:	mov	r4, r1
    aa3c:	mov	r3, #4
    aa40:	mov	r2, r5
    aa44:	mov	r0, r6
    aa48:	bl	118c <flatcc_json_parser_match_symbol>
    aa4c:	mov	r1, r0
    aa50:	cmp	r4, r1
    aa54:	beq	aab0 <MyGame_Example_Monster_parse_json_table+0x2b04>
    aa58:	add	r3, sp, #80	; 0x50
    aa5c:	mov	r2, r5
    aa60:	mov	r0, r6
    aa64:	bl	0 <flatcc_json_parser_build_string>
    aa68:	mov	r4, r0
    aa6c:	ldr	ip, [sp, #80]	; 0x50
    aa70:	cmp	ip, #0
    aa74:	beq	aa98 <MyGame_Example_Monster_parse_json_table+0x2aec>
    aa78:	ldr	r0, [r6]
    aa7c:	mov	r1, #3
    aa80:	bl	0 <flatcc_builder_table_add_offset>
    aa84:	mov	r7, r0
    aa88:	cmp	r7, #0
    aa8c:	moveq	ip, #1
    aa90:	movne	ip, #0
    aa94:	b	aa9c <MyGame_Example_Monster_parse_json_table+0x2af0>
    aa98:	mov	ip, #1
    aa9c:	cmp	ip, #0
    aaa0:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    aaa4:	ldr	r3, [sp, #80]	; 0x50
    aaa8:	str	r3, [r7]
    aaac:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    aab0:	mov	r2, r5
    aab4:	mov	r0, r6
    aab8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aabc:	mov	r4, r0
    aac0:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    aac4:	mov	r2, r5
    aac8:	mov	r1, r4
    aacc:	mov	r0, r6
    aad0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aad4:	mov	r4, r0
    aad8:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    aadc:	mov	r3, fp
    aae0:	movw	r1, #25976	; 0x6578
    aae4:	movt	r1, #26220	; 0x666c
    aae8:	cmp	r3, r1
    aaec:	bne	ab04 <MyGame_Example_Monster_parse_json_table+0x2b58>
    aaf0:	mov	r2, sl
    aaf4:	mov	r0, #0
    aaf8:	cmp	r2, r0
    aafc:	bcc	b1b8 <MyGame_Example_Monster_parse_json_table+0x320c>
    ab00:	b	ab18 <MyGame_Example_Monster_parse_json_table+0x2b6c>
    ab04:	mov	r3, fp
    ab08:	movw	ip, #25976	; 0x6578
    ab0c:	movt	ip, #26220	; 0x666c
    ab10:	cmp	r3, ip
    ab14:	bcc	b1b8 <MyGame_Example_Monster_parse_json_table+0x320c>
    ab18:	mov	r1, sl
    ab1c:	mov	r0, fp
    ab20:	movw	r2, #0
    ab24:	movt	r2, #26736	; 0x6870
    ab28:	cmp	r0, r2
    ab2c:	bne	ab40 <MyGame_Example_Monster_parse_json_table+0x2b94>
    ab30:	mov	r0, #0
    ab34:	cmp	r1, r0
    ab38:	bcc	affc <MyGame_Example_Monster_parse_json_table+0x3050>
    ab3c:	b	ab54 <MyGame_Example_Monster_parse_json_table+0x2ba8>
    ab40:	mov	r3, fp
    ab44:	movw	r0, #0
    ab48:	movt	r0, #26736	; 0x6870
    ab4c:	cmp	r3, r0
    ab50:	bcc	affc <MyGame_Example_Monster_parse_json_table+0x3050>
    ab54:	mov	r3, sl
    ab58:	mov	r2, fp
    ab5c:	movw	ip, #30309	; 0x7665
    ab60:	movt	ip, #26990	; 0x696e
    ab64:	cmp	r2, ip
    ab68:	bne	ab80 <MyGame_Example_Monster_parse_json_table+0x2bd4>
    ab6c:	movw	ip, #28530	; 0x6f72
    ab70:	movt	ip, #28276	; 0x6e74
    ab74:	cmp	r3, ip
    ab78:	bcc	aebc <MyGame_Example_Monster_parse_json_table+0x2f10>
    ab7c:	b	ab94 <MyGame_Example_Monster_parse_json_table+0x2be8>
    ab80:	mov	r2, fp
    ab84:	movw	r3, #30309	; 0x7665
    ab88:	movt	r3, #26990	; 0x696e
    ab8c:	cmp	r2, r3
    ab90:	bcc	aebc <MyGame_Example_Monster_parse_json_table+0x2f10>
    ab94:	mov	r1, fp
    ab98:	eor	r1, r1, #101	; 0x65
    ab9c:	eor	r1, r1, #30208	; 0x7600
    aba0:	eor	r1, r1, #7208960	; 0x6e0000
    aba4:	eor	r1, r1, #1761607680	; 0x69000000
    aba8:	eor	r2, sl, #114	; 0x72
    abac:	eor	r2, r2, #28416	; 0x6f00
    abb0:	eor	r2, r2, #41156608	; 0x2740000
    abb4:	eor	r2, r2, #1811939328	; 0x6c000000
    abb8:	orr	ip, r1, r2
    abbc:	cmp	ip, #0
    abc0:	bne	ad84 <MyGame_Example_Monster_parse_json_table+0x2dd8>
    abc4:	add	r9, r4, #8
    abc8:	mov	r1, r5
    abcc:	mov	r0, r9
    abd0:	bl	cc0 <flatcc_json_parser_symbol_part>
    abd4:	and	r3, r1, #-16777216	; 0xff000000
    abd8:	mov	r2, #0
    abdc:	eor	ip, r3, #2030043136	; 0x79000000
    abe0:	orr	r1, ip, r2
    abe4:	cmp	r1, #0
    abe8:	bne	ad6c <MyGame_Example_Monster_parse_json_table+0x2dc0>
    abec:	mov	r3, #1
    abf0:	mov	r2, r5
    abf4:	mov	r1, r9
    abf8:	mov	r0, r6
    abfc:	bl	118c <flatcc_json_parser_match_symbol>
    ac00:	mov	r4, r0
    ac04:	cmp	r9, r4
    ac08:	beq	ad54 <MyGame_Example_Monster_parse_json_table+0x2da8>
    ac0c:	ldr	r0, [r6]
    ac10:	mov	r1, #1
    ac14:	mov	r2, #1
    ac18:	mvn	r3, #0
    ac1c:	bl	0 <flatcc_builder_start_vector>
    ac20:	cmp	r0, #0
    ac24:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    ac28:	add	r3, sp, #76	; 0x4c
    ac2c:	mov	r2, r5
    ac30:	mov	r1, r4
    ac34:	mov	r0, r6
    ac38:	bl	f84 <flatcc_json_parser_array_start>
    ac3c:	mov	r4, r0
    ac40:	ldr	r1, [sp, #76]	; 0x4c
    ac44:	cmp	r1, #0
    ac48:	beq	ad04 <MyGame_Example_Monster_parse_json_table+0x2d58>
    ac4c:	mov	r0, #0
    ac50:	strb	r0, [sp, #59]	; 0x3b
    ac54:	ldr	r0, [r6]
    ac58:	mov	r1, #1
    ac5c:	bl	0 <flatcc_builder_extend_vector>
    ac60:	mov	sl, r0
    ac64:	cmp	sl, #0
    ac68:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    ac6c:	mov	r9, r4
    ac70:	add	r3, sp, #59	; 0x3b
    ac74:	mov	r2, r5
    ac78:	mov	r1, r4
    ac7c:	mov	r0, r6
    ac80:	bl	1c6c <flatcc_json_parser_uint8>
    ac84:	mov	r4, r0
    ac88:	cmp	r9, r4
    ac8c:	bne	acd8 <MyGame_Example_Monster_parse_json_table+0x2d2c>
    ac90:	mov	r9, r4
    ac94:	ldr	r3, [pc, #2020]	; b480 <MyGame_Example_Monster_parse_json_table+0x34d4>
    ac98:	add	r0, sp, #59	; 0x3b
    ac9c:	str	r0, [sp]
    aca0:	mov	r2, r5
    aca4:	mov	r1, r4
    aca8:	mov	r0, r6
    acac:	bl	26e8 <flatcc_json_parser_symbolic_uint8>
    acb0:	mov	r4, r0
    acb4:	cmp	r4, r9
    acb8:	beq	accc <MyGame_Example_Monster_parse_json_table+0x2d20>
    acbc:	cmp	r4, r5
    acc0:	moveq	r3, #1
    acc4:	movne	r3, #0
    acc8:	b	acd0 <MyGame_Example_Monster_parse_json_table+0x2d24>
    accc:	mov	r3, #1
    acd0:	cmp	r3, #0
    acd4:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    acd8:	ldrb	ip, [sp, #59]	; 0x3b
    acdc:	and	r1, ip, #255	; 0xff
    ace0:	mov	r0, sl
    ace4:	bl	20 <flatbuffers_uint8_write_to_pe>
    ace8:	add	r3, sp, #76	; 0x4c
    acec:	mov	r2, r5
    acf0:	mov	r1, r4
    acf4:	mov	r0, r6
    acf8:	bl	1064 <flatcc_json_parser_array_end>
    acfc:	mov	r4, r0
    ad00:	b	ac40 <MyGame_Example_Monster_parse_json_table+0x2c94>
    ad04:	ldr	r0, [r6]
    ad08:	bl	0 <flatcc_builder_end_vector>
    ad0c:	str	r0, [sp, #80]	; 0x50
    ad10:	ldr	r0, [sp, #80]	; 0x50
    ad14:	cmp	r0, #0
    ad18:	beq	ad3c <MyGame_Example_Monster_parse_json_table+0x2d90>
    ad1c:	ldr	r0, [r6]
    ad20:	mov	r1, #5
    ad24:	bl	0 <flatcc_builder_table_add_offset>
    ad28:	mov	r7, r0
    ad2c:	cmp	r7, #0
    ad30:	moveq	r3, #1
    ad34:	movne	r3, #0
    ad38:	b	ad40 <MyGame_Example_Monster_parse_json_table+0x2d94>
    ad3c:	mov	r3, #1
    ad40:	cmp	r3, #0
    ad44:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    ad48:	ldr	ip, [sp, #80]	; 0x50
    ad4c:	str	ip, [r7]
    ad50:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    ad54:	mov	r2, r5
    ad58:	mov	r1, r4
    ad5c:	mov	r0, r6
    ad60:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ad64:	mov	r4, r0
    ad68:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    ad6c:	mov	r2, r5
    ad70:	mov	r1, r9
    ad74:	mov	r0, r6
    ad78:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ad7c:	mov	r4, r0
    ad80:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    ad84:	mov	r1, #0
    ad88:	eor	r0, fp, #97	; 0x61
    ad8c:	eor	r0, r0, #28160	; 0x6e00
    ad90:	eor	r0, r0, #6356992	; 0x610000
    ad94:	eor	r0, r0, #1828716544	; 0x6d000000
    ad98:	orr	r3, r0, r1
    ad9c:	cmp	r3, #0
    ada0:	bne	aea4 <MyGame_Example_Monster_parse_json_table+0x2ef8>
    ada4:	mov	r3, #4
    ada8:	mov	r2, r5
    adac:	mov	r1, r4
    adb0:	mov	r0, r6
    adb4:	bl	118c <flatcc_json_parser_match_symbol>
    adb8:	mov	r1, r0
    adbc:	cmp	r4, r1
    adc0:	beq	ae90 <MyGame_Example_Monster_parse_json_table+0x2ee4>
    adc4:	mov	r3, #0
    adc8:	strh	r3, [sp, #64]	; 0x40
    adcc:	mov	r9, r1
    add0:	add	r3, sp, #64	; 0x40
    add4:	mov	r2, r5
    add8:	mov	r0, r6
    addc:	bl	1ec0 <flatcc_json_parser_int16>
    ade0:	mov	r4, r0
    ade4:	cmp	r9, r4
    ade8:	bne	ae34 <MyGame_Example_Monster_parse_json_table+0x2e88>
    adec:	mov	r9, r4
    adf0:	ldr	r3, [pc, #1692]	; b494 <MyGame_Example_Monster_parse_json_table+0x34e8>
    adf4:	add	r0, sp, #64	; 0x40
    adf8:	str	r0, [sp]
    adfc:	mov	r2, r5
    ae00:	mov	r1, r4
    ae04:	mov	r0, r6
    ae08:	bl	2c74 <flatcc_json_parser_symbolic_int16>
    ae0c:	mov	r4, r0
    ae10:	cmp	r4, r9
    ae14:	beq	ae28 <MyGame_Example_Monster_parse_json_table+0x2e7c>
    ae18:	cmp	r4, r5
    ae1c:	moveq	r0, #1
    ae20:	movne	r0, #0
    ae24:	b	ae2c <MyGame_Example_Monster_parse_json_table+0x2e80>
    ae28:	mov	r0, #1
    ae2c:	cmp	r0, #0
    ae30:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    ae34:	ldrsh	r3, [sp, #64]	; 0x40
    ae38:	cmp	r3, #150	; 0x96
    ae3c:	bne	ae58 <MyGame_Example_Monster_parse_json_table+0x2eac>
    ae40:	ldr	r1, [r6, #8]
    ae44:	and	r0, r1, #2
    ae48:	cmp	r0, #0
    ae4c:	movne	ip, #1
    ae50:	moveq	ip, #0
    ae54:	b	ae5c <MyGame_Example_Monster_parse_json_table+0x2eb0>
    ae58:	mov	ip, #1
    ae5c:	cmp	ip, #0
    ae60:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    ae64:	ldr	r0, [r6]
    ae68:	mov	r1, #1
    ae6c:	mov	r2, #2
    ae70:	mov	r3, #2
    ae74:	bl	0 <flatcc_builder_table_add>
    ae78:	cmp	r0, #0
    ae7c:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    ae80:	ldrsh	r2, [sp, #64]	; 0x40
    ae84:	sbfx	r1, r2, #0, #16
    ae88:	bl	29c <flatbuffers_int16_write_to_pe>
    ae8c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    ae90:	mov	r2, r5
    ae94:	mov	r0, r6
    ae98:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ae9c:	mov	r4, r0
    aea0:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    aea4:	mov	r2, r5
    aea8:	mov	r1, r4
    aeac:	mov	r0, r6
    aeb0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aeb4:	mov	r4, r0
    aeb8:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    aebc:	bic	r1, fp, #255	; 0xff
    aec0:	bic	r1, r1, #65280	; 0xff00
    aec4:	mov	r0, #0
    aec8:	eor	r1, r1, #141557760	; 0x8700000
    aecc:	eor	r1, r1, #1610612736	; 0x60000000
    aed0:	orr	ip, r1, r0
    aed4:	cmp	ip, #0
    aed8:	bne	afe4 <MyGame_Example_Monster_parse_json_table+0x3038>
    aedc:	mov	r1, r4
    aee0:	mov	r4, r1
    aee4:	mov	r3, #2
    aee8:	mov	r2, r5
    aeec:	mov	r0, r6
    aef0:	bl	118c <flatcc_json_parser_match_symbol>
    aef4:	cmp	r4, r0
    aef8:	beq	afcc <MyGame_Example_Monster_parse_json_table+0x3020>
    aefc:	mov	ip, #0
    af00:	strh	ip, [sp, #62]	; 0x3e
    af04:	mov	r1, r0
    af08:	mov	r9, r1
    af0c:	add	r3, sp, #62	; 0x3e
    af10:	mov	r2, r5
    af14:	mov	r0, r6
    af18:	bl	1ec0 <flatcc_json_parser_int16>
    af1c:	mov	r4, r0
    af20:	cmp	r9, r4
    af24:	bne	af70 <MyGame_Example_Monster_parse_json_table+0x2fc4>
    af28:	mov	r9, r4
    af2c:	ldr	r3, [pc, #1352]	; b47c <MyGame_Example_Monster_parse_json_table+0x34d0>
    af30:	add	r0, sp, #62	; 0x3e
    af34:	str	r0, [sp]
    af38:	mov	r2, r5
    af3c:	mov	r1, r9
    af40:	mov	r0, r6
    af44:	bl	2c74 <flatcc_json_parser_symbolic_int16>
    af48:	mov	r4, r0
    af4c:	cmp	r4, r9
    af50:	beq	af64 <MyGame_Example_Monster_parse_json_table+0x2fb8>
    af54:	cmp	r4, r5
    af58:	moveq	r2, #1
    af5c:	movne	r2, #0
    af60:	b	af68 <MyGame_Example_Monster_parse_json_table+0x2fbc>
    af64:	mov	r2, #1
    af68:	cmp	r2, #0
    af6c:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    af70:	ldrsh	ip, [sp, #62]	; 0x3e
    af74:	cmp	ip, #100	; 0x64
    af78:	bne	af94 <MyGame_Example_Monster_parse_json_table+0x2fe8>
    af7c:	ldr	r3, [r6, #8]
    af80:	and	r3, r3, #2
    af84:	cmp	r3, #0
    af88:	movne	r3, #1
    af8c:	moveq	r3, #0
    af90:	b	af98 <MyGame_Example_Monster_parse_json_table+0x2fec>
    af94:	mov	r3, #1
    af98:	cmp	r3, #0
    af9c:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    afa0:	ldr	r0, [r6]
    afa4:	mov	r1, #2
    afa8:	mov	r2, #2
    afac:	mov	r3, #2
    afb0:	bl	0 <flatcc_builder_table_add>
    afb4:	cmp	r0, #0
    afb8:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    afbc:	ldrsh	r1, [sp, #62]	; 0x3e
    afc0:	sbfx	r1, r1, #0, #16
    afc4:	bl	29c <flatbuffers_int16_write_to_pe>
    afc8:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    afcc:	mov	r2, r5
    afd0:	mov	r1, r0
    afd4:	mov	r0, r6
    afd8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    afdc:	mov	r4, r0
    afe0:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    afe4:	mov	r2, r5
    afe8:	mov	r1, r4
    afec:	mov	r0, r6
    aff0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aff4:	mov	r4, r0
    aff8:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    affc:	mov	r2, #0
    b000:	eor	r1, fp, #376	; 0x178
    b004:	eor	r1, r1, #25600	; 0x6400
    b008:	eor	r1, r1, #40632320	; 0x26c0000
    b00c:	eor	r1, r1, #1677721600	; 0x64000000
    b010:	orr	r1, r1, r2
    b014:	cmp	r1, #0
    b018:	bne	b1a0 <MyGame_Example_Monster_parse_json_table+0x31f4>
    b01c:	mov	r9, r4
    b020:	mov	r3, #4
    b024:	mov	r2, r5
    b028:	mov	r1, r9
    b02c:	mov	r0, r6
    b030:	bl	118c <flatcc_json_parser_match_symbol>
    b034:	mov	r4, r0
    b038:	cmp	r9, r4
    b03c:	beq	b188 <MyGame_Example_Monster_parse_json_table+0x31dc>
    b040:	ldr	r0, [r6]
    b044:	mov	r1, #1
    b048:	mov	r2, #1
    b04c:	mvn	r3, #0
    b050:	bl	0 <flatcc_builder_start_vector>
    b054:	cmp	r0, #0
    b058:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    b05c:	add	r3, sp, #76	; 0x4c
    b060:	mov	r2, r5
    b064:	mov	r1, r4
    b068:	mov	r0, r6
    b06c:	bl	f84 <flatcc_json_parser_array_start>
    b070:	mov	r4, r0
    b074:	ldr	r0, [sp, #76]	; 0x4c
    b078:	cmp	r0, #0
    b07c:	beq	b138 <MyGame_Example_Monster_parse_json_table+0x318c>
    b080:	mov	r1, #0
    b084:	strb	r1, [sp, #58]	; 0x3a
    b088:	ldr	r0, [r6]
    b08c:	mov	r1, #1
    b090:	bl	0 <flatcc_builder_extend_vector>
    b094:	mov	sl, r0
    b098:	cmp	r0, #0
    b09c:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    b0a0:	mov	r1, r4
    b0a4:	mov	r9, r1
    b0a8:	add	r3, sp, #58	; 0x3a
    b0ac:	mov	r2, r5
    b0b0:	mov	r0, r6
    b0b4:	bl	1c6c <flatcc_json_parser_uint8>
    b0b8:	mov	r4, r0
    b0bc:	cmp	r9, r4
    b0c0:	bne	b10c <MyGame_Example_Monster_parse_json_table+0x3160>
    b0c4:	mov	r9, r4
    b0c8:	ldr	r3, [pc, #960]	; b490 <MyGame_Example_Monster_parse_json_table+0x34e4>
    b0cc:	add	r0, sp, #58	; 0x3a
    b0d0:	str	r0, [sp]
    b0d4:	mov	r2, r5
    b0d8:	mov	r1, r9
    b0dc:	mov	r0, r6
    b0e0:	bl	26e8 <flatcc_json_parser_symbolic_uint8>
    b0e4:	mov	r4, r0
    b0e8:	cmp	r4, r9
    b0ec:	beq	b100 <MyGame_Example_Monster_parse_json_table+0x3154>
    b0f0:	cmp	r4, r5
    b0f4:	moveq	r3, #1
    b0f8:	movne	r3, #0
    b0fc:	b	b104 <MyGame_Example_Monster_parse_json_table+0x3158>
    b100:	mov	r3, #1
    b104:	cmp	r3, #0
    b108:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    b10c:	ldrb	r2, [sp, #58]	; 0x3a
    b110:	and	r1, r2, #255	; 0xff
    b114:	mov	r0, sl
    b118:	bl	20 <flatbuffers_uint8_write_to_pe>
    b11c:	add	r3, sp, #76	; 0x4c
    b120:	mov	r2, r5
    b124:	mov	r1, r4
    b128:	mov	r0, r6
    b12c:	bl	1064 <flatcc_json_parser_array_end>
    b130:	mov	r4, r0
    b134:	b	b074 <MyGame_Example_Monster_parse_json_table+0x30c8>
    b138:	ldr	r0, [r6]
    b13c:	bl	0 <flatcc_builder_end_vector>
    b140:	str	r0, [sp, #80]	; 0x50
    b144:	ldr	r0, [sp, #80]	; 0x50
    b148:	cmp	r0, #0
    b14c:	beq	b170 <MyGame_Example_Monster_parse_json_table+0x31c4>
    b150:	ldr	r0, [r6]
    b154:	mov	r1, #30
    b158:	bl	0 <flatcc_builder_table_add_offset>
    b15c:	mov	r7, r0
    b160:	cmp	r7, #0
    b164:	moveq	r2, #1
    b168:	movne	r2, #0
    b16c:	b	b174 <MyGame_Example_Monster_parse_json_table+0x31c8>
    b170:	mov	r2, #1
    b174:	cmp	r2, #0
    b178:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    b17c:	ldr	ip, [sp, #80]	; 0x50
    b180:	str	ip, [r7]
    b184:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    b188:	mov	r2, r5
    b18c:	mov	r1, r4
    b190:	mov	r0, r6
    b194:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b198:	mov	r4, r0
    b19c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    b1a0:	mov	r2, r5
    b1a4:	mov	r1, r4
    b1a8:	mov	r0, r6
    b1ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b1b0:	mov	r4, r0
    b1b4:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    b1b8:	mov	r1, fp
    b1bc:	mov	r0, sl
    b1c0:	and	r0, r0, #-16777216	; 0xff000000
    b1c4:	eor	r1, r1, #109	; 0x6d
    b1c8:	eor	r1, r1, #25856	; 0x6500
    b1cc:	eor	r1, r1, #7208960	; 0x6e0000
    b1d0:	eor	r1, r1, #1694498816	; 0x65000000
    b1d4:	eor	r2, r0, #2030043136	; 0x79000000
    b1d8:	orr	r1, r1, r2
    b1dc:	cmp	r1, #0
    b1e0:	beq	b324 <MyGame_Example_Monster_parse_json_table+0x3378>
    b1e4:	and	r0, sl, #-16777216	; 0xff000000
    b1e8:	eor	r1, fp, #111	; 0x6f
    b1ec:	eor	r1, r1, #224256	; 0x36c00
    b1f0:	eor	r1, r1, #57409536	; 0x36c0000
    b1f4:	eor	r1, r1, #1610612736	; 0x60000000
    b1f8:	eor	r3, r0, #1912602624	; 0x72000000
    b1fc:	orr	r3, r1, r3
    b200:	cmp	r3, #0
    b204:	bne	b30c <MyGame_Example_Monster_parse_json_table+0x3360>
    b208:	mov	r3, #5
    b20c:	mov	r2, r5
    b210:	mov	r1, r4
    b214:	mov	r0, r6
    b218:	bl	118c <flatcc_json_parser_match_symbol>
    b21c:	mov	r1, r0
    b220:	cmp	r4, r1
    b224:	beq	b2f8 <MyGame_Example_Monster_parse_json_table+0x334c>
    b228:	mov	r0, #0
    b22c:	strb	r0, [sp, #57]	; 0x39
    b230:	mov	r9, r1
    b234:	add	r3, sp, #57	; 0x39
    b238:	mov	r2, r5
    b23c:	mov	r1, r9
    b240:	mov	r0, r6
    b244:	bl	1f84 <flatcc_json_parser_int8>
    b248:	mov	r4, r0
    b24c:	cmp	r9, r4
    b250:	bne	b29c <MyGame_Example_Monster_parse_json_table+0x32f0>
    b254:	mov	r9, r4
    b258:	ldr	r3, [pc, #552]	; b488 <MyGame_Example_Monster_parse_json_table+0x34dc>
    b25c:	add	ip, sp, #57	; 0x39
    b260:	str	ip, [sp]
    b264:	mov	r2, r5
    b268:	mov	r1, r9
    b26c:	mov	r0, r6
    b270:	bl	2e44 <flatcc_json_parser_symbolic_int8>
    b274:	mov	r4, r0
    b278:	cmp	r4, r9
    b27c:	beq	b290 <MyGame_Example_Monster_parse_json_table+0x32e4>
    b280:	cmp	r4, r5
    b284:	moveq	ip, #1
    b288:	movne	ip, #0
    b28c:	b	b294 <MyGame_Example_Monster_parse_json_table+0x32e8>
    b290:	mov	ip, #1
    b294:	cmp	ip, #0
    b298:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    b29c:	ldrsb	r0, [sp, #57]	; 0x39
    b2a0:	cmp	r0, #8
    b2a4:	bne	b2c0 <MyGame_Example_Monster_parse_json_table+0x3314>
    b2a8:	ldr	r2, [r6, #8]
    b2ac:	and	r3, r2, #2
    b2b0:	cmp	r3, #0
    b2b4:	movne	r2, #1
    b2b8:	moveq	r2, #0
    b2bc:	b	b2c4 <MyGame_Example_Monster_parse_json_table+0x3318>
    b2c0:	mov	r2, #1
    b2c4:	cmp	r2, #0
    b2c8:	beq	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    b2cc:	ldr	r0, [r6]
    b2d0:	mov	r1, #6
    b2d4:	mov	r2, #1
    b2d8:	mov	r3, #1
    b2dc:	bl	0 <flatcc_builder_table_add>
    b2e0:	cmp	r0, #0
    b2e4:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    b2e8:	ldrsb	r1, [sp, #57]	; 0x39
    b2ec:	sbfx	r1, r1, #0, #8
    b2f0:	bl	1e0 <flatbuffers_int8_write_to_pe>
    b2f4:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    b2f8:	mov	r2, r5
    b2fc:	mov	r0, r6
    b300:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b304:	mov	r4, r0
    b308:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    b30c:	mov	r2, r5
    b310:	mov	r1, r4
    b314:	mov	r0, r6
    b318:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b31c:	mov	r4, r0
    b320:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    b324:	mov	r1, r4
    b328:	mov	r4, r1
    b32c:	mov	r3, #5
    b330:	mov	r2, r5
    b334:	mov	r0, r6
    b338:	bl	118c <flatcc_json_parser_match_symbol>
    b33c:	mov	r1, r0
    b340:	cmp	r4, r1
    b344:	beq	b3a0 <MyGame_Example_Monster_parse_json_table+0x33f4>
    b348:	add	r3, sp, #80	; 0x50
    b34c:	mov	r2, r5
    b350:	mov	r0, r6
    b354:	bl	7fac <MyGame_Example_Monster_parse_json_table>
    b358:	mov	r4, r0
    b35c:	ldr	r0, [sp, #80]	; 0x50
    b360:	cmp	r0, #0
    b364:	beq	b388 <MyGame_Example_Monster_parse_json_table+0x33dc>
    b368:	ldr	r0, [r6]
    b36c:	mov	r1, #12
    b370:	bl	0 <flatcc_builder_table_add_offset>
    b374:	mov	r7, r0
    b378:	cmp	r7, #0
    b37c:	moveq	ip, #1
    b380:	movne	ip, #0
    b384:	b	b38c <MyGame_Example_Monster_parse_json_table+0x33e0>
    b388:	mov	ip, #1
    b38c:	cmp	ip, #0
    b390:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    b394:	ldr	r3, [sp, #80]	; 0x50
    b398:	str	r3, [r7]
    b39c:	b	b3b0 <MyGame_Example_Monster_parse_json_table+0x3404>
    b3a0:	mov	r2, r5
    b3a4:	mov	r0, r6
    b3a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b3ac:	mov	r4, r0
    b3b0:	add	r3, sp, #76	; 0x4c
    b3b4:	mov	r2, r5
    b3b8:	mov	r1, r4
    b3bc:	mov	r0, r6
    b3c0:	bl	e5c <flatcc_json_parser_object_end>
    b3c4:	mov	r4, r0
    b3c8:	b	8044 <MyGame_Example_Monster_parse_json_table+0x98>
    b3cc:	ldr	r1, [r6, #24]
    b3d0:	cmp	r1, #0
    b3d4:	bne	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    b3d8:	ldr	r0, [r6]
    b3dc:	mov	r1, #3
    b3e0:	bl	0 <flatcc_builder_check_required_field>
    b3e4:	cmp	r0, #0
    b3e8:	bne	b408 <MyGame_Example_Monster_parse_json_table+0x345c>
    b3ec:	mov	r3, #29
    b3f0:	mov	r2, r5
    b3f4:	mov	r1, r4
    b3f8:	mov	r0, r6
    b3fc:	bl	0 <flatcc_json_parser_set_error>
    b400:	mov	r4, r0
    b404:	b	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    b408:	ldr	r3, [sp, #84]	; 0x54
    b40c:	mov	r2, r5
    b410:	mov	r1, r4
    b414:	mov	r0, r6
    b418:	bl	0 <flatcc_json_parser_finalize_unions>
    b41c:	mov	r4, r0
    b420:	ldr	r0, [r6]
    b424:	bl	0 <flatcc_builder_end_table>
    b428:	str	r0, [r8]
    b42c:	cmp	r0, #0
    b430:	beq	b43c <MyGame_Example_Monster_parse_json_table+0x3490>
    b434:	mov	r0, r4
    b438:	b	b450 <MyGame_Example_Monster_parse_json_table+0x34a4>
    b43c:	mov	r3, #33	; 0x21
    b440:	mov	r2, r5
    b444:	mov	r1, r4
    b448:	mov	r0, r6
    b44c:	bl	0 <flatcc_json_parser_set_error>
    b450:	ldr	r4, [sp, #24]
    b454:	ldr	r5, [sp, #28]
    b458:	ldr	r6, [sp, #32]
    b45c:	ldr	r7, [sp, #36]	; 0x24
    b460:	ldr	r8, [sp, #40]	; 0x28
    b464:	ldr	r9, [sp, #44]	; 0x2c
    b468:	ldr	sl, [sp, #48]	; 0x30
    b46c:	ldr	fp, [sp, #52]	; 0x34
    b470:	ldr	lr, [sp, #20]
    b474:	add	sp, sp, #160	; 0xa0
    b478:	bx	lr
    b47c:	.word	0x00000164
    b480:	.word	0x00000170
    b484:	.word	0x00000000
    b488:	.word	0x00000148
    b48c:	.word	0x00000188
    b490:	.word	0x00000158
    b494:	.word	0x0000017c

0000b498 <Fantasy_Attacker_parse_json_table>:
    b498:	mov	ip, sp
    b49c:	sub	sp, sp, #48	; 0x30
    b4a0:	str	ip, [sp, #4]
    b4a4:	str	lr, [sp, #8]
    b4a8:	str	r4, [sp, #16]
    b4ac:	str	r5, [sp, #20]
    b4b0:	str	r6, [sp, #24]
    b4b4:	str	r7, [sp, #28]
    b4b8:	str	r8, [sp, #32]
    b4bc:	mov	r8, r3
    b4c0:	mov	r5, r2
    b4c4:	mov	r4, r1
    b4c8:	mov	r6, r0
    b4cc:	mov	r3, #0
    b4d0:	str	r3, [r8]
    b4d4:	ldr	r0, [r6]
    b4d8:	mov	r1, #1
    b4dc:	bl	0 <flatcc_builder_start_table>
    b4e0:	cmp	r0, #0
    b4e4:	bne	b74c <Fantasy_Attacker_parse_json_table+0x2b4>
    b4e8:	add	r3, sp, #40	; 0x28
    b4ec:	mov	r2, r5
    b4f0:	mov	r1, r4
    b4f4:	mov	r0, r6
    b4f8:	bl	d7c <flatcc_json_parser_object_start>
    b4fc:	mov	r4, r0
    b500:	ldr	r3, [sp, #40]	; 0x28
    b504:	cmp	r3, #0
    b508:	beq	b724 <Fantasy_Attacker_parse_json_table+0x28c>
    b50c:	mov	r2, r5
    b510:	mov	r1, r4
    b514:	mov	r0, r6
    b518:	bl	b90 <flatcc_json_parser_symbol_start>
    b51c:	mov	r4, r0
    b520:	mov	r1, r5
    b524:	mov	r0, r4
    b528:	bl	cc0 <flatcc_json_parser_symbol_part>
    b52c:	eor	r2, r1, #114	; 0x72
    b530:	eor	r2, r2, #28416	; 0x6f00
    b534:	eor	r2, r2, #7798784	; 0x770000
    b538:	eor	r2, r2, #1929379840	; 0x73000000
    b53c:	eor	r1, r0, #372	; 0x174
    b540:	eor	r1, r1, #1007616	; 0xf6000
    b544:	eor	r1, r1, #72351744	; 0x4500000
    b548:	eor	r1, r1, #1610612736	; 0x60000000
    b54c:	orr	r3, r2, r1
    b550:	cmp	r3, #0
    b554:	bne	b6f4 <Fantasy_Attacker_parse_json_table+0x25c>
    b558:	add	r4, r4, #8
    b55c:	mov	r1, r5
    b560:	mov	r0, r4
    b564:	bl	cc0 <flatcc_json_parser_symbol_part>
    b568:	eor	r1, r1, #107	; 0x6b
    b56c:	eor	r1, r1, #25344	; 0x6300
    b570:	eor	r1, r1, #6356992	; 0x610000
    b574:	eor	r1, r1, #1946157056	; 0x74000000
    b578:	eor	r2, r0, #109	; 0x6d
    b57c:	eor	r2, r2, #24832	; 0x6100
    b580:	eor	r2, r2, #56885248	; 0x3640000
    b584:	eor	r2, r2, #1543503872	; 0x5c000000
    b588:	orr	r2, r1, r2
    b58c:	cmp	r2, #0
    b590:	bne	b6dc <Fantasy_Attacker_parse_json_table+0x244>
    b594:	add	r4, r4, #8
    b598:	mov	r1, r5
    b59c:	mov	r0, r4
    b5a0:	bl	cc0 <flatcc_json_parser_symbol_part>
    b5a4:	bic	r3, r1, #255	; 0xff
    b5a8:	mov	r0, #0
    b5ac:	eor	ip, r3, #25856	; 0x6500
    b5b0:	eor	ip, ip, #6750208	; 0x670000
    b5b4:	eor	ip, ip, #1627389952	; 0x61000000
    b5b8:	orr	r3, ip, r0
    b5bc:	cmp	r3, #0
    b5c0:	bne	b6c4 <Fantasy_Attacker_parse_json_table+0x22c>
    b5c4:	mov	r1, r4
    b5c8:	mov	r4, r1
    b5cc:	mov	r3, #3
    b5d0:	mov	r2, r5
    b5d4:	mov	r0, r6
    b5d8:	bl	118c <flatcc_json_parser_match_symbol>
    b5dc:	mov	r1, r0
    b5e0:	cmp	r4, r1
    b5e4:	beq	b6b0 <Fantasy_Attacker_parse_json_table+0x218>
    b5e8:	mov	r2, #0
    b5ec:	str	r2, [sp, #44]	; 0x2c
    b5f0:	mov	r7, r1
    b5f4:	add	r3, sp, #44	; 0x2c
    b5f8:	mov	r2, r5
    b5fc:	mov	r0, r6
    b600:	bl	1dfc <flatcc_json_parser_int32>
    b604:	mov	r4, r0
    b608:	cmp	r7, r4
    b60c:	bne	b658 <Fantasy_Attacker_parse_json_table+0x1c0>
    b610:	mov	r7, r4
    b614:	ldr	r3, [pc, #356]	; b780 <Fantasy_Attacker_parse_json_table+0x2e8>
    b618:	add	ip, sp, #44	; 0x2c
    b61c:	str	ip, [sp]
    b620:	mov	r2, r5
    b624:	mov	r1, r7
    b628:	mov	r0, r6
    b62c:	bl	2aa8 <flatcc_json_parser_symbolic_int32>
    b630:	mov	r4, r0
    b634:	cmp	r4, r7
    b638:	beq	b64c <Fantasy_Attacker_parse_json_table+0x1b4>
    b63c:	cmp	r4, r5
    b640:	moveq	r0, #1
    b644:	movne	r0, #0
    b648:	b	b650 <Fantasy_Attacker_parse_json_table+0x1b8>
    b64c:	mov	r0, #1
    b650:	cmp	r0, #0
    b654:	bne	b74c <Fantasy_Attacker_parse_json_table+0x2b4>
    b658:	ldr	r0, [sp, #44]	; 0x2c
    b65c:	cmp	r0, #0
    b660:	bne	b67c <Fantasy_Attacker_parse_json_table+0x1e4>
    b664:	ldr	ip, [r6, #8]
    b668:	and	r2, ip, #2
    b66c:	cmp	r2, #0
    b670:	movne	r1, #1
    b674:	moveq	r1, #0
    b678:	b	b680 <Fantasy_Attacker_parse_json_table+0x1e8>
    b67c:	mov	r1, #1
    b680:	cmp	r1, #0
    b684:	beq	b708 <Fantasy_Attacker_parse_json_table+0x270>
    b688:	ldr	r0, [r6]
    b68c:	mov	r1, #0
    b690:	mov	r2, #4
    b694:	mov	r3, #4
    b698:	bl	0 <flatcc_builder_table_add>
    b69c:	cmp	r0, #0
    b6a0:	beq	b74c <Fantasy_Attacker_parse_json_table+0x2b4>
    b6a4:	ldr	r1, [sp, #44]	; 0x2c
    b6a8:	bl	2f0 <flatbuffers_int32_write_to_pe>
    b6ac:	b	b708 <Fantasy_Attacker_parse_json_table+0x270>
    b6b0:	mov	r2, r5
    b6b4:	mov	r0, r6
    b6b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b6bc:	mov	r4, r0
    b6c0:	b	b708 <Fantasy_Attacker_parse_json_table+0x270>
    b6c4:	mov	r2, r5
    b6c8:	mov	r1, r4
    b6cc:	mov	r0, r6
    b6d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b6d4:	mov	r4, r0
    b6d8:	b	b708 <Fantasy_Attacker_parse_json_table+0x270>
    b6dc:	mov	r2, r5
    b6e0:	mov	r1, r4
    b6e4:	mov	r0, r6
    b6e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b6ec:	mov	r4, r0
    b6f0:	b	b708 <Fantasy_Attacker_parse_json_table+0x270>
    b6f4:	mov	r2, r5
    b6f8:	mov	r1, r4
    b6fc:	mov	r0, r6
    b700:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b704:	mov	r4, r0
    b708:	add	r3, sp, #40	; 0x28
    b70c:	mov	r2, r5
    b710:	mov	r1, r4
    b714:	mov	r0, r6
    b718:	bl	e5c <flatcc_json_parser_object_end>
    b71c:	mov	r4, r0
    b720:	b	b500 <Fantasy_Attacker_parse_json_table+0x68>
    b724:	ldr	r2, [r6, #24]
    b728:	cmp	r2, #0
    b72c:	bne	b74c <Fantasy_Attacker_parse_json_table+0x2b4>
    b730:	ldr	r0, [r6]
    b734:	bl	0 <flatcc_builder_end_table>
    b738:	str	r0, [r8]
    b73c:	cmp	r0, #0
    b740:	beq	b74c <Fantasy_Attacker_parse_json_table+0x2b4>
    b744:	mov	r0, r4
    b748:	b	b760 <Fantasy_Attacker_parse_json_table+0x2c8>
    b74c:	mov	r3, #33	; 0x21
    b750:	mov	r2, r5
    b754:	mov	r1, r4
    b758:	mov	r0, r6
    b75c:	bl	0 <flatcc_json_parser_set_error>
    b760:	ldr	r4, [sp, #16]
    b764:	ldr	r5, [sp, #20]
    b768:	ldr	r6, [sp, #24]
    b76c:	ldr	r7, [sp, #28]
    b770:	ldr	r8, [sp, #32]
    b774:	ldr	lr, [sp, #8]
    b778:	add	sp, sp, #48	; 0x30
    b77c:	bx	lr
    b780:	.word	0x00000258

0000b784 <Fantasy_Rapunzel_parse_json_struct_inline>:
    b784:	mov	ip, sp
    b788:	sub	sp, sp, #48	; 0x30
    b78c:	str	ip, [sp, #4]
    b790:	str	lr, [sp, #8]
    b794:	str	r4, [sp, #16]
    b798:	str	r5, [sp, #20]
    b79c:	str	r6, [sp, #24]
    b7a0:	str	r7, [sp, #28]
    b7a4:	str	r8, [sp, #32]
    b7a8:	mov	r8, r3
    b7ac:	mov	r5, r2
    b7b0:	mov	r7, r0
    b7b4:	add	r3, sp, #44	; 0x2c
    b7b8:	mov	r2, r5
    b7bc:	mov	r0, r7
    b7c0:	bl	d7c <flatcc_json_parser_object_start>
    b7c4:	ldr	r1, [sp, #44]	; 0x2c
    b7c8:	cmp	r1, #0
    b7cc:	beq	b968 <Fantasy_Rapunzel_parse_json_struct_inline+0x1e4>
    b7d0:	mov	r2, r5
    b7d4:	mov	r1, r0
    b7d8:	mov	r0, r7
    b7dc:	bl	b90 <flatcc_json_parser_symbol_start>
    b7e0:	mov	r4, r0
    b7e4:	mov	r1, r5
    b7e8:	mov	r0, r4
    b7ec:	bl	cc0 <flatcc_json_parser_symbol_part>
    b7f0:	eor	r1, r1, #114	; 0x72
    b7f4:	eor	r1, r1, #26880	; 0x6900
    b7f8:	eor	r1, r1, #6356992	; 0x610000
    b7fc:	eor	r1, r1, #1744830464	; 0x68000000
    b800:	eor	ip, r0, #110	; 0x6e
    b804:	eor	ip, ip, #25856	; 0x6500
    b808:	eor	ip, ip, #57409536	; 0x36c0000
    b80c:	eor	ip, ip, #1543503872	; 0x5c000000
    b810:	orr	r3, r1, ip
    b814:	cmp	r3, #0
    b818:	bne	b93c <Fantasy_Rapunzel_parse_json_struct_inline+0x1b8>
    b81c:	add	r4, r4, #8
    b820:	mov	r1, r5
    b824:	mov	r0, r4
    b828:	bl	cc0 <flatcc_json_parser_symbol_part>
    b82c:	bic	r2, r1, #255	; 0xff
    b830:	mov	r3, #0
    b834:	eor	r1, r2, #26624	; 0x6800
    b838:	eor	r1, r1, #57933824	; 0x3740000
    b83c:	eor	r1, r1, #1677721600	; 0x64000000
    b840:	orr	ip, r1, r3
    b844:	cmp	ip, #0
    b848:	bne	b924 <Fantasy_Rapunzel_parse_json_struct_inline+0x1a0>
    b84c:	mov	r3, #3
    b850:	mov	r2, r5
    b854:	mov	r1, r4
    b858:	mov	r0, r7
    b85c:	bl	118c <flatcc_json_parser_match_symbol>
    b860:	mov	r6, r0
    b864:	cmp	r4, r6
    b868:	beq	b90c <Fantasy_Rapunzel_parse_json_struct_inline+0x188>
    b86c:	mov	r1, #0
    b870:	strh	r1, [sp, #40]	; 0x28
    b874:	add	r3, sp, #40	; 0x28
    b878:	mov	r2, r5
    b87c:	mov	r1, r6
    b880:	mov	r0, r7
    b884:	bl	1ba8 <flatcc_json_parser_uint16>
    b888:	mov	r4, r0
    b88c:	cmp	r6, r4
    b890:	bne	b8f4 <Fantasy_Rapunzel_parse_json_struct_inline+0x170>
    b894:	mov	r6, r4
    b898:	ldr	r3, [pc, #232]	; b988 <Fantasy_Rapunzel_parse_json_struct_inline+0x204>
    b89c:	add	r1, sp, #40	; 0x28
    b8a0:	str	r1, [sp]
    b8a4:	mov	r2, r5
    b8a8:	mov	r1, r4
    b8ac:	mov	r0, r7
    b8b0:	bl	2514 <flatcc_json_parser_symbolic_uint16>
    b8b4:	mov	r4, r0
    b8b8:	cmp	r4, r6
    b8bc:	beq	b8d0 <Fantasy_Rapunzel_parse_json_struct_inline+0x14c>
    b8c0:	cmp	r4, r5
    b8c4:	moveq	ip, #1
    b8c8:	movne	ip, #0
    b8cc:	b	b8d4 <Fantasy_Rapunzel_parse_json_struct_inline+0x150>
    b8d0:	mov	ip, #1
    b8d4:	cmp	ip, #0
    b8d8:	beq	b8f4 <Fantasy_Rapunzel_parse_json_struct_inline+0x170>
    b8dc:	mov	r3, #33	; 0x21
    b8e0:	mov	r2, r5
    b8e4:	mov	r1, r4
    b8e8:	mov	r0, r7
    b8ec:	bl	0 <flatcc_json_parser_set_error>
    b8f0:	b	b968 <Fantasy_Rapunzel_parse_json_struct_inline+0x1e4>
    b8f4:	ldrh	r0, [sp, #40]	; 0x28
    b8f8:	bic	r1, r0, #16711680	; 0xff0000
    b8fc:	bic	r1, r1, #-16777216	; 0xff000000
    b900:	mov	r0, r8
    b904:	bl	7c <flatbuffers_uint16_write_to_pe>
    b908:	b	b950 <Fantasy_Rapunzel_parse_json_struct_inline+0x1cc>
    b90c:	mov	r2, r5
    b910:	mov	r1, r6
    b914:	mov	r0, r7
    b918:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b91c:	mov	r4, r0
    b920:	b	b950 <Fantasy_Rapunzel_parse_json_struct_inline+0x1cc>
    b924:	mov	r2, r5
    b928:	mov	r1, r4
    b92c:	mov	r0, r7
    b930:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b934:	mov	r4, r0
    b938:	b	b950 <Fantasy_Rapunzel_parse_json_struct_inline+0x1cc>
    b93c:	mov	r2, r5
    b940:	mov	r1, r4
    b944:	mov	r0, r7
    b948:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b94c:	mov	r4, r0
    b950:	add	r3, sp, #44	; 0x2c
    b954:	mov	r2, r5
    b958:	mov	r1, r4
    b95c:	mov	r0, r7
    b960:	bl	e5c <flatcc_json_parser_object_end>
    b964:	b	b7c4 <Fantasy_Rapunzel_parse_json_struct_inline+0x40>
    b968:	ldr	r4, [sp, #16]
    b96c:	ldr	r5, [sp, #20]
    b970:	ldr	r6, [sp, #24]
    b974:	ldr	r7, [sp, #28]
    b978:	ldr	r8, [sp, #32]
    b97c:	ldr	lr, [sp, #8]
    b980:	add	sp, sp, #48	; 0x30
    b984:	bx	lr
    b988:	.word	0x00000264

0000b98c <Fantasy_Rapunzel_parse_json_struct>:
    b98c:	mov	ip, sp
    b990:	sub	sp, sp, #24
    b994:	str	ip, [sp]
    b998:	str	lr, [sp, #4]
    b99c:	str	r4, [sp, #8]
    b9a0:	str	r5, [sp, #12]
    b9a4:	str	r6, [sp, #16]
    b9a8:	str	r7, [sp, #20]
    b9ac:	mov	r7, r3
    b9b0:	mov	r5, r2
    b9b4:	mov	r4, r1
    b9b8:	mov	r6, r0
    b9bc:	mov	r1, #0
    b9c0:	str	r1, [r7]
    b9c4:	ldr	r0, [r6]
    b9c8:	mov	r1, #2
    b9cc:	mov	r2, #2
    b9d0:	bl	0 <flatcc_builder_start_struct>
    b9d4:	cmp	r0, #0
    b9d8:	beq	ba2c <Fantasy_Rapunzel_parse_json_struct+0xa0>
    b9dc:	mov	r3, r0
    b9e0:	mov	r2, r5
    b9e4:	mov	r1, r4
    b9e8:	mov	r0, r6
    b9ec:	bl	b784 <Fantasy_Rapunzel_parse_json_struct_inline>
    b9f0:	mov	r4, r0
    b9f4:	cmp	r4, r5
    b9f8:	beq	ba18 <Fantasy_Rapunzel_parse_json_struct+0x8c>
    b9fc:	ldr	r0, [r6]
    ba00:	bl	0 <flatcc_builder_end_struct>
    ba04:	str	r0, [r7]
    ba08:	cmp	r0, #0
    ba0c:	moveq	r3, #1
    ba10:	movne	r3, #0
    ba14:	b	ba1c <Fantasy_Rapunzel_parse_json_struct+0x90>
    ba18:	mov	r3, #1
    ba1c:	cmp	r3, #0
    ba20:	bne	ba2c <Fantasy_Rapunzel_parse_json_struct+0xa0>
    ba24:	mov	r0, r4
    ba28:	b	ba40 <Fantasy_Rapunzel_parse_json_struct+0xb4>
    ba2c:	mov	r3, #33	; 0x21
    ba30:	mov	r2, r5
    ba34:	mov	r1, r4
    ba38:	mov	r0, r6
    ba3c:	bl	0 <flatcc_json_parser_set_error>
    ba40:	ldr	r4, [sp, #8]
    ba44:	ldr	r5, [sp, #12]
    ba48:	ldr	r6, [sp, #16]
    ba4c:	ldr	r7, [sp, #20]
    ba50:	ldr	lr, [sp, #4]
    ba54:	add	sp, sp, #24
    ba58:	bx	lr

0000ba5c <Fantasy_BookReader_parse_json_struct_inline>:
    ba5c:	mov	ip, sp
    ba60:	sub	sp, sp, #48	; 0x30
    ba64:	str	ip, [sp, #4]
    ba68:	str	lr, [sp, #8]
    ba6c:	str	r4, [sp, #16]
    ba70:	str	r5, [sp, #20]
    ba74:	str	r6, [sp, #24]
    ba78:	str	r7, [sp, #28]
    ba7c:	str	r8, [sp, #32]
    ba80:	mov	r7, r3
    ba84:	mov	r4, r2
    ba88:	mov	r6, r0
    ba8c:	add	r3, sp, #40	; 0x28
    ba90:	mov	r2, r4
    ba94:	mov	r0, r6
    ba98:	bl	d7c <flatcc_json_parser_object_start>
    ba9c:	mov	r1, r0
    baa0:	ldr	r0, [sp, #40]	; 0x28
    baa4:	cmp	r0, #0
    baa8:	beq	bc38 <Fantasy_BookReader_parse_json_struct_inline+0x1dc>
    baac:	mov	r2, r4
    bab0:	mov	r0, r6
    bab4:	bl	b90 <flatcc_json_parser_symbol_start>
    bab8:	mov	r5, r0
    babc:	mov	r1, r4
    bac0:	mov	r0, r5
    bac4:	bl	cc0 <flatcc_json_parser_symbol_part>
    bac8:	eor	r1, r1, #107	; 0x6b
    bacc:	eor	r1, r1, #28416	; 0x6f00
    bad0:	eor	r1, r1, #7274496	; 0x6f0000
    bad4:	eor	r1, r1, #1644167168	; 0x62000000
    bad8:	eor	r0, r0, #101	; 0x65
    badc:	eor	r0, r0, #29184	; 0x7200
    bae0:	eor	r0, r0, #6225920	; 0x5f0000
    bae4:	eor	r0, r0, #1929379840	; 0x73000000
    bae8:	orr	r0, r1, r0
    baec:	cmp	r0, #0
    baf0:	bne	bc08 <Fantasy_BookReader_parse_json_struct_inline+0x1ac>
    baf4:	add	r5, r5, #8
    baf8:	mov	r1, r4
    bafc:	mov	r0, r5
    bb00:	bl	cc0 <flatcc_json_parser_symbol_part>
    bb04:	bic	ip, r1, #255	; 0xff
    bb08:	bic	ip, ip, #65280	; 0xff00
    bb0c:	mov	r2, #0
    bb10:	eor	r3, ip, #23330816	; 0x1640000
    bb14:	eor	r3, r3, #1610612736	; 0x60000000
    bb18:	orr	r0, r3, r2
    bb1c:	cmp	r0, #0
    bb20:	bne	bbf0 <Fantasy_BookReader_parse_json_struct_inline+0x194>
    bb24:	mov	r3, #2
    bb28:	mov	r2, r4
    bb2c:	mov	r1, r5
    bb30:	mov	r0, r6
    bb34:	bl	118c <flatcc_json_parser_match_symbol>
    bb38:	mov	r1, r0
    bb3c:	cmp	r5, r1
    bb40:	beq	bbdc <Fantasy_BookReader_parse_json_struct_inline+0x180>
    bb44:	mov	r3, #0
    bb48:	str	r3, [sp, #44]	; 0x2c
    bb4c:	mov	r8, r1
    bb50:	add	r3, sp, #44	; 0x2c
    bb54:	mov	r2, r4
    bb58:	mov	r0, r6
    bb5c:	bl	1dfc <flatcc_json_parser_int32>
    bb60:	mov	r5, r0
    bb64:	cmp	r8, r5
    bb68:	bne	bbcc <Fantasy_BookReader_parse_json_struct_inline+0x170>
    bb6c:	mov	r8, r5
    bb70:	ldr	r3, [pc, #228]	; bc5c <Fantasy_BookReader_parse_json_struct_inline+0x200>
    bb74:	add	r1, sp, #44	; 0x2c
    bb78:	str	r1, [sp]
    bb7c:	mov	r2, r4
    bb80:	mov	r1, r8
    bb84:	mov	r0, r6
    bb88:	bl	2aa8 <flatcc_json_parser_symbolic_int32>
    bb8c:	mov	r5, r0
    bb90:	cmp	r5, r8
    bb94:	beq	bba8 <Fantasy_BookReader_parse_json_struct_inline+0x14c>
    bb98:	cmp	r5, r4
    bb9c:	moveq	ip, #1
    bba0:	movne	ip, #0
    bba4:	b	bbac <Fantasy_BookReader_parse_json_struct_inline+0x150>
    bba8:	mov	ip, #1
    bbac:	cmp	ip, #0
    bbb0:	beq	bbcc <Fantasy_BookReader_parse_json_struct_inline+0x170>
    bbb4:	mov	r3, #33	; 0x21
    bbb8:	mov	r2, r4
    bbbc:	mov	r1, r5
    bbc0:	mov	r0, r6
    bbc4:	bl	0 <flatcc_json_parser_set_error>
    bbc8:	b	bc3c <Fantasy_BookReader_parse_json_struct_inline+0x1e0>
    bbcc:	ldr	r1, [sp, #44]	; 0x2c
    bbd0:	mov	r0, r7
    bbd4:	bl	2f0 <flatbuffers_int32_write_to_pe>
    bbd8:	b	bc1c <Fantasy_BookReader_parse_json_struct_inline+0x1c0>
    bbdc:	mov	r2, r4
    bbe0:	mov	r0, r6
    bbe4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bbe8:	mov	r5, r0
    bbec:	b	bc1c <Fantasy_BookReader_parse_json_struct_inline+0x1c0>
    bbf0:	mov	r2, r4
    bbf4:	mov	r1, r5
    bbf8:	mov	r0, r6
    bbfc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc00:	mov	r5, r0
    bc04:	b	bc1c <Fantasy_BookReader_parse_json_struct_inline+0x1c0>
    bc08:	mov	r2, r4
    bc0c:	mov	r1, r5
    bc10:	mov	r0, r6
    bc14:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc18:	mov	r5, r0
    bc1c:	add	r3, sp, #40	; 0x28
    bc20:	mov	r2, r4
    bc24:	mov	r1, r5
    bc28:	mov	r0, r6
    bc2c:	bl	e5c <flatcc_json_parser_object_end>
    bc30:	mov	r1, r0
    bc34:	b	baa0 <Fantasy_BookReader_parse_json_struct_inline+0x44>
    bc38:	mov	r0, r1
    bc3c:	ldr	r4, [sp, #16]
    bc40:	ldr	r5, [sp, #20]
    bc44:	ldr	r6, [sp, #24]
    bc48:	ldr	r7, [sp, #28]
    bc4c:	ldr	r8, [sp, #32]
    bc50:	ldr	lr, [sp, #8]
    bc54:	add	sp, sp, #48	; 0x30
    bc58:	bx	lr
    bc5c:	.word	0x00000270

0000bc60 <Fantasy_BookReader_parse_json_struct>:
    bc60:	mov	ip, sp
    bc64:	sub	sp, sp, #24
    bc68:	str	ip, [sp]
    bc6c:	str	lr, [sp, #4]
    bc70:	str	r4, [sp, #8]
    bc74:	str	r5, [sp, #12]
    bc78:	str	r6, [sp, #16]
    bc7c:	str	r7, [sp, #20]
    bc80:	mov	r7, r3
    bc84:	mov	r5, r2
    bc88:	mov	r4, r1
    bc8c:	mov	r6, r0
    bc90:	mov	r1, #0
    bc94:	str	r1, [r7]
    bc98:	ldr	r0, [r6]
    bc9c:	mov	r1, #4
    bca0:	mov	r2, #4
    bca4:	bl	0 <flatcc_builder_start_struct>
    bca8:	cmp	r0, #0
    bcac:	beq	bd00 <Fantasy_BookReader_parse_json_struct+0xa0>
    bcb0:	mov	r3, r0
    bcb4:	mov	r2, r5
    bcb8:	mov	r1, r4
    bcbc:	mov	r0, r6
    bcc0:	bl	ba5c <Fantasy_BookReader_parse_json_struct_inline>
    bcc4:	mov	r4, r0
    bcc8:	cmp	r4, r5
    bccc:	beq	bcec <Fantasy_BookReader_parse_json_struct+0x8c>
    bcd0:	ldr	r0, [r6]
    bcd4:	bl	0 <flatcc_builder_end_struct>
    bcd8:	str	r0, [r7]
    bcdc:	cmp	r0, #0
    bce0:	moveq	r3, #1
    bce4:	movne	r3, #0
    bce8:	b	bcf0 <Fantasy_BookReader_parse_json_struct+0x90>
    bcec:	mov	r3, #1
    bcf0:	cmp	r3, #0
    bcf4:	bne	bd00 <Fantasy_BookReader_parse_json_struct+0xa0>
    bcf8:	mov	r0, r4
    bcfc:	b	bd14 <Fantasy_BookReader_parse_json_struct+0xb4>
    bd00:	mov	r3, #33	; 0x21
    bd04:	mov	r2, r5
    bd08:	mov	r1, r4
    bd0c:	mov	r0, r6
    bd10:	bl	0 <flatcc_json_parser_set_error>
    bd14:	ldr	r4, [sp, #8]
    bd18:	ldr	r5, [sp, #12]
    bd1c:	ldr	r6, [sp, #16]
    bd20:	ldr	r7, [sp, #20]
    bd24:	ldr	lr, [sp, #4]
    bd28:	add	sp, sp, #24
    bd2c:	bx	lr

0000bd30 <Fantasy_Character_parse_json_union>:
    bd30:	mov	ip, sp
    bd34:	sub	sp, sp, #24
    bd38:	str	ip, [sp]
    bd3c:	str	lr, [sp, #4]
    bd40:	str	r4, [sp, #8]
    bd44:	str	r5, [sp, #12]
    bd48:	str	r6, [sp, #16]
    bd4c:	ldr	r6, [ip]
    bd50:	mov	r4, r2
    bd54:	mov	r5, r0
    bd58:	mov	r0, #0
    bd5c:	str	r0, [r6]
    bd60:	cmp	r3, #9
    bd64:	bcs	bdb8 <Fantasy_Character_parse_json_union+0x88>
    bd68:	cmp	r3, #0
    bd6c:	beq	bda8 <Fantasy_Character_parse_json_union+0x78>
    bd70:	cmp	r3, #2
    bd74:	beq	bd94 <Fantasy_Character_parse_json_union+0x64>
    bd78:	cmp	r3, #8
    bd7c:	bne	be14 <Fantasy_Character_parse_json_union+0xe4>
    bd80:	mov	r3, r6
    bd84:	mov	r2, r4
    bd88:	mov	r0, r5
    bd8c:	bl	b98c <Fantasy_Rapunzel_parse_json_struct>
    bd90:	b	be58 <Fantasy_Character_parse_json_union+0x128>
    bd94:	mov	r3, r6
    bd98:	mov	r2, r4
    bd9c:	mov	r0, r5
    bda0:	bl	b498 <Fantasy_Attacker_parse_json_table>
    bda4:	b	be58 <Fantasy_Character_parse_json_union+0x128>
    bda8:	mov	r2, r4
    bdac:	mov	r0, r5
    bdb0:	bl	1980 <flatcc_json_parser_none>
    bdb4:	b	be84 <Fantasy_Character_parse_json_union+0x154>
    bdb8:	cmp	r3, #11
    bdbc:	bcs	bdf0 <Fantasy_Character_parse_json_union+0xc0>
    bdc0:	cmp	r3, #9
    bdc4:	bne	bddc <Fantasy_Character_parse_json_union+0xac>
    bdc8:	mov	r3, r6
    bdcc:	mov	r2, r4
    bdd0:	mov	r0, r5
    bdd4:	bl	bc60 <Fantasy_BookReader_parse_json_struct>
    bdd8:	b	be58 <Fantasy_Character_parse_json_union+0x128>
    bddc:	mov	r3, r6
    bde0:	mov	r2, r4
    bde4:	mov	r0, r5
    bde8:	bl	bc60 <Fantasy_BookReader_parse_json_struct>
    bdec:	b	be58 <Fantasy_Character_parse_json_union+0x128>
    bdf0:	cmp	r3, #11
    bdf4:	beq	be48 <Fantasy_Character_parse_json_union+0x118>
    bdf8:	cmp	r3, #255	; 0xff
    bdfc:	bne	be14 <Fantasy_Character_parse_json_union+0xe4>
    be00:	mov	r3, r6
    be04:	mov	r2, r4
    be08:	mov	r0, r5
    be0c:	bl	0 <flatcc_json_parser_build_string>
    be10:	b	be58 <Fantasy_Character_parse_json_union+0x128>
    be14:	ldr	r2, [r5, #8]
    be18:	and	r3, r2, #1
    be1c:	cmp	r3, #0
    be20:	bne	be38 <Fantasy_Character_parse_json_union+0x108>
    be24:	mov	r3, #15
    be28:	mov	r2, r4
    be2c:	mov	r0, r5
    be30:	bl	0 <flatcc_json_parser_set_error>
    be34:	b	be84 <Fantasy_Character_parse_json_union+0x154>
    be38:	mov	r2, r4
    be3c:	mov	r0, r5
    be40:	bl	0 <flatcc_json_parser_generic_json>
    be44:	b	be84 <Fantasy_Character_parse_json_union+0x154>
    be48:	mov	r3, r6
    be4c:	mov	r2, r4
    be50:	mov	r0, r5
    be54:	bl	0 <flatcc_json_parser_build_string>
    be58:	ldr	r1, [r5, #24]
    be5c:	cmp	r1, #0
    be60:	bne	be84 <Fantasy_Character_parse_json_union+0x154>
    be64:	ldr	ip, [r6]
    be68:	cmp	ip, #0
    be6c:	bne	be84 <Fantasy_Character_parse_json_union+0x154>
    be70:	mov	r3, #33	; 0x21
    be74:	mov	r2, r4
    be78:	mov	r1, r0
    be7c:	mov	r0, r5
    be80:	bl	0 <flatcc_json_parser_set_error>
    be84:	ldr	r4, [sp, #8]
    be88:	ldr	r5, [sp, #12]
    be8c:	ldr	r6, [sp, #16]
    be90:	ldr	lr, [sp, #4]
    be94:	add	sp, sp, #24
    be98:	bx	lr

0000be9c <Fantasy_Character_json_union_accept_type>:
    be9c:	mov	ip, sp
    bea0:	sub	sp, sp, #8
    bea4:	str	ip, [sp]
    bea8:	str	lr, [sp, #4]
    beac:	cmp	r0, #9
    beb0:	bcs	bee4 <Fantasy_Character_json_union_accept_type+0x48>
    beb4:	cmp	r0, #0
    beb8:	beq	bedc <Fantasy_Character_json_union_accept_type+0x40>
    bebc:	cmp	r0, #2
    bec0:	beq	bed4 <Fantasy_Character_json_union_accept_type+0x38>
    bec4:	cmp	r0, #8
    bec8:	bne	bf1c <Fantasy_Character_json_union_accept_type+0x80>
    becc:	mov	r0, #1
    bed0:	b	bf28 <Fantasy_Character_json_union_accept_type+0x8c>
    bed4:	mov	r0, #1
    bed8:	b	bf28 <Fantasy_Character_json_union_accept_type+0x8c>
    bedc:	mov	r0, #1
    bee0:	b	bf28 <Fantasy_Character_json_union_accept_type+0x8c>
    bee4:	cmp	r0, #11
    bee8:	bcs	bf04 <Fantasy_Character_json_union_accept_type+0x68>
    beec:	cmp	r0, #9
    bef0:	bne	befc <Fantasy_Character_json_union_accept_type+0x60>
    bef4:	mov	r0, #1
    bef8:	b	bf28 <Fantasy_Character_json_union_accept_type+0x8c>
    befc:	mov	r0, #1
    bf00:	b	bf28 <Fantasy_Character_json_union_accept_type+0x8c>
    bf04:	cmp	r0, #11
    bf08:	beq	bf24 <Fantasy_Character_json_union_accept_type+0x88>
    bf0c:	cmp	r0, #255	; 0xff
    bf10:	bne	bf1c <Fantasy_Character_json_union_accept_type+0x80>
    bf14:	mov	r0, #1
    bf18:	b	bf28 <Fantasy_Character_json_union_accept_type+0x8c>
    bf1c:	mov	r0, #0
    bf20:	b	bf28 <Fantasy_Character_json_union_accept_type+0x8c>
    bf24:	mov	r0, #1
    bf28:	ldr	lr, [sp, #4]
    bf2c:	add	sp, sp, #8
    bf30:	bx	lr

0000bf34 <Fantasy_Character_parse_json_enum>:
    bf34:	mov	ip, sp
    bf38:	sub	sp, sp, #48	; 0x30
    bf3c:	str	ip, [sp, #4]
    bf40:	str	lr, [sp, #8]
    bf44:	str	r4, [sp, #16]
    bf48:	str	r5, [sp, #20]
    bf4c:	str	r6, [sp, #24]
    bf50:	str	r7, [sp, #28]
    bf54:	str	r8, [sp, #32]
    bf58:	str	r9, [sp, #36]	; 0x24
    bf5c:	str	sl, [sp, #40]	; 0x28
    bf60:	ldr	r6, [ip, #4]
    bf64:	ldr	r4, [ip]
    bf68:	mov	r7, r3
    bf6c:	mov	r5, r2
    bf70:	mov	r9, r1
    bf74:	mov	r8, r0
    bf78:	mov	r1, r5
    bf7c:	mov	r0, r9
    bf80:	bl	cc0 <flatcc_json_parser_symbol_part>
    bf84:	mov	r2, r1
    bf88:	movw	r3, #20037	; 0x4e45
    bf8c:	movt	r3, #20047	; 0x4e4f
    bf90:	cmp	r2, r3
    bf94:	bne	bfac <Fantasy_Character_parse_json_enum+0x78>
    bf98:	mov	r2, r0
    bf9c:	mov	r3, #0
    bfa0:	cmp	r2, r3
    bfa4:	bcc	c20c <Fantasy_Character_parse_json_enum+0x2d8>
    bfa8:	b	bfbc <Fantasy_Character_parse_json_enum+0x88>
    bfac:	movw	r3, #20037	; 0x4e45
    bfb0:	movt	r3, #20047	; 0x4e4f
    bfb4:	cmp	r2, r3
    bfb8:	bcc	c20c <Fantasy_Character_parse_json_enum+0x2d8>
    bfbc:	mov	r3, r1
    bfc0:	movw	r2, #26725	; 0x6865
    bfc4:	movt	r2, #20340	; 0x4f74
    bfc8:	cmp	r3, r2
    bfcc:	bne	bfe4 <Fantasy_Character_parse_json_enum+0xb0>
    bfd0:	mov	r2, r0
    bfd4:	mov	r3, #1912602624	; 0x72000000
    bfd8:	cmp	r2, r3
    bfdc:	bcc	c19c <Fantasy_Character_parse_json_enum+0x268>
    bfe0:	b	bff4 <Fantasy_Character_parse_json_enum+0xc0>
    bfe4:	movw	ip, #26725	; 0x6865
    bfe8:	movt	ip, #20340	; 0x4f74
    bfec:	cmp	r3, ip
    bff0:	bcc	c19c <Fantasy_Character_parse_json_enum+0x268>
    bff4:	mov	r3, r1
    bff8:	mov	r2, r0
    bffc:	movw	ip, #28789	; 0x7075
    c000:	movt	ip, #21089	; 0x5261
    c004:	cmp	r3, ip
    c008:	bne	c020 <Fantasy_Character_parse_json_enum+0xec>
    c00c:	movw	r3, #25964	; 0x656c
    c010:	movt	r3, #28282	; 0x6e7a
    c014:	cmp	r2, r3
    c018:	bcc	c128 <Fantasy_Character_parse_json_enum+0x1f4>
    c01c:	b	c030 <Fantasy_Character_parse_json_enum+0xfc>
    c020:	movw	r2, #28789	; 0x7075
    c024:	movt	r2, #21089	; 0x5261
    c028:	cmp	r3, r2
    c02c:	bcc	c128 <Fantasy_Character_parse_json_enum+0x1f4>
    c030:	mov	r3, r1
    c034:	mov	r2, r0
    c038:	bic	r2, r2, #255	; 0xff
    c03c:	bic	r2, r2, #65280	; 0xff00
    c040:	eor	r3, r3, #115	; 0x73
    c044:	eor	r3, r3, #29952	; 0x7500
    c048:	eor	r3, r3, #7208960	; 0x6e0000
    c04c:	eor	r3, r3, #1426063360	; 0x55000000
    c050:	eor	ip, r2, #23330816	; 0x1640000
    c054:	eor	ip, ip, #1677721600	; 0x64000000
    c058:	orr	r2, r3, ip
    c05c:	cmp	r2, #0
    c060:	beq	c0e0 <Fantasy_Character_parse_json_enum+0x1ac>
    c064:	eor	r3, r1, #117	; 0x75
    c068:	eor	r3, r3, #94208	; 0x17000
    c06c:	eor	r3, r3, #39845888	; 0x2600000
    c070:	eor	r3, r3, #1342177280	; 0x50000000
    c074:	eor	ip, r0, #364	; 0x16c
    c078:	eor	ip, ip, #156672	; 0x26400
    c07c:	eor	ip, ip, #41418752	; 0x2780000
    c080:	eor	ip, ip, #1811939328	; 0x6c000000
    c084:	orr	r0, r3, ip
    c088:	cmp	r0, #0
    c08c:	bne	c0d8 <Fantasy_Character_parse_json_enum+0x1a4>
    c090:	mov	sl, r9
    c094:	mov	r3, #8
    c098:	str	r6, [sp]
    c09c:	mov	r2, r5
    c0a0:	mov	r1, sl
    c0a4:	mov	r0, r8
    c0a8:	bl	0 <flatcc_json_parser_match_constant>
    c0ac:	cmp	r0, sl
    c0b0:	beq	c0d0 <Fantasy_Character_parse_json_enum+0x19c>
    c0b4:	mov	r3, #0
    c0b8:	mov	r2, #8
    c0bc:	str	r2, [r4]
    c0c0:	str	r3, [r4, #4]
    c0c4:	mov	r3, #0
    c0c8:	str	r3, [r7]
    c0cc:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c0d0:	mov	r0, r9
    c0d4:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c0d8:	mov	r0, r9
    c0dc:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c0e0:	mov	r1, r9
    c0e4:	mov	sl, r1
    c0e8:	mov	r3, #6
    c0ec:	str	r6, [sp]
    c0f0:	mov	r2, r5
    c0f4:	mov	r0, r8
    c0f8:	bl	0 <flatcc_json_parser_match_constant>
    c0fc:	cmp	r0, sl
    c100:	beq	c120 <Fantasy_Character_parse_json_enum+0x1ec>
    c104:	mov	r3, #0
    c108:	mov	r2, #255	; 0xff
    c10c:	str	r2, [r4]
    c110:	str	r3, [r4, #4]
    c114:	mov	r1, #0
    c118:	str	r1, [r7]
    c11c:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c120:	mov	r0, r9
    c124:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c128:	and	r2, r0, #-16777216	; 0xff000000
    c12c:	eor	r0, r1, #101	; 0x65
    c130:	eor	r0, r0, #26624	; 0x6800
    c134:	eor	r0, r0, #57933824	; 0x3740000
    c138:	eor	r0, r0, #1275068416	; 0x4c000000
    c13c:	eor	ip, r2, #1912602624	; 0x72000000
    c140:	orr	ip, r0, ip
    c144:	cmp	ip, #0
    c148:	bne	c194 <Fantasy_Character_parse_json_enum+0x260>
    c14c:	mov	sl, r9
    c150:	mov	r3, #5
    c154:	str	r6, [sp]
    c158:	mov	r2, r5
    c15c:	mov	r1, sl
    c160:	mov	r0, r8
    c164:	bl	0 <flatcc_json_parser_match_constant>
    c168:	cmp	r0, sl
    c16c:	beq	c18c <Fantasy_Character_parse_json_enum+0x258>
    c170:	mov	r2, #0
    c174:	mov	r1, #11
    c178:	str	r1, [r4]
    c17c:	str	r2, [r4, #4]
    c180:	mov	r1, #0
    c184:	str	r1, [r7]
    c188:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c18c:	mov	r0, r9
    c190:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c194:	mov	r0, r9
    c198:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c19c:	mov	r2, #0
    c1a0:	eor	r3, r1, #69	; 0x45
    c1a4:	eor	r3, r3, #19968	; 0x4e00
    c1a8:	eor	r3, r3, #5177344	; 0x4f0000
    c1ac:	eor	r3, r3, #1308622848	; 0x4e000000
    c1b0:	orr	ip, r3, r2
    c1b4:	cmp	ip, #0
    c1b8:	bne	c204 <Fantasy_Character_parse_json_enum+0x2d0>
    c1bc:	mov	r1, r9
    c1c0:	mov	sl, r1
    c1c4:	mov	r3, #4
    c1c8:	str	r6, [sp]
    c1cc:	mov	r2, r5
    c1d0:	mov	r0, r8
    c1d4:	bl	0 <flatcc_json_parser_match_constant>
    c1d8:	cmp	r0, sl
    c1dc:	beq	c1fc <Fantasy_Character_parse_json_enum+0x2c8>
    c1e0:	mov	r1, #0
    c1e4:	mov	ip, #0
    c1e8:	str	ip, [r4]
    c1ec:	str	r1, [r4, #4]
    c1f0:	mov	r3, #0
    c1f4:	str	r3, [r7]
    c1f8:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c1fc:	mov	r0, r9
    c200:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c204:	mov	r0, r9
    c208:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c20c:	mov	ip, r1
    c210:	movw	r2, #28523	; 0x6f6b
    c214:	movt	r2, #17007	; 0x426f
    c218:	cmp	ip, r2
    c21c:	bne	c238 <Fantasy_Character_parse_json_enum+0x304>
    c220:	mov	r2, r0
    c224:	movw	r3, #28160	; 0x6e00
    c228:	movt	r3, #18017	; 0x4661
    c22c:	cmp	r2, r3
    c230:	bcc	c33c <Fantasy_Character_parse_json_enum+0x408>
    c234:	b	c24c <Fantasy_Character_parse_json_enum+0x318>
    c238:	mov	ip, r1
    c23c:	movw	r2, #28523	; 0x6f6b
    c240:	movt	r2, #17007	; 0x426f
    c244:	cmp	ip, r2
    c248:	bcc	c33c <Fantasy_Character_parse_json_enum+0x408>
    c24c:	mov	r3, r0
    c250:	mov	r2, r1
    c254:	and	ip, r3, #-16777216	; 0xff000000
    c258:	eor	r3, r2, #97	; 0x61
    c25c:	eor	r3, r3, #84992	; 0x14c00
    c260:	eor	r3, r3, #24379392	; 0x1740000
    c264:	eor	r3, r3, #1275068416	; 0x4c000000
    c268:	eor	r2, ip, #1845493760	; 0x6e000000
    c26c:	orr	ip, r3, r2
    c270:	cmp	ip, #0
    c274:	beq	c2f4 <Fantasy_Character_parse_json_enum+0x3c0>
    c278:	bic	r0, r0, #255	; 0xff
    c27c:	eor	r1, r1, #107	; 0x6b
    c280:	eor	r1, r1, #28416	; 0x6f00
    c284:	eor	r1, r1, #7274496	; 0x6f0000
    c288:	eor	r1, r1, #1107296256	; 0x42000000
    c28c:	eor	ip, r0, #28160	; 0x6e00
    c290:	eor	ip, ip, #6356992	; 0x610000
    c294:	eor	ip, ip, #1174405120	; 0x46000000
    c298:	orr	ip, r1, ip
    c29c:	cmp	ip, #0
    c2a0:	bne	c2ec <Fantasy_Character_parse_json_enum+0x3b8>
    c2a4:	mov	r1, r9
    c2a8:	mov	sl, r1
    c2ac:	mov	r3, #7
    c2b0:	str	r6, [sp]
    c2b4:	mov	r2, r5
    c2b8:	mov	r0, r8
    c2bc:	bl	0 <flatcc_json_parser_match_constant>
    c2c0:	cmp	r0, sl
    c2c4:	beq	c2e4 <Fantasy_Character_parse_json_enum+0x3b0>
    c2c8:	mov	r3, #0
    c2cc:	mov	r2, #10
    c2d0:	str	r2, [r4]
    c2d4:	str	r3, [r4, #4]
    c2d8:	mov	ip, #0
    c2dc:	str	ip, [r7]
    c2e0:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c2e4:	mov	r0, r9
    c2e8:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c2ec:	mov	r0, r9
    c2f0:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c2f4:	mov	sl, r9
    c2f8:	mov	r3, #5
    c2fc:	str	r6, [sp]
    c300:	mov	r2, r5
    c304:	mov	r1, sl
    c308:	mov	r0, r8
    c30c:	bl	0 <flatcc_json_parser_match_constant>
    c310:	cmp	r0, sl
    c314:	beq	c334 <Fantasy_Character_parse_json_enum+0x400>
    c318:	mov	r2, #0
    c31c:	mov	r1, #2
    c320:	str	r1, [r4]
    c324:	str	r2, [r4, #4]
    c328:	mov	r3, #0
    c32c:	str	r3, [r7]
    c330:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c334:	mov	r0, r9
    c338:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c33c:	and	r3, r0, #-16777216	; 0xff000000
    c340:	eor	r2, r1, #108	; 0x6c
    c344:	eor	r2, r2, #93184	; 0x16c00
    c348:	eor	r2, r2, #40108032	; 0x2640000
    c34c:	eor	r2, r2, #1073741824	; 0x40000000
    c350:	eor	r1, r3, #1694498816	; 0x65000000
    c354:	orr	r1, r2, r1
    c358:	cmp	r1, #0
    c35c:	bne	c3a8 <Fantasy_Character_parse_json_enum+0x474>
    c360:	mov	sl, r9
    c364:	mov	r3, #5
    c368:	str	r6, [sp]
    c36c:	mov	r2, r5
    c370:	mov	r1, sl
    c374:	mov	r0, r8
    c378:	bl	0 <flatcc_json_parser_match_constant>
    c37c:	cmp	r0, sl
    c380:	beq	c3a0 <Fantasy_Character_parse_json_enum+0x46c>
    c384:	mov	ip, #0
    c388:	mov	r3, #9
    c38c:	str	r3, [r4]
    c390:	str	ip, [r4, #4]
    c394:	mov	r1, #0
    c398:	str	r1, [r7]
    c39c:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c3a0:	mov	r0, r9
    c3a4:	b	c3ac <Fantasy_Character_parse_json_enum+0x478>
    c3a8:	mov	r0, r9
    c3ac:	ldr	r4, [sp, #16]
    c3b0:	ldr	r5, [sp, #20]
    c3b4:	ldr	r6, [sp, #24]
    c3b8:	ldr	r7, [sp, #28]
    c3bc:	ldr	r8, [sp, #32]
    c3c0:	ldr	r9, [sp, #36]	; 0x24
    c3c4:	ldr	sl, [sp, #40]	; 0x28
    c3c8:	ldr	lr, [sp, #8]
    c3cc:	add	sp, sp, #48	; 0x30
    c3d0:	bx	lr

0000c3d4 <Fantasy_Movie_parse_json_table>:
    c3d4:	mov	ip, sp
    c3d8:	sub	sp, sp, #64	; 0x40
    c3dc:	str	ip, [sp, #20]
    c3e0:	str	lr, [sp, #24]
    c3e4:	str	r4, [sp, #32]
    c3e8:	str	r5, [sp, #36]	; 0x24
    c3ec:	str	r6, [sp, #40]	; 0x28
    c3f0:	str	r7, [sp, #44]	; 0x2c
    c3f4:	str	r8, [sp, #48]	; 0x30
    c3f8:	str	r9, [sp, #52]	; 0x34
    c3fc:	mov	r7, r3
    c400:	mov	r4, r2
    c404:	mov	r5, r1
    c408:	mov	r6, r0
    c40c:	mov	r1, #0
    c410:	str	r1, [r7]
    c414:	ldr	r0, [r6]
    c418:	mov	r1, #10
    c41c:	bl	0 <flatcc_builder_start_table>
    c420:	cmp	r0, #0
    c424:	bne	cd68 <Fantasy_Movie_parse_json_table+0x994>
    c428:	mov	r3, #5
    c42c:	add	r1, sp, #60	; 0x3c
    c430:	str	r1, [sp]
    c434:	mov	r2, r4
    c438:	mov	r1, r5
    c43c:	mov	r0, r6
    c440:	bl	0 <flatcc_json_parser_prepare_unions>
    c444:	cmp	r4, r0
    c448:	beq	cd68 <Fantasy_Movie_parse_json_table+0x994>
    c44c:	add	r3, sp, #56	; 0x38
    c450:	mov	r2, r4
    c454:	mov	r1, r5
    c458:	mov	r0, r6
    c45c:	bl	d7c <flatcc_json_parser_object_start>
    c460:	mov	r5, r0
    c464:	ldr	r0, [sp, #56]	; 0x38
    c468:	cmp	r0, #0
    c46c:	beq	cd28 <Fantasy_Movie_parse_json_table+0x954>
    c470:	mov	r2, r4
    c474:	mov	r1, r5
    c478:	mov	r0, r6
    c47c:	bl	b90 <flatcc_json_parser_symbol_start>
    c480:	mov	r5, r0
    c484:	mov	r1, r4
    c488:	mov	r0, r5
    c48c:	bl	cc0 <flatcc_json_parser_symbol_part>
    c490:	mov	r3, r0
    c494:	mov	r2, r1
    c498:	movw	ip, #24946	; 0x6172
    c49c:	movt	ip, #25448	; 0x6368
    c4a0:	cmp	r2, ip
    c4a4:	bne	c4bc <Fantasy_Movie_parse_json_table+0xe8>
    c4a8:	movw	r2, #29797	; 0x7465
    c4ac:	movt	r2, #24931	; 0x6163
    c4b0:	cmp	r3, r2
    c4b4:	bcc	ca10 <Fantasy_Movie_parse_json_table+0x63c>
    c4b8:	b	c4d0 <Fantasy_Movie_parse_json_table+0xfc>
    c4bc:	mov	r2, r1
    c4c0:	movw	r3, #24946	; 0x6172
    c4c4:	movt	r3, #25448	; 0x6368
    c4c8:	cmp	r2, r3
    c4cc:	bcc	ca10 <Fantasy_Movie_parse_json_table+0x63c>
    c4d0:	mov	r2, r1
    c4d4:	movw	r3, #26990	; 0x696e
    c4d8:	movt	r3, #28001	; 0x6d61
    c4dc:	cmp	r2, r3
    c4e0:	bne	c4fc <Fantasy_Movie_parse_json_table+0x128>
    c4e4:	mov	r3, r0
    c4e8:	movw	ip, #26721	; 0x6861
    c4ec:	movt	ip, #24419	; 0x5f63
    c4f0:	cmp	r3, ip
    c4f4:	bcc	c874 <Fantasy_Movie_parse_json_table+0x4a0>
    c4f8:	b	c510 <Fantasy_Movie_parse_json_table+0x13c>
    c4fc:	mov	r2, r1
    c500:	movw	r3, #26990	; 0x696e
    c504:	movt	r3, #28001	; 0x6d61
    c508:	cmp	r2, r3
    c50c:	bcc	c874 <Fantasy_Movie_parse_json_table+0x4a0>
    c510:	mov	r2, r1
    c514:	eor	r3, r2, #110	; 0x6e
    c518:	eor	r3, r3, #26880	; 0x6900
    c51c:	eor	r3, r3, #6356992	; 0x610000
    c520:	eor	r3, r3, #1828716544	; 0x6d000000
    c524:	mov	ip, r0
    c528:	eor	r2, ip, #97	; 0x61
    c52c:	eor	r2, r2, #223232	; 0x36800
    c530:	eor	r2, r2, #257949696	; 0xf600000
    c534:	eor	r2, r2, #1342177280	; 0x50000000
    c538:	orr	r2, r3, r2
    c53c:	cmp	r2, #0
    c540:	beq	c6c8 <Fantasy_Movie_parse_json_table+0x2f4>
    c544:	eor	r2, r1, #101	; 0x65
    c548:	eor	r2, r2, #91136	; 0x16400
    c54c:	eor	r2, r2, #57147392	; 0x3680000
    c550:	eor	r2, r2, #1879048192	; 0x70000000
    c554:	eor	r1, r0, #99	; 0x63
    c558:	eor	r1, r1, #26880	; 0x6900
    c55c:	eor	r1, r1, #7012352	; 0x6b0000
    c560:	eor	r1, r1, #1593835520	; 0x5f000000
    c564:	orr	r3, r2, r1
    c568:	cmp	r3, #0
    c56c:	bne	c6b0 <Fantasy_Movie_parse_json_table+0x2dc>
    c570:	add	r5, r5, #8
    c574:	mov	r1, r4
    c578:	mov	r0, r5
    c57c:	bl	cc0 <flatcc_json_parser_symbol_part>
    c580:	mov	r3, r1
    c584:	bic	r2, r0, #255	; 0xff
    c588:	bic	r2, r2, #65280	; 0xff00
    c58c:	eor	ip, r3, #121	; 0x79
    c590:	eor	ip, ip, #226304	; 0x37400
    c594:	eor	ip, ip, #56360960	; 0x35c0000
    c598:	eor	ip, ip, #1744830464	; 0x68000000
    c59c:	eor	r2, r2, #6619136	; 0x650000
    c5a0:	eor	r2, r2, #1879048192	; 0x70000000
    c5a4:	orr	r3, ip, r2
    c5a8:	cmp	r3, #0
    c5ac:	beq	c644 <Fantasy_Movie_parse_json_table+0x270>
    c5b0:	and	ip, r1, #-16777216	; 0xff000000
    c5b4:	mov	r3, #0
    c5b8:	eor	ip, ip, #1795162112	; 0x6b000000
    c5bc:	orr	r2, ip, r3
    c5c0:	cmp	r2, #0
    c5c4:	bne	c62c <Fantasy_Movie_parse_json_table+0x258>
    c5c8:	mov	r3, #1
    c5cc:	mov	r2, r4
    c5d0:	mov	r1, r5
    c5d4:	mov	r0, r6
    c5d8:	bl	118c <flatcc_json_parser_match_symbol>
    c5dc:	mov	r1, r0
    c5e0:	cmp	r5, r1
    c5e4:	beq	c618 <Fantasy_Movie_parse_json_table+0x244>
    c5e8:	mov	r3, #2
    c5ec:	mov	r5, #5
    c5f0:	ldr	r0, [sp, #60]	; 0x3c
    c5f4:	ldr	r2, [pc, #1968]	; cdac <Fantasy_Movie_parse_json_table+0x9d8>
    c5f8:	str	r2, [sp, #8]
    c5fc:	str	r0, [sp, #4]
    c600:	str	r5, [sp]
    c604:	mov	r2, r4
    c608:	mov	r0, r6
    c60c:	bl	0 <flatcc_json_parser_union>
    c610:	mov	r1, r0
    c614:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c618:	mov	r2, r4
    c61c:	mov	r0, r6
    c620:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c624:	mov	r1, r0
    c628:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c62c:	mov	r2, r4
    c630:	mov	r1, r5
    c634:	mov	r0, r6
    c638:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c63c:	mov	r1, r0
    c640:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c644:	mov	r3, #6
    c648:	mov	r2, r4
    c64c:	mov	r1, r5
    c650:	mov	r0, r6
    c654:	bl	118c <flatcc_json_parser_match_symbol>
    c658:	mov	r1, r0
    c65c:	cmp	r5, r1
    c660:	beq	c69c <Fantasy_Movie_parse_json_table+0x2c8>
    c664:	mov	r3, #2
    c668:	mov	r0, #5
    c66c:	ldr	r8, [sp, #60]	; 0x3c
    c670:	ldr	r2, [pc, #1832]	; cda0 <Fantasy_Movie_parse_json_table+0x9cc>
    c674:	ldr	ip, [pc, #1840]	; cdac <Fantasy_Movie_parse_json_table+0x9d8>
    c678:	str	ip, [sp, #12]
    c67c:	str	r2, [sp, #8]
    c680:	str	r8, [sp, #4]
    c684:	str	r0, [sp]
    c688:	mov	r2, r4
    c68c:	mov	r0, r6
    c690:	bl	0 <flatcc_json_parser_union_type>
    c694:	mov	r1, r0
    c698:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c69c:	mov	r2, r4
    c6a0:	mov	r0, r6
    c6a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c6a8:	mov	r1, r0
    c6ac:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c6b0:	mov	r2, r4
    c6b4:	mov	r1, r5
    c6b8:	mov	r0, r6
    c6bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c6c0:	mov	r1, r0
    c6c4:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c6c8:	add	r5, r5, #8
    c6cc:	mov	r1, r4
    c6d0:	mov	r0, r5
    c6d4:	bl	cc0 <flatcc_json_parser_symbol_part>
    c6d8:	mov	r2, r1
    c6dc:	eor	r2, r2, #884	; 0x374
    c6e0:	eor	r2, r2, #90112	; 0x16000
    c6e4:	eor	r2, r2, #39845888	; 0x2600000
    c6e8:	eor	r2, r2, #1879048192	; 0x70000000
    c6ec:	mov	ip, r0
    c6f0:	eor	r3, ip, #884	; 0x374
    c6f4:	eor	r3, r3, #154624	; 0x25c00
    c6f8:	eor	r3, r3, #91226112	; 0x5700000
    c6fc:	eor	r3, r3, #1610612736	; 0x60000000
    c700:	orr	r2, r2, r3
    c704:	cmp	r2, #0
    c708:	bne	c7c4 <Fantasy_Movie_parse_json_table+0x3f0>
    c70c:	add	r5, r5, #8
    c710:	mov	r1, r4
    c714:	mov	r0, r5
    c718:	bl	cc0 <flatcc_json_parser_symbol_part>
    c71c:	bic	ip, r1, #255	; 0xff
    c720:	mov	r1, #0
    c724:	eor	ip, ip, #25856	; 0x6500
    c728:	eor	ip, ip, #158334976	; 0x9700000
    c72c:	eor	ip, ip, #1879048192	; 0x70000000
    c730:	orr	ip, ip, r1
    c734:	cmp	ip, #0
    c738:	bne	c7ac <Fantasy_Movie_parse_json_table+0x3d8>
    c73c:	mov	r3, #3
    c740:	mov	r2, r4
    c744:	mov	r1, r5
    c748:	mov	r0, r6
    c74c:	bl	118c <flatcc_json_parser_match_symbol>
    c750:	cmp	r5, r0
    c754:	beq	c794 <Fantasy_Movie_parse_json_table+0x3c0>
    c758:	mov	r3, #0
    c75c:	mov	r8, #1
    c760:	ldr	ip, [sp, #60]	; 0x3c
    c764:	ldr	r1, [pc, #1612]	; cdb8 <Fantasy_Movie_parse_json_table+0x9e4>
    c768:	ldr	r2, [pc, #1596]	; cdac <Fantasy_Movie_parse_json_table+0x9d8>
    c76c:	str	r2, [sp, #12]
    c770:	str	r1, [sp, #8]
    c774:	str	ip, [sp, #4]
    c778:	str	r8, [sp]
    c77c:	mov	r2, r4
    c780:	mov	r1, r0
    c784:	mov	r0, r6
    c788:	bl	0 <flatcc_json_parser_union_type>
    c78c:	mov	r1, r0
    c790:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c794:	mov	r2, r4
    c798:	mov	r1, r0
    c79c:	mov	r0, r6
    c7a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c7a4:	mov	r1, r0
    c7a8:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c7ac:	mov	r2, r4
    c7b0:	mov	r1, r5
    c7b4:	mov	r0, r6
    c7b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c7bc:	mov	r1, r0
    c7c0:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c7c4:	bic	ip, r0, #255	; 0xff
    c7c8:	bic	ip, ip, #65280	; 0xff00
    c7cc:	eor	r2, r1, #884	; 0x374
    c7d0:	eor	r2, r2, #90112	; 0x16000
    c7d4:	eor	r2, r2, #39845888	; 0x2600000
    c7d8:	eor	r2, r2, #1879048192	; 0x70000000
    c7dc:	eor	r3, ip, #7471104	; 0x720000
    c7e0:	eor	r3, r3, #1694498816	; 0x65000000
    c7e4:	orr	ip, r2, r3
    c7e8:	cmp	ip, #0
    c7ec:	bne	c85c <Fantasy_Movie_parse_json_table+0x488>
    c7f0:	mov	r1, r5
    c7f4:	mov	r5, r1
    c7f8:	mov	r3, #6
    c7fc:	mov	r2, r4
    c800:	mov	r0, r6
    c804:	bl	118c <flatcc_json_parser_match_symbol>
    c808:	cmp	r5, r0
    c80c:	beq	c844 <Fantasy_Movie_parse_json_table+0x470>
    c810:	mov	r3, #0
    c814:	mov	r2, #1
    c818:	ldr	ip, [sp, #60]	; 0x3c
    c81c:	ldr	r1, [pc, #1416]	; cdac <Fantasy_Movie_parse_json_table+0x9d8>
    c820:	str	r1, [sp, #8]
    c824:	str	ip, [sp, #4]
    c828:	str	r2, [sp]
    c82c:	mov	r2, r4
    c830:	mov	r1, r0
    c834:	mov	r0, r6
    c838:	bl	0 <flatcc_json_parser_union>
    c83c:	mov	r1, r0
    c840:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c844:	mov	r2, r4
    c848:	mov	r1, r0
    c84c:	mov	r0, r6
    c850:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c854:	mov	r1, r0
    c858:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c85c:	mov	r2, r4
    c860:	mov	r1, r5
    c864:	mov	r0, r6
    c868:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c86c:	mov	r1, r0
    c870:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c874:	eor	r1, r1, #114	; 0x72
    c878:	eor	r1, r1, #24832	; 0x6100
    c87c:	eor	r1, r1, #57147392	; 0x3680000
    c880:	eor	r1, r1, #1610612736	; 0x60000000
    c884:	eor	r0, r0, #101	; 0x65
    c888:	eor	r0, r0, #226304	; 0x37400
    c88c:	eor	r0, r0, #23068672	; 0x1600000
    c890:	eor	r0, r0, #1610612736	; 0x60000000
    c894:	orr	r2, r1, r0
    c898:	cmp	r2, #0
    c89c:	bne	c9f8 <Fantasy_Movie_parse_json_table+0x624>
    c8a0:	add	r5, r5, #8
    c8a4:	mov	r1, r4
    c8a8:	mov	r0, r5
    c8ac:	bl	cc0 <flatcc_json_parser_symbol_part>
    c8b0:	mov	r2, r1
    c8b4:	bic	r3, r0, #255	; 0xff
    c8b8:	eor	ip, r2, #884	; 0x374
    c8bc:	eor	ip, ip, #220160	; 0x35c00
    c8c0:	eor	ip, ip, #40894464	; 0x2700000
    c8c4:	eor	ip, ip, #1879048192	; 0x70000000
    c8c8:	eor	r3, r3, #25856	; 0x6500
    c8cc:	eor	r3, r3, #158334976	; 0x9700000
    c8d0:	eor	r3, r3, #1879048192	; 0x70000000
    c8d4:	orr	r2, ip, r3
    c8d8:	cmp	r2, #0
    c8dc:	beq	c980 <Fantasy_Movie_parse_json_table+0x5ac>
    c8e0:	bic	ip, r1, #255	; 0xff
    c8e4:	bic	ip, ip, #65280	; 0xff00
    c8e8:	mov	r3, #0
    c8ec:	eor	r0, ip, #7536640	; 0x730000
    c8f0:	eor	r0, r0, #1912602624	; 0x72000000
    c8f4:	orr	r2, r0, r3
    c8f8:	cmp	r2, #0
    c8fc:	bne	c968 <Fantasy_Movie_parse_json_table+0x594>
    c900:	mov	r1, r5
    c904:	mov	r5, r1
    c908:	mov	r3, #2
    c90c:	mov	r2, r4
    c910:	mov	r0, r6
    c914:	bl	118c <flatcc_json_parser_match_symbol>
    c918:	mov	r1, r0
    c91c:	cmp	r5, r1
    c920:	beq	c954 <Fantasy_Movie_parse_json_table+0x580>
    c924:	mov	r3, #4
    c928:	mov	r2, #9
    c92c:	ldr	r5, [sp, #60]	; 0x3c
    c930:	ldr	r0, [pc, #1140]	; cdac <Fantasy_Movie_parse_json_table+0x9d8>
    c934:	str	r0, [sp, #8]
    c938:	str	r5, [sp, #4]
    c93c:	str	r2, [sp]
    c940:	mov	r2, r4
    c944:	mov	r0, r6
    c948:	bl	0 <flatcc_json_parser_union_vector>
    c94c:	mov	r1, r0
    c950:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c954:	mov	r2, r4
    c958:	mov	r0, r6
    c95c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c960:	mov	r1, r0
    c964:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c968:	mov	r2, r4
    c96c:	mov	r1, r5
    c970:	mov	r0, r6
    c974:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c978:	mov	r1, r0
    c97c:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c980:	mov	r1, r5
    c984:	mov	r5, r1
    c988:	mov	r3, #7
    c98c:	mov	r2, r4
    c990:	mov	r0, r6
    c994:	bl	118c <flatcc_json_parser_match_symbol>
    c998:	mov	r1, r0
    c99c:	cmp	r5, r1
    c9a0:	beq	c9e4 <Fantasy_Movie_parse_json_table+0x610>
    c9a4:	mov	r3, #4
    c9a8:	mov	r2, #9
    c9ac:	ldr	r9, [sp, #60]	; 0x3c
    c9b0:	ldr	r8, [pc, #1008]	; cda8 <Fantasy_Movie_parse_json_table+0x9d4>
    c9b4:	ldr	ip, [pc, #1008]	; cdac <Fantasy_Movie_parse_json_table+0x9d8>
    c9b8:	ldr	r0, [pc, #1008]	; cdb0 <Fantasy_Movie_parse_json_table+0x9dc>
    c9bc:	str	r0, [sp, #16]
    c9c0:	str	ip, [sp, #12]
    c9c4:	str	r8, [sp, #8]
    c9c8:	str	r9, [sp, #4]
    c9cc:	str	r2, [sp]
    c9d0:	mov	r2, r4
    c9d4:	mov	r0, r6
    c9d8:	bl	0 <flatcc_json_parser_union_type_vector>
    c9dc:	mov	r1, r0
    c9e0:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c9e4:	mov	r2, r4
    c9e8:	mov	r0, r6
    c9ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c9f0:	mov	r1, r0
    c9f4:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    c9f8:	mov	r2, r4
    c9fc:	mov	r1, r5
    ca00:	mov	r0, r6
    ca04:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ca08:	mov	r1, r0
    ca0c:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    ca10:	mov	r3, r1
    ca14:	mov	r2, r0
    ca18:	eor	r3, r3, #97	; 0x61
    ca1c:	eor	r3, r3, #160768	; 0x27400
    ca20:	eor	r3, r3, #23855104	; 0x16c0000
    ca24:	eor	r3, r3, #1610612736	; 0x60000000
    ca28:	eor	r2, r2, #105	; 0x69
    ca2c:	eor	r2, r2, #28160	; 0x6e00
    ca30:	eor	r2, r2, #7274496	; 0x6f0000
    ca34:	eor	r2, r2, #1728053248	; 0x67000000
    ca38:	orr	ip, r3, r2
    ca3c:	cmp	ip, #0
    ca40:	bne	cb8c <Fantasy_Movie_parse_json_table+0x7b8>
    ca44:	add	r5, r5, #8
    ca48:	mov	r1, r4
    ca4c:	mov	r0, r5
    ca50:	bl	cc0 <flatcc_json_parser_symbol_part>
    ca54:	mov	r3, r1
    ca58:	bic	r2, r0, #255	; 0xff
    ca5c:	eor	r3, r3, #884	; 0x374
    ca60:	eor	r3, r3, #23552	; 0x5c00
    ca64:	eor	r3, r3, #57933824	; 0x3740000
    ca68:	eor	r3, r3, #1879048192	; 0x70000000
    ca6c:	eor	r0, r2, #25856	; 0x6500
    ca70:	eor	r0, r0, #158334976	; 0x9700000
    ca74:	eor	r0, r0, #1879048192	; 0x70000000
    ca78:	orr	r3, r3, r0
    ca7c:	cmp	r3, #0
    ca80:	beq	cb20 <Fantasy_Movie_parse_json_table+0x74c>
    ca84:	bic	r0, r1, #255	; 0xff
    ca88:	bic	r0, r0, #65280	; 0xff00
    ca8c:	mov	r3, #0
    ca90:	eor	r0, r0, #57933824	; 0x3740000
    ca94:	eor	r0, r0, #1879048192	; 0x70000000
    ca98:	orr	r0, r0, r3
    ca9c:	cmp	r0, #0
    caa0:	bne	cb08 <Fantasy_Movie_parse_json_table+0x734>
    caa4:	mov	r3, #2
    caa8:	mov	r2, r4
    caac:	mov	r1, r5
    cab0:	mov	r0, r6
    cab4:	bl	118c <flatcc_json_parser_match_symbol>
    cab8:	mov	r1, r0
    cabc:	cmp	r5, r1
    cac0:	beq	caf4 <Fantasy_Movie_parse_json_table+0x720>
    cac4:	mov	r3, #1
    cac8:	mov	r2, #3
    cacc:	ldr	r0, [sp, #60]	; 0x3c
    cad0:	ldr	r5, [pc, #724]	; cdac <Fantasy_Movie_parse_json_table+0x9d8>
    cad4:	str	r5, [sp, #8]
    cad8:	str	r0, [sp, #4]
    cadc:	str	r2, [sp]
    cae0:	mov	r2, r4
    cae4:	mov	r0, r6
    cae8:	bl	0 <flatcc_json_parser_union>
    caec:	mov	r1, r0
    caf0:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    caf4:	mov	r2, r4
    caf8:	mov	r0, r6
    cafc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cb00:	mov	r1, r0
    cb04:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    cb08:	mov	r2, r4
    cb0c:	mov	r1, r5
    cb10:	mov	r0, r6
    cb14:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cb18:	mov	r1, r0
    cb1c:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    cb20:	mov	r3, #7
    cb24:	mov	r2, r4
    cb28:	mov	r1, r5
    cb2c:	mov	r0, r6
    cb30:	bl	118c <flatcc_json_parser_match_symbol>
    cb34:	mov	r1, r0
    cb38:	cmp	r5, r1
    cb3c:	beq	cb78 <Fantasy_Movie_parse_json_table+0x7a4>
    cb40:	mov	r3, #1
    cb44:	mov	ip, #3
    cb48:	ldr	r0, [sp, #60]	; 0x3c
    cb4c:	ldr	r2, [pc, #592]	; cda4 <Fantasy_Movie_parse_json_table+0x9d0>
    cb50:	ldr	r8, [pc, #596]	; cdac <Fantasy_Movie_parse_json_table+0x9d8>
    cb54:	str	r8, [sp, #12]
    cb58:	str	r2, [sp, #8]
    cb5c:	str	r0, [sp, #4]
    cb60:	str	ip, [sp]
    cb64:	mov	r2, r4
    cb68:	mov	r0, r6
    cb6c:	bl	0 <flatcc_json_parser_union_type>
    cb70:	mov	r1, r0
    cb74:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    cb78:	mov	r2, r4
    cb7c:	mov	r0, r6
    cb80:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cb84:	mov	r1, r0
    cb88:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    cb8c:	mov	r2, r1
    cb90:	eor	r3, r2, #101	; 0x65
    cb94:	eor	r3, r3, #27904	; 0x6d00
    cb98:	eor	r3, r3, #6356992	; 0x610000
    cb9c:	eor	r3, r3, #1660944384	; 0x63000000
    cba0:	mov	r2, r0
    cba4:	eor	r2, r2, #121	; 0x79
    cba8:	eor	r2, r2, #226304	; 0x37400
    cbac:	eor	r2, r2, #56360960	; 0x35c0000
    cbb0:	eor	r2, r2, #1811939328	; 0x6c000000
    cbb4:	orr	r2, r3, r2
    cbb8:	cmp	r2, #0
    cbbc:	bne	cc74 <Fantasy_Movie_parse_json_table+0x8a0>
    cbc0:	add	r5, r5, #8
    cbc4:	mov	r1, r4
    cbc8:	mov	r0, r5
    cbcc:	bl	cc0 <flatcc_json_parser_symbol_part>
    cbd0:	bic	r3, r1, #255	; 0xff
    cbd4:	bic	r3, r3, #65280	; 0xff00
    cbd8:	mov	r2, #0
    cbdc:	eor	r3, r3, #6619136	; 0x650000
    cbe0:	eor	r3, r3, #1879048192	; 0x70000000
    cbe4:	orr	r3, r3, r2
    cbe8:	cmp	r3, #0
    cbec:	bne	cc5c <Fantasy_Movie_parse_json_table+0x888>
    cbf0:	mov	r3, #2
    cbf4:	mov	r2, r4
    cbf8:	mov	r1, r5
    cbfc:	mov	r0, r6
    cc00:	bl	118c <flatcc_json_parser_match_symbol>
    cc04:	mov	r1, r0
    cc08:	cmp	r5, r1
    cc0c:	beq	cc48 <Fantasy_Movie_parse_json_table+0x874>
    cc10:	mov	r3, #3
    cc14:	mov	r2, #7
    cc18:	ldr	ip, [sp, #60]	; 0x3c
    cc1c:	ldr	r8, [pc, #400]	; cdb4 <Fantasy_Movie_parse_json_table+0x9e0>
    cc20:	ldr	r0, [pc, #388]	; cdac <Fantasy_Movie_parse_json_table+0x9d8>
    cc24:	str	r0, [sp, #12]
    cc28:	str	r8, [sp, #8]
    cc2c:	str	ip, [sp, #4]
    cc30:	str	r2, [sp]
    cc34:	mov	r2, r4
    cc38:	mov	r0, r6
    cc3c:	bl	0 <flatcc_json_parser_union_type>
    cc40:	mov	r1, r0
    cc44:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    cc48:	mov	r2, r4
    cc4c:	mov	r0, r6
    cc50:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cc54:	mov	r1, r0
    cc58:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    cc5c:	mov	r2, r4
    cc60:	mov	r1, r5
    cc64:	mov	r0, r6
    cc68:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cc6c:	mov	r1, r0
    cc70:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    cc74:	and	r0, r0, #-16777216	; 0xff000000
    cc78:	eor	ip, r1, #101	; 0x65
    cc7c:	eor	ip, ip, #27904	; 0x6d00
    cc80:	eor	ip, ip, #6356992	; 0x610000
    cc84:	eor	ip, ip, #1660944384	; 0x63000000
    cc88:	eor	r0, r0, #1862270976	; 0x6f000000
    cc8c:	orr	ip, ip, r0
    cc90:	cmp	ip, #0
    cc94:	bne	ccfc <Fantasy_Movie_parse_json_table+0x928>
    cc98:	mov	r3, #5
    cc9c:	mov	r2, r4
    cca0:	mov	r1, r5
    cca4:	mov	r0, r6
    cca8:	bl	118c <flatcc_json_parser_match_symbol>
    ccac:	mov	r1, r0
    ccb0:	cmp	r5, r1
    ccb4:	beq	cce8 <Fantasy_Movie_parse_json_table+0x914>
    ccb8:	mov	r3, #3
    ccbc:	mov	r0, #7
    ccc0:	ldr	r2, [sp, #60]	; 0x3c
    ccc4:	ldr	ip, [pc, #224]	; cdac <Fantasy_Movie_parse_json_table+0x9d8>
    ccc8:	str	ip, [sp, #8]
    cccc:	str	r2, [sp, #4]
    ccd0:	str	r0, [sp]
    ccd4:	mov	r2, r4
    ccd8:	mov	r0, r6
    ccdc:	bl	0 <flatcc_json_parser_union>
    cce0:	mov	r1, r0
    cce4:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    cce8:	mov	r2, r4
    ccec:	mov	r0, r6
    ccf0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ccf4:	mov	r1, r0
    ccf8:	b	cd10 <Fantasy_Movie_parse_json_table+0x93c>
    ccfc:	mov	r2, r4
    cd00:	mov	r1, r5
    cd04:	mov	r0, r6
    cd08:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cd0c:	mov	r1, r0
    cd10:	add	r3, sp, #56	; 0x38
    cd14:	mov	r2, r4
    cd18:	mov	r0, r6
    cd1c:	bl	e5c <flatcc_json_parser_object_end>
    cd20:	mov	r5, r0
    cd24:	b	c464 <Fantasy_Movie_parse_json_table+0x90>
    cd28:	ldr	r1, [r6, #24]
    cd2c:	cmp	r1, #0
    cd30:	bne	cd68 <Fantasy_Movie_parse_json_table+0x994>
    cd34:	ldr	r3, [sp, #60]	; 0x3c
    cd38:	mov	r2, r4
    cd3c:	mov	r1, r5
    cd40:	mov	r0, r6
    cd44:	bl	0 <flatcc_json_parser_finalize_unions>
    cd48:	mov	r5, r0
    cd4c:	ldr	r0, [r6]
    cd50:	bl	0 <flatcc_builder_end_table>
    cd54:	str	r0, [r7]
    cd58:	cmp	r0, #0
    cd5c:	beq	cd68 <Fantasy_Movie_parse_json_table+0x994>
    cd60:	mov	r0, r5
    cd64:	b	cd7c <Fantasy_Movie_parse_json_table+0x9a8>
    cd68:	mov	r3, #33	; 0x21
    cd6c:	mov	r2, r4
    cd70:	mov	r1, r5
    cd74:	mov	r0, r6
    cd78:	bl	0 <flatcc_json_parser_set_error>
    cd7c:	ldr	r4, [sp, #32]
    cd80:	ldr	r5, [sp, #36]	; 0x24
    cd84:	ldr	r6, [sp, #40]	; 0x28
    cd88:	ldr	r7, [sp, #44]	; 0x2c
    cd8c:	ldr	r8, [sp, #48]	; 0x30
    cd90:	ldr	r9, [sp, #52]	; 0x34
    cd94:	ldr	lr, [sp, #24]
    cd98:	add	sp, sp, #64	; 0x40
    cd9c:	bx	lr
    cda0:	.word	0x000002bc
    cda4:	.word	0x0000027c
    cda8:	.word	0x0000029c
	...
    cdb4:	.word	0x0000028c
    cdb8:	.word	0x000002ac

0000cdbc <monster_test_local_MyGame_Example_json_parser_enum>:
    cdbc:	mov	ip, sp
    cdc0:	sub	sp, sp, #56	; 0x38
    cdc4:	str	ip, [sp, #8]
    cdc8:	str	lr, [sp, #12]
    cdcc:	str	r4, [sp, #24]
    cdd0:	str	r5, [sp, #28]
    cdd4:	str	r6, [sp, #32]
    cdd8:	str	r7, [sp, #36]	; 0x24
    cddc:	str	r8, [sp, #40]	; 0x28
    cde0:	str	r9, [sp, #44]	; 0x2c
    cde4:	str	sl, [sp, #48]	; 0x30
    cde8:	str	fp, [sp, #52]	; 0x34
    cdec:	ldr	ip, [ip, #4]
    cdf0:	str	ip, [sp, #20]
    cdf4:	ldr	ip, [sp, #8]
    cdf8:	ldr	r7, [ip]
    cdfc:	str	r3, [sp, #16]
    ce00:	mov	r6, r2
    ce04:	mov	r9, r1
    ce08:	mov	r5, r0
    ce0c:	mov	r8, r9
    ce10:	mov	r1, r6
    ce14:	mov	r0, r9
    ce18:	bl	cc0 <flatcc_json_parser_symbol_part>
    ce1c:	mov	sl, r1
    ce20:	mov	fp, r0
    ce24:	mov	r2, sl
    ce28:	movw	ip, #30815	; 0x785f
    ce2c:	movt	ip, #26725	; 0x6865
    ce30:	cmp	r2, ip
    ce34:	bne	ce50 <monster_test_local_MyGame_Example_json_parser_enum+0x94>
    ce38:	mov	r2, fp
    ce3c:	movw	r3, #30061	; 0x756d
    ce40:	movt	r3, #25966	; 0x656e
    ce44:	cmp	r2, r3
    ce48:	bcc	d10c <monster_test_local_MyGame_Example_json_parser_enum+0x350>
    ce4c:	b	ce64 <monster_test_local_MyGame_Example_json_parser_enum+0xa8>
    ce50:	mov	ip, sl
    ce54:	movw	r0, #30815	; 0x785f
    ce58:	movt	r0, #26725	; 0x6865
    ce5c:	cmp	ip, r0
    ce60:	bcc	d10c <monster_test_local_MyGame_Example_json_parser_enum+0x350>
    ce64:	mov	r2, sl
    ce68:	movw	r1, #29791	; 0x745f
    ce6c:	movt	r1, #26990	; 0x696e
    ce70:	cmp	r2, r1
    ce74:	bne	ce90 <monster_test_local_MyGame_Example_json_parser_enum+0xd4>
    ce78:	mov	r2, fp
    ce7c:	movw	r3, #30061	; 0x756d
    ce80:	movt	r3, #25966	; 0x656e
    ce84:	cmp	r2, r3
    ce88:	bcc	d090 <monster_test_local_MyGame_Example_json_parser_enum+0x2d4>
    ce8c:	b	cea4 <monster_test_local_MyGame_Example_json_parser_enum+0xe8>
    ce90:	mov	r1, sl
    ce94:	movw	ip, #29791	; 0x745f
    ce98:	movt	ip, #26990	; 0x696e
    ce9c:	cmp	r1, ip
    cea0:	bcc	d090 <monster_test_local_MyGame_Example_json_parser_enum+0x2d4>
    cea4:	mov	r0, fp
    cea8:	mov	ip, sl
    ceac:	movw	r1, #26463	; 0x675f
    ceb0:	movt	r1, #28261	; 0x6e65
    ceb4:	cmp	ip, r1
    ceb8:	bne	ced0 <monster_test_local_MyGame_Example_json_parser_enum+0x114>
    cebc:	movw	r3, #30061	; 0x756d
    cec0:	movt	r3, #25966	; 0x656e
    cec4:	cmp	r0, r3
    cec8:	bcc	d014 <monster_test_local_MyGame_Example_json_parser_enum+0x258>
    cecc:	b	cee4 <monster_test_local_MyGame_Example_json_parser_enum+0x128>
    ced0:	mov	ip, sl
    ced4:	movw	r1, #26463	; 0x675f
    ced8:	movt	r1, #28261	; 0x6e65
    cedc:	cmp	ip, r1
    cee0:	bcc	d014 <monster_test_local_MyGame_Example_json_parser_enum+0x258>
    cee4:	mov	r2, sl
    cee8:	eor	r3, r2, #95	; 0x5f
    ceec:	eor	r3, r3, #26368	; 0x6700
    cef0:	eor	r3, r3, #6619136	; 0x650000
    cef4:	eor	r3, r3, #1845493760	; 0x6e000000
    cef8:	mov	ip, fp
    cefc:	eor	r2, ip, #109	; 0x6d
    cf00:	eor	r2, r2, #29952	; 0x7500
    cf04:	eor	r2, r2, #7208960	; 0x6e0000
    cf08:	eor	r2, r2, #1694498816	; 0x65000000
    cf0c:	orr	r0, r3, r2
    cf10:	cmp	r0, #0
    cf14:	bne	cf60 <monster_test_local_MyGame_Example_json_parser_enum+0x1a4>
    cf18:	mov	r4, r9
    cf1c:	mov	r3, #8
    cf20:	mov	r2, r6
    cf24:	mov	r1, r4
    cf28:	mov	r0, r5
    cf2c:	bl	ce0 <flatcc_json_parser_match_scope>
    cf30:	mov	r9, r0
    cf34:	cmp	r9, r4
    cf38:	beq	cf60 <monster_test_local_MyGame_Example_json_parser_enum+0x1a4>
    cf3c:	ldr	ip, [sp, #20]
    cf40:	str	ip, [sp, #4]
    cf44:	str	r7, [sp]
    cf48:	ldr	r3, [sp, #16]
    cf4c:	mov	r2, r6
    cf50:	mov	r1, r9
    cf54:	mov	r0, r5
    cf58:	bl	3b14 <MyGame_Example_neg_enum_parse_json_enum>
    cf5c:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    cf60:	eor	r1, sl, #101	; 0x65
    cf64:	eor	r1, r1, #226304	; 0x37400
    cf68:	eor	r1, r1, #40632320	; 0x26c0000
    cf6c:	eor	r1, r1, #1811939328	; 0x6c000000
    cf70:	eor	r0, fp, #121	; 0x79
    cf74:	eor	r0, r0, #29696	; 0x7400
    cf78:	eor	r0, r0, #225443840	; 0xd700000
    cf7c:	eor	r0, r0, #1610612736	; 0x60000000
    cf80:	orr	r1, r1, r0
    cf84:	cmp	r1, #0
    cf88:	bne	d00c <monster_test_local_MyGame_Example_json_parser_enum+0x250>
    cf8c:	add	r4, r9, #8
    cf90:	mov	r1, r6
    cf94:	mov	r0, r4
    cf98:	bl	cc0 <flatcc_json_parser_symbol_part>
    cf9c:	mov	r2, #0
    cfa0:	eor	r3, r1, #109	; 0x6d
    cfa4:	eor	r3, r3, #29952	; 0x7500
    cfa8:	eor	r3, r3, #7208960	; 0x6e0000
    cfac:	eor	r3, r3, #1694498816	; 0x65000000
    cfb0:	orr	r1, r3, r2
    cfb4:	cmp	r1, #0
    cfb8:	bne	d004 <monster_test_local_MyGame_Example_json_parser_enum+0x248>
    cfbc:	mov	r3, #4
    cfc0:	mov	r2, r6
    cfc4:	mov	r1, r4
    cfc8:	mov	r0, r5
    cfcc:	bl	ce0 <flatcc_json_parser_match_scope>
    cfd0:	mov	r1, r0
    cfd4:	cmp	r1, r4
    cfd8:	beq	cffc <monster_test_local_MyGame_Example_json_parser_enum+0x240>
    cfdc:	ldr	ip, [sp, #20]
    cfe0:	str	ip, [sp, #4]
    cfe4:	str	r7, [sp]
    cfe8:	ldr	r3, [sp, #16]
    cfec:	mov	r2, r6
    cff0:	mov	r0, r5
    cff4:	bl	4bc0 <MyGame_Example_notemptyenum_parse_json_enum>
    cff8:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    cffc:	mov	r0, r8
    d000:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d004:	mov	r0, r8
    d008:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d00c:	mov	r0, r8
    d010:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d014:	eor	r1, sl, #95	; 0x5f
    d018:	eor	r1, r1, #160768	; 0x27400
    d01c:	eor	r1, r1, #23855104	; 0x16c0000
    d020:	eor	r1, r1, #1744830464	; 0x68000000
    d024:	eor	r0, fp, #109	; 0x6d
    d028:	eor	r0, r0, #29952	; 0x7500
    d02c:	eor	r0, r0, #7208960	; 0x6e0000
    d030:	eor	r0, r0, #1694498816	; 0x65000000
    d034:	orr	r1, r1, r0
    d038:	cmp	r1, #0
    d03c:	bne	d088 <monster_test_local_MyGame_Example_json_parser_enum+0x2cc>
    d040:	mov	r3, #8
    d044:	mov	r2, r6
    d048:	mov	r1, r9
    d04c:	mov	r0, r5
    d050:	bl	ce0 <flatcc_json_parser_match_scope>
    d054:	mov	r1, r0
    d058:	cmp	r1, r9
    d05c:	beq	d080 <monster_test_local_MyGame_Example_json_parser_enum+0x2c4>
    d060:	ldr	ip, [sp, #20]
    d064:	str	ip, [sp, #4]
    d068:	str	r7, [sp]
    d06c:	ldr	r3, [sp, #16]
    d070:	mov	r2, r6
    d074:	mov	r0, r5
    d078:	bl	3d08 <MyGame_Example_int_enum_parse_json_enum>
    d07c:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d080:	mov	r0, r8
    d084:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d088:	mov	r0, r8
    d08c:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d090:	eor	r3, sl, #95	; 0x5f
    d094:	eor	r3, r3, #96256	; 0x17800
    d098:	eor	r3, r3, #6553600	; 0x640000
    d09c:	eor	r3, r3, #1744830464	; 0x68000000
    d0a0:	eor	r2, fp, #109	; 0x6d
    d0a4:	eor	r2, r2, #29952	; 0x7500
    d0a8:	eor	r2, r2, #7208960	; 0x6e0000
    d0ac:	eor	r2, r2, #1694498816	; 0x65000000
    d0b0:	orr	r2, r3, r2
    d0b4:	cmp	r2, #0
    d0b8:	bne	d104 <monster_test_local_MyGame_Example_json_parser_enum+0x348>
    d0bc:	mov	r3, #8
    d0c0:	mov	r2, r6
    d0c4:	mov	r1, r9
    d0c8:	mov	r0, r5
    d0cc:	bl	ce0 <flatcc_json_parser_match_scope>
    d0d0:	mov	r1, r0
    d0d4:	cmp	r1, r9
    d0d8:	beq	d0fc <monster_test_local_MyGame_Example_json_parser_enum+0x340>
    d0dc:	ldr	ip, [sp, #20]
    d0e0:	str	ip, [sp, #4]
    d0e4:	str	r7, [sp]
    d0e8:	ldr	r3, [sp, #16]
    d0ec:	mov	r2, r6
    d0f0:	mov	r0, r5
    d0f4:	bl	3fd0 <MyGame_Example_hex_enum_parse_json_enum>
    d0f8:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d0fc:	mov	r0, r8
    d100:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d104:	mov	r0, r8
    d108:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d10c:	mov	r3, fp
    d110:	mov	r0, sl
    d114:	movw	r1, #27759	; 0x6c6f
    d118:	movt	r1, #17263	; 0x436f
    d11c:	cmp	r0, r1
    d120:	bne	d134 <monster_test_local_MyGame_Example_json_parser_enum+0x378>
    d124:	mov	ip, #1912602624	; 0x72000000
    d128:	cmp	r3, ip
    d12c:	bcc	d22c <monster_test_local_MyGame_Example_json_parser_enum+0x470>
    d130:	b	d148 <monster_test_local_MyGame_Example_json_parser_enum+0x38c>
    d134:	mov	r2, sl
    d138:	movw	r3, #27759	; 0x6c6f
    d13c:	movt	r3, #17263	; 0x436f
    d140:	cmp	r2, r3
    d144:	bcc	d22c <monster_test_local_MyGame_Example_json_parser_enum+0x470>
    d148:	mov	r0, sl
    d14c:	bic	ip, r0, #255	; 0xff
    d150:	mov	r1, #0
    d154:	eor	r0, ip, #28416	; 0x6f00
    d158:	eor	r0, r0, #7274496	; 0x6f0000
    d15c:	eor	r0, r0, #1174405120	; 0x46000000
    d160:	orr	r3, r0, r1
    d164:	cmp	r3, #0
    d168:	beq	d1e0 <monster_test_local_MyGame_Example_json_parser_enum+0x424>
    d16c:	and	r2, fp, #-16777216	; 0xff000000
    d170:	eor	r1, sl, #111	; 0x6f
    d174:	eor	r1, r1, #224256	; 0x36c00
    d178:	eor	r1, r1, #57409536	; 0x36c0000
    d17c:	eor	r1, r1, #1073741824	; 0x40000000
    d180:	eor	ip, r2, #1912602624	; 0x72000000
    d184:	orr	r1, r1, ip
    d188:	cmp	r1, #0
    d18c:	bne	d1d8 <monster_test_local_MyGame_Example_json_parser_enum+0x41c>
    d190:	mov	r3, #5
    d194:	mov	r2, r6
    d198:	mov	r1, r9
    d19c:	mov	r0, r5
    d1a0:	bl	ce0 <flatcc_json_parser_match_scope>
    d1a4:	mov	r1, r0
    d1a8:	cmp	r1, r9
    d1ac:	beq	d1d0 <monster_test_local_MyGame_Example_json_parser_enum+0x414>
    d1b0:	ldr	ip, [sp, #20]
    d1b4:	str	ip, [sp, #4]
    d1b8:	str	r7, [sp]
    d1bc:	ldr	r3, [sp, #16]
    d1c0:	mov	r2, r6
    d1c4:	mov	r0, r5
    d1c8:	bl	41d8 <MyGame_Example_Color_parse_json_enum>
    d1cc:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d1d0:	mov	r0, r8
    d1d4:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d1d8:	mov	r0, r8
    d1dc:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d1e0:	mov	r1, r9
    d1e4:	mov	r4, r1
    d1e8:	mov	r3, #3
    d1ec:	mov	r2, r6
    d1f0:	mov	r0, r5
    d1f4:	bl	ce0 <flatcc_json_parser_match_scope>
    d1f8:	cmp	r0, r4
    d1fc:	beq	d224 <monster_test_local_MyGame_Example_json_parser_enum+0x468>
    d200:	ldr	ip, [sp, #20]
    d204:	str	ip, [sp, #4]
    d208:	str	r7, [sp]
    d20c:	ldr	r3, [sp, #16]
    d210:	mov	r2, r6
    d214:	mov	r1, r0
    d218:	mov	r0, r5
    d21c:	bl	3948 <MyGame_Example_Foo_parse_json_enum>
    d220:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d224:	mov	r0, r8
    d228:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d22c:	bic	r3, sl, #255	; 0xff
    d230:	mov	r0, #0
    d234:	eor	ip, r3, #30976	; 0x7900
    d238:	eor	ip, ip, #7208960	; 0x6e0000
    d23c:	eor	ip, ip, #1090519040	; 0x41000000
    d240:	orr	ip, ip, r0
    d244:	cmp	ip, #0
    d248:	bne	d294 <monster_test_local_MyGame_Example_json_parser_enum+0x4d8>
    d24c:	mov	r3, #3
    d250:	mov	r2, r6
    d254:	mov	r1, r9
    d258:	mov	r0, r5
    d25c:	bl	ce0 <flatcc_json_parser_match_scope>
    d260:	mov	r1, r0
    d264:	cmp	r1, r9
    d268:	beq	d28c <monster_test_local_MyGame_Example_json_parser_enum+0x4d0>
    d26c:	ldr	ip, [sp, #20]
    d270:	str	ip, [sp, #4]
    d274:	str	r7, [sp]
    d278:	ldr	r3, [sp, #16]
    d27c:	mov	r2, r6
    d280:	mov	r0, r5
    d284:	bl	4570 <MyGame_Example_Any_parse_json_enum>
    d288:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d28c:	mov	r0, r8
    d290:	b	d298 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    d294:	mov	r0, r8
    d298:	ldr	r4, [sp, #24]
    d29c:	ldr	r5, [sp, #28]
    d2a0:	ldr	r6, [sp, #32]
    d2a4:	ldr	r7, [sp, #36]	; 0x24
    d2a8:	ldr	r8, [sp, #40]	; 0x28
    d2ac:	ldr	r9, [sp, #44]	; 0x2c
    d2b0:	ldr	sl, [sp, #48]	; 0x30
    d2b4:	ldr	fp, [sp, #52]	; 0x34
    d2b8:	ldr	lr, [sp, #12]
    d2bc:	add	sp, sp, #56	; 0x38
    d2c0:	bx	lr

0000d2c4 <monster_test_local_Fantasy_json_parser_enum>:
    d2c4:	mov	ip, sp
    d2c8:	sub	sp, sp, #48	; 0x30
    d2cc:	str	ip, [sp, #8]
    d2d0:	str	lr, [sp, #12]
    d2d4:	str	r4, [sp, #16]
    d2d8:	str	r5, [sp, #20]
    d2dc:	str	r6, [sp, #24]
    d2e0:	str	r7, [sp, #28]
    d2e4:	str	r8, [sp, #32]
    d2e8:	str	r9, [sp, #36]	; 0x24
    d2ec:	str	sl, [sp, #40]	; 0x28
    d2f0:	ldr	r5, [ip, #4]
    d2f4:	ldr	r9, [ip]
    d2f8:	mov	r6, r3
    d2fc:	mov	r7, r2
    d300:	mov	r4, r1
    d304:	mov	r8, r0
    d308:	mov	r1, r7
    d30c:	mov	r0, r4
    d310:	bl	cc0 <flatcc_json_parser_symbol_part>
    d314:	eor	r2, r1, #114	; 0x72
    d318:	eor	r2, r2, #24832	; 0x6100
    d31c:	eor	r2, r2, #57147392	; 0x3680000
    d320:	eor	r2, r2, #1073741824	; 0x40000000
    d324:	eor	r0, r0, #101	; 0x65
    d328:	eor	r0, r0, #226304	; 0x37400
    d32c:	eor	r0, r0, #23068672	; 0x1600000
    d330:	eor	r0, r0, #1610612736	; 0x60000000
    d334:	orr	r1, r2, r0
    d338:	cmp	r1, #0
    d33c:	bne	d3a4 <monster_test_local_Fantasy_json_parser_enum+0xe0>
    d340:	add	sl, r4, #8
    d344:	mov	r1, r7
    d348:	mov	r0, sl
    d34c:	bl	cc0 <flatcc_json_parser_symbol_part>
    d350:	and	r0, r1, #-16777216	; 0xff000000
    d354:	mov	r1, #0
    d358:	eor	r3, r0, #1912602624	; 0x72000000
    d35c:	orr	r0, r3, r1
    d360:	cmp	r0, #0
    d364:	bne	d3a4 <monster_test_local_Fantasy_json_parser_enum+0xe0>
    d368:	mov	r3, #1
    d36c:	mov	r2, r7
    d370:	mov	r1, sl
    d374:	mov	r0, r8
    d378:	bl	ce0 <flatcc_json_parser_match_scope>
    d37c:	mov	r1, r0
    d380:	cmp	r1, sl
    d384:	beq	d3a4 <monster_test_local_Fantasy_json_parser_enum+0xe0>
    d388:	str	r5, [sp, #4]
    d38c:	str	r9, [sp]
    d390:	mov	r3, r6
    d394:	mov	r2, r7
    d398:	mov	r0, r8
    d39c:	bl	bf34 <Fantasy_Character_parse_json_enum>
    d3a0:	mov	r4, r0
    d3a4:	mov	r0, r4
    d3a8:	ldr	r4, [sp, #16]
    d3ac:	ldr	r5, [sp, #20]
    d3b0:	ldr	r6, [sp, #24]
    d3b4:	ldr	r7, [sp, #28]
    d3b8:	ldr	r8, [sp, #32]
    d3bc:	ldr	r9, [sp, #36]	; 0x24
    d3c0:	ldr	sl, [sp, #40]	; 0x28
    d3c4:	ldr	lr, [sp, #12]
    d3c8:	add	sp, sp, #48	; 0x30
    d3cc:	bx	lr

0000d3d0 <monster_test_global_json_parser_enum>:
    d3d0:	mov	ip, sp
    d3d4:	sub	sp, sp, #56	; 0x38
    d3d8:	str	ip, [sp, #8]
    d3dc:	str	lr, [sp, #12]
    d3e0:	str	r4, [sp, #24]
    d3e4:	str	r5, [sp, #28]
    d3e8:	str	r6, [sp, #32]
    d3ec:	str	r7, [sp, #36]	; 0x24
    d3f0:	str	r8, [sp, #40]	; 0x28
    d3f4:	str	r9, [sp, #44]	; 0x2c
    d3f8:	str	sl, [sp, #48]	; 0x30
    d3fc:	str	fp, [sp, #52]	; 0x34
    d400:	ldr	ip, [ip, #4]
    d404:	str	ip, [sp, #16]
    d408:	ldr	ip, [sp, #8]
    d40c:	ldr	ip, [ip]
    d410:	str	ip, [sp, #20]
    d414:	mov	r7, r3
    d418:	mov	r6, r2
    d41c:	mov	r4, r1
    d420:	mov	r5, r0
    d424:	mov	sl, r4
    d428:	mov	r1, r6
    d42c:	mov	r0, r4
    d430:	bl	cc0 <flatcc_json_parser_symbol_part>
    d434:	mov	r2, r1
    d438:	movw	r3, #18273	; 0x4761
    d43c:	movt	r3, #19833	; 0x4d79
    d440:	cmp	r2, r3
    d444:	bne	d460 <monster_test_global_json_parser_enum+0x90>
    d448:	mov	r2, r0
    d44c:	movw	r3, #11845	; 0x2e45
    d450:	movt	r3, #28005	; 0x6d65
    d454:	cmp	r2, r3
    d458:	bcc	dc60 <monster_test_global_json_parser_enum+0x890>
    d45c:	b	d474 <monster_test_global_json_parser_enum+0xa4>
    d460:	mov	r3, r1
    d464:	movw	r2, #18273	; 0x4761
    d468:	movt	r2, #19833	; 0x4d79
    d46c:	cmp	r3, r2
    d470:	bcc	dc60 <monster_test_global_json_parser_enum+0x890>
    d474:	mov	r3, r1
    d478:	eor	r3, r3, #97	; 0x61
    d47c:	eor	r3, r3, #18176	; 0x4700
    d480:	eor	r3, r3, #7929856	; 0x790000
    d484:	eor	r3, r3, #1291845632	; 0x4d000000
    d488:	mov	ip, r0
    d48c:	eor	r2, ip, #69	; 0x45
    d490:	eor	r2, r2, #11776	; 0x2e00
    d494:	eor	r2, r2, #6619136	; 0x650000
    d498:	eor	r2, r2, #1828716544	; 0x6d000000
    d49c:	orr	r3, r3, r2
    d4a0:	cmp	r3, #0
    d4a4:	bne	dae4 <monster_test_global_json_parser_enum+0x714>
    d4a8:	add	r4, r4, #8
    d4ac:	mov	r1, r6
    d4b0:	mov	r0, r4
    d4b4:	bl	cc0 <flatcc_json_parser_symbol_part>
    d4b8:	mov	r3, r1
    d4bc:	mov	r2, r0
    d4c0:	movw	ip, #28016	; 0x6d70
    d4c4:	movt	ip, #30817	; 0x7861
    d4c8:	cmp	r3, ip
    d4cc:	bne	d4e4 <monster_test_global_json_parser_enum+0x114>
    d4d0:	movw	r3, #11880	; 0x2e68
    d4d4:	movt	r3, #27749	; 0x6c65
    d4d8:	cmp	r2, r3
    d4dc:	bcc	d87c <monster_test_global_json_parser_enum+0x4ac>
    d4e0:	b	d4f4 <monster_test_global_json_parser_enum+0x124>
    d4e4:	movw	ip, #28016	; 0x6d70
    d4e8:	movt	ip, #30817	; 0x7861
    d4ec:	cmp	r3, ip
    d4f0:	bcc	d87c <monster_test_global_json_parser_enum+0x4ac>
    d4f4:	mov	r2, r1
    d4f8:	movw	r3, #28016	; 0x6d70
    d4fc:	movt	r3, #30817	; 0x7861
    d500:	cmp	r2, r3
    d504:	bne	d520 <monster_test_global_json_parser_enum+0x150>
    d508:	mov	ip, r0
    d50c:	movw	r2, #11881	; 0x2e69
    d510:	movt	r2, #27749	; 0x6c65
    d514:	cmp	ip, r2
    d518:	bcc	d7b4 <monster_test_global_json_parser_enum+0x3e4>
    d51c:	b	d530 <monster_test_global_json_parser_enum+0x160>
    d520:	movw	r3, #28016	; 0x6d70
    d524:	movt	r3, #30817	; 0x7861
    d528:	cmp	r2, r3
    d52c:	bcc	d7b4 <monster_test_global_json_parser_enum+0x3e4>
    d530:	mov	r2, r1
    d534:	movw	r3, #28016	; 0x6d70
    d538:	movt	r3, #30817	; 0x7861
    d53c:	cmp	r2, r3
    d540:	bne	d55c <monster_test_global_json_parser_enum+0x18c>
    d544:	mov	r2, r0
    d548:	movw	r3, #11886	; 0x2e6e
    d54c:	movt	r3, #27749	; 0x6c65
    d550:	cmp	r2, r3
    d554:	bcc	d6f0 <monster_test_global_json_parser_enum+0x320>
    d558:	b	d56c <monster_test_global_json_parser_enum+0x19c>
    d55c:	movw	r3, #28016	; 0x6d70
    d560:	movt	r3, #30817	; 0x7861
    d564:	cmp	r2, r3
    d568:	bcc	d6f0 <monster_test_global_json_parser_enum+0x320>
    d56c:	eor	r1, r1, #3440	; 0xd70
    d570:	eor	r1, r1, #90112	; 0x16000
    d574:	eor	r1, r1, #140509184	; 0x8600000
    d578:	eor	r1, r1, #1879048192	; 0x70000000
    d57c:	eor	ip, r0, #110	; 0x6e
    d580:	eor	ip, ip, #11776	; 0x2e00
    d584:	eor	ip, ip, #6619136	; 0x650000
    d588:	eor	ip, ip, #1811939328	; 0x6c000000
    d58c:	orr	r3, r1, ip
    d590:	cmp	r3, #0
    d594:	bne	d6e8 <monster_test_global_json_parser_enum+0x318>
    d598:	add	fp, r4, #8
    d59c:	mov	r1, r6
    d5a0:	mov	r0, fp
    d5a4:	bl	cc0 <flatcc_json_parser_symbol_part>
    d5a8:	mov	r8, r1
    d5ac:	mov	r9, r0
    d5b0:	mov	r2, r9
    d5b4:	mov	r1, r8
    d5b8:	bic	r3, r2, #255	; 0xff
    d5bc:	eor	r0, r1, #101	; 0x65
    d5c0:	eor	r0, r0, #24320	; 0x5f00
    d5c4:	eor	r0, r0, #6750208	; 0x670000
    d5c8:	eor	r0, r0, #1694498816	; 0x65000000
    d5cc:	eor	ip, r3, #27904	; 0x6d00
    d5d0:	eor	ip, ip, #7667712	; 0x750000
    d5d4:	eor	ip, ip, #1845493760	; 0x6e000000
    d5d8:	orr	r1, r0, ip
    d5dc:	cmp	r1, #0
    d5e0:	bne	d630 <monster_test_global_json_parser_enum+0x260>
    d5e4:	mov	r4, fp
    d5e8:	mov	r3, #7
    d5ec:	mov	r2, r6
    d5f0:	mov	r1, r4
    d5f4:	mov	r0, r5
    d5f8:	bl	ce0 <flatcc_json_parser_match_scope>
    d5fc:	mov	fp, r0
    d600:	cmp	fp, r4
    d604:	beq	d630 <monster_test_global_json_parser_enum+0x260>
    d608:	ldr	ip, [sp, #16]
    d60c:	str	ip, [sp, #4]
    d610:	ldr	ip, [sp, #20]
    d614:	str	ip, [sp]
    d618:	mov	r3, r7
    d61c:	mov	r2, r6
    d620:	mov	r1, fp
    d624:	mov	r0, r5
    d628:	bl	3b14 <MyGame_Example_neg_enum_parse_json_enum>
    d62c:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d630:	eor	r2, r8, #109	; 0x6d
    d634:	eor	r2, r2, #25856	; 0x6500
    d638:	eor	r2, r2, #57933824	; 0x3740000
    d63c:	eor	r2, r2, #1811939328	; 0x6c000000
    d640:	eor	r1, r9, #101	; 0x65
    d644:	eor	r1, r1, #30976	; 0x7900
    d648:	eor	r1, r1, #7602176	; 0x740000
    d64c:	eor	r1, r1, #1879048192	; 0x70000000
    d650:	orr	r2, r2, r1
    d654:	cmp	r2, #0
    d658:	bne	d6e0 <monster_test_global_json_parser_enum+0x310>
    d65c:	add	r4, fp, #8
    d660:	mov	r1, r6
    d664:	mov	r0, r4
    d668:	bl	cc0 <flatcc_json_parser_symbol_part>
    d66c:	bic	r2, r1, #255	; 0xff
    d670:	mov	r3, #0
    d674:	eor	ip, r2, #27904	; 0x6d00
    d678:	eor	ip, ip, #7667712	; 0x750000
    d67c:	eor	ip, ip, #1845493760	; 0x6e000000
    d680:	orr	ip, ip, r3
    d684:	cmp	ip, #0
    d688:	bne	d6d8 <monster_test_global_json_parser_enum+0x308>
    d68c:	mov	r3, #3
    d690:	mov	r2, r6
    d694:	mov	r1, r4
    d698:	mov	r0, r5
    d69c:	bl	ce0 <flatcc_json_parser_match_scope>
    d6a0:	mov	r1, r0
    d6a4:	cmp	r1, r4
    d6a8:	beq	d6d0 <monster_test_global_json_parser_enum+0x300>
    d6ac:	ldr	ip, [sp, #16]
    d6b0:	str	ip, [sp, #4]
    d6b4:	ldr	ip, [sp, #20]
    d6b8:	str	ip, [sp]
    d6bc:	mov	r3, r7
    d6c0:	mov	r2, r6
    d6c4:	mov	r0, r5
    d6c8:	bl	4bc0 <MyGame_Example_notemptyenum_parse_json_enum>
    d6cc:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d6d0:	mov	r0, sl
    d6d4:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d6d8:	mov	r0, sl
    d6dc:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d6e0:	mov	r0, sl
    d6e4:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d6e8:	mov	r0, sl
    d6ec:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d6f0:	eor	r3, r1, #3440	; 0xd70
    d6f4:	eor	r3, r3, #90112	; 0x16000
    d6f8:	eor	r3, r3, #140509184	; 0x8600000
    d6fc:	eor	r3, r3, #1879048192	; 0x70000000
    d700:	eor	r2, r0, #105	; 0x69
    d704:	eor	r2, r2, #11776	; 0x2e00
    d708:	eor	r2, r2, #6619136	; 0x650000
    d70c:	eor	r2, r2, #1811939328	; 0x6c000000
    d710:	orr	ip, r3, r2
    d714:	cmp	ip, #0
    d718:	bne	d7ac <monster_test_global_json_parser_enum+0x3dc>
    d71c:	add	r4, r4, #8
    d720:	mov	r1, r6
    d724:	mov	r0, r4
    d728:	bl	cc0 <flatcc_json_parser_symbol_part>
    d72c:	bic	r0, r0, #255	; 0xff
    d730:	eor	ip, r1, #101	; 0x65
    d734:	eor	ip, ip, #24320	; 0x5f00
    d738:	eor	ip, ip, #41156608	; 0x2740000
    d73c:	eor	ip, ip, #1811939328	; 0x6c000000
    d740:	eor	r0, r0, #27904	; 0x6d00
    d744:	eor	r0, r0, #7667712	; 0x750000
    d748:	eor	r0, r0, #1845493760	; 0x6e000000
    d74c:	orr	ip, ip, r0
    d750:	cmp	ip, #0
    d754:	bne	d7a4 <monster_test_global_json_parser_enum+0x3d4>
    d758:	mov	r3, #7
    d75c:	mov	r2, r6
    d760:	mov	r1, r4
    d764:	mov	r0, r5
    d768:	bl	ce0 <flatcc_json_parser_match_scope>
    d76c:	mov	r1, r0
    d770:	cmp	r1, r4
    d774:	beq	d79c <monster_test_global_json_parser_enum+0x3cc>
    d778:	ldr	ip, [sp, #16]
    d77c:	str	ip, [sp, #4]
    d780:	ldr	ip, [sp, #20]
    d784:	str	ip, [sp]
    d788:	mov	r3, r7
    d78c:	mov	r2, r6
    d790:	mov	r0, r5
    d794:	bl	3d08 <MyGame_Example_int_enum_parse_json_enum>
    d798:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d79c:	mov	r0, sl
    d7a0:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d7a4:	mov	r0, sl
    d7a8:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d7ac:	mov	r0, sl
    d7b0:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d7b4:	eor	r1, r1, #3440	; 0xd70
    d7b8:	eor	r1, r1, #90112	; 0x16000
    d7bc:	eor	r1, r1, #140509184	; 0x8600000
    d7c0:	eor	r1, r1, #1879048192	; 0x70000000
    d7c4:	eor	ip, r0, #616	; 0x268
    d7c8:	eor	ip, ip, #76800	; 0x12c00
    d7cc:	eor	ip, ip, #6553600	; 0x640000
    d7d0:	eor	ip, ip, #1811939328	; 0x6c000000
    d7d4:	orr	r3, r1, ip
    d7d8:	cmp	r3, #0
    d7dc:	bne	d874 <monster_test_global_json_parser_enum+0x4a4>
    d7e0:	add	r4, r4, #8
    d7e4:	mov	r1, r6
    d7e8:	mov	r0, r4
    d7ec:	bl	cc0 <flatcc_json_parser_symbol_part>
    d7f0:	bic	r0, r0, #255	; 0xff
    d7f4:	eor	r1, r1, #101	; 0x65
    d7f8:	eor	r1, r1, #24320	; 0x5f00
    d7fc:	eor	r1, r1, #24641536	; 0x1780000
    d800:	eor	r1, r1, #1677721600	; 0x64000000
    d804:	eor	r2, r0, #27904	; 0x6d00
    d808:	eor	r2, r2, #7667712	; 0x750000
    d80c:	eor	r2, r2, #1845493760	; 0x6e000000
    d810:	orr	r3, r1, r2
    d814:	cmp	r3, #0
    d818:	bne	d86c <monster_test_global_json_parser_enum+0x49c>
    d81c:	mov	r1, r4
    d820:	mov	r4, r1
    d824:	mov	r3, #7
    d828:	mov	r2, r6
    d82c:	mov	r0, r5
    d830:	bl	ce0 <flatcc_json_parser_match_scope>
    d834:	cmp	r0, r4
    d838:	beq	d864 <monster_test_global_json_parser_enum+0x494>
    d83c:	ldr	ip, [sp, #16]
    d840:	str	ip, [sp, #4]
    d844:	ldr	ip, [sp, #20]
    d848:	str	ip, [sp]
    d84c:	mov	r3, r7
    d850:	mov	r2, r6
    d854:	mov	r1, r0
    d858:	mov	r0, r5
    d85c:	bl	3fd0 <MyGame_Example_hex_enum_parse_json_enum>
    d860:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d864:	mov	r0, sl
    d868:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d86c:	mov	r0, sl
    d870:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d874:	mov	r0, sl
    d878:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d87c:	mov	r2, r0
    d880:	mov	ip, r1
    d884:	movw	r3, #28016	; 0x6d70
    d888:	movt	r3, #30817	; 0x7861
    d88c:	cmp	ip, r3
    d890:	bne	d8a8 <monster_test_global_json_parser_enum+0x4d8>
    d894:	movw	r3, #11843	; 0x2e43
    d898:	movt	r3, #27749	; 0x6c65
    d89c:	cmp	r2, r3
    d8a0:	bcc	da2c <monster_test_global_json_parser_enum+0x65c>
    d8a4:	b	d8bc <monster_test_global_json_parser_enum+0x4ec>
    d8a8:	mov	ip, r1
    d8ac:	movw	r2, #28016	; 0x6d70
    d8b0:	movt	r2, #30817	; 0x7861
    d8b4:	cmp	ip, r2
    d8b8:	bcc	da2c <monster_test_global_json_parser_enum+0x65c>
    d8bc:	mov	r3, r1
    d8c0:	eor	r3, r3, #3440	; 0xd70
    d8c4:	eor	r3, r3, #90112	; 0x16000
    d8c8:	eor	r3, r3, #140509184	; 0x8600000
    d8cc:	eor	r3, r3, #1879048192	; 0x70000000
    d8d0:	mov	r2, r0
    d8d4:	eor	r2, r2, #67	; 0x43
    d8d8:	eor	r2, r2, #11776	; 0x2e00
    d8dc:	eor	r2, r2, #6619136	; 0x650000
    d8e0:	eor	r2, r2, #1811939328	; 0x6c000000
    d8e4:	orr	r3, r3, r2
    d8e8:	cmp	r3, #0
    d8ec:	beq	d9a8 <monster_test_global_json_parser_enum+0x5d8>
    d8f0:	eor	r1, r1, #3440	; 0xd70
    d8f4:	eor	r1, r1, #90112	; 0x16000
    d8f8:	eor	r1, r1, #140509184	; 0x8600000
    d8fc:	eor	r1, r1, #1879048192	; 0x70000000
    d900:	eor	ip, r0, #70	; 0x46
    d904:	eor	ip, ip, #11776	; 0x2e00
    d908:	eor	ip, ip, #6619136	; 0x650000
    d90c:	eor	ip, ip, #1811939328	; 0x6c000000
    d910:	orr	ip, r1, ip
    d914:	cmp	ip, #0
    d918:	bne	d9a0 <monster_test_global_json_parser_enum+0x5d0>
    d91c:	add	r4, r4, #8
    d920:	mov	r1, r6
    d924:	mov	r0, r4
    d928:	bl	cc0 <flatcc_json_parser_symbol_part>
    d92c:	bic	r3, r1, #255	; 0xff
    d930:	bic	r3, r3, #65280	; 0xff00
    d934:	mov	r1, #0
    d938:	eor	r3, r3, #7274496	; 0x6f0000
    d93c:	eor	r3, r3, #1862270976	; 0x6f000000
    d940:	orr	r0, r3, r1
    d944:	cmp	r0, #0
    d948:	bne	d998 <monster_test_global_json_parser_enum+0x5c8>
    d94c:	mov	r3, #2
    d950:	mov	r2, r6
    d954:	mov	r1, r4
    d958:	mov	r0, r5
    d95c:	bl	ce0 <flatcc_json_parser_match_scope>
    d960:	mov	r1, r0
    d964:	cmp	r1, r4
    d968:	beq	d990 <monster_test_global_json_parser_enum+0x5c0>
    d96c:	ldr	ip, [sp, #16]
    d970:	str	ip, [sp, #4]
    d974:	ldr	ip, [sp, #20]
    d978:	str	ip, [sp]
    d97c:	mov	r3, r7
    d980:	mov	r2, r6
    d984:	mov	r0, r5
    d988:	bl	3948 <MyGame_Example_Foo_parse_json_enum>
    d98c:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d990:	mov	r0, sl
    d994:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d998:	mov	r0, sl
    d99c:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d9a0:	mov	r0, sl
    d9a4:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    d9a8:	add	r4, r4, #8
    d9ac:	mov	r1, r6
    d9b0:	mov	r0, r4
    d9b4:	bl	cc0 <flatcc_json_parser_symbol_part>
    d9b8:	mov	r0, #0
    d9bc:	eor	r1, r1, #114	; 0x72
    d9c0:	eor	r1, r1, #28416	; 0x6f00
    d9c4:	eor	r1, r1, #57409536	; 0x36c0000
    d9c8:	eor	r1, r1, #1811939328	; 0x6c000000
    d9cc:	orr	r2, r1, r0
    d9d0:	cmp	r2, #0
    d9d4:	bne	da24 <monster_test_global_json_parser_enum+0x654>
    d9d8:	mov	r3, #4
    d9dc:	mov	r2, r6
    d9e0:	mov	r1, r4
    d9e4:	mov	r0, r5
    d9e8:	bl	ce0 <flatcc_json_parser_match_scope>
    d9ec:	mov	r1, r0
    d9f0:	cmp	r1, r4
    d9f4:	beq	da1c <monster_test_global_json_parser_enum+0x64c>
    d9f8:	ldr	ip, [sp, #16]
    d9fc:	str	ip, [sp, #4]
    da00:	ldr	ip, [sp, #20]
    da04:	str	ip, [sp]
    da08:	mov	r3, r7
    da0c:	mov	r2, r6
    da10:	mov	r0, r5
    da14:	bl	41d8 <MyGame_Example_Color_parse_json_enum>
    da18:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    da1c:	mov	r0, sl
    da20:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    da24:	mov	r0, sl
    da28:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    da2c:	eor	r1, r1, #3440	; 0xd70
    da30:	eor	r1, r1, #90112	; 0x16000
    da34:	eor	r1, r1, #140509184	; 0x8600000
    da38:	eor	r1, r1, #1879048192	; 0x70000000
    da3c:	eor	ip, r0, #65	; 0x41
    da40:	eor	ip, ip, #11776	; 0x2e00
    da44:	eor	ip, ip, #6619136	; 0x650000
    da48:	eor	ip, ip, #1811939328	; 0x6c000000
    da4c:	orr	r0, r1, ip
    da50:	cmp	r0, #0
    da54:	bne	dadc <monster_test_global_json_parser_enum+0x70c>
    da58:	add	r4, r4, #8
    da5c:	mov	r1, r6
    da60:	mov	r0, r4
    da64:	bl	cc0 <flatcc_json_parser_symbol_part>
    da68:	bic	ip, r1, #255	; 0xff
    da6c:	bic	ip, ip, #65280	; 0xff00
    da70:	mov	r3, #0
    da74:	eor	ip, ip, #7929856	; 0x790000
    da78:	eor	ip, ip, #1845493760	; 0x6e000000
    da7c:	orr	r0, ip, r3
    da80:	cmp	r0, #0
    da84:	bne	dad4 <monster_test_global_json_parser_enum+0x704>
    da88:	mov	r3, #2
    da8c:	mov	r2, r6
    da90:	mov	r1, r4
    da94:	mov	r0, r5
    da98:	bl	ce0 <flatcc_json_parser_match_scope>
    da9c:	mov	r1, r0
    daa0:	cmp	r1, r4
    daa4:	beq	dacc <monster_test_global_json_parser_enum+0x6fc>
    daa8:	ldr	ip, [sp, #16]
    daac:	str	ip, [sp, #4]
    dab0:	ldr	ip, [sp, #20]
    dab4:	str	ip, [sp]
    dab8:	mov	r3, r7
    dabc:	mov	r2, r6
    dac0:	mov	r0, r5
    dac4:	bl	4570 <MyGame_Example_Any_parse_json_enum>
    dac8:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dacc:	mov	r0, sl
    dad0:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dad4:	mov	r0, sl
    dad8:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dadc:	mov	r0, sl
    dae0:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dae4:	eor	r2, r1, #97	; 0x61
    dae8:	eor	r2, r2, #18176	; 0x4700
    daec:	eor	r2, r2, #7929856	; 0x790000
    daf0:	eor	r2, r2, #1291845632	; 0x4d000000
    daf4:	eor	r0, r0, #79	; 0x4f
    daf8:	eor	r0, r0, #11776	; 0x2e00
    dafc:	eor	r0, r0, #6619136	; 0x650000
    db00:	eor	r0, r0, #1828716544	; 0x6d000000
    db04:	orr	r1, r2, r0
    db08:	cmp	r1, #0
    db0c:	bne	dc58 <monster_test_global_json_parser_enum+0x888>
    db10:	add	r4, r4, #8
    db14:	mov	r1, r6
    db18:	mov	r0, r4
    db1c:	bl	cc0 <flatcc_json_parser_symbol_part>
    db20:	eor	r1, r1, #114	; 0x72
    db24:	eor	r1, r1, #25856	; 0x6500
    db28:	eor	r1, r1, #6815744	; 0x680000
    db2c:	eor	r1, r1, #1946157056	; 0x74000000
    db30:	eor	r2, r0, #101	; 0x65
    db34:	eor	r2, r2, #27904	; 0x6d00
    db38:	eor	r2, r2, #6356992	; 0x610000
    db3c:	eor	r2, r2, #1308622848	; 0x4e000000
    db40:	orr	r0, r1, r2
    db44:	cmp	r0, #0
    db48:	bne	dc50 <monster_test_global_json_parser_enum+0x880>
    db4c:	add	r4, r4, #8
    db50:	mov	r1, r6
    db54:	mov	r0, r4
    db58:	bl	cc0 <flatcc_json_parser_symbol_part>
    db5c:	eor	r1, r1, #99	; 0x63
    db60:	eor	r1, r1, #24832	; 0x6100
    db64:	eor	r1, r1, #57671680	; 0x3700000
    db68:	eor	r1, r1, #1342177280	; 0x50000000
    db6c:	eor	r3, r0, #114	; 0x72
    db70:	eor	r3, r3, #17920	; 0x4600
    db74:	eor	r3, r3, #3014656	; 0x2e0000
    db78:	eor	r3, r3, #1694498816	; 0x65000000
    db7c:	orr	r1, r1, r3
    db80:	cmp	r1, #0
    db84:	bne	dc48 <monster_test_global_json_parser_enum+0x878>
    db88:	add	r4, r4, #8
    db8c:	mov	r1, r6
    db90:	mov	r0, r4
    db94:	bl	cc0 <flatcc_json_parser_symbol_part>
    db98:	eor	r2, r1, #110	; 0x6e
    db9c:	eor	r2, r2, #18688	; 0x4900
    dba0:	eor	r2, r2, #7143424	; 0x6d0000
    dba4:	eor	r2, r2, #1862270976	; 0x6f000000
    dba8:	eor	r1, r0, #356	; 0x164
    dbac:	eor	r1, r1, #29696	; 0x7400
    dbb0:	eor	r1, r1, #57409536	; 0x36c0000
    dbb4:	eor	r1, r1, #1610612736	; 0x60000000
    dbb8:	orr	r1, r2, r1
    dbbc:	cmp	r1, #0
    dbc0:	bne	dc40 <monster_test_global_json_parser_enum+0x870>
    dbc4:	add	r4, r4, #8
    dbc8:	mov	r1, r6
    dbcc:	mov	r0, r4
    dbd0:	bl	cc0 <flatcc_json_parser_symbol_part>
    dbd4:	and	r1, r1, #-16777216	; 0xff000000
    dbd8:	mov	ip, #0
    dbdc:	eor	r0, r1, #1694498816	; 0x65000000
    dbe0:	orr	r2, r0, ip
    dbe4:	cmp	r2, #0
    dbe8:	bne	dc38 <monster_test_global_json_parser_enum+0x868>
    dbec:	mov	r3, #1
    dbf0:	mov	r2, r6
    dbf4:	mov	r1, r4
    dbf8:	mov	r0, r5
    dbfc:	bl	ce0 <flatcc_json_parser_match_scope>
    dc00:	mov	r1, r0
    dc04:	cmp	r1, r4
    dc08:	beq	dc30 <monster_test_global_json_parser_enum+0x860>
    dc0c:	ldr	ip, [sp, #16]
    dc10:	str	ip, [sp, #4]
    dc14:	ldr	ip, [sp, #20]
    dc18:	str	ip, [sp]
    dc1c:	mov	r3, r7
    dc20:	mov	r2, r6
    dc24:	mov	r0, r5
    dc28:	bl	3588 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    dc2c:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dc30:	mov	r0, sl
    dc34:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dc38:	mov	r0, sl
    dc3c:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dc40:	mov	r0, sl
    dc44:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dc48:	mov	r0, sl
    dc4c:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dc50:	mov	r0, sl
    dc54:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dc58:	mov	r0, sl
    dc5c:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dc60:	eor	r3, r1, #628	; 0x274
    dc64:	eor	r3, r3, #93184	; 0x16c00
    dc68:	eor	r3, r3, #106954752	; 0x6600000
    dc6c:	eor	r3, r3, #1073741824	; 0x40000000
    dc70:	eor	r2, r0, #46	; 0x2e
    dc74:	eor	r2, r2, #30976	; 0x7900
    dc78:	eor	r2, r2, #7536640	; 0x730000
    dc7c:	eor	r2, r2, #1627389952	; 0x61000000
    dc80:	orr	ip, r3, r2
    dc84:	cmp	ip, #0
    dc88:	bne	dd50 <monster_test_global_json_parser_enum+0x980>
    dc8c:	add	r4, r4, #8
    dc90:	mov	r1, r6
    dc94:	mov	r0, r4
    dc98:	bl	cc0 <flatcc_json_parser_symbol_part>
    dc9c:	eor	r3, r1, #114	; 0x72
    dca0:	eor	r3, r3, #24832	; 0x6100
    dca4:	eor	r3, r3, #57147392	; 0x3680000
    dca8:	eor	r3, r3, #1073741824	; 0x40000000
    dcac:	eor	ip, r0, #101	; 0x65
    dcb0:	eor	ip, ip, #226304	; 0x37400
    dcb4:	eor	ip, ip, #23068672	; 0x1600000
    dcb8:	eor	ip, ip, #1610612736	; 0x60000000
    dcbc:	orr	r2, r3, ip
    dcc0:	cmp	r2, #0
    dcc4:	bne	dd48 <monster_test_global_json_parser_enum+0x978>
    dcc8:	add	r4, r4, #8
    dccc:	mov	r1, r6
    dcd0:	mov	r0, r4
    dcd4:	bl	cc0 <flatcc_json_parser_symbol_part>
    dcd8:	and	r3, r1, #-16777216	; 0xff000000
    dcdc:	mov	r2, #0
    dce0:	eor	r1, r3, #1912602624	; 0x72000000
    dce4:	orr	r2, r1, r2
    dce8:	cmp	r2, #0
    dcec:	bne	dd40 <monster_test_global_json_parser_enum+0x970>
    dcf0:	mov	r1, r4
    dcf4:	mov	r4, r1
    dcf8:	mov	r3, #1
    dcfc:	mov	r2, r6
    dd00:	mov	r0, r5
    dd04:	bl	ce0 <flatcc_json_parser_match_scope>
    dd08:	cmp	r0, r4
    dd0c:	beq	dd38 <monster_test_global_json_parser_enum+0x968>
    dd10:	ldr	ip, [sp, #16]
    dd14:	str	ip, [sp, #4]
    dd18:	ldr	ip, [sp, #20]
    dd1c:	str	ip, [sp]
    dd20:	mov	r3, r7
    dd24:	mov	r2, r6
    dd28:	mov	r1, r0
    dd2c:	mov	r0, r5
    dd30:	bl	bf34 <Fantasy_Character_parse_json_enum>
    dd34:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dd38:	mov	r0, sl
    dd3c:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dd40:	mov	r0, sl
    dd44:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dd48:	mov	r0, sl
    dd4c:	b	dd54 <monster_test_global_json_parser_enum+0x984>
    dd50:	mov	r0, sl
    dd54:	ldr	r4, [sp, #24]
    dd58:	ldr	r5, [sp, #28]
    dd5c:	ldr	r6, [sp, #32]
    dd60:	ldr	r7, [sp, #36]	; 0x24
    dd64:	ldr	r8, [sp, #40]	; 0x28
    dd68:	ldr	r9, [sp, #44]	; 0x2c
    dd6c:	ldr	sl, [sp, #48]	; 0x30
    dd70:	ldr	fp, [sp, #52]	; 0x34
    dd74:	ldr	lr, [sp, #12]
    dd78:	add	sp, sp, #56	; 0x38
    dd7c:	bx	lr

0000dd80 <monster_test_parse_json>:
    dd80:	mov	ip, sp
    dd84:	sub	sp, sp, #88	; 0x58
    dd88:	str	ip, [sp, #4]
    dd8c:	str	lr, [sp, #8]
    dd90:	str	r4, [sp, #16]
    dd94:	str	r5, [sp, #20]
    dd98:	str	r6, [sp, #24]
    dd9c:	str	r7, [sp, #28]
    dda0:	mov	r5, r1
    dda4:	ldr	r1, [ip]
    dda8:	mov	r6, r3
    ddac:	mov	r7, r2
    ddb0:	mov	r4, r0
    ddb4:	cmp	r5, #0
    ddb8:	bne	ddc0 <monster_test_parse_json+0x40>
    ddbc:	add	r5, sp, #40	; 0x28
    ddc0:	add	r3, r7, r6
    ddc4:	str	r1, [sp]
    ddc8:	mov	r2, r7
    ddcc:	mov	r1, r4
    ddd0:	mov	r0, r5
    ddd4:	bl	a94 <flatcc_json_parser_init>
    ddd8:	ldr	r1, [pc, #132]	; de64 <monster_test_parse_json+0xe4>
    dddc:	mov	r2, #0
    dde0:	mov	r3, #0
    dde4:	mov	r0, r4
    dde8:	bl	0 <flatcc_builder_start_buffer>
    ddec:	cmp	r0, #0
    ddf0:	beq	ddfc <monster_test_parse_json+0x7c>
    ddf4:	mvn	r0, #0
    ddf8:	b	de48 <monster_test_parse_json+0xc8>
    ddfc:	add	r2, r7, r6
    de00:	add	r3, sp, #32
    de04:	mov	r1, r7
    de08:	mov	r0, r5
    de0c:	bl	7fac <MyGame_Example_Monster_parse_json_table>
    de10:	ldr	r0, [r5, #24]
    de14:	cmp	r0, #0
    de18:	beq	de24 <monster_test_parse_json+0xa4>
    de1c:	ldr	r0, [r5, #24]
    de20:	b	de48 <monster_test_parse_json+0xc8>
    de24:	ldr	r1, [sp, #32]
    de28:	mov	r0, r4
    de2c:	bl	0 <flatcc_builder_end_buffer>
    de30:	cmp	r0, #0
    de34:	bne	de40 <monster_test_parse_json+0xc0>
    de38:	mvn	r0, #0
    de3c:	b	de48 <monster_test_parse_json+0xc8>
    de40:	str	r7, [r5, #40]	; 0x28
    de44:	mov	r0, #0
    de48:	ldr	r4, [sp, #16]
    de4c:	ldr	r5, [sp, #20]
    de50:	ldr	r6, [sp, #24]
    de54:	ldr	r7, [sp, #28]
    de58:	ldr	lr, [sp, #8]
    de5c:	add	sp, sp, #88	; 0x58
    de60:	bx	lr
    de64:	.word	0x00000021

0000de68 <hexdump>:
    de68:	mov	ip, sp
    de6c:	sub	sp, sp, #48	; 0x30
    de70:	str	ip, [sp]
    de74:	str	lr, [sp, #4]
    de78:	str	r4, [sp, #8]
    de7c:	str	r5, [sp, #12]
    de80:	str	r6, [sp, #16]
    de84:	str	r7, [sp, #20]
    de88:	mov	r4, r3
    de8c:	mov	r5, r2
    de90:	mov	r6, r1
    de94:	mov	r2, r0
    de98:	cmp	r2, #0
    de9c:	beq	deac <hexdump+0x44>
    dea0:	ldr	r1, [pc, #300]	; dfd4 <hexdump+0x16c>
    dea4:	mov	r0, r4
    dea8:	bl	0 <fprintf>
    deac:	mov	r7, #0
    deb0:	cmp	r7, r5
    deb4:	bcs	df88 <hexdump+0x120>
    deb8:	and	r1, r7, #15
    debc:	cmp	r1, #0
    dec0:	bne	def0 <hexdump+0x88>
    dec4:	cmp	r7, #0
    dec8:	beq	dedc <hexdump+0x74>
    decc:	ldr	r1, [pc, #276]	; dfe8 <hexdump+0x180>
    ded0:	add	r2, sp, #24
    ded4:	mov	r0, r4
    ded8:	bl	0 <fprintf>
    dedc:	ldr	r1, [pc, #252]	; dfe0 <hexdump+0x178>
    dee0:	mov	r2, r7
    dee4:	mov	r0, r4
    dee8:	bl	0 <fprintf>
    deec:	b	df08 <hexdump+0xa0>
    def0:	and	r3, r7, #7
    def4:	cmp	r3, #0
    def8:	bne	df08 <hexdump+0xa0>
    defc:	ldr	r1, [pc, #224]	; dfe4 <hexdump+0x17c>
    df00:	mov	r0, r4
    df04:	bl	0 <fprintf>
    df08:	ldr	r1, [pc, #200]	; dfd8 <hexdump+0x170>
    df0c:	ldrb	r2, [r6, r7]
    df10:	mov	r0, r4
    df14:	bl	0 <fprintf>
    df18:	ldrb	r3, [r6, r7]
    df1c:	cmp	r3, #32
    df20:	blt	df38 <hexdump+0xd0>
    df24:	ldrb	r2, [r6, r7]
    df28:	cmp	r2, #126	; 0x7e
    df2c:	movgt	r1, #1
    df30:	movle	r1, #0
    df34:	b	df3c <hexdump+0xd4>
    df38:	mov	r1, #1
    df3c:	cmp	r1, #0
    df40:	bne	df5c <hexdump+0xf4>
    df44:	add	r2, sp, #24
    df48:	and	r0, r7, #15
    df4c:	ldrb	r3, [r6, r7]
    df50:	and	r1, r3, #255	; 0xff
    df54:	strb	r1, [r2, r0]
    df58:	b	df6c <hexdump+0x104>
    df5c:	add	r0, sp, #24
    df60:	and	r3, r7, #15
    df64:	mov	r2, #46	; 0x2e
    df68:	strb	r2, [r0, r3]
    df6c:	add	r0, sp, #24
    df70:	and	ip, r7, #15
    df74:	add	r2, r0, ip
    df78:	mov	r3, #0
    df7c:	strb	r3, [r2, #1]
    df80:	add	r7, r7, #1
    df84:	b	deb0 <hexdump+0x48>
    df88:	and	ip, r7, #15
    df8c:	cmp	ip, #0
    df90:	beq	dfa8 <hexdump+0x140>
    df94:	ldr	r1, [pc, #64]	; dfdc <hexdump+0x174>
    df98:	mov	r0, r4
    df9c:	bl	0 <fprintf>
    dfa0:	add	r7, r7, #1
    dfa4:	b	df88 <hexdump+0x120>
    dfa8:	ldr	r1, [pc, #56]	; dfe8 <hexdump+0x180>
    dfac:	add	r2, sp, #24
    dfb0:	mov	r0, r4
    dfb4:	bl	0 <fprintf>
    dfb8:	ldr	r4, [sp, #8]
    dfbc:	ldr	r5, [sp, #12]
    dfc0:	ldr	r6, [sp, #16]
    dfc4:	ldr	r7, [sp, #20]
    dfc8:	ldr	lr, [sp, #4]
    dfcc:	add	sp, sp, #48	; 0x30
    dfd0:	bx	lr
    dfd4:	.word	0x00000124
    dfd8:	.word	0x000000d5
    dfdc:	.word	0x0000001d
    dfe0:	.word	0x0000006e
    dfe4:	.word	0x00000236
    dfe8:	.word	0x000001b7

0000dfec <cdump>:
    dfec:	mov	ip, sp
    dff0:	sub	sp, sp, #48	; 0x30
    dff4:	str	ip, [sp]
    dff8:	str	lr, [sp, #4]
    dffc:	str	r4, [sp, #8]
    e000:	str	r5, [sp, #12]
    e004:	str	r6, [sp, #16]
    e008:	str	r7, [sp, #20]
    e00c:	mov	r4, r3
    e010:	mov	r6, r2
    e014:	mov	r5, r1
    e018:	cmp	r0, #0
    e01c:	bne	e024 <cdump+0x38>
    e020:	ldr	r0, [pc, #140]	; e0b4 <cdump+0xc8>
    e024:	ldr	r1, [pc, #156]	; e0c8 <cdump+0xdc>
    e028:	mov	r2, r0
    e02c:	mov	r0, r4
    e030:	bl	0 <fprintf>
    e034:	mov	r7, #0
    e038:	cmp	r7, r6
    e03c:	bcs	e08c <cdump+0xa0>
    e040:	and	ip, r7, #15
    e044:	cmp	ip, #0
    e048:	beq	e068 <cdump+0x7c>
    e04c:	and	r2, r7, #7
    e050:	cmp	r2, #0
    e054:	bne	e074 <cdump+0x88>
    e058:	ldr	r1, [pc, #96]	; e0c0 <cdump+0xd4>
    e05c:	mov	r0, r4
    e060:	bl	0 <fprintf>
    e064:	b	e074 <cdump+0x88>
    e068:	ldr	r1, [pc, #76]	; e0bc <cdump+0xd0>
    e06c:	mov	r0, r4
    e070:	bl	0 <fprintf>
    e074:	ldr	r1, [pc, #72]	; e0c4 <cdump+0xd8>
    e078:	ldrb	r2, [r5, r7]
    e07c:	mov	r0, r4
    e080:	bl	0 <fprintf>
    e084:	add	r7, r7, #1
    e088:	b	e038 <cdump+0x4c>
    e08c:	ldr	r1, [pc, #36]	; e0b8 <cdump+0xcc>
    e090:	mov	r0, r4
    e094:	bl	0 <fprintf>
    e098:	ldr	r4, [sp, #8]
    e09c:	ldr	r5, [sp, #12]
    e0a0:	ldr	r6, [sp, #16]
    e0a4:	ldr	r7, [sp, #20]
    e0a8:	ldr	lr, [sp, #4]
    e0ac:	add	sp, sp, #48	; 0x30
    e0b0:	bx	lr
    e0b4:	.word	0x00000018
    e0b8:	.word	0x00000254
    e0bc:	.word	0x0000009a
    e0c0:	.word	0x0000001d
    e0c4:	.word	0x0000011b
    e0c8:	.word	0x0000027e

0000e0cc <readfile>:
    e0cc:	mov	ip, sp
    e0d0:	sub	sp, sp, #40	; 0x28
    e0d4:	str	ip, [sp]
    e0d8:	str	lr, [sp, #4]
    e0dc:	str	r4, [sp, #8]
    e0e0:	str	r5, [sp, #12]
    e0e4:	str	r6, [sp, #16]
    e0e8:	str	r7, [sp, #20]
    e0ec:	str	r8, [sp, #24]
    e0f0:	mov	r8, r1
    e0f4:	cmp	r2, #0
    e0f8:	bne	e104 <readfile+0x38>
    e0fc:	add	r4, sp, #32
    e100:	b	e108 <readfile+0x3c>
    e104:	mov	r4, r2
    e108:	ldr	r1, [pc, #272]	; e220 <readfile+0x154>
    e10c:	bl	0 <fopen>
    e110:	mov	r7, r0
    e114:	mov	r6, #0
    e118:	mov	r5, #0
    e11c:	cmp	r7, #0
    e120:	beq	e1d4 <readfile+0x108>
    e124:	mov	r1, #0
    e128:	mov	r2, #2
    e12c:	mov	r0, r7
    e130:	bl	0 <fseek>
    e134:	mov	r0, r7
    e138:	bl	0 <ftell>
    e13c:	mov	r6, r0
    e140:	str	r6, [r4]
    e144:	cmp	r8, #0
    e148:	bhi	e154 <readfile+0x88>
    e14c:	mov	r2, #0
    e150:	b	e160 <readfile+0x94>
    e154:	cmp	r6, r8
    e158:	movhi	r2, #1
    e15c:	movls	r2, #0
    e160:	cmp	r2, #0
    e164:	bne	e1d4 <readfile+0x108>
    e168:	mov	r0, r7
    e16c:	bl	0 <rewind>
    e170:	cmp	r6, #0
    e174:	bne	e180 <readfile+0xb4>
    e178:	mov	r0, #1
    e17c:	b	e184 <readfile+0xb8>
    e180:	mov	r0, r6
    e184:	bl	0 <malloc>
    e188:	mov	r5, r0
    e18c:	cmp	r5, #0
    e190:	beq	e1d4 <readfile+0x108>
    e194:	mov	r8, #0
    e198:	add	r0, r5, r8
    e19c:	mov	r1, #1
    e1a0:	sub	r2, r6, r8
    e1a4:	mov	r3, r7
    e1a8:	bl	0 <fread>
    e1ac:	cmp	r0, #0
    e1b0:	beq	e1bc <readfile+0xf0>
    e1b4:	add	r8, r8, r0
    e1b8:	b	e198 <readfile+0xcc>
    e1bc:	cmp	r8, r6
    e1c0:	bne	e1d4 <readfile+0x108>
    e1c4:	mov	r0, r7
    e1c8:	bl	0 <fclose>
    e1cc:	str	r6, [r4]
    e1d0:	b	e1fc <readfile+0x130>
    e1d4:	cmp	r7, #0
    e1d8:	beq	e1e4 <readfile+0x118>
    e1dc:	mov	r0, r7
    e1e0:	bl	0 <fclose>
    e1e4:	cmp	r5, #0
    e1e8:	beq	e1f4 <readfile+0x128>
    e1ec:	mov	r0, r5
    e1f0:	bl	0 <free>
    e1f4:	str	r6, [r4]
    e1f8:	mov	r5, #0
    e1fc:	mov	r0, r5
    e200:	ldr	r4, [sp, #8]
    e204:	ldr	r5, [sp, #12]
    e208:	ldr	r6, [sp, #16]
    e20c:	ldr	r7, [sp, #20]
    e210:	ldr	r8, [sp, #24]
    e214:	ldr	lr, [sp, #4]
    e218:	add	sp, sp, #40	; 0x28
    e21c:	bx	lr
    e220:	.word	0x0000004c

0000e224 <verify_parse>:
    e224:	mov	ip, sp
    e228:	sub	sp, sp, #16
    e22c:	str	ip, [sp]
    e230:	str	lr, [sp, #4]
    e234:	str	r4, [sp, #8]
    e238:	ldr	r1, [pc, #452]	; e404 <verify_parse+0x1e0>
    e23c:	bl	904 <MyGame_Example_Monster_as_root_with_identifier>
    e240:	bl	96c <MyGame_Example_Monster_pos>
    e244:	mov	r4, r0
    e248:	cmp	r4, #0
    e24c:	bne	e26c <verify_parse+0x48>
    e250:	ldr	r0, [pc, #440]	; e410 <verify_parse+0x1ec>
    e254:	ldr	r1, [pc, #428]	; e408 <verify_parse+0x1e4>
    e258:	mov	r2, #45	; 0x2d
    e25c:	ldr	r3, [pc, #424]	; e40c <verify_parse+0x1e8>
    e260:	bl	0 <__assert_fail>
    e264:	mvn	r0, #0
    e268:	b	e3f4 <verify_parse+0x1d0>
    e26c:	mov	r0, r4
    e270:	bl	7bc <MyGame_Example_Vec3_x>
    e274:	vmov.f32	s2, #112	; 0x3f800000  1.0
    e278:	vcmp.f32	s0, s2
    e27c:	vmrs	APSR_nzcv, fpscr
    e280:	beq	e2a0 <verify_parse+0x7c>
    e284:	ldr	r0, [pc, #388]	; e410 <verify_parse+0x1ec>
    e288:	ldr	r1, [pc, #376]	; e408 <verify_parse+0x1e4>
    e28c:	mov	r2, #46	; 0x2e
    e290:	ldr	r3, [pc, #372]	; e40c <verify_parse+0x1e8>
    e294:	bl	0 <__assert_fail>
    e298:	mvn	r0, #0
    e29c:	b	e3f4 <verify_parse+0x1d0>
    e2a0:	mov	r0, r4
    e2a4:	bl	7f0 <MyGame_Example_Vec3_y>
    e2a8:	vmov.f32	s12, #0	; 0x40000000  2.0
    e2ac:	vcmp.f32	s0, s12
    e2b0:	vmrs	APSR_nzcv, fpscr
    e2b4:	beq	e2d4 <verify_parse+0xb0>
    e2b8:	ldr	r0, [pc, #336]	; e410 <verify_parse+0x1ec>
    e2bc:	ldr	r1, [pc, #324]	; e408 <verify_parse+0x1e4>
    e2c0:	mov	r2, #47	; 0x2f
    e2c4:	ldr	r3, [pc, #320]	; e40c <verify_parse+0x1e8>
    e2c8:	bl	0 <__assert_fail>
    e2cc:	mvn	r0, #0
    e2d0:	b	e3f4 <verify_parse+0x1d0>
    e2d4:	mov	r0, r4
    e2d8:	bl	828 <MyGame_Example_Vec3_z>
    e2dc:	vmov.f32	s4, #8	; 0x40400000  3.0
    e2e0:	vcmp.f32	s0, s4
    e2e4:	vmrs	APSR_nzcv, fpscr
    e2e8:	beq	e308 <verify_parse+0xe4>
    e2ec:	ldr	r0, [pc, #284]	; e410 <verify_parse+0x1ec>
    e2f0:	ldr	r1, [pc, #272]	; e408 <verify_parse+0x1e4>
    e2f4:	mov	r2, #48	; 0x30
    e2f8:	ldr	r3, [pc, #268]	; e40c <verify_parse+0x1e8>
    e2fc:	bl	0 <__assert_fail>
    e300:	mvn	r0, #0
    e304:	b	e3f4 <verify_parse+0x1d0>
    e308:	mov	r0, r4
    e30c:	bl	860 <MyGame_Example_Vec3_test1>
    e310:	vmov.f64	d5, #8	; 0x40400000  3.0
    e314:	vcmp.f64	d0, d5
    e318:	vmrs	APSR_nzcv, fpscr
    e31c:	beq	e33c <verify_parse+0x118>
    e320:	ldr	r0, [pc, #232]	; e410 <verify_parse+0x1ec>
    e324:	ldr	r1, [pc, #220]	; e408 <verify_parse+0x1e4>
    e328:	mov	r2, #49	; 0x31
    e32c:	ldr	r3, [pc, #216]	; e40c <verify_parse+0x1e8>
    e330:	bl	0 <__assert_fail>
    e334:	mvn	r0, #0
    e338:	b	e3f4 <verify_parse+0x1d0>
    e33c:	mov	r0, r4
    e340:	bl	89c <MyGame_Example_Vec3_test2>
    e344:	cmp	r0, #2
    e348:	beq	e368 <verify_parse+0x144>
    e34c:	ldr	r0, [pc, #188]	; e410 <verify_parse+0x1ec>
    e350:	ldr	r1, [pc, #176]	; e408 <verify_parse+0x1e4>
    e354:	mov	r2, #50	; 0x32
    e358:	ldr	r3, [pc, #172]	; e40c <verify_parse+0x1e8>
    e35c:	bl	0 <__assert_fail>
    e360:	mvn	r0, #0
    e364:	b	e3f4 <verify_parse+0x1d0>
    e368:	mov	r0, r4
    e36c:	bl	8d4 <MyGame_Example_Vec3_test3>
    e370:	mov	r4, r0
    e374:	cmp	r4, #0
    e378:	bne	e398 <verify_parse+0x174>
    e37c:	ldr	r0, [pc, #140]	; e410 <verify_parse+0x1ec>
    e380:	ldr	r1, [pc, #128]	; e408 <verify_parse+0x1e4>
    e384:	mov	r2, #52	; 0x34
    e388:	ldr	r3, [pc, #124]	; e40c <verify_parse+0x1e8>
    e38c:	bl	0 <__assert_fail>
    e390:	mvn	r0, #0
    e394:	b	e3f4 <verify_parse+0x1d0>
    e398:	mov	r0, r4
    e39c:	bl	750 <MyGame_Example_Test_a>
    e3a0:	cmp	r0, #5
    e3a4:	beq	e3c4 <verify_parse+0x1a0>
    e3a8:	ldr	r0, [pc, #96]	; e410 <verify_parse+0x1ec>
    e3ac:	ldr	r1, [pc, #84]	; e408 <verify_parse+0x1e4>
    e3b0:	mov	r2, #53	; 0x35
    e3b4:	ldr	r3, [pc, #80]	; e40c <verify_parse+0x1e8>
    e3b8:	bl	0 <__assert_fail>
    e3bc:	mvn	r0, #0
    e3c0:	b	e3f4 <verify_parse+0x1d0>
    e3c4:	mov	r0, r4
    e3c8:	bl	784 <MyGame_Example_Test_b>
    e3cc:	cmp	r0, #6
    e3d0:	beq	e3f0 <verify_parse+0x1cc>
    e3d4:	ldr	r0, [pc, #52]	; e410 <verify_parse+0x1ec>
    e3d8:	ldr	r1, [pc, #40]	; e408 <verify_parse+0x1e4>
    e3dc:	mov	r2, #54	; 0x36
    e3e0:	ldr	r3, [pc, #36]	; e40c <verify_parse+0x1e8>
    e3e4:	bl	0 <__assert_fail>
    e3e8:	mvn	r0, #0
    e3ec:	b	e3f4 <verify_parse+0x1d0>
    e3f0:	mov	r0, #0
    e3f4:	ldr	r4, [sp, #8]
    e3f8:	ldr	lr, [sp, #4]
    e3fc:	add	sp, sp, #16
    e400:	bx	lr
    e404:	.word	0x00000021
    e408:	.word	0x0000014b
    e40c:	.word	0x000002ec
    e410:	.word	0x0000029b

0000e414 <test_parse>:
    e414:	mov	ip, sp
    e418:	sub	sp, sp, #328	; 0x148
    e41c:	str	ip, [sp, #8]
    e420:	str	lr, [sp, #12]
    e424:	str	r4, [sp, #16]
    e428:	str	r5, [sp, #20]
    e42c:	str	r6, [sp, #24]
    e430:	str	r7, [sp, #28]
    e434:	str	r8, [sp, #32]
    e438:	str	r9, [sp, #36]	; 0x24
    e43c:	mov	r7, #0
    e440:	add	r5, sp, #96	; 0x60
    e444:	mvn	r6, #0
    e448:	mov	r8, #0
    e44c:	mov	r0, r5
    e450:	bl	0 <flatcc_builder_init>
    e454:	ldr	r3, [pc, #392]	; e5e4 <test_parse+0x1d0>
    e458:	ldr	r0, [r3]
    e45c:	mov	r1, #10240	; 0x2800
    e460:	add	r2, sp, #40	; 0x28
    e464:	bl	e0cc <readfile>
    e468:	mov	r4, r0
    e46c:	cmp	r4, #0
    e470:	bne	e494 <test_parse+0x80>
    e474:	ldr	r0, [pc, #344]	; e5d4 <test_parse+0x1c0>
    e478:	ldr	r0, [r0]
    e47c:	ldr	r1, [pc, #344]	; e5dc <test_parse+0x1c8>
    e480:	ldr	r3, [pc, #348]	; e5e4 <test_parse+0x1d0>
    e484:	ldr	r2, [r3]
    e488:	bl	0 <fprintf>
    e48c:	mvn	r0, #0
    e490:	b	e5ac <test_parse+0x198>
    e494:	add	r1, sp, #48	; 0x30
    e498:	ldr	r3, [sp, #40]	; 0x28
    e49c:	str	r8, [sp]
    e4a0:	mov	r2, r4
    e4a4:	mov	r0, r5
    e4a8:	bl	dd80 <monster_test_parse_json>
    e4ac:	cmp	r0, #0
    e4b0:	bne	e540 <test_parse+0x12c>
    e4b4:	ldr	r0, [pc, #280]	; e5d4 <test_parse+0x1c0>
    e4b8:	ldr	r0, [r0]
    e4bc:	ldr	r1, [pc, #268]	; e5d0 <test_parse+0x1bc>
    e4c0:	ldr	r2, [pc, #284]	; e5e4 <test_parse+0x1d0>
    e4c4:	ldr	r2, [r2]
    e4c8:	ldr	r3, [sp, #64]	; 0x40
    e4cc:	bl	0 <fprintf>
    e4d0:	add	r1, sp, #44	; 0x2c
    e4d4:	mov	r0, r5
    e4d8:	bl	0 <flatcc_builder_finalize_aligned_buffer>
    e4dc:	mov	r7, r0
    e4e0:	ldr	r0, [pc, #240]	; e5d8 <test_parse+0x1c4>
    e4e4:	ldr	r2, [sp, #44]	; 0x2c
    e4e8:	ldr	r1, [pc, #248]	; e5e8 <test_parse+0x1d4>
    e4ec:	ldr	r3, [r1]
    e4f0:	mov	r1, r7
    e4f4:	bl	de68 <hexdump>
    e4f8:	ldr	r2, [pc, #212]	; e5d4 <test_parse+0x1c0>
    e4fc:	ldr	r0, [r2]
    e500:	ldr	r1, [pc, #232]	; e5f0 <test_parse+0x1dc>
    e504:	ldr	r2, [sp, #40]	; 0x28
    e508:	ldr	r3, [sp, #44]	; 0x2c
    e50c:	bl	0 <fprintf>
    e510:	mov	r0, r7
    e514:	bl	e224 <verify_parse>
    e518:	ldr	r0, [pc, #192]	; e5e0 <test_parse+0x1cc>
    e51c:	ldr	r2, [sp, #44]	; 0x2c
    e520:	ldr	r3, [pc, #192]	; e5e8 <test_parse+0x1d4>
    e524:	ldr	r3, [r3]
    e528:	mov	r1, r7
    e52c:	bl	dfec <cdump>
    e530:	mov	r0, r5
    e534:	bl	0 <flatcc_builder_reset>
    e538:	mov	r6, #0
    e53c:	b	e580 <test_parse+0x16c>
    e540:	ldr	r0, [sp, #72]	; 0x48
    e544:	bl	0 <flatcc_json_parser_error_string>
    e548:	mov	ip, r0
    e54c:	ldr	r1, [pc, #128]	; e5d4 <test_parse+0x1c0>
    e550:	ldr	r0, [r1]
    e554:	ldr	r1, [pc, #144]	; e5ec <test_parse+0x1d8>
    e558:	ldr	r2, [pc, #132]	; e5e4 <test_parse+0x1d0>
    e55c:	ldr	r2, [r2]
    e560:	ldr	r3, [sp, #64]	; 0x40
    e564:	ldr	r8, [sp, #84]	; 0x54
    e568:	ldr	r9, [sp, #52]	; 0x34
    e56c:	sub	r8, r8, r9
    e570:	add	r9, r8, #1
    e574:	str	ip, [sp, #4]
    e578:	str	r9, [sp]
    e57c:	bl	0 <fprintf>
    e580:	cmp	r7, #0
    e584:	beq	e590 <test_parse+0x17c>
    e588:	mov	r0, r7
    e58c:	bl	0 <flatcc_builder_aligned_free>
    e590:	cmp	r4, #0
    e594:	beq	e5a0 <test_parse+0x18c>
    e598:	mov	r0, r4
    e59c:	bl	0 <free>
    e5a0:	mov	r0, r5
    e5a4:	bl	0 <flatcc_builder_clear>
    e5a8:	mov	r0, r6
    e5ac:	ldr	r4, [sp, #16]
    e5b0:	ldr	r5, [sp, #20]
    e5b4:	ldr	r6, [sp, #24]
    e5b8:	ldr	r7, [sp, #28]
    e5bc:	ldr	r8, [sp, #32]
    e5c0:	ldr	r9, [sp, #36]	; 0x24
    e5c4:	ldr	lr, [sp, #12]
    e5c8:	add	sp, sp, #328	; 0x148
    e5cc:	bx	lr
    e5d0:	.word	0x00000129
    e5d4:	.word	0x00000000
    e5d8:	.word	0x00000259
    e5dc:	.word	0x00000076
    e5e0:	.word	0x0000009f
	...
    e5ec:	.word	0x000000c7
    e5f0:	.word	0x0000029d

0000e5f4 <main>:
    e5f4:	mov	ip, sp
    e5f8:	sub	sp, sp, #16
    e5fc:	str	ip, [sp]
    e600:	str	lr, [sp, #4]
    e604:	str	r4, [sp, #8]
    e608:	str	r5, [sp, #12]
    e60c:	mov	r4, r1
    e610:	mov	r5, r0
    e614:	ldr	r0, [pc, #112]	; e68c <main+0x98>
    e618:	ldr	r0, [r0]
    e61c:	ldr	r1, [pc, #112]	; e694 <main+0xa0>
    e620:	bl	0 <fprintf>
    e624:	cmp	r5, #1
    e628:	bne	e634 <main+0x40>
    e62c:	mov	r3, #0
    e630:	b	e640 <main+0x4c>
    e634:	cmp	r5, #2
    e638:	movne	r3, #1
    e63c:	moveq	r3, #0
    e640:	cmp	r3, #0
    e644:	beq	e660 <main+0x6c>
    e648:	ldr	r0, [pc, #60]	; e68c <main+0x98>
    e64c:	ldr	r0, [r0]
    e650:	ldr	r1, [pc, #56]	; e690 <main+0x9c>
    e654:	bl	0 <fprintf>
    e658:	mov	r0, #1
    e65c:	bl	0 <exit>
    e660:	cmp	r5, #2
    e664:	bne	e674 <main+0x80>
    e668:	ldr	ip, [pc, #40]	; e698 <main+0xa4>
    e66c:	ldr	r2, [r4, #4]
    e670:	str	r2, [ip]
    e674:	bl	e414 <test_parse>
    e678:	ldr	r4, [sp, #8]
    e67c:	ldr	r5, [sp, #12]
    e680:	ldr	lr, [sp, #4]
    e684:	add	sp, sp, #16
    e688:	bx	lr
    e68c:	.word	0x00000000
    e690:	.word	0x000000db
    e694:	.word	0x000002c0
    e698:	.word	0x00000000
