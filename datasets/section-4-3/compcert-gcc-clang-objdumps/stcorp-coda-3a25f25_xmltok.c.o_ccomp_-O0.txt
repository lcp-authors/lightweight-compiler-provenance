
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/expat/xmltok.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <isNever>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	mov	r0, #0
      14:	ldr	lr, [sp, #4]
      18:	add	sp, sp, #8
      1c:	bx	lr

00000020 <utf8_isName2>:
      20:	mov	ip, sp
      24:	sub	sp, sp, #16
      28:	str	ip, [sp]
      2c:	str	lr, [sp, #4]
      30:	str	r4, [sp, #8]
      34:	ldr	r4, [pc, #88]	; 94 <utf8_isName2+0x74>
      38:	ldrb	r0, [r1]
      3c:	and	r2, r0, #3
      40:	lsl	ip, r2, #1
      44:	ldr	r2, [pc, #76]	; 98 <utf8_isName2+0x78>
      48:	ldrb	r3, [r1]
      4c:	asr	r0, r3, #2
      50:	and	r3, r0, #7
      54:	ldrb	r0, [r2, r3]
      58:	add	r0, ip, r0, lsl #3
      5c:	ldrb	r2, [r1, #1]
      60:	asr	r3, r2, #5
      64:	and	r2, r3, #1
      68:	add	r2, r0, r2
      6c:	ldr	r0, [r4, r2, lsl #2]
      70:	mov	ip, #1
      74:	ldrb	r2, [r1, #1]
      78:	and	r1, r2, #31
      7c:	lsl	r1, ip, r1
      80:	and	r0, r0, r1
      84:	ldr	r4, [sp, #8]
      88:	ldr	lr, [sp, #4]
      8c:	add	sp, sp, #16
      90:	bx	lr
      94:	.word	0x00000000
      98:	.word	0x00000600

0000009c <utf8_isName3>:
      9c:	mov	ip, sp
      a0:	sub	sp, sp, #16
      a4:	str	ip, [sp]
      a8:	str	lr, [sp, #4]
      ac:	str	r4, [sp, #8]
      b0:	ldr	r4, [pc, #100]	; 11c <utf8_isName3+0x80>
      b4:	ldrb	r3, [r1, #1]
      b8:	and	ip, r3, #3
      bc:	lsl	ip, ip, #1
      c0:	ldr	r2, [pc, #88]	; 120 <utf8_isName3+0x84>
      c4:	ldrb	r0, [r1, #1]
      c8:	asr	r3, r0, #2
      cc:	and	r3, r3, #15
      d0:	ldrb	r0, [r1]
      d4:	and	r0, r0, #15
      d8:	add	r3, r3, r0, lsl #4
      dc:	ldrb	r0, [r2, r3]
      e0:	add	ip, ip, r0, lsl #3
      e4:	ldrb	r2, [r1, #2]
      e8:	asr	r3, r2, #5
      ec:	and	r0, r3, #1
      f0:	add	ip, ip, r0
      f4:	ldr	ip, [r4, ip, lsl #2]
      f8:	mov	r2, #1
      fc:	ldrb	r1, [r1, #2]
     100:	and	r0, r1, #31
     104:	lsl	r3, r2, r0
     108:	and	r0, ip, r3
     10c:	ldr	r4, [sp, #8]
     110:	ldr	lr, [sp, #4]
     114:	add	sp, sp, #16
     118:	bx	lr
     11c:	.word	0x00000000
     120:	.word	0x00000600

00000124 <utf8_isNmstrt2>:
     124:	mov	ip, sp
     128:	sub	sp, sp, #16
     12c:	str	ip, [sp]
     130:	str	lr, [sp, #4]
     134:	str	r4, [sp, #8]
     138:	ldr	r4, [pc, #88]	; 198 <utf8_isNmstrt2+0x74>
     13c:	ldrb	r0, [r1]
     140:	and	r2, r0, #3
     144:	lsl	ip, r2, #1
     148:	ldr	r2, [pc, #76]	; 19c <utf8_isNmstrt2+0x78>
     14c:	ldrb	r3, [r1]
     150:	asr	r0, r3, #2
     154:	and	r3, r0, #7
     158:	ldrb	r0, [r2, r3]
     15c:	add	r0, ip, r0, lsl #3
     160:	ldrb	r2, [r1, #1]
     164:	asr	r3, r2, #5
     168:	and	r2, r3, #1
     16c:	add	r2, r0, r2
     170:	ldr	r0, [r4, r2, lsl #2]
     174:	mov	ip, #1
     178:	ldrb	r2, [r1, #1]
     17c:	and	r1, r2, #31
     180:	lsl	r1, ip, r1
     184:	and	r0, r0, r1
     188:	ldr	r4, [sp, #8]
     18c:	ldr	lr, [sp, #4]
     190:	add	sp, sp, #16
     194:	bx	lr
     198:	.word	0x00000000
     19c:	.word	0x00000500

000001a0 <utf8_isNmstrt3>:
     1a0:	mov	ip, sp
     1a4:	sub	sp, sp, #16
     1a8:	str	ip, [sp]
     1ac:	str	lr, [sp, #4]
     1b0:	str	r4, [sp, #8]
     1b4:	ldr	r4, [pc, #100]	; 220 <utf8_isNmstrt3+0x80>
     1b8:	ldrb	r3, [r1, #1]
     1bc:	and	ip, r3, #3
     1c0:	lsl	ip, ip, #1
     1c4:	ldr	r2, [pc, #88]	; 224 <utf8_isNmstrt3+0x84>
     1c8:	ldrb	r0, [r1, #1]
     1cc:	asr	r3, r0, #2
     1d0:	and	r3, r3, #15
     1d4:	ldrb	r0, [r1]
     1d8:	and	r0, r0, #15
     1dc:	add	r3, r3, r0, lsl #4
     1e0:	ldrb	r0, [r2, r3]
     1e4:	add	ip, ip, r0, lsl #3
     1e8:	ldrb	r2, [r1, #2]
     1ec:	asr	r3, r2, #5
     1f0:	and	r0, r3, #1
     1f4:	add	ip, ip, r0
     1f8:	ldr	ip, [r4, ip, lsl #2]
     1fc:	mov	r2, #1
     200:	ldrb	r1, [r1, #2]
     204:	and	r0, r1, #31
     208:	lsl	r3, r2, r0
     20c:	and	r0, ip, r3
     210:	ldr	r4, [sp, #8]
     214:	ldr	lr, [sp, #4]
     218:	add	sp, sp, #16
     21c:	bx	lr
     220:	.word	0x00000000
     224:	.word	0x00000500

00000228 <utf8_isInvalid2>:
     228:	mov	ip, sp
     22c:	sub	sp, sp, #8
     230:	str	ip, [sp]
     234:	str	lr, [sp, #4]
     238:	ldrb	r2, [r1]
     23c:	cmp	r2, #194	; 0xc2
     240:	blt	25c <utf8_isInvalid2+0x34>
     244:	ldrb	r2, [r1, #1]
     248:	and	r0, r2, #128	; 0x80
     24c:	cmp	r0, #0
     250:	moveq	r3, #1
     254:	movne	r3, #0
     258:	b	260 <utf8_isInvalid2+0x38>
     25c:	mov	r3, #1
     260:	cmp	r3, #0
     264:	bne	280 <utf8_isInvalid2+0x58>
     268:	ldrb	r0, [r1, #1]
     26c:	and	r0, r0, #192	; 0xc0
     270:	cmp	r0, #192	; 0xc0
     274:	moveq	r0, #1
     278:	movne	r0, #0
     27c:	b	284 <utf8_isInvalid2+0x5c>
     280:	mov	r0, #1
     284:	ldr	lr, [sp, #4]
     288:	add	sp, sp, #8
     28c:	bx	lr

00000290 <utf8_isInvalid3>:
     290:	mov	ip, sp
     294:	sub	sp, sp, #8
     298:	str	ip, [sp]
     29c:	str	lr, [sp, #4]
     2a0:	ldrb	r0, [r1, #2]
     2a4:	and	ip, r0, #128	; 0x80
     2a8:	cmp	ip, #0
     2ac:	beq	320 <utf8_isInvalid3+0x90>
     2b0:	ldrb	r2, [r1]
     2b4:	cmp	r2, #239	; 0xef
     2b8:	bne	2d0 <utf8_isInvalid3+0x40>
     2bc:	ldrb	ip, [r1, #1]
     2c0:	cmp	ip, #191	; 0xbf
     2c4:	moveq	r2, #1
     2c8:	movne	r2, #0
     2cc:	b	2d4 <utf8_isInvalid3+0x44>
     2d0:	mov	r2, #0
     2d4:	cmp	r2, #0
     2d8:	bne	300 <utf8_isInvalid3+0x70>
     2dc:	ldrb	ip, [r1, #2]
     2e0:	and	r3, ip, #192	; 0xc0
     2e4:	cmp	r3, #192	; 0xc0
     2e8:	moveq	r2, #1
     2ec:	movne	r2, #0
     2f0:	cmp	r2, #0
     2f4:	movne	r2, #1
     2f8:	moveq	r2, #0
     2fc:	b	324 <utf8_isInvalid3+0x94>
     300:	ldrb	r0, [r1, #2]
     304:	cmp	r0, #189	; 0xbd
     308:	movgt	r3, #1
     30c:	movle	r3, #0
     310:	cmp	r3, #0
     314:	movne	r2, #1
     318:	moveq	r2, #0
     31c:	b	324 <utf8_isInvalid3+0x94>
     320:	mov	r2, #1
     324:	cmp	r2, #0
     328:	bne	408 <utf8_isInvalid3+0x178>
     32c:	ldrb	r2, [r1]
     330:	cmp	r2, #224	; 0xe0
     334:	beq	3c4 <utf8_isInvalid3+0x134>
     338:	ldrb	r0, [r1, #1]
     33c:	and	r0, r0, #128	; 0x80
     340:	cmp	r0, #0
     344:	beq	3b0 <utf8_isInvalid3+0x120>
     348:	ldrb	r3, [r1]
     34c:	cmp	r3, #237	; 0xed
     350:	beq	384 <utf8_isInvalid3+0xf4>
     354:	ldrb	r0, [r1, #1]
     358:	and	r0, r0, #192	; 0xc0
     35c:	cmp	r0, #192	; 0xc0
     360:	moveq	r0, #1
     364:	movne	r0, #0
     368:	cmp	r0, #0
     36c:	movne	r0, #1
     370:	moveq	r0, #0
     374:	cmp	r0, #0
     378:	movne	r0, #1
     37c:	moveq	r0, #0
     380:	b	40c <utf8_isInvalid3+0x17c>
     384:	ldrb	r0, [r1, #1]
     388:	cmp	r0, #159	; 0x9f
     38c:	movgt	r0, #1
     390:	movle	r0, #0
     394:	cmp	r0, #0
     398:	movne	r0, #1
     39c:	moveq	r0, #0
     3a0:	cmp	r0, #0
     3a4:	movne	r0, #1
     3a8:	moveq	r0, #0
     3ac:	b	40c <utf8_isInvalid3+0x17c>
     3b0:	mov	r0, #1
     3b4:	cmp	r0, #0
     3b8:	movne	r0, #1
     3bc:	moveq	r0, #0
     3c0:	b	40c <utf8_isInvalid3+0x17c>
     3c4:	ldrb	r2, [r1, #1]
     3c8:	cmp	r2, #160	; 0xa0
     3cc:	blt	3f4 <utf8_isInvalid3+0x164>
     3d0:	ldrb	r0, [r1, #1]
     3d4:	and	r0, r0, #192	; 0xc0
     3d8:	cmp	r0, #192	; 0xc0
     3dc:	moveq	r0, #1
     3e0:	movne	r0, #0
     3e4:	cmp	r0, #0
     3e8:	movne	r0, #1
     3ec:	moveq	r0, #0
     3f0:	b	40c <utf8_isInvalid3+0x17c>
     3f4:	mov	r0, #1
     3f8:	cmp	r0, #0
     3fc:	movne	r0, #1
     400:	moveq	r0, #0
     404:	b	40c <utf8_isInvalid3+0x17c>
     408:	mov	r0, #1
     40c:	ldr	lr, [sp, #4]
     410:	add	sp, sp, #8
     414:	bx	lr

00000418 <utf8_isInvalid4>:
     418:	mov	ip, sp
     41c:	sub	sp, sp, #8
     420:	str	ip, [sp]
     424:	str	lr, [sp, #4]
     428:	ldrb	ip, [r1, #3]
     42c:	and	r3, ip, #128	; 0x80
     430:	cmp	r3, #0
     434:	beq	450 <utf8_isInvalid4+0x38>
     438:	ldrb	r2, [r1, #3]
     43c:	and	r0, r2, #192	; 0xc0
     440:	cmp	r0, #192	; 0xc0
     444:	moveq	r3, #1
     448:	movne	r3, #0
     44c:	b	454 <utf8_isInvalid4+0x3c>
     450:	mov	r3, #1
     454:	cmp	r3, #0
     458:	bne	474 <utf8_isInvalid4+0x5c>
     45c:	ldrb	r2, [r1, #2]
     460:	and	ip, r2, #128	; 0x80
     464:	cmp	ip, #0
     468:	moveq	r2, #1
     46c:	movne	r2, #0
     470:	b	478 <utf8_isInvalid4+0x60>
     474:	mov	r2, #1
     478:	cmp	r2, #0
     47c:	bne	498 <utf8_isInvalid4+0x80>
     480:	ldrb	r0, [r1, #2]
     484:	and	r2, r0, #192	; 0xc0
     488:	cmp	r2, #192	; 0xc0
     48c:	moveq	r0, #1
     490:	movne	r0, #0
     494:	b	49c <utf8_isInvalid4+0x84>
     498:	mov	r0, #1
     49c:	cmp	r0, #0
     4a0:	bne	580 <utf8_isInvalid4+0x168>
     4a4:	ldrb	r3, [r1]
     4a8:	cmp	r3, #240	; 0xf0
     4ac:	beq	53c <utf8_isInvalid4+0x124>
     4b0:	ldrb	ip, [r1, #1]
     4b4:	and	r0, ip, #128	; 0x80
     4b8:	cmp	r0, #0
     4bc:	beq	528 <utf8_isInvalid4+0x110>
     4c0:	ldrb	r2, [r1]
     4c4:	cmp	r2, #244	; 0xf4
     4c8:	beq	4fc <utf8_isInvalid4+0xe4>
     4cc:	ldrb	r0, [r1, #1]
     4d0:	and	r0, r0, #192	; 0xc0
     4d4:	cmp	r0, #192	; 0xc0
     4d8:	moveq	r0, #1
     4dc:	movne	r0, #0
     4e0:	cmp	r0, #0
     4e4:	movne	r0, #1
     4e8:	moveq	r0, #0
     4ec:	cmp	r0, #0
     4f0:	movne	r0, #1
     4f4:	moveq	r0, #0
     4f8:	b	584 <utf8_isInvalid4+0x16c>
     4fc:	ldrb	r0, [r1, #1]
     500:	cmp	r0, #143	; 0x8f
     504:	movgt	r0, #1
     508:	movle	r0, #0
     50c:	cmp	r0, #0
     510:	movne	r0, #1
     514:	moveq	r0, #0
     518:	cmp	r0, #0
     51c:	movne	r0, #1
     520:	moveq	r0, #0
     524:	b	584 <utf8_isInvalid4+0x16c>
     528:	mov	r0, #1
     52c:	cmp	r0, #0
     530:	movne	r0, #1
     534:	moveq	r0, #0
     538:	b	584 <utf8_isInvalid4+0x16c>
     53c:	ldrb	r2, [r1, #1]
     540:	cmp	r2, #144	; 0x90
     544:	blt	56c <utf8_isInvalid4+0x154>
     548:	ldrb	r0, [r1, #1]
     54c:	and	r0, r0, #192	; 0xc0
     550:	cmp	r0, #192	; 0xc0
     554:	moveq	r0, #1
     558:	movne	r0, #0
     55c:	cmp	r0, #0
     560:	movne	r0, #1
     564:	moveq	r0, #0
     568:	b	584 <utf8_isInvalid4+0x16c>
     56c:	mov	r0, #1
     570:	cmp	r0, #0
     574:	movne	r0, #1
     578:	moveq	r0, #0
     57c:	b	584 <utf8_isInvalid4+0x16c>
     580:	mov	r0, #1
     584:	ldr	lr, [sp, #4]
     588:	add	sp, sp, #8
     58c:	bx	lr

00000590 <normal_scanComment>:
     590:	mov	ip, sp
     594:	sub	sp, sp, #24
     598:	str	ip, [sp]
     59c:	str	lr, [sp, #4]
     5a0:	str	r4, [sp, #8]
     5a4:	str	r5, [sp, #12]
     5a8:	str	r6, [sp, #16]
     5ac:	str	r7, [sp, #20]
     5b0:	mov	r6, r3
     5b4:	mov	r7, r2
     5b8:	mov	r5, r0
     5bc:	cmp	r1, r7
     5c0:	beq	768 <normal_scanComment+0x1d8>
     5c4:	ldrb	r2, [r1]
     5c8:	cmp	r2, #45	; 0x2d
     5cc:	beq	5dc <normal_scanComment+0x4c>
     5d0:	str	r1, [r6]
     5d4:	mov	r0, #0
     5d8:	b	76c <normal_scanComment+0x1dc>
     5dc:	add	r4, r1, #1
     5e0:	cmp	r4, r7
     5e4:	beq	768 <normal_scanComment+0x1d8>
     5e8:	ldrb	r1, [r4]
     5ec:	and	r2, r1, #255	; 0xff
     5f0:	add	r2, r5, r2
     5f4:	ldrb	r2, [r2, #76]	; 0x4c
     5f8:	cmp	r2, #6
     5fc:	bcs	658 <normal_scanComment+0xc8>
     600:	cmp	r2, #0
     604:	beq	75c <normal_scanComment+0x1cc>
     608:	cmp	r2, #1
     60c:	beq	75c <normal_scanComment+0x1cc>
     610:	cmp	r2, #5
     614:	bne	754 <normal_scanComment+0x1c4>
     618:	sub	ip, r7, r4
     61c:	cmp	ip, #2
     620:	bge	62c <normal_scanComment+0x9c>
     624:	mvn	r0, #1
     628:	b	76c <normal_scanComment+0x1dc>
     62c:	ldr	ip, [r5, #356]	; 0x164
     630:	mov	r1, r4
     634:	mov	r0, r5
     638:	blx	ip
     63c:	cmp	r0, #0
     640:	beq	650 <normal_scanComment+0xc0>
     644:	str	r4, [r6]
     648:	mov	r0, #0
     64c:	b	76c <normal_scanComment+0x1dc>
     650:	add	r4, r4, #2
     654:	b	5e0 <normal_scanComment+0x50>
     658:	cmp	r2, #8
     65c:	bcs	6e8 <normal_scanComment+0x158>
     660:	cmp	r2, #6
     664:	bne	6a8 <normal_scanComment+0x118>
     668:	sub	ip, r7, r4
     66c:	cmp	ip, #3
     670:	bge	67c <normal_scanComment+0xec>
     674:	mvn	r0, #1
     678:	b	76c <normal_scanComment+0x1dc>
     67c:	ldr	ip, [r5, #360]	; 0x168
     680:	mov	r1, r4
     684:	mov	r0, r5
     688:	blx	ip
     68c:	cmp	r0, #0
     690:	beq	6a0 <normal_scanComment+0x110>
     694:	str	r4, [r6]
     698:	mov	r0, #0
     69c:	b	76c <normal_scanComment+0x1dc>
     6a0:	add	r4, r4, #3
     6a4:	b	5e0 <normal_scanComment+0x50>
     6a8:	sub	r0, r7, r4
     6ac:	cmp	r0, #4
     6b0:	bge	6bc <normal_scanComment+0x12c>
     6b4:	mvn	r0, #1
     6b8:	b	76c <normal_scanComment+0x1dc>
     6bc:	ldr	ip, [r5, #364]	; 0x16c
     6c0:	mov	r1, r4
     6c4:	mov	r0, r5
     6c8:	blx	ip
     6cc:	cmp	r0, #0
     6d0:	beq	6e0 <normal_scanComment+0x150>
     6d4:	str	r4, [r6]
     6d8:	mov	r0, #0
     6dc:	b	76c <normal_scanComment+0x1dc>
     6e0:	add	r4, r4, #4
     6e4:	b	5e0 <normal_scanComment+0x50>
     6e8:	cmp	r2, #8
     6ec:	beq	75c <normal_scanComment+0x1cc>
     6f0:	cmp	r2, #27
     6f4:	bne	754 <normal_scanComment+0x1c4>
     6f8:	add	r4, r4, #1
     6fc:	cmp	r4, r7
     700:	bne	70c <normal_scanComment+0x17c>
     704:	mvn	r0, #0
     708:	b	76c <normal_scanComment+0x1dc>
     70c:	ldrb	r0, [r4]
     710:	cmp	r0, #45	; 0x2d
     714:	bne	5e0 <normal_scanComment+0x50>
     718:	add	r0, r4, #1
     71c:	cmp	r0, r7
     720:	bne	72c <normal_scanComment+0x19c>
     724:	mvn	r0, #0
     728:	b	76c <normal_scanComment+0x1dc>
     72c:	ldrb	r3, [r0]
     730:	cmp	r3, #62	; 0x3e
     734:	beq	744 <normal_scanComment+0x1b4>
     738:	str	r0, [r6]
     73c:	mov	r0, #0
     740:	b	76c <normal_scanComment+0x1dc>
     744:	add	r3, r0, #1
     748:	str	r3, [r6]
     74c:	mov	r0, #13
     750:	b	76c <normal_scanComment+0x1dc>
     754:	add	r4, r4, #1
     758:	b	5e0 <normal_scanComment+0x50>
     75c:	str	r4, [r6]
     760:	mov	r0, #0
     764:	b	76c <normal_scanComment+0x1dc>
     768:	mvn	r0, #0
     76c:	ldr	r4, [sp, #8]
     770:	ldr	r5, [sp, #12]
     774:	ldr	r6, [sp, #16]
     778:	ldr	r7, [sp, #20]
     77c:	ldr	lr, [sp, #4]
     780:	add	sp, sp, #24
     784:	bx	lr

00000788 <normal_scanDecl>:
     788:	mov	ip, sp
     78c:	sub	sp, sp, #8
     790:	str	ip, [sp]
     794:	str	lr, [sp, #4]
     798:	cmp	r1, r2
     79c:	bne	7a8 <normal_scanDecl+0x20>
     7a0:	mvn	r0, #0
     7a4:	b	8e4 <normal_scanDecl+0x15c>
     7a8:	ldrb	ip, [r1]
     7ac:	and	ip, ip, #255	; 0xff
     7b0:	add	ip, r0, ip
     7b4:	ldrb	ip, [ip, #76]	; 0x4c
     7b8:	cmp	ip, #24
     7bc:	bcs	7e4 <normal_scanDecl+0x5c>
     7c0:	cmp	ip, #20
     7c4:	beq	7d4 <normal_scanDecl+0x4c>
     7c8:	cmp	ip, #22
     7cc:	beq	80c <normal_scanDecl+0x84>
     7d0:	b	800 <normal_scanDecl+0x78>
     7d4:	add	r1, r1, #1
     7d8:	str	r1, [r3]
     7dc:	mov	r0, #33	; 0x21
     7e0:	b	8e4 <normal_scanDecl+0x15c>
     7e4:	cmp	ip, #24
     7e8:	beq	80c <normal_scanDecl+0x84>
     7ec:	cmp	ip, #27
     7f0:	bne	800 <normal_scanDecl+0x78>
     7f4:	add	r1, r1, #1
     7f8:	bl	590 <normal_scanComment>
     7fc:	b	8e4 <normal_scanDecl+0x15c>
     800:	str	r1, [r3]
     804:	mov	r0, #0
     808:	b	8e4 <normal_scanDecl+0x15c>
     80c:	add	r1, r1, #1
     810:	cmp	r1, r2
     814:	beq	8e0 <normal_scanDecl+0x158>
     818:	ldrb	ip, [r1]
     81c:	and	ip, ip, #255	; 0xff
     820:	add	ip, r0, ip
     824:	ldrb	ip, [ip, #76]	; 0x4c
     828:	cmp	ip, #22
     82c:	bcs	84c <normal_scanDecl+0xc4>
     830:	cmp	ip, #9
     834:	beq	8b4 <normal_scanDecl+0x12c>
     838:	cmp	ip, #10
     83c:	beq	8b4 <normal_scanDecl+0x12c>
     840:	cmp	ip, #21
     844:	beq	8b4 <normal_scanDecl+0x12c>
     848:	b	8cc <normal_scanDecl+0x144>
     84c:	cmp	ip, #22
     850:	beq	8d8 <normal_scanDecl+0x150>
     854:	cmp	ip, #24
     858:	beq	8d8 <normal_scanDecl+0x150>
     85c:	cmp	ip, #30
     860:	bne	8cc <normal_scanDecl+0x144>
     864:	add	ip, r1, #1
     868:	cmp	ip, r2
     86c:	bne	878 <normal_scanDecl+0xf0>
     870:	mvn	r0, #0
     874:	b	8e4 <normal_scanDecl+0x15c>
     878:	ldrb	ip, [r1, #1]
     87c:	and	ip, ip, #255	; 0xff
     880:	add	r2, r0, ip
     884:	ldrb	ip, [r2, #76]	; 0x4c
     888:	cmp	ip, #21
     88c:	bcs	8a4 <normal_scanDecl+0x11c>
     890:	cmp	ip, #9
     894:	beq	8c0 <normal_scanDecl+0x138>
     898:	cmp	ip, #10
     89c:	beq	8c0 <normal_scanDecl+0x138>
     8a0:	b	8b4 <normal_scanDecl+0x12c>
     8a4:	cmp	ip, #21
     8a8:	beq	8c0 <normal_scanDecl+0x138>
     8ac:	cmp	ip, #30
     8b0:	beq	8c0 <normal_scanDecl+0x138>
     8b4:	str	r1, [r3]
     8b8:	mov	r0, #16
     8bc:	b	8e4 <normal_scanDecl+0x15c>
     8c0:	str	r1, [r3]
     8c4:	mov	r0, #0
     8c8:	b	8e4 <normal_scanDecl+0x15c>
     8cc:	str	r1, [r3]
     8d0:	mov	r0, #0
     8d4:	b	8e4 <normal_scanDecl+0x15c>
     8d8:	add	r1, r1, #1
     8dc:	b	810 <normal_scanDecl+0x88>
     8e0:	mvn	r0, #0
     8e4:	ldr	lr, [sp, #4]
     8e8:	add	sp, sp, #8
     8ec:	bx	lr

000008f0 <normal_checkPiTarget>:
     8f0:	mov	ip, sp
     8f4:	sub	sp, sp, #16
     8f8:	str	ip, [sp]
     8fc:	str	lr, [sp, #4]
     900:	str	r4, [sp, #8]
     904:	mov	r4, #0
     908:	mov	ip, #11
     90c:	str	ip, [r3]
     910:	sub	r0, r2, r1
     914:	cmp	r0, #3
     918:	beq	924 <normal_checkPiTarget+0x34>
     91c:	mov	r0, #1
     920:	b	9a8 <normal_checkPiTarget+0xb8>
     924:	ldrb	ip, [r1]
     928:	cmp	ip, #88	; 0x58
     92c:	beq	940 <normal_checkPiTarget+0x50>
     930:	cmp	ip, #120	; 0x78
     934:	beq	944 <normal_checkPiTarget+0x54>
     938:	mov	r0, #1
     93c:	b	9a8 <normal_checkPiTarget+0xb8>
     940:	mov	r4, #1
     944:	add	ip, r1, #1
     948:	ldrb	r2, [ip]
     94c:	cmp	r2, #77	; 0x4d
     950:	beq	964 <normal_checkPiTarget+0x74>
     954:	cmp	r2, #109	; 0x6d
     958:	beq	968 <normal_checkPiTarget+0x78>
     95c:	mov	r0, #1
     960:	b	9a8 <normal_checkPiTarget+0xb8>
     964:	mov	r4, #1
     968:	add	r2, ip, #1
     96c:	ldrb	r1, [r2]
     970:	cmp	r1, #76	; 0x4c
     974:	beq	988 <normal_checkPiTarget+0x98>
     978:	cmp	r1, #108	; 0x6c
     97c:	beq	98c <normal_checkPiTarget+0x9c>
     980:	mov	r0, #1
     984:	b	9a8 <normal_checkPiTarget+0xb8>
     988:	mov	r4, #1
     98c:	cmp	r4, #0
     990:	beq	99c <normal_checkPiTarget+0xac>
     994:	mov	r0, #0
     998:	b	9a8 <normal_checkPiTarget+0xb8>
     99c:	mov	r0, #12
     9a0:	str	r0, [r3]
     9a4:	mov	r0, #1
     9a8:	ldr	r4, [sp, #8]
     9ac:	ldr	lr, [sp, #4]
     9b0:	add	sp, sp, #16
     9b4:	bx	lr

000009b8 <normal_scanPi>:
     9b8:	mov	ip, sp
     9bc:	sub	sp, sp, #40	; 0x28
     9c0:	str	ip, [sp]
     9c4:	str	lr, [sp, #4]
     9c8:	str	r4, [sp, #8]
     9cc:	str	r5, [sp, #12]
     9d0:	str	r6, [sp, #16]
     9d4:	str	r7, [sp, #20]
     9d8:	str	r8, [sp, #24]
     9dc:	str	r9, [sp, #28]
     9e0:	mov	r7, r3
     9e4:	mov	r8, r2
     9e8:	mov	r6, r1
     9ec:	mov	r5, r0
     9f0:	cmp	r6, r8
     9f4:	bne	a00 <normal_scanPi+0x48>
     9f8:	mvn	r0, #0
     9fc:	b	ea8 <normal_scanPi+0x4f0>
     a00:	ldrb	r0, [r6]
     a04:	and	r1, r0, #255	; 0xff
     a08:	add	r2, r5, r1
     a0c:	ldrb	r3, [r2, #76]	; 0x4c
     a10:	cmp	r3, #22
     a14:	bcs	af0 <normal_scanPi+0x138>
     a18:	cmp	r3, #5
     a1c:	beq	ab0 <normal_scanPi+0xf8>
     a20:	cmp	r3, #6
     a24:	beq	a70 <normal_scanPi+0xb8>
     a28:	cmp	r3, #7
     a2c:	bne	b20 <normal_scanPi+0x168>
     a30:	sub	r1, r8, r6
     a34:	cmp	r1, #4
     a38:	bge	a44 <normal_scanPi+0x8c>
     a3c:	mvn	r0, #1
     a40:	b	ea8 <normal_scanPi+0x4f0>
     a44:	ldr	ip, [r5, #352]	; 0x160
     a48:	mov	r1, r6
     a4c:	mov	r0, r5
     a50:	blx	ip
     a54:	cmp	r0, #0
     a58:	bne	a68 <normal_scanPi+0xb0>
     a5c:	str	r6, [r7]
     a60:	mov	r0, #0
     a64:	b	ea8 <normal_scanPi+0x4f0>
     a68:	add	r4, r6, #4
     a6c:	b	b30 <normal_scanPi+0x178>
     a70:	sub	r0, r8, r6
     a74:	cmp	r0, #3
     a78:	bge	a84 <normal_scanPi+0xcc>
     a7c:	mvn	r0, #1
     a80:	b	ea8 <normal_scanPi+0x4f0>
     a84:	ldr	ip, [r5, #348]	; 0x15c
     a88:	mov	r1, r6
     a8c:	mov	r0, r5
     a90:	blx	ip
     a94:	cmp	r0, #0
     a98:	bne	aa8 <normal_scanPi+0xf0>
     a9c:	str	r6, [r7]
     aa0:	mov	r0, #0
     aa4:	b	ea8 <normal_scanPi+0x4f0>
     aa8:	add	r4, r6, #3
     aac:	b	b30 <normal_scanPi+0x178>
     ab0:	sub	r2, r8, r6
     ab4:	cmp	r2, #2
     ab8:	bge	ac4 <normal_scanPi+0x10c>
     abc:	mvn	r0, #1
     ac0:	b	ea8 <normal_scanPi+0x4f0>
     ac4:	ldr	ip, [r5, #344]	; 0x158
     ac8:	mov	r1, r6
     acc:	mov	r0, r5
     ad0:	blx	ip
     ad4:	cmp	r0, #0
     ad8:	bne	ae8 <normal_scanPi+0x130>
     adc:	str	r6, [r7]
     ae0:	mov	r0, #0
     ae4:	b	ea8 <normal_scanPi+0x4f0>
     ae8:	add	r4, r6, #2
     aec:	b	b30 <normal_scanPi+0x178>
     af0:	cmp	r3, #22
     af4:	beq	b2c <normal_scanPi+0x174>
     af8:	cmp	r3, #24
     afc:	beq	b2c <normal_scanPi+0x174>
     b00:	cmp	r3, #29
     b04:	bne	b20 <normal_scanPi+0x168>
     b08:	mov	r3, #1
     b0c:	cmp	r3, #0
     b10:	beq	b2c <normal_scanPi+0x174>
     b14:	str	r6, [r7]
     b18:	mov	r0, #0
     b1c:	b	ea8 <normal_scanPi+0x4f0>
     b20:	str	r6, [r7]
     b24:	mov	r0, #0
     b28:	b	ea8 <normal_scanPi+0x4f0>
     b2c:	add	r4, r6, #1
     b30:	cmp	r4, r8
     b34:	beq	ea4 <normal_scanPi+0x4ec>
     b38:	ldrb	r3, [r4]
     b3c:	and	ip, r3, #255	; 0xff
     b40:	add	r2, r5, ip
     b44:	ldrb	r1, [r2, #76]	; 0x4c
     b48:	sub	r0, r1, #5
     b4c:	cmp	r0, #25
     b50:	bcs	e98 <normal_scanPi+0x4e0>
     b54:	add	pc, pc, r0, lsl #2
     b58:	nop	{0}
     b5c:	b	be0 <normal_scanPi+0x228>
     b60:	b	c20 <normal_scanPi+0x268>
     b64:	b	c60 <normal_scanPi+0x2a8>
     b68:	b	e98 <normal_scanPi+0x4e0>
     b6c:	b	ca0 <normal_scanPi+0x2e8>
     b70:	b	ca0 <normal_scanPi+0x2e8>
     b74:	b	e98 <normal_scanPi+0x4e0>
     b78:	b	e98 <normal_scanPi+0x4e0>
     b7c:	b	e98 <normal_scanPi+0x4e0>
     b80:	b	e98 <normal_scanPi+0x4e0>
     b84:	b	e40 <normal_scanPi+0x488>
     b88:	b	e98 <normal_scanPi+0x4e0>
     b8c:	b	e98 <normal_scanPi+0x4e0>
     b90:	b	e98 <normal_scanPi+0x4e0>
     b94:	b	e98 <normal_scanPi+0x4e0>
     b98:	b	e98 <normal_scanPi+0x4e0>
     b9c:	b	ca0 <normal_scanPi+0x2e8>
     ba0:	b	bd8 <normal_scanPi+0x220>
     ba4:	b	e98 <normal_scanPi+0x4e0>
     ba8:	b	bd8 <normal_scanPi+0x220>
     bac:	b	bd8 <normal_scanPi+0x220>
     bb0:	b	bd8 <normal_scanPi+0x220>
     bb4:	b	bd8 <normal_scanPi+0x220>
     bb8:	b	e98 <normal_scanPi+0x4e0>
     bbc:	b	bc0 <normal_scanPi+0x208>
     bc0:	mov	r2, #1
     bc4:	cmp	r2, #0
     bc8:	beq	bd8 <normal_scanPi+0x220>
     bcc:	str	r4, [r7]
     bd0:	mov	r0, #0
     bd4:	b	ea8 <normal_scanPi+0x4f0>
     bd8:	add	r4, r4, #1
     bdc:	b	b30 <normal_scanPi+0x178>
     be0:	sub	r0, r8, r4
     be4:	cmp	r0, #2
     be8:	bge	bf4 <normal_scanPi+0x23c>
     bec:	mvn	r0, #1
     bf0:	b	ea8 <normal_scanPi+0x4f0>
     bf4:	ldr	ip, [r5, #332]	; 0x14c
     bf8:	mov	r1, r4
     bfc:	mov	r0, r5
     c00:	blx	ip
     c04:	cmp	r0, #0
     c08:	bne	c18 <normal_scanPi+0x260>
     c0c:	str	r4, [r7]
     c10:	mov	r0, #0
     c14:	b	ea8 <normal_scanPi+0x4f0>
     c18:	add	r4, r4, #2
     c1c:	b	b30 <normal_scanPi+0x178>
     c20:	sub	ip, r8, r4
     c24:	cmp	ip, #3
     c28:	bge	c34 <normal_scanPi+0x27c>
     c2c:	mvn	r0, #1
     c30:	b	ea8 <normal_scanPi+0x4f0>
     c34:	ldr	r9, [r5, #336]	; 0x150
     c38:	mov	r1, r4
     c3c:	mov	r0, r5
     c40:	blx	r9
     c44:	cmp	r0, #0
     c48:	bne	c58 <normal_scanPi+0x2a0>
     c4c:	str	r4, [r7]
     c50:	mov	r0, #0
     c54:	b	ea8 <normal_scanPi+0x4f0>
     c58:	add	r4, r4, #3
     c5c:	b	b30 <normal_scanPi+0x178>
     c60:	sub	ip, r8, r4
     c64:	cmp	ip, #4
     c68:	bge	c74 <normal_scanPi+0x2bc>
     c6c:	mvn	r0, #1
     c70:	b	ea8 <normal_scanPi+0x4f0>
     c74:	ldr	ip, [r5, #340]	; 0x154
     c78:	mov	r1, r4
     c7c:	mov	r0, r5
     c80:	blx	ip
     c84:	cmp	r0, #0
     c88:	bne	c98 <normal_scanPi+0x2e0>
     c8c:	str	r4, [r7]
     c90:	mov	r0, #0
     c94:	b	ea8 <normal_scanPi+0x4f0>
     c98:	add	r4, r4, #4
     c9c:	b	b30 <normal_scanPi+0x178>
     ca0:	add	r3, sp, #32
     ca4:	mov	r2, r4
     ca8:	mov	r1, r6
     cac:	mov	r0, r5
     cb0:	bl	8f0 <normal_checkPiTarget>
     cb4:	cmp	r0, #0
     cb8:	bne	cc8 <normal_scanPi+0x310>
     cbc:	str	r4, [r7]
     cc0:	mov	r0, #0
     cc4:	b	ea8 <normal_scanPi+0x4f0>
     cc8:	add	r4, r4, #1
     ccc:	cmp	r4, r8
     cd0:	beq	e38 <normal_scanPi+0x480>
     cd4:	ldrb	r2, [r4]
     cd8:	and	r1, r2, #255	; 0xff
     cdc:	add	r0, r5, r1
     ce0:	ldrb	r0, [r0, #76]	; 0x4c
     ce4:	cmp	r0, #16
     ce8:	bcs	e30 <normal_scanPi+0x478>
     cec:	add	pc, pc, r0, lsl #2
     cf0:	nop	{0}
     cf4:	b	df4 <normal_scanPi+0x43c>
     cf8:	b	df4 <normal_scanPi+0x43c>
     cfc:	b	e30 <normal_scanPi+0x478>
     d00:	b	e30 <normal_scanPi+0x478>
     d04:	b	e30 <normal_scanPi+0x478>
     d08:	b	d34 <normal_scanPi+0x37c>
     d0c:	b	d74 <normal_scanPi+0x3bc>
     d10:	b	db4 <normal_scanPi+0x3fc>
     d14:	b	df4 <normal_scanPi+0x43c>
     d18:	b	e30 <normal_scanPi+0x478>
     d1c:	b	e30 <normal_scanPi+0x478>
     d20:	b	e30 <normal_scanPi+0x478>
     d24:	b	e30 <normal_scanPi+0x478>
     d28:	b	e30 <normal_scanPi+0x478>
     d2c:	b	e30 <normal_scanPi+0x478>
     d30:	b	e00 <normal_scanPi+0x448>
     d34:	sub	r3, r8, r4
     d38:	cmp	r3, #2
     d3c:	bge	d48 <normal_scanPi+0x390>
     d40:	mvn	r0, #1
     d44:	b	ea8 <normal_scanPi+0x4f0>
     d48:	ldr	ip, [r5, #356]	; 0x164
     d4c:	mov	r1, r4
     d50:	mov	r0, r5
     d54:	blx	ip
     d58:	cmp	r0, #0
     d5c:	beq	d6c <normal_scanPi+0x3b4>
     d60:	str	r4, [r7]
     d64:	mov	r0, #0
     d68:	b	ea8 <normal_scanPi+0x4f0>
     d6c:	add	r4, r4, #2
     d70:	b	ccc <normal_scanPi+0x314>
     d74:	sub	r3, r8, r4
     d78:	cmp	r3, #3
     d7c:	bge	d88 <normal_scanPi+0x3d0>
     d80:	mvn	r0, #1
     d84:	b	ea8 <normal_scanPi+0x4f0>
     d88:	ldr	ip, [r5, #360]	; 0x168
     d8c:	mov	r1, r4
     d90:	mov	r0, r5
     d94:	blx	ip
     d98:	cmp	r0, #0
     d9c:	beq	dac <normal_scanPi+0x3f4>
     da0:	str	r4, [r7]
     da4:	mov	r0, #0
     da8:	b	ea8 <normal_scanPi+0x4f0>
     dac:	add	r4, r4, #3
     db0:	b	ccc <normal_scanPi+0x314>
     db4:	sub	r3, r8, r4
     db8:	cmp	r3, #4
     dbc:	bge	dc8 <normal_scanPi+0x410>
     dc0:	mvn	r0, #1
     dc4:	b	ea8 <normal_scanPi+0x4f0>
     dc8:	ldr	ip, [r5, #364]	; 0x16c
     dcc:	mov	r1, r4
     dd0:	mov	r0, r5
     dd4:	blx	ip
     dd8:	cmp	r0, #0
     ddc:	beq	dec <normal_scanPi+0x434>
     de0:	str	r4, [r7]
     de4:	mov	r0, #0
     de8:	b	ea8 <normal_scanPi+0x4f0>
     dec:	add	r4, r4, #4
     df0:	b	ccc <normal_scanPi+0x314>
     df4:	str	r4, [r7]
     df8:	mov	r0, #0
     dfc:	b	ea8 <normal_scanPi+0x4f0>
     e00:	add	r4, r4, #1
     e04:	cmp	r4, r8
     e08:	bne	e14 <normal_scanPi+0x45c>
     e0c:	mvn	r0, #0
     e10:	b	ea8 <normal_scanPi+0x4f0>
     e14:	ldrb	r0, [r4]
     e18:	cmp	r0, #62	; 0x3e
     e1c:	bne	ccc <normal_scanPi+0x314>
     e20:	add	r1, r4, #1
     e24:	str	r1, [r7]
     e28:	ldr	r0, [sp, #32]
     e2c:	b	ea8 <normal_scanPi+0x4f0>
     e30:	add	r4, r4, #1
     e34:	b	ccc <normal_scanPi+0x314>
     e38:	mvn	r0, #0
     e3c:	b	ea8 <normal_scanPi+0x4f0>
     e40:	add	r3, sp, #32
     e44:	mov	r2, r4
     e48:	mov	r1, r6
     e4c:	mov	r0, r5
     e50:	bl	8f0 <normal_checkPiTarget>
     e54:	cmp	r0, #0
     e58:	bne	e68 <normal_scanPi+0x4b0>
     e5c:	str	r4, [r7]
     e60:	mov	r0, #0
     e64:	b	ea8 <normal_scanPi+0x4f0>
     e68:	add	r4, r4, #1
     e6c:	cmp	r4, r8
     e70:	bne	e7c <normal_scanPi+0x4c4>
     e74:	mvn	r0, #0
     e78:	b	ea8 <normal_scanPi+0x4f0>
     e7c:	ldrb	r3, [r4]
     e80:	cmp	r3, #62	; 0x3e
     e84:	bne	e98 <normal_scanPi+0x4e0>
     e88:	add	r2, r4, #1
     e8c:	str	r2, [r7]
     e90:	ldr	r0, [sp, #32]
     e94:	b	ea8 <normal_scanPi+0x4f0>
     e98:	str	r4, [r7]
     e9c:	mov	r0, #0
     ea0:	b	ea8 <normal_scanPi+0x4f0>
     ea4:	mvn	r0, #0
     ea8:	ldr	r4, [sp, #8]
     eac:	ldr	r5, [sp, #12]
     eb0:	ldr	r6, [sp, #16]
     eb4:	ldr	r7, [sp, #20]
     eb8:	ldr	r8, [sp, #24]
     ebc:	ldr	r9, [sp, #28]
     ec0:	ldr	lr, [sp, #4]
     ec4:	add	sp, sp, #40	; 0x28
     ec8:	bx	lr

00000ecc <normal_scanCdataSection>:
     ecc:	mov	ip, sp
     ed0:	sub	sp, sp, #16
     ed4:	str	ip, [sp]
     ed8:	str	lr, [sp, #4]
     edc:	str	r4, [sp, #8]
     ee0:	sub	r2, r2, r1
     ee4:	cmp	r2, #6
     ee8:	bge	ef4 <normal_scanCdataSection+0x28>
     eec:	mvn	r0, #0
     ef0:	b	f34 <normal_scanCdataSection+0x68>
     ef4:	mov	ip, #0
     ef8:	cmp	ip, #6
     efc:	bge	f2c <normal_scanCdataSection+0x60>
     f00:	ldrb	r4, [r1]
     f04:	ldr	r2, [pc, #56]	; f44 <normal_scanCdataSection+0x78>
     f08:	ldrb	r0, [r2, ip]
     f0c:	cmp	r4, r0
     f10:	beq	f20 <normal_scanCdataSection+0x54>
     f14:	str	r1, [r3]
     f18:	mov	r0, #0
     f1c:	b	f34 <normal_scanCdataSection+0x68>
     f20:	add	ip, ip, #1
     f24:	add	r1, r1, #1
     f28:	b	ef8 <normal_scanCdataSection+0x2c>
     f2c:	str	r1, [r3]
     f30:	mov	r0, #8
     f34:	ldr	r4, [sp, #8]
     f38:	ldr	lr, [sp, #4]
     f3c:	add	sp, sp, #16
     f40:	bx	lr
     f44:	.word	0x00000700

00000f48 <normal_cdataSectionTok>:
     f48:	mov	ip, sp
     f4c:	sub	sp, sp, #32
     f50:	str	ip, [sp]
     f54:	str	lr, [sp, #4]
     f58:	str	r4, [sp, #8]
     f5c:	str	r5, [sp, #12]
     f60:	str	r6, [sp, #16]
     f64:	str	r7, [sp, #20]
     f68:	str	r8, [sp, #24]
     f6c:	mov	r6, r3
     f70:	mov	r7, r2
     f74:	mov	r4, r1
     f78:	mov	r5, r0
     f7c:	cmp	r4, r7
     f80:	bne	f8c <normal_cdataSectionTok+0x44>
     f84:	mvn	r0, #3
     f88:	b	12d0 <normal_cdataSectionTok+0x388>
     f8c:	mov	r2, #0
     f90:	cmp	r2, #0
     f94:	beq	fbc <normal_cdataSectionTok+0x74>
     f98:	sub	ip, r7, r4
     f9c:	mov	r3, #0
     fa0:	cmp	r3, #0
     fa4:	beq	fbc <normal_cdataSectionTok+0x74>
     fa8:	cmp	ip, #0
     fac:	bne	fb8 <normal_cdataSectionTok+0x70>
     fb0:	mvn	r0, #0
     fb4:	b	12d0 <normal_cdataSectionTok+0x388>
     fb8:	add	r7, r4, ip
     fbc:	ldrb	r2, [r4]
     fc0:	and	r1, r2, #255	; 0xff
     fc4:	add	r0, r5, r1
     fc8:	ldrb	r1, [r0, #76]	; 0x4c
     fcc:	cmp	r1, #11
     fd0:	bcs	1178 <normal_cdataSectionTok+0x230>
     fd4:	add	pc, pc, r1, lsl #2
     fd8:	nop	{0}
     fdc:	b	116c <normal_cdataSectionTok+0x224>
     fe0:	b	116c <normal_cdataSectionTok+0x224>
     fe4:	b	1178 <normal_cdataSectionTok+0x230>
     fe8:	b	1178 <normal_cdataSectionTok+0x230>
     fec:	b	1008 <normal_cdataSectionTok+0xc0>
     ff0:	b	10ac <normal_cdataSectionTok+0x164>
     ff4:	b	10ec <normal_cdataSectionTok+0x1a4>
     ff8:	b	112c <normal_cdataSectionTok+0x1e4>
     ffc:	b	116c <normal_cdataSectionTok+0x224>
    1000:	b	1060 <normal_cdataSectionTok+0x118>
    1004:	b	109c <normal_cdataSectionTok+0x154>
    1008:	add	r4, r4, #1
    100c:	cmp	r4, r7
    1010:	bne	101c <normal_cdataSectionTok+0xd4>
    1014:	mvn	r0, #0
    1018:	b	12d0 <normal_cdataSectionTok+0x388>
    101c:	ldrb	r1, [r4]
    1020:	cmp	r1, #93	; 0x5d
    1024:	bne	117c <normal_cdataSectionTok+0x234>
    1028:	add	r0, r4, #1
    102c:	cmp	r0, r7
    1030:	bne	103c <normal_cdataSectionTok+0xf4>
    1034:	mvn	r0, #0
    1038:	b	12d0 <normal_cdataSectionTok+0x388>
    103c:	ldrb	r2, [r0]
    1040:	cmp	r2, #62	; 0x3e
    1044:	beq	1050 <normal_cdataSectionTok+0x108>
    1048:	sub	r4, r0, #1
    104c:	b	117c <normal_cdataSectionTok+0x234>
    1050:	add	r3, r0, #1
    1054:	str	r3, [r6]
    1058:	mov	r0, #40	; 0x28
    105c:	b	12d0 <normal_cdataSectionTok+0x388>
    1060:	add	ip, r4, #1
    1064:	cmp	ip, r7
    1068:	bne	1074 <normal_cdataSectionTok+0x12c>
    106c:	mvn	r0, #0
    1070:	b	12d0 <normal_cdataSectionTok+0x388>
    1074:	ldrb	r3, [ip]
    1078:	and	r3, r3, #255	; 0xff
    107c:	add	r2, r5, r3
    1080:	ldrb	r0, [r2, #76]	; 0x4c
    1084:	cmp	r0, #10
    1088:	bne	1090 <normal_cdataSectionTok+0x148>
    108c:	add	ip, ip, #1
    1090:	str	ip, [r6]
    1094:	mov	r0, #7
    1098:	b	12d0 <normal_cdataSectionTok+0x388>
    109c:	add	r3, r4, #1
    10a0:	str	r3, [r6]
    10a4:	mov	r0, #7
    10a8:	b	12d0 <normal_cdataSectionTok+0x388>
    10ac:	sub	r3, r7, r4
    10b0:	cmp	r3, #2
    10b4:	bge	10c0 <normal_cdataSectionTok+0x178>
    10b8:	mvn	r0, #1
    10bc:	b	12d0 <normal_cdataSectionTok+0x388>
    10c0:	ldr	r8, [r5, #356]	; 0x164
    10c4:	mov	r1, r4
    10c8:	mov	r0, r5
    10cc:	blx	r8
    10d0:	cmp	r0, #0
    10d4:	beq	10e4 <normal_cdataSectionTok+0x19c>
    10d8:	str	r4, [r6]
    10dc:	mov	r0, #0
    10e0:	b	12d0 <normal_cdataSectionTok+0x388>
    10e4:	add	r4, r4, #2
    10e8:	b	117c <normal_cdataSectionTok+0x234>
    10ec:	sub	r0, r7, r4
    10f0:	cmp	r0, #3
    10f4:	bge	1100 <normal_cdataSectionTok+0x1b8>
    10f8:	mvn	r0, #1
    10fc:	b	12d0 <normal_cdataSectionTok+0x388>
    1100:	ldr	ip, [r5, #360]	; 0x168
    1104:	mov	r1, r4
    1108:	mov	r0, r5
    110c:	blx	ip
    1110:	cmp	r0, #0
    1114:	beq	1124 <normal_cdataSectionTok+0x1dc>
    1118:	str	r4, [r6]
    111c:	mov	r0, #0
    1120:	b	12d0 <normal_cdataSectionTok+0x388>
    1124:	add	r4, r4, #3
    1128:	b	117c <normal_cdataSectionTok+0x234>
    112c:	sub	r2, r7, r4
    1130:	cmp	r2, #4
    1134:	bge	1140 <normal_cdataSectionTok+0x1f8>
    1138:	mvn	r0, #1
    113c:	b	12d0 <normal_cdataSectionTok+0x388>
    1140:	ldr	ip, [r5, #364]	; 0x16c
    1144:	mov	r1, r4
    1148:	mov	r0, r5
    114c:	blx	ip
    1150:	cmp	r0, #0
    1154:	beq	1164 <normal_cdataSectionTok+0x21c>
    1158:	str	r4, [r6]
    115c:	mov	r0, #0
    1160:	b	12d0 <normal_cdataSectionTok+0x388>
    1164:	add	r4, r4, #4
    1168:	b	117c <normal_cdataSectionTok+0x234>
    116c:	str	r4, [r6]
    1170:	mov	r0, #0
    1174:	b	12d0 <normal_cdataSectionTok+0x388>
    1178:	add	r4, r4, #1
    117c:	cmp	r4, r7
    1180:	beq	12c8 <normal_cdataSectionTok+0x380>
    1184:	ldrb	r1, [r4]
    1188:	and	r2, r1, #255	; 0xff
    118c:	add	r2, r5, r2
    1190:	ldrb	r0, [r2, #76]	; 0x4c
    1194:	cmp	r0, #11
    1198:	bcs	12c0 <normal_cdataSectionTok+0x378>
    119c:	add	pc, pc, r0, lsl #2
    11a0:	nop	{0}
    11a4:	b	12b4 <normal_cdataSectionTok+0x36c>
    11a8:	b	12b4 <normal_cdataSectionTok+0x36c>
    11ac:	b	12c0 <normal_cdataSectionTok+0x378>
    11b0:	b	12c0 <normal_cdataSectionTok+0x378>
    11b4:	b	12b4 <normal_cdataSectionTok+0x36c>
    11b8:	b	11d0 <normal_cdataSectionTok+0x288>
    11bc:	b	121c <normal_cdataSectionTok+0x2d4>
    11c0:	b	1268 <normal_cdataSectionTok+0x320>
    11c4:	b	12b4 <normal_cdataSectionTok+0x36c>
    11c8:	b	12b4 <normal_cdataSectionTok+0x36c>
    11cc:	b	12b4 <normal_cdataSectionTok+0x36c>
    11d0:	sub	r1, r7, r4
    11d4:	cmp	r1, #2
    11d8:	blt	11fc <normal_cdataSectionTok+0x2b4>
    11dc:	ldr	ip, [r5, #356]	; 0x164
    11e0:	mov	r1, r4
    11e4:	mov	r0, r5
    11e8:	blx	ip
    11ec:	cmp	r0, #0
    11f0:	movne	r1, #1
    11f4:	moveq	r1, #0
    11f8:	b	1200 <normal_cdataSectionTok+0x2b8>
    11fc:	mov	r1, #1
    1200:	cmp	r1, #0
    1204:	beq	1214 <normal_cdataSectionTok+0x2cc>
    1208:	str	r4, [r6]
    120c:	mov	r0, #6
    1210:	b	12d0 <normal_cdataSectionTok+0x388>
    1214:	add	r4, r4, #2
    1218:	b	117c <normal_cdataSectionTok+0x234>
    121c:	sub	r0, r7, r4
    1220:	cmp	r0, #3
    1224:	blt	1248 <normal_cdataSectionTok+0x300>
    1228:	ldr	ip, [r5, #360]	; 0x168
    122c:	mov	r1, r4
    1230:	mov	r0, r5
    1234:	blx	ip
    1238:	cmp	r0, #0
    123c:	movne	r0, #1
    1240:	moveq	r0, #0
    1244:	b	124c <normal_cdataSectionTok+0x304>
    1248:	mov	r0, #1
    124c:	cmp	r0, #0
    1250:	beq	1260 <normal_cdataSectionTok+0x318>
    1254:	str	r4, [r6]
    1258:	mov	r0, #6
    125c:	b	12d0 <normal_cdataSectionTok+0x388>
    1260:	add	r4, r4, #3
    1264:	b	117c <normal_cdataSectionTok+0x234>
    1268:	sub	r3, r7, r4
    126c:	cmp	r3, #4
    1270:	blt	1294 <normal_cdataSectionTok+0x34c>
    1274:	ldr	r8, [r5, #364]	; 0x16c
    1278:	mov	r1, r4
    127c:	mov	r0, r5
    1280:	blx	r8
    1284:	cmp	r0, #0
    1288:	movne	r0, #1
    128c:	moveq	r0, #0
    1290:	b	1298 <normal_cdataSectionTok+0x350>
    1294:	mov	r0, #1
    1298:	cmp	r0, #0
    129c:	beq	12ac <normal_cdataSectionTok+0x364>
    12a0:	str	r4, [r6]
    12a4:	mov	r0, #6
    12a8:	b	12d0 <normal_cdataSectionTok+0x388>
    12ac:	add	r4, r4, #4
    12b0:	b	117c <normal_cdataSectionTok+0x234>
    12b4:	str	r4, [r6]
    12b8:	mov	r0, #6
    12bc:	b	12d0 <normal_cdataSectionTok+0x388>
    12c0:	add	r4, r4, #1
    12c4:	b	117c <normal_cdataSectionTok+0x234>
    12c8:	str	r4, [r6]
    12cc:	mov	r0, #6
    12d0:	ldr	r4, [sp, #8]
    12d4:	ldr	r5, [sp, #12]
    12d8:	ldr	r6, [sp, #16]
    12dc:	ldr	r7, [sp, #20]
    12e0:	ldr	r8, [sp, #24]
    12e4:	ldr	lr, [sp, #4]
    12e8:	add	sp, sp, #32
    12ec:	bx	lr

000012f0 <normal_scanEndTag>:
    12f0:	mov	ip, sp
    12f4:	sub	sp, sp, #32
    12f8:	str	ip, [sp]
    12fc:	str	lr, [sp, #4]
    1300:	str	r4, [sp, #8]
    1304:	str	r5, [sp, #12]
    1308:	str	r6, [sp, #16]
    130c:	str	r7, [sp, #20]
    1310:	str	r8, [sp, #24]
    1314:	mov	r6, r3
    1318:	mov	r7, r2
    131c:	mov	r4, r1
    1320:	mov	r5, r0
    1324:	cmp	r4, r7
    1328:	bne	1334 <normal_scanEndTag+0x44>
    132c:	mvn	r0, #0
    1330:	b	1670 <normal_scanEndTag+0x380>
    1334:	ldrb	r3, [r4]
    1338:	and	r2, r3, #255	; 0xff
    133c:	add	r3, r5, r2
    1340:	ldrb	r0, [r3, #76]	; 0x4c
    1344:	cmp	r0, #22
    1348:	bcs	1424 <normal_scanEndTag+0x134>
    134c:	cmp	r0, #5
    1350:	beq	13e4 <normal_scanEndTag+0xf4>
    1354:	cmp	r0, #6
    1358:	beq	13a4 <normal_scanEndTag+0xb4>
    135c:	cmp	r0, #7
    1360:	bne	1454 <normal_scanEndTag+0x164>
    1364:	sub	ip, r7, r4
    1368:	cmp	ip, #4
    136c:	bge	1378 <normal_scanEndTag+0x88>
    1370:	mvn	r0, #1
    1374:	b	1670 <normal_scanEndTag+0x380>
    1378:	ldr	ip, [r5, #352]	; 0x160
    137c:	mov	r1, r4
    1380:	mov	r0, r5
    1384:	blx	ip
    1388:	cmp	r0, #0
    138c:	bne	139c <normal_scanEndTag+0xac>
    1390:	str	r4, [r6]
    1394:	mov	r0, #0
    1398:	b	1670 <normal_scanEndTag+0x380>
    139c:	add	r4, r4, #4
    13a0:	b	1464 <normal_scanEndTag+0x174>
    13a4:	sub	ip, r7, r4
    13a8:	cmp	ip, #3
    13ac:	bge	13b8 <normal_scanEndTag+0xc8>
    13b0:	mvn	r0, #1
    13b4:	b	1670 <normal_scanEndTag+0x380>
    13b8:	ldr	ip, [r5, #348]	; 0x15c
    13bc:	mov	r1, r4
    13c0:	mov	r0, r5
    13c4:	blx	ip
    13c8:	cmp	r0, #0
    13cc:	bne	13dc <normal_scanEndTag+0xec>
    13d0:	str	r4, [r6]
    13d4:	mov	r0, #0
    13d8:	b	1670 <normal_scanEndTag+0x380>
    13dc:	add	r4, r4, #3
    13e0:	b	1464 <normal_scanEndTag+0x174>
    13e4:	sub	r2, r7, r4
    13e8:	cmp	r2, #2
    13ec:	bge	13f8 <normal_scanEndTag+0x108>
    13f0:	mvn	r0, #1
    13f4:	b	1670 <normal_scanEndTag+0x380>
    13f8:	ldr	ip, [r5, #344]	; 0x158
    13fc:	mov	r1, r4
    1400:	mov	r0, r5
    1404:	blx	ip
    1408:	cmp	r0, #0
    140c:	bne	141c <normal_scanEndTag+0x12c>
    1410:	str	r4, [r6]
    1414:	mov	r0, #0
    1418:	b	1670 <normal_scanEndTag+0x380>
    141c:	add	r4, r4, #2
    1420:	b	1464 <normal_scanEndTag+0x174>
    1424:	cmp	r0, #22
    1428:	beq	1460 <normal_scanEndTag+0x170>
    142c:	cmp	r0, #24
    1430:	beq	1460 <normal_scanEndTag+0x170>
    1434:	cmp	r0, #29
    1438:	bne	1454 <normal_scanEndTag+0x164>
    143c:	mov	r1, #1
    1440:	cmp	r1, #0
    1444:	beq	1460 <normal_scanEndTag+0x170>
    1448:	str	r4, [r6]
    144c:	mov	r0, #0
    1450:	b	1670 <normal_scanEndTag+0x380>
    1454:	str	r4, [r6]
    1458:	mov	r0, #0
    145c:	b	1670 <normal_scanEndTag+0x380>
    1460:	add	r4, r4, #1
    1464:	cmp	r4, r7
    1468:	beq	166c <normal_scanEndTag+0x37c>
    146c:	ldrb	r0, [r4]
    1470:	and	r3, r0, #255	; 0xff
    1474:	add	r1, r5, r3
    1478:	ldrb	r2, [r1, #76]	; 0x4c
    147c:	sub	r1, r2, #5
    1480:	cmp	r1, #25
    1484:	bcs	1660 <normal_scanEndTag+0x370>
    1488:	add	pc, pc, r1, lsl #2
    148c:	nop	{0}
    1490:	b	1514 <normal_scanEndTag+0x224>
    1494:	b	1554 <normal_scanEndTag+0x264>
    1498:	b	1594 <normal_scanEndTag+0x2a4>
    149c:	b	1660 <normal_scanEndTag+0x370>
    14a0:	b	15d4 <normal_scanEndTag+0x2e4>
    14a4:	b	15d4 <normal_scanEndTag+0x2e4>
    14a8:	b	1650 <normal_scanEndTag+0x360>
    14ac:	b	1660 <normal_scanEndTag+0x370>
    14b0:	b	1660 <normal_scanEndTag+0x370>
    14b4:	b	1660 <normal_scanEndTag+0x370>
    14b8:	b	1660 <normal_scanEndTag+0x370>
    14bc:	b	1660 <normal_scanEndTag+0x370>
    14c0:	b	1660 <normal_scanEndTag+0x370>
    14c4:	b	1660 <normal_scanEndTag+0x370>
    14c8:	b	1660 <normal_scanEndTag+0x370>
    14cc:	b	1660 <normal_scanEndTag+0x370>
    14d0:	b	15d4 <normal_scanEndTag+0x2e4>
    14d4:	b	150c <normal_scanEndTag+0x21c>
    14d8:	b	1648 <normal_scanEndTag+0x358>
    14dc:	b	150c <normal_scanEndTag+0x21c>
    14e0:	b	150c <normal_scanEndTag+0x21c>
    14e4:	b	150c <normal_scanEndTag+0x21c>
    14e8:	b	150c <normal_scanEndTag+0x21c>
    14ec:	b	1660 <normal_scanEndTag+0x370>
    14f0:	b	14f4 <normal_scanEndTag+0x204>
    14f4:	mov	ip, #1
    14f8:	cmp	ip, #0
    14fc:	beq	150c <normal_scanEndTag+0x21c>
    1500:	str	r4, [r6]
    1504:	mov	r0, #0
    1508:	b	1670 <normal_scanEndTag+0x380>
    150c:	add	r4, r4, #1
    1510:	b	1464 <normal_scanEndTag+0x174>
    1514:	sub	r0, r7, r4
    1518:	cmp	r0, #2
    151c:	bge	1528 <normal_scanEndTag+0x238>
    1520:	mvn	r0, #1
    1524:	b	1670 <normal_scanEndTag+0x380>
    1528:	ldr	ip, [r5, #332]	; 0x14c
    152c:	mov	r1, r4
    1530:	mov	r0, r5
    1534:	blx	ip
    1538:	cmp	r0, #0
    153c:	bne	154c <normal_scanEndTag+0x25c>
    1540:	str	r4, [r6]
    1544:	mov	r0, #0
    1548:	b	1670 <normal_scanEndTag+0x380>
    154c:	add	r4, r4, #2
    1550:	b	1464 <normal_scanEndTag+0x174>
    1554:	sub	r2, r7, r4
    1558:	cmp	r2, #3
    155c:	bge	1568 <normal_scanEndTag+0x278>
    1560:	mvn	r0, #1
    1564:	b	1670 <normal_scanEndTag+0x380>
    1568:	ldr	ip, [r5, #336]	; 0x150
    156c:	mov	r1, r4
    1570:	mov	r0, r5
    1574:	blx	ip
    1578:	cmp	r0, #0
    157c:	bne	158c <normal_scanEndTag+0x29c>
    1580:	str	r4, [r6]
    1584:	mov	r0, #0
    1588:	b	1670 <normal_scanEndTag+0x380>
    158c:	add	r4, r4, #3
    1590:	b	1464 <normal_scanEndTag+0x174>
    1594:	sub	r0, r7, r4
    1598:	cmp	r0, #4
    159c:	bge	15a8 <normal_scanEndTag+0x2b8>
    15a0:	mvn	r0, #1
    15a4:	b	1670 <normal_scanEndTag+0x380>
    15a8:	ldr	r8, [r5, #340]	; 0x154
    15ac:	mov	r1, r4
    15b0:	mov	r0, r5
    15b4:	blx	r8
    15b8:	cmp	r0, #0
    15bc:	bne	15cc <normal_scanEndTag+0x2dc>
    15c0:	str	r4, [r6]
    15c4:	mov	r0, #0
    15c8:	b	1670 <normal_scanEndTag+0x380>
    15cc:	add	r4, r4, #4
    15d0:	b	1464 <normal_scanEndTag+0x174>
    15d4:	add	r1, r4, #1
    15d8:	cmp	r1, r7
    15dc:	beq	1640 <normal_scanEndTag+0x350>
    15e0:	ldrb	ip, [r1]
    15e4:	and	r0, ip, #255	; 0xff
    15e8:	add	r3, r5, r0
    15ec:	ldrb	r2, [r3, #76]	; 0x4c
    15f0:	cmp	r2, #11
    15f4:	bcs	160c <normal_scanEndTag+0x31c>
    15f8:	cmp	r2, #9
    15fc:	beq	1628 <normal_scanEndTag+0x338>
    1600:	cmp	r2, #10
    1604:	beq	1628 <normal_scanEndTag+0x338>
    1608:	b	161c <normal_scanEndTag+0x32c>
    160c:	cmp	r2, #11
    1610:	beq	1630 <normal_scanEndTag+0x340>
    1614:	cmp	r2, #21
    1618:	beq	1628 <normal_scanEndTag+0x338>
    161c:	str	r1, [r6]
    1620:	mov	r0, #0
    1624:	b	1670 <normal_scanEndTag+0x380>
    1628:	add	r1, r1, #1
    162c:	b	15d8 <normal_scanEndTag+0x2e8>
    1630:	add	r3, r1, #1
    1634:	str	r3, [r6]
    1638:	mov	r0, #5
    163c:	b	1670 <normal_scanEndTag+0x380>
    1640:	mvn	r0, #0
    1644:	b	1670 <normal_scanEndTag+0x380>
    1648:	add	r4, r4, #1
    164c:	b	1464 <normal_scanEndTag+0x174>
    1650:	add	r1, r4, #1
    1654:	str	r1, [r6]
    1658:	mov	r0, #5
    165c:	b	1670 <normal_scanEndTag+0x380>
    1660:	str	r4, [r6]
    1664:	mov	r0, #0
    1668:	b	1670 <normal_scanEndTag+0x380>
    166c:	mvn	r0, #0
    1670:	ldr	r4, [sp, #8]
    1674:	ldr	r5, [sp, #12]
    1678:	ldr	r6, [sp, #16]
    167c:	ldr	r7, [sp, #20]
    1680:	ldr	r8, [sp, #24]
    1684:	ldr	lr, [sp, #4]
    1688:	add	sp, sp, #32
    168c:	bx	lr

00001690 <normal_scanHexCharRef>:
    1690:	mov	ip, sp
    1694:	sub	sp, sp, #16
    1698:	str	ip, [sp]
    169c:	str	lr, [sp, #4]
    16a0:	str	r4, [sp, #8]
    16a4:	cmp	r1, r2
    16a8:	beq	1730 <normal_scanHexCharRef+0xa0>
    16ac:	ldrb	ip, [r1]
    16b0:	and	ip, ip, #255	; 0xff
    16b4:	add	ip, r0, ip
    16b8:	ldrb	ip, [ip, #76]	; 0x4c
    16bc:	cmp	ip, #24
    16c0:	beq	16d8 <normal_scanHexCharRef+0x48>
    16c4:	cmp	ip, #25
    16c8:	beq	16d8 <normal_scanHexCharRef+0x48>
    16cc:	str	r1, [r3]
    16d0:	mov	r0, #0
    16d4:	b	1734 <normal_scanHexCharRef+0xa4>
    16d8:	add	r4, r1, #1
    16dc:	cmp	r4, r2
    16e0:	beq	1730 <normal_scanHexCharRef+0xa0>
    16e4:	ldrb	ip, [r4]
    16e8:	and	ip, ip, #255	; 0xff
    16ec:	add	r1, r0, ip
    16f0:	ldrb	ip, [r1, #76]	; 0x4c
    16f4:	cmp	ip, #18
    16f8:	beq	1720 <normal_scanHexCharRef+0x90>
    16fc:	cmp	ip, #24
    1700:	beq	1718 <normal_scanHexCharRef+0x88>
    1704:	cmp	ip, #25
    1708:	beq	1718 <normal_scanHexCharRef+0x88>
    170c:	str	r4, [r3]
    1710:	mov	r0, #0
    1714:	b	1734 <normal_scanHexCharRef+0xa4>
    1718:	add	r4, r4, #1
    171c:	b	16dc <normal_scanHexCharRef+0x4c>
    1720:	add	r0, r4, #1
    1724:	str	r0, [r3]
    1728:	mov	r0, #10
    172c:	b	1734 <normal_scanHexCharRef+0xa4>
    1730:	mvn	r0, #0
    1734:	ldr	r4, [sp, #8]
    1738:	ldr	lr, [sp, #4]
    173c:	add	sp, sp, #16
    1740:	bx	lr

00001744 <normal_scanCharRef>:
    1744:	mov	ip, sp
    1748:	sub	sp, sp, #16
    174c:	str	ip, [sp]
    1750:	str	lr, [sp, #4]
    1754:	str	r4, [sp, #8]
    1758:	cmp	r1, r2
    175c:	beq	17ec <normal_scanCharRef+0xa8>
    1760:	ldrb	ip, [r1]
    1764:	cmp	ip, #120	; 0x78
    1768:	bne	1778 <normal_scanCharRef+0x34>
    176c:	add	r1, r1, #1
    1770:	bl	1690 <normal_scanHexCharRef>
    1774:	b	17f0 <normal_scanCharRef+0xac>
    1778:	ldrb	ip, [r1]
    177c:	and	ip, ip, #255	; 0xff
    1780:	add	ip, r0, ip
    1784:	ldrb	ip, [ip, #76]	; 0x4c
    1788:	cmp	ip, #25
    178c:	beq	179c <normal_scanCharRef+0x58>
    1790:	str	r1, [r3]
    1794:	mov	r0, #0
    1798:	b	17f0 <normal_scanCharRef+0xac>
    179c:	add	r4, r1, #1
    17a0:	cmp	r4, r2
    17a4:	beq	17ec <normal_scanCharRef+0xa8>
    17a8:	ldrb	ip, [r4]
    17ac:	and	r1, ip, #255	; 0xff
    17b0:	add	r1, r0, r1
    17b4:	ldrb	ip, [r1, #76]	; 0x4c
    17b8:	cmp	ip, #18
    17bc:	beq	17dc <normal_scanCharRef+0x98>
    17c0:	cmp	ip, #25
    17c4:	beq	17d4 <normal_scanCharRef+0x90>
    17c8:	str	r4, [r3]
    17cc:	mov	r0, #0
    17d0:	b	17f0 <normal_scanCharRef+0xac>
    17d4:	add	r4, r4, #1
    17d8:	b	17a0 <normal_scanCharRef+0x5c>
    17dc:	add	ip, r4, #1
    17e0:	str	ip, [r3]
    17e4:	mov	r0, #10
    17e8:	b	17f0 <normal_scanCharRef+0xac>
    17ec:	mvn	r0, #0
    17f0:	ldr	r4, [sp, #8]
    17f4:	ldr	lr, [sp, #4]
    17f8:	add	sp, sp, #16
    17fc:	bx	lr

00001800 <normal_scanRef>:
    1800:	mov	ip, sp
    1804:	sub	sp, sp, #32
    1808:	str	ip, [sp]
    180c:	str	lr, [sp, #4]
    1810:	str	r4, [sp, #8]
    1814:	str	r5, [sp, #12]
    1818:	str	r6, [sp, #16]
    181c:	str	r7, [sp, #20]
    1820:	str	r8, [sp, #24]
    1824:	mov	r4, r3
    1828:	mov	r5, r2
    182c:	mov	r7, r1
    1830:	mov	r6, r0
    1834:	cmp	r7, r5
    1838:	bne	1844 <normal_scanRef+0x44>
    183c:	mvn	r0, #0
    1840:	b	1b30 <normal_scanRef+0x330>
    1844:	ldrb	r1, [r7]
    1848:	and	r2, r1, #255	; 0xff
    184c:	add	r0, r6, r2
    1850:	ldrb	r1, [r0, #76]	; 0x4c
    1854:	cmp	r1, #19
    1858:	bcs	1934 <normal_scanRef+0x134>
    185c:	cmp	r1, #5
    1860:	beq	18f4 <normal_scanRef+0xf4>
    1864:	cmp	r1, #6
    1868:	beq	18b4 <normal_scanRef+0xb4>
    186c:	cmp	r1, #7
    1870:	bne	1990 <normal_scanRef+0x190>
    1874:	sub	ip, r5, r7
    1878:	cmp	ip, #4
    187c:	bge	1888 <normal_scanRef+0x88>
    1880:	mvn	r0, #1
    1884:	b	1b30 <normal_scanRef+0x330>
    1888:	ldr	ip, [r6, #352]	; 0x160
    188c:	mov	r1, r7
    1890:	mov	r0, r6
    1894:	blx	ip
    1898:	cmp	r0, #0
    189c:	bne	18ac <normal_scanRef+0xac>
    18a0:	str	r7, [r4]
    18a4:	mov	r0, #0
    18a8:	b	1b30 <normal_scanRef+0x330>
    18ac:	add	r7, r7, #4
    18b0:	b	19a0 <normal_scanRef+0x1a0>
    18b4:	sub	r0, r5, r7
    18b8:	cmp	r0, #3
    18bc:	bge	18c8 <normal_scanRef+0xc8>
    18c0:	mvn	r0, #1
    18c4:	b	1b30 <normal_scanRef+0x330>
    18c8:	ldr	ip, [r6, #348]	; 0x15c
    18cc:	mov	r1, r7
    18d0:	mov	r0, r6
    18d4:	blx	ip
    18d8:	cmp	r0, #0
    18dc:	bne	18ec <normal_scanRef+0xec>
    18e0:	str	r7, [r4]
    18e4:	mov	r0, #0
    18e8:	b	1b30 <normal_scanRef+0x330>
    18ec:	add	r7, r7, #3
    18f0:	b	19a0 <normal_scanRef+0x1a0>
    18f4:	sub	ip, r5, r7
    18f8:	cmp	ip, #2
    18fc:	bge	1908 <normal_scanRef+0x108>
    1900:	mvn	r0, #1
    1904:	b	1b30 <normal_scanRef+0x330>
    1908:	ldr	ip, [r6, #344]	; 0x158
    190c:	mov	r1, r7
    1910:	mov	r0, r6
    1914:	blx	ip
    1918:	cmp	r0, #0
    191c:	bne	192c <normal_scanRef+0x12c>
    1920:	str	r7, [r4]
    1924:	mov	r0, #0
    1928:	b	1b30 <normal_scanRef+0x330>
    192c:	add	r7, r7, #2
    1930:	b	19a0 <normal_scanRef+0x1a0>
    1934:	cmp	r1, #24
    1938:	bcs	1968 <normal_scanRef+0x168>
    193c:	cmp	r1, #19
    1940:	beq	1950 <normal_scanRef+0x150>
    1944:	cmp	r1, #22
    1948:	beq	199c <normal_scanRef+0x19c>
    194c:	b	1990 <normal_scanRef+0x190>
    1950:	add	r1, r7, #1
    1954:	mov	r3, r4
    1958:	mov	r2, r5
    195c:	mov	r0, r6
    1960:	bl	1744 <normal_scanCharRef>
    1964:	b	1b30 <normal_scanRef+0x330>
    1968:	cmp	r1, #24
    196c:	beq	199c <normal_scanRef+0x19c>
    1970:	cmp	r1, #29
    1974:	bne	1990 <normal_scanRef+0x190>
    1978:	mov	r1, #1
    197c:	cmp	r1, #0
    1980:	beq	199c <normal_scanRef+0x19c>
    1984:	str	r7, [r4]
    1988:	mov	r0, #0
    198c:	b	1b30 <normal_scanRef+0x330>
    1990:	str	r7, [r4]
    1994:	mov	r0, #0
    1998:	b	1b30 <normal_scanRef+0x330>
    199c:	add	r7, r7, #1
    19a0:	cmp	r7, r5
    19a4:	beq	1b2c <normal_scanRef+0x32c>
    19a8:	ldrb	r0, [r7]
    19ac:	and	r2, r0, #255	; 0xff
    19b0:	add	r0, r6, r2
    19b4:	ldrb	ip, [r0, #76]	; 0x4c
    19b8:	sub	r1, ip, #5
    19bc:	cmp	r1, #25
    19c0:	bcs	1b20 <normal_scanRef+0x320>
    19c4:	add	pc, pc, r1, lsl #2
    19c8:	nop	{0}
    19cc:	b	1a50 <normal_scanRef+0x250>
    19d0:	b	1a90 <normal_scanRef+0x290>
    19d4:	b	1ad0 <normal_scanRef+0x2d0>
    19d8:	b	1b20 <normal_scanRef+0x320>
    19dc:	b	1b20 <normal_scanRef+0x320>
    19e0:	b	1b20 <normal_scanRef+0x320>
    19e4:	b	1b20 <normal_scanRef+0x320>
    19e8:	b	1b20 <normal_scanRef+0x320>
    19ec:	b	1b20 <normal_scanRef+0x320>
    19f0:	b	1b20 <normal_scanRef+0x320>
    19f4:	b	1b20 <normal_scanRef+0x320>
    19f8:	b	1b20 <normal_scanRef+0x320>
    19fc:	b	1b20 <normal_scanRef+0x320>
    1a00:	b	1b10 <normal_scanRef+0x310>
    1a04:	b	1b20 <normal_scanRef+0x320>
    1a08:	b	1b20 <normal_scanRef+0x320>
    1a0c:	b	1b20 <normal_scanRef+0x320>
    1a10:	b	1a48 <normal_scanRef+0x248>
    1a14:	b	1b20 <normal_scanRef+0x320>
    1a18:	b	1a48 <normal_scanRef+0x248>
    1a1c:	b	1a48 <normal_scanRef+0x248>
    1a20:	b	1a48 <normal_scanRef+0x248>
    1a24:	b	1a48 <normal_scanRef+0x248>
    1a28:	b	1b20 <normal_scanRef+0x320>
    1a2c:	b	1a30 <normal_scanRef+0x230>
    1a30:	mov	r2, #1
    1a34:	cmp	r2, #0
    1a38:	beq	1a48 <normal_scanRef+0x248>
    1a3c:	str	r7, [r4]
    1a40:	mov	r0, #0
    1a44:	b	1b30 <normal_scanRef+0x330>
    1a48:	add	r7, r7, #1
    1a4c:	b	19a0 <normal_scanRef+0x1a0>
    1a50:	sub	r2, r5, r7
    1a54:	cmp	r2, #2
    1a58:	bge	1a64 <normal_scanRef+0x264>
    1a5c:	mvn	r0, #1
    1a60:	b	1b30 <normal_scanRef+0x330>
    1a64:	ldr	ip, [r6, #332]	; 0x14c
    1a68:	mov	r1, r7
    1a6c:	mov	r0, r6
    1a70:	blx	ip
    1a74:	cmp	r0, #0
    1a78:	bne	1a88 <normal_scanRef+0x288>
    1a7c:	str	r7, [r4]
    1a80:	mov	r0, #0
    1a84:	b	1b30 <normal_scanRef+0x330>
    1a88:	add	r7, r7, #2
    1a8c:	b	19a0 <normal_scanRef+0x1a0>
    1a90:	sub	r2, r5, r7
    1a94:	cmp	r2, #3
    1a98:	bge	1aa4 <normal_scanRef+0x2a4>
    1a9c:	mvn	r0, #1
    1aa0:	b	1b30 <normal_scanRef+0x330>
    1aa4:	ldr	ip, [r6, #336]	; 0x150
    1aa8:	mov	r1, r7
    1aac:	mov	r0, r6
    1ab0:	blx	ip
    1ab4:	cmp	r0, #0
    1ab8:	bne	1ac8 <normal_scanRef+0x2c8>
    1abc:	str	r7, [r4]
    1ac0:	mov	r0, #0
    1ac4:	b	1b30 <normal_scanRef+0x330>
    1ac8:	add	r7, r7, #3
    1acc:	b	19a0 <normal_scanRef+0x1a0>
    1ad0:	sub	r0, r5, r7
    1ad4:	cmp	r0, #4
    1ad8:	bge	1ae4 <normal_scanRef+0x2e4>
    1adc:	mvn	r0, #1
    1ae0:	b	1b30 <normal_scanRef+0x330>
    1ae4:	ldr	r8, [r6, #340]	; 0x154
    1ae8:	mov	r1, r7
    1aec:	mov	r0, r6
    1af0:	blx	r8
    1af4:	cmp	r0, #0
    1af8:	bne	1b08 <normal_scanRef+0x308>
    1afc:	str	r7, [r4]
    1b00:	mov	r0, #0
    1b04:	b	1b30 <normal_scanRef+0x330>
    1b08:	add	r7, r7, #4
    1b0c:	b	19a0 <normal_scanRef+0x1a0>
    1b10:	add	r3, r7, #1
    1b14:	str	r3, [r4]
    1b18:	mov	r0, #9
    1b1c:	b	1b30 <normal_scanRef+0x330>
    1b20:	str	r7, [r4]
    1b24:	mov	r0, #0
    1b28:	b	1b30 <normal_scanRef+0x330>
    1b2c:	mvn	r0, #0
    1b30:	ldr	r4, [sp, #8]
    1b34:	ldr	r5, [sp, #12]
    1b38:	ldr	r6, [sp, #16]
    1b3c:	ldr	r7, [sp, #20]
    1b40:	ldr	r8, [sp, #24]
    1b44:	ldr	lr, [sp, #4]
    1b48:	add	sp, sp, #32
    1b4c:	bx	lr

00001b50 <normal_scanAtts>:
    1b50:	mov	ip, sp
    1b54:	sub	sp, sp, #40	; 0x28
    1b58:	str	ip, [sp]
    1b5c:	str	lr, [sp, #4]
    1b60:	str	r4, [sp, #8]
    1b64:	str	r5, [sp, #12]
    1b68:	str	r6, [sp, #16]
    1b6c:	str	r7, [sp, #20]
    1b70:	str	r8, [sp, #24]
    1b74:	mov	r7, r3
    1b78:	mov	r5, r2
    1b7c:	mov	r4, r0
    1b80:	str	r1, [sp, #32]
    1b84:	mov	r6, #0
    1b88:	ldr	ip, [sp, #32]
    1b8c:	cmp	ip, r5
    1b90:	beq	2464 <normal_scanAtts+0x914>
    1b94:	ldr	r2, [sp, #32]
    1b98:	ldrb	ip, [r2]
    1b9c:	and	r2, ip, #255	; 0xff
    1ba0:	add	r3, r4, r2
    1ba4:	ldrb	ip, [r3, #76]	; 0x4c
    1ba8:	sub	r1, ip, #5
    1bac:	cmp	r1, #25
    1bb0:	bcs	2454 <normal_scanAtts+0x904>
    1bb4:	add	pc, pc, r1, lsl #2
    1bb8:	nop	{0}
    1bbc:	b	1c4c <normal_scanAtts+0xfc>
    1bc0:	b	1c9c <normal_scanAtts+0x14c>
    1bc4:	b	1cec <normal_scanAtts+0x19c>
    1bc8:	b	2454 <normal_scanAtts+0x904>
    1bcc:	b	1ef0 <normal_scanAtts+0x3a0>
    1bd0:	b	1ef0 <normal_scanAtts+0x3a0>
    1bd4:	b	2454 <normal_scanAtts+0x904>
    1bd8:	b	2454 <normal_scanAtts+0x904>
    1bdc:	b	2454 <normal_scanAtts+0x904>
    1be0:	b	1f54 <normal_scanAtts+0x404>
    1be4:	b	2454 <normal_scanAtts+0x904>
    1be8:	b	2454 <normal_scanAtts+0x904>
    1bec:	b	2454 <normal_scanAtts+0x904>
    1bf0:	b	2454 <normal_scanAtts+0x904>
    1bf4:	b	2454 <normal_scanAtts+0x904>
    1bf8:	b	2454 <normal_scanAtts+0x904>
    1bfc:	b	1ef0 <normal_scanAtts+0x3a0>
    1c00:	b	1c3c <normal_scanAtts+0xec>
    1c04:	b	1d3c <normal_scanAtts+0x1ec>
    1c08:	b	1c3c <normal_scanAtts+0xec>
    1c0c:	b	1c3c <normal_scanAtts+0xec>
    1c10:	b	1c3c <normal_scanAtts+0xec>
    1c14:	b	1c3c <normal_scanAtts+0xec>
    1c18:	b	2454 <normal_scanAtts+0x904>
    1c1c:	b	1c20 <normal_scanAtts+0xd0>
    1c20:	mov	r2, #1
    1c24:	cmp	r2, #0
    1c28:	beq	1c3c <normal_scanAtts+0xec>
    1c2c:	ldr	r0, [sp, #32]
    1c30:	str	r0, [r7]
    1c34:	mov	r0, #0
    1c38:	b	2468 <normal_scanAtts+0x918>
    1c3c:	ldr	r2, [sp, #32]
    1c40:	add	r2, r2, #1
    1c44:	str	r2, [sp, #32]
    1c48:	b	1b88 <normal_scanAtts+0x38>
    1c4c:	ldr	r1, [sp, #32]
    1c50:	sub	r2, r5, r1
    1c54:	cmp	r2, #2
    1c58:	bge	1c64 <normal_scanAtts+0x114>
    1c5c:	mvn	r0, #1
    1c60:	b	2468 <normal_scanAtts+0x918>
    1c64:	ldr	ip, [r4, #332]	; 0x14c
    1c68:	ldr	r1, [sp, #32]
    1c6c:	mov	r0, r4
    1c70:	blx	ip
    1c74:	cmp	r0, #0
    1c78:	bne	1c8c <normal_scanAtts+0x13c>
    1c7c:	ldr	ip, [sp, #32]
    1c80:	str	ip, [r7]
    1c84:	mov	r0, #0
    1c88:	b	2468 <normal_scanAtts+0x918>
    1c8c:	ldr	r1, [sp, #32]
    1c90:	add	r1, r1, #2
    1c94:	str	r1, [sp, #32]
    1c98:	b	1b88 <normal_scanAtts+0x38>
    1c9c:	ldr	r0, [sp, #32]
    1ca0:	sub	r1, r5, r0
    1ca4:	cmp	r1, #3
    1ca8:	bge	1cb4 <normal_scanAtts+0x164>
    1cac:	mvn	r0, #1
    1cb0:	b	2468 <normal_scanAtts+0x918>
    1cb4:	ldr	ip, [r4, #336]	; 0x150
    1cb8:	ldr	r1, [sp, #32]
    1cbc:	mov	r0, r4
    1cc0:	blx	ip
    1cc4:	cmp	r0, #0
    1cc8:	bne	1cdc <normal_scanAtts+0x18c>
    1ccc:	ldr	r1, [sp, #32]
    1cd0:	str	r1, [r7]
    1cd4:	mov	r0, #0
    1cd8:	b	2468 <normal_scanAtts+0x918>
    1cdc:	ldr	r0, [sp, #32]
    1ce0:	add	r3, r0, #3
    1ce4:	str	r3, [sp, #32]
    1ce8:	b	1b88 <normal_scanAtts+0x38>
    1cec:	ldr	r0, [sp, #32]
    1cf0:	sub	r0, r5, r0
    1cf4:	cmp	r0, #4
    1cf8:	bge	1d04 <normal_scanAtts+0x1b4>
    1cfc:	mvn	r0, #1
    1d00:	b	2468 <normal_scanAtts+0x918>
    1d04:	ldr	ip, [r4, #340]	; 0x154
    1d08:	ldr	r1, [sp, #32]
    1d0c:	mov	r0, r4
    1d10:	blx	ip
    1d14:	cmp	r0, #0
    1d18:	bne	1d2c <normal_scanAtts+0x1dc>
    1d1c:	ldr	r3, [sp, #32]
    1d20:	str	r3, [r7]
    1d24:	mov	r0, #0
    1d28:	b	2468 <normal_scanAtts+0x918>
    1d2c:	ldr	r3, [sp, #32]
    1d30:	add	r3, r3, #4
    1d34:	str	r3, [sp, #32]
    1d38:	b	1b88 <normal_scanAtts+0x38>
    1d3c:	cmp	r6, #0
    1d40:	beq	1d54 <normal_scanAtts+0x204>
    1d44:	ldr	r2, [sp, #32]
    1d48:	str	r2, [r7]
    1d4c:	mov	r0, #0
    1d50:	b	2468 <normal_scanAtts+0x918>
    1d54:	mov	r6, #1
    1d58:	ldr	r2, [sp, #32]
    1d5c:	add	ip, r2, #1
    1d60:	str	ip, [sp, #32]
    1d64:	ldr	ip, [sp, #32]
    1d68:	cmp	ip, r5
    1d6c:	bne	1d78 <normal_scanAtts+0x228>
    1d70:	mvn	r0, #0
    1d74:	b	2468 <normal_scanAtts+0x918>
    1d78:	ldr	ip, [sp, #32]
    1d7c:	ldrb	r2, [ip]
    1d80:	and	r2, r2, #255	; 0xff
    1d84:	add	r0, r4, r2
    1d88:	ldrb	ip, [r0, #76]	; 0x4c
    1d8c:	cmp	ip, #22
    1d90:	bcs	1e9c <normal_scanAtts+0x34c>
    1d94:	cmp	ip, #5
    1d98:	beq	1e4c <normal_scanAtts+0x2fc>
    1d9c:	cmp	ip, #6
    1da0:	beq	1dfc <normal_scanAtts+0x2ac>
    1da4:	cmp	ip, #7
    1da8:	bne	1ed0 <normal_scanAtts+0x380>
    1dac:	ldr	r3, [sp, #32]
    1db0:	sub	r2, r5, r3
    1db4:	cmp	r2, #4
    1db8:	bge	1dc4 <normal_scanAtts+0x274>
    1dbc:	mvn	r0, #1
    1dc0:	b	2468 <normal_scanAtts+0x918>
    1dc4:	ldr	ip, [r4, #352]	; 0x160
    1dc8:	ldr	r1, [sp, #32]
    1dcc:	mov	r0, r4
    1dd0:	blx	ip
    1dd4:	cmp	r0, #0
    1dd8:	bne	1dec <normal_scanAtts+0x29c>
    1ddc:	ldr	r3, [sp, #32]
    1de0:	str	r3, [r7]
    1de4:	mov	r0, #0
    1de8:	b	2468 <normal_scanAtts+0x918>
    1dec:	ldr	r2, [sp, #32]
    1df0:	add	ip, r2, #4
    1df4:	str	ip, [sp, #32]
    1df8:	b	1b88 <normal_scanAtts+0x38>
    1dfc:	ldr	ip, [sp, #32]
    1e00:	sub	r0, r5, ip
    1e04:	cmp	r0, #3
    1e08:	bge	1e14 <normal_scanAtts+0x2c4>
    1e0c:	mvn	r0, #1
    1e10:	b	2468 <normal_scanAtts+0x918>
    1e14:	ldr	ip, [r4, #348]	; 0x15c
    1e18:	ldr	r1, [sp, #32]
    1e1c:	mov	r0, r4
    1e20:	blx	ip
    1e24:	cmp	r0, #0
    1e28:	bne	1e3c <normal_scanAtts+0x2ec>
    1e2c:	ldr	r2, [sp, #32]
    1e30:	str	r2, [r7]
    1e34:	mov	r0, #0
    1e38:	b	2468 <normal_scanAtts+0x918>
    1e3c:	ldr	r0, [sp, #32]
    1e40:	add	r0, r0, #3
    1e44:	str	r0, [sp, #32]
    1e48:	b	1b88 <normal_scanAtts+0x38>
    1e4c:	ldr	ip, [sp, #32]
    1e50:	sub	ip, r5, ip
    1e54:	cmp	ip, #2
    1e58:	bge	1e64 <normal_scanAtts+0x314>
    1e5c:	mvn	r0, #1
    1e60:	b	2468 <normal_scanAtts+0x918>
    1e64:	ldr	ip, [r4, #344]	; 0x158
    1e68:	ldr	r1, [sp, #32]
    1e6c:	mov	r0, r4
    1e70:	blx	ip
    1e74:	cmp	r0, #0
    1e78:	bne	1e8c <normal_scanAtts+0x33c>
    1e7c:	ldr	r2, [sp, #32]
    1e80:	str	r2, [r7]
    1e84:	mov	r0, #0
    1e88:	b	2468 <normal_scanAtts+0x918>
    1e8c:	ldr	r3, [sp, #32]
    1e90:	add	r0, r3, #2
    1e94:	str	r0, [sp, #32]
    1e98:	b	1b88 <normal_scanAtts+0x38>
    1e9c:	cmp	ip, #22
    1ea0:	beq	1ee0 <normal_scanAtts+0x390>
    1ea4:	cmp	ip, #24
    1ea8:	beq	1ee0 <normal_scanAtts+0x390>
    1eac:	cmp	ip, #29
    1eb0:	bne	1ed0 <normal_scanAtts+0x380>
    1eb4:	mov	r0, #1
    1eb8:	cmp	r0, #0
    1ebc:	beq	1ee0 <normal_scanAtts+0x390>
    1ec0:	ldr	r3, [sp, #32]
    1ec4:	str	r3, [r7]
    1ec8:	mov	r0, #0
    1ecc:	b	2468 <normal_scanAtts+0x918>
    1ed0:	ldr	r1, [sp, #32]
    1ed4:	str	r1, [r7]
    1ed8:	mov	r0, #0
    1edc:	b	2468 <normal_scanAtts+0x918>
    1ee0:	ldr	r1, [sp, #32]
    1ee4:	add	r2, r1, #1
    1ee8:	str	r2, [sp, #32]
    1eec:	b	1b88 <normal_scanAtts+0x38>
    1ef0:	ldr	ip, [sp, #32]
    1ef4:	add	r1, ip, #1
    1ef8:	str	r1, [sp, #32]
    1efc:	ldr	r0, [sp, #32]
    1f00:	cmp	r0, r5
    1f04:	bne	1f10 <normal_scanAtts+0x3c0>
    1f08:	mvn	r0, #0
    1f0c:	b	2468 <normal_scanAtts+0x918>
    1f10:	ldr	r3, [sp, #32]
    1f14:	ldrb	r3, [r3]
    1f18:	and	r0, r3, #255	; 0xff
    1f1c:	add	ip, r4, r0
    1f20:	ldrb	r1, [ip, #76]	; 0x4c
    1f24:	cmp	r1, #14
    1f28:	beq	1f54 <normal_scanAtts+0x404>
    1f2c:	cmp	r1, #9
    1f30:	beq	1ef0 <normal_scanAtts+0x3a0>
    1f34:	cmp	r1, #10
    1f38:	beq	1ef0 <normal_scanAtts+0x3a0>
    1f3c:	cmp	r1, #21
    1f40:	beq	1ef0 <normal_scanAtts+0x3a0>
    1f44:	ldr	r2, [sp, #32]
    1f48:	str	r2, [r7]
    1f4c:	mov	r0, #0
    1f50:	b	2468 <normal_scanAtts+0x918>
    1f54:	mov	r6, #0
    1f58:	ldr	r0, [sp, #32]
    1f5c:	add	r0, r0, #1
    1f60:	str	r0, [sp, #32]
    1f64:	ldr	r1, [sp, #32]
    1f68:	cmp	r1, r5
    1f6c:	bne	1f78 <normal_scanAtts+0x428>
    1f70:	mvn	r0, #0
    1f74:	b	2468 <normal_scanAtts+0x918>
    1f78:	ldr	r3, [sp, #32]
    1f7c:	ldrb	r3, [r3]
    1f80:	and	r1, r3, #255	; 0xff
    1f84:	add	r3, r4, r1
    1f88:	ldrb	r8, [r3, #76]	; 0x4c
    1f8c:	cmp	r8, #12
    1f90:	beq	1fa4 <normal_scanAtts+0x454>
    1f94:	cmp	r8, #13
    1f98:	moveq	r3, #1
    1f9c:	movne	r3, #0
    1fa0:	b	1fa8 <normal_scanAtts+0x458>
    1fa4:	mov	r3, #1
    1fa8:	cmp	r3, #0
    1fac:	bne	1fd8 <normal_scanAtts+0x488>
    1fb0:	cmp	r8, #9
    1fb4:	beq	1f58 <normal_scanAtts+0x408>
    1fb8:	cmp	r8, #10
    1fbc:	beq	1f58 <normal_scanAtts+0x408>
    1fc0:	cmp	r8, #21
    1fc4:	beq	1f58 <normal_scanAtts+0x408>
    1fc8:	ldr	r3, [sp, #32]
    1fcc:	str	r3, [r7]
    1fd0:	mov	r0, #0
    1fd4:	b	2468 <normal_scanAtts+0x918>
    1fd8:	ldr	r2, [sp, #32]
    1fdc:	add	r2, r2, #1
    1fe0:	str	r2, [sp, #32]
    1fe4:	ldr	r2, [sp, #32]
    1fe8:	cmp	r2, r5
    1fec:	bne	1ff8 <normal_scanAtts+0x4a8>
    1ff0:	mvn	r0, #0
    1ff4:	b	2468 <normal_scanAtts+0x918>
    1ff8:	ldr	r2, [sp, #32]
    1ffc:	ldrb	r1, [r2]
    2000:	and	ip, r1, #255	; 0xff
    2004:	add	r3, r4, ip
    2008:	ldrb	r0, [r3, #76]	; 0x4c
    200c:	cmp	r0, r8
    2010:	beq	219c <normal_scanAtts+0x64c>
    2014:	cmp	r0, #9
    2018:	bcs	218c <normal_scanAtts+0x63c>
    201c:	add	pc, pc, r0, lsl #2
    2020:	nop	{0}
    2024:	b	2138 <normal_scanAtts+0x5e8>
    2028:	b	2138 <normal_scanAtts+0x5e8>
    202c:	b	217c <normal_scanAtts+0x62c>
    2030:	b	2148 <normal_scanAtts+0x5f8>
    2034:	b	218c <normal_scanAtts+0x63c>
    2038:	b	2048 <normal_scanAtts+0x4f8>
    203c:	b	2098 <normal_scanAtts+0x548>
    2040:	b	20e8 <normal_scanAtts+0x598>
    2044:	b	2138 <normal_scanAtts+0x5e8>
    2048:	ldr	r0, [sp, #32]
    204c:	sub	r0, r5, r0
    2050:	cmp	r0, #2
    2054:	bge	2060 <normal_scanAtts+0x510>
    2058:	mvn	r0, #1
    205c:	b	2468 <normal_scanAtts+0x918>
    2060:	ldr	ip, [r4, #356]	; 0x164
    2064:	ldr	r1, [sp, #32]
    2068:	mov	r0, r4
    206c:	blx	ip
    2070:	cmp	r0, #0
    2074:	beq	2088 <normal_scanAtts+0x538>
    2078:	ldr	ip, [sp, #32]
    207c:	str	ip, [r7]
    2080:	mov	r0, #0
    2084:	b	2468 <normal_scanAtts+0x918>
    2088:	ldr	r3, [sp, #32]
    208c:	add	r0, r3, #2
    2090:	str	r0, [sp, #32]
    2094:	b	1fe4 <normal_scanAtts+0x494>
    2098:	ldr	r0, [sp, #32]
    209c:	sub	r3, r5, r0
    20a0:	cmp	r3, #3
    20a4:	bge	20b0 <normal_scanAtts+0x560>
    20a8:	mvn	r0, #1
    20ac:	b	2468 <normal_scanAtts+0x918>
    20b0:	ldr	ip, [r4, #360]	; 0x168
    20b4:	ldr	r1, [sp, #32]
    20b8:	mov	r0, r4
    20bc:	blx	ip
    20c0:	cmp	r0, #0
    20c4:	beq	20d8 <normal_scanAtts+0x588>
    20c8:	ldr	r3, [sp, #32]
    20cc:	str	r3, [r7]
    20d0:	mov	r0, #0
    20d4:	b	2468 <normal_scanAtts+0x918>
    20d8:	ldr	r2, [sp, #32]
    20dc:	add	ip, r2, #3
    20e0:	str	ip, [sp, #32]
    20e4:	b	1fe4 <normal_scanAtts+0x494>
    20e8:	ldr	r1, [sp, #32]
    20ec:	sub	r2, r5, r1
    20f0:	cmp	r2, #4
    20f4:	bge	2100 <normal_scanAtts+0x5b0>
    20f8:	mvn	r0, #1
    20fc:	b	2468 <normal_scanAtts+0x918>
    2100:	ldr	ip, [r4, #364]	; 0x16c
    2104:	ldr	r1, [sp, #32]
    2108:	mov	r0, r4
    210c:	blx	ip
    2110:	cmp	r0, #0
    2114:	beq	2128 <normal_scanAtts+0x5d8>
    2118:	ldr	r3, [sp, #32]
    211c:	str	r3, [r7]
    2120:	mov	r0, #0
    2124:	b	2468 <normal_scanAtts+0x918>
    2128:	ldr	ip, [sp, #32]
    212c:	add	r3, ip, #4
    2130:	str	r3, [sp, #32]
    2134:	b	1fe4 <normal_scanAtts+0x494>
    2138:	ldr	r1, [sp, #32]
    213c:	str	r1, [r7]
    2140:	mov	r0, #0
    2144:	b	2468 <normal_scanAtts+0x918>
    2148:	ldr	r1, [sp, #32]
    214c:	add	r1, r1, #1
    2150:	add	r3, sp, #32
    2154:	mov	r2, r5
    2158:	mov	r0, r4
    215c:	bl	1800 <normal_scanRef>
    2160:	cmp	r0, #0
    2164:	bgt	1fe4 <normal_scanAtts+0x494>
    2168:	cmp	r0, #0
    216c:	bne	2468 <normal_scanAtts+0x918>
    2170:	ldr	ip, [sp, #32]
    2174:	str	ip, [r7]
    2178:	b	2468 <normal_scanAtts+0x918>
    217c:	ldr	r1, [sp, #32]
    2180:	str	r1, [r7]
    2184:	mov	r0, #0
    2188:	b	2468 <normal_scanAtts+0x918>
    218c:	ldr	r1, [sp, #32]
    2190:	add	r3, r1, #1
    2194:	str	r3, [sp, #32]
    2198:	b	1fe4 <normal_scanAtts+0x494>
    219c:	ldr	r2, [sp, #32]
    21a0:	add	r3, r2, #1
    21a4:	str	r3, [sp, #32]
    21a8:	ldr	r2, [sp, #32]
    21ac:	cmp	r2, r5
    21b0:	bne	21bc <normal_scanAtts+0x66c>
    21b4:	mvn	r0, #0
    21b8:	b	2468 <normal_scanAtts+0x918>
    21bc:	ldr	r1, [sp, #32]
    21c0:	ldrb	r0, [r1]
    21c4:	and	r1, r0, #255	; 0xff
    21c8:	add	r0, r4, r1
    21cc:	ldrb	ip, [r0, #76]	; 0x4c
    21d0:	cmp	ip, #11
    21d4:	bcs	21ec <normal_scanAtts+0x69c>
    21d8:	cmp	ip, #9
    21dc:	beq	2214 <normal_scanAtts+0x6c4>
    21e0:	cmp	ip, #10
    21e4:	beq	2214 <normal_scanAtts+0x6c4>
    21e8:	b	2204 <normal_scanAtts+0x6b4>
    21ec:	cmp	ip, #11
    21f0:	beq	2440 <normal_scanAtts+0x8f0>
    21f4:	cmp	ip, #17
    21f8:	beq	23ec <normal_scanAtts+0x89c>
    21fc:	cmp	ip, #21
    2200:	beq	2214 <normal_scanAtts+0x6c4>
    2204:	ldr	ip, [sp, #32]
    2208:	str	ip, [r7]
    220c:	mov	r0, #0
    2210:	b	2468 <normal_scanAtts+0x918>
    2214:	ldr	ip, [sp, #32]
    2218:	add	r3, ip, #1
    221c:	str	r3, [sp, #32]
    2220:	ldr	r3, [sp, #32]
    2224:	cmp	r3, r5
    2228:	bne	2234 <normal_scanAtts+0x6e4>
    222c:	mvn	r0, #0
    2230:	b	2468 <normal_scanAtts+0x918>
    2234:	ldr	r0, [sp, #32]
    2238:	ldrb	r2, [r0]
    223c:	and	ip, r2, #255	; 0xff
    2240:	add	r1, r4, ip
    2244:	ldrb	r2, [r1, #76]	; 0x4c
    2248:	sub	r1, r2, #5
    224c:	cmp	r1, #25
    2250:	bcs	23dc <normal_scanAtts+0x88c>
    2254:	add	pc, pc, r1, lsl #2
    2258:	nop	{0}
    225c:	b	22ec <normal_scanAtts+0x79c>
    2260:	b	233c <normal_scanAtts+0x7ec>
    2264:	b	238c <normal_scanAtts+0x83c>
    2268:	b	23dc <normal_scanAtts+0x88c>
    226c:	b	2214 <normal_scanAtts+0x6c4>
    2270:	b	2214 <normal_scanAtts+0x6c4>
    2274:	b	2440 <normal_scanAtts+0x8f0>
    2278:	b	23dc <normal_scanAtts+0x88c>
    227c:	b	23dc <normal_scanAtts+0x88c>
    2280:	b	23dc <normal_scanAtts+0x88c>
    2284:	b	23dc <normal_scanAtts+0x88c>
    2288:	b	23dc <normal_scanAtts+0x88c>
    228c:	b	23ec <normal_scanAtts+0x89c>
    2290:	b	23dc <normal_scanAtts+0x88c>
    2294:	b	23dc <normal_scanAtts+0x88c>
    2298:	b	23dc <normal_scanAtts+0x88c>
    229c:	b	2214 <normal_scanAtts+0x6c4>
    22a0:	b	22dc <normal_scanAtts+0x78c>
    22a4:	b	23dc <normal_scanAtts+0x88c>
    22a8:	b	22dc <normal_scanAtts+0x78c>
    22ac:	b	23dc <normal_scanAtts+0x88c>
    22b0:	b	23dc <normal_scanAtts+0x88c>
    22b4:	b	23dc <normal_scanAtts+0x88c>
    22b8:	b	23dc <normal_scanAtts+0x88c>
    22bc:	b	22c0 <normal_scanAtts+0x770>
    22c0:	mov	ip, #1
    22c4:	cmp	ip, #0
    22c8:	beq	22dc <normal_scanAtts+0x78c>
    22cc:	ldr	r1, [sp, #32]
    22d0:	str	r1, [r7]
    22d4:	mov	r0, #0
    22d8:	b	2468 <normal_scanAtts+0x918>
    22dc:	ldr	r3, [sp, #32]
    22e0:	add	r1, r3, #1
    22e4:	str	r1, [sp, #32]
    22e8:	b	1b88 <normal_scanAtts+0x38>
    22ec:	ldr	r0, [sp, #32]
    22f0:	sub	r2, r5, r0
    22f4:	cmp	r2, #2
    22f8:	bge	2304 <normal_scanAtts+0x7b4>
    22fc:	mvn	r0, #1
    2300:	b	2468 <normal_scanAtts+0x918>
    2304:	ldr	ip, [r4, #344]	; 0x158
    2308:	ldr	r1, [sp, #32]
    230c:	mov	r0, r4
    2310:	blx	ip
    2314:	cmp	r0, #0
    2318:	bne	232c <normal_scanAtts+0x7dc>
    231c:	ldr	r2, [sp, #32]
    2320:	str	r2, [r7]
    2324:	mov	r0, #0
    2328:	b	2468 <normal_scanAtts+0x918>
    232c:	ldr	ip, [sp, #32]
    2330:	add	ip, ip, #2
    2334:	str	ip, [sp, #32]
    2338:	b	1b88 <normal_scanAtts+0x38>
    233c:	ldr	r3, [sp, #32]
    2340:	sub	ip, r5, r3
    2344:	cmp	ip, #3
    2348:	bge	2354 <normal_scanAtts+0x804>
    234c:	mvn	r0, #1
    2350:	b	2468 <normal_scanAtts+0x918>
    2354:	ldr	ip, [r4, #348]	; 0x15c
    2358:	ldr	r1, [sp, #32]
    235c:	mov	r0, r4
    2360:	blx	ip
    2364:	cmp	r0, #0
    2368:	bne	237c <normal_scanAtts+0x82c>
    236c:	ldr	r1, [sp, #32]
    2370:	str	r1, [r7]
    2374:	mov	r0, #0
    2378:	b	2468 <normal_scanAtts+0x918>
    237c:	ldr	ip, [sp, #32]
    2380:	add	ip, ip, #3
    2384:	str	ip, [sp, #32]
    2388:	b	1b88 <normal_scanAtts+0x38>
    238c:	ldr	r0, [sp, #32]
    2390:	sub	r3, r5, r0
    2394:	cmp	r3, #4
    2398:	bge	23a4 <normal_scanAtts+0x854>
    239c:	mvn	r0, #1
    23a0:	b	2468 <normal_scanAtts+0x918>
    23a4:	ldr	ip, [r4, #352]	; 0x160
    23a8:	ldr	r1, [sp, #32]
    23ac:	mov	r0, r4
    23b0:	blx	ip
    23b4:	cmp	r0, #0
    23b8:	bne	23cc <normal_scanAtts+0x87c>
    23bc:	ldr	ip, [sp, #32]
    23c0:	str	ip, [r7]
    23c4:	mov	r0, #0
    23c8:	b	2468 <normal_scanAtts+0x918>
    23cc:	ldr	ip, [sp, #32]
    23d0:	add	r1, ip, #4
    23d4:	str	r1, [sp, #32]
    23d8:	b	1b88 <normal_scanAtts+0x38>
    23dc:	ldr	r1, [sp, #32]
    23e0:	str	r1, [r7]
    23e4:	mov	r0, #0
    23e8:	b	2468 <normal_scanAtts+0x918>
    23ec:	ldr	r0, [sp, #32]
    23f0:	add	ip, r0, #1
    23f4:	str	ip, [sp, #32]
    23f8:	ldr	r2, [sp, #32]
    23fc:	cmp	r2, r5
    2400:	bne	240c <normal_scanAtts+0x8bc>
    2404:	mvn	r0, #0
    2408:	b	2468 <normal_scanAtts+0x918>
    240c:	ldr	r2, [sp, #32]
    2410:	ldrb	r3, [r2]
    2414:	cmp	r3, #62	; 0x3e
    2418:	beq	242c <normal_scanAtts+0x8dc>
    241c:	ldr	r3, [sp, #32]
    2420:	str	r3, [r7]
    2424:	mov	r0, #0
    2428:	b	2468 <normal_scanAtts+0x918>
    242c:	ldr	r1, [sp, #32]
    2430:	add	r1, r1, #1
    2434:	str	r1, [r7]
    2438:	mov	r0, #3
    243c:	b	2468 <normal_scanAtts+0x918>
    2440:	ldr	r3, [sp, #32]
    2444:	add	r0, r3, #1
    2448:	str	r0, [r7]
    244c:	mov	r0, #1
    2450:	b	2468 <normal_scanAtts+0x918>
    2454:	ldr	r2, [sp, #32]
    2458:	str	r2, [r7]
    245c:	mov	r0, #0
    2460:	b	2468 <normal_scanAtts+0x918>
    2464:	mvn	r0, #0
    2468:	ldr	r4, [sp, #8]
    246c:	ldr	r5, [sp, #12]
    2470:	ldr	r6, [sp, #16]
    2474:	ldr	r7, [sp, #20]
    2478:	ldr	r8, [sp, #24]
    247c:	ldr	lr, [sp, #4]
    2480:	add	sp, sp, #40	; 0x28
    2484:	bx	lr

00002488 <normal_scanLt>:
    2488:	mov	ip, sp
    248c:	sub	sp, sp, #32
    2490:	str	ip, [sp]
    2494:	str	lr, [sp, #4]
    2498:	str	r4, [sp, #8]
    249c:	str	r5, [sp, #12]
    24a0:	str	r6, [sp, #16]
    24a4:	str	r7, [sp, #20]
    24a8:	str	r8, [sp, #24]
    24ac:	str	r9, [sp, #28]
    24b0:	mov	r6, r3
    24b4:	mov	r7, r2
    24b8:	mov	r4, r1
    24bc:	mov	r5, r0
    24c0:	cmp	r4, r7
    24c4:	bne	24d0 <normal_scanLt+0x48>
    24c8:	mvn	r0, #0
    24cc:	b	2bb0 <normal_scanLt+0x728>
    24d0:	ldrb	ip, [r4]
    24d4:	and	r2, ip, #255	; 0xff
    24d8:	add	r3, r5, r2
    24dc:	ldrb	r1, [r3, #76]	; 0x4c
    24e0:	sub	ip, r1, #5
    24e4:	cmp	ip, #25
    24e8:	bcs	2ba8 <normal_scanLt+0x720>
    24ec:	add	pc, pc, ip, lsl #2
    24f0:	nop	{0}
    24f4:	b	2578 <normal_scanLt+0xf0>
    24f8:	b	25b8 <normal_scanLt+0x130>
    24fc:	b	25f8 <normal_scanLt+0x170>
    2500:	b	2ba8 <normal_scanLt+0x720>
    2504:	b	2ba8 <normal_scanLt+0x720>
    2508:	b	2ba8 <normal_scanLt+0x720>
    250c:	b	2ba8 <normal_scanLt+0x720>
    2510:	b	2ba8 <normal_scanLt+0x720>
    2514:	b	2ba8 <normal_scanLt+0x720>
    2518:	b	2ba8 <normal_scanLt+0x720>
    251c:	b	2b78 <normal_scanLt+0x6f0>
    2520:	b	2b08 <normal_scanLt+0x680>
    2524:	b	2b90 <normal_scanLt+0x708>
    2528:	b	2ba8 <normal_scanLt+0x720>
    252c:	b	2ba8 <normal_scanLt+0x720>
    2530:	b	2ba8 <normal_scanLt+0x720>
    2534:	b	2ba8 <normal_scanLt+0x720>
    2538:	b	2570 <normal_scanLt+0xe8>
    253c:	b	2ba8 <normal_scanLt+0x720>
    2540:	b	2570 <normal_scanLt+0xe8>
    2544:	b	2ba8 <normal_scanLt+0x720>
    2548:	b	2ba8 <normal_scanLt+0x720>
    254c:	b	2ba8 <normal_scanLt+0x720>
    2550:	b	2ba8 <normal_scanLt+0x720>
    2554:	b	2558 <normal_scanLt+0xd0>
    2558:	mov	r0, #1
    255c:	cmp	r0, #0
    2560:	beq	2570 <normal_scanLt+0xe8>
    2564:	str	r4, [r6]
    2568:	mov	r0, #0
    256c:	b	2bb0 <normal_scanLt+0x728>
    2570:	add	r4, r4, #1
    2574:	b	2634 <normal_scanLt+0x1ac>
    2578:	sub	r3, r7, r4
    257c:	cmp	r3, #2
    2580:	bge	258c <normal_scanLt+0x104>
    2584:	mvn	r0, #1
    2588:	b	2bb0 <normal_scanLt+0x728>
    258c:	ldr	ip, [r5, #344]	; 0x158
    2590:	mov	r1, r4
    2594:	mov	r0, r5
    2598:	blx	ip
    259c:	cmp	r0, #0
    25a0:	bne	25b0 <normal_scanLt+0x128>
    25a4:	str	r4, [r6]
    25a8:	mov	r0, #0
    25ac:	b	2bb0 <normal_scanLt+0x728>
    25b0:	add	r4, r4, #2
    25b4:	b	2634 <normal_scanLt+0x1ac>
    25b8:	sub	r2, r7, r4
    25bc:	cmp	r2, #3
    25c0:	bge	25cc <normal_scanLt+0x144>
    25c4:	mvn	r0, #1
    25c8:	b	2bb0 <normal_scanLt+0x728>
    25cc:	ldr	ip, [r5, #348]	; 0x15c
    25d0:	mov	r1, r4
    25d4:	mov	r0, r5
    25d8:	blx	ip
    25dc:	cmp	r0, #0
    25e0:	bne	25f0 <normal_scanLt+0x168>
    25e4:	str	r4, [r6]
    25e8:	mov	r0, #0
    25ec:	b	2bb0 <normal_scanLt+0x728>
    25f0:	add	r4, r4, #3
    25f4:	b	2634 <normal_scanLt+0x1ac>
    25f8:	sub	ip, r7, r4
    25fc:	cmp	ip, #4
    2600:	bge	260c <normal_scanLt+0x184>
    2604:	mvn	r0, #1
    2608:	b	2bb0 <normal_scanLt+0x728>
    260c:	ldr	ip, [r5, #352]	; 0x160
    2610:	mov	r1, r4
    2614:	mov	r0, r5
    2618:	blx	ip
    261c:	cmp	r0, #0
    2620:	bne	2630 <normal_scanLt+0x1a8>
    2624:	str	r4, [r6]
    2628:	mov	r0, #0
    262c:	b	2bb0 <normal_scanLt+0x728>
    2630:	add	r4, r4, #4
    2634:	mov	r8, #0
    2638:	cmp	r4, r7
    263c:	beq	2b00 <normal_scanLt+0x678>
    2640:	ldrb	r2, [r4]
    2644:	and	r0, r2, #255	; 0xff
    2648:	add	r3, r5, r0
    264c:	ldrb	ip, [r3, #76]	; 0x4c
    2650:	sub	r3, ip, #5
    2654:	cmp	r3, #25
    2658:	bcs	2af4 <normal_scanLt+0x66c>
    265c:	add	pc, pc, r3, lsl #2
    2660:	nop	{0}
    2664:	b	26e8 <normal_scanLt+0x260>
    2668:	b	2728 <normal_scanLt+0x2a0>
    266c:	b	2768 <normal_scanLt+0x2e0>
    2670:	b	2af4 <normal_scanLt+0x66c>
    2674:	b	2908 <normal_scanLt+0x480>
    2678:	b	2908 <normal_scanLt+0x480>
    267c:	b	2aa8 <normal_scanLt+0x620>
    2680:	b	2af4 <normal_scanLt+0x66c>
    2684:	b	2af4 <normal_scanLt+0x66c>
    2688:	b	2af4 <normal_scanLt+0x66c>
    268c:	b	2af4 <normal_scanLt+0x66c>
    2690:	b	2af4 <normal_scanLt+0x66c>
    2694:	b	2ab8 <normal_scanLt+0x630>
    2698:	b	2af4 <normal_scanLt+0x66c>
    269c:	b	2af4 <normal_scanLt+0x66c>
    26a0:	b	2af4 <normal_scanLt+0x66c>
    26a4:	b	2908 <normal_scanLt+0x480>
    26a8:	b	26e0 <normal_scanLt+0x258>
    26ac:	b	27a8 <normal_scanLt+0x320>
    26b0:	b	26e0 <normal_scanLt+0x258>
    26b4:	b	26e0 <normal_scanLt+0x258>
    26b8:	b	26e0 <normal_scanLt+0x258>
    26bc:	b	26e0 <normal_scanLt+0x258>
    26c0:	b	2af4 <normal_scanLt+0x66c>
    26c4:	b	26c8 <normal_scanLt+0x240>
    26c8:	mov	r3, #1
    26cc:	cmp	r3, #0
    26d0:	beq	26e0 <normal_scanLt+0x258>
    26d4:	str	r4, [r6]
    26d8:	mov	r0, #0
    26dc:	b	2bb0 <normal_scanLt+0x728>
    26e0:	add	r4, r4, #1
    26e4:	b	2638 <normal_scanLt+0x1b0>
    26e8:	sub	r3, r7, r4
    26ec:	cmp	r3, #2
    26f0:	bge	26fc <normal_scanLt+0x274>
    26f4:	mvn	r0, #1
    26f8:	b	2bb0 <normal_scanLt+0x728>
    26fc:	ldr	ip, [r5, #332]	; 0x14c
    2700:	mov	r1, r4
    2704:	mov	r0, r5
    2708:	blx	ip
    270c:	cmp	r0, #0
    2710:	bne	2720 <normal_scanLt+0x298>
    2714:	str	r4, [r6]
    2718:	mov	r0, #0
    271c:	b	2bb0 <normal_scanLt+0x728>
    2720:	add	r4, r4, #2
    2724:	b	2638 <normal_scanLt+0x1b0>
    2728:	sub	r0, r7, r4
    272c:	cmp	r0, #3
    2730:	bge	273c <normal_scanLt+0x2b4>
    2734:	mvn	r0, #1
    2738:	b	2bb0 <normal_scanLt+0x728>
    273c:	ldr	ip, [r5, #336]	; 0x150
    2740:	mov	r1, r4
    2744:	mov	r0, r5
    2748:	blx	ip
    274c:	cmp	r0, #0
    2750:	bne	2760 <normal_scanLt+0x2d8>
    2754:	str	r4, [r6]
    2758:	mov	r0, #0
    275c:	b	2bb0 <normal_scanLt+0x728>
    2760:	add	r4, r4, #3
    2764:	b	2638 <normal_scanLt+0x1b0>
    2768:	sub	r1, r7, r4
    276c:	cmp	r1, #4
    2770:	bge	277c <normal_scanLt+0x2f4>
    2774:	mvn	r0, #1
    2778:	b	2bb0 <normal_scanLt+0x728>
    277c:	ldr	ip, [r5, #340]	; 0x154
    2780:	mov	r1, r4
    2784:	mov	r0, r5
    2788:	blx	ip
    278c:	cmp	r0, #0
    2790:	bne	27a0 <normal_scanLt+0x318>
    2794:	str	r4, [r6]
    2798:	mov	r0, #0
    279c:	b	2bb0 <normal_scanLt+0x728>
    27a0:	add	r4, r4, #4
    27a4:	b	2638 <normal_scanLt+0x1b0>
    27a8:	cmp	r8, #0
    27ac:	beq	27bc <normal_scanLt+0x334>
    27b0:	str	r4, [r6]
    27b4:	mov	r0, #0
    27b8:	b	2bb0 <normal_scanLt+0x728>
    27bc:	mov	r8, #1
    27c0:	add	r4, r4, #1
    27c4:	cmp	r4, r7
    27c8:	bne	27d4 <normal_scanLt+0x34c>
    27cc:	mvn	r0, #0
    27d0:	b	2bb0 <normal_scanLt+0x728>
    27d4:	ldrb	r1, [r4]
    27d8:	and	r2, r1, #255	; 0xff
    27dc:	add	r3, r5, r2
    27e0:	ldrb	ip, [r3, #76]	; 0x4c
    27e4:	cmp	ip, #22
    27e8:	bcs	28c4 <normal_scanLt+0x43c>
    27ec:	cmp	ip, #5
    27f0:	beq	2884 <normal_scanLt+0x3fc>
    27f4:	cmp	ip, #6
    27f8:	beq	2844 <normal_scanLt+0x3bc>
    27fc:	cmp	ip, #7
    2800:	bne	28f4 <normal_scanLt+0x46c>
    2804:	sub	r0, r7, r4
    2808:	cmp	r0, #4
    280c:	bge	2818 <normal_scanLt+0x390>
    2810:	mvn	r0, #1
    2814:	b	2bb0 <normal_scanLt+0x728>
    2818:	ldr	ip, [r5, #352]	; 0x160
    281c:	mov	r1, r4
    2820:	mov	r0, r5
    2824:	blx	ip
    2828:	cmp	r0, #0
    282c:	bne	283c <normal_scanLt+0x3b4>
    2830:	str	r4, [r6]
    2834:	mov	r0, #0
    2838:	b	2bb0 <normal_scanLt+0x728>
    283c:	add	r4, r4, #4
    2840:	b	2638 <normal_scanLt+0x1b0>
    2844:	sub	r3, r7, r4
    2848:	cmp	r3, #3
    284c:	bge	2858 <normal_scanLt+0x3d0>
    2850:	mvn	r0, #1
    2854:	b	2bb0 <normal_scanLt+0x728>
    2858:	ldr	ip, [r5, #348]	; 0x15c
    285c:	mov	r1, r4
    2860:	mov	r0, r5
    2864:	blx	ip
    2868:	cmp	r0, #0
    286c:	bne	287c <normal_scanLt+0x3f4>
    2870:	str	r4, [r6]
    2874:	mov	r0, #0
    2878:	b	2bb0 <normal_scanLt+0x728>
    287c:	add	r4, r4, #3
    2880:	b	2638 <normal_scanLt+0x1b0>
    2884:	sub	ip, r7, r4
    2888:	cmp	ip, #2
    288c:	bge	2898 <normal_scanLt+0x410>
    2890:	mvn	r0, #1
    2894:	b	2bb0 <normal_scanLt+0x728>
    2898:	ldr	r9, [r5, #344]	; 0x158
    289c:	mov	r1, r4
    28a0:	mov	r0, r5
    28a4:	blx	r9
    28a8:	cmp	r0, #0
    28ac:	bne	28bc <normal_scanLt+0x434>
    28b0:	str	r4, [r6]
    28b4:	mov	r0, #0
    28b8:	b	2bb0 <normal_scanLt+0x728>
    28bc:	add	r4, r4, #2
    28c0:	b	2638 <normal_scanLt+0x1b0>
    28c4:	cmp	ip, #22
    28c8:	beq	2900 <normal_scanLt+0x478>
    28cc:	cmp	ip, #24
    28d0:	beq	2900 <normal_scanLt+0x478>
    28d4:	cmp	ip, #29
    28d8:	bne	28f4 <normal_scanLt+0x46c>
    28dc:	mov	r0, #1
    28e0:	cmp	r0, #0
    28e4:	beq	2900 <normal_scanLt+0x478>
    28e8:	str	r4, [r6]
    28ec:	mov	r0, #0
    28f0:	b	2bb0 <normal_scanLt+0x728>
    28f4:	str	r4, [r6]
    28f8:	mov	r0, #0
    28fc:	b	2bb0 <normal_scanLt+0x728>
    2900:	add	r4, r4, #1
    2904:	b	2638 <normal_scanLt+0x1b0>
    2908:	add	r4, r4, #1
    290c:	cmp	r4, r7
    2910:	beq	2aa0 <normal_scanLt+0x618>
    2914:	ldrb	r2, [r4]
    2918:	and	r1, r2, #255	; 0xff
    291c:	add	r1, r5, r1
    2920:	ldrb	r2, [r1, #76]	; 0x4c
    2924:	sub	r0, r2, #5
    2928:	cmp	r0, #25
    292c:	bcs	2a94 <normal_scanLt+0x60c>
    2930:	add	pc, pc, r0, lsl #2
    2934:	nop	{0}
    2938:	b	29bc <normal_scanLt+0x534>
    293c:	b	29fc <normal_scanLt+0x574>
    2940:	b	2a3c <normal_scanLt+0x5b4>
    2944:	b	2a94 <normal_scanLt+0x60c>
    2948:	b	2a8c <normal_scanLt+0x604>
    294c:	b	2a8c <normal_scanLt+0x604>
    2950:	b	2aa8 <normal_scanLt+0x620>
    2954:	b	2a94 <normal_scanLt+0x60c>
    2958:	b	2a94 <normal_scanLt+0x60c>
    295c:	b	2a94 <normal_scanLt+0x60c>
    2960:	b	2a94 <normal_scanLt+0x60c>
    2964:	b	2a94 <normal_scanLt+0x60c>
    2968:	b	2ab8 <normal_scanLt+0x630>
    296c:	b	2a94 <normal_scanLt+0x60c>
    2970:	b	2a94 <normal_scanLt+0x60c>
    2974:	b	2a94 <normal_scanLt+0x60c>
    2978:	b	2a8c <normal_scanLt+0x604>
    297c:	b	29b4 <normal_scanLt+0x52c>
    2980:	b	2a94 <normal_scanLt+0x60c>
    2984:	b	29b4 <normal_scanLt+0x52c>
    2988:	b	2a94 <normal_scanLt+0x60c>
    298c:	b	2a94 <normal_scanLt+0x60c>
    2990:	b	2a94 <normal_scanLt+0x60c>
    2994:	b	2a94 <normal_scanLt+0x60c>
    2998:	b	299c <normal_scanLt+0x514>
    299c:	mov	r1, #1
    29a0:	cmp	r1, #0
    29a4:	beq	29b4 <normal_scanLt+0x52c>
    29a8:	str	r4, [r6]
    29ac:	mov	r0, #0
    29b0:	b	2bb0 <normal_scanLt+0x728>
    29b4:	add	r1, r4, #1
    29b8:	b	2a78 <normal_scanLt+0x5f0>
    29bc:	sub	r1, r7, r4
    29c0:	cmp	r1, #2
    29c4:	bge	29d0 <normal_scanLt+0x548>
    29c8:	mvn	r0, #1
    29cc:	b	2bb0 <normal_scanLt+0x728>
    29d0:	ldr	ip, [r5, #344]	; 0x158
    29d4:	mov	r1, r4
    29d8:	mov	r0, r5
    29dc:	blx	ip
    29e0:	cmp	r0, #0
    29e4:	bne	29f4 <normal_scanLt+0x56c>
    29e8:	str	r4, [r6]
    29ec:	mov	r0, #0
    29f0:	b	2bb0 <normal_scanLt+0x728>
    29f4:	add	r1, r4, #2
    29f8:	b	2a78 <normal_scanLt+0x5f0>
    29fc:	sub	r1, r7, r4
    2a00:	cmp	r1, #3
    2a04:	bge	2a10 <normal_scanLt+0x588>
    2a08:	mvn	r0, #1
    2a0c:	b	2bb0 <normal_scanLt+0x728>
    2a10:	ldr	ip, [r5, #348]	; 0x15c
    2a14:	mov	r1, r4
    2a18:	mov	r0, r5
    2a1c:	blx	ip
    2a20:	cmp	r0, #0
    2a24:	bne	2a34 <normal_scanLt+0x5ac>
    2a28:	str	r4, [r6]
    2a2c:	mov	r0, #0
    2a30:	b	2bb0 <normal_scanLt+0x728>
    2a34:	add	r1, r4, #3
    2a38:	b	2a78 <normal_scanLt+0x5f0>
    2a3c:	sub	r2, r7, r4
    2a40:	cmp	r2, #4
    2a44:	bge	2a50 <normal_scanLt+0x5c8>
    2a48:	mvn	r0, #1
    2a4c:	b	2bb0 <normal_scanLt+0x728>
    2a50:	ldr	ip, [r5, #352]	; 0x160
    2a54:	mov	r1, r4
    2a58:	mov	r0, r5
    2a5c:	blx	ip
    2a60:	cmp	r0, #0
    2a64:	bne	2a74 <normal_scanLt+0x5ec>
    2a68:	str	r4, [r6]
    2a6c:	mov	r0, #0
    2a70:	b	2bb0 <normal_scanLt+0x728>
    2a74:	add	r1, r4, #4
    2a78:	mov	r3, r6
    2a7c:	mov	r2, r7
    2a80:	mov	r0, r5
    2a84:	bl	1b50 <normal_scanAtts>
    2a88:	b	2bb0 <normal_scanLt+0x728>
    2a8c:	add	r4, r4, #1
    2a90:	b	290c <normal_scanLt+0x484>
    2a94:	str	r4, [r6]
    2a98:	mov	r0, #0
    2a9c:	b	2bb0 <normal_scanLt+0x728>
    2aa0:	mvn	r0, #0
    2aa4:	b	2bb0 <normal_scanLt+0x728>
    2aa8:	add	r2, r4, #1
    2aac:	str	r2, [r6]
    2ab0:	mov	r0, #2
    2ab4:	b	2bb0 <normal_scanLt+0x728>
    2ab8:	add	r1, r4, #1
    2abc:	cmp	r1, r7
    2ac0:	bne	2acc <normal_scanLt+0x644>
    2ac4:	mvn	r0, #0
    2ac8:	b	2bb0 <normal_scanLt+0x728>
    2acc:	ldrb	r2, [r1]
    2ad0:	cmp	r2, #62	; 0x3e
    2ad4:	beq	2ae4 <normal_scanLt+0x65c>
    2ad8:	str	r1, [r6]
    2adc:	mov	r0, #0
    2ae0:	b	2bb0 <normal_scanLt+0x728>
    2ae4:	add	r2, r1, #1
    2ae8:	str	r2, [r6]
    2aec:	mov	r0, #4
    2af0:	b	2bb0 <normal_scanLt+0x728>
    2af4:	str	r4, [r6]
    2af8:	mov	r0, #0
    2afc:	b	2bb0 <normal_scanLt+0x728>
    2b00:	mvn	r0, #0
    2b04:	b	2bb0 <normal_scanLt+0x728>
    2b08:	add	r0, r4, #1
    2b0c:	cmp	r0, r7
    2b10:	bne	2b1c <normal_scanLt+0x694>
    2b14:	mvn	r0, #0
    2b18:	b	2bb0 <normal_scanLt+0x728>
    2b1c:	ldrb	r1, [r0]
    2b20:	and	ip, r1, #255	; 0xff
    2b24:	add	r3, r5, ip
    2b28:	ldrb	r1, [r3, #76]	; 0x4c
    2b2c:	cmp	r1, #20
    2b30:	beq	2b60 <normal_scanLt+0x6d8>
    2b34:	cmp	r1, #27
    2b38:	bne	2b54 <normal_scanLt+0x6cc>
    2b3c:	add	r1, r0, #1
    2b40:	mov	r3, r6
    2b44:	mov	r2, r7
    2b48:	mov	r0, r5
    2b4c:	bl	590 <normal_scanComment>
    2b50:	b	2bb0 <normal_scanLt+0x728>
    2b54:	str	r0, [r6]
    2b58:	mov	r0, #0
    2b5c:	b	2bb0 <normal_scanLt+0x728>
    2b60:	add	r1, r0, #1
    2b64:	mov	r3, r6
    2b68:	mov	r2, r7
    2b6c:	mov	r0, r5
    2b70:	bl	ecc <normal_scanCdataSection>
    2b74:	b	2bb0 <normal_scanLt+0x728>
    2b78:	add	r1, r4, #1
    2b7c:	mov	r3, r6
    2b80:	mov	r2, r7
    2b84:	mov	r0, r5
    2b88:	bl	9b8 <normal_scanPi>
    2b8c:	b	2bb0 <normal_scanLt+0x728>
    2b90:	add	r1, r4, #1
    2b94:	mov	r3, r6
    2b98:	mov	r2, r7
    2b9c:	mov	r0, r5
    2ba0:	bl	12f0 <normal_scanEndTag>
    2ba4:	b	2bb0 <normal_scanLt+0x728>
    2ba8:	str	r4, [r6]
    2bac:	mov	r0, #0
    2bb0:	ldr	r4, [sp, #8]
    2bb4:	ldr	r5, [sp, #12]
    2bb8:	ldr	r6, [sp, #16]
    2bbc:	ldr	r7, [sp, #20]
    2bc0:	ldr	r8, [sp, #24]
    2bc4:	ldr	r9, [sp, #28]
    2bc8:	ldr	lr, [sp, #4]
    2bcc:	add	sp, sp, #32
    2bd0:	bx	lr

00002bd4 <normal_contentTok>:
    2bd4:	mov	ip, sp
    2bd8:	sub	sp, sp, #32
    2bdc:	str	ip, [sp]
    2be0:	str	lr, [sp, #4]
    2be4:	str	r4, [sp, #8]
    2be8:	str	r5, [sp, #12]
    2bec:	str	r6, [sp, #16]
    2bf0:	str	r7, [sp, #20]
    2bf4:	str	r8, [sp, #24]
    2bf8:	mov	r4, r3
    2bfc:	mov	r5, r2
    2c00:	mov	r6, r1
    2c04:	mov	r7, r0
    2c08:	cmp	r6, r5
    2c0c:	bne	2c18 <normal_contentTok+0x44>
    2c10:	mvn	r0, #3
    2c14:	b	2fd8 <normal_contentTok+0x404>
    2c18:	mov	r3, #0
    2c1c:	cmp	r3, #0
    2c20:	beq	2c48 <normal_contentTok+0x74>
    2c24:	sub	r1, r5, r6
    2c28:	mov	ip, #0
    2c2c:	cmp	ip, #0
    2c30:	beq	2c48 <normal_contentTok+0x74>
    2c34:	cmp	r1, #0
    2c38:	bne	2c44 <normal_contentTok+0x70>
    2c3c:	mvn	r0, #0
    2c40:	b	2fd8 <normal_contentTok+0x404>
    2c44:	add	r5, r6, r1
    2c48:	ldrb	r2, [r6]
    2c4c:	and	r1, r2, #255	; 0xff
    2c50:	add	r0, r7, r1
    2c54:	ldrb	r1, [r0, #76]	; 0x4c
    2c58:	cmp	r1, #11
    2c5c:	bcs	2e30 <normal_contentTok+0x25c>
    2c60:	add	pc, pc, r1, lsl #2
    2c64:	nop	{0}
    2c68:	b	2e24 <normal_contentTok+0x250>
    2c6c:	b	2e24 <normal_contentTok+0x250>
    2c70:	b	2c94 <normal_contentTok+0xc0>
    2c74:	b	2cac <normal_contentTok+0xd8>
    2c78:	b	2d10 <normal_contentTok+0x13c>
    2c7c:	b	2d64 <normal_contentTok+0x190>
    2c80:	b	2da4 <normal_contentTok+0x1d0>
    2c84:	b	2de4 <normal_contentTok+0x210>
    2c88:	b	2e24 <normal_contentTok+0x250>
    2c8c:	b	2cc4 <normal_contentTok+0xf0>
    2c90:	b	2d00 <normal_contentTok+0x12c>
    2c94:	add	r1, r6, #1
    2c98:	mov	r3, r4
    2c9c:	mov	r2, r5
    2ca0:	mov	r0, r7
    2ca4:	bl	2488 <normal_scanLt>
    2ca8:	b	2fd8 <normal_contentTok+0x404>
    2cac:	add	r1, r6, #1
    2cb0:	mov	r3, r4
    2cb4:	mov	r2, r5
    2cb8:	mov	r0, r7
    2cbc:	bl	1800 <normal_scanRef>
    2cc0:	b	2fd8 <normal_contentTok+0x404>
    2cc4:	add	r2, r6, #1
    2cc8:	cmp	r2, r5
    2ccc:	bne	2cd8 <normal_contentTok+0x104>
    2cd0:	mvn	r0, #2
    2cd4:	b	2fd8 <normal_contentTok+0x404>
    2cd8:	ldrb	r0, [r2]
    2cdc:	and	r3, r0, #255	; 0xff
    2ce0:	add	r3, r7, r3
    2ce4:	ldrb	r3, [r3, #76]	; 0x4c
    2ce8:	cmp	r3, #10
    2cec:	bne	2cf4 <normal_contentTok+0x120>
    2cf0:	add	r2, r2, #1
    2cf4:	str	r2, [r4]
    2cf8:	mov	r0, #7
    2cfc:	b	2fd8 <normal_contentTok+0x404>
    2d00:	add	r0, r6, #1
    2d04:	str	r0, [r4]
    2d08:	mov	r0, #7
    2d0c:	b	2fd8 <normal_contentTok+0x404>
    2d10:	add	r6, r6, #1
    2d14:	cmp	r6, r5
    2d18:	bne	2d24 <normal_contentTok+0x150>
    2d1c:	mvn	r0, #4
    2d20:	b	2fd8 <normal_contentTok+0x404>
    2d24:	ldrb	r3, [r6]
    2d28:	cmp	r3, #93	; 0x5d
    2d2c:	bne	2e34 <normal_contentTok+0x260>
    2d30:	add	r0, r6, #1
    2d34:	cmp	r0, r5
    2d38:	bne	2d44 <normal_contentTok+0x170>
    2d3c:	mvn	r0, #4
    2d40:	b	2fd8 <normal_contentTok+0x404>
    2d44:	ldrb	r1, [r0]
    2d48:	cmp	r1, #62	; 0x3e
    2d4c:	beq	2d58 <normal_contentTok+0x184>
    2d50:	sub	r6, r0, #1
    2d54:	b	2e34 <normal_contentTok+0x260>
    2d58:	str	r0, [r4]
    2d5c:	mov	r0, #0
    2d60:	b	2fd8 <normal_contentTok+0x404>
    2d64:	sub	r2, r5, r6
    2d68:	cmp	r2, #2
    2d6c:	bge	2d78 <normal_contentTok+0x1a4>
    2d70:	mvn	r0, #1
    2d74:	b	2fd8 <normal_contentTok+0x404>
    2d78:	ldr	ip, [r7, #356]	; 0x164
    2d7c:	mov	r1, r6
    2d80:	mov	r0, r7
    2d84:	blx	ip
    2d88:	cmp	r0, #0
    2d8c:	beq	2d9c <normal_contentTok+0x1c8>
    2d90:	str	r6, [r4]
    2d94:	mov	r0, #0
    2d98:	b	2fd8 <normal_contentTok+0x404>
    2d9c:	add	r6, r6, #2
    2da0:	b	2e34 <normal_contentTok+0x260>
    2da4:	sub	r3, r5, r6
    2da8:	cmp	r3, #3
    2dac:	bge	2db8 <normal_contentTok+0x1e4>
    2db0:	mvn	r0, #1
    2db4:	b	2fd8 <normal_contentTok+0x404>
    2db8:	ldr	ip, [r7, #360]	; 0x168
    2dbc:	mov	r1, r6
    2dc0:	mov	r0, r7
    2dc4:	blx	ip
    2dc8:	cmp	r0, #0
    2dcc:	beq	2ddc <normal_contentTok+0x208>
    2dd0:	str	r6, [r4]
    2dd4:	mov	r0, #0
    2dd8:	b	2fd8 <normal_contentTok+0x404>
    2ddc:	add	r6, r6, #3
    2de0:	b	2e34 <normal_contentTok+0x260>
    2de4:	sub	ip, r5, r6
    2de8:	cmp	ip, #4
    2dec:	bge	2df8 <normal_contentTok+0x224>
    2df0:	mvn	r0, #1
    2df4:	b	2fd8 <normal_contentTok+0x404>
    2df8:	ldr	r8, [r7, #364]	; 0x16c
    2dfc:	mov	r1, r6
    2e00:	mov	r0, r7
    2e04:	blx	r8
    2e08:	cmp	r0, #0
    2e0c:	beq	2e1c <normal_contentTok+0x248>
    2e10:	str	r6, [r4]
    2e14:	mov	r0, #0
    2e18:	b	2fd8 <normal_contentTok+0x404>
    2e1c:	add	r6, r6, #4
    2e20:	b	2e34 <normal_contentTok+0x260>
    2e24:	str	r6, [r4]
    2e28:	mov	r0, #0
    2e2c:	b	2fd8 <normal_contentTok+0x404>
    2e30:	add	r6, r6, #1
    2e34:	cmp	r6, r5
    2e38:	beq	2fd0 <normal_contentTok+0x3fc>
    2e3c:	ldrb	ip, [r6]
    2e40:	and	r0, ip, #255	; 0xff
    2e44:	add	ip, r7, r0
    2e48:	ldrb	r0, [ip, #76]	; 0x4c
    2e4c:	cmp	r0, #11
    2e50:	bcs	2fc8 <normal_contentTok+0x3f4>
    2e54:	add	pc, pc, r0, lsl #2
    2e58:	nop	{0}
    2e5c:	b	2fbc <normal_contentTok+0x3e8>
    2e60:	b	2fbc <normal_contentTok+0x3e8>
    2e64:	b	2fbc <normal_contentTok+0x3e8>
    2e68:	b	2fbc <normal_contentTok+0x3e8>
    2e6c:	b	2f6c <normal_contentTok+0x398>
    2e70:	b	2e88 <normal_contentTok+0x2b4>
    2e74:	b	2ed4 <normal_contentTok+0x300>
    2e78:	b	2f20 <normal_contentTok+0x34c>
    2e7c:	b	2fbc <normal_contentTok+0x3e8>
    2e80:	b	2fbc <normal_contentTok+0x3e8>
    2e84:	b	2fbc <normal_contentTok+0x3e8>
    2e88:	sub	r0, r5, r6
    2e8c:	cmp	r0, #2
    2e90:	blt	2eb4 <normal_contentTok+0x2e0>
    2e94:	ldr	ip, [r7, #356]	; 0x164
    2e98:	mov	r1, r6
    2e9c:	mov	r0, r7
    2ea0:	blx	ip
    2ea4:	cmp	r0, #0
    2ea8:	movne	r2, #1
    2eac:	moveq	r2, #0
    2eb0:	b	2eb8 <normal_contentTok+0x2e4>
    2eb4:	mov	r2, #1
    2eb8:	cmp	r2, #0
    2ebc:	beq	2ecc <normal_contentTok+0x2f8>
    2ec0:	str	r6, [r4]
    2ec4:	mov	r0, #6
    2ec8:	b	2fd8 <normal_contentTok+0x404>
    2ecc:	add	r6, r6, #2
    2ed0:	b	2e34 <normal_contentTok+0x260>
    2ed4:	sub	r2, r5, r6
    2ed8:	cmp	r2, #3
    2edc:	blt	2f00 <normal_contentTok+0x32c>
    2ee0:	ldr	ip, [r7, #360]	; 0x168
    2ee4:	mov	r1, r6
    2ee8:	mov	r0, r7
    2eec:	blx	ip
    2ef0:	cmp	r0, #0
    2ef4:	movne	r1, #1
    2ef8:	moveq	r1, #0
    2efc:	b	2f04 <normal_contentTok+0x330>
    2f00:	mov	r1, #1
    2f04:	cmp	r1, #0
    2f08:	beq	2f18 <normal_contentTok+0x344>
    2f0c:	str	r6, [r4]
    2f10:	mov	r0, #6
    2f14:	b	2fd8 <normal_contentTok+0x404>
    2f18:	add	r6, r6, #3
    2f1c:	b	2e34 <normal_contentTok+0x260>
    2f20:	sub	r2, r5, r6
    2f24:	cmp	r2, #4
    2f28:	blt	2f4c <normal_contentTok+0x378>
    2f2c:	ldr	ip, [r7, #364]	; 0x16c
    2f30:	mov	r1, r6
    2f34:	mov	r0, r7
    2f38:	blx	ip
    2f3c:	cmp	r0, #0
    2f40:	movne	r3, #1
    2f44:	moveq	r3, #0
    2f48:	b	2f50 <normal_contentTok+0x37c>
    2f4c:	mov	r3, #1
    2f50:	cmp	r3, #0
    2f54:	beq	2f64 <normal_contentTok+0x390>
    2f58:	str	r6, [r4]
    2f5c:	mov	r0, #6
    2f60:	b	2fd8 <normal_contentTok+0x404>
    2f64:	add	r6, r6, #4
    2f68:	b	2e34 <normal_contentTok+0x260>
    2f6c:	add	r3, r6, #1
    2f70:	cmp	r3, r5
    2f74:	beq	2fbc <normal_contentTok+0x3e8>
    2f78:	ldrb	ip, [r6, #1]
    2f7c:	cmp	ip, #93	; 0x5d
    2f80:	beq	2f8c <normal_contentTok+0x3b8>
    2f84:	add	r6, r6, #1
    2f88:	b	2e34 <normal_contentTok+0x260>
    2f8c:	add	ip, r6, #2
    2f90:	cmp	ip, r5
    2f94:	beq	2fbc <normal_contentTok+0x3e8>
    2f98:	ldrb	r3, [r6, #2]
    2f9c:	cmp	r3, #62	; 0x3e
    2fa0:	beq	2fac <normal_contentTok+0x3d8>
    2fa4:	add	r6, r6, #1
    2fa8:	b	2e34 <normal_contentTok+0x260>
    2fac:	add	ip, r6, #2
    2fb0:	str	ip, [r4]
    2fb4:	mov	r0, #0
    2fb8:	b	2fd8 <normal_contentTok+0x404>
    2fbc:	str	r6, [r4]
    2fc0:	mov	r0, #6
    2fc4:	b	2fd8 <normal_contentTok+0x404>
    2fc8:	add	r6, r6, #1
    2fcc:	b	2e34 <normal_contentTok+0x260>
    2fd0:	str	r6, [r4]
    2fd4:	mov	r0, #6
    2fd8:	ldr	r4, [sp, #8]
    2fdc:	ldr	r5, [sp, #12]
    2fe0:	ldr	r6, [sp, #16]
    2fe4:	ldr	r7, [sp, #20]
    2fe8:	ldr	r8, [sp, #24]
    2fec:	ldr	lr, [sp, #4]
    2ff0:	add	sp, sp, #32
    2ff4:	bx	lr

00002ff8 <normal_scanPercent>:
    2ff8:	mov	ip, sp
    2ffc:	sub	sp, sp, #24
    3000:	str	ip, [sp]
    3004:	str	lr, [sp, #4]
    3008:	str	r4, [sp, #8]
    300c:	str	r5, [sp, #12]
    3010:	str	r6, [sp, #16]
    3014:	str	r7, [sp, #20]
    3018:	mov	r7, r3
    301c:	mov	r6, r2
    3020:	mov	r4, r1
    3024:	mov	r5, r0
    3028:	cmp	r4, r6
    302c:	bne	3038 <normal_scanPercent+0x40>
    3030:	mvn	r0, #0
    3034:	b	3348 <normal_scanPercent+0x350>
    3038:	ldrb	r3, [r4]
    303c:	and	r2, r3, #255	; 0xff
    3040:	add	r0, r5, r2
    3044:	ldrb	ip, [r0, #76]	; 0x4c
    3048:	sub	r1, ip, #5
    304c:	cmp	r1, #26
    3050:	bcs	3340 <normal_scanPercent+0x348>
    3054:	add	pc, pc, r1, lsl #2
    3058:	nop	{0}
    305c:	b	30e4 <normal_scanPercent+0xec>
    3060:	b	3124 <normal_scanPercent+0x12c>
    3064:	b	3164 <normal_scanPercent+0x16c>
    3068:	b	3340 <normal_scanPercent+0x348>
    306c:	b	3334 <normal_scanPercent+0x33c>
    3070:	b	3334 <normal_scanPercent+0x33c>
    3074:	b	3340 <normal_scanPercent+0x348>
    3078:	b	3340 <normal_scanPercent+0x348>
    307c:	b	3340 <normal_scanPercent+0x348>
    3080:	b	3340 <normal_scanPercent+0x348>
    3084:	b	3340 <normal_scanPercent+0x348>
    3088:	b	3340 <normal_scanPercent+0x348>
    308c:	b	3340 <normal_scanPercent+0x348>
    3090:	b	3340 <normal_scanPercent+0x348>
    3094:	b	3340 <normal_scanPercent+0x348>
    3098:	b	3340 <normal_scanPercent+0x348>
    309c:	b	3334 <normal_scanPercent+0x33c>
    30a0:	b	30dc <normal_scanPercent+0xe4>
    30a4:	b	3340 <normal_scanPercent+0x348>
    30a8:	b	30dc <normal_scanPercent+0xe4>
    30ac:	b	3340 <normal_scanPercent+0x348>
    30b0:	b	3340 <normal_scanPercent+0x348>
    30b4:	b	3340 <normal_scanPercent+0x348>
    30b8:	b	3340 <normal_scanPercent+0x348>
    30bc:	b	30c4 <normal_scanPercent+0xcc>
    30c0:	b	3334 <normal_scanPercent+0x33c>
    30c4:	mov	r3, #1
    30c8:	cmp	r3, #0
    30cc:	beq	30dc <normal_scanPercent+0xe4>
    30d0:	str	r4, [r7]
    30d4:	mov	r0, #0
    30d8:	b	3348 <normal_scanPercent+0x350>
    30dc:	add	r4, r4, #1
    30e0:	b	31a0 <normal_scanPercent+0x1a8>
    30e4:	sub	ip, r6, r4
    30e8:	cmp	ip, #2
    30ec:	bge	30f8 <normal_scanPercent+0x100>
    30f0:	mvn	r0, #1
    30f4:	b	3348 <normal_scanPercent+0x350>
    30f8:	ldr	ip, [r5, #344]	; 0x158
    30fc:	mov	r1, r4
    3100:	mov	r0, r5
    3104:	blx	ip
    3108:	cmp	r0, #0
    310c:	bne	311c <normal_scanPercent+0x124>
    3110:	str	r4, [r7]
    3114:	mov	r0, #0
    3118:	b	3348 <normal_scanPercent+0x350>
    311c:	add	r4, r4, #2
    3120:	b	31a0 <normal_scanPercent+0x1a8>
    3124:	sub	ip, r6, r4
    3128:	cmp	ip, #3
    312c:	bge	3138 <normal_scanPercent+0x140>
    3130:	mvn	r0, #1
    3134:	b	3348 <normal_scanPercent+0x350>
    3138:	ldr	ip, [r5, #348]	; 0x15c
    313c:	mov	r1, r4
    3140:	mov	r0, r5
    3144:	blx	ip
    3148:	cmp	r0, #0
    314c:	bne	315c <normal_scanPercent+0x164>
    3150:	str	r4, [r7]
    3154:	mov	r0, #0
    3158:	b	3348 <normal_scanPercent+0x350>
    315c:	add	r4, r4, #3
    3160:	b	31a0 <normal_scanPercent+0x1a8>
    3164:	sub	r0, r6, r4
    3168:	cmp	r0, #4
    316c:	bge	3178 <normal_scanPercent+0x180>
    3170:	mvn	r0, #1
    3174:	b	3348 <normal_scanPercent+0x350>
    3178:	ldr	ip, [r5, #352]	; 0x160
    317c:	mov	r1, r4
    3180:	mov	r0, r5
    3184:	blx	ip
    3188:	cmp	r0, #0
    318c:	bne	319c <normal_scanPercent+0x1a4>
    3190:	str	r4, [r7]
    3194:	mov	r0, #0
    3198:	b	3348 <normal_scanPercent+0x350>
    319c:	add	r4, r4, #4
    31a0:	cmp	r4, r6
    31a4:	beq	332c <normal_scanPercent+0x334>
    31a8:	ldrb	ip, [r4]
    31ac:	and	r1, ip, #255	; 0xff
    31b0:	add	r0, r5, r1
    31b4:	ldrb	r3, [r0, #76]	; 0x4c
    31b8:	sub	r2, r3, #5
    31bc:	cmp	r2, #25
    31c0:	bcs	3320 <normal_scanPercent+0x328>
    31c4:	add	pc, pc, r2, lsl #2
    31c8:	nop	{0}
    31cc:	b	3250 <normal_scanPercent+0x258>
    31d0:	b	3290 <normal_scanPercent+0x298>
    31d4:	b	32d0 <normal_scanPercent+0x2d8>
    31d8:	b	3320 <normal_scanPercent+0x328>
    31dc:	b	3320 <normal_scanPercent+0x328>
    31e0:	b	3320 <normal_scanPercent+0x328>
    31e4:	b	3320 <normal_scanPercent+0x328>
    31e8:	b	3320 <normal_scanPercent+0x328>
    31ec:	b	3320 <normal_scanPercent+0x328>
    31f0:	b	3320 <normal_scanPercent+0x328>
    31f4:	b	3320 <normal_scanPercent+0x328>
    31f8:	b	3320 <normal_scanPercent+0x328>
    31fc:	b	3320 <normal_scanPercent+0x328>
    3200:	b	3310 <normal_scanPercent+0x318>
    3204:	b	3320 <normal_scanPercent+0x328>
    3208:	b	3320 <normal_scanPercent+0x328>
    320c:	b	3320 <normal_scanPercent+0x328>
    3210:	b	3248 <normal_scanPercent+0x250>
    3214:	b	3320 <normal_scanPercent+0x328>
    3218:	b	3248 <normal_scanPercent+0x250>
    321c:	b	3248 <normal_scanPercent+0x250>
    3220:	b	3248 <normal_scanPercent+0x250>
    3224:	b	3248 <normal_scanPercent+0x250>
    3228:	b	3320 <normal_scanPercent+0x328>
    322c:	b	3230 <normal_scanPercent+0x238>
    3230:	mov	r3, #1
    3234:	cmp	r3, #0
    3238:	beq	3248 <normal_scanPercent+0x250>
    323c:	str	r4, [r7]
    3240:	mov	r0, #0
    3244:	b	3348 <normal_scanPercent+0x350>
    3248:	add	r4, r4, #1
    324c:	b	31a0 <normal_scanPercent+0x1a8>
    3250:	sub	r1, r6, r4
    3254:	cmp	r1, #2
    3258:	bge	3264 <normal_scanPercent+0x26c>
    325c:	mvn	r0, #1
    3260:	b	3348 <normal_scanPercent+0x350>
    3264:	ldr	ip, [r5, #332]	; 0x14c
    3268:	mov	r1, r4
    326c:	mov	r0, r5
    3270:	blx	ip
    3274:	cmp	r0, #0
    3278:	bne	3288 <normal_scanPercent+0x290>
    327c:	str	r4, [r7]
    3280:	mov	r0, #0
    3284:	b	3348 <normal_scanPercent+0x350>
    3288:	add	r4, r4, #2
    328c:	b	31a0 <normal_scanPercent+0x1a8>
    3290:	sub	r3, r6, r4
    3294:	cmp	r3, #3
    3298:	bge	32a4 <normal_scanPercent+0x2ac>
    329c:	mvn	r0, #1
    32a0:	b	3348 <normal_scanPercent+0x350>
    32a4:	ldr	ip, [r5, #336]	; 0x150
    32a8:	mov	r1, r4
    32ac:	mov	r0, r5
    32b0:	blx	ip
    32b4:	cmp	r0, #0
    32b8:	bne	32c8 <normal_scanPercent+0x2d0>
    32bc:	str	r4, [r7]
    32c0:	mov	r0, #0
    32c4:	b	3348 <normal_scanPercent+0x350>
    32c8:	add	r4, r4, #3
    32cc:	b	31a0 <normal_scanPercent+0x1a8>
    32d0:	sub	r2, r6, r4
    32d4:	cmp	r2, #4
    32d8:	bge	32e4 <normal_scanPercent+0x2ec>
    32dc:	mvn	r0, #1
    32e0:	b	3348 <normal_scanPercent+0x350>
    32e4:	ldr	ip, [r5, #340]	; 0x154
    32e8:	mov	r1, r4
    32ec:	mov	r0, r5
    32f0:	blx	ip
    32f4:	cmp	r0, #0
    32f8:	bne	3308 <normal_scanPercent+0x310>
    32fc:	str	r4, [r7]
    3300:	mov	r0, #0
    3304:	b	3348 <normal_scanPercent+0x350>
    3308:	add	r4, r4, #4
    330c:	b	31a0 <normal_scanPercent+0x1a8>
    3310:	add	ip, r4, #1
    3314:	str	ip, [r7]
    3318:	mov	r0, #28
    331c:	b	3348 <normal_scanPercent+0x350>
    3320:	str	r4, [r7]
    3324:	mov	r0, #0
    3328:	b	3348 <normal_scanPercent+0x350>
    332c:	mvn	r0, #0
    3330:	b	3348 <normal_scanPercent+0x350>
    3334:	str	r4, [r7]
    3338:	mov	r0, #22
    333c:	b	3348 <normal_scanPercent+0x350>
    3340:	str	r4, [r7]
    3344:	mov	r0, #0
    3348:	ldr	r4, [sp, #8]
    334c:	ldr	r5, [sp, #12]
    3350:	ldr	r6, [sp, #16]
    3354:	ldr	r7, [sp, #20]
    3358:	ldr	lr, [sp, #4]
    335c:	add	sp, sp, #24
    3360:	bx	lr

00003364 <normal_scanPoundName>:
    3364:	mov	ip, sp
    3368:	sub	sp, sp, #32
    336c:	str	ip, [sp]
    3370:	str	lr, [sp, #4]
    3374:	str	r4, [sp, #8]
    3378:	str	r5, [sp, #12]
    337c:	str	r6, [sp, #16]
    3380:	str	r7, [sp, #20]
    3384:	str	r8, [sp, #24]
    3388:	mov	r4, r3
    338c:	mov	r5, r2
    3390:	mov	r6, r1
    3394:	mov	r7, r0
    3398:	cmp	r6, r5
    339c:	bne	33a8 <normal_scanPoundName+0x44>
    33a0:	mvn	r0, #0
    33a4:	b	3680 <normal_scanPoundName+0x31c>
    33a8:	ldrb	r1, [r6]
    33ac:	and	r1, r1, #255	; 0xff
    33b0:	add	r2, r7, r1
    33b4:	ldrb	r2, [r2, #76]	; 0x4c
    33b8:	cmp	r2, #22
    33bc:	bcs	3498 <normal_scanPoundName+0x134>
    33c0:	cmp	r2, #5
    33c4:	beq	3458 <normal_scanPoundName+0xf4>
    33c8:	cmp	r2, #6
    33cc:	beq	3418 <normal_scanPoundName+0xb4>
    33d0:	cmp	r2, #7
    33d4:	bne	34c8 <normal_scanPoundName+0x164>
    33d8:	sub	r1, r5, r6
    33dc:	cmp	r1, #4
    33e0:	bge	33ec <normal_scanPoundName+0x88>
    33e4:	mvn	r0, #1
    33e8:	b	3680 <normal_scanPoundName+0x31c>
    33ec:	ldr	ip, [r7, #352]	; 0x160
    33f0:	mov	r1, r6
    33f4:	mov	r0, r7
    33f8:	blx	ip
    33fc:	cmp	r0, #0
    3400:	bne	3410 <normal_scanPoundName+0xac>
    3404:	str	r6, [r4]
    3408:	mov	r0, #0
    340c:	b	3680 <normal_scanPoundName+0x31c>
    3410:	add	r6, r6, #4
    3414:	b	34d8 <normal_scanPoundName+0x174>
    3418:	sub	r0, r5, r6
    341c:	cmp	r0, #3
    3420:	bge	342c <normal_scanPoundName+0xc8>
    3424:	mvn	r0, #1
    3428:	b	3680 <normal_scanPoundName+0x31c>
    342c:	ldr	ip, [r7, #348]	; 0x15c
    3430:	mov	r1, r6
    3434:	mov	r0, r7
    3438:	blx	ip
    343c:	cmp	r0, #0
    3440:	bne	3450 <normal_scanPoundName+0xec>
    3444:	str	r6, [r4]
    3448:	mov	r0, #0
    344c:	b	3680 <normal_scanPoundName+0x31c>
    3450:	add	r6, r6, #3
    3454:	b	34d8 <normal_scanPoundName+0x174>
    3458:	sub	r0, r5, r6
    345c:	cmp	r0, #2
    3460:	bge	346c <normal_scanPoundName+0x108>
    3464:	mvn	r0, #1
    3468:	b	3680 <normal_scanPoundName+0x31c>
    346c:	ldr	r8, [r7, #344]	; 0x158
    3470:	mov	r1, r6
    3474:	mov	r0, r7
    3478:	blx	r8
    347c:	cmp	r0, #0
    3480:	bne	3490 <normal_scanPoundName+0x12c>
    3484:	str	r6, [r4]
    3488:	mov	r0, #0
    348c:	b	3680 <normal_scanPoundName+0x31c>
    3490:	add	r6, r6, #2
    3494:	b	34d8 <normal_scanPoundName+0x174>
    3498:	cmp	r2, #22
    349c:	beq	34d4 <normal_scanPoundName+0x170>
    34a0:	cmp	r2, #24
    34a4:	beq	34d4 <normal_scanPoundName+0x170>
    34a8:	cmp	r2, #29
    34ac:	bne	34c8 <normal_scanPoundName+0x164>
    34b0:	mov	r1, #1
    34b4:	cmp	r1, #0
    34b8:	beq	34d4 <normal_scanPoundName+0x170>
    34bc:	str	r6, [r4]
    34c0:	mov	r0, #0
    34c4:	b	3680 <normal_scanPoundName+0x31c>
    34c8:	str	r6, [r4]
    34cc:	mov	r0, #0
    34d0:	b	3680 <normal_scanPoundName+0x31c>
    34d4:	add	r6, r6, #1
    34d8:	cmp	r6, r5
    34dc:	beq	367c <normal_scanPoundName+0x318>
    34e0:	ldrb	r0, [r6]
    34e4:	and	ip, r0, #255	; 0xff
    34e8:	add	r0, r7, ip
    34ec:	ldrb	r0, [r0, #76]	; 0x4c
    34f0:	sub	r2, r0, #5
    34f4:	cmp	r2, #32
    34f8:	bcs	3670 <normal_scanPoundName+0x30c>
    34fc:	add	pc, pc, r2, lsl #2
    3500:	nop	{0}
    3504:	b	35a4 <normal_scanPoundName+0x240>
    3508:	b	35e4 <normal_scanPoundName+0x280>
    350c:	b	3624 <normal_scanPoundName+0x2c0>
    3510:	b	3670 <normal_scanPoundName+0x30c>
    3514:	b	3664 <normal_scanPoundName+0x300>
    3518:	b	3664 <normal_scanPoundName+0x300>
    351c:	b	3664 <normal_scanPoundName+0x300>
    3520:	b	3670 <normal_scanPoundName+0x30c>
    3524:	b	3670 <normal_scanPoundName+0x30c>
    3528:	b	3670 <normal_scanPoundName+0x30c>
    352c:	b	3670 <normal_scanPoundName+0x30c>
    3530:	b	3670 <normal_scanPoundName+0x30c>
    3534:	b	3670 <normal_scanPoundName+0x30c>
    3538:	b	3670 <normal_scanPoundName+0x30c>
    353c:	b	3670 <normal_scanPoundName+0x30c>
    3540:	b	3670 <normal_scanPoundName+0x30c>
    3544:	b	3664 <normal_scanPoundName+0x300>
    3548:	b	359c <normal_scanPoundName+0x238>
    354c:	b	3670 <normal_scanPoundName+0x30c>
    3550:	b	359c <normal_scanPoundName+0x238>
    3554:	b	359c <normal_scanPoundName+0x238>
    3558:	b	359c <normal_scanPoundName+0x238>
    355c:	b	359c <normal_scanPoundName+0x238>
    3560:	b	3670 <normal_scanPoundName+0x30c>
    3564:	b	3584 <normal_scanPoundName+0x220>
    3568:	b	3664 <normal_scanPoundName+0x300>
    356c:	b	3670 <normal_scanPoundName+0x30c>
    3570:	b	3664 <normal_scanPoundName+0x300>
    3574:	b	3670 <normal_scanPoundName+0x30c>
    3578:	b	3670 <normal_scanPoundName+0x30c>
    357c:	b	3670 <normal_scanPoundName+0x30c>
    3580:	b	3664 <normal_scanPoundName+0x300>
    3584:	mov	ip, #1
    3588:	cmp	ip, #0
    358c:	beq	359c <normal_scanPoundName+0x238>
    3590:	str	r6, [r4]
    3594:	mov	r0, #0
    3598:	b	3680 <normal_scanPoundName+0x31c>
    359c:	add	r6, r6, #1
    35a0:	b	34d8 <normal_scanPoundName+0x174>
    35a4:	sub	r3, r5, r6
    35a8:	cmp	r3, #2
    35ac:	bge	35b8 <normal_scanPoundName+0x254>
    35b0:	mvn	r0, #1
    35b4:	b	3680 <normal_scanPoundName+0x31c>
    35b8:	ldr	ip, [r7, #332]	; 0x14c
    35bc:	mov	r1, r6
    35c0:	mov	r0, r7
    35c4:	blx	ip
    35c8:	cmp	r0, #0
    35cc:	bne	35dc <normal_scanPoundName+0x278>
    35d0:	str	r6, [r4]
    35d4:	mov	r0, #0
    35d8:	b	3680 <normal_scanPoundName+0x31c>
    35dc:	add	r6, r6, #2
    35e0:	b	34d8 <normal_scanPoundName+0x174>
    35e4:	sub	r2, r5, r6
    35e8:	cmp	r2, #3
    35ec:	bge	35f8 <normal_scanPoundName+0x294>
    35f0:	mvn	r0, #1
    35f4:	b	3680 <normal_scanPoundName+0x31c>
    35f8:	ldr	ip, [r7, #336]	; 0x150
    35fc:	mov	r1, r6
    3600:	mov	r0, r7
    3604:	blx	ip
    3608:	cmp	r0, #0
    360c:	bne	361c <normal_scanPoundName+0x2b8>
    3610:	str	r6, [r4]
    3614:	mov	r0, #0
    3618:	b	3680 <normal_scanPoundName+0x31c>
    361c:	add	r6, r6, #3
    3620:	b	34d8 <normal_scanPoundName+0x174>
    3624:	sub	r1, r5, r6
    3628:	cmp	r1, #4
    362c:	bge	3638 <normal_scanPoundName+0x2d4>
    3630:	mvn	r0, #1
    3634:	b	3680 <normal_scanPoundName+0x31c>
    3638:	ldr	ip, [r7, #340]	; 0x154
    363c:	mov	r1, r6
    3640:	mov	r0, r7
    3644:	blx	ip
    3648:	cmp	r0, #0
    364c:	bne	365c <normal_scanPoundName+0x2f8>
    3650:	str	r6, [r4]
    3654:	mov	r0, #0
    3658:	b	3680 <normal_scanPoundName+0x31c>
    365c:	add	r6, r6, #4
    3660:	b	34d8 <normal_scanPoundName+0x174>
    3664:	str	r6, [r4]
    3668:	mov	r0, #20
    366c:	b	3680 <normal_scanPoundName+0x31c>
    3670:	str	r6, [r4]
    3674:	mov	r0, #0
    3678:	b	3680 <normal_scanPoundName+0x31c>
    367c:	mvn	r0, #19
    3680:	ldr	r4, [sp, #8]
    3684:	ldr	r5, [sp, #12]
    3688:	ldr	r6, [sp, #16]
    368c:	ldr	r7, [sp, #20]
    3690:	ldr	r8, [sp, #24]
    3694:	ldr	lr, [sp, #4]
    3698:	add	sp, sp, #32
    369c:	bx	lr

000036a0 <normal_scanLit>:
    36a0:	mov	ip, sp
    36a4:	sub	sp, sp, #32
    36a8:	str	ip, [sp]
    36ac:	str	lr, [sp, #4]
    36b0:	str	r4, [sp, #8]
    36b4:	str	r5, [sp, #12]
    36b8:	str	r6, [sp, #16]
    36bc:	str	r7, [sp, #20]
    36c0:	str	r8, [sp, #24]
    36c4:	ldr	r8, [ip]
    36c8:	mov	r6, r3
    36cc:	mov	r4, r2
    36d0:	mov	r5, r1
    36d4:	mov	r7, r0
    36d8:	cmp	r4, r6
    36dc:	beq	388c <normal_scanLit+0x1ec>
    36e0:	ldrb	ip, [r4]
    36e4:	and	r2, ip, #255	; 0xff
    36e8:	add	r1, r5, r2
    36ec:	ldrb	r0, [r1, #76]	; 0x4c
    36f0:	mov	r1, r0
    36f4:	cmp	r1, #14
    36f8:	bcs	3884 <normal_scanLit+0x1e4>
    36fc:	add	pc, pc, r1, lsl #2
    3700:	nop	{0}
    3704:	b	37fc <normal_scanLit+0x15c>
    3708:	b	37fc <normal_scanLit+0x15c>
    370c:	b	3884 <normal_scanLit+0x1e4>
    3710:	b	3884 <normal_scanLit+0x1e4>
    3714:	b	3884 <normal_scanLit+0x1e4>
    3718:	b	373c <normal_scanLit+0x9c>
    371c:	b	377c <normal_scanLit+0xdc>
    3720:	b	37bc <normal_scanLit+0x11c>
    3724:	b	37fc <normal_scanLit+0x15c>
    3728:	b	3884 <normal_scanLit+0x1e4>
    372c:	b	3884 <normal_scanLit+0x1e4>
    3730:	b	3884 <normal_scanLit+0x1e4>
    3734:	b	3808 <normal_scanLit+0x168>
    3738:	b	3808 <normal_scanLit+0x168>
    373c:	sub	r3, r6, r4
    3740:	cmp	r3, #2
    3744:	bge	3750 <normal_scanLit+0xb0>
    3748:	mvn	r0, #1
    374c:	b	3890 <normal_scanLit+0x1f0>
    3750:	ldr	ip, [r5, #356]	; 0x164
    3754:	mov	r1, r4
    3758:	mov	r0, r5
    375c:	blx	ip
    3760:	cmp	r0, #0
    3764:	beq	3774 <normal_scanLit+0xd4>
    3768:	str	r4, [r8]
    376c:	mov	r0, #0
    3770:	b	3890 <normal_scanLit+0x1f0>
    3774:	add	r4, r4, #2
    3778:	b	36d8 <normal_scanLit+0x38>
    377c:	sub	r0, r6, r4
    3780:	cmp	r0, #3
    3784:	bge	3790 <normal_scanLit+0xf0>
    3788:	mvn	r0, #1
    378c:	b	3890 <normal_scanLit+0x1f0>
    3790:	ldr	ip, [r5, #360]	; 0x168
    3794:	mov	r1, r4
    3798:	mov	r0, r5
    379c:	blx	ip
    37a0:	cmp	r0, #0
    37a4:	beq	37b4 <normal_scanLit+0x114>
    37a8:	str	r4, [r8]
    37ac:	mov	r0, #0
    37b0:	b	3890 <normal_scanLit+0x1f0>
    37b4:	add	r4, r4, #3
    37b8:	b	36d8 <normal_scanLit+0x38>
    37bc:	sub	r2, r6, r4
    37c0:	cmp	r2, #4
    37c4:	bge	37d0 <normal_scanLit+0x130>
    37c8:	mvn	r0, #1
    37cc:	b	3890 <normal_scanLit+0x1f0>
    37d0:	ldr	ip, [r5, #364]	; 0x16c
    37d4:	mov	r1, r4
    37d8:	mov	r0, r5
    37dc:	blx	ip
    37e0:	cmp	r0, #0
    37e4:	beq	37f4 <normal_scanLit+0x154>
    37e8:	str	r4, [r8]
    37ec:	mov	r0, #0
    37f0:	b	3890 <normal_scanLit+0x1f0>
    37f4:	add	r4, r4, #4
    37f8:	b	36d8 <normal_scanLit+0x38>
    37fc:	str	r4, [r8]
    3800:	mov	r0, #0
    3804:	b	3890 <normal_scanLit+0x1f0>
    3808:	add	r4, r4, #1
    380c:	cmp	r0, r7
    3810:	bne	36d8 <normal_scanLit+0x38>
    3814:	cmp	r4, r6
    3818:	bne	3824 <normal_scanLit+0x184>
    381c:	mvn	r0, #26
    3820:	b	3890 <normal_scanLit+0x1f0>
    3824:	str	r4, [r8]
    3828:	ldrb	ip, [r4]
    382c:	and	ip, ip, #255	; 0xff
    3830:	add	r0, r5, ip
    3834:	ldrb	r0, [r0, #76]	; 0x4c
    3838:	cmp	r0, #20
    383c:	bcs	385c <normal_scanLit+0x1bc>
    3840:	cmp	r0, #9
    3844:	beq	387c <normal_scanLit+0x1dc>
    3848:	cmp	r0, #10
    384c:	beq	387c <normal_scanLit+0x1dc>
    3850:	cmp	r0, #11
    3854:	beq	387c <normal_scanLit+0x1dc>
    3858:	b	3874 <normal_scanLit+0x1d4>
    385c:	cmp	r0, #20
    3860:	beq	387c <normal_scanLit+0x1dc>
    3864:	cmp	r0, #21
    3868:	beq	387c <normal_scanLit+0x1dc>
    386c:	cmp	r0, #30
    3870:	beq	387c <normal_scanLit+0x1dc>
    3874:	mov	r0, #0
    3878:	b	3890 <normal_scanLit+0x1f0>
    387c:	mov	r0, #27
    3880:	b	3890 <normal_scanLit+0x1f0>
    3884:	add	r4, r4, #1
    3888:	b	36d8 <normal_scanLit+0x38>
    388c:	mvn	r0, #0
    3890:	ldr	r4, [sp, #8]
    3894:	ldr	r5, [sp, #12]
    3898:	ldr	r6, [sp, #16]
    389c:	ldr	r7, [sp, #20]
    38a0:	ldr	r8, [sp, #24]
    38a4:	ldr	lr, [sp, #4]
    38a8:	add	sp, sp, #32
    38ac:	bx	lr

000038b0 <normal_prologTok>:
    38b0:	mov	ip, sp
    38b4:	sub	sp, sp, #40	; 0x28
    38b8:	str	ip, [sp, #4]
    38bc:	str	lr, [sp, #8]
    38c0:	str	r4, [sp, #16]
    38c4:	str	r5, [sp, #20]
    38c8:	str	r6, [sp, #24]
    38cc:	str	r7, [sp, #28]
    38d0:	str	r8, [sp, #32]
    38d4:	str	r9, [sp, #36]	; 0x24
    38d8:	mov	r8, r3
    38dc:	mov	r7, r2
    38e0:	mov	r4, r1
    38e4:	mov	r5, r0
    38e8:	cmp	r4, r7
    38ec:	bne	38f8 <normal_prologTok+0x48>
    38f0:	mvn	r0, #3
    38f4:	b	4274 <normal_prologTok+0x9c4>
    38f8:	mov	r0, #0
    38fc:	cmp	r0, #0
    3900:	beq	3928 <normal_prologTok+0x78>
    3904:	sub	r0, r7, r4
    3908:	mov	r1, #0
    390c:	cmp	r1, #0
    3910:	beq	3928 <normal_prologTok+0x78>
    3914:	cmp	r0, #0
    3918:	bne	3924 <normal_prologTok+0x74>
    391c:	mvn	r0, #0
    3920:	b	4274 <normal_prologTok+0x9c4>
    3924:	add	r7, r4, r0
    3928:	ldrb	r1, [r4]
    392c:	and	ip, r1, #255	; 0xff
    3930:	add	r0, r5, ip
    3934:	ldrb	r0, [r0, #76]	; 0x4c
    3938:	sub	r1, r0, #2
    393c:	cmp	r1, #35	; 0x23
    3940:	bcs	426c <normal_prologTok+0x9bc>
    3944:	add	pc, pc, r1, lsl #2
    3948:	nop	{0}
    394c:	b	3a10 <normal_prologTok+0x160>
    3950:	b	426c <normal_prologTok+0x9bc>
    3954:	b	3ba4 <normal_prologTok+0x2f4>
    3958:	b	3d38 <normal_prologTok+0x488>
    395c:	b	3da0 <normal_prologTok+0x4f0>
    3960:	b	3e08 <normal_prologTok+0x558>
    3964:	b	426c <normal_prologTok+0x9bc>
    3968:	b	3af8 <normal_prologTok+0x248>
    396c:	b	3b10 <normal_prologTok+0x260>
    3970:	b	3d10 <normal_prologTok+0x460>
    3974:	b	39d8 <normal_prologTok+0x128>
    3978:	b	39f4 <normal_prologTok+0x144>
    397c:	b	426c <normal_prologTok+0x9bc>
    3980:	b	426c <normal_prologTok+0x9bc>
    3984:	b	426c <normal_prologTok+0x9bc>
    3988:	b	426c <normal_prologTok+0x9bc>
    398c:	b	426c <normal_prologTok+0x9bc>
    3990:	b	3d20 <normal_prologTok+0x470>
    3994:	b	3b94 <normal_prologTok+0x2e4>
    3998:	b	3b10 <normal_prologTok+0x260>
    399c:	b	3e70 <normal_prologTok+0x5c0>
    39a0:	b	3e7c <normal_prologTok+0x5cc>
    39a4:	b	3e70 <normal_prologTok+0x5c0>
    39a8:	b	3e7c <normal_prologTok+0x5cc>
    39ac:	b	3e7c <normal_prologTok+0x5cc>
    39b0:	b	3e7c <normal_prologTok+0x5cc>
    39b4:	b	426c <normal_prologTok+0x9bc>
    39b8:	b	3e88 <normal_prologTok+0x5d8>
    39bc:	b	3b6c <normal_prologTok+0x2bc>
    39c0:	b	3c00 <normal_prologTok+0x350>
    39c4:	b	3c10 <normal_prologTok+0x360>
    39c8:	b	426c <normal_prologTok+0x9bc>
    39cc:	b	426c <normal_prologTok+0x9bc>
    39d0:	b	3b84 <normal_prologTok+0x2d4>
    39d4:	b	3d00 <normal_prologTok+0x450>
    39d8:	mov	r0, #12
    39dc:	add	r2, r4, #1
    39e0:	str	r8, [sp]
    39e4:	mov	r3, r7
    39e8:	mov	r1, r5
    39ec:	bl	36a0 <normal_scanLit>
    39f0:	b	4274 <normal_prologTok+0x9c4>
    39f4:	mov	r0, #13
    39f8:	add	r2, r4, #1
    39fc:	str	r8, [sp]
    3a00:	mov	r3, r7
    3a04:	mov	r1, r5
    3a08:	bl	36a0 <normal_scanLit>
    3a0c:	b	4274 <normal_prologTok+0x9c4>
    3a10:	add	r0, r4, #1
    3a14:	cmp	r0, r7
    3a18:	bne	3a24 <normal_prologTok+0x174>
    3a1c:	mvn	r0, #0
    3a20:	b	4274 <normal_prologTok+0x9c4>
    3a24:	ldrb	r2, [r0]
    3a28:	and	ip, r2, #255	; 0xff
    3a2c:	add	r3, r5, ip
    3a30:	ldrb	r3, [r3, #76]	; 0x4c
    3a34:	sub	r3, r3, #5
    3a38:	cmp	r3, #25
    3a3c:	bcs	3aec <normal_prologTok+0x23c>
    3a40:	add	pc, pc, r3, lsl #2
    3a44:	nop	{0}
    3a48:	b	3adc <normal_prologTok+0x22c>
    3a4c:	b	3adc <normal_prologTok+0x22c>
    3a50:	b	3adc <normal_prologTok+0x22c>
    3a54:	b	3aec <normal_prologTok+0x23c>
    3a58:	b	3aec <normal_prologTok+0x23c>
    3a5c:	b	3aec <normal_prologTok+0x23c>
    3a60:	b	3aec <normal_prologTok+0x23c>
    3a64:	b	3aec <normal_prologTok+0x23c>
    3a68:	b	3aec <normal_prologTok+0x23c>
    3a6c:	b	3aec <normal_prologTok+0x23c>
    3a70:	b	3ac4 <normal_prologTok+0x214>
    3a74:	b	3aac <normal_prologTok+0x1fc>
    3a78:	b	3aec <normal_prologTok+0x23c>
    3a7c:	b	3aec <normal_prologTok+0x23c>
    3a80:	b	3aec <normal_prologTok+0x23c>
    3a84:	b	3aec <normal_prologTok+0x23c>
    3a88:	b	3aec <normal_prologTok+0x23c>
    3a8c:	b	3adc <normal_prologTok+0x22c>
    3a90:	b	3aec <normal_prologTok+0x23c>
    3a94:	b	3adc <normal_prologTok+0x22c>
    3a98:	b	3aec <normal_prologTok+0x23c>
    3a9c:	b	3aec <normal_prologTok+0x23c>
    3aa0:	b	3aec <normal_prologTok+0x23c>
    3aa4:	b	3aec <normal_prologTok+0x23c>
    3aa8:	b	3adc <normal_prologTok+0x22c>
    3aac:	add	r1, r0, #1
    3ab0:	mov	r3, r8
    3ab4:	mov	r2, r7
    3ab8:	mov	r0, r5
    3abc:	bl	788 <normal_scanDecl>
    3ac0:	b	4274 <normal_prologTok+0x9c4>
    3ac4:	add	r1, r0, #1
    3ac8:	mov	r3, r8
    3acc:	mov	r2, r7
    3ad0:	mov	r0, r5
    3ad4:	bl	9b8 <normal_scanPi>
    3ad8:	b	4274 <normal_prologTok+0x9c4>
    3adc:	sub	r3, r0, #1
    3ae0:	str	r3, [r8]
    3ae4:	mov	r0, #29
    3ae8:	b	4274 <normal_prologTok+0x9c4>
    3aec:	str	r0, [r8]
    3af0:	mov	r0, #0
    3af4:	b	4274 <normal_prologTok+0x9c4>
    3af8:	add	r3, r4, #1
    3afc:	cmp	r3, r7
    3b00:	bne	3b10 <normal_prologTok+0x260>
    3b04:	str	r7, [r8]
    3b08:	mvn	r0, #14
    3b0c:	b	4274 <normal_prologTok+0x9c4>
    3b10:	add	r4, r4, #1
    3b14:	cmp	r4, r7
    3b18:	beq	3b60 <normal_prologTok+0x2b0>
    3b1c:	ldrb	r0, [r4]
    3b20:	and	r2, r0, #255	; 0xff
    3b24:	add	r1, r5, r2
    3b28:	ldrb	r2, [r1, #76]	; 0x4c
    3b2c:	cmp	r2, #9
    3b30:	beq	3b48 <normal_prologTok+0x298>
    3b34:	cmp	r2, #10
    3b38:	beq	3b10 <normal_prologTok+0x260>
    3b3c:	cmp	r2, #21
    3b40:	beq	3b10 <normal_prologTok+0x260>
    3b44:	b	3b54 <normal_prologTok+0x2a4>
    3b48:	add	ip, r4, #1
    3b4c:	cmp	ip, r7
    3b50:	bne	3b10 <normal_prologTok+0x260>
    3b54:	str	r4, [r8]
    3b58:	mov	r0, #15
    3b5c:	b	4274 <normal_prologTok+0x9c4>
    3b60:	str	r4, [r8]
    3b64:	mov	r0, #15
    3b68:	b	4274 <normal_prologTok+0x9c4>
    3b6c:	add	r1, r4, #1
    3b70:	mov	r3, r8
    3b74:	mov	r2, r7
    3b78:	mov	r0, r5
    3b7c:	bl	2ff8 <normal_scanPercent>
    3b80:	b	4274 <normal_prologTok+0x9c4>
    3b84:	add	r1, r4, #1
    3b88:	str	r1, [r8]
    3b8c:	mov	r0, #38	; 0x26
    3b90:	b	4274 <normal_prologTok+0x9c4>
    3b94:	add	ip, r4, #1
    3b98:	str	ip, [r8]
    3b9c:	mov	r0, #25
    3ba0:	b	4274 <normal_prologTok+0x9c4>
    3ba4:	add	ip, r4, #1
    3ba8:	cmp	ip, r7
    3bac:	bne	3bb8 <normal_prologTok+0x308>
    3bb0:	mvn	r0, #25
    3bb4:	b	4274 <normal_prologTok+0x9c4>
    3bb8:	ldrb	r0, [ip]
    3bbc:	cmp	r0, #93	; 0x5d
    3bc0:	bne	3bf4 <normal_prologTok+0x344>
    3bc4:	add	r2, ip, #1
    3bc8:	cmp	r2, r7
    3bcc:	bne	3bd8 <normal_prologTok+0x328>
    3bd0:	mvn	r0, #0
    3bd4:	b	4274 <normal_prologTok+0x9c4>
    3bd8:	ldrb	r2, [ip, #1]
    3bdc:	cmp	r2, #62	; 0x3e
    3be0:	bne	3bf4 <normal_prologTok+0x344>
    3be4:	add	r2, ip, #2
    3be8:	str	r2, [r8]
    3bec:	mov	r0, #34	; 0x22
    3bf0:	b	4274 <normal_prologTok+0x9c4>
    3bf4:	str	ip, [r8]
    3bf8:	mov	r0, #26
    3bfc:	b	4274 <normal_prologTok+0x9c4>
    3c00:	add	r2, r4, #1
    3c04:	str	r2, [r8]
    3c08:	mov	r0, #23
    3c0c:	b	4274 <normal_prologTok+0x9c4>
    3c10:	add	r3, r4, #1
    3c14:	cmp	r3, r7
    3c18:	bne	3c24 <normal_prologTok+0x374>
    3c1c:	mvn	r0, #23
    3c20:	b	4274 <normal_prologTok+0x9c4>
    3c24:	ldrb	r2, [r3]
    3c28:	and	r1, r2, #255	; 0xff
    3c2c:	add	r0, r5, r1
    3c30:	ldrb	r2, [r0, #76]	; 0x4c
    3c34:	sub	ip, r2, #9
    3c38:	cmp	ip, #28
    3c3c:	bcs	3cf4 <normal_prologTok+0x444>
    3c40:	add	pc, pc, ip, lsl #2
    3c44:	nop	{0}
    3c48:	b	3ce8 <normal_prologTok+0x438>
    3c4c:	b	3ce8 <normal_prologTok+0x438>
    3c50:	b	3ce8 <normal_prologTok+0x438>
    3c54:	b	3cf4 <normal_prologTok+0x444>
    3c58:	b	3cf4 <normal_prologTok+0x444>
    3c5c:	b	3cf4 <normal_prologTok+0x444>
    3c60:	b	3cc8 <normal_prologTok+0x418>
    3c64:	b	3cf4 <normal_prologTok+0x444>
    3c68:	b	3cf4 <normal_prologTok+0x444>
    3c6c:	b	3cf4 <normal_prologTok+0x444>
    3c70:	b	3cf4 <normal_prologTok+0x444>
    3c74:	b	3cf4 <normal_prologTok+0x444>
    3c78:	b	3ce8 <normal_prologTok+0x438>
    3c7c:	b	3cf4 <normal_prologTok+0x444>
    3c80:	b	3cf4 <normal_prologTok+0x444>
    3c84:	b	3cf4 <normal_prologTok+0x444>
    3c88:	b	3cf4 <normal_prologTok+0x444>
    3c8c:	b	3cf4 <normal_prologTok+0x444>
    3c90:	b	3cf4 <normal_prologTok+0x444>
    3c94:	b	3cf4 <normal_prologTok+0x444>
    3c98:	b	3cf4 <normal_prologTok+0x444>
    3c9c:	b	3cf4 <normal_prologTok+0x444>
    3ca0:	b	3cf4 <normal_prologTok+0x444>
    3ca4:	b	3ce8 <normal_prologTok+0x438>
    3ca8:	b	3cb8 <normal_prologTok+0x408>
    3cac:	b	3cd8 <normal_prologTok+0x428>
    3cb0:	b	3ce8 <normal_prologTok+0x438>
    3cb4:	b	3ce8 <normal_prologTok+0x438>
    3cb8:	add	r1, r3, #1
    3cbc:	str	r1, [r8]
    3cc0:	mov	r0, #36	; 0x24
    3cc4:	b	4274 <normal_prologTok+0x9c4>
    3cc8:	add	r3, r3, #1
    3ccc:	str	r3, [r8]
    3cd0:	mov	r0, #35	; 0x23
    3cd4:	b	4274 <normal_prologTok+0x9c4>
    3cd8:	add	r0, r3, #1
    3cdc:	str	r0, [r8]
    3ce0:	mov	r0, #37	; 0x25
    3ce4:	b	4274 <normal_prologTok+0x9c4>
    3ce8:	str	r3, [r8]
    3cec:	mov	r0, #24
    3cf0:	b	4274 <normal_prologTok+0x9c4>
    3cf4:	str	r3, [r8]
    3cf8:	mov	r0, #0
    3cfc:	b	4274 <normal_prologTok+0x9c4>
    3d00:	add	ip, r4, #1
    3d04:	str	ip, [r8]
    3d08:	mov	r0, #21
    3d0c:	b	4274 <normal_prologTok+0x9c4>
    3d10:	add	r3, r4, #1
    3d14:	str	r3, [r8]
    3d18:	mov	r0, #17
    3d1c:	b	4274 <normal_prologTok+0x9c4>
    3d20:	add	r1, r4, #1
    3d24:	mov	r3, r8
    3d28:	mov	r2, r7
    3d2c:	mov	r0, r5
    3d30:	bl	3364 <normal_scanPoundName>
    3d34:	b	4274 <normal_prologTok+0x9c4>
    3d38:	sub	r1, r7, r4
    3d3c:	cmp	r1, #2
    3d40:	bge	3d4c <normal_prologTok+0x49c>
    3d44:	mvn	r0, #1
    3d48:	b	4274 <normal_prologTok+0x9c4>
    3d4c:	ldr	ip, [r5, #344]	; 0x158
    3d50:	mov	r1, r4
    3d54:	mov	r0, r5
    3d58:	blx	ip
    3d5c:	cmp	r0, #0
    3d60:	beq	3d70 <normal_prologTok+0x4c0>
    3d64:	add	r4, r4, #2
    3d68:	mov	r6, #18
    3d6c:	b	3eb4 <normal_prologTok+0x604>
    3d70:	ldr	ip, [r5, #332]	; 0x14c
    3d74:	mov	r1, r4
    3d78:	mov	r0, r5
    3d7c:	blx	ip
    3d80:	cmp	r0, #0
    3d84:	beq	3d94 <normal_prologTok+0x4e4>
    3d88:	add	r4, r4, #2
    3d8c:	mov	r6, #19
    3d90:	b	3eb4 <normal_prologTok+0x604>
    3d94:	str	r4, [r8]
    3d98:	mov	r0, #0
    3d9c:	b	4274 <normal_prologTok+0x9c4>
    3da0:	sub	r3, r7, r4
    3da4:	cmp	r3, #3
    3da8:	bge	3db4 <normal_prologTok+0x504>
    3dac:	mvn	r0, #1
    3db0:	b	4274 <normal_prologTok+0x9c4>
    3db4:	ldr	ip, [r5, #348]	; 0x15c
    3db8:	mov	r1, r4
    3dbc:	mov	r0, r5
    3dc0:	blx	ip
    3dc4:	cmp	r0, #0
    3dc8:	beq	3dd8 <normal_prologTok+0x528>
    3dcc:	add	r4, r4, #3
    3dd0:	mov	r6, #18
    3dd4:	b	3eb4 <normal_prologTok+0x604>
    3dd8:	ldr	ip, [r5, #336]	; 0x150
    3ddc:	mov	r1, r4
    3de0:	mov	r0, r5
    3de4:	blx	ip
    3de8:	cmp	r0, #0
    3dec:	beq	3dfc <normal_prologTok+0x54c>
    3df0:	add	r4, r4, #3
    3df4:	mov	r6, #19
    3df8:	b	3eb4 <normal_prologTok+0x604>
    3dfc:	str	r4, [r8]
    3e00:	mov	r0, #0
    3e04:	b	4274 <normal_prologTok+0x9c4>
    3e08:	sub	r1, r7, r4
    3e0c:	cmp	r1, #4
    3e10:	bge	3e1c <normal_prologTok+0x56c>
    3e14:	mvn	r0, #1
    3e18:	b	4274 <normal_prologTok+0x9c4>
    3e1c:	ldr	ip, [r5, #352]	; 0x160
    3e20:	mov	r1, r4
    3e24:	mov	r0, r5
    3e28:	blx	ip
    3e2c:	cmp	r0, #0
    3e30:	beq	3e40 <normal_prologTok+0x590>
    3e34:	add	r4, r4, #4
    3e38:	mov	r6, #18
    3e3c:	b	3eb4 <normal_prologTok+0x604>
    3e40:	ldr	ip, [r5, #340]	; 0x154
    3e44:	mov	r1, r4
    3e48:	mov	r0, r5
    3e4c:	blx	ip
    3e50:	cmp	r0, #0
    3e54:	beq	3e64 <normal_prologTok+0x5b4>
    3e58:	add	r4, r4, #4
    3e5c:	mov	r6, #19
    3e60:	b	3eb4 <normal_prologTok+0x604>
    3e64:	str	r4, [r8]
    3e68:	mov	r0, #0
    3e6c:	b	4274 <normal_prologTok+0x9c4>
    3e70:	mov	r6, #18
    3e74:	add	r4, r4, #1
    3e78:	b	3eb4 <normal_prologTok+0x604>
    3e7c:	mov	r6, #19
    3e80:	add	r4, r4, #1
    3e84:	b	3eb4 <normal_prologTok+0x604>
    3e88:	mov	r0, #0
    3e8c:	cmp	r0, #0
    3e90:	beq	3ea0 <normal_prologTok+0x5f0>
    3e94:	add	r4, r4, #1
    3e98:	mov	r6, #18
    3e9c:	b	3eb4 <normal_prologTok+0x604>
    3ea0:	mov	r2, #0
    3ea4:	cmp	r2, #0
    3ea8:	beq	426c <normal_prologTok+0x9bc>
    3eac:	add	r4, r4, #1
    3eb0:	mov	r6, #19
    3eb4:	cmp	r4, r7
    3eb8:	beq	4264 <normal_prologTok+0x9b4>
    3ebc:	ldrb	r0, [r4]
    3ec0:	and	r0, r0, #255	; 0xff
    3ec4:	add	r2, r5, r0
    3ec8:	ldrb	r3, [r2, #76]	; 0x4c
    3ecc:	sub	r3, r3, #5
    3ed0:	cmp	r3, #32
    3ed4:	bcs	4258 <normal_prologTok+0x9a8>
    3ed8:	add	pc, pc, r3, lsl #2
    3edc:	nop	{0}
    3ee0:	b	3f80 <normal_prologTok+0x6d0>
    3ee4:	b	3fc0 <normal_prologTok+0x710>
    3ee8:	b	4000 <normal_prologTok+0x750>
    3eec:	b	4258 <normal_prologTok+0x9a8>
    3ef0:	b	4040 <normal_prologTok+0x790>
    3ef4:	b	4040 <normal_prologTok+0x790>
    3ef8:	b	4040 <normal_prologTok+0x790>
    3efc:	b	4258 <normal_prologTok+0x9a8>
    3f00:	b	4258 <normal_prologTok+0x9a8>
    3f04:	b	4258 <normal_prologTok+0x9a8>
    3f08:	b	4234 <normal_prologTok+0x984>
    3f0c:	b	4258 <normal_prologTok+0x9a8>
    3f10:	b	4258 <normal_prologTok+0x9a8>
    3f14:	b	4258 <normal_prologTok+0x9a8>
    3f18:	b	4258 <normal_prologTok+0x9a8>
    3f1c:	b	4040 <normal_prologTok+0x790>
    3f20:	b	4040 <normal_prologTok+0x790>
    3f24:	b	3f78 <normal_prologTok+0x6c8>
    3f28:	b	404c <normal_prologTok+0x79c>
    3f2c:	b	3f78 <normal_prologTok+0x6c8>
    3f30:	b	3f78 <normal_prologTok+0x6c8>
    3f34:	b	3f78 <normal_prologTok+0x6c8>
    3f38:	b	3f78 <normal_prologTok+0x6c8>
    3f3c:	b	4258 <normal_prologTok+0x9a8>
    3f40:	b	3f60 <normal_prologTok+0x6b0>
    3f44:	b	4040 <normal_prologTok+0x790>
    3f48:	b	4258 <normal_prologTok+0x9a8>
    3f4c:	b	4040 <normal_prologTok+0x790>
    3f50:	b	4210 <normal_prologTok+0x960>
    3f54:	b	41ec <normal_prologTok+0x93c>
    3f58:	b	4040 <normal_prologTok+0x790>
    3f5c:	b	4040 <normal_prologTok+0x790>
    3f60:	mov	r2, #1
    3f64:	cmp	r2, #0
    3f68:	beq	3f78 <normal_prologTok+0x6c8>
    3f6c:	str	r4, [r8]
    3f70:	mov	r0, #0
    3f74:	b	4274 <normal_prologTok+0x9c4>
    3f78:	add	r4, r4, #1
    3f7c:	b	3eb4 <normal_prologTok+0x604>
    3f80:	sub	r3, r7, r4
    3f84:	cmp	r3, #2
    3f88:	bge	3f94 <normal_prologTok+0x6e4>
    3f8c:	mvn	r0, #1
    3f90:	b	4274 <normal_prologTok+0x9c4>
    3f94:	ldr	ip, [r5, #332]	; 0x14c
    3f98:	mov	r1, r4
    3f9c:	mov	r0, r5
    3fa0:	blx	ip
    3fa4:	cmp	r0, #0
    3fa8:	bne	3fb8 <normal_prologTok+0x708>
    3fac:	str	r4, [r8]
    3fb0:	mov	r0, #0
    3fb4:	b	4274 <normal_prologTok+0x9c4>
    3fb8:	add	r4, r4, #2
    3fbc:	b	3eb4 <normal_prologTok+0x604>
    3fc0:	sub	r2, r7, r4
    3fc4:	cmp	r2, #3
    3fc8:	bge	3fd4 <normal_prologTok+0x724>
    3fcc:	mvn	r0, #1
    3fd0:	b	4274 <normal_prologTok+0x9c4>
    3fd4:	ldr	ip, [r5, #336]	; 0x150
    3fd8:	mov	r1, r4
    3fdc:	mov	r0, r5
    3fe0:	blx	ip
    3fe4:	cmp	r0, #0
    3fe8:	bne	3ff8 <normal_prologTok+0x748>
    3fec:	str	r4, [r8]
    3ff0:	mov	r0, #0
    3ff4:	b	4274 <normal_prologTok+0x9c4>
    3ff8:	add	r4, r4, #3
    3ffc:	b	3eb4 <normal_prologTok+0x604>
    4000:	sub	r0, r7, r4
    4004:	cmp	r0, #4
    4008:	bge	4014 <normal_prologTok+0x764>
    400c:	mvn	r0, #1
    4010:	b	4274 <normal_prologTok+0x9c4>
    4014:	ldr	r9, [r5, #340]	; 0x154
    4018:	mov	r1, r4
    401c:	mov	r0, r5
    4020:	blx	r9
    4024:	cmp	r0, #0
    4028:	bne	4038 <normal_prologTok+0x788>
    402c:	str	r4, [r8]
    4030:	mov	r0, #0
    4034:	b	4274 <normal_prologTok+0x9c4>
    4038:	add	r4, r4, #4
    403c:	b	3eb4 <normal_prologTok+0x604>
    4040:	str	r4, [r8]
    4044:	mov	r0, r6
    4048:	b	4274 <normal_prologTok+0x9c4>
    404c:	add	r4, r4, #1
    4050:	cmp	r6, #18
    4054:	beq	4068 <normal_prologTok+0x7b8>
    4058:	cmp	r6, #41	; 0x29
    405c:	bne	3eb4 <normal_prologTok+0x604>
    4060:	mov	r6, #19
    4064:	b	3eb4 <normal_prologTok+0x604>
    4068:	cmp	r4, r7
    406c:	bne	4078 <normal_prologTok+0x7c8>
    4070:	mvn	r0, #0
    4074:	b	4274 <normal_prologTok+0x9c4>
    4078:	mov	r6, #41	; 0x29
    407c:	ldrb	ip, [r4]
    4080:	and	ip, ip, #255	; 0xff
    4084:	add	ip, r5, ip
    4088:	ldrb	r1, [ip, #76]	; 0x4c
    408c:	sub	r3, r1, #5
    4090:	cmp	r3, #25
    4094:	bcs	41e4 <normal_prologTok+0x934>
    4098:	add	pc, pc, r3, lsl #2
    409c:	nop	{0}
    40a0:	b	4124 <normal_prologTok+0x874>
    40a4:	b	4164 <normal_prologTok+0x8b4>
    40a8:	b	41a4 <normal_prologTok+0x8f4>
    40ac:	b	41e4 <normal_prologTok+0x934>
    40b0:	b	41e4 <normal_prologTok+0x934>
    40b4:	b	41e4 <normal_prologTok+0x934>
    40b8:	b	41e4 <normal_prologTok+0x934>
    40bc:	b	41e4 <normal_prologTok+0x934>
    40c0:	b	41e4 <normal_prologTok+0x934>
    40c4:	b	41e4 <normal_prologTok+0x934>
    40c8:	b	41e4 <normal_prologTok+0x934>
    40cc:	b	41e4 <normal_prologTok+0x934>
    40d0:	b	41e4 <normal_prologTok+0x934>
    40d4:	b	41e4 <normal_prologTok+0x934>
    40d8:	b	41e4 <normal_prologTok+0x934>
    40dc:	b	41e4 <normal_prologTok+0x934>
    40e0:	b	41e4 <normal_prologTok+0x934>
    40e4:	b	411c <normal_prologTok+0x86c>
    40e8:	b	41e4 <normal_prologTok+0x934>
    40ec:	b	411c <normal_prologTok+0x86c>
    40f0:	b	411c <normal_prologTok+0x86c>
    40f4:	b	411c <normal_prologTok+0x86c>
    40f8:	b	411c <normal_prologTok+0x86c>
    40fc:	b	41e4 <normal_prologTok+0x934>
    4100:	b	4104 <normal_prologTok+0x854>
    4104:	mov	ip, #1
    4108:	cmp	ip, #0
    410c:	beq	411c <normal_prologTok+0x86c>
    4110:	str	r4, [r8]
    4114:	mov	r0, #0
    4118:	b	4274 <normal_prologTok+0x9c4>
    411c:	add	r4, r4, #1
    4120:	b	3eb4 <normal_prologTok+0x604>
    4124:	sub	r0, r7, r4
    4128:	cmp	r0, #2
    412c:	bge	4138 <normal_prologTok+0x888>
    4130:	mvn	r0, #1
    4134:	b	4274 <normal_prologTok+0x9c4>
    4138:	ldr	ip, [r5, #332]	; 0x14c
    413c:	mov	r1, r4
    4140:	mov	r0, r5
    4144:	blx	ip
    4148:	cmp	r0, #0
    414c:	bne	415c <normal_prologTok+0x8ac>
    4150:	str	r4, [r8]
    4154:	mov	r0, #0
    4158:	b	4274 <normal_prologTok+0x9c4>
    415c:	add	r4, r4, #2
    4160:	b	3eb4 <normal_prologTok+0x604>
    4164:	sub	ip, r7, r4
    4168:	cmp	ip, #3
    416c:	bge	4178 <normal_prologTok+0x8c8>
    4170:	mvn	r0, #1
    4174:	b	4274 <normal_prologTok+0x9c4>
    4178:	ldr	ip, [r5, #336]	; 0x150
    417c:	mov	r1, r4
    4180:	mov	r0, r5
    4184:	blx	ip
    4188:	cmp	r0, #0
    418c:	bne	419c <normal_prologTok+0x8ec>
    4190:	str	r4, [r8]
    4194:	mov	r0, #0
    4198:	b	4274 <normal_prologTok+0x9c4>
    419c:	add	r4, r4, #3
    41a0:	b	3eb4 <normal_prologTok+0x604>
    41a4:	sub	r0, r7, r4
    41a8:	cmp	r0, #4
    41ac:	bge	41b8 <normal_prologTok+0x908>
    41b0:	mvn	r0, #1
    41b4:	b	4274 <normal_prologTok+0x9c4>
    41b8:	ldr	ip, [r5, #340]	; 0x154
    41bc:	mov	r1, r4
    41c0:	mov	r0, r5
    41c4:	blx	ip
    41c8:	cmp	r0, #0
    41cc:	bne	41dc <normal_prologTok+0x92c>
    41d0:	str	r4, [r8]
    41d4:	mov	r0, #0
    41d8:	b	4274 <normal_prologTok+0x9c4>
    41dc:	add	r4, r4, #4
    41e0:	b	3eb4 <normal_prologTok+0x604>
    41e4:	mov	r6, #19
    41e8:	b	3eb4 <normal_prologTok+0x604>
    41ec:	cmp	r6, #19
    41f0:	bne	4200 <normal_prologTok+0x950>
    41f4:	str	r4, [r8]
    41f8:	mov	r0, #0
    41fc:	b	4274 <normal_prologTok+0x9c4>
    4200:	add	r1, r4, #1
    4204:	str	r1, [r8]
    4208:	mov	r0, #32
    420c:	b	4274 <normal_prologTok+0x9c4>
    4210:	cmp	r6, #19
    4214:	bne	4224 <normal_prologTok+0x974>
    4218:	str	r4, [r8]
    421c:	mov	r0, #0
    4220:	b	4274 <normal_prologTok+0x9c4>
    4224:	add	r2, r4, #1
    4228:	str	r2, [r8]
    422c:	mov	r0, #31
    4230:	b	4274 <normal_prologTok+0x9c4>
    4234:	cmp	r6, #19
    4238:	bne	4248 <normal_prologTok+0x998>
    423c:	str	r4, [r8]
    4240:	mov	r0, #0
    4244:	b	4274 <normal_prologTok+0x9c4>
    4248:	add	r1, r4, #1
    424c:	str	r1, [r8]
    4250:	mov	r0, #30
    4254:	b	4274 <normal_prologTok+0x9c4>
    4258:	str	r4, [r8]
    425c:	mov	r0, #0
    4260:	b	4274 <normal_prologTok+0x9c4>
    4264:	rsb	r0, r6, #0
    4268:	b	4274 <normal_prologTok+0x9c4>
    426c:	str	r4, [r8]
    4270:	mov	r0, #0
    4274:	ldr	r4, [sp, #16]
    4278:	ldr	r5, [sp, #20]
    427c:	ldr	r6, [sp, #24]
    4280:	ldr	r7, [sp, #28]
    4284:	ldr	r8, [sp, #32]
    4288:	ldr	r9, [sp, #36]	; 0x24
    428c:	ldr	lr, [sp, #8]
    4290:	add	sp, sp, #40	; 0x28
    4294:	bx	lr

00004298 <normal_attributeValueTok>:
    4298:	mov	ip, sp
    429c:	sub	sp, sp, #16
    42a0:	str	ip, [sp]
    42a4:	str	lr, [sp, #4]
    42a8:	str	r4, [sp, #8]
    42ac:	cmp	r1, r2
    42b0:	bne	42bc <normal_attributeValueTok+0x24>
    42b4:	mvn	r0, #3
    42b8:	b	4428 <normal_attributeValueTok+0x190>
    42bc:	mov	ip, r1
    42c0:	cmp	r1, r2
    42c4:	beq	4420 <normal_attributeValueTok+0x188>
    42c8:	ldrb	r4, [r1]
    42cc:	and	r4, r4, #255	; 0xff
    42d0:	add	r4, r0, r4
    42d4:	ldrb	r4, [r4, #76]	; 0x4c
    42d8:	sub	r4, r4, #2
    42dc:	cmp	r4, #20
    42e0:	bcs	4418 <normal_attributeValueTok+0x180>
    42e4:	add	pc, pc, r4, lsl #2
    42e8:	nop	{0}
    42ec:	b	4374 <normal_attributeValueTok+0xdc>
    42f0:	b	4354 <normal_attributeValueTok+0xbc>
    42f4:	b	4418 <normal_attributeValueTok+0x180>
    42f8:	b	433c <normal_attributeValueTok+0xa4>
    42fc:	b	4344 <normal_attributeValueTok+0xac>
    4300:	b	434c <normal_attributeValueTok+0xb4>
    4304:	b	4418 <normal_attributeValueTok+0x180>
    4308:	b	43a4 <normal_attributeValueTok+0x10c>
    430c:	b	4380 <normal_attributeValueTok+0xe8>
    4310:	b	4418 <normal_attributeValueTok+0x180>
    4314:	b	4418 <normal_attributeValueTok+0x180>
    4318:	b	4418 <normal_attributeValueTok+0x180>
    431c:	b	4418 <normal_attributeValueTok+0x180>
    4320:	b	4418 <normal_attributeValueTok+0x180>
    4324:	b	4418 <normal_attributeValueTok+0x180>
    4328:	b	4418 <normal_attributeValueTok+0x180>
    432c:	b	4418 <normal_attributeValueTok+0x180>
    4330:	b	4418 <normal_attributeValueTok+0x180>
    4334:	b	4418 <normal_attributeValueTok+0x180>
    4338:	b	43f4 <normal_attributeValueTok+0x15c>
    433c:	add	r1, r1, #2
    4340:	b	42c0 <normal_attributeValueTok+0x28>
    4344:	add	r1, r1, #3
    4348:	b	42c0 <normal_attributeValueTok+0x28>
    434c:	add	r1, r1, #4
    4350:	b	42c0 <normal_attributeValueTok+0x28>
    4354:	cmp	r1, ip
    4358:	bne	4368 <normal_attributeValueTok+0xd0>
    435c:	add	r1, r1, #1
    4360:	bl	1800 <normal_scanRef>
    4364:	b	4428 <normal_attributeValueTok+0x190>
    4368:	str	r1, [r3]
    436c:	mov	r0, #6
    4370:	b	4428 <normal_attributeValueTok+0x190>
    4374:	str	r1, [r3]
    4378:	mov	r0, #0
    437c:	b	4428 <normal_attributeValueTok+0x190>
    4380:	cmp	r1, ip
    4384:	bne	4398 <normal_attributeValueTok+0x100>
    4388:	add	ip, r1, #1
    438c:	str	ip, [r3]
    4390:	mov	r0, #7
    4394:	b	4428 <normal_attributeValueTok+0x190>
    4398:	str	r1, [r3]
    439c:	mov	r0, #6
    43a0:	b	4428 <normal_attributeValueTok+0x190>
    43a4:	cmp	r1, ip
    43a8:	bne	43e8 <normal_attributeValueTok+0x150>
    43ac:	add	r4, r1, #1
    43b0:	cmp	r4, r2
    43b4:	bne	43c0 <normal_attributeValueTok+0x128>
    43b8:	mvn	r0, #2
    43bc:	b	4428 <normal_attributeValueTok+0x190>
    43c0:	ldrb	r1, [r4]
    43c4:	and	ip, r1, #255	; 0xff
    43c8:	add	r2, r0, ip
    43cc:	ldrb	r2, [r2, #76]	; 0x4c
    43d0:	cmp	r2, #10
    43d4:	bne	43dc <normal_attributeValueTok+0x144>
    43d8:	add	r4, r4, #1
    43dc:	str	r4, [r3]
    43e0:	mov	r0, #7
    43e4:	b	4428 <normal_attributeValueTok+0x190>
    43e8:	str	r1, [r3]
    43ec:	mov	r0, #6
    43f0:	b	4428 <normal_attributeValueTok+0x190>
    43f4:	cmp	r1, ip
    43f8:	bne	440c <normal_attributeValueTok+0x174>
    43fc:	add	r1, r1, #1
    4400:	str	r1, [r3]
    4404:	mov	r0, #39	; 0x27
    4408:	b	4428 <normal_attributeValueTok+0x190>
    440c:	str	r1, [r3]
    4410:	mov	r0, #6
    4414:	b	4428 <normal_attributeValueTok+0x190>
    4418:	add	r1, r1, #1
    441c:	b	42c0 <normal_attributeValueTok+0x28>
    4420:	str	r1, [r3]
    4424:	mov	r0, #6
    4428:	ldr	r4, [sp, #8]
    442c:	ldr	lr, [sp, #4]
    4430:	add	sp, sp, #16
    4434:	bx	lr

00004438 <normal_entityValueTok>:
    4438:	mov	ip, sp
    443c:	sub	sp, sp, #16
    4440:	str	ip, [sp]
    4444:	str	lr, [sp, #4]
    4448:	str	r4, [sp, #8]
    444c:	cmp	r1, r2
    4450:	bne	445c <normal_entityValueTok+0x24>
    4454:	mvn	r0, #3
    4458:	b	45a8 <normal_entityValueTok+0x170>
    445c:	mov	ip, r1
    4460:	cmp	r1, r2
    4464:	beq	45a0 <normal_entityValueTok+0x168>
    4468:	ldrb	r4, [r1]
    446c:	and	r4, r4, #255	; 0xff
    4470:	add	r4, r0, r4
    4474:	ldrb	r4, [r4, #76]	; 0x4c
    4478:	cmp	r4, #7
    447c:	bcs	44c8 <normal_entityValueTok+0x90>
    4480:	cmp	r4, #3
    4484:	beq	44a8 <normal_entityValueTok+0x70>
    4488:	cmp	r4, #5
    448c:	beq	44a0 <normal_entityValueTok+0x68>
    4490:	cmp	r4, #6
    4494:	bne	4574 <normal_entityValueTok+0x13c>
    4498:	add	r1, r1, #3
    449c:	b	4460 <normal_entityValueTok+0x28>
    44a0:	add	r1, r1, #2
    44a4:	b	4460 <normal_entityValueTok+0x28>
    44a8:	cmp	r1, ip
    44ac:	bne	44bc <normal_entityValueTok+0x84>
    44b0:	add	r1, r1, #1
    44b4:	bl	1800 <normal_scanRef>
    44b8:	b	45a8 <normal_entityValueTok+0x170>
    44bc:	str	r1, [r3]
    44c0:	mov	r0, #6
    44c4:	b	45a8 <normal_entityValueTok+0x170>
    44c8:	cmp	r4, #10
    44cc:	bcs	4538 <normal_entityValueTok+0x100>
    44d0:	cmp	r4, #7
    44d4:	beq	4530 <normal_entityValueTok+0xf8>
    44d8:	cmp	r4, #9
    44dc:	bne	4574 <normal_entityValueTok+0x13c>
    44e0:	cmp	r1, ip
    44e4:	bne	4524 <normal_entityValueTok+0xec>
    44e8:	add	r4, r1, #1
    44ec:	cmp	r4, r2
    44f0:	bne	44fc <normal_entityValueTok+0xc4>
    44f4:	mvn	r0, #2
    44f8:	b	45a8 <normal_entityValueTok+0x170>
    44fc:	ldrb	r2, [r4]
    4500:	and	r1, r2, #255	; 0xff
    4504:	add	ip, r0, r1
    4508:	ldrb	r2, [ip, #76]	; 0x4c
    450c:	cmp	r2, #10
    4510:	bne	4518 <normal_entityValueTok+0xe0>
    4514:	add	r4, r4, #1
    4518:	str	r4, [r3]
    451c:	mov	r0, #7
    4520:	b	45a8 <normal_entityValueTok+0x170>
    4524:	str	r1, [r3]
    4528:	mov	r0, #6
    452c:	b	45a8 <normal_entityValueTok+0x170>
    4530:	add	r1, r1, #4
    4534:	b	4460 <normal_entityValueTok+0x28>
    4538:	cmp	r4, #10
    453c:	beq	457c <normal_entityValueTok+0x144>
    4540:	cmp	r4, #30
    4544:	bne	4574 <normal_entityValueTok+0x13c>
    4548:	cmp	r1, ip
    454c:	bne	4568 <normal_entityValueTok+0x130>
    4550:	add	r1, r1, #1
    4554:	bl	2ff8 <normal_scanPercent>
    4558:	cmp	r0, #22
    455c:	bne	45a8 <normal_entityValueTok+0x170>
    4560:	mov	r0, #0
    4564:	b	45a8 <normal_entityValueTok+0x170>
    4568:	str	r1, [r3]
    456c:	mov	r0, #6
    4570:	b	45a8 <normal_entityValueTok+0x170>
    4574:	add	r1, r1, #1
    4578:	b	4460 <normal_entityValueTok+0x28>
    457c:	cmp	r1, ip
    4580:	bne	4594 <normal_entityValueTok+0x15c>
    4584:	add	r0, r1, #1
    4588:	str	r0, [r3]
    458c:	mov	r0, #7
    4590:	b	45a8 <normal_entityValueTok+0x170>
    4594:	str	r1, [r3]
    4598:	mov	r0, #6
    459c:	b	45a8 <normal_entityValueTok+0x170>
    45a0:	str	r1, [r3]
    45a4:	mov	r0, #6
    45a8:	ldr	r4, [sp, #8]
    45ac:	ldr	lr, [sp, #4]
    45b0:	add	sp, sp, #16
    45b4:	bx	lr

000045b8 <normal_ignoreSectionTok>:
    45b8:	mov	ip, sp
    45bc:	sub	sp, sp, #32
    45c0:	str	ip, [sp]
    45c4:	str	lr, [sp, #4]
    45c8:	str	r4, [sp, #8]
    45cc:	str	r5, [sp, #12]
    45d0:	str	r6, [sp, #16]
    45d4:	str	r7, [sp, #20]
    45d8:	str	r8, [sp, #24]
    45dc:	mov	r7, r3
    45e0:	mov	r8, r2
    45e4:	mov	r4, r1
    45e8:	mov	r5, r0
    45ec:	mov	r6, #0
    45f0:	mov	r2, #0
    45f4:	cmp	r2, #0
    45f8:	beq	4610 <normal_ignoreSectionTok+0x58>
    45fc:	sub	ip, r8, r4
    4600:	mov	r0, #0
    4604:	cmp	r0, #0
    4608:	beq	4610 <normal_ignoreSectionTok+0x58>
    460c:	add	r8, r4, ip
    4610:	cmp	r4, r8
    4614:	beq	47dc <normal_ignoreSectionTok+0x224>
    4618:	ldrb	r3, [r4]
    461c:	and	r1, r3, #255	; 0xff
    4620:	add	ip, r5, r1
    4624:	ldrb	r0, [ip, #76]	; 0x4c
    4628:	cmp	r0, #9
    462c:	bcs	47d4 <normal_ignoreSectionTok+0x21c>
    4630:	add	pc, pc, r0, lsl #2
    4634:	nop	{0}
    4638:	b	471c <normal_ignoreSectionTok+0x164>
    463c:	b	471c <normal_ignoreSectionTok+0x164>
    4640:	b	4728 <normal_ignoreSectionTok+0x170>
    4644:	b	47d4 <normal_ignoreSectionTok+0x21c>
    4648:	b	4774 <normal_ignoreSectionTok+0x1bc>
    464c:	b	465c <normal_ignoreSectionTok+0xa4>
    4650:	b	469c <normal_ignoreSectionTok+0xe4>
    4654:	b	46dc <normal_ignoreSectionTok+0x124>
    4658:	b	471c <normal_ignoreSectionTok+0x164>
    465c:	sub	ip, r8, r4
    4660:	cmp	ip, #2
    4664:	bge	4670 <normal_ignoreSectionTok+0xb8>
    4668:	mvn	r0, #1
    466c:	b	47e0 <normal_ignoreSectionTok+0x228>
    4670:	ldr	ip, [r5, #356]	; 0x164
    4674:	mov	r1, r4
    4678:	mov	r0, r5
    467c:	blx	ip
    4680:	cmp	r0, #0
    4684:	beq	4694 <normal_ignoreSectionTok+0xdc>
    4688:	str	r4, [r7]
    468c:	mov	r0, #0
    4690:	b	47e0 <normal_ignoreSectionTok+0x228>
    4694:	add	r4, r4, #2
    4698:	b	4610 <normal_ignoreSectionTok+0x58>
    469c:	sub	r2, r8, r4
    46a0:	cmp	r2, #3
    46a4:	bge	46b0 <normal_ignoreSectionTok+0xf8>
    46a8:	mvn	r0, #1
    46ac:	b	47e0 <normal_ignoreSectionTok+0x228>
    46b0:	ldr	ip, [r5, #360]	; 0x168
    46b4:	mov	r1, r4
    46b8:	mov	r0, r5
    46bc:	blx	ip
    46c0:	cmp	r0, #0
    46c4:	beq	46d4 <normal_ignoreSectionTok+0x11c>
    46c8:	str	r4, [r7]
    46cc:	mov	r0, #0
    46d0:	b	47e0 <normal_ignoreSectionTok+0x228>
    46d4:	add	r4, r4, #3
    46d8:	b	4610 <normal_ignoreSectionTok+0x58>
    46dc:	sub	r1, r8, r4
    46e0:	cmp	r1, #4
    46e4:	bge	46f0 <normal_ignoreSectionTok+0x138>
    46e8:	mvn	r0, #1
    46ec:	b	47e0 <normal_ignoreSectionTok+0x228>
    46f0:	ldr	ip, [r5, #364]	; 0x16c
    46f4:	mov	r1, r4
    46f8:	mov	r0, r5
    46fc:	blx	ip
    4700:	cmp	r0, #0
    4704:	beq	4714 <normal_ignoreSectionTok+0x15c>
    4708:	str	r4, [r7]
    470c:	mov	r0, #0
    4710:	b	47e0 <normal_ignoreSectionTok+0x228>
    4714:	add	r4, r4, #4
    4718:	b	4610 <normal_ignoreSectionTok+0x58>
    471c:	str	r4, [r7]
    4720:	mov	r0, #0
    4724:	b	47e0 <normal_ignoreSectionTok+0x228>
    4728:	add	r4, r4, #1
    472c:	cmp	r4, r8
    4730:	bne	473c <normal_ignoreSectionTok+0x184>
    4734:	mvn	r0, #0
    4738:	b	47e0 <normal_ignoreSectionTok+0x228>
    473c:	ldrb	r0, [r4]
    4740:	cmp	r0, #33	; 0x21
    4744:	bne	4610 <normal_ignoreSectionTok+0x58>
    4748:	add	r4, r4, #1
    474c:	cmp	r4, r8
    4750:	bne	475c <normal_ignoreSectionTok+0x1a4>
    4754:	mvn	r0, #0
    4758:	b	47e0 <normal_ignoreSectionTok+0x228>
    475c:	ldrb	r1, [r4]
    4760:	cmp	r1, #91	; 0x5b
    4764:	bne	4610 <normal_ignoreSectionTok+0x58>
    4768:	add	r6, r6, #1
    476c:	add	r4, r4, #1
    4770:	b	4610 <normal_ignoreSectionTok+0x58>
    4774:	add	r4, r4, #1
    4778:	cmp	r4, r8
    477c:	bne	4788 <normal_ignoreSectionTok+0x1d0>
    4780:	mvn	r0, #0
    4784:	b	47e0 <normal_ignoreSectionTok+0x228>
    4788:	ldrb	r0, [r4]
    478c:	cmp	r0, #93	; 0x5d
    4790:	bne	4610 <normal_ignoreSectionTok+0x58>
    4794:	add	r4, r4, #1
    4798:	cmp	r4, r8
    479c:	bne	47a8 <normal_ignoreSectionTok+0x1f0>
    47a0:	mvn	r0, #0
    47a4:	b	47e0 <normal_ignoreSectionTok+0x228>
    47a8:	ldrb	ip, [r4]
    47ac:	cmp	ip, #62	; 0x3e
    47b0:	bne	4610 <normal_ignoreSectionTok+0x58>
    47b4:	add	r4, r4, #1
    47b8:	cmp	r6, #0
    47bc:	bne	47cc <normal_ignoreSectionTok+0x214>
    47c0:	str	r4, [r7]
    47c4:	mov	r0, #42	; 0x2a
    47c8:	b	47e0 <normal_ignoreSectionTok+0x228>
    47cc:	sub	r6, r6, #1
    47d0:	b	4610 <normal_ignoreSectionTok+0x58>
    47d4:	add	r4, r4, #1
    47d8:	b	4610 <normal_ignoreSectionTok+0x58>
    47dc:	mvn	r0, #0
    47e0:	ldr	r4, [sp, #8]
    47e4:	ldr	r5, [sp, #12]
    47e8:	ldr	r6, [sp, #16]
    47ec:	ldr	r7, [sp, #20]
    47f0:	ldr	r8, [sp, #24]
    47f4:	ldr	lr, [sp, #4]
    47f8:	add	sp, sp, #32
    47fc:	bx	lr

00004800 <normal_isPublicId>:
    4800:	mov	ip, sp
    4804:	sub	sp, sp, #16
    4808:	str	ip, [sp]
    480c:	str	lr, [sp, #4]
    4810:	str	r4, [sp, #8]
    4814:	add	r4, r1, #1
    4818:	sub	r2, r2, #1
    481c:	cmp	r4, r2
    4820:	beq	4904 <normal_isPublicId+0x104>
    4824:	ldrb	r1, [r4]
    4828:	and	ip, r1, #255	; 0xff
    482c:	add	r1, r0, ip
    4830:	ldrb	r1, [r1, #76]	; 0x4c
    4834:	sub	ip, r1, #9
    4838:	cmp	ip, #27
    483c:	bcs	48dc <normal_isPublicId+0xdc>
    4840:	add	pc, pc, ip, lsl #2
    4844:	nop	{0}
    4848:	b	48fc <normal_isPublicId+0xfc>
    484c:	b	48fc <normal_isPublicId+0xfc>
    4850:	b	48dc <normal_isPublicId+0xdc>
    4854:	b	48dc <normal_isPublicId+0xdc>
    4858:	b	48fc <normal_isPublicId+0xfc>
    485c:	b	48fc <normal_isPublicId+0xfc>
    4860:	b	48fc <normal_isPublicId+0xfc>
    4864:	b	48fc <normal_isPublicId+0xfc>
    4868:	b	48fc <normal_isPublicId+0xfc>
    486c:	b	48fc <normal_isPublicId+0xfc>
    4870:	b	48fc <normal_isPublicId+0xfc>
    4874:	b	48dc <normal_isPublicId+0xdc>
    4878:	b	48b4 <normal_isPublicId+0xb4>
    487c:	b	48cc <normal_isPublicId+0xcc>
    4880:	b	48fc <normal_isPublicId+0xfc>
    4884:	b	48fc <normal_isPublicId+0xfc>
    4888:	b	48fc <normal_isPublicId+0xfc>
    488c:	b	48cc <normal_isPublicId+0xcc>
    4890:	b	48fc <normal_isPublicId+0xfc>
    4894:	b	48dc <normal_isPublicId+0xdc>
    4898:	b	48dc <normal_isPublicId+0xdc>
    489c:	b	48fc <normal_isPublicId+0xfc>
    48a0:	b	48fc <normal_isPublicId+0xfc>
    48a4:	b	48fc <normal_isPublicId+0xfc>
    48a8:	b	48fc <normal_isPublicId+0xfc>
    48ac:	b	48fc <normal_isPublicId+0xfc>
    48b0:	b	48fc <normal_isPublicId+0xfc>
    48b4:	ldrb	ip, [r4]
    48b8:	cmp	ip, #9
    48bc:	bne	48fc <normal_isPublicId+0xfc>
    48c0:	str	r4, [r3]
    48c4:	mov	r0, #0
    48c8:	b	4908 <normal_isPublicId+0x108>
    48cc:	ldrb	ip, [r4]
    48d0:	bic	r1, ip, #127	; 0x7f
    48d4:	cmp	r1, #0
    48d8:	beq	48fc <normal_isPublicId+0xfc>
    48dc:	ldrb	ip, [r4]
    48e0:	cmp	ip, #36	; 0x24
    48e4:	beq	48fc <normal_isPublicId+0xfc>
    48e8:	cmp	ip, #64	; 0x40
    48ec:	beq	48fc <normal_isPublicId+0xfc>
    48f0:	str	r4, [r3]
    48f4:	mov	r0, #0
    48f8:	b	4908 <normal_isPublicId+0x108>
    48fc:	add	r4, r4, #1
    4900:	b	481c <normal_isPublicId+0x1c>
    4904:	mov	r0, #1
    4908:	ldr	r4, [sp, #8]
    490c:	ldr	lr, [sp, #4]
    4910:	add	sp, sp, #16
    4914:	bx	lr

00004918 <normal_getAtts>:
    4918:	mov	ip, sp
    491c:	sub	sp, sp, #24
    4920:	str	ip, [sp]
    4924:	str	lr, [sp, #4]
    4928:	str	r4, [sp, #8]
    492c:	str	r5, [sp, #12]
    4930:	str	r6, [sp, #16]
    4934:	str	r7, [sp, #20]
    4938:	mov	r4, #1
    493c:	mov	ip, #0
    4940:	mov	r5, #0
    4944:	add	r6, r1, #1
    4948:	ldrb	r1, [r6]
    494c:	and	r1, r1, #255	; 0xff
    4950:	add	r1, r0, r1
    4954:	ldrb	r1, [r1, #76]	; 0x4c
    4958:	sub	r1, r1, #3
    495c:	cmp	r1, #27
    4960:	bcs	4c98 <normal_getAtts+0x380>
    4964:	add	pc, pc, r1, lsl #2
    4968:	nop	{0}
    496c:	b	4b1c <normal_getAtts+0x204>
    4970:	b	4c98 <normal_getAtts+0x380>
    4974:	b	49d8 <normal_getAtts+0xc0>
    4978:	b	4a04 <normal_getAtts+0xec>
    497c:	b	4a30 <normal_getAtts+0x118>
    4980:	b	4c98 <normal_getAtts+0x380>
    4984:	b	4c2c <normal_getAtts+0x314>
    4988:	b	4c2c <normal_getAtts+0x314>
    498c:	b	4c70 <normal_getAtts+0x358>
    4990:	b	4a84 <normal_getAtts+0x16c>
    4994:	b	4ad0 <normal_getAtts+0x1b8>
    4998:	b	4c98 <normal_getAtts+0x380>
    499c:	b	4c98 <normal_getAtts+0x380>
    49a0:	b	4c98 <normal_getAtts+0x380>
    49a4:	b	4c70 <normal_getAtts+0x358>
    49a8:	b	4c98 <normal_getAtts+0x380>
    49ac:	b	4c98 <normal_getAtts+0x380>
    49b0:	b	4c98 <normal_getAtts+0x380>
    49b4:	b	4b34 <normal_getAtts+0x21c>
    49b8:	b	4a5c <normal_getAtts+0x144>
    49bc:	b	4c98 <normal_getAtts+0x380>
    49c0:	b	4a5c <normal_getAtts+0x144>
    49c4:	b	4c98 <normal_getAtts+0x380>
    49c8:	b	4c98 <normal_getAtts+0x380>
    49cc:	b	4c98 <normal_getAtts+0x380>
    49d0:	b	4c98 <normal_getAtts+0x380>
    49d4:	b	4a5c <normal_getAtts+0x144>
    49d8:	cmp	r4, #0
    49dc:	bne	49fc <normal_getAtts+0xe4>
    49e0:	cmp	ip, r2
    49e4:	bge	49f8 <normal_getAtts+0xe0>
    49e8:	str	r6, [r3, ip, lsl #4]
    49ec:	add	r4, r3, ip, lsl #4
    49f0:	mov	r1, #1
    49f4:	strb	r1, [r4, #12]
    49f8:	mov	r4, #1
    49fc:	add	r6, r6, #1
    4a00:	b	4c98 <normal_getAtts+0x380>
    4a04:	cmp	r4, #0
    4a08:	bne	4a28 <normal_getAtts+0x110>
    4a0c:	cmp	ip, r2
    4a10:	bge	4a24 <normal_getAtts+0x10c>
    4a14:	str	r6, [r3, ip, lsl #4]
    4a18:	add	r4, r3, ip, lsl #4
    4a1c:	mov	r1, #1
    4a20:	strb	r1, [r4, #12]
    4a24:	mov	r4, #1
    4a28:	add	r6, r6, #2
    4a2c:	b	4c98 <normal_getAtts+0x380>
    4a30:	cmp	r4, #0
    4a34:	bne	4a54 <normal_getAtts+0x13c>
    4a38:	cmp	ip, r2
    4a3c:	bge	4a50 <normal_getAtts+0x138>
    4a40:	str	r6, [r3, ip, lsl #4]
    4a44:	add	r1, r3, ip, lsl #4
    4a48:	mov	r4, #1
    4a4c:	strb	r4, [r1, #12]
    4a50:	mov	r4, #1
    4a54:	add	r6, r6, #3
    4a58:	b	4c98 <normal_getAtts+0x380>
    4a5c:	cmp	r4, #0
    4a60:	bne	4c98 <normal_getAtts+0x380>
    4a64:	cmp	ip, r2
    4a68:	bge	4a7c <normal_getAtts+0x164>
    4a6c:	str	r6, [r3, ip, lsl #4]
    4a70:	add	r1, r3, ip, lsl #4
    4a74:	mov	r4, #1
    4a78:	strb	r4, [r1, #12]
    4a7c:	mov	r4, #1
    4a80:	b	4c98 <normal_getAtts+0x380>
    4a84:	cmp	r4, #2
    4a88:	beq	4aac <normal_getAtts+0x194>
    4a8c:	cmp	ip, r2
    4a90:	bge	4aa0 <normal_getAtts+0x188>
    4a94:	add	r4, r3, ip, lsl #4
    4a98:	add	r1, r6, #1
    4a9c:	str	r1, [r4, #4]
    4aa0:	mov	r4, #2
    4aa4:	mov	r5, #12
    4aa8:	b	4c98 <normal_getAtts+0x380>
    4aac:	cmp	r5, #12
    4ab0:	bne	4c98 <normal_getAtts+0x380>
    4ab4:	mov	r4, #0
    4ab8:	cmp	ip, r2
    4abc:	bge	4ac8 <normal_getAtts+0x1b0>
    4ac0:	add	r1, r3, ip, lsl #4
    4ac4:	str	r6, [r1, #8]
    4ac8:	add	ip, ip, #1
    4acc:	b	4c98 <normal_getAtts+0x380>
    4ad0:	cmp	r4, #2
    4ad4:	beq	4af8 <normal_getAtts+0x1e0>
    4ad8:	cmp	ip, r2
    4adc:	bge	4aec <normal_getAtts+0x1d4>
    4ae0:	add	r1, r3, ip, lsl #4
    4ae4:	add	r4, r6, #1
    4ae8:	str	r4, [r1, #4]
    4aec:	mov	r4, #2
    4af0:	mov	r5, #13
    4af4:	b	4c98 <normal_getAtts+0x380>
    4af8:	cmp	r5, #13
    4afc:	bne	4c98 <normal_getAtts+0x380>
    4b00:	mov	r4, #0
    4b04:	cmp	ip, r2
    4b08:	bge	4b14 <normal_getAtts+0x1fc>
    4b0c:	add	r1, r3, ip, lsl #4
    4b10:	str	r6, [r1, #8]
    4b14:	add	ip, ip, #1
    4b18:	b	4c98 <normal_getAtts+0x380>
    4b1c:	cmp	ip, r2
    4b20:	bge	4c98 <normal_getAtts+0x380>
    4b24:	add	r1, r3, ip, lsl #4
    4b28:	mov	r7, #0
    4b2c:	strb	r7, [r1, #12]
    4b30:	b	4c98 <normal_getAtts+0x380>
    4b34:	cmp	r4, #1
    4b38:	beq	4c24 <normal_getAtts+0x30c>
    4b3c:	cmp	r4, #2
    4b40:	beq	4b4c <normal_getAtts+0x234>
    4b44:	mov	r1, #0
    4b48:	b	4b58 <normal_getAtts+0x240>
    4b4c:	cmp	ip, r2
    4b50:	movlt	r1, #1
    4b54:	movge	r1, #0
    4b58:	cmp	r1, #0
    4b5c:	beq	4b78 <normal_getAtts+0x260>
    4b60:	add	r1, r3, ip, lsl #4
    4b64:	ldrb	r1, [r1, #12]
    4b68:	cmp	r1, #0
    4b6c:	movne	r1, #1
    4b70:	moveq	r1, #0
    4b74:	b	4b7c <normal_getAtts+0x264>
    4b78:	mov	r1, #0
    4b7c:	cmp	r1, #0
    4b80:	beq	4c08 <normal_getAtts+0x2f0>
    4b84:	add	r1, r3, ip, lsl #4
    4b88:	ldr	r1, [r1, #4]
    4b8c:	cmp	r6, r1
    4b90:	beq	4ba8 <normal_getAtts+0x290>
    4b94:	ldrb	r1, [r6]
    4b98:	cmp	r1, #32
    4b9c:	movne	r1, #1
    4ba0:	moveq	r1, #0
    4ba4:	b	4bac <normal_getAtts+0x294>
    4ba8:	mov	r1, #1
    4bac:	cmp	r1, #0
    4bb0:	bne	4bc8 <normal_getAtts+0x2b0>
    4bb4:	ldrb	r1, [r6, #1]
    4bb8:	cmp	r1, #32
    4bbc:	moveq	r1, #1
    4bc0:	movne	r1, #0
    4bc4:	b	4bcc <normal_getAtts+0x2b4>
    4bc8:	mov	r1, #1
    4bcc:	cmp	r1, #0
    4bd0:	bne	4c00 <normal_getAtts+0x2e8>
    4bd4:	ldrb	r1, [r6, #1]
    4bd8:	and	r1, r1, #255	; 0xff
    4bdc:	add	r1, r0, r1
    4be0:	ldrb	r1, [r1, #76]	; 0x4c
    4be4:	cmp	r1, r5
    4be8:	moveq	r1, #1
    4bec:	movne	r1, #0
    4bf0:	cmp	r1, #0
    4bf4:	movne	r1, #1
    4bf8:	moveq	r1, #0
    4bfc:	b	4c0c <normal_getAtts+0x2f4>
    4c00:	mov	r1, #1
    4c04:	b	4c0c <normal_getAtts+0x2f4>
    4c08:	mov	r1, #0
    4c0c:	cmp	r1, #0
    4c10:	beq	4c98 <normal_getAtts+0x380>
    4c14:	add	r7, r3, ip, lsl #4
    4c18:	mov	r1, #0
    4c1c:	strb	r1, [r7, #12]
    4c20:	b	4c98 <normal_getAtts+0x380>
    4c24:	mov	r4, #0
    4c28:	b	4c98 <normal_getAtts+0x380>
    4c2c:	cmp	r4, #1
    4c30:	beq	4c68 <normal_getAtts+0x350>
    4c34:	cmp	r4, #2
    4c38:	beq	4c44 <normal_getAtts+0x32c>
    4c3c:	mov	r1, #0
    4c40:	b	4c50 <normal_getAtts+0x338>
    4c44:	cmp	ip, r2
    4c48:	movlt	r1, #1
    4c4c:	movge	r1, #0
    4c50:	cmp	r1, #0
    4c54:	beq	4c98 <normal_getAtts+0x380>
    4c58:	add	r1, r3, ip, lsl #4
    4c5c:	mov	r7, #0
    4c60:	strb	r7, [r1, #12]
    4c64:	b	4c98 <normal_getAtts+0x380>
    4c68:	mov	r4, #0
    4c6c:	b	4c98 <normal_getAtts+0x380>
    4c70:	cmp	r4, #2
    4c74:	beq	4c98 <normal_getAtts+0x380>
    4c78:	mov	r0, ip
    4c7c:	ldr	r4, [sp, #8]
    4c80:	ldr	r5, [sp, #12]
    4c84:	ldr	r6, [sp, #16]
    4c88:	ldr	r7, [sp, #20]
    4c8c:	ldr	lr, [sp, #4]
    4c90:	add	sp, sp, #24
    4c94:	bx	lr
    4c98:	add	r6, r6, #1
    4c9c:	b	4948 <normal_getAtts+0x30>

00004ca0 <normal_charRefNumber>:
    4ca0:	mov	ip, sp
    4ca4:	sub	sp, sp, #16
    4ca8:	str	ip, [sp]
    4cac:	str	lr, [sp, #4]
    4cb0:	str	r4, [sp, #8]
    4cb4:	mov	r0, #0
    4cb8:	add	r4, r1, #2
    4cbc:	ldrb	ip, [r4]
    4cc0:	cmp	ip, #120	; 0x78
    4cc4:	bne	4e10 <normal_charRefNumber+0x170>
    4cc8:	add	r4, r4, #1
    4ccc:	ldrb	r3, [r4]
    4cd0:	cmp	r3, #59	; 0x3b
    4cd4:	beq	4e48 <normal_charRefNumber+0x1a8>
    4cd8:	ldrb	r1, [r4]
    4cdc:	sub	r2, r1, #48	; 0x30
    4ce0:	cmp	r2, #55	; 0x37
    4ce4:	bcs	4df8 <normal_charRefNumber+0x158>
    4ce8:	add	pc, pc, r2, lsl #2
    4cec:	nop	{0}
    4cf0:	b	4dcc <normal_charRefNumber+0x12c>
    4cf4:	b	4dcc <normal_charRefNumber+0x12c>
    4cf8:	b	4dcc <normal_charRefNumber+0x12c>
    4cfc:	b	4dcc <normal_charRefNumber+0x12c>
    4d00:	b	4dcc <normal_charRefNumber+0x12c>
    4d04:	b	4dcc <normal_charRefNumber+0x12c>
    4d08:	b	4dcc <normal_charRefNumber+0x12c>
    4d0c:	b	4dcc <normal_charRefNumber+0x12c>
    4d10:	b	4dcc <normal_charRefNumber+0x12c>
    4d14:	b	4dcc <normal_charRefNumber+0x12c>
    4d18:	b	4df8 <normal_charRefNumber+0x158>
    4d1c:	b	4df8 <normal_charRefNumber+0x158>
    4d20:	b	4df8 <normal_charRefNumber+0x158>
    4d24:	b	4df8 <normal_charRefNumber+0x158>
    4d28:	b	4df8 <normal_charRefNumber+0x158>
    4d2c:	b	4df8 <normal_charRefNumber+0x158>
    4d30:	b	4df8 <normal_charRefNumber+0x158>
    4d34:	b	4ddc <normal_charRefNumber+0x13c>
    4d38:	b	4ddc <normal_charRefNumber+0x13c>
    4d3c:	b	4ddc <normal_charRefNumber+0x13c>
    4d40:	b	4ddc <normal_charRefNumber+0x13c>
    4d44:	b	4ddc <normal_charRefNumber+0x13c>
    4d48:	b	4ddc <normal_charRefNumber+0x13c>
    4d4c:	b	4df8 <normal_charRefNumber+0x158>
    4d50:	b	4df8 <normal_charRefNumber+0x158>
    4d54:	b	4df8 <normal_charRefNumber+0x158>
    4d58:	b	4df8 <normal_charRefNumber+0x158>
    4d5c:	b	4df8 <normal_charRefNumber+0x158>
    4d60:	b	4df8 <normal_charRefNumber+0x158>
    4d64:	b	4df8 <normal_charRefNumber+0x158>
    4d68:	b	4df8 <normal_charRefNumber+0x158>
    4d6c:	b	4df8 <normal_charRefNumber+0x158>
    4d70:	b	4df8 <normal_charRefNumber+0x158>
    4d74:	b	4df8 <normal_charRefNumber+0x158>
    4d78:	b	4df8 <normal_charRefNumber+0x158>
    4d7c:	b	4df8 <normal_charRefNumber+0x158>
    4d80:	b	4df8 <normal_charRefNumber+0x158>
    4d84:	b	4df8 <normal_charRefNumber+0x158>
    4d88:	b	4df8 <normal_charRefNumber+0x158>
    4d8c:	b	4df8 <normal_charRefNumber+0x158>
    4d90:	b	4df8 <normal_charRefNumber+0x158>
    4d94:	b	4df8 <normal_charRefNumber+0x158>
    4d98:	b	4df8 <normal_charRefNumber+0x158>
    4d9c:	b	4df8 <normal_charRefNumber+0x158>
    4da0:	b	4df8 <normal_charRefNumber+0x158>
    4da4:	b	4df8 <normal_charRefNumber+0x158>
    4da8:	b	4df8 <normal_charRefNumber+0x158>
    4dac:	b	4df8 <normal_charRefNumber+0x158>
    4db0:	b	4df8 <normal_charRefNumber+0x158>
    4db4:	b	4dec <normal_charRefNumber+0x14c>
    4db8:	b	4dec <normal_charRefNumber+0x14c>
    4dbc:	b	4dec <normal_charRefNumber+0x14c>
    4dc0:	b	4dec <normal_charRefNumber+0x14c>
    4dc4:	b	4dec <normal_charRefNumber+0x14c>
    4dc8:	b	4dec <normal_charRefNumber+0x14c>
    4dcc:	lsl	r0, r0, #4
    4dd0:	sub	r2, r1, #48	; 0x30
    4dd4:	orr	r0, r0, r2
    4dd8:	b	4df8 <normal_charRefNumber+0x158>
    4ddc:	lsl	ip, r0, #4
    4de0:	add	r0, ip, r1
    4de4:	sub	r0, r0, #55	; 0x37
    4de8:	b	4df8 <normal_charRefNumber+0x158>
    4dec:	lsl	r2, r0, #4
    4df0:	add	r3, r2, r1
    4df4:	sub	r0, r3, #87	; 0x57
    4df8:	cmp	r0, #1114112	; 0x110000
    4dfc:	blt	4e08 <normal_charRefNumber+0x168>
    4e00:	mvn	r0, #0
    4e04:	b	4e4c <normal_charRefNumber+0x1ac>
    4e08:	add	r4, r4, #1
    4e0c:	b	4ccc <normal_charRefNumber+0x2c>
    4e10:	ldrb	r3, [r4]
    4e14:	cmp	r3, #59	; 0x3b
    4e18:	beq	4e48 <normal_charRefNumber+0x1a8>
    4e1c:	ldrb	r2, [r4]
    4e20:	lsl	r1, r0, #3
    4e24:	add	r1, r1, r0, lsl #1
    4e28:	add	ip, r1, r2
    4e2c:	sub	r0, ip, #48	; 0x30
    4e30:	cmp	r0, #1114112	; 0x110000
    4e34:	blt	4e40 <normal_charRefNumber+0x1a0>
    4e38:	mvn	r0, #0
    4e3c:	b	4e4c <normal_charRefNumber+0x1ac>
    4e40:	add	r4, r4, #1
    4e44:	b	4e10 <normal_charRefNumber+0x170>
    4e48:	bl	12ac0 <checkCharRefNumber>
    4e4c:	ldr	r4, [sp, #8]
    4e50:	ldr	lr, [sp, #4]
    4e54:	add	sp, sp, #16
    4e58:	bx	lr

00004e5c <normal_predefinedEntityName>:
    4e5c:	mov	ip, sp
    4e60:	sub	sp, sp, #8
    4e64:	str	ip, [sp]
    4e68:	str	lr, [sp, #4]
    4e6c:	sub	r2, r2, r1
    4e70:	cmp	r2, #2
    4e74:	beq	4f40 <normal_predefinedEntityName+0xe4>
    4e78:	cmp	r2, #3
    4e7c:	beq	4f0c <normal_predefinedEntityName+0xb0>
    4e80:	cmp	r2, #4
    4e84:	bne	4f70 <normal_predefinedEntityName+0x114>
    4e88:	ldrb	r2, [r1]
    4e8c:	cmp	r2, #97	; 0x61
    4e90:	beq	4ed4 <normal_predefinedEntityName+0x78>
    4e94:	cmp	r2, #113	; 0x71
    4e98:	bne	4f70 <normal_predefinedEntityName+0x114>
    4e9c:	add	r2, r1, #1
    4ea0:	ldrb	r3, [r2]
    4ea4:	cmp	r3, #117	; 0x75
    4ea8:	bne	4f70 <normal_predefinedEntityName+0x114>
    4eac:	add	r1, r2, #1
    4eb0:	ldrb	r3, [r1]
    4eb4:	cmp	r3, #111	; 0x6f
    4eb8:	bne	4f70 <normal_predefinedEntityName+0x114>
    4ebc:	add	r0, r1, #1
    4ec0:	ldrb	r0, [r0]
    4ec4:	cmp	r0, #116	; 0x74
    4ec8:	bne	4f70 <normal_predefinedEntityName+0x114>
    4ecc:	mov	r0, #34	; 0x22
    4ed0:	b	4f74 <normal_predefinedEntityName+0x118>
    4ed4:	add	r1, r1, #1
    4ed8:	ldrb	r0, [r1]
    4edc:	cmp	r0, #112	; 0x70
    4ee0:	bne	4f70 <normal_predefinedEntityName+0x114>
    4ee4:	add	ip, r1, #1
    4ee8:	ldrb	r1, [ip]
    4eec:	cmp	r1, #111	; 0x6f
    4ef0:	bne	4f70 <normal_predefinedEntityName+0x114>
    4ef4:	add	r0, ip, #1
    4ef8:	ldrb	r0, [r0]
    4efc:	cmp	r0, #115	; 0x73
    4f00:	bne	4f70 <normal_predefinedEntityName+0x114>
    4f04:	mov	r0, #39	; 0x27
    4f08:	b	4f74 <normal_predefinedEntityName+0x118>
    4f0c:	ldrb	r3, [r1]
    4f10:	cmp	r3, #97	; 0x61
    4f14:	bne	4f70 <normal_predefinedEntityName+0x114>
    4f18:	add	r0, r1, #1
    4f1c:	ldrb	ip, [r0]
    4f20:	cmp	ip, #109	; 0x6d
    4f24:	bne	4f70 <normal_predefinedEntityName+0x114>
    4f28:	add	r0, r0, #1
    4f2c:	ldrb	r0, [r0]
    4f30:	cmp	r0, #112	; 0x70
    4f34:	bne	4f70 <normal_predefinedEntityName+0x114>
    4f38:	mov	r0, #38	; 0x26
    4f3c:	b	4f74 <normal_predefinedEntityName+0x118>
    4f40:	ldrb	r0, [r1, #1]
    4f44:	cmp	r0, #116	; 0x74
    4f48:	bne	4f70 <normal_predefinedEntityName+0x114>
    4f4c:	ldrb	r0, [r1]
    4f50:	cmp	r0, #103	; 0x67
    4f54:	beq	4f68 <normal_predefinedEntityName+0x10c>
    4f58:	cmp	r0, #108	; 0x6c
    4f5c:	bne	4f70 <normal_predefinedEntityName+0x114>
    4f60:	mov	r0, #60	; 0x3c
    4f64:	b	4f74 <normal_predefinedEntityName+0x118>
    4f68:	mov	r0, #62	; 0x3e
    4f6c:	b	4f74 <normal_predefinedEntityName+0x118>
    4f70:	mov	r0, #0
    4f74:	ldr	lr, [sp, #4]
    4f78:	add	sp, sp, #8
    4f7c:	bx	lr

00004f80 <normal_sameName>:
    4f80:	mov	ip, sp
    4f84:	sub	sp, sp, #16
    4f88:	str	ip, [sp]
    4f8c:	str	lr, [sp, #4]
    4f90:	str	r4, [sp, #8]
    4f94:	ldrb	r3, [r1]
    4f98:	and	r3, r3, #255	; 0xff
    4f9c:	add	r3, r0, r3
    4fa0:	ldrb	r3, [r3, #76]	; 0x4c
    4fa4:	sub	r3, r3, #5
    4fa8:	cmp	r3, #25
    4fac:	bcs	5170 <normal_sameName+0x1f0>
    4fb0:	add	pc, pc, r3, lsl #2
    4fb4:	nop	{0}
    4fb8:	b	506c <normal_sameName+0xec>
    4fbc:	b	5044 <normal_sameName+0xc4>
    4fc0:	b	501c <normal_sameName+0x9c>
    4fc4:	b	5170 <normal_sameName+0x1f0>
    4fc8:	b	5170 <normal_sameName+0x1f0>
    4fcc:	b	5170 <normal_sameName+0x1f0>
    4fd0:	b	5170 <normal_sameName+0x1f0>
    4fd4:	b	5170 <normal_sameName+0x1f0>
    4fd8:	b	5170 <normal_sameName+0x1f0>
    4fdc:	b	5170 <normal_sameName+0x1f0>
    4fe0:	b	5170 <normal_sameName+0x1f0>
    4fe4:	b	5170 <normal_sameName+0x1f0>
    4fe8:	b	5170 <normal_sameName+0x1f0>
    4fec:	b	5170 <normal_sameName+0x1f0>
    4ff0:	b	5170 <normal_sameName+0x1f0>
    4ff4:	b	5170 <normal_sameName+0x1f0>
    4ff8:	b	5170 <normal_sameName+0x1f0>
    4ffc:	b	50ac <normal_sameName+0x12c>
    5000:	b	50ac <normal_sameName+0x12c>
    5004:	b	50ac <normal_sameName+0x12c>
    5008:	b	50ac <normal_sameName+0x12c>
    500c:	b	50ac <normal_sameName+0x12c>
    5010:	b	50ac <normal_sameName+0x12c>
    5014:	b	5170 <normal_sameName+0x1f0>
    5018:	b	50ac <normal_sameName+0x12c>
    501c:	mov	r3, r1
    5020:	add	r1, r3, #1
    5024:	mov	ip, r2
    5028:	add	r2, ip, #1
    502c:	ldrb	r3, [r3]
    5030:	ldrb	ip, [ip]
    5034:	cmp	r3, ip
    5038:	beq	5044 <normal_sameName+0xc4>
    503c:	mov	r0, #0
    5040:	b	523c <normal_sameName+0x2bc>
    5044:	mov	r3, r1
    5048:	add	r1, r3, #1
    504c:	mov	ip, r2
    5050:	add	r2, ip, #1
    5054:	ldrb	r3, [r3]
    5058:	ldrb	ip, [ip]
    505c:	cmp	r3, ip
    5060:	beq	506c <normal_sameName+0xec>
    5064:	mov	r0, #0
    5068:	b	523c <normal_sameName+0x2bc>
    506c:	add	r3, r1, #1
    5070:	add	ip, r2, #1
    5074:	ldrb	r4, [r1]
    5078:	ldrb	r1, [r2]
    507c:	cmp	r4, r1
    5080:	beq	508c <normal_sameName+0x10c>
    5084:	mov	r0, #0
    5088:	b	523c <normal_sameName+0x2bc>
    508c:	add	r1, r3, #1
    5090:	add	r2, ip, #1
    5094:	ldrb	r3, [r3]
    5098:	ldrb	ip, [ip]
    509c:	cmp	r3, ip
    50a0:	beq	4f94 <normal_sameName+0x14>
    50a4:	mov	r0, #0
    50a8:	b	523c <normal_sameName+0x2bc>
    50ac:	mov	ip, r2
    50b0:	add	r2, ip, #1
    50b4:	mov	r3, r1
    50b8:	add	r1, r3, #1
    50bc:	ldrb	ip, [ip]
    50c0:	ldrb	r3, [r3]
    50c4:	cmp	ip, r3
    50c8:	beq	50d4 <normal_sameName+0x154>
    50cc:	mov	r0, #0
    50d0:	b	523c <normal_sameName+0x2bc>
    50d4:	mov	r3, #0
    50d8:	cmp	r3, #0
    50dc:	beq	4f94 <normal_sameName+0x14>
    50e0:	mov	ip, r2
    50e4:	add	r2, ip, #1
    50e8:	mov	r3, r1
    50ec:	add	r1, r3, #1
    50f0:	ldrb	ip, [ip]
    50f4:	ldrb	r3, [r3]
    50f8:	cmp	ip, r3
    50fc:	beq	5108 <normal_sameName+0x188>
    5100:	mov	r0, #0
    5104:	b	523c <normal_sameName+0x2bc>
    5108:	mov	ip, #0
    510c:	cmp	ip, #0
    5110:	beq	4f94 <normal_sameName+0x14>
    5114:	mov	r3, r2
    5118:	add	r2, r3, #1
    511c:	mov	ip, r1
    5120:	add	r1, ip, #1
    5124:	ldrb	r3, [r3]
    5128:	ldrb	ip, [ip]
    512c:	cmp	r3, ip
    5130:	beq	513c <normal_sameName+0x1bc>
    5134:	mov	r0, #0
    5138:	b	523c <normal_sameName+0x2bc>
    513c:	mov	r3, #0
    5140:	cmp	r3, #0
    5144:	beq	4f94 <normal_sameName+0x14>
    5148:	mov	ip, r2
    514c:	add	r2, ip, #1
    5150:	mov	r3, r1
    5154:	add	r1, r3, #1
    5158:	ldrb	ip, [ip]
    515c:	ldrb	r3, [r3]
    5160:	cmp	ip, r3
    5164:	beq	4f94 <normal_sameName+0x14>
    5168:	mov	r0, #0
    516c:	b	523c <normal_sameName+0x2bc>
    5170:	mov	ip, #1
    5174:	cmp	ip, #0
    5178:	beq	5194 <normal_sameName+0x214>
    517c:	ldrb	ip, [r1]
    5180:	ldrb	r3, [r2]
    5184:	cmp	ip, r3
    5188:	moveq	ip, #1
    518c:	movne	ip, #0
    5190:	b	5198 <normal_sameName+0x218>
    5194:	mov	ip, #0
    5198:	cmp	ip, #0
    519c:	beq	51a8 <normal_sameName+0x228>
    51a0:	mov	r0, #1
    51a4:	b	523c <normal_sameName+0x2bc>
    51a8:	ldrb	r1, [r2]
    51ac:	and	r1, r1, #255	; 0xff
    51b0:	add	r0, r0, r1
    51b4:	ldrb	r0, [r0, #76]	; 0x4c
    51b8:	sub	r0, r0, #5
    51bc:	cmp	r0, #25
    51c0:	bcs	5238 <normal_sameName+0x2b8>
    51c4:	add	pc, pc, r0, lsl #2
    51c8:	nop	{0}
    51cc:	b	5230 <normal_sameName+0x2b0>
    51d0:	b	5230 <normal_sameName+0x2b0>
    51d4:	b	5230 <normal_sameName+0x2b0>
    51d8:	b	5238 <normal_sameName+0x2b8>
    51dc:	b	5238 <normal_sameName+0x2b8>
    51e0:	b	5238 <normal_sameName+0x2b8>
    51e4:	b	5238 <normal_sameName+0x2b8>
    51e8:	b	5238 <normal_sameName+0x2b8>
    51ec:	b	5238 <normal_sameName+0x2b8>
    51f0:	b	5238 <normal_sameName+0x2b8>
    51f4:	b	5238 <normal_sameName+0x2b8>
    51f8:	b	5238 <normal_sameName+0x2b8>
    51fc:	b	5238 <normal_sameName+0x2b8>
    5200:	b	5238 <normal_sameName+0x2b8>
    5204:	b	5238 <normal_sameName+0x2b8>
    5208:	b	5238 <normal_sameName+0x2b8>
    520c:	b	5238 <normal_sameName+0x2b8>
    5210:	b	5230 <normal_sameName+0x2b0>
    5214:	b	5230 <normal_sameName+0x2b0>
    5218:	b	5230 <normal_sameName+0x2b0>
    521c:	b	5230 <normal_sameName+0x2b0>
    5220:	b	5230 <normal_sameName+0x2b0>
    5224:	b	5230 <normal_sameName+0x2b0>
    5228:	b	5238 <normal_sameName+0x2b8>
    522c:	b	5230 <normal_sameName+0x2b0>
    5230:	mov	r0, #0
    5234:	b	523c <normal_sameName+0x2bc>
    5238:	mov	r0, #1
    523c:	ldr	r4, [sp, #8]
    5240:	ldr	lr, [sp, #4]
    5244:	add	sp, sp, #16
    5248:	bx	lr

0000524c <normal_nameMatchesAscii>:
    524c:	mov	ip, sp
    5250:	sub	sp, sp, #8
    5254:	str	ip, [sp]
    5258:	str	lr, [sp, #4]
    525c:	ldrb	r0, [r3]
    5260:	cmp	r0, #0
    5264:	beq	529c <normal_nameMatchesAscii+0x50>
    5268:	cmp	r1, r2
    526c:	bne	5278 <normal_nameMatchesAscii+0x2c>
    5270:	mov	r0, #0
    5274:	b	52a8 <normal_nameMatchesAscii+0x5c>
    5278:	ldrb	r0, [r1]
    527c:	ldrb	ip, [r3]
    5280:	cmp	r0, ip
    5284:	beq	5290 <normal_nameMatchesAscii+0x44>
    5288:	mov	r0, #0
    528c:	b	52a8 <normal_nameMatchesAscii+0x5c>
    5290:	add	r1, r1, #1
    5294:	add	r3, r3, #1
    5298:	b	525c <normal_nameMatchesAscii+0x10>
    529c:	cmp	r1, r2
    52a0:	moveq	r0, #1
    52a4:	movne	r0, #0
    52a8:	ldr	lr, [sp, #4]
    52ac:	add	sp, sp, #8
    52b0:	bx	lr

000052b4 <normal_nameLength>:
    52b4:	mov	ip, sp
    52b8:	sub	sp, sp, #8
    52bc:	str	ip, [sp]
    52c0:	str	lr, [sp, #4]
    52c4:	mov	r2, r1
    52c8:	ldrb	r3, [r1]
    52cc:	and	r3, r3, #255	; 0xff
    52d0:	add	ip, r0, r3
    52d4:	ldrb	r3, [ip, #76]	; 0x4c
    52d8:	sub	r3, r3, #5
    52dc:	cmp	r3, #25
    52e0:	bcs	5370 <normal_nameLength+0xbc>
    52e4:	add	pc, pc, r3, lsl #2
    52e8:	nop	{0}
    52ec:	b	5350 <normal_nameLength+0x9c>
    52f0:	b	5358 <normal_nameLength+0xa4>
    52f4:	b	5360 <normal_nameLength+0xac>
    52f8:	b	5370 <normal_nameLength+0xbc>
    52fc:	b	5370 <normal_nameLength+0xbc>
    5300:	b	5370 <normal_nameLength+0xbc>
    5304:	b	5370 <normal_nameLength+0xbc>
    5308:	b	5370 <normal_nameLength+0xbc>
    530c:	b	5370 <normal_nameLength+0xbc>
    5310:	b	5370 <normal_nameLength+0xbc>
    5314:	b	5370 <normal_nameLength+0xbc>
    5318:	b	5370 <normal_nameLength+0xbc>
    531c:	b	5370 <normal_nameLength+0xbc>
    5320:	b	5370 <normal_nameLength+0xbc>
    5324:	b	5370 <normal_nameLength+0xbc>
    5328:	b	5370 <normal_nameLength+0xbc>
    532c:	b	5370 <normal_nameLength+0xbc>
    5330:	b	5368 <normal_nameLength+0xb4>
    5334:	b	5368 <normal_nameLength+0xb4>
    5338:	b	5368 <normal_nameLength+0xb4>
    533c:	b	5368 <normal_nameLength+0xb4>
    5340:	b	5368 <normal_nameLength+0xb4>
    5344:	b	5368 <normal_nameLength+0xb4>
    5348:	b	5370 <normal_nameLength+0xbc>
    534c:	b	5368 <normal_nameLength+0xb4>
    5350:	add	r1, r1, #2
    5354:	b	52c8 <normal_nameLength+0x14>
    5358:	add	r1, r1, #3
    535c:	b	52c8 <normal_nameLength+0x14>
    5360:	add	r1, r1, #4
    5364:	b	52c8 <normal_nameLength+0x14>
    5368:	add	r1, r1, #1
    536c:	b	52c8 <normal_nameLength+0x14>
    5370:	sub	r0, r1, r2
    5374:	ldr	lr, [sp, #4]
    5378:	add	sp, sp, #8
    537c:	bx	lr

00005380 <normal_skipS>:
    5380:	mov	ip, sp
    5384:	sub	sp, sp, #8
    5388:	str	ip, [sp]
    538c:	str	lr, [sp, #4]
    5390:	ldrb	r3, [r1]
    5394:	and	r2, r3, #255	; 0xff
    5398:	add	r2, r0, r2
    539c:	ldrb	ip, [r2, #76]	; 0x4c
    53a0:	cmp	ip, #9
    53a4:	beq	53c8 <normal_skipS+0x48>
    53a8:	cmp	ip, #10
    53ac:	beq	53c8 <normal_skipS+0x48>
    53b0:	cmp	ip, #21
    53b4:	beq	53c8 <normal_skipS+0x48>
    53b8:	mov	r0, r1
    53bc:	ldr	lr, [sp, #4]
    53c0:	add	sp, sp, #8
    53c4:	bx	lr
    53c8:	add	r1, r1, #1
    53cc:	b	5390 <normal_skipS+0x10>

000053d0 <normal_updatePosition>:
    53d0:	mov	ip, sp
    53d4:	sub	sp, sp, #24
    53d8:	str	ip, [sp]
    53dc:	str	lr, [sp, #4]
    53e0:	str	r4, [sp, #8]
    53e4:	str	r5, [sp, #12]
    53e8:	str	r6, [sp, #16]
    53ec:	cmp	r1, r2
    53f0:	bcs	551c <normal_updatePosition+0x14c>
    53f4:	ldrb	ip, [r1]
    53f8:	and	ip, ip, #255	; 0xff
    53fc:	add	ip, r0, ip
    5400:	ldrb	ip, [ip, #76]	; 0x4c
    5404:	cmp	ip, #7
    5408:	bcs	542c <normal_updatePosition+0x5c>
    540c:	cmp	ip, #5
    5410:	beq	5424 <normal_updatePosition+0x54>
    5414:	cmp	ip, #6
    5418:	bne	547c <normal_updatePosition+0xac>
    541c:	add	r1, r1, #3
    5420:	b	54f8 <normal_updatePosition+0x128>
    5424:	add	r1, r1, #2
    5428:	b	54f8 <normal_updatePosition+0x128>
    542c:	cmp	ip, #7
    5430:	beq	54f4 <normal_updatePosition+0x124>
    5434:	cmp	ip, #9
    5438:	beq	5484 <normal_updatePosition+0xb4>
    543c:	cmp	ip, #10
    5440:	bne	547c <normal_updatePosition+0xac>
    5444:	mvn	r4, #0
    5448:	mvn	ip, #0
    544c:	str	ip, [r3, #8]
    5450:	str	r4, [r3, #12]
    5454:	ldr	r5, [r3]
    5458:	ldr	r6, [r3, #4]
    545c:	mov	r4, #0
    5460:	mov	ip, #1
    5464:	adds	ip, r5, ip
    5468:	adc	r4, r6, r4
    546c:	str	ip, [r3]
    5470:	str	r4, [r3, #4]
    5474:	add	r1, r1, #1
    5478:	b	54f8 <normal_updatePosition+0x128>
    547c:	add	r1, r1, #1
    5480:	b	54f8 <normal_updatePosition+0x128>
    5484:	ldr	r6, [r3]
    5488:	ldr	r5, [r3, #4]
    548c:	mov	r4, #0
    5490:	mov	ip, #1
    5494:	adds	ip, r6, ip
    5498:	adc	r4, r5, r4
    549c:	str	ip, [r3]
    54a0:	str	r4, [r3, #4]
    54a4:	add	r1, r1, #1
    54a8:	cmp	r1, r2
    54ac:	beq	54d0 <normal_updatePosition+0x100>
    54b0:	ldrb	ip, [r1]
    54b4:	and	ip, ip, #255	; 0xff
    54b8:	add	ip, r0, ip
    54bc:	ldrb	ip, [ip, #76]	; 0x4c
    54c0:	cmp	ip, #10
    54c4:	moveq	ip, #1
    54c8:	movne	ip, #0
    54cc:	b	54d4 <normal_updatePosition+0x104>
    54d0:	mov	ip, #0
    54d4:	cmp	ip, #0
    54d8:	beq	54e0 <normal_updatePosition+0x110>
    54dc:	add	r1, r1, #1
    54e0:	mvn	r4, #0
    54e4:	mvn	ip, #0
    54e8:	str	ip, [r3, #8]
    54ec:	str	r4, [r3, #12]
    54f0:	b	54f8 <normal_updatePosition+0x128>
    54f4:	add	r1, r1, #4
    54f8:	ldr	r5, [r3, #8]
    54fc:	ldr	r6, [r3, #12]
    5500:	mov	r4, #0
    5504:	mov	ip, #1
    5508:	adds	ip, r5, ip
    550c:	adc	r4, r6, r4
    5510:	str	ip, [r3, #8]
    5514:	str	r4, [r3, #12]
    5518:	b	53ec <normal_updatePosition+0x1c>
    551c:	ldr	r4, [sp, #8]
    5520:	ldr	r5, [sp, #12]
    5524:	ldr	r6, [sp, #16]
    5528:	ldr	lr, [sp, #4]
    552c:	add	sp, sp, #24
    5530:	bx	lr

00005534 <utf8_toUtf8>:
    5534:	mov	ip, sp
    5538:	sub	sp, sp, #16
    553c:	str	ip, [sp]
    5540:	str	lr, [sp, #4]
    5544:	str	r4, [sp, #8]
    5548:	str	r5, [sp, #12]
    554c:	ldr	r4, [ip]
    5550:	ldr	ip, [r1]
    5554:	sub	r5, r2, ip
    5558:	ldr	r0, [r3]
    555c:	sub	ip, r4, r0
    5560:	cmp	r5, ip
    5564:	ble	55a0 <utf8_toUtf8+0x6c>
    5568:	ldr	r2, [r1]
    556c:	ldr	ip, [r3]
    5570:	sub	ip, r4, ip
    5574:	add	r2, r2, ip
    5578:	ldr	r0, [r1]
    557c:	cmp	r2, r0
    5580:	bls	55a0 <utf8_toUtf8+0x6c>
    5584:	sub	lr, r2, #4096	; 0x1000
    5588:	ldrb	r0, [lr, #4095]	; 0xfff
    558c:	and	ip, r0, #192	; 0xc0
    5590:	cmp	ip, #128	; 0x80
    5594:	bne	55a0 <utf8_toUtf8+0x6c>
    5598:	sub	r2, r2, #1
    559c:	b	5578 <utf8_toUtf8+0x44>
    55a0:	ldr	r4, [r3]
    55a4:	ldr	r0, [r1]
    55a8:	cmp	r0, r2
    55ac:	beq	55c8 <utf8_toUtf8+0x94>
    55b0:	ldrb	ip, [r0]
    55b4:	and	ip, ip, #255	; 0xff
    55b8:	strb	ip, [r4]
    55bc:	add	r0, r0, #1
    55c0:	add	r4, r4, #1
    55c4:	b	55a8 <utf8_toUtf8+0x74>
    55c8:	str	r0, [r1]
    55cc:	str	r4, [r3]
    55d0:	ldr	r4, [sp, #8]
    55d4:	ldr	r5, [sp, #12]
    55d8:	ldr	lr, [sp, #4]
    55dc:	add	sp, sp, #16
    55e0:	bx	lr

000055e4 <utf8_toUtf16>:
    55e4:	mov	ip, sp
    55e8:	sub	sp, sp, #32
    55ec:	str	ip, [sp]
    55f0:	str	lr, [sp, #4]
    55f4:	str	r4, [sp, #8]
    55f8:	str	r5, [sp, #12]
    55fc:	str	r6, [sp, #16]
    5600:	str	r7, [sp, #20]
    5604:	str	r8, [sp, #24]
    5608:	ldr	r7, [ip]
    560c:	ldr	ip, [r3]
    5610:	ldr	r5, [r1]
    5614:	cmp	r5, r2
    5618:	bne	5624 <utf8_toUtf16+0x40>
    561c:	mov	r4, #0
    5620:	b	5630 <utf8_toUtf16+0x4c>
    5624:	cmp	ip, r7
    5628:	movne	r4, #1
    562c:	moveq	r4, #0
    5630:	cmp	r4, #0
    5634:	beq	5770 <utf8_toUtf16+0x18c>
    5638:	ldrb	r4, [r5]
    563c:	and	r4, r4, #255	; 0xff
    5640:	add	r4, r0, r4
    5644:	ldrb	r4, [r4, #76]	; 0x4c
    5648:	cmp	r4, #5
    564c:	beq	5740 <utf8_toUtf16+0x15c>
    5650:	cmp	r4, #6
    5654:	beq	5700 <utf8_toUtf16+0x11c>
    5658:	cmp	r4, #7
    565c:	bne	56dc <utf8_toUtf16+0xf8>
    5660:	add	r4, ip, #2
    5664:	cmp	r4, r7
    5668:	beq	5770 <utf8_toUtf16+0x18c>
    566c:	ldrb	r4, [r5, #1]
    5670:	and	r4, r4, #63	; 0x3f
    5674:	lsl	r6, r4, #12
    5678:	ldrb	r4, [r5]
    567c:	and	r4, r4, #7
    5680:	orr	r4, r6, r4, lsl #18
    5684:	ldrb	r6, [r5, #2]
    5688:	and	r6, r6, #63	; 0x3f
    568c:	orr	r4, r4, r6, lsl #6
    5690:	ldrb	r6, [r5, #3]
    5694:	and	r6, r6, #63	; 0x3f
    5698:	orr	r4, r4, r6
    569c:	sub	r6, r4, #65536	; 0x10000
    56a0:	lsr	r4, r6, #10
    56a4:	orr	r4, r4, #55296	; 0xd800
    56a8:	bic	r4, r4, #16711680	; 0xff0000
    56ac:	bic	r4, r4, #-16777216	; 0xff000000
    56b0:	strh	r4, [ip]
    56b4:	bic	r4, r6, #261120	; 0x3fc00
    56b8:	bic	r4, r4, #66846720	; 0x3fc0000
    56bc:	bic	r4, r4, #-67108864	; 0xfc000000
    56c0:	orr	r4, r4, #56320	; 0xdc00
    56c4:	bic	r4, r4, #16711680	; 0xff0000
    56c8:	bic	r4, r4, #-16777216	; 0xff000000
    56cc:	strh	r4, [ip, #2]
    56d0:	add	ip, ip, #4
    56d4:	add	r5, r5, #4
    56d8:	b	5614 <utf8_toUtf16+0x30>
    56dc:	mov	r6, ip
    56e0:	add	ip, r6, #2
    56e4:	mov	r4, r5
    56e8:	add	r5, r4, #1
    56ec:	ldrb	r4, [r4]
    56f0:	bic	r4, r4, #16711680	; 0xff0000
    56f4:	bic	r4, r4, #-16777216	; 0xff000000
    56f8:	strh	r4, [r6]
    56fc:	b	5614 <utf8_toUtf16+0x30>
    5700:	mov	r4, ip
    5704:	add	ip, r4, #2
    5708:	ldrb	r6, [r5, #1]
    570c:	and	r6, r6, #63	; 0x3f
    5710:	lsl	r8, r6, #6
    5714:	ldrb	r6, [r5]
    5718:	and	r6, r6, #15
    571c:	orr	r8, r8, r6, lsl #12
    5720:	ldrb	r6, [r5, #2]
    5724:	and	r6, r6, #63	; 0x3f
    5728:	orr	r6, r8, r6
    572c:	bic	r6, r6, #16711680	; 0xff0000
    5730:	bic	r6, r6, #-16777216	; 0xff000000
    5734:	strh	r6, [r4]
    5738:	add	r5, r5, #3
    573c:	b	5614 <utf8_toUtf16+0x30>
    5740:	mov	r4, ip
    5744:	add	ip, r4, #2
    5748:	ldrb	r6, [r5, #1]
    574c:	and	r8, r6, #63	; 0x3f
    5750:	ldrb	r6, [r5]
    5754:	and	r6, r6, #31
    5758:	orr	r6, r8, r6, lsl #6
    575c:	bic	r6, r6, #16711680	; 0xff0000
    5760:	bic	r6, r6, #-16777216	; 0xff000000
    5764:	strh	r6, [r4]
    5768:	add	r5, r5, #2
    576c:	b	5614 <utf8_toUtf16+0x30>
    5770:	str	r5, [r1]
    5774:	str	ip, [r3]
    5778:	ldr	r4, [sp, #8]
    577c:	ldr	r5, [sp, #12]
    5780:	ldr	r6, [sp, #16]
    5784:	ldr	r7, [sp, #20]
    5788:	ldr	r8, [sp, #24]
    578c:	ldr	lr, [sp, #4]
    5790:	add	sp, sp, #32
    5794:	bx	lr

00005798 <latin1_toUtf8>:
    5798:	mov	ip, sp
    579c:	sub	sp, sp, #24
    57a0:	str	ip, [sp]
    57a4:	str	lr, [sp, #4]
    57a8:	str	r4, [sp, #8]
    57ac:	str	r5, [sp, #12]
    57b0:	str	r6, [sp, #16]
    57b4:	ldr	r4, [ip]
    57b8:	ldr	r0, [r1]
    57bc:	cmp	r0, r2
    57c0:	beq	5868 <latin1_toUtf8+0xd0>
    57c4:	ldr	ip, [r1]
    57c8:	ldrb	ip, [ip]
    57cc:	and	r6, ip, #255	; 0xff
    57d0:	and	ip, r6, #128	; 0x80
    57d4:	cmp	ip, #0
    57d8:	beq	5834 <latin1_toUtf8+0x9c>
    57dc:	ldr	ip, [r3]
    57e0:	sub	ip, r4, ip
    57e4:	cmp	ip, #2
    57e8:	blt	5868 <latin1_toUtf8+0xd0>
    57ec:	ldr	r5, [r3]
    57f0:	add	ip, r5, #1
    57f4:	str	ip, [r3]
    57f8:	asr	ip, r6, #6
    57fc:	orr	r0, ip, #192	; 0xc0
    5800:	and	ip, r0, #255	; 0xff
    5804:	strb	ip, [r5]
    5808:	ldr	r0, [r3]
    580c:	add	ip, r0, #1
    5810:	str	ip, [r3]
    5814:	and	ip, r6, #63	; 0x3f
    5818:	orr	ip, ip, #128	; 0x80
    581c:	and	ip, ip, #255	; 0xff
    5820:	strb	ip, [r0]
    5824:	ldr	ip, [r1]
    5828:	add	ip, ip, #1
    582c:	str	ip, [r1]
    5830:	b	57b8 <latin1_toUtf8+0x20>
    5834:	ldr	ip, [r3]
    5838:	cmp	ip, r4
    583c:	beq	5868 <latin1_toUtf8+0xd0>
    5840:	ldr	r5, [r3]
    5844:	add	r0, r5, #1
    5848:	str	r0, [r3]
    584c:	ldr	ip, [r1]
    5850:	add	r0, ip, #1
    5854:	str	r0, [r1]
    5858:	ldrb	ip, [ip]
    585c:	and	r0, ip, #255	; 0xff
    5860:	strb	r0, [r5]
    5864:	b	57b8 <latin1_toUtf8+0x20>
    5868:	ldr	r4, [sp, #8]
    586c:	ldr	r5, [sp, #12]
    5870:	ldr	r6, [sp, #16]
    5874:	ldr	lr, [sp, #4]
    5878:	add	sp, sp, #24
    587c:	bx	lr

00005880 <latin1_toUtf16>:
    5880:	mov	ip, sp
    5884:	sub	sp, sp, #16
    5888:	str	ip, [sp]
    588c:	str	lr, [sp, #4]
    5890:	str	r4, [sp, #8]
    5894:	str	r5, [sp, #12]
    5898:	ldr	r5, [ip]
    589c:	ldr	ip, [r1]
    58a0:	cmp	ip, r2
    58a4:	beq	58bc <latin1_toUtf16+0x3c>
    58a8:	ldr	ip, [r3]
    58ac:	cmp	ip, r5
    58b0:	movne	ip, #1
    58b4:	moveq	ip, #0
    58b8:	b	58c0 <latin1_toUtf16+0x40>
    58bc:	mov	ip, #0
    58c0:	cmp	ip, #0
    58c4:	beq	58f0 <latin1_toUtf16+0x70>
    58c8:	ldr	r4, [r3]
    58cc:	add	r0, r4, #2
    58d0:	str	r0, [r3]
    58d4:	ldr	r0, [r1]
    58d8:	add	ip, r0, #1
    58dc:	str	ip, [r1]
    58e0:	ldrb	ip, [r0]
    58e4:	and	ip, ip, #255	; 0xff
    58e8:	strh	ip, [r4]
    58ec:	b	589c <latin1_toUtf16+0x1c>
    58f0:	ldr	r4, [sp, #8]
    58f4:	ldr	r5, [sp, #12]
    58f8:	ldr	lr, [sp, #4]
    58fc:	add	sp, sp, #16
    5900:	bx	lr

00005904 <ascii_toUtf8>:
    5904:	mov	ip, sp
    5908:	sub	sp, sp, #16
    590c:	str	ip, [sp]
    5910:	str	lr, [sp, #4]
    5914:	str	r4, [sp, #8]
    5918:	str	r5, [sp, #12]
    591c:	ldr	r5, [ip]
    5920:	ldr	ip, [r1]
    5924:	cmp	ip, r2
    5928:	beq	5940 <ascii_toUtf8+0x3c>
    592c:	ldr	ip, [r3]
    5930:	cmp	ip, r5
    5934:	movne	ip, #1
    5938:	moveq	ip, #0
    593c:	b	5944 <ascii_toUtf8+0x40>
    5940:	mov	ip, #0
    5944:	cmp	ip, #0
    5948:	beq	5974 <ascii_toUtf8+0x70>
    594c:	ldr	r4, [r3]
    5950:	add	r0, r4, #1
    5954:	str	r0, [r3]
    5958:	ldr	r0, [r1]
    595c:	add	ip, r0, #1
    5960:	str	ip, [r1]
    5964:	ldrb	ip, [r0]
    5968:	and	ip, ip, #255	; 0xff
    596c:	strb	ip, [r4]
    5970:	b	5920 <ascii_toUtf8+0x1c>
    5974:	ldr	r4, [sp, #8]
    5978:	ldr	r5, [sp, #12]
    597c:	ldr	lr, [sp, #4]
    5980:	add	sp, sp, #16
    5984:	bx	lr

00005988 <unicode_byte_type>:
    5988:	mov	ip, sp
    598c:	sub	sp, sp, #8
    5990:	str	ip, [sp]
    5994:	str	lr, [sp, #4]
    5998:	and	r2, r0, #255	; 0xff
    599c:	cmp	r2, #220	; 0xdc
    59a0:	bcs	59c4 <unicode_byte_type+0x3c>
    59a4:	cmp	r2, #218	; 0xda
    59a8:	bcs	59bc <unicode_byte_type+0x34>
    59ac:	cmp	r2, #216	; 0xd8
    59b0:	beq	59bc <unicode_byte_type+0x34>
    59b4:	cmp	r2, #217	; 0xd9
    59b8:	bne	5a00 <unicode_byte_type+0x78>
    59bc:	mov	r0, #7
    59c0:	b	5a0c <unicode_byte_type+0x84>
    59c4:	cmp	r2, #222	; 0xde
    59c8:	bcc	5a08 <unicode_byte_type+0x80>
    59cc:	cmp	r2, #222	; 0xde
    59d0:	beq	5a08 <unicode_byte_type+0x80>
    59d4:	cmp	r2, #223	; 0xdf
    59d8:	beq	5a08 <unicode_byte_type+0x80>
    59dc:	cmp	r2, #255	; 0xff
    59e0:	bne	5a00 <unicode_byte_type+0x78>
    59e4:	and	r0, r1, #255	; 0xff
    59e8:	cmp	r0, #254	; 0xfe
    59ec:	beq	59f8 <unicode_byte_type+0x70>
    59f0:	cmp	r0, #255	; 0xff
    59f4:	bne	5a00 <unicode_byte_type+0x78>
    59f8:	mov	r0, #0
    59fc:	b	5a0c <unicode_byte_type+0x84>
    5a00:	mov	r0, #29
    5a04:	b	5a0c <unicode_byte_type+0x84>
    5a08:	mov	r0, #8
    5a0c:	ldr	lr, [sp, #4]
    5a10:	add	sp, sp, #8
    5a14:	bx	lr

00005a18 <little2_toUtf8>:
    5a18:	mov	ip, sp
    5a1c:	sub	sp, sp, #32
    5a20:	str	ip, [sp]
    5a24:	str	lr, [sp, #4]
    5a28:	str	r4, [sp, #8]
    5a2c:	str	r5, [sp, #12]
    5a30:	str	r6, [sp, #16]
    5a34:	str	r7, [sp, #20]
    5a38:	str	r8, [sp, #24]
    5a3c:	ldr	r4, [ip]
    5a40:	ldr	r5, [r1]
    5a44:	cmp	r5, r2
    5a48:	beq	5c84 <little2_toUtf8+0x26c>
    5a4c:	ldrb	ip, [r5]
    5a50:	and	r6, ip, #255	; 0xff
    5a54:	ldrb	ip, [r5, #1]
    5a58:	and	r0, ip, #255	; 0xff
    5a5c:	cmp	r0, #6
    5a60:	bcs	5aa8 <little2_toUtf8+0x90>
    5a64:	cmp	r0, #3
    5a68:	bcs	5acc <little2_toUtf8+0xb4>
    5a6c:	cmp	r0, #0
    5a70:	bne	5acc <little2_toUtf8+0xb4>
    5a74:	cmp	r6, #128	; 0x80
    5a78:	bge	5acc <little2_toUtf8+0xb4>
    5a7c:	ldr	ip, [r3]
    5a80:	cmp	ip, r4
    5a84:	bne	5a90 <little2_toUtf8+0x78>
    5a88:	str	r5, [r1]
    5a8c:	b	5c88 <little2_toUtf8+0x270>
    5a90:	ldr	ip, [r3]
    5a94:	add	r0, ip, #1
    5a98:	str	r0, [r3]
    5a9c:	and	r0, r6, #255	; 0xff
    5aa0:	strb	r0, [ip]
    5aa4:	b	5c7c <little2_toUtf8+0x264>
    5aa8:	cmp	r0, #217	; 0xd9
    5aac:	bcs	5b24 <little2_toUtf8+0x10c>
    5ab0:	cmp	r0, #6
    5ab4:	beq	5acc <little2_toUtf8+0xb4>
    5ab8:	cmp	r0, #7
    5abc:	beq	5acc <little2_toUtf8+0xb4>
    5ac0:	cmp	r0, #216	; 0xd8
    5ac4:	beq	5bb4 <little2_toUtf8+0x19c>
    5ac8:	b	5b3c <little2_toUtf8+0x124>
    5acc:	ldr	ip, [r3]
    5ad0:	sub	ip, r4, ip
    5ad4:	cmp	ip, #2
    5ad8:	bge	5ae4 <little2_toUtf8+0xcc>
    5adc:	str	r5, [r1]
    5ae0:	b	5c88 <little2_toUtf8+0x270>
    5ae4:	ldr	r7, [r3]
    5ae8:	add	ip, r7, #1
    5aec:	str	ip, [r3]
    5af0:	lsl	ip, r0, #2
    5af4:	orr	ip, ip, r6, asr #6
    5af8:	orr	ip, ip, #192	; 0xc0
    5afc:	and	ip, ip, #255	; 0xff
    5b00:	strb	ip, [r7]
    5b04:	ldr	r7, [r3]
    5b08:	add	r0, r7, #1
    5b0c:	str	r0, [r3]
    5b10:	and	ip, r6, #63	; 0x3f
    5b14:	orr	r0, ip, #128	; 0x80
    5b18:	and	r0, r0, #255	; 0xff
    5b1c:	strb	r0, [r7]
    5b20:	b	5c7c <little2_toUtf8+0x264>
    5b24:	cmp	r0, #217	; 0xd9
    5b28:	beq	5bb4 <little2_toUtf8+0x19c>
    5b2c:	cmp	r0, #218	; 0xda
    5b30:	beq	5bb4 <little2_toUtf8+0x19c>
    5b34:	cmp	r0, #219	; 0xdb
    5b38:	beq	5bb4 <little2_toUtf8+0x19c>
    5b3c:	ldr	ip, [r3]
    5b40:	sub	ip, r4, ip
    5b44:	cmp	ip, #3
    5b48:	bge	5b54 <little2_toUtf8+0x13c>
    5b4c:	str	r5, [r1]
    5b50:	b	5c88 <little2_toUtf8+0x270>
    5b54:	ldr	r7, [r3]
    5b58:	add	ip, r7, #1
    5b5c:	str	ip, [r3]
    5b60:	asr	ip, r0, #4
    5b64:	orr	ip, ip, #224	; 0xe0
    5b68:	and	ip, ip, #255	; 0xff
    5b6c:	strb	ip, [r7]
    5b70:	ldr	r7, [r3]
    5b74:	add	ip, r7, #1
    5b78:	str	ip, [r3]
    5b7c:	asr	ip, r6, #6
    5b80:	and	r0, r0, #15
    5b84:	orr	r0, ip, r0, lsl #2
    5b88:	orr	ip, r0, #128	; 0x80
    5b8c:	and	ip, ip, #255	; 0xff
    5b90:	strb	ip, [r7]
    5b94:	ldr	r0, [r3]
    5b98:	add	ip, r0, #1
    5b9c:	str	ip, [r3]
    5ba0:	and	ip, r6, #63	; 0x3f
    5ba4:	orr	ip, ip, #128	; 0x80
    5ba8:	and	ip, ip, #255	; 0xff
    5bac:	strb	ip, [r0]
    5bb0:	b	5c7c <little2_toUtf8+0x264>
    5bb4:	ldr	ip, [r3]
    5bb8:	sub	ip, r4, ip
    5bbc:	cmp	ip, #4
    5bc0:	bge	5bcc <little2_toUtf8+0x1b4>
    5bc4:	str	r5, [r1]
    5bc8:	b	5c88 <little2_toUtf8+0x270>
    5bcc:	asr	ip, r6, #6
    5bd0:	and	r7, ip, #3
    5bd4:	and	ip, r0, #3
    5bd8:	orr	ip, r7, ip, lsl #2
    5bdc:	add	r7, ip, #1
    5be0:	ldr	r0, [r3]
    5be4:	add	ip, r0, #1
    5be8:	str	ip, [r3]
    5bec:	asr	ip, r7, #2
    5bf0:	orr	ip, ip, #240	; 0xf0
    5bf4:	and	ip, ip, #255	; 0xff
    5bf8:	strb	ip, [r0]
    5bfc:	ldr	r8, [r3]
    5c00:	add	ip, r8, #1
    5c04:	str	ip, [r3]
    5c08:	asr	ip, r6, #2
    5c0c:	and	ip, ip, #15
    5c10:	and	r0, r7, #3
    5c14:	orr	ip, ip, r0, lsl #4
    5c18:	orr	ip, ip, #128	; 0x80
    5c1c:	and	r0, ip, #255	; 0xff
    5c20:	strb	r0, [r8]
    5c24:	add	r5, r5, #2
    5c28:	ldrb	ip, [r5]
    5c2c:	and	r7, ip, #255	; 0xff
    5c30:	ldr	r8, [r3]
    5c34:	add	ip, r8, #1
    5c38:	str	ip, [r3]
    5c3c:	ldrb	r0, [r5, #1]
    5c40:	and	ip, r0, #3
    5c44:	lsl	r0, ip, #2
    5c48:	and	ip, r6, #3
    5c4c:	orr	ip, r0, ip, lsl #4
    5c50:	orr	ip, ip, r7, asr #6
    5c54:	orr	ip, ip, #128	; 0x80
    5c58:	and	ip, ip, #255	; 0xff
    5c5c:	strb	ip, [r8]
    5c60:	ldr	r0, [r3]
    5c64:	add	ip, r0, #1
    5c68:	str	ip, [r3]
    5c6c:	and	ip, r7, #63	; 0x3f
    5c70:	orr	ip, ip, #128	; 0x80
    5c74:	and	ip, ip, #255	; 0xff
    5c78:	strb	ip, [r0]
    5c7c:	add	r5, r5, #2
    5c80:	b	5a44 <little2_toUtf8+0x2c>
    5c84:	str	r5, [r1]
    5c88:	ldr	r4, [sp, #8]
    5c8c:	ldr	r5, [sp, #12]
    5c90:	ldr	r6, [sp, #16]
    5c94:	ldr	r7, [sp, #20]
    5c98:	ldr	r8, [sp, #24]
    5c9c:	ldr	lr, [sp, #4]
    5ca0:	add	sp, sp, #32
    5ca4:	bx	lr

00005ca8 <little2_toUtf16>:
    5ca8:	mov	ip, sp
    5cac:	sub	sp, sp, #16
    5cb0:	str	ip, [sp]
    5cb4:	str	lr, [sp, #4]
    5cb8:	str	r4, [sp, #8]
    5cbc:	str	r5, [sp, #12]
    5cc0:	ldr	r4, [ip]
    5cc4:	ldr	ip, [r1]
    5cc8:	sub	r5, r2, ip
    5ccc:	ldr	ip, [r3]
    5cd0:	sub	ip, r4, ip
    5cd4:	asr	lr, ip, #31
    5cd8:	add	lr, ip, lr, lsr #31
    5cdc:	asr	r0, lr, #1
    5ce0:	lsl	ip, r0, #1
    5ce4:	cmp	r5, ip
    5ce8:	ble	5d08 <little2_toUtf16+0x60>
    5cec:	sub	lr, r2, #4096	; 0x1000
    5cf0:	ldrb	ip, [lr, #4095]	; 0xfff
    5cf4:	and	ip, ip, #248	; 0xf8
    5cf8:	cmp	ip, #216	; 0xd8
    5cfc:	moveq	ip, #1
    5d00:	movne	ip, #0
    5d04:	b	5d0c <little2_toUtf16+0x64>
    5d08:	mov	ip, #0
    5d0c:	cmp	ip, #0
    5d10:	beq	5d18 <little2_toUtf16+0x70>
    5d14:	sub	r2, r2, #2
    5d18:	ldr	r0, [r1]
    5d1c:	cmp	r0, r2
    5d20:	beq	5d38 <little2_toUtf16+0x90>
    5d24:	ldr	ip, [r3]
    5d28:	cmp	ip, r4
    5d2c:	movne	ip, #1
    5d30:	moveq	ip, #0
    5d34:	b	5d3c <little2_toUtf16+0x94>
    5d38:	mov	ip, #0
    5d3c:	cmp	ip, #0
    5d40:	beq	5d88 <little2_toUtf16+0xe0>
    5d44:	ldr	r5, [r3]
    5d48:	add	ip, r5, #2
    5d4c:	str	ip, [r3]
    5d50:	ldr	ip, [r1]
    5d54:	ldrb	r0, [ip]
    5d58:	and	r0, r0, #255	; 0xff
    5d5c:	ldr	ip, [r1]
    5d60:	ldrb	ip, [ip, #1]
    5d64:	and	ip, ip, #255	; 0xff
    5d68:	orr	ip, r0, ip, lsl #8
    5d6c:	bic	r0, ip, #16711680	; 0xff0000
    5d70:	bic	r0, r0, #-16777216	; 0xff000000
    5d74:	strh	r0, [r5]
    5d78:	ldr	ip, [r1]
    5d7c:	add	ip, ip, #2
    5d80:	str	ip, [r1]
    5d84:	b	5d18 <little2_toUtf16+0x70>
    5d88:	ldr	r4, [sp, #8]
    5d8c:	ldr	r5, [sp, #12]
    5d90:	ldr	lr, [sp, #4]
    5d94:	add	sp, sp, #16
    5d98:	bx	lr

00005d9c <big2_toUtf8>:
    5d9c:	mov	ip, sp
    5da0:	sub	sp, sp, #32
    5da4:	str	ip, [sp]
    5da8:	str	lr, [sp, #4]
    5dac:	str	r4, [sp, #8]
    5db0:	str	r5, [sp, #12]
    5db4:	str	r6, [sp, #16]
    5db8:	str	r7, [sp, #20]
    5dbc:	str	r8, [sp, #24]
    5dc0:	ldr	r4, [ip]
    5dc4:	ldr	r5, [r1]
    5dc8:	cmp	r5, r2
    5dcc:	beq	6008 <big2_toUtf8+0x26c>
    5dd0:	ldrb	ip, [r5, #1]
    5dd4:	and	r6, ip, #255	; 0xff
    5dd8:	ldrb	ip, [r5]
    5ddc:	and	r0, ip, #255	; 0xff
    5de0:	cmp	r0, #6
    5de4:	bcs	5e2c <big2_toUtf8+0x90>
    5de8:	cmp	r0, #3
    5dec:	bcs	5e50 <big2_toUtf8+0xb4>
    5df0:	cmp	r0, #0
    5df4:	bne	5e50 <big2_toUtf8+0xb4>
    5df8:	cmp	r6, #128	; 0x80
    5dfc:	bge	5e50 <big2_toUtf8+0xb4>
    5e00:	ldr	ip, [r3]
    5e04:	cmp	ip, r4
    5e08:	bne	5e14 <big2_toUtf8+0x78>
    5e0c:	str	r5, [r1]
    5e10:	b	600c <big2_toUtf8+0x270>
    5e14:	ldr	ip, [r3]
    5e18:	add	r0, ip, #1
    5e1c:	str	r0, [r3]
    5e20:	and	r0, r6, #255	; 0xff
    5e24:	strb	r0, [ip]
    5e28:	b	6000 <big2_toUtf8+0x264>
    5e2c:	cmp	r0, #217	; 0xd9
    5e30:	bcs	5ea8 <big2_toUtf8+0x10c>
    5e34:	cmp	r0, #6
    5e38:	beq	5e50 <big2_toUtf8+0xb4>
    5e3c:	cmp	r0, #7
    5e40:	beq	5e50 <big2_toUtf8+0xb4>
    5e44:	cmp	r0, #216	; 0xd8
    5e48:	beq	5f38 <big2_toUtf8+0x19c>
    5e4c:	b	5ec0 <big2_toUtf8+0x124>
    5e50:	ldr	ip, [r3]
    5e54:	sub	ip, r4, ip
    5e58:	cmp	ip, #2
    5e5c:	bge	5e68 <big2_toUtf8+0xcc>
    5e60:	str	r5, [r1]
    5e64:	b	600c <big2_toUtf8+0x270>
    5e68:	ldr	r7, [r3]
    5e6c:	add	ip, r7, #1
    5e70:	str	ip, [r3]
    5e74:	lsl	ip, r0, #2
    5e78:	orr	ip, ip, r6, asr #6
    5e7c:	orr	ip, ip, #192	; 0xc0
    5e80:	and	ip, ip, #255	; 0xff
    5e84:	strb	ip, [r7]
    5e88:	ldr	r7, [r3]
    5e8c:	add	r0, r7, #1
    5e90:	str	r0, [r3]
    5e94:	and	ip, r6, #63	; 0x3f
    5e98:	orr	r0, ip, #128	; 0x80
    5e9c:	and	r0, r0, #255	; 0xff
    5ea0:	strb	r0, [r7]
    5ea4:	b	6000 <big2_toUtf8+0x264>
    5ea8:	cmp	r0, #217	; 0xd9
    5eac:	beq	5f38 <big2_toUtf8+0x19c>
    5eb0:	cmp	r0, #218	; 0xda
    5eb4:	beq	5f38 <big2_toUtf8+0x19c>
    5eb8:	cmp	r0, #219	; 0xdb
    5ebc:	beq	5f38 <big2_toUtf8+0x19c>
    5ec0:	ldr	ip, [r3]
    5ec4:	sub	ip, r4, ip
    5ec8:	cmp	ip, #3
    5ecc:	bge	5ed8 <big2_toUtf8+0x13c>
    5ed0:	str	r5, [r1]
    5ed4:	b	600c <big2_toUtf8+0x270>
    5ed8:	ldr	r7, [r3]
    5edc:	add	ip, r7, #1
    5ee0:	str	ip, [r3]
    5ee4:	asr	ip, r0, #4
    5ee8:	orr	ip, ip, #224	; 0xe0
    5eec:	and	ip, ip, #255	; 0xff
    5ef0:	strb	ip, [r7]
    5ef4:	ldr	r7, [r3]
    5ef8:	add	ip, r7, #1
    5efc:	str	ip, [r3]
    5f00:	asr	ip, r6, #6
    5f04:	and	r0, r0, #15
    5f08:	orr	r0, ip, r0, lsl #2
    5f0c:	orr	ip, r0, #128	; 0x80
    5f10:	and	ip, ip, #255	; 0xff
    5f14:	strb	ip, [r7]
    5f18:	ldr	r0, [r3]
    5f1c:	add	ip, r0, #1
    5f20:	str	ip, [r3]
    5f24:	and	ip, r6, #63	; 0x3f
    5f28:	orr	ip, ip, #128	; 0x80
    5f2c:	and	ip, ip, #255	; 0xff
    5f30:	strb	ip, [r0]
    5f34:	b	6000 <big2_toUtf8+0x264>
    5f38:	ldr	ip, [r3]
    5f3c:	sub	ip, r4, ip
    5f40:	cmp	ip, #4
    5f44:	bge	5f50 <big2_toUtf8+0x1b4>
    5f48:	str	r5, [r1]
    5f4c:	b	600c <big2_toUtf8+0x270>
    5f50:	asr	ip, r6, #6
    5f54:	and	r7, ip, #3
    5f58:	and	ip, r0, #3
    5f5c:	orr	ip, r7, ip, lsl #2
    5f60:	add	r7, ip, #1
    5f64:	ldr	r0, [r3]
    5f68:	add	ip, r0, #1
    5f6c:	str	ip, [r3]
    5f70:	asr	ip, r7, #2
    5f74:	orr	ip, ip, #240	; 0xf0
    5f78:	and	ip, ip, #255	; 0xff
    5f7c:	strb	ip, [r0]
    5f80:	ldr	r8, [r3]
    5f84:	add	ip, r8, #1
    5f88:	str	ip, [r3]
    5f8c:	asr	ip, r6, #2
    5f90:	and	ip, ip, #15
    5f94:	and	r0, r7, #3
    5f98:	orr	ip, ip, r0, lsl #4
    5f9c:	orr	ip, ip, #128	; 0x80
    5fa0:	and	r0, ip, #255	; 0xff
    5fa4:	strb	r0, [r8]
    5fa8:	add	r5, r5, #2
    5fac:	ldrb	ip, [r5, #1]
    5fb0:	and	r7, ip, #255	; 0xff
    5fb4:	ldr	r8, [r3]
    5fb8:	add	ip, r8, #1
    5fbc:	str	ip, [r3]
    5fc0:	ldrb	r0, [r5]
    5fc4:	and	ip, r0, #3
    5fc8:	lsl	r0, ip, #2
    5fcc:	and	ip, r6, #3
    5fd0:	orr	ip, r0, ip, lsl #4
    5fd4:	orr	ip, ip, r7, asr #6
    5fd8:	orr	ip, ip, #128	; 0x80
    5fdc:	and	ip, ip, #255	; 0xff
    5fe0:	strb	ip, [r8]
    5fe4:	ldr	r0, [r3]
    5fe8:	add	ip, r0, #1
    5fec:	str	ip, [r3]
    5ff0:	and	ip, r7, #63	; 0x3f
    5ff4:	orr	ip, ip, #128	; 0x80
    5ff8:	and	ip, ip, #255	; 0xff
    5ffc:	strb	ip, [r0]
    6000:	add	r5, r5, #2
    6004:	b	5dc8 <big2_toUtf8+0x2c>
    6008:	str	r5, [r1]
    600c:	ldr	r4, [sp, #8]
    6010:	ldr	r5, [sp, #12]
    6014:	ldr	r6, [sp, #16]
    6018:	ldr	r7, [sp, #20]
    601c:	ldr	r8, [sp, #24]
    6020:	ldr	lr, [sp, #4]
    6024:	add	sp, sp, #32
    6028:	bx	lr

0000602c <big2_toUtf16>:
    602c:	mov	ip, sp
    6030:	sub	sp, sp, #16
    6034:	str	ip, [sp]
    6038:	str	lr, [sp, #4]
    603c:	str	r4, [sp, #8]
    6040:	str	r5, [sp, #12]
    6044:	ldr	r4, [ip]
    6048:	ldr	ip, [r1]
    604c:	sub	r5, r2, ip
    6050:	ldr	ip, [r3]
    6054:	sub	ip, r4, ip
    6058:	asr	lr, ip, #31
    605c:	add	lr, ip, lr, lsr #31
    6060:	asr	r0, lr, #1
    6064:	lsl	ip, r0, #1
    6068:	cmp	r5, ip
    606c:	ble	608c <big2_toUtf16+0x60>
    6070:	sub	lr, r2, #4096	; 0x1000
    6074:	ldrb	ip, [lr, #4094]	; 0xffe
    6078:	and	ip, ip, #248	; 0xf8
    607c:	cmp	ip, #216	; 0xd8
    6080:	moveq	ip, #1
    6084:	movne	ip, #0
    6088:	b	6090 <big2_toUtf16+0x64>
    608c:	mov	ip, #0
    6090:	cmp	ip, #0
    6094:	beq	609c <big2_toUtf16+0x70>
    6098:	sub	r2, r2, #2
    609c:	ldr	r0, [r1]
    60a0:	cmp	r0, r2
    60a4:	beq	60bc <big2_toUtf16+0x90>
    60a8:	ldr	ip, [r3]
    60ac:	cmp	ip, r4
    60b0:	movne	ip, #1
    60b4:	moveq	ip, #0
    60b8:	b	60c0 <big2_toUtf16+0x94>
    60bc:	mov	ip, #0
    60c0:	cmp	ip, #0
    60c4:	beq	610c <big2_toUtf16+0xe0>
    60c8:	ldr	r5, [r3]
    60cc:	add	ip, r5, #2
    60d0:	str	ip, [r3]
    60d4:	ldr	ip, [r1]
    60d8:	ldrb	r0, [ip, #1]
    60dc:	and	r0, r0, #255	; 0xff
    60e0:	ldr	ip, [r1]
    60e4:	ldrb	ip, [ip]
    60e8:	and	ip, ip, #255	; 0xff
    60ec:	orr	ip, r0, ip, lsl #8
    60f0:	bic	r0, ip, #16711680	; 0xff0000
    60f4:	bic	r0, r0, #-16777216	; 0xff000000
    60f8:	strh	r0, [r5]
    60fc:	ldr	ip, [r1]
    6100:	add	ip, ip, #2
    6104:	str	ip, [r1]
    6108:	b	609c <big2_toUtf16+0x70>
    610c:	ldr	r4, [sp, #8]
    6110:	ldr	r5, [sp, #12]
    6114:	ldr	lr, [sp, #4]
    6118:	add	sp, sp, #16
    611c:	bx	lr

00006120 <little2_scanComment>:
    6120:	mov	ip, sp
    6124:	sub	sp, sp, #24
    6128:	str	ip, [sp]
    612c:	str	lr, [sp, #4]
    6130:	str	r4, [sp, #8]
    6134:	str	r5, [sp, #12]
    6138:	str	r6, [sp, #16]
    613c:	str	r7, [sp, #20]
    6140:	mov	r5, r3
    6144:	mov	r4, r2
    6148:	mov	r6, r0
    614c:	cmp	r1, r4
    6150:	beq	6358 <little2_scanComment+0x238>
    6154:	ldrb	r2, [r1, #1]
    6158:	cmp	r2, #0
    615c:	bne	6174 <little2_scanComment+0x54>
    6160:	ldrb	r2, [r1]
    6164:	cmp	r2, #45	; 0x2d
    6168:	moveq	r2, #1
    616c:	movne	r2, #0
    6170:	b	6178 <little2_scanComment+0x58>
    6174:	mov	r2, #0
    6178:	cmp	r2, #0
    617c:	bne	618c <little2_scanComment+0x6c>
    6180:	str	r1, [r5]
    6184:	mov	r0, #0
    6188:	b	635c <little2_scanComment+0x23c>
    618c:	add	r7, r1, #2
    6190:	cmp	r7, r4
    6194:	beq	6358 <little2_scanComment+0x238>
    6198:	ldrb	r3, [r7, #1]
    619c:	cmp	r3, #0
    61a0:	beq	61bc <little2_scanComment+0x9c>
    61a4:	ldrb	r3, [r7, #1]
    61a8:	and	r0, r3, #255	; 0xff
    61ac:	ldrb	ip, [r7]
    61b0:	and	r1, ip, #255	; 0xff
    61b4:	bl	5988 <unicode_byte_type>
    61b8:	b	61cc <little2_scanComment+0xac>
    61bc:	ldrb	r2, [r7]
    61c0:	and	ip, r2, #255	; 0xff
    61c4:	add	ip, r6, ip
    61c8:	ldrb	r0, [ip, #76]	; 0x4c
    61cc:	cmp	r0, #6
    61d0:	bcs	6220 <little2_scanComment+0x100>
    61d4:	cmp	r0, #0
    61d8:	beq	634c <little2_scanComment+0x22c>
    61dc:	cmp	r0, #1
    61e0:	beq	634c <little2_scanComment+0x22c>
    61e4:	cmp	r0, #5
    61e8:	bne	6344 <little2_scanComment+0x224>
    61ec:	sub	r1, r4, r7
    61f0:	cmp	r1, #2
    61f4:	bge	6200 <little2_scanComment+0xe0>
    61f8:	mvn	r0, #1
    61fc:	b	635c <little2_scanComment+0x23c>
    6200:	mov	r3, #0
    6204:	cmp	r3, #0
    6208:	beq	6218 <little2_scanComment+0xf8>
    620c:	str	r7, [r5]
    6210:	mov	r0, #0
    6214:	b	635c <little2_scanComment+0x23c>
    6218:	add	r7, r7, #2
    621c:	b	6190 <little2_scanComment+0x70>
    6220:	cmp	r0, #8
    6224:	bcs	6298 <little2_scanComment+0x178>
    6228:	cmp	r0, #6
    622c:	bne	6264 <little2_scanComment+0x144>
    6230:	sub	r0, r4, r7
    6234:	cmp	r0, #3
    6238:	bge	6244 <little2_scanComment+0x124>
    623c:	mvn	r0, #1
    6240:	b	635c <little2_scanComment+0x23c>
    6244:	mov	ip, #0
    6248:	cmp	ip, #0
    624c:	beq	625c <little2_scanComment+0x13c>
    6250:	str	r7, [r5]
    6254:	mov	r0, #0
    6258:	b	635c <little2_scanComment+0x23c>
    625c:	add	r7, r7, #3
    6260:	b	6190 <little2_scanComment+0x70>
    6264:	sub	r0, r4, r7
    6268:	cmp	r0, #4
    626c:	bge	6278 <little2_scanComment+0x158>
    6270:	mvn	r0, #1
    6274:	b	635c <little2_scanComment+0x23c>
    6278:	mov	r1, #0
    627c:	cmp	r1, #0
    6280:	beq	6290 <little2_scanComment+0x170>
    6284:	str	r7, [r5]
    6288:	mov	r0, #0
    628c:	b	635c <little2_scanComment+0x23c>
    6290:	add	r7, r7, #4
    6294:	b	6190 <little2_scanComment+0x70>
    6298:	cmp	r0, #8
    629c:	beq	634c <little2_scanComment+0x22c>
    62a0:	cmp	r0, #27
    62a4:	bne	6344 <little2_scanComment+0x224>
    62a8:	add	r7, r7, #2
    62ac:	cmp	r7, r4
    62b0:	bne	62bc <little2_scanComment+0x19c>
    62b4:	mvn	r0, #0
    62b8:	b	635c <little2_scanComment+0x23c>
    62bc:	ldrb	r3, [r7, #1]
    62c0:	cmp	r3, #0
    62c4:	bne	62dc <little2_scanComment+0x1bc>
    62c8:	ldrb	r0, [r7]
    62cc:	cmp	r0, #45	; 0x2d
    62d0:	moveq	r2, #1
    62d4:	movne	r2, #0
    62d8:	b	62e0 <little2_scanComment+0x1c0>
    62dc:	mov	r2, #0
    62e0:	cmp	r2, #0
    62e4:	beq	6190 <little2_scanComment+0x70>
    62e8:	add	r0, r7, #2
    62ec:	cmp	r0, r4
    62f0:	bne	62fc <little2_scanComment+0x1dc>
    62f4:	mvn	r0, #0
    62f8:	b	635c <little2_scanComment+0x23c>
    62fc:	ldrb	r1, [r0, #1]
    6300:	cmp	r1, #0
    6304:	bne	631c <little2_scanComment+0x1fc>
    6308:	ldrb	r1, [r0]
    630c:	cmp	r1, #62	; 0x3e
    6310:	moveq	r2, #1
    6314:	movne	r2, #0
    6318:	b	6320 <little2_scanComment+0x200>
    631c:	mov	r2, #0
    6320:	cmp	r2, #0
    6324:	bne	6334 <little2_scanComment+0x214>
    6328:	str	r0, [r5]
    632c:	mov	r0, #0
    6330:	b	635c <little2_scanComment+0x23c>
    6334:	add	ip, r0, #2
    6338:	str	ip, [r5]
    633c:	mov	r0, #13
    6340:	b	635c <little2_scanComment+0x23c>
    6344:	add	r7, r7, #2
    6348:	b	6190 <little2_scanComment+0x70>
    634c:	str	r7, [r5]
    6350:	mov	r0, #0
    6354:	b	635c <little2_scanComment+0x23c>
    6358:	mvn	r0, #0
    635c:	ldr	r4, [sp, #8]
    6360:	ldr	r5, [sp, #12]
    6364:	ldr	r6, [sp, #16]
    6368:	ldr	r7, [sp, #20]
    636c:	ldr	lr, [sp, #4]
    6370:	add	sp, sp, #24
    6374:	bx	lr

00006378 <little2_scanDecl>:
    6378:	mov	ip, sp
    637c:	sub	sp, sp, #24
    6380:	str	ip, [sp]
    6384:	str	lr, [sp, #4]
    6388:	str	r4, [sp, #8]
    638c:	str	r5, [sp, #12]
    6390:	str	r6, [sp, #16]
    6394:	str	r7, [sp, #20]
    6398:	mov	r4, r3
    639c:	mov	r5, r2
    63a0:	mov	r7, r1
    63a4:	mov	r6, r0
    63a8:	cmp	r7, r5
    63ac:	bne	63b8 <little2_scanDecl+0x40>
    63b0:	mvn	r0, #0
    63b4:	b	656c <little2_scanDecl+0x1f4>
    63b8:	ldrb	r3, [r7, #1]
    63bc:	cmp	r3, #0
    63c0:	beq	63dc <little2_scanDecl+0x64>
    63c4:	ldrb	r2, [r7, #1]
    63c8:	and	r0, r2, #255	; 0xff
    63cc:	ldrb	r2, [r7]
    63d0:	and	r1, r2, #255	; 0xff
    63d4:	bl	5988 <unicode_byte_type>
    63d8:	b	63ec <little2_scanDecl+0x74>
    63dc:	ldrb	r1, [r7]
    63e0:	and	r2, r1, #255	; 0xff
    63e4:	add	r0, r6, r2
    63e8:	ldrb	r0, [r0, #76]	; 0x4c
    63ec:	cmp	r0, #24
    63f0:	bcs	6418 <little2_scanDecl+0xa0>
    63f4:	cmp	r0, #20
    63f8:	beq	6408 <little2_scanDecl+0x90>
    63fc:	cmp	r0, #22
    6400:	beq	644c <little2_scanDecl+0xd4>
    6404:	b	6440 <little2_scanDecl+0xc8>
    6408:	add	r0, r7, #2
    640c:	str	r0, [r4]
    6410:	mov	r0, #33	; 0x21
    6414:	b	656c <little2_scanDecl+0x1f4>
    6418:	cmp	r0, #24
    641c:	beq	644c <little2_scanDecl+0xd4>
    6420:	cmp	r0, #27
    6424:	bne	6440 <little2_scanDecl+0xc8>
    6428:	add	r1, r7, #2
    642c:	mov	r3, r4
    6430:	mov	r2, r5
    6434:	mov	r0, r6
    6438:	bl	6120 <little2_scanComment>
    643c:	b	656c <little2_scanDecl+0x1f4>
    6440:	str	r7, [r4]
    6444:	mov	r0, #0
    6448:	b	656c <little2_scanDecl+0x1f4>
    644c:	add	r7, r7, #2
    6450:	cmp	r7, r5
    6454:	beq	6568 <little2_scanDecl+0x1f0>
    6458:	ldrb	r3, [r7, #1]
    645c:	cmp	r3, #0
    6460:	beq	647c <little2_scanDecl+0x104>
    6464:	ldrb	r2, [r7, #1]
    6468:	and	r0, r2, #255	; 0xff
    646c:	ldrb	r1, [r7]
    6470:	and	r1, r1, #255	; 0xff
    6474:	bl	5988 <unicode_byte_type>
    6478:	b	648c <little2_scanDecl+0x114>
    647c:	ldrb	r3, [r7]
    6480:	and	r2, r3, #255	; 0xff
    6484:	add	r1, r6, r2
    6488:	ldrb	r0, [r1, #76]	; 0x4c
    648c:	cmp	r0, #22
    6490:	bcs	64b0 <little2_scanDecl+0x138>
    6494:	cmp	r0, #9
    6498:	beq	653c <little2_scanDecl+0x1c4>
    649c:	cmp	r0, #10
    64a0:	beq	653c <little2_scanDecl+0x1c4>
    64a4:	cmp	r0, #21
    64a8:	beq	653c <little2_scanDecl+0x1c4>
    64ac:	b	6554 <little2_scanDecl+0x1dc>
    64b0:	cmp	r0, #22
    64b4:	beq	6560 <little2_scanDecl+0x1e8>
    64b8:	cmp	r0, #24
    64bc:	beq	6560 <little2_scanDecl+0x1e8>
    64c0:	cmp	r0, #30
    64c4:	bne	6554 <little2_scanDecl+0x1dc>
    64c8:	add	ip, r7, #2
    64cc:	cmp	ip, r5
    64d0:	bne	64dc <little2_scanDecl+0x164>
    64d4:	mvn	r0, #0
    64d8:	b	656c <little2_scanDecl+0x1f4>
    64dc:	ldrb	r0, [r7, #3]
    64e0:	cmp	r0, #0
    64e4:	beq	6500 <little2_scanDecl+0x188>
    64e8:	ldrb	r3, [r7, #3]
    64ec:	and	r0, r3, #255	; 0xff
    64f0:	ldrb	ip, [r7, #2]
    64f4:	and	r1, ip, #255	; 0xff
    64f8:	bl	5988 <unicode_byte_type>
    64fc:	b	6510 <little2_scanDecl+0x198>
    6500:	ldrb	ip, [r7, #2]
    6504:	and	ip, ip, #255	; 0xff
    6508:	add	r1, r6, ip
    650c:	ldrb	r0, [r1, #76]	; 0x4c
    6510:	cmp	r0, #21
    6514:	bcs	652c <little2_scanDecl+0x1b4>
    6518:	cmp	r0, #9
    651c:	beq	6548 <little2_scanDecl+0x1d0>
    6520:	cmp	r0, #10
    6524:	beq	6548 <little2_scanDecl+0x1d0>
    6528:	b	653c <little2_scanDecl+0x1c4>
    652c:	cmp	r0, #21
    6530:	beq	6548 <little2_scanDecl+0x1d0>
    6534:	cmp	r0, #30
    6538:	beq	6548 <little2_scanDecl+0x1d0>
    653c:	str	r7, [r4]
    6540:	mov	r0, #16
    6544:	b	656c <little2_scanDecl+0x1f4>
    6548:	str	r7, [r4]
    654c:	mov	r0, #0
    6550:	b	656c <little2_scanDecl+0x1f4>
    6554:	str	r7, [r4]
    6558:	mov	r0, #0
    655c:	b	656c <little2_scanDecl+0x1f4>
    6560:	add	r7, r7, #2
    6564:	b	6450 <little2_scanDecl+0xd8>
    6568:	mvn	r0, #0
    656c:	ldr	r4, [sp, #8]
    6570:	ldr	r5, [sp, #12]
    6574:	ldr	r6, [sp, #16]
    6578:	ldr	r7, [sp, #20]
    657c:	ldr	lr, [sp, #4]
    6580:	add	sp, sp, #24
    6584:	bx	lr

00006588 <little2_checkPiTarget>:
    6588:	mov	ip, sp
    658c:	sub	sp, sp, #16
    6590:	str	ip, [sp]
    6594:	str	lr, [sp, #4]
    6598:	str	r4, [sp, #8]
    659c:	mov	r4, #0
    65a0:	mov	ip, #11
    65a4:	str	ip, [r3]
    65a8:	sub	ip, r2, r1
    65ac:	cmp	ip, #6
    65b0:	beq	65bc <little2_checkPiTarget+0x34>
    65b4:	mov	r0, #1
    65b8:	b	667c <little2_checkPiTarget+0xf4>
    65bc:	ldrb	r0, [r1, #1]
    65c0:	cmp	r0, #0
    65c4:	beq	65d0 <little2_checkPiTarget+0x48>
    65c8:	mvn	r2, #0
    65cc:	b	65d4 <little2_checkPiTarget+0x4c>
    65d0:	ldrb	r2, [r1]
    65d4:	cmp	r2, #88	; 0x58
    65d8:	beq	65ec <little2_checkPiTarget+0x64>
    65dc:	cmp	r2, #120	; 0x78
    65e0:	beq	65f0 <little2_checkPiTarget+0x68>
    65e4:	mov	r0, #1
    65e8:	b	667c <little2_checkPiTarget+0xf4>
    65ec:	mov	r4, #1
    65f0:	add	ip, r1, #2
    65f4:	ldrb	r2, [ip, #1]
    65f8:	cmp	r2, #0
    65fc:	beq	6608 <little2_checkPiTarget+0x80>
    6600:	mvn	r0, #0
    6604:	b	660c <little2_checkPiTarget+0x84>
    6608:	ldrb	r0, [ip]
    660c:	cmp	r0, #77	; 0x4d
    6610:	beq	6624 <little2_checkPiTarget+0x9c>
    6614:	cmp	r0, #109	; 0x6d
    6618:	beq	6628 <little2_checkPiTarget+0xa0>
    661c:	mov	r0, #1
    6620:	b	667c <little2_checkPiTarget+0xf4>
    6624:	mov	r4, #1
    6628:	add	ip, ip, #2
    662c:	ldrb	r1, [ip, #1]
    6630:	cmp	r1, #0
    6634:	beq	6640 <little2_checkPiTarget+0xb8>
    6638:	mvn	r1, #0
    663c:	b	6644 <little2_checkPiTarget+0xbc>
    6640:	ldrb	r1, [ip]
    6644:	cmp	r1, #76	; 0x4c
    6648:	beq	665c <little2_checkPiTarget+0xd4>
    664c:	cmp	r1, #108	; 0x6c
    6650:	beq	6660 <little2_checkPiTarget+0xd8>
    6654:	mov	r0, #1
    6658:	b	667c <little2_checkPiTarget+0xf4>
    665c:	mov	r4, #1
    6660:	cmp	r4, #0
    6664:	beq	6670 <little2_checkPiTarget+0xe8>
    6668:	mov	r0, #0
    666c:	b	667c <little2_checkPiTarget+0xf4>
    6670:	mov	ip, #12
    6674:	str	ip, [r3]
    6678:	mov	r0, #1
    667c:	ldr	r4, [sp, #8]
    6680:	ldr	lr, [sp, #4]
    6684:	add	sp, sp, #16
    6688:	bx	lr

0000668c <little2_scanPi>:
    668c:	mov	ip, sp
    6690:	sub	sp, sp, #40	; 0x28
    6694:	str	ip, [sp]
    6698:	str	lr, [sp, #4]
    669c:	str	r4, [sp, #8]
    66a0:	str	r5, [sp, #12]
    66a4:	str	r6, [sp, #16]
    66a8:	str	r7, [sp, #20]
    66ac:	str	r8, [sp, #24]
    66b0:	str	r9, [sp, #28]
    66b4:	mov	r6, r3
    66b8:	mov	r5, r2
    66bc:	mov	r4, r1
    66c0:	mov	r7, r0
    66c4:	cmp	r4, r5
    66c8:	bne	66d4 <little2_scanPi+0x48>
    66cc:	mvn	r0, #0
    66d0:	b	6c2c <little2_scanPi+0x5a0>
    66d4:	ldrb	r2, [r4, #1]
    66d8:	cmp	r2, #0
    66dc:	beq	66f8 <little2_scanPi+0x6c>
    66e0:	ldrb	r0, [r4, #1]
    66e4:	and	r0, r0, #255	; 0xff
    66e8:	ldrb	r3, [r4]
    66ec:	and	r1, r3, #255	; 0xff
    66f0:	bl	5988 <unicode_byte_type>
    66f4:	b	6708 <little2_scanPi+0x7c>
    66f8:	ldrb	r0, [r4]
    66fc:	and	r3, r0, #255	; 0xff
    6700:	add	r0, r7, r3
    6704:	ldrb	r0, [r0, #76]	; 0x4c
    6708:	cmp	r0, #22
    670c:	bcs	67c4 <little2_scanPi+0x138>
    6710:	cmp	r0, #5
    6714:	beq	6790 <little2_scanPi+0x104>
    6718:	cmp	r0, #6
    671c:	beq	675c <little2_scanPi+0xd0>
    6720:	cmp	r0, #7
    6724:	bne	682c <little2_scanPi+0x1a0>
    6728:	sub	ip, r5, r4
    672c:	cmp	ip, #4
    6730:	bge	673c <little2_scanPi+0xb0>
    6734:	mvn	r0, #1
    6738:	b	6c2c <little2_scanPi+0x5a0>
    673c:	mov	ip, #1
    6740:	cmp	ip, #0
    6744:	beq	6754 <little2_scanPi+0xc8>
    6748:	str	r4, [r6]
    674c:	mov	r0, #0
    6750:	b	6c2c <little2_scanPi+0x5a0>
    6754:	add	r8, r4, #4
    6758:	b	683c <little2_scanPi+0x1b0>
    675c:	sub	ip, r5, r4
    6760:	cmp	ip, #3
    6764:	bge	6770 <little2_scanPi+0xe4>
    6768:	mvn	r0, #1
    676c:	b	6c2c <little2_scanPi+0x5a0>
    6770:	mov	r2, #1
    6774:	cmp	r2, #0
    6778:	beq	6788 <little2_scanPi+0xfc>
    677c:	str	r4, [r6]
    6780:	mov	r0, #0
    6784:	b	6c2c <little2_scanPi+0x5a0>
    6788:	add	r8, r4, #3
    678c:	b	683c <little2_scanPi+0x1b0>
    6790:	sub	r3, r5, r4
    6794:	cmp	r3, #2
    6798:	bge	67a4 <little2_scanPi+0x118>
    679c:	mvn	r0, #1
    67a0:	b	6c2c <little2_scanPi+0x5a0>
    67a4:	mov	r0, #1
    67a8:	cmp	r0, #0
    67ac:	beq	67bc <little2_scanPi+0x130>
    67b0:	str	r4, [r6]
    67b4:	mov	r0, #0
    67b8:	b	6c2c <little2_scanPi+0x5a0>
    67bc:	add	r8, r4, #2
    67c0:	b	683c <little2_scanPi+0x1b0>
    67c4:	cmp	r0, #22
    67c8:	beq	6838 <little2_scanPi+0x1ac>
    67cc:	cmp	r0, #24
    67d0:	beq	6838 <little2_scanPi+0x1ac>
    67d4:	cmp	r0, #29
    67d8:	bne	682c <little2_scanPi+0x1a0>
    67dc:	ldr	r8, [pc, #1132]	; 6c50 <little2_scanPi+0x5c4>
    67e0:	ldrb	r0, [r4]
    67e4:	and	r1, r0, #255	; 0xff
    67e8:	asr	r3, r1, #5
    67ec:	ldr	r1, [pc, #1120]	; 6c54 <little2_scanPi+0x5c8>
    67f0:	ldrb	r2, [r4, #1]
    67f4:	and	r0, r2, #255	; 0xff
    67f8:	ldrb	r1, [r1, r0]
    67fc:	add	ip, r3, r1, lsl #3
    6800:	ldr	r3, [r8, ip, lsl #2]
    6804:	mov	r1, #1
    6808:	ldrb	r2, [r4]
    680c:	and	r0, r2, #31
    6810:	lsl	r2, r1, r0
    6814:	and	r3, r3, r2
    6818:	cmp	r3, #0
    681c:	bne	6838 <little2_scanPi+0x1ac>
    6820:	str	r4, [r6]
    6824:	mov	r0, #0
    6828:	b	6c2c <little2_scanPi+0x5a0>
    682c:	str	r4, [r6]
    6830:	mov	r0, #0
    6834:	b	6c2c <little2_scanPi+0x5a0>
    6838:	add	r8, r4, #2
    683c:	cmp	r8, r5
    6840:	beq	6c28 <little2_scanPi+0x59c>
    6844:	ldrb	ip, [r8, #1]
    6848:	cmp	ip, #0
    684c:	beq	6868 <little2_scanPi+0x1dc>
    6850:	ldrb	r3, [r8, #1]
    6854:	and	r0, r3, #255	; 0xff
    6858:	ldrb	r2, [r8]
    685c:	and	r1, r2, #255	; 0xff
    6860:	bl	5988 <unicode_byte_type>
    6864:	b	6878 <little2_scanPi+0x1ec>
    6868:	ldrb	r3, [r8]
    686c:	and	r3, r3, #255	; 0xff
    6870:	add	r0, r7, r3
    6874:	ldrb	r0, [r0, #76]	; 0x4c
    6878:	sub	r2, r0, #5
    687c:	cmp	r2, #25
    6880:	bcs	6c1c <little2_scanPi+0x590>
    6884:	add	pc, pc, r2, lsl #2
    6888:	nop	{0}
    688c:	b	6948 <little2_scanPi+0x2bc>
    6890:	b	697c <little2_scanPi+0x2f0>
    6894:	b	69b0 <little2_scanPi+0x324>
    6898:	b	6c1c <little2_scanPi+0x590>
    689c:	b	69e4 <little2_scanPi+0x358>
    68a0:	b	69e4 <little2_scanPi+0x358>
    68a4:	b	6c1c <little2_scanPi+0x590>
    68a8:	b	6c1c <little2_scanPi+0x590>
    68ac:	b	6c1c <little2_scanPi+0x590>
    68b0:	b	6c1c <little2_scanPi+0x590>
    68b4:	b	6ba4 <little2_scanPi+0x518>
    68b8:	b	6c1c <little2_scanPi+0x590>
    68bc:	b	6c1c <little2_scanPi+0x590>
    68c0:	b	6c1c <little2_scanPi+0x590>
    68c4:	b	6c1c <little2_scanPi+0x590>
    68c8:	b	6c1c <little2_scanPi+0x590>
    68cc:	b	69e4 <little2_scanPi+0x358>
    68d0:	b	6940 <little2_scanPi+0x2b4>
    68d4:	b	6c1c <little2_scanPi+0x590>
    68d8:	b	6940 <little2_scanPi+0x2b4>
    68dc:	b	6940 <little2_scanPi+0x2b4>
    68e0:	b	6940 <little2_scanPi+0x2b4>
    68e4:	b	6940 <little2_scanPi+0x2b4>
    68e8:	b	6c1c <little2_scanPi+0x590>
    68ec:	b	68f0 <little2_scanPi+0x264>
    68f0:	ldr	r9, [pc, #856]	; 6c50 <little2_scanPi+0x5c4>
    68f4:	ldrb	r0, [r8]
    68f8:	and	r1, r0, #255	; 0xff
    68fc:	asr	ip, r1, #5
    6900:	ldr	r3, [pc, #848]	; 6c58 <little2_scanPi+0x5cc>
    6904:	ldrb	r2, [r8, #1]
    6908:	and	r2, r2, #255	; 0xff
    690c:	ldrb	r1, [r3, r2]
    6910:	add	ip, ip, r1, lsl #3
    6914:	ldr	r2, [r9, ip, lsl #2]
    6918:	mov	r3, #1
    691c:	ldrb	ip, [r8]
    6920:	and	ip, ip, #31
    6924:	lsl	r1, r3, ip
    6928:	and	r1, r2, r1
    692c:	cmp	r1, #0
    6930:	bne	6940 <little2_scanPi+0x2b4>
    6934:	str	r8, [r6]
    6938:	mov	r0, #0
    693c:	b	6c2c <little2_scanPi+0x5a0>
    6940:	add	r8, r8, #2
    6944:	b	683c <little2_scanPi+0x1b0>
    6948:	sub	r2, r5, r8
    694c:	cmp	r2, #2
    6950:	bge	695c <little2_scanPi+0x2d0>
    6954:	mvn	r0, #1
    6958:	b	6c2c <little2_scanPi+0x5a0>
    695c:	mov	ip, #1
    6960:	cmp	ip, #0
    6964:	beq	6974 <little2_scanPi+0x2e8>
    6968:	str	r8, [r6]
    696c:	mov	r0, #0
    6970:	b	6c2c <little2_scanPi+0x5a0>
    6974:	add	r8, r8, #2
    6978:	b	683c <little2_scanPi+0x1b0>
    697c:	sub	r3, r5, r8
    6980:	cmp	r3, #3
    6984:	bge	6990 <little2_scanPi+0x304>
    6988:	mvn	r0, #1
    698c:	b	6c2c <little2_scanPi+0x5a0>
    6990:	mov	r3, #1
    6994:	cmp	r3, #0
    6998:	beq	69a8 <little2_scanPi+0x31c>
    699c:	str	r8, [r6]
    69a0:	mov	r0, #0
    69a4:	b	6c2c <little2_scanPi+0x5a0>
    69a8:	add	r8, r8, #3
    69ac:	b	683c <little2_scanPi+0x1b0>
    69b0:	sub	r2, r5, r8
    69b4:	cmp	r2, #4
    69b8:	bge	69c4 <little2_scanPi+0x338>
    69bc:	mvn	r0, #1
    69c0:	b	6c2c <little2_scanPi+0x5a0>
    69c4:	mov	r2, #1
    69c8:	cmp	r2, #0
    69cc:	beq	69dc <little2_scanPi+0x350>
    69d0:	str	r8, [r6]
    69d4:	mov	r0, #0
    69d8:	b	6c2c <little2_scanPi+0x5a0>
    69dc:	add	r8, r8, #4
    69e0:	b	683c <little2_scanPi+0x1b0>
    69e4:	add	r3, sp, #32
    69e8:	mov	r2, r8
    69ec:	mov	r1, r4
    69f0:	mov	r0, r7
    69f4:	bl	6588 <little2_checkPiTarget>
    69f8:	cmp	r0, #0
    69fc:	bne	6a0c <little2_scanPi+0x380>
    6a00:	str	r8, [r6]
    6a04:	mov	r0, #0
    6a08:	b	6c2c <little2_scanPi+0x5a0>
    6a0c:	add	r4, r8, #2
    6a10:	cmp	r4, r5
    6a14:	beq	6b9c <little2_scanPi+0x510>
    6a18:	ldrb	r1, [r4, #1]
    6a1c:	cmp	r1, #0
    6a20:	beq	6a3c <little2_scanPi+0x3b0>
    6a24:	ldrb	ip, [r4, #1]
    6a28:	and	r0, ip, #255	; 0xff
    6a2c:	ldrb	ip, [r4]
    6a30:	and	r1, ip, #255	; 0xff
    6a34:	bl	5988 <unicode_byte_type>
    6a38:	b	6a4c <little2_scanPi+0x3c0>
    6a3c:	ldrb	r0, [r4]
    6a40:	and	r2, r0, #255	; 0xff
    6a44:	add	r0, r7, r2
    6a48:	ldrb	r0, [r0, #76]	; 0x4c
    6a4c:	cmp	r0, #16
    6a50:	bcs	6b94 <little2_scanPi+0x508>
    6a54:	add	pc, pc, r0, lsl #2
    6a58:	nop	{0}
    6a5c:	b	6b38 <little2_scanPi+0x4ac>
    6a60:	b	6b38 <little2_scanPi+0x4ac>
    6a64:	b	6b94 <little2_scanPi+0x508>
    6a68:	b	6b94 <little2_scanPi+0x508>
    6a6c:	b	6b94 <little2_scanPi+0x508>
    6a70:	b	6a9c <little2_scanPi+0x410>
    6a74:	b	6ad0 <little2_scanPi+0x444>
    6a78:	b	6b04 <little2_scanPi+0x478>
    6a7c:	b	6b38 <little2_scanPi+0x4ac>
    6a80:	b	6b94 <little2_scanPi+0x508>
    6a84:	b	6b94 <little2_scanPi+0x508>
    6a88:	b	6b94 <little2_scanPi+0x508>
    6a8c:	b	6b94 <little2_scanPi+0x508>
    6a90:	b	6b94 <little2_scanPi+0x508>
    6a94:	b	6b94 <little2_scanPi+0x508>
    6a98:	b	6b44 <little2_scanPi+0x4b8>
    6a9c:	sub	r1, r5, r4
    6aa0:	cmp	r1, #2
    6aa4:	bge	6ab0 <little2_scanPi+0x424>
    6aa8:	mvn	r0, #1
    6aac:	b	6c2c <little2_scanPi+0x5a0>
    6ab0:	mov	r0, #0
    6ab4:	cmp	r0, #0
    6ab8:	beq	6ac8 <little2_scanPi+0x43c>
    6abc:	str	r4, [r6]
    6ac0:	mov	r0, #0
    6ac4:	b	6c2c <little2_scanPi+0x5a0>
    6ac8:	add	r4, r4, #2
    6acc:	b	6a10 <little2_scanPi+0x384>
    6ad0:	sub	r1, r5, r4
    6ad4:	cmp	r1, #3
    6ad8:	bge	6ae4 <little2_scanPi+0x458>
    6adc:	mvn	r0, #1
    6ae0:	b	6c2c <little2_scanPi+0x5a0>
    6ae4:	mov	r1, #0
    6ae8:	cmp	r1, #0
    6aec:	beq	6afc <little2_scanPi+0x470>
    6af0:	str	r4, [r6]
    6af4:	mov	r0, #0
    6af8:	b	6c2c <little2_scanPi+0x5a0>
    6afc:	add	r4, r4, #3
    6b00:	b	6a10 <little2_scanPi+0x384>
    6b04:	sub	ip, r5, r4
    6b08:	cmp	ip, #4
    6b0c:	bge	6b18 <little2_scanPi+0x48c>
    6b10:	mvn	r0, #1
    6b14:	b	6c2c <little2_scanPi+0x5a0>
    6b18:	mov	r1, #0
    6b1c:	cmp	r1, #0
    6b20:	beq	6b30 <little2_scanPi+0x4a4>
    6b24:	str	r4, [r6]
    6b28:	mov	r0, #0
    6b2c:	b	6c2c <little2_scanPi+0x5a0>
    6b30:	add	r4, r4, #4
    6b34:	b	6a10 <little2_scanPi+0x384>
    6b38:	str	r4, [r6]
    6b3c:	mov	r0, #0
    6b40:	b	6c2c <little2_scanPi+0x5a0>
    6b44:	add	r4, r4, #2
    6b48:	cmp	r4, r5
    6b4c:	bne	6b58 <little2_scanPi+0x4cc>
    6b50:	mvn	r0, #0
    6b54:	b	6c2c <little2_scanPi+0x5a0>
    6b58:	ldrb	ip, [r4, #1]
    6b5c:	cmp	ip, #0
    6b60:	bne	6b78 <little2_scanPi+0x4ec>
    6b64:	ldrb	r2, [r4]
    6b68:	cmp	r2, #62	; 0x3e
    6b6c:	moveq	r3, #1
    6b70:	movne	r3, #0
    6b74:	b	6b7c <little2_scanPi+0x4f0>
    6b78:	mov	r3, #0
    6b7c:	cmp	r3, #0
    6b80:	beq	6a10 <little2_scanPi+0x384>
    6b84:	add	ip, r4, #2
    6b88:	str	ip, [r6]
    6b8c:	ldr	r0, [sp, #32]
    6b90:	b	6c2c <little2_scanPi+0x5a0>
    6b94:	add	r4, r4, #2
    6b98:	b	6a10 <little2_scanPi+0x384>
    6b9c:	mvn	r0, #0
    6ba0:	b	6c2c <little2_scanPi+0x5a0>
    6ba4:	add	r3, sp, #32
    6ba8:	mov	r2, r8
    6bac:	mov	r1, r4
    6bb0:	mov	r0, r7
    6bb4:	bl	6588 <little2_checkPiTarget>
    6bb8:	cmp	r0, #0
    6bbc:	bne	6bcc <little2_scanPi+0x540>
    6bc0:	str	r8, [r6]
    6bc4:	mov	r0, #0
    6bc8:	b	6c2c <little2_scanPi+0x5a0>
    6bcc:	add	r8, r8, #2
    6bd0:	cmp	r8, r5
    6bd4:	bne	6be0 <little2_scanPi+0x554>
    6bd8:	mvn	r0, #0
    6bdc:	b	6c2c <little2_scanPi+0x5a0>
    6be0:	ldrb	ip, [r8, #1]
    6be4:	cmp	ip, #0
    6be8:	bne	6c00 <little2_scanPi+0x574>
    6bec:	ldrb	r1, [r8]
    6bf0:	cmp	r1, #62	; 0x3e
    6bf4:	moveq	r0, #1
    6bf8:	movne	r0, #0
    6bfc:	b	6c04 <little2_scanPi+0x578>
    6c00:	mov	r0, #0
    6c04:	cmp	r0, #0
    6c08:	beq	6c1c <little2_scanPi+0x590>
    6c0c:	add	r1, r8, #2
    6c10:	str	r1, [r6]
    6c14:	ldr	r0, [sp, #32]
    6c18:	b	6c2c <little2_scanPi+0x5a0>
    6c1c:	str	r8, [r6]
    6c20:	mov	r0, #0
    6c24:	b	6c2c <little2_scanPi+0x5a0>
    6c28:	mvn	r0, #0
    6c2c:	ldr	r4, [sp, #8]
    6c30:	ldr	r5, [sp, #12]
    6c34:	ldr	r6, [sp, #16]
    6c38:	ldr	r7, [sp, #20]
    6c3c:	ldr	r8, [sp, #24]
    6c40:	ldr	r9, [sp, #28]
    6c44:	ldr	lr, [sp, #4]
    6c48:	add	sp, sp, #40	; 0x28
    6c4c:	bx	lr
    6c50:	.word	0x00000000
    6c54:	.word	0x00000500
    6c58:	.word	0x00000600

00006c5c <little2_scanCdataSection>:
    6c5c:	mov	ip, sp
    6c60:	sub	sp, sp, #16
    6c64:	str	ip, [sp]
    6c68:	str	lr, [sp, #4]
    6c6c:	str	r4, [sp, #8]
    6c70:	sub	r0, r2, r1
    6c74:	cmp	r0, #12
    6c78:	bge	6c84 <little2_scanCdataSection+0x28>
    6c7c:	mvn	r0, #0
    6c80:	b	6ce4 <little2_scanCdataSection+0x88>
    6c84:	mov	r4, #0
    6c88:	cmp	r4, #6
    6c8c:	bge	6cdc <little2_scanCdataSection+0x80>
    6c90:	ldrb	r2, [r1, #1]
    6c94:	cmp	r2, #0
    6c98:	bne	6cb8 <little2_scanCdataSection+0x5c>
    6c9c:	ldrb	ip, [r1]
    6ca0:	ldr	r0, [pc, #76]	; 6cf4 <little2_scanCdataSection+0x98>
    6ca4:	ldrb	r2, [r0, r4]
    6ca8:	cmp	ip, r2
    6cac:	moveq	ip, #1
    6cb0:	movne	ip, #0
    6cb4:	b	6cbc <little2_scanCdataSection+0x60>
    6cb8:	mov	ip, #0
    6cbc:	cmp	ip, #0
    6cc0:	bne	6cd0 <little2_scanCdataSection+0x74>
    6cc4:	str	r1, [r3]
    6cc8:	mov	r0, #0
    6ccc:	b	6ce4 <little2_scanCdataSection+0x88>
    6cd0:	add	r4, r4, #1
    6cd4:	add	r1, r1, #2
    6cd8:	b	6c88 <little2_scanCdataSection+0x2c>
    6cdc:	str	r1, [r3]
    6ce0:	mov	r0, #8
    6ce4:	ldr	r4, [sp, #8]
    6ce8:	ldr	lr, [sp, #4]
    6cec:	add	sp, sp, #16
    6cf0:	bx	lr
    6cf4:	.word	0x00001288

00006cf8 <little2_cdataSectionTok>:
    6cf8:	mov	ip, sp
    6cfc:	sub	sp, sp, #24
    6d00:	str	ip, [sp]
    6d04:	str	lr, [sp, #4]
    6d08:	str	r4, [sp, #8]
    6d0c:	str	r5, [sp, #12]
    6d10:	str	r6, [sp, #16]
    6d14:	str	r7, [sp, #20]
    6d18:	mov	r4, r3
    6d1c:	mov	r5, r2
    6d20:	mov	r6, r1
    6d24:	mov	r7, r0
    6d28:	cmp	r6, r5
    6d2c:	bne	6d38 <little2_cdataSectionTok+0x40>
    6d30:	mvn	r0, #3
    6d34:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6d38:	mov	ip, #1
    6d3c:	cmp	ip, #0
    6d40:	beq	6d6c <little2_cdataSectionTok+0x74>
    6d44:	sub	r3, r5, r6
    6d48:	and	r0, r3, #1
    6d4c:	cmp	r0, #0
    6d50:	beq	6d6c <little2_cdataSectionTok+0x74>
    6d54:	bic	r0, r3, #1
    6d58:	cmp	r0, #0
    6d5c:	bne	6d68 <little2_cdataSectionTok+0x70>
    6d60:	mvn	r0, #0
    6d64:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6d68:	add	r5, r6, r0
    6d6c:	ldrb	r1, [r6, #1]
    6d70:	cmp	r1, #0
    6d74:	beq	6d90 <little2_cdataSectionTok+0x98>
    6d78:	ldrb	r2, [r6, #1]
    6d7c:	and	r0, r2, #255	; 0xff
    6d80:	ldrb	r1, [r6]
    6d84:	and	r1, r1, #255	; 0xff
    6d88:	bl	5988 <unicode_byte_type>
    6d8c:	b	6da0 <little2_cdataSectionTok+0xa8>
    6d90:	ldrb	ip, [r6]
    6d94:	and	r3, ip, #255	; 0xff
    6d98:	add	r3, r7, r3
    6d9c:	ldrb	r0, [r3, #76]	; 0x4c
    6da0:	cmp	r0, #11
    6da4:	bcs	6f8c <little2_cdataSectionTok+0x294>
    6da8:	add	pc, pc, r0, lsl #2
    6dac:	nop	{0}
    6db0:	b	6f80 <little2_cdataSectionTok+0x288>
    6db4:	b	6f80 <little2_cdataSectionTok+0x288>
    6db8:	b	6f8c <little2_cdataSectionTok+0x294>
    6dbc:	b	6f8c <little2_cdataSectionTok+0x294>
    6dc0:	b	6ddc <little2_cdataSectionTok+0xe4>
    6dc4:	b	6ee4 <little2_cdataSectionTok+0x1ec>
    6dc8:	b	6f18 <little2_cdataSectionTok+0x220>
    6dcc:	b	6f4c <little2_cdataSectionTok+0x254>
    6dd0:	b	6f80 <little2_cdataSectionTok+0x288>
    6dd4:	b	6e74 <little2_cdataSectionTok+0x17c>
    6dd8:	b	6ed4 <little2_cdataSectionTok+0x1dc>
    6ddc:	add	r6, r6, #2
    6de0:	cmp	r6, r5
    6de4:	bne	6df0 <little2_cdataSectionTok+0xf8>
    6de8:	mvn	r0, #0
    6dec:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6df0:	ldrb	r2, [r6, #1]
    6df4:	cmp	r2, #0
    6df8:	bne	6e10 <little2_cdataSectionTok+0x118>
    6dfc:	ldrb	r1, [r6]
    6e00:	cmp	r1, #93	; 0x5d
    6e04:	moveq	ip, #1
    6e08:	movne	ip, #0
    6e0c:	b	6e14 <little2_cdataSectionTok+0x11c>
    6e10:	mov	ip, #0
    6e14:	cmp	ip, #0
    6e18:	beq	6f90 <little2_cdataSectionTok+0x298>
    6e1c:	add	ip, r6, #2
    6e20:	cmp	ip, r5
    6e24:	bne	6e30 <little2_cdataSectionTok+0x138>
    6e28:	mvn	r0, #0
    6e2c:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6e30:	ldrb	r0, [ip, #1]
    6e34:	cmp	r0, #0
    6e38:	bne	6e50 <little2_cdataSectionTok+0x158>
    6e3c:	ldrb	r0, [ip]
    6e40:	cmp	r0, #62	; 0x3e
    6e44:	moveq	r3, #1
    6e48:	movne	r3, #0
    6e4c:	b	6e54 <little2_cdataSectionTok+0x15c>
    6e50:	mov	r3, #0
    6e54:	cmp	r3, #0
    6e58:	bne	6e64 <little2_cdataSectionTok+0x16c>
    6e5c:	sub	r6, ip, #2
    6e60:	b	6f90 <little2_cdataSectionTok+0x298>
    6e64:	add	ip, ip, #2
    6e68:	str	ip, [r4]
    6e6c:	mov	r0, #40	; 0x28
    6e70:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6e74:	add	r6, r6, #2
    6e78:	cmp	r6, r5
    6e7c:	bne	6e88 <little2_cdataSectionTok+0x190>
    6e80:	mvn	r0, #0
    6e84:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6e88:	ldrb	r3, [r6, #1]
    6e8c:	cmp	r3, #0
    6e90:	beq	6eac <little2_cdataSectionTok+0x1b4>
    6e94:	ldrb	r1, [r6, #1]
    6e98:	and	r0, r1, #255	; 0xff
    6e9c:	ldrb	r2, [r6]
    6ea0:	and	r1, r2, #255	; 0xff
    6ea4:	bl	5988 <unicode_byte_type>
    6ea8:	b	6ebc <little2_cdataSectionTok+0x1c4>
    6eac:	ldrb	r3, [r6]
    6eb0:	and	r0, r3, #255	; 0xff
    6eb4:	add	r3, r7, r0
    6eb8:	ldrb	r0, [r3, #76]	; 0x4c
    6ebc:	cmp	r0, #10
    6ec0:	bne	6ec8 <little2_cdataSectionTok+0x1d0>
    6ec4:	add	r6, r6, #2
    6ec8:	str	r6, [r4]
    6ecc:	mov	r0, #7
    6ed0:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6ed4:	add	r0, r6, #2
    6ed8:	str	r0, [r4]
    6edc:	mov	r0, #7
    6ee0:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6ee4:	sub	r0, r5, r6
    6ee8:	cmp	r0, #2
    6eec:	bge	6ef8 <little2_cdataSectionTok+0x200>
    6ef0:	mvn	r0, #1
    6ef4:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6ef8:	mov	r2, #0
    6efc:	cmp	r2, #0
    6f00:	beq	6f10 <little2_cdataSectionTok+0x218>
    6f04:	str	r6, [r4]
    6f08:	mov	r0, #0
    6f0c:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6f10:	add	r6, r6, #2
    6f14:	b	6f90 <little2_cdataSectionTok+0x298>
    6f18:	sub	r0, r5, r6
    6f1c:	cmp	r0, #3
    6f20:	bge	6f2c <little2_cdataSectionTok+0x234>
    6f24:	mvn	r0, #1
    6f28:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6f2c:	mov	ip, #0
    6f30:	cmp	ip, #0
    6f34:	beq	6f44 <little2_cdataSectionTok+0x24c>
    6f38:	str	r6, [r4]
    6f3c:	mov	r0, #0
    6f40:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6f44:	add	r6, r6, #3
    6f48:	b	6f90 <little2_cdataSectionTok+0x298>
    6f4c:	sub	r1, r5, r6
    6f50:	cmp	r1, #4
    6f54:	bge	6f60 <little2_cdataSectionTok+0x268>
    6f58:	mvn	r0, #1
    6f5c:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6f60:	mov	r1, #0
    6f64:	cmp	r1, #0
    6f68:	beq	6f78 <little2_cdataSectionTok+0x280>
    6f6c:	str	r6, [r4]
    6f70:	mov	r0, #0
    6f74:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6f78:	add	r6, r6, #4
    6f7c:	b	6f90 <little2_cdataSectionTok+0x298>
    6f80:	str	r6, [r4]
    6f84:	mov	r0, #0
    6f88:	b	70c0 <little2_cdataSectionTok+0x3c8>
    6f8c:	add	r6, r6, #2
    6f90:	cmp	r6, r5
    6f94:	beq	70b8 <little2_cdataSectionTok+0x3c0>
    6f98:	ldrb	r1, [r6, #1]
    6f9c:	cmp	r1, #0
    6fa0:	beq	6fbc <little2_cdataSectionTok+0x2c4>
    6fa4:	ldrb	r1, [r6, #1]
    6fa8:	and	r0, r1, #255	; 0xff
    6fac:	ldrb	r2, [r6]
    6fb0:	and	r1, r2, #255	; 0xff
    6fb4:	bl	5988 <unicode_byte_type>
    6fb8:	b	6fcc <little2_cdataSectionTok+0x2d4>
    6fbc:	ldrb	r2, [r6]
    6fc0:	and	ip, r2, #255	; 0xff
    6fc4:	add	r2, r7, ip
    6fc8:	ldrb	r0, [r2, #76]	; 0x4c
    6fcc:	cmp	r0, #11
    6fd0:	bcs	70b0 <little2_cdataSectionTok+0x3b8>
    6fd4:	add	pc, pc, r0, lsl #2
    6fd8:	nop	{0}
    6fdc:	b	70a4 <little2_cdataSectionTok+0x3ac>
    6fe0:	b	70a4 <little2_cdataSectionTok+0x3ac>
    6fe4:	b	70b0 <little2_cdataSectionTok+0x3b8>
    6fe8:	b	70b0 <little2_cdataSectionTok+0x3b8>
    6fec:	b	70a4 <little2_cdataSectionTok+0x3ac>
    6ff0:	b	7008 <little2_cdataSectionTok+0x310>
    6ff4:	b	703c <little2_cdataSectionTok+0x344>
    6ff8:	b	7070 <little2_cdataSectionTok+0x378>
    6ffc:	b	70a4 <little2_cdataSectionTok+0x3ac>
    7000:	b	70a4 <little2_cdataSectionTok+0x3ac>
    7004:	b	70a4 <little2_cdataSectionTok+0x3ac>
    7008:	sub	r1, r5, r6
    700c:	cmp	r1, #2
    7010:	blt	701c <little2_cdataSectionTok+0x324>
    7014:	mov	r1, #0
    7018:	b	7020 <little2_cdataSectionTok+0x328>
    701c:	mov	r1, #1
    7020:	cmp	r1, #0
    7024:	beq	7034 <little2_cdataSectionTok+0x33c>
    7028:	str	r6, [r4]
    702c:	mov	r0, #6
    7030:	b	70c0 <little2_cdataSectionTok+0x3c8>
    7034:	add	r6, r6, #2
    7038:	b	6f90 <little2_cdataSectionTok+0x298>
    703c:	sub	ip, r5, r6
    7040:	cmp	ip, #3
    7044:	blt	7050 <little2_cdataSectionTok+0x358>
    7048:	mov	r0, #0
    704c:	b	7054 <little2_cdataSectionTok+0x35c>
    7050:	mov	r0, #1
    7054:	cmp	r0, #0
    7058:	beq	7068 <little2_cdataSectionTok+0x370>
    705c:	str	r6, [r4]
    7060:	mov	r0, #6
    7064:	b	70c0 <little2_cdataSectionTok+0x3c8>
    7068:	add	r6, r6, #3
    706c:	b	6f90 <little2_cdataSectionTok+0x298>
    7070:	sub	r2, r5, r6
    7074:	cmp	r2, #4
    7078:	blt	7084 <little2_cdataSectionTok+0x38c>
    707c:	mov	r1, #0
    7080:	b	7088 <little2_cdataSectionTok+0x390>
    7084:	mov	r1, #1
    7088:	cmp	r1, #0
    708c:	beq	709c <little2_cdataSectionTok+0x3a4>
    7090:	str	r6, [r4]
    7094:	mov	r0, #6
    7098:	b	70c0 <little2_cdataSectionTok+0x3c8>
    709c:	add	r6, r6, #4
    70a0:	b	6f90 <little2_cdataSectionTok+0x298>
    70a4:	str	r6, [r4]
    70a8:	mov	r0, #6
    70ac:	b	70c0 <little2_cdataSectionTok+0x3c8>
    70b0:	add	r6, r6, #2
    70b4:	b	6f90 <little2_cdataSectionTok+0x298>
    70b8:	str	r6, [r4]
    70bc:	mov	r0, #6
    70c0:	ldr	r4, [sp, #8]
    70c4:	ldr	r5, [sp, #12]
    70c8:	ldr	r6, [sp, #16]
    70cc:	ldr	r7, [sp, #20]
    70d0:	ldr	lr, [sp, #4]
    70d4:	add	sp, sp, #24
    70d8:	bx	lr

000070dc <little2_scanEndTag>:
    70dc:	mov	ip, sp
    70e0:	sub	sp, sp, #24
    70e4:	str	ip, [sp]
    70e8:	str	lr, [sp, #4]
    70ec:	str	r4, [sp, #8]
    70f0:	str	r5, [sp, #12]
    70f4:	str	r6, [sp, #16]
    70f8:	str	r7, [sp, #20]
    70fc:	mov	r6, r3
    7100:	mov	r4, r2
    7104:	mov	r7, r1
    7108:	mov	r5, r0
    710c:	cmp	r7, r4
    7110:	bne	711c <little2_scanEndTag+0x40>
    7114:	mvn	r0, #0
    7118:	b	74ec <little2_scanEndTag+0x410>
    711c:	ldrb	r0, [r7, #1]
    7120:	cmp	r0, #0
    7124:	beq	7140 <little2_scanEndTag+0x64>
    7128:	ldrb	r3, [r7, #1]
    712c:	and	r0, r3, #255	; 0xff
    7130:	ldrb	r2, [r7]
    7134:	and	r1, r2, #255	; 0xff
    7138:	bl	5988 <unicode_byte_type>
    713c:	b	7150 <little2_scanEndTag+0x74>
    7140:	ldrb	r1, [r7]
    7144:	and	r0, r1, #255	; 0xff
    7148:	add	r1, r5, r0
    714c:	ldrb	r0, [r1, #76]	; 0x4c
    7150:	cmp	r0, #22
    7154:	bcs	720c <little2_scanEndTag+0x130>
    7158:	cmp	r0, #5
    715c:	beq	71d8 <little2_scanEndTag+0xfc>
    7160:	cmp	r0, #6
    7164:	beq	71a4 <little2_scanEndTag+0xc8>
    7168:	cmp	r0, #7
    716c:	bne	7274 <little2_scanEndTag+0x198>
    7170:	sub	r0, r4, r7
    7174:	cmp	r0, #4
    7178:	bge	7184 <little2_scanEndTag+0xa8>
    717c:	mvn	r0, #1
    7180:	b	74ec <little2_scanEndTag+0x410>
    7184:	mov	r1, #1
    7188:	cmp	r1, #0
    718c:	beq	719c <little2_scanEndTag+0xc0>
    7190:	str	r7, [r6]
    7194:	mov	r0, #0
    7198:	b	74ec <little2_scanEndTag+0x410>
    719c:	add	r7, r7, #4
    71a0:	b	7284 <little2_scanEndTag+0x1a8>
    71a4:	sub	r2, r4, r7
    71a8:	cmp	r2, #3
    71ac:	bge	71b8 <little2_scanEndTag+0xdc>
    71b0:	mvn	r0, #1
    71b4:	b	74ec <little2_scanEndTag+0x410>
    71b8:	mov	r2, #1
    71bc:	cmp	r2, #0
    71c0:	beq	71d0 <little2_scanEndTag+0xf4>
    71c4:	str	r7, [r6]
    71c8:	mov	r0, #0
    71cc:	b	74ec <little2_scanEndTag+0x410>
    71d0:	add	r7, r7, #3
    71d4:	b	7284 <little2_scanEndTag+0x1a8>
    71d8:	sub	ip, r4, r7
    71dc:	cmp	ip, #2
    71e0:	bge	71ec <little2_scanEndTag+0x110>
    71e4:	mvn	r0, #1
    71e8:	b	74ec <little2_scanEndTag+0x410>
    71ec:	mov	r0, #1
    71f0:	cmp	r0, #0
    71f4:	beq	7204 <little2_scanEndTag+0x128>
    71f8:	str	r7, [r6]
    71fc:	mov	r0, #0
    7200:	b	74ec <little2_scanEndTag+0x410>
    7204:	add	r7, r7, #2
    7208:	b	7284 <little2_scanEndTag+0x1a8>
    720c:	cmp	r0, #22
    7210:	beq	7280 <little2_scanEndTag+0x1a4>
    7214:	cmp	r0, #24
    7218:	beq	7280 <little2_scanEndTag+0x1a4>
    721c:	cmp	r0, #29
    7220:	bne	7274 <little2_scanEndTag+0x198>
    7224:	ldr	r2, [pc, #732]	; 7508 <little2_scanEndTag+0x42c>
    7228:	ldrb	r3, [r7]
    722c:	and	r0, r3, #255	; 0xff
    7230:	asr	r3, r0, #5
    7234:	ldr	r1, [pc, #720]	; 750c <little2_scanEndTag+0x430>
    7238:	ldrb	r0, [r7, #1]
    723c:	and	ip, r0, #255	; 0xff
    7240:	ldrb	ip, [r1, ip]
    7244:	add	ip, r3, ip, lsl #3
    7248:	ldr	ip, [r2, ip, lsl #2]
    724c:	mov	r0, #1
    7250:	ldrb	r3, [r7]
    7254:	and	r1, r3, #31
    7258:	lsl	r2, r0, r1
    725c:	and	ip, ip, r2
    7260:	cmp	ip, #0
    7264:	bne	7280 <little2_scanEndTag+0x1a4>
    7268:	str	r7, [r6]
    726c:	mov	r0, #0
    7270:	b	74ec <little2_scanEndTag+0x410>
    7274:	str	r7, [r6]
    7278:	mov	r0, #0
    727c:	b	74ec <little2_scanEndTag+0x410>
    7280:	add	r7, r7, #2
    7284:	cmp	r7, r4
    7288:	beq	74e8 <little2_scanEndTag+0x40c>
    728c:	ldrb	ip, [r7, #1]
    7290:	cmp	ip, #0
    7294:	beq	72b0 <little2_scanEndTag+0x1d4>
    7298:	ldrb	r0, [r7, #1]
    729c:	and	r0, r0, #255	; 0xff
    72a0:	ldrb	r2, [r7]
    72a4:	and	r1, r2, #255	; 0xff
    72a8:	bl	5988 <unicode_byte_type>
    72ac:	b	72c0 <little2_scanEndTag+0x1e4>
    72b0:	ldrb	r1, [r7]
    72b4:	and	r3, r1, #255	; 0xff
    72b8:	add	ip, r5, r3
    72bc:	ldrb	r0, [ip, #76]	; 0x4c
    72c0:	sub	r0, r0, #5
    72c4:	cmp	r0, #25
    72c8:	bcs	74dc <little2_scanEndTag+0x400>
    72cc:	add	pc, pc, r0, lsl #2
    72d0:	nop	{0}
    72d4:	b	7390 <little2_scanEndTag+0x2b4>
    72d8:	b	73c4 <little2_scanEndTag+0x2e8>
    72dc:	b	73f8 <little2_scanEndTag+0x31c>
    72e0:	b	74dc <little2_scanEndTag+0x400>
    72e4:	b	742c <little2_scanEndTag+0x350>
    72e8:	b	742c <little2_scanEndTag+0x350>
    72ec:	b	74cc <little2_scanEndTag+0x3f0>
    72f0:	b	74dc <little2_scanEndTag+0x400>
    72f4:	b	74dc <little2_scanEndTag+0x400>
    72f8:	b	74dc <little2_scanEndTag+0x400>
    72fc:	b	74dc <little2_scanEndTag+0x400>
    7300:	b	74dc <little2_scanEndTag+0x400>
    7304:	b	74dc <little2_scanEndTag+0x400>
    7308:	b	74dc <little2_scanEndTag+0x400>
    730c:	b	74dc <little2_scanEndTag+0x400>
    7310:	b	74dc <little2_scanEndTag+0x400>
    7314:	b	742c <little2_scanEndTag+0x350>
    7318:	b	7388 <little2_scanEndTag+0x2ac>
    731c:	b	74c4 <little2_scanEndTag+0x3e8>
    7320:	b	7388 <little2_scanEndTag+0x2ac>
    7324:	b	7388 <little2_scanEndTag+0x2ac>
    7328:	b	7388 <little2_scanEndTag+0x2ac>
    732c:	b	7388 <little2_scanEndTag+0x2ac>
    7330:	b	74dc <little2_scanEndTag+0x400>
    7334:	b	7338 <little2_scanEndTag+0x25c>
    7338:	ldr	r3, [pc, #456]	; 7508 <little2_scanEndTag+0x42c>
    733c:	ldrb	r1, [r7]
    7340:	and	r1, r1, #255	; 0xff
    7344:	asr	r2, r1, #5
    7348:	ldr	ip, [pc, #448]	; 7510 <little2_scanEndTag+0x434>
    734c:	ldrb	r1, [r7, #1]
    7350:	and	r0, r1, #255	; 0xff
    7354:	ldrb	r1, [ip, r0]
    7358:	add	r0, r2, r1, lsl #3
    735c:	ldr	r2, [r3, r0, lsl #2]
    7360:	mov	r1, #1
    7364:	ldrb	ip, [r7]
    7368:	and	r0, ip, #31
    736c:	lsl	r3, r1, r0
    7370:	and	r2, r2, r3
    7374:	cmp	r2, #0
    7378:	bne	7388 <little2_scanEndTag+0x2ac>
    737c:	str	r7, [r6]
    7380:	mov	r0, #0
    7384:	b	74ec <little2_scanEndTag+0x410>
    7388:	add	r7, r7, #2
    738c:	b	7284 <little2_scanEndTag+0x1a8>
    7390:	sub	ip, r4, r7
    7394:	cmp	ip, #2
    7398:	bge	73a4 <little2_scanEndTag+0x2c8>
    739c:	mvn	r0, #1
    73a0:	b	74ec <little2_scanEndTag+0x410>
    73a4:	mov	r1, #1
    73a8:	cmp	r1, #0
    73ac:	beq	73bc <little2_scanEndTag+0x2e0>
    73b0:	str	r7, [r6]
    73b4:	mov	r0, #0
    73b8:	b	74ec <little2_scanEndTag+0x410>
    73bc:	add	r7, r7, #2
    73c0:	b	7284 <little2_scanEndTag+0x1a8>
    73c4:	sub	r3, r4, r7
    73c8:	cmp	r3, #3
    73cc:	bge	73d8 <little2_scanEndTag+0x2fc>
    73d0:	mvn	r0, #1
    73d4:	b	74ec <little2_scanEndTag+0x410>
    73d8:	mov	r3, #1
    73dc:	cmp	r3, #0
    73e0:	beq	73f0 <little2_scanEndTag+0x314>
    73e4:	str	r7, [r6]
    73e8:	mov	r0, #0
    73ec:	b	74ec <little2_scanEndTag+0x410>
    73f0:	add	r7, r7, #3
    73f4:	b	7284 <little2_scanEndTag+0x1a8>
    73f8:	sub	r3, r4, r7
    73fc:	cmp	r3, #4
    7400:	bge	740c <little2_scanEndTag+0x330>
    7404:	mvn	r0, #1
    7408:	b	74ec <little2_scanEndTag+0x410>
    740c:	mov	r0, #1
    7410:	cmp	r0, #0
    7414:	beq	7424 <little2_scanEndTag+0x348>
    7418:	str	r7, [r6]
    741c:	mov	r0, #0
    7420:	b	74ec <little2_scanEndTag+0x410>
    7424:	add	r7, r7, #4
    7428:	b	7284 <little2_scanEndTag+0x1a8>
    742c:	add	r7, r7, #2
    7430:	cmp	r7, r4
    7434:	beq	74bc <little2_scanEndTag+0x3e0>
    7438:	ldrb	r3, [r7, #1]
    743c:	cmp	r3, #0
    7440:	beq	745c <little2_scanEndTag+0x380>
    7444:	ldrb	r0, [r7, #1]
    7448:	and	r0, r0, #255	; 0xff
    744c:	ldrb	r1, [r7]
    7450:	and	r1, r1, #255	; 0xff
    7454:	bl	5988 <unicode_byte_type>
    7458:	b	746c <little2_scanEndTag+0x390>
    745c:	ldrb	r1, [r7]
    7460:	and	r2, r1, #255	; 0xff
    7464:	add	r3, r5, r2
    7468:	ldrb	r0, [r3, #76]	; 0x4c
    746c:	cmp	r0, #11
    7470:	bcs	7488 <little2_scanEndTag+0x3ac>
    7474:	cmp	r0, #9
    7478:	beq	74a4 <little2_scanEndTag+0x3c8>
    747c:	cmp	r0, #10
    7480:	beq	74a4 <little2_scanEndTag+0x3c8>
    7484:	b	7498 <little2_scanEndTag+0x3bc>
    7488:	cmp	r0, #11
    748c:	beq	74ac <little2_scanEndTag+0x3d0>
    7490:	cmp	r0, #21
    7494:	beq	74a4 <little2_scanEndTag+0x3c8>
    7498:	str	r7, [r6]
    749c:	mov	r0, #0
    74a0:	b	74ec <little2_scanEndTag+0x410>
    74a4:	add	r7, r7, #2
    74a8:	b	7430 <little2_scanEndTag+0x354>
    74ac:	add	ip, r7, #2
    74b0:	str	ip, [r6]
    74b4:	mov	r0, #5
    74b8:	b	74ec <little2_scanEndTag+0x410>
    74bc:	mvn	r0, #0
    74c0:	b	74ec <little2_scanEndTag+0x410>
    74c4:	add	r7, r7, #2
    74c8:	b	7284 <little2_scanEndTag+0x1a8>
    74cc:	add	r1, r7, #2
    74d0:	str	r1, [r6]
    74d4:	mov	r0, #5
    74d8:	b	74ec <little2_scanEndTag+0x410>
    74dc:	str	r7, [r6]
    74e0:	mov	r0, #0
    74e4:	b	74ec <little2_scanEndTag+0x410>
    74e8:	mvn	r0, #0
    74ec:	ldr	r4, [sp, #8]
    74f0:	ldr	r5, [sp, #12]
    74f4:	ldr	r6, [sp, #16]
    74f8:	ldr	r7, [sp, #20]
    74fc:	ldr	lr, [sp, #4]
    7500:	add	sp, sp, #24
    7504:	bx	lr
    7508:	.word	0x00000000
    750c:	.word	0x00000500
    7510:	.word	0x00000600

00007514 <little2_scanHexCharRef>:
    7514:	mov	ip, sp
    7518:	sub	sp, sp, #24
    751c:	str	ip, [sp]
    7520:	str	lr, [sp, #4]
    7524:	str	r4, [sp, #8]
    7528:	str	r5, [sp, #12]
    752c:	str	r6, [sp, #16]
    7530:	str	r7, [sp, #20]
    7534:	mov	r4, r3
    7538:	mov	r5, r2
    753c:	mov	r7, r1
    7540:	mov	r6, r0
    7544:	cmp	r7, r5
    7548:	beq	7618 <little2_scanHexCharRef+0x104>
    754c:	ldrb	r2, [r7, #1]
    7550:	cmp	r2, #0
    7554:	beq	7570 <little2_scanHexCharRef+0x5c>
    7558:	ldrb	r0, [r7, #1]
    755c:	and	r0, r0, #255	; 0xff
    7560:	ldrb	r1, [r7]
    7564:	and	r1, r1, #255	; 0xff
    7568:	bl	5988 <unicode_byte_type>
    756c:	b	7580 <little2_scanHexCharRef+0x6c>
    7570:	ldrb	r3, [r7]
    7574:	and	r2, r3, #255	; 0xff
    7578:	add	r3, r6, r2
    757c:	ldrb	r0, [r3, #76]	; 0x4c
    7580:	cmp	r0, #24
    7584:	beq	759c <little2_scanHexCharRef+0x88>
    7588:	cmp	r0, #25
    758c:	beq	759c <little2_scanHexCharRef+0x88>
    7590:	str	r7, [r4]
    7594:	mov	r0, #0
    7598:	b	761c <little2_scanHexCharRef+0x108>
    759c:	add	r7, r7, #2
    75a0:	cmp	r7, r5
    75a4:	beq	7618 <little2_scanHexCharRef+0x104>
    75a8:	ldrb	r1, [r7, #1]
    75ac:	cmp	r1, #0
    75b0:	beq	75cc <little2_scanHexCharRef+0xb8>
    75b4:	ldrb	ip, [r7, #1]
    75b8:	and	r0, ip, #255	; 0xff
    75bc:	ldrb	r2, [r7]
    75c0:	and	r1, r2, #255	; 0xff
    75c4:	bl	5988 <unicode_byte_type>
    75c8:	b	75dc <little2_scanHexCharRef+0xc8>
    75cc:	ldrb	ip, [r7]
    75d0:	and	ip, ip, #255	; 0xff
    75d4:	add	r0, r6, ip
    75d8:	ldrb	r0, [r0, #76]	; 0x4c
    75dc:	cmp	r0, #18
    75e0:	beq	7608 <little2_scanHexCharRef+0xf4>
    75e4:	cmp	r0, #24
    75e8:	beq	7600 <little2_scanHexCharRef+0xec>
    75ec:	cmp	r0, #25
    75f0:	beq	7600 <little2_scanHexCharRef+0xec>
    75f4:	str	r7, [r4]
    75f8:	mov	r0, #0
    75fc:	b	761c <little2_scanHexCharRef+0x108>
    7600:	add	r7, r7, #2
    7604:	b	75a0 <little2_scanHexCharRef+0x8c>
    7608:	add	r3, r7, #2
    760c:	str	r3, [r4]
    7610:	mov	r0, #10
    7614:	b	761c <little2_scanHexCharRef+0x108>
    7618:	mvn	r0, #0
    761c:	ldr	r4, [sp, #8]
    7620:	ldr	r5, [sp, #12]
    7624:	ldr	r6, [sp, #16]
    7628:	ldr	r7, [sp, #20]
    762c:	ldr	lr, [sp, #4]
    7630:	add	sp, sp, #24
    7634:	bx	lr

00007638 <little2_scanCharRef>:
    7638:	mov	ip, sp
    763c:	sub	sp, sp, #24
    7640:	str	ip, [sp]
    7644:	str	lr, [sp, #4]
    7648:	str	r4, [sp, #8]
    764c:	str	r5, [sp, #12]
    7650:	str	r6, [sp, #16]
    7654:	str	r7, [sp, #20]
    7658:	mov	r4, r3
    765c:	mov	r5, r2
    7660:	mov	r7, r1
    7664:	mov	r6, r0
    7668:	cmp	r7, r5
    766c:	beq	7770 <little2_scanCharRef+0x138>
    7670:	ldrb	r0, [r7, #1]
    7674:	cmp	r0, #0
    7678:	bne	7690 <little2_scanCharRef+0x58>
    767c:	ldrb	ip, [r7]
    7680:	cmp	ip, #120	; 0x78
    7684:	moveq	r0, #1
    7688:	movne	r0, #0
    768c:	b	7694 <little2_scanCharRef+0x5c>
    7690:	mov	r0, #0
    7694:	cmp	r0, #0
    7698:	beq	76b4 <little2_scanCharRef+0x7c>
    769c:	add	r1, r7, #2
    76a0:	mov	r3, r4
    76a4:	mov	r2, r5
    76a8:	mov	r0, r6
    76ac:	bl	7514 <little2_scanHexCharRef>
    76b0:	b	7774 <little2_scanCharRef+0x13c>
    76b4:	ldrb	r3, [r7, #1]
    76b8:	cmp	r3, #0
    76bc:	beq	76d8 <little2_scanCharRef+0xa0>
    76c0:	ldrb	ip, [r7, #1]
    76c4:	and	r0, ip, #255	; 0xff
    76c8:	ldrb	ip, [r7]
    76cc:	and	r1, ip, #255	; 0xff
    76d0:	bl	5988 <unicode_byte_type>
    76d4:	b	76e8 <little2_scanCharRef+0xb0>
    76d8:	ldrb	r2, [r7]
    76dc:	and	r3, r2, #255	; 0xff
    76e0:	add	r0, r6, r3
    76e4:	ldrb	r0, [r0, #76]	; 0x4c
    76e8:	cmp	r0, #25
    76ec:	beq	76fc <little2_scanCharRef+0xc4>
    76f0:	str	r7, [r4]
    76f4:	mov	r0, #0
    76f8:	b	7774 <little2_scanCharRef+0x13c>
    76fc:	add	r7, r7, #2
    7700:	cmp	r7, r5
    7704:	beq	7770 <little2_scanCharRef+0x138>
    7708:	ldrb	r1, [r7, #1]
    770c:	cmp	r1, #0
    7710:	beq	772c <little2_scanCharRef+0xf4>
    7714:	ldrb	r0, [r7, #1]
    7718:	and	r0, r0, #255	; 0xff
    771c:	ldrb	r1, [r7]
    7720:	and	r1, r1, #255	; 0xff
    7724:	bl	5988 <unicode_byte_type>
    7728:	b	773c <little2_scanCharRef+0x104>
    772c:	ldrb	r2, [r7]
    7730:	and	r2, r2, #255	; 0xff
    7734:	add	r2, r6, r2
    7738:	ldrb	r0, [r2, #76]	; 0x4c
    773c:	cmp	r0, #18
    7740:	beq	7760 <little2_scanCharRef+0x128>
    7744:	cmp	r0, #25
    7748:	beq	7758 <little2_scanCharRef+0x120>
    774c:	str	r7, [r4]
    7750:	mov	r0, #0
    7754:	b	7774 <little2_scanCharRef+0x13c>
    7758:	add	r7, r7, #2
    775c:	b	7700 <little2_scanCharRef+0xc8>
    7760:	add	r1, r7, #2
    7764:	str	r1, [r4]
    7768:	mov	r0, #10
    776c:	b	7774 <little2_scanCharRef+0x13c>
    7770:	mvn	r0, #0
    7774:	ldr	r4, [sp, #8]
    7778:	ldr	r5, [sp, #12]
    777c:	ldr	r6, [sp, #16]
    7780:	ldr	r7, [sp, #20]
    7784:	ldr	lr, [sp, #4]
    7788:	add	sp, sp, #24
    778c:	bx	lr

00007790 <little2_scanRef>:
    7790:	mov	ip, sp
    7794:	sub	sp, sp, #32
    7798:	str	ip, [sp]
    779c:	str	lr, [sp, #4]
    77a0:	str	r4, [sp, #8]
    77a4:	str	r5, [sp, #12]
    77a8:	str	r6, [sp, #16]
    77ac:	str	r7, [sp, #20]
    77b0:	str	r8, [sp, #24]
    77b4:	mov	r4, r3
    77b8:	mov	r5, r2
    77bc:	mov	r6, r1
    77c0:	mov	r7, r0
    77c4:	cmp	r6, r5
    77c8:	bne	77d4 <little2_scanRef+0x44>
    77cc:	mvn	r0, #0
    77d0:	b	7b30 <little2_scanRef+0x3a0>
    77d4:	ldrb	r2, [r6, #1]
    77d8:	cmp	r2, #0
    77dc:	beq	77f8 <little2_scanRef+0x68>
    77e0:	ldrb	r3, [r6, #1]
    77e4:	and	r0, r3, #255	; 0xff
    77e8:	ldrb	r3, [r6]
    77ec:	and	r1, r3, #255	; 0xff
    77f0:	bl	5988 <unicode_byte_type>
    77f4:	b	7808 <little2_scanRef+0x78>
    77f8:	ldrb	r1, [r6]
    77fc:	and	r3, r1, #255	; 0xff
    7800:	add	ip, r7, r3
    7804:	ldrb	r0, [ip, #76]	; 0x4c
    7808:	cmp	r0, #19
    780c:	bcs	78c4 <little2_scanRef+0x134>
    7810:	cmp	r0, #5
    7814:	beq	7890 <little2_scanRef+0x100>
    7818:	cmp	r0, #6
    781c:	beq	785c <little2_scanRef+0xcc>
    7820:	cmp	r0, #7
    7824:	bne	7958 <little2_scanRef+0x1c8>
    7828:	sub	r2, r5, r6
    782c:	cmp	r2, #4
    7830:	bge	783c <little2_scanRef+0xac>
    7834:	mvn	r0, #1
    7838:	b	7b30 <little2_scanRef+0x3a0>
    783c:	mov	ip, #1
    7840:	cmp	ip, #0
    7844:	beq	7854 <little2_scanRef+0xc4>
    7848:	str	r6, [r4]
    784c:	mov	r0, #0
    7850:	b	7b30 <little2_scanRef+0x3a0>
    7854:	add	r6, r6, #4
    7858:	b	7968 <little2_scanRef+0x1d8>
    785c:	sub	r2, r5, r6
    7860:	cmp	r2, #3
    7864:	bge	7870 <little2_scanRef+0xe0>
    7868:	mvn	r0, #1
    786c:	b	7b30 <little2_scanRef+0x3a0>
    7870:	mov	r2, #1
    7874:	cmp	r2, #0
    7878:	beq	7888 <little2_scanRef+0xf8>
    787c:	str	r6, [r4]
    7880:	mov	r0, #0
    7884:	b	7b30 <little2_scanRef+0x3a0>
    7888:	add	r6, r6, #3
    788c:	b	7968 <little2_scanRef+0x1d8>
    7890:	sub	ip, r5, r6
    7894:	cmp	ip, #2
    7898:	bge	78a4 <little2_scanRef+0x114>
    789c:	mvn	r0, #1
    78a0:	b	7b30 <little2_scanRef+0x3a0>
    78a4:	mov	r0, #1
    78a8:	cmp	r0, #0
    78ac:	beq	78bc <little2_scanRef+0x12c>
    78b0:	str	r6, [r4]
    78b4:	mov	r0, #0
    78b8:	b	7b30 <little2_scanRef+0x3a0>
    78bc:	add	r6, r6, #2
    78c0:	b	7968 <little2_scanRef+0x1d8>
    78c4:	cmp	r0, #24
    78c8:	bcs	78f8 <little2_scanRef+0x168>
    78cc:	cmp	r0, #19
    78d0:	beq	78e0 <little2_scanRef+0x150>
    78d4:	cmp	r0, #22
    78d8:	beq	7964 <little2_scanRef+0x1d4>
    78dc:	b	7958 <little2_scanRef+0x1c8>
    78e0:	add	r1, r6, #2
    78e4:	mov	r3, r4
    78e8:	mov	r2, r5
    78ec:	mov	r0, r7
    78f0:	bl	7638 <little2_scanCharRef>
    78f4:	b	7b30 <little2_scanRef+0x3a0>
    78f8:	cmp	r0, #24
    78fc:	beq	7964 <little2_scanRef+0x1d4>
    7900:	cmp	r0, #29
    7904:	bne	7958 <little2_scanRef+0x1c8>
    7908:	ldr	r1, [pc, #576]	; 7b50 <little2_scanRef+0x3c0>
    790c:	ldrb	r2, [r6]
    7910:	and	r2, r2, #255	; 0xff
    7914:	asr	r2, r2, #5
    7918:	ldr	r3, [pc, #564]	; 7b54 <little2_scanRef+0x3c4>
    791c:	ldrb	ip, [r6, #1]
    7920:	and	ip, ip, #255	; 0xff
    7924:	ldrb	r3, [r3, ip]
    7928:	add	r0, r2, r3, lsl #3
    792c:	ldr	r1, [r1, r0, lsl #2]
    7930:	mov	r0, #1
    7934:	ldrb	r2, [r6]
    7938:	and	r2, r2, #31
    793c:	lsl	r0, r0, r2
    7940:	and	ip, r1, r0
    7944:	cmp	ip, #0
    7948:	bne	7964 <little2_scanRef+0x1d4>
    794c:	str	r6, [r4]
    7950:	mov	r0, #0
    7954:	b	7b30 <little2_scanRef+0x3a0>
    7958:	str	r6, [r4]
    795c:	mov	r0, #0
    7960:	b	7b30 <little2_scanRef+0x3a0>
    7964:	add	r6, r6, #2
    7968:	cmp	r6, r5
    796c:	beq	7b2c <little2_scanRef+0x39c>
    7970:	ldrb	r3, [r6, #1]
    7974:	cmp	r3, #0
    7978:	beq	7994 <little2_scanRef+0x204>
    797c:	ldrb	r2, [r6, #1]
    7980:	and	r0, r2, #255	; 0xff
    7984:	ldrb	r3, [r6]
    7988:	and	r1, r3, #255	; 0xff
    798c:	bl	5988 <unicode_byte_type>
    7990:	b	79a4 <little2_scanRef+0x214>
    7994:	ldrb	r0, [r6]
    7998:	and	ip, r0, #255	; 0xff
    799c:	add	r2, r7, ip
    79a0:	ldrb	r0, [r2, #76]	; 0x4c
    79a4:	sub	r2, r0, #5
    79a8:	cmp	r2, #25
    79ac:	bcs	7b20 <little2_scanRef+0x390>
    79b0:	add	pc, pc, r2, lsl #2
    79b4:	nop	{0}
    79b8:	b	7a74 <little2_scanRef+0x2e4>
    79bc:	b	7aa8 <little2_scanRef+0x318>
    79c0:	b	7adc <little2_scanRef+0x34c>
    79c4:	b	7b20 <little2_scanRef+0x390>
    79c8:	b	7b20 <little2_scanRef+0x390>
    79cc:	b	7b20 <little2_scanRef+0x390>
    79d0:	b	7b20 <little2_scanRef+0x390>
    79d4:	b	7b20 <little2_scanRef+0x390>
    79d8:	b	7b20 <little2_scanRef+0x390>
    79dc:	b	7b20 <little2_scanRef+0x390>
    79e0:	b	7b20 <little2_scanRef+0x390>
    79e4:	b	7b20 <little2_scanRef+0x390>
    79e8:	b	7b20 <little2_scanRef+0x390>
    79ec:	b	7b10 <little2_scanRef+0x380>
    79f0:	b	7b20 <little2_scanRef+0x390>
    79f4:	b	7b20 <little2_scanRef+0x390>
    79f8:	b	7b20 <little2_scanRef+0x390>
    79fc:	b	7a6c <little2_scanRef+0x2dc>
    7a00:	b	7b20 <little2_scanRef+0x390>
    7a04:	b	7a6c <little2_scanRef+0x2dc>
    7a08:	b	7a6c <little2_scanRef+0x2dc>
    7a0c:	b	7a6c <little2_scanRef+0x2dc>
    7a10:	b	7a6c <little2_scanRef+0x2dc>
    7a14:	b	7b20 <little2_scanRef+0x390>
    7a18:	b	7a1c <little2_scanRef+0x28c>
    7a1c:	ldr	r8, [pc, #300]	; 7b50 <little2_scanRef+0x3c0>
    7a20:	ldrb	r2, [r6]
    7a24:	and	ip, r2, #255	; 0xff
    7a28:	asr	r2, ip, #5
    7a2c:	ldr	r1, [pc, #292]	; 7b58 <little2_scanRef+0x3c8>
    7a30:	ldrb	r0, [r6, #1]
    7a34:	and	r3, r0, #255	; 0xff
    7a38:	ldrb	ip, [r1, r3]
    7a3c:	add	r0, r2, ip, lsl #3
    7a40:	ldr	r0, [r8, r0, lsl #2]
    7a44:	mov	r3, #1
    7a48:	ldrb	ip, [r6]
    7a4c:	and	r1, ip, #31
    7a50:	lsl	ip, r3, r1
    7a54:	and	r1, r0, ip
    7a58:	cmp	r1, #0
    7a5c:	bne	7a6c <little2_scanRef+0x2dc>
    7a60:	str	r6, [r4]
    7a64:	mov	r0, #0
    7a68:	b	7b30 <little2_scanRef+0x3a0>
    7a6c:	add	r6, r6, #2
    7a70:	b	7968 <little2_scanRef+0x1d8>
    7a74:	sub	r2, r5, r6
    7a78:	cmp	r2, #2
    7a7c:	bge	7a88 <little2_scanRef+0x2f8>
    7a80:	mvn	r0, #1
    7a84:	b	7b30 <little2_scanRef+0x3a0>
    7a88:	mov	r0, #1
    7a8c:	cmp	r0, #0
    7a90:	beq	7aa0 <little2_scanRef+0x310>
    7a94:	str	r6, [r4]
    7a98:	mov	r0, #0
    7a9c:	b	7b30 <little2_scanRef+0x3a0>
    7aa0:	add	r6, r6, #2
    7aa4:	b	7968 <little2_scanRef+0x1d8>
    7aa8:	sub	r1, r5, r6
    7aac:	cmp	r1, #3
    7ab0:	bge	7abc <little2_scanRef+0x32c>
    7ab4:	mvn	r0, #1
    7ab8:	b	7b30 <little2_scanRef+0x3a0>
    7abc:	mov	r3, #1
    7ac0:	cmp	r3, #0
    7ac4:	beq	7ad4 <little2_scanRef+0x344>
    7ac8:	str	r6, [r4]
    7acc:	mov	r0, #0
    7ad0:	b	7b30 <little2_scanRef+0x3a0>
    7ad4:	add	r6, r6, #3
    7ad8:	b	7968 <little2_scanRef+0x1d8>
    7adc:	sub	r1, r5, r6
    7ae0:	cmp	r1, #4
    7ae4:	bge	7af0 <little2_scanRef+0x360>
    7ae8:	mvn	r0, #1
    7aec:	b	7b30 <little2_scanRef+0x3a0>
    7af0:	mov	r0, #1
    7af4:	cmp	r0, #0
    7af8:	beq	7b08 <little2_scanRef+0x378>
    7afc:	str	r6, [r4]
    7b00:	mov	r0, #0
    7b04:	b	7b30 <little2_scanRef+0x3a0>
    7b08:	add	r6, r6, #4
    7b0c:	b	7968 <little2_scanRef+0x1d8>
    7b10:	add	r1, r6, #2
    7b14:	str	r1, [r4]
    7b18:	mov	r0, #9
    7b1c:	b	7b30 <little2_scanRef+0x3a0>
    7b20:	str	r6, [r4]
    7b24:	mov	r0, #0
    7b28:	b	7b30 <little2_scanRef+0x3a0>
    7b2c:	mvn	r0, #0
    7b30:	ldr	r4, [sp, #8]
    7b34:	ldr	r5, [sp, #12]
    7b38:	ldr	r6, [sp, #16]
    7b3c:	ldr	r7, [sp, #20]
    7b40:	ldr	r8, [sp, #24]
    7b44:	ldr	lr, [sp, #4]
    7b48:	add	sp, sp, #32
    7b4c:	bx	lr
    7b50:	.word	0x00000000
    7b54:	.word	0x00000500
    7b58:	.word	0x00000600

00007b5c <little2_scanAtts>:
    7b5c:	mov	ip, sp
    7b60:	sub	sp, sp, #40	; 0x28
    7b64:	str	ip, [sp]
    7b68:	str	lr, [sp, #4]
    7b6c:	str	r4, [sp, #8]
    7b70:	str	r5, [sp, #12]
    7b74:	str	r6, [sp, #16]
    7b78:	str	r7, [sp, #20]
    7b7c:	str	r8, [sp, #24]
    7b80:	mov	r5, r3
    7b84:	mov	r4, r2
    7b88:	mov	r6, r0
    7b8c:	str	r1, [sp, #32]
    7b90:	mov	r7, #0
    7b94:	ldr	r1, [sp, #32]
    7b98:	cmp	r1, r4
    7b9c:	beq	8624 <little2_scanAtts+0xac8>
    7ba0:	ldr	r2, [sp, #32]
    7ba4:	ldrb	ip, [r2, #1]
    7ba8:	cmp	ip, #0
    7bac:	beq	7bd0 <little2_scanAtts+0x74>
    7bb0:	ldr	ip, [sp, #32]
    7bb4:	ldrb	r1, [ip, #1]
    7bb8:	and	r0, r1, #255	; 0xff
    7bbc:	ldr	r3, [sp, #32]
    7bc0:	ldrb	r1, [r3]
    7bc4:	and	r1, r1, #255	; 0xff
    7bc8:	bl	5988 <unicode_byte_type>
    7bcc:	b	7be4 <little2_scanAtts+0x88>
    7bd0:	ldr	r0, [sp, #32]
    7bd4:	ldrb	r0, [r0]
    7bd8:	and	r3, r0, #255	; 0xff
    7bdc:	add	r3, r6, r3
    7be0:	ldrb	r0, [r3, #76]	; 0x4c
    7be4:	sub	r2, r0, #5
    7be8:	cmp	r2, #25
    7bec:	bcs	8614 <little2_scanAtts+0xab8>
    7bf0:	add	pc, pc, r2, lsl #2
    7bf4:	nop	{0}
    7bf8:	b	7ccc <little2_scanAtts+0x170>
    7bfc:	b	7d10 <little2_scanAtts+0x1b4>
    7c00:	b	7d54 <little2_scanAtts+0x1f8>
    7c04:	b	8614 <little2_scanAtts+0xab8>
    7c08:	b	7f9c <little2_scanAtts+0x440>
    7c0c:	b	7f9c <little2_scanAtts+0x440>
    7c10:	b	8614 <little2_scanAtts+0xab8>
    7c14:	b	8614 <little2_scanAtts+0xab8>
    7c18:	b	8614 <little2_scanAtts+0xab8>
    7c1c:	b	8030 <little2_scanAtts+0x4d4>
    7c20:	b	8614 <little2_scanAtts+0xab8>
    7c24:	b	8614 <little2_scanAtts+0xab8>
    7c28:	b	8614 <little2_scanAtts+0xab8>
    7c2c:	b	8614 <little2_scanAtts+0xab8>
    7c30:	b	8614 <little2_scanAtts+0xab8>
    7c34:	b	8614 <little2_scanAtts+0xab8>
    7c38:	b	7f9c <little2_scanAtts+0x440>
    7c3c:	b	7cbc <little2_scanAtts+0x160>
    7c40:	b	7d98 <little2_scanAtts+0x23c>
    7c44:	b	7cbc <little2_scanAtts+0x160>
    7c48:	b	7cbc <little2_scanAtts+0x160>
    7c4c:	b	7cbc <little2_scanAtts+0x160>
    7c50:	b	7cbc <little2_scanAtts+0x160>
    7c54:	b	8614 <little2_scanAtts+0xab8>
    7c58:	b	7c5c <little2_scanAtts+0x100>
    7c5c:	ldr	r8, [pc, #2532]	; 8648 <little2_scanAtts+0xaec>
    7c60:	ldr	r2, [sp, #32]
    7c64:	ldrb	ip, [r2]
    7c68:	and	r0, ip, #255	; 0xff
    7c6c:	asr	ip, r0, #5
    7c70:	ldr	r2, [pc, #2520]	; 8650 <little2_scanAtts+0xaf4>
    7c74:	ldr	r1, [sp, #32]
    7c78:	ldrb	r1, [r1, #1]
    7c7c:	and	r1, r1, #255	; 0xff
    7c80:	ldrb	r3, [r2, r1]
    7c84:	add	ip, ip, r3, lsl #3
    7c88:	ldr	r2, [r8, ip, lsl #2]
    7c8c:	mov	r0, #1
    7c90:	ldr	r1, [sp, #32]
    7c94:	ldrb	r1, [r1]
    7c98:	and	ip, r1, #31
    7c9c:	lsl	r3, r0, ip
    7ca0:	and	r1, r2, r3
    7ca4:	cmp	r1, #0
    7ca8:	bne	7cbc <little2_scanAtts+0x160>
    7cac:	ldr	r3, [sp, #32]
    7cb0:	str	r3, [r5]
    7cb4:	mov	r0, #0
    7cb8:	b	8628 <little2_scanAtts+0xacc>
    7cbc:	ldr	r1, [sp, #32]
    7cc0:	add	r3, r1, #2
    7cc4:	str	r3, [sp, #32]
    7cc8:	b	7b94 <little2_scanAtts+0x38>
    7ccc:	ldr	ip, [sp, #32]
    7cd0:	sub	r1, r4, ip
    7cd4:	cmp	r1, #2
    7cd8:	bge	7ce4 <little2_scanAtts+0x188>
    7cdc:	mvn	r0, #1
    7ce0:	b	8628 <little2_scanAtts+0xacc>
    7ce4:	mov	r0, #1
    7ce8:	cmp	r0, #0
    7cec:	beq	7d00 <little2_scanAtts+0x1a4>
    7cf0:	ldr	r3, [sp, #32]
    7cf4:	str	r3, [r5]
    7cf8:	mov	r0, #0
    7cfc:	b	8628 <little2_scanAtts+0xacc>
    7d00:	ldr	ip, [sp, #32]
    7d04:	add	r1, ip, #2
    7d08:	str	r1, [sp, #32]
    7d0c:	b	7b94 <little2_scanAtts+0x38>
    7d10:	ldr	r1, [sp, #32]
    7d14:	sub	ip, r4, r1
    7d18:	cmp	ip, #3
    7d1c:	bge	7d28 <little2_scanAtts+0x1cc>
    7d20:	mvn	r0, #1
    7d24:	b	8628 <little2_scanAtts+0xacc>
    7d28:	mov	r0, #1
    7d2c:	cmp	r0, #0
    7d30:	beq	7d44 <little2_scanAtts+0x1e8>
    7d34:	ldr	ip, [sp, #32]
    7d38:	str	ip, [r5]
    7d3c:	mov	r0, #0
    7d40:	b	8628 <little2_scanAtts+0xacc>
    7d44:	ldr	r0, [sp, #32]
    7d48:	add	r0, r0, #3
    7d4c:	str	r0, [sp, #32]
    7d50:	b	7b94 <little2_scanAtts+0x38>
    7d54:	ldr	r3, [sp, #32]
    7d58:	sub	r0, r4, r3
    7d5c:	cmp	r0, #4
    7d60:	bge	7d6c <little2_scanAtts+0x210>
    7d64:	mvn	r0, #1
    7d68:	b	8628 <little2_scanAtts+0xacc>
    7d6c:	mov	ip, #1
    7d70:	cmp	ip, #0
    7d74:	beq	7d88 <little2_scanAtts+0x22c>
    7d78:	ldr	r3, [sp, #32]
    7d7c:	str	r3, [r5]
    7d80:	mov	r0, #0
    7d84:	b	8628 <little2_scanAtts+0xacc>
    7d88:	ldr	ip, [sp, #32]
    7d8c:	add	r1, ip, #4
    7d90:	str	r1, [sp, #32]
    7d94:	b	7b94 <little2_scanAtts+0x38>
    7d98:	cmp	r7, #0
    7d9c:	beq	7db0 <little2_scanAtts+0x254>
    7da0:	ldr	r1, [sp, #32]
    7da4:	str	r1, [r5]
    7da8:	mov	r0, #0
    7dac:	b	8628 <little2_scanAtts+0xacc>
    7db0:	mov	r7, #1
    7db4:	ldr	ip, [sp, #32]
    7db8:	add	r3, ip, #2
    7dbc:	str	r3, [sp, #32]
    7dc0:	ldr	ip, [sp, #32]
    7dc4:	cmp	ip, r4
    7dc8:	bne	7dd4 <little2_scanAtts+0x278>
    7dcc:	mvn	r0, #0
    7dd0:	b	8628 <little2_scanAtts+0xacc>
    7dd4:	ldr	r1, [sp, #32]
    7dd8:	ldrb	ip, [r1, #1]
    7ddc:	cmp	ip, #0
    7de0:	beq	7e04 <little2_scanAtts+0x2a8>
    7de4:	ldr	r1, [sp, #32]
    7de8:	ldrb	ip, [r1, #1]
    7dec:	and	r0, ip, #255	; 0xff
    7df0:	ldr	r2, [sp, #32]
    7df4:	ldrb	r1, [r2]
    7df8:	and	r1, r1, #255	; 0xff
    7dfc:	bl	5988 <unicode_byte_type>
    7e00:	b	7e18 <little2_scanAtts+0x2bc>
    7e04:	ldr	r2, [sp, #32]
    7e08:	ldrb	r2, [r2]
    7e0c:	and	r1, r2, #255	; 0xff
    7e10:	add	r0, r6, r1
    7e14:	ldrb	r0, [r0, #76]	; 0x4c
    7e18:	cmp	r0, #22
    7e1c:	bcs	7f04 <little2_scanAtts+0x3a8>
    7e20:	cmp	r0, #5
    7e24:	beq	7ec0 <little2_scanAtts+0x364>
    7e28:	cmp	r0, #6
    7e2c:	beq	7e7c <little2_scanAtts+0x320>
    7e30:	cmp	r0, #7
    7e34:	bne	7f7c <little2_scanAtts+0x420>
    7e38:	ldr	r1, [sp, #32]
    7e3c:	sub	ip, r4, r1
    7e40:	cmp	ip, #4
    7e44:	bge	7e50 <little2_scanAtts+0x2f4>
    7e48:	mvn	r0, #1
    7e4c:	b	8628 <little2_scanAtts+0xacc>
    7e50:	mov	ip, #1
    7e54:	cmp	ip, #0
    7e58:	beq	7e6c <little2_scanAtts+0x310>
    7e5c:	ldr	r1, [sp, #32]
    7e60:	str	r1, [r5]
    7e64:	mov	r0, #0
    7e68:	b	8628 <little2_scanAtts+0xacc>
    7e6c:	ldr	r1, [sp, #32]
    7e70:	add	r3, r1, #4
    7e74:	str	r3, [sp, #32]
    7e78:	b	7b94 <little2_scanAtts+0x38>
    7e7c:	ldr	r2, [sp, #32]
    7e80:	sub	r1, r4, r2
    7e84:	cmp	r1, #3
    7e88:	bge	7e94 <little2_scanAtts+0x338>
    7e8c:	mvn	r0, #1
    7e90:	b	8628 <little2_scanAtts+0xacc>
    7e94:	mov	r2, #1
    7e98:	cmp	r2, #0
    7e9c:	beq	7eb0 <little2_scanAtts+0x354>
    7ea0:	ldr	r2, [sp, #32]
    7ea4:	str	r2, [r5]
    7ea8:	mov	r0, #0
    7eac:	b	8628 <little2_scanAtts+0xacc>
    7eb0:	ldr	r1, [sp, #32]
    7eb4:	add	r2, r1, #3
    7eb8:	str	r2, [sp, #32]
    7ebc:	b	7b94 <little2_scanAtts+0x38>
    7ec0:	ldr	r3, [sp, #32]
    7ec4:	sub	ip, r4, r3
    7ec8:	cmp	ip, #2
    7ecc:	bge	7ed8 <little2_scanAtts+0x37c>
    7ed0:	mvn	r0, #1
    7ed4:	b	8628 <little2_scanAtts+0xacc>
    7ed8:	mov	r1, #1
    7edc:	cmp	r1, #0
    7ee0:	beq	7ef4 <little2_scanAtts+0x398>
    7ee4:	ldr	r0, [sp, #32]
    7ee8:	str	r0, [r5]
    7eec:	mov	r0, #0
    7ef0:	b	8628 <little2_scanAtts+0xacc>
    7ef4:	ldr	r1, [sp, #32]
    7ef8:	add	r3, r1, #2
    7efc:	str	r3, [sp, #32]
    7f00:	b	7b94 <little2_scanAtts+0x38>
    7f04:	cmp	r0, #22
    7f08:	beq	7f8c <little2_scanAtts+0x430>
    7f0c:	cmp	r0, #24
    7f10:	beq	7f8c <little2_scanAtts+0x430>
    7f14:	cmp	r0, #29
    7f18:	bne	7f7c <little2_scanAtts+0x420>
    7f1c:	ldr	r1, [pc, #1828]	; 8648 <little2_scanAtts+0xaec>
    7f20:	ldr	r0, [sp, #32]
    7f24:	ldrb	ip, [r0]
    7f28:	and	ip, ip, #255	; 0xff
    7f2c:	asr	ip, ip, #5
    7f30:	ldr	r3, [pc, #1812]	; 864c <little2_scanAtts+0xaf0>
    7f34:	ldr	r0, [sp, #32]
    7f38:	ldrb	r2, [r0, #1]
    7f3c:	and	r0, r2, #255	; 0xff
    7f40:	ldrb	r3, [r3, r0]
    7f44:	add	r3, ip, r3, lsl #3
    7f48:	ldr	ip, [r1, r3, lsl #2]
    7f4c:	mov	r2, #1
    7f50:	ldr	r1, [sp, #32]
    7f54:	ldrb	r0, [r1]
    7f58:	and	r3, r0, #31
    7f5c:	lsl	r0, r2, r3
    7f60:	and	r2, ip, r0
    7f64:	cmp	r2, #0
    7f68:	bne	7f8c <little2_scanAtts+0x430>
    7f6c:	ldr	r1, [sp, #32]
    7f70:	str	r1, [r5]
    7f74:	mov	r0, #0
    7f78:	b	8628 <little2_scanAtts+0xacc>
    7f7c:	ldr	r1, [sp, #32]
    7f80:	str	r1, [r5]
    7f84:	mov	r0, #0
    7f88:	b	8628 <little2_scanAtts+0xacc>
    7f8c:	ldr	ip, [sp, #32]
    7f90:	add	r1, ip, #2
    7f94:	str	r1, [sp, #32]
    7f98:	b	7b94 <little2_scanAtts+0x38>
    7f9c:	ldr	r2, [sp, #32]
    7fa0:	add	r2, r2, #2
    7fa4:	str	r2, [sp, #32]
    7fa8:	ldr	r1, [sp, #32]
    7fac:	cmp	r1, r4
    7fb0:	bne	7fbc <little2_scanAtts+0x460>
    7fb4:	mvn	r0, #0
    7fb8:	b	8628 <little2_scanAtts+0xacc>
    7fbc:	ldr	r2, [sp, #32]
    7fc0:	ldrb	ip, [r2, #1]
    7fc4:	cmp	ip, #0
    7fc8:	beq	7fec <little2_scanAtts+0x490>
    7fcc:	ldr	r2, [sp, #32]
    7fd0:	ldrb	ip, [r2, #1]
    7fd4:	and	r0, ip, #255	; 0xff
    7fd8:	ldr	r2, [sp, #32]
    7fdc:	ldrb	ip, [r2]
    7fe0:	and	r1, ip, #255	; 0xff
    7fe4:	bl	5988 <unicode_byte_type>
    7fe8:	b	8000 <little2_scanAtts+0x4a4>
    7fec:	ldr	r0, [sp, #32]
    7ff0:	ldrb	r2, [r0]
    7ff4:	and	r0, r2, #255	; 0xff
    7ff8:	add	r3, r6, r0
    7ffc:	ldrb	r0, [r3, #76]	; 0x4c
    8000:	cmp	r0, #14
    8004:	beq	8030 <little2_scanAtts+0x4d4>
    8008:	cmp	r0, #9
    800c:	beq	7f9c <little2_scanAtts+0x440>
    8010:	cmp	r0, #10
    8014:	beq	7f9c <little2_scanAtts+0x440>
    8018:	cmp	r0, #21
    801c:	beq	7f9c <little2_scanAtts+0x440>
    8020:	ldr	r2, [sp, #32]
    8024:	str	r2, [r5]
    8028:	mov	r0, #0
    802c:	b	8628 <little2_scanAtts+0xacc>
    8030:	mov	r7, #0
    8034:	ldr	r2, [sp, #32]
    8038:	add	r3, r2, #2
    803c:	str	r3, [sp, #32]
    8040:	ldr	r3, [sp, #32]
    8044:	cmp	r3, r4
    8048:	bne	8054 <little2_scanAtts+0x4f8>
    804c:	mvn	r0, #0
    8050:	b	8628 <little2_scanAtts+0xacc>
    8054:	ldr	ip, [sp, #32]
    8058:	ldrb	r3, [ip, #1]
    805c:	cmp	r3, #0
    8060:	beq	8088 <little2_scanAtts+0x52c>
    8064:	ldr	r2, [sp, #32]
    8068:	ldrb	r2, [r2, #1]
    806c:	and	r0, r2, #255	; 0xff
    8070:	ldr	r1, [sp, #32]
    8074:	ldrb	ip, [r1]
    8078:	and	r1, ip, #255	; 0xff
    807c:	bl	5988 <unicode_byte_type>
    8080:	mov	r8, r0
    8084:	b	809c <little2_scanAtts+0x540>
    8088:	ldr	r0, [sp, #32]
    808c:	ldrb	ip, [r0]
    8090:	and	ip, ip, #255	; 0xff
    8094:	add	r2, r6, ip
    8098:	ldrb	r8, [r2, #76]	; 0x4c
    809c:	cmp	r8, #12
    80a0:	beq	80b4 <little2_scanAtts+0x558>
    80a4:	cmp	r8, #13
    80a8:	moveq	r0, #1
    80ac:	movne	r0, #0
    80b0:	b	80b8 <little2_scanAtts+0x55c>
    80b4:	mov	r0, #1
    80b8:	cmp	r0, #0
    80bc:	bne	80e8 <little2_scanAtts+0x58c>
    80c0:	cmp	r8, #9
    80c4:	beq	8034 <little2_scanAtts+0x4d8>
    80c8:	cmp	r8, #10
    80cc:	beq	8034 <little2_scanAtts+0x4d8>
    80d0:	cmp	r8, #21
    80d4:	beq	8034 <little2_scanAtts+0x4d8>
    80d8:	ldr	r0, [sp, #32]
    80dc:	str	r0, [r5]
    80e0:	mov	r0, #0
    80e4:	b	8628 <little2_scanAtts+0xacc>
    80e8:	ldr	r3, [sp, #32]
    80ec:	add	r1, r3, #2
    80f0:	str	r1, [sp, #32]
    80f4:	ldr	r3, [sp, #32]
    80f8:	cmp	r3, r4
    80fc:	bne	8108 <little2_scanAtts+0x5ac>
    8100:	mvn	r0, #0
    8104:	b	8628 <little2_scanAtts+0xacc>
    8108:	ldr	r0, [sp, #32]
    810c:	ldrb	r0, [r0, #1]
    8110:	cmp	r0, #0
    8114:	beq	8138 <little2_scanAtts+0x5dc>
    8118:	ldr	ip, [sp, #32]
    811c:	ldrb	ip, [ip, #1]
    8120:	and	r0, ip, #255	; 0xff
    8124:	ldr	r3, [sp, #32]
    8128:	ldrb	r1, [r3]
    812c:	and	r1, r1, #255	; 0xff
    8130:	bl	5988 <unicode_byte_type>
    8134:	b	814c <little2_scanAtts+0x5f0>
    8138:	ldr	r3, [sp, #32]
    813c:	ldrb	r0, [r3]
    8140:	and	ip, r0, #255	; 0xff
    8144:	add	r2, r6, ip
    8148:	ldrb	r0, [r2, #76]	; 0x4c
    814c:	cmp	r0, r8
    8150:	beq	82b8 <little2_scanAtts+0x75c>
    8154:	cmp	r0, #9
    8158:	bcs	82a8 <little2_scanAtts+0x74c>
    815c:	add	pc, pc, r0, lsl #2
    8160:	nop	{0}
    8164:	b	8254 <little2_scanAtts+0x6f8>
    8168:	b	8254 <little2_scanAtts+0x6f8>
    816c:	b	8298 <little2_scanAtts+0x73c>
    8170:	b	8264 <little2_scanAtts+0x708>
    8174:	b	82a8 <little2_scanAtts+0x74c>
    8178:	b	8188 <little2_scanAtts+0x62c>
    817c:	b	81cc <little2_scanAtts+0x670>
    8180:	b	8210 <little2_scanAtts+0x6b4>
    8184:	b	8254 <little2_scanAtts+0x6f8>
    8188:	ldr	ip, [sp, #32]
    818c:	sub	r2, r4, ip
    8190:	cmp	r2, #2
    8194:	bge	81a0 <little2_scanAtts+0x644>
    8198:	mvn	r0, #1
    819c:	b	8628 <little2_scanAtts+0xacc>
    81a0:	mov	r1, #0
    81a4:	cmp	r1, #0
    81a8:	beq	81bc <little2_scanAtts+0x660>
    81ac:	ldr	r0, [sp, #32]
    81b0:	str	r0, [r5]
    81b4:	mov	r0, #0
    81b8:	b	8628 <little2_scanAtts+0xacc>
    81bc:	ldr	ip, [sp, #32]
    81c0:	add	r1, ip, #2
    81c4:	str	r1, [sp, #32]
    81c8:	b	80f4 <little2_scanAtts+0x598>
    81cc:	ldr	r3, [sp, #32]
    81d0:	sub	r3, r4, r3
    81d4:	cmp	r3, #3
    81d8:	bge	81e4 <little2_scanAtts+0x688>
    81dc:	mvn	r0, #1
    81e0:	b	8628 <little2_scanAtts+0xacc>
    81e4:	mov	r0, #0
    81e8:	cmp	r0, #0
    81ec:	beq	8200 <little2_scanAtts+0x6a4>
    81f0:	ldr	r1, [sp, #32]
    81f4:	str	r1, [r5]
    81f8:	mov	r0, #0
    81fc:	b	8628 <little2_scanAtts+0xacc>
    8200:	ldr	r0, [sp, #32]
    8204:	add	r0, r0, #3
    8208:	str	r0, [sp, #32]
    820c:	b	80f4 <little2_scanAtts+0x598>
    8210:	ldr	r1, [sp, #32]
    8214:	sub	ip, r4, r1
    8218:	cmp	ip, #4
    821c:	bge	8228 <little2_scanAtts+0x6cc>
    8220:	mvn	r0, #1
    8224:	b	8628 <little2_scanAtts+0xacc>
    8228:	mov	r3, #0
    822c:	cmp	r3, #0
    8230:	beq	8244 <little2_scanAtts+0x6e8>
    8234:	ldr	r0, [sp, #32]
    8238:	str	r0, [r5]
    823c:	mov	r0, #0
    8240:	b	8628 <little2_scanAtts+0xacc>
    8244:	ldr	r0, [sp, #32]
    8248:	add	r1, r0, #4
    824c:	str	r1, [sp, #32]
    8250:	b	80f4 <little2_scanAtts+0x598>
    8254:	ldr	r2, [sp, #32]
    8258:	str	r2, [r5]
    825c:	mov	r0, #0
    8260:	b	8628 <little2_scanAtts+0xacc>
    8264:	ldr	r1, [sp, #32]
    8268:	add	r1, r1, #2
    826c:	add	r3, sp, #32
    8270:	mov	r2, r4
    8274:	mov	r0, r6
    8278:	bl	7790 <little2_scanRef>
    827c:	cmp	r0, #0
    8280:	bgt	80f4 <little2_scanAtts+0x598>
    8284:	cmp	r0, #0
    8288:	bne	8628 <little2_scanAtts+0xacc>
    828c:	ldr	r2, [sp, #32]
    8290:	str	r2, [r5]
    8294:	b	8628 <little2_scanAtts+0xacc>
    8298:	ldr	r3, [sp, #32]
    829c:	str	r3, [r5]
    82a0:	mov	r0, #0
    82a4:	b	8628 <little2_scanAtts+0xacc>
    82a8:	ldr	r2, [sp, #32]
    82ac:	add	r1, r2, #2
    82b0:	str	r1, [sp, #32]
    82b4:	b	80f4 <little2_scanAtts+0x598>
    82b8:	ldr	r2, [sp, #32]
    82bc:	add	ip, r2, #2
    82c0:	str	ip, [sp, #32]
    82c4:	ldr	r0, [sp, #32]
    82c8:	cmp	r0, r4
    82cc:	bne	82d8 <little2_scanAtts+0x77c>
    82d0:	mvn	r0, #0
    82d4:	b	8628 <little2_scanAtts+0xacc>
    82d8:	ldr	r2, [sp, #32]
    82dc:	ldrb	r3, [r2, #1]
    82e0:	cmp	r3, #0
    82e4:	beq	8308 <little2_scanAtts+0x7ac>
    82e8:	ldr	ip, [sp, #32]
    82ec:	ldrb	ip, [ip, #1]
    82f0:	and	r0, ip, #255	; 0xff
    82f4:	ldr	r2, [sp, #32]
    82f8:	ldrb	ip, [r2]
    82fc:	and	r1, ip, #255	; 0xff
    8300:	bl	5988 <unicode_byte_type>
    8304:	b	831c <little2_scanAtts+0x7c0>
    8308:	ldr	r2, [sp, #32]
    830c:	ldrb	r2, [r2]
    8310:	and	ip, r2, #255	; 0xff
    8314:	add	r0, r6, ip
    8318:	ldrb	r0, [r0, #76]	; 0x4c
    831c:	cmp	r0, #11
    8320:	bcs	8338 <little2_scanAtts+0x7dc>
    8324:	cmp	r0, #9
    8328:	beq	8360 <little2_scanAtts+0x804>
    832c:	cmp	r0, #10
    8330:	beq	8360 <little2_scanAtts+0x804>
    8334:	b	8350 <little2_scanAtts+0x7f4>
    8338:	cmp	r0, #11
    833c:	beq	8600 <little2_scanAtts+0xaa4>
    8340:	cmp	r0, #17
    8344:	beq	8588 <little2_scanAtts+0xa2c>
    8348:	cmp	r0, #21
    834c:	beq	8360 <little2_scanAtts+0x804>
    8350:	ldr	r3, [sp, #32]
    8354:	str	r3, [r5]
    8358:	mov	r0, #0
    835c:	b	8628 <little2_scanAtts+0xacc>
    8360:	ldr	r3, [sp, #32]
    8364:	add	r0, r3, #2
    8368:	str	r0, [sp, #32]
    836c:	ldr	r0, [sp, #32]
    8370:	cmp	r0, r4
    8374:	bne	8380 <little2_scanAtts+0x824>
    8378:	mvn	r0, #0
    837c:	b	8628 <little2_scanAtts+0xacc>
    8380:	ldr	r1, [sp, #32]
    8384:	ldrb	r3, [r1, #1]
    8388:	cmp	r3, #0
    838c:	beq	83b0 <little2_scanAtts+0x854>
    8390:	ldr	r2, [sp, #32]
    8394:	ldrb	ip, [r2, #1]
    8398:	and	r0, ip, #255	; 0xff
    839c:	ldr	r1, [sp, #32]
    83a0:	ldrb	r1, [r1]
    83a4:	and	r1, r1, #255	; 0xff
    83a8:	bl	5988 <unicode_byte_type>
    83ac:	b	83c4 <little2_scanAtts+0x868>
    83b0:	ldr	r0, [sp, #32]
    83b4:	ldrb	r0, [r0]
    83b8:	and	ip, r0, #255	; 0xff
    83bc:	add	r0, r6, ip
    83c0:	ldrb	r0, [r0, #76]	; 0x4c
    83c4:	sub	r3, r0, #5
    83c8:	cmp	r3, #25
    83cc:	bcs	8578 <little2_scanAtts+0xa1c>
    83d0:	add	pc, pc, r3, lsl #2
    83d4:	nop	{0}
    83d8:	b	84ac <little2_scanAtts+0x950>
    83dc:	b	84f0 <little2_scanAtts+0x994>
    83e0:	b	8534 <little2_scanAtts+0x9d8>
    83e4:	b	8578 <little2_scanAtts+0xa1c>
    83e8:	b	8360 <little2_scanAtts+0x804>
    83ec:	b	8360 <little2_scanAtts+0x804>
    83f0:	b	8600 <little2_scanAtts+0xaa4>
    83f4:	b	8578 <little2_scanAtts+0xa1c>
    83f8:	b	8578 <little2_scanAtts+0xa1c>
    83fc:	b	8578 <little2_scanAtts+0xa1c>
    8400:	b	8578 <little2_scanAtts+0xa1c>
    8404:	b	8578 <little2_scanAtts+0xa1c>
    8408:	b	8588 <little2_scanAtts+0xa2c>
    840c:	b	8578 <little2_scanAtts+0xa1c>
    8410:	b	8578 <little2_scanAtts+0xa1c>
    8414:	b	8578 <little2_scanAtts+0xa1c>
    8418:	b	8360 <little2_scanAtts+0x804>
    841c:	b	849c <little2_scanAtts+0x940>
    8420:	b	8578 <little2_scanAtts+0xa1c>
    8424:	b	849c <little2_scanAtts+0x940>
    8428:	b	8578 <little2_scanAtts+0xa1c>
    842c:	b	8578 <little2_scanAtts+0xa1c>
    8430:	b	8578 <little2_scanAtts+0xa1c>
    8434:	b	8578 <little2_scanAtts+0xa1c>
    8438:	b	843c <little2_scanAtts+0x8e0>
    843c:	ldr	r8, [pc, #516]	; 8648 <little2_scanAtts+0xaec>
    8440:	ldr	r0, [sp, #32]
    8444:	ldrb	r1, [r0]
    8448:	and	r0, r1, #255	; 0xff
    844c:	asr	r0, r0, #5
    8450:	ldr	ip, [pc, #500]	; 864c <little2_scanAtts+0xaf0>
    8454:	ldr	r2, [sp, #32]
    8458:	ldrb	r3, [r2, #1]
    845c:	and	r2, r3, #255	; 0xff
    8460:	ldrb	r2, [ip, r2]
    8464:	add	ip, r0, r2, lsl #3
    8468:	ldr	r2, [r8, ip, lsl #2]
    846c:	mov	ip, #1
    8470:	ldr	r1, [sp, #32]
    8474:	ldrb	r0, [r1]
    8478:	and	r0, r0, #31
    847c:	lsl	r0, ip, r0
    8480:	and	r1, r2, r0
    8484:	cmp	r1, #0
    8488:	bne	849c <little2_scanAtts+0x940>
    848c:	ldr	r2, [sp, #32]
    8490:	str	r2, [r5]
    8494:	mov	r0, #0
    8498:	b	8628 <little2_scanAtts+0xacc>
    849c:	ldr	r2, [sp, #32]
    84a0:	add	r2, r2, #2
    84a4:	str	r2, [sp, #32]
    84a8:	b	7b94 <little2_scanAtts+0x38>
    84ac:	ldr	r1, [sp, #32]
    84b0:	sub	r1, r4, r1
    84b4:	cmp	r1, #2
    84b8:	bge	84c4 <little2_scanAtts+0x968>
    84bc:	mvn	r0, #1
    84c0:	b	8628 <little2_scanAtts+0xacc>
    84c4:	mov	r3, #1
    84c8:	cmp	r3, #0
    84cc:	beq	84e0 <little2_scanAtts+0x984>
    84d0:	ldr	r0, [sp, #32]
    84d4:	str	r0, [r5]
    84d8:	mov	r0, #0
    84dc:	b	8628 <little2_scanAtts+0xacc>
    84e0:	ldr	r3, [sp, #32]
    84e4:	add	r3, r3, #2
    84e8:	str	r3, [sp, #32]
    84ec:	b	7b94 <little2_scanAtts+0x38>
    84f0:	ldr	r0, [sp, #32]
    84f4:	sub	r1, r4, r0
    84f8:	cmp	r1, #3
    84fc:	bge	8508 <little2_scanAtts+0x9ac>
    8500:	mvn	r0, #1
    8504:	b	8628 <little2_scanAtts+0xacc>
    8508:	mov	r3, #1
    850c:	cmp	r3, #0
    8510:	beq	8524 <little2_scanAtts+0x9c8>
    8514:	ldr	r3, [sp, #32]
    8518:	str	r3, [r5]
    851c:	mov	r0, #0
    8520:	b	8628 <little2_scanAtts+0xacc>
    8524:	ldr	r1, [sp, #32]
    8528:	add	r2, r1, #3
    852c:	str	r2, [sp, #32]
    8530:	b	7b94 <little2_scanAtts+0x38>
    8534:	ldr	r0, [sp, #32]
    8538:	sub	ip, r4, r0
    853c:	cmp	ip, #4
    8540:	bge	854c <little2_scanAtts+0x9f0>
    8544:	mvn	r0, #1
    8548:	b	8628 <little2_scanAtts+0xacc>
    854c:	mov	r1, #1
    8550:	cmp	r1, #0
    8554:	beq	8568 <little2_scanAtts+0xa0c>
    8558:	ldr	r2, [sp, #32]
    855c:	str	r2, [r5]
    8560:	mov	r0, #0
    8564:	b	8628 <little2_scanAtts+0xacc>
    8568:	ldr	ip, [sp, #32]
    856c:	add	r0, ip, #4
    8570:	str	r0, [sp, #32]
    8574:	b	7b94 <little2_scanAtts+0x38>
    8578:	ldr	r2, [sp, #32]
    857c:	str	r2, [r5]
    8580:	mov	r0, #0
    8584:	b	8628 <little2_scanAtts+0xacc>
    8588:	ldr	r2, [sp, #32]
    858c:	add	r3, r2, #2
    8590:	str	r3, [sp, #32]
    8594:	ldr	r1, [sp, #32]
    8598:	cmp	r1, r4
    859c:	bne	85a8 <little2_scanAtts+0xa4c>
    85a0:	mvn	r0, #0
    85a4:	b	8628 <little2_scanAtts+0xacc>
    85a8:	ldr	r0, [sp, #32]
    85ac:	ldrb	r2, [r0, #1]
    85b0:	cmp	r2, #0
    85b4:	bne	85d0 <little2_scanAtts+0xa74>
    85b8:	ldr	r0, [sp, #32]
    85bc:	ldrb	r3, [r0]
    85c0:	cmp	r3, #62	; 0x3e
    85c4:	moveq	r3, #1
    85c8:	movne	r3, #0
    85cc:	b	85d4 <little2_scanAtts+0xa78>
    85d0:	mov	r3, #0
    85d4:	cmp	r3, #0
    85d8:	bne	85ec <little2_scanAtts+0xa90>
    85dc:	ldr	r3, [sp, #32]
    85e0:	str	r3, [r5]
    85e4:	mov	r0, #0
    85e8:	b	8628 <little2_scanAtts+0xacc>
    85ec:	ldr	r0, [sp, #32]
    85f0:	add	r1, r0, #2
    85f4:	str	r1, [r5]
    85f8:	mov	r0, #3
    85fc:	b	8628 <little2_scanAtts+0xacc>
    8600:	ldr	r3, [sp, #32]
    8604:	add	r2, r3, #2
    8608:	str	r2, [r5]
    860c:	mov	r0, #1
    8610:	b	8628 <little2_scanAtts+0xacc>
    8614:	ldr	ip, [sp, #32]
    8618:	str	ip, [r5]
    861c:	mov	r0, #0
    8620:	b	8628 <little2_scanAtts+0xacc>
    8624:	mvn	r0, #0
    8628:	ldr	r4, [sp, #8]
    862c:	ldr	r5, [sp, #12]
    8630:	ldr	r6, [sp, #16]
    8634:	ldr	r7, [sp, #20]
    8638:	ldr	r8, [sp, #24]
    863c:	ldr	lr, [sp, #4]
    8640:	add	sp, sp, #40	; 0x28
    8644:	bx	lr
    8648:	.word	0x00000000
    864c:	.word	0x00000500
    8650:	.word	0x00000600

00008654 <little2_scanLt>:
    8654:	mov	ip, sp
    8658:	sub	sp, sp, #32
    865c:	str	ip, [sp]
    8660:	str	lr, [sp, #4]
    8664:	str	r4, [sp, #8]
    8668:	str	r5, [sp, #12]
    866c:	str	r6, [sp, #16]
    8670:	str	r7, [sp, #20]
    8674:	str	r8, [sp, #24]
    8678:	str	r9, [sp, #28]
    867c:	mov	r4, r3
    8680:	mov	r5, r2
    8684:	mov	r7, r1
    8688:	mov	r6, r0
    868c:	cmp	r7, r5
    8690:	bne	869c <little2_scanLt+0x48>
    8694:	mvn	r0, #0
    8698:	b	8ea0 <little2_scanLt+0x84c>
    869c:	ldrb	r0, [r7, #1]
    86a0:	cmp	r0, #0
    86a4:	beq	86c0 <little2_scanLt+0x6c>
    86a8:	ldrb	ip, [r7, #1]
    86ac:	and	r0, ip, #255	; 0xff
    86b0:	ldrb	r2, [r7]
    86b4:	and	r1, r2, #255	; 0xff
    86b8:	bl	5988 <unicode_byte_type>
    86bc:	b	86d0 <little2_scanLt+0x7c>
    86c0:	ldrb	ip, [r7]
    86c4:	and	r2, ip, #255	; 0xff
    86c8:	add	ip, r6, r2
    86cc:	ldrb	r0, [ip, #76]	; 0x4c
    86d0:	sub	r0, r0, #5
    86d4:	cmp	r0, #25
    86d8:	bcs	8e98 <little2_scanLt+0x844>
    86dc:	add	pc, pc, r0, lsl #2
    86e0:	nop	{0}
    86e4:	b	87a0 <little2_scanLt+0x14c>
    86e8:	b	87d4 <little2_scanLt+0x180>
    86ec:	b	8808 <little2_scanLt+0x1b4>
    86f0:	b	8e98 <little2_scanLt+0x844>
    86f4:	b	8e98 <little2_scanLt+0x844>
    86f8:	b	8e98 <little2_scanLt+0x844>
    86fc:	b	8e98 <little2_scanLt+0x844>
    8700:	b	8e98 <little2_scanLt+0x844>
    8704:	b	8e98 <little2_scanLt+0x844>
    8708:	b	8e98 <little2_scanLt+0x844>
    870c:	b	8e68 <little2_scanLt+0x814>
    8710:	b	8dd4 <little2_scanLt+0x780>
    8714:	b	8e80 <little2_scanLt+0x82c>
    8718:	b	8e98 <little2_scanLt+0x844>
    871c:	b	8e98 <little2_scanLt+0x844>
    8720:	b	8e98 <little2_scanLt+0x844>
    8724:	b	8e98 <little2_scanLt+0x844>
    8728:	b	8798 <little2_scanLt+0x144>
    872c:	b	8e98 <little2_scanLt+0x844>
    8730:	b	8798 <little2_scanLt+0x144>
    8734:	b	8e98 <little2_scanLt+0x844>
    8738:	b	8e98 <little2_scanLt+0x844>
    873c:	b	8e98 <little2_scanLt+0x844>
    8740:	b	8e98 <little2_scanLt+0x844>
    8744:	b	8748 <little2_scanLt+0xf4>
    8748:	ldr	r3, [pc, #1908]	; 8ec4 <little2_scanLt+0x870>
    874c:	ldrb	r2, [r7]
    8750:	and	r0, r2, #255	; 0xff
    8754:	asr	r0, r0, #5
    8758:	ldr	r1, [pc, #1896]	; 8ec8 <little2_scanLt+0x874>
    875c:	ldrb	r2, [r7, #1]
    8760:	and	ip, r2, #255	; 0xff
    8764:	ldrb	r2, [r1, ip]
    8768:	add	r0, r0, r2, lsl #3
    876c:	ldr	ip, [r3, r0, lsl #2]
    8770:	mov	r2, #1
    8774:	ldrb	r3, [r7]
    8778:	and	r1, r3, #31
    877c:	lsl	r2, r2, r1
    8780:	and	r3, ip, r2
    8784:	cmp	r3, #0
    8788:	bne	8798 <little2_scanLt+0x144>
    878c:	str	r7, [r4]
    8790:	mov	r0, #0
    8794:	b	8ea0 <little2_scanLt+0x84c>
    8798:	add	r7, r7, #2
    879c:	b	8838 <little2_scanLt+0x1e4>
    87a0:	sub	r2, r5, r7
    87a4:	cmp	r2, #2
    87a8:	bge	87b4 <little2_scanLt+0x160>
    87ac:	mvn	r0, #1
    87b0:	b	8ea0 <little2_scanLt+0x84c>
    87b4:	mov	r0, #1
    87b8:	cmp	r0, #0
    87bc:	beq	87cc <little2_scanLt+0x178>
    87c0:	str	r7, [r4]
    87c4:	mov	r0, #0
    87c8:	b	8ea0 <little2_scanLt+0x84c>
    87cc:	add	r7, r7, #2
    87d0:	b	8838 <little2_scanLt+0x1e4>
    87d4:	sub	r0, r5, r7
    87d8:	cmp	r0, #3
    87dc:	bge	87e8 <little2_scanLt+0x194>
    87e0:	mvn	r0, #1
    87e4:	b	8ea0 <little2_scanLt+0x84c>
    87e8:	mov	r0, #1
    87ec:	cmp	r0, #0
    87f0:	beq	8800 <little2_scanLt+0x1ac>
    87f4:	str	r7, [r4]
    87f8:	mov	r0, #0
    87fc:	b	8ea0 <little2_scanLt+0x84c>
    8800:	add	r7, r7, #3
    8804:	b	8838 <little2_scanLt+0x1e4>
    8808:	sub	ip, r5, r7
    880c:	cmp	ip, #4
    8810:	bge	881c <little2_scanLt+0x1c8>
    8814:	mvn	r0, #1
    8818:	b	8ea0 <little2_scanLt+0x84c>
    881c:	mov	r0, #1
    8820:	cmp	r0, #0
    8824:	beq	8834 <little2_scanLt+0x1e0>
    8828:	str	r7, [r4]
    882c:	mov	r0, #0
    8830:	b	8ea0 <little2_scanLt+0x84c>
    8834:	add	r7, r7, #4
    8838:	mov	r8, #0
    883c:	cmp	r7, r5
    8840:	beq	8dcc <little2_scanLt+0x778>
    8844:	ldrb	r1, [r7, #1]
    8848:	cmp	r1, #0
    884c:	beq	8868 <little2_scanLt+0x214>
    8850:	ldrb	r3, [r7, #1]
    8854:	and	r0, r3, #255	; 0xff
    8858:	ldrb	r3, [r7]
    885c:	and	r1, r3, #255	; 0xff
    8860:	bl	5988 <unicode_byte_type>
    8864:	b	8878 <little2_scanLt+0x224>
    8868:	ldrb	r3, [r7]
    886c:	and	r0, r3, #255	; 0xff
    8870:	add	r0, r6, r0
    8874:	ldrb	r0, [r0, #76]	; 0x4c
    8878:	sub	r2, r0, #5
    887c:	cmp	r2, #25
    8880:	bcs	8dc0 <little2_scanLt+0x76c>
    8884:	add	pc, pc, r2, lsl #2
    8888:	nop	{0}
    888c:	b	8948 <little2_scanLt+0x2f4>
    8890:	b	897c <little2_scanLt+0x328>
    8894:	b	89b0 <little2_scanLt+0x35c>
    8898:	b	8dc0 <little2_scanLt+0x76c>
    889c:	b	8b7c <little2_scanLt+0x528>
    88a0:	b	8b7c <little2_scanLt+0x528>
    88a4:	b	8d54 <little2_scanLt+0x700>
    88a8:	b	8dc0 <little2_scanLt+0x76c>
    88ac:	b	8dc0 <little2_scanLt+0x76c>
    88b0:	b	8dc0 <little2_scanLt+0x76c>
    88b4:	b	8dc0 <little2_scanLt+0x76c>
    88b8:	b	8dc0 <little2_scanLt+0x76c>
    88bc:	b	8d64 <little2_scanLt+0x710>
    88c0:	b	8dc0 <little2_scanLt+0x76c>
    88c4:	b	8dc0 <little2_scanLt+0x76c>
    88c8:	b	8dc0 <little2_scanLt+0x76c>
    88cc:	b	8b7c <little2_scanLt+0x528>
    88d0:	b	8940 <little2_scanLt+0x2ec>
    88d4:	b	89e4 <little2_scanLt+0x390>
    88d8:	b	8940 <little2_scanLt+0x2ec>
    88dc:	b	8940 <little2_scanLt+0x2ec>
    88e0:	b	8940 <little2_scanLt+0x2ec>
    88e4:	b	8940 <little2_scanLt+0x2ec>
    88e8:	b	8dc0 <little2_scanLt+0x76c>
    88ec:	b	88f0 <little2_scanLt+0x29c>
    88f0:	ldr	r9, [pc, #1484]	; 8ec4 <little2_scanLt+0x870>
    88f4:	ldrb	r2, [r7]
    88f8:	and	r3, r2, #255	; 0xff
    88fc:	asr	r1, r3, #5
    8900:	ldr	ip, [pc, #1476]	; 8ecc <little2_scanLt+0x878>
    8904:	ldrb	r3, [r7, #1]
    8908:	and	r0, r3, #255	; 0xff
    890c:	ldrb	r2, [ip, r0]
    8910:	add	ip, r1, r2, lsl #3
    8914:	ldr	r1, [r9, ip, lsl #2]
    8918:	mov	r0, #1
    891c:	ldrb	r2, [r7]
    8920:	and	ip, r2, #31
    8924:	lsl	r0, r0, ip
    8928:	and	r1, r1, r0
    892c:	cmp	r1, #0
    8930:	bne	8940 <little2_scanLt+0x2ec>
    8934:	str	r7, [r4]
    8938:	mov	r0, #0
    893c:	b	8ea0 <little2_scanLt+0x84c>
    8940:	add	r7, r7, #2
    8944:	b	883c <little2_scanLt+0x1e8>
    8948:	sub	r2, r5, r7
    894c:	cmp	r2, #2
    8950:	bge	895c <little2_scanLt+0x308>
    8954:	mvn	r0, #1
    8958:	b	8ea0 <little2_scanLt+0x84c>
    895c:	mov	ip, #1
    8960:	cmp	ip, #0
    8964:	beq	8974 <little2_scanLt+0x320>
    8968:	str	r7, [r4]
    896c:	mov	r0, #0
    8970:	b	8ea0 <little2_scanLt+0x84c>
    8974:	add	r7, r7, #2
    8978:	b	883c <little2_scanLt+0x1e8>
    897c:	sub	r3, r5, r7
    8980:	cmp	r3, #3
    8984:	bge	8990 <little2_scanLt+0x33c>
    8988:	mvn	r0, #1
    898c:	b	8ea0 <little2_scanLt+0x84c>
    8990:	mov	r1, #1
    8994:	cmp	r1, #0
    8998:	beq	89a8 <little2_scanLt+0x354>
    899c:	str	r7, [r4]
    89a0:	mov	r0, #0
    89a4:	b	8ea0 <little2_scanLt+0x84c>
    89a8:	add	r7, r7, #3
    89ac:	b	883c <little2_scanLt+0x1e8>
    89b0:	sub	r0, r5, r7
    89b4:	cmp	r0, #4
    89b8:	bge	89c4 <little2_scanLt+0x370>
    89bc:	mvn	r0, #1
    89c0:	b	8ea0 <little2_scanLt+0x84c>
    89c4:	mov	r3, #1
    89c8:	cmp	r3, #0
    89cc:	beq	89dc <little2_scanLt+0x388>
    89d0:	str	r7, [r4]
    89d4:	mov	r0, #0
    89d8:	b	8ea0 <little2_scanLt+0x84c>
    89dc:	add	r7, r7, #4
    89e0:	b	883c <little2_scanLt+0x1e8>
    89e4:	cmp	r8, #0
    89e8:	beq	89f8 <little2_scanLt+0x3a4>
    89ec:	str	r7, [r4]
    89f0:	mov	r0, #0
    89f4:	b	8ea0 <little2_scanLt+0x84c>
    89f8:	mov	r8, #1
    89fc:	add	r7, r7, #2
    8a00:	cmp	r7, r5
    8a04:	bne	8a10 <little2_scanLt+0x3bc>
    8a08:	mvn	r0, #0
    8a0c:	b	8ea0 <little2_scanLt+0x84c>
    8a10:	ldrb	r0, [r7, #1]
    8a14:	cmp	r0, #0
    8a18:	beq	8a34 <little2_scanLt+0x3e0>
    8a1c:	ldrb	r0, [r7, #1]
    8a20:	and	r0, r0, #255	; 0xff
    8a24:	ldrb	r1, [r7]
    8a28:	and	r1, r1, #255	; 0xff
    8a2c:	bl	5988 <unicode_byte_type>
    8a30:	b	8a44 <little2_scanLt+0x3f0>
    8a34:	ldrb	r2, [r7]
    8a38:	and	r3, r2, #255	; 0xff
    8a3c:	add	r1, r6, r3
    8a40:	ldrb	r0, [r1, #76]	; 0x4c
    8a44:	cmp	r0, #22
    8a48:	bcs	8b00 <little2_scanLt+0x4ac>
    8a4c:	cmp	r0, #5
    8a50:	beq	8acc <little2_scanLt+0x478>
    8a54:	cmp	r0, #6
    8a58:	beq	8a98 <little2_scanLt+0x444>
    8a5c:	cmp	r0, #7
    8a60:	bne	8b68 <little2_scanLt+0x514>
    8a64:	sub	r2, r5, r7
    8a68:	cmp	r2, #4
    8a6c:	bge	8a78 <little2_scanLt+0x424>
    8a70:	mvn	r0, #1
    8a74:	b	8ea0 <little2_scanLt+0x84c>
    8a78:	mov	r3, #1
    8a7c:	cmp	r3, #0
    8a80:	beq	8a90 <little2_scanLt+0x43c>
    8a84:	str	r7, [r4]
    8a88:	mov	r0, #0
    8a8c:	b	8ea0 <little2_scanLt+0x84c>
    8a90:	add	r7, r7, #4
    8a94:	b	883c <little2_scanLt+0x1e8>
    8a98:	sub	r3, r5, r7
    8a9c:	cmp	r3, #3
    8aa0:	bge	8aac <little2_scanLt+0x458>
    8aa4:	mvn	r0, #1
    8aa8:	b	8ea0 <little2_scanLt+0x84c>
    8aac:	mov	r1, #1
    8ab0:	cmp	r1, #0
    8ab4:	beq	8ac4 <little2_scanLt+0x470>
    8ab8:	str	r7, [r4]
    8abc:	mov	r0, #0
    8ac0:	b	8ea0 <little2_scanLt+0x84c>
    8ac4:	add	r7, r7, #3
    8ac8:	b	883c <little2_scanLt+0x1e8>
    8acc:	sub	r1, r5, r7
    8ad0:	cmp	r1, #2
    8ad4:	bge	8ae0 <little2_scanLt+0x48c>
    8ad8:	mvn	r0, #1
    8adc:	b	8ea0 <little2_scanLt+0x84c>
    8ae0:	mov	r3, #1
    8ae4:	cmp	r3, #0
    8ae8:	beq	8af8 <little2_scanLt+0x4a4>
    8aec:	str	r7, [r4]
    8af0:	mov	r0, #0
    8af4:	b	8ea0 <little2_scanLt+0x84c>
    8af8:	add	r7, r7, #2
    8afc:	b	883c <little2_scanLt+0x1e8>
    8b00:	cmp	r0, #22
    8b04:	beq	8b74 <little2_scanLt+0x520>
    8b08:	cmp	r0, #24
    8b0c:	beq	8b74 <little2_scanLt+0x520>
    8b10:	cmp	r0, #29
    8b14:	bne	8b68 <little2_scanLt+0x514>
    8b18:	ldr	r9, [pc, #932]	; 8ec4 <little2_scanLt+0x870>
    8b1c:	ldrb	ip, [r7]
    8b20:	and	r0, ip, #255	; 0xff
    8b24:	asr	r1, r0, #5
    8b28:	ldr	ip, [pc, #920]	; 8ec8 <little2_scanLt+0x874>
    8b2c:	ldrb	r3, [r7, #1]
    8b30:	and	r0, r3, #255	; 0xff
    8b34:	ldrb	r2, [ip, r0]
    8b38:	add	r1, r1, r2, lsl #3
    8b3c:	ldr	ip, [r9, r1, lsl #2]
    8b40:	mov	r3, #1
    8b44:	ldrb	r2, [r7]
    8b48:	and	r2, r2, #31
    8b4c:	lsl	r2, r3, r2
    8b50:	and	ip, ip, r2
    8b54:	cmp	ip, #0
    8b58:	bne	8b74 <little2_scanLt+0x520>
    8b5c:	str	r7, [r4]
    8b60:	mov	r0, #0
    8b64:	b	8ea0 <little2_scanLt+0x84c>
    8b68:	str	r7, [r4]
    8b6c:	mov	r0, #0
    8b70:	b	8ea0 <little2_scanLt+0x84c>
    8b74:	add	r7, r7, #2
    8b78:	b	883c <little2_scanLt+0x1e8>
    8b7c:	add	r7, r7, #2
    8b80:	cmp	r7, r5
    8b84:	beq	8d4c <little2_scanLt+0x6f8>
    8b88:	ldrb	r3, [r7, #1]
    8b8c:	cmp	r3, #0
    8b90:	beq	8bac <little2_scanLt+0x558>
    8b94:	ldrb	ip, [r7, #1]
    8b98:	and	r0, ip, #255	; 0xff
    8b9c:	ldrb	r1, [r7]
    8ba0:	and	r1, r1, #255	; 0xff
    8ba4:	bl	5988 <unicode_byte_type>
    8ba8:	b	8bbc <little2_scanLt+0x568>
    8bac:	ldrb	r0, [r7]
    8bb0:	and	r1, r0, #255	; 0xff
    8bb4:	add	r2, r6, r1
    8bb8:	ldrb	r0, [r2, #76]	; 0x4c
    8bbc:	sub	ip, r0, #5
    8bc0:	cmp	ip, #25
    8bc4:	bcs	8d40 <little2_scanLt+0x6ec>
    8bc8:	add	pc, pc, ip, lsl #2
    8bcc:	nop	{0}
    8bd0:	b	8c8c <little2_scanLt+0x638>
    8bd4:	b	8cc0 <little2_scanLt+0x66c>
    8bd8:	b	8cf4 <little2_scanLt+0x6a0>
    8bdc:	b	8d40 <little2_scanLt+0x6ec>
    8be0:	b	8d38 <little2_scanLt+0x6e4>
    8be4:	b	8d38 <little2_scanLt+0x6e4>
    8be8:	b	8d54 <little2_scanLt+0x700>
    8bec:	b	8d40 <little2_scanLt+0x6ec>
    8bf0:	b	8d40 <little2_scanLt+0x6ec>
    8bf4:	b	8d40 <little2_scanLt+0x6ec>
    8bf8:	b	8d40 <little2_scanLt+0x6ec>
    8bfc:	b	8d40 <little2_scanLt+0x6ec>
    8c00:	b	8d64 <little2_scanLt+0x710>
    8c04:	b	8d40 <little2_scanLt+0x6ec>
    8c08:	b	8d40 <little2_scanLt+0x6ec>
    8c0c:	b	8d40 <little2_scanLt+0x6ec>
    8c10:	b	8d38 <little2_scanLt+0x6e4>
    8c14:	b	8c84 <little2_scanLt+0x630>
    8c18:	b	8d40 <little2_scanLt+0x6ec>
    8c1c:	b	8c84 <little2_scanLt+0x630>
    8c20:	b	8d40 <little2_scanLt+0x6ec>
    8c24:	b	8d40 <little2_scanLt+0x6ec>
    8c28:	b	8d40 <little2_scanLt+0x6ec>
    8c2c:	b	8d40 <little2_scanLt+0x6ec>
    8c30:	b	8c34 <little2_scanLt+0x5e0>
    8c34:	ldr	ip, [pc, #648]	; 8ec4 <little2_scanLt+0x870>
    8c38:	ldrb	r3, [r7]
    8c3c:	and	r1, r3, #255	; 0xff
    8c40:	asr	r2, r1, #5
    8c44:	ldr	r0, [pc, #636]	; 8ec8 <little2_scanLt+0x874>
    8c48:	ldrb	r1, [r7, #1]
    8c4c:	and	r3, r1, #255	; 0xff
    8c50:	ldrb	r1, [r0, r3]
    8c54:	add	r2, r2, r1, lsl #3
    8c58:	ldr	ip, [ip, r2, lsl #2]
    8c5c:	mov	r2, #1
    8c60:	ldrb	r3, [r7]
    8c64:	and	r0, r3, #31
    8c68:	lsl	r2, r2, r0
    8c6c:	and	r2, ip, r2
    8c70:	cmp	r2, #0
    8c74:	bne	8c84 <little2_scanLt+0x630>
    8c78:	str	r7, [r4]
    8c7c:	mov	r0, #0
    8c80:	b	8ea0 <little2_scanLt+0x84c>
    8c84:	add	r1, r7, #2
    8c88:	b	8d24 <little2_scanLt+0x6d0>
    8c8c:	sub	r1, r5, r7
    8c90:	cmp	r1, #2
    8c94:	bge	8ca0 <little2_scanLt+0x64c>
    8c98:	mvn	r0, #1
    8c9c:	b	8ea0 <little2_scanLt+0x84c>
    8ca0:	mov	ip, #1
    8ca4:	cmp	ip, #0
    8ca8:	beq	8cb8 <little2_scanLt+0x664>
    8cac:	str	r7, [r4]
    8cb0:	mov	r0, #0
    8cb4:	b	8ea0 <little2_scanLt+0x84c>
    8cb8:	add	r1, r7, #2
    8cbc:	b	8d24 <little2_scanLt+0x6d0>
    8cc0:	sub	r1, r5, r7
    8cc4:	cmp	r1, #3
    8cc8:	bge	8cd4 <little2_scanLt+0x680>
    8ccc:	mvn	r0, #1
    8cd0:	b	8ea0 <little2_scanLt+0x84c>
    8cd4:	mov	r2, #1
    8cd8:	cmp	r2, #0
    8cdc:	beq	8cec <little2_scanLt+0x698>
    8ce0:	str	r7, [r4]
    8ce4:	mov	r0, #0
    8ce8:	b	8ea0 <little2_scanLt+0x84c>
    8cec:	add	r1, r7, #3
    8cf0:	b	8d24 <little2_scanLt+0x6d0>
    8cf4:	sub	r0, r5, r7
    8cf8:	cmp	r0, #4
    8cfc:	bge	8d08 <little2_scanLt+0x6b4>
    8d00:	mvn	r0, #1
    8d04:	b	8ea0 <little2_scanLt+0x84c>
    8d08:	mov	ip, #1
    8d0c:	cmp	ip, #0
    8d10:	beq	8d20 <little2_scanLt+0x6cc>
    8d14:	str	r7, [r4]
    8d18:	mov	r0, #0
    8d1c:	b	8ea0 <little2_scanLt+0x84c>
    8d20:	add	r1, r7, #4
    8d24:	mov	r3, r4
    8d28:	mov	r2, r5
    8d2c:	mov	r0, r6
    8d30:	bl	7b5c <little2_scanAtts>
    8d34:	b	8ea0 <little2_scanLt+0x84c>
    8d38:	add	r7, r7, #2
    8d3c:	b	8b80 <little2_scanLt+0x52c>
    8d40:	str	r7, [r4]
    8d44:	mov	r0, #0
    8d48:	b	8ea0 <little2_scanLt+0x84c>
    8d4c:	mvn	r0, #0
    8d50:	b	8ea0 <little2_scanLt+0x84c>
    8d54:	add	r1, r7, #2
    8d58:	str	r1, [r4]
    8d5c:	mov	r0, #2
    8d60:	b	8ea0 <little2_scanLt+0x84c>
    8d64:	add	r2, r7, #2
    8d68:	cmp	r2, r5
    8d6c:	bne	8d78 <little2_scanLt+0x724>
    8d70:	mvn	r0, #0
    8d74:	b	8ea0 <little2_scanLt+0x84c>
    8d78:	ldrb	r3, [r2, #1]
    8d7c:	cmp	r3, #0
    8d80:	bne	8d98 <little2_scanLt+0x744>
    8d84:	ldrb	r1, [r2]
    8d88:	cmp	r1, #62	; 0x3e
    8d8c:	moveq	r3, #1
    8d90:	movne	r3, #0
    8d94:	b	8d9c <little2_scanLt+0x748>
    8d98:	mov	r3, #0
    8d9c:	cmp	r3, #0
    8da0:	bne	8db0 <little2_scanLt+0x75c>
    8da4:	str	r2, [r4]
    8da8:	mov	r0, #0
    8dac:	b	8ea0 <little2_scanLt+0x84c>
    8db0:	add	r1, r2, #2
    8db4:	str	r1, [r4]
    8db8:	mov	r0, #4
    8dbc:	b	8ea0 <little2_scanLt+0x84c>
    8dc0:	str	r7, [r4]
    8dc4:	mov	r0, #0
    8dc8:	b	8ea0 <little2_scanLt+0x84c>
    8dcc:	mvn	r0, #0
    8dd0:	b	8ea0 <little2_scanLt+0x84c>
    8dd4:	add	r7, r7, #2
    8dd8:	cmp	r7, r5
    8ddc:	bne	8de8 <little2_scanLt+0x794>
    8de0:	mvn	r0, #0
    8de4:	b	8ea0 <little2_scanLt+0x84c>
    8de8:	ldrb	r0, [r7, #1]
    8dec:	cmp	r0, #0
    8df0:	beq	8e0c <little2_scanLt+0x7b8>
    8df4:	ldrb	r1, [r7, #1]
    8df8:	and	r0, r1, #255	; 0xff
    8dfc:	ldrb	r1, [r7]
    8e00:	and	r1, r1, #255	; 0xff
    8e04:	bl	5988 <unicode_byte_type>
    8e08:	b	8e1c <little2_scanLt+0x7c8>
    8e0c:	ldrb	r3, [r7]
    8e10:	and	r1, r3, #255	; 0xff
    8e14:	add	r0, r6, r1
    8e18:	ldrb	r0, [r0, #76]	; 0x4c
    8e1c:	cmp	r0, #20
    8e20:	beq	8e50 <little2_scanLt+0x7fc>
    8e24:	cmp	r0, #27
    8e28:	bne	8e44 <little2_scanLt+0x7f0>
    8e2c:	add	r1, r7, #2
    8e30:	mov	r3, r4
    8e34:	mov	r2, r5
    8e38:	mov	r0, r6
    8e3c:	bl	6120 <little2_scanComment>
    8e40:	b	8ea0 <little2_scanLt+0x84c>
    8e44:	str	r7, [r4]
    8e48:	mov	r0, #0
    8e4c:	b	8ea0 <little2_scanLt+0x84c>
    8e50:	add	r1, r7, #2
    8e54:	mov	r3, r4
    8e58:	mov	r2, r5
    8e5c:	mov	r0, r6
    8e60:	bl	6c5c <little2_scanCdataSection>
    8e64:	b	8ea0 <little2_scanLt+0x84c>
    8e68:	add	r1, r7, #2
    8e6c:	mov	r3, r4
    8e70:	mov	r2, r5
    8e74:	mov	r0, r6
    8e78:	bl	668c <little2_scanPi>
    8e7c:	b	8ea0 <little2_scanLt+0x84c>
    8e80:	add	r1, r7, #2
    8e84:	mov	r3, r4
    8e88:	mov	r2, r5
    8e8c:	mov	r0, r6
    8e90:	bl	70dc <little2_scanEndTag>
    8e94:	b	8ea0 <little2_scanLt+0x84c>
    8e98:	str	r7, [r4]
    8e9c:	mov	r0, #0
    8ea0:	ldr	r4, [sp, #8]
    8ea4:	ldr	r5, [sp, #12]
    8ea8:	ldr	r6, [sp, #16]
    8eac:	ldr	r7, [sp, #20]
    8eb0:	ldr	r8, [sp, #24]
    8eb4:	ldr	r9, [sp, #28]
    8eb8:	ldr	lr, [sp, #4]
    8ebc:	add	sp, sp, #32
    8ec0:	bx	lr
    8ec4:	.word	0x00000000
    8ec8:	.word	0x00000500
    8ecc:	.word	0x00000600

00008ed0 <little2_contentTok>:
    8ed0:	mov	ip, sp
    8ed4:	sub	sp, sp, #24
    8ed8:	str	ip, [sp]
    8edc:	str	lr, [sp, #4]
    8ee0:	str	r4, [sp, #8]
    8ee4:	str	r5, [sp, #12]
    8ee8:	str	r6, [sp, #16]
    8eec:	str	r7, [sp, #20]
    8ef0:	mov	r4, r3
    8ef4:	mov	r5, r2
    8ef8:	mov	r7, r1
    8efc:	mov	r6, r0
    8f00:	cmp	r7, r5
    8f04:	bne	8f10 <little2_contentTok+0x40>
    8f08:	mvn	r0, #3
    8f0c:	b	9354 <little2_contentTok+0x484>
    8f10:	mov	r0, #1
    8f14:	cmp	r0, #0
    8f18:	beq	8f44 <little2_contentTok+0x74>
    8f1c:	sub	r1, r5, r7
    8f20:	and	r2, r1, #1
    8f24:	cmp	r2, #0
    8f28:	beq	8f44 <little2_contentTok+0x74>
    8f2c:	bic	r2, r1, #1
    8f30:	cmp	r2, #0
    8f34:	bne	8f40 <little2_contentTok+0x70>
    8f38:	mvn	r0, #0
    8f3c:	b	9354 <little2_contentTok+0x484>
    8f40:	add	r5, r7, r2
    8f44:	ldrb	r0, [r7, #1]
    8f48:	cmp	r0, #0
    8f4c:	beq	8f68 <little2_contentTok+0x98>
    8f50:	ldrb	ip, [r7, #1]
    8f54:	and	r0, ip, #255	; 0xff
    8f58:	ldrb	ip, [r7]
    8f5c:	and	r1, ip, #255	; 0xff
    8f60:	bl	5988 <unicode_byte_type>
    8f64:	b	8f78 <little2_contentTok+0xa8>
    8f68:	ldrb	r1, [r7]
    8f6c:	and	r1, r1, #255	; 0xff
    8f70:	add	r3, r6, r1
    8f74:	ldrb	r0, [r3, #76]	; 0x4c
    8f78:	cmp	r0, #11
    8f7c:	bcs	9190 <little2_contentTok+0x2c0>
    8f80:	add	pc, pc, r0, lsl #2
    8f84:	nop	{0}
    8f88:	b	9184 <little2_contentTok+0x2b4>
    8f8c:	b	9184 <little2_contentTok+0x2b4>
    8f90:	b	8fb4 <little2_contentTok+0xe4>
    8f94:	b	8fcc <little2_contentTok+0xfc>
    8f98:	b	9054 <little2_contentTok+0x184>
    8f9c:	b	90e8 <little2_contentTok+0x218>
    8fa0:	b	911c <little2_contentTok+0x24c>
    8fa4:	b	9150 <little2_contentTok+0x280>
    8fa8:	b	9184 <little2_contentTok+0x2b4>
    8fac:	b	8fe4 <little2_contentTok+0x114>
    8fb0:	b	9044 <little2_contentTok+0x174>
    8fb4:	add	r1, r7, #2
    8fb8:	mov	r3, r4
    8fbc:	mov	r2, r5
    8fc0:	mov	r0, r6
    8fc4:	bl	8654 <little2_scanLt>
    8fc8:	b	9354 <little2_contentTok+0x484>
    8fcc:	add	r1, r7, #2
    8fd0:	mov	r3, r4
    8fd4:	mov	r2, r5
    8fd8:	mov	r0, r6
    8fdc:	bl	7790 <little2_scanRef>
    8fe0:	b	9354 <little2_contentTok+0x484>
    8fe4:	add	r7, r7, #2
    8fe8:	cmp	r7, r5
    8fec:	bne	8ff8 <little2_contentTok+0x128>
    8ff0:	mvn	r0, #2
    8ff4:	b	9354 <little2_contentTok+0x484>
    8ff8:	ldrb	r3, [r7, #1]
    8ffc:	cmp	r3, #0
    9000:	beq	901c <little2_contentTok+0x14c>
    9004:	ldrb	r3, [r7, #1]
    9008:	and	r0, r3, #255	; 0xff
    900c:	ldrb	r1, [r7]
    9010:	and	r1, r1, #255	; 0xff
    9014:	bl	5988 <unicode_byte_type>
    9018:	b	902c <little2_contentTok+0x15c>
    901c:	ldrb	r1, [r7]
    9020:	and	r2, r1, #255	; 0xff
    9024:	add	ip, r6, r2
    9028:	ldrb	r0, [ip, #76]	; 0x4c
    902c:	cmp	r0, #10
    9030:	bne	9038 <little2_contentTok+0x168>
    9034:	add	r7, r7, #2
    9038:	str	r7, [r4]
    903c:	mov	r0, #7
    9040:	b	9354 <little2_contentTok+0x484>
    9044:	add	r1, r7, #2
    9048:	str	r1, [r4]
    904c:	mov	r0, #7
    9050:	b	9354 <little2_contentTok+0x484>
    9054:	add	r7, r7, #2
    9058:	cmp	r7, r5
    905c:	bne	9068 <little2_contentTok+0x198>
    9060:	mvn	r0, #4
    9064:	b	9354 <little2_contentTok+0x484>
    9068:	ldrb	r0, [r7, #1]
    906c:	cmp	r0, #0
    9070:	bne	9088 <little2_contentTok+0x1b8>
    9074:	ldrb	r2, [r7]
    9078:	cmp	r2, #93	; 0x5d
    907c:	moveq	r3, #1
    9080:	movne	r3, #0
    9084:	b	908c <little2_contentTok+0x1bc>
    9088:	mov	r3, #0
    908c:	cmp	r3, #0
    9090:	beq	9194 <little2_contentTok+0x2c4>
    9094:	add	ip, r7, #2
    9098:	cmp	ip, r5
    909c:	bne	90a8 <little2_contentTok+0x1d8>
    90a0:	mvn	r0, #4
    90a4:	b	9354 <little2_contentTok+0x484>
    90a8:	ldrb	r3, [ip, #1]
    90ac:	cmp	r3, #0
    90b0:	bne	90c8 <little2_contentTok+0x1f8>
    90b4:	ldrb	r1, [ip]
    90b8:	cmp	r1, #62	; 0x3e
    90bc:	moveq	r2, #1
    90c0:	movne	r2, #0
    90c4:	b	90cc <little2_contentTok+0x1fc>
    90c8:	mov	r2, #0
    90cc:	cmp	r2, #0
    90d0:	bne	90dc <little2_contentTok+0x20c>
    90d4:	sub	r7, ip, #2
    90d8:	b	9194 <little2_contentTok+0x2c4>
    90dc:	str	ip, [r4]
    90e0:	mov	r0, #0
    90e4:	b	9354 <little2_contentTok+0x484>
    90e8:	sub	r3, r5, r7
    90ec:	cmp	r3, #2
    90f0:	bge	90fc <little2_contentTok+0x22c>
    90f4:	mvn	r0, #1
    90f8:	b	9354 <little2_contentTok+0x484>
    90fc:	mov	r1, #0
    9100:	cmp	r1, #0
    9104:	beq	9114 <little2_contentTok+0x244>
    9108:	str	r7, [r4]
    910c:	mov	r0, #0
    9110:	b	9354 <little2_contentTok+0x484>
    9114:	add	r7, r7, #2
    9118:	b	9194 <little2_contentTok+0x2c4>
    911c:	sub	r1, r5, r7
    9120:	cmp	r1, #3
    9124:	bge	9130 <little2_contentTok+0x260>
    9128:	mvn	r0, #1
    912c:	b	9354 <little2_contentTok+0x484>
    9130:	mov	r1, #0
    9134:	cmp	r1, #0
    9138:	beq	9148 <little2_contentTok+0x278>
    913c:	str	r7, [r4]
    9140:	mov	r0, #0
    9144:	b	9354 <little2_contentTok+0x484>
    9148:	add	r7, r7, #3
    914c:	b	9194 <little2_contentTok+0x2c4>
    9150:	sub	ip, r5, r7
    9154:	cmp	ip, #4
    9158:	bge	9164 <little2_contentTok+0x294>
    915c:	mvn	r0, #1
    9160:	b	9354 <little2_contentTok+0x484>
    9164:	mov	ip, #0
    9168:	cmp	ip, #0
    916c:	beq	917c <little2_contentTok+0x2ac>
    9170:	str	r7, [r4]
    9174:	mov	r0, #0
    9178:	b	9354 <little2_contentTok+0x484>
    917c:	add	r7, r7, #4
    9180:	b	9194 <little2_contentTok+0x2c4>
    9184:	str	r7, [r4]
    9188:	mov	r0, #0
    918c:	b	9354 <little2_contentTok+0x484>
    9190:	add	r7, r7, #2
    9194:	cmp	r7, r5
    9198:	beq	934c <little2_contentTok+0x47c>
    919c:	ldrb	ip, [r7, #1]
    91a0:	cmp	ip, #0
    91a4:	beq	91c0 <little2_contentTok+0x2f0>
    91a8:	ldrb	r2, [r7, #1]
    91ac:	and	r0, r2, #255	; 0xff
    91b0:	ldrb	r1, [r7]
    91b4:	and	r1, r1, #255	; 0xff
    91b8:	bl	5988 <unicode_byte_type>
    91bc:	b	91d0 <little2_contentTok+0x300>
    91c0:	ldrb	r1, [r7]
    91c4:	and	r3, r1, #255	; 0xff
    91c8:	add	r0, r6, r3
    91cc:	ldrb	r0, [r0, #76]	; 0x4c
    91d0:	cmp	r0, #11
    91d4:	bcs	9344 <little2_contentTok+0x474>
    91d8:	add	pc, pc, r0, lsl #2
    91dc:	nop	{0}
    91e0:	b	9338 <little2_contentTok+0x468>
    91e4:	b	9338 <little2_contentTok+0x468>
    91e8:	b	9338 <little2_contentTok+0x468>
    91ec:	b	9338 <little2_contentTok+0x468>
    91f0:	b	92a8 <little2_contentTok+0x3d8>
    91f4:	b	920c <little2_contentTok+0x33c>
    91f8:	b	9240 <little2_contentTok+0x370>
    91fc:	b	9274 <little2_contentTok+0x3a4>
    9200:	b	9338 <little2_contentTok+0x468>
    9204:	b	9338 <little2_contentTok+0x468>
    9208:	b	9338 <little2_contentTok+0x468>
    920c:	sub	r2, r5, r7
    9210:	cmp	r2, #2
    9214:	blt	9220 <little2_contentTok+0x350>
    9218:	mov	ip, #0
    921c:	b	9224 <little2_contentTok+0x354>
    9220:	mov	ip, #1
    9224:	cmp	ip, #0
    9228:	beq	9238 <little2_contentTok+0x368>
    922c:	str	r7, [r4]
    9230:	mov	r0, #6
    9234:	b	9354 <little2_contentTok+0x484>
    9238:	add	r7, r7, #2
    923c:	b	9194 <little2_contentTok+0x2c4>
    9240:	sub	r0, r5, r7
    9244:	cmp	r0, #3
    9248:	blt	9254 <little2_contentTok+0x384>
    924c:	mov	r3, #0
    9250:	b	9258 <little2_contentTok+0x388>
    9254:	mov	r3, #1
    9258:	cmp	r3, #0
    925c:	beq	926c <little2_contentTok+0x39c>
    9260:	str	r7, [r4]
    9264:	mov	r0, #6
    9268:	b	9354 <little2_contentTok+0x484>
    926c:	add	r7, r7, #3
    9270:	b	9194 <little2_contentTok+0x2c4>
    9274:	sub	ip, r5, r7
    9278:	cmp	ip, #4
    927c:	blt	9288 <little2_contentTok+0x3b8>
    9280:	mov	r0, #0
    9284:	b	928c <little2_contentTok+0x3bc>
    9288:	mov	r0, #1
    928c:	cmp	r0, #0
    9290:	beq	92a0 <little2_contentTok+0x3d0>
    9294:	str	r7, [r4]
    9298:	mov	r0, #6
    929c:	b	9354 <little2_contentTok+0x484>
    92a0:	add	r7, r7, #4
    92a4:	b	9194 <little2_contentTok+0x2c4>
    92a8:	add	r2, r7, #2
    92ac:	cmp	r2, r5
    92b0:	beq	9338 <little2_contentTok+0x468>
    92b4:	ldrb	ip, [r7, #3]
    92b8:	cmp	ip, #0
    92bc:	bne	92d4 <little2_contentTok+0x404>
    92c0:	ldrb	ip, [r7, #2]
    92c4:	cmp	ip, #93	; 0x5d
    92c8:	moveq	r0, #1
    92cc:	movne	r0, #0
    92d0:	b	92d8 <little2_contentTok+0x408>
    92d4:	mov	r0, #0
    92d8:	cmp	r0, #0
    92dc:	bne	92e8 <little2_contentTok+0x418>
    92e0:	add	r7, r7, #2
    92e4:	b	9194 <little2_contentTok+0x2c4>
    92e8:	add	r1, r7, #4
    92ec:	cmp	r1, r5
    92f0:	beq	9338 <little2_contentTok+0x468>
    92f4:	ldrb	r3, [r7, #5]
    92f8:	cmp	r3, #0
    92fc:	bne	9314 <little2_contentTok+0x444>
    9300:	ldrb	r2, [r7, #4]
    9304:	cmp	r2, #62	; 0x3e
    9308:	moveq	r2, #1
    930c:	movne	r2, #0
    9310:	b	9318 <little2_contentTok+0x448>
    9314:	mov	r2, #0
    9318:	cmp	r2, #0
    931c:	bne	9328 <little2_contentTok+0x458>
    9320:	add	r7, r7, #2
    9324:	b	9194 <little2_contentTok+0x2c4>
    9328:	add	r2, r7, #4
    932c:	str	r2, [r4]
    9330:	mov	r0, #0
    9334:	b	9354 <little2_contentTok+0x484>
    9338:	str	r7, [r4]
    933c:	mov	r0, #6
    9340:	b	9354 <little2_contentTok+0x484>
    9344:	add	r7, r7, #2
    9348:	b	9194 <little2_contentTok+0x2c4>
    934c:	str	r7, [r4]
    9350:	mov	r0, #6
    9354:	ldr	r4, [sp, #8]
    9358:	ldr	r5, [sp, #12]
    935c:	ldr	r6, [sp, #16]
    9360:	ldr	r7, [sp, #20]
    9364:	ldr	lr, [sp, #4]
    9368:	add	sp, sp, #24
    936c:	bx	lr

00009370 <little2_scanPercent>:
    9370:	mov	ip, sp
    9374:	sub	sp, sp, #24
    9378:	str	ip, [sp]
    937c:	str	lr, [sp, #4]
    9380:	str	r4, [sp, #8]
    9384:	str	r5, [sp, #12]
    9388:	str	r6, [sp, #16]
    938c:	str	r7, [sp, #20]
    9390:	mov	r4, r3
    9394:	mov	r6, r2
    9398:	mov	r7, r1
    939c:	mov	r5, r0
    93a0:	cmp	r7, r6
    93a4:	bne	93b0 <little2_scanPercent+0x40>
    93a8:	mvn	r0, #0
    93ac:	b	9730 <little2_scanPercent+0x3c0>
    93b0:	ldrb	ip, [r7, #1]
    93b4:	cmp	ip, #0
    93b8:	beq	93d4 <little2_scanPercent+0x64>
    93bc:	ldrb	r1, [r7, #1]
    93c0:	and	r0, r1, #255	; 0xff
    93c4:	ldrb	r1, [r7]
    93c8:	and	r1, r1, #255	; 0xff
    93cc:	bl	5988 <unicode_byte_type>
    93d0:	b	93e4 <little2_scanPercent+0x74>
    93d4:	ldrb	r2, [r7]
    93d8:	and	r2, r2, #255	; 0xff
    93dc:	add	ip, r5, r2
    93e0:	ldrb	r0, [ip, #76]	; 0x4c
    93e4:	sub	r2, r0, #5
    93e8:	cmp	r2, #26
    93ec:	bcs	9728 <little2_scanPercent+0x3b8>
    93f0:	add	pc, pc, r2, lsl #2
    93f4:	nop	{0}
    93f8:	b	94b8 <little2_scanPercent+0x148>
    93fc:	b	94ec <little2_scanPercent+0x17c>
    9400:	b	9520 <little2_scanPercent+0x1b0>
    9404:	b	9728 <little2_scanPercent+0x3b8>
    9408:	b	971c <little2_scanPercent+0x3ac>
    940c:	b	971c <little2_scanPercent+0x3ac>
    9410:	b	9728 <little2_scanPercent+0x3b8>
    9414:	b	9728 <little2_scanPercent+0x3b8>
    9418:	b	9728 <little2_scanPercent+0x3b8>
    941c:	b	9728 <little2_scanPercent+0x3b8>
    9420:	b	9728 <little2_scanPercent+0x3b8>
    9424:	b	9728 <little2_scanPercent+0x3b8>
    9428:	b	9728 <little2_scanPercent+0x3b8>
    942c:	b	9728 <little2_scanPercent+0x3b8>
    9430:	b	9728 <little2_scanPercent+0x3b8>
    9434:	b	9728 <little2_scanPercent+0x3b8>
    9438:	b	971c <little2_scanPercent+0x3ac>
    943c:	b	94b0 <little2_scanPercent+0x140>
    9440:	b	9728 <little2_scanPercent+0x3b8>
    9444:	b	94b0 <little2_scanPercent+0x140>
    9448:	b	9728 <little2_scanPercent+0x3b8>
    944c:	b	9728 <little2_scanPercent+0x3b8>
    9450:	b	9728 <little2_scanPercent+0x3b8>
    9454:	b	9728 <little2_scanPercent+0x3b8>
    9458:	b	9460 <little2_scanPercent+0xf0>
    945c:	b	971c <little2_scanPercent+0x3ac>
    9460:	ldr	r1, [pc, #740]	; 974c <little2_scanPercent+0x3dc>
    9464:	ldrb	r3, [r7]
    9468:	and	r2, r3, #255	; 0xff
    946c:	asr	r2, r2, #5
    9470:	ldr	r3, [pc, #728]	; 9750 <little2_scanPercent+0x3e0>
    9474:	ldrb	ip, [r7, #1]
    9478:	and	r0, ip, #255	; 0xff
    947c:	ldrb	ip, [r3, r0]
    9480:	add	ip, r2, ip, lsl #3
    9484:	ldr	r1, [r1, ip, lsl #2]
    9488:	mov	r3, #1
    948c:	ldrb	r2, [r7]
    9490:	and	r2, r2, #31
    9494:	lsl	r0, r3, r2
    9498:	and	r0, r1, r0
    949c:	cmp	r0, #0
    94a0:	bne	94b0 <little2_scanPercent+0x140>
    94a4:	str	r7, [r4]
    94a8:	mov	r0, #0
    94ac:	b	9730 <little2_scanPercent+0x3c0>
    94b0:	add	r7, r7, #2
    94b4:	b	9550 <little2_scanPercent+0x1e0>
    94b8:	sub	r3, r6, r7
    94bc:	cmp	r3, #2
    94c0:	bge	94cc <little2_scanPercent+0x15c>
    94c4:	mvn	r0, #1
    94c8:	b	9730 <little2_scanPercent+0x3c0>
    94cc:	mov	r3, #1
    94d0:	cmp	r3, #0
    94d4:	beq	94e4 <little2_scanPercent+0x174>
    94d8:	str	r7, [r4]
    94dc:	mov	r0, #0
    94e0:	b	9730 <little2_scanPercent+0x3c0>
    94e4:	add	r7, r7, #2
    94e8:	b	9550 <little2_scanPercent+0x1e0>
    94ec:	sub	ip, r6, r7
    94f0:	cmp	ip, #3
    94f4:	bge	9500 <little2_scanPercent+0x190>
    94f8:	mvn	r0, #1
    94fc:	b	9730 <little2_scanPercent+0x3c0>
    9500:	mov	r3, #1
    9504:	cmp	r3, #0
    9508:	beq	9518 <little2_scanPercent+0x1a8>
    950c:	str	r7, [r4]
    9510:	mov	r0, #0
    9514:	b	9730 <little2_scanPercent+0x3c0>
    9518:	add	r7, r7, #3
    951c:	b	9550 <little2_scanPercent+0x1e0>
    9520:	sub	r1, r6, r7
    9524:	cmp	r1, #4
    9528:	bge	9534 <little2_scanPercent+0x1c4>
    952c:	mvn	r0, #1
    9530:	b	9730 <little2_scanPercent+0x3c0>
    9534:	mov	r3, #1
    9538:	cmp	r3, #0
    953c:	beq	954c <little2_scanPercent+0x1dc>
    9540:	str	r7, [r4]
    9544:	mov	r0, #0
    9548:	b	9730 <little2_scanPercent+0x3c0>
    954c:	add	r7, r7, #4
    9550:	cmp	r7, r6
    9554:	beq	9714 <little2_scanPercent+0x3a4>
    9558:	ldrb	r2, [r7, #1]
    955c:	cmp	r2, #0
    9560:	beq	957c <little2_scanPercent+0x20c>
    9564:	ldrb	r1, [r7, #1]
    9568:	and	r0, r1, #255	; 0xff
    956c:	ldrb	r2, [r7]
    9570:	and	r1, r2, #255	; 0xff
    9574:	bl	5988 <unicode_byte_type>
    9578:	b	958c <little2_scanPercent+0x21c>
    957c:	ldrb	r0, [r7]
    9580:	and	r0, r0, #255	; 0xff
    9584:	add	r0, r5, r0
    9588:	ldrb	r0, [r0, #76]	; 0x4c
    958c:	sub	r2, r0, #5
    9590:	cmp	r2, #25
    9594:	bcs	9708 <little2_scanPercent+0x398>
    9598:	add	pc, pc, r2, lsl #2
    959c:	nop	{0}
    95a0:	b	965c <little2_scanPercent+0x2ec>
    95a4:	b	9690 <little2_scanPercent+0x320>
    95a8:	b	96c4 <little2_scanPercent+0x354>
    95ac:	b	9708 <little2_scanPercent+0x398>
    95b0:	b	9708 <little2_scanPercent+0x398>
    95b4:	b	9708 <little2_scanPercent+0x398>
    95b8:	b	9708 <little2_scanPercent+0x398>
    95bc:	b	9708 <little2_scanPercent+0x398>
    95c0:	b	9708 <little2_scanPercent+0x398>
    95c4:	b	9708 <little2_scanPercent+0x398>
    95c8:	b	9708 <little2_scanPercent+0x398>
    95cc:	b	9708 <little2_scanPercent+0x398>
    95d0:	b	9708 <little2_scanPercent+0x398>
    95d4:	b	96f8 <little2_scanPercent+0x388>
    95d8:	b	9708 <little2_scanPercent+0x398>
    95dc:	b	9708 <little2_scanPercent+0x398>
    95e0:	b	9708 <little2_scanPercent+0x398>
    95e4:	b	9654 <little2_scanPercent+0x2e4>
    95e8:	b	9708 <little2_scanPercent+0x398>
    95ec:	b	9654 <little2_scanPercent+0x2e4>
    95f0:	b	9654 <little2_scanPercent+0x2e4>
    95f4:	b	9654 <little2_scanPercent+0x2e4>
    95f8:	b	9654 <little2_scanPercent+0x2e4>
    95fc:	b	9708 <little2_scanPercent+0x398>
    9600:	b	9604 <little2_scanPercent+0x294>
    9604:	ldr	ip, [pc, #320]	; 974c <little2_scanPercent+0x3dc>
    9608:	ldrb	r1, [r7]
    960c:	and	r0, r1, #255	; 0xff
    9610:	asr	r3, r0, #5
    9614:	ldr	r1, [pc, #312]	; 9754 <little2_scanPercent+0x3e4>
    9618:	ldrb	r0, [r7, #1]
    961c:	and	r0, r0, #255	; 0xff
    9620:	ldrb	r2, [r1, r0]
    9624:	add	r3, r3, r2, lsl #3
    9628:	ldr	r1, [ip, r3, lsl #2]
    962c:	mov	r2, #1
    9630:	ldrb	r3, [r7]
    9634:	and	r3, r3, #31
    9638:	lsl	r0, r2, r3
    963c:	and	r0, r1, r0
    9640:	cmp	r0, #0
    9644:	bne	9654 <little2_scanPercent+0x2e4>
    9648:	str	r7, [r4]
    964c:	mov	r0, #0
    9650:	b	9730 <little2_scanPercent+0x3c0>
    9654:	add	r7, r7, #2
    9658:	b	9550 <little2_scanPercent+0x1e0>
    965c:	sub	r3, r6, r7
    9660:	cmp	r3, #2
    9664:	bge	9670 <little2_scanPercent+0x300>
    9668:	mvn	r0, #1
    966c:	b	9730 <little2_scanPercent+0x3c0>
    9670:	mov	r2, #1
    9674:	cmp	r2, #0
    9678:	beq	9688 <little2_scanPercent+0x318>
    967c:	str	r7, [r4]
    9680:	mov	r0, #0
    9684:	b	9730 <little2_scanPercent+0x3c0>
    9688:	add	r7, r7, #2
    968c:	b	9550 <little2_scanPercent+0x1e0>
    9690:	sub	r3, r6, r7
    9694:	cmp	r3, #3
    9698:	bge	96a4 <little2_scanPercent+0x334>
    969c:	mvn	r0, #1
    96a0:	b	9730 <little2_scanPercent+0x3c0>
    96a4:	mov	ip, #1
    96a8:	cmp	ip, #0
    96ac:	beq	96bc <little2_scanPercent+0x34c>
    96b0:	str	r7, [r4]
    96b4:	mov	r0, #0
    96b8:	b	9730 <little2_scanPercent+0x3c0>
    96bc:	add	r7, r7, #3
    96c0:	b	9550 <little2_scanPercent+0x1e0>
    96c4:	sub	ip, r6, r7
    96c8:	cmp	ip, #4
    96cc:	bge	96d8 <little2_scanPercent+0x368>
    96d0:	mvn	r0, #1
    96d4:	b	9730 <little2_scanPercent+0x3c0>
    96d8:	mov	ip, #1
    96dc:	cmp	ip, #0
    96e0:	beq	96f0 <little2_scanPercent+0x380>
    96e4:	str	r7, [r4]
    96e8:	mov	r0, #0
    96ec:	b	9730 <little2_scanPercent+0x3c0>
    96f0:	add	r7, r7, #4
    96f4:	b	9550 <little2_scanPercent+0x1e0>
    96f8:	add	r1, r7, #2
    96fc:	str	r1, [r4]
    9700:	mov	r0, #28
    9704:	b	9730 <little2_scanPercent+0x3c0>
    9708:	str	r7, [r4]
    970c:	mov	r0, #0
    9710:	b	9730 <little2_scanPercent+0x3c0>
    9714:	mvn	r0, #0
    9718:	b	9730 <little2_scanPercent+0x3c0>
    971c:	str	r7, [r4]
    9720:	mov	r0, #22
    9724:	b	9730 <little2_scanPercent+0x3c0>
    9728:	str	r7, [r4]
    972c:	mov	r0, #0
    9730:	ldr	r4, [sp, #8]
    9734:	ldr	r5, [sp, #12]
    9738:	ldr	r6, [sp, #16]
    973c:	ldr	r7, [sp, #20]
    9740:	ldr	lr, [sp, #4]
    9744:	add	sp, sp, #24
    9748:	bx	lr
    974c:	.word	0x00000000
    9750:	.word	0x00000500
    9754:	.word	0x00000600

00009758 <little2_scanPoundName>:
    9758:	mov	ip, sp
    975c:	sub	sp, sp, #24
    9760:	str	ip, [sp]
    9764:	str	lr, [sp, #4]
    9768:	str	r4, [sp, #8]
    976c:	str	r5, [sp, #12]
    9770:	str	r6, [sp, #16]
    9774:	str	r7, [sp, #20]
    9778:	mov	r4, r3
    977c:	mov	r5, r2
    9780:	mov	r6, r1
    9784:	mov	r7, r0
    9788:	cmp	r6, r5
    978c:	bne	9798 <little2_scanPoundName+0x40>
    9790:	mvn	r0, #0
    9794:	b	9ae0 <little2_scanPoundName+0x388>
    9798:	ldrb	r3, [r6, #1]
    979c:	cmp	r3, #0
    97a0:	beq	97bc <little2_scanPoundName+0x64>
    97a4:	ldrb	r1, [r6, #1]
    97a8:	and	r0, r1, #255	; 0xff
    97ac:	ldrb	r3, [r6]
    97b0:	and	r1, r3, #255	; 0xff
    97b4:	bl	5988 <unicode_byte_type>
    97b8:	b	97cc <little2_scanPoundName+0x74>
    97bc:	ldrb	r2, [r6]
    97c0:	and	ip, r2, #255	; 0xff
    97c4:	add	r3, r7, ip
    97c8:	ldrb	r0, [r3, #76]	; 0x4c
    97cc:	cmp	r0, #22
    97d0:	bcs	9888 <little2_scanPoundName+0x130>
    97d4:	cmp	r0, #5
    97d8:	beq	9854 <little2_scanPoundName+0xfc>
    97dc:	cmp	r0, #6
    97e0:	beq	9820 <little2_scanPoundName+0xc8>
    97e4:	cmp	r0, #7
    97e8:	bne	98f0 <little2_scanPoundName+0x198>
    97ec:	sub	r2, r5, r6
    97f0:	cmp	r2, #4
    97f4:	bge	9800 <little2_scanPoundName+0xa8>
    97f8:	mvn	r0, #1
    97fc:	b	9ae0 <little2_scanPoundName+0x388>
    9800:	mov	r2, #1
    9804:	cmp	r2, #0
    9808:	beq	9818 <little2_scanPoundName+0xc0>
    980c:	str	r6, [r4]
    9810:	mov	r0, #0
    9814:	b	9ae0 <little2_scanPoundName+0x388>
    9818:	add	r6, r6, #4
    981c:	b	9900 <little2_scanPoundName+0x1a8>
    9820:	sub	r0, r5, r6
    9824:	cmp	r0, #3
    9828:	bge	9834 <little2_scanPoundName+0xdc>
    982c:	mvn	r0, #1
    9830:	b	9ae0 <little2_scanPoundName+0x388>
    9834:	mov	ip, #1
    9838:	cmp	ip, #0
    983c:	beq	984c <little2_scanPoundName+0xf4>
    9840:	str	r6, [r4]
    9844:	mov	r0, #0
    9848:	b	9ae0 <little2_scanPoundName+0x388>
    984c:	add	r6, r6, #3
    9850:	b	9900 <little2_scanPoundName+0x1a8>
    9854:	sub	r3, r5, r6
    9858:	cmp	r3, #2
    985c:	bge	9868 <little2_scanPoundName+0x110>
    9860:	mvn	r0, #1
    9864:	b	9ae0 <little2_scanPoundName+0x388>
    9868:	mov	r0, #1
    986c:	cmp	r0, #0
    9870:	beq	9880 <little2_scanPoundName+0x128>
    9874:	str	r6, [r4]
    9878:	mov	r0, #0
    987c:	b	9ae0 <little2_scanPoundName+0x388>
    9880:	add	r6, r6, #2
    9884:	b	9900 <little2_scanPoundName+0x1a8>
    9888:	cmp	r0, #22
    988c:	beq	98fc <little2_scanPoundName+0x1a4>
    9890:	cmp	r0, #24
    9894:	beq	98fc <little2_scanPoundName+0x1a4>
    9898:	cmp	r0, #29
    989c:	bne	98f0 <little2_scanPoundName+0x198>
    98a0:	ldr	r3, [pc, #596]	; 9afc <little2_scanPoundName+0x3a4>
    98a4:	ldrb	r1, [r6]
    98a8:	and	ip, r1, #255	; 0xff
    98ac:	asr	ip, ip, #5
    98b0:	ldr	r1, [pc, #584]	; 9b00 <little2_scanPoundName+0x3a8>
    98b4:	ldrb	r0, [r6, #1]
    98b8:	and	r0, r0, #255	; 0xff
    98bc:	ldrb	r1, [r1, r0]
    98c0:	add	r2, ip, r1, lsl #3
    98c4:	ldr	r2, [r3, r2, lsl #2]
    98c8:	mov	ip, #1
    98cc:	ldrb	r1, [r6]
    98d0:	and	r0, r1, #31
    98d4:	lsl	r0, ip, r0
    98d8:	and	ip, r2, r0
    98dc:	cmp	ip, #0
    98e0:	bne	98fc <little2_scanPoundName+0x1a4>
    98e4:	str	r6, [r4]
    98e8:	mov	r0, #0
    98ec:	b	9ae0 <little2_scanPoundName+0x388>
    98f0:	str	r6, [r4]
    98f4:	mov	r0, #0
    98f8:	b	9ae0 <little2_scanPoundName+0x388>
    98fc:	add	r6, r6, #2
    9900:	cmp	r6, r5
    9904:	beq	9adc <little2_scanPoundName+0x384>
    9908:	ldrb	ip, [r6, #1]
    990c:	cmp	ip, #0
    9910:	beq	992c <little2_scanPoundName+0x1d4>
    9914:	ldrb	r2, [r6, #1]
    9918:	and	r0, r2, #255	; 0xff
    991c:	ldrb	r1, [r6]
    9920:	and	r1, r1, #255	; 0xff
    9924:	bl	5988 <unicode_byte_type>
    9928:	b	993c <little2_scanPoundName+0x1e4>
    992c:	ldrb	r0, [r6]
    9930:	and	r2, r0, #255	; 0xff
    9934:	add	ip, r7, r2
    9938:	ldrb	r0, [ip, #76]	; 0x4c
    993c:	sub	r0, r0, #5
    9940:	cmp	r0, #32
    9944:	bcs	9ad0 <little2_scanPoundName+0x378>
    9948:	add	pc, pc, r0, lsl #2
    994c:	nop	{0}
    9950:	b	9a28 <little2_scanPoundName+0x2d0>
    9954:	b	9a5c <little2_scanPoundName+0x304>
    9958:	b	9a90 <little2_scanPoundName+0x338>
    995c:	b	9ad0 <little2_scanPoundName+0x378>
    9960:	b	9ac4 <little2_scanPoundName+0x36c>
    9964:	b	9ac4 <little2_scanPoundName+0x36c>
    9968:	b	9ac4 <little2_scanPoundName+0x36c>
    996c:	b	9ad0 <little2_scanPoundName+0x378>
    9970:	b	9ad0 <little2_scanPoundName+0x378>
    9974:	b	9ad0 <little2_scanPoundName+0x378>
    9978:	b	9ad0 <little2_scanPoundName+0x378>
    997c:	b	9ad0 <little2_scanPoundName+0x378>
    9980:	b	9ad0 <little2_scanPoundName+0x378>
    9984:	b	9ad0 <little2_scanPoundName+0x378>
    9988:	b	9ad0 <little2_scanPoundName+0x378>
    998c:	b	9ad0 <little2_scanPoundName+0x378>
    9990:	b	9ac4 <little2_scanPoundName+0x36c>
    9994:	b	9a20 <little2_scanPoundName+0x2c8>
    9998:	b	9ad0 <little2_scanPoundName+0x378>
    999c:	b	9a20 <little2_scanPoundName+0x2c8>
    99a0:	b	9a20 <little2_scanPoundName+0x2c8>
    99a4:	b	9a20 <little2_scanPoundName+0x2c8>
    99a8:	b	9a20 <little2_scanPoundName+0x2c8>
    99ac:	b	9ad0 <little2_scanPoundName+0x378>
    99b0:	b	99d0 <little2_scanPoundName+0x278>
    99b4:	b	9ac4 <little2_scanPoundName+0x36c>
    99b8:	b	9ad0 <little2_scanPoundName+0x378>
    99bc:	b	9ac4 <little2_scanPoundName+0x36c>
    99c0:	b	9ad0 <little2_scanPoundName+0x378>
    99c4:	b	9ad0 <little2_scanPoundName+0x378>
    99c8:	b	9ad0 <little2_scanPoundName+0x378>
    99cc:	b	9ac4 <little2_scanPoundName+0x36c>
    99d0:	ldr	r0, [pc, #292]	; 9afc <little2_scanPoundName+0x3a4>
    99d4:	ldrb	r3, [r6]
    99d8:	and	r3, r3, #255	; 0xff
    99dc:	asr	r1, r3, #5
    99e0:	ldr	r3, [pc, #284]	; 9b04 <little2_scanPoundName+0x3ac>
    99e4:	ldrb	r2, [r6, #1]
    99e8:	and	r2, r2, #255	; 0xff
    99ec:	ldrb	r2, [r3, r2]
    99f0:	add	r2, r1, r2, lsl #3
    99f4:	ldr	r3, [r0, r2, lsl #2]
    99f8:	mov	r1, #1
    99fc:	ldrb	ip, [r6]
    9a00:	and	r2, ip, #31
    9a04:	lsl	ip, r1, r2
    9a08:	and	r2, r3, ip
    9a0c:	cmp	r2, #0
    9a10:	bne	9a20 <little2_scanPoundName+0x2c8>
    9a14:	str	r6, [r4]
    9a18:	mov	r0, #0
    9a1c:	b	9ae0 <little2_scanPoundName+0x388>
    9a20:	add	r6, r6, #2
    9a24:	b	9900 <little2_scanPoundName+0x1a8>
    9a28:	sub	r1, r5, r6
    9a2c:	cmp	r1, #2
    9a30:	bge	9a3c <little2_scanPoundName+0x2e4>
    9a34:	mvn	r0, #1
    9a38:	b	9ae0 <little2_scanPoundName+0x388>
    9a3c:	mov	r1, #1
    9a40:	cmp	r1, #0
    9a44:	beq	9a54 <little2_scanPoundName+0x2fc>
    9a48:	str	r6, [r4]
    9a4c:	mov	r0, #0
    9a50:	b	9ae0 <little2_scanPoundName+0x388>
    9a54:	add	r6, r6, #2
    9a58:	b	9900 <little2_scanPoundName+0x1a8>
    9a5c:	sub	ip, r5, r6
    9a60:	cmp	ip, #3
    9a64:	bge	9a70 <little2_scanPoundName+0x318>
    9a68:	mvn	r0, #1
    9a6c:	b	9ae0 <little2_scanPoundName+0x388>
    9a70:	mov	r2, #1
    9a74:	cmp	r2, #0
    9a78:	beq	9a88 <little2_scanPoundName+0x330>
    9a7c:	str	r6, [r4]
    9a80:	mov	r0, #0
    9a84:	b	9ae0 <little2_scanPoundName+0x388>
    9a88:	add	r6, r6, #3
    9a8c:	b	9900 <little2_scanPoundName+0x1a8>
    9a90:	sub	r2, r5, r6
    9a94:	cmp	r2, #4
    9a98:	bge	9aa4 <little2_scanPoundName+0x34c>
    9a9c:	mvn	r0, #1
    9aa0:	b	9ae0 <little2_scanPoundName+0x388>
    9aa4:	mov	ip, #1
    9aa8:	cmp	ip, #0
    9aac:	beq	9abc <little2_scanPoundName+0x364>
    9ab0:	str	r6, [r4]
    9ab4:	mov	r0, #0
    9ab8:	b	9ae0 <little2_scanPoundName+0x388>
    9abc:	add	r6, r6, #4
    9ac0:	b	9900 <little2_scanPoundName+0x1a8>
    9ac4:	str	r6, [r4]
    9ac8:	mov	r0, #20
    9acc:	b	9ae0 <little2_scanPoundName+0x388>
    9ad0:	str	r6, [r4]
    9ad4:	mov	r0, #0
    9ad8:	b	9ae0 <little2_scanPoundName+0x388>
    9adc:	mvn	r0, #19
    9ae0:	ldr	r4, [sp, #8]
    9ae4:	ldr	r5, [sp, #12]
    9ae8:	ldr	r6, [sp, #16]
    9aec:	ldr	r7, [sp, #20]
    9af0:	ldr	lr, [sp, #4]
    9af4:	add	sp, sp, #24
    9af8:	bx	lr
    9afc:	.word	0x00000000
    9b00:	.word	0x00000500
    9b04:	.word	0x00000600

00009b08 <little2_scanLit>:
    9b08:	mov	ip, sp
    9b0c:	sub	sp, sp, #32
    9b10:	str	ip, [sp]
    9b14:	str	lr, [sp, #4]
    9b18:	str	r4, [sp, #8]
    9b1c:	str	r5, [sp, #12]
    9b20:	str	r6, [sp, #16]
    9b24:	str	r7, [sp, #20]
    9b28:	str	r8, [sp, #24]
    9b2c:	ldr	r6, [ip]
    9b30:	mov	r5, r3
    9b34:	mov	r7, r2
    9b38:	mov	r4, r1
    9b3c:	mov	r8, r0
    9b40:	cmp	r7, r5
    9b44:	beq	9d18 <little2_scanLit+0x210>
    9b48:	ldrb	r2, [r7, #1]
    9b4c:	cmp	r2, #0
    9b50:	beq	9b6c <little2_scanLit+0x64>
    9b54:	ldrb	r3, [r7, #1]
    9b58:	and	r0, r3, #255	; 0xff
    9b5c:	ldrb	r1, [r7]
    9b60:	and	r1, r1, #255	; 0xff
    9b64:	bl	5988 <unicode_byte_type>
    9b68:	b	9b7c <little2_scanLit+0x74>
    9b6c:	ldrb	ip, [r7]
    9b70:	and	r3, ip, #255	; 0xff
    9b74:	add	r3, r4, r3
    9b78:	ldrb	r0, [r3, #76]	; 0x4c
    9b7c:	mov	r1, r0
    9b80:	cmp	r1, #14
    9b84:	bcs	9d10 <little2_scanLit+0x208>
    9b88:	add	pc, pc, r1, lsl #2
    9b8c:	nop	{0}
    9b90:	b	9c64 <little2_scanLit+0x15c>
    9b94:	b	9c64 <little2_scanLit+0x15c>
    9b98:	b	9d10 <little2_scanLit+0x208>
    9b9c:	b	9d10 <little2_scanLit+0x208>
    9ba0:	b	9d10 <little2_scanLit+0x208>
    9ba4:	b	9bc8 <little2_scanLit+0xc0>
    9ba8:	b	9bfc <little2_scanLit+0xf4>
    9bac:	b	9c30 <little2_scanLit+0x128>
    9bb0:	b	9c64 <little2_scanLit+0x15c>
    9bb4:	b	9d10 <little2_scanLit+0x208>
    9bb8:	b	9d10 <little2_scanLit+0x208>
    9bbc:	b	9d10 <little2_scanLit+0x208>
    9bc0:	b	9c70 <little2_scanLit+0x168>
    9bc4:	b	9c70 <little2_scanLit+0x168>
    9bc8:	sub	r2, r5, r7
    9bcc:	cmp	r2, #2
    9bd0:	bge	9bdc <little2_scanLit+0xd4>
    9bd4:	mvn	r0, #1
    9bd8:	b	9d1c <little2_scanLit+0x214>
    9bdc:	mov	r2, #0
    9be0:	cmp	r2, #0
    9be4:	beq	9bf4 <little2_scanLit+0xec>
    9be8:	str	r7, [r6]
    9bec:	mov	r0, #0
    9bf0:	b	9d1c <little2_scanLit+0x214>
    9bf4:	add	r7, r7, #2
    9bf8:	b	9b40 <little2_scanLit+0x38>
    9bfc:	sub	r0, r5, r7
    9c00:	cmp	r0, #3
    9c04:	bge	9c10 <little2_scanLit+0x108>
    9c08:	mvn	r0, #1
    9c0c:	b	9d1c <little2_scanLit+0x214>
    9c10:	mov	r1, #0
    9c14:	cmp	r1, #0
    9c18:	beq	9c28 <little2_scanLit+0x120>
    9c1c:	str	r7, [r6]
    9c20:	mov	r0, #0
    9c24:	b	9d1c <little2_scanLit+0x214>
    9c28:	add	r7, r7, #3
    9c2c:	b	9b40 <little2_scanLit+0x38>
    9c30:	sub	r0, r5, r7
    9c34:	cmp	r0, #4
    9c38:	bge	9c44 <little2_scanLit+0x13c>
    9c3c:	mvn	r0, #1
    9c40:	b	9d1c <little2_scanLit+0x214>
    9c44:	mov	r2, #0
    9c48:	cmp	r2, #0
    9c4c:	beq	9c5c <little2_scanLit+0x154>
    9c50:	str	r7, [r6]
    9c54:	mov	r0, #0
    9c58:	b	9d1c <little2_scanLit+0x214>
    9c5c:	add	r7, r7, #4
    9c60:	b	9b40 <little2_scanLit+0x38>
    9c64:	str	r7, [r6]
    9c68:	mov	r0, #0
    9c6c:	b	9d1c <little2_scanLit+0x214>
    9c70:	add	r7, r7, #2
    9c74:	cmp	r0, r8
    9c78:	bne	9b40 <little2_scanLit+0x38>
    9c7c:	cmp	r7, r5
    9c80:	bne	9c8c <little2_scanLit+0x184>
    9c84:	mvn	r0, #26
    9c88:	b	9d1c <little2_scanLit+0x214>
    9c8c:	str	r7, [r6]
    9c90:	ldrb	ip, [r7, #1]
    9c94:	cmp	ip, #0
    9c98:	beq	9cb4 <little2_scanLit+0x1ac>
    9c9c:	ldrb	r0, [r7, #1]
    9ca0:	and	r0, r0, #255	; 0xff
    9ca4:	ldrb	r1, [r7]
    9ca8:	and	r1, r1, #255	; 0xff
    9cac:	bl	5988 <unicode_byte_type>
    9cb0:	b	9cc4 <little2_scanLit+0x1bc>
    9cb4:	ldrb	r1, [r7]
    9cb8:	and	ip, r1, #255	; 0xff
    9cbc:	add	r0, r4, ip
    9cc0:	ldrb	r0, [r0, #76]	; 0x4c
    9cc4:	cmp	r0, #20
    9cc8:	bcs	9ce8 <little2_scanLit+0x1e0>
    9ccc:	cmp	r0, #9
    9cd0:	beq	9d08 <little2_scanLit+0x200>
    9cd4:	cmp	r0, #10
    9cd8:	beq	9d08 <little2_scanLit+0x200>
    9cdc:	cmp	r0, #11
    9ce0:	beq	9d08 <little2_scanLit+0x200>
    9ce4:	b	9d00 <little2_scanLit+0x1f8>
    9ce8:	cmp	r0, #20
    9cec:	beq	9d08 <little2_scanLit+0x200>
    9cf0:	cmp	r0, #21
    9cf4:	beq	9d08 <little2_scanLit+0x200>
    9cf8:	cmp	r0, #30
    9cfc:	beq	9d08 <little2_scanLit+0x200>
    9d00:	mov	r0, #0
    9d04:	b	9d1c <little2_scanLit+0x214>
    9d08:	mov	r0, #27
    9d0c:	b	9d1c <little2_scanLit+0x214>
    9d10:	add	r7, r7, #2
    9d14:	b	9b40 <little2_scanLit+0x38>
    9d18:	mvn	r0, #0
    9d1c:	ldr	r4, [sp, #8]
    9d20:	ldr	r5, [sp, #12]
    9d24:	ldr	r6, [sp, #16]
    9d28:	ldr	r7, [sp, #20]
    9d2c:	ldr	r8, [sp, #24]
    9d30:	ldr	lr, [sp, #4]
    9d34:	add	sp, sp, #32
    9d38:	bx	lr

00009d3c <little2_prologTok>:
    9d3c:	mov	ip, sp
    9d40:	sub	sp, sp, #40	; 0x28
    9d44:	str	ip, [sp, #4]
    9d48:	str	lr, [sp, #8]
    9d4c:	str	r4, [sp, #16]
    9d50:	str	r5, [sp, #20]
    9d54:	str	r6, [sp, #24]
    9d58:	str	r7, [sp, #28]
    9d5c:	str	r8, [sp, #32]
    9d60:	str	r9, [sp, #36]	; 0x24
    9d64:	mov	r6, r3
    9d68:	mov	r5, r2
    9d6c:	mov	r7, r1
    9d70:	mov	r4, r0
    9d74:	cmp	r7, r5
    9d78:	bne	9d84 <little2_prologTok+0x48>
    9d7c:	mvn	r0, #3
    9d80:	b	a86c <little2_prologTok+0xb30>
    9d84:	mov	r2, #1
    9d88:	cmp	r2, #0
    9d8c:	beq	9db8 <little2_prologTok+0x7c>
    9d90:	sub	r3, r5, r7
    9d94:	and	r2, r3, #1
    9d98:	cmp	r2, #0
    9d9c:	beq	9db8 <little2_prologTok+0x7c>
    9da0:	bic	r0, r3, #1
    9da4:	cmp	r0, #0
    9da8:	bne	9db4 <little2_prologTok+0x78>
    9dac:	mvn	r0, #0
    9db0:	b	a86c <little2_prologTok+0xb30>
    9db4:	add	r5, r7, r0
    9db8:	ldrb	r2, [r7, #1]
    9dbc:	cmp	r2, #0
    9dc0:	beq	9ddc <little2_prologTok+0xa0>
    9dc4:	ldrb	r0, [r7, #1]
    9dc8:	and	r0, r0, #255	; 0xff
    9dcc:	ldrb	ip, [r7]
    9dd0:	and	r1, ip, #255	; 0xff
    9dd4:	bl	5988 <unicode_byte_type>
    9dd8:	b	9dec <little2_prologTok+0xb0>
    9ddc:	ldrb	r0, [r7]
    9de0:	and	r0, r0, #255	; 0xff
    9de4:	add	r1, r4, r0
    9de8:	ldrb	r0, [r1, #76]	; 0x4c
    9dec:	sub	r1, r0, #2
    9df0:	cmp	r1, #35	; 0x23
    9df4:	bcs	a864 <little2_prologTok+0xb28>
    9df8:	add	pc, pc, r1, lsl #2
    9dfc:	nop	{0}
    9e00:	b	9ec4 <little2_prologTok+0x188>
    9e04:	b	a864 <little2_prologTok+0xb28>
    9e08:	b	a0a0 <little2_prologTok+0x364>
    9e0c:	b	a298 <little2_prologTok+0x55c>
    9e10:	b	a2e8 <little2_prologTok+0x5ac>
    9e14:	b	a338 <little2_prologTok+0x5fc>
    9e18:	b	a864 <little2_prologTok+0xb28>
    9e1c:	b	9fd0 <little2_prologTok+0x294>
    9e20:	b	9fe8 <little2_prologTok+0x2ac>
    9e24:	b	a270 <little2_prologTok+0x534>
    9e28:	b	9e8c <little2_prologTok+0x150>
    9e2c:	b	9ea8 <little2_prologTok+0x16c>
    9e30:	b	a864 <little2_prologTok+0xb28>
    9e34:	b	a864 <little2_prologTok+0xb28>
    9e38:	b	a864 <little2_prologTok+0xb28>
    9e3c:	b	a864 <little2_prologTok+0xb28>
    9e40:	b	a864 <little2_prologTok+0xb28>
    9e44:	b	a280 <little2_prologTok+0x544>
    9e48:	b	a090 <little2_prologTok+0x354>
    9e4c:	b	9fe8 <little2_prologTok+0x2ac>
    9e50:	b	a388 <little2_prologTok+0x64c>
    9e54:	b	a394 <little2_prologTok+0x658>
    9e58:	b	a388 <little2_prologTok+0x64c>
    9e5c:	b	a394 <little2_prologTok+0x658>
    9e60:	b	a394 <little2_prologTok+0x658>
    9e64:	b	a394 <little2_prologTok+0x658>
    9e68:	b	a864 <little2_prologTok+0xb28>
    9e6c:	b	a3a0 <little2_prologTok+0x664>
    9e70:	b	a068 <little2_prologTok+0x32c>
    9e74:	b	a13c <little2_prologTok+0x400>
    9e78:	b	a14c <little2_prologTok+0x410>
    9e7c:	b	a864 <little2_prologTok+0xb28>
    9e80:	b	a864 <little2_prologTok+0xb28>
    9e84:	b	a080 <little2_prologTok+0x344>
    9e88:	b	a260 <little2_prologTok+0x524>
    9e8c:	mov	r0, #12
    9e90:	add	r2, r7, #2
    9e94:	str	r6, [sp]
    9e98:	mov	r3, r5
    9e9c:	mov	r1, r4
    9ea0:	bl	9b08 <little2_scanLit>
    9ea4:	b	a86c <little2_prologTok+0xb30>
    9ea8:	mov	r0, #13
    9eac:	add	r2, r7, #2
    9eb0:	str	r6, [sp]
    9eb4:	mov	r3, r5
    9eb8:	mov	r1, r4
    9ebc:	bl	9b08 <little2_scanLit>
    9ec0:	b	a86c <little2_prologTok+0xb30>
    9ec4:	add	r7, r7, #2
    9ec8:	cmp	r7, r5
    9ecc:	bne	9ed8 <little2_prologTok+0x19c>
    9ed0:	mvn	r0, #0
    9ed4:	b	a86c <little2_prologTok+0xb30>
    9ed8:	ldrb	ip, [r7, #1]
    9edc:	cmp	ip, #0
    9ee0:	beq	9efc <little2_prologTok+0x1c0>
    9ee4:	ldrb	ip, [r7, #1]
    9ee8:	and	r0, ip, #255	; 0xff
    9eec:	ldrb	r1, [r7]
    9ef0:	and	r1, r1, #255	; 0xff
    9ef4:	bl	5988 <unicode_byte_type>
    9ef8:	b	9f0c <little2_prologTok+0x1d0>
    9efc:	ldrb	r0, [r7]
    9f00:	and	r2, r0, #255	; 0xff
    9f04:	add	ip, r4, r2
    9f08:	ldrb	r0, [ip, #76]	; 0x4c
    9f0c:	sub	r2, r0, #5
    9f10:	cmp	r2, #25
    9f14:	bcs	9fc4 <little2_prologTok+0x288>
    9f18:	add	pc, pc, r2, lsl #2
    9f1c:	nop	{0}
    9f20:	b	9fb4 <little2_prologTok+0x278>
    9f24:	b	9fb4 <little2_prologTok+0x278>
    9f28:	b	9fb4 <little2_prologTok+0x278>
    9f2c:	b	9fc4 <little2_prologTok+0x288>
    9f30:	b	9fc4 <little2_prologTok+0x288>
    9f34:	b	9fc4 <little2_prologTok+0x288>
    9f38:	b	9fc4 <little2_prologTok+0x288>
    9f3c:	b	9fc4 <little2_prologTok+0x288>
    9f40:	b	9fc4 <little2_prologTok+0x288>
    9f44:	b	9fc4 <little2_prologTok+0x288>
    9f48:	b	9f9c <little2_prologTok+0x260>
    9f4c:	b	9f84 <little2_prologTok+0x248>
    9f50:	b	9fc4 <little2_prologTok+0x288>
    9f54:	b	9fc4 <little2_prologTok+0x288>
    9f58:	b	9fc4 <little2_prologTok+0x288>
    9f5c:	b	9fc4 <little2_prologTok+0x288>
    9f60:	b	9fc4 <little2_prologTok+0x288>
    9f64:	b	9fb4 <little2_prologTok+0x278>
    9f68:	b	9fc4 <little2_prologTok+0x288>
    9f6c:	b	9fb4 <little2_prologTok+0x278>
    9f70:	b	9fc4 <little2_prologTok+0x288>
    9f74:	b	9fc4 <little2_prologTok+0x288>
    9f78:	b	9fc4 <little2_prologTok+0x288>
    9f7c:	b	9fc4 <little2_prologTok+0x288>
    9f80:	b	9fb4 <little2_prologTok+0x278>
    9f84:	add	r1, r7, #2
    9f88:	mov	r3, r6
    9f8c:	mov	r2, r5
    9f90:	mov	r0, r4
    9f94:	bl	6378 <little2_scanDecl>
    9f98:	b	a86c <little2_prologTok+0xb30>
    9f9c:	add	r1, r7, #2
    9fa0:	mov	r3, r6
    9fa4:	mov	r2, r5
    9fa8:	mov	r0, r4
    9fac:	bl	668c <little2_scanPi>
    9fb0:	b	a86c <little2_prologTok+0xb30>
    9fb4:	sub	r3, r7, #2
    9fb8:	str	r3, [r6]
    9fbc:	mov	r0, #29
    9fc0:	b	a86c <little2_prologTok+0xb30>
    9fc4:	str	r7, [r6]
    9fc8:	mov	r0, #0
    9fcc:	b	a86c <little2_prologTok+0xb30>
    9fd0:	add	r0, r7, #2
    9fd4:	cmp	r0, r5
    9fd8:	bne	9fe8 <little2_prologTok+0x2ac>
    9fdc:	str	r5, [r6]
    9fe0:	mvn	r0, #14
    9fe4:	b	a86c <little2_prologTok+0xb30>
    9fe8:	add	r7, r7, #2
    9fec:	cmp	r7, r5
    9ff0:	beq	a05c <little2_prologTok+0x320>
    9ff4:	ldrb	r2, [r7, #1]
    9ff8:	cmp	r2, #0
    9ffc:	beq	a018 <little2_prologTok+0x2dc>
    a000:	ldrb	r0, [r7, #1]
    a004:	and	r0, r0, #255	; 0xff
    a008:	ldrb	r3, [r7]
    a00c:	and	r1, r3, #255	; 0xff
    a010:	bl	5988 <unicode_byte_type>
    a014:	b	a028 <little2_prologTok+0x2ec>
    a018:	ldrb	r2, [r7]
    a01c:	and	r1, r2, #255	; 0xff
    a020:	add	r3, r4, r1
    a024:	ldrb	r0, [r3, #76]	; 0x4c
    a028:	cmp	r0, #9
    a02c:	beq	a044 <little2_prologTok+0x308>
    a030:	cmp	r0, #10
    a034:	beq	9fe8 <little2_prologTok+0x2ac>
    a038:	cmp	r0, #21
    a03c:	beq	9fe8 <little2_prologTok+0x2ac>
    a040:	b	a050 <little2_prologTok+0x314>
    a044:	add	r2, r7, #2
    a048:	cmp	r2, r5
    a04c:	bne	9fe8 <little2_prologTok+0x2ac>
    a050:	str	r7, [r6]
    a054:	mov	r0, #15
    a058:	b	a86c <little2_prologTok+0xb30>
    a05c:	str	r7, [r6]
    a060:	mov	r0, #15
    a064:	b	a86c <little2_prologTok+0xb30>
    a068:	add	r1, r7, #2
    a06c:	mov	r3, r6
    a070:	mov	r2, r5
    a074:	mov	r0, r4
    a078:	bl	9370 <little2_scanPercent>
    a07c:	b	a86c <little2_prologTok+0xb30>
    a080:	add	ip, r7, #2
    a084:	str	ip, [r6]
    a088:	mov	r0, #38	; 0x26
    a08c:	b	a86c <little2_prologTok+0xb30>
    a090:	add	r2, r7, #2
    a094:	str	r2, [r6]
    a098:	mov	r0, #25
    a09c:	b	a86c <little2_prologTok+0xb30>
    a0a0:	add	r3, r7, #2
    a0a4:	cmp	r3, r5
    a0a8:	bne	a0b4 <little2_prologTok+0x378>
    a0ac:	mvn	r0, #25
    a0b0:	b	a86c <little2_prologTok+0xb30>
    a0b4:	ldrb	ip, [r3, #1]
    a0b8:	cmp	ip, #0
    a0bc:	bne	a0d4 <little2_prologTok+0x398>
    a0c0:	ldrb	r0, [r3]
    a0c4:	cmp	r0, #93	; 0x5d
    a0c8:	moveq	ip, #1
    a0cc:	movne	ip, #0
    a0d0:	b	a0d8 <little2_prologTok+0x39c>
    a0d4:	mov	ip, #0
    a0d8:	cmp	ip, #0
    a0dc:	beq	a130 <little2_prologTok+0x3f4>
    a0e0:	add	ip, r3, #2
    a0e4:	cmp	ip, r5
    a0e8:	bne	a0f4 <little2_prologTok+0x3b8>
    a0ec:	mvn	r0, #0
    a0f0:	b	a86c <little2_prologTok+0xb30>
    a0f4:	ldrb	ip, [r3, #3]
    a0f8:	cmp	ip, #0
    a0fc:	bne	a114 <little2_prologTok+0x3d8>
    a100:	ldrb	ip, [r3, #2]
    a104:	cmp	ip, #62	; 0x3e
    a108:	moveq	r1, #1
    a10c:	movne	r1, #0
    a110:	b	a118 <little2_prologTok+0x3dc>
    a114:	mov	r1, #0
    a118:	cmp	r1, #0
    a11c:	beq	a130 <little2_prologTok+0x3f4>
    a120:	add	r0, r3, #4
    a124:	str	r0, [r6]
    a128:	mov	r0, #34	; 0x22
    a12c:	b	a86c <little2_prologTok+0xb30>
    a130:	str	r3, [r6]
    a134:	mov	r0, #26
    a138:	b	a86c <little2_prologTok+0xb30>
    a13c:	add	ip, r7, #2
    a140:	str	ip, [r6]
    a144:	mov	r0, #23
    a148:	b	a86c <little2_prologTok+0xb30>
    a14c:	add	r7, r7, #2
    a150:	cmp	r7, r5
    a154:	bne	a160 <little2_prologTok+0x424>
    a158:	mvn	r0, #23
    a15c:	b	a86c <little2_prologTok+0xb30>
    a160:	ldrb	ip, [r7, #1]
    a164:	cmp	ip, #0
    a168:	beq	a184 <little2_prologTok+0x448>
    a16c:	ldrb	r0, [r7, #1]
    a170:	and	r0, r0, #255	; 0xff
    a174:	ldrb	r1, [r7]
    a178:	and	r1, r1, #255	; 0xff
    a17c:	bl	5988 <unicode_byte_type>
    a180:	b	a194 <little2_prologTok+0x458>
    a184:	ldrb	r0, [r7]
    a188:	and	r1, r0, #255	; 0xff
    a18c:	add	ip, r4, r1
    a190:	ldrb	r0, [ip, #76]	; 0x4c
    a194:	sub	r0, r0, #9
    a198:	cmp	r0, #28
    a19c:	bcs	a254 <little2_prologTok+0x518>
    a1a0:	add	pc, pc, r0, lsl #2
    a1a4:	nop	{0}
    a1a8:	b	a248 <little2_prologTok+0x50c>
    a1ac:	b	a248 <little2_prologTok+0x50c>
    a1b0:	b	a248 <little2_prologTok+0x50c>
    a1b4:	b	a254 <little2_prologTok+0x518>
    a1b8:	b	a254 <little2_prologTok+0x518>
    a1bc:	b	a254 <little2_prologTok+0x518>
    a1c0:	b	a228 <little2_prologTok+0x4ec>
    a1c4:	b	a254 <little2_prologTok+0x518>
    a1c8:	b	a254 <little2_prologTok+0x518>
    a1cc:	b	a254 <little2_prologTok+0x518>
    a1d0:	b	a254 <little2_prologTok+0x518>
    a1d4:	b	a254 <little2_prologTok+0x518>
    a1d8:	b	a248 <little2_prologTok+0x50c>
    a1dc:	b	a254 <little2_prologTok+0x518>
    a1e0:	b	a254 <little2_prologTok+0x518>
    a1e4:	b	a254 <little2_prologTok+0x518>
    a1e8:	b	a254 <little2_prologTok+0x518>
    a1ec:	b	a254 <little2_prologTok+0x518>
    a1f0:	b	a254 <little2_prologTok+0x518>
    a1f4:	b	a254 <little2_prologTok+0x518>
    a1f8:	b	a254 <little2_prologTok+0x518>
    a1fc:	b	a254 <little2_prologTok+0x518>
    a200:	b	a254 <little2_prologTok+0x518>
    a204:	b	a248 <little2_prologTok+0x50c>
    a208:	b	a218 <little2_prologTok+0x4dc>
    a20c:	b	a238 <little2_prologTok+0x4fc>
    a210:	b	a248 <little2_prologTok+0x50c>
    a214:	b	a248 <little2_prologTok+0x50c>
    a218:	add	r1, r7, #2
    a21c:	str	r1, [r6]
    a220:	mov	r0, #36	; 0x24
    a224:	b	a86c <little2_prologTok+0xb30>
    a228:	add	r1, r7, #2
    a22c:	str	r1, [r6]
    a230:	mov	r0, #35	; 0x23
    a234:	b	a86c <little2_prologTok+0xb30>
    a238:	add	r3, r7, #2
    a23c:	str	r3, [r6]
    a240:	mov	r0, #37	; 0x25
    a244:	b	a86c <little2_prologTok+0xb30>
    a248:	str	r7, [r6]
    a24c:	mov	r0, #24
    a250:	b	a86c <little2_prologTok+0xb30>
    a254:	str	r7, [r6]
    a258:	mov	r0, #0
    a25c:	b	a86c <little2_prologTok+0xb30>
    a260:	add	r2, r7, #2
    a264:	str	r2, [r6]
    a268:	mov	r0, #21
    a26c:	b	a86c <little2_prologTok+0xb30>
    a270:	add	ip, r7, #2
    a274:	str	ip, [r6]
    a278:	mov	r0, #17
    a27c:	b	a86c <little2_prologTok+0xb30>
    a280:	add	r1, r7, #2
    a284:	mov	r3, r6
    a288:	mov	r2, r5
    a28c:	mov	r0, r4
    a290:	bl	9758 <little2_scanPoundName>
    a294:	b	a86c <little2_prologTok+0xb30>
    a298:	sub	r3, r5, r7
    a29c:	cmp	r3, #2
    a2a0:	bge	a2ac <little2_prologTok+0x570>
    a2a4:	mvn	r0, #1
    a2a8:	b	a86c <little2_prologTok+0xb30>
    a2ac:	mov	r1, #0
    a2b0:	cmp	r1, #0
    a2b4:	beq	a2c4 <little2_prologTok+0x588>
    a2b8:	add	r7, r7, #2
    a2bc:	mov	r8, #18
    a2c0:	b	a43c <little2_prologTok+0x700>
    a2c4:	mov	r2, #0
    a2c8:	cmp	r2, #0
    a2cc:	beq	a2dc <little2_prologTok+0x5a0>
    a2d0:	add	r7, r7, #2
    a2d4:	mov	r8, #19
    a2d8:	b	a43c <little2_prologTok+0x700>
    a2dc:	str	r7, [r6]
    a2e0:	mov	r0, #0
    a2e4:	b	a86c <little2_prologTok+0xb30>
    a2e8:	sub	ip, r5, r7
    a2ec:	cmp	ip, #3
    a2f0:	bge	a2fc <little2_prologTok+0x5c0>
    a2f4:	mvn	r0, #1
    a2f8:	b	a86c <little2_prologTok+0xb30>
    a2fc:	mov	r0, #0
    a300:	cmp	r0, #0
    a304:	beq	a314 <little2_prologTok+0x5d8>
    a308:	add	r7, r7, #3
    a30c:	mov	r8, #18
    a310:	b	a43c <little2_prologTok+0x700>
    a314:	mov	r3, #0
    a318:	cmp	r3, #0
    a31c:	beq	a32c <little2_prologTok+0x5f0>
    a320:	add	r7, r7, #3
    a324:	mov	r8, #19
    a328:	b	a43c <little2_prologTok+0x700>
    a32c:	str	r7, [r6]
    a330:	mov	r0, #0
    a334:	b	a86c <little2_prologTok+0xb30>
    a338:	sub	r0, r5, r7
    a33c:	cmp	r0, #4
    a340:	bge	a34c <little2_prologTok+0x610>
    a344:	mvn	r0, #1
    a348:	b	a86c <little2_prologTok+0xb30>
    a34c:	mov	r0, #0
    a350:	cmp	r0, #0
    a354:	beq	a364 <little2_prologTok+0x628>
    a358:	add	r7, r7, #4
    a35c:	mov	r8, #18
    a360:	b	a43c <little2_prologTok+0x700>
    a364:	mov	r3, #0
    a368:	cmp	r3, #0
    a36c:	beq	a37c <little2_prologTok+0x640>
    a370:	add	r7, r7, #4
    a374:	mov	r8, #19
    a378:	b	a43c <little2_prologTok+0x700>
    a37c:	str	r7, [r6]
    a380:	mov	r0, #0
    a384:	b	a86c <little2_prologTok+0xb30>
    a388:	mov	r8, #18
    a38c:	add	r7, r7, #2
    a390:	b	a43c <little2_prologTok+0x700>
    a394:	mov	r8, #19
    a398:	add	r7, r7, #2
    a39c:	b	a43c <little2_prologTok+0x700>
    a3a0:	ldr	r3, [pc, #1256]	; a890 <little2_prologTok+0xb54>
    a3a4:	ldrb	r1, [r7]
    a3a8:	and	r0, r1, #255	; 0xff
    a3ac:	asr	r1, r0, #5
    a3b0:	ldr	ip, [pc, #1244]	; a894 <little2_prologTok+0xb58>
    a3b4:	ldrb	r0, [r7, #1]
    a3b8:	and	r0, r0, #255	; 0xff
    a3bc:	ldrb	r0, [ip, r0]
    a3c0:	add	ip, r1, r0, lsl #3
    a3c4:	ldr	r2, [r3, ip, lsl #2]
    a3c8:	mov	r1, #1
    a3cc:	ldrb	r3, [r7]
    a3d0:	and	ip, r3, #31
    a3d4:	lsl	r1, r1, ip
    a3d8:	and	r0, r2, r1
    a3dc:	cmp	r0, #0
    a3e0:	beq	a3f0 <little2_prologTok+0x6b4>
    a3e4:	add	r7, r7, #2
    a3e8:	mov	r8, #18
    a3ec:	b	a43c <little2_prologTok+0x700>
    a3f0:	ldr	r0, [pc, #1176]	; a890 <little2_prologTok+0xb54>
    a3f4:	ldrb	r3, [r7]
    a3f8:	and	r2, r3, #255	; 0xff
    a3fc:	asr	ip, r2, #5
    a400:	ldr	r1, [pc, #1168]	; a898 <little2_prologTok+0xb5c>
    a404:	ldrb	r2, [r7, #1]
    a408:	and	r2, r2, #255	; 0xff
    a40c:	ldrb	r1, [r1, r2]
    a410:	add	r2, ip, r1, lsl #3
    a414:	ldr	r3, [r0, r2, lsl #2]
    a418:	mov	r2, #1
    a41c:	ldrb	r0, [r7]
    a420:	and	r0, r0, #31
    a424:	lsl	r2, r2, r0
    a428:	and	r3, r3, r2
    a42c:	cmp	r3, #0
    a430:	beq	a864 <little2_prologTok+0xb28>
    a434:	add	r7, r7, #2
    a438:	mov	r8, #19
    a43c:	cmp	r7, r5
    a440:	beq	a85c <little2_prologTok+0xb20>
    a444:	ldrb	r2, [r7, #1]
    a448:	cmp	r2, #0
    a44c:	beq	a468 <little2_prologTok+0x72c>
    a450:	ldrb	r1, [r7, #1]
    a454:	and	r0, r1, #255	; 0xff
    a458:	ldrb	r2, [r7]
    a45c:	and	r1, r2, #255	; 0xff
    a460:	bl	5988 <unicode_byte_type>
    a464:	b	a478 <little2_prologTok+0x73c>
    a468:	ldrb	r3, [r7]
    a46c:	and	r1, r3, #255	; 0xff
    a470:	add	r1, r4, r1
    a474:	ldrb	r0, [r1, #76]	; 0x4c
    a478:	sub	ip, r0, #5
    a47c:	cmp	ip, #32
    a480:	bcs	a850 <little2_prologTok+0xb14>
    a484:	add	pc, pc, ip, lsl #2
    a488:	nop	{0}
    a48c:	b	a564 <little2_prologTok+0x828>
    a490:	b	a598 <little2_prologTok+0x85c>
    a494:	b	a5cc <little2_prologTok+0x890>
    a498:	b	a850 <little2_prologTok+0xb14>
    a49c:	b	a600 <little2_prologTok+0x8c4>
    a4a0:	b	a600 <little2_prologTok+0x8c4>
    a4a4:	b	a600 <little2_prologTok+0x8c4>
    a4a8:	b	a850 <little2_prologTok+0xb14>
    a4ac:	b	a850 <little2_prologTok+0xb14>
    a4b0:	b	a850 <little2_prologTok+0xb14>
    a4b4:	b	a82c <little2_prologTok+0xaf0>
    a4b8:	b	a850 <little2_prologTok+0xb14>
    a4bc:	b	a850 <little2_prologTok+0xb14>
    a4c0:	b	a850 <little2_prologTok+0xb14>
    a4c4:	b	a850 <little2_prologTok+0xb14>
    a4c8:	b	a600 <little2_prologTok+0x8c4>
    a4cc:	b	a600 <little2_prologTok+0x8c4>
    a4d0:	b	a55c <little2_prologTok+0x820>
    a4d4:	b	a60c <little2_prologTok+0x8d0>
    a4d8:	b	a55c <little2_prologTok+0x820>
    a4dc:	b	a55c <little2_prologTok+0x820>
    a4e0:	b	a55c <little2_prologTok+0x820>
    a4e4:	b	a55c <little2_prologTok+0x820>
    a4e8:	b	a850 <little2_prologTok+0xb14>
    a4ec:	b	a50c <little2_prologTok+0x7d0>
    a4f0:	b	a600 <little2_prologTok+0x8c4>
    a4f4:	b	a850 <little2_prologTok+0xb14>
    a4f8:	b	a600 <little2_prologTok+0x8c4>
    a4fc:	b	a808 <little2_prologTok+0xacc>
    a500:	b	a7e4 <little2_prologTok+0xaa8>
    a504:	b	a600 <little2_prologTok+0x8c4>
    a508:	b	a600 <little2_prologTok+0x8c4>
    a50c:	ldr	r9, [pc, #892]	; a890 <little2_prologTok+0xb54>
    a510:	ldrb	ip, [r7]
    a514:	and	r2, ip, #255	; 0xff
    a518:	asr	r2, r2, #5
    a51c:	ldr	r3, [pc, #884]	; a898 <little2_prologTok+0xb5c>
    a520:	ldrb	r0, [r7, #1]
    a524:	and	r1, r0, #255	; 0xff
    a528:	ldrb	r3, [r3, r1]
    a52c:	add	r2, r2, r3, lsl #3
    a530:	ldr	r1, [r9, r2, lsl #2]
    a534:	mov	r2, #1
    a538:	ldrb	ip, [r7]
    a53c:	and	r0, ip, #31
    a540:	lsl	ip, r2, r0
    a544:	and	r3, r1, ip
    a548:	cmp	r3, #0
    a54c:	bne	a55c <little2_prologTok+0x820>
    a550:	str	r7, [r6]
    a554:	mov	r0, #0
    a558:	b	a86c <little2_prologTok+0xb30>
    a55c:	add	r7, r7, #2
    a560:	b	a43c <little2_prologTok+0x700>
    a564:	sub	ip, r5, r7
    a568:	cmp	ip, #2
    a56c:	bge	a578 <little2_prologTok+0x83c>
    a570:	mvn	r0, #1
    a574:	b	a86c <little2_prologTok+0xb30>
    a578:	mov	r1, #1
    a57c:	cmp	r1, #0
    a580:	beq	a590 <little2_prologTok+0x854>
    a584:	str	r7, [r6]
    a588:	mov	r0, #0
    a58c:	b	a86c <little2_prologTok+0xb30>
    a590:	add	r7, r7, #2
    a594:	b	a43c <little2_prologTok+0x700>
    a598:	sub	r0, r5, r7
    a59c:	cmp	r0, #3
    a5a0:	bge	a5ac <little2_prologTok+0x870>
    a5a4:	mvn	r0, #1
    a5a8:	b	a86c <little2_prologTok+0xb30>
    a5ac:	mov	r3, #1
    a5b0:	cmp	r3, #0
    a5b4:	beq	a5c4 <little2_prologTok+0x888>
    a5b8:	str	r7, [r6]
    a5bc:	mov	r0, #0
    a5c0:	b	a86c <little2_prologTok+0xb30>
    a5c4:	add	r7, r7, #3
    a5c8:	b	a43c <little2_prologTok+0x700>
    a5cc:	sub	r1, r5, r7
    a5d0:	cmp	r1, #4
    a5d4:	bge	a5e0 <little2_prologTok+0x8a4>
    a5d8:	mvn	r0, #1
    a5dc:	b	a86c <little2_prologTok+0xb30>
    a5e0:	mov	r1, #1
    a5e4:	cmp	r1, #0
    a5e8:	beq	a5f8 <little2_prologTok+0x8bc>
    a5ec:	str	r7, [r6]
    a5f0:	mov	r0, #0
    a5f4:	b	a86c <little2_prologTok+0xb30>
    a5f8:	add	r7, r7, #4
    a5fc:	b	a43c <little2_prologTok+0x700>
    a600:	str	r7, [r6]
    a604:	mov	r0, r8
    a608:	b	a86c <little2_prologTok+0xb30>
    a60c:	add	r7, r7, #2
    a610:	cmp	r8, #18
    a614:	beq	a628 <little2_prologTok+0x8ec>
    a618:	cmp	r8, #41	; 0x29
    a61c:	bne	a43c <little2_prologTok+0x700>
    a620:	mov	r8, #19
    a624:	b	a43c <little2_prologTok+0x700>
    a628:	cmp	r7, r5
    a62c:	bne	a638 <little2_prologTok+0x8fc>
    a630:	mvn	r0, #0
    a634:	b	a86c <little2_prologTok+0xb30>
    a638:	mov	r8, #41	; 0x29
    a63c:	ldrb	r1, [r7, #1]
    a640:	cmp	r1, #0
    a644:	beq	a660 <little2_prologTok+0x924>
    a648:	ldrb	r2, [r7, #1]
    a64c:	and	r0, r2, #255	; 0xff
    a650:	ldrb	r3, [r7]
    a654:	and	r1, r3, #255	; 0xff
    a658:	bl	5988 <unicode_byte_type>
    a65c:	b	a670 <little2_prologTok+0x934>
    a660:	ldrb	r0, [r7]
    a664:	and	r2, r0, #255	; 0xff
    a668:	add	ip, r4, r2
    a66c:	ldrb	r0, [ip, #76]	; 0x4c
    a670:	sub	r1, r0, #5
    a674:	cmp	r1, #25
    a678:	bcs	a7dc <little2_prologTok+0xaa0>
    a67c:	add	pc, pc, r1, lsl #2
    a680:	nop	{0}
    a684:	b	a740 <little2_prologTok+0xa04>
    a688:	b	a774 <little2_prologTok+0xa38>
    a68c:	b	a7a8 <little2_prologTok+0xa6c>
    a690:	b	a7dc <little2_prologTok+0xaa0>
    a694:	b	a7dc <little2_prologTok+0xaa0>
    a698:	b	a7dc <little2_prologTok+0xaa0>
    a69c:	b	a7dc <little2_prologTok+0xaa0>
    a6a0:	b	a7dc <little2_prologTok+0xaa0>
    a6a4:	b	a7dc <little2_prologTok+0xaa0>
    a6a8:	b	a7dc <little2_prologTok+0xaa0>
    a6ac:	b	a7dc <little2_prologTok+0xaa0>
    a6b0:	b	a7dc <little2_prologTok+0xaa0>
    a6b4:	b	a7dc <little2_prologTok+0xaa0>
    a6b8:	b	a7dc <little2_prologTok+0xaa0>
    a6bc:	b	a7dc <little2_prologTok+0xaa0>
    a6c0:	b	a7dc <little2_prologTok+0xaa0>
    a6c4:	b	a7dc <little2_prologTok+0xaa0>
    a6c8:	b	a738 <little2_prologTok+0x9fc>
    a6cc:	b	a7dc <little2_prologTok+0xaa0>
    a6d0:	b	a738 <little2_prologTok+0x9fc>
    a6d4:	b	a738 <little2_prologTok+0x9fc>
    a6d8:	b	a738 <little2_prologTok+0x9fc>
    a6dc:	b	a738 <little2_prologTok+0x9fc>
    a6e0:	b	a7dc <little2_prologTok+0xaa0>
    a6e4:	b	a6e8 <little2_prologTok+0x9ac>
    a6e8:	ldr	ip, [pc, #416]	; a890 <little2_prologTok+0xb54>
    a6ec:	ldrb	r0, [r7]
    a6f0:	and	r2, r0, #255	; 0xff
    a6f4:	asr	r1, r2, #5
    a6f8:	ldr	r0, [pc, #408]	; a898 <little2_prologTok+0xb5c>
    a6fc:	ldrb	r3, [r7, #1]
    a700:	and	r2, r3, #255	; 0xff
    a704:	ldrb	r2, [r0, r2]
    a708:	add	r0, r1, r2, lsl #3
    a70c:	ldr	r2, [ip, r0, lsl #2]
    a710:	mov	ip, #1
    a714:	ldrb	r0, [r7]
    a718:	and	r3, r0, #31
    a71c:	lsl	r3, ip, r3
    a720:	and	r2, r2, r3
    a724:	cmp	r2, #0
    a728:	bne	a738 <little2_prologTok+0x9fc>
    a72c:	str	r7, [r6]
    a730:	mov	r0, #0
    a734:	b	a86c <little2_prologTok+0xb30>
    a738:	add	r7, r7, #2
    a73c:	b	a43c <little2_prologTok+0x700>
    a740:	sub	r0, r5, r7
    a744:	cmp	r0, #2
    a748:	bge	a754 <little2_prologTok+0xa18>
    a74c:	mvn	r0, #1
    a750:	b	a86c <little2_prologTok+0xb30>
    a754:	mov	r0, #1
    a758:	cmp	r0, #0
    a75c:	beq	a76c <little2_prologTok+0xa30>
    a760:	str	r7, [r6]
    a764:	mov	r0, #0
    a768:	b	a86c <little2_prologTok+0xb30>
    a76c:	add	r7, r7, #2
    a770:	b	a43c <little2_prologTok+0x700>
    a774:	sub	ip, r5, r7
    a778:	cmp	ip, #3
    a77c:	bge	a788 <little2_prologTok+0xa4c>
    a780:	mvn	r0, #1
    a784:	b	a86c <little2_prologTok+0xb30>
    a788:	mov	r3, #1
    a78c:	cmp	r3, #0
    a790:	beq	a7a0 <little2_prologTok+0xa64>
    a794:	str	r7, [r6]
    a798:	mov	r0, #0
    a79c:	b	a86c <little2_prologTok+0xb30>
    a7a0:	add	r7, r7, #3
    a7a4:	b	a43c <little2_prologTok+0x700>
    a7a8:	sub	ip, r5, r7
    a7ac:	cmp	ip, #4
    a7b0:	bge	a7bc <little2_prologTok+0xa80>
    a7b4:	mvn	r0, #1
    a7b8:	b	a86c <little2_prologTok+0xb30>
    a7bc:	mov	r3, #1
    a7c0:	cmp	r3, #0
    a7c4:	beq	a7d4 <little2_prologTok+0xa98>
    a7c8:	str	r7, [r6]
    a7cc:	mov	r0, #0
    a7d0:	b	a86c <little2_prologTok+0xb30>
    a7d4:	add	r7, r7, #4
    a7d8:	b	a43c <little2_prologTok+0x700>
    a7dc:	mov	r8, #19
    a7e0:	b	a43c <little2_prologTok+0x700>
    a7e4:	cmp	r8, #19
    a7e8:	bne	a7f8 <little2_prologTok+0xabc>
    a7ec:	str	r7, [r6]
    a7f0:	mov	r0, #0
    a7f4:	b	a86c <little2_prologTok+0xb30>
    a7f8:	add	r1, r7, #2
    a7fc:	str	r1, [r6]
    a800:	mov	r0, #32
    a804:	b	a86c <little2_prologTok+0xb30>
    a808:	cmp	r8, #19
    a80c:	bne	a81c <little2_prologTok+0xae0>
    a810:	str	r7, [r6]
    a814:	mov	r0, #0
    a818:	b	a86c <little2_prologTok+0xb30>
    a81c:	add	r1, r7, #2
    a820:	str	r1, [r6]
    a824:	mov	r0, #31
    a828:	b	a86c <little2_prologTok+0xb30>
    a82c:	cmp	r8, #19
    a830:	bne	a840 <little2_prologTok+0xb04>
    a834:	str	r7, [r6]
    a838:	mov	r0, #0
    a83c:	b	a86c <little2_prologTok+0xb30>
    a840:	add	r3, r7, #2
    a844:	str	r3, [r6]
    a848:	mov	r0, #30
    a84c:	b	a86c <little2_prologTok+0xb30>
    a850:	str	r7, [r6]
    a854:	mov	r0, #0
    a858:	b	a86c <little2_prologTok+0xb30>
    a85c:	rsb	r0, r8, #0
    a860:	b	a86c <little2_prologTok+0xb30>
    a864:	str	r7, [r6]
    a868:	mov	r0, #0
    a86c:	ldr	r4, [sp, #16]
    a870:	ldr	r5, [sp, #20]
    a874:	ldr	r6, [sp, #24]
    a878:	ldr	r7, [sp, #28]
    a87c:	ldr	r8, [sp, #32]
    a880:	ldr	r9, [sp, #36]	; 0x24
    a884:	ldr	lr, [sp, #8]
    a888:	add	sp, sp, #40	; 0x28
    a88c:	bx	lr
    a890:	.word	0x00000000
    a894:	.word	0x00000500
    a898:	.word	0x00000600

0000a89c <little2_attributeValueTok>:
    a89c:	mov	ip, sp
    a8a0:	sub	sp, sp, #32
    a8a4:	str	ip, [sp]
    a8a8:	str	lr, [sp, #4]
    a8ac:	str	r4, [sp, #8]
    a8b0:	str	r5, [sp, #12]
    a8b4:	str	r6, [sp, #16]
    a8b8:	str	r7, [sp, #20]
    a8bc:	str	r8, [sp, #24]
    a8c0:	mov	r4, r3
    a8c4:	mov	r5, r2
    a8c8:	mov	r6, r1
    a8cc:	mov	r7, r0
    a8d0:	cmp	r6, r5
    a8d4:	bne	a8e0 <little2_attributeValueTok+0x44>
    a8d8:	mvn	r0, #3
    a8dc:	b	aaa0 <little2_attributeValueTok+0x204>
    a8e0:	mov	r8, r6
    a8e4:	cmp	r6, r5
    a8e8:	beq	aa98 <little2_attributeValueTok+0x1fc>
    a8ec:	ldrb	r1, [r6, #1]
    a8f0:	cmp	r1, #0
    a8f4:	beq	a910 <little2_attributeValueTok+0x74>
    a8f8:	ldrb	r2, [r6, #1]
    a8fc:	and	r0, r2, #255	; 0xff
    a900:	ldrb	ip, [r6]
    a904:	and	r1, ip, #255	; 0xff
    a908:	bl	5988 <unicode_byte_type>
    a90c:	b	a920 <little2_attributeValueTok+0x84>
    a910:	ldrb	r0, [r6]
    a914:	and	r1, r0, #255	; 0xff
    a918:	add	r1, r7, r1
    a91c:	ldrb	r0, [r1, #76]	; 0x4c
    a920:	sub	r3, r0, #2
    a924:	cmp	r3, #20
    a928:	bcs	aa90 <little2_attributeValueTok+0x1f4>
    a92c:	add	pc, pc, r3, lsl #2
    a930:	nop	{0}
    a934:	b	a9c8 <little2_attributeValueTok+0x12c>
    a938:	b	a99c <little2_attributeValueTok+0x100>
    a93c:	b	aa90 <little2_attributeValueTok+0x1f4>
    a940:	b	a984 <little2_attributeValueTok+0xe8>
    a944:	b	a98c <little2_attributeValueTok+0xf0>
    a948:	b	a994 <little2_attributeValueTok+0xf8>
    a94c:	b	aa90 <little2_attributeValueTok+0x1f4>
    a950:	b	a9f8 <little2_attributeValueTok+0x15c>
    a954:	b	a9d4 <little2_attributeValueTok+0x138>
    a958:	b	aa90 <little2_attributeValueTok+0x1f4>
    a95c:	b	aa90 <little2_attributeValueTok+0x1f4>
    a960:	b	aa90 <little2_attributeValueTok+0x1f4>
    a964:	b	aa90 <little2_attributeValueTok+0x1f4>
    a968:	b	aa90 <little2_attributeValueTok+0x1f4>
    a96c:	b	aa90 <little2_attributeValueTok+0x1f4>
    a970:	b	aa90 <little2_attributeValueTok+0x1f4>
    a974:	b	aa90 <little2_attributeValueTok+0x1f4>
    a978:	b	aa90 <little2_attributeValueTok+0x1f4>
    a97c:	b	aa90 <little2_attributeValueTok+0x1f4>
    a980:	b	aa6c <little2_attributeValueTok+0x1d0>
    a984:	add	r6, r6, #2
    a988:	b	a8e4 <little2_attributeValueTok+0x48>
    a98c:	add	r6, r6, #3
    a990:	b	a8e4 <little2_attributeValueTok+0x48>
    a994:	add	r6, r6, #4
    a998:	b	a8e4 <little2_attributeValueTok+0x48>
    a99c:	cmp	r6, r8
    a9a0:	bne	a9bc <little2_attributeValueTok+0x120>
    a9a4:	add	r1, r6, #2
    a9a8:	mov	r3, r4
    a9ac:	mov	r2, r5
    a9b0:	mov	r0, r7
    a9b4:	bl	7790 <little2_scanRef>
    a9b8:	b	aaa0 <little2_attributeValueTok+0x204>
    a9bc:	str	r6, [r4]
    a9c0:	mov	r0, #6
    a9c4:	b	aaa0 <little2_attributeValueTok+0x204>
    a9c8:	str	r6, [r4]
    a9cc:	mov	r0, #0
    a9d0:	b	aaa0 <little2_attributeValueTok+0x204>
    a9d4:	cmp	r6, r8
    a9d8:	bne	a9ec <little2_attributeValueTok+0x150>
    a9dc:	add	r1, r6, #2
    a9e0:	str	r1, [r4]
    a9e4:	mov	r0, #7
    a9e8:	b	aaa0 <little2_attributeValueTok+0x204>
    a9ec:	str	r6, [r4]
    a9f0:	mov	r0, #6
    a9f4:	b	aaa0 <little2_attributeValueTok+0x204>
    a9f8:	cmp	r6, r8
    a9fc:	bne	aa60 <little2_attributeValueTok+0x1c4>
    aa00:	add	r6, r6, #2
    aa04:	cmp	r6, r5
    aa08:	bne	aa14 <little2_attributeValueTok+0x178>
    aa0c:	mvn	r0, #2
    aa10:	b	aaa0 <little2_attributeValueTok+0x204>
    aa14:	ldrb	r0, [r6, #1]
    aa18:	cmp	r0, #0
    aa1c:	beq	aa38 <little2_attributeValueTok+0x19c>
    aa20:	ldrb	r2, [r6, #1]
    aa24:	and	r0, r2, #255	; 0xff
    aa28:	ldrb	r2, [r6]
    aa2c:	and	r1, r2, #255	; 0xff
    aa30:	bl	5988 <unicode_byte_type>
    aa34:	b	aa48 <little2_attributeValueTok+0x1ac>
    aa38:	ldrb	r0, [r6]
    aa3c:	and	r3, r0, #255	; 0xff
    aa40:	add	r0, r7, r3
    aa44:	ldrb	r0, [r0, #76]	; 0x4c
    aa48:	cmp	r0, #10
    aa4c:	bne	aa54 <little2_attributeValueTok+0x1b8>
    aa50:	add	r6, r6, #2
    aa54:	str	r6, [r4]
    aa58:	mov	r0, #7
    aa5c:	b	aaa0 <little2_attributeValueTok+0x204>
    aa60:	str	r6, [r4]
    aa64:	mov	r0, #6
    aa68:	b	aaa0 <little2_attributeValueTok+0x204>
    aa6c:	cmp	r6, r8
    aa70:	bne	aa84 <little2_attributeValueTok+0x1e8>
    aa74:	add	r2, r6, #2
    aa78:	str	r2, [r4]
    aa7c:	mov	r0, #39	; 0x27
    aa80:	b	aaa0 <little2_attributeValueTok+0x204>
    aa84:	str	r6, [r4]
    aa88:	mov	r0, #6
    aa8c:	b	aaa0 <little2_attributeValueTok+0x204>
    aa90:	add	r6, r6, #2
    aa94:	b	a8e4 <little2_attributeValueTok+0x48>
    aa98:	str	r6, [r4]
    aa9c:	mov	r0, #6
    aaa0:	ldr	r4, [sp, #8]
    aaa4:	ldr	r5, [sp, #12]
    aaa8:	ldr	r6, [sp, #16]
    aaac:	ldr	r7, [sp, #20]
    aab0:	ldr	r8, [sp, #24]
    aab4:	ldr	lr, [sp, #4]
    aab8:	add	sp, sp, #32
    aabc:	bx	lr

0000aac0 <little2_entityValueTok>:
    aac0:	mov	ip, sp
    aac4:	sub	sp, sp, #32
    aac8:	str	ip, [sp]
    aacc:	str	lr, [sp, #4]
    aad0:	str	r4, [sp, #8]
    aad4:	str	r5, [sp, #12]
    aad8:	str	r6, [sp, #16]
    aadc:	str	r7, [sp, #20]
    aae0:	str	r8, [sp, #24]
    aae4:	mov	r4, r3
    aae8:	mov	r5, r2
    aaec:	mov	r6, r1
    aaf0:	mov	r7, r0
    aaf4:	cmp	r6, r5
    aaf8:	bne	ab04 <little2_entityValueTok+0x44>
    aafc:	mvn	r0, #3
    ab00:	b	acb0 <little2_entityValueTok+0x1f0>
    ab04:	mov	r8, r6
    ab08:	cmp	r6, r5
    ab0c:	beq	aca8 <little2_entityValueTok+0x1e8>
    ab10:	ldrb	r2, [r6, #1]
    ab14:	cmp	r2, #0
    ab18:	beq	ab34 <little2_entityValueTok+0x74>
    ab1c:	ldrb	r0, [r6, #1]
    ab20:	and	r0, r0, #255	; 0xff
    ab24:	ldrb	r1, [r6]
    ab28:	and	r1, r1, #255	; 0xff
    ab2c:	bl	5988 <unicode_byte_type>
    ab30:	b	ab44 <little2_entityValueTok+0x84>
    ab34:	ldrb	r2, [r6]
    ab38:	and	r0, r2, #255	; 0xff
    ab3c:	add	ip, r7, r0
    ab40:	ldrb	r0, [ip, #76]	; 0x4c
    ab44:	cmp	r0, #7
    ab48:	bcs	aba0 <little2_entityValueTok+0xe0>
    ab4c:	cmp	r0, #3
    ab50:	beq	ab74 <little2_entityValueTok+0xb4>
    ab54:	cmp	r0, #5
    ab58:	beq	ab6c <little2_entityValueTok+0xac>
    ab5c:	cmp	r0, #6
    ab60:	bne	ac7c <little2_entityValueTok+0x1bc>
    ab64:	add	r6, r6, #3
    ab68:	b	ab08 <little2_entityValueTok+0x48>
    ab6c:	add	r6, r6, #2
    ab70:	b	ab08 <little2_entityValueTok+0x48>
    ab74:	cmp	r6, r8
    ab78:	bne	ab94 <little2_entityValueTok+0xd4>
    ab7c:	add	r1, r6, #2
    ab80:	mov	r3, r4
    ab84:	mov	r2, r5
    ab88:	mov	r0, r7
    ab8c:	bl	7790 <little2_scanRef>
    ab90:	b	acb0 <little2_entityValueTok+0x1f0>
    ab94:	str	r6, [r4]
    ab98:	mov	r0, #6
    ab9c:	b	acb0 <little2_entityValueTok+0x1f0>
    aba0:	cmp	r0, #10
    aba4:	bcs	ac34 <little2_entityValueTok+0x174>
    aba8:	cmp	r0, #7
    abac:	beq	ac2c <little2_entityValueTok+0x16c>
    abb0:	cmp	r0, #9
    abb4:	bne	ac7c <little2_entityValueTok+0x1bc>
    abb8:	cmp	r6, r8
    abbc:	bne	ac20 <little2_entityValueTok+0x160>
    abc0:	add	r6, r6, #2
    abc4:	cmp	r6, r5
    abc8:	bne	abd4 <little2_entityValueTok+0x114>
    abcc:	mvn	r0, #2
    abd0:	b	acb0 <little2_entityValueTok+0x1f0>
    abd4:	ldrb	r1, [r6, #1]
    abd8:	cmp	r1, #0
    abdc:	beq	abf8 <little2_entityValueTok+0x138>
    abe0:	ldrb	ip, [r6, #1]
    abe4:	and	r0, ip, #255	; 0xff
    abe8:	ldrb	r1, [r6]
    abec:	and	r1, r1, #255	; 0xff
    abf0:	bl	5988 <unicode_byte_type>
    abf4:	b	ac08 <little2_entityValueTok+0x148>
    abf8:	ldrb	r3, [r6]
    abfc:	and	ip, r3, #255	; 0xff
    ac00:	add	r1, r7, ip
    ac04:	ldrb	r0, [r1, #76]	; 0x4c
    ac08:	cmp	r0, #10
    ac0c:	bne	ac14 <little2_entityValueTok+0x154>
    ac10:	add	r6, r6, #2
    ac14:	str	r6, [r4]
    ac18:	mov	r0, #7
    ac1c:	b	acb0 <little2_entityValueTok+0x1f0>
    ac20:	str	r6, [r4]
    ac24:	mov	r0, #6
    ac28:	b	acb0 <little2_entityValueTok+0x1f0>
    ac2c:	add	r6, r6, #4
    ac30:	b	ab08 <little2_entityValueTok+0x48>
    ac34:	cmp	r0, #10
    ac38:	beq	ac84 <little2_entityValueTok+0x1c4>
    ac3c:	cmp	r0, #30
    ac40:	bne	ac7c <little2_entityValueTok+0x1bc>
    ac44:	cmp	r6, r8
    ac48:	bne	ac70 <little2_entityValueTok+0x1b0>
    ac4c:	add	r1, r6, #2
    ac50:	mov	r3, r4
    ac54:	mov	r2, r5
    ac58:	mov	r0, r7
    ac5c:	bl	9370 <little2_scanPercent>
    ac60:	cmp	r0, #22
    ac64:	bne	acb0 <little2_entityValueTok+0x1f0>
    ac68:	mov	r0, #0
    ac6c:	b	acb0 <little2_entityValueTok+0x1f0>
    ac70:	str	r6, [r4]
    ac74:	mov	r0, #6
    ac78:	b	acb0 <little2_entityValueTok+0x1f0>
    ac7c:	add	r6, r6, #2
    ac80:	b	ab08 <little2_entityValueTok+0x48>
    ac84:	cmp	r6, r8
    ac88:	bne	ac9c <little2_entityValueTok+0x1dc>
    ac8c:	add	r1, r6, #2
    ac90:	str	r1, [r4]
    ac94:	mov	r0, #7
    ac98:	b	acb0 <little2_entityValueTok+0x1f0>
    ac9c:	str	r6, [r4]
    aca0:	mov	r0, #6
    aca4:	b	acb0 <little2_entityValueTok+0x1f0>
    aca8:	str	r6, [r4]
    acac:	mov	r0, #6
    acb0:	ldr	r4, [sp, #8]
    acb4:	ldr	r5, [sp, #12]
    acb8:	ldr	r6, [sp, #16]
    acbc:	ldr	r7, [sp, #20]
    acc0:	ldr	r8, [sp, #24]
    acc4:	ldr	lr, [sp, #4]
    acc8:	add	sp, sp, #32
    accc:	bx	lr

0000acd0 <little2_ignoreSectionTok>:
    acd0:	mov	ip, sp
    acd4:	sub	sp, sp, #32
    acd8:	str	ip, [sp]
    acdc:	str	lr, [sp, #4]
    ace0:	str	r4, [sp, #8]
    ace4:	str	r5, [sp, #12]
    ace8:	str	r6, [sp, #16]
    acec:	str	r7, [sp, #20]
    acf0:	str	r8, [sp, #24]
    acf4:	mov	r5, r3
    acf8:	mov	r6, r2
    acfc:	mov	r4, r1
    ad00:	mov	r7, r0
    ad04:	mov	r8, #0
    ad08:	mov	r3, #1
    ad0c:	cmp	r3, #0
    ad10:	beq	ad2c <little2_ignoreSectionTok+0x5c>
    ad14:	sub	r3, r6, r4
    ad18:	and	r0, r3, #1
    ad1c:	cmp	r0, #0
    ad20:	beq	ad2c <little2_ignoreSectionTok+0x5c>
    ad24:	bic	ip, r3, #1
    ad28:	add	r6, r4, ip
    ad2c:	cmp	r4, r6
    ad30:	beq	af78 <little2_ignoreSectionTok+0x2a8>
    ad34:	ldrb	r2, [r4, #1]
    ad38:	cmp	r2, #0
    ad3c:	beq	ad58 <little2_ignoreSectionTok+0x88>
    ad40:	ldrb	r1, [r4, #1]
    ad44:	and	r0, r1, #255	; 0xff
    ad48:	ldrb	ip, [r4]
    ad4c:	and	r1, ip, #255	; 0xff
    ad50:	bl	5988 <unicode_byte_type>
    ad54:	b	ad68 <little2_ignoreSectionTok+0x98>
    ad58:	ldrb	r1, [r4]
    ad5c:	and	r1, r1, #255	; 0xff
    ad60:	add	ip, r7, r1
    ad64:	ldrb	r0, [ip, #76]	; 0x4c
    ad68:	cmp	r0, #9
    ad6c:	bcs	af70 <little2_ignoreSectionTok+0x2a0>
    ad70:	add	pc, pc, r0, lsl #2
    ad74:	nop	{0}
    ad78:	b	ae38 <little2_ignoreSectionTok+0x168>
    ad7c:	b	ae38 <little2_ignoreSectionTok+0x168>
    ad80:	b	ae44 <little2_ignoreSectionTok+0x174>
    ad84:	b	af70 <little2_ignoreSectionTok+0x2a0>
    ad88:	b	aed0 <little2_ignoreSectionTok+0x200>
    ad8c:	b	ad9c <little2_ignoreSectionTok+0xcc>
    ad90:	b	add0 <little2_ignoreSectionTok+0x100>
    ad94:	b	ae04 <little2_ignoreSectionTok+0x134>
    ad98:	b	ae38 <little2_ignoreSectionTok+0x168>
    ad9c:	sub	ip, r6, r4
    ada0:	cmp	ip, #2
    ada4:	bge	adb0 <little2_ignoreSectionTok+0xe0>
    ada8:	mvn	r0, #1
    adac:	b	af7c <little2_ignoreSectionTok+0x2ac>
    adb0:	mov	r0, #0
    adb4:	cmp	r0, #0
    adb8:	beq	adc8 <little2_ignoreSectionTok+0xf8>
    adbc:	str	r4, [r5]
    adc0:	mov	r0, #0
    adc4:	b	af7c <little2_ignoreSectionTok+0x2ac>
    adc8:	add	r4, r4, #2
    adcc:	b	ad2c <little2_ignoreSectionTok+0x5c>
    add0:	sub	ip, r6, r4
    add4:	cmp	ip, #3
    add8:	bge	ade4 <little2_ignoreSectionTok+0x114>
    addc:	mvn	r0, #1
    ade0:	b	af7c <little2_ignoreSectionTok+0x2ac>
    ade4:	mov	r0, #0
    ade8:	cmp	r0, #0
    adec:	beq	adfc <little2_ignoreSectionTok+0x12c>
    adf0:	str	r4, [r5]
    adf4:	mov	r0, #0
    adf8:	b	af7c <little2_ignoreSectionTok+0x2ac>
    adfc:	add	r4, r4, #3
    ae00:	b	ad2c <little2_ignoreSectionTok+0x5c>
    ae04:	sub	r2, r6, r4
    ae08:	cmp	r2, #4
    ae0c:	bge	ae18 <little2_ignoreSectionTok+0x148>
    ae10:	mvn	r0, #1
    ae14:	b	af7c <little2_ignoreSectionTok+0x2ac>
    ae18:	mov	r2, #0
    ae1c:	cmp	r2, #0
    ae20:	beq	ae30 <little2_ignoreSectionTok+0x160>
    ae24:	str	r4, [r5]
    ae28:	mov	r0, #0
    ae2c:	b	af7c <little2_ignoreSectionTok+0x2ac>
    ae30:	add	r4, r4, #4
    ae34:	b	ad2c <little2_ignoreSectionTok+0x5c>
    ae38:	str	r4, [r5]
    ae3c:	mov	r0, #0
    ae40:	b	af7c <little2_ignoreSectionTok+0x2ac>
    ae44:	add	r4, r4, #2
    ae48:	cmp	r4, r6
    ae4c:	bne	ae58 <little2_ignoreSectionTok+0x188>
    ae50:	mvn	r0, #0
    ae54:	b	af7c <little2_ignoreSectionTok+0x2ac>
    ae58:	ldrb	r0, [r4, #1]
    ae5c:	cmp	r0, #0
    ae60:	bne	ae78 <little2_ignoreSectionTok+0x1a8>
    ae64:	ldrb	r2, [r4]
    ae68:	cmp	r2, #33	; 0x21
    ae6c:	moveq	r2, #1
    ae70:	movne	r2, #0
    ae74:	b	ae7c <little2_ignoreSectionTok+0x1ac>
    ae78:	mov	r2, #0
    ae7c:	cmp	r2, #0
    ae80:	beq	ad2c <little2_ignoreSectionTok+0x5c>
    ae84:	add	r4, r4, #2
    ae88:	cmp	r4, r6
    ae8c:	bne	ae98 <little2_ignoreSectionTok+0x1c8>
    ae90:	mvn	r0, #0
    ae94:	b	af7c <little2_ignoreSectionTok+0x2ac>
    ae98:	ldrb	r3, [r4, #1]
    ae9c:	cmp	r3, #0
    aea0:	bne	aeb8 <little2_ignoreSectionTok+0x1e8>
    aea4:	ldrb	r0, [r4]
    aea8:	cmp	r0, #91	; 0x5b
    aeac:	moveq	r1, #1
    aeb0:	movne	r1, #0
    aeb4:	b	aebc <little2_ignoreSectionTok+0x1ec>
    aeb8:	mov	r1, #0
    aebc:	cmp	r1, #0
    aec0:	beq	ad2c <little2_ignoreSectionTok+0x5c>
    aec4:	add	r8, r8, #1
    aec8:	add	r4, r4, #2
    aecc:	b	ad2c <little2_ignoreSectionTok+0x5c>
    aed0:	add	r4, r4, #2
    aed4:	cmp	r4, r6
    aed8:	bne	aee4 <little2_ignoreSectionTok+0x214>
    aedc:	mvn	r0, #0
    aee0:	b	af7c <little2_ignoreSectionTok+0x2ac>
    aee4:	ldrb	r2, [r4, #1]
    aee8:	cmp	r2, #0
    aeec:	bne	af04 <little2_ignoreSectionTok+0x234>
    aef0:	ldrb	r0, [r4]
    aef4:	cmp	r0, #93	; 0x5d
    aef8:	moveq	r3, #1
    aefc:	movne	r3, #0
    af00:	b	af08 <little2_ignoreSectionTok+0x238>
    af04:	mov	r3, #0
    af08:	cmp	r3, #0
    af0c:	beq	ad2c <little2_ignoreSectionTok+0x5c>
    af10:	add	r4, r4, #2
    af14:	cmp	r4, r6
    af18:	bne	af24 <little2_ignoreSectionTok+0x254>
    af1c:	mvn	r0, #0
    af20:	b	af7c <little2_ignoreSectionTok+0x2ac>
    af24:	ldrb	r3, [r4, #1]
    af28:	cmp	r3, #0
    af2c:	bne	af44 <little2_ignoreSectionTok+0x274>
    af30:	ldrb	r3, [r4]
    af34:	cmp	r3, #62	; 0x3e
    af38:	moveq	r1, #1
    af3c:	movne	r1, #0
    af40:	b	af48 <little2_ignoreSectionTok+0x278>
    af44:	mov	r1, #0
    af48:	cmp	r1, #0
    af4c:	beq	ad2c <little2_ignoreSectionTok+0x5c>
    af50:	add	r4, r4, #2
    af54:	cmp	r8, #0
    af58:	bne	af68 <little2_ignoreSectionTok+0x298>
    af5c:	str	r4, [r5]
    af60:	mov	r0, #42	; 0x2a
    af64:	b	af7c <little2_ignoreSectionTok+0x2ac>
    af68:	sub	r8, r8, #1
    af6c:	b	ad2c <little2_ignoreSectionTok+0x5c>
    af70:	add	r4, r4, #2
    af74:	b	ad2c <little2_ignoreSectionTok+0x5c>
    af78:	mvn	r0, #0
    af7c:	ldr	r4, [sp, #8]
    af80:	ldr	r5, [sp, #12]
    af84:	ldr	r6, [sp, #16]
    af88:	ldr	r7, [sp, #20]
    af8c:	ldr	r8, [sp, #24]
    af90:	ldr	lr, [sp, #4]
    af94:	add	sp, sp, #32
    af98:	bx	lr

0000af9c <little2_isPublicId>:
    af9c:	mov	ip, sp
    afa0:	sub	sp, sp, #24
    afa4:	str	ip, [sp]
    afa8:	str	lr, [sp, #4]
    afac:	str	r4, [sp, #8]
    afb0:	str	r5, [sp, #12]
    afb4:	str	r6, [sp, #16]
    afb8:	str	r7, [sp, #20]
    afbc:	mov	r4, r3
    afc0:	mov	r5, r0
    afc4:	add	r6, r1, #2
    afc8:	sub	r7, r2, #2
    afcc:	cmp	r6, r7
    afd0:	beq	b120 <little2_isPublicId+0x184>
    afd4:	ldrb	ip, [r6, #1]
    afd8:	cmp	ip, #0
    afdc:	beq	aff8 <little2_isPublicId+0x5c>
    afe0:	ldrb	r0, [r6, #1]
    afe4:	and	r0, r0, #255	; 0xff
    afe8:	ldrb	r1, [r6]
    afec:	and	r1, r1, #255	; 0xff
    aff0:	bl	5988 <unicode_byte_type>
    aff4:	b	b008 <little2_isPublicId+0x6c>
    aff8:	ldrb	r1, [r6]
    affc:	and	r2, r1, #255	; 0xff
    b000:	add	r0, r5, r2
    b004:	ldrb	r0, [r0, #76]	; 0x4c
    b008:	sub	r2, r0, #9
    b00c:	cmp	r2, #27
    b010:	bcs	b0e4 <little2_isPublicId+0x148>
    b014:	add	pc, pc, r2, lsl #2
    b018:	nop	{0}
    b01c:	b	b118 <little2_isPublicId+0x17c>
    b020:	b	b118 <little2_isPublicId+0x17c>
    b024:	b	b0e4 <little2_isPublicId+0x148>
    b028:	b	b0e4 <little2_isPublicId+0x148>
    b02c:	b	b118 <little2_isPublicId+0x17c>
    b030:	b	b118 <little2_isPublicId+0x17c>
    b034:	b	b118 <little2_isPublicId+0x17c>
    b038:	b	b118 <little2_isPublicId+0x17c>
    b03c:	b	b118 <little2_isPublicId+0x17c>
    b040:	b	b118 <little2_isPublicId+0x17c>
    b044:	b	b118 <little2_isPublicId+0x17c>
    b048:	b	b0e4 <little2_isPublicId+0x148>
    b04c:	b	b088 <little2_isPublicId+0xec>
    b050:	b	b0c0 <little2_isPublicId+0x124>
    b054:	b	b118 <little2_isPublicId+0x17c>
    b058:	b	b118 <little2_isPublicId+0x17c>
    b05c:	b	b118 <little2_isPublicId+0x17c>
    b060:	b	b0c0 <little2_isPublicId+0x124>
    b064:	b	b118 <little2_isPublicId+0x17c>
    b068:	b	b0e4 <little2_isPublicId+0x148>
    b06c:	b	b0e4 <little2_isPublicId+0x148>
    b070:	b	b118 <little2_isPublicId+0x17c>
    b074:	b	b118 <little2_isPublicId+0x17c>
    b078:	b	b118 <little2_isPublicId+0x17c>
    b07c:	b	b118 <little2_isPublicId+0x17c>
    b080:	b	b118 <little2_isPublicId+0x17c>
    b084:	b	b118 <little2_isPublicId+0x17c>
    b088:	ldrb	r3, [r6, #1]
    b08c:	cmp	r3, #0
    b090:	bne	b0a8 <little2_isPublicId+0x10c>
    b094:	ldrb	r1, [r6]
    b098:	cmp	r1, #9
    b09c:	moveq	r3, #1
    b0a0:	movne	r3, #0
    b0a4:	b	b0ac <little2_isPublicId+0x110>
    b0a8:	mov	r3, #0
    b0ac:	cmp	r3, #0
    b0b0:	beq	b118 <little2_isPublicId+0x17c>
    b0b4:	str	r6, [r4]
    b0b8:	mov	r0, #0
    b0bc:	b	b124 <little2_isPublicId+0x188>
    b0c0:	ldrb	ip, [r6, #1]
    b0c4:	cmp	ip, #0
    b0c8:	beq	b0d4 <little2_isPublicId+0x138>
    b0cc:	mvn	ip, #0
    b0d0:	b	b0d8 <little2_isPublicId+0x13c>
    b0d4:	ldrb	ip, [r6]
    b0d8:	bic	r3, ip, #127	; 0x7f
    b0dc:	cmp	r3, #0
    b0e0:	beq	b118 <little2_isPublicId+0x17c>
    b0e4:	ldrb	r1, [r6, #1]
    b0e8:	cmp	r1, #0
    b0ec:	beq	b0f8 <little2_isPublicId+0x15c>
    b0f0:	mvn	r0, #0
    b0f4:	b	b0fc <little2_isPublicId+0x160>
    b0f8:	ldrb	r0, [r6]
    b0fc:	cmp	r0, #36	; 0x24
    b100:	beq	b118 <little2_isPublicId+0x17c>
    b104:	cmp	r0, #64	; 0x40
    b108:	beq	b118 <little2_isPublicId+0x17c>
    b10c:	str	r6, [r4]
    b110:	mov	r0, #0
    b114:	b	b124 <little2_isPublicId+0x188>
    b118:	add	r6, r6, #2
    b11c:	b	afcc <little2_isPublicId+0x30>
    b120:	mov	r0, #1
    b124:	ldr	r4, [sp, #8]
    b128:	ldr	r5, [sp, #12]
    b12c:	ldr	r6, [sp, #16]
    b130:	ldr	r7, [sp, #20]
    b134:	ldr	lr, [sp, #4]
    b138:	add	sp, sp, #24
    b13c:	bx	lr

0000b140 <little2_getAtts>:
    b140:	mov	ip, sp
    b144:	sub	sp, sp, #40	; 0x28
    b148:	str	ip, [sp]
    b14c:	str	lr, [sp, #4]
    b150:	str	r4, [sp, #8]
    b154:	str	r5, [sp, #12]
    b158:	str	r6, [sp, #16]
    b15c:	str	r7, [sp, #20]
    b160:	str	r8, [sp, #24]
    b164:	str	r9, [sp, #28]
    b168:	str	sl, [sp, #32]
    b16c:	mov	r4, r3
    b170:	mov	r5, r2
    b174:	mov	r6, r0
    b178:	mov	r9, #1
    b17c:	mov	r7, #0
    b180:	mov	r8, #0
    b184:	add	sl, r1, #2
    b188:	ldrb	r3, [sl, #1]
    b18c:	cmp	r3, #0
    b190:	beq	b1ac <little2_getAtts+0x6c>
    b194:	ldrb	r2, [sl, #1]
    b198:	and	r0, r2, #255	; 0xff
    b19c:	ldrb	r1, [sl]
    b1a0:	and	r1, r1, #255	; 0xff
    b1a4:	bl	5988 <unicode_byte_type>
    b1a8:	b	b1bc <little2_getAtts+0x7c>
    b1ac:	ldrb	r0, [sl]
    b1b0:	and	r1, r0, #255	; 0xff
    b1b4:	add	r0, r6, r1
    b1b8:	ldrb	r0, [r0, #76]	; 0x4c
    b1bc:	sub	r0, r0, #3
    b1c0:	cmp	r0, #27
    b1c4:	bcs	b550 <little2_getAtts+0x410>
    b1c8:	add	pc, pc, r0, lsl #2
    b1cc:	nop	{0}
    b1d0:	b	b37c <little2_getAtts+0x23c>
    b1d4:	b	b550 <little2_getAtts+0x410>
    b1d8:	b	b23c <little2_getAtts+0xfc>
    b1dc:	b	b264 <little2_getAtts+0x124>
    b1e0:	b	b290 <little2_getAtts+0x150>
    b1e4:	b	b550 <little2_getAtts+0x410>
    b1e8:	b	b4d8 <little2_getAtts+0x398>
    b1ec:	b	b4d8 <little2_getAtts+0x398>
    b1f0:	b	b51c <little2_getAtts+0x3dc>
    b1f4:	b	b2e4 <little2_getAtts+0x1a4>
    b1f8:	b	b330 <little2_getAtts+0x1f0>
    b1fc:	b	b550 <little2_getAtts+0x410>
    b200:	b	b550 <little2_getAtts+0x410>
    b204:	b	b550 <little2_getAtts+0x410>
    b208:	b	b51c <little2_getAtts+0x3dc>
    b20c:	b	b550 <little2_getAtts+0x410>
    b210:	b	b550 <little2_getAtts+0x410>
    b214:	b	b550 <little2_getAtts+0x410>
    b218:	b	b394 <little2_getAtts+0x254>
    b21c:	b	b2bc <little2_getAtts+0x17c>
    b220:	b	b550 <little2_getAtts+0x410>
    b224:	b	b2bc <little2_getAtts+0x17c>
    b228:	b	b550 <little2_getAtts+0x410>
    b22c:	b	b550 <little2_getAtts+0x410>
    b230:	b	b550 <little2_getAtts+0x410>
    b234:	b	b550 <little2_getAtts+0x410>
    b238:	b	b2bc <little2_getAtts+0x17c>
    b23c:	cmp	r9, #0
    b240:	bne	b550 <little2_getAtts+0x410>
    b244:	cmp	r7, r5
    b248:	bge	b25c <little2_getAtts+0x11c>
    b24c:	str	sl, [r4, r7, lsl #4]
    b250:	add	r2, r4, r7, lsl #4
    b254:	mov	r1, #1
    b258:	strb	r1, [r2, #12]
    b25c:	mov	r9, #1
    b260:	b	b550 <little2_getAtts+0x410>
    b264:	cmp	r9, #0
    b268:	bne	b288 <little2_getAtts+0x148>
    b26c:	cmp	r7, r5
    b270:	bge	b284 <little2_getAtts+0x144>
    b274:	str	sl, [r4, r7, lsl #4]
    b278:	add	ip, r4, r7, lsl #4
    b27c:	mov	r0, #1
    b280:	strb	r0, [ip, #12]
    b284:	mov	r9, #1
    b288:	add	sl, sl, #1
    b28c:	b	b550 <little2_getAtts+0x410>
    b290:	cmp	r9, #0
    b294:	bne	b2b4 <little2_getAtts+0x174>
    b298:	cmp	r7, r5
    b29c:	bge	b2b0 <little2_getAtts+0x170>
    b2a0:	str	sl, [r4, r7, lsl #4]
    b2a4:	add	ip, r4, r7, lsl #4
    b2a8:	mov	r1, #1
    b2ac:	strb	r1, [ip, #12]
    b2b0:	mov	r9, #1
    b2b4:	add	sl, sl, #2
    b2b8:	b	b550 <little2_getAtts+0x410>
    b2bc:	cmp	r9, #0
    b2c0:	bne	b550 <little2_getAtts+0x410>
    b2c4:	cmp	r7, r5
    b2c8:	bge	b2dc <little2_getAtts+0x19c>
    b2cc:	str	sl, [r4, r7, lsl #4]
    b2d0:	add	ip, r4, r7, lsl #4
    b2d4:	mov	r0, #1
    b2d8:	strb	r0, [ip, #12]
    b2dc:	mov	r9, #1
    b2e0:	b	b550 <little2_getAtts+0x410>
    b2e4:	cmp	r9, #2
    b2e8:	beq	b30c <little2_getAtts+0x1cc>
    b2ec:	cmp	r7, r5
    b2f0:	bge	b300 <little2_getAtts+0x1c0>
    b2f4:	add	r3, r4, r7, lsl #4
    b2f8:	add	ip, sl, #2
    b2fc:	str	ip, [r3, #4]
    b300:	mov	r9, #2
    b304:	mov	r8, #12
    b308:	b	b550 <little2_getAtts+0x410>
    b30c:	cmp	r8, #12
    b310:	bne	b550 <little2_getAtts+0x410>
    b314:	mov	r9, #0
    b318:	cmp	r7, r5
    b31c:	bge	b328 <little2_getAtts+0x1e8>
    b320:	add	r2, r4, r7, lsl #4
    b324:	str	sl, [r2, #8]
    b328:	add	r7, r7, #1
    b32c:	b	b550 <little2_getAtts+0x410>
    b330:	cmp	r9, #2
    b334:	beq	b358 <little2_getAtts+0x218>
    b338:	cmp	r7, r5
    b33c:	bge	b34c <little2_getAtts+0x20c>
    b340:	add	ip, r4, r7, lsl #4
    b344:	add	r0, sl, #2
    b348:	str	r0, [ip, #4]
    b34c:	mov	r9, #2
    b350:	mov	r8, #13
    b354:	b	b550 <little2_getAtts+0x410>
    b358:	cmp	r8, #13
    b35c:	bne	b550 <little2_getAtts+0x410>
    b360:	mov	r9, #0
    b364:	cmp	r7, r5
    b368:	bge	b374 <little2_getAtts+0x234>
    b36c:	add	r0, r4, r7, lsl #4
    b370:	str	sl, [r0, #8]
    b374:	add	r7, r7, #1
    b378:	b	b550 <little2_getAtts+0x410>
    b37c:	cmp	r7, r5
    b380:	bge	b550 <little2_getAtts+0x410>
    b384:	add	ip, r4, r7, lsl #4
    b388:	mov	r3, #0
    b38c:	strb	r3, [ip, #12]
    b390:	b	b550 <little2_getAtts+0x410>
    b394:	cmp	r9, #1
    b398:	beq	b4d0 <little2_getAtts+0x390>
    b39c:	cmp	r9, #2
    b3a0:	beq	b3ac <little2_getAtts+0x26c>
    b3a4:	mov	r3, #0
    b3a8:	b	b3b8 <little2_getAtts+0x278>
    b3ac:	cmp	r7, r5
    b3b0:	movlt	r3, #1
    b3b4:	movge	r3, #0
    b3b8:	cmp	r3, #0
    b3bc:	beq	b3d8 <little2_getAtts+0x298>
    b3c0:	add	r3, r4, r7, lsl #4
    b3c4:	ldrb	ip, [r3, #12]
    b3c8:	cmp	ip, #0
    b3cc:	movne	r3, #1
    b3d0:	moveq	r3, #0
    b3d4:	b	b3dc <little2_getAtts+0x29c>
    b3d8:	mov	r3, #0
    b3dc:	cmp	r3, #0
    b3e0:	beq	b4b4 <little2_getAtts+0x374>
    b3e4:	add	r2, r4, r7, lsl #4
    b3e8:	ldr	r2, [r2, #4]
    b3ec:	cmp	sl, r2
    b3f0:	beq	b41c <little2_getAtts+0x2dc>
    b3f4:	ldrb	ip, [sl, #1]
    b3f8:	cmp	ip, #0
    b3fc:	beq	b408 <little2_getAtts+0x2c8>
    b400:	mvn	r2, #0
    b404:	b	b40c <little2_getAtts+0x2cc>
    b408:	ldrb	r2, [sl]
    b40c:	cmp	r2, #32
    b410:	movne	r2, #1
    b414:	moveq	r2, #0
    b418:	b	b420 <little2_getAtts+0x2e0>
    b41c:	mov	r2, #1
    b420:	cmp	r2, #0
    b424:	bne	b450 <little2_getAtts+0x310>
    b428:	ldrb	r1, [sl, #3]
    b42c:	cmp	r1, #0
    b430:	beq	b43c <little2_getAtts+0x2fc>
    b434:	mvn	r1, #0
    b438:	b	b440 <little2_getAtts+0x300>
    b43c:	ldrb	r1, [sl, #2]
    b440:	cmp	r1, #32
    b444:	moveq	r3, #1
    b448:	movne	r3, #0
    b44c:	b	b454 <little2_getAtts+0x314>
    b450:	mov	r3, #1
    b454:	cmp	r3, #0
    b458:	bne	b4ac <little2_getAtts+0x36c>
    b45c:	ldrb	r2, [sl, #3]
    b460:	cmp	r2, #0
    b464:	beq	b480 <little2_getAtts+0x340>
    b468:	ldrb	r0, [sl, #3]
    b46c:	and	r0, r0, #255	; 0xff
    b470:	ldrb	r1, [sl, #2]
    b474:	and	r1, r1, #255	; 0xff
    b478:	bl	5988 <unicode_byte_type>
    b47c:	b	b490 <little2_getAtts+0x350>
    b480:	ldrb	ip, [sl, #2]
    b484:	and	r1, ip, #255	; 0xff
    b488:	add	r3, r6, r1
    b48c:	ldrb	r0, [r3, #76]	; 0x4c
    b490:	cmp	r0, r8
    b494:	moveq	ip, #1
    b498:	movne	ip, #0
    b49c:	cmp	ip, #0
    b4a0:	movne	r0, #1
    b4a4:	moveq	r0, #0
    b4a8:	b	b4b8 <little2_getAtts+0x378>
    b4ac:	mov	r0, #1
    b4b0:	b	b4b8 <little2_getAtts+0x378>
    b4b4:	mov	r0, #0
    b4b8:	cmp	r0, #0
    b4bc:	beq	b550 <little2_getAtts+0x410>
    b4c0:	add	r0, r4, r7, lsl #4
    b4c4:	mov	r1, #0
    b4c8:	strb	r1, [r0, #12]
    b4cc:	b	b550 <little2_getAtts+0x410>
    b4d0:	mov	r9, #0
    b4d4:	b	b550 <little2_getAtts+0x410>
    b4d8:	cmp	r9, #1
    b4dc:	beq	b514 <little2_getAtts+0x3d4>
    b4e0:	cmp	r9, #2
    b4e4:	beq	b4f0 <little2_getAtts+0x3b0>
    b4e8:	mov	r0, #0
    b4ec:	b	b4fc <little2_getAtts+0x3bc>
    b4f0:	cmp	r7, r5
    b4f4:	movlt	r0, #1
    b4f8:	movge	r0, #0
    b4fc:	cmp	r0, #0
    b500:	beq	b550 <little2_getAtts+0x410>
    b504:	add	r0, r4, r7, lsl #4
    b508:	mov	r2, #0
    b50c:	strb	r2, [r0, #12]
    b510:	b	b550 <little2_getAtts+0x410>
    b514:	mov	r9, #0
    b518:	b	b550 <little2_getAtts+0x410>
    b51c:	cmp	r9, #2
    b520:	beq	b550 <little2_getAtts+0x410>
    b524:	mov	r0, r7
    b528:	ldr	r4, [sp, #8]
    b52c:	ldr	r5, [sp, #12]
    b530:	ldr	r6, [sp, #16]
    b534:	ldr	r7, [sp, #20]
    b538:	ldr	r8, [sp, #24]
    b53c:	ldr	r9, [sp, #28]
    b540:	ldr	sl, [sp, #32]
    b544:	ldr	lr, [sp, #4]
    b548:	add	sp, sp, #40	; 0x28
    b54c:	bx	lr
    b550:	add	sl, sl, #2
    b554:	b	b188 <little2_getAtts+0x48>

0000b558 <little2_charRefNumber>:
    b558:	mov	ip, sp
    b55c:	sub	sp, sp, #16
    b560:	str	ip, [sp]
    b564:	str	lr, [sp, #4]
    b568:	str	r4, [sp, #8]
    b56c:	mov	r0, #0
    b570:	add	r4, r1, #4
    b574:	ldrb	r3, [r4, #1]
    b578:	cmp	r3, #0
    b57c:	bne	b594 <little2_charRefNumber+0x3c>
    b580:	ldrb	r2, [r4]
    b584:	cmp	r2, #120	; 0x78
    b588:	moveq	r1, #1
    b58c:	movne	r1, #0
    b590:	b	b598 <little2_charRefNumber+0x40>
    b594:	mov	r1, #0
    b598:	cmp	r1, #0
    b59c:	beq	b71c <little2_charRefNumber+0x1c4>
    b5a0:	add	r4, r4, #2
    b5a4:	ldrb	ip, [r4, #1]
    b5a8:	cmp	ip, #0
    b5ac:	bne	b5c4 <little2_charRefNumber+0x6c>
    b5b0:	ldrb	r2, [r4]
    b5b4:	cmp	r2, #59	; 0x3b
    b5b8:	moveq	r2, #1
    b5bc:	movne	r2, #0
    b5c0:	b	b5c8 <little2_charRefNumber+0x70>
    b5c4:	mov	r2, #0
    b5c8:	cmp	r2, #0
    b5cc:	bne	b788 <little2_charRefNumber+0x230>
    b5d0:	ldrb	ip, [r4, #1]
    b5d4:	cmp	ip, #0
    b5d8:	beq	b5e4 <little2_charRefNumber+0x8c>
    b5dc:	mvn	r1, #0
    b5e0:	b	b5e8 <little2_charRefNumber+0x90>
    b5e4:	ldrb	r1, [r4]
    b5e8:	sub	r3, r1, #48	; 0x30
    b5ec:	cmp	r3, #55	; 0x37
    b5f0:	bcs	b704 <little2_charRefNumber+0x1ac>
    b5f4:	add	pc, pc, r3, lsl #2
    b5f8:	nop	{0}
    b5fc:	b	b6d8 <little2_charRefNumber+0x180>
    b600:	b	b6d8 <little2_charRefNumber+0x180>
    b604:	b	b6d8 <little2_charRefNumber+0x180>
    b608:	b	b6d8 <little2_charRefNumber+0x180>
    b60c:	b	b6d8 <little2_charRefNumber+0x180>
    b610:	b	b6d8 <little2_charRefNumber+0x180>
    b614:	b	b6d8 <little2_charRefNumber+0x180>
    b618:	b	b6d8 <little2_charRefNumber+0x180>
    b61c:	b	b6d8 <little2_charRefNumber+0x180>
    b620:	b	b6d8 <little2_charRefNumber+0x180>
    b624:	b	b704 <little2_charRefNumber+0x1ac>
    b628:	b	b704 <little2_charRefNumber+0x1ac>
    b62c:	b	b704 <little2_charRefNumber+0x1ac>
    b630:	b	b704 <little2_charRefNumber+0x1ac>
    b634:	b	b704 <little2_charRefNumber+0x1ac>
    b638:	b	b704 <little2_charRefNumber+0x1ac>
    b63c:	b	b704 <little2_charRefNumber+0x1ac>
    b640:	b	b6e8 <little2_charRefNumber+0x190>
    b644:	b	b6e8 <little2_charRefNumber+0x190>
    b648:	b	b6e8 <little2_charRefNumber+0x190>
    b64c:	b	b6e8 <little2_charRefNumber+0x190>
    b650:	b	b6e8 <little2_charRefNumber+0x190>
    b654:	b	b6e8 <little2_charRefNumber+0x190>
    b658:	b	b704 <little2_charRefNumber+0x1ac>
    b65c:	b	b704 <little2_charRefNumber+0x1ac>
    b660:	b	b704 <little2_charRefNumber+0x1ac>
    b664:	b	b704 <little2_charRefNumber+0x1ac>
    b668:	b	b704 <little2_charRefNumber+0x1ac>
    b66c:	b	b704 <little2_charRefNumber+0x1ac>
    b670:	b	b704 <little2_charRefNumber+0x1ac>
    b674:	b	b704 <little2_charRefNumber+0x1ac>
    b678:	b	b704 <little2_charRefNumber+0x1ac>
    b67c:	b	b704 <little2_charRefNumber+0x1ac>
    b680:	b	b704 <little2_charRefNumber+0x1ac>
    b684:	b	b704 <little2_charRefNumber+0x1ac>
    b688:	b	b704 <little2_charRefNumber+0x1ac>
    b68c:	b	b704 <little2_charRefNumber+0x1ac>
    b690:	b	b704 <little2_charRefNumber+0x1ac>
    b694:	b	b704 <little2_charRefNumber+0x1ac>
    b698:	b	b704 <little2_charRefNumber+0x1ac>
    b69c:	b	b704 <little2_charRefNumber+0x1ac>
    b6a0:	b	b704 <little2_charRefNumber+0x1ac>
    b6a4:	b	b704 <little2_charRefNumber+0x1ac>
    b6a8:	b	b704 <little2_charRefNumber+0x1ac>
    b6ac:	b	b704 <little2_charRefNumber+0x1ac>
    b6b0:	b	b704 <little2_charRefNumber+0x1ac>
    b6b4:	b	b704 <little2_charRefNumber+0x1ac>
    b6b8:	b	b704 <little2_charRefNumber+0x1ac>
    b6bc:	b	b704 <little2_charRefNumber+0x1ac>
    b6c0:	b	b6f8 <little2_charRefNumber+0x1a0>
    b6c4:	b	b6f8 <little2_charRefNumber+0x1a0>
    b6c8:	b	b6f8 <little2_charRefNumber+0x1a0>
    b6cc:	b	b6f8 <little2_charRefNumber+0x1a0>
    b6d0:	b	b6f8 <little2_charRefNumber+0x1a0>
    b6d4:	b	b6f8 <little2_charRefNumber+0x1a0>
    b6d8:	lsl	r3, r0, #4
    b6dc:	sub	r2, r1, #48	; 0x30
    b6e0:	orr	r0, r3, r2
    b6e4:	b	b704 <little2_charRefNumber+0x1ac>
    b6e8:	lsl	r0, r0, #4
    b6ec:	add	r0, r0, r1
    b6f0:	sub	r0, r0, #55	; 0x37
    b6f4:	b	b704 <little2_charRefNumber+0x1ac>
    b6f8:	lsl	r3, r0, #4
    b6fc:	add	r2, r3, r1
    b700:	sub	r0, r2, #87	; 0x57
    b704:	cmp	r0, #1114112	; 0x110000
    b708:	blt	b714 <little2_charRefNumber+0x1bc>
    b70c:	mvn	r0, #0
    b710:	b	b78c <little2_charRefNumber+0x234>
    b714:	add	r4, r4, #2
    b718:	b	b5a4 <little2_charRefNumber+0x4c>
    b71c:	ldrb	r1, [r4, #1]
    b720:	cmp	r1, #0
    b724:	bne	b73c <little2_charRefNumber+0x1e4>
    b728:	ldrb	r1, [r4]
    b72c:	cmp	r1, #59	; 0x3b
    b730:	moveq	ip, #1
    b734:	movne	ip, #0
    b738:	b	b740 <little2_charRefNumber+0x1e8>
    b73c:	mov	ip, #0
    b740:	cmp	ip, #0
    b744:	bne	b788 <little2_charRefNumber+0x230>
    b748:	ldrb	ip, [r4, #1]
    b74c:	cmp	ip, #0
    b750:	beq	b75c <little2_charRefNumber+0x204>
    b754:	mvn	r1, #0
    b758:	b	b760 <little2_charRefNumber+0x208>
    b75c:	ldrb	r1, [r4]
    b760:	lsl	r2, r0, #3
    b764:	add	r2, r2, r0, lsl #1
    b768:	add	r0, r2, r1
    b76c:	sub	r0, r0, #48	; 0x30
    b770:	cmp	r0, #1114112	; 0x110000
    b774:	blt	b780 <little2_charRefNumber+0x228>
    b778:	mvn	r0, #0
    b77c:	b	b78c <little2_charRefNumber+0x234>
    b780:	add	r4, r4, #2
    b784:	b	b71c <little2_charRefNumber+0x1c4>
    b788:	bl	12ac0 <checkCharRefNumber>
    b78c:	ldr	r4, [sp, #8]
    b790:	ldr	lr, [sp, #4]
    b794:	add	sp, sp, #16
    b798:	bx	lr

0000b79c <little2_predefinedEntityName>:
    b79c:	mov	ip, sp
    b7a0:	sub	sp, sp, #8
    b7a4:	str	ip, [sp]
    b7a8:	str	lr, [sp, #4]
    b7ac:	sub	ip, r2, r1
    b7b0:	asr	lr, ip, #31
    b7b4:	add	lr, ip, lr, lsr #31
    b7b8:	asr	ip, lr, #1
    b7bc:	cmp	ip, #2
    b7c0:	beq	b9c0 <little2_predefinedEntityName+0x224>
    b7c4:	cmp	ip, #3
    b7c8:	beq	b92c <little2_predefinedEntityName+0x190>
    b7cc:	cmp	ip, #4
    b7d0:	bne	ba24 <little2_predefinedEntityName+0x288>
    b7d4:	ldrb	r0, [r1, #1]
    b7d8:	cmp	r0, #0
    b7dc:	beq	b7e8 <little2_predefinedEntityName+0x4c>
    b7e0:	mvn	r0, #0
    b7e4:	b	b7ec <little2_predefinedEntityName+0x50>
    b7e8:	ldrb	r0, [r1]
    b7ec:	cmp	r0, #97	; 0x61
    b7f0:	beq	b894 <little2_predefinedEntityName+0xf8>
    b7f4:	cmp	r0, #113	; 0x71
    b7f8:	bne	ba24 <little2_predefinedEntityName+0x288>
    b7fc:	add	r3, r1, #2
    b800:	ldrb	r1, [r3, #1]
    b804:	cmp	r1, #0
    b808:	bne	b820 <little2_predefinedEntityName+0x84>
    b80c:	ldrb	ip, [r3]
    b810:	cmp	ip, #117	; 0x75
    b814:	moveq	ip, #1
    b818:	movne	ip, #0
    b81c:	b	b824 <little2_predefinedEntityName+0x88>
    b820:	mov	ip, #0
    b824:	cmp	ip, #0
    b828:	beq	ba24 <little2_predefinedEntityName+0x288>
    b82c:	add	r0, r3, #2
    b830:	ldrb	r1, [r0, #1]
    b834:	cmp	r1, #0
    b838:	bne	b850 <little2_predefinedEntityName+0xb4>
    b83c:	ldrb	ip, [r0]
    b840:	cmp	ip, #111	; 0x6f
    b844:	moveq	r2, #1
    b848:	movne	r2, #0
    b84c:	b	b854 <little2_predefinedEntityName+0xb8>
    b850:	mov	r2, #0
    b854:	cmp	r2, #0
    b858:	beq	ba24 <little2_predefinedEntityName+0x288>
    b85c:	add	ip, r0, #2
    b860:	ldrb	r2, [ip, #1]
    b864:	cmp	r2, #0
    b868:	bne	b880 <little2_predefinedEntityName+0xe4>
    b86c:	ldrb	r0, [ip]
    b870:	cmp	r0, #116	; 0x74
    b874:	moveq	r0, #1
    b878:	movne	r0, #0
    b87c:	b	b884 <little2_predefinedEntityName+0xe8>
    b880:	mov	r0, #0
    b884:	cmp	r0, #0
    b888:	beq	ba24 <little2_predefinedEntityName+0x288>
    b88c:	mov	r0, #34	; 0x22
    b890:	b	ba28 <little2_predefinedEntityName+0x28c>
    b894:	add	r2, r1, #2
    b898:	ldrb	r3, [r2, #1]
    b89c:	cmp	r3, #0
    b8a0:	bne	b8b8 <little2_predefinedEntityName+0x11c>
    b8a4:	ldrb	r1, [r2]
    b8a8:	cmp	r1, #112	; 0x70
    b8ac:	moveq	r3, #1
    b8b0:	movne	r3, #0
    b8b4:	b	b8bc <little2_predefinedEntityName+0x120>
    b8b8:	mov	r3, #0
    b8bc:	cmp	r3, #0
    b8c0:	beq	ba24 <little2_predefinedEntityName+0x288>
    b8c4:	add	ip, r2, #2
    b8c8:	ldrb	r2, [ip, #1]
    b8cc:	cmp	r2, #0
    b8d0:	bne	b8e8 <little2_predefinedEntityName+0x14c>
    b8d4:	ldrb	r3, [ip]
    b8d8:	cmp	r3, #111	; 0x6f
    b8dc:	moveq	r3, #1
    b8e0:	movne	r3, #0
    b8e4:	b	b8ec <little2_predefinedEntityName+0x150>
    b8e8:	mov	r3, #0
    b8ec:	cmp	r3, #0
    b8f0:	beq	ba24 <little2_predefinedEntityName+0x288>
    b8f4:	add	r3, ip, #2
    b8f8:	ldrb	r1, [r3, #1]
    b8fc:	cmp	r1, #0
    b900:	bne	b918 <little2_predefinedEntityName+0x17c>
    b904:	ldrb	r0, [r3]
    b908:	cmp	r0, #115	; 0x73
    b90c:	moveq	r0, #1
    b910:	movne	r0, #0
    b914:	b	b91c <little2_predefinedEntityName+0x180>
    b918:	mov	r0, #0
    b91c:	cmp	r0, #0
    b920:	beq	ba24 <little2_predefinedEntityName+0x288>
    b924:	mov	r0, #39	; 0x27
    b928:	b	ba28 <little2_predefinedEntityName+0x28c>
    b92c:	ldrb	r3, [r1, #1]
    b930:	cmp	r3, #0
    b934:	bne	b94c <little2_predefinedEntityName+0x1b0>
    b938:	ldrb	r2, [r1]
    b93c:	cmp	r2, #97	; 0x61
    b940:	moveq	r2, #1
    b944:	movne	r2, #0
    b948:	b	b950 <little2_predefinedEntityName+0x1b4>
    b94c:	mov	r2, #0
    b950:	cmp	r2, #0
    b954:	beq	ba24 <little2_predefinedEntityName+0x288>
    b958:	add	r2, r1, #2
    b95c:	ldrb	r0, [r2, #1]
    b960:	cmp	r0, #0
    b964:	bne	b97c <little2_predefinedEntityName+0x1e0>
    b968:	ldrb	ip, [r2]
    b96c:	cmp	ip, #109	; 0x6d
    b970:	moveq	r0, #1
    b974:	movne	r0, #0
    b978:	b	b980 <little2_predefinedEntityName+0x1e4>
    b97c:	mov	r0, #0
    b980:	cmp	r0, #0
    b984:	beq	ba24 <little2_predefinedEntityName+0x288>
    b988:	add	r0, r2, #2
    b98c:	ldrb	ip, [r0, #1]
    b990:	cmp	ip, #0
    b994:	bne	b9ac <little2_predefinedEntityName+0x210>
    b998:	ldrb	r0, [r0]
    b99c:	cmp	r0, #112	; 0x70
    b9a0:	moveq	r0, #1
    b9a4:	movne	r0, #0
    b9a8:	b	b9b0 <little2_predefinedEntityName+0x214>
    b9ac:	mov	r0, #0
    b9b0:	cmp	r0, #0
    b9b4:	beq	ba24 <little2_predefinedEntityName+0x288>
    b9b8:	mov	r0, #38	; 0x26
    b9bc:	b	ba28 <little2_predefinedEntityName+0x28c>
    b9c0:	ldrb	r0, [r1, #3]
    b9c4:	cmp	r0, #0
    b9c8:	bne	b9e0 <little2_predefinedEntityName+0x244>
    b9cc:	ldrb	r2, [r1, #2]
    b9d0:	cmp	r2, #116	; 0x74
    b9d4:	moveq	r2, #1
    b9d8:	movne	r2, #0
    b9dc:	b	b9e4 <little2_predefinedEntityName+0x248>
    b9e0:	mov	r2, #0
    b9e4:	cmp	r2, #0
    b9e8:	beq	ba24 <little2_predefinedEntityName+0x288>
    b9ec:	ldrb	r0, [r1, #1]
    b9f0:	cmp	r0, #0
    b9f4:	beq	ba00 <little2_predefinedEntityName+0x264>
    b9f8:	mvn	r1, #0
    b9fc:	b	ba04 <little2_predefinedEntityName+0x268>
    ba00:	ldrb	r1, [r1]
    ba04:	cmp	r1, #103	; 0x67
    ba08:	beq	ba1c <little2_predefinedEntityName+0x280>
    ba0c:	cmp	r1, #108	; 0x6c
    ba10:	bne	ba24 <little2_predefinedEntityName+0x288>
    ba14:	mov	r0, #60	; 0x3c
    ba18:	b	ba28 <little2_predefinedEntityName+0x28c>
    ba1c:	mov	r0, #62	; 0x3e
    ba20:	b	ba28 <little2_predefinedEntityName+0x28c>
    ba24:	mov	r0, #0
    ba28:	ldr	lr, [sp, #4]
    ba2c:	add	sp, sp, #8
    ba30:	bx	lr

0000ba34 <little2_sameName>:
    ba34:	mov	ip, sp
    ba38:	sub	sp, sp, #24
    ba3c:	str	ip, [sp]
    ba40:	str	lr, [sp, #4]
    ba44:	str	r4, [sp, #8]
    ba48:	str	r5, [sp, #12]
    ba4c:	str	r6, [sp, #16]
    ba50:	mov	r5, r2
    ba54:	mov	r4, r1
    ba58:	mov	r6, r0
    ba5c:	ldrb	r2, [r4, #1]
    ba60:	cmp	r2, #0
    ba64:	beq	ba80 <little2_sameName+0x4c>
    ba68:	ldrb	r0, [r4, #1]
    ba6c:	and	r0, r0, #255	; 0xff
    ba70:	ldrb	r3, [r4]
    ba74:	and	r1, r3, #255	; 0xff
    ba78:	bl	5988 <unicode_byte_type>
    ba7c:	b	ba90 <little2_sameName+0x5c>
    ba80:	ldrb	r1, [r4]
    ba84:	and	r2, r1, #255	; 0xff
    ba88:	add	r3, r6, r2
    ba8c:	ldrb	r0, [r3, #76]	; 0x4c
    ba90:	sub	r3, r0, #5
    ba94:	cmp	r3, #25
    ba98:	bcs	bc5c <little2_sameName+0x228>
    ba9c:	add	pc, pc, r3, lsl #2
    baa0:	nop	{0}
    baa4:	b	bb58 <little2_sameName+0x124>
    baa8:	b	bb30 <little2_sameName+0xfc>
    baac:	b	bb08 <little2_sameName+0xd4>
    bab0:	b	bc5c <little2_sameName+0x228>
    bab4:	b	bc5c <little2_sameName+0x228>
    bab8:	b	bc5c <little2_sameName+0x228>
    babc:	b	bc5c <little2_sameName+0x228>
    bac0:	b	bc5c <little2_sameName+0x228>
    bac4:	b	bc5c <little2_sameName+0x228>
    bac8:	b	bc5c <little2_sameName+0x228>
    bacc:	b	bc5c <little2_sameName+0x228>
    bad0:	b	bc5c <little2_sameName+0x228>
    bad4:	b	bc5c <little2_sameName+0x228>
    bad8:	b	bc5c <little2_sameName+0x228>
    badc:	b	bc5c <little2_sameName+0x228>
    bae0:	b	bc5c <little2_sameName+0x228>
    bae4:	b	bc5c <little2_sameName+0x228>
    bae8:	b	bb98 <little2_sameName+0x164>
    baec:	b	bb98 <little2_sameName+0x164>
    baf0:	b	bb98 <little2_sameName+0x164>
    baf4:	b	bb98 <little2_sameName+0x164>
    baf8:	b	bb98 <little2_sameName+0x164>
    bafc:	b	bb98 <little2_sameName+0x164>
    bb00:	b	bc5c <little2_sameName+0x228>
    bb04:	b	bb98 <little2_sameName+0x164>
    bb08:	mov	ip, r4
    bb0c:	add	r4, ip, #1
    bb10:	mov	r1, r5
    bb14:	add	r5, r1, #1
    bb18:	ldrb	r3, [ip]
    bb1c:	ldrb	r0, [r1]
    bb20:	cmp	r3, r0
    bb24:	beq	bb30 <little2_sameName+0xfc>
    bb28:	mov	r0, #0
    bb2c:	b	bd4c <little2_sameName+0x318>
    bb30:	mov	r1, r4
    bb34:	add	r4, r1, #1
    bb38:	mov	r3, r5
    bb3c:	add	r5, r3, #1
    bb40:	ldrb	ip, [r1]
    bb44:	ldrb	r2, [r3]
    bb48:	cmp	ip, r2
    bb4c:	beq	bb58 <little2_sameName+0x124>
    bb50:	mov	r0, #0
    bb54:	b	bd4c <little2_sameName+0x318>
    bb58:	add	r0, r4, #1
    bb5c:	add	r2, r5, #1
    bb60:	ldrb	r3, [r4]
    bb64:	ldrb	ip, [r5]
    bb68:	cmp	r3, ip
    bb6c:	beq	bb78 <little2_sameName+0x144>
    bb70:	mov	r0, #0
    bb74:	b	bd4c <little2_sameName+0x318>
    bb78:	add	r4, r0, #1
    bb7c:	add	r5, r2, #1
    bb80:	ldrb	r1, [r0]
    bb84:	ldrb	r0, [r2]
    bb88:	cmp	r1, r0
    bb8c:	beq	ba5c <little2_sameName+0x28>
    bb90:	mov	r0, #0
    bb94:	b	bd4c <little2_sameName+0x318>
    bb98:	mov	r2, r5
    bb9c:	add	r5, r2, #1
    bba0:	mov	r0, r4
    bba4:	add	r4, r0, #1
    bba8:	ldrb	ip, [r2]
    bbac:	ldrb	r1, [r0]
    bbb0:	cmp	ip, r1
    bbb4:	beq	bbc0 <little2_sameName+0x18c>
    bbb8:	mov	r0, #0
    bbbc:	b	bd4c <little2_sameName+0x318>
    bbc0:	mov	r2, #1
    bbc4:	cmp	r2, #0
    bbc8:	beq	ba5c <little2_sameName+0x28>
    bbcc:	mov	ip, r5
    bbd0:	add	r5, ip, #1
    bbd4:	mov	r2, r4
    bbd8:	add	r4, r2, #1
    bbdc:	ldrb	r3, [ip]
    bbe0:	ldrb	r2, [r2]
    bbe4:	cmp	r3, r2
    bbe8:	beq	bbf4 <little2_sameName+0x1c0>
    bbec:	mov	r0, #0
    bbf0:	b	bd4c <little2_sameName+0x318>
    bbf4:	mov	r0, #0
    bbf8:	cmp	r0, #0
    bbfc:	beq	ba5c <little2_sameName+0x28>
    bc00:	mov	r3, r5
    bc04:	add	r5, r3, #1
    bc08:	mov	r1, r4
    bc0c:	add	r4, r1, #1
    bc10:	ldrb	r2, [r3]
    bc14:	ldrb	ip, [r1]
    bc18:	cmp	r2, ip
    bc1c:	beq	bc28 <little2_sameName+0x1f4>
    bc20:	mov	r0, #0
    bc24:	b	bd4c <little2_sameName+0x318>
    bc28:	mov	r3, #0
    bc2c:	cmp	r3, #0
    bc30:	beq	ba5c <little2_sameName+0x28>
    bc34:	mov	r0, r5
    bc38:	add	r5, r0, #1
    bc3c:	mov	r3, r4
    bc40:	add	r4, r3, #1
    bc44:	ldrb	ip, [r0]
    bc48:	ldrb	r3, [r3]
    bc4c:	cmp	ip, r3
    bc50:	beq	ba5c <little2_sameName+0x28>
    bc54:	mov	r0, #0
    bc58:	b	bd4c <little2_sameName+0x318>
    bc5c:	mov	r0, #0
    bc60:	cmp	r0, #0
    bc64:	beq	bc80 <little2_sameName+0x24c>
    bc68:	ldrb	r1, [r4]
    bc6c:	ldrb	r0, [r5]
    bc70:	cmp	r1, r0
    bc74:	moveq	r1, #1
    bc78:	movne	r1, #0
    bc7c:	b	bc84 <little2_sameName+0x250>
    bc80:	mov	r1, #0
    bc84:	cmp	r1, #0
    bc88:	beq	bc94 <little2_sameName+0x260>
    bc8c:	mov	r0, #1
    bc90:	b	bd4c <little2_sameName+0x318>
    bc94:	ldrb	r1, [r5, #1]
    bc98:	cmp	r1, #0
    bc9c:	beq	bcb8 <little2_sameName+0x284>
    bca0:	ldrb	ip, [r5, #1]
    bca4:	and	r0, ip, #255	; 0xff
    bca8:	ldrb	r1, [r5]
    bcac:	and	r1, r1, #255	; 0xff
    bcb0:	bl	5988 <unicode_byte_type>
    bcb4:	b	bcc8 <little2_sameName+0x294>
    bcb8:	ldrb	r0, [r5]
    bcbc:	and	r1, r0, #255	; 0xff
    bcc0:	add	r0, r6, r1
    bcc4:	ldrb	r0, [r0, #76]	; 0x4c
    bcc8:	sub	r0, r0, #5
    bccc:	cmp	r0, #25
    bcd0:	bcs	bd48 <little2_sameName+0x314>
    bcd4:	add	pc, pc, r0, lsl #2
    bcd8:	nop	{0}
    bcdc:	b	bd40 <little2_sameName+0x30c>
    bce0:	b	bd40 <little2_sameName+0x30c>
    bce4:	b	bd40 <little2_sameName+0x30c>
    bce8:	b	bd48 <little2_sameName+0x314>
    bcec:	b	bd48 <little2_sameName+0x314>
    bcf0:	b	bd48 <little2_sameName+0x314>
    bcf4:	b	bd48 <little2_sameName+0x314>
    bcf8:	b	bd48 <little2_sameName+0x314>
    bcfc:	b	bd48 <little2_sameName+0x314>
    bd00:	b	bd48 <little2_sameName+0x314>
    bd04:	b	bd48 <little2_sameName+0x314>
    bd08:	b	bd48 <little2_sameName+0x314>
    bd0c:	b	bd48 <little2_sameName+0x314>
    bd10:	b	bd48 <little2_sameName+0x314>
    bd14:	b	bd48 <little2_sameName+0x314>
    bd18:	b	bd48 <little2_sameName+0x314>
    bd1c:	b	bd48 <little2_sameName+0x314>
    bd20:	b	bd40 <little2_sameName+0x30c>
    bd24:	b	bd40 <little2_sameName+0x30c>
    bd28:	b	bd40 <little2_sameName+0x30c>
    bd2c:	b	bd40 <little2_sameName+0x30c>
    bd30:	b	bd40 <little2_sameName+0x30c>
    bd34:	b	bd40 <little2_sameName+0x30c>
    bd38:	b	bd48 <little2_sameName+0x314>
    bd3c:	b	bd40 <little2_sameName+0x30c>
    bd40:	mov	r0, #0
    bd44:	b	bd4c <little2_sameName+0x318>
    bd48:	mov	r0, #1
    bd4c:	ldr	r4, [sp, #8]
    bd50:	ldr	r5, [sp, #12]
    bd54:	ldr	r6, [sp, #16]
    bd58:	ldr	lr, [sp, #4]
    bd5c:	add	sp, sp, #24
    bd60:	bx	lr

0000bd64 <little2_nameMatchesAscii>:
    bd64:	mov	ip, sp
    bd68:	sub	sp, sp, #8
    bd6c:	str	ip, [sp]
    bd70:	str	lr, [sp, #4]
    bd74:	ldrb	r0, [r3]
    bd78:	cmp	r0, #0
    bd7c:	beq	bdd4 <little2_nameMatchesAscii+0x70>
    bd80:	cmp	r1, r2
    bd84:	bne	bd90 <little2_nameMatchesAscii+0x2c>
    bd88:	mov	r0, #0
    bd8c:	b	bde0 <little2_nameMatchesAscii+0x7c>
    bd90:	ldrb	ip, [r1, #1]
    bd94:	cmp	ip, #0
    bd98:	bne	bdb4 <little2_nameMatchesAscii+0x50>
    bd9c:	ldrb	ip, [r1]
    bda0:	ldrb	r0, [r3]
    bda4:	cmp	ip, r0
    bda8:	moveq	ip, #1
    bdac:	movne	ip, #0
    bdb0:	b	bdb8 <little2_nameMatchesAscii+0x54>
    bdb4:	mov	ip, #0
    bdb8:	cmp	ip, #0
    bdbc:	bne	bdc8 <little2_nameMatchesAscii+0x64>
    bdc0:	mov	r0, #0
    bdc4:	b	bde0 <little2_nameMatchesAscii+0x7c>
    bdc8:	add	r1, r1, #2
    bdcc:	add	r3, r3, #1
    bdd0:	b	bd74 <little2_nameMatchesAscii+0x10>
    bdd4:	cmp	r1, r2
    bdd8:	moveq	r0, #1
    bddc:	movne	r0, #0
    bde0:	ldr	lr, [sp, #4]
    bde4:	add	sp, sp, #8
    bde8:	bx	lr

0000bdec <little2_nameLength>:
    bdec:	mov	ip, sp
    bdf0:	sub	sp, sp, #24
    bdf4:	str	ip, [sp]
    bdf8:	str	lr, [sp, #4]
    bdfc:	str	r4, [sp, #8]
    be00:	str	r5, [sp, #12]
    be04:	str	r6, [sp, #16]
    be08:	mov	r4, r1
    be0c:	mov	r5, r0
    be10:	mov	r6, r4
    be14:	ldrb	r3, [r4, #1]
    be18:	cmp	r3, #0
    be1c:	beq	be38 <little2_nameLength+0x4c>
    be20:	ldrb	r1, [r4, #1]
    be24:	and	r0, r1, #255	; 0xff
    be28:	ldrb	r3, [r4]
    be2c:	and	r1, r3, #255	; 0xff
    be30:	bl	5988 <unicode_byte_type>
    be34:	b	be48 <little2_nameLength+0x5c>
    be38:	ldrb	r0, [r4]
    be3c:	and	r0, r0, #255	; 0xff
    be40:	add	r2, r5, r0
    be44:	ldrb	r0, [r2, #76]	; 0x4c
    be48:	sub	r2, r0, #5
    be4c:	cmp	r2, #25
    be50:	bcs	bee0 <little2_nameLength+0xf4>
    be54:	add	pc, pc, r2, lsl #2
    be58:	nop	{0}
    be5c:	b	bec0 <little2_nameLength+0xd4>
    be60:	b	bec8 <little2_nameLength+0xdc>
    be64:	b	bed0 <little2_nameLength+0xe4>
    be68:	b	bee0 <little2_nameLength+0xf4>
    be6c:	b	bee0 <little2_nameLength+0xf4>
    be70:	b	bee0 <little2_nameLength+0xf4>
    be74:	b	bee0 <little2_nameLength+0xf4>
    be78:	b	bee0 <little2_nameLength+0xf4>
    be7c:	b	bee0 <little2_nameLength+0xf4>
    be80:	b	bee0 <little2_nameLength+0xf4>
    be84:	b	bee0 <little2_nameLength+0xf4>
    be88:	b	bee0 <little2_nameLength+0xf4>
    be8c:	b	bee0 <little2_nameLength+0xf4>
    be90:	b	bee0 <little2_nameLength+0xf4>
    be94:	b	bee0 <little2_nameLength+0xf4>
    be98:	b	bee0 <little2_nameLength+0xf4>
    be9c:	b	bee0 <little2_nameLength+0xf4>
    bea0:	b	bed8 <little2_nameLength+0xec>
    bea4:	b	bed8 <little2_nameLength+0xec>
    bea8:	b	bed8 <little2_nameLength+0xec>
    beac:	b	bed8 <little2_nameLength+0xec>
    beb0:	b	bed8 <little2_nameLength+0xec>
    beb4:	b	bed8 <little2_nameLength+0xec>
    beb8:	b	bee0 <little2_nameLength+0xf4>
    bebc:	b	bed8 <little2_nameLength+0xec>
    bec0:	add	r4, r4, #2
    bec4:	b	be14 <little2_nameLength+0x28>
    bec8:	add	r4, r4, #3
    becc:	b	be14 <little2_nameLength+0x28>
    bed0:	add	r4, r4, #4
    bed4:	b	be14 <little2_nameLength+0x28>
    bed8:	add	r4, r4, #2
    bedc:	b	be14 <little2_nameLength+0x28>
    bee0:	sub	r0, r4, r6
    bee4:	ldr	r4, [sp, #8]
    bee8:	ldr	r5, [sp, #12]
    beec:	ldr	r6, [sp, #16]
    bef0:	ldr	lr, [sp, #4]
    bef4:	add	sp, sp, #24
    bef8:	bx	lr

0000befc <little2_skipS>:
    befc:	mov	ip, sp
    bf00:	sub	sp, sp, #16
    bf04:	str	ip, [sp]
    bf08:	str	lr, [sp, #4]
    bf0c:	str	r4, [sp, #8]
    bf10:	str	r5, [sp, #12]
    bf14:	mov	r4, r1
    bf18:	mov	r5, r0
    bf1c:	ldrb	r2, [r4, #1]
    bf20:	cmp	r2, #0
    bf24:	beq	bf40 <little2_skipS+0x44>
    bf28:	ldrb	r1, [r4, #1]
    bf2c:	and	r0, r1, #255	; 0xff
    bf30:	ldrb	r1, [r4]
    bf34:	and	r1, r1, #255	; 0xff
    bf38:	bl	5988 <unicode_byte_type>
    bf3c:	b	bf50 <little2_skipS+0x54>
    bf40:	ldrb	r0, [r4]
    bf44:	and	ip, r0, #255	; 0xff
    bf48:	add	r0, r5, ip
    bf4c:	ldrb	r0, [r0, #76]	; 0x4c
    bf50:	cmp	r0, #9
    bf54:	beq	bf80 <little2_skipS+0x84>
    bf58:	cmp	r0, #10
    bf5c:	beq	bf80 <little2_skipS+0x84>
    bf60:	cmp	r0, #21
    bf64:	beq	bf80 <little2_skipS+0x84>
    bf68:	mov	r0, r4
    bf6c:	ldr	r4, [sp, #8]
    bf70:	ldr	r5, [sp, #12]
    bf74:	ldr	lr, [sp, #4]
    bf78:	add	sp, sp, #16
    bf7c:	bx	lr
    bf80:	add	r4, r4, #2
    bf84:	b	bf1c <little2_skipS+0x20>

0000bf88 <little2_updatePosition>:
    bf88:	mov	ip, sp
    bf8c:	sub	sp, sp, #24
    bf90:	str	ip, [sp]
    bf94:	str	lr, [sp, #4]
    bf98:	str	r4, [sp, #8]
    bf9c:	str	r5, [sp, #12]
    bfa0:	str	r6, [sp, #16]
    bfa4:	str	r7, [sp, #20]
    bfa8:	mov	r6, r3
    bfac:	mov	r4, r2
    bfb0:	mov	r7, r1
    bfb4:	mov	r5, r0
    bfb8:	cmp	r7, r4
    bfbc:	bcs	c130 <little2_updatePosition+0x1a8>
    bfc0:	ldrb	ip, [r7, #1]
    bfc4:	cmp	ip, #0
    bfc8:	beq	bfe4 <little2_updatePosition+0x5c>
    bfcc:	ldrb	r0, [r7, #1]
    bfd0:	and	r0, r0, #255	; 0xff
    bfd4:	ldrb	r3, [r7]
    bfd8:	and	r1, r3, #255	; 0xff
    bfdc:	bl	5988 <unicode_byte_type>
    bfe0:	b	bff4 <little2_updatePosition+0x6c>
    bfe4:	ldrb	r1, [r7]
    bfe8:	and	r1, r1, #255	; 0xff
    bfec:	add	r2, r5, r1
    bff0:	ldrb	r0, [r2, #76]	; 0x4c
    bff4:	cmp	r0, #7
    bff8:	bcs	c01c <little2_updatePosition+0x94>
    bffc:	cmp	r0, #5
    c000:	beq	c014 <little2_updatePosition+0x8c>
    c004:	cmp	r0, #6
    c008:	bne	c06c <little2_updatePosition+0xe4>
    c00c:	add	r7, r7, #3
    c010:	b	c10c <little2_updatePosition+0x184>
    c014:	add	r7, r7, #2
    c018:	b	c10c <little2_updatePosition+0x184>
    c01c:	cmp	r0, #7
    c020:	beq	c108 <little2_updatePosition+0x180>
    c024:	cmp	r0, #9
    c028:	beq	c074 <little2_updatePosition+0xec>
    c02c:	cmp	r0, #10
    c030:	bne	c06c <little2_updatePosition+0xe4>
    c034:	mvn	ip, #0
    c038:	mvn	r3, #0
    c03c:	str	r3, [r6, #8]
    c040:	str	ip, [r6, #12]
    c044:	ldr	r1, [r6]
    c048:	ldr	ip, [r6, #4]
    c04c:	mov	r3, #0
    c050:	mov	r2, #1
    c054:	adds	r0, r1, r2
    c058:	adc	r3, ip, r3
    c05c:	str	r0, [r6]
    c060:	str	r3, [r6, #4]
    c064:	add	r7, r7, #2
    c068:	b	c10c <little2_updatePosition+0x184>
    c06c:	add	r7, r7, #2
    c070:	b	c10c <little2_updatePosition+0x184>
    c074:	ldr	r3, [r6]
    c078:	ldr	r2, [r6, #4]
    c07c:	mov	r1, #0
    c080:	mov	r0, #1
    c084:	adds	r3, r3, r0
    c088:	adc	ip, r2, r1
    c08c:	str	r3, [r6]
    c090:	str	ip, [r6, #4]
    c094:	add	r7, r7, #2
    c098:	cmp	r7, r4
    c09c:	beq	c0e4 <little2_updatePosition+0x15c>
    c0a0:	ldrb	r2, [r7, #1]
    c0a4:	cmp	r2, #0
    c0a8:	beq	c0c4 <little2_updatePosition+0x13c>
    c0ac:	ldrb	r3, [r7, #1]
    c0b0:	and	r0, r3, #255	; 0xff
    c0b4:	ldrb	r1, [r7]
    c0b8:	and	r1, r1, #255	; 0xff
    c0bc:	bl	5988 <unicode_byte_type>
    c0c0:	b	c0d4 <little2_updatePosition+0x14c>
    c0c4:	ldrb	ip, [r7]
    c0c8:	and	r1, ip, #255	; 0xff
    c0cc:	add	ip, r5, r1
    c0d0:	ldrb	r0, [ip, #76]	; 0x4c
    c0d4:	cmp	r0, #10
    c0d8:	moveq	r0, #1
    c0dc:	movne	r0, #0
    c0e0:	b	c0e8 <little2_updatePosition+0x160>
    c0e4:	mov	r0, #0
    c0e8:	cmp	r0, #0
    c0ec:	beq	c0f4 <little2_updatePosition+0x16c>
    c0f0:	add	r7, r7, #2
    c0f4:	mvn	r2, #0
    c0f8:	mvn	r1, #0
    c0fc:	str	r1, [r6, #8]
    c100:	str	r2, [r6, #12]
    c104:	b	c10c <little2_updatePosition+0x184>
    c108:	add	r7, r7, #4
    c10c:	ldr	r2, [r6, #8]
    c110:	ldr	r1, [r6, #12]
    c114:	mov	r0, #0
    c118:	mov	ip, #1
    c11c:	adds	ip, r2, ip
    c120:	adc	r2, r1, r0
    c124:	str	ip, [r6, #8]
    c128:	str	r2, [r6, #12]
    c12c:	b	bfb8 <little2_updatePosition+0x30>
    c130:	ldr	r4, [sp, #8]
    c134:	ldr	r5, [sp, #12]
    c138:	ldr	r6, [sp, #16]
    c13c:	ldr	r7, [sp, #20]
    c140:	ldr	lr, [sp, #4]
    c144:	add	sp, sp, #24
    c148:	bx	lr

0000c14c <big2_scanComment>:
    c14c:	mov	ip, sp
    c150:	sub	sp, sp, #24
    c154:	str	ip, [sp]
    c158:	str	lr, [sp, #4]
    c15c:	str	r4, [sp, #8]
    c160:	str	r5, [sp, #12]
    c164:	str	r6, [sp, #16]
    c168:	str	r7, [sp, #20]
    c16c:	mov	r5, r3
    c170:	mov	r4, r2
    c174:	mov	r6, r0
    c178:	cmp	r1, r4
    c17c:	beq	c384 <big2_scanComment+0x238>
    c180:	ldrb	r2, [r1]
    c184:	cmp	r2, #0
    c188:	bne	c1a0 <big2_scanComment+0x54>
    c18c:	ldrb	r2, [r1, #1]
    c190:	cmp	r2, #45	; 0x2d
    c194:	moveq	r2, #1
    c198:	movne	r2, #0
    c19c:	b	c1a4 <big2_scanComment+0x58>
    c1a0:	mov	r2, #0
    c1a4:	cmp	r2, #0
    c1a8:	bne	c1b8 <big2_scanComment+0x6c>
    c1ac:	str	r1, [r5]
    c1b0:	mov	r0, #0
    c1b4:	b	c388 <big2_scanComment+0x23c>
    c1b8:	add	r7, r1, #2
    c1bc:	cmp	r7, r4
    c1c0:	beq	c384 <big2_scanComment+0x238>
    c1c4:	ldrb	r3, [r7]
    c1c8:	cmp	r3, #0
    c1cc:	beq	c1e8 <big2_scanComment+0x9c>
    c1d0:	ldrb	r3, [r7]
    c1d4:	and	r0, r3, #255	; 0xff
    c1d8:	ldrb	ip, [r7, #1]
    c1dc:	and	r1, ip, #255	; 0xff
    c1e0:	bl	5988 <unicode_byte_type>
    c1e4:	b	c1f8 <big2_scanComment+0xac>
    c1e8:	ldrb	r2, [r7, #1]
    c1ec:	and	ip, r2, #255	; 0xff
    c1f0:	add	ip, r6, ip
    c1f4:	ldrb	r0, [ip, #76]	; 0x4c
    c1f8:	cmp	r0, #6
    c1fc:	bcs	c24c <big2_scanComment+0x100>
    c200:	cmp	r0, #0
    c204:	beq	c378 <big2_scanComment+0x22c>
    c208:	cmp	r0, #1
    c20c:	beq	c378 <big2_scanComment+0x22c>
    c210:	cmp	r0, #5
    c214:	bne	c370 <big2_scanComment+0x224>
    c218:	sub	r1, r4, r7
    c21c:	cmp	r1, #2
    c220:	bge	c22c <big2_scanComment+0xe0>
    c224:	mvn	r0, #1
    c228:	b	c388 <big2_scanComment+0x23c>
    c22c:	mov	r3, #0
    c230:	cmp	r3, #0
    c234:	beq	c244 <big2_scanComment+0xf8>
    c238:	str	r7, [r5]
    c23c:	mov	r0, #0
    c240:	b	c388 <big2_scanComment+0x23c>
    c244:	add	r7, r7, #2
    c248:	b	c1bc <big2_scanComment+0x70>
    c24c:	cmp	r0, #8
    c250:	bcs	c2c4 <big2_scanComment+0x178>
    c254:	cmp	r0, #6
    c258:	bne	c290 <big2_scanComment+0x144>
    c25c:	sub	r0, r4, r7
    c260:	cmp	r0, #3
    c264:	bge	c270 <big2_scanComment+0x124>
    c268:	mvn	r0, #1
    c26c:	b	c388 <big2_scanComment+0x23c>
    c270:	mov	ip, #0
    c274:	cmp	ip, #0
    c278:	beq	c288 <big2_scanComment+0x13c>
    c27c:	str	r7, [r5]
    c280:	mov	r0, #0
    c284:	b	c388 <big2_scanComment+0x23c>
    c288:	add	r7, r7, #3
    c28c:	b	c1bc <big2_scanComment+0x70>
    c290:	sub	r0, r4, r7
    c294:	cmp	r0, #4
    c298:	bge	c2a4 <big2_scanComment+0x158>
    c29c:	mvn	r0, #1
    c2a0:	b	c388 <big2_scanComment+0x23c>
    c2a4:	mov	r1, #0
    c2a8:	cmp	r1, #0
    c2ac:	beq	c2bc <big2_scanComment+0x170>
    c2b0:	str	r7, [r5]
    c2b4:	mov	r0, #0
    c2b8:	b	c388 <big2_scanComment+0x23c>
    c2bc:	add	r7, r7, #4
    c2c0:	b	c1bc <big2_scanComment+0x70>
    c2c4:	cmp	r0, #8
    c2c8:	beq	c378 <big2_scanComment+0x22c>
    c2cc:	cmp	r0, #27
    c2d0:	bne	c370 <big2_scanComment+0x224>
    c2d4:	add	r7, r7, #2
    c2d8:	cmp	r7, r4
    c2dc:	bne	c2e8 <big2_scanComment+0x19c>
    c2e0:	mvn	r0, #0
    c2e4:	b	c388 <big2_scanComment+0x23c>
    c2e8:	ldrb	r3, [r7]
    c2ec:	cmp	r3, #0
    c2f0:	bne	c308 <big2_scanComment+0x1bc>
    c2f4:	ldrb	r0, [r7, #1]
    c2f8:	cmp	r0, #45	; 0x2d
    c2fc:	moveq	r2, #1
    c300:	movne	r2, #0
    c304:	b	c30c <big2_scanComment+0x1c0>
    c308:	mov	r2, #0
    c30c:	cmp	r2, #0
    c310:	beq	c1bc <big2_scanComment+0x70>
    c314:	add	r0, r7, #2
    c318:	cmp	r0, r4
    c31c:	bne	c328 <big2_scanComment+0x1dc>
    c320:	mvn	r0, #0
    c324:	b	c388 <big2_scanComment+0x23c>
    c328:	ldrb	r1, [r0]
    c32c:	cmp	r1, #0
    c330:	bne	c348 <big2_scanComment+0x1fc>
    c334:	ldrb	r1, [r0, #1]
    c338:	cmp	r1, #62	; 0x3e
    c33c:	moveq	r2, #1
    c340:	movne	r2, #0
    c344:	b	c34c <big2_scanComment+0x200>
    c348:	mov	r2, #0
    c34c:	cmp	r2, #0
    c350:	bne	c360 <big2_scanComment+0x214>
    c354:	str	r0, [r5]
    c358:	mov	r0, #0
    c35c:	b	c388 <big2_scanComment+0x23c>
    c360:	add	ip, r0, #2
    c364:	str	ip, [r5]
    c368:	mov	r0, #13
    c36c:	b	c388 <big2_scanComment+0x23c>
    c370:	add	r7, r7, #2
    c374:	b	c1bc <big2_scanComment+0x70>
    c378:	str	r7, [r5]
    c37c:	mov	r0, #0
    c380:	b	c388 <big2_scanComment+0x23c>
    c384:	mvn	r0, #0
    c388:	ldr	r4, [sp, #8]
    c38c:	ldr	r5, [sp, #12]
    c390:	ldr	r6, [sp, #16]
    c394:	ldr	r7, [sp, #20]
    c398:	ldr	lr, [sp, #4]
    c39c:	add	sp, sp, #24
    c3a0:	bx	lr

0000c3a4 <big2_scanDecl>:
    c3a4:	mov	ip, sp
    c3a8:	sub	sp, sp, #24
    c3ac:	str	ip, [sp]
    c3b0:	str	lr, [sp, #4]
    c3b4:	str	r4, [sp, #8]
    c3b8:	str	r5, [sp, #12]
    c3bc:	str	r6, [sp, #16]
    c3c0:	str	r7, [sp, #20]
    c3c4:	mov	r4, r3
    c3c8:	mov	r5, r2
    c3cc:	mov	r7, r1
    c3d0:	mov	r6, r0
    c3d4:	cmp	r7, r5
    c3d8:	bne	c3e4 <big2_scanDecl+0x40>
    c3dc:	mvn	r0, #0
    c3e0:	b	c598 <big2_scanDecl+0x1f4>
    c3e4:	ldrb	r3, [r7]
    c3e8:	cmp	r3, #0
    c3ec:	beq	c408 <big2_scanDecl+0x64>
    c3f0:	ldrb	r2, [r7]
    c3f4:	and	r0, r2, #255	; 0xff
    c3f8:	ldrb	r2, [r7, #1]
    c3fc:	and	r1, r2, #255	; 0xff
    c400:	bl	5988 <unicode_byte_type>
    c404:	b	c418 <big2_scanDecl+0x74>
    c408:	ldrb	r1, [r7, #1]
    c40c:	and	r2, r1, #255	; 0xff
    c410:	add	r0, r6, r2
    c414:	ldrb	r0, [r0, #76]	; 0x4c
    c418:	cmp	r0, #24
    c41c:	bcs	c444 <big2_scanDecl+0xa0>
    c420:	cmp	r0, #20
    c424:	beq	c434 <big2_scanDecl+0x90>
    c428:	cmp	r0, #22
    c42c:	beq	c478 <big2_scanDecl+0xd4>
    c430:	b	c46c <big2_scanDecl+0xc8>
    c434:	add	r0, r7, #2
    c438:	str	r0, [r4]
    c43c:	mov	r0, #33	; 0x21
    c440:	b	c598 <big2_scanDecl+0x1f4>
    c444:	cmp	r0, #24
    c448:	beq	c478 <big2_scanDecl+0xd4>
    c44c:	cmp	r0, #27
    c450:	bne	c46c <big2_scanDecl+0xc8>
    c454:	add	r1, r7, #2
    c458:	mov	r3, r4
    c45c:	mov	r2, r5
    c460:	mov	r0, r6
    c464:	bl	c14c <big2_scanComment>
    c468:	b	c598 <big2_scanDecl+0x1f4>
    c46c:	str	r7, [r4]
    c470:	mov	r0, #0
    c474:	b	c598 <big2_scanDecl+0x1f4>
    c478:	add	r7, r7, #2
    c47c:	cmp	r7, r5
    c480:	beq	c594 <big2_scanDecl+0x1f0>
    c484:	ldrb	r3, [r7]
    c488:	cmp	r3, #0
    c48c:	beq	c4a8 <big2_scanDecl+0x104>
    c490:	ldrb	r2, [r7]
    c494:	and	r0, r2, #255	; 0xff
    c498:	ldrb	r1, [r7, #1]
    c49c:	and	r1, r1, #255	; 0xff
    c4a0:	bl	5988 <unicode_byte_type>
    c4a4:	b	c4b8 <big2_scanDecl+0x114>
    c4a8:	ldrb	r3, [r7, #1]
    c4ac:	and	r2, r3, #255	; 0xff
    c4b0:	add	r1, r6, r2
    c4b4:	ldrb	r0, [r1, #76]	; 0x4c
    c4b8:	cmp	r0, #22
    c4bc:	bcs	c4dc <big2_scanDecl+0x138>
    c4c0:	cmp	r0, #9
    c4c4:	beq	c568 <big2_scanDecl+0x1c4>
    c4c8:	cmp	r0, #10
    c4cc:	beq	c568 <big2_scanDecl+0x1c4>
    c4d0:	cmp	r0, #21
    c4d4:	beq	c568 <big2_scanDecl+0x1c4>
    c4d8:	b	c580 <big2_scanDecl+0x1dc>
    c4dc:	cmp	r0, #22
    c4e0:	beq	c58c <big2_scanDecl+0x1e8>
    c4e4:	cmp	r0, #24
    c4e8:	beq	c58c <big2_scanDecl+0x1e8>
    c4ec:	cmp	r0, #30
    c4f0:	bne	c580 <big2_scanDecl+0x1dc>
    c4f4:	add	ip, r7, #2
    c4f8:	cmp	ip, r5
    c4fc:	bne	c508 <big2_scanDecl+0x164>
    c500:	mvn	r0, #0
    c504:	b	c598 <big2_scanDecl+0x1f4>
    c508:	ldrb	r0, [r7, #2]
    c50c:	cmp	r0, #0
    c510:	beq	c52c <big2_scanDecl+0x188>
    c514:	ldrb	r3, [r7, #2]
    c518:	and	r0, r3, #255	; 0xff
    c51c:	ldrb	ip, [r7, #3]
    c520:	and	r1, ip, #255	; 0xff
    c524:	bl	5988 <unicode_byte_type>
    c528:	b	c53c <big2_scanDecl+0x198>
    c52c:	ldrb	ip, [r7, #3]
    c530:	and	ip, ip, #255	; 0xff
    c534:	add	r1, r6, ip
    c538:	ldrb	r0, [r1, #76]	; 0x4c
    c53c:	cmp	r0, #21
    c540:	bcs	c558 <big2_scanDecl+0x1b4>
    c544:	cmp	r0, #9
    c548:	beq	c574 <big2_scanDecl+0x1d0>
    c54c:	cmp	r0, #10
    c550:	beq	c574 <big2_scanDecl+0x1d0>
    c554:	b	c568 <big2_scanDecl+0x1c4>
    c558:	cmp	r0, #21
    c55c:	beq	c574 <big2_scanDecl+0x1d0>
    c560:	cmp	r0, #30
    c564:	beq	c574 <big2_scanDecl+0x1d0>
    c568:	str	r7, [r4]
    c56c:	mov	r0, #16
    c570:	b	c598 <big2_scanDecl+0x1f4>
    c574:	str	r7, [r4]
    c578:	mov	r0, #0
    c57c:	b	c598 <big2_scanDecl+0x1f4>
    c580:	str	r7, [r4]
    c584:	mov	r0, #0
    c588:	b	c598 <big2_scanDecl+0x1f4>
    c58c:	add	r7, r7, #2
    c590:	b	c47c <big2_scanDecl+0xd8>
    c594:	mvn	r0, #0
    c598:	ldr	r4, [sp, #8]
    c59c:	ldr	r5, [sp, #12]
    c5a0:	ldr	r6, [sp, #16]
    c5a4:	ldr	r7, [sp, #20]
    c5a8:	ldr	lr, [sp, #4]
    c5ac:	add	sp, sp, #24
    c5b0:	bx	lr

0000c5b4 <big2_checkPiTarget>:
    c5b4:	mov	ip, sp
    c5b8:	sub	sp, sp, #16
    c5bc:	str	ip, [sp]
    c5c0:	str	lr, [sp, #4]
    c5c4:	str	r4, [sp, #8]
    c5c8:	mov	r4, #0
    c5cc:	mov	ip, #11
    c5d0:	str	ip, [r3]
    c5d4:	sub	ip, r2, r1
    c5d8:	cmp	ip, #6
    c5dc:	beq	c5e8 <big2_checkPiTarget+0x34>
    c5e0:	mov	r0, #1
    c5e4:	b	c6a8 <big2_checkPiTarget+0xf4>
    c5e8:	ldrb	r0, [r1]
    c5ec:	cmp	r0, #0
    c5f0:	beq	c5fc <big2_checkPiTarget+0x48>
    c5f4:	mvn	r2, #0
    c5f8:	b	c600 <big2_checkPiTarget+0x4c>
    c5fc:	ldrb	r2, [r1, #1]
    c600:	cmp	r2, #88	; 0x58
    c604:	beq	c618 <big2_checkPiTarget+0x64>
    c608:	cmp	r2, #120	; 0x78
    c60c:	beq	c61c <big2_checkPiTarget+0x68>
    c610:	mov	r0, #1
    c614:	b	c6a8 <big2_checkPiTarget+0xf4>
    c618:	mov	r4, #1
    c61c:	add	ip, r1, #2
    c620:	ldrb	r2, [ip]
    c624:	cmp	r2, #0
    c628:	beq	c634 <big2_checkPiTarget+0x80>
    c62c:	mvn	r0, #0
    c630:	b	c638 <big2_checkPiTarget+0x84>
    c634:	ldrb	r0, [ip, #1]
    c638:	cmp	r0, #77	; 0x4d
    c63c:	beq	c650 <big2_checkPiTarget+0x9c>
    c640:	cmp	r0, #109	; 0x6d
    c644:	beq	c654 <big2_checkPiTarget+0xa0>
    c648:	mov	r0, #1
    c64c:	b	c6a8 <big2_checkPiTarget+0xf4>
    c650:	mov	r4, #1
    c654:	add	ip, ip, #2
    c658:	ldrb	r1, [ip]
    c65c:	cmp	r1, #0
    c660:	beq	c66c <big2_checkPiTarget+0xb8>
    c664:	mvn	r1, #0
    c668:	b	c670 <big2_checkPiTarget+0xbc>
    c66c:	ldrb	r1, [ip, #1]
    c670:	cmp	r1, #76	; 0x4c
    c674:	beq	c688 <big2_checkPiTarget+0xd4>
    c678:	cmp	r1, #108	; 0x6c
    c67c:	beq	c68c <big2_checkPiTarget+0xd8>
    c680:	mov	r0, #1
    c684:	b	c6a8 <big2_checkPiTarget+0xf4>
    c688:	mov	r4, #1
    c68c:	cmp	r4, #0
    c690:	beq	c69c <big2_checkPiTarget+0xe8>
    c694:	mov	r0, #0
    c698:	b	c6a8 <big2_checkPiTarget+0xf4>
    c69c:	mov	ip, #12
    c6a0:	str	ip, [r3]
    c6a4:	mov	r0, #1
    c6a8:	ldr	r4, [sp, #8]
    c6ac:	ldr	lr, [sp, #4]
    c6b0:	add	sp, sp, #16
    c6b4:	bx	lr

0000c6b8 <big2_scanPi>:
    c6b8:	mov	ip, sp
    c6bc:	sub	sp, sp, #40	; 0x28
    c6c0:	str	ip, [sp]
    c6c4:	str	lr, [sp, #4]
    c6c8:	str	r4, [sp, #8]
    c6cc:	str	r5, [sp, #12]
    c6d0:	str	r6, [sp, #16]
    c6d4:	str	r7, [sp, #20]
    c6d8:	str	r8, [sp, #24]
    c6dc:	str	r9, [sp, #28]
    c6e0:	mov	r6, r3
    c6e4:	mov	r5, r2
    c6e8:	mov	r4, r1
    c6ec:	mov	r7, r0
    c6f0:	cmp	r4, r5
    c6f4:	bne	c700 <big2_scanPi+0x48>
    c6f8:	mvn	r0, #0
    c6fc:	b	cc58 <big2_scanPi+0x5a0>
    c700:	ldrb	r2, [r4]
    c704:	cmp	r2, #0
    c708:	beq	c724 <big2_scanPi+0x6c>
    c70c:	ldrb	r0, [r4]
    c710:	and	r0, r0, #255	; 0xff
    c714:	ldrb	r3, [r4, #1]
    c718:	and	r1, r3, #255	; 0xff
    c71c:	bl	5988 <unicode_byte_type>
    c720:	b	c734 <big2_scanPi+0x7c>
    c724:	ldrb	r0, [r4, #1]
    c728:	and	r3, r0, #255	; 0xff
    c72c:	add	r0, r7, r3
    c730:	ldrb	r0, [r0, #76]	; 0x4c
    c734:	cmp	r0, #22
    c738:	bcs	c7f0 <big2_scanPi+0x138>
    c73c:	cmp	r0, #5
    c740:	beq	c7bc <big2_scanPi+0x104>
    c744:	cmp	r0, #6
    c748:	beq	c788 <big2_scanPi+0xd0>
    c74c:	cmp	r0, #7
    c750:	bne	c858 <big2_scanPi+0x1a0>
    c754:	sub	ip, r5, r4
    c758:	cmp	ip, #4
    c75c:	bge	c768 <big2_scanPi+0xb0>
    c760:	mvn	r0, #1
    c764:	b	cc58 <big2_scanPi+0x5a0>
    c768:	mov	ip, #1
    c76c:	cmp	ip, #0
    c770:	beq	c780 <big2_scanPi+0xc8>
    c774:	str	r4, [r6]
    c778:	mov	r0, #0
    c77c:	b	cc58 <big2_scanPi+0x5a0>
    c780:	add	r8, r4, #4
    c784:	b	c868 <big2_scanPi+0x1b0>
    c788:	sub	ip, r5, r4
    c78c:	cmp	ip, #3
    c790:	bge	c79c <big2_scanPi+0xe4>
    c794:	mvn	r0, #1
    c798:	b	cc58 <big2_scanPi+0x5a0>
    c79c:	mov	r2, #1
    c7a0:	cmp	r2, #0
    c7a4:	beq	c7b4 <big2_scanPi+0xfc>
    c7a8:	str	r4, [r6]
    c7ac:	mov	r0, #0
    c7b0:	b	cc58 <big2_scanPi+0x5a0>
    c7b4:	add	r8, r4, #3
    c7b8:	b	c868 <big2_scanPi+0x1b0>
    c7bc:	sub	r3, r5, r4
    c7c0:	cmp	r3, #2
    c7c4:	bge	c7d0 <big2_scanPi+0x118>
    c7c8:	mvn	r0, #1
    c7cc:	b	cc58 <big2_scanPi+0x5a0>
    c7d0:	mov	r0, #1
    c7d4:	cmp	r0, #0
    c7d8:	beq	c7e8 <big2_scanPi+0x130>
    c7dc:	str	r4, [r6]
    c7e0:	mov	r0, #0
    c7e4:	b	cc58 <big2_scanPi+0x5a0>
    c7e8:	add	r8, r4, #2
    c7ec:	b	c868 <big2_scanPi+0x1b0>
    c7f0:	cmp	r0, #22
    c7f4:	beq	c864 <big2_scanPi+0x1ac>
    c7f8:	cmp	r0, #24
    c7fc:	beq	c864 <big2_scanPi+0x1ac>
    c800:	cmp	r0, #29
    c804:	bne	c858 <big2_scanPi+0x1a0>
    c808:	ldr	r8, [pc, #1132]	; cc7c <big2_scanPi+0x5c4>
    c80c:	ldrb	r0, [r4, #1]
    c810:	and	r1, r0, #255	; 0xff
    c814:	asr	r3, r1, #5
    c818:	ldr	r1, [pc, #1120]	; cc80 <big2_scanPi+0x5c8>
    c81c:	ldrb	r2, [r4]
    c820:	and	r0, r2, #255	; 0xff
    c824:	ldrb	r1, [r1, r0]
    c828:	add	ip, r3, r1, lsl #3
    c82c:	ldr	r3, [r8, ip, lsl #2]
    c830:	mov	r1, #1
    c834:	ldrb	r2, [r4, #1]
    c838:	and	r0, r2, #31
    c83c:	lsl	r2, r1, r0
    c840:	and	r3, r3, r2
    c844:	cmp	r3, #0
    c848:	bne	c864 <big2_scanPi+0x1ac>
    c84c:	str	r4, [r6]
    c850:	mov	r0, #0
    c854:	b	cc58 <big2_scanPi+0x5a0>
    c858:	str	r4, [r6]
    c85c:	mov	r0, #0
    c860:	b	cc58 <big2_scanPi+0x5a0>
    c864:	add	r8, r4, #2
    c868:	cmp	r8, r5
    c86c:	beq	cc54 <big2_scanPi+0x59c>
    c870:	ldrb	ip, [r8]
    c874:	cmp	ip, #0
    c878:	beq	c894 <big2_scanPi+0x1dc>
    c87c:	ldrb	r3, [r8]
    c880:	and	r0, r3, #255	; 0xff
    c884:	ldrb	r2, [r8, #1]
    c888:	and	r1, r2, #255	; 0xff
    c88c:	bl	5988 <unicode_byte_type>
    c890:	b	c8a4 <big2_scanPi+0x1ec>
    c894:	ldrb	r3, [r8, #1]
    c898:	and	r3, r3, #255	; 0xff
    c89c:	add	r0, r7, r3
    c8a0:	ldrb	r0, [r0, #76]	; 0x4c
    c8a4:	sub	r2, r0, #5
    c8a8:	cmp	r2, #25
    c8ac:	bcs	cc48 <big2_scanPi+0x590>
    c8b0:	add	pc, pc, r2, lsl #2
    c8b4:	nop	{0}
    c8b8:	b	c974 <big2_scanPi+0x2bc>
    c8bc:	b	c9a8 <big2_scanPi+0x2f0>
    c8c0:	b	c9dc <big2_scanPi+0x324>
    c8c4:	b	cc48 <big2_scanPi+0x590>
    c8c8:	b	ca10 <big2_scanPi+0x358>
    c8cc:	b	ca10 <big2_scanPi+0x358>
    c8d0:	b	cc48 <big2_scanPi+0x590>
    c8d4:	b	cc48 <big2_scanPi+0x590>
    c8d8:	b	cc48 <big2_scanPi+0x590>
    c8dc:	b	cc48 <big2_scanPi+0x590>
    c8e0:	b	cbd0 <big2_scanPi+0x518>
    c8e4:	b	cc48 <big2_scanPi+0x590>
    c8e8:	b	cc48 <big2_scanPi+0x590>
    c8ec:	b	cc48 <big2_scanPi+0x590>
    c8f0:	b	cc48 <big2_scanPi+0x590>
    c8f4:	b	cc48 <big2_scanPi+0x590>
    c8f8:	b	ca10 <big2_scanPi+0x358>
    c8fc:	b	c96c <big2_scanPi+0x2b4>
    c900:	b	cc48 <big2_scanPi+0x590>
    c904:	b	c96c <big2_scanPi+0x2b4>
    c908:	b	c96c <big2_scanPi+0x2b4>
    c90c:	b	c96c <big2_scanPi+0x2b4>
    c910:	b	c96c <big2_scanPi+0x2b4>
    c914:	b	cc48 <big2_scanPi+0x590>
    c918:	b	c91c <big2_scanPi+0x264>
    c91c:	ldr	r9, [pc, #856]	; cc7c <big2_scanPi+0x5c4>
    c920:	ldrb	r0, [r8, #1]
    c924:	and	r1, r0, #255	; 0xff
    c928:	asr	ip, r1, #5
    c92c:	ldr	r3, [pc, #848]	; cc84 <big2_scanPi+0x5cc>
    c930:	ldrb	r2, [r8]
    c934:	and	r2, r2, #255	; 0xff
    c938:	ldrb	r1, [r3, r2]
    c93c:	add	ip, ip, r1, lsl #3
    c940:	ldr	r2, [r9, ip, lsl #2]
    c944:	mov	r3, #1
    c948:	ldrb	ip, [r8, #1]
    c94c:	and	ip, ip, #31
    c950:	lsl	r1, r3, ip
    c954:	and	r1, r2, r1
    c958:	cmp	r1, #0
    c95c:	bne	c96c <big2_scanPi+0x2b4>
    c960:	str	r8, [r6]
    c964:	mov	r0, #0
    c968:	b	cc58 <big2_scanPi+0x5a0>
    c96c:	add	r8, r8, #2
    c970:	b	c868 <big2_scanPi+0x1b0>
    c974:	sub	r2, r5, r8
    c978:	cmp	r2, #2
    c97c:	bge	c988 <big2_scanPi+0x2d0>
    c980:	mvn	r0, #1
    c984:	b	cc58 <big2_scanPi+0x5a0>
    c988:	mov	ip, #1
    c98c:	cmp	ip, #0
    c990:	beq	c9a0 <big2_scanPi+0x2e8>
    c994:	str	r8, [r6]
    c998:	mov	r0, #0
    c99c:	b	cc58 <big2_scanPi+0x5a0>
    c9a0:	add	r8, r8, #2
    c9a4:	b	c868 <big2_scanPi+0x1b0>
    c9a8:	sub	r3, r5, r8
    c9ac:	cmp	r3, #3
    c9b0:	bge	c9bc <big2_scanPi+0x304>
    c9b4:	mvn	r0, #1
    c9b8:	b	cc58 <big2_scanPi+0x5a0>
    c9bc:	mov	r3, #1
    c9c0:	cmp	r3, #0
    c9c4:	beq	c9d4 <big2_scanPi+0x31c>
    c9c8:	str	r8, [r6]
    c9cc:	mov	r0, #0
    c9d0:	b	cc58 <big2_scanPi+0x5a0>
    c9d4:	add	r8, r8, #3
    c9d8:	b	c868 <big2_scanPi+0x1b0>
    c9dc:	sub	r2, r5, r8
    c9e0:	cmp	r2, #4
    c9e4:	bge	c9f0 <big2_scanPi+0x338>
    c9e8:	mvn	r0, #1
    c9ec:	b	cc58 <big2_scanPi+0x5a0>
    c9f0:	mov	r2, #1
    c9f4:	cmp	r2, #0
    c9f8:	beq	ca08 <big2_scanPi+0x350>
    c9fc:	str	r8, [r6]
    ca00:	mov	r0, #0
    ca04:	b	cc58 <big2_scanPi+0x5a0>
    ca08:	add	r8, r8, #4
    ca0c:	b	c868 <big2_scanPi+0x1b0>
    ca10:	add	r3, sp, #32
    ca14:	mov	r2, r8
    ca18:	mov	r1, r4
    ca1c:	mov	r0, r7
    ca20:	bl	c5b4 <big2_checkPiTarget>
    ca24:	cmp	r0, #0
    ca28:	bne	ca38 <big2_scanPi+0x380>
    ca2c:	str	r8, [r6]
    ca30:	mov	r0, #0
    ca34:	b	cc58 <big2_scanPi+0x5a0>
    ca38:	add	r4, r8, #2
    ca3c:	cmp	r4, r5
    ca40:	beq	cbc8 <big2_scanPi+0x510>
    ca44:	ldrb	r1, [r4]
    ca48:	cmp	r1, #0
    ca4c:	beq	ca68 <big2_scanPi+0x3b0>
    ca50:	ldrb	ip, [r4]
    ca54:	and	r0, ip, #255	; 0xff
    ca58:	ldrb	ip, [r4, #1]
    ca5c:	and	r1, ip, #255	; 0xff
    ca60:	bl	5988 <unicode_byte_type>
    ca64:	b	ca78 <big2_scanPi+0x3c0>
    ca68:	ldrb	r0, [r4, #1]
    ca6c:	and	r2, r0, #255	; 0xff
    ca70:	add	r0, r7, r2
    ca74:	ldrb	r0, [r0, #76]	; 0x4c
    ca78:	cmp	r0, #16
    ca7c:	bcs	cbc0 <big2_scanPi+0x508>
    ca80:	add	pc, pc, r0, lsl #2
    ca84:	nop	{0}
    ca88:	b	cb64 <big2_scanPi+0x4ac>
    ca8c:	b	cb64 <big2_scanPi+0x4ac>
    ca90:	b	cbc0 <big2_scanPi+0x508>
    ca94:	b	cbc0 <big2_scanPi+0x508>
    ca98:	b	cbc0 <big2_scanPi+0x508>
    ca9c:	b	cac8 <big2_scanPi+0x410>
    caa0:	b	cafc <big2_scanPi+0x444>
    caa4:	b	cb30 <big2_scanPi+0x478>
    caa8:	b	cb64 <big2_scanPi+0x4ac>
    caac:	b	cbc0 <big2_scanPi+0x508>
    cab0:	b	cbc0 <big2_scanPi+0x508>
    cab4:	b	cbc0 <big2_scanPi+0x508>
    cab8:	b	cbc0 <big2_scanPi+0x508>
    cabc:	b	cbc0 <big2_scanPi+0x508>
    cac0:	b	cbc0 <big2_scanPi+0x508>
    cac4:	b	cb70 <big2_scanPi+0x4b8>
    cac8:	sub	r1, r5, r4
    cacc:	cmp	r1, #2
    cad0:	bge	cadc <big2_scanPi+0x424>
    cad4:	mvn	r0, #1
    cad8:	b	cc58 <big2_scanPi+0x5a0>
    cadc:	mov	r0, #0
    cae0:	cmp	r0, #0
    cae4:	beq	caf4 <big2_scanPi+0x43c>
    cae8:	str	r4, [r6]
    caec:	mov	r0, #0
    caf0:	b	cc58 <big2_scanPi+0x5a0>
    caf4:	add	r4, r4, #2
    caf8:	b	ca3c <big2_scanPi+0x384>
    cafc:	sub	r1, r5, r4
    cb00:	cmp	r1, #3
    cb04:	bge	cb10 <big2_scanPi+0x458>
    cb08:	mvn	r0, #1
    cb0c:	b	cc58 <big2_scanPi+0x5a0>
    cb10:	mov	r1, #0
    cb14:	cmp	r1, #0
    cb18:	beq	cb28 <big2_scanPi+0x470>
    cb1c:	str	r4, [r6]
    cb20:	mov	r0, #0
    cb24:	b	cc58 <big2_scanPi+0x5a0>
    cb28:	add	r4, r4, #3
    cb2c:	b	ca3c <big2_scanPi+0x384>
    cb30:	sub	ip, r5, r4
    cb34:	cmp	ip, #4
    cb38:	bge	cb44 <big2_scanPi+0x48c>
    cb3c:	mvn	r0, #1
    cb40:	b	cc58 <big2_scanPi+0x5a0>
    cb44:	mov	r1, #0
    cb48:	cmp	r1, #0
    cb4c:	beq	cb5c <big2_scanPi+0x4a4>
    cb50:	str	r4, [r6]
    cb54:	mov	r0, #0
    cb58:	b	cc58 <big2_scanPi+0x5a0>
    cb5c:	add	r4, r4, #4
    cb60:	b	ca3c <big2_scanPi+0x384>
    cb64:	str	r4, [r6]
    cb68:	mov	r0, #0
    cb6c:	b	cc58 <big2_scanPi+0x5a0>
    cb70:	add	r4, r4, #2
    cb74:	cmp	r4, r5
    cb78:	bne	cb84 <big2_scanPi+0x4cc>
    cb7c:	mvn	r0, #0
    cb80:	b	cc58 <big2_scanPi+0x5a0>
    cb84:	ldrb	ip, [r4]
    cb88:	cmp	ip, #0
    cb8c:	bne	cba4 <big2_scanPi+0x4ec>
    cb90:	ldrb	r2, [r4, #1]
    cb94:	cmp	r2, #62	; 0x3e
    cb98:	moveq	r3, #1
    cb9c:	movne	r3, #0
    cba0:	b	cba8 <big2_scanPi+0x4f0>
    cba4:	mov	r3, #0
    cba8:	cmp	r3, #0
    cbac:	beq	ca3c <big2_scanPi+0x384>
    cbb0:	add	ip, r4, #2
    cbb4:	str	ip, [r6]
    cbb8:	ldr	r0, [sp, #32]
    cbbc:	b	cc58 <big2_scanPi+0x5a0>
    cbc0:	add	r4, r4, #2
    cbc4:	b	ca3c <big2_scanPi+0x384>
    cbc8:	mvn	r0, #0
    cbcc:	b	cc58 <big2_scanPi+0x5a0>
    cbd0:	add	r3, sp, #32
    cbd4:	mov	r2, r8
    cbd8:	mov	r1, r4
    cbdc:	mov	r0, r7
    cbe0:	bl	c5b4 <big2_checkPiTarget>
    cbe4:	cmp	r0, #0
    cbe8:	bne	cbf8 <big2_scanPi+0x540>
    cbec:	str	r8, [r6]
    cbf0:	mov	r0, #0
    cbf4:	b	cc58 <big2_scanPi+0x5a0>
    cbf8:	add	r8, r8, #2
    cbfc:	cmp	r8, r5
    cc00:	bne	cc0c <big2_scanPi+0x554>
    cc04:	mvn	r0, #0
    cc08:	b	cc58 <big2_scanPi+0x5a0>
    cc0c:	ldrb	ip, [r8]
    cc10:	cmp	ip, #0
    cc14:	bne	cc2c <big2_scanPi+0x574>
    cc18:	ldrb	r1, [r8, #1]
    cc1c:	cmp	r1, #62	; 0x3e
    cc20:	moveq	r0, #1
    cc24:	movne	r0, #0
    cc28:	b	cc30 <big2_scanPi+0x578>
    cc2c:	mov	r0, #0
    cc30:	cmp	r0, #0
    cc34:	beq	cc48 <big2_scanPi+0x590>
    cc38:	add	r1, r8, #2
    cc3c:	str	r1, [r6]
    cc40:	ldr	r0, [sp, #32]
    cc44:	b	cc58 <big2_scanPi+0x5a0>
    cc48:	str	r8, [r6]
    cc4c:	mov	r0, #0
    cc50:	b	cc58 <big2_scanPi+0x5a0>
    cc54:	mvn	r0, #0
    cc58:	ldr	r4, [sp, #8]
    cc5c:	ldr	r5, [sp, #12]
    cc60:	ldr	r6, [sp, #16]
    cc64:	ldr	r7, [sp, #20]
    cc68:	ldr	r8, [sp, #24]
    cc6c:	ldr	r9, [sp, #28]
    cc70:	ldr	lr, [sp, #4]
    cc74:	add	sp, sp, #40	; 0x28
    cc78:	bx	lr
    cc7c:	.word	0x00000000
    cc80:	.word	0x00000500
    cc84:	.word	0x00000600

0000cc88 <big2_scanCdataSection>:
    cc88:	mov	ip, sp
    cc8c:	sub	sp, sp, #16
    cc90:	str	ip, [sp]
    cc94:	str	lr, [sp, #4]
    cc98:	str	r4, [sp, #8]
    cc9c:	sub	r0, r2, r1
    cca0:	cmp	r0, #12
    cca4:	bge	ccb0 <big2_scanCdataSection+0x28>
    cca8:	mvn	r0, #0
    ccac:	b	cd10 <big2_scanCdataSection+0x88>
    ccb0:	mov	r4, #0
    ccb4:	cmp	r4, #6
    ccb8:	bge	cd08 <big2_scanCdataSection+0x80>
    ccbc:	ldrb	r2, [r1]
    ccc0:	cmp	r2, #0
    ccc4:	bne	cce4 <big2_scanCdataSection+0x5c>
    ccc8:	ldrb	ip, [r1, #1]
    cccc:	ldr	r0, [pc, #76]	; cd20 <big2_scanCdataSection+0x98>
    ccd0:	ldrb	r2, [r0, r4]
    ccd4:	cmp	ip, r2
    ccd8:	moveq	ip, #1
    ccdc:	movne	ip, #0
    cce0:	b	cce8 <big2_scanCdataSection+0x60>
    cce4:	mov	ip, #0
    cce8:	cmp	ip, #0
    ccec:	bne	ccfc <big2_scanCdataSection+0x74>
    ccf0:	str	r1, [r3]
    ccf4:	mov	r0, #0
    ccf8:	b	cd10 <big2_scanCdataSection+0x88>
    ccfc:	add	r4, r4, #1
    cd00:	add	r1, r1, #2
    cd04:	b	ccb4 <big2_scanCdataSection+0x2c>
    cd08:	str	r1, [r3]
    cd0c:	mov	r0, #8
    cd10:	ldr	r4, [sp, #8]
    cd14:	ldr	lr, [sp, #4]
    cd18:	add	sp, sp, #16
    cd1c:	bx	lr
    cd20:	.word	0x00001850

0000cd24 <big2_cdataSectionTok>:
    cd24:	mov	ip, sp
    cd28:	sub	sp, sp, #24
    cd2c:	str	ip, [sp]
    cd30:	str	lr, [sp, #4]
    cd34:	str	r4, [sp, #8]
    cd38:	str	r5, [sp, #12]
    cd3c:	str	r6, [sp, #16]
    cd40:	str	r7, [sp, #20]
    cd44:	mov	r4, r3
    cd48:	mov	r5, r2
    cd4c:	mov	r6, r1
    cd50:	mov	r7, r0
    cd54:	cmp	r6, r5
    cd58:	bne	cd64 <big2_cdataSectionTok+0x40>
    cd5c:	mvn	r0, #3
    cd60:	b	d0ec <big2_cdataSectionTok+0x3c8>
    cd64:	mov	ip, #1
    cd68:	cmp	ip, #0
    cd6c:	beq	cd98 <big2_cdataSectionTok+0x74>
    cd70:	sub	r3, r5, r6
    cd74:	and	r0, r3, #1
    cd78:	cmp	r0, #0
    cd7c:	beq	cd98 <big2_cdataSectionTok+0x74>
    cd80:	bic	r0, r3, #1
    cd84:	cmp	r0, #0
    cd88:	bne	cd94 <big2_cdataSectionTok+0x70>
    cd8c:	mvn	r0, #0
    cd90:	b	d0ec <big2_cdataSectionTok+0x3c8>
    cd94:	add	r5, r6, r0
    cd98:	ldrb	r1, [r6]
    cd9c:	cmp	r1, #0
    cda0:	beq	cdbc <big2_cdataSectionTok+0x98>
    cda4:	ldrb	r2, [r6]
    cda8:	and	r0, r2, #255	; 0xff
    cdac:	ldrb	r1, [r6, #1]
    cdb0:	and	r1, r1, #255	; 0xff
    cdb4:	bl	5988 <unicode_byte_type>
    cdb8:	b	cdcc <big2_cdataSectionTok+0xa8>
    cdbc:	ldrb	ip, [r6, #1]
    cdc0:	and	r3, ip, #255	; 0xff
    cdc4:	add	r3, r7, r3
    cdc8:	ldrb	r0, [r3, #76]	; 0x4c
    cdcc:	cmp	r0, #11
    cdd0:	bcs	cfb8 <big2_cdataSectionTok+0x294>
    cdd4:	add	pc, pc, r0, lsl #2
    cdd8:	nop	{0}
    cddc:	b	cfac <big2_cdataSectionTok+0x288>
    cde0:	b	cfac <big2_cdataSectionTok+0x288>
    cde4:	b	cfb8 <big2_cdataSectionTok+0x294>
    cde8:	b	cfb8 <big2_cdataSectionTok+0x294>
    cdec:	b	ce08 <big2_cdataSectionTok+0xe4>
    cdf0:	b	cf10 <big2_cdataSectionTok+0x1ec>
    cdf4:	b	cf44 <big2_cdataSectionTok+0x220>
    cdf8:	b	cf78 <big2_cdataSectionTok+0x254>
    cdfc:	b	cfac <big2_cdataSectionTok+0x288>
    ce00:	b	cea0 <big2_cdataSectionTok+0x17c>
    ce04:	b	cf00 <big2_cdataSectionTok+0x1dc>
    ce08:	add	r6, r6, #2
    ce0c:	cmp	r6, r5
    ce10:	bne	ce1c <big2_cdataSectionTok+0xf8>
    ce14:	mvn	r0, #0
    ce18:	b	d0ec <big2_cdataSectionTok+0x3c8>
    ce1c:	ldrb	r2, [r6]
    ce20:	cmp	r2, #0
    ce24:	bne	ce3c <big2_cdataSectionTok+0x118>
    ce28:	ldrb	r1, [r6, #1]
    ce2c:	cmp	r1, #93	; 0x5d
    ce30:	moveq	ip, #1
    ce34:	movne	ip, #0
    ce38:	b	ce40 <big2_cdataSectionTok+0x11c>
    ce3c:	mov	ip, #0
    ce40:	cmp	ip, #0
    ce44:	beq	cfbc <big2_cdataSectionTok+0x298>
    ce48:	add	ip, r6, #2
    ce4c:	cmp	ip, r5
    ce50:	bne	ce5c <big2_cdataSectionTok+0x138>
    ce54:	mvn	r0, #0
    ce58:	b	d0ec <big2_cdataSectionTok+0x3c8>
    ce5c:	ldrb	r0, [ip]
    ce60:	cmp	r0, #0
    ce64:	bne	ce7c <big2_cdataSectionTok+0x158>
    ce68:	ldrb	r0, [ip, #1]
    ce6c:	cmp	r0, #62	; 0x3e
    ce70:	moveq	r3, #1
    ce74:	movne	r3, #0
    ce78:	b	ce80 <big2_cdataSectionTok+0x15c>
    ce7c:	mov	r3, #0
    ce80:	cmp	r3, #0
    ce84:	bne	ce90 <big2_cdataSectionTok+0x16c>
    ce88:	sub	r6, ip, #2
    ce8c:	b	cfbc <big2_cdataSectionTok+0x298>
    ce90:	add	ip, ip, #2
    ce94:	str	ip, [r4]
    ce98:	mov	r0, #40	; 0x28
    ce9c:	b	d0ec <big2_cdataSectionTok+0x3c8>
    cea0:	add	r6, r6, #2
    cea4:	cmp	r6, r5
    cea8:	bne	ceb4 <big2_cdataSectionTok+0x190>
    ceac:	mvn	r0, #0
    ceb0:	b	d0ec <big2_cdataSectionTok+0x3c8>
    ceb4:	ldrb	r3, [r6]
    ceb8:	cmp	r3, #0
    cebc:	beq	ced8 <big2_cdataSectionTok+0x1b4>
    cec0:	ldrb	r1, [r6]
    cec4:	and	r0, r1, #255	; 0xff
    cec8:	ldrb	r2, [r6, #1]
    cecc:	and	r1, r2, #255	; 0xff
    ced0:	bl	5988 <unicode_byte_type>
    ced4:	b	cee8 <big2_cdataSectionTok+0x1c4>
    ced8:	ldrb	r3, [r6, #1]
    cedc:	and	r0, r3, #255	; 0xff
    cee0:	add	r3, r7, r0
    cee4:	ldrb	r0, [r3, #76]	; 0x4c
    cee8:	cmp	r0, #10
    ceec:	bne	cef4 <big2_cdataSectionTok+0x1d0>
    cef0:	add	r6, r6, #2
    cef4:	str	r6, [r4]
    cef8:	mov	r0, #7
    cefc:	b	d0ec <big2_cdataSectionTok+0x3c8>
    cf00:	add	r0, r6, #2
    cf04:	str	r0, [r4]
    cf08:	mov	r0, #7
    cf0c:	b	d0ec <big2_cdataSectionTok+0x3c8>
    cf10:	sub	r0, r5, r6
    cf14:	cmp	r0, #2
    cf18:	bge	cf24 <big2_cdataSectionTok+0x200>
    cf1c:	mvn	r0, #1
    cf20:	b	d0ec <big2_cdataSectionTok+0x3c8>
    cf24:	mov	r2, #0
    cf28:	cmp	r2, #0
    cf2c:	beq	cf3c <big2_cdataSectionTok+0x218>
    cf30:	str	r6, [r4]
    cf34:	mov	r0, #0
    cf38:	b	d0ec <big2_cdataSectionTok+0x3c8>
    cf3c:	add	r6, r6, #2
    cf40:	b	cfbc <big2_cdataSectionTok+0x298>
    cf44:	sub	r0, r5, r6
    cf48:	cmp	r0, #3
    cf4c:	bge	cf58 <big2_cdataSectionTok+0x234>
    cf50:	mvn	r0, #1
    cf54:	b	d0ec <big2_cdataSectionTok+0x3c8>
    cf58:	mov	ip, #0
    cf5c:	cmp	ip, #0
    cf60:	beq	cf70 <big2_cdataSectionTok+0x24c>
    cf64:	str	r6, [r4]
    cf68:	mov	r0, #0
    cf6c:	b	d0ec <big2_cdataSectionTok+0x3c8>
    cf70:	add	r6, r6, #3
    cf74:	b	cfbc <big2_cdataSectionTok+0x298>
    cf78:	sub	r1, r5, r6
    cf7c:	cmp	r1, #4
    cf80:	bge	cf8c <big2_cdataSectionTok+0x268>
    cf84:	mvn	r0, #1
    cf88:	b	d0ec <big2_cdataSectionTok+0x3c8>
    cf8c:	mov	r1, #0
    cf90:	cmp	r1, #0
    cf94:	beq	cfa4 <big2_cdataSectionTok+0x280>
    cf98:	str	r6, [r4]
    cf9c:	mov	r0, #0
    cfa0:	b	d0ec <big2_cdataSectionTok+0x3c8>
    cfa4:	add	r6, r6, #4
    cfa8:	b	cfbc <big2_cdataSectionTok+0x298>
    cfac:	str	r6, [r4]
    cfb0:	mov	r0, #0
    cfb4:	b	d0ec <big2_cdataSectionTok+0x3c8>
    cfb8:	add	r6, r6, #2
    cfbc:	cmp	r6, r5
    cfc0:	beq	d0e4 <big2_cdataSectionTok+0x3c0>
    cfc4:	ldrb	r1, [r6]
    cfc8:	cmp	r1, #0
    cfcc:	beq	cfe8 <big2_cdataSectionTok+0x2c4>
    cfd0:	ldrb	r1, [r6]
    cfd4:	and	r0, r1, #255	; 0xff
    cfd8:	ldrb	r2, [r6, #1]
    cfdc:	and	r1, r2, #255	; 0xff
    cfe0:	bl	5988 <unicode_byte_type>
    cfe4:	b	cff8 <big2_cdataSectionTok+0x2d4>
    cfe8:	ldrb	r2, [r6, #1]
    cfec:	and	ip, r2, #255	; 0xff
    cff0:	add	r2, r7, ip
    cff4:	ldrb	r0, [r2, #76]	; 0x4c
    cff8:	cmp	r0, #11
    cffc:	bcs	d0dc <big2_cdataSectionTok+0x3b8>
    d000:	add	pc, pc, r0, lsl #2
    d004:	nop	{0}
    d008:	b	d0d0 <big2_cdataSectionTok+0x3ac>
    d00c:	b	d0d0 <big2_cdataSectionTok+0x3ac>
    d010:	b	d0dc <big2_cdataSectionTok+0x3b8>
    d014:	b	d0dc <big2_cdataSectionTok+0x3b8>
    d018:	b	d0d0 <big2_cdataSectionTok+0x3ac>
    d01c:	b	d034 <big2_cdataSectionTok+0x310>
    d020:	b	d068 <big2_cdataSectionTok+0x344>
    d024:	b	d09c <big2_cdataSectionTok+0x378>
    d028:	b	d0d0 <big2_cdataSectionTok+0x3ac>
    d02c:	b	d0d0 <big2_cdataSectionTok+0x3ac>
    d030:	b	d0d0 <big2_cdataSectionTok+0x3ac>
    d034:	sub	r1, r5, r6
    d038:	cmp	r1, #2
    d03c:	blt	d048 <big2_cdataSectionTok+0x324>
    d040:	mov	r1, #0
    d044:	b	d04c <big2_cdataSectionTok+0x328>
    d048:	mov	r1, #1
    d04c:	cmp	r1, #0
    d050:	beq	d060 <big2_cdataSectionTok+0x33c>
    d054:	str	r6, [r4]
    d058:	mov	r0, #6
    d05c:	b	d0ec <big2_cdataSectionTok+0x3c8>
    d060:	add	r6, r6, #2
    d064:	b	cfbc <big2_cdataSectionTok+0x298>
    d068:	sub	ip, r5, r6
    d06c:	cmp	ip, #3
    d070:	blt	d07c <big2_cdataSectionTok+0x358>
    d074:	mov	r0, #0
    d078:	b	d080 <big2_cdataSectionTok+0x35c>
    d07c:	mov	r0, #1
    d080:	cmp	r0, #0
    d084:	beq	d094 <big2_cdataSectionTok+0x370>
    d088:	str	r6, [r4]
    d08c:	mov	r0, #6
    d090:	b	d0ec <big2_cdataSectionTok+0x3c8>
    d094:	add	r6, r6, #3
    d098:	b	cfbc <big2_cdataSectionTok+0x298>
    d09c:	sub	r2, r5, r6
    d0a0:	cmp	r2, #4
    d0a4:	blt	d0b0 <big2_cdataSectionTok+0x38c>
    d0a8:	mov	r1, #0
    d0ac:	b	d0b4 <big2_cdataSectionTok+0x390>
    d0b0:	mov	r1, #1
    d0b4:	cmp	r1, #0
    d0b8:	beq	d0c8 <big2_cdataSectionTok+0x3a4>
    d0bc:	str	r6, [r4]
    d0c0:	mov	r0, #6
    d0c4:	b	d0ec <big2_cdataSectionTok+0x3c8>
    d0c8:	add	r6, r6, #4
    d0cc:	b	cfbc <big2_cdataSectionTok+0x298>
    d0d0:	str	r6, [r4]
    d0d4:	mov	r0, #6
    d0d8:	b	d0ec <big2_cdataSectionTok+0x3c8>
    d0dc:	add	r6, r6, #2
    d0e0:	b	cfbc <big2_cdataSectionTok+0x298>
    d0e4:	str	r6, [r4]
    d0e8:	mov	r0, #6
    d0ec:	ldr	r4, [sp, #8]
    d0f0:	ldr	r5, [sp, #12]
    d0f4:	ldr	r6, [sp, #16]
    d0f8:	ldr	r7, [sp, #20]
    d0fc:	ldr	lr, [sp, #4]
    d100:	add	sp, sp, #24
    d104:	bx	lr

0000d108 <big2_scanEndTag>:
    d108:	mov	ip, sp
    d10c:	sub	sp, sp, #24
    d110:	str	ip, [sp]
    d114:	str	lr, [sp, #4]
    d118:	str	r4, [sp, #8]
    d11c:	str	r5, [sp, #12]
    d120:	str	r6, [sp, #16]
    d124:	str	r7, [sp, #20]
    d128:	mov	r6, r3
    d12c:	mov	r4, r2
    d130:	mov	r7, r1
    d134:	mov	r5, r0
    d138:	cmp	r7, r4
    d13c:	bne	d148 <big2_scanEndTag+0x40>
    d140:	mvn	r0, #0
    d144:	b	d518 <big2_scanEndTag+0x410>
    d148:	ldrb	r0, [r7]
    d14c:	cmp	r0, #0
    d150:	beq	d16c <big2_scanEndTag+0x64>
    d154:	ldrb	r3, [r7]
    d158:	and	r0, r3, #255	; 0xff
    d15c:	ldrb	r2, [r7, #1]
    d160:	and	r1, r2, #255	; 0xff
    d164:	bl	5988 <unicode_byte_type>
    d168:	b	d17c <big2_scanEndTag+0x74>
    d16c:	ldrb	r1, [r7, #1]
    d170:	and	r0, r1, #255	; 0xff
    d174:	add	r1, r5, r0
    d178:	ldrb	r0, [r1, #76]	; 0x4c
    d17c:	cmp	r0, #22
    d180:	bcs	d238 <big2_scanEndTag+0x130>
    d184:	cmp	r0, #5
    d188:	beq	d204 <big2_scanEndTag+0xfc>
    d18c:	cmp	r0, #6
    d190:	beq	d1d0 <big2_scanEndTag+0xc8>
    d194:	cmp	r0, #7
    d198:	bne	d2a0 <big2_scanEndTag+0x198>
    d19c:	sub	r0, r4, r7
    d1a0:	cmp	r0, #4
    d1a4:	bge	d1b0 <big2_scanEndTag+0xa8>
    d1a8:	mvn	r0, #1
    d1ac:	b	d518 <big2_scanEndTag+0x410>
    d1b0:	mov	r1, #1
    d1b4:	cmp	r1, #0
    d1b8:	beq	d1c8 <big2_scanEndTag+0xc0>
    d1bc:	str	r7, [r6]
    d1c0:	mov	r0, #0
    d1c4:	b	d518 <big2_scanEndTag+0x410>
    d1c8:	add	r7, r7, #4
    d1cc:	b	d2b0 <big2_scanEndTag+0x1a8>
    d1d0:	sub	r2, r4, r7
    d1d4:	cmp	r2, #3
    d1d8:	bge	d1e4 <big2_scanEndTag+0xdc>
    d1dc:	mvn	r0, #1
    d1e0:	b	d518 <big2_scanEndTag+0x410>
    d1e4:	mov	r2, #1
    d1e8:	cmp	r2, #0
    d1ec:	beq	d1fc <big2_scanEndTag+0xf4>
    d1f0:	str	r7, [r6]
    d1f4:	mov	r0, #0
    d1f8:	b	d518 <big2_scanEndTag+0x410>
    d1fc:	add	r7, r7, #3
    d200:	b	d2b0 <big2_scanEndTag+0x1a8>
    d204:	sub	ip, r4, r7
    d208:	cmp	ip, #2
    d20c:	bge	d218 <big2_scanEndTag+0x110>
    d210:	mvn	r0, #1
    d214:	b	d518 <big2_scanEndTag+0x410>
    d218:	mov	r0, #1
    d21c:	cmp	r0, #0
    d220:	beq	d230 <big2_scanEndTag+0x128>
    d224:	str	r7, [r6]
    d228:	mov	r0, #0
    d22c:	b	d518 <big2_scanEndTag+0x410>
    d230:	add	r7, r7, #2
    d234:	b	d2b0 <big2_scanEndTag+0x1a8>
    d238:	cmp	r0, #22
    d23c:	beq	d2ac <big2_scanEndTag+0x1a4>
    d240:	cmp	r0, #24
    d244:	beq	d2ac <big2_scanEndTag+0x1a4>
    d248:	cmp	r0, #29
    d24c:	bne	d2a0 <big2_scanEndTag+0x198>
    d250:	ldr	r2, [pc, #732]	; d534 <big2_scanEndTag+0x42c>
    d254:	ldrb	r3, [r7, #1]
    d258:	and	r0, r3, #255	; 0xff
    d25c:	asr	r3, r0, #5
    d260:	ldr	r1, [pc, #720]	; d538 <big2_scanEndTag+0x430>
    d264:	ldrb	r0, [r7]
    d268:	and	ip, r0, #255	; 0xff
    d26c:	ldrb	ip, [r1, ip]
    d270:	add	ip, r3, ip, lsl #3
    d274:	ldr	ip, [r2, ip, lsl #2]
    d278:	mov	r0, #1
    d27c:	ldrb	r3, [r7, #1]
    d280:	and	r1, r3, #31
    d284:	lsl	r2, r0, r1
    d288:	and	ip, ip, r2
    d28c:	cmp	ip, #0
    d290:	bne	d2ac <big2_scanEndTag+0x1a4>
    d294:	str	r7, [r6]
    d298:	mov	r0, #0
    d29c:	b	d518 <big2_scanEndTag+0x410>
    d2a0:	str	r7, [r6]
    d2a4:	mov	r0, #0
    d2a8:	b	d518 <big2_scanEndTag+0x410>
    d2ac:	add	r7, r7, #2
    d2b0:	cmp	r7, r4
    d2b4:	beq	d514 <big2_scanEndTag+0x40c>
    d2b8:	ldrb	ip, [r7]
    d2bc:	cmp	ip, #0
    d2c0:	beq	d2dc <big2_scanEndTag+0x1d4>
    d2c4:	ldrb	r0, [r7]
    d2c8:	and	r0, r0, #255	; 0xff
    d2cc:	ldrb	r2, [r7, #1]
    d2d0:	and	r1, r2, #255	; 0xff
    d2d4:	bl	5988 <unicode_byte_type>
    d2d8:	b	d2ec <big2_scanEndTag+0x1e4>
    d2dc:	ldrb	r1, [r7, #1]
    d2e0:	and	r3, r1, #255	; 0xff
    d2e4:	add	ip, r5, r3
    d2e8:	ldrb	r0, [ip, #76]	; 0x4c
    d2ec:	sub	r0, r0, #5
    d2f0:	cmp	r0, #25
    d2f4:	bcs	d508 <big2_scanEndTag+0x400>
    d2f8:	add	pc, pc, r0, lsl #2
    d2fc:	nop	{0}
    d300:	b	d3bc <big2_scanEndTag+0x2b4>
    d304:	b	d3f0 <big2_scanEndTag+0x2e8>
    d308:	b	d424 <big2_scanEndTag+0x31c>
    d30c:	b	d508 <big2_scanEndTag+0x400>
    d310:	b	d458 <big2_scanEndTag+0x350>
    d314:	b	d458 <big2_scanEndTag+0x350>
    d318:	b	d4f8 <big2_scanEndTag+0x3f0>
    d31c:	b	d508 <big2_scanEndTag+0x400>
    d320:	b	d508 <big2_scanEndTag+0x400>
    d324:	b	d508 <big2_scanEndTag+0x400>
    d328:	b	d508 <big2_scanEndTag+0x400>
    d32c:	b	d508 <big2_scanEndTag+0x400>
    d330:	b	d508 <big2_scanEndTag+0x400>
    d334:	b	d508 <big2_scanEndTag+0x400>
    d338:	b	d508 <big2_scanEndTag+0x400>
    d33c:	b	d508 <big2_scanEndTag+0x400>
    d340:	b	d458 <big2_scanEndTag+0x350>
    d344:	b	d3b4 <big2_scanEndTag+0x2ac>
    d348:	b	d4f0 <big2_scanEndTag+0x3e8>
    d34c:	b	d3b4 <big2_scanEndTag+0x2ac>
    d350:	b	d3b4 <big2_scanEndTag+0x2ac>
    d354:	b	d3b4 <big2_scanEndTag+0x2ac>
    d358:	b	d3b4 <big2_scanEndTag+0x2ac>
    d35c:	b	d508 <big2_scanEndTag+0x400>
    d360:	b	d364 <big2_scanEndTag+0x25c>
    d364:	ldr	r3, [pc, #456]	; d534 <big2_scanEndTag+0x42c>
    d368:	ldrb	r1, [r7, #1]
    d36c:	and	r1, r1, #255	; 0xff
    d370:	asr	r2, r1, #5
    d374:	ldr	ip, [pc, #448]	; d53c <big2_scanEndTag+0x434>
    d378:	ldrb	r1, [r7]
    d37c:	and	r0, r1, #255	; 0xff
    d380:	ldrb	r1, [ip, r0]
    d384:	add	r0, r2, r1, lsl #3
    d388:	ldr	r2, [r3, r0, lsl #2]
    d38c:	mov	r1, #1
    d390:	ldrb	ip, [r7, #1]
    d394:	and	r0, ip, #31
    d398:	lsl	r3, r1, r0
    d39c:	and	r2, r2, r3
    d3a0:	cmp	r2, #0
    d3a4:	bne	d3b4 <big2_scanEndTag+0x2ac>
    d3a8:	str	r7, [r6]
    d3ac:	mov	r0, #0
    d3b0:	b	d518 <big2_scanEndTag+0x410>
    d3b4:	add	r7, r7, #2
    d3b8:	b	d2b0 <big2_scanEndTag+0x1a8>
    d3bc:	sub	ip, r4, r7
    d3c0:	cmp	ip, #2
    d3c4:	bge	d3d0 <big2_scanEndTag+0x2c8>
    d3c8:	mvn	r0, #1
    d3cc:	b	d518 <big2_scanEndTag+0x410>
    d3d0:	mov	r1, #1
    d3d4:	cmp	r1, #0
    d3d8:	beq	d3e8 <big2_scanEndTag+0x2e0>
    d3dc:	str	r7, [r6]
    d3e0:	mov	r0, #0
    d3e4:	b	d518 <big2_scanEndTag+0x410>
    d3e8:	add	r7, r7, #2
    d3ec:	b	d2b0 <big2_scanEndTag+0x1a8>
    d3f0:	sub	r3, r4, r7
    d3f4:	cmp	r3, #3
    d3f8:	bge	d404 <big2_scanEndTag+0x2fc>
    d3fc:	mvn	r0, #1
    d400:	b	d518 <big2_scanEndTag+0x410>
    d404:	mov	r3, #1
    d408:	cmp	r3, #0
    d40c:	beq	d41c <big2_scanEndTag+0x314>
    d410:	str	r7, [r6]
    d414:	mov	r0, #0
    d418:	b	d518 <big2_scanEndTag+0x410>
    d41c:	add	r7, r7, #3
    d420:	b	d2b0 <big2_scanEndTag+0x1a8>
    d424:	sub	r3, r4, r7
    d428:	cmp	r3, #4
    d42c:	bge	d438 <big2_scanEndTag+0x330>
    d430:	mvn	r0, #1
    d434:	b	d518 <big2_scanEndTag+0x410>
    d438:	mov	r0, #1
    d43c:	cmp	r0, #0
    d440:	beq	d450 <big2_scanEndTag+0x348>
    d444:	str	r7, [r6]
    d448:	mov	r0, #0
    d44c:	b	d518 <big2_scanEndTag+0x410>
    d450:	add	r7, r7, #4
    d454:	b	d2b0 <big2_scanEndTag+0x1a8>
    d458:	add	r7, r7, #2
    d45c:	cmp	r7, r4
    d460:	beq	d4e8 <big2_scanEndTag+0x3e0>
    d464:	ldrb	r3, [r7]
    d468:	cmp	r3, #0
    d46c:	beq	d488 <big2_scanEndTag+0x380>
    d470:	ldrb	r0, [r7]
    d474:	and	r0, r0, #255	; 0xff
    d478:	ldrb	r1, [r7, #1]
    d47c:	and	r1, r1, #255	; 0xff
    d480:	bl	5988 <unicode_byte_type>
    d484:	b	d498 <big2_scanEndTag+0x390>
    d488:	ldrb	r1, [r7, #1]
    d48c:	and	r2, r1, #255	; 0xff
    d490:	add	r3, r5, r2
    d494:	ldrb	r0, [r3, #76]	; 0x4c
    d498:	cmp	r0, #11
    d49c:	bcs	d4b4 <big2_scanEndTag+0x3ac>
    d4a0:	cmp	r0, #9
    d4a4:	beq	d4d0 <big2_scanEndTag+0x3c8>
    d4a8:	cmp	r0, #10
    d4ac:	beq	d4d0 <big2_scanEndTag+0x3c8>
    d4b0:	b	d4c4 <big2_scanEndTag+0x3bc>
    d4b4:	cmp	r0, #11
    d4b8:	beq	d4d8 <big2_scanEndTag+0x3d0>
    d4bc:	cmp	r0, #21
    d4c0:	beq	d4d0 <big2_scanEndTag+0x3c8>
    d4c4:	str	r7, [r6]
    d4c8:	mov	r0, #0
    d4cc:	b	d518 <big2_scanEndTag+0x410>
    d4d0:	add	r7, r7, #2
    d4d4:	b	d45c <big2_scanEndTag+0x354>
    d4d8:	add	ip, r7, #2
    d4dc:	str	ip, [r6]
    d4e0:	mov	r0, #5
    d4e4:	b	d518 <big2_scanEndTag+0x410>
    d4e8:	mvn	r0, #0
    d4ec:	b	d518 <big2_scanEndTag+0x410>
    d4f0:	add	r7, r7, #2
    d4f4:	b	d2b0 <big2_scanEndTag+0x1a8>
    d4f8:	add	r1, r7, #2
    d4fc:	str	r1, [r6]
    d500:	mov	r0, #5
    d504:	b	d518 <big2_scanEndTag+0x410>
    d508:	str	r7, [r6]
    d50c:	mov	r0, #0
    d510:	b	d518 <big2_scanEndTag+0x410>
    d514:	mvn	r0, #0
    d518:	ldr	r4, [sp, #8]
    d51c:	ldr	r5, [sp, #12]
    d520:	ldr	r6, [sp, #16]
    d524:	ldr	r7, [sp, #20]
    d528:	ldr	lr, [sp, #4]
    d52c:	add	sp, sp, #24
    d530:	bx	lr
    d534:	.word	0x00000000
    d538:	.word	0x00000500
    d53c:	.word	0x00000600

0000d540 <big2_scanHexCharRef>:
    d540:	mov	ip, sp
    d544:	sub	sp, sp, #24
    d548:	str	ip, [sp]
    d54c:	str	lr, [sp, #4]
    d550:	str	r4, [sp, #8]
    d554:	str	r5, [sp, #12]
    d558:	str	r6, [sp, #16]
    d55c:	str	r7, [sp, #20]
    d560:	mov	r4, r3
    d564:	mov	r5, r2
    d568:	mov	r7, r1
    d56c:	mov	r6, r0
    d570:	cmp	r7, r5
    d574:	beq	d644 <big2_scanHexCharRef+0x104>
    d578:	ldrb	r2, [r7]
    d57c:	cmp	r2, #0
    d580:	beq	d59c <big2_scanHexCharRef+0x5c>
    d584:	ldrb	r0, [r7]
    d588:	and	r0, r0, #255	; 0xff
    d58c:	ldrb	r1, [r7, #1]
    d590:	and	r1, r1, #255	; 0xff
    d594:	bl	5988 <unicode_byte_type>
    d598:	b	d5ac <big2_scanHexCharRef+0x6c>
    d59c:	ldrb	r3, [r7, #1]
    d5a0:	and	r2, r3, #255	; 0xff
    d5a4:	add	r3, r6, r2
    d5a8:	ldrb	r0, [r3, #76]	; 0x4c
    d5ac:	cmp	r0, #24
    d5b0:	beq	d5c8 <big2_scanHexCharRef+0x88>
    d5b4:	cmp	r0, #25
    d5b8:	beq	d5c8 <big2_scanHexCharRef+0x88>
    d5bc:	str	r7, [r4]
    d5c0:	mov	r0, #0
    d5c4:	b	d648 <big2_scanHexCharRef+0x108>
    d5c8:	add	r7, r7, #2
    d5cc:	cmp	r7, r5
    d5d0:	beq	d644 <big2_scanHexCharRef+0x104>
    d5d4:	ldrb	r1, [r7]
    d5d8:	cmp	r1, #0
    d5dc:	beq	d5f8 <big2_scanHexCharRef+0xb8>
    d5e0:	ldrb	ip, [r7]
    d5e4:	and	r0, ip, #255	; 0xff
    d5e8:	ldrb	r2, [r7, #1]
    d5ec:	and	r1, r2, #255	; 0xff
    d5f0:	bl	5988 <unicode_byte_type>
    d5f4:	b	d608 <big2_scanHexCharRef+0xc8>
    d5f8:	ldrb	ip, [r7, #1]
    d5fc:	and	ip, ip, #255	; 0xff
    d600:	add	r0, r6, ip
    d604:	ldrb	r0, [r0, #76]	; 0x4c
    d608:	cmp	r0, #18
    d60c:	beq	d634 <big2_scanHexCharRef+0xf4>
    d610:	cmp	r0, #24
    d614:	beq	d62c <big2_scanHexCharRef+0xec>
    d618:	cmp	r0, #25
    d61c:	beq	d62c <big2_scanHexCharRef+0xec>
    d620:	str	r7, [r4]
    d624:	mov	r0, #0
    d628:	b	d648 <big2_scanHexCharRef+0x108>
    d62c:	add	r7, r7, #2
    d630:	b	d5cc <big2_scanHexCharRef+0x8c>
    d634:	add	r3, r7, #2
    d638:	str	r3, [r4]
    d63c:	mov	r0, #10
    d640:	b	d648 <big2_scanHexCharRef+0x108>
    d644:	mvn	r0, #0
    d648:	ldr	r4, [sp, #8]
    d64c:	ldr	r5, [sp, #12]
    d650:	ldr	r6, [sp, #16]
    d654:	ldr	r7, [sp, #20]
    d658:	ldr	lr, [sp, #4]
    d65c:	add	sp, sp, #24
    d660:	bx	lr

0000d664 <big2_scanCharRef>:
    d664:	mov	ip, sp
    d668:	sub	sp, sp, #24
    d66c:	str	ip, [sp]
    d670:	str	lr, [sp, #4]
    d674:	str	r4, [sp, #8]
    d678:	str	r5, [sp, #12]
    d67c:	str	r6, [sp, #16]
    d680:	str	r7, [sp, #20]
    d684:	mov	r4, r3
    d688:	mov	r5, r2
    d68c:	mov	r7, r1
    d690:	mov	r6, r0
    d694:	cmp	r7, r5
    d698:	beq	d79c <big2_scanCharRef+0x138>
    d69c:	ldrb	r0, [r7]
    d6a0:	cmp	r0, #0
    d6a4:	bne	d6bc <big2_scanCharRef+0x58>
    d6a8:	ldrb	ip, [r7, #1]
    d6ac:	cmp	ip, #120	; 0x78
    d6b0:	moveq	r0, #1
    d6b4:	movne	r0, #0
    d6b8:	b	d6c0 <big2_scanCharRef+0x5c>
    d6bc:	mov	r0, #0
    d6c0:	cmp	r0, #0
    d6c4:	beq	d6e0 <big2_scanCharRef+0x7c>
    d6c8:	add	r1, r7, #2
    d6cc:	mov	r3, r4
    d6d0:	mov	r2, r5
    d6d4:	mov	r0, r6
    d6d8:	bl	d540 <big2_scanHexCharRef>
    d6dc:	b	d7a0 <big2_scanCharRef+0x13c>
    d6e0:	ldrb	r3, [r7]
    d6e4:	cmp	r3, #0
    d6e8:	beq	d704 <big2_scanCharRef+0xa0>
    d6ec:	ldrb	ip, [r7]
    d6f0:	and	r0, ip, #255	; 0xff
    d6f4:	ldrb	ip, [r7, #1]
    d6f8:	and	r1, ip, #255	; 0xff
    d6fc:	bl	5988 <unicode_byte_type>
    d700:	b	d714 <big2_scanCharRef+0xb0>
    d704:	ldrb	r2, [r7, #1]
    d708:	and	r3, r2, #255	; 0xff
    d70c:	add	r0, r6, r3
    d710:	ldrb	r0, [r0, #76]	; 0x4c
    d714:	cmp	r0, #25
    d718:	beq	d728 <big2_scanCharRef+0xc4>
    d71c:	str	r7, [r4]
    d720:	mov	r0, #0
    d724:	b	d7a0 <big2_scanCharRef+0x13c>
    d728:	add	r7, r7, #2
    d72c:	cmp	r7, r5
    d730:	beq	d79c <big2_scanCharRef+0x138>
    d734:	ldrb	r1, [r7]
    d738:	cmp	r1, #0
    d73c:	beq	d758 <big2_scanCharRef+0xf4>
    d740:	ldrb	r0, [r7]
    d744:	and	r0, r0, #255	; 0xff
    d748:	ldrb	r1, [r7, #1]
    d74c:	and	r1, r1, #255	; 0xff
    d750:	bl	5988 <unicode_byte_type>
    d754:	b	d768 <big2_scanCharRef+0x104>
    d758:	ldrb	r2, [r7, #1]
    d75c:	and	r2, r2, #255	; 0xff
    d760:	add	r2, r6, r2
    d764:	ldrb	r0, [r2, #76]	; 0x4c
    d768:	cmp	r0, #18
    d76c:	beq	d78c <big2_scanCharRef+0x128>
    d770:	cmp	r0, #25
    d774:	beq	d784 <big2_scanCharRef+0x120>
    d778:	str	r7, [r4]
    d77c:	mov	r0, #0
    d780:	b	d7a0 <big2_scanCharRef+0x13c>
    d784:	add	r7, r7, #2
    d788:	b	d72c <big2_scanCharRef+0xc8>
    d78c:	add	r1, r7, #2
    d790:	str	r1, [r4]
    d794:	mov	r0, #10
    d798:	b	d7a0 <big2_scanCharRef+0x13c>
    d79c:	mvn	r0, #0
    d7a0:	ldr	r4, [sp, #8]
    d7a4:	ldr	r5, [sp, #12]
    d7a8:	ldr	r6, [sp, #16]
    d7ac:	ldr	r7, [sp, #20]
    d7b0:	ldr	lr, [sp, #4]
    d7b4:	add	sp, sp, #24
    d7b8:	bx	lr

0000d7bc <big2_scanRef>:
    d7bc:	mov	ip, sp
    d7c0:	sub	sp, sp, #32
    d7c4:	str	ip, [sp]
    d7c8:	str	lr, [sp, #4]
    d7cc:	str	r4, [sp, #8]
    d7d0:	str	r5, [sp, #12]
    d7d4:	str	r6, [sp, #16]
    d7d8:	str	r7, [sp, #20]
    d7dc:	str	r8, [sp, #24]
    d7e0:	mov	r4, r3
    d7e4:	mov	r5, r2
    d7e8:	mov	r6, r1
    d7ec:	mov	r7, r0
    d7f0:	cmp	r6, r5
    d7f4:	bne	d800 <big2_scanRef+0x44>
    d7f8:	mvn	r0, #0
    d7fc:	b	db5c <big2_scanRef+0x3a0>
    d800:	ldrb	r2, [r6]
    d804:	cmp	r2, #0
    d808:	beq	d824 <big2_scanRef+0x68>
    d80c:	ldrb	r3, [r6]
    d810:	and	r0, r3, #255	; 0xff
    d814:	ldrb	r3, [r6, #1]
    d818:	and	r1, r3, #255	; 0xff
    d81c:	bl	5988 <unicode_byte_type>
    d820:	b	d834 <big2_scanRef+0x78>
    d824:	ldrb	r1, [r6, #1]
    d828:	and	r3, r1, #255	; 0xff
    d82c:	add	ip, r7, r3
    d830:	ldrb	r0, [ip, #76]	; 0x4c
    d834:	cmp	r0, #19
    d838:	bcs	d8f0 <big2_scanRef+0x134>
    d83c:	cmp	r0, #5
    d840:	beq	d8bc <big2_scanRef+0x100>
    d844:	cmp	r0, #6
    d848:	beq	d888 <big2_scanRef+0xcc>
    d84c:	cmp	r0, #7
    d850:	bne	d984 <big2_scanRef+0x1c8>
    d854:	sub	r2, r5, r6
    d858:	cmp	r2, #4
    d85c:	bge	d868 <big2_scanRef+0xac>
    d860:	mvn	r0, #1
    d864:	b	db5c <big2_scanRef+0x3a0>
    d868:	mov	ip, #1
    d86c:	cmp	ip, #0
    d870:	beq	d880 <big2_scanRef+0xc4>
    d874:	str	r6, [r4]
    d878:	mov	r0, #0
    d87c:	b	db5c <big2_scanRef+0x3a0>
    d880:	add	r6, r6, #4
    d884:	b	d994 <big2_scanRef+0x1d8>
    d888:	sub	r2, r5, r6
    d88c:	cmp	r2, #3
    d890:	bge	d89c <big2_scanRef+0xe0>
    d894:	mvn	r0, #1
    d898:	b	db5c <big2_scanRef+0x3a0>
    d89c:	mov	r2, #1
    d8a0:	cmp	r2, #0
    d8a4:	beq	d8b4 <big2_scanRef+0xf8>
    d8a8:	str	r6, [r4]
    d8ac:	mov	r0, #0
    d8b0:	b	db5c <big2_scanRef+0x3a0>
    d8b4:	add	r6, r6, #3
    d8b8:	b	d994 <big2_scanRef+0x1d8>
    d8bc:	sub	ip, r5, r6
    d8c0:	cmp	ip, #2
    d8c4:	bge	d8d0 <big2_scanRef+0x114>
    d8c8:	mvn	r0, #1
    d8cc:	b	db5c <big2_scanRef+0x3a0>
    d8d0:	mov	r0, #1
    d8d4:	cmp	r0, #0
    d8d8:	beq	d8e8 <big2_scanRef+0x12c>
    d8dc:	str	r6, [r4]
    d8e0:	mov	r0, #0
    d8e4:	b	db5c <big2_scanRef+0x3a0>
    d8e8:	add	r6, r6, #2
    d8ec:	b	d994 <big2_scanRef+0x1d8>
    d8f0:	cmp	r0, #24
    d8f4:	bcs	d924 <big2_scanRef+0x168>
    d8f8:	cmp	r0, #19
    d8fc:	beq	d90c <big2_scanRef+0x150>
    d900:	cmp	r0, #22
    d904:	beq	d990 <big2_scanRef+0x1d4>
    d908:	b	d984 <big2_scanRef+0x1c8>
    d90c:	add	r1, r6, #2
    d910:	mov	r3, r4
    d914:	mov	r2, r5
    d918:	mov	r0, r7
    d91c:	bl	d664 <big2_scanCharRef>
    d920:	b	db5c <big2_scanRef+0x3a0>
    d924:	cmp	r0, #24
    d928:	beq	d990 <big2_scanRef+0x1d4>
    d92c:	cmp	r0, #29
    d930:	bne	d984 <big2_scanRef+0x1c8>
    d934:	ldr	r1, [pc, #576]	; db7c <big2_scanRef+0x3c0>
    d938:	ldrb	r2, [r6, #1]
    d93c:	and	r2, r2, #255	; 0xff
    d940:	asr	r2, r2, #5
    d944:	ldr	r3, [pc, #564]	; db80 <big2_scanRef+0x3c4>
    d948:	ldrb	ip, [r6]
    d94c:	and	ip, ip, #255	; 0xff
    d950:	ldrb	r3, [r3, ip]
    d954:	add	r0, r2, r3, lsl #3
    d958:	ldr	r1, [r1, r0, lsl #2]
    d95c:	mov	r0, #1
    d960:	ldrb	r2, [r6, #1]
    d964:	and	r2, r2, #31
    d968:	lsl	r0, r0, r2
    d96c:	and	ip, r1, r0
    d970:	cmp	ip, #0
    d974:	bne	d990 <big2_scanRef+0x1d4>
    d978:	str	r6, [r4]
    d97c:	mov	r0, #0
    d980:	b	db5c <big2_scanRef+0x3a0>
    d984:	str	r6, [r4]
    d988:	mov	r0, #0
    d98c:	b	db5c <big2_scanRef+0x3a0>
    d990:	add	r6, r6, #2
    d994:	cmp	r6, r5
    d998:	beq	db58 <big2_scanRef+0x39c>
    d99c:	ldrb	r3, [r6]
    d9a0:	cmp	r3, #0
    d9a4:	beq	d9c0 <big2_scanRef+0x204>
    d9a8:	ldrb	r2, [r6]
    d9ac:	and	r0, r2, #255	; 0xff
    d9b0:	ldrb	r3, [r6, #1]
    d9b4:	and	r1, r3, #255	; 0xff
    d9b8:	bl	5988 <unicode_byte_type>
    d9bc:	b	d9d0 <big2_scanRef+0x214>
    d9c0:	ldrb	r0, [r6, #1]
    d9c4:	and	ip, r0, #255	; 0xff
    d9c8:	add	r2, r7, ip
    d9cc:	ldrb	r0, [r2, #76]	; 0x4c
    d9d0:	sub	r2, r0, #5
    d9d4:	cmp	r2, #25
    d9d8:	bcs	db4c <big2_scanRef+0x390>
    d9dc:	add	pc, pc, r2, lsl #2
    d9e0:	nop	{0}
    d9e4:	b	daa0 <big2_scanRef+0x2e4>
    d9e8:	b	dad4 <big2_scanRef+0x318>
    d9ec:	b	db08 <big2_scanRef+0x34c>
    d9f0:	b	db4c <big2_scanRef+0x390>
    d9f4:	b	db4c <big2_scanRef+0x390>
    d9f8:	b	db4c <big2_scanRef+0x390>
    d9fc:	b	db4c <big2_scanRef+0x390>
    da00:	b	db4c <big2_scanRef+0x390>
    da04:	b	db4c <big2_scanRef+0x390>
    da08:	b	db4c <big2_scanRef+0x390>
    da0c:	b	db4c <big2_scanRef+0x390>
    da10:	b	db4c <big2_scanRef+0x390>
    da14:	b	db4c <big2_scanRef+0x390>
    da18:	b	db3c <big2_scanRef+0x380>
    da1c:	b	db4c <big2_scanRef+0x390>
    da20:	b	db4c <big2_scanRef+0x390>
    da24:	b	db4c <big2_scanRef+0x390>
    da28:	b	da98 <big2_scanRef+0x2dc>
    da2c:	b	db4c <big2_scanRef+0x390>
    da30:	b	da98 <big2_scanRef+0x2dc>
    da34:	b	da98 <big2_scanRef+0x2dc>
    da38:	b	da98 <big2_scanRef+0x2dc>
    da3c:	b	da98 <big2_scanRef+0x2dc>
    da40:	b	db4c <big2_scanRef+0x390>
    da44:	b	da48 <big2_scanRef+0x28c>
    da48:	ldr	r8, [pc, #300]	; db7c <big2_scanRef+0x3c0>
    da4c:	ldrb	r2, [r6, #1]
    da50:	and	ip, r2, #255	; 0xff
    da54:	asr	r2, ip, #5
    da58:	ldr	r1, [pc, #292]	; db84 <big2_scanRef+0x3c8>
    da5c:	ldrb	r0, [r6]
    da60:	and	r3, r0, #255	; 0xff
    da64:	ldrb	ip, [r1, r3]
    da68:	add	r0, r2, ip, lsl #3
    da6c:	ldr	r0, [r8, r0, lsl #2]
    da70:	mov	r3, #1
    da74:	ldrb	ip, [r6, #1]
    da78:	and	r1, ip, #31
    da7c:	lsl	ip, r3, r1
    da80:	and	r1, r0, ip
    da84:	cmp	r1, #0
    da88:	bne	da98 <big2_scanRef+0x2dc>
    da8c:	str	r6, [r4]
    da90:	mov	r0, #0
    da94:	b	db5c <big2_scanRef+0x3a0>
    da98:	add	r6, r6, #2
    da9c:	b	d994 <big2_scanRef+0x1d8>
    daa0:	sub	r2, r5, r6
    daa4:	cmp	r2, #2
    daa8:	bge	dab4 <big2_scanRef+0x2f8>
    daac:	mvn	r0, #1
    dab0:	b	db5c <big2_scanRef+0x3a0>
    dab4:	mov	r0, #1
    dab8:	cmp	r0, #0
    dabc:	beq	dacc <big2_scanRef+0x310>
    dac0:	str	r6, [r4]
    dac4:	mov	r0, #0
    dac8:	b	db5c <big2_scanRef+0x3a0>
    dacc:	add	r6, r6, #2
    dad0:	b	d994 <big2_scanRef+0x1d8>
    dad4:	sub	r1, r5, r6
    dad8:	cmp	r1, #3
    dadc:	bge	dae8 <big2_scanRef+0x32c>
    dae0:	mvn	r0, #1
    dae4:	b	db5c <big2_scanRef+0x3a0>
    dae8:	mov	r3, #1
    daec:	cmp	r3, #0
    daf0:	beq	db00 <big2_scanRef+0x344>
    daf4:	str	r6, [r4]
    daf8:	mov	r0, #0
    dafc:	b	db5c <big2_scanRef+0x3a0>
    db00:	add	r6, r6, #3
    db04:	b	d994 <big2_scanRef+0x1d8>
    db08:	sub	r1, r5, r6
    db0c:	cmp	r1, #4
    db10:	bge	db1c <big2_scanRef+0x360>
    db14:	mvn	r0, #1
    db18:	b	db5c <big2_scanRef+0x3a0>
    db1c:	mov	r0, #1
    db20:	cmp	r0, #0
    db24:	beq	db34 <big2_scanRef+0x378>
    db28:	str	r6, [r4]
    db2c:	mov	r0, #0
    db30:	b	db5c <big2_scanRef+0x3a0>
    db34:	add	r6, r6, #4
    db38:	b	d994 <big2_scanRef+0x1d8>
    db3c:	add	r1, r6, #2
    db40:	str	r1, [r4]
    db44:	mov	r0, #9
    db48:	b	db5c <big2_scanRef+0x3a0>
    db4c:	str	r6, [r4]
    db50:	mov	r0, #0
    db54:	b	db5c <big2_scanRef+0x3a0>
    db58:	mvn	r0, #0
    db5c:	ldr	r4, [sp, #8]
    db60:	ldr	r5, [sp, #12]
    db64:	ldr	r6, [sp, #16]
    db68:	ldr	r7, [sp, #20]
    db6c:	ldr	r8, [sp, #24]
    db70:	ldr	lr, [sp, #4]
    db74:	add	sp, sp, #32
    db78:	bx	lr
    db7c:	.word	0x00000000
    db80:	.word	0x00000500
    db84:	.word	0x00000600

0000db88 <big2_scanAtts>:
    db88:	mov	ip, sp
    db8c:	sub	sp, sp, #40	; 0x28
    db90:	str	ip, [sp]
    db94:	str	lr, [sp, #4]
    db98:	str	r4, [sp, #8]
    db9c:	str	r5, [sp, #12]
    dba0:	str	r6, [sp, #16]
    dba4:	str	r7, [sp, #20]
    dba8:	str	r8, [sp, #24]
    dbac:	mov	r5, r3
    dbb0:	mov	r4, r2
    dbb4:	mov	r6, r0
    dbb8:	str	r1, [sp, #32]
    dbbc:	mov	r7, #0
    dbc0:	ldr	r1, [sp, #32]
    dbc4:	cmp	r1, r4
    dbc8:	beq	e650 <big2_scanAtts+0xac8>
    dbcc:	ldr	r2, [sp, #32]
    dbd0:	ldrb	ip, [r2]
    dbd4:	cmp	ip, #0
    dbd8:	beq	dbfc <big2_scanAtts+0x74>
    dbdc:	ldr	ip, [sp, #32]
    dbe0:	ldrb	r1, [ip]
    dbe4:	and	r0, r1, #255	; 0xff
    dbe8:	ldr	r3, [sp, #32]
    dbec:	ldrb	r1, [r3, #1]
    dbf0:	and	r1, r1, #255	; 0xff
    dbf4:	bl	5988 <unicode_byte_type>
    dbf8:	b	dc10 <big2_scanAtts+0x88>
    dbfc:	ldr	r0, [sp, #32]
    dc00:	ldrb	r0, [r0, #1]
    dc04:	and	r3, r0, #255	; 0xff
    dc08:	add	r3, r6, r3
    dc0c:	ldrb	r0, [r3, #76]	; 0x4c
    dc10:	sub	r2, r0, #5
    dc14:	cmp	r2, #25
    dc18:	bcs	e640 <big2_scanAtts+0xab8>
    dc1c:	add	pc, pc, r2, lsl #2
    dc20:	nop	{0}
    dc24:	b	dcf8 <big2_scanAtts+0x170>
    dc28:	b	dd3c <big2_scanAtts+0x1b4>
    dc2c:	b	dd80 <big2_scanAtts+0x1f8>
    dc30:	b	e640 <big2_scanAtts+0xab8>
    dc34:	b	dfc8 <big2_scanAtts+0x440>
    dc38:	b	dfc8 <big2_scanAtts+0x440>
    dc3c:	b	e640 <big2_scanAtts+0xab8>
    dc40:	b	e640 <big2_scanAtts+0xab8>
    dc44:	b	e640 <big2_scanAtts+0xab8>
    dc48:	b	e05c <big2_scanAtts+0x4d4>
    dc4c:	b	e640 <big2_scanAtts+0xab8>
    dc50:	b	e640 <big2_scanAtts+0xab8>
    dc54:	b	e640 <big2_scanAtts+0xab8>
    dc58:	b	e640 <big2_scanAtts+0xab8>
    dc5c:	b	e640 <big2_scanAtts+0xab8>
    dc60:	b	e640 <big2_scanAtts+0xab8>
    dc64:	b	dfc8 <big2_scanAtts+0x440>
    dc68:	b	dce8 <big2_scanAtts+0x160>
    dc6c:	b	ddc4 <big2_scanAtts+0x23c>
    dc70:	b	dce8 <big2_scanAtts+0x160>
    dc74:	b	dce8 <big2_scanAtts+0x160>
    dc78:	b	dce8 <big2_scanAtts+0x160>
    dc7c:	b	dce8 <big2_scanAtts+0x160>
    dc80:	b	e640 <big2_scanAtts+0xab8>
    dc84:	b	dc88 <big2_scanAtts+0x100>
    dc88:	ldr	r8, [pc, #2532]	; e674 <big2_scanAtts+0xaec>
    dc8c:	ldr	r2, [sp, #32]
    dc90:	ldrb	ip, [r2, #1]
    dc94:	and	r0, ip, #255	; 0xff
    dc98:	asr	ip, r0, #5
    dc9c:	ldr	r2, [pc, #2520]	; e67c <big2_scanAtts+0xaf4>
    dca0:	ldr	r1, [sp, #32]
    dca4:	ldrb	r1, [r1]
    dca8:	and	r1, r1, #255	; 0xff
    dcac:	ldrb	r3, [r2, r1]
    dcb0:	add	ip, ip, r3, lsl #3
    dcb4:	ldr	r2, [r8, ip, lsl #2]
    dcb8:	mov	r0, #1
    dcbc:	ldr	r1, [sp, #32]
    dcc0:	ldrb	r1, [r1, #1]
    dcc4:	and	ip, r1, #31
    dcc8:	lsl	r3, r0, ip
    dccc:	and	r1, r2, r3
    dcd0:	cmp	r1, #0
    dcd4:	bne	dce8 <big2_scanAtts+0x160>
    dcd8:	ldr	r3, [sp, #32]
    dcdc:	str	r3, [r5]
    dce0:	mov	r0, #0
    dce4:	b	e654 <big2_scanAtts+0xacc>
    dce8:	ldr	r1, [sp, #32]
    dcec:	add	r3, r1, #2
    dcf0:	str	r3, [sp, #32]
    dcf4:	b	dbc0 <big2_scanAtts+0x38>
    dcf8:	ldr	ip, [sp, #32]
    dcfc:	sub	r1, r4, ip
    dd00:	cmp	r1, #2
    dd04:	bge	dd10 <big2_scanAtts+0x188>
    dd08:	mvn	r0, #1
    dd0c:	b	e654 <big2_scanAtts+0xacc>
    dd10:	mov	r0, #1
    dd14:	cmp	r0, #0
    dd18:	beq	dd2c <big2_scanAtts+0x1a4>
    dd1c:	ldr	r3, [sp, #32]
    dd20:	str	r3, [r5]
    dd24:	mov	r0, #0
    dd28:	b	e654 <big2_scanAtts+0xacc>
    dd2c:	ldr	ip, [sp, #32]
    dd30:	add	r1, ip, #2
    dd34:	str	r1, [sp, #32]
    dd38:	b	dbc0 <big2_scanAtts+0x38>
    dd3c:	ldr	r1, [sp, #32]
    dd40:	sub	ip, r4, r1
    dd44:	cmp	ip, #3
    dd48:	bge	dd54 <big2_scanAtts+0x1cc>
    dd4c:	mvn	r0, #1
    dd50:	b	e654 <big2_scanAtts+0xacc>
    dd54:	mov	r0, #1
    dd58:	cmp	r0, #0
    dd5c:	beq	dd70 <big2_scanAtts+0x1e8>
    dd60:	ldr	ip, [sp, #32]
    dd64:	str	ip, [r5]
    dd68:	mov	r0, #0
    dd6c:	b	e654 <big2_scanAtts+0xacc>
    dd70:	ldr	r0, [sp, #32]
    dd74:	add	r0, r0, #3
    dd78:	str	r0, [sp, #32]
    dd7c:	b	dbc0 <big2_scanAtts+0x38>
    dd80:	ldr	r3, [sp, #32]
    dd84:	sub	r0, r4, r3
    dd88:	cmp	r0, #4
    dd8c:	bge	dd98 <big2_scanAtts+0x210>
    dd90:	mvn	r0, #1
    dd94:	b	e654 <big2_scanAtts+0xacc>
    dd98:	mov	ip, #1
    dd9c:	cmp	ip, #0
    dda0:	beq	ddb4 <big2_scanAtts+0x22c>
    dda4:	ldr	r3, [sp, #32]
    dda8:	str	r3, [r5]
    ddac:	mov	r0, #0
    ddb0:	b	e654 <big2_scanAtts+0xacc>
    ddb4:	ldr	ip, [sp, #32]
    ddb8:	add	r1, ip, #4
    ddbc:	str	r1, [sp, #32]
    ddc0:	b	dbc0 <big2_scanAtts+0x38>
    ddc4:	cmp	r7, #0
    ddc8:	beq	dddc <big2_scanAtts+0x254>
    ddcc:	ldr	r1, [sp, #32]
    ddd0:	str	r1, [r5]
    ddd4:	mov	r0, #0
    ddd8:	b	e654 <big2_scanAtts+0xacc>
    dddc:	mov	r7, #1
    dde0:	ldr	ip, [sp, #32]
    dde4:	add	r3, ip, #2
    dde8:	str	r3, [sp, #32]
    ddec:	ldr	ip, [sp, #32]
    ddf0:	cmp	ip, r4
    ddf4:	bne	de00 <big2_scanAtts+0x278>
    ddf8:	mvn	r0, #0
    ddfc:	b	e654 <big2_scanAtts+0xacc>
    de00:	ldr	r1, [sp, #32]
    de04:	ldrb	ip, [r1]
    de08:	cmp	ip, #0
    de0c:	beq	de30 <big2_scanAtts+0x2a8>
    de10:	ldr	r1, [sp, #32]
    de14:	ldrb	ip, [r1]
    de18:	and	r0, ip, #255	; 0xff
    de1c:	ldr	r2, [sp, #32]
    de20:	ldrb	r1, [r2, #1]
    de24:	and	r1, r1, #255	; 0xff
    de28:	bl	5988 <unicode_byte_type>
    de2c:	b	de44 <big2_scanAtts+0x2bc>
    de30:	ldr	r2, [sp, #32]
    de34:	ldrb	r2, [r2, #1]
    de38:	and	r1, r2, #255	; 0xff
    de3c:	add	r0, r6, r1
    de40:	ldrb	r0, [r0, #76]	; 0x4c
    de44:	cmp	r0, #22
    de48:	bcs	df30 <big2_scanAtts+0x3a8>
    de4c:	cmp	r0, #5
    de50:	beq	deec <big2_scanAtts+0x364>
    de54:	cmp	r0, #6
    de58:	beq	dea8 <big2_scanAtts+0x320>
    de5c:	cmp	r0, #7
    de60:	bne	dfa8 <big2_scanAtts+0x420>
    de64:	ldr	r1, [sp, #32]
    de68:	sub	ip, r4, r1
    de6c:	cmp	ip, #4
    de70:	bge	de7c <big2_scanAtts+0x2f4>
    de74:	mvn	r0, #1
    de78:	b	e654 <big2_scanAtts+0xacc>
    de7c:	mov	ip, #1
    de80:	cmp	ip, #0
    de84:	beq	de98 <big2_scanAtts+0x310>
    de88:	ldr	r1, [sp, #32]
    de8c:	str	r1, [r5]
    de90:	mov	r0, #0
    de94:	b	e654 <big2_scanAtts+0xacc>
    de98:	ldr	r1, [sp, #32]
    de9c:	add	r3, r1, #4
    dea0:	str	r3, [sp, #32]
    dea4:	b	dbc0 <big2_scanAtts+0x38>
    dea8:	ldr	r2, [sp, #32]
    deac:	sub	r1, r4, r2
    deb0:	cmp	r1, #3
    deb4:	bge	dec0 <big2_scanAtts+0x338>
    deb8:	mvn	r0, #1
    debc:	b	e654 <big2_scanAtts+0xacc>
    dec0:	mov	r2, #1
    dec4:	cmp	r2, #0
    dec8:	beq	dedc <big2_scanAtts+0x354>
    decc:	ldr	r2, [sp, #32]
    ded0:	str	r2, [r5]
    ded4:	mov	r0, #0
    ded8:	b	e654 <big2_scanAtts+0xacc>
    dedc:	ldr	r1, [sp, #32]
    dee0:	add	r2, r1, #3
    dee4:	str	r2, [sp, #32]
    dee8:	b	dbc0 <big2_scanAtts+0x38>
    deec:	ldr	r3, [sp, #32]
    def0:	sub	ip, r4, r3
    def4:	cmp	ip, #2
    def8:	bge	df04 <big2_scanAtts+0x37c>
    defc:	mvn	r0, #1
    df00:	b	e654 <big2_scanAtts+0xacc>
    df04:	mov	r1, #1
    df08:	cmp	r1, #0
    df0c:	beq	df20 <big2_scanAtts+0x398>
    df10:	ldr	r0, [sp, #32]
    df14:	str	r0, [r5]
    df18:	mov	r0, #0
    df1c:	b	e654 <big2_scanAtts+0xacc>
    df20:	ldr	r1, [sp, #32]
    df24:	add	r3, r1, #2
    df28:	str	r3, [sp, #32]
    df2c:	b	dbc0 <big2_scanAtts+0x38>
    df30:	cmp	r0, #22
    df34:	beq	dfb8 <big2_scanAtts+0x430>
    df38:	cmp	r0, #24
    df3c:	beq	dfb8 <big2_scanAtts+0x430>
    df40:	cmp	r0, #29
    df44:	bne	dfa8 <big2_scanAtts+0x420>
    df48:	ldr	r1, [pc, #1828]	; e674 <big2_scanAtts+0xaec>
    df4c:	ldr	r0, [sp, #32]
    df50:	ldrb	ip, [r0, #1]
    df54:	and	ip, ip, #255	; 0xff
    df58:	asr	ip, ip, #5
    df5c:	ldr	r3, [pc, #1812]	; e678 <big2_scanAtts+0xaf0>
    df60:	ldr	r0, [sp, #32]
    df64:	ldrb	r2, [r0]
    df68:	and	r0, r2, #255	; 0xff
    df6c:	ldrb	r3, [r3, r0]
    df70:	add	r3, ip, r3, lsl #3
    df74:	ldr	ip, [r1, r3, lsl #2]
    df78:	mov	r2, #1
    df7c:	ldr	r1, [sp, #32]
    df80:	ldrb	r0, [r1, #1]
    df84:	and	r3, r0, #31
    df88:	lsl	r0, r2, r3
    df8c:	and	r2, ip, r0
    df90:	cmp	r2, #0
    df94:	bne	dfb8 <big2_scanAtts+0x430>
    df98:	ldr	r1, [sp, #32]
    df9c:	str	r1, [r5]
    dfa0:	mov	r0, #0
    dfa4:	b	e654 <big2_scanAtts+0xacc>
    dfa8:	ldr	r1, [sp, #32]
    dfac:	str	r1, [r5]
    dfb0:	mov	r0, #0
    dfb4:	b	e654 <big2_scanAtts+0xacc>
    dfb8:	ldr	ip, [sp, #32]
    dfbc:	add	r1, ip, #2
    dfc0:	str	r1, [sp, #32]
    dfc4:	b	dbc0 <big2_scanAtts+0x38>
    dfc8:	ldr	r2, [sp, #32]
    dfcc:	add	r2, r2, #2
    dfd0:	str	r2, [sp, #32]
    dfd4:	ldr	r1, [sp, #32]
    dfd8:	cmp	r1, r4
    dfdc:	bne	dfe8 <big2_scanAtts+0x460>
    dfe0:	mvn	r0, #0
    dfe4:	b	e654 <big2_scanAtts+0xacc>
    dfe8:	ldr	r2, [sp, #32]
    dfec:	ldrb	ip, [r2]
    dff0:	cmp	ip, #0
    dff4:	beq	e018 <big2_scanAtts+0x490>
    dff8:	ldr	r2, [sp, #32]
    dffc:	ldrb	ip, [r2]
    e000:	and	r0, ip, #255	; 0xff
    e004:	ldr	r2, [sp, #32]
    e008:	ldrb	ip, [r2, #1]
    e00c:	and	r1, ip, #255	; 0xff
    e010:	bl	5988 <unicode_byte_type>
    e014:	b	e02c <big2_scanAtts+0x4a4>
    e018:	ldr	r0, [sp, #32]
    e01c:	ldrb	r2, [r0, #1]
    e020:	and	r0, r2, #255	; 0xff
    e024:	add	r3, r6, r0
    e028:	ldrb	r0, [r3, #76]	; 0x4c
    e02c:	cmp	r0, #14
    e030:	beq	e05c <big2_scanAtts+0x4d4>
    e034:	cmp	r0, #9
    e038:	beq	dfc8 <big2_scanAtts+0x440>
    e03c:	cmp	r0, #10
    e040:	beq	dfc8 <big2_scanAtts+0x440>
    e044:	cmp	r0, #21
    e048:	beq	dfc8 <big2_scanAtts+0x440>
    e04c:	ldr	r2, [sp, #32]
    e050:	str	r2, [r5]
    e054:	mov	r0, #0
    e058:	b	e654 <big2_scanAtts+0xacc>
    e05c:	mov	r7, #0
    e060:	ldr	r2, [sp, #32]
    e064:	add	r3, r2, #2
    e068:	str	r3, [sp, #32]
    e06c:	ldr	r3, [sp, #32]
    e070:	cmp	r3, r4
    e074:	bne	e080 <big2_scanAtts+0x4f8>
    e078:	mvn	r0, #0
    e07c:	b	e654 <big2_scanAtts+0xacc>
    e080:	ldr	ip, [sp, #32]
    e084:	ldrb	r3, [ip]
    e088:	cmp	r3, #0
    e08c:	beq	e0b4 <big2_scanAtts+0x52c>
    e090:	ldr	r2, [sp, #32]
    e094:	ldrb	r2, [r2]
    e098:	and	r0, r2, #255	; 0xff
    e09c:	ldr	r1, [sp, #32]
    e0a0:	ldrb	ip, [r1, #1]
    e0a4:	and	r1, ip, #255	; 0xff
    e0a8:	bl	5988 <unicode_byte_type>
    e0ac:	mov	r8, r0
    e0b0:	b	e0c8 <big2_scanAtts+0x540>
    e0b4:	ldr	r0, [sp, #32]
    e0b8:	ldrb	ip, [r0, #1]
    e0bc:	and	ip, ip, #255	; 0xff
    e0c0:	add	r2, r6, ip
    e0c4:	ldrb	r8, [r2, #76]	; 0x4c
    e0c8:	cmp	r8, #12
    e0cc:	beq	e0e0 <big2_scanAtts+0x558>
    e0d0:	cmp	r8, #13
    e0d4:	moveq	r0, #1
    e0d8:	movne	r0, #0
    e0dc:	b	e0e4 <big2_scanAtts+0x55c>
    e0e0:	mov	r0, #1
    e0e4:	cmp	r0, #0
    e0e8:	bne	e114 <big2_scanAtts+0x58c>
    e0ec:	cmp	r8, #9
    e0f0:	beq	e060 <big2_scanAtts+0x4d8>
    e0f4:	cmp	r8, #10
    e0f8:	beq	e060 <big2_scanAtts+0x4d8>
    e0fc:	cmp	r8, #21
    e100:	beq	e060 <big2_scanAtts+0x4d8>
    e104:	ldr	r0, [sp, #32]
    e108:	str	r0, [r5]
    e10c:	mov	r0, #0
    e110:	b	e654 <big2_scanAtts+0xacc>
    e114:	ldr	r3, [sp, #32]
    e118:	add	r1, r3, #2
    e11c:	str	r1, [sp, #32]
    e120:	ldr	r3, [sp, #32]
    e124:	cmp	r3, r4
    e128:	bne	e134 <big2_scanAtts+0x5ac>
    e12c:	mvn	r0, #0
    e130:	b	e654 <big2_scanAtts+0xacc>
    e134:	ldr	r0, [sp, #32]
    e138:	ldrb	r0, [r0]
    e13c:	cmp	r0, #0
    e140:	beq	e164 <big2_scanAtts+0x5dc>
    e144:	ldr	ip, [sp, #32]
    e148:	ldrb	ip, [ip]
    e14c:	and	r0, ip, #255	; 0xff
    e150:	ldr	r3, [sp, #32]
    e154:	ldrb	r1, [r3, #1]
    e158:	and	r1, r1, #255	; 0xff
    e15c:	bl	5988 <unicode_byte_type>
    e160:	b	e178 <big2_scanAtts+0x5f0>
    e164:	ldr	r3, [sp, #32]
    e168:	ldrb	r0, [r3, #1]
    e16c:	and	ip, r0, #255	; 0xff
    e170:	add	r2, r6, ip
    e174:	ldrb	r0, [r2, #76]	; 0x4c
    e178:	cmp	r0, r8
    e17c:	beq	e2e4 <big2_scanAtts+0x75c>
    e180:	cmp	r0, #9
    e184:	bcs	e2d4 <big2_scanAtts+0x74c>
    e188:	add	pc, pc, r0, lsl #2
    e18c:	nop	{0}
    e190:	b	e280 <big2_scanAtts+0x6f8>
    e194:	b	e280 <big2_scanAtts+0x6f8>
    e198:	b	e2c4 <big2_scanAtts+0x73c>
    e19c:	b	e290 <big2_scanAtts+0x708>
    e1a0:	b	e2d4 <big2_scanAtts+0x74c>
    e1a4:	b	e1b4 <big2_scanAtts+0x62c>
    e1a8:	b	e1f8 <big2_scanAtts+0x670>
    e1ac:	b	e23c <big2_scanAtts+0x6b4>
    e1b0:	b	e280 <big2_scanAtts+0x6f8>
    e1b4:	ldr	ip, [sp, #32]
    e1b8:	sub	r2, r4, ip
    e1bc:	cmp	r2, #2
    e1c0:	bge	e1cc <big2_scanAtts+0x644>
    e1c4:	mvn	r0, #1
    e1c8:	b	e654 <big2_scanAtts+0xacc>
    e1cc:	mov	r1, #0
    e1d0:	cmp	r1, #0
    e1d4:	beq	e1e8 <big2_scanAtts+0x660>
    e1d8:	ldr	r0, [sp, #32]
    e1dc:	str	r0, [r5]
    e1e0:	mov	r0, #0
    e1e4:	b	e654 <big2_scanAtts+0xacc>
    e1e8:	ldr	ip, [sp, #32]
    e1ec:	add	r1, ip, #2
    e1f0:	str	r1, [sp, #32]
    e1f4:	b	e120 <big2_scanAtts+0x598>
    e1f8:	ldr	r3, [sp, #32]
    e1fc:	sub	r3, r4, r3
    e200:	cmp	r3, #3
    e204:	bge	e210 <big2_scanAtts+0x688>
    e208:	mvn	r0, #1
    e20c:	b	e654 <big2_scanAtts+0xacc>
    e210:	mov	r0, #0
    e214:	cmp	r0, #0
    e218:	beq	e22c <big2_scanAtts+0x6a4>
    e21c:	ldr	r1, [sp, #32]
    e220:	str	r1, [r5]
    e224:	mov	r0, #0
    e228:	b	e654 <big2_scanAtts+0xacc>
    e22c:	ldr	r0, [sp, #32]
    e230:	add	r0, r0, #3
    e234:	str	r0, [sp, #32]
    e238:	b	e120 <big2_scanAtts+0x598>
    e23c:	ldr	r1, [sp, #32]
    e240:	sub	ip, r4, r1
    e244:	cmp	ip, #4
    e248:	bge	e254 <big2_scanAtts+0x6cc>
    e24c:	mvn	r0, #1
    e250:	b	e654 <big2_scanAtts+0xacc>
    e254:	mov	r3, #0
    e258:	cmp	r3, #0
    e25c:	beq	e270 <big2_scanAtts+0x6e8>
    e260:	ldr	r0, [sp, #32]
    e264:	str	r0, [r5]
    e268:	mov	r0, #0
    e26c:	b	e654 <big2_scanAtts+0xacc>
    e270:	ldr	r0, [sp, #32]
    e274:	add	r1, r0, #4
    e278:	str	r1, [sp, #32]
    e27c:	b	e120 <big2_scanAtts+0x598>
    e280:	ldr	r2, [sp, #32]
    e284:	str	r2, [r5]
    e288:	mov	r0, #0
    e28c:	b	e654 <big2_scanAtts+0xacc>
    e290:	ldr	r1, [sp, #32]
    e294:	add	r1, r1, #2
    e298:	add	r3, sp, #32
    e29c:	mov	r2, r4
    e2a0:	mov	r0, r6
    e2a4:	bl	d7bc <big2_scanRef>
    e2a8:	cmp	r0, #0
    e2ac:	bgt	e120 <big2_scanAtts+0x598>
    e2b0:	cmp	r0, #0
    e2b4:	bne	e654 <big2_scanAtts+0xacc>
    e2b8:	ldr	r2, [sp, #32]
    e2bc:	str	r2, [r5]
    e2c0:	b	e654 <big2_scanAtts+0xacc>
    e2c4:	ldr	r3, [sp, #32]
    e2c8:	str	r3, [r5]
    e2cc:	mov	r0, #0
    e2d0:	b	e654 <big2_scanAtts+0xacc>
    e2d4:	ldr	r2, [sp, #32]
    e2d8:	add	r1, r2, #2
    e2dc:	str	r1, [sp, #32]
    e2e0:	b	e120 <big2_scanAtts+0x598>
    e2e4:	ldr	r2, [sp, #32]
    e2e8:	add	ip, r2, #2
    e2ec:	str	ip, [sp, #32]
    e2f0:	ldr	r0, [sp, #32]
    e2f4:	cmp	r0, r4
    e2f8:	bne	e304 <big2_scanAtts+0x77c>
    e2fc:	mvn	r0, #0
    e300:	b	e654 <big2_scanAtts+0xacc>
    e304:	ldr	r2, [sp, #32]
    e308:	ldrb	r3, [r2]
    e30c:	cmp	r3, #0
    e310:	beq	e334 <big2_scanAtts+0x7ac>
    e314:	ldr	ip, [sp, #32]
    e318:	ldrb	ip, [ip]
    e31c:	and	r0, ip, #255	; 0xff
    e320:	ldr	r2, [sp, #32]
    e324:	ldrb	ip, [r2, #1]
    e328:	and	r1, ip, #255	; 0xff
    e32c:	bl	5988 <unicode_byte_type>
    e330:	b	e348 <big2_scanAtts+0x7c0>
    e334:	ldr	r2, [sp, #32]
    e338:	ldrb	r2, [r2, #1]
    e33c:	and	ip, r2, #255	; 0xff
    e340:	add	r0, r6, ip
    e344:	ldrb	r0, [r0, #76]	; 0x4c
    e348:	cmp	r0, #11
    e34c:	bcs	e364 <big2_scanAtts+0x7dc>
    e350:	cmp	r0, #9
    e354:	beq	e38c <big2_scanAtts+0x804>
    e358:	cmp	r0, #10
    e35c:	beq	e38c <big2_scanAtts+0x804>
    e360:	b	e37c <big2_scanAtts+0x7f4>
    e364:	cmp	r0, #11
    e368:	beq	e62c <big2_scanAtts+0xaa4>
    e36c:	cmp	r0, #17
    e370:	beq	e5b4 <big2_scanAtts+0xa2c>
    e374:	cmp	r0, #21
    e378:	beq	e38c <big2_scanAtts+0x804>
    e37c:	ldr	r3, [sp, #32]
    e380:	str	r3, [r5]
    e384:	mov	r0, #0
    e388:	b	e654 <big2_scanAtts+0xacc>
    e38c:	ldr	r3, [sp, #32]
    e390:	add	r0, r3, #2
    e394:	str	r0, [sp, #32]
    e398:	ldr	r0, [sp, #32]
    e39c:	cmp	r0, r4
    e3a0:	bne	e3ac <big2_scanAtts+0x824>
    e3a4:	mvn	r0, #0
    e3a8:	b	e654 <big2_scanAtts+0xacc>
    e3ac:	ldr	r1, [sp, #32]
    e3b0:	ldrb	r3, [r1]
    e3b4:	cmp	r3, #0
    e3b8:	beq	e3dc <big2_scanAtts+0x854>
    e3bc:	ldr	r2, [sp, #32]
    e3c0:	ldrb	ip, [r2]
    e3c4:	and	r0, ip, #255	; 0xff
    e3c8:	ldr	r1, [sp, #32]
    e3cc:	ldrb	r1, [r1, #1]
    e3d0:	and	r1, r1, #255	; 0xff
    e3d4:	bl	5988 <unicode_byte_type>
    e3d8:	b	e3f0 <big2_scanAtts+0x868>
    e3dc:	ldr	r0, [sp, #32]
    e3e0:	ldrb	r0, [r0, #1]
    e3e4:	and	ip, r0, #255	; 0xff
    e3e8:	add	r0, r6, ip
    e3ec:	ldrb	r0, [r0, #76]	; 0x4c
    e3f0:	sub	r3, r0, #5
    e3f4:	cmp	r3, #25
    e3f8:	bcs	e5a4 <big2_scanAtts+0xa1c>
    e3fc:	add	pc, pc, r3, lsl #2
    e400:	nop	{0}
    e404:	b	e4d8 <big2_scanAtts+0x950>
    e408:	b	e51c <big2_scanAtts+0x994>
    e40c:	b	e560 <big2_scanAtts+0x9d8>
    e410:	b	e5a4 <big2_scanAtts+0xa1c>
    e414:	b	e38c <big2_scanAtts+0x804>
    e418:	b	e38c <big2_scanAtts+0x804>
    e41c:	b	e62c <big2_scanAtts+0xaa4>
    e420:	b	e5a4 <big2_scanAtts+0xa1c>
    e424:	b	e5a4 <big2_scanAtts+0xa1c>
    e428:	b	e5a4 <big2_scanAtts+0xa1c>
    e42c:	b	e5a4 <big2_scanAtts+0xa1c>
    e430:	b	e5a4 <big2_scanAtts+0xa1c>
    e434:	b	e5b4 <big2_scanAtts+0xa2c>
    e438:	b	e5a4 <big2_scanAtts+0xa1c>
    e43c:	b	e5a4 <big2_scanAtts+0xa1c>
    e440:	b	e5a4 <big2_scanAtts+0xa1c>
    e444:	b	e38c <big2_scanAtts+0x804>
    e448:	b	e4c8 <big2_scanAtts+0x940>
    e44c:	b	e5a4 <big2_scanAtts+0xa1c>
    e450:	b	e4c8 <big2_scanAtts+0x940>
    e454:	b	e5a4 <big2_scanAtts+0xa1c>
    e458:	b	e5a4 <big2_scanAtts+0xa1c>
    e45c:	b	e5a4 <big2_scanAtts+0xa1c>
    e460:	b	e5a4 <big2_scanAtts+0xa1c>
    e464:	b	e468 <big2_scanAtts+0x8e0>
    e468:	ldr	r8, [pc, #516]	; e674 <big2_scanAtts+0xaec>
    e46c:	ldr	r0, [sp, #32]
    e470:	ldrb	r1, [r0, #1]
    e474:	and	r0, r1, #255	; 0xff
    e478:	asr	r0, r0, #5
    e47c:	ldr	ip, [pc, #500]	; e678 <big2_scanAtts+0xaf0>
    e480:	ldr	r2, [sp, #32]
    e484:	ldrb	r3, [r2]
    e488:	and	r2, r3, #255	; 0xff
    e48c:	ldrb	r2, [ip, r2]
    e490:	add	ip, r0, r2, lsl #3
    e494:	ldr	r2, [r8, ip, lsl #2]
    e498:	mov	ip, #1
    e49c:	ldr	r1, [sp, #32]
    e4a0:	ldrb	r0, [r1, #1]
    e4a4:	and	r0, r0, #31
    e4a8:	lsl	r0, ip, r0
    e4ac:	and	r1, r2, r0
    e4b0:	cmp	r1, #0
    e4b4:	bne	e4c8 <big2_scanAtts+0x940>
    e4b8:	ldr	r2, [sp, #32]
    e4bc:	str	r2, [r5]
    e4c0:	mov	r0, #0
    e4c4:	b	e654 <big2_scanAtts+0xacc>
    e4c8:	ldr	r2, [sp, #32]
    e4cc:	add	r2, r2, #2
    e4d0:	str	r2, [sp, #32]
    e4d4:	b	dbc0 <big2_scanAtts+0x38>
    e4d8:	ldr	r1, [sp, #32]
    e4dc:	sub	r1, r4, r1
    e4e0:	cmp	r1, #2
    e4e4:	bge	e4f0 <big2_scanAtts+0x968>
    e4e8:	mvn	r0, #1
    e4ec:	b	e654 <big2_scanAtts+0xacc>
    e4f0:	mov	r3, #1
    e4f4:	cmp	r3, #0
    e4f8:	beq	e50c <big2_scanAtts+0x984>
    e4fc:	ldr	r0, [sp, #32]
    e500:	str	r0, [r5]
    e504:	mov	r0, #0
    e508:	b	e654 <big2_scanAtts+0xacc>
    e50c:	ldr	r3, [sp, #32]
    e510:	add	r3, r3, #2
    e514:	str	r3, [sp, #32]
    e518:	b	dbc0 <big2_scanAtts+0x38>
    e51c:	ldr	r0, [sp, #32]
    e520:	sub	r1, r4, r0
    e524:	cmp	r1, #3
    e528:	bge	e534 <big2_scanAtts+0x9ac>
    e52c:	mvn	r0, #1
    e530:	b	e654 <big2_scanAtts+0xacc>
    e534:	mov	r3, #1
    e538:	cmp	r3, #0
    e53c:	beq	e550 <big2_scanAtts+0x9c8>
    e540:	ldr	r3, [sp, #32]
    e544:	str	r3, [r5]
    e548:	mov	r0, #0
    e54c:	b	e654 <big2_scanAtts+0xacc>
    e550:	ldr	r1, [sp, #32]
    e554:	add	r2, r1, #3
    e558:	str	r2, [sp, #32]
    e55c:	b	dbc0 <big2_scanAtts+0x38>
    e560:	ldr	r0, [sp, #32]
    e564:	sub	ip, r4, r0
    e568:	cmp	ip, #4
    e56c:	bge	e578 <big2_scanAtts+0x9f0>
    e570:	mvn	r0, #1
    e574:	b	e654 <big2_scanAtts+0xacc>
    e578:	mov	r1, #1
    e57c:	cmp	r1, #0
    e580:	beq	e594 <big2_scanAtts+0xa0c>
    e584:	ldr	r2, [sp, #32]
    e588:	str	r2, [r5]
    e58c:	mov	r0, #0
    e590:	b	e654 <big2_scanAtts+0xacc>
    e594:	ldr	ip, [sp, #32]
    e598:	add	r0, ip, #4
    e59c:	str	r0, [sp, #32]
    e5a0:	b	dbc0 <big2_scanAtts+0x38>
    e5a4:	ldr	r2, [sp, #32]
    e5a8:	str	r2, [r5]
    e5ac:	mov	r0, #0
    e5b0:	b	e654 <big2_scanAtts+0xacc>
    e5b4:	ldr	r2, [sp, #32]
    e5b8:	add	r3, r2, #2
    e5bc:	str	r3, [sp, #32]
    e5c0:	ldr	r1, [sp, #32]
    e5c4:	cmp	r1, r4
    e5c8:	bne	e5d4 <big2_scanAtts+0xa4c>
    e5cc:	mvn	r0, #0
    e5d0:	b	e654 <big2_scanAtts+0xacc>
    e5d4:	ldr	r0, [sp, #32]
    e5d8:	ldrb	r2, [r0]
    e5dc:	cmp	r2, #0
    e5e0:	bne	e5fc <big2_scanAtts+0xa74>
    e5e4:	ldr	r0, [sp, #32]
    e5e8:	ldrb	r3, [r0, #1]
    e5ec:	cmp	r3, #62	; 0x3e
    e5f0:	moveq	r3, #1
    e5f4:	movne	r3, #0
    e5f8:	b	e600 <big2_scanAtts+0xa78>
    e5fc:	mov	r3, #0
    e600:	cmp	r3, #0
    e604:	bne	e618 <big2_scanAtts+0xa90>
    e608:	ldr	r3, [sp, #32]
    e60c:	str	r3, [r5]
    e610:	mov	r0, #0
    e614:	b	e654 <big2_scanAtts+0xacc>
    e618:	ldr	r0, [sp, #32]
    e61c:	add	r1, r0, #2
    e620:	str	r1, [r5]
    e624:	mov	r0, #3
    e628:	b	e654 <big2_scanAtts+0xacc>
    e62c:	ldr	r3, [sp, #32]
    e630:	add	r2, r3, #2
    e634:	str	r2, [r5]
    e638:	mov	r0, #1
    e63c:	b	e654 <big2_scanAtts+0xacc>
    e640:	ldr	ip, [sp, #32]
    e644:	str	ip, [r5]
    e648:	mov	r0, #0
    e64c:	b	e654 <big2_scanAtts+0xacc>
    e650:	mvn	r0, #0
    e654:	ldr	r4, [sp, #8]
    e658:	ldr	r5, [sp, #12]
    e65c:	ldr	r6, [sp, #16]
    e660:	ldr	r7, [sp, #20]
    e664:	ldr	r8, [sp, #24]
    e668:	ldr	lr, [sp, #4]
    e66c:	add	sp, sp, #40	; 0x28
    e670:	bx	lr
    e674:	.word	0x00000000
    e678:	.word	0x00000500
    e67c:	.word	0x00000600

0000e680 <big2_scanLt>:
    e680:	mov	ip, sp
    e684:	sub	sp, sp, #32
    e688:	str	ip, [sp]
    e68c:	str	lr, [sp, #4]
    e690:	str	r4, [sp, #8]
    e694:	str	r5, [sp, #12]
    e698:	str	r6, [sp, #16]
    e69c:	str	r7, [sp, #20]
    e6a0:	str	r8, [sp, #24]
    e6a4:	str	r9, [sp, #28]
    e6a8:	mov	r4, r3
    e6ac:	mov	r5, r2
    e6b0:	mov	r7, r1
    e6b4:	mov	r6, r0
    e6b8:	cmp	r7, r5
    e6bc:	bne	e6c8 <big2_scanLt+0x48>
    e6c0:	mvn	r0, #0
    e6c4:	b	eecc <big2_scanLt+0x84c>
    e6c8:	ldrb	r0, [r7]
    e6cc:	cmp	r0, #0
    e6d0:	beq	e6ec <big2_scanLt+0x6c>
    e6d4:	ldrb	ip, [r7]
    e6d8:	and	r0, ip, #255	; 0xff
    e6dc:	ldrb	r2, [r7, #1]
    e6e0:	and	r1, r2, #255	; 0xff
    e6e4:	bl	5988 <unicode_byte_type>
    e6e8:	b	e6fc <big2_scanLt+0x7c>
    e6ec:	ldrb	ip, [r7, #1]
    e6f0:	and	r2, ip, #255	; 0xff
    e6f4:	add	ip, r6, r2
    e6f8:	ldrb	r0, [ip, #76]	; 0x4c
    e6fc:	sub	r0, r0, #5
    e700:	cmp	r0, #25
    e704:	bcs	eec4 <big2_scanLt+0x844>
    e708:	add	pc, pc, r0, lsl #2
    e70c:	nop	{0}
    e710:	b	e7cc <big2_scanLt+0x14c>
    e714:	b	e800 <big2_scanLt+0x180>
    e718:	b	e834 <big2_scanLt+0x1b4>
    e71c:	b	eec4 <big2_scanLt+0x844>
    e720:	b	eec4 <big2_scanLt+0x844>
    e724:	b	eec4 <big2_scanLt+0x844>
    e728:	b	eec4 <big2_scanLt+0x844>
    e72c:	b	eec4 <big2_scanLt+0x844>
    e730:	b	eec4 <big2_scanLt+0x844>
    e734:	b	eec4 <big2_scanLt+0x844>
    e738:	b	ee94 <big2_scanLt+0x814>
    e73c:	b	ee00 <big2_scanLt+0x780>
    e740:	b	eeac <big2_scanLt+0x82c>
    e744:	b	eec4 <big2_scanLt+0x844>
    e748:	b	eec4 <big2_scanLt+0x844>
    e74c:	b	eec4 <big2_scanLt+0x844>
    e750:	b	eec4 <big2_scanLt+0x844>
    e754:	b	e7c4 <big2_scanLt+0x144>
    e758:	b	eec4 <big2_scanLt+0x844>
    e75c:	b	e7c4 <big2_scanLt+0x144>
    e760:	b	eec4 <big2_scanLt+0x844>
    e764:	b	eec4 <big2_scanLt+0x844>
    e768:	b	eec4 <big2_scanLt+0x844>
    e76c:	b	eec4 <big2_scanLt+0x844>
    e770:	b	e774 <big2_scanLt+0xf4>
    e774:	ldr	r3, [pc, #1908]	; eef0 <big2_scanLt+0x870>
    e778:	ldrb	r2, [r7, #1]
    e77c:	and	r0, r2, #255	; 0xff
    e780:	asr	r0, r0, #5
    e784:	ldr	r1, [pc, #1896]	; eef4 <big2_scanLt+0x874>
    e788:	ldrb	r2, [r7]
    e78c:	and	ip, r2, #255	; 0xff
    e790:	ldrb	r2, [r1, ip]
    e794:	add	r0, r0, r2, lsl #3
    e798:	ldr	ip, [r3, r0, lsl #2]
    e79c:	mov	r2, #1
    e7a0:	ldrb	r3, [r7, #1]
    e7a4:	and	r1, r3, #31
    e7a8:	lsl	r2, r2, r1
    e7ac:	and	r3, ip, r2
    e7b0:	cmp	r3, #0
    e7b4:	bne	e7c4 <big2_scanLt+0x144>
    e7b8:	str	r7, [r4]
    e7bc:	mov	r0, #0
    e7c0:	b	eecc <big2_scanLt+0x84c>
    e7c4:	add	r7, r7, #2
    e7c8:	b	e864 <big2_scanLt+0x1e4>
    e7cc:	sub	r2, r5, r7
    e7d0:	cmp	r2, #2
    e7d4:	bge	e7e0 <big2_scanLt+0x160>
    e7d8:	mvn	r0, #1
    e7dc:	b	eecc <big2_scanLt+0x84c>
    e7e0:	mov	r0, #1
    e7e4:	cmp	r0, #0
    e7e8:	beq	e7f8 <big2_scanLt+0x178>
    e7ec:	str	r7, [r4]
    e7f0:	mov	r0, #0
    e7f4:	b	eecc <big2_scanLt+0x84c>
    e7f8:	add	r7, r7, #2
    e7fc:	b	e864 <big2_scanLt+0x1e4>
    e800:	sub	r0, r5, r7
    e804:	cmp	r0, #3
    e808:	bge	e814 <big2_scanLt+0x194>
    e80c:	mvn	r0, #1
    e810:	b	eecc <big2_scanLt+0x84c>
    e814:	mov	r0, #1
    e818:	cmp	r0, #0
    e81c:	beq	e82c <big2_scanLt+0x1ac>
    e820:	str	r7, [r4]
    e824:	mov	r0, #0
    e828:	b	eecc <big2_scanLt+0x84c>
    e82c:	add	r7, r7, #3
    e830:	b	e864 <big2_scanLt+0x1e4>
    e834:	sub	ip, r5, r7
    e838:	cmp	ip, #4
    e83c:	bge	e848 <big2_scanLt+0x1c8>
    e840:	mvn	r0, #1
    e844:	b	eecc <big2_scanLt+0x84c>
    e848:	mov	r0, #1
    e84c:	cmp	r0, #0
    e850:	beq	e860 <big2_scanLt+0x1e0>
    e854:	str	r7, [r4]
    e858:	mov	r0, #0
    e85c:	b	eecc <big2_scanLt+0x84c>
    e860:	add	r7, r7, #4
    e864:	mov	r8, #0
    e868:	cmp	r7, r5
    e86c:	beq	edf8 <big2_scanLt+0x778>
    e870:	ldrb	r1, [r7]
    e874:	cmp	r1, #0
    e878:	beq	e894 <big2_scanLt+0x214>
    e87c:	ldrb	r3, [r7]
    e880:	and	r0, r3, #255	; 0xff
    e884:	ldrb	r3, [r7, #1]
    e888:	and	r1, r3, #255	; 0xff
    e88c:	bl	5988 <unicode_byte_type>
    e890:	b	e8a4 <big2_scanLt+0x224>
    e894:	ldrb	r3, [r7, #1]
    e898:	and	r0, r3, #255	; 0xff
    e89c:	add	r0, r6, r0
    e8a0:	ldrb	r0, [r0, #76]	; 0x4c
    e8a4:	sub	r2, r0, #5
    e8a8:	cmp	r2, #25
    e8ac:	bcs	edec <big2_scanLt+0x76c>
    e8b0:	add	pc, pc, r2, lsl #2
    e8b4:	nop	{0}
    e8b8:	b	e974 <big2_scanLt+0x2f4>
    e8bc:	b	e9a8 <big2_scanLt+0x328>
    e8c0:	b	e9dc <big2_scanLt+0x35c>
    e8c4:	b	edec <big2_scanLt+0x76c>
    e8c8:	b	eba8 <big2_scanLt+0x528>
    e8cc:	b	eba8 <big2_scanLt+0x528>
    e8d0:	b	ed80 <big2_scanLt+0x700>
    e8d4:	b	edec <big2_scanLt+0x76c>
    e8d8:	b	edec <big2_scanLt+0x76c>
    e8dc:	b	edec <big2_scanLt+0x76c>
    e8e0:	b	edec <big2_scanLt+0x76c>
    e8e4:	b	edec <big2_scanLt+0x76c>
    e8e8:	b	ed90 <big2_scanLt+0x710>
    e8ec:	b	edec <big2_scanLt+0x76c>
    e8f0:	b	edec <big2_scanLt+0x76c>
    e8f4:	b	edec <big2_scanLt+0x76c>
    e8f8:	b	eba8 <big2_scanLt+0x528>
    e8fc:	b	e96c <big2_scanLt+0x2ec>
    e900:	b	ea10 <big2_scanLt+0x390>
    e904:	b	e96c <big2_scanLt+0x2ec>
    e908:	b	e96c <big2_scanLt+0x2ec>
    e90c:	b	e96c <big2_scanLt+0x2ec>
    e910:	b	e96c <big2_scanLt+0x2ec>
    e914:	b	edec <big2_scanLt+0x76c>
    e918:	b	e91c <big2_scanLt+0x29c>
    e91c:	ldr	r9, [pc, #1484]	; eef0 <big2_scanLt+0x870>
    e920:	ldrb	r2, [r7, #1]
    e924:	and	r3, r2, #255	; 0xff
    e928:	asr	r1, r3, #5
    e92c:	ldr	ip, [pc, #1476]	; eef8 <big2_scanLt+0x878>
    e930:	ldrb	r3, [r7]
    e934:	and	r0, r3, #255	; 0xff
    e938:	ldrb	r2, [ip, r0]
    e93c:	add	ip, r1, r2, lsl #3
    e940:	ldr	r1, [r9, ip, lsl #2]
    e944:	mov	r0, #1
    e948:	ldrb	r2, [r7, #1]
    e94c:	and	ip, r2, #31
    e950:	lsl	r0, r0, ip
    e954:	and	r1, r1, r0
    e958:	cmp	r1, #0
    e95c:	bne	e96c <big2_scanLt+0x2ec>
    e960:	str	r7, [r4]
    e964:	mov	r0, #0
    e968:	b	eecc <big2_scanLt+0x84c>
    e96c:	add	r7, r7, #2
    e970:	b	e868 <big2_scanLt+0x1e8>
    e974:	sub	r2, r5, r7
    e978:	cmp	r2, #2
    e97c:	bge	e988 <big2_scanLt+0x308>
    e980:	mvn	r0, #1
    e984:	b	eecc <big2_scanLt+0x84c>
    e988:	mov	ip, #1
    e98c:	cmp	ip, #0
    e990:	beq	e9a0 <big2_scanLt+0x320>
    e994:	str	r7, [r4]
    e998:	mov	r0, #0
    e99c:	b	eecc <big2_scanLt+0x84c>
    e9a0:	add	r7, r7, #2
    e9a4:	b	e868 <big2_scanLt+0x1e8>
    e9a8:	sub	r3, r5, r7
    e9ac:	cmp	r3, #3
    e9b0:	bge	e9bc <big2_scanLt+0x33c>
    e9b4:	mvn	r0, #1
    e9b8:	b	eecc <big2_scanLt+0x84c>
    e9bc:	mov	r1, #1
    e9c0:	cmp	r1, #0
    e9c4:	beq	e9d4 <big2_scanLt+0x354>
    e9c8:	str	r7, [r4]
    e9cc:	mov	r0, #0
    e9d0:	b	eecc <big2_scanLt+0x84c>
    e9d4:	add	r7, r7, #3
    e9d8:	b	e868 <big2_scanLt+0x1e8>
    e9dc:	sub	r0, r5, r7
    e9e0:	cmp	r0, #4
    e9e4:	bge	e9f0 <big2_scanLt+0x370>
    e9e8:	mvn	r0, #1
    e9ec:	b	eecc <big2_scanLt+0x84c>
    e9f0:	mov	r3, #1
    e9f4:	cmp	r3, #0
    e9f8:	beq	ea08 <big2_scanLt+0x388>
    e9fc:	str	r7, [r4]
    ea00:	mov	r0, #0
    ea04:	b	eecc <big2_scanLt+0x84c>
    ea08:	add	r7, r7, #4
    ea0c:	b	e868 <big2_scanLt+0x1e8>
    ea10:	cmp	r8, #0
    ea14:	beq	ea24 <big2_scanLt+0x3a4>
    ea18:	str	r7, [r4]
    ea1c:	mov	r0, #0
    ea20:	b	eecc <big2_scanLt+0x84c>
    ea24:	mov	r8, #1
    ea28:	add	r7, r7, #2
    ea2c:	cmp	r7, r5
    ea30:	bne	ea3c <big2_scanLt+0x3bc>
    ea34:	mvn	r0, #0
    ea38:	b	eecc <big2_scanLt+0x84c>
    ea3c:	ldrb	r0, [r7]
    ea40:	cmp	r0, #0
    ea44:	beq	ea60 <big2_scanLt+0x3e0>
    ea48:	ldrb	r0, [r7]
    ea4c:	and	r0, r0, #255	; 0xff
    ea50:	ldrb	r1, [r7, #1]
    ea54:	and	r1, r1, #255	; 0xff
    ea58:	bl	5988 <unicode_byte_type>
    ea5c:	b	ea70 <big2_scanLt+0x3f0>
    ea60:	ldrb	r2, [r7, #1]
    ea64:	and	r3, r2, #255	; 0xff
    ea68:	add	r1, r6, r3
    ea6c:	ldrb	r0, [r1, #76]	; 0x4c
    ea70:	cmp	r0, #22
    ea74:	bcs	eb2c <big2_scanLt+0x4ac>
    ea78:	cmp	r0, #5
    ea7c:	beq	eaf8 <big2_scanLt+0x478>
    ea80:	cmp	r0, #6
    ea84:	beq	eac4 <big2_scanLt+0x444>
    ea88:	cmp	r0, #7
    ea8c:	bne	eb94 <big2_scanLt+0x514>
    ea90:	sub	r2, r5, r7
    ea94:	cmp	r2, #4
    ea98:	bge	eaa4 <big2_scanLt+0x424>
    ea9c:	mvn	r0, #1
    eaa0:	b	eecc <big2_scanLt+0x84c>
    eaa4:	mov	r3, #1
    eaa8:	cmp	r3, #0
    eaac:	beq	eabc <big2_scanLt+0x43c>
    eab0:	str	r7, [r4]
    eab4:	mov	r0, #0
    eab8:	b	eecc <big2_scanLt+0x84c>
    eabc:	add	r7, r7, #4
    eac0:	b	e868 <big2_scanLt+0x1e8>
    eac4:	sub	r3, r5, r7
    eac8:	cmp	r3, #3
    eacc:	bge	ead8 <big2_scanLt+0x458>
    ead0:	mvn	r0, #1
    ead4:	b	eecc <big2_scanLt+0x84c>
    ead8:	mov	r1, #1
    eadc:	cmp	r1, #0
    eae0:	beq	eaf0 <big2_scanLt+0x470>
    eae4:	str	r7, [r4]
    eae8:	mov	r0, #0
    eaec:	b	eecc <big2_scanLt+0x84c>
    eaf0:	add	r7, r7, #3
    eaf4:	b	e868 <big2_scanLt+0x1e8>
    eaf8:	sub	r1, r5, r7
    eafc:	cmp	r1, #2
    eb00:	bge	eb0c <big2_scanLt+0x48c>
    eb04:	mvn	r0, #1
    eb08:	b	eecc <big2_scanLt+0x84c>
    eb0c:	mov	r3, #1
    eb10:	cmp	r3, #0
    eb14:	beq	eb24 <big2_scanLt+0x4a4>
    eb18:	str	r7, [r4]
    eb1c:	mov	r0, #0
    eb20:	b	eecc <big2_scanLt+0x84c>
    eb24:	add	r7, r7, #2
    eb28:	b	e868 <big2_scanLt+0x1e8>
    eb2c:	cmp	r0, #22
    eb30:	beq	eba0 <big2_scanLt+0x520>
    eb34:	cmp	r0, #24
    eb38:	beq	eba0 <big2_scanLt+0x520>
    eb3c:	cmp	r0, #29
    eb40:	bne	eb94 <big2_scanLt+0x514>
    eb44:	ldr	r9, [pc, #932]	; eef0 <big2_scanLt+0x870>
    eb48:	ldrb	ip, [r7, #1]
    eb4c:	and	r0, ip, #255	; 0xff
    eb50:	asr	r1, r0, #5
    eb54:	ldr	ip, [pc, #920]	; eef4 <big2_scanLt+0x874>
    eb58:	ldrb	r3, [r7]
    eb5c:	and	r0, r3, #255	; 0xff
    eb60:	ldrb	r2, [ip, r0]
    eb64:	add	r1, r1, r2, lsl #3
    eb68:	ldr	ip, [r9, r1, lsl #2]
    eb6c:	mov	r3, #1
    eb70:	ldrb	r2, [r7, #1]
    eb74:	and	r2, r2, #31
    eb78:	lsl	r2, r3, r2
    eb7c:	and	ip, ip, r2
    eb80:	cmp	ip, #0
    eb84:	bne	eba0 <big2_scanLt+0x520>
    eb88:	str	r7, [r4]
    eb8c:	mov	r0, #0
    eb90:	b	eecc <big2_scanLt+0x84c>
    eb94:	str	r7, [r4]
    eb98:	mov	r0, #0
    eb9c:	b	eecc <big2_scanLt+0x84c>
    eba0:	add	r7, r7, #2
    eba4:	b	e868 <big2_scanLt+0x1e8>
    eba8:	add	r7, r7, #2
    ebac:	cmp	r7, r5
    ebb0:	beq	ed78 <big2_scanLt+0x6f8>
    ebb4:	ldrb	r3, [r7]
    ebb8:	cmp	r3, #0
    ebbc:	beq	ebd8 <big2_scanLt+0x558>
    ebc0:	ldrb	ip, [r7]
    ebc4:	and	r0, ip, #255	; 0xff
    ebc8:	ldrb	r1, [r7, #1]
    ebcc:	and	r1, r1, #255	; 0xff
    ebd0:	bl	5988 <unicode_byte_type>
    ebd4:	b	ebe8 <big2_scanLt+0x568>
    ebd8:	ldrb	r0, [r7, #1]
    ebdc:	and	r1, r0, #255	; 0xff
    ebe0:	add	r2, r6, r1
    ebe4:	ldrb	r0, [r2, #76]	; 0x4c
    ebe8:	sub	ip, r0, #5
    ebec:	cmp	ip, #25
    ebf0:	bcs	ed6c <big2_scanLt+0x6ec>
    ebf4:	add	pc, pc, ip, lsl #2
    ebf8:	nop	{0}
    ebfc:	b	ecb8 <big2_scanLt+0x638>
    ec00:	b	ecec <big2_scanLt+0x66c>
    ec04:	b	ed20 <big2_scanLt+0x6a0>
    ec08:	b	ed6c <big2_scanLt+0x6ec>
    ec0c:	b	ed64 <big2_scanLt+0x6e4>
    ec10:	b	ed64 <big2_scanLt+0x6e4>
    ec14:	b	ed80 <big2_scanLt+0x700>
    ec18:	b	ed6c <big2_scanLt+0x6ec>
    ec1c:	b	ed6c <big2_scanLt+0x6ec>
    ec20:	b	ed6c <big2_scanLt+0x6ec>
    ec24:	b	ed6c <big2_scanLt+0x6ec>
    ec28:	b	ed6c <big2_scanLt+0x6ec>
    ec2c:	b	ed90 <big2_scanLt+0x710>
    ec30:	b	ed6c <big2_scanLt+0x6ec>
    ec34:	b	ed6c <big2_scanLt+0x6ec>
    ec38:	b	ed6c <big2_scanLt+0x6ec>
    ec3c:	b	ed64 <big2_scanLt+0x6e4>
    ec40:	b	ecb0 <big2_scanLt+0x630>
    ec44:	b	ed6c <big2_scanLt+0x6ec>
    ec48:	b	ecb0 <big2_scanLt+0x630>
    ec4c:	b	ed6c <big2_scanLt+0x6ec>
    ec50:	b	ed6c <big2_scanLt+0x6ec>
    ec54:	b	ed6c <big2_scanLt+0x6ec>
    ec58:	b	ed6c <big2_scanLt+0x6ec>
    ec5c:	b	ec60 <big2_scanLt+0x5e0>
    ec60:	ldr	ip, [pc, #648]	; eef0 <big2_scanLt+0x870>
    ec64:	ldrb	r3, [r7, #1]
    ec68:	and	r1, r3, #255	; 0xff
    ec6c:	asr	r2, r1, #5
    ec70:	ldr	r0, [pc, #636]	; eef4 <big2_scanLt+0x874>
    ec74:	ldrb	r1, [r7]
    ec78:	and	r3, r1, #255	; 0xff
    ec7c:	ldrb	r1, [r0, r3]
    ec80:	add	r2, r2, r1, lsl #3
    ec84:	ldr	ip, [ip, r2, lsl #2]
    ec88:	mov	r2, #1
    ec8c:	ldrb	r3, [r7, #1]
    ec90:	and	r0, r3, #31
    ec94:	lsl	r2, r2, r0
    ec98:	and	r2, ip, r2
    ec9c:	cmp	r2, #0
    eca0:	bne	ecb0 <big2_scanLt+0x630>
    eca4:	str	r7, [r4]
    eca8:	mov	r0, #0
    ecac:	b	eecc <big2_scanLt+0x84c>
    ecb0:	add	r1, r7, #2
    ecb4:	b	ed50 <big2_scanLt+0x6d0>
    ecb8:	sub	r1, r5, r7
    ecbc:	cmp	r1, #2
    ecc0:	bge	eccc <big2_scanLt+0x64c>
    ecc4:	mvn	r0, #1
    ecc8:	b	eecc <big2_scanLt+0x84c>
    eccc:	mov	ip, #1
    ecd0:	cmp	ip, #0
    ecd4:	beq	ece4 <big2_scanLt+0x664>
    ecd8:	str	r7, [r4]
    ecdc:	mov	r0, #0
    ece0:	b	eecc <big2_scanLt+0x84c>
    ece4:	add	r1, r7, #2
    ece8:	b	ed50 <big2_scanLt+0x6d0>
    ecec:	sub	r1, r5, r7
    ecf0:	cmp	r1, #3
    ecf4:	bge	ed00 <big2_scanLt+0x680>
    ecf8:	mvn	r0, #1
    ecfc:	b	eecc <big2_scanLt+0x84c>
    ed00:	mov	r2, #1
    ed04:	cmp	r2, #0
    ed08:	beq	ed18 <big2_scanLt+0x698>
    ed0c:	str	r7, [r4]
    ed10:	mov	r0, #0
    ed14:	b	eecc <big2_scanLt+0x84c>
    ed18:	add	r1, r7, #3
    ed1c:	b	ed50 <big2_scanLt+0x6d0>
    ed20:	sub	r0, r5, r7
    ed24:	cmp	r0, #4
    ed28:	bge	ed34 <big2_scanLt+0x6b4>
    ed2c:	mvn	r0, #1
    ed30:	b	eecc <big2_scanLt+0x84c>
    ed34:	mov	ip, #1
    ed38:	cmp	ip, #0
    ed3c:	beq	ed4c <big2_scanLt+0x6cc>
    ed40:	str	r7, [r4]
    ed44:	mov	r0, #0
    ed48:	b	eecc <big2_scanLt+0x84c>
    ed4c:	add	r1, r7, #4
    ed50:	mov	r3, r4
    ed54:	mov	r2, r5
    ed58:	mov	r0, r6
    ed5c:	bl	db88 <big2_scanAtts>
    ed60:	b	eecc <big2_scanLt+0x84c>
    ed64:	add	r7, r7, #2
    ed68:	b	ebac <big2_scanLt+0x52c>
    ed6c:	str	r7, [r4]
    ed70:	mov	r0, #0
    ed74:	b	eecc <big2_scanLt+0x84c>
    ed78:	mvn	r0, #0
    ed7c:	b	eecc <big2_scanLt+0x84c>
    ed80:	add	r1, r7, #2
    ed84:	str	r1, [r4]
    ed88:	mov	r0, #2
    ed8c:	b	eecc <big2_scanLt+0x84c>
    ed90:	add	r2, r7, #2
    ed94:	cmp	r2, r5
    ed98:	bne	eda4 <big2_scanLt+0x724>
    ed9c:	mvn	r0, #0
    eda0:	b	eecc <big2_scanLt+0x84c>
    eda4:	ldrb	r3, [r2]
    eda8:	cmp	r3, #0
    edac:	bne	edc4 <big2_scanLt+0x744>
    edb0:	ldrb	r1, [r2, #1]
    edb4:	cmp	r1, #62	; 0x3e
    edb8:	moveq	r3, #1
    edbc:	movne	r3, #0
    edc0:	b	edc8 <big2_scanLt+0x748>
    edc4:	mov	r3, #0
    edc8:	cmp	r3, #0
    edcc:	bne	eddc <big2_scanLt+0x75c>
    edd0:	str	r2, [r4]
    edd4:	mov	r0, #0
    edd8:	b	eecc <big2_scanLt+0x84c>
    eddc:	add	r1, r2, #2
    ede0:	str	r1, [r4]
    ede4:	mov	r0, #4
    ede8:	b	eecc <big2_scanLt+0x84c>
    edec:	str	r7, [r4]
    edf0:	mov	r0, #0
    edf4:	b	eecc <big2_scanLt+0x84c>
    edf8:	mvn	r0, #0
    edfc:	b	eecc <big2_scanLt+0x84c>
    ee00:	add	r7, r7, #2
    ee04:	cmp	r7, r5
    ee08:	bne	ee14 <big2_scanLt+0x794>
    ee0c:	mvn	r0, #0
    ee10:	b	eecc <big2_scanLt+0x84c>
    ee14:	ldrb	r0, [r7]
    ee18:	cmp	r0, #0
    ee1c:	beq	ee38 <big2_scanLt+0x7b8>
    ee20:	ldrb	r1, [r7]
    ee24:	and	r0, r1, #255	; 0xff
    ee28:	ldrb	r1, [r7, #1]
    ee2c:	and	r1, r1, #255	; 0xff
    ee30:	bl	5988 <unicode_byte_type>
    ee34:	b	ee48 <big2_scanLt+0x7c8>
    ee38:	ldrb	r3, [r7, #1]
    ee3c:	and	r1, r3, #255	; 0xff
    ee40:	add	r0, r6, r1
    ee44:	ldrb	r0, [r0, #76]	; 0x4c
    ee48:	cmp	r0, #20
    ee4c:	beq	ee7c <big2_scanLt+0x7fc>
    ee50:	cmp	r0, #27
    ee54:	bne	ee70 <big2_scanLt+0x7f0>
    ee58:	add	r1, r7, #2
    ee5c:	mov	r3, r4
    ee60:	mov	r2, r5
    ee64:	mov	r0, r6
    ee68:	bl	c14c <big2_scanComment>
    ee6c:	b	eecc <big2_scanLt+0x84c>
    ee70:	str	r7, [r4]
    ee74:	mov	r0, #0
    ee78:	b	eecc <big2_scanLt+0x84c>
    ee7c:	add	r1, r7, #2
    ee80:	mov	r3, r4
    ee84:	mov	r2, r5
    ee88:	mov	r0, r6
    ee8c:	bl	cc88 <big2_scanCdataSection>
    ee90:	b	eecc <big2_scanLt+0x84c>
    ee94:	add	r1, r7, #2
    ee98:	mov	r3, r4
    ee9c:	mov	r2, r5
    eea0:	mov	r0, r6
    eea4:	bl	c6b8 <big2_scanPi>
    eea8:	b	eecc <big2_scanLt+0x84c>
    eeac:	add	r1, r7, #2
    eeb0:	mov	r3, r4
    eeb4:	mov	r2, r5
    eeb8:	mov	r0, r6
    eebc:	bl	d108 <big2_scanEndTag>
    eec0:	b	eecc <big2_scanLt+0x84c>
    eec4:	str	r7, [r4]
    eec8:	mov	r0, #0
    eecc:	ldr	r4, [sp, #8]
    eed0:	ldr	r5, [sp, #12]
    eed4:	ldr	r6, [sp, #16]
    eed8:	ldr	r7, [sp, #20]
    eedc:	ldr	r8, [sp, #24]
    eee0:	ldr	r9, [sp, #28]
    eee4:	ldr	lr, [sp, #4]
    eee8:	add	sp, sp, #32
    eeec:	bx	lr
    eef0:	.word	0x00000000
    eef4:	.word	0x00000500
    eef8:	.word	0x00000600

0000eefc <big2_contentTok>:
    eefc:	mov	ip, sp
    ef00:	sub	sp, sp, #24
    ef04:	str	ip, [sp]
    ef08:	str	lr, [sp, #4]
    ef0c:	str	r4, [sp, #8]
    ef10:	str	r5, [sp, #12]
    ef14:	str	r6, [sp, #16]
    ef18:	str	r7, [sp, #20]
    ef1c:	mov	r4, r3
    ef20:	mov	r5, r2
    ef24:	mov	r7, r1
    ef28:	mov	r6, r0
    ef2c:	cmp	r7, r5
    ef30:	bne	ef3c <big2_contentTok+0x40>
    ef34:	mvn	r0, #3
    ef38:	b	f380 <big2_contentTok+0x484>
    ef3c:	mov	r0, #1
    ef40:	cmp	r0, #0
    ef44:	beq	ef70 <big2_contentTok+0x74>
    ef48:	sub	r1, r5, r7
    ef4c:	and	r2, r1, #1
    ef50:	cmp	r2, #0
    ef54:	beq	ef70 <big2_contentTok+0x74>
    ef58:	bic	r2, r1, #1
    ef5c:	cmp	r2, #0
    ef60:	bne	ef6c <big2_contentTok+0x70>
    ef64:	mvn	r0, #0
    ef68:	b	f380 <big2_contentTok+0x484>
    ef6c:	add	r5, r7, r2
    ef70:	ldrb	r0, [r7]
    ef74:	cmp	r0, #0
    ef78:	beq	ef94 <big2_contentTok+0x98>
    ef7c:	ldrb	ip, [r7]
    ef80:	and	r0, ip, #255	; 0xff
    ef84:	ldrb	ip, [r7, #1]
    ef88:	and	r1, ip, #255	; 0xff
    ef8c:	bl	5988 <unicode_byte_type>
    ef90:	b	efa4 <big2_contentTok+0xa8>
    ef94:	ldrb	r1, [r7, #1]
    ef98:	and	r1, r1, #255	; 0xff
    ef9c:	add	r3, r6, r1
    efa0:	ldrb	r0, [r3, #76]	; 0x4c
    efa4:	cmp	r0, #11
    efa8:	bcs	f1bc <big2_contentTok+0x2c0>
    efac:	add	pc, pc, r0, lsl #2
    efb0:	nop	{0}
    efb4:	b	f1b0 <big2_contentTok+0x2b4>
    efb8:	b	f1b0 <big2_contentTok+0x2b4>
    efbc:	b	efe0 <big2_contentTok+0xe4>
    efc0:	b	eff8 <big2_contentTok+0xfc>
    efc4:	b	f080 <big2_contentTok+0x184>
    efc8:	b	f114 <big2_contentTok+0x218>
    efcc:	b	f148 <big2_contentTok+0x24c>
    efd0:	b	f17c <big2_contentTok+0x280>
    efd4:	b	f1b0 <big2_contentTok+0x2b4>
    efd8:	b	f010 <big2_contentTok+0x114>
    efdc:	b	f070 <big2_contentTok+0x174>
    efe0:	add	r1, r7, #2
    efe4:	mov	r3, r4
    efe8:	mov	r2, r5
    efec:	mov	r0, r6
    eff0:	bl	e680 <big2_scanLt>
    eff4:	b	f380 <big2_contentTok+0x484>
    eff8:	add	r1, r7, #2
    effc:	mov	r3, r4
    f000:	mov	r2, r5
    f004:	mov	r0, r6
    f008:	bl	d7bc <big2_scanRef>
    f00c:	b	f380 <big2_contentTok+0x484>
    f010:	add	r7, r7, #2
    f014:	cmp	r7, r5
    f018:	bne	f024 <big2_contentTok+0x128>
    f01c:	mvn	r0, #2
    f020:	b	f380 <big2_contentTok+0x484>
    f024:	ldrb	r3, [r7]
    f028:	cmp	r3, #0
    f02c:	beq	f048 <big2_contentTok+0x14c>
    f030:	ldrb	r3, [r7]
    f034:	and	r0, r3, #255	; 0xff
    f038:	ldrb	r1, [r7, #1]
    f03c:	and	r1, r1, #255	; 0xff
    f040:	bl	5988 <unicode_byte_type>
    f044:	b	f058 <big2_contentTok+0x15c>
    f048:	ldrb	r1, [r7, #1]
    f04c:	and	r2, r1, #255	; 0xff
    f050:	add	ip, r6, r2
    f054:	ldrb	r0, [ip, #76]	; 0x4c
    f058:	cmp	r0, #10
    f05c:	bne	f064 <big2_contentTok+0x168>
    f060:	add	r7, r7, #2
    f064:	str	r7, [r4]
    f068:	mov	r0, #7
    f06c:	b	f380 <big2_contentTok+0x484>
    f070:	add	r1, r7, #2
    f074:	str	r1, [r4]
    f078:	mov	r0, #7
    f07c:	b	f380 <big2_contentTok+0x484>
    f080:	add	r7, r7, #2
    f084:	cmp	r7, r5
    f088:	bne	f094 <big2_contentTok+0x198>
    f08c:	mvn	r0, #4
    f090:	b	f380 <big2_contentTok+0x484>
    f094:	ldrb	r0, [r7]
    f098:	cmp	r0, #0
    f09c:	bne	f0b4 <big2_contentTok+0x1b8>
    f0a0:	ldrb	r2, [r7, #1]
    f0a4:	cmp	r2, #93	; 0x5d
    f0a8:	moveq	r3, #1
    f0ac:	movne	r3, #0
    f0b0:	b	f0b8 <big2_contentTok+0x1bc>
    f0b4:	mov	r3, #0
    f0b8:	cmp	r3, #0
    f0bc:	beq	f1c0 <big2_contentTok+0x2c4>
    f0c0:	add	ip, r7, #2
    f0c4:	cmp	ip, r5
    f0c8:	bne	f0d4 <big2_contentTok+0x1d8>
    f0cc:	mvn	r0, #4
    f0d0:	b	f380 <big2_contentTok+0x484>
    f0d4:	ldrb	r3, [ip]
    f0d8:	cmp	r3, #0
    f0dc:	bne	f0f4 <big2_contentTok+0x1f8>
    f0e0:	ldrb	r1, [ip, #1]
    f0e4:	cmp	r1, #62	; 0x3e
    f0e8:	moveq	r2, #1
    f0ec:	movne	r2, #0
    f0f0:	b	f0f8 <big2_contentTok+0x1fc>
    f0f4:	mov	r2, #0
    f0f8:	cmp	r2, #0
    f0fc:	bne	f108 <big2_contentTok+0x20c>
    f100:	sub	r7, ip, #2
    f104:	b	f1c0 <big2_contentTok+0x2c4>
    f108:	str	ip, [r4]
    f10c:	mov	r0, #0
    f110:	b	f380 <big2_contentTok+0x484>
    f114:	sub	r3, r5, r7
    f118:	cmp	r3, #2
    f11c:	bge	f128 <big2_contentTok+0x22c>
    f120:	mvn	r0, #1
    f124:	b	f380 <big2_contentTok+0x484>
    f128:	mov	r1, #0
    f12c:	cmp	r1, #0
    f130:	beq	f140 <big2_contentTok+0x244>
    f134:	str	r7, [r4]
    f138:	mov	r0, #0
    f13c:	b	f380 <big2_contentTok+0x484>
    f140:	add	r7, r7, #2
    f144:	b	f1c0 <big2_contentTok+0x2c4>
    f148:	sub	r1, r5, r7
    f14c:	cmp	r1, #3
    f150:	bge	f15c <big2_contentTok+0x260>
    f154:	mvn	r0, #1
    f158:	b	f380 <big2_contentTok+0x484>
    f15c:	mov	r1, #0
    f160:	cmp	r1, #0
    f164:	beq	f174 <big2_contentTok+0x278>
    f168:	str	r7, [r4]
    f16c:	mov	r0, #0
    f170:	b	f380 <big2_contentTok+0x484>
    f174:	add	r7, r7, #3
    f178:	b	f1c0 <big2_contentTok+0x2c4>
    f17c:	sub	ip, r5, r7
    f180:	cmp	ip, #4
    f184:	bge	f190 <big2_contentTok+0x294>
    f188:	mvn	r0, #1
    f18c:	b	f380 <big2_contentTok+0x484>
    f190:	mov	ip, #0
    f194:	cmp	ip, #0
    f198:	beq	f1a8 <big2_contentTok+0x2ac>
    f19c:	str	r7, [r4]
    f1a0:	mov	r0, #0
    f1a4:	b	f380 <big2_contentTok+0x484>
    f1a8:	add	r7, r7, #4
    f1ac:	b	f1c0 <big2_contentTok+0x2c4>
    f1b0:	str	r7, [r4]
    f1b4:	mov	r0, #0
    f1b8:	b	f380 <big2_contentTok+0x484>
    f1bc:	add	r7, r7, #2
    f1c0:	cmp	r7, r5
    f1c4:	beq	f378 <big2_contentTok+0x47c>
    f1c8:	ldrb	ip, [r7]
    f1cc:	cmp	ip, #0
    f1d0:	beq	f1ec <big2_contentTok+0x2f0>
    f1d4:	ldrb	r2, [r7]
    f1d8:	and	r0, r2, #255	; 0xff
    f1dc:	ldrb	r1, [r7, #1]
    f1e0:	and	r1, r1, #255	; 0xff
    f1e4:	bl	5988 <unicode_byte_type>
    f1e8:	b	f1fc <big2_contentTok+0x300>
    f1ec:	ldrb	r1, [r7, #1]
    f1f0:	and	r3, r1, #255	; 0xff
    f1f4:	add	r0, r6, r3
    f1f8:	ldrb	r0, [r0, #76]	; 0x4c
    f1fc:	cmp	r0, #11
    f200:	bcs	f370 <big2_contentTok+0x474>
    f204:	add	pc, pc, r0, lsl #2
    f208:	nop	{0}
    f20c:	b	f364 <big2_contentTok+0x468>
    f210:	b	f364 <big2_contentTok+0x468>
    f214:	b	f364 <big2_contentTok+0x468>
    f218:	b	f364 <big2_contentTok+0x468>
    f21c:	b	f2d4 <big2_contentTok+0x3d8>
    f220:	b	f238 <big2_contentTok+0x33c>
    f224:	b	f26c <big2_contentTok+0x370>
    f228:	b	f2a0 <big2_contentTok+0x3a4>
    f22c:	b	f364 <big2_contentTok+0x468>
    f230:	b	f364 <big2_contentTok+0x468>
    f234:	b	f364 <big2_contentTok+0x468>
    f238:	sub	r2, r5, r7
    f23c:	cmp	r2, #2
    f240:	blt	f24c <big2_contentTok+0x350>
    f244:	mov	ip, #0
    f248:	b	f250 <big2_contentTok+0x354>
    f24c:	mov	ip, #1
    f250:	cmp	ip, #0
    f254:	beq	f264 <big2_contentTok+0x368>
    f258:	str	r7, [r4]
    f25c:	mov	r0, #6
    f260:	b	f380 <big2_contentTok+0x484>
    f264:	add	r7, r7, #2
    f268:	b	f1c0 <big2_contentTok+0x2c4>
    f26c:	sub	r0, r5, r7
    f270:	cmp	r0, #3
    f274:	blt	f280 <big2_contentTok+0x384>
    f278:	mov	r3, #0
    f27c:	b	f284 <big2_contentTok+0x388>
    f280:	mov	r3, #1
    f284:	cmp	r3, #0
    f288:	beq	f298 <big2_contentTok+0x39c>
    f28c:	str	r7, [r4]
    f290:	mov	r0, #6
    f294:	b	f380 <big2_contentTok+0x484>
    f298:	add	r7, r7, #3
    f29c:	b	f1c0 <big2_contentTok+0x2c4>
    f2a0:	sub	ip, r5, r7
    f2a4:	cmp	ip, #4
    f2a8:	blt	f2b4 <big2_contentTok+0x3b8>
    f2ac:	mov	r0, #0
    f2b0:	b	f2b8 <big2_contentTok+0x3bc>
    f2b4:	mov	r0, #1
    f2b8:	cmp	r0, #0
    f2bc:	beq	f2cc <big2_contentTok+0x3d0>
    f2c0:	str	r7, [r4]
    f2c4:	mov	r0, #6
    f2c8:	b	f380 <big2_contentTok+0x484>
    f2cc:	add	r7, r7, #4
    f2d0:	b	f1c0 <big2_contentTok+0x2c4>
    f2d4:	add	r2, r7, #2
    f2d8:	cmp	r2, r5
    f2dc:	beq	f364 <big2_contentTok+0x468>
    f2e0:	ldrb	ip, [r7, #2]
    f2e4:	cmp	ip, #0
    f2e8:	bne	f300 <big2_contentTok+0x404>
    f2ec:	ldrb	ip, [r7, #3]
    f2f0:	cmp	ip, #93	; 0x5d
    f2f4:	moveq	r0, #1
    f2f8:	movne	r0, #0
    f2fc:	b	f304 <big2_contentTok+0x408>
    f300:	mov	r0, #0
    f304:	cmp	r0, #0
    f308:	bne	f314 <big2_contentTok+0x418>
    f30c:	add	r7, r7, #2
    f310:	b	f1c0 <big2_contentTok+0x2c4>
    f314:	add	r1, r7, #4
    f318:	cmp	r1, r5
    f31c:	beq	f364 <big2_contentTok+0x468>
    f320:	ldrb	r3, [r7, #4]
    f324:	cmp	r3, #0
    f328:	bne	f340 <big2_contentTok+0x444>
    f32c:	ldrb	r2, [r7, #5]
    f330:	cmp	r2, #62	; 0x3e
    f334:	moveq	r2, #1
    f338:	movne	r2, #0
    f33c:	b	f344 <big2_contentTok+0x448>
    f340:	mov	r2, #0
    f344:	cmp	r2, #0
    f348:	bne	f354 <big2_contentTok+0x458>
    f34c:	add	r7, r7, #2
    f350:	b	f1c0 <big2_contentTok+0x2c4>
    f354:	add	r2, r7, #4
    f358:	str	r2, [r4]
    f35c:	mov	r0, #0
    f360:	b	f380 <big2_contentTok+0x484>
    f364:	str	r7, [r4]
    f368:	mov	r0, #6
    f36c:	b	f380 <big2_contentTok+0x484>
    f370:	add	r7, r7, #2
    f374:	b	f1c0 <big2_contentTok+0x2c4>
    f378:	str	r7, [r4]
    f37c:	mov	r0, #6
    f380:	ldr	r4, [sp, #8]
    f384:	ldr	r5, [sp, #12]
    f388:	ldr	r6, [sp, #16]
    f38c:	ldr	r7, [sp, #20]
    f390:	ldr	lr, [sp, #4]
    f394:	add	sp, sp, #24
    f398:	bx	lr

0000f39c <big2_scanPercent>:
    f39c:	mov	ip, sp
    f3a0:	sub	sp, sp, #24
    f3a4:	str	ip, [sp]
    f3a8:	str	lr, [sp, #4]
    f3ac:	str	r4, [sp, #8]
    f3b0:	str	r5, [sp, #12]
    f3b4:	str	r6, [sp, #16]
    f3b8:	str	r7, [sp, #20]
    f3bc:	mov	r4, r3
    f3c0:	mov	r6, r2
    f3c4:	mov	r7, r1
    f3c8:	mov	r5, r0
    f3cc:	cmp	r7, r6
    f3d0:	bne	f3dc <big2_scanPercent+0x40>
    f3d4:	mvn	r0, #0
    f3d8:	b	f75c <big2_scanPercent+0x3c0>
    f3dc:	ldrb	ip, [r7]
    f3e0:	cmp	ip, #0
    f3e4:	beq	f400 <big2_scanPercent+0x64>
    f3e8:	ldrb	r1, [r7]
    f3ec:	and	r0, r1, #255	; 0xff
    f3f0:	ldrb	r1, [r7, #1]
    f3f4:	and	r1, r1, #255	; 0xff
    f3f8:	bl	5988 <unicode_byte_type>
    f3fc:	b	f410 <big2_scanPercent+0x74>
    f400:	ldrb	r2, [r7, #1]
    f404:	and	r2, r2, #255	; 0xff
    f408:	add	ip, r5, r2
    f40c:	ldrb	r0, [ip, #76]	; 0x4c
    f410:	sub	r2, r0, #5
    f414:	cmp	r2, #26
    f418:	bcs	f754 <big2_scanPercent+0x3b8>
    f41c:	add	pc, pc, r2, lsl #2
    f420:	nop	{0}
    f424:	b	f4e4 <big2_scanPercent+0x148>
    f428:	b	f518 <big2_scanPercent+0x17c>
    f42c:	b	f54c <big2_scanPercent+0x1b0>
    f430:	b	f754 <big2_scanPercent+0x3b8>
    f434:	b	f748 <big2_scanPercent+0x3ac>
    f438:	b	f748 <big2_scanPercent+0x3ac>
    f43c:	b	f754 <big2_scanPercent+0x3b8>
    f440:	b	f754 <big2_scanPercent+0x3b8>
    f444:	b	f754 <big2_scanPercent+0x3b8>
    f448:	b	f754 <big2_scanPercent+0x3b8>
    f44c:	b	f754 <big2_scanPercent+0x3b8>
    f450:	b	f754 <big2_scanPercent+0x3b8>
    f454:	b	f754 <big2_scanPercent+0x3b8>
    f458:	b	f754 <big2_scanPercent+0x3b8>
    f45c:	b	f754 <big2_scanPercent+0x3b8>
    f460:	b	f754 <big2_scanPercent+0x3b8>
    f464:	b	f748 <big2_scanPercent+0x3ac>
    f468:	b	f4dc <big2_scanPercent+0x140>
    f46c:	b	f754 <big2_scanPercent+0x3b8>
    f470:	b	f4dc <big2_scanPercent+0x140>
    f474:	b	f754 <big2_scanPercent+0x3b8>
    f478:	b	f754 <big2_scanPercent+0x3b8>
    f47c:	b	f754 <big2_scanPercent+0x3b8>
    f480:	b	f754 <big2_scanPercent+0x3b8>
    f484:	b	f48c <big2_scanPercent+0xf0>
    f488:	b	f748 <big2_scanPercent+0x3ac>
    f48c:	ldr	r1, [pc, #740]	; f778 <big2_scanPercent+0x3dc>
    f490:	ldrb	r3, [r7, #1]
    f494:	and	r2, r3, #255	; 0xff
    f498:	asr	r2, r2, #5
    f49c:	ldr	r3, [pc, #728]	; f77c <big2_scanPercent+0x3e0>
    f4a0:	ldrb	ip, [r7]
    f4a4:	and	r0, ip, #255	; 0xff
    f4a8:	ldrb	ip, [r3, r0]
    f4ac:	add	ip, r2, ip, lsl #3
    f4b0:	ldr	r1, [r1, ip, lsl #2]
    f4b4:	mov	r3, #1
    f4b8:	ldrb	r2, [r7, #1]
    f4bc:	and	r2, r2, #31
    f4c0:	lsl	r0, r3, r2
    f4c4:	and	r0, r1, r0
    f4c8:	cmp	r0, #0
    f4cc:	bne	f4dc <big2_scanPercent+0x140>
    f4d0:	str	r7, [r4]
    f4d4:	mov	r0, #0
    f4d8:	b	f75c <big2_scanPercent+0x3c0>
    f4dc:	add	r7, r7, #2
    f4e0:	b	f57c <big2_scanPercent+0x1e0>
    f4e4:	sub	r3, r6, r7
    f4e8:	cmp	r3, #2
    f4ec:	bge	f4f8 <big2_scanPercent+0x15c>
    f4f0:	mvn	r0, #1
    f4f4:	b	f75c <big2_scanPercent+0x3c0>
    f4f8:	mov	r3, #1
    f4fc:	cmp	r3, #0
    f500:	beq	f510 <big2_scanPercent+0x174>
    f504:	str	r7, [r4]
    f508:	mov	r0, #0
    f50c:	b	f75c <big2_scanPercent+0x3c0>
    f510:	add	r7, r7, #2
    f514:	b	f57c <big2_scanPercent+0x1e0>
    f518:	sub	ip, r6, r7
    f51c:	cmp	ip, #3
    f520:	bge	f52c <big2_scanPercent+0x190>
    f524:	mvn	r0, #1
    f528:	b	f75c <big2_scanPercent+0x3c0>
    f52c:	mov	r3, #1
    f530:	cmp	r3, #0
    f534:	beq	f544 <big2_scanPercent+0x1a8>
    f538:	str	r7, [r4]
    f53c:	mov	r0, #0
    f540:	b	f75c <big2_scanPercent+0x3c0>
    f544:	add	r7, r7, #3
    f548:	b	f57c <big2_scanPercent+0x1e0>
    f54c:	sub	r1, r6, r7
    f550:	cmp	r1, #4
    f554:	bge	f560 <big2_scanPercent+0x1c4>
    f558:	mvn	r0, #1
    f55c:	b	f75c <big2_scanPercent+0x3c0>
    f560:	mov	r3, #1
    f564:	cmp	r3, #0
    f568:	beq	f578 <big2_scanPercent+0x1dc>
    f56c:	str	r7, [r4]
    f570:	mov	r0, #0
    f574:	b	f75c <big2_scanPercent+0x3c0>
    f578:	add	r7, r7, #4
    f57c:	cmp	r7, r6
    f580:	beq	f740 <big2_scanPercent+0x3a4>
    f584:	ldrb	r2, [r7]
    f588:	cmp	r2, #0
    f58c:	beq	f5a8 <big2_scanPercent+0x20c>
    f590:	ldrb	r1, [r7]
    f594:	and	r0, r1, #255	; 0xff
    f598:	ldrb	r2, [r7, #1]
    f59c:	and	r1, r2, #255	; 0xff
    f5a0:	bl	5988 <unicode_byte_type>
    f5a4:	b	f5b8 <big2_scanPercent+0x21c>
    f5a8:	ldrb	r0, [r7, #1]
    f5ac:	and	r0, r0, #255	; 0xff
    f5b0:	add	r0, r5, r0
    f5b4:	ldrb	r0, [r0, #76]	; 0x4c
    f5b8:	sub	r2, r0, #5
    f5bc:	cmp	r2, #25
    f5c0:	bcs	f734 <big2_scanPercent+0x398>
    f5c4:	add	pc, pc, r2, lsl #2
    f5c8:	nop	{0}
    f5cc:	b	f688 <big2_scanPercent+0x2ec>
    f5d0:	b	f6bc <big2_scanPercent+0x320>
    f5d4:	b	f6f0 <big2_scanPercent+0x354>
    f5d8:	b	f734 <big2_scanPercent+0x398>
    f5dc:	b	f734 <big2_scanPercent+0x398>
    f5e0:	b	f734 <big2_scanPercent+0x398>
    f5e4:	b	f734 <big2_scanPercent+0x398>
    f5e8:	b	f734 <big2_scanPercent+0x398>
    f5ec:	b	f734 <big2_scanPercent+0x398>
    f5f0:	b	f734 <big2_scanPercent+0x398>
    f5f4:	b	f734 <big2_scanPercent+0x398>
    f5f8:	b	f734 <big2_scanPercent+0x398>
    f5fc:	b	f734 <big2_scanPercent+0x398>
    f600:	b	f724 <big2_scanPercent+0x388>
    f604:	b	f734 <big2_scanPercent+0x398>
    f608:	b	f734 <big2_scanPercent+0x398>
    f60c:	b	f734 <big2_scanPercent+0x398>
    f610:	b	f680 <big2_scanPercent+0x2e4>
    f614:	b	f734 <big2_scanPercent+0x398>
    f618:	b	f680 <big2_scanPercent+0x2e4>
    f61c:	b	f680 <big2_scanPercent+0x2e4>
    f620:	b	f680 <big2_scanPercent+0x2e4>
    f624:	b	f680 <big2_scanPercent+0x2e4>
    f628:	b	f734 <big2_scanPercent+0x398>
    f62c:	b	f630 <big2_scanPercent+0x294>
    f630:	ldr	ip, [pc, #320]	; f778 <big2_scanPercent+0x3dc>
    f634:	ldrb	r1, [r7, #1]
    f638:	and	r0, r1, #255	; 0xff
    f63c:	asr	r3, r0, #5
    f640:	ldr	r1, [pc, #312]	; f780 <big2_scanPercent+0x3e4>
    f644:	ldrb	r0, [r7]
    f648:	and	r0, r0, #255	; 0xff
    f64c:	ldrb	r2, [r1, r0]
    f650:	add	r3, r3, r2, lsl #3
    f654:	ldr	r1, [ip, r3, lsl #2]
    f658:	mov	r2, #1
    f65c:	ldrb	r3, [r7, #1]
    f660:	and	r3, r3, #31
    f664:	lsl	r0, r2, r3
    f668:	and	r0, r1, r0
    f66c:	cmp	r0, #0
    f670:	bne	f680 <big2_scanPercent+0x2e4>
    f674:	str	r7, [r4]
    f678:	mov	r0, #0
    f67c:	b	f75c <big2_scanPercent+0x3c0>
    f680:	add	r7, r7, #2
    f684:	b	f57c <big2_scanPercent+0x1e0>
    f688:	sub	r3, r6, r7
    f68c:	cmp	r3, #2
    f690:	bge	f69c <big2_scanPercent+0x300>
    f694:	mvn	r0, #1
    f698:	b	f75c <big2_scanPercent+0x3c0>
    f69c:	mov	r2, #1
    f6a0:	cmp	r2, #0
    f6a4:	beq	f6b4 <big2_scanPercent+0x318>
    f6a8:	str	r7, [r4]
    f6ac:	mov	r0, #0
    f6b0:	b	f75c <big2_scanPercent+0x3c0>
    f6b4:	add	r7, r7, #2
    f6b8:	b	f57c <big2_scanPercent+0x1e0>
    f6bc:	sub	r3, r6, r7
    f6c0:	cmp	r3, #3
    f6c4:	bge	f6d0 <big2_scanPercent+0x334>
    f6c8:	mvn	r0, #1
    f6cc:	b	f75c <big2_scanPercent+0x3c0>
    f6d0:	mov	ip, #1
    f6d4:	cmp	ip, #0
    f6d8:	beq	f6e8 <big2_scanPercent+0x34c>
    f6dc:	str	r7, [r4]
    f6e0:	mov	r0, #0
    f6e4:	b	f75c <big2_scanPercent+0x3c0>
    f6e8:	add	r7, r7, #3
    f6ec:	b	f57c <big2_scanPercent+0x1e0>
    f6f0:	sub	ip, r6, r7
    f6f4:	cmp	ip, #4
    f6f8:	bge	f704 <big2_scanPercent+0x368>
    f6fc:	mvn	r0, #1
    f700:	b	f75c <big2_scanPercent+0x3c0>
    f704:	mov	ip, #1
    f708:	cmp	ip, #0
    f70c:	beq	f71c <big2_scanPercent+0x380>
    f710:	str	r7, [r4]
    f714:	mov	r0, #0
    f718:	b	f75c <big2_scanPercent+0x3c0>
    f71c:	add	r7, r7, #4
    f720:	b	f57c <big2_scanPercent+0x1e0>
    f724:	add	r1, r7, #2
    f728:	str	r1, [r4]
    f72c:	mov	r0, #28
    f730:	b	f75c <big2_scanPercent+0x3c0>
    f734:	str	r7, [r4]
    f738:	mov	r0, #0
    f73c:	b	f75c <big2_scanPercent+0x3c0>
    f740:	mvn	r0, #0
    f744:	b	f75c <big2_scanPercent+0x3c0>
    f748:	str	r7, [r4]
    f74c:	mov	r0, #22
    f750:	b	f75c <big2_scanPercent+0x3c0>
    f754:	str	r7, [r4]
    f758:	mov	r0, #0
    f75c:	ldr	r4, [sp, #8]
    f760:	ldr	r5, [sp, #12]
    f764:	ldr	r6, [sp, #16]
    f768:	ldr	r7, [sp, #20]
    f76c:	ldr	lr, [sp, #4]
    f770:	add	sp, sp, #24
    f774:	bx	lr
    f778:	.word	0x00000000
    f77c:	.word	0x00000500
    f780:	.word	0x00000600

0000f784 <big2_scanPoundName>:
    f784:	mov	ip, sp
    f788:	sub	sp, sp, #24
    f78c:	str	ip, [sp]
    f790:	str	lr, [sp, #4]
    f794:	str	r4, [sp, #8]
    f798:	str	r5, [sp, #12]
    f79c:	str	r6, [sp, #16]
    f7a0:	str	r7, [sp, #20]
    f7a4:	mov	r4, r3
    f7a8:	mov	r5, r2
    f7ac:	mov	r6, r1
    f7b0:	mov	r7, r0
    f7b4:	cmp	r6, r5
    f7b8:	bne	f7c4 <big2_scanPoundName+0x40>
    f7bc:	mvn	r0, #0
    f7c0:	b	fb0c <big2_scanPoundName+0x388>
    f7c4:	ldrb	r3, [r6]
    f7c8:	cmp	r3, #0
    f7cc:	beq	f7e8 <big2_scanPoundName+0x64>
    f7d0:	ldrb	r1, [r6]
    f7d4:	and	r0, r1, #255	; 0xff
    f7d8:	ldrb	r3, [r6, #1]
    f7dc:	and	r1, r3, #255	; 0xff
    f7e0:	bl	5988 <unicode_byte_type>
    f7e4:	b	f7f8 <big2_scanPoundName+0x74>
    f7e8:	ldrb	r2, [r6, #1]
    f7ec:	and	ip, r2, #255	; 0xff
    f7f0:	add	r3, r7, ip
    f7f4:	ldrb	r0, [r3, #76]	; 0x4c
    f7f8:	cmp	r0, #22
    f7fc:	bcs	f8b4 <big2_scanPoundName+0x130>
    f800:	cmp	r0, #5
    f804:	beq	f880 <big2_scanPoundName+0xfc>
    f808:	cmp	r0, #6
    f80c:	beq	f84c <big2_scanPoundName+0xc8>
    f810:	cmp	r0, #7
    f814:	bne	f91c <big2_scanPoundName+0x198>
    f818:	sub	r2, r5, r6
    f81c:	cmp	r2, #4
    f820:	bge	f82c <big2_scanPoundName+0xa8>
    f824:	mvn	r0, #1
    f828:	b	fb0c <big2_scanPoundName+0x388>
    f82c:	mov	r2, #1
    f830:	cmp	r2, #0
    f834:	beq	f844 <big2_scanPoundName+0xc0>
    f838:	str	r6, [r4]
    f83c:	mov	r0, #0
    f840:	b	fb0c <big2_scanPoundName+0x388>
    f844:	add	r6, r6, #4
    f848:	b	f92c <big2_scanPoundName+0x1a8>
    f84c:	sub	r0, r5, r6
    f850:	cmp	r0, #3
    f854:	bge	f860 <big2_scanPoundName+0xdc>
    f858:	mvn	r0, #1
    f85c:	b	fb0c <big2_scanPoundName+0x388>
    f860:	mov	ip, #1
    f864:	cmp	ip, #0
    f868:	beq	f878 <big2_scanPoundName+0xf4>
    f86c:	str	r6, [r4]
    f870:	mov	r0, #0
    f874:	b	fb0c <big2_scanPoundName+0x388>
    f878:	add	r6, r6, #3
    f87c:	b	f92c <big2_scanPoundName+0x1a8>
    f880:	sub	r3, r5, r6
    f884:	cmp	r3, #2
    f888:	bge	f894 <big2_scanPoundName+0x110>
    f88c:	mvn	r0, #1
    f890:	b	fb0c <big2_scanPoundName+0x388>
    f894:	mov	r0, #1
    f898:	cmp	r0, #0
    f89c:	beq	f8ac <big2_scanPoundName+0x128>
    f8a0:	str	r6, [r4]
    f8a4:	mov	r0, #0
    f8a8:	b	fb0c <big2_scanPoundName+0x388>
    f8ac:	add	r6, r6, #2
    f8b0:	b	f92c <big2_scanPoundName+0x1a8>
    f8b4:	cmp	r0, #22
    f8b8:	beq	f928 <big2_scanPoundName+0x1a4>
    f8bc:	cmp	r0, #24
    f8c0:	beq	f928 <big2_scanPoundName+0x1a4>
    f8c4:	cmp	r0, #29
    f8c8:	bne	f91c <big2_scanPoundName+0x198>
    f8cc:	ldr	r3, [pc, #596]	; fb28 <big2_scanPoundName+0x3a4>
    f8d0:	ldrb	r1, [r6, #1]
    f8d4:	and	ip, r1, #255	; 0xff
    f8d8:	asr	ip, ip, #5
    f8dc:	ldr	r1, [pc, #584]	; fb2c <big2_scanPoundName+0x3a8>
    f8e0:	ldrb	r0, [r6]
    f8e4:	and	r0, r0, #255	; 0xff
    f8e8:	ldrb	r1, [r1, r0]
    f8ec:	add	r2, ip, r1, lsl #3
    f8f0:	ldr	r2, [r3, r2, lsl #2]
    f8f4:	mov	ip, #1
    f8f8:	ldrb	r1, [r6, #1]
    f8fc:	and	r0, r1, #31
    f900:	lsl	r0, ip, r0
    f904:	and	ip, r2, r0
    f908:	cmp	ip, #0
    f90c:	bne	f928 <big2_scanPoundName+0x1a4>
    f910:	str	r6, [r4]
    f914:	mov	r0, #0
    f918:	b	fb0c <big2_scanPoundName+0x388>
    f91c:	str	r6, [r4]
    f920:	mov	r0, #0
    f924:	b	fb0c <big2_scanPoundName+0x388>
    f928:	add	r6, r6, #2
    f92c:	cmp	r6, r5
    f930:	beq	fb08 <big2_scanPoundName+0x384>
    f934:	ldrb	ip, [r6]
    f938:	cmp	ip, #0
    f93c:	beq	f958 <big2_scanPoundName+0x1d4>
    f940:	ldrb	r2, [r6]
    f944:	and	r0, r2, #255	; 0xff
    f948:	ldrb	r1, [r6, #1]
    f94c:	and	r1, r1, #255	; 0xff
    f950:	bl	5988 <unicode_byte_type>
    f954:	b	f968 <big2_scanPoundName+0x1e4>
    f958:	ldrb	r0, [r6, #1]
    f95c:	and	r2, r0, #255	; 0xff
    f960:	add	ip, r7, r2
    f964:	ldrb	r0, [ip, #76]	; 0x4c
    f968:	sub	r0, r0, #5
    f96c:	cmp	r0, #32
    f970:	bcs	fafc <big2_scanPoundName+0x378>
    f974:	add	pc, pc, r0, lsl #2
    f978:	nop	{0}
    f97c:	b	fa54 <big2_scanPoundName+0x2d0>
    f980:	b	fa88 <big2_scanPoundName+0x304>
    f984:	b	fabc <big2_scanPoundName+0x338>
    f988:	b	fafc <big2_scanPoundName+0x378>
    f98c:	b	faf0 <big2_scanPoundName+0x36c>
    f990:	b	faf0 <big2_scanPoundName+0x36c>
    f994:	b	faf0 <big2_scanPoundName+0x36c>
    f998:	b	fafc <big2_scanPoundName+0x378>
    f99c:	b	fafc <big2_scanPoundName+0x378>
    f9a0:	b	fafc <big2_scanPoundName+0x378>
    f9a4:	b	fafc <big2_scanPoundName+0x378>
    f9a8:	b	fafc <big2_scanPoundName+0x378>
    f9ac:	b	fafc <big2_scanPoundName+0x378>
    f9b0:	b	fafc <big2_scanPoundName+0x378>
    f9b4:	b	fafc <big2_scanPoundName+0x378>
    f9b8:	b	fafc <big2_scanPoundName+0x378>
    f9bc:	b	faf0 <big2_scanPoundName+0x36c>
    f9c0:	b	fa4c <big2_scanPoundName+0x2c8>
    f9c4:	b	fafc <big2_scanPoundName+0x378>
    f9c8:	b	fa4c <big2_scanPoundName+0x2c8>
    f9cc:	b	fa4c <big2_scanPoundName+0x2c8>
    f9d0:	b	fa4c <big2_scanPoundName+0x2c8>
    f9d4:	b	fa4c <big2_scanPoundName+0x2c8>
    f9d8:	b	fafc <big2_scanPoundName+0x378>
    f9dc:	b	f9fc <big2_scanPoundName+0x278>
    f9e0:	b	faf0 <big2_scanPoundName+0x36c>
    f9e4:	b	fafc <big2_scanPoundName+0x378>
    f9e8:	b	faf0 <big2_scanPoundName+0x36c>
    f9ec:	b	fafc <big2_scanPoundName+0x378>
    f9f0:	b	fafc <big2_scanPoundName+0x378>
    f9f4:	b	fafc <big2_scanPoundName+0x378>
    f9f8:	b	faf0 <big2_scanPoundName+0x36c>
    f9fc:	ldr	r0, [pc, #292]	; fb28 <big2_scanPoundName+0x3a4>
    fa00:	ldrb	r3, [r6, #1]
    fa04:	and	r3, r3, #255	; 0xff
    fa08:	asr	r1, r3, #5
    fa0c:	ldr	r3, [pc, #284]	; fb30 <big2_scanPoundName+0x3ac>
    fa10:	ldrb	r2, [r6]
    fa14:	and	r2, r2, #255	; 0xff
    fa18:	ldrb	r2, [r3, r2]
    fa1c:	add	r2, r1, r2, lsl #3
    fa20:	ldr	r3, [r0, r2, lsl #2]
    fa24:	mov	r1, #1
    fa28:	ldrb	ip, [r6, #1]
    fa2c:	and	r2, ip, #31
    fa30:	lsl	ip, r1, r2
    fa34:	and	r2, r3, ip
    fa38:	cmp	r2, #0
    fa3c:	bne	fa4c <big2_scanPoundName+0x2c8>
    fa40:	str	r6, [r4]
    fa44:	mov	r0, #0
    fa48:	b	fb0c <big2_scanPoundName+0x388>
    fa4c:	add	r6, r6, #2
    fa50:	b	f92c <big2_scanPoundName+0x1a8>
    fa54:	sub	r1, r5, r6
    fa58:	cmp	r1, #2
    fa5c:	bge	fa68 <big2_scanPoundName+0x2e4>
    fa60:	mvn	r0, #1
    fa64:	b	fb0c <big2_scanPoundName+0x388>
    fa68:	mov	r1, #1
    fa6c:	cmp	r1, #0
    fa70:	beq	fa80 <big2_scanPoundName+0x2fc>
    fa74:	str	r6, [r4]
    fa78:	mov	r0, #0
    fa7c:	b	fb0c <big2_scanPoundName+0x388>
    fa80:	add	r6, r6, #2
    fa84:	b	f92c <big2_scanPoundName+0x1a8>
    fa88:	sub	ip, r5, r6
    fa8c:	cmp	ip, #3
    fa90:	bge	fa9c <big2_scanPoundName+0x318>
    fa94:	mvn	r0, #1
    fa98:	b	fb0c <big2_scanPoundName+0x388>
    fa9c:	mov	r2, #1
    faa0:	cmp	r2, #0
    faa4:	beq	fab4 <big2_scanPoundName+0x330>
    faa8:	str	r6, [r4]
    faac:	mov	r0, #0
    fab0:	b	fb0c <big2_scanPoundName+0x388>
    fab4:	add	r6, r6, #3
    fab8:	b	f92c <big2_scanPoundName+0x1a8>
    fabc:	sub	r2, r5, r6
    fac0:	cmp	r2, #4
    fac4:	bge	fad0 <big2_scanPoundName+0x34c>
    fac8:	mvn	r0, #1
    facc:	b	fb0c <big2_scanPoundName+0x388>
    fad0:	mov	ip, #1
    fad4:	cmp	ip, #0
    fad8:	beq	fae8 <big2_scanPoundName+0x364>
    fadc:	str	r6, [r4]
    fae0:	mov	r0, #0
    fae4:	b	fb0c <big2_scanPoundName+0x388>
    fae8:	add	r6, r6, #4
    faec:	b	f92c <big2_scanPoundName+0x1a8>
    faf0:	str	r6, [r4]
    faf4:	mov	r0, #20
    faf8:	b	fb0c <big2_scanPoundName+0x388>
    fafc:	str	r6, [r4]
    fb00:	mov	r0, #0
    fb04:	b	fb0c <big2_scanPoundName+0x388>
    fb08:	mvn	r0, #19
    fb0c:	ldr	r4, [sp, #8]
    fb10:	ldr	r5, [sp, #12]
    fb14:	ldr	r6, [sp, #16]
    fb18:	ldr	r7, [sp, #20]
    fb1c:	ldr	lr, [sp, #4]
    fb20:	add	sp, sp, #24
    fb24:	bx	lr
    fb28:	.word	0x00000000
    fb2c:	.word	0x00000500
    fb30:	.word	0x00000600

0000fb34 <big2_scanLit>:
    fb34:	mov	ip, sp
    fb38:	sub	sp, sp, #32
    fb3c:	str	ip, [sp]
    fb40:	str	lr, [sp, #4]
    fb44:	str	r4, [sp, #8]
    fb48:	str	r5, [sp, #12]
    fb4c:	str	r6, [sp, #16]
    fb50:	str	r7, [sp, #20]
    fb54:	str	r8, [sp, #24]
    fb58:	ldr	r6, [ip]
    fb5c:	mov	r5, r3
    fb60:	mov	r7, r2
    fb64:	mov	r4, r1
    fb68:	mov	r8, r0
    fb6c:	cmp	r7, r5
    fb70:	beq	fd44 <big2_scanLit+0x210>
    fb74:	ldrb	r2, [r7]
    fb78:	cmp	r2, #0
    fb7c:	beq	fb98 <big2_scanLit+0x64>
    fb80:	ldrb	r3, [r7]
    fb84:	and	r0, r3, #255	; 0xff
    fb88:	ldrb	r1, [r7, #1]
    fb8c:	and	r1, r1, #255	; 0xff
    fb90:	bl	5988 <unicode_byte_type>
    fb94:	b	fba8 <big2_scanLit+0x74>
    fb98:	ldrb	ip, [r7, #1]
    fb9c:	and	r3, ip, #255	; 0xff
    fba0:	add	r3, r4, r3
    fba4:	ldrb	r0, [r3, #76]	; 0x4c
    fba8:	mov	r1, r0
    fbac:	cmp	r1, #14
    fbb0:	bcs	fd3c <big2_scanLit+0x208>
    fbb4:	add	pc, pc, r1, lsl #2
    fbb8:	nop	{0}
    fbbc:	b	fc90 <big2_scanLit+0x15c>
    fbc0:	b	fc90 <big2_scanLit+0x15c>
    fbc4:	b	fd3c <big2_scanLit+0x208>
    fbc8:	b	fd3c <big2_scanLit+0x208>
    fbcc:	b	fd3c <big2_scanLit+0x208>
    fbd0:	b	fbf4 <big2_scanLit+0xc0>
    fbd4:	b	fc28 <big2_scanLit+0xf4>
    fbd8:	b	fc5c <big2_scanLit+0x128>
    fbdc:	b	fc90 <big2_scanLit+0x15c>
    fbe0:	b	fd3c <big2_scanLit+0x208>
    fbe4:	b	fd3c <big2_scanLit+0x208>
    fbe8:	b	fd3c <big2_scanLit+0x208>
    fbec:	b	fc9c <big2_scanLit+0x168>
    fbf0:	b	fc9c <big2_scanLit+0x168>
    fbf4:	sub	r2, r5, r7
    fbf8:	cmp	r2, #2
    fbfc:	bge	fc08 <big2_scanLit+0xd4>
    fc00:	mvn	r0, #1
    fc04:	b	fd48 <big2_scanLit+0x214>
    fc08:	mov	r2, #0
    fc0c:	cmp	r2, #0
    fc10:	beq	fc20 <big2_scanLit+0xec>
    fc14:	str	r7, [r6]
    fc18:	mov	r0, #0
    fc1c:	b	fd48 <big2_scanLit+0x214>
    fc20:	add	r7, r7, #2
    fc24:	b	fb6c <big2_scanLit+0x38>
    fc28:	sub	r0, r5, r7
    fc2c:	cmp	r0, #3
    fc30:	bge	fc3c <big2_scanLit+0x108>
    fc34:	mvn	r0, #1
    fc38:	b	fd48 <big2_scanLit+0x214>
    fc3c:	mov	r1, #0
    fc40:	cmp	r1, #0
    fc44:	beq	fc54 <big2_scanLit+0x120>
    fc48:	str	r7, [r6]
    fc4c:	mov	r0, #0
    fc50:	b	fd48 <big2_scanLit+0x214>
    fc54:	add	r7, r7, #3
    fc58:	b	fb6c <big2_scanLit+0x38>
    fc5c:	sub	r0, r5, r7
    fc60:	cmp	r0, #4
    fc64:	bge	fc70 <big2_scanLit+0x13c>
    fc68:	mvn	r0, #1
    fc6c:	b	fd48 <big2_scanLit+0x214>
    fc70:	mov	r2, #0
    fc74:	cmp	r2, #0
    fc78:	beq	fc88 <big2_scanLit+0x154>
    fc7c:	str	r7, [r6]
    fc80:	mov	r0, #0
    fc84:	b	fd48 <big2_scanLit+0x214>
    fc88:	add	r7, r7, #4
    fc8c:	b	fb6c <big2_scanLit+0x38>
    fc90:	str	r7, [r6]
    fc94:	mov	r0, #0
    fc98:	b	fd48 <big2_scanLit+0x214>
    fc9c:	add	r7, r7, #2
    fca0:	cmp	r0, r8
    fca4:	bne	fb6c <big2_scanLit+0x38>
    fca8:	cmp	r7, r5
    fcac:	bne	fcb8 <big2_scanLit+0x184>
    fcb0:	mvn	r0, #26
    fcb4:	b	fd48 <big2_scanLit+0x214>
    fcb8:	str	r7, [r6]
    fcbc:	ldrb	ip, [r7]
    fcc0:	cmp	ip, #0
    fcc4:	beq	fce0 <big2_scanLit+0x1ac>
    fcc8:	ldrb	r0, [r7]
    fccc:	and	r0, r0, #255	; 0xff
    fcd0:	ldrb	r1, [r7, #1]
    fcd4:	and	r1, r1, #255	; 0xff
    fcd8:	bl	5988 <unicode_byte_type>
    fcdc:	b	fcf0 <big2_scanLit+0x1bc>
    fce0:	ldrb	r1, [r7, #1]
    fce4:	and	ip, r1, #255	; 0xff
    fce8:	add	r0, r4, ip
    fcec:	ldrb	r0, [r0, #76]	; 0x4c
    fcf0:	cmp	r0, #20
    fcf4:	bcs	fd14 <big2_scanLit+0x1e0>
    fcf8:	cmp	r0, #9
    fcfc:	beq	fd34 <big2_scanLit+0x200>
    fd00:	cmp	r0, #10
    fd04:	beq	fd34 <big2_scanLit+0x200>
    fd08:	cmp	r0, #11
    fd0c:	beq	fd34 <big2_scanLit+0x200>
    fd10:	b	fd2c <big2_scanLit+0x1f8>
    fd14:	cmp	r0, #20
    fd18:	beq	fd34 <big2_scanLit+0x200>
    fd1c:	cmp	r0, #21
    fd20:	beq	fd34 <big2_scanLit+0x200>
    fd24:	cmp	r0, #30
    fd28:	beq	fd34 <big2_scanLit+0x200>
    fd2c:	mov	r0, #0
    fd30:	b	fd48 <big2_scanLit+0x214>
    fd34:	mov	r0, #27
    fd38:	b	fd48 <big2_scanLit+0x214>
    fd3c:	add	r7, r7, #2
    fd40:	b	fb6c <big2_scanLit+0x38>
    fd44:	mvn	r0, #0
    fd48:	ldr	r4, [sp, #8]
    fd4c:	ldr	r5, [sp, #12]
    fd50:	ldr	r6, [sp, #16]
    fd54:	ldr	r7, [sp, #20]
    fd58:	ldr	r8, [sp, #24]
    fd5c:	ldr	lr, [sp, #4]
    fd60:	add	sp, sp, #32
    fd64:	bx	lr

0000fd68 <big2_prologTok>:
    fd68:	mov	ip, sp
    fd6c:	sub	sp, sp, #40	; 0x28
    fd70:	str	ip, [sp, #4]
    fd74:	str	lr, [sp, #8]
    fd78:	str	r4, [sp, #16]
    fd7c:	str	r5, [sp, #20]
    fd80:	str	r6, [sp, #24]
    fd84:	str	r7, [sp, #28]
    fd88:	str	r8, [sp, #32]
    fd8c:	str	r9, [sp, #36]	; 0x24
    fd90:	mov	r6, r3
    fd94:	mov	r5, r2
    fd98:	mov	r7, r1
    fd9c:	mov	r4, r0
    fda0:	cmp	r7, r5
    fda4:	bne	fdb0 <big2_prologTok+0x48>
    fda8:	mvn	r0, #3
    fdac:	b	10898 <big2_prologTok+0xb30>
    fdb0:	mov	r2, #1
    fdb4:	cmp	r2, #0
    fdb8:	beq	fde4 <big2_prologTok+0x7c>
    fdbc:	sub	r3, r5, r7
    fdc0:	and	r2, r3, #1
    fdc4:	cmp	r2, #0
    fdc8:	beq	fde4 <big2_prologTok+0x7c>
    fdcc:	bic	r0, r3, #1
    fdd0:	cmp	r0, #0
    fdd4:	bne	fde0 <big2_prologTok+0x78>
    fdd8:	mvn	r0, #0
    fddc:	b	10898 <big2_prologTok+0xb30>
    fde0:	add	r5, r7, r0
    fde4:	ldrb	r2, [r7]
    fde8:	cmp	r2, #0
    fdec:	beq	fe08 <big2_prologTok+0xa0>
    fdf0:	ldrb	r0, [r7]
    fdf4:	and	r0, r0, #255	; 0xff
    fdf8:	ldrb	ip, [r7, #1]
    fdfc:	and	r1, ip, #255	; 0xff
    fe00:	bl	5988 <unicode_byte_type>
    fe04:	b	fe18 <big2_prologTok+0xb0>
    fe08:	ldrb	r0, [r7, #1]
    fe0c:	and	r0, r0, #255	; 0xff
    fe10:	add	r1, r4, r0
    fe14:	ldrb	r0, [r1, #76]	; 0x4c
    fe18:	sub	r1, r0, #2
    fe1c:	cmp	r1, #35	; 0x23
    fe20:	bcs	10890 <big2_prologTok+0xb28>
    fe24:	add	pc, pc, r1, lsl #2
    fe28:	nop	{0}
    fe2c:	b	fef0 <big2_prologTok+0x188>
    fe30:	b	10890 <big2_prologTok+0xb28>
    fe34:	b	100cc <big2_prologTok+0x364>
    fe38:	b	102c4 <big2_prologTok+0x55c>
    fe3c:	b	10314 <big2_prologTok+0x5ac>
    fe40:	b	10364 <big2_prologTok+0x5fc>
    fe44:	b	10890 <big2_prologTok+0xb28>
    fe48:	b	fffc <big2_prologTok+0x294>
    fe4c:	b	10014 <big2_prologTok+0x2ac>
    fe50:	b	1029c <big2_prologTok+0x534>
    fe54:	b	feb8 <big2_prologTok+0x150>
    fe58:	b	fed4 <big2_prologTok+0x16c>
    fe5c:	b	10890 <big2_prologTok+0xb28>
    fe60:	b	10890 <big2_prologTok+0xb28>
    fe64:	b	10890 <big2_prologTok+0xb28>
    fe68:	b	10890 <big2_prologTok+0xb28>
    fe6c:	b	10890 <big2_prologTok+0xb28>
    fe70:	b	102ac <big2_prologTok+0x544>
    fe74:	b	100bc <big2_prologTok+0x354>
    fe78:	b	10014 <big2_prologTok+0x2ac>
    fe7c:	b	103b4 <big2_prologTok+0x64c>
    fe80:	b	103c0 <big2_prologTok+0x658>
    fe84:	b	103b4 <big2_prologTok+0x64c>
    fe88:	b	103c0 <big2_prologTok+0x658>
    fe8c:	b	103c0 <big2_prologTok+0x658>
    fe90:	b	103c0 <big2_prologTok+0x658>
    fe94:	b	10890 <big2_prologTok+0xb28>
    fe98:	b	103cc <big2_prologTok+0x664>
    fe9c:	b	10094 <big2_prologTok+0x32c>
    fea0:	b	10168 <big2_prologTok+0x400>
    fea4:	b	10178 <big2_prologTok+0x410>
    fea8:	b	10890 <big2_prologTok+0xb28>
    feac:	b	10890 <big2_prologTok+0xb28>
    feb0:	b	100ac <big2_prologTok+0x344>
    feb4:	b	1028c <big2_prologTok+0x524>
    feb8:	mov	r0, #12
    febc:	add	r2, r7, #2
    fec0:	str	r6, [sp]
    fec4:	mov	r3, r5
    fec8:	mov	r1, r4
    fecc:	bl	fb34 <big2_scanLit>
    fed0:	b	10898 <big2_prologTok+0xb30>
    fed4:	mov	r0, #13
    fed8:	add	r2, r7, #2
    fedc:	str	r6, [sp]
    fee0:	mov	r3, r5
    fee4:	mov	r1, r4
    fee8:	bl	fb34 <big2_scanLit>
    feec:	b	10898 <big2_prologTok+0xb30>
    fef0:	add	r7, r7, #2
    fef4:	cmp	r7, r5
    fef8:	bne	ff04 <big2_prologTok+0x19c>
    fefc:	mvn	r0, #0
    ff00:	b	10898 <big2_prologTok+0xb30>
    ff04:	ldrb	ip, [r7]
    ff08:	cmp	ip, #0
    ff0c:	beq	ff28 <big2_prologTok+0x1c0>
    ff10:	ldrb	ip, [r7]
    ff14:	and	r0, ip, #255	; 0xff
    ff18:	ldrb	r1, [r7, #1]
    ff1c:	and	r1, r1, #255	; 0xff
    ff20:	bl	5988 <unicode_byte_type>
    ff24:	b	ff38 <big2_prologTok+0x1d0>
    ff28:	ldrb	r0, [r7, #1]
    ff2c:	and	r2, r0, #255	; 0xff
    ff30:	add	ip, r4, r2
    ff34:	ldrb	r0, [ip, #76]	; 0x4c
    ff38:	sub	r2, r0, #5
    ff3c:	cmp	r2, #25
    ff40:	bcs	fff0 <big2_prologTok+0x288>
    ff44:	add	pc, pc, r2, lsl #2
    ff48:	nop	{0}
    ff4c:	b	ffe0 <big2_prologTok+0x278>
    ff50:	b	ffe0 <big2_prologTok+0x278>
    ff54:	b	ffe0 <big2_prologTok+0x278>
    ff58:	b	fff0 <big2_prologTok+0x288>
    ff5c:	b	fff0 <big2_prologTok+0x288>
    ff60:	b	fff0 <big2_prologTok+0x288>
    ff64:	b	fff0 <big2_prologTok+0x288>
    ff68:	b	fff0 <big2_prologTok+0x288>
    ff6c:	b	fff0 <big2_prologTok+0x288>
    ff70:	b	fff0 <big2_prologTok+0x288>
    ff74:	b	ffc8 <big2_prologTok+0x260>
    ff78:	b	ffb0 <big2_prologTok+0x248>
    ff7c:	b	fff0 <big2_prologTok+0x288>
    ff80:	b	fff0 <big2_prologTok+0x288>
    ff84:	b	fff0 <big2_prologTok+0x288>
    ff88:	b	fff0 <big2_prologTok+0x288>
    ff8c:	b	fff0 <big2_prologTok+0x288>
    ff90:	b	ffe0 <big2_prologTok+0x278>
    ff94:	b	fff0 <big2_prologTok+0x288>
    ff98:	b	ffe0 <big2_prologTok+0x278>
    ff9c:	b	fff0 <big2_prologTok+0x288>
    ffa0:	b	fff0 <big2_prologTok+0x288>
    ffa4:	b	fff0 <big2_prologTok+0x288>
    ffa8:	b	fff0 <big2_prologTok+0x288>
    ffac:	b	ffe0 <big2_prologTok+0x278>
    ffb0:	add	r1, r7, #2
    ffb4:	mov	r3, r6
    ffb8:	mov	r2, r5
    ffbc:	mov	r0, r4
    ffc0:	bl	c3a4 <big2_scanDecl>
    ffc4:	b	10898 <big2_prologTok+0xb30>
    ffc8:	add	r1, r7, #2
    ffcc:	mov	r3, r6
    ffd0:	mov	r2, r5
    ffd4:	mov	r0, r4
    ffd8:	bl	c6b8 <big2_scanPi>
    ffdc:	b	10898 <big2_prologTok+0xb30>
    ffe0:	sub	r3, r7, #2
    ffe4:	str	r3, [r6]
    ffe8:	mov	r0, #29
    ffec:	b	10898 <big2_prologTok+0xb30>
    fff0:	str	r7, [r6]
    fff4:	mov	r0, #0
    fff8:	b	10898 <big2_prologTok+0xb30>
    fffc:	add	r0, r7, #2
   10000:	cmp	r0, r5
   10004:	bne	10014 <big2_prologTok+0x2ac>
   10008:	str	r5, [r6]
   1000c:	mvn	r0, #14
   10010:	b	10898 <big2_prologTok+0xb30>
   10014:	add	r7, r7, #2
   10018:	cmp	r7, r5
   1001c:	beq	10088 <big2_prologTok+0x320>
   10020:	ldrb	r2, [r7]
   10024:	cmp	r2, #0
   10028:	beq	10044 <big2_prologTok+0x2dc>
   1002c:	ldrb	r0, [r7]
   10030:	and	r0, r0, #255	; 0xff
   10034:	ldrb	r3, [r7, #1]
   10038:	and	r1, r3, #255	; 0xff
   1003c:	bl	5988 <unicode_byte_type>
   10040:	b	10054 <big2_prologTok+0x2ec>
   10044:	ldrb	r2, [r7, #1]
   10048:	and	r1, r2, #255	; 0xff
   1004c:	add	r3, r4, r1
   10050:	ldrb	r0, [r3, #76]	; 0x4c
   10054:	cmp	r0, #9
   10058:	beq	10070 <big2_prologTok+0x308>
   1005c:	cmp	r0, #10
   10060:	beq	10014 <big2_prologTok+0x2ac>
   10064:	cmp	r0, #21
   10068:	beq	10014 <big2_prologTok+0x2ac>
   1006c:	b	1007c <big2_prologTok+0x314>
   10070:	add	r2, r7, #2
   10074:	cmp	r2, r5
   10078:	bne	10014 <big2_prologTok+0x2ac>
   1007c:	str	r7, [r6]
   10080:	mov	r0, #15
   10084:	b	10898 <big2_prologTok+0xb30>
   10088:	str	r7, [r6]
   1008c:	mov	r0, #15
   10090:	b	10898 <big2_prologTok+0xb30>
   10094:	add	r1, r7, #2
   10098:	mov	r3, r6
   1009c:	mov	r2, r5
   100a0:	mov	r0, r4
   100a4:	bl	f39c <big2_scanPercent>
   100a8:	b	10898 <big2_prologTok+0xb30>
   100ac:	add	ip, r7, #2
   100b0:	str	ip, [r6]
   100b4:	mov	r0, #38	; 0x26
   100b8:	b	10898 <big2_prologTok+0xb30>
   100bc:	add	r2, r7, #2
   100c0:	str	r2, [r6]
   100c4:	mov	r0, #25
   100c8:	b	10898 <big2_prologTok+0xb30>
   100cc:	add	r3, r7, #2
   100d0:	cmp	r3, r5
   100d4:	bne	100e0 <big2_prologTok+0x378>
   100d8:	mvn	r0, #25
   100dc:	b	10898 <big2_prologTok+0xb30>
   100e0:	ldrb	ip, [r3]
   100e4:	cmp	ip, #0
   100e8:	bne	10100 <big2_prologTok+0x398>
   100ec:	ldrb	r0, [r3, #1]
   100f0:	cmp	r0, #93	; 0x5d
   100f4:	moveq	ip, #1
   100f8:	movne	ip, #0
   100fc:	b	10104 <big2_prologTok+0x39c>
   10100:	mov	ip, #0
   10104:	cmp	ip, #0
   10108:	beq	1015c <big2_prologTok+0x3f4>
   1010c:	add	ip, r3, #2
   10110:	cmp	ip, r5
   10114:	bne	10120 <big2_prologTok+0x3b8>
   10118:	mvn	r0, #0
   1011c:	b	10898 <big2_prologTok+0xb30>
   10120:	ldrb	ip, [r3, #2]
   10124:	cmp	ip, #0
   10128:	bne	10140 <big2_prologTok+0x3d8>
   1012c:	ldrb	ip, [r3, #3]
   10130:	cmp	ip, #62	; 0x3e
   10134:	moveq	r1, #1
   10138:	movne	r1, #0
   1013c:	b	10144 <big2_prologTok+0x3dc>
   10140:	mov	r1, #0
   10144:	cmp	r1, #0
   10148:	beq	1015c <big2_prologTok+0x3f4>
   1014c:	add	r0, r3, #4
   10150:	str	r0, [r6]
   10154:	mov	r0, #34	; 0x22
   10158:	b	10898 <big2_prologTok+0xb30>
   1015c:	str	r3, [r6]
   10160:	mov	r0, #26
   10164:	b	10898 <big2_prologTok+0xb30>
   10168:	add	ip, r7, #2
   1016c:	str	ip, [r6]
   10170:	mov	r0, #23
   10174:	b	10898 <big2_prologTok+0xb30>
   10178:	add	r7, r7, #2
   1017c:	cmp	r7, r5
   10180:	bne	1018c <big2_prologTok+0x424>
   10184:	mvn	r0, #23
   10188:	b	10898 <big2_prologTok+0xb30>
   1018c:	ldrb	ip, [r7]
   10190:	cmp	ip, #0
   10194:	beq	101b0 <big2_prologTok+0x448>
   10198:	ldrb	r0, [r7]
   1019c:	and	r0, r0, #255	; 0xff
   101a0:	ldrb	r1, [r7, #1]
   101a4:	and	r1, r1, #255	; 0xff
   101a8:	bl	5988 <unicode_byte_type>
   101ac:	b	101c0 <big2_prologTok+0x458>
   101b0:	ldrb	r0, [r7, #1]
   101b4:	and	r1, r0, #255	; 0xff
   101b8:	add	ip, r4, r1
   101bc:	ldrb	r0, [ip, #76]	; 0x4c
   101c0:	sub	r0, r0, #9
   101c4:	cmp	r0, #28
   101c8:	bcs	10280 <big2_prologTok+0x518>
   101cc:	add	pc, pc, r0, lsl #2
   101d0:	nop	{0}
   101d4:	b	10274 <big2_prologTok+0x50c>
   101d8:	b	10274 <big2_prologTok+0x50c>
   101dc:	b	10274 <big2_prologTok+0x50c>
   101e0:	b	10280 <big2_prologTok+0x518>
   101e4:	b	10280 <big2_prologTok+0x518>
   101e8:	b	10280 <big2_prologTok+0x518>
   101ec:	b	10254 <big2_prologTok+0x4ec>
   101f0:	b	10280 <big2_prologTok+0x518>
   101f4:	b	10280 <big2_prologTok+0x518>
   101f8:	b	10280 <big2_prologTok+0x518>
   101fc:	b	10280 <big2_prologTok+0x518>
   10200:	b	10280 <big2_prologTok+0x518>
   10204:	b	10274 <big2_prologTok+0x50c>
   10208:	b	10280 <big2_prologTok+0x518>
   1020c:	b	10280 <big2_prologTok+0x518>
   10210:	b	10280 <big2_prologTok+0x518>
   10214:	b	10280 <big2_prologTok+0x518>
   10218:	b	10280 <big2_prologTok+0x518>
   1021c:	b	10280 <big2_prologTok+0x518>
   10220:	b	10280 <big2_prologTok+0x518>
   10224:	b	10280 <big2_prologTok+0x518>
   10228:	b	10280 <big2_prologTok+0x518>
   1022c:	b	10280 <big2_prologTok+0x518>
   10230:	b	10274 <big2_prologTok+0x50c>
   10234:	b	10244 <big2_prologTok+0x4dc>
   10238:	b	10264 <big2_prologTok+0x4fc>
   1023c:	b	10274 <big2_prologTok+0x50c>
   10240:	b	10274 <big2_prologTok+0x50c>
   10244:	add	r1, r7, #2
   10248:	str	r1, [r6]
   1024c:	mov	r0, #36	; 0x24
   10250:	b	10898 <big2_prologTok+0xb30>
   10254:	add	r1, r7, #2
   10258:	str	r1, [r6]
   1025c:	mov	r0, #35	; 0x23
   10260:	b	10898 <big2_prologTok+0xb30>
   10264:	add	r3, r7, #2
   10268:	str	r3, [r6]
   1026c:	mov	r0, #37	; 0x25
   10270:	b	10898 <big2_prologTok+0xb30>
   10274:	str	r7, [r6]
   10278:	mov	r0, #24
   1027c:	b	10898 <big2_prologTok+0xb30>
   10280:	str	r7, [r6]
   10284:	mov	r0, #0
   10288:	b	10898 <big2_prologTok+0xb30>
   1028c:	add	r2, r7, #2
   10290:	str	r2, [r6]
   10294:	mov	r0, #21
   10298:	b	10898 <big2_prologTok+0xb30>
   1029c:	add	ip, r7, #2
   102a0:	str	ip, [r6]
   102a4:	mov	r0, #17
   102a8:	b	10898 <big2_prologTok+0xb30>
   102ac:	add	r1, r7, #2
   102b0:	mov	r3, r6
   102b4:	mov	r2, r5
   102b8:	mov	r0, r4
   102bc:	bl	f784 <big2_scanPoundName>
   102c0:	b	10898 <big2_prologTok+0xb30>
   102c4:	sub	r3, r5, r7
   102c8:	cmp	r3, #2
   102cc:	bge	102d8 <big2_prologTok+0x570>
   102d0:	mvn	r0, #1
   102d4:	b	10898 <big2_prologTok+0xb30>
   102d8:	mov	r1, #0
   102dc:	cmp	r1, #0
   102e0:	beq	102f0 <big2_prologTok+0x588>
   102e4:	add	r7, r7, #2
   102e8:	mov	r8, #18
   102ec:	b	10468 <big2_prologTok+0x700>
   102f0:	mov	r2, #0
   102f4:	cmp	r2, #0
   102f8:	beq	10308 <big2_prologTok+0x5a0>
   102fc:	add	r7, r7, #2
   10300:	mov	r8, #19
   10304:	b	10468 <big2_prologTok+0x700>
   10308:	str	r7, [r6]
   1030c:	mov	r0, #0
   10310:	b	10898 <big2_prologTok+0xb30>
   10314:	sub	ip, r5, r7
   10318:	cmp	ip, #3
   1031c:	bge	10328 <big2_prologTok+0x5c0>
   10320:	mvn	r0, #1
   10324:	b	10898 <big2_prologTok+0xb30>
   10328:	mov	r0, #0
   1032c:	cmp	r0, #0
   10330:	beq	10340 <big2_prologTok+0x5d8>
   10334:	add	r7, r7, #3
   10338:	mov	r8, #18
   1033c:	b	10468 <big2_prologTok+0x700>
   10340:	mov	r3, #0
   10344:	cmp	r3, #0
   10348:	beq	10358 <big2_prologTok+0x5f0>
   1034c:	add	r7, r7, #3
   10350:	mov	r8, #19
   10354:	b	10468 <big2_prologTok+0x700>
   10358:	str	r7, [r6]
   1035c:	mov	r0, #0
   10360:	b	10898 <big2_prologTok+0xb30>
   10364:	sub	r0, r5, r7
   10368:	cmp	r0, #4
   1036c:	bge	10378 <big2_prologTok+0x610>
   10370:	mvn	r0, #1
   10374:	b	10898 <big2_prologTok+0xb30>
   10378:	mov	r0, #0
   1037c:	cmp	r0, #0
   10380:	beq	10390 <big2_prologTok+0x628>
   10384:	add	r7, r7, #4
   10388:	mov	r8, #18
   1038c:	b	10468 <big2_prologTok+0x700>
   10390:	mov	r3, #0
   10394:	cmp	r3, #0
   10398:	beq	103a8 <big2_prologTok+0x640>
   1039c:	add	r7, r7, #4
   103a0:	mov	r8, #19
   103a4:	b	10468 <big2_prologTok+0x700>
   103a8:	str	r7, [r6]
   103ac:	mov	r0, #0
   103b0:	b	10898 <big2_prologTok+0xb30>
   103b4:	mov	r8, #18
   103b8:	add	r7, r7, #2
   103bc:	b	10468 <big2_prologTok+0x700>
   103c0:	mov	r8, #19
   103c4:	add	r7, r7, #2
   103c8:	b	10468 <big2_prologTok+0x700>
   103cc:	ldr	r3, [pc, #1256]	; 108bc <big2_prologTok+0xb54>
   103d0:	ldrb	r1, [r7, #1]
   103d4:	and	r0, r1, #255	; 0xff
   103d8:	asr	r1, r0, #5
   103dc:	ldr	ip, [pc, #1244]	; 108c0 <big2_prologTok+0xb58>
   103e0:	ldrb	r0, [r7]
   103e4:	and	r0, r0, #255	; 0xff
   103e8:	ldrb	r0, [ip, r0]
   103ec:	add	ip, r1, r0, lsl #3
   103f0:	ldr	r2, [r3, ip, lsl #2]
   103f4:	mov	r1, #1
   103f8:	ldrb	r3, [r7, #1]
   103fc:	and	ip, r3, #31
   10400:	lsl	r1, r1, ip
   10404:	and	r0, r2, r1
   10408:	cmp	r0, #0
   1040c:	beq	1041c <big2_prologTok+0x6b4>
   10410:	add	r7, r7, #2
   10414:	mov	r8, #18
   10418:	b	10468 <big2_prologTok+0x700>
   1041c:	ldr	r0, [pc, #1176]	; 108bc <big2_prologTok+0xb54>
   10420:	ldrb	r3, [r7, #1]
   10424:	and	r2, r3, #255	; 0xff
   10428:	asr	ip, r2, #5
   1042c:	ldr	r1, [pc, #1168]	; 108c4 <big2_prologTok+0xb5c>
   10430:	ldrb	r2, [r7]
   10434:	and	r2, r2, #255	; 0xff
   10438:	ldrb	r1, [r1, r2]
   1043c:	add	r2, ip, r1, lsl #3
   10440:	ldr	r3, [r0, r2, lsl #2]
   10444:	mov	r2, #1
   10448:	ldrb	r0, [r7, #1]
   1044c:	and	r0, r0, #31
   10450:	lsl	r2, r2, r0
   10454:	and	r3, r3, r2
   10458:	cmp	r3, #0
   1045c:	beq	10890 <big2_prologTok+0xb28>
   10460:	add	r7, r7, #2
   10464:	mov	r8, #19
   10468:	cmp	r7, r5
   1046c:	beq	10888 <big2_prologTok+0xb20>
   10470:	ldrb	r2, [r7]
   10474:	cmp	r2, #0
   10478:	beq	10494 <big2_prologTok+0x72c>
   1047c:	ldrb	r1, [r7]
   10480:	and	r0, r1, #255	; 0xff
   10484:	ldrb	r2, [r7, #1]
   10488:	and	r1, r2, #255	; 0xff
   1048c:	bl	5988 <unicode_byte_type>
   10490:	b	104a4 <big2_prologTok+0x73c>
   10494:	ldrb	r3, [r7, #1]
   10498:	and	r1, r3, #255	; 0xff
   1049c:	add	r1, r4, r1
   104a0:	ldrb	r0, [r1, #76]	; 0x4c
   104a4:	sub	ip, r0, #5
   104a8:	cmp	ip, #32
   104ac:	bcs	1087c <big2_prologTok+0xb14>
   104b0:	add	pc, pc, ip, lsl #2
   104b4:	nop	{0}
   104b8:	b	10590 <big2_prologTok+0x828>
   104bc:	b	105c4 <big2_prologTok+0x85c>
   104c0:	b	105f8 <big2_prologTok+0x890>
   104c4:	b	1087c <big2_prologTok+0xb14>
   104c8:	b	1062c <big2_prologTok+0x8c4>
   104cc:	b	1062c <big2_prologTok+0x8c4>
   104d0:	b	1062c <big2_prologTok+0x8c4>
   104d4:	b	1087c <big2_prologTok+0xb14>
   104d8:	b	1087c <big2_prologTok+0xb14>
   104dc:	b	1087c <big2_prologTok+0xb14>
   104e0:	b	10858 <big2_prologTok+0xaf0>
   104e4:	b	1087c <big2_prologTok+0xb14>
   104e8:	b	1087c <big2_prologTok+0xb14>
   104ec:	b	1087c <big2_prologTok+0xb14>
   104f0:	b	1087c <big2_prologTok+0xb14>
   104f4:	b	1062c <big2_prologTok+0x8c4>
   104f8:	b	1062c <big2_prologTok+0x8c4>
   104fc:	b	10588 <big2_prologTok+0x820>
   10500:	b	10638 <big2_prologTok+0x8d0>
   10504:	b	10588 <big2_prologTok+0x820>
   10508:	b	10588 <big2_prologTok+0x820>
   1050c:	b	10588 <big2_prologTok+0x820>
   10510:	b	10588 <big2_prologTok+0x820>
   10514:	b	1087c <big2_prologTok+0xb14>
   10518:	b	10538 <big2_prologTok+0x7d0>
   1051c:	b	1062c <big2_prologTok+0x8c4>
   10520:	b	1087c <big2_prologTok+0xb14>
   10524:	b	1062c <big2_prologTok+0x8c4>
   10528:	b	10834 <big2_prologTok+0xacc>
   1052c:	b	10810 <big2_prologTok+0xaa8>
   10530:	b	1062c <big2_prologTok+0x8c4>
   10534:	b	1062c <big2_prologTok+0x8c4>
   10538:	ldr	r9, [pc, #892]	; 108bc <big2_prologTok+0xb54>
   1053c:	ldrb	ip, [r7, #1]
   10540:	and	r2, ip, #255	; 0xff
   10544:	asr	r2, r2, #5
   10548:	ldr	r3, [pc, #884]	; 108c4 <big2_prologTok+0xb5c>
   1054c:	ldrb	r0, [r7]
   10550:	and	r1, r0, #255	; 0xff
   10554:	ldrb	r3, [r3, r1]
   10558:	add	r2, r2, r3, lsl #3
   1055c:	ldr	r1, [r9, r2, lsl #2]
   10560:	mov	r2, #1
   10564:	ldrb	ip, [r7, #1]
   10568:	and	r0, ip, #31
   1056c:	lsl	ip, r2, r0
   10570:	and	r3, r1, ip
   10574:	cmp	r3, #0
   10578:	bne	10588 <big2_prologTok+0x820>
   1057c:	str	r7, [r6]
   10580:	mov	r0, #0
   10584:	b	10898 <big2_prologTok+0xb30>
   10588:	add	r7, r7, #2
   1058c:	b	10468 <big2_prologTok+0x700>
   10590:	sub	ip, r5, r7
   10594:	cmp	ip, #2
   10598:	bge	105a4 <big2_prologTok+0x83c>
   1059c:	mvn	r0, #1
   105a0:	b	10898 <big2_prologTok+0xb30>
   105a4:	mov	r1, #1
   105a8:	cmp	r1, #0
   105ac:	beq	105bc <big2_prologTok+0x854>
   105b0:	str	r7, [r6]
   105b4:	mov	r0, #0
   105b8:	b	10898 <big2_prologTok+0xb30>
   105bc:	add	r7, r7, #2
   105c0:	b	10468 <big2_prologTok+0x700>
   105c4:	sub	r0, r5, r7
   105c8:	cmp	r0, #3
   105cc:	bge	105d8 <big2_prologTok+0x870>
   105d0:	mvn	r0, #1
   105d4:	b	10898 <big2_prologTok+0xb30>
   105d8:	mov	r3, #1
   105dc:	cmp	r3, #0
   105e0:	beq	105f0 <big2_prologTok+0x888>
   105e4:	str	r7, [r6]
   105e8:	mov	r0, #0
   105ec:	b	10898 <big2_prologTok+0xb30>
   105f0:	add	r7, r7, #3
   105f4:	b	10468 <big2_prologTok+0x700>
   105f8:	sub	r1, r5, r7
   105fc:	cmp	r1, #4
   10600:	bge	1060c <big2_prologTok+0x8a4>
   10604:	mvn	r0, #1
   10608:	b	10898 <big2_prologTok+0xb30>
   1060c:	mov	r1, #1
   10610:	cmp	r1, #0
   10614:	beq	10624 <big2_prologTok+0x8bc>
   10618:	str	r7, [r6]
   1061c:	mov	r0, #0
   10620:	b	10898 <big2_prologTok+0xb30>
   10624:	add	r7, r7, #4
   10628:	b	10468 <big2_prologTok+0x700>
   1062c:	str	r7, [r6]
   10630:	mov	r0, r8
   10634:	b	10898 <big2_prologTok+0xb30>
   10638:	add	r7, r7, #2
   1063c:	cmp	r8, #18
   10640:	beq	10654 <big2_prologTok+0x8ec>
   10644:	cmp	r8, #41	; 0x29
   10648:	bne	10468 <big2_prologTok+0x700>
   1064c:	mov	r8, #19
   10650:	b	10468 <big2_prologTok+0x700>
   10654:	cmp	r7, r5
   10658:	bne	10664 <big2_prologTok+0x8fc>
   1065c:	mvn	r0, #0
   10660:	b	10898 <big2_prologTok+0xb30>
   10664:	mov	r8, #41	; 0x29
   10668:	ldrb	r1, [r7]
   1066c:	cmp	r1, #0
   10670:	beq	1068c <big2_prologTok+0x924>
   10674:	ldrb	r2, [r7]
   10678:	and	r0, r2, #255	; 0xff
   1067c:	ldrb	r3, [r7, #1]
   10680:	and	r1, r3, #255	; 0xff
   10684:	bl	5988 <unicode_byte_type>
   10688:	b	1069c <big2_prologTok+0x934>
   1068c:	ldrb	r0, [r7, #1]
   10690:	and	r2, r0, #255	; 0xff
   10694:	add	ip, r4, r2
   10698:	ldrb	r0, [ip, #76]	; 0x4c
   1069c:	sub	r1, r0, #5
   106a0:	cmp	r1, #25
   106a4:	bcs	10808 <big2_prologTok+0xaa0>
   106a8:	add	pc, pc, r1, lsl #2
   106ac:	nop	{0}
   106b0:	b	1076c <big2_prologTok+0xa04>
   106b4:	b	107a0 <big2_prologTok+0xa38>
   106b8:	b	107d4 <big2_prologTok+0xa6c>
   106bc:	b	10808 <big2_prologTok+0xaa0>
   106c0:	b	10808 <big2_prologTok+0xaa0>
   106c4:	b	10808 <big2_prologTok+0xaa0>
   106c8:	b	10808 <big2_prologTok+0xaa0>
   106cc:	b	10808 <big2_prologTok+0xaa0>
   106d0:	b	10808 <big2_prologTok+0xaa0>
   106d4:	b	10808 <big2_prologTok+0xaa0>
   106d8:	b	10808 <big2_prologTok+0xaa0>
   106dc:	b	10808 <big2_prologTok+0xaa0>
   106e0:	b	10808 <big2_prologTok+0xaa0>
   106e4:	b	10808 <big2_prologTok+0xaa0>
   106e8:	b	10808 <big2_prologTok+0xaa0>
   106ec:	b	10808 <big2_prologTok+0xaa0>
   106f0:	b	10808 <big2_prologTok+0xaa0>
   106f4:	b	10764 <big2_prologTok+0x9fc>
   106f8:	b	10808 <big2_prologTok+0xaa0>
   106fc:	b	10764 <big2_prologTok+0x9fc>
   10700:	b	10764 <big2_prologTok+0x9fc>
   10704:	b	10764 <big2_prologTok+0x9fc>
   10708:	b	10764 <big2_prologTok+0x9fc>
   1070c:	b	10808 <big2_prologTok+0xaa0>
   10710:	b	10714 <big2_prologTok+0x9ac>
   10714:	ldr	ip, [pc, #416]	; 108bc <big2_prologTok+0xb54>
   10718:	ldrb	r0, [r7, #1]
   1071c:	and	r2, r0, #255	; 0xff
   10720:	asr	r1, r2, #5
   10724:	ldr	r0, [pc, #408]	; 108c4 <big2_prologTok+0xb5c>
   10728:	ldrb	r3, [r7]
   1072c:	and	r2, r3, #255	; 0xff
   10730:	ldrb	r2, [r0, r2]
   10734:	add	r0, r1, r2, lsl #3
   10738:	ldr	r2, [ip, r0, lsl #2]
   1073c:	mov	ip, #1
   10740:	ldrb	r0, [r7, #1]
   10744:	and	r3, r0, #31
   10748:	lsl	r3, ip, r3
   1074c:	and	r2, r2, r3
   10750:	cmp	r2, #0
   10754:	bne	10764 <big2_prologTok+0x9fc>
   10758:	str	r7, [r6]
   1075c:	mov	r0, #0
   10760:	b	10898 <big2_prologTok+0xb30>
   10764:	add	r7, r7, #2
   10768:	b	10468 <big2_prologTok+0x700>
   1076c:	sub	r0, r5, r7
   10770:	cmp	r0, #2
   10774:	bge	10780 <big2_prologTok+0xa18>
   10778:	mvn	r0, #1
   1077c:	b	10898 <big2_prologTok+0xb30>
   10780:	mov	r0, #1
   10784:	cmp	r0, #0
   10788:	beq	10798 <big2_prologTok+0xa30>
   1078c:	str	r7, [r6]
   10790:	mov	r0, #0
   10794:	b	10898 <big2_prologTok+0xb30>
   10798:	add	r7, r7, #2
   1079c:	b	10468 <big2_prologTok+0x700>
   107a0:	sub	ip, r5, r7
   107a4:	cmp	ip, #3
   107a8:	bge	107b4 <big2_prologTok+0xa4c>
   107ac:	mvn	r0, #1
   107b0:	b	10898 <big2_prologTok+0xb30>
   107b4:	mov	r3, #1
   107b8:	cmp	r3, #0
   107bc:	beq	107cc <big2_prologTok+0xa64>
   107c0:	str	r7, [r6]
   107c4:	mov	r0, #0
   107c8:	b	10898 <big2_prologTok+0xb30>
   107cc:	add	r7, r7, #3
   107d0:	b	10468 <big2_prologTok+0x700>
   107d4:	sub	ip, r5, r7
   107d8:	cmp	ip, #4
   107dc:	bge	107e8 <big2_prologTok+0xa80>
   107e0:	mvn	r0, #1
   107e4:	b	10898 <big2_prologTok+0xb30>
   107e8:	mov	r3, #1
   107ec:	cmp	r3, #0
   107f0:	beq	10800 <big2_prologTok+0xa98>
   107f4:	str	r7, [r6]
   107f8:	mov	r0, #0
   107fc:	b	10898 <big2_prologTok+0xb30>
   10800:	add	r7, r7, #4
   10804:	b	10468 <big2_prologTok+0x700>
   10808:	mov	r8, #19
   1080c:	b	10468 <big2_prologTok+0x700>
   10810:	cmp	r8, #19
   10814:	bne	10824 <big2_prologTok+0xabc>
   10818:	str	r7, [r6]
   1081c:	mov	r0, #0
   10820:	b	10898 <big2_prologTok+0xb30>
   10824:	add	r1, r7, #2
   10828:	str	r1, [r6]
   1082c:	mov	r0, #32
   10830:	b	10898 <big2_prologTok+0xb30>
   10834:	cmp	r8, #19
   10838:	bne	10848 <big2_prologTok+0xae0>
   1083c:	str	r7, [r6]
   10840:	mov	r0, #0
   10844:	b	10898 <big2_prologTok+0xb30>
   10848:	add	r1, r7, #2
   1084c:	str	r1, [r6]
   10850:	mov	r0, #31
   10854:	b	10898 <big2_prologTok+0xb30>
   10858:	cmp	r8, #19
   1085c:	bne	1086c <big2_prologTok+0xb04>
   10860:	str	r7, [r6]
   10864:	mov	r0, #0
   10868:	b	10898 <big2_prologTok+0xb30>
   1086c:	add	r3, r7, #2
   10870:	str	r3, [r6]
   10874:	mov	r0, #30
   10878:	b	10898 <big2_prologTok+0xb30>
   1087c:	str	r7, [r6]
   10880:	mov	r0, #0
   10884:	b	10898 <big2_prologTok+0xb30>
   10888:	rsb	r0, r8, #0
   1088c:	b	10898 <big2_prologTok+0xb30>
   10890:	str	r7, [r6]
   10894:	mov	r0, #0
   10898:	ldr	r4, [sp, #16]
   1089c:	ldr	r5, [sp, #20]
   108a0:	ldr	r6, [sp, #24]
   108a4:	ldr	r7, [sp, #28]
   108a8:	ldr	r8, [sp, #32]
   108ac:	ldr	r9, [sp, #36]	; 0x24
   108b0:	ldr	lr, [sp, #8]
   108b4:	add	sp, sp, #40	; 0x28
   108b8:	bx	lr
   108bc:	.word	0x00000000
   108c0:	.word	0x00000500
   108c4:	.word	0x00000600

000108c8 <big2_attributeValueTok>:
   108c8:	mov	ip, sp
   108cc:	sub	sp, sp, #32
   108d0:	str	ip, [sp]
   108d4:	str	lr, [sp, #4]
   108d8:	str	r4, [sp, #8]
   108dc:	str	r5, [sp, #12]
   108e0:	str	r6, [sp, #16]
   108e4:	str	r7, [sp, #20]
   108e8:	str	r8, [sp, #24]
   108ec:	mov	r4, r3
   108f0:	mov	r5, r2
   108f4:	mov	r6, r1
   108f8:	mov	r7, r0
   108fc:	cmp	r6, r5
   10900:	bne	1090c <big2_attributeValueTok+0x44>
   10904:	mvn	r0, #3
   10908:	b	10acc <big2_attributeValueTok+0x204>
   1090c:	mov	r8, r6
   10910:	cmp	r6, r5
   10914:	beq	10ac4 <big2_attributeValueTok+0x1fc>
   10918:	ldrb	r1, [r6]
   1091c:	cmp	r1, #0
   10920:	beq	1093c <big2_attributeValueTok+0x74>
   10924:	ldrb	r2, [r6]
   10928:	and	r0, r2, #255	; 0xff
   1092c:	ldrb	ip, [r6, #1]
   10930:	and	r1, ip, #255	; 0xff
   10934:	bl	5988 <unicode_byte_type>
   10938:	b	1094c <big2_attributeValueTok+0x84>
   1093c:	ldrb	r0, [r6, #1]
   10940:	and	r1, r0, #255	; 0xff
   10944:	add	r1, r7, r1
   10948:	ldrb	r0, [r1, #76]	; 0x4c
   1094c:	sub	r3, r0, #2
   10950:	cmp	r3, #20
   10954:	bcs	10abc <big2_attributeValueTok+0x1f4>
   10958:	add	pc, pc, r3, lsl #2
   1095c:	nop	{0}
   10960:	b	109f4 <big2_attributeValueTok+0x12c>
   10964:	b	109c8 <big2_attributeValueTok+0x100>
   10968:	b	10abc <big2_attributeValueTok+0x1f4>
   1096c:	b	109b0 <big2_attributeValueTok+0xe8>
   10970:	b	109b8 <big2_attributeValueTok+0xf0>
   10974:	b	109c0 <big2_attributeValueTok+0xf8>
   10978:	b	10abc <big2_attributeValueTok+0x1f4>
   1097c:	b	10a24 <big2_attributeValueTok+0x15c>
   10980:	b	10a00 <big2_attributeValueTok+0x138>
   10984:	b	10abc <big2_attributeValueTok+0x1f4>
   10988:	b	10abc <big2_attributeValueTok+0x1f4>
   1098c:	b	10abc <big2_attributeValueTok+0x1f4>
   10990:	b	10abc <big2_attributeValueTok+0x1f4>
   10994:	b	10abc <big2_attributeValueTok+0x1f4>
   10998:	b	10abc <big2_attributeValueTok+0x1f4>
   1099c:	b	10abc <big2_attributeValueTok+0x1f4>
   109a0:	b	10abc <big2_attributeValueTok+0x1f4>
   109a4:	b	10abc <big2_attributeValueTok+0x1f4>
   109a8:	b	10abc <big2_attributeValueTok+0x1f4>
   109ac:	b	10a98 <big2_attributeValueTok+0x1d0>
   109b0:	add	r6, r6, #2
   109b4:	b	10910 <big2_attributeValueTok+0x48>
   109b8:	add	r6, r6, #3
   109bc:	b	10910 <big2_attributeValueTok+0x48>
   109c0:	add	r6, r6, #4
   109c4:	b	10910 <big2_attributeValueTok+0x48>
   109c8:	cmp	r6, r8
   109cc:	bne	109e8 <big2_attributeValueTok+0x120>
   109d0:	add	r1, r6, #2
   109d4:	mov	r3, r4
   109d8:	mov	r2, r5
   109dc:	mov	r0, r7
   109e0:	bl	d7bc <big2_scanRef>
   109e4:	b	10acc <big2_attributeValueTok+0x204>
   109e8:	str	r6, [r4]
   109ec:	mov	r0, #6
   109f0:	b	10acc <big2_attributeValueTok+0x204>
   109f4:	str	r6, [r4]
   109f8:	mov	r0, #0
   109fc:	b	10acc <big2_attributeValueTok+0x204>
   10a00:	cmp	r6, r8
   10a04:	bne	10a18 <big2_attributeValueTok+0x150>
   10a08:	add	r1, r6, #2
   10a0c:	str	r1, [r4]
   10a10:	mov	r0, #7
   10a14:	b	10acc <big2_attributeValueTok+0x204>
   10a18:	str	r6, [r4]
   10a1c:	mov	r0, #6
   10a20:	b	10acc <big2_attributeValueTok+0x204>
   10a24:	cmp	r6, r8
   10a28:	bne	10a8c <big2_attributeValueTok+0x1c4>
   10a2c:	add	r6, r6, #2
   10a30:	cmp	r6, r5
   10a34:	bne	10a40 <big2_attributeValueTok+0x178>
   10a38:	mvn	r0, #2
   10a3c:	b	10acc <big2_attributeValueTok+0x204>
   10a40:	ldrb	r0, [r6]
   10a44:	cmp	r0, #0
   10a48:	beq	10a64 <big2_attributeValueTok+0x19c>
   10a4c:	ldrb	r2, [r6]
   10a50:	and	r0, r2, #255	; 0xff
   10a54:	ldrb	r2, [r6, #1]
   10a58:	and	r1, r2, #255	; 0xff
   10a5c:	bl	5988 <unicode_byte_type>
   10a60:	b	10a74 <big2_attributeValueTok+0x1ac>
   10a64:	ldrb	r0, [r6, #1]
   10a68:	and	r3, r0, #255	; 0xff
   10a6c:	add	r0, r7, r3
   10a70:	ldrb	r0, [r0, #76]	; 0x4c
   10a74:	cmp	r0, #10
   10a78:	bne	10a80 <big2_attributeValueTok+0x1b8>
   10a7c:	add	r6, r6, #2
   10a80:	str	r6, [r4]
   10a84:	mov	r0, #7
   10a88:	b	10acc <big2_attributeValueTok+0x204>
   10a8c:	str	r6, [r4]
   10a90:	mov	r0, #6
   10a94:	b	10acc <big2_attributeValueTok+0x204>
   10a98:	cmp	r6, r8
   10a9c:	bne	10ab0 <big2_attributeValueTok+0x1e8>
   10aa0:	add	r2, r6, #2
   10aa4:	str	r2, [r4]
   10aa8:	mov	r0, #39	; 0x27
   10aac:	b	10acc <big2_attributeValueTok+0x204>
   10ab0:	str	r6, [r4]
   10ab4:	mov	r0, #6
   10ab8:	b	10acc <big2_attributeValueTok+0x204>
   10abc:	add	r6, r6, #2
   10ac0:	b	10910 <big2_attributeValueTok+0x48>
   10ac4:	str	r6, [r4]
   10ac8:	mov	r0, #6
   10acc:	ldr	r4, [sp, #8]
   10ad0:	ldr	r5, [sp, #12]
   10ad4:	ldr	r6, [sp, #16]
   10ad8:	ldr	r7, [sp, #20]
   10adc:	ldr	r8, [sp, #24]
   10ae0:	ldr	lr, [sp, #4]
   10ae4:	add	sp, sp, #32
   10ae8:	bx	lr

00010aec <big2_entityValueTok>:
   10aec:	mov	ip, sp
   10af0:	sub	sp, sp, #32
   10af4:	str	ip, [sp]
   10af8:	str	lr, [sp, #4]
   10afc:	str	r4, [sp, #8]
   10b00:	str	r5, [sp, #12]
   10b04:	str	r6, [sp, #16]
   10b08:	str	r7, [sp, #20]
   10b0c:	str	r8, [sp, #24]
   10b10:	mov	r4, r3
   10b14:	mov	r5, r2
   10b18:	mov	r6, r1
   10b1c:	mov	r7, r0
   10b20:	cmp	r6, r5
   10b24:	bne	10b30 <big2_entityValueTok+0x44>
   10b28:	mvn	r0, #3
   10b2c:	b	10cdc <big2_entityValueTok+0x1f0>
   10b30:	mov	r8, r6
   10b34:	cmp	r6, r5
   10b38:	beq	10cd4 <big2_entityValueTok+0x1e8>
   10b3c:	ldrb	r2, [r6]
   10b40:	cmp	r2, #0
   10b44:	beq	10b60 <big2_entityValueTok+0x74>
   10b48:	ldrb	r0, [r6]
   10b4c:	and	r0, r0, #255	; 0xff
   10b50:	ldrb	r1, [r6, #1]
   10b54:	and	r1, r1, #255	; 0xff
   10b58:	bl	5988 <unicode_byte_type>
   10b5c:	b	10b70 <big2_entityValueTok+0x84>
   10b60:	ldrb	r2, [r6, #1]
   10b64:	and	r0, r2, #255	; 0xff
   10b68:	add	ip, r7, r0
   10b6c:	ldrb	r0, [ip, #76]	; 0x4c
   10b70:	cmp	r0, #7
   10b74:	bcs	10bcc <big2_entityValueTok+0xe0>
   10b78:	cmp	r0, #3
   10b7c:	beq	10ba0 <big2_entityValueTok+0xb4>
   10b80:	cmp	r0, #5
   10b84:	beq	10b98 <big2_entityValueTok+0xac>
   10b88:	cmp	r0, #6
   10b8c:	bne	10ca8 <big2_entityValueTok+0x1bc>
   10b90:	add	r6, r6, #3
   10b94:	b	10b34 <big2_entityValueTok+0x48>
   10b98:	add	r6, r6, #2
   10b9c:	b	10b34 <big2_entityValueTok+0x48>
   10ba0:	cmp	r6, r8
   10ba4:	bne	10bc0 <big2_entityValueTok+0xd4>
   10ba8:	add	r1, r6, #2
   10bac:	mov	r3, r4
   10bb0:	mov	r2, r5
   10bb4:	mov	r0, r7
   10bb8:	bl	d7bc <big2_scanRef>
   10bbc:	b	10cdc <big2_entityValueTok+0x1f0>
   10bc0:	str	r6, [r4]
   10bc4:	mov	r0, #6
   10bc8:	b	10cdc <big2_entityValueTok+0x1f0>
   10bcc:	cmp	r0, #10
   10bd0:	bcs	10c60 <big2_entityValueTok+0x174>
   10bd4:	cmp	r0, #7
   10bd8:	beq	10c58 <big2_entityValueTok+0x16c>
   10bdc:	cmp	r0, #9
   10be0:	bne	10ca8 <big2_entityValueTok+0x1bc>
   10be4:	cmp	r6, r8
   10be8:	bne	10c4c <big2_entityValueTok+0x160>
   10bec:	add	r6, r6, #2
   10bf0:	cmp	r6, r5
   10bf4:	bne	10c00 <big2_entityValueTok+0x114>
   10bf8:	mvn	r0, #2
   10bfc:	b	10cdc <big2_entityValueTok+0x1f0>
   10c00:	ldrb	r1, [r6]
   10c04:	cmp	r1, #0
   10c08:	beq	10c24 <big2_entityValueTok+0x138>
   10c0c:	ldrb	ip, [r6]
   10c10:	and	r0, ip, #255	; 0xff
   10c14:	ldrb	r1, [r6, #1]
   10c18:	and	r1, r1, #255	; 0xff
   10c1c:	bl	5988 <unicode_byte_type>
   10c20:	b	10c34 <big2_entityValueTok+0x148>
   10c24:	ldrb	r3, [r6, #1]
   10c28:	and	ip, r3, #255	; 0xff
   10c2c:	add	r1, r7, ip
   10c30:	ldrb	r0, [r1, #76]	; 0x4c
   10c34:	cmp	r0, #10
   10c38:	bne	10c40 <big2_entityValueTok+0x154>
   10c3c:	add	r6, r6, #2
   10c40:	str	r6, [r4]
   10c44:	mov	r0, #7
   10c48:	b	10cdc <big2_entityValueTok+0x1f0>
   10c4c:	str	r6, [r4]
   10c50:	mov	r0, #6
   10c54:	b	10cdc <big2_entityValueTok+0x1f0>
   10c58:	add	r6, r6, #4
   10c5c:	b	10b34 <big2_entityValueTok+0x48>
   10c60:	cmp	r0, #10
   10c64:	beq	10cb0 <big2_entityValueTok+0x1c4>
   10c68:	cmp	r0, #30
   10c6c:	bne	10ca8 <big2_entityValueTok+0x1bc>
   10c70:	cmp	r6, r8
   10c74:	bne	10c9c <big2_entityValueTok+0x1b0>
   10c78:	add	r1, r6, #2
   10c7c:	mov	r3, r4
   10c80:	mov	r2, r5
   10c84:	mov	r0, r7
   10c88:	bl	f39c <big2_scanPercent>
   10c8c:	cmp	r0, #22
   10c90:	bne	10cdc <big2_entityValueTok+0x1f0>
   10c94:	mov	r0, #0
   10c98:	b	10cdc <big2_entityValueTok+0x1f0>
   10c9c:	str	r6, [r4]
   10ca0:	mov	r0, #6
   10ca4:	b	10cdc <big2_entityValueTok+0x1f0>
   10ca8:	add	r6, r6, #2
   10cac:	b	10b34 <big2_entityValueTok+0x48>
   10cb0:	cmp	r6, r8
   10cb4:	bne	10cc8 <big2_entityValueTok+0x1dc>
   10cb8:	add	r1, r6, #2
   10cbc:	str	r1, [r4]
   10cc0:	mov	r0, #7
   10cc4:	b	10cdc <big2_entityValueTok+0x1f0>
   10cc8:	str	r6, [r4]
   10ccc:	mov	r0, #6
   10cd0:	b	10cdc <big2_entityValueTok+0x1f0>
   10cd4:	str	r6, [r4]
   10cd8:	mov	r0, #6
   10cdc:	ldr	r4, [sp, #8]
   10ce0:	ldr	r5, [sp, #12]
   10ce4:	ldr	r6, [sp, #16]
   10ce8:	ldr	r7, [sp, #20]
   10cec:	ldr	r8, [sp, #24]
   10cf0:	ldr	lr, [sp, #4]
   10cf4:	add	sp, sp, #32
   10cf8:	bx	lr

00010cfc <big2_ignoreSectionTok>:
   10cfc:	mov	ip, sp
   10d00:	sub	sp, sp, #32
   10d04:	str	ip, [sp]
   10d08:	str	lr, [sp, #4]
   10d0c:	str	r4, [sp, #8]
   10d10:	str	r5, [sp, #12]
   10d14:	str	r6, [sp, #16]
   10d18:	str	r7, [sp, #20]
   10d1c:	str	r8, [sp, #24]
   10d20:	mov	r5, r3
   10d24:	mov	r6, r2
   10d28:	mov	r4, r1
   10d2c:	mov	r7, r0
   10d30:	mov	r8, #0
   10d34:	mov	r3, #1
   10d38:	cmp	r3, #0
   10d3c:	beq	10d58 <big2_ignoreSectionTok+0x5c>
   10d40:	sub	r3, r6, r4
   10d44:	and	r0, r3, #1
   10d48:	cmp	r0, #0
   10d4c:	beq	10d58 <big2_ignoreSectionTok+0x5c>
   10d50:	bic	ip, r3, #1
   10d54:	add	r6, r4, ip
   10d58:	cmp	r4, r6
   10d5c:	beq	10fa4 <big2_ignoreSectionTok+0x2a8>
   10d60:	ldrb	r2, [r4]
   10d64:	cmp	r2, #0
   10d68:	beq	10d84 <big2_ignoreSectionTok+0x88>
   10d6c:	ldrb	r1, [r4]
   10d70:	and	r0, r1, #255	; 0xff
   10d74:	ldrb	ip, [r4, #1]
   10d78:	and	r1, ip, #255	; 0xff
   10d7c:	bl	5988 <unicode_byte_type>
   10d80:	b	10d94 <big2_ignoreSectionTok+0x98>
   10d84:	ldrb	r1, [r4, #1]
   10d88:	and	r1, r1, #255	; 0xff
   10d8c:	add	ip, r7, r1
   10d90:	ldrb	r0, [ip, #76]	; 0x4c
   10d94:	cmp	r0, #9
   10d98:	bcs	10f9c <big2_ignoreSectionTok+0x2a0>
   10d9c:	add	pc, pc, r0, lsl #2
   10da0:	nop	{0}
   10da4:	b	10e64 <big2_ignoreSectionTok+0x168>
   10da8:	b	10e64 <big2_ignoreSectionTok+0x168>
   10dac:	b	10e70 <big2_ignoreSectionTok+0x174>
   10db0:	b	10f9c <big2_ignoreSectionTok+0x2a0>
   10db4:	b	10efc <big2_ignoreSectionTok+0x200>
   10db8:	b	10dc8 <big2_ignoreSectionTok+0xcc>
   10dbc:	b	10dfc <big2_ignoreSectionTok+0x100>
   10dc0:	b	10e30 <big2_ignoreSectionTok+0x134>
   10dc4:	b	10e64 <big2_ignoreSectionTok+0x168>
   10dc8:	sub	ip, r6, r4
   10dcc:	cmp	ip, #2
   10dd0:	bge	10ddc <big2_ignoreSectionTok+0xe0>
   10dd4:	mvn	r0, #1
   10dd8:	b	10fa8 <big2_ignoreSectionTok+0x2ac>
   10ddc:	mov	r0, #0
   10de0:	cmp	r0, #0
   10de4:	beq	10df4 <big2_ignoreSectionTok+0xf8>
   10de8:	str	r4, [r5]
   10dec:	mov	r0, #0
   10df0:	b	10fa8 <big2_ignoreSectionTok+0x2ac>
   10df4:	add	r4, r4, #2
   10df8:	b	10d58 <big2_ignoreSectionTok+0x5c>
   10dfc:	sub	ip, r6, r4
   10e00:	cmp	ip, #3
   10e04:	bge	10e10 <big2_ignoreSectionTok+0x114>
   10e08:	mvn	r0, #1
   10e0c:	b	10fa8 <big2_ignoreSectionTok+0x2ac>
   10e10:	mov	r0, #0
   10e14:	cmp	r0, #0
   10e18:	beq	10e28 <big2_ignoreSectionTok+0x12c>
   10e1c:	str	r4, [r5]
   10e20:	mov	r0, #0
   10e24:	b	10fa8 <big2_ignoreSectionTok+0x2ac>
   10e28:	add	r4, r4, #3
   10e2c:	b	10d58 <big2_ignoreSectionTok+0x5c>
   10e30:	sub	r2, r6, r4
   10e34:	cmp	r2, #4
   10e38:	bge	10e44 <big2_ignoreSectionTok+0x148>
   10e3c:	mvn	r0, #1
   10e40:	b	10fa8 <big2_ignoreSectionTok+0x2ac>
   10e44:	mov	r2, #0
   10e48:	cmp	r2, #0
   10e4c:	beq	10e5c <big2_ignoreSectionTok+0x160>
   10e50:	str	r4, [r5]
   10e54:	mov	r0, #0
   10e58:	b	10fa8 <big2_ignoreSectionTok+0x2ac>
   10e5c:	add	r4, r4, #4
   10e60:	b	10d58 <big2_ignoreSectionTok+0x5c>
   10e64:	str	r4, [r5]
   10e68:	mov	r0, #0
   10e6c:	b	10fa8 <big2_ignoreSectionTok+0x2ac>
   10e70:	add	r4, r4, #2
   10e74:	cmp	r4, r6
   10e78:	bne	10e84 <big2_ignoreSectionTok+0x188>
   10e7c:	mvn	r0, #0
   10e80:	b	10fa8 <big2_ignoreSectionTok+0x2ac>
   10e84:	ldrb	r0, [r4]
   10e88:	cmp	r0, #0
   10e8c:	bne	10ea4 <big2_ignoreSectionTok+0x1a8>
   10e90:	ldrb	r2, [r4, #1]
   10e94:	cmp	r2, #33	; 0x21
   10e98:	moveq	r2, #1
   10e9c:	movne	r2, #0
   10ea0:	b	10ea8 <big2_ignoreSectionTok+0x1ac>
   10ea4:	mov	r2, #0
   10ea8:	cmp	r2, #0
   10eac:	beq	10d58 <big2_ignoreSectionTok+0x5c>
   10eb0:	add	r4, r4, #2
   10eb4:	cmp	r4, r6
   10eb8:	bne	10ec4 <big2_ignoreSectionTok+0x1c8>
   10ebc:	mvn	r0, #0
   10ec0:	b	10fa8 <big2_ignoreSectionTok+0x2ac>
   10ec4:	ldrb	r3, [r4]
   10ec8:	cmp	r3, #0
   10ecc:	bne	10ee4 <big2_ignoreSectionTok+0x1e8>
   10ed0:	ldrb	r0, [r4, #1]
   10ed4:	cmp	r0, #91	; 0x5b
   10ed8:	moveq	r1, #1
   10edc:	movne	r1, #0
   10ee0:	b	10ee8 <big2_ignoreSectionTok+0x1ec>
   10ee4:	mov	r1, #0
   10ee8:	cmp	r1, #0
   10eec:	beq	10d58 <big2_ignoreSectionTok+0x5c>
   10ef0:	add	r8, r8, #1
   10ef4:	add	r4, r4, #2
   10ef8:	b	10d58 <big2_ignoreSectionTok+0x5c>
   10efc:	add	r4, r4, #2
   10f00:	cmp	r4, r6
   10f04:	bne	10f10 <big2_ignoreSectionTok+0x214>
   10f08:	mvn	r0, #0
   10f0c:	b	10fa8 <big2_ignoreSectionTok+0x2ac>
   10f10:	ldrb	r2, [r4]
   10f14:	cmp	r2, #0
   10f18:	bne	10f30 <big2_ignoreSectionTok+0x234>
   10f1c:	ldrb	r0, [r4, #1]
   10f20:	cmp	r0, #93	; 0x5d
   10f24:	moveq	r3, #1
   10f28:	movne	r3, #0
   10f2c:	b	10f34 <big2_ignoreSectionTok+0x238>
   10f30:	mov	r3, #0
   10f34:	cmp	r3, #0
   10f38:	beq	10d58 <big2_ignoreSectionTok+0x5c>
   10f3c:	add	r4, r4, #2
   10f40:	cmp	r4, r6
   10f44:	bne	10f50 <big2_ignoreSectionTok+0x254>
   10f48:	mvn	r0, #0
   10f4c:	b	10fa8 <big2_ignoreSectionTok+0x2ac>
   10f50:	ldrb	r3, [r4]
   10f54:	cmp	r3, #0
   10f58:	bne	10f70 <big2_ignoreSectionTok+0x274>
   10f5c:	ldrb	r3, [r4, #1]
   10f60:	cmp	r3, #62	; 0x3e
   10f64:	moveq	r1, #1
   10f68:	movne	r1, #0
   10f6c:	b	10f74 <big2_ignoreSectionTok+0x278>
   10f70:	mov	r1, #0
   10f74:	cmp	r1, #0
   10f78:	beq	10d58 <big2_ignoreSectionTok+0x5c>
   10f7c:	add	r4, r4, #2
   10f80:	cmp	r8, #0
   10f84:	bne	10f94 <big2_ignoreSectionTok+0x298>
   10f88:	str	r4, [r5]
   10f8c:	mov	r0, #42	; 0x2a
   10f90:	b	10fa8 <big2_ignoreSectionTok+0x2ac>
   10f94:	sub	r8, r8, #1
   10f98:	b	10d58 <big2_ignoreSectionTok+0x5c>
   10f9c:	add	r4, r4, #2
   10fa0:	b	10d58 <big2_ignoreSectionTok+0x5c>
   10fa4:	mvn	r0, #0
   10fa8:	ldr	r4, [sp, #8]
   10fac:	ldr	r5, [sp, #12]
   10fb0:	ldr	r6, [sp, #16]
   10fb4:	ldr	r7, [sp, #20]
   10fb8:	ldr	r8, [sp, #24]
   10fbc:	ldr	lr, [sp, #4]
   10fc0:	add	sp, sp, #32
   10fc4:	bx	lr

00010fc8 <big2_isPublicId>:
   10fc8:	mov	ip, sp
   10fcc:	sub	sp, sp, #24
   10fd0:	str	ip, [sp]
   10fd4:	str	lr, [sp, #4]
   10fd8:	str	r4, [sp, #8]
   10fdc:	str	r5, [sp, #12]
   10fe0:	str	r6, [sp, #16]
   10fe4:	str	r7, [sp, #20]
   10fe8:	mov	r4, r3
   10fec:	mov	r5, r0
   10ff0:	add	r6, r1, #2
   10ff4:	sub	r7, r2, #2
   10ff8:	cmp	r6, r7
   10ffc:	beq	1114c <big2_isPublicId+0x184>
   11000:	ldrb	ip, [r6]
   11004:	cmp	ip, #0
   11008:	beq	11024 <big2_isPublicId+0x5c>
   1100c:	ldrb	r0, [r6]
   11010:	and	r0, r0, #255	; 0xff
   11014:	ldrb	r1, [r6, #1]
   11018:	and	r1, r1, #255	; 0xff
   1101c:	bl	5988 <unicode_byte_type>
   11020:	b	11034 <big2_isPublicId+0x6c>
   11024:	ldrb	r1, [r6, #1]
   11028:	and	r2, r1, #255	; 0xff
   1102c:	add	r0, r5, r2
   11030:	ldrb	r0, [r0, #76]	; 0x4c
   11034:	sub	r2, r0, #9
   11038:	cmp	r2, #27
   1103c:	bcs	11110 <big2_isPublicId+0x148>
   11040:	add	pc, pc, r2, lsl #2
   11044:	nop	{0}
   11048:	b	11144 <big2_isPublicId+0x17c>
   1104c:	b	11144 <big2_isPublicId+0x17c>
   11050:	b	11110 <big2_isPublicId+0x148>
   11054:	b	11110 <big2_isPublicId+0x148>
   11058:	b	11144 <big2_isPublicId+0x17c>
   1105c:	b	11144 <big2_isPublicId+0x17c>
   11060:	b	11144 <big2_isPublicId+0x17c>
   11064:	b	11144 <big2_isPublicId+0x17c>
   11068:	b	11144 <big2_isPublicId+0x17c>
   1106c:	b	11144 <big2_isPublicId+0x17c>
   11070:	b	11144 <big2_isPublicId+0x17c>
   11074:	b	11110 <big2_isPublicId+0x148>
   11078:	b	110b4 <big2_isPublicId+0xec>
   1107c:	b	110ec <big2_isPublicId+0x124>
   11080:	b	11144 <big2_isPublicId+0x17c>
   11084:	b	11144 <big2_isPublicId+0x17c>
   11088:	b	11144 <big2_isPublicId+0x17c>
   1108c:	b	110ec <big2_isPublicId+0x124>
   11090:	b	11144 <big2_isPublicId+0x17c>
   11094:	b	11110 <big2_isPublicId+0x148>
   11098:	b	11110 <big2_isPublicId+0x148>
   1109c:	b	11144 <big2_isPublicId+0x17c>
   110a0:	b	11144 <big2_isPublicId+0x17c>
   110a4:	b	11144 <big2_isPublicId+0x17c>
   110a8:	b	11144 <big2_isPublicId+0x17c>
   110ac:	b	11144 <big2_isPublicId+0x17c>
   110b0:	b	11144 <big2_isPublicId+0x17c>
   110b4:	ldrb	r3, [r6]
   110b8:	cmp	r3, #0
   110bc:	bne	110d4 <big2_isPublicId+0x10c>
   110c0:	ldrb	r1, [r6, #1]
   110c4:	cmp	r1, #9
   110c8:	moveq	r3, #1
   110cc:	movne	r3, #0
   110d0:	b	110d8 <big2_isPublicId+0x110>
   110d4:	mov	r3, #0
   110d8:	cmp	r3, #0
   110dc:	beq	11144 <big2_isPublicId+0x17c>
   110e0:	str	r6, [r4]
   110e4:	mov	r0, #0
   110e8:	b	11150 <big2_isPublicId+0x188>
   110ec:	ldrb	ip, [r6]
   110f0:	cmp	ip, #0
   110f4:	beq	11100 <big2_isPublicId+0x138>
   110f8:	mvn	ip, #0
   110fc:	b	11104 <big2_isPublicId+0x13c>
   11100:	ldrb	ip, [r6, #1]
   11104:	bic	r3, ip, #127	; 0x7f
   11108:	cmp	r3, #0
   1110c:	beq	11144 <big2_isPublicId+0x17c>
   11110:	ldrb	r1, [r6]
   11114:	cmp	r1, #0
   11118:	beq	11124 <big2_isPublicId+0x15c>
   1111c:	mvn	r0, #0
   11120:	b	11128 <big2_isPublicId+0x160>
   11124:	ldrb	r0, [r6, #1]
   11128:	cmp	r0, #36	; 0x24
   1112c:	beq	11144 <big2_isPublicId+0x17c>
   11130:	cmp	r0, #64	; 0x40
   11134:	beq	11144 <big2_isPublicId+0x17c>
   11138:	str	r6, [r4]
   1113c:	mov	r0, #0
   11140:	b	11150 <big2_isPublicId+0x188>
   11144:	add	r6, r6, #2
   11148:	b	10ff8 <big2_isPublicId+0x30>
   1114c:	mov	r0, #1
   11150:	ldr	r4, [sp, #8]
   11154:	ldr	r5, [sp, #12]
   11158:	ldr	r6, [sp, #16]
   1115c:	ldr	r7, [sp, #20]
   11160:	ldr	lr, [sp, #4]
   11164:	add	sp, sp, #24
   11168:	bx	lr

0001116c <big2_getAtts>:
   1116c:	mov	ip, sp
   11170:	sub	sp, sp, #40	; 0x28
   11174:	str	ip, [sp]
   11178:	str	lr, [sp, #4]
   1117c:	str	r4, [sp, #8]
   11180:	str	r5, [sp, #12]
   11184:	str	r6, [sp, #16]
   11188:	str	r7, [sp, #20]
   1118c:	str	r8, [sp, #24]
   11190:	str	r9, [sp, #28]
   11194:	str	sl, [sp, #32]
   11198:	mov	r4, r3
   1119c:	mov	r5, r2
   111a0:	mov	r6, r0
   111a4:	mov	r9, #1
   111a8:	mov	r7, #0
   111ac:	mov	r8, #0
   111b0:	add	sl, r1, #2
   111b4:	ldrb	r3, [sl]
   111b8:	cmp	r3, #0
   111bc:	beq	111d8 <big2_getAtts+0x6c>
   111c0:	ldrb	r2, [sl]
   111c4:	and	r0, r2, #255	; 0xff
   111c8:	ldrb	r1, [sl, #1]
   111cc:	and	r1, r1, #255	; 0xff
   111d0:	bl	5988 <unicode_byte_type>
   111d4:	b	111e8 <big2_getAtts+0x7c>
   111d8:	ldrb	r0, [sl, #1]
   111dc:	and	r1, r0, #255	; 0xff
   111e0:	add	r0, r6, r1
   111e4:	ldrb	r0, [r0, #76]	; 0x4c
   111e8:	sub	r0, r0, #3
   111ec:	cmp	r0, #27
   111f0:	bcs	1157c <big2_getAtts+0x410>
   111f4:	add	pc, pc, r0, lsl #2
   111f8:	nop	{0}
   111fc:	b	113a8 <big2_getAtts+0x23c>
   11200:	b	1157c <big2_getAtts+0x410>
   11204:	b	11268 <big2_getAtts+0xfc>
   11208:	b	11290 <big2_getAtts+0x124>
   1120c:	b	112bc <big2_getAtts+0x150>
   11210:	b	1157c <big2_getAtts+0x410>
   11214:	b	11504 <big2_getAtts+0x398>
   11218:	b	11504 <big2_getAtts+0x398>
   1121c:	b	11548 <big2_getAtts+0x3dc>
   11220:	b	11310 <big2_getAtts+0x1a4>
   11224:	b	1135c <big2_getAtts+0x1f0>
   11228:	b	1157c <big2_getAtts+0x410>
   1122c:	b	1157c <big2_getAtts+0x410>
   11230:	b	1157c <big2_getAtts+0x410>
   11234:	b	11548 <big2_getAtts+0x3dc>
   11238:	b	1157c <big2_getAtts+0x410>
   1123c:	b	1157c <big2_getAtts+0x410>
   11240:	b	1157c <big2_getAtts+0x410>
   11244:	b	113c0 <big2_getAtts+0x254>
   11248:	b	112e8 <big2_getAtts+0x17c>
   1124c:	b	1157c <big2_getAtts+0x410>
   11250:	b	112e8 <big2_getAtts+0x17c>
   11254:	b	1157c <big2_getAtts+0x410>
   11258:	b	1157c <big2_getAtts+0x410>
   1125c:	b	1157c <big2_getAtts+0x410>
   11260:	b	1157c <big2_getAtts+0x410>
   11264:	b	112e8 <big2_getAtts+0x17c>
   11268:	cmp	r9, #0
   1126c:	bne	1157c <big2_getAtts+0x410>
   11270:	cmp	r7, r5
   11274:	bge	11288 <big2_getAtts+0x11c>
   11278:	str	sl, [r4, r7, lsl #4]
   1127c:	add	r2, r4, r7, lsl #4
   11280:	mov	r1, #1
   11284:	strb	r1, [r2, #12]
   11288:	mov	r9, #1
   1128c:	b	1157c <big2_getAtts+0x410>
   11290:	cmp	r9, #0
   11294:	bne	112b4 <big2_getAtts+0x148>
   11298:	cmp	r7, r5
   1129c:	bge	112b0 <big2_getAtts+0x144>
   112a0:	str	sl, [r4, r7, lsl #4]
   112a4:	add	ip, r4, r7, lsl #4
   112a8:	mov	r0, #1
   112ac:	strb	r0, [ip, #12]
   112b0:	mov	r9, #1
   112b4:	add	sl, sl, #1
   112b8:	b	1157c <big2_getAtts+0x410>
   112bc:	cmp	r9, #0
   112c0:	bne	112e0 <big2_getAtts+0x174>
   112c4:	cmp	r7, r5
   112c8:	bge	112dc <big2_getAtts+0x170>
   112cc:	str	sl, [r4, r7, lsl #4]
   112d0:	add	ip, r4, r7, lsl #4
   112d4:	mov	r1, #1
   112d8:	strb	r1, [ip, #12]
   112dc:	mov	r9, #1
   112e0:	add	sl, sl, #2
   112e4:	b	1157c <big2_getAtts+0x410>
   112e8:	cmp	r9, #0
   112ec:	bne	1157c <big2_getAtts+0x410>
   112f0:	cmp	r7, r5
   112f4:	bge	11308 <big2_getAtts+0x19c>
   112f8:	str	sl, [r4, r7, lsl #4]
   112fc:	add	ip, r4, r7, lsl #4
   11300:	mov	r0, #1
   11304:	strb	r0, [ip, #12]
   11308:	mov	r9, #1
   1130c:	b	1157c <big2_getAtts+0x410>
   11310:	cmp	r9, #2
   11314:	beq	11338 <big2_getAtts+0x1cc>
   11318:	cmp	r7, r5
   1131c:	bge	1132c <big2_getAtts+0x1c0>
   11320:	add	r3, r4, r7, lsl #4
   11324:	add	ip, sl, #2
   11328:	str	ip, [r3, #4]
   1132c:	mov	r9, #2
   11330:	mov	r8, #12
   11334:	b	1157c <big2_getAtts+0x410>
   11338:	cmp	r8, #12
   1133c:	bne	1157c <big2_getAtts+0x410>
   11340:	mov	r9, #0
   11344:	cmp	r7, r5
   11348:	bge	11354 <big2_getAtts+0x1e8>
   1134c:	add	r2, r4, r7, lsl #4
   11350:	str	sl, [r2, #8]
   11354:	add	r7, r7, #1
   11358:	b	1157c <big2_getAtts+0x410>
   1135c:	cmp	r9, #2
   11360:	beq	11384 <big2_getAtts+0x218>
   11364:	cmp	r7, r5
   11368:	bge	11378 <big2_getAtts+0x20c>
   1136c:	add	ip, r4, r7, lsl #4
   11370:	add	r0, sl, #2
   11374:	str	r0, [ip, #4]
   11378:	mov	r9, #2
   1137c:	mov	r8, #13
   11380:	b	1157c <big2_getAtts+0x410>
   11384:	cmp	r8, #13
   11388:	bne	1157c <big2_getAtts+0x410>
   1138c:	mov	r9, #0
   11390:	cmp	r7, r5
   11394:	bge	113a0 <big2_getAtts+0x234>
   11398:	add	r0, r4, r7, lsl #4
   1139c:	str	sl, [r0, #8]
   113a0:	add	r7, r7, #1
   113a4:	b	1157c <big2_getAtts+0x410>
   113a8:	cmp	r7, r5
   113ac:	bge	1157c <big2_getAtts+0x410>
   113b0:	add	ip, r4, r7, lsl #4
   113b4:	mov	r3, #0
   113b8:	strb	r3, [ip, #12]
   113bc:	b	1157c <big2_getAtts+0x410>
   113c0:	cmp	r9, #1
   113c4:	beq	114fc <big2_getAtts+0x390>
   113c8:	cmp	r9, #2
   113cc:	beq	113d8 <big2_getAtts+0x26c>
   113d0:	mov	r3, #0
   113d4:	b	113e4 <big2_getAtts+0x278>
   113d8:	cmp	r7, r5
   113dc:	movlt	r3, #1
   113e0:	movge	r3, #0
   113e4:	cmp	r3, #0
   113e8:	beq	11404 <big2_getAtts+0x298>
   113ec:	add	r3, r4, r7, lsl #4
   113f0:	ldrb	ip, [r3, #12]
   113f4:	cmp	ip, #0
   113f8:	movne	r3, #1
   113fc:	moveq	r3, #0
   11400:	b	11408 <big2_getAtts+0x29c>
   11404:	mov	r3, #0
   11408:	cmp	r3, #0
   1140c:	beq	114e0 <big2_getAtts+0x374>
   11410:	add	r2, r4, r7, lsl #4
   11414:	ldr	r2, [r2, #4]
   11418:	cmp	sl, r2
   1141c:	beq	11448 <big2_getAtts+0x2dc>
   11420:	ldrb	ip, [sl]
   11424:	cmp	ip, #0
   11428:	beq	11434 <big2_getAtts+0x2c8>
   1142c:	mvn	r2, #0
   11430:	b	11438 <big2_getAtts+0x2cc>
   11434:	ldrb	r2, [sl, #1]
   11438:	cmp	r2, #32
   1143c:	movne	r2, #1
   11440:	moveq	r2, #0
   11444:	b	1144c <big2_getAtts+0x2e0>
   11448:	mov	r2, #1
   1144c:	cmp	r2, #0
   11450:	bne	1147c <big2_getAtts+0x310>
   11454:	ldrb	r1, [sl, #2]
   11458:	cmp	r1, #0
   1145c:	beq	11468 <big2_getAtts+0x2fc>
   11460:	mvn	r1, #0
   11464:	b	1146c <big2_getAtts+0x300>
   11468:	ldrb	r1, [sl, #3]
   1146c:	cmp	r1, #32
   11470:	moveq	r3, #1
   11474:	movne	r3, #0
   11478:	b	11480 <big2_getAtts+0x314>
   1147c:	mov	r3, #1
   11480:	cmp	r3, #0
   11484:	bne	114d8 <big2_getAtts+0x36c>
   11488:	ldrb	r2, [sl, #2]
   1148c:	cmp	r2, #0
   11490:	beq	114ac <big2_getAtts+0x340>
   11494:	ldrb	r0, [sl, #2]
   11498:	and	r0, r0, #255	; 0xff
   1149c:	ldrb	r1, [sl, #3]
   114a0:	and	r1, r1, #255	; 0xff
   114a4:	bl	5988 <unicode_byte_type>
   114a8:	b	114bc <big2_getAtts+0x350>
   114ac:	ldrb	ip, [sl, #3]
   114b0:	and	r1, ip, #255	; 0xff
   114b4:	add	r3, r6, r1
   114b8:	ldrb	r0, [r3, #76]	; 0x4c
   114bc:	cmp	r0, r8
   114c0:	moveq	ip, #1
   114c4:	movne	ip, #0
   114c8:	cmp	ip, #0
   114cc:	movne	r0, #1
   114d0:	moveq	r0, #0
   114d4:	b	114e4 <big2_getAtts+0x378>
   114d8:	mov	r0, #1
   114dc:	b	114e4 <big2_getAtts+0x378>
   114e0:	mov	r0, #0
   114e4:	cmp	r0, #0
   114e8:	beq	1157c <big2_getAtts+0x410>
   114ec:	add	r0, r4, r7, lsl #4
   114f0:	mov	r1, #0
   114f4:	strb	r1, [r0, #12]
   114f8:	b	1157c <big2_getAtts+0x410>
   114fc:	mov	r9, #0
   11500:	b	1157c <big2_getAtts+0x410>
   11504:	cmp	r9, #1
   11508:	beq	11540 <big2_getAtts+0x3d4>
   1150c:	cmp	r9, #2
   11510:	beq	1151c <big2_getAtts+0x3b0>
   11514:	mov	r0, #0
   11518:	b	11528 <big2_getAtts+0x3bc>
   1151c:	cmp	r7, r5
   11520:	movlt	r0, #1
   11524:	movge	r0, #0
   11528:	cmp	r0, #0
   1152c:	beq	1157c <big2_getAtts+0x410>
   11530:	add	r0, r4, r7, lsl #4
   11534:	mov	r2, #0
   11538:	strb	r2, [r0, #12]
   1153c:	b	1157c <big2_getAtts+0x410>
   11540:	mov	r9, #0
   11544:	b	1157c <big2_getAtts+0x410>
   11548:	cmp	r9, #2
   1154c:	beq	1157c <big2_getAtts+0x410>
   11550:	mov	r0, r7
   11554:	ldr	r4, [sp, #8]
   11558:	ldr	r5, [sp, #12]
   1155c:	ldr	r6, [sp, #16]
   11560:	ldr	r7, [sp, #20]
   11564:	ldr	r8, [sp, #24]
   11568:	ldr	r9, [sp, #28]
   1156c:	ldr	sl, [sp, #32]
   11570:	ldr	lr, [sp, #4]
   11574:	add	sp, sp, #40	; 0x28
   11578:	bx	lr
   1157c:	add	sl, sl, #2
   11580:	b	111b4 <big2_getAtts+0x48>

00011584 <big2_charRefNumber>:
   11584:	mov	ip, sp
   11588:	sub	sp, sp, #16
   1158c:	str	ip, [sp]
   11590:	str	lr, [sp, #4]
   11594:	str	r4, [sp, #8]
   11598:	mov	r0, #0
   1159c:	add	r4, r1, #4
   115a0:	ldrb	r3, [r4]
   115a4:	cmp	r3, #0
   115a8:	bne	115c0 <big2_charRefNumber+0x3c>
   115ac:	ldrb	r2, [r4, #1]
   115b0:	cmp	r2, #120	; 0x78
   115b4:	moveq	r1, #1
   115b8:	movne	r1, #0
   115bc:	b	115c4 <big2_charRefNumber+0x40>
   115c0:	mov	r1, #0
   115c4:	cmp	r1, #0
   115c8:	beq	11748 <big2_charRefNumber+0x1c4>
   115cc:	add	r4, r4, #2
   115d0:	ldrb	ip, [r4]
   115d4:	cmp	ip, #0
   115d8:	bne	115f0 <big2_charRefNumber+0x6c>
   115dc:	ldrb	r2, [r4, #1]
   115e0:	cmp	r2, #59	; 0x3b
   115e4:	moveq	r2, #1
   115e8:	movne	r2, #0
   115ec:	b	115f4 <big2_charRefNumber+0x70>
   115f0:	mov	r2, #0
   115f4:	cmp	r2, #0
   115f8:	bne	117b4 <big2_charRefNumber+0x230>
   115fc:	ldrb	ip, [r4]
   11600:	cmp	ip, #0
   11604:	beq	11610 <big2_charRefNumber+0x8c>
   11608:	mvn	r1, #0
   1160c:	b	11614 <big2_charRefNumber+0x90>
   11610:	ldrb	r1, [r4, #1]
   11614:	sub	r3, r1, #48	; 0x30
   11618:	cmp	r3, #55	; 0x37
   1161c:	bcs	11730 <big2_charRefNumber+0x1ac>
   11620:	add	pc, pc, r3, lsl #2
   11624:	nop	{0}
   11628:	b	11704 <big2_charRefNumber+0x180>
   1162c:	b	11704 <big2_charRefNumber+0x180>
   11630:	b	11704 <big2_charRefNumber+0x180>
   11634:	b	11704 <big2_charRefNumber+0x180>
   11638:	b	11704 <big2_charRefNumber+0x180>
   1163c:	b	11704 <big2_charRefNumber+0x180>
   11640:	b	11704 <big2_charRefNumber+0x180>
   11644:	b	11704 <big2_charRefNumber+0x180>
   11648:	b	11704 <big2_charRefNumber+0x180>
   1164c:	b	11704 <big2_charRefNumber+0x180>
   11650:	b	11730 <big2_charRefNumber+0x1ac>
   11654:	b	11730 <big2_charRefNumber+0x1ac>
   11658:	b	11730 <big2_charRefNumber+0x1ac>
   1165c:	b	11730 <big2_charRefNumber+0x1ac>
   11660:	b	11730 <big2_charRefNumber+0x1ac>
   11664:	b	11730 <big2_charRefNumber+0x1ac>
   11668:	b	11730 <big2_charRefNumber+0x1ac>
   1166c:	b	11714 <big2_charRefNumber+0x190>
   11670:	b	11714 <big2_charRefNumber+0x190>
   11674:	b	11714 <big2_charRefNumber+0x190>
   11678:	b	11714 <big2_charRefNumber+0x190>
   1167c:	b	11714 <big2_charRefNumber+0x190>
   11680:	b	11714 <big2_charRefNumber+0x190>
   11684:	b	11730 <big2_charRefNumber+0x1ac>
   11688:	b	11730 <big2_charRefNumber+0x1ac>
   1168c:	b	11730 <big2_charRefNumber+0x1ac>
   11690:	b	11730 <big2_charRefNumber+0x1ac>
   11694:	b	11730 <big2_charRefNumber+0x1ac>
   11698:	b	11730 <big2_charRefNumber+0x1ac>
   1169c:	b	11730 <big2_charRefNumber+0x1ac>
   116a0:	b	11730 <big2_charRefNumber+0x1ac>
   116a4:	b	11730 <big2_charRefNumber+0x1ac>
   116a8:	b	11730 <big2_charRefNumber+0x1ac>
   116ac:	b	11730 <big2_charRefNumber+0x1ac>
   116b0:	b	11730 <big2_charRefNumber+0x1ac>
   116b4:	b	11730 <big2_charRefNumber+0x1ac>
   116b8:	b	11730 <big2_charRefNumber+0x1ac>
   116bc:	b	11730 <big2_charRefNumber+0x1ac>
   116c0:	b	11730 <big2_charRefNumber+0x1ac>
   116c4:	b	11730 <big2_charRefNumber+0x1ac>
   116c8:	b	11730 <big2_charRefNumber+0x1ac>
   116cc:	b	11730 <big2_charRefNumber+0x1ac>
   116d0:	b	11730 <big2_charRefNumber+0x1ac>
   116d4:	b	11730 <big2_charRefNumber+0x1ac>
   116d8:	b	11730 <big2_charRefNumber+0x1ac>
   116dc:	b	11730 <big2_charRefNumber+0x1ac>
   116e0:	b	11730 <big2_charRefNumber+0x1ac>
   116e4:	b	11730 <big2_charRefNumber+0x1ac>
   116e8:	b	11730 <big2_charRefNumber+0x1ac>
   116ec:	b	11724 <big2_charRefNumber+0x1a0>
   116f0:	b	11724 <big2_charRefNumber+0x1a0>
   116f4:	b	11724 <big2_charRefNumber+0x1a0>
   116f8:	b	11724 <big2_charRefNumber+0x1a0>
   116fc:	b	11724 <big2_charRefNumber+0x1a0>
   11700:	b	11724 <big2_charRefNumber+0x1a0>
   11704:	lsl	r3, r0, #4
   11708:	sub	r2, r1, #48	; 0x30
   1170c:	orr	r0, r3, r2
   11710:	b	11730 <big2_charRefNumber+0x1ac>
   11714:	lsl	r0, r0, #4
   11718:	add	r0, r0, r1
   1171c:	sub	r0, r0, #55	; 0x37
   11720:	b	11730 <big2_charRefNumber+0x1ac>
   11724:	lsl	r3, r0, #4
   11728:	add	r2, r3, r1
   1172c:	sub	r0, r2, #87	; 0x57
   11730:	cmp	r0, #1114112	; 0x110000
   11734:	blt	11740 <big2_charRefNumber+0x1bc>
   11738:	mvn	r0, #0
   1173c:	b	117b8 <big2_charRefNumber+0x234>
   11740:	add	r4, r4, #2
   11744:	b	115d0 <big2_charRefNumber+0x4c>
   11748:	ldrb	r1, [r4]
   1174c:	cmp	r1, #0
   11750:	bne	11768 <big2_charRefNumber+0x1e4>
   11754:	ldrb	r1, [r4, #1]
   11758:	cmp	r1, #59	; 0x3b
   1175c:	moveq	ip, #1
   11760:	movne	ip, #0
   11764:	b	1176c <big2_charRefNumber+0x1e8>
   11768:	mov	ip, #0
   1176c:	cmp	ip, #0
   11770:	bne	117b4 <big2_charRefNumber+0x230>
   11774:	ldrb	ip, [r4]
   11778:	cmp	ip, #0
   1177c:	beq	11788 <big2_charRefNumber+0x204>
   11780:	mvn	r1, #0
   11784:	b	1178c <big2_charRefNumber+0x208>
   11788:	ldrb	r1, [r4, #1]
   1178c:	lsl	r2, r0, #3
   11790:	add	r2, r2, r0, lsl #1
   11794:	add	r0, r2, r1
   11798:	sub	r0, r0, #48	; 0x30
   1179c:	cmp	r0, #1114112	; 0x110000
   117a0:	blt	117ac <big2_charRefNumber+0x228>
   117a4:	mvn	r0, #0
   117a8:	b	117b8 <big2_charRefNumber+0x234>
   117ac:	add	r4, r4, #2
   117b0:	b	11748 <big2_charRefNumber+0x1c4>
   117b4:	bl	12ac0 <checkCharRefNumber>
   117b8:	ldr	r4, [sp, #8]
   117bc:	ldr	lr, [sp, #4]
   117c0:	add	sp, sp, #16
   117c4:	bx	lr

000117c8 <big2_predefinedEntityName>:
   117c8:	mov	ip, sp
   117cc:	sub	sp, sp, #8
   117d0:	str	ip, [sp]
   117d4:	str	lr, [sp, #4]
   117d8:	sub	ip, r2, r1
   117dc:	asr	lr, ip, #31
   117e0:	add	lr, ip, lr, lsr #31
   117e4:	asr	ip, lr, #1
   117e8:	cmp	ip, #2
   117ec:	beq	119ec <big2_predefinedEntityName+0x224>
   117f0:	cmp	ip, #3
   117f4:	beq	11958 <big2_predefinedEntityName+0x190>
   117f8:	cmp	ip, #4
   117fc:	bne	11a50 <big2_predefinedEntityName+0x288>
   11800:	ldrb	r0, [r1]
   11804:	cmp	r0, #0
   11808:	beq	11814 <big2_predefinedEntityName+0x4c>
   1180c:	mvn	r0, #0
   11810:	b	11818 <big2_predefinedEntityName+0x50>
   11814:	ldrb	r0, [r1, #1]
   11818:	cmp	r0, #97	; 0x61
   1181c:	beq	118c0 <big2_predefinedEntityName+0xf8>
   11820:	cmp	r0, #113	; 0x71
   11824:	bne	11a50 <big2_predefinedEntityName+0x288>
   11828:	add	r3, r1, #2
   1182c:	ldrb	r1, [r3]
   11830:	cmp	r1, #0
   11834:	bne	1184c <big2_predefinedEntityName+0x84>
   11838:	ldrb	ip, [r3, #1]
   1183c:	cmp	ip, #117	; 0x75
   11840:	moveq	ip, #1
   11844:	movne	ip, #0
   11848:	b	11850 <big2_predefinedEntityName+0x88>
   1184c:	mov	ip, #0
   11850:	cmp	ip, #0
   11854:	beq	11a50 <big2_predefinedEntityName+0x288>
   11858:	add	r0, r3, #2
   1185c:	ldrb	r1, [r0]
   11860:	cmp	r1, #0
   11864:	bne	1187c <big2_predefinedEntityName+0xb4>
   11868:	ldrb	ip, [r0, #1]
   1186c:	cmp	ip, #111	; 0x6f
   11870:	moveq	r2, #1
   11874:	movne	r2, #0
   11878:	b	11880 <big2_predefinedEntityName+0xb8>
   1187c:	mov	r2, #0
   11880:	cmp	r2, #0
   11884:	beq	11a50 <big2_predefinedEntityName+0x288>
   11888:	add	ip, r0, #2
   1188c:	ldrb	r2, [ip]
   11890:	cmp	r2, #0
   11894:	bne	118ac <big2_predefinedEntityName+0xe4>
   11898:	ldrb	r0, [ip, #1]
   1189c:	cmp	r0, #116	; 0x74
   118a0:	moveq	r0, #1
   118a4:	movne	r0, #0
   118a8:	b	118b0 <big2_predefinedEntityName+0xe8>
   118ac:	mov	r0, #0
   118b0:	cmp	r0, #0
   118b4:	beq	11a50 <big2_predefinedEntityName+0x288>
   118b8:	mov	r0, #34	; 0x22
   118bc:	b	11a54 <big2_predefinedEntityName+0x28c>
   118c0:	add	r2, r1, #2
   118c4:	ldrb	r3, [r2]
   118c8:	cmp	r3, #0
   118cc:	bne	118e4 <big2_predefinedEntityName+0x11c>
   118d0:	ldrb	r1, [r2, #1]
   118d4:	cmp	r1, #112	; 0x70
   118d8:	moveq	r3, #1
   118dc:	movne	r3, #0
   118e0:	b	118e8 <big2_predefinedEntityName+0x120>
   118e4:	mov	r3, #0
   118e8:	cmp	r3, #0
   118ec:	beq	11a50 <big2_predefinedEntityName+0x288>
   118f0:	add	ip, r2, #2
   118f4:	ldrb	r2, [ip]
   118f8:	cmp	r2, #0
   118fc:	bne	11914 <big2_predefinedEntityName+0x14c>
   11900:	ldrb	r3, [ip, #1]
   11904:	cmp	r3, #111	; 0x6f
   11908:	moveq	r3, #1
   1190c:	movne	r3, #0
   11910:	b	11918 <big2_predefinedEntityName+0x150>
   11914:	mov	r3, #0
   11918:	cmp	r3, #0
   1191c:	beq	11a50 <big2_predefinedEntityName+0x288>
   11920:	add	r3, ip, #2
   11924:	ldrb	r1, [r3]
   11928:	cmp	r1, #0
   1192c:	bne	11944 <big2_predefinedEntityName+0x17c>
   11930:	ldrb	r0, [r3, #1]
   11934:	cmp	r0, #115	; 0x73
   11938:	moveq	r0, #1
   1193c:	movne	r0, #0
   11940:	b	11948 <big2_predefinedEntityName+0x180>
   11944:	mov	r0, #0
   11948:	cmp	r0, #0
   1194c:	beq	11a50 <big2_predefinedEntityName+0x288>
   11950:	mov	r0, #39	; 0x27
   11954:	b	11a54 <big2_predefinedEntityName+0x28c>
   11958:	ldrb	r3, [r1]
   1195c:	cmp	r3, #0
   11960:	bne	11978 <big2_predefinedEntityName+0x1b0>
   11964:	ldrb	r2, [r1, #1]
   11968:	cmp	r2, #97	; 0x61
   1196c:	moveq	r2, #1
   11970:	movne	r2, #0
   11974:	b	1197c <big2_predefinedEntityName+0x1b4>
   11978:	mov	r2, #0
   1197c:	cmp	r2, #0
   11980:	beq	11a50 <big2_predefinedEntityName+0x288>
   11984:	add	r2, r1, #2
   11988:	ldrb	r0, [r2]
   1198c:	cmp	r0, #0
   11990:	bne	119a8 <big2_predefinedEntityName+0x1e0>
   11994:	ldrb	ip, [r2, #1]
   11998:	cmp	ip, #109	; 0x6d
   1199c:	moveq	r0, #1
   119a0:	movne	r0, #0
   119a4:	b	119ac <big2_predefinedEntityName+0x1e4>
   119a8:	mov	r0, #0
   119ac:	cmp	r0, #0
   119b0:	beq	11a50 <big2_predefinedEntityName+0x288>
   119b4:	add	r0, r2, #2
   119b8:	ldrb	ip, [r0]
   119bc:	cmp	ip, #0
   119c0:	bne	119d8 <big2_predefinedEntityName+0x210>
   119c4:	ldrb	r0, [r0, #1]
   119c8:	cmp	r0, #112	; 0x70
   119cc:	moveq	r0, #1
   119d0:	movne	r0, #0
   119d4:	b	119dc <big2_predefinedEntityName+0x214>
   119d8:	mov	r0, #0
   119dc:	cmp	r0, #0
   119e0:	beq	11a50 <big2_predefinedEntityName+0x288>
   119e4:	mov	r0, #38	; 0x26
   119e8:	b	11a54 <big2_predefinedEntityName+0x28c>
   119ec:	ldrb	r0, [r1, #2]
   119f0:	cmp	r0, #0
   119f4:	bne	11a0c <big2_predefinedEntityName+0x244>
   119f8:	ldrb	r2, [r1, #3]
   119fc:	cmp	r2, #116	; 0x74
   11a00:	moveq	r2, #1
   11a04:	movne	r2, #0
   11a08:	b	11a10 <big2_predefinedEntityName+0x248>
   11a0c:	mov	r2, #0
   11a10:	cmp	r2, #0
   11a14:	beq	11a50 <big2_predefinedEntityName+0x288>
   11a18:	ldrb	r0, [r1]
   11a1c:	cmp	r0, #0
   11a20:	beq	11a2c <big2_predefinedEntityName+0x264>
   11a24:	mvn	r1, #0
   11a28:	b	11a30 <big2_predefinedEntityName+0x268>
   11a2c:	ldrb	r1, [r1, #1]
   11a30:	cmp	r1, #103	; 0x67
   11a34:	beq	11a48 <big2_predefinedEntityName+0x280>
   11a38:	cmp	r1, #108	; 0x6c
   11a3c:	bne	11a50 <big2_predefinedEntityName+0x288>
   11a40:	mov	r0, #60	; 0x3c
   11a44:	b	11a54 <big2_predefinedEntityName+0x28c>
   11a48:	mov	r0, #62	; 0x3e
   11a4c:	b	11a54 <big2_predefinedEntityName+0x28c>
   11a50:	mov	r0, #0
   11a54:	ldr	lr, [sp, #4]
   11a58:	add	sp, sp, #8
   11a5c:	bx	lr

00011a60 <big2_sameName>:
   11a60:	mov	ip, sp
   11a64:	sub	sp, sp, #24
   11a68:	str	ip, [sp]
   11a6c:	str	lr, [sp, #4]
   11a70:	str	r4, [sp, #8]
   11a74:	str	r5, [sp, #12]
   11a78:	str	r6, [sp, #16]
   11a7c:	mov	r5, r2
   11a80:	mov	r4, r1
   11a84:	mov	r6, r0
   11a88:	ldrb	r2, [r4]
   11a8c:	cmp	r2, #0
   11a90:	beq	11aac <big2_sameName+0x4c>
   11a94:	ldrb	r0, [r4]
   11a98:	and	r0, r0, #255	; 0xff
   11a9c:	ldrb	r3, [r4, #1]
   11aa0:	and	r1, r3, #255	; 0xff
   11aa4:	bl	5988 <unicode_byte_type>
   11aa8:	b	11abc <big2_sameName+0x5c>
   11aac:	ldrb	r1, [r4, #1]
   11ab0:	and	r2, r1, #255	; 0xff
   11ab4:	add	r3, r6, r2
   11ab8:	ldrb	r0, [r3, #76]	; 0x4c
   11abc:	sub	r3, r0, #5
   11ac0:	cmp	r3, #25
   11ac4:	bcs	11c88 <big2_sameName+0x228>
   11ac8:	add	pc, pc, r3, lsl #2
   11acc:	nop	{0}
   11ad0:	b	11b84 <big2_sameName+0x124>
   11ad4:	b	11b5c <big2_sameName+0xfc>
   11ad8:	b	11b34 <big2_sameName+0xd4>
   11adc:	b	11c88 <big2_sameName+0x228>
   11ae0:	b	11c88 <big2_sameName+0x228>
   11ae4:	b	11c88 <big2_sameName+0x228>
   11ae8:	b	11c88 <big2_sameName+0x228>
   11aec:	b	11c88 <big2_sameName+0x228>
   11af0:	b	11c88 <big2_sameName+0x228>
   11af4:	b	11c88 <big2_sameName+0x228>
   11af8:	b	11c88 <big2_sameName+0x228>
   11afc:	b	11c88 <big2_sameName+0x228>
   11b00:	b	11c88 <big2_sameName+0x228>
   11b04:	b	11c88 <big2_sameName+0x228>
   11b08:	b	11c88 <big2_sameName+0x228>
   11b0c:	b	11c88 <big2_sameName+0x228>
   11b10:	b	11c88 <big2_sameName+0x228>
   11b14:	b	11bc4 <big2_sameName+0x164>
   11b18:	b	11bc4 <big2_sameName+0x164>
   11b1c:	b	11bc4 <big2_sameName+0x164>
   11b20:	b	11bc4 <big2_sameName+0x164>
   11b24:	b	11bc4 <big2_sameName+0x164>
   11b28:	b	11bc4 <big2_sameName+0x164>
   11b2c:	b	11c88 <big2_sameName+0x228>
   11b30:	b	11bc4 <big2_sameName+0x164>
   11b34:	mov	ip, r4
   11b38:	add	r4, ip, #1
   11b3c:	mov	r1, r5
   11b40:	add	r5, r1, #1
   11b44:	ldrb	r3, [ip]
   11b48:	ldrb	r0, [r1]
   11b4c:	cmp	r3, r0
   11b50:	beq	11b5c <big2_sameName+0xfc>
   11b54:	mov	r0, #0
   11b58:	b	11d78 <big2_sameName+0x318>
   11b5c:	mov	r1, r4
   11b60:	add	r4, r1, #1
   11b64:	mov	r3, r5
   11b68:	add	r5, r3, #1
   11b6c:	ldrb	ip, [r1]
   11b70:	ldrb	r2, [r3]
   11b74:	cmp	ip, r2
   11b78:	beq	11b84 <big2_sameName+0x124>
   11b7c:	mov	r0, #0
   11b80:	b	11d78 <big2_sameName+0x318>
   11b84:	add	r0, r4, #1
   11b88:	add	r2, r5, #1
   11b8c:	ldrb	r3, [r4]
   11b90:	ldrb	ip, [r5]
   11b94:	cmp	r3, ip
   11b98:	beq	11ba4 <big2_sameName+0x144>
   11b9c:	mov	r0, #0
   11ba0:	b	11d78 <big2_sameName+0x318>
   11ba4:	add	r4, r0, #1
   11ba8:	add	r5, r2, #1
   11bac:	ldrb	r1, [r0]
   11bb0:	ldrb	r0, [r2]
   11bb4:	cmp	r1, r0
   11bb8:	beq	11a88 <big2_sameName+0x28>
   11bbc:	mov	r0, #0
   11bc0:	b	11d78 <big2_sameName+0x318>
   11bc4:	mov	r2, r5
   11bc8:	add	r5, r2, #1
   11bcc:	mov	r0, r4
   11bd0:	add	r4, r0, #1
   11bd4:	ldrb	ip, [r2]
   11bd8:	ldrb	r1, [r0]
   11bdc:	cmp	ip, r1
   11be0:	beq	11bec <big2_sameName+0x18c>
   11be4:	mov	r0, #0
   11be8:	b	11d78 <big2_sameName+0x318>
   11bec:	mov	r2, #1
   11bf0:	cmp	r2, #0
   11bf4:	beq	11a88 <big2_sameName+0x28>
   11bf8:	mov	ip, r5
   11bfc:	add	r5, ip, #1
   11c00:	mov	r2, r4
   11c04:	add	r4, r2, #1
   11c08:	ldrb	r3, [ip]
   11c0c:	ldrb	r2, [r2]
   11c10:	cmp	r3, r2
   11c14:	beq	11c20 <big2_sameName+0x1c0>
   11c18:	mov	r0, #0
   11c1c:	b	11d78 <big2_sameName+0x318>
   11c20:	mov	r0, #0
   11c24:	cmp	r0, #0
   11c28:	beq	11a88 <big2_sameName+0x28>
   11c2c:	mov	r3, r5
   11c30:	add	r5, r3, #1
   11c34:	mov	r1, r4
   11c38:	add	r4, r1, #1
   11c3c:	ldrb	r2, [r3]
   11c40:	ldrb	ip, [r1]
   11c44:	cmp	r2, ip
   11c48:	beq	11c54 <big2_sameName+0x1f4>
   11c4c:	mov	r0, #0
   11c50:	b	11d78 <big2_sameName+0x318>
   11c54:	mov	r3, #0
   11c58:	cmp	r3, #0
   11c5c:	beq	11a88 <big2_sameName+0x28>
   11c60:	mov	r0, r5
   11c64:	add	r5, r0, #1
   11c68:	mov	r3, r4
   11c6c:	add	r4, r3, #1
   11c70:	ldrb	ip, [r0]
   11c74:	ldrb	r3, [r3]
   11c78:	cmp	ip, r3
   11c7c:	beq	11a88 <big2_sameName+0x28>
   11c80:	mov	r0, #0
   11c84:	b	11d78 <big2_sameName+0x318>
   11c88:	mov	r0, #0
   11c8c:	cmp	r0, #0
   11c90:	beq	11cac <big2_sameName+0x24c>
   11c94:	ldrb	r1, [r4]
   11c98:	ldrb	r0, [r5]
   11c9c:	cmp	r1, r0
   11ca0:	moveq	r1, #1
   11ca4:	movne	r1, #0
   11ca8:	b	11cb0 <big2_sameName+0x250>
   11cac:	mov	r1, #0
   11cb0:	cmp	r1, #0
   11cb4:	beq	11cc0 <big2_sameName+0x260>
   11cb8:	mov	r0, #1
   11cbc:	b	11d78 <big2_sameName+0x318>
   11cc0:	ldrb	r1, [r5]
   11cc4:	cmp	r1, #0
   11cc8:	beq	11ce4 <big2_sameName+0x284>
   11ccc:	ldrb	ip, [r5]
   11cd0:	and	r0, ip, #255	; 0xff
   11cd4:	ldrb	r1, [r5, #1]
   11cd8:	and	r1, r1, #255	; 0xff
   11cdc:	bl	5988 <unicode_byte_type>
   11ce0:	b	11cf4 <big2_sameName+0x294>
   11ce4:	ldrb	r0, [r5, #1]
   11ce8:	and	r1, r0, #255	; 0xff
   11cec:	add	r0, r6, r1
   11cf0:	ldrb	r0, [r0, #76]	; 0x4c
   11cf4:	sub	r0, r0, #5
   11cf8:	cmp	r0, #25
   11cfc:	bcs	11d74 <big2_sameName+0x314>
   11d00:	add	pc, pc, r0, lsl #2
   11d04:	nop	{0}
   11d08:	b	11d6c <big2_sameName+0x30c>
   11d0c:	b	11d6c <big2_sameName+0x30c>
   11d10:	b	11d6c <big2_sameName+0x30c>
   11d14:	b	11d74 <big2_sameName+0x314>
   11d18:	b	11d74 <big2_sameName+0x314>
   11d1c:	b	11d74 <big2_sameName+0x314>
   11d20:	b	11d74 <big2_sameName+0x314>
   11d24:	b	11d74 <big2_sameName+0x314>
   11d28:	b	11d74 <big2_sameName+0x314>
   11d2c:	b	11d74 <big2_sameName+0x314>
   11d30:	b	11d74 <big2_sameName+0x314>
   11d34:	b	11d74 <big2_sameName+0x314>
   11d38:	b	11d74 <big2_sameName+0x314>
   11d3c:	b	11d74 <big2_sameName+0x314>
   11d40:	b	11d74 <big2_sameName+0x314>
   11d44:	b	11d74 <big2_sameName+0x314>
   11d48:	b	11d74 <big2_sameName+0x314>
   11d4c:	b	11d6c <big2_sameName+0x30c>
   11d50:	b	11d6c <big2_sameName+0x30c>
   11d54:	b	11d6c <big2_sameName+0x30c>
   11d58:	b	11d6c <big2_sameName+0x30c>
   11d5c:	b	11d6c <big2_sameName+0x30c>
   11d60:	b	11d6c <big2_sameName+0x30c>
   11d64:	b	11d74 <big2_sameName+0x314>
   11d68:	b	11d6c <big2_sameName+0x30c>
   11d6c:	mov	r0, #0
   11d70:	b	11d78 <big2_sameName+0x318>
   11d74:	mov	r0, #1
   11d78:	ldr	r4, [sp, #8]
   11d7c:	ldr	r5, [sp, #12]
   11d80:	ldr	r6, [sp, #16]
   11d84:	ldr	lr, [sp, #4]
   11d88:	add	sp, sp, #24
   11d8c:	bx	lr

00011d90 <big2_nameMatchesAscii>:
   11d90:	mov	ip, sp
   11d94:	sub	sp, sp, #8
   11d98:	str	ip, [sp]
   11d9c:	str	lr, [sp, #4]
   11da0:	ldrb	r0, [r3]
   11da4:	cmp	r0, #0
   11da8:	beq	11e00 <big2_nameMatchesAscii+0x70>
   11dac:	cmp	r1, r2
   11db0:	bne	11dbc <big2_nameMatchesAscii+0x2c>
   11db4:	mov	r0, #0
   11db8:	b	11e0c <big2_nameMatchesAscii+0x7c>
   11dbc:	ldrb	ip, [r1]
   11dc0:	cmp	ip, #0
   11dc4:	bne	11de0 <big2_nameMatchesAscii+0x50>
   11dc8:	ldrb	ip, [r1, #1]
   11dcc:	ldrb	r0, [r3]
   11dd0:	cmp	ip, r0
   11dd4:	moveq	ip, #1
   11dd8:	movne	ip, #0
   11ddc:	b	11de4 <big2_nameMatchesAscii+0x54>
   11de0:	mov	ip, #0
   11de4:	cmp	ip, #0
   11de8:	bne	11df4 <big2_nameMatchesAscii+0x64>
   11dec:	mov	r0, #0
   11df0:	b	11e0c <big2_nameMatchesAscii+0x7c>
   11df4:	add	r1, r1, #2
   11df8:	add	r3, r3, #1
   11dfc:	b	11da0 <big2_nameMatchesAscii+0x10>
   11e00:	cmp	r1, r2
   11e04:	moveq	r0, #1
   11e08:	movne	r0, #0
   11e0c:	ldr	lr, [sp, #4]
   11e10:	add	sp, sp, #8
   11e14:	bx	lr

00011e18 <big2_nameLength>:
   11e18:	mov	ip, sp
   11e1c:	sub	sp, sp, #24
   11e20:	str	ip, [sp]
   11e24:	str	lr, [sp, #4]
   11e28:	str	r4, [sp, #8]
   11e2c:	str	r5, [sp, #12]
   11e30:	str	r6, [sp, #16]
   11e34:	mov	r4, r1
   11e38:	mov	r5, r0
   11e3c:	mov	r6, r4
   11e40:	ldrb	r3, [r4]
   11e44:	cmp	r3, #0
   11e48:	beq	11e64 <big2_nameLength+0x4c>
   11e4c:	ldrb	r1, [r4]
   11e50:	and	r0, r1, #255	; 0xff
   11e54:	ldrb	r3, [r4, #1]
   11e58:	and	r1, r3, #255	; 0xff
   11e5c:	bl	5988 <unicode_byte_type>
   11e60:	b	11e74 <big2_nameLength+0x5c>
   11e64:	ldrb	r0, [r4, #1]
   11e68:	and	r0, r0, #255	; 0xff
   11e6c:	add	r2, r5, r0
   11e70:	ldrb	r0, [r2, #76]	; 0x4c
   11e74:	sub	r2, r0, #5
   11e78:	cmp	r2, #25
   11e7c:	bcs	11f0c <big2_nameLength+0xf4>
   11e80:	add	pc, pc, r2, lsl #2
   11e84:	nop	{0}
   11e88:	b	11eec <big2_nameLength+0xd4>
   11e8c:	b	11ef4 <big2_nameLength+0xdc>
   11e90:	b	11efc <big2_nameLength+0xe4>
   11e94:	b	11f0c <big2_nameLength+0xf4>
   11e98:	b	11f0c <big2_nameLength+0xf4>
   11e9c:	b	11f0c <big2_nameLength+0xf4>
   11ea0:	b	11f0c <big2_nameLength+0xf4>
   11ea4:	b	11f0c <big2_nameLength+0xf4>
   11ea8:	b	11f0c <big2_nameLength+0xf4>
   11eac:	b	11f0c <big2_nameLength+0xf4>
   11eb0:	b	11f0c <big2_nameLength+0xf4>
   11eb4:	b	11f0c <big2_nameLength+0xf4>
   11eb8:	b	11f0c <big2_nameLength+0xf4>
   11ebc:	b	11f0c <big2_nameLength+0xf4>
   11ec0:	b	11f0c <big2_nameLength+0xf4>
   11ec4:	b	11f0c <big2_nameLength+0xf4>
   11ec8:	b	11f0c <big2_nameLength+0xf4>
   11ecc:	b	11f04 <big2_nameLength+0xec>
   11ed0:	b	11f04 <big2_nameLength+0xec>
   11ed4:	b	11f04 <big2_nameLength+0xec>
   11ed8:	b	11f04 <big2_nameLength+0xec>
   11edc:	b	11f04 <big2_nameLength+0xec>
   11ee0:	b	11f04 <big2_nameLength+0xec>
   11ee4:	b	11f0c <big2_nameLength+0xf4>
   11ee8:	b	11f04 <big2_nameLength+0xec>
   11eec:	add	r4, r4, #2
   11ef0:	b	11e40 <big2_nameLength+0x28>
   11ef4:	add	r4, r4, #3
   11ef8:	b	11e40 <big2_nameLength+0x28>
   11efc:	add	r4, r4, #4
   11f00:	b	11e40 <big2_nameLength+0x28>
   11f04:	add	r4, r4, #2
   11f08:	b	11e40 <big2_nameLength+0x28>
   11f0c:	sub	r0, r4, r6
   11f10:	ldr	r4, [sp, #8]
   11f14:	ldr	r5, [sp, #12]
   11f18:	ldr	r6, [sp, #16]
   11f1c:	ldr	lr, [sp, #4]
   11f20:	add	sp, sp, #24
   11f24:	bx	lr

00011f28 <big2_skipS>:
   11f28:	mov	ip, sp
   11f2c:	sub	sp, sp, #16
   11f30:	str	ip, [sp]
   11f34:	str	lr, [sp, #4]
   11f38:	str	r4, [sp, #8]
   11f3c:	str	r5, [sp, #12]
   11f40:	mov	r4, r1
   11f44:	mov	r5, r0
   11f48:	ldrb	r2, [r4]
   11f4c:	cmp	r2, #0
   11f50:	beq	11f6c <big2_skipS+0x44>
   11f54:	ldrb	r1, [r4]
   11f58:	and	r0, r1, #255	; 0xff
   11f5c:	ldrb	r1, [r4, #1]
   11f60:	and	r1, r1, #255	; 0xff
   11f64:	bl	5988 <unicode_byte_type>
   11f68:	b	11f7c <big2_skipS+0x54>
   11f6c:	ldrb	r0, [r4, #1]
   11f70:	and	ip, r0, #255	; 0xff
   11f74:	add	r0, r5, ip
   11f78:	ldrb	r0, [r0, #76]	; 0x4c
   11f7c:	cmp	r0, #9
   11f80:	beq	11fac <big2_skipS+0x84>
   11f84:	cmp	r0, #10
   11f88:	beq	11fac <big2_skipS+0x84>
   11f8c:	cmp	r0, #21
   11f90:	beq	11fac <big2_skipS+0x84>
   11f94:	mov	r0, r4
   11f98:	ldr	r4, [sp, #8]
   11f9c:	ldr	r5, [sp, #12]
   11fa0:	ldr	lr, [sp, #4]
   11fa4:	add	sp, sp, #16
   11fa8:	bx	lr
   11fac:	add	r4, r4, #2
   11fb0:	b	11f48 <big2_skipS+0x20>

00011fb4 <big2_updatePosition>:
   11fb4:	mov	ip, sp
   11fb8:	sub	sp, sp, #24
   11fbc:	str	ip, [sp]
   11fc0:	str	lr, [sp, #4]
   11fc4:	str	r4, [sp, #8]
   11fc8:	str	r5, [sp, #12]
   11fcc:	str	r6, [sp, #16]
   11fd0:	str	r7, [sp, #20]
   11fd4:	mov	r6, r3
   11fd8:	mov	r4, r2
   11fdc:	mov	r7, r1
   11fe0:	mov	r5, r0
   11fe4:	cmp	r7, r4
   11fe8:	bcs	1215c <big2_updatePosition+0x1a8>
   11fec:	ldrb	ip, [r7]
   11ff0:	cmp	ip, #0
   11ff4:	beq	12010 <big2_updatePosition+0x5c>
   11ff8:	ldrb	r0, [r7]
   11ffc:	and	r0, r0, #255	; 0xff
   12000:	ldrb	r3, [r7, #1]
   12004:	and	r1, r3, #255	; 0xff
   12008:	bl	5988 <unicode_byte_type>
   1200c:	b	12020 <big2_updatePosition+0x6c>
   12010:	ldrb	r1, [r7, #1]
   12014:	and	r1, r1, #255	; 0xff
   12018:	add	r2, r5, r1
   1201c:	ldrb	r0, [r2, #76]	; 0x4c
   12020:	cmp	r0, #7
   12024:	bcs	12048 <big2_updatePosition+0x94>
   12028:	cmp	r0, #5
   1202c:	beq	12040 <big2_updatePosition+0x8c>
   12030:	cmp	r0, #6
   12034:	bne	12098 <big2_updatePosition+0xe4>
   12038:	add	r7, r7, #3
   1203c:	b	12138 <big2_updatePosition+0x184>
   12040:	add	r7, r7, #2
   12044:	b	12138 <big2_updatePosition+0x184>
   12048:	cmp	r0, #7
   1204c:	beq	12134 <big2_updatePosition+0x180>
   12050:	cmp	r0, #9
   12054:	beq	120a0 <big2_updatePosition+0xec>
   12058:	cmp	r0, #10
   1205c:	bne	12098 <big2_updatePosition+0xe4>
   12060:	mvn	ip, #0
   12064:	mvn	r3, #0
   12068:	str	r3, [r6, #8]
   1206c:	str	ip, [r6, #12]
   12070:	ldr	r1, [r6]
   12074:	ldr	ip, [r6, #4]
   12078:	mov	r3, #0
   1207c:	mov	r2, #1
   12080:	adds	r0, r1, r2
   12084:	adc	r3, ip, r3
   12088:	str	r0, [r6]
   1208c:	str	r3, [r6, #4]
   12090:	add	r7, r7, #2
   12094:	b	12138 <big2_updatePosition+0x184>
   12098:	add	r7, r7, #2
   1209c:	b	12138 <big2_updatePosition+0x184>
   120a0:	ldr	r3, [r6]
   120a4:	ldr	r2, [r6, #4]
   120a8:	mov	r1, #0
   120ac:	mov	r0, #1
   120b0:	adds	r3, r3, r0
   120b4:	adc	ip, r2, r1
   120b8:	str	r3, [r6]
   120bc:	str	ip, [r6, #4]
   120c0:	add	r7, r7, #2
   120c4:	cmp	r7, r4
   120c8:	beq	12110 <big2_updatePosition+0x15c>
   120cc:	ldrb	r2, [r7]
   120d0:	cmp	r2, #0
   120d4:	beq	120f0 <big2_updatePosition+0x13c>
   120d8:	ldrb	r3, [r7]
   120dc:	and	r0, r3, #255	; 0xff
   120e0:	ldrb	r1, [r7, #1]
   120e4:	and	r1, r1, #255	; 0xff
   120e8:	bl	5988 <unicode_byte_type>
   120ec:	b	12100 <big2_updatePosition+0x14c>
   120f0:	ldrb	ip, [r7, #1]
   120f4:	and	r1, ip, #255	; 0xff
   120f8:	add	ip, r5, r1
   120fc:	ldrb	r0, [ip, #76]	; 0x4c
   12100:	cmp	r0, #10
   12104:	moveq	r0, #1
   12108:	movne	r0, #0
   1210c:	b	12114 <big2_updatePosition+0x160>
   12110:	mov	r0, #0
   12114:	cmp	r0, #0
   12118:	beq	12120 <big2_updatePosition+0x16c>
   1211c:	add	r7, r7, #2
   12120:	mvn	r2, #0
   12124:	mvn	r1, #0
   12128:	str	r1, [r6, #8]
   1212c:	str	r2, [r6, #12]
   12130:	b	12138 <big2_updatePosition+0x184>
   12134:	add	r7, r7, #4
   12138:	ldr	r2, [r6, #8]
   1213c:	ldr	r1, [r6, #12]
   12140:	mov	r0, #0
   12144:	mov	ip, #1
   12148:	adds	ip, r2, ip
   1214c:	adc	r2, r1, r0
   12150:	str	ip, [r6, #8]
   12154:	str	r2, [r6, #12]
   12158:	b	11fe4 <big2_updatePosition+0x30>
   1215c:	ldr	r4, [sp, #8]
   12160:	ldr	r5, [sp, #12]
   12164:	ldr	r6, [sp, #16]
   12168:	ldr	r7, [sp, #20]
   1216c:	ldr	lr, [sp, #4]
   12170:	add	sp, sp, #24
   12174:	bx	lr

00012178 <streqci>:
   12178:	mov	ip, sp
   1217c:	sub	sp, sp, #8
   12180:	str	ip, [sp]
   12184:	str	lr, [sp, #4]
   12188:	mov	r2, r0
   1218c:	add	r0, r2, #1
   12190:	ldrb	r2, [r2]
   12194:	and	ip, r2, #255	; 0xff
   12198:	mov	r2, r1
   1219c:	add	r1, r2, #1
   121a0:	ldrb	r3, [r2]
   121a4:	and	r3, r3, #255	; 0xff
   121a8:	cmp	ip, #97	; 0x61
   121ac:	bge	121b8 <streqci+0x40>
   121b0:	mov	r2, #0
   121b4:	b	121c4 <streqci+0x4c>
   121b8:	cmp	ip, #122	; 0x7a
   121bc:	movle	r2, #1
   121c0:	movgt	r2, #0
   121c4:	cmp	r2, #0
   121c8:	beq	121d4 <streqci+0x5c>
   121cc:	sub	ip, ip, #32
   121d0:	and	ip, ip, #255	; 0xff
   121d4:	cmp	r3, #97	; 0x61
   121d8:	bge	121e4 <streqci+0x6c>
   121dc:	mov	r2, #0
   121e0:	b	121f0 <streqci+0x78>
   121e4:	cmp	r3, #122	; 0x7a
   121e8:	movle	r2, #1
   121ec:	movgt	r2, #0
   121f0:	cmp	r2, #0
   121f4:	beq	12200 <streqci+0x88>
   121f8:	sub	r2, r3, #32
   121fc:	and	r3, r2, #255	; 0xff
   12200:	cmp	ip, r3
   12204:	beq	12210 <streqci+0x98>
   12208:	mov	r0, #0
   1220c:	b	1221c <streqci+0xa4>
   12210:	cmp	ip, #0
   12214:	bne	12188 <streqci+0x10>
   12218:	mov	r0, #1
   1221c:	ldr	lr, [sp, #4]
   12220:	add	sp, sp, #8
   12224:	bx	lr

00012228 <initUpdatePosition>:
   12228:	mov	ip, sp
   1222c:	sub	sp, sp, #8
   12230:	str	ip, [sp]
   12234:	str	lr, [sp, #4]
   12238:	ldr	r0, [pc, #12]	; 1224c <initUpdatePosition+0x24>
   1223c:	bl	53d0 <normal_updatePosition>
   12240:	ldr	lr, [sp, #4]
   12244:	add	sp, sp, #8
   12248:	bx	lr
   1224c:	.word	0x00000878

00012250 <toAscii>:
   12250:	mov	ip, sp
   12254:	sub	sp, sp, #40	; 0x28
   12258:	str	ip, [sp, #4]
   1225c:	str	lr, [sp, #8]
   12260:	str	r4, [sp, #16]
   12264:	str	r5, [sp, #20]
   12268:	str	r1, [sp, #32]
   1226c:	add	ip, sp, #24
   12270:	str	ip, [sp, #28]
   12274:	ldr	r5, [r0, #60]	; 0x3c
   12278:	add	r1, sp, #32
   1227c:	add	r3, sp, #28
   12280:	ldr	ip, [sp, #28]
   12284:	add	r4, ip, #1
   12288:	str	r4, [sp]
   1228c:	blx	r5
   12290:	ldr	r1, [sp, #28]
   12294:	add	r2, sp, #24
   12298:	cmp	r1, r2
   1229c:	beq	122a8 <toAscii+0x58>
   122a0:	ldrb	r0, [sp, #24]
   122a4:	b	122ac <toAscii+0x5c>
   122a8:	mvn	r0, #0
   122ac:	ldr	r4, [sp, #16]
   122b0:	ldr	r5, [sp, #20]
   122b4:	ldr	lr, [sp, #8]
   122b8:	add	sp, sp, #40	; 0x28
   122bc:	bx	lr

000122c0 <isSpace>:
   122c0:	mov	ip, sp
   122c4:	sub	sp, sp, #8
   122c8:	str	ip, [sp]
   122cc:	str	lr, [sp, #4]
   122d0:	cmp	r0, #13
   122d4:	bcs	122ec <isSpace+0x2c>
   122d8:	cmp	r0, #9
   122dc:	beq	12304 <isSpace+0x44>
   122e0:	cmp	r0, #10
   122e4:	beq	12304 <isSpace+0x44>
   122e8:	b	122fc <isSpace+0x3c>
   122ec:	cmp	r0, #13
   122f0:	beq	12304 <isSpace+0x44>
   122f4:	cmp	r0, #32
   122f8:	beq	12304 <isSpace+0x44>
   122fc:	mov	r0, #0
   12300:	b	12308 <isSpace+0x48>
   12304:	mov	r0, #1
   12308:	ldr	lr, [sp, #4]
   1230c:	add	sp, sp, #8
   12310:	bx	lr

00012314 <parsePseudoAttribute>:
   12314:	mov	ip, sp
   12318:	sub	sp, sp, #40	; 0x28
   1231c:	str	ip, [sp]
   12320:	str	lr, [sp, #4]
   12324:	str	r4, [sp, #8]
   12328:	str	r5, [sp, #12]
   1232c:	str	r6, [sp, #16]
   12330:	str	r7, [sp, #20]
   12334:	str	r8, [sp, #24]
   12338:	str	r9, [sp, #28]
   1233c:	str	sl, [sp, #32]
   12340:	ldr	r8, [ip, #8]
   12344:	ldr	r9, [ip, #4]
   12348:	ldr	r7, [ip]
   1234c:	mov	sl, r3
   12350:	mov	r4, r2
   12354:	mov	r5, r1
   12358:	mov	r6, r0
   1235c:	cmp	r5, r4
   12360:	bne	12374 <parsePseudoAttribute+0x60>
   12364:	mov	ip, #0
   12368:	str	ip, [sl]
   1236c:	mov	r0, #1
   12370:	b	1262c <parsePseudoAttribute+0x318>
   12374:	mov	r2, r4
   12378:	mov	r1, r5
   1237c:	mov	r0, r6
   12380:	bl	12250 <toAscii>
   12384:	bl	122c0 <isSpace>
   12388:	cmp	r0, #0
   1238c:	bne	1239c <parsePseudoAttribute+0x88>
   12390:	str	r5, [r8]
   12394:	mov	r0, #0
   12398:	b	1262c <parsePseudoAttribute+0x318>
   1239c:	ldr	r0, [r6, #68]	; 0x44
   123a0:	add	r5, r5, r0
   123a4:	mov	r2, r4
   123a8:	mov	r1, r5
   123ac:	mov	r0, r6
   123b0:	bl	12250 <toAscii>
   123b4:	bl	122c0 <isSpace>
   123b8:	cmp	r0, #0
   123bc:	bne	1239c <parsePseudoAttribute+0x88>
   123c0:	cmp	r5, r4
   123c4:	bne	123d8 <parsePseudoAttribute+0xc4>
   123c8:	mov	r3, #0
   123cc:	str	r3, [sl]
   123d0:	mov	r0, #1
   123d4:	b	1262c <parsePseudoAttribute+0x318>
   123d8:	str	r5, [sl]
   123dc:	mov	r2, r4
   123e0:	mov	r1, r5
   123e4:	mov	r0, r6
   123e8:	bl	12250 <toAscii>
   123ec:	cmn	r0, #1
   123f0:	bne	12400 <parsePseudoAttribute+0xec>
   123f4:	str	r5, [r8]
   123f8:	mov	r0, #0
   123fc:	b	1262c <parsePseudoAttribute+0x318>
   12400:	cmp	r0, #61	; 0x3d
   12404:	bne	12410 <parsePseudoAttribute+0xfc>
   12408:	str	r5, [r7]
   1240c:	b	12460 <parsePseudoAttribute+0x14c>
   12410:	bl	122c0 <isSpace>
   12414:	cmp	r0, #0
   12418:	beq	12654 <parsePseudoAttribute+0x340>
   1241c:	str	r5, [r7]
   12420:	ldr	r1, [r6, #68]	; 0x44
   12424:	add	r5, r5, r1
   12428:	mov	r2, r4
   1242c:	mov	r1, r5
   12430:	mov	r0, r6
   12434:	bl	12250 <toAscii>
   12438:	mov	r7, r0
   1243c:	mov	r0, r7
   12440:	bl	122c0 <isSpace>
   12444:	cmp	r0, #0
   12448:	bne	12420 <parsePseudoAttribute+0x10c>
   1244c:	cmp	r7, #61	; 0x3d
   12450:	beq	12460 <parsePseudoAttribute+0x14c>
   12454:	str	r5, [r8]
   12458:	mov	r0, #0
   1245c:	b	1262c <parsePseudoAttribute+0x318>
   12460:	ldr	r3, [sl]
   12464:	cmp	r5, r3
   12468:	bne	12478 <parsePseudoAttribute+0x164>
   1246c:	str	r5, [r8]
   12470:	mov	r0, #0
   12474:	b	1262c <parsePseudoAttribute+0x318>
   12478:	ldr	r0, [r6, #68]	; 0x44
   1247c:	add	r7, r5, r0
   12480:	mov	r2, r4
   12484:	mov	r1, r7
   12488:	mov	r0, r6
   1248c:	bl	12250 <toAscii>
   12490:	mov	r5, r0
   12494:	mov	r0, r5
   12498:	bl	122c0 <isSpace>
   1249c:	cmp	r0, #0
   124a0:	beq	124c4 <parsePseudoAttribute+0x1b0>
   124a4:	ldr	r3, [r6, #68]	; 0x44
   124a8:	add	r7, r7, r3
   124ac:	mov	r2, r4
   124b0:	mov	r1, r7
   124b4:	mov	r0, r6
   124b8:	bl	12250 <toAscii>
   124bc:	mov	r5, r0
   124c0:	b	12494 <parsePseudoAttribute+0x180>
   124c4:	cmp	r5, #34	; 0x22
   124c8:	bne	124d4 <parsePseudoAttribute+0x1c0>
   124cc:	mov	r3, #0
   124d0:	b	124e0 <parsePseudoAttribute+0x1cc>
   124d4:	cmp	r5, #39	; 0x27
   124d8:	movne	r3, #1
   124dc:	moveq	r3, #0
   124e0:	cmp	r3, #0
   124e4:	beq	124f4 <parsePseudoAttribute+0x1e0>
   124e8:	str	r7, [r8]
   124ec:	mov	r0, #0
   124f0:	b	1262c <parsePseudoAttribute+0x318>
   124f4:	and	r5, r5, #255	; 0xff
   124f8:	ldr	r2, [r6, #68]	; 0x44
   124fc:	add	r7, r7, r2
   12500:	str	r7, [r9]
   12504:	mov	r2, r4
   12508:	mov	r1, r7
   1250c:	mov	r0, r6
   12510:	bl	12250 <toAscii>
   12514:	cmp	r0, r5
   12518:	beq	1261c <parsePseudoAttribute+0x308>
   1251c:	cmp	r0, #97	; 0x61
   12520:	bge	1252c <parsePseudoAttribute+0x218>
   12524:	mov	r3, #0
   12528:	b	12538 <parsePseudoAttribute+0x224>
   1252c:	cmp	r0, #122	; 0x7a
   12530:	movle	r3, #1
   12534:	movgt	r3, #0
   12538:	cmp	r3, #0
   1253c:	bne	1256c <parsePseudoAttribute+0x258>
   12540:	cmp	r0, #65	; 0x41
   12544:	bge	12550 <parsePseudoAttribute+0x23c>
   12548:	mov	r1, #0
   1254c:	b	1255c <parsePseudoAttribute+0x248>
   12550:	cmp	r0, #90	; 0x5a
   12554:	movle	r1, #1
   12558:	movgt	r1, #0
   1255c:	cmp	r1, #0
   12560:	moveq	r1, #1
   12564:	movne	r1, #0
   12568:	b	12570 <parsePseudoAttribute+0x25c>
   1256c:	mov	r1, #0
   12570:	cmp	r1, #0
   12574:	beq	125a4 <parsePseudoAttribute+0x290>
   12578:	cmp	r0, #48	; 0x30
   1257c:	bge	12588 <parsePseudoAttribute+0x274>
   12580:	mov	ip, #0
   12584:	b	12594 <parsePseudoAttribute+0x280>
   12588:	cmp	r0, #57	; 0x39
   1258c:	movle	ip, #1
   12590:	movgt	ip, #0
   12594:	cmp	ip, #0
   12598:	moveq	r1, #1
   1259c:	movne	r1, #0
   125a0:	b	125a8 <parsePseudoAttribute+0x294>
   125a4:	mov	r1, #0
   125a8:	cmp	r1, #0
   125ac:	bne	125b8 <parsePseudoAttribute+0x2a4>
   125b0:	mov	r2, #0
   125b4:	b	125c4 <parsePseudoAttribute+0x2b0>
   125b8:	cmp	r0, #46	; 0x2e
   125bc:	movne	r2, #1
   125c0:	moveq	r2, #0
   125c4:	cmp	r2, #0
   125c8:	bne	125d4 <parsePseudoAttribute+0x2c0>
   125cc:	mov	r1, #0
   125d0:	b	125e0 <parsePseudoAttribute+0x2cc>
   125d4:	cmp	r0, #45	; 0x2d
   125d8:	movne	r1, #1
   125dc:	moveq	r1, #0
   125e0:	cmp	r1, #0
   125e4:	bne	125f0 <parsePseudoAttribute+0x2dc>
   125e8:	mov	r1, #0
   125ec:	b	125fc <parsePseudoAttribute+0x2e8>
   125f0:	cmp	r0, #95	; 0x5f
   125f4:	movne	r1, #1
   125f8:	moveq	r1, #0
   125fc:	cmp	r1, #0
   12600:	beq	12610 <parsePseudoAttribute+0x2fc>
   12604:	str	r7, [r8]
   12608:	mov	r0, #0
   1260c:	b	1262c <parsePseudoAttribute+0x318>
   12610:	ldr	r2, [r6, #68]	; 0x44
   12614:	add	r7, r7, r2
   12618:	b	12504 <parsePseudoAttribute+0x1f0>
   1261c:	ldr	ip, [r6, #68]	; 0x44
   12620:	add	r1, r7, ip
   12624:	str	r1, [r8]
   12628:	mov	r0, #1
   1262c:	ldr	r4, [sp, #8]
   12630:	ldr	r5, [sp, #12]
   12634:	ldr	r6, [sp, #16]
   12638:	ldr	r7, [sp, #20]
   1263c:	ldr	r8, [sp, #24]
   12640:	ldr	r9, [sp, #28]
   12644:	ldr	sl, [sp, #32]
   12648:	ldr	lr, [sp, #4]
   1264c:	add	sp, sp, #40	; 0x28
   12650:	bx	lr
   12654:	ldr	r3, [r6, #68]	; 0x44
   12658:	add	r5, r5, r3
   1265c:	b	123dc <parsePseudoAttribute+0xc8>

00012660 <doParseXmlDecl>:
   12660:	mov	ip, sp
   12664:	sub	sp, sp, #88	; 0x58
   12668:	str	ip, [sp, #12]
   1266c:	str	lr, [sp, #16]
   12670:	str	r4, [sp, #36]	; 0x24
   12674:	str	r5, [sp, #40]	; 0x28
   12678:	str	r6, [sp, #44]	; 0x2c
   1267c:	str	r7, [sp, #48]	; 0x30
   12680:	str	r8, [sp, #52]	; 0x34
   12684:	str	r9, [sp, #56]	; 0x38
   12688:	str	sl, [sp, #60]	; 0x3c
   1268c:	str	fp, [sp, #64]	; 0x40
   12690:	ldr	sl, [ip, #24]
   12694:	ldr	r9, [ip, #20]
   12698:	ldr	ip, [ip, #16]
   1269c:	str	ip, [sp, #28]
   126a0:	ldr	ip, [sp, #12]
   126a4:	ldr	r8, [ip, #12]
   126a8:	ldr	ip, [ip, #8]
   126ac:	str	ip, [sp, #24]
   126b0:	ldr	ip, [sp, #12]
   126b4:	ldr	r7, [ip, #4]
   126b8:	str	r0, [sp, #32]
   126bc:	ldr	r0, [ip]
   126c0:	mov	r5, r2
   126c4:	mov	r4, r1
   126c8:	str	r3, [sp, #72]	; 0x48
   126cc:	mov	r1, #0
   126d0:	str	r1, [sp, #76]	; 0x4c
   126d4:	mov	r1, #0
   126d8:	str	r1, [sp, #80]	; 0x50
   126dc:	mov	ip, #0
   126e0:	str	ip, [sp, #84]	; 0x54
   126e4:	ldr	r2, [sp, #72]	; 0x48
   126e8:	ldr	r1, [r5, #68]	; 0x44
   126ec:	add	r1, r1, r1, lsl #2
   126f0:	add	ip, r2, r1
   126f4:	str	ip, [sp, #72]	; 0x48
   126f8:	ldr	r2, [r5, #68]	; 0x44
   126fc:	sub	r6, r0, r2, lsl #1
   12700:	ldr	r1, [sp, #72]	; 0x48
   12704:	add	r3, sp, #80	; 0x50
   12708:	add	fp, sp, #84	; 0x54
   1270c:	add	r2, sp, #76	; 0x4c
   12710:	add	r0, sp, #72	; 0x48
   12714:	str	r0, [sp, #8]
   12718:	str	r2, [sp, #4]
   1271c:	str	fp, [sp]
   12720:	mov	r2, r6
   12724:	mov	r0, r5
   12728:	bl	12314 <parsePseudoAttribute>
   1272c:	cmp	r0, #0
   12730:	beq	12748 <doParseXmlDecl+0xe8>
   12734:	ldr	r3, [sp, #80]	; 0x50
   12738:	cmp	r3, #0
   1273c:	moveq	ip, #1
   12740:	movne	ip, #0
   12744:	b	1274c <doParseXmlDecl+0xec>
   12748:	mov	ip, #1
   1274c:	cmp	ip, #0
   12750:	beq	12764 <doParseXmlDecl+0x104>
   12754:	ldr	ip, [sp, #72]	; 0x48
   12758:	str	ip, [r7]
   1275c:	mov	r0, #0
   12760:	b	12a80 <doParseXmlDecl+0x420>
   12764:	ldr	ip, [r5, #28]
   12768:	ldr	r1, [sp, #80]	; 0x50
   1276c:	ldr	r2, [sp, #84]	; 0x54
   12770:	ldr	r3, [pc, #832]	; 12ab8 <doParseXmlDecl+0x458>
   12774:	mov	r0, r5
   12778:	blx	ip
   1277c:	cmp	r0, #0
   12780:	beq	12818 <doParseXmlDecl+0x1b8>
   12784:	ldr	r0, [sp, #24]
   12788:	cmp	r0, #0
   1278c:	beq	12798 <doParseXmlDecl+0x138>
   12790:	ldr	r2, [sp, #76]	; 0x4c
   12794:	str	r2, [r0]
   12798:	cmp	r8, #0
   1279c:	beq	127a8 <doParseXmlDecl+0x148>
   127a0:	ldr	r1, [sp, #72]	; 0x48
   127a4:	str	r1, [r8]
   127a8:	ldr	r1, [sp, #72]	; 0x48
   127ac:	add	r3, sp, #80	; 0x50
   127b0:	add	r0, sp, #84	; 0x54
   127b4:	add	r2, sp, #76	; 0x4c
   127b8:	add	r8, sp, #72	; 0x48
   127bc:	str	r8, [sp, #8]
   127c0:	str	r2, [sp, #4]
   127c4:	str	r0, [sp]
   127c8:	mov	r2, r6
   127cc:	mov	r0, r5
   127d0:	bl	12314 <parsePseudoAttribute>
   127d4:	cmp	r0, #0
   127d8:	bne	127ec <doParseXmlDecl+0x18c>
   127dc:	ldr	r1, [sp, #72]	; 0x48
   127e0:	str	r1, [r7]
   127e4:	mov	r0, #0
   127e8:	b	12a80 <doParseXmlDecl+0x420>
   127ec:	ldr	ip, [sp, #80]	; 0x50
   127f0:	cmp	ip, #0
   127f4:	bne	12830 <doParseXmlDecl+0x1d0>
   127f8:	cmp	r4, #0
   127fc:	beq	12810 <doParseXmlDecl+0x1b0>
   12800:	ldr	r1, [sp, #72]	; 0x48
   12804:	str	r1, [r7]
   12808:	mov	r0, #0
   1280c:	b	12a80 <doParseXmlDecl+0x420>
   12810:	mov	r0, #1
   12814:	b	12a80 <doParseXmlDecl+0x420>
   12818:	cmp	r4, #0
   1281c:	bne	12830 <doParseXmlDecl+0x1d0>
   12820:	ldr	r3, [sp, #80]	; 0x50
   12824:	str	r3, [r7]
   12828:	mov	r0, #0
   1282c:	b	12a80 <doParseXmlDecl+0x420>
   12830:	ldr	r8, [r5, #28]
   12834:	ldr	r1, [sp, #80]	; 0x50
   12838:	ldr	r2, [sp, #84]	; 0x54
   1283c:	ldr	r3, [pc, #616]	; 12aac <doParseXmlDecl+0x44c>
   12840:	mov	r0, r5
   12844:	blx	r8
   12848:	cmp	r0, #0
   1284c:	beq	12960 <doParseXmlDecl+0x300>
   12850:	ldr	r1, [sp, #76]	; 0x4c
   12854:	mov	r2, r6
   12858:	mov	r0, r5
   1285c:	bl	12250 <toAscii>
   12860:	cmp	r0, #97	; 0x61
   12864:	bge	12870 <doParseXmlDecl+0x210>
   12868:	mov	r3, #0
   1286c:	b	1287c <doParseXmlDecl+0x21c>
   12870:	cmp	r0, #122	; 0x7a
   12874:	movle	r3, #1
   12878:	movgt	r3, #0
   1287c:	cmp	r3, #0
   12880:	bne	128b0 <doParseXmlDecl+0x250>
   12884:	cmp	r0, #65	; 0x41
   12888:	bge	12894 <doParseXmlDecl+0x234>
   1288c:	mov	r2, #0
   12890:	b	128a0 <doParseXmlDecl+0x240>
   12894:	cmp	r0, #90	; 0x5a
   12898:	movle	r2, #1
   1289c:	movgt	r2, #0
   128a0:	cmp	r2, #0
   128a4:	moveq	r0, #1
   128a8:	movne	r0, #0
   128ac:	b	128b4 <doParseXmlDecl+0x254>
   128b0:	mov	r0, #0
   128b4:	cmp	r0, #0
   128b8:	beq	128cc <doParseXmlDecl+0x26c>
   128bc:	ldr	r2, [sp, #76]	; 0x4c
   128c0:	str	r2, [r7]
   128c4:	mov	r0, #0
   128c8:	b	12a80 <doParseXmlDecl+0x420>
   128cc:	ldr	r1, [sp, #28]
   128d0:	cmp	r1, #0
   128d4:	beq	128e0 <doParseXmlDecl+0x280>
   128d8:	ldr	r0, [sp, #76]	; 0x4c
   128dc:	str	r0, [r1]
   128e0:	cmp	r9, #0
   128e4:	beq	12908 <doParseXmlDecl+0x2a8>
   128e8:	ldr	r1, [sp, #76]	; 0x4c
   128ec:	ldr	r2, [sp, #72]	; 0x48
   128f0:	ldr	r3, [r5, #68]	; 0x44
   128f4:	sub	r2, r2, r3
   128f8:	mov	r0, r5
   128fc:	ldr	ip, [sp, #32]
   12900:	blx	ip
   12904:	str	r0, [r9]
   12908:	ldr	r1, [sp, #72]	; 0x48
   1290c:	add	r3, sp, #80	; 0x50
   12910:	add	r0, sp, #84	; 0x54
   12914:	add	r2, sp, #76	; 0x4c
   12918:	add	r8, sp, #72	; 0x48
   1291c:	str	r8, [sp, #8]
   12920:	str	r2, [sp, #4]
   12924:	str	r0, [sp]
   12928:	mov	r2, r6
   1292c:	mov	r0, r5
   12930:	bl	12314 <parsePseudoAttribute>
   12934:	cmp	r0, #0
   12938:	bne	1294c <doParseXmlDecl+0x2ec>
   1293c:	ldr	r0, [sp, #72]	; 0x48
   12940:	str	r0, [r7]
   12944:	mov	r0, #0
   12948:	b	12a80 <doParseXmlDecl+0x420>
   1294c:	ldr	r0, [sp, #80]	; 0x50
   12950:	cmp	r0, #0
   12954:	bne	12960 <doParseXmlDecl+0x300>
   12958:	mov	r0, #1
   1295c:	b	12a80 <doParseXmlDecl+0x420>
   12960:	ldr	ip, [r5, #28]
   12964:	ldr	r1, [sp, #80]	; 0x50
   12968:	ldr	r2, [sp, #84]	; 0x54
   1296c:	ldr	r3, [pc, #316]	; 12ab0 <doParseXmlDecl+0x450>
   12970:	mov	r0, r5
   12974:	blx	ip
   12978:	cmp	r0, #0
   1297c:	beq	12990 <doParseXmlDecl+0x330>
   12980:	cmp	r4, #0
   12984:	movne	r2, #1
   12988:	moveq	r2, #0
   1298c:	b	12994 <doParseXmlDecl+0x334>
   12990:	mov	r2, #1
   12994:	cmp	r2, #0
   12998:	beq	129ac <doParseXmlDecl+0x34c>
   1299c:	ldr	r3, [sp, #80]	; 0x50
   129a0:	str	r3, [r7]
   129a4:	mov	r0, #0
   129a8:	b	12a80 <doParseXmlDecl+0x420>
   129ac:	ldr	ip, [r5, #28]
   129b0:	ldr	r1, [sp, #76]	; 0x4c
   129b4:	ldr	r2, [sp, #72]	; 0x48
   129b8:	ldr	r3, [r5, #68]	; 0x44
   129bc:	sub	r2, r2, r3
   129c0:	ldr	r3, [pc, #236]	; 12ab4 <doParseXmlDecl+0x454>
   129c4:	mov	r0, r5
   129c8:	blx	ip
   129cc:	cmp	r0, #0
   129d0:	bne	12a20 <doParseXmlDecl+0x3c0>
   129d4:	ldr	ip, [r5, #28]
   129d8:	ldr	r1, [sp, #76]	; 0x4c
   129dc:	ldr	r0, [sp, #72]	; 0x48
   129e0:	ldr	r3, [r5, #68]	; 0x44
   129e4:	sub	r2, r0, r3
   129e8:	ldr	r3, [pc, #204]	; 12abc <doParseXmlDecl+0x45c>
   129ec:	mov	r0, r5
   129f0:	blx	ip
   129f4:	cmp	r0, #0
   129f8:	bne	12a0c <doParseXmlDecl+0x3ac>
   129fc:	ldr	r2, [sp, #76]	; 0x4c
   12a00:	str	r2, [r7]
   12a04:	mov	r0, #0
   12a08:	b	12a80 <doParseXmlDecl+0x420>
   12a0c:	cmp	sl, #0
   12a10:	beq	12a30 <doParseXmlDecl+0x3d0>
   12a14:	mov	r3, #0
   12a18:	str	r3, [sl]
   12a1c:	b	12a30 <doParseXmlDecl+0x3d0>
   12a20:	cmp	sl, #0
   12a24:	beq	12a30 <doParseXmlDecl+0x3d0>
   12a28:	mov	r3, #1
   12a2c:	str	r3, [sl]
   12a30:	ldr	r1, [sp, #72]	; 0x48
   12a34:	mov	r2, r6
   12a38:	mov	r0, r5
   12a3c:	bl	12250 <toAscii>
   12a40:	bl	122c0 <isSpace>
   12a44:	cmp	r0, #0
   12a48:	beq	12a60 <doParseXmlDecl+0x400>
   12a4c:	ldr	r0, [sp, #72]	; 0x48
   12a50:	ldr	r1, [r5, #68]	; 0x44
   12a54:	add	r1, r0, r1
   12a58:	str	r1, [sp, #72]	; 0x48
   12a5c:	b	12a30 <doParseXmlDecl+0x3d0>
   12a60:	ldr	r0, [sp, #72]	; 0x48
   12a64:	cmp	r0, r6
   12a68:	beq	12a7c <doParseXmlDecl+0x41c>
   12a6c:	ldr	r3, [sp, #72]	; 0x48
   12a70:	str	r3, [r7]
   12a74:	mov	r0, #0
   12a78:	b	12a80 <doParseXmlDecl+0x420>
   12a7c:	mov	r0, #1
   12a80:	ldr	r4, [sp, #36]	; 0x24
   12a84:	ldr	r5, [sp, #40]	; 0x28
   12a88:	ldr	r6, [sp, #44]	; 0x2c
   12a8c:	ldr	r7, [sp, #48]	; 0x30
   12a90:	ldr	r8, [sp, #52]	; 0x34
   12a94:	ldr	r9, [sp, #56]	; 0x38
   12a98:	ldr	sl, [sp, #60]	; 0x3c
   12a9c:	ldr	fp, [sp, #64]	; 0x40
   12aa0:	ldr	lr, [sp, #16]
   12aa4:	add	sp, sp, #88	; 0x58
   12aa8:	bx	lr
   12aac:	.word	0x00001b40
   12ab0:	.word	0x00001b49
   12ab4:	.word	0x00001b54
   12ab8:	.word	0x00001b38
   12abc:	.word	0x00001b58

00012ac0 <checkCharRefNumber>:
   12ac0:	mov	ip, sp
   12ac4:	sub	sp, sp, #8
   12ac8:	str	ip, [sp]
   12acc:	str	lr, [sp, #4]
   12ad0:	asr	r2, r0, #8
   12ad4:	cmp	r2, #220	; 0xdc
   12ad8:	bcs	12b10 <checkCharRefNumber+0x50>
   12adc:	cmp	r2, #217	; 0xd9
   12ae0:	bcs	12b64 <checkCharRefNumber+0xa4>
   12ae4:	cmp	r2, #0
   12ae8:	beq	12af8 <checkCharRefNumber+0x38>
   12aec:	cmp	r2, #216	; 0xd8
   12af0:	beq	12b64 <checkCharRefNumber+0xa4>
   12af4:	b	12b68 <checkCharRefNumber+0xa8>
   12af8:	ldr	r1, [pc, #116]	; 12b74 <checkCharRefNumber+0xb4>
   12afc:	ldrb	r3, [r1, r0]
   12b00:	cmp	r3, #0
   12b04:	bne	12b68 <checkCharRefNumber+0xa8>
   12b08:	mvn	r0, #0
   12b0c:	b	12b68 <checkCharRefNumber+0xa8>
   12b10:	cmp	r2, #222	; 0xde
   12b14:	bcc	12b64 <checkCharRefNumber+0xa4>
   12b18:	cmp	r2, #222	; 0xde
   12b1c:	beq	12b64 <checkCharRefNumber+0xa4>
   12b20:	cmp	r2, #223	; 0xdf
   12b24:	beq	12b64 <checkCharRefNumber+0xa4>
   12b28:	cmp	r2, #255	; 0xff
   12b2c:	bne	12b68 <checkCharRefNumber+0xa8>
   12b30:	movw	lr, #65534	; 0xfffe
   12b34:	cmp	r0, lr
   12b38:	beq	12b50 <checkCharRefNumber+0x90>
   12b3c:	movw	lr, #65535	; 0xffff
   12b40:	cmp	r0, lr
   12b44:	moveq	r1, #1
   12b48:	movne	r1, #0
   12b4c:	b	12b54 <checkCharRefNumber+0x94>
   12b50:	mov	r1, #1
   12b54:	cmp	r1, #0
   12b58:	beq	12b68 <checkCharRefNumber+0xa8>
   12b5c:	mvn	r0, #0
   12b60:	b	12b68 <checkCharRefNumber+0xa8>
   12b64:	mvn	r0, #0
   12b68:	ldr	lr, [sp, #4]
   12b6c:	add	sp, sp, #8
   12b70:	bx	lr
   12b74:	.word	0x00000e84

00012b78 <coda_XmlUtf8Encode>:
   12b78:	mov	ip, sp
   12b7c:	sub	sp, sp, #8
   12b80:	str	ip, [sp]
   12b84:	str	lr, [sp, #4]
   12b88:	cmp	r0, #0
   12b8c:	bge	12b98 <coda_XmlUtf8Encode+0x20>
   12b90:	mov	r0, #0
   12b94:	b	12c80 <coda_XmlUtf8Encode+0x108>
   12b98:	cmp	r0, #128	; 0x80
   12b9c:	bge	12bb0 <coda_XmlUtf8Encode+0x38>
   12ba0:	and	ip, r0, #255	; 0xff
   12ba4:	strb	ip, [r1]
   12ba8:	mov	r0, #1
   12bac:	b	12c80 <coda_XmlUtf8Encode+0x108>
   12bb0:	cmp	r0, #2048	; 0x800
   12bb4:	bge	12be0 <coda_XmlUtf8Encode+0x68>
   12bb8:	asr	r3, r0, #6
   12bbc:	orr	ip, r3, #192	; 0xc0
   12bc0:	and	r2, ip, #255	; 0xff
   12bc4:	strb	r2, [r1]
   12bc8:	and	r0, r0, #63	; 0x3f
   12bcc:	orr	r2, r0, #128	; 0x80
   12bd0:	and	r2, r2, #255	; 0xff
   12bd4:	strb	r2, [r1, #1]
   12bd8:	mov	r0, #2
   12bdc:	b	12c80 <coda_XmlUtf8Encode+0x108>
   12be0:	cmp	r0, #65536	; 0x10000
   12be4:	bge	12c24 <coda_XmlUtf8Encode+0xac>
   12be8:	asr	r2, r0, #12
   12bec:	orr	r3, r2, #224	; 0xe0
   12bf0:	and	ip, r3, #255	; 0xff
   12bf4:	strb	ip, [r1]
   12bf8:	asr	r3, r0, #6
   12bfc:	and	r3, r3, #63	; 0x3f
   12c00:	orr	r3, r3, #128	; 0x80
   12c04:	and	r2, r3, #255	; 0xff
   12c08:	strb	r2, [r1, #1]
   12c0c:	and	ip, r0, #63	; 0x3f
   12c10:	orr	r0, ip, #128	; 0x80
   12c14:	and	r2, r0, #255	; 0xff
   12c18:	strb	r2, [r1, #2]
   12c1c:	mov	r0, #3
   12c20:	b	12c80 <coda_XmlUtf8Encode+0x108>
   12c24:	cmp	r0, #1114112	; 0x110000
   12c28:	bge	12c7c <coda_XmlUtf8Encode+0x104>
   12c2c:	asr	ip, r0, #18
   12c30:	orr	r3, ip, #240	; 0xf0
   12c34:	and	r2, r3, #255	; 0xff
   12c38:	strb	r2, [r1]
   12c3c:	asr	r2, r0, #12
   12c40:	and	r2, r2, #63	; 0x3f
   12c44:	orr	r2, r2, #128	; 0x80
   12c48:	and	r2, r2, #255	; 0xff
   12c4c:	strb	r2, [r1, #1]
   12c50:	asr	ip, r0, #6
   12c54:	and	r2, ip, #63	; 0x3f
   12c58:	orr	r2, r2, #128	; 0x80
   12c5c:	and	r2, r2, #255	; 0xff
   12c60:	strb	r2, [r1, #2]
   12c64:	and	r2, r0, #63	; 0x3f
   12c68:	orr	r0, r2, #128	; 0x80
   12c6c:	and	r2, r0, #255	; 0xff
   12c70:	strb	r2, [r1, #3]
   12c74:	mov	r0, #4
   12c78:	b	12c80 <coda_XmlUtf8Encode+0x108>
   12c7c:	mov	r0, #0
   12c80:	ldr	lr, [sp, #4]
   12c84:	add	sp, sp, #8
   12c88:	bx	lr

00012c8c <coda_XmlUtf16Encode>:
   12c8c:	mov	ip, sp
   12c90:	sub	sp, sp, #8
   12c94:	str	ip, [sp]
   12c98:	str	lr, [sp, #4]
   12c9c:	cmp	r0, #0
   12ca0:	bge	12cac <coda_XmlUtf16Encode+0x20>
   12ca4:	mov	r0, #0
   12ca8:	b	12d10 <coda_XmlUtf16Encode+0x84>
   12cac:	cmp	r0, #65536	; 0x10000
   12cb0:	bge	12cc8 <coda_XmlUtf16Encode+0x3c>
   12cb4:	bic	r3, r0, #16711680	; 0xff0000
   12cb8:	bic	r3, r3, #-16777216	; 0xff000000
   12cbc:	strh	r3, [r1]
   12cc0:	mov	r0, #1
   12cc4:	b	12d10 <coda_XmlUtf16Encode+0x84>
   12cc8:	cmp	r0, #1114112	; 0x110000
   12ccc:	bge	12d0c <coda_XmlUtf16Encode+0x80>
   12cd0:	sub	r2, r0, #65536	; 0x10000
   12cd4:	asr	r3, r2, #10
   12cd8:	add	ip, r3, #55296	; 0xd800
   12cdc:	bic	r3, ip, #16711680	; 0xff0000
   12ce0:	bic	r3, r3, #-16777216	; 0xff000000
   12ce4:	strh	r3, [r1]
   12ce8:	bic	r0, r2, #261120	; 0x3fc00
   12cec:	bic	r0, r0, #66846720	; 0x3fc0000
   12cf0:	bic	r0, r0, #-67108864	; 0xfc000000
   12cf4:	add	r0, r0, #56320	; 0xdc00
   12cf8:	bic	r2, r0, #16711680	; 0xff0000
   12cfc:	bic	r2, r2, #-16777216	; 0xff000000
   12d00:	strh	r2, [r1, #2]
   12d04:	mov	r0, #2
   12d08:	b	12d10 <coda_XmlUtf16Encode+0x84>
   12d0c:	mov	r0, #0
   12d10:	ldr	lr, [sp, #4]
   12d14:	add	sp, sp, #8
   12d18:	bx	lr

00012d1c <coda_XmlSizeOfUnknownEncoding>:
   12d1c:	mov	ip, sp
   12d20:	sub	sp, sp, #8
   12d24:	str	ip, [sp]
   12d28:	str	lr, [sp, #4]
   12d2c:	movw	r0, #1912	; 0x778
   12d30:	ldr	lr, [sp, #4]
   12d34:	add	sp, sp, #8
   12d38:	bx	lr

00012d3c <unknown_isName>:
   12d3c:	mov	ip, sp
   12d40:	sub	sp, sp, #8
   12d44:	str	ip, [sp]
   12d48:	str	lr, [sp, #4]
   12d4c:	ldr	ip, [r0, #368]	; 0x170
   12d50:	ldr	r0, [r0, #372]	; 0x174
   12d54:	blx	ip
   12d58:	bic	r1, r0, #255	; 0xff
   12d5c:	bic	r1, r1, #65280	; 0xff00
   12d60:	cmp	r1, #0
   12d64:	beq	12d70 <unknown_isName+0x34>
   12d68:	mov	r0, #0
   12d6c:	b	12d9c <unknown_isName+0x60>
   12d70:	ldr	r3, [pc, #48]	; 12da8 <unknown_isName+0x6c>
   12d74:	and	r2, r0, #255	; 0xff
   12d78:	asr	r1, r2, #5
   12d7c:	ldr	r2, [pc, #40]	; 12dac <unknown_isName+0x70>
   12d80:	ldrb	ip, [r2, r0, asr #8]
   12d84:	add	r1, r1, ip, lsl #3
   12d88:	ldr	r2, [r3, r1, lsl #2]
   12d8c:	mov	r1, #1
   12d90:	and	r0, r0, #31
   12d94:	lsl	r0, r1, r0
   12d98:	and	r0, r2, r0
   12d9c:	ldr	lr, [sp, #4]
   12da0:	add	sp, sp, #8
   12da4:	bx	lr
   12da8:	.word	0x00000000
   12dac:	.word	0x00000600

00012db0 <unknown_isNmstrt>:
   12db0:	mov	ip, sp
   12db4:	sub	sp, sp, #8
   12db8:	str	ip, [sp]
   12dbc:	str	lr, [sp, #4]
   12dc0:	ldr	ip, [r0, #368]	; 0x170
   12dc4:	ldr	r0, [r0, #372]	; 0x174
   12dc8:	blx	ip
   12dcc:	bic	r1, r0, #255	; 0xff
   12dd0:	bic	r1, r1, #65280	; 0xff00
   12dd4:	cmp	r1, #0
   12dd8:	beq	12de4 <unknown_isNmstrt+0x34>
   12ddc:	mov	r0, #0
   12de0:	b	12e10 <unknown_isNmstrt+0x60>
   12de4:	ldr	r3, [pc, #48]	; 12e1c <unknown_isNmstrt+0x6c>
   12de8:	and	r2, r0, #255	; 0xff
   12dec:	asr	r1, r2, #5
   12df0:	ldr	r2, [pc, #40]	; 12e20 <unknown_isNmstrt+0x70>
   12df4:	ldrb	ip, [r2, r0, asr #8]
   12df8:	add	r1, r1, ip, lsl #3
   12dfc:	ldr	r2, [r3, r1, lsl #2]
   12e00:	mov	r1, #1
   12e04:	and	r0, r0, #31
   12e08:	lsl	r0, r1, r0
   12e0c:	and	r0, r2, r0
   12e10:	ldr	lr, [sp, #4]
   12e14:	add	sp, sp, #8
   12e18:	bx	lr
   12e1c:	.word	0x00000000
   12e20:	.word	0x00000500

00012e24 <unknown_isInvalid>:
   12e24:	mov	ip, sp
   12e28:	sub	sp, sp, #8
   12e2c:	str	ip, [sp]
   12e30:	str	lr, [sp, #4]
   12e34:	ldr	ip, [r0, #368]	; 0x170
   12e38:	ldr	r0, [r0, #372]	; 0x174
   12e3c:	blx	ip
   12e40:	bic	r3, r0, #255	; 0xff
   12e44:	bic	r3, r3, #65280	; 0xff00
   12e48:	cmp	r3, #0
   12e4c:	bne	12e64 <unknown_isInvalid+0x40>
   12e50:	bl	12ac0 <checkCharRefNumber>
   12e54:	cmp	r0, #0
   12e58:	movlt	r0, #1
   12e5c:	movge	r0, #0
   12e60:	b	12e68 <unknown_isInvalid+0x44>
   12e64:	mov	r0, #1
   12e68:	ldr	lr, [sp, #4]
   12e6c:	add	sp, sp, #8
   12e70:	bx	lr

00012e74 <unknown_toUtf8>:
   12e74:	mov	ip, sp
   12e78:	sub	sp, sp, #40	; 0x28
   12e7c:	str	ip, [sp]
   12e80:	str	lr, [sp, #4]
   12e84:	str	r4, [sp, #8]
   12e88:	str	r5, [sp, #12]
   12e8c:	str	r6, [sp, #16]
   12e90:	str	r7, [sp, #20]
   12e94:	str	r8, [sp, #24]
   12e98:	str	r9, [sp, #28]
   12e9c:	ldr	r8, [ip]
   12ea0:	mov	r7, r3
   12ea4:	mov	r5, r2
   12ea8:	mov	r6, r1
   12eac:	mov	r4, r0
   12eb0:	ldr	r1, [r6]
   12eb4:	cmp	r1, r5
   12eb8:	beq	12f84 <unknown_toUtf8+0x110>
   12ebc:	ldr	r3, [r6]
   12ec0:	ldrb	ip, [r3]
   12ec4:	and	ip, ip, #255	; 0xff
   12ec8:	lsl	r1, ip, #2
   12ecc:	add	r2, r4, r1
   12ed0:	add	r0, r2, #888	; 0x378
   12ed4:	add	r1, r0, #1
   12ed8:	ldrb	r0, [r0]
   12edc:	cmp	r0, #0
   12ee0:	bne	12f38 <unknown_toUtf8+0xc4>
   12ee4:	ldr	ip, [r4, #368]	; 0x170
   12ee8:	ldr	r0, [r4, #372]	; 0x174
   12eec:	ldr	r1, [r6]
   12ef0:	blx	ip
   12ef4:	add	r1, sp, #32
   12ef8:	bl	12b78 <coda_XmlUtf8Encode>
   12efc:	ldr	r2, [r7]
   12f00:	sub	r1, r8, r2
   12f04:	cmp	r0, r1
   12f08:	bgt	12f84 <unknown_toUtf8+0x110>
   12f0c:	add	r1, sp, #32
   12f10:	ldr	r9, [r6]
   12f14:	ldr	r3, [r6]
   12f18:	ldrb	r3, [r3]
   12f1c:	and	r2, r3, #255	; 0xff
   12f20:	add	ip, r4, r2
   12f24:	ldrb	r3, [ip, #76]	; 0x4c
   12f28:	add	r2, r9, r3
   12f2c:	sub	r2, r2, #3
   12f30:	str	r2, [r6]
   12f34:	b	12f54 <unknown_toUtf8+0xe0>
   12f38:	ldr	ip, [r7]
   12f3c:	sub	r2, r8, ip
   12f40:	cmp	r0, r2
   12f44:	bgt	12f84 <unknown_toUtf8+0x110>
   12f48:	ldr	r2, [r6]
   12f4c:	add	ip, r2, #1
   12f50:	str	ip, [r6]
   12f54:	ldr	r3, [r7]
   12f58:	add	r2, r3, #1
   12f5c:	str	r2, [r7]
   12f60:	mov	r2, r1
   12f64:	add	r1, r2, #1
   12f68:	ldrb	r2, [r2]
   12f6c:	and	ip, r2, #255	; 0xff
   12f70:	strb	ip, [r3]
   12f74:	sub	r0, r0, #1
   12f78:	cmp	r0, #0
   12f7c:	bne	12f54 <unknown_toUtf8+0xe0>
   12f80:	b	12eb0 <unknown_toUtf8+0x3c>
   12f84:	ldr	r4, [sp, #8]
   12f88:	ldr	r5, [sp, #12]
   12f8c:	ldr	r6, [sp, #16]
   12f90:	ldr	r7, [sp, #20]
   12f94:	ldr	r8, [sp, #24]
   12f98:	ldr	r9, [sp, #28]
   12f9c:	ldr	lr, [sp, #4]
   12fa0:	add	sp, sp, #40	; 0x28
   12fa4:	bx	lr

00012fa8 <unknown_toUtf16>:
   12fa8:	mov	ip, sp
   12fac:	sub	sp, sp, #32
   12fb0:	str	ip, [sp]
   12fb4:	str	lr, [sp, #4]
   12fb8:	str	r4, [sp, #8]
   12fbc:	str	r5, [sp, #12]
   12fc0:	str	r6, [sp, #16]
   12fc4:	str	r7, [sp, #20]
   12fc8:	str	r8, [sp, #24]
   12fcc:	ldr	r8, [ip]
   12fd0:	mov	r5, r3
   12fd4:	mov	r6, r2
   12fd8:	mov	r7, r1
   12fdc:	mov	r4, r0
   12fe0:	ldr	r2, [r7]
   12fe4:	cmp	r2, r6
   12fe8:	beq	13000 <unknown_toUtf16+0x58>
   12fec:	ldr	ip, [r5]
   12ff0:	cmp	ip, r8
   12ff4:	movne	r1, #1
   12ff8:	moveq	r1, #0
   12ffc:	b	13004 <unknown_toUtf16+0x5c>
   13000:	mov	r1, #0
   13004:	cmp	r1, #0
   13008:	beq	130a0 <unknown_toUtf16+0xf8>
   1300c:	ldr	ip, [r7]
   13010:	ldrb	r2, [ip]
   13014:	and	r2, r2, #255	; 0xff
   13018:	lsl	r2, r2, #1
   1301c:	add	r1, r4, r2
   13020:	add	lr, r1, #256	; 0x100
   13024:	ldrh	r3, [lr, #120]	; 0x78
   13028:	bic	r2, r3, #16711680	; 0xff0000
   1302c:	bic	r2, r2, #-16777216	; 0xff000000
   13030:	cmp	r2, #0
   13034:	bne	13078 <unknown_toUtf16+0xd0>
   13038:	ldr	ip, [r4, #368]	; 0x170
   1303c:	ldr	r0, [r4, #372]	; 0x174
   13040:	ldr	r1, [r7]
   13044:	blx	ip
   13048:	bic	r2, r0, #16711680	; 0xff0000
   1304c:	bic	r2, r2, #-16777216	; 0xff000000
   13050:	ldr	r0, [r7]
   13054:	ldr	r3, [r7]
   13058:	ldrb	r1, [r3]
   1305c:	and	r3, r1, #255	; 0xff
   13060:	add	r3, r4, r3
   13064:	ldrb	r1, [r3, #76]	; 0x4c
   13068:	add	ip, r0, r1
   1306c:	sub	r0, ip, #3
   13070:	str	r0, [r7]
   13074:	b	13084 <unknown_toUtf16+0xdc>
   13078:	ldr	ip, [r7]
   1307c:	add	r3, ip, #1
   13080:	str	r3, [r7]
   13084:	ldr	r0, [r5]
   13088:	add	r1, r0, #2
   1308c:	str	r1, [r5]
   13090:	bic	r1, r2, #16711680	; 0xff0000
   13094:	bic	r1, r1, #-16777216	; 0xff000000
   13098:	strh	r1, [r0]
   1309c:	b	12fe0 <unknown_toUtf16+0x38>
   130a0:	ldr	r4, [sp, #8]
   130a4:	ldr	r5, [sp, #12]
   130a8:	ldr	r6, [sp, #16]
   130ac:	ldr	r7, [sp, #20]
   130b0:	ldr	r8, [sp, #24]
   130b4:	ldr	lr, [sp, #4]
   130b8:	add	sp, sp, #32
   130bc:	bx	lr

000130c0 <coda_XmlInitUnknownEncoding>:
   130c0:	mov	ip, sp
   130c4:	sub	sp, sp, #32
   130c8:	str	ip, [sp]
   130cc:	str	lr, [sp, #4]
   130d0:	str	r4, [sp, #8]
   130d4:	str	r5, [sp, #12]
   130d8:	str	r6, [sp, #16]
   130dc:	str	r7, [sp, #20]
   130e0:	str	r8, [sp, #24]
   130e4:	str	r9, [sp, #28]
   130e8:	mov	r4, r3
   130ec:	mov	r5, r2
   130f0:	mov	r6, r1
   130f4:	mov	r7, r0
   130f8:	mov	r0, #0
   130fc:	cmp	r0, #368	; 0x170
   13100:	bge	1311c <coda_XmlInitUnknownEncoding+0x5c>
   13104:	ldr	r1, [pc, #972]	; 134d8 <coda_XmlInitUnknownEncoding+0x418>
   13108:	ldrb	r2, [r1, r0]
   1310c:	and	r2, r2, #255	; 0xff
   13110:	strb	r2, [r7, r0]
   13114:	add	r0, r0, #1
   13118:	b	130fc <coda_XmlInitUnknownEncoding+0x3c>
   1311c:	mov	r2, #0
   13120:	cmp	r2, #128	; 0x80
   13124:	bge	1318c <coda_XmlInitUnknownEncoding+0xcc>
   13128:	ldr	r1, [pc, #952]	; 134e8 <coda_XmlInitUnknownEncoding+0x428>
   1312c:	ldrb	ip, [r1, r2]
   13130:	cmp	ip, #28
   13134:	beq	13150 <coda_XmlInitUnknownEncoding+0x90>
   13138:	ldr	ip, [pc, #936]	; 134e8 <coda_XmlInitUnknownEncoding+0x428>
   1313c:	ldrb	r0, [ip, r2]
   13140:	cmp	r0, #0
   13144:	movne	r1, #1
   13148:	moveq	r1, #0
   1314c:	b	13154 <coda_XmlInitUnknownEncoding+0x94>
   13150:	mov	r1, #0
   13154:	cmp	r1, #0
   13158:	beq	13170 <coda_XmlInitUnknownEncoding+0xb0>
   1315c:	ldr	r0, [r6, r2, lsl #2]
   13160:	cmp	r0, r2
   13164:	movne	ip, #1
   13168:	moveq	ip, #0
   1316c:	b	13174 <coda_XmlInitUnknownEncoding+0xb4>
   13170:	mov	ip, #0
   13174:	cmp	ip, #0
   13178:	beq	13184 <coda_XmlInitUnknownEncoding+0xc4>
   1317c:	mov	r0, #0
   13180:	b	134ac <coda_XmlInitUnknownEncoding+0x3ec>
   13184:	add	r2, r2, #1
   13188:	b	13120 <coda_XmlInitUnknownEncoding+0x60>
   1318c:	mov	r9, #0
   13190:	cmp	r9, #256	; 0x100
   13194:	bge	13440 <coda_XmlInitUnknownEncoding+0x380>
   13198:	ldr	r8, [r6, r9, lsl #2]
   1319c:	cmn	r8, #1
   131a0:	beq	133f8 <coda_XmlInitUnknownEncoding+0x338>
   131a4:	cmp	r8, #0
   131a8:	blt	133a8 <coda_XmlInitUnknownEncoding+0x2e8>
   131ac:	cmp	r8, #128	; 0x80
   131b0:	blt	132f4 <coda_XmlInitUnknownEncoding+0x234>
   131b4:	mov	r0, r8
   131b8:	bl	12ac0 <checkCharRefNumber>
   131bc:	cmp	r0, #0
   131c0:	blt	132b0 <coda_XmlInitUnknownEncoding+0x1f0>
   131c4:	movw	lr, #65535	; 0xffff
   131c8:	cmp	r8, lr
   131cc:	ble	131d8 <coda_XmlInitUnknownEncoding+0x118>
   131d0:	mov	r0, #0
   131d4:	b	134ac <coda_XmlInitUnknownEncoding+0x3ec>
   131d8:	ldr	r1, [pc, #756]	; 134d4 <coda_XmlInitUnknownEncoding+0x414>
   131dc:	and	r3, r8, #255	; 0xff
   131e0:	asr	r3, r3, #5
   131e4:	ldr	ip, [pc, #756]	; 134e0 <coda_XmlInitUnknownEncoding+0x420>
   131e8:	ldrb	r2, [ip, r8, asr #8]
   131ec:	add	r0, r3, r2, lsl #3
   131f0:	ldr	r0, [r1, r0, lsl #2]
   131f4:	mov	ip, #1
   131f8:	and	r1, r8, #31
   131fc:	lsl	r1, ip, r1
   13200:	and	ip, r0, r1
   13204:	cmp	ip, #0
   13208:	bne	13260 <coda_XmlInitUnknownEncoding+0x1a0>
   1320c:	ldr	ip, [pc, #704]	; 134d4 <coda_XmlInitUnknownEncoding+0x414>
   13210:	and	r3, r8, #255	; 0xff
   13214:	asr	r3, r3, #5
   13218:	ldr	r0, [pc, #708]	; 134e4 <coda_XmlInitUnknownEncoding+0x424>
   1321c:	ldrb	r2, [r0, r8, asr #8]
   13220:	add	r1, r3, r2, lsl #3
   13224:	ldr	r0, [ip, r1, lsl #2]
   13228:	mov	r2, #1
   1322c:	and	r1, r8, #31
   13230:	lsl	r1, r2, r1
   13234:	and	r2, r0, r1
   13238:	cmp	r2, #0
   1323c:	bne	13250 <coda_XmlInitUnknownEncoding+0x190>
   13240:	add	r3, r7, r9
   13244:	mov	r2, #28
   13248:	strb	r2, [r3, #76]	; 0x4c
   1324c:	b	1326c <coda_XmlInitUnknownEncoding+0x1ac>
   13250:	add	r2, r7, r9
   13254:	mov	ip, #26
   13258:	strb	ip, [r2, #76]	; 0x4c
   1325c:	b	1326c <coda_XmlInitUnknownEncoding+0x1ac>
   13260:	add	r3, r7, r9
   13264:	mov	r2, #22
   13268:	strb	r2, [r3, #76]	; 0x4c
   1326c:	lsl	r2, r9, #2
   13270:	add	r0, r7, r2
   13274:	add	r1, r0, #121	; 0x79
   13278:	add	r1, r1, #768	; 0x300
   1327c:	mov	r0, r8
   13280:	bl	12b78 <coda_XmlUtf8Encode>
   13284:	lsl	r3, r9, #2
   13288:	add	r1, r7, r3
   1328c:	and	r2, r0, #255	; 0xff
   13290:	strb	r2, [r1, #888]	; 0x378
   13294:	lsl	r3, r9, #1
   13298:	add	r0, r7, r3
   1329c:	bic	ip, r8, #16711680	; 0xff0000
   132a0:	bic	ip, ip, #-16777216	; 0xff000000
   132a4:	add	lr, r0, #256	; 0x100
   132a8:	strh	ip, [lr, #120]	; 0x78
   132ac:	b	13438 <coda_XmlInitUnknownEncoding+0x378>
   132b0:	add	ip, r7, r9
   132b4:	mov	r3, #0
   132b8:	strb	r3, [ip, #76]	; 0x4c
   132bc:	lsl	r3, r9, #1
   132c0:	add	r0, r7, r3
   132c4:	movw	r3, #65535	; 0xffff
   132c8:	add	lr, r0, #256	; 0x100
   132cc:	strh	r3, [lr, #120]	; 0x78
   132d0:	lsl	r3, r9, #2
   132d4:	add	r1, r7, r3
   132d8:	mov	r3, #1
   132dc:	strb	r3, [r1, #888]	; 0x378
   132e0:	lsl	r1, r9, #2
   132e4:	add	r2, r7, r1
   132e8:	mov	r0, #0
   132ec:	strb	r0, [r2, #889]	; 0x379
   132f0:	b	13438 <coda_XmlInitUnknownEncoding+0x378>
   132f4:	ldr	r3, [pc, #492]	; 134e8 <coda_XmlInitUnknownEncoding+0x428>
   132f8:	ldrb	r0, [r3, r8]
   132fc:	cmp	r0, #28
   13300:	beq	1331c <coda_XmlInitUnknownEncoding+0x25c>
   13304:	ldr	ip, [pc, #476]	; 134e8 <coda_XmlInitUnknownEncoding+0x428>
   13308:	ldrb	r1, [ip, r8]
   1330c:	cmp	r1, #0
   13310:	movne	ip, #1
   13314:	moveq	ip, #0
   13318:	b	13320 <coda_XmlInitUnknownEncoding+0x260>
   1331c:	mov	ip, #0
   13320:	cmp	ip, #0
   13324:	bne	13330 <coda_XmlInitUnknownEncoding+0x270>
   13328:	mov	ip, #0
   1332c:	b	1333c <coda_XmlInitUnknownEncoding+0x27c>
   13330:	cmp	r8, r9
   13334:	movne	ip, #1
   13338:	moveq	ip, #0
   1333c:	cmp	ip, #0
   13340:	beq	1334c <coda_XmlInitUnknownEncoding+0x28c>
   13344:	mov	r0, #0
   13348:	b	134ac <coda_XmlInitUnknownEncoding+0x3ec>
   1334c:	add	r3, r7, r9
   13350:	ldr	r2, [pc, #400]	; 134e8 <coda_XmlInitUnknownEncoding+0x428>
   13354:	ldrb	r2, [r2, r8]
   13358:	and	r2, r2, #255	; 0xff
   1335c:	strb	r2, [r3, #76]	; 0x4c
   13360:	lsl	r0, r9, #2
   13364:	add	ip, r7, r0
   13368:	mov	r2, #1
   1336c:	strb	r2, [ip, #888]	; 0x378
   13370:	lsl	r0, r9, #2
   13374:	add	r1, r7, r0
   13378:	and	r3, r8, #255	; 0xff
   1337c:	strb	r3, [r1, #889]	; 0x379
   13380:	cmp	r8, #0
   13384:	bne	1338c <coda_XmlInitUnknownEncoding+0x2cc>
   13388:	movw	r8, #65535	; 0xffff
   1338c:	lsl	r0, r9, #1
   13390:	add	r0, r7, r0
   13394:	bic	r2, r8, #16711680	; 0xff0000
   13398:	bic	r2, r2, #-16777216	; 0xff000000
   1339c:	add	lr, r0, #256	; 0x100
   133a0:	strh	r2, [lr, #120]	; 0x78
   133a4:	b	13438 <coda_XmlInitUnknownEncoding+0x378>
   133a8:	cmn	r8, #4
   133ac:	bge	133b8 <coda_XmlInitUnknownEncoding+0x2f8>
   133b0:	mov	r0, #0
   133b4:	b	134ac <coda_XmlInitUnknownEncoding+0x3ec>
   133b8:	add	r0, r7, r9
   133bc:	mov	r1, #5
   133c0:	sub	r1, r1, r8
   133c4:	sub	r1, r1, #2
   133c8:	and	r2, r1, #255	; 0xff
   133cc:	strb	r2, [r0, #76]	; 0x4c
   133d0:	lsl	r2, r9, #2
   133d4:	add	r2, r7, r2
   133d8:	mov	r1, #0
   133dc:	strb	r1, [r2, #888]	; 0x378
   133e0:	lsl	r1, r9, #1
   133e4:	add	ip, r7, r1
   133e8:	mov	r1, #0
   133ec:	add	lr, ip, #256	; 0x100
   133f0:	strh	r1, [lr, #120]	; 0x78
   133f4:	b	13438 <coda_XmlInitUnknownEncoding+0x378>
   133f8:	add	r2, r7, r9
   133fc:	mov	r1, #1
   13400:	strb	r1, [r2, #76]	; 0x4c
   13404:	lsl	r2, r9, #1
   13408:	add	r1, r7, r2
   1340c:	movw	ip, #65535	; 0xffff
   13410:	add	lr, r1, #256	; 0x100
   13414:	strh	ip, [lr, #120]	; 0x78
   13418:	lsl	ip, r9, #2
   1341c:	add	r2, r7, ip
   13420:	mov	r1, #1
   13424:	strb	r1, [r2, #888]	; 0x378
   13428:	lsl	r3, r9, #2
   1342c:	add	r1, r7, r3
   13430:	mov	r3, #0
   13434:	strb	r3, [r1, #889]	; 0x379
   13438:	add	r9, r9, #1
   1343c:	b	13190 <coda_XmlInitUnknownEncoding+0xd0>
   13440:	str	r4, [r7, #372]	; 0x174
   13444:	str	r5, [r7, #368]	; 0x170
   13448:	cmp	r5, #0
   1344c:	beq	13498 <coda_XmlInitUnknownEncoding+0x3d8>
   13450:	ldr	r3, [pc, #120]	; 134d0 <coda_XmlInitUnknownEncoding+0x410>
   13454:	str	r3, [r7, #332]	; 0x14c
   13458:	ldr	r0, [pc, #112]	; 134d0 <coda_XmlInitUnknownEncoding+0x410>
   1345c:	str	r0, [r7, #336]	; 0x150
   13460:	ldr	r2, [pc, #104]	; 134d0 <coda_XmlInitUnknownEncoding+0x410>
   13464:	str	r2, [r7, #340]	; 0x154
   13468:	ldr	r1, [pc, #124]	; 134ec <coda_XmlInitUnknownEncoding+0x42c>
   1346c:	str	r1, [r7, #344]	; 0x158
   13470:	ldr	ip, [pc, #116]	; 134ec <coda_XmlInitUnknownEncoding+0x42c>
   13474:	str	ip, [r7, #348]	; 0x15c
   13478:	ldr	r0, [pc, #108]	; 134ec <coda_XmlInitUnknownEncoding+0x42c>
   1347c:	str	r0, [r7, #352]	; 0x160
   13480:	ldr	r3, [pc, #104]	; 134f0 <coda_XmlInitUnknownEncoding+0x430>
   13484:	str	r3, [r7, #356]	; 0x164
   13488:	ldr	ip, [pc, #96]	; 134f0 <coda_XmlInitUnknownEncoding+0x430>
   1348c:	str	ip, [r7, #360]	; 0x168
   13490:	ldr	ip, [pc, #88]	; 134f0 <coda_XmlInitUnknownEncoding+0x430>
   13494:	str	ip, [r7, #364]	; 0x16c
   13498:	ldr	ip, [pc, #84]	; 134f4 <coda_XmlInitUnknownEncoding+0x434>
   1349c:	str	ip, [r7, #60]	; 0x3c
   134a0:	ldr	r3, [pc, #52]	; 134dc <coda_XmlInitUnknownEncoding+0x41c>
   134a4:	str	r3, [r7, #64]	; 0x40
   134a8:	mov	r0, r7
   134ac:	ldr	r4, [sp, #8]
   134b0:	ldr	r5, [sp, #12]
   134b4:	ldr	r6, [sp, #16]
   134b8:	ldr	r7, [sp, #20]
   134bc:	ldr	r8, [sp, #24]
   134c0:	ldr	r9, [sp, #28]
   134c4:	ldr	lr, [sp, #4]
   134c8:	add	sp, sp, #32
   134cc:	bx	lr
	...
   134d8:	.word	0x00000e38
   134dc:	.word	0x00000000
   134e0:	.word	0x00000500
   134e4:	.word	0x00000600
   134e8:	.word	0x00000e84
	...

000134f8 <getEncodingIndex>:
   134f8:	mov	ip, sp
   134fc:	sub	sp, sp, #16
   13500:	str	ip, [sp]
   13504:	str	lr, [sp, #4]
   13508:	str	r4, [sp, #8]
   1350c:	str	r5, [sp, #12]
   13510:	mov	r5, r0
   13514:	cmp	r5, #0
   13518:	bne	13524 <getEncodingIndex+0x2c>
   1351c:	mov	r4, #6
   13520:	b	13554 <getEncodingIndex+0x5c>
   13524:	mov	r4, #0
   13528:	cmp	r4, #6
   1352c:	bge	13550 <getEncodingIndex+0x58>
   13530:	ldr	r1, [pc, #52]	; 1356c <getEncodingIndex+0x74>
   13534:	ldr	r1, [r1, r4, lsl #2]
   13538:	mov	r0, r5
   1353c:	bl	12178 <streqci>
   13540:	cmp	r0, #0
   13544:	bne	13554 <getEncodingIndex+0x5c>
   13548:	add	r4, r4, #1
   1354c:	b	13528 <getEncodingIndex+0x30>
   13550:	mvn	r4, #0
   13554:	mov	r0, r4
   13558:	ldr	r4, [sp, #8]
   1355c:	ldr	r5, [sp, #12]
   13560:	ldr	lr, [sp, #4]
   13564:	add	sp, sp, #16
   13568:	bx	lr
   1356c:	.word	0x00001b90

00013570 <initScan>:
   13570:	mov	ip, sp
   13574:	sub	sp, sp, #24
   13578:	str	ip, [sp]
   1357c:	str	lr, [sp, #4]
   13580:	str	r4, [sp, #8]
   13584:	str	r5, [sp, #12]
   13588:	str	r6, [sp, #16]
   1358c:	str	r7, [sp, #20]
   13590:	ldr	r4, [ip, #4]
   13594:	ldr	r5, [ip]
   13598:	cmp	r3, r5
   1359c:	bne	135a8 <initScan+0x38>
   135a0:	mvn	r0, #3
   135a4:	b	138e8 <initScan+0x378>
   135a8:	ldr	r6, [r1, #76]	; 0x4c
   135ac:	add	ip, r3, #1
   135b0:	cmp	ip, r5
   135b4:	beq	13830 <initScan+0x2c0>
   135b8:	ldrb	ip, [r3, #1]
   135bc:	and	r7, ip, #255	; 0xff
   135c0:	ldrb	ip, [r3]
   135c4:	and	ip, ip, #255	; 0xff
   135c8:	orr	ip, r7, ip, lsl #8
   135cc:	movw	lr, #65279	; 0xfeff
   135d0:	cmp	ip, lr
   135d4:	bcs	13700 <initScan+0x190>
   135d8:	cmp	ip, #15360	; 0x3c00
   135dc:	beq	13690 <initScan+0x120>
   135e0:	movw	lr, #61371	; 0xefbb
   135e4:	cmp	ip, lr
   135e8:	bne	13758 <initScan+0x1e8>
   135ec:	cmp	r2, #1
   135f0:	bne	13654 <initScan+0xe4>
   135f4:	ldrb	r7, [r1, #73]	; 0x49
   135f8:	cmp	r7, #0
   135fc:	beq	13610 <initScan+0xa0>
   13600:	cmp	r7, #4
   13604:	moveq	ip, #1
   13608:	movne	ip, #0
   1360c:	b	13614 <initScan+0xa4>
   13610:	mov	ip, #1
   13614:	cmp	ip, #0
   13618:	bne	1362c <initScan+0xbc>
   1361c:	cmp	r7, #5
   13620:	moveq	ip, #1
   13624:	movne	ip, #0
   13628:	b	13630 <initScan+0xc0>
   1362c:	mov	ip, #1
   13630:	cmp	ip, #0
   13634:	bne	13648 <initScan+0xd8>
   13638:	cmp	r7, #3
   1363c:	moveq	ip, #1
   13640:	movne	ip, #0
   13644:	b	1364c <initScan+0xdc>
   13648:	mov	ip, #1
   1364c:	cmp	ip, #0
   13650:	bne	138b8 <initScan+0x348>
   13654:	add	ip, r3, #2
   13658:	cmp	ip, r5
   1365c:	bne	13668 <initScan+0xf8>
   13660:	mvn	r0, #0
   13664:	b	138e8 <initScan+0x378>
   13668:	ldrb	ip, [r3, #2]
   1366c:	and	ip, ip, #255	; 0xff
   13670:	cmp	ip, #191	; 0xbf
   13674:	bne	138b8 <initScan+0x348>
   13678:	add	r1, r3, #3
   1367c:	str	r1, [r4]
   13680:	ldr	r2, [r0, #8]
   13684:	str	r2, [r6]
   13688:	mov	r0, #14
   1368c:	b	138e8 <initScan+0x378>
   13690:	ldrb	ip, [r1, #73]	; 0x49
   13694:	cmp	ip, #4
   13698:	beq	136b0 <initScan+0x140>
   1369c:	ldrb	ip, [r1, #73]	; 0x49
   136a0:	cmp	ip, #3
   136a4:	moveq	ip, #1
   136a8:	movne	ip, #0
   136ac:	b	136b4 <initScan+0x144>
   136b0:	mov	ip, #1
   136b4:	cmp	ip, #0
   136b8:	bne	136c4 <initScan+0x154>
   136bc:	mov	ip, #0
   136c0:	b	136d0 <initScan+0x160>
   136c4:	cmp	r2, #1
   136c8:	moveq	ip, #1
   136cc:	movne	ip, #0
   136d0:	cmp	ip, #0
   136d4:	bne	138b8 <initScan+0x348>
   136d8:	ldr	ip, [r0, #20]
   136dc:	str	ip, [r6]
   136e0:	ldr	ip, [r6]
   136e4:	ldr	ip, [ip, r2, lsl #2]
   136e8:	ldr	r0, [r6]
   136ec:	mov	r1, r3
   136f0:	mov	r3, r4
   136f4:	mov	r2, r5
   136f8:	blx	ip
   136fc:	b	138e8 <initScan+0x378>
   13700:	movw	lr, #65279	; 0xfeff
   13704:	cmp	ip, lr
   13708:	beq	137f0 <initScan+0x280>
   1370c:	movw	lr, #65534	; 0xfffe
   13710:	cmp	ip, lr
   13714:	bne	13758 <initScan+0x1e8>
   13718:	ldrb	ip, [r1, #73]	; 0x49
   1371c:	cmp	ip, #0
   13720:	beq	1372c <initScan+0x1bc>
   13724:	mov	ip, #0
   13728:	b	13738 <initScan+0x1c8>
   1372c:	cmp	r2, #1
   13730:	moveq	ip, #1
   13734:	movne	ip, #0
   13738:	cmp	ip, #0
   1373c:	bne	138b8 <initScan+0x348>
   13740:	add	r1, r3, #2
   13744:	str	r1, [r4]
   13748:	ldr	r2, [r0, #20]
   1374c:	str	r2, [r6]
   13750:	mov	r0, #14
   13754:	b	138e8 <initScan+0x378>
   13758:	ldrb	ip, [r3]
   1375c:	cmp	ip, #0
   13760:	bne	137b4 <initScan+0x244>
   13764:	cmp	r2, #1
   13768:	bne	13780 <initScan+0x210>
   1376c:	ldrb	ip, [r1, #73]	; 0x49
   13770:	cmp	ip, #5
   13774:	moveq	ip, #1
   13778:	movne	ip, #0
   1377c:	b	13784 <initScan+0x214>
   13780:	mov	ip, #0
   13784:	cmp	ip, #0
   13788:	bne	138b8 <initScan+0x348>
   1378c:	ldr	ip, [r0, #16]
   13790:	str	ip, [r6]
   13794:	ldr	r0, [r6]
   13798:	ldr	ip, [r0, r2, lsl #2]
   1379c:	ldr	r0, [r6]
   137a0:	mov	r1, r3
   137a4:	mov	r3, r4
   137a8:	mov	r2, r5
   137ac:	blx	ip
   137b0:	b	138e8 <initScan+0x378>
   137b4:	ldrb	ip, [r3, #1]
   137b8:	cmp	ip, #0
   137bc:	bne	138b8 <initScan+0x348>
   137c0:	cmp	r2, #1
   137c4:	beq	138b8 <initScan+0x348>
   137c8:	ldr	ip, [r0, #20]
   137cc:	str	ip, [r6]
   137d0:	ldr	r0, [r6]
   137d4:	ldr	ip, [r0, r2, lsl #2]
   137d8:	ldr	r0, [r6]
   137dc:	mov	r1, r3
   137e0:	mov	r3, r4
   137e4:	mov	r2, r5
   137e8:	blx	ip
   137ec:	b	138e8 <initScan+0x378>
   137f0:	ldrb	ip, [r1, #73]	; 0x49
   137f4:	cmp	ip, #0
   137f8:	beq	13804 <initScan+0x294>
   137fc:	mov	ip, #0
   13800:	b	13810 <initScan+0x2a0>
   13804:	cmp	r2, #1
   13808:	moveq	ip, #1
   1380c:	movne	ip, #0
   13810:	cmp	ip, #0
   13814:	bne	138b8 <initScan+0x348>
   13818:	add	r3, r3, #2
   1381c:	str	r3, [r4]
   13820:	ldr	r1, [r0, #16]
   13824:	str	r1, [r6]
   13828:	mov	r0, #14
   1382c:	b	138e8 <initScan+0x378>
   13830:	ldrb	ip, [r1, #73]	; 0x49
   13834:	cmp	ip, #3
   13838:	beq	138e4 <initScan+0x374>
   1383c:	cmp	ip, #4
   13840:	beq	138e4 <initScan+0x374>
   13844:	cmp	ip, #5
   13848:	beq	138e4 <initScan+0x374>
   1384c:	ldrb	ip, [r3]
   13850:	and	ip, ip, #255	; 0xff
   13854:	cmp	ip, #239	; 0xef
   13858:	bcs	13870 <initScan+0x300>
   1385c:	cmp	ip, #0
   13860:	beq	138b0 <initScan+0x340>
   13864:	cmp	ip, #60	; 0x3c
   13868:	beq	138b0 <initScan+0x340>
   1386c:	b	138b8 <initScan+0x348>
   13870:	cmp	ip, #239	; 0xef
   13874:	beq	13888 <initScan+0x318>
   13878:	cmp	ip, #254	; 0xfe
   1387c:	beq	13888 <initScan+0x318>
   13880:	cmp	ip, #255	; 0xff
   13884:	bne	138b8 <initScan+0x348>
   13888:	ldrb	ip, [r1, #73]	; 0x49
   1388c:	cmp	ip, #0
   13890:	beq	1389c <initScan+0x32c>
   13894:	mov	ip, #0
   13898:	b	138a8 <initScan+0x338>
   1389c:	cmp	r2, #1
   138a0:	moveq	ip, #1
   138a4:	movne	ip, #0
   138a8:	cmp	ip, #0
   138ac:	bne	138b8 <initScan+0x348>
   138b0:	mvn	r0, #0
   138b4:	b	138e8 <initScan+0x378>
   138b8:	ldrb	ip, [r1, #73]	; 0x49
   138bc:	ldr	r0, [r0, ip, lsl #2]
   138c0:	str	r0, [r6]
   138c4:	ldr	r1, [r6]
   138c8:	ldr	ip, [r1, r2, lsl #2]
   138cc:	ldr	r0, [r6]
   138d0:	mov	r1, r3
   138d4:	mov	r3, r4
   138d8:	mov	r2, r5
   138dc:	blx	ip
   138e0:	b	138e8 <initScan+0x378>
   138e4:	mvn	r0, #0
   138e8:	ldr	r4, [sp, #8]
   138ec:	ldr	r5, [sp, #12]
   138f0:	ldr	r6, [sp, #16]
   138f4:	ldr	r7, [sp, #20]
   138f8:	ldr	lr, [sp, #4]
   138fc:	add	sp, sp, #24
   13900:	bx	lr

00013904 <coda_XmlGetUtf8InternalEncoding>:
   13904:	mov	ip, sp
   13908:	sub	sp, sp, #8
   1390c:	str	ip, [sp]
   13910:	str	lr, [sp, #4]
   13914:	ldr	r0, [pc, #8]	; 13924 <coda_XmlGetUtf8InternalEncoding+0x20>
   13918:	ldr	lr, [sp, #4]
   1391c:	add	sp, sp, #8
   13920:	bx	lr
   13924:	.word	0x00000b58

00013928 <coda_XmlGetUtf16InternalEncoding>:
   13928:	mov	ip, sp
   1392c:	sub	sp, sp, #8
   13930:	str	ip, [sp]
   13934:	str	lr, [sp, #4]
   13938:	ldr	r0, [pc, #8]	; 13948 <coda_XmlGetUtf16InternalEncoding+0x20>
   1393c:	ldr	lr, [sp, #4]
   13940:	add	sp, sp, #8
   13944:	bx	lr
   13948:	.word	0x000016e0

0001394c <initScanProlog>:
   1394c:	mov	ip, sp
   13950:	sub	sp, sp, #24
   13954:	str	ip, [sp, #8]
   13958:	str	lr, [sp, #12]
   1395c:	str	r4, [sp, #16]
   13960:	mov	ip, r3
   13964:	mov	r4, r2
   13968:	mov	r3, r1
   1396c:	mov	r1, r0
   13970:	ldr	r0, [pc, #28]	; 13994 <initScanProlog+0x48>
   13974:	mov	r2, #0
   13978:	str	ip, [sp, #4]
   1397c:	str	r4, [sp]
   13980:	bl	13570 <initScan>
   13984:	ldr	r4, [sp, #16]
   13988:	ldr	lr, [sp, #12]
   1398c:	add	sp, sp, #24
   13990:	bx	lr
   13994:	.word	0x00001ba8

00013998 <initScanContent>:
   13998:	mov	ip, sp
   1399c:	sub	sp, sp, #24
   139a0:	str	ip, [sp, #8]
   139a4:	str	lr, [sp, #12]
   139a8:	str	r4, [sp, #16]
   139ac:	mov	ip, r3
   139b0:	mov	r4, r2
   139b4:	mov	r3, r1
   139b8:	mov	r1, r0
   139bc:	ldr	r0, [pc, #28]	; 139e0 <initScanContent+0x48>
   139c0:	mov	r2, #1
   139c4:	str	ip, [sp, #4]
   139c8:	str	r4, [sp]
   139cc:	bl	13570 <initScan>
   139d0:	ldr	r4, [sp, #16]
   139d4:	ldr	lr, [sp, #12]
   139d8:	add	sp, sp, #24
   139dc:	bx	lr
   139e0:	.word	0x00001ba8

000139e4 <coda_XmlInitEncoding>:
   139e4:	mov	ip, sp
   139e8:	sub	sp, sp, #16
   139ec:	str	ip, [sp]
   139f0:	str	lr, [sp, #4]
   139f4:	str	r4, [sp, #8]
   139f8:	str	r5, [sp, #12]
   139fc:	mov	r4, r1
   13a00:	mov	r5, r0
   13a04:	mov	r0, r2
   13a08:	bl	134f8 <getEncodingIndex>
   13a0c:	cmn	r0, #1
   13a10:	bne	13a1c <coda_XmlInitEncoding+0x38>
   13a14:	mov	r0, #0
   13a18:	b	13a48 <coda_XmlInitEncoding+0x64>
   13a1c:	and	r2, r0, #255	; 0xff
   13a20:	strb	r2, [r5, #73]	; 0x49
   13a24:	ldr	r0, [pc, #52]	; 13a60 <coda_XmlInitEncoding+0x7c>
   13a28:	str	r0, [r5]
   13a2c:	ldr	r3, [pc, #48]	; 13a64 <coda_XmlInitEncoding+0x80>
   13a30:	str	r3, [r5, #4]
   13a34:	ldr	r1, [pc, #32]	; 13a5c <coda_XmlInitEncoding+0x78>
   13a38:	str	r1, [r5, #52]	; 0x34
   13a3c:	str	r4, [r5, #76]	; 0x4c
   13a40:	str	r5, [r4]
   13a44:	mov	r0, #1
   13a48:	ldr	r4, [sp, #8]
   13a4c:	ldr	r5, [sp, #12]
   13a50:	ldr	lr, [sp, #4]
   13a54:	add	sp, sp, #16
   13a58:	bx	lr
	...

00013a68 <findEncoding>:
   13a68:	mov	ip, sp
   13a6c:	sub	sp, sp, #168	; 0xa8
   13a70:	str	ip, [sp, #4]
   13a74:	str	lr, [sp, #8]
   13a78:	str	r4, [sp, #16]
   13a7c:	str	r5, [sp, #20]
   13a80:	str	r6, [sp, #24]
   13a84:	mov	r4, r2
   13a88:	mov	r5, r0
   13a8c:	str	r1, [sp, #36]	; 0x24
   13a90:	add	ip, sp, #40	; 0x28
   13a94:	str	ip, [sp, #32]
   13a98:	ldr	r6, [r5, #60]	; 0x3c
   13a9c:	add	r1, sp, #36	; 0x24
   13aa0:	add	r3, sp, #32
   13aa4:	ldr	ip, [sp, #32]
   13aa8:	add	r2, ip, #127	; 0x7f
   13aac:	str	r2, [sp]
   13ab0:	mov	r2, r4
   13ab4:	mov	r0, r5
   13ab8:	blx	r6
   13abc:	ldr	ip, [sp, #36]	; 0x24
   13ac0:	cmp	ip, r4
   13ac4:	beq	13ad0 <findEncoding+0x68>
   13ac8:	mov	r5, #0
   13acc:	b	13b30 <findEncoding+0xc8>
   13ad0:	ldr	r3, [sp, #32]
   13ad4:	mov	r0, #0
   13ad8:	strb	r0, [r3]
   13adc:	add	r0, sp, #40	; 0x28
   13ae0:	ldr	r1, [pc, #104]	; 13b50 <findEncoding+0xe8>
   13ae4:	bl	12178 <streqci>
   13ae8:	cmp	r0, #0
   13aec:	beq	13b04 <findEncoding+0x9c>
   13af0:	ldr	r2, [r5, #68]	; 0x44
   13af4:	cmp	r2, #2
   13af8:	moveq	r1, #1
   13afc:	movne	r1, #0
   13b00:	b	13b08 <findEncoding+0xa0>
   13b04:	mov	r1, #0
   13b08:	cmp	r1, #0
   13b0c:	bne	13b30 <findEncoding+0xc8>
   13b10:	add	r0, sp, #40	; 0x28
   13b14:	bl	134f8 <getEncodingIndex>
   13b18:	cmn	r0, #1
   13b1c:	bne	13b28 <findEncoding+0xc0>
   13b20:	mov	r5, #0
   13b24:	b	13b30 <findEncoding+0xc8>
   13b28:	ldr	r1, [pc, #28]	; 13b4c <findEncoding+0xe4>
   13b2c:	ldr	r5, [r1, r0, lsl #2]
   13b30:	mov	r0, r5
   13b34:	ldr	r4, [sp, #16]
   13b38:	ldr	r5, [sp, #20]
   13b3c:	ldr	r6, [sp, #24]
   13b40:	ldr	lr, [sp, #8]
   13b44:	add	sp, sp, #168	; 0xa8
   13b48:	bx	lr
   13b4c:	.word	0x00001ba8
   13b50:	.word	0x00001b75

00013b54 <coda_XmlParseXmlDecl>:
   13b54:	mov	ip, sp
   13b58:	sub	sp, sp, #72	; 0x48
   13b5c:	str	ip, [sp, #28]
   13b60:	str	lr, [sp, #32]
   13b64:	str	r4, [sp, #40]	; 0x28
   13b68:	str	r5, [sp, #44]	; 0x2c
   13b6c:	str	r6, [sp, #48]	; 0x30
   13b70:	str	r7, [sp, #52]	; 0x34
   13b74:	str	r8, [sp, #56]	; 0x38
   13b78:	str	r9, [sp, #60]	; 0x3c
   13b7c:	str	sl, [sp, #64]	; 0x40
   13b80:	ldr	r5, [ip, #20]
   13b84:	ldr	r8, [ip, #16]
   13b88:	ldr	r6, [ip, #12]
   13b8c:	ldr	r7, [ip, #8]
   13b90:	ldr	r4, [ip, #4]
   13b94:	ldr	r9, [ip]
   13b98:	ldr	sl, [pc, #84]	; 13bf4 <coda_XmlParseXmlDecl+0xa0>
   13b9c:	str	r5, [sp, #24]
   13ba0:	str	r8, [sp, #20]
   13ba4:	str	r6, [sp, #16]
   13ba8:	str	r7, [sp, #12]
   13bac:	str	r4, [sp, #8]
   13bb0:	str	r9, [sp, #4]
   13bb4:	str	r3, [sp]
   13bb8:	mov	r3, r2
   13bbc:	mov	r2, r1
   13bc0:	mov	r1, r0
   13bc4:	mov	r0, sl
   13bc8:	bl	12660 <doParseXmlDecl>
   13bcc:	ldr	r4, [sp, #40]	; 0x28
   13bd0:	ldr	r5, [sp, #44]	; 0x2c
   13bd4:	ldr	r6, [sp, #48]	; 0x30
   13bd8:	ldr	r7, [sp, #52]	; 0x34
   13bdc:	ldr	r8, [sp, #56]	; 0x38
   13be0:	ldr	r9, [sp, #60]	; 0x3c
   13be4:	ldr	sl, [sp, #64]	; 0x40
   13be8:	ldr	lr, [sp, #32]
   13bec:	add	sp, sp, #72	; 0x48
   13bf0:	bx	lr
   13bf4:	.word	0x00000000

00013bf8 <coda_XmlGetUtf8InternalEncodingNS>:
   13bf8:	mov	ip, sp
   13bfc:	sub	sp, sp, #8
   13c00:	str	ip, [sp]
   13c04:	str	lr, [sp, #4]
   13c08:	ldr	r0, [pc, #8]	; 13c18 <coda_XmlGetUtf8InternalEncodingNS+0x20>
   13c0c:	ldr	lr, [sp, #4]
   13c10:	add	sp, sp, #8
   13c14:	bx	lr
   13c18:	.word	0x000009e8

00013c1c <coda_XmlGetUtf16InternalEncodingNS>:
   13c1c:	mov	ip, sp
   13c20:	sub	sp, sp, #8
   13c24:	str	ip, [sp]
   13c28:	str	lr, [sp, #4]
   13c2c:	ldr	r0, [pc, #8]	; 13c3c <coda_XmlGetUtf16InternalEncodingNS+0x20>
   13c30:	ldr	lr, [sp, #4]
   13c34:	add	sp, sp, #8
   13c38:	bx	lr
   13c3c:	.word	0x00001570

00013c40 <initScanPrologNS>:
   13c40:	mov	ip, sp
   13c44:	sub	sp, sp, #24
   13c48:	str	ip, [sp, #8]
   13c4c:	str	lr, [sp, #12]
   13c50:	str	r4, [sp, #16]
   13c54:	mov	ip, r3
   13c58:	mov	r4, r2
   13c5c:	mov	r3, r1
   13c60:	mov	r1, r0
   13c64:	ldr	r0, [pc, #28]	; 13c88 <initScanPrologNS+0x48>
   13c68:	mov	r2, #0
   13c6c:	str	ip, [sp, #4]
   13c70:	str	r4, [sp]
   13c74:	bl	13570 <initScan>
   13c78:	ldr	r4, [sp, #16]
   13c7c:	ldr	lr, [sp, #12]
   13c80:	add	sp, sp, #24
   13c84:	bx	lr
   13c88:	.word	0x00001bc4

00013c8c <initScanContentNS>:
   13c8c:	mov	ip, sp
   13c90:	sub	sp, sp, #24
   13c94:	str	ip, [sp, #8]
   13c98:	str	lr, [sp, #12]
   13c9c:	str	r4, [sp, #16]
   13ca0:	mov	ip, r3
   13ca4:	mov	r4, r2
   13ca8:	mov	r3, r1
   13cac:	mov	r1, r0
   13cb0:	ldr	r0, [pc, #28]	; 13cd4 <initScanContentNS+0x48>
   13cb4:	mov	r2, #1
   13cb8:	str	ip, [sp, #4]
   13cbc:	str	r4, [sp]
   13cc0:	bl	13570 <initScan>
   13cc4:	ldr	r4, [sp, #16]
   13cc8:	ldr	lr, [sp, #12]
   13ccc:	add	sp, sp, #24
   13cd0:	bx	lr
   13cd4:	.word	0x00001bc4

00013cd8 <coda_XmlInitEncodingNS>:
   13cd8:	mov	ip, sp
   13cdc:	sub	sp, sp, #16
   13ce0:	str	ip, [sp]
   13ce4:	str	lr, [sp, #4]
   13ce8:	str	r4, [sp, #8]
   13cec:	str	r5, [sp, #12]
   13cf0:	mov	r4, r1
   13cf4:	mov	r5, r0
   13cf8:	mov	r0, r2
   13cfc:	bl	134f8 <getEncodingIndex>
   13d00:	cmn	r0, #1
   13d04:	bne	13d10 <coda_XmlInitEncodingNS+0x38>
   13d08:	mov	r0, #0
   13d0c:	b	13d3c <coda_XmlInitEncodingNS+0x64>
   13d10:	and	r2, r0, #255	; 0xff
   13d14:	strb	r2, [r5, #73]	; 0x49
   13d18:	ldr	r0, [pc, #56]	; 13d58 <coda_XmlInitEncodingNS+0x80>
   13d1c:	str	r0, [r5]
   13d20:	ldr	r3, [pc, #44]	; 13d54 <coda_XmlInitEncodingNS+0x7c>
   13d24:	str	r3, [r5, #4]
   13d28:	ldr	r1, [pc, #32]	; 13d50 <coda_XmlInitEncodingNS+0x78>
   13d2c:	str	r1, [r5, #52]	; 0x34
   13d30:	str	r4, [r5, #76]	; 0x4c
   13d34:	str	r5, [r4]
   13d38:	mov	r0, #1
   13d3c:	ldr	r4, [sp, #8]
   13d40:	ldr	r5, [sp, #12]
   13d44:	ldr	lr, [sp, #4]
   13d48:	add	sp, sp, #16
   13d4c:	bx	lr
	...

00013d5c <findEncodingNS>:
   13d5c:	mov	ip, sp
   13d60:	sub	sp, sp, #168	; 0xa8
   13d64:	str	ip, [sp, #4]
   13d68:	str	lr, [sp, #8]
   13d6c:	str	r4, [sp, #16]
   13d70:	str	r5, [sp, #20]
   13d74:	str	r6, [sp, #24]
   13d78:	mov	r4, r2
   13d7c:	mov	r5, r0
   13d80:	str	r1, [sp, #36]	; 0x24
   13d84:	add	ip, sp, #40	; 0x28
   13d88:	str	ip, [sp, #32]
   13d8c:	ldr	r6, [r5, #60]	; 0x3c
   13d90:	add	r1, sp, #36	; 0x24
   13d94:	add	r3, sp, #32
   13d98:	ldr	ip, [sp, #32]
   13d9c:	add	r2, ip, #127	; 0x7f
   13da0:	str	r2, [sp]
   13da4:	mov	r2, r4
   13da8:	mov	r0, r5
   13dac:	blx	r6
   13db0:	ldr	ip, [sp, #36]	; 0x24
   13db4:	cmp	ip, r4
   13db8:	beq	13dc4 <findEncodingNS+0x68>
   13dbc:	mov	r5, #0
   13dc0:	b	13e24 <findEncodingNS+0xc8>
   13dc4:	ldr	r3, [sp, #32]
   13dc8:	mov	r0, #0
   13dcc:	strb	r0, [r3]
   13dd0:	add	r0, sp, #40	; 0x28
   13dd4:	ldr	r1, [pc, #100]	; 13e40 <findEncodingNS+0xe4>
   13dd8:	bl	12178 <streqci>
   13ddc:	cmp	r0, #0
   13de0:	beq	13df8 <findEncodingNS+0x9c>
   13de4:	ldr	r2, [r5, #68]	; 0x44
   13de8:	cmp	r2, #2
   13dec:	moveq	r1, #1
   13df0:	movne	r1, #0
   13df4:	b	13dfc <findEncodingNS+0xa0>
   13df8:	mov	r1, #0
   13dfc:	cmp	r1, #0
   13e00:	bne	13e24 <findEncodingNS+0xc8>
   13e04:	add	r0, sp, #40	; 0x28
   13e08:	bl	134f8 <getEncodingIndex>
   13e0c:	cmn	r0, #1
   13e10:	bne	13e1c <findEncodingNS+0xc0>
   13e14:	mov	r5, #0
   13e18:	b	13e24 <findEncodingNS+0xc8>
   13e1c:	ldr	r1, [pc, #32]	; 13e44 <findEncodingNS+0xe8>
   13e20:	ldr	r5, [r1, r0, lsl #2]
   13e24:	mov	r0, r5
   13e28:	ldr	r4, [sp, #16]
   13e2c:	ldr	r5, [sp, #20]
   13e30:	ldr	r6, [sp, #24]
   13e34:	ldr	lr, [sp, #8]
   13e38:	add	sp, sp, #168	; 0xa8
   13e3c:	bx	lr
   13e40:	.word	0x00001b75
   13e44:	.word	0x00001bc4

00013e48 <coda_XmlParseXmlDeclNS>:
   13e48:	mov	ip, sp
   13e4c:	sub	sp, sp, #72	; 0x48
   13e50:	str	ip, [sp, #28]
   13e54:	str	lr, [sp, #32]
   13e58:	str	r4, [sp, #40]	; 0x28
   13e5c:	str	r5, [sp, #44]	; 0x2c
   13e60:	str	r6, [sp, #48]	; 0x30
   13e64:	str	r7, [sp, #52]	; 0x34
   13e68:	str	r8, [sp, #56]	; 0x38
   13e6c:	str	r9, [sp, #60]	; 0x3c
   13e70:	str	sl, [sp, #64]	; 0x40
   13e74:	ldr	r5, [ip, #20]
   13e78:	ldr	r8, [ip, #16]
   13e7c:	ldr	r6, [ip, #12]
   13e80:	ldr	r7, [ip, #8]
   13e84:	ldr	r4, [ip, #4]
   13e88:	ldr	r9, [ip]
   13e8c:	ldr	sl, [pc, #84]	; 13ee8 <coda_XmlParseXmlDeclNS+0xa0>
   13e90:	str	r5, [sp, #24]
   13e94:	str	r8, [sp, #20]
   13e98:	str	r6, [sp, #16]
   13e9c:	str	r7, [sp, #12]
   13ea0:	str	r4, [sp, #8]
   13ea4:	str	r9, [sp, #4]
   13ea8:	str	r3, [sp]
   13eac:	mov	r3, r2
   13eb0:	mov	r2, r1
   13eb4:	mov	r1, r0
   13eb8:	mov	r0, sl
   13ebc:	bl	12660 <doParseXmlDecl>
   13ec0:	ldr	r4, [sp, #40]	; 0x28
   13ec4:	ldr	r5, [sp, #44]	; 0x2c
   13ec8:	ldr	r6, [sp, #48]	; 0x30
   13ecc:	ldr	r7, [sp, #52]	; 0x34
   13ed0:	ldr	r8, [sp, #56]	; 0x38
   13ed4:	ldr	r9, [sp, #60]	; 0x3c
   13ed8:	ldr	sl, [sp, #64]	; 0x40
   13edc:	ldr	lr, [sp, #32]
   13ee0:	add	sp, sp, #72	; 0x48
   13ee4:	bx	lr
   13ee8:	.word	0x00000000

00013eec <coda_XmlInitUnknownEncodingNS>:
   13eec:	mov	ip, sp
   13ef0:	sub	sp, sp, #8
   13ef4:	str	ip, [sp]
   13ef8:	str	lr, [sp, #4]
   13efc:	bl	130c0 <coda_XmlInitUnknownEncoding>
   13f00:	cmp	r0, #0
   13f04:	beq	13f10 <coda_XmlInitUnknownEncodingNS+0x24>
   13f08:	mov	r2, #23
   13f0c:	strb	r2, [r0, #134]	; 0x86
   13f10:	ldr	lr, [sp, #4]
   13f14:	add	sp, sp, #8
   13f18:	bx	lr
