
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-netcdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_netcdf_reopen>:
       0:	push	{r4, sl, fp, lr}
       4:	add	fp, sp, #8
       8:	sub	sp, sp, #88	; 0x58
       c:	str	r0, [fp, #-16]
      10:	mov	r0, #0
      14:	str	r0, [sp, #36]	; 0x24
      18:	str	r0, [sp, #28]
      1c:	str	r0, [sp, #24]
      20:	mvn	r0, #0
      24:	str	r0, [sp, #20]
      28:	movw	r0, #64	; 0x40
      2c:	bl	0 <malloc>
      30:	str	r0, [fp, #-20]	; 0xffffffec
      34:	ldr	r0, [fp, #-20]	; 0xffffffec
      38:	movw	r1, #0
      3c:	cmp	r0, r1
      40:	bne	80 <coda_netcdf_reopen+0x80>
      44:	mvn	r0, #0
      48:	movw	r1, #0
      4c:	movt	r1, #0
      50:	movw	r2, #64	; 0x40
      54:	movw	r3, #0
      58:	movt	r3, #0
      5c:	movw	ip, #801	; 0x321
      60:	str	ip, [sp]
      64:	bl	0 <coda_set_error>
      68:	ldr	r0, [fp, #-16]
      6c:	ldr	r0, [r0]
      70:	bl	0 <coda_close>
      74:	mvn	r1, #0
      78:	str	r1, [fp, #-12]
      7c:	b	4f4 <coda_netcdf_reopen+0x4f4>
      80:	ldr	r0, [fp, #-20]	; 0xffffffec
      84:	mov	r1, #0
      88:	str	r1, [r0]
      8c:	ldr	r0, [fp, #-16]
      90:	ldr	r0, [r0]
      94:	ldr	r2, [r0, #8]
      98:	ldr	r0, [r0, #12]
      9c:	ldr	r3, [fp, #-20]	; 0xffffffec
      a0:	str	r0, [r3, #12]
      a4:	str	r2, [r3, #8]
      a8:	ldr	r0, [fp, #-20]	; 0xffffffec
      ac:	mov	r2, #6
      b0:	str	r2, [r0, #16]
      b4:	ldr	r0, [fp, #-20]	; 0xffffffec
      b8:	str	r1, [r0, #20]
      bc:	ldr	r0, [fp, #-20]	; 0xffffffec
      c0:	str	r1, [r0, #24]
      c4:	ldr	r0, [fp, #-20]	; 0xffffffec
      c8:	str	r1, [r0, #28]
      cc:	ldr	r0, [fp, #-20]	; 0xffffffec
      d0:	str	r1, [r0, #32]
      d4:	ldr	r0, [fp, #-20]	; 0xffffffec
      d8:	str	r1, [r0, #44]	; 0x2c
      dc:	str	r1, [r0, #40]	; 0x28
      e0:	ldr	r0, [fp, #-20]	; 0xffffffec
      e4:	movw	r1, #0
      e8:	str	r1, [r0, #48]	; 0x30
      ec:	ldr	r0, [fp, #-16]
      f0:	ldr	r0, [r0]
      f4:	ldr	r2, [fp, #-20]	; 0xffffffec
      f8:	str	r0, [r2, #52]	; 0x34
      fc:	ldr	r0, [fp, #-20]	; 0xffffffec
     100:	movw	r2, #1
     104:	str	r2, [r0, #56]	; 0x38
     108:	ldr	r0, [fp, #-20]	; 0xffffffec
     10c:	str	r1, [r0, #60]	; 0x3c
     110:	ldr	r0, [fp, #-16]
     114:	ldr	r0, [r0]
     118:	ldr	r0, [r0]
     11c:	bl	0 <strdup>
     120:	ldr	r1, [fp, #-20]	; 0xffffffec
     124:	str	r0, [r1]
     128:	ldr	r0, [fp, #-20]	; 0xffffffec
     12c:	ldr	r0, [r0]
     130:	movw	r1, #0
     134:	cmp	r0, r1
     138:	bne	16c <coda_netcdf_reopen+0x16c>
     13c:	mvn	r0, #0
     140:	movw	r1, #0
     144:	movt	r1, #0
     148:	movw	r2, #0
     14c:	movt	r2, #0
     150:	movw	r3, #823	; 0x337
     154:	bl	0 <coda_set_error>
     158:	ldr	r0, [fp, #-20]	; 0xffffffec
     15c:	bl	500 <coda_netcdf_close>
     160:	mvn	r1, #0
     164:	str	r1, [fp, #-12]
     168:	b	4f4 <coda_netcdf_reopen+0x4f4>
     16c:	movw	r0, #6
     170:	bl	0 <coda_type_record_new>
     174:	str	r0, [fp, #-24]	; 0xffffffe8
     178:	ldr	r0, [fp, #-24]	; 0xffffffe8
     17c:	movw	r1, #0
     180:	cmp	r0, r1
     184:	bne	19c <coda_netcdf_reopen+0x19c>
     188:	ldr	r0, [fp, #-20]	; 0xffffffec
     18c:	bl	500 <coda_netcdf_close>
     190:	mvn	r1, #0
     194:	str	r1, [fp, #-12]
     198:	b	4f4 <coda_netcdf_reopen+0x4f4>
     19c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1a0:	movw	r1, #0
     1a4:	bl	0 <coda_mem_record_new>
     1a8:	str	r0, [fp, #-32]	; 0xffffffe0
     1ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1b0:	bl	0 <coda_type_release>
     1b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     1b8:	movw	r1, #0
     1bc:	cmp	r0, r1
     1c0:	bne	1d8 <coda_netcdf_reopen+0x1d8>
     1c4:	ldr	r0, [fp, #-20]	; 0xffffffec
     1c8:	bl	500 <coda_netcdf_close>
     1cc:	mvn	r1, #0
     1d0:	str	r1, [fp, #-12]
     1d4:	b	4f4 <coda_netcdf_reopen+0x4f4>
     1d8:	sub	r0, fp, #36	; 0x24
     1dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
     1e0:	ldr	r2, [fp, #-20]	; 0xffffffec
     1e4:	str	r1, [r2, #20]
     1e8:	ldr	r1, [fp, #-20]	; 0xffffffec
     1ec:	ldr	r1, [r1, #52]	; 0x34
     1f0:	ldr	r2, [sp, #24]
     1f4:	ldr	r3, [sp, #28]
     1f8:	mov	ip, sp
     1fc:	str	r0, [ip, #8]
     200:	mov	r0, #0
     204:	str	r0, [ip, #4]
     208:	mov	r0, #4
     20c:	str	r0, [ip]
     210:	mov	r0, r1
     214:	bl	5ac <read_bytes>
     218:	cmp	r0, #0
     21c:	bge	25c <coda_netcdf_reopen+0x25c>
     220:	bl	0 <__errno_location>
     224:	ldr	r0, [r0]
     228:	bl	0 <strerror>
     22c:	mvn	r1, #21
     230:	str	r0, [sp, #16]
     234:	mov	r0, r1
     238:	movw	r1, #0
     23c:	movt	r1, #0
     240:	ldr	r2, [sp, #16]
     244:	bl	0 <coda_set_error>
     248:	ldr	r0, [fp, #-20]	; 0xffffffec
     24c:	bl	500 <coda_netcdf_close>
     250:	mvn	r1, #0
     254:	str	r1, [fp, #-12]
     258:	b	4f4 <coda_netcdf_reopen+0x4f4>
     25c:	ldrb	r0, [fp, #-36]	; 0xffffffdc
     260:	cmp	r0, #67	; 0x43
     264:	bne	284 <coda_netcdf_reopen+0x284>
     268:	ldrb	r0, [fp, #-35]	; 0xffffffdd
     26c:	cmp	r0, #68	; 0x44
     270:	bne	284 <coda_netcdf_reopen+0x284>
     274:	ldrb	r0, [fp, #-34]	; 0xffffffde
     278:	cmp	r0, #70	; 0x46
     27c:	bne	284 <coda_netcdf_reopen+0x284>
     280:	b	2a4 <coda_netcdf_reopen+0x2a4>
     284:	movw	r0, #0
     288:	movt	r0, #0
     28c:	movw	r1, #0
     290:	movt	r1, #0
     294:	movw	r2, #851	; 0x353
     298:	movw	r3, #0
     29c:	movt	r3, #0
     2a0:	bl	0 <__assert_fail>
     2a4:	ldrb	r0, [fp, #-33]	; 0xffffffdf
     2a8:	ldr	r1, [fp, #-20]	; 0xffffffec
     2ac:	str	r0, [r1, #56]	; 0x38
     2b0:	ldr	r0, [fp, #-20]	; 0xffffffec
     2b4:	ldr	r0, [r0, #56]	; 0x38
     2b8:	cmp	r0, #1
     2bc:	beq	30c <coda_netcdf_reopen+0x30c>
     2c0:	ldr	r0, [fp, #-20]	; 0xffffffec
     2c4:	ldr	r0, [r0, #56]	; 0x38
     2c8:	cmp	r0, #2
     2cc:	beq	30c <coda_netcdf_reopen+0x30c>
     2d0:	ldr	r0, [fp, #-20]	; 0xffffffec
     2d4:	ldr	r0, [r0, #56]	; 0x38
     2d8:	cmp	r0, #5
     2dc:	beq	30c <coda_netcdf_reopen+0x30c>
     2e0:	ldr	r0, [fp, #-20]	; 0xffffffec
     2e4:	ldr	r2, [r0, #56]	; 0x38
     2e8:	mvn	r0, #199	; 0xc7
     2ec:	movw	r1, #0
     2f0:	movt	r1, #0
     2f4:	bl	0 <coda_set_error>
     2f8:	ldr	r0, [fp, #-20]	; 0xffffffec
     2fc:	bl	500 <coda_netcdf_close>
     300:	mvn	r1, #0
     304:	str	r1, [fp, #-12]
     308:	b	4f4 <coda_netcdf_reopen+0x4f4>
     30c:	ldr	r0, [sp, #24]
     310:	ldr	r1, [sp, #28]
     314:	adds	r0, r0, #4
     318:	adc	r1, r1, #0
     31c:	str	r0, [sp, #24]
     320:	str	r1, [sp, #28]
     324:	ldr	r0, [fp, #-20]	; 0xffffffec
     328:	add	r1, sp, #24
     32c:	add	r2, sp, #48	; 0x30
     330:	bl	800 <read_length_value>
     334:	cmp	r0, #0
     338:	beq	378 <coda_netcdf_reopen+0x378>
     33c:	bl	0 <__errno_location>
     340:	ldr	r0, [r0]
     344:	bl	0 <strerror>
     348:	mvn	r1, #21
     34c:	str	r0, [sp, #12]
     350:	mov	r0, r1
     354:	movw	r1, #0
     358:	movt	r1, #0
     35c:	ldr	r2, [sp, #12]
     360:	bl	0 <coda_set_error>
     364:	ldr	r0, [fp, #-20]	; 0xffffffec
     368:	bl	500 <coda_netcdf_close>
     36c:	mvn	r1, #0
     370:	str	r1, [fp, #-12]
     374:	b	4f4 <coda_netcdf_reopen+0x4f4>
     378:	ldr	r0, [fp, #-20]	; 0xffffffec
     37c:	ldr	r2, [sp, #48]	; 0x30
     380:	ldr	r3, [sp, #52]	; 0x34
     384:	mov	r1, sp
     388:	add	ip, sp, #20
     38c:	str	ip, [r1, #8]
     390:	add	ip, sp, #36	; 0x24
     394:	str	ip, [r1, #4]
     398:	add	ip, sp, #40	; 0x28
     39c:	str	ip, [r1]
     3a0:	add	r1, sp, #24
     3a4:	bl	92c <read_dim_array>
     3a8:	cmp	r0, #0
     3ac:	beq	3c4 <coda_netcdf_reopen+0x3c4>
     3b0:	ldr	r0, [fp, #-20]	; 0xffffffec
     3b4:	bl	500 <coda_netcdf_close>
     3b8:	mvn	r1, #0
     3bc:	str	r1, [fp, #-12]
     3c0:	b	4f4 <coda_netcdf_reopen+0x4f4>
     3c4:	ldr	r0, [fp, #-20]	; 0xffffffec
     3c8:	add	r1, sp, #24
     3cc:	sub	r2, fp, #28
     3d0:	movw	r3, #0
     3d4:	bl	c4c <read_att_array>
     3d8:	cmp	r0, #0
     3dc:	beq	40c <coda_netcdf_reopen+0x40c>
     3e0:	ldr	r0, [sp, #36]	; 0x24
     3e4:	movw	r1, #0
     3e8:	cmp	r0, r1
     3ec:	beq	3f8 <coda_netcdf_reopen+0x3f8>
     3f0:	ldr	r0, [sp, #36]	; 0x24
     3f4:	bl	0 <free>
     3f8:	ldr	r0, [fp, #-20]	; 0xffffffec
     3fc:	bl	500 <coda_netcdf_close>
     400:	mvn	r1, #0
     404:	str	r1, [fp, #-12]
     408:	b	4f4 <coda_netcdf_reopen+0x4f4>
     40c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     410:	movw	r1, #0
     414:	cmp	r0, r1
     418:	beq	464 <coda_netcdf_reopen+0x464>
     41c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     420:	ldr	r1, [fp, #-28]	; 0xffffffe4
     424:	movw	r2, #1
     428:	bl	0 <coda_mem_type_set_attributes>
     42c:	cmp	r0, #0
     430:	beq	460 <coda_netcdf_reopen+0x460>
     434:	ldr	r0, [sp, #36]	; 0x24
     438:	movw	r1, #0
     43c:	cmp	r0, r1
     440:	beq	44c <coda_netcdf_reopen+0x44c>
     444:	ldr	r0, [sp, #36]	; 0x24
     448:	bl	0 <free>
     44c:	ldr	r0, [fp, #-20]	; 0xffffffec
     450:	bl	500 <coda_netcdf_close>
     454:	mvn	r1, #0
     458:	str	r1, [fp, #-12]
     45c:	b	4f4 <coda_netcdf_reopen+0x4f4>
     460:	b	464 <coda_netcdf_reopen+0x464>
     464:	ldr	r0, [fp, #-20]	; 0xffffffec
     468:	ldr	r2, [sp, #40]	; 0x28
     46c:	ldr	r3, [sp, #44]	; 0x2c
     470:	ldr	r1, [sp, #36]	; 0x24
     474:	ldr	ip, [sp, #20]
     478:	ldr	lr, [fp, #-32]	; 0xffffffe0
     47c:	mov	r4, sp
     480:	str	lr, [r4, #8]
     484:	str	ip, [r4, #4]
     488:	str	r1, [r4]
     48c:	add	r1, sp, #24
     490:	bl	16f8 <read_var_array>
     494:	cmp	r0, #0
     498:	beq	4c8 <coda_netcdf_reopen+0x4c8>
     49c:	ldr	r0, [sp, #36]	; 0x24
     4a0:	movw	r1, #0
     4a4:	cmp	r0, r1
     4a8:	beq	4b4 <coda_netcdf_reopen+0x4b4>
     4ac:	ldr	r0, [sp, #36]	; 0x24
     4b0:	bl	0 <free>
     4b4:	ldr	r0, [fp, #-20]	; 0xffffffec
     4b8:	bl	500 <coda_netcdf_close>
     4bc:	mvn	r1, #0
     4c0:	str	r1, [fp, #-12]
     4c4:	b	4f4 <coda_netcdf_reopen+0x4f4>
     4c8:	ldr	r0, [sp, #36]	; 0x24
     4cc:	movw	r1, #0
     4d0:	cmp	r0, r1
     4d4:	beq	4e0 <coda_netcdf_reopen+0x4e0>
     4d8:	ldr	r0, [sp, #36]	; 0x24
     4dc:	bl	0 <free>
     4e0:	ldr	r0, [fp, #-20]	; 0xffffffec
     4e4:	ldr	r1, [fp, #-16]
     4e8:	str	r0, [r1]
     4ec:	movw	r0, #0
     4f0:	str	r0, [fp, #-12]
     4f4:	ldr	r0, [fp, #-12]
     4f8:	sub	sp, fp, #8
     4fc:	pop	{r4, sl, fp, pc}

00000500 <coda_netcdf_close>:
     500:	push	{fp, lr}
     504:	mov	fp, sp
     508:	sub	sp, sp, #8
     50c:	str	r0, [sp, #4]
     510:	ldr	r0, [sp, #4]
     514:	str	r0, [sp]
     518:	ldr	r0, [sp]
     51c:	ldr	r0, [r0]
     520:	movw	r1, #0
     524:	cmp	r0, r1
     528:	beq	538 <coda_netcdf_close+0x38>
     52c:	ldr	r0, [sp]
     530:	ldr	r0, [r0]
     534:	bl	0 <free>
     538:	ldr	r0, [sp]
     53c:	ldr	r0, [r0, #20]
     540:	movw	r1, #0
     544:	cmp	r0, r1
     548:	beq	558 <coda_netcdf_close+0x58>
     54c:	ldr	r0, [sp]
     550:	ldr	r0, [r0, #20]
     554:	bl	0 <coda_dynamic_type_delete>
     558:	ldr	r0, [sp]
     55c:	ldr	r0, [r0, #48]	; 0x30
     560:	movw	r1, #0
     564:	cmp	r0, r1
     568:	beq	578 <coda_netcdf_close+0x78>
     56c:	ldr	r0, [sp]
     570:	ldr	r0, [r0, #48]	; 0x30
     574:	bl	0 <free>
     578:	ldr	r0, [sp]
     57c:	ldr	r0, [r0, #52]	; 0x34
     580:	movw	r1, #0
     584:	cmp	r0, r1
     588:	beq	598 <coda_netcdf_close+0x98>
     58c:	ldr	r0, [sp]
     590:	ldr	r0, [r0, #52]	; 0x34
     594:	bl	0 <coda_bin_close>
     598:	ldr	r0, [sp]
     59c:	bl	0 <free>
     5a0:	movw	r0, #0
     5a4:	mov	sp, fp
     5a8:	pop	{fp, pc}

000005ac <read_bytes>:
     5ac:	push	{fp, lr}
     5b0:	mov	fp, sp
     5b4:	sub	sp, sp, #112	; 0x70
     5b8:	ldr	r1, [fp, #12]
     5bc:	ldr	ip, [fp, #8]
     5c0:	ldr	lr, [fp, #16]
     5c4:	str	r0, [fp, #-8]
     5c8:	str	r3, [fp, #-12]
     5cc:	str	r2, [fp, #-16]
     5d0:	str	r1, [fp, #-20]	; 0xffffffec
     5d4:	str	ip, [fp, #-24]	; 0xffffffe8
     5d8:	ldr	r0, [fp, #-8]
     5dc:	ldr	r0, [r0, #48]	; 0x30
     5e0:	movw	r1, #0
     5e4:	cmp	r0, r1
     5e8:	beq	700 <read_bytes+0x154>
     5ec:	ldr	r0, [fp, #-16]
     5f0:	ldr	r1, [fp, #-12]
     5f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
     5f8:	ldr	r3, [fp, #-20]	; 0xffffffec
     5fc:	adds	r0, r0, r2
     600:	adc	r1, r1, r3
     604:	ldr	r2, [fp, #-8]
     608:	ldr	r3, [r2, #40]	; 0x28
     60c:	ldr	r2, [r2, #44]	; 0x2c
     610:	subs	r0, r3, r0
     614:	sbcs	r1, r2, r1
     618:	bcs	6e0 <read_bytes+0x134>
     61c:	b	620 <read_bytes+0x74>
     620:	ldr	r0, [fp, #-8]
     624:	ldr	r0, [r0, #16]
     628:	cmp	r0, #0
     62c:	beq	640 <read_bytes+0x94>
     630:	ldr	r0, [fp, #-8]
     634:	ldr	r0, [r0, #16]
     638:	cmp	r0, #1
     63c:	bne	65c <read_bytes+0xb0>
     640:	mvn	r0, #300	; 0x12c
     644:	movw	r1, #0
     648:	movt	r1, #0
     64c:	bl	0 <coda_set_error>
     650:	mvn	r0, #0
     654:	str	r0, [fp, #-4]
     658:	b	7f4 <read_bytes+0x248>
     65c:	add	r2, sp, #25
     660:	ldr	r0, [fp, #-24]	; 0xffffffe8
     664:	ldr	r1, [fp, #-20]	; 0xffffffec
     668:	sub	r3, fp, #45	; 0x2d
     66c:	str	r2, [sp, #20]
     670:	mov	r2, r3
     674:	bl	0 <coda_str64>
     678:	ldr	r0, [fp, #-16]
     67c:	ldr	r1, [fp, #-12]
     680:	add	r2, sp, #46	; 0x2e
     684:	bl	0 <coda_str64>
     688:	ldr	r0, [fp, #-8]
     68c:	ldr	r1, [r0, #40]	; 0x28
     690:	ldr	r0, [r0, #44]	; 0x2c
     694:	str	r0, [sp, #16]
     698:	mov	r0, r1
     69c:	ldr	r1, [sp, #16]
     6a0:	ldr	r2, [sp, #20]
     6a4:	bl	0 <coda_str64>
     6a8:	add	r0, sp, #25
     6ac:	add	r3, sp, #46	; 0x2e
     6b0:	sub	r2, fp, #45	; 0x2d
     6b4:	mvn	r1, #300	; 0x12c
     6b8:	str	r0, [sp, #12]
     6bc:	mov	r0, r1
     6c0:	movw	r1, #0
     6c4:	movt	r1, #0
     6c8:	ldr	ip, [sp, #12]
     6cc:	str	ip, [sp]
     6d0:	bl	0 <coda_set_error>
     6d4:	mvn	r0, #0
     6d8:	str	r0, [fp, #-4]
     6dc:	b	7f4 <read_bytes+0x248>
     6e0:	ldr	r0, [fp, #16]
     6e4:	ldr	r1, [fp, #-8]
     6e8:	ldr	r1, [r1, #48]	; 0x30
     6ec:	ldr	r2, [fp, #-16]
     6f0:	add	r1, r1, r2
     6f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
     6f8:	bl	0 <memcpy>
     6fc:	b	7ec <read_bytes+0x240>
     700:	ldr	r0, [fp, #-8]
     704:	ldr	r0, [r0, #16]
     708:	cmp	r0, #0
     70c:	beq	720 <read_bytes+0x174>
     710:	ldr	r0, [fp, #-8]
     714:	ldr	r0, [r0, #16]
     718:	cmp	r0, #1
     71c:	bne	724 <read_bytes+0x178>
     720:	b	744 <read_bytes+0x198>
     724:	movw	r0, #0
     728:	movt	r0, #0
     72c:	movw	r1, #0
     730:	movt	r1, #0
     734:	movw	r2, #83	; 0x53
     738:	movw	r3, #0
     73c:	movt	r3, #0
     740:	bl	0 <__assert_fail>
     744:	ldr	r0, [fp, #-16]
     748:	ldr	r1, [fp, #-12]
     74c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     750:	ldr	r3, [fp, #-20]	; 0xffffffec
     754:	adds	r0, r0, r2
     758:	adc	r1, r1, r3
     75c:	ldr	r2, [fp, #-8]
     760:	ldr	r3, [r2, #8]
     764:	ldr	r2, [r2, #12]
     768:	subs	r0, r3, r0
     76c:	sbcs	r1, r2, r1
     770:	bcs	794 <read_bytes+0x1e8>
     774:	b	778 <read_bytes+0x1cc>
     778:	mvn	r0, #300	; 0x12c
     77c:	movw	r1, #0
     780:	movt	r1, #0
     784:	bl	0 <coda_set_error>
     788:	mvn	r0, #0
     78c:	str	r0, [fp, #-4]
     790:	b	7f4 <read_bytes+0x248>
     794:	ldr	r0, [fp, #-8]
     798:	ldr	r0, [r0, #56]	; 0x38
     79c:	ldr	r1, [fp, #16]
     7a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     7a4:	ldr	r3, [fp, #-16]
     7a8:	bl	0 <pread>
     7ac:	cmp	r0, #0
     7b0:	bge	7e8 <read_bytes+0x23c>
     7b4:	bl	0 <__errno_location>
     7b8:	ldr	r0, [r0]
     7bc:	bl	0 <strerror>
     7c0:	mvn	r1, #21
     7c4:	str	r0, [sp, #8]
     7c8:	mov	r0, r1
     7cc:	movw	r1, #0
     7d0:	movt	r1, #0
     7d4:	ldr	r2, [sp, #8]
     7d8:	bl	0 <coda_set_error>
     7dc:	mvn	r0, #0
     7e0:	str	r0, [fp, #-4]
     7e4:	b	7f4 <read_bytes+0x248>
     7e8:	b	7ec <read_bytes+0x240>
     7ec:	movw	r0, #0
     7f0:	str	r0, [fp, #-4]
     7f4:	ldr	r0, [fp, #-4]
     7f8:	mov	sp, fp
     7fc:	pop	{fp, pc}

00000800 <read_length_value>:
     800:	push	{fp, lr}
     804:	mov	fp, sp
     808:	sub	sp, sp, #32
     80c:	str	r0, [fp, #-8]
     810:	str	r1, [fp, #-12]
     814:	str	r2, [sp, #16]
     818:	ldr	r0, [fp, #-8]
     81c:	ldr	r0, [r0, #56]	; 0x38
     820:	cmp	r0, #5
     824:	beq	8ac <read_length_value+0xac>
     828:	ldr	r0, [fp, #-8]
     82c:	ldr	r0, [r0, #52]	; 0x34
     830:	ldr	r1, [fp, #-12]
     834:	ldr	r2, [r1]
     838:	ldr	r3, [r1, #4]
     83c:	add	r1, sp, #12
     840:	mov	ip, sp
     844:	str	r1, [ip, #8]
     848:	mov	r1, #0
     84c:	str	r1, [ip, #4]
     850:	mov	r1, #4
     854:	str	r1, [ip]
     858:	bl	5ac <read_bytes>
     85c:	cmp	r0, #0
     860:	bge	870 <read_length_value+0x70>
     864:	mvn	r0, #0
     868:	str	r0, [fp, #-4]
     86c:	b	920 <read_length_value+0x120>
     870:	add	r0, sp, #12
     874:	bl	2190 <swap4>
     878:	ldr	r0, [sp, #12]
     87c:	asr	r1, r0, #31
     880:	ldr	r2, [sp, #16]
     884:	str	r0, [r2]
     888:	str	r1, [r2, #4]
     88c:	ldr	r0, [fp, #-12]
     890:	ldr	r1, [r0]
     894:	ldr	r2, [r0, #4]
     898:	adds	r1, r1, #4
     89c:	adc	r2, r2, #0
     8a0:	str	r1, [r0]
     8a4:	str	r2, [r0, #4]
     8a8:	b	918 <read_length_value+0x118>
     8ac:	ldr	r0, [fp, #-8]
     8b0:	ldr	r0, [r0, #52]	; 0x34
     8b4:	ldr	r1, [fp, #-12]
     8b8:	ldr	r2, [r1]
     8bc:	ldr	r3, [r1, #4]
     8c0:	ldr	r1, [sp, #16]
     8c4:	mov	ip, sp
     8c8:	str	r1, [ip, #8]
     8cc:	mov	r1, #0
     8d0:	str	r1, [ip, #4]
     8d4:	mov	r1, #8
     8d8:	str	r1, [ip]
     8dc:	bl	5ac <read_bytes>
     8e0:	cmp	r0, #0
     8e4:	bge	8f4 <read_length_value+0xf4>
     8e8:	mvn	r0, #0
     8ec:	str	r0, [fp, #-4]
     8f0:	b	920 <read_length_value+0x120>
     8f4:	ldr	r0, [sp, #16]
     8f8:	bl	2250 <swap8>
     8fc:	ldr	r0, [fp, #-12]
     900:	ldr	r1, [r0]
     904:	ldr	r2, [r0, #4]
     908:	adds	r1, r1, #8
     90c:	adc	r2, r2, #0
     910:	str	r1, [r0]
     914:	str	r2, [r0, #4]
     918:	movw	r0, #0
     91c:	str	r0, [fp, #-4]
     920:	ldr	r0, [fp, #-4]
     924:	mov	sp, fp
     928:	pop	{fp, pc}

0000092c <read_dim_array>:
     92c:	push	{r4, r5, fp, lr}
     930:	add	fp, sp, #8
     934:	sub	sp, sp, #64	; 0x40
     938:	ldr	ip, [fp, #16]
     93c:	ldr	lr, [fp, #12]
     940:	ldr	r4, [fp, #8]
     944:	str	r0, [fp, #-16]
     948:	str	r1, [fp, #-20]	; 0xffffffec
     94c:	str	r3, [fp, #-28]	; 0xffffffe4
     950:	str	r2, [fp, #-32]	; 0xffffffe0
     954:	ldr	r0, [fp, #-16]
     958:	ldr	r0, [r0, #52]	; 0x34
     95c:	ldr	r1, [fp, #-20]	; 0xffffffec
     960:	ldr	r2, [r1]
     964:	ldr	r3, [r1, #4]
     968:	add	r1, sp, #36	; 0x24
     96c:	mov	r5, sp
     970:	str	r1, [r5, #8]
     974:	mov	r1, #0
     978:	str	r1, [r5, #4]
     97c:	mov	r1, #4
     980:	str	r1, [r5]
     984:	str	ip, [sp, #20]
     988:	str	lr, [sp, #16]
     98c:	str	r4, [sp, #12]
     990:	bl	5ac <read_bytes>
     994:	cmp	r0, #0
     998:	bge	9a8 <read_dim_array+0x7c>
     99c:	mvn	r0, #0
     9a0:	str	r0, [fp, #-12]
     9a4:	b	c3c <read_dim_array+0x310>
     9a8:	add	r0, sp, #36	; 0x24
     9ac:	bl	2190 <swap4>
     9b0:	ldr	r0, [fp, #-20]	; 0xffffffec
     9b4:	ldr	r1, [r0]
     9b8:	ldr	r2, [r0, #4]
     9bc:	adds	r1, r1, #4
     9c0:	adc	r2, r2, #0
     9c4:	str	r1, [r0]
     9c8:	str	r2, [r0, #4]
     9cc:	ldr	r0, [fp, #-16]
     9d0:	ldr	r1, [fp, #-20]	; 0xffffffec
     9d4:	ldr	r2, [fp, #8]
     9d8:	bl	800 <read_length_value>
     9dc:	cmp	r0, #0
     9e0:	beq	9f0 <read_dim_array+0xc4>
     9e4:	mvn	r0, #0
     9e8:	str	r0, [fp, #-12]
     9ec:	b	c3c <read_dim_array+0x310>
     9f0:	ldr	r0, [sp, #36]	; 0x24
     9f4:	cmp	r0, #0
     9f8:	bne	a40 <read_dim_array+0x114>
     9fc:	ldr	r0, [fp, #8]
     a00:	ldr	r1, [r0]
     a04:	ldr	r0, [r0, #4]
     a08:	orr	r0, r1, r0
     a0c:	cmp	r0, #0
     a10:	beq	a34 <read_dim_array+0x108>
     a14:	b	a18 <read_dim_array+0xec>
     a18:	ldr	r0, [pc, #552]	; c48 <read_dim_array+0x31c>
     a1c:	movw	r1, #0
     a20:	movt	r1, #0
     a24:	bl	0 <coda_set_error>
     a28:	mvn	r0, #0
     a2c:	str	r0, [fp, #-12]
     a30:	b	c3c <read_dim_array+0x310>
     a34:	movw	r0, #0
     a38:	str	r0, [fp, #-12]
     a3c:	b	c3c <read_dim_array+0x310>
     a40:	ldr	r0, [sp, #36]	; 0x24
     a44:	cmp	r0, #10
     a48:	beq	a68 <read_dim_array+0x13c>
     a4c:	ldr	r0, [pc, #500]	; c48 <read_dim_array+0x31c>
     a50:	movw	r1, #0
     a54:	movt	r1, #0
     a58:	bl	0 <coda_set_error>
     a5c:	mvn	r0, #0
     a60:	str	r0, [fp, #-12]
     a64:	b	c3c <read_dim_array+0x310>
     a68:	ldr	r0, [fp, #8]
     a6c:	ldr	r0, [r0]
     a70:	lsl	r0, r0, #3
     a74:	bl	0 <malloc>
     a78:	ldr	r1, [fp, #12]
     a7c:	str	r0, [r1]
     a80:	ldr	r0, [fp, #12]
     a84:	ldr	r0, [r0]
     a88:	movw	r1, #0
     a8c:	cmp	r0, r1
     a90:	bne	ae0 <read_dim_array+0x1b4>
     a94:	ldr	r0, [fp, #8]
     a98:	ldr	r1, [r0]
     a9c:	ldr	r0, [r0, #4]
     aa0:	lsl	r0, r0, #3
     aa4:	orr	r3, r0, r1, lsr #29
     aa8:	lsl	r2, r1, #3
     aac:	mov	r0, sp
     ab0:	mov	r1, #124	; 0x7c
     ab4:	str	r1, [r0, #4]
     ab8:	movw	r1, #0
     abc:	movt	r1, #0
     ac0:	str	r1, [r0]
     ac4:	movw	r1, #0
     ac8:	movt	r1, #0
     acc:	mvn	r0, #0
     ad0:	bl	0 <coda_set_error>
     ad4:	mvn	r0, #0
     ad8:	str	r0, [fp, #-12]
     adc:	b	c3c <read_dim_array+0x310>
     ae0:	movw	r0, #0
     ae4:	str	r0, [sp, #32]
     ae8:	ldr	r0, [sp, #32]
     aec:	ldr	r1, [fp, #8]
     af0:	ldr	r2, [r1]
     af4:	ldr	r1, [r1, #4]
     af8:	subs	r2, r0, r2
     afc:	rscs	r0, r1, r0, asr #31
     b00:	bge	c34 <read_dim_array+0x308>
     b04:	b	b08 <read_dim_array+0x1dc>
     b08:	ldr	r0, [fp, #-16]
     b0c:	ldr	r1, [fp, #-20]	; 0xffffffec
     b10:	add	r2, sp, #24
     b14:	bl	800 <read_length_value>
     b18:	cmp	r0, #0
     b1c:	beq	b38 <read_dim_array+0x20c>
     b20:	ldr	r0, [fp, #12]
     b24:	ldr	r0, [r0]
     b28:	bl	0 <free>
     b2c:	mvn	r0, #0
     b30:	str	r0, [fp, #-12]
     b34:	b	c3c <read_dim_array+0x310>
     b38:	ldr	r0, [sp, #24]
     b3c:	ldr	r1, [sp, #28]
     b40:	ldr	r2, [fp, #-20]	; 0xffffffec
     b44:	ldr	r3, [r2]
     b48:	ldr	ip, [r2, #4]
     b4c:	adds	r0, r3, r0
     b50:	adc	r1, ip, r1
     b54:	str	r0, [r2]
     b58:	str	r1, [r2, #4]
     b5c:	ldrb	r0, [sp, #24]
     b60:	tst	r0, #3
     b64:	beq	b98 <read_dim_array+0x26c>
     b68:	b	b6c <read_dim_array+0x240>
     b6c:	ldr	r0, [sp, #24]
     b70:	and	r0, r0, #3
     b74:	ldr	r1, [fp, #-20]	; 0xffffffec
     b78:	ldr	r2, [r1]
     b7c:	ldr	r3, [r1, #4]
     b80:	subs	r0, r2, r0
     b84:	sbc	r2, r3, #0
     b88:	adds	r0, r0, #4
     b8c:	adc	r2, r2, #0
     b90:	str	r0, [r1]
     b94:	str	r2, [r1, #4]
     b98:	ldr	r0, [fp, #-16]
     b9c:	ldr	r1, [fp, #-20]	; 0xffffffec
     ba0:	ldr	r2, [fp, #12]
     ba4:	ldr	r2, [r2]
     ba8:	ldr	r3, [sp, #32]
     bac:	add	r2, r2, r3, lsl #3
     bb0:	bl	800 <read_length_value>
     bb4:	cmp	r0, #0
     bb8:	beq	bd4 <read_dim_array+0x2a8>
     bbc:	ldr	r0, [fp, #12]
     bc0:	ldr	r0, [r0]
     bc4:	bl	0 <free>
     bc8:	mvn	r0, #0
     bcc:	str	r0, [fp, #-12]
     bd0:	b	c3c <read_dim_array+0x310>
     bd4:	ldr	r0, [fp, #12]
     bd8:	ldr	r0, [r0]
     bdc:	ldr	r1, [sp, #32]
     be0:	ldr	r1, [r0, r1, lsl #3]!
     be4:	ldr	r0, [r0, #4]
     be8:	orr	r0, r1, r0
     bec:	cmp	r0, #0
     bf0:	bne	c20 <read_dim_array+0x2f4>
     bf4:	b	bf8 <read_dim_array+0x2cc>
     bf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     bfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
     c00:	ldr	r2, [fp, #12]
     c04:	ldr	r2, [r2]
     c08:	ldr	r3, [sp, #32]
     c0c:	str	r0, [r2, r3, lsl #3]!
     c10:	str	r1, [r2, #4]
     c14:	ldr	r0, [sp, #32]
     c18:	ldr	r1, [fp, #16]
     c1c:	str	r0, [r1]
     c20:	b	c24 <read_dim_array+0x2f8>
     c24:	ldr	r0, [sp, #32]
     c28:	add	r0, r0, #1
     c2c:	str	r0, [sp, #32]
     c30:	b	ae8 <read_dim_array+0x1bc>
     c34:	movw	r0, #0
     c38:	str	r0, [fp, #-12]
     c3c:	ldr	r0, [fp, #-12]
     c40:	sub	sp, fp, #8
     c44:	pop	{r4, r5, fp, pc}
     c48:	.word	0xfffffed4

00000c4c <read_att_array>:
     c4c:	push	{r4, sl, fp, lr}
     c50:	add	fp, sp, #8
     c54:	sub	sp, sp, #136	; 0x88
     c58:	str	r0, [fp, #-16]
     c5c:	str	r1, [fp, #-20]	; 0xffffffec
     c60:	str	r2, [fp, #-24]	; 0xffffffe8
     c64:	str	r3, [fp, #-28]	; 0xffffffe4
     c68:	ldr	r0, [fp, #-16]
     c6c:	ldr	r0, [r0, #52]	; 0x34
     c70:	ldr	r1, [fp, #-20]	; 0xffffffec
     c74:	ldr	r2, [r1]
     c78:	ldr	r3, [r1, #4]
     c7c:	sub	r1, fp, #36	; 0x24
     c80:	mov	ip, sp
     c84:	str	r1, [ip, #8]
     c88:	mov	r1, #0
     c8c:	str	r1, [ip, #4]
     c90:	mov	r1, #4
     c94:	str	r1, [ip]
     c98:	bl	5ac <read_bytes>
     c9c:	cmp	r0, #0
     ca0:	bge	cb0 <read_att_array+0x64>
     ca4:	mvn	r0, #0
     ca8:	str	r0, [fp, #-12]
     cac:	b	16e8 <read_att_array+0xa9c>
     cb0:	sub	r0, fp, #36	; 0x24
     cb4:	bl	2190 <swap4>
     cb8:	ldr	r0, [fp, #-20]	; 0xffffffec
     cbc:	ldr	r1, [r0]
     cc0:	ldr	r2, [r0, #4]
     cc4:	adds	r1, r1, #4
     cc8:	adc	r2, r2, #0
     ccc:	str	r1, [r0]
     cd0:	str	r2, [r0, #4]
     cd4:	ldr	r0, [fp, #-16]
     cd8:	ldr	r1, [fp, #-20]	; 0xffffffec
     cdc:	sub	r2, fp, #48	; 0x30
     ce0:	bl	800 <read_length_value>
     ce4:	cmp	r0, #0
     ce8:	beq	cf8 <read_att_array+0xac>
     cec:	mvn	r0, #0
     cf0:	str	r0, [fp, #-12]
     cf4:	b	16e8 <read_att_array+0xa9c>
     cf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
     cfc:	cmp	r0, #0
     d00:	bne	d50 <read_att_array+0x104>
     d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d08:	mov	r1, #0
     d0c:	str	r1, [r0]
     d10:	ldr	r0, [fp, #-48]	; 0xffffffd0
     d14:	ldr	r1, [fp, #-44]	; 0xffffffd4
     d18:	orr	r0, r0, r1
     d1c:	cmp	r0, #0
     d20:	beq	d44 <read_att_array+0xf8>
     d24:	b	d28 <read_att_array+0xdc>
     d28:	ldr	r0, [pc, #2500]	; 16f4 <read_att_array+0xaa8>
     d2c:	movw	r1, #0
     d30:	movt	r1, #0
     d34:	bl	0 <coda_set_error>
     d38:	mvn	r0, #0
     d3c:	str	r0, [fp, #-12]
     d40:	b	16e8 <read_att_array+0xa9c>
     d44:	movw	r0, #0
     d48:	str	r0, [fp, #-12]
     d4c:	b	16e8 <read_att_array+0xa9c>
     d50:	ldr	r0, [fp, #-36]	; 0xffffffdc
     d54:	cmp	r0, #12
     d58:	beq	d78 <read_att_array+0x12c>
     d5c:	ldr	r0, [pc, #2448]	; 16f4 <read_att_array+0xaa8>
     d60:	movw	r1, #0
     d64:	movt	r1, #0
     d68:	bl	0 <coda_set_error>
     d6c:	mvn	r0, #0
     d70:	str	r0, [fp, #-12]
     d74:	b	16e8 <read_att_array+0xa9c>
     d78:	movw	r0, #6
     d7c:	bl	0 <coda_type_record_new>
     d80:	str	r0, [fp, #-32]	; 0xffffffe0
     d84:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d88:	movw	r1, #0
     d8c:	cmp	r0, r1
     d90:	bne	da0 <read_att_array+0x154>
     d94:	mvn	r0, #0
     d98:	str	r0, [fp, #-12]
     d9c:	b	16e8 <read_att_array+0xa9c>
     da0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     da4:	movw	r1, #0
     da8:	bl	0 <coda_mem_record_new>
     dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
     db0:	str	r0, [r1]
     db4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     db8:	bl	0 <coda_type_release>
     dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     dc0:	ldr	r0, [r0]
     dc4:	movw	r1, #0
     dc8:	cmp	r0, r1
     dcc:	bne	ddc <read_att_array+0x190>
     dd0:	mvn	r0, #0
     dd4:	str	r0, [fp, #-12]
     dd8:	b	16e8 <read_att_array+0xa9c>
     ddc:	movw	r0, #0
     de0:	str	r0, [fp, #-52]	; 0xffffffcc
     de4:	ldr	r0, [fp, #-52]	; 0xffffffcc
     de8:	ldr	r1, [fp, #-48]	; 0xffffffd0
     dec:	ldr	r2, [fp, #-44]	; 0xffffffd4
     df0:	subs	r1, r0, r1
     df4:	rscs	r0, r2, r0, asr #31
     df8:	bge	16e0 <read_att_array+0xa94>
     dfc:	b	e00 <read_att_array+0x1b4>
     e00:	ldr	r0, [fp, #-16]
     e04:	ldr	r1, [fp, #-20]	; 0xffffffec
     e08:	sub	r2, fp, #64	; 0x40
     e0c:	bl	800 <read_length_value>
     e10:	cmp	r0, #0
     e14:	beq	e24 <read_att_array+0x1d8>
     e18:	mvn	r0, #0
     e1c:	str	r0, [fp, #-12]
     e20:	b	16e8 <read_att_array+0xa9c>
     e24:	ldr	r0, [fp, #-64]	; 0xffffffc0
     e28:	add	r0, r0, #1
     e2c:	bl	0 <malloc>
     e30:	str	r0, [sp, #56]	; 0x38
     e34:	ldr	r0, [sp, #56]	; 0x38
     e38:	movw	r1, #0
     e3c:	cmp	r0, r1
     e40:	bne	e84 <read_att_array+0x238>
     e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e48:	ldr	r0, [r0]
     e4c:	bl	0 <coda_dynamic_type_delete>
     e50:	ldr	r0, [fp, #-64]	; 0xffffffc0
     e54:	add	r2, r0, #1
     e58:	mvn	r0, #0
     e5c:	movw	r1, #0
     e60:	movt	r1, #0
     e64:	movw	r3, #0
     e68:	movt	r3, #0
     e6c:	movw	ip, #230	; 0xe6
     e70:	str	ip, [sp]
     e74:	bl	0 <coda_set_error>
     e78:	mvn	r0, #0
     e7c:	str	r0, [fp, #-12]
     e80:	b	16e8 <read_att_array+0xa9c>
     e84:	ldr	r0, [sp, #56]	; 0x38
     e88:	ldr	r1, [fp, #-64]	; 0xffffffc0
     e8c:	mov	r2, #0
     e90:	strb	r2, [r0, r1]
     e94:	ldr	r0, [fp, #-16]
     e98:	ldr	r0, [r0, #52]	; 0x34
     e9c:	ldr	r1, [fp, #-20]	; 0xffffffec
     ea0:	ldr	r2, [r1]
     ea4:	ldr	r3, [r1, #4]
     ea8:	ldr	r1, [fp, #-64]	; 0xffffffc0
     eac:	ldr	ip, [fp, #-60]	; 0xffffffc4
     eb0:	ldr	lr, [sp, #56]	; 0x38
     eb4:	mov	r4, sp
     eb8:	str	lr, [r4, #8]
     ebc:	str	ip, [r4, #4]
     ec0:	str	r1, [r4]
     ec4:	bl	5ac <read_bytes>
     ec8:	cmp	r0, #0
     ecc:	bge	ef0 <read_att_array+0x2a4>
     ed0:	ldr	r0, [sp, #56]	; 0x38
     ed4:	bl	0 <free>
     ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     edc:	ldr	r0, [r0]
     ee0:	bl	0 <coda_dynamic_type_delete>
     ee4:	mvn	r0, #0
     ee8:	str	r0, [fp, #-12]
     eec:	b	16e8 <read_att_array+0xa9c>
     ef0:	ldr	r0, [fp, #-64]	; 0xffffffc0
     ef4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     ef8:	ldr	r2, [fp, #-20]	; 0xffffffec
     efc:	ldr	r3, [r2]
     f00:	ldr	ip, [r2, #4]
     f04:	adds	r0, r3, r0
     f08:	adc	r1, ip, r1
     f0c:	str	r0, [r2]
     f10:	str	r1, [r2, #4]
     f14:	ldrb	r0, [fp, #-64]	; 0xffffffc0
     f18:	tst	r0, #3
     f1c:	beq	f50 <read_att_array+0x304>
     f20:	b	f24 <read_att_array+0x2d8>
     f24:	ldr	r0, [fp, #-64]	; 0xffffffc0
     f28:	and	r0, r0, #3
     f2c:	ldr	r1, [fp, #-20]	; 0xffffffec
     f30:	ldr	r2, [r1]
     f34:	ldr	r3, [r1, #4]
     f38:	subs	r0, r2, r0
     f3c:	sbc	r2, r3, #0
     f40:	adds	r0, r0, #4
     f44:	adc	r2, r2, #0
     f48:	str	r0, [r1]
     f4c:	str	r2, [r1, #4]
     f50:	ldr	r0, [fp, #-16]
     f54:	ldr	r0, [r0, #52]	; 0x34
     f58:	ldr	r1, [fp, #-20]	; 0xffffffec
     f5c:	ldr	r2, [r1]
     f60:	ldr	r3, [r1, #4]
     f64:	sub	r1, fp, #68	; 0x44
     f68:	mov	ip, sp
     f6c:	str	r1, [ip, #8]
     f70:	mov	r1, #0
     f74:	str	r1, [ip, #4]
     f78:	mov	r1, #4
     f7c:	str	r1, [ip]
     f80:	bl	5ac <read_bytes>
     f84:	cmp	r0, #0
     f88:	bge	fac <read_att_array+0x360>
     f8c:	ldr	r0, [sp, #56]	; 0x38
     f90:	bl	0 <free>
     f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f98:	ldr	r0, [r0]
     f9c:	bl	0 <coda_dynamic_type_delete>
     fa0:	mvn	r0, #0
     fa4:	str	r0, [fp, #-12]
     fa8:	b	16e8 <read_att_array+0xa9c>
     fac:	sub	r0, fp, #68	; 0x44
     fb0:	bl	2190 <swap4>
     fb4:	ldr	r0, [fp, #-20]	; 0xffffffec
     fb8:	ldr	r1, [r0]
     fbc:	ldr	r2, [r0, #4]
     fc0:	adds	r1, r1, #4
     fc4:	adc	r2, r2, #0
     fc8:	str	r1, [r0]
     fcc:	str	r2, [r0, #4]
     fd0:	ldr	r0, [fp, #-16]
     fd4:	ldr	r1, [fp, #-20]	; 0xffffffec
     fd8:	add	r2, sp, #64	; 0x40
     fdc:	bl	800 <read_length_value>
     fe0:	cmp	r0, #0
     fe4:	beq	ff4 <read_att_array+0x3a8>
     fe8:	mvn	r0, #0
     fec:	str	r0, [fp, #-12]
     ff0:	b	16e8 <read_att_array+0xa9c>
     ff4:	ldr	r0, [sp, #64]	; 0x40
     ff8:	str	r0, [sp, #60]	; 0x3c
     ffc:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1000:	sub	r0, r0, #1
    1004:	cmp	r0, #5
    1008:	str	r0, [sp, #20]
    100c:	bhi	106c <read_att_array+0x420>
    1010:	add	r0, pc, #8
    1014:	ldr	r1, [sp, #20]
    1018:	ldr	r0, [r0, r1, lsl #2]
    101c:	mov	pc, r0
    1020:	.word	0x00001038
    1024:	.word	0x00001038
    1028:	.word	0x0000103c
    102c:	.word	0x0000104c
    1030:	.word	0x0000104c
    1034:	.word	0x0000105c
    1038:	b	10a0 <read_att_array+0x454>
    103c:	ldr	r0, [sp, #60]	; 0x3c
    1040:	lsl	r0, r0, #1
    1044:	str	r0, [sp, #60]	; 0x3c
    1048:	b	10a0 <read_att_array+0x454>
    104c:	ldr	r0, [sp, #60]	; 0x3c
    1050:	lsl	r0, r0, #2
    1054:	str	r0, [sp, #60]	; 0x3c
    1058:	b	10a0 <read_att_array+0x454>
    105c:	ldr	r0, [sp, #60]	; 0x3c
    1060:	lsl	r0, r0, #3
    1064:	str	r0, [sp, #60]	; 0x3c
    1068:	b	10a0 <read_att_array+0x454>
    106c:	ldr	r0, [sp, #56]	; 0x38
    1070:	bl	0 <free>
    1074:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1078:	ldr	r0, [r0]
    107c:	bl	0 <coda_dynamic_type_delete>
    1080:	ldr	r0, [pc, #1644]	; 16f4 <read_att_array+0xaa8>
    1084:	ldr	r2, [fp, #-68]	; 0xffffffbc
    1088:	movw	r1, #0
    108c:	movt	r1, #0
    1090:	bl	0 <coda_set_error>
    1094:	mvn	r0, #0
    1098:	str	r0, [fp, #-12]
    109c:	b	16e8 <read_att_array+0xa9c>
    10a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10a4:	movw	r1, #0
    10a8:	cmp	r0, r1
    10ac:	beq	14b8 <read_att_array+0x86c>
    10b0:	ldr	r0, [sp, #64]	; 0x40
    10b4:	ldr	r1, [sp, #68]	; 0x44
    10b8:	eor	r0, r0, #1
    10bc:	orr	r0, r0, r1
    10c0:	cmp	r0, #0
    10c4:	bne	124c <read_att_array+0x600>
    10c8:	b	10cc <read_att_array+0x480>
    10cc:	ldr	r0, [sp, #56]	; 0x38
    10d0:	movw	r1, #0
    10d4:	movt	r1, #0
    10d8:	bl	0 <strcmp>
    10dc:	cmp	r0, #0
    10e0:	beq	10fc <read_att_array+0x4b0>
    10e4:	ldr	r0, [sp, #56]	; 0x38
    10e8:	movw	r1, #0
    10ec:	movt	r1, #0
    10f0:	bl	0 <strcmp>
    10f4:	cmp	r0, #0
    10f8:	bne	124c <read_att_array+0x600>
    10fc:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1100:	cmp	r0, #5
    1104:	bne	11a4 <read_att_array+0x558>
    1108:	ldr	r0, [fp, #-16]
    110c:	ldr	r0, [r0, #52]	; 0x34
    1110:	ldr	r1, [fp, #-20]	; 0xffffffec
    1114:	ldr	r2, [r1]
    1118:	ldr	r3, [r1, #4]
    111c:	add	r1, sp, #52	; 0x34
    1120:	mov	ip, sp
    1124:	str	r1, [ip, #8]
    1128:	mov	r1, #0
    112c:	str	r1, [ip, #4]
    1130:	mov	r1, #4
    1134:	str	r1, [ip]
    1138:	bl	5ac <read_bytes>
    113c:	cmp	r0, #0
    1140:	bge	1164 <read_att_array+0x518>
    1144:	ldr	r0, [sp, #56]	; 0x38
    1148:	bl	0 <free>
    114c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1150:	ldr	r0, [r0]
    1154:	bl	0 <coda_dynamic_type_delete>
    1158:	mvn	r0, #0
    115c:	str	r0, [fp, #-12]
    1160:	b	16e8 <read_att_array+0xa9c>
    1164:	add	r0, sp, #52	; 0x34
    1168:	bl	2190 <swap4>
    116c:	ldr	r0, [sp, #56]	; 0x38
    1170:	ldrb	r0, [r0]
    1174:	cmp	r0, #115	; 0x73
    1178:	bne	1190 <read_att_array+0x544>
    117c:	vldr	s0, [sp, #52]	; 0x34
    1180:	vcvt.f64.f32	d16, s0
    1184:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1188:	vstr	d16, [r0]
    118c:	b	11a0 <read_att_array+0x554>
    1190:	vldr	s0, [sp, #52]	; 0x34
    1194:	vcvt.f64.f32	d16, s0
    1198:	ldr	r0, [fp, #-28]	; 0xffffffe4
    119c:	vstr	d16, [r0, #16]
    11a0:	b	1248 <read_att_array+0x5fc>
    11a4:	ldr	r0, [fp, #-68]	; 0xffffffbc
    11a8:	cmp	r0, #6
    11ac:	bne	1244 <read_att_array+0x5f8>
    11b0:	ldr	r0, [fp, #-16]
    11b4:	ldr	r0, [r0, #52]	; 0x34
    11b8:	ldr	r1, [fp, #-20]	; 0xffffffec
    11bc:	ldr	r2, [r1]
    11c0:	ldr	r3, [r1, #4]
    11c4:	add	r1, sp, #40	; 0x28
    11c8:	mov	ip, sp
    11cc:	str	r1, [ip, #8]
    11d0:	mov	r1, #0
    11d4:	str	r1, [ip, #4]
    11d8:	mov	r1, #8
    11dc:	str	r1, [ip]
    11e0:	bl	5ac <read_bytes>
    11e4:	cmp	r0, #0
    11e8:	bge	120c <read_att_array+0x5c0>
    11ec:	ldr	r0, [sp, #56]	; 0x38
    11f0:	bl	0 <free>
    11f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    11f8:	ldr	r0, [r0]
    11fc:	bl	0 <coda_dynamic_type_delete>
    1200:	mvn	r0, #0
    1204:	str	r0, [fp, #-12]
    1208:	b	16e8 <read_att_array+0xa9c>
    120c:	add	r0, sp, #40	; 0x28
    1210:	bl	2250 <swap8>
    1214:	ldr	r0, [sp, #56]	; 0x38
    1218:	ldrb	r0, [r0]
    121c:	cmp	r0, #115	; 0x73
    1220:	bne	1234 <read_att_array+0x5e8>
    1224:	vldr	d16, [sp, #40]	; 0x28
    1228:	ldr	r0, [fp, #-28]	; 0xffffffe4
    122c:	vstr	d16, [r0]
    1230:	b	1240 <read_att_array+0x5f4>
    1234:	vldr	d16, [sp, #40]	; 0x28
    1238:	ldr	r0, [fp, #-28]	; 0xffffffe4
    123c:	vstr	d16, [r0, #16]
    1240:	b	1244 <read_att_array+0x5f8>
    1244:	b	1248 <read_att_array+0x5fc>
    1248:	b	124c <read_att_array+0x600>
    124c:	ldr	r0, [sp, #64]	; 0x40
    1250:	ldr	r1, [sp, #68]	; 0x44
    1254:	eor	r0, r0, #1
    1258:	orr	r0, r0, r1
    125c:	cmp	r0, #0
    1260:	bne	14b4 <read_att_array+0x868>
    1264:	b	1268 <read_att_array+0x61c>
    1268:	ldr	r0, [fp, #-68]	; 0xffffffbc
    126c:	cmp	r0, #2
    1270:	beq	14b4 <read_att_array+0x868>
    1274:	ldr	r0, [sp, #56]	; 0x38
    1278:	movw	r1, #0
    127c:	movt	r1, #0
    1280:	bl	0 <strcmp>
    1284:	cmp	r0, #0
    1288:	beq	12b8 <read_att_array+0x66c>
    128c:	ldr	r0, [sp, #56]	; 0x38
    1290:	movw	r1, #0
    1294:	movt	r1, #0
    1298:	bl	0 <strcmp>
    129c:	cmp	r0, #0
    12a0:	bne	14b4 <read_att_array+0x868>
    12a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    12a8:	vldr	d0, [r0, #24]
    12ac:	bl	0 <coda_isNaN>
    12b0:	cmp	r0, #0
    12b4:	beq	14b4 <read_att_array+0x868>
    12b8:	ldr	r0, [fp, #-16]
    12bc:	ldr	r0, [r0, #52]	; 0x34
    12c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    12c4:	ldr	r2, [r1]
    12c8:	ldr	r3, [r1, #4]
    12cc:	ldr	r1, [sp, #60]	; 0x3c
    12d0:	asr	ip, r1, #31
    12d4:	add	lr, sp, #32
    12d8:	mov	r4, sp
    12dc:	str	lr, [r4, #8]
    12e0:	str	ip, [r4, #4]
    12e4:	str	r1, [r4]
    12e8:	bl	5ac <read_bytes>
    12ec:	cmp	r0, #0
    12f0:	bge	1314 <read_att_array+0x6c8>
    12f4:	ldr	r0, [sp, #56]	; 0x38
    12f8:	bl	0 <free>
    12fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1300:	ldr	r0, [r0]
    1304:	bl	0 <coda_dynamic_type_delete>
    1308:	mvn	r0, #0
    130c:	str	r0, [fp, #-12]
    1310:	b	16e8 <read_att_array+0xa9c>
    1314:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1318:	sub	r0, r0, #1
    131c:	cmp	r0, #10
    1320:	str	r0, [sp, #16]
    1324:	bhi	1490 <read_att_array+0x844>
    1328:	add	r0, pc, #8
    132c:	ldr	r1, [sp, #16]
    1330:	ldr	r0, [r0, r1, lsl #2]
    1334:	mov	pc, r0
    1338:	.word	0x00001364
    133c:	.word	0x00001490
    1340:	.word	0x0000137c
    1344:	.word	0x0000139c
    1348:	.word	0x000013bc
    134c:	.word	0x000013d8
    1350:	.word	0x000013f0
    1354:	.word	0x00001408
    1358:	.word	0x00001428
    135c:	.word	0x00001448
    1360:	.word	0x0000146c
    1364:	ldrsb	r0, [sp, #32]
    1368:	vmov	s0, r0
    136c:	vcvt.f64.s32	d16, s0
    1370:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1374:	vstr	d16, [r0, #24]
    1378:	b	14b0 <read_att_array+0x864>
    137c:	add	r0, sp, #32
    1380:	bl	23b8 <swap2>
    1384:	ldrsh	r0, [sp, #32]
    1388:	vmov	s0, r0
    138c:	vcvt.f64.s32	d16, s0
    1390:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1394:	vstr	d16, [r0, #24]
    1398:	b	14b0 <read_att_array+0x864>
    139c:	add	r0, sp, #32
    13a0:	bl	2190 <swap4>
    13a4:	ldr	r0, [sp, #32]
    13a8:	vmov	s0, r0
    13ac:	vcvt.f64.s32	d16, s0
    13b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    13b4:	vstr	d16, [r0, #24]
    13b8:	b	14b0 <read_att_array+0x864>
    13bc:	add	r0, sp, #32
    13c0:	bl	2190 <swap4>
    13c4:	vldr	s0, [sp, #32]
    13c8:	vcvt.f64.f32	d16, s0
    13cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    13d0:	vstr	d16, [r0, #24]
    13d4:	b	14b0 <read_att_array+0x864>
    13d8:	add	r0, sp, #32
    13dc:	bl	2250 <swap8>
    13e0:	vldr	d16, [sp, #32]
    13e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    13e8:	vstr	d16, [r0, #24]
    13ec:	b	14b0 <read_att_array+0x864>
    13f0:	ldrb	r0, [sp, #32]
    13f4:	vmov	s0, r0
    13f8:	vcvt.f64.u32	d16, s0
    13fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1400:	vstr	d16, [r0, #24]
    1404:	b	14b0 <read_att_array+0x864>
    1408:	add	r0, sp, #32
    140c:	bl	23b8 <swap2>
    1410:	ldrh	r0, [sp, #32]
    1414:	vmov	s0, r0
    1418:	vcvt.f64.u32	d16, s0
    141c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1420:	vstr	d16, [r0, #24]
    1424:	b	14b0 <read_att_array+0x864>
    1428:	add	r0, sp, #32
    142c:	bl	2190 <swap4>
    1430:	ldr	r0, [sp, #32]
    1434:	vmov	s0, r0
    1438:	vcvt.f64.u32	d16, s0
    143c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1440:	vstr	d16, [r0, #24]
    1444:	b	14b0 <read_att_array+0x864>
    1448:	add	r0, sp, #32
    144c:	bl	2250 <swap8>
    1450:	ldr	r0, [sp, #32]
    1454:	ldr	r1, [sp, #36]	; 0x24
    1458:	bl	0 <__aeabi_l2d>
    145c:	vmov	d16, r0, r1
    1460:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1464:	vstr	d16, [r0, #24]
    1468:	b	14b0 <read_att_array+0x864>
    146c:	add	r0, sp, #32
    1470:	bl	2250 <swap8>
    1474:	ldr	r0, [sp, #32]
    1478:	ldr	r1, [sp, #36]	; 0x24
    147c:	bl	0 <__aeabi_ul2d>
    1480:	vmov	d16, r0, r1
    1484:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1488:	vstr	d16, [r0, #24]
    148c:	b	14b0 <read_att_array+0x864>
    1490:	movw	r0, #0
    1494:	movt	r0, #0
    1498:	movw	r1, #0
    149c:	movt	r1, #0
    14a0:	movw	r2, #417	; 0x1a1
    14a4:	movw	r3, #0
    14a8:	movt	r3, #0
    14ac:	bl	0 <__assert_fail>
    14b0:	b	14b4 <read_att_array+0x868>
    14b4:	b	14b8 <read_att_array+0x86c>
    14b8:	ldr	r0, [fp, #-68]	; 0xffffffbc
    14bc:	cmp	r0, #2
    14c0:	bne	14fc <read_att_array+0x8b0>
    14c4:	ldr	r0, [fp, #-68]	; 0xffffffbc
    14c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    14cc:	ldr	r2, [r1]
    14d0:	ldr	r3, [r1, #4]
    14d4:	ldr	r1, [sp, #64]	; 0x40
    14d8:	ldr	ip, [sp, #68]	; 0x44
    14dc:	mov	lr, sp
    14e0:	str	ip, [lr, #12]
    14e4:	str	r1, [lr, #8]
    14e8:	mov	r1, #0
    14ec:	str	r1, [lr]
    14f0:	bl	0 <coda_netcdf_basic_type_new>
    14f4:	str	r0, [fp, #-56]	; 0xffffffc8
    14f8:	b	152c <read_att_array+0x8e0>
    14fc:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1500:	ldr	r1, [fp, #-20]	; 0xffffffec
    1504:	ldr	r2, [r1]
    1508:	ldr	r3, [r1, #4]
    150c:	mov	r1, sp
    1510:	mov	ip, #0
    1514:	str	ip, [r1, #12]
    1518:	mov	lr, #1
    151c:	str	lr, [r1, #8]
    1520:	str	ip, [r1]
    1524:	bl	0 <coda_netcdf_basic_type_new>
    1528:	str	r0, [fp, #-56]	; 0xffffffc8
    152c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1530:	movw	r1, #0
    1534:	cmp	r0, r1
    1538:	bne	155c <read_att_array+0x910>
    153c:	ldr	r0, [sp, #56]	; 0x38
    1540:	bl	0 <free>
    1544:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1548:	ldr	r0, [r0]
    154c:	bl	0 <coda_dynamic_type_delete>
    1550:	mvn	r0, #0
    1554:	str	r0, [fp, #-12]
    1558:	b	16e8 <read_att_array+0xa9c>
    155c:	ldr	r0, [sp, #60]	; 0x3c
    1560:	ldr	r1, [fp, #-20]	; 0xffffffec
    1564:	ldr	r2, [r1]
    1568:	ldr	r3, [r1, #4]
    156c:	adds	r2, r2, r0
    1570:	adc	r0, r3, r0, asr #31
    1574:	str	r2, [r1]
    1578:	str	r0, [r1, #4]
    157c:	ldr	r0, [sp, #60]	; 0x3c
    1580:	and	r0, r0, #3
    1584:	cmp	r0, #0
    1588:	beq	15b4 <read_att_array+0x968>
    158c:	ldr	r0, [sp, #60]	; 0x3c
    1590:	and	r0, r0, #3
    1594:	rsb	r0, r0, #4
    1598:	ldr	r1, [fp, #-20]	; 0xffffffec
    159c:	ldr	r2, [r1]
    15a0:	ldr	r3, [r1, #4]
    15a4:	adds	r0, r2, r0
    15a8:	adc	r2, r3, #0
    15ac:	str	r0, [r1]
    15b0:	str	r2, [r1, #4]
    15b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
    15b8:	cmp	r0, #2
    15bc:	beq	15dc <read_att_array+0x990>
    15c0:	ldr	r0, [sp, #64]	; 0x40
    15c4:	ldr	r1, [sp, #68]	; 0x44
    15c8:	eor	r0, r0, #1
    15cc:	orr	r0, r0, r1
    15d0:	cmp	r0, #0
    15d4:	bne	1628 <read_att_array+0x9dc>
    15d8:	b	15dc <read_att_array+0x990>
    15dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    15e0:	ldr	r0, [r0]
    15e4:	ldr	r1, [sp, #56]	; 0x38
    15e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    15ec:	movw	r3, #1
    15f0:	bl	0 <coda_mem_record_add_field>
    15f4:	cmp	r0, #0
    15f8:	beq	1624 <read_att_array+0x9d8>
    15fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1600:	bl	0 <coda_dynamic_type_delete>
    1604:	ldr	r0, [sp, #56]	; 0x38
    1608:	bl	0 <free>
    160c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1610:	ldr	r0, [r0]
    1614:	bl	0 <coda_dynamic_type_delete>
    1618:	mvn	r0, #0
    161c:	str	r0, [fp, #-12]
    1620:	b	16e8 <read_att_array+0xa9c>
    1624:	b	16c8 <read_att_array+0xa7c>
    1628:	ldr	r0, [sp, #64]	; 0x40
    162c:	str	r0, [sp, #24]
    1630:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1634:	movw	r0, #1
    1638:	add	r1, sp, #24
    163c:	bl	0 <coda_netcdf_array_new>
    1640:	str	r0, [sp, #28]
    1644:	ldr	r0, [sp, #28]
    1648:	movw	r1, #0
    164c:	cmp	r0, r1
    1650:	bne	167c <read_att_array+0xa30>
    1654:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1658:	bl	0 <coda_dynamic_type_delete>
    165c:	ldr	r0, [sp, #56]	; 0x38
    1660:	bl	0 <free>
    1664:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1668:	ldr	r0, [r0]
    166c:	bl	0 <coda_dynamic_type_delete>
    1670:	mvn	r0, #0
    1674:	str	r0, [fp, #-12]
    1678:	b	16e8 <read_att_array+0xa9c>
    167c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1680:	ldr	r0, [r0]
    1684:	ldr	r1, [sp, #56]	; 0x38
    1688:	ldr	r2, [sp, #28]
    168c:	movw	r3, #1
    1690:	bl	0 <coda_mem_record_add_field>
    1694:	cmp	r0, #0
    1698:	beq	16c4 <read_att_array+0xa78>
    169c:	ldr	r0, [sp, #28]
    16a0:	bl	0 <coda_dynamic_type_delete>
    16a4:	ldr	r0, [sp, #56]	; 0x38
    16a8:	bl	0 <free>
    16ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    16b0:	ldr	r0, [r0]
    16b4:	bl	0 <coda_dynamic_type_delete>
    16b8:	mvn	r0, #0
    16bc:	str	r0, [fp, #-12]
    16c0:	b	16e8 <read_att_array+0xa9c>
    16c4:	b	16c8 <read_att_array+0xa7c>
    16c8:	ldr	r0, [sp, #56]	; 0x38
    16cc:	bl	0 <free>
    16d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    16d4:	add	r0, r0, #1
    16d8:	str	r0, [fp, #-52]	; 0xffffffcc
    16dc:	b	de4 <read_att_array+0x198>
    16e0:	movw	r0, #0
    16e4:	str	r0, [fp, #-12]
    16e8:	ldr	r0, [fp, #-12]
    16ec:	sub	sp, fp, #8
    16f0:	pop	{r4, sl, fp, pc}
    16f4:	.word	0xfffffed4

000016f8 <read_var_array>:
    16f8:	push	{r4, r5, fp, lr}
    16fc:	add	fp, sp, #8
    1700:	sub	sp, sp, #208	; 0xd0
    1704:	ldr	ip, [fp, #16]
    1708:	ldr	lr, [fp, #12]
    170c:	ldr	r4, [fp, #8]
    1710:	str	r0, [fp, #-16]
    1714:	str	r1, [fp, #-20]	; 0xffffffec
    1718:	str	r3, [fp, #-28]	; 0xffffffe4
    171c:	str	r2, [fp, #-32]	; 0xffffffe0
    1720:	ldr	r0, [fp, #-16]
    1724:	ldr	r0, [r0, #52]	; 0x34
    1728:	ldr	r1, [fp, #-20]	; 0xffffffec
    172c:	ldr	r2, [r1]
    1730:	ldr	r3, [r1, #4]
    1734:	sub	r1, fp, #36	; 0x24
    1738:	mov	r5, sp
    173c:	str	r1, [r5, #8]
    1740:	mov	r1, #0
    1744:	str	r1, [r5, #4]
    1748:	mov	r1, #4
    174c:	str	r1, [r5]
    1750:	str	ip, [sp, #36]	; 0x24
    1754:	str	lr, [sp, #32]
    1758:	str	r4, [sp, #28]
    175c:	bl	5ac <read_bytes>
    1760:	cmp	r0, #0
    1764:	bge	179c <read_var_array+0xa4>
    1768:	bl	0 <__errno_location>
    176c:	ldr	r0, [r0]
    1770:	bl	0 <strerror>
    1774:	mvn	r1, #21
    1778:	str	r0, [sp, #24]
    177c:	mov	r0, r1
    1780:	movw	r1, #0
    1784:	movt	r1, #0
    1788:	ldr	r2, [sp, #24]
    178c:	bl	0 <coda_set_error>
    1790:	mvn	r0, #0
    1794:	str	r0, [fp, #-12]
    1798:	b	2180 <read_var_array+0xa88>
    179c:	sub	r0, fp, #36	; 0x24
    17a0:	bl	2190 <swap4>
    17a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    17a8:	ldr	r1, [r0]
    17ac:	ldr	r2, [r0, #4]
    17b0:	adds	r1, r1, #4
    17b4:	adc	r2, r2, #0
    17b8:	str	r1, [r0]
    17bc:	str	r2, [r0, #4]
    17c0:	ldr	r0, [fp, #-16]
    17c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    17c8:	sub	r2, fp, #48	; 0x30
    17cc:	bl	800 <read_length_value>
    17d0:	cmp	r0, #0
    17d4:	beq	17e4 <read_var_array+0xec>
    17d8:	mvn	r0, #0
    17dc:	str	r0, [fp, #-12]
    17e0:	b	2180 <read_var_array+0xa88>
    17e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    17e8:	cmp	r0, #0
    17ec:	bne	1830 <read_var_array+0x138>
    17f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    17f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    17f8:	orr	r0, r0, r1
    17fc:	cmp	r0, #0
    1800:	beq	1824 <read_var_array+0x12c>
    1804:	b	1808 <read_var_array+0x110>
    1808:	ldr	r0, [pc, #2428]	; 218c <read_var_array+0xa94>
    180c:	movw	r1, #0
    1810:	movt	r1, #0
    1814:	bl	0 <coda_set_error>
    1818:	mvn	r0, #0
    181c:	str	r0, [fp, #-12]
    1820:	b	2180 <read_var_array+0xa88>
    1824:	movw	r0, #0
    1828:	str	r0, [fp, #-12]
    182c:	b	2180 <read_var_array+0xa88>
    1830:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1834:	cmp	r0, #11
    1838:	beq	1858 <read_var_array+0x160>
    183c:	ldr	r0, [pc, #2376]	; 218c <read_var_array+0xa94>
    1840:	movw	r1, #0
    1844:	movt	r1, #0
    1848:	bl	0 <coda_set_error>
    184c:	mvn	r0, #0
    1850:	str	r0, [fp, #-12]
    1854:	b	2180 <read_var_array+0xa88>
    1858:	movw	r0, #0
    185c:	str	r0, [fp, #-52]	; 0xffffffcc
    1860:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1864:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1868:	ldr	r2, [fp, #-44]	; 0xffffffd4
    186c:	subs	r1, r0, r1
    1870:	rscs	r0, r2, r0, asr #31
    1874:	bge	2178 <read_var_array+0xa80>
    1878:	b	187c <read_var_array+0x184>
    187c:	movw	r0, #0
    1880:	str	r0, [fp, #-60]	; 0xffffffc4
    1884:	str	r0, [sp, #64]	; 0x40
    1888:	str	r0, [sp, #60]	; 0x3c
    188c:	str	r0, [sp, #56]	; 0x38
    1890:	ldr	r0, [fp, #-16]
    1894:	ldr	r1, [fp, #-20]	; 0xffffffec
    1898:	add	r2, sp, #104	; 0x68
    189c:	bl	800 <read_length_value>
    18a0:	cmp	r0, #0
    18a4:	beq	18b4 <read_var_array+0x1bc>
    18a8:	mvn	r0, #0
    18ac:	str	r0, [fp, #-12]
    18b0:	b	2180 <read_var_array+0xa88>
    18b4:	ldr	r0, [sp, #104]	; 0x68
    18b8:	add	r0, r0, #1
    18bc:	bl	0 <malloc>
    18c0:	str	r0, [sp, #68]	; 0x44
    18c4:	ldr	r0, [sp, #68]	; 0x44
    18c8:	movw	r1, #0
    18cc:	cmp	r0, r1
    18d0:	bne	1908 <read_var_array+0x210>
    18d4:	ldr	r0, [sp, #104]	; 0x68
    18d8:	add	r2, r0, #1
    18dc:	mvn	r0, #0
    18e0:	movw	r1, #0
    18e4:	movt	r1, #0
    18e8:	movw	r3, #0
    18ec:	movt	r3, #0
    18f0:	movw	ip, #546	; 0x222
    18f4:	str	ip, [sp]
    18f8:	bl	0 <coda_set_error>
    18fc:	mvn	r0, #0
    1900:	str	r0, [fp, #-12]
    1904:	b	2180 <read_var_array+0xa88>
    1908:	ldr	r0, [sp, #68]	; 0x44
    190c:	ldr	r1, [sp, #104]	; 0x68
    1910:	mov	r2, #0
    1914:	strb	r2, [r0, r1]
    1918:	ldr	r0, [fp, #-16]
    191c:	ldr	r0, [r0, #52]	; 0x34
    1920:	ldr	r1, [fp, #-20]	; 0xffffffec
    1924:	ldr	r2, [r1]
    1928:	ldr	r3, [r1, #4]
    192c:	ldr	r1, [sp, #104]	; 0x68
    1930:	ldr	ip, [sp, #108]	; 0x6c
    1934:	ldr	lr, [sp, #68]	; 0x44
    1938:	mov	r4, sp
    193c:	str	lr, [r4, #8]
    1940:	str	ip, [r4, #4]
    1944:	str	r1, [r4]
    1948:	bl	5ac <read_bytes>
    194c:	cmp	r0, #0
    1950:	bge	1968 <read_var_array+0x270>
    1954:	ldr	r0, [sp, #68]	; 0x44
    1958:	bl	0 <free>
    195c:	mvn	r0, #0
    1960:	str	r0, [fp, #-12]
    1964:	b	2180 <read_var_array+0xa88>
    1968:	ldr	r0, [sp, #104]	; 0x68
    196c:	ldr	r1, [sp, #108]	; 0x6c
    1970:	ldr	r2, [fp, #-20]	; 0xffffffec
    1974:	ldr	r3, [r2]
    1978:	ldr	ip, [r2, #4]
    197c:	adds	r0, r3, r0
    1980:	adc	r1, ip, r1
    1984:	str	r0, [r2]
    1988:	str	r1, [r2, #4]
    198c:	ldrb	r0, [sp, #104]	; 0x68
    1990:	tst	r0, #3
    1994:	beq	19c8 <read_var_array+0x2d0>
    1998:	b	199c <read_var_array+0x2a4>
    199c:	ldr	r0, [sp, #104]	; 0x68
    19a0:	and	r0, r0, #3
    19a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    19a8:	ldr	r2, [r1]
    19ac:	ldr	r3, [r1, #4]
    19b0:	subs	r0, r2, r0
    19b4:	sbc	r2, r3, #0
    19b8:	adds	r0, r0, #4
    19bc:	adc	r2, r2, #0
    19c0:	str	r0, [r1]
    19c4:	str	r2, [r1, #4]
    19c8:	ldr	r0, [fp, #-16]
    19cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    19d0:	add	r2, sp, #88	; 0x58
    19d4:	bl	800 <read_length_value>
    19d8:	cmp	r0, #0
    19dc:	beq	19ec <read_var_array+0x2f4>
    19e0:	mvn	r0, #0
    19e4:	str	r0, [fp, #-12]
    19e8:	b	2180 <read_var_array+0xa88>
    19ec:	movw	r0, #0
    19f0:	str	r0, [sp, #52]	; 0x34
    19f4:	str	r0, [sp, #48]	; 0x30
    19f8:	ldr	r0, [sp, #48]	; 0x30
    19fc:	ldr	r1, [sp, #88]	; 0x58
    1a00:	ldr	r2, [sp, #92]	; 0x5c
    1a04:	subs	r1, r0, r1
    1a08:	rscs	r0, r2, r0, asr #31
    1a0c:	bge	1b74 <read_var_array+0x47c>
    1a10:	b	1a14 <read_var_array+0x31c>
    1a14:	ldr	r0, [fp, #-16]
    1a18:	ldr	r1, [fp, #-20]	; 0xffffffec
    1a1c:	add	r2, sp, #72	; 0x48
    1a20:	bl	800 <read_length_value>
    1a24:	cmp	r0, #0
    1a28:	beq	1a38 <read_var_array+0x340>
    1a2c:	mvn	r0, #0
    1a30:	str	r0, [fp, #-12]
    1a34:	b	2180 <read_var_array+0xa88>
    1a38:	ldr	r0, [sp, #76]	; 0x4c
    1a3c:	cmp	r0, #0
    1a40:	bmi	1a68 <read_var_array+0x370>
    1a44:	b	1a48 <read_var_array+0x350>
    1a48:	ldr	r0, [sp, #72]	; 0x48
    1a4c:	ldr	r1, [sp, #76]	; 0x4c
    1a50:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1a54:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1a58:	subs	r0, r0, r2
    1a5c:	sbcs	r1, r1, r3
    1a60:	blt	1a90 <read_var_array+0x398>
    1a64:	b	1a68 <read_var_array+0x370>
    1a68:	ldr	r0, [sp, #68]	; 0x44
    1a6c:	bl	0 <free>
    1a70:	ldr	r0, [pc, #1812]	; 218c <read_var_array+0xa94>
    1a74:	ldr	r2, [sp, #68]	; 0x44
    1a78:	movw	r1, #0
    1a7c:	movt	r1, #0
    1a80:	bl	0 <coda_set_error>
    1a84:	mvn	r0, #0
    1a88:	str	r0, [fp, #-12]
    1a8c:	b	2180 <read_var_array+0xa88>
    1a90:	ldr	r0, [sp, #48]	; 0x30
    1a94:	ldr	r1, [sp, #88]	; 0x58
    1a98:	ldr	r2, [sp, #92]	; 0x5c
    1a9c:	subs	r1, r1, #1
    1aa0:	sbc	r2, r2, #0
    1aa4:	eor	r1, r0, r1
    1aa8:	eor	r0, r2, r0, asr #31
    1aac:	orr	r0, r1, r0
    1ab0:	cmp	r0, #0
    1ab4:	bne	1ad8 <read_var_array+0x3e0>
    1ab8:	b	1abc <read_var_array+0x3c4>
    1abc:	ldr	r0, [fp, #8]
    1ac0:	ldr	r1, [sp, #72]	; 0x48
    1ac4:	ldr	r0, [r0, r1, lsl #3]
    1ac8:	str	r0, [sp, #64]	; 0x40
    1acc:	movw	r0, #1
    1ad0:	str	r0, [sp, #60]	; 0x3c
    1ad4:	b	1b2c <read_var_array+0x434>
    1ad8:	ldr	r0, [sp, #48]	; 0x30
    1adc:	cmp	r0, #8
    1ae0:	bge	1b10 <read_var_array+0x418>
    1ae4:	ldr	r0, [fp, #8]
    1ae8:	ldr	r1, [sp, #72]	; 0x48
    1aec:	ldr	r0, [r0, r1, lsl #3]
    1af0:	ldr	r1, [sp, #48]	; 0x30
    1af4:	sub	r2, fp, #96	; 0x60
    1af8:	add	r1, r2, r1, lsl #2
    1afc:	str	r0, [r1]
    1b00:	ldr	r0, [sp, #52]	; 0x34
    1b04:	add	r0, r0, #1
    1b08:	str	r0, [sp, #52]	; 0x34
    1b0c:	b	1b28 <read_var_array+0x430>
    1b10:	ldr	r0, [fp, #8]
    1b14:	ldr	r1, [sp, #72]	; 0x48
    1b18:	ldr	r0, [r0, r1, lsl #3]
    1b1c:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1b20:	mul	r0, r1, r0
    1b24:	str	r0, [fp, #-68]	; 0xffffffbc
    1b28:	b	1b2c <read_var_array+0x434>
    1b2c:	ldr	r0, [sp, #48]	; 0x30
    1b30:	cmp	r0, #0
    1b34:	bne	1b60 <read_var_array+0x468>
    1b38:	ldr	r0, [sp, #72]	; 0x48
    1b3c:	ldr	r1, [sp, #76]	; 0x4c
    1b40:	ldr	r2, [fp, #12]
    1b44:	eor	r1, r1, r2, asr #31
    1b48:	eor	r0, r0, r2
    1b4c:	orr	r0, r0, r1
    1b50:	clz	r0, r0
    1b54:	lsr	r0, r0, #5
    1b58:	and	r0, r0, #1
    1b5c:	str	r0, [sp, #56]	; 0x38
    1b60:	b	1b64 <read_var_array+0x46c>
    1b64:	ldr	r0, [sp, #48]	; 0x30
    1b68:	add	r0, r0, #1
    1b6c:	str	r0, [sp, #48]	; 0x30
    1b70:	b	19f8 <read_var_array+0x300>
    1b74:	bl	0 <coda_NaN>
    1b78:	vldr	d2, [pc, #968]	; 1f48 <read_var_array+0x850>
    1b7c:	vmov.f64	d16, #112	; 0x3f800000  1.0
    1b80:	vstr	d0, [sp, #16]
    1b84:	vmov.f64	d0, d16
    1b88:	vmov.f64	d1, d16
    1b8c:	vldr	d3, [sp, #16]
    1b90:	bl	0 <coda_conversion_new>
    1b94:	str	r0, [fp, #-64]	; 0xffffffc0
    1b98:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1b9c:	movw	r1, #0
    1ba0:	cmp	r0, r1
    1ba4:	bne	1bbc <read_var_array+0x4c4>
    1ba8:	ldr	r0, [sp, #68]	; 0x44
    1bac:	bl	0 <free>
    1bb0:	mvn	r0, #0
    1bb4:	str	r0, [fp, #-12]
    1bb8:	b	2180 <read_var_array+0xa88>
    1bbc:	ldr	r0, [fp, #-16]
    1bc0:	ldr	r1, [fp, #-20]	; 0xffffffec
    1bc4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1bc8:	sub	r2, fp, #60	; 0x3c
    1bcc:	bl	c4c <read_att_array>
    1bd0:	cmp	r0, #0
    1bd4:	beq	1bf4 <read_var_array+0x4fc>
    1bd8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1bdc:	bl	0 <coda_conversion_delete>
    1be0:	ldr	r0, [sp, #68]	; 0x44
    1be4:	bl	0 <free>
    1be8:	mvn	r0, #0
    1bec:	str	r0, [fp, #-12]
    1bf0:	b	2180 <read_var_array+0xa88>
    1bf4:	ldr	r0, [fp, #-16]
    1bf8:	ldr	r0, [r0, #52]	; 0x34
    1bfc:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c00:	ldr	r2, [r1]
    1c04:	ldr	r3, [r1, #4]
    1c08:	add	r1, sp, #100	; 0x64
    1c0c:	mov	ip, sp
    1c10:	str	r1, [ip, #8]
    1c14:	mov	r1, #0
    1c18:	str	r1, [ip, #4]
    1c1c:	mov	r1, #4
    1c20:	str	r1, [ip]
    1c24:	bl	5ac <read_bytes>
    1c28:	cmp	r0, #0
    1c2c:	bge	1c54 <read_var_array+0x55c>
    1c30:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1c34:	bl	0 <coda_dynamic_type_delete>
    1c38:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1c3c:	bl	0 <coda_conversion_delete>
    1c40:	ldr	r0, [sp, #68]	; 0x44
    1c44:	bl	0 <free>
    1c48:	mvn	r0, #0
    1c4c:	str	r0, [fp, #-12]
    1c50:	b	2180 <read_var_array+0xa88>
    1c54:	add	r0, sp, #100	; 0x64
    1c58:	bl	2190 <swap4>
    1c5c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1c60:	ldr	r1, [r0]
    1c64:	ldr	r2, [r0, #4]
    1c68:	adds	r1, r1, #4
    1c6c:	adc	r2, r2, #0
    1c70:	str	r1, [r0]
    1c74:	str	r2, [r0, #4]
    1c78:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1c7c:	vldr	d16, [r0]
    1c80:	vmov.f64	d17, #112	; 0x3f800000  1.0
    1c84:	vcmp.f64	d16, d17
    1c88:	vmrs	APSR_nzcv, fpscr
    1c8c:	bne	1ce4 <read_var_array+0x5ec>
    1c90:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1c94:	vldr	d16, [r0, #16]
    1c98:	vcmp.f64	d16, #0.0
    1c9c:	vmrs	APSR_nzcv, fpscr
    1ca0:	bne	1ce4 <read_var_array+0x5ec>
    1ca4:	ldr	r0, [sp, #100]	; 0x64
    1ca8:	cmp	r0, #5
    1cac:	beq	1cbc <read_var_array+0x5c4>
    1cb0:	ldr	r0, [sp, #100]	; 0x64
    1cb4:	cmp	r0, #6
    1cb8:	bne	1cd0 <read_var_array+0x5d8>
    1cbc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1cc0:	vldr	d0, [r0, #24]
    1cc4:	bl	0 <coda_isNaN>
    1cc8:	cmp	r0, #0
    1ccc:	beq	1ce0 <read_var_array+0x5e8>
    1cd0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1cd4:	bl	0 <coda_conversion_delete>
    1cd8:	movw	r0, #0
    1cdc:	str	r0, [fp, #-64]	; 0xffffffc0
    1ce0:	b	1ce4 <read_var_array+0x5ec>
    1ce4:	ldr	r0, [fp, #-16]
    1ce8:	ldr	r1, [fp, #-20]	; 0xffffffec
    1cec:	add	r2, sp, #80	; 0x50
    1cf0:	bl	800 <read_length_value>
    1cf4:	cmp	r0, #0
    1cf8:	beq	1d20 <read_var_array+0x628>
    1cfc:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1d00:	bl	0 <coda_dynamic_type_delete>
    1d04:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1d08:	bl	0 <coda_conversion_delete>
    1d0c:	ldr	r0, [sp, #68]	; 0x44
    1d10:	bl	0 <free>
    1d14:	mvn	r0, #0
    1d18:	str	r0, [fp, #-12]
    1d1c:	b	2180 <read_var_array+0xa88>
    1d20:	ldr	r0, [sp, #56]	; 0x38
    1d24:	cmp	r0, #0
    1d28:	beq	1d40 <read_var_array+0x648>
    1d2c:	ldr	r0, [sp, #80]	; 0x50
    1d30:	ldr	r1, [fp, #-16]
    1d34:	ldr	r2, [r1, #60]	; 0x3c
    1d38:	add	r0, r2, r0
    1d3c:	str	r0, [r1, #60]	; 0x3c
    1d40:	ldr	r0, [fp, #-16]
    1d44:	ldr	r0, [r0, #56]	; 0x38
    1d48:	cmp	r0, #1
    1d4c:	bne	1de8 <read_var_array+0x6f0>
    1d50:	ldr	r0, [fp, #-16]
    1d54:	ldr	r0, [r0, #52]	; 0x34
    1d58:	ldr	r1, [fp, #-20]	; 0xffffffec
    1d5c:	ldr	r2, [r1]
    1d60:	ldr	r3, [r1, #4]
    1d64:	add	r1, sp, #44	; 0x2c
    1d68:	mov	ip, sp
    1d6c:	str	r1, [ip, #8]
    1d70:	mov	r1, #0
    1d74:	str	r1, [ip, #4]
    1d78:	mov	r1, #4
    1d7c:	str	r1, [ip]
    1d80:	bl	5ac <read_bytes>
    1d84:	cmp	r0, #0
    1d88:	bge	1db0 <read_var_array+0x6b8>
    1d8c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1d90:	bl	0 <coda_dynamic_type_delete>
    1d94:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1d98:	bl	0 <coda_conversion_delete>
    1d9c:	ldr	r0, [sp, #68]	; 0x44
    1da0:	bl	0 <free>
    1da4:	mvn	r0, #0
    1da8:	str	r0, [fp, #-12]
    1dac:	b	2180 <read_var_array+0xa88>
    1db0:	add	r0, sp, #44	; 0x2c
    1db4:	bl	2190 <swap4>
    1db8:	ldr	r0, [sp, #44]	; 0x2c
    1dbc:	asr	r1, r0, #31
    1dc0:	str	r0, [fp, #-104]	; 0xffffff98
    1dc4:	str	r1, [fp, #-100]	; 0xffffff9c
    1dc8:	ldr	r0, [fp, #-20]	; 0xffffffec
    1dcc:	ldr	r1, [r0]
    1dd0:	ldr	r2, [r0, #4]
    1dd4:	adds	r1, r1, #4
    1dd8:	adc	r2, r2, #0
    1ddc:	str	r1, [r0]
    1de0:	str	r2, [r0, #4]
    1de4:	b	1e6c <read_var_array+0x774>
    1de8:	ldr	r0, [fp, #-16]
    1dec:	ldr	r0, [r0, #52]	; 0x34
    1df0:	ldr	r1, [fp, #-20]	; 0xffffffec
    1df4:	ldr	r2, [r1]
    1df8:	ldr	r3, [r1, #4]
    1dfc:	sub	r1, fp, #104	; 0x68
    1e00:	mov	ip, sp
    1e04:	str	r1, [ip, #8]
    1e08:	mov	r1, #0
    1e0c:	str	r1, [ip, #4]
    1e10:	mov	r1, #8
    1e14:	str	r1, [ip]
    1e18:	bl	5ac <read_bytes>
    1e1c:	cmp	r0, #0
    1e20:	bge	1e48 <read_var_array+0x750>
    1e24:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1e28:	bl	0 <coda_dynamic_type_delete>
    1e2c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1e30:	bl	0 <coda_conversion_delete>
    1e34:	ldr	r0, [sp, #68]	; 0x44
    1e38:	bl	0 <free>
    1e3c:	mvn	r0, #0
    1e40:	str	r0, [fp, #-12]
    1e44:	b	2180 <read_var_array+0xa88>
    1e48:	sub	r0, fp, #104	; 0x68
    1e4c:	bl	2250 <swap8>
    1e50:	ldr	r0, [fp, #-20]	; 0xffffffec
    1e54:	ldr	r1, [r0]
    1e58:	ldr	r2, [r0, #4]
    1e5c:	adds	r1, r1, #8
    1e60:	adc	r2, r2, #0
    1e64:	str	r1, [r0]
    1e68:	str	r2, [r0, #4]
    1e6c:	ldr	r0, [sp, #60]	; 0x3c
    1e70:	cmp	r0, #0
    1e74:	beq	1f50 <read_var_array+0x858>
    1e78:	ldr	r0, [sp, #100]	; 0x64
    1e7c:	cmp	r0, #2
    1e80:	bne	1ed0 <read_var_array+0x7d8>
    1e84:	ldr	r0, [sp, #52]	; 0x34
    1e88:	cmp	r0, #0
    1e8c:	bne	1e9c <read_var_array+0x7a4>
    1e90:	ldr	r0, [sp, #56]	; 0x38
    1e94:	cmp	r0, #0
    1e98:	bne	1ed0 <read_var_array+0x7d8>
    1e9c:	ldr	r0, [sp, #100]	; 0x64
    1ea0:	ldr	r2, [fp, #-104]	; 0xffffff98
    1ea4:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1ea8:	ldr	r1, [sp, #56]	; 0x38
    1eac:	ldr	ip, [sp, #64]	; 0x40
    1eb0:	asr	lr, ip, #31
    1eb4:	mov	r4, sp
    1eb8:	str	lr, [r4, #12]
    1ebc:	str	ip, [r4, #8]
    1ec0:	str	r1, [r4]
    1ec4:	bl	0 <coda_netcdf_basic_type_new>
    1ec8:	str	r0, [fp, #-56]	; 0xffffffc8
    1ecc:	b	1f44 <read_var_array+0x84c>
    1ed0:	ldr	r0, [sp, #100]	; 0x64
    1ed4:	ldr	r2, [fp, #-104]	; 0xffffff98
    1ed8:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1edc:	ldr	r1, [sp, #56]	; 0x38
    1ee0:	mov	ip, sp
    1ee4:	mov	lr, #0
    1ee8:	str	lr, [ip, #12]
    1eec:	mov	lr, #1
    1ef0:	str	lr, [ip, #8]
    1ef4:	str	r1, [ip]
    1ef8:	bl	0 <coda_netcdf_basic_type_new>
    1efc:	str	r0, [fp, #-56]	; 0xffffffc8
    1f00:	ldr	r0, [sp, #52]	; 0x34
    1f04:	cmp	r0, #8
    1f08:	bge	1f30 <read_var_array+0x838>
    1f0c:	ldr	r0, [sp, #64]	; 0x40
    1f10:	ldr	r1, [sp, #52]	; 0x34
    1f14:	sub	r2, fp, #96	; 0x60
    1f18:	add	r1, r2, r1, lsl #2
    1f1c:	str	r0, [r1]
    1f20:	ldr	r0, [sp, #52]	; 0x34
    1f24:	add	r0, r0, #1
    1f28:	str	r0, [sp, #52]	; 0x34
    1f2c:	b	1f40 <read_var_array+0x848>
    1f30:	ldr	r0, [sp, #64]	; 0x40
    1f34:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1f38:	mul	r0, r1, r0
    1f3c:	str	r0, [fp, #-68]	; 0xffffffbc
    1f40:	b	1f44 <read_var_array+0x84c>
    1f44:	b	1f7c <read_var_array+0x884>
	...
    1f50:	ldr	r0, [sp, #100]	; 0x64
    1f54:	ldr	r2, [fp, #-104]	; 0xffffff98
    1f58:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1f5c:	mov	r1, sp
    1f60:	mov	ip, #0
    1f64:	str	ip, [r1, #12]
    1f68:	mov	lr, #1
    1f6c:	str	lr, [r1, #8]
    1f70:	str	ip, [r1]
    1f74:	bl	0 <coda_netcdf_basic_type_new>
    1f78:	str	r0, [fp, #-56]	; 0xffffffc8
    1f7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1f80:	movw	r1, #0
    1f84:	cmp	r0, r1
    1f88:	bne	1fb0 <read_var_array+0x8b8>
    1f8c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1f90:	bl	0 <coda_dynamic_type_delete>
    1f94:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1f98:	bl	0 <coda_conversion_delete>
    1f9c:	ldr	r0, [sp, #68]	; 0x44
    1fa0:	bl	0 <free>
    1fa4:	mvn	r0, #0
    1fa8:	str	r0, [fp, #-12]
    1fac:	b	2180 <read_var_array+0xa88>
    1fb0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1fb4:	movw	r1, #0
    1fb8:	cmp	r0, r1
    1fbc:	beq	1ffc <read_var_array+0x904>
    1fc0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1fc4:	ldr	r1, [fp, #-64]	; 0xffffffc0
    1fc8:	bl	0 <coda_netcdf_basic_type_set_conversion>
    1fcc:	cmp	r0, #0
    1fd0:	beq	1ff8 <read_var_array+0x900>
    1fd4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1fd8:	bl	0 <coda_dynamic_type_delete>
    1fdc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1fe0:	bl	0 <coda_conversion_delete>
    1fe4:	ldr	r0, [sp, #68]	; 0x44
    1fe8:	bl	0 <free>
    1fec:	mvn	r0, #0
    1ff0:	str	r0, [fp, #-12]
    1ff4:	b	2180 <read_var_array+0xa88>
    1ff8:	b	1ffc <read_var_array+0x904>
    1ffc:	ldr	r0, [sp, #52]	; 0x34
    2000:	cmp	r0, #0
    2004:	bne	2090 <read_var_array+0x998>
    2008:	ldr	r0, [fp, #-60]	; 0xffffffc4
    200c:	movw	r1, #0
    2010:	cmp	r0, r1
    2014:	beq	2054 <read_var_array+0x95c>
    2018:	ldr	r0, [fp, #-56]	; 0xffffffc8
    201c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2020:	bl	0 <coda_netcdf_basic_type_set_attributes>
    2024:	cmp	r0, #0
    2028:	beq	2050 <read_var_array+0x958>
    202c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2030:	bl	0 <coda_dynamic_type_delete>
    2034:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2038:	bl	0 <coda_dynamic_type_delete>
    203c:	ldr	r0, [sp, #68]	; 0x44
    2040:	bl	0 <free>
    2044:	mvn	r0, #0
    2048:	str	r0, [fp, #-12]
    204c:	b	2180 <read_var_array+0xa88>
    2050:	b	2054 <read_var_array+0x95c>
    2054:	ldr	r0, [fp, #16]
    2058:	ldr	r1, [sp, #68]	; 0x44
    205c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2060:	movw	r3, #1
    2064:	bl	0 <coda_mem_record_add_field>
    2068:	cmp	r0, #0
    206c:	beq	208c <read_var_array+0x994>
    2070:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2074:	bl	0 <coda_dynamic_type_delete>
    2078:	ldr	r0, [sp, #68]	; 0x44
    207c:	bl	0 <free>
    2080:	mvn	r0, #0
    2084:	str	r0, [fp, #-12]
    2088:	b	2180 <read_var_array+0xa88>
    208c:	b	2160 <read_var_array+0xa68>
    2090:	sub	r1, fp, #96	; 0x60
    2094:	ldr	r0, [sp, #52]	; 0x34
    2098:	ldr	r2, [fp, #-56]	; 0xffffffc8
    209c:	bl	0 <coda_netcdf_array_new>
    20a0:	str	r0, [sp, #40]	; 0x28
    20a4:	ldr	r0, [sp, #40]	; 0x28
    20a8:	movw	r1, #0
    20ac:	cmp	r0, r1
    20b0:	bne	20d8 <read_var_array+0x9e0>
    20b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    20b8:	bl	0 <coda_dynamic_type_delete>
    20bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
    20c0:	bl	0 <coda_dynamic_type_delete>
    20c4:	ldr	r0, [sp, #68]	; 0x44
    20c8:	bl	0 <free>
    20cc:	mvn	r0, #0
    20d0:	str	r0, [fp, #-12]
    20d4:	b	2180 <read_var_array+0xa88>
    20d8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    20dc:	movw	r1, #0
    20e0:	cmp	r0, r1
    20e4:	beq	2124 <read_var_array+0xa2c>
    20e8:	ldr	r0, [sp, #40]	; 0x28
    20ec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    20f0:	bl	0 <coda_netcdf_array_set_attributes>
    20f4:	cmp	r0, #0
    20f8:	beq	2120 <read_var_array+0xa28>
    20fc:	ldr	r0, [sp, #40]	; 0x28
    2100:	bl	0 <coda_dynamic_type_delete>
    2104:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2108:	bl	0 <coda_dynamic_type_delete>
    210c:	ldr	r0, [sp, #68]	; 0x44
    2110:	bl	0 <free>
    2114:	mvn	r0, #0
    2118:	str	r0, [fp, #-12]
    211c:	b	2180 <read_var_array+0xa88>
    2120:	b	2124 <read_var_array+0xa2c>
    2124:	ldr	r0, [fp, #16]
    2128:	ldr	r1, [sp, #68]	; 0x44
    212c:	ldr	r2, [sp, #40]	; 0x28
    2130:	movw	r3, #1
    2134:	bl	0 <coda_mem_record_add_field>
    2138:	cmp	r0, #0
    213c:	beq	215c <read_var_array+0xa64>
    2140:	ldr	r0, [sp, #40]	; 0x28
    2144:	bl	0 <coda_dynamic_type_delete>
    2148:	ldr	r0, [sp, #68]	; 0x44
    214c:	bl	0 <free>
    2150:	mvn	r0, #0
    2154:	str	r0, [fp, #-12]
    2158:	b	2180 <read_var_array+0xa88>
    215c:	b	2160 <read_var_array+0xa68>
    2160:	ldr	r0, [sp, #68]	; 0x44
    2164:	bl	0 <free>
    2168:	ldr	r0, [fp, #-52]	; 0xffffffcc
    216c:	add	r0, r0, #1
    2170:	str	r0, [fp, #-52]	; 0xffffffcc
    2174:	b	1860 <read_var_array+0x168>
    2178:	movw	r0, #0
    217c:	str	r0, [fp, #-12]
    2180:	ldr	r0, [fp, #-12]
    2184:	sub	sp, fp, #8
    2188:	pop	{r4, r5, fp, pc}
    218c:	.word	0xfffffed4

00002190 <swap4>:
    2190:	sub	sp, sp, #8
    2194:	str	r0, [sp, #4]
    2198:	ldr	r0, [sp, #4]
    219c:	str	r0, [sp]
    21a0:	ldr	r0, [sp]
    21a4:	ldrb	r0, [r0]
    21a8:	ldr	r1, [sp]
    21ac:	ldrb	r1, [r1, #3]
    21b0:	eor	r0, r0, r1
    21b4:	ldr	r1, [sp]
    21b8:	strb	r0, [r1]
    21bc:	ldr	r0, [sp]
    21c0:	ldrb	r0, [r0]
    21c4:	ldr	r1, [sp]
    21c8:	ldrb	r1, [r1, #3]
    21cc:	eor	r0, r0, r1
    21d0:	ldr	r1, [sp]
    21d4:	strb	r0, [r1, #3]
    21d8:	ldr	r0, [sp]
    21dc:	ldrb	r0, [r0]
    21e0:	ldr	r1, [sp]
    21e4:	ldrb	r1, [r1, #3]
    21e8:	eor	r0, r0, r1
    21ec:	ldr	r1, [sp]
    21f0:	strb	r0, [r1]
    21f4:	ldr	r0, [sp]
    21f8:	ldrb	r0, [r0, #1]
    21fc:	ldr	r1, [sp]
    2200:	ldrb	r1, [r1, #2]
    2204:	eor	r0, r0, r1
    2208:	ldr	r1, [sp]
    220c:	strb	r0, [r1, #1]
    2210:	ldr	r0, [sp]
    2214:	ldrb	r0, [r0, #1]
    2218:	ldr	r1, [sp]
    221c:	ldrb	r1, [r1, #2]
    2220:	eor	r0, r0, r1
    2224:	ldr	r1, [sp]
    2228:	strb	r0, [r1, #2]
    222c:	ldr	r0, [sp]
    2230:	ldrb	r0, [r0, #1]
    2234:	ldr	r1, [sp]
    2238:	ldrb	r1, [r1, #2]
    223c:	eor	r0, r0, r1
    2240:	ldr	r1, [sp]
    2244:	strb	r0, [r1, #1]
    2248:	add	sp, sp, #8
    224c:	bx	lr

00002250 <swap8>:
    2250:	sub	sp, sp, #8
    2254:	str	r0, [sp, #4]
    2258:	ldr	r0, [sp, #4]
    225c:	str	r0, [sp]
    2260:	ldr	r0, [sp]
    2264:	ldrb	r0, [r0]
    2268:	ldr	r1, [sp]
    226c:	ldrb	r1, [r1, #7]
    2270:	eor	r0, r0, r1
    2274:	ldr	r1, [sp]
    2278:	strb	r0, [r1]
    227c:	ldr	r0, [sp]
    2280:	ldrb	r0, [r0]
    2284:	ldr	r1, [sp]
    2288:	ldrb	r1, [r1, #7]
    228c:	eor	r0, r0, r1
    2290:	ldr	r1, [sp]
    2294:	strb	r0, [r1, #7]
    2298:	ldr	r0, [sp]
    229c:	ldrb	r0, [r0]
    22a0:	ldr	r1, [sp]
    22a4:	ldrb	r1, [r1, #7]
    22a8:	eor	r0, r0, r1
    22ac:	ldr	r1, [sp]
    22b0:	strb	r0, [r1]
    22b4:	ldr	r0, [sp]
    22b8:	ldrb	r0, [r0, #1]
    22bc:	ldr	r1, [sp]
    22c0:	ldrb	r1, [r1, #6]
    22c4:	eor	r0, r0, r1
    22c8:	ldr	r1, [sp]
    22cc:	strb	r0, [r1, #1]
    22d0:	ldr	r0, [sp]
    22d4:	ldrb	r0, [r0, #1]
    22d8:	ldr	r1, [sp]
    22dc:	ldrb	r1, [r1, #6]
    22e0:	eor	r0, r0, r1
    22e4:	ldr	r1, [sp]
    22e8:	strb	r0, [r1, #6]
    22ec:	ldr	r0, [sp]
    22f0:	ldrb	r0, [r0, #1]
    22f4:	ldr	r1, [sp]
    22f8:	ldrb	r1, [r1, #6]
    22fc:	eor	r0, r0, r1
    2300:	ldr	r1, [sp]
    2304:	strb	r0, [r1, #1]
    2308:	ldr	r0, [sp]
    230c:	ldrb	r0, [r0, #2]
    2310:	ldr	r1, [sp]
    2314:	ldrb	r1, [r1, #5]
    2318:	eor	r0, r0, r1
    231c:	ldr	r1, [sp]
    2320:	strb	r0, [r1, #2]
    2324:	ldr	r0, [sp]
    2328:	ldrb	r0, [r0, #2]
    232c:	ldr	r1, [sp]
    2330:	ldrb	r1, [r1, #5]
    2334:	eor	r0, r0, r1
    2338:	ldr	r1, [sp]
    233c:	strb	r0, [r1, #5]
    2340:	ldr	r0, [sp]
    2344:	ldrb	r0, [r0, #2]
    2348:	ldr	r1, [sp]
    234c:	ldrb	r1, [r1, #5]
    2350:	eor	r0, r0, r1
    2354:	ldr	r1, [sp]
    2358:	strb	r0, [r1, #2]
    235c:	ldr	r0, [sp]
    2360:	ldrb	r0, [r0, #3]
    2364:	ldr	r1, [sp]
    2368:	ldrb	r1, [r1, #4]
    236c:	eor	r0, r0, r1
    2370:	ldr	r1, [sp]
    2374:	strb	r0, [r1, #3]
    2378:	ldr	r0, [sp]
    237c:	ldrb	r0, [r0, #3]
    2380:	ldr	r1, [sp]
    2384:	ldrb	r1, [r1, #4]
    2388:	eor	r0, r0, r1
    238c:	ldr	r1, [sp]
    2390:	strb	r0, [r1, #4]
    2394:	ldr	r0, [sp]
    2398:	ldrb	r0, [r0, #3]
    239c:	ldr	r1, [sp]
    23a0:	ldrb	r1, [r1, #4]
    23a4:	eor	r0, r0, r1
    23a8:	ldr	r1, [sp]
    23ac:	strb	r0, [r1, #3]
    23b0:	add	sp, sp, #8
    23b4:	bx	lr

000023b8 <swap2>:
    23b8:	sub	sp, sp, #8
    23bc:	str	r0, [sp, #4]
    23c0:	ldr	r0, [sp, #4]
    23c4:	str	r0, [sp]
    23c8:	ldr	r0, [sp]
    23cc:	ldrb	r0, [r0]
    23d0:	ldr	r1, [sp]
    23d4:	ldrb	r1, [r1, #1]
    23d8:	eor	r0, r0, r1
    23dc:	ldr	r1, [sp]
    23e0:	strb	r0, [r1]
    23e4:	ldr	r0, [sp]
    23e8:	ldrb	r0, [r0]
    23ec:	ldr	r1, [sp]
    23f0:	ldrb	r1, [r1, #1]
    23f4:	eor	r0, r0, r1
    23f8:	ldr	r1, [sp]
    23fc:	strb	r0, [r1, #1]
    2400:	ldr	r0, [sp]
    2404:	ldrb	r0, [r0]
    2408:	ldr	r1, [sp]
    240c:	ldrb	r1, [r1, #1]
    2410:	eor	r0, r0, r1
    2414:	ldr	r1, [sp]
    2418:	strb	r0, [r1]
    241c:	add	sp, sp, #8
    2420:	bx	lr
