
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-mem.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_mem_empty_record>:
   0:	push	{r4, r5, fp, lr}
   4:	add	fp, sp, #8
   8:	cmp	r0, #11
   c:	bcs	5c <coda_mem_empty_record+0x5c>
  10:	ldr	r5, [pc, #124]	; 94 <coda_mem_empty_record+0x94>
  14:	mov	r4, r0
  18:	bl	0 <__aeabi_read_tp>
  1c:	add	r0, r0, r5
  20:	ldr	r1, [r0, r4, lsl #2]
  24:	cmp	r1, #0
  28:	bne	54 <coda_mem_empty_record+0x54>
  2c:	mov	r0, r4
  30:	bl	0 <coda_type_empty_record>
  34:	mov	r1, #0
  38:	bl	0 <coda_mem_record_new>
  3c:	mov	r1, r0
  40:	bl	0 <__aeabi_read_tp>
  44:	add	r0, r0, r5
  48:	cmp	r1, #0
  4c:	str	r1, [r0, r4, lsl #2]
  50:	beq	74 <coda_mem_empty_record+0x74>
  54:	mov	r0, r1
  58:	pop	{r4, r5, fp, pc}
  5c:	movw	r0, #0
  60:	movw	r1, #0
  64:	movw	r3, #0
  68:	mov	r2, #49	; 0x31
  6c:	movt	r0, #0
  70:	b	88 <coda_mem_empty_record+0x88>
  74:	movw	r0, #0
  78:	movw	r1, #0
  7c:	movw	r3, #0
  80:	mov	r2, #53	; 0x35
  84:	movt	r0, #0
  88:	movt	r1, #0
  8c:	movt	r3, #0
  90:	bl	0 <__assert_fail>
  94:	.word	0x00000000

00000098 <coda_no_data_singleton>:
  98:	push	{r4, r5, fp, lr}
  9c:	add	fp, sp, #8
  a0:	cmp	r0, #11
  a4:	bcs	e4 <coda_no_data_singleton+0x4c>
  a8:	ldr	r1, [pc, #108]	; 11c <coda_no_data_singleton+0x84>
  ac:	mov	r4, r0
  b0:	bl	0 <__aeabi_read_tp>
  b4:	add	r0, r0, r1
  b8:	ldr	r0, [r0, r4, lsl #2]
  bc:	cmp	r0, #0
  c0:	popne	{r4, r5, fp, pc}
  c4:	bl	0 <__aeabi_read_tp>
  c8:	add	r5, r0, r1
  cc:	mov	r0, r4
  d0:	bl	0 <coda_mem_no_data_new>
  d4:	cmp	r0, #0
  d8:	str	r0, [r5, r4, lsl #2]
  dc:	beq	fc <coda_no_data_singleton+0x64>
  e0:	pop	{r4, r5, fp, pc}
  e4:	movw	r0, #0
  e8:	movw	r1, #0
  ec:	movw	r3, #0
  f0:	mov	r2, #61	; 0x3d
  f4:	movt	r0, #0
  f8:	b	110 <coda_no_data_singleton+0x78>
  fc:	movw	r0, #0
 100:	movw	r1, #0
 104:	movw	r3, #0
 108:	mov	r2, #65	; 0x41
 10c:	movt	r0, #0
 110:	movt	r1, #0
 114:	movt	r3, #0
 118:	bl	0 <__assert_fail>
 11c:	.word	0x00000000

00000120 <coda_mem_done>:
 120:	push	{r4, r5, fp, lr}
 124:	add	fp, sp, #8
 128:	ldr	r4, [pc, #660]	; 3c4 <coda_mem_done+0x2a4>
 12c:	bl	0 <__aeabi_read_tp>
 130:	ldr	r0, [r0, r4]
 134:	cmp	r0, #0
 138:	beq	140 <coda_mem_done+0x20>
 13c:	bl	0 <coda_mem_type_delete>
 140:	mov	r5, #0
 144:	bl	0 <__aeabi_read_tp>
 148:	str	r5, [r0, r4]!
 14c:	ldr	r0, [r0, #4]
 150:	cmp	r0, #0
 154:	beq	15c <coda_mem_done+0x3c>
 158:	bl	0 <coda_mem_type_delete>
 15c:	bl	0 <__aeabi_read_tp>
 160:	add	r0, r0, r4
 164:	str	r5, [r0, #4]
 168:	ldr	r0, [r0, #8]
 16c:	cmp	r0, #0
 170:	beq	178 <coda_mem_done+0x58>
 174:	bl	0 <coda_mem_type_delete>
 178:	bl	0 <__aeabi_read_tp>
 17c:	add	r0, r0, r4
 180:	mov	r5, #0
 184:	str	r5, [r0, #8]
 188:	ldr	r0, [r0, #12]
 18c:	cmp	r0, #0
 190:	beq	198 <coda_mem_done+0x78>
 194:	bl	0 <coda_mem_type_delete>
 198:	bl	0 <__aeabi_read_tp>
 19c:	add	r0, r0, r4
 1a0:	str	r5, [r0, #12]
 1a4:	ldr	r0, [r0, #16]
 1a8:	cmp	r0, #0
 1ac:	beq	1b4 <coda_mem_done+0x94>
 1b0:	bl	0 <coda_mem_type_delete>
 1b4:	bl	0 <__aeabi_read_tp>
 1b8:	add	r0, r0, r4
 1bc:	mov	r5, #0
 1c0:	str	r5, [r0, #16]
 1c4:	ldr	r0, [r0, #20]
 1c8:	cmp	r0, #0
 1cc:	beq	1d4 <coda_mem_done+0xb4>
 1d0:	bl	0 <coda_mem_type_delete>
 1d4:	bl	0 <__aeabi_read_tp>
 1d8:	add	r0, r0, r4
 1dc:	str	r5, [r0, #20]
 1e0:	ldr	r0, [r0, #24]
 1e4:	cmp	r0, #0
 1e8:	beq	1f0 <coda_mem_done+0xd0>
 1ec:	bl	0 <coda_mem_type_delete>
 1f0:	bl	0 <__aeabi_read_tp>
 1f4:	add	r0, r0, r4
 1f8:	mov	r5, #0
 1fc:	str	r5, [r0, #24]
 200:	ldr	r0, [r0, #28]
 204:	cmp	r0, #0
 208:	beq	210 <coda_mem_done+0xf0>
 20c:	bl	0 <coda_mem_type_delete>
 210:	bl	0 <__aeabi_read_tp>
 214:	add	r0, r0, r4
 218:	str	r5, [r0, #28]
 21c:	ldr	r0, [r0, #32]
 220:	cmp	r0, #0
 224:	beq	22c <coda_mem_done+0x10c>
 228:	bl	0 <coda_mem_type_delete>
 22c:	bl	0 <__aeabi_read_tp>
 230:	add	r0, r0, r4
 234:	mov	r5, #0
 238:	str	r5, [r0, #32]
 23c:	ldr	r0, [r0, #36]	; 0x24
 240:	cmp	r0, #0
 244:	beq	24c <coda_mem_done+0x12c>
 248:	bl	0 <coda_mem_type_delete>
 24c:	bl	0 <__aeabi_read_tp>
 250:	add	r0, r0, r4
 254:	str	r5, [r0, #36]	; 0x24
 258:	ldr	r0, [r0, #40]	; 0x28
 25c:	cmp	r0, #0
 260:	beq	268 <coda_mem_done+0x148>
 264:	bl	0 <coda_mem_type_delete>
 268:	bl	0 <__aeabi_read_tp>
 26c:	add	r1, r0, r4
 270:	ldr	r4, [pc, #336]	; 3c8 <coda_mem_done+0x2a8>
 274:	mov	r5, #0
 278:	str	r5, [r1, #40]	; 0x28
 27c:	ldr	r0, [r0, r4]
 280:	cmp	r0, #0
 284:	beq	28c <coda_mem_done+0x16c>
 288:	bl	0 <coda_mem_type_delete>
 28c:	bl	0 <__aeabi_read_tp>
 290:	str	r5, [r0, r4]!
 294:	ldr	r0, [r0, #4]
 298:	cmp	r0, #0
 29c:	beq	2a4 <coda_mem_done+0x184>
 2a0:	bl	0 <coda_mem_type_delete>
 2a4:	bl	0 <__aeabi_read_tp>
 2a8:	add	r0, r0, r4
 2ac:	mov	r5, #0
 2b0:	str	r5, [r0, #4]
 2b4:	ldr	r0, [r0, #8]
 2b8:	cmp	r0, #0
 2bc:	beq	2c4 <coda_mem_done+0x1a4>
 2c0:	bl	0 <coda_mem_type_delete>
 2c4:	bl	0 <__aeabi_read_tp>
 2c8:	add	r0, r0, r4
 2cc:	str	r5, [r0, #8]
 2d0:	ldr	r0, [r0, #12]
 2d4:	cmp	r0, #0
 2d8:	beq	2e0 <coda_mem_done+0x1c0>
 2dc:	bl	0 <coda_mem_type_delete>
 2e0:	bl	0 <__aeabi_read_tp>
 2e4:	add	r0, r0, r4
 2e8:	mov	r5, #0
 2ec:	str	r5, [r0, #12]
 2f0:	ldr	r0, [r0, #16]
 2f4:	cmp	r0, #0
 2f8:	beq	300 <coda_mem_done+0x1e0>
 2fc:	bl	0 <coda_mem_type_delete>
 300:	bl	0 <__aeabi_read_tp>
 304:	add	r0, r0, r4
 308:	str	r5, [r0, #16]
 30c:	ldr	r0, [r0, #20]
 310:	cmp	r0, #0
 314:	beq	31c <coda_mem_done+0x1fc>
 318:	bl	0 <coda_mem_type_delete>
 31c:	bl	0 <__aeabi_read_tp>
 320:	add	r0, r0, r4
 324:	mov	r5, #0
 328:	str	r5, [r0, #20]
 32c:	ldr	r0, [r0, #24]
 330:	cmp	r0, #0
 334:	beq	33c <coda_mem_done+0x21c>
 338:	bl	0 <coda_mem_type_delete>
 33c:	bl	0 <__aeabi_read_tp>
 340:	add	r0, r0, r4
 344:	str	r5, [r0, #24]
 348:	ldr	r0, [r0, #28]
 34c:	cmp	r0, #0
 350:	beq	358 <coda_mem_done+0x238>
 354:	bl	0 <coda_mem_type_delete>
 358:	bl	0 <__aeabi_read_tp>
 35c:	add	r0, r0, r4
 360:	mov	r5, #0
 364:	str	r5, [r0, #28]
 368:	ldr	r0, [r0, #32]
 36c:	cmp	r0, #0
 370:	beq	378 <coda_mem_done+0x258>
 374:	bl	0 <coda_mem_type_delete>
 378:	bl	0 <__aeabi_read_tp>
 37c:	add	r0, r0, r4
 380:	str	r5, [r0, #32]
 384:	ldr	r0, [r0, #36]	; 0x24
 388:	cmp	r0, #0
 38c:	beq	394 <coda_mem_done+0x274>
 390:	bl	0 <coda_mem_type_delete>
 394:	bl	0 <__aeabi_read_tp>
 398:	add	r0, r0, r4
 39c:	mov	r5, #0
 3a0:	str	r5, [r0, #36]	; 0x24
 3a4:	ldr	r0, [r0, #40]	; 0x28
 3a8:	cmp	r0, #0
 3ac:	beq	3b4 <coda_mem_done+0x294>
 3b0:	bl	0 <coda_mem_type_delete>
 3b4:	bl	0 <__aeabi_read_tp>
 3b8:	add	r0, r0, r4
 3bc:	str	r5, [r0, #40]	; 0x28
 3c0:	pop	{r4, r5, fp, pc}
	...
