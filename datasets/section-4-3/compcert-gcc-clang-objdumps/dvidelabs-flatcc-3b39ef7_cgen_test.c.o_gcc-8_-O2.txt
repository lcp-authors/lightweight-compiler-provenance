
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/CMakeFiles/cgen_test.dir/cgen_test.c.o:     file format elf32-littlearm


Disassembly of section .text.startup:

00000000 <main>:
   0:	strd	r4, [sp, #-20]!	; 0xffffffec
   4:	movw	r2, #3735	; 0xe97
   8:	movw	r1, #0
   c:	movt	r1, #0
  10:	strd	r6, [sp, #8]
  14:	mov	r4, #1
  18:	str	lr, [sp, #16]
  1c:	sub	sp, sp, #3952	; 0xf70
  20:	sub	sp, sp, #12
  24:	add	r0, sp, #224	; 0xe0
  28:	bl	0 <memcpy>
  2c:	mov	r0, sp
  30:	bl	0 <flatcc_init_options>
  34:	mov	r3, #0
  38:	mov	r0, sp
  3c:	str	r4, [sp, #108]	; 0x6c
  40:	mov	r2, r3
  44:	movw	r1, #0
  48:	movt	r1, #0
  4c:	str	r4, [sp, #144]	; 0x90
  50:	str	r4, [sp, #148]	; 0x94
  54:	str	r4, [sp, #152]	; 0x98
  58:	str	r4, [sp, #156]	; 0x9c
  5c:	bl	0 <flatcc_create_context>
  60:	subs	r6, r0, #0
  64:	beq	144 <main+0x144>
  68:	movw	r2, #3735	; 0xe97
  6c:	add	r1, sp, #224	; 0xe0
  70:	bl	0 <flatcc_parse_buffer>
  74:	subs	r7, r0, #0
  78:	bne	120 <main+0x120>
  7c:	movw	r5, #0
  80:	movt	r5, #0
  84:	mov	r2, #17
  88:	mov	r1, r4
  8c:	ldr	r3, [r5]
  90:	movw	r0, #0
  94:	movt	r0, #0
  98:	bl	0 <fwrite>
  9c:	mov	r2, #31
  a0:	mov	r1, r4
  a4:	ldr	r3, [r5]
  a8:	movw	r0, #0
  ac:	movt	r0, #0
  b0:	bl	0 <fwrite>
  b4:	mov	r0, r6
  b8:	bl	0 <flatcc_generate_files>
  bc:	cmp	r0, #0
  c0:	bne	104 <main+0x104>
  c4:	movw	r3, #0
  c8:	movt	r3, #0
  cc:	movw	r1, #0
  d0:	movt	r1, #0
  d4:	ldr	r0, [r3]
  d8:	add	r2, sp, #224	; 0xe0
  dc:	bl	0 <fprintf>
  e0:	mov	r0, r6
  e4:	bl	0 <flatcc_destroy_context>
  e8:	mov	r0, r7
  ec:	add	sp, sp, #3952	; 0xf70
  f0:	add	sp, sp, #12
  f4:	ldrd	r4, [sp]
  f8:	ldrd	r6, [sp, #8]
  fc:	add	sp, sp, #16
 100:	pop	{pc}		; (ldr pc, [sp], #4)
 104:	mov	r1, r4
 108:	movw	r0, #0
 10c:	movt	r0, #0
 110:	mov	r2, #32
 114:	ldr	r3, [r5]
 118:	bl	0 <fwrite>
 11c:	b	e0 <main+0xe0>
 120:	movw	r3, #0
 124:	movt	r3, #0
 128:	mov	r1, r4
 12c:	movw	r0, #0
 130:	movt	r0, #0
 134:	mov	r2, #20
 138:	ldr	r3, [r3]
 13c:	bl	0 <fwrite>
 140:	b	e0 <main+0xe0>
 144:	movw	r3, #0
 148:	movt	r3, #0
 14c:	mov	r1, r4
 150:	movw	r0, #0
 154:	movt	r0, #0
 158:	mov	r2, #41	; 0x29
 15c:	ldr	r3, [r3]
 160:	mvn	r7, #0
 164:	bl	0 <fwrite>
 168:	b	e8 <main+0xe8>
