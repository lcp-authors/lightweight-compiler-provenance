
../compcert-repos/prog2/CMakeFiles/5.1.dir/Aula05_Filas_e_Pilhas/1/teste_armazem.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #184	; 0xb8
   c:	movw	r0, #0
  10:	str	r0, [fp, #-4]
  14:	movw	r0, #4
  18:	movw	r1, #3
  1c:	bl	0 <armazem_novo>
  20:	str	r0, [fp, #-68]	; 0xffffffbc
  24:	movw	r0, #0
  28:	movt	r0, #0
  2c:	bl	0 <printf>
  30:	vldr	s0, [pc, #952]	; 3f0 <main+0x3f0>
  34:	movw	r1, #0
  38:	movt	r1, #0
  3c:	str	r0, [fp, #-72]	; 0xffffffb8
  40:	mov	r0, r1
  44:	bl	0 <contentor_novo>
  48:	vldr	s0, [pc, #932]	; 3f4 <main+0x3f4>
  4c:	str	r0, [fp, #-12]
  50:	movw	r0, #0
  54:	movt	r0, #0
  58:	bl	0 <contentor_novo>
  5c:	vldr	s0, [pc, #916]	; 3f8 <main+0x3f8>
  60:	str	r0, [fp, #-16]
  64:	movw	r0, #0
  68:	movt	r0, #0
  6c:	bl	0 <contentor_novo>
  70:	vldr	s0, [pc, #900]	; 3fc <main+0x3fc>
  74:	str	r0, [fp, #-20]	; 0xffffffec
  78:	movw	r0, #0
  7c:	movt	r0, #0
  80:	bl	0 <contentor_novo>
  84:	vldr	s0, [pc, #884]	; 400 <main+0x400>
  88:	str	r0, [fp, #-24]	; 0xffffffe8
  8c:	movw	r0, #0
  90:	movt	r0, #0
  94:	bl	0 <contentor_novo>
  98:	vldr	s0, [pc, #868]	; 404 <main+0x404>
  9c:	str	r0, [fp, #-28]	; 0xffffffe4
  a0:	movw	r0, #0
  a4:	movt	r0, #0
  a8:	bl	0 <contentor_novo>
  ac:	vldr	s0, [pc, #1004]	; 4a0 <main+0x4a0>
  b0:	str	r0, [fp, #-32]	; 0xffffffe0
  b4:	movw	r0, #0
  b8:	movt	r0, #0
  bc:	bl	0 <contentor_novo>
  c0:	vldr	s0, [pc, #988]	; 4a4 <main+0x4a4>
  c4:	str	r0, [fp, #-36]	; 0xffffffdc
  c8:	movw	r0, #0
  cc:	movt	r0, #0
  d0:	bl	0 <contentor_novo>
  d4:	vldr	s0, [pc, #804]	; 400 <main+0x400>
  d8:	str	r0, [fp, #-40]	; 0xffffffd8
  dc:	movw	r0, #0
  e0:	movt	r0, #0
  e4:	bl	0 <contentor_novo>
  e8:	vldr	s0, [pc, #952]	; 4a8 <main+0x4a8>
  ec:	str	r0, [fp, #-44]	; 0xffffffd4
  f0:	movw	r0, #0
  f4:	movt	r0, #0
  f8:	bl	0 <contentor_novo>
  fc:	vldr	s0, [pc, #936]	; 4ac <main+0x4ac>
 100:	str	r0, [fp, #-48]	; 0xffffffd0
 104:	movw	r0, #0
 108:	movt	r0, #0
 10c:	bl	0 <contentor_novo>
 110:	vldr	s0, [pc, #920]	; 4b0 <main+0x4b0>
 114:	str	r0, [fp, #-52]	; 0xffffffcc
 118:	movw	r0, #0
 11c:	movt	r0, #0
 120:	bl	0 <contentor_novo>
 124:	vldr	s0, [pc, #904]	; 4b4 <main+0x4b4>
 128:	str	r0, [fp, #-56]	; 0xffffffc8
 12c:	movw	r0, #0
 130:	movt	r0, #0
 134:	bl	0 <contentor_novo>
 138:	str	r0, [fp, #-60]	; 0xffffffc4
 13c:	movw	r0, #0
 140:	movt	r0, #0
 144:	bl	0 <printf>
 148:	ldr	r1, [fp, #-68]	; 0xffffffbc
 14c:	str	r0, [fp, #-76]	; 0xffffffb4
 150:	mov	r0, r1
 154:	bl	58c <imprimeArmazem>
 158:	movw	r0, #0
 15c:	movt	r0, #0
 160:	bl	0 <printf>
 164:	ldr	r1, [fp, #-68]	; 0xffffffbc
 168:	ldr	lr, [fp, #-12]
 16c:	str	r0, [fp, #-80]	; 0xffffffb0
 170:	mov	r0, r1
 174:	mov	r1, lr
 178:	bl	0 <armazenar_contentor>
 17c:	cmp	r0, #0
 180:	beq	19c <main+0x19c>
 184:	ldr	r0, [fp, #-12]
 188:	ldr	r1, [r0]
 18c:	movw	r0, #0
 190:	movt	r0, #0
 194:	bl	0 <printf>
 198:	str	r0, [fp, #-84]	; 0xffffffac
 19c:	ldr	r0, [fp, #-68]	; 0xffffffbc
 1a0:	ldr	r1, [fp, #-16]
 1a4:	bl	0 <armazenar_contentor>
 1a8:	cmp	r0, #0
 1ac:	beq	1c8 <main+0x1c8>
 1b0:	ldr	r0, [fp, #-16]
 1b4:	ldr	r1, [r0]
 1b8:	movw	r0, #0
 1bc:	movt	r0, #0
 1c0:	bl	0 <printf>
 1c4:	str	r0, [fp, #-88]	; 0xffffffa8
 1c8:	ldr	r0, [fp, #-68]	; 0xffffffbc
 1cc:	ldr	r1, [fp, #-20]	; 0xffffffec
 1d0:	bl	0 <armazenar_contentor>
 1d4:	cmp	r0, #0
 1d8:	beq	1f4 <main+0x1f4>
 1dc:	ldr	r0, [fp, #-20]	; 0xffffffec
 1e0:	ldr	r1, [r0]
 1e4:	movw	r0, #0
 1e8:	movt	r0, #0
 1ec:	bl	0 <printf>
 1f0:	str	r0, [sp, #92]	; 0x5c
 1f4:	ldr	r0, [fp, #-68]	; 0xffffffbc
 1f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
 1fc:	bl	0 <armazenar_contentor>
 200:	cmp	r0, #0
 204:	beq	220 <main+0x220>
 208:	ldr	r0, [fp, #-24]	; 0xffffffe8
 20c:	ldr	r1, [r0]
 210:	movw	r0, #0
 214:	movt	r0, #0
 218:	bl	0 <printf>
 21c:	str	r0, [sp, #88]	; 0x58
 220:	movw	r0, #0
 224:	movt	r0, #0
 228:	bl	0 <printf>
 22c:	ldr	lr, [fp, #-68]	; 0xffffffbc
 230:	str	r0, [sp, #84]	; 0x54
 234:	mov	r0, lr
 238:	bl	58c <imprimeArmazem>
 23c:	movw	r0, #0
 240:	movt	r0, #0
 244:	bl	0 <printf>
 248:	ldr	lr, [fp, #-68]	; 0xffffffbc
 24c:	ldr	r1, [fp, #-28]	; 0xffffffe4
 250:	str	r0, [sp, #80]	; 0x50
 254:	mov	r0, lr
 258:	bl	0 <armazenar_contentor>
 25c:	cmp	r0, #0
 260:	beq	27c <main+0x27c>
 264:	ldr	r0, [fp, #-28]	; 0xffffffe4
 268:	ldr	r1, [r0]
 26c:	movw	r0, #0
 270:	movt	r0, #0
 274:	bl	0 <printf>
 278:	str	r0, [sp, #76]	; 0x4c
 27c:	ldr	r0, [fp, #-68]	; 0xffffffbc
 280:	ldr	r1, [fp, #-32]	; 0xffffffe0
 284:	bl	0 <armazenar_contentor>
 288:	cmp	r0, #0
 28c:	beq	2a8 <main+0x2a8>
 290:	ldr	r0, [fp, #-32]	; 0xffffffe0
 294:	ldr	r1, [r0]
 298:	movw	r0, #0
 29c:	movt	r0, #0
 2a0:	bl	0 <printf>
 2a4:	str	r0, [sp, #72]	; 0x48
 2a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
 2ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
 2b0:	bl	0 <armazenar_contentor>
 2b4:	cmp	r0, #0
 2b8:	beq	2d4 <main+0x2d4>
 2bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
 2c0:	ldr	r1, [r0]
 2c4:	movw	r0, #0
 2c8:	movt	r0, #0
 2cc:	bl	0 <printf>
 2d0:	str	r0, [sp, #68]	; 0x44
 2d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
 2d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
 2dc:	bl	0 <armazenar_contentor>
 2e0:	cmp	r0, #0
 2e4:	beq	300 <main+0x300>
 2e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
 2ec:	ldr	r1, [r0]
 2f0:	movw	r0, #0
 2f4:	movt	r0, #0
 2f8:	bl	0 <printf>
 2fc:	str	r0, [sp, #64]	; 0x40
 300:	ldr	r0, [fp, #-68]	; 0xffffffbc
 304:	ldr	r1, [fp, #-44]	; 0xffffffd4
 308:	bl	0 <armazenar_contentor>
 30c:	cmp	r0, #0
 310:	beq	32c <main+0x32c>
 314:	ldr	r0, [fp, #-44]	; 0xffffffd4
 318:	ldr	r1, [r0]
 31c:	movw	r0, #0
 320:	movt	r0, #0
 324:	bl	0 <printf>
 328:	str	r0, [sp, #60]	; 0x3c
 32c:	ldr	r0, [fp, #-68]	; 0xffffffbc
 330:	ldr	r1, [fp, #-48]	; 0xffffffd0
 334:	bl	0 <armazenar_contentor>
 338:	cmp	r0, #0
 33c:	beq	358 <main+0x358>
 340:	ldr	r0, [fp, #-48]	; 0xffffffd0
 344:	ldr	r1, [r0]
 348:	movw	r0, #0
 34c:	movt	r0, #0
 350:	bl	0 <printf>
 354:	str	r0, [sp, #56]	; 0x38
 358:	ldr	r0, [fp, #-68]	; 0xffffffbc
 35c:	ldr	r1, [fp, #-52]	; 0xffffffcc
 360:	bl	0 <armazenar_contentor>
 364:	cmp	r0, #0
 368:	beq	384 <main+0x384>
 36c:	ldr	r0, [fp, #-52]	; 0xffffffcc
 370:	ldr	r1, [r0]
 374:	movw	r0, #0
 378:	movt	r0, #0
 37c:	bl	0 <printf>
 380:	str	r0, [sp, #52]	; 0x34
 384:	ldr	r0, [fp, #-68]	; 0xffffffbc
 388:	ldr	r1, [fp, #-56]	; 0xffffffc8
 38c:	bl	0 <armazenar_contentor>
 390:	cmp	r0, #0
 394:	beq	3b0 <main+0x3b0>
 398:	ldr	r0, [fp, #-56]	; 0xffffffc8
 39c:	ldr	r1, [r0]
 3a0:	movw	r0, #0
 3a4:	movt	r0, #0
 3a8:	bl	0 <printf>
 3ac:	str	r0, [sp, #48]	; 0x30
 3b0:	movw	r0, #0
 3b4:	movt	r0, #0
 3b8:	bl	0 <printf>
 3bc:	ldr	lr, [fp, #-68]	; 0xffffffbc
 3c0:	str	r0, [sp, #44]	; 0x2c
 3c4:	mov	r0, lr
 3c8:	bl	58c <imprimeArmazem>
 3cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
 3d0:	bl	0 <armazem_cheio>
 3d4:	cmp	r0, #0
 3d8:	beq	408 <main+0x408>
 3dc:	movw	r0, #0
 3e0:	movt	r0, #0
 3e4:	bl	0 <printf>
 3e8:	str	r0, [sp, #40]	; 0x28
 3ec:	b	418 <main+0x418>
 3f0:	.word	0x43660000
 3f4:	.word	0x437a0000
 3f8:	.word	0x44048000
 3fc:	.word	0x44318000
 400:	.word	0x43be0000
 404:	.word	0x43c30000
 408:	movw	r0, #0
 40c:	movt	r0, #0
 410:	bl	0 <printf>
 414:	str	r0, [sp, #36]	; 0x24
 418:	ldr	r0, [fp, #-68]	; 0xffffffbc
 41c:	ldr	r1, [fp, #-60]	; 0xffffffc4
 420:	bl	0 <armazenar_contentor>
 424:	cmp	r0, #0
 428:	beq	444 <main+0x444>
 42c:	ldr	r0, [fp, #-20]	; 0xffffffec
 430:	ldr	r1, [r0]
 434:	movw	r0, #0
 438:	movt	r0, #0
 43c:	bl	0 <printf>
 440:	str	r0, [sp, #32]
 444:	movw	r0, #0
 448:	movt	r0, #0
 44c:	bl	0 <printf>
 450:	movw	lr, #0
 454:	str	lr, [fp, #-8]
 458:	str	r0, [sp, #28]
 45c:	ldr	r0, [fp, #-8]
 460:	cmp	r0, #8
 464:	bge	4b8 <main+0x4b8>
 468:	ldr	r0, [fp, #-68]	; 0xffffffbc
 46c:	bl	0 <expedir_contentor>
 470:	str	r0, [fp, #-64]	; 0xffffffc0
 474:	movw	r0, #0
 478:	movt	r0, #0
 47c:	bl	0 <printf>
 480:	ldr	lr, [fp, #-64]	; 0xffffffc0
 484:	str	r0, [sp, #24]
 488:	mov	r0, lr
 48c:	bl	0 <contentor_imprime>
 490:	ldr	r0, [fp, #-8]
 494:	add	r0, r0, #1
 498:	str	r0, [fp, #-8]
 49c:	b	45c <main+0x45c>
 4a0:	.word	0x42c80000
 4a4:	.word	0x42a00000
 4a8:	.word	0x43160000
 4ac:	.word	0x43870000
 4b0:	.word	0x43d70000
 4b4:	.word	0x43480000
 4b8:	movw	r0, #0
 4bc:	movt	r0, #0
 4c0:	bl	0 <printf>
 4c4:	ldr	lr, [fp, #-68]	; 0xffffffbc
 4c8:	str	r0, [sp, #20]
 4cc:	mov	r0, lr
 4d0:	bl	58c <imprimeArmazem>
 4d4:	movw	r0, #0
 4d8:	movt	r0, #0
 4dc:	bl	0 <printf>
 4e0:	movw	lr, #0
 4e4:	str	lr, [fp, #-8]
 4e8:	str	r0, [sp, #16]
 4ec:	ldr	r0, [fp, #-8]
 4f0:	cmp	r0, #4
 4f4:	bge	530 <main+0x530>
 4f8:	ldr	r0, [fp, #-68]	; 0xffffffbc
 4fc:	bl	0 <expedir_contentor>
 500:	str	r0, [fp, #-64]	; 0xffffffc0
 504:	movw	r0, #0
 508:	movt	r0, #0
 50c:	bl	0 <printf>
 510:	ldr	lr, [fp, #-64]	; 0xffffffc0
 514:	str	r0, [sp, #12]
 518:	mov	r0, lr
 51c:	bl	0 <contentor_imprime>
 520:	ldr	r0, [fp, #-8]
 524:	add	r0, r0, #1
 528:	str	r0, [fp, #-8]
 52c:	b	4ec <main+0x4ec>
 530:	movw	r0, #0
 534:	movt	r0, #0
 538:	bl	0 <printf>
 53c:	ldr	lr, [fp, #-68]	; 0xffffffbc
 540:	str	r0, [sp, #8]
 544:	mov	r0, lr
 548:	bl	58c <imprimeArmazem>
 54c:	ldr	r0, [fp, #-68]	; 0xffffffbc
 550:	bl	0 <armazem_vazio>
 554:	cmp	r0, #0
 558:	beq	570 <main+0x570>
 55c:	movw	r0, #0
 560:	movt	r0, #0
 564:	bl	0 <printf>
 568:	str	r0, [sp, #4]
 56c:	b	580 <main+0x580>
 570:	movw	r0, #0
 574:	movt	r0, #0
 578:	bl	0 <printf>
 57c:	str	r0, [sp]
 580:	movw	r0, #0
 584:	mov	sp, fp
 588:	pop	{fp, pc}

0000058c <imprimeArmazem>:
 58c:	push	{fp, lr}
 590:	mov	fp, sp
 594:	sub	sp, sp, #64	; 0x40
 598:	str	r0, [fp, #-4]
 59c:	movw	r0, #0
 5a0:	str	r0, [fp, #-20]	; 0xffffffec
 5a4:	ldr	r1, [fp, #-4]
 5a8:	cmp	r1, r0
 5ac:	beq	77c <imprimeArmazem+0x1f0>
 5b0:	ldr	r0, [fp, #-4]
 5b4:	ldr	r0, [r0, #8]
 5b8:	movw	r1, #0
 5bc:	cmp	r0, r1
 5c0:	beq	77c <imprimeArmazem+0x1f0>
 5c4:	ldr	r0, [fp, #-4]
 5c8:	ldr	r0, [r0, #8]
 5cc:	ldr	r0, [r0, #4]
 5d0:	movw	r1, #4
 5d4:	bl	0 <calloc>
 5d8:	str	r0, [fp, #-24]	; 0xffffffe8
 5dc:	ldr	r0, [fp, #-4]
 5e0:	ldr	r0, [r0, #8]
 5e4:	ldr	r0, [r0, #4]
 5e8:	str	r0, [fp, #-16]
 5ec:	ldr	r0, [fp, #-4]
 5f0:	ldr	r0, [r0, #8]
 5f4:	ldr	r0, [r0]
 5f8:	str	r0, [fp, #-28]	; 0xffffffe4
 5fc:	movw	r0, #0
 600:	str	r0, [fp, #-8]
 604:	ldr	r0, [fp, #-28]	; 0xffffffe4
 608:	movw	r1, #0
 60c:	cmp	r0, r1
 610:	beq	64c <imprimeArmazem+0xc0>
 614:	ldr	r0, [fp, #-28]	; 0xffffffe4
 618:	ldr	r0, [r0]
 61c:	ldr	r0, [r0, #4]
 620:	ldr	r1, [fp, #-24]	; 0xffffffe8
 624:	ldr	r2, [fp, #-8]
 628:	add	r1, r1, r2, lsl #2
 62c:	str	r0, [r1]
 630:	ldr	r0, [fp, #-28]	; 0xffffffe4
 634:	ldr	r0, [r0, #4]
 638:	str	r0, [fp, #-28]	; 0xffffffe4
 63c:	ldr	r0, [fp, #-8]
 640:	add	r0, r0, #1
 644:	str	r0, [fp, #-8]
 648:	b	604 <imprimeArmazem+0x78>
 64c:	movw	r0, #0
 650:	movt	r0, #0
 654:	bl	0 <printf>
 658:	ldr	lr, [fp, #-4]
 65c:	ldr	lr, [lr, #4]
 660:	str	lr, [fp, #-12]
 664:	str	r0, [sp, #32]
 668:	ldr	r0, [fp, #-12]
 66c:	cmp	r0, #0
 670:	ble	714 <imprimeArmazem+0x188>
 674:	movw	r0, #0
 678:	movt	r0, #0
 67c:	bl	0 <printf>
 680:	movw	lr, #0
 684:	str	lr, [fp, #-8]
 688:	str	r0, [sp, #28]
 68c:	ldr	r0, [fp, #-8]
 690:	ldr	r1, [fp, #-16]
 694:	cmp	r0, r1
 698:	bge	6f0 <imprimeArmazem+0x164>
 69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 6a0:	ldr	r1, [fp, #-8]
 6a4:	add	r0, r0, r1, lsl #2
 6a8:	ldr	r0, [r0]
 6ac:	ldr	r1, [fp, #-12]
 6b0:	cmp	r0, r1
 6b4:	blt	6cc <imprimeArmazem+0x140>
 6b8:	movw	r0, #0
 6bc:	movt	r0, #0
 6c0:	bl	0 <printf>
 6c4:	str	r0, [sp, #24]
 6c8:	b	6dc <imprimeArmazem+0x150>
 6cc:	movw	r0, #0
 6d0:	movt	r0, #0
 6d4:	bl	0 <printf>
 6d8:	str	r0, [sp, #20]
 6dc:	b	6e0 <imprimeArmazem+0x154>
 6e0:	ldr	r0, [fp, #-8]
 6e4:	add	r0, r0, #1
 6e8:	str	r0, [fp, #-8]
 6ec:	b	68c <imprimeArmazem+0x100>
 6f0:	movw	r0, #0
 6f4:	movt	r0, #0
 6f8:	bl	0 <printf>
 6fc:	str	r0, [sp, #16]
 700:	ldr	r0, [fp, #-12]
 704:	mvn	r1, #0
 708:	add	r0, r0, r1
 70c:	str	r0, [fp, #-12]
 710:	b	668 <imprimeArmazem+0xdc>
 714:	movw	r0, #0
 718:	movt	r0, #0
 71c:	bl	0 <printf>
 720:	movw	lr, #0
 724:	str	lr, [fp, #-8]
 728:	str	r0, [sp, #12]
 72c:	ldr	r0, [fp, #-8]
 730:	ldr	r1, [fp, #-4]
 734:	ldr	r1, [r1]
 738:	cmp	r0, r1
 73c:	bge	760 <imprimeArmazem+0x1d4>
 740:	movw	r0, #0
 744:	movt	r0, #0
 748:	bl	0 <printf>
 74c:	str	r0, [sp, #8]
 750:	ldr	r0, [fp, #-8]
 754:	add	r0, r0, #1
 758:	str	r0, [fp, #-8]
 75c:	b	72c <imprimeArmazem+0x1a0>
 760:	movw	r0, #0
 764:	movt	r0, #0
 768:	bl	0 <printf>
 76c:	ldr	lr, [fp, #-24]	; 0xffffffe8
 770:	str	r0, [sp, #4]
 774:	mov	r0, lr
 778:	bl	0 <free>
 77c:	mov	sp, fp
 780:	pop	{fp, pc}
