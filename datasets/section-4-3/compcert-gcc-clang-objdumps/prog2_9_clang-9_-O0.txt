
../compcert-repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

00010ab4 <.init>:
   10ab4:	push	{r3, lr}
   10ab8:	bl	10bd0 <_start@@Base+0x3c>
   10abc:	pop	{r3, pc}

Disassembly of section .plt:

00010ac0 <calloc@plt-0x14>:
   10ac0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ac4:	ldr	lr, [pc, #4]	; 10ad0 <calloc@plt-0x4>
   10ac8:	add	lr, pc, lr
   10acc:	ldr	pc, [lr, #8]!
   10ad0:	andeq	r2, r1, r0, lsr r5

00010ad4 <calloc@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #73728	; 0x12000
   10adc:	ldr	pc, [ip, #1328]!	; 0x530

00010ae0 <strcmp@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #73728	; 0x12000
   10ae8:	ldr	pc, [ip, #1320]!	; 0x528

00010aec <printf@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #73728	; 0x12000
   10af4:	ldr	pc, [ip, #1312]!	; 0x520

00010af8 <__isoc99_fscanf@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #73728	; 0x12000
   10b00:	ldr	pc, [ip, #1304]!	; 0x518

00010b04 <fopen@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #73728	; 0x12000
   10b0c:	ldr	pc, [ip, #1296]!	; 0x510

00010b10 <fflush@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #73728	; 0x12000
   10b18:	ldr	pc, [ip, #1288]!	; 0x508

00010b1c <free@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #73728	; 0x12000
   10b24:	ldr	pc, [ip, #1280]!	; 0x500

00010b28 <fgets@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #73728	; 0x12000
   10b30:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b34 <strdup@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #73728	; 0x12000
   10b3c:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b40 <malloc@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #73728	; 0x12000
   10b48:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b4c <__libc_start_main@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #73728	; 0x12000
   10b54:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b58 <__gmon_start__@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #73728	; 0x12000
   10b60:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b64 <feof@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #73728	; 0x12000
   10b6c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b70 <strlen@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #73728	; 0x12000
   10b78:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b7c <fclose@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #73728	; 0x12000
   10b84:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b88 <abort@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #73728	; 0x12000
   10b90:	ldr	pc, [ip, #1208]!	; 0x4b8

Disassembly of section .text:

00010b94 <_start@@Base>:
   10b94:	mov	fp, #0
   10b98:	mov	lr, #0
   10b9c:	pop	{r1}		; (ldr r1, [sp], #4)
   10ba0:	mov	r2, sp
   10ba4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ba8:	push	{r0}		; (str r0, [sp, #-4]!)
   10bac:	ldr	ip, [pc, #16]	; 10bc4 <_start@@Base+0x30>
   10bb0:	push	{ip}		; (str ip, [sp, #-4]!)
   10bb4:	ldr	r0, [pc, #12]	; 10bc8 <_start@@Base+0x34>
   10bb8:	ldr	r3, [pc, #12]	; 10bcc <_start@@Base+0x38>
   10bbc:	bl	10b4c <__libc_start_main@plt>
   10bc0:	bl	10b88 <abort@plt>
   10bc4:			; <UNDEFINED> instruction: 0x00011bb8
   10bc8:	andeq	r1, r1, r0, asr #3
   10bcc:	andeq	r1, r1, r8, asr fp
   10bd0:	ldr	r3, [pc, #20]	; 10bec <_start@@Base+0x58>
   10bd4:	ldr	r2, [pc, #20]	; 10bf0 <_start@@Base+0x5c>
   10bd8:	add	r3, pc, r3
   10bdc:	ldr	r2, [r3, r2]
   10be0:	cmp	r2, #0
   10be4:	bxeq	lr
   10be8:	b	10b58 <__gmon_start__@plt>
   10bec:	andeq	r2, r1, r0, lsr #8
   10bf0:	andeq	r0, r0, ip, asr #32
   10bf4:	ldr	r0, [pc, #24]	; 10c14 <_start@@Base+0x80>
   10bf8:	ldr	r3, [pc, #24]	; 10c18 <_start@@Base+0x84>
   10bfc:	cmp	r3, r0
   10c00:	bxeq	lr
   10c04:	ldr	r3, [pc, #16]	; 10c1c <_start@@Base+0x88>
   10c08:	cmp	r3, #0
   10c0c:	bxeq	lr
   10c10:	bx	r3
   10c14:	andeq	r3, r2, r8, asr r0
   10c18:	andeq	r3, r2, r8, asr r0
   10c1c:	andeq	r0, r0, r0
   10c20:	ldr	r0, [pc, #36]	; 10c4c <_start@@Base+0xb8>
   10c24:	ldr	r1, [pc, #36]	; 10c50 <_start@@Base+0xbc>
   10c28:	sub	r1, r1, r0
   10c2c:	asr	r1, r1, #2
   10c30:	add	r1, r1, r1, lsr #31
   10c34:	asrs	r1, r1, #1
   10c38:	bxeq	lr
   10c3c:	ldr	r3, [pc, #16]	; 10c54 <_start@@Base+0xc0>
   10c40:	cmp	r3, #0
   10c44:	bxeq	lr
   10c48:	bx	r3
   10c4c:	andeq	r3, r2, r8, asr r0
   10c50:	andeq	r3, r2, r8, asr r0
   10c54:	andeq	r0, r0, r0
   10c58:	push	{r4, lr}
   10c5c:	ldr	r4, [pc, #24]	; 10c7c <_start@@Base+0xe8>
   10c60:	ldrb	r3, [r4]
   10c64:	cmp	r3, #0
   10c68:	popne	{r4, pc}
   10c6c:	bl	10bf4 <_start@@Base+0x60>
   10c70:	mov	r3, #1
   10c74:	strb	r3, [r4]
   10c78:	pop	{r4, pc}
   10c7c:	andeq	r3, r2, ip, asr r0
   10c80:	b	10c20 <_start@@Base+0x8c>

00010c84 <fp_insere@@Base>:
   10c84:	push	{fp, lr}
   10c88:	mov	fp, sp
   10c8c:	sub	sp, sp, #32
   10c90:	str	r0, [fp, #-8]
   10c94:	str	r1, [fp, #-12]
   10c98:	str	r2, [sp, #16]
   10c9c:	ldr	r0, [fp, #-8]
   10ca0:	movw	r1, #0
   10ca4:	cmp	r0, r1
   10ca8:	bne	10cb8 <fp_insere@@Base+0x34>
   10cac:	mvn	r0, #0
   10cb0:	str	r0, [fp, #-4]
   10cb4:	b	10dc0 <fp_insere@@Base+0x13c>
   10cb8:	ldr	r0, [fp, #-8]
   10cbc:	ldr	r0, [r0]
   10cc0:	ldr	r1, [fp, #-8]
   10cc4:	ldr	r1, [r1, #4]
   10cc8:	cmp	r0, r1
   10ccc:	bne	10cdc <fp_insere@@Base+0x58>
   10cd0:	movw	r0, #0
   10cd4:	str	r0, [fp, #-4]
   10cd8:	b	10dc0 <fp_insere@@Base+0x13c>
   10cdc:	ldr	r0, [sp, #16]
   10ce0:	ldr	r1, [fp, #-12]
   10ce4:	bl	1180c <elemento_cria@@Base>
   10ce8:	str	r0, [sp, #12]
   10cec:	movw	r0, #0
   10cf0:	str	r0, [sp, #8]
   10cf4:	ldr	r0, [sp, #8]
   10cf8:	ldr	r1, [fp, #-8]
   10cfc:	ldr	r1, [r1]
   10d00:	cmp	r0, r1
   10d04:	bge	10d44 <fp_insere@@Base+0xc0>
   10d08:	ldr	r0, [fp, #-8]
   10d0c:	ldr	r0, [r0, #8]
   10d10:	ldr	r1, [sp, #8]
   10d14:	add	r0, r0, r1, lsl #2
   10d18:	ldr	r0, [r0]
   10d1c:	ldr	r1, [sp, #12]
   10d20:	bl	11878 <maior_que@@Base>
   10d24:	cmp	r0, #0
   10d28:	bne	10d30 <fp_insere@@Base+0xac>
   10d2c:	b	10d44 <fp_insere@@Base+0xc0>
   10d30:	b	10d34 <fp_insere@@Base+0xb0>
   10d34:	ldr	r0, [sp, #8]
   10d38:	add	r0, r0, #1
   10d3c:	str	r0, [sp, #8]
   10d40:	b	10cf4 <fp_insere@@Base+0x70>
   10d44:	ldr	r0, [fp, #-8]
   10d48:	ldr	r0, [r0]
   10d4c:	str	r0, [sp, #4]
   10d50:	ldr	r0, [sp, #4]
   10d54:	ldr	r1, [sp, #8]
   10d58:	cmp	r0, r1
   10d5c:	blt	10d90 <fp_insere@@Base+0x10c>
   10d60:	ldr	r0, [fp, #-8]
   10d64:	ldr	r0, [r0, #8]
   10d68:	ldr	r1, [sp, #4]
   10d6c:	ldr	r2, [r0, r1, lsl #2]
   10d70:	add	r1, r1, #1
   10d74:	add	r0, r0, r1, lsl #2
   10d78:	str	r2, [r0]
   10d7c:	ldr	r0, [sp, #4]
   10d80:	mvn	r1, #0
   10d84:	add	r0, r0, r1
   10d88:	str	r0, [sp, #4]
   10d8c:	b	10d50 <fp_insere@@Base+0xcc>
   10d90:	ldr	r0, [sp, #12]
   10d94:	ldr	r1, [fp, #-8]
   10d98:	ldr	r1, [r1, #8]
   10d9c:	ldr	r2, [sp, #8]
   10da0:	add	r1, r1, r2, lsl #2
   10da4:	str	r0, [r1]
   10da8:	ldr	r0, [fp, #-8]
   10dac:	ldr	r1, [r0]
   10db0:	add	r1, r1, #1
   10db4:	str	r1, [r0]
   10db8:	movw	r0, #1
   10dbc:	str	r0, [fp, #-4]
   10dc0:	ldr	r0, [fp, #-4]
   10dc4:	mov	sp, fp
   10dc8:	pop	{fp, pc}

00010dcc <fp_remove@@Base>:
   10dcc:	sub	sp, sp, #16
   10dd0:	str	r0, [sp, #8]
   10dd4:	ldr	r0, [sp, #8]
   10dd8:	movw	r1, #0
   10ddc:	cmp	r0, r1
   10de0:	beq	10df4 <fp_remove@@Base+0x28>
   10de4:	ldr	r0, [sp, #8]
   10de8:	ldr	r0, [r0]
   10dec:	cmp	r0, #0
   10df0:	bne	10e00 <fp_remove@@Base+0x34>
   10df4:	movw	r0, #0
   10df8:	str	r0, [sp, #12]
   10dfc:	b	10e74 <fp_remove@@Base+0xa8>
   10e00:	ldr	r0, [sp, #8]
   10e04:	ldr	r0, [r0, #8]
   10e08:	ldr	r0, [r0]
   10e0c:	str	r0, [sp, #4]
   10e10:	movw	r0, #0
   10e14:	str	r0, [sp]
   10e18:	ldr	r0, [sp]
   10e1c:	ldr	r1, [sp, #8]
   10e20:	ldr	r1, [r1]
   10e24:	cmp	r0, r1
   10e28:	bge	10e54 <fp_remove@@Base+0x88>
   10e2c:	ldr	r0, [sp, #8]
   10e30:	ldr	r0, [r0, #8]
   10e34:	ldr	r1, [sp]
   10e38:	add	r0, r0, r1, lsl #2
   10e3c:	ldr	r1, [r0, #4]
   10e40:	str	r1, [r0]
   10e44:	ldr	r0, [sp]
   10e48:	add	r0, r0, #1
   10e4c:	str	r0, [sp]
   10e50:	b	10e18 <fp_remove@@Base+0x4c>
   10e54:	ldr	r0, [sp, #8]
   10e58:	ldr	r1, [r0]
   10e5c:	mvn	r2, #0
   10e60:	add	r1, r1, r2
   10e64:	str	r1, [r0]
   10e68:	ldr	r0, [sp, #4]
   10e6c:	ldr	r0, [r0, #4]
   10e70:	str	r0, [sp, #12]
   10e74:	ldr	r0, [sp, #12]
   10e78:	add	sp, sp, #16
   10e7c:	bx	lr

00010e80 <fp_carrega@@Base>:
   10e80:	push	{r4, r5, fp, lr}
   10e84:	add	fp, sp, #8
   10e88:	sub	sp, sp, #288	; 0x120
   10e8c:	str	r0, [fp, #-12]
   10e90:	str	r1, [fp, #-16]
   10e94:	ldr	r0, [fp, #-16]
   10e98:	movw	r1, #7112	; 0x1bc8
   10e9c:	movt	r1, #1
   10ea0:	bl	10b04 <fopen@plt>
   10ea4:	str	r0, [sp, #16]
   10ea8:	ldr	r0, [sp, #16]
   10eac:	movw	r1, #0
   10eb0:	cmp	r0, r1
   10eb4:	bne	10ec8 <fp_carrega@@Base+0x48>
   10eb8:	movw	r0, #7114	; 0x1bca
   10ebc:	movt	r0, #1
   10ec0:	bl	10aec <printf@plt>
   10ec4:	b	10f5c <fp_carrega@@Base+0xdc>
   10ec8:	b	10ecc <fp_carrega@@Base+0x4c>
   10ecc:	ldr	r0, [sp, #16]
   10ed0:	bl	10b64 <feof@plt>
   10ed4:	cmp	r0, #0
   10ed8:	movw	r0, #0
   10edc:	movne	r0, #1
   10ee0:	mvn	r1, #0
   10ee4:	eor	r0, r0, r1
   10ee8:	tst	r0, #1
   10eec:	beq	10f54 <fp_carrega@@Base+0xd4>
   10ef0:	ldr	r0, [sp, #16]
   10ef4:	movw	r1, #7148	; 0x1bec
   10ef8:	movt	r1, #1
   10efc:	add	r2, sp, #20
   10f00:	bl	10af8 <__isoc99_fscanf@plt>
   10f04:	add	r1, sp, #24
   10f08:	ldr	r2, [sp, #16]
   10f0c:	str	r0, [sp, #12]
   10f10:	mov	r0, r1
   10f14:	movw	r1, #256	; 0x100
   10f18:	bl	10b28 <fgets@plt>
   10f1c:	add	r1, sp, #24
   10f20:	str	r0, [sp, #8]
   10f24:	mov	r0, r1
   10f28:	str	r1, [sp, #4]
   10f2c:	bl	10b70 <strlen@plt>
   10f30:	sub	r0, r0, #1
   10f34:	ldr	r1, [sp, #4]
   10f38:	add	r0, r1, r0
   10f3c:	movw	r2, #0
   10f40:	strb	r2, [r0]
   10f44:	ldr	r0, [fp, #-12]
   10f48:	ldr	r2, [sp, #20]
   10f4c:	bl	10c84 <fp_insere@@Base>
   10f50:	b	10ecc <fp_carrega@@Base+0x4c>
   10f54:	ldr	r0, [sp, #16]
   10f58:	bl	10b7c <fclose@plt>
   10f5c:	sub	sp, fp, #8
   10f60:	pop	{r4, r5, fp, pc}

00010f64 <heap_insere@@Base>:
   10f64:	push	{fp, lr}
   10f68:	mov	fp, sp
   10f6c:	sub	sp, sp, #40	; 0x28
   10f70:	str	r0, [fp, #-8]
   10f74:	str	r1, [fp, #-12]
   10f78:	str	r2, [fp, #-16]
   10f7c:	str	r3, [sp, #20]
   10f80:	ldr	r0, [fp, #-8]
   10f84:	ldr	r0, [r0]
   10f88:	ldr	r1, [fp, #-8]
   10f8c:	ldr	r1, [r1, #4]
   10f90:	cmp	r0, r1
   10f94:	bne	10fa4 <heap_insere@@Base+0x40>
   10f98:	movw	r0, #0
   10f9c:	str	r0, [fp, #-4]
   10fa0:	b	110ac <heap_insere@@Base+0x148>
   10fa4:	ldr	r0, [sp, #20]
   10fa8:	ldr	r1, [fp, #-16]
   10fac:	bl	1180c <elemento_cria@@Base>
   10fb0:	str	r0, [sp, #8]
   10fb4:	movw	r0, #0
   10fb8:	str	r0, [sp, #16]
   10fbc:	ldr	r0, [sp, #16]
   10fc0:	ldr	r1, [fp, #-8]
   10fc4:	ldr	r1, [r1]
   10fc8:	cmp	r0, r1
   10fcc:	movw	r0, #0
   10fd0:	str	r0, [sp, #4]
   10fd4:	bge	11018 <heap_insere@@Base+0xb4>
   10fd8:	ldr	r0, [fp, #-12]
   10fdc:	ldr	r1, [fp, #-8]
   10fe0:	ldr	r1, [r1, #8]
   10fe4:	ldr	r2, [sp, #16]
   10fe8:	add	r1, r1, r2, lsl #2
   10fec:	ldr	r1, [r1]
   10ff0:	ldr	r2, [sp, #8]
   10ff4:	str	r0, [sp]
   10ff8:	mov	r0, r1
   10ffc:	mov	r1, r2
   11000:	ldr	r2, [sp]
   11004:	blx	r2
   11008:	cmp	r0, #1
   1100c:	movw	r0, #0
   11010:	movne	r0, #1
   11014:	str	r0, [sp, #4]
   11018:	ldr	r0, [sp, #4]
   1101c:	tst	r0, #1
   11020:	beq	11038 <heap_insere@@Base+0xd4>
   11024:	b	11028 <heap_insere@@Base+0xc4>
   11028:	ldr	r0, [sp, #16]
   1102c:	add	r0, r0, #1
   11030:	str	r0, [sp, #16]
   11034:	b	10fbc <heap_insere@@Base+0x58>
   11038:	ldr	r0, [sp, #16]
   1103c:	str	r0, [sp, #12]
   11040:	ldr	r0, [sp, #12]
   11044:	cmp	r0, #0
   11048:	ble	1107c <heap_insere@@Base+0x118>
   1104c:	ldr	r0, [fp, #-8]
   11050:	ldr	r0, [r0, #8]
   11054:	ldr	r1, [sp, #12]
   11058:	ldr	r2, [r0, r1, lsl #2]
   1105c:	add	r1, r1, #1
   11060:	add	r0, r0, r1, lsl #2
   11064:	str	r2, [r0]
   11068:	ldr	r0, [sp, #12]
   1106c:	mvn	r1, #0
   11070:	add	r0, r0, r1
   11074:	str	r0, [sp, #12]
   11078:	b	11040 <heap_insere@@Base+0xdc>
   1107c:	ldr	r0, [sp, #8]
   11080:	ldr	r1, [fp, #-8]
   11084:	ldr	r1, [r1, #8]
   11088:	ldr	r2, [sp, #16]
   1108c:	add	r1, r1, r2, lsl #2
   11090:	str	r0, [r1]
   11094:	ldr	r0, [fp, #-8]
   11098:	ldr	r1, [r0]
   1109c:	add	r1, r1, #1
   110a0:	str	r1, [r0]
   110a4:	ldr	r0, [sp, #16]
   110a8:	str	r0, [fp, #-4]
   110ac:	ldr	r0, [fp, #-4]
   110b0:	mov	sp, fp
   110b4:	pop	{fp, pc}

000110b8 <heap_remove@@Base>:
   110b8:	sub	sp, sp, #8
   110bc:	str	r0, [sp, #4]
   110c0:	str	r1, [sp]
   110c4:	movw	r0, #0
   110c8:	add	sp, sp, #8
   110cc:	bx	lr

000110d0 <heap_carrega@@Base>:
   110d0:	push	{r4, r5, fp, lr}
   110d4:	add	fp, sp, #8
   110d8:	sub	sp, sp, #288	; 0x120
   110dc:	str	r0, [fp, #-12]
   110e0:	str	r1, [fp, #-16]
   110e4:	str	r2, [fp, #-20]	; 0xffffffec
   110e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   110ec:	movw	r1, #7112	; 0x1bc8
   110f0:	movt	r1, #1
   110f4:	bl	10b04 <fopen@plt>
   110f8:	str	r0, [sp, #12]
   110fc:	ldr	r0, [sp, #12]
   11100:	movw	r1, #0
   11104:	cmp	r0, r1
   11108:	bne	1111c <heap_carrega@@Base+0x4c>
   1110c:	movw	r0, #7114	; 0x1bca
   11110:	movt	r0, #1
   11114:	bl	10aec <printf@plt>
   11118:	b	111b8 <heap_carrega@@Base+0xe8>
   1111c:	b	11120 <heap_carrega@@Base+0x50>
   11120:	ldr	r0, [sp, #12]
   11124:	bl	10b64 <feof@plt>
   11128:	cmp	r0, #0
   1112c:	movw	r0, #0
   11130:	movne	r0, #1
   11134:	mvn	r1, #0
   11138:	eor	r0, r0, r1
   1113c:	tst	r0, #1
   11140:	beq	111b0 <heap_carrega@@Base+0xe0>
   11144:	ldr	r0, [sp, #12]
   11148:	movw	r1, #7148	; 0x1bec
   1114c:	movt	r1, #1
   11150:	add	r2, sp, #16
   11154:	bl	10af8 <__isoc99_fscanf@plt>
   11158:	add	r1, sp, #20
   1115c:	ldr	r2, [sp, #12]
   11160:	str	r0, [sp, #8]
   11164:	mov	r0, r1
   11168:	movw	r1, #256	; 0x100
   1116c:	bl	10b28 <fgets@plt>
   11170:	add	r1, sp, #20
   11174:	str	r0, [sp, #4]
   11178:	mov	r0, r1
   1117c:	str	r1, [sp]
   11180:	bl	10b70 <strlen@plt>
   11184:	sub	r0, r0, #1
   11188:	ldr	r1, [sp]
   1118c:	add	r0, r1, r0
   11190:	movw	r2, #0
   11194:	strb	r2, [r0]
   11198:	ldr	r0, [fp, #-12]
   1119c:	ldr	r1, [fp, #-16]
   111a0:	ldr	r3, [sp, #16]
   111a4:	ldr	r2, [sp]
   111a8:	bl	10f64 <heap_insere@@Base>
   111ac:	b	11120 <heap_carrega@@Base+0x50>
   111b0:	ldr	r0, [sp, #12]
   111b4:	bl	10b7c <fclose@plt>
   111b8:	sub	sp, fp, #8
   111bc:	pop	{r4, r5, fp, pc}

000111c0 <main@@Base>:
   111c0:	push	{fp, lr}
   111c4:	mov	fp, sp
   111c8:	sub	sp, sp, #312	; 0x138
   111cc:	movw	r2, #0
   111d0:	str	r2, [fp, #-4]
   111d4:	str	r0, [fp, #-8]
   111d8:	str	r1, [fp, #-12]
   111dc:	movw	r0, #42	; 0x2a
   111e0:	bl	116c8 <vetor_cria@@Base>
   111e4:	str	r0, [fp, #-16]
   111e8:	movw	r0, #7152	; 0x1bf0
   111ec:	movt	r0, #1
   111f0:	bl	10aec <printf@plt>
   111f4:	ldr	r1, [fp, #-16]
   111f8:	str	r0, [sp, #108]	; 0x6c
   111fc:	mov	r0, r1
   11200:	movw	r1, #7208	; 0x1c28
   11204:	movt	r1, #1
   11208:	bl	10e80 <fp_carrega@@Base>
   1120c:	movw	r0, #12384	; 0x3060
   11210:	movt	r0, #2
   11214:	ldr	r1, [r0]
   11218:	movw	r0, #7218	; 0x1c32
   1121c:	movt	r0, #1
   11220:	bl	10aec <printf@plt>
   11224:	ldr	r1, [fp, #-16]
   11228:	str	r0, [sp, #104]	; 0x68
   1122c:	mov	r0, r1
   11230:	bl	119c8 <vetor_imprime@@Base>
   11234:	ldr	r0, [fp, #-16]
   11238:	ldr	r0, [r0]
   1123c:	cmp	r0, #42	; 0x2a
   11240:	beq	1125c <main@@Base+0x9c>
   11244:	movw	r0, #7273	; 0x1c69
   11248:	movt	r0, #1
   1124c:	bl	10aec <printf@plt>
   11250:	movw	r1, #1
   11254:	str	r1, [fp, #-4]
   11258:	b	116bc <main@@Base+0x4fc>
   1125c:	ldr	r0, [fp, #-16]
   11260:	bl	10dcc <fp_remove@@Base>
   11264:	movw	r1, #7312	; 0x1c90
   11268:	movt	r1, #1
   1126c:	str	r0, [sp, #100]	; 0x64
   11270:	mov	r0, r1
   11274:	ldr	r1, [sp, #100]	; 0x64
   11278:	bl	10ae0 <strcmp@plt>
   1127c:	cmp	r0, #0
   11280:	beq	1129c <main@@Base+0xdc>
   11284:	movw	r0, #7330	; 0x1ca2
   11288:	movt	r0, #1
   1128c:	bl	10aec <printf@plt>
   11290:	movw	r1, #1
   11294:	str	r1, [fp, #-4]
   11298:	b	116bc <main@@Base+0x4fc>
   1129c:	movw	r0, #12384	; 0x3060
   112a0:	movt	r0, #2
   112a4:	movw	r1, #0
   112a8:	str	r1, [r0]
   112ac:	ldr	r0, [fp, #-16]
   112b0:	bl	10dcc <fp_remove@@Base>
   112b4:	movw	r1, #12384	; 0x3060
   112b8:	movt	r1, #2
   112bc:	ldr	r1, [r1]
   112c0:	movw	r2, #7399	; 0x1ce7
   112c4:	movt	r2, #1
   112c8:	str	r0, [sp, #96]	; 0x60
   112cc:	mov	r0, r2
   112d0:	bl	10aec <printf@plt>
   112d4:	movw	r1, #12384	; 0x3060
   112d8:	movt	r1, #2
   112dc:	movw	r2, #0
   112e0:	str	r2, [r1]
   112e4:	ldr	r1, [fp, #-16]
   112e8:	str	r0, [sp, #92]	; 0x5c
   112ec:	mov	r0, r1
   112f0:	movw	r1, #7451	; 0x1d1b
   112f4:	movt	r1, #1
   112f8:	movw	r2, #99	; 0x63
   112fc:	bl	10c84 <fp_insere@@Base>
   11300:	movw	r1, #12384	; 0x3060
   11304:	movt	r1, #2
   11308:	ldr	r1, [r1]
   1130c:	movw	r2, #7465	; 0x1d29
   11310:	movt	r2, #1
   11314:	str	r0, [sp, #88]	; 0x58
   11318:	mov	r0, r2
   1131c:	bl	10aec <printf@plt>
   11320:	ldr	r1, [fp, #-16]
   11324:	str	r0, [sp, #84]	; 0x54
   11328:	mov	r0, r1
   1132c:	bl	10dcc <fp_remove@@Base>
   11330:	movw	r1, #12384	; 0x3060
   11334:	movt	r1, #2
   11338:	movw	r2, #0
   1133c:	str	r2, [r1]
   11340:	ldr	r1, [fp, #-16]
   11344:	str	r0, [sp, #80]	; 0x50
   11348:	mov	r0, r1
   1134c:	movw	r1, #7451	; 0x1d1b
   11350:	movt	r1, #1
   11354:	bl	10c84 <fp_insere@@Base>
   11358:	movw	r1, #12384	; 0x3060
   1135c:	movt	r1, #2
   11360:	ldr	r1, [r1]
   11364:	movw	r2, #7536	; 0x1d70
   11368:	movt	r2, #1
   1136c:	str	r0, [sp, #76]	; 0x4c
   11370:	mov	r0, r2
   11374:	bl	10aec <printf@plt>
   11378:	ldr	r1, [fp, #-16]
   1137c:	str	r0, [sp, #72]	; 0x48
   11380:	mov	r0, r1
   11384:	bl	10dcc <fp_remove@@Base>
   11388:	movw	r1, #12384	; 0x3060
   1138c:	movt	r1, #2
   11390:	movw	r2, #0
   11394:	str	r2, [r1]
   11398:	ldr	r1, [fp, #-16]
   1139c:	str	r0, [sp, #68]	; 0x44
   113a0:	mov	r0, r1
   113a4:	movw	r1, #7451	; 0x1d1b
   113a8:	movt	r1, #1
   113ac:	movw	r2, #42	; 0x2a
   113b0:	bl	10c84 <fp_insere@@Base>
   113b4:	movw	r1, #12384	; 0x3060
   113b8:	movt	r1, #2
   113bc:	ldr	r1, [r1]
   113c0:	movw	r2, #7607	; 0x1db7
   113c4:	movt	r2, #1
   113c8:	str	r0, [sp, #64]	; 0x40
   113cc:	mov	r0, r2
   113d0:	bl	10aec <printf@plt>
   113d4:	movw	r1, #7677	; 0x1dfd
   113d8:	movt	r1, #1
   113dc:	str	r0, [sp, #60]	; 0x3c
   113e0:	mov	r0, r1
   113e4:	bl	10aec <printf@plt>
   113e8:	movw	r1, #42	; 0x2a
   113ec:	str	r0, [sp, #56]	; 0x38
   113f0:	mov	r0, r1
   113f4:	bl	11768 <vetor_criaHeap@@Base>
   113f8:	str	r0, [fp, #-24]	; 0xffffffe8
   113fc:	movw	r0, #6264	; 0x1878
   11400:	movt	r0, #1
   11404:	str	r0, [fp, #-28]	; 0xffffffe4
   11408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1140c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11410:	movw	r2, #7208	; 0x1c28
   11414:	movt	r2, #1
   11418:	bl	110d0 <heap_carrega@@Base>
   1141c:	movw	r0, #12384	; 0x3060
   11420:	movt	r0, #2
   11424:	ldr	r1, [r0]
   11428:	movw	r0, #7734	; 0x1e36
   1142c:	movt	r0, #1
   11430:	bl	10aec <printf@plt>
   11434:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11438:	str	r0, [sp, #52]	; 0x34
   1143c:	mov	r0, r1
   11440:	bl	11a90 <vetor_imprimeHeap@@Base>
   11444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11448:	ldr	r0, [r0]
   1144c:	cmp	r0, #42	; 0x2a
   11450:	beq	1146c <main@@Base+0x2ac>
   11454:	movw	r0, #7789	; 0x1e6d
   11458:	movt	r0, #1
   1145c:	bl	10aec <printf@plt>
   11460:	movw	r1, #1
   11464:	str	r1, [fp, #-4]
   11468:	b	116bc <main@@Base+0x4fc>
   1146c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11470:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11474:	bl	110b8 <heap_remove@@Base>
   11478:	movw	r1, #7312	; 0x1c90
   1147c:	movt	r1, #1
   11480:	str	r0, [sp, #48]	; 0x30
   11484:	mov	r0, r1
   11488:	ldr	r1, [sp, #48]	; 0x30
   1148c:	bl	10ae0 <strcmp@plt>
   11490:	cmp	r0, #0
   11494:	beq	114b0 <main@@Base+0x2f0>
   11498:	movw	r0, #7330	; 0x1ca2
   1149c:	movt	r0, #1
   114a0:	bl	10aec <printf@plt>
   114a4:	movw	r1, #1
   114a8:	str	r1, [fp, #-4]
   114ac:	b	116bc <main@@Base+0x4fc>
   114b0:	movw	r0, #12384	; 0x3060
   114b4:	movt	r0, #2
   114b8:	movw	r1, #0
   114bc:	str	r1, [r0]
   114c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   114c8:	bl	110b8 <heap_remove@@Base>
   114cc:	movw	r1, #12384	; 0x3060
   114d0:	movt	r1, #2
   114d4:	ldr	r1, [r1]
   114d8:	movw	r2, #7829	; 0x1e95
   114dc:	movt	r2, #1
   114e0:	str	r0, [sp, #44]	; 0x2c
   114e4:	mov	r0, r2
   114e8:	bl	10aec <printf@plt>
   114ec:	movw	r1, #12384	; 0x3060
   114f0:	movt	r1, #2
   114f4:	movw	r2, #0
   114f8:	str	r2, [r1]
   114fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11500:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11504:	str	r0, [sp, #40]	; 0x28
   11508:	mov	r0, r1
   1150c:	mov	r1, r2
   11510:	movw	r2, #7451	; 0x1d1b
   11514:	movt	r2, #1
   11518:	movw	r3, #99	; 0x63
   1151c:	bl	10f64 <heap_insere@@Base>
   11520:	movw	r1, #12384	; 0x3060
   11524:	movt	r1, #2
   11528:	ldr	r1, [r1]
   1152c:	movw	r2, #7881	; 0x1ec9
   11530:	movt	r2, #1
   11534:	str	r0, [sp, #36]	; 0x24
   11538:	mov	r0, r2
   1153c:	bl	10aec <printf@plt>
   11540:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11544:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11548:	str	r0, [sp, #32]
   1154c:	mov	r0, r1
   11550:	mov	r1, r2
   11554:	bl	110b8 <heap_remove@@Base>
   11558:	movw	r1, #12384	; 0x3060
   1155c:	movt	r1, #2
   11560:	movw	r2, #0
   11564:	str	r2, [r1]
   11568:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1156c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11570:	str	r0, [sp, #28]
   11574:	mov	r0, r1
   11578:	mov	r1, r3
   1157c:	movw	r3, #7451	; 0x1d1b
   11580:	movt	r3, #1
   11584:	str	r2, [sp, #24]
   11588:	mov	r2, r3
   1158c:	ldr	r3, [sp, #24]
   11590:	bl	10f64 <heap_insere@@Base>
   11594:	movw	r1, #12384	; 0x3060
   11598:	movt	r1, #2
   1159c:	ldr	r1, [r1]
   115a0:	movw	r2, #7952	; 0x1f10
   115a4:	movt	r2, #1
   115a8:	str	r0, [sp, #20]
   115ac:	mov	r0, r2
   115b0:	bl	10aec <printf@plt>
   115b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   115b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   115bc:	str	r0, [sp, #16]
   115c0:	mov	r0, r1
   115c4:	mov	r1, r2
   115c8:	bl	110b8 <heap_remove@@Base>
   115cc:	movw	r1, #12384	; 0x3060
   115d0:	movt	r1, #2
   115d4:	movw	r2, #0
   115d8:	str	r2, [r1]
   115dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   115e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   115e4:	str	r0, [sp, #12]
   115e8:	mov	r0, r1
   115ec:	mov	r1, r2
   115f0:	movw	r2, #7451	; 0x1d1b
   115f4:	movt	r2, #1
   115f8:	movw	r3, #42	; 0x2a
   115fc:	bl	10f64 <heap_insere@@Base>
   11600:	movw	r1, #12384	; 0x3060
   11604:	movt	r1, #2
   11608:	ldr	r1, [r1]
   1160c:	movw	r2, #7607	; 0x1db7
   11610:	movt	r2, #1
   11614:	str	r0, [sp, #8]
   11618:	mov	r0, r2
   1161c:	bl	10aec <printf@plt>
   11620:	movw	r1, #42	; 0x2a
   11624:	str	r0, [sp, #4]
   11628:	mov	r0, r1
   1162c:	bl	11768 <vetor_criaHeap@@Base>
   11630:	str	r0, [fp, #-24]	; 0xffffffe8
   11634:	movw	r0, #6424	; 0x1918
   11638:	movt	r0, #1
   1163c:	str	r0, [fp, #-32]	; 0xffffffe0
   11640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11644:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11648:	movw	r2, #7208	; 0x1c28
   1164c:	movt	r2, #1
   11650:	bl	110d0 <heap_carrega@@Base>
   11654:	movw	r0, #12384	; 0x3060
   11658:	movt	r0, #2
   1165c:	ldr	r1, [r0]
   11660:	movw	r0, #7734	; 0x1e36
   11664:	movt	r0, #1
   11668:	bl	10aec <printf@plt>
   1166c:	movw	r1, #0
   11670:	str	r1, [fp, #-20]	; 0xffffffec
   11674:	ldr	r0, [fp, #-20]	; 0xffffffec
   11678:	cmp	r0, #42	; 0x2a
   1167c:	bge	116b4 <main@@Base+0x4f4>
   11680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11684:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11688:	bl	110b8 <heap_remove@@Base>
   1168c:	movw	r1, #8023	; 0x1f57
   11690:	movt	r1, #1
   11694:	str	r0, [sp]
   11698:	mov	r0, r1
   1169c:	ldr	r1, [sp]
   116a0:	bl	10aec <printf@plt>
   116a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   116a8:	add	r0, r0, #1
   116ac:	str	r0, [fp, #-20]	; 0xffffffec
   116b0:	b	11674 <main@@Base+0x4b4>
   116b4:	movw	r0, #0
   116b8:	str	r0, [fp, #-4]
   116bc:	ldr	r0, [fp, #-4]
   116c0:	mov	sp, fp
   116c4:	pop	{fp, pc}

000116c8 <vetor_cria@@Base>:
   116c8:	push	{fp, lr}
   116cc:	mov	fp, sp
   116d0:	sub	sp, sp, #16
   116d4:	str	r0, [sp, #8]
   116d8:	movw	r0, #12
   116dc:	bl	10b40 <malloc@plt>
   116e0:	str	r0, [sp, #4]
   116e4:	ldr	r0, [sp, #4]
   116e8:	movw	r1, #0
   116ec:	cmp	r0, r1
   116f0:	bne	11700 <vetor_cria@@Base+0x38>
   116f4:	movw	r0, #0
   116f8:	str	r0, [fp, #-4]
   116fc:	b	1175c <vetor_cria@@Base+0x94>
   11700:	ldr	r0, [sp, #4]
   11704:	movw	r1, #0
   11708:	str	r1, [r0]
   1170c:	ldr	r0, [sp, #8]
   11710:	ldr	r1, [sp, #4]
   11714:	str	r0, [r1, #4]
   11718:	ldr	r0, [sp, #8]
   1171c:	movw	r1, #4
   11720:	bl	10ad4 <calloc@plt>
   11724:	ldr	r1, [sp, #4]
   11728:	str	r0, [r1, #8]
   1172c:	ldr	r0, [sp, #4]
   11730:	ldr	r0, [r0, #8]
   11734:	movw	r1, #0
   11738:	cmp	r0, r1
   1173c:	bne	11754 <vetor_cria@@Base+0x8c>
   11740:	ldr	r0, [sp, #4]
   11744:	bl	10b1c <free@plt>
   11748:	movw	r0, #0
   1174c:	str	r0, [fp, #-4]
   11750:	b	1175c <vetor_cria@@Base+0x94>
   11754:	ldr	r0, [sp, #4]
   11758:	str	r0, [fp, #-4]
   1175c:	ldr	r0, [fp, #-4]
   11760:	mov	sp, fp
   11764:	pop	{fp, pc}

00011768 <vetor_criaHeap@@Base>:
   11768:	push	{fp, lr}
   1176c:	mov	fp, sp
   11770:	sub	sp, sp, #16
   11774:	str	r0, [sp, #8]
   11778:	movw	r0, #12
   1177c:	bl	10b40 <malloc@plt>
   11780:	str	r0, [sp, #4]
   11784:	ldr	r0, [sp, #4]
   11788:	movw	r1, #0
   1178c:	cmp	r0, r1
   11790:	bne	117a0 <vetor_criaHeap@@Base+0x38>
   11794:	movw	r0, #0
   11798:	str	r0, [fp, #-4]
   1179c:	b	11800 <vetor_criaHeap@@Base+0x98>
   117a0:	ldr	r0, [sp, #4]
   117a4:	movw	r1, #0
   117a8:	str	r1, [r0]
   117ac:	ldr	r0, [sp, #8]
   117b0:	ldr	r1, [sp, #4]
   117b4:	str	r0, [r1, #4]
   117b8:	ldr	r0, [sp, #8]
   117bc:	add	r0, r0, #1
   117c0:	movw	r1, #4
   117c4:	bl	10ad4 <calloc@plt>
   117c8:	ldr	r1, [sp, #4]
   117cc:	str	r0, [r1, #8]
   117d0:	ldr	r0, [sp, #4]
   117d4:	ldr	r0, [r0, #8]
   117d8:	movw	r1, #0
   117dc:	cmp	r0, r1
   117e0:	bne	117f8 <vetor_criaHeap@@Base+0x90>
   117e4:	ldr	r0, [sp, #4]
   117e8:	bl	10b1c <free@plt>
   117ec:	movw	r0, #0
   117f0:	str	r0, [fp, #-4]
   117f4:	b	11800 <vetor_criaHeap@@Base+0x98>
   117f8:	ldr	r0, [sp, #4]
   117fc:	str	r0, [fp, #-4]
   11800:	ldr	r0, [fp, #-4]
   11804:	mov	sp, fp
   11808:	pop	{fp, pc}

0001180c <elemento_cria@@Base>:
   1180c:	push	{fp, lr}
   11810:	mov	fp, sp
   11814:	sub	sp, sp, #16
   11818:	str	r0, [sp, #8]
   1181c:	str	r1, [sp, #4]
   11820:	movw	r0, #8
   11824:	bl	10b40 <malloc@plt>
   11828:	str	r0, [sp]
   1182c:	ldr	r0, [sp]
   11830:	movw	r1, #0
   11834:	cmp	r0, r1
   11838:	bne	11848 <elemento_cria@@Base+0x3c>
   1183c:	movw	r0, #0
   11840:	str	r0, [fp, #-4]
   11844:	b	1186c <elemento_cria@@Base+0x60>
   11848:	ldr	r0, [sp, #4]
   1184c:	bl	10b34 <strdup@plt>
   11850:	ldr	r1, [sp]
   11854:	str	r0, [r1, #4]
   11858:	ldr	r0, [sp, #8]
   1185c:	ldr	r1, [sp]
   11860:	str	r0, [r1]
   11864:	ldr	r0, [sp]
   11868:	str	r0, [fp, #-4]
   1186c:	ldr	r0, [fp, #-4]
   11870:	mov	sp, fp
   11874:	pop	{fp, pc}

00011878 <maior_que@@Base>:
   11878:	push	{fp, lr}
   1187c:	mov	fp, sp
   11880:	sub	sp, sp, #16
   11884:	str	r0, [sp, #8]
   11888:	str	r1, [sp, #4]
   1188c:	ldr	r0, [sp, #8]
   11890:	movw	r1, #0
   11894:	cmp	r0, r1
   11898:	beq	118ac <maior_que@@Base+0x34>
   1189c:	ldr	r0, [sp, #4]
   118a0:	movw	r1, #0
   118a4:	cmp	r0, r1
   118a8:	bne	118c4 <maior_que@@Base+0x4c>
   118ac:	movw	r0, #8027	; 0x1f5b
   118b0:	movt	r0, #1
   118b4:	bl	10aec <printf@plt>
   118b8:	movw	r1, #0
   118bc:	str	r1, [fp, #-4]
   118c0:	b	1190c <maior_que@@Base+0x94>
   118c4:	movw	r0, #12376	; 0x3058
   118c8:	movt	r0, #2
   118cc:	ldr	r0, [r0]
   118d0:	bl	10b10 <fflush@plt>
   118d4:	movw	r1, #12384	; 0x3060
   118d8:	movt	r1, #2
   118dc:	ldr	r2, [r1]
   118e0:	add	r2, r2, #1
   118e4:	str	r2, [r1]
   118e8:	ldr	r1, [sp, #8]
   118ec:	ldr	r1, [r1]
   118f0:	ldr	r2, [sp, #4]
   118f4:	ldr	r2, [r2]
   118f8:	cmp	r1, r2
   118fc:	movw	r1, #0
   11900:	movgt	r1, #1
   11904:	and	r1, r1, #1
   11908:	str	r1, [fp, #-4]
   1190c:	ldr	r0, [fp, #-4]
   11910:	mov	sp, fp
   11914:	pop	{fp, pc}

00011918 <maior_que_HeapSort@@Base>:
   11918:	push	{fp, lr}
   1191c:	mov	fp, sp
   11920:	sub	sp, sp, #16
   11924:	str	r0, [sp, #8]
   11928:	str	r1, [sp, #4]
   1192c:	ldr	r0, [sp, #8]
   11930:	movw	r1, #0
   11934:	cmp	r0, r1
   11938:	beq	1194c <maior_que_HeapSort@@Base+0x34>
   1193c:	ldr	r0, [sp, #4]
   11940:	movw	r1, #0
   11944:	cmp	r0, r1
   11948:	bne	11964 <maior_que_HeapSort@@Base+0x4c>
   1194c:	movw	r0, #8027	; 0x1f5b
   11950:	movt	r0, #1
   11954:	bl	10aec <printf@plt>
   11958:	movw	r1, #0
   1195c:	str	r1, [fp, #-4]
   11960:	b	119bc <maior_que_HeapSort@@Base+0xa4>
   11964:	movw	r0, #12376	; 0x3058
   11968:	movt	r0, #2
   1196c:	ldr	r0, [r0]
   11970:	bl	10b10 <fflush@plt>
   11974:	movw	r1, #12384	; 0x3060
   11978:	movt	r1, #2
   1197c:	ldr	r2, [r1]
   11980:	add	r2, r2, #1
   11984:	str	r2, [r1]
   11988:	ldr	r1, [sp, #8]
   1198c:	ldr	r1, [r1, #4]
   11990:	ldr	r2, [sp, #4]
   11994:	ldr	r2, [r2, #4]
   11998:	str	r0, [sp]
   1199c:	mov	r0, r1
   119a0:	mov	r1, r2
   119a4:	bl	10ae0 <strcmp@plt>
   119a8:	cmp	r0, #0
   119ac:	movw	r0, #0
   119b0:	movlt	r0, #1
   119b4:	and	r0, r0, #1
   119b8:	str	r0, [fp, #-4]
   119bc:	ldr	r0, [fp, #-4]
   119c0:	mov	sp, fp
   119c4:	pop	{fp, pc}

000119c8 <vetor_imprime@@Base>:
   119c8:	push	{fp, lr}
   119cc:	mov	fp, sp
   119d0:	sub	sp, sp, #8
   119d4:	str	r0, [sp, #4]
   119d8:	ldr	r0, [sp, #4]
   119dc:	ldr	r0, [r0]
   119e0:	cmp	r0, #0
   119e4:	ble	11a18 <vetor_imprime@@Base+0x50>
   119e8:	ldr	r0, [sp, #4]
   119ec:	ldr	r0, [r0, #8]
   119f0:	ldr	r0, [r0]
   119f4:	ldr	r1, [r0, #4]
   119f8:	ldr	r0, [sp, #4]
   119fc:	ldr	r0, [r0, #8]
   11a00:	ldr	r0, [r0]
   11a04:	ldr	r2, [r0]
   11a08:	movw	r0, #8039	; 0x1f67
   11a0c:	movt	r0, #1
   11a10:	bl	10aec <printf@plt>
   11a14:	b	11a28 <vetor_imprime@@Base+0x60>
   11a18:	movw	r0, #8068	; 0x1f84
   11a1c:	movt	r0, #1
   11a20:	bl	10aec <printf@plt>
   11a24:	b	11a88 <vetor_imprime@@Base+0xc0>
   11a28:	movw	r0, #1
   11a2c:	str	r0, [sp]
   11a30:	ldr	r0, [sp]
   11a34:	ldr	r1, [sp, #4]
   11a38:	ldr	r1, [r1]
   11a3c:	cmp	r0, r1
   11a40:	bge	11a7c <vetor_imprime@@Base+0xb4>
   11a44:	ldr	r0, [sp, #4]
   11a48:	ldr	r0, [r0, #8]
   11a4c:	ldr	r1, [sp]
   11a50:	ldr	r1, [r0, r1, lsl #2]!
   11a54:	ldr	r1, [r1, #4]
   11a58:	ldr	r0, [r0]
   11a5c:	ldr	r2, [r0]
   11a60:	movw	r0, #8092	; 0x1f9c
   11a64:	movt	r0, #1
   11a68:	bl	10aec <printf@plt>
   11a6c:	ldr	r0, [sp]
   11a70:	add	r0, r0, #1
   11a74:	str	r0, [sp]
   11a78:	b	11a30 <vetor_imprime@@Base+0x68>
   11a7c:	movw	r0, #7310	; 0x1c8e
   11a80:	movt	r0, #1
   11a84:	bl	10aec <printf@plt>
   11a88:	mov	sp, fp
   11a8c:	pop	{fp, pc}

00011a90 <vetor_imprimeHeap@@Base>:
   11a90:	push	{fp, lr}
   11a94:	mov	fp, sp
   11a98:	sub	sp, sp, #8
   11a9c:	str	r0, [sp, #4]
   11aa0:	ldr	r0, [sp, #4]
   11aa4:	ldr	r0, [r0]
   11aa8:	cmp	r0, #0
   11aac:	ble	11ae0 <vetor_imprimeHeap@@Base+0x50>
   11ab0:	ldr	r0, [sp, #4]
   11ab4:	ldr	r0, [r0, #8]
   11ab8:	ldr	r0, [r0, #4]
   11abc:	ldr	r1, [r0, #4]
   11ac0:	ldr	r0, [sp, #4]
   11ac4:	ldr	r0, [r0, #8]
   11ac8:	ldr	r0, [r0, #4]
   11acc:	ldr	r2, [r0]
   11ad0:	movw	r0, #8039	; 0x1f67
   11ad4:	movt	r0, #1
   11ad8:	bl	10aec <printf@plt>
   11adc:	b	11af0 <vetor_imprimeHeap@@Base+0x60>
   11ae0:	movw	r0, #8068	; 0x1f84
   11ae4:	movt	r0, #1
   11ae8:	bl	10aec <printf@plt>
   11aec:	b	11b50 <vetor_imprimeHeap@@Base+0xc0>
   11af0:	movw	r0, #2
   11af4:	str	r0, [sp]
   11af8:	ldr	r0, [sp]
   11afc:	ldr	r1, [sp, #4]
   11b00:	ldr	r1, [r1]
   11b04:	cmp	r0, r1
   11b08:	bge	11b44 <vetor_imprimeHeap@@Base+0xb4>
   11b0c:	ldr	r0, [sp, #4]
   11b10:	ldr	r0, [r0, #8]
   11b14:	ldr	r1, [sp]
   11b18:	ldr	r1, [r0, r1, lsl #2]!
   11b1c:	ldr	r1, [r1, #4]
   11b20:	ldr	r0, [r0]
   11b24:	ldr	r2, [r0]
   11b28:	movw	r0, #8092	; 0x1f9c
   11b2c:	movt	r0, #1
   11b30:	bl	10aec <printf@plt>
   11b34:	ldr	r0, [sp]
   11b38:	add	r0, r0, #1
   11b3c:	str	r0, [sp]
   11b40:	b	11af8 <vetor_imprimeHeap@@Base+0x68>
   11b44:	movw	r0, #7310	; 0x1c8e
   11b48:	movt	r0, #1
   11b4c:	bl	10aec <printf@plt>
   11b50:	mov	sp, fp
   11b54:	pop	{fp, pc}

00011b58 <__libc_csu_init@@Base>:
   11b58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b5c:	mov	r7, r0
   11b60:	ldr	r6, [pc, #72]	; 11bb0 <__libc_csu_init@@Base+0x58>
   11b64:	ldr	r5, [pc, #72]	; 11bb4 <__libc_csu_init@@Base+0x5c>
   11b68:	add	r6, pc, r6
   11b6c:	add	r5, pc, r5
   11b70:	sub	r6, r6, r5
   11b74:	mov	r8, r1
   11b78:	mov	r9, r2
   11b7c:	bl	10ab4 <calloc@plt-0x20>
   11b80:	asrs	r6, r6, #2
   11b84:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b88:	mov	r4, #0
   11b8c:	add	r4, r4, #1
   11b90:	ldr	r3, [r5], #4
   11b94:	mov	r2, r9
   11b98:	mov	r1, r8
   11b9c:	mov	r0, r7
   11ba0:	blx	r3
   11ba4:	cmp	r6, r4
   11ba8:	bne	11b8c <__libc_csu_init@@Base+0x34>
   11bac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bb0:	muleq	r1, ip, r3
   11bb4:	muleq	r1, r4, r3

00011bb8 <__libc_csu_fini@@Base>:
   11bb8:	bx	lr

Disassembly of section .fini:

00011bbc <.fini>:
   11bbc:	push	{r3, lr}
   11bc0:	pop	{r3, pc}
