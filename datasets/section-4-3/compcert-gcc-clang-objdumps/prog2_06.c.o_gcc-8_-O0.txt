
../compcert-repos/prog2/CMakeFiles/0.6.dir/Aula00_Conceitos_base/06.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	str	r4, [sp, #-12]!
   4:	str	fp, [sp, #4]
   8:	str	lr, [sp, #8]
   c:	add	fp, sp, #8
  10:	sub	sp, sp, #28
  14:	mov	r3, #0
  18:	str	r3, [fp, #-24]	; 0xffffffe8
  1c:	mov	r3, #0
  20:	str	r3, [fp, #-28]	; 0xffffffe4
  24:	mov	r3, #0
  28:	str	r3, [fp, #-32]	; 0xffffffe0
  2c:	movw	r0, #0
  30:	movt	r0, #0
  34:	bl	0 <printf>
  38:	mov	r0, #1
  3c:	bl	0 <malloc>
  40:	mov	r3, r0
  44:	str	r3, [fp, #-16]
  48:	mov	r0, #1
  4c:	bl	0 <malloc>
  50:	mov	r3, r0
  54:	str	r3, [fp, #-20]	; 0xffffffec
  58:	b	124 <main+0x124>
  5c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
  60:	cmp	r3, #32
  64:	beq	74 <main+0x74>
  68:	ldrb	r3, [fp, #-33]	; 0xffffffdf
  6c:	cmp	r3, #10
  70:	bne	e0 <main+0xe0>
  74:	ldr	r0, [fp, #-20]	; 0xffffffec
  78:	bl	0 <strlen>
  7c:	mov	r4, r0
  80:	ldr	r0, [fp, #-16]
  84:	bl	0 <strlen>
  88:	mov	r3, r0
  8c:	cmp	r4, r3
  90:	bls	bc <main+0xbc>
  94:	ldr	r0, [fp, #-20]	; 0xffffffec
  98:	bl	0 <strlen>
  9c:	mov	r3, r0
  a0:	mov	r1, r3
  a4:	ldr	r0, [fp, #-16]
  a8:	bl	0 <realloc>
  ac:	str	r0, [fp, #-16]
  b0:	ldr	r1, [fp, #-20]	; 0xffffffec
  b4:	ldr	r0, [fp, #-16]
  b8:	bl	0 <strcpy>
  bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
  c0:	add	r3, r3, #1
  c4:	str	r3, [fp, #-24]	; 0xffffffe8
  c8:	mov	r3, #0
  cc:	str	r3, [fp, #-32]	; 0xffffffe0
  d0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
  d4:	cmp	r3, #10
  d8:	beq	148 <main+0x148>
  dc:	b	124 <main+0x124>
  e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
  e4:	add	r3, r3, #1
  e8:	mov	r1, r3
  ec:	ldr	r0, [fp, #-20]	; 0xffffffec
  f0:	bl	0 <realloc>
  f4:	str	r0, [fp, #-20]	; 0xffffffec
  f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
  fc:	ldr	r2, [fp, #-20]	; 0xffffffec
 100:	add	r3, r2, r3
 104:	ldrb	r2, [fp, #-33]	; 0xffffffdf
 108:	strb	r2, [r3]
 10c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 110:	add	r3, r3, #1
 114:	str	r3, [fp, #-28]	; 0xffffffe4
 118:	ldr	r3, [fp, #-32]	; 0xffffffe0
 11c:	add	r3, r3, #1
 120:	str	r3, [fp, #-32]	; 0xffffffe0
 124:	sub	r3, fp, #33	; 0x21
 128:	mov	r1, r3
 12c:	movw	r0, #0
 130:	movt	r0, #0
 134:	bl	0 <__isoc99_scanf>
 138:	mov	r3, r0
 13c:	cmp	r3, #1
 140:	beq	5c <main+0x5c>
 144:	b	14c <main+0x14c>
 148:	nop	{0}
 14c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 150:	movw	r0, #0
 154:	movt	r0, #0
 158:	bl	0 <printf>
 15c:	ldr	r1, [fp, #-16]
 160:	movw	r0, #0
 164:	movt	r0, #0
 168:	bl	0 <printf>
 16c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 170:	vmov	s15, r3
 174:	vcvt.f32.s32	s13, s15
 178:	ldr	r3, [fp, #-24]	; 0xffffffe8
 17c:	vmov	s15, r3
 180:	vcvt.f32.s32	s14, s15
 184:	vdiv.f32	s15, s13, s14
 188:	vcvt.f64.f32	d7, s15
 18c:	vmov	r2, r3, d7
 190:	movw	r0, #0
 194:	movt	r0, #0
 198:	bl	0 <printf>
 19c:	mov	r3, #0
 1a0:	mov	r0, r3
 1a4:	sub	sp, fp, #8
 1a8:	ldr	r4, [sp]
 1ac:	ldr	fp, [sp, #4]
 1b0:	add	sp, sp, #8
 1b4:	pop	{pc}		; (ldr pc, [sp], #4)
