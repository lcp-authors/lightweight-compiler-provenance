
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_version>:
       0:	str	fp, [sp, #-8]!
       4:	str	lr, [sp, #4]
       8:	add	fp, sp, #4
       c:	bl	0 <coda_get_libcoda_version>
      10:	mov	r3, r0
      14:	mov	r1, r3
      18:	movw	r0, #0
      1c:	movt	r0, #0
      20:	bl	0 <printf>
      24:	movw	r0, #0
      28:	movt	r0, #0
      2c:	bl	0 <puts>
      30:	mov	r0, #10
      34:	bl	0 <putchar>
      38:	nop	{0}
      3c:	sub	sp, fp, #4
      40:	ldr	fp, [sp]
      44:	add	sp, sp, #4
      48:	pop	{pc}		; (ldr pc, [sp], #4)

0000004c <print_help>:
      4c:	str	fp, [sp, #-8]!
      50:	str	lr, [sp, #4]
      54:	add	fp, sp, #4
      58:	movw	r0, #0
      5c:	movt	r0, #0
      60:	bl	0 <puts>
      64:	movw	r0, #0
      68:	movt	r0, #0
      6c:	bl	0 <puts>
      70:	movw	r0, #0
      74:	movt	r0, #0
      78:	bl	0 <puts>
      7c:	movw	r0, #0
      80:	movt	r0, #0
      84:	bl	0 <puts>
      88:	movw	r0, #0
      8c:	movt	r0, #0
      90:	bl	0 <puts>
      94:	movw	r0, #0
      98:	movt	r0, #0
      9c:	bl	0 <puts>
      a0:	movw	r0, #0
      a4:	movt	r0, #0
      a8:	bl	0 <puts>
      ac:	movw	r0, #0
      b0:	movt	r0, #0
      b4:	bl	0 <puts>
      b8:	movw	r0, #0
      bc:	movt	r0, #0
      c0:	bl	0 <puts>
      c4:	movw	r0, #0
      c8:	movt	r0, #0
      cc:	bl	0 <puts>
      d0:	movw	r0, #0
      d4:	movt	r0, #0
      d8:	bl	0 <puts>
      dc:	movw	r0, #0
      e0:	movt	r0, #0
      e4:	bl	0 <puts>
      e8:	movw	r0, #0
      ec:	movt	r0, #0
      f0:	bl	0 <puts>
      f4:	movw	r0, #0
      f8:	movt	r0, #0
      fc:	bl	0 <puts>
     100:	movw	r0, #0
     104:	movt	r0, #0
     108:	bl	0 <puts>
     10c:	movw	r0, #0
     110:	movt	r0, #0
     114:	bl	0 <puts>
     118:	movw	r0, #0
     11c:	movt	r0, #0
     120:	bl	0 <puts>
     124:	movw	r0, #0
     128:	movt	r0, #0
     12c:	bl	0 <puts>
     130:	movw	r0, #0
     134:	movt	r0, #0
     138:	bl	0 <puts>
     13c:	movw	r0, #0
     140:	movt	r0, #0
     144:	bl	0 <puts>
     148:	movw	r0, #0
     14c:	movt	r0, #0
     150:	bl	0 <puts>
     154:	movw	r0, #0
     158:	movt	r0, #0
     15c:	bl	0 <puts>
     160:	movw	r0, #0
     164:	movt	r0, #0
     168:	bl	0 <puts>
     16c:	mov	r0, #10
     170:	bl	0 <putchar>
     174:	movw	r0, #0
     178:	movt	r0, #0
     17c:	bl	0 <puts>
     180:	movw	r0, #0
     184:	movt	r0, #0
     188:	bl	0 <puts>
     18c:	movw	r0, #0
     190:	movt	r0, #0
     194:	bl	0 <puts>
     198:	movw	r0, #0
     19c:	movt	r0, #0
     1a0:	bl	0 <puts>
     1a4:	movw	r0, #0
     1a8:	movt	r0, #0
     1ac:	bl	0 <puts>
     1b0:	movw	r0, #0
     1b4:	movt	r0, #0
     1b8:	bl	0 <puts>
     1bc:	movw	r0, #0
     1c0:	movt	r0, #0
     1c4:	bl	0 <puts>
     1c8:	movw	r0, #0
     1cc:	movt	r0, #0
     1d0:	bl	0 <puts>
     1d4:	movw	r0, #0
     1d8:	movt	r0, #0
     1dc:	bl	0 <puts>
     1e0:	movw	r0, #0
     1e4:	movt	r0, #0
     1e8:	bl	0 <puts>
     1ec:	movw	r0, #0
     1f0:	movt	r0, #0
     1f4:	bl	0 <puts>
     1f8:	movw	r0, #0
     1fc:	movt	r0, #0
     200:	bl	0 <puts>
     204:	movw	r0, #0
     208:	movt	r0, #0
     20c:	bl	0 <puts>
     210:	movw	r0, #0
     214:	movt	r0, #0
     218:	bl	0 <puts>
     21c:	movw	r0, #0
     220:	movt	r0, #0
     224:	bl	0 <puts>
     228:	movw	r0, #0
     22c:	movt	r0, #0
     230:	bl	0 <puts>
     234:	movw	r0, #0
     238:	movt	r0, #0
     23c:	bl	0 <puts>
     240:	movw	r0, #0
     244:	movt	r0, #0
     248:	bl	0 <puts>
     24c:	movw	r0, #0
     250:	movt	r0, #0
     254:	bl	0 <puts>
     258:	movw	r0, #0
     25c:	movt	r0, #0
     260:	bl	0 <puts>
     264:	movw	r0, #0
     268:	movt	r0, #0
     26c:	bl	0 <puts>
     270:	movw	r0, #0
     274:	movt	r0, #0
     278:	bl	0 <puts>
     27c:	movw	r0, #0
     280:	movt	r0, #0
     284:	bl	0 <puts>
     288:	mov	r0, #10
     28c:	bl	0 <putchar>
     290:	movw	r0, #0
     294:	movt	r0, #0
     298:	bl	0 <puts>
     29c:	movw	r0, #0
     2a0:	movt	r0, #0
     2a4:	bl	0 <puts>
     2a8:	movw	r0, #0
     2ac:	movt	r0, #0
     2b0:	bl	0 <puts>
     2b4:	movw	r0, #0
     2b8:	movt	r0, #0
     2bc:	bl	0 <puts>
     2c0:	movw	r0, #0
     2c4:	movt	r0, #0
     2c8:	bl	0 <puts>
     2cc:	movw	r0, #0
     2d0:	movt	r0, #0
     2d4:	bl	0 <puts>
     2d8:	movw	r0, #0
     2dc:	movt	r0, #0
     2e0:	bl	0 <puts>
     2e4:	movw	r0, #0
     2e8:	movt	r0, #0
     2ec:	bl	0 <puts>
     2f0:	movw	r0, #0
     2f4:	movt	r0, #0
     2f8:	bl	0 <puts>
     2fc:	movw	r0, #0
     300:	movt	r0, #0
     304:	bl	0 <puts>
     308:	movw	r0, #0
     30c:	movt	r0, #0
     310:	bl	0 <puts>
     314:	movw	r0, #0
     318:	movt	r0, #0
     31c:	bl	0 <puts>
     320:	movw	r0, #0
     324:	movt	r0, #0
     328:	bl	0 <puts>
     32c:	movw	r0, #0
     330:	movt	r0, #0
     334:	bl	0 <puts>
     338:	movw	r0, #0
     33c:	movt	r0, #0
     340:	bl	0 <puts>
     344:	movw	r0, #0
     348:	movt	r0, #0
     34c:	bl	0 <puts>
     350:	movw	r0, #0
     354:	movt	r0, #0
     358:	bl	0 <puts>
     35c:	mov	r0, #10
     360:	bl	0 <putchar>
     364:	movw	r0, #0
     368:	movt	r0, #0
     36c:	bl	0 <puts>
     370:	movw	r0, #0
     374:	movt	r0, #0
     378:	bl	0 <puts>
     37c:	movw	r0, #0
     380:	movt	r0, #0
     384:	bl	0 <puts>
     388:	movw	r0, #0
     38c:	movt	r0, #0
     390:	bl	0 <puts>
     394:	movw	r0, #0
     398:	movt	r0, #0
     39c:	bl	0 <puts>
     3a0:	movw	r0, #0
     3a4:	movt	r0, #0
     3a8:	bl	0 <puts>
     3ac:	movw	r0, #0
     3b0:	movt	r0, #0
     3b4:	bl	0 <puts>
     3b8:	movw	r0, #0
     3bc:	movt	r0, #0
     3c0:	bl	0 <puts>
     3c4:	movw	r0, #0
     3c8:	movt	r0, #0
     3cc:	bl	0 <puts>
     3d0:	movw	r0, #0
     3d4:	movt	r0, #0
     3d8:	bl	0 <puts>
     3dc:	movw	r0, #0
     3e0:	movt	r0, #0
     3e4:	bl	0 <puts>
     3e8:	movw	r0, #0
     3ec:	movt	r0, #0
     3f0:	bl	0 <puts>
     3f4:	movw	r0, #0
     3f8:	movt	r0, #0
     3fc:	bl	0 <puts>
     400:	movw	r0, #0
     404:	movt	r0, #0
     408:	bl	0 <puts>
     40c:	movw	r0, #0
     410:	movt	r0, #0
     414:	bl	0 <puts>
     418:	movw	r0, #0
     41c:	movt	r0, #0
     420:	bl	0 <puts>
     424:	movw	r0, #0
     428:	movt	r0, #0
     42c:	bl	0 <puts>
     430:	movw	r0, #0
     434:	movt	r0, #0
     438:	bl	0 <puts>
     43c:	mov	r0, #10
     440:	bl	0 <putchar>
     444:	movw	r0, #0
     448:	movt	r0, #0
     44c:	bl	0 <puts>
     450:	movw	r0, #0
     454:	movt	r0, #0
     458:	bl	0 <puts>
     45c:	movw	r0, #0
     460:	movt	r0, #0
     464:	bl	0 <puts>
     468:	movw	r0, #0
     46c:	movt	r0, #0
     470:	bl	0 <puts>
     474:	movw	r0, #0
     478:	movt	r0, #0
     47c:	bl	0 <puts>
     480:	movw	r0, #0
     484:	movt	r0, #0
     488:	bl	0 <puts>
     48c:	movw	r0, #0
     490:	movt	r0, #0
     494:	bl	0 <puts>
     498:	movw	r0, #0
     49c:	movt	r0, #0
     4a0:	bl	0 <puts>
     4a4:	movw	r0, #0
     4a8:	movt	r0, #0
     4ac:	bl	0 <puts>
     4b0:	movw	r0, #0
     4b4:	movt	r0, #0
     4b8:	bl	0 <puts>
     4bc:	movw	r0, #0
     4c0:	movt	r0, #0
     4c4:	bl	0 <puts>
     4c8:	movw	r0, #0
     4cc:	movt	r0, #0
     4d0:	bl	0 <puts>
     4d4:	movw	r0, #0
     4d8:	movt	r0, #0
     4dc:	bl	0 <puts>
     4e0:	movw	r0, #0
     4e4:	movt	r0, #0
     4e8:	bl	0 <puts>
     4ec:	movw	r0, #0
     4f0:	movt	r0, #0
     4f4:	bl	0 <puts>
     4f8:	movw	r0, #0
     4fc:	movt	r0, #0
     500:	bl	0 <puts>
     504:	movw	r0, #0
     508:	movt	r0, #0
     50c:	bl	0 <puts>
     510:	movw	r0, #0
     514:	movt	r0, #0
     518:	bl	0 <puts>
     51c:	mov	r0, #10
     520:	bl	0 <putchar>
     524:	movw	r0, #0
     528:	movt	r0, #0
     52c:	bl	0 <puts>
     530:	movw	r0, #0
     534:	movt	r0, #0
     538:	bl	0 <puts>
     53c:	mov	r0, #10
     540:	bl	0 <putchar>
     544:	movw	r0, #0
     548:	movt	r0, #0
     54c:	bl	0 <puts>
     550:	movw	r0, #0
     554:	movt	r0, #0
     558:	bl	0 <puts>
     55c:	mov	r0, #10
     560:	bl	0 <putchar>
     564:	movw	r0, #0
     568:	movt	r0, #0
     56c:	bl	0 <puts>
     570:	movw	r0, #0
     574:	movt	r0, #0
     578:	bl	0 <puts>
     57c:	movw	r0, #0
     580:	movt	r0, #0
     584:	bl	0 <puts>
     588:	movw	r0, #0
     58c:	movt	r0, #0
     590:	bl	0 <puts>
     594:	movw	r0, #0
     598:	movt	r0, #0
     59c:	bl	0 <puts>
     5a0:	movw	r0, #0
     5a4:	movt	r0, #0
     5a8:	bl	0 <puts>
     5ac:	movw	r0, #0
     5b0:	movt	r0, #0
     5b4:	bl	0 <puts>
     5b8:	mov	r0, #10
     5bc:	bl	0 <putchar>
     5c0:	nop	{0}
     5c4:	sub	sp, fp, #4
     5c8:	ldr	fp, [sp]
     5cc:	add	sp, sp, #4
     5d0:	pop	{pc}		; (ldr pc, [sp], #4)

000005d4 <handle_coda_error>:
     5d4:	strd	r4, [sp, #-16]!
     5d8:	str	fp, [sp, #8]
     5dc:	str	lr, [sp, #12]
     5e0:	add	fp, sp, #12
     5e4:	movw	r3, #0
     5e8:	movt	r3, #0
     5ec:	ldr	r4, [r3]
     5f0:	bl	0 <coda_get_errno>
     5f4:	mov	r3, r0
     5f8:	ldr	r3, [r3]
     5fc:	mov	r0, r3
     600:	bl	0 <coda_errno_to_string>
     604:	mov	r3, r0
     608:	mov	r2, r3
     60c:	movw	r1, #0
     610:	movt	r1, #0
     614:	mov	r0, r4
     618:	bl	0 <fprintf>
     61c:	movw	r3, #0
     620:	movt	r3, #0
     624:	ldr	r3, [r3]
     628:	mov	r0, r3
     62c:	bl	0 <fflush>
     630:	mov	r0, #1
     634:	bl	0 <exit>

00000638 <handle_list_run_mode>:
     638:	str	r4, [sp, #-12]!
     63c:	str	fp, [sp, #4]
     640:	str	lr, [sp, #8]
     644:	add	fp, sp, #8
     648:	sub	sp, sp, #28
     64c:	str	r0, [fp, #-32]	; 0xffffffe0
     650:	str	r1, [fp, #-36]	; 0xffffffdc
     654:	movw	r3, #0
     658:	movt	r3, #0
     65c:	mov	r2, #0
     660:	str	r2, [r3]
     664:	movw	r3, #0
     668:	movt	r3, #0
     66c:	mov	r2, #0
     670:	str	r2, [r3, #664]	; 0x298
     674:	movw	r3, #0
     678:	movt	r3, #0
     67c:	mov	r2, #1
     680:	str	r2, [r3]
     684:	movw	r3, #0
     688:	movt	r3, #0
     68c:	mov	r2, #0
     690:	str	r2, [r3]
     694:	mov	r3, #1
     698:	str	r3, [fp, #-16]
     69c:	mov	r3, #1
     6a0:	str	r3, [fp, #-20]	; 0xffffffec
     6a4:	movw	r3, #0
     6a8:	movt	r3, #0
     6ac:	mov	r2, #0
     6b0:	str	r2, [r3]
     6b4:	movw	r3, #0
     6b8:	movt	r3, #0
     6bc:	mov	r2, #0
     6c0:	str	r2, [r3]
     6c4:	movw	r3, #0
     6c8:	movt	r3, #0
     6cc:	mov	r2, #0
     6d0:	str	r2, [r3]
     6d4:	movw	r3, #0
     6d8:	movt	r3, #0
     6dc:	mov	r2, #0
     6e0:	str	r2, [r3]
     6e4:	mov	r3, #0
     6e8:	str	r3, [fp, #-24]	; 0xffffffe8
     6ec:	b	b34 <handle_list_run_mode+0x4fc>
     6f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     6f4:	lsl	r3, r3, #2
     6f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
     6fc:	add	r3, r2, r3
     700:	ldr	r3, [r3]
     704:	movw	r1, #0
     708:	movt	r1, #0
     70c:	mov	r0, r3
     710:	bl	0 <strcmp>
     714:	mov	r3, r0
     718:	cmp	r3, #0
     71c:	beq	750 <handle_list_run_mode+0x118>
     720:	ldr	r3, [fp, #-24]	; 0xffffffe8
     724:	lsl	r3, r3, #2
     728:	ldr	r2, [fp, #-36]	; 0xffffffdc
     72c:	add	r3, r2, r3
     730:	ldr	r3, [r3]
     734:	movw	r1, #0
     738:	movt	r1, #0
     73c:	mov	r0, r3
     740:	bl	0 <strcmp>
     744:	mov	r3, r0
     748:	cmp	r3, #0
     74c:	bne	764 <handle_list_run_mode+0x12c>
     750:	movw	r3, #0
     754:	movt	r3, #0
     758:	mov	r2, #1
     75c:	str	r2, [r3]
     760:	b	b28 <handle_list_run_mode+0x4f0>
     764:	ldr	r3, [fp, #-24]	; 0xffffffe8
     768:	lsl	r3, r3, #2
     76c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     770:	add	r3, r2, r3
     774:	ldr	r3, [r3]
     778:	movw	r1, #0
     77c:	movt	r1, #0
     780:	mov	r0, r3
     784:	bl	0 <strcmp>
     788:	mov	r3, r0
     78c:	cmp	r3, #0
     790:	beq	7c4 <handle_list_run_mode+0x18c>
     794:	ldr	r3, [fp, #-24]	; 0xffffffe8
     798:	lsl	r3, r3, #2
     79c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     7a0:	add	r3, r2, r3
     7a4:	ldr	r3, [r3]
     7a8:	movw	r1, #0
     7ac:	movt	r1, #0
     7b0:	mov	r0, r3
     7b4:	bl	0 <strcmp>
     7b8:	mov	r3, r0
     7bc:	cmp	r3, #0
     7c0:	bne	7d0 <handle_list_run_mode+0x198>
     7c4:	mov	r3, #0
     7c8:	str	r3, [fp, #-20]	; 0xffffffec
     7cc:	b	b28 <handle_list_run_mode+0x4f0>
     7d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7d4:	lsl	r3, r3, #2
     7d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
     7dc:	add	r3, r2, r3
     7e0:	ldr	r3, [r3]
     7e4:	movw	r1, #0
     7e8:	movt	r1, #0
     7ec:	mov	r0, r3
     7f0:	bl	0 <strcmp>
     7f4:	mov	r3, r0
     7f8:	cmp	r3, #0
     7fc:	beq	830 <handle_list_run_mode+0x1f8>
     800:	ldr	r3, [fp, #-24]	; 0xffffffe8
     804:	lsl	r3, r3, #2
     808:	ldr	r2, [fp, #-36]	; 0xffffffdc
     80c:	add	r3, r2, r3
     810:	ldr	r3, [r3]
     814:	movw	r1, #0
     818:	movt	r1, #0
     81c:	mov	r0, r3
     820:	bl	0 <strcmp>
     824:	mov	r3, r0
     828:	cmp	r3, #0
     82c:	bne	8e8 <handle_list_run_mode+0x2b0>
     830:	ldr	r3, [fp, #-24]	; 0xffffffe8
     834:	add	r3, r3, #1
     838:	ldr	r2, [fp, #-32]	; 0xffffffe0
     83c:	cmp	r2, r3
     840:	ble	8e8 <handle_list_run_mode+0x2b0>
     844:	ldr	r3, [fp, #-24]	; 0xffffffe8
     848:	add	r3, r3, #1
     84c:	lsl	r3, r3, #2
     850:	ldr	r2, [fp, #-36]	; 0xffffffdc
     854:	add	r3, r2, r3
     858:	ldr	r3, [r3]
     85c:	ldrb	r3, [r3]
     860:	cmp	r3, #45	; 0x2d
     864:	beq	8e8 <handle_list_run_mode+0x2b0>
     868:	ldr	r3, [fp, #-24]	; 0xffffffe8
     86c:	add	r3, r3, #1
     870:	lsl	r3, r3, #2
     874:	ldr	r2, [fp, #-36]	; 0xffffffdc
     878:	add	r3, r2, r3
     87c:	ldr	r3, [r3]
     880:	mov	r0, r3
     884:	bl	0 <codadump_filter_create>
     888:	mov	r2, r0
     88c:	movw	r3, #0
     890:	movt	r3, #0
     894:	str	r2, [r3, #664]	; 0x298
     898:	movw	r3, #0
     89c:	movt	r3, #0
     8a0:	ldr	r3, [r3, #664]	; 0x298
     8a4:	cmp	r3, #0
     8a8:	bne	8d8 <handle_list_run_mode+0x2a0>
     8ac:	movw	r3, #0
     8b0:	movt	r3, #0
     8b4:	ldr	r3, [r3]
     8b8:	mov	r2, #40	; 0x28
     8bc:	mov	r1, #1
     8c0:	movw	r0, #0
     8c4:	movt	r0, #0
     8c8:	bl	0 <fwrite>
     8cc:	bl	4c <print_help>
     8d0:	mov	r0, #1
     8d4:	bl	0 <exit>
     8d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     8dc:	add	r3, r3, #1
     8e0:	str	r3, [fp, #-24]	; 0xffffffe8
     8e4:	b	b28 <handle_list_run_mode+0x4f0>
     8e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     8ec:	lsl	r3, r3, #2
     8f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     8f4:	add	r3, r2, r3
     8f8:	ldr	r3, [r3]
     8fc:	movw	r1, #0
     900:	movt	r1, #0
     904:	mov	r0, r3
     908:	bl	0 <strcmp>
     90c:	mov	r3, r0
     910:	cmp	r3, #0
     914:	beq	948 <handle_list_run_mode+0x310>
     918:	ldr	r3, [fp, #-24]	; 0xffffffe8
     91c:	lsl	r3, r3, #2
     920:	ldr	r2, [fp, #-36]	; 0xffffffdc
     924:	add	r3, r2, r3
     928:	ldr	r3, [r3]
     92c:	movw	r1, #0
     930:	movt	r1, #0
     934:	mov	r0, r3
     938:	bl	0 <strcmp>
     93c:	mov	r3, r0
     940:	cmp	r3, #0
     944:	bne	95c <handle_list_run_mode+0x324>
     948:	movw	r3, #0
     94c:	movt	r3, #0
     950:	mov	r2, #1
     954:	str	r2, [r3]
     958:	b	b28 <handle_list_run_mode+0x4f0>
     95c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     960:	lsl	r3, r3, #2
     964:	ldr	r2, [fp, #-36]	; 0xffffffdc
     968:	add	r3, r2, r3
     96c:	ldr	r3, [r3]
     970:	movw	r1, #0
     974:	movt	r1, #0
     978:	mov	r0, r3
     97c:	bl	0 <strcmp>
     980:	mov	r3, r0
     984:	cmp	r3, #0
     988:	beq	9bc <handle_list_run_mode+0x384>
     98c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     990:	lsl	r3, r3, #2
     994:	ldr	r2, [fp, #-36]	; 0xffffffdc
     998:	add	r3, r2, r3
     99c:	ldr	r3, [r3]
     9a0:	movw	r1, #0
     9a4:	movt	r1, #0
     9a8:	mov	r0, r3
     9ac:	bl	0 <strcmp>
     9b0:	mov	r3, r0
     9b4:	cmp	r3, #0
     9b8:	bne	9d0 <handle_list_run_mode+0x398>
     9bc:	movw	r3, #0
     9c0:	movt	r3, #0
     9c4:	mov	r2, #1
     9c8:	str	r2, [r3]
     9cc:	b	b28 <handle_list_run_mode+0x4f0>
     9d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9d4:	lsl	r3, r3, #2
     9d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
     9dc:	add	r3, r2, r3
     9e0:	ldr	r3, [r3]
     9e4:	movw	r1, #0
     9e8:	movt	r1, #0
     9ec:	mov	r0, r3
     9f0:	bl	0 <strcmp>
     9f4:	mov	r3, r0
     9f8:	cmp	r3, #0
     9fc:	bne	a14 <handle_list_run_mode+0x3dc>
     a00:	movw	r3, #0
     a04:	movt	r3, #0
     a08:	mov	r2, #1
     a0c:	str	r2, [r3]
     a10:	b	b28 <handle_list_run_mode+0x4f0>
     a14:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a18:	lsl	r3, r3, #2
     a1c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     a20:	add	r3, r2, r3
     a24:	ldr	r3, [r3]
     a28:	movw	r1, #0
     a2c:	movt	r1, #0
     a30:	mov	r0, r3
     a34:	bl	0 <strcmp>
     a38:	mov	r3, r0
     a3c:	cmp	r3, #0
     a40:	bne	a68 <handle_list_run_mode+0x430>
     a44:	movw	r3, #0
     a48:	movt	r3, #0
     a4c:	mov	r2, #1
     a50:	str	r2, [r3]
     a54:	movw	r3, #0
     a58:	movt	r3, #0
     a5c:	mov	r2, #1
     a60:	str	r2, [r3]
     a64:	b	b28 <handle_list_run_mode+0x4f0>
     a68:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a6c:	lsl	r3, r3, #2
     a70:	ldr	r2, [fp, #-36]	; 0xffffffdc
     a74:	add	r3, r2, r3
     a78:	ldr	r3, [r3]
     a7c:	movw	r1, #0
     a80:	movt	r1, #0
     a84:	mov	r0, r3
     a88:	bl	0 <strcmp>
     a8c:	mov	r3, r0
     a90:	cmp	r3, #0
     a94:	bne	aa4 <handle_list_run_mode+0x46c>
     a98:	mov	r3, #0
     a9c:	str	r3, [fp, #-16]
     aa0:	b	b28 <handle_list_run_mode+0x4f0>
     aa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     aa8:	sub	r3, r3, #1
     aac:	ldr	r2, [fp, #-24]	; 0xffffffe8
     ab0:	cmp	r2, r3
     ab4:	bne	afc <handle_list_run_mode+0x4c4>
     ab8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     abc:	lsl	r3, r3, #2
     ac0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     ac4:	add	r3, r2, r3
     ac8:	ldr	r3, [r3]
     acc:	ldrb	r3, [r3]
     ad0:	cmp	r3, #45	; 0x2d
     ad4:	beq	afc <handle_list_run_mode+0x4c4>
     ad8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     adc:	lsl	r3, r3, #2
     ae0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     ae4:	add	r3, r2, r3
     ae8:	ldr	r2, [r3]
     aec:	movw	r3, #0
     af0:	movt	r3, #0
     af4:	str	r2, [r3]
     af8:	b	b28 <handle_list_run_mode+0x4f0>
     afc:	movw	r3, #0
     b00:	movt	r3, #0
     b04:	ldr	r3, [r3]
     b08:	mov	r2, #25
     b0c:	mov	r1, #1
     b10:	movw	r0, #0
     b14:	movt	r0, #0
     b18:	bl	0 <fwrite>
     b1c:	bl	4c <print_help>
     b20:	mov	r0, #1
     b24:	bl	0 <exit>
     b28:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b2c:	add	r3, r3, #1
     b30:	str	r3, [fp, #-24]	; 0xffffffe8
     b34:	ldr	r2, [fp, #-24]	; 0xffffffe8
     b38:	ldr	r3, [fp, #-32]	; 0xffffffe0
     b3c:	cmp	r2, r3
     b40:	blt	6f0 <handle_list_run_mode+0xb8>
     b44:	movw	r3, #0
     b48:	movt	r3, #0
     b4c:	ldr	r3, [r3]
     b50:	cmp	r3, #0
     b54:	beq	b70 <handle_list_run_mode+0x538>
     b58:	movw	r3, #0
     b5c:	movt	r3, #0
     b60:	ldr	r3, [r3]
     b64:	ldrb	r3, [r3]
     b68:	cmp	r3, #0
     b6c:	bne	b9c <handle_list_run_mode+0x564>
     b70:	movw	r3, #0
     b74:	movt	r3, #0
     b78:	ldr	r3, [r3]
     b7c:	mov	r2, #25
     b80:	mov	r1, #1
     b84:	movw	r0, #0
     b88:	movt	r0, #0
     b8c:	bl	0 <fwrite>
     b90:	bl	4c <print_help>
     b94:	mov	r0, #1
     b98:	bl	0 <exit>
     b9c:	bl	0 <coda_init>
     ba0:	mov	r3, r0
     ba4:	cmp	r3, #0
     ba8:	beq	bec <handle_list_run_mode+0x5b4>
     bac:	movw	r3, #0
     bb0:	movt	r3, #0
     bb4:	ldr	r4, [r3]
     bb8:	bl	0 <coda_get_errno>
     bbc:	mov	r3, r0
     bc0:	ldr	r3, [r3]
     bc4:	mov	r0, r3
     bc8:	bl	0 <coda_errno_to_string>
     bcc:	mov	r3, r0
     bd0:	mov	r2, r3
     bd4:	movw	r1, #0
     bd8:	movt	r1, #0
     bdc:	mov	r0, r4
     be0:	bl	0 <fprintf>
     be4:	mov	r0, #1
     be8:	bl	0 <exit>
     bec:	ldr	r3, [fp, #-16]
     bf0:	cmp	r3, #0
     bf4:	moveq	r3, #1
     bf8:	movne	r3, #0
     bfc:	uxtb	r3, r3
     c00:	mov	r0, r3
     c04:	bl	0 <coda_set_option_bypass_special_types>
     c08:	mov	r0, #0
     c0c:	bl	0 <coda_set_option_perform_boundary_checks>
     c10:	ldr	r0, [fp, #-20]	; 0xffffffec
     c14:	bl	0 <coda_set_option_perform_conversions>
     c18:	bl	0 <traverse_info_init>
     c1c:	bl	0 <dim_info_init>
     c20:	bl	0 <traverse_product>
     c24:	bl	0 <dim_info_done>
     c28:	bl	0 <traverse_info_done>
     c2c:	bl	0 <coda_done>
     c30:	nop	{0}
     c34:	sub	sp, fp, #8
     c38:	ldr	r4, [sp]
     c3c:	ldr	fp, [sp, #4]
     c40:	add	sp, sp, #8
     c44:	pop	{pc}		; (ldr pc, [sp], #4)

00000c48 <handle_ascii_run_mode>:
     c48:	str	r4, [sp, #-12]!
     c4c:	str	fp, [sp, #4]
     c50:	str	lr, [sp, #8]
     c54:	add	fp, sp, #8
     c58:	sub	sp, sp, #28
     c5c:	str	r0, [fp, #-32]	; 0xffffffe0
     c60:	str	r1, [fp, #-36]	; 0xffffffdc
     c64:	movw	r3, #0
     c68:	movt	r3, #0
     c6c:	mov	r2, #0
     c70:	str	r2, [r3]
     c74:	movw	r3, #0
     c78:	movt	r3, #0
     c7c:	mov	r2, #0
     c80:	str	r2, [r3, #664]	; 0x298
     c84:	movw	r3, #0
     c88:	movt	r3, #0
     c8c:	mov	r2, #0
     c90:	str	r2, [r3]
     c94:	movw	r3, #0
     c98:	movt	r3, #0
     c9c:	movw	r2, #0
     ca0:	movt	r2, #0
     ca4:	str	r2, [r3]
     ca8:	movw	r3, #0
     cac:	movt	r3, #0
     cb0:	ldr	r2, [r3]
     cb4:	movw	r3, #0
     cb8:	movt	r3, #0
     cbc:	str	r2, [r3]
     cc0:	movw	r3, #0
     cc4:	movt	r3, #0
     cc8:	mov	r2, #1
     ccc:	str	r2, [r3]
     cd0:	movw	r3, #0
     cd4:	movt	r3, #0
     cd8:	mov	r2, #1
     cdc:	str	r2, [r3]
     ce0:	mov	r3, #1
     ce4:	str	r3, [fp, #-16]
     ce8:	mov	r3, #1
     cec:	str	r3, [fp, #-20]	; 0xffffffec
     cf0:	movw	r3, #0
     cf4:	movt	r3, #0
     cf8:	mov	r2, #0
     cfc:	str	r2, [r3]
     d00:	movw	r3, #0
     d04:	movt	r3, #0
     d08:	mov	r2, #0
     d0c:	str	r2, [r3]
     d10:	movw	r3, #0
     d14:	movt	r3, #0
     d18:	mov	r2, #0
     d1c:	str	r2, [r3]
     d20:	movw	r3, #0
     d24:	movt	r3, #0
     d28:	mov	r2, #0
     d2c:	str	r2, [r3]
     d30:	mov	r3, #0
     d34:	str	r3, [fp, #-24]	; 0xffffffe8
     d38:	b	12f4 <handle_ascii_run_mode+0x6ac>
     d3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d40:	lsl	r3, r3, #2
     d44:	ldr	r2, [fp, #-36]	; 0xffffffdc
     d48:	add	r3, r2, r3
     d4c:	ldr	r3, [r3]
     d50:	movw	r1, #0
     d54:	movt	r1, #0
     d58:	mov	r0, r3
     d5c:	bl	0 <strcmp>
     d60:	mov	r3, r0
     d64:	cmp	r3, #0
     d68:	beq	d9c <handle_ascii_run_mode+0x154>
     d6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d70:	lsl	r3, r3, #2
     d74:	ldr	r2, [fp, #-36]	; 0xffffffdc
     d78:	add	r3, r2, r3
     d7c:	ldr	r3, [r3]
     d80:	movw	r1, #0
     d84:	movt	r1, #0
     d88:	mov	r0, r3
     d8c:	bl	0 <strcmp>
     d90:	mov	r3, r0
     d94:	cmp	r3, #0
     d98:	bne	da8 <handle_ascii_run_mode+0x160>
     d9c:	mov	r3, #0
     da0:	str	r3, [fp, #-20]	; 0xffffffec
     da4:	b	12e8 <handle_ascii_run_mode+0x6a0>
     da8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     dac:	lsl	r3, r3, #2
     db0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     db4:	add	r3, r2, r3
     db8:	ldr	r3, [r3]
     dbc:	movw	r1, #0
     dc0:	movt	r1, #0
     dc4:	mov	r0, r3
     dc8:	bl	0 <strcmp>
     dcc:	mov	r3, r0
     dd0:	cmp	r3, #0
     dd4:	beq	e08 <handle_ascii_run_mode+0x1c0>
     dd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ddc:	lsl	r3, r3, #2
     de0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     de4:	add	r3, r2, r3
     de8:	ldr	r3, [r3]
     dec:	movw	r1, #0
     df0:	movt	r1, #0
     df4:	mov	r0, r3
     df8:	bl	0 <strcmp>
     dfc:	mov	r3, r0
     e00:	cmp	r3, #0
     e04:	bne	ec0 <handle_ascii_run_mode+0x278>
     e08:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e0c:	add	r3, r3, #1
     e10:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e14:	cmp	r2, r3
     e18:	ble	ec0 <handle_ascii_run_mode+0x278>
     e1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e20:	add	r3, r3, #1
     e24:	lsl	r3, r3, #2
     e28:	ldr	r2, [fp, #-36]	; 0xffffffdc
     e2c:	add	r3, r2, r3
     e30:	ldr	r3, [r3]
     e34:	ldrb	r3, [r3]
     e38:	cmp	r3, #45	; 0x2d
     e3c:	beq	ec0 <handle_ascii_run_mode+0x278>
     e40:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e44:	add	r3, r3, #1
     e48:	lsl	r3, r3, #2
     e4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     e50:	add	r3, r2, r3
     e54:	ldr	r3, [r3]
     e58:	mov	r0, r3
     e5c:	bl	0 <codadump_filter_create>
     e60:	mov	r2, r0
     e64:	movw	r3, #0
     e68:	movt	r3, #0
     e6c:	str	r2, [r3, #664]	; 0x298
     e70:	movw	r3, #0
     e74:	movt	r3, #0
     e78:	ldr	r3, [r3, #664]	; 0x298
     e7c:	cmp	r3, #0
     e80:	bne	eb0 <handle_ascii_run_mode+0x268>
     e84:	movw	r3, #0
     e88:	movt	r3, #0
     e8c:	ldr	r3, [r3]
     e90:	mov	r2, #40	; 0x28
     e94:	mov	r1, #1
     e98:	movw	r0, #0
     e9c:	movt	r0, #0
     ea0:	bl	0 <fwrite>
     ea4:	bl	4c <print_help>
     ea8:	mov	r0, #1
     eac:	bl	0 <exit>
     eb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     eb4:	add	r3, r3, #1
     eb8:	str	r3, [fp, #-24]	; 0xffffffe8
     ebc:	b	12e8 <handle_ascii_run_mode+0x6a0>
     ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ec4:	lsl	r3, r3, #2
     ec8:	ldr	r2, [fp, #-36]	; 0xffffffdc
     ecc:	add	r3, r2, r3
     ed0:	ldr	r3, [r3]
     ed4:	movw	r1, #0
     ed8:	movt	r1, #0
     edc:	mov	r0, r3
     ee0:	bl	0 <strcmp>
     ee4:	mov	r3, r0
     ee8:	cmp	r3, #0
     eec:	beq	f20 <handle_ascii_run_mode+0x2d8>
     ef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ef4:	lsl	r3, r3, #2
     ef8:	ldr	r2, [fp, #-36]	; 0xffffffdc
     efc:	add	r3, r2, r3
     f00:	ldr	r3, [r3]
     f04:	movw	r1, #0
     f08:	movt	r1, #0
     f0c:	mov	r0, r3
     f10:	bl	0 <strcmp>
     f14:	mov	r3, r0
     f18:	cmp	r3, #0
     f1c:	bne	f34 <handle_ascii_run_mode+0x2ec>
     f20:	movw	r3, #0
     f24:	movt	r3, #0
     f28:	mov	r2, #1
     f2c:	str	r2, [r3]
     f30:	b	12e8 <handle_ascii_run_mode+0x6a0>
     f34:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f38:	lsl	r3, r3, #2
     f3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     f40:	add	r3, r2, r3
     f44:	ldr	r3, [r3]
     f48:	movw	r1, #0
     f4c:	movt	r1, #0
     f50:	mov	r0, r3
     f54:	bl	0 <strcmp>
     f58:	mov	r3, r0
     f5c:	cmp	r3, #0
     f60:	beq	f94 <handle_ascii_run_mode+0x34c>
     f64:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f68:	lsl	r3, r3, #2
     f6c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     f70:	add	r3, r2, r3
     f74:	ldr	r3, [r3]
     f78:	movw	r1, #0
     f7c:	movt	r1, #0
     f80:	mov	r0, r3
     f84:	bl	0 <strcmp>
     f88:	mov	r3, r0
     f8c:	cmp	r3, #0
     f90:	bne	fa8 <handle_ascii_run_mode+0x360>
     f94:	movw	r3, #0
     f98:	movt	r3, #0
     f9c:	mov	r2, #1
     fa0:	str	r2, [r3]
     fa4:	b	12e8 <handle_ascii_run_mode+0x6a0>
     fa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fac:	lsl	r3, r3, #2
     fb0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     fb4:	add	r3, r2, r3
     fb8:	ldr	r3, [r3]
     fbc:	movw	r1, #0
     fc0:	movt	r1, #0
     fc4:	mov	r0, r3
     fc8:	bl	0 <strcmp>
     fcc:	mov	r3, r0
     fd0:	cmp	r3, #0
     fd4:	beq	1008 <handle_ascii_run_mode+0x3c0>
     fd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fdc:	lsl	r3, r3, #2
     fe0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     fe4:	add	r3, r2, r3
     fe8:	ldr	r3, [r3]
     fec:	movw	r1, #0
     ff0:	movt	r1, #0
     ff4:	mov	r0, r3
     ff8:	bl	0 <strcmp>
     ffc:	mov	r3, r0
    1000:	cmp	r3, #0
    1004:	bne	1074 <handle_ascii_run_mode+0x42c>
    1008:	ldr	r3, [fp, #-24]	; 0xffffffe8
    100c:	add	r3, r3, #1
    1010:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1014:	cmp	r2, r3
    1018:	ble	1074 <handle_ascii_run_mode+0x42c>
    101c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1020:	add	r3, r3, #1
    1024:	lsl	r3, r3, #2
    1028:	ldr	r2, [fp, #-36]	; 0xffffffdc
    102c:	add	r3, r2, r3
    1030:	ldr	r3, [r3]
    1034:	ldrb	r3, [r3]
    1038:	cmp	r3, #45	; 0x2d
    103c:	beq	1074 <handle_ascii_run_mode+0x42c>
    1040:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1044:	add	r3, r3, #1
    1048:	lsl	r3, r3, #2
    104c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1050:	add	r3, r2, r3
    1054:	ldr	r2, [r3]
    1058:	movw	r3, #0
    105c:	movt	r3, #0
    1060:	str	r2, [r3]
    1064:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1068:	add	r3, r3, #1
    106c:	str	r3, [fp, #-24]	; 0xffffffe8
    1070:	b	12e8 <handle_ascii_run_mode+0x6a0>
    1074:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1078:	lsl	r3, r3, #2
    107c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1080:	add	r3, r2, r3
    1084:	ldr	r3, [r3]
    1088:	movw	r1, #0
    108c:	movt	r1, #0
    1090:	mov	r0, r3
    1094:	bl	0 <strcmp>
    1098:	mov	r3, r0
    109c:	cmp	r3, #0
    10a0:	beq	10d4 <handle_ascii_run_mode+0x48c>
    10a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10a8:	lsl	r3, r3, #2
    10ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
    10b0:	add	r3, r2, r3
    10b4:	ldr	r3, [r3]
    10b8:	movw	r1, #0
    10bc:	movt	r1, #0
    10c0:	mov	r0, r3
    10c4:	bl	0 <strcmp>
    10c8:	mov	r3, r0
    10cc:	cmp	r3, #0
    10d0:	bne	10e8 <handle_ascii_run_mode+0x4a0>
    10d4:	movw	r3, #0
    10d8:	movt	r3, #0
    10dc:	mov	r2, #1
    10e0:	str	r2, [r3]
    10e4:	b	12e8 <handle_ascii_run_mode+0x6a0>
    10e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10ec:	lsl	r3, r3, #2
    10f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    10f4:	add	r3, r2, r3
    10f8:	ldr	r3, [r3]
    10fc:	movw	r1, #0
    1100:	movt	r1, #0
    1104:	mov	r0, r3
    1108:	bl	0 <strcmp>
    110c:	mov	r3, r0
    1110:	cmp	r3, #0
    1114:	beq	1148 <handle_ascii_run_mode+0x500>
    1118:	ldr	r3, [fp, #-24]	; 0xffffffe8
    111c:	lsl	r3, r3, #2
    1120:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1124:	add	r3, r2, r3
    1128:	ldr	r3, [r3]
    112c:	movw	r1, #0
    1130:	movt	r1, #0
    1134:	mov	r0, r3
    1138:	bl	0 <strcmp>
    113c:	mov	r3, r0
    1140:	cmp	r3, #0
    1144:	bne	11b4 <handle_ascii_run_mode+0x56c>
    1148:	ldr	r3, [fp, #-24]	; 0xffffffe8
    114c:	add	r3, r3, #1
    1150:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1154:	cmp	r2, r3
    1158:	ble	11b4 <handle_ascii_run_mode+0x56c>
    115c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1160:	add	r3, r3, #1
    1164:	lsl	r3, r3, #2
    1168:	ldr	r2, [fp, #-36]	; 0xffffffdc
    116c:	add	r3, r2, r3
    1170:	ldr	r3, [r3]
    1174:	ldrb	r3, [r3]
    1178:	cmp	r3, #45	; 0x2d
    117c:	beq	11b4 <handle_ascii_run_mode+0x56c>
    1180:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1184:	add	r3, r3, #1
    1188:	lsl	r3, r3, #2
    118c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1190:	add	r3, r2, r3
    1194:	ldr	r2, [r3]
    1198:	movw	r3, #0
    119c:	movt	r3, #0
    11a0:	str	r2, [r3]
    11a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11a8:	add	r3, r3, #1
    11ac:	str	r3, [fp, #-24]	; 0xffffffe8
    11b0:	b	12e8 <handle_ascii_run_mode+0x6a0>
    11b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11b8:	lsl	r3, r3, #2
    11bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    11c0:	add	r3, r2, r3
    11c4:	ldr	r3, [r3]
    11c8:	movw	r1, #0
    11cc:	movt	r1, #0
    11d0:	mov	r0, r3
    11d4:	bl	0 <strcmp>
    11d8:	mov	r3, r0
    11dc:	cmp	r3, #0
    11e0:	beq	1214 <handle_ascii_run_mode+0x5cc>
    11e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11e8:	lsl	r3, r3, #2
    11ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
    11f0:	add	r3, r2, r3
    11f4:	ldr	r3, [r3]
    11f8:	movw	r1, #0
    11fc:	movt	r1, #0
    1200:	mov	r0, r3
    1204:	bl	0 <strcmp>
    1208:	mov	r3, r0
    120c:	cmp	r3, #0
    1210:	bne	1228 <handle_ascii_run_mode+0x5e0>
    1214:	movw	r3, #0
    1218:	movt	r3, #0
    121c:	mov	r2, #1
    1220:	str	r2, [r3]
    1224:	b	12e8 <handle_ascii_run_mode+0x6a0>
    1228:	ldr	r3, [fp, #-24]	; 0xffffffe8
    122c:	lsl	r3, r3, #2
    1230:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1234:	add	r3, r2, r3
    1238:	ldr	r3, [r3]
    123c:	movw	r1, #0
    1240:	movt	r1, #0
    1244:	mov	r0, r3
    1248:	bl	0 <strcmp>
    124c:	mov	r3, r0
    1250:	cmp	r3, #0
    1254:	bne	1264 <handle_ascii_run_mode+0x61c>
    1258:	mov	r3, #0
    125c:	str	r3, [fp, #-16]
    1260:	b	12e8 <handle_ascii_run_mode+0x6a0>
    1264:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1268:	sub	r3, r3, #1
    126c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1270:	cmp	r2, r3
    1274:	bne	12bc <handle_ascii_run_mode+0x674>
    1278:	ldr	r3, [fp, #-24]	; 0xffffffe8
    127c:	lsl	r3, r3, #2
    1280:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1284:	add	r3, r2, r3
    1288:	ldr	r3, [r3]
    128c:	ldrb	r3, [r3]
    1290:	cmp	r3, #45	; 0x2d
    1294:	beq	12bc <handle_ascii_run_mode+0x674>
    1298:	ldr	r3, [fp, #-24]	; 0xffffffe8
    129c:	lsl	r3, r3, #2
    12a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    12a4:	add	r3, r2, r3
    12a8:	ldr	r2, [r3]
    12ac:	movw	r3, #0
    12b0:	movt	r3, #0
    12b4:	str	r2, [r3]
    12b8:	b	12e8 <handle_ascii_run_mode+0x6a0>
    12bc:	movw	r3, #0
    12c0:	movt	r3, #0
    12c4:	ldr	r3, [r3]
    12c8:	mov	r2, #25
    12cc:	mov	r1, #1
    12d0:	movw	r0, #0
    12d4:	movt	r0, #0
    12d8:	bl	0 <fwrite>
    12dc:	bl	4c <print_help>
    12e0:	mov	r0, #1
    12e4:	bl	0 <exit>
    12e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12ec:	add	r3, r3, #1
    12f0:	str	r3, [fp, #-24]	; 0xffffffe8
    12f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    12f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    12fc:	cmp	r2, r3
    1300:	blt	d3c <handle_ascii_run_mode+0xf4>
    1304:	movw	r3, #0
    1308:	movt	r3, #0
    130c:	ldr	r3, [r3]
    1310:	cmp	r3, #0
    1314:	beq	1330 <handle_ascii_run_mode+0x6e8>
    1318:	movw	r3, #0
    131c:	movt	r3, #0
    1320:	ldr	r3, [r3]
    1324:	ldrb	r3, [r3]
    1328:	cmp	r3, #0
    132c:	bne	135c <handle_ascii_run_mode+0x714>
    1330:	movw	r3, #0
    1334:	movt	r3, #0
    1338:	ldr	r3, [r3]
    133c:	mov	r2, #25
    1340:	mov	r1, #1
    1344:	movw	r0, #0
    1348:	movt	r0, #0
    134c:	bl	0 <fwrite>
    1350:	bl	4c <print_help>
    1354:	mov	r0, #1
    1358:	bl	0 <exit>
    135c:	bl	0 <coda_init>
    1360:	mov	r3, r0
    1364:	cmp	r3, #0
    1368:	beq	13ac <handle_ascii_run_mode+0x764>
    136c:	movw	r3, #0
    1370:	movt	r3, #0
    1374:	ldr	r4, [r3]
    1378:	bl	0 <coda_get_errno>
    137c:	mov	r3, r0
    1380:	ldr	r3, [r3]
    1384:	mov	r0, r3
    1388:	bl	0 <coda_errno_to_string>
    138c:	mov	r3, r0
    1390:	mov	r2, r3
    1394:	movw	r1, #0
    1398:	movt	r1, #0
    139c:	mov	r0, r4
    13a0:	bl	0 <fprintf>
    13a4:	mov	r0, #1
    13a8:	bl	0 <exit>
    13ac:	ldr	r3, [fp, #-16]
    13b0:	cmp	r3, #0
    13b4:	moveq	r3, #1
    13b8:	movne	r3, #0
    13bc:	uxtb	r3, r3
    13c0:	mov	r0, r3
    13c4:	bl	0 <coda_set_option_bypass_special_types>
    13c8:	mov	r0, #0
    13cc:	bl	0 <coda_set_option_perform_boundary_checks>
    13d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    13d4:	bl	0 <coda_set_option_perform_conversions>
    13d8:	bl	0 <traverse_info_init>
    13dc:	bl	0 <dim_info_init>
    13e0:	movw	r3, #0
    13e4:	movt	r3, #0
    13e8:	ldr	r3, [r3]
    13ec:	cmp	r3, #0
    13f0:	beq	1464 <handle_ascii_run_mode+0x81c>
    13f4:	movw	r3, #0
    13f8:	movt	r3, #0
    13fc:	ldr	r3, [r3]
    1400:	movw	r1, #0
    1404:	movt	r1, #0
    1408:	mov	r0, r3
    140c:	bl	0 <fopen>
    1410:	mov	r2, r0
    1414:	movw	r3, #0
    1418:	movt	r3, #0
    141c:	str	r2, [r3]
    1420:	movw	r3, #0
    1424:	movt	r3, #0
    1428:	ldr	r3, [r3]
    142c:	cmp	r3, #0
    1430:	bne	1464 <handle_ascii_run_mode+0x81c>
    1434:	movw	r3, #0
    1438:	movt	r3, #0
    143c:	ldr	r0, [r3]
    1440:	movw	r3, #0
    1444:	movt	r3, #0
    1448:	ldr	r3, [r3]
    144c:	mov	r2, r3
    1450:	movw	r1, #0
    1454:	movt	r1, #0
    1458:	bl	0 <fprintf>
    145c:	mov	r0, #1
    1460:	bl	0 <exit>
    1464:	bl	0 <traverse_product>
    1468:	movw	r3, #0
    146c:	movt	r3, #0
    1470:	ldr	r3, [r3]
    1474:	cmp	r3, #0
    1478:	beq	1490 <handle_ascii_run_mode+0x848>
    147c:	movw	r3, #0
    1480:	movt	r3, #0
    1484:	ldr	r3, [r3]
    1488:	mov	r0, r3
    148c:	bl	0 <fclose>
    1490:	bl	0 <dim_info_done>
    1494:	bl	0 <traverse_info_done>
    1498:	bl	0 <coda_done>
    149c:	nop	{0}
    14a0:	sub	sp, fp, #8
    14a4:	ldr	r4, [sp]
    14a8:	ldr	fp, [sp, #4]
    14ac:	add	sp, sp, #8
    14b0:	pop	{pc}		; (ldr pc, [sp], #4)

000014b4 <handle_json_run_mode>:
    14b4:	str	r4, [sp, #-12]!
    14b8:	str	fp, [sp, #4]
    14bc:	str	lr, [sp, #8]
    14c0:	add	fp, sp, #8
    14c4:	sub	sp, sp, #28
    14c8:	str	r0, [fp, #-32]	; 0xffffffe0
    14cc:	str	r1, [fp, #-36]	; 0xffffffdc
    14d0:	movw	r3, #0
    14d4:	movt	r3, #0
    14d8:	mov	r2, #0
    14dc:	str	r2, [r3]
    14e0:	movw	r3, #0
    14e4:	movt	r3, #0
    14e8:	mov	r2, #0
    14ec:	str	r2, [r3]
    14f0:	movw	r3, #0
    14f4:	movt	r3, #0
    14f8:	mov	r2, #0
    14fc:	str	r2, [r3]
    1500:	movw	r3, #0
    1504:	movt	r3, #0
    1508:	ldr	r2, [r3]
    150c:	movw	r3, #0
    1510:	movt	r3, #0
    1514:	str	r2, [r3]
    1518:	mov	r3, #1
    151c:	str	r3, [fp, #-16]
    1520:	mov	r3, #1
    1524:	str	r3, [fp, #-20]	; 0xffffffec
    1528:	mov	r3, #0
    152c:	str	r3, [fp, #-24]	; 0xffffffe8
    1530:	mov	r3, #0
    1534:	str	r3, [fp, #-28]	; 0xffffffe4
    1538:	b	1878 <handle_json_run_mode+0x3c4>
    153c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1540:	lsl	r3, r3, #2
    1544:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1548:	add	r3, r2, r3
    154c:	ldr	r3, [r3]
    1550:	movw	r1, #0
    1554:	movt	r1, #0
    1558:	mov	r0, r3
    155c:	bl	0 <strcmp>
    1560:	mov	r3, r0
    1564:	cmp	r3, #0
    1568:	beq	159c <handle_json_run_mode+0xe8>
    156c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1570:	lsl	r3, r3, #2
    1574:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1578:	add	r3, r2, r3
    157c:	ldr	r3, [r3]
    1580:	movw	r1, #0
    1584:	movt	r1, #0
    1588:	mov	r0, r3
    158c:	bl	0 <strcmp>
    1590:	mov	r3, r0
    1594:	cmp	r3, #0
    1598:	bne	15a8 <handle_json_run_mode+0xf4>
    159c:	mov	r3, #1
    15a0:	str	r3, [fp, #-24]	; 0xffffffe8
    15a4:	b	186c <handle_json_run_mode+0x3b8>
    15a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    15ac:	lsl	r3, r3, #2
    15b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    15b4:	add	r3, r2, r3
    15b8:	ldr	r3, [r3]
    15bc:	movw	r1, #0
    15c0:	movt	r1, #0
    15c4:	mov	r0, r3
    15c8:	bl	0 <strcmp>
    15cc:	mov	r3, r0
    15d0:	cmp	r3, #0
    15d4:	beq	1608 <handle_json_run_mode+0x154>
    15d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    15dc:	lsl	r3, r3, #2
    15e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    15e4:	add	r3, r2, r3
    15e8:	ldr	r3, [r3]
    15ec:	movw	r1, #0
    15f0:	movt	r1, #0
    15f4:	mov	r0, r3
    15f8:	bl	0 <strcmp>
    15fc:	mov	r3, r0
    1600:	cmp	r3, #0
    1604:	bne	1614 <handle_json_run_mode+0x160>
    1608:	mov	r3, #0
    160c:	str	r3, [fp, #-20]	; 0xffffffec
    1610:	b	186c <handle_json_run_mode+0x3b8>
    1614:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1618:	lsl	r3, r3, #2
    161c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1620:	add	r3, r2, r3
    1624:	ldr	r3, [r3]
    1628:	movw	r1, #0
    162c:	movt	r1, #0
    1630:	mov	r0, r3
    1634:	bl	0 <strcmp>
    1638:	mov	r3, r0
    163c:	cmp	r3, #0
    1640:	beq	1674 <handle_json_run_mode+0x1c0>
    1644:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1648:	lsl	r3, r3, #2
    164c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1650:	add	r3, r2, r3
    1654:	ldr	r3, [r3]
    1658:	movw	r1, #0
    165c:	movt	r1, #0
    1660:	mov	r0, r3
    1664:	bl	0 <strcmp>
    1668:	mov	r3, r0
    166c:	cmp	r3, #0
    1670:	bne	16e0 <handle_json_run_mode+0x22c>
    1674:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1678:	add	r3, r3, #1
    167c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1680:	cmp	r2, r3
    1684:	ble	16e0 <handle_json_run_mode+0x22c>
    1688:	ldr	r3, [fp, #-28]	; 0xffffffe4
    168c:	add	r3, r3, #1
    1690:	lsl	r3, r3, #2
    1694:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1698:	add	r3, r2, r3
    169c:	ldr	r3, [r3]
    16a0:	ldrb	r3, [r3]
    16a4:	cmp	r3, #45	; 0x2d
    16a8:	beq	16e0 <handle_json_run_mode+0x22c>
    16ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
    16b0:	add	r3, r3, #1
    16b4:	lsl	r3, r3, #2
    16b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    16bc:	add	r3, r2, r3
    16c0:	ldr	r2, [r3]
    16c4:	movw	r3, #0
    16c8:	movt	r3, #0
    16cc:	str	r2, [r3]
    16d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    16d4:	add	r3, r3, #1
    16d8:	str	r3, [fp, #-28]	; 0xffffffe4
    16dc:	b	186c <handle_json_run_mode+0x3b8>
    16e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    16e4:	lsl	r3, r3, #2
    16e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    16ec:	add	r3, r2, r3
    16f0:	ldr	r3, [r3]
    16f4:	movw	r1, #0
    16f8:	movt	r1, #0
    16fc:	mov	r0, r3
    1700:	bl	0 <strcmp>
    1704:	mov	r3, r0
    1708:	cmp	r3, #0
    170c:	beq	1740 <handle_json_run_mode+0x28c>
    1710:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1714:	lsl	r3, r3, #2
    1718:	ldr	r2, [fp, #-36]	; 0xffffffdc
    171c:	add	r3, r2, r3
    1720:	ldr	r3, [r3]
    1724:	movw	r1, #0
    1728:	movt	r1, #0
    172c:	mov	r0, r3
    1730:	bl	0 <strcmp>
    1734:	mov	r3, r0
    1738:	cmp	r3, #0
    173c:	bne	17ac <handle_json_run_mode+0x2f8>
    1740:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1744:	add	r3, r3, #1
    1748:	ldr	r2, [fp, #-32]	; 0xffffffe0
    174c:	cmp	r2, r3
    1750:	ble	17ac <handle_json_run_mode+0x2f8>
    1754:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1758:	add	r3, r3, #1
    175c:	lsl	r3, r3, #2
    1760:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1764:	add	r3, r2, r3
    1768:	ldr	r3, [r3]
    176c:	ldrb	r3, [r3]
    1770:	cmp	r3, #45	; 0x2d
    1774:	beq	17ac <handle_json_run_mode+0x2f8>
    1778:	ldr	r3, [fp, #-28]	; 0xffffffe4
    177c:	add	r3, r3, #1
    1780:	lsl	r3, r3, #2
    1784:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1788:	add	r3, r2, r3
    178c:	ldr	r2, [r3]
    1790:	movw	r3, #0
    1794:	movt	r3, #0
    1798:	str	r2, [r3]
    179c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    17a0:	add	r3, r3, #1
    17a4:	str	r3, [fp, #-28]	; 0xffffffe4
    17a8:	b	186c <handle_json_run_mode+0x3b8>
    17ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
    17b0:	lsl	r3, r3, #2
    17b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    17b8:	add	r3, r2, r3
    17bc:	ldr	r3, [r3]
    17c0:	movw	r1, #0
    17c4:	movt	r1, #0
    17c8:	mov	r0, r3
    17cc:	bl	0 <strcmp>
    17d0:	mov	r3, r0
    17d4:	cmp	r3, #0
    17d8:	bne	17e8 <handle_json_run_mode+0x334>
    17dc:	mov	r3, #0
    17e0:	str	r3, [fp, #-16]
    17e4:	b	186c <handle_json_run_mode+0x3b8>
    17e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    17ec:	sub	r3, r3, #1
    17f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    17f4:	cmp	r2, r3
    17f8:	bne	1840 <handle_json_run_mode+0x38c>
    17fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1800:	lsl	r3, r3, #2
    1804:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1808:	add	r3, r2, r3
    180c:	ldr	r3, [r3]
    1810:	ldrb	r3, [r3]
    1814:	cmp	r3, #45	; 0x2d
    1818:	beq	1840 <handle_json_run_mode+0x38c>
    181c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1820:	lsl	r3, r3, #2
    1824:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1828:	add	r3, r2, r3
    182c:	ldr	r2, [r3]
    1830:	movw	r3, #0
    1834:	movt	r3, #0
    1838:	str	r2, [r3]
    183c:	b	186c <handle_json_run_mode+0x3b8>
    1840:	movw	r3, #0
    1844:	movt	r3, #0
    1848:	ldr	r3, [r3]
    184c:	mov	r2, #25
    1850:	mov	r1, #1
    1854:	movw	r0, #0
    1858:	movt	r0, #0
    185c:	bl	0 <fwrite>
    1860:	bl	4c <print_help>
    1864:	mov	r0, #1
    1868:	bl	0 <exit>
    186c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1870:	add	r3, r3, #1
    1874:	str	r3, [fp, #-28]	; 0xffffffe4
    1878:	ldr	r2, [fp, #-28]	; 0xffffffe4
    187c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1880:	cmp	r2, r3
    1884:	blt	153c <handle_json_run_mode+0x88>
    1888:	movw	r3, #0
    188c:	movt	r3, #0
    1890:	ldr	r3, [r3]
    1894:	cmp	r3, #0
    1898:	beq	18b4 <handle_json_run_mode+0x400>
    189c:	movw	r3, #0
    18a0:	movt	r3, #0
    18a4:	ldr	r3, [r3]
    18a8:	ldrb	r3, [r3]
    18ac:	cmp	r3, #0
    18b0:	bne	18e0 <handle_json_run_mode+0x42c>
    18b4:	movw	r3, #0
    18b8:	movt	r3, #0
    18bc:	ldr	r3, [r3]
    18c0:	mov	r2, #25
    18c4:	mov	r1, #1
    18c8:	movw	r0, #0
    18cc:	movt	r0, #0
    18d0:	bl	0 <fwrite>
    18d4:	bl	4c <print_help>
    18d8:	mov	r0, #1
    18dc:	bl	0 <exit>
    18e0:	bl	0 <coda_init>
    18e4:	mov	r3, r0
    18e8:	cmp	r3, #0
    18ec:	beq	1930 <handle_json_run_mode+0x47c>
    18f0:	movw	r3, #0
    18f4:	movt	r3, #0
    18f8:	ldr	r4, [r3]
    18fc:	bl	0 <coda_get_errno>
    1900:	mov	r3, r0
    1904:	ldr	r3, [r3]
    1908:	mov	r0, r3
    190c:	bl	0 <coda_errno_to_string>
    1910:	mov	r3, r0
    1914:	mov	r2, r3
    1918:	movw	r1, #0
    191c:	movt	r1, #0
    1920:	mov	r0, r4
    1924:	bl	0 <fprintf>
    1928:	mov	r0, #1
    192c:	bl	0 <exit>
    1930:	ldr	r3, [fp, #-16]
    1934:	cmp	r3, #0
    1938:	moveq	r3, #1
    193c:	movne	r3, #0
    1940:	uxtb	r3, r3
    1944:	mov	r0, r3
    1948:	bl	0 <coda_set_option_bypass_special_types>
    194c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1950:	bl	0 <coda_set_option_perform_conversions>
    1954:	movw	r3, #0
    1958:	movt	r3, #0
    195c:	ldr	r3, [r3]
    1960:	cmp	r3, #0
    1964:	beq	19d8 <handle_json_run_mode+0x524>
    1968:	movw	r3, #0
    196c:	movt	r3, #0
    1970:	ldr	r3, [r3]
    1974:	movw	r1, #0
    1978:	movt	r1, #0
    197c:	mov	r0, r3
    1980:	bl	0 <fopen>
    1984:	mov	r2, r0
    1988:	movw	r3, #0
    198c:	movt	r3, #0
    1990:	str	r2, [r3]
    1994:	movw	r3, #0
    1998:	movt	r3, #0
    199c:	ldr	r3, [r3]
    19a0:	cmp	r3, #0
    19a4:	bne	19d8 <handle_json_run_mode+0x524>
    19a8:	movw	r3, #0
    19ac:	movt	r3, #0
    19b0:	ldr	r0, [r3]
    19b4:	movw	r3, #0
    19b8:	movt	r3, #0
    19bc:	ldr	r3, [r3]
    19c0:	mov	r2, r3
    19c4:	movw	r1, #0
    19c8:	movt	r1, #0
    19cc:	bl	0 <fprintf>
    19d0:	mov	r0, #1
    19d4:	bl	0 <exit>
    19d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    19dc:	bl	0 <print_json_data>
    19e0:	movw	r3, #0
    19e4:	movt	r3, #0
    19e8:	ldr	r3, [r3]
    19ec:	cmp	r3, #0
    19f0:	beq	1a08 <handle_json_run_mode+0x554>
    19f4:	movw	r3, #0
    19f8:	movt	r3, #0
    19fc:	ldr	r3, [r3]
    1a00:	mov	r0, r3
    1a04:	bl	0 <fclose>
    1a08:	bl	0 <coda_done>
    1a0c:	nop	{0}
    1a10:	sub	sp, fp, #8
    1a14:	ldr	r4, [sp]
    1a18:	ldr	fp, [sp, #4]
    1a1c:	add	sp, sp, #8
    1a20:	pop	{pc}		; (ldr pc, [sp], #4)

00001a24 <handle_yaml_run_mode>:
    1a24:	str	r4, [sp, #-12]!
    1a28:	str	fp, [sp, #4]
    1a2c:	str	lr, [sp, #8]
    1a30:	add	fp, sp, #8
    1a34:	sub	sp, sp, #28
    1a38:	str	r0, [fp, #-32]	; 0xffffffe0
    1a3c:	str	r1, [fp, #-36]	; 0xffffffdc
    1a40:	movw	r3, #0
    1a44:	movt	r3, #0
    1a48:	mov	r2, #0
    1a4c:	str	r2, [r3]
    1a50:	movw	r3, #0
    1a54:	movt	r3, #0
    1a58:	mov	r2, #0
    1a5c:	str	r2, [r3]
    1a60:	movw	r3, #0
    1a64:	movt	r3, #0
    1a68:	mov	r2, #0
    1a6c:	str	r2, [r3]
    1a70:	movw	r3, #0
    1a74:	movt	r3, #0
    1a78:	ldr	r2, [r3]
    1a7c:	movw	r3, #0
    1a80:	movt	r3, #0
    1a84:	str	r2, [r3]
    1a88:	mov	r3, #1
    1a8c:	str	r3, [fp, #-16]
    1a90:	mov	r3, #1
    1a94:	str	r3, [fp, #-20]	; 0xffffffec
    1a98:	mov	r3, #0
    1a9c:	str	r3, [fp, #-24]	; 0xffffffe8
    1aa0:	mov	r3, #0
    1aa4:	str	r3, [fp, #-28]	; 0xffffffe4
    1aa8:	b	1de8 <handle_yaml_run_mode+0x3c4>
    1aac:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1ab0:	lsl	r3, r3, #2
    1ab4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1ab8:	add	r3, r2, r3
    1abc:	ldr	r3, [r3]
    1ac0:	movw	r1, #0
    1ac4:	movt	r1, #0
    1ac8:	mov	r0, r3
    1acc:	bl	0 <strcmp>
    1ad0:	mov	r3, r0
    1ad4:	cmp	r3, #0
    1ad8:	beq	1b0c <handle_yaml_run_mode+0xe8>
    1adc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1ae0:	lsl	r3, r3, #2
    1ae4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1ae8:	add	r3, r2, r3
    1aec:	ldr	r3, [r3]
    1af0:	movw	r1, #0
    1af4:	movt	r1, #0
    1af8:	mov	r0, r3
    1afc:	bl	0 <strcmp>
    1b00:	mov	r3, r0
    1b04:	cmp	r3, #0
    1b08:	bne	1b18 <handle_yaml_run_mode+0xf4>
    1b0c:	mov	r3, #1
    1b10:	str	r3, [fp, #-24]	; 0xffffffe8
    1b14:	b	1ddc <handle_yaml_run_mode+0x3b8>
    1b18:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1b1c:	lsl	r3, r3, #2
    1b20:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1b24:	add	r3, r2, r3
    1b28:	ldr	r3, [r3]
    1b2c:	movw	r1, #0
    1b30:	movt	r1, #0
    1b34:	mov	r0, r3
    1b38:	bl	0 <strcmp>
    1b3c:	mov	r3, r0
    1b40:	cmp	r3, #0
    1b44:	beq	1b78 <handle_yaml_run_mode+0x154>
    1b48:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1b4c:	lsl	r3, r3, #2
    1b50:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1b54:	add	r3, r2, r3
    1b58:	ldr	r3, [r3]
    1b5c:	movw	r1, #0
    1b60:	movt	r1, #0
    1b64:	mov	r0, r3
    1b68:	bl	0 <strcmp>
    1b6c:	mov	r3, r0
    1b70:	cmp	r3, #0
    1b74:	bne	1b84 <handle_yaml_run_mode+0x160>
    1b78:	mov	r3, #0
    1b7c:	str	r3, [fp, #-20]	; 0xffffffec
    1b80:	b	1ddc <handle_yaml_run_mode+0x3b8>
    1b84:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1b88:	lsl	r3, r3, #2
    1b8c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1b90:	add	r3, r2, r3
    1b94:	ldr	r3, [r3]
    1b98:	movw	r1, #0
    1b9c:	movt	r1, #0
    1ba0:	mov	r0, r3
    1ba4:	bl	0 <strcmp>
    1ba8:	mov	r3, r0
    1bac:	cmp	r3, #0
    1bb0:	beq	1be4 <handle_yaml_run_mode+0x1c0>
    1bb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1bb8:	lsl	r3, r3, #2
    1bbc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1bc0:	add	r3, r2, r3
    1bc4:	ldr	r3, [r3]
    1bc8:	movw	r1, #0
    1bcc:	movt	r1, #0
    1bd0:	mov	r0, r3
    1bd4:	bl	0 <strcmp>
    1bd8:	mov	r3, r0
    1bdc:	cmp	r3, #0
    1be0:	bne	1c50 <handle_yaml_run_mode+0x22c>
    1be4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1be8:	add	r3, r3, #1
    1bec:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1bf0:	cmp	r2, r3
    1bf4:	ble	1c50 <handle_yaml_run_mode+0x22c>
    1bf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1bfc:	add	r3, r3, #1
    1c00:	lsl	r3, r3, #2
    1c04:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1c08:	add	r3, r2, r3
    1c0c:	ldr	r3, [r3]
    1c10:	ldrb	r3, [r3]
    1c14:	cmp	r3, #45	; 0x2d
    1c18:	beq	1c50 <handle_yaml_run_mode+0x22c>
    1c1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c20:	add	r3, r3, #1
    1c24:	lsl	r3, r3, #2
    1c28:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1c2c:	add	r3, r2, r3
    1c30:	ldr	r2, [r3]
    1c34:	movw	r3, #0
    1c38:	movt	r3, #0
    1c3c:	str	r2, [r3]
    1c40:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c44:	add	r3, r3, #1
    1c48:	str	r3, [fp, #-28]	; 0xffffffe4
    1c4c:	b	1ddc <handle_yaml_run_mode+0x3b8>
    1c50:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c54:	lsl	r3, r3, #2
    1c58:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1c5c:	add	r3, r2, r3
    1c60:	ldr	r3, [r3]
    1c64:	movw	r1, #0
    1c68:	movt	r1, #0
    1c6c:	mov	r0, r3
    1c70:	bl	0 <strcmp>
    1c74:	mov	r3, r0
    1c78:	cmp	r3, #0
    1c7c:	beq	1cb0 <handle_yaml_run_mode+0x28c>
    1c80:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c84:	lsl	r3, r3, #2
    1c88:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1c8c:	add	r3, r2, r3
    1c90:	ldr	r3, [r3]
    1c94:	movw	r1, #0
    1c98:	movt	r1, #0
    1c9c:	mov	r0, r3
    1ca0:	bl	0 <strcmp>
    1ca4:	mov	r3, r0
    1ca8:	cmp	r3, #0
    1cac:	bne	1d1c <handle_yaml_run_mode+0x2f8>
    1cb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1cb4:	add	r3, r3, #1
    1cb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1cbc:	cmp	r2, r3
    1cc0:	ble	1d1c <handle_yaml_run_mode+0x2f8>
    1cc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1cc8:	add	r3, r3, #1
    1ccc:	lsl	r3, r3, #2
    1cd0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1cd4:	add	r3, r2, r3
    1cd8:	ldr	r3, [r3]
    1cdc:	ldrb	r3, [r3]
    1ce0:	cmp	r3, #45	; 0x2d
    1ce4:	beq	1d1c <handle_yaml_run_mode+0x2f8>
    1ce8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1cec:	add	r3, r3, #1
    1cf0:	lsl	r3, r3, #2
    1cf4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1cf8:	add	r3, r2, r3
    1cfc:	ldr	r2, [r3]
    1d00:	movw	r3, #0
    1d04:	movt	r3, #0
    1d08:	str	r2, [r3]
    1d0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1d10:	add	r3, r3, #1
    1d14:	str	r3, [fp, #-28]	; 0xffffffe4
    1d18:	b	1ddc <handle_yaml_run_mode+0x3b8>
    1d1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1d20:	lsl	r3, r3, #2
    1d24:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1d28:	add	r3, r2, r3
    1d2c:	ldr	r3, [r3]
    1d30:	movw	r1, #0
    1d34:	movt	r1, #0
    1d38:	mov	r0, r3
    1d3c:	bl	0 <strcmp>
    1d40:	mov	r3, r0
    1d44:	cmp	r3, #0
    1d48:	bne	1d58 <handle_yaml_run_mode+0x334>
    1d4c:	mov	r3, #0
    1d50:	str	r3, [fp, #-16]
    1d54:	b	1ddc <handle_yaml_run_mode+0x3b8>
    1d58:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1d5c:	sub	r3, r3, #1
    1d60:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1d64:	cmp	r2, r3
    1d68:	bne	1db0 <handle_yaml_run_mode+0x38c>
    1d6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1d70:	lsl	r3, r3, #2
    1d74:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1d78:	add	r3, r2, r3
    1d7c:	ldr	r3, [r3]
    1d80:	ldrb	r3, [r3]
    1d84:	cmp	r3, #45	; 0x2d
    1d88:	beq	1db0 <handle_yaml_run_mode+0x38c>
    1d8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1d90:	lsl	r3, r3, #2
    1d94:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1d98:	add	r3, r2, r3
    1d9c:	ldr	r2, [r3]
    1da0:	movw	r3, #0
    1da4:	movt	r3, #0
    1da8:	str	r2, [r3]
    1dac:	b	1ddc <handle_yaml_run_mode+0x3b8>
    1db0:	movw	r3, #0
    1db4:	movt	r3, #0
    1db8:	ldr	r3, [r3]
    1dbc:	mov	r2, #25
    1dc0:	mov	r1, #1
    1dc4:	movw	r0, #0
    1dc8:	movt	r0, #0
    1dcc:	bl	0 <fwrite>
    1dd0:	bl	4c <print_help>
    1dd4:	mov	r0, #1
    1dd8:	bl	0 <exit>
    1ddc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1de0:	add	r3, r3, #1
    1de4:	str	r3, [fp, #-28]	; 0xffffffe4
    1de8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1dec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1df0:	cmp	r2, r3
    1df4:	blt	1aac <handle_yaml_run_mode+0x88>
    1df8:	movw	r3, #0
    1dfc:	movt	r3, #0
    1e00:	ldr	r3, [r3]
    1e04:	cmp	r3, #0
    1e08:	beq	1e24 <handle_yaml_run_mode+0x400>
    1e0c:	movw	r3, #0
    1e10:	movt	r3, #0
    1e14:	ldr	r3, [r3]
    1e18:	ldrb	r3, [r3]
    1e1c:	cmp	r3, #0
    1e20:	bne	1e50 <handle_yaml_run_mode+0x42c>
    1e24:	movw	r3, #0
    1e28:	movt	r3, #0
    1e2c:	ldr	r3, [r3]
    1e30:	mov	r2, #25
    1e34:	mov	r1, #1
    1e38:	movw	r0, #0
    1e3c:	movt	r0, #0
    1e40:	bl	0 <fwrite>
    1e44:	bl	4c <print_help>
    1e48:	mov	r0, #1
    1e4c:	bl	0 <exit>
    1e50:	bl	0 <coda_init>
    1e54:	mov	r3, r0
    1e58:	cmp	r3, #0
    1e5c:	beq	1ea0 <handle_yaml_run_mode+0x47c>
    1e60:	movw	r3, #0
    1e64:	movt	r3, #0
    1e68:	ldr	r4, [r3]
    1e6c:	bl	0 <coda_get_errno>
    1e70:	mov	r3, r0
    1e74:	ldr	r3, [r3]
    1e78:	mov	r0, r3
    1e7c:	bl	0 <coda_errno_to_string>
    1e80:	mov	r3, r0
    1e84:	mov	r2, r3
    1e88:	movw	r1, #0
    1e8c:	movt	r1, #0
    1e90:	mov	r0, r4
    1e94:	bl	0 <fprintf>
    1e98:	mov	r0, #1
    1e9c:	bl	0 <exit>
    1ea0:	ldr	r3, [fp, #-16]
    1ea4:	cmp	r3, #0
    1ea8:	moveq	r3, #1
    1eac:	movne	r3, #0
    1eb0:	uxtb	r3, r3
    1eb4:	mov	r0, r3
    1eb8:	bl	0 <coda_set_option_bypass_special_types>
    1ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
    1ec0:	bl	0 <coda_set_option_perform_conversions>
    1ec4:	movw	r3, #0
    1ec8:	movt	r3, #0
    1ecc:	ldr	r3, [r3]
    1ed0:	cmp	r3, #0
    1ed4:	beq	1f48 <handle_yaml_run_mode+0x524>
    1ed8:	movw	r3, #0
    1edc:	movt	r3, #0
    1ee0:	ldr	r3, [r3]
    1ee4:	movw	r1, #0
    1ee8:	movt	r1, #0
    1eec:	mov	r0, r3
    1ef0:	bl	0 <fopen>
    1ef4:	mov	r2, r0
    1ef8:	movw	r3, #0
    1efc:	movt	r3, #0
    1f00:	str	r2, [r3]
    1f04:	movw	r3, #0
    1f08:	movt	r3, #0
    1f0c:	ldr	r3, [r3]
    1f10:	cmp	r3, #0
    1f14:	bne	1f48 <handle_yaml_run_mode+0x524>
    1f18:	movw	r3, #0
    1f1c:	movt	r3, #0
    1f20:	ldr	r0, [r3]
    1f24:	movw	r3, #0
    1f28:	movt	r3, #0
    1f2c:	ldr	r3, [r3]
    1f30:	mov	r2, r3
    1f34:	movw	r1, #0
    1f38:	movt	r1, #0
    1f3c:	bl	0 <fprintf>
    1f40:	mov	r0, #1
    1f44:	bl	0 <exit>
    1f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1f4c:	bl	0 <print_yaml_data>
    1f50:	movw	r3, #0
    1f54:	movt	r3, #0
    1f58:	ldr	r3, [r3]
    1f5c:	cmp	r3, #0
    1f60:	beq	1f78 <handle_yaml_run_mode+0x554>
    1f64:	movw	r3, #0
    1f68:	movt	r3, #0
    1f6c:	ldr	r3, [r3]
    1f70:	mov	r0, r3
    1f74:	bl	0 <fclose>
    1f78:	bl	0 <coda_done>
    1f7c:	nop	{0}
    1f80:	sub	sp, fp, #8
    1f84:	ldr	r4, [sp]
    1f88:	ldr	fp, [sp, #4]
    1f8c:	add	sp, sp, #8
    1f90:	pop	{pc}		; (ldr pc, [sp], #4)

00001f94 <handle_debug_run_mode>:
    1f94:	str	r4, [sp, #-12]!
    1f98:	str	fp, [sp, #4]
    1f9c:	str	lr, [sp, #8]
    1fa0:	add	fp, sp, #8
    1fa4:	sub	sp, sp, #36	; 0x24
    1fa8:	str	r0, [fp, #-40]	; 0xffffffd8
    1fac:	str	r1, [fp, #-44]	; 0xffffffd4
    1fb0:	mov	r3, #0
    1fb4:	str	r3, [fp, #-16]
    1fb8:	mov	r3, #0
    1fbc:	str	r3, [fp, #-20]	; 0xffffffec
    1fc0:	mov	r3, #0
    1fc4:	str	r3, [fp, #-24]	; 0xffffffe8
    1fc8:	movw	r3, #0
    1fcc:	movt	r3, #0
    1fd0:	mov	r2, #0
    1fd4:	str	r2, [r3]
    1fd8:	movw	r3, #0
    1fdc:	movt	r3, #0
    1fe0:	mov	r2, #0
    1fe4:	str	r2, [r3]
    1fe8:	movw	r3, #0
    1fec:	movt	r3, #0
    1ff0:	mov	r2, #0
    1ff4:	str	r2, [r3]
    1ff8:	movw	r3, #0
    1ffc:	movt	r3, #0
    2000:	ldr	r2, [r3]
    2004:	movw	r3, #0
    2008:	movt	r3, #0
    200c:	str	r2, [r3]
    2010:	mov	r3, #1
    2014:	str	r3, [fp, #-28]	; 0xffffffe4
    2018:	mov	r3, #0
    201c:	str	r3, [fp, #-32]	; 0xffffffe0
    2020:	b	247c <handle_debug_run_mode+0x4e8>
    2024:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2028:	lsl	r3, r3, #2
    202c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2030:	add	r3, r2, r3
    2034:	ldr	r3, [r3]
    2038:	movw	r1, #0
    203c:	movt	r1, #0
    2040:	mov	r0, r3
    2044:	bl	0 <strcmp>
    2048:	mov	r3, r0
    204c:	cmp	r3, #0
    2050:	beq	2084 <handle_debug_run_mode+0xf0>
    2054:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2058:	lsl	r3, r3, #2
    205c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2060:	add	r3, r2, r3
    2064:	ldr	r3, [r3]
    2068:	movw	r1, #0
    206c:	movt	r1, #0
    2070:	mov	r0, r3
    2074:	bl	0 <strcmp>
    2078:	mov	r3, r0
    207c:	cmp	r3, #0
    2080:	bne	2090 <handle_debug_run_mode+0xfc>
    2084:	mov	r3, #0
    2088:	str	r3, [fp, #-28]	; 0xffffffe4
    208c:	b	2470 <handle_debug_run_mode+0x4dc>
    2090:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2094:	lsl	r3, r3, #2
    2098:	ldr	r2, [fp, #-44]	; 0xffffffd4
    209c:	add	r3, r2, r3
    20a0:	ldr	r3, [r3]
    20a4:	movw	r1, #0
    20a8:	movt	r1, #0
    20ac:	mov	r0, r3
    20b0:	bl	0 <strcmp>
    20b4:	mov	r3, r0
    20b8:	cmp	r3, #0
    20bc:	beq	20f0 <handle_debug_run_mode+0x15c>
    20c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20c4:	lsl	r3, r3, #2
    20c8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    20cc:	add	r3, r2, r3
    20d0:	ldr	r3, [r3]
    20d4:	movw	r1, #0
    20d8:	movt	r1, #0
    20dc:	mov	r0, r3
    20e0:	bl	0 <strcmp>
    20e4:	mov	r3, r0
    20e8:	cmp	r3, #0
    20ec:	bne	215c <handle_debug_run_mode+0x1c8>
    20f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20f4:	add	r3, r3, #1
    20f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    20fc:	cmp	r2, r3
    2100:	ble	215c <handle_debug_run_mode+0x1c8>
    2104:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2108:	add	r3, r3, #1
    210c:	lsl	r3, r3, #2
    2110:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2114:	add	r3, r2, r3
    2118:	ldr	r3, [r3]
    211c:	ldrb	r3, [r3]
    2120:	cmp	r3, #45	; 0x2d
    2124:	beq	215c <handle_debug_run_mode+0x1c8>
    2128:	ldr	r3, [fp, #-32]	; 0xffffffe0
    212c:	add	r3, r3, #1
    2130:	lsl	r3, r3, #2
    2134:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2138:	add	r3, r2, r3
    213c:	ldr	r2, [r3]
    2140:	movw	r3, #0
    2144:	movt	r3, #0
    2148:	str	r2, [r3]
    214c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2150:	add	r3, r3, #1
    2154:	str	r3, [fp, #-32]	; 0xffffffe0
    2158:	b	2470 <handle_debug_run_mode+0x4dc>
    215c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2160:	lsl	r3, r3, #2
    2164:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2168:	add	r3, r2, r3
    216c:	ldr	r3, [r3]
    2170:	movw	r1, #0
    2174:	movt	r1, #0
    2178:	mov	r0, r3
    217c:	bl	0 <strcmp>
    2180:	mov	r3, r0
    2184:	cmp	r3, #0
    2188:	beq	21bc <handle_debug_run_mode+0x228>
    218c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2190:	lsl	r3, r3, #2
    2194:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2198:	add	r3, r2, r3
    219c:	ldr	r3, [r3]
    21a0:	movw	r1, #0
    21a4:	movt	r1, #0
    21a8:	mov	r0, r3
    21ac:	bl	0 <strcmp>
    21b0:	mov	r3, r0
    21b4:	cmp	r3, #0
    21b8:	bne	2228 <handle_debug_run_mode+0x294>
    21bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21c0:	add	r3, r3, #1
    21c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    21c8:	cmp	r2, r3
    21cc:	ble	2228 <handle_debug_run_mode+0x294>
    21d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21d4:	add	r3, r3, #1
    21d8:	lsl	r3, r3, #2
    21dc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    21e0:	add	r3, r2, r3
    21e4:	ldr	r3, [r3]
    21e8:	ldrb	r3, [r3]
    21ec:	cmp	r3, #45	; 0x2d
    21f0:	beq	2228 <handle_debug_run_mode+0x294>
    21f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21f8:	add	r3, r3, #1
    21fc:	lsl	r3, r3, #2
    2200:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2204:	add	r3, r2, r3
    2208:	ldr	r2, [r3]
    220c:	movw	r3, #0
    2210:	movt	r3, #0
    2214:	str	r2, [r3]
    2218:	ldr	r3, [fp, #-32]	; 0xffffffe0
    221c:	add	r3, r3, #1
    2220:	str	r3, [fp, #-32]	; 0xffffffe0
    2224:	b	2470 <handle_debug_run_mode+0x4dc>
    2228:	ldr	r3, [fp, #-32]	; 0xffffffe0
    222c:	lsl	r3, r3, #2
    2230:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2234:	add	r3, r2, r3
    2238:	ldr	r3, [r3]
    223c:	movw	r1, #0
    2240:	movt	r1, #0
    2244:	mov	r0, r3
    2248:	bl	0 <strcmp>
    224c:	mov	r3, r0
    2250:	cmp	r3, #0
    2254:	bne	22d0 <handle_debug_run_mode+0x33c>
    2258:	ldr	r3, [fp, #-32]	; 0xffffffe0
    225c:	add	r3, r3, #1
    2260:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2264:	cmp	r2, r3
    2268:	ble	22d0 <handle_debug_run_mode+0x33c>
    226c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2270:	add	r3, r3, #1
    2274:	lsl	r3, r3, #2
    2278:	ldr	r2, [fp, #-44]	; 0xffffffd4
    227c:	add	r3, r2, r3
    2280:	ldr	r3, [r3]
    2284:	ldrb	r3, [r3]
    2288:	cmp	r3, #45	; 0x2d
    228c:	beq	22d0 <handle_debug_run_mode+0x33c>
    2290:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2294:	add	r3, r3, #1
    2298:	lsl	r3, r3, #2
    229c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    22a0:	add	r3, r2, r3
    22a4:	ldr	r3, [r3]
    22a8:	mov	r0, r3
    22ac:	bl	0 <atoi>
    22b0:	mov	r2, r0
    22b4:	movw	r3, #0
    22b8:	movt	r3, #0
    22bc:	str	r2, [r3]
    22c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    22c4:	add	r3, r3, #1
    22c8:	str	r3, [fp, #-32]	; 0xffffffe0
    22cc:	b	2470 <handle_debug_run_mode+0x4dc>
    22d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    22d4:	lsl	r3, r3, #2
    22d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    22dc:	add	r3, r2, r3
    22e0:	ldr	r3, [r3]
    22e4:	movw	r1, #0
    22e8:	movt	r1, #0
    22ec:	mov	r0, r3
    22f0:	bl	0 <strcmp>
    22f4:	mov	r3, r0
    22f8:	cmp	r3, #0
    22fc:	bne	23ec <handle_debug_run_mode+0x458>
    2300:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2304:	add	r3, r3, #3
    2308:	ldr	r2, [fp, #-40]	; 0xffffffd8
    230c:	cmp	r2, r3
    2310:	ble	23ec <handle_debug_run_mode+0x458>
    2314:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2318:	add	r3, r3, #1
    231c:	lsl	r3, r3, #2
    2320:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2324:	add	r3, r2, r3
    2328:	ldr	r3, [r3]
    232c:	ldrb	r3, [r3]
    2330:	cmp	r3, #45	; 0x2d
    2334:	beq	23ec <handle_debug_run_mode+0x458>
    2338:	ldr	r3, [fp, #-32]	; 0xffffffe0
    233c:	add	r3, r3, #2
    2340:	lsl	r3, r3, #2
    2344:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2348:	add	r3, r2, r3
    234c:	ldr	r3, [r3]
    2350:	ldrb	r3, [r3]
    2354:	cmp	r3, #45	; 0x2d
    2358:	beq	23ec <handle_debug_run_mode+0x458>
    235c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2360:	add	r3, r3, #3
    2364:	lsl	r3, r3, #2
    2368:	ldr	r2, [fp, #-44]	; 0xffffffd4
    236c:	add	r3, r2, r3
    2370:	ldr	r3, [r3]
    2374:	ldrb	r3, [r3]
    2378:	cmp	r3, #45	; 0x2d
    237c:	beq	23ec <handle_debug_run_mode+0x458>
    2380:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2384:	add	r3, r3, #1
    2388:	lsl	r3, r3, #2
    238c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2390:	add	r3, r2, r3
    2394:	ldr	r3, [r3]
    2398:	str	r3, [fp, #-16]
    239c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23a0:	add	r3, r3, #2
    23a4:	lsl	r3, r3, #2
    23a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    23ac:	add	r3, r2, r3
    23b0:	ldr	r3, [r3]
    23b4:	str	r3, [fp, #-20]	; 0xffffffec
    23b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23bc:	add	r3, r3, #3
    23c0:	lsl	r3, r3, #2
    23c4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    23c8:	add	r3, r2, r3
    23cc:	ldr	r3, [r3]
    23d0:	mov	r0, r3
    23d4:	bl	0 <atoi>
    23d8:	str	r0, [fp, #-24]	; 0xffffffe8
    23dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23e0:	add	r3, r3, #3
    23e4:	str	r3, [fp, #-32]	; 0xffffffe0
    23e8:	b	2470 <handle_debug_run_mode+0x4dc>
    23ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    23f0:	sub	r3, r3, #1
    23f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    23f8:	cmp	r2, r3
    23fc:	bne	2444 <handle_debug_run_mode+0x4b0>
    2400:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2404:	lsl	r3, r3, #2
    2408:	ldr	r2, [fp, #-44]	; 0xffffffd4
    240c:	add	r3, r2, r3
    2410:	ldr	r3, [r3]
    2414:	ldrb	r3, [r3]
    2418:	cmp	r3, #45	; 0x2d
    241c:	beq	2444 <handle_debug_run_mode+0x4b0>
    2420:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2424:	lsl	r3, r3, #2
    2428:	ldr	r2, [fp, #-44]	; 0xffffffd4
    242c:	add	r3, r2, r3
    2430:	ldr	r2, [r3]
    2434:	movw	r3, #0
    2438:	movt	r3, #0
    243c:	str	r2, [r3]
    2440:	b	2470 <handle_debug_run_mode+0x4dc>
    2444:	movw	r3, #0
    2448:	movt	r3, #0
    244c:	ldr	r3, [r3]
    2450:	mov	r2, #25
    2454:	mov	r1, #1
    2458:	movw	r0, #0
    245c:	movt	r0, #0
    2460:	bl	0 <fwrite>
    2464:	bl	4c <print_help>
    2468:	mov	r0, #1
    246c:	bl	0 <exit>
    2470:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2474:	add	r3, r3, #1
    2478:	str	r3, [fp, #-32]	; 0xffffffe0
    247c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2480:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2484:	cmp	r2, r3
    2488:	blt	2024 <handle_debug_run_mode+0x90>
    248c:	movw	r3, #0
    2490:	movt	r3, #0
    2494:	ldr	r3, [r3]
    2498:	cmp	r3, #0
    249c:	beq	24b8 <handle_debug_run_mode+0x524>
    24a0:	movw	r3, #0
    24a4:	movt	r3, #0
    24a8:	ldr	r3, [r3]
    24ac:	ldrb	r3, [r3]
    24b0:	cmp	r3, #0
    24b4:	bne	24e4 <handle_debug_run_mode+0x550>
    24b8:	movw	r3, #0
    24bc:	movt	r3, #0
    24c0:	ldr	r3, [r3]
    24c4:	mov	r2, #25
    24c8:	mov	r1, #1
    24cc:	movw	r0, #0
    24d0:	movt	r0, #0
    24d4:	bl	0 <fwrite>
    24d8:	bl	4c <print_help>
    24dc:	mov	r0, #1
    24e0:	bl	0 <exit>
    24e4:	bl	0 <coda_init>
    24e8:	mov	r3, r0
    24ec:	cmp	r3, #0
    24f0:	beq	2534 <handle_debug_run_mode+0x5a0>
    24f4:	movw	r3, #0
    24f8:	movt	r3, #0
    24fc:	ldr	r4, [r3]
    2500:	bl	0 <coda_get_errno>
    2504:	mov	r3, r0
    2508:	ldr	r3, [r3]
    250c:	mov	r0, r3
    2510:	bl	0 <coda_errno_to_string>
    2514:	mov	r3, r0
    2518:	mov	r2, r3
    251c:	movw	r1, #0
    2520:	movt	r1, #0
    2524:	mov	r0, r4
    2528:	bl	0 <fprintf>
    252c:	mov	r0, #1
    2530:	bl	0 <exit>
    2534:	mov	r0, #0
    2538:	bl	0 <coda_set_option_perform_conversions>
    253c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2540:	bl	0 <coda_set_option_use_fast_size_expressions>
    2544:	movw	r3, #0
    2548:	movt	r3, #0
    254c:	ldr	r3, [r3]
    2550:	cmp	r3, #0
    2554:	beq	25c8 <handle_debug_run_mode+0x634>
    2558:	movw	r3, #0
    255c:	movt	r3, #0
    2560:	ldr	r3, [r3]
    2564:	movw	r1, #0
    2568:	movt	r1, #0
    256c:	mov	r0, r3
    2570:	bl	0 <fopen>
    2574:	mov	r2, r0
    2578:	movw	r3, #0
    257c:	movt	r3, #0
    2580:	str	r2, [r3]
    2584:	movw	r3, #0
    2588:	movt	r3, #0
    258c:	ldr	r3, [r3]
    2590:	cmp	r3, #0
    2594:	bne	25c8 <handle_debug_run_mode+0x634>
    2598:	movw	r3, #0
    259c:	movt	r3, #0
    25a0:	ldr	r0, [r3]
    25a4:	movw	r3, #0
    25a8:	movt	r3, #0
    25ac:	ldr	r3, [r3]
    25b0:	mov	r2, r3
    25b4:	movw	r1, #0
    25b8:	movt	r1, #0
    25bc:	bl	0 <fprintf>
    25c0:	mov	r0, #1
    25c4:	bl	0 <exit>
    25c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    25cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    25d0:	ldr	r0, [fp, #-16]
    25d4:	bl	0 <print_debug_data>
    25d8:	movw	r3, #0
    25dc:	movt	r3, #0
    25e0:	ldr	r3, [r3]
    25e4:	cmp	r3, #0
    25e8:	beq	2600 <handle_debug_run_mode+0x66c>
    25ec:	movw	r3, #0
    25f0:	movt	r3, #0
    25f4:	ldr	r3, [r3]
    25f8:	mov	r0, r3
    25fc:	bl	0 <fclose>
    2600:	bl	0 <coda_done>
    2604:	nop	{0}
    2608:	sub	sp, fp, #8
    260c:	ldr	r4, [sp]
    2610:	ldr	fp, [sp, #4]
    2614:	add	sp, sp, #8
    2618:	pop	{pc}		; (ldr pc, [sp], #4)

0000261c <main>:
    261c:	str	r4, [sp, #-12]!
    2620:	str	fp, [sp, #4]
    2624:	str	lr, [sp, #8]
    2628:	add	fp, sp, #8
    262c:	sub	sp, sp, #20
    2630:	str	r0, [fp, #-24]	; 0xffffffe8
    2634:	str	r1, [fp, #-28]	; 0xffffffe4
    2638:	ldr	r3, [fp, #-24]	; 0xffffffe8
    263c:	cmp	r3, #1
    2640:	beq	2694 <main+0x78>
    2644:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2648:	add	r3, r3, #4
    264c:	ldr	r3, [r3]
    2650:	movw	r1, #0
    2654:	movt	r1, #0
    2658:	mov	r0, r3
    265c:	bl	0 <strcmp>
    2660:	mov	r3, r0
    2664:	cmp	r3, #0
    2668:	beq	2694 <main+0x78>
    266c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2670:	add	r3, r3, #4
    2674:	ldr	r3, [r3]
    2678:	movw	r1, #0
    267c:	movt	r1, #0
    2680:	mov	r0, r3
    2684:	bl	0 <strcmp>
    2688:	mov	r3, r0
    268c:	cmp	r3, #0
    2690:	bne	26a0 <main+0x84>
    2694:	bl	4c <print_help>
    2698:	mov	r0, #0
    269c:	bl	0 <exit>
    26a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    26a4:	add	r3, r3, #4
    26a8:	ldr	r3, [r3]
    26ac:	movw	r1, #0
    26b0:	movt	r1, #0
    26b4:	mov	r0, r3
    26b8:	bl	0 <strcmp>
    26bc:	mov	r3, r0
    26c0:	cmp	r3, #0
    26c4:	beq	26f0 <main+0xd4>
    26c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    26cc:	add	r3, r3, #4
    26d0:	ldr	r3, [r3]
    26d4:	movw	r1, #0
    26d8:	movt	r1, #0
    26dc:	mov	r0, r3
    26e0:	bl	0 <strcmp>
    26e4:	mov	r3, r0
    26e8:	cmp	r3, #0
    26ec:	bne	26fc <main+0xe0>
    26f0:	bl	0 <print_version>
    26f4:	mov	r0, #0
    26f8:	bl	0 <exit>
    26fc:	mov	r3, #1
    2700:	str	r3, [fp, #-16]
    2704:	ldr	r3, [fp, #-16]
    2708:	add	r3, r3, #1
    270c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2710:	cmp	r2, r3
    2714:	ble	2778 <main+0x15c>
    2718:	ldr	r3, [fp, #-16]
    271c:	lsl	r3, r3, #2
    2720:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2724:	add	r3, r2, r3
    2728:	ldr	r3, [r3]
    272c:	movw	r1, #0
    2730:	movt	r1, #0
    2734:	mov	r0, r3
    2738:	bl	0 <strcmp>
    273c:	mov	r3, r0
    2740:	cmp	r3, #0
    2744:	bne	2778 <main+0x15c>
    2748:	ldr	r3, [fp, #-16]
    274c:	add	r3, r3, #1
    2750:	lsl	r3, r3, #2
    2754:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2758:	add	r3, r2, r3
    275c:	ldr	r3, [r3]
    2760:	mov	r0, r3
    2764:	bl	0 <coda_set_definition_path>
    2768:	ldr	r3, [fp, #-16]
    276c:	add	r3, r3, #2
    2770:	str	r3, [fp, #-16]
    2774:	b	27e8 <main+0x1cc>
    2778:	movw	r3, #0
    277c:	movt	r3, #0
    2780:	str	r3, [fp, #-20]	; 0xffffffec
    2784:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2788:	ldr	r3, [r3]
    278c:	ldr	r2, [fp, #-20]	; 0xffffffec
    2790:	mov	r1, #0
    2794:	mov	r0, r3
    2798:	bl	0 <coda_set_definition_path_conditional>
    279c:	mov	r3, r0
    27a0:	cmp	r3, #0
    27a4:	beq	27e8 <main+0x1cc>
    27a8:	movw	r3, #0
    27ac:	movt	r3, #0
    27b0:	ldr	r4, [r3]
    27b4:	bl	0 <coda_get_errno>
    27b8:	mov	r3, r0
    27bc:	ldr	r3, [r3]
    27c0:	mov	r0, r3
    27c4:	bl	0 <coda_errno_to_string>
    27c8:	mov	r3, r0
    27cc:	mov	r2, r3
    27d0:	movw	r1, #0
    27d4:	movt	r1, #0
    27d8:	mov	r0, r4
    27dc:	bl	0 <fprintf>
    27e0:	mov	r0, #1
    27e4:	bl	0 <exit>
    27e8:	ldr	r3, [fp, #-16]
    27ec:	lsl	r3, r3, #2
    27f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    27f4:	add	r3, r2, r3
    27f8:	ldr	r3, [r3]
    27fc:	movw	r1, #0
    2800:	movt	r1, #0
    2804:	mov	r0, r3
    2808:	bl	0 <strcmp>
    280c:	mov	r3, r0
    2810:	cmp	r3, #0
    2814:	bne	285c <main+0x240>
    2818:	movw	r3, #0
    281c:	movt	r3, #0
    2820:	mov	r2, #0
    2824:	str	r2, [r3]
    2828:	ldr	r3, [fp, #-16]
    282c:	add	r3, r3, #1
    2830:	str	r3, [fp, #-16]
    2834:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2838:	ldr	r3, [fp, #-16]
    283c:	sub	r0, r2, r3
    2840:	ldr	r3, [fp, #-16]
    2844:	lsl	r3, r3, #2
    2848:	ldr	r2, [fp, #-28]	; 0xffffffe4
    284c:	add	r3, r2, r3
    2850:	mov	r1, r3
    2854:	bl	638 <handle_list_run_mode>
    2858:	b	2a58 <main+0x43c>
    285c:	ldr	r3, [fp, #-16]
    2860:	lsl	r3, r3, #2
    2864:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2868:	add	r3, r2, r3
    286c:	ldr	r3, [r3]
    2870:	movw	r1, #0
    2874:	movt	r1, #0
    2878:	mov	r0, r3
    287c:	bl	0 <strcmp>
    2880:	mov	r3, r0
    2884:	cmp	r3, #0
    2888:	bne	28d0 <main+0x2b4>
    288c:	movw	r3, #0
    2890:	movt	r3, #0
    2894:	mov	r2, #1
    2898:	str	r2, [r3]
    289c:	ldr	r3, [fp, #-16]
    28a0:	add	r3, r3, #1
    28a4:	str	r3, [fp, #-16]
    28a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    28ac:	ldr	r3, [fp, #-16]
    28b0:	sub	r0, r2, r3
    28b4:	ldr	r3, [fp, #-16]
    28b8:	lsl	r3, r3, #2
    28bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    28c0:	add	r3, r2, r3
    28c4:	mov	r1, r3
    28c8:	bl	c48 <handle_ascii_run_mode>
    28cc:	b	2a58 <main+0x43c>
    28d0:	ldr	r3, [fp, #-16]
    28d4:	lsl	r3, r3, #2
    28d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    28dc:	add	r3, r2, r3
    28e0:	ldr	r3, [r3]
    28e4:	movw	r1, #0
    28e8:	movt	r1, #0
    28ec:	mov	r0, r3
    28f0:	bl	0 <strcmp>
    28f4:	mov	r3, r0
    28f8:	cmp	r3, #0
    28fc:	bne	2944 <main+0x328>
    2900:	movw	r3, #0
    2904:	movt	r3, #0
    2908:	mov	r2, #3
    290c:	str	r2, [r3]
    2910:	ldr	r3, [fp, #-16]
    2914:	add	r3, r3, #1
    2918:	str	r3, [fp, #-16]
    291c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2920:	ldr	r3, [fp, #-16]
    2924:	sub	r0, r2, r3
    2928:	ldr	r3, [fp, #-16]
    292c:	lsl	r3, r3, #2
    2930:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2934:	add	r3, r2, r3
    2938:	mov	r1, r3
    293c:	bl	14b4 <handle_json_run_mode>
    2940:	b	2a58 <main+0x43c>
    2944:	ldr	r3, [fp, #-16]
    2948:	lsl	r3, r3, #2
    294c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2950:	add	r3, r2, r3
    2954:	ldr	r3, [r3]
    2958:	movw	r1, #0
    295c:	movt	r1, #0
    2960:	mov	r0, r3
    2964:	bl	0 <strcmp>
    2968:	mov	r3, r0
    296c:	cmp	r3, #0
    2970:	bne	29b8 <main+0x39c>
    2974:	movw	r3, #0
    2978:	movt	r3, #0
    297c:	mov	r2, #4
    2980:	str	r2, [r3]
    2984:	ldr	r3, [fp, #-16]
    2988:	add	r3, r3, #1
    298c:	str	r3, [fp, #-16]
    2990:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2994:	ldr	r3, [fp, #-16]
    2998:	sub	r0, r2, r3
    299c:	ldr	r3, [fp, #-16]
    29a0:	lsl	r3, r3, #2
    29a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    29a8:	add	r3, r2, r3
    29ac:	mov	r1, r3
    29b0:	bl	1a24 <handle_yaml_run_mode>
    29b4:	b	2a58 <main+0x43c>
    29b8:	ldr	r3, [fp, #-16]
    29bc:	lsl	r3, r3, #2
    29c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    29c4:	add	r3, r2, r3
    29c8:	ldr	r3, [r3]
    29cc:	movw	r1, #0
    29d0:	movt	r1, #0
    29d4:	mov	r0, r3
    29d8:	bl	0 <strcmp>
    29dc:	mov	r3, r0
    29e0:	cmp	r3, #0
    29e4:	bne	2a2c <main+0x410>
    29e8:	movw	r3, #0
    29ec:	movt	r3, #0
    29f0:	mov	r2, #5
    29f4:	str	r2, [r3]
    29f8:	ldr	r3, [fp, #-16]
    29fc:	add	r3, r3, #1
    2a00:	str	r3, [fp, #-16]
    2a04:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2a08:	ldr	r3, [fp, #-16]
    2a0c:	sub	r0, r2, r3
    2a10:	ldr	r3, [fp, #-16]
    2a14:	lsl	r3, r3, #2
    2a18:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2a1c:	add	r3, r2, r3
    2a20:	mov	r1, r3
    2a24:	bl	1f94 <handle_debug_run_mode>
    2a28:	b	2a58 <main+0x43c>
    2a2c:	movw	r3, #0
    2a30:	movt	r3, #0
    2a34:	ldr	r3, [r3]
    2a38:	mov	r2, #25
    2a3c:	mov	r1, #1
    2a40:	movw	r0, #0
    2a44:	movt	r0, #0
    2a48:	bl	0 <fwrite>
    2a4c:	bl	4c <print_help>
    2a50:	mov	r0, #1
    2a54:	bl	0 <exit>
    2a58:	mov	r3, #0
    2a5c:	mov	r0, r3
    2a60:	sub	sp, fp, #8
    2a64:	ldr	r4, [sp]
    2a68:	ldr	fp, [sp, #4]
    2a6c:	add	sp, sp, #8
    2a70:	pop	{pc}		; (ldr pc, [sp], #4)
