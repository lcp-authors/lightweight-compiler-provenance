
../compcert-repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

00012604 <.init>:
   12604:	push	{r3, lr}
   12608:	bl	12b10 <_start@@Base+0x3c>
   1260c:	pop	{r3, pc}

Disassembly of section .plt:

00012610 <coda_cursor_get_byte_size@plt-0x14>:
   12610:	push	{lr}		; (str lr, [sp, #-4]!)
   12614:	ldr	lr, [pc, #4]	; 12620 <coda_cursor_get_byte_size@plt-0x4>
   12618:	add	lr, pc, lr
   1261c:	ldr	pc, [lr, #8]!
   12620:	andeq	r9, r1, r0, ror #19

00012624 <coda_cursor_get_byte_size@plt>:
   12624:	add	ip, pc, #0, 12
   12628:	add	ip, ip, #102400	; 0x19000
   1262c:	ldr	pc, [ip, #2528]!	; 0x9e0

00012630 <coda_type_get_special_type_name@plt>:
   12630:	add	ip, pc, #0, 12
   12634:	add	ip, ip, #102400	; 0x19000
   12638:	ldr	pc, [ip, #2520]!	; 0x9d8

0001263c <coda_set_option_use_fast_size_expressions@plt>:
   1263c:	add	ip, pc, #0, 12
   12640:	add	ip, ip, #102400	; 0x19000
   12644:	ldr	pc, [ip, #2512]!	; 0x9d0

00012648 <raise@plt>:
   12648:	add	ip, pc, #0, 12
   1264c:	add	ip, ip, #102400	; 0x19000
   12650:	ldr	pc, [ip, #2504]!	; 0x9c8

00012654 <coda_get_option_bypass_special_types@plt>:
   12654:	add	ip, pc, #0, 12
   12658:	add	ip, ip, #102400	; 0x19000
   1265c:	ldr	pc, [ip, #2496]!	; 0x9c0

00012660 <coda_set_option_perform_boundary_checks@plt>:
   12660:	add	ip, pc, #0, 12
   12664:	add	ip, ip, #102400	; 0x19000
   12668:	ldr	pc, [ip, #2488]!	; 0x9b8

0001266c <strcmp@plt>:
   1266c:	add	ip, pc, #0, 12
   12670:	add	ip, ip, #102400	; 0x19000
   12674:	ldr	pc, [ip, #2480]!	; 0x9b0

00012678 <strtol@plt>:
   12678:	add	ip, pc, #0, 12
   1267c:	add	ip, ip, #102400	; 0x19000
   12680:	ldr	pc, [ip, #2472]!	; 0x9a8

00012684 <coda_type_get_record_field_hidden_status@plt>:
   12684:	add	ip, pc, #0, 12
   12688:	add	ip, ip, #102400	; 0x19000
   1268c:	ldr	pc, [ip, #2464]!	; 0x9a0

00012690 <printf@plt>:
   12690:	add	ip, pc, #0, 12
   12694:	add	ip, ip, #102400	; 0x19000
   12698:	ldr	pc, [ip, #2456]!	; 0x998

0001269c <coda_cursor_get_record_field_available_status@plt>:
   1269c:	add	ip, pc, #0, 12
   126a0:	add	ip, ip, #102400	; 0x19000
   126a4:	ldr	pc, [ip, #2448]!	; 0x990

000126a8 <fopen@plt>:
   126a8:	add	ip, pc, #0, 12
   126ac:	add	ip, ip, #102400	; 0x19000
   126b0:	ldr	pc, [ip, #2440]!	; 0x988

000126b4 <coda_set_error@plt>:
   126b4:	add	ip, pc, #0, 12
   126b8:	add	ip, ip, #102400	; 0x19000
   126bc:	ldr	pc, [ip, #2432]!	; 0x980

000126c0 <coda_open@plt>:
   126c0:	add	ip, pc, #0, 12
   126c4:	add	ip, ip, #102400	; 0x19000
   126c8:	ldr	pc, [ip, #2424]!	; 0x978

000126cc <fflush@plt>:
   126cc:	add	ip, pc, #0, 12
   126d0:	add	ip, ip, #102400	; 0x19000
   126d4:	ldr	pc, [ip, #2416]!	; 0x970

000126d8 <coda_time_double_to_string@plt>:
   126d8:	add	ip, pc, #0, 12
   126dc:	add	ip, ip, #102400	; 0x19000
   126e0:	ldr	pc, [ip, #2408]!	; 0x968

000126e4 <coda_cursor_get_num_elements@plt>:
   126e4:	add	ip, pc, #0, 12
   126e8:	add	ip, ip, #102400	; 0x19000
   126ec:	ldr	pc, [ip, #2400]!	; 0x960

000126f0 <coda_str64u@plt>:
   126f0:	add	ip, pc, #0, 12
   126f4:	add	ip, ip, #102400	; 0x19000
   126f8:	ldr	pc, [ip, #2392]!	; 0x958

000126fc <free@plt>:
   126fc:	add	ip, pc, #0, 12
   12700:	add	ip, ip, #102400	; 0x19000
   12704:	ldr	pc, [ip, #2384]!	; 0x950

00012708 <coda_set_option_use_mmap@plt>:
   12708:	add	ip, pc, #0, 12
   1270c:	add	ip, ip, #102400	; 0x19000
   12710:	ldr	pc, [ip, #2376]!	; 0x948

00012714 <coda_set_definition_path_conditional@plt>:
   12714:	add	ip, pc, #0, 12
   12718:	add	ip, ip, #102400	; 0x19000
   1271c:	ldr	pc, [ip, #2368]!	; 0x940

00012720 <coda_cursor_read_uint32@plt>:
   12720:	add	ip, pc, #0, 12
   12724:	add	ip, ip, #102400	; 0x19000
   12728:	ldr	pc, [ip, #2360]!	; 0x938

0001272c <coda_set_option_bypass_special_types@plt>:
   1272c:	add	ip, pc, #0, 12
   12730:	add	ip, ip, #102400	; 0x19000
   12734:	ldr	pc, [ip, #2352]!	; 0x930

00012738 <coda_type_get_record_field_type@plt>:
   12738:	add	ip, pc, #0, 12
   1273c:	add	ip, ip, #102400	; 0x19000
   12740:	ldr	pc, [ip, #2344]!	; 0x928

00012744 <coda_cursor_get_type@plt>:
   12744:	add	ip, pc, #0, 12
   12748:	add	ip, ip, #102400	; 0x19000
   1274c:	ldr	pc, [ip, #2336]!	; 0x920

00012750 <memcpy@plt>:
   12750:	add	ip, pc, #0, 12
   12754:	add	ip, ip, #102400	; 0x19000
   12758:	ldr	pc, [ip, #2328]!	; 0x918

0001275c <coda_isInf@plt>:
   1275c:	add	ip, pc, #0, 12
   12760:	add	ip, ip, #102400	; 0x19000
   12764:	ldr	pc, [ip, #2320]!	; 0x910

00012768 <coda_type_get_bit_size@plt>:
   12768:	add	ip, pc, #0, 12
   1276c:	add	ip, ip, #102400	; 0x19000
   12770:	ldr	pc, [ip, #2312]!	; 0x908

00012774 <coda_type_get_record_field_available_status@plt>:
   12774:	add	ip, pc, #0, 12
   12778:	add	ip, ip, #102400	; 0x19000
   1277c:	ldr	pc, [ip, #2304]!	; 0x900

00012780 <coda_cursor_has_attributes@plt>:
   12780:	add	ip, pc, #0, 12
   12784:	add	ip, ip, #102400	; 0x19000
   12788:	ldr	pc, [ip, #2296]!	; 0x8f8

0001278c <coda_cursor_get_type_class@plt>:
   1278c:	add	ip, pc, #0, 12
   12790:	add	ip, ip, #102400	; 0x19000
   12794:	ldr	pc, [ip, #2288]!	; 0x8f0

00012798 <coda_set_definition_path@plt>:
   12798:	add	ip, pc, #0, 12
   1279c:	add	ip, ip, #102400	; 0x19000
   127a0:	ldr	pc, [ip, #2280]!	; 0x8e8

000127a4 <coda_get_product_format@plt>:
   127a4:	add	ip, pc, #0, 12
   127a8:	add	ip, ip, #102400	; 0x19000
   127ac:	ldr	pc, [ip, #2272]!	; 0x8e0

000127b0 <coda_type_get_unit@plt>:
   127b0:	add	ip, pc, #0, 12
   127b4:	add	ip, ip, #102400	; 0x19000
   127b8:	ldr	pc, [ip, #2264]!	; 0x8d8

000127bc <coda_type_get_description@plt>:
   127bc:	add	ip, pc, #0, 12
   127c0:	add	ip, ip, #102400	; 0x19000
   127c4:	ldr	pc, [ip, #2256]!	; 0x8d0

000127c8 <coda_cursor_get_special_type@plt>:
   127c8:	add	ip, pc, #0, 12
   127cc:	add	ip, ip, #102400	; 0x19000
   127d0:	ldr	pc, [ip, #2248]!	; 0x8c8

000127d4 <coda_cursor_goto_first_array_element@plt>:
   127d4:	add	ip, pc, #0, 12
   127d8:	add	ip, ip, #102400	; 0x19000
   127dc:	ldr	pc, [ip, #2240]!	; 0x8c0

000127e0 <fwrite@plt>:
   127e0:	add	ip, pc, #0, 12
   127e4:	add	ip, ip, #102400	; 0x19000
   127e8:	ldr	pc, [ip, #2232]!	; 0x8b8

000127ec <coda_cursor_set_product@plt>:
   127ec:	add	ip, pc, #0, 12
   127f0:	add	ip, ip, #102400	; 0x19000
   127f4:	ldr	pc, [ip, #2224]!	; 0x8b0

000127f8 <coda_cursor_goto_first_record_field@plt>:
   127f8:	add	ip, pc, #0, 12
   127fc:	add	ip, ip, #102400	; 0x19000
   12800:	ldr	pc, [ip, #2216]!	; 0x8a8

00012804 <coda_cursor_goto_record_field_by_index@plt>:
   12804:	add	ip, pc, #0, 12
   12808:	add	ip, ip, #102400	; 0x19000
   1280c:	ldr	pc, [ip, #2208]!	; 0x8a0

00012810 <coda_done@plt>:
   12810:	add	ip, pc, #0, 12
   12814:	add	ip, ip, #102400	; 0x19000
   12818:	ldr	pc, [ip, #2200]!	; 0x898

0001281c <puts@plt>:
   1281c:	add	ip, pc, #0, 12
   12820:	add	ip, ip, #102400	; 0x19000
   12824:	ldr	pc, [ip, #2192]!	; 0x890

00012828 <coda_cursor_get_read_type@plt>:
   12828:	add	ip, pc, #0, 12
   1282c:	add	ip, ip, #102400	; 0x19000
   12830:	ldr	pc, [ip, #2184]!	; 0x888

00012834 <malloc@plt>:
   12834:	add	ip, pc, #0, 12
   12838:	add	ip, ip, #102400	; 0x19000
   1283c:	ldr	pc, [ip, #2176]!	; 0x880

00012840 <__libc_start_main@plt>:
   12840:	add	ip, pc, #0, 12
   12844:	add	ip, ip, #102400	; 0x19000
   12848:	ldr	pc, [ip, #2168]!	; 0x878

0001284c <__gmon_start__@plt>:
   1284c:	add	ip, pc, #0, 12
   12850:	add	ip, ip, #102400	; 0x19000
   12854:	ldr	pc, [ip, #2160]!	; 0x870

00012858 <coda_cursor_read_string@plt>:
   12858:	add	ip, pc, #0, 12
   1285c:	add	ip, ip, #102400	; 0x19000
   12860:	ldr	pc, [ip, #2152]!	; 0x868

00012864 <coda_cursor_goto_parent@plt>:
   12864:	add	ip, pc, #0, 12
   12868:	add	ip, ip, #102400	; 0x19000
   1286c:	ldr	pc, [ip, #2144]!	; 0x860

00012870 <coda_type_get_num_record_fields@plt>:
   12870:	add	ip, pc, #0, 12
   12874:	add	ip, ip, #102400	; 0x19000
   12878:	ldr	pc, [ip, #2136]!	; 0x858

0001287c <exit@plt>:
   1287c:	add	ip, pc, #0, 12
   12880:	add	ip, ip, #102400	; 0x19000
   12884:	ldr	pc, [ip, #2128]!	; 0x850

00012888 <coda_type_get_read_type@plt>:
   12888:	add	ip, pc, #0, 12
   1288c:	add	ip, ip, #102400	; 0x19000
   12890:	ldr	pc, [ip, #2120]!	; 0x848

00012894 <coda_cursor_get_string_length@plt>:
   12894:	add	ip, pc, #0, 12
   12898:	add	ip, ip, #102400	; 0x19000
   1289c:	ldr	pc, [ip, #2112]!	; 0x840

000128a0 <coda_cursor_read_uint64@plt>:
   128a0:	add	ip, pc, #0, 12
   128a4:	add	ip, ip, #102400	; 0x19000
   128a8:	ldr	pc, [ip, #2104]!	; 0x838

000128ac <coda_cursor_read_double@plt>:
   128ac:	add	ip, pc, #0, 12
   128b0:	add	ip, ip, #102400	; 0x19000
   128b4:	ldr	pc, [ip, #2096]!	; 0x830

000128b8 <coda_isNaN@plt>:
   128b8:	add	ip, pc, #0, 12
   128bc:	add	ip, ip, #102400	; 0x19000
   128c0:	ldr	pc, [ip, #2088]!	; 0x828

000128c4 <fprintf@plt>:
   128c4:	add	ip, pc, #0, 12
   128c8:	add	ip, ip, #102400	; 0x19000
   128cc:	ldr	pc, [ip, #2080]!	; 0x820

000128d0 <coda_cursor_goto_next_array_element@plt>:
   128d0:	add	ip, pc, #0, 12
   128d4:	add	ip, ip, #102400	; 0x19000
   128d8:	ldr	pc, [ip, #2072]!	; 0x818

000128dc <coda_open_as@plt>:
   128dc:	add	ip, pc, #0, 12
   128e0:	add	ip, ip, #102400	; 0x19000
   128e4:	ldr	pc, [ip, #2064]!	; 0x810

000128e8 <coda_init@plt>:
   128e8:	add	ip, pc, #0, 12
   128ec:	add	ip, ip, #102400	; 0x19000
   128f0:	ldr	pc, [ip, #2056]!	; 0x808

000128f4 <coda_set_option_perform_conversions@plt>:
   128f4:	add	ip, pc, #0, 12
   128f8:	add	ip, ip, #102400	; 0x19000
   128fc:	ldr	pc, [ip, #2048]!	; 0x800

00012900 <coda_cursor_goto_attributes@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #102400	; 0x19000
   12908:	ldr	pc, [ip, #2040]!	; 0x7f8

0001290c <coda_cursor_read_char@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #102400	; 0x19000
   12914:	ldr	pc, [ip, #2032]!	; 0x7f0

00012918 <memset@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #102400	; 0x19000
   12920:	ldr	pc, [ip, #2024]!	; 0x7e8

00012924 <putchar@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #102400	; 0x19000
   1292c:	ldr	pc, [ip, #2016]!	; 0x7e0

00012930 <strncpy@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #102400	; 0x19000
   12938:	ldr	pc, [ip, #2008]!	; 0x7d8

0001293c <coda_type_get_special_type@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #102400	; 0x19000
   12944:	ldr	pc, [ip, #2000]!	; 0x7d0

00012948 <coda_type_get_record_union_status@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #102400	; 0x19000
   12950:	ldr	pc, [ip, #1992]!	; 0x7c8

00012954 <coda_cursor_read_complex_double_split@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #102400	; 0x19000
   1295c:	ldr	pc, [ip, #1984]!	; 0x7c0

00012960 <coda_type_get_array_base_type@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #102400	; 0x19000
   12968:	ldr	pc, [ip, #1976]!	; 0x7b8

0001296c <fclose@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #102400	; 0x19000
   12974:	ldr	pc, [ip, #1968]!	; 0x7b0

00012978 <coda_type_get_string_length@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #102400	; 0x19000
   12980:	ldr	pc, [ip, #1960]!	; 0x7a8

00012984 <coda_type_get_native_type_name@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #102400	; 0x19000
   1298c:	ldr	pc, [ip, #1952]!	; 0x7a0

00012990 <coda_cursor_get_array_dim@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #102400	; 0x19000
   12998:	ldr	pc, [ip, #1944]!	; 0x798

0001299c <coda_cursor_has_ascii_content@plt>:
   1299c:	add	ip, pc, #0, 12
   129a0:	add	ip, ip, #102400	; 0x19000
   129a4:	ldr	pc, [ip, #1936]!	; 0x790

000129a8 <coda_close@plt>:
   129a8:	add	ip, pc, #0, 12
   129ac:	add	ip, ip, #102400	; 0x19000
   129b0:	ldr	pc, [ip, #1928]!	; 0x788

000129b4 <coda_cursor_read_int64@plt>:
   129b4:	add	ip, pc, #0, 12
   129b8:	add	ip, ip, #102400	; 0x19000
   129bc:	ldr	pc, [ip, #1920]!	; 0x780

000129c0 <vfprintf@plt>:
   129c0:	add	ip, pc, #0, 12
   129c4:	add	ip, ip, #102400	; 0x19000
   129c8:	ldr	pc, [ip, #1912]!	; 0x778

000129cc <coda_cursor_goto@plt>:
   129cc:	add	ip, pc, #0, 12
   129d0:	add	ip, ip, #102400	; 0x19000
   129d4:	ldr	pc, [ip, #1904]!	; 0x770

000129d8 <coda_type_get_record_field_index_from_name@plt>:
   129d8:	add	ip, pc, #0, 12
   129dc:	add	ip, ip, #102400	; 0x19000
   129e0:	ldr	pc, [ip, #1896]!	; 0x768

000129e4 <coda_cursor_read_complex_double_pair@plt>:
   129e4:	add	ip, pc, #0, 12
   129e8:	add	ip, ip, #102400	; 0x19000
   129ec:	ldr	pc, [ip, #1888]!	; 0x760

000129f0 <coda_cursor_goto_next_record_field@plt>:
   129f0:	add	ip, pc, #0, 12
   129f4:	add	ip, ip, #102400	; 0x19000
   129f8:	ldr	pc, [ip, #1880]!	; 0x758

000129fc <fputc@plt>:
   129fc:	add	ip, pc, #0, 12
   12a00:	add	ip, ip, #102400	; 0x19000
   12a04:	ldr	pc, [ip, #1872]!	; 0x750

00012a08 <coda_type_get_array_dim@plt>:
   12a08:	add	ip, pc, #0, 12
   12a0c:	add	ip, ip, #102400	; 0x19000
   12a10:	ldr	pc, [ip, #1864]!	; 0x748

00012a14 <coda_cursor_get_bit_size@plt>:
   12a14:	add	ip, pc, #0, 12
   12a18:	add	ip, ip, #102400	; 0x19000
   12a1c:	ldr	pc, [ip, #1856]!	; 0x740

00012a20 <coda_errno_to_string@plt>:
   12a20:	add	ip, pc, #0, 12
   12a24:	add	ip, ip, #102400	; 0x19000
   12a28:	ldr	pc, [ip, #1848]!	; 0x738

00012a2c <coda_cursor_use_base_type_of_special_type@plt>:
   12a2c:	add	ip, pc, #0, 12
   12a30:	add	ip, ip, #102400	; 0x19000
   12a34:	ldr	pc, [ip, #1840]!	; 0x730

00012a38 <coda_cursor_get_available_union_field_index@plt>:
   12a38:	add	ip, pc, #0, 12
   12a3c:	add	ip, ip, #102400	; 0x19000
   12a40:	ldr	pc, [ip, #1832]!	; 0x728

00012a44 <coda_cursor_read_int32@plt>:
   12a44:	add	ip, pc, #0, 12
   12a48:	add	ip, ip, #102400	; 0x19000
   12a4c:	ldr	pc, [ip, #1824]!	; 0x720

00012a50 <coda_cursor_get_file_bit_offset@plt>:
   12a50:	add	ip, pc, #0, 12
   12a54:	add	ip, ip, #102400	; 0x19000
   12a58:	ldr	pc, [ip, #1816]!	; 0x718

00012a5c <coda_get_libcoda_version@plt>:
   12a5c:	add	ip, pc, #0, 12
   12a60:	add	ip, ip, #102400	; 0x19000
   12a64:	ldr	pc, [ip, #1808]!	; 0x710

00012a68 <coda_get_errno@plt>:
   12a68:	add	ip, pc, #0, 12
   12a6c:	add	ip, ip, #102400	; 0x19000
   12a70:	ldr	pc, [ip, #1800]!	; 0x708

00012a74 <coda_type_get_special_base_type@plt>:
   12a74:	add	ip, pc, #0, 12
   12a78:	add	ip, ip, #102400	; 0x19000
   12a7c:	ldr	pc, [ip, #1792]!	; 0x700

00012a80 <coda_type_get_record_field_name@plt>:
   12a80:	add	ip, pc, #0, 12
   12a84:	add	ip, ip, #102400	; 0x19000
   12a88:	ldr	pc, [ip, #1784]!	; 0x6f8

00012a8c <fputs@plt>:
   12a8c:	add	ip, pc, #0, 12
   12a90:	add	ip, ip, #102400	; 0x19000
   12a94:	ldr	pc, [ip, #1776]!	; 0x6f0

00012a98 <abort@plt>:
   12a98:	add	ip, pc, #0, 12
   12a9c:	add	ip, ip, #102400	; 0x19000
   12aa0:	ldr	pc, [ip, #1768]!	; 0x6e8

00012aa4 <coda_cursor_read_bits@plt>:
   12aa4:	add	ip, pc, #0, 12
   12aa8:	add	ip, ip, #102400	; 0x19000
   12aac:	ldr	pc, [ip, #1760]!	; 0x6e0

00012ab0 <coda_str64@plt>:
   12ab0:	add	ip, pc, #0, 12
   12ab4:	add	ip, ip, #102400	; 0x19000
   12ab8:	ldr	pc, [ip, #1752]!	; 0x6d8

00012abc <__assert_fail@plt>:
   12abc:	add	ip, pc, #0, 12
   12ac0:	add	ip, ip, #102400	; 0x19000
   12ac4:	ldr	pc, [ip, #1744]!	; 0x6d0

00012ac8 <coda_type_get_class@plt>:
   12ac8:	add	ip, pc, #0, 12
   12acc:	add	ip, ip, #102400	; 0x19000
   12ad0:	ldr	pc, [ip, #1736]!	; 0x6c8

Disassembly of section .text:

00012ad4 <_start@@Base>:
   12ad4:	mov	fp, #0
   12ad8:	mov	lr, #0
   12adc:	pop	{r1}		; (ldr r1, [sp], #4)
   12ae0:	mov	r2, sp
   12ae4:	push	{r2}		; (str r2, [sp, #-4]!)
   12ae8:	push	{r0}		; (str r0, [sp, #-4]!)
   12aec:	ldr	ip, [pc, #16]	; 12b04 <_start@@Base+0x30>
   12af0:	push	{ip}		; (str ip, [sp, #-4]!)
   12af4:	ldr	r0, [pc, #12]	; 12b08 <_start@@Base+0x34>
   12af8:	ldr	r3, [pc, #12]	; 12b0c <_start@@Base+0x38>
   12afc:	bl	12840 <__libc_start_main@plt>
   12b00:	bl	12a98 <abort@plt>
   12b04:	andeq	r9, r1, ip, asr #20
   12b08:	andeq	r8, r1, r0, lsl r0
   12b0c:	andeq	r9, r1, ip, ror #19
   12b10:	ldr	r3, [pc, #20]	; 12b2c <_start@@Base+0x58>
   12b14:	ldr	r2, [pc, #20]	; 12b30 <_start@@Base+0x5c>
   12b18:	add	r3, pc, r3
   12b1c:	ldr	r2, [r3, r2]
   12b20:	cmp	r2, #0
   12b24:	bxeq	lr
   12b28:	b	1284c <__gmon_start__@plt>
   12b2c:	andeq	r9, r1, r0, ror #9
   12b30:	muleq	r0, ip, r1
   12b34:	ldr	r0, [pc, #24]	; 12b54 <_start@@Base+0x80>
   12b38:	ldr	r3, [pc, #24]	; 12b58 <_start@@Base+0x84>
   12b3c:	cmp	r3, r0
   12b40:	bxeq	lr
   12b44:	ldr	r3, [pc, #16]	; 12b5c <_start@@Base+0x88>
   12b48:	cmp	r3, #0
   12b4c:	bxeq	lr
   12b50:	bx	r3
   12b54:			; <UNDEFINED> instruction: 0x0002c1b0
   12b58:			; <UNDEFINED> instruction: 0x0002c1b0
   12b5c:	andeq	r0, r0, r0
   12b60:	ldr	r0, [pc, #36]	; 12b8c <_start@@Base+0xb8>
   12b64:	ldr	r1, [pc, #36]	; 12b90 <_start@@Base+0xbc>
   12b68:	sub	r1, r1, r0
   12b6c:	asr	r1, r1, #2
   12b70:	add	r1, r1, r1, lsr #31
   12b74:	asrs	r1, r1, #1
   12b78:	bxeq	lr
   12b7c:	ldr	r3, [pc, #16]	; 12b94 <_start@@Base+0xc0>
   12b80:	cmp	r3, #0
   12b84:	bxeq	lr
   12b88:	bx	r3
   12b8c:			; <UNDEFINED> instruction: 0x0002c1b0
   12b90:			; <UNDEFINED> instruction: 0x0002c1b0
   12b94:	andeq	r0, r0, r0
   12b98:	push	{r4, lr}
   12b9c:	ldr	r4, [pc, #24]	; 12bbc <_start@@Base+0xe8>
   12ba0:	ldrb	r3, [r4]
   12ba4:	cmp	r3, #0
   12ba8:	popne	{r4, pc}
   12bac:	bl	12b34 <_start@@Base+0x60>
   12bb0:	mov	r3, #1
   12bb4:	strb	r3, [r4]
   12bb8:	pop	{r4, pc}
   12bbc:			; <UNDEFINED> instruction: 0x0002c1b8
   12bc0:	b	12b60 <_start@@Base+0x8c>

00012bc4 <export_data_element_to_ascii@@Base>:
   12bc4:	push	{r4, sl, fp, lr}
   12bc8:	add	fp, sp, #8
   12bcc:	movw	r0, #49596	; 0xc1bc
   12bd0:	movt	r0, #2
   12bd4:	ldrb	r1, [r0]
   12bd8:	cmp	r1, #0
   12bdc:	beq	12bf8 <export_data_element_to_ascii@@Base+0x34>
   12be0:	movw	r0, #53392	; 0xd090
   12be4:	movt	r0, #2
   12be8:	ldr	r1, [r0]
   12bec:	mov	r0, #10
   12bf0:	bl	129fc <fputc@plt>
   12bf4:	b	12c00 <export_data_element_to_ascii@@Base+0x3c>
   12bf8:	mov	r1, #1
   12bfc:	strb	r1, [r0]
   12c00:	movw	r0, #53792	; 0xd220
   12c04:	movt	r0, #2
   12c08:	ldr	r0, [r0]
   12c0c:	cmp	r0, #0
   12c10:	beq	12c38 <export_data_element_to_ascii@@Base+0x74>
   12c14:	movw	r4, #53392	; 0xd090
   12c18:	mov	r1, #2
   12c1c:	mov	r2, #0
   12c20:	movt	r4, #2
   12c24:	ldr	r0, [r4]
   12c28:	bl	16760 <print_full_field_name@@Base>
   12c2c:	ldr	r1, [r4]
   12c30:	mov	r0, #10
   12c34:	bl	129fc <fputc@plt>
   12c38:	movw	r0, #53424	; 0xd0b0
   12c3c:	movt	r0, #2
   12c40:	ldr	r1, [r0]
   12c44:	cmp	r1, #1
   12c48:	blt	12c60 <export_data_element_to_ascii@@Base+0x9c>
   12c4c:	add	r0, r0, r1, lsl #3
   12c50:	ldr	r1, [r0, #296]	; 0x128
   12c54:	ldr	r0, [r0, #300]	; 0x12c
   12c58:	orrs	r0, r1, r0
   12c5c:	popeq	{r4, sl, fp, pc}
   12c60:	movw	r0, #53392	; 0xd090
   12c64:	mov	r1, #0
   12c68:	mov	r2, #0
   12c6c:	mov	r3, #0
   12c70:	movt	r0, #2
   12c74:	ldr	r0, [r0]
   12c78:	pop	{r4, sl, fp, lr}
   12c7c:	b	12c80 <export_data_element_to_ascii@@Base+0xbc>
   12c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c84:	add	fp, sp, #28
   12c88:	sub	sp, sp, #124	; 0x7c
   12c8c:	movw	sl, #49640	; 0xc1e8
   12c90:	mov	r8, r0
   12c94:	mov	r6, r1
   12c98:	str	r3, [sp, #60]	; 0x3c
   12c9c:	str	r2, [sp, #48]	; 0x30
   12ca0:	movt	sl, #2
   12ca4:	add	r5, sl, r1, lsl #2
   12ca8:	sub	r1, fp, #52	; 0x34
   12cac:	ldr	r0, [r5, #8]!
   12cb0:	bl	12ac8 <coda_type_get_class@plt>
   12cb4:	cmp	r0, #0
   12cb8:	beq	12cc0 <export_data_element_to_ascii@@Base+0xfc>
   12cbc:	bl	17fcc <handle_coda_error@@Base>
   12cc0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12cc4:	cmp	r0, #0
   12cc8:	beq	12db4 <export_data_element_to_ascii@@Base+0x1f0>
   12ccc:	cmp	r0, #1
   12cd0:	bne	12e20 <export_data_element_to_ascii@@Base+0x25c>
   12cd4:	ldr	r2, [sp, #48]	; 0x30
   12cd8:	str	r6, [sp, #20]
   12cdc:	str	r8, [sp, #24]
   12ce0:	add	r0, r2, r2, lsl #2
   12ce4:	cmp	r2, #0
   12ce8:	add	r9, sl, r0, lsl #4
   12cec:	moveq	r0, #0
   12cf0:	ldr	r1, [r9, #800]	; 0x320
   12cf4:	streq	r0, [sl, #844]	; 0x34c
   12cf8:	mov	r2, r9
   12cfc:	ldr	r0, [r2, #804]!	; 0x324
   12d00:	str	r2, [sp, #32]
   12d04:	movw	r2, #53424	; 0xd0b0
   12d08:	add	r3, r0, r1
   12d0c:	movt	r2, #2
   12d10:	str	r3, [sp, #40]	; 0x28
   12d14:	ldr	r7, [r2, #104]	; 0x68
   12d18:	cmp	r7, r3
   12d1c:	str	r7, [sp, #36]	; 0x24
   12d20:	blt	12d44 <export_data_element_to_ascii@@Base+0x180>
   12d24:	ldr	r3, [sl, #3360]	; 0xd20
   12d28:	ldr	r7, [sp, #48]	; 0x30
   12d2c:	sub	r3, r3, #1
   12d30:	cmp	r3, r7
   12d34:	ldrgt	r3, [r9, #840]	; 0x348
   12d38:	ldrgt	r7, [r9, #844]	; 0x34c
   12d3c:	mulgt	r3, r3, r7
   12d40:	strgt	r3, [r9, #924]	; 0x39c
   12d44:	cmp	r0, #1
   12d48:	blt	12fb8 <export_data_element_to_ascii@@Base+0x3f4>
   12d4c:	add	r1, r2, r1, lsl #2
   12d50:	add	r2, r9, #848	; 0x350
   12d54:	add	r3, r9, #844	; 0x34c
   12d58:	mov	r8, #1
   12d5c:	mov	ip, #0
   12d60:	add	r5, sp, #64	; 0x40
   12d64:	mov	r4, #0
   12d68:	add	r6, r1, r4
   12d6c:	ldr	r7, [r6, #72]	; 0x48
   12d70:	cmp	r7, #0
   12d74:	beq	12d88 <export_data_element_to_ascii@@Base+0x1c4>
   12d78:	ldr	r7, [r6, #108]	; 0x6c
   12d7c:	ldr	r6, [r3]
   12d80:	add	r6, r7, r6, lsl #2
   12d84:	b	12d8c <export_data_element_to_ascii@@Base+0x1c8>
   12d88:	add	r6, r6, #4
   12d8c:	ldr	r7, [r6]
   12d90:	str	ip, [r2, r4]
   12d94:	subs	r0, r0, #1
   12d98:	str	r7, [r5, r4]
   12d9c:	mul	r8, r7, r8
   12da0:	add	r4, r4, #4
   12da4:	bne	12d68 <export_data_element_to_ascii@@Base+0x1a4>
   12da8:	cmp	r8, #0
   12dac:	bne	12fbc <export_data_element_to_ascii@@Base+0x3f8>
   12db0:	b	13614 <export_data_element_to_ascii@@Base+0xa50>
   12db4:	ldr	r0, [sp, #60]	; 0x3c
   12db8:	add	r5, sl, #144	; 0x90
   12dbc:	add	r2, sp, #64	; 0x40
   12dc0:	add	r7, sl, r0, lsl #2
   12dc4:	mov	r0, r5
   12dc8:	ldr	r1, [r7, #3492]!	; 0xda4
   12dcc:	bl	1269c <coda_cursor_get_record_field_available_status@plt>
   12dd0:	cmp	r0, #0
   12dd4:	beq	12ddc <export_data_element_to_ascii@@Base+0x218>
   12dd8:	bl	17fcc <handle_coda_error@@Base>
   12ddc:	ldr	r0, [sp, #64]	; 0x40
   12de0:	cmp	r0, #0
   12de4:	beq	13614 <export_data_element_to_ascii@@Base+0xa50>
   12de8:	ldr	r1, [r7]
   12dec:	mov	r0, r5
   12df0:	bl	12804 <coda_cursor_goto_record_field_by_index@plt>
   12df4:	cmp	r0, #0
   12df8:	beq	12e00 <export_data_element_to_ascii@@Base+0x23c>
   12dfc:	bl	17fcc <handle_coda_error@@Base>
   12e00:	ldr	r0, [sp, #60]	; 0x3c
   12e04:	ldr	r2, [sp, #48]	; 0x30
   12e08:	add	r1, r6, #1
   12e0c:	add	r3, r0, #1
   12e10:	mov	r0, r8
   12e14:	bl	12c80 <export_data_element_to_ascii@@Base+0xbc>
   12e18:	mov	r0, r5
   12e1c:	b	130ec <export_data_element_to_ascii@@Base+0x528>
   12e20:	movw	r0, #53408	; 0xd0a0
   12e24:	str	r5, [sp, #56]	; 0x38
   12e28:	movt	r0, #2
   12e2c:	ldr	r0, [r0]
   12e30:	cmp	r0, #0
   12e34:	beq	12efc <export_data_element_to_ascii@@Base+0x338>
   12e38:	ldr	r0, [sl, #136]	; 0x88
   12e3c:	cmp	r0, #1
   12e40:	blt	12efc <export_data_element_to_ascii@@Base+0x338>
   12e44:	movw	r5, #53396	; 0xd094
   12e48:	movw	r6, #39780	; 0x9b64
   12e4c:	mov	r7, #0
   12e50:	add	r4, sp, #64	; 0x40
   12e54:	mov	r9, #0
   12e58:	movt	r5, #2
   12e5c:	movt	r6, #1
   12e60:	add	r0, sl, r7, lsl #2
   12e64:	mov	r1, r4
   12e68:	ldr	r0, [r0, #8]
   12e6c:	bl	12ac8 <coda_type_get_class@plt>
   12e70:	cmp	r0, #0
   12e74:	beq	12e7c <export_data_element_to_ascii@@Base+0x2b8>
   12e78:	bl	17fcc <handle_coda_error@@Base>
   12e7c:	ldr	r0, [sp, #64]	; 0x40
   12e80:	cmp	r0, #1
   12e84:	bne	12eec <export_data_element_to_ascii@@Base+0x328>
   12e88:	add	r0, r9, r9, lsl #2
   12e8c:	str	r9, [sp, #60]	; 0x3c
   12e90:	add	r0, sl, r0, lsl #4
   12e94:	mov	sl, r8
   12e98:	mov	r4, r0
   12e9c:	ldr	r1, [r4, #804]!	; 0x324
   12ea0:	cmp	r1, #1
   12ea4:	blt	12ed4 <export_data_element_to_ascii@@Base+0x310>
   12ea8:	add	r8, r0, #848	; 0x350
   12eac:	mov	r9, #0
   12eb0:	ldr	r2, [r8, r9, lsl #2]
   12eb4:	ldr	r3, [r5]
   12eb8:	mov	r0, sl
   12ebc:	mov	r1, r6
   12ec0:	bl	128c4 <fprintf@plt>
   12ec4:	ldr	r0, [r4]
   12ec8:	add	r9, r9, #1
   12ecc:	cmp	r9, r0
   12ed0:	blt	12eb0 <export_data_element_to_ascii@@Base+0x2ec>
   12ed4:	ldr	r9, [sp, #60]	; 0x3c
   12ed8:	mov	r8, sl
   12edc:	movw	sl, #49640	; 0xc1e8
   12ee0:	add	r4, sp, #64	; 0x40
   12ee4:	movt	sl, #2
   12ee8:	add	r9, r9, #1
   12eec:	ldr	r0, [sl, #136]	; 0x88
   12ef0:	add	r7, r7, #1
   12ef4:	cmp	r7, r0
   12ef8:	blt	12e60 <export_data_element_to_ascii@@Base+0x29c>
   12efc:	ldr	r5, [sp, #56]	; 0x38
   12f00:	sub	r1, fp, #32
   12f04:	ldr	r0, [r5]
   12f08:	bl	12ac8 <coda_type_get_class@plt>
   12f0c:	cmp	r0, #0
   12f10:	beq	12f18 <export_data_element_to_ascii@@Base+0x354>
   12f14:	bl	17fcc <handle_coda_error@@Base>
   12f18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f1c:	sub	r1, r0, #2
   12f20:	cmp	r1, #4
   12f24:	bcs	130f8 <export_data_element_to_ascii@@Base+0x534>
   12f28:	ldr	r0, [r5]
   12f2c:	sub	r1, fp, #36	; 0x24
   12f30:	bl	12888 <coda_type_get_read_type@plt>
   12f34:	cmp	r0, #0
   12f38:	beq	12f40 <export_data_element_to_ascii@@Base+0x37c>
   12f3c:	bl	17fcc <handle_coda_error@@Base>
   12f40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f44:	add	r0, r0, #1
   12f48:	cmp	r0, #13
   12f4c:	bhi	13608 <export_data_element_to_ascii@@Base+0xa44>
   12f50:	add	r1, pc, #0
   12f54:	ldr	pc, [r1, r0, lsl #2]
   12f58:	andeq	r3, r1, r8, asr #12
   12f5c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12f60:	andeq	r3, r1, ip, ror #3
   12f64:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12f68:	andeq	r3, r1, ip, ror #3
   12f6c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12f70:	andeq	r3, r1, ip, ror #3
   12f74:	andeq	r3, r1, r0, lsr #5
   12f78:	andeq	r3, r1, r0, asr r5
   12f7c:	andeq	r3, r1, ip, lsl r2
   12f80:	andeq	r3, r1, ip, lsl r2
   12f84:	andeq	r3, r1, ip, lsl #11
   12f88:	ldrdeq	r3, [r1], -r0
   12f8c:	andeq	r3, r1, r0, lsl #7
   12f90:	add	r0, sl, #144	; 0x90
   12f94:	add	r1, sp, #64	; 0x40
   12f98:	bl	12a44 <coda_cursor_read_int32@plt>
   12f9c:	cmp	r0, #0
   12fa0:	beq	12fa8 <export_data_element_to_ascii@@Base+0x3e4>
   12fa4:	bl	17fcc <handle_coda_error@@Base>
   12fa8:	ldr	r2, [sp, #64]	; 0x40
   12fac:	movw	r1, #41380	; 0xa1a4
   12fb0:	movt	r1, #1
   12fb4:	b	13210 <export_data_element_to_ascii@@Base+0x64c>
   12fb8:	mov	r8, #1
   12fbc:	movw	r0, #49640	; 0xc1e8
   12fc0:	movt	r0, #2
   12fc4:	add	r0, r0, #144	; 0x90
   12fc8:	str	r0, [sp, #44]	; 0x2c
   12fcc:	bl	127d4 <coda_cursor_goto_first_array_element@plt>
   12fd0:	cmp	r0, #0
   12fd4:	beq	12fdc <export_data_element_to_ascii@@Base+0x418>
   12fd8:	bl	17fcc <handle_coda_error@@Base>
   12fdc:	ldr	r4, [sp, #24]
   12fe0:	cmp	r8, #1
   12fe4:	blt	130e8 <export_data_element_to_ascii@@Base+0x524>
   12fe8:	add	r0, r9, #924	; 0x39c
   12fec:	mov	r7, #0
   12ff0:	mov	r5, #0
   12ff4:	str	r0, [sp, #28]
   12ff8:	add	r0, sp, #64	; 0x40
   12ffc:	sub	sl, r0, #4
   13000:	sub	r0, r8, #1
   13004:	str	r0, [sp, #56]	; 0x38
   13008:	ldr	r0, [sp, #48]	; 0x30
   1300c:	add	r0, r0, #1
   13010:	str	r0, [sp, #52]	; 0x34
   13014:	ldr	r0, [sp, #20]
   13018:	add	r6, r0, #1
   1301c:	ldr	r2, [sp, #52]	; 0x34
   13020:	ldr	r3, [sp, #60]	; 0x3c
   13024:	mov	r0, r4
   13028:	mov	r1, r6
   1302c:	bl	12c80 <export_data_element_to_ascii@@Base+0xbc>
   13030:	ldr	r0, [sp, #56]	; 0x38
   13034:	cmp	r5, r0
   13038:	bge	130dc <export_data_element_to_ascii@@Base+0x518>
   1303c:	ldr	r0, [sp, #44]	; 0x2c
   13040:	bl	128d0 <coda_cursor_goto_next_array_element@plt>
   13044:	cmp	r0, #0
   13048:	beq	13050 <export_data_element_to_ascii@@Base+0x48c>
   1304c:	bl	17fcc <handle_coda_error@@Base>
   13050:	ldr	r0, [sp, #40]	; 0x28
   13054:	ldr	r1, [sp, #36]	; 0x24
   13058:	cmp	r1, r0
   1305c:	blt	13088 <export_data_element_to_ascii@@Base+0x4c4>
   13060:	movw	r0, #49640	; 0xc1e8
   13064:	ldr	r1, [sp, #48]	; 0x30
   13068:	movt	r0, #2
   1306c:	ldr	r0, [r0, #3360]	; 0xd20
   13070:	sub	r0, r0, #1
   13074:	cmp	r0, r1
   13078:	ldrgt	r1, [sp, #28]
   1307c:	ldrgt	r0, [r1]
   13080:	addgt	r0, r0, #1
   13084:	strgt	r0, [r1]
   13088:	movw	r0, #53408	; 0xd0a0
   1308c:	movt	r0, #2
   13090:	ldr	r0, [r0]
   13094:	cmp	r0, #0
   13098:	beq	130dc <export_data_element_to_ascii@@Base+0x518>
   1309c:	ldr	r0, [sp, #32]
   130a0:	ldr	r0, [r0]
   130a4:	cmp	r0, #1
   130a8:	blt	130dc <export_data_element_to_ascii@@Base+0x518>
   130ac:	add	r1, r9, r0, lsl #2
   130b0:	ldr	r3, [sl, r0, lsl #2]
   130b4:	ldr	r2, [r1, #844]	; 0x34c
   130b8:	add	r2, r2, #1
   130bc:	cmp	r2, r3
   130c0:	str	r2, [r1, #844]	; 0x34c
   130c4:	bne	130dc <export_data_element_to_ascii@@Base+0x518>
   130c8:	sub	r0, r0, #1
   130cc:	str	r7, [r1, #844]	; 0x34c
   130d0:	add	r1, r0, #1
   130d4:	cmp	r1, #1
   130d8:	bgt	130ac <export_data_element_to_ascii@@Base+0x4e8>
   130dc:	add	r5, r5, #1
   130e0:	cmp	r5, r8
   130e4:	bne	1301c <export_data_element_to_ascii@@Base+0x458>
   130e8:	ldr	r0, [sp, #44]	; 0x2c
   130ec:	bl	12864 <coda_cursor_goto_parent@plt>
   130f0:	sub	sp, fp, #28
   130f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130f8:	cmp	r0, #6
   130fc:	beq	13128 <export_data_element_to_ascii@@Base+0x564>
   13100:	cmp	r0, #2
   13104:	bcs	13608 <export_data_element_to_ascii@@Base+0xa44>
   13108:	movw	r0, #40091	; 0x9c9b
   1310c:	movw	r1, #39582	; 0x9a9e
   13110:	movw	r3, #39711	; 0x9b1f
   13114:	mov	r2, #368	; 0x170
   13118:	movt	r0, #1
   1311c:	movt	r1, #1
   13120:	movt	r3, #1
   13124:	bl	12abc <__assert_fail@plt>
   13128:	ldr	r0, [r5]
   1312c:	sub	r1, fp, #36	; 0x24
   13130:	bl	1293c <coda_type_get_special_type@plt>
   13134:	cmp	r0, #0
   13138:	beq	13140 <export_data_element_to_ascii@@Base+0x57c>
   1313c:	bl	17fcc <handle_coda_error@@Base>
   13140:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13144:	sub	r1, r0, #1
   13148:	cmp	r1, #2
   1314c:	bcs	13254 <export_data_element_to_ascii@@Base+0x690>
   13150:	add	r0, sl, #144	; 0x90
   13154:	sub	r1, fp, #48	; 0x30
   13158:	bl	128ac <coda_cursor_read_double@plt>
   1315c:	cmp	r0, #0
   13160:	beq	13168 <export_data_element_to_ascii@@Base+0x5a4>
   13164:	bl	17fcc <handle_coda_error@@Base>
   13168:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1316c:	cmp	r0, #2
   13170:	bne	135c8 <export_data_element_to_ascii@@Base+0xa04>
   13174:	movw	r0, #49628	; 0xc1dc
   13178:	movt	r0, #2
   1317c:	ldr	r0, [r0]
   13180:	cmp	r0, #0
   13184:	beq	135c8 <export_data_element_to_ascii@@Base+0xa04>
   13188:	vldr	d0, [fp, #-48]	; 0xffffffd0
   1318c:	bl	128b8 <coda_isNaN@plt>
   13190:	cmp	r0, #0
   13194:	bne	131a8 <export_data_element_to_ascii@@Base+0x5e4>
   13198:	vldr	d0, [fp, #-48]	; 0xffffffd0
   1319c:	bl	1275c <coda_isInf@plt>
   131a0:	cmp	r0, #0
   131a4:	beq	13624 <export_data_element_to_ascii@@Base+0xa60>
   131a8:	movw	r1, #39792	; 0x9b70
   131ac:	mov	r0, #11
   131b0:	movt	r1, #1
   131b4:	vld1.64	{d16-d17}, [r1], r0
   131b8:	vld1.8	{d18-d19}, [r1]
   131bc:	add	r1, sp, #64	; 0x40
   131c0:	vst1.64	{d16-d17}, [r1], r0
   131c4:	vst1.8	{d18-d19}, [r1]
   131c8:	movw	r0, #53796	; 0xd224
   131cc:	movt	r0, #2
   131d0:	ldr	r0, [r0]
   131d4:	cmp	r0, #0
   131d8:	beq	1361c <export_data_element_to_ascii@@Base+0xa58>
   131dc:	movw	r1, #41624	; 0xa298
   131e0:	add	r2, sp, #64	; 0x40
   131e4:	movt	r1, #1
   131e8:	b	13210 <export_data_element_to_ascii@@Base+0x64c>
   131ec:	add	r0, sl, #144	; 0x90
   131f0:	add	r1, sp, #64	; 0x40
   131f4:	bl	12720 <coda_cursor_read_uint32@plt>
   131f8:	cmp	r0, #0
   131fc:	beq	13204 <export_data_element_to_ascii@@Base+0x640>
   13200:	bl	17fcc <handle_coda_error@@Base>
   13204:	ldr	r2, [sp, #64]	; 0x40
   13208:	movw	r1, #39696	; 0x9b10
   1320c:	movt	r1, #1
   13210:	mov	r0, r8
   13214:	bl	128c4 <fprintf@plt>
   13218:	b	13608 <export_data_element_to_ascii@@Base+0xa44>
   1321c:	add	r0, sl, #144	; 0x90
   13220:	add	r1, sp, #64	; 0x40
   13224:	bl	128ac <coda_cursor_read_double@plt>
   13228:	cmp	r0, #0
   1322c:	beq	13234 <export_data_element_to_ascii@@Base+0x670>
   13230:	bl	17fcc <handle_coda_error@@Base>
   13234:	vldr	d16, [sp, #64]	; 0x40
   13238:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1323c:	vmov	r2, r3, d16
   13240:	cmp	r0, #8
   13244:	bne	135d0 <export_data_element_to_ascii@@Base+0xa0c>
   13248:	movw	r1, #39700	; 0x9b14
   1324c:	movt	r1, #1
   13250:	b	135d8 <export_data_element_to_ascii@@Base+0xa14>
   13254:	cmp	r0, #3
   13258:	bne	13608 <export_data_element_to_ascii@@Base+0xa44>
   1325c:	add	r0, sl, #144	; 0x90
   13260:	add	r1, sp, #64	; 0x40
   13264:	bl	129e4 <coda_cursor_read_complex_double_pair@plt>
   13268:	cmp	r0, #0
   1326c:	beq	13274 <export_data_element_to_ascii@@Base+0x6b0>
   13270:	bl	17fcc <handle_coda_error@@Base>
   13274:	movw	r0, #53396	; 0xd094
   13278:	vldr	d16, [sp, #64]	; 0x40
   1327c:	vldr	d17, [sp, #72]	; 0x48
   13280:	movw	r1, #39773	; 0x9b5d
   13284:	movt	r0, #2
   13288:	movt	r1, #1
   1328c:	ldr	r0, [r0]
   13290:	vstr	d17, [sp, #8]
   13294:	vmov	r2, r3, d16
   13298:	str	r0, [sp]
   1329c:	b	135d8 <export_data_element_to_ascii@@Base+0xa14>
   132a0:	add	r0, sl, #144	; 0x90
   132a4:	sub	r1, fp, #48	; 0x30
   132a8:	bl	129b4 <coda_cursor_read_int64@plt>
   132ac:	cmp	r0, #0
   132b0:	beq	132b8 <export_data_element_to_ascii@@Base+0x6f4>
   132b4:	bl	17fcc <handle_coda_error@@Base>
   132b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   132bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132c0:	add	r5, sp, #64	; 0x40
   132c4:	mov	r2, r5
   132c8:	bl	12ab0 <coda_str64@plt>
   132cc:	b	1357c <export_data_element_to_ascii@@Base+0x9b8>
   132d0:	add	r6, sl, #144	; 0x90
   132d4:	add	r1, sp, #64	; 0x40
   132d8:	mov	r0, r6
   132dc:	bl	12894 <coda_cursor_get_string_length@plt>
   132e0:	cmp	r0, #0
   132e4:	beq	132ec <export_data_element_to_ascii@@Base+0x728>
   132e8:	bl	17fcc <handle_coda_error@@Base>
   132ec:	ldr	r0, [sp, #64]	; 0x40
   132f0:	add	r7, r0, #1
   132f4:	mov	r0, r7
   132f8:	bl	12834 <malloc@plt>
   132fc:	mov	r5, r0
   13300:	cmp	r0, #0
   13304:	bne	13338 <export_data_element_to_ascii@@Base+0x774>
   13308:	movw	r1, #39529	; 0x9a69
   1330c:	movw	r3, #39582	; 0x9a9e
   13310:	mov	r0, #126	; 0x7e
   13314:	mov	r2, r7
   13318:	str	r0, [sp]
   1331c:	movt	r1, #1
   13320:	movt	r3, #1
   13324:	mvn	r0, #0
   13328:	bl	126b4 <coda_set_error@plt>
   1332c:	bl	17fcc <handle_coda_error@@Base>
   13330:	ldr	r0, [sp, #64]	; 0x40
   13334:	add	r7, r0, #1
   13338:	mov	r0, r6
   1333c:	mov	r1, r5
   13340:	mov	r2, r7
   13344:	bl	12858 <coda_cursor_read_string@plt>
   13348:	cmp	r0, #0
   1334c:	beq	13354 <export_data_element_to_ascii@@Base+0x790>
   13350:	bl	17fcc <handle_coda_error@@Base>
   13354:	movw	r0, #53796	; 0xd224
   13358:	movt	r0, #2
   1335c:	ldr	r0, [r0]
   13360:	cmp	r0, #0
   13364:	beq	135e4 <export_data_element_to_ascii@@Base+0xa20>
   13368:	movw	r1, #41624	; 0xa298
   1336c:	mov	r0, r8
   13370:	mov	r2, r5
   13374:	movt	r1, #1
   13378:	bl	128c4 <fprintf@plt>
   1337c:	b	135f0 <export_data_element_to_ascii@@Base+0xa2c>
   13380:	add	r0, sl, #144	; 0x90
   13384:	add	r1, sp, #64	; 0x40
   13388:	str	r8, [sp, #24]
   1338c:	str	r0, [sp, #60]	; 0x3c
   13390:	bl	12a14 <coda_cursor_get_bit_size@plt>
   13394:	cmp	r0, #0
   13398:	beq	133a0 <export_data_element_to_ascii@@Base+0x7dc>
   1339c:	bl	17fcc <handle_coda_error@@Base>
   133a0:	ldr	sl, [sp, #64]	; 0x40
   133a4:	ldr	r7, [sp, #68]	; 0x44
   133a8:	lsr	r0, sl, #3
   133ac:	asr	r4, r7, #3
   133b0:	orr	r0, r0, r7, lsl #29
   133b4:	adds	r5, r0, #1
   133b8:	adc	r9, r4, #0
   133bc:	ands	r8, sl, #7
   133c0:	moveq	r5, r0
   133c4:	mov	r0, r5
   133c8:	bl	12834 <malloc@plt>
   133cc:	cmp	r8, #0
   133d0:	mov	r6, r0
   133d4:	moveq	r9, r4
   133d8:	cmp	r0, #0
   133dc:	bne	13410 <export_data_element_to_ascii@@Base+0x84c>
   133e0:	movw	r1, #39529	; 0x9a69
   133e4:	movw	r3, #39582	; 0x9a9e
   133e8:	mov	r0, #163	; 0xa3
   133ec:	mov	r2, r5
   133f0:	str	r0, [sp]
   133f4:	movt	r1, #1
   133f8:	movt	r3, #1
   133fc:	mvn	r0, #0
   13400:	bl	126b4 <coda_set_error@plt>
   13404:	bl	17fcc <handle_coda_error@@Base>
   13408:	ldr	sl, [sp, #64]	; 0x40
   1340c:	ldr	r7, [sp, #68]	; 0x44
   13410:	ldr	r0, [sp, #60]	; 0x3c
   13414:	mov	r1, r6
   13418:	mov	r2, #0
   1341c:	mov	r3, #0
   13420:	str	sl, [sp]
   13424:	str	r7, [sp, #4]
   13428:	bl	12aa4 <coda_cursor_read_bits@plt>
   1342c:	ldr	r8, [sp, #24]
   13430:	cmp	r0, #0
   13434:	beq	1343c <export_data_element_to_ascii@@Base+0x878>
   13438:	bl	17fcc <handle_coda_error@@Base>
   1343c:	subs	r0, r5, #1
   13440:	sbcs	r0, r9, #0
   13444:	blt	13544 <export_data_element_to_ascii@@Base+0x980>
   13448:	movw	r7, #39681	; 0x9b01
   1344c:	movw	r4, #39684	; 0x9b04
   13450:	mov	sl, #0
   13454:	movt	r7, #1
   13458:	movt	r4, #1
   1345c:	b	13494 <export_data_element_to_ascii@@Base+0x8d0>
   13460:	sub	r0, r2, #32
   13464:	uxtb	r0, r0
   13468:	cmp	r0, #94	; 0x5e
   1346c:	bhi	13480 <export_data_element_to_ascii@@Base+0x8bc>
   13470:	mov	r0, r2
   13474:	mov	r1, r8
   13478:	bl	129fc <fputc@plt>
   1347c:	b	13534 <export_data_element_to_ascii@@Base+0x970>
   13480:	movw	r1, #39690	; 0x9b0a
   13484:	mov	r0, r8
   13488:	movt	r1, #1
   1348c:	bl	128c4 <fprintf@plt>
   13490:	b	13534 <export_data_element_to_ascii@@Base+0x970>
   13494:	ldrb	r2, [r6, sl]
   13498:	sub	r0, r2, #7
   1349c:	cmp	r0, #6
   134a0:	bhi	134d4 <export_data_element_to_ascii@@Base+0x910>
   134a4:	add	r1, pc, #0
   134a8:	ldr	pc, [r1, r0, lsl #2]
   134ac:	andeq	r3, r1, r8, asr #9
   134b0:	andeq	r3, r1, r0, lsl #10
   134b4:	strdeq	r3, [r1], -r4
   134b8:	andeq	r3, r1, ip, lsl #10
   134bc:	andeq	r3, r1, r8, ror #9
   134c0:	andeq	r3, r1, r8, lsl r5
   134c4:	andeq	r3, r1, r0, lsr #10
   134c8:	movw	r0, #39666	; 0x9af2
   134cc:	movt	r0, #1
   134d0:	b	13524 <export_data_element_to_ascii@@Base+0x960>
   134d4:	cmp	r2, #92	; 0x5c
   134d8:	bne	13460 <export_data_element_to_ascii@@Base+0x89c>
   134dc:	movw	r0, #39687	; 0x9b07
   134e0:	movt	r0, #1
   134e4:	b	13524 <export_data_element_to_ascii@@Base+0x960>
   134e8:	movw	r0, #39678	; 0x9afe
   134ec:	movt	r0, #1
   134f0:	b	13524 <export_data_element_to_ascii@@Base+0x960>
   134f4:	movw	r0, #39672	; 0x9af8
   134f8:	movt	r0, #1
   134fc:	b	13524 <export_data_element_to_ascii@@Base+0x960>
   13500:	movw	r0, #39669	; 0x9af5
   13504:	movt	r0, #1
   13508:	b	13524 <export_data_element_to_ascii@@Base+0x960>
   1350c:	movw	r0, #39675	; 0x9afb
   13510:	movt	r0, #1
   13514:	b	13524 <export_data_element_to_ascii@@Base+0x960>
   13518:	mov	r0, r7
   1351c:	b	13524 <export_data_element_to_ascii@@Base+0x960>
   13520:	mov	r0, r4
   13524:	mov	r1, #2
   13528:	mov	r2, #1
   1352c:	mov	r3, r8
   13530:	bl	127e0 <fwrite@plt>
   13534:	add	sl, sl, #1
   13538:	subs	r0, sl, r5
   1353c:	rscs	r0, r9, #0
   13540:	blt	13494 <export_data_element_to_ascii@@Base+0x8d0>
   13544:	mov	r0, r6
   13548:	bl	126fc <free@plt>
   1354c:	b	13608 <export_data_element_to_ascii@@Base+0xa44>
   13550:	add	r0, sl, #144	; 0x90
   13554:	sub	r1, fp, #48	; 0x30
   13558:	bl	128a0 <coda_cursor_read_uint64@plt>
   1355c:	cmp	r0, #0
   13560:	beq	13568 <export_data_element_to_ascii@@Base+0x9a4>
   13564:	bl	17fcc <handle_coda_error@@Base>
   13568:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1356c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13570:	add	r5, sp, #64	; 0x40
   13574:	mov	r2, r5
   13578:	bl	126f0 <coda_str64u@plt>
   1357c:	mov	r0, r5
   13580:	mov	r1, r8
   13584:	bl	12a8c <fputs@plt>
   13588:	b	13608 <export_data_element_to_ascii@@Base+0xa44>
   1358c:	add	r0, sl, #144	; 0x90
   13590:	add	r1, sp, #64	; 0x40
   13594:	bl	1290c <coda_cursor_read_char@plt>
   13598:	cmp	r0, #0
   1359c:	beq	135a4 <export_data_element_to_ascii@@Base+0x9e0>
   135a0:	bl	17fcc <handle_coda_error@@Base>
   135a4:	movw	r0, #53796	; 0xd224
   135a8:	ldrb	r2, [sp, #64]	; 0x40
   135ac:	movt	r0, #2
   135b0:	ldr	r0, [r0]
   135b4:	cmp	r0, #0
   135b8:	beq	135fc <export_data_element_to_ascii@@Base+0xa38>
   135bc:	movw	r1, #39524	; 0x9a64
   135c0:	movt	r1, #1
   135c4:	b	13210 <export_data_element_to_ascii@@Base+0x64c>
   135c8:	vldr	d16, [fp, #-48]	; 0xffffffd0
   135cc:	vmov	r2, r3, d16
   135d0:	movw	r1, #39705	; 0x9b19
   135d4:	movt	r1, #1
   135d8:	mov	r0, r8
   135dc:	bl	128c4 <fprintf@plt>
   135e0:	b	13608 <export_data_element_to_ascii@@Base+0xa44>
   135e4:	mov	r0, r5
   135e8:	mov	r1, r8
   135ec:	bl	12a8c <fputs@plt>
   135f0:	mov	r0, r5
   135f4:	bl	126fc <free@plt>
   135f8:	b	13608 <export_data_element_to_ascii@@Base+0xa44>
   135fc:	mov	r0, r2
   13600:	mov	r1, r8
   13604:	bl	129fc <fputc@plt>
   13608:	mov	r0, #10
   1360c:	mov	r1, r8
   13610:	bl	129fc <fputc@plt>
   13614:	sub	sp, fp, #28
   13618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1361c:	add	r0, sp, #64	; 0x40
   13620:	b	13580 <export_data_element_to_ascii@@Base+0x9bc>
   13624:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13628:	movw	r0, #39746	; 0x9b42
   1362c:	add	r1, sp, #64	; 0x40
   13630:	movt	r0, #1
   13634:	bl	126d8 <coda_time_double_to_string@plt>
   13638:	cmp	r0, #0
   1363c:	beq	131c8 <export_data_element_to_ascii@@Base+0x604>
   13640:	bl	17fcc <handle_coda_error@@Base>
   13644:	b	131c8 <export_data_element_to_ascii@@Base+0x604>
   13648:	movw	r0, #40091	; 0x9c9b
   1364c:	movw	r1, #39582	; 0x9a9e
   13650:	movw	r3, #39711	; 0x9b1f
   13654:	movw	r2, #294	; 0x126
   13658:	movt	r0, #1
   1365c:	movt	r1, #1
   13660:	movt	r3, #1
   13664:	bl	12abc <__assert_fail@plt>

00013668 <print_debug_data@@Base>:
   13668:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1366c:	add	fp, sp, #24
   13670:	sub	sp, sp, #536	; 0x218
   13674:	movw	r7, #49640	; 0xc1e8
   13678:	mov	r6, r0
   1367c:	mov	r5, r1
   13680:	mov	r4, r2
   13684:	sub	r1, fp, #28
   13688:	movt	r7, #2
   1368c:	cmp	r6, #0
   13690:	ldr	r0, [r7]
   13694:	beq	136b8 <print_debug_data@@Base+0x50>
   13698:	str	r1, [sp]
   1369c:	mov	r1, r6
   136a0:	mov	r2, r5
   136a4:	mov	r3, r4
   136a8:	bl	128dc <coda_open_as@plt>
   136ac:	cmp	r0, #0
   136b0:	bne	136c4 <print_debug_data@@Base+0x5c>
   136b4:	b	13720 <print_debug_data@@Base+0xb8>
   136b8:	bl	126c0 <coda_open@plt>
   136bc:	cmp	r0, #0
   136c0:	beq	13720 <print_debug_data@@Base+0xb8>
   136c4:	bl	12a68 <coda_get_errno@plt>
   136c8:	ldr	r0, [r0]
   136cc:	cmn	r0, #21
   136d0:	bne	1371c <print_debug_data@@Base+0xb4>
   136d4:	mov	r0, #0
   136d8:	bl	12708 <coda_set_option_use_mmap@plt>
   136dc:	ldr	r0, [r7]
   136e0:	sub	r1, fp, #28
   136e4:	cmp	r6, #0
   136e8:	beq	13704 <print_debug_data@@Base+0x9c>
   136ec:	str	r1, [sp]
   136f0:	mov	r1, r6
   136f4:	mov	r2, r5
   136f8:	mov	r3, r4
   136fc:	bl	128dc <coda_open_as@plt>
   13700:	b	13708 <print_debug_data@@Base+0xa0>
   13704:	bl	126c0 <coda_open@plt>
   13708:	mov	r4, r0
   1370c:	mov	r0, #1
   13710:	bl	12708 <coda_set_option_use_mmap@plt>
   13714:	cmp	r4, #0
   13718:	beq	13720 <print_debug_data@@Base+0xb8>
   1371c:	bl	17fcc <handle_coda_error@@Base>
   13720:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13724:	add	r1, sp, #4
   13728:	bl	127a4 <coda_get_product_format@plt>
   1372c:	cmp	r0, #0
   13730:	beq	13738 <print_debug_data@@Base+0xd0>
   13734:	bl	17fcc <handle_coda_error@@Base>
   13738:	ldr	r0, [sp, #4]
   1373c:	mov	r1, #0
   13740:	cmp	r0, #3
   13744:	movw	r0, #49576	; 0xc1a8
   13748:	movwcc	r1, #1
   1374c:	movt	r0, #2
   13750:	str	r1, [r0]
   13754:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13758:	add	r0, sp, #8
   1375c:	bl	127ec <coda_cursor_set_product@plt>
   13760:	cmp	r0, #0
   13764:	beq	1376c <print_debug_data@@Base+0x104>
   13768:	bl	17fcc <handle_coda_error@@Base>
   1376c:	movw	r0, #53416	; 0xd0a8
   13770:	movt	r0, #2
   13774:	ldr	r1, [r0]
   13778:	cmp	r1, #0
   1377c:	beq	13794 <print_debug_data@@Base+0x12c>
   13780:	add	r0, sp, #8
   13784:	bl	129cc <coda_cursor_goto@plt>
   13788:	cmp	r0, #0
   1378c:	beq	13794 <print_debug_data@@Base+0x12c>
   13790:	bl	17fcc <handle_coda_error@@Base>
   13794:	mov	r0, #0
   13798:	bl	12660 <coda_set_option_perform_boundary_checks@plt>
   1379c:	add	r0, sp, #8
   137a0:	mov	r1, #0
   137a4:	bl	137b8 <print_debug_data@@Base+0x150>
   137a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   137ac:	bl	129a8 <coda_close@plt>
   137b0:	sub	sp, fp, #24
   137b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   137b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137bc:	add	fp, sp, #28
   137c0:	sub	sp, sp, #644	; 0x284
   137c4:	str	r1, [sp, #24]
   137c8:	sub	r1, fp, #40	; 0x28
   137cc:	mov	r7, r0
   137d0:	bl	12780 <coda_cursor_has_attributes@plt>
   137d4:	cmp	r0, #0
   137d8:	beq	137e0 <print_debug_data@@Base+0x178>
   137dc:	bl	17fcc <handle_coda_error@@Base>
   137e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   137e4:	cmp	r0, #0
   137e8:	beq	13840 <print_debug_data@@Base+0x1d8>
   137ec:	mov	r0, r7
   137f0:	bl	12900 <coda_cursor_goto_attributes@plt>
   137f4:	cmp	r0, #0
   137f8:	beq	13800 <print_debug_data@@Base+0x198>
   137fc:	bl	17fcc <handle_coda_error@@Base>
   13800:	movw	r0, #39824	; 0x9b90
   13804:	movt	r0, #1
   13808:	bl	143e0 <print_debug_data@@Base+0xd78>
   1380c:	movw	r4, #49600	; 0xc1c0
   13810:	ldr	r1, [sp, #24]
   13814:	movt	r4, #2
   13818:	ldr	r0, [r4]
   1381c:	add	r0, r0, #1
   13820:	str	r0, [r4]
   13824:	mov	r0, r7
   13828:	bl	137b8 <print_debug_data@@Base+0x150>
   1382c:	ldr	r0, [r4]
   13830:	sub	r0, r0, #1
   13834:	str	r0, [r4]
   13838:	mov	r0, r7
   1383c:	bl	12864 <coda_cursor_goto_parent@plt>
   13840:	sub	r1, fp, #36	; 0x24
   13844:	mov	r0, r7
   13848:	bl	1278c <coda_cursor_get_type_class@plt>
   1384c:	cmp	r0, #0
   13850:	beq	13858 <print_debug_data@@Base+0x1f0>
   13854:	bl	17fcc <handle_coda_error@@Base>
   13858:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1385c:	cmp	r0, #6
   13860:	bhi	1436c <print_debug_data@@Base+0xd04>
   13864:	add	r1, pc, #4
   13868:	str	r7, [sp, #28]
   1386c:	ldr	pc, [r1, r0, lsl #2]
   13870:	strdeq	r3, [r1], -r4
   13874:	andeq	r3, r1, ip, ror fp
   13878:	andeq	r3, r1, ip, lsl #17
   1387c:	andeq	r3, r1, ip, lsl #17
   13880:	andeq	r3, r1, ip, lsl #17
   13884:	andeq	r3, r1, ip, lsl #17
   13888:	andeq	r3, r1, r8, lsr #24
   1388c:	sub	r1, fp, #96	; 0x60
   13890:	mov	r0, r7
   13894:	bl	1299c <coda_cursor_has_ascii_content@plt>
   13898:	cmp	r0, #0
   1389c:	beq	138a4 <print_debug_data@@Base+0x23c>
   138a0:	bl	17fcc <handle_coda_error@@Base>
   138a4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   138a8:	cmp	r0, #0
   138ac:	beq	13960 <print_debug_data@@Base+0x2f8>
   138b0:	add	r1, sp, #32
   138b4:	mov	r0, r7
   138b8:	bl	12894 <coda_cursor_get_string_length@plt>
   138bc:	cmp	r0, #0
   138c0:	beq	138c8 <print_debug_data@@Base+0x260>
   138c4:	bl	17fcc <handle_coda_error@@Base>
   138c8:	ldr	r0, [sp, #32]
   138cc:	add	r6, r0, #1
   138d0:	mov	r0, r6
   138d4:	bl	12834 <malloc@plt>
   138d8:	mov	r5, r0
   138dc:	cmp	r0, #0
   138e0:	bne	13914 <print_debug_data@@Base+0x2ac>
   138e4:	movw	r1, #39529	; 0x9a69
   138e8:	movw	r3, #39851	; 0x9bab
   138ec:	movw	r0, #410	; 0x19a
   138f0:	mov	r2, r6
   138f4:	str	r0, [sp]
   138f8:	movt	r1, #1
   138fc:	movt	r3, #1
   13900:	mvn	r0, #0
   13904:	bl	126b4 <coda_set_error@plt>
   13908:	bl	17fcc <handle_coda_error@@Base>
   1390c:	ldr	r0, [sp, #32]
   13910:	add	r6, r0, #1
   13914:	mov	r0, r7
   13918:	mov	r1, r5
   1391c:	mov	r2, r6
   13920:	bl	12858 <coda_cursor_read_string@plt>
   13924:	cmp	r0, #0
   13928:	beq	13930 <print_debug_data@@Base+0x2c8>
   1392c:	bl	17fcc <handle_coda_error@@Base>
   13930:	movw	r0, #41360	; 0xa190
   13934:	movt	r0, #1
   13938:	bl	143e0 <print_debug_data@@Base+0xd78>
   1393c:	ldr	r1, [sp, #32]
   13940:	mov	r0, r5
   13944:	bl	144dc <print_debug_data@@Base+0xe74>
   13948:	ldr	r1, [sp, #32]
   1394c:	movw	r0, #39935	; 0x9bff
   13950:	movt	r0, #1
   13954:	bl	14494 <print_debug_data@@Base+0xe2c>
   13958:	mov	r0, r5
   1395c:	bl	126fc <free@plt>
   13960:	sub	r1, fp, #120	; 0x78
   13964:	mov	r0, r7
   13968:	bl	12828 <coda_cursor_get_read_type@plt>
   1396c:	cmp	r0, #0
   13970:	beq	13978 <print_debug_data@@Base+0x310>
   13974:	bl	17fcc <handle_coda_error@@Base>
   13978:	ldr	r0, [fp, #-120]	; 0xffffff88
   1397c:	add	r0, r0, #1
   13980:	cmp	r0, #13
   13984:	bhi	1436c <print_debug_data@@Base+0xd04>
   13988:	add	r1, pc, #0
   1398c:	ldr	pc, [r1, r0, lsl #2]
   13990:	andeq	r3, r1, r8, asr #19
   13994:			; <UNDEFINED> instruction: 0x00013cb0
   13998:	andeq	r3, r1, r8, lsl #25
   1399c:			; <UNDEFINED> instruction: 0x00013cb0
   139a0:	andeq	r3, r1, r8, lsl #25
   139a4:			; <UNDEFINED> instruction: 0x00013cb0
   139a8:	andeq	r3, r1, r8, lsl #25
   139ac:	andeq	r3, r1, r0, ror #26
   139b0:	andeq	r3, r1, r4, lsr #27
   139b4:	ldrdeq	r3, [r1], -r8
   139b8:	ldrdeq	r3, [r1], -r8
   139bc:	andeq	r3, r1, r8, asr #19
   139c0:	andeq	r3, r1, r8, asr #19
   139c4:	andeq	r3, r1, r8, ror #27
   139c8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   139cc:	cmp	r0, #0
   139d0:	bne	1436c <print_debug_data@@Base+0xd04>
   139d4:	movw	r0, #39976	; 0x9c28
   139d8:	movw	r1, #39851	; 0x9bab
   139dc:	movw	r3, #39994	; 0x9c3a
   139e0:	mov	r2, #548	; 0x224
   139e4:	movt	r0, #1
   139e8:	movt	r1, #1
   139ec:	movt	r3, #1
   139f0:	bl	12abc <__assert_fail@plt>
   139f4:	sub	r1, fp, #120	; 0x78
   139f8:	mov	r0, r7
   139fc:	bl	126e4 <coda_cursor_get_num_elements@plt>
   13a00:	cmp	r0, #0
   13a04:	beq	13a0c <print_debug_data@@Base+0x3a4>
   13a08:	bl	17fcc <handle_coda_error@@Base>
   13a0c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13a10:	cmp	r0, #1
   13a14:	blt	1436c <print_debug_data@@Base+0xd04>
   13a18:	sub	r1, fp, #96	; 0x60
   13a1c:	mov	r0, r7
   13a20:	bl	12744 <coda_cursor_get_type@plt>
   13a24:	cmp	r0, #0
   13a28:	beq	13a30 <print_debug_data@@Base+0x3c8>
   13a2c:	bl	17fcc <handle_coda_error@@Base>
   13a30:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13a34:	sub	r1, fp, #44	; 0x2c
   13a38:	bl	12948 <coda_type_get_record_union_status@plt>
   13a3c:	cmp	r0, #0
   13a40:	beq	13a48 <print_debug_data@@Base+0x3e0>
   13a44:	bl	17fcc <handle_coda_error@@Base>
   13a48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a4c:	cmp	r0, #0
   13a50:	beq	13f08 <print_debug_data@@Base+0x8a0>
   13a54:	sub	r1, fp, #48	; 0x30
   13a58:	mov	r0, r7
   13a5c:	bl	12a38 <coda_cursor_get_available_union_field_index@plt>
   13a60:	cmp	r0, #0
   13a64:	beq	13a6c <print_debug_data@@Base+0x404>
   13a68:	bl	17fcc <handle_coda_error@@Base>
   13a6c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13a70:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13a74:	sub	r2, fp, #52	; 0x34
   13a78:	bl	12a80 <coda_type_get_record_field_name@plt>
   13a7c:	cmp	r0, #0
   13a80:	beq	13a88 <print_debug_data@@Base+0x420>
   13a84:	bl	17fcc <handle_coda_error@@Base>
   13a88:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13a8c:	mov	r0, r7
   13a90:	bl	12804 <coda_cursor_goto_record_field_by_index@plt>
   13a94:	cmp	r0, #0
   13a98:	beq	13aa0 <print_debug_data@@Base+0x438>
   13a9c:	bl	17fcc <handle_coda_error@@Base>
   13aa0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13aa4:	movw	r0, #41618	; 0xa292
   13aa8:	movt	r0, #1
   13aac:	bl	143e0 <print_debug_data@@Base+0xd78>
   13ab0:	movw	r0, #49576	; 0xc1a8
   13ab4:	movt	r0, #2
   13ab8:	ldr	r0, [r0]
   13abc:	cmp	r0, #0
   13ac0:	beq	13b2c <print_debug_data@@Base+0x4c4>
   13ac4:	sub	r1, fp, #88	; 0x58
   13ac8:	mov	r0, r7
   13acc:	bl	12a50 <coda_cursor_get_file_bit_offset@plt>
   13ad0:	cmp	r0, #0
   13ad4:	beq	13adc <print_debug_data@@Base+0x474>
   13ad8:	bl	17fcc <handle_coda_error@@Base>
   13adc:	ldr	r1, [fp, #-84]	; 0xffffffac
   13ae0:	cmp	r1, #0
   13ae4:	blt	13b2c <print_debug_data@@Base+0x4c4>
   13ae8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13aec:	add	r5, sp, #32
   13af0:	mov	r2, r5
   13af4:	lsr	r0, r0, #3
   13af8:	orr	r0, r0, r1, lsl #29
   13afc:	lsr	r1, r1, #3
   13b00:	bl	12ab0 <coda_str64@plt>
   13b04:	movw	r0, #39838	; 0x9b9e
   13b08:	mov	r1, r5
   13b0c:	movt	r0, #1
   13b10:	bl	14494 <print_debug_data@@Base+0xe2c>
   13b14:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13b18:	ands	r1, r0, #7
   13b1c:	beq	13b2c <print_debug_data@@Base+0x4c4>
   13b20:	movw	r0, #39842	; 0x9ba2
   13b24:	movt	r0, #1
   13b28:	bl	14494 <print_debug_data@@Base+0xe2c>
   13b2c:	movw	r0, #42177	; 0xa4c1
   13b30:	movt	r0, #1
   13b34:	bl	14494 <print_debug_data@@Base+0xe2c>
   13b38:	movw	r4, #49600	; 0xc1c0
   13b3c:	movt	r4, #2
   13b40:	ldr	r0, [r4]
   13b44:	add	r0, r0, #1
   13b48:	str	r0, [r4]
   13b4c:	movw	r0, #49580	; 0xc1ac
   13b50:	movt	r0, #2
   13b54:	ldr	r0, [r0]
   13b58:	cmp	r0, #0
   13b5c:	blt	14374 <print_debug_data@@Base+0xd0c>
   13b60:	ldr	r1, [sp, #24]
   13b64:	cmp	r0, r1
   13b68:	bgt	14374 <print_debug_data@@Base+0xd0c>
   13b6c:	movw	r0, #39846	; 0x9ba6
   13b70:	movt	r0, #1
   13b74:	bl	143e0 <print_debug_data@@Base+0xd78>
   13b78:	b	14384 <print_debug_data@@Base+0xd1c>
   13b7c:	add	r5, sp, #32
   13b80:	sub	r1, fp, #44	; 0x2c
   13b84:	mov	r0, r7
   13b88:	mov	r2, r5
   13b8c:	bl	12990 <coda_cursor_get_array_dim@plt>
   13b90:	cmp	r0, #0
   13b94:	beq	13b9c <print_debug_data@@Base+0x534>
   13b98:	bl	17fcc <handle_coda_error@@Base>
   13b9c:	ldr	r4, [fp, #-44]	; 0xffffffd4
   13ba0:	cmp	r4, #0
   13ba4:	blt	1436c <print_debug_data@@Base+0xd04>
   13ba8:	beq	140a0 <print_debug_data@@Base+0xa38>
   13bac:	lsl	r2, r4, #2
   13bb0:	sub	r0, fp, #88	; 0x58
   13bb4:	mov	r1, #0
   13bb8:	mov	r8, #0
   13bbc:	bl	12918 <memset@plt>
   13bc0:	mov	r6, #1
   13bc4:	cmp	r4, #4
   13bc8:	bcc	13c00 <print_debug_data@@Base+0x598>
   13bcc:	bic	r8, r4, #3
   13bd0:	vmov.i32	q8, #1	; 0x00000001
   13bd4:	mov	r0, r8
   13bd8:	vld1.32	{d18-d19}, [r5]!
   13bdc:	subs	r0, r0, #4
   13be0:	vmul.i32	q8, q9, q8
   13be4:	bne	13bd8 <print_debug_data@@Base+0x570>
   13be8:	vext.8	q9, q8, q8, #8
   13bec:	cmp	r4, r8
   13bf0:	vmul.i32	q0, q8, q9
   13bf4:	vmul.i32	q8, q0, d0[1]
   13bf8:	vmov.32	r6, d16[0]
   13bfc:	beq	13c1c <print_debug_data@@Base+0x5b4>
   13c00:	add	r1, sp, #32
   13c04:	sub	r0, r4, r8
   13c08:	add	r1, r1, r8, lsl #2
   13c0c:	ldr	r2, [r1], #4
   13c10:	subs	r0, r0, #1
   13c14:	mul	r6, r2, r6
   13c18:	bne	13c0c <print_debug_data@@Base+0x5a4>
   13c1c:	cmp	r6, #1
   13c20:	bge	140a4 <print_debug_data@@Base+0xa3c>
   13c24:	b	1436c <print_debug_data@@Base+0xd04>
   13c28:	sub	r1, fp, #120	; 0x78
   13c2c:	mov	r0, r7
   13c30:	bl	127c8 <coda_cursor_get_special_type@plt>
   13c34:	cmp	r0, #0
   13c38:	beq	13c40 <print_debug_data@@Base+0x5d8>
   13c3c:	bl	17fcc <handle_coda_error@@Base>
   13c40:	ldr	r0, [fp, #-120]	; 0xffffff88
   13c44:	cmp	r0, #0
   13c48:	beq	13d10 <print_debug_data@@Base+0x6a8>
   13c4c:	add	r5, sp, #32
   13c50:	mov	r1, r7
   13c54:	mov	r2, #520	; 0x208
   13c58:	mov	r0, r5
   13c5c:	bl	12750 <memcpy@plt>
   13c60:	mov	r0, r5
   13c64:	bl	12a2c <coda_cursor_use_base_type_of_special_type@plt>
   13c68:	cmp	r0, #0
   13c6c:	beq	13c74 <print_debug_data@@Base+0x60c>
   13c70:	bl	17fcc <handle_coda_error@@Base>
   13c74:	ldr	r1, [sp, #24]
   13c78:	add	r0, sp, #32
   13c7c:	bl	137b8 <print_debug_data@@Base+0x150>
   13c80:	ldr	r0, [fp, #-120]	; 0xffffff88
   13c84:	b	13d14 <print_debug_data@@Base+0x6ac>
   13c88:	add	r1, sp, #32
   13c8c:	mov	r0, r7
   13c90:	bl	12720 <coda_cursor_read_uint32@plt>
   13c94:	cmp	r0, #0
   13c98:	beq	13ca0 <print_debug_data@@Base+0x638>
   13c9c:	bl	17fcc <handle_coda_error@@Base>
   13ca0:	ldr	r1, [sp, #32]
   13ca4:	movw	r0, #39965	; 0x9c1d
   13ca8:	movt	r0, #1
   13cac:	b	13ddc <print_debug_data@@Base+0x774>
   13cb0:	add	r1, sp, #32
   13cb4:	mov	r0, r7
   13cb8:	bl	12a44 <coda_cursor_read_int32@plt>
   13cbc:	cmp	r0, #0
   13cc0:	beq	13cc8 <print_debug_data@@Base+0x660>
   13cc4:	bl	17fcc <handle_coda_error@@Base>
   13cc8:	ldr	r1, [sp, #32]
   13ccc:	movw	r0, #39960	; 0x9c18
   13cd0:	movt	r0, #1
   13cd4:	b	13ddc <print_debug_data@@Base+0x774>
   13cd8:	add	r1, sp, #32
   13cdc:	mov	r0, r7
   13ce0:	bl	128ac <coda_cursor_read_double@plt>
   13ce4:	cmp	r0, #0
   13ce8:	beq	13cf0 <print_debug_data@@Base+0x688>
   13cec:	bl	17fcc <handle_coda_error@@Base>
   13cf0:	vldr	d16, [sp, #32]
   13cf4:	ldr	r0, [fp, #-120]	; 0xffffff88
   13cf8:	vmov	r2, r3, d16
   13cfc:	cmp	r0, #8
   13d00:	bne	13d90 <print_debug_data@@Base+0x728>
   13d04:	movw	r0, #39970	; 0x9c22
   13d08:	movt	r0, #1
   13d0c:	b	13d98 <print_debug_data@@Base+0x730>
   13d10:	mov	r0, #0
   13d14:	bl	12630 <coda_type_get_special_type_name@plt>
   13d18:	mov	r1, r0
   13d1c:	movw	r0, #40030	; 0x9c5e
   13d20:	movt	r0, #1
   13d24:	bl	143e0 <print_debug_data@@Base+0xd78>
   13d28:	ldr	r0, [fp, #-120]	; 0xffffff88
   13d2c:	cmp	r0, #3
   13d30:	bhi	1436c <print_debug_data@@Base+0xd04>
   13d34:	add	r1, pc, #0
   13d38:	ldr	pc, [r1, r0, lsl #2]
   13d3c:	andeq	r3, r1, ip, asr #26
   13d40:	andeq	r4, r1, r0, asr #6
   13d44:	andeq	r4, r1, r0, asr #5
   13d48:	andeq	r4, r1, r8, lsl #6
   13d4c:	movw	r0, #42177	; 0xa4c1
   13d50:	movt	r0, #1
   13d54:	bl	14494 <print_debug_data@@Base+0xe2c>
   13d58:	sub	sp, fp, #28
   13d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d60:	sub	r1, fp, #88	; 0x58
   13d64:	mov	r0, r7
   13d68:	bl	129b4 <coda_cursor_read_int64@plt>
   13d6c:	cmp	r0, #0
   13d70:	beq	13d78 <print_debug_data@@Base+0x710>
   13d74:	bl	17fcc <handle_coda_error@@Base>
   13d78:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13d7c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13d80:	add	r4, sp, #32
   13d84:	mov	r2, r4
   13d88:	bl	12ab0 <coda_str64@plt>
   13d8c:	b	13dd0 <print_debug_data@@Base+0x768>
   13d90:	movw	r0, #40036	; 0x9c64
   13d94:	movt	r0, #1
   13d98:	bl	143e0 <print_debug_data@@Base+0xd78>
   13d9c:	sub	sp, fp, #28
   13da0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13da4:	sub	r1, fp, #88	; 0x58
   13da8:	mov	r0, r7
   13dac:	bl	128a0 <coda_cursor_read_uint64@plt>
   13db0:	cmp	r0, #0
   13db4:	beq	13dbc <print_debug_data@@Base+0x754>
   13db8:	bl	17fcc <handle_coda_error@@Base>
   13dbc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13dc0:	ldr	r1, [fp, #-84]	; 0xffffffac
   13dc4:	add	r4, sp, #32
   13dc8:	mov	r2, r4
   13dcc:	bl	126f0 <coda_str64u@plt>
   13dd0:	movw	r0, #41755	; 0xa31b
   13dd4:	mov	r1, r4
   13dd8:	movt	r0, #1
   13ddc:	bl	143e0 <print_debug_data@@Base+0xd78>
   13de0:	sub	sp, fp, #28
   13de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13de8:	sub	r1, fp, #88	; 0x58
   13dec:	mov	r0, r7
   13df0:	bl	12a14 <coda_cursor_get_bit_size@plt>
   13df4:	cmp	r0, #0
   13df8:	beq	13e00 <print_debug_data@@Base+0x798>
   13dfc:	bl	17fcc <handle_coda_error@@Base>
   13e00:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13e04:	ldr	r5, [fp, #-84]	; 0xffffffac
   13e08:	lsr	r0, r4, #3
   13e0c:	tst	r4, #7
   13e10:	orr	r6, r0, r5, lsl #29
   13e14:	addne	r6, r6, #1
   13e18:	mov	r0, r6
   13e1c:	bl	12834 <malloc@plt>
   13e20:	mov	r8, r0
   13e24:	cmp	r0, #0
   13e28:	bne	13e5c <print_debug_data@@Base+0x7f4>
   13e2c:	movw	r1, #39529	; 0x9a69
   13e30:	movw	r3, #39851	; 0x9bab
   13e34:	movw	r0, #447	; 0x1bf
   13e38:	mov	r2, r6
   13e3c:	str	r0, [sp]
   13e40:	movt	r1, #1
   13e44:	movt	r3, #1
   13e48:	mvn	r0, #0
   13e4c:	bl	126b4 <coda_set_error@plt>
   13e50:	bl	17fcc <handle_coda_error@@Base>
   13e54:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13e58:	ldr	r5, [fp, #-84]	; 0xffffffac
   13e5c:	mov	r0, r7
   13e60:	mov	r1, r8
   13e64:	mov	r2, #0
   13e68:	mov	r3, #0
   13e6c:	stm	sp, {r4, r5}
   13e70:	bl	12aa4 <coda_cursor_read_bits@plt>
   13e74:	cmp	r0, #0
   13e78:	beq	13e80 <print_debug_data@@Base+0x818>
   13e7c:	bl	17fcc <handle_coda_error@@Base>
   13e80:	movw	r0, #41360	; 0xa190
   13e84:	movt	r0, #1
   13e88:	bl	143e0 <print_debug_data@@Base+0xd78>
   13e8c:	mov	r0, r8
   13e90:	mov	r1, r6
   13e94:	bl	144dc <print_debug_data@@Base+0xe74>
   13e98:	movw	r0, #39951	; 0x9c0f
   13e9c:	movt	r0, #1
   13ea0:	bl	14494 <print_debug_data@@Base+0xe2c>
   13ea4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13ea8:	ldr	r1, [fp, #-84]	; 0xffffffac
   13eac:	add	r4, sp, #32
   13eb0:	mov	r2, r4
   13eb4:	lsr	r0, r0, #3
   13eb8:	orr	r0, r0, r1, lsl #29
   13ebc:	asr	r1, r1, #3
   13ec0:	bl	12ab0 <coda_str64@plt>
   13ec4:	movw	r0, #41558	; 0xa256
   13ec8:	mov	r1, r4
   13ecc:	movt	r0, #1
   13ed0:	bl	14494 <print_debug_data@@Base+0xe2c>
   13ed4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13ed8:	ands	r1, r0, #7
   13edc:	beq	13eec <print_debug_data@@Base+0x884>
   13ee0:	movw	r0, #39842	; 0x9ba2
   13ee4:	movt	r0, #1
   13ee8:	bl	14494 <print_debug_data@@Base+0xe2c>
   13eec:	movw	r0, #39948	; 0x9c0c
   13ef0:	movt	r0, #1
   13ef4:	bl	14494 <print_debug_data@@Base+0xe2c>
   13ef8:	mov	r0, r8
   13efc:	bl	126fc <free@plt>
   13f00:	sub	sp, fp, #28
   13f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f08:	mov	r0, r7
   13f0c:	bl	127f8 <coda_cursor_goto_first_record_field@plt>
   13f10:	cmp	r0, #0
   13f14:	beq	13f1c <print_debug_data@@Base+0x8b4>
   13f18:	bl	17fcc <handle_coda_error@@Base>
   13f1c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13f20:	mov	r1, #0
   13f24:	str	r1, [fp, #-48]	; 0xffffffd0
   13f28:	cmp	r0, #1
   13f2c:	blt	14098 <print_debug_data@@Base+0xa30>
   13f30:	ldr	r0, [sp, #24]
   13f34:	movw	r6, #41618	; 0xa292
   13f38:	movw	r7, #49576	; 0xc1a8
   13f3c:	movw	r5, #42177	; 0xa4c1
   13f40:	movw	r9, #49600	; 0xc1c0
   13f44:	movw	r8, #49580	; 0xc1ac
   13f48:	mvn	r4, #0
   13f4c:	movt	r6, #1
   13f50:	movt	r7, #2
   13f54:	movt	r5, #1
   13f58:	movt	r9, #2
   13f5c:	movt	r8, #2
   13f60:	add	r0, r0, #1
   13f64:	str	r0, [sp, #20]
   13f68:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13f6c:	sub	r2, fp, #52	; 0x34
   13f70:	bl	12a80 <coda_type_get_record_field_name@plt>
   13f74:	cmp	r0, #0
   13f78:	beq	13f80 <print_debug_data@@Base+0x918>
   13f7c:	bl	17fcc <handle_coda_error@@Base>
   13f80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13f84:	mov	r0, r6
   13f88:	bl	143e0 <print_debug_data@@Base+0xd78>
   13f8c:	ldr	r0, [r7]
   13f90:	cmp	r0, #0
   13f94:	beq	14004 <print_debug_data@@Base+0x99c>
   13f98:	ldr	r0, [sp, #28]
   13f9c:	sub	r1, fp, #88	; 0x58
   13fa0:	bl	12a50 <coda_cursor_get_file_bit_offset@plt>
   13fa4:	cmp	r0, #0
   13fa8:	beq	13fb0 <print_debug_data@@Base+0x948>
   13fac:	bl	17fcc <handle_coda_error@@Base>
   13fb0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13fb4:	ldr	r1, [fp, #-84]	; 0xffffffac
   13fb8:	subs	r2, r4, r0
   13fbc:	sbcs	r2, r4, r1
   13fc0:	bge	14004 <print_debug_data@@Base+0x99c>
   13fc4:	lsr	r0, r0, #3
   13fc8:	add	sl, sp, #32
   13fcc:	orr	r0, r0, r1, lsl #29
   13fd0:	lsr	r1, r1, #3
   13fd4:	mov	r2, sl
   13fd8:	bl	12ab0 <coda_str64@plt>
   13fdc:	movw	r0, #39838	; 0x9b9e
   13fe0:	mov	r1, sl
   13fe4:	movt	r0, #1
   13fe8:	bl	14494 <print_debug_data@@Base+0xe2c>
   13fec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13ff0:	ands	r1, r0, #7
   13ff4:	beq	14004 <print_debug_data@@Base+0x99c>
   13ff8:	movw	r0, #39842	; 0x9ba2
   13ffc:	movt	r0, #1
   14000:	bl	14494 <print_debug_data@@Base+0xe2c>
   14004:	mov	r0, r5
   14008:	bl	14494 <print_debug_data@@Base+0xe2c>
   1400c:	ldr	r0, [r9]
   14010:	add	r0, r0, #1
   14014:	str	r0, [r9]
   14018:	ldr	r0, [r8]
   1401c:	cmp	r0, #0
   14020:	blt	14040 <print_debug_data@@Base+0x9d8>
   14024:	ldr	r1, [sp, #24]
   14028:	cmp	r0, r1
   1402c:	bgt	14040 <print_debug_data@@Base+0x9d8>
   14030:	movw	r0, #39846	; 0x9ba6
   14034:	movt	r0, #1
   14038:	bl	143e0 <print_debug_data@@Base+0xd78>
   1403c:	b	1404c <print_debug_data@@Base+0x9e4>
   14040:	ldr	r0, [sp, #28]
   14044:	ldr	r1, [sp, #20]
   14048:	bl	137b8 <print_debug_data@@Base+0x150>
   1404c:	ldr	r0, [r9]
   14050:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14054:	sub	r0, r0, #1
   14058:	str	r0, [r9]
   1405c:	ldr	r0, [fp, #-120]	; 0xffffff88
   14060:	sub	r0, r0, #1
   14064:	cmp	r1, r0
   14068:	bge	14080 <print_debug_data@@Base+0xa18>
   1406c:	ldr	r0, [sp, #28]
   14070:	bl	129f0 <coda_cursor_goto_next_record_field@plt>
   14074:	cmp	r0, #0
   14078:	beq	14080 <print_debug_data@@Base+0xa18>
   1407c:	bl	17fcc <handle_coda_error@@Base>
   14080:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14084:	add	r1, r0, #1
   14088:	ldr	r0, [fp, #-120]	; 0xffffff88
   1408c:	str	r1, [fp, #-48]	; 0xffffffd0
   14090:	cmp	r1, r0
   14094:	blt	13f68 <print_debug_data@@Base+0x900>
   14098:	ldr	r0, [sp, #28]
   1409c:	b	14394 <print_debug_data@@Base+0xd2c>
   140a0:	mov	r6, #1
   140a4:	mov	r0, r7
   140a8:	bl	127d4 <coda_cursor_goto_first_array_element@plt>
   140ac:	cmp	r0, #0
   140b0:	beq	140b8 <print_debug_data@@Base+0xa50>
   140b4:	bl	17fcc <handle_coda_error@@Base>
   140b8:	sub	r0, r6, #1
   140bc:	movw	r5, #39843	; 0x9ba3
   140c0:	movw	r7, #40274	; 0x9d52
   140c4:	str	r6, [sp, #20]
   140c8:	mov	r8, #0
   140cc:	sub	r6, fp, #88	; 0x58
   140d0:	add	r4, sp, #32
   140d4:	mov	sl, #0
   140d8:	str	r0, [sp, #16]
   140dc:	ldr	r0, [sp, #24]
   140e0:	movt	r5, #1
   140e4:	movt	r7, #1
   140e8:	add	r0, r0, #1
   140ec:	str	r0, [sp, #12]
   140f0:	movw	r0, #40286	; 0x9d5e
   140f4:	movt	r0, #1
   140f8:	bl	143e0 <print_debug_data@@Base+0xd78>
   140fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14100:	cmp	r0, #1
   14104:	blt	14140 <print_debug_data@@Base+0xad8>
   14108:	mov	r9, #0
   1410c:	ldr	r1, [r6, r9, lsl #2]
   14110:	mov	r0, r5
   14114:	bl	14494 <print_debug_data@@Base+0xe2c>
   14118:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1411c:	sub	r1, r0, #1
   14120:	cmp	r9, r1
   14124:	bge	14134 <print_debug_data@@Base+0xacc>
   14128:	mov	r0, r7
   1412c:	bl	14494 <print_debug_data@@Base+0xe2c>
   14130:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14134:	add	r9, r9, #1
   14138:	cmp	r9, r0
   1413c:	blt	1410c <print_debug_data@@Base+0xaa4>
   14140:	movw	r0, #41503	; 0xa21f
   14144:	movt	r0, #1
   14148:	bl	14494 <print_debug_data@@Base+0xe2c>
   1414c:	movw	r0, #49576	; 0xc1a8
   14150:	ldr	r9, [sp, #28]
   14154:	movt	r0, #2
   14158:	ldr	r0, [r0]
   1415c:	cmp	r0, #0
   14160:	beq	141d0 <print_debug_data@@Base+0xb68>
   14164:	mov	r0, r9
   14168:	sub	r1, fp, #96	; 0x60
   1416c:	bl	12a50 <coda_cursor_get_file_bit_offset@plt>
   14170:	cmp	r0, #0
   14174:	beq	1417c <print_debug_data@@Base+0xb14>
   14178:	bl	17fcc <handle_coda_error@@Base>
   1417c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14180:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14184:	mvn	r3, #0
   14188:	subs	r2, r3, r0
   1418c:	sbcs	r2, r3, r1
   14190:	bge	141d0 <print_debug_data@@Base+0xb68>
   14194:	lsr	r0, r0, #3
   14198:	sub	r2, fp, #120	; 0x78
   1419c:	orr	r0, r0, r1, lsl #29
   141a0:	lsr	r1, r1, #3
   141a4:	bl	12ab0 <coda_str64@plt>
   141a8:	movw	r0, #39838	; 0x9b9e
   141ac:	sub	r1, fp, #120	; 0x78
   141b0:	movt	r0, #1
   141b4:	bl	14494 <print_debug_data@@Base+0xe2c>
   141b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   141bc:	ands	r1, r0, #7
   141c0:	beq	141d0 <print_debug_data@@Base+0xb68>
   141c4:	movw	r0, #39842	; 0x9ba2
   141c8:	movt	r0, #1
   141cc:	bl	14494 <print_debug_data@@Base+0xe2c>
   141d0:	movw	r0, #42177	; 0xa4c1
   141d4:	movt	r0, #1
   141d8:	bl	14494 <print_debug_data@@Base+0xe2c>
   141dc:	movw	r0, #49600	; 0xc1c0
   141e0:	movt	r0, #2
   141e4:	mov	r1, r0
   141e8:	ldr	r0, [r0]
   141ec:	add	r0, r0, #1
   141f0:	str	r0, [r1]
   141f4:	movw	r0, #49580	; 0xc1ac
   141f8:	movt	r0, #2
   141fc:	ldr	r0, [r0]
   14200:	cmp	r0, #0
   14204:	blt	14224 <print_debug_data@@Base+0xbbc>
   14208:	ldr	r1, [sp, #24]
   1420c:	cmp	r0, r1
   14210:	bgt	14224 <print_debug_data@@Base+0xbbc>
   14214:	movw	r0, #39846	; 0x9ba6
   14218:	movt	r0, #1
   1421c:	bl	143e0 <print_debug_data@@Base+0xd78>
   14220:	b	14230 <print_debug_data@@Base+0xbc8>
   14224:	ldr	r1, [sp, #12]
   14228:	mov	r0, r9
   1422c:	bl	137b8 <print_debug_data@@Base+0x150>
   14230:	movw	r0, #49600	; 0xc1c0
   14234:	movt	r0, #2
   14238:	mov	r1, r0
   1423c:	ldr	r0, [r0]
   14240:	sub	r0, r0, #1
   14244:	str	r0, [r1]
   14248:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1424c:	cmp	r0, #1
   14250:	blt	14288 <print_debug_data@@Base+0xc20>
   14254:	sub	r0, r0, #1
   14258:	ldr	r1, [r6, r0, lsl #2]
   1425c:	ldr	r2, [r4, r0, lsl #2]
   14260:	add	r1, r1, #1
   14264:	cmp	r1, r2
   14268:	str	r1, [r6, r0, lsl #2]
   1426c:	bne	14288 <print_debug_data@@Base+0xc20>
   14270:	str	r8, [r6, r0, lsl #2]
   14274:	sub	r1, r0, #1
   14278:	add	r0, r0, #1
   1427c:	cmp	r0, #1
   14280:	mov	r0, r1
   14284:	bgt	14258 <print_debug_data@@Base+0xbf0>
   14288:	ldr	r0, [sp, #16]
   1428c:	cmp	sl, r0
   14290:	bge	142a8 <print_debug_data@@Base+0xc40>
   14294:	mov	r0, r9
   14298:	bl	128d0 <coda_cursor_goto_next_array_element@plt>
   1429c:	cmp	r0, #0
   142a0:	beq	142a8 <print_debug_data@@Base+0xc40>
   142a4:	bl	17fcc <handle_coda_error@@Base>
   142a8:	ldr	r0, [sp, #20]
   142ac:	add	sl, sl, #1
   142b0:	cmp	sl, r0
   142b4:	bne	140f0 <print_debug_data@@Base+0xa88>
   142b8:	mov	r0, r9
   142bc:	b	14394 <print_debug_data@@Base+0xd2c>
   142c0:	sub	r1, fp, #88	; 0x58
   142c4:	mov	r0, r7
   142c8:	bl	128ac <coda_cursor_read_double@plt>
   142cc:	cmp	r0, #0
   142d0:	beq	142d8 <print_debug_data@@Base+0xc70>
   142d4:	bl	17fcc <handle_coda_error@@Base>
   142d8:	vldr	d0, [fp, #-88]	; 0xffffffa8
   142dc:	bl	128b8 <coda_isNaN@plt>
   142e0:	cmp	r0, #0
   142e4:	bne	142f8 <print_debug_data@@Base+0xc90>
   142e8:	vldr	d0, [fp, #-88]	; 0xffffffa8
   142ec:	bl	1275c <coda_isInf@plt>
   142f0:	cmp	r0, #0
   142f4:	beq	143a0 <print_debug_data@@Base+0xd38>
   142f8:	vldr	d16, [fp, #-88]	; 0xffffffa8
   142fc:	movw	r0, #40035	; 0x9c63
   14300:	movt	r0, #1
   14304:	b	14364 <print_debug_data@@Base+0xcfc>
   14308:	add	r1, sp, #32
   1430c:	sub	r2, fp, #88	; 0x58
   14310:	mov	r0, r7
   14314:	bl	12954 <coda_cursor_read_complex_double_split@plt>
   14318:	cmp	r0, #0
   1431c:	beq	14324 <print_debug_data@@Base+0xcbc>
   14320:	bl	17fcc <handle_coda_error@@Base>
   14324:	vldr	d16, [sp, #32]
   14328:	vldr	d17, [fp, #-88]	; 0xffffffa8
   1432c:	movw	r0, #40070	; 0x9c86
   14330:	movt	r0, #1
   14334:	vmov	r2, r3, d16
   14338:	vstr	d17, [sp]
   1433c:	b	14368 <print_debug_data@@Base+0xd00>
   14340:	add	r1, sp, #32
   14344:	mov	r0, r7
   14348:	bl	128ac <coda_cursor_read_double@plt>
   1434c:	cmp	r0, #0
   14350:	beq	14358 <print_debug_data@@Base+0xcf0>
   14354:	bl	17fcc <handle_coda_error@@Base>
   14358:	vldr	d16, [sp, #32]
   1435c:	movw	r0, #40036	; 0x9c64
   14360:	movt	r0, #1
   14364:	vmov	r2, r3, d16
   14368:	bl	14494 <print_debug_data@@Base+0xe2c>
   1436c:	sub	sp, fp, #28
   14370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14374:	ldr	r0, [sp, #24]
   14378:	add	r1, r0, #1
   1437c:	mov	r0, r7
   14380:	bl	137b8 <print_debug_data@@Base+0x150>
   14384:	ldr	r0, [r4]
   14388:	sub	r0, r0, #1
   1438c:	str	r0, [r4]
   14390:	mov	r0, r7
   14394:	bl	12864 <coda_cursor_goto_parent@plt>
   14398:	sub	sp, fp, #28
   1439c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143a0:	vldr	d0, [fp, #-88]	; 0xffffffa8
   143a4:	movw	r0, #39746	; 0x9b42
   143a8:	add	r1, sp, #32
   143ac:	movt	r0, #1
   143b0:	bl	126d8 <coda_time_double_to_string@plt>
   143b4:	cmp	r0, #0
   143b8:	beq	143c8 <print_debug_data@@Base+0xd60>
   143bc:	movw	r0, #40043	; 0x9c6b
   143c0:	movt	r0, #1
   143c4:	b	13d54 <print_debug_data@@Base+0x6ec>
   143c8:	movw	r0, #41754	; 0xa31a
   143cc:	add	r1, sp, #32
   143d0:	movt	r0, #1
   143d4:	bl	14494 <print_debug_data@@Base+0xe2c>
   143d8:	sub	sp, fp, #28
   143dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143e0:	sub	sp, sp, #12
   143e4:	push	{r4, r5, r6, r7, fp, lr}
   143e8:	add	fp, sp, #16
   143ec:	sub	sp, sp, #4
   143f0:	mov	r4, r0
   143f4:	add	r0, fp, #8
   143f8:	stm	r0, {r1, r2, r3}
   143fc:	movw	r0, #49600	; 0xc1c0
   14400:	movt	r0, #2
   14404:	ldr	r0, [r0]
   14408:	cmp	r0, #0
   1440c:	blt	14474 <print_debug_data@@Base+0xe0c>
   14410:	beq	14448 <print_debug_data@@Base+0xde0>
   14414:	movw	r7, #53392	; 0xd090
   14418:	movw	r5, #40111	; 0x9caf
   1441c:	add	r6, r0, #1
   14420:	movt	r7, #2
   14424:	movt	r5, #1
   14428:	ldr	r3, [r7]
   1442c:	mov	r0, r5
   14430:	mov	r1, #2
   14434:	mov	r2, #1
   14438:	bl	127e0 <fwrite@plt>
   1443c:	sub	r6, r6, #1
   14440:	cmp	r6, #1
   14444:	bgt	14428 <print_debug_data@@Base+0xdc0>
   14448:	movw	r0, #53392	; 0xd090
   1444c:	add	r2, fp, #8
   14450:	mov	r1, r4
   14454:	movt	r0, #2
   14458:	str	r2, [sp]
   1445c:	ldr	r0, [r0]
   14460:	bl	129c0 <vfprintf@plt>
   14464:	sub	sp, fp, #16
   14468:	pop	{r4, r5, r6, r7, fp, lr}
   1446c:	add	sp, sp, #12
   14470:	bx	lr
   14474:	movw	r0, #40081	; 0x9c91
   14478:	movw	r1, #39851	; 0x9bab
   1447c:	movw	r3, #40093	; 0x9c9d
   14480:	mov	r2, #44	; 0x2c
   14484:	movt	r0, #1
   14488:	movt	r1, #1
   1448c:	movt	r3, #1
   14490:	bl	12abc <__assert_fail@plt>
   14494:	sub	sp, sp, #12
   14498:	push	{fp, lr}
   1449c:	mov	fp, sp
   144a0:	sub	sp, sp, #4
   144a4:	mov	ip, r0
   144a8:	add	r0, fp, #8
   144ac:	stm	r0, {r1, r2, r3}
   144b0:	movw	r0, #53392	; 0xd090
   144b4:	add	r2, fp, #8
   144b8:	mov	r1, ip
   144bc:	movt	r0, #2
   144c0:	str	r2, [sp]
   144c4:	ldr	r0, [r0]
   144c8:	bl	129c0 <vfprintf@plt>
   144cc:	mov	sp, fp
   144d0:	pop	{fp, lr}
   144d4:	add	sp, sp, #12
   144d8:	bx	lr
   144dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144e0:	add	fp, sp, #28
   144e4:	sub	sp, sp, #4
   144e8:	cmp	r1, #1
   144ec:	blt	145fc <print_debug_data@@Base+0xf94>
   144f0:	movw	r8, #39672	; 0x9af8
   144f4:	movw	r9, #39675	; 0x9afb
   144f8:	movw	sl, #39678	; 0x9afe
   144fc:	movw	r7, #39681	; 0x9b01
   14500:	movw	r6, #39684	; 0x9b04
   14504:	mov	r4, r1
   14508:	mov	r5, r0
   1450c:	movt	r8, #1
   14510:	movt	r9, #1
   14514:	movt	sl, #1
   14518:	movt	r7, #1
   1451c:	movt	r6, #1
   14520:	ldrb	r1, [r5]
   14524:	sub	r0, r1, #7
   14528:	cmp	r0, #6
   1452c:	bhi	14564 <print_debug_data@@Base+0xefc>
   14530:	add	r1, pc, #0
   14534:	ldr	pc, [r1, r0, lsl #2]
   14538:	andeq	r4, r1, r4, asr r5
   1453c:	andeq	r4, r1, ip, ror r5
   14540:	andeq	r4, r1, ip, lsl #11
   14544:	muleq	r1, r8, r5
   14548:	andeq	r4, r1, r4, lsr #11
   1454c:			; <UNDEFINED> instruction: 0x000145b0
   14550:			; <UNDEFINED> instruction: 0x000145bc
   14554:	movw	r0, #39666	; 0x9af2
   14558:	movt	r0, #1
   1455c:	bl	14494 <print_debug_data@@Base+0xe2c>
   14560:	b	145f0 <print_debug_data@@Base+0xf88>
   14564:	cmp	r1, #92	; 0x5c
   14568:	bne	145c8 <print_debug_data@@Base+0xf60>
   1456c:	movw	r0, #39687	; 0x9b07
   14570:	movt	r0, #1
   14574:	bl	14494 <print_debug_data@@Base+0xe2c>
   14578:	b	145f0 <print_debug_data@@Base+0xf88>
   1457c:	movw	r0, #39669	; 0x9af5
   14580:	movt	r0, #1
   14584:	bl	14494 <print_debug_data@@Base+0xe2c>
   14588:	b	145f0 <print_debug_data@@Base+0xf88>
   1458c:	mov	r0, r8
   14590:	bl	14494 <print_debug_data@@Base+0xe2c>
   14594:	b	145f0 <print_debug_data@@Base+0xf88>
   14598:	mov	r0, r9
   1459c:	bl	14494 <print_debug_data@@Base+0xe2c>
   145a0:	b	145f0 <print_debug_data@@Base+0xf88>
   145a4:	mov	r0, sl
   145a8:	bl	14494 <print_debug_data@@Base+0xe2c>
   145ac:	b	145f0 <print_debug_data@@Base+0xf88>
   145b0:	mov	r0, r7
   145b4:	bl	14494 <print_debug_data@@Base+0xe2c>
   145b8:	b	145f0 <print_debug_data@@Base+0xf88>
   145bc:	mov	r0, r6
   145c0:	bl	14494 <print_debug_data@@Base+0xe2c>
   145c4:	b	145f0 <print_debug_data@@Base+0xf88>
   145c8:	sub	r0, r1, #32
   145cc:	uxtb	r0, r0
   145d0:	cmp	r0, #94	; 0x5e
   145d4:	bhi	145e4 <print_debug_data@@Base+0xf7c>
   145d8:	movw	r0, #40114	; 0x9cb2
   145dc:	movt	r0, #1
   145e0:	b	145ec <print_debug_data@@Base+0xf84>
   145e4:	movw	r0, #39690	; 0x9b0a
   145e8:	movt	r0, #1
   145ec:	bl	14494 <print_debug_data@@Base+0xe2c>
   145f0:	subs	r4, r4, #1
   145f4:	add	r5, r5, #1
   145f8:	bne	14520 <print_debug_data@@Base+0xeb8>
   145fc:	sub	sp, fp, #28
   14600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014604 <dim_info_init@@Base>:
   14604:	movw	r0, #53424	; 0xd0b0
   14608:	mov	r1, #0
   1460c:	movt	r0, #2
   14610:	str	r1, [r0, #68]	; 0x44
   14614:	str	r1, [r0]
   14618:	mvn	r1, #0
   1461c:	str	r1, [r0, #104]	; 0x68
   14620:	bx	lr

00014624 <dim_info_done@@Base>:
   14624:	bx	lr

00014628 <print_all_distinct_dims@@Base>:
   14628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1462c:	add	fp, sp, #28
   14630:	sub	sp, sp, #4
   14634:	movw	r9, #53424	; 0xd0b0
   14638:	mov	sl, r0
   1463c:	movt	r9, #2
   14640:	ldr	r0, [r9]
   14644:	cmp	r0, sl
   14648:	ble	147d4 <print_all_distinct_dims@@Base+0x1ac>
   1464c:	add	r8, r9, sl, lsl #2
   14650:	ldr	r0, [r8, #72]	; 0x48
   14654:	cmp	r0, #0
   14658:	subeq	sp, fp, #28
   1465c:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14660:	mov	r7, r8
   14664:	mov	r5, #4
   14668:	ldr	r0, [r7, #4]!
   1466c:	add	r6, r5, r0, lsl #2
   14670:	mov	r0, r6
   14674:	bl	12834 <malloc@plt>
   14678:	mov	r4, r0
   1467c:	cmp	r0, #0
   14680:	bne	146b4 <print_all_distinct_dims@@Base+0x8c>
   14684:	movw	r1, #39529	; 0x9a69
   14688:	movw	r3, #40144	; 0x9cd0
   1468c:	mov	r0, #61	; 0x3d
   14690:	mov	r2, r6
   14694:	str	r0, [sp]
   14698:	movt	r1, #1
   1469c:	movt	r3, #1
   146a0:	mvn	r0, #0
   146a4:	bl	126b4 <coda_set_error@plt>
   146a8:	bl	17fcc <handle_coda_error@@Base>
   146ac:	ldr	r0, [r7]
   146b0:	add	r6, r5, r0, lsl #2
   146b4:	mov	r0, r4
   146b8:	mov	r1, #0
   146bc:	mov	r2, r6
   146c0:	mov	r5, #0
   146c4:	bl	12918 <memset@plt>
   146c8:	ldr	r0, [r8, #140]	; 0x8c
   146cc:	add	r0, r9, r0, lsl #3
   146d0:	ldrd	r0, [r0, #232]	; 0xe8
   146d4:	subs	r2, r0, #1
   146d8:	sbcs	r2, r1, #0
   146dc:	blt	14708 <print_all_distinct_dims@@Base+0xe0>
   146e0:	ldr	r2, [r8, #108]	; 0x6c
   146e4:	ldr	r3, [r2, r5, lsl #2]
   146e8:	add	r5, r5, #1
   146ec:	cmp	r3, #0
   146f0:	ldrge	r6, [r4, r3, lsl #2]
   146f4:	addge	r6, r6, #1
   146f8:	strge	r6, [r4, r3, lsl #2]
   146fc:	subs	r3, r5, r0
   14700:	rscs	r3, r1, #0
   14704:	blt	146e4 <print_all_distinct_dims@@Base+0xbc>
   14708:	movw	r0, #40260	; 0x9d44
   1470c:	add	r1, sl, #1
   14710:	movt	r0, #1
   14714:	bl	12690 <printf@plt>
   14718:	ldr	r5, [r8, #36]!	; 0x24
   1471c:	ldr	r1, [r7]
   14720:	cmp	r5, r1
   14724:	bge	14758 <print_all_distinct_dims@@Base+0x130>
   14728:	movw	r6, #40272	; 0x9d50
   1472c:	movt	r6, #1
   14730:	ldr	r0, [r4, r5, lsl #2]
   14734:	cmp	r0, #1
   14738:	blt	1474c <print_all_distinct_dims@@Base+0x124>
   1473c:	mov	r0, r6
   14740:	mov	r1, r5
   14744:	bl	12690 <printf@plt>
   14748:	ldr	r1, [r7]
   1474c:	add	r5, r5, #1
   14750:	cmp	r5, r1
   14754:	blt	14730 <print_all_distinct_dims@@Base+0x108>
   14758:	movw	r0, #40276	; 0x9d54
   1475c:	movt	r0, #1
   14760:	bl	12690 <printf@plt>
   14764:	movw	r0, #40280	; 0x9d58
   14768:	movt	r0, #1
   1476c:	bl	12690 <printf@plt>
   14770:	ldr	r0, [r7]
   14774:	ldr	r6, [r8]
   14778:	cmp	r6, r0
   1477c:	bge	147ac <print_all_distinct_dims@@Base+0x184>
   14780:	movw	r5, #40272	; 0x9d50
   14784:	movt	r5, #1
   14788:	ldr	r1, [r4, r6, lsl #2]
   1478c:	cmp	r1, #1
   14790:	blt	147a0 <print_all_distinct_dims@@Base+0x178>
   14794:	mov	r0, r5
   14798:	bl	12690 <printf@plt>
   1479c:	ldr	r0, [r7]
   147a0:	add	r6, r6, #1
   147a4:	cmp	r6, r0
   147a8:	blt	14788 <print_all_distinct_dims@@Base+0x160>
   147ac:	ldr	r1, [r4, r0, lsl #2]
   147b0:	movw	r0, #40276	; 0x9d54
   147b4:	movt	r0, #1
   147b8:	bl	12690 <printf@plt>
   147bc:	mov	r0, #10
   147c0:	bl	12924 <putchar@plt>
   147c4:	mov	r0, r4
   147c8:	sub	sp, fp, #28
   147cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147d0:	b	126fc <free@plt>
   147d4:	movw	r0, #40117	; 0x9cb5
   147d8:	movw	r1, #40144	; 0x9cd0
   147dc:	movw	r3, #40226	; 0x9d22
   147e0:	mov	r2, #50	; 0x32
   147e4:	movt	r0, #1
   147e8:	movt	r1, #1
   147ec:	movt	r3, #1
   147f0:	bl	12abc <__assert_fail@plt>

000147f4 <dim_enter_array@@Base>:
   147f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147f8:	add	fp, sp, #28
   147fc:	sub	sp, sp, #76	; 0x4c
   14800:	movw	r4, #49640	; 0xc1e8
   14804:	sub	r1, fp, #32
   14808:	movt	r4, #2
   1480c:	ldr	r0, [r4, #136]	; 0x88
   14810:	ldr	r5, [r4, #3360]	; 0xd20
   14814:	add	r0, r4, r0, lsl #2
   14818:	ldr	r0, [r0, #8]
   1481c:	bl	12ac8 <coda_type_get_class@plt>
   14820:	cmp	r0, #0
   14824:	beq	1482c <dim_enter_array@@Base+0x38>
   14828:	bl	17fcc <handle_coda_error@@Base>
   1482c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14830:	sub	r0, r0, #1
   14834:	cmp	r0, #5
   14838:	bhi	14f5c <dim_enter_array@@Base+0x768>
   1483c:	add	r1, r5, r5, lsl #2
   14840:	add	r5, r4, r1, lsl #4
   14844:	add	r1, pc, #0
   14848:	ldr	pc, [r1, r0, lsl #2]
   1484c:	andeq	r4, r1, r4, ror #16
   14850:	andeq	r4, r1, ip, asr pc
   14854:	andeq	r4, r1, ip, asr pc
   14858:	andeq	r4, r1, r8, ror #17
   1485c:	andeq	r4, r1, r8, lsl r9
   14860:	andeq	r4, r1, ip, lsr #17
   14864:	ldr	r0, [r4, #136]	; 0x88
   14868:	add	r1, sp, #36	; 0x24
   1486c:	add	r2, sp, #40	; 0x28
   14870:	add	r0, r4, r0, lsl #2
   14874:	ldr	r0, [r0, #8]
   14878:	bl	12a08 <coda_type_get_array_dim@plt>
   1487c:	cmp	r0, #0
   14880:	beq	14888 <dim_enter_array@@Base+0x94>
   14884:	bl	17fcc <handle_coda_error@@Base>
   14888:	ldr	sl, [sp, #36]	; 0x24
   1488c:	cmp	sl, #1
   14890:	str	sl, [r5, #804]	; 0x324
   14894:	blt	1496c <dim_enter_array@@Base+0x178>
   14898:	add	r0, r5, #808	; 0x328
   1489c:	lsl	r2, sl, #2
   148a0:	add	r1, sp, #40	; 0x28
   148a4:	bl	12750 <memcpy@plt>
   148a8:	b	1496c <dim_enter_array@@Base+0x178>
   148ac:	ldr	r0, [r4, #136]	; 0x88
   148b0:	add	r1, sp, #40	; 0x28
   148b4:	add	r0, r4, r0, lsl #2
   148b8:	ldr	r0, [r0, #8]
   148bc:	bl	1293c <coda_type_get_special_type@plt>
   148c0:	cmp	r0, #0
   148c4:	beq	148cc <dim_enter_array@@Base+0xd8>
   148c8:	bl	17fcc <handle_coda_error@@Base>
   148cc:	ldr	r0, [sp, #40]	; 0x28
   148d0:	cmp	r0, #3
   148d4:	bne	14f9c <dim_enter_array@@Base+0x7a8>
   148d8:	mov	sl, #1
   148dc:	mov	r0, #2
   148e0:	str	sl, [r5, #804]	; 0x324
   148e4:	b	14968 <dim_enter_array@@Base+0x174>
   148e8:	ldr	r0, [r4, #136]	; 0x88
   148ec:	add	r1, sp, #40	; 0x28
   148f0:	add	r0, r4, r0, lsl #2
   148f4:	ldr	r0, [r0, #8]
   148f8:	bl	12978 <coda_type_get_string_length@plt>
   148fc:	cmp	r0, #0
   14900:	beq	14908 <dim_enter_array@@Base+0x114>
   14904:	bl	17fcc <handle_coda_error@@Base>
   14908:	ldr	r0, [sp, #40]	; 0x28
   1490c:	mov	sl, #1
   14910:	str	sl, [r5, #804]	; 0x324
   14914:	b	14968 <dim_enter_array@@Base+0x174>
   14918:	ldr	r0, [r4, #136]	; 0x88
   1491c:	add	r1, sp, #40	; 0x28
   14920:	add	r0, r4, r0, lsl #2
   14924:	ldr	r0, [r0, #8]
   14928:	bl	12768 <coda_type_get_bit_size@plt>
   1492c:	cmp	r0, #0
   14930:	beq	14938 <dim_enter_array@@Base+0x144>
   14934:	bl	17fcc <handle_coda_error@@Base>
   14938:	ldr	r0, [sp, #44]	; 0x2c
   1493c:	mov	sl, #1
   14940:	str	sl, [r5, #804]	; 0x324
   14944:	cmp	r0, #0
   14948:	blt	14964 <dim_enter_array@@Base+0x170>
   1494c:	ldr	r1, [sp, #40]	; 0x28
   14950:	lsr	r2, r1, #3
   14954:	tst	r1, #7
   14958:	orr	r0, r2, r0, lsl #29
   1495c:	addne	r0, r0, #1
   14960:	b	14968 <dim_enter_array@@Base+0x174>
   14964:	mvn	r0, #0
   14968:	str	r0, [r5, #808]	; 0x328
   1496c:	movw	r1, #49636	; 0xc1e4
   14970:	add	r0, r5, #800	; 0x320
   14974:	movt	r1, #2
   14978:	ldr	r1, [r1]
   1497c:	cmp	r1, #0
   14980:	beq	149f4 <dim_enter_array@@Base+0x200>
   14984:	movw	r8, #53424	; 0xd0b0
   14988:	str	r5, [sp, #16]
   1498c:	movt	r8, #2
   14990:	ldr	r6, [r8]
   14994:	add	r3, sl, r6
   14998:	str	r6, [r0]
   1499c:	cmp	r3, #9
   149a0:	bge	14f7c <dim_enter_array@@Base+0x788>
   149a4:	cmp	r6, #0
   149a8:	str	r3, [r8]
   149ac:	str	r6, [sp, #20]
   149b0:	ble	14a10 <dim_enter_array@@Base+0x21c>
   149b4:	add	r0, r8, r6, lsl #3
   149b8:	ldr	r1, [r0, #232]	; 0xe8
   149bc:	ldr	r2, [r0, #236]	; 0xec
   149c0:	str	r2, [sp, #28]
   149c4:	ldr	r2, [r0, #296]	; 0x128
   149c8:	str	r1, [sp, #32]
   149cc:	ldr	r1, [r0, #300]	; 0x12c
   149d0:	rsbs	r0, r2, #0
   149d4:	str	r2, [sp, #8]
   149d8:	str	r1, [sp, #12]
   149dc:	mov	r0, r1
   149e0:	rscs	r0, r1, #0
   149e4:	bge	14bc4 <dim_enter_array@@Base+0x3d0>
   149e8:	cmp	sl, #1
   149ec:	bge	14a38 <dim_enter_array@@Base+0x244>
   149f0:	b	14c4c <dim_enter_array@@Base+0x458>
   149f4:	mvn	r1, #0
   149f8:	str	r1, [r0]
   149fc:	mov	r0, #0
   14a00:	str	r0, [r5, #840]	; 0x348
   14a04:	str	r0, [r5, #844]	; 0x34c
   14a08:	sub	sp, fp, #28
   14a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a10:	mov	r0, #0
   14a14:	cmp	sl, #0
   14a18:	str	r0, [sp, #12]
   14a1c:	mov	r0, #1
   14a20:	str	r0, [sp, #8]
   14a24:	mov	r0, #1
   14a28:	str	r0, [sp, #32]
   14a2c:	mov	r0, #0
   14a30:	str	r0, [sp, #28]
   14a34:	ble	14c30 <dim_enter_array@@Base+0x43c>
   14a38:	ldr	r0, [sp, #16]
   14a3c:	add	r5, r8, r6, lsl #2
   14a40:	mov	r2, #0
   14a44:	add	r1, r0, #804	; 0x324
   14a48:	add	r9, r0, #808	; 0x328
   14a4c:	mov	r0, #0
   14a50:	str	r1, [sp, #24]
   14a54:	mov	r1, #0
   14a58:	ldr	r3, [r9, r2, lsl #2]
   14a5c:	add	r7, r5, r2, lsl #2
   14a60:	add	r2, r2, #1
   14a64:	str	r0, [r7, #72]	; 0x48
   14a68:	cmn	r3, #1
   14a6c:	str	r3, [r7, #4]
   14a70:	movweq	r1, #1
   14a74:	cmp	sl, r2
   14a78:	bne	14a58 <dim_enter_array@@Base+0x264>
   14a7c:	cmp	r1, #0
   14a80:	beq	14c4c <dim_enter_array@@Base+0x458>
   14a84:	ldr	r0, [sp, #32]
   14a88:	mov	sl, #0
   14a8c:	mov	r7, #0
   14a90:	lsl	r4, r0, #2
   14a94:	ldr	r0, [r9, r7, lsl #2]
   14a98:	add	r6, r5, r7, lsl #2
   14a9c:	cmn	r0, #1
   14aa0:	beq	14ab0 <dim_enter_array@@Base+0x2bc>
   14aa4:	str	sl, [r6, #140]	; 0x8c
   14aa8:	str	sl, [r6, #108]	; 0x6c
   14aac:	b	14b18 <dim_enter_array@@Base+0x324>
   14ab0:	ldr	r0, [sp, #20]
   14ab4:	str	r0, [r6, #140]	; 0x8c
   14ab8:	mov	r0, r4
   14abc:	bl	12834 <malloc@plt>
   14ac0:	cmp	r0, #0
   14ac4:	str	r0, [r6, #108]	; 0x6c
   14ac8:	bne	14af4 <dim_enter_array@@Base+0x300>
   14acc:	movw	r1, #39529	; 0x9a69
   14ad0:	movw	r3, #40144	; 0x9cd0
   14ad4:	mov	r0, #456	; 0x1c8
   14ad8:	mov	r2, r4
   14adc:	str	r0, [sp]
   14ae0:	mvn	r0, #0
   14ae4:	movt	r1, #1
   14ae8:	movt	r3, #1
   14aec:	bl	126b4 <coda_set_error@plt>
   14af0:	bl	17fcc <handle_coda_error@@Base>
   14af4:	ldr	r0, [sp, #32]
   14af8:	subs	r0, r0, #1
   14afc:	ldr	r0, [sp, #28]
   14b00:	sbcs	r0, r0, #0
   14b04:	blt	14b18 <dim_enter_array@@Base+0x324>
   14b08:	ldr	r0, [r6, #108]	; 0x6c
   14b0c:	mov	r1, #255	; 0xff
   14b10:	mov	r2, r4
   14b14:	bl	12918 <memset@plt>
   14b18:	ldr	r0, [sp, #24]
   14b1c:	add	r7, r7, #1
   14b20:	ldr	r0, [r0]
   14b24:	cmp	r7, r0
   14b28:	blt	14a94 <dim_enter_array@@Base+0x2a0>
   14b2c:	ldr	r0, [sp, #16]
   14b30:	mov	r1, #0
   14b34:	mov	r2, #0
   14b38:	str	r1, [r0, #844]	; 0x34c
   14b3c:	mov	r0, #0
   14b40:	mov	r1, #0
   14b44:	bl	14fbc <dim_enter_array@@Base+0x7c8>
   14b48:	ldr	r0, [sp, #24]
   14b4c:	ldr	sl, [r0]
   14b50:	cmp	sl, #1
   14b54:	blt	14c48 <dim_enter_array@@Base+0x454>
   14b58:	ldr	r6, [sp, #20]
   14b5c:	mov	r7, #0
   14b60:	mov	r4, #0
   14b64:	ldr	r0, [r9, r7, lsl #2]
   14b68:	cmn	r0, #1
   14b6c:	bne	14bb4 <dim_enter_array@@Base+0x3c0>
   14b70:	add	r6, r5, r7, lsl #2
   14b74:	ldr	r0, [r6, #4]
   14b78:	ldr	r1, [r6, #36]	; 0x24
   14b7c:	cmp	r0, r1
   14b80:	bne	14ba8 <dim_enter_array@@Base+0x3b4>
   14b84:	mov	sl, #0
   14b88:	str	sl, [r6, #72]	; 0x48
   14b8c:	ldr	r0, [r6, #108]	; 0x6c
   14b90:	bl	126fc <free@plt>
   14b94:	ldr	r0, [sp, #24]
   14b98:	str	sl, [r6, #140]	; 0x8c
   14b9c:	str	sl, [r6, #108]	; 0x6c
   14ba0:	ldr	sl, [r0]
   14ba4:	b	14bb0 <dim_enter_array@@Base+0x3bc>
   14ba8:	mov	r4, #1
   14bac:	str	r4, [r6, #72]	; 0x48
   14bb0:	ldr	r6, [sp, #20]
   14bb4:	add	r7, r7, #1
   14bb8:	cmp	r7, sl
   14bbc:	blt	14b64 <dim_enter_array@@Base+0x370>
   14bc0:	b	14c50 <dim_enter_array@@Base+0x45c>
   14bc4:	cmp	sl, #1
   14bc8:	blt	14c4c <dim_enter_array@@Base+0x458>
   14bcc:	mov	r0, #0
   14bd0:	cmp	sl, #3
   14bd4:	bls	14c0c <dim_enter_array@@Base+0x418>
   14bd8:	add	r0, r8, r6, lsl #2
   14bdc:	vmov.i32	q8, #0	; 0x00000000
   14be0:	add	r1, r0, #72	; 0x48
   14be4:	bic	r0, sl, #3
   14be8:	mov	r2, r0
   14bec:	sub	r3, r1, #68	; 0x44
   14bf0:	subs	r2, r2, #4
   14bf4:	vst1.32	{d16-d17}, [r3]
   14bf8:	vst1.32	{d16-d17}, [r1]!
   14bfc:	bne	14bec <dim_enter_array@@Base+0x3f8>
   14c00:	mov	r4, #0
   14c04:	cmp	sl, r0
   14c08:	beq	14c50 <dim_enter_array@@Base+0x45c>
   14c0c:	add	r1, r8, r6, lsl #2
   14c10:	mov	r4, #0
   14c14:	add	r2, r1, r0, lsl #2
   14c18:	add	r0, r0, #1
   14c1c:	cmp	sl, r0
   14c20:	str	r4, [r2, #72]	; 0x48
   14c24:	str	r4, [r2, #4]
   14c28:	bne	14c14 <dim_enter_array@@Base+0x420>
   14c2c:	b	14c50 <dim_enter_array@@Base+0x45c>
   14c30:	mov	r0, #1
   14c34:	mov	r4, #0
   14c38:	str	r0, [sp, #32]
   14c3c:	mov	r0, #0
   14c40:	str	r0, [sp, #28]
   14c44:	b	14c54 <dim_enter_array@@Base+0x460>
   14c48:	ldr	r6, [sp, #20]
   14c4c:	mov	r4, #0
   14c50:	ldr	r3, [r8]
   14c54:	mvn	r0, #0
   14c58:	cmp	r3, #1
   14c5c:	str	r0, [r8, #104]	; 0x68
   14c60:	mov	r0, #0
   14c64:	str	r0, [r8, #68]	; 0x44
   14c68:	blt	14c90 <dim_enter_array@@Base+0x49c>
   14c6c:	mov	r1, #1
   14c70:	add	r2, r8, r0, lsl #2
   14c74:	ldr	r2, [r2, #72]	; 0x48
   14c78:	cmp	r2, #0
   14c7c:	strne	r0, [r8, #104]	; 0x68
   14c80:	add	r0, r0, #1
   14c84:	strne	r1, [r8, #68]	; 0x44
   14c88:	cmp	r0, r3
   14c8c:	blt	14c70 <dim_enter_array@@Base+0x47c>
   14c90:	ldr	r1, [sp, #16]
   14c94:	mov	r0, #1
   14c98:	cmp	sl, #1
   14c9c:	str	r3, [sp, #24]
   14ca0:	str	r0, [r1, #840]!	; 0x348
   14ca4:	str	r1, [sp, #16]
   14ca8:	blt	14d40 <dim_enter_array@@Base+0x54c>
   14cac:	add	r2, r8, r6, lsl #3
   14cb0:	add	r1, r8, r6, lsl #2
   14cb4:	mov	r3, #0
   14cb8:	str	r4, [sp, #4]
   14cbc:	add	ip, r2, #240	; 0xf0
   14cc0:	add	lr, r1, #4
   14cc4:	mov	r2, ip
   14cc8:	ldr	r6, [lr, r3, lsl #2]
   14ccc:	cmp	r3, #0
   14cd0:	mul	r0, r0, r6
   14cd4:	beq	14cfc <dim_enter_array@@Base+0x508>
   14cd8:	ldr	r4, [r2, #-8]
   14cdc:	ldr	r1, [r2, #-4]
   14ce0:	asr	r9, r6, #31
   14ce4:	umull	r7, r5, r4, r6
   14ce8:	mla	r4, r4, r9, r5
   14cec:	str	r7, [r2]
   14cf0:	mla	r1, r1, r6, r4
   14cf4:	str	r1, [r2, #4]
   14cf8:	b	14d20 <dim_enter_array@@Base+0x52c>
   14cfc:	ldr	r6, [lr]
   14d00:	ldr	r5, [sp, #32]
   14d04:	umull	r4, r7, r5, r6
   14d08:	asr	r1, r6, #31
   14d0c:	mla	r1, r5, r1, r7
   14d10:	ldr	r5, [sp, #28]
   14d14:	str	r4, [ip]
   14d18:	mla	r1, r5, r6, r1
   14d1c:	str	r1, [ip, #4]
   14d20:	add	r3, r3, #1
   14d24:	add	r2, r2, #8
   14d28:	cmp	r3, sl
   14d2c:	blt	14cc8 <dim_enter_array@@Base+0x4d4>
   14d30:	ldr	r1, [sp, #16]
   14d34:	ldr	r6, [sp, #20]
   14d38:	ldr	r4, [sp, #4]
   14d3c:	str	r0, [r1]
   14d40:	cmp	r4, #0
   14d44:	beq	14e10 <dim_enter_array@@Base+0x61c>
   14d48:	cmp	sl, #1
   14d4c:	blt	14d64 <dim_enter_array@@Base+0x570>
   14d50:	add	r0, r8, r6, lsl #3
   14d54:	lsl	r2, sl, #3
   14d58:	mov	r1, #0
   14d5c:	add	r0, r0, #304	; 0x130
   14d60:	bl	12918 <memset@plt>
   14d64:	ldr	r0, [sp, #32]
   14d68:	subs	r0, r0, #1
   14d6c:	ldr	r0, [sp, #28]
   14d70:	sbcs	r0, r0, #0
   14d74:	blt	14e84 <dim_enter_array@@Base+0x690>
   14d78:	ldr	r1, [sp, #20]
   14d7c:	movw	r0, #65232	; 0xfed0
   14d80:	mov	r2, #0
   14d84:	movt	r0, #65535	; 0xffff
   14d88:	sub	ip, r0, r1, lsl #3
   14d8c:	lsl	lr, r1, #2
   14d90:	cmp	sl, #1
   14d94:	blt	14df4 <dim_enter_array@@Base+0x600>
   14d98:	mov	r3, #1
   14d9c:	mov	r0, ip
   14da0:	mov	r1, lr
   14da4:	mov	r4, sl
   14da8:	add	r6, r8, r1
   14dac:	add	r1, r1, #4
   14db0:	ldr	r5, [r6, #72]	; 0x48
   14db4:	cmp	r5, #0
   14db8:	mov	r5, r8
   14dbc:	addeq	r6, r6, #4
   14dc0:	ldr	r7, [r5, -r0]!
   14dc4:	sub	r0, r0, #8
   14dc8:	ldrne	r6, [r6, #108]	; 0x6c
   14dcc:	addne	r6, r6, r2, lsl #2
   14dd0:	ldr	r6, [r6]
   14dd4:	mul	r3, r6, r3
   14dd8:	adds	r6, r7, r3
   14ddc:	str	r6, [r5]
   14de0:	ldr	r6, [r5, #4]
   14de4:	adc	r6, r6, r3, asr #31
   14de8:	subs	r4, r4, #1
   14dec:	str	r6, [r5, #4]
   14df0:	bne	14da8 <dim_enter_array@@Base+0x5b4>
   14df4:	ldr	r0, [sp, #32]
   14df8:	add	r2, r2, #1
   14dfc:	subs	r0, r2, r0
   14e00:	ldr	r0, [sp, #28]
   14e04:	rscs	r0, r0, #0
   14e08:	blt	14d90 <dim_enter_array@@Base+0x59c>
   14e0c:	b	14e84 <dim_enter_array@@Base+0x690>
   14e10:	add	r0, r8, r6, lsl #2
   14e14:	ldr	r5, [sp, #8]
   14e18:	add	r2, r8, r6, lsl #3
   14e1c:	cmp	sl, #2
   14e20:	ldr	r1, [r0, #4]
   14e24:	umull	r3, r7, r5, r1
   14e28:	asr	r6, r1, #31
   14e2c:	mla	r7, r5, r6, r7
   14e30:	ldr	r6, [sp, #12]
   14e34:	str	r3, [r2, #304]	; 0x130
   14e38:	mla	r1, r6, r1, r7
   14e3c:	str	r1, [r2, #308]	; 0x134
   14e40:	blt	14e84 <dim_enter_array@@Base+0x690>
   14e44:	ldr	r7, [r2, #304]	; 0x130
   14e48:	ldr	r3, [r2, #308]	; 0x134
   14e4c:	add	r1, r2, #312	; 0x138
   14e50:	add	r0, r0, #8
   14e54:	sub	r2, sl, #1
   14e58:	ldr	r6, [r0], #4
   14e5c:	subs	r2, r2, #1
   14e60:	umull	r4, ip, r7, r6
   14e64:	asr	r5, r6, #31
   14e68:	mla	r7, r7, r5, ip
   14e6c:	str	r4, [r1]
   14e70:	mla	r3, r3, r6, r7
   14e74:	mov	r7, r4
   14e78:	str	r3, [r1, #4]
   14e7c:	add	r1, r1, #8
   14e80:	bne	14e58 <dim_enter_array@@Base+0x664>
   14e84:	ldr	r0, [sp, #20]
   14e88:	add	r0, r0, sl
   14e8c:	add	r1, r8, r0, lsl #3
   14e90:	ldr	r0, [r1, #296]	; 0x128
   14e94:	ldr	r2, [r1, #300]	; 0x12c
   14e98:	subs	r0, r0, #1
   14e9c:	sbcs	r0, r2, #0
   14ea0:	blt	14f54 <dim_enter_array@@Base+0x760>
   14ea4:	ldr	r0, [sp, #24]
   14ea8:	cmp	sl, #2
   14eac:	sub	r0, r0, #1
   14eb0:	add	r2, r8, r0, lsl #3
   14eb4:	add	r0, r8, r0, lsl #2
   14eb8:	ldr	r0, [r0, #4]
   14ebc:	asr	r3, r0, #31
   14ec0:	str	r0, [r2, #176]	; 0xb0
   14ec4:	str	r3, [r2, #180]	; 0xb4
   14ec8:	blt	14f10 <dim_enter_array@@Base+0x71c>
   14ecc:	ldr	r0, [sp, #20]
   14ed0:	add	r1, r1, #160	; 0xa0
   14ed4:	add	r0, r8, r0, lsl #2
   14ed8:	sub	r0, r0, #4
   14edc:	ldr	r2, [r0, sl, lsl #2]
   14ee0:	ldrd	r4, [r1, #8]
   14ee4:	umull	r6, r3, r4, r2
   14ee8:	asr	r7, r2, #31
   14eec:	mla	r3, r4, r7, r3
   14ef0:	mla	r7, r5, r2, r3
   14ef4:	sub	r3, sl, #2
   14ef8:	sub	r2, sl, #1
   14efc:	strd	r6, [r1]
   14f00:	sub	r1, r1, #8
   14f04:	cmp	r3, #0
   14f08:	mov	sl, r2
   14f0c:	bgt	14edc <dim_enter_array@@Base+0x6e8>
   14f10:	ldr	r2, [sp, #20]
   14f14:	cmp	r2, #1
   14f18:	blt	14f54 <dim_enter_array@@Base+0x760>
   14f1c:	add	r1, r8, r2, lsl #3
   14f20:	add	r2, r2, #1
   14f24:	add	r0, r1, #168	; 0xa8
   14f28:	add	r1, r1, #176	; 0xb0
   14f2c:	ldrd	r4, [r1]
   14f30:	ldrd	r6, [r0]
   14f34:	sub	r2, r2, #1
   14f38:	cmp	r2, #1
   14f3c:	umull	r8, r3, r6, r4
   14f40:	mla	r3, r6, r5, r3
   14f44:	mla	r9, r7, r4, r3
   14f48:	strd	r8, [r0]
   14f4c:	sub	r0, r0, #8
   14f50:	bgt	14f2c <dim_enter_array@@Base+0x738>
   14f54:	sub	sp, fp, #28
   14f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f5c:	movw	r0, #40091	; 0x9c9b
   14f60:	movw	r1, #40144	; 0x9cd0
   14f64:	movw	r3, #40288	; 0x9d60
   14f68:	movw	r2, #386	; 0x182
   14f6c:	movt	r0, #1
   14f70:	movt	r1, #1
   14f74:	movt	r3, #1
   14f78:	bl	12abc <__assert_fail@plt>
   14f7c:	movw	r0, #40311	; 0x9d77
   14f80:	movw	r1, #40144	; 0x9cd0
   14f84:	movw	r3, #40288	; 0x9d60
   14f88:	movw	r2, #402	; 0x192
   14f8c:	movt	r0, #1
   14f90:	movt	r1, #1
   14f94:	movt	r3, #1
   14f98:	bl	12abc <__assert_fail@plt>
   14f9c:	movw	r0, #40091	; 0x9c9b
   14fa0:	movw	r1, #40144	; 0x9cd0
   14fa4:	movw	r3, #40288	; 0x9d60
   14fa8:	movw	r2, #349	; 0x15d
   14fac:	movt	r0, #1
   14fb0:	movt	r1, #1
   14fb4:	movt	r3, #1
   14fb8:	bl	12abc <__assert_fail@plt>
   14fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fc0:	add	fp, sp, #28
   14fc4:	sub	sp, sp, #44	; 0x2c
   14fc8:	movw	r7, #49640	; 0xc1e8
   14fcc:	mov	r5, r1
   14fd0:	mov	sl, r0
   14fd4:	sub	r1, fp, #32
   14fd8:	str	r2, [sp]
   14fdc:	movt	r7, #2
   14fe0:	add	r6, r7, #144	; 0x90
   14fe4:	mov	r0, r6
   14fe8:	bl	1278c <coda_cursor_get_type_class@plt>
   14fec:	cmp	r0, #0
   14ff0:	beq	14ff8 <dim_enter_array@@Base+0x804>
   14ff4:	bl	17fcc <handle_coda_error@@Base>
   14ff8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ffc:	sub	r1, r0, #4
   15000:	cmp	r1, #2
   15004:	bcc	150e4 <dim_enter_array@@Base+0x8f0>
   15008:	cmp	r0, #0
   1500c:	beq	15124 <dim_enter_array@@Base+0x930>
   15010:	cmp	r0, #1
   15014:	bne	1539c <dim_enter_array@@Base+0xba8>
   15018:	add	r0, r5, r5, lsl #2
   1501c:	add	r9, r7, r0, lsl #4
   15020:	ldr	r0, [r7, #3360]	; 0xd20
   15024:	ldr	r4, [r9, #800]	; 0x320
   15028:	cmp	r0, r5
   1502c:	bne	15214 <dim_enter_array@@Base+0xa20>
   15030:	add	r8, sp, #8
   15034:	add	r1, sp, #4
   15038:	mov	r0, r6
   1503c:	mov	r2, r8
   15040:	bl	12990 <coda_cursor_get_array_dim@plt>
   15044:	cmp	r0, #0
   15048:	beq	15050 <dim_enter_array@@Base+0x85c>
   1504c:	bl	17fcc <handle_coda_error@@Base>
   15050:	mov	r0, r9
   15054:	ldr	r1, [sp, #4]
   15058:	ldr	r2, [r0, #804]!	; 0x324
   1505c:	cmp	r1, r2
   15060:	bne	153dc <dim_enter_array@@Base+0xbe8>
   15064:	cmp	r1, #1
   15068:	blt	15310 <dim_enter_array@@Base+0xb1c>
   1506c:	movw	r1, #53424	; 0xd0b0
   15070:	add	r2, r9, #808	; 0x328
   15074:	add	r3, r9, #844	; 0x34c
   15078:	mov	r7, #0
   1507c:	movt	r1, #2
   15080:	add	ip, r1, r4, lsl #2
   15084:	ldr	r6, [r2, r7, lsl #2]
   15088:	cmn	r6, #1
   1508c:	bne	150d0 <dim_enter_array@@Base+0x8dc>
   15090:	add	r4, ip, r7, lsl #2
   15094:	ldr	r6, [r8, r7, lsl #2]
   15098:	ldr	r1, [r3]
   1509c:	ldr	r5, [r4, #108]	; 0x6c
   150a0:	str	r6, [r5, r1, lsl #2]
   150a4:	ldr	r5, [r4, #4]
   150a8:	cmn	r5, #1
   150ac:	beq	150c8 <dim_enter_array@@Base+0x8d4>
   150b0:	cmp	r5, r6
   150b4:	strlt	r6, [r4, #4]
   150b8:	ldr	r1, [r4, #36]	; 0x24
   150bc:	cmp	r1, r6
   150c0:	strgt	r6, [r4, #36]	; 0x24
   150c4:	b	150d0 <dim_enter_array@@Base+0x8dc>
   150c8:	str	r6, [r4, #4]
   150cc:	str	r6, [r4, #36]	; 0x24
   150d0:	ldr	r1, [r0]
   150d4:	add	r7, r7, #1
   150d8:	cmp	r7, r1
   150dc:	blt	15084 <dim_enter_array@@Base+0x890>
   150e0:	b	15310 <dim_enter_array@@Base+0xb1c>
   150e4:	ldr	r1, [r7, #3360]	; 0xd20
   150e8:	cmp	r1, r5
   150ec:	bne	153bc <dim_enter_array@@Base+0xbc8>
   150f0:	cmp	r0, #4
   150f4:	bne	15188 <dim_enter_array@@Base+0x994>
   150f8:	add	r1, sp, #4
   150fc:	mov	r0, r6
   15100:	bl	12894 <coda_cursor_get_string_length@plt>
   15104:	cmp	r0, #0
   15108:	beq	15110 <dim_enter_array@@Base+0x91c>
   1510c:	bl	17fcc <handle_coda_error@@Base>
   15110:	ldr	r0, [sp, #4]
   15114:	str	r0, [sp, #8]
   15118:	asr	r0, r0, #31
   1511c:	str	r0, [sp, #12]
   15120:	b	151a0 <dim_enter_array@@Base+0x9ac>
   15124:	ldr	r0, [sp]
   15128:	add	r2, sp, #8
   1512c:	add	r4, r7, r0, lsl #2
   15130:	mov	r0, r6
   15134:	ldr	r1, [r4, #3492]!	; 0xda4
   15138:	bl	1269c <coda_cursor_get_record_field_available_status@plt>
   1513c:	cmp	r0, #0
   15140:	beq	15148 <dim_enter_array@@Base+0x954>
   15144:	bl	17fcc <handle_coda_error@@Base>
   15148:	ldr	r0, [sp, #8]
   1514c:	cmp	r0, #0
   15150:	beq	15298 <dim_enter_array@@Base+0xaa4>
   15154:	ldr	r1, [r4]
   15158:	mov	r0, r6
   1515c:	bl	12804 <coda_cursor_goto_record_field_by_index@plt>
   15160:	cmp	r0, #0
   15164:	beq	1516c <dim_enter_array@@Base+0x978>
   15168:	bl	17fcc <handle_coda_error@@Base>
   1516c:	ldr	r1, [sp]
   15170:	add	r0, sl, #1
   15174:	add	r2, r1, #1
   15178:	mov	r1, r5
   1517c:	bl	14fbc <dim_enter_array@@Base+0x7c8>
   15180:	mov	r0, r6
   15184:	b	15390 <dim_enter_array@@Base+0xb9c>
   15188:	add	r1, sp, #8
   1518c:	mov	r0, r6
   15190:	bl	12624 <coda_cursor_get_byte_size@plt>
   15194:	cmp	r0, #0
   15198:	beq	151a0 <dim_enter_array@@Base+0x9ac>
   1519c:	bl	17fcc <handle_coda_error@@Base>
   151a0:	add	r0, r5, r5, lsl #2
   151a4:	ldr	r2, [sp, #12]
   151a8:	add	r0, r7, r0, lsl #4
   151ac:	ldr	r1, [r0, #800]	; 0x320
   151b0:	ldr	r3, [r0, #844]	; 0x34c
   151b4:	movw	r0, #53424	; 0xd0b0
   151b8:	movt	r0, #2
   151bc:	add	r0, r0, r1, lsl #2
   151c0:	ldr	r1, [sp, #8]
   151c4:	ldr	r7, [r0, #108]	; 0x6c
   151c8:	str	r1, [r7, r3, lsl #2]
   151cc:	mov	r3, r0
   151d0:	ldr	r7, [r3, #4]!
   151d4:	cmn	r7, #1
   151d8:	beq	15200 <dim_enter_array@@Base+0xa0c>
   151dc:	subs	r6, r7, r1
   151e0:	rscs	r7, r2, r7, asr #31
   151e4:	strlt	r1, [r3]
   151e8:	ldr	r3, [r0, #36]!	; 0x24
   151ec:	subs	r7, r1, r3
   151f0:	sbcs	r2, r2, r3, asr #31
   151f4:	strlt	r1, [r0]
   151f8:	sub	sp, fp, #28
   151fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15200:	add	r0, r0, #36	; 0x24
   15204:	str	r1, [r3]
   15208:	str	r1, [r0]
   1520c:	sub	sp, fp, #28
   15210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15214:	cmp	r5, #0
   15218:	moveq	r0, #0
   1521c:	streq	r0, [r7, #844]	; 0x34c
   15220:	ldr	r1, [r9, #804]	; 0x324
   15224:	ldr	r2, [r9, #840]	; 0x348
   15228:	ldr	r0, [r9, #844]	; 0x34c
   1522c:	mul	r2, r2, r0
   15230:	cmp	r1, #1
   15234:	str	r2, [r9, #924]	; 0x39c
   15238:	blt	15318 <dim_enter_array@@Base+0xb24>
   1523c:	movw	r2, #53424	; 0xd0b0
   15240:	add	r1, r1, r4
   15244:	add	r3, r4, #27
   15248:	movt	r2, #2
   1524c:	add	r2, r2, r4, lsl #2
   15250:	mov	r4, #1
   15254:	add	r2, r2, #72	; 0x48
   15258:	ldr	r7, [r2]
   1525c:	cmp	r7, #0
   15260:	subeq	r7, r2, #68	; 0x44
   15264:	ldrne	r7, [r2, #36]	; 0x24
   15268:	add	r2, r2, #4
   1526c:	addne	r7, r7, r0, lsl #2
   15270:	ldr	r7, [r7]
   15274:	mul	r4, r7, r4
   15278:	add	r7, r3, #1
   1527c:	sub	r3, r3, #26
   15280:	cmp	r3, r1
   15284:	mov	r3, r7
   15288:	blt	15258 <dim_enter_array@@Base+0xa64>
   1528c:	cmp	r4, #1
   15290:	bge	1531c <dim_enter_array@@Base+0xb28>
   15294:	b	15310 <dim_enter_array@@Base+0xb1c>
   15298:	ldr	r0, [r7, #3360]	; 0xd20
   1529c:	add	r0, r0, r0, lsl #2
   152a0:	add	r3, r7, r0, lsl #4
   152a4:	mov	r0, r3
   152a8:	ldr	r5, [r0, #804]!	; 0x324
   152ac:	cmp	r5, #1
   152b0:	blt	15310 <dim_enter_array@@Base+0xb1c>
   152b4:	ldr	r1, [r0, #-4]
   152b8:	movw	r2, #53424	; 0xd0b0
   152bc:	mov	r7, #0
   152c0:	mov	r6, #0
   152c4:	movt	r2, #2
   152c8:	add	ip, r2, r1, lsl #2
   152cc:	add	r2, r3, #808	; 0x328
   152d0:	add	r3, r3, #844	; 0x34c
   152d4:	ldr	r4, [r2, r6, lsl #2]
   152d8:	cmn	r4, #1
   152dc:	bne	15304 <dim_enter_array@@Base+0xb10>
   152e0:	add	r5, ip, r6, lsl #2
   152e4:	ldr	r1, [r3]
   152e8:	ldr	r4, [r5, #108]	; 0x6c
   152ec:	str	r7, [r4, r1, lsl #2]
   152f0:	ldr	r1, [r5, #4]
   152f4:	cmn	r1, #1
   152f8:	streq	r7, [r5, #4]
   152fc:	str	r7, [r5, #36]	; 0x24
   15300:	ldr	r5, [r0]
   15304:	add	r6, r6, #1
   15308:	cmp	r6, r5
   1530c:	blt	152d4 <dim_enter_array@@Base+0xae0>
   15310:	sub	sp, fp, #28
   15314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15318:	mov	r4, #1
   1531c:	mov	r0, r6
   15320:	mov	r8, r6
   15324:	bl	127d4 <coda_cursor_goto_first_array_element@plt>
   15328:	cmp	r0, #0
   1532c:	beq	15334 <dim_enter_array@@Base+0xb40>
   15330:	bl	17fcc <handle_coda_error@@Base>
   15334:	add	r7, sl, #1
   15338:	add	r9, r9, #924	; 0x39c
   1533c:	add	r5, r5, #1
   15340:	sub	r6, r4, #1
   15344:	mov	sl, #0
   15348:	ldr	r2, [sp]
   1534c:	mov	r0, r7
   15350:	mov	r1, r5
   15354:	bl	14fbc <dim_enter_array@@Base+0x7c8>
   15358:	cmp	sl, r6
   1535c:	bge	15380 <dim_enter_array@@Base+0xb8c>
   15360:	mov	r0, r8
   15364:	bl	128d0 <coda_cursor_goto_next_array_element@plt>
   15368:	cmp	r0, #0
   1536c:	beq	15374 <dim_enter_array@@Base+0xb80>
   15370:	bl	17fcc <handle_coda_error@@Base>
   15374:	ldr	r0, [r9]
   15378:	add	r0, r0, #1
   1537c:	str	r0, [r9]
   15380:	add	sl, sl, #1
   15384:	cmp	r4, sl
   15388:	bne	15348 <dim_enter_array@@Base+0xb54>
   1538c:	mov	r0, r8
   15390:	bl	12864 <coda_cursor_goto_parent@plt>
   15394:	sub	sp, fp, #28
   15398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1539c:	movw	r0, #40091	; 0x9c9b
   153a0:	movw	r1, #40144	; 0x9cd0
   153a4:	movw	r3, #40454	; 0x9e06
   153a8:	movw	r2, #294	; 0x126
   153ac:	movt	r0, #1
   153b0:	movt	r1, #1
   153b4:	movt	r3, #1
   153b8:	bl	12abc <__assert_fail@plt>
   153bc:	movw	r0, #40497	; 0x9e31
   153c0:	movw	r1, #40144	; 0x9cd0
   153c4:	movw	r3, #40454	; 0x9e06
   153c8:	mov	r2, #252	; 0xfc
   153cc:	movt	r0, #1
   153d0:	movt	r1, #1
   153d4:	movt	r3, #1
   153d8:	bl	12abc <__assert_fail@plt>
   153dc:	movw	r0, #40421	; 0x9de5
   153e0:	movw	r1, #40144	; 0x9cd0
   153e4:	movw	r3, #40454	; 0x9e06
   153e8:	mov	r2, #125	; 0x7d
   153ec:	movt	r0, #1
   153f0:	movt	r1, #1
   153f4:	movt	r3, #1
   153f8:	bl	12abc <__assert_fail@plt>

000153fc <dim_leave_array@@Base>:
   153fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15400:	add	fp, sp, #24
   15404:	movw	r0, #49640	; 0xc1e8
   15408:	movt	r0, #2
   1540c:	ldr	r1, [r0, #3360]	; 0xd20
   15410:	cmn	r1, #1
   15414:	ble	15508 <dim_leave_array@@Base+0x10c>
   15418:	add	r1, r1, r1, lsl #2
   1541c:	movw	r5, #53424	; 0xd0b0
   15420:	add	r6, r0, r1, lsl #4
   15424:	movt	r5, #2
   15428:	ldr	r0, [r6, #804]!	; 0x324
   1542c:	ldr	r1, [r5]
   15430:	ldr	r8, [r6, #-4]
   15434:	sub	r1, r1, r0
   15438:	cmp	r0, #1
   1543c:	str	r1, [r5]
   15440:	blt	15478 <dim_leave_array@@Base+0x7c>
   15444:	add	r7, r5, r8, lsl #2
   15448:	mov	r4, #0
   1544c:	add	r1, r7, r4, lsl #2
   15450:	ldr	r2, [r1, #72]	; 0x48
   15454:	cmp	r2, #0
   15458:	beq	15468 <dim_leave_array@@Base+0x6c>
   1545c:	ldr	r0, [r1, #108]	; 0x6c
   15460:	bl	126fc <free@plt>
   15464:	ldr	r0, [r6]
   15468:	add	r4, r4, #1
   1546c:	cmp	r4, r0
   15470:	blt	1544c <dim_leave_array@@Base+0x50>
   15474:	ldr	r1, [r5]
   15478:	mvn	r2, #0
   1547c:	cmp	r1, #1
   15480:	str	r2, [r5, #104]	; 0x68
   15484:	mov	r2, #0
   15488:	str	r2, [r5, #68]	; 0x44
   1548c:	blt	154b4 <dim_leave_array@@Base+0xb8>
   15490:	mov	r3, #1
   15494:	add	r7, r5, r2, lsl #2
   15498:	ldr	r7, [r7, #72]	; 0x48
   1549c:	cmp	r7, #0
   154a0:	strne	r2, [r5, #104]	; 0x68
   154a4:	add	r2, r2, #1
   154a8:	strne	r3, [r5, #68]	; 0x44
   154ac:	cmp	r2, r1
   154b0:	blt	15494 <dim_leave_array@@Base+0x98>
   154b4:	add	r0, r8, r0
   154b8:	add	r0, r5, r0, lsl #3
   154bc:	ldr	r1, [r0, #296]	; 0x128
   154c0:	ldr	r0, [r0, #300]	; 0x12c
   154c4:	subs	r1, r1, #1
   154c8:	sbcs	r0, r0, #0
   154cc:	cmpge	r8, #1
   154d0:	blt	15504 <dim_leave_array@@Base+0x108>
   154d4:	add	r0, r5, r8, lsl #3
   154d8:	add	r6, r8, #1
   154dc:	add	r4, r0, #168	; 0xa8
   154e0:	add	r5, r0, #176	; 0xb0
   154e4:	ldrd	r0, [r4]
   154e8:	ldrd	r2, [r5]
   154ec:	bl	197e0 <main@@Base+0x17d0>
   154f0:	sub	r6, r6, #1
   154f4:	strd	r0, [r4]
   154f8:	sub	r4, r4, #8
   154fc:	cmp	r6, #1
   15500:	bgt	154e4 <dim_leave_array@@Base+0xe8>
   15504:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15508:	movw	r0, #40368	; 0x9db0
   1550c:	movw	r1, #40144	; 0x9cd0
   15510:	movw	r3, #40398	; 0x9dce
   15514:	movw	r2, #579	; 0x243
   15518:	movt	r0, #1
   1551c:	movt	r1, #1
   15520:	movt	r3, #1
   15524:	bl	12abc <__assert_fail@plt>

00015528 <dim_record_field_available@@Base>:
   15528:	mov	r0, #0
   1552c:	mov	r1, #0
   15530:	mov	r2, #0
   15534:	b	15538 <dim_record_field_available@@Base+0x10>
   15538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1553c:	add	fp, sp, #28
   15540:	sub	sp, sp, #12
   15544:	movw	r4, #49640	; 0xc1e8
   15548:	mov	r6, r1
   1554c:	mov	r8, r0
   15550:	add	r1, sp, #8
   15554:	mov	sl, r2
   15558:	movt	r4, #2
   1555c:	add	r0, r4, #144	; 0x90
   15560:	str	r0, [sp]
   15564:	bl	1278c <coda_cursor_get_type_class@plt>
   15568:	cmp	r0, #0
   1556c:	beq	15574 <dim_record_field_available@@Base+0x4c>
   15570:	bl	17fcc <handle_coda_error@@Base>
   15574:	ldr	r0, [sp, #8]
   15578:	cmp	r0, #0
   1557c:	beq	15624 <dim_record_field_available@@Base+0xfc>
   15580:	cmp	r0, #1
   15584:	bne	15744 <dim_record_field_available@@Base+0x21c>
   15588:	ldr	r0, [r4, #3360]	; 0xd20
   1558c:	cmp	r0, r6
   15590:	ble	15764 <dim_record_field_available@@Base+0x23c>
   15594:	add	r0, r6, r6, lsl #2
   15598:	cmp	r6, #0
   1559c:	add	r7, r4, r0, lsl #4
   155a0:	moveq	r0, #0
   155a4:	ldr	r3, [r7, #800]	; 0x320
   155a8:	streq	r0, [r4, #844]	; 0x34c
   155ac:	ldr	r1, [r7, #804]	; 0x324
   155b0:	ldr	r2, [r7, #840]	; 0x348
   155b4:	ldr	r0, [r7, #844]	; 0x34c
   155b8:	mul	r2, r2, r0
   155bc:	cmp	r1, #1
   155c0:	str	r2, [r7, #924]	; 0x39c
   155c4:	blt	156a4 <dim_record_field_available@@Base+0x17c>
   155c8:	movw	r2, #53424	; 0xd0b0
   155cc:	add	r1, r1, r3
   155d0:	mov	r4, #1
   155d4:	movt	r2, #2
   155d8:	add	r2, r2, r3, lsl #2
   155dc:	add	r3, r3, #27
   155e0:	add	r2, r2, #72	; 0x48
   155e4:	ldr	r5, [r2]
   155e8:	cmp	r5, #0
   155ec:	subeq	r5, r2, #68	; 0x44
   155f0:	ldrne	r5, [r2, #36]	; 0x24
   155f4:	add	r2, r2, #4
   155f8:	addne	r5, r5, r0, lsl #2
   155fc:	ldr	r5, [r5]
   15600:	mul	r4, r5, r4
   15604:	add	r5, r3, #1
   15608:	sub	r3, r3, #26
   1560c:	cmp	r3, r1
   15610:	mov	r3, r5
   15614:	blt	155e4 <dim_record_field_available@@Base+0xbc>
   15618:	cmp	r4, #1
   1561c:	bge	156a8 <dim_record_field_available@@Base+0x180>
   15620:	b	15724 <dim_record_field_available@@Base+0x1fc>
   15624:	add	r5, r4, sl, lsl #2
   15628:	ldr	r0, [sp]
   1562c:	add	r2, sp, #4
   15630:	ldr	r1, [r5, #3492]!	; 0xda4
   15634:	bl	1269c <coda_cursor_get_record_field_available_status@plt>
   15638:	cmp	r0, #0
   1563c:	beq	15644 <dim_record_field_available@@Base+0x11c>
   15640:	bl	17fcc <handle_coda_error@@Base>
   15644:	ldr	r0, [sp, #4]
   15648:	cmp	r0, #0
   1564c:	beq	15724 <dim_record_field_available@@Base+0x1fc>
   15650:	ldr	r0, [r4, #3748]	; 0xea4
   15654:	sub	r0, r0, #1
   15658:	cmp	r0, sl
   1565c:	beq	15738 <dim_record_field_available@@Base+0x210>
   15660:	ldr	r1, [r5]
   15664:	ldr	r0, [sp]
   15668:	bl	12804 <coda_cursor_goto_record_field_by_index@plt>
   1566c:	cmp	r0, #0
   15670:	beq	15678 <dim_record_field_available@@Base+0x150>
   15674:	bl	17fcc <handle_coda_error@@Base>
   15678:	add	r0, r8, #1
   1567c:	add	r2, sl, #1
   15680:	mov	r1, r6
   15684:	bl	15538 <dim_record_field_available@@Base+0x10>
   15688:	str	r0, [sp, #4]
   1568c:	ldr	r0, [sp]
   15690:	bl	12864 <coda_cursor_goto_parent@plt>
   15694:	ldr	r0, [sp, #4]
   15698:	cmp	r0, #0
   1569c:	bne	15738 <dim_record_field_available@@Base+0x210>
   156a0:	b	15724 <dim_record_field_available@@Base+0x1fc>
   156a4:	mov	r4, #1
   156a8:	ldr	r0, [sp]
   156ac:	bl	127d4 <coda_cursor_goto_first_array_element@plt>
   156b0:	cmp	r0, #0
   156b4:	beq	156bc <dim_record_field_available@@Base+0x194>
   156b8:	bl	17fcc <handle_coda_error@@Base>
   156bc:	add	r5, r7, #924	; 0x39c
   156c0:	add	r7, r8, #1
   156c4:	add	r6, r6, #1
   156c8:	sub	r9, r4, #1
   156cc:	mov	r8, #0
   156d0:	mov	r0, r7
   156d4:	mov	r1, r6
   156d8:	mov	r2, sl
   156dc:	bl	15538 <dim_record_field_available@@Base+0x10>
   156e0:	cmp	r0, #0
   156e4:	bne	15730 <dim_record_field_available@@Base+0x208>
   156e8:	cmp	r8, r9
   156ec:	bge	15710 <dim_record_field_available@@Base+0x1e8>
   156f0:	ldr	r0, [sp]
   156f4:	bl	128d0 <coda_cursor_goto_next_array_element@plt>
   156f8:	cmp	r0, #0
   156fc:	beq	15704 <dim_record_field_available@@Base+0x1dc>
   15700:	bl	17fcc <handle_coda_error@@Base>
   15704:	ldr	r0, [r5]
   15708:	add	r0, r0, #1
   1570c:	str	r0, [r5]
   15710:	add	r8, r8, #1
   15714:	cmp	r8, r4
   15718:	blt	156d0 <dim_record_field_available@@Base+0x1a8>
   1571c:	ldr	r0, [sp]
   15720:	bl	12864 <coda_cursor_goto_parent@plt>
   15724:	mov	r0, #0
   15728:	sub	sp, fp, #28
   1572c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15730:	ldr	r0, [sp]
   15734:	bl	12864 <coda_cursor_goto_parent@plt>
   15738:	mov	r0, #1
   1573c:	sub	sp, fp, #28
   15740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15744:	movw	r0, #40091	; 0x9c9b
   15748:	movw	r1, #40144	; 0x9cd0
   1574c:	movw	r3, #40576	; 0x9e80
   15750:	movw	r2, #729	; 0x2d9
   15754:	movt	r0, #1
   15758:	movt	r1, #1
   1575c:	movt	r3, #1
   15760:	bl	12abc <__assert_fail@plt>
   15764:	movw	r0, #40537	; 0x9e59
   15768:	movw	r1, #40144	; 0x9cd0
   1576c:	movw	r3, #40576	; 0x9e80
   15770:	movw	r2, #638	; 0x27e
   15774:	movt	r0, #1
   15778:	movt	r1, #1
   1577c:	movt	r3, #1
   15780:	bl	12abc <__assert_fail@plt>

00015784 <codadump_filter_create@@Base>:
   15784:	push	{r4, r5, r6, r7, fp, lr}
   15788:	add	fp, sp, #16
   1578c:	sub	sp, sp, #16
   15790:	mov	r1, #0
   15794:	str	r0, [sp, #8]
   15798:	cmp	r0, #0
   1579c:	str	r1, [sp, #4]
   157a0:	str	r1, [sp, #12]
   157a4:	ldrbne	r1, [r0]
   157a8:	cmpne	r1, #0
   157ac:	bne	157bc <codadump_filter_create@@Base+0x38>
   157b0:	ldr	r0, [sp, #4]
   157b4:	sub	sp, fp, #16
   157b8:	pop	{r4, r5, r6, r7, fp, pc}
   157bc:	add	r4, sp, #12
   157c0:	add	r5, sp, #8
   157c4:	add	r6, sp, #4
   157c8:	mov	r7, #0
   157cc:	mov	r1, r4
   157d0:	mov	r2, r5
   157d4:	bl	15958 <codadump_filter_get_next_filter@@Base+0x34>
   157d8:	ldr	r1, [sp, #12]
   157dc:	cmp	r1, #0
   157e0:	beq	15804 <codadump_filter_create@@Base+0x80>
   157e4:	mov	r0, r6
   157e8:	bl	15bc4 <codadump_filter_get_next_filter@@Base+0x2a0>
   157ec:	ldr	r0, [sp, #8]
   157f0:	str	r7, [sp, #12]
   157f4:	ldrb	r1, [r0]
   157f8:	cmp	r1, #0
   157fc:	bne	157cc <codadump_filter_create@@Base+0x48>
   15800:	b	157b0 <codadump_filter_create@@Base+0x2c>
   15804:	add	r0, sp, #4
   15808:	bl	15810 <codadump_filter_remove@@Base>
   1580c:	b	157b0 <codadump_filter_create@@Base+0x2c>

00015810 <codadump_filter_remove@@Base>:
   15810:	push	{r4, sl, fp, lr}
   15814:	add	fp, sp, #8
   15818:	cmp	r0, #0
   1581c:	beq	1589c <codadump_filter_remove@@Base+0x8c>
   15820:	mov	r4, r0
   15824:	ldr	r0, [r0]
   15828:	cmp	r0, #0
   1582c:	popeq	{r4, sl, fp, pc}
   15830:	mov	r1, r0
   15834:	ldr	r2, [r1, #8]!
   15838:	cmp	r2, #0
   1583c:	beq	1584c <codadump_filter_remove@@Base+0x3c>
   15840:	mov	r0, r1
   15844:	bl	15810 <codadump_filter_remove@@Base>
   15848:	ldr	r0, [r4]
   1584c:	mov	r1, r0
   15850:	ldr	r2, [r1, #4]!
   15854:	cmp	r2, #0
   15858:	beq	15868 <codadump_filter_remove@@Base+0x58>
   1585c:	mov	r0, r1
   15860:	bl	15810 <codadump_filter_remove@@Base>
   15864:	ldr	r0, [r4]
   15868:	ldr	r1, [r0]
   1586c:	cmp	r1, #0
   15870:	beq	1588c <codadump_filter_remove@@Base+0x7c>
   15874:	mov	r0, r1
   15878:	bl	126fc <free@plt>
   1587c:	ldr	r0, [r4]
   15880:	mov	r1, #0
   15884:	str	r1, [r0]
   15888:	ldr	r0, [r4]
   1588c:	bl	126fc <free@plt>
   15890:	mov	r0, #0
   15894:	str	r0, [r4]
   15898:	pop	{r4, sl, fp, pc}
   1589c:	movw	r0, #40629	; 0x9eb5
   158a0:	movw	r1, #40644	; 0x9ec4
   158a4:	movw	r3, #40729	; 0x9f19
   158a8:	mov	r2, #192	; 0xc0
   158ac:	movt	r0, #1
   158b0:	movt	r1, #1
   158b4:	movt	r3, #1
   158b8:	bl	12abc <__assert_fail@plt>

000158bc <codadump_filter_get_fieldname@@Base>:
   158bc:	cmp	r0, #0
   158c0:	ldrne	r0, [r0]
   158c4:	bxne	lr
   158c8:	push	{fp, lr}
   158cc:	mov	fp, sp
   158d0:	movw	r0, #40629	; 0x9eb5
   158d4:	movw	r1, #40644	; 0x9ec4
   158d8:	movw	r3, #40777	; 0x9f49
   158dc:	mov	r2, #216	; 0xd8
   158e0:	movt	r0, #1
   158e4:	movt	r1, #1
   158e8:	movt	r3, #1
   158ec:	bl	12abc <__assert_fail@plt>

000158f0 <codadump_filter_get_subfilter@@Base>:
   158f0:	cmp	r0, #0
   158f4:	ldrne	r0, [r0, #4]
   158f8:	bxne	lr
   158fc:	push	{fp, lr}
   15900:	mov	fp, sp
   15904:	movw	r0, #40629	; 0x9eb5
   15908:	movw	r1, #40644	; 0x9ec4
   1590c:	movw	r3, #40838	; 0x9f86
   15910:	mov	r2, #223	; 0xdf
   15914:	movt	r0, #1
   15918:	movt	r1, #1
   1591c:	movt	r3, #1
   15920:	bl	12abc <__assert_fail@plt>

00015924 <codadump_filter_get_next_filter@@Base>:
   15924:	cmp	r0, #0
   15928:	ldrne	r0, [r0, #8]
   1592c:	bxne	lr
   15930:	push	{fp, lr}
   15934:	mov	fp, sp
   15938:	movw	r0, #40629	; 0x9eb5
   1593c:	movw	r1, #40644	; 0x9ec4
   15940:	movw	r3, #40904	; 0x9fc8
   15944:	mov	r2, #230	; 0xe6
   15948:	movt	r0, #1
   1594c:	movt	r1, #1
   15950:	movt	r3, #1
   15954:	bl	12abc <__assert_fail@plt>
   15958:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1595c:	add	fp, sp, #24
   15960:	sub	sp, sp, #8
   15964:	cmp	r0, #0
   15968:	beq	15b64 <codadump_filter_get_next_filter@@Base+0x240>
   1596c:	mov	r9, r1
   15970:	cmp	r1, #0
   15974:	beq	15b84 <codadump_filter_get_next_filter@@Base+0x260>
   15978:	mov	r8, r2
   1597c:	cmp	r2, #0
   15980:	beq	15ba4 <codadump_filter_get_next_filter@@Base+0x280>
   15984:	movw	r4, #3
   15988:	mov	r6, r0
   1598c:	mov	r1, #1
   15990:	movt	r4, #128	; 0x80
   15994:	b	1599c <codadump_filter_get_next_filter@@Base+0x78>
   15998:	add	r6, r6, #1
   1599c:	ldrb	r0, [r6]
   159a0:	sub	r2, r0, #9
   159a4:	cmp	r2, #23
   159a8:	bhi	159b4 <codadump_filter_get_next_filter@@Base+0x90>
   159ac:	tst	r4, r1, lsl r2
   159b0:	bne	15998 <codadump_filter_get_next_filter@@Base+0x74>
   159b4:	mov	r7, #0
   159b8:	mvn	r1, #43	; 0x2b
   159bc:	mov	r2, #1
   159c0:	movw	r3, #32773	; 0x8005
   159c4:	b	159d4 <codadump_filter_get_next_filter@@Base+0xb0>
   159c8:	add	r0, r6, r7
   159cc:	add	r7, r7, #1
   159d0:	ldrb	r0, [r0, #1]
   159d4:	uxtab	r5, r1, r0
   159d8:	cmp	r5, #15
   159dc:	bhi	159e8 <codadump_filter_get_next_filter@@Base+0xc4>
   159e0:	tst	r3, r2, lsl r5
   159e4:	bne	159f4 <codadump_filter_get_next_filter@@Base+0xd0>
   159e8:	uxtb	r0, r0
   159ec:	cmp	r0, #0
   159f0:	bne	159c8 <codadump_filter_get_next_filter@@Base+0xa4>
   159f4:	cmp	r7, #0
   159f8:	beq	15b08 <codadump_filter_get_next_filter@@Base+0x1e4>
   159fc:	mov	r0, #12
   15a00:	bl	12834 <malloc@plt>
   15a04:	cmp	r0, #0
   15a08:	str	r0, [r9]
   15a0c:	bne	15a38 <codadump_filter_get_next_filter@@Base+0x114>
   15a10:	movw	r1, #39529	; 0x9a69
   15a14:	movw	r3, #40644	; 0x9ec4
   15a18:	mov	r0, #69	; 0x45
   15a1c:	mov	r2, #12
   15a20:	str	r0, [sp]
   15a24:	movt	r1, #1
   15a28:	movt	r3, #1
   15a2c:	mvn	r0, #0
   15a30:	bl	126b4 <coda_set_error@plt>
   15a34:	bl	17fcc <handle_coda_error@@Base>
   15a38:	add	r5, r7, #1
   15a3c:	mov	r0, r5
   15a40:	bl	12834 <malloc@plt>
   15a44:	ldr	r1, [r9]
   15a48:	str	r0, [r1]
   15a4c:	ldr	r0, [r9]
   15a50:	ldr	r0, [r0]
   15a54:	cmp	r0, #0
   15a58:	bne	15a8c <codadump_filter_get_next_filter@@Base+0x168>
   15a5c:	movw	r1, #41069	; 0xa06d
   15a60:	movw	r3, #40644	; 0x9ec4
   15a64:	mov	r0, #76	; 0x4c
   15a68:	mov	r2, r5
   15a6c:	str	r0, [sp]
   15a70:	movt	r1, #1
   15a74:	movt	r3, #1
   15a78:	mvn	r0, #0
   15a7c:	bl	126b4 <coda_set_error@plt>
   15a80:	bl	17fcc <handle_coda_error@@Base>
   15a84:	ldr	r0, [r9]
   15a88:	ldr	r0, [r0]
   15a8c:	mov	r1, r6
   15a90:	mov	r2, r7
   15a94:	add	r5, r6, r7
   15a98:	bl	12930 <strncpy@plt>
   15a9c:	ldr	r0, [r9]
   15aa0:	mov	r1, #0
   15aa4:	str	r1, [r0, #4]
   15aa8:	ldr	r0, [r9]
   15aac:	str	r1, [r0, #8]
   15ab0:	mov	r1, #1
   15ab4:	ldr	r0, [r9]
   15ab8:	ldr	r0, [r0]
   15abc:	add	r0, r0, r7
   15ac0:	b	15ac8 <codadump_filter_get_next_filter@@Base+0x1a4>
   15ac4:	sub	r0, r0, #1
   15ac8:	ldrb	r2, [r0, #-1]
   15acc:	sub	r2, r2, #9
   15ad0:	cmp	r2, #23
   15ad4:	bhi	15ae0 <codadump_filter_get_next_filter@@Base+0x1bc>
   15ad8:	tst	r4, r1, lsl r2
   15adc:	bne	15ac4 <codadump_filter_get_next_filter@@Base+0x1a0>
   15ae0:	mov	r1, #0
   15ae4:	strb	r1, [r0]
   15ae8:	ldrb	r0, [r6, r7]
   15aec:	cmp	r0, #44	; 0x2c
   15af0:	cmpne	r0, #59	; 0x3b
   15af4:	bne	15b18 <codadump_filter_get_next_filter@@Base+0x1f4>
   15af8:	add	r0, r5, #1
   15afc:	str	r0, [r8]
   15b00:	sub	sp, fp, #24
   15b04:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15b08:	mov	r0, #0
   15b0c:	str	r0, [r9]
   15b10:	sub	sp, fp, #24
   15b14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15b18:	cmp	r0, #46	; 0x2e
   15b1c:	strne	r5, [r8]
   15b20:	subne	sp, fp, #24
   15b24:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   15b28:	ldr	r1, [r9]
   15b2c:	add	r0, r5, #1
   15b30:	mov	r2, r8
   15b34:	add	r1, r1, #4
   15b38:	bl	15958 <codadump_filter_get_next_filter@@Base+0x34>
   15b3c:	ldr	r0, [r9]
   15b40:	ldr	r0, [r0, #4]
   15b44:	cmp	r0, #0
   15b48:	beq	15b54 <codadump_filter_get_next_filter@@Base+0x230>
   15b4c:	sub	sp, fp, #24
   15b50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15b54:	mov	r0, r9
   15b58:	sub	sp, fp, #24
   15b5c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   15b60:	b	15810 <codadump_filter_remove@@Base>
   15b64:	movw	r0, #40972	; 0xa00c
   15b68:	movw	r1, #40644	; 0x9ec4
   15b6c:	movw	r3, #40992	; 0xa020
   15b70:	mov	r2, #44	; 0x2c
   15b74:	movt	r0, #1
   15b78:	movt	r1, #1
   15b7c:	movt	r3, #1
   15b80:	bl	12abc <__assert_fail@plt>
   15b84:	movw	r0, #40629	; 0x9eb5
   15b88:	movw	r1, #40644	; 0x9ec4
   15b8c:	movw	r3, #40992	; 0xa020
   15b90:	mov	r2, #45	; 0x2d
   15b94:	movt	r0, #1
   15b98:	movt	r1, #1
   15b9c:	movt	r3, #1
   15ba0:	bl	12abc <__assert_fail@plt>
   15ba4:	movw	r0, #41056	; 0xa060
   15ba8:	movw	r1, #40644	; 0x9ec4
   15bac:	movw	r3, #40992	; 0xa020
   15bb0:	mov	r2, #46	; 0x2e
   15bb4:	movt	r0, #1
   15bb8:	movt	r1, #1
   15bbc:	movt	r3, #1
   15bc0:	bl	12abc <__assert_fail@plt>
   15bc4:	push	{r4, r5, fp, lr}
   15bc8:	add	fp, sp, #8
   15bcc:	sub	sp, sp, #8
   15bd0:	cmp	r0, #0
   15bd4:	str	r1, [sp, #4]
   15bd8:	beq	15c7c <codadump_filter_get_next_filter@@Base+0x358>
   15bdc:	mov	r4, r1
   15be0:	cmp	r1, #0
   15be4:	beq	15c60 <codadump_filter_get_next_filter@@Base+0x33c>
   15be8:	ldr	r5, [r0]
   15bec:	cmp	r5, #0
   15bf0:	streq	r4, [r0]
   15bf4:	subeq	sp, fp, #8
   15bf8:	popeq	{r4, r5, fp, pc}
   15bfc:	ldr	r1, [r4]
   15c00:	ldr	r0, [r5]
   15c04:	bl	1266c <strcmp@plt>
   15c08:	cmp	r0, #0
   15c0c:	beq	15c30 <codadump_filter_get_next_filter@@Base+0x30c>
   15c10:	ldr	r0, [r5, #8]!
   15c14:	cmp	r0, #0
   15c18:	beq	15c5c <codadump_filter_get_next_filter@@Base+0x338>
   15c1c:	mov	r0, r5
   15c20:	mov	r1, r4
   15c24:	sub	sp, fp, #8
   15c28:	pop	{r4, r5, fp, lr}
   15c2c:	b	15bc4 <codadump_filter_get_next_filter@@Base+0x2a0>
   15c30:	ldr	r0, [r5, #4]!
   15c34:	cmp	r0, #0
   15c38:	beq	15c6c <codadump_filter_get_next_filter@@Base+0x348>
   15c3c:	ldr	r1, [r4, #4]
   15c40:	mov	r0, r5
   15c44:	cmp	r1, #0
   15c48:	beq	15c68 <codadump_filter_get_next_filter@@Base+0x344>
   15c4c:	bl	15bc4 <codadump_filter_get_next_filter@@Base+0x2a0>
   15c50:	mov	r0, #0
   15c54:	str	r0, [r4, #4]
   15c58:	b	15c6c <codadump_filter_get_next_filter@@Base+0x348>
   15c5c:	str	r4, [r5]
   15c60:	sub	sp, fp, #8
   15c64:	pop	{r4, r5, fp, pc}
   15c68:	bl	15810 <codadump_filter_remove@@Base>
   15c6c:	add	r0, sp, #4
   15c70:	bl	15810 <codadump_filter_remove@@Base>
   15c74:	sub	sp, fp, #8
   15c78:	pop	{r4, r5, fp, pc}
   15c7c:	movw	r0, #40629	; 0x9eb5
   15c80:	movw	r1, #40644	; 0x9ec4
   15c84:	movw	r3, #41121	; 0xa0a1
   15c88:	mov	r2, #117	; 0x75
   15c8c:	movt	r0, #1
   15c90:	movt	r1, #1
   15c94:	movt	r3, #1
   15c98:	bl	12abc <__assert_fail@plt>

00015c9c <print_json_data@@Base>:
   15c9c:	push	{r4, sl, fp, lr}
   15ca0:	add	fp, sp, #8
   15ca4:	sub	sp, sp, #528	; 0x210
   15ca8:	movw	r1, #49604	; 0xc1c4
   15cac:	movw	r4, #49640	; 0xc1e8
   15cb0:	movt	r1, #2
   15cb4:	movt	r4, #2
   15cb8:	str	r0, [r1]
   15cbc:	ldr	r0, [r4]
   15cc0:	sub	r1, fp, #12
   15cc4:	bl	126c0 <coda_open@plt>
   15cc8:	cmp	r0, #0
   15ccc:	beq	15d0c <print_json_data@@Base+0x70>
   15cd0:	bl	12a68 <coda_get_errno@plt>
   15cd4:	ldr	r0, [r0]
   15cd8:	cmn	r0, #21
   15cdc:	bne	15d08 <print_json_data@@Base+0x6c>
   15ce0:	mov	r0, #0
   15ce4:	bl	12708 <coda_set_option_use_mmap@plt>
   15ce8:	ldr	r0, [r4]
   15cec:	sub	r1, fp, #12
   15cf0:	bl	126c0 <coda_open@plt>
   15cf4:	mov	r4, r0
   15cf8:	mov	r0, #1
   15cfc:	bl	12708 <coda_set_option_use_mmap@plt>
   15d00:	cmp	r4, #0
   15d04:	beq	15d0c <print_json_data@@Base+0x70>
   15d08:	bl	17fcc <handle_coda_error@@Base>
   15d0c:	ldr	r1, [fp, #-12]
   15d10:	mov	r0, sp
   15d14:	bl	127ec <coda_cursor_set_product@plt>
   15d18:	cmp	r0, #0
   15d1c:	beq	15d24 <print_json_data@@Base+0x88>
   15d20:	bl	17fcc <handle_coda_error@@Base>
   15d24:	movw	r0, #53416	; 0xd0a8
   15d28:	movt	r0, #2
   15d2c:	ldr	r1, [r0]
   15d30:	cmp	r1, #0
   15d34:	beq	15d4c <print_json_data@@Base+0xb0>
   15d38:	mov	r0, sp
   15d3c:	bl	129cc <coda_cursor_goto@plt>
   15d40:	cmp	r0, #0
   15d44:	beq	15d4c <print_json_data@@Base+0xb0>
   15d48:	bl	17fcc <handle_coda_error@@Base>
   15d4c:	mov	r0, #0
   15d50:	bl	12660 <coda_set_option_perform_boundary_checks@plt>
   15d54:	mov	r0, sp
   15d58:	bl	15d78 <print_json_data@@Base+0xdc>
   15d5c:	movw	r0, #42177	; 0xa4c1
   15d60:	movt	r0, #1
   15d64:	bl	165b0 <print_json_data@@Base+0x914>
   15d68:	ldr	r0, [fp, #-12]
   15d6c:	bl	129a8 <coda_close@plt>
   15d70:	sub	sp, fp, #8
   15d74:	pop	{r4, sl, fp, pc}
   15d78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15d7c:	add	fp, sp, #24
   15d80:	sub	sp, sp, #72	; 0x48
   15d84:	mov	r4, r0
   15d88:	mov	r0, #0
   15d8c:	str	r0, [fp, #-32]	; 0xffffffe0
   15d90:	movw	r0, #49604	; 0xc1c4
   15d94:	movt	r0, #2
   15d98:	ldr	r0, [r0]
   15d9c:	cmp	r0, #0
   15da0:	beq	15e04 <print_json_data@@Base+0x168>
   15da4:	sub	r1, fp, #32
   15da8:	mov	r0, r4
   15dac:	bl	12780 <coda_cursor_has_attributes@plt>
   15db0:	cmp	r0, #0
   15db4:	beq	15dbc <print_json_data@@Base+0x120>
   15db8:	bl	17fcc <handle_coda_error@@Base>
   15dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15dc0:	cmp	r0, #0
   15dc4:	beq	15e04 <print_json_data@@Base+0x168>
   15dc8:	movw	r0, #41176	; 0xa0d8
   15dcc:	movt	r0, #1
   15dd0:	bl	165b0 <print_json_data@@Base+0x914>
   15dd4:	mov	r0, r4
   15dd8:	bl	12900 <coda_cursor_goto_attributes@plt>
   15ddc:	cmp	r0, #0
   15de0:	beq	15de8 <print_json_data@@Base+0x14c>
   15de4:	bl	17fcc <handle_coda_error@@Base>
   15de8:	mov	r0, r4
   15dec:	bl	15d78 <print_json_data@@Base+0xdc>
   15df0:	mov	r0, r4
   15df4:	bl	12864 <coda_cursor_goto_parent@plt>
   15df8:	movw	r0, #41185	; 0xa0e1
   15dfc:	movt	r0, #1
   15e00:	bl	165b0 <print_json_data@@Base+0x914>
   15e04:	sub	r1, fp, #28
   15e08:	mov	r0, r4
   15e0c:	bl	1278c <coda_cursor_get_type_class@plt>
   15e10:	cmp	r0, #0
   15e14:	beq	15e1c <print_json_data@@Base+0x180>
   15e18:	bl	17fcc <handle_coda_error@@Base>
   15e1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15e20:	cmp	r0, #6
   15e24:	bhi	16554 <print_json_data@@Base+0x8b8>
   15e28:	add	r1, pc, #0
   15e2c:	ldr	pc, [r1, r0, lsl #2]
   15e30:	andeq	r5, r1, r0, ror #29
   15e34:			; <UNDEFINED> instruction: 0x00015fb4
   15e38:	andeq	r5, r1, ip, asr #28
   15e3c:	andeq	r5, r1, ip, asr #28
   15e40:	andeq	r5, r1, ip, asr #28
   15e44:	andeq	r5, r1, ip, asr #28
   15e48:	andeq	r6, r1, r4
   15e4c:	sub	r1, fp, #36	; 0x24
   15e50:	mov	r0, r4
   15e54:	bl	12828 <coda_cursor_get_read_type@plt>
   15e58:	cmp	r0, #0
   15e5c:	beq	15e64 <print_json_data@@Base+0x1c8>
   15e60:	bl	17fcc <handle_coda_error@@Base>
   15e64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15e68:	add	r0, r0, #1
   15e6c:	cmp	r0, #13
   15e70:	bhi	16554 <print_json_data@@Base+0x8b8>
   15e74:	add	r1, pc, #0
   15e78:	ldr	pc, [r1, r0, lsl #2]
   15e7c:	andeq	r6, r1, r0, asr #32
   15e80:			; <UNDEFINED> instruction: 0x00015eb4
   15e84:	andeq	r6, r1, ip, asr #32
   15e88:			; <UNDEFINED> instruction: 0x00015eb4
   15e8c:	andeq	r6, r1, ip, asr #32
   15e90:			; <UNDEFINED> instruction: 0x00015eb4
   15e94:	andeq	r6, r1, ip, asr #32
   15e98:	strheq	r6, [r1], -r0
   15e9c:	andeq	r6, r1, r0, ror #1
   15ea0:	andeq	r6, r1, r8, ror r0
   15ea4:	andeq	r6, r1, r8, ror r0
   15ea8:	andeq	r6, r1, r0, lsr #2
   15eac:	andeq	r6, r1, ip, asr r1
   15eb0:	andeq	r6, r1, r0, lsl r2
   15eb4:	add	r1, sp, #16
   15eb8:	mov	r0, r4
   15ebc:	bl	12a44 <coda_cursor_read_int32@plt>
   15ec0:	cmp	r0, #0
   15ec4:	beq	15ecc <print_json_data@@Base+0x230>
   15ec8:	bl	17fcc <handle_coda_error@@Base>
   15ecc:	ldr	r1, [sp, #16]
   15ed0:	movw	r0, #41380	; 0xa1a4
   15ed4:	movt	r0, #1
   15ed8:	bl	165b0 <print_json_data@@Base+0x914>
   15edc:	b	16554 <print_json_data@@Base+0x8b8>
   15ee0:	movw	r0, #41194	; 0xa0ea
   15ee4:	movt	r0, #1
   15ee8:	bl	165b0 <print_json_data@@Base+0x914>
   15eec:	add	r1, sp, #16
   15ef0:	mov	r0, r4
   15ef4:	bl	126e4 <coda_cursor_get_num_elements@plt>
   15ef8:	cmp	r0, #0
   15efc:	beq	15f04 <print_json_data@@Base+0x268>
   15f00:	bl	17fcc <handle_coda_error@@Base>
   15f04:	ldr	r0, [sp, #16]
   15f08:	cmp	r0, #1
   15f0c:	blt	163d0 <print_json_data@@Base+0x734>
   15f10:	add	r1, sp, #8
   15f14:	mov	r0, r4
   15f18:	bl	12744 <coda_cursor_get_type@plt>
   15f1c:	cmp	r0, #0
   15f20:	beq	15f28 <print_json_data@@Base+0x28c>
   15f24:	bl	17fcc <handle_coda_error@@Base>
   15f28:	ldr	r0, [sp, #8]
   15f2c:	sub	r1, fp, #36	; 0x24
   15f30:	bl	12948 <coda_type_get_record_union_status@plt>
   15f34:	cmp	r0, #0
   15f38:	beq	15f40 <print_json_data@@Base+0x2a4>
   15f3c:	bl	17fcc <handle_coda_error@@Base>
   15f40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f44:	cmp	r0, #0
   15f48:	beq	162dc <print_json_data@@Base+0x640>
   15f4c:	sub	r1, fp, #40	; 0x28
   15f50:	mov	r0, r4
   15f54:	bl	12a38 <coda_cursor_get_available_union_field_index@plt>
   15f58:	cmp	r0, #0
   15f5c:	beq	15f64 <print_json_data@@Base+0x2c8>
   15f60:	bl	17fcc <handle_coda_error@@Base>
   15f64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15f68:	ldr	r0, [sp, #8]
   15f6c:	sub	r2, fp, #44	; 0x2c
   15f70:	bl	12a80 <coda_type_get_record_field_name@plt>
   15f74:	cmp	r0, #0
   15f78:	beq	15f80 <print_json_data@@Base+0x2e4>
   15f7c:	bl	17fcc <handle_coda_error@@Base>
   15f80:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15f84:	mov	r0, r4
   15f88:	bl	12804 <coda_cursor_goto_record_field_by_index@plt>
   15f8c:	cmp	r0, #0
   15f90:	beq	15f98 <print_json_data@@Base+0x2fc>
   15f94:	bl	17fcc <handle_coda_error@@Base>
   15f98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f9c:	movw	r0, #41196	; 0xa0ec
   15fa0:	movt	r0, #1
   15fa4:	bl	165b0 <print_json_data@@Base+0x914>
   15fa8:	mov	r0, r4
   15fac:	bl	15d78 <print_json_data@@Base+0xdc>
   15fb0:	b	163c8 <print_json_data@@Base+0x72c>
   15fb4:	movw	r0, #41374	; 0xa19e
   15fb8:	movt	r0, #1
   15fbc:	bl	165b0 <print_json_data@@Base+0x914>
   15fc0:	add	r5, sp, #16
   15fc4:	add	r1, sp, #8
   15fc8:	mov	r0, r4
   15fcc:	mov	r2, r5
   15fd0:	bl	12990 <coda_cursor_get_array_dim@plt>
   15fd4:	cmp	r0, #0
   15fd8:	beq	15fe0 <print_json_data@@Base+0x344>
   15fdc:	bl	17fcc <handle_coda_error@@Base>
   15fe0:	ldr	r0, [sp, #8]
   15fe4:	cmp	r0, #0
   15fe8:	blt	16548 <print_json_data@@Base+0x8ac>
   15fec:	beq	163dc <print_json_data@@Base+0x740>
   15ff0:	cmp	r0, #4
   15ff4:	bcs	1648c <print_json_data@@Base+0x7f0>
   15ff8:	mov	r1, #0
   15ffc:	mov	r6, #1
   16000:	b	164c0 <print_json_data@@Base+0x824>
   16004:	sub	r1, fp, #36	; 0x24
   16008:	mov	r0, r4
   1600c:	bl	127c8 <coda_cursor_get_special_type@plt>
   16010:	cmp	r0, #0
   16014:	beq	1601c <print_json_data@@Base+0x380>
   16018:	bl	17fcc <handle_coda_error@@Base>
   1601c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16020:	cmp	r0, #3
   16024:	bhi	16554 <print_json_data@@Base+0x8b8>
   16028:	add	r1, pc, #0
   1602c:	ldr	pc, [r1, r0, lsl #2]
   16030:	andeq	r6, r1, r0, asr #32
   16034:	andeq	r6, r1, r4, ror #7
   16038:	andeq	r6, r1, r4, lsl #8
   1603c:	andeq	r6, r1, r0, asr r4
   16040:	movw	r0, #41287	; 0xa147
   16044:	movt	r0, #1
   16048:	b	16550 <print_json_data@@Base+0x8b4>
   1604c:	add	r1, sp, #16
   16050:	mov	r0, r4
   16054:	bl	12720 <coda_cursor_read_uint32@plt>
   16058:	cmp	r0, #0
   1605c:	beq	16064 <print_json_data@@Base+0x3c8>
   16060:	bl	17fcc <handle_coda_error@@Base>
   16064:	ldr	r1, [sp, #16]
   16068:	movw	r0, #39696	; 0x9b10
   1606c:	movt	r0, #1
   16070:	bl	165b0 <print_json_data@@Base+0x914>
   16074:	b	16554 <print_json_data@@Base+0x8b8>
   16078:	add	r1, sp, #16
   1607c:	mov	r0, r4
   16080:	bl	128ac <coda_cursor_read_double@plt>
   16084:	cmp	r0, #0
   16088:	beq	16090 <print_json_data@@Base+0x3f4>
   1608c:	bl	17fcc <handle_coda_error@@Base>
   16090:	vldr	d16, [sp, #16]
   16094:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16098:	vmov	r2, r3, d16
   1609c:	cmp	r0, #8
   160a0:	bne	16444 <print_json_data@@Base+0x7a8>
   160a4:	movw	r0, #39700	; 0x9b14
   160a8:	movt	r0, #1
   160ac:	b	16484 <print_json_data@@Base+0x7e8>
   160b0:	add	r1, sp, #8
   160b4:	mov	r0, r4
   160b8:	bl	129b4 <coda_cursor_read_int64@plt>
   160bc:	cmp	r0, #0
   160c0:	beq	160c8 <print_json_data@@Base+0x42c>
   160c4:	bl	17fcc <handle_coda_error@@Base>
   160c8:	ldr	r0, [sp, #8]
   160cc:	ldr	r1, [sp, #12]
   160d0:	add	r4, sp, #16
   160d4:	mov	r2, r4
   160d8:	bl	12ab0 <coda_str64@plt>
   160dc:	b	1610c <print_json_data@@Base+0x470>
   160e0:	add	r1, sp, #8
   160e4:	mov	r0, r4
   160e8:	bl	128a0 <coda_cursor_read_uint64@plt>
   160ec:	cmp	r0, #0
   160f0:	beq	160f8 <print_json_data@@Base+0x45c>
   160f4:	bl	17fcc <handle_coda_error@@Base>
   160f8:	ldr	r0, [sp, #8]
   160fc:	ldr	r1, [sp, #12]
   16100:	add	r4, sp, #16
   16104:	mov	r2, r4
   16108:	bl	126f0 <coda_str64u@plt>
   1610c:	movw	r0, #41558	; 0xa256
   16110:	mov	r1, r4
   16114:	movt	r0, #1
   16118:	bl	165b0 <print_json_data@@Base+0x914>
   1611c:	b	16554 <print_json_data@@Base+0x8b8>
   16120:	add	r1, sp, #16
   16124:	mov	r0, r4
   16128:	bl	1290c <coda_cursor_read_char@plt>
   1612c:	cmp	r0, #0
   16130:	beq	16138 <print_json_data@@Base+0x49c>
   16134:	bl	17fcc <handle_coda_error@@Base>
   16138:	movw	r4, #41360	; 0xa190
   1613c:	movt	r4, #1
   16140:	mov	r0, r4
   16144:	bl	165b0 <print_json_data@@Base+0x914>
   16148:	add	r0, sp, #16
   1614c:	mov	r1, #1
   16150:	bl	165f8 <print_json_data@@Base+0x95c>
   16154:	mov	r0, r4
   16158:	b	16550 <print_json_data@@Base+0x8b4>
   1615c:	add	r1, sp, #16
   16160:	mov	r0, r4
   16164:	bl	12894 <coda_cursor_get_string_length@plt>
   16168:	cmp	r0, #0
   1616c:	beq	16174 <print_json_data@@Base+0x4d8>
   16170:	bl	17fcc <handle_coda_error@@Base>
   16174:	ldr	r0, [sp, #16]
   16178:	add	r6, r0, #1
   1617c:	mov	r0, r6
   16180:	bl	12834 <malloc@plt>
   16184:	mov	r5, r0
   16188:	cmp	r0, #0
   1618c:	bne	161c0 <print_json_data@@Base+0x524>
   16190:	movw	r1, #39529	; 0x9a69
   16194:	movw	r3, #41204	; 0xa0f4
   16198:	movw	r0, #303	; 0x12f
   1619c:	mov	r2, r6
   161a0:	str	r0, [sp]
   161a4:	movt	r1, #1
   161a8:	movt	r3, #1
   161ac:	mvn	r0, #0
   161b0:	bl	126b4 <coda_set_error@plt>
   161b4:	bl	17fcc <handle_coda_error@@Base>
   161b8:	ldr	r0, [sp, #16]
   161bc:	add	r6, r0, #1
   161c0:	mov	r0, r4
   161c4:	mov	r1, r5
   161c8:	mov	r2, r6
   161cc:	bl	12858 <coda_cursor_read_string@plt>
   161d0:	cmp	r0, #0
   161d4:	beq	161dc <print_json_data@@Base+0x540>
   161d8:	bl	17fcc <handle_coda_error@@Base>
   161dc:	movw	r4, #41360	; 0xa190
   161e0:	movt	r4, #1
   161e4:	mov	r0, r4
   161e8:	bl	165b0 <print_json_data@@Base+0x914>
   161ec:	ldr	r1, [sp, #16]
   161f0:	mov	r0, r5
   161f4:	bl	165f8 <print_json_data@@Base+0x95c>
   161f8:	ldr	r1, [sp, #16]
   161fc:	mov	r0, r4
   16200:	bl	165b0 <print_json_data@@Base+0x914>
   16204:	mov	r0, r5
   16208:	bl	126fc <free@plt>
   1620c:	b	16554 <print_json_data@@Base+0x8b8>
   16210:	add	r1, sp, #16
   16214:	mov	r0, r4
   16218:	bl	12a14 <coda_cursor_get_bit_size@plt>
   1621c:	cmp	r0, #0
   16220:	beq	16228 <print_json_data@@Base+0x58c>
   16224:	bl	17fcc <handle_coda_error@@Base>
   16228:	ldr	r7, [sp, #16]
   1622c:	ldr	r6, [sp, #20]
   16230:	lsr	r0, r7, #3
   16234:	tst	r7, #7
   16238:	orr	r5, r0, r6, lsl #29
   1623c:	addne	r5, r5, #1
   16240:	mov	r0, r5
   16244:	bl	12834 <malloc@plt>
   16248:	mov	r8, r0
   1624c:	cmp	r0, #0
   16250:	bne	16284 <print_json_data@@Base+0x5e8>
   16254:	movw	r1, #39529	; 0x9a69
   16258:	movw	r3, #41204	; 0xa0f4
   1625c:	movw	r0, #334	; 0x14e
   16260:	mov	r2, r5
   16264:	str	r0, [sp]
   16268:	movt	r1, #1
   1626c:	movt	r3, #1
   16270:	mvn	r0, #0
   16274:	bl	126b4 <coda_set_error@plt>
   16278:	bl	17fcc <handle_coda_error@@Base>
   1627c:	ldr	r7, [sp, #16]
   16280:	ldr	r6, [sp, #20]
   16284:	mov	r0, r4
   16288:	mov	r1, r8
   1628c:	mov	r2, #0
   16290:	mov	r3, #0
   16294:	str	r7, [sp]
   16298:	str	r6, [sp, #4]
   1629c:	bl	12aa4 <coda_cursor_read_bits@plt>
   162a0:	cmp	r0, #0
   162a4:	beq	162ac <print_json_data@@Base+0x610>
   162a8:	bl	17fcc <handle_coda_error@@Base>
   162ac:	movw	r4, #41360	; 0xa190
   162b0:	movt	r4, #1
   162b4:	mov	r0, r4
   162b8:	bl	165b0 <print_json_data@@Base+0x914>
   162bc:	mov	r0, r8
   162c0:	mov	r1, r5
   162c4:	bl	165f8 <print_json_data@@Base+0x95c>
   162c8:	mov	r0, r4
   162cc:	bl	165b0 <print_json_data@@Base+0x914>
   162d0:	mov	r0, r8
   162d4:	bl	126fc <free@plt>
   162d8:	b	16554 <print_json_data@@Base+0x8b8>
   162dc:	mov	r0, r4
   162e0:	bl	127f8 <coda_cursor_goto_first_record_field@plt>
   162e4:	cmp	r0, #0
   162e8:	beq	162f0 <print_json_data@@Base+0x654>
   162ec:	bl	17fcc <handle_coda_error@@Base>
   162f0:	ldr	r0, [sp, #16]
   162f4:	mov	r1, #0
   162f8:	str	r1, [fp, #-40]	; 0xffffffd8
   162fc:	cmp	r0, #1
   16300:	blt	163c8 <print_json_data@@Base+0x72c>
   16304:	movw	r8, #40274	; 0x9d52
   16308:	movw	r6, #41196	; 0xa0ec
   1630c:	mov	r7, #1
   16310:	add	r5, sp, #48	; 0x30
   16314:	sub	r9, fp, #44	; 0x2c
   16318:	movt	r8, #1
   1631c:	movt	r6, #1
   16320:	ldr	r0, [sp, #8]
   16324:	mov	r2, r5
   16328:	bl	12684 <coda_type_get_record_field_hidden_status@plt>
   1632c:	cmp	r0, #0
   16330:	beq	16338 <print_json_data@@Base+0x69c>
   16334:	bl	17fcc <handle_coda_error@@Base>
   16338:	ldr	r0, [sp, #48]	; 0x30
   1633c:	cmp	r0, #0
   16340:	bne	16388 <print_json_data@@Base+0x6ec>
   16344:	cmp	r7, #0
   16348:	bne	16354 <print_json_data@@Base+0x6b8>
   1634c:	mov	r0, r8
   16350:	bl	165b0 <print_json_data@@Base+0x914>
   16354:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16358:	ldr	r0, [sp, #8]
   1635c:	mov	r2, r9
   16360:	bl	12a80 <coda_type_get_record_field_name@plt>
   16364:	cmp	r0, #0
   16368:	beq	16370 <print_json_data@@Base+0x6d4>
   1636c:	bl	17fcc <handle_coda_error@@Base>
   16370:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16374:	mov	r0, r6
   16378:	bl	165b0 <print_json_data@@Base+0x914>
   1637c:	mov	r0, r4
   16380:	bl	15d78 <print_json_data@@Base+0xdc>
   16384:	mov	r7, #0
   16388:	ldr	r0, [sp, #16]
   1638c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16390:	sub	r0, r0, #1
   16394:	cmp	r1, r0
   16398:	bge	163b0 <print_json_data@@Base+0x714>
   1639c:	mov	r0, r4
   163a0:	bl	129f0 <coda_cursor_goto_next_record_field@plt>
   163a4:	cmp	r0, #0
   163a8:	beq	163b0 <print_json_data@@Base+0x714>
   163ac:	bl	17fcc <handle_coda_error@@Base>
   163b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   163b4:	add	r1, r0, #1
   163b8:	ldr	r0, [sp, #16]
   163bc:	str	r1, [fp, #-40]	; 0xffffffd8
   163c0:	cmp	r1, r0
   163c4:	blt	16320 <print_json_data@@Base+0x684>
   163c8:	mov	r0, r4
   163cc:	bl	12864 <coda_cursor_goto_parent@plt>
   163d0:	movw	r0, #41202	; 0xa0f2
   163d4:	movt	r0, #1
   163d8:	b	16550 <print_json_data@@Base+0x8b4>
   163dc:	mov	r6, #1
   163e0:	b	164e4 <print_json_data@@Base+0x848>
   163e4:	add	r1, sp, #16
   163e8:	mov	r0, r4
   163ec:	bl	128ac <coda_cursor_read_double@plt>
   163f0:	cmp	r0, #0
   163f4:	beq	163fc <print_json_data@@Base+0x760>
   163f8:	bl	17fcc <handle_coda_error@@Base>
   163fc:	vldr	d16, [sp, #16]
   16400:	b	16440 <print_json_data@@Base+0x7a4>
   16404:	add	r1, sp, #8
   16408:	mov	r0, r4
   1640c:	bl	128ac <coda_cursor_read_double@plt>
   16410:	cmp	r0, #0
   16414:	beq	1641c <print_json_data@@Base+0x780>
   16418:	bl	17fcc <handle_coda_error@@Base>
   1641c:	vldr	d0, [sp, #8]
   16420:	bl	128b8 <coda_isNaN@plt>
   16424:	cmp	r0, #0
   16428:	bne	1643c <print_json_data@@Base+0x7a0>
   1642c:	vldr	d0, [sp, #8]
   16430:	bl	1275c <coda_isInf@plt>
   16434:	cmp	r0, #0
   16438:	beq	16574 <print_json_data@@Base+0x8d8>
   1643c:	vldr	d16, [sp, #8]
   16440:	vmov	r2, r3, d16
   16444:	movw	r0, #39705	; 0x9b19
   16448:	movt	r0, #1
   1644c:	b	16484 <print_json_data@@Base+0x7e8>
   16450:	add	r1, sp, #16
   16454:	add	r2, sp, #8
   16458:	mov	r0, r4
   1645c:	bl	12954 <coda_cursor_read_complex_double_split@plt>
   16460:	cmp	r0, #0
   16464:	beq	1646c <print_json_data@@Base+0x7d0>
   16468:	bl	17fcc <handle_coda_error@@Base>
   1646c:	vldr	d16, [sp, #16]
   16470:	vldr	d17, [sp, #8]
   16474:	movw	r0, #41348	; 0xa184
   16478:	movt	r0, #1
   1647c:	vmov	r2, r3, d16
   16480:	vstr	d17, [sp]
   16484:	bl	165b0 <print_json_data@@Base+0x914>
   16488:	b	16554 <print_json_data@@Base+0x8b8>
   1648c:	bic	r1, r0, #3
   16490:	vmov.i32	q8, #1	; 0x00000001
   16494:	mov	r2, r1
   16498:	vld1.32	{d18-d19}, [r5]!
   1649c:	subs	r2, r2, #4
   164a0:	vmul.i32	q8, q9, q8
   164a4:	bne	16498 <print_json_data@@Base+0x7fc>
   164a8:	vext.8	q9, q8, q8, #8
   164ac:	cmp	r0, r1
   164b0:	vmul.i32	q0, q8, q9
   164b4:	vmul.i32	q8, q0, d0[1]
   164b8:	vmov.32	r6, d16[0]
   164bc:	beq	164dc <print_json_data@@Base+0x840>
   164c0:	add	r2, sp, #16
   164c4:	sub	r0, r0, r1
   164c8:	add	r1, r2, r1, lsl #2
   164cc:	ldr	r2, [r1], #4
   164d0:	subs	r0, r0, #1
   164d4:	mul	r6, r2, r6
   164d8:	bne	164cc <print_json_data@@Base+0x830>
   164dc:	cmp	r6, #1
   164e0:	blt	16548 <print_json_data@@Base+0x8ac>
   164e4:	mov	r0, r4
   164e8:	bl	127d4 <coda_cursor_goto_first_array_element@plt>
   164ec:	cmp	r0, #0
   164f0:	beq	164f8 <print_json_data@@Base+0x85c>
   164f4:	bl	17fcc <handle_coda_error@@Base>
   164f8:	movw	r8, #40274	; 0x9d52
   164fc:	sub	r7, r6, #1
   16500:	mov	r5, #0
   16504:	movt	r8, #1
   16508:	mov	r0, r4
   1650c:	bl	15d78 <print_json_data@@Base+0xdc>
   16510:	cmp	r5, r7
   16514:	bge	16534 <print_json_data@@Base+0x898>
   16518:	mov	r0, r8
   1651c:	bl	165b0 <print_json_data@@Base+0x914>
   16520:	mov	r0, r4
   16524:	bl	128d0 <coda_cursor_goto_next_array_element@plt>
   16528:	cmp	r0, #0
   1652c:	beq	16534 <print_json_data@@Base+0x898>
   16530:	bl	17fcc <handle_coda_error@@Base>
   16534:	add	r5, r5, #1
   16538:	cmp	r6, r5
   1653c:	bne	16508 <print_json_data@@Base+0x86c>
   16540:	mov	r0, r4
   16544:	bl	12864 <coda_cursor_goto_parent@plt>
   16548:	movw	r0, #41621	; 0xa295
   1654c:	movt	r0, #1
   16550:	bl	165b0 <print_json_data@@Base+0x914>
   16554:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16558:	cmp	r0, #0
   1655c:	beq	1656c <print_json_data@@Base+0x8d0>
   16560:	movw	r0, #41202	; 0xa0f2
   16564:	movt	r0, #1
   16568:	bl	165b0 <print_json_data@@Base+0x914>
   1656c:	sub	sp, fp, #24
   16570:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16574:	vldr	d0, [sp, #8]
   16578:	movw	r0, #41292	; 0xa14c
   1657c:	add	r1, sp, #16
   16580:	movt	r0, #1
   16584:	bl	126d8 <coda_time_double_to_string@plt>
   16588:	cmp	r0, #0
   1658c:	beq	1659c <print_json_data@@Base+0x900>
   16590:	movw	r0, #41321	; 0xa169
   16594:	movt	r0, #1
   16598:	b	16550 <print_json_data@@Base+0x8b4>
   1659c:	movw	r0, #41624	; 0xa298
   165a0:	add	r1, sp, #16
   165a4:	movt	r0, #1
   165a8:	bl	165b0 <print_json_data@@Base+0x914>
   165ac:	b	16554 <print_json_data@@Base+0x8b8>
   165b0:	sub	sp, sp, #12
   165b4:	push	{fp, lr}
   165b8:	mov	fp, sp
   165bc:	sub	sp, sp, #4
   165c0:	mov	ip, r0
   165c4:	add	r0, fp, #8
   165c8:	stm	r0, {r1, r2, r3}
   165cc:	movw	r0, #53392	; 0xd090
   165d0:	add	r2, fp, #8
   165d4:	mov	r1, ip
   165d8:	movt	r0, #2
   165dc:	str	r2, [sp]
   165e0:	ldr	r0, [r0]
   165e4:	bl	129c0 <vfprintf@plt>
   165e8:	mov	sp, fp
   165ec:	pop	{fp, lr}
   165f0:	add	sp, sp, #12
   165f4:	bx	lr
   165f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165fc:	add	fp, sp, #28
   16600:	sub	sp, sp, #4
   16604:	cmp	r1, #1
   16608:	blt	16758 <print_json_data@@Base+0xabc>
   1660c:	movw	r6, #39672	; 0x9af8
   16610:	movw	r8, #39675	; 0x9afb
   16614:	movw	r9, #39681	; 0x9b01
   16618:	movw	sl, #39684	; 0x9b04
   1661c:	movw	r7, #41359	; 0xa18f
   16620:	mov	r4, r1
   16624:	mov	r5, r0
   16628:	movt	r6, #1
   1662c:	movt	r8, #1
   16630:	movt	r9, #1
   16634:	movt	sl, #1
   16638:	movt	r7, #1
   1663c:	ldrb	r1, [r5]
   16640:	sub	r0, r1, #8
   16644:	cmp	r0, #26
   16648:	bhi	166d0 <print_json_data@@Base+0xa34>
   1664c:	add	r2, pc, #0
   16650:	ldr	pc, [r2, r0, lsl #2]
   16654:	andeq	r6, r1, r0, asr #13
   16658:	andeq	r6, r1, r4, lsl #14
   1665c:	andeq	r6, r1, r0, lsl r7
   16660:	andeq	r6, r1, r8, ror #13
   16664:	andeq	r6, r1, ip, lsl r7
   16668:	andeq	r6, r1, r8, lsr #14
   1666c:	andeq	r6, r1, r8, ror #13
   16670:	andeq	r6, r1, r8, ror #13
   16674:	andeq	r6, r1, r8, ror #13
   16678:	andeq	r6, r1, r8, ror #13
   1667c:	andeq	r6, r1, r8, ror #13
   16680:	andeq	r6, r1, r8, ror #13
   16684:	andeq	r6, r1, r8, ror #13
   16688:	andeq	r6, r1, r8, ror #13
   1668c:	andeq	r6, r1, r8, ror #13
   16690:	andeq	r6, r1, r8, ror #13
   16694:	andeq	r6, r1, r8, ror #13
   16698:	andeq	r6, r1, r8, ror #13
   1669c:	andeq	r6, r1, r8, ror #13
   166a0:	andeq	r6, r1, r8, ror #13
   166a4:	andeq	r6, r1, r8, ror #13
   166a8:	andeq	r6, r1, r8, ror #13
   166ac:	andeq	r6, r1, r8, ror #13
   166b0:	andeq	r6, r1, r8, ror #13
   166b4:	andeq	r6, r1, r8, ror #13
   166b8:	andeq	r6, r1, r8, ror #13
   166bc:	andeq	r6, r1, r4, lsr r7
   166c0:	movw	r0, #39669	; 0x9af5
   166c4:	movt	r0, #1
   166c8:	bl	165b0 <print_json_data@@Base+0x914>
   166cc:	b	1674c <print_json_data@@Base+0xab0>
   166d0:	cmp	r1, #92	; 0x5c
   166d4:	bne	166e8 <print_json_data@@Base+0xa4c>
   166d8:	movw	r0, #39687	; 0x9b07
   166dc:	movt	r0, #1
   166e0:	bl	165b0 <print_json_data@@Base+0x914>
   166e4:	b	1674c <print_json_data@@Base+0xab0>
   166e8:	sub	r0, r1, #32
   166ec:	uxtb	r0, r0
   166f0:	cmp	r0, #94	; 0x5e
   166f4:	bhi	16740 <print_json_data@@Base+0xaa4>
   166f8:	movw	r0, #40114	; 0x9cb2
   166fc:	movt	r0, #1
   16700:	b	16748 <print_json_data@@Base+0xaac>
   16704:	mov	r0, r6
   16708:	bl	165b0 <print_json_data@@Base+0x914>
   1670c:	b	1674c <print_json_data@@Base+0xab0>
   16710:	mov	r0, r8
   16714:	bl	165b0 <print_json_data@@Base+0x914>
   16718:	b	1674c <print_json_data@@Base+0xab0>
   1671c:	mov	r0, r9
   16720:	bl	165b0 <print_json_data@@Base+0x914>
   16724:	b	1674c <print_json_data@@Base+0xab0>
   16728:	mov	r0, sl
   1672c:	bl	165b0 <print_json_data@@Base+0x914>
   16730:	b	1674c <print_json_data@@Base+0xab0>
   16734:	mov	r0, r7
   16738:	bl	165b0 <print_json_data@@Base+0x914>
   1673c:	b	1674c <print_json_data@@Base+0xab0>
   16740:	movw	r0, #41362	; 0xa192
   16744:	movt	r0, #1
   16748:	bl	165b0 <print_json_data@@Base+0x914>
   1674c:	subs	r4, r4, #1
   16750:	add	r5, r5, #1
   16754:	bne	1663c <print_json_data@@Base+0x9a0>
   16758:	sub	sp, fp, #28
   1675c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016760 <print_full_field_name@@Base>:
   16760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16764:	add	fp, sp, #28
   16768:	sub	sp, sp, #12
   1676c:	mov	sl, r2
   16770:	mov	r4, r0
   16774:	cmp	r1, #1
   16778:	bne	1688c <print_full_field_name@@Base+0x12c>
   1677c:	movw	r5, #49640	; 0xc1e8
   16780:	mov	r6, #0
   16784:	str	sl, [sp]
   16788:	movt	r5, #2
   1678c:	ldr	r0, [r5, #136]	; 0x88
   16790:	cmp	r0, #1
   16794:	blt	16858 <print_full_field_name@@Base+0xf8>
   16798:	movw	r9, #41369	; 0xa199
   1679c:	add	sl, sp, #8
   167a0:	mov	r7, #0
   167a4:	mov	r8, #0
   167a8:	movt	r9, #1
   167ac:	add	r0, r5, r8, lsl #2
   167b0:	mov	r1, sl
   167b4:	ldr	r0, [r0, #8]
   167b8:	bl	12ac8 <coda_type_get_class@plt>
   167bc:	cmp	r0, #0
   167c0:	beq	167c8 <print_full_field_name@@Base+0x68>
   167c4:	bl	17fcc <handle_coda_error@@Base>
   167c8:	ldr	r0, [sp, #8]
   167cc:	cmp	r0, #1
   167d0:	beq	167f8 <print_full_field_name@@Base+0x98>
   167d4:	cmp	r0, #0
   167d8:	bne	16848 <print_full_field_name@@Base+0xe8>
   167dc:	add	r0, r5, r7, lsl #2
   167e0:	mov	r1, r9
   167e4:	ldr	r2, [r0, #3620]	; 0xe24
   167e8:	mov	r0, r4
   167ec:	bl	128c4 <fprintf@plt>
   167f0:	add	r7, r7, #1
   167f4:	b	16848 <print_full_field_name@@Base+0xe8>
   167f8:	cmp	r8, #0
   167fc:	bne	1680c <print_full_field_name@@Base+0xac>
   16800:	mov	r0, #47	; 0x2f
   16804:	mov	r1, r4
   16808:	bl	129fc <fputc@plt>
   1680c:	add	r0, r6, r6, lsl #2
   16810:	add	r0, r5, r0, lsl #4
   16814:	ldr	r0, [r0, #804]	; 0x324
   16818:	cmp	r0, #1
   1681c:	blt	16844 <print_full_field_name@@Base+0xe4>
   16820:	mov	r0, #91	; 0x5b
   16824:	mov	r1, r4
   16828:	bl	129fc <fputc@plt>
   1682c:	mov	r0, r4
   16830:	mov	r1, r6
   16834:	bl	16a0c <print_full_field_name@@Base+0x2ac>
   16838:	mov	r0, #93	; 0x5d
   1683c:	mov	r1, r4
   16840:	bl	129fc <fputc@plt>
   16844:	add	r6, r6, #1
   16848:	ldr	r0, [r5, #136]	; 0x88
   1684c:	add	r8, r8, #1
   16850:	cmp	r8, r0
   16854:	blt	167ac <print_full_field_name@@Base+0x4c>
   16858:	ldr	r0, [sp]
   1685c:	cmp	r0, #0
   16860:	beq	16a04 <print_full_field_name@@Base+0x2a4>
   16864:	ldr	r0, [r5, #3360]	; 0xd20
   16868:	cmp	r6, r0
   1686c:	bge	16a04 <print_full_field_name@@Base+0x2a4>
   16870:	mov	r0, #91	; 0x5b
   16874:	mov	r1, r4
   16878:	bl	129fc <fputc@plt>
   1687c:	mov	r0, r4
   16880:	mov	r1, r6
   16884:	bl	16a0c <print_full_field_name@@Base+0x2ac>
   16888:	b	169f8 <print_full_field_name@@Base+0x298>
   1688c:	movw	r7, #49640	; 0xc1e8
   16890:	mov	r5, r1
   16894:	movt	r7, #2
   16898:	ldr	r0, [r7, #3748]	; 0xea4
   1689c:	cmp	r0, #1
   168a0:	blt	168dc <print_full_field_name@@Base+0x17c>
   168a4:	mov	r6, #0
   168a8:	cmp	r6, #0
   168ac:	beq	168bc <print_full_field_name@@Base+0x15c>
   168b0:	mov	r0, #46	; 0x2e
   168b4:	mov	r1, r4
   168b8:	bl	129fc <fputc@plt>
   168bc:	add	r0, r7, r6, lsl #2
   168c0:	mov	r1, r4
   168c4:	ldr	r0, [r0, #3620]	; 0xe24
   168c8:	bl	12a8c <fputs@plt>
   168cc:	ldr	r0, [r7, #3748]	; 0xea4
   168d0:	add	r6, r6, #1
   168d4:	cmp	r6, r0
   168d8:	blt	168a8 <print_full_field_name@@Base+0x148>
   168dc:	cmp	r5, #2
   168e0:	bne	16a04 <print_full_field_name@@Base+0x2a4>
   168e4:	ldr	r0, [r7, #136]	; 0x88
   168e8:	mov	r6, #0
   168ec:	cmp	r0, #1
   168f0:	blt	16990 <print_full_field_name@@Base+0x230>
   168f4:	movw	r9, #41373	; 0xa19d
   168f8:	add	r8, sp, #4
   168fc:	mov	r5, #0
   16900:	movt	r9, #1
   16904:	add	r0, r7, r5, lsl #2
   16908:	mov	r1, r8
   1690c:	ldr	r0, [r0, #8]
   16910:	bl	12ac8 <coda_type_get_class@plt>
   16914:	cmp	r0, #0
   16918:	beq	16920 <print_full_field_name@@Base+0x1c0>
   1691c:	bl	17fcc <handle_coda_error@@Base>
   16920:	ldr	r0, [sp, #4]
   16924:	cmp	r0, #1
   16928:	bne	16980 <print_full_field_name@@Base+0x220>
   1692c:	add	r0, r6, r6, lsl #2
   16930:	add	r0, r7, r0, lsl #4
   16934:	ldr	r1, [r0, #804]	; 0x324
   16938:	cmp	r1, #1
   1693c:	blt	16980 <print_full_field_name@@Base+0x220>
   16940:	ldr	r0, [r0, #800]	; 0x320
   16944:	cmp	r0, #0
   16948:	beq	1695c <print_full_field_name@@Base+0x1fc>
   1694c:	mov	r0, #44	; 0x2c
   16950:	mov	r1, r4
   16954:	bl	129fc <fputc@plt>
   16958:	b	16970 <print_full_field_name@@Base+0x210>
   1695c:	mov	r0, r9
   16960:	mov	r1, #2
   16964:	mov	r2, #1
   16968:	mov	r3, r4
   1696c:	bl	127e0 <fwrite@plt>
   16970:	mov	r0, r4
   16974:	mov	r1, r6
   16978:	bl	16a0c <print_full_field_name@@Base+0x2ac>
   1697c:	add	r6, r6, #1
   16980:	ldr	r0, [r7, #136]	; 0x88
   16984:	add	r5, r5, #1
   16988:	cmp	r5, r0
   1698c:	blt	16904 <print_full_field_name@@Base+0x1a4>
   16990:	cmp	sl, #0
   16994:	beq	169f0 <print_full_field_name@@Base+0x290>
   16998:	ldr	r0, [r7, #3360]	; 0xd20
   1699c:	cmp	r6, r0
   169a0:	bge	169f0 <print_full_field_name@@Base+0x290>
   169a4:	add	r0, r6, r6, lsl #2
   169a8:	add	r0, r7, r0, lsl #4
   169ac:	ldr	r0, [r0, #800]	; 0x320
   169b0:	cmp	r0, #0
   169b4:	beq	169c8 <print_full_field_name@@Base+0x268>
   169b8:	mov	r0, #44	; 0x2c
   169bc:	mov	r1, r4
   169c0:	bl	129fc <fputc@plt>
   169c4:	b	169e0 <print_full_field_name@@Base+0x280>
   169c8:	movw	r0, #41373	; 0xa19d
   169cc:	mov	r1, #2
   169d0:	mov	r2, #1
   169d4:	mov	r3, r4
   169d8:	movt	r0, #1
   169dc:	bl	127e0 <fwrite@plt>
   169e0:	mov	r0, r4
   169e4:	mov	r1, r6
   169e8:	bl	16a0c <print_full_field_name@@Base+0x2ac>
   169ec:	add	r6, r6, #1
   169f0:	cmp	r6, #1
   169f4:	blt	16a04 <print_full_field_name@@Base+0x2a4>
   169f8:	mov	r0, #93	; 0x5d
   169fc:	mov	r1, r4
   16a00:	bl	129fc <fputc@plt>
   16a04:	sub	sp, fp, #28
   16a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a10:	add	fp, sp, #28
   16a14:	sub	sp, sp, #4
   16a18:	mov	r4, r0
   16a1c:	add	r0, r1, r1, lsl #2
   16a20:	movw	r1, #49640	; 0xc1e8
   16a24:	movt	r1, #2
   16a28:	add	r0, r1, r0, lsl #4
   16a2c:	mov	r7, r0
   16a30:	ldr	r1, [r7, #804]!	; 0x324
   16a34:	cmp	r1, #1
   16a38:	blt	16aec <print_full_field_name@@Base+0x38c>
   16a3c:	movw	r8, #49636	; 0xc1e4
   16a40:	movw	r9, #53424	; 0xd0b0
   16a44:	add	sl, r0, #808	; 0x328
   16a48:	add	r5, r0, #800	; 0x320
   16a4c:	mov	r6, #0
   16a50:	movt	r8, #2
   16a54:	movt	r9, #2
   16a58:	cmp	r6, #0
   16a5c:	beq	16a6c <print_full_field_name@@Base+0x30c>
   16a60:	mov	r0, #44	; 0x2c
   16a64:	mov	r1, r4
   16a68:	bl	129fc <fputc@plt>
   16a6c:	ldr	r0, [r8]
   16a70:	cmp	r0, #0
   16a74:	beq	16aac <print_full_field_name@@Base+0x34c>
   16a78:	ldr	r0, [r5]
   16a7c:	add	r0, r6, r0
   16a80:	add	r0, r9, r0, lsl #2
   16a84:	ldr	r1, [r0, #72]	; 0x48
   16a88:	cmp	r1, #0
   16a8c:	beq	16ac8 <print_full_field_name@@Base+0x368>
   16a90:	ldr	r3, [r0, #4]
   16a94:	ldr	r2, [r0, #36]	; 0x24
   16a98:	movw	r1, #41376	; 0xa1a0
   16a9c:	mov	r0, r4
   16aa0:	movt	r1, #1
   16aa4:	bl	128c4 <fprintf@plt>
   16aa8:	b	16adc <print_full_field_name@@Base+0x37c>
   16aac:	ldr	r2, [sl, r6, lsl #2]
   16ab0:	cmn	r2, #1
   16ab4:	bne	16acc <print_full_field_name@@Base+0x36c>
   16ab8:	mov	r0, #63	; 0x3f
   16abc:	mov	r1, r4
   16ac0:	bl	129fc <fputc@plt>
   16ac4:	b	16adc <print_full_field_name@@Base+0x37c>
   16ac8:	ldr	r2, [r0, #4]
   16acc:	movw	r1, #41380	; 0xa1a4
   16ad0:	mov	r0, r4
   16ad4:	movt	r1, #1
   16ad8:	bl	128c4 <fprintf@plt>
   16adc:	ldr	r0, [r7]
   16ae0:	add	r6, r6, #1
   16ae4:	cmp	r6, r0
   16ae8:	blt	16a58 <print_full_field_name@@Base+0x2f8>
   16aec:	sub	sp, fp, #28
   16af0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016af4 <traverse_info_init@@Base>:
   16af4:	movw	r0, #49640	; 0xc1e8
   16af8:	mov	r1, #0
   16afc:	movt	r0, #2
   16b00:	str	r1, [r0, #136]	; 0x88
   16b04:	str	r1, [r0, #4]
   16b08:	str	r1, [r0, #3360]	; 0xd20
   16b0c:	str	r1, [r0, #3748]	; 0xea4
   16b10:	bx	lr

00016b14 <traverse_info_done@@Base>:
   16b14:	push	{r4, sl, fp, lr}
   16b18:	add	fp, sp, #8
   16b1c:	movw	r4, #49640	; 0xc1e8
   16b20:	movt	r4, #2
   16b24:	ldr	r0, [r4, #4]
   16b28:	cmp	r0, #0
   16b2c:	beq	16b34 <traverse_info_done@@Base+0x20>
   16b30:	bl	129a8 <coda_close@plt>
   16b34:	ldr	r0, [r4, #664]	; 0x298
   16b38:	cmp	r0, #0
   16b3c:	popeq	{r4, sl, fp, pc}
   16b40:	add	r0, r4, #664	; 0x298
   16b44:	pop	{r4, sl, fp, lr}
   16b48:	b	15810 <codadump_filter_remove@@Base>

00016b4c <traverse_product@@Base>:
   16b4c:	push	{r4, r5, fp, lr}
   16b50:	add	fp, sp, #8
   16b54:	movw	r5, #49640	; 0xc1e8
   16b58:	movt	r5, #2
   16b5c:	mov	r1, r5
   16b60:	ldr	r0, [r1], #4
   16b64:	bl	126c0 <coda_open@plt>
   16b68:	cmp	r0, #0
   16b6c:	beq	16bac <traverse_product@@Base+0x60>
   16b70:	bl	12a68 <coda_get_errno@plt>
   16b74:	ldr	r0, [r0]
   16b78:	cmn	r0, #21
   16b7c:	bne	16ba8 <traverse_product@@Base+0x5c>
   16b80:	mov	r0, #0
   16b84:	bl	12708 <coda_set_option_use_mmap@plt>
   16b88:	mov	r1, r5
   16b8c:	ldr	r0, [r1], #4
   16b90:	bl	126c0 <coda_open@plt>
   16b94:	mov	r4, r0
   16b98:	mov	r0, #1
   16b9c:	bl	12708 <coda_set_option_use_mmap@plt>
   16ba0:	cmp	r4, #0
   16ba4:	beq	16bac <traverse_product@@Base+0x60>
   16ba8:	bl	17fcc <handle_coda_error@@Base>
   16bac:	ldr	r1, [r5, #4]
   16bb0:	add	r4, r5, #144	; 0x90
   16bb4:	mov	r0, r4
   16bb8:	bl	127ec <coda_cursor_set_product@plt>
   16bbc:	cmp	r0, #0
   16bc0:	beq	16bc8 <traverse_product@@Base+0x7c>
   16bc4:	bl	17fcc <handle_coda_error@@Base>
   16bc8:	ldr	r0, [r5, #136]	; 0x88
   16bcc:	add	r0, r5, r0, lsl #2
   16bd0:	add	r1, r0, #8
   16bd4:	mov	r0, r4
   16bd8:	bl	12744 <coda_cursor_get_type@plt>
   16bdc:	cmp	r0, #0
   16be0:	beq	16be8 <traverse_product@@Base+0x9c>
   16be4:	bl	17fcc <handle_coda_error@@Base>
   16be8:	bl	16c00 <traverse_product@@Base+0xb4>
   16bec:	ldr	r0, [r5, #4]
   16bf0:	bl	129a8 <coda_close@plt>
   16bf4:	mov	r0, #0
   16bf8:	str	r0, [r5, #4]
   16bfc:	pop	{r4, r5, fp, pc}
   16c00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16c04:	add	fp, sp, #24
   16c08:	sub	sp, sp, #16
   16c0c:	movw	r6, #49640	; 0xc1e8
   16c10:	add	r1, sp, #12
   16c14:	movt	r6, #2
   16c18:	ldr	r0, [r6, #136]	; 0x88
   16c1c:	add	r0, r6, r0, lsl #2
   16c20:	ldr	r0, [r0, #8]
   16c24:	bl	12ac8 <coda_type_get_class@plt>
   16c28:	cmp	r0, #0
   16c2c:	beq	16c34 <traverse_product@@Base+0xe8>
   16c30:	bl	17fcc <handle_coda_error@@Base>
   16c34:	ldr	r0, [sp, #12]
   16c38:	cmp	r0, #6
   16c3c:	bhi	16e88 <traverse_product@@Base+0x33c>
   16c40:	add	r1, pc, #0
   16c44:	ldr	pc, [r1, r0, lsl #2]
   16c48:	andeq	r6, r1, r0, asr #25
   16c4c:			; <UNDEFINED> instruction: 0x00016dbc
   16c50:	andeq	r6, r1, r4, ror #24
   16c54:	andeq	r6, r1, r4, ror #24
   16c58:	andeq	r6, r1, r4, ror #24
   16c5c:	andeq	r6, r1, r4, ror #24
   16c60:	andeq	r6, r1, r4, lsl lr
   16c64:	ldr	r0, [r6, #136]	; 0x88
   16c68:	add	r1, sp, #8
   16c6c:	add	r0, r6, r0, lsl #2
   16c70:	ldr	r0, [r0, #8]
   16c74:	bl	12888 <coda_type_get_read_type@plt>
   16c78:	cmp	r0, #0
   16c7c:	beq	16c84 <traverse_product@@Base+0x138>
   16c80:	bl	17fcc <handle_coda_error@@Base>
   16c84:	ldr	r0, [sp, #8]
   16c88:	sub	r0, r0, #11
   16c8c:	cmp	r0, #1
   16c90:	bhi	16e84 <traverse_product@@Base+0x338>
   16c94:	bl	147f4 <dim_enter_array@@Base>
   16c98:	ldr	r0, [r6, #3360]	; 0xd20
   16c9c:	add	r0, r0, #1
   16ca0:	str	r0, [r6, #3360]	; 0xd20
   16ca4:	bl	17044 <traverse_product@@Base+0x4f8>
   16ca8:	ldr	r0, [r6, #3360]	; 0xd20
   16cac:	sub	r0, r0, #1
   16cb0:	str	r0, [r6, #3360]	; 0xd20
   16cb4:	bl	153fc <dim_leave_array@@Base>
   16cb8:	sub	sp, fp, #24
   16cbc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16cc0:	ldr	r0, [r6, #136]	; 0x88
   16cc4:	cmp	r0, #30
   16cc8:	bgt	16e88 <traverse_product@@Base+0x33c>
   16ccc:	ldr	r1, [r6, #3748]	; 0xea4
   16cd0:	add	r0, r6, r0, lsl #2
   16cd4:	add	r1, r1, #1
   16cd8:	str	r1, [r6, #3748]	; 0xea4
   16cdc:	add	r1, sp, #8
   16ce0:	ldr	r0, [r0, #8]
   16ce4:	bl	12870 <coda_type_get_num_record_fields@plt>
   16ce8:	cmp	r0, #0
   16cec:	beq	16cf4 <traverse_product@@Base+0x1a8>
   16cf0:	bl	17fcc <handle_coda_error@@Base>
   16cf4:	ldr	r0, [r6, #136]	; 0x88
   16cf8:	add	r0, r0, #1
   16cfc:	str	r0, [r6, #136]	; 0x88
   16d00:	ldr	r0, [r6, #796]	; 0x31c
   16d04:	add	r0, r6, r0, lsl #2
   16d08:	ldr	r8, [r0, #664]	; 0x298
   16d0c:	cmp	r8, #0
   16d10:	beq	16e90 <traverse_product@@Base+0x344>
   16d14:	add	r4, sp, #4
   16d18:	add	r7, r6, #664	; 0x298
   16d1c:	mov	r0, r8
   16d20:	bl	158bc <codadump_filter_get_fieldname@@Base>
   16d24:	cmp	r0, #0
   16d28:	beq	16ee4 <traverse_product@@Base+0x398>
   16d2c:	mov	r5, r0
   16d30:	ldr	r0, [r6, #136]	; 0x88
   16d34:	mov	r2, r4
   16d38:	mov	r1, r5
   16d3c:	add	r0, r6, r0, lsl #2
   16d40:	ldr	r0, [r0, #4]
   16d44:	bl	129d8 <coda_type_get_record_field_index_from_name@plt>
   16d48:	cmp	r0, #0
   16d4c:	beq	16d64 <traverse_product@@Base+0x218>
   16d50:	bl	12a68 <coda_get_errno@plt>
   16d54:	ldr	r0, [r0]
   16d58:	cmn	r0, #102	; 0x66
   16d5c:	beq	16f04 <traverse_product@@Base+0x3b8>
   16d60:	bl	17fcc <handle_coda_error@@Base>
   16d64:	ldr	r0, [r6, #796]	; 0x31c
   16d68:	ldr	r0, [r7, r0, lsl #2]
   16d6c:	bl	158f0 <codadump_filter_get_subfilter@@Base>
   16d70:	ldr	r1, [r6, #796]	; 0x31c
   16d74:	add	r1, r1, #1
   16d78:	str	r0, [r7, r1, lsl #2]
   16d7c:	ldr	r0, [sp, #4]
   16d80:	str	r1, [r6, #796]	; 0x31c
   16d84:	mov	r1, #1
   16d88:	bl	16f28 <traverse_product@@Base+0x3dc>
   16d8c:	ldr	r0, [r6, #796]	; 0x31c
   16d90:	sub	r0, r0, #1
   16d94:	str	r0, [r6, #796]	; 0x31c
   16d98:	ldr	r0, [r7, r0, lsl #2]
   16d9c:	bl	15924 <codadump_filter_get_next_filter@@Base>
   16da0:	ldr	r1, [r6, #796]	; 0x31c
   16da4:	cmp	r0, #0
   16da8:	str	r0, [r7, r1, lsl #2]
   16dac:	bne	16d20 <traverse_product@@Base+0x1d4>
   16db0:	add	r0, r7, r1, lsl #2
   16db4:	str	r8, [r0]
   16db8:	b	16ec4 <traverse_product@@Base+0x378>
   16dbc:	ldr	r0, [r6, #136]	; 0x88
   16dc0:	cmp	r0, #30
   16dc4:	bgt	16e88 <traverse_product@@Base+0x33c>
   16dc8:	bl	147f4 <dim_enter_array@@Base>
   16dcc:	ldr	r0, [r6, #3360]	; 0xd20
   16dd0:	add	r2, r6, #8
   16dd4:	add	r0, r0, #1
   16dd8:	str	r0, [r6, #3360]	; 0xd20
   16ddc:	ldr	r0, [r6, #136]	; 0x88
   16de0:	add	r1, r0, #1
   16de4:	str	r1, [r6, #136]	; 0x88
   16de8:	add	r1, r2, r1, lsl #2
   16dec:	ldr	r0, [r2, r0, lsl #2]
   16df0:	bl	12960 <coda_type_get_array_base_type@plt>
   16df4:	cmp	r0, #0
   16df8:	beq	16e00 <traverse_product@@Base+0x2b4>
   16dfc:	bl	17fcc <handle_coda_error@@Base>
   16e00:	bl	16c00 <traverse_product@@Base+0xb4>
   16e04:	ldr	r0, [r6, #136]	; 0x88
   16e08:	sub	r0, r0, #1
   16e0c:	str	r0, [r6, #136]	; 0x88
   16e10:	b	16ca8 <traverse_product@@Base+0x15c>
   16e14:	bl	12654 <coda_get_option_bypass_special_types@plt>
   16e18:	mov	r2, r0
   16e1c:	ldr	r0, [r6, #136]	; 0x88
   16e20:	cmp	r2, #0
   16e24:	add	r1, r6, r0, lsl #2
   16e28:	ldr	r0, [r1, #8]!
   16e2c:	beq	16e4c <traverse_product@@Base+0x300>
   16e30:	bl	12a74 <coda_type_get_special_base_type@plt>
   16e34:	cmp	r0, #0
   16e38:	beq	16e40 <traverse_product@@Base+0x2f4>
   16e3c:	bl	17fcc <handle_coda_error@@Base>
   16e40:	bl	16c00 <traverse_product@@Base+0xb4>
   16e44:	sub	sp, fp, #24
   16e48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16e4c:	add	r1, sp, #8
   16e50:	bl	1293c <coda_type_get_special_type@plt>
   16e54:	cmp	r0, #0
   16e58:	beq	16e60 <traverse_product@@Base+0x314>
   16e5c:	bl	17fcc <handle_coda_error@@Base>
   16e60:	ldr	r0, [sp, #8]
   16e64:	sub	r1, r0, #1
   16e68:	cmp	r1, #2
   16e6c:	bcc	16e84 <traverse_product@@Base+0x338>
   16e70:	cmp	r0, #0
   16e74:	beq	16e88 <traverse_product@@Base+0x33c>
   16e78:	cmp	r0, #3
   16e7c:	beq	16c94 <traverse_product@@Base+0x148>
   16e80:	b	16e88 <traverse_product@@Base+0x33c>
   16e84:	bl	17044 <traverse_product@@Base+0x4f8>
   16e88:	sub	sp, fp, #24
   16e8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16e90:	ldr	r1, [sp, #8]
   16e94:	mov	r0, #0
   16e98:	str	r0, [sp, #4]
   16e9c:	cmp	r1, #1
   16ea0:	blt	16ec4 <traverse_product@@Base+0x378>
   16ea4:	mov	r1, #0
   16ea8:	bl	16f28 <traverse_product@@Base+0x3dc>
   16eac:	ldr	r0, [sp, #4]
   16eb0:	ldr	r1, [sp, #8]
   16eb4:	add	r0, r0, #1
   16eb8:	cmp	r0, r1
   16ebc:	str	r0, [sp, #4]
   16ec0:	blt	16ea4 <traverse_product@@Base+0x358>
   16ec4:	ldr	r0, [r6, #136]	; 0x88
   16ec8:	sub	r0, r0, #1
   16ecc:	str	r0, [r6, #136]	; 0x88
   16ed0:	ldr	r0, [r6, #3748]	; 0xea4
   16ed4:	sub	r0, r0, #1
   16ed8:	str	r0, [r6, #3748]	; 0xea4
   16edc:	sub	sp, fp, #24
   16ee0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16ee4:	movw	r0, #41384	; 0xa1a8
   16ee8:	movw	r1, #41397	; 0xa1b5
   16eec:	movw	r3, #41484	; 0xa20c
   16ef0:	movw	r2, #393	; 0x189
   16ef4:	movt	r0, #1
   16ef8:	movt	r1, #1
   16efc:	movt	r3, #1
   16f00:	bl	12abc <__assert_fail@plt>
   16f04:	movw	r0, #49584	; 0xc1b0
   16f08:	movw	r1, #41505	; 0xa221
   16f0c:	mov	r2, r5
   16f10:	movt	r0, #2
   16f14:	movt	r1, #1
   16f18:	ldr	r0, [r0]
   16f1c:	bl	128c4 <fprintf@plt>
   16f20:	mov	r0, #1
   16f24:	bl	1287c <exit@plt>
   16f28:	push	{r4, r5, r6, sl, fp, lr}
   16f2c:	add	fp, sp, #16
   16f30:	sub	sp, sp, #8
   16f34:	movw	r6, #49640	; 0xc1e8
   16f38:	mov	r4, r0
   16f3c:	mov	r5, r1
   16f40:	add	r2, sp, #4
   16f44:	movt	r6, #2
   16f48:	mov	r1, r4
   16f4c:	ldr	r0, [r6, #3748]	; 0xea4
   16f50:	add	r0, r6, r0, lsl #2
   16f54:	str	r4, [r0, #3488]	; 0xda0
   16f58:	ldr	r0, [r6, #136]	; 0x88
   16f5c:	add	r0, r6, r0, lsl #2
   16f60:	ldr	r0, [r0, #4]
   16f64:	bl	12684 <coda_type_get_record_field_hidden_status@plt>
   16f68:	cmp	r0, #0
   16f6c:	beq	16f74 <traverse_product@@Base+0x428>
   16f70:	bl	17fcc <handle_coda_error@@Base>
   16f74:	cmp	r5, #0
   16f78:	bne	16f88 <traverse_product@@Base+0x43c>
   16f7c:	ldr	r0, [sp, #4]
   16f80:	cmp	r0, #0
   16f84:	bne	1703c <traverse_product@@Base+0x4f0>
   16f88:	movw	r0, #49636	; 0xc1e4
   16f8c:	movt	r0, #2
   16f90:	ldr	r0, [r0]
   16f94:	cmp	r0, #0
   16f98:	beq	16fe8 <traverse_product@@Base+0x49c>
   16f9c:	ldr	r0, [r6, #136]	; 0x88
   16fa0:	mov	r2, sp
   16fa4:	mov	r1, r4
   16fa8:	add	r0, r6, r0, lsl #2
   16fac:	ldr	r0, [r0, #4]
   16fb0:	bl	12774 <coda_type_get_record_field_available_status@plt>
   16fb4:	cmp	r0, #0
   16fb8:	beq	16fc0 <traverse_product@@Base+0x474>
   16fbc:	bl	17fcc <handle_coda_error@@Base>
   16fc0:	ldr	r0, [sp]
   16fc4:	cmn	r0, #1
   16fc8:	bne	16fdc <traverse_product@@Base+0x490>
   16fcc:	bl	15528 <dim_record_field_available@@Base>
   16fd0:	cmp	r0, #0
   16fd4:	beq	1703c <traverse_product@@Base+0x4f0>
   16fd8:	ldr	r0, [sp]
   16fdc:	ldr	r1, [r6, #136]	; 0x88
   16fe0:	add	r1, r6, r1, lsl #2
   16fe4:	str	r0, [r1, #3360]	; 0xd20
   16fe8:	ldr	r0, [r6, #136]	; 0x88
   16fec:	ldr	r1, [r6, #3748]	; 0xea4
   16ff0:	add	r0, r6, r0, lsl #2
   16ff4:	add	r1, r6, r1, lsl #2
   16ff8:	ldr	r0, [r0, #4]
   16ffc:	add	r2, r1, #3616	; 0xe20
   17000:	mov	r1, r4
   17004:	bl	12a80 <coda_type_get_record_field_name@plt>
   17008:	cmp	r0, #0
   1700c:	beq	17014 <traverse_product@@Base+0x4c8>
   17010:	bl	17fcc <handle_coda_error@@Base>
   17014:	ldr	r0, [r6, #136]	; 0x88
   17018:	add	r1, r6, r0, lsl #2
   1701c:	ldr	r0, [r1, #4]
   17020:	add	r2, r1, #8
   17024:	mov	r1, r4
   17028:	bl	12738 <coda_type_get_record_field_type@plt>
   1702c:	cmp	r0, #0
   17030:	beq	17038 <traverse_product@@Base+0x4ec>
   17034:	bl	17fcc <handle_coda_error@@Base>
   17038:	bl	16c00 <traverse_product@@Base+0xb4>
   1703c:	sub	sp, fp, #16
   17040:	pop	{r4, r5, r6, sl, fp, pc}
   17044:	push	{r4, r5, fp, lr}
   17048:	add	fp, sp, #8
   1704c:	sub	sp, sp, #8
   17050:	movw	r0, #53412	; 0xd0a4
   17054:	movt	r0, #2
   17058:	ldr	r0, [r0]
   1705c:	cmp	r0, #1
   17060:	beq	17108 <traverse_product@@Base+0x5bc>
   17064:	cmp	r0, #0
   17068:	bne	17288 <traverse_product@@Base+0x73c>
   1706c:	movw	r4, #49588	; 0xc1b4
   17070:	mov	r1, #1
   17074:	mov	r2, #0
   17078:	movt	r4, #2
   1707c:	ldr	r0, [r4]
   17080:	bl	16760 <print_full_field_name@@Base>
   17084:	movw	r0, #53400	; 0xd098
   17088:	movt	r0, #2
   1708c:	ldr	r0, [r0]
   17090:	cmp	r0, #0
   17094:	beq	17184 <traverse_product@@Base+0x638>
   17098:	movw	r5, #49640	; 0xc1e8
   1709c:	add	r1, sp, #4
   170a0:	movt	r5, #2
   170a4:	ldr	r0, [r5, #136]	; 0x88
   170a8:	add	r0, r5, r0, lsl #2
   170ac:	ldr	r0, [r0, #8]
   170b0:	bl	12ac8 <coda_type_get_class@plt>
   170b4:	cmp	r0, #0
   170b8:	beq	170c0 <traverse_product@@Base+0x574>
   170bc:	bl	17fcc <handle_coda_error@@Base>
   170c0:	ldr	r0, [sp, #4]
   170c4:	cmp	r0, #6
   170c8:	bne	17114 <traverse_product@@Base+0x5c8>
   170cc:	ldr	r0, [r5, #136]	; 0x88
   170d0:	mov	r1, sp
   170d4:	add	r0, r5, r0, lsl #2
   170d8:	ldr	r0, [r0, #8]
   170dc:	bl	1293c <coda_type_get_special_type@plt>
   170e0:	cmp	r0, #0
   170e4:	beq	170ec <traverse_product@@Base+0x5a0>
   170e8:	bl	17fcc <handle_coda_error@@Base>
   170ec:	ldr	r0, [sp]
   170f0:	bl	12630 <coda_type_get_special_type_name@plt>
   170f4:	mov	r1, r0
   170f8:	movw	r0, #41557	; 0xa255
   170fc:	movt	r0, #1
   17100:	bl	12690 <printf@plt>
   17104:	b	17184 <traverse_product@@Base+0x638>
   17108:	sub	sp, fp, #8
   1710c:	pop	{r4, r5, fp, lr}
   17110:	b	12bc4 <export_data_element_to_ascii@@Base>
   17114:	ldr	r0, [r5, #136]	; 0x88
   17118:	mov	r1, sp
   1711c:	add	r0, r5, r0, lsl #2
   17120:	ldr	r0, [r0, #8]
   17124:	bl	12888 <coda_type_get_read_type@plt>
   17128:	cmp	r0, #0
   1712c:	beq	17134 <traverse_product@@Base+0x5e8>
   17130:	bl	17fcc <handle_coda_error@@Base>
   17134:	ldr	r0, [sp]
   17138:	bl	12984 <coda_type_get_native_type_name@plt>
   1713c:	mov	r1, r0
   17140:	movw	r0, #41557	; 0xa255
   17144:	movt	r0, #1
   17148:	bl	12690 <printf@plt>
   1714c:	ldr	r0, [sp]
   17150:	sub	r0, r0, #11
   17154:	cmp	r0, #1
   17158:	bhi	17184 <traverse_product@@Base+0x638>
   1715c:	mov	r0, #40	; 0x28
   17160:	bl	12924 <putchar@plt>
   17164:	ldr	r1, [r5, #3360]	; 0xd20
   17168:	cmp	r1, #0
   1716c:	ble	17290 <traverse_product@@Base+0x744>
   17170:	ldr	r0, [r4]
   17174:	sub	r1, r1, #1
   17178:	bl	16a0c <print_full_field_name@@Base+0x2ac>
   1717c:	mov	r0, #41	; 0x29
   17180:	bl	12924 <putchar@plt>
   17184:	movw	r0, #49632	; 0xc1e0
   17188:	movt	r0, #2
   1718c:	ldr	r0, [r0]
   17190:	cmp	r0, #0
   17194:	beq	171e0 <traverse_product@@Base+0x694>
   17198:	movw	r0, #49640	; 0xc1e8
   1719c:	movt	r0, #2
   171a0:	ldr	r1, [r0, #136]	; 0x88
   171a4:	add	r0, r0, r1, lsl #2
   171a8:	add	r1, sp, #4
   171ac:	ldr	r0, [r0, #8]
   171b0:	bl	127b0 <coda_type_get_unit@plt>
   171b4:	cmp	r0, #0
   171b8:	beq	171c0 <traverse_product@@Base+0x674>
   171bc:	bl	17fcc <handle_coda_error@@Base>
   171c0:	ldr	r1, [sp, #4]
   171c4:	cmp	r1, #0
   171c8:	ldrbne	r0, [r1]
   171cc:	cmpne	r0, #0
   171d0:	beq	171e0 <traverse_product@@Base+0x694>
   171d4:	movw	r0, #41617	; 0xa291
   171d8:	movt	r0, #1
   171dc:	bl	12690 <printf@plt>
   171e0:	movw	r0, #53404	; 0xd09c
   171e4:	movt	r0, #2
   171e8:	ldr	r0, [r0]
   171ec:	cmp	r0, #0
   171f0:	beq	1723c <traverse_product@@Base+0x6f0>
   171f4:	movw	r0, #49640	; 0xc1e8
   171f8:	movt	r0, #2
   171fc:	ldr	r1, [r0, #136]	; 0x88
   17200:	add	r0, r0, r1, lsl #2
   17204:	add	r1, sp, #4
   17208:	ldr	r0, [r0, #8]
   1720c:	bl	127bc <coda_type_get_description@plt>
   17210:	cmp	r0, #0
   17214:	beq	1721c <traverse_product@@Base+0x6d0>
   17218:	bl	17fcc <handle_coda_error@@Base>
   1721c:	ldr	r1, [sp, #4]
   17220:	cmp	r1, #0
   17224:	ldrbne	r0, [r1]
   17228:	cmpne	r0, #0
   1722c:	beq	1723c <traverse_product@@Base+0x6f0>
   17230:	movw	r0, #41623	; 0xa297
   17234:	movt	r0, #1
   17238:	bl	12690 <printf@plt>
   1723c:	mov	r0, #10
   17240:	bl	12924 <putchar@plt>
   17244:	movw	r0, #49620	; 0xc1d4
   17248:	movt	r0, #2
   1724c:	ldr	r0, [r0]
   17250:	cmp	r0, #0
   17254:	beq	17288 <traverse_product@@Base+0x73c>
   17258:	movw	r5, #53424	; 0xd0b0
   1725c:	movt	r5, #2
   17260:	ldr	r0, [r5]
   17264:	cmp	r0, #1
   17268:	blt	17288 <traverse_product@@Base+0x73c>
   1726c:	mov	r4, #0
   17270:	mov	r0, r4
   17274:	bl	14628 <print_all_distinct_dims@@Base>
   17278:	ldr	r0, [r5]
   1727c:	add	r4, r4, #1
   17280:	cmp	r4, r0
   17284:	blt	17270 <traverse_product@@Base+0x724>
   17288:	sub	sp, fp, #8
   1728c:	pop	{r4, r5, fp, pc}
   17290:	movw	r0, #41561	; 0xa259
   17294:	movw	r1, #41397	; 0xa1b5
   17298:	movw	r3, #41590	; 0xa276
   1729c:	mov	r2, #238	; 0xee
   172a0:	movt	r0, #1
   172a4:	movt	r1, #1
   172a8:	movt	r3, #1
   172ac:	bl	12abc <__assert_fail@plt>

000172b0 <print_yaml_data@@Base>:
   172b0:	push	{r4, sl, fp, lr}
   172b4:	add	fp, sp, #8
   172b8:	sub	sp, sp, #528	; 0x210
   172bc:	movw	r1, #49608	; 0xc1c8
   172c0:	movw	r4, #49640	; 0xc1e8
   172c4:	movt	r1, #2
   172c8:	movt	r4, #2
   172cc:	str	r0, [r1]
   172d0:	ldr	r0, [r4]
   172d4:	sub	r1, fp, #12
   172d8:	bl	126c0 <coda_open@plt>
   172dc:	cmp	r0, #0
   172e0:	beq	17320 <print_yaml_data@@Base+0x70>
   172e4:	bl	12a68 <coda_get_errno@plt>
   172e8:	ldr	r0, [r0]
   172ec:	cmn	r0, #21
   172f0:	bne	1731c <print_yaml_data@@Base+0x6c>
   172f4:	mov	r0, #0
   172f8:	bl	12708 <coda_set_option_use_mmap@plt>
   172fc:	ldr	r0, [r4]
   17300:	sub	r1, fp, #12
   17304:	bl	126c0 <coda_open@plt>
   17308:	mov	r4, r0
   1730c:	mov	r0, #1
   17310:	bl	12708 <coda_set_option_use_mmap@plt>
   17314:	cmp	r4, #0
   17318:	beq	17320 <print_yaml_data@@Base+0x70>
   1731c:	bl	17fcc <handle_coda_error@@Base>
   17320:	ldr	r1, [fp, #-12]
   17324:	mov	r0, sp
   17328:	bl	127ec <coda_cursor_set_product@plt>
   1732c:	cmp	r0, #0
   17330:	beq	17338 <print_yaml_data@@Base+0x88>
   17334:	bl	17fcc <handle_coda_error@@Base>
   17338:	movw	r0, #53416	; 0xd0a8
   1733c:	movt	r0, #2
   17340:	ldr	r1, [r0]
   17344:	cmp	r1, #0
   17348:	beq	17360 <print_yaml_data@@Base+0xb0>
   1734c:	mov	r0, sp
   17350:	bl	129cc <coda_cursor_goto@plt>
   17354:	cmp	r0, #0
   17358:	beq	17360 <print_yaml_data@@Base+0xb0>
   1735c:	bl	17fcc <handle_coda_error@@Base>
   17360:	mov	r0, #0
   17364:	bl	12660 <coda_set_option_perform_boundary_checks@plt>
   17368:	mov	r0, sp
   1736c:	mov	r1, #0
   17370:	bl	17384 <print_yaml_data@@Base+0xd4>
   17374:	ldr	r0, [fp, #-12]
   17378:	bl	129a8 <coda_close@plt>
   1737c:	sub	sp, fp, #8
   17380:	pop	{r4, sl, fp, pc}
   17384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17388:	add	fp, sp, #28
   1738c:	sub	sp, sp, #76	; 0x4c
   17390:	mov	sl, r0
   17394:	mov	r0, #0
   17398:	mov	r5, r1
   1739c:	str	r0, [fp, #-36]	; 0xffffffdc
   173a0:	movw	r0, #49608	; 0xc1c8
   173a4:	movt	r0, #2
   173a8:	ldr	r0, [r0]
   173ac:	cmp	r0, #0
   173b0:	beq	174a4 <print_yaml_data@@Base+0x1f4>
   173b4:	sub	r1, fp, #36	; 0x24
   173b8:	mov	r0, sl
   173bc:	bl	12780 <coda_cursor_has_attributes@plt>
   173c0:	cmp	r0, #0
   173c4:	beq	173cc <print_yaml_data@@Base+0x11c>
   173c8:	bl	17fcc <handle_coda_error@@Base>
   173cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   173d0:	cmp	r0, #0
   173d4:	beq	174a4 <print_yaml_data@@Base+0x1f4>
   173d8:	cmp	r5, #0
   173dc:	beq	17438 <print_yaml_data@@Base+0x188>
   173e0:	movw	r0, #42177	; 0xa4c1
   173e4:	movt	r0, #1
   173e8:	bl	17d68 <print_yaml_data@@Base+0xab8>
   173ec:	movw	r0, #49612	; 0xc1cc
   173f0:	movt	r0, #2
   173f4:	ldr	r0, [r0]
   173f8:	cmp	r0, #0
   173fc:	blt	17d48 <print_yaml_data@@Base+0xa98>
   17400:	beq	17438 <print_yaml_data@@Base+0x188>
   17404:	movw	r7, #53392	; 0xd090
   17408:	movw	r6, #40111	; 0x9caf
   1740c:	add	r4, r0, #1
   17410:	movt	r7, #2
   17414:	movt	r6, #1
   17418:	ldr	r3, [r7]
   1741c:	mov	r0, r6
   17420:	mov	r1, #2
   17424:	mov	r2, #1
   17428:	bl	127e0 <fwrite@plt>
   1742c:	sub	r4, r4, #1
   17430:	cmp	r4, #1
   17434:	bgt	17418 <print_yaml_data@@Base+0x168>
   17438:	movw	r0, #41629	; 0xa29d
   1743c:	movt	r0, #1
   17440:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17444:	mov	r0, sl
   17448:	bl	12900 <coda_cursor_goto_attributes@plt>
   1744c:	cmp	r0, #0
   17450:	beq	17458 <print_yaml_data@@Base+0x1a8>
   17454:	bl	17fcc <handle_coda_error@@Base>
   17458:	movw	r4, #49612	; 0xc1cc
   1745c:	mov	r1, #1
   17460:	movt	r4, #2
   17464:	ldr	r0, [r4]
   17468:	add	r0, r0, #1
   1746c:	str	r0, [r4]
   17470:	mov	r0, sl
   17474:	bl	17384 <print_yaml_data@@Base+0xd4>
   17478:	ldr	r0, [r4]
   1747c:	sub	r0, r0, #1
   17480:	str	r0, [r4]
   17484:	mov	r0, sl
   17488:	bl	12864 <coda_cursor_goto_parent@plt>
   1748c:	movw	r0, #41636	; 0xa2a4
   17490:	movt	r0, #1
   17494:	bl	17db0 <print_yaml_data@@Base+0xb00>
   17498:	ldr	r0, [r4]
   1749c:	add	r0, r0, #1
   174a0:	str	r0, [r4]
   174a4:	sub	r1, fp, #32
   174a8:	mov	r0, sl
   174ac:	bl	1278c <coda_cursor_get_type_class@plt>
   174b0:	cmp	r0, #0
   174b4:	beq	174bc <print_yaml_data@@Base+0x20c>
   174b8:	bl	17fcc <handle_coda_error@@Base>
   174bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   174c0:	cmp	r0, #6
   174c4:	bhi	17cf0 <print_yaml_data@@Base+0xa40>
   174c8:	add	r1, pc, #0
   174cc:	ldr	pc, [r1, r0, lsl #2]
   174d0:	andeq	r7, r1, r0, lsl #11
   174d4:	ldrdeq	r7, [r1], -r4
   174d8:	andeq	r7, r1, ip, ror #9
   174dc:	andeq	r7, r1, ip, ror #9
   174e0:	andeq	r7, r1, ip, ror #9
   174e4:	andeq	r7, r1, ip, ror #9
   174e8:	andeq	r7, r1, r8, lsl r7
   174ec:	sub	r1, fp, #40	; 0x28
   174f0:	mov	r0, sl
   174f4:	bl	12828 <coda_cursor_get_read_type@plt>
   174f8:	cmp	r0, #0
   174fc:	beq	17504 <print_yaml_data@@Base+0x254>
   17500:	bl	17fcc <handle_coda_error@@Base>
   17504:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17508:	add	r0, r0, #1
   1750c:	cmp	r0, #13
   17510:	bhi	17cf0 <print_yaml_data@@Base+0xa40>
   17514:	add	r1, pc, #0
   17518:	ldr	pc, [r1, r0, lsl #2]
   1751c:	andeq	r7, r1, r4, asr r7
   17520:	andeq	r7, r1, r4, asr r5
   17524:	andeq	r7, r1, r0, ror #14
   17528:	andeq	r7, r1, r4, asr r5
   1752c:	andeq	r7, r1, r0, ror #14
   17530:	andeq	r7, r1, r4, asr r5
   17534:	andeq	r7, r1, r0, ror #14
   17538:			; <UNDEFINED> instruction: 0x000178b8
   1753c:	andeq	r7, r1, r8, ror #17
   17540:	andeq	r7, r1, ip, lsl #15
   17544:	andeq	r7, r1, ip, lsl #15
   17548:	ldrdeq	r7, [r1], -r0
   1754c:	andeq	r7, r1, ip, lsl #16
   17550:	andeq	r7, r1, r8, lsr #18
   17554:	add	r1, sp, #16
   17558:	mov	r0, sl
   1755c:	bl	12a44 <coda_cursor_read_int32@plt>
   17560:	cmp	r0, #0
   17564:	beq	1756c <print_yaml_data@@Base+0x2bc>
   17568:	bl	17fcc <handle_coda_error@@Base>
   1756c:	ldr	r1, [sp, #16]
   17570:	movw	r0, #39960	; 0x9c18
   17574:	movt	r0, #1
   17578:	bl	17d68 <print_yaml_data@@Base+0xab8>
   1757c:	b	17cf0 <print_yaml_data@@Base+0xa40>
   17580:	add	r1, sp, #16
   17584:	mov	r0, sl
   17588:	bl	126e4 <coda_cursor_get_num_elements@plt>
   1758c:	cmp	r0, #0
   17590:	beq	17598 <print_yaml_data@@Base+0x2e8>
   17594:	bl	17fcc <handle_coda_error@@Base>
   17598:	ldr	r0, [sp, #16]
   1759c:	cmp	r0, #1
   175a0:	blt	177c4 <print_yaml_data@@Base+0x514>
   175a4:	cmp	r5, #0
   175a8:	beq	175b8 <print_yaml_data@@Base+0x308>
   175ac:	movw	r0, #42177	; 0xa4c1
   175b0:	movt	r0, #1
   175b4:	bl	17d68 <print_yaml_data@@Base+0xab8>
   175b8:	add	r1, sp, #8
   175bc:	mov	r0, sl
   175c0:	bl	12744 <coda_cursor_get_type@plt>
   175c4:	cmp	r0, #0
   175c8:	beq	175d0 <print_yaml_data@@Base+0x320>
   175cc:	bl	17fcc <handle_coda_error@@Base>
   175d0:	ldr	r0, [sp, #8]
   175d4:	sub	r1, fp, #40	; 0x28
   175d8:	bl	12948 <coda_type_get_record_union_status@plt>
   175dc:	cmp	r0, #0
   175e0:	beq	175e8 <print_yaml_data@@Base+0x338>
   175e4:	bl	17fcc <handle_coda_error@@Base>
   175e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   175ec:	cmp	r0, #0
   175f0:	beq	179f0 <print_yaml_data@@Base+0x740>
   175f4:	sub	r1, fp, #44	; 0x2c
   175f8:	mov	r0, sl
   175fc:	bl	12a38 <coda_cursor_get_available_union_field_index@plt>
   17600:	cmp	r0, #0
   17604:	beq	1760c <print_yaml_data@@Base+0x35c>
   17608:	bl	17fcc <handle_coda_error@@Base>
   1760c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17610:	ldr	r0, [sp, #8]
   17614:	sub	r2, fp, #48	; 0x30
   17618:	bl	12a80 <coda_type_get_record_field_name@plt>
   1761c:	cmp	r0, #0
   17620:	beq	17628 <print_yaml_data@@Base+0x378>
   17624:	bl	17fcc <handle_coda_error@@Base>
   17628:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1762c:	mov	r0, sl
   17630:	bl	12804 <coda_cursor_goto_record_field_by_index@plt>
   17634:	cmp	r0, #0
   17638:	beq	17640 <print_yaml_data@@Base+0x390>
   1763c:	bl	17fcc <handle_coda_error@@Base>
   17640:	cmp	r5, #0
   17644:	beq	17694 <print_yaml_data@@Base+0x3e4>
   17648:	movw	r0, #49612	; 0xc1cc
   1764c:	movt	r0, #2
   17650:	ldr	r0, [r0]
   17654:	cmp	r0, #0
   17658:	blt	17d48 <print_yaml_data@@Base+0xa98>
   1765c:	beq	17694 <print_yaml_data@@Base+0x3e4>
   17660:	movw	r6, #53392	; 0xd090
   17664:	movw	r5, #40111	; 0x9caf
   17668:	add	r4, r0, #1
   1766c:	movt	r6, #2
   17670:	movt	r5, #1
   17674:	ldr	r3, [r6]
   17678:	mov	r0, r5
   1767c:	mov	r1, #2
   17680:	mov	r2, #1
   17684:	bl	127e0 <fwrite@plt>
   17688:	sub	r4, r4, #1
   1768c:	cmp	r4, #1
   17690:	bgt	17674 <print_yaml_data@@Base+0x3c4>
   17694:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17698:	movw	r0, #41643	; 0xa2ab
   1769c:	movt	r0, #1
   176a0:	bl	17d68 <print_yaml_data@@Base+0xab8>
   176a4:	movw	r4, #49612	; 0xc1cc
   176a8:	mov	r1, #1
   176ac:	movt	r4, #2
   176b0:	ldr	r0, [r4]
   176b4:	add	r0, r0, #1
   176b8:	str	r0, [r4]
   176bc:	mov	r0, sl
   176c0:	bl	17384 <print_yaml_data@@Base+0xd4>
   176c4:	ldr	r0, [r4]
   176c8:	sub	r0, r0, #1
   176cc:	str	r0, [r4]
   176d0:	b	17cd8 <print_yaml_data@@Base+0xa28>
   176d4:	add	r5, sp, #16
   176d8:	add	r1, sp, #8
   176dc:	mov	r0, sl
   176e0:	mov	r2, r5
   176e4:	bl	12990 <coda_cursor_get_array_dim@plt>
   176e8:	cmp	r0, #0
   176ec:	beq	176f4 <print_yaml_data@@Base+0x444>
   176f0:	bl	17fcc <handle_coda_error@@Base>
   176f4:	ldr	r0, [sp, #8]
   176f8:	cmp	r0, #0
   176fc:	blt	17ce4 <print_yaml_data@@Base+0xa34>
   17700:	beq	17b44 <print_yaml_data@@Base+0x894>
   17704:	cmp	r0, #4
   17708:	bcs	17bf4 <print_yaml_data@@Base+0x944>
   1770c:	mov	r1, #0
   17710:	mov	r6, #1
   17714:	b	17c28 <print_yaml_data@@Base+0x978>
   17718:	sub	r1, fp, #40	; 0x28
   1771c:	mov	r0, sl
   17720:	bl	127c8 <coda_cursor_get_special_type@plt>
   17724:	cmp	r0, #0
   17728:	beq	17730 <print_yaml_data@@Base+0x480>
   1772c:	bl	17fcc <handle_coda_error@@Base>
   17730:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17734:	cmp	r0, #3
   17738:	bhi	17cf0 <print_yaml_data@@Base+0xa40>
   1773c:	add	r1, pc, #0
   17740:	ldr	pc, [r1, r0, lsl #2]
   17744:	andeq	r7, r1, r4, asr r7
   17748:	andeq	r7, r1, r4, asr #23
   1774c:	andeq	r7, r1, ip, asr #22
   17750:	andeq	r7, r1, ip, lsl #23
   17754:	movw	r0, #41742	; 0xa30e
   17758:	movt	r0, #1
   1775c:	b	17cec <print_yaml_data@@Base+0xa3c>
   17760:	add	r1, sp, #16
   17764:	mov	r0, sl
   17768:	bl	12720 <coda_cursor_read_uint32@plt>
   1776c:	cmp	r0, #0
   17770:	beq	17778 <print_yaml_data@@Base+0x4c8>
   17774:	bl	17fcc <handle_coda_error@@Base>
   17778:	ldr	r1, [sp, #16]
   1777c:	movw	r0, #39965	; 0x9c1d
   17780:	movt	r0, #1
   17784:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17788:	b	17cf0 <print_yaml_data@@Base+0xa40>
   1778c:	add	r1, sp, #16
   17790:	mov	r0, sl
   17794:	bl	128ac <coda_cursor_read_double@plt>
   17798:	cmp	r0, #0
   1779c:	beq	177a4 <print_yaml_data@@Base+0x4f4>
   177a0:	bl	17fcc <handle_coda_error@@Base>
   177a4:	vldr	d16, [sp, #16]
   177a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   177ac:	vmov	r2, r3, d16
   177b0:	cmp	r0, #8
   177b4:	bne	17be4 <print_yaml_data@@Base+0x934>
   177b8:	movw	r0, #39970	; 0x9c22
   177bc:	movt	r0, #1
   177c0:	b	17bec <print_yaml_data@@Base+0x93c>
   177c4:	movw	r0, #41648	; 0xa2b0
   177c8:	movt	r0, #1
   177cc:	b	17cec <print_yaml_data@@Base+0xa3c>
   177d0:	add	r1, sp, #16
   177d4:	mov	r0, sl
   177d8:	bl	1290c <coda_cursor_read_char@plt>
   177dc:	cmp	r0, #0
   177e0:	beq	177e8 <print_yaml_data@@Base+0x538>
   177e4:	bl	17fcc <handle_coda_error@@Base>
   177e8:	movw	r0, #41360	; 0xa190
   177ec:	movt	r0, #1
   177f0:	bl	17d68 <print_yaml_data@@Base+0xab8>
   177f4:	add	r0, sp, #16
   177f8:	mov	r1, #1
   177fc:	bl	17e64 <print_yaml_data@@Base+0xbb4>
   17800:	movw	r0, #42176	; 0xa4c0
   17804:	movt	r0, #1
   17808:	b	17cec <print_yaml_data@@Base+0xa3c>
   1780c:	add	r1, sp, #16
   17810:	mov	r0, sl
   17814:	bl	12894 <coda_cursor_get_string_length@plt>
   17818:	cmp	r0, #0
   1781c:	beq	17824 <print_yaml_data@@Base+0x574>
   17820:	bl	17fcc <handle_coda_error@@Base>
   17824:	ldr	r0, [sp, #16]
   17828:	add	r6, r0, #1
   1782c:	mov	r0, r6
   17830:	bl	12834 <malloc@plt>
   17834:	mov	r5, r0
   17838:	cmp	r0, #0
   1783c:	bne	17870 <print_yaml_data@@Base+0x5c0>
   17840:	movw	r1, #39529	; 0x9a69
   17844:	movw	r3, #41659	; 0xa2bb
   17848:	movw	r0, #361	; 0x169
   1784c:	mov	r2, r6
   17850:	str	r0, [sp]
   17854:	movt	r1, #1
   17858:	movt	r3, #1
   1785c:	mvn	r0, #0
   17860:	bl	126b4 <coda_set_error@plt>
   17864:	bl	17fcc <handle_coda_error@@Base>
   17868:	ldr	r0, [sp, #16]
   1786c:	add	r6, r0, #1
   17870:	mov	r0, sl
   17874:	mov	r1, r5
   17878:	mov	r2, r6
   1787c:	bl	12858 <coda_cursor_read_string@plt>
   17880:	cmp	r0, #0
   17884:	beq	1788c <print_yaml_data@@Base+0x5dc>
   17888:	bl	17fcc <handle_coda_error@@Base>
   1788c:	movw	r0, #41360	; 0xa190
   17890:	movt	r0, #1
   17894:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17898:	ldr	r1, [sp, #16]
   1789c:	mov	r0, r5
   178a0:	bl	17e64 <print_yaml_data@@Base+0xbb4>
   178a4:	ldr	r1, [sp, #16]
   178a8:	movw	r0, #42176	; 0xa4c0
   178ac:	movt	r0, #1
   178b0:	bl	17d68 <print_yaml_data@@Base+0xab8>
   178b4:	b	179e4 <print_yaml_data@@Base+0x734>
   178b8:	add	r1, sp, #8
   178bc:	mov	r0, sl
   178c0:	bl	129b4 <coda_cursor_read_int64@plt>
   178c4:	cmp	r0, #0
   178c8:	beq	178d0 <print_yaml_data@@Base+0x620>
   178cc:	bl	17fcc <handle_coda_error@@Base>
   178d0:	ldr	r0, [sp, #8]
   178d4:	ldr	r1, [sp, #12]
   178d8:	add	r4, sp, #16
   178dc:	mov	r2, r4
   178e0:	bl	12ab0 <coda_str64@plt>
   178e4:	b	17914 <print_yaml_data@@Base+0x664>
   178e8:	add	r1, sp, #8
   178ec:	mov	r0, sl
   178f0:	bl	128a0 <coda_cursor_read_uint64@plt>
   178f4:	cmp	r0, #0
   178f8:	beq	17900 <print_yaml_data@@Base+0x650>
   178fc:	bl	17fcc <handle_coda_error@@Base>
   17900:	ldr	r0, [sp, #8]
   17904:	ldr	r1, [sp, #12]
   17908:	add	r4, sp, #16
   1790c:	mov	r2, r4
   17910:	bl	126f0 <coda_str64u@plt>
   17914:	movw	r0, #41755	; 0xa31b
   17918:	mov	r1, r4
   1791c:	movt	r0, #1
   17920:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17924:	b	17cf0 <print_yaml_data@@Base+0xa40>
   17928:	add	r1, sp, #16
   1792c:	mov	r0, sl
   17930:	bl	12a14 <coda_cursor_get_bit_size@plt>
   17934:	cmp	r0, #0
   17938:	beq	17940 <print_yaml_data@@Base+0x690>
   1793c:	bl	17fcc <handle_coda_error@@Base>
   17940:	ldr	r4, [sp, #16]
   17944:	ldr	r7, [sp, #20]
   17948:	lsr	r0, r4, #3
   1794c:	tst	r4, #7
   17950:	orr	r6, r0, r7, lsl #29
   17954:	addne	r6, r6, #1
   17958:	mov	r0, r6
   1795c:	bl	12834 <malloc@plt>
   17960:	mov	r5, r0
   17964:	cmp	r0, #0
   17968:	bne	1799c <print_yaml_data@@Base+0x6ec>
   1796c:	movw	r1, #39529	; 0x9a69
   17970:	movw	r3, #41659	; 0xa2bb
   17974:	mov	r0, #392	; 0x188
   17978:	mov	r2, r6
   1797c:	str	r0, [sp]
   17980:	movt	r1, #1
   17984:	movt	r3, #1
   17988:	mvn	r0, #0
   1798c:	bl	126b4 <coda_set_error@plt>
   17990:	bl	17fcc <handle_coda_error@@Base>
   17994:	ldr	r4, [sp, #16]
   17998:	ldr	r7, [sp, #20]
   1799c:	mov	r0, sl
   179a0:	mov	r1, r5
   179a4:	mov	r2, #0
   179a8:	mov	r3, #0
   179ac:	stm	sp, {r4, r7}
   179b0:	bl	12aa4 <coda_cursor_read_bits@plt>
   179b4:	cmp	r0, #0
   179b8:	beq	179c0 <print_yaml_data@@Base+0x710>
   179bc:	bl	17fcc <handle_coda_error@@Base>
   179c0:	movw	r0, #41360	; 0xa190
   179c4:	movt	r0, #1
   179c8:	bl	17d68 <print_yaml_data@@Base+0xab8>
   179cc:	mov	r0, r5
   179d0:	mov	r1, r6
   179d4:	bl	17e64 <print_yaml_data@@Base+0xbb4>
   179d8:	movw	r0, #42176	; 0xa4c0
   179dc:	movt	r0, #1
   179e0:	bl	17d68 <print_yaml_data@@Base+0xab8>
   179e4:	mov	r0, r5
   179e8:	bl	126fc <free@plt>
   179ec:	b	17cf0 <print_yaml_data@@Base+0xa40>
   179f0:	mov	r0, sl
   179f4:	bl	127f8 <coda_cursor_goto_first_record_field@plt>
   179f8:	cmp	r0, #0
   179fc:	beq	17a04 <print_yaml_data@@Base+0x754>
   17a00:	bl	17fcc <handle_coda_error@@Base>
   17a04:	ldr	r0, [sp, #16]
   17a08:	mov	r1, #0
   17a0c:	str	r1, [fp, #-44]	; 0xffffffd4
   17a10:	cmp	r0, #1
   17a14:	blt	17cd8 <print_yaml_data@@Base+0xa28>
   17a18:	movw	r8, #53392	; 0xd090
   17a1c:	movw	r7, #40111	; 0x9caf
   17a20:	mov	r9, #1
   17a24:	add	r6, sp, #52	; 0x34
   17a28:	movt	r8, #2
   17a2c:	movt	r7, #1
   17a30:	ldr	r0, [sp, #8]
   17a34:	mov	r2, r6
   17a38:	bl	12684 <coda_type_get_record_field_hidden_status@plt>
   17a3c:	cmp	r0, #0
   17a40:	beq	17a48 <print_yaml_data@@Base+0x798>
   17a44:	bl	17fcc <handle_coda_error@@Base>
   17a48:	ldr	r0, [sp, #52]	; 0x34
   17a4c:	cmp	r0, #0
   17a50:	bne	17b00 <print_yaml_data@@Base+0x850>
   17a54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17a58:	ldr	r0, [sp, #8]
   17a5c:	sub	r2, fp, #48	; 0x30
   17a60:	bl	12a80 <coda_type_get_record_field_name@plt>
   17a64:	cmp	r0, #0
   17a68:	beq	17a70 <print_yaml_data@@Base+0x7c0>
   17a6c:	bl	17fcc <handle_coda_error@@Base>
   17a70:	cmp	r5, #0
   17a74:	bne	17a80 <print_yaml_data@@Base+0x7d0>
   17a78:	cmp	r9, #0
   17a7c:	bne	17abc <print_yaml_data@@Base+0x80c>
   17a80:	movw	r0, #49612	; 0xc1cc
   17a84:	movt	r0, #2
   17a88:	ldr	r0, [r0]
   17a8c:	cmp	r0, #0
   17a90:	blt	17d48 <print_yaml_data@@Base+0xa98>
   17a94:	beq	17abc <print_yaml_data@@Base+0x80c>
   17a98:	add	r4, r0, #1
   17a9c:	ldr	r3, [r8]
   17aa0:	mov	r0, r7
   17aa4:	mov	r1, #2
   17aa8:	mov	r2, #1
   17aac:	bl	127e0 <fwrite@plt>
   17ab0:	sub	r4, r4, #1
   17ab4:	cmp	r4, #1
   17ab8:	bgt	17a9c <print_yaml_data@@Base+0x7ec>
   17abc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17ac0:	movw	r0, #41643	; 0xa2ab
   17ac4:	movt	r0, #1
   17ac8:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17acc:	movw	r0, #49612	; 0xc1cc
   17ad0:	mov	r1, #1
   17ad4:	movt	r0, #2
   17ad8:	mov	r4, r0
   17adc:	ldr	r0, [r0]
   17ae0:	add	r0, r0, #1
   17ae4:	str	r0, [r4]
   17ae8:	mov	r0, sl
   17aec:	bl	17384 <print_yaml_data@@Base+0xd4>
   17af0:	ldr	r0, [r4]
   17af4:	mov	r9, #0
   17af8:	sub	r0, r0, #1
   17afc:	str	r0, [r4]
   17b00:	ldr	r0, [sp, #16]
   17b04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17b08:	sub	r0, r0, #1
   17b0c:	cmp	r1, r0
   17b10:	bge	17b28 <print_yaml_data@@Base+0x878>
   17b14:	mov	r0, sl
   17b18:	bl	129f0 <coda_cursor_goto_next_record_field@plt>
   17b1c:	cmp	r0, #0
   17b20:	beq	17b28 <print_yaml_data@@Base+0x878>
   17b24:	bl	17fcc <handle_coda_error@@Base>
   17b28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b2c:	add	r1, r0, #1
   17b30:	ldr	r0, [sp, #16]
   17b34:	str	r1, [fp, #-44]	; 0xffffffd4
   17b38:	cmp	r1, r0
   17b3c:	blt	17a30 <print_yaml_data@@Base+0x780>
   17b40:	b	17cd8 <print_yaml_data@@Base+0xa28>
   17b44:	mov	r6, #1
   17b48:	b	17c4c <print_yaml_data@@Base+0x99c>
   17b4c:	add	r1, sp, #8
   17b50:	mov	r0, sl
   17b54:	bl	128ac <coda_cursor_read_double@plt>
   17b58:	cmp	r0, #0
   17b5c:	beq	17b64 <print_yaml_data@@Base+0x8b4>
   17b60:	bl	17fcc <handle_coda_error@@Base>
   17b64:	vldr	d0, [sp, #8]
   17b68:	bl	128b8 <coda_isNaN@plt>
   17b6c:	cmp	r0, #0
   17b70:	bne	17b84 <print_yaml_data@@Base+0x8d4>
   17b74:	vldr	d0, [sp, #8]
   17b78:	bl	1275c <coda_isInf@plt>
   17b7c:	cmp	r0, #0
   17b80:	beq	17d14 <print_yaml_data@@Base+0xa64>
   17b84:	vldr	d16, [sp, #8]
   17b88:	b	17be0 <print_yaml_data@@Base+0x930>
   17b8c:	add	r1, sp, #16
   17b90:	add	r2, sp, #8
   17b94:	mov	r0, sl
   17b98:	bl	12954 <coda_cursor_read_complex_double_split@plt>
   17b9c:	cmp	r0, #0
   17ba0:	beq	17ba8 <print_yaml_data@@Base+0x8f8>
   17ba4:	bl	17fcc <handle_coda_error@@Base>
   17ba8:	vldr	d16, [sp, #16]
   17bac:	vldr	d17, [sp, #8]
   17bb0:	movw	r0, #40071	; 0x9c87
   17bb4:	movt	r0, #1
   17bb8:	vmov	r2, r3, d16
   17bbc:	vstr	d17, [sp]
   17bc0:	b	17bec <print_yaml_data@@Base+0x93c>
   17bc4:	add	r1, sp, #16
   17bc8:	mov	r0, sl
   17bcc:	bl	128ac <coda_cursor_read_double@plt>
   17bd0:	cmp	r0, #0
   17bd4:	beq	17bdc <print_yaml_data@@Base+0x92c>
   17bd8:	bl	17fcc <handle_coda_error@@Base>
   17bdc:	vldr	d16, [sp, #16]
   17be0:	vmov	r2, r3, d16
   17be4:	movw	r0, #40036	; 0x9c64
   17be8:	movt	r0, #1
   17bec:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17bf0:	b	17cf0 <print_yaml_data@@Base+0xa40>
   17bf4:	bic	r1, r0, #3
   17bf8:	vmov.i32	q8, #1	; 0x00000001
   17bfc:	mov	r2, r1
   17c00:	vld1.32	{d18-d19}, [r5]!
   17c04:	subs	r2, r2, #4
   17c08:	vmul.i32	q8, q9, q8
   17c0c:	bne	17c00 <print_yaml_data@@Base+0x950>
   17c10:	vext.8	q9, q8, q8, #8
   17c14:	cmp	r0, r1
   17c18:	vmul.i32	q0, q8, q9
   17c1c:	vmul.i32	q8, q0, d0[1]
   17c20:	vmov.32	r6, d16[0]
   17c24:	beq	17c44 <print_yaml_data@@Base+0x994>
   17c28:	add	r2, sp, #16
   17c2c:	sub	r0, r0, r1
   17c30:	add	r1, r2, r1, lsl #2
   17c34:	ldr	r2, [r1], #4
   17c38:	subs	r0, r0, #1
   17c3c:	mul	r6, r2, r6
   17c40:	bne	17c34 <print_yaml_data@@Base+0x984>
   17c44:	cmp	r6, #1
   17c48:	blt	17ce4 <print_yaml_data@@Base+0xa34>
   17c4c:	movw	r0, #42177	; 0xa4c1
   17c50:	movt	r0, #1
   17c54:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17c58:	mov	r0, sl
   17c5c:	bl	127d4 <coda_cursor_goto_first_array_element@plt>
   17c60:	cmp	r0, #0
   17c64:	beq	17c6c <print_yaml_data@@Base+0x9bc>
   17c68:	bl	17fcc <handle_coda_error@@Base>
   17c6c:	movw	r8, #41652	; 0xa2b4
   17c70:	movw	r5, #49612	; 0xc1cc
   17c74:	sub	r7, r6, #1
   17c78:	mov	r4, #0
   17c7c:	movt	r8, #1
   17c80:	movt	r5, #2
   17c84:	mov	r0, r8
   17c88:	bl	17db0 <print_yaml_data@@Base+0xb00>
   17c8c:	ldr	r0, [r5]
   17c90:	mov	r1, #0
   17c94:	add	r0, r0, #1
   17c98:	str	r0, [r5]
   17c9c:	mov	r0, sl
   17ca0:	bl	17384 <print_yaml_data@@Base+0xd4>
   17ca4:	ldr	r0, [r5]
   17ca8:	cmp	r4, r7
   17cac:	sub	r0, r0, #1
   17cb0:	str	r0, [r5]
   17cb4:	bge	17ccc <print_yaml_data@@Base+0xa1c>
   17cb8:	mov	r0, sl
   17cbc:	bl	128d0 <coda_cursor_goto_next_array_element@plt>
   17cc0:	cmp	r0, #0
   17cc4:	beq	17ccc <print_yaml_data@@Base+0xa1c>
   17cc8:	bl	17fcc <handle_coda_error@@Base>
   17ccc:	add	r4, r4, #1
   17cd0:	cmp	r6, r4
   17cd4:	bne	17c84 <print_yaml_data@@Base+0x9d4>
   17cd8:	mov	r0, sl
   17cdc:	bl	12864 <coda_cursor_goto_parent@plt>
   17ce0:	b	17cf0 <print_yaml_data@@Base+0xa40>
   17ce4:	movw	r0, #41655	; 0xa2b7
   17ce8:	movt	r0, #1
   17cec:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17cf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17cf4:	cmp	r0, #0
   17cf8:	movwne	r0, #49612	; 0xc1cc
   17cfc:	movtne	r0, #2
   17d00:	ldrne	r1, [r0]
   17d04:	subne	r1, r1, #1
   17d08:	strne	r1, [r0]
   17d0c:	sub	sp, fp, #28
   17d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d14:	vldr	d0, [sp, #8]
   17d18:	movw	r0, #41292	; 0xa14c
   17d1c:	add	r1, sp, #16
   17d20:	movt	r0, #1
   17d24:	bl	126d8 <coda_time_double_to_string@plt>
   17d28:	cmp	r0, #0
   17d2c:	beq	17d3c <print_yaml_data@@Base+0xa8c>
   17d30:	movw	r0, #41321	; 0xa169
   17d34:	movt	r0, #1
   17d38:	b	17cec <print_yaml_data@@Base+0xa3c>
   17d3c:	movw	r0, #41755	; 0xa31b
   17d40:	add	r1, sp, #16
   17d44:	b	1791c <print_yaml_data@@Base+0x66c>
   17d48:	movw	r0, #40081	; 0x9c91
   17d4c:	movw	r1, #41659	; 0xa2bb
   17d50:	movw	r3, #40093	; 0x9c9d
   17d54:	mov	r2, #44	; 0x2c
   17d58:	movt	r0, #1
   17d5c:	movt	r1, #1
   17d60:	movt	r3, #1
   17d64:	bl	12abc <__assert_fail@plt>
   17d68:	sub	sp, sp, #12
   17d6c:	push	{fp, lr}
   17d70:	mov	fp, sp
   17d74:	sub	sp, sp, #4
   17d78:	mov	ip, r0
   17d7c:	add	r0, fp, #8
   17d80:	stm	r0, {r1, r2, r3}
   17d84:	movw	r0, #53392	; 0xd090
   17d88:	add	r2, fp, #8
   17d8c:	mov	r1, ip
   17d90:	movt	r0, #2
   17d94:	str	r2, [sp]
   17d98:	ldr	r0, [r0]
   17d9c:	bl	129c0 <vfprintf@plt>
   17da0:	mov	sp, fp
   17da4:	pop	{fp, lr}
   17da8:	add	sp, sp, #12
   17dac:	bx	lr
   17db0:	sub	sp, sp, #12
   17db4:	push	{r4, r5, r6, r7, fp, lr}
   17db8:	add	fp, sp, #16
   17dbc:	sub	sp, sp, #4
   17dc0:	mov	r4, r0
   17dc4:	add	r0, fp, #8
   17dc8:	stm	r0, {r1, r2, r3}
   17dcc:	movw	r0, #49612	; 0xc1cc
   17dd0:	movt	r0, #2
   17dd4:	ldr	r0, [r0]
   17dd8:	cmp	r0, #0
   17ddc:	blt	17e44 <print_yaml_data@@Base+0xb94>
   17de0:	beq	17e18 <print_yaml_data@@Base+0xb68>
   17de4:	movw	r7, #53392	; 0xd090
   17de8:	movw	r5, #40111	; 0x9caf
   17dec:	add	r6, r0, #1
   17df0:	movt	r7, #2
   17df4:	movt	r5, #1
   17df8:	ldr	r3, [r7]
   17dfc:	mov	r0, r5
   17e00:	mov	r1, #2
   17e04:	mov	r2, #1
   17e08:	bl	127e0 <fwrite@plt>
   17e0c:	sub	r6, r6, #1
   17e10:	cmp	r6, #1
   17e14:	bgt	17df8 <print_yaml_data@@Base+0xb48>
   17e18:	movw	r0, #53392	; 0xd090
   17e1c:	add	r2, fp, #8
   17e20:	mov	r1, r4
   17e24:	movt	r0, #2
   17e28:	str	r2, [sp]
   17e2c:	ldr	r0, [r0]
   17e30:	bl	129c0 <vfprintf@plt>
   17e34:	sub	sp, fp, #16
   17e38:	pop	{r4, r5, r6, r7, fp, lr}
   17e3c:	add	sp, sp, #12
   17e40:	bx	lr
   17e44:	movw	r0, #40081	; 0x9c91
   17e48:	movw	r1, #41659	; 0xa2bb
   17e4c:	movw	r3, #40093	; 0x9c9d
   17e50:	mov	r2, #44	; 0x2c
   17e54:	movt	r0, #1
   17e58:	movt	r1, #1
   17e5c:	movt	r3, #1
   17e60:	bl	12abc <__assert_fail@plt>
   17e64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e68:	add	fp, sp, #28
   17e6c:	sub	sp, sp, #4
   17e70:	cmp	r1, #1
   17e74:	blt	17fc4 <print_yaml_data@@Base+0xd14>
   17e78:	movw	r6, #39672	; 0x9af8
   17e7c:	movw	r8, #39675	; 0x9afb
   17e80:	movw	r9, #39681	; 0x9b01
   17e84:	movw	sl, #39684	; 0x9b04
   17e88:	movw	r7, #41359	; 0xa18f
   17e8c:	mov	r4, r1
   17e90:	mov	r5, r0
   17e94:	movt	r6, #1
   17e98:	movt	r8, #1
   17e9c:	movt	r9, #1
   17ea0:	movt	sl, #1
   17ea4:	movt	r7, #1
   17ea8:	ldrb	r1, [r5]
   17eac:	sub	r0, r1, #8
   17eb0:	cmp	r0, #26
   17eb4:	bhi	17f3c <print_yaml_data@@Base+0xc8c>
   17eb8:	add	r2, pc, #0
   17ebc:	ldr	pc, [r2, r0, lsl #2]
   17ec0:	andeq	r7, r1, ip, lsr #30
   17ec4:	andeq	r7, r1, r0, ror pc
   17ec8:	andeq	r7, r1, ip, ror pc
   17ecc:	andeq	r7, r1, r4, asr pc
   17ed0:	andeq	r7, r1, r8, lsl #31
   17ed4:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   17ed8:	andeq	r7, r1, r4, asr pc
   17edc:	andeq	r7, r1, r4, asr pc
   17ee0:	andeq	r7, r1, r4, asr pc
   17ee4:	andeq	r7, r1, r4, asr pc
   17ee8:	andeq	r7, r1, r4, asr pc
   17eec:	andeq	r7, r1, r4, asr pc
   17ef0:	andeq	r7, r1, r4, asr pc
   17ef4:	andeq	r7, r1, r4, asr pc
   17ef8:	andeq	r7, r1, r4, asr pc
   17efc:	andeq	r7, r1, r4, asr pc
   17f00:	andeq	r7, r1, r4, asr pc
   17f04:	andeq	r7, r1, r4, asr pc
   17f08:	andeq	r7, r1, r4, asr pc
   17f0c:	andeq	r7, r1, r4, asr pc
   17f10:	andeq	r7, r1, r4, asr pc
   17f14:	andeq	r7, r1, r4, asr pc
   17f18:	andeq	r7, r1, r4, asr pc
   17f1c:	andeq	r7, r1, r4, asr pc
   17f20:	andeq	r7, r1, r4, asr pc
   17f24:	andeq	r7, r1, r4, asr pc
   17f28:	andeq	r7, r1, r0, lsr #31
   17f2c:	movw	r0, #39669	; 0x9af5
   17f30:	movt	r0, #1
   17f34:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17f38:	b	17fb8 <print_yaml_data@@Base+0xd08>
   17f3c:	cmp	r1, #92	; 0x5c
   17f40:	bne	17f54 <print_yaml_data@@Base+0xca4>
   17f44:	movw	r0, #39687	; 0x9b07
   17f48:	movt	r0, #1
   17f4c:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17f50:	b	17fb8 <print_yaml_data@@Base+0xd08>
   17f54:	sub	r0, r1, #32
   17f58:	uxtb	r0, r0
   17f5c:	cmp	r0, #94	; 0x5e
   17f60:	bhi	17fac <print_yaml_data@@Base+0xcfc>
   17f64:	movw	r0, #40114	; 0x9cb2
   17f68:	movt	r0, #1
   17f6c:	b	17fb4 <print_yaml_data@@Base+0xd04>
   17f70:	mov	r0, r6
   17f74:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17f78:	b	17fb8 <print_yaml_data@@Base+0xd08>
   17f7c:	mov	r0, r8
   17f80:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17f84:	b	17fb8 <print_yaml_data@@Base+0xd08>
   17f88:	mov	r0, r9
   17f8c:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17f90:	b	17fb8 <print_yaml_data@@Base+0xd08>
   17f94:	mov	r0, sl
   17f98:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17f9c:	b	17fb8 <print_yaml_data@@Base+0xd08>
   17fa0:	mov	r0, r7
   17fa4:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17fa8:	b	17fb8 <print_yaml_data@@Base+0xd08>
   17fac:	movw	r0, #41362	; 0xa192
   17fb0:	movt	r0, #1
   17fb4:	bl	17d68 <print_yaml_data@@Base+0xab8>
   17fb8:	subs	r4, r4, #1
   17fbc:	add	r5, r5, #1
   17fc0:	bne	17ea8 <print_yaml_data@@Base+0xbf8>
   17fc4:	sub	sp, fp, #28
   17fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017fcc <handle_coda_error@@Base>:
   17fcc:	push	{fp, lr}
   17fd0:	mov	fp, sp
   17fd4:	movw	r5, #49584	; 0xc1b0
   17fd8:	movt	r5, #2
   17fdc:	ldr	r4, [r5]
   17fe0:	bl	12a68 <coda_get_errno@plt>
   17fe4:	ldr	r0, [r0]
   17fe8:	bl	12a20 <coda_errno_to_string@plt>
   17fec:	movw	r1, #41748	; 0xa314
   17ff0:	mov	r2, r0
   17ff4:	mov	r0, r4
   17ff8:	movt	r1, #1
   17ffc:	bl	128c4 <fprintf@plt>
   18000:	ldr	r0, [r5]
   18004:	bl	126cc <fflush@plt>
   18008:	mov	r0, #1
   1800c:	bl	1287c <exit@plt>

00018010 <main@@Base>:
   18010:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18014:	add	fp, sp, #28
   18018:	sub	sp, sp, #20
   1801c:	cmp	r0, #1
   18020:	beq	191ac <main@@Base+0x119c>
   18024:	ldr	r6, [r1, #4]
   18028:	mov	r9, r1
   1802c:	movw	r1, #41759	; 0xa31f
   18030:	mov	sl, r0
   18034:	movt	r1, #1
   18038:	mov	r0, r6
   1803c:	bl	1266c <strcmp@plt>
   18040:	cmp	r0, #0
   18044:	beq	191ac <main@@Base+0x119c>
   18048:	movw	r1, #41762	; 0xa322
   1804c:	mov	r0, r6
   18050:	movt	r1, #1
   18054:	bl	1266c <strcmp@plt>
   18058:	cmp	r0, #0
   1805c:	beq	191ac <main@@Base+0x119c>
   18060:	movw	r1, #41769	; 0xa329
   18064:	mov	r0, r6
   18068:	movt	r1, #1
   1806c:	bl	1266c <strcmp@plt>
   18070:	cmp	r0, #0
   18074:	beq	191b8 <main@@Base+0x11a8>
   18078:	movw	r1, #41772	; 0xa32c
   1807c:	mov	r0, r6
   18080:	movt	r1, #1
   18084:	bl	1266c <strcmp@plt>
   18088:	cmp	r0, #0
   1808c:	beq	191b8 <main@@Base+0x11a8>
   18090:	cmp	sl, #3
   18094:	blt	180b0 <main@@Base+0xa0>
   18098:	movw	r1, #41782	; 0xa336
   1809c:	mov	r0, r6
   180a0:	movt	r1, #1
   180a4:	bl	1266c <strcmp@plt>
   180a8:	cmp	r0, #0
   180ac:	beq	188ac <main@@Base+0x89c>
   180b0:	ldr	r0, [r9]
   180b4:	movw	r2, #41785	; 0xa339
   180b8:	mov	r1, #0
   180bc:	movt	r2, #1
   180c0:	bl	12714 <coda_set_definition_path_conditional@plt>
   180c4:	mov	r7, #1
   180c8:	cmp	r0, #0
   180cc:	bne	191c4 <main@@Base+0x11b4>
   180d0:	ldr	r6, [r9, r7, lsl #2]
   180d4:	movw	r1, #41811	; 0xa353
   180d8:	movt	r1, #1
   180dc:	mov	r0, r6
   180e0:	bl	1266c <strcmp@plt>
   180e4:	cmp	r0, #0
   180e8:	beq	181ec <main@@Base+0x1dc>
   180ec:	movw	r1, #41816	; 0xa358
   180f0:	mov	r0, r6
   180f4:	movt	r1, #1
   180f8:	bl	1266c <strcmp@plt>
   180fc:	cmp	r0, #0
   18100:	beq	187d4 <main@@Base+0x7c4>
   18104:	movw	r1, #41822	; 0xa35e
   18108:	mov	r0, r6
   1810c:	movt	r1, #1
   18110:	bl	1266c <strcmp@plt>
   18114:	cmp	r0, #0
   18118:	beq	188bc <main@@Base+0x8ac>
   1811c:	movw	r1, #41827	; 0xa363
   18120:	mov	r0, r6
   18124:	movt	r1, #1
   18128:	bl	1266c <strcmp@plt>
   1812c:	cmp	r0, #0
   18130:	beq	18b5c <main@@Base+0xb4c>
   18134:	movw	r1, #41832	; 0xa368
   18138:	mov	r0, r6
   1813c:	movt	r1, #1
   18140:	bl	1266c <strcmp@plt>
   18144:	cmp	r0, #0
   18148:	bne	190e8 <main@@Base+0x10d8>
   1814c:	movw	r0, #49640	; 0xc1e8
   18150:	mov	r6, #0
   18154:	mov	r1, #5
   18158:	movt	r0, #2
   1815c:	str	r6, [r0]
   18160:	movw	r0, #53412	; 0xd0a4
   18164:	movt	r0, #2
   18168:	str	r1, [r0]
   1816c:	movw	r0, #49624	; 0xc1d8
   18170:	movw	r1, #53392	; 0xd090
   18174:	movt	r0, #2
   18178:	movt	r1, #2
   1817c:	str	r6, [r0]
   18180:	movw	r0, #53416	; 0xd0a8
   18184:	movt	r0, #2
   18188:	str	r6, [r0]
   1818c:	movw	r0, #49588	; 0xc1b4
   18190:	movt	r0, #2
   18194:	ldr	r0, [r0]
   18198:	str	r0, [r1]
   1819c:	add	r0, r7, #1
   181a0:	sub	r4, sl, r0
   181a4:	cmp	r4, #1
   181a8:	blt	190e8 <main@@Base+0x10d8>
   181ac:	add	r7, r9, r0, lsl #2
   181b0:	sub	r0, r4, #1
   181b4:	movw	r9, #41899	; 0xa3ab
   181b8:	movw	r8, #42205	; 0xa4dd
   181bc:	str	r0, [sp, #12]
   181c0:	mov	r0, #1
   181c4:	movt	r9, #1
   181c8:	movt	r8, #1
   181cc:	str	r0, [sp, #16]
   181d0:	mov	r0, #0
   181d4:	str	r0, [sp, #8]
   181d8:	mov	r0, #0
   181dc:	str	r0, [sp, #4]
   181e0:	mov	r0, #0
   181e4:	str	r0, [sp]
   181e8:	b	182f0 <main@@Base+0x2e0>
   181ec:	movw	r0, #53412	; 0xd0a4
   181f0:	mov	r8, #0
   181f4:	mov	r5, #1
   181f8:	movw	r1, #49640	; 0xc1e8
   181fc:	movw	r6, #49636	; 0xc1e4
   18200:	movt	r0, #2
   18204:	movt	r1, #2
   18208:	movt	r6, #2
   1820c:	str	r8, [r0]
   18210:	movw	r0, #49616	; 0xc1d0
   18214:	str	r8, [r1]
   18218:	str	r8, [r1, #664]	; 0x298
   1821c:	str	r8, [r6]
   18220:	movt	r0, #2
   18224:	str	r5, [r0]
   18228:	movw	r0, #49620	; 0xc1d4
   1822c:	movt	r0, #2
   18230:	str	r8, [r0]
   18234:	movw	r0, #53400	; 0xd098
   18238:	movt	r0, #2
   1823c:	str	r8, [r0]
   18240:	movw	r0, #49632	; 0xc1e0
   18244:	movt	r0, #2
   18248:	str	r8, [r0]
   1824c:	movw	r0, #53404	; 0xd09c
   18250:	movt	r0, #2
   18254:	str	r8, [r0]
   18258:	add	r0, r7, #1
   1825c:	sub	r7, sl, r0
   18260:	cmp	r7, #1
   18264:	blt	190e8 <main@@Base+0x10d8>
   18268:	add	r9, r9, r0, lsl #2
   1826c:	sub	r0, r7, #1
   18270:	movw	r4, #41885	; 0xa39d
   18274:	str	r0, [sp, #8]
   18278:	mov	r0, #1
   1827c:	movt	r4, #1
   18280:	str	r0, [sp, #16]
   18284:	mov	r0, #1
   18288:	str	r0, [sp, #12]
   1828c:	b	18594 <main@@Base+0x584>
   18290:	movw	r1, #49624	; 0xc1d8
   18294:	movt	r1, #2
   18298:	str	r0, [r1]
   1829c:	b	18498 <main@@Base+0x488>
   182a0:	movw	r1, #53416	; 0xd0a8
   182a4:	movt	r1, #2
   182a8:	str	r0, [r1]
   182ac:	b	18498 <main@@Base+0x488>
   182b0:	mov	r1, #0
   182b4:	mov	r2, #10
   182b8:	bl	12678 <strtol@plt>
   182bc:	movw	r1, #49580	; 0xc1ac
   182c0:	movt	r1, #2
   182c4:	str	r0, [r1]
   182c8:	b	18498 <main@@Base+0x488>
   182cc:	mov	r6, r2
   182d0:	mov	r1, #0
   182d4:	mov	r2, #10
   182d8:	bl	12678 <strtol@plt>
   182dc:	str	r0, [sp, #8]
   182e0:	str	r4, [sp]
   182e4:	mov	r0, r6
   182e8:	str	r6, [sp, #4]
   182ec:	b	18470 <main@@Base+0x460>
   182f0:	ldr	sl, [r7, r6, lsl #2]
   182f4:	mov	r1, r9
   182f8:	mov	r0, sl
   182fc:	bl	1266c <strcmp@plt>
   18300:	cmp	r0, #0
   18304:	beq	1848c <main@@Base+0x47c>
   18308:	mov	r0, sl
   1830c:	mov	r1, r8
   18310:	bl	1266c <strcmp@plt>
   18314:	cmp	r0, #0
   18318:	beq	1848c <main@@Base+0x47c>
   1831c:	movw	r1, #42065	; 0xa451
   18320:	mov	r0, sl
   18324:	movt	r1, #1
   18328:	bl	1266c <strcmp@plt>
   1832c:	cmp	r0, #0
   18330:	beq	1834c <main@@Base+0x33c>
   18334:	movw	r1, #42068	; 0xa454
   18338:	mov	r0, sl
   1833c:	movt	r1, #1
   18340:	bl	1266c <strcmp@plt>
   18344:	cmp	r0, #0
   18348:	bne	18368 <main@@Base+0x358>
   1834c:	add	r5, r6, #1
   18350:	cmp	r5, r4
   18354:	bge	18368 <main@@Base+0x358>
   18358:	ldr	r0, [r7, r5, lsl #2]
   1835c:	ldrb	r1, [r0]
   18360:	cmp	r1, #45	; 0x2d
   18364:	bne	18290 <main@@Base+0x280>
   18368:	movw	r1, #42195	; 0xa4d3
   1836c:	mov	r0, sl
   18370:	movt	r1, #1
   18374:	bl	1266c <strcmp@plt>
   18378:	cmp	r0, #0
   1837c:	beq	18398 <main@@Base+0x388>
   18380:	movw	r1, #42198	; 0xa4d6
   18384:	mov	r0, sl
   18388:	movt	r1, #1
   1838c:	bl	1266c <strcmp@plt>
   18390:	cmp	r0, #0
   18394:	bne	183b4 <main@@Base+0x3a4>
   18398:	add	r5, r6, #1
   1839c:	cmp	r5, r4
   183a0:	bge	183b4 <main@@Base+0x3a4>
   183a4:	ldr	r0, [r7, r5, lsl #2]
   183a8:	ldrb	r1, [r0]
   183ac:	cmp	r1, #45	; 0x2d
   183b0:	bne	182a0 <main@@Base+0x290>
   183b4:	movw	r1, #42237	; 0xa4fd
   183b8:	mov	r0, sl
   183bc:	movt	r1, #1
   183c0:	bl	1266c <strcmp@plt>
   183c4:	cmp	r0, #0
   183c8:	bne	183e8 <main@@Base+0x3d8>
   183cc:	add	r5, r6, #1
   183d0:	cmp	r5, r4
   183d4:	bge	183e8 <main@@Base+0x3d8>
   183d8:	ldr	r0, [r7, r5, lsl #2]
   183dc:	ldrb	r1, [r0]
   183e0:	cmp	r1, #45	; 0x2d
   183e4:	bne	182b0 <main@@Base+0x2a0>
   183e8:	mov	r9, r7
   183ec:	ldr	r7, [sp, #12]
   183f0:	movw	r1, #42249	; 0xa509
   183f4:	mov	r0, sl
   183f8:	mov	r8, r4
   183fc:	movt	r1, #1
   18400:	bl	1266c <strcmp@plt>
   18404:	cmp	r0, #0
   18408:	bne	1844c <main@@Base+0x43c>
   1840c:	add	r5, r6, #3
   18410:	cmp	r5, r8
   18414:	bge	1844c <main@@Base+0x43c>
   18418:	add	r0, r9, r6, lsl #2
   1841c:	ldr	r4, [r0, #4]
   18420:	ldrb	r1, [r4]
   18424:	cmp	r1, #45	; 0x2d
   18428:	beq	1844c <main@@Base+0x43c>
   1842c:	ldr	r2, [r0, #8]
   18430:	ldrb	r0, [r2]
   18434:	cmp	r0, #45	; 0x2d
   18438:	beq	1844c <main@@Base+0x43c>
   1843c:	ldr	r0, [r9, r5, lsl #2]
   18440:	ldrb	r1, [r0]
   18444:	cmp	r1, #45	; 0x2d
   18448:	bne	182cc <main@@Base+0x2bc>
   1844c:	cmp	r6, r7
   18450:	bne	190e8 <main@@Base+0x10d8>
   18454:	ldrb	r0, [sl]
   18458:	cmp	r0, #45	; 0x2d
   1845c:	beq	190e8 <main@@Base+0x10d8>
   18460:	movw	r0, #49640	; 0xc1e8
   18464:	mov	r5, r7
   18468:	movt	r0, #2
   1846c:	str	sl, [r0]
   18470:	mov	r7, r9
   18474:	movw	r9, #41899	; 0xa3ab
   18478:	mov	r4, r8
   1847c:	movw	r8, #42205	; 0xa4dd
   18480:	movt	r9, #1
   18484:	movt	r8, #1
   18488:	b	18498 <main@@Base+0x488>
   1848c:	mov	r0, #0
   18490:	mov	r5, r6
   18494:	str	r0, [sp, #16]
   18498:	add	r6, r5, #1
   1849c:	cmp	r6, r4
   184a0:	blt	182f0 <main@@Base+0x2e0>
   184a4:	movw	r0, #49640	; 0xc1e8
   184a8:	movt	r0, #2
   184ac:	ldr	r0, [r0]
   184b0:	cmp	r0, #0
   184b4:	ldrbne	r0, [r0]
   184b8:	cmpne	r0, #0
   184bc:	beq	190e8 <main@@Base+0x10d8>
   184c0:	bl	128e8 <coda_init@plt>
   184c4:	cmp	r0, #0
   184c8:	bne	191c4 <main@@Base+0x11b4>
   184cc:	mov	r0, #0
   184d0:	bl	128f4 <coda_set_option_perform_conversions@plt>
   184d4:	ldr	r0, [sp, #16]
   184d8:	bl	1263c <coda_set_option_use_fast_size_expressions@plt>
   184dc:	movw	r0, #49624	; 0xc1d8
   184e0:	movw	r4, #53392	; 0xd090
   184e4:	movt	r0, #2
   184e8:	movt	r4, #2
   184ec:	ldr	r0, [r0]
   184f0:	cmp	r0, #0
   184f4:	beq	18510 <main@@Base+0x500>
   184f8:	movw	r1, #42135	; 0xa497
   184fc:	movt	r1, #1
   18500:	bl	126a8 <fopen@plt>
   18504:	cmp	r0, #0
   18508:	str	r0, [r4]
   1850c:	beq	19224 <main@@Base+0x1214>
   18510:	ldm	sp, {r0, r1, r2}
   18514:	bl	13668 <print_debug_data@@Base>
   18518:	movw	r0, #49624	; 0xc1d8
   1851c:	movt	r0, #2
   18520:	ldr	r0, [r0]
   18524:	cmp	r0, #0
   18528:	beq	1919c <main@@Base+0x118c>
   1852c:	ldr	r0, [r4]
   18530:	b	18e08 <main@@Base+0xdf8>
   18534:	bl	15784 <codadump_filter_create@@Base>
   18538:	movw	r1, #49640	; 0xc1e8
   1853c:	mov	r8, r6
   18540:	mov	r6, r4
   18544:	movw	r4, #41885	; 0xa39d
   18548:	cmp	r0, #0
   1854c:	mov	r5, #1
   18550:	movt	r1, #2
   18554:	movt	r4, #1
   18558:	str	r0, [r1, #664]	; 0x298
   1855c:	bne	18770 <main@@Base+0x760>
   18560:	b	191f8 <main@@Base+0x11e8>
   18564:	movw	r0, #53404	; 0xd09c
   18568:	movt	r0, #2
   1856c:	str	r5, [r0]
   18570:	b	18770 <main@@Base+0x760>
   18574:	movw	r0, #49620	; 0xc1d4
   18578:	str	r5, [r6]
   1857c:	movt	r0, #2
   18580:	str	r5, [r0]
   18584:	b	18770 <main@@Base+0x760>
   18588:	mov	r0, #0
   1858c:	str	r0, [sp, #12]
   18590:	b	18770 <main@@Base+0x760>
   18594:	ldr	sl, [r9, r8, lsl #2]
   18598:	mov	r1, r4
   1859c:	mov	r0, sl
   185a0:	bl	1266c <strcmp@plt>
   185a4:	cmp	r0, #0
   185a8:	beq	18728 <main@@Base+0x718>
   185ac:	movw	r1, #41888	; 0xa3a0
   185b0:	mov	r0, sl
   185b4:	movt	r1, #1
   185b8:	bl	1266c <strcmp@plt>
   185bc:	cmp	r0, #0
   185c0:	beq	18728 <main@@Base+0x718>
   185c4:	movw	r1, #41899	; 0xa3ab
   185c8:	mov	r0, sl
   185cc:	movt	r1, #1
   185d0:	bl	1266c <strcmp@plt>
   185d4:	cmp	r0, #0
   185d8:	beq	18730 <main@@Base+0x720>
   185dc:	movw	r1, #41902	; 0xa3ae
   185e0:	mov	r0, sl
   185e4:	movt	r1, #1
   185e8:	bl	1266c <strcmp@plt>
   185ec:	cmp	r0, #0
   185f0:	beq	18730 <main@@Base+0x720>
   185f4:	movw	r1, #41924	; 0xa3c4
   185f8:	mov	r0, sl
   185fc:	mov	r4, r6
   18600:	movt	r1, #1
   18604:	bl	1266c <strcmp@plt>
   18608:	cmp	r0, #0
   1860c:	beq	18628 <main@@Base+0x618>
   18610:	movw	r1, #41927	; 0xa3c7
   18614:	mov	r0, sl
   18618:	movt	r1, #1
   1861c:	bl	1266c <strcmp@plt>
   18620:	cmp	r0, #0
   18624:	bne	18644 <main@@Base+0x634>
   18628:	add	r6, r8, #1
   1862c:	cmp	r6, r7
   18630:	bge	18644 <main@@Base+0x634>
   18634:	ldr	r0, [r9, r6, lsl #2]
   18638:	ldrb	r1, [r0]
   1863c:	cmp	r1, #45	; 0x2d
   18640:	bne	18534 <main@@Base+0x524>
   18644:	movw	r1, #41977	; 0xa3f9
   18648:	mov	r0, sl
   1864c:	movt	r1, #1
   18650:	bl	1266c <strcmp@plt>
   18654:	cmp	r0, #0
   18658:	beq	1873c <main@@Base+0x72c>
   1865c:	movw	r1, #41980	; 0xa3fc
   18660:	mov	r0, sl
   18664:	movt	r1, #1
   18668:	bl	1266c <strcmp@plt>
   1866c:	cmp	r0, #0
   18670:	beq	1873c <main@@Base+0x72c>
   18674:	movw	r1, #41987	; 0xa403
   18678:	mov	r0, sl
   1867c:	movt	r1, #1
   18680:	bl	1266c <strcmp@plt>
   18684:	cmp	r0, #0
   18688:	mov	r6, r4
   1868c:	beq	18758 <main@@Base+0x748>
   18690:	movw	r1, #41990	; 0xa406
   18694:	mov	r0, sl
   18698:	movt	r1, #1
   1869c:	bl	1266c <strcmp@plt>
   186a0:	cmp	r0, #0
   186a4:	beq	18758 <main@@Base+0x748>
   186a8:	movw	r1, #41997	; 0xa40d
   186ac:	mov	r0, sl
   186b0:	movt	r1, #1
   186b4:	bl	1266c <strcmp@plt>
   186b8:	movw	r4, #41885	; 0xa39d
   186bc:	cmp	r0, #0
   186c0:	mov	r5, #1
   186c4:	movt	r4, #1
   186c8:	beq	18564 <main@@Base+0x554>
   186cc:	movw	r1, #42011	; 0xa41b
   186d0:	mov	r0, sl
   186d4:	movt	r1, #1
   186d8:	bl	1266c <strcmp@plt>
   186dc:	cmp	r0, #0
   186e0:	beq	18574 <main@@Base+0x564>
   186e4:	movw	r1, #42024	; 0xa428
   186e8:	mov	r0, sl
   186ec:	movt	r1, #1
   186f0:	bl	1266c <strcmp@plt>
   186f4:	cmp	r0, #0
   186f8:	beq	18588 <main@@Base+0x578>
   186fc:	ldr	r0, [sp, #8]
   18700:	cmp	r8, r0
   18704:	bne	190e8 <main@@Base+0x10d8>
   18708:	ldrb	r0, [sl]
   1870c:	cmp	r0, #45	; 0x2d
   18710:	beq	190e8 <main@@Base+0x10d8>
   18714:	ldr	r8, [sp, #8]
   18718:	movw	r0, #49640	; 0xc1e8
   1871c:	movt	r0, #2
   18720:	str	sl, [r0]
   18724:	b	18770 <main@@Base+0x760>
   18728:	str	r5, [r6]
   1872c:	b	18770 <main@@Base+0x760>
   18730:	mov	r0, #0
   18734:	str	r0, [sp, #16]
   18738:	b	18770 <main@@Base+0x760>
   1873c:	movw	r1, #53400	; 0xd098
   18740:	mov	r0, #1
   18744:	mov	r6, r4
   18748:	mov	r5, #1
   1874c:	movt	r1, #2
   18750:	str	r0, [r1]
   18754:	b	18768 <main@@Base+0x758>
   18758:	movw	r0, #49632	; 0xc1e0
   1875c:	mov	r5, #1
   18760:	movt	r0, #2
   18764:	str	r5, [r0]
   18768:	movw	r4, #41885	; 0xa39d
   1876c:	movt	r4, #1
   18770:	add	r8, r8, #1
   18774:	cmp	r8, r7
   18778:	blt	18594 <main@@Base+0x584>
   1877c:	movw	r0, #49640	; 0xc1e8
   18780:	movt	r0, #2
   18784:	ldr	r0, [r0]
   18788:	cmp	r0, #0
   1878c:	ldrbne	r0, [r0]
   18790:	cmpne	r0, #0
   18794:	beq	190e8 <main@@Base+0x10d8>
   18798:	bl	128e8 <coda_init@plt>
   1879c:	cmp	r0, #0
   187a0:	bne	191c4 <main@@Base+0x11b4>
   187a4:	ldr	r0, [sp, #12]
   187a8:	clz	r0, r0
   187ac:	lsr	r0, r0, #5
   187b0:	bl	1272c <coda_set_option_bypass_special_types@plt>
   187b4:	mov	r0, #0
   187b8:	bl	12660 <coda_set_option_perform_boundary_checks@plt>
   187bc:	ldr	r0, [sp, #16]
   187c0:	bl	128f4 <coda_set_option_perform_conversions@plt>
   187c4:	bl	16af4 <traverse_info_init@@Base>
   187c8:	bl	14604 <dim_info_init@@Base>
   187cc:	bl	16b4c <traverse_product@@Base>
   187d0:	b	19194 <main@@Base+0x1184>
   187d4:	movw	r0, #53412	; 0xd0a4
   187d8:	mov	r2, #1
   187dc:	movw	r1, #49640	; 0xc1e8
   187e0:	mov	r6, #0
   187e4:	movt	r0, #2
   187e8:	movt	r1, #2
   187ec:	str	r2, [r0]
   187f0:	movw	r0, #49624	; 0xc1d8
   187f4:	str	r6, [r1]
   187f8:	str	r6, [r1, #664]	; 0x298
   187fc:	movw	r1, #53396	; 0xd094
   18800:	movt	r0, #2
   18804:	movt	r1, #2
   18808:	str	r6, [r0]
   1880c:	movw	r0, #40112	; 0x9cb0
   18810:	movt	r0, #1
   18814:	str	r0, [r1]
   18818:	movw	r0, #49616	; 0xc1d0
   1881c:	movw	r1, #53392	; 0xd090
   18820:	movt	r0, #2
   18824:	movt	r1, #2
   18828:	str	r2, [r0]
   1882c:	movw	r0, #49636	; 0xc1e4
   18830:	movt	r0, #2
   18834:	str	r2, [r0]
   18838:	movw	r0, #53408	; 0xd0a0
   1883c:	movt	r0, #2
   18840:	str	r6, [r0]
   18844:	movw	r0, #53792	; 0xd220
   18848:	movt	r0, #2
   1884c:	str	r6, [r0]
   18850:	movw	r0, #53796	; 0xd224
   18854:	movt	r0, #2
   18858:	str	r6, [r0]
   1885c:	movw	r0, #49628	; 0xc1dc
   18860:	movt	r0, #2
   18864:	str	r6, [r0]
   18868:	movw	r0, #49588	; 0xc1b4
   1886c:	movt	r0, #2
   18870:	ldr	r0, [r0]
   18874:	str	r0, [r1]
   18878:	add	r0, r7, #1
   1887c:	sub	r8, sl, r0
   18880:	cmp	r8, #1
   18884:	blt	190e8 <main@@Base+0x10d8>
   18888:	movw	r5, #41899	; 0xa3ab
   1888c:	add	sl, r9, r0, lsl #2
   18890:	sub	r0, r8, #1
   18894:	mov	r4, #1
   18898:	str	r0, [sp, #12]
   1889c:	movt	r5, #1
   188a0:	mov	r0, #1
   188a4:	str	r0, [sp, #16]
   188a8:	b	18e40 <main@@Base+0xe30>
   188ac:	ldr	r0, [r9, #8]
   188b0:	bl	12798 <coda_set_definition_path@plt>
   188b4:	mov	r7, #3
   188b8:	b	180d0 <main@@Base+0xc0>
   188bc:	movw	r0, #49640	; 0xc1e8
   188c0:	mov	r2, #0
   188c4:	mov	r1, #3
   188c8:	movt	r0, #2
   188cc:	str	r2, [r0]
   188d0:	movw	r0, #53412	; 0xd0a4
   188d4:	movt	r0, #2
   188d8:	str	r1, [r0]
   188dc:	movw	r0, #49624	; 0xc1d8
   188e0:	movw	r1, #53392	; 0xd090
   188e4:	movt	r0, #2
   188e8:	movt	r1, #2
   188ec:	str	r2, [r0]
   188f0:	movw	r0, #53416	; 0xd0a8
   188f4:	movt	r0, #2
   188f8:	str	r2, [r0]
   188fc:	movw	r0, #49588	; 0xc1b4
   18900:	movt	r0, #2
   18904:	ldr	r0, [r0]
   18908:	str	r0, [r1]
   1890c:	add	r0, r7, #1
   18910:	sub	r8, sl, r0
   18914:	cmp	r8, #1
   18918:	blt	190e8 <main@@Base+0x10d8>
   1891c:	add	r9, r9, r0, lsl #2
   18920:	sub	r0, r8, #1
   18924:	movw	r6, #42179	; 0xa4c3
   18928:	movw	r7, #42182	; 0xa4c6
   1892c:	mov	r1, #0
   18930:	mov	r5, #0
   18934:	mov	r4, #0
   18938:	str	r0, [sp, #12]
   1893c:	mov	r0, #1
   18940:	movt	r6, #1
   18944:	movt	r7, #1
   18948:	str	r1, [sp, #8]
   1894c:	str	r0, [sp, #16]
   18950:	mov	r0, #1
   18954:	str	r0, [sp, #4]
   18958:	b	18988 <main@@Base+0x978>
   1895c:	mov	r0, #0
   18960:	str	r0, [sp, #4]
   18964:	b	18ad4 <main@@Base+0xac4>
   18968:	movw	r2, #49624	; 0xc1d8
   1896c:	movt	r2, #2
   18970:	str	r1, [r2]
   18974:	b	18ad8 <main@@Base+0xac8>
   18978:	movw	r2, #53416	; 0xd0a8
   1897c:	movt	r2, #2
   18980:	str	r1, [r2]
   18984:	b	18ad8 <main@@Base+0xac8>
   18988:	ldr	sl, [r9, r5, lsl #2]
   1898c:	mov	r1, r6
   18990:	mov	r0, sl
   18994:	bl	1266c <strcmp@plt>
   18998:	cmp	r0, #0
   1899c:	beq	18ac4 <main@@Base+0xab4>
   189a0:	mov	r0, sl
   189a4:	mov	r1, r7
   189a8:	bl	1266c <strcmp@plt>
   189ac:	cmp	r0, #0
   189b0:	beq	18ac4 <main@@Base+0xab4>
   189b4:	movw	r1, #41899	; 0xa3ab
   189b8:	mov	r0, sl
   189bc:	movt	r1, #1
   189c0:	bl	1266c <strcmp@plt>
   189c4:	cmp	r0, #0
   189c8:	beq	18acc <main@@Base+0xabc>
   189cc:	movw	r1, #41902	; 0xa3ae
   189d0:	mov	r0, sl
   189d4:	movt	r1, #1
   189d8:	bl	1266c <strcmp@plt>
   189dc:	cmp	r0, #0
   189e0:	beq	18acc <main@@Base+0xabc>
   189e4:	movw	r1, #42065	; 0xa451
   189e8:	mov	r0, sl
   189ec:	movt	r1, #1
   189f0:	bl	1266c <strcmp@plt>
   189f4:	cmp	r0, #0
   189f8:	beq	18a14 <main@@Base+0xa04>
   189fc:	movw	r1, #42068	; 0xa454
   18a00:	mov	r0, sl
   18a04:	movt	r1, #1
   18a08:	bl	1266c <strcmp@plt>
   18a0c:	cmp	r0, #0
   18a10:	bne	18a30 <main@@Base+0xa20>
   18a14:	add	r0, r5, #1
   18a18:	cmp	r0, r8
   18a1c:	bge	18a30 <main@@Base+0xa20>
   18a20:	ldr	r1, [r9, r0, lsl #2]
   18a24:	ldrb	r2, [r1]
   18a28:	cmp	r2, #45	; 0x2d
   18a2c:	bne	18968 <main@@Base+0x958>
   18a30:	movw	r1, #42195	; 0xa4d3
   18a34:	mov	r0, sl
   18a38:	movt	r1, #1
   18a3c:	bl	1266c <strcmp@plt>
   18a40:	cmp	r0, #0
   18a44:	beq	18a60 <main@@Base+0xa50>
   18a48:	movw	r1, #42198	; 0xa4d6
   18a4c:	mov	r0, sl
   18a50:	movt	r1, #1
   18a54:	bl	1266c <strcmp@plt>
   18a58:	cmp	r0, #0
   18a5c:	bne	18a7c <main@@Base+0xa6c>
   18a60:	add	r0, r5, #1
   18a64:	cmp	r0, r8
   18a68:	bge	18a7c <main@@Base+0xa6c>
   18a6c:	ldr	r1, [r9, r0, lsl #2]
   18a70:	ldrb	r2, [r1]
   18a74:	cmp	r2, #45	; 0x2d
   18a78:	bne	18978 <main@@Base+0x968>
   18a7c:	movw	r1, #42024	; 0xa428
   18a80:	mov	r0, sl
   18a84:	movt	r1, #1
   18a88:	bl	1266c <strcmp@plt>
   18a8c:	cmp	r0, #0
   18a90:	beq	1895c <main@@Base+0x94c>
   18a94:	ldr	r0, [sp, #12]
   18a98:	cmp	r5, r0
   18a9c:	bne	190e8 <main@@Base+0x10d8>
   18aa0:	ldrb	r0, [sl]
   18aa4:	cmp	r0, #45	; 0x2d
   18aa8:	beq	190e8 <main@@Base+0x10d8>
   18aac:	movw	r0, #49640	; 0xc1e8
   18ab0:	str	sl, [sp, #8]
   18ab4:	movt	r0, #2
   18ab8:	str	sl, [r0]
   18abc:	ldr	r0, [sp, #12]
   18ac0:	b	18ad8 <main@@Base+0xac8>
   18ac4:	mov	r4, #1
   18ac8:	b	18ad4 <main@@Base+0xac4>
   18acc:	mov	r0, #0
   18ad0:	str	r0, [sp, #16]
   18ad4:	mov	r0, r5
   18ad8:	add	r5, r0, #1
   18adc:	cmp	r5, r8
   18ae0:	blt	18988 <main@@Base+0x978>
   18ae4:	ldr	r0, [sp, #8]
   18ae8:	cmp	r0, #0
   18aec:	ldrbne	r0, [r0]
   18af0:	cmpne	r0, #0
   18af4:	beq	190e8 <main@@Base+0x10d8>
   18af8:	bl	128e8 <coda_init@plt>
   18afc:	cmp	r0, #0
   18b00:	bne	191c4 <main@@Base+0x11b4>
   18b04:	ldr	r0, [sp, #4]
   18b08:	clz	r0, r0
   18b0c:	lsr	r0, r0, #5
   18b10:	bl	1272c <coda_set_option_bypass_special_types@plt>
   18b14:	ldr	r0, [sp, #16]
   18b18:	bl	128f4 <coda_set_option_perform_conversions@plt>
   18b1c:	movw	r5, #49624	; 0xc1d8
   18b20:	movw	r6, #53392	; 0xd090
   18b24:	movt	r5, #2
   18b28:	movt	r6, #2
   18b2c:	ldr	r0, [r5]
   18b30:	cmp	r0, #0
   18b34:	beq	18b50 <main@@Base+0xb40>
   18b38:	movw	r1, #42135	; 0xa497
   18b3c:	movt	r1, #1
   18b40:	bl	126a8 <fopen@plt>
   18b44:	cmp	r0, #0
   18b48:	str	r0, [r6]
   18b4c:	beq	19214 <main@@Base+0x1204>
   18b50:	mov	r0, r4
   18b54:	bl	15c9c <print_json_data@@Base>
   18b58:	b	18df8 <main@@Base+0xde8>
   18b5c:	movw	r0, #49640	; 0xc1e8
   18b60:	mov	r2, #0
   18b64:	mov	r1, #4
   18b68:	movt	r0, #2
   18b6c:	str	r2, [r0]
   18b70:	movw	r0, #53412	; 0xd0a4
   18b74:	movt	r0, #2
   18b78:	str	r1, [r0]
   18b7c:	movw	r0, #49624	; 0xc1d8
   18b80:	movw	r1, #53392	; 0xd090
   18b84:	movt	r0, #2
   18b88:	movt	r1, #2
   18b8c:	str	r2, [r0]
   18b90:	movw	r0, #53416	; 0xd0a8
   18b94:	movt	r0, #2
   18b98:	str	r2, [r0]
   18b9c:	movw	r0, #49588	; 0xc1b4
   18ba0:	movt	r0, #2
   18ba4:	ldr	r0, [r0]
   18ba8:	str	r0, [r1]
   18bac:	add	r0, r7, #1
   18bb0:	sub	r8, sl, r0
   18bb4:	cmp	r8, #1
   18bb8:	blt	190e8 <main@@Base+0x10d8>
   18bbc:	add	r9, r9, r0, lsl #2
   18bc0:	sub	r0, r8, #1
   18bc4:	movw	r6, #42179	; 0xa4c3
   18bc8:	movw	r7, #42182	; 0xa4c6
   18bcc:	mov	r1, #0
   18bd0:	mov	r5, #0
   18bd4:	mov	r4, #0
   18bd8:	str	r0, [sp, #12]
   18bdc:	mov	r0, #1
   18be0:	movt	r6, #1
   18be4:	movt	r7, #1
   18be8:	str	r1, [sp, #8]
   18bec:	str	r0, [sp, #16]
   18bf0:	mov	r0, #1
   18bf4:	str	r0, [sp, #4]
   18bf8:	b	18c28 <main@@Base+0xc18>
   18bfc:	mov	r0, #0
   18c00:	str	r0, [sp, #4]
   18c04:	b	18d74 <main@@Base+0xd64>
   18c08:	movw	r2, #49624	; 0xc1d8
   18c0c:	movt	r2, #2
   18c10:	str	r1, [r2]
   18c14:	b	18d78 <main@@Base+0xd68>
   18c18:	movw	r2, #53416	; 0xd0a8
   18c1c:	movt	r2, #2
   18c20:	str	r1, [r2]
   18c24:	b	18d78 <main@@Base+0xd68>
   18c28:	ldr	sl, [r9, r5, lsl #2]
   18c2c:	mov	r1, r6
   18c30:	mov	r0, sl
   18c34:	bl	1266c <strcmp@plt>
   18c38:	cmp	r0, #0
   18c3c:	beq	18d64 <main@@Base+0xd54>
   18c40:	mov	r0, sl
   18c44:	mov	r1, r7
   18c48:	bl	1266c <strcmp@plt>
   18c4c:	cmp	r0, #0
   18c50:	beq	18d64 <main@@Base+0xd54>
   18c54:	movw	r1, #41899	; 0xa3ab
   18c58:	mov	r0, sl
   18c5c:	movt	r1, #1
   18c60:	bl	1266c <strcmp@plt>
   18c64:	cmp	r0, #0
   18c68:	beq	18d6c <main@@Base+0xd5c>
   18c6c:	movw	r1, #41902	; 0xa3ae
   18c70:	mov	r0, sl
   18c74:	movt	r1, #1
   18c78:	bl	1266c <strcmp@plt>
   18c7c:	cmp	r0, #0
   18c80:	beq	18d6c <main@@Base+0xd5c>
   18c84:	movw	r1, #42065	; 0xa451
   18c88:	mov	r0, sl
   18c8c:	movt	r1, #1
   18c90:	bl	1266c <strcmp@plt>
   18c94:	cmp	r0, #0
   18c98:	beq	18cb4 <main@@Base+0xca4>
   18c9c:	movw	r1, #42068	; 0xa454
   18ca0:	mov	r0, sl
   18ca4:	movt	r1, #1
   18ca8:	bl	1266c <strcmp@plt>
   18cac:	cmp	r0, #0
   18cb0:	bne	18cd0 <main@@Base+0xcc0>
   18cb4:	add	r0, r5, #1
   18cb8:	cmp	r0, r8
   18cbc:	bge	18cd0 <main@@Base+0xcc0>
   18cc0:	ldr	r1, [r9, r0, lsl #2]
   18cc4:	ldrb	r2, [r1]
   18cc8:	cmp	r2, #45	; 0x2d
   18ccc:	bne	18c08 <main@@Base+0xbf8>
   18cd0:	movw	r1, #42195	; 0xa4d3
   18cd4:	mov	r0, sl
   18cd8:	movt	r1, #1
   18cdc:	bl	1266c <strcmp@plt>
   18ce0:	cmp	r0, #0
   18ce4:	beq	18d00 <main@@Base+0xcf0>
   18ce8:	movw	r1, #42198	; 0xa4d6
   18cec:	mov	r0, sl
   18cf0:	movt	r1, #1
   18cf4:	bl	1266c <strcmp@plt>
   18cf8:	cmp	r0, #0
   18cfc:	bne	18d1c <main@@Base+0xd0c>
   18d00:	add	r0, r5, #1
   18d04:	cmp	r0, r8
   18d08:	bge	18d1c <main@@Base+0xd0c>
   18d0c:	ldr	r1, [r9, r0, lsl #2]
   18d10:	ldrb	r2, [r1]
   18d14:	cmp	r2, #45	; 0x2d
   18d18:	bne	18c18 <main@@Base+0xc08>
   18d1c:	movw	r1, #42024	; 0xa428
   18d20:	mov	r0, sl
   18d24:	movt	r1, #1
   18d28:	bl	1266c <strcmp@plt>
   18d2c:	cmp	r0, #0
   18d30:	beq	18bfc <main@@Base+0xbec>
   18d34:	ldr	r0, [sp, #12]
   18d38:	cmp	r5, r0
   18d3c:	bne	190e8 <main@@Base+0x10d8>
   18d40:	ldrb	r0, [sl]
   18d44:	cmp	r0, #45	; 0x2d
   18d48:	beq	190e8 <main@@Base+0x10d8>
   18d4c:	movw	r0, #49640	; 0xc1e8
   18d50:	str	sl, [sp, #8]
   18d54:	movt	r0, #2
   18d58:	str	sl, [r0]
   18d5c:	ldr	r0, [sp, #12]
   18d60:	b	18d78 <main@@Base+0xd68>
   18d64:	mov	r4, #1
   18d68:	b	18d74 <main@@Base+0xd64>
   18d6c:	mov	r0, #0
   18d70:	str	r0, [sp, #16]
   18d74:	mov	r0, r5
   18d78:	add	r5, r0, #1
   18d7c:	cmp	r5, r8
   18d80:	blt	18c28 <main@@Base+0xc18>
   18d84:	ldr	r0, [sp, #8]
   18d88:	cmp	r0, #0
   18d8c:	ldrbne	r0, [r0]
   18d90:	cmpne	r0, #0
   18d94:	beq	190e8 <main@@Base+0x10d8>
   18d98:	bl	128e8 <coda_init@plt>
   18d9c:	cmp	r0, #0
   18da0:	bne	191c4 <main@@Base+0x11b4>
   18da4:	ldr	r0, [sp, #4]
   18da8:	clz	r0, r0
   18dac:	lsr	r0, r0, #5
   18db0:	bl	1272c <coda_set_option_bypass_special_types@plt>
   18db4:	ldr	r0, [sp, #16]
   18db8:	bl	128f4 <coda_set_option_perform_conversions@plt>
   18dbc:	movw	r5, #49624	; 0xc1d8
   18dc0:	movw	r6, #53392	; 0xd090
   18dc4:	movt	r5, #2
   18dc8:	movt	r6, #2
   18dcc:	ldr	r0, [r5]
   18dd0:	cmp	r0, #0
   18dd4:	beq	18df0 <main@@Base+0xde0>
   18dd8:	movw	r1, #42135	; 0xa497
   18ddc:	movt	r1, #1
   18de0:	bl	126a8 <fopen@plt>
   18de4:	cmp	r0, #0
   18de8:	str	r0, [r6]
   18dec:	beq	19214 <main@@Base+0x1204>
   18df0:	mov	r0, r4
   18df4:	bl	172b0 <print_yaml_data@@Base>
   18df8:	ldr	r0, [r5]
   18dfc:	cmp	r0, #0
   18e00:	beq	1919c <main@@Base+0x118c>
   18e04:	ldr	r0, [r6]
   18e08:	bl	1296c <fclose@plt>
   18e0c:	b	1919c <main@@Base+0x118c>
   18e10:	movw	r1, #49624	; 0xc1d8
   18e14:	movt	r1, #2
   18e18:	str	r0, [r1]
   18e1c:	b	190c0 <main@@Base+0x10b0>
   18e20:	movw	r1, #53396	; 0xd094
   18e24:	movt	r1, #2
   18e28:	str	r0, [r1]
   18e2c:	b	190c0 <main@@Base+0x10b0>
   18e30:	mov	r0, #0
   18e34:	mov	r7, r6
   18e38:	str	r0, [sp, #16]
   18e3c:	b	190c0 <main@@Base+0x10b0>
   18e40:	ldr	r9, [sl, r6, lsl #2]
   18e44:	mov	r1, r5
   18e48:	mov	r0, r9
   18e4c:	bl	1266c <strcmp@plt>
   18e50:	cmp	r0, #0
   18e54:	beq	19058 <main@@Base+0x1048>
   18e58:	movw	r1, #41902	; 0xa3ae
   18e5c:	mov	r0, r9
   18e60:	movt	r1, #1
   18e64:	bl	1266c <strcmp@plt>
   18e68:	cmp	r0, #0
   18e6c:	beq	19058 <main@@Base+0x1048>
   18e70:	movw	r1, #41924	; 0xa3c4
   18e74:	mov	r0, r9
   18e78:	movt	r1, #1
   18e7c:	bl	1266c <strcmp@plt>
   18e80:	cmp	r0, #0
   18e84:	beq	18ea0 <main@@Base+0xe90>
   18e88:	movw	r1, #41927	; 0xa3c7
   18e8c:	mov	r0, r9
   18e90:	movt	r1, #1
   18e94:	bl	1266c <strcmp@plt>
   18e98:	cmp	r0, #0
   18e9c:	bne	18ebc <main@@Base+0xeac>
   18ea0:	add	r7, r6, #1
   18ea4:	cmp	r7, r8
   18ea8:	bge	18ebc <main@@Base+0xeac>
   18eac:	ldr	r0, [sl, r7, lsl #2]
   18eb0:	ldrb	r1, [r0]
   18eb4:	cmp	r1, #45	; 0x2d
   18eb8:	bne	19080 <main@@Base+0x1070>
   18ebc:	movw	r1, #42043	; 0xa43b
   18ec0:	mov	r0, r9
   18ec4:	movt	r1, #1
   18ec8:	bl	1266c <strcmp@plt>
   18ecc:	cmp	r0, #0
   18ed0:	beq	19060 <main@@Base+0x1050>
   18ed4:	movw	r1, #42046	; 0xa43e
   18ed8:	mov	r0, r9
   18edc:	movt	r1, #1
   18ee0:	bl	1266c <strcmp@plt>
   18ee4:	cmp	r0, #0
   18ee8:	beq	19060 <main@@Base+0x1050>
   18eec:	movw	r1, #42054	; 0xa446
   18ef0:	mov	r0, r9
   18ef4:	movt	r1, #1
   18ef8:	bl	1266c <strcmp@plt>
   18efc:	cmp	r0, #0
   18f00:	beq	19070 <main@@Base+0x1060>
   18f04:	movw	r1, #42057	; 0xa449
   18f08:	mov	r0, r9
   18f0c:	movt	r1, #1
   18f10:	bl	1266c <strcmp@plt>
   18f14:	cmp	r0, #0
   18f18:	beq	19070 <main@@Base+0x1060>
   18f1c:	movw	r1, #42065	; 0xa451
   18f20:	mov	r0, r9
   18f24:	movt	r1, #1
   18f28:	bl	1266c <strcmp@plt>
   18f2c:	cmp	r0, #0
   18f30:	beq	18f4c <main@@Base+0xf3c>
   18f34:	movw	r1, #42068	; 0xa454
   18f38:	mov	r0, r9
   18f3c:	movt	r1, #1
   18f40:	bl	1266c <strcmp@plt>
   18f44:	cmp	r0, #0
   18f48:	bne	18f68 <main@@Base+0xf58>
   18f4c:	add	r7, r6, #1
   18f50:	cmp	r7, r8
   18f54:	bge	18f68 <main@@Base+0xf58>
   18f58:	ldr	r0, [sl, r7, lsl #2]
   18f5c:	ldrb	r1, [r0]
   18f60:	cmp	r1, #45	; 0x2d
   18f64:	bne	18e10 <main@@Base+0xe00>
   18f68:	movw	r1, #42077	; 0xa45d
   18f6c:	mov	r0, r9
   18f70:	movt	r1, #1
   18f74:	bl	1266c <strcmp@plt>
   18f78:	cmp	r0, #0
   18f7c:	beq	1909c <main@@Base+0x108c>
   18f80:	movw	r1, #42080	; 0xa460
   18f84:	mov	r0, r9
   18f88:	movt	r1, #1
   18f8c:	bl	1266c <strcmp@plt>
   18f90:	cmp	r0, #0
   18f94:	beq	1909c <main@@Base+0x108c>
   18f98:	movw	r1, #42096	; 0xa470
   18f9c:	mov	r0, r9
   18fa0:	movt	r1, #1
   18fa4:	bl	1266c <strcmp@plt>
   18fa8:	cmp	r0, #0
   18fac:	beq	18fc8 <main@@Base+0xfb8>
   18fb0:	movw	r1, #42099	; 0xa473
   18fb4:	mov	r0, r9
   18fb8:	movt	r1, #1
   18fbc:	bl	1266c <strcmp@plt>
   18fc0:	cmp	r0, #0
   18fc4:	bne	18fe4 <main@@Base+0xfd4>
   18fc8:	add	r7, r6, #1
   18fcc:	cmp	r7, r8
   18fd0:	bge	18fe4 <main@@Base+0xfd4>
   18fd4:	ldr	r0, [sl, r7, lsl #2]
   18fd8:	ldrb	r1, [r0]
   18fdc:	cmp	r1, #45	; 0x2d
   18fe0:	bne	18e20 <main@@Base+0xe10>
   18fe4:	movw	r1, #41977	; 0xa3f9
   18fe8:	mov	r0, r9
   18fec:	movt	r1, #1
   18ff0:	bl	1266c <strcmp@plt>
   18ff4:	cmp	r0, #0
   18ff8:	beq	190ac <main@@Base+0x109c>
   18ffc:	movw	r1, #42118	; 0xa486
   19000:	mov	r0, r9
   19004:	movt	r1, #1
   19008:	bl	1266c <strcmp@plt>
   1900c:	cmp	r0, #0
   19010:	beq	190ac <main@@Base+0x109c>
   19014:	movw	r1, #42024	; 0xa428
   19018:	mov	r0, r9
   1901c:	movt	r1, #1
   19020:	bl	1266c <strcmp@plt>
   19024:	cmp	r0, #0
   19028:	beq	18e30 <main@@Base+0xe20>
   1902c:	ldr	r0, [sp, #12]
   19030:	cmp	r6, r0
   19034:	bne	190e8 <main@@Base+0x10d8>
   19038:	ldrb	r0, [r9]
   1903c:	cmp	r0, #45	; 0x2d
   19040:	beq	190e8 <main@@Base+0x10d8>
   19044:	ldr	r7, [sp, #12]
   19048:	movw	r0, #49640	; 0xc1e8
   1904c:	movt	r0, #2
   19050:	str	r9, [r0]
   19054:	b	190c0 <main@@Base+0x10b0>
   19058:	mov	r4, #0
   1905c:	b	190bc <main@@Base+0x10ac>
   19060:	movw	r1, #53408	; 0xd0a0
   19064:	mov	r0, #1
   19068:	movt	r1, #2
   1906c:	b	190b8 <main@@Base+0x10a8>
   19070:	movw	r1, #53792	; 0xd220
   19074:	mov	r0, #1
   19078:	movt	r1, #2
   1907c:	b	190b8 <main@@Base+0x10a8>
   19080:	bl	15784 <codadump_filter_create@@Base>
   19084:	movw	r1, #49640	; 0xc1e8
   19088:	cmp	r0, #0
   1908c:	movt	r1, #2
   19090:	str	r0, [r1, #664]	; 0x298
   19094:	bne	190c0 <main@@Base+0x10b0>
   19098:	b	191f8 <main@@Base+0x11e8>
   1909c:	movw	r1, #53796	; 0xd224
   190a0:	mov	r0, #1
   190a4:	movt	r1, #2
   190a8:	b	190b8 <main@@Base+0x10a8>
   190ac:	movw	r1, #49628	; 0xc1dc
   190b0:	mov	r0, #1
   190b4:	movt	r1, #2
   190b8:	str	r0, [r1]
   190bc:	mov	r7, r6
   190c0:	add	r6, r7, #1
   190c4:	cmp	r6, r8
   190c8:	blt	18e40 <main@@Base+0xe30>
   190cc:	movw	r0, #49640	; 0xc1e8
   190d0:	movt	r0, #2
   190d4:	ldr	r0, [r0]
   190d8:	cmp	r0, #0
   190dc:	ldrbne	r0, [r0]
   190e0:	cmpne	r0, #0
   190e4:	bne	19114 <main@@Base+0x1104>
   190e8:	movw	r0, #49584	; 0xc1b0
   190ec:	mov	r1, #25
   190f0:	movt	r0, #2
   190f4:	ldr	r3, [r0]
   190f8:	movw	r0, #41838	; 0xa36e
   190fc:	movt	r0, #1
   19100:	mov	r2, #1
   19104:	bl	127e0 <fwrite@plt>
   19108:	bl	19248 <main@@Base+0x1238>
   1910c:	mov	r0, #1
   19110:	bl	1287c <exit@plt>
   19114:	bl	128e8 <coda_init@plt>
   19118:	cmp	r0, #0
   1911c:	bne	191c4 <main@@Base+0x11b4>
   19120:	ldr	r0, [sp, #16]
   19124:	clz	r0, r0
   19128:	lsr	r0, r0, #5
   1912c:	bl	1272c <coda_set_option_bypass_special_types@plt>
   19130:	mov	r0, #0
   19134:	bl	12660 <coda_set_option_perform_boundary_checks@plt>
   19138:	mov	r0, r4
   1913c:	bl	128f4 <coda_set_option_perform_conversions@plt>
   19140:	bl	16af4 <traverse_info_init@@Base>
   19144:	bl	14604 <dim_info_init@@Base>
   19148:	movw	r4, #49624	; 0xc1d8
   1914c:	movw	r5, #53392	; 0xd090
   19150:	movt	r4, #2
   19154:	movt	r5, #2
   19158:	ldr	r0, [r4]
   1915c:	cmp	r0, #0
   19160:	beq	1917c <main@@Base+0x116c>
   19164:	movw	r1, #42135	; 0xa497
   19168:	movt	r1, #1
   1916c:	bl	126a8 <fopen@plt>
   19170:	cmp	r0, #0
   19174:	str	r0, [r5]
   19178:	beq	1921c <main@@Base+0x120c>
   1917c:	bl	16b4c <traverse_product@@Base>
   19180:	ldr	r0, [r4]
   19184:	cmp	r0, #0
   19188:	beq	19194 <main@@Base+0x1184>
   1918c:	ldr	r0, [r5]
   19190:	bl	1296c <fclose@plt>
   19194:	bl	14624 <dim_info_done@@Base>
   19198:	bl	16b14 <traverse_info_done@@Base>
   1919c:	bl	12810 <coda_done@plt>
   191a0:	mov	r0, #0
   191a4:	sub	sp, fp, #28
   191a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   191ac:	bl	19248 <main@@Base+0x1238>
   191b0:	mov	r0, #0
   191b4:	bl	1287c <exit@plt>
   191b8:	bl	197ac <main@@Base+0x179c>
   191bc:	mov	r0, #0
   191c0:	bl	1287c <exit@plt>
   191c4:	movw	r0, #49584	; 0xc1b0
   191c8:	movt	r0, #2
   191cc:	ldr	r4, [r0]
   191d0:	bl	12a68 <coda_get_errno@plt>
   191d4:	ldr	r0, [r0]
   191d8:	bl	12a20 <coda_errno_to_string@plt>
   191dc:	movw	r1, #41748	; 0xa314
   191e0:	mov	r2, r0
   191e4:	mov	r0, r4
   191e8:	movt	r1, #1
   191ec:	bl	128c4 <fprintf@plt>
   191f0:	mov	r0, #1
   191f4:	bl	1287c <exit@plt>
   191f8:	movw	r0, #49584	; 0xc1b0
   191fc:	mov	r1, #40	; 0x28
   19200:	movt	r0, #2
   19204:	ldr	r3, [r0]
   19208:	movw	r0, #41936	; 0xa3d0
   1920c:	movt	r0, #1
   19210:	b	19100 <main@@Base+0x10f0>
   19214:	ldr	r2, [r5]
   19218:	b	19230 <main@@Base+0x1220>
   1921c:	ldr	r2, [r4]
   19220:	b	19230 <main@@Base+0x1220>
   19224:	movw	r0, #49624	; 0xc1d8
   19228:	movt	r0, #2
   1922c:	ldr	r2, [r0]
   19230:	movw	r0, #49584	; 0xc1b0
   19234:	movw	r1, #42137	; 0xa499
   19238:	movt	r0, #2
   1923c:	movt	r1, #1
   19240:	ldr	r0, [r0]
   19244:	b	191ec <main@@Base+0x11dc>
   19248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1924c:	add	fp, sp, #28
   19250:	sub	sp, sp, #4
   19254:	movw	r0, #42259	; 0xa513
   19258:	movt	r0, #1
   1925c:	bl	1281c <puts@plt>
   19260:	movw	r0, #42272	; 0xa520
   19264:	movt	r0, #1
   19268:	bl	1281c <puts@plt>
   1926c:	movw	r0, #42352	; 0xa570
   19270:	movt	r0, #1
   19274:	bl	1281c <puts@plt>
   19278:	movw	r8, #43056	; 0xa830
   1927c:	movt	r8, #1
   19280:	mov	r0, r8
   19284:	bl	1281c <puts@plt>
   19288:	movw	r0, #42400	; 0xa5a0
   1928c:	movt	r0, #1
   19290:	bl	1281c <puts@plt>
   19294:	movw	r0, #42432	; 0xa5c0
   19298:	movt	r0, #1
   1929c:	bl	1281c <puts@plt>
   192a0:	movw	r5, #44480	; 0xadc0
   192a4:	movt	r5, #1
   192a8:	mov	r0, r5
   192ac:	bl	1281c <puts@plt>
   192b0:	movw	r6, #44528	; 0xadf0
   192b4:	movt	r6, #1
   192b8:	mov	r0, r6
   192bc:	bl	1281c <puts@plt>
   192c0:	movw	r7, #43088	; 0xa850
   192c4:	movt	r7, #1
   192c8:	mov	r0, r7
   192cc:	bl	1281c <puts@plt>
   192d0:	movw	r4, #43136	; 0xa880
   192d4:	movt	r4, #1
   192d8:	mov	r0, r4
   192dc:	bl	1281c <puts@plt>
   192e0:	movw	r0, #42496	; 0xa600
   192e4:	movt	r0, #1
   192e8:	bl	1281c <puts@plt>
   192ec:	movw	r0, #42528	; 0xa620
   192f0:	movt	r0, #1
   192f4:	bl	1281c <puts@plt>
   192f8:	movw	r0, #42576	; 0xa650
   192fc:	movt	r0, #1
   19300:	bl	1281c <puts@plt>
   19304:	movw	r0, #42608	; 0xa670
   19308:	movt	r0, #1
   1930c:	bl	1281c <puts@plt>
   19310:	movw	r0, #42656	; 0xa6a0
   19314:	movt	r0, #1
   19318:	bl	1281c <puts@plt>
   1931c:	movw	r0, #42688	; 0xa6c0
   19320:	movt	r0, #1
   19324:	bl	1281c <puts@plt>
   19328:	movw	r0, #42752	; 0xa700
   1932c:	movt	r0, #1
   19330:	bl	1281c <puts@plt>
   19334:	movw	r0, #42784	; 0xa720
   19338:	movt	r0, #1
   1933c:	bl	1281c <puts@plt>
   19340:	movw	r0, #42864	; 0xa770
   19344:	movt	r0, #1
   19348:	bl	1281c <puts@plt>
   1934c:	movw	sl, #44592	; 0xae30
   19350:	movt	sl, #1
   19354:	mov	r0, sl
   19358:	bl	1281c <puts@plt>
   1935c:	movw	r0, #44624	; 0xae50
   19360:	movt	r0, #1
   19364:	bl	1281c <puts@plt>
   19368:	movw	r0, #44704	; 0xaea0
   1936c:	movt	r0, #1
   19370:	bl	1281c <puts@plt>
   19374:	movw	r0, #44784	; 0xaef0
   19378:	movt	r0, #1
   1937c:	bl	1281c <puts@plt>
   19380:	mov	r0, #10
   19384:	bl	12924 <putchar@plt>
   19388:	movw	r0, #42912	; 0xa7a0
   1938c:	movt	r0, #1
   19390:	bl	1281c <puts@plt>
   19394:	movw	r0, #42992	; 0xa7f0
   19398:	movt	r0, #1
   1939c:	bl	1281c <puts@plt>
   193a0:	mov	r0, r8
   193a4:	bl	1281c <puts@plt>
   193a8:	mov	r0, r5
   193ac:	bl	1281c <puts@plt>
   193b0:	mov	r0, r6
   193b4:	bl	1281c <puts@plt>
   193b8:	mov	r0, r7
   193bc:	bl	1281c <puts@plt>
   193c0:	mov	r0, r4
   193c4:	bl	1281c <puts@plt>
   193c8:	movw	r0, #43216	; 0xa8d0
   193cc:	movt	r0, #1
   193d0:	bl	1281c <puts@plt>
   193d4:	movw	r0, #43248	; 0xa8f0
   193d8:	movt	r0, #1
   193dc:	bl	1281c <puts@plt>
   193e0:	movw	r0, #43328	; 0xa940
   193e4:	movt	r0, #1
   193e8:	bl	1281c <puts@plt>
   193ec:	movw	r0, #43360	; 0xa960
   193f0:	movt	r0, #1
   193f4:	bl	1281c <puts@plt>
   193f8:	movw	r6, #45248	; 0xb0c0
   193fc:	movt	r6, #1
   19400:	mov	r0, r6
   19404:	bl	1281c <puts@plt>
   19408:	movw	r0, #45296	; 0xb0f0
   1940c:	movt	r0, #1
   19410:	bl	1281c <puts@plt>
   19414:	movw	r0, #43440	; 0xa9b0
   19418:	movt	r0, #1
   1941c:	bl	1281c <puts@plt>
   19420:	movw	r0, #43472	; 0xa9d0
   19424:	movt	r0, #1
   19428:	bl	1281c <puts@plt>
   1942c:	movw	r0, #43552	; 0xaa20
   19430:	movt	r0, #1
   19434:	bl	1281c <puts@plt>
   19438:	movw	r0, #43616	; 0xaa60
   1943c:	movt	r0, #1
   19440:	bl	1281c <puts@plt>
   19444:	movw	r0, #43696	; 0xaab0
   19448:	movt	r0, #1
   1944c:	bl	1281c <puts@plt>
   19450:	movw	r0, #43744	; 0xaae0
   19454:	movt	r0, #1
   19458:	bl	1281c <puts@plt>
   1945c:	mov	r0, sl
   19460:	bl	1281c <puts@plt>
   19464:	movw	r0, #44624	; 0xae50
   19468:	movt	r0, #1
   1946c:	mov	r9, r0
   19470:	bl	1281c <puts@plt>
   19474:	movw	r0, #44704	; 0xaea0
   19478:	movt	r0, #1
   1947c:	mov	r8, r0
   19480:	bl	1281c <puts@plt>
   19484:	movw	r0, #44784	; 0xaef0
   19488:	movt	r0, #1
   1948c:	mov	r7, r0
   19490:	bl	1281c <puts@plt>
   19494:	mov	r0, #10
   19498:	bl	12924 <putchar@plt>
   1949c:	movw	r0, #43824	; 0xab30
   194a0:	movt	r0, #1
   194a4:	bl	1281c <puts@plt>
   194a8:	movw	r0, #43904	; 0xab80
   194ac:	movt	r0, #1
   194b0:	bl	1281c <puts@plt>
   194b4:	movw	r0, #43968	; 0xabc0
   194b8:	movt	r0, #1
   194bc:	bl	1281c <puts@plt>
   194c0:	movw	r4, #44256	; 0xace0
   194c4:	movt	r4, #1
   194c8:	mov	r0, r4
   194cc:	bl	1281c <puts@plt>
   194d0:	movw	r5, #44288	; 0xad00
   194d4:	movt	r5, #1
   194d8:	mov	r0, r5
   194dc:	bl	1281c <puts@plt>
   194e0:	movw	r0, #44000	; 0xabe0
   194e4:	movt	r0, #1
   194e8:	bl	1281c <puts@plt>
   194ec:	movw	r0, #44480	; 0xadc0
   194f0:	movt	r0, #1
   194f4:	bl	1281c <puts@plt>
   194f8:	movw	r0, #44528	; 0xadf0
   194fc:	movt	r0, #1
   19500:	bl	1281c <puts@plt>
   19504:	mov	r0, r6
   19508:	bl	1281c <puts@plt>
   1950c:	movw	r0, #45296	; 0xb0f0
   19510:	movt	r0, #1
   19514:	bl	1281c <puts@plt>
   19518:	movw	r0, #45360	; 0xb130
   1951c:	movt	r0, #1
   19520:	bl	1281c <puts@plt>
   19524:	movw	r0, #45392	; 0xb150
   19528:	movt	r0, #1
   1952c:	bl	1281c <puts@plt>
   19530:	movw	r6, #45472	; 0xb1a0
   19534:	movt	r6, #1
   19538:	mov	r0, r6
   1953c:	bl	1281c <puts@plt>
   19540:	mov	r0, sl
   19544:	bl	1281c <puts@plt>
   19548:	mov	r0, r9
   1954c:	bl	1281c <puts@plt>
   19550:	mov	r0, r8
   19554:	bl	1281c <puts@plt>
   19558:	mov	r0, r7
   1955c:	bl	1281c <puts@plt>
   19560:	mov	r0, #10
   19564:	bl	12924 <putchar@plt>
   19568:	movw	r0, #44080	; 0xac30
   1956c:	movt	r0, #1
   19570:	bl	1281c <puts@plt>
   19574:	movw	r0, #44160	; 0xac80
   19578:	movt	r0, #1
   1957c:	bl	1281c <puts@plt>
   19580:	movw	r0, #44224	; 0xacc0
   19584:	movt	r0, #1
   19588:	bl	1281c <puts@plt>
   1958c:	mov	r0, r4
   19590:	bl	1281c <puts@plt>
   19594:	mov	r0, r5
   19598:	bl	1281c <puts@plt>
   1959c:	movw	r0, #44368	; 0xad50
   195a0:	movt	r0, #1
   195a4:	bl	1281c <puts@plt>
   195a8:	movw	r0, #44448	; 0xada0
   195ac:	movt	r0, #1
   195b0:	bl	1281c <puts@plt>
   195b4:	movw	r0, #44480	; 0xadc0
   195b8:	movt	r0, #1
   195bc:	bl	1281c <puts@plt>
   195c0:	movw	r0, #44528	; 0xadf0
   195c4:	movt	r0, #1
   195c8:	bl	1281c <puts@plt>
   195cc:	movw	r0, #45248	; 0xb0c0
   195d0:	movt	r0, #1
   195d4:	bl	1281c <puts@plt>
   195d8:	movw	r0, #45296	; 0xb0f0
   195dc:	movt	r0, #1
   195e0:	bl	1281c <puts@plt>
   195e4:	movw	r0, #45360	; 0xb130
   195e8:	movt	r0, #1
   195ec:	bl	1281c <puts@plt>
   195f0:	movw	r0, #45392	; 0xb150
   195f4:	movt	r0, #1
   195f8:	bl	1281c <puts@plt>
   195fc:	mov	r0, r6
   19600:	bl	1281c <puts@plt>
   19604:	mov	r0, sl
   19608:	bl	1281c <puts@plt>
   1960c:	mov	r0, r9
   19610:	bl	1281c <puts@plt>
   19614:	mov	r0, r8
   19618:	bl	1281c <puts@plt>
   1961c:	mov	r0, r7
   19620:	bl	1281c <puts@plt>
   19624:	mov	r0, #10
   19628:	bl	12924 <putchar@plt>
   1962c:	movw	r0, #44816	; 0xaf10
   19630:	movt	r0, #1
   19634:	bl	1281c <puts@plt>
   19638:	movw	r0, #44896	; 0xaf60
   1963c:	movt	r0, #1
   19640:	bl	1281c <puts@plt>
   19644:	movw	r0, #44976	; 0xafb0
   19648:	movt	r0, #1
   1964c:	bl	1281c <puts@plt>
   19650:	movw	r0, #45056	; 0xb000
   19654:	movt	r0, #1
   19658:	bl	1281c <puts@plt>
   1965c:	movw	r0, #45104	; 0xb030
   19660:	movt	r0, #1
   19664:	bl	1281c <puts@plt>
   19668:	movw	r0, #45136	; 0xb050
   1966c:	movt	r0, #1
   19670:	bl	1281c <puts@plt>
   19674:	movw	r0, #45184	; 0xb080
   19678:	movt	r0, #1
   1967c:	bl	1281c <puts@plt>
   19680:	movw	r0, #45248	; 0xb0c0
   19684:	movt	r0, #1
   19688:	bl	1281c <puts@plt>
   1968c:	movw	r0, #45296	; 0xb0f0
   19690:	movt	r0, #1
   19694:	bl	1281c <puts@plt>
   19698:	movw	r0, #45360	; 0xb130
   1969c:	movt	r0, #1
   196a0:	bl	1281c <puts@plt>
   196a4:	movw	r0, #45392	; 0xb150
   196a8:	movt	r0, #1
   196ac:	bl	1281c <puts@plt>
   196b0:	mov	r0, r6
   196b4:	bl	1281c <puts@plt>
   196b8:	movw	r0, #45552	; 0xb1f0
   196bc:	movt	r0, #1
   196c0:	bl	1281c <puts@plt>
   196c4:	movw	r0, #45584	; 0xb210
   196c8:	movt	r0, #1
   196cc:	bl	1281c <puts@plt>
   196d0:	movw	r0, #45664	; 0xb260
   196d4:	movt	r0, #1
   196d8:	bl	1281c <puts@plt>
   196dc:	movw	r0, #45744	; 0xb2b0
   196e0:	movt	r0, #1
   196e4:	bl	1281c <puts@plt>
   196e8:	movw	r0, #45808	; 0xb2f0
   196ec:	movt	r0, #1
   196f0:	bl	1281c <puts@plt>
   196f4:	movw	r0, #45888	; 0xb340
   196f8:	movt	r0, #1
   196fc:	bl	1281c <puts@plt>
   19700:	mov	r0, #10
   19704:	bl	12924 <putchar@plt>
   19708:	movw	r0, #45952	; 0xb380
   1970c:	movt	r0, #1
   19710:	bl	1281c <puts@plt>
   19714:	movw	r0, #45984	; 0xb3a0
   19718:	movt	r0, #1
   1971c:	bl	1281c <puts@plt>
   19720:	mov	r0, #10
   19724:	bl	12924 <putchar@plt>
   19728:	movw	r0, #46016	; 0xb3c0
   1972c:	movt	r0, #1
   19730:	bl	1281c <puts@plt>
   19734:	movw	r0, #46048	; 0xb3e0
   19738:	movt	r0, #1
   1973c:	bl	1281c <puts@plt>
   19740:	mov	r0, #10
   19744:	bl	12924 <putchar@plt>
   19748:	movw	r0, #46112	; 0xb420
   1974c:	movt	r0, #1
   19750:	bl	1281c <puts@plt>
   19754:	movw	r0, #46192	; 0xb470
   19758:	movt	r0, #1
   1975c:	bl	1281c <puts@plt>
   19760:	movw	r0, #46272	; 0xb4c0
   19764:	movt	r0, #1
   19768:	bl	1281c <puts@plt>
   1976c:	movw	r0, #46320	; 0xb4f0
   19770:	movt	r0, #1
   19774:	bl	1281c <puts@plt>
   19778:	movw	r0, #46400	; 0xb540
   1977c:	movt	r0, #1
   19780:	bl	1281c <puts@plt>
   19784:	movw	r0, #46480	; 0xb590
   19788:	movt	r0, #1
   1978c:	bl	1281c <puts@plt>
   19790:	movw	r0, #46544	; 0xb5d0
   19794:	movt	r0, #1
   19798:	bl	1281c <puts@plt>
   1979c:	mov	r0, #10
   197a0:	sub	sp, fp, #28
   197a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   197a8:	b	12924 <putchar@plt>
   197ac:	push	{fp, lr}
   197b0:	mov	fp, sp
   197b4:	bl	12a5c <coda_get_libcoda_version@plt>
   197b8:	mov	r1, r0
   197bc:	movw	r0, #41864	; 0xa388
   197c0:	movt	r0, #1
   197c4:	bl	12690 <printf@plt>
   197c8:	movw	r0, #46608	; 0xb610
   197cc:	movt	r0, #1
   197d0:	bl	1281c <puts@plt>
   197d4:	mov	r0, #10
   197d8:	pop	{fp, lr}
   197dc:	b	12924 <putchar@plt>
   197e0:	cmp	r3, #0
   197e4:	cmpeq	r2, #0
   197e8:	bne	1980c <main@@Base+0x17fc>
   197ec:	cmp	r1, #0
   197f0:	movlt	r1, #-2147483648	; 0x80000000
   197f4:	movlt	r0, #0
   197f8:	blt	19808 <main@@Base+0x17f8>
   197fc:	cmpeq	r0, #0
   19800:	mvnne	r1, #-2147483648	; 0x80000000
   19804:	mvnne	r0, #0
   19808:	b	198b4 <main@@Base+0x18a4>
   1980c:	sub	sp, sp, #8
   19810:	push	{sp, lr}
   19814:	cmp	r1, #0
   19818:	blt	19838 <main@@Base+0x1828>
   1981c:	cmp	r3, #0
   19820:	blt	1986c <main@@Base+0x185c>
   19824:	bl	198c4 <main@@Base+0x18b4>
   19828:	ldr	lr, [sp, #4]
   1982c:	add	sp, sp, #8
   19830:	pop	{r2, r3}
   19834:	bx	lr
   19838:	rsbs	r0, r0, #0
   1983c:	sbc	r1, r1, r1, lsl #1
   19840:	cmp	r3, #0
   19844:	blt	19890 <main@@Base+0x1880>
   19848:	bl	198c4 <main@@Base+0x18b4>
   1984c:	ldr	lr, [sp, #4]
   19850:	add	sp, sp, #8
   19854:	pop	{r2, r3}
   19858:	rsbs	r0, r0, #0
   1985c:	sbc	r1, r1, r1, lsl #1
   19860:	rsbs	r2, r2, #0
   19864:	sbc	r3, r3, r3, lsl #1
   19868:	bx	lr
   1986c:	rsbs	r2, r2, #0
   19870:	sbc	r3, r3, r3, lsl #1
   19874:	bl	198c4 <main@@Base+0x18b4>
   19878:	ldr	lr, [sp, #4]
   1987c:	add	sp, sp, #8
   19880:	pop	{r2, r3}
   19884:	rsbs	r0, r0, #0
   19888:	sbc	r1, r1, r1, lsl #1
   1988c:	bx	lr
   19890:	rsbs	r2, r2, #0
   19894:	sbc	r3, r3, r3, lsl #1
   19898:	bl	198c4 <main@@Base+0x18b4>
   1989c:	ldr	lr, [sp, #4]
   198a0:	add	sp, sp, #8
   198a4:	pop	{r2, r3}
   198a8:	rsbs	r2, r2, #0
   198ac:	sbc	r3, r3, r3, lsl #1
   198b0:	bx	lr
   198b4:	push	{r1, lr}
   198b8:	mov	r0, #8
   198bc:	bl	12648 <raise@plt>
   198c0:	pop	{r1, pc}
   198c4:	cmp	r1, r3
   198c8:	cmpeq	r0, r2
   198cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   198d0:	mov	r4, r0
   198d4:	movcc	r0, #0
   198d8:	mov	r5, r1
   198dc:	ldr	lr, [sp, #36]	; 0x24
   198e0:	movcc	r1, r0
   198e4:	bcc	199e0 <main@@Base+0x19d0>
   198e8:	cmp	r3, #0
   198ec:	clzeq	ip, r2
   198f0:	clzne	ip, r3
   198f4:	addeq	ip, ip, #32
   198f8:	cmp	r5, #0
   198fc:	clzeq	r1, r4
   19900:	addeq	r1, r1, #32
   19904:	clzne	r1, r5
   19908:	sub	ip, ip, r1
   1990c:	sub	sl, ip, #32
   19910:	lsl	r9, r3, ip
   19914:	rsb	fp, ip, #32
   19918:	orr	r9, r9, r2, lsl sl
   1991c:	orr	r9, r9, r2, lsr fp
   19920:	lsl	r8, r2, ip
   19924:	cmp	r5, r9
   19928:	cmpeq	r4, r8
   1992c:	movcc	r0, #0
   19930:	movcc	r1, r0
   19934:	bcc	19950 <main@@Base+0x1940>
   19938:	mov	r0, #1
   1993c:	subs	r4, r4, r8
   19940:	lsl	r1, r0, sl
   19944:	orr	r1, r1, r0, lsr fp
   19948:	lsl	r0, r0, ip
   1994c:	sbc	r5, r5, r9
   19950:	cmp	ip, #0
   19954:	beq	199e0 <main@@Base+0x19d0>
   19958:	lsr	r6, r8, #1
   1995c:	orr	r6, r6, r9, lsl #31
   19960:	lsr	r7, r9, #1
   19964:	mov	r2, ip
   19968:	b	1998c <main@@Base+0x197c>
   1996c:	subs	r3, r4, r6
   19970:	sbc	r8, r5, r7
   19974:	adds	r3, r3, r3
   19978:	adc	r8, r8, r8
   1997c:	adds	r4, r3, #1
   19980:	adc	r5, r8, #0
   19984:	subs	r2, r2, #1
   19988:	beq	199a8 <main@@Base+0x1998>
   1998c:	cmp	r5, r7
   19990:	cmpeq	r4, r6
   19994:	bcs	1996c <main@@Base+0x195c>
   19998:	adds	r4, r4, r4
   1999c:	adc	r5, r5, r5
   199a0:	subs	r2, r2, #1
   199a4:	bne	1998c <main@@Base+0x197c>
   199a8:	lsr	r3, r4, ip
   199ac:	orr	r3, r3, r5, lsl fp
   199b0:	lsr	r2, r5, ip
   199b4:	orr	r3, r3, r5, lsr sl
   199b8:	adds	r0, r0, r4
   199bc:	mov	r4, r3
   199c0:	lsl	r3, r2, ip
   199c4:	orr	r3, r3, r4, lsl sl
   199c8:	lsl	ip, r4, ip
   199cc:	orr	r3, r3, r4, lsr fp
   199d0:	adc	r1, r1, r5
   199d4:	subs	r0, r0, ip
   199d8:	mov	r5, r2
   199dc:	sbc	r1, r1, r3
   199e0:	cmp	lr, #0
   199e4:	strdne	r4, [lr]
   199e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000199ec <__libc_csu_init@@Base>:
   199ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   199f0:	mov	r7, r0
   199f4:	ldr	r6, [pc, #72]	; 19a44 <__libc_csu_init@@Base+0x58>
   199f8:	ldr	r5, [pc, #72]	; 19a48 <__libc_csu_init@@Base+0x5c>
   199fc:	add	r6, pc, r6
   19a00:	add	r5, pc, r5
   19a04:	sub	r6, r6, r5
   19a08:	mov	r8, r1
   19a0c:	mov	r9, r2
   19a10:	bl	12604 <coda_cursor_get_byte_size@plt-0x20>
   19a14:	asrs	r6, r6, #2
   19a18:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19a1c:	mov	r4, #0
   19a20:	add	r4, r4, #1
   19a24:	ldr	r3, [r5], #4
   19a28:	mov	r2, r9
   19a2c:	mov	r1, r8
   19a30:	mov	r0, r7
   19a34:	blx	r3
   19a38:	cmp	r6, r4
   19a3c:	bne	19a20 <__libc_csu_init@@Base+0x34>
   19a40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19a44:	strdeq	r2, [r1], -r0
   19a48:	andeq	r2, r1, r8, ror #9

00019a4c <__libc_csu_fini@@Base>:
   19a4c:	bx	lr

Disassembly of section .fini:

00019a50 <.fini>:
   19a50:	push	{r3, lr}
   19a54:	pop	{r3, pc}
