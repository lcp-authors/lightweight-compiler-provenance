
../compcert-repos/prog2/3.1:     file format elf32-littlearm


Disassembly of section .init:

00010a70 <.init>:
   10a70:	push	{r3, lr}
   10a74:	bl	10bc8 <_start@@Base+0x3c>
   10a78:	pop	{r3, pc}

Disassembly of section .plt:

00010a7c <calloc@plt-0x14>:
   10a7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10a80:	ldr	lr, [pc, #4]	; 10a8c <calloc@plt-0x4>
   10a84:	add	lr, pc, lr
   10a88:	ldr	pc, [lr, #8]!
   10a8c:	andeq	r2, r1, r4, ror r5

00010a90 <calloc@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #73728	; 0x12000
   10a98:	ldr	pc, [ip, #1396]!	; 0x574

00010a9c <strstr@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #73728	; 0x12000
   10aa4:	ldr	pc, [ip, #1388]!	; 0x56c

00010aa8 <raise@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #73728	; 0x12000
   10ab0:	ldr	pc, [ip, #1380]!	; 0x564

00010ab4 <strcmp@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #73728	; 0x12000
   10abc:	ldr	pc, [ip, #1372]!	; 0x55c

00010ac0 <printf@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #73728	; 0x12000
   10ac8:	ldr	pc, [ip, #1364]!	; 0x554

00010acc <fopen@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #73728	; 0x12000
   10ad4:	ldr	pc, [ip, #1356]!	; 0x54c

00010ad8 <free@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #73728	; 0x12000
   10ae0:	ldr	pc, [ip, #1348]!	; 0x544

00010ae4 <fgets@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #73728	; 0x12000
   10aec:	ldr	pc, [ip, #1340]!	; 0x53c

00010af0 <time@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #73728	; 0x12000
   10af8:	ldr	pc, [ip, #1332]!	; 0x534

00010afc <realloc@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #73728	; 0x12000
   10b04:	ldr	pc, [ip, #1324]!	; 0x52c

00010b08 <strcat@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #73728	; 0x12000
   10b10:	ldr	pc, [ip, #1316]!	; 0x524

00010b14 <strcpy@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #73728	; 0x12000
   10b1c:	ldr	pc, [ip, #1308]!	; 0x51c

00010b20 <puts@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #73728	; 0x12000
   10b28:	ldr	pc, [ip, #1300]!	; 0x514

00010b2c <malloc@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #73728	; 0x12000
   10b34:	ldr	pc, [ip, #1292]!	; 0x50c

00010b38 <__libc_start_main@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #73728	; 0x12000
   10b40:	ldr	pc, [ip, #1284]!	; 0x504

00010b44 <__gmon_start__@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #73728	; 0x12000
   10b4c:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b50 <strlen@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #73728	; 0x12000
   10b58:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b5c <srand@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #73728	; 0x12000
   10b64:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b68 <rand@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #73728	; 0x12000
   10b70:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b74 <fclose@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #73728	; 0x12000
   10b7c:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b80 <abort@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #73728	; 0x12000
   10b88:	ldr	pc, [ip, #1236]!	; 0x4d4

Disassembly of section .text:

00010b8c <_start@@Base>:
   10b8c:	mov	fp, #0
   10b90:	mov	lr, #0
   10b94:	pop	{r1}		; (ldr r1, [sp], #4)
   10b98:	mov	r2, sp
   10b9c:	push	{r2}		; (str r2, [sp, #-4]!)
   10ba0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ba4:	ldr	ip, [pc, #16]	; 10bbc <_start@@Base+0x30>
   10ba8:	push	{ip}		; (str ip, [sp, #-4]!)
   10bac:	ldr	r0, [pc, #12]	; 10bc0 <_start@@Base+0x34>
   10bb0:	ldr	r3, [pc, #12]	; 10bc4 <_start@@Base+0x38>
   10bb4:	bl	10b38 <__libc_start_main@plt>
   10bb8:	bl	10b80 <abort@plt>
   10bbc:	andeq	r1, r1, r0, lsl #28
   10bc0:			; <UNDEFINED> instruction: 0x00010cb4
   10bc4:	andeq	r1, r1, r0, lsr #27
   10bc8:	ldr	r3, [pc, #20]	; 10be4 <_start@@Base+0x58>
   10bcc:	ldr	r2, [pc, #20]	; 10be8 <_start@@Base+0x5c>
   10bd0:	add	r3, pc, r3
   10bd4:	ldr	r2, [r3, r2]
   10bd8:	cmp	r2, #0
   10bdc:	bxeq	lr
   10be0:	b	10b44 <__gmon_start__@plt>
   10be4:	andeq	r2, r1, r8, lsr #8
   10be8:	andeq	r0, r0, r0, rrx
   10bec:	ldr	r3, [pc, #28]	; 10c10 <_start@@Base+0x84>
   10bf0:	ldr	r0, [pc, #28]	; 10c14 <_start@@Base+0x88>
   10bf4:	sub	r3, r3, r0
   10bf8:	cmp	r3, #6
   10bfc:	bxls	lr
   10c00:	ldr	r3, [pc, #16]	; 10c18 <_start@@Base+0x8c>
   10c04:	cmp	r3, #0
   10c08:	bxeq	lr
   10c0c:	bx	r3
   10c10:	andeq	r3, r2, pc, rrx
   10c14:	andeq	r3, r2, ip, rrx
   10c18:	andeq	r0, r0, r0
   10c1c:	ldr	r1, [pc, #36]	; 10c48 <_start@@Base+0xbc>
   10c20:	ldr	r0, [pc, #36]	; 10c4c <_start@@Base+0xc0>
   10c24:	sub	r1, r1, r0
   10c28:	asr	r1, r1, #2
   10c2c:	add	r1, r1, r1, lsr #31
   10c30:	asrs	r1, r1, #1
   10c34:	bxeq	lr
   10c38:	ldr	r3, [pc, #16]	; 10c50 <_start@@Base+0xc4>
   10c3c:	cmp	r3, #0
   10c40:	bxeq	lr
   10c44:	bx	r3
   10c48:	andeq	r3, r2, ip, rrx
   10c4c:	andeq	r3, r2, ip, rrx
   10c50:	andeq	r0, r0, r0
   10c54:	push	{r4, lr}
   10c58:	ldr	r4, [pc, #24]	; 10c78 <_start@@Base+0xec>
   10c5c:	ldrb	r3, [r4]
   10c60:	cmp	r3, #0
   10c64:	popne	{r4, pc}
   10c68:	bl	10bec <_start@@Base+0x60>
   10c6c:	mov	r3, #1
   10c70:	strb	r3, [r4]
   10c74:	pop	{r4, pc}
   10c78:	andeq	r3, r2, ip, rrx
   10c7c:	ldr	r0, [pc, #40]	; 10cac <_start@@Base+0x120>
   10c80:	ldr	r3, [r0]
   10c84:	cmp	r3, #0
   10c88:	bne	10c90 <_start@@Base+0x104>
   10c8c:	b	10c1c <_start@@Base+0x90>
   10c90:	ldr	r3, [pc, #24]	; 10cb0 <_start@@Base+0x124>
   10c94:	cmp	r3, #0
   10c98:	beq	10c8c <_start@@Base+0x100>
   10c9c:	push	{r4, lr}
   10ca0:	blx	r3
   10ca4:	pop	{r4, lr}
   10ca8:	b	10c1c <_start@@Base+0x90>
   10cac:	andeq	r2, r2, r4, lsl pc
   10cb0:	andeq	r0, r0, r0

00010cb4 <main@@Base>:
   10cb4:	push	{fp, lr}
   10cb8:	add	fp, sp, #4
   10cbc:	sub	sp, sp, #120	; 0x78
   10cc0:	mov	r3, #0
   10cc4:	str	r3, [fp, #-8]
   10cc8:	mov	r3, #0
   10ccc:	str	r3, [fp, #-12]
   10cd0:	bl	1112c <vetor_novo@@Base>
   10cd4:	str	r0, [fp, #-16]
   10cd8:	ldr	r1, [pc, #352]	; 10e40 <main@@Base+0x18c>
   10cdc:	ldr	r0, [pc, #352]	; 10e44 <main@@Base+0x190>
   10ce0:	bl	10acc <fopen@plt>
   10ce4:	str	r0, [fp, #-20]	; 0xffffffec
   10ce8:	b	10d4c <main@@Base+0x98>
   10cec:	sub	r3, fp, #124	; 0x7c
   10cf0:	mov	r0, r3
   10cf4:	bl	10b50 <strlen@plt>
   10cf8:	mov	r3, r0
   10cfc:	sub	r3, r3, #1
   10d00:	sub	r2, fp, #4
   10d04:	add	r3, r2, r3
   10d08:	mov	r2, #0
   10d0c:	strb	r2, [r3, #-120]	; 0xffffff88
   10d10:	sub	r3, fp, #124	; 0x7c
   10d14:	ldr	r2, [fp, #-8]
   10d18:	mov	r1, r3
   10d1c:	ldr	r0, [fp, #-16]
   10d20:	bl	113f8 <vetor_insere@@Base>
   10d24:	mov	r3, r0
   10d28:	cmn	r3, #1
   10d2c:	bne	10d40 <main@@Base+0x8c>
   10d30:	ldr	r0, [pc, #272]	; 10e48 <main@@Base+0x194>
   10d34:	bl	10b20 <puts@plt>
   10d38:	mvn	r3, #0
   10d3c:	b	10e34 <main@@Base+0x180>
   10d40:	ldr	r3, [fp, #-8]
   10d44:	add	r3, r3, #1
   10d48:	str	r3, [fp, #-8]
   10d4c:	sub	r3, fp, #124	; 0x7c
   10d50:	ldr	r2, [fp, #-20]	; 0xffffffec
   10d54:	mov	r1, #100	; 0x64
   10d58:	mov	r0, r3
   10d5c:	bl	10ae4 <fgets@plt>
   10d60:	mov	r3, r0
   10d64:	cmp	r3, #0
   10d68:	bne	10cec <main@@Base+0x38>
   10d6c:	ldr	r1, [fp, #-8]
   10d70:	ldr	r0, [pc, #212]	; 10e4c <main@@Base+0x198>
   10d74:	bl	10ac0 <printf@plt>
   10d78:	ldr	r0, [fp, #-16]
   10d7c:	bl	10e6c <vetor_imprime@@Base>
   10d80:	ldr	r1, [pc, #200]	; 10e50 <main@@Base+0x19c>
   10d84:	ldr	r0, [fp, #-16]
   10d88:	bl	116d0 <vetor_pesquisa@@Base>
   10d8c:	mov	r3, r0
   10d90:	mov	r1, r3
   10d94:	ldr	r0, [pc, #184]	; 10e54 <main@@Base+0x1a0>
   10d98:	bl	10ac0 <printf@plt>
   10d9c:	ldr	r0, [fp, #-16]
   10da0:	bl	1176c <vetor_ordena@@Base>
   10da4:	mov	r3, r0
   10da8:	cmp	r3, #0
   10dac:	bne	10dbc <main@@Base+0x108>
   10db0:	ldr	r0, [fp, #-16]
   10db4:	bl	10e6c <vetor_imprime@@Base>
   10db8:	b	10dc4 <main@@Base+0x110>
   10dbc:	ldr	r0, [pc, #148]	; 10e58 <main@@Base+0x1a4>
   10dc0:	bl	10b20 <puts@plt>
   10dc4:	ldr	r1, [pc, #144]	; 10e5c <main@@Base+0x1a8>
   10dc8:	ldr	r0, [fp, #-16]
   10dcc:	bl	10ee0 <vetor_num_ocorrencias@@Base>
   10dd0:	mov	r3, r0
   10dd4:	mov	r1, r3
   10dd8:	ldr	r0, [pc, #128]	; 10e60 <main@@Base+0x1ac>
   10ddc:	bl	10ac0 <printf@plt>
   10de0:	ldr	r0, [fp, #-16]
   10de4:	bl	10f74 <vetor_remove_repetidas@@Base>
   10de8:	ldr	r3, [fp, #-16]
   10dec:	ldr	r3, [r3]
   10df0:	sub	r3, r3, #1
   10df4:	mov	r1, r3
   10df8:	ldr	r0, [pc, #100]	; 10e64 <main@@Base+0x1b0>
   10dfc:	bl	10ac0 <printf@plt>
   10e00:	ldr	r1, [pc, #96]	; 10e68 <main@@Base+0x1b4>
   10e04:	ldr	r0, [fp, #-16]
   10e08:	bl	1106c <vetor_pesquisa_parcial@@Base>
   10e0c:	str	r0, [fp, #-24]	; 0xffffffe8
   10e10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10e14:	bl	10e6c <vetor_imprime@@Base>
   10e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10e1c:	bl	11190 <vetor_apaga@@Base>
   10e20:	ldr	r0, [fp, #-16]
   10e24:	bl	11190 <vetor_apaga@@Base>
   10e28:	ldr	r0, [fp, #-20]	; 0xffffffec
   10e2c:	bl	10b74 <fclose@plt>
   10e30:	mov	r3, #0
   10e34:	mov	r0, r3
   10e38:	sub	sp, fp, #4
   10e3c:	pop	{fp, pc}
   10e40:	andeq	r1, r1, r0, lsl lr
   10e44:	andeq	r1, r1, r4, lsl lr
   10e48:	andeq	r1, r1, ip, lsr #28
   10e4c:	andeq	r1, r1, ip, asr lr
   10e50:	andeq	r1, r1, r8, ror lr
   10e54:	muleq	r1, ip, lr
   10e58:	andeq	r1, r1, r4, ror #29
   10e5c:	andeq	r1, r1, ip, lsl #30
   10e60:	andeq	r1, r1, r0, lsr #30
   10e64:	andeq	r1, r1, r8, asr pc
   10e68:	muleq	r1, r8, pc	; <UNPREDICTABLE>

00010e6c <vetor_imprime@@Base>:
   10e6c:	push	{fp, lr}
   10e70:	add	fp, sp, #4
   10e74:	sub	sp, sp, #16
   10e78:	str	r0, [fp, #-16]
   10e7c:	ldr	r3, [fp, #-16]
   10e80:	ldr	r3, [r3]
   10e84:	str	r3, [fp, #-12]
   10e88:	mov	r3, #0
   10e8c:	str	r3, [fp, #-8]
   10e90:	b	10ec0 <vetor_imprime@@Base+0x54>
   10e94:	ldr	r1, [fp, #-8]
   10e98:	ldr	r0, [fp, #-16]
   10e9c:	bl	11388 <vetor_elemento@@Base>
   10ea0:	mov	r3, r0
   10ea4:	mov	r2, r3
   10ea8:	ldr	r1, [fp, #-8]
   10eac:	ldr	r0, [pc, #40]	; 10edc <vetor_imprime@@Base+0x70>
   10eb0:	bl	10ac0 <printf@plt>
   10eb4:	ldr	r3, [fp, #-8]
   10eb8:	add	r3, r3, #1
   10ebc:	str	r3, [fp, #-8]
   10ec0:	ldr	r2, [fp, #-8]
   10ec4:	ldr	r3, [fp, #-12]
   10ec8:	cmp	r2, r3
   10ecc:	blt	10e94 <vetor_imprime@@Base+0x28>
   10ed0:	nop			; (mov r0, r0)
   10ed4:	sub	sp, fp, #4
   10ed8:	pop	{fp, pc}
   10edc:	andeq	r1, r1, r0, lsr #31

00010ee0 <vetor_num_ocorrencias@@Base>:
   10ee0:	push	{fp, lr}
   10ee4:	add	fp, sp, #4
   10ee8:	sub	sp, sp, #24
   10eec:	str	r0, [fp, #-24]	; 0xffffffe8
   10ef0:	str	r1, [fp, #-28]	; 0xffffffe4
   10ef4:	mov	r3, #0
   10ef8:	str	r3, [fp, #-8]
   10efc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f00:	ldr	r3, [r3]
   10f04:	str	r3, [fp, #-16]
   10f08:	mov	r3, #0
   10f0c:	str	r3, [fp, #-12]
   10f10:	b	10f54 <vetor_num_ocorrencias@@Base+0x74>
   10f14:	ldr	r1, [fp, #-12]
   10f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f1c:	bl	11388 <vetor_elemento@@Base>
   10f20:	mov	r3, r0
   10f24:	mov	r1, r3
   10f28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10f2c:	bl	10ab4 <strcmp@plt>
   10f30:	mov	r3, r0
   10f34:	cmp	r3, #0
   10f38:	bne	10f48 <vetor_num_ocorrencias@@Base+0x68>
   10f3c:	ldr	r3, [fp, #-8]
   10f40:	add	r3, r3, #1
   10f44:	str	r3, [fp, #-8]
   10f48:	ldr	r3, [fp, #-12]
   10f4c:	add	r3, r3, #1
   10f50:	str	r3, [fp, #-12]
   10f54:	ldr	r2, [fp, #-12]
   10f58:	ldr	r3, [fp, #-16]
   10f5c:	cmp	r2, r3
   10f60:	blt	10f14 <vetor_num_ocorrencias@@Base+0x34>
   10f64:	ldr	r3, [fp, #-8]
   10f68:	mov	r0, r3
   10f6c:	sub	sp, fp, #4
   10f70:	pop	{fp, pc}

00010f74 <vetor_remove_repetidas@@Base>:
   10f74:	push	{fp, lr}
   10f78:	add	fp, sp, #4
   10f7c:	sub	sp, sp, #120	; 0x78
   10f80:	str	r0, [fp, #-120]	; 0xffffff88
   10f84:	mov	r3, #0
   10f88:	str	r3, [fp, #-8]
   10f8c:	b	11048 <vetor_remove_repetidas@@Base+0xd4>
   10f90:	ldr	r1, [fp, #-8]
   10f94:	ldr	r0, [fp, #-120]	; 0xffffff88
   10f98:	bl	11388 <vetor_elemento@@Base>
   10f9c:	mov	r2, r0
   10fa0:	sub	r3, fp, #112	; 0x70
   10fa4:	mov	r1, r2
   10fa8:	mov	r0, r3
   10fac:	bl	10b14 <strcpy@plt>
   10fb0:	ldr	r3, [fp, #-8]
   10fb4:	add	r3, r3, #1
   10fb8:	str	r3, [fp, #-12]
   10fbc:	b	11028 <vetor_remove_repetidas@@Base+0xb4>
   10fc0:	ldr	r1, [fp, #-12]
   10fc4:	ldr	r0, [fp, #-120]	; 0xffffff88
   10fc8:	bl	11388 <vetor_elemento@@Base>
   10fcc:	mov	r2, r0
   10fd0:	sub	r3, fp, #112	; 0x70
   10fd4:	mov	r1, r2
   10fd8:	mov	r0, r3
   10fdc:	bl	10ab4 <strcmp@plt>
   10fe0:	mov	r3, r0
   10fe4:	cmp	r3, #0
   10fe8:	bne	1101c <vetor_remove_repetidas@@Base+0xa8>
   10fec:	ldr	r1, [fp, #-12]
   10ff0:	ldr	r0, [fp, #-120]	; 0xffffff88
   10ff4:	bl	115e0 <vetor_remove@@Base>
   10ff8:	mov	r3, r0
   10ffc:	cmn	r3, #1
   11000:	bne	11010 <vetor_remove_repetidas@@Base+0x9c>
   11004:	ldr	r0, [pc, #92]	; 11068 <vetor_remove_repetidas@@Base+0xf4>
   11008:	bl	10b20 <puts@plt>
   1100c:	b	1101c <vetor_remove_repetidas@@Base+0xa8>
   11010:	ldr	r3, [fp, #-12]
   11014:	sub	r3, r3, #1
   11018:	str	r3, [fp, #-12]
   1101c:	ldr	r3, [fp, #-12]
   11020:	add	r3, r3, #1
   11024:	str	r3, [fp, #-12]
   11028:	ldr	r3, [fp, #-120]	; 0xffffff88
   1102c:	ldr	r2, [r3]
   11030:	ldr	r3, [fp, #-12]
   11034:	cmp	r2, r3
   11038:	bgt	10fc0 <vetor_remove_repetidas@@Base+0x4c>
   1103c:	ldr	r3, [fp, #-8]
   11040:	add	r3, r3, #1
   11044:	str	r3, [fp, #-8]
   11048:	ldr	r3, [fp, #-120]	; 0xffffff88
   1104c:	ldr	r2, [r3]
   11050:	ldr	r3, [fp, #-8]
   11054:	cmp	r2, r3
   11058:	bgt	10f90 <vetor_remove_repetidas@@Base+0x1c>
   1105c:	nop			; (mov r0, r0)
   11060:	sub	sp, fp, #4
   11064:	pop	{fp, pc}
   11068:			; <UNDEFINED> instruction: 0x00011fb0

0001106c <vetor_pesquisa_parcial@@Base>:
   1106c:	push	{fp, lr}
   11070:	add	fp, sp, #4
   11074:	sub	sp, sp, #24
   11078:	str	r0, [fp, #-24]	; 0xffffffe8
   1107c:	str	r1, [fp, #-28]	; 0xffffffe4
   11080:	bl	1112c <vetor_novo@@Base>
   11084:	str	r0, [fp, #-12]
   11088:	mov	r3, #0
   1108c:	str	r3, [fp, #-16]
   11090:	mov	r3, #0
   11094:	str	r3, [fp, #-8]
   11098:	b	11104 <vetor_pesquisa_parcial@@Base+0x98>
   1109c:	ldr	r1, [fp, #-8]
   110a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   110a4:	bl	11388 <vetor_elemento@@Base>
   110a8:	mov	r3, r0
   110ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   110b0:	mov	r0, r3
   110b4:	bl	10a9c <strstr@plt>
   110b8:	mov	r3, r0
   110bc:	cmp	r3, #0
   110c0:	beq	110f8 <vetor_pesquisa_parcial@@Base+0x8c>
   110c4:	ldr	r1, [fp, #-8]
   110c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   110cc:	bl	11388 <vetor_elemento@@Base>
   110d0:	mov	r3, r0
   110d4:	ldr	r2, [fp, #-16]
   110d8:	mov	r1, r3
   110dc:	ldr	r0, [fp, #-12]
   110e0:	bl	113f8 <vetor_insere@@Base>
   110e4:	mov	r3, r0
   110e8:	cmn	r3, #1
   110ec:	bne	110f8 <vetor_pesquisa_parcial@@Base+0x8c>
   110f0:	ldr	r0, [pc, #48]	; 11128 <vetor_pesquisa_parcial@@Base+0xbc>
   110f4:	bl	10b20 <puts@plt>
   110f8:	ldr	r3, [fp, #-8]
   110fc:	add	r3, r3, #1
   11100:	str	r3, [fp, #-8]
   11104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11108:	ldr	r2, [r3]
   1110c:	ldr	r3, [fp, #-8]
   11110:	cmp	r2, r3
   11114:	bgt	1109c <vetor_pesquisa_parcial@@Base+0x30>
   11118:	ldr	r3, [fp, #-12]
   1111c:	mov	r0, r3
   11120:	sub	sp, fp, #4
   11124:	pop	{fp, pc}
   11128:	ldrdeq	r1, [r1], -ip

0001112c <vetor_novo@@Base>:
   1112c:	push	{fp, lr}
   11130:	add	fp, sp, #4
   11134:	sub	sp, sp, #8
   11138:	mov	r0, #12
   1113c:	bl	10b2c <malloc@plt>
   11140:	mov	r3, r0
   11144:	str	r3, [fp, #-8]
   11148:	ldr	r3, [fp, #-8]
   1114c:	cmp	r3, #0
   11150:	bne	1115c <vetor_novo@@Base+0x30>
   11154:	mov	r3, #0
   11158:	b	11184 <vetor_novo@@Base+0x58>
   1115c:	ldr	r3, [fp, #-8]
   11160:	mov	r2, #0
   11164:	str	r2, [r3]
   11168:	ldr	r3, [fp, #-8]
   1116c:	mov	r2, #0
   11170:	str	r2, [r3, #4]
   11174:	ldr	r3, [fp, #-8]
   11178:	mov	r2, #0
   1117c:	str	r2, [r3, #8]
   11180:	ldr	r3, [fp, #-8]
   11184:	mov	r0, r3
   11188:	sub	sp, fp, #4
   1118c:	pop	{fp, pc}

00011190 <vetor_apaga@@Base>:
   11190:	push	{fp, lr}
   11194:	add	fp, sp, #4
   11198:	sub	sp, sp, #16
   1119c:	str	r0, [fp, #-16]
   111a0:	ldr	r3, [fp, #-16]
   111a4:	cmp	r3, #0
   111a8:	beq	11214 <vetor_apaga@@Base+0x84>
   111ac:	mov	r3, #0
   111b0:	str	r3, [fp, #-8]
   111b4:	b	111e4 <vetor_apaga@@Base+0x54>
   111b8:	ldr	r3, [fp, #-16]
   111bc:	ldr	r2, [r3, #8]
   111c0:	ldr	r3, [fp, #-8]
   111c4:	lsl	r3, r3, #2
   111c8:	add	r3, r2, r3
   111cc:	ldr	r3, [r3]
   111d0:	mov	r0, r3
   111d4:	bl	10ad8 <free@plt>
   111d8:	ldr	r3, [fp, #-8]
   111dc:	add	r3, r3, #1
   111e0:	str	r3, [fp, #-8]
   111e4:	ldr	r3, [fp, #-16]
   111e8:	ldr	r2, [r3]
   111ec:	ldr	r3, [fp, #-8]
   111f0:	cmp	r2, r3
   111f4:	bgt	111b8 <vetor_apaga@@Base+0x28>
   111f8:	ldr	r3, [fp, #-16]
   111fc:	ldr	r3, [r3, #8]
   11200:	mov	r0, r3
   11204:	bl	10ad8 <free@plt>
   11208:	ldr	r0, [fp, #-16]
   1120c:	bl	10ad8 <free@plt>
   11210:	b	11218 <vetor_apaga@@Base+0x88>
   11214:	nop			; (mov r0, r0)
   11218:	sub	sp, fp, #4
   1121c:	pop	{fp, pc}

00011220 <vetor_atribui@@Base>:
   11220:	push	{r4, fp, lr}
   11224:	add	fp, sp, #8
   11228:	sub	sp, sp, #28
   1122c:	str	r0, [fp, #-24]	; 0xffffffe8
   11230:	str	r1, [fp, #-28]	; 0xffffffe4
   11234:	str	r2, [fp, #-32]	; 0xffffffe0
   11238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1123c:	cmp	r3, #0
   11240:	beq	11264 <vetor_atribui@@Base+0x44>
   11244:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11248:	cmp	r3, #0
   1124c:	blt	11264 <vetor_atribui@@Base+0x44>
   11250:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11254:	ldr	r2, [r3]
   11258:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1125c:	cmp	r2, r3
   11260:	bgt	1126c <vetor_atribui@@Base+0x4c>
   11264:	mvn	r3, #0
   11268:	b	11340 <vetor_atribui@@Base+0x120>
   1126c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11270:	bl	10b50 <strlen@plt>
   11274:	str	r0, [fp, #-16]
   11278:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1127c:	ldr	r2, [r3, #8]
   11280:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11284:	lsl	r3, r3, #2
   11288:	add	r3, r2, r3
   1128c:	ldr	r3, [r3]
   11290:	mov	r0, r3
   11294:	bl	10b50 <strlen@plt>
   11298:	mov	r2, r0
   1129c:	ldr	r3, [fp, #-16]
   112a0:	cmp	r2, r3
   112a4:	bcs	11318 <vetor_atribui@@Base+0xf8>
   112a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   112ac:	ldr	r2, [r3, #8]
   112b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   112b4:	lsl	r3, r3, #2
   112b8:	add	r4, r2, r3
   112bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   112c0:	ldr	r2, [r3, #8]
   112c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   112c8:	lsl	r3, r3, #2
   112cc:	add	r3, r2, r3
   112d0:	ldr	r2, [r3]
   112d4:	ldr	r3, [fp, #-16]
   112d8:	add	r3, r3, #1
   112dc:	mov	r1, r3
   112e0:	mov	r0, r2
   112e4:	bl	10afc <realloc@plt>
   112e8:	mov	r3, r0
   112ec:	str	r3, [r4]
   112f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   112f4:	ldr	r2, [r3, #8]
   112f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   112fc:	lsl	r3, r3, #2
   11300:	add	r3, r2, r3
   11304:	ldr	r3, [r3]
   11308:	cmp	r3, #0
   1130c:	bne	11318 <vetor_atribui@@Base+0xf8>
   11310:	mvn	r3, #0
   11314:	b	11340 <vetor_atribui@@Base+0x120>
   11318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1131c:	ldr	r2, [r3, #8]
   11320:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11324:	lsl	r3, r3, #2
   11328:	add	r3, r2, r3
   1132c:	ldr	r3, [r3]
   11330:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11334:	mov	r0, r3
   11338:	bl	10b14 <strcpy@plt>
   1133c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11340:	mov	r0, r3
   11344:	sub	sp, fp, #8
   11348:	pop	{r4, fp, pc}

0001134c <vetor_tamanho@@Base>:
   1134c:	push	{fp}		; (str fp, [sp, #-4]!)
   11350:	add	fp, sp, #0
   11354:	sub	sp, sp, #12
   11358:	str	r0, [fp, #-8]
   1135c:	ldr	r3, [fp, #-8]
   11360:	cmp	r3, #0
   11364:	bne	11370 <vetor_tamanho@@Base+0x24>
   11368:	mvn	r3, #0
   1136c:	b	11378 <vetor_tamanho@@Base+0x2c>
   11370:	ldr	r3, [fp, #-8]
   11374:	ldr	r3, [r3]
   11378:	mov	r0, r3
   1137c:	add	sp, fp, #0
   11380:	pop	{fp}		; (ldr fp, [sp], #4)
   11384:	bx	lr

00011388 <vetor_elemento@@Base>:
   11388:	push	{fp}		; (str fp, [sp, #-4]!)
   1138c:	add	fp, sp, #0
   11390:	sub	sp, sp, #12
   11394:	str	r0, [fp, #-8]
   11398:	str	r1, [fp, #-12]
   1139c:	ldr	r3, [fp, #-8]
   113a0:	cmp	r3, #0
   113a4:	beq	113c8 <vetor_elemento@@Base+0x40>
   113a8:	ldr	r3, [fp, #-12]
   113ac:	cmp	r3, #0
   113b0:	blt	113c8 <vetor_elemento@@Base+0x40>
   113b4:	ldr	r3, [fp, #-8]
   113b8:	ldr	r2, [r3]
   113bc:	ldr	r3, [fp, #-12]
   113c0:	cmp	r2, r3
   113c4:	bgt	113d0 <vetor_elemento@@Base+0x48>
   113c8:	mov	r3, #0
   113cc:	b	113e8 <vetor_elemento@@Base+0x60>
   113d0:	ldr	r3, [fp, #-8]
   113d4:	ldr	r2, [r3, #8]
   113d8:	ldr	r3, [fp, #-12]
   113dc:	lsl	r3, r3, #2
   113e0:	add	r3, r2, r3
   113e4:	ldr	r3, [r3]
   113e8:	mov	r0, r3
   113ec:	add	sp, fp, #0
   113f0:	pop	{fp}		; (ldr fp, [sp], #4)
   113f4:	bx	lr

000113f8 <vetor_insere@@Base>:
   113f8:	push	{r4, fp, lr}
   113fc:	add	fp, sp, #8
   11400:	sub	sp, sp, #28
   11404:	str	r0, [fp, #-24]	; 0xffffffe8
   11408:	str	r1, [fp, #-28]	; 0xffffffe4
   1140c:	str	r2, [fp, #-32]	; 0xffffffe0
   11410:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11414:	cmp	r3, #0
   11418:	beq	1143c <vetor_insere@@Base+0x44>
   1141c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11420:	cmp	r3, #0
   11424:	blt	1143c <vetor_insere@@Base+0x44>
   11428:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1142c:	ldr	r2, [r3]
   11430:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11434:	cmp	r2, r3
   11438:	bge	11444 <vetor_insere@@Base+0x4c>
   1143c:	mvn	r3, #0
   11440:	b	115d4 <vetor_insere@@Base+0x1dc>
   11444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11448:	ldr	r2, [r3]
   1144c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11450:	ldr	r3, [r3, #4]
   11454:	cmp	r2, r3
   11458:	bne	114d4 <vetor_insere@@Base+0xdc>
   1145c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11460:	ldr	r3, [r3, #4]
   11464:	cmp	r3, #0
   11468:	bne	1147c <vetor_insere@@Base+0x84>
   1146c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11470:	mov	r2, #1
   11474:	str	r2, [r3, #4]
   11478:	b	11490 <vetor_insere@@Base+0x98>
   1147c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11480:	ldr	r3, [r3, #4]
   11484:	lsl	r2, r3, #1
   11488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1148c:	str	r2, [r3, #4]
   11490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11494:	ldr	r2, [r3, #8]
   11498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1149c:	ldr	r3, [r3, #4]
   114a0:	lsl	r3, r3, #2
   114a4:	mov	r1, r3
   114a8:	mov	r0, r2
   114ac:	bl	10afc <realloc@plt>
   114b0:	mov	r2, r0
   114b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114b8:	str	r2, [r3, #8]
   114bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114c0:	ldr	r3, [r3, #8]
   114c4:	cmp	r3, #0
   114c8:	bne	114d4 <vetor_insere@@Base+0xdc>
   114cc:	mvn	r3, #0
   114d0:	b	115d4 <vetor_insere@@Base+0x1dc>
   114d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114d8:	ldr	r3, [r3]
   114dc:	sub	r3, r3, #1
   114e0:	str	r3, [fp, #-16]
   114e4:	b	11528 <vetor_insere@@Base+0x130>
   114e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114ec:	ldr	r2, [r3, #8]
   114f0:	ldr	r3, [fp, #-16]
   114f4:	add	r3, r3, #1
   114f8:	lsl	r3, r3, #2
   114fc:	add	r3, r2, r3
   11500:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11504:	ldr	r1, [r2, #8]
   11508:	ldr	r2, [fp, #-16]
   1150c:	lsl	r2, r2, #2
   11510:	add	r2, r1, r2
   11514:	ldr	r2, [r2]
   11518:	str	r2, [r3]
   1151c:	ldr	r3, [fp, #-16]
   11520:	sub	r3, r3, #1
   11524:	str	r3, [fp, #-16]
   11528:	ldr	r2, [fp, #-16]
   1152c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11530:	cmp	r2, r3
   11534:	bge	114e8 <vetor_insere@@Base+0xf0>
   11538:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1153c:	ldr	r2, [r3, #8]
   11540:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11544:	lsl	r3, r3, #2
   11548:	add	r4, r2, r3
   1154c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11550:	bl	10b50 <strlen@plt>
   11554:	mov	r3, r0
   11558:	add	r3, r3, #1
   1155c:	mov	r1, #1
   11560:	mov	r0, r3
   11564:	bl	10a90 <calloc@plt>
   11568:	mov	r3, r0
   1156c:	str	r3, [r4]
   11570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11574:	ldr	r2, [r3, #8]
   11578:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1157c:	lsl	r3, r3, #2
   11580:	add	r3, r2, r3
   11584:	ldr	r3, [r3]
   11588:	cmp	r3, #0
   1158c:	bne	11598 <vetor_insere@@Base+0x1a0>
   11590:	mvn	r3, #0
   11594:	b	115d4 <vetor_insere@@Base+0x1dc>
   11598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1159c:	ldr	r2, [r3, #8]
   115a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   115a4:	lsl	r3, r3, #2
   115a8:	add	r3, r2, r3
   115ac:	ldr	r3, [r3]
   115b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   115b4:	mov	r0, r3
   115b8:	bl	10b14 <strcpy@plt>
   115bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115c0:	ldr	r3, [r3]
   115c4:	add	r2, r3, #1
   115c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115cc:	str	r2, [r3]
   115d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   115d4:	mov	r0, r3
   115d8:	sub	sp, fp, #8
   115dc:	pop	{r4, fp, pc}

000115e0 <vetor_remove@@Base>:
   115e0:	push	{fp, lr}
   115e4:	add	fp, sp, #4
   115e8:	sub	sp, sp, #16
   115ec:	str	r0, [fp, #-16]
   115f0:	str	r1, [fp, #-20]	; 0xffffffec
   115f4:	ldr	r3, [fp, #-16]
   115f8:	cmp	r3, #0
   115fc:	beq	11620 <vetor_remove@@Base+0x40>
   11600:	ldr	r3, [fp, #-20]	; 0xffffffec
   11604:	cmp	r3, #0
   11608:	blt	11620 <vetor_remove@@Base+0x40>
   1160c:	ldr	r3, [fp, #-16]
   11610:	ldr	r2, [r3]
   11614:	ldr	r3, [fp, #-20]	; 0xffffffec
   11618:	cmp	r2, r3
   1161c:	bgt	11628 <vetor_remove@@Base+0x48>
   11620:	mvn	r3, #0
   11624:	b	116c4 <vetor_remove@@Base+0xe4>
   11628:	ldr	r3, [fp, #-16]
   1162c:	ldr	r2, [r3, #8]
   11630:	ldr	r3, [fp, #-20]	; 0xffffffec
   11634:	lsl	r3, r3, #2
   11638:	add	r3, r2, r3
   1163c:	ldr	r3, [r3]
   11640:	mov	r0, r3
   11644:	bl	10ad8 <free@plt>
   11648:	ldr	r3, [fp, #-20]	; 0xffffffec
   1164c:	add	r3, r3, #1
   11650:	str	r3, [fp, #-8]
   11654:	b	11698 <vetor_remove@@Base+0xb8>
   11658:	ldr	r3, [fp, #-16]
   1165c:	ldr	r2, [r3, #8]
   11660:	ldr	r3, [fp, #-8]
   11664:	sub	r3, r3, #-1073741823	; 0xc0000001
   11668:	lsl	r3, r3, #2
   1166c:	add	r3, r2, r3
   11670:	ldr	r2, [fp, #-16]
   11674:	ldr	r1, [r2, #8]
   11678:	ldr	r2, [fp, #-8]
   1167c:	lsl	r2, r2, #2
   11680:	add	r2, r1, r2
   11684:	ldr	r2, [r2]
   11688:	str	r2, [r3]
   1168c:	ldr	r3, [fp, #-8]
   11690:	add	r3, r3, #1
   11694:	str	r3, [fp, #-8]
   11698:	ldr	r3, [fp, #-16]
   1169c:	ldr	r2, [r3]
   116a0:	ldr	r3, [fp, #-8]
   116a4:	cmp	r2, r3
   116a8:	bgt	11658 <vetor_remove@@Base+0x78>
   116ac:	ldr	r3, [fp, #-16]
   116b0:	ldr	r3, [r3]
   116b4:	sub	r2, r3, #1
   116b8:	ldr	r3, [fp, #-16]
   116bc:	str	r2, [r3]
   116c0:	mov	r3, #0
   116c4:	mov	r0, r3
   116c8:	sub	sp, fp, #4
   116cc:	pop	{fp, pc}

000116d0 <vetor_pesquisa@@Base>:
   116d0:	push	{fp, lr}
   116d4:	add	fp, sp, #4
   116d8:	sub	sp, sp, #16
   116dc:	str	r0, [fp, #-16]
   116e0:	str	r1, [fp, #-20]	; 0xffffffec
   116e4:	ldr	r3, [fp, #-16]
   116e8:	cmp	r3, #0
   116ec:	bne	116f8 <vetor_pesquisa@@Base+0x28>
   116f0:	mvn	r3, #0
   116f4:	b	11760 <vetor_pesquisa@@Base+0x90>
   116f8:	mov	r3, #0
   116fc:	str	r3, [fp, #-8]
   11700:	b	11748 <vetor_pesquisa@@Base+0x78>
   11704:	ldr	r3, [fp, #-16]
   11708:	ldr	r2, [r3, #8]
   1170c:	ldr	r3, [fp, #-8]
   11710:	lsl	r3, r3, #2
   11714:	add	r3, r2, r3
   11718:	ldr	r3, [r3]
   1171c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11720:	mov	r0, r3
   11724:	bl	10ab4 <strcmp@plt>
   11728:	mov	r3, r0
   1172c:	cmp	r3, #0
   11730:	bne	1173c <vetor_pesquisa@@Base+0x6c>
   11734:	ldr	r3, [fp, #-8]
   11738:	b	11760 <vetor_pesquisa@@Base+0x90>
   1173c:	ldr	r3, [fp, #-8]
   11740:	add	r3, r3, #1
   11744:	str	r3, [fp, #-8]
   11748:	ldr	r3, [fp, #-16]
   1174c:	ldr	r2, [r3]
   11750:	ldr	r3, [fp, #-8]
   11754:	cmp	r2, r3
   11758:	bgt	11704 <vetor_pesquisa@@Base+0x34>
   1175c:	mvn	r3, #0
   11760:	mov	r0, r3
   11764:	sub	sp, fp, #4
   11768:	pop	{fp, pc}

0001176c <vetor_ordena@@Base>:
   1176c:	push	{fp, lr}
   11770:	add	fp, sp, #4
   11774:	sub	sp, sp, #24
   11778:	str	r0, [fp, #-24]	; 0xffffffe8
   1177c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11780:	cmp	r3, #0
   11784:	bne	11790 <vetor_ordena@@Base+0x24>
   11788:	mvn	r3, #0
   1178c:	b	11884 <vetor_ordena@@Base+0x118>
   11790:	mov	r3, #1
   11794:	str	r3, [fp, #-8]
   11798:	b	1186c <vetor_ordena@@Base+0x100>
   1179c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117a0:	ldr	r2, [r3, #8]
   117a4:	ldr	r3, [fp, #-8]
   117a8:	lsl	r3, r3, #2
   117ac:	add	r3, r2, r3
   117b0:	ldr	r3, [r3]
   117b4:	str	r3, [fp, #-16]
   117b8:	ldr	r3, [fp, #-8]
   117bc:	str	r3, [fp, #-12]
   117c0:	b	11804 <vetor_ordena@@Base+0x98>
   117c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117c8:	ldr	r2, [r3, #8]
   117cc:	ldr	r3, [fp, #-12]
   117d0:	lsl	r3, r3, #2
   117d4:	add	r3, r2, r3
   117d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   117dc:	ldr	r1, [r2, #8]
   117e0:	ldr	r2, [fp, #-12]
   117e4:	sub	r2, r2, #-1073741823	; 0xc0000001
   117e8:	lsl	r2, r2, #2
   117ec:	add	r2, r1, r2
   117f0:	ldr	r2, [r2]
   117f4:	str	r2, [r3]
   117f8:	ldr	r3, [fp, #-12]
   117fc:	sub	r3, r3, #1
   11800:	str	r3, [fp, #-12]
   11804:	ldr	r3, [fp, #-12]
   11808:	cmp	r3, #0
   1180c:	ble	11844 <vetor_ordena@@Base+0xd8>
   11810:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11814:	ldr	r2, [r3, #8]
   11818:	ldr	r3, [fp, #-12]
   1181c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11820:	lsl	r3, r3, #2
   11824:	add	r3, r2, r3
   11828:	ldr	r3, [r3]
   1182c:	mov	r1, r3
   11830:	ldr	r0, [fp, #-16]
   11834:	bl	10ab4 <strcmp@plt>
   11838:	mov	r3, r0
   1183c:	cmp	r3, #0
   11840:	blt	117c4 <vetor_ordena@@Base+0x58>
   11844:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11848:	ldr	r2, [r3, #8]
   1184c:	ldr	r3, [fp, #-12]
   11850:	lsl	r3, r3, #2
   11854:	add	r3, r2, r3
   11858:	ldr	r2, [fp, #-16]
   1185c:	str	r2, [r3]
   11860:	ldr	r3, [fp, #-8]
   11864:	add	r3, r3, #1
   11868:	str	r3, [fp, #-8]
   1186c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11870:	ldr	r2, [r3]
   11874:	ldr	r3, [fp, #-8]
   11878:	cmp	r2, r3
   1187c:	bgt	1179c <vetor_ordena@@Base+0x30>
   11880:	mov	r3, #0
   11884:	mov	r0, r3
   11888:	sub	sp, fp, #4
   1188c:	pop	{fp, pc}

00011890 <vetor_concatena@@Base>:
   11890:	push	{fp, lr}
   11894:	add	fp, sp, #4
   11898:	sub	sp, sp, #16
   1189c:	str	r0, [fp, #-16]
   118a0:	str	r1, [fp, #-20]	; 0xffffffec
   118a4:	ldr	r3, [fp, #-16]
   118a8:	cmp	r3, #0
   118ac:	beq	118bc <vetor_concatena@@Base+0x2c>
   118b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   118b4:	cmp	r3, #0
   118b8:	bne	118c4 <vetor_concatena@@Base+0x34>
   118bc:	mov	r3, #0
   118c0:	b	11958 <vetor_concatena@@Base+0xc8>
   118c4:	bl	1112c <vetor_novo@@Base>
   118c8:	str	r0, [fp, #-8]
   118cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   118d0:	ldr	r3, [r3]
   118d4:	lsl	r3, r3, #2
   118d8:	ldr	r2, [fp, #-16]
   118dc:	ldr	r2, [r2]
   118e0:	add	r3, r3, r2
   118e4:	mov	r2, r3
   118e8:	ldr	r3, [fp, #-8]
   118ec:	str	r2, [r3, #8]
   118f0:	ldr	r3, [fp, #-16]
   118f4:	ldr	r2, [r3, #4]
   118f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   118fc:	ldr	r3, [r3, #4]
   11900:	add	r2, r2, r3
   11904:	ldr	r3, [fp, #-8]
   11908:	str	r2, [r3, #4]
   1190c:	ldr	r3, [fp, #-8]
   11910:	ldr	r3, [r3, #8]
   11914:	ldr	r2, [r3]
   11918:	ldr	r3, [fp, #-16]
   1191c:	ldr	r3, [r3, #8]
   11920:	ldr	r3, [r3]
   11924:	mov	r1, r3
   11928:	mov	r0, r2
   1192c:	bl	10b14 <strcpy@plt>
   11930:	ldr	r3, [fp, #-8]
   11934:	ldr	r3, [r3, #8]
   11938:	ldr	r2, [r3]
   1193c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11940:	ldr	r3, [r3, #8]
   11944:	ldr	r3, [r3]
   11948:	mov	r1, r3
   1194c:	mov	r0, r2
   11950:	bl	10b08 <strcat@plt>
   11954:	ldr	r3, [fp, #-8]
   11958:	mov	r0, r3
   1195c:	sub	sp, fp, #4
   11960:	pop	{fp, pc}

00011964 <vetor_inverte@@Base>:
   11964:	push	{fp, lr}
   11968:	add	fp, sp, #4
   1196c:	sub	sp, sp, #24
   11970:	str	r0, [fp, #-24]	; 0xffffffe8
   11974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11978:	bl	1134c <vetor_tamanho@@Base>
   1197c:	str	r0, [fp, #-16]
   11980:	ldr	r3, [fp, #-16]
   11984:	str	r3, [fp, #-12]
   11988:	ldr	r3, [fp, #-16]
   1198c:	cmp	r3, #0
   11990:	ble	11a40 <vetor_inverte@@Base+0xdc>
   11994:	mov	r3, #0
   11998:	str	r3, [fp, #-8]
   1199c:	b	11a20 <vetor_inverte@@Base+0xbc>
   119a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   119a4:	ldr	r2, [r3, #8]
   119a8:	ldr	r3, [fp, #-8]
   119ac:	lsl	r3, r3, #2
   119b0:	add	r3, r2, r3
   119b4:	ldr	r3, [r3]
   119b8:	str	r3, [fp, #-20]	; 0xffffffec
   119bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   119c0:	ldr	r2, [r3, #8]
   119c4:	ldr	r3, [fp, #-8]
   119c8:	lsl	r3, r3, #2
   119cc:	add	r3, r2, r3
   119d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   119d4:	ldr	r1, [r2, #8]
   119d8:	ldr	r2, [fp, #-12]
   119dc:	lsl	r2, r2, #2
   119e0:	add	r2, r1, r2
   119e4:	ldr	r2, [r2]
   119e8:	str	r2, [r3]
   119ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   119f0:	ldr	r2, [r3, #8]
   119f4:	ldr	r3, [fp, #-12]
   119f8:	lsl	r3, r3, #2
   119fc:	add	r3, r2, r3
   11a00:	ldr	r2, [fp, #-20]	; 0xffffffec
   11a04:	str	r2, [r3]
   11a08:	ldr	r3, [fp, #-12]
   11a0c:	sub	r3, r3, #1
   11a10:	str	r3, [fp, #-12]
   11a14:	ldr	r3, [fp, #-8]
   11a18:	add	r3, r3, #1
   11a1c:	str	r3, [fp, #-8]
   11a20:	ldr	r2, [fp, #-8]
   11a24:	ldr	r3, [fp, #-16]
   11a28:	cmp	r2, r3
   11a2c:	bge	11a40 <vetor_inverte@@Base+0xdc>
   11a30:	ldr	r2, [fp, #-8]
   11a34:	ldr	r3, [fp, #-12]
   11a38:	cmp	r2, r3
   11a3c:	blt	119a0 <vetor_inverte@@Base+0x3c>
   11a40:	mov	r3, #0
   11a44:	mov	r0, r3
   11a48:	sub	sp, fp, #4
   11a4c:	pop	{fp, pc}

00011a50 <vetor_baralha@@Base>:
   11a50:	push	{fp, lr}
   11a54:	add	fp, sp, #4
   11a58:	sub	sp, sp, #32
   11a5c:	str	r0, [fp, #-32]	; 0xffffffe0
   11a60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a64:	ldr	r3, [r3]
   11a68:	str	r3, [fp, #-12]
   11a6c:	bl	1112c <vetor_novo@@Base>
   11a70:	str	r0, [fp, #-16]
   11a74:	sub	r3, fp, #24
   11a78:	mov	r0, r3
   11a7c:	bl	10af0 <time@plt>
   11a80:	mov	r3, r0
   11a84:	mov	r0, r3
   11a88:	bl	10b5c <srand@plt>
   11a8c:	mov	r3, #0
   11a90:	str	r3, [fp, #-8]
   11a94:	b	11b30 <vetor_baralha@@Base+0xe0>
   11a98:	bl	10b68 <rand@plt>
   11a9c:	mov	r2, r0
   11aa0:	ldr	r3, [fp, #-12]
   11aa4:	add	r3, r3, #1
   11aa8:	mov	r1, r3
   11aac:	mov	r0, r2
   11ab0:	bl	11d70 <vetor_baralha@@Base+0x320>
   11ab4:	mov	r3, r1
   11ab8:	str	r3, [fp, #-20]	; 0xffffffec
   11abc:	ldr	r3, [fp, #-16]
   11ac0:	ldr	r2, [r3, #8]
   11ac4:	ldr	r3, [fp, #-8]
   11ac8:	lsl	r3, r3, #2
   11acc:	add	r3, r2, r3
   11ad0:	ldr	r3, [r3]
   11ad4:	str	r3, [fp, #-28]	; 0xffffffe4
   11ad8:	ldr	r3, [fp, #-16]
   11adc:	ldr	r2, [r3, #8]
   11ae0:	ldr	r3, [fp, #-8]
   11ae4:	lsl	r3, r3, #2
   11ae8:	add	r3, r2, r3
   11aec:	ldr	r2, [fp, #-16]
   11af0:	ldr	r1, [r2, #8]
   11af4:	ldr	r2, [fp, #-20]	; 0xffffffec
   11af8:	lsl	r2, r2, #2
   11afc:	add	r2, r1, r2
   11b00:	ldr	r2, [r2]
   11b04:	str	r2, [r3]
   11b08:	ldr	r3, [fp, #-16]
   11b0c:	ldr	r2, [r3, #8]
   11b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b14:	lsl	r3, r3, #2
   11b18:	add	r3, r2, r3
   11b1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11b20:	str	r2, [r3]
   11b24:	ldr	r3, [fp, #-8]
   11b28:	add	r3, r3, #1
   11b2c:	str	r3, [fp, #-8]
   11b30:	ldr	r2, [fp, #-8]
   11b34:	ldr	r3, [fp, #-12]
   11b38:	cmp	r2, r3
   11b3c:	blt	11a98 <vetor_baralha@@Base+0x48>
   11b40:	ldr	r3, [fp, #-16]
   11b44:	mov	r0, r3
   11b48:	sub	sp, fp, #4
   11b4c:	pop	{fp, pc}
   11b50:	cmp	r1, #0
   11b54:	beq	11d60 <vetor_baralha@@Base+0x310>
   11b58:	eor	ip, r0, r1
   11b5c:	rsbmi	r1, r1, #0
   11b60:	subs	r2, r1, #1
   11b64:	beq	11d2c <vetor_baralha@@Base+0x2dc>
   11b68:	movs	r3, r0
   11b6c:	rsbmi	r3, r0, #0
   11b70:	cmp	r3, r1
   11b74:	bls	11d38 <vetor_baralha@@Base+0x2e8>
   11b78:	tst	r1, r2
   11b7c:	beq	11d48 <vetor_baralha@@Base+0x2f8>
   11b80:	clz	r2, r3
   11b84:	clz	r0, r1
   11b88:	sub	r2, r0, r2
   11b8c:	rsbs	r2, r2, #31
   11b90:	addne	r2, r2, r2, lsl #1
   11b94:	mov	r0, #0
   11b98:	addne	pc, pc, r2, lsl #2
   11b9c:	nop			; (mov r0, r0)
   11ba0:	cmp	r3, r1, lsl #31
   11ba4:	adc	r0, r0, r0
   11ba8:	subcs	r3, r3, r1, lsl #31
   11bac:	cmp	r3, r1, lsl #30
   11bb0:	adc	r0, r0, r0
   11bb4:	subcs	r3, r3, r1, lsl #30
   11bb8:	cmp	r3, r1, lsl #29
   11bbc:	adc	r0, r0, r0
   11bc0:	subcs	r3, r3, r1, lsl #29
   11bc4:	cmp	r3, r1, lsl #28
   11bc8:	adc	r0, r0, r0
   11bcc:	subcs	r3, r3, r1, lsl #28
   11bd0:	cmp	r3, r1, lsl #27
   11bd4:	adc	r0, r0, r0
   11bd8:	subcs	r3, r3, r1, lsl #27
   11bdc:	cmp	r3, r1, lsl #26
   11be0:	adc	r0, r0, r0
   11be4:	subcs	r3, r3, r1, lsl #26
   11be8:	cmp	r3, r1, lsl #25
   11bec:	adc	r0, r0, r0
   11bf0:	subcs	r3, r3, r1, lsl #25
   11bf4:	cmp	r3, r1, lsl #24
   11bf8:	adc	r0, r0, r0
   11bfc:	subcs	r3, r3, r1, lsl #24
   11c00:	cmp	r3, r1, lsl #23
   11c04:	adc	r0, r0, r0
   11c08:	subcs	r3, r3, r1, lsl #23
   11c0c:	cmp	r3, r1, lsl #22
   11c10:	adc	r0, r0, r0
   11c14:	subcs	r3, r3, r1, lsl #22
   11c18:	cmp	r3, r1, lsl #21
   11c1c:	adc	r0, r0, r0
   11c20:	subcs	r3, r3, r1, lsl #21
   11c24:	cmp	r3, r1, lsl #20
   11c28:	adc	r0, r0, r0
   11c2c:	subcs	r3, r3, r1, lsl #20
   11c30:	cmp	r3, r1, lsl #19
   11c34:	adc	r0, r0, r0
   11c38:	subcs	r3, r3, r1, lsl #19
   11c3c:	cmp	r3, r1, lsl #18
   11c40:	adc	r0, r0, r0
   11c44:	subcs	r3, r3, r1, lsl #18
   11c48:	cmp	r3, r1, lsl #17
   11c4c:	adc	r0, r0, r0
   11c50:	subcs	r3, r3, r1, lsl #17
   11c54:	cmp	r3, r1, lsl #16
   11c58:	adc	r0, r0, r0
   11c5c:	subcs	r3, r3, r1, lsl #16
   11c60:	cmp	r3, r1, lsl #15
   11c64:	adc	r0, r0, r0
   11c68:	subcs	r3, r3, r1, lsl #15
   11c6c:	cmp	r3, r1, lsl #14
   11c70:	adc	r0, r0, r0
   11c74:	subcs	r3, r3, r1, lsl #14
   11c78:	cmp	r3, r1, lsl #13
   11c7c:	adc	r0, r0, r0
   11c80:	subcs	r3, r3, r1, lsl #13
   11c84:	cmp	r3, r1, lsl #12
   11c88:	adc	r0, r0, r0
   11c8c:	subcs	r3, r3, r1, lsl #12
   11c90:	cmp	r3, r1, lsl #11
   11c94:	adc	r0, r0, r0
   11c98:	subcs	r3, r3, r1, lsl #11
   11c9c:	cmp	r3, r1, lsl #10
   11ca0:	adc	r0, r0, r0
   11ca4:	subcs	r3, r3, r1, lsl #10
   11ca8:	cmp	r3, r1, lsl #9
   11cac:	adc	r0, r0, r0
   11cb0:	subcs	r3, r3, r1, lsl #9
   11cb4:	cmp	r3, r1, lsl #8
   11cb8:	adc	r0, r0, r0
   11cbc:	subcs	r3, r3, r1, lsl #8
   11cc0:	cmp	r3, r1, lsl #7
   11cc4:	adc	r0, r0, r0
   11cc8:	subcs	r3, r3, r1, lsl #7
   11ccc:	cmp	r3, r1, lsl #6
   11cd0:	adc	r0, r0, r0
   11cd4:	subcs	r3, r3, r1, lsl #6
   11cd8:	cmp	r3, r1, lsl #5
   11cdc:	adc	r0, r0, r0
   11ce0:	subcs	r3, r3, r1, lsl #5
   11ce4:	cmp	r3, r1, lsl #4
   11ce8:	adc	r0, r0, r0
   11cec:	subcs	r3, r3, r1, lsl #4
   11cf0:	cmp	r3, r1, lsl #3
   11cf4:	adc	r0, r0, r0
   11cf8:	subcs	r3, r3, r1, lsl #3
   11cfc:	cmp	r3, r1, lsl #2
   11d00:	adc	r0, r0, r0
   11d04:	subcs	r3, r3, r1, lsl #2
   11d08:	cmp	r3, r1, lsl #1
   11d0c:	adc	r0, r0, r0
   11d10:	subcs	r3, r3, r1, lsl #1
   11d14:	cmp	r3, r1
   11d18:	adc	r0, r0, r0
   11d1c:	subcs	r3, r3, r1
   11d20:	cmp	ip, #0
   11d24:	rsbmi	r0, r0, #0
   11d28:	bx	lr
   11d2c:	teq	ip, r0
   11d30:	rsbmi	r0, r0, #0
   11d34:	bx	lr
   11d38:	movcc	r0, #0
   11d3c:	asreq	r0, ip, #31
   11d40:	orreq	r0, r0, #1
   11d44:	bx	lr
   11d48:	clz	r2, r1
   11d4c:	rsb	r2, r2, #31
   11d50:	cmp	ip, #0
   11d54:	lsr	r0, r3, r2
   11d58:	rsbmi	r0, r0, #0
   11d5c:	bx	lr
   11d60:	cmp	r0, #0
   11d64:	mvngt	r0, #-2147483648	; 0x80000000
   11d68:	movlt	r0, #-2147483648	; 0x80000000
   11d6c:	b	11d90 <vetor_baralha@@Base+0x340>
   11d70:	cmp	r1, #0
   11d74:	beq	11d60 <vetor_baralha@@Base+0x310>
   11d78:	push	{r0, r1, lr}
   11d7c:	bl	11b58 <vetor_baralha@@Base+0x108>
   11d80:	pop	{r1, r2, lr}
   11d84:	mul	r3, r2, r0
   11d88:	sub	r1, r1, r3
   11d8c:	bx	lr
   11d90:	push	{r1, lr}
   11d94:	mov	r0, #8
   11d98:	bl	10aa8 <raise@plt>
   11d9c:	pop	{r1, pc}

00011da0 <__libc_csu_init@@Base>:
   11da0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11da4:	mov	r7, r0
   11da8:	ldr	r6, [pc, #72]	; 11df8 <__libc_csu_init@@Base+0x58>
   11dac:	ldr	r5, [pc, #72]	; 11dfc <__libc_csu_init@@Base+0x5c>
   11db0:	add	r6, pc, r6
   11db4:	add	r5, pc, r5
   11db8:	sub	r6, r6, r5
   11dbc:	mov	r8, r1
   11dc0:	mov	r9, r2
   11dc4:	bl	10a70 <calloc@plt-0x20>
   11dc8:	asrs	r6, r6, #2
   11dcc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11dd0:	mov	r4, #0
   11dd4:	add	r4, r4, #1
   11dd8:	ldr	r3, [r5], #4
   11ddc:	mov	r2, r9
   11de0:	mov	r1, r8
   11de4:	mov	r0, r7
   11de8:	blx	r3
   11dec:	cmp	r6, r4
   11df0:	bne	11dd4 <__libc_csu_init@@Base+0x34>
   11df4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11df8:	andeq	r1, r1, r8, asr r1
   11dfc:	andeq	r1, r1, r0, asr r1

00011e00 <__libc_csu_fini@@Base>:
   11e00:	bx	lr

Disassembly of section .fini:

00011e04 <.fini>:
   11e04:	push	{r3, lr}
   11e08:	pop	{r3, pc}
