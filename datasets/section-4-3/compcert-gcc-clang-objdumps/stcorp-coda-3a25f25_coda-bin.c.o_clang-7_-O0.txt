
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-bin.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_bin_product_open>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #80	; 0x50
   c:	str	r0, [fp, #-8]
  10:	ldr	r0, [fp, #-8]
  14:	mov	r1, #0
  18:	str	r1, [r0, #52]	; 0x34
  1c:	ldr	r0, [fp, #-8]
  20:	mvn	r1, #0
  24:	str	r1, [r0, #56]	; 0x38
  28:	ldr	r0, [pc, #524]	; 23c <coda_bin_product_open+0x23c>
  2c:	ldr	r0, [pc, r0]
  30:	str	r0, [fp, #-20]	; 0xffffffec
  34:	bl	0 <__aeabi_read_tp>
  38:	ldr	r1, [fp, #-20]	; 0xffffffec
  3c:	ldr	r0, [r0, r1]
  40:	cmp	r0, #0
  44:	beq	1b0 <coda_bin_product_open+0x1b0>
  48:	ldr	r0, [fp, #-8]
  4c:	ldr	r1, [r0, #8]
  50:	ldr	r0, [r0, #12]
  54:	subs	r1, r1, #1
  58:	sbcs	r0, r0, #0
  5c:	str	r1, [fp, #-24]	; 0xffffffe8
  60:	str	r0, [fp, #-28]	; 0xffffffe4
  64:	blt	1b0 <coda_bin_product_open+0x1b0>
  68:	b	6c <coda_bin_product_open+0x6c>
  6c:	ldr	r0, [fp, #-8]
  70:	movw	r1, #1
  74:	str	r1, [r0, #52]	; 0x34
  78:	ldr	r0, [fp, #-8]
  7c:	ldr	r0, [r0]
  80:	movw	r1, #0
  84:	bl	0 <open>
  88:	str	r0, [fp, #-12]
  8c:	ldr	r0, [fp, #-12]
  90:	cmp	r0, #0
  94:	bge	dc <coda_bin_product_open+0xdc>
  98:	ldr	r0, [fp, #-8]
  9c:	ldr	r2, [r0]
  a0:	str	r2, [fp, #-32]	; 0xffffffe0
  a4:	bl	0 <__errno_location>
  a8:	ldr	r0, [r0]
  ac:	bl	0 <strerror>
  b0:	mvn	r2, #20
  b4:	str	r0, [fp, #-36]	; 0xffffffdc
  b8:	mov	r0, r2
  bc:	movw	r1, #0
  c0:	movt	r1, #0
  c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
  c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
  cc:	bl	0 <coda_set_error>
  d0:	mvn	r0, #0
  d4:	str	r0, [fp, #-4]
  d8:	b	230 <coda_bin_product_open+0x230>
  dc:	ldr	r0, [fp, #-8]
  e0:	ldr	r1, [r0, #8]
  e4:	ldr	r0, [fp, #-12]
  e8:	movw	r2, #0
  ec:	str	r0, [sp, #40]	; 0x28
  f0:	mov	r0, r2
  f4:	movw	r3, #1
  f8:	str	r2, [sp, #36]	; 0x24
  fc:	mov	r2, r3
 100:	ldr	ip, [sp, #40]	; 0x28
 104:	str	ip, [sp]
 108:	ldr	lr, [sp, #36]	; 0x24
 10c:	str	lr, [sp, #4]
 110:	bl	0 <mmap>
 114:	ldr	r1, [fp, #-8]
 118:	str	r0, [r1, #48]	; 0x30
 11c:	ldr	r0, [fp, #-8]
 120:	ldr	r0, [r0, #48]	; 0x30
 124:	mvn	r1, #0
 128:	cmp	r0, r1
 12c:	bne	18c <coda_bin_product_open+0x18c>
 130:	ldr	r0, [fp, #-8]
 134:	ldr	r2, [r0]
 138:	str	r2, [sp, #32]
 13c:	bl	0 <__errno_location>
 140:	ldr	r0, [r0]
 144:	bl	0 <strerror>
 148:	mvn	r2, #20
 14c:	str	r0, [sp, #28]
 150:	mov	r0, r2
 154:	movw	r1, #0
 158:	movt	r1, #0
 15c:	ldr	r2, [sp, #32]
 160:	ldr	r3, [sp, #28]
 164:	bl	0 <coda_set_error>
 168:	ldr	r0, [fp, #-8]
 16c:	movw	r1, #0
 170:	str	r1, [r0, #48]	; 0x30
 174:	ldr	r0, [fp, #-12]
 178:	bl	0 <close>
 17c:	mvn	r1, #0
 180:	str	r1, [fp, #-4]
 184:	str	r0, [sp, #24]
 188:	b	230 <coda_bin_product_open+0x230>
 18c:	ldr	r0, [fp, #-12]
 190:	bl	0 <close>
 194:	ldr	lr, [fp, #-8]
 198:	ldr	r1, [lr, #8]
 19c:	ldr	r2, [lr, #12]
 1a0:	str	r2, [lr, #44]	; 0x2c
 1a4:	str	r1, [lr, #40]	; 0x28
 1a8:	str	r0, [sp, #20]
 1ac:	b	228 <coda_bin_product_open+0x228>
 1b0:	movw	r0, #0
 1b4:	str	r0, [fp, #-16]
 1b8:	ldr	r0, [fp, #-8]
 1bc:	ldr	r0, [r0]
 1c0:	ldr	r1, [fp, #-16]
 1c4:	bl	0 <open>
 1c8:	ldr	r1, [fp, #-8]
 1cc:	str	r0, [r1, #56]	; 0x38
 1d0:	ldr	r0, [fp, #-8]
 1d4:	ldr	r0, [r0, #56]	; 0x38
 1d8:	cmp	r0, #0
 1dc:	bge	224 <coda_bin_product_open+0x224>
 1e0:	ldr	r0, [fp, #-8]
 1e4:	ldr	r2, [r0]
 1e8:	str	r2, [sp, #16]
 1ec:	bl	0 <__errno_location>
 1f0:	ldr	r0, [r0]
 1f4:	bl	0 <strerror>
 1f8:	mvn	r2, #20
 1fc:	str	r0, [sp, #12]
 200:	mov	r0, r2
 204:	movw	r1, #0
 208:	movt	r1, #0
 20c:	ldr	r2, [sp, #16]
 210:	ldr	r3, [sp, #12]
 214:	bl	0 <coda_set_error>
 218:	mvn	r0, #0
 21c:	str	r0, [fp, #-4]
 220:	b	230 <coda_bin_product_open+0x230>
 224:	b	228 <coda_bin_product_open+0x228>
 228:	movw	r0, #0
 22c:	str	r0, [fp, #-4]
 230:	ldr	r0, [fp, #-4]
 234:	mov	sp, fp
 238:	pop	{fp, pc}
 23c:	.word	0x00000208

00000240 <coda_bin_product_close>:
 240:	push	{fp, lr}
 244:	mov	fp, sp
 248:	sub	sp, sp, #16
 24c:	str	r0, [fp, #-4]
 250:	ldr	r0, [fp, #-4]
 254:	ldr	r0, [r0, #52]	; 0x34
 258:	cmp	r0, #0
 25c:	beq	2a4 <coda_bin_product_close+0x64>
 260:	ldr	r0, [fp, #-4]
 264:	ldr	r0, [r0, #48]	; 0x30
 268:	movw	r1, #0
 26c:	cmp	r0, r1
 270:	beq	294 <coda_bin_product_close+0x54>
 274:	ldr	r0, [fp, #-4]
 278:	ldr	r1, [r0, #8]
 27c:	ldr	r0, [r0, #48]	; 0x30
 280:	bl	0 <munmap>
 284:	ldr	r1, [fp, #-4]
 288:	movw	lr, #0
 28c:	str	lr, [r1, #48]	; 0x30
 290:	str	r0, [sp, #8]
 294:	ldr	r0, [fp, #-4]
 298:	movw	r1, #0
 29c:	str	r1, [r0, #52]	; 0x34
 2a0:	b	2d4 <coda_bin_product_close+0x94>
 2a4:	ldr	r0, [fp, #-4]
 2a8:	ldr	r0, [r0, #56]	; 0x38
 2ac:	cmp	r0, #0
 2b0:	blt	2d0 <coda_bin_product_close+0x90>
 2b4:	ldr	r0, [fp, #-4]
 2b8:	ldr	r0, [r0, #56]	; 0x38
 2bc:	bl	0 <close>
 2c0:	ldr	lr, [fp, #-4]
 2c4:	mvn	r1, #0
 2c8:	str	r1, [lr, #56]	; 0x38
 2cc:	str	r0, [sp, #4]
 2d0:	b	2d4 <coda_bin_product_close+0x94>
 2d4:	movw	r0, #0
 2d8:	mov	sp, fp
 2dc:	pop	{fp, pc}

000002e0 <coda_bin_open>:
 2e0:	push	{fp, lr}
 2e4:	mov	fp, sp
 2e8:	sub	sp, sp, #40	; 0x28
 2ec:	ldr	r1, [fp, #8]
 2f0:	str	r0, [fp, #-8]
 2f4:	str	r3, [fp, #-12]
 2f8:	str	r2, [fp, #-16]
 2fc:	movw	r0, #64	; 0x40
 300:	str	r1, [sp, #16]
 304:	bl	0 <malloc>
 308:	str	r0, [sp, #20]
 30c:	ldr	r0, [sp, #20]
 310:	movw	r1, #0
 314:	cmp	r0, r1
 318:	bne	34c <coda_bin_open+0x6c>
 31c:	mvn	r0, #0
 320:	movw	r1, #0
 324:	movt	r1, #0
 328:	movw	r2, #64	; 0x40
 32c:	movw	r3, #0
 330:	movt	r3, #0
 334:	movw	ip, #241	; 0xf1
 338:	str	ip, [sp]
 33c:	bl	0 <coda_set_error>
 340:	mvn	r0, #0
 344:	str	r0, [fp, #-4]
 348:	b	490 <coda_bin_open+0x1b0>
 34c:	ldr	r0, [sp, #20]
 350:	mov	r1, #0
 354:	str	r1, [r0]
 358:	ldr	r0, [fp, #-16]
 35c:	ldr	r2, [fp, #-12]
 360:	ldr	r3, [sp, #20]
 364:	str	r2, [r3, #12]
 368:	str	r0, [r3, #8]
 36c:	ldr	r0, [sp, #20]
 370:	mov	r2, #1
 374:	str	r2, [r0, #16]
 378:	ldr	r0, [sp, #20]
 37c:	str	r1, [r0, #20]
 380:	ldr	r0, [sp, #20]
 384:	str	r1, [r0, #24]
 388:	ldr	r0, [sp, #20]
 38c:	str	r1, [r0, #28]
 390:	ldr	r0, [sp, #20]
 394:	str	r1, [r0, #32]
 398:	ldr	r0, [sp, #20]
 39c:	str	r1, [r0, #44]	; 0x2c
 3a0:	str	r1, [r0, #40]	; 0x28
 3a4:	ldr	r0, [sp, #20]
 3a8:	movw	r1, #0
 3ac:	str	r1, [r0, #48]	; 0x30
 3b0:	ldr	r0, [sp, #20]
 3b4:	str	r1, [r0, #52]	; 0x34
 3b8:	ldr	r0, [sp, #20]
 3bc:	mvn	r1, #0
 3c0:	str	r1, [r0, #56]	; 0x38
 3c4:	bl	0 <coda_type_raw_file_singleton>
 3c8:	ldr	r1, [sp, #20]
 3cc:	str	r0, [r1, #20]
 3d0:	ldr	r0, [sp, #20]
 3d4:	ldr	r0, [r0, #20]
 3d8:	movw	r1, #0
 3dc:	cmp	r0, r1
 3e0:	bne	3fc <coda_bin_open+0x11c>
 3e4:	ldr	r0, [sp, #20]
 3e8:	bl	49c <coda_bin_close>
 3ec:	mvn	lr, #0
 3f0:	str	lr, [fp, #-4]
 3f4:	str	r0, [sp, #12]
 3f8:	b	490 <coda_bin_open+0x1b0>
 3fc:	ldr	r0, [fp, #-8]
 400:	bl	0 <strdup>
 404:	ldr	lr, [sp, #20]
 408:	str	r0, [lr]
 40c:	ldr	r0, [sp, #20]
 410:	ldr	r0, [r0]
 414:	movw	lr, #0
 418:	cmp	r0, lr
 41c:	bne	454 <coda_bin_open+0x174>
 420:	mvn	r0, #0
 424:	movw	r1, #0
 428:	movt	r1, #0
 42c:	movw	r2, #0
 430:	movt	r2, #0
 434:	movw	r3, #268	; 0x10c
 438:	bl	0 <coda_set_error>
 43c:	ldr	r0, [sp, #20]
 440:	bl	49c <coda_bin_close>
 444:	mvn	r1, #0
 448:	str	r1, [fp, #-4]
 44c:	str	r0, [sp, #8]
 450:	b	490 <coda_bin_open+0x1b0>
 454:	ldr	r0, [sp, #20]
 458:	bl	0 <coda_bin_product_open>
 45c:	cmp	r0, #0
 460:	beq	47c <coda_bin_open+0x19c>
 464:	ldr	r0, [sp, #20]
 468:	bl	49c <coda_bin_close>
 46c:	mvn	lr, #0
 470:	str	lr, [fp, #-4]
 474:	str	r0, [sp, #4]
 478:	b	490 <coda_bin_open+0x1b0>
 47c:	ldr	r0, [sp, #20]
 480:	ldr	r1, [fp, #8]
 484:	str	r0, [r1]
 488:	movw	r0, #0
 48c:	str	r0, [fp, #-4]
 490:	ldr	r0, [fp, #-4]
 494:	mov	sp, fp
 498:	pop	{fp, pc}

0000049c <coda_bin_close>:
 49c:	push	{fp, lr}
 4a0:	mov	fp, sp
 4a4:	sub	sp, sp, #16
 4a8:	str	r0, [sp, #8]
 4ac:	ldr	r0, [sp, #8]
 4b0:	str	r0, [sp, #4]
 4b4:	ldr	r0, [sp, #4]
 4b8:	bl	240 <coda_bin_product_close>
 4bc:	cmp	r0, #0
 4c0:	beq	4d0 <coda_bin_close+0x34>
 4c4:	mvn	r0, #0
 4c8:	str	r0, [fp, #-4]
 4cc:	b	500 <coda_bin_close+0x64>
 4d0:	ldr	r0, [sp, #4]
 4d4:	ldr	r0, [r0]
 4d8:	movw	r1, #0
 4dc:	cmp	r0, r1
 4e0:	beq	4f0 <coda_bin_close+0x54>
 4e4:	ldr	r0, [sp, #4]
 4e8:	ldr	r0, [r0]
 4ec:	bl	0 <free>
 4f0:	ldr	r0, [sp, #4]
 4f4:	bl	0 <free>
 4f8:	movw	r0, #0
 4fc:	str	r0, [fp, #-4]
 500:	ldr	r0, [fp, #-4]
 504:	mov	sp, fp
 508:	pop	{fp, pc}

0000050c <coda_bin_reopen_with_definition>:
 50c:	push	{fp, lr}
 510:	mov	fp, sp
 514:	sub	sp, sp, #16
 518:	str	r0, [fp, #-4]
 51c:	str	r1, [sp, #8]
 520:	ldr	r0, [fp, #-4]
 524:	ldr	r0, [r0]
 528:	str	r0, [sp, #4]
 52c:	ldr	r0, [sp, #8]
 530:	movw	r1, #0
 534:	cmp	r0, r1
 538:	beq	540 <coda_bin_reopen_with_definition+0x34>
 53c:	b	560 <coda_bin_reopen_with_definition+0x54>
 540:	movw	r0, #0
 544:	movt	r0, #0
 548:	movw	r1, #0
 54c:	movt	r1, #0
 550:	movw	r2, #288	; 0x120
 554:	movw	r3, #0
 558:	movt	r3, #0
 55c:	bl	0 <__assert_fail>
 560:	ldr	r0, [sp, #4]
 564:	ldr	r0, [r0, #16]
 568:	cmp	r0, #1
 56c:	bne	574 <coda_bin_reopen_with_definition+0x68>
 570:	b	594 <coda_bin_reopen_with_definition+0x88>
 574:	movw	r0, #0
 578:	movt	r0, #0
 57c:	movw	r1, #0
 580:	movt	r1, #0
 584:	movw	r2, #289	; 0x121
 588:	movw	r3, #0
 58c:	movt	r3, #0
 590:	bl	0 <__assert_fail>
 594:	ldr	r0, [sp, #8]
 598:	ldr	r0, [r0]
 59c:	cmp	r0, #1
 5a0:	bne	5a8 <coda_bin_reopen_with_definition+0x9c>
 5a4:	b	5c8 <coda_bin_reopen_with_definition+0xbc>
 5a8:	movw	r0, #0
 5ac:	movt	r0, #0
 5b0:	movw	r1, #0
 5b4:	movt	r1, #0
 5b8:	movw	r2, #290	; 0x122
 5bc:	movw	r3, #0
 5c0:	movt	r3, #0
 5c4:	bl	0 <__assert_fail>
 5c8:	ldr	r0, [sp, #8]
 5cc:	ldr	r0, [r0, #28]
 5d0:	ldr	r1, [sp, #4]
 5d4:	str	r0, [r1, #20]
 5d8:	ldr	r0, [sp, #8]
 5dc:	ldr	r1, [sp, #4]
 5e0:	str	r0, [r1, #24]
 5e4:	movw	r0, #0
 5e8:	mov	sp, fp
 5ec:	pop	{fp, pc}
