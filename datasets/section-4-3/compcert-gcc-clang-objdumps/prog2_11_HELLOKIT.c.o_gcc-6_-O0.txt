
../compcert-repos/prog2/CMakeFiles/0.11.2.dir/Aula00_Conceitos_base/11_HELLOKIT.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #104	; 0x68
   c:	mov	r3, #0
  10:	str	r3, [fp, #-48]	; 0xffffffd0
  14:	sub	r3, fp, #44	; 0x2c
  18:	mov	r2, #0
  1c:	str	r2, [r3]
  20:	str	r2, [r3, #4]
  24:	str	r2, [r3, #8]
  28:	str	r2, [r3, #12]
  2c:	str	r2, [r3, #16]
  30:	strh	r2, [r3, #20]
  34:	mov	r3, #0
  38:	str	r3, [fp, #-8]
  3c:	sub	r3, fp, #20
  40:	mov	r1, r3
  44:	ldr	r0, [pc, #208]	; 11c <main+0x11c>
  48:	bl	0 <__isoc99_scanf>
  4c:	ldrb	r3, [fp, #-20]	; 0xffffffec
  50:	cmp	r3, #46	; 0x2e
  54:	beq	108 <main+0x108>
  58:	sub	r3, fp, #108	; 0x6c
  5c:	mov	r1, r3
  60:	ldr	r0, [pc, #184]	; 120 <main+0x120>
  64:	bl	0 <__isoc99_scanf>
  68:	mov	r3, #0
  6c:	str	r3, [fp, #-8]
  70:	ldr	r2, [fp, #-108]	; 0xffffff94
  74:	sub	r1, fp, #48	; 0x30
  78:	sub	r3, fp, #20
  7c:	mov	r0, r3
  80:	bl	27c <StringSet>
  84:	sub	r2, fp, #76	; 0x4c
  88:	sub	r3, fp, #48	; 0x30
  8c:	mov	r1, r2
  90:	mov	r0, r3
  94:	bl	124 <R_ShiftString>
  98:	b	f8 <main+0xf8>
  9c:	sub	r2, fp, #76	; 0x4c
  a0:	sub	r3, fp, #48	; 0x30
  a4:	mov	r1, r2
  a8:	mov	r0, r3
  ac:	bl	0 <strcmp>
  b0:	mov	r3, r0
  b4:	cmp	r3, #0
  b8:	bne	c4 <main+0xc4>
  bc:	mov	r3, #1
  c0:	str	r3, [fp, #-8]
  c4:	sub	r3, fp, #48	; 0x30
  c8:	mov	r0, r3
  cc:	bl	0 <puts>
  d0:	sub	r2, fp, #48	; 0x30
  d4:	sub	r3, fp, #104	; 0x68
  d8:	mov	r1, r2
  dc:	mov	r0, r3
  e0:	bl	0 <strcpy>
  e4:	sub	r2, fp, #48	; 0x30
  e8:	sub	r3, fp, #104	; 0x68
  ec:	mov	r1, r2
  f0:	mov	r0, r3
  f4:	bl	1d0 <L_ShiftString>
  f8:	ldr	r3, [fp, #-8]
  fc:	cmp	r3, #0
 100:	beq	9c <main+0x9c>
 104:	b	3c <main+0x3c>
 108:	nop			; (mov r0, r0)
 10c:	mov	r3, #0
 110:	mov	r0, r3
 114:	sub	sp, fp, #4
 118:	pop	{fp, pc}
 11c:	.word	0x00000000
 120:	.word	0x00000004

00000124 <R_ShiftString>:
 124:	push	{fp, lr}
 128:	add	fp, sp, #4
 12c:	sub	sp, sp, #16
 130:	str	r0, [fp, #-16]
 134:	str	r1, [fp, #-20]	; 0xffffffec
 138:	ldr	r0, [fp, #-16]
 13c:	bl	0 <strlen>
 140:	mov	r3, r0
 144:	sub	r3, r3, #1
 148:	ldr	r2, [fp, #-16]
 14c:	add	r3, r2, r3
 150:	ldrb	r2, [r3]
 154:	ldr	r3, [fp, #-20]	; 0xffffffec
 158:	strb	r2, [r3]
 15c:	mov	r3, #1
 160:	str	r3, [fp, #-8]
 164:	b	198 <R_ShiftString+0x74>
 168:	ldr	r3, [fp, #-8]
 16c:	ldr	r2, [fp, #-20]	; 0xffffffec
 170:	add	r3, r2, r3
 174:	ldr	r2, [fp, #-8]
 178:	sub	r2, r2, #1
 17c:	ldr	r1, [fp, #-16]
 180:	add	r2, r1, r2
 184:	ldrb	r2, [r2]
 188:	strb	r2, [r3]
 18c:	ldr	r3, [fp, #-8]
 190:	add	r3, r3, #1
 194:	str	r3, [fp, #-8]
 198:	ldr	r0, [fp, #-16]
 19c:	bl	0 <strlen>
 1a0:	mov	r2, r0
 1a4:	ldr	r3, [fp, #-8]
 1a8:	cmp	r2, r3
 1ac:	bhi	168 <R_ShiftString+0x44>
 1b0:	ldr	r3, [fp, #-8]
 1b4:	ldr	r2, [fp, #-20]	; 0xffffffec
 1b8:	add	r3, r2, r3
 1bc:	mov	r2, #0
 1c0:	strb	r2, [r3]
 1c4:	nop			; (mov r0, r0)
 1c8:	sub	sp, fp, #4
 1cc:	pop	{fp, pc}

000001d0 <L_ShiftString>:
 1d0:	push	{fp, lr}
 1d4:	add	fp, sp, #4
 1d8:	sub	sp, sp, #16
 1dc:	str	r0, [fp, #-16]
 1e0:	str	r1, [fp, #-20]	; 0xffffffec
 1e4:	ldr	r0, [fp, #-16]
 1e8:	bl	0 <strlen>
 1ec:	mov	r3, r0
 1f0:	sub	r3, r3, #1
 1f4:	ldr	r2, [fp, #-20]	; 0xffffffec
 1f8:	add	r3, r2, r3
 1fc:	ldr	r2, [fp, #-16]
 200:	ldrb	r2, [r2]
 204:	strb	r2, [r3]
 208:	mov	r3, #1
 20c:	str	r3, [fp, #-8]
 210:	b	244 <L_ShiftString+0x74>
 214:	ldr	r3, [fp, #-8]
 218:	sub	r3, r3, #1
 21c:	ldr	r2, [fp, #-20]	; 0xffffffec
 220:	add	r3, r2, r3
 224:	ldr	r2, [fp, #-8]
 228:	ldr	r1, [fp, #-16]
 22c:	add	r2, r1, r2
 230:	ldrb	r2, [r2]
 234:	strb	r2, [r3]
 238:	ldr	r3, [fp, #-8]
 23c:	add	r3, r3, #1
 240:	str	r3, [fp, #-8]
 244:	ldr	r0, [fp, #-16]
 248:	bl	0 <strlen>
 24c:	mov	r2, r0
 250:	ldr	r3, [fp, #-8]
 254:	cmp	r2, r3
 258:	bhi	214 <L_ShiftString+0x44>
 25c:	ldr	r3, [fp, #-8]
 260:	ldr	r2, [fp, #-20]	; 0xffffffec
 264:	add	r3, r2, r3
 268:	mov	r2, #0
 26c:	strb	r2, [r3]
 270:	nop			; (mov r0, r0)
 274:	sub	sp, fp, #4
 278:	pop	{fp, pc}

0000027c <StringSet>:
 27c:	push	{fp, lr}
 280:	add	fp, sp, #4
 284:	sub	sp, sp, #24
 288:	str	r0, [fp, #-16]
 28c:	str	r1, [fp, #-20]	; 0xffffffec
 290:	str	r2, [fp, #-24]	; 0xffffffe8
 294:	ldr	r3, [fp, #-20]	; 0xffffffec
 298:	mov	r2, #0
 29c:	strb	r2, [r3]
 2a0:	mov	r3, #0
 2a4:	str	r3, [fp, #-8]
 2a8:	b	2c4 <StringSet+0x48>
 2ac:	ldr	r1, [fp, #-16]
 2b0:	ldr	r0, [fp, #-20]	; 0xffffffec
 2b4:	bl	0 <strcat>
 2b8:	ldr	r3, [fp, #-8]
 2bc:	add	r3, r3, #1
 2c0:	str	r3, [fp, #-8]
 2c4:	ldr	r2, [fp, #-8]
 2c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2cc:	cmp	r2, r3
 2d0:	blt	2ac <StringSet+0x30>
 2d4:	nop			; (mov r0, r0)
 2d8:	sub	sp, fp, #4
 2dc:	pop	{fp, pc}
