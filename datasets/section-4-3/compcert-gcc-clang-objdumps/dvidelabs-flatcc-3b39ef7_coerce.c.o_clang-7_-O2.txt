
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/coerce.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_fb_coerce_scalar_type>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #20
   c:	mov	r4, r3
  10:	mov	sl, r0
  14:	mov	r5, #0
  18:	ldrh	r0, [r4, #8]!
  1c:	cmp	r0, #2
  20:	bcc	600 <__flatcc_fb_coerce_scalar_type+0x600>
  24:	mov	r7, r3
  28:	mov	r6, r1
  2c:	cmp	r0, #4
  30:	bne	5c <__flatcc_fb_coerce_scalar_type+0x5c>
  34:	ldrd	r8, [r7]
  38:	mvn	r0, #127	; 0x7f
  3c:	mvn	r3, #0
  40:	add	r1, r0, #127	; 0x7f
  44:	mov	r0, #4
  48:	subs	r1, r1, r8
  4c:	sbcs	r1, r3, r9
  50:	movlt	r0, #5
  54:	strhlt	r0, [r4]
  58:	b	bc <__flatcc_fb_coerce_scalar_type+0xbc>
  5c:	cmp	r2, #5
  60:	beq	bc <__flatcc_fb_coerce_scalar_type+0xbc>
  64:	cmp	r0, #6
  68:	bne	bc <__flatcc_fb_coerce_scalar_type+0xbc>
  6c:	ldr	r0, [sl, #144]	; 0x90
  70:	cmp	r0, #0
  74:	beq	b8 <__flatcc_fb_coerce_scalar_type+0xb8>
  78:	mov	r0, #0
  7c:	str	r0, [r7, #4]
  80:	mov	r0, #5
  84:	strh	r0, [r7, #8]
  88:	ldrb	r1, [r7]
  8c:	cmp	r1, #2
  90:	str	r1, [r7]
  94:	bcc	bc <__flatcc_fb_coerce_scalar_type+0xbc>
  98:	movw	r0, #0
  9c:	movw	r1, #0
  a0:	movw	r3, #0
  a4:	mov	r2, #52	; 0x34
  a8:	movt	r0, #0
  ac:	movt	r1, #0
  b0:	movt	r3, #0
  b4:	bl	0 <__assert_fail>
  b8:	mov	r0, #6
  bc:	sub	r1, r2, #1
  c0:	cmp	r1, #10
  c4:	bhi	370 <__flatcc_fb_coerce_scalar_type+0x370>
  c8:	add	r2, pc, #0
  cc:	ldr	pc, [r2, r1, lsl #2]
  d0:	.word	0x000000fc
  d4:	.word	0x0000024c
  d8:	.word	0x000001a0
  dc:	.word	0x000001d4
  e0:	.word	0x00000120
  e4:	.word	0x0000027c
  e8:	.word	0x000002b4
  ec:	.word	0x00000208
  f0:	.word	0x000002f8
  f4:	.word	0x00000168
  f8:	.word	0x0000033c
  fc:	cmp	r0, #5
 100:	beq	600 <__flatcc_fb_coerce_scalar_type+0x600>
 104:	ldr	r1, [r6, #4]
 108:	mov	r0, #0
 10c:	movw	r2, #0
 110:	str	r0, [sp]
 114:	str	r0, [sp, #4]
 118:	movt	r2, #0
 11c:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 120:	cmp	r0, #6
 124:	beq	600 <__flatcc_fb_coerce_scalar_type+0x600>
 128:	cmp	r0, #5
 12c:	bne	3e0 <__flatcc_fb_coerce_scalar_type+0x3e0>
 130:	ldr	r0, [sl, #144]	; 0x90
 134:	cmp	r0, #0
 138:	beq	3e0 <__flatcc_fb_coerce_scalar_type+0x3e0>
 13c:	ldrd	r0, [r7]
 140:	subs	r0, r0, #2
 144:	sbcs	r0, r1, #0
 148:	bcc	600 <__flatcc_fb_coerce_scalar_type+0x600>
 14c:	ldr	r1, [r6, #4]
 150:	mov	r0, #0
 154:	movw	r2, #0
 158:	str	r0, [sp]
 15c:	str	r0, [sp, #4]
 160:	movt	r2, #0
 164:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 168:	cmp	r0, #3
 16c:	beq	600 <__flatcc_fb_coerce_scalar_type+0x600>
 170:	cmp	r0, #5
 174:	beq	4f8 <__flatcc_fb_coerce_scalar_type+0x4f8>
 178:	cmp	r0, #4
 17c:	bne	554 <__flatcc_fb_coerce_scalar_type+0x554>
 180:	ldrd	r8, [r7]
 184:	mov	r0, r8
 188:	mov	r1, r9
 18c:	bl	0 <__aeabi_l2d>
 190:	str	r0, [sp, #16]
 194:	str	r1, [sp, #12]
 198:	bl	0 <__aeabi_d2lz>
 19c:	b	514 <__flatcc_fb_coerce_scalar_type+0x514>
 1a0:	cmp	r0, #5
 1a4:	bne	38c <__flatcc_fb_coerce_scalar_type+0x38c>
 1a8:	ldrd	r0, [r7]
 1ac:	subs	r0, r0, #65536	; 0x10000
 1b0:	sbcs	r0, r1, #0
 1b4:	bcc	600 <__flatcc_fb_coerce_scalar_type+0x600>
 1b8:	ldr	r1, [r6, #4]
 1bc:	mov	r0, #0
 1c0:	movw	r2, #0
 1c4:	str	r0, [sp]
 1c8:	str	r0, [sp, #4]
 1cc:	movt	r2, #0
 1d0:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 1d4:	cmp	r0, #5
 1d8:	bne	3a8 <__flatcc_fb_coerce_scalar_type+0x3a8>
 1dc:	ldrd	r0, [r7]
 1e0:	subs	r0, r0, #256	; 0x100
 1e4:	sbcs	r0, r1, #0
 1e8:	bcc	600 <__flatcc_fb_coerce_scalar_type+0x600>
 1ec:	ldr	r1, [r6, #4]
 1f0:	mov	r0, #0
 1f4:	movw	r2, #0
 1f8:	str	r0, [sp]
 1fc:	str	r0, [sp, #4]
 200:	movt	r2, #0
 204:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 208:	cmp	r0, #5
 20c:	beq	3fc <__flatcc_fb_coerce_scalar_type+0x3fc>
 210:	cmp	r0, #4
 214:	bne	488 <__flatcc_fb_coerce_scalar_type+0x488>
 218:	ldrd	r0, [r7]
 21c:	mvn	r3, #32768	; 0x8000
 220:	mvn	r2, #0
 224:	subs	r0, r3, r0
 228:	sbcs	r0, r2, r1
 22c:	blt	600 <__flatcc_fb_coerce_scalar_type+0x600>
 230:	ldr	r1, [r6, #4]
 234:	mov	r0, #0
 238:	movw	r2, #0
 23c:	str	r0, [sp]
 240:	str	r0, [sp, #4]
 244:	movt	r2, #0
 248:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 24c:	cmp	r0, #5
 250:	bne	3c4 <__flatcc_fb_coerce_scalar_type+0x3c4>
 254:	ldr	r0, [r7, #4]
 258:	cmp	r0, #0
 25c:	beq	600 <__flatcc_fb_coerce_scalar_type+0x600>
 260:	ldr	r1, [r6, #4]
 264:	mov	r0, #0
 268:	movw	r2, #0
 26c:	str	r0, [sp]
 270:	str	r0, [sp, #4]
 274:	movt	r2, #0
 278:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 27c:	cmp	r0, #4
 280:	beq	600 <__flatcc_fb_coerce_scalar_type+0x600>
 284:	cmp	r0, #5
 288:	bne	4a4 <__flatcc_fb_coerce_scalar_type+0x4a4>
 28c:	ldr	r0, [r7, #4]
 290:	cmn	r0, #1
 294:	bgt	480 <__flatcc_fb_coerce_scalar_type+0x480>
 298:	ldr	r1, [r6, #4]
 29c:	mov	r0, #0
 2a0:	movw	r2, #0
 2a4:	str	r0, [sp]
 2a8:	str	r0, [sp, #4]
 2ac:	movt	r2, #0
 2b0:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 2b4:	cmp	r0, #5
 2b8:	beq	428 <__flatcc_fb_coerce_scalar_type+0x428>
 2bc:	cmp	r0, #4
 2c0:	bne	4c0 <__flatcc_fb_coerce_scalar_type+0x4c0>
 2c4:	ldrd	r0, [r7]
 2c8:	mvn	r3, #-2147483648	; 0x80000000
 2cc:	mvn	r2, #0
 2d0:	subs	r0, r3, r0
 2d4:	sbcs	r0, r2, r1
 2d8:	blt	600 <__flatcc_fb_coerce_scalar_type+0x600>
 2dc:	ldr	r1, [r6, #4]
 2e0:	mov	r0, #0
 2e4:	movw	r2, #0
 2e8:	str	r0, [sp]
 2ec:	str	r0, [sp, #4]
 2f0:	movt	r2, #0
 2f4:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 2f8:	cmp	r0, #5
 2fc:	beq	454 <__flatcc_fb_coerce_scalar_type+0x454>
 300:	cmp	r0, #4
 304:	bne	4dc <__flatcc_fb_coerce_scalar_type+0x4dc>
 308:	ldrd	r0, [r7]
 30c:	mvn	r3, #128	; 0x80
 310:	mvn	r2, #0
 314:	subs	r0, r3, r0
 318:	sbcs	r0, r2, r1
 31c:	blt	600 <__flatcc_fb_coerce_scalar_type+0x600>
 320:	ldr	r1, [r6, #4]
 324:	mov	r0, #0
 328:	movw	r2, #0
 32c:	str	r0, [sp]
 330:	str	r0, [sp, #4]
 334:	movt	r2, #0
 338:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 33c:	cmp	r0, #3
 340:	beq	600 <__flatcc_fb_coerce_scalar_type+0x600>
 344:	cmp	r0, #5
 348:	beq	570 <__flatcc_fb_coerce_scalar_type+0x570>
 34c:	cmp	r0, #4
 350:	bne	5d0 <__flatcc_fb_coerce_scalar_type+0x5d0>
 354:	ldrd	r8, [r7]
 358:	mov	r0, r8
 35c:	mov	r1, r9
 360:	bl	0 <__aeabi_l2f>
 364:	str	r0, [sp, #16]
 368:	bl	0 <__aeabi_f2lz>
 36c:	b	588 <__flatcc_fb_coerce_scalar_type+0x588>
 370:	ldr	r1, [r6, #4]
 374:	movw	r2, #0
 378:	mov	r0, #0
 37c:	movt	r2, #0
 380:	str	r0, [sp]
 384:	str	r0, [sp, #4]
 388:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 38c:	ldr	r1, [r6, #4]
 390:	mov	r0, #0
 394:	movw	r2, #0
 398:	str	r0, [sp]
 39c:	str	r0, [sp, #4]
 3a0:	movt	r2, #0
 3a4:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 3a8:	ldr	r1, [r6, #4]
 3ac:	mov	r0, #0
 3b0:	movw	r2, #0
 3b4:	str	r0, [sp]
 3b8:	str	r0, [sp, #4]
 3bc:	movt	r2, #0
 3c0:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 3c4:	ldr	r1, [r6, #4]
 3c8:	mov	r0, #0
 3cc:	movw	r2, #0
 3d0:	str	r0, [sp]
 3d4:	str	r0, [sp, #4]
 3d8:	movt	r2, #0
 3dc:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 3e0:	ldr	r1, [r6, #4]
 3e4:	mov	r0, #0
 3e8:	movw	r2, #0
 3ec:	str	r0, [sp]
 3f0:	str	r0, [sp, #4]
 3f4:	movt	r2, #0
 3f8:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 3fc:	ldrd	r0, [r7]
 400:	subs	r0, r0, #32768	; 0x8000
 404:	sbcs	r0, r1, #0
 408:	blt	480 <__flatcc_fb_coerce_scalar_type+0x480>
 40c:	ldr	r1, [r6, #4]
 410:	mov	r0, #0
 414:	movw	r2, #0
 418:	str	r0, [sp]
 41c:	str	r0, [sp, #4]
 420:	movt	r2, #0
 424:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 428:	ldrd	r0, [r7]
 42c:	subs	r0, r0, #-2147483648	; 0x80000000
 430:	sbcs	r0, r1, #0
 434:	blt	480 <__flatcc_fb_coerce_scalar_type+0x480>
 438:	ldr	r1, [r6, #4]
 43c:	mov	r0, #0
 440:	movw	r2, #0
 444:	str	r0, [sp]
 448:	str	r0, [sp, #4]
 44c:	movt	r2, #0
 450:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 454:	ldrd	r0, [r7]
 458:	subs	r0, r0, #128	; 0x80
 45c:	sbcs	r0, r1, #0
 460:	blt	480 <__flatcc_fb_coerce_scalar_type+0x480>
 464:	ldr	r1, [r6, #4]
 468:	mov	r0, #0
 46c:	movw	r2, #0
 470:	str	r0, [sp]
 474:	str	r0, [sp, #4]
 478:	movt	r2, #0
 47c:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 480:	mov	r0, #4
 484:	b	5fc <__flatcc_fb_coerce_scalar_type+0x5fc>
 488:	ldr	r1, [r6, #4]
 48c:	mov	r0, #0
 490:	movw	r2, #0
 494:	str	r0, [sp]
 498:	str	r0, [sp, #4]
 49c:	movt	r2, #0
 4a0:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 4a4:	ldr	r1, [r6, #4]
 4a8:	mov	r0, #0
 4ac:	movw	r2, #0
 4b0:	str	r0, [sp]
 4b4:	str	r0, [sp, #4]
 4b8:	movt	r2, #0
 4bc:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 4c0:	ldr	r1, [r6, #4]
 4c4:	mov	r0, #0
 4c8:	movw	r2, #0
 4cc:	str	r0, [sp]
 4d0:	str	r0, [sp, #4]
 4d4:	movt	r2, #0
 4d8:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 4dc:	ldr	r1, [r6, #4]
 4e0:	mov	r0, #0
 4e4:	movw	r2, #0
 4e8:	str	r0, [sp]
 4ec:	str	r0, [sp, #4]
 4f0:	movt	r2, #0
 4f4:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 4f8:	ldrd	r8, [r7]
 4fc:	mov	r0, r8
 500:	mov	r1, r9
 504:	bl	0 <__aeabi_ul2d>
 508:	str	r0, [sp, #16]
 50c:	str	r1, [sp, #12]
 510:	bl	0 <__aeabi_d2ulz>
 514:	eor	r1, r9, r1
 518:	eor	r0, r8, r0
 51c:	orrs	r0, r0, r1
 520:	bne	538 <__flatcc_fb_coerce_scalar_type+0x538>
 524:	ldr	r0, [sp, #16]
 528:	ldr	r1, [sp, #12]
 52c:	vmov	d16, r0, r1
 530:	mov	r0, #3
 534:	b	5a8 <__flatcc_fb_coerce_scalar_type+0x5a8>
 538:	ldr	r1, [r6, #4]
 53c:	mov	r0, #0
 540:	movw	r2, #0
 544:	str	r0, [sp]
 548:	str	r0, [sp, #4]
 54c:	movt	r2, #0
 550:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 554:	ldr	r1, [r6, #4]
 558:	mov	r0, #0
 55c:	movw	r2, #0
 560:	str	r0, [sp]
 564:	str	r0, [sp, #4]
 568:	movt	r2, #0
 56c:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 570:	ldrd	r8, [r7]
 574:	mov	r0, r8
 578:	mov	r1, r9
 57c:	bl	0 <__aeabi_ul2f>
 580:	str	r0, [sp, #16]
 584:	bl	0 <__aeabi_f2ulz>
 588:	eor	r1, r9, r1
 58c:	eor	r0, r8, r0
 590:	orrs	r0, r0, r1
 594:	bne	5b4 <__flatcc_fb_coerce_scalar_type+0x5b4>
 598:	ldr	r0, [sp, #16]
 59c:	vmov	s0, r0
 5a0:	mov	r0, #3
 5a4:	vcvt.f64.f32	d16, s0
 5a8:	strh	r0, [r7, #8]
 5ac:	vstr	d16, [r7]
 5b0:	b	600 <__flatcc_fb_coerce_scalar_type+0x600>
 5b4:	ldr	r1, [r6, #4]
 5b8:	mov	r0, #0
 5bc:	movw	r2, #0
 5c0:	str	r0, [sp]
 5c4:	str	r0, [sp, #4]
 5c8:	movt	r2, #0
 5cc:	b	5e8 <__flatcc_fb_coerce_scalar_type+0x5e8>
 5d0:	ldr	r1, [r6, #4]
 5d4:	mov	r0, #0
 5d8:	movw	r2, #0
 5dc:	str	r0, [sp]
 5e0:	str	r0, [sp, #4]
 5e4:	movt	r2, #0
 5e8:	mov	r0, sl
 5ec:	mov	r3, #0
 5f0:	bl	0 <__flatcc_error_report>
 5f4:	mov	r0, #1
 5f8:	mvn	r5, #0
 5fc:	strh	r0, [r4]
 600:	mov	r0, r5
 604:	sub	sp, fp, #28
 608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
