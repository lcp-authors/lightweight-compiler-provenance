
../repos/stcorp-coda-3a25f25/CMakeFiles/codaeval.dir/tools/codaeval/codaeval.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <generate_escaped_string>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #24
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	str	r5, [sp, #12]
  18:	str	r6, [sp, #16]
  1c:	mov	r4, r1
  20:	mov	r6, r0
  24:	mov	r5, #0
  28:	cmp	r4, #0
  2c:	beq	40 <generate_escaped_string+0x40>
  30:	cmp	r6, #0
  34:	moveq	r0, #1
  38:	movne	r0, #0
  3c:	b	44 <generate_escaped_string+0x44>
  40:	mov	r0, #1
  44:	cmp	r0, #0
  48:	bne	18c <generate_escaped_string+0x18c>
  4c:	cmp	r4, #0
  50:	bge	60 <generate_escaped_string+0x60>
  54:	mov	r0, r6
  58:	bl	0 <strlen>
  5c:	mov	r4, r0
  60:	cmp	r5, r4
  64:	bge	18c <generate_escaped_string+0x18c>
  68:	ldrb	r2, [r6, r5]
  6c:	cmp	r2, #12
  70:	bcs	d8 <generate_escaped_string+0xd8>
  74:	cmp	r2, #9
  78:	bcs	a4 <generate_escaped_string+0xa4>
  7c:	cmp	r2, #7
  80:	beq	98 <generate_escaped_string+0x98>
  84:	cmp	r2, #8
  88:	bne	12c <generate_escaped_string+0x12c>
  8c:	ldr	r0, [pc, #284]	; 1b0 <generate_escaped_string+0x1b0>
  90:	bl	0 <printf>
  94:	b	184 <generate_escaped_string+0x184>
  98:	ldr	r0, [pc, #280]	; 1b8 <generate_escaped_string+0x1b8>
  9c:	bl	0 <printf>
  a0:	b	184 <generate_escaped_string+0x184>
  a4:	cmp	r2, #9
  a8:	beq	cc <generate_escaped_string+0xcc>
  ac:	cmp	r2, #10
  b0:	bne	c0 <generate_escaped_string+0xc0>
  b4:	ldr	r0, [pc, #248]	; 1b4 <generate_escaped_string+0x1b4>
  b8:	bl	0 <printf>
  bc:	b	184 <generate_escaped_string+0x184>
  c0:	ldr	r0, [pc, #260]	; 1cc <generate_escaped_string+0x1cc>
  c4:	bl	0 <printf>
  c8:	b	184 <generate_escaped_string+0x184>
  cc:	ldr	r0, [pc, #252]	; 1d0 <generate_escaped_string+0x1d0>
  d0:	bl	0 <printf>
  d4:	b	184 <generate_escaped_string+0x184>
  d8:	cmp	r2, #27
  dc:	bcs	108 <generate_escaped_string+0x108>
  e0:	cmp	r2, #12
  e4:	beq	fc <generate_escaped_string+0xfc>
  e8:	cmp	r2, #13
  ec:	bne	12c <generate_escaped_string+0x12c>
  f0:	ldr	r0, [pc, #208]	; 1c8 <generate_escaped_string+0x1c8>
  f4:	bl	0 <printf>
  f8:	b	184 <generate_escaped_string+0x184>
  fc:	ldr	r0, [pc, #164]	; 1a8 <generate_escaped_string+0x1a8>
 100:	bl	0 <printf>
 104:	b	184 <generate_escaped_string+0x184>
 108:	cmp	r2, #27
 10c:	beq	17c <generate_escaped_string+0x17c>
 110:	cmp	r2, #34	; 0x22
 114:	beq	170 <generate_escaped_string+0x170>
 118:	cmp	r2, #92	; 0x5c
 11c:	bne	12c <generate_escaped_string+0x12c>
 120:	ldr	r0, [pc, #132]	; 1ac <generate_escaped_string+0x1ac>
 124:	bl	0 <printf>
 128:	b	184 <generate_escaped_string+0x184>
 12c:	bl	0 <__ctype_b_loc>
 130:	ldr	r0, [r0]
 134:	ldrb	r1, [r6, r5]
 138:	add	ip, r0, r1, lsl #1
 13c:	ldrh	r0, [ip]
 140:	and	ip, r0, #16384	; 0x4000
 144:	cmp	ip, #0
 148:	bne	160 <generate_escaped_string+0x160>
 14c:	ldr	r0, [pc, #112]	; 1c4 <generate_escaped_string+0x1c4>
 150:	ldrb	r2, [r6, r5]
 154:	and	r1, r2, #255	; 0xff
 158:	bl	0 <printf>
 15c:	b	184 <generate_escaped_string+0x184>
 160:	ldr	r0, [pc, #60]	; 1a4 <generate_escaped_string+0x1a4>
 164:	ldrb	r1, [r6, r5]
 168:	bl	0 <printf>
 16c:	b	184 <generate_escaped_string+0x184>
 170:	ldr	r0, [pc, #72]	; 1c0 <generate_escaped_string+0x1c0>
 174:	bl	0 <printf>
 178:	b	184 <generate_escaped_string+0x184>
 17c:	ldr	r0, [pc, #56]	; 1bc <generate_escaped_string+0x1bc>
 180:	bl	0 <printf>
 184:	add	r5, r5, #1
 188:	b	60 <generate_escaped_string+0x60>
 18c:	ldr	r4, [sp, #8]
 190:	ldr	r5, [sp, #12]
 194:	ldr	r6, [sp, #16]
 198:	ldr	lr, [sp, #4]
 19c:	add	sp, sp, #24
 1a0:	bx	lr
 1a4:	.word	0x0000019b
 1a8:	.word	0x000003ad
 1ac:	.word	0x00000091
 1b0:	.word	0x000000fc
 1b4:	.word	0x000008c4
 1b8:	.word	0x00000192
 1bc:	.word	0x00000590
 1c0:	.word	0x0000050e
 1c4:	.word	0x00000195
 1c8:	.word	0x000003aa
 1cc:	.word	0x0000089e
 1d0:	.word	0x000003a7

000001d4 <print_version>:
 1d4:	mov	ip, sp
 1d8:	sub	sp, sp, #8
 1dc:	str	ip, [sp]
 1e0:	str	lr, [sp, #4]
 1e4:	bl	0 <coda_get_libcoda_version>
 1e8:	mov	r1, r0
 1ec:	ldr	r0, [pc, #32]	; 214 <print_version+0x40>
 1f0:	bl	0 <printf>
 1f4:	ldr	r0, [pc, #20]	; 210 <print_version+0x3c>
 1f8:	bl	0 <printf>
 1fc:	ldr	r0, [pc, #20]	; 218 <print_version+0x44>
 200:	bl	0 <printf>
 204:	ldr	lr, [sp, #4]
 208:	add	sp, sp, #8
 20c:	bx	lr
 210:	.word	0x0000019e
 214:	.word	0x00000593
 218:	.word	0x000005c7

0000021c <print_help>:
 21c:	mov	ip, sp
 220:	sub	sp, sp, #8
 224:	str	ip, [sp]
 228:	str	lr, [sp, #4]
 22c:	ldr	r0, [pc, #348]	; 390 <print_help+0x174>
 230:	bl	0 <printf>
 234:	ldr	r0, [pc, #328]	; 384 <print_help+0x168>
 238:	bl	0 <printf>
 23c:	ldr	r0, [pc, #388]	; 3c8 <print_help+0x1ac>
 240:	bl	0 <printf>
 244:	ldr	r0, [pc, #388]	; 3d0 <print_help+0x1b4>
 248:	bl	0 <printf>
 24c:	ldr	r0, [pc, #288]	; 374 <print_help+0x158>
 250:	bl	0 <printf>
 254:	ldr	r0, [pc, #284]	; 378 <print_help+0x15c>
 258:	bl	0 <printf>
 25c:	ldr	r0, [pc, #372]	; 3d8 <print_help+0x1bc>
 260:	bl	0 <printf>
 264:	ldr	r0, [pc, #352]	; 3cc <print_help+0x1b0>
 268:	bl	0 <printf>
 26c:	ldr	r0, [pc, #308]	; 3a8 <print_help+0x18c>
 270:	bl	0 <printf>
 274:	ldr	r0, [pc, #272]	; 38c <print_help+0x170>
 278:	bl	0 <printf>
 27c:	ldr	r0, [pc, #248]	; 37c <print_help+0x160>
 280:	bl	0 <printf>
 284:	ldr	r0, [pc, #220]	; 368 <print_help+0x14c>
 288:	bl	0 <printf>
 28c:	ldr	r0, [pc, #268]	; 3a0 <print_help+0x184>
 290:	bl	0 <printf>
 294:	ldr	r0, [pc, #264]	; 3a4 <print_help+0x188>
 298:	bl	0 <printf>
 29c:	ldr	r0, [pc, #272]	; 3b4 <print_help+0x198>
 2a0:	bl	0 <printf>
 2a4:	ldr	r0, [pc, #304]	; 3dc <print_help+0x1c0>
 2a8:	bl	0 <printf>
 2ac:	ldr	r0, [pc, #260]	; 3b8 <print_help+0x19c>
 2b0:	bl	0 <printf>
 2b4:	ldr	r0, [pc, #180]	; 370 <print_help+0x154>
 2b8:	bl	0 <printf>
 2bc:	ldr	r0, [pc, #272]	; 3d4 <print_help+0x1b8>
 2c0:	bl	0 <printf>
 2c4:	ldr	r0, [pc, #276]	; 3e0 <print_help+0x1c4>
 2c8:	bl	0 <printf>
 2cc:	ldr	r0, [pc, #248]	; 3cc <print_help+0x1b0>
 2d0:	bl	0 <printf>
 2d4:	ldr	r0, [pc, #268]	; 3e8 <print_help+0x1cc>
 2d8:	bl	0 <printf>
 2dc:	ldr	r0, [pc, #184]	; 39c <print_help+0x180>
 2e0:	bl	0 <printf>
 2e4:	ldr	r0, [pc, #224]	; 3cc <print_help+0x1b0>
 2e8:	bl	0 <printf>
 2ec:	ldr	r0, [pc, #160]	; 394 <print_help+0x178>
 2f0:	bl	0 <printf>
 2f4:	ldr	r0, [pc, #232]	; 3e4 <print_help+0x1c8>
 2f8:	bl	0 <printf>
 2fc:	ldr	r0, [pc, #200]	; 3cc <print_help+0x1b0>
 300:	bl	0 <printf>
 304:	ldr	r0, [pc, #116]	; 380 <print_help+0x164>
 308:	bl	0 <printf>
 30c:	ldr	r0, [pc, #168]	; 3bc <print_help+0x1a0>
 310:	bl	0 <printf>
 314:	ldr	r0, [pc, #176]	; 3cc <print_help+0x1b0>
 318:	bl	0 <printf>
 31c:	ldr	r0, [pc, #156]	; 3c0 <print_help+0x1a4>
 320:	bl	0 <printf>
 324:	ldr	r0, [pc, #152]	; 3c4 <print_help+0x1a8>
 328:	bl	0 <printf>
 32c:	ldr	r0, [pc, #124]	; 3b0 <print_help+0x194>
 330:	bl	0 <printf>
 334:	ldr	r0, [pc, #76]	; 388 <print_help+0x16c>
 338:	bl	0 <printf>
 33c:	ldr	r0, [pc, #84]	; 398 <print_help+0x17c>
 340:	bl	0 <printf>
 344:	ldr	r0, [pc, #32]	; 36c <print_help+0x150>
 348:	bl	0 <printf>
 34c:	ldr	r0, [pc, #88]	; 3ac <print_help+0x190>
 350:	bl	0 <printf>
 354:	ldr	r0, [pc, #112]	; 3cc <print_help+0x1b0>
 358:	bl	0 <printf>
 35c:	ldr	lr, [sp, #4]
 360:	add	sp, sp, #8
 364:	bx	lr
 368:	.word	0x00000656
 36c:	.word	0x00000937
 370:	.word	0x000008a1
 374:	.word	0x000002b0
 378:	.word	0x0000060a
 37c:	.word	0x000001e8
 380:	.word	0x00000a43
 384:	.word	0x00000497
 388:	.word	0x000003b0
 38c:	.word	0x000000c5
 390:	.word	0x00000137
 394:	.word	0x000000e4
 398:	.word	0x000009f6
 39c:	.word	0x00000511
 3a0:	.word	0x00000799
 3a4:	.word	0x00000318
 3a8:	.word	0x000002fb
 3ac:	.word	0x000005c9
 3b0:	.word	0x0000004c
 3b4:	.word	0x00000433
 3b8:	.word	0x0000081c
 3bc:	.word	0x00000868
 3c0:	.word	0x00000a5f
 3c4:	.word	0x0000044c
 3c8:	.word	0x00000977
 3cc:	.word	0x000005c7
 3d0:	.word	0x00000382
 3d4:	.word	0x000006c7
 3d8:	.word	0x00000094
 3dc:	.word	0x00000144
 3e0:	.word	0x000009c6
 3e4:	.word	0x00000918
 3e8:	.word	0x000008c7

000003ec <eval_expression>:
 3ec:	mov	ip, sp
 3f0:	sub	sp, sp, #64	; 0x40
 3f4:	str	ip, [sp]
 3f8:	str	lr, [sp, #4]
 3fc:	mov	r1, r0
 400:	ldr	ip, [pc, #536]	; 620 <eval_expression+0x234>
 404:	ldr	r2, [ip]
 408:	cmp	r2, #3
 40c:	bcs	534 <eval_expression+0x148>
 410:	cmp	r2, #0
 414:	beq	4cc <eval_expression+0xe0>
 418:	cmp	r2, #1
 41c:	bne	47c <eval_expression+0x90>
 420:	ldr	r0, [pc, #452]	; 5ec <eval_expression+0x200>
 424:	ldr	r0, [r0]
 428:	add	r2, sp, #24
 42c:	bl	0 <coda_expression_eval_integer>
 430:	cmp	r0, #0
 434:	beq	45c <eval_expression+0x70>
 438:	bl	0 <coda_get_errno>
 43c:	ldr	r0, [r0]
 440:	bl	0 <coda_errno_to_string>
 444:	mov	r2, r0
 448:	mvn	r0, #400	; 0x190
 44c:	ldr	r1, [pc, #440]	; 60c <eval_expression+0x220>
 450:	bl	0 <coda_set_error>
 454:	mvn	r0, #0
 458:	b	5e0 <eval_expression+0x1f4>
 45c:	ldr	r0, [sp, #24]
 460:	ldr	r1, [sp, #28]
 464:	add	r2, sp, #40	; 0x28
 468:	bl	0 <coda_str64>
 46c:	ldr	r0, [pc, #404]	; 608 <eval_expression+0x21c>
 470:	add	r1, sp, #40	; 0x28
 474:	bl	0 <printf>
 478:	b	5dc <eval_expression+0x1f0>
 47c:	ldr	r3, [pc, #360]	; 5ec <eval_expression+0x200>
 480:	ldr	r0, [r3]
 484:	add	r2, sp, #32
 488:	bl	0 <coda_expression_eval_float>
 48c:	cmp	r0, #0
 490:	beq	4b8 <eval_expression+0xcc>
 494:	bl	0 <coda_get_errno>
 498:	ldr	r0, [r0]
 49c:	bl	0 <coda_errno_to_string>
 4a0:	mov	r2, r0
 4a4:	mvn	r0, #400	; 0x190
 4a8:	ldr	r1, [pc, #332]	; 5fc <eval_expression+0x210>
 4ac:	bl	0 <coda_set_error>
 4b0:	mvn	r0, #0
 4b4:	b	5e0 <eval_expression+0x1f4>
 4b8:	ldr	r0, [pc, #320]	; 600 <eval_expression+0x214>
 4bc:	vldr	d2, [sp, #32]
 4c0:	vmov	r2, r3, d2
 4c4:	bl	0 <printf>
 4c8:	b	5dc <eval_expression+0x1f0>
 4cc:	ldr	r2, [pc, #280]	; 5ec <eval_expression+0x200>
 4d0:	ldr	r0, [r2]
 4d4:	add	r2, sp, #16
 4d8:	bl	0 <coda_expression_eval_bool>
 4dc:	cmp	r0, #0
 4e0:	beq	510 <eval_expression+0x124>
 4e4:	bl	0 <coda_get_errno>
 4e8:	ldr	r0, [r0]
 4ec:	bl	0 <coda_errno_to_string>
 4f0:	mvn	r2, #400	; 0x190
 4f4:	ldr	r1, [pc, #276]	; 610 <eval_expression+0x224>
 4f8:	mov	r3, r0
 4fc:	mov	r0, r2
 500:	mov	r2, r3
 504:	bl	0 <coda_set_error>
 508:	mvn	r0, #0
 50c:	b	5e0 <eval_expression+0x1f4>
 510:	ldr	r0, [sp, #16]
 514:	cmp	r0, #0
 518:	bne	524 <eval_expression+0x138>
 51c:	ldr	r1, [pc, #212]	; 5f8 <eval_expression+0x20c>
 520:	b	528 <eval_expression+0x13c>
 524:	ldr	r1, [pc, #200]	; 5f4 <eval_expression+0x208>
 528:	ldr	r0, [pc, #216]	; 608 <eval_expression+0x21c>
 52c:	bl	0 <printf>
 530:	b	5dc <eval_expression+0x1f0>
 534:	cmp	r2, #3
 538:	beq	56c <eval_expression+0x180>
 53c:	cmp	r2, #4
 540:	beq	54c <eval_expression+0x160>
 544:	cmp	r2, #5
 548:	bne	5dc <eval_expression+0x1f0>
 54c:	ldr	r0, [pc, #192]	; 614 <eval_expression+0x228>
 550:	ldr	r1, [pc, #152]	; 5f0 <eval_expression+0x204>
 554:	mov	r2, #230	; 0xe6
 558:	ldr	r3, [pc, #184]	; 618 <eval_expression+0x22c>
 55c:	bl	0 <__assert_fail>
 560:	mov	r0, #1
 564:	bl	0 <exit>
 568:	b	5dc <eval_expression+0x1f0>
 56c:	mov	ip, #0
 570:	str	ip, [sp, #8]
 574:	ldr	r0, [pc, #112]	; 5ec <eval_expression+0x200>
 578:	ldr	r0, [r0]
 57c:	add	r2, sp, #8
 580:	add	r3, sp, #12
 584:	bl	0 <coda_expression_eval_string>
 588:	cmp	r0, #0
 58c:	beq	5b4 <eval_expression+0x1c8>
 590:	bl	0 <coda_get_errno>
 594:	ldr	r0, [r0]
 598:	bl	0 <coda_errno_to_string>
 59c:	mov	r2, r0
 5a0:	mvn	r0, #400	; 0x190
 5a4:	ldr	r1, [pc, #88]	; 604 <eval_expression+0x218>
 5a8:	bl	0 <coda_set_error>
 5ac:	mvn	r0, #0
 5b0:	b	5e0 <eval_expression+0x1f4>
 5b4:	ldr	r0, [sp, #8]
 5b8:	ldr	r1, [sp, #12]
 5bc:	bl	0 <generate_escaped_string>
 5c0:	ldr	r0, [pc, #84]	; 61c <eval_expression+0x230>
 5c4:	bl	0 <printf>
 5c8:	ldr	r0, [sp, #8]
 5cc:	cmp	r0, #0
 5d0:	beq	5dc <eval_expression+0x1f0>
 5d4:	ldr	r0, [sp, #8]
 5d8:	bl	0 <free>
 5dc:	mov	r0, #0
 5e0:	ldr	lr, [sp, #4]
 5e4:	add	sp, sp, #64	; 0x40
 5e8:	bx	lr
 5ec:	.word	0x00000000
 5f0:	.word	0x00000531
 5f4:	.word	0x0000013f
 5f8:	.word	0x000007ef
 5fc:	.word	0x000003fa
 600:	.word	0x00000239
 604:	.word	0x000005a0
 608:	.word	0x000008c0
 60c:	.word	0x000004e6
 610:	.word	0x00000353
 614:	.word	0x000007f5
 618:	.word	0x00000aaa
 61c:	.word	0x000005c7
 620:	.word	0x00000000

00000624 <eval_expression_for_file>:
 624:	mov	ip, sp
 628:	sub	sp, sp, #544	; 0x220
 62c:	str	ip, [sp]
 630:	str	lr, [sp, #4]
 634:	str	r4, [sp, #8]
 638:	mov	r4, r0
 63c:	mov	r3, #0
 640:	str	r3, [sp, #16]
 644:	add	r1, sp, #16
 648:	mov	r0, r4
 64c:	bl	0 <coda_open>
 650:	cmp	r0, #0
 654:	beq	660 <eval_expression_for_file+0x3c>
 658:	mov	r0, #1
 65c:	b	72c <eval_expression_for_file+0x108>
 660:	add	r0, sp, #24
 664:	ldr	r1, [sp, #16]
 668:	bl	0 <coda_cursor_set_product>
 66c:	cmp	r0, #0
 670:	beq	684 <eval_expression_for_file+0x60>
 674:	ldr	r0, [sp, #16]
 678:	bl	0 <coda_close>
 67c:	mov	r0, #1
 680:	b	72c <eval_expression_for_file+0x108>
 684:	ldr	r0, [pc, #184]	; 744 <eval_expression_for_file+0x120>
 688:	ldr	r1, [r0]
 68c:	cmp	r1, #0
 690:	beq	6dc <eval_expression_for_file+0xb8>
 694:	ldr	r2, [pc, #168]	; 744 <eval_expression_for_file+0x120>
 698:	ldr	r0, [r2]
 69c:	add	r1, sp, #24
 6a0:	bl	0 <coda_expression_eval_node>
 6a4:	cmp	r0, #0
 6a8:	beq	6dc <eval_expression_for_file+0xb8>
 6ac:	bl	0 <coda_get_errno>
 6b0:	ldr	r0, [r0]
 6b4:	bl	0 <coda_errno_to_string>
 6b8:	mov	r2, r0
 6bc:	ldr	r3, [pc, #132]	; 748 <eval_expression_for_file+0x124>
 6c0:	ldr	r0, [r3]
 6c4:	ldr	r1, [pc, #116]	; 740 <eval_expression_for_file+0x11c>
 6c8:	bl	0 <fprintf>
 6cc:	ldr	r0, [sp, #16]
 6d0:	bl	0 <coda_close>
 6d4:	mov	r0, #0
 6d8:	b	72c <eval_expression_for_file+0x108>
 6dc:	add	r0, sp, #24
 6e0:	bl	3ec <eval_expression>
 6e4:	cmp	r0, #0
 6e8:	beq	710 <eval_expression_for_file+0xec>
 6ec:	bl	0 <coda_get_errno>
 6f0:	ldr	r0, [r0]
 6f4:	bl	0 <coda_errno_to_string>
 6f8:	mov	r2, r0
 6fc:	ldr	r3, [pc, #68]	; 748 <eval_expression_for_file+0x124>
 700:	ldr	r0, [r3]
 704:	ldr	r1, [pc, #48]	; 73c <eval_expression_for_file+0x118>
 708:	mov	r3, r4
 70c:	bl	0 <fprintf>
 710:	ldr	r0, [sp, #16]
 714:	bl	0 <coda_close>
 718:	cmp	r0, #0
 71c:	beq	728 <eval_expression_for_file+0x104>
 720:	mov	r0, #1
 724:	b	72c <eval_expression_for_file+0x108>
 728:	mov	r0, #0
 72c:	ldr	r4, [sp, #8]
 730:	ldr	lr, [sp, #4]
 734:	add	sp, sp, #544	; 0x220
 738:	bx	lr
 73c:	.word	0x000000ff
 740:	.word	0x00000000
 744:	.word	0x00000004
 748:	.word	0x00000000

0000074c <callback>:
 74c:	mov	ip, sp
 750:	sub	sp, sp, #16
 754:	str	ip, [sp]
 758:	str	lr, [sp, #4]
 75c:	str	r4, [sp, #8]
 760:	str	r5, [sp, #12]
 764:	mov	r5, r1
 768:	mov	r4, r0
 76c:	cmp	r5, #0
 770:	beq	7b8 <callback+0x6c>
 774:	cmp	r5, #2
 778:	beq	7a0 <callback+0x54>
 77c:	cmp	r5, #1
 780:	bne	7cc <callback+0x80>
 784:	ldr	r0, [pc, #120]	; 804 <callback+0xb8>
 788:	ldr	r0, [r0]
 78c:	ldr	r1, [pc, #108]	; 800 <callback+0xb4>
 790:	mov	r3, r2
 794:	mov	r2, r4
 798:	bl	0 <fprintf>
 79c:	b	7cc <callback+0x80>
 7a0:	ldr	r2, [pc, #92]	; 804 <callback+0xb8>
 7a4:	ldr	r0, [r2]
 7a8:	ldr	r1, [pc, #76]	; 7fc <callback+0xb0>
 7ac:	mov	r2, r4
 7b0:	bl	0 <fprintf>
 7b4:	b	7cc <callback+0x80>
 7b8:	ldr	r3, [pc, #68]	; 804 <callback+0xb8>
 7bc:	ldr	r0, [r3]
 7c0:	ldr	r1, [pc, #48]	; 7f8 <callback+0xac>
 7c4:	mov	r3, r4
 7c8:	bl	0 <fprintf>
 7cc:	cmp	r5, #4
 7d0:	bne	7e0 <callback+0x94>
 7d4:	mov	r0, r4
 7d8:	bl	624 <eval_expression_for_file>
 7dc:	b	7e4 <callback+0x98>
 7e0:	mov	r0, #0
 7e4:	ldr	r4, [sp, #8]
 7e8:	ldr	r5, [sp, #12]
 7ec:	ldr	lr, [sp, #4]
 7f0:	add	sp, sp, #16
 7f4:	bx	lr
 7f8:	.word	0x000000ff
 7fc:	.word	0x00000111
 800:	.word	0x00000714
 804:	.word	0x00000000

00000808 <main>:
 808:	mov	ip, sp
 80c:	sub	sp, sp, #40	; 0x28
 810:	str	ip, [sp, #4]
 814:	str	lr, [sp, #8]
 818:	str	r4, [sp, #16]
 81c:	str	r5, [sp, #20]
 820:	str	r6, [sp, #24]
 824:	str	r7, [sp, #28]
 828:	str	r8, [sp, #32]
 82c:	mov	r4, r1
 830:	mov	r5, r0
 834:	mov	r7, #1
 838:	mov	r6, #0
 83c:	cmp	r5, #1
 840:	beq	860 <main+0x58>
 844:	ldr	r0, [r4, #4]
 848:	ldr	r1, [pc, #1408]	; dd0 <main+0x5c8>
 84c:	bl	0 <strcmp>
 850:	cmp	r0, #0
 854:	moveq	r2, #1
 858:	movne	r2, #0
 85c:	b	864 <main+0x5c>
 860:	mov	r2, #1
 864:	cmp	r2, #0
 868:	bne	888 <main+0x80>
 86c:	ldr	r0, [r4, #4]
 870:	ldr	r1, [pc, #1400]	; df0 <main+0x5e8>
 874:	bl	0 <strcmp>
 878:	cmp	r0, #0
 87c:	moveq	r1, #1
 880:	movne	r1, #0
 884:	b	88c <main+0x84>
 888:	mov	r1, #1
 88c:	cmp	r1, #0
 890:	beq	8a0 <main+0x98>
 894:	bl	21c <print_help>
 898:	mov	r0, #0
 89c:	bl	0 <exit>
 8a0:	ldr	r0, [r4, #4]
 8a4:	ldr	r1, [pc, #1292]	; db8 <main+0x5b0>
 8a8:	bl	0 <strcmp>
 8ac:	cmp	r0, #0
 8b0:	beq	8d0 <main+0xc8>
 8b4:	ldr	r0, [r4, #4]
 8b8:	ldr	r1, [pc, #1308]	; ddc <main+0x5d4>
 8bc:	bl	0 <strcmp>
 8c0:	cmp	r0, #0
 8c4:	moveq	ip, #1
 8c8:	movne	ip, #0
 8cc:	b	8d4 <main+0xcc>
 8d0:	mov	ip, #1
 8d4:	cmp	ip, #0
 8d8:	beq	8e8 <main+0xe0>
 8dc:	bl	1d4 <print_version>
 8e0:	mov	r0, #0
 8e4:	bl	0 <exit>
 8e8:	mov	r8, #1
 8ec:	add	r0, r8, #1
 8f0:	cmp	r0, r5
 8f4:	bge	914 <main+0x10c>
 8f8:	ldr	r0, [r4, r8, lsl #2]
 8fc:	ldr	r1, [pc, #1236]	; dd8 <main+0x5d0>
 900:	bl	0 <strcmp>
 904:	cmp	r0, #0
 908:	moveq	r1, #1
 90c:	movne	r1, #0
 910:	b	918 <main+0x110>
 914:	mov	r1, #0
 918:	cmp	r1, #0
 91c:	bne	96c <main+0x164>
 920:	ldr	r2, [pc, #1228]	; df4 <main+0x5ec>
 924:	ldr	r0, [r4]
 928:	mov	r1, #0
 92c:	bl	0 <coda_set_definition_path_conditional>
 930:	cmp	r0, #0
 934:	beq	980 <main+0x178>
 938:	bl	0 <coda_get_errno>
 93c:	ldr	r0, [r0]
 940:	bl	0 <coda_errno_to_string>
 944:	ldr	r3, [pc, #1196]	; df8 <main+0x5f0>
 948:	ldr	r2, [r3]
 94c:	ldr	r1, [pc, #1144]	; dcc <main+0x5c4>
 950:	mov	r3, r0
 954:	mov	r0, r2
 958:	mov	r2, r3
 95c:	bl	0 <fprintf>
 960:	mov	r0, #1
 964:	bl	0 <exit>
 968:	b	980 <main+0x178>
 96c:	lsl	r1, r8, #2
 970:	add	ip, r4, r1
 974:	ldr	r0, [ip, #4]
 978:	bl	0 <coda_set_definition_path>
 97c:	add	r8, r8, #2
 980:	cmp	r8, r5
 984:	bge	af8 <main+0x2f0>
 988:	ldr	r0, [r4, r8, lsl #2]
 98c:	ldr	r1, [pc, #1088]	; dd4 <main+0x5cc>
 990:	bl	0 <strcmp>
 994:	cmp	r0, #0
 998:	beq	9b8 <main+0x1b0>
 99c:	ldr	r0, [r4, r8, lsl #2]
 9a0:	ldr	r1, [pc, #1024]	; da8 <main+0x5a0>
 9a4:	bl	0 <strcmp>
 9a8:	cmp	r0, #0
 9ac:	moveq	r2, #1
 9b0:	movne	r2, #0
 9b4:	b	9bc <main+0x1b4>
 9b8:	mov	r2, #1
 9bc:	cmp	r2, #0
 9c0:	bne	aec <main+0x2e4>
 9c4:	ldr	r0, [r4, r8, lsl #2]
 9c8:	ldr	r1, [pc, #1016]	; dc8 <main+0x5c0>
 9cc:	bl	0 <strcmp>
 9d0:	cmp	r0, #0
 9d4:	beq	9f4 <main+0x1ec>
 9d8:	ldr	r0, [r4, r8, lsl #2]
 9dc:	ldr	r1, [pc, #988]	; dc0 <main+0x5b8>
 9e0:	bl	0 <strcmp>
 9e4:	cmp	r0, #0
 9e8:	moveq	r2, #1
 9ec:	movne	r2, #0
 9f0:	b	9f8 <main+0x1f0>
 9f4:	mov	r2, #1
 9f8:	cmp	r2, #0
 9fc:	bne	ae4 <main+0x2dc>
 a00:	ldr	r0, [r4, r8, lsl #2]
 a04:	ldr	r1, [pc, #916]	; da0 <main+0x598>
 a08:	bl	0 <strcmp>
 a0c:	cmp	r0, #0
 a10:	bne	a28 <main+0x220>
 a14:	add	r0, r8, #1
 a18:	cmp	r0, r5
 a1c:	movlt	ip, #1
 a20:	movge	ip, #0
 a24:	b	a2c <main+0x224>
 a28:	mov	ip, #0
 a2c:	cmp	ip, #0
 a30:	beq	a54 <main+0x24c>
 a34:	lsl	r0, r8, #2
 a38:	add	r1, r4, r0
 a3c:	ldr	r1, [r1, #4]
 a40:	ldrb	ip, [r1]
 a44:	cmp	ip, #45	; 0x2d
 a48:	movne	r3, #1
 a4c:	moveq	r3, #0
 a50:	b	a58 <main+0x250>
 a54:	mov	r3, #0
 a58:	cmp	r3, #0
 a5c:	beq	ab4 <main+0x2ac>
 a60:	lsl	ip, r8, #2
 a64:	add	r3, r4, ip
 a68:	ldr	r0, [r3, #4]
 a6c:	ldr	r1, [pc, #840]	; dbc <main+0x5b4>
 a70:	bl	0 <coda_expression_from_string>
 a74:	cmp	r0, #0
 a78:	beq	aac <main+0x2a4>
 a7c:	bl	0 <coda_get_errno>
 a80:	ldr	r0, [r0]
 a84:	bl	0 <coda_errno_to_string>
 a88:	ldr	r1, [pc, #872]	; df8 <main+0x5f0>
 a8c:	ldr	r2, [r1]
 a90:	ldr	r1, [pc, #796]	; db4 <main+0x5ac>
 a94:	mov	ip, r0
 a98:	mov	r0, r2
 a9c:	mov	r2, ip
 aa0:	bl	0 <fprintf>
 aa4:	mov	r0, #1
 aa8:	bl	0 <exit>
 aac:	add	r8, r8, #1
 ab0:	b	af0 <main+0x2e8>
 ab4:	ldr	r3, [r4, r8, lsl #2]
 ab8:	ldrb	r2, [r3]
 abc:	cmp	r2, #45	; 0x2d
 ac0:	bne	af8 <main+0x2f0>
 ac4:	ldr	r1, [pc, #812]	; df8 <main+0x5f0>
 ac8:	ldr	r0, [r1]
 acc:	ldr	r1, [pc, #752]	; dc4 <main+0x5bc>
 ad0:	bl	0 <fprintf>
 ad4:	bl	21c <print_help>
 ad8:	mov	r0, #1
 adc:	bl	0 <exit>
 ae0:	b	af0 <main+0x2e8>
 ae4:	mov	r7, #0
 ae8:	b	af0 <main+0x2e8>
 aec:	mov	r6, #1
 af0:	add	r8, r8, #1
 af4:	b	980 <main+0x178>
 af8:	cmp	r8, r5
 afc:	blt	b1c <main+0x314>
 b00:	ldr	r3, [pc, #752]	; df8 <main+0x5f0>
 b04:	ldr	r0, [r3]
 b08:	ldr	r1, [pc, #692]	; dc4 <main+0x5bc>
 b0c:	bl	0 <fprintf>
 b10:	bl	21c <print_help>
 b14:	mov	r0, #1
 b18:	bl	0 <exit>
 b1c:	ldr	r0, [r4, r8, lsl #2]
 b20:	ldr	r1, [pc, #644]	; dac <main+0x5a4>
 b24:	bl	0 <coda_expression_from_string>
 b28:	cmp	r0, #0
 b2c:	beq	b58 <main+0x350>
 b30:	bl	0 <coda_get_errno>
 b34:	ldr	r0, [r0]
 b38:	bl	0 <coda_errno_to_string>
 b3c:	mov	r2, r0
 b40:	ldr	r1, [pc, #688]	; df8 <main+0x5f0>
 b44:	ldr	r0, [r1]
 b48:	ldr	r1, [pc, #596]	; da4 <main+0x59c>
 b4c:	bl	0 <fprintf>
 b50:	mov	r0, #1
 b54:	bl	0 <exit>
 b58:	add	r8, r8, #1
 b5c:	ldr	r0, [pc, #584]	; dac <main+0x5a4>
 b60:	ldr	r0, [r0]
 b64:	ldr	r1, [pc, #636]	; de8 <main+0x5e0>
 b68:	bl	0 <coda_expression_get_type>
 b6c:	cmp	r0, #0
 b70:	beq	b9c <main+0x394>
 b74:	bl	0 <coda_get_errno>
 b78:	ldr	r0, [r0]
 b7c:	bl	0 <coda_errno_to_string>
 b80:	mov	r2, r0
 b84:	ldr	r1, [pc, #620]	; df8 <main+0x5f0>
 b88:	ldr	r0, [r1]
 b8c:	ldr	r1, [pc, #568]	; dcc <main+0x5c4>
 b90:	bl	0 <fprintf>
 b94:	mov	r0, #1
 b98:	bl	0 <exit>
 b9c:	ldr	r2, [pc, #580]	; de8 <main+0x5e0>
 ba0:	ldr	r0, [r2]
 ba4:	cmp	r0, #4
 ba8:	beq	bc4 <main+0x3bc>
 bac:	ldr	r3, [pc, #564]	; de8 <main+0x5e0>
 bb0:	ldr	ip, [r3]
 bb4:	cmp	ip, #5
 bb8:	moveq	r2, #1
 bbc:	movne	r2, #0
 bc0:	b	bc8 <main+0x3c0>
 bc4:	mov	r2, #1
 bc8:	cmp	r2, #0
 bcc:	beq	bf8 <main+0x3f0>
 bd0:	ldr	r0, [pc, #528]	; de8 <main+0x5e0>
 bd4:	ldr	r0, [r0]
 bd8:	bl	0 <coda_expression_get_type_name>
 bdc:	mov	r2, r0
 be0:	ldr	r1, [pc, #528]	; df8 <main+0x5f0>
 be4:	ldr	r0, [r1]
 be8:	ldr	r1, [pc, #508]	; dec <main+0x5e4>
 bec:	bl	0 <fprintf>
 bf0:	mov	r0, #1
 bf4:	bl	0 <exit>
 bf8:	cmp	r6, #0
 bfc:	beq	c30 <main+0x428>
 c00:	ldr	r0, [pc, #420]	; dac <main+0x5a4>
 c04:	ldr	r0, [r0]
 c08:	bl	0 <coda_expression_delete>
 c0c:	ldr	r0, [pc, #424]	; dbc <main+0x5b4>
 c10:	ldr	r0, [r0]
 c14:	cmp	r0, #0
 c18:	beq	c28 <main+0x420>
 c1c:	ldr	r0, [pc, #408]	; dbc <main+0x5b4>
 c20:	ldr	r0, [r0]
 c24:	bl	0 <coda_expression_delete>
 c28:	mov	r0, #0
 c2c:	b	d80 <main+0x578>
 c30:	cmp	r8, r5
 c34:	bge	cc8 <main+0x4c0>
 c38:	bl	0 <coda_init>
 c3c:	cmp	r0, #0
 c40:	beq	c6c <main+0x464>
 c44:	bl	0 <coda_get_errno>
 c48:	ldr	r0, [r0]
 c4c:	bl	0 <coda_errno_to_string>
 c50:	mov	r2, r0
 c54:	ldr	ip, [pc, #412]	; df8 <main+0x5f0>
 c58:	ldr	r0, [ip]
 c5c:	ldr	r1, [pc, #360]	; dcc <main+0x5c4>
 c60:	bl	0 <fprintf>
 c64:	mov	r0, #1
 c68:	bl	0 <exit>
 c6c:	mov	r0, r7
 c70:	bl	0 <coda_set_option_perform_conversions>
 c74:	mov	r0, #0
 c78:	sub	r1, r5, r8
 c7c:	add	r2, r4, r8, lsl #2
 c80:	ldr	r3, [pc, #348]	; de4 <main+0x5dc>
 c84:	mov	r4, #0
 c88:	str	r4, [sp]
 c8c:	bl	0 <coda_match_filefilter>
 c90:	cmp	r0, #0
 c94:	beq	cc0 <main+0x4b8>
 c98:	bl	0 <coda_get_errno>
 c9c:	ldr	r0, [r0]
 ca0:	bl	0 <coda_errno_to_string>
 ca4:	mov	r2, r0
 ca8:	ldr	r3, [pc, #328]	; df8 <main+0x5f0>
 cac:	ldr	r0, [r3]
 cb0:	ldr	r1, [pc, #276]	; dcc <main+0x5c4>
 cb4:	bl	0 <fprintf>
 cb8:	mov	r0, #1
 cbc:	bl	0 <exit>
 cc0:	bl	0 <coda_done>
 cc4:	b	d54 <main+0x54c>
 cc8:	ldr	r0, [pc, #236]	; dbc <main+0x5b4>
 ccc:	ldr	r0, [r0]
 cd0:	cmp	r0, #0
 cd4:	beq	cf0 <main+0x4e8>
 cd8:	ldr	r0, [pc, #280]	; df8 <main+0x5f0>
 cdc:	ldr	r0, [r0]
 ce0:	ldr	r1, [pc, #248]	; de0 <main+0x5d8>
 ce4:	bl	0 <fprintf>
 ce8:	mov	r0, #1
 cec:	bl	0 <exit>
 cf0:	ldr	r0, [pc, #180]	; dac <main+0x5a4>
 cf4:	ldr	r0, [r0]
 cf8:	bl	0 <coda_expression_is_constant>
 cfc:	cmp	r0, #0
 d00:	bne	d1c <main+0x514>
 d04:	ldr	r0, [pc, #236]	; df8 <main+0x5f0>
 d08:	ldr	r0, [r0]
 d0c:	ldr	r1, [pc, #156]	; db0 <main+0x5a8>
 d10:	bl	0 <fprintf>
 d14:	mov	r0, #1
 d18:	bl	0 <exit>
 d1c:	mov	r0, #0
 d20:	bl	3ec <eval_expression>
 d24:	cmp	r0, #0
 d28:	beq	d54 <main+0x54c>
 d2c:	bl	0 <coda_get_errno>
 d30:	ldr	r0, [r0]
 d34:	bl	0 <coda_errno_to_string>
 d38:	mov	r2, r0
 d3c:	ldr	r0, [pc, #180]	; df8 <main+0x5f0>
 d40:	ldr	r0, [r0]
 d44:	ldr	r1, [pc, #128]	; dcc <main+0x5c4>
 d48:	bl	0 <fprintf>
 d4c:	mov	r0, #1
 d50:	bl	0 <exit>
 d54:	ldr	r0, [pc, #80]	; dac <main+0x5a4>
 d58:	ldr	r0, [r0]
 d5c:	bl	0 <coda_expression_delete>
 d60:	ldr	r0, [pc, #84]	; dbc <main+0x5b4>
 d64:	ldr	r0, [r0]
 d68:	cmp	r0, #0
 d6c:	beq	d7c <main+0x574>
 d70:	ldr	r0, [pc, #68]	; dbc <main+0x5b4>
 d74:	ldr	r0, [r0]
 d78:	bl	0 <coda_expression_delete>
 d7c:	mov	r0, #0
 d80:	ldr	r4, [sp, #16]
 d84:	ldr	r5, [sp, #20]
 d88:	ldr	r6, [sp, #24]
 d8c:	ldr	r7, [sp, #28]
 d90:	ldr	r8, [sp, #32]
 d94:	ldr	lr, [sp, #8]
 d98:	add	sp, sp, #40	; 0x28
 d9c:	bx	lr
 da0:	.word	0x0000089b
 da4:	.word	0x000006a7
 da8:	.word	0x00000529
 dac:	.word	0x00000000
 db0:	.word	0x00000240
 db4:	.word	0x000007f7
 db8:	.word	0x0000018f
 dbc:	.word	0x00000004
 dc0:	.word	0x0000007b
 dc4:	.word	0x000001ce
 dc8:	.word	0x00000049
 dcc:	.word	0x0000030d
 dd0:	.word	0x000000de
 dd4:	.word	0x00000a40
 dd8:	.word	0x000000e1
 ddc:	.word	0x00000429
 de0:	.word	0x00000738
	...
 dec:	.word	0x000007c0
 df0:	.word	0x0000037b
 df4:	.word	0x0000002f
 df8:	.word	0x00000000
