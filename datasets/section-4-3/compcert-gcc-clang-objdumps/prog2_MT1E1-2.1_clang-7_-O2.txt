
../compcert-repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010c70 <.init>:
   10c70:	push	{r3, lr}
   10c74:	bl	10d74 <_start@@Base+0x3c>
   10c78:	pop	{r3, pc}

Disassembly of section .plt:

00010c7c <calloc@plt-0x14>:
   10c7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10c80:	ldr	lr, [pc, #4]	; 10c8c <calloc@plt-0x4>
   10c84:	add	lr, pc, lr
   10c88:	ldr	pc, [lr, #8]!
   10c8c:	andeq	r2, r1, r4, ror r3

00010c90 <calloc@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #884]!	; 0x374

00010c9c <strcmp@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #876]!	; 0x36c

00010ca8 <free@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #868]!	; 0x364

00010cb4 <realloc@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #860]!	; 0x35c

00010cc0 <fwrite@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #852]!	; 0x354

00010ccc <strcpy@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #844]!	; 0x34c

00010cd8 <puts@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #836]!	; 0x344

00010ce4 <malloc@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #828]!	; 0x33c

00010cf0 <__libc_start_main@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #820]!	; 0x334

00010cfc <__gmon_start__@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #812]!	; 0x32c

00010d08 <strlen@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #804]!	; 0x324

00010d14 <fprintf@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #796]!	; 0x31c

00010d20 <putchar@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #788]!	; 0x314

00010d2c <abort@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #73728	; 0x12000
   10d34:	ldr	pc, [ip, #780]!	; 0x30c

Disassembly of section .text:

00010d38 <_start@@Base>:
   10d38:	mov	fp, #0
   10d3c:	mov	lr, #0
   10d40:	pop	{r1}		; (ldr r1, [sp], #4)
   10d44:	mov	r2, sp
   10d48:	push	{r2}		; (str r2, [sp, #-4]!)
   10d4c:	push	{r0}		; (str r0, [sp, #-4]!)
   10d50:	ldr	ip, [pc, #16]	; 10d68 <_start@@Base+0x30>
   10d54:	push	{ip}		; (str ip, [sp, #-4]!)
   10d58:	ldr	r0, [pc, #12]	; 10d6c <_start@@Base+0x34>
   10d5c:	ldr	r3, [pc, #12]	; 10d70 <_start@@Base+0x38>
   10d60:	bl	10cf0 <__libc_start_main@plt>
   10d64:	bl	10d2c <abort@plt>
   10d68:	andeq	r2, r1, r8, ror r1
   10d6c:	andeq	r1, r1, r0, ror r0
   10d70:	andeq	r2, r1, r8, lsl r1
   10d74:	ldr	r3, [pc, #20]	; 10d90 <_start@@Base+0x58>
   10d78:	ldr	r2, [pc, #20]	; 10d94 <_start@@Base+0x5c>
   10d7c:	add	r3, pc, r3
   10d80:	ldr	r2, [r3, r2]
   10d84:	cmp	r2, #0
   10d88:	bxeq	lr
   10d8c:	b	10cfc <__gmon_start__@plt>
   10d90:	andeq	r2, r1, ip, ror r2
   10d94:	andeq	r0, r0, r4, asr #32
   10d98:	ldr	r0, [pc, #24]	; 10db8 <_start@@Base+0x80>
   10d9c:	ldr	r3, [pc, #24]	; 10dbc <_start@@Base+0x84>
   10da0:	cmp	r3, r0
   10da4:	bxeq	lr
   10da8:	ldr	r3, [pc, #16]	; 10dc0 <_start@@Base+0x88>
   10dac:	cmp	r3, #0
   10db0:	bxeq	lr
   10db4:	bx	r3
   10db8:	muleq	r2, r8, r1
   10dbc:	muleq	r2, r8, r1
   10dc0:	andeq	r0, r0, r0
   10dc4:	ldr	r0, [pc, #36]	; 10df0 <_start@@Base+0xb8>
   10dc8:	ldr	r1, [pc, #36]	; 10df4 <_start@@Base+0xbc>
   10dcc:	sub	r1, r1, r0
   10dd0:	asr	r1, r1, #2
   10dd4:	add	r1, r1, r1, lsr #31
   10dd8:	asrs	r1, r1, #1
   10ddc:	bxeq	lr
   10de0:	ldr	r3, [pc, #16]	; 10df8 <_start@@Base+0xc0>
   10de4:	cmp	r3, #0
   10de8:	bxeq	lr
   10dec:	bx	r3
   10df0:	muleq	r2, r8, r1
   10df4:	muleq	r2, r8, r1
   10df8:	andeq	r0, r0, r0
   10dfc:	push	{r4, lr}
   10e00:	ldr	r4, [pc, #24]	; 10e20 <_start@@Base+0xe8>
   10e04:	ldrb	r3, [r4]
   10e08:	cmp	r3, #0
   10e0c:	popne	{r4, pc}
   10e10:	bl	10d98 <_start@@Base+0x60>
   10e14:	mov	r3, #1
   10e18:	strb	r3, [r4]
   10e1c:	pop	{r4, pc}
   10e20:	muleq	r2, ip, r1
   10e24:	b	10dc4 <_start@@Base+0x8c>

00010e28 <tira_carta@@Base>:
   10e28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10e2c:	add	fp, sp, #24
   10e30:	ldr	r8, [r0]
   10e34:	ldr	r4, [r1]
   10e38:	mov	r5, r0
   10e3c:	ldr	r6, [r8]
   10e40:	ldr	r0, [r4]
   10e44:	mov	r1, r6
   10e48:	bl	10c9c <strcmp@plt>
   10e4c:	mov	r7, #0
   10e50:	cmp	r0, #0
   10e54:	beq	10e74 <tira_carta@@Base+0x4c>
   10e58:	ldr	r4, [r4, #4]
   10e5c:	mov	r1, r6
   10e60:	ldr	r0, [r4]
   10e64:	bl	10c9c <strcmp@plt>
   10e68:	add	r7, r7, #1
   10e6c:	cmp	r0, #0
   10e70:	bne	10e58 <tira_carta@@Base+0x30>
   10e74:	mov	r0, r5
   10e78:	mov	r1, r8
   10e7c:	bl	11ed0 <lista_remove@@Base>
   10e80:	mov	r0, r7
   10e84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010e88 <faz_jogada@@Base>:
   10e88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e8c:	add	fp, sp, #28
   10e90:	sub	sp, sp, #20
   10e94:	ldr	r4, [r0]
   10e98:	str	r0, [sp, #16]
   10e9c:	str	r2, [sp, #12]
   10ea0:	mov	r7, r1
   10ea4:	lsl	r0, r4, #2
   10ea8:	bl	10ce4 <malloc@plt>
   10eac:	mov	r6, r0
   10eb0:	mvn	r5, #0
   10eb4:	cmp	r4, #1
   10eb8:	blt	10f6c <faz_jogada@@Base+0xe4>
   10ebc:	mov	r8, #0
   10ec0:	str	r6, [sp, #8]
   10ec4:	str	r7, [sp, #4]
   10ec8:	ldr	r0, [sp, #12]
   10ecc:	ldr	r4, [r7]
   10ed0:	ldr	r9, [r0]
   10ed4:	ldr	r6, [r4]
   10ed8:	ldr	r0, [r9]
   10edc:	mov	r1, r6
   10ee0:	bl	10c9c <strcmp@plt>
   10ee4:	cmp	r0, #0
   10ee8:	mov	sl, #0
   10eec:	beq	10f10 <faz_jogada@@Base+0x88>
   10ef0:	mov	sl, #0
   10ef4:	ldr	r9, [r9, #4]
   10ef8:	mov	r1, r6
   10efc:	ldr	r0, [r9]
   10f00:	bl	10c9c <strcmp@plt>
   10f04:	add	sl, sl, #1
   10f08:	cmp	r0, #0
   10f0c:	bne	10ef4 <faz_jogada@@Base+0x6c>
   10f10:	ldr	r7, [sp, #4]
   10f14:	mov	r1, r4
   10f18:	mov	r0, r7
   10f1c:	bl	11ed0 <lista_remove@@Base>
   10f20:	ldr	r6, [sp, #8]
   10f24:	ldr	r0, [sp, #16]
   10f28:	str	sl, [r6, r8, lsl #2]
   10f2c:	add	r8, r8, #1
   10f30:	ldr	r0, [r0]
   10f34:	cmp	r8, r0
   10f38:	blt	10ec8 <faz_jogada@@Base+0x40>
   10f3c:	cmp	r0, #1
   10f40:	blt	10f6c <faz_jogada@@Base+0xe4>
   10f44:	mov	r1, #0
   10f48:	mvn	r5, #0
   10f4c:	mvn	r2, #0
   10f50:	ldr	r3, [r6, r1, lsl #2]
   10f54:	cmp	r3, r2
   10f58:	movgt	r5, r1
   10f5c:	add	r1, r1, #1
   10f60:	movgt	r2, r3
   10f64:	cmp	r0, r1
   10f68:	bne	10f50 <faz_jogada@@Base+0xc8>
   10f6c:	mov	r0, r6
   10f70:	bl	10ca8 <free@plt>
   10f74:	ldr	r0, [sp, #16]
   10f78:	ldr	r0, [r0, #8]
   10f7c:	ldr	r0, [r0, r5, lsl #2]
   10f80:	sub	sp, fp, #28
   10f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010f88 <numero_vitorias@@Base>:
   10f88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10f8c:	add	fp, sp, #24
   10f90:	ldr	r6, [r0]
   10f94:	cmp	r6, #1
   10f98:	movlt	r5, #0
   10f9c:	movlt	r0, r5
   10fa0:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   10fa4:	ldr	r7, [r0, #8]
   10fa8:	mov	r8, r1
   10fac:	mov	r5, #0
   10fb0:	mov	r4, #0
   10fb4:	ldr	r1, [r7, r4, lsl #2]
   10fb8:	mov	r0, r8
   10fbc:	bl	10c9c <strcmp@plt>
   10fc0:	cmp	r0, #0
   10fc4:	add	r4, r4, #1
   10fc8:	addeq	r5, r5, #1
   10fcc:	cmp	r4, r6
   10fd0:	blt	10fb4 <numero_vitorias@@Base+0x2c>
   10fd4:	mov	r0, r5
   10fd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010fdc <insere_carta@@Base>:
   10fdc:	push	{fp, lr}
   10fe0:	mov	fp, sp
   10fe4:	sub	sp, sp, #8
   10fe8:	cmp	r1, #7
   10fec:	bgt	11004 <insere_carta@@Base+0x28>
   10ff0:	mov	r2, #0
   10ff4:	add	r1, r1, #50	; 0x32
   10ff8:	strb	r2, [sp, #5]
   10ffc:	strb	r1, [sp, #4]
   11000:	b	1105c <insere_carta@@Base+0x80>
   11004:	sub	r1, r1, #8
   11008:	cmp	r1, #4
   1100c:	bhi	1105c <insere_carta@@Base+0x80>
   11010:	add	r2, pc, #0
   11014:	ldr	pc, [r2, r1, lsl #2]
   11018:	andeq	r1, r1, ip, lsr #32
   1101c:	andeq	r1, r1, ip, lsr r0
   11020:	andeq	r1, r1, r4, asr #32
   11024:	andeq	r1, r1, ip, asr #32
   11028:	andeq	r1, r1, r4, asr r0
   1102c:	mov	r1, #0
   11030:	strb	r1, [sp, #6]
   11034:	movw	r1, #12337	; 0x3031
   11038:	b	11058 <insere_carta@@Base+0x7c>
   1103c:	mov	r1, #74	; 0x4a
   11040:	b	11058 <insere_carta@@Base+0x7c>
   11044:	mov	r1, #81	; 0x51
   11048:	b	11058 <insere_carta@@Base+0x7c>
   1104c:	mov	r1, #75	; 0x4b
   11050:	b	11058 <insere_carta@@Base+0x7c>
   11054:	mov	r1, #65	; 0x41
   11058:	strh	r1, [sp, #4]
   1105c:	ldr	r2, [r0]
   11060:	add	r1, sp, #4
   11064:	bl	11ddc <lista_insere@@Base>
   11068:	mov	sp, fp
   1106c:	pop	{fp, pc}

00011070 <main@@Base>:
   11070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11074:	add	fp, sp, #28
   11078:	sub	sp, sp, #20
   1107c:	bl	1190c <vetor_novo@@Base>
   11080:	movw	r4, #12368	; 0x3050
   11084:	mov	r2, #0
   11088:	mov	r5, r0
   1108c:	mov	r7, #0
   11090:	movt	r4, #2
   11094:	ldr	r1, [r4]
   11098:	bl	11a58 <vetor_insere@@Base>
   1109c:	ldr	r1, [r4, #4]
   110a0:	mov	r0, r5
   110a4:	mov	r2, #1
   110a8:	bl	11a58 <vetor_insere@@Base>
   110ac:	ldr	r1, [r4, #8]
   110b0:	mov	r0, r5
   110b4:	mov	r2, #2
   110b8:	bl	11a58 <vetor_insere@@Base>
   110bc:	ldr	r1, [r4, #12]
   110c0:	mov	r0, r5
   110c4:	mov	r2, #3
   110c8:	str	r5, [sp, #8]
   110cc:	bl	11a58 <vetor_insere@@Base>
   110d0:	bl	11d34 <lista_nova@@Base>
   110d4:	movw	r5, #12436	; 0x3094
   110d8:	mov	r4, r0
   110dc:	add	r6, sp, #16
   110e0:	mov	r8, #75	; 0x4b
   110e4:	mov	r9, #65	; 0x41
   110e8:	mov	sl, #0
   110ec:	movt	r5, #2
   110f0:	b	11154 <main@@Base+0xe4>
   110f4:	sub	r0, r0, #8
   110f8:	cmp	r0, #4
   110fc:	bhi	1116c <main@@Base+0xfc>
   11100:	add	r1, pc, #0
   11104:	ldr	pc, [r1, r0, lsl #2]
   11108:	andeq	r1, r1, ip, lsl r1
   1110c:	andeq	r1, r1, ip, lsr #2
   11110:	andeq	r1, r1, r8, lsr r1
   11114:	andeq	r1, r1, r4, asr #2
   11118:	andeq	r1, r1, ip, asr #2
   1111c:	movw	r0, #12337	; 0x3031
   11120:	strb	r7, [sp, #18]
   11124:	strh	r0, [sp, #16]
   11128:	b	1116c <main@@Base+0xfc>
   1112c:	mov	r0, #74	; 0x4a
   11130:	strh	r0, [sp, #16]
   11134:	b	1116c <main@@Base+0xfc>
   11138:	mov	r0, #81	; 0x51
   1113c:	strh	r0, [sp, #16]
   11140:	b	1116c <main@@Base+0xfc>
   11144:	strh	r8, [sp, #16]
   11148:	b	1116c <main@@Base+0xfc>
   1114c:	strh	r9, [sp, #16]
   11150:	b	1116c <main@@Base+0xfc>
   11154:	ldr	r0, [r5, sl, lsl #2]
   11158:	cmp	r0, #7
   1115c:	bgt	110f4 <main@@Base+0x84>
   11160:	add	r0, r0, #50	; 0x32
   11164:	strb	r7, [sp, #17]
   11168:	strb	r0, [sp, #16]
   1116c:	ldr	r2, [r4]
   11170:	mov	r0, r4
   11174:	mov	r1, r6
   11178:	bl	11ddc <lista_insere@@Base>
   1117c:	add	sl, sl, #1
   11180:	cmp	sl, #52	; 0x34
   11184:	bne	11154 <main@@Base+0xe4>
   11188:	bl	11d34 <lista_nova@@Base>
   1118c:	movw	r7, #12384	; 0x3060
   11190:	mov	r2, #0
   11194:	mov	r8, r0
   11198:	mov	r6, #0
   1119c:	movt	r7, #2
   111a0:	ldr	r1, [r7]
   111a4:	bl	11ddc <lista_insere@@Base>
   111a8:	ldr	r1, [r7, #4]
   111ac:	mov	r0, r8
   111b0:	mov	r2, #0
   111b4:	bl	11ddc <lista_insere@@Base>
   111b8:	ldr	r1, [r7, #8]
   111bc:	mov	r0, r8
   111c0:	mov	r2, #0
   111c4:	bl	11ddc <lista_insere@@Base>
   111c8:	ldr	r1, [r7, #12]
   111cc:	mov	r0, r8
   111d0:	mov	r2, #0
   111d4:	bl	11ddc <lista_insere@@Base>
   111d8:	ldr	r1, [r7, #16]
   111dc:	mov	r0, r8
   111e0:	mov	r2, #0
   111e4:	bl	11ddc <lista_insere@@Base>
   111e8:	ldr	r1, [r7, #20]
   111ec:	mov	r0, r8
   111f0:	mov	r2, #0
   111f4:	bl	11ddc <lista_insere@@Base>
   111f8:	ldr	r1, [r7, #24]
   111fc:	mov	r0, r8
   11200:	mov	r2, #0
   11204:	bl	11ddc <lista_insere@@Base>
   11208:	ldr	r1, [r7, #28]
   1120c:	mov	r0, r8
   11210:	mov	r2, #0
   11214:	bl	11ddc <lista_insere@@Base>
   11218:	ldr	r1, [r7, #32]
   1121c:	mov	r0, r8
   11220:	mov	r2, #0
   11224:	bl	11ddc <lista_insere@@Base>
   11228:	ldr	r1, [r7, #36]	; 0x24
   1122c:	mov	r0, r8
   11230:	mov	r2, #0
   11234:	bl	11ddc <lista_insere@@Base>
   11238:	ldr	r1, [r7, #40]	; 0x28
   1123c:	mov	r0, r8
   11240:	mov	r2, #0
   11244:	bl	11ddc <lista_insere@@Base>
   11248:	ldr	r1, [r7, #44]	; 0x2c
   1124c:	mov	r0, r8
   11250:	mov	r2, #0
   11254:	bl	11ddc <lista_insere@@Base>
   11258:	ldr	r1, [r7, #48]	; 0x30
   1125c:	mov	r0, r8
   11260:	mov	r2, #0
   11264:	bl	11ddc <lista_insere@@Base>
   11268:	movw	r0, #12696	; 0x3198
   1126c:	ldr	r1, [r4]
   11270:	ldr	sl, [r8]
   11274:	movt	r0, #2
   11278:	ldr	r0, [r0]
   1127c:	ldr	r9, [r1]
   11280:	str	r1, [sp, #4]
   11284:	str	r0, [sp, #12]
   11288:	ldr	r0, [sl]
   1128c:	mov	r1, r9
   11290:	bl	10c9c <strcmp@plt>
   11294:	cmp	r0, #0
   11298:	mov	r7, #0
   1129c:	beq	112c0 <main@@Base+0x250>
   112a0:	mov	r7, #0
   112a4:	ldr	sl, [sl, #4]
   112a8:	mov	r1, r9
   112ac:	ldr	r0, [sl]
   112b0:	bl	10c9c <strcmp@plt>
   112b4:	add	r7, r7, #1
   112b8:	cmp	r0, #0
   112bc:	bne	112a4 <main@@Base+0x234>
   112c0:	ldr	r1, [sp, #4]
   112c4:	mov	r0, r4
   112c8:	bl	11ed0 <lista_remove@@Base>
   112cc:	ldr	r0, [sp, #12]
   112d0:	movw	r1, #8643	; 0x21c3
   112d4:	mov	r2, r7
   112d8:	movt	r1, #1
   112dc:	bl	10d14 <fprintf@plt>
   112e0:	movw	r0, #12696	; 0x3198
   112e4:	ldr	sl, [r4]
   112e8:	ldr	r9, [r8]
   112ec:	movt	r0, #2
   112f0:	ldr	r0, [r0]
   112f4:	ldr	r7, [sl]
   112f8:	str	r0, [sp, #12]
   112fc:	ldr	r0, [r9]
   11300:	mov	r1, r7
   11304:	bl	10c9c <strcmp@plt>
   11308:	cmp	r0, #0
   1130c:	beq	11330 <main@@Base+0x2c0>
   11310:	mov	r6, #0
   11314:	ldr	r9, [r9, #4]
   11318:	mov	r1, r7
   1131c:	ldr	r0, [r9]
   11320:	bl	10c9c <strcmp@plt>
   11324:	add	r6, r6, #1
   11328:	cmp	r0, #0
   1132c:	bne	11314 <main@@Base+0x2a4>
   11330:	mov	r0, r4
   11334:	mov	r1, sl
   11338:	bl	11ed0 <lista_remove@@Base>
   1133c:	ldr	r0, [sp, #12]
   11340:	movw	r1, #8672	; 0x21e0
   11344:	mov	r2, r6
   11348:	movt	r1, #1
   1134c:	bl	10d14 <fprintf@plt>
   11350:	mov	r1, r4
   11354:	ldr	r4, [r8]
   11358:	movw	r0, #12696	; 0x3198
   1135c:	ldr	sl, [r1]
   11360:	movt	r0, #2
   11364:	str	r1, [sp, #12]
   11368:	ldr	r9, [r0]
   1136c:	ldr	r0, [r4]
   11370:	ldr	r7, [sl]
   11374:	mov	r1, r7
   11378:	bl	10c9c <strcmp@plt>
   1137c:	mov	r6, #0
   11380:	cmp	r0, #0
   11384:	beq	113a4 <main@@Base+0x334>
   11388:	ldr	r4, [r4, #4]
   1138c:	mov	r1, r7
   11390:	ldr	r0, [r4]
   11394:	bl	10c9c <strcmp@plt>
   11398:	add	r6, r6, #1
   1139c:	cmp	r0, #0
   113a0:	bne	11388 <main@@Base+0x318>
   113a4:	ldr	r4, [sp, #12]
   113a8:	mov	r1, sl
   113ac:	mov	r0, r4
   113b0:	bl	11ed0 <lista_remove@@Base>
   113b4:	movw	r1, #8700	; 0x21fc
   113b8:	mov	r0, r9
   113bc:	mov	r2, r6
   113c0:	movt	r1, #1
   113c4:	bl	10d14 <fprintf@plt>
   113c8:	ldr	r0, [r5, #196]	; 0xc4
   113cc:	mov	r6, r5
   113d0:	cmp	r0, #7
   113d4:	bgt	113f0 <main@@Base+0x380>
   113d8:	ldr	r5, [sp, #8]
   113dc:	mov	r1, #0
   113e0:	add	r0, r0, #50	; 0x32
   113e4:	strb	r1, [sp, #17]
   113e8:	strb	r0, [sp, #16]
   113ec:	b	1144c <main@@Base+0x3dc>
   113f0:	ldr	r5, [sp, #8]
   113f4:	sub	r0, r0, #8
   113f8:	cmp	r0, #4
   113fc:	bhi	1144c <main@@Base+0x3dc>
   11400:	add	r1, pc, #0
   11404:	ldr	pc, [r1, r0, lsl #2]
   11408:	andeq	r1, r1, ip, lsl r4
   1140c:	andeq	r1, r1, ip, lsr #8
   11410:	andeq	r1, r1, r4, lsr r4
   11414:	andeq	r1, r1, ip, lsr r4
   11418:	andeq	r1, r1, r4, asr #8
   1141c:	mov	r0, #0
   11420:	strb	r0, [sp, #18]
   11424:	movw	r0, #12337	; 0x3031
   11428:	b	11448 <main@@Base+0x3d8>
   1142c:	mov	r0, #74	; 0x4a
   11430:	b	11448 <main@@Base+0x3d8>
   11434:	mov	r0, #81	; 0x51
   11438:	b	11448 <main@@Base+0x3d8>
   1143c:	mov	r0, #75	; 0x4b
   11440:	b	11448 <main@@Base+0x3d8>
   11444:	mov	r0, #65	; 0x41
   11448:	strh	r0, [sp, #16]
   1144c:	ldr	r2, [r4]
   11450:	add	r1, sp, #16
   11454:	mov	r0, r4
   11458:	bl	11ddc <lista_insere@@Base>
   1145c:	ldr	r0, [r6, #200]	; 0xc8
   11460:	cmp	r0, #7
   11464:	bgt	1147c <main@@Base+0x40c>
   11468:	mov	r1, #0
   1146c:	add	r0, r0, #50	; 0x32
   11470:	strb	r1, [sp, #17]
   11474:	strb	r0, [sp, #16]
   11478:	b	114d4 <main@@Base+0x464>
   1147c:	sub	r0, r0, #8
   11480:	cmp	r0, #4
   11484:	bhi	114d4 <main@@Base+0x464>
   11488:	add	r1, pc, #0
   1148c:	ldr	pc, [r1, r0, lsl #2]
   11490:	andeq	r1, r1, r4, lsr #9
   11494:			; <UNDEFINED> instruction: 0x000114b4
   11498:			; <UNDEFINED> instruction: 0x000114bc
   1149c:	andeq	r1, r1, r4, asr #9
   114a0:	andeq	r1, r1, ip, asr #9
   114a4:	mov	r0, #0
   114a8:	strb	r0, [sp, #18]
   114ac:	movw	r0, #12337	; 0x3031
   114b0:	b	114d0 <main@@Base+0x460>
   114b4:	mov	r0, #74	; 0x4a
   114b8:	b	114d0 <main@@Base+0x460>
   114bc:	mov	r0, #81	; 0x51
   114c0:	b	114d0 <main@@Base+0x460>
   114c4:	mov	r0, #75	; 0x4b
   114c8:	b	114d0 <main@@Base+0x460>
   114cc:	mov	r0, #65	; 0x41
   114d0:	strh	r0, [sp, #16]
   114d4:	ldr	r2, [r4]
   114d8:	add	r1, sp, #16
   114dc:	mov	r0, r4
   114e0:	bl	11ddc <lista_insere@@Base>
   114e4:	ldr	r0, [r6, #204]	; 0xcc
   114e8:	cmp	r0, #7
   114ec:	bgt	11504 <main@@Base+0x494>
   114f0:	mov	r1, #0
   114f4:	add	r0, r0, #50	; 0x32
   114f8:	strb	r1, [sp, #17]
   114fc:	strb	r0, [sp, #16]
   11500:	b	1155c <main@@Base+0x4ec>
   11504:	sub	r0, r0, #8
   11508:	cmp	r0, #4
   1150c:	bhi	1155c <main@@Base+0x4ec>
   11510:	add	r1, pc, #0
   11514:	ldr	pc, [r1, r0, lsl #2]
   11518:	andeq	r1, r1, ip, lsr #10
   1151c:	andeq	r1, r1, ip, lsr r5
   11520:	andeq	r1, r1, r4, asr #10
   11524:	andeq	r1, r1, ip, asr #10
   11528:	andeq	r1, r1, r4, asr r5
   1152c:	mov	r0, #0
   11530:	strb	r0, [sp, #18]
   11534:	movw	r0, #12337	; 0x3031
   11538:	b	11558 <main@@Base+0x4e8>
   1153c:	mov	r0, #74	; 0x4a
   11540:	b	11558 <main@@Base+0x4e8>
   11544:	mov	r0, #81	; 0x51
   11548:	b	11558 <main@@Base+0x4e8>
   1154c:	mov	r0, #75	; 0x4b
   11550:	b	11558 <main@@Base+0x4e8>
   11554:	mov	r0, #65	; 0x41
   11558:	strh	r0, [sp, #16]
   1155c:	ldr	r2, [r4]
   11560:	add	r1, sp, #16
   11564:	mov	r0, r4
   11568:	bl	11ddc <lista_insere@@Base>
   1156c:	mov	r7, #0
   11570:	bl	1190c <vetor_novo@@Base>
   11574:	movw	r9, #8729	; 0x2219
   11578:	mov	r6, r0
   1157c:	movt	r9, #1
   11580:	b	115a4 <main@@Base+0x534>
   11584:	movw	r0, #12696	; 0x3198
   11588:	mov	r1, #44	; 0x2c
   1158c:	mov	r2, #1
   11590:	movt	r0, #2
   11594:	ldr	r3, [r0]
   11598:	mov	r0, r9
   1159c:	bl	10cc0 <fwrite@plt>
   115a0:	b	115dc <main@@Base+0x56c>
   115a4:	mov	r0, r5
   115a8:	mov	r1, r4
   115ac:	mov	r2, r8
   115b0:	bl	10e88 <faz_jogada@@Base>
   115b4:	cmp	r0, #0
   115b8:	beq	115cc <main@@Base+0x55c>
   115bc:	mov	r1, r0
   115c0:	mov	r0, r6
   115c4:	mov	r2, r7
   115c8:	bl	11a58 <vetor_insere@@Base>
   115cc:	mov	r0, r5
   115d0:	bl	11a20 <vetor_tamanho@@Base>
   115d4:	cmp	r0, #4
   115d8:	bne	11584 <main@@Base+0x514>
   115dc:	add	r7, r7, #1
   115e0:	cmp	r7, #13
   115e4:	bne	115a4 <main@@Base+0x534>
   115e8:	movw	r0, #8832	; 0x2280
   115ec:	str	r8, [sp, #4]
   115f0:	movt	r0, #1
   115f4:	bl	10cd8 <puts@plt>
   115f8:	ldr	r0, [r6]
   115fc:	cmp	r0, #1
   11600:	bge	118b4 <main@@Base+0x844>
   11604:	mov	r0, r6
   11608:	bl	1193c <vetor_apaga@@Base>
   1160c:	bl	1190c <vetor_novo@@Base>
   11610:	movw	r7, #12644	; 0x3164
   11614:	mov	r2, #0
   11618:	mov	r9, r0
   1161c:	mov	r6, #0
   11620:	movt	r7, #2
   11624:	ldr	r1, [r7]
   11628:	bl	11a58 <vetor_insere@@Base>
   1162c:	ldr	r1, [r7, #4]
   11630:	mov	r0, r9
   11634:	mov	r2, #1
   11638:	bl	11a58 <vetor_insere@@Base>
   1163c:	ldr	r1, [r7, #8]
   11640:	mov	r0, r9
   11644:	mov	r2, #2
   11648:	bl	11a58 <vetor_insere@@Base>
   1164c:	ldr	r1, [r7, #12]
   11650:	mov	r0, r9
   11654:	mov	r2, #3
   11658:	bl	11a58 <vetor_insere@@Base>
   1165c:	ldr	r1, [r7, #16]
   11660:	mov	r0, r9
   11664:	mov	r2, #4
   11668:	bl	11a58 <vetor_insere@@Base>
   1166c:	ldr	r1, [r7, #20]
   11670:	mov	r0, r9
   11674:	mov	r2, #5
   11678:	bl	11a58 <vetor_insere@@Base>
   1167c:	ldr	r1, [r7, #24]
   11680:	mov	r0, r9
   11684:	mov	r2, #6
   11688:	bl	11a58 <vetor_insere@@Base>
   1168c:	ldr	r1, [r7, #28]
   11690:	mov	r0, r9
   11694:	mov	r2, #7
   11698:	bl	11a58 <vetor_insere@@Base>
   1169c:	ldr	r1, [r7, #32]
   116a0:	mov	r0, r9
   116a4:	mov	r2, #8
   116a8:	bl	11a58 <vetor_insere@@Base>
   116ac:	ldr	r1, [r7, #36]	; 0x24
   116b0:	mov	r0, r9
   116b4:	mov	r2, #9
   116b8:	bl	11a58 <vetor_insere@@Base>
   116bc:	ldr	r1, [r7, #40]	; 0x28
   116c0:	mov	r0, r9
   116c4:	mov	r2, #10
   116c8:	bl	11a58 <vetor_insere@@Base>
   116cc:	ldr	r1, [r7, #44]	; 0x2c
   116d0:	mov	r0, r9
   116d4:	mov	r2, #11
   116d8:	bl	11a58 <vetor_insere@@Base>
   116dc:	ldr	r1, [r7, #48]	; 0x30
   116e0:	mov	r0, r9
   116e4:	mov	r2, #12
   116e8:	bl	11a58 <vetor_insere@@Base>
   116ec:	mov	r0, #10
   116f0:	bl	10d20 <putchar@plt>
   116f4:	movw	r0, #12368	; 0x3050
   116f8:	ldr	r8, [r9]
   116fc:	mov	sl, #0
   11700:	movt	r0, #2
   11704:	ldr	r7, [r0]
   11708:	movw	r0, #12696	; 0x3198
   1170c:	movt	r0, #2
   11710:	ldr	r5, [r0]
   11714:	cmp	r8, #1
   11718:	blt	11740 <main@@Base+0x6d0>
   1171c:	ldr	r4, [r9, #8]
   11720:	mov	sl, #0
   11724:	ldr	r1, [r4], #4
   11728:	mov	r0, r7
   1172c:	bl	10c9c <strcmp@plt>
   11730:	cmp	r0, #0
   11734:	addeq	sl, sl, #1
   11738:	subs	r8, r8, #1
   1173c:	bne	11724 <main@@Base+0x6b4>
   11740:	ldr	r8, [sp, #8]
   11744:	movw	r1, #8789	; 0x2255
   11748:	mov	r0, r5
   1174c:	mov	r2, r7
   11750:	mov	r3, sl
   11754:	movt	r1, #1
   11758:	bl	10d14 <fprintf@plt>
   1175c:	movw	r0, #12368	; 0x3050
   11760:	ldr	r4, [r9]
   11764:	movt	r0, #2
   11768:	ldr	r7, [r0, #4]
   1176c:	movw	r0, #12696	; 0x3198
   11770:	movt	r0, #2
   11774:	ldr	sl, [r0]
   11778:	cmp	r4, #1
   1177c:	blt	117a4 <main@@Base+0x734>
   11780:	ldr	r5, [r9, #8]
   11784:	mov	r6, #0
   11788:	ldr	r1, [r5], #4
   1178c:	mov	r0, r7
   11790:	bl	10c9c <strcmp@plt>
   11794:	cmp	r0, #0
   11798:	addeq	r6, r6, #1
   1179c:	subs	r4, r4, #1
   117a0:	bne	11788 <main@@Base+0x718>
   117a4:	movw	r1, #8789	; 0x2255
   117a8:	mov	r0, sl
   117ac:	mov	r2, r7
   117b0:	mov	r3, r6
   117b4:	movt	r1, #1
   117b8:	bl	10d14 <fprintf@plt>
   117bc:	movw	r0, #12368	; 0x3050
   117c0:	ldr	r4, [r9]
   117c4:	mov	r6, #0
   117c8:	mov	sl, #0
   117cc:	movt	r0, #2
   117d0:	ldr	r7, [r0, #8]
   117d4:	movw	r0, #12696	; 0x3198
   117d8:	movt	r0, #2
   117dc:	ldr	r0, [r0]
   117e0:	cmp	r4, #1
   117e4:	str	r0, [sp]
   117e8:	blt	11810 <main@@Base+0x7a0>
   117ec:	ldr	r5, [r9, #8]
   117f0:	mov	sl, #0
   117f4:	ldr	r1, [r5], #4
   117f8:	mov	r0, r7
   117fc:	bl	10c9c <strcmp@plt>
   11800:	cmp	r0, #0
   11804:	addeq	sl, sl, #1
   11808:	subs	r4, r4, #1
   1180c:	bne	117f4 <main@@Base+0x784>
   11810:	ldr	r0, [sp]
   11814:	movw	r1, #8789	; 0x2255
   11818:	mov	r2, r7
   1181c:	mov	r3, sl
   11820:	movt	r1, #1
   11824:	bl	10d14 <fprintf@plt>
   11828:	movw	r0, #12368	; 0x3050
   1182c:	ldr	r4, [r9]
   11830:	movt	r0, #2
   11834:	ldr	r7, [r0, #12]
   11838:	movw	r0, #12696	; 0x3198
   1183c:	movt	r0, #2
   11840:	ldr	sl, [r0]
   11844:	cmp	r4, #1
   11848:	blt	11870 <main@@Base+0x800>
   1184c:	ldr	r5, [r9, #8]
   11850:	mov	r6, #0
   11854:	ldr	r1, [r5], #4
   11858:	mov	r0, r7
   1185c:	bl	10c9c <strcmp@plt>
   11860:	cmp	r0, #0
   11864:	addeq	r6, r6, #1
   11868:	subs	r4, r4, #1
   1186c:	bne	11854 <main@@Base+0x7e4>
   11870:	movw	r1, #8789	; 0x2255
   11874:	mov	r0, sl
   11878:	mov	r2, r7
   1187c:	mov	r3, r6
   11880:	movt	r1, #1
   11884:	bl	10d14 <fprintf@plt>
   11888:	mov	r0, r8
   1188c:	bl	1193c <vetor_apaga@@Base>
   11890:	ldr	r0, [sp, #12]
   11894:	bl	11d64 <lista_apaga@@Base>
   11898:	ldr	r0, [sp, #4]
   1189c:	bl	11d64 <lista_apaga@@Base>
   118a0:	mov	r0, r9
   118a4:	bl	1193c <vetor_apaga@@Base>
   118a8:	mov	r0, #0
   118ac:	sub	sp, fp, #28
   118b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118b4:	movw	r9, #8774	; 0x2246
   118b8:	mov	r7, #1
   118bc:	movt	r9, #1
   118c0:	movw	r0, #12696	; 0x3198
   118c4:	sub	r1, r7, #1
   118c8:	movt	r0, #2
   118cc:	ldr	sl, [r0]
   118d0:	mov	r0, r6
   118d4:	bl	11a30 <vetor_elemento@@Base>
   118d8:	mov	r3, r0
   118dc:	mov	r0, sl
   118e0:	mov	r1, r9
   118e4:	mov	r2, r7
   118e8:	bl	10d14 <fprintf@plt>
   118ec:	cmp	r7, #2
   118f0:	bhi	11604 <main@@Base+0x594>
   118f4:	ldr	r1, [r6]
   118f8:	add	r0, r7, #1
   118fc:	cmp	r7, r1
   11900:	mov	r7, r0
   11904:	bge	11604 <main@@Base+0x594>
   11908:	b	118c0 <main@@Base+0x850>

0001190c <vetor_novo@@Base>:
   1190c:	push	{fp, lr}
   11910:	mov	fp, sp
   11914:	mov	r0, #12
   11918:	bl	10ce4 <malloc@plt>
   1191c:	cmp	r0, #0
   11920:	movne	r1, #0
   11924:	strne	r1, [r0]
   11928:	strne	r1, [r0, #4]
   1192c:	strne	r1, [r0, #8]
   11930:	popne	{fp, pc}
   11934:	mov	r0, #0
   11938:	pop	{fp, pc}

0001193c <vetor_apaga@@Base>:
   1193c:	cmp	r0, #0
   11940:	bxeq	lr
   11944:	push	{r4, r5, fp, lr}
   11948:	add	fp, sp, #8
   1194c:	ldr	r1, [r0]
   11950:	mov	r4, r0
   11954:	ldr	r0, [r0, #8]
   11958:	cmp	r1, #1
   1195c:	blt	11980 <vetor_apaga@@Base+0x44>
   11960:	mov	r5, #0
   11964:	ldr	r0, [r0, r5, lsl #2]
   11968:	bl	10ca8 <free@plt>
   1196c:	ldr	r1, [r4]
   11970:	ldr	r0, [r4, #8]
   11974:	add	r5, r5, #1
   11978:	cmp	r5, r1
   1197c:	blt	11964 <vetor_apaga@@Base+0x28>
   11980:	bl	10ca8 <free@plt>
   11984:	mov	r0, r4
   11988:	pop	{r4, r5, fp, lr}
   1198c:	b	10ca8 <free@plt>

00011990 <vetor_atribui@@Base>:
   11990:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11994:	add	fp, sp, #24
   11998:	mvn	r5, #0
   1199c:	cmp	r0, #0
   119a0:	beq	11a18 <vetor_atribui@@Base+0x88>
   119a4:	mov	r4, r1
   119a8:	cmp	r1, #0
   119ac:	blt	11a18 <vetor_atribui@@Base+0x88>
   119b0:	mov	r7, r0
   119b4:	ldr	r0, [r0]
   119b8:	cmp	r0, r4
   119bc:	ble	11a18 <vetor_atribui@@Base+0x88>
   119c0:	mov	r0, r2
   119c4:	mov	r8, r2
   119c8:	bl	10d08 <strlen@plt>
   119cc:	mov	r9, r0
   119d0:	ldr	r0, [r7, #8]
   119d4:	ldr	r6, [r0, r4, lsl #2]
   119d8:	mov	r0, r6
   119dc:	bl	10d08 <strlen@plt>
   119e0:	cmp	r9, r0
   119e4:	bls	11a08 <vetor_atribui@@Base+0x78>
   119e8:	add	r1, r9, #1
   119ec:	mov	r0, r6
   119f0:	bl	10cb4 <realloc@plt>
   119f4:	mov	r6, r0
   119f8:	ldr	r0, [r7, #8]
   119fc:	cmp	r6, #0
   11a00:	str	r6, [r0, r4, lsl #2]
   11a04:	beq	11a18 <vetor_atribui@@Base+0x88>
   11a08:	mov	r0, r6
   11a0c:	mov	r1, r8
   11a10:	bl	10ccc <strcpy@plt>
   11a14:	mov	r5, r4
   11a18:	mov	r0, r5
   11a1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011a20 <vetor_tamanho@@Base>:
   11a20:	cmp	r0, #0
   11a24:	ldrne	r0, [r0]
   11a28:	mvneq	r0, #0
   11a2c:	bx	lr

00011a30 <vetor_elemento@@Base>:
   11a30:	mov	r2, r0
   11a34:	mov	r0, #0
   11a38:	cmp	r2, #0
   11a3c:	bxeq	lr
   11a40:	cmp	r1, #0
   11a44:	ldrge	r3, [r2]
   11a48:	cmpge	r3, r1
   11a4c:	ldrgt	r0, [r2, #8]
   11a50:	ldrgt	r0, [r0, r1, lsl #2]
   11a54:	bx	lr

00011a58 <vetor_insere@@Base>:
   11a58:	push	{r4, r5, r6, r7, fp, lr}
   11a5c:	add	fp, sp, #16
   11a60:	mvn	r4, #0
   11a64:	cmp	r0, #0
   11a68:	beq	11b24 <vetor_insere@@Base+0xcc>
   11a6c:	mov	r5, r2
   11a70:	cmp	r2, #0
   11a74:	blt	11b24 <vetor_insere@@Base+0xcc>
   11a78:	mov	r6, r0
   11a7c:	ldr	r0, [r0]
   11a80:	cmp	r0, r5
   11a84:	blt	11b24 <vetor_insere@@Base+0xcc>
   11a88:	mov	r7, r1
   11a8c:	ldr	r1, [r6, #4]
   11a90:	cmp	r0, r1
   11a94:	bne	11ae0 <vetor_insere@@Base+0x88>
   11a98:	lsl	r1, r0, #1
   11a9c:	cmp	r0, #0
   11aa0:	movweq	r1, #1
   11aa4:	str	r1, [r6, #4]
   11aa8:	lsl	r1, r1, #2
   11aac:	ldr	r0, [r6, #8]
   11ab0:	bl	10cb4 <realloc@plt>
   11ab4:	cmp	r0, #0
   11ab8:	str	r0, [r6, #8]
   11abc:	beq	11b24 <vetor_insere@@Base+0xcc>
   11ac0:	ldr	r0, [r6]
   11ac4:	cmp	r0, r5
   11ac8:	ble	11ae8 <vetor_insere@@Base+0x90>
   11acc:	ldr	r1, [r6, #8]
   11ad0:	add	r2, r1, r0, lsl #2
   11ad4:	ldr	r2, [r2, #-4]
   11ad8:	str	r2, [r1, r0, lsl #2]
   11adc:	sub	r0, r0, #1
   11ae0:	cmp	r0, r5
   11ae4:	bgt	11acc <vetor_insere@@Base+0x74>
   11ae8:	mov	r0, r7
   11aec:	bl	10d08 <strlen@plt>
   11af0:	add	r0, r0, #1
   11af4:	mov	r1, #1
   11af8:	bl	10c90 <calloc@plt>
   11afc:	ldr	r1, [r6, #8]
   11b00:	cmp	r0, #0
   11b04:	str	r0, [r1, r5, lsl #2]
   11b08:	beq	11b24 <vetor_insere@@Base+0xcc>
   11b0c:	mov	r1, r7
   11b10:	bl	10ccc <strcpy@plt>
   11b14:	ldr	r0, [r6]
   11b18:	mov	r4, r5
   11b1c:	add	r0, r0, #1
   11b20:	str	r0, [r6]
   11b24:	mov	r0, r4
   11b28:	pop	{r4, r5, r6, r7, fp, pc}

00011b2c <vetor_remove@@Base>:
   11b2c:	push	{r4, r5, fp, lr}
   11b30:	add	fp, sp, #8
   11b34:	mov	r4, r0
   11b38:	mvn	r0, #0
   11b3c:	cmp	r4, #0
   11b40:	popeq	{r4, r5, fp, pc}
   11b44:	cmp	r1, #0
   11b48:	mov	r5, r1
   11b4c:	ldrge	r1, [r4]
   11b50:	cmpge	r1, r5
   11b54:	bgt	11b5c <vetor_remove@@Base+0x30>
   11b58:	pop	{r4, r5, fp, pc}
   11b5c:	ldr	r0, [r4, #8]
   11b60:	ldr	r0, [r0, r5, lsl #2]
   11b64:	bl	10ca8 <free@plt>
   11b68:	ldr	r0, [r4]
   11b6c:	add	r1, r5, #1
   11b70:	cmp	r1, r0
   11b74:	bge	11b9c <vetor_remove@@Base+0x70>
   11b78:	ldr	r1, [r4, #8]
   11b7c:	add	r2, r1, r5, lsl #2
   11b80:	ldr	r2, [r2, #4]
   11b84:	str	r2, [r1, r5, lsl #2]
   11b88:	add	r2, r5, #2
   11b8c:	add	r1, r5, #1
   11b90:	cmp	r2, r0
   11b94:	mov	r5, r1
   11b98:	blt	11b78 <vetor_remove@@Base+0x4c>
   11b9c:	sub	r0, r0, #1
   11ba0:	str	r0, [r4]
   11ba4:	mov	r0, #0
   11ba8:	pop	{r4, r5, fp, pc}

00011bac <vetor_pesquisa@@Base>:
   11bac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11bb0:	add	fp, sp, #24
   11bb4:	mvn	r8, #0
   11bb8:	cmp	r0, #0
   11bbc:	beq	11bfc <vetor_pesquisa@@Base+0x50>
   11bc0:	ldr	r6, [r0]
   11bc4:	cmp	r6, #1
   11bc8:	blt	11bfc <vetor_pesquisa@@Base+0x50>
   11bcc:	ldr	r4, [r0, #8]
   11bd0:	mov	r5, r1
   11bd4:	mov	r7, #0
   11bd8:	ldr	r0, [r4, r7, lsl #2]
   11bdc:	mov	r1, r5
   11be0:	bl	10c9c <strcmp@plt>
   11be4:	cmp	r0, #0
   11be8:	moveq	r0, r7
   11bec:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   11bf0:	add	r7, r7, #1
   11bf4:	cmp	r7, r6
   11bf8:	blt	11bd8 <vetor_pesquisa@@Base+0x2c>
   11bfc:	mov	r0, r8
   11c00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011c04 <vetor_ordena@@Base>:
   11c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c08:	add	fp, sp, #28
   11c0c:	sub	sp, sp, #4
   11c10:	cmp	r0, #0
   11c14:	mvneq	r0, #0
   11c18:	subeq	sp, fp, #28
   11c1c:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c20:	ldr	r1, [r0]
   11c24:	mov	sl, r0
   11c28:	mov	r0, #0
   11c2c:	cmp	r1, #2
   11c30:	str	r1, [sp]
   11c34:	blt	11cbc <vetor_ordena@@Base+0xb8>
   11c38:	ldr	r5, [sl, #8]
   11c3c:	mov	r8, #1
   11c40:	sub	r9, r8, #1
   11c44:	ldr	r6, [r5, r8, lsl #2]
   11c48:	ldr	r7, [r5, r9, lsl #2]
   11c4c:	mov	r0, r6
   11c50:	mov	r1, r7
   11c54:	bl	10c9c <strcmp@plt>
   11c58:	cmn	r0, #1
   11c5c:	bgt	11ca0 <vetor_ordena@@Base+0x9c>
   11c60:	add	r0, r5, r9, lsl #2
   11c64:	mov	r4, r9
   11c68:	str	r7, [r0, #4]
   11c6c:	add	r0, r9, #1
   11c70:	ldr	r5, [sl, #8]
   11c74:	cmp	r0, #2
   11c78:	blt	11ca4 <vetor_ordena@@Base+0xa0>
   11c7c:	add	r0, r5, r4, lsl #2
   11c80:	ldr	r7, [r0, #-4]
   11c84:	mov	r0, r6
   11c88:	mov	r1, r7
   11c8c:	bl	10c9c <strcmp@plt>
   11c90:	sub	r9, r4, #1
   11c94:	cmp	r0, #0
   11c98:	blt	11c60 <vetor_ordena@@Base+0x5c>
   11c9c:	b	11ca4 <vetor_ordena@@Base+0xa0>
   11ca0:	mov	r4, r8
   11ca4:	ldr	r0, [sp]
   11ca8:	add	r8, r8, #1
   11cac:	str	r6, [r5, r4, lsl #2]
   11cb0:	cmp	r8, r0
   11cb4:	blt	11c40 <vetor_ordena@@Base+0x3c>
   11cb8:	mov	r0, #0
   11cbc:	sub	sp, fp, #28
   11cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011cc4 <novo_str@@Base>:
   11cc4:	push	{r4, r5, r6, sl, fp, lr}
   11cc8:	add	fp, sp, #16
   11ccc:	mov	r6, r0
   11cd0:	mov	r0, #12
   11cd4:	bl	10ce4 <malloc@plt>
   11cd8:	mov	r5, #0
   11cdc:	cmp	r0, #0
   11ce0:	beq	11d1c <novo_str@@Base+0x58>
   11ce4:	mov	r4, r0
   11ce8:	mov	r0, r6
   11cec:	bl	10d08 <strlen@plt>
   11cf0:	add	r0, r0, #1
   11cf4:	bl	10ce4 <malloc@plt>
   11cf8:	cmp	r0, #0
   11cfc:	str	r0, [r4]
   11d00:	beq	11d24 <novo_str@@Base+0x60>
   11d04:	mov	r1, r6
   11d08:	bl	10ccc <strcpy@plt>
   11d0c:	mov	r0, #0
   11d10:	mov	r5, r4
   11d14:	str	r0, [r4, #4]
   11d18:	str	r0, [r4, #8]
   11d1c:	mov	r0, r5
   11d20:	pop	{r4, r5, r6, sl, fp, pc}
   11d24:	mov	r0, r4
   11d28:	bl	10ca8 <free@plt>
   11d2c:	mov	r0, r5
   11d30:	pop	{r4, r5, r6, sl, fp, pc}

00011d34 <lista_nova@@Base>:
   11d34:	push	{fp, lr}
   11d38:	mov	fp, sp
   11d3c:	mov	r0, #12
   11d40:	bl	10ce4 <malloc@plt>
   11d44:	cmp	r0, #0
   11d48:	movne	r1, #0
   11d4c:	strne	r1, [r0]
   11d50:	strne	r1, [r0, #4]
   11d54:	strne	r1, [r0, #8]
   11d58:	popne	{fp, pc}
   11d5c:	mov	r0, #0
   11d60:	pop	{fp, pc}

00011d64 <lista_apaga@@Base>:
   11d64:	cmp	r0, #0
   11d68:	bxeq	lr
   11d6c:	push	{r4, r5, fp, lr}
   11d70:	add	fp, sp, #8
   11d74:	mov	r4, r0
   11d78:	b	11d94 <lista_apaga@@Base+0x30>
   11d7c:	ldr	r0, [r5, #4]
   11d80:	str	r0, [r4]
   11d84:	ldr	r0, [r5]
   11d88:	bl	10ca8 <free@plt>
   11d8c:	mov	r0, r5
   11d90:	bl	10ca8 <free@plt>
   11d94:	ldr	r5, [r4]
   11d98:	cmp	r5, #0
   11d9c:	bne	11d7c <lista_apaga@@Base+0x18>
   11da0:	mov	r0, r4
   11da4:	pop	{r4, r5, fp, lr}
   11da8:	b	10ca8 <free@plt>

00011dac <lista_tamanho@@Base>:
   11dac:	cmp	r0, #0
   11db0:	ldrne	r0, [r0, #8]
   11db4:	mvneq	r0, #0
   11db8:	bx	lr

00011dbc <lista_inicio@@Base>:
   11dbc:	cmp	r0, #0
   11dc0:	ldrne	r0, [r0]
   11dc4:	moveq	r0, #0
   11dc8:	bx	lr

00011dcc <lista_fim@@Base>:
   11dcc:	cmp	r0, #0
   11dd0:	ldrne	r0, [r0, #4]
   11dd4:	moveq	r0, #0
   11dd8:	bx	lr

00011ddc <lista_insere@@Base>:
   11ddc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11de0:	add	fp, sp, #24
   11de4:	cmp	r0, #0
   11de8:	mov	r7, #0
   11dec:	movne	r6, r1
   11df0:	cmpne	r1, #0
   11df4:	bne	11e00 <lista_insere@@Base+0x24>
   11df8:	mov	r0, r7
   11dfc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11e00:	mov	r5, r0
   11e04:	mov	r0, #12
   11e08:	mov	r8, r2
   11e0c:	bl	10ce4 <malloc@plt>
   11e10:	cmp	r0, #0
   11e14:	beq	11df8 <lista_insere@@Base+0x1c>
   11e18:	mov	r4, r0
   11e1c:	mov	r0, r6
   11e20:	bl	10d08 <strlen@plt>
   11e24:	add	r0, r0, #1
   11e28:	bl	10ce4 <malloc@plt>
   11e2c:	cmp	r0, #0
   11e30:	str	r0, [r4]
   11e34:	beq	11e84 <lista_insere@@Base+0xa8>
   11e38:	mov	r1, r6
   11e3c:	bl	10ccc <strcpy@plt>
   11e40:	mov	r0, #0
   11e44:	cmp	r8, #0
   11e48:	str	r0, [r4, #4]
   11e4c:	str	r0, [r4, #8]
   11e50:	ldr	r1, [r5, #8]
   11e54:	ldr	r0, [r5]
   11e58:	add	r1, r1, #1
   11e5c:	str	r1, [r5, #8]
   11e60:	beq	11e94 <lista_insere@@Base+0xb8>
   11e64:	cmp	r0, r8
   11e68:	beq	11eac <lista_insere@@Base+0xd0>
   11e6c:	ldr	r0, [r8, #8]
   11e70:	str	r8, [r4, #4]
   11e74:	str	r0, [r4, #8]
   11e78:	str	r4, [r0, #4]
   11e7c:	str	r4, [r8, #8]
   11e80:	b	11ec4 <lista_insere@@Base+0xe8>
   11e84:	mov	r0, r4
   11e88:	bl	10ca8 <free@plt>
   11e8c:	mov	r0, r7
   11e90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11e94:	cmp	r0, #0
   11e98:	beq	11ebc <lista_insere@@Base+0xe0>
   11e9c:	ldr	r0, [r5, #4]
   11ea0:	str	r0, [r4, #8]
   11ea4:	str	r4, [r0, #4]
   11ea8:	b	11ec0 <lista_insere@@Base+0xe4>
   11eac:	str	r8, [r4, #4]
   11eb0:	str	r4, [r8, #8]
   11eb4:	str	r4, [r5]
   11eb8:	b	11ec4 <lista_insere@@Base+0xe8>
   11ebc:	str	r4, [r5]
   11ec0:	str	r4, [r5, #4]
   11ec4:	mov	r7, r4
   11ec8:	mov	r0, r7
   11ecc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011ed0 <lista_remove@@Base>:
   11ed0:	push	{r4, r5, fp, lr}
   11ed4:	add	fp, sp, #8
   11ed8:	cmp	r0, #0
   11edc:	mov	r4, #0
   11ee0:	movne	r5, r1
   11ee4:	cmpne	r1, #0
   11ee8:	bne	11ef4 <lista_remove@@Base+0x24>
   11eec:	mov	r0, r4
   11ef0:	pop	{r4, r5, fp, pc}
   11ef4:	ldr	r1, [r0, #8]
   11ef8:	sub	r1, r1, #1
   11efc:	str	r1, [r0, #8]
   11f00:	ldr	r1, [r5, #8]
   11f04:	ldr	r4, [r5, #4]
   11f08:	cmp	r1, #0
   11f0c:	streq	r4, [r0]
   11f10:	strne	r4, [r1, #4]
   11f14:	ldrne	r4, [r5, #4]
   11f18:	add	r2, r4, #8
   11f1c:	cmp	r4, #0
   11f20:	addeq	r2, r0, #4
   11f24:	str	r1, [r2]
   11f28:	ldr	r0, [r5]
   11f2c:	bl	10ca8 <free@plt>
   11f30:	mov	r0, r5
   11f34:	bl	10ca8 <free@plt>
   11f38:	mov	r0, r4
   11f3c:	pop	{r4, r5, fp, pc}

00011f40 <lista_pesquisa@@Base>:
   11f40:	push	{r4, r5, r6, sl, fp, lr}
   11f44:	add	fp, sp, #16
   11f48:	cmp	r0, #0
   11f4c:	mov	r4, #0
   11f50:	movne	r5, r1
   11f54:	cmpne	r1, #0
   11f58:	bne	11f64 <lista_pesquisa@@Base+0x24>
   11f5c:	mov	r0, r4
   11f60:	pop	{r4, r5, r6, sl, fp, pc}
   11f64:	cmp	r2, #1
   11f68:	bhi	11f5c <lista_pesquisa@@Base+0x1c>
   11f6c:	cmp	r2, #0
   11f70:	beq	11fa8 <lista_pesquisa@@Base+0x68>
   11f74:	ldr	r6, [r0, #4]
   11f78:	cmp	r6, #0
   11f7c:	bne	11f90 <lista_pesquisa@@Base+0x50>
   11f80:	b	11f5c <lista_pesquisa@@Base+0x1c>
   11f84:	ldr	r6, [r6, #8]
   11f88:	cmp	r6, #0
   11f8c:	beq	11f5c <lista_pesquisa@@Base+0x1c>
   11f90:	ldr	r0, [r6]
   11f94:	mov	r1, r5
   11f98:	bl	10c9c <strcmp@plt>
   11f9c:	cmp	r0, #0
   11fa0:	bne	11f84 <lista_pesquisa@@Base+0x44>
   11fa4:	b	11fd8 <lista_pesquisa@@Base+0x98>
   11fa8:	ldr	r6, [r0]
   11fac:	cmp	r6, #0
   11fb0:	bne	11fc4 <lista_pesquisa@@Base+0x84>
   11fb4:	b	11f5c <lista_pesquisa@@Base+0x1c>
   11fb8:	ldr	r6, [r6, #4]
   11fbc:	cmp	r6, #0
   11fc0:	beq	11f5c <lista_pesquisa@@Base+0x1c>
   11fc4:	ldr	r0, [r6]
   11fc8:	mov	r1, r5
   11fcc:	bl	10c9c <strcmp@plt>
   11fd0:	cmp	r0, #0
   11fd4:	bne	11fb8 <lista_pesquisa@@Base+0x78>
   11fd8:	mov	r4, r6
   11fdc:	mov	r0, r4
   11fe0:	pop	{r4, r5, r6, sl, fp, pc}

00011fe4 <lista_ordena@@Base>:
   11fe4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11fe8:	add	fp, sp, #24
   11fec:	cmp	r0, #0
   11ff0:	beq	1206c <lista_ordena@@Base+0x88>
   11ff4:	ldr	r0, [r0]
   11ff8:	mov	r8, #0
   11ffc:	mov	r5, r0
   12000:	ldr	r4, [r5, #4]!
   12004:	cmp	r4, #0
   12008:	bne	1203c <lista_ordena@@Base+0x58>
   1200c:	b	12070 <lista_ordena@@Base+0x8c>
   12010:	cmp	r7, r9
   12014:	mov	r0, r4
   12018:	ldrne	r0, [r9]
   1201c:	ldrne	r1, [r7]
   12020:	strne	r1, [r9]
   12024:	strne	r0, [r7]
   12028:	ldrne	r0, [r5]
   1202c:	mov	r5, r0
   12030:	ldr	r4, [r5, #4]!
   12034:	cmp	r4, #0
   12038:	beq	12070 <lista_ordena@@Base+0x8c>
   1203c:	mov	r9, r0
   12040:	mov	r7, r0
   12044:	mov	r6, r4
   12048:	ldr	r1, [r7]
   1204c:	ldr	r0, [r6]
   12050:	bl	10c9c <strcmp@plt>
   12054:	cmp	r0, #0
   12058:	movlt	r7, r6
   1205c:	ldr	r6, [r6, #4]
   12060:	cmp	r6, #0
   12064:	bne	12048 <lista_ordena@@Base+0x64>
   12068:	b	12010 <lista_ordena@@Base+0x2c>
   1206c:	mvn	r8, #0
   12070:	mov	r0, r8
   12074:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012078 <lista_inverte@@Base>:
   12078:	cmp	r0, #0
   1207c:	mvneq	r1, #0
   12080:	moveq	r0, r1
   12084:	bxeq	lr
   12088:	ldr	r2, [r0, #8]
   1208c:	mov	r1, #0
   12090:	cmp	r2, #2
   12094:	blt	12110 <lista_inverte@@Base+0x98>
   12098:	bne	120a4 <lista_inverte@@Base+0x2c>
   1209c:	ldr	r2, [r0]
   120a0:	b	120ec <lista_inverte@@Base+0x74>
   120a4:	push	{fp, lr}
   120a8:	mov	fp, sp
   120ac:	ldr	ip, [r0]
   120b0:	sub	r1, r2, #2
   120b4:	ldr	r3, [ip, #4]
   120b8:	mov	r2, r3
   120bc:	ldr	r3, [r3, #4]
   120c0:	subs	r1, r1, #1
   120c4:	ldr	lr, [r2, #8]
   120c8:	str	r3, [lr, #4]
   120cc:	ldr	r3, [r2, #4]
   120d0:	str	lr, [r3, #8]
   120d4:	str	ip, [r2, #4]
   120d8:	str	r2, [ip, #8]
   120dc:	mov	ip, r2
   120e0:	bne	120b8 <lista_inverte@@Base+0x40>
   120e4:	str	r2, [r0]
   120e8:	pop	{fp, lr}
   120ec:	ldr	r3, [r0, #4]
   120f0:	mov	r1, #0
   120f4:	ldr	ip, [r3, #8]
   120f8:	str	ip, [r0, #4]
   120fc:	str	r1, [ip, #4]
   12100:	str	r2, [r3, #4]
   12104:	str	r1, [r3, #8]
   12108:	str	r3, [r2, #8]
   1210c:	str	r3, [r0]
   12110:	mov	r0, r1
   12114:	bx	lr

00012118 <__libc_csu_init@@Base>:
   12118:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1211c:	mov	r7, r0
   12120:	ldr	r6, [pc, #72]	; 12170 <__libc_csu_init@@Base+0x58>
   12124:	ldr	r5, [pc, #72]	; 12174 <__libc_csu_init@@Base+0x5c>
   12128:	add	r6, pc, r6
   1212c:	add	r5, pc, r5
   12130:	sub	r6, r6, r5
   12134:	mov	r8, r1
   12138:	mov	r9, r2
   1213c:	bl	10c70 <calloc@plt-0x20>
   12140:	asrs	r6, r6, #2
   12144:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12148:	mov	r4, #0
   1214c:	add	r4, r4, #1
   12150:	ldr	r3, [r5], #4
   12154:	mov	r2, r9
   12158:	mov	r1, r8
   1215c:	mov	r0, r7
   12160:	blx	r3
   12164:	cmp	r6, r4
   12168:	bne	1214c <__libc_csu_init@@Base+0x34>
   1216c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12170:	ldrdeq	r0, [r1], -ip
   12174:	ldrdeq	r0, [r1], -r4

00012178 <__libc_csu_fini@@Base>:
   12178:	bx	lr

Disassembly of section .fini:

0001217c <.fini>:
   1217c:	push	{r3, lr}
   12180:	pop	{r3, pc}
