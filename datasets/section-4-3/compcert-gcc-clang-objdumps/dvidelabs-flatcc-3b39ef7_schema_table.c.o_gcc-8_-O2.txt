
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/hash_tables/schema_table.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ht_clear>:
   0:	str	r4, [sp, #-8]!
   4:	mov	r4, r0
   8:	ldr	r0, [r0]
   c:	str	lr, [sp, #4]
  10:	cmp	r0, #0
  14:	beq	1c <ht_clear+0x1c>
  18:	bl	0 <free>
  1c:	mov	r3, #0
  20:	str	r3, [r4]
  24:	str	r3, [r4, #4]
  28:	str	r3, [r4, #8]
  2c:	str	r3, [r4, #12]
  30:	ldr	r4, [sp]
  34:	add	sp, sp, #4
  38:	pop	{pc}		; (ldr pc, [sp], #4)

0000003c <ht_insert>:
  3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
  40:	strd	r6, [sp, #8]
  44:	strd	r8, [sp, #16]
  48:	strd	sl, [sp, #24]
  4c:	subs	fp, r3, #0
  50:	str	lr, [sp, #32]
  54:	sub	sp, sp, #28
  58:	str	r1, [sp, #8]
  5c:	beq	220 <ht_insert+0x1e4>
  60:	cmp	fp, #2
  64:	beq	200 <ht_insert+0x1c4>
  68:	cmp	fp, #1
  6c:	beq	240 <ht_insert+0x204>
  70:	mov	r3, #179	; 0xb3
  74:	ldr	r1, [r0, #8]
  78:	mov	r9, r2
  7c:	mov	sl, r0
  80:	ldr	r8, [r0, #12]
  84:	mul	r3, r3, r8
  88:	cmp	r1, r3, lsr #8
  8c:	bcs	178 <ht_insert+0x13c>
  90:	add	ip, sp, #16
  94:	movw	r1, #15186	; 0x3b52
  98:	movt	r1, #12137	; 0x2f69
  9c:	mov	r3, #0
  a0:	ldr	r7, [sl]
  a4:	mov	r2, r9
  a8:	sub	r8, r8, #1
  ac:	stm	sp, {r1, ip}
  b0:	ldr	r0, [sp, #8]
  b4:	bl	0 <cmetrohash64_1>
  b8:	ldr	r6, [sp, #16]
  bc:	ldr	r3, [sp, #64]	; 0x40
  c0:	sub	r3, r3, #2
  c4:	cmp	r3, #1
  c8:	and	r3, r8, r6
  cc:	add	r4, r7, r3, lsl #2
  d0:	bls	1b8 <ht_insert+0x17c>
  d4:	ldr	r5, [r7, r3, lsl #2]
  d8:	cmp	r5, #0
  dc:	moveq	r3, r4
  e0:	beq	1a0 <ht_insert+0x164>
  e4:	mov	r3, #0
  e8:	add	r6, r6, #1
  ec:	str	sl, [sp, #12]
  f0:	mov	sl, r8
  f4:	mov	r8, r3
  f8:	b	120 <ht_insert+0xe4>
  fc:	ldr	r2, [r5, #148]	; 0x94
 100:	cmp	r9, r2
 104:	beq	134 <ht_insert+0xf8>
 108:	and	r4, sl, r6
 10c:	add	r6, r6, #1
 110:	ldr	r5, [r7, r4, lsl #2]
 114:	add	r4, r7, r4, lsl #2
 118:	cmp	r5, #0
 11c:	beq	190 <ht_insert+0x154>
 120:	cmp	r5, #2
 124:	bne	fc <ht_insert+0xc0>
 128:	cmp	r8, #0
 12c:	moveq	r8, r4
 130:	b	108 <ht_insert+0xcc>
 134:	mov	r2, r9
 138:	ldr	r0, [sp, #8]
 13c:	ldr	r1, [r5, #144]	; 0x90
 140:	bl	0 <memcmp>
 144:	cmp	r0, #0
 148:	bne	108 <ht_insert+0xcc>
 14c:	ldr	r3, [sp, #64]	; 0x40
 150:	cmp	r3, #0
 154:	streq	fp, [r4]
 158:	mov	r0, r5
 15c:	add	sp, sp, #28
 160:	ldrd	r4, [sp]
 164:	ldrd	r6, [sp, #8]
 168:	ldrd	r8, [sp, #16]
 16c:	ldrd	sl, [sp, #24]
 170:	add	sp, sp, #32
 174:	pop	{pc}		; (ldr pc, [sp], #4)
 178:	lsl	r1, r1, #1
 17c:	bl	288 <ht_resize>
 180:	cmp	r0, #0
 184:	bne	260 <ht_insert+0x224>
 188:	ldr	r8, [sl, #12]
 18c:	b	90 <ht_insert+0x54>
 190:	ldr	sl, [sp, #12]
 194:	cmp	r8, #0
 198:	mov	r3, r8
 19c:	moveq	r3, r4
 1a0:	ldr	r2, [sl, #8]
 1a4:	mov	r5, #0
 1a8:	add	r2, r2, #1
 1ac:	str	r2, [sl, #8]
 1b0:	str	fp, [r3]
 1b4:	b	158 <ht_insert+0x11c>
 1b8:	ldr	r2, [sl, #8]
 1bc:	ldr	r1, [r7, r3, lsl #2]
 1c0:	add	r3, r2, #1
 1c4:	cmp	r1, #2
 1c8:	cmpne	r1, #0
 1cc:	str	r3, [sl, #8]
 1d0:	beq	1f4 <ht_insert+0x1b8>
 1d4:	add	r6, r6, #1
 1d8:	and	r4, r8, r6
 1dc:	add	r6, r6, #1
 1e0:	ldr	r3, [r7, r4, lsl #2]
 1e4:	add	r4, r7, r4, lsl #2
 1e8:	cmp	r3, #0
 1ec:	cmpne	r3, #2
 1f0:	bne	1d8 <ht_insert+0x19c>
 1f4:	mov	r5, #0
 1f8:	str	fp, [r4]
 1fc:	b	158 <ht_insert+0x11c>
 200:	movw	r3, #0
 204:	movt	r3, #0
 208:	movw	r1, #0
 20c:	movt	r1, #0
 210:	movw	r0, #0
 214:	movt	r0, #0
 218:	mov	r2, #115	; 0x73
 21c:	bl	0 <__assert_fail>
 220:	movw	r3, #0
 224:	movt	r3, #0
 228:	movw	r1, #0
 22c:	movt	r1, #0
 230:	movw	r0, #0
 234:	movt	r0, #0
 238:	mov	r2, #114	; 0x72
 23c:	bl	0 <__assert_fail>
 240:	movw	r3, #0
 244:	movt	r3, #0
 248:	movw	r1, #0
 24c:	movt	r1, #0
 250:	movw	r0, #0
 254:	movt	r0, #0
 258:	mov	r2, #116	; 0x74
 25c:	bl	0 <__assert_fail>
 260:	movw	r3, #0
 264:	movt	r3, #0
 268:	movw	r2, #0
 26c:	movt	r2, #0
 270:	ldr	r0, [r3]
 274:	movw	r1, #0
 278:	movt	r1, #0
 27c:	bl	0 <fprintf>
 280:	mov	r0, #1
 284:	bl	0 <exit>

00000288 <ht_resize>:
 288:	ldr	r3, [r0, #8]
 28c:	strd	r4, [sp, #-24]!	; 0xffffffe8
 290:	strd	r6, [sp, #8]
 294:	mov	r7, r0
 298:	str	r8, [sp, #16]
 29c:	str	lr, [sp, #20]
 2a0:	sub	sp, sp, #24
 2a4:	cmp	r1, r3
 2a8:	ldr	r6, [r0]
 2ac:	movcc	r1, r3
 2b0:	cmp	r1, #2
 2b4:	bls	398 <ht_resize+0x110>
 2b8:	mov	r3, #4
 2bc:	movw	r0, #358	; 0x166
 2c0:	mul	r2, r0, r3
 2c4:	lsl	r5, r3, #1
 2c8:	cmp	r1, r2, lsr #8
 2cc:	mov	r3, r5
 2d0:	bhi	2c0 <ht_resize+0x38>
 2d4:	mov	r1, #4
 2d8:	mov	r0, r5
 2dc:	bl	0 <calloc>
 2e0:	cmp	r0, #0
 2e4:	str	r0, [sp, #8]
 2e8:	beq	3a0 <ht_resize+0x118>
 2ec:	ldr	r3, [r7, #12]
 2f0:	mov	r4, #0
 2f4:	str	r4, [sp, #12]
 2f8:	strd	r4, [sp, #16]
 2fc:	cmp	r3, r4
 300:	addeq	r6, sp, #8
 304:	beq	358 <ht_resize+0xd0>
 308:	sub	r5, r6, #4
 30c:	mov	r8, #3
 310:	add	r6, sp, #8
 314:	b	320 <ht_resize+0x98>
 318:	cmp	r3, r4
 31c:	bls	358 <ht_resize+0xd0>
 320:	ldr	r2, [r5, #4]!
 324:	add	r4, r4, #1
 328:	cmp	r2, #0
 32c:	cmpne	r2, #2
 330:	beq	318 <ht_resize+0x90>
 334:	mov	r3, r2
 338:	mov	r0, r6
 33c:	ldr	r1, [r2, #144]	; 0x90
 340:	ldr	r2, [r2, #148]	; 0x94
 344:	str	r8, [sp]
 348:	bl	3c <ht_insert>
 34c:	ldr	r3, [r7, #12]
 350:	cmp	r3, r4
 354:	bhi	320 <ht_resize+0x98>
 358:	mov	r0, r7
 35c:	bl	0 <ht_clear>
 360:	ldr	r3, [sp, #8]
 364:	mov	r0, #0
 368:	ldmib	r6, {r1, r2}
 36c:	str	r3, [r7]
 370:	ldr	r3, [r6, #12]
 374:	str	r1, [r7, #4]
 378:	str	r2, [r7, #8]
 37c:	str	r3, [r7, #12]
 380:	add	sp, sp, #24
 384:	ldrd	r4, [sp]
 388:	ldrd	r6, [sp, #8]
 38c:	ldr	r8, [sp, #16]
 390:	add	sp, sp, #20
 394:	pop	{pc}		; (ldr pc, [sp], #4)
 398:	mov	r5, #4
 39c:	b	2d4 <ht_resize+0x4c>
 3a0:	mvn	r0, #0
 3a4:	b	380 <ht_resize+0xf8>

000003a8 <ht_remove>:
 3a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
 3ac:	ldr	r5, [r0]
 3b0:	strd	r6, [sp, #8]
 3b4:	strd	r8, [sp, #16]
 3b8:	strd	sl, [sp, #24]
 3bc:	str	lr, [sp, #32]
 3c0:	sub	sp, sp, #20
 3c4:	cmp	r5, #0
 3c8:	beq	494 <ht_remove+0xec>
 3cc:	mov	r9, r1
 3d0:	add	ip, sp, #8
 3d4:	movw	r1, #15186	; 0x3b52
 3d8:	movt	r1, #12137	; 0x2f69
 3dc:	mov	r8, r0
 3e0:	mov	r3, #0
 3e4:	mov	r0, r9
 3e8:	ldr	r6, [r8, #12]
 3ec:	mov	r7, r2
 3f0:	stm	sp, {r1, ip}
 3f4:	bl	0 <cmetrohash64_1>
 3f8:	ldr	sl, [sp, #8]
 3fc:	sub	r6, r6, #1
 400:	and	r3, r6, sl
 404:	ldr	fp, [r5, r3, lsl #2]
 408:	add	r4, r5, r3, lsl #2
 40c:	cmp	fp, #0
 410:	beq	494 <ht_remove+0xec>
 414:	add	sl, sl, #1
 418:	b	434 <ht_remove+0x8c>
 41c:	and	r3, sl, r6
 420:	add	sl, sl, #1
 424:	ldr	fp, [r5, r3, lsl #2]
 428:	add	r4, r5, r3, lsl #2
 42c:	cmp	fp, #0
 430:	beq	494 <ht_remove+0xec>
 434:	cmp	fp, #2
 438:	beq	41c <ht_remove+0x74>
 43c:	ldr	r3, [fp, #148]	; 0x94
 440:	cmp	r7, r3
 444:	bne	41c <ht_remove+0x74>
 448:	mov	r2, r7
 44c:	mov	r0, r9
 450:	ldr	r1, [fp, #144]	; 0x90
 454:	bl	0 <memcmp>
 458:	cmp	r0, #0
 45c:	bne	41c <ht_remove+0x74>
 460:	ldr	r3, [r8, #8]
 464:	mov	r2, #2
 468:	str	r2, [r4]
 46c:	sub	r3, r3, #1
 470:	str	r3, [r8, #8]
 474:	mov	r0, fp
 478:	add	sp, sp, #20
 47c:	ldrd	r4, [sp]
 480:	ldrd	r6, [sp, #8]
 484:	ldrd	r8, [sp, #16]
 488:	ldrd	sl, [sp, #24]
 48c:	add	sp, sp, #32
 490:	pop	{pc}		; (ldr pc, [sp], #4)
 494:	mov	fp, #0
 498:	b	474 <ht_remove+0xcc>

0000049c <ht_find.isra.4>:
 49c:	strd	r4, [sp, #-28]!	; 0xffffffe4
 4a0:	strd	r6, [sp, #8]
 4a4:	subs	r7, r0, #0
 4a8:	strd	r8, [sp, #16]
 4ac:	str	lr, [sp, #24]
 4b0:	sub	sp, sp, #20
 4b4:	beq	564 <ht_find.isra.4+0xc8>
 4b8:	mov	r6, r3
 4bc:	movw	r3, #15186	; 0x3b52
 4c0:	movt	r3, #12137	; 0x2f69
 4c4:	ldr	r8, [r1]
 4c8:	add	r1, sp, #8
 4cc:	mov	r9, r2
 4d0:	mov	r2, r6
 4d4:	mov	r0, r9
 4d8:	str	r3, [sp]
 4dc:	mov	r3, #0
 4e0:	str	r1, [sp, #4]
 4e4:	bl	0 <cmetrohash64_1>
 4e8:	ldr	r5, [sp, #8]
 4ec:	sub	r8, r8, #1
 4f0:	and	r3, r8, r5
 4f4:	ldr	r4, [r7, r3, lsl #2]
 4f8:	cmp	r4, #0
 4fc:	beq	564 <ht_find.isra.4+0xc8>
 500:	add	r5, r5, #1
 504:	b	51c <ht_find.isra.4+0x80>
 508:	and	r1, r8, r5
 50c:	add	r5, r5, #1
 510:	ldr	r4, [r7, r1, lsl #2]
 514:	cmp	r4, #0
 518:	beq	564 <ht_find.isra.4+0xc8>
 51c:	cmp	r4, #2
 520:	beq	508 <ht_find.isra.4+0x6c>
 524:	ldr	r3, [r4, #148]	; 0x94
 528:	cmp	r6, r3
 52c:	bne	508 <ht_find.isra.4+0x6c>
 530:	mov	r2, r6
 534:	mov	r0, r9
 538:	ldr	r1, [r4, #144]	; 0x90
 53c:	bl	0 <memcmp>
 540:	cmp	r0, #0
 544:	bne	508 <ht_find.isra.4+0x6c>
 548:	mov	r0, r4
 54c:	add	sp, sp, #20
 550:	ldrd	r4, [sp]
 554:	ldrd	r6, [sp, #8]
 558:	ldrd	r8, [sp, #16]
 55c:	add	sp, sp, #24
 560:	pop	{pc}		; (ldr pc, [sp], #4)
 564:	mov	r4, #0
 568:	b	548 <ht_find.isra.4+0xac>

0000056c <fb_schema_table_clear>:
 56c:	b	0 <ht_clear>

00000570 <fb_schema_table_destroy>:
 570:	strd	r4, [sp, #-24]!	; 0xffffffe8
 574:	strd	r6, [sp, #8]
 578:	mov	r7, r0
 57c:	str	r8, [sp, #16]
 580:	subs	r8, r1, #0
 584:	str	lr, [sp, #20]
 588:	beq	5d4 <fb_schema_table_destroy+0x64>
 58c:	ldr	r5, [r0]
 590:	ldr	ip, [r0, #12]
 594:	cmp	ip, #0
 598:	beq	5d4 <fb_schema_table_destroy+0x64>
 59c:	mov	r6, r2
 5a0:	sub	r5, r5, #4
 5a4:	mov	r4, #0
 5a8:	ldr	r3, [r5, #4]!
 5ac:	mov	r0, r6
 5b0:	add	r4, r4, #1
 5b4:	cmp	r3, #0
 5b8:	cmpne	r3, #2
 5bc:	mov	r1, r3
 5c0:	beq	5cc <fb_schema_table_destroy+0x5c>
 5c4:	blx	r8
 5c8:	ldr	ip, [r7, #12]
 5cc:	cmp	r4, ip
 5d0:	bcc	5a8 <fb_schema_table_destroy+0x38>
 5d4:	mov	r0, r7
 5d8:	ldrd	r4, [sp]
 5dc:	ldrd	r6, [sp, #8]
 5e0:	ldr	r8, [sp, #16]
 5e4:	ldr	lr, [sp, #20]
 5e8:	add	sp, sp, #24
 5ec:	b	0 <ht_clear>

000005f0 <fb_schema_table_init>:
 5f0:	cmp	r1, #2
 5f4:	strd	r4, [sp, #-16]!
 5f8:	mov	r4, r0
 5fc:	str	r6, [sp, #8]
 600:	str	lr, [sp, #12]
 604:	bls	660 <fb_schema_table_init+0x70>
 608:	mov	r3, #4
 60c:	movw	r0, #358	; 0x166
 610:	mul	r2, r0, r3
 614:	lsl	r5, r3, #1
 618:	cmp	r1, r2, lsr #8
 61c:	mov	r3, r5
 620:	bhi	610 <fb_schema_table_init+0x20>
 624:	mov	r1, #4
 628:	mov	r0, r5
 62c:	bl	0 <calloc>
 630:	cmp	r0, #0
 634:	str	r0, [r4]
 638:	beq	668 <fb_schema_table_init+0x78>
 63c:	mov	r3, #0
 640:	mov	r0, r3
 644:	str	r3, [r4, #4]
 648:	str	r3, [r4, #8]
 64c:	str	r5, [r4, #12]
 650:	ldrd	r4, [sp]
 654:	ldr	r6, [sp, #8]
 658:	add	sp, sp, #12
 65c:	pop	{pc}		; (ldr pc, [sp], #4)
 660:	mov	r5, #4
 664:	b	624 <fb_schema_table_init+0x34>
 668:	mvn	r0, #0
 66c:	b	650 <fb_schema_table_init+0x60>

00000670 <fb_schema_table_resize>:
 670:	b	288 <ht_resize>

00000674 <fb_schema_table_insert>:
 674:	b	3c <ht_insert>

00000678 <fb_schema_table_insert_item>:
 678:	push	{lr}		; (str lr, [sp, #-4]!)
 67c:	sub	sp, sp, #12
 680:	mov	ip, r1
 684:	mov	r3, r1
 688:	str	r2, [sp]
 68c:	ldr	r1, [r1, #144]	; 0x90
 690:	ldr	r2, [ip, #148]	; 0x94
 694:	bl	3c <ht_insert>
 698:	add	sp, sp, #12
 69c:	pop	{pc}		; (ldr pc, [sp], #4)

000006a0 <fb_schema_table_find>:
 6a0:	mov	ip, r0
 6a4:	mov	r3, r2
 6a8:	ldr	r0, [ip], #12
 6ac:	mov	r2, r1
 6b0:	mov	r1, ip
 6b4:	b	49c <ht_find.isra.4>

000006b8 <fb_schema_table_find_item>:
 6b8:	ldr	ip, [r0], #12
 6bc:	ldrd	r2, [r1, #144]	; 0x90
 6c0:	mov	r1, r0
 6c4:	mov	r0, ip
 6c8:	b	49c <ht_find.isra.4>

000006cc <fb_schema_table_remove>:
 6cc:	b	3a8 <ht_remove>

000006d0 <fb_schema_table_remove_item>:
 6d0:	mov	r3, r1
 6d4:	ldr	r1, [r1, #144]	; 0x90
 6d8:	ldr	r2, [r3, #148]	; 0x94
 6dc:	b	3a8 <ht_remove>

000006e0 <fb_schema_table_visit>:
 6e0:	ldr	ip, [r0, #12]
 6e4:	strd	r4, [sp, #-24]!	; 0xffffffe8
 6e8:	ldr	r5, [r0]
 6ec:	strd	r6, [sp, #8]
 6f0:	str	r8, [sp, #16]
 6f4:	cmp	ip, #0
 6f8:	str	lr, [sp, #20]
 6fc:	beq	740 <fb_schema_table_visit+0x60>
 700:	mov	r6, r2
 704:	mov	r8, r1
 708:	mov	r7, r0
 70c:	sub	r5, r5, #4
 710:	mov	r4, #0
 714:	ldr	r3, [r5, #4]!
 718:	mov	r0, r6
 71c:	add	r4, r4, #1
 720:	cmp	r3, #0
 724:	cmpne	r3, #2
 728:	mov	r1, r3
 72c:	beq	738 <fb_schema_table_visit+0x58>
 730:	blx	r8
 734:	ldr	ip, [r7, #12]
 738:	cmp	r4, ip
 73c:	bcc	714 <fb_schema_table_visit+0x34>
 740:	ldrd	r4, [sp]
 744:	ldrd	r6, [sp, #8]
 748:	ldr	r8, [sp, #16]
 74c:	add	sp, sp, #20
 750:	pop	{pc}		; (ldr pc, [sp], #4)
