
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_cdf_reopen>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #72	; 0x48
       c:	str	r0, [fp, #-8]
      10:	movw	r0, #120	; 0x78
      14:	bl	0 <malloc>
      18:	str	r0, [fp, #-12]
      1c:	ldr	r0, [fp, #-12]
      20:	movw	lr, #0
      24:	cmp	r0, lr
      28:	bne	6c <coda_cdf_reopen+0x6c>
      2c:	mvn	r0, #0
      30:	movw	r1, #0
      34:	movt	r1, #0
      38:	movw	r2, #120	; 0x78
      3c:	movw	r3, #0
      40:	movt	r3, #0
      44:	movw	ip, #1315	; 0x523
      48:	str	ip, [sp]
      4c:	bl	0 <coda_set_error>
      50:	ldr	r0, [fp, #-8]
      54:	ldr	r0, [r0]
      58:	bl	0 <coda_close>
      5c:	mvn	r1, #0
      60:	str	r1, [fp, #-4]
      64:	str	r0, [fp, #-28]	; 0xffffffe4
      68:	b	33c <coda_cdf_reopen+0x33c>
      6c:	ldr	r0, [fp, #-12]
      70:	mov	r1, #0
      74:	str	r1, [r0]
      78:	ldr	r0, [fp, #-8]
      7c:	ldr	r0, [r0]
      80:	ldr	r2, [r0, #8]
      84:	ldr	r0, [r0, #12]
      88:	ldr	r3, [fp, #-12]
      8c:	str	r0, [r3, #12]
      90:	str	r2, [r3, #8]
      94:	ldr	r0, [fp, #-12]
      98:	mov	r2, #5
      9c:	str	r2, [r0, #16]
      a0:	ldr	r0, [fp, #-12]
      a4:	str	r1, [r0, #20]
      a8:	ldr	r0, [fp, #-12]
      ac:	str	r1, [r0, #24]
      b0:	ldr	r0, [fp, #-12]
      b4:	str	r1, [r0, #28]
      b8:	ldr	r0, [fp, #-12]
      bc:	str	r1, [r0, #32]
      c0:	ldr	r0, [fp, #-12]
      c4:	str	r1, [r0, #44]	; 0x2c
      c8:	str	r1, [r0, #40]	; 0x28
      cc:	ldr	r0, [fp, #-12]
      d0:	movw	r1, #0
      d4:	str	r1, [r0, #48]	; 0x30
      d8:	ldr	r0, [fp, #-8]
      dc:	ldr	r0, [r0]
      e0:	ldr	r1, [fp, #-12]
      e4:	str	r0, [r1, #52]	; 0x34
      e8:	ldr	r0, [fp, #-8]
      ec:	ldr	r0, [r0]
      f0:	ldr	r0, [r0]
      f4:	bl	0 <strdup>
      f8:	ldr	r1, [fp, #-12]
      fc:	str	r0, [r1]
     100:	ldr	r0, [fp, #-12]
     104:	ldr	r0, [r0]
     108:	movw	r1, #0
     10c:	cmp	r0, r1
     110:	bne	148 <coda_cdf_reopen+0x148>
     114:	mvn	r0, #0
     118:	movw	r1, #0
     11c:	movt	r1, #0
     120:	movw	r2, #0
     124:	movt	r2, #0
     128:	movw	r3, #1335	; 0x537
     12c:	bl	0 <coda_set_error>
     130:	ldr	r0, [fp, #-12]
     134:	bl	354 <coda_cdf_close>
     138:	mvn	r1, #0
     13c:	str	r1, [fp, #-4]
     140:	str	r0, [fp, #-32]	; 0xffffffe0
     144:	b	33c <coda_cdf_reopen+0x33c>
     148:	sub	r0, fp, #24
     14c:	ldr	r1, [fp, #-12]
     150:	ldr	r1, [r1, #52]	; 0x34
     154:	mov	r2, sp
     158:	str	r0, [r2, #8]
     15c:	mov	r0, #0
     160:	str	r0, [r2, #4]
     164:	mov	r3, #8
     168:	str	r3, [r2]
     16c:	str	r0, [sp, #36]	; 0x24
     170:	mov	r0, r1
     174:	ldr	r2, [sp, #36]	; 0x24
     178:	ldr	r3, [sp, #36]	; 0x24
     17c:	bl	404 <read_bytes>
     180:	cmp	r0, #0
     184:	bge	1a0 <coda_cdf_reopen+0x1a0>
     188:	ldr	r0, [fp, #-12]
     18c:	bl	354 <coda_cdf_close>
     190:	mvn	lr, #0
     194:	str	lr, [fp, #-4]
     198:	str	r0, [sp, #32]
     19c:	b	33c <coda_cdf_reopen+0x33c>
     1a0:	sub	r0, fp, #24
     1a4:	bl	66c <swap4>
     1a8:	sub	r0, fp, #24
     1ac:	add	r0, r0, #4
     1b0:	bl	66c <swap4>
     1b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1b8:	movw	lr, #65535	; 0xffff
     1bc:	cmp	r0, lr
     1c0:	beq	1d4 <coda_cdf_reopen+0x1d4>
     1c4:	ldr	r0, [pc, #380]	; 348 <coda_cdf_reopen+0x348>
     1c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     1cc:	cmp	r1, r0
     1d0:	bne	1fc <coda_cdf_reopen+0x1fc>
     1d4:	mvn	r0, #199	; 0xc7
     1d8:	movw	r1, #0
     1dc:	movt	r1, #0
     1e0:	bl	0 <coda_set_error>
     1e4:	ldr	r0, [fp, #-12]
     1e8:	bl	354 <coda_cdf_close>
     1ec:	mvn	r1, #0
     1f0:	str	r1, [fp, #-4]
     1f4:	str	r0, [sp, #28]
     1f8:	b	33c <coda_cdf_reopen+0x33c>
     1fc:	ldr	r0, [pc, #328]	; 34c <coda_cdf_reopen+0x34c>
     200:	ldr	r1, [fp, #-20]	; 0xffffffec
     204:	cmp	r1, r0
     208:	bne	234 <coda_cdf_reopen+0x234>
     20c:	mvn	r0, #199	; 0xc7
     210:	movw	r1, #0
     214:	movt	r1, #0
     218:	bl	0 <coda_set_error>
     21c:	ldr	r0, [fp, #-12]
     220:	bl	354 <coda_cdf_close>
     224:	mvn	r1, #0
     228:	str	r1, [fp, #-4]
     22c:	str	r0, [sp, #24]
     230:	b	33c <coda_cdf_reopen+0x33c>
     234:	ldr	r0, [pc, #276]	; 350 <coda_cdf_reopen+0x350>
     238:	ldr	r1, [fp, #-24]	; 0xffffffe8
     23c:	cmp	r1, r0
     240:	bne	258 <coda_cdf_reopen+0x258>
     244:	ldr	r0, [fp, #-20]	; 0xffffffec
     248:	movw	r1, #65535	; 0xffff
     24c:	cmp	r0, r1
     250:	bne	258 <coda_cdf_reopen+0x258>
     254:	b	278 <coda_cdf_reopen+0x278>
     258:	movw	r0, #0
     25c:	movt	r0, #0
     260:	movw	r1, #0
     264:	movt	r1, #0
     268:	movw	r2, #1362	; 0x552
     26c:	movw	r3, #0
     270:	movt	r3, #0
     274:	bl	0 <__assert_fail>
     278:	movw	r0, #5
     27c:	bl	0 <coda_type_record_new>
     280:	str	r0, [fp, #-16]
     284:	ldr	r0, [fp, #-16]
     288:	movw	lr, #0
     28c:	cmp	r0, lr
     290:	bne	2ac <coda_cdf_reopen+0x2ac>
     294:	ldr	r0, [fp, #-12]
     298:	bl	354 <coda_cdf_close>
     29c:	mvn	lr, #0
     2a0:	str	lr, [fp, #-4]
     2a4:	str	r0, [sp, #20]
     2a8:	b	33c <coda_cdf_reopen+0x33c>
     2ac:	ldr	r0, [fp, #-16]
     2b0:	movw	r1, #0
     2b4:	bl	0 <coda_mem_record_new>
     2b8:	ldr	r1, [fp, #-12]
     2bc:	str	r0, [r1, #20]
     2c0:	ldr	r0, [fp, #-12]
     2c4:	ldr	r0, [r0, #20]
     2c8:	movw	r1, #0
     2cc:	cmp	r0, r1
     2d0:	bne	2f8 <coda_cdf_reopen+0x2f8>
     2d4:	ldr	r0, [fp, #-12]
     2d8:	bl	354 <coda_cdf_close>
     2dc:	ldr	lr, [fp, #-16]
     2e0:	str	r0, [sp, #16]
     2e4:	mov	r0, lr
     2e8:	bl	0 <coda_type_release>
     2ec:	mvn	r0, #0
     2f0:	str	r0, [fp, #-4]
     2f4:	b	33c <coda_cdf_reopen+0x33c>
     2f8:	ldr	r0, [fp, #-16]
     2fc:	bl	0 <coda_type_release>
     300:	ldr	r0, [fp, #-12]
     304:	bl	72c <read_file>
     308:	cmp	r0, #0
     30c:	beq	328 <coda_cdf_reopen+0x328>
     310:	ldr	r0, [fp, #-12]
     314:	bl	354 <coda_cdf_close>
     318:	mvn	lr, #0
     31c:	str	lr, [fp, #-4]
     320:	str	r0, [sp, #12]
     324:	b	33c <coda_cdf_reopen+0x33c>
     328:	ldr	r0, [fp, #-12]
     32c:	ldr	r1, [fp, #-8]
     330:	str	r0, [r1]
     334:	movw	r0, #0
     338:	str	r0, [fp, #-4]
     33c:	ldr	r0, [fp, #-4]
     340:	mov	sp, fp
     344:	pop	{fp, pc}
     348:	.word	0xcdf26002
     34c:	.word	0xcccc0001
     350:	.word	0xcdf30001

00000354 <coda_cdf_close>:
     354:	push	{fp, lr}
     358:	mov	fp, sp
     35c:	sub	sp, sp, #16
     360:	str	r0, [fp, #-4]
     364:	ldr	r0, [fp, #-4]
     368:	str	r0, [sp, #8]
     36c:	ldr	r0, [sp, #8]
     370:	ldr	r0, [r0]
     374:	movw	r1, #0
     378:	cmp	r0, r1
     37c:	beq	38c <coda_cdf_close+0x38>
     380:	ldr	r0, [sp, #8]
     384:	ldr	r0, [r0]
     388:	bl	0 <free>
     38c:	ldr	r0, [sp, #8]
     390:	ldr	r0, [r0, #20]
     394:	movw	r1, #0
     398:	cmp	r0, r1
     39c:	beq	3ac <coda_cdf_close+0x58>
     3a0:	ldr	r0, [sp, #8]
     3a4:	ldr	r0, [r0, #20]
     3a8:	bl	0 <coda_dynamic_type_delete>
     3ac:	ldr	r0, [sp, #8]
     3b0:	ldr	r0, [r0, #48]	; 0x30
     3b4:	movw	r1, #0
     3b8:	cmp	r0, r1
     3bc:	beq	3cc <coda_cdf_close+0x78>
     3c0:	ldr	r0, [sp, #8]
     3c4:	ldr	r0, [r0, #48]	; 0x30
     3c8:	bl	0 <free>
     3cc:	ldr	r0, [sp, #8]
     3d0:	ldr	r0, [r0, #52]	; 0x34
     3d4:	movw	r1, #0
     3d8:	cmp	r0, r1
     3dc:	beq	3f0 <coda_cdf_close+0x9c>
     3e0:	ldr	r0, [sp, #8]
     3e4:	ldr	r0, [r0, #52]	; 0x34
     3e8:	bl	0 <coda_bin_close>
     3ec:	str	r0, [sp, #4]
     3f0:	ldr	r0, [sp, #8]
     3f4:	bl	0 <free>
     3f8:	movw	r0, #0
     3fc:	mov	sp, fp
     400:	pop	{fp, pc}

00000404 <read_bytes>:
     404:	push	{fp, lr}
     408:	mov	fp, sp
     40c:	sub	sp, sp, #128	; 0x80
     410:	ldr	r1, [fp, #12]
     414:	ldr	ip, [fp, #8]
     418:	ldr	lr, [fp, #16]
     41c:	str	r0, [fp, #-8]
     420:	str	r3, [fp, #-12]
     424:	str	r2, [fp, #-16]
     428:	str	r1, [fp, #-20]	; 0xffffffec
     42c:	str	ip, [fp, #-24]	; 0xffffffe8
     430:	ldr	r0, [fp, #-8]
     434:	ldr	r0, [r0, #48]	; 0x30
     438:	movw	r1, #0
     43c:	cmp	r0, r1
     440:	str	lr, [sp, #36]	; 0x24
     444:	beq	564 <read_bytes+0x160>
     448:	ldr	r0, [fp, #-16]
     44c:	ldr	r1, [fp, #-12]
     450:	ldr	r2, [fp, #-24]	; 0xffffffe8
     454:	ldr	r3, [fp, #-20]	; 0xffffffec
     458:	adds	r0, r0, r2
     45c:	adc	r1, r1, r3
     460:	ldr	r2, [fp, #-8]
     464:	ldr	r3, [r2, #40]	; 0x28
     468:	ldr	r2, [r2, #44]	; 0x2c
     46c:	subs	r0, r3, r0
     470:	sbcs	r1, r2, r1
     474:	str	r0, [sp, #32]
     478:	str	r1, [sp, #28]
     47c:	bcs	544 <read_bytes+0x140>
     480:	b	484 <read_bytes+0x80>
     484:	ldr	r0, [fp, #-8]
     488:	ldr	r0, [r0, #16]
     48c:	cmp	r0, #0
     490:	beq	4a4 <read_bytes+0xa0>
     494:	ldr	r0, [fp, #-8]
     498:	ldr	r0, [r0, #16]
     49c:	cmp	r0, #1
     4a0:	bne	4c0 <read_bytes+0xbc>
     4a4:	mvn	r0, #300	; 0x12c
     4a8:	movw	r1, #0
     4ac:	movt	r1, #0
     4b0:	bl	0 <coda_set_error>
     4b4:	mvn	r0, #0
     4b8:	str	r0, [fp, #-4]
     4bc:	b	660 <read_bytes+0x25c>
     4c0:	add	r2, sp, #41	; 0x29
     4c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     4c8:	ldr	r1, [fp, #-20]	; 0xffffffec
     4cc:	sub	r3, fp, #45	; 0x2d
     4d0:	str	r2, [sp, #24]
     4d4:	mov	r2, r3
     4d8:	bl	0 <coda_str64>
     4dc:	ldr	r0, [fp, #-16]
     4e0:	ldr	r1, [fp, #-12]
     4e4:	add	r2, sp, #62	; 0x3e
     4e8:	bl	0 <coda_str64>
     4ec:	ldr	r0, [fp, #-8]
     4f0:	ldr	r1, [r0, #40]	; 0x28
     4f4:	ldr	r0, [r0, #44]	; 0x2c
     4f8:	str	r0, [sp, #20]
     4fc:	mov	r0, r1
     500:	ldr	r1, [sp, #20]
     504:	ldr	r2, [sp, #24]
     508:	bl	0 <coda_str64>
     50c:	add	r0, sp, #41	; 0x29
     510:	add	r3, sp, #62	; 0x3e
     514:	sub	r2, fp, #45	; 0x2d
     518:	mvn	r1, #300	; 0x12c
     51c:	str	r0, [sp, #16]
     520:	mov	r0, r1
     524:	movw	r1, #0
     528:	movt	r1, #0
     52c:	ldr	lr, [sp, #16]
     530:	str	lr, [sp]
     534:	bl	0 <coda_set_error>
     538:	mvn	r0, #0
     53c:	str	r0, [fp, #-4]
     540:	b	660 <read_bytes+0x25c>
     544:	ldr	r0, [fp, #16]
     548:	ldr	r1, [fp, #-8]
     54c:	ldr	r1, [r1, #48]	; 0x30
     550:	ldr	r2, [fp, #-16]
     554:	add	r1, r1, r2
     558:	ldr	r2, [fp, #-24]	; 0xffffffe8
     55c:	bl	0 <memcpy>
     560:	b	658 <read_bytes+0x254>
     564:	ldr	r0, [fp, #-8]
     568:	ldr	r0, [r0, #16]
     56c:	cmp	r0, #0
     570:	beq	584 <read_bytes+0x180>
     574:	ldr	r0, [fp, #-8]
     578:	ldr	r0, [r0, #16]
     57c:	cmp	r0, #1
     580:	bne	588 <read_bytes+0x184>
     584:	b	5a8 <read_bytes+0x1a4>
     588:	movw	r0, #0
     58c:	movt	r0, #0
     590:	movw	r1, #0
     594:	movt	r1, #0
     598:	movw	r2, #83	; 0x53
     59c:	movw	r3, #0
     5a0:	movt	r3, #0
     5a4:	bl	0 <__assert_fail>
     5a8:	ldr	r0, [fp, #-16]
     5ac:	ldr	r1, [fp, #-12]
     5b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     5b4:	ldr	r3, [fp, #-20]	; 0xffffffec
     5b8:	adds	r0, r0, r2
     5bc:	adc	r1, r1, r3
     5c0:	ldr	r2, [fp, #-8]
     5c4:	ldr	r3, [r2, #8]
     5c8:	ldr	r2, [r2, #12]
     5cc:	subs	r0, r3, r0
     5d0:	sbcs	r1, r2, r1
     5d4:	str	r0, [sp, #12]
     5d8:	str	r1, [sp, #8]
     5dc:	bcs	600 <read_bytes+0x1fc>
     5e0:	b	5e4 <read_bytes+0x1e0>
     5e4:	mvn	r0, #300	; 0x12c
     5e8:	movw	r1, #0
     5ec:	movt	r1, #0
     5f0:	bl	0 <coda_set_error>
     5f4:	mvn	r0, #0
     5f8:	str	r0, [fp, #-4]
     5fc:	b	660 <read_bytes+0x25c>
     600:	ldr	r0, [fp, #-8]
     604:	ldr	r0, [r0, #56]	; 0x38
     608:	ldr	r1, [fp, #16]
     60c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     610:	ldr	r3, [fp, #-16]
     614:	bl	0 <pread>
     618:	cmp	r0, #0
     61c:	bge	654 <read_bytes+0x250>
     620:	bl	0 <__errno_location>
     624:	ldr	r0, [r0]
     628:	bl	0 <strerror>
     62c:	mvn	lr, #21
     630:	str	r0, [sp, #4]
     634:	mov	r0, lr
     638:	movw	r1, #0
     63c:	movt	r1, #0
     640:	ldr	r2, [sp, #4]
     644:	bl	0 <coda_set_error>
     648:	mvn	r0, #0
     64c:	str	r0, [fp, #-4]
     650:	b	660 <read_bytes+0x25c>
     654:	b	658 <read_bytes+0x254>
     658:	movw	r0, #0
     65c:	str	r0, [fp, #-4]
     660:	ldr	r0, [fp, #-4]
     664:	mov	sp, fp
     668:	pop	{fp, pc}

0000066c <swap4>:
     66c:	sub	sp, sp, #8
     670:	str	r0, [sp, #4]
     674:	ldr	r0, [sp, #4]
     678:	str	r0, [sp]
     67c:	ldr	r0, [sp]
     680:	ldrb	r0, [r0]
     684:	ldr	r1, [sp]
     688:	ldrb	r1, [r1, #3]
     68c:	eor	r0, r0, r1
     690:	ldr	r1, [sp]
     694:	strb	r0, [r1]
     698:	ldr	r0, [sp]
     69c:	ldrb	r0, [r0]
     6a0:	ldr	r1, [sp]
     6a4:	ldrb	r1, [r1, #3]
     6a8:	eor	r0, r0, r1
     6ac:	ldr	r1, [sp]
     6b0:	strb	r0, [r1, #3]
     6b4:	ldr	r0, [sp]
     6b8:	ldrb	r0, [r0]
     6bc:	ldr	r1, [sp]
     6c0:	ldrb	r1, [r1, #3]
     6c4:	eor	r0, r0, r1
     6c8:	ldr	r1, [sp]
     6cc:	strb	r0, [r1]
     6d0:	ldr	r0, [sp]
     6d4:	ldrb	r0, [r0, #1]
     6d8:	ldr	r1, [sp]
     6dc:	ldrb	r1, [r1, #2]
     6e0:	eor	r0, r0, r1
     6e4:	ldr	r1, [sp]
     6e8:	strb	r0, [r1, #1]
     6ec:	ldr	r0, [sp]
     6f0:	ldrb	r0, [r0, #1]
     6f4:	ldr	r1, [sp]
     6f8:	ldrb	r1, [r1, #2]
     6fc:	eor	r0, r0, r1
     700:	ldr	r1, [sp]
     704:	strb	r0, [r1, #2]
     708:	ldr	r0, [sp]
     70c:	ldrb	r0, [r0, #1]
     710:	ldr	r1, [sp]
     714:	ldrb	r1, [r1, #2]
     718:	eor	r0, r0, r1
     71c:	ldr	r1, [sp]
     720:	strb	r0, [r1, #1]
     724:	add	sp, sp, #8
     728:	bx	lr

0000072c <read_file>:
     72c:	push	{fp, lr}
     730:	mov	fp, sp
     734:	sub	sp, sp, #56	; 0x38
     738:	str	r0, [fp, #-8]
     73c:	ldr	r0, [fp, #-8]
     740:	ldr	r0, [r0, #52]	; 0x34
     744:	sub	r1, fp, #12
     748:	mov	r2, sp
     74c:	str	r1, [r2, #8]
     750:	mov	r1, #0
     754:	str	r1, [r2, #4]
     758:	mov	r3, #4
     75c:	str	r3, [r2]
     760:	mov	r2, #16
     764:	mov	r3, r1
     768:	bl	404 <read_bytes>
     76c:	cmp	r0, #0
     770:	bge	780 <read_file+0x54>
     774:	mvn	r0, #0
     778:	str	r0, [fp, #-4]
     77c:	b	b74 <read_file+0x448>
     780:	sub	r0, fp, #12
     784:	bl	66c <swap4>
     788:	ldr	r0, [fp, #-12]
     78c:	cmp	r0, #1
     790:	beq	7b4 <read_file+0x88>
     794:	ldr	r0, [pc, #996]	; b80 <read_file+0x454>
     798:	ldr	r2, [fp, #-12]
     79c:	movw	r1, #0
     7a0:	movt	r1, #0
     7a4:	bl	0 <coda_set_error>
     7a8:	mvn	r0, #0
     7ac:	str	r0, [fp, #-4]
     7b0:	b	b74 <read_file+0x448>
     7b4:	ldr	r0, [fp, #-8]
     7b8:	ldr	r0, [r0, #52]	; 0x34
     7bc:	sub	r1, fp, #24
     7c0:	mov	r2, sp
     7c4:	str	r1, [r2, #8]
     7c8:	mov	r1, #0
     7cc:	str	r1, [r2, #4]
     7d0:	mov	r3, #8
     7d4:	str	r3, [r2]
     7d8:	mov	r2, #20
     7dc:	mov	r3, r1
     7e0:	bl	404 <read_bytes>
     7e4:	cmp	r0, #0
     7e8:	bge	7f8 <read_file+0xcc>
     7ec:	mvn	r0, #0
     7f0:	str	r0, [fp, #-4]
     7f4:	b	b74 <read_file+0x448>
     7f8:	ldr	r0, [fp, #-8]
     7fc:	ldr	r0, [r0, #52]	; 0x34
     800:	ldr	r1, [fp, #-8]
     804:	add	r1, r1, #56	; 0x38
     808:	mov	r2, sp
     80c:	str	r1, [r2, #8]
     810:	mov	r1, #0
     814:	str	r1, [r2, #4]
     818:	mov	r3, #4
     81c:	str	r3, [r2]
     820:	mov	r2, #28
     824:	mov	r3, r1
     828:	bl	404 <read_bytes>
     82c:	cmp	r0, #0
     830:	bge	840 <read_file+0x114>
     834:	mvn	r0, #0
     838:	str	r0, [fp, #-4]
     83c:	b	b74 <read_file+0x448>
     840:	ldr	r0, [fp, #-8]
     844:	ldr	r0, [r0, #52]	; 0x34
     848:	ldr	r1, [fp, #-8]
     84c:	add	r1, r1, #60	; 0x3c
     850:	mov	r2, sp
     854:	str	r1, [r2, #8]
     858:	mov	r1, #0
     85c:	str	r1, [r2, #4]
     860:	mov	r3, #4
     864:	str	r3, [r2]
     868:	mov	r2, #32
     86c:	mov	r3, r1
     870:	bl	404 <read_bytes>
     874:	cmp	r0, #0
     878:	bge	888 <read_file+0x15c>
     87c:	mvn	r0, #0
     880:	str	r0, [fp, #-4]
     884:	b	b74 <read_file+0x448>
     888:	ldr	r0, [fp, #-8]
     88c:	ldr	r0, [r0, #52]	; 0x34
     890:	add	r1, sp, #28
     894:	mov	r2, sp
     898:	str	r1, [r2, #8]
     89c:	mov	r1, #0
     8a0:	str	r1, [r2, #4]
     8a4:	mov	r3, #4
     8a8:	str	r3, [r2]
     8ac:	mov	r2, #36	; 0x24
     8b0:	mov	r3, r1
     8b4:	bl	404 <read_bytes>
     8b8:	cmp	r0, #0
     8bc:	bge	8cc <read_file+0x1a0>
     8c0:	mvn	r0, #0
     8c4:	str	r0, [fp, #-4]
     8c8:	b	b74 <read_file+0x448>
     8cc:	ldr	r0, [fp, #-8]
     8d0:	ldr	r0, [r0, #52]	; 0x34
     8d4:	add	r1, sp, #24
     8d8:	mov	r2, sp
     8dc:	str	r1, [r2, #8]
     8e0:	mov	r1, #0
     8e4:	str	r1, [r2, #4]
     8e8:	mov	r3, #4
     8ec:	str	r3, [r2]
     8f0:	mov	r2, #40	; 0x28
     8f4:	mov	r3, r1
     8f8:	bl	404 <read_bytes>
     8fc:	cmp	r0, #0
     900:	bge	910 <read_file+0x1e4>
     904:	mvn	r0, #0
     908:	str	r0, [fp, #-4]
     90c:	b	b74 <read_file+0x448>
     910:	ldr	r0, [fp, #-8]
     914:	ldr	r0, [r0, #52]	; 0x34
     918:	ldr	r1, [fp, #-8]
     91c:	add	r1, r1, #64	; 0x40
     920:	mov	r2, sp
     924:	str	r1, [r2, #8]
     928:	mov	r1, #0
     92c:	str	r1, [r2, #4]
     930:	mov	r3, #4
     934:	str	r3, [r2]
     938:	mov	r2, #52	; 0x34
     93c:	mov	r3, r1
     940:	bl	404 <read_bytes>
     944:	cmp	r0, #0
     948:	bge	958 <read_file+0x22c>
     94c:	mvn	r0, #0
     950:	str	r0, [fp, #-4]
     954:	b	b74 <read_file+0x448>
     958:	sub	r0, fp, #24
     95c:	bl	b84 <swap8>
     960:	ldr	r0, [fp, #-8]
     964:	add	r0, r0, #56	; 0x38
     968:	bl	66c <swap4>
     96c:	ldr	r0, [fp, #-8]
     970:	add	r0, r0, #60	; 0x3c
     974:	bl	66c <swap4>
     978:	add	r0, sp, #28
     97c:	bl	66c <swap4>
     980:	add	r0, sp, #24
     984:	bl	66c <swap4>
     988:	ldr	r0, [fp, #-8]
     98c:	add	r0, r0, #64	; 0x40
     990:	bl	66c <swap4>
     994:	ldr	r0, [sp, #28]
     998:	sub	lr, r0, #1
     99c:	cmp	lr, #2
     9a0:	str	r0, [sp, #20]
     9a4:	bcc	a54 <read_file+0x328>
     9a8:	b	9ac <read_file+0x280>
     9ac:	ldr	r0, [sp, #20]
     9b0:	cmp	r0, #3
     9b4:	beq	a74 <read_file+0x348>
     9b8:	b	9bc <read_file+0x290>
     9bc:	ldr	r0, [sp, #20]
     9c0:	cmp	r0, #4
     9c4:	beq	a64 <read_file+0x338>
     9c8:	b	9cc <read_file+0x2a0>
     9cc:	ldr	r0, [sp, #20]
     9d0:	cmp	r0, #5
     9d4:	beq	a54 <read_file+0x328>
     9d8:	b	9dc <read_file+0x2b0>
     9dc:	ldr	r0, [sp, #20]
     9e0:	cmp	r0, #6
     9e4:	beq	a64 <read_file+0x338>
     9e8:	b	9ec <read_file+0x2c0>
     9ec:	ldr	r0, [sp, #20]
     9f0:	cmp	r0, #7
     9f4:	beq	a54 <read_file+0x328>
     9f8:	b	9fc <read_file+0x2d0>
     9fc:	ldr	r0, [sp, #20]
     a00:	cmp	r0, #9
     a04:	beq	a54 <read_file+0x328>
     a08:	b	a0c <read_file+0x2e0>
     a0c:	ldr	r0, [sp, #20]
     a10:	sub	r1, r0, #11
     a14:	cmp	r1, #2
     a18:	bcc	a54 <read_file+0x328>
     a1c:	b	a20 <read_file+0x2f4>
     a20:	ldr	r0, [sp, #20]
     a24:	cmp	r0, #13
     a28:	beq	a64 <read_file+0x338>
     a2c:	b	a30 <read_file+0x304>
     a30:	ldr	r0, [sp, #20]
     a34:	sub	r1, r0, #14
     a38:	cmp	r1, #2
     a3c:	bcc	a74 <read_file+0x348>
     a40:	b	a44 <read_file+0x318>
     a44:	ldr	r0, [sp, #20]
     a48:	cmp	r0, #16
     a4c:	beq	a64 <read_file+0x338>
     a50:	b	a90 <read_file+0x364>
     a54:	ldr	r0, [fp, #-8]
     a58:	movw	r1, #0
     a5c:	str	r1, [r0, #68]	; 0x44
     a60:	b	ab0 <read_file+0x384>
     a64:	ldr	r0, [fp, #-8]
     a68:	movw	r1, #1
     a6c:	str	r1, [r0, #68]	; 0x44
     a70:	b	ab0 <read_file+0x384>
     a74:	mvn	r0, #199	; 0xc7
     a78:	movw	r1, #0
     a7c:	movt	r1, #0
     a80:	bl	0 <coda_set_error>
     a84:	mvn	r0, #0
     a88:	str	r0, [fp, #-4]
     a8c:	b	b74 <read_file+0x448>
     a90:	ldr	r2, [sp, #28]
     a94:	mvn	r0, #199	; 0xc7
     a98:	movw	r1, #0
     a9c:	movt	r1, #0
     aa0:	bl	0 <coda_set_error>
     aa4:	mvn	r0, #0
     aa8:	str	r0, [fp, #-4]
     aac:	b	b74 <read_file+0x448>
     ab0:	ldr	r0, [sp, #24]
     ab4:	and	r0, r0, #1
     ab8:	cmp	r0, #0
     abc:	beq	ad0 <read_file+0x3a4>
     ac0:	ldr	r0, [fp, #-8]
     ac4:	movw	r1, #0
     ac8:	str	r1, [r0, #72]	; 0x48
     acc:	b	adc <read_file+0x3b0>
     ad0:	ldr	r0, [fp, #-8]
     ad4:	movw	r1, #1
     ad8:	str	r1, [r0, #72]	; 0x48
     adc:	ldr	r0, [sp, #24]
     ae0:	and	r0, r0, #2
     ae4:	cmp	r0, #0
     ae8:	bne	b08 <read_file+0x3dc>
     aec:	mvn	r0, #199	; 0xc7
     af0:	movw	r1, #0
     af4:	movt	r1, #0
     af8:	bl	0 <coda_set_error>
     afc:	mvn	r0, #0
     b00:	str	r0, [fp, #-4]
     b04:	b	b74 <read_file+0x448>
     b08:	ldr	r0, [sp, #24]
     b0c:	and	r0, r0, #4
     b10:	cmp	r0, #0
     b14:	movw	r0, #0
     b18:	str	r0, [sp, #16]
     b1c:	beq	b38 <read_file+0x40c>
     b20:	ldr	r0, [sp, #24]
     b24:	and	r0, r0, #8
     b28:	cmp	r0, #0
     b2c:	movw	r0, #0
     b30:	movne	r0, #1
     b34:	str	r0, [sp, #16]
     b38:	ldr	r0, [sp, #16]
     b3c:	and	r0, r0, #1
     b40:	ldr	r1, [fp, #-8]
     b44:	str	r0, [r1, #76]	; 0x4c
     b48:	ldr	r0, [fp, #-8]
     b4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     b50:	ldr	r3, [fp, #-20]	; 0xffffffec
     b54:	bl	cec <read_GDR>
     b58:	cmp	r0, #0
     b5c:	beq	b6c <read_file+0x440>
     b60:	mvn	r0, #0
     b64:	str	r0, [fp, #-4]
     b68:	b	b74 <read_file+0x448>
     b6c:	movw	r0, #0
     b70:	str	r0, [fp, #-4]
     b74:	ldr	r0, [fp, #-4]
     b78:	mov	sp, fp
     b7c:	pop	{fp, pc}
     b80:	.word	0xfffffed4

00000b84 <swap8>:
     b84:	sub	sp, sp, #8
     b88:	str	r0, [sp, #4]
     b8c:	ldr	r0, [sp, #4]
     b90:	str	r0, [sp]
     b94:	ldr	r0, [sp]
     b98:	ldrb	r0, [r0]
     b9c:	ldr	r1, [sp]
     ba0:	ldrb	r1, [r1, #7]
     ba4:	eor	r0, r0, r1
     ba8:	ldr	r1, [sp]
     bac:	strb	r0, [r1]
     bb0:	ldr	r0, [sp]
     bb4:	ldrb	r0, [r0]
     bb8:	ldr	r1, [sp]
     bbc:	ldrb	r1, [r1, #7]
     bc0:	eor	r0, r0, r1
     bc4:	ldr	r1, [sp]
     bc8:	strb	r0, [r1, #7]
     bcc:	ldr	r0, [sp]
     bd0:	ldrb	r0, [r0]
     bd4:	ldr	r1, [sp]
     bd8:	ldrb	r1, [r1, #7]
     bdc:	eor	r0, r0, r1
     be0:	ldr	r1, [sp]
     be4:	strb	r0, [r1]
     be8:	ldr	r0, [sp]
     bec:	ldrb	r0, [r0, #1]
     bf0:	ldr	r1, [sp]
     bf4:	ldrb	r1, [r1, #6]
     bf8:	eor	r0, r0, r1
     bfc:	ldr	r1, [sp]
     c00:	strb	r0, [r1, #1]
     c04:	ldr	r0, [sp]
     c08:	ldrb	r0, [r0, #1]
     c0c:	ldr	r1, [sp]
     c10:	ldrb	r1, [r1, #6]
     c14:	eor	r0, r0, r1
     c18:	ldr	r1, [sp]
     c1c:	strb	r0, [r1, #6]
     c20:	ldr	r0, [sp]
     c24:	ldrb	r0, [r0, #1]
     c28:	ldr	r1, [sp]
     c2c:	ldrb	r1, [r1, #6]
     c30:	eor	r0, r0, r1
     c34:	ldr	r1, [sp]
     c38:	strb	r0, [r1, #1]
     c3c:	ldr	r0, [sp]
     c40:	ldrb	r0, [r0, #2]
     c44:	ldr	r1, [sp]
     c48:	ldrb	r1, [r1, #5]
     c4c:	eor	r0, r0, r1
     c50:	ldr	r1, [sp]
     c54:	strb	r0, [r1, #2]
     c58:	ldr	r0, [sp]
     c5c:	ldrb	r0, [r0, #2]
     c60:	ldr	r1, [sp]
     c64:	ldrb	r1, [r1, #5]
     c68:	eor	r0, r0, r1
     c6c:	ldr	r1, [sp]
     c70:	strb	r0, [r1, #5]
     c74:	ldr	r0, [sp]
     c78:	ldrb	r0, [r0, #2]
     c7c:	ldr	r1, [sp]
     c80:	ldrb	r1, [r1, #5]
     c84:	eor	r0, r0, r1
     c88:	ldr	r1, [sp]
     c8c:	strb	r0, [r1, #2]
     c90:	ldr	r0, [sp]
     c94:	ldrb	r0, [r0, #3]
     c98:	ldr	r1, [sp]
     c9c:	ldrb	r1, [r1, #4]
     ca0:	eor	r0, r0, r1
     ca4:	ldr	r1, [sp]
     ca8:	strb	r0, [r1, #3]
     cac:	ldr	r0, [sp]
     cb0:	ldrb	r0, [r0, #3]
     cb4:	ldr	r1, [sp]
     cb8:	ldrb	r1, [r1, #4]
     cbc:	eor	r0, r0, r1
     cc0:	ldr	r1, [sp]
     cc4:	strb	r0, [r1, #4]
     cc8:	ldr	r0, [sp]
     ccc:	ldrb	r0, [r0, #3]
     cd0:	ldr	r1, [sp]
     cd4:	ldrb	r1, [r1, #4]
     cd8:	eor	r0, r0, r1
     cdc:	ldr	r1, [sp]
     ce0:	strb	r0, [r1, #3]
     ce4:	add	sp, sp, #8
     ce8:	bx	lr

00000cec <read_GDR>:
     cec:	push	{fp, lr}
     cf0:	mov	fp, sp
     cf4:	sub	sp, sp, #136	; 0x88
     cf8:	str	r0, [fp, #-8]
     cfc:	str	r3, [fp, #-12]
     d00:	str	r2, [fp, #-16]
     d04:	ldr	r0, [fp, #-8]
     d08:	ldr	r0, [r0, #52]	; 0x34
     d0c:	ldr	r2, [fp, #-16]
     d10:	ldr	r3, [fp, #-12]
     d14:	adds	r2, r2, #8
     d18:	adc	r3, r3, #0
     d1c:	sub	r1, fp, #20
     d20:	mov	ip, sp
     d24:	str	r1, [ip, #8]
     d28:	mov	r1, #0
     d2c:	str	r1, [ip, #4]
     d30:	mov	r1, #4
     d34:	str	r1, [ip]
     d38:	bl	404 <read_bytes>
     d3c:	cmp	r0, #0
     d40:	bge	d50 <read_GDR+0x64>
     d44:	mvn	r0, #0
     d48:	str	r0, [fp, #-4]
     d4c:	b	119c <read_GDR+0x4b0>
     d50:	sub	r0, fp, #20
     d54:	bl	66c <swap4>
     d58:	ldr	r0, [fp, #-20]	; 0xffffffec
     d5c:	cmp	r0, #2
     d60:	beq	d84 <read_GDR+0x98>
     d64:	ldr	r0, [pc, #1084]	; 11a8 <read_GDR+0x4bc>
     d68:	ldr	r2, [fp, #-20]	; 0xffffffec
     d6c:	movw	r1, #0
     d70:	movt	r1, #0
     d74:	bl	0 <coda_set_error>
     d78:	mvn	r0, #0
     d7c:	str	r0, [fp, #-4]
     d80:	b	119c <read_GDR+0x4b0>
     d84:	ldr	r0, [fp, #-8]
     d88:	ldr	r0, [r0, #52]	; 0x34
     d8c:	ldr	r1, [fp, #-16]
     d90:	ldr	r2, [fp, #-12]
     d94:	adds	r1, r1, #12
     d98:	adc	r3, r2, #0
     d9c:	sub	r2, fp, #32
     da0:	mov	ip, sp
     da4:	str	r2, [ip, #8]
     da8:	mov	r2, #0
     dac:	str	r2, [ip, #4]
     db0:	mov	r2, #8
     db4:	str	r2, [ip]
     db8:	mov	r2, r1
     dbc:	bl	404 <read_bytes>
     dc0:	cmp	r0, #0
     dc4:	bge	dd4 <read_GDR+0xe8>
     dc8:	mvn	r0, #0
     dcc:	str	r0, [fp, #-4]
     dd0:	b	119c <read_GDR+0x4b0>
     dd4:	ldr	r0, [fp, #-8]
     dd8:	ldr	r0, [r0, #52]	; 0x34
     ddc:	ldr	r1, [fp, #-16]
     de0:	ldr	r2, [fp, #-12]
     de4:	adds	r1, r1, #20
     de8:	adc	r3, r2, #0
     dec:	sub	r2, fp, #40	; 0x28
     df0:	mov	ip, sp
     df4:	str	r2, [ip, #8]
     df8:	mov	r2, #0
     dfc:	str	r2, [ip, #4]
     e00:	mov	r2, #8
     e04:	str	r2, [ip]
     e08:	mov	r2, r1
     e0c:	bl	404 <read_bytes>
     e10:	cmp	r0, #0
     e14:	bge	e24 <read_GDR+0x138>
     e18:	mvn	r0, #0
     e1c:	str	r0, [fp, #-4]
     e20:	b	119c <read_GDR+0x4b0>
     e24:	ldr	r0, [fp, #-8]
     e28:	ldr	r0, [r0, #52]	; 0x34
     e2c:	ldr	r1, [fp, #-16]
     e30:	ldr	r2, [fp, #-12]
     e34:	adds	r1, r1, #28
     e38:	adc	r3, r2, #0
     e3c:	sub	r2, fp, #48	; 0x30
     e40:	mov	ip, sp
     e44:	str	r2, [ip, #8]
     e48:	mov	r2, #0
     e4c:	str	r2, [ip, #4]
     e50:	mov	r2, #8
     e54:	str	r2, [ip]
     e58:	mov	r2, r1
     e5c:	bl	404 <read_bytes>
     e60:	cmp	r0, #0
     e64:	bge	e74 <read_GDR+0x188>
     e68:	mvn	r0, #0
     e6c:	str	r0, [fp, #-4]
     e70:	b	119c <read_GDR+0x4b0>
     e74:	ldr	r0, [fp, #-8]
     e78:	ldr	r0, [r0, #52]	; 0x34
     e7c:	ldr	r1, [fp, #-16]
     e80:	ldr	r2, [fp, #-12]
     e84:	adds	r1, r1, #36	; 0x24
     e88:	adc	r3, r2, #0
     e8c:	sub	r2, fp, #56	; 0x38
     e90:	mov	ip, sp
     e94:	str	r2, [ip, #8]
     e98:	mov	r2, #0
     e9c:	str	r2, [ip, #4]
     ea0:	mov	r2, #8
     ea4:	str	r2, [ip]
     ea8:	mov	r2, r1
     eac:	bl	404 <read_bytes>
     eb0:	cmp	r0, #0
     eb4:	bge	ec4 <read_GDR+0x1d8>
     eb8:	mvn	r0, #0
     ebc:	str	r0, [fp, #-4]
     ec0:	b	119c <read_GDR+0x4b0>
     ec4:	ldr	r0, [fp, #-8]
     ec8:	ldr	r0, [r0, #52]	; 0x34
     ecc:	ldr	r1, [fp, #-16]
     ed0:	ldr	r2, [fp, #-12]
     ed4:	adds	r1, r1, #44	; 0x2c
     ed8:	adc	r3, r2, #0
     edc:	sub	r2, fp, #60	; 0x3c
     ee0:	mov	ip, sp
     ee4:	str	r2, [ip, #8]
     ee8:	mov	r2, #0
     eec:	str	r2, [ip, #4]
     ef0:	mov	r2, #4
     ef4:	str	r2, [ip]
     ef8:	mov	r2, r1
     efc:	bl	404 <read_bytes>
     f00:	cmp	r0, #0
     f04:	bge	f14 <read_GDR+0x228>
     f08:	mvn	r0, #0
     f0c:	str	r0, [fp, #-4]
     f10:	b	119c <read_GDR+0x4b0>
     f14:	ldr	r0, [fp, #-8]
     f18:	ldr	r0, [r0, #52]	; 0x34
     f1c:	ldr	r1, [fp, #-16]
     f20:	ldr	r2, [fp, #-12]
     f24:	adds	r1, r1, #48	; 0x30
     f28:	adc	r3, r2, #0
     f2c:	sub	r2, fp, #64	; 0x40
     f30:	mov	ip, sp
     f34:	str	r2, [ip, #8]
     f38:	mov	r2, #0
     f3c:	str	r2, [ip, #4]
     f40:	mov	r2, #4
     f44:	str	r2, [ip]
     f48:	mov	r2, r1
     f4c:	bl	404 <read_bytes>
     f50:	cmp	r0, #0
     f54:	bge	f64 <read_GDR+0x278>
     f58:	mvn	r0, #0
     f5c:	str	r0, [fp, #-4]
     f60:	b	119c <read_GDR+0x4b0>
     f64:	ldr	r0, [fp, #-8]
     f68:	ldr	r0, [r0, #52]	; 0x34
     f6c:	ldr	r1, [fp, #-16]
     f70:	ldr	r2, [fp, #-12]
     f74:	adds	r1, r1, #56	; 0x38
     f78:	adc	r3, r2, #0
     f7c:	ldr	r2, [fp, #-8]
     f80:	add	r2, r2, #80	; 0x50
     f84:	mov	ip, sp
     f88:	str	r2, [ip, #8]
     f8c:	mov	r2, #0
     f90:	str	r2, [ip, #4]
     f94:	mov	r2, #4
     f98:	str	r2, [ip]
     f9c:	mov	r2, r1
     fa0:	bl	404 <read_bytes>
     fa4:	cmp	r0, #0
     fa8:	bge	fb8 <read_GDR+0x2cc>
     fac:	mvn	r0, #0
     fb0:	str	r0, [fp, #-4]
     fb4:	b	119c <read_GDR+0x4b0>
     fb8:	ldr	r0, [fp, #-8]
     fbc:	ldr	r0, [r0, #52]	; 0x34
     fc0:	ldr	r1, [fp, #-16]
     fc4:	ldr	r2, [fp, #-12]
     fc8:	adds	r1, r1, #60	; 0x3c
     fcc:	adc	r3, r2, #0
     fd0:	add	r2, sp, #68	; 0x44
     fd4:	mov	ip, sp
     fd8:	str	r2, [ip, #8]
     fdc:	mov	r2, #0
     fe0:	str	r2, [ip, #4]
     fe4:	mov	r2, #4
     fe8:	str	r2, [ip]
     fec:	mov	r2, r1
     ff0:	bl	404 <read_bytes>
     ff4:	cmp	r0, #0
     ff8:	bge	1008 <read_GDR+0x31c>
     ffc:	mvn	r0, #0
    1000:	str	r0, [fp, #-4]
    1004:	b	119c <read_GDR+0x4b0>
    1008:	sub	r0, fp, #32
    100c:	bl	b84 <swap8>
    1010:	sub	r0, fp, #40	; 0x28
    1014:	bl	b84 <swap8>
    1018:	sub	r0, fp, #48	; 0x30
    101c:	bl	b84 <swap8>
    1020:	sub	r0, fp, #56	; 0x38
    1024:	bl	b84 <swap8>
    1028:	sub	r0, fp, #60	; 0x3c
    102c:	bl	66c <swap4>
    1030:	sub	r0, fp, #64	; 0x40
    1034:	bl	66c <swap4>
    1038:	ldr	r0, [fp, #-8]
    103c:	add	r0, r0, #80	; 0x50
    1040:	bl	66c <swap4>
    1044:	add	r0, sp, #68	; 0x44
    1048:	bl	66c <swap4>
    104c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1050:	ldr	lr, [fp, #-52]	; 0xffffffcc
    1054:	ldr	r1, [fp, #-8]
    1058:	ldr	r2, [r1, #8]
    105c:	ldr	r1, [r1, #12]
    1060:	eor	r1, lr, r1
    1064:	eor	r0, r0, r2
    1068:	orr	r0, r0, r1
    106c:	cmp	r0, #0
    1070:	beq	10d8 <read_GDR+0x3ec>
    1074:	b	1078 <read_GDR+0x38c>
    1078:	add	r2, sp, #26
    107c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1080:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1084:	add	r3, sp, #47	; 0x2f
    1088:	str	r2, [sp, #20]
    108c:	mov	r2, r3
    1090:	bl	0 <coda_str64>
    1094:	ldr	r0, [fp, #-8]
    1098:	ldr	r1, [r0, #8]
    109c:	ldr	r0, [r0, #12]
    10a0:	str	r0, [sp, #16]
    10a4:	mov	r0, r1
    10a8:	ldr	r1, [sp, #16]
    10ac:	ldr	r2, [sp, #20]
    10b0:	bl	0 <coda_str64>
    10b4:	ldr	r0, [pc, #236]	; 11a8 <read_GDR+0x4bc>
    10b8:	add	r3, sp, #26
    10bc:	add	r2, sp, #47	; 0x2f
    10c0:	movw	r1, #0
    10c4:	movt	r1, #0
    10c8:	bl	0 <coda_set_error>
    10cc:	mvn	r0, #0
    10d0:	str	r0, [fp, #-4]
    10d4:	b	119c <read_GDR+0x4b0>
    10d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    10dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    10e0:	orr	r0, r0, r1
    10e4:	cmp	r0, #0
    10e8:	beq	1124 <read_GDR+0x438>
    10ec:	b	10f0 <read_GDR+0x404>
    10f0:	ldr	r0, [fp, #-8]
    10f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    10f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10fc:	mov	r1, sp
    1100:	mov	ip, #0
    1104:	str	ip, [r1]
    1108:	bl	11ac <read_VDR>
    110c:	cmp	r0, #0
    1110:	beq	1120 <read_GDR+0x434>
    1114:	mvn	r0, #0
    1118:	str	r0, [fp, #-4]
    111c:	b	119c <read_GDR+0x4b0>
    1120:	b	1124 <read_GDR+0x438>
    1124:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1128:	ldr	r1, [fp, #-36]	; 0xffffffdc
    112c:	orr	r0, r0, r1
    1130:	cmp	r0, #0
    1134:	beq	1170 <read_GDR+0x484>
    1138:	b	113c <read_GDR+0x450>
    113c:	ldr	r0, [fp, #-8]
    1140:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1144:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1148:	mov	r1, sp
    114c:	mov	ip, #1
    1150:	str	ip, [r1]
    1154:	bl	11ac <read_VDR>
    1158:	cmp	r0, #0
    115c:	beq	116c <read_GDR+0x480>
    1160:	mvn	r0, #0
    1164:	str	r0, [fp, #-4]
    1168:	b	119c <read_GDR+0x4b0>
    116c:	b	1170 <read_GDR+0x484>
    1170:	ldr	r0, [fp, #-8]
    1174:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1178:	ldr	r3, [fp, #-44]	; 0xffffffd4
    117c:	bl	1c20 <read_ADR>
    1180:	cmp	r0, #0
    1184:	beq	1194 <read_GDR+0x4a8>
    1188:	mvn	r0, #0
    118c:	str	r0, [fp, #-4]
    1190:	b	119c <read_GDR+0x4b0>
    1194:	movw	r0, #0
    1198:	str	r0, [fp, #-4]
    119c:	ldr	r0, [fp, #-4]
    11a0:	mov	sp, fp
    11a4:	pop	{fp, pc}
    11a8:	.word	0xfffffed4

000011ac <read_VDR>:
    11ac:	push	{r4, r5, r6, sl, fp, lr}
    11b0:	add	fp, sp, #16
    11b4:	sub	sp, sp, #480	; 0x1e0
    11b8:	ldr	r1, [fp, #8]
    11bc:	str	r0, [fp, #-24]	; 0xffffffe8
    11c0:	str	r3, [fp, #-28]	; 0xffffffe4
    11c4:	str	r2, [fp, #-32]	; 0xffffffe0
    11c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    11cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    11d0:	orr	r0, r0, r2
    11d4:	cmp	r0, #0
    11d8:	str	r1, [sp, #44]	; 0x2c
    11dc:	bne	11f0 <read_VDR+0x44>
    11e0:	b	11e4 <read_VDR+0x38>
    11e4:	movw	r0, #0
    11e8:	str	r0, [fp, #-20]	; 0xffffffec
    11ec:	b	1c10 <read_VDR+0xa64>
    11f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    11f4:	ldr	r0, [r0, #52]	; 0x34
    11f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    11fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1200:	adds	r1, r1, #8
    1204:	adc	r3, r2, #0
    1208:	sub	r2, fp, #44	; 0x2c
    120c:	mov	ip, sp
    1210:	str	r2, [ip, #8]
    1214:	mov	r2, #0
    1218:	str	r2, [ip, #4]
    121c:	mov	r2, #4
    1220:	str	r2, [ip]
    1224:	mov	r2, r1
    1228:	bl	404 <read_bytes>
    122c:	cmp	r0, #0
    1230:	bge	1240 <read_VDR+0x94>
    1234:	mvn	r0, #0
    1238:	str	r0, [fp, #-20]	; 0xffffffec
    123c:	b	1c10 <read_VDR+0xa64>
    1240:	sub	r0, fp, #44	; 0x2c
    1244:	bl	66c <swap4>
    1248:	ldr	r0, [fp, #8]
    124c:	cmp	r0, #0
    1250:	beq	1284 <read_VDR+0xd8>
    1254:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1258:	cmp	r0, #8
    125c:	beq	1280 <read_VDR+0xd4>
    1260:	ldr	r0, [pc, #2484]	; 1c1c <read_VDR+0xa70>
    1264:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1268:	movw	r1, #0
    126c:	movt	r1, #0
    1270:	bl	0 <coda_set_error>
    1274:	mvn	r0, #0
    1278:	str	r0, [fp, #-20]	; 0xffffffec
    127c:	b	1c10 <read_VDR+0xa64>
    1280:	b	12b4 <read_VDR+0x108>
    1284:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1288:	cmp	r0, #3
    128c:	beq	12b0 <read_VDR+0x104>
    1290:	ldr	r0, [pc, #2436]	; 1c1c <read_VDR+0xa70>
    1294:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1298:	movw	r1, #0
    129c:	movt	r1, #0
    12a0:	bl	0 <coda_set_error>
    12a4:	mvn	r0, #0
    12a8:	str	r0, [fp, #-20]	; 0xffffffec
    12ac:	b	1c10 <read_VDR+0xa64>
    12b0:	b	12b4 <read_VDR+0x108>
    12b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    12b8:	ldr	r0, [r0, #52]	; 0x34
    12bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    12c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    12c4:	adds	r1, r1, #12
    12c8:	adc	r3, r2, #0
    12cc:	sub	r2, fp, #56	; 0x38
    12d0:	mov	ip, sp
    12d4:	str	r2, [ip, #8]
    12d8:	mov	r2, #0
    12dc:	str	r2, [ip, #4]
    12e0:	mov	r2, #8
    12e4:	str	r2, [ip]
    12e8:	mov	r2, r1
    12ec:	bl	404 <read_bytes>
    12f0:	cmp	r0, #0
    12f4:	bge	1304 <read_VDR+0x158>
    12f8:	mvn	r0, #0
    12fc:	str	r0, [fp, #-20]	; 0xffffffec
    1300:	b	1c10 <read_VDR+0xa64>
    1304:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1308:	ldr	r0, [r0, #52]	; 0x34
    130c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1310:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1314:	adds	r1, r1, #20
    1318:	adc	r3, r2, #0
    131c:	sub	r2, fp, #60	; 0x3c
    1320:	mov	ip, sp
    1324:	str	r2, [ip, #8]
    1328:	mov	r2, #0
    132c:	str	r2, [ip, #4]
    1330:	mov	r2, #4
    1334:	str	r2, [ip]
    1338:	mov	r2, r1
    133c:	bl	404 <read_bytes>
    1340:	cmp	r0, #0
    1344:	bge	1354 <read_VDR+0x1a8>
    1348:	mvn	r0, #0
    134c:	str	r0, [fp, #-20]	; 0xffffffec
    1350:	b	1c10 <read_VDR+0xa64>
    1354:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1358:	ldr	r0, [r0, #52]	; 0x34
    135c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1360:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1364:	adds	r1, r1, #24
    1368:	adc	r3, r2, #0
    136c:	sub	r2, fp, #64	; 0x40
    1370:	mov	ip, sp
    1374:	str	r2, [ip, #8]
    1378:	mov	r2, #0
    137c:	str	r2, [ip, #4]
    1380:	mov	r2, #4
    1384:	str	r2, [ip]
    1388:	mov	r2, r1
    138c:	bl	404 <read_bytes>
    1390:	cmp	r0, #0
    1394:	bge	13a4 <read_VDR+0x1f8>
    1398:	mvn	r0, #0
    139c:	str	r0, [fp, #-20]	; 0xffffffec
    13a0:	b	1c10 <read_VDR+0xa64>
    13a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13a8:	ldr	r0, [r0, #52]	; 0x34
    13ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
    13b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    13b4:	adds	r1, r1, #28
    13b8:	adc	r3, r2, #0
    13bc:	sub	r2, fp, #72	; 0x48
    13c0:	mov	ip, sp
    13c4:	str	r2, [ip, #8]
    13c8:	mov	r2, #0
    13cc:	str	r2, [ip, #4]
    13d0:	mov	r2, #8
    13d4:	str	r2, [ip]
    13d8:	mov	r2, r1
    13dc:	bl	404 <read_bytes>
    13e0:	cmp	r0, #0
    13e4:	bge	13f4 <read_VDR+0x248>
    13e8:	mvn	r0, #0
    13ec:	str	r0, [fp, #-20]	; 0xffffffec
    13f0:	b	1c10 <read_VDR+0xa64>
    13f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13f8:	ldr	r0, [r0, #52]	; 0x34
    13fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1400:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1404:	adds	r1, r1, #36	; 0x24
    1408:	adc	r3, r2, #0
    140c:	sub	r2, fp, #80	; 0x50
    1410:	mov	ip, sp
    1414:	str	r2, [ip, #8]
    1418:	mov	r2, #0
    141c:	str	r2, [ip, #4]
    1420:	mov	r2, #8
    1424:	str	r2, [ip]
    1428:	mov	r2, r1
    142c:	bl	404 <read_bytes>
    1430:	cmp	r0, #0
    1434:	bge	1444 <read_VDR+0x298>
    1438:	mvn	r0, #0
    143c:	str	r0, [fp, #-20]	; 0xffffffec
    1440:	b	1c10 <read_VDR+0xa64>
    1444:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1448:	ldr	r0, [r0, #52]	; 0x34
    144c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1450:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1454:	adds	r1, r1, #44	; 0x2c
    1458:	adc	r3, r2, #0
    145c:	sub	r2, fp, #84	; 0x54
    1460:	mov	ip, sp
    1464:	str	r2, [ip, #8]
    1468:	mov	r2, #0
    146c:	str	r2, [ip, #4]
    1470:	mov	r2, #4
    1474:	str	r2, [ip]
    1478:	mov	r2, r1
    147c:	bl	404 <read_bytes>
    1480:	cmp	r0, #0
    1484:	bge	1494 <read_VDR+0x2e8>
    1488:	mvn	r0, #0
    148c:	str	r0, [fp, #-20]	; 0xffffffec
    1490:	b	1c10 <read_VDR+0xa64>
    1494:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1498:	ldr	r0, [r0, #52]	; 0x34
    149c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    14a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    14a4:	adds	r1, r1, #48	; 0x30
    14a8:	adc	r3, r2, #0
    14ac:	sub	r2, fp, #88	; 0x58
    14b0:	mov	ip, sp
    14b4:	str	r2, [ip, #8]
    14b8:	mov	r2, #0
    14bc:	str	r2, [ip, #4]
    14c0:	mov	r2, #4
    14c4:	str	r2, [ip]
    14c8:	mov	r2, r1
    14cc:	bl	404 <read_bytes>
    14d0:	cmp	r0, #0
    14d4:	bge	14e4 <read_VDR+0x338>
    14d8:	mvn	r0, #0
    14dc:	str	r0, [fp, #-20]	; 0xffffffec
    14e0:	b	1c10 <read_VDR+0xa64>
    14e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    14e8:	ldr	r0, [r0, #52]	; 0x34
    14ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
    14f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    14f4:	adds	r1, r1, #64	; 0x40
    14f8:	adc	r3, r2, #0
    14fc:	sub	r2, fp, #92	; 0x5c
    1500:	mov	ip, sp
    1504:	str	r2, [ip, #8]
    1508:	mov	r2, #0
    150c:	str	r2, [ip, #4]
    1510:	mov	r2, #4
    1514:	str	r2, [ip]
    1518:	mov	r2, r1
    151c:	bl	404 <read_bytes>
    1520:	cmp	r0, #0
    1524:	bge	1534 <read_VDR+0x388>
    1528:	mvn	r0, #0
    152c:	str	r0, [fp, #-20]	; 0xffffffec
    1530:	b	1c10 <read_VDR+0xa64>
    1534:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1538:	ldr	r0, [r0, #52]	; 0x34
    153c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1540:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1544:	adds	r1, r1, #68	; 0x44
    1548:	adc	r3, r2, #0
    154c:	sub	r2, fp, #96	; 0x60
    1550:	mov	ip, sp
    1554:	str	r2, [ip, #8]
    1558:	mov	r2, #0
    155c:	str	r2, [ip, #4]
    1560:	mov	r2, #4
    1564:	str	r2, [ip]
    1568:	mov	r2, r1
    156c:	bl	404 <read_bytes>
    1570:	cmp	r0, #0
    1574:	bge	1584 <read_VDR+0x3d8>
    1578:	mvn	r0, #0
    157c:	str	r0, [fp, #-20]	; 0xffffffec
    1580:	b	1c10 <read_VDR+0xa64>
    1584:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1588:	ldr	r0, [r0, #52]	; 0x34
    158c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1590:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1594:	adds	r1, r1, #72	; 0x48
    1598:	adc	r3, r2, #0
    159c:	sub	r2, fp, #104	; 0x68
    15a0:	mov	ip, sp
    15a4:	str	r2, [ip, #8]
    15a8:	mov	r2, #0
    15ac:	str	r2, [ip, #4]
    15b0:	mov	r2, #8
    15b4:	str	r2, [ip]
    15b8:	mov	r2, r1
    15bc:	bl	404 <read_bytes>
    15c0:	cmp	r0, #0
    15c4:	bge	15d4 <read_VDR+0x428>
    15c8:	mvn	r0, #0
    15cc:	str	r0, [fp, #-20]	; 0xffffffec
    15d0:	b	1c10 <read_VDR+0xa64>
    15d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    15d8:	ldr	r0, [r0, #52]	; 0x34
    15dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    15e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    15e4:	adds	r1, r1, #80	; 0x50
    15e8:	adc	r3, r2, #0
    15ec:	sub	r2, fp, #108	; 0x6c
    15f0:	mov	ip, sp
    15f4:	str	r2, [ip, #8]
    15f8:	mov	r2, #0
    15fc:	str	r2, [ip, #4]
    1600:	mov	r2, #4
    1604:	str	r2, [ip]
    1608:	mov	r2, r1
    160c:	bl	404 <read_bytes>
    1610:	cmp	r0, #0
    1614:	bge	1624 <read_VDR+0x478>
    1618:	mvn	r0, #0
    161c:	str	r0, [fp, #-20]	; 0xffffffec
    1620:	b	1c10 <read_VDR+0xa64>
    1624:	add	r0, sp, #131	; 0x83
    1628:	ldr	r1, [fp, #-24]	; 0xffffffe8
    162c:	ldr	r1, [r1, #52]	; 0x34
    1630:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1634:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1638:	adds	r2, r2, #84	; 0x54
    163c:	adc	r3, r3, #0
    1640:	mov	ip, sp
    1644:	str	r0, [ip, #8]
    1648:	mov	r0, #0
    164c:	str	r0, [ip, #4]
    1650:	mov	r0, #256	; 0x100
    1654:	str	r0, [ip]
    1658:	mov	r0, r1
    165c:	bl	404 <read_bytes>
    1660:	cmp	r0, #0
    1664:	bge	1674 <read_VDR+0x4c8>
    1668:	mvn	r0, #0
    166c:	str	r0, [fp, #-20]	; 0xffffffec
    1670:	b	1c10 <read_VDR+0xa64>
    1674:	add	r0, sp, #131	; 0x83
    1678:	movw	r1, #0
    167c:	strb	r1, [sp, #387]	; 0x183
    1680:	bl	2140 <rtrim>
    1684:	sub	r0, fp, #56	; 0x38
    1688:	bl	b84 <swap8>
    168c:	sub	r0, fp, #60	; 0x3c
    1690:	bl	66c <swap4>
    1694:	sub	r0, fp, #64	; 0x40
    1698:	bl	66c <swap4>
    169c:	sub	r0, fp, #72	; 0x48
    16a0:	bl	b84 <swap8>
    16a4:	sub	r0, fp, #80	; 0x50
    16a8:	bl	b84 <swap8>
    16ac:	sub	r0, fp, #84	; 0x54
    16b0:	bl	66c <swap4>
    16b4:	sub	r0, fp, #88	; 0x58
    16b8:	bl	66c <swap4>
    16bc:	sub	r0, fp, #92	; 0x5c
    16c0:	bl	66c <swap4>
    16c4:	sub	r0, fp, #96	; 0x60
    16c8:	bl	66c <swap4>
    16cc:	sub	r0, fp, #104	; 0x68
    16d0:	bl	b84 <swap8>
    16d4:	sub	r0, fp, #108	; 0x6c
    16d8:	bl	66c <swap4>
    16dc:	ldr	r0, [fp, #-60]	; 0xffffffc4
    16e0:	cmp	r0, #32
    16e4:	bne	1704 <read_VDR+0x558>
    16e8:	mvn	r0, #199	; 0xc7
    16ec:	movw	r1, #0
    16f0:	movt	r1, #0
    16f4:	bl	0 <coda_set_error>
    16f8:	mvn	r0, #0
    16fc:	str	r0, [fp, #-20]	; 0xffffffec
    1700:	b	1c10 <read_VDR+0xa64>
    1704:	ldr	r0, [fp, #8]
    1708:	cmp	r0, #0
    170c:	beq	18ac <read_VDR+0x700>
    1710:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1714:	ldr	r0, [r0, #52]	; 0x34
    1718:	ldr	r1, [fp, #-32]	; 0xffffffe0
    171c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1720:	adds	r1, r1, #340	; 0x154
    1724:	adc	r3, r2, #0
    1728:	add	r2, sp, #124	; 0x7c
    172c:	mov	ip, sp
    1730:	str	r2, [ip, #8]
    1734:	mov	r2, #0
    1738:	str	r2, [ip, #4]
    173c:	mov	r2, #4
    1740:	str	r2, [ip]
    1744:	mov	r2, r1
    1748:	bl	404 <read_bytes>
    174c:	cmp	r0, #0
    1750:	bge	1760 <read_VDR+0x5b4>
    1754:	mvn	r0, #0
    1758:	str	r0, [fp, #-20]	; 0xffffffec
    175c:	b	1c10 <read_VDR+0xa64>
    1760:	add	r0, sp, #124	; 0x7c
    1764:	bl	66c <swap4>
    1768:	ldr	r0, [sp, #124]	; 0x7c
    176c:	cmp	r0, #0
    1770:	bge	1798 <read_VDR+0x5ec>
    1774:	ldr	r0, [pc, #1184]	; 1c1c <read_VDR+0xa70>
    1778:	add	r2, sp, #131	; 0x83
    177c:	ldr	r3, [sp, #124]	; 0x7c
    1780:	movw	r1, #0
    1784:	movt	r1, #0
    1788:	bl	0 <coda_set_error>
    178c:	mvn	r0, #0
    1790:	str	r0, [fp, #-20]	; 0xffffffec
    1794:	b	1c10 <read_VDR+0xa64>
    1798:	ldr	r0, [sp, #124]	; 0x7c
    179c:	cmp	r0, #8
    17a0:	ble	17c8 <read_VDR+0x61c>
    17a4:	ldr	r0, [pc, #1136]	; 1c1c <read_VDR+0xa70>
    17a8:	add	r2, sp, #131	; 0x83
    17ac:	ldr	r3, [sp, #124]	; 0x7c
    17b0:	movw	r1, #0
    17b4:	movt	r1, #0
    17b8:	bl	0 <coda_set_error>
    17bc:	mvn	r0, #0
    17c0:	str	r0, [fp, #-20]	; 0xffffffec
    17c4:	b	1c10 <read_VDR+0xa64>
    17c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    17cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    17d0:	adds	r0, r0, #344	; 0x158
    17d4:	adc	r1, r1, #0
    17d8:	str	r0, [fp, #-32]	; 0xffffffe0
    17dc:	str	r1, [fp, #-28]	; 0xffffffe4
    17e0:	ldr	r0, [sp, #124]	; 0x7c
    17e4:	cmp	r0, #0
    17e8:	ble	18a8 <read_VDR+0x6fc>
    17ec:	movw	r0, #0
    17f0:	str	r0, [sp, #48]	; 0x30
    17f4:	ldr	r0, [sp, #48]	; 0x30
    17f8:	ldr	r1, [sp, #124]	; 0x7c
    17fc:	cmp	r0, r1
    1800:	bge	1888 <read_VDR+0x6dc>
    1804:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1808:	ldr	r0, [r0, #52]	; 0x34
    180c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1810:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1814:	ldr	r3, [sp, #48]	; 0x30
    1818:	adds	r1, r1, r3, lsl #2
    181c:	lsl	ip, r3, #2
    1820:	adc	r2, r2, ip, asr #31
    1824:	add	ip, sp, #92	; 0x5c
    1828:	add	r3, ip, r3, lsl #2
    182c:	mov	ip, sp
    1830:	str	r3, [ip, #8]
    1834:	mov	r3, #0
    1838:	str	r3, [ip, #4]
    183c:	mov	r3, #4
    1840:	str	r3, [ip]
    1844:	str	r2, [sp, #40]	; 0x28
    1848:	mov	r2, r1
    184c:	ldr	r3, [sp, #40]	; 0x28
    1850:	bl	404 <read_bytes>
    1854:	cmp	r0, #0
    1858:	bge	1868 <read_VDR+0x6bc>
    185c:	mvn	r0, #0
    1860:	str	r0, [fp, #-20]	; 0xffffffec
    1864:	b	1c10 <read_VDR+0xa64>
    1868:	ldr	r0, [sp, #48]	; 0x30
    186c:	add	r1, sp, #92	; 0x5c
    1870:	add	r0, r1, r0, lsl #2
    1874:	bl	66c <swap4>
    1878:	ldr	r0, [sp, #48]	; 0x30
    187c:	add	r0, r0, #1
    1880:	str	r0, [sp, #48]	; 0x30
    1884:	b	17f4 <read_VDR+0x648>
    1888:	ldr	r0, [sp, #124]	; 0x7c
    188c:	lsl	r1, r0, #2
    1890:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1894:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1898:	adds	r0, r2, r0, lsl #2
    189c:	adc	r1, r3, r1, asr #31
    18a0:	str	r0, [fp, #-32]	; 0xffffffe0
    18a4:	str	r1, [fp, #-28]	; 0xffffffe4
    18a8:	b	18b8 <read_VDR+0x70c>
    18ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    18b0:	ldr	r0, [r0, #80]	; 0x50
    18b4:	str	r0, [sp, #124]	; 0x7c
    18b8:	ldr	r0, [sp, #124]	; 0x7c
    18bc:	cmp	r0, #0
    18c0:	ble	1980 <read_VDR+0x7d4>
    18c4:	movw	r0, #0
    18c8:	str	r0, [sp, #48]	; 0x30
    18cc:	ldr	r0, [sp, #48]	; 0x30
    18d0:	ldr	r1, [sp, #124]	; 0x7c
    18d4:	cmp	r0, r1
    18d8:	bge	1960 <read_VDR+0x7b4>
    18dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    18e0:	ldr	r0, [r0, #52]	; 0x34
    18e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    18e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    18ec:	ldr	r3, [sp, #48]	; 0x30
    18f0:	adds	r1, r1, r3, lsl #2
    18f4:	lsl	ip, r3, #2
    18f8:	adc	r2, r2, ip, asr #31
    18fc:	add	ip, sp, #60	; 0x3c
    1900:	add	r3, ip, r3, lsl #2
    1904:	mov	ip, sp
    1908:	str	r3, [ip, #8]
    190c:	mov	r3, #0
    1910:	str	r3, [ip, #4]
    1914:	mov	r3, #4
    1918:	str	r3, [ip]
    191c:	str	r2, [sp, #36]	; 0x24
    1920:	mov	r2, r1
    1924:	ldr	r3, [sp, #36]	; 0x24
    1928:	bl	404 <read_bytes>
    192c:	cmp	r0, #0
    1930:	bge	1940 <read_VDR+0x794>
    1934:	mvn	r0, #0
    1938:	str	r0, [fp, #-20]	; 0xffffffec
    193c:	b	1c10 <read_VDR+0xa64>
    1940:	ldr	r0, [sp, #48]	; 0x30
    1944:	add	r1, sp, #60	; 0x3c
    1948:	add	r0, r1, r0, lsl #2
    194c:	bl	66c <swap4>
    1950:	ldr	r0, [sp, #48]	; 0x30
    1954:	add	r0, r0, #1
    1958:	str	r0, [sp, #48]	; 0x30
    195c:	b	18cc <read_VDR+0x720>
    1960:	ldr	r0, [sp, #124]	; 0x7c
    1964:	lsl	r1, r0, #2
    1968:	ldr	r2, [fp, #-32]	; 0xffffffe0
    196c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1970:	adds	r0, r2, r0, lsl #2
    1974:	adc	r1, r3, r1, asr #31
    1978:	str	r0, [fp, #-32]	; 0xffffffe0
    197c:	str	r1, [fp, #-28]	; 0xffffffe4
    1980:	ldr	r0, [fp, #-84]	; 0xffffffac
    1984:	and	r0, r0, #1
    1988:	str	r0, [sp, #56]	; 0x38
    198c:	ldr	r0, [fp, #-84]	; 0xffffffac
    1990:	and	r0, r0, #4
    1994:	str	r0, [sp, #52]	; 0x34
    1998:	ldr	r0, [sp, #56]	; 0x38
    199c:	cmp	r0, #0
    19a0:	bne	19d8 <read_VDR+0x82c>
    19a4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    19a8:	cmp	r0, #0
    19ac:	beq	19d8 <read_VDR+0x82c>
    19b0:	ldr	r0, [pc, #612]	; 1c1c <read_VDR+0xa70>
    19b4:	add	r2, sp, #131	; 0x83
    19b8:	ldr	r1, [fp, #-64]	; 0xffffffc0
    19bc:	add	r3, r1, #1
    19c0:	movw	r1, #0
    19c4:	movt	r1, #0
    19c8:	bl	0 <coda_set_error>
    19cc:	mvn	r0, #0
    19d0:	str	r0, [fp, #-20]	; 0xffffffec
    19d4:	b	1c10 <read_VDR+0xa64>
    19d8:	ldr	r0, [sp, #52]	; 0x34
    19dc:	cmp	r0, #0
    19e0:	beq	1a24 <read_VDR+0x878>
    19e4:	ldr	r0, [fp, #-104]	; 0xffffff98
    19e8:	ldr	r1, [fp, #-100]	; 0xffffff9c
    19ec:	and	r0, r0, r1
    19f0:	cmn	r0, #1
    19f4:	beq	1a24 <read_VDR+0x878>
    19f8:	b	19fc <read_VDR+0x850>
    19fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1a00:	ldr	r2, [fp, #-104]	; 0xffffff98
    1a04:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1a08:	bl	21d4 <read_CPR>
    1a0c:	cmp	r0, #0
    1a10:	beq	1a20 <read_VDR+0x874>
    1a14:	mvn	r0, #0
    1a18:	str	r0, [fp, #-20]	; 0xffffffec
    1a1c:	b	1c10 <read_VDR+0xa64>
    1a20:	b	1a24 <read_VDR+0x878>
    1a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1a28:	ldr	r0, [r0, #20]
    1a2c:	ldr	r0, [r0, #16]
    1a30:	ldr	r1, [fp, #-96]	; 0xffffffa0
    1a34:	cmp	r0, r1
    1a38:	beq	1a68 <read_VDR+0x8bc>
    1a3c:	ldr	r0, [pc, #472]	; 1c1c <read_VDR+0xa70>
    1a40:	ldr	r2, [fp, #-96]	; 0xffffffa0
    1a44:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1a48:	ldr	r1, [r1, #20]
    1a4c:	ldr	r3, [r1, #16]
    1a50:	movw	r1, #0
    1a54:	movt	r1, #0
    1a58:	bl	0 <coda_set_error>
    1a5c:	mvn	r0, #0
    1a60:	str	r0, [fp, #-20]	; 0xffffffec
    1a64:	b	1c10 <read_VDR+0xa64>
    1a68:	ldr	r0, [fp, #8]
    1a6c:	cmp	r0, #0
    1a70:	beq	1ae4 <read_VDR+0x938>
    1a74:	add	r0, sp, #60	; 0x3c
    1a78:	add	r1, sp, #92	; 0x5c
    1a7c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1a80:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1a84:	ldr	ip, [sp, #56]	; 0x38
    1a88:	ldr	lr, [sp, #124]	; 0x7c
    1a8c:	ldr	r4, [fp, #-24]	; 0xffffffe8
    1a90:	ldr	r4, [r4, #72]	; 0x48
    1a94:	ldr	r5, [fp, #-92]	; 0xffffffa4
    1a98:	ldr	r6, [fp, #-88]	; 0xffffffa8
    1a9c:	str	r0, [sp, #32]
    1aa0:	mov	r0, r2
    1aa4:	str	r1, [sp, #28]
    1aa8:	mov	r1, r3
    1aac:	mov	r2, ip
    1ab0:	mov	r3, lr
    1ab4:	ldr	ip, [sp, #28]
    1ab8:	str	ip, [sp]
    1abc:	ldr	lr, [sp, #32]
    1ac0:	str	lr, [sp, #4]
    1ac4:	str	r4, [sp, #8]
    1ac8:	str	r5, [sp, #12]
    1acc:	str	r6, [sp, #16]
    1ad0:	sub	r4, fp, #40	; 0x28
    1ad4:	str	r4, [sp, #20]
    1ad8:	bl	0 <coda_cdf_variable_new>
    1adc:	str	r0, [fp, #-36]	; 0xffffffdc
    1ae0:	b	1b4c <read_VDR+0x9a0>
    1ae4:	add	r0, sp, #60	; 0x3c
    1ae8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1aec:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1af0:	ldr	r3, [sp, #56]	; 0x38
    1af4:	ldr	ip, [sp, #124]	; 0x7c
    1af8:	ldr	lr, [fp, #-24]	; 0xffffffe8
    1afc:	add	lr, lr, #84	; 0x54
    1b00:	ldr	r4, [fp, #-24]	; 0xffffffe8
    1b04:	ldr	r4, [r4, #72]	; 0x48
    1b08:	ldr	r5, [fp, #-92]	; 0xffffffa4
    1b0c:	ldr	r6, [fp, #-88]	; 0xffffffa8
    1b10:	str	r0, [sp, #24]
    1b14:	mov	r0, r1
    1b18:	mov	r1, r2
    1b1c:	mov	r2, r3
    1b20:	mov	r3, ip
    1b24:	str	lr, [sp]
    1b28:	ldr	ip, [sp, #24]
    1b2c:	str	ip, [sp, #4]
    1b30:	str	r4, [sp, #8]
    1b34:	str	r5, [sp, #12]
    1b38:	str	r6, [sp, #16]
    1b3c:	sub	lr, fp, #40	; 0x28
    1b40:	str	lr, [sp, #20]
    1b44:	bl	0 <coda_cdf_variable_new>
    1b48:	str	r0, [fp, #-36]	; 0xffffffdc
    1b4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1b50:	movw	r1, #0
    1b54:	cmp	r0, r1
    1b58:	bne	1b68 <read_VDR+0x9bc>
    1b5c:	mvn	r0, #0
    1b60:	str	r0, [fp, #-20]	; 0xffffffec
    1b64:	b	1c10 <read_VDR+0xa64>
    1b68:	add	r1, sp, #131	; 0x83
    1b6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1b70:	ldr	r0, [r0, #20]
    1b74:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1b78:	movw	r3, #1
    1b7c:	bl	0 <coda_mem_record_add_field>
    1b80:	cmp	r0, #0
    1b84:	beq	1b9c <read_VDR+0x9f0>
    1b88:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1b8c:	bl	0 <coda_cdf_type_delete>
    1b90:	mvn	r0, #0
    1b94:	str	r0, [fp, #-20]	; 0xffffffec
    1b98:	b	1c10 <read_VDR+0xa64>
    1b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ba0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1ba4:	ldr	r2, [fp, #-72]	; 0xffffffb8
    1ba8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1bac:	mov	ip, sp
    1bb0:	mvn	lr, #0
    1bb4:	str	lr, [ip, #4]
    1bb8:	mov	lr, #0
    1bbc:	str	lr, [ip]
    1bc0:	bl	2330 <read_VXR>
    1bc4:	cmp	r0, #0
    1bc8:	beq	1bd8 <read_VDR+0xa2c>
    1bcc:	mvn	r0, #0
    1bd0:	str	r0, [fp, #-20]	; 0xffffffec
    1bd4:	b	1c10 <read_VDR+0xa64>
    1bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1bdc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1be0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1be4:	ldr	r1, [fp, #8]
    1be8:	mov	ip, sp
    1bec:	str	r1, [ip]
    1bf0:	bl	11ac <read_VDR>
    1bf4:	cmp	r0, #0
    1bf8:	beq	1c08 <read_VDR+0xa5c>
    1bfc:	mvn	r0, #0
    1c00:	str	r0, [fp, #-20]	; 0xffffffec
    1c04:	b	1c10 <read_VDR+0xa64>
    1c08:	movw	r0, #0
    1c0c:	str	r0, [fp, #-20]	; 0xffffffec
    1c10:	ldr	r0, [fp, #-20]	; 0xffffffec
    1c14:	sub	sp, fp, #16
    1c18:	pop	{r4, r5, r6, sl, fp, pc}
    1c1c:	.word	0xfffffed4

00001c20 <read_ADR>:
    1c20:	push	{r4, r5, fp, lr}
    1c24:	add	fp, sp, #8
    1c28:	sub	sp, sp, #352	; 0x160
    1c2c:	str	r0, [fp, #-16]
    1c30:	str	r3, [fp, #-20]	; 0xffffffec
    1c34:	str	r2, [fp, #-24]	; 0xffffffe8
    1c38:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c3c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1c40:	orr	r0, r0, r2
    1c44:	cmp	r0, #0
    1c48:	bne	1c5c <read_ADR+0x3c>
    1c4c:	b	1c50 <read_ADR+0x30>
    1c50:	movw	r0, #0
    1c54:	str	r0, [fp, #-12]
    1c58:	b	2130 <read_ADR+0x510>
    1c5c:	ldr	r0, [fp, #-16]
    1c60:	ldr	r0, [r0, #52]	; 0x34
    1c64:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1c68:	ldr	r2, [fp, #-20]	; 0xffffffec
    1c6c:	adds	r1, r1, #8
    1c70:	adc	r3, r2, #0
    1c74:	sub	r2, fp, #28
    1c78:	mov	ip, sp
    1c7c:	str	r2, [ip, #8]
    1c80:	mov	r2, #0
    1c84:	str	r2, [ip, #4]
    1c88:	mov	r2, #4
    1c8c:	str	r2, [ip]
    1c90:	mov	r2, r1
    1c94:	bl	404 <read_bytes>
    1c98:	cmp	r0, #0
    1c9c:	bge	1cac <read_ADR+0x8c>
    1ca0:	mvn	r0, #0
    1ca4:	str	r0, [fp, #-12]
    1ca8:	b	2130 <read_ADR+0x510>
    1cac:	sub	r0, fp, #28
    1cb0:	bl	66c <swap4>
    1cb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1cb8:	cmp	r0, #4
    1cbc:	beq	1ce0 <read_ADR+0xc0>
    1cc0:	ldr	r0, [pc, #1140]	; 213c <read_ADR+0x51c>
    1cc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1cc8:	movw	r1, #0
    1ccc:	movt	r1, #0
    1cd0:	bl	0 <coda_set_error>
    1cd4:	mvn	r0, #0
    1cd8:	str	r0, [fp, #-12]
    1cdc:	b	2130 <read_ADR+0x510>
    1ce0:	ldr	r0, [fp, #-16]
    1ce4:	ldr	r0, [r0, #52]	; 0x34
    1ce8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1cec:	ldr	r2, [fp, #-20]	; 0xffffffec
    1cf0:	adds	r1, r1, #12
    1cf4:	adc	r3, r2, #0
    1cf8:	sub	r2, fp, #40	; 0x28
    1cfc:	mov	ip, sp
    1d00:	str	r2, [ip, #8]
    1d04:	mov	r2, #0
    1d08:	str	r2, [ip, #4]
    1d0c:	mov	r2, #8
    1d10:	str	r2, [ip]
    1d14:	mov	r2, r1
    1d18:	bl	404 <read_bytes>
    1d1c:	cmp	r0, #0
    1d20:	bge	1d30 <read_ADR+0x110>
    1d24:	mvn	r0, #0
    1d28:	str	r0, [fp, #-12]
    1d2c:	b	2130 <read_ADR+0x510>
    1d30:	ldr	r0, [fp, #-16]
    1d34:	ldr	r0, [r0, #52]	; 0x34
    1d38:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1d3c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1d40:	adds	r1, r1, #20
    1d44:	adc	r3, r2, #0
    1d48:	sub	r2, fp, #48	; 0x30
    1d4c:	mov	ip, sp
    1d50:	str	r2, [ip, #8]
    1d54:	mov	r2, #0
    1d58:	str	r2, [ip, #4]
    1d5c:	mov	r2, #8
    1d60:	str	r2, [ip]
    1d64:	mov	r2, r1
    1d68:	bl	404 <read_bytes>
    1d6c:	cmp	r0, #0
    1d70:	bge	1d80 <read_ADR+0x160>
    1d74:	mvn	r0, #0
    1d78:	str	r0, [fp, #-12]
    1d7c:	b	2130 <read_ADR+0x510>
    1d80:	ldr	r0, [fp, #-16]
    1d84:	ldr	r0, [r0, #52]	; 0x34
    1d88:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1d8c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1d90:	adds	r1, r1, #28
    1d94:	adc	r3, r2, #0
    1d98:	sub	r2, fp, #52	; 0x34
    1d9c:	mov	ip, sp
    1da0:	str	r2, [ip, #8]
    1da4:	mov	r2, #0
    1da8:	str	r2, [ip, #4]
    1dac:	mov	r2, #4
    1db0:	str	r2, [ip]
    1db4:	mov	r2, r1
    1db8:	bl	404 <read_bytes>
    1dbc:	cmp	r0, #0
    1dc0:	bge	1dd0 <read_ADR+0x1b0>
    1dc4:	mvn	r0, #0
    1dc8:	str	r0, [fp, #-12]
    1dcc:	b	2130 <read_ADR+0x510>
    1dd0:	ldr	r0, [fp, #-16]
    1dd4:	ldr	r0, [r0, #52]	; 0x34
    1dd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1ddc:	ldr	r2, [fp, #-20]	; 0xffffffec
    1de0:	adds	r1, r1, #32
    1de4:	adc	r3, r2, #0
    1de8:	sub	r2, fp, #56	; 0x38
    1dec:	mov	ip, sp
    1df0:	str	r2, [ip, #8]
    1df4:	mov	r2, #0
    1df8:	str	r2, [ip, #4]
    1dfc:	mov	r2, #4
    1e00:	str	r2, [ip]
    1e04:	mov	r2, r1
    1e08:	bl	404 <read_bytes>
    1e0c:	cmp	r0, #0
    1e10:	bge	1e20 <read_ADR+0x200>
    1e14:	mvn	r0, #0
    1e18:	str	r0, [fp, #-12]
    1e1c:	b	2130 <read_ADR+0x510>
    1e20:	ldr	r0, [fp, #-16]
    1e24:	ldr	r0, [r0, #52]	; 0x34
    1e28:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1e2c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1e30:	adds	r1, r1, #36	; 0x24
    1e34:	adc	r3, r2, #0
    1e38:	sub	r2, fp, #60	; 0x3c
    1e3c:	mov	ip, sp
    1e40:	str	r2, [ip, #8]
    1e44:	mov	r2, #0
    1e48:	str	r2, [ip, #4]
    1e4c:	mov	r2, #4
    1e50:	str	r2, [ip]
    1e54:	mov	r2, r1
    1e58:	bl	404 <read_bytes>
    1e5c:	cmp	r0, #0
    1e60:	bge	1e70 <read_ADR+0x250>
    1e64:	mvn	r0, #0
    1e68:	str	r0, [fp, #-12]
    1e6c:	b	2130 <read_ADR+0x510>
    1e70:	ldr	r0, [fp, #-16]
    1e74:	ldr	r0, [r0, #52]	; 0x34
    1e78:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1e7c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1e80:	adds	r1, r1, #40	; 0x28
    1e84:	adc	r3, r2, #0
    1e88:	sub	r2, fp, #64	; 0x40
    1e8c:	mov	ip, sp
    1e90:	str	r2, [ip, #8]
    1e94:	mov	r2, #0
    1e98:	str	r2, [ip, #4]
    1e9c:	mov	r2, #4
    1ea0:	str	r2, [ip]
    1ea4:	mov	r2, r1
    1ea8:	bl	404 <read_bytes>
    1eac:	cmp	r0, #0
    1eb0:	bge	1ec0 <read_ADR+0x2a0>
    1eb4:	mvn	r0, #0
    1eb8:	str	r0, [fp, #-12]
    1ebc:	b	2130 <read_ADR+0x510>
    1ec0:	ldr	r0, [fp, #-16]
    1ec4:	ldr	r0, [r0, #52]	; 0x34
    1ec8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1ecc:	ldr	r2, [fp, #-20]	; 0xffffffec
    1ed0:	adds	r1, r1, #48	; 0x30
    1ed4:	adc	r3, r2, #0
    1ed8:	sub	r2, fp, #72	; 0x48
    1edc:	mov	ip, sp
    1ee0:	str	r2, [ip, #8]
    1ee4:	mov	r2, #0
    1ee8:	str	r2, [ip, #4]
    1eec:	mov	r2, #8
    1ef0:	str	r2, [ip]
    1ef4:	mov	r2, r1
    1ef8:	bl	404 <read_bytes>
    1efc:	cmp	r0, #0
    1f00:	bge	1f10 <read_ADR+0x2f0>
    1f04:	mvn	r0, #0
    1f08:	str	r0, [fp, #-12]
    1f0c:	b	2130 <read_ADR+0x510>
    1f10:	ldr	r0, [fp, #-16]
    1f14:	ldr	r0, [r0, #52]	; 0x34
    1f18:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1f1c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1f20:	adds	r1, r1, #56	; 0x38
    1f24:	adc	r3, r2, #0
    1f28:	sub	r2, fp, #76	; 0x4c
    1f2c:	mov	ip, sp
    1f30:	str	r2, [ip, #8]
    1f34:	mov	r2, #0
    1f38:	str	r2, [ip, #4]
    1f3c:	mov	r2, #4
    1f40:	str	r2, [ip]
    1f44:	mov	r2, r1
    1f48:	bl	404 <read_bytes>
    1f4c:	cmp	r0, #0
    1f50:	bge	1f60 <read_ADR+0x340>
    1f54:	mvn	r0, #0
    1f58:	str	r0, [fp, #-12]
    1f5c:	b	2130 <read_ADR+0x510>
    1f60:	ldr	r0, [fp, #-16]
    1f64:	ldr	r0, [r0, #52]	; 0x34
    1f68:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1f6c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1f70:	adds	r1, r1, #60	; 0x3c
    1f74:	adc	r3, r2, #0
    1f78:	sub	r2, fp, #80	; 0x50
    1f7c:	mov	ip, sp
    1f80:	str	r2, [ip, #8]
    1f84:	mov	r2, #0
    1f88:	str	r2, [ip, #4]
    1f8c:	mov	r2, #4
    1f90:	str	r2, [ip]
    1f94:	mov	r2, r1
    1f98:	bl	404 <read_bytes>
    1f9c:	cmp	r0, #0
    1fa0:	bge	1fb0 <read_ADR+0x390>
    1fa4:	mvn	r0, #0
    1fa8:	str	r0, [fp, #-12]
    1fac:	b	2130 <read_ADR+0x510>
    1fb0:	add	r0, sp, #15
    1fb4:	ldr	r1, [fp, #-16]
    1fb8:	ldr	r1, [r1, #52]	; 0x34
    1fbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1fc0:	ldr	r3, [fp, #-20]	; 0xffffffec
    1fc4:	adds	r2, r2, #68	; 0x44
    1fc8:	adc	r3, r3, #0
    1fcc:	mov	ip, sp
    1fd0:	str	r0, [ip, #8]
    1fd4:	mov	r0, #0
    1fd8:	str	r0, [ip, #4]
    1fdc:	mov	r0, #256	; 0x100
    1fe0:	str	r0, [ip]
    1fe4:	mov	r0, r1
    1fe8:	bl	404 <read_bytes>
    1fec:	cmp	r0, #0
    1ff0:	bge	2000 <read_ADR+0x3e0>
    1ff4:	mvn	r0, #0
    1ff8:	str	r0, [fp, #-12]
    1ffc:	b	2130 <read_ADR+0x510>
    2000:	mov	r0, #0
    2004:	strb	r0, [sp, #271]	; 0x10f
    2008:	add	r0, sp, #15
    200c:	bl	2140 <rtrim>
    2010:	sub	r0, fp, #40	; 0x28
    2014:	bl	b84 <swap8>
    2018:	sub	r0, fp, #48	; 0x30
    201c:	bl	b84 <swap8>
    2020:	sub	r0, fp, #52	; 0x34
    2024:	bl	66c <swap4>
    2028:	sub	r0, fp, #56	; 0x38
    202c:	bl	66c <swap4>
    2030:	sub	r0, fp, #60	; 0x3c
    2034:	bl	66c <swap4>
    2038:	sub	r0, fp, #64	; 0x40
    203c:	bl	66c <swap4>
    2040:	sub	r0, fp, #72	; 0x48
    2044:	bl	b84 <swap8>
    2048:	sub	r0, fp, #76	; 0x4c
    204c:	bl	66c <swap4>
    2050:	sub	r0, fp, #80	; 0x50
    2054:	bl	66c <swap4>
    2058:	ldr	r0, [fp, #-48]	; 0xffffffd0
    205c:	ldr	lr, [fp, #-44]	; 0xffffffd4
    2060:	str	lr, [fp, #-84]	; 0xffffffac
    2064:	str	r0, [fp, #-88]	; 0xffffffa8
    2068:	ldr	r0, [fp, #-52]	; 0xffffffcc
    206c:	and	r0, r0, #1
    2070:	cmp	r0, #0
    2074:	beq	20a8 <read_ADR+0x488>
    2078:	ldr	r0, [fp, #-76]	; 0xffffffb4
    207c:	cmp	r0, #0
    2080:	beq	20a4 <read_ADR+0x484>
    2084:	ldr	r0, [pc, #176]	; 213c <read_ADR+0x51c>
    2088:	ldr	r2, [fp, #-76]	; 0xffffffb4
    208c:	movw	r1, #0
    2090:	movt	r1, #0
    2094:	bl	0 <coda_set_error>
    2098:	mvn	r0, #0
    209c:	str	r0, [fp, #-12]
    20a0:	b	2130 <read_ADR+0x510>
    20a4:	b	20c8 <read_ADR+0x4a8>
    20a8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    20ac:	cmp	r0, #0
    20b0:	bne	20c4 <read_ADR+0x4a4>
    20b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    20b8:	ldr	r1, [fp, #-68]	; 0xffffffbc
    20bc:	str	r1, [fp, #-84]	; 0xffffffac
    20c0:	str	r0, [fp, #-88]	; 0xffffffa8
    20c4:	b	20c8 <read_ADR+0x4a8>
    20c8:	add	r0, sp, #15
    20cc:	ldr	r1, [fp, #-16]
    20d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    20d4:	ldr	r3, [fp, #-84]	; 0xffffffac
    20d8:	ldr	ip, [fp, #-52]	; 0xffffffcc
    20dc:	mov	lr, sp
    20e0:	str	ip, [lr, #4]
    20e4:	str	r0, [lr]
    20e8:	mov	r0, r1
    20ec:	bl	2ddc <read_AEDR>
    20f0:	cmp	r0, #0
    20f4:	beq	2104 <read_ADR+0x4e4>
    20f8:	mvn	r0, #0
    20fc:	str	r0, [fp, #-12]
    2100:	b	2130 <read_ADR+0x510>
    2104:	ldr	r0, [fp, #-16]
    2108:	ldr	r2, [fp, #-40]	; 0xffffffd8
    210c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2110:	bl	1c20 <read_ADR>
    2114:	cmp	r0, #0
    2118:	beq	2128 <read_ADR+0x508>
    211c:	mvn	r0, #0
    2120:	str	r0, [fp, #-12]
    2124:	b	2130 <read_ADR+0x510>
    2128:	movw	r0, #0
    212c:	str	r0, [fp, #-12]
    2130:	ldr	r0, [fp, #-12]
    2134:	sub	sp, fp, #8
    2138:	pop	{r4, r5, fp, pc}
    213c:	.word	0xfffffed4

00002140 <rtrim>:
    2140:	push	{fp, lr}
    2144:	mov	fp, sp
    2148:	sub	sp, sp, #16
    214c:	str	r0, [fp, #-4]
    2150:	ldr	r0, [fp, #-4]
    2154:	bl	0 <strlen>
    2158:	str	r0, [sp, #8]
    215c:	ldr	r0, [sp, #8]
    2160:	cmp	r0, #0
    2164:	movw	r0, #0
    2168:	str	r0, [sp, #4]
    216c:	ble	2194 <rtrim+0x54>
    2170:	ldr	r0, [fp, #-4]
    2174:	ldr	r1, [sp, #8]
    2178:	sub	r1, r1, #1
    217c:	add	r0, r0, r1
    2180:	ldrb	r0, [r0]
    2184:	cmp	r0, #32
    2188:	movw	r0, #0
    218c:	moveq	r0, #1
    2190:	str	r0, [sp, #4]
    2194:	ldr	r0, [sp, #4]
    2198:	tst	r0, #1
    219c:	beq	21cc <rtrim+0x8c>
    21a0:	ldr	r0, [fp, #-4]
    21a4:	ldr	r1, [sp, #8]
    21a8:	sub	r1, r1, #1
    21ac:	add	r0, r0, r1
    21b0:	movw	r1, #0
    21b4:	strb	r1, [r0]
    21b8:	ldr	r0, [sp, #8]
    21bc:	mvn	r1, #0
    21c0:	add	r0, r0, r1
    21c4:	str	r0, [sp, #8]
    21c8:	b	215c <rtrim+0x1c>
    21cc:	mov	sp, fp
    21d0:	pop	{fp, pc}

000021d4 <read_CPR>:
    21d4:	push	{fp, lr}
    21d8:	mov	fp, sp
    21dc:	sub	sp, sp, #40	; 0x28
    21e0:	str	r0, [fp, #-8]
    21e4:	str	r3, [fp, #-12]
    21e8:	str	r2, [fp, #-16]
    21ec:	ldr	r0, [fp, #-16]
    21f0:	ldr	r2, [fp, #-12]
    21f4:	orr	r0, r0, r2
    21f8:	cmp	r0, #0
    21fc:	bne	2210 <read_CPR+0x3c>
    2200:	b	2204 <read_CPR+0x30>
    2204:	movw	r0, #0
    2208:	str	r0, [fp, #-4]
    220c:	b	2320 <read_CPR+0x14c>
    2210:	ldr	r0, [fp, #-8]
    2214:	ldr	r0, [r0, #52]	; 0x34
    2218:	ldr	r1, [fp, #-16]
    221c:	ldr	r2, [fp, #-12]
    2220:	adds	r1, r1, #8
    2224:	adc	r3, r2, #0
    2228:	add	r2, sp, #20
    222c:	mov	ip, sp
    2230:	str	r2, [ip, #8]
    2234:	mov	r2, #0
    2238:	str	r2, [ip, #4]
    223c:	mov	r2, #4
    2240:	str	r2, [ip]
    2244:	mov	r2, r1
    2248:	bl	404 <read_bytes>
    224c:	cmp	r0, #0
    2250:	bge	2260 <read_CPR+0x8c>
    2254:	mvn	r0, #0
    2258:	str	r0, [fp, #-4]
    225c:	b	2320 <read_CPR+0x14c>
    2260:	add	r0, sp, #20
    2264:	bl	66c <swap4>
    2268:	ldr	r0, [sp, #20]
    226c:	cmp	r0, #11
    2270:	beq	2294 <read_CPR+0xc0>
    2274:	ldr	r0, [pc, #176]	; 232c <read_CPR+0x158>
    2278:	ldr	r2, [sp, #20]
    227c:	movw	r1, #0
    2280:	movt	r1, #0
    2284:	bl	0 <coda_set_error>
    2288:	mvn	r0, #0
    228c:	str	r0, [fp, #-4]
    2290:	b	2320 <read_CPR+0x14c>
    2294:	ldr	r0, [fp, #-8]
    2298:	ldr	r0, [r0, #52]	; 0x34
    229c:	ldr	r1, [fp, #-16]
    22a0:	ldr	r2, [fp, #-12]
    22a4:	adds	r1, r1, #12
    22a8:	adc	r3, r2, #0
    22ac:	add	r2, sp, #16
    22b0:	mov	ip, sp
    22b4:	str	r2, [ip, #8]
    22b8:	mov	r2, #0
    22bc:	str	r2, [ip, #4]
    22c0:	mov	r2, #4
    22c4:	str	r2, [ip]
    22c8:	mov	r2, r1
    22cc:	bl	404 <read_bytes>
    22d0:	cmp	r0, #0
    22d4:	bge	22e4 <read_CPR+0x110>
    22d8:	mvn	r0, #0
    22dc:	str	r0, [fp, #-4]
    22e0:	b	2320 <read_CPR+0x14c>
    22e4:	add	r0, sp, #16
    22e8:	bl	66c <swap4>
    22ec:	ldr	r0, [sp, #16]
    22f0:	cmp	r0, #5
    22f4:	beq	2318 <read_CPR+0x144>
    22f8:	ldr	r2, [sp, #16]
    22fc:	mvn	r0, #199	; 0xc7
    2300:	movw	r1, #0
    2304:	movt	r1, #0
    2308:	bl	0 <coda_set_error>
    230c:	mvn	r0, #0
    2310:	str	r0, [fp, #-4]
    2314:	b	2320 <read_CPR+0x14c>
    2318:	movw	r0, #0
    231c:	str	r0, [fp, #-4]
    2320:	ldr	r0, [fp, #-4]
    2324:	mov	sp, fp
    2328:	pop	{fp, pc}
    232c:	.word	0xfffffed4

00002330 <read_VXR>:
    2330:	push	{r4, sl, fp, lr}
    2334:	add	fp, sp, #8
    2338:	sub	sp, sp, #96	; 0x60
    233c:	ldr	ip, [fp, #12]
    2340:	ldr	lr, [fp, #8]
    2344:	str	r0, [fp, #-16]
    2348:	str	r1, [fp, #-20]	; 0xffffffec
    234c:	str	r3, [fp, #-28]	; 0xffffffe4
    2350:	str	r2, [fp, #-32]	; 0xffffffe0
    2354:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2358:	ldr	r1, [fp, #-28]	; 0xffffffe4
    235c:	orr	r0, r0, r1
    2360:	cmp	r0, #0
    2364:	str	ip, [sp, #20]
    2368:	str	lr, [sp, #16]
    236c:	bne	2380 <read_VXR+0x50>
    2370:	b	2374 <read_VXR+0x44>
    2374:	movw	r0, #0
    2378:	str	r0, [fp, #-12]
    237c:	b	2700 <read_VXR+0x3d0>
    2380:	ldr	r0, [fp, #-16]
    2384:	ldr	r0, [r0, #52]	; 0x34
    2388:	ldr	r1, [fp, #-32]	; 0xffffffe0
    238c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2390:	adds	r1, r1, #8
    2394:	adc	r3, r2, #0
    2398:	sub	r2, fp, #36	; 0x24
    239c:	mov	ip, sp
    23a0:	str	r2, [ip, #8]
    23a4:	mov	r2, #0
    23a8:	str	r2, [ip, #4]
    23ac:	mov	r2, #4
    23b0:	str	r2, [ip]
    23b4:	mov	r2, r1
    23b8:	bl	404 <read_bytes>
    23bc:	cmp	r0, #0
    23c0:	bge	23d0 <read_VXR+0xa0>
    23c4:	mvn	r0, #0
    23c8:	str	r0, [fp, #-12]
    23cc:	b	2700 <read_VXR+0x3d0>
    23d0:	sub	r0, fp, #36	; 0x24
    23d4:	bl	66c <swap4>
    23d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    23dc:	cmp	r0, #6
    23e0:	beq	2404 <read_VXR+0xd4>
    23e4:	ldr	r0, [pc, #800]	; 270c <read_VXR+0x3dc>
    23e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    23ec:	movw	r1, #0
    23f0:	movt	r1, #0
    23f4:	bl	0 <coda_set_error>
    23f8:	mvn	r0, #0
    23fc:	str	r0, [fp, #-12]
    2400:	b	2700 <read_VXR+0x3d0>
    2404:	ldr	r0, [fp, #-16]
    2408:	ldr	r0, [r0, #52]	; 0x34
    240c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2410:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2414:	adds	r1, r1, #12
    2418:	adc	r3, r2, #0
    241c:	sub	r2, fp, #48	; 0x30
    2420:	mov	ip, sp
    2424:	str	r2, [ip, #8]
    2428:	mov	r2, #0
    242c:	str	r2, [ip, #4]
    2430:	mov	r2, #8
    2434:	str	r2, [ip]
    2438:	mov	r2, r1
    243c:	bl	404 <read_bytes>
    2440:	cmp	r0, #0
    2444:	bge	2454 <read_VXR+0x124>
    2448:	mvn	r0, #0
    244c:	str	r0, [fp, #-12]
    2450:	b	2700 <read_VXR+0x3d0>
    2454:	ldr	r0, [fp, #-16]
    2458:	ldr	r0, [r0, #52]	; 0x34
    245c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2460:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2464:	adds	r1, r1, #20
    2468:	adc	r3, r2, #0
    246c:	add	r2, sp, #52	; 0x34
    2470:	mov	ip, sp
    2474:	str	r2, [ip, #8]
    2478:	mov	r2, #0
    247c:	str	r2, [ip, #4]
    2480:	mov	r2, #4
    2484:	str	r2, [ip]
    2488:	mov	r2, r1
    248c:	bl	404 <read_bytes>
    2490:	cmp	r0, #0
    2494:	bge	24a4 <read_VXR+0x174>
    2498:	mvn	r0, #0
    249c:	str	r0, [fp, #-12]
    24a0:	b	2700 <read_VXR+0x3d0>
    24a4:	ldr	r0, [fp, #-16]
    24a8:	ldr	r0, [r0, #52]	; 0x34
    24ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
    24b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    24b4:	adds	r1, r1, #24
    24b8:	adc	r3, r2, #0
    24bc:	add	r2, sp, #48	; 0x30
    24c0:	mov	ip, sp
    24c4:	str	r2, [ip, #8]
    24c8:	mov	r2, #0
    24cc:	str	r2, [ip, #4]
    24d0:	mov	r2, #4
    24d4:	str	r2, [ip]
    24d8:	mov	r2, r1
    24dc:	bl	404 <read_bytes>
    24e0:	cmp	r0, #0
    24e4:	bge	24f4 <read_VXR+0x1c4>
    24e8:	mvn	r0, #0
    24ec:	str	r0, [fp, #-12]
    24f0:	b	2700 <read_VXR+0x3d0>
    24f4:	sub	r0, fp, #48	; 0x30
    24f8:	bl	b84 <swap8>
    24fc:	add	r0, sp, #52	; 0x34
    2500:	bl	66c <swap4>
    2504:	add	r0, sp, #48	; 0x30
    2508:	bl	66c <swap4>
    250c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2510:	ldr	lr, [fp, #-28]	; 0xffffffe4
    2514:	adds	r0, r0, #28
    2518:	adc	lr, lr, #0
    251c:	str	r0, [fp, #-32]	; 0xffffffe0
    2520:	str	lr, [fp, #-28]	; 0xffffffe4
    2524:	movw	r0, #0
    2528:	str	r0, [sp, #44]	; 0x2c
    252c:	ldr	r0, [sp, #44]	; 0x2c
    2530:	ldr	r1, [sp, #48]	; 0x30
    2534:	cmp	r0, r1
    2538:	bge	26bc <read_VXR+0x38c>
    253c:	ldr	r0, [fp, #-16]
    2540:	ldr	r0, [r0, #52]	; 0x34
    2544:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2548:	ldr	r2, [fp, #-28]	; 0xffffffe4
    254c:	ldr	r3, [sp, #44]	; 0x2c
    2550:	lsl	ip, r3, #2
    2554:	adds	r1, r1, r3, lsl #2
    2558:	adc	r3, r2, ip, asr #31
    255c:	add	r2, sp, #40	; 0x28
    2560:	mov	ip, sp
    2564:	str	r2, [ip, #8]
    2568:	mov	r2, #0
    256c:	str	r2, [ip, #4]
    2570:	mov	r2, #4
    2574:	str	r2, [ip]
    2578:	mov	r2, r1
    257c:	bl	404 <read_bytes>
    2580:	cmp	r0, #0
    2584:	bge	2594 <read_VXR+0x264>
    2588:	mvn	r0, #0
    258c:	str	r0, [fp, #-12]
    2590:	b	2700 <read_VXR+0x3d0>
    2594:	ldr	r0, [fp, #-16]
    2598:	ldr	r0, [r0, #52]	; 0x34
    259c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    25a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    25a4:	ldr	r3, [sp, #44]	; 0x2c
    25a8:	ldr	ip, [sp, #52]	; 0x34
    25ac:	add	r3, r3, ip
    25b0:	lsl	ip, r3, #2
    25b4:	adds	r1, r1, r3, lsl #2
    25b8:	adc	r3, r2, ip, asr #31
    25bc:	add	r2, sp, #36	; 0x24
    25c0:	mov	ip, sp
    25c4:	str	r2, [ip, #8]
    25c8:	mov	r2, #0
    25cc:	str	r2, [ip, #4]
    25d0:	mov	r2, #4
    25d4:	str	r2, [ip]
    25d8:	mov	r2, r1
    25dc:	bl	404 <read_bytes>
    25e0:	cmp	r0, #0
    25e4:	bge	25f4 <read_VXR+0x2c4>
    25e8:	mvn	r0, #0
    25ec:	str	r0, [fp, #-12]
    25f0:	b	2700 <read_VXR+0x3d0>
    25f4:	ldr	r0, [fp, #-16]
    25f8:	ldr	r0, [r0, #52]	; 0x34
    25fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2600:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2604:	ldr	r3, [sp, #44]	; 0x2c
    2608:	ldr	ip, [sp, #52]	; 0x34
    260c:	add	r3, r3, ip
    2610:	lsl	ip, r3, #3
    2614:	adds	r1, r1, r3, lsl #3
    2618:	adc	r3, r2, ip, asr #31
    261c:	add	r2, sp, #24
    2620:	mov	ip, sp
    2624:	str	r2, [ip, #8]
    2628:	mov	r2, #0
    262c:	str	r2, [ip, #4]
    2630:	mov	r2, #8
    2634:	str	r2, [ip]
    2638:	mov	r2, r1
    263c:	bl	404 <read_bytes>
    2640:	cmp	r0, #0
    2644:	bge	2654 <read_VXR+0x324>
    2648:	mvn	r0, #0
    264c:	str	r0, [fp, #-12]
    2650:	b	2700 <read_VXR+0x3d0>
    2654:	add	r0, sp, #40	; 0x28
    2658:	bl	66c <swap4>
    265c:	add	r0, sp, #36	; 0x24
    2660:	bl	66c <swap4>
    2664:	add	r0, sp, #24
    2668:	bl	b84 <swap8>
    266c:	ldr	r0, [fp, #-16]
    2670:	ldr	r1, [fp, #-20]	; 0xffffffec
    2674:	ldr	r2, [sp, #24]
    2678:	ldr	r3, [sp, #28]
    267c:	ldr	lr, [sp, #40]	; 0x28
    2680:	ldr	ip, [sp, #36]	; 0x24
    2684:	mov	r4, sp
    2688:	str	ip, [r4, #4]
    268c:	str	lr, [r4]
    2690:	bl	2710 <read_VR>
    2694:	cmp	r0, #0
    2698:	beq	26a8 <read_VXR+0x378>
    269c:	mvn	r0, #0
    26a0:	str	r0, [fp, #-12]
    26a4:	b	2700 <read_VXR+0x3d0>
    26a8:	b	26ac <read_VXR+0x37c>
    26ac:	ldr	r0, [sp, #44]	; 0x2c
    26b0:	add	r0, r0, #1
    26b4:	str	r0, [sp, #44]	; 0x2c
    26b8:	b	252c <read_VXR+0x1fc>
    26bc:	ldr	r0, [fp, #-16]
    26c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    26c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    26c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    26cc:	ldr	ip, [fp, #8]
    26d0:	ldr	lr, [fp, #12]
    26d4:	mov	r4, sp
    26d8:	str	lr, [r4, #4]
    26dc:	str	ip, [r4]
    26e0:	bl	2330 <read_VXR>
    26e4:	cmp	r0, #0
    26e8:	beq	26f8 <read_VXR+0x3c8>
    26ec:	mvn	r0, #0
    26f0:	str	r0, [fp, #-12]
    26f4:	b	2700 <read_VXR+0x3d0>
    26f8:	movw	r0, #0
    26fc:	str	r0, [fp, #-12]
    2700:	ldr	r0, [fp, #-12]
    2704:	sub	sp, fp, #8
    2708:	pop	{r4, sl, fp, pc}
    270c:	.word	0xfffffed4

00002710 <read_VR>:
    2710:	push	{r4, sl, fp, lr}
    2714:	add	fp, sp, #8
    2718:	sub	sp, sp, #152	; 0x98
    271c:	ldr	ip, [fp, #12]
    2720:	ldr	lr, [fp, #8]
    2724:	str	r0, [fp, #-16]
    2728:	str	r1, [fp, #-20]	; 0xffffffec
    272c:	str	r3, [fp, #-28]	; 0xffffffe4
    2730:	str	r2, [fp, #-32]	; 0xffffffe0
    2734:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2738:	ldr	r1, [fp, #-28]	; 0xffffffe4
    273c:	orr	r0, r0, r1
    2740:	cmp	r0, #0
    2744:	str	ip, [sp, #36]	; 0x24
    2748:	str	lr, [sp, #32]
    274c:	bne	2760 <read_VR+0x50>
    2750:	b	2754 <read_VR+0x44>
    2754:	movw	r0, #0
    2758:	str	r0, [fp, #-12]
    275c:	b	2dcc <read_VR+0x6bc>
    2760:	ldr	r0, [fp, #-16]
    2764:	ldr	r0, [r0, #52]	; 0x34
    2768:	ldr	r1, [fp, #-32]	; 0xffffffe0
    276c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2770:	adds	r1, r1, #8
    2774:	adc	r3, r2, #0
    2778:	sub	r2, fp, #36	; 0x24
    277c:	mov	ip, sp
    2780:	str	r2, [ip, #8]
    2784:	mov	r2, #0
    2788:	str	r2, [ip, #4]
    278c:	mov	r2, #4
    2790:	str	r2, [ip]
    2794:	mov	r2, r1
    2798:	bl	404 <read_bytes>
    279c:	cmp	r0, #0
    27a0:	bge	27b0 <read_VR+0xa0>
    27a4:	mvn	r0, #0
    27a8:	str	r0, [fp, #-12]
    27ac:	b	2dcc <read_VR+0x6bc>
    27b0:	sub	r0, fp, #36	; 0x24
    27b4:	bl	66c <swap4>
    27b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    27bc:	cmp	r0, #6
    27c0:	bne	27f4 <read_VR+0xe4>
    27c4:	ldr	r0, [fp, #-16]
    27c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    27cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    27d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    27d4:	ldr	ip, [fp, #8]
    27d8:	ldr	lr, [fp, #12]
    27dc:	mov	r4, sp
    27e0:	str	lr, [r4, #4]
    27e4:	str	ip, [r4]
    27e8:	bl	2330 <read_VXR>
    27ec:	str	r0, [fp, #-12]
    27f0:	b	2dcc <read_VR+0x6bc>
    27f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    27f8:	cmp	r0, #7
    27fc:	bne	2894 <read_VR+0x184>
    2800:	ldr	r0, [fp, #12]
    2804:	ldr	r1, [fp, #-20]	; 0xffffffec
    2808:	ldr	r1, [r1, #20]
    280c:	cmp	r0, r1
    2810:	blt	2824 <read_VR+0x114>
    2814:	ldr	r0, [fp, #-20]	; 0xffffffec
    2818:	ldr	r0, [r0, #20]
    281c:	sub	r0, r0, #1
    2820:	str	r0, [fp, #12]
    2824:	ldr	r0, [fp, #8]
    2828:	str	r0, [fp, #-40]	; 0xffffffd8
    282c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2830:	ldr	r1, [fp, #12]
    2834:	cmp	r0, r1
    2838:	bgt	2890 <read_VR+0x180>
    283c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2840:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2844:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2848:	ldr	r3, [fp, #8]
    284c:	sub	r3, r2, r3
    2850:	ldr	ip, [fp, #-20]	; 0xffffffec
    2854:	ldr	lr, [ip, #24]
    2858:	ldr	r4, [ip, #28]
    285c:	ldr	ip, [ip, #36]	; 0x24
    2860:	mul	r3, r3, lr
    2864:	mul	r3, r3, r4
    2868:	adds	r0, r0, r3
    286c:	adc	r1, r1, r3, asr #31
    2870:	adds	r0, r0, #12
    2874:	adc	r1, r1, #0
    2878:	str	r0, [ip, r2, lsl #3]!
    287c:	str	r1, [ip, #4]
    2880:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2884:	add	r0, r0, #1
    2888:	str	r0, [fp, #-40]	; 0xffffffd8
    288c:	b	282c <read_VR+0x11c>
    2890:	b	2dc4 <read_VR+0x6b4>
    2894:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2898:	cmp	r0, #13
    289c:	bne	2da0 <read_VR+0x690>
    28a0:	movw	r0, #0
    28a4:	str	r0, [sp, #48]	; 0x30
    28a8:	ldr	r0, [fp, #8]
    28ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    28b0:	ldr	r1, [r1, #20]
    28b4:	cmp	r0, r1
    28b8:	blt	28c8 <read_VR+0x1b8>
    28bc:	movw	r0, #0
    28c0:	str	r0, [fp, #-12]
    28c4:	b	2dcc <read_VR+0x6bc>
    28c8:	ldr	r0, [fp, #-20]	; 0xffffffec
    28cc:	ldr	r0, [r0, #40]	; 0x28
    28d0:	movw	r1, #0
    28d4:	cmp	r0, r1
    28d8:	bne	296c <read_VR+0x25c>
    28dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    28e0:	ldr	r0, [r0, #20]
    28e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    28e8:	ldr	r1, [r1, #24]
    28ec:	mul	r0, r0, r1
    28f0:	ldr	r1, [fp, #-20]	; 0xffffffec
    28f4:	ldr	r1, [r1, #28]
    28f8:	mul	r0, r0, r1
    28fc:	bl	0 <malloc>
    2900:	ldr	r1, [fp, #-20]	; 0xffffffec
    2904:	str	r0, [r1, #40]	; 0x28
    2908:	ldr	r0, [fp, #-20]	; 0xffffffec
    290c:	ldr	r0, [r0, #40]	; 0x28
    2910:	movw	r1, #0
    2914:	cmp	r0, r1
    2918:	bne	2968 <read_VR+0x258>
    291c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2920:	ldr	r0, [r0, #20]
    2924:	ldr	r1, [fp, #-20]	; 0xffffffec
    2928:	ldr	r1, [r1, #24]
    292c:	mul	r0, r0, r1
    2930:	ldr	r1, [fp, #-20]	; 0xffffffec
    2934:	ldr	r1, [r1, #28]
    2938:	mul	r2, r0, r1
    293c:	mvn	r0, #0
    2940:	movw	r1, #0
    2944:	movt	r1, #0
    2948:	movw	r3, #0
    294c:	movt	r3, #0
    2950:	movw	ip, #629	; 0x275
    2954:	str	ip, [sp]
    2958:	bl	0 <coda_set_error>
    295c:	mvn	r0, #0
    2960:	str	r0, [fp, #-12]
    2964:	b	2dcc <read_VR+0x6bc>
    2968:	b	296c <read_VR+0x25c>
    296c:	ldr	r0, [fp, #-16]
    2970:	ldr	r0, [r0, #52]	; 0x34
    2974:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2978:	ldr	r2, [fp, #-28]	; 0xffffffe4
    297c:	adds	r1, r1, #16
    2980:	adc	r3, r2, #0
    2984:	sub	r2, fp, #48	; 0x30
    2988:	mov	ip, sp
    298c:	str	r2, [ip, #8]
    2990:	mov	r2, #0
    2994:	str	r2, [ip, #4]
    2998:	mov	r2, #8
    299c:	str	r2, [ip]
    29a0:	mov	r2, r1
    29a4:	bl	404 <read_bytes>
    29a8:	cmp	r0, #0
    29ac:	bge	29bc <read_VR+0x2ac>
    29b0:	mvn	r0, #0
    29b4:	str	r0, [fp, #-12]
    29b8:	b	2dcc <read_VR+0x6bc>
    29bc:	sub	r0, fp, #48	; 0x30
    29c0:	bl	b84 <swap8>
    29c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    29c8:	ldr	lr, [fp, #-28]	; 0xffffffe4
    29cc:	adds	r0, r0, #24
    29d0:	adc	lr, lr, #0
    29d4:	str	r0, [fp, #-32]	; 0xffffffe0
    29d8:	str	lr, [fp, #-28]	; 0xffffffe4
    29dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    29e0:	ldr	lr, [fp, #-44]	; 0xffffffd4
    29e4:	rsbs	r0, r0, #19
    29e8:	rscs	lr, lr, #0
    29ec:	str	r0, [sp, #28]
    29f0:	str	lr, [sp, #24]
    29f4:	blt	2a18 <read_VR+0x308>
    29f8:	b	29fc <read_VR+0x2ec>
    29fc:	ldr	r0, [pc, #980]	; 2dd8 <read_VR+0x6c8>
    2a00:	movw	r1, #0
    2a04:	movt	r1, #0
    2a08:	bl	0 <coda_set_error>
    2a0c:	mvn	r0, #0
    2a10:	str	r0, [fp, #-12]
    2a14:	b	2dcc <read_VR+0x6bc>
    2a18:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2a1c:	bl	0 <malloc>
    2a20:	str	r0, [fp, #-52]	; 0xffffffcc
    2a24:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2a28:	movw	lr, #0
    2a2c:	cmp	r0, lr
    2a30:	bne	2a64 <read_VR+0x354>
    2a34:	ldr	r2, [fp, #-48]	; 0xffffffd0
    2a38:	mvn	r0, #0
    2a3c:	movw	r1, #0
    2a40:	movt	r1, #0
    2a44:	movw	r3, #0
    2a48:	movt	r3, #0
    2a4c:	movw	ip, #652	; 0x28c
    2a50:	str	ip, [sp]
    2a54:	bl	0 <coda_set_error>
    2a58:	mvn	r0, #0
    2a5c:	str	r0, [fp, #-12]
    2a60:	b	2dcc <read_VR+0x6bc>
    2a64:	ldr	r0, [fp, #-16]
    2a68:	ldr	r0, [r0, #52]	; 0x34
    2a6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2a70:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2a74:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2a78:	ldr	ip, [fp, #-44]	; 0xffffffd4
    2a7c:	ldr	lr, [fp, #-52]	; 0xffffffcc
    2a80:	mov	r4, sp
    2a84:	str	lr, [r4, #8]
    2a88:	str	ip, [r4, #4]
    2a8c:	str	r1, [r4]
    2a90:	bl	404 <read_bytes>
    2a94:	cmp	r0, #0
    2a98:	bge	2ab0 <read_VR+0x3a0>
    2a9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2aa0:	bl	0 <free>
    2aa4:	mvn	r0, #0
    2aa8:	str	r0, [fp, #-12]
    2aac:	b	2dcc <read_VR+0x6bc>
    2ab0:	movw	r0, #0
    2ab4:	str	r0, [sp, #52]	; 0x34
    2ab8:	str	r0, [sp, #56]	; 0x38
    2abc:	str	r0, [sp, #84]	; 0x54
    2ac0:	str	r0, [sp, #88]	; 0x58
    2ac4:	str	r0, [sp, #92]	; 0x5c
    2ac8:	str	r0, [sp, #76]	; 0x4c
    2acc:	add	r0, sp, #52	; 0x34
    2ad0:	movw	r1, #31
    2ad4:	movw	r2, #0
    2ad8:	movt	r2, #0
    2adc:	movw	r3, #56	; 0x38
    2ae0:	bl	0 <coda_inflateInit2_>
    2ae4:	cmp	r0, #0
    2ae8:	beq	2b30 <read_VR+0x420>
    2aec:	mvn	r0, #21
    2af0:	movw	r1, #0
    2af4:	movt	r1, #0
    2af8:	bl	0 <coda_set_error>
    2afc:	ldr	r0, [sp, #76]	; 0x4c
    2b00:	movw	r1, #0
    2b04:	cmp	r0, r1
    2b08:	beq	2b1c <read_VR+0x40c>
    2b0c:	ldr	r1, [sp, #76]	; 0x4c
    2b10:	movw	r0, #0
    2b14:	movt	r0, #0
    2b18:	bl	0 <coda_add_error_message>
    2b1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2b20:	bl	0 <free>
    2b24:	mvn	r0, #0
    2b28:	str	r0, [fp, #-12]
    2b2c:	b	2dcc <read_VR+0x6bc>
    2b30:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2b34:	str	r0, [sp, #52]	; 0x34
    2b38:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2b3c:	str	r0, [sp, #56]	; 0x38
    2b40:	ldr	r0, [fp, #12]
    2b44:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b48:	ldr	r1, [r1, #20]
    2b4c:	cmp	r0, r1
    2b50:	blt	2b6c <read_VR+0x45c>
    2b54:	ldr	r0, [fp, #-20]	; 0xffffffec
    2b58:	ldr	r0, [r0, #20]
    2b5c:	sub	r0, r0, #1
    2b60:	str	r0, [fp, #12]
    2b64:	movw	r0, #1
    2b68:	str	r0, [sp, #48]	; 0x30
    2b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2b70:	ldr	r0, [r0, #40]	; 0x28
    2b74:	ldr	r1, [fp, #8]
    2b78:	ldr	r2, [fp, #-20]	; 0xffffffec
    2b7c:	ldr	r2, [r2, #24]
    2b80:	mul	r1, r1, r2
    2b84:	ldr	r2, [fp, #-20]	; 0xffffffec
    2b88:	ldr	r2, [r2, #28]
    2b8c:	mul	r1, r1, r2
    2b90:	add	r0, r0, r1
    2b94:	str	r0, [sp, #64]	; 0x40
    2b98:	ldr	r0, [fp, #12]
    2b9c:	ldr	r1, [fp, #8]
    2ba0:	sub	r0, r0, r1
    2ba4:	add	r0, r0, #1
    2ba8:	ldr	r1, [fp, #-20]	; 0xffffffec
    2bac:	ldr	r1, [r1, #24]
    2bb0:	mul	r0, r0, r1
    2bb4:	ldr	r1, [fp, #-20]	; 0xffffffec
    2bb8:	ldr	r1, [r1, #28]
    2bbc:	mul	r0, r0, r1
    2bc0:	str	r0, [sp, #68]	; 0x44
    2bc4:	add	r0, sp, #52	; 0x34
    2bc8:	movw	r1, #4
    2bcc:	bl	0 <coda_inflate>
    2bd0:	str	r0, [sp, #44]	; 0x2c
    2bd4:	ldr	r0, [sp, #44]	; 0x2c
    2bd8:	cmn	r0, #2
    2bdc:	beq	2be4 <read_VR+0x4d4>
    2be0:	b	2c04 <read_VR+0x4f4>
    2be4:	movw	r0, #0
    2be8:	movt	r0, #0
    2bec:	movw	r1, #0
    2bf0:	movt	r1, #0
    2bf4:	movw	r2, #687	; 0x2af
    2bf8:	movw	r3, #0
    2bfc:	movt	r3, #0
    2c00:	bl	0 <__assert_fail>
    2c04:	ldr	r0, [sp, #44]	; 0x2c
    2c08:	cmp	r0, #0
    2c0c:	bge	2cf8 <read_VR+0x5e8>
    2c10:	ldr	r0, [sp, #44]	; 0x2c
    2c14:	cmn	r0, #5
    2c18:	bne	2c28 <read_VR+0x518>
    2c1c:	ldr	r0, [sp, #48]	; 0x30
    2c20:	cmp	r0, #0
    2c24:	bne	2cf8 <read_VR+0x5e8>
    2c28:	ldr	r0, [sp, #44]	; 0x2c
    2c2c:	cmn	r0, #4
    2c30:	str	r0, [sp, #20]
    2c34:	beq	2c90 <read_VR+0x580>
    2c38:	b	2c3c <read_VR+0x52c>
    2c3c:	ldr	r0, [sp, #20]
    2c40:	cmn	r0, #3
    2c44:	beq	2c5c <read_VR+0x54c>
    2c48:	b	2c4c <read_VR+0x53c>
    2c4c:	ldr	r0, [sp, #20]
    2c50:	cmp	r0, #2
    2c54:	bne	2ca0 <read_VR+0x590>
    2c58:	b	2c5c <read_VR+0x54c>
    2c5c:	mvn	r0, #21
    2c60:	movw	r1, #0
    2c64:	movt	r1, #0
    2c68:	bl	0 <coda_set_error>
    2c6c:	ldr	r0, [sp, #76]	; 0x4c
    2c70:	movw	r1, #0
    2c74:	cmp	r0, r1
    2c78:	beq	2c8c <read_VR+0x57c>
    2c7c:	ldr	r1, [sp, #76]	; 0x4c
    2c80:	movw	r0, #0
    2c84:	movt	r0, #0
    2c88:	bl	0 <coda_add_error_message>
    2c8c:	b	2cd4 <read_VR+0x5c4>
    2c90:	mvn	r0, #0
    2c94:	movw	r1, #0
    2c98:	bl	0 <coda_set_error>
    2c9c:	b	2cd4 <read_VR+0x5c4>
    2ca0:	mvn	r0, #21
    2ca4:	movw	r1, #0
    2ca8:	movt	r1, #0
    2cac:	bl	0 <coda_set_error>
    2cb0:	ldr	r0, [sp, #76]	; 0x4c
    2cb4:	movw	r1, #0
    2cb8:	cmp	r0, r1
    2cbc:	beq	2cd0 <read_VR+0x5c0>
    2cc0:	ldr	r1, [sp, #76]	; 0x4c
    2cc4:	movw	r0, #0
    2cc8:	movt	r0, #0
    2ccc:	bl	0 <coda_add_error_message>
    2cd0:	b	2cd4 <read_VR+0x5c4>
    2cd4:	add	r0, sp, #52	; 0x34
    2cd8:	bl	0 <coda_inflateEnd>
    2cdc:	ldr	lr, [fp, #-52]	; 0xffffffcc
    2ce0:	str	r0, [sp, #16]
    2ce4:	mov	r0, lr
    2ce8:	bl	0 <free>
    2cec:	mvn	r0, #0
    2cf0:	str	r0, [fp, #-12]
    2cf4:	b	2dcc <read_VR+0x6bc>
    2cf8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2cfc:	bl	0 <free>
    2d00:	add	r0, sp, #52	; 0x34
    2d04:	bl	0 <coda_inflateEnd>
    2d08:	cmp	r0, #0
    2d0c:	beq	2d4c <read_VR+0x63c>
    2d10:	mvn	r0, #21
    2d14:	movw	r1, #0
    2d18:	movt	r1, #0
    2d1c:	bl	0 <coda_set_error>
    2d20:	ldr	r0, [sp, #76]	; 0x4c
    2d24:	movw	r1, #0
    2d28:	cmp	r0, r1
    2d2c:	beq	2d40 <read_VR+0x630>
    2d30:	ldr	r1, [sp, #76]	; 0x4c
    2d34:	movw	r0, #0
    2d38:	movt	r0, #0
    2d3c:	bl	0 <coda_add_error_message>
    2d40:	mvn	r0, #0
    2d44:	str	r0, [fp, #-12]
    2d48:	b	2dcc <read_VR+0x6bc>
    2d4c:	ldr	r0, [fp, #8]
    2d50:	str	r0, [sp, #40]	; 0x28
    2d54:	ldr	r0, [sp, #40]	; 0x28
    2d58:	ldr	r1, [fp, #12]
    2d5c:	cmp	r0, r1
    2d60:	bgt	2d9c <read_VR+0x68c>
    2d64:	ldr	r0, [sp, #40]	; 0x28
    2d68:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d6c:	ldr	r2, [r1, #24]
    2d70:	ldr	r3, [r1, #28]
    2d74:	ldr	r1, [r1, #36]	; 0x24
    2d78:	mul	r2, r0, r2
    2d7c:	mul	r2, r2, r3
    2d80:	asr	r3, r2, #31
    2d84:	str	r2, [r1, r0, lsl #3]!
    2d88:	str	r3, [r1, #4]
    2d8c:	ldr	r0, [sp, #40]	; 0x28
    2d90:	add	r0, r0, #1
    2d94:	str	r0, [sp, #40]	; 0x28
    2d98:	b	2d54 <read_VR+0x644>
    2d9c:	b	2dc0 <read_VR+0x6b0>
    2da0:	ldr	r0, [pc, #48]	; 2dd8 <read_VR+0x6c8>
    2da4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2da8:	movw	r1, #0
    2dac:	movt	r1, #0
    2db0:	bl	0 <coda_set_error>
    2db4:	mvn	r0, #0
    2db8:	str	r0, [fp, #-12]
    2dbc:	b	2dcc <read_VR+0x6bc>
    2dc0:	b	2dc4 <read_VR+0x6b4>
    2dc4:	movw	r0, #0
    2dc8:	str	r0, [fp, #-12]
    2dcc:	ldr	r0, [fp, #-12]
    2dd0:	sub	sp, fp, #8
    2dd4:	pop	{r4, sl, fp, pc}
    2dd8:	.word	0xfffffed4

00002ddc <read_AEDR>:
    2ddc:	push	{r4, sl, fp, lr}
    2de0:	add	fp, sp, #8
    2de4:	sub	sp, sp, #72	; 0x48
    2de8:	ldr	r1, [fp, #12]
    2dec:	ldr	ip, [fp, #8]
    2df0:	str	r0, [fp, #-16]
    2df4:	str	r3, [fp, #-20]	; 0xffffffec
    2df8:	str	r2, [fp, #-24]	; 0xffffffe8
    2dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e00:	ldr	r2, [fp, #-20]	; 0xffffffec
    2e04:	orr	r0, r0, r2
    2e08:	cmp	r0, #0
    2e0c:	str	ip, [sp, #20]
    2e10:	str	r1, [sp, #16]
    2e14:	bne	2e28 <read_AEDR+0x4c>
    2e18:	b	2e1c <read_AEDR+0x40>
    2e1c:	movw	r0, #0
    2e20:	str	r0, [fp, #-12]
    2e24:	b	3268 <read_AEDR+0x48c>
    2e28:	ldr	r0, [fp, #-16]
    2e2c:	ldr	r0, [r0, #52]	; 0x34
    2e30:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2e34:	ldr	r2, [fp, #-20]	; 0xffffffec
    2e38:	adds	r1, r1, #8
    2e3c:	adc	r3, r2, #0
    2e40:	sub	r2, fp, #32
    2e44:	mov	ip, sp
    2e48:	str	r2, [ip, #8]
    2e4c:	mov	r2, #0
    2e50:	str	r2, [ip, #4]
    2e54:	mov	r2, #4
    2e58:	str	r2, [ip]
    2e5c:	mov	r2, r1
    2e60:	bl	404 <read_bytes>
    2e64:	cmp	r0, #0
    2e68:	bge	2e78 <read_AEDR+0x9c>
    2e6c:	mvn	r0, #0
    2e70:	str	r0, [fp, #-12]
    2e74:	b	3268 <read_AEDR+0x48c>
    2e78:	sub	r0, fp, #32
    2e7c:	bl	66c <swap4>
    2e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2e84:	cmp	r0, #5
    2e88:	beq	2eb8 <read_AEDR+0xdc>
    2e8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2e90:	cmp	r0, #9
    2e94:	beq	2eb8 <read_AEDR+0xdc>
    2e98:	ldr	r0, [pc, #980]	; 3274 <read_AEDR+0x498>
    2e9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2ea0:	movw	r1, #0
    2ea4:	movt	r1, #0
    2ea8:	bl	0 <coda_set_error>
    2eac:	mvn	r0, #0
    2eb0:	str	r0, [fp, #-12]
    2eb4:	b	3268 <read_AEDR+0x48c>
    2eb8:	ldr	r0, [fp, #-16]
    2ebc:	ldr	r0, [r0, #52]	; 0x34
    2ec0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2ec4:	ldr	r2, [fp, #-20]	; 0xffffffec
    2ec8:	adds	r1, r1, #12
    2ecc:	adc	r3, r2, #0
    2ed0:	add	r2, sp, #40	; 0x28
    2ed4:	mov	ip, sp
    2ed8:	str	r2, [ip, #8]
    2edc:	mov	r2, #0
    2ee0:	str	r2, [ip, #4]
    2ee4:	mov	r2, #8
    2ee8:	str	r2, [ip]
    2eec:	mov	r2, r1
    2ef0:	bl	404 <read_bytes>
    2ef4:	cmp	r0, #0
    2ef8:	bge	2f08 <read_AEDR+0x12c>
    2efc:	mvn	r0, #0
    2f00:	str	r0, [fp, #-12]
    2f04:	b	3268 <read_AEDR+0x48c>
    2f08:	ldr	r0, [fp, #-16]
    2f0c:	ldr	r0, [r0, #52]	; 0x34
    2f10:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2f14:	ldr	r2, [fp, #-20]	; 0xffffffec
    2f18:	adds	r1, r1, #20
    2f1c:	adc	r3, r2, #0
    2f20:	add	r2, sp, #36	; 0x24
    2f24:	mov	ip, sp
    2f28:	str	r2, [ip, #8]
    2f2c:	mov	r2, #0
    2f30:	str	r2, [ip, #4]
    2f34:	mov	r2, #4
    2f38:	str	r2, [ip]
    2f3c:	mov	r2, r1
    2f40:	bl	404 <read_bytes>
    2f44:	cmp	r0, #0
    2f48:	bge	2f58 <read_AEDR+0x17c>
    2f4c:	mvn	r0, #0
    2f50:	str	r0, [fp, #-12]
    2f54:	b	3268 <read_AEDR+0x48c>
    2f58:	ldr	r0, [fp, #-16]
    2f5c:	ldr	r0, [r0, #52]	; 0x34
    2f60:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2f64:	ldr	r2, [fp, #-20]	; 0xffffffec
    2f68:	adds	r1, r1, #24
    2f6c:	adc	r3, r2, #0
    2f70:	add	r2, sp, #32
    2f74:	mov	ip, sp
    2f78:	str	r2, [ip, #8]
    2f7c:	mov	r2, #0
    2f80:	str	r2, [ip, #4]
    2f84:	mov	r2, #4
    2f88:	str	r2, [ip]
    2f8c:	mov	r2, r1
    2f90:	bl	404 <read_bytes>
    2f94:	cmp	r0, #0
    2f98:	bge	2fa8 <read_AEDR+0x1cc>
    2f9c:	mvn	r0, #0
    2fa0:	str	r0, [fp, #-12]
    2fa4:	b	3268 <read_AEDR+0x48c>
    2fa8:	ldr	r0, [fp, #-16]
    2fac:	ldr	r0, [r0, #52]	; 0x34
    2fb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2fb4:	ldr	r2, [fp, #-20]	; 0xffffffec
    2fb8:	adds	r1, r1, #28
    2fbc:	adc	r3, r2, #0
    2fc0:	add	r2, sp, #28
    2fc4:	mov	ip, sp
    2fc8:	str	r2, [ip, #8]
    2fcc:	mov	r2, #0
    2fd0:	str	r2, [ip, #4]
    2fd4:	mov	r2, #4
    2fd8:	str	r2, [ip]
    2fdc:	mov	r2, r1
    2fe0:	bl	404 <read_bytes>
    2fe4:	cmp	r0, #0
    2fe8:	bge	2ff8 <read_AEDR+0x21c>
    2fec:	mvn	r0, #0
    2ff0:	str	r0, [fp, #-12]
    2ff4:	b	3268 <read_AEDR+0x48c>
    2ff8:	ldr	r0, [fp, #-16]
    2ffc:	ldr	r0, [r0, #52]	; 0x34
    3000:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3004:	ldr	r2, [fp, #-20]	; 0xffffffec
    3008:	adds	r1, r1, #32
    300c:	adc	r3, r2, #0
    3010:	add	r2, sp, #24
    3014:	mov	ip, sp
    3018:	str	r2, [ip, #8]
    301c:	mov	r2, #0
    3020:	str	r2, [ip, #4]
    3024:	mov	r2, #4
    3028:	str	r2, [ip]
    302c:	mov	r2, r1
    3030:	bl	404 <read_bytes>
    3034:	cmp	r0, #0
    3038:	bge	3048 <read_AEDR+0x26c>
    303c:	mvn	r0, #0
    3040:	str	r0, [fp, #-12]
    3044:	b	3268 <read_AEDR+0x48c>
    3048:	add	r0, sp, #40	; 0x28
    304c:	bl	b84 <swap8>
    3050:	add	r0, sp, #36	; 0x24
    3054:	bl	66c <swap4>
    3058:	add	r0, sp, #32
    305c:	bl	66c <swap4>
    3060:	add	r0, sp, #28
    3064:	bl	66c <swap4>
    3068:	add	r0, sp, #24
    306c:	bl	66c <swap4>
    3070:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3074:	ldr	lr, [fp, #-20]	; 0xffffffec
    3078:	adds	r0, r0, #56	; 0x38
    307c:	adc	lr, lr, #0
    3080:	str	r0, [fp, #-24]	; 0xffffffe8
    3084:	str	lr, [fp, #-20]	; 0xffffffec
    3088:	ldr	r0, [sp, #32]
    308c:	cmp	r0, #32
    3090:	bne	30b0 <read_AEDR+0x2d4>
    3094:	mvn	r0, #199	; 0xc7
    3098:	movw	r1, #0
    309c:	movt	r1, #0
    30a0:	bl	0 <coda_set_error>
    30a4:	mvn	r0, #0
    30a8:	str	r0, [fp, #-12]
    30ac:	b	3268 <read_AEDR+0x48c>
    30b0:	ldr	r0, [fp, #-16]
    30b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    30b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    30bc:	ldr	r1, [sp, #32]
    30c0:	ldr	ip, [sp, #24]
    30c4:	mov	lr, sp
    30c8:	sub	r4, fp, #28
    30cc:	str	r4, [lr, #8]
    30d0:	str	ip, [lr, #4]
    30d4:	str	r1, [lr]
    30d8:	bl	3278 <read_attribute>
    30dc:	cmp	r0, #0
    30e0:	beq	30f0 <read_AEDR+0x314>
    30e4:	mvn	r0, #0
    30e8:	str	r0, [fp, #-12]
    30ec:	b	3268 <read_AEDR+0x48c>
    30f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    30f4:	cmp	r0, #5
    30f8:	bne	3144 <read_AEDR+0x368>
    30fc:	ldr	r0, [fp, #12]
    3100:	and	r0, r0, #1
    3104:	cmp	r0, #0
    3108:	beq	3144 <read_AEDR+0x368>
    310c:	ldr	r0, [fp, #-16]
    3110:	ldr	r0, [r0, #20]
    3114:	ldr	r1, [fp, #8]
    3118:	ldr	r2, [fp, #-28]	; 0xffffffe4
    311c:	movw	r3, #1
    3120:	bl	0 <coda_mem_type_add_attribute>
    3124:	cmp	r0, #0
    3128:	beq	3140 <read_AEDR+0x364>
    312c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3130:	bl	0 <coda_dynamic_type_delete>
    3134:	mvn	r0, #0
    3138:	str	r0, [fp, #-12]
    313c:	b	3268 <read_AEDR+0x48c>
    3140:	b	3228 <read_AEDR+0x44c>
    3144:	ldr	r0, [sp, #28]
    3148:	cmp	r0, #0
    314c:	blt	3168 <read_AEDR+0x38c>
    3150:	ldr	r0, [sp, #28]
    3154:	ldr	r1, [fp, #-16]
    3158:	ldr	r1, [r1, #20]
    315c:	ldr	r1, [r1, #16]
    3160:	cmp	r0, r1
    3164:	blt	3198 <read_AEDR+0x3bc>
    3168:	ldr	r0, [pc, #260]	; 3274 <read_AEDR+0x498>
    316c:	ldr	r2, [sp, #28]
    3170:	ldr	r1, [fp, #-16]
    3174:	ldr	r1, [r1, #20]
    3178:	ldr	r1, [r1, #16]
    317c:	sub	r3, r1, #1
    3180:	movw	r1, #0
    3184:	movt	r1, #0
    3188:	bl	0 <coda_set_error>
    318c:	mvn	r0, #0
    3190:	str	r0, [fp, #-12]
    3194:	b	3268 <read_AEDR+0x48c>
    3198:	ldr	r0, [fp, #-16]
    319c:	ldr	r0, [r0, #20]
    31a0:	ldr	r0, [r0, #20]
    31a4:	ldr	r1, [sp, #28]
    31a8:	add	r0, r0, r1, lsl #2
    31ac:	ldr	r0, [r0]
    31b0:	ldr	r0, [r0]
    31b4:	cmp	r0, #103	; 0x67
    31b8:	bne	31c0 <read_AEDR+0x3e4>
    31bc:	b	31e0 <read_AEDR+0x404>
    31c0:	movw	r0, #0
    31c4:	movt	r0, #0
    31c8:	movw	r1, #0
    31cc:	movt	r1, #0
    31d0:	movw	r2, #439	; 0x1b7
    31d4:	movw	r3, #0
    31d8:	movt	r3, #0
    31dc:	bl	0 <__assert_fail>
    31e0:	ldr	r0, [fp, #-16]
    31e4:	ldr	r0, [r0, #20]
    31e8:	ldr	r0, [r0, #20]
    31ec:	ldr	r1, [sp, #28]
    31f0:	add	r0, r0, r1, lsl #2
    31f4:	ldr	r0, [r0]
    31f8:	ldr	r1, [fp, #8]
    31fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3200:	movw	r3, #1
    3204:	bl	0 <coda_cdf_variable_add_attribute>
    3208:	cmp	r0, #0
    320c:	beq	3224 <read_AEDR+0x448>
    3210:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3214:	bl	0 <coda_dynamic_type_delete>
    3218:	mvn	r0, #0
    321c:	str	r0, [fp, #-12]
    3220:	b	3268 <read_AEDR+0x48c>
    3224:	b	3228 <read_AEDR+0x44c>
    3228:	ldr	r0, [fp, #-16]
    322c:	ldr	r2, [sp, #40]	; 0x28
    3230:	ldr	r3, [sp, #44]	; 0x2c
    3234:	ldr	r1, [fp, #8]
    3238:	ldr	ip, [fp, #12]
    323c:	mov	lr, sp
    3240:	str	ip, [lr, #4]
    3244:	str	r1, [lr]
    3248:	bl	2ddc <read_AEDR>
    324c:	cmp	r0, #0
    3250:	beq	3260 <read_AEDR+0x484>
    3254:	mvn	r0, #0
    3258:	str	r0, [fp, #-12]
    325c:	b	3268 <read_AEDR+0x48c>
    3260:	movw	r0, #0
    3264:	str	r0, [fp, #-12]
    3268:	ldr	r0, [fp, #-12]
    326c:	sub	sp, fp, #8
    3270:	pop	{r4, sl, fp, pc}
    3274:	.word	0xfffffed4

00003278 <read_attribute>:
    3278:	push	{r4, sl, fp, lr}
    327c:	add	fp, sp, #8
    3280:	sub	sp, sp, #80	; 0x50
    3284:	ldr	r1, [fp, #16]
    3288:	ldr	ip, [fp, #12]
    328c:	ldr	lr, [fp, #8]
    3290:	str	r0, [fp, #-16]
    3294:	str	r3, [fp, #-20]	; 0xffffffec
    3298:	str	r2, [fp, #-24]	; 0xffffffe8
    329c:	ldr	r0, [fp, #8]
    32a0:	sub	r0, r0, #1
    32a4:	cmp	r0, #51	; 0x33
    32a8:	str	lr, [sp, #32]
    32ac:	str	ip, [sp, #28]
    32b0:	str	r1, [sp, #24]
    32b4:	str	r0, [sp, #20]
    32b8:	bhi	34a0 <read_attribute+0x228>
    32bc:	add	r0, pc, #8
    32c0:	ldr	r1, [sp, #20]
    32c4:	ldr	r0, [r0, r1, lsl #2]
    32c8:	mov	pc, r0
    32cc:	.word	0x0000339c
    32d0:	.word	0x000033b8
    32d4:	.word	0x000034a0
    32d8:	.word	0x000033cc
    32dc:	.word	0x000034a0
    32e0:	.word	0x000034a0
    32e4:	.word	0x000034a0
    32e8:	.word	0x000033e4
    32ec:	.word	0x000034a0
    32f0:	.word	0x000034a0
    32f4:	.word	0x00003400
    32f8:	.word	0x00003418
    32fc:	.word	0x000034a0
    3300:	.word	0x00003430
    3304:	.word	0x000034a0
    3308:	.word	0x000034a0
    330c:	.word	0x000034a0
    3310:	.word	0x000034a0
    3314:	.word	0x000034a0
    3318:	.word	0x000034a0
    331c:	.word	0x0000344c
    3320:	.word	0x00003468
    3324:	.word	0x000034a0
    3328:	.word	0x000034a0
    332c:	.word	0x000034a0
    3330:	.word	0x000034a0
    3334:	.word	0x000034a0
    3338:	.word	0x000034a0
    333c:	.word	0x000034a0
    3340:	.word	0x000034a0
    3344:	.word	0x00003468
    3348:	.word	0x000034a0
    334c:	.word	0x000033e4
    3350:	.word	0x000034a0
    3354:	.word	0x000034a0
    3358:	.word	0x000034a0
    335c:	.word	0x000034a0
    3360:	.word	0x000034a0
    3364:	.word	0x000034a0
    3368:	.word	0x000034a0
    336c:	.word	0x0000339c
    3370:	.word	0x000034a0
    3374:	.word	0x000034a0
    3378:	.word	0x0000344c
    337c:	.word	0x00003468
    3380:	.word	0x000034a0
    3384:	.word	0x000034a0
    3388:	.word	0x000034a0
    338c:	.word	0x000034a0
    3390:	.word	0x000034a0
    3394:	.word	0x00003484
    3398:	.word	0x00003484
    339c:	movw	r0, #2
    33a0:	str	r0, [fp, #-28]	; 0xffffffe4
    33a4:	movw	r0, #0
    33a8:	str	r0, [fp, #-32]	; 0xffffffe0
    33ac:	movw	r0, #1
    33b0:	str	r0, [fp, #-40]	; 0xffffffd8
    33b4:	b	34c0 <read_attribute+0x248>
    33b8:	movw	r0, #2
    33bc:	str	r0, [fp, #-28]	; 0xffffffe4
    33c0:	str	r0, [fp, #-32]	; 0xffffffe0
    33c4:	str	r0, [fp, #-40]	; 0xffffffd8
    33c8:	b	34c0 <read_attribute+0x248>
    33cc:	movw	r0, #2
    33d0:	str	r0, [fp, #-28]	; 0xffffffe4
    33d4:	movw	r0, #4
    33d8:	str	r0, [fp, #-32]	; 0xffffffe0
    33dc:	str	r0, [fp, #-40]	; 0xffffffd8
    33e0:	b	34c0 <read_attribute+0x248>
    33e4:	movw	r0, #2
    33e8:	str	r0, [fp, #-28]	; 0xffffffe4
    33ec:	movw	r0, #6
    33f0:	str	r0, [fp, #-32]	; 0xffffffe0
    33f4:	movw	r0, #8
    33f8:	str	r0, [fp, #-40]	; 0xffffffd8
    33fc:	b	34c0 <read_attribute+0x248>
    3400:	movw	r0, #2
    3404:	str	r0, [fp, #-28]	; 0xffffffe4
    3408:	movw	r0, #1
    340c:	str	r0, [fp, #-32]	; 0xffffffe0
    3410:	str	r0, [fp, #-40]	; 0xffffffd8
    3414:	b	34c0 <read_attribute+0x248>
    3418:	movw	r0, #2
    341c:	str	r0, [fp, #-28]	; 0xffffffe4
    3420:	movw	r1, #3
    3424:	str	r1, [fp, #-32]	; 0xffffffe0
    3428:	str	r0, [fp, #-40]	; 0xffffffd8
    342c:	b	34c0 <read_attribute+0x248>
    3430:	movw	r0, #2
    3434:	str	r0, [fp, #-28]	; 0xffffffe4
    3438:	movw	r0, #5
    343c:	str	r0, [fp, #-32]	; 0xffffffe0
    3440:	movw	r0, #4
    3444:	str	r0, [fp, #-40]	; 0xffffffd8
    3448:	b	34c0 <read_attribute+0x248>
    344c:	movw	r0, #3
    3450:	str	r0, [fp, #-28]	; 0xffffffe4
    3454:	movw	r0, #8
    3458:	str	r0, [fp, #-32]	; 0xffffffe0
    345c:	movw	r0, #4
    3460:	str	r0, [fp, #-40]	; 0xffffffd8
    3464:	b	34c0 <read_attribute+0x248>
    3468:	movw	r0, #3
    346c:	str	r0, [fp, #-28]	; 0xffffffe4
    3470:	movw	r0, #9
    3474:	str	r0, [fp, #-32]	; 0xffffffe0
    3478:	movw	r0, #8
    347c:	str	r0, [fp, #-40]	; 0xffffffd8
    3480:	b	34c0 <read_attribute+0x248>
    3484:	movw	r0, #4
    3488:	str	r0, [fp, #-28]	; 0xffffffe4
    348c:	movw	r0, #11
    3490:	str	r0, [fp, #-32]	; 0xffffffe0
    3494:	ldr	r0, [fp, #12]
    3498:	str	r0, [fp, #-40]	; 0xffffffd8
    349c:	b	34c0 <read_attribute+0x248>
    34a0:	ldr	r2, [fp, #8]
    34a4:	mvn	r0, #99	; 0x63
    34a8:	movw	r1, #0
    34ac:	movt	r1, #0
    34b0:	bl	0 <coda_set_error>
    34b4:	mvn	r0, #0
    34b8:	str	r0, [fp, #-12]
    34bc:	b	37f0 <read_attribute+0x578>
    34c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    34c4:	sub	r1, r0, #2
    34c8:	cmp	r1, #2
    34cc:	str	r0, [sp, #16]
    34d0:	bcc	34e8 <read_attribute+0x270>
    34d4:	b	34d8 <read_attribute+0x260>
    34d8:	ldr	r0, [sp, #16]
    34dc:	cmp	r0, #4
    34e0:	beq	34fc <read_attribute+0x284>
    34e4:	b	350c <read_attribute+0x294>
    34e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    34ec:	movw	r0, #5
    34f0:	bl	0 <coda_type_number_new>
    34f4:	str	r0, [fp, #-36]	; 0xffffffdc
    34f8:	b	352c <read_attribute+0x2b4>
    34fc:	movw	r0, #5
    3500:	bl	0 <coda_type_text_new>
    3504:	str	r0, [fp, #-36]	; 0xffffffdc
    3508:	b	352c <read_attribute+0x2b4>
    350c:	movw	r0, #0
    3510:	movt	r0, #0
    3514:	movw	r1, #0
    3518:	movt	r1, #0
    351c:	movw	r2, #266	; 0x10a
    3520:	movw	r3, #0
    3524:	movt	r3, #0
    3528:	bl	0 <__assert_fail>
    352c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3530:	movw	r1, #0
    3534:	cmp	r0, r1
    3538:	bne	3548 <read_attribute+0x2d0>
    353c:	mvn	r0, #0
    3540:	str	r0, [fp, #-12]
    3544:	b	37f0 <read_attribute+0x578>
    3548:	ldr	r0, [fp, #-36]	; 0xffffffdc
    354c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    3550:	bl	0 <coda_type_set_read_type>
    3554:	cmp	r0, #0
    3558:	beq	3570 <read_attribute+0x2f8>
    355c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3560:	bl	0 <coda_type_release>
    3564:	mvn	r0, #0
    3568:	str	r0, [fp, #-12]
    356c:	b	37f0 <read_attribute+0x578>
    3570:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3574:	cmp	r0, #4
    3578:	beq	35d8 <read_attribute+0x360>
    357c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3580:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3584:	asr	r3, r1, #31
    3588:	mov	r2, r1
    358c:	bl	0 <coda_type_set_byte_size>
    3590:	cmp	r0, #0
    3594:	beq	35ac <read_attribute+0x334>
    3598:	ldr	r0, [fp, #-36]	; 0xffffffdc
    359c:	bl	0 <coda_type_release>
    35a0:	mvn	r0, #0
    35a4:	str	r0, [fp, #-12]
    35a8:	b	37f0 <read_attribute+0x578>
    35ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
    35b0:	movw	r1, #1
    35b4:	bl	0 <coda_type_number_set_endianness>
    35b8:	cmp	r0, #0
    35bc:	beq	35d4 <read_attribute+0x35c>
    35c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    35c4:	bl	0 <coda_type_release>
    35c8:	mvn	r0, #0
    35cc:	str	r0, [fp, #-12]
    35d0:	b	37f0 <read_attribute+0x578>
    35d4:	b	35d8 <read_attribute+0x360>
    35d8:	ldr	r0, [fp, #12]
    35dc:	cmp	r0, #1
    35e0:	beq	3798 <read_attribute+0x520>
    35e4:	ldr	r0, [fp, #8]
    35e8:	cmp	r0, #51	; 0x33
    35ec:	beq	3798 <read_attribute+0x520>
    35f0:	ldr	r0, [fp, #8]
    35f4:	cmp	r0, #52	; 0x34
    35f8:	beq	3798 <read_attribute+0x520>
    35fc:	movw	r0, #0
    3600:	str	r0, [sp, #40]	; 0x28
    3604:	movw	r0, #5
    3608:	bl	0 <coda_type_array_new>
    360c:	str	r0, [sp, #44]	; 0x2c
    3610:	ldr	r0, [sp, #44]	; 0x2c
    3614:	movw	lr, #0
    3618:	cmp	r0, lr
    361c:	bne	3634 <read_attribute+0x3bc>
    3620:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3624:	bl	0 <coda_type_release>
    3628:	mvn	r0, #0
    362c:	str	r0, [fp, #-12]
    3630:	b	37f0 <read_attribute+0x578>
    3634:	ldr	r0, [sp, #44]	; 0x2c
    3638:	ldr	r1, [fp, #-36]	; 0xffffffdc
    363c:	bl	0 <coda_type_array_set_base_type>
    3640:	cmp	r0, #0
    3644:	beq	3664 <read_attribute+0x3ec>
    3648:	ldr	r0, [sp, #44]	; 0x2c
    364c:	bl	0 <coda_type_release>
    3650:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3654:	bl	0 <coda_type_release>
    3658:	mvn	r0, #0
    365c:	str	r0, [fp, #-12]
    3660:	b	37f0 <read_attribute+0x578>
    3664:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3668:	bl	0 <coda_type_release>
    366c:	ldr	r0, [sp, #44]	; 0x2c
    3670:	movw	r1, #0
    3674:	bl	0 <coda_type_array_add_variable_dimension>
    3678:	cmp	r0, #0
    367c:	beq	3694 <read_attribute+0x41c>
    3680:	ldr	r0, [sp, #44]	; 0x2c
    3684:	bl	0 <coda_type_release>
    3688:	mvn	r0, #0
    368c:	str	r0, [fp, #-12]
    3690:	b	37f0 <read_attribute+0x578>
    3694:	ldr	r0, [sp, #44]	; 0x2c
    3698:	movw	r1, #0
    369c:	bl	0 <coda_mem_array_new>
    36a0:	str	r0, [sp, #40]	; 0x28
    36a4:	ldr	r0, [sp, #40]	; 0x28
    36a8:	movw	r1, #0
    36ac:	cmp	r0, r1
    36b0:	bne	36c8 <read_attribute+0x450>
    36b4:	ldr	r0, [sp, #44]	; 0x2c
    36b8:	bl	0 <coda_type_release>
    36bc:	mvn	r0, #0
    36c0:	str	r0, [fp, #-12]
    36c4:	b	37f0 <read_attribute+0x578>
    36c8:	ldr	r0, [sp, #44]	; 0x2c
    36cc:	bl	0 <coda_type_release>
    36d0:	movw	r0, #0
    36d4:	str	r0, [sp, #36]	; 0x24
    36d8:	ldr	r0, [sp, #36]	; 0x24
    36dc:	ldr	r1, [fp, #12]
    36e0:	cmp	r0, r1
    36e4:	bge	3794 <read_attribute+0x51c>
    36e8:	ldr	r0, [fp, #-16]
    36ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    36f0:	ldr	r2, [fp, #-20]	; 0xffffffec
    36f4:	ldr	r3, [sp, #36]	; 0x24
    36f8:	ldr	ip, [fp, #-40]	; 0xffffffd8
    36fc:	mul	r3, r3, ip
    3700:	adds	r1, r1, r3
    3704:	adc	r3, r2, r3, asr #31
    3708:	ldr	r2, [fp, #-40]	; 0xffffffd8
    370c:	ldr	ip, [fp, #-36]	; 0xffffffdc
    3710:	ldr	lr, [fp, #16]
    3714:	mov	r4, sp
    3718:	str	lr, [r4, #8]
    371c:	str	ip, [r4, #4]
    3720:	str	r2, [r4]
    3724:	mov	r2, r1
    3728:	bl	37fc <read_attribute_sub>
    372c:	cmp	r0, #0
    3730:	beq	3748 <read_attribute+0x4d0>
    3734:	ldr	r0, [sp, #40]	; 0x28
    3738:	bl	0 <coda_dynamic_type_delete>
    373c:	mvn	r0, #0
    3740:	str	r0, [fp, #-12]
    3744:	b	37f0 <read_attribute+0x578>
    3748:	ldr	r0, [sp, #40]	; 0x28
    374c:	ldr	r1, [fp, #16]
    3750:	ldr	r1, [r1]
    3754:	bl	0 <coda_mem_array_add_element>
    3758:	cmp	r0, #0
    375c:	beq	3780 <read_attribute+0x508>
    3760:	ldr	r0, [sp, #40]	; 0x28
    3764:	bl	0 <coda_dynamic_type_delete>
    3768:	ldr	r0, [fp, #16]
    376c:	ldr	r0, [r0]
    3770:	bl	0 <coda_dynamic_type_delete>
    3774:	mvn	r0, #0
    3778:	str	r0, [fp, #-12]
    377c:	b	37f0 <read_attribute+0x578>
    3780:	b	3784 <read_attribute+0x50c>
    3784:	ldr	r0, [sp, #36]	; 0x24
    3788:	add	r0, r0, #1
    378c:	str	r0, [sp, #36]	; 0x24
    3790:	b	36d8 <read_attribute+0x460>
    3794:	b	37e8 <read_attribute+0x570>
    3798:	ldr	r0, [fp, #-16]
    379c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    37a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    37a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    37a8:	ldr	ip, [fp, #-36]	; 0xffffffdc
    37ac:	ldr	lr, [fp, #16]
    37b0:	mov	r4, sp
    37b4:	str	lr, [r4, #8]
    37b8:	str	ip, [r4, #4]
    37bc:	str	r1, [r4]
    37c0:	bl	37fc <read_attribute_sub>
    37c4:	cmp	r0, #0
    37c8:	beq	37e0 <read_attribute+0x568>
    37cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    37d0:	bl	0 <coda_type_release>
    37d4:	mvn	r0, #0
    37d8:	str	r0, [fp, #-12]
    37dc:	b	37f0 <read_attribute+0x578>
    37e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    37e4:	bl	0 <coda_type_release>
    37e8:	movw	r0, #0
    37ec:	str	r0, [fp, #-12]
    37f0:	ldr	r0, [fp, #-12]
    37f4:	sub	sp, fp, #8
    37f8:	pop	{r4, sl, fp, pc}

000037fc <read_attribute_sub>:
    37fc:	push	{r4, sl, fp, lr}
    3800:	add	fp, sp, #8
    3804:	sub	sp, sp, #104	; 0x68
    3808:	ldr	r1, [fp, #16]
    380c:	ldr	ip, [fp, #12]
    3810:	ldr	lr, [fp, #8]
    3814:	str	r0, [fp, #-16]
    3818:	str	r3, [fp, #-20]	; 0xffffffec
    381c:	str	r2, [fp, #-24]	; 0xffffffe8
    3820:	ldr	r0, [fp, #12]
    3824:	ldr	r0, [r0, #8]
    3828:	cmp	r0, #4
    382c:	str	lr, [fp, #-44]	; 0xffffffd4
    3830:	str	ip, [fp, #-48]	; 0xffffffd0
    3834:	str	r1, [fp, #-52]	; 0xffffffcc
    3838:	bne	3924 <read_attribute_sub+0x128>
    383c:	ldr	r0, [fp, #8]
    3840:	add	r0, r0, #1
    3844:	bl	0 <malloc>
    3848:	str	r0, [fp, #-28]	; 0xffffffe4
    384c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3850:	movw	lr, #0
    3854:	cmp	r0, lr
    3858:	bne	3890 <read_attribute_sub+0x94>
    385c:	ldr	r0, [fp, #8]
    3860:	add	r2, r0, #1
    3864:	mvn	r0, #0
    3868:	movw	r1, #0
    386c:	movt	r1, #0
    3870:	movw	r3, #0
    3874:	movt	r3, #0
    3878:	movw	ip, #76	; 0x4c
    387c:	str	ip, [sp]
    3880:	bl	0 <coda_set_error>
    3884:	mvn	r0, #0
    3888:	str	r0, [fp, #-12]
    388c:	b	3c3c <read_attribute_sub+0x440>
    3890:	ldr	r0, [fp, #-16]
    3894:	ldr	r0, [r0, #52]	; 0x34
    3898:	ldr	r2, [fp, #-24]	; 0xffffffe8
    389c:	ldr	r3, [fp, #-20]	; 0xffffffec
    38a0:	ldr	r1, [fp, #8]
    38a4:	asr	ip, r1, #31
    38a8:	ldr	lr, [fp, #-28]	; 0xffffffe4
    38ac:	mov	r4, sp
    38b0:	str	lr, [r4, #8]
    38b4:	str	ip, [r4, #4]
    38b8:	str	r1, [r4]
    38bc:	bl	404 <read_bytes>
    38c0:	cmp	r0, #0
    38c4:	beq	38dc <read_attribute_sub+0xe0>
    38c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    38cc:	bl	0 <free>
    38d0:	mvn	r0, #0
    38d4:	str	r0, [fp, #-12]
    38d8:	b	3c3c <read_attribute_sub+0x440>
    38dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    38e0:	ldr	r1, [fp, #8]
    38e4:	add	r0, r0, r1
    38e8:	movw	r1, #0
    38ec:	strb	r1, [r0]
    38f0:	ldr	r0, [fp, #12]
    38f4:	ldr	r1, [fp, #-16]
    38f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    38fc:	movw	r2, #0
    3900:	str	r1, [sp, #56]	; 0x38
    3904:	mov	r1, r2
    3908:	ldr	r2, [sp, #56]	; 0x38
    390c:	bl	0 <coda_mem_string_new>
    3910:	ldr	r1, [fp, #16]
    3914:	str	r0, [r1]
    3918:	ldr	r0, [fp, #-28]	; 0xffffffe4
    391c:	bl	0 <free>
    3920:	b	3c14 <read_attribute_sub+0x418>
    3924:	mov	r0, #0
    3928:	str	r0, [fp, #-32]	; 0xffffffe0
    392c:	ldr	r0, [fp, #-16]
    3930:	ldr	r0, [r0, #52]	; 0x34
    3934:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3938:	ldr	r3, [fp, #-20]	; 0xffffffec
    393c:	ldr	r1, [fp, #8]
    3940:	asr	ip, r1, #31
    3944:	sub	lr, fp, #40	; 0x28
    3948:	mov	r4, sp
    394c:	str	lr, [r4, #8]
    3950:	str	ip, [r4, #4]
    3954:	str	r1, [r4]
    3958:	bl	404 <read_bytes>
    395c:	cmp	r0, #0
    3960:	beq	3970 <read_attribute_sub+0x174>
    3964:	mvn	r0, #0
    3968:	str	r0, [fp, #-12]
    396c:	b	3c3c <read_attribute_sub+0x440>
    3970:	ldr	r0, [fp, #-16]
    3974:	ldr	r0, [r0, #68]	; 0x44
    3978:	ldr	r1, [fp, #-32]	; 0xffffffe0
    397c:	cmp	r0, r1
    3980:	bne	3a14 <read_attribute_sub+0x218>
    3984:	ldr	r0, [fp, #8]
    3988:	sub	r0, r0, #1
    398c:	cmp	r0, #7
    3990:	str	r0, [sp, #52]	; 0x34
    3994:	bhi	39f0 <read_attribute_sub+0x1f4>
    3998:	add	r0, pc, #8
    399c:	ldr	r1, [sp, #52]	; 0x34
    39a0:	ldr	r0, [r0, r1, lsl #2]
    39a4:	mov	pc, r0
    39a8:	.word	0x000039c8
    39ac:	.word	0x000039cc
    39b0:	.word	0x000039f0
    39b4:	.word	0x000039d8
    39b8:	.word	0x000039f0
    39bc:	.word	0x000039f0
    39c0:	.word	0x000039f0
    39c4:	.word	0x000039e4
    39c8:	b	3a10 <read_attribute_sub+0x214>
    39cc:	sub	r0, fp, #40	; 0x28
    39d0:	bl	3c48 <swap2>
    39d4:	b	3a10 <read_attribute_sub+0x214>
    39d8:	sub	r0, fp, #40	; 0x28
    39dc:	bl	66c <swap4>
    39e0:	b	3a10 <read_attribute_sub+0x214>
    39e4:	sub	r0, fp, #40	; 0x28
    39e8:	bl	b84 <swap8>
    39ec:	b	3a10 <read_attribute_sub+0x214>
    39f0:	movw	r0, #0
    39f4:	movt	r0, #0
    39f8:	movw	r1, #0
    39fc:	movt	r1, #0
    3a00:	movw	r2, #129	; 0x81
    3a04:	movw	r3, #0
    3a08:	movt	r3, #0
    3a0c:	bl	0 <__assert_fail>
    3a10:	b	3a14 <read_attribute_sub+0x218>
    3a14:	ldr	r0, [fp, #12]
    3a18:	ldr	r0, [r0, #12]
    3a1c:	cmp	r0, #9
    3a20:	str	r0, [sp, #48]	; 0x30
    3a24:	bhi	3bf0 <read_attribute_sub+0x3f4>
    3a28:	add	r0, pc, #8
    3a2c:	ldr	r1, [sp, #48]	; 0x30
    3a30:	ldr	r0, [r0, r1, lsl #2]
    3a34:	mov	pc, r0
    3a38:	.word	0x00003a60
    3a3c:	.word	0x00003a8c
    3a40:	.word	0x00003ab8
    3a44:	.word	0x00003ae4
    3a48:	.word	0x00003b10
    3a4c:	.word	0x00003b3c
    3a50:	.word	0x00003b68
    3a54:	.word	0x00003bf0
    3a58:	.word	0x00003b98
    3a5c:	.word	0x00003bc4
    3a60:	ldr	r0, [fp, #12]
    3a64:	ldr	r1, [fp, #-16]
    3a68:	movw	r2, #0
    3a6c:	str	r1, [sp, #44]	; 0x2c
    3a70:	mov	r1, r2
    3a74:	ldr	r2, [sp, #44]	; 0x2c
    3a78:	ldrsb	r3, [fp, #-40]	; 0xffffffd8
    3a7c:	bl	0 <coda_mem_int8_new>
    3a80:	ldr	r1, [fp, #16]
    3a84:	str	r0, [r1]
    3a88:	b	3c10 <read_attribute_sub+0x414>
    3a8c:	ldr	r0, [fp, #12]
    3a90:	ldr	r1, [fp, #-16]
    3a94:	movw	r2, #0
    3a98:	str	r1, [sp, #40]	; 0x28
    3a9c:	mov	r1, r2
    3aa0:	ldr	r2, [sp, #40]	; 0x28
    3aa4:	ldrb	r3, [fp, #-40]	; 0xffffffd8
    3aa8:	bl	0 <coda_mem_uint8_new>
    3aac:	ldr	r1, [fp, #16]
    3ab0:	str	r0, [r1]
    3ab4:	b	3c10 <read_attribute_sub+0x414>
    3ab8:	ldr	r0, [fp, #12]
    3abc:	ldr	r1, [fp, #-16]
    3ac0:	movw	r2, #0
    3ac4:	str	r1, [sp, #36]	; 0x24
    3ac8:	mov	r1, r2
    3acc:	ldr	r2, [sp, #36]	; 0x24
    3ad0:	ldrsh	r3, [fp, #-40]	; 0xffffffd8
    3ad4:	bl	0 <coda_mem_int16_new>
    3ad8:	ldr	r1, [fp, #16]
    3adc:	str	r0, [r1]
    3ae0:	b	3c10 <read_attribute_sub+0x414>
    3ae4:	ldr	r0, [fp, #12]
    3ae8:	ldr	r1, [fp, #-16]
    3aec:	movw	r2, #0
    3af0:	str	r1, [sp, #32]
    3af4:	mov	r1, r2
    3af8:	ldr	r2, [sp, #32]
    3afc:	ldrh	r3, [fp, #-40]	; 0xffffffd8
    3b00:	bl	0 <coda_mem_uint16_new>
    3b04:	ldr	r1, [fp, #16]
    3b08:	str	r0, [r1]
    3b0c:	b	3c10 <read_attribute_sub+0x414>
    3b10:	ldr	r0, [fp, #12]
    3b14:	ldr	r1, [fp, #-16]
    3b18:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3b1c:	movw	r2, #0
    3b20:	str	r1, [sp, #28]
    3b24:	mov	r1, r2
    3b28:	ldr	r2, [sp, #28]
    3b2c:	bl	0 <coda_mem_int32_new>
    3b30:	ldr	r1, [fp, #16]
    3b34:	str	r0, [r1]
    3b38:	b	3c10 <read_attribute_sub+0x414>
    3b3c:	ldr	r0, [fp, #12]
    3b40:	ldr	r1, [fp, #-16]
    3b44:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3b48:	movw	r2, #0
    3b4c:	str	r1, [sp, #24]
    3b50:	mov	r1, r2
    3b54:	ldr	r2, [sp, #24]
    3b58:	bl	0 <coda_mem_uint32_new>
    3b5c:	ldr	r1, [fp, #16]
    3b60:	str	r0, [r1]
    3b64:	b	3c10 <read_attribute_sub+0x414>
    3b68:	ldr	r0, [fp, #12]
    3b6c:	ldr	r2, [fp, #-16]
    3b70:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3b74:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3b78:	mov	ip, sp
    3b7c:	str	r3, [ip, #4]
    3b80:	str	r1, [ip]
    3b84:	mov	r1, #0
    3b88:	bl	0 <coda_mem_int64_new>
    3b8c:	ldr	r1, [fp, #16]
    3b90:	str	r0, [r1]
    3b94:	b	3c10 <read_attribute_sub+0x414>
    3b98:	ldr	r0, [fp, #12]
    3b9c:	ldr	r1, [fp, #-16]
    3ba0:	vldr	s0, [fp, #-40]	; 0xffffffd8
    3ba4:	movw	r2, #0
    3ba8:	str	r1, [sp, #20]
    3bac:	mov	r1, r2
    3bb0:	ldr	r2, [sp, #20]
    3bb4:	bl	0 <coda_mem_float_new>
    3bb8:	ldr	r1, [fp, #16]
    3bbc:	str	r0, [r1]
    3bc0:	b	3c10 <read_attribute_sub+0x414>
    3bc4:	ldr	r0, [fp, #12]
    3bc8:	ldr	r1, [fp, #-16]
    3bcc:	vldr	d0, [fp, #-40]	; 0xffffffd8
    3bd0:	movw	r2, #0
    3bd4:	str	r1, [sp, #16]
    3bd8:	mov	r1, r2
    3bdc:	ldr	r2, [sp, #16]
    3be0:	bl	0 <coda_mem_double_new>
    3be4:	ldr	r1, [fp, #16]
    3be8:	str	r0, [r1]
    3bec:	b	3c10 <read_attribute_sub+0x414>
    3bf0:	movw	r0, #0
    3bf4:	movt	r0, #0
    3bf8:	movw	r1, #0
    3bfc:	movt	r1, #0
    3c00:	movw	r2, #175	; 0xaf
    3c04:	movw	r3, #0
    3c08:	movt	r3, #0
    3c0c:	bl	0 <__assert_fail>
    3c10:	b	3c14 <read_attribute_sub+0x418>
    3c14:	ldr	r0, [fp, #16]
    3c18:	ldr	r0, [r0]
    3c1c:	movw	r1, #0
    3c20:	cmp	r0, r1
    3c24:	bne	3c34 <read_attribute_sub+0x438>
    3c28:	mvn	r0, #0
    3c2c:	str	r0, [fp, #-12]
    3c30:	b	3c3c <read_attribute_sub+0x440>
    3c34:	movw	r0, #0
    3c38:	str	r0, [fp, #-12]
    3c3c:	ldr	r0, [fp, #-12]
    3c40:	sub	sp, fp, #8
    3c44:	pop	{r4, sl, fp, pc}

00003c48 <swap2>:
    3c48:	sub	sp, sp, #8
    3c4c:	str	r0, [sp, #4]
    3c50:	ldr	r0, [sp, #4]
    3c54:	str	r0, [sp]
    3c58:	ldr	r0, [sp]
    3c5c:	ldrb	r0, [r0]
    3c60:	ldr	r1, [sp]
    3c64:	ldrb	r1, [r1, #1]
    3c68:	eor	r0, r0, r1
    3c6c:	ldr	r1, [sp]
    3c70:	strb	r0, [r1]
    3c74:	ldr	r0, [sp]
    3c78:	ldrb	r0, [r0]
    3c7c:	ldr	r1, [sp]
    3c80:	ldrb	r1, [r1, #1]
    3c84:	eor	r0, r0, r1
    3c88:	ldr	r1, [sp]
    3c8c:	strb	r0, [r1, #1]
    3c90:	ldr	r0, [sp]
    3c94:	ldrb	r0, [r0]
    3c98:	ldr	r1, [sp]
    3c9c:	ldrb	r1, [r1, #1]
    3ca0:	eor	r0, r0, r1
    3ca4:	ldr	r1, [sp]
    3ca8:	strb	r0, [r1]
    3cac:	add	sp, sp, #8
    3cb0:	bx	lr
