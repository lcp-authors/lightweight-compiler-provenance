
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c_builder.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_fb_gen_common_c_builder_header>:
       0:	push	{r4, r5, fp, lr}
       4:	add	fp, sp, #8
       8:	sub	sp, sp, #8
       c:	mov	r5, r0
      10:	ldr	r0, [r0, #204]	; 0xcc
      14:	movw	r1, #0
      18:	add	r4, r5, #102	; 0x66
      1c:	movt	r1, #0
      20:	mov	r2, r4
      24:	bl	0 <fprintf>
      28:	ldr	r0, [r5, #204]	; 0xcc
      2c:	movw	r1, #0
      30:	mov	r2, r4
      34:	movt	r1, #0
      38:	bl	0 <fprintf>
      3c:	ldr	r3, [r5, #204]	; 0xcc
      40:	movw	r0, #0
      44:	mov	r1, #81	; 0x51
      48:	mov	r2, #1
      4c:	movt	r0, #0
      50:	bl	0 <fwrite>
      54:	ldr	r3, [r5, #204]	; 0xcc
      58:	movw	r0, #0
      5c:	mov	r1, #53	; 0x35
      60:	mov	r2, #1
      64:	movt	r0, #0
      68:	bl	0 <fwrite>
      6c:	ldr	r0, [r5, #212]	; 0xd4
      70:	ldr	r0, [r0, #140]	; 0x8c
      74:	cmp	r0, #0
      78:	beq	94 <__flatcc_fb_gen_common_c_builder_header+0x94>
      7c:	ldr	r3, [r5, #204]	; 0xcc
      80:	movw	r0, #0
      84:	mov	r1, #36	; 0x24
      88:	mov	r2, #1
      8c:	movt	r0, #0
      90:	bl	0 <fwrite>
      94:	ldr	r3, [r5, #204]	; 0xcc
      98:	movw	r0, #0
      9c:	mov	r1, #22
      a0:	mov	r2, #1
      a4:	movt	r0, #0
      a8:	bl	0 <fwrite>
      ac:	ldr	r3, [r5, #204]	; 0xcc
      b0:	movw	r0, #0
      b4:	mov	r1, #35	; 0x23
      b8:	mov	r2, #1
      bc:	movt	r0, #0
      c0:	bl	0 <fwrite>
      c4:	ldr	r3, [r5, #204]	; 0xcc
      c8:	movw	r0, #0
      cc:	mov	r1, #7
      d0:	mov	r2, #1
      d4:	movt	r0, #0
      d8:	bl	0 <fwrite>
      dc:	movw	r1, #0
      e0:	mov	r0, r5
      e4:	movt	r1, #0
      e8:	bl	0 <strcmp>
      ec:	cmp	r0, #0
      f0:	beq	16c <__flatcc_fb_gen_common_c_builder_header+0x16c>
      f4:	ldr	r0, [r5, #204]	; 0xcc
      f8:	movw	r1, #0
      fc:	mov	r2, r5
     100:	movt	r1, #0
     104:	bl	0 <fprintf>
     108:	ldr	r0, [r5, #204]	; 0xcc
     10c:	movw	r1, #0
     110:	mov	r2, r5
     114:	movt	r1, #0
     118:	bl	0 <fprintf>
     11c:	ldr	r0, [r5, #204]	; 0xcc
     120:	movw	r1, #0
     124:	mov	r2, r5
     128:	movt	r1, #0
     12c:	bl	0 <fprintf>
     130:	ldr	r0, [r5, #204]	; 0xcc
     134:	movw	r1, #0
     138:	mov	r2, r5
     13c:	movt	r1, #0
     140:	bl	0 <fprintf>
     144:	ldr	r0, [r5, #204]	; 0xcc
     148:	movw	r1, #0
     14c:	mov	r2, r5
     150:	movt	r1, #0
     154:	bl	0 <fprintf>
     158:	ldr	r0, [r5, #204]	; 0xcc
     15c:	movw	r1, #0
     160:	mov	r2, r5
     164:	movt	r1, #0
     168:	bl	0 <fprintf>
     16c:	ldr	r0, [r5, #204]	; 0xcc
     170:	movw	r1, #0
     174:	mov	r2, r5
     178:	mov	r3, r5
     17c:	movt	r1, #0
     180:	bl	0 <fprintf>
     184:	ldr	r0, [r5, #204]	; 0xcc
     188:	movw	r1, #0
     18c:	mov	r2, r5
     190:	mov	r3, r5
     194:	movt	r1, #0
     198:	bl	0 <fprintf>
     19c:	movw	r1, #0
     1a0:	mov	r0, r5
     1a4:	movt	r1, #0
     1a8:	bl	0 <strcmp>
     1ac:	cmp	r0, #0
     1b0:	beq	1dc <__flatcc_fb_gen_common_c_builder_header+0x1dc>
     1b4:	ldr	r0, [r5, #204]	; 0xcc
     1b8:	movw	r1, #0
     1bc:	mov	r2, r5
     1c0:	movt	r1, #0
     1c4:	bl	0 <fprintf>
     1c8:	ldr	r0, [r5, #204]	; 0xcc
     1cc:	movw	r1, #0
     1d0:	mov	r2, r5
     1d4:	movt	r1, #0
     1d8:	bl	0 <fprintf>
     1dc:	ldr	r1, [r5, #204]	; 0xcc
     1e0:	mov	r0, #10
     1e4:	bl	0 <fputc>
     1e8:	ldr	r0, [r5, #204]	; 0xcc
     1ec:	movw	r1, #0
     1f0:	mov	r2, r5
     1f4:	movt	r1, #0
     1f8:	bl	0 <fprintf>
     1fc:	ldr	r0, [r5, #204]	; 0xcc
     200:	movw	r1, #0
     204:	mov	r2, r5
     208:	movt	r1, #0
     20c:	bl	0 <fprintf>
     210:	ldr	r0, [r5, #204]	; 0xcc
     214:	movw	r1, #0
     218:	mov	r2, r5
     21c:	mov	r3, r5
     220:	str	r5, [sp]
     224:	movt	r1, #0
     228:	bl	0 <fprintf>
     22c:	ldr	r0, [r5, #204]	; 0xcc
     230:	movw	r1, #0
     234:	mov	r2, r5
     238:	movt	r1, #0
     23c:	bl	0 <fprintf>
     240:	ldr	r0, [r5, #204]	; 0xcc
     244:	movw	r1, #0
     248:	mov	r2, r5
     24c:	movt	r1, #0
     250:	bl	0 <fprintf>
     254:	ldr	r0, [r5, #204]	; 0xcc
     258:	movw	r1, #0
     25c:	mov	r2, r5
     260:	movt	r1, #0
     264:	bl	0 <fprintf>
     268:	ldr	r0, [r5, #204]	; 0xcc
     26c:	movw	r1, #0
     270:	mov	r2, r5
     274:	movt	r1, #0
     278:	bl	0 <fprintf>
     27c:	ldr	r0, [r5, #204]	; 0xcc
     280:	movw	r1, #0
     284:	mov	r2, r5
     288:	mov	r3, r5
     28c:	movt	r1, #0
     290:	bl	0 <fprintf>
     294:	ldr	r0, [r5, #204]	; 0xcc
     298:	movw	r1, #0
     29c:	mov	r2, r5
     2a0:	mov	r3, r5
     2a4:	str	r5, [sp]
     2a8:	movt	r1, #0
     2ac:	bl	0 <fprintf>
     2b0:	ldr	r0, [r5, #204]	; 0xcc
     2b4:	movw	r1, #0
     2b8:	mov	r2, r5
     2bc:	movt	r1, #0
     2c0:	bl	0 <fprintf>
     2c4:	ldr	r0, [r5, #204]	; 0xcc
     2c8:	movw	r1, #0
     2cc:	mov	r2, r5
     2d0:	movt	r1, #0
     2d4:	bl	0 <fprintf>
     2d8:	ldr	r0, [r5, #204]	; 0xcc
     2dc:	movw	r1, #0
     2e0:	mov	r2, r5
     2e4:	movt	r1, #0
     2e8:	bl	0 <fprintf>
     2ec:	ldr	r0, [r5, #204]	; 0xcc
     2f0:	movw	r1, #0
     2f4:	mov	r2, r5
     2f8:	mov	r3, r5
     2fc:	movt	r1, #0
     300:	bl	0 <fprintf>
     304:	ldr	r0, [r5, #204]	; 0xcc
     308:	movw	r1, #0
     30c:	mov	r2, r5
     310:	movt	r1, #0
     314:	bl	0 <fprintf>
     318:	ldr	r0, [r5, #204]	; 0xcc
     31c:	movw	r1, #0
     320:	mov	r2, r5
     324:	mov	r3, r5
     328:	str	r5, [sp]
     32c:	movt	r1, #0
     330:	bl	0 <fprintf>
     334:	ldr	r0, [r5, #204]	; 0xcc
     338:	movw	r1, #0
     33c:	mov	r2, r5
     340:	mov	r3, r5
     344:	str	r5, [sp]
     348:	str	r5, [sp, #4]
     34c:	movt	r1, #0
     350:	bl	0 <fprintf>
     354:	ldr	r0, [r5, #204]	; 0xcc
     358:	movw	r1, #0
     35c:	mov	r2, r5
     360:	mov	r3, r5
     364:	movt	r1, #0
     368:	bl	0 <fprintf>
     36c:	ldr	r0, [r5, #204]	; 0xcc
     370:	movw	r1, #0
     374:	mov	r2, r5
     378:	mov	r3, r5
     37c:	str	r5, [sp]
     380:	str	r5, [sp, #4]
     384:	movt	r1, #0
     388:	bl	0 <fprintf>
     38c:	ldr	r0, [r5, #204]	; 0xcc
     390:	movw	r1, #0
     394:	mov	r2, r5
     398:	mov	r3, r5
     39c:	movt	r1, #0
     3a0:	bl	0 <fprintf>
     3a4:	ldr	r0, [r5, #204]	; 0xcc
     3a8:	movw	r1, #0
     3ac:	mov	r2, r5
     3b0:	movt	r1, #0
     3b4:	bl	0 <fprintf>
     3b8:	ldr	r0, [r5, #204]	; 0xcc
     3bc:	movw	r1, #0
     3c0:	mov	r2, r5
     3c4:	movt	r1, #0
     3c8:	bl	0 <fprintf>
     3cc:	ldr	r0, [r5, #204]	; 0xcc
     3d0:	movw	r1, #0
     3d4:	mov	r2, r5
     3d8:	movt	r1, #0
     3dc:	bl	0 <fprintf>
     3e0:	ldr	r0, [r5, #204]	; 0xcc
     3e4:	movw	r1, #0
     3e8:	mov	r2, r5
     3ec:	movt	r1, #0
     3f0:	bl	0 <fprintf>
     3f4:	ldr	r0, [r5, #204]	; 0xcc
     3f8:	movw	r1, #0
     3fc:	mov	r2, r5
     400:	mov	r3, r5
     404:	movt	r1, #0
     408:	bl	0 <fprintf>
     40c:	ldr	r0, [r5, #204]	; 0xcc
     410:	movw	r1, #0
     414:	mov	r2, r5
     418:	movt	r1, #0
     41c:	bl	0 <fprintf>
     420:	ldr	r0, [r5, #204]	; 0xcc
     424:	movw	r1, #0
     428:	mov	r2, r5
     42c:	movt	r1, #0
     430:	bl	0 <fprintf>
     434:	ldr	r0, [r5, #204]	; 0xcc
     438:	movw	r1, #0
     43c:	mov	r2, r5
     440:	mov	r3, r5
     444:	movt	r1, #0
     448:	bl	0 <fprintf>
     44c:	ldr	r0, [r5, #204]	; 0xcc
     450:	movw	r1, #0
     454:	mov	r2, r5
     458:	mov	r3, r5
     45c:	movt	r1, #0
     460:	bl	0 <fprintf>
     464:	ldr	r0, [r5, #204]	; 0xcc
     468:	movw	r1, #0
     46c:	mov	r2, r5
     470:	mov	r3, r5
     474:	movt	r1, #0
     478:	bl	0 <fprintf>
     47c:	ldr	r0, [r5, #204]	; 0xcc
     480:	movw	r1, #0
     484:	mov	r2, r5
     488:	mov	r3, r5
     48c:	movt	r1, #0
     490:	bl	0 <fprintf>
     494:	ldr	r0, [r5, #204]	; 0xcc
     498:	movw	r1, #0
     49c:	mov	r2, r5
     4a0:	mov	r3, r5
     4a4:	str	r5, [sp]
     4a8:	movt	r1, #0
     4ac:	bl	0 <fprintf>
     4b0:	ldr	r0, [r5, #204]	; 0xcc
     4b4:	movw	r1, #0
     4b8:	mov	r2, r5
     4bc:	mov	r3, r5
     4c0:	movt	r1, #0
     4c4:	bl	0 <fprintf>
     4c8:	ldr	r0, [r5, #204]	; 0xcc
     4cc:	movw	r1, #0
     4d0:	mov	r2, r5
     4d4:	movt	r1, #0
     4d8:	bl	0 <fprintf>
     4dc:	ldr	r0, [r5, #204]	; 0xcc
     4e0:	movw	r1, #0
     4e4:	mov	r2, r5
     4e8:	movt	r1, #0
     4ec:	bl	0 <fprintf>
     4f0:	ldr	r0, [r5, #204]	; 0xcc
     4f4:	movw	r1, #0
     4f8:	mov	r2, r5
     4fc:	movt	r1, #0
     500:	bl	0 <fprintf>
     504:	ldr	r0, [r5, #204]	; 0xcc
     508:	movw	r1, #0
     50c:	mov	r2, r5
     510:	mov	r3, r5
     514:	str	r5, [sp]
     518:	movt	r1, #0
     51c:	bl	0 <fprintf>
     520:	ldr	r0, [r5, #204]	; 0xcc
     524:	movw	r1, #0
     528:	mov	r2, r5
     52c:	movt	r1, #0
     530:	bl	0 <fprintf>
     534:	ldr	r0, [r5, #204]	; 0xcc
     538:	movw	r1, #0
     53c:	mov	r2, r5
     540:	movt	r1, #0
     544:	bl	0 <fprintf>
     548:	ldr	r0, [r5, #204]	; 0xcc
     54c:	movw	r1, #0
     550:	mov	r2, r5
     554:	movt	r1, #0
     558:	bl	0 <fprintf>
     55c:	ldr	r0, [r5, #204]	; 0xcc
     560:	movw	r1, #0
     564:	mov	r2, r5
     568:	movt	r1, #0
     56c:	bl	0 <fprintf>
     570:	ldr	r0, [r5, #204]	; 0xcc
     574:	movw	r1, #0
     578:	mov	r2, r5
     57c:	mov	r3, r5
     580:	movt	r1, #0
     584:	bl	0 <fprintf>
     588:	ldr	r0, [r5, #204]	; 0xcc
     58c:	movw	r1, #0
     590:	mov	r2, r5
     594:	movt	r1, #0
     598:	bl	0 <fprintf>
     59c:	ldr	r0, [r5, #204]	; 0xcc
     5a0:	movw	r1, #0
     5a4:	mov	r2, r5
     5a8:	movt	r1, #0
     5ac:	bl	0 <fprintf>
     5b0:	ldr	r0, [r5, #204]	; 0xcc
     5b4:	movw	r1, #0
     5b8:	mov	r2, r5
     5bc:	movt	r1, #0
     5c0:	bl	0 <fprintf>
     5c4:	ldr	r0, [r5, #204]	; 0xcc
     5c8:	movw	r1, #0
     5cc:	mov	r2, r5
     5d0:	movt	r1, #0
     5d4:	bl	0 <fprintf>
     5d8:	ldr	r0, [r5, #204]	; 0xcc
     5dc:	movw	r1, #0
     5e0:	mov	r2, r5
     5e4:	movt	r1, #0
     5e8:	bl	0 <fprintf>
     5ec:	ldr	r0, [r5, #204]	; 0xcc
     5f0:	movw	r1, #0
     5f4:	mov	r2, r5
     5f8:	movt	r1, #0
     5fc:	bl	0 <fprintf>
     600:	ldr	r0, [r5, #204]	; 0xcc
     604:	movw	r1, #0
     608:	mov	r2, r5
     60c:	movt	r1, #0
     610:	bl	0 <fprintf>
     614:	ldr	r0, [r5, #204]	; 0xcc
     618:	movw	r1, #0
     61c:	mov	r2, r5
     620:	movt	r1, #0
     624:	bl	0 <fprintf>
     628:	ldr	r0, [r5, #204]	; 0xcc
     62c:	movw	r1, #0
     630:	mov	r2, r5
     634:	movt	r1, #0
     638:	bl	0 <fprintf>
     63c:	ldr	r0, [r5, #204]	; 0xcc
     640:	movw	r1, #0
     644:	mov	r2, r5
     648:	movt	r1, #0
     64c:	bl	0 <fprintf>
     650:	ldr	r0, [r5, #204]	; 0xcc
     654:	movw	r1, #0
     658:	mov	r2, r5
     65c:	movt	r1, #0
     660:	bl	0 <fprintf>
     664:	ldr	r0, [r5, #204]	; 0xcc
     668:	movw	r1, #0
     66c:	mov	r2, r5
     670:	movt	r1, #0
     674:	bl	0 <fprintf>
     678:	ldr	r0, [r5, #204]	; 0xcc
     67c:	movw	r1, #0
     680:	mov	r2, r5
     684:	movt	r1, #0
     688:	bl	0 <fprintf>
     68c:	ldr	r0, [r5, #204]	; 0xcc
     690:	movw	r1, #0
     694:	mov	r2, r5
     698:	movt	r1, #0
     69c:	bl	0 <fprintf>
     6a0:	ldr	r0, [r5, #204]	; 0xcc
     6a4:	movw	r1, #0
     6a8:	mov	r2, r5
     6ac:	movt	r1, #0
     6b0:	bl	0 <fprintf>
     6b4:	ldr	r0, [r5, #204]	; 0xcc
     6b8:	movw	r1, #0
     6bc:	mov	r2, r5
     6c0:	movt	r1, #0
     6c4:	bl	0 <fprintf>
     6c8:	ldr	r0, [r5, #204]	; 0xcc
     6cc:	movw	r1, #0
     6d0:	mov	r2, r5
     6d4:	movt	r1, #0
     6d8:	bl	0 <fprintf>
     6dc:	ldr	r1, [r5, #204]	; 0xcc
     6e0:	mov	r0, #10
     6e4:	bl	0 <fputc>
     6e8:	ldr	r0, [r5, #204]	; 0xcc
     6ec:	movw	r1, #0
     6f0:	mov	r2, r5
     6f4:	mov	r3, r5
     6f8:	str	r5, [sp]
     6fc:	movt	r1, #0
     700:	bl	0 <fprintf>
     704:	ldr	r0, [r5, #204]	; 0xcc
     708:	movw	r1, #0
     70c:	mov	r2, r5
     710:	mov	r3, r5
     714:	str	r5, [sp]
     718:	movt	r1, #0
     71c:	bl	0 <fprintf>
     720:	ldr	r0, [r5, #204]	; 0xcc
     724:	movw	r1, #0
     728:	mov	r2, r5
     72c:	mov	r3, r5
     730:	str	r5, [sp]
     734:	str	r5, [sp, #4]
     738:	movt	r1, #0
     73c:	bl	0 <fprintf>
     740:	ldr	r0, [r5, #204]	; 0xcc
     744:	movw	r1, #0
     748:	mov	r2, r5
     74c:	mov	r3, r5
     750:	str	r5, [sp]
     754:	movt	r1, #0
     758:	bl	0 <fprintf>
     75c:	ldr	r0, [r5, #204]	; 0xcc
     760:	movw	r1, #0
     764:	mov	r2, r5
     768:	mov	r3, r5
     76c:	str	r5, [sp]
     770:	movt	r1, #0
     774:	bl	0 <fprintf>
     778:	ldr	r0, [r5, #204]	; 0xcc
     77c:	movw	r1, #0
     780:	mov	r2, r5
     784:	mov	r3, r5
     788:	str	r5, [sp]
     78c:	movt	r1, #0
     790:	bl	0 <fprintf>
     794:	ldr	r0, [r5, #204]	; 0xcc
     798:	movw	r1, #0
     79c:	mov	r2, r5
     7a0:	mov	r3, r5
     7a4:	str	r5, [sp]
     7a8:	movt	r1, #0
     7ac:	bl	0 <fprintf>
     7b0:	ldr	r0, [r5, #204]	; 0xcc
     7b4:	movw	r1, #0
     7b8:	mov	r2, r5
     7bc:	mov	r3, r5
     7c0:	str	r5, [sp]
     7c4:	movt	r1, #0
     7c8:	bl	0 <fprintf>
     7cc:	ldr	r0, [r5, #204]	; 0xcc
     7d0:	movw	r1, #0
     7d4:	mov	r2, r5
     7d8:	mov	r3, r5
     7dc:	str	r5, [sp]
     7e0:	movt	r1, #0
     7e4:	bl	0 <fprintf>
     7e8:	ldr	r0, [r5, #204]	; 0xcc
     7ec:	movw	r1, #0
     7f0:	mov	r2, r5
     7f4:	mov	r3, r5
     7f8:	str	r5, [sp]
     7fc:	movt	r1, #0
     800:	bl	0 <fprintf>
     804:	ldr	r0, [r5, #204]	; 0xcc
     808:	movw	r1, #0
     80c:	mov	r2, r5
     810:	mov	r3, r5
     814:	str	r5, [sp]
     818:	movt	r1, #0
     81c:	bl	0 <fprintf>
     820:	ldr	r1, [r5, #204]	; 0xcc
     824:	mov	r0, #10
     828:	bl	0 <fputc>
     82c:	ldr	r0, [r5, #204]	; 0xcc
     830:	movw	r1, #0
     834:	mov	r2, r5
     838:	mov	r3, r5
     83c:	movt	r1, #0
     840:	bl	0 <fprintf>
     844:	ldr	r1, [r5, #204]	; 0xcc
     848:	mov	r0, #10
     84c:	bl	0 <fputc>
     850:	ldr	r0, [r5, #204]	; 0xcc
     854:	movw	r1, #0
     858:	mov	r2, r5
     85c:	mov	r3, r5
     860:	movt	r1, #0
     864:	bl	0 <fprintf>
     868:	ldr	r0, [r5, #212]	; 0xd4
     86c:	ldr	r0, [r0, #140]	; 0x8c
     870:	cmp	r0, #0
     874:	beq	890 <__flatcc_fb_gen_common_c_builder_header+0x890>
     878:	ldr	r3, [r5, #204]	; 0xcc
     87c:	movw	r0, #0
     880:	mov	r1, #36	; 0x24
     884:	mov	r2, #1
     888:	movt	r0, #0
     88c:	bl	0 <fwrite>
     890:	ldr	r0, [r5, #204]	; 0xcc
     894:	movw	r1, #0
     898:	mov	r2, r4
     89c:	movt	r1, #0
     8a0:	bl	0 <fprintf>
     8a4:	mov	r0, #0
     8a8:	sub	sp, fp, #8
     8ac:	pop	{r4, r5, fp, pc}

000008b0 <__flatcc_fb_gen_c_builder>:
     8b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     8b4:	add	fp, sp, #28
     8b8:	sub	sp, sp, #620	; 0x26c
     8bc:	mov	r4, r0
     8c0:	mov	sl, r0
     8c4:	ldr	r1, [r4, #208]	; 0xd0
     8c8:	ldr	r0, [sl, #204]!	; 0xcc
     8cc:	ldr	r2, [r1, #164]	; 0xa4
     8d0:	movw	r1, #0
     8d4:	movt	r1, #0
     8d8:	mov	r3, r2
     8dc:	bl	0 <fprintf>
     8e0:	ldr	r3, [sl]
     8e4:	movw	r0, #0
     8e8:	mov	r1, #81	; 0x51
     8ec:	mov	r2, #1
     8f0:	movt	r0, #0
     8f4:	bl	0 <fwrite>
     8f8:	ldr	r1, [r4, #208]	; 0xd0
     8fc:	ldr	r0, [sl]
     900:	ldr	r2, [r1, #164]	; 0xa4
     904:	movw	r1, #0
     908:	movt	r1, #0
     90c:	bl	0 <fprintf>
     910:	ldr	r1, [r4, #208]	; 0xd0
     914:	ldr	r0, [sl]
     918:	ldr	r2, [r1, #160]	; 0xa0
     91c:	movw	r1, #0
     920:	movt	r1, #0
     924:	bl	0 <fprintf>
     928:	ldr	r3, [sl]
     92c:	movw	r5, #0
     930:	mov	r1, #7
     934:	mov	r2, #1
     938:	movt	r5, #0
     93c:	mov	r0, r5
     940:	bl	0 <fwrite>
     944:	ldr	r0, [sl]
     948:	movw	r1, #0
     94c:	add	r2, r4, #102	; 0x66
     950:	movt	r1, #0
     954:	bl	0 <fprintf>
     958:	ldr	r0, [sl]
     95c:	movw	r1, #0
     960:	mov	r2, r4
     964:	movt	r1, #0
     968:	bl	0 <fprintf>
     96c:	ldr	r3, [sl]
     970:	mov	r0, r5
     974:	mov	r1, #7
     978:	mov	r2, #1
     97c:	bl	0 <fwrite>
     980:	movw	r1, #0
     984:	movw	r2, #0
     988:	mov	r0, r4
     98c:	movt	r1, #0
     990:	movt	r2, #0
     994:	bl	0 <__flatcc_fb_gen_c_includes>
     998:	ldr	r0, [r4, #212]	; 0xd4
     99c:	ldr	r0, [r0, #140]	; 0x8c
     9a0:	cmp	r0, #0
     9a4:	beq	9c0 <__flatcc_fb_gen_c_builder+0x110>
     9a8:	ldr	r3, [sl]
     9ac:	movw	r0, #0
     9b0:	mov	r1, #36	; 0x24
     9b4:	mov	r2, #1
     9b8:	movt	r0, #0
     9bc:	bl	0 <fwrite>
     9c0:	ldr	r1, [r4, #208]	; 0xd0
     9c4:	ldr	r0, [r4, #204]	; 0xcc
     9c8:	ldrh	r2, [r1, #16]
     9cc:	cmp	r2, #2
     9d0:	bne	9ec <__flatcc_fb_gen_c_builder+0x13c>
     9d4:	ldrd	r2, [r1, #8]
     9d8:	movw	r1, #0
     9dc:	movt	r1, #0
     9e0:	str	r3, [sp]
     9e4:	str	r2, [sp, #4]
     9e8:	b	9f4 <__flatcc_fb_gen_c_builder+0x144>
     9ec:	movw	r1, #0
     9f0:	movt	r1, #0
     9f4:	mov	r2, r4
     9f8:	mov	r3, r4
     9fc:	bl	0 <fprintf>
     a00:	ldr	r1, [r4, #208]	; 0xd0
     a04:	ldr	r0, [r4, #204]	; 0xcc
     a08:	ldrh	r2, [r1, #32]
     a0c:	cmp	r2, #2
     a10:	bne	a2c <__flatcc_fb_gen_c_builder+0x17c>
     a14:	ldrd	r2, [r1, #24]
     a18:	movw	r1, #0
     a1c:	movt	r1, #0
     a20:	str	r3, [sp]
     a24:	str	r2, [sp, #4]
     a28:	b	a40 <__flatcc_fb_gen_c_builder+0x190>
     a2c:	ldr	r1, [r4, #212]	; 0xd4
     a30:	ldr	r1, [r1, #104]	; 0x68
     a34:	str	r1, [sp]
     a38:	movw	r1, #0
     a3c:	movt	r1, #0
     a40:	mov	r2, r4
     a44:	mov	r3, r4
     a48:	bl	0 <fprintf>
     a4c:	ldr	r1, [r4, #204]	; 0xcc
     a50:	mov	r0, #10
     a54:	bl	0 <fputc>
     a58:	sub	r5, fp, #256	; 0x100
     a5c:	mov	r1, #0
     a60:	mov	r2, #220	; 0xdc
     a64:	mov	r7, #0
     a68:	mov	r0, r5
     a6c:	bl	0 <memset>
     a70:	ldr	r0, [r4, #208]	; 0xd0
     a74:	ldr	r6, [r0, #40]	; 0x28
     a78:	cmp	r6, #0
     a7c:	beq	b04 <__flatcc_fb_gen_c_builder+0x254>
     a80:	movw	r8, #0
     a84:	movw	r9, #0
     a88:	movt	r8, #0
     a8c:	movt	r9, #0
     a90:	ldrh	r0, [r6, #8]
     a94:	cmp	r0, #3
     a98:	bne	ae4 <__flatcc_fb_gen_c_builder+0x234>
     a9c:	ldr	r0, [r6, #12]
     aa0:	mov	r1, r6
     aa4:	mov	r2, r5
     aa8:	bl	0 <__flatcc_fb_scoped_symbol_name>
     aac:	ldr	r0, [r4, #204]	; 0xcc
     ab0:	mov	r1, r8
     ab4:	mov	r2, r5
     ab8:	mov	r3, r5
     abc:	str	r5, [sp]
     ac0:	bl	0 <fprintf>
     ac4:	ldr	r0, [r4, #204]	; 0xcc
     ac8:	mov	r1, r9
     acc:	mov	r2, r4
     ad0:	mov	r3, r4
     ad4:	str	r5, [sp]
     ad8:	str	r5, [sp, #4]
     adc:	bl	0 <fprintf>
     ae0:	mov	r7, #1
     ae4:	ldr	r6, [r6]
     ae8:	cmp	r6, #0
     aec:	bne	a90 <__flatcc_fb_gen_c_builder+0x1e0>
     af0:	cmp	r7, #0
     af4:	beq	b04 <__flatcc_fb_gen_c_builder+0x254>
     af8:	ldr	r1, [sl]
     afc:	mov	r0, #10
     b00:	bl	0 <fputc>
     b04:	ldr	r7, [r4, #208]	; 0xd0
     b08:	str	sl, [sp, #64]	; 0x40
     b0c:	ldr	r6, [r7, #44]	; 0x2c
     b10:	cmp	r6, #0
     b14:	beq	f58 <__flatcc_fb_gen_c_builder+0x6a8>
     b18:	str	r4, [sp, #60]	; 0x3c
     b1c:	mov	r9, #1
     b20:	ldr	r4, [sp, #60]	; 0x3c
     b24:	mov	r0, r5
     b28:	mov	r1, #0
     b2c:	mov	r2, #220	; 0xdc
     b30:	bl	0 <memset>
     b34:	ldrh	r0, [r6, #8]
     b38:	cmp	r0, #1
     b3c:	bne	1e94 <__flatcc_fb_gen_c_builder+0x15e4>
     b40:	ldr	r0, [r6, #12]
     b44:	mov	r1, r6
     b48:	mov	r2, r5
     b4c:	bl	0 <__flatcc_fb_scoped_symbol_name>
     b50:	mov	r0, r6
     b54:	bl	20e4 <get_total_struct_field_count>
     b58:	mov	r7, r0
     b5c:	ldr	r0, [r4, #204]	; 0xcc
     b60:	movw	r1, #0
     b64:	mov	r2, r5
     b68:	movt	r1, #0
     b6c:	bl	0 <fprintf>
     b70:	mov	r0, r4
     b74:	mov	r1, r6
     b78:	mov	r2, #0
     b7c:	mov	r3, r7
     b80:	str	r9, [sp]
     b84:	bl	2148 <gen_builder_struct_args>
     b88:	ldr	r0, [r4, #204]	; 0xcc
     b8c:	movw	r1, #0
     b90:	mov	r2, r5
     b94:	movt	r1, #0
     b98:	bl	0 <fprintf>
     b9c:	mov	r0, r6
     ba0:	bl	20e4 <get_total_struct_field_count>
     ba4:	cmp	r0, #1
     ba8:	blt	c48 <__flatcc_fb_gen_c_builder+0x398>
     bac:	mov	r8, r0
     bb0:	mov	r9, #0
     bb4:	mov	sl, r7
     bb8:	cmp	r7, #0
     bbc:	beq	c20 <__flatcc_fb_gen_c_builder+0x370>
     bc0:	cmp	r9, #0
     bc4:	beq	bfc <__flatcc_fb_gen_c_builder+0x34c>
     bc8:	ldr	r0, [sp, #64]	; 0x40
     bcc:	tst	r9, #3
     bd0:	ldr	r3, [r0]
     bd4:	bne	c0c <__flatcc_fb_gen_c_builder+0x35c>
     bd8:	cmp	sl, #2
     bdc:	ble	c0c <__flatcc_fb_gen_c_builder+0x35c>
     be0:	movw	r1, #0
     be4:	movw	r2, #0
     be8:	mov	r0, r3
     bec:	movt	r1, #0
     bf0:	movt	r2, #0
     bf4:	bl	0 <fprintf>
     bf8:	b	c20 <__flatcc_fb_gen_c_builder+0x370>
     bfc:	ldr	r0, [sp, #64]	; 0x40
     c00:	cmp	r7, #5
     c04:	ldr	r3, [r0]
     c08:	bge	be0 <__flatcc_fb_gen_c_builder+0x330>
     c0c:	movw	r0, #0
     c10:	mov	r1, #2
     c14:	mov	r2, #1
     c18:	movt	r0, #0
     c1c:	bl	0 <fwrite>
     c20:	ldr	r0, [sp, #64]	; 0x40
     c24:	movw	r1, #0
     c28:	mov	r2, r9
     c2c:	movt	r1, #0
     c30:	ldr	r0, [r0]
     c34:	bl	0 <fprintf>
     c38:	add	r9, r9, #1
     c3c:	sub	sl, sl, #1
     c40:	cmp	r8, r9
     c44:	bne	bb8 <__flatcc_fb_gen_c_builder+0x308>
     c48:	ldr	r1, [r4, #204]	; 0xcc
     c4c:	mov	r0, #10
     c50:	bl	0 <fputc>
     c54:	ldr	r0, [r4, #204]	; 0xcc
     c58:	movw	r1, #0
     c5c:	mov	r2, r5
     c60:	mov	r3, r5
     c64:	str	r5, [sp]
     c68:	movt	r1, #0
     c6c:	bl	0 <fprintf>
     c70:	mov	r8, #0
     c74:	mov	r0, r4
     c78:	mov	r1, r6
     c7c:	mov	r2, #0
     c80:	mov	r3, r7
     c84:	str	r8, [sp]
     c88:	bl	2148 <gen_builder_struct_args>
     c8c:	ldr	r3, [r4, #204]	; 0xcc
     c90:	movw	sl, #0
     c94:	mov	r1, #4
     c98:	mov	r2, #1
     c9c:	movt	sl, #0
     ca0:	mov	r0, sl
     ca4:	bl	0 <fwrite>
     ca8:	mov	r0, r4
     cac:	mov	r1, r6
     cb0:	mov	r2, r7
     cb4:	mov	r3, #0
     cb8:	str	r8, [sp]
     cbc:	bl	23d8 <gen_builder_struct_field_assign>
     cc0:	ldr	r3, [r4, #204]	; 0xcc
     cc4:	movw	sl, #0
     cc8:	mov	r1, #12
     ccc:	mov	r2, #1
     cd0:	movt	sl, #0
     cd4:	mov	r0, sl
     cd8:	bl	0 <fwrite>
     cdc:	ldr	r0, [r4, #204]	; 0xcc
     ce0:	movw	r1, #0
     ce4:	mov	r2, r5
     ce8:	mov	r3, r5
     cec:	str	r5, [sp]
     cf0:	str	r5, [sp, #4]
     cf4:	movt	r1, #0
     cf8:	bl	0 <fprintf>
     cfc:	ldr	r3, [r4, #204]	; 0xcc
     d00:	movw	r0, #0
     d04:	mov	r1, #2
     d08:	mov	r2, #1
     d0c:	movt	r0, #0
     d10:	bl	0 <fwrite>
     d14:	mov	r9, #1
     d18:	mov	r0, r4
     d1c:	mov	r1, r6
     d20:	mov	r2, r7
     d24:	mov	r3, #0
     d28:	str	r9, [sp]
     d2c:	bl	23d8 <gen_builder_struct_field_assign>
     d30:	ldr	r3, [r4, #204]	; 0xcc
     d34:	mov	r0, sl
     d38:	mov	r1, #12
     d3c:	mov	r2, #1
     d40:	bl	0 <fwrite>
     d44:	ldr	r0, [r4, #204]	; 0xcc
     d48:	movw	r1, #0
     d4c:	mov	r2, r5
     d50:	mov	r3, r5
     d54:	str	r5, [sp]
     d58:	movt	r1, #0
     d5c:	bl	0 <fprintf>
     d60:	mov	r0, r4
     d64:	mov	r1, r6
     d68:	mov	r2, #0
     d6c:	mov	r3, r7
     d70:	str	r8, [sp]
     d74:	bl	2148 <gen_builder_struct_args>
     d78:	ldr	r3, [r4, #204]	; 0xcc
     d7c:	movw	r0, #0
     d80:	mov	r1, #4
     d84:	mov	r2, #1
     d88:	movt	r0, #0
     d8c:	bl	0 <fwrite>
     d90:	mov	r0, r4
     d94:	mov	r1, r6
     d98:	mov	r2, r7
     d9c:	mov	r3, #2
     da0:	str	r8, [sp]
     da4:	bl	23d8 <gen_builder_struct_field_assign>
     da8:	ldr	r3, [r4, #204]	; 0xcc
     dac:	mov	r0, sl
     db0:	mov	r1, #12
     db4:	mov	r2, #1
     db8:	bl	0 <fwrite>
     dbc:	ldr	r0, [r4, #204]	; 0xcc
     dc0:	movw	r1, #0
     dc4:	mov	r2, r5
     dc8:	mov	r3, r5
     dcc:	str	r5, [sp]
     dd0:	str	r5, [sp, #4]
     dd4:	movt	r1, #0
     dd8:	bl	0 <fprintf>
     ddc:	ldr	r3, [r4, #204]	; 0xcc
     de0:	movw	r0, #0
     de4:	mov	r1, #2
     de8:	mov	r2, #1
     dec:	movt	r0, #0
     df0:	bl	0 <fwrite>
     df4:	mov	r0, r4
     df8:	mov	r1, r6
     dfc:	mov	r2, r7
     e00:	mov	r3, #2
     e04:	str	r9, [sp]
     e08:	bl	23d8 <gen_builder_struct_field_assign>
     e0c:	ldr	r3, [r4, #204]	; 0xcc
     e10:	mov	r0, sl
     e14:	mov	r1, #12
     e18:	mov	r2, #1
     e1c:	bl	0 <fwrite>
     e20:	ldr	r0, [r4, #204]	; 0xcc
     e24:	movw	r1, #0
     e28:	mov	r2, r5
     e2c:	mov	r3, r5
     e30:	str	r5, [sp]
     e34:	movt	r1, #0
     e38:	bl	0 <fprintf>
     e3c:	mov	r0, r4
     e40:	mov	r1, r6
     e44:	mov	r2, #0
     e48:	mov	r3, r7
     e4c:	str	r8, [sp]
     e50:	bl	2148 <gen_builder_struct_args>
     e54:	ldr	r3, [r4, #204]	; 0xcc
     e58:	movw	r0, #0
     e5c:	mov	r1, #4
     e60:	mov	r2, #1
     e64:	movt	r0, #0
     e68:	bl	0 <fwrite>
     e6c:	mov	r0, r4
     e70:	mov	r1, r6
     e74:	mov	r2, r7
     e78:	mov	r3, #1
     e7c:	str	r8, [sp]
     e80:	bl	23d8 <gen_builder_struct_field_assign>
     e84:	ldr	r3, [r4, #204]	; 0xcc
     e88:	mov	r0, sl
     e8c:	mov	r1, #12
     e90:	mov	r2, #1
     e94:	bl	0 <fwrite>
     e98:	ldr	r0, [r4, #204]	; 0xcc
     e9c:	movw	r1, #0
     ea0:	mov	r2, r5
     ea4:	mov	r3, r5
     ea8:	str	r5, [sp]
     eac:	str	r5, [sp, #4]
     eb0:	movt	r1, #0
     eb4:	bl	0 <fprintf>
     eb8:	ldr	r3, [r4, #204]	; 0xcc
     ebc:	movw	r0, #0
     ec0:	mov	r1, #2
     ec4:	mov	r2, #1
     ec8:	movt	r0, #0
     ecc:	bl	0 <fwrite>
     ed0:	mov	r0, r4
     ed4:	mov	r1, r6
     ed8:	mov	r2, r7
     edc:	mov	r3, #1
     ee0:	str	r9, [sp]
     ee4:	bl	23d8 <gen_builder_struct_field_assign>
     ee8:	ldr	r3, [r4, #204]	; 0xcc
     eec:	mov	r0, sl
     ef0:	mov	r1, #12
     ef4:	mov	r2, #1
     ef8:	bl	0 <fwrite>
     efc:	ldrh	r1, [r6, #104]	; 0x68
     f00:	ldrd	r2, [r6, #112]	; 0x70
     f04:	ldr	r0, [r4, #204]	; 0xcc
     f08:	str	r5, [sp, #20]
     f0c:	str	r5, [sp, #24]
     f10:	str	r5, [sp]
     f14:	str	r1, [sp, #16]
     f18:	movw	r1, #0
     f1c:	str	r2, [sp, #8]
     f20:	str	r3, [sp, #12]
     f24:	mov	r2, r4
     f28:	mov	r3, r4
     f2c:	movt	r1, #0
     f30:	bl	0 <fprintf>
     f34:	ldr	r1, [r4, #204]	; 0xcc
     f38:	mov	r0, #10
     f3c:	bl	0 <fputc>
     f40:	ldr	r6, [r6, #120]	; 0x78
     f44:	cmp	r6, #0
     f48:	bne	b24 <__flatcc_fb_gen_c_builder+0x274>
     f4c:	ldr	r4, [sp, #60]	; 0x3c
     f50:	ldr	sl, [sp, #64]	; 0x40
     f54:	ldr	r7, [r4, #208]	; 0xd0
     f58:	sub	r9, fp, #256	; 0x100
     f5c:	mov	r1, #0
     f60:	mov	r2, #220	; 0xdc
     f64:	mov	r5, #0
     f68:	mov	r0, r9
     f6c:	bl	0 <memset>
     f70:	ldr	r6, [r7, #40]	; 0x28
     f74:	cmp	r6, #0
     f78:	beq	fdc <__flatcc_fb_gen_c_builder+0x72c>
     f7c:	movw	r7, #0
     f80:	movt	r7, #0
     f84:	ldrh	r0, [r6, #8]
     f88:	cmp	r0, #4
     f8c:	bne	fbc <__flatcc_fb_gen_c_builder+0x70c>
     f90:	ldr	r0, [r6, #12]
     f94:	mov	r1, r6
     f98:	mov	r2, r9
     f9c:	bl	0 <__flatcc_fb_scoped_symbol_name>
     fa0:	ldr	r0, [r4, #204]	; 0xcc
     fa4:	mov	r1, r7
     fa8:	mov	r2, r4
     fac:	mov	r3, r9
     fb0:	stm	sp, {r4, r9}
     fb4:	bl	0 <fprintf>
     fb8:	mov	r5, #1
     fbc:	ldr	r6, [r6]
     fc0:	cmp	r6, #0
     fc4:	bne	f84 <__flatcc_fb_gen_c_builder+0x6d4>
     fc8:	cmp	r5, #0
     fcc:	beq	fdc <__flatcc_fb_gen_c_builder+0x72c>
     fd0:	ldr	r1, [sl]
     fd4:	mov	r0, #10
     fd8:	bl	0 <fputc>
     fdc:	ldr	r0, [r4, #208]	; 0xd0
     fe0:	ldr	r6, [r0, #40]	; 0x28
     fe4:	cmp	r6, #0
     fe8:	beq	1da0 <__flatcc_fb_gen_c_builder+0x14f0>
     fec:	movw	sl, #0
     ff0:	mov	r1, #0
     ff4:	mov	r7, #1
     ff8:	movt	sl, #0
     ffc:	ldrh	r0, [r6, #8]
    1000:	cmp	r0, #0
    1004:	bne	11bc <__flatcc_fb_gen_c_builder+0x90c>
    1008:	mov	r0, r9
    100c:	mov	r1, #0
    1010:	mov	r2, #220	; 0xdc
    1014:	mov	r8, #0
    1018:	bl	0 <memset>
    101c:	ldr	r0, [r6, #20]
    1020:	cmp	r0, #0
    1024:	beq	1044 <__flatcc_fb_gen_c_builder+0x794>
    1028:	mov	r8, #0
    102c:	ldrh	r1, [r0, #72]	; 0x48
    1030:	ldr	r0, [r0]
    1034:	bic	r1, r7, r1, lsr #2
    1038:	cmp	r0, #0
    103c:	add	r8, r8, r1
    1040:	bne	102c <__flatcc_fb_gen_c_builder+0x77c>
    1044:	ldr	r0, [r6, #12]
    1048:	mov	r1, r6
    104c:	mov	r2, r9
    1050:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1054:	ldr	r0, [r4, #204]	; 0xcc
    1058:	movw	r1, #0
    105c:	mov	r2, r4
    1060:	mov	r3, r9
    1064:	movt	r1, #0
    1068:	bl	0 <fprintf>
    106c:	ldr	r5, [r6, #20]
    1070:	cmp	r5, #0
    1074:	beq	114c <__flatcc_fb_gen_c_builder+0x89c>
    1078:	mov	r9, #0
    107c:	ldrh	r0, [r5, #72]	; 0x48
    1080:	and	r0, r0, #260	; 0x104
    1084:	cmp	r0, #256	; 0x100
    1088:	bne	1114 <__flatcc_fb_gen_c_builder+0x864>
    108c:	cmp	r9, #1
    1090:	blt	10d4 <__flatcc_fb_gen_c_builder+0x824>
    1094:	cmp	r8, #0
    1098:	beq	10fc <__flatcc_fb_gen_c_builder+0x84c>
    109c:	ldr	r0, [sp, #64]	; 0x40
    10a0:	tst	r9, #3
    10a4:	ldr	r3, [r0]
    10a8:	bne	10e8 <__flatcc_fb_gen_c_builder+0x838>
    10ac:	sub	r0, r8, r9
    10b0:	cmp	r0, #2
    10b4:	ble	10e8 <__flatcc_fb_gen_c_builder+0x838>
    10b8:	movw	r1, #0
    10bc:	movw	r2, #0
    10c0:	mov	r0, r3
    10c4:	movt	r1, #0
    10c8:	movt	r2, #0
    10cc:	bl	0 <fprintf>
    10d0:	b	10fc <__flatcc_fb_gen_c_builder+0x84c>
    10d4:	ldr	r0, [sp, #64]	; 0x40
    10d8:	ldr	r1, [r0]
    10dc:	mov	r0, #32
    10e0:	bl	0 <fputc>
    10e4:	b	10fc <__flatcc_fb_gen_c_builder+0x84c>
    10e8:	movw	r0, #0
    10ec:	mov	r1, #2
    10f0:	mov	r2, #1
    10f4:	movt	r0, #0
    10f8:	bl	0 <fwrite>
    10fc:	ldr	r0, [sp, #64]	; 0x40
    1100:	ldr	r2, [r5, #96]	; 0x60
    1104:	mov	r1, sl
    1108:	ldr	r0, [r0]
    110c:	bl	0 <fprintf>
    1110:	add	r9, r9, #1
    1114:	ldr	r5, [r5]
    1118:	cmp	r5, #0
    111c:	bne	107c <__flatcc_fb_gen_c_builder+0x7cc>
    1120:	ldr	r0, [sp, #64]	; 0x40
    1124:	cmp	r9, #1
    1128:	ldr	r3, [r0]
    112c:	blt	1158 <__flatcc_fb_gen_c_builder+0x8a8>
    1130:	movw	r0, #0
    1134:	mov	r1, #7
    1138:	mov	r2, #1
    113c:	movt	r0, #0
    1140:	bl	0 <fwrite>
    1144:	sub	r9, fp, #256	; 0x100
    1148:	b	1170 <__flatcc_fb_gen_c_builder+0x8c0>
    114c:	ldr	r0, [sp, #64]	; 0x40
    1150:	ldr	r3, [r0]
    1154:	b	115c <__flatcc_fb_gen_c_builder+0x8ac>
    1158:	sub	r9, fp, #256	; 0x100
    115c:	movw	r0, #0
    1160:	mov	r1, #6
    1164:	mov	r2, #1
    1168:	movt	r0, #0
    116c:	bl	0 <fwrite>
    1170:	mov	r0, r9
    1174:	mov	r1, #0
    1178:	mov	r2, #220	; 0xdc
    117c:	bl	0 <memset>
    1180:	ldr	r0, [r6, #12]
    1184:	mov	r1, r6
    1188:	mov	r2, r9
    118c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1190:	ldrd	r2, [r6, #96]	; 0x60
    1194:	ldr	r0, [r4, #204]	; 0xcc
    1198:	movw	r1, #0
    119c:	str	r9, [sp]
    11a0:	movt	r1, #0
    11a4:	str	r2, [sp, #8]
    11a8:	str	r3, [sp, #12]
    11ac:	mov	r2, r4
    11b0:	mov	r3, r4
    11b4:	bl	0 <fprintf>
    11b8:	mov	r1, #1
    11bc:	ldr	r6, [r6]
    11c0:	cmp	r6, #0
    11c4:	bne	ffc <__flatcc_fb_gen_c_builder+0x74c>
    11c8:	ldr	r0, [r4, #208]	; 0xd0
    11cc:	ldr	sl, [sp, #64]	; 0x40
    11d0:	str	r1, [sp, #60]	; 0x3c
    11d4:	ldr	r6, [r0, #40]	; 0x28
    11d8:	cmp	r6, #0
    11dc:	beq	15e4 <__flatcc_fb_gen_c_builder+0xd34>
    11e0:	add	r5, sp, #168	; 0xa8
    11e4:	mov	r8, #1
    11e8:	ldrh	r0, [r6, #8]
    11ec:	cmp	r0, #0
    11f0:	bne	15d8 <__flatcc_fb_gen_c_builder+0xd28>
    11f4:	mov	r0, r5
    11f8:	mov	r1, #0
    11fc:	mov	r2, #220	; 0xdc
    1200:	mov	r9, #0
    1204:	bl	0 <memset>
    1208:	ldr	r0, [r6, #12]
    120c:	mov	r1, r6
    1210:	mov	r2, r5
    1214:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1218:	ldr	r0, [r6, #20]
    121c:	cmp	r0, #0
    1220:	beq	1240 <__flatcc_fb_gen_c_builder+0x990>
    1224:	mov	r9, #0
    1228:	ldrh	r1, [r0, #72]	; 0x48
    122c:	ldr	r0, [r0]
    1230:	bic	r1, r8, r1, lsr #2
    1234:	cmp	r0, #0
    1238:	add	r9, r9, r1
    123c:	bne	1228 <__flatcc_fb_gen_c_builder+0x978>
    1240:	ldr	r0, [sl]
    1244:	movw	r1, #0
    1248:	mov	r2, r5
    124c:	movt	r1, #0
    1250:	bl	0 <fprintf>
    1254:	sub	r5, fp, #256	; 0x100
    1258:	mov	r1, #0
    125c:	mov	r2, #220	; 0xdc
    1260:	mov	r0, r5
    1264:	bl	0 <memset>
    1268:	ldr	r7, [r6, #20]
    126c:	cmp	r7, #0
    1270:	beq	14e8 <__flatcc_fb_gen_c_builder+0xc38>
    1274:	mov	sl, #0
    1278:	ldrb	r0, [r7, #72]	; 0x48
    127c:	tst	r0, #4
    1280:	bne	14dc <__flatcc_fb_gen_c_builder+0xc2c>
    1284:	cmp	r9, #0
    1288:	beq	12f0 <__flatcc_fb_gen_c_builder+0xa40>
    128c:	cmp	sl, #0
    1290:	beq	12cc <__flatcc_fb_gen_c_builder+0xa1c>
    1294:	ldr	r0, [sp, #64]	; 0x40
    1298:	tst	sl, #3
    129c:	ldr	r3, [r0]
    12a0:	bne	12dc <__flatcc_fb_gen_c_builder+0xa2c>
    12a4:	sub	r0, r9, sl
    12a8:	cmp	r0, #2
    12ac:	ble	12dc <__flatcc_fb_gen_c_builder+0xa2c>
    12b0:	movw	r1, #0
    12b4:	movw	r2, #0
    12b8:	mov	r0, r3
    12bc:	movt	r1, #0
    12c0:	movt	r2, #0
    12c4:	bl	0 <fprintf>
    12c8:	b	12f0 <__flatcc_fb_gen_c_builder+0xa40>
    12cc:	ldr	r0, [sp, #64]	; 0x40
    12d0:	cmp	r9, #5
    12d4:	ldr	r3, [r0]
    12d8:	bge	12b0 <__flatcc_fb_gen_c_builder+0xa00>
    12dc:	movw	r0, #0
    12e0:	mov	r1, #2
    12e4:	mov	r2, #1
    12e8:	movt	r0, #0
    12ec:	bl	0 <fwrite>
    12f0:	ldrh	r0, [r7, #24]
    12f4:	sub	r0, r0, #7
    12f8:	cmp	r0, #8
    12fc:	bhi	1df4 <__flatcc_fb_gen_c_builder+0x1544>
    1300:	add	r1, pc, #4
    1304:	add	sl, sl, #1
    1308:	ldr	pc, [r1, r0, lsl #2]
    130c:	.word	0x00001330
    1310:	.word	0x00001380
    1314:	.word	0x000013d0
    1318:	.word	0x0000136c
    131c:	.word	0x00001df4
    1320:	.word	0x00001df4
    1324:	.word	0x00001df4
    1328:	.word	0x00001430
    132c:	.word	0x000013ec
    1330:	ldr	r0, [r7, #16]
    1334:	sub	r1, r0, #1
    1338:	cmp	r1, #11
    133c:	bcs	1ff4 <__flatcc_fb_gen_c_builder+0x1744>
    1340:	ldrd	r2, [r7, #96]	; 0x60
    1344:	ldr	r0, [r4, #204]	; 0xcc
    1348:	stm	sp, {r2, r3}
    134c:	movw	r2, #0
    1350:	movt	r2, #0
    1354:	ldr	r3, [r2, r1, lsl #2]
    1358:	movw	r1, #0
    135c:	mov	r2, r4
    1360:	movt	r1, #0
    1364:	bl	0 <fprintf>
    1368:	b	14dc <__flatcc_fb_gen_c_builder+0xc2c>
    136c:	ldr	r0, [r4, #204]	; 0xcc
    1370:	ldrd	r2, [r7, #96]	; 0x60
    1374:	movw	r1, #0
    1378:	movt	r1, #0
    137c:	b	13e0 <__flatcc_fb_gen_c_builder+0xb30>
    1380:	ldr	r2, [r7, #16]
    1384:	sub	r1, r2, #1
    1388:	cmp	r1, #11
    138c:	bcs	1f04 <__flatcc_fb_gen_c_builder+0x1654>
    1390:	ldr	r0, [r4, #204]	; 0xcc
    1394:	ldr	r3, [r7, #96]	; 0x60
    1398:	ldr	r5, [r7, #100]	; 0x64
    139c:	cmp	r2, #5
    13a0:	movw	r2, #0
    13a4:	movt	r2, #0
    13a8:	moveq	r2, r4
    13ac:	stm	sp, {r3, r5}
    13b0:	movw	r3, #0
    13b4:	movt	r3, #0
    13b8:	ldr	r3, [r3, r1, lsl #2]
    13bc:	movw	r1, #0
    13c0:	movt	r1, #0
    13c4:	bl	0 <fprintf>
    13c8:	sub	r5, fp, #256	; 0x100
    13cc:	b	14dc <__flatcc_fb_gen_c_builder+0xc2c>
    13d0:	ldrd	r2, [r7, #96]	; 0x60
    13d4:	ldr	r0, [r4, #204]	; 0xcc
    13d8:	movw	r1, #0
    13dc:	movt	r1, #0
    13e0:	stm	sp, {r2, r3}
    13e4:	mov	r2, r4
    13e8:	b	14d8 <__flatcc_fb_gen_c_builder+0xc28>
    13ec:	ldr	r1, [r7, #16]
    13f0:	mov	r2, r5
    13f4:	ldr	r0, [r1, #12]
    13f8:	bl	0 <__flatcc_fb_scoped_symbol_name>
    13fc:	ldr	r0, [r7, #16]
    1400:	ldrh	r0, [r0, #8]
    1404:	cmp	r0, #2
    1408:	bcc	141c <__flatcc_fb_gen_c_builder+0xb6c>
    140c:	cmp	r0, #4
    1410:	beq	1480 <__flatcc_fb_gen_c_builder+0xbd0>
    1414:	cmp	r0, #3
    1418:	bne	2044 <__flatcc_fb_gen_c_builder+0x1794>
    141c:	ldr	r0, [sp, #64]	; 0x40
    1420:	ldrd	r2, [r7, #96]	; 0x60
    1424:	movw	r1, #0
    1428:	movt	r1, #0
    142c:	b	14cc <__flatcc_fb_gen_c_builder+0xc1c>
    1430:	ldr	r1, [r7, #16]
    1434:	mov	r2, r5
    1438:	ldr	r0, [r1, #12]
    143c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1440:	ldr	r0, [r7, #16]
    1444:	ldrh	r0, [r0, #8]
    1448:	cmp	r0, #4
    144c:	bhi	1eb4 <__flatcc_fb_gen_c_builder+0x1604>
    1450:	add	r1, pc, #0
    1454:	ldr	pc, [r1, r0, lsl #2]
    1458:	.word	0x0000146c
    145c:	.word	0x000014a8
    1460:	.word	0x00001eb4
    1464:	.word	0x000014bc
    1468:	.word	0x00001494
    146c:	ldr	r0, [sp, #64]	; 0x40
    1470:	ldrd	r2, [r7, #96]	; 0x60
    1474:	movw	r1, #0
    1478:	movt	r1, #0
    147c:	b	14cc <__flatcc_fb_gen_c_builder+0xc1c>
    1480:	ldr	r0, [sp, #64]	; 0x40
    1484:	ldrd	r2, [r7, #96]	; 0x60
    1488:	movw	r1, #0
    148c:	movt	r1, #0
    1490:	b	14cc <__flatcc_fb_gen_c_builder+0xc1c>
    1494:	ldr	r0, [sp, #64]	; 0x40
    1498:	ldrd	r2, [r7, #96]	; 0x60
    149c:	movw	r1, #0
    14a0:	movt	r1, #0
    14a4:	b	14cc <__flatcc_fb_gen_c_builder+0xc1c>
    14a8:	ldr	r0, [sp, #64]	; 0x40
    14ac:	ldrd	r2, [r7, #96]	; 0x60
    14b0:	movw	r1, #0
    14b4:	movt	r1, #0
    14b8:	b	14cc <__flatcc_fb_gen_c_builder+0xc1c>
    14bc:	ldr	r0, [sp, #64]	; 0x40
    14c0:	ldrd	r2, [r7, #96]	; 0x60
    14c4:	movw	r1, #0
    14c8:	movt	r1, #0
    14cc:	ldr	r0, [r0]
    14d0:	stm	sp, {r2, r3}
    14d4:	mov	r2, r5
    14d8:	bl	0 <fprintf>
    14dc:	ldr	r7, [r7]
    14e0:	cmp	r7, #0
    14e4:	bne	1278 <__flatcc_fb_gen_c_builder+0x9c8>
    14e8:	ldr	sl, [sp, #64]	; 0x40
    14ec:	movw	r1, #0
    14f0:	add	r2, sp, #168	; 0xa8
    14f4:	movt	r1, #0
    14f8:	ldr	r0, [sl]
    14fc:	bl	0 <fprintf>
    1500:	ldr	r7, [r6, #20]
    1504:	cmp	r7, #0
    1508:	beq	15a4 <__flatcc_fb_gen_c_builder+0xcf4>
    150c:	mov	r5, #0
    1510:	ldrb	r0, [r7, #72]	; 0x48
    1514:	tst	r0, #4
    1518:	bne	1598 <__flatcc_fb_gen_c_builder+0xce8>
    151c:	cmp	r9, #0
    1520:	beq	1580 <__flatcc_fb_gen_c_builder+0xcd0>
    1524:	cmp	r5, #0
    1528:	beq	1560 <__flatcc_fb_gen_c_builder+0xcb0>
    152c:	ldr	r3, [sl]
    1530:	tst	r5, #3
    1534:	bne	156c <__flatcc_fb_gen_c_builder+0xcbc>
    1538:	sub	r0, r9, r5
    153c:	cmp	r0, #2
    1540:	ble	156c <__flatcc_fb_gen_c_builder+0xcbc>
    1544:	movw	r1, #0
    1548:	movw	r2, #0
    154c:	mov	r0, r3
    1550:	movt	r1, #0
    1554:	movt	r2, #0
    1558:	bl	0 <fprintf>
    155c:	b	1580 <__flatcc_fb_gen_c_builder+0xcd0>
    1560:	ldr	r3, [sl]
    1564:	cmp	r9, #5
    1568:	bge	1544 <__flatcc_fb_gen_c_builder+0xc94>
    156c:	movw	r0, #0
    1570:	mov	r1, #2
    1574:	mov	r2, #1
    1578:	movt	r0, #0
    157c:	bl	0 <fwrite>
    1580:	ldrd	r2, [r7, #96]	; 0x60
    1584:	ldr	r0, [sl]
    1588:	movw	r1, #0
    158c:	movt	r1, #0
    1590:	bl	0 <fprintf>
    1594:	add	r5, r5, #1
    1598:	ldr	r7, [r7]
    159c:	cmp	r7, #0
    15a0:	bne	1510 <__flatcc_fb_gen_c_builder+0xc60>
    15a4:	ldr	r1, [r4, #204]	; 0xcc
    15a8:	mov	r0, #10
    15ac:	bl	0 <fputc>
    15b0:	ldr	r0, [r4, #204]	; 0xcc
    15b4:	add	r5, sp, #168	; 0xa8
    15b8:	movw	r1, #0
    15bc:	str	r4, [sp]
    15c0:	movt	r1, #0
    15c4:	mov	r2, r5
    15c8:	mov	r3, r5
    15cc:	str	r5, [sp, #4]
    15d0:	bl	0 <fprintf>
    15d4:	sub	r9, fp, #256	; 0x100
    15d8:	ldr	r6, [r6]
    15dc:	cmp	r6, #0
    15e0:	bne	11e8 <__flatcc_fb_gen_c_builder+0x938>
    15e4:	ldr	r0, [sp, #60]	; 0x3c
    15e8:	cmp	r0, #0
    15ec:	beq	1da0 <__flatcc_fb_gen_c_builder+0x14f0>
    15f0:	ldr	r1, [r4, #204]	; 0xcc
    15f4:	mov	r0, #10
    15f8:	bl	0 <fputc>
    15fc:	mov	r0, r4
    1600:	bl	2888 <gen_unions>
    1604:	ldr	r0, [r4, #208]	; 0xd0
    1608:	ldr	r7, [r0, #40]	; 0x28
    160c:	cmp	r7, #0
    1610:	beq	1da8 <__flatcc_fb_gen_c_builder+0x14f8>
    1614:	ldrh	r0, [r7, #8]
    1618:	cmp	r0, #0
    161c:	bne	1d90 <__flatcc_fb_gen_c_builder+0x14e0>
    1620:	mov	r0, r9
    1624:	mov	r1, #0
    1628:	mov	r2, #220	; 0xdc
    162c:	bl	0 <memset>
    1630:	add	r0, sp, #168	; 0xa8
    1634:	mov	r1, #0
    1638:	mov	r2, #220	; 0xdc
    163c:	bl	0 <memset>
    1640:	ldr	r0, [r7, #12]
    1644:	mov	r1, r7
    1648:	mov	r2, r9
    164c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1650:	str	r7, [sp, #60]	; 0x3c
    1654:	ldr	r7, [r7, #20]
    1658:	cmp	r7, #0
    165c:	bne	1a24 <__flatcc_fb_gen_c_builder+0x1174>
    1660:	b	1b6c <__flatcc_fb_gen_c_builder+0x12bc>
    1664:	ldr	r0, [r4, #204]	; 0xcc
    1668:	ldrd	r2, [r7, #96]	; 0x60
    166c:	movw	r1, #0
    1670:	movt	r1, #0
    1674:	b	1734 <__flatcc_fb_gen_c_builder+0xe84>
    1678:	ldr	r9, [r7, #16]
    167c:	sub	r5, r9, #1
    1680:	cmp	r5, #11
    1684:	bcs	1f04 <__flatcc_fb_gen_c_builder+0x1654>
    1688:	add	r1, r7, #48	; 0x30
    168c:	mov	r0, r9
    1690:	add	r2, sp, #68	; 0x44
    1694:	bl	2a58 <print_literal>
    1698:	add	lr, r7, #88	; 0x58
    169c:	cmp	r9, #5
    16a0:	mov	r6, r4
    16a4:	sub	r9, fp, #256	; 0x100
    16a8:	ldm	lr, {r1, r2, ip, lr}
    16ac:	ldr	r0, [r4, #204]	; 0xcc
    16b0:	ldrh	r3, [r7, #74]	; 0x4a
    16b4:	add	r4, sp, #68	; 0x44
    16b8:	str	r4, [sp, #52]	; 0x34
    16bc:	mov	r4, r6
    16c0:	str	r1, [sp, #40]	; 0x28
    16c4:	movw	r1, #0
    16c8:	str	r2, [sp, #44]	; 0x2c
    16cc:	str	r3, [sp, #48]	; 0x30
    16d0:	mov	r2, r6
    16d4:	movt	r1, #0
    16d8:	ldr	r1, [r1, r5, lsl #2]
    16dc:	str	r1, [sp, #36]	; 0x24
    16e0:	movw	r1, #0
    16e4:	movt	r1, #0
    16e8:	moveq	r1, r6
    16ec:	str	r1, [sp, #32]
    16f0:	movw	r1, #0
    16f4:	stm	sp, {ip, lr}
    16f8:	str	r6, [sp, #8]
    16fc:	str	r9, [sp, #12]
    1700:	str	sl, [sp, #16]
    1704:	str	r8, [sp, #20]
    1708:	str	r6, [sp, #24]
    170c:	movt	r1, #0
    1710:	ldr	r1, [r1, r5, lsl #2]
    1714:	str	r1, [sp, #28]
    1718:	movw	r1, #0
    171c:	movt	r1, #0
    1720:	b	1740 <__flatcc_fb_gen_c_builder+0xe90>
    1724:	ldrd	r2, [r7, #96]	; 0x60
    1728:	ldr	r0, [r4, #204]	; 0xcc
    172c:	movw	r1, #0
    1730:	movt	r1, #0
    1734:	stm	sp, {r2, r3, r4, r9, sl}
    1738:	str	r8, [sp, #20]
    173c:	mov	r2, r4
    1740:	bl	0 <fprintf>
    1744:	ldr	r7, [r7]
    1748:	cmp	r7, #0
    174c:	bne	1a24 <__flatcc_fb_gen_c_builder+0x1174>
    1750:	b	1b6c <__flatcc_fb_gen_c_builder+0x12bc>
    1754:	ldr	r1, [r7, #16]
    1758:	add	r2, sp, #168	; 0xa8
    175c:	ldr	r0, [r1, #12]
    1760:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1764:	ldr	r0, [r7, #16]
    1768:	ldrh	r1, [r0, #8]
    176c:	cmp	r1, #4
    1770:	bhi	1f54 <__flatcc_fb_gen_c_builder+0x16a4>
    1774:	add	r2, pc, #0
    1778:	ldr	pc, [r2, r1, lsl #2]
    177c:	.word	0x00001790
    1780:	.word	0x00001918
    1784:	.word	0x00001f54
    1788:	.word	0x000019a4
    178c:	.word	0x00001884
    1790:	ldrb	r0, [r0, #10]
    1794:	tst	r0, #8
    1798:	beq	17b8 <__flatcc_fb_gen_c_builder+0xf08>
    179c:	ldr	r0, [sp, #64]	; 0x40
    17a0:	mov	r1, #32
    17a4:	mov	r2, #1
    17a8:	ldr	r3, [r0]
    17ac:	movw	r0, #0
    17b0:	movt	r0, #0
    17b4:	bl	0 <fwrite>
    17b8:	ldrd	r2, [r7, #96]	; 0x60
    17bc:	ldr	r0, [r4, #204]	; 0xcc
    17c0:	add	r1, sp, #168	; 0xa8
    17c4:	stm	sp, {r2, r3, r4, r9, sl}
    17c8:	str	r1, [sp, #24]
    17cc:	movw	r1, #0
    17d0:	str	r8, [sp, #20]
    17d4:	movt	r1, #0
    17d8:	b	173c <__flatcc_fb_gen_c_builder+0xe8c>
    17dc:	ldr	r1, [r7, #16]
    17e0:	add	r2, sp, #168	; 0xa8
    17e4:	ldr	r0, [r1, #12]
    17e8:	bl	0 <__flatcc_fb_scoped_symbol_name>
    17ec:	ldr	r0, [r7, #16]
    17f0:	ldrh	r1, [r0, #8]
    17f4:	cmp	r1, #4
    17f8:	bhi	1fa4 <__flatcc_fb_gen_c_builder+0x16f4>
    17fc:	add	r2, pc, #0
    1800:	ldr	pc, [r2, r1, lsl #2]
    1804:	.word	0x00001818
    1808:	.word	0x00001968
    180c:	.word	0x00001fa4
    1810:	.word	0x000019cc
    1814:	.word	0x000018bc
    1818:	ldrd	r2, [r7, #96]	; 0x60
    181c:	ldr	r0, [r4, #204]	; 0xcc
    1820:	add	r1, sp, #168	; 0xa8
    1824:	stm	sp, {r2, r3, r4, r9, sl}
    1828:	str	r1, [sp, #24]
    182c:	movw	r1, #0
    1830:	str	r8, [sp, #20]
    1834:	movt	r1, #0
    1838:	b	173c <__flatcc_fb_gen_c_builder+0xe8c>
    183c:	ldr	r0, [r1, #12]
    1840:	add	r5, sp, #168	; 0xa8
    1844:	mov	r2, r5
    1848:	bl	0 <__flatcc_fb_scoped_symbol_name>
    184c:	ldr	r1, [r7, #104]	; 0x68
    1850:	ldr	r0, [r4, #204]	; 0xcc
    1854:	ldrh	r1, [r1, #104]	; 0x68
    1858:	stm	sp, {r9, sl}
    185c:	str	r8, [sp, #8]
    1860:	str	r5, [sp, #12]
    1864:	str	r5, [sp, #20]
    1868:	str	r5, [sp, #24]
    186c:	str	r1, [sp, #16]
    1870:	movw	r1, #0
    1874:	movt	r1, #0
    1878:	mov	r2, r4
    187c:	mov	r3, r4
    1880:	b	1b5c <__flatcc_fb_gen_c_builder+0x12ac>
    1884:	ldrd	r2, [r7, #96]	; 0x60
    1888:	ldr	r0, [r4, #204]	; 0xcc
    188c:	add	r1, sp, #168	; 0xa8
    1890:	stm	sp, {r2, r3, r4, r9, sl}
    1894:	str	r1, [sp, #24]
    1898:	movw	r1, #0
    189c:	mov	r2, r4
    18a0:	str	r8, [sp, #20]
    18a4:	movt	r1, #0
    18a8:	bl	0 <fprintf>
    18ac:	ldr	r0, [r7, #16]
    18b0:	str	r0, [sp]
    18b4:	mov	r0, #1
    18b8:	b	18f0 <__flatcc_fb_gen_c_builder+0x1040>
    18bc:	ldrd	r2, [r7, #96]	; 0x60
    18c0:	ldr	r0, [r4, #204]	; 0xcc
    18c4:	add	r1, sp, #168	; 0xa8
    18c8:	stm	sp, {r2, r3, r4, r9, sl}
    18cc:	str	r1, [sp, #24]
    18d0:	movw	r1, #0
    18d4:	mov	r2, r4
    18d8:	str	r8, [sp, #20]
    18dc:	movt	r1, #0
    18e0:	bl	0 <fprintf>
    18e4:	ldr	r0, [r7, #16]
    18e8:	str	r0, [sp]
    18ec:	mov	r0, #0
    18f0:	str	r0, [sp, #4]
    18f4:	mov	r0, r4
    18f8:	mov	r1, r9
    18fc:	mov	r2, sl
    1900:	mov	r3, r8
    1904:	bl	2bfc <gen_union_fields>
    1908:	ldr	r7, [r7]
    190c:	cmp	r7, #0
    1910:	bne	1a24 <__flatcc_fb_gen_c_builder+0x1174>
    1914:	b	1b6c <__flatcc_fb_gen_c_builder+0x12bc>
    1918:	ldrb	r0, [r0, #10]
    191c:	tst	r0, #8
    1920:	beq	1940 <__flatcc_fb_gen_c_builder+0x1090>
    1924:	ldr	r0, [sp, #64]	; 0x40
    1928:	mov	r1, #32
    192c:	mov	r2, #1
    1930:	ldr	r3, [r0]
    1934:	movw	r0, #0
    1938:	movt	r0, #0
    193c:	bl	0 <fwrite>
    1940:	ldrd	r2, [r7, #96]	; 0x60
    1944:	ldr	r0, [r4, #204]	; 0xcc
    1948:	add	r1, sp, #168	; 0xa8
    194c:	stm	sp, {r2, r3, r4, r9, sl}
    1950:	str	r1, [sp, #24]
    1954:	str	r1, [sp, #28]
    1958:	movw	r1, #0
    195c:	str	r8, [sp, #20]
    1960:	movt	r1, #0
    1964:	b	173c <__flatcc_fb_gen_c_builder+0xe8c>
    1968:	add	r6, r7, #88	; 0x58
    196c:	ldr	r0, [r4, #204]	; 0xcc
    1970:	add	ip, sp, #32
    1974:	ldm	r6, {r1, r2, r3, r6}
    1978:	ldrh	r5, [r7, #74]	; 0x4a
    197c:	stm	ip, {r1, r2, r5}
    1980:	add	r1, sp, #8
    1984:	stm	sp, {r3, r6}
    1988:	stm	r1, {r4, r9, sl}
    198c:	add	r1, sp, #168	; 0xa8
    1990:	str	r8, [sp, #20]
    1994:	str	r1, [sp, #24]
    1998:	movw	r1, #0
    199c:	movt	r1, #0
    19a0:	b	173c <__flatcc_fb_gen_c_builder+0xe8c>
    19a4:	ldrd	r2, [r7, #96]	; 0x60
    19a8:	ldr	r0, [r4, #204]	; 0xcc
    19ac:	add	r1, sp, #168	; 0xa8
    19b0:	stm	sp, {r2, r3, r4, r9, sl}
    19b4:	str	r1, [sp, #24]
    19b8:	str	r1, [sp, #28]
    19bc:	movw	r1, #0
    19c0:	str	r8, [sp, #20]
    19c4:	movt	r1, #0
    19c8:	b	173c <__flatcc_fb_gen_c_builder+0xe8c>
    19cc:	ldr	r0, [r0, #40]	; 0x28
    19d0:	add	r1, r7, #48	; 0x30
    19d4:	add	r2, sp, #68	; 0x44
    19d8:	bl	2a58 <print_literal>
    19dc:	add	r6, r7, #88	; 0x58
    19e0:	add	ip, sp, #32
    19e4:	ldm	r6, {r1, r2, r3, r6}
    19e8:	ldrh	r5, [r7, #74]	; 0x4a
    19ec:	ldr	r0, [r4, #204]	; 0xcc
    19f0:	stm	ip, {r1, r2, r5}
    19f4:	add	r1, sp, #68	; 0x44
    19f8:	str	r1, [sp, #44]	; 0x2c
    19fc:	add	r1, sp, #8
    1a00:	stm	sp, {r3, r6}
    1a04:	stm	r1, {r4, r9, sl}
    1a08:	add	r1, sp, #168	; 0xa8
    1a0c:	str	r8, [sp, #20]
    1a10:	str	r1, [sp, #24]
    1a14:	str	r1, [sp, #28]
    1a18:	movw	r1, #0
    1a1c:	movt	r1, #0
    1a20:	b	173c <__flatcc_fb_gen_c_builder+0xe8c>
    1a24:	ldr	r0, [r7, #4]
    1a28:	ldm	r0, {r8, sl}
    1a2c:	ldrb	r0, [r7, #72]	; 0x48
    1a30:	tst	r0, #4
    1a34:	bne	1b40 <__flatcc_fb_gen_c_builder+0x1290>
    1a38:	ldrh	r0, [r7, #24]
    1a3c:	sub	r0, r0, #7
    1a40:	cmp	r0, #8
    1a44:	bhi	1e44 <__flatcc_fb_gen_c_builder+0x1594>
    1a48:	add	r1, pc, #0
    1a4c:	ldr	pc, [r1, r0, lsl #2]
    1a50:	.word	0x00001a74
    1a54:	.word	0x00001678
    1a58:	.word	0x00001724
    1a5c:	.word	0x00001664
    1a60:	.word	0x00001e44
    1a64:	.word	0x00001e44
    1a68:	.word	0x00001e44
    1a6c:	.word	0x000017dc
    1a70:	.word	0x00001754
    1a74:	ldr	r2, [r7, #16]
    1a78:	sub	r1, r2, #1
    1a7c:	cmp	r1, #11
    1a80:	bcs	1f04 <__flatcc_fb_gen_c_builder+0x1654>
    1a84:	cmp	r2, #5
    1a88:	movw	r2, #0
    1a8c:	movw	r0, #0
    1a90:	movt	r2, #0
    1a94:	movt	r0, #0
    1a98:	moveq	r2, r4
    1a9c:	ldr	r3, [r0, r1, lsl #2]
    1aa0:	ldr	r0, [r4, #204]	; 0xcc
    1aa4:	ldr	r6, [r7, #96]	; 0x60
    1aa8:	ldr	r5, [r7, #100]	; 0x64
    1aac:	str	r2, [sp, #32]
    1ab0:	movw	r2, #0
    1ab4:	movt	r2, #0
    1ab8:	ldr	r1, [r2, r1, lsl #2]
    1abc:	add	r2, sp, #8
    1ac0:	str	r3, [sp, #36]	; 0x24
    1ac4:	str	r6, [sp]
    1ac8:	str	r5, [sp, #4]
    1acc:	stm	r2, {r4, r9, sl}
    1ad0:	mov	r2, r4
    1ad4:	str	r8, [sp, #20]
    1ad8:	str	r4, [sp, #24]
    1adc:	str	r1, [sp, #28]
    1ae0:	movw	r1, #0
    1ae4:	movt	r1, #0
    1ae8:	bl	0 <fprintf>
    1aec:	ldr	r1, [r7, #104]	; 0x68
    1af0:	cmp	r1, #0
    1af4:	beq	1b60 <__flatcc_fb_gen_c_builder+0x12b0>
    1af8:	ldrh	r0, [r1, #8]
    1afc:	cmp	r0, #1
    1b00:	beq	183c <__flatcc_fb_gen_c_builder+0xf8c>
    1b04:	cmp	r0, #0
    1b08:	bne	2094 <__flatcc_fb_gen_c_builder+0x17e4>
    1b0c:	ldr	r0, [r1, #12]
    1b10:	add	r5, sp, #168	; 0xa8
    1b14:	mov	r2, r5
    1b18:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1b1c:	ldr	r0, [r4, #204]	; 0xcc
    1b20:	movw	r1, #0
    1b24:	stm	sp, {r9, sl}
    1b28:	str	r8, [sp, #8]
    1b2c:	str	r5, [sp, #12]
    1b30:	str	r5, [sp, #16]
    1b34:	str	r5, [sp, #20]
    1b38:	movt	r1, #0
    1b3c:	b	1878 <__flatcc_fb_gen_c_builder+0xfc8>
    1b40:	ldr	r0, [sp, #64]	; 0x40
    1b44:	movw	r1, #0
    1b48:	mov	r2, r9
    1b4c:	mov	r3, sl
    1b50:	movt	r1, #0
    1b54:	ldr	r0, [r0]
    1b58:	str	r8, [sp]
    1b5c:	bl	0 <fprintf>
    1b60:	ldr	r7, [r7]
    1b64:	cmp	r7, #0
    1b68:	bne	1a24 <__flatcc_fb_gen_c_builder+0x1174>
    1b6c:	ldr	r1, [r4, #204]	; 0xcc
    1b70:	mov	r0, #10
    1b74:	bl	0 <fputc>
    1b78:	ldr	r7, [sp, #60]	; 0x3c
    1b7c:	mov	r0, r9
    1b80:	mov	r1, #0
    1b84:	mov	r2, #220	; 0xdc
    1b88:	ldrh	r6, [r7, #92]	; 0x5c
    1b8c:	bl	0 <memset>
    1b90:	ldr	r0, [r7, #12]
    1b94:	mov	r1, r7
    1b98:	mov	r2, r9
    1b9c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1ba0:	ldr	r0, [r4, #204]	; 0xcc
    1ba4:	movw	r1, #0
    1ba8:	mov	r2, r9
    1bac:	mov	r3, r9
    1bb0:	stm	sp, {r4, r9}
    1bb4:	movt	r1, #0
    1bb8:	bl	0 <fprintf>
    1bbc:	ldr	r0, [r4, #204]	; 0xcc
    1bc0:	movw	r1, #0
    1bc4:	mov	r2, r9
    1bc8:	movt	r1, #0
    1bcc:	bl	0 <fprintf>
    1bd0:	ldr	r5, [r7, #24]
    1bd4:	ldr	sl, [sp, #64]	; 0x40
    1bd8:	cmp	r5, #0
    1bdc:	beq	1d2c <__flatcc_fb_gen_c_builder+0x147c>
    1be0:	ands	r8, r6, #8
    1be4:	mov	r6, #0
    1be8:	mov	r7, r8
    1bec:	movwne	r7, #1
    1bf0:	ldrb	r0, [r5, #72]	; 0x48
    1bf4:	tst	r0, #4
    1bf8:	bne	1c94 <__flatcc_fb_gen_c_builder+0x13e4>
    1bfc:	ldr	r0, [r5, #4]
    1c00:	ldm	r0, {r1, r3}
    1c04:	ldrh	r0, [r5, #24]
    1c08:	cmp	r0, #14
    1c0c:	bne	1c34 <__flatcc_fb_gen_c_builder+0x1384>
    1c10:	ldr	r0, [r5, #16]
    1c14:	mov	r2, #1
    1c18:	ldrh	r0, [r0, #8]
    1c1c:	cmp	r0, #4
    1c20:	sub	r0, r0, #4
    1c24:	movwne	r0, #1
    1c28:	moveq	r6, r2
    1c2c:	orrs	r0, r0, r7
    1c30:	beq	1c64 <__flatcc_fb_gen_c_builder+0x13b4>
    1c34:	ldr	r0, [sl]
    1c38:	ldr	r2, [r5, #96]	; 0x60
    1c3c:	ldr	r9, [r5, #100]	; 0x64
    1c40:	str	r1, [sp]
    1c44:	movw	r1, #0
    1c48:	movt	r1, #0
    1c4c:	str	r9, [sp, #12]
    1c50:	sub	r9, fp, #256	; 0x100
    1c54:	str	r2, [sp, #8]
    1c58:	mov	r2, r9
    1c5c:	bl	0 <fprintf>
    1c60:	b	1c94 <__flatcc_fb_gen_c_builder+0x13e4>
    1c64:	ldr	r0, [sl]
    1c68:	ldr	r2, [r5, #96]	; 0x60
    1c6c:	ldr	r9, [r5, #100]	; 0x64
    1c70:	str	r1, [sp]
    1c74:	movw	r1, #0
    1c78:	movt	r1, #0
    1c7c:	str	r9, [sp, #12]
    1c80:	sub	r9, fp, #256	; 0x100
    1c84:	str	r2, [sp, #8]
    1c88:	mov	r2, r9
    1c8c:	bl	0 <fprintf>
    1c90:	mov	r6, #1
    1c94:	ldr	r5, [r5, #108]	; 0x6c
    1c98:	cmp	r5, #0
    1c9c:	bne	1bf0 <__flatcc_fb_gen_c_builder+0x1340>
    1ca0:	ldr	r7, [sp, #60]	; 0x3c
    1ca4:	cmp	r8, #0
    1ca8:	bne	1d2c <__flatcc_fb_gen_c_builder+0x147c>
    1cac:	cmp	r6, #0
    1cb0:	beq	1d2c <__flatcc_fb_gen_c_builder+0x147c>
    1cb4:	ldr	r5, [r7, #24]
    1cb8:	cmp	r5, #0
    1cbc:	bne	1d0c <__flatcc_fb_gen_c_builder+0x145c>
    1cc0:	b	1d2c <__flatcc_fb_gen_c_builder+0x147c>
    1cc4:	ldr	r0, [r5, #16]
    1cc8:	ldrh	r0, [r0, #8]
    1ccc:	cmp	r0, #4
    1cd0:	bne	1d20 <__flatcc_fb_gen_c_builder+0x1470>
    1cd4:	ldr	r1, [r5, #4]
    1cd8:	ldr	r0, [sl]
    1cdc:	ldr	r2, [r5, #96]	; 0x60
    1ce0:	ldr	ip, [r5, #100]	; 0x64
    1ce4:	ldr	r6, [r1]
    1ce8:	ldr	r3, [r1, #4]
    1cec:	movw	r1, #0
    1cf0:	str	r2, [sp, #8]
    1cf4:	mov	r2, r9
    1cf8:	str	ip, [sp, #12]
    1cfc:	movt	r1, #0
    1d00:	str	r6, [sp]
    1d04:	bl	0 <fprintf>
    1d08:	b	1d20 <__flatcc_fb_gen_c_builder+0x1470>
    1d0c:	ldrb	r0, [r5, #72]	; 0x48
    1d10:	tst	r0, #4
    1d14:	ldrheq	r0, [r5, #24]
    1d18:	cmpeq	r0, #14
    1d1c:	beq	1cc4 <__flatcc_fb_gen_c_builder+0x1414>
    1d20:	ldr	r5, [r5, #108]	; 0x6c
    1d24:	cmp	r5, #0
    1d28:	bne	1d0c <__flatcc_fb_gen_c_builder+0x145c>
    1d2c:	ldr	r0, [r4, #204]	; 0xcc
    1d30:	movw	r1, #0
    1d34:	mov	r2, r9
    1d38:	movt	r1, #0
    1d3c:	bl	0 <fprintf>
    1d40:	mov	r0, r9
    1d44:	mov	r1, #0
    1d48:	mov	r2, #220	; 0xdc
    1d4c:	bl	0 <memset>
    1d50:	ldr	r0, [r7, #12]
    1d54:	mov	r1, r7
    1d58:	mov	r2, r9
    1d5c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1d60:	ldr	r0, [r4, #204]	; 0xcc
    1d64:	movw	r1, #0
    1d68:	mov	r2, r4
    1d6c:	mov	r3, r4
    1d70:	str	r9, [sp]
    1d74:	str	r9, [sp, #4]
    1d78:	str	r9, [sp, #8]
    1d7c:	movt	r1, #0
    1d80:	bl	0 <fprintf>
    1d84:	ldr	r1, [r4, #204]	; 0xcc
    1d88:	mov	r0, #10
    1d8c:	bl	0 <fputc>
    1d90:	ldr	r7, [r7]
    1d94:	cmp	r7, #0
    1d98:	bne	1614 <__flatcc_fb_gen_c_builder+0xd64>
    1d9c:	b	1da8 <__flatcc_fb_gen_c_builder+0x14f8>
    1da0:	mov	r0, r4
    1da4:	bl	2888 <gen_unions>
    1da8:	ldr	r0, [r4, #212]	; 0xd4
    1dac:	ldr	r0, [r0, #140]	; 0x8c
    1db0:	cmp	r0, #0
    1db4:	beq	1dd0 <__flatcc_fb_gen_c_builder+0x1520>
    1db8:	ldr	r3, [sl]
    1dbc:	movw	r0, #0
    1dc0:	mov	r1, #36	; 0x24
    1dc4:	mov	r2, #1
    1dc8:	movt	r0, #0
    1dcc:	bl	0 <fwrite>
    1dd0:	ldr	r1, [r4, #208]	; 0xd0
    1dd4:	ldr	r0, [r4, #204]	; 0xcc
    1dd8:	ldr	r2, [r1, #164]	; 0xa4
    1ddc:	movw	r1, #0
    1de0:	movt	r1, #0
    1de4:	bl	0 <fprintf>
    1de8:	mov	r0, #0
    1dec:	sub	sp, fp, #28
    1df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1df4:	movw	r0, #0
    1df8:	movw	r1, #0
    1dfc:	movw	r4, #0
    1e00:	movw	r3, #1209	; 0x4b9
    1e04:	movt	r0, #0
    1e08:	movt	r1, #0
    1e0c:	movt	r4, #0
    1e10:	ldr	r0, [r0]
    1e14:	str	r1, [sp]
    1e18:	movw	r1, #0
    1e1c:	mov	r2, r4
    1e20:	movt	r1, #0
    1e24:	bl	0 <fprintf>
    1e28:	movw	r0, #0
    1e2c:	movw	r3, #0
    1e30:	mov	r1, r4
    1e34:	movw	r2, #1209	; 0x4b9
    1e38:	movt	r0, #0
    1e3c:	movt	r3, #0
    1e40:	bl	0 <__assert_fail>
    1e44:	movw	r0, #0
    1e48:	movw	r1, #0
    1e4c:	movw	r4, #0
    1e50:	movw	r3, #1512	; 0x5e8
    1e54:	movt	r0, #0
    1e58:	movt	r1, #0
    1e5c:	movt	r4, #0
    1e60:	ldr	r0, [r0]
    1e64:	str	r1, [sp]
    1e68:	movw	r1, #0
    1e6c:	mov	r2, r4
    1e70:	movt	r1, #0
    1e74:	bl	0 <fprintf>
    1e78:	movw	r0, #0
    1e7c:	movw	r3, #0
    1e80:	mov	r1, r4
    1e84:	movw	r2, #1512	; 0x5e8
    1e88:	movt	r0, #0
    1e8c:	movt	r3, #0
    1e90:	bl	0 <__assert_fail>
    1e94:	movw	r0, #0
    1e98:	movw	r1, #0
    1e9c:	movw	r3, #0
    1ea0:	movw	r2, #1010	; 0x3f2
    1ea4:	movt	r0, #0
    1ea8:	movt	r1, #0
    1eac:	movt	r3, #0
    1eb0:	bl	0 <__assert_fail>
    1eb4:	movw	r0, #0
    1eb8:	movw	r1, #0
    1ebc:	movw	r4, #0
    1ec0:	movw	r3, #1173	; 0x495
    1ec4:	movt	r0, #0
    1ec8:	movt	r1, #0
    1ecc:	movt	r4, #0
    1ed0:	ldr	r0, [r0]
    1ed4:	str	r1, [sp]
    1ed8:	movw	r1, #0
    1edc:	mov	r2, r4
    1ee0:	movt	r1, #0
    1ee4:	bl	0 <fprintf>
    1ee8:	movw	r0, #0
    1eec:	movw	r3, #0
    1ef0:	mov	r1, r4
    1ef4:	movw	r2, #1173	; 0x495
    1ef8:	movt	r0, #0
    1efc:	movt	r3, #0
    1f00:	bl	0 <__assert_fail>
    1f04:	movw	r0, #0
    1f08:	movw	r1, #0
    1f0c:	movw	r4, #0
    1f10:	mov	r3, #141	; 0x8d
    1f14:	movt	r0, #0
    1f18:	movt	r1, #0
    1f1c:	movt	r4, #0
    1f20:	ldr	r0, [r0]
    1f24:	str	r1, [sp]
    1f28:	movw	r1, #0
    1f2c:	mov	r2, r4
    1f30:	movt	r1, #0
    1f34:	bl	0 <fprintf>
    1f38:	movw	r0, #0
    1f3c:	movw	r3, #0
    1f40:	mov	r1, r4
    1f44:	mov	r2, #141	; 0x8d
    1f48:	movt	r0, #0
    1f4c:	movt	r3, #0
    1f50:	bl	0 <__assert_fail>
    1f54:	movw	r0, #0
    1f58:	movw	r1, #0
    1f5c:	movw	r4, #0
    1f60:	movw	r3, #1507	; 0x5e3
    1f64:	movt	r0, #0
    1f68:	movt	r1, #0
    1f6c:	movt	r4, #0
    1f70:	ldr	r0, [r0]
    1f74:	str	r1, [sp]
    1f78:	movw	r1, #0
    1f7c:	mov	r2, r4
    1f80:	movt	r1, #0
    1f84:	bl	0 <fprintf>
    1f88:	movw	r0, #0
    1f8c:	movw	r3, #0
    1f90:	mov	r1, r4
    1f94:	movw	r2, #1507	; 0x5e3
    1f98:	movt	r0, #0
    1f9c:	movt	r3, #0
    1fa0:	bl	0 <__assert_fail>
    1fa4:	movw	r0, #0
    1fa8:	movw	r1, #0
    1fac:	movw	r4, #0
    1fb0:	mov	r3, #1472	; 0x5c0
    1fb4:	movt	r0, #0
    1fb8:	movt	r1, #0
    1fbc:	movt	r4, #0
    1fc0:	ldr	r0, [r0]
    1fc4:	str	r1, [sp]
    1fc8:	movw	r1, #0
    1fcc:	mov	r2, r4
    1fd0:	movt	r1, #0
    1fd4:	bl	0 <fprintf>
    1fd8:	movw	r0, #0
    1fdc:	movw	r3, #0
    1fe0:	mov	r1, r4
    1fe4:	mov	r2, #1472	; 0x5c0
    1fe8:	movt	r0, #0
    1fec:	movt	r3, #0
    1ff0:	bl	0 <__assert_fail>
    1ff4:	movw	r0, #0
    1ff8:	movw	r1, #0
    1ffc:	movw	r4, #0
    2000:	mov	r3, #96	; 0x60
    2004:	movt	r0, #0
    2008:	movt	r1, #0
    200c:	movt	r4, #0
    2010:	ldr	r0, [r0]
    2014:	str	r1, [sp]
    2018:	movw	r1, #0
    201c:	mov	r2, r4
    2020:	movt	r1, #0
    2024:	bl	0 <fprintf>
    2028:	movw	r0, #0
    202c:	movw	r3, #0
    2030:	mov	r1, r4
    2034:	mov	r2, #96	; 0x60
    2038:	movt	r0, #0
    203c:	movt	r3, #0
    2040:	bl	0 <__assert_fail>
    2044:	movw	r0, #0
    2048:	movw	r1, #0
    204c:	movw	r4, #0
    2050:	movw	r3, #1189	; 0x4a5
    2054:	movt	r0, #0
    2058:	movt	r1, #0
    205c:	movt	r4, #0
    2060:	ldr	r0, [r0]
    2064:	str	r1, [sp]
    2068:	movw	r1, #0
    206c:	mov	r2, r4
    2070:	movt	r1, #0
    2074:	bl	0 <fprintf>
    2078:	movw	r0, #0
    207c:	movw	r3, #0
    2080:	mov	r1, r4
    2084:	movw	r2, #1189	; 0x4a5
    2088:	movt	r0, #0
    208c:	movt	r3, #0
    2090:	bl	0 <__assert_fail>
    2094:	movw	r0, #0
    2098:	movw	r1, #0
    209c:	movw	r4, #0
    20a0:	movw	r3, #1430	; 0x596
    20a4:	movt	r0, #0
    20a8:	movt	r1, #0
    20ac:	movt	r4, #0
    20b0:	ldr	r0, [r0]
    20b4:	str	r1, [sp]
    20b8:	movw	r1, #0
    20bc:	mov	r2, r4
    20c0:	movt	r1, #0
    20c4:	bl	0 <fprintf>
    20c8:	movw	r0, #0
    20cc:	movw	r3, #0
    20d0:	mov	r1, r4
    20d4:	movw	r2, #1430	; 0x596
    20d8:	movt	r0, #0
    20dc:	movt	r3, #0
    20e0:	bl	0 <__assert_fail>

000020e4 <get_total_struct_field_count>:
    20e4:	push	{r4, r5, fp, lr}
    20e8:	add	fp, sp, #8
    20ec:	ldr	r5, [r0, #20]
    20f0:	mov	r4, #0
    20f4:	b	20fc <get_total_struct_field_count+0x18>
    20f8:	ldr	r5, [r5]
    20fc:	cmp	r5, #0
    2100:	moveq	r0, r4
    2104:	popeq	{r4, r5, fp, pc}
    2108:	ldrb	r0, [r5, #72]	; 0x48
    210c:	tst	r0, #4
    2110:	bne	20f8 <get_total_struct_field_count+0x14>
    2114:	ldrh	r0, [r5, #24]
    2118:	cmp	r0, #14
    211c:	bne	2140 <get_total_struct_field_count+0x5c>
    2120:	ldr	r0, [r5, #16]
    2124:	ldrh	r1, [r0, #8]
    2128:	cmp	r1, #1
    212c:	bne	2140 <get_total_struct_field_count+0x5c>
    2130:	bl	20e4 <get_total_struct_field_count>
    2134:	ldr	r5, [r5]
    2138:	add	r4, r0, r4
    213c:	b	20fc <get_total_struct_field_count+0x18>
    2140:	add	r4, r4, #1
    2144:	b	20f8 <get_total_struct_field_count+0x14>

00002148 <gen_builder_struct_args>:
    2148:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    214c:	add	fp, sp, #28
    2150:	sub	sp, sp, #236	; 0xec
    2154:	mov	r4, r2
    2158:	mov	r7, r1
    215c:	mov	r6, r0
    2160:	add	r0, sp, #8
    2164:	mov	r1, #0
    2168:	mov	r2, #220	; 0xdc
    216c:	mov	r5, r3
    2170:	bl	0 <memset>
    2174:	ldr	sl, [r7, #20]
    2178:	cmp	sl, #0
    217c:	beq	232c <gen_builder_struct_args+0x1e4>
    2180:	ldr	r1, [fp, #8]
    2184:	movw	r0, #0
    2188:	movw	r7, #0
    218c:	movw	r8, #0
    2190:	add	r9, sp, #8
    2194:	movt	r0, #0
    2198:	movt	r7, #0
    219c:	movt	r8, #0
    21a0:	cmp	r1, #0
    21a4:	moveq	r7, r0
    21a8:	ldrb	r0, [sl, #72]	; 0x48
    21ac:	tst	r0, #4
    21b0:	bne	2320 <gen_builder_struct_args+0x1d8>
    21b4:	ldrh	r0, [sl, #24]
    21b8:	cmp	r0, #8
    21bc:	beq	21f8 <gen_builder_struct_args+0xb0>
    21c0:	cmp	r0, #14
    21c4:	bne	2338 <gen_builder_struct_args+0x1f0>
    21c8:	ldr	r1, [sl, #16]
    21cc:	ldrh	r0, [r1, #8]
    21d0:	cmp	r0, #1
    21d4:	bne	2238 <gen_builder_struct_args+0xf0>
    21d8:	ldr	r0, [fp, #8]
    21dc:	mov	r2, r4
    21e0:	mov	r3, r5
    21e4:	str	r0, [sp]
    21e8:	mov	r0, r6
    21ec:	bl	2148 <gen_builder_struct_args>
    21f0:	mov	r4, r0
    21f4:	b	2320 <gen_builder_struct_args+0x1d8>
    21f8:	cmp	r5, #0
    21fc:	beq	2298 <gen_builder_struct_args+0x150>
    2200:	cmp	r4, #0
    2204:	beq	2278 <gen_builder_struct_args+0x130>
    2208:	ldr	r3, [r6, #204]	; 0xcc
    220c:	tst	r4, #3
    2210:	bne	2284 <gen_builder_struct_args+0x13c>
    2214:	sub	r0, r5, r4
    2218:	cmp	r0, #2
    221c:	ble	2284 <gen_builder_struct_args+0x13c>
    2220:	movw	r1, #0
    2224:	mov	r0, r3
    2228:	mov	r2, r7
    222c:	movt	r1, #0
    2230:	bl	0 <fprintf>
    2234:	b	2298 <gen_builder_struct_args+0x150>
    2238:	cmp	r5, #0
    223c:	beq	22f4 <gen_builder_struct_args+0x1ac>
    2240:	cmp	r4, #0
    2244:	beq	22d4 <gen_builder_struct_args+0x18c>
    2248:	ldr	r3, [r6, #204]	; 0xcc
    224c:	tst	r4, #3
    2250:	bne	22e0 <gen_builder_struct_args+0x198>
    2254:	sub	r0, r5, r4
    2258:	cmp	r0, #2
    225c:	ble	22e0 <gen_builder_struct_args+0x198>
    2260:	movw	r1, #0
    2264:	mov	r0, r3
    2268:	mov	r2, r7
    226c:	movt	r1, #0
    2270:	bl	0 <fprintf>
    2274:	b	22f4 <gen_builder_struct_args+0x1ac>
    2278:	ldr	r3, [r6, #204]	; 0xcc
    227c:	cmp	r5, #5
    2280:	bge	2220 <gen_builder_struct_args+0xd8>
    2284:	movw	r0, #0
    2288:	mov	r1, #2
    228c:	mov	r2, #1
    2290:	movt	r0, #0
    2294:	bl	0 <fwrite>
    2298:	ldr	r2, [sl, #16]
    229c:	sub	r1, r2, #1
    22a0:	cmp	r1, #11
    22a4:	bcs	2388 <gen_builder_struct_args+0x240>
    22a8:	movw	r3, #0
    22ac:	ldr	r0, [r6, #204]	; 0xcc
    22b0:	cmp	r2, #5
    22b4:	movw	r2, #0
    22b8:	str	r4, [sp]
    22bc:	movt	r3, #0
    22c0:	movt	r2, #0
    22c4:	ldr	r3, [r3, r1, lsl #2]
    22c8:	moveq	r2, r6
    22cc:	mov	r1, r8
    22d0:	b	2318 <gen_builder_struct_args+0x1d0>
    22d4:	ldr	r3, [r6, #204]	; 0xcc
    22d8:	cmp	r5, #5
    22dc:	bge	2260 <gen_builder_struct_args+0x118>
    22e0:	movw	r0, #0
    22e4:	mov	r1, #2
    22e8:	mov	r2, #1
    22ec:	movt	r0, #0
    22f0:	bl	0 <fwrite>
    22f4:	ldr	r1, [sl, #16]
    22f8:	mov	r2, r9
    22fc:	ldr	r0, [r1, #12]
    2300:	bl	0 <__flatcc_fb_scoped_symbol_name>
    2304:	ldr	r0, [r6, #204]	; 0xcc
    2308:	movw	r1, #0
    230c:	mov	r2, r9
    2310:	mov	r3, r4
    2314:	movt	r1, #0
    2318:	bl	0 <fprintf>
    231c:	add	r4, r4, #1
    2320:	ldr	sl, [sl]
    2324:	cmp	sl, #0
    2328:	bne	21a8 <gen_builder_struct_args+0x60>
    232c:	mov	r0, r4
    2330:	sub	sp, fp, #28
    2334:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2338:	movw	r0, #0
    233c:	movw	r1, #0
    2340:	movw	r4, #0
    2344:	movw	r3, #850	; 0x352
    2348:	movt	r0, #0
    234c:	movt	r1, #0
    2350:	movt	r4, #0
    2354:	ldr	r0, [r0]
    2358:	str	r1, [sp]
    235c:	movw	r1, #0
    2360:	mov	r2, r4
    2364:	movt	r1, #0
    2368:	bl	0 <fprintf>
    236c:	movw	r0, #0
    2370:	movw	r3, #0
    2374:	mov	r1, r4
    2378:	movw	r2, #850	; 0x352
    237c:	movt	r0, #0
    2380:	movt	r3, #0
    2384:	bl	0 <__assert_fail>
    2388:	movw	r0, #0
    238c:	movw	r1, #0
    2390:	movw	r4, #0
    2394:	mov	r3, #141	; 0x8d
    2398:	movt	r0, #0
    239c:	movt	r1, #0
    23a0:	movt	r4, #0
    23a4:	ldr	r0, [r0]
    23a8:	str	r1, [sp]
    23ac:	movw	r1, #0
    23b0:	mov	r2, r4
    23b4:	movt	r1, #0
    23b8:	bl	0 <fprintf>
    23bc:	movw	r0, #0
    23c0:	movw	r3, #0
    23c4:	mov	r1, r4
    23c8:	mov	r2, #141	; 0x8d
    23cc:	movt	r0, #0
    23d0:	movt	r3, #0
    23d4:	bl	0 <__assert_fail>

000023d8 <gen_builder_struct_field_assign>:
    23d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    23dc:	add	fp, sp, #28
    23e0:	sub	sp, sp, #260	; 0x104
    23e4:	str	r2, [sp, #28]
    23e8:	mov	r6, r1
    23ec:	mov	r9, r0
    23f0:	add	r0, sp, #32
    23f4:	mov	r1, #0
    23f8:	mov	r2, #220	; 0xdc
    23fc:	mov	r4, r3
    2400:	mov	sl, #0
    2404:	bl	0 <memset>
    2408:	movw	r0, #0
    240c:	movw	r1, #0
    2410:	ldr	r5, [r6, #20]
    2414:	cmp	r4, #1
    2418:	movt	r0, #0
    241c:	movt	r1, #0
    2420:	moveq	r1, r0
    2424:	movw	r0, #0
    2428:	cmp	r4, #2
    242c:	movt	r0, #0
    2430:	movne	r0, r1
    2434:	cmp	r5, #0
    2438:	str	r0, [sp, #20]
    243c:	beq	27bc <gen_builder_struct_field_assign+0x3e4>
    2440:	ldr	r6, [fp, #8]
    2444:	mov	r0, #0
    2448:	str	r0, [sp, #24]
    244c:	ldr	r0, [r5, #4]
    2450:	cmp	sl, #1
    2454:	ldr	r8, [r0]
    2458:	ldr	r7, [r0, #4]
    245c:	blt	2490 <gen_builder_struct_field_assign+0xb8>
    2460:	ldr	r3, [r9, #204]	; 0xcc
    2464:	tst	sl, #3
    2468:	beq	247c <gen_builder_struct_field_assign+0xa4>
    246c:	movw	r0, #0
    2470:	mov	r1, #2
    2474:	movt	r0, #0
    2478:	b	2488 <gen_builder_struct_field_assign+0xb0>
    247c:	movw	r0, #0
    2480:	mov	r1, #4
    2484:	movt	r0, #0
    2488:	mov	r2, #1
    248c:	bl	0 <fwrite>
    2490:	ldrh	r0, [r5, #24]
    2494:	cmp	r0, #8
    2498:	beq	2500 <gen_builder_struct_field_assign+0x128>
    249c:	cmp	r0, #14
    24a0:	bne	27e8 <gen_builder_struct_field_assign+0x410>
    24a4:	ldr	r1, [r5, #16]
    24a8:	add	r2, sp, #32
    24ac:	ldr	r0, [r1, #12]
    24b0:	bl	0 <__flatcc_fb_scoped_symbol_name>
    24b4:	ldrh	r0, [r5, #72]	; 0x48
    24b8:	and	r1, r0, #4
    24bc:	ldr	r0, [r5, #16]
    24c0:	ldrh	r0, [r0, #8]
    24c4:	cmp	r0, #1
    24c8:	bne	256c <gen_builder_struct_field_assign+0x194>
    24cc:	ldr	r0, [r9, #204]	; 0xcc
    24d0:	cmp	r1, #0
    24d4:	beq	259c <gen_builder_struct_field_assign+0x1c4>
    24d8:	ldr	r7, [sp, #24]
    24dc:	movw	r1, #0
    24e0:	movt	r1, #0
    24e4:	mov	r2, r7
    24e8:	mov	r3, r7
    24ec:	bl	0 <fprintf>
    24f0:	ldr	r0, [r5, #16]
    24f4:	bl	20e4 <get_total_struct_field_count>
    24f8:	add	sl, r0, sl
    24fc:	b	2590 <gen_builder_struct_field_assign+0x1b8>
    2500:	ldr	r0, [r5, #16]
    2504:	sub	r0, r0, #1
    2508:	cmp	r0, #11
    250c:	bcs	2838 <gen_builder_struct_field_assign+0x460>
    2510:	ldrb	r1, [r5, #72]	; 0x48
    2514:	tst	r1, #4
    2518:	bne	2574 <gen_builder_struct_field_assign+0x19c>
    251c:	movw	r1, #0
    2520:	movt	r1, #0
    2524:	ldr	r3, [r1, r0, lsl #2]
    2528:	ldrd	r0, [r5, #88]	; 0x58
    252c:	eor	r0, r0, #1
    2530:	orrs	r0, r0, r1
    2534:	movne	r0, r4
    2538:	cmp	r0, #2
    253c:	beq	2620 <gen_builder_struct_field_assign+0x248>
    2540:	cmp	r0, #1
    2544:	bne	2604 <gen_builder_struct_field_assign+0x22c>
    2548:	ldr	r0, [r9, #204]	; 0xcc
    254c:	cmp	r6, #0
    2550:	beq	2760 <gen_builder_struct_field_assign+0x388>
    2554:	movw	r1, #0
    2558:	stm	sp, {r7, r8}
    255c:	str	r7, [sp, #8]
    2560:	str	r8, [sp, #12]
    2564:	movt	r1, #0
    2568:	b	277c <gen_builder_struct_field_assign+0x3a4>
    256c:	cmp	r1, #0
    2570:	beq	25c4 <gen_builder_struct_field_assign+0x1ec>
    2574:	ldr	r7, [sp, #24]
    2578:	ldr	r0, [r9, #204]	; 0xcc
    257c:	movw	r1, #0
    2580:	movt	r1, #0
    2584:	mov	r2, r7
    2588:	bl	0 <fprintf>
    258c:	add	sl, sl, #1
    2590:	add	r7, r7, #1
    2594:	str	r7, [sp, #24]
    2598:	b	27b0 <gen_builder_struct_field_assign+0x3d8>
    259c:	cmp	r6, #0
    25a0:	beq	2644 <gen_builder_struct_field_assign+0x26c>
    25a4:	stm	sp, {r7, r8}
    25a8:	movw	r1, #0
    25ac:	str	r7, [sp, #8]
    25b0:	str	r8, [sp, #12]
    25b4:	add	r2, sp, #32
    25b8:	ldr	r3, [sp, #20]
    25bc:	movt	r1, #0
    25c0:	b	27a8 <gen_builder_struct_field_assign+0x3d0>
    25c4:	ldrd	r0, [r5, #88]	; 0x58
    25c8:	eor	r0, r0, #1
    25cc:	orrs	r0, r0, r1
    25d0:	movne	r0, r4
    25d4:	cmp	r0, #2
    25d8:	beq	2740 <gen_builder_struct_field_assign+0x368>
    25dc:	cmp	r0, #1
    25e0:	bne	2604 <gen_builder_struct_field_assign+0x22c>
    25e4:	ldr	r0, [r9, #204]	; 0xcc
    25e8:	cmp	r6, #0
    25ec:	beq	2784 <gen_builder_struct_field_assign+0x3ac>
    25f0:	movw	r1, #0
    25f4:	str	r8, [sp]
    25f8:	stmib	sp, {r7, r8}
    25fc:	movt	r1, #0
    2600:	b	27a0 <gen_builder_struct_field_assign+0x3c8>
    2604:	ldr	r0, [r9, #204]	; 0xcc
    2608:	cmp	r6, #0
    260c:	beq	2728 <gen_builder_struct_field_assign+0x350>
    2610:	movw	r1, #0
    2614:	stm	sp, {r7, r8}
    2618:	movt	r1, #0
    261c:	b	2734 <gen_builder_struct_field_assign+0x35c>
    2620:	ldr	r0, [r9, #204]	; 0xcc
    2624:	cmp	r6, #0
    2628:	beq	2770 <gen_builder_struct_field_assign+0x398>
    262c:	movw	r1, #0
    2630:	stm	sp, {r7, r8}
    2634:	str	r7, [sp, #8]
    2638:	str	r8, [sp, #12]
    263c:	movt	r1, #0
    2640:	b	277c <gen_builder_struct_field_assign+0x3a4>
    2644:	stm	sp, {r7, r8}
    2648:	movw	r1, #0
    264c:	add	r2, sp, #32
    2650:	ldr	r3, [sp, #20]
    2654:	movt	r1, #0
    2658:	bl	0 <fprintf>
    265c:	ldr	r0, [r5, #16]
    2660:	bl	20e4 <get_total_struct_field_count>
    2664:	cmp	r0, #1
    2668:	blt	2718 <gen_builder_struct_field_assign+0x340>
    266c:	ldr	r7, [sp, #28]
    2670:	str	r4, [sp, #16]
    2674:	mov	r8, r0
    2678:	mov	r4, #0
    267c:	ldr	r0, [sp, #28]
    2680:	add	r6, sl, r4
    2684:	cmp	r0, #0
    2688:	beq	26e8 <gen_builder_struct_field_assign+0x310>
    268c:	cmp	r4, #0
    2690:	beq	26c4 <gen_builder_struct_field_assign+0x2ec>
    2694:	ldr	r3, [r9, #204]	; 0xcc
    2698:	tst	r4, #3
    269c:	bne	26d4 <gen_builder_struct_field_assign+0x2fc>
    26a0:	cmp	r7, #2
    26a4:	ble	26d4 <gen_builder_struct_field_assign+0x2fc>
    26a8:	movw	r1, #0
    26ac:	movw	r2, #0
    26b0:	mov	r0, r3
    26b4:	movt	r1, #0
    26b8:	movt	r2, #0
    26bc:	bl	0 <fprintf>
    26c0:	b	26e8 <gen_builder_struct_field_assign+0x310>
    26c4:	ldr	r0, [sp, #28]
    26c8:	ldr	r3, [r9, #204]	; 0xcc
    26cc:	cmp	r0, #5
    26d0:	bge	26a8 <gen_builder_struct_field_assign+0x2d0>
    26d4:	movw	r0, #0
    26d8:	mov	r1, #2
    26dc:	mov	r2, #1
    26e0:	movt	r0, #0
    26e4:	bl	0 <fwrite>
    26e8:	ldr	r0, [r9, #204]	; 0xcc
    26ec:	movw	r1, #0
    26f0:	mov	r2, r6
    26f4:	movt	r1, #0
    26f8:	bl	0 <fprintf>
    26fc:	add	r4, r4, #1
    2700:	sub	r7, r7, #1
    2704:	cmp	r8, r4
    2708:	bne	267c <gen_builder_struct_field_assign+0x2a4>
    270c:	ldr	r4, [sp, #16]
    2710:	ldr	r6, [fp, #8]
    2714:	add	sl, r8, sl
    2718:	ldr	r1, [r9, #204]	; 0xcc
    271c:	mov	r0, #41	; 0x29
    2720:	bl	0 <fputc>
    2724:	b	27b0 <gen_builder_struct_field_assign+0x3d8>
    2728:	movw	r1, #0
    272c:	str	sl, [sp]
    2730:	movt	r1, #0
    2734:	mov	r2, r7
    2738:	mov	r3, r8
    273c:	b	27a8 <gen_builder_struct_field_assign+0x3d0>
    2740:	ldr	r0, [r9, #204]	; 0xcc
    2744:	cmp	r6, #0
    2748:	beq	2794 <gen_builder_struct_field_assign+0x3bc>
    274c:	movw	r1, #0
    2750:	str	r8, [sp]
    2754:	stmib	sp, {r7, r8}
    2758:	movt	r1, #0
    275c:	b	27a0 <gen_builder_struct_field_assign+0x3c8>
    2760:	movw	r1, #0
    2764:	stm	sp, {r7, r8, sl}
    2768:	movt	r1, #0
    276c:	b	277c <gen_builder_struct_field_assign+0x3a4>
    2770:	movw	r1, #0
    2774:	stm	sp, {r7, r8, sl}
    2778:	movt	r1, #0
    277c:	mov	r2, r9
    2780:	b	27a8 <gen_builder_struct_field_assign+0x3d0>
    2784:	movw	r1, #0
    2788:	stm	sp, {r8, sl}
    278c:	movt	r1, #0
    2790:	b	27a0 <gen_builder_struct_field_assign+0x3c8>
    2794:	movw	r1, #0
    2798:	stm	sp, {r8, sl}
    279c:	movt	r1, #0
    27a0:	add	r2, sp, #32
    27a4:	mov	r3, r7
    27a8:	bl	0 <fprintf>
    27ac:	add	sl, sl, #1
    27b0:	ldr	r5, [r5]
    27b4:	cmp	r5, #0
    27b8:	bne	244c <gen_builder_struct_field_assign+0x74>
    27bc:	ldr	r0, [sp, #28]
    27c0:	cmp	r0, #1
    27c4:	blt	27e0 <gen_builder_struct_field_assign+0x408>
    27c8:	ldr	r3, [r9, #204]	; 0xcc
    27cc:	movw	r0, #0
    27d0:	mov	r1, #4
    27d4:	mov	r2, #1
    27d8:	movt	r0, #0
    27dc:	bl	0 <fwrite>
    27e0:	sub	sp, fp, #28
    27e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    27e8:	movw	r0, #0
    27ec:	movw	r1, #0
    27f0:	movw	r4, #0
    27f4:	movw	r3, #993	; 0x3e1
    27f8:	movt	r0, #0
    27fc:	movt	r1, #0
    2800:	movt	r4, #0
    2804:	ldr	r0, [r0]
    2808:	str	r1, [sp]
    280c:	movw	r1, #0
    2810:	mov	r2, r4
    2814:	movt	r1, #0
    2818:	bl	0 <fprintf>
    281c:	movw	r0, #0
    2820:	movw	r3, #0
    2824:	mov	r1, r4
    2828:	movw	r2, #993	; 0x3e1
    282c:	movt	r0, #0
    2830:	movt	r3, #0
    2834:	bl	0 <__assert_fail>
    2838:	movw	r0, #0
    283c:	movw	r1, #0
    2840:	movw	r4, #0
    2844:	mov	r3, #96	; 0x60
    2848:	movt	r0, #0
    284c:	movt	r1, #0
    2850:	movt	r4, #0
    2854:	ldr	r0, [r0]
    2858:	str	r1, [sp]
    285c:	movw	r1, #0
    2860:	mov	r2, r4
    2864:	movt	r1, #0
    2868:	bl	0 <fprintf>
    286c:	movw	r0, #0
    2870:	movw	r3, #0
    2874:	mov	r1, r4
    2878:	mov	r2, #96	; 0x60
    287c:	movt	r0, #0
    2880:	movt	r3, #0
    2884:	bl	0 <__assert_fail>

00002888 <gen_unions>:
    2888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    288c:	add	fp, sp, #28
    2890:	sub	sp, sp, #484	; 0x1e4
    2894:	mov	r4, r0
    2898:	ldr	r0, [r0, #208]	; 0xd0
    289c:	ldr	r5, [r0, #40]	; 0x28
    28a0:	cmp	r5, #0
    28a4:	beq	2a00 <gen_unions+0x178>
    28a8:	movw	sl, #0
    28ac:	movw	r8, #0
    28b0:	mov	r0, #0
    28b4:	add	r6, sp, #256	; 0x100
    28b8:	add	r7, sp, #32
    28bc:	movt	sl, #0
    28c0:	movt	r8, #0
    28c4:	ldrh	r1, [r5, #8]
    28c8:	cmp	r1, #4
    28cc:	bne	29e0 <gen_unions+0x158>
    28d0:	mov	r0, r6
    28d4:	mov	r1, #0
    28d8:	mov	r2, #220	; 0xdc
    28dc:	bl	0 <memset>
    28e0:	mov	r0, r7
    28e4:	mov	r1, #0
    28e8:	mov	r2, #220	; 0xdc
    28ec:	bl	0 <memset>
    28f0:	ldr	r0, [r5, #12]
    28f4:	mov	r1, r5
    28f8:	mov	r2, r6
    28fc:	bl	0 <__flatcc_fb_scoped_symbol_name>
    2900:	ldr	r9, [r5, #20]
    2904:	cmp	r9, #0
    2908:	bne	2928 <gen_unions+0xa0>
    290c:	b	29c0 <gen_unions+0x138>
    2910:	mov	r2, r6
    2914:	mov	r3, r6
    2918:	bl	0 <fprintf>
    291c:	ldr	r9, [r9]
    2920:	cmp	r9, #0
    2924:	beq	29c0 <gen_unions+0x138>
    2928:	ldrh	r0, [r9, #24]
    292c:	cmp	r0, #0
    2930:	beq	29a8 <gen_unions+0x120>
    2934:	cmp	r0, #10
    2938:	beq	2980 <gen_unions+0xf8>
    293c:	cmp	r0, #14
    2940:	bne	2a08 <gen_unions+0x180>
    2944:	ldr	r1, [r9, #16]
    2948:	mov	r2, r7
    294c:	ldr	r0, [r1, #12]
    2950:	bl	0 <__flatcc_fb_scoped_symbol_name>
    2954:	ldr	r1, [r9, #4]
    2958:	ldr	r0, [r4, #204]	; 0xcc
    295c:	ldr	r2, [r1]
    2960:	ldr	r1, [r1, #4]
    2964:	stm	sp, {r1, r2, r7}
    2968:	str	r1, [sp, #20]
    296c:	str	r6, [sp, #12]
    2970:	str	r6, [sp, #16]
    2974:	str	r2, [sp, #24]
    2978:	mov	r1, r8
    297c:	b	2910 <gen_unions+0x88>
    2980:	ldr	r1, [r9, #4]
    2984:	ldr	r0, [r4, #204]	; 0xcc
    2988:	ldr	r2, [r1]
    298c:	ldr	r1, [r1, #4]
    2990:	stm	sp, {r1, r2, r4, r6}
    2994:	str	r1, [sp, #20]
    2998:	str	r6, [sp, #16]
    299c:	str	r2, [sp, #24]
    29a0:	mov	r1, sl
    29a4:	b	2910 <gen_unions+0x88>
    29a8:	ldr	r0, [r4, #204]	; 0xcc
    29ac:	movw	r1, #0
    29b0:	str	r6, [sp]
    29b4:	str	r6, [sp, #4]
    29b8:	movt	r1, #0
    29bc:	b	2910 <gen_unions+0x88>
    29c0:	ldr	r0, [r4, #204]	; 0xcc
    29c4:	movw	r1, #0
    29c8:	mov	r2, r4
    29cc:	mov	r3, r4
    29d0:	str	r6, [sp]
    29d4:	movt	r1, #0
    29d8:	bl	0 <fprintf>
    29dc:	mov	r0, #1
    29e0:	ldr	r5, [r5]
    29e4:	cmp	r5, #0
    29e8:	bne	28c4 <gen_unions+0x3c>
    29ec:	cmp	r0, #0
    29f0:	beq	2a00 <gen_unions+0x178>
    29f4:	ldr	r1, [r4, #204]	; 0xcc
    29f8:	mov	r0, #10
    29fc:	bl	0 <fputc>
    2a00:	sub	sp, fp, #28
    2a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2a08:	movw	r0, #0
    2a0c:	movw	r1, #0
    2a10:	movw	r4, #0
    2a14:	movw	r3, #1608	; 0x648
    2a18:	movt	r0, #0
    2a1c:	movt	r1, #0
    2a20:	movt	r4, #0
    2a24:	ldr	r0, [r0]
    2a28:	str	r1, [sp]
    2a2c:	movw	r1, #0
    2a30:	mov	r2, r4
    2a34:	movt	r1, #0
    2a38:	bl	0 <fprintf>
    2a3c:	movw	r0, #0
    2a40:	movw	r3, #0
    2a44:	mov	r1, r4
    2a48:	movw	r2, #1608	; 0x648
    2a4c:	movt	r0, #0
    2a50:	movt	r3, #0
    2a54:	bl	0 <__assert_fail>

00002a58 <print_literal>:
    2a58:	push	{r4, sl, fp, lr}
    2a5c:	add	fp, sp, #8
    2a60:	sub	sp, sp, #8
    2a64:	mov	r4, r2
    2a68:	ldrh	r2, [r1, #8]
    2a6c:	sub	r2, r2, #3
    2a70:	cmp	r2, #3
    2a74:	bhi	2b5c <print_literal+0x104>
    2a78:	add	r3, pc, #0
    2a7c:	ldr	pc, [r3, r2, lsl #2]
    2a80:	.word	0x00002a90
    2a84:	.word	0x00002b08
    2a88:	.word	0x00002ab4
    2a8c:	.word	0x00002ae0
    2a90:	vldr	d16, [r1]
    2a94:	cmp	r0, #11
    2a98:	bne	2b40 <print_literal+0xe8>
    2a9c:	vcvt.f32.f64	s0, d16
    2aa0:	movw	r1, #0
    2aa4:	vcvt.f64.f32	d16, s0
    2aa8:	movt	r1, #0
    2aac:	vmov	r2, r3, d16
    2ab0:	b	2b4c <print_literal+0xf4>
    2ab4:	sub	r0, r0, #1
    2ab8:	cmp	r0, #9
    2abc:	bcs	2bac <print_literal+0x154>
    2ac0:	ldrd	r2, [r1]
    2ac4:	movw	r1, #0
    2ac8:	movt	r1, #0
    2acc:	stm	sp, {r2, r3}
    2ad0:	ldr	r2, [r1, r0, lsl #2]
    2ad4:	movw	r1, #0
    2ad8:	movt	r1, #0
    2adc:	b	2b30 <print_literal+0xd8>
    2ae0:	sub	r0, r0, #1
    2ae4:	cmp	r0, #9
    2ae8:	bcs	2bac <print_literal+0x154>
    2aec:	movw	r2, #0
    2af0:	ldrb	r3, [r1]
    2af4:	movw	r1, #0
    2af8:	movt	r2, #0
    2afc:	movt	r1, #0
    2b00:	ldr	r2, [r2, r0, lsl #2]
    2b04:	b	2b4c <print_literal+0xf4>
    2b08:	sub	r0, r0, #1
    2b0c:	cmp	r0, #9
    2b10:	bcs	2bac <print_literal+0x154>
    2b14:	ldrd	r2, [r1]
    2b18:	movw	r1, #0
    2b1c:	movt	r1, #0
    2b20:	stm	sp, {r2, r3}
    2b24:	ldr	r2, [r1, r0, lsl #2]
    2b28:	movw	r1, #0
    2b2c:	movt	r1, #0
    2b30:	mov	r0, r4
    2b34:	bl	0 <sprintf>
    2b38:	sub	sp, fp, #8
    2b3c:	pop	{r4, sl, fp, pc}
    2b40:	movw	r1, #0
    2b44:	vmov	r2, r3, d16
    2b48:	movt	r1, #0
    2b4c:	mov	r0, r4
    2b50:	sub	sp, fp, #8
    2b54:	pop	{r4, sl, fp, lr}
    2b58:	b	0 <sprintf>
    2b5c:	movw	r0, #0
    2b60:	movw	r1, #0
    2b64:	movw	r4, #0
    2b68:	mov	r3, #260	; 0x104
    2b6c:	movt	r0, #0
    2b70:	movt	r1, #0
    2b74:	movt	r4, #0
    2b78:	ldr	r0, [r0]
    2b7c:	str	r1, [sp]
    2b80:	movw	r1, #0
    2b84:	mov	r2, r4
    2b88:	movt	r1, #0
    2b8c:	bl	0 <fprintf>
    2b90:	movw	r0, #0
    2b94:	movw	r3, #0
    2b98:	mov	r1, r4
    2b9c:	mov	r2, #260	; 0x104
    2ba0:	movt	r0, #0
    2ba4:	movt	r3, #0
    2ba8:	bl	0 <__assert_fail>
    2bac:	movw	r0, #0
    2bb0:	movw	r1, #0
    2bb4:	movw	r4, #0
    2bb8:	mov	r3, #226	; 0xe2
    2bbc:	movt	r0, #0
    2bc0:	movt	r1, #0
    2bc4:	movt	r4, #0
    2bc8:	ldr	r0, [r0]
    2bcc:	str	r1, [sp]
    2bd0:	movw	r1, #0
    2bd4:	mov	r2, r4
    2bd8:	movt	r1, #0
    2bdc:	bl	0 <fprintf>
    2be0:	movw	r0, #0
    2be4:	movw	r3, #0
    2be8:	mov	r1, r4
    2bec:	mov	r2, #226	; 0xe2
    2bf0:	movt	r0, #0
    2bf4:	movt	r3, #0
    2bf8:	bl	0 <__assert_fail>

00002bfc <gen_union_fields>:
    2bfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2c00:	add	fp, sp, #28
    2c04:	sub	sp, sp, #492	; 0x1ec
    2c08:	sub	r4, fp, #256	; 0x100
    2c0c:	str	r2, [sp, #32]
    2c10:	mov	r9, r1
    2c14:	mov	r7, r0
    2c18:	mov	r1, #0
    2c1c:	mov	r2, #220	; 0xdc
    2c20:	str	r3, [sp, #36]	; 0x24
    2c24:	mov	r0, r4
    2c28:	bl	0 <memset>
    2c2c:	add	r0, sp, #40	; 0x28
    2c30:	mov	r1, #0
    2c34:	mov	r2, #220	; 0xdc
    2c38:	bl	0 <memset>
    2c3c:	ldr	r5, [fp, #8]
    2c40:	mov	r2, r4
    2c44:	ldr	r0, [r5, #12]
    2c48:	mov	r1, r5
    2c4c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    2c50:	ldr	r0, [fp, #12]
    2c54:	ldr	r5, [r5, #20]
    2c58:	movw	r1, #0
    2c5c:	movw	r4, #0
    2c60:	movt	r1, #0
    2c64:	movt	r4, #0
    2c68:	cmp	r0, #0
    2c6c:	moveq	r4, r1
    2c70:	b	2c78 <gen_union_fields+0x7c>
    2c74:	ldr	r5, [r5]
    2c78:	cmp	r5, #0
    2c7c:	subeq	sp, fp, #28
    2c80:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2c84:	ldrh	r0, [r5, #24]
    2c88:	cmp	r0, #0
    2c8c:	beq	2c74 <gen_union_fields+0x78>
    2c90:	ldr	r1, [r5, #4]
    2c94:	cmp	r0, #10
    2c98:	ldm	r1, {r6, sl}
    2c9c:	beq	2d10 <gen_union_fields+0x114>
    2ca0:	cmp	r0, #14
    2ca4:	add	r8, sp, #40	; 0x28
    2ca8:	bne	2d88 <gen_union_fields+0x18c>
    2cac:	ldr	r1, [r5, #16]
    2cb0:	mov	r2, r8
    2cb4:	ldr	r0, [r1, #12]
    2cb8:	bl	0 <__flatcc_fb_scoped_symbol_name>
    2cbc:	ldr	r0, [r5, #16]
    2cc0:	ldrh	r0, [r0, #8]
    2cc4:	cmp	r0, #1
    2cc8:	beq	2d44 <gen_union_fields+0x148>
    2ccc:	cmp	r0, #0
    2cd0:	bne	2dd8 <gen_union_fields+0x1dc>
    2cd4:	ldr	r0, [r7, #204]	; 0xcc
    2cd8:	stm	sp, {r7, r9}
    2cdc:	str	sl, [sp, #20]
    2ce0:	str	r6, [sp, #24]
    2ce4:	ldr	r1, [sp, #32]
    2ce8:	str	r1, [sp, #8]
    2cec:	ldr	r1, [sp, #36]	; 0x24
    2cf0:	str	r1, [sp, #12]
    2cf4:	sub	r1, fp, #256	; 0x100
    2cf8:	str	r1, [sp, #16]
    2cfc:	add	r1, sp, #40	; 0x28
    2d00:	str	r1, [sp, #28]
    2d04:	movw	r1, #0
    2d08:	movt	r1, #0
    2d0c:	b	2d78 <gen_union_fields+0x17c>
    2d10:	ldr	r0, [r7, #204]	; 0xcc
    2d14:	stm	sp, {r7, r9}
    2d18:	str	sl, [sp, #20]
    2d1c:	str	r6, [sp, #24]
    2d20:	ldr	r1, [sp, #32]
    2d24:	str	r1, [sp, #8]
    2d28:	ldr	r1, [sp, #36]	; 0x24
    2d2c:	str	r1, [sp, #12]
    2d30:	sub	r1, fp, #256	; 0x100
    2d34:	str	r1, [sp, #16]
    2d38:	movw	r1, #0
    2d3c:	movt	r1, #0
    2d40:	b	2d78 <gen_union_fields+0x17c>
    2d44:	ldr	r0, [r7, #204]	; 0xcc
    2d48:	stm	sp, {r7, r9}
    2d4c:	str	sl, [sp, #20]
    2d50:	str	r6, [sp, #24]
    2d54:	str	r8, [sp, #28]
    2d58:	ldr	r1, [sp, #32]
    2d5c:	str	r1, [sp, #8]
    2d60:	ldr	r1, [sp, #36]	; 0x24
    2d64:	str	r1, [sp, #12]
    2d68:	sub	r1, fp, #256	; 0x100
    2d6c:	str	r1, [sp, #16]
    2d70:	movw	r1, #0
    2d74:	movt	r1, #0
    2d78:	mov	r2, r7
    2d7c:	mov	r3, r4
    2d80:	bl	0 <fprintf>
    2d84:	b	2c74 <gen_union_fields+0x78>
    2d88:	movw	r0, #0
    2d8c:	movw	r1, #0
    2d90:	movw	r4, #0
    2d94:	movw	r3, #1368	; 0x558
    2d98:	movt	r0, #0
    2d9c:	movt	r1, #0
    2da0:	movt	r4, #0
    2da4:	ldr	r0, [r0]
    2da8:	str	r1, [sp]
    2dac:	movw	r1, #0
    2db0:	mov	r2, r4
    2db4:	movt	r1, #0
    2db8:	bl	0 <fprintf>
    2dbc:	movw	r0, #0
    2dc0:	movw	r3, #0
    2dc4:	mov	r1, r4
    2dc8:	movw	r2, #1368	; 0x558
    2dcc:	movt	r0, #0
    2dd0:	movt	r3, #0
    2dd4:	bl	0 <__assert_fail>
    2dd8:	movw	r0, #0
    2ddc:	movw	r1, #0
    2de0:	movw	r4, #0
    2de4:	movw	r3, #1358	; 0x54e
    2de8:	movt	r0, #0
    2dec:	movt	r1, #0
    2df0:	movt	r4, #0
    2df4:	ldr	r0, [r0]
    2df8:	str	r1, [sp]
    2dfc:	movw	r1, #0
    2e00:	mov	r2, r4
    2e04:	movt	r1, #0
    2e08:	bl	0 <fprintf>
    2e0c:	movw	r0, #0
    2e10:	movw	r3, #0
    2e14:	mov	r1, r4
    2e18:	movw	r2, #1358	; 0x54e
    2e1c:	movt	r0, #0
    2e20:	movt	r3, #0
    2e24:	bl	0 <__assert_fail>
