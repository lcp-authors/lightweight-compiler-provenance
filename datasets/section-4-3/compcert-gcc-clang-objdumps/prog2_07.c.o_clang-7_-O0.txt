
../compcert-repos/prog2/CMakeFiles/0.7.dir/Aula00_Conceitos_base/07.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <media>:
   0:	sub	sp, sp, #16
   4:	vldr	s0, [pc, #220]	; e8 <media+0xe8>
   8:	str	r0, [sp, #12]
   c:	str	r1, [sp, #8]
  10:	vstr	s0, [sp]
  14:	movw	r0, #0
  18:	str	r0, [sp, #4]
  1c:	ldr	r0, [sp, #4]
  20:	ldr	r1, [sp, #8]
  24:	cmp	r0, r1
  28:	bge	c0 <media+0xc0>
  2c:	vldr	d16, [pc, #172]	; e0 <media+0xe0>
  30:	ldr	r0, [sp, #12]
  34:	ldr	r1, [sp, #4]
  38:	add	r0, r0, r1, lsl #2
  3c:	vldr	s0, [r0]
  40:	vcvt.f64.f32	d17, s0
  44:	vcmpe.f64	d17, d16
  48:	vmrs	APSR_nzcv, fpscr
  4c:	blt	90 <media+0x90>
  50:	ldr	r0, [sp, #12]
  54:	ldr	r1, [sp, #4]
  58:	add	r0, r0, r1, lsl #2
  5c:	vldr	s0, [r0]
  60:	vcvt.f64.f32	d16, s0
  64:	vmov.f64	d17, #35	; 0x41180000  9.5
  68:	vcmpe.f64	d16, d17
  6c:	vmrs	APSR_nzcv, fpscr
  70:	bpl	90 <media+0x90>
  74:	vldr	s0, [sp]
  78:	vcvt.f64.f32	d16, s0
  7c:	vmov.f64	d17, #35	; 0x41180000  9.5
  80:	vadd.f64	d16, d16, d17
  84:	vcvt.f32.f64	s0, d16
  88:	vstr	s0, [sp]
  8c:	b	ac <media+0xac>
  90:	ldr	r0, [sp, #12]
  94:	ldr	r1, [sp, #4]
  98:	add	r0, r0, r1, lsl #2
  9c:	vldr	s0, [r0]
  a0:	vldr	s2, [sp]
  a4:	vadd.f32	s0, s2, s0
  a8:	vstr	s0, [sp]
  ac:	b	b0 <media+0xb0>
  b0:	ldr	r0, [sp, #4]
  b4:	add	r0, r0, #1
  b8:	str	r0, [sp, #4]
  bc:	b	1c <media+0x1c>
  c0:	vldr	s0, [sp]
  c4:	ldr	r0, [sp, #8]
  c8:	vmov	s2, r0
  cc:	vcvt.f32.s32	s2, s2
  d0:	vdiv.f32	s0, s0, s2
  d4:	add	sp, sp, #16
  d8:	bx	lr
  dc:	nop	{0}
  e0:	.word	0x9999999a
  e4:	.word	0x40229999
  e8:	.word	0x00000000
  ec:	.word	0xe320f000

000000f0 <lernotas>:
  f0:	push	{fp, lr}
  f4:	mov	fp, sp
  f8:	sub	sp, sp, #16
  fc:	str	r0, [fp, #-4]
 100:	movw	r0, #0
 104:	str	r0, [sp]
 108:	movw	r0, #0
 10c:	movt	r0, #0
 110:	add	r1, sp, #8
 114:	add	r2, sp, #4
 118:	bl	0 <__isoc99_scanf>
 11c:	cmp	r0, #2
 120:	bne	168 <lernotas+0x78>
 124:	vldr	s0, [sp, #8]
 128:	vcvt.f64.f32	d16, s0
 12c:	vldr	s0, [sp, #4]
 130:	vcvt.f64.f32	d17, s0
 134:	vldr	d18, [pc, #60]	; 178 <lernotas+0x88>
 138:	vmul.f64	d17, d17, d18
 13c:	vldr	d18, [pc, #60]	; 180 <lernotas+0x90>
 140:	vmla.f64	d17, d16, d18
 144:	vcvt.f32.f64	s0, d17
 148:	ldr	r0, [fp, #-4]
 14c:	ldr	r1, [sp]
 150:	add	r0, r0, r1, lsl #2
 154:	vstr	s0, [r0]
 158:	ldr	r0, [sp]
 15c:	add	r0, r0, #1
 160:	str	r0, [sp]
 164:	b	108 <lernotas+0x18>
 168:	ldr	r0, [sp]
 16c:	mov	sp, fp
 170:	pop	{fp, pc}
 174:	nop	{0}
 178:	.word	0x9999999a
 17c:	.word	0x3fd99999
 180:	.word	0x33333333
 184:	.word	0x3fe33333

00000188 <main>:
 188:	push	{r4, r5, fp, lr}
 18c:	add	fp, sp, #8
 190:	sub	sp, sp, #424	; 0x1a8
 194:	add	r0, sp, #20
 198:	movw	r1, #0
 19c:	str	r1, [fp, #-12]
 1a0:	mov	r1, r0
 1a4:	str	r0, [sp, #12]
 1a8:	mov	r0, r1
 1ac:	movw	r1, #0
 1b0:	and	r1, r1, #255	; 0xff
 1b4:	movw	r2, #400	; 0x190
 1b8:	bl	0 <memset>
 1bc:	ldr	r0, [sp, #12]
 1c0:	bl	f0 <lernotas>
 1c4:	add	r1, sp, #20
 1c8:	str	r0, [sp, #16]
 1cc:	ldr	r0, [sp, #16]
 1d0:	str	r0, [sp, #8]
 1d4:	mov	r0, r1
 1d8:	ldr	r1, [sp, #8]
 1dc:	bl	0 <media>
 1e0:	vcvt.f64.f32	d16, s0
 1e4:	movw	r0, #0
 1e8:	movt	r0, #0
 1ec:	vmov	r2, r3, d16
 1f0:	bl	0 <printf>
 1f4:	movw	r1, #0
 1f8:	str	r0, [sp, #4]
 1fc:	mov	r0, r1
 200:	sub	sp, fp, #8
 204:	pop	{r4, r5, fp, pc}
