
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-netcdf-cursor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_netcdf_cursor_set_product>:
       0:	sub	sp, sp, #8
       4:	str	r0, [sp, #4]
       8:	str	r1, [sp]
       c:	ldr	r0, [sp]
      10:	ldr	r1, [sp, #4]
      14:	str	r0, [r1]
      18:	ldr	r0, [sp, #4]
      1c:	mov	r1, #1
      20:	str	r1, [r0, #4]
      24:	ldr	r0, [sp]
      28:	ldr	r0, [r0, #20]
      2c:	ldr	r1, [sp, #4]
      30:	str	r0, [r1, #8]
      34:	ldr	r0, [sp, #4]
      38:	mvn	r1, #0
      3c:	str	r1, [r0, #12]
      40:	ldr	r0, [sp, #4]
      44:	str	r1, [r0, #20]
      48:	str	r1, [r0, #16]
      4c:	movw	r0, #0
      50:	add	sp, sp, #8
      54:	bx	lr

00000058 <coda_netcdf_cursor_goto_array_element>:
      58:	push	{fp, lr}
      5c:	mov	fp, sp
      60:	sub	sp, sp, #64	; 0x40
      64:	add	r3, sp, #4
      68:	str	r0, [fp, #-8]
      6c:	str	r1, [fp, #-12]
      70:	str	r2, [fp, #-16]
      74:	ldr	r0, [fp, #-8]
      78:	add	r1, r0, #8
      7c:	ldr	r0, [r0, #4]
      80:	sub	r0, r0, #1
      84:	add	r0, r1, r0, lsl #4
      88:	ldr	r0, [r0]
      8c:	ldr	r0, [r0, #4]
      90:	sub	r1, fp, #28
      94:	mov	r2, r3
      98:	bl	0 <coda_type_get_array_dim>
      9c:	cmp	r0, #0
      a0:	beq	b0 <coda_netcdf_cursor_goto_array_element+0x58>
      a4:	mvn	r0, #0
      a8:	str	r0, [fp, #-4]
      ac:	b	22c <coda_netcdf_cursor_goto_array_element+0x1d4>
      b0:	ldr	r0, [fp, #-12]
      b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
      b8:	cmp	r0, r1
      bc:	beq	e4 <coda_netcdf_cursor_goto_array_element+0x8c>
      c0:	ldr	r2, [fp, #-12]
      c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
      c8:	mvn	r0, #105	; 0x69
      cc:	movw	r1, #0
      d0:	movt	r1, #0
      d4:	bl	0 <coda_set_error>
      d8:	mvn	r0, #0
      dc:	str	r0, [fp, #-4]
      e0:	b	22c <coda_netcdf_cursor_goto_array_element+0x1d4>
      e4:	movw	r0, #0
      e8:	str	r0, [fp, #-24]	; 0xffffffe8
      ec:	str	r0, [sp]
      f0:	ldr	r0, [sp]
      f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
      f8:	cmp	r0, r1
      fc:	bge	1c0 <coda_netcdf_cursor_goto_array_element+0x168>
     100:	ldr	r0, [fp, #-16]
     104:	ldr	r1, [sp]
     108:	add	r0, r0, r1, lsl #2
     10c:	ldr	r0, [r0]
     110:	cmp	r0, #0
     114:	blt	138 <coda_netcdf_cursor_goto_array_element+0xe0>
     118:	ldr	r0, [fp, #-16]
     11c:	ldr	r1, [sp]
     120:	ldr	r0, [r0, r1, lsl #2]
     124:	add	r2, sp, #4
     128:	add	r1, r2, r1, lsl #2
     12c:	ldr	r1, [r1]
     130:	cmp	r0, r1
     134:	blt	16c <coda_netcdf_cursor_goto_array_element+0x114>
     138:	ldr	r0, [fp, #-16]
     13c:	ldr	r1, [sp]
     140:	ldr	r2, [r0, r1, lsl #2]
     144:	add	r0, sp, #4
     148:	add	r0, r0, r1, lsl #2
     14c:	ldr	r3, [r0]
     150:	mvn	r0, #106	; 0x6a
     154:	movw	r1, #0
     158:	movt	r1, #0
     15c:	bl	0 <coda_set_error>
     160:	mvn	r0, #0
     164:	str	r0, [fp, #-4]
     168:	b	22c <coda_netcdf_cursor_goto_array_element+0x1d4>
     16c:	ldr	r0, [sp]
     170:	cmp	r0, #0
     174:	ble	194 <coda_netcdf_cursor_goto_array_element+0x13c>
     178:	ldr	r0, [sp]
     17c:	add	r1, sp, #4
     180:	add	r0, r1, r0, lsl #2
     184:	ldr	r0, [r0]
     188:	ldr	r1, [fp, #-24]	; 0xffffffe8
     18c:	mul	r0, r1, r0
     190:	str	r0, [fp, #-24]	; 0xffffffe8
     194:	ldr	r0, [fp, #-16]
     198:	ldr	r1, [sp]
     19c:	add	r0, r0, r1, lsl #2
     1a0:	ldr	r0, [r0]
     1a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     1a8:	add	r0, r1, r0
     1ac:	str	r0, [fp, #-24]	; 0xffffffe8
     1b0:	ldr	r0, [sp]
     1b4:	add	r0, r0, #1
     1b8:	str	r0, [sp]
     1bc:	b	f0 <coda_netcdf_cursor_goto_array_element+0x98>
     1c0:	ldr	r0, [fp, #-8]
     1c4:	ldr	r1, [r0, #4]
     1c8:	add	r0, r0, r1, lsl #4
     1cc:	ldr	r0, [r0, #-8]
     1d0:	ldr	r0, [r0, #12]
     1d4:	str	r0, [fp, #-20]	; 0xffffffec
     1d8:	ldr	r0, [fp, #-8]
     1dc:	ldr	r1, [r0, #4]
     1e0:	add	r1, r1, #1
     1e4:	str	r1, [r0, #4]
     1e8:	ldr	r0, [fp, #-20]	; 0xffffffec
     1ec:	ldr	r1, [fp, #-8]
     1f0:	ldr	r2, [r1, #4]
     1f4:	add	r1, r1, r2, lsl #4
     1f8:	str	r0, [r1, #-8]
     1fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     200:	ldr	r1, [fp, #-8]
     204:	ldr	r2, [r1, #4]
     208:	add	r1, r1, r2, lsl #4
     20c:	str	r0, [r1, #-4]
     210:	ldr	r0, [fp, #-8]
     214:	ldr	r1, [r0, #4]
     218:	mvn	r2, #0
     21c:	str	r2, [r0, r1, lsl #4]!
     220:	str	r2, [r0, #4]
     224:	movw	r0, #0
     228:	str	r0, [fp, #-4]
     22c:	ldr	r0, [fp, #-4]
     230:	mov	sp, fp
     234:	pop	{fp, pc}

00000238 <coda_netcdf_cursor_goto_array_element_by_index>:
     238:	push	{fp, lr}
     23c:	mov	fp, sp
     240:	sub	sp, sp, #24
     244:	str	r0, [fp, #-8]
     248:	str	r1, [sp, #12]
     24c:	ldr	r0, [pc, #248]	; 34c <coda_netcdf_cursor_goto_array_element_by_index+0x114>
     250:	ldr	r0, [pc, r0]
     254:	str	r0, [sp]
     258:	bl	0 <__aeabi_read_tp>
     25c:	ldr	r1, [sp]
     260:	ldr	r0, [r0, r1]
     264:	cmp	r0, #0
     268:	beq	2d4 <coda_netcdf_cursor_goto_array_element_by_index+0x9c>
     26c:	ldr	r0, [fp, #-8]
     270:	add	r1, r0, #8
     274:	ldr	r0, [r0, #4]
     278:	sub	r0, r0, #1
     27c:	add	r0, r1, r0, lsl #4
     280:	ldr	r0, [r0]
     284:	ldr	r0, [r0, #4]
     288:	ldr	r0, [r0, #44]	; 0x2c
     28c:	str	r0, [sp, #4]
     290:	ldr	r0, [sp, #12]
     294:	cmp	r0, #0
     298:	blt	2ac <coda_netcdf_cursor_goto_array_element_by_index+0x74>
     29c:	ldr	r0, [sp, #12]
     2a0:	ldr	r1, [sp, #4]
     2a4:	cmp	r0, r1
     2a8:	blt	2d0 <coda_netcdf_cursor_goto_array_element_by_index+0x98>
     2ac:	ldr	r2, [sp, #12]
     2b0:	ldr	r3, [sp, #4]
     2b4:	mvn	r0, #106	; 0x6a
     2b8:	movw	r1, #0
     2bc:	movt	r1, #0
     2c0:	bl	0 <coda_set_error>
     2c4:	mvn	r0, #0
     2c8:	str	r0, [fp, #-4]
     2cc:	b	340 <coda_netcdf_cursor_goto_array_element_by_index+0x108>
     2d0:	b	2d4 <coda_netcdf_cursor_goto_array_element_by_index+0x9c>
     2d4:	ldr	r0, [fp, #-8]
     2d8:	ldr	r1, [r0, #4]
     2dc:	add	r0, r0, r1, lsl #4
     2e0:	ldr	r0, [r0, #-8]
     2e4:	ldr	r0, [r0, #12]
     2e8:	str	r0, [sp, #8]
     2ec:	ldr	r0, [fp, #-8]
     2f0:	ldr	r1, [r0, #4]
     2f4:	add	r1, r1, #1
     2f8:	str	r1, [r0, #4]
     2fc:	ldr	r0, [sp, #8]
     300:	ldr	r1, [fp, #-8]
     304:	ldr	r2, [r1, #4]
     308:	add	r1, r1, r2, lsl #4
     30c:	str	r0, [r1, #-8]
     310:	ldr	r0, [sp, #12]
     314:	ldr	r1, [fp, #-8]
     318:	ldr	r2, [r1, #4]
     31c:	add	r1, r1, r2, lsl #4
     320:	str	r0, [r1, #-4]
     324:	ldr	r0, [fp, #-8]
     328:	ldr	r1, [r0, #4]
     32c:	mvn	r2, #0
     330:	str	r2, [r0, r1, lsl #4]!
     334:	str	r2, [r0, #4]
     338:	movw	r0, #0
     33c:	str	r0, [fp, #-4]
     340:	ldr	r0, [fp, #-4]
     344:	mov	sp, fp
     348:	pop	{fp, pc}
     34c:	.word	0x000000f4

00000350 <coda_netcdf_cursor_goto_next_array_element>:
     350:	push	{fp, lr}
     354:	mov	fp, sp
     358:	sub	sp, sp, #24
     35c:	str	r0, [fp, #-8]
     360:	ldr	r0, [pc, #204]	; 434 <coda_netcdf_cursor_goto_next_array_element+0xe4>
     364:	ldr	r0, [pc, r0]
     368:	str	r0, [sp, #4]
     36c:	bl	0 <__aeabi_read_tp>
     370:	ldr	r1, [sp, #4]
     374:	ldr	r0, [r0, r1]
     378:	cmp	r0, #0
     37c:	beq	400 <coda_netcdf_cursor_goto_next_array_element+0xb0>
     380:	ldr	r0, [fp, #-8]
     384:	ldr	r1, [r0, #4]
     388:	add	r0, r0, r1, lsl #4
     38c:	ldr	r0, [r0, #-4]
     390:	add	r0, r0, #1
     394:	str	r0, [sp, #8]
     398:	ldr	r0, [fp, #-8]
     39c:	add	r1, r0, #8
     3a0:	ldr	r0, [r0, #4]
     3a4:	sub	r0, r0, #2
     3a8:	add	r0, r1, r0, lsl #4
     3ac:	ldr	r0, [r0]
     3b0:	ldr	r0, [r0, #4]
     3b4:	ldr	r0, [r0, #44]	; 0x2c
     3b8:	str	r0, [sp, #12]
     3bc:	ldr	r0, [sp, #8]
     3c0:	cmp	r0, #0
     3c4:	blt	3d8 <coda_netcdf_cursor_goto_next_array_element+0x88>
     3c8:	ldr	r0, [sp, #8]
     3cc:	ldr	r1, [sp, #12]
     3d0:	cmp	r0, r1
     3d4:	blt	3fc <coda_netcdf_cursor_goto_next_array_element+0xac>
     3d8:	ldr	r2, [sp, #8]
     3dc:	ldr	r3, [sp, #12]
     3e0:	mvn	r0, #106	; 0x6a
     3e4:	movw	r1, #0
     3e8:	movt	r1, #0
     3ec:	bl	0 <coda_set_error>
     3f0:	mvn	r0, #0
     3f4:	str	r0, [fp, #-4]
     3f8:	b	428 <coda_netcdf_cursor_goto_next_array_element+0xd8>
     3fc:	b	400 <coda_netcdf_cursor_goto_next_array_element+0xb0>
     400:	ldr	r0, [fp, #-8]
     404:	add	r1, r0, #8
     408:	ldr	r0, [r0, #4]
     40c:	sub	r0, r0, #1
     410:	add	r0, r1, r0, lsl #4
     414:	ldr	r1, [r0, #4]
     418:	add	r1, r1, #1
     41c:	str	r1, [r0, #4]
     420:	movw	r0, #0
     424:	str	r0, [fp, #-4]
     428:	ldr	r0, [fp, #-4]
     42c:	mov	sp, fp
     430:	pop	{fp, pc}
     434:	.word	0x000000c8

00000438 <coda_netcdf_cursor_goto_attributes>:
     438:	push	{fp, lr}
     43c:	mov	fp, sp
     440:	sub	sp, sp, #8
     444:	str	r0, [sp, #4]
     448:	ldr	r0, [sp, #4]
     44c:	add	r1, r0, #8
     450:	ldr	r0, [r0, #4]
     454:	sub	r0, r0, #1
     458:	add	r0, r1, r0, lsl #4
     45c:	ldr	r0, [r0]
     460:	str	r0, [sp]
     464:	ldr	r0, [sp, #4]
     468:	ldr	r1, [r0, #4]
     46c:	add	r1, r1, #1
     470:	str	r1, [r0, #4]
     474:	ldr	r0, [sp]
     478:	ldr	r0, [r0, #8]
     47c:	movw	r1, #0
     480:	cmp	r0, r1
     484:	beq	4ac <coda_netcdf_cursor_goto_attributes+0x74>
     488:	ldr	r0, [sp]
     48c:	ldr	r0, [r0, #8]
     490:	ldr	r1, [sp, #4]
     494:	add	r2, r1, #8
     498:	ldr	r1, [r1, #4]
     49c:	sub	r1, r1, #1
     4a0:	add	r1, r2, r1, lsl #4
     4a4:	str	r0, [r1]
     4a8:	b	4cc <coda_netcdf_cursor_goto_attributes+0x94>
     4ac:	mov	r0, #6
     4b0:	bl	0 <coda_mem_empty_record>
     4b4:	ldr	r1, [sp, #4]
     4b8:	add	r2, r1, #8
     4bc:	ldr	r1, [r1, #4]
     4c0:	sub	r1, r1, #1
     4c4:	add	r1, r2, r1, lsl #4
     4c8:	str	r0, [r1]
     4cc:	ldr	r0, [sp, #4]
     4d0:	ldr	r1, [r0, #4]
     4d4:	add	r0, r0, r1, lsl #4
     4d8:	mvn	r1, #0
     4dc:	str	r1, [r0, #-4]
     4e0:	ldr	r0, [sp, #4]
     4e4:	ldr	r2, [r0, #4]
     4e8:	str	r1, [r0, r2, lsl #4]!
     4ec:	str	r1, [r0, #4]
     4f0:	movw	r0, #0
     4f4:	mov	sp, fp
     4f8:	pop	{fp, pc}

000004fc <coda_netcdf_cursor_get_num_elements>:
     4fc:	sub	sp, sp, #8
     500:	str	r0, [sp, #4]
     504:	str	r1, [sp]
     508:	ldr	r0, [sp, #4]
     50c:	add	r1, r0, #8
     510:	ldr	r0, [r0, #4]
     514:	sub	r0, r0, #1
     518:	add	r0, r1, r0, lsl #4
     51c:	ldr	r0, [r0]
     520:	ldr	r0, [r0, #4]
     524:	ldr	r0, [r0, #8]
     528:	cmp	r0, #1
     52c:	bne	55c <coda_netcdf_cursor_get_num_elements+0x60>
     530:	ldr	r0, [sp, #4]
     534:	add	r1, r0, #8
     538:	ldr	r0, [r0, #4]
     53c:	sub	r0, r0, #1
     540:	add	r0, r1, r0, lsl #4
     544:	ldr	r0, [r0]
     548:	ldr	r0, [r0, #4]
     54c:	ldr	r0, [r0, #44]	; 0x2c
     550:	ldr	r1, [sp]
     554:	str	r0, [r1]
     558:	b	568 <coda_netcdf_cursor_get_num_elements+0x6c>
     55c:	ldr	r0, [sp]
     560:	movw	r1, #1
     564:	str	r1, [r0]
     568:	movw	r0, #0
     56c:	add	sp, sp, #8
     570:	bx	lr

00000574 <coda_netcdf_cursor_get_string_length>:
     574:	push	{fp, lr}
     578:	mov	fp, sp
     57c:	sub	sp, sp, #8
     580:	str	r0, [sp, #4]
     584:	str	r1, [sp]
     588:	ldr	r0, [sp, #4]
     58c:	add	r1, r0, #8
     590:	ldr	r0, [r0, #4]
     594:	sub	r0, r0, #1
     598:	add	r0, r1, r0, lsl #4
     59c:	ldr	r0, [r0]
     5a0:	ldr	r0, [r0, #4]
     5a4:	ldr	r1, [sp]
     5a8:	bl	0 <coda_type_get_string_length>
     5ac:	mov	sp, fp
     5b0:	pop	{fp, pc}

000005b4 <coda_netcdf_cursor_get_array_dim>:
     5b4:	push	{fp, lr}
     5b8:	mov	fp, sp
     5bc:	sub	sp, sp, #16
     5c0:	str	r0, [fp, #-4]
     5c4:	str	r1, [sp, #8]
     5c8:	str	r2, [sp, #4]
     5cc:	ldr	r0, [fp, #-4]
     5d0:	add	r1, r0, #8
     5d4:	ldr	r0, [r0, #4]
     5d8:	sub	r0, r0, #1
     5dc:	add	r0, r1, r0, lsl #4
     5e0:	ldr	r0, [r0]
     5e4:	ldr	r0, [r0, #4]
     5e8:	ldr	r1, [sp, #8]
     5ec:	ldr	r2, [sp, #4]
     5f0:	bl	0 <coda_type_get_array_dim>
     5f4:	mov	sp, fp
     5f8:	pop	{fp, pc}

000005fc <coda_netcdf_cursor_read_int8>:
     5fc:	push	{fp, lr}
     600:	mov	fp, sp
     604:	sub	sp, sp, #8
     608:	str	r0, [sp, #4]
     60c:	str	r1, [sp]
     610:	ldr	r0, [sp, #4]
     614:	ldr	r1, [sp]
     618:	mvn	r2, #0
     61c:	bl	628 <read_basic_type>
     620:	mov	sp, fp
     624:	pop	{fp, pc}

00000628 <read_basic_type>:
     628:	push	{r4, sl, fp, lr}
     62c:	add	fp, sp, #8
     630:	sub	sp, sp, #72	; 0x48
     634:	str	r0, [fp, #-16]
     638:	str	r1, [fp, #-20]	; 0xffffffec
     63c:	str	r2, [fp, #-24]	; 0xffffffe8
     640:	ldr	r0, [fp, #-16]
     644:	ldr	r1, [r0, #4]
     648:	add	r0, r0, r1, lsl #4
     64c:	ldr	r0, [r0, #-8]
     650:	str	r0, [fp, #-28]	; 0xffffffe4
     654:	ldr	r0, [fp, #-16]
     658:	ldr	r0, [r0]
     65c:	str	r0, [fp, #-32]	; 0xffffffe0
     660:	ldr	r0, [fp, #-28]	; 0xffffffe4
     664:	ldr	r1, [r0, #16]
     668:	ldr	r0, [r0, #20]
     66c:	str	r0, [sp, #44]	; 0x2c
     670:	str	r1, [sp, #40]	; 0x28
     674:	ldr	r0, [fp, #-28]	; 0xffffffe4
     678:	ldr	r0, [r0, #4]
     67c:	ldr	r1, [r0, #24]
     680:	ldr	r0, [r0, #28]
     684:	lsr	r1, r1, #3
     688:	orr	r1, r1, r0, lsl #29
     68c:	asr	r0, r0, #3
     690:	str	r0, [sp, #36]	; 0x24
     694:	str	r1, [sp, #32]
     698:	ldr	r0, [fp, #-16]
     69c:	add	r1, r0, #8
     6a0:	ldr	r0, [r0, #4]
     6a4:	sub	r0, r0, #2
     6a8:	add	r0, r1, r0, lsl #4
     6ac:	ldr	r0, [r0]
     6b0:	ldr	r0, [r0]
     6b4:	cmp	r0, #104	; 0x68
     6b8:	bne	7f8 <read_basic_type+0x1d0>
     6bc:	ldr	r0, [fp, #-16]
     6c0:	add	r1, r0, #8
     6c4:	ldr	r0, [r0, #4]
     6c8:	sub	r0, r0, #2
     6cc:	add	r0, r1, r0, lsl #4
     6d0:	ldr	r0, [r0]
     6d4:	ldr	r0, [r0, #4]
     6d8:	ldr	r0, [r0, #8]
     6dc:	cmp	r0, #1
     6e0:	bne	7f8 <read_basic_type+0x1d0>
     6e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     6e8:	ldr	r0, [r0, #24]
     6ec:	cmp	r0, #0
     6f0:	beq	7b4 <read_basic_type+0x18c>
     6f4:	ldr	r0, [fp, #-16]
     6f8:	ldr	r1, [r0, #4]
     6fc:	add	r0, r0, r1, lsl #4
     700:	ldr	r0, [r0, #-24]	; 0xffffffe8
     704:	str	r0, [sp, #28]
     708:	ldr	r0, [sp, #28]
     70c:	ldr	r0, [r0, #4]
     710:	ldr	r1, [r0, #44]	; 0x2c
     714:	ldr	r0, [r0, #52]	; 0x34
     718:	sdiv	r0, r1, r0
     71c:	str	r0, [sp, #24]
     720:	ldr	r0, [fp, #-16]
     724:	ldr	r1, [r0, #4]
     728:	add	r0, r0, r1, lsl #4
     72c:	ldr	r0, [r0, #-4]
     730:	ldr	r1, [sp, #24]
     734:	sdiv	r0, r0, r1
     738:	str	r0, [sp, #20]
     73c:	ldr	r0, [sp, #20]
     740:	ldr	r1, [fp, #-32]	; 0xffffffe0
     744:	ldr	r1, [r1, #60]	; 0x3c
     748:	mul	r0, r0, r1
     74c:	ldr	r1, [sp, #40]	; 0x28
     750:	ldr	r2, [sp, #44]	; 0x2c
     754:	adds	r1, r1, r0
     758:	adc	r0, r2, r0, asr #31
     75c:	str	r1, [sp, #40]	; 0x28
     760:	str	r0, [sp, #44]	; 0x2c
     764:	ldr	r0, [fp, #-16]
     768:	ldr	r1, [r0, #4]
     76c:	add	r0, r0, r1, lsl #4
     770:	ldr	r0, [r0, #-4]
     774:	ldr	r1, [sp, #20]
     778:	ldr	r2, [sp, #24]
     77c:	mls	r0, r1, r2, r0
     780:	asr	r1, r0, #31
     784:	ldr	r2, [sp, #32]
     788:	ldr	r3, [sp, #36]	; 0x24
     78c:	umull	ip, lr, r0, r2
     790:	mla	r0, r0, r3, lr
     794:	mla	r0, r1, r2, r0
     798:	ldr	r1, [sp, #40]	; 0x28
     79c:	ldr	r2, [sp, #44]	; 0x2c
     7a0:	adds	r1, r1, ip
     7a4:	adc	r0, r2, r0
     7a8:	str	r1, [sp, #40]	; 0x28
     7ac:	str	r0, [sp, #44]	; 0x2c
     7b0:	b	7f4 <read_basic_type+0x1cc>
     7b4:	ldr	r0, [fp, #-16]
     7b8:	ldr	r1, [r0, #4]
     7bc:	add	r0, r0, r1, lsl #4
     7c0:	ldr	r0, [r0, #-4]
     7c4:	asr	r1, r0, #31
     7c8:	ldr	r2, [sp, #32]
     7cc:	ldr	r3, [sp, #36]	; 0x24
     7d0:	umull	ip, lr, r0, r2
     7d4:	mla	r0, r0, r3, lr
     7d8:	mla	r0, r1, r2, r0
     7dc:	ldr	r1, [sp, #40]	; 0x28
     7e0:	ldr	r2, [sp, #44]	; 0x2c
     7e4:	adds	r1, r1, ip
     7e8:	adc	r0, r2, r0
     7ec:	str	r1, [sp, #40]	; 0x28
     7f0:	str	r0, [sp, #44]	; 0x2c
     7f4:	b	7f8 <read_basic_type+0x1d0>
     7f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     7fc:	cmp	r0, #0
     800:	blt	868 <read_basic_type+0x240>
     804:	ldr	r0, [sp, #32]
     808:	ldr	r1, [sp, #36]	; 0x24
     80c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     810:	subs	r0, r2, r0
     814:	rscs	r1, r1, r2, asr #31
     818:	bge	868 <read_basic_type+0x240>
     81c:	b	820 <read_basic_type+0x1f8>
     820:	ldr	r0, [fp, #-32]	; 0xffffffe0
     824:	ldr	r0, [r0, #52]	; 0x34
     828:	ldr	r2, [sp, #40]	; 0x28
     82c:	ldr	r3, [sp, #44]	; 0x2c
     830:	ldr	r1, [fp, #-24]	; 0xffffffe8
     834:	asr	ip, r1, #31
     838:	ldr	lr, [fp, #-20]	; 0xffffffec
     83c:	mov	r4, sp
     840:	str	lr, [r4, #8]
     844:	str	ip, [r4, #4]
     848:	str	r1, [r4]
     84c:	bl	148c <read_bytes>
     850:	cmp	r0, #0
     854:	beq	864 <read_basic_type+0x23c>
     858:	mvn	r0, #0
     85c:	str	r0, [fp, #-12]
     860:	b	9ac <read_basic_type+0x384>
     864:	b	8b0 <read_basic_type+0x288>
     868:	ldr	r0, [fp, #-32]	; 0xffffffe0
     86c:	ldr	r0, [r0, #52]	; 0x34
     870:	ldr	r2, [sp, #40]	; 0x28
     874:	ldr	r3, [sp, #44]	; 0x2c
     878:	ldr	r1, [sp, #32]
     87c:	ldr	ip, [sp, #36]	; 0x24
     880:	ldr	lr, [fp, #-20]	; 0xffffffec
     884:	mov	r4, sp
     888:	str	lr, [r4, #8]
     88c:	str	ip, [r4, #4]
     890:	str	r1, [r4]
     894:	bl	148c <read_bytes>
     898:	cmp	r0, #0
     89c:	beq	8ac <read_basic_type+0x284>
     8a0:	mvn	r0, #0
     8a4:	str	r0, [fp, #-12]
     8a8:	b	9ac <read_basic_type+0x384>
     8ac:	b	8b0 <read_basic_type+0x288>
     8b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     8b4:	ldr	r0, [r0, #4]
     8b8:	ldr	r0, [r0, #8]
     8bc:	cmp	r0, #2
     8c0:	beq	8d8 <read_basic_type+0x2b0>
     8c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     8c8:	ldr	r0, [r0, #4]
     8cc:	ldr	r0, [r0, #8]
     8d0:	cmp	r0, #3
     8d4:	bne	9a4 <read_basic_type+0x37c>
     8d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     8dc:	ldr	r0, [r0, #4]
     8e0:	ldr	r1, [r0, #24]
     8e4:	ldr	r0, [r0, #28]
     8e8:	eor	r2, r1, #8
     8ec:	orr	r2, r2, r0
     8f0:	cmp	r2, #0
     8f4:	str	r1, [sp, #16]
     8f8:	str	r0, [sp, #12]
     8fc:	beq	958 <read_basic_type+0x330>
     900:	b	904 <read_basic_type+0x2dc>
     904:	ldr	r0, [sp, #16]
     908:	eor	r1, r0, #16
     90c:	ldr	r2, [sp, #12]
     910:	orr	r1, r1, r2
     914:	cmp	r1, #0
     918:	beq	95c <read_basic_type+0x334>
     91c:	b	920 <read_basic_type+0x2f8>
     920:	ldr	r0, [sp, #16]
     924:	eor	r1, r0, #32
     928:	ldr	r2, [sp, #12]
     92c:	orr	r1, r1, r2
     930:	cmp	r1, #0
     934:	beq	968 <read_basic_type+0x340>
     938:	b	93c <read_basic_type+0x314>
     93c:	ldr	r0, [sp, #16]
     940:	eor	r1, r0, #64	; 0x40
     944:	ldr	r2, [sp, #12]
     948:	orr	r1, r1, r2
     94c:	cmp	r1, #0
     950:	beq	974 <read_basic_type+0x34c>
     954:	b	980 <read_basic_type+0x358>
     958:	b	9a0 <read_basic_type+0x378>
     95c:	ldr	r0, [fp, #-20]	; 0xffffffec
     960:	bl	16e0 <swap2>
     964:	b	9a0 <read_basic_type+0x378>
     968:	ldr	r0, [fp, #-20]	; 0xffffffec
     96c:	bl	174c <swap4>
     970:	b	9a0 <read_basic_type+0x378>
     974:	ldr	r0, [fp, #-20]	; 0xffffffec
     978:	bl	180c <swap8>
     97c:	b	9a0 <read_basic_type+0x378>
     980:	movw	r0, #0
     984:	movt	r0, #0
     988:	movw	r1, #0
     98c:	movt	r1, #0
     990:	movw	r2, #422	; 0x1a6
     994:	movw	r3, #0
     998:	movt	r3, #0
     99c:	bl	0 <__assert_fail>
     9a0:	b	9a4 <read_basic_type+0x37c>
     9a4:	movw	r0, #0
     9a8:	str	r0, [fp, #-12]
     9ac:	ldr	r0, [fp, #-12]
     9b0:	sub	sp, fp, #8
     9b4:	pop	{r4, sl, fp, pc}

000009b8 <coda_netcdf_cursor_read_int16>:
     9b8:	push	{fp, lr}
     9bc:	mov	fp, sp
     9c0:	sub	sp, sp, #8
     9c4:	str	r0, [sp, #4]
     9c8:	str	r1, [sp]
     9cc:	ldr	r0, [sp, #4]
     9d0:	ldr	r1, [sp]
     9d4:	mvn	r2, #0
     9d8:	bl	628 <read_basic_type>
     9dc:	mov	sp, fp
     9e0:	pop	{fp, pc}

000009e4 <coda_netcdf_cursor_read_int32>:
     9e4:	push	{fp, lr}
     9e8:	mov	fp, sp
     9ec:	sub	sp, sp, #8
     9f0:	str	r0, [sp, #4]
     9f4:	str	r1, [sp]
     9f8:	ldr	r0, [sp, #4]
     9fc:	ldr	r1, [sp]
     a00:	mvn	r2, #0
     a04:	bl	628 <read_basic_type>
     a08:	mov	sp, fp
     a0c:	pop	{fp, pc}

00000a10 <coda_netcdf_cursor_read_float>:
     a10:	push	{fp, lr}
     a14:	mov	fp, sp
     a18:	sub	sp, sp, #8
     a1c:	str	r0, [sp, #4]
     a20:	str	r1, [sp]
     a24:	ldr	r0, [sp, #4]
     a28:	ldr	r1, [sp]
     a2c:	mvn	r2, #0
     a30:	bl	628 <read_basic_type>
     a34:	mov	sp, fp
     a38:	pop	{fp, pc}

00000a3c <coda_netcdf_cursor_read_double>:
     a3c:	push	{fp, lr}
     a40:	mov	fp, sp
     a44:	sub	sp, sp, #8
     a48:	str	r0, [sp, #4]
     a4c:	str	r1, [sp]
     a50:	ldr	r0, [sp, #4]
     a54:	ldr	r1, [sp]
     a58:	mvn	r2, #0
     a5c:	bl	628 <read_basic_type>
     a60:	mov	sp, fp
     a64:	pop	{fp, pc}

00000a68 <coda_netcdf_cursor_read_char>:
     a68:	push	{fp, lr}
     a6c:	mov	fp, sp
     a70:	sub	sp, sp, #8
     a74:	str	r0, [sp, #4]
     a78:	str	r1, [sp]
     a7c:	ldr	r0, [sp, #4]
     a80:	ldr	r1, [sp]
     a84:	mvn	r2, #0
     a88:	bl	628 <read_basic_type>
     a8c:	mov	sp, fp
     a90:	pop	{fp, pc}

00000a94 <coda_netcdf_cursor_read_string>:
     a94:	push	{fp, lr}
     a98:	mov	fp, sp
     a9c:	sub	sp, sp, #16
     aa0:	str	r0, [sp, #8]
     aa4:	str	r1, [sp, #4]
     aa8:	str	r2, [sp]
     aac:	ldr	r0, [sp, #8]
     ab0:	ldr	r1, [sp, #4]
     ab4:	ldr	r2, [sp]
     ab8:	bl	628 <read_basic_type>
     abc:	cmp	r0, #0
     ac0:	beq	ad0 <coda_netcdf_cursor_read_string+0x3c>
     ac4:	mvn	r0, #0
     ac8:	str	r0, [fp, #-4]
     acc:	b	af0 <coda_netcdf_cursor_read_string+0x5c>
     ad0:	ldr	r0, [sp, #4]
     ad4:	ldr	r1, [sp]
     ad8:	sub	r1, r1, #1
     adc:	add	r0, r0, r1
     ae0:	movw	r1, #0
     ae4:	strb	r1, [r0]
     ae8:	movw	r0, #0
     aec:	str	r0, [fp, #-4]
     af0:	ldr	r0, [fp, #-4]
     af4:	mov	sp, fp
     af8:	pop	{fp, pc}

00000afc <coda_netcdf_cursor_read_int8_array>:
     afc:	push	{fp, lr}
     b00:	mov	fp, sp
     b04:	sub	sp, sp, #8
     b08:	str	r0, [sp, #4]
     b0c:	str	r1, [sp]
     b10:	ldr	r0, [sp, #4]
     b14:	ldr	r1, [sp]
     b18:	bl	b24 <read_array>
     b1c:	mov	sp, fp
     b20:	pop	{fp, pc}

00000b24 <read_array>:
     b24:	push	{r4, r5, fp, lr}
     b28:	add	fp, sp, #8
     b2c:	sub	sp, sp, #56	; 0x38
     b30:	str	r0, [fp, #-16]
     b34:	str	r1, [fp, #-20]	; 0xffffffec
     b38:	ldr	r0, [fp, #-16]
     b3c:	ldr	r1, [r0, #4]
     b40:	add	r0, r0, r1, lsl #4
     b44:	ldr	r0, [r0, #-8]
     b48:	str	r0, [fp, #-24]	; 0xffffffe8
     b4c:	ldr	r0, [fp, #-16]
     b50:	ldr	r0, [r0]
     b54:	str	r0, [fp, #-28]	; 0xffffffe4
     b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b5c:	ldr	r1, [r0, #4]
     b60:	ldr	r0, [r0, #12]
     b64:	ldr	r1, [r1, #44]	; 0x2c
     b68:	ldr	r0, [r0, #4]
     b6c:	ldr	r2, [r0, #24]
     b70:	ldr	r0, [r0, #28]
     b74:	lsr	r2, r2, #3
     b78:	orr	r0, r2, r0, lsl #29
     b7c:	mul	r0, r1, r0
     b80:	str	r0, [sp, #32]
     b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b88:	ldr	r0, [r0, #12]
     b8c:	ldr	r0, [r0, #24]
     b90:	cmp	r0, #0
     b94:	beq	c68 <read_array+0x144>
     b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b9c:	ldr	r0, [r0, #4]
     ba0:	ldr	r0, [r0, #52]	; 0x34
     ba4:	str	r0, [sp, #24]
     ba8:	ldr	r0, [sp, #24]
     bac:	ldr	r1, [sp, #32]
     bb0:	sdiv	r0, r1, r0
     bb4:	str	r0, [sp, #32]
     bb8:	movw	r0, #0
     bbc:	str	r0, [sp, #28]
     bc0:	ldr	r0, [sp, #28]
     bc4:	ldr	r1, [sp, #24]
     bc8:	cmp	r0, r1
     bcc:	bge	c64 <read_array+0x140>
     bd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     bd4:	ldr	r1, [r0, #52]	; 0x34
     bd8:	ldr	r0, [r0, #60]	; 0x3c
     bdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
     be0:	ldr	r2, [r2, #12]
     be4:	ldr	r3, [r2, #16]
     be8:	ldr	r2, [r2, #20]
     bec:	ldr	ip, [sp, #28]
     bf0:	mul	r0, ip, r0
     bf4:	adds	r3, r3, r0
     bf8:	adc	r0, r2, r0, asr #31
     bfc:	ldr	r2, [sp, #32]
     c00:	asr	ip, r2, #31
     c04:	ldr	lr, [fp, #-20]	; 0xffffffec
     c08:	ldr	r4, [sp, #28]
     c0c:	ldr	r5, [sp, #32]
     c10:	mul	r4, r4, r5
     c14:	add	lr, lr, r4
     c18:	mov	r4, sp
     c1c:	str	lr, [r4, #8]
     c20:	str	ip, [r4, #4]
     c24:	str	r2, [r4]
     c28:	str	r0, [sp, #20]
     c2c:	mov	r0, r1
     c30:	mov	r2, r3
     c34:	ldr	r3, [sp, #20]
     c38:	bl	148c <read_bytes>
     c3c:	cmp	r0, #0
     c40:	beq	c50 <read_array+0x12c>
     c44:	mvn	r0, #0
     c48:	str	r0, [fp, #-12]
     c4c:	b	e34 <read_array+0x310>
     c50:	b	c54 <read_array+0x130>
     c54:	ldr	r0, [sp, #28]
     c58:	add	r0, r0, #1
     c5c:	str	r0, [sp, #28]
     c60:	b	bc0 <read_array+0x9c>
     c64:	b	cb8 <read_array+0x194>
     c68:	ldr	r0, [fp, #-28]	; 0xffffffe4
     c6c:	ldr	r0, [r0, #52]	; 0x34
     c70:	ldr	r1, [fp, #-24]	; 0xffffffe8
     c74:	ldr	r1, [r1, #12]
     c78:	ldr	r2, [r1, #16]
     c7c:	ldr	r3, [r1, #20]
     c80:	ldr	r1, [sp, #32]
     c84:	asr	ip, r1, #31
     c88:	ldr	lr, [fp, #-20]	; 0xffffffec
     c8c:	mov	r4, sp
     c90:	str	lr, [r4, #8]
     c94:	str	ip, [r4, #4]
     c98:	str	r1, [r4]
     c9c:	bl	148c <read_bytes>
     ca0:	cmp	r0, #0
     ca4:	beq	cb4 <read_array+0x190>
     ca8:	mvn	r0, #0
     cac:	str	r0, [fp, #-12]
     cb0:	b	e34 <read_array+0x310>
     cb4:	b	cb8 <read_array+0x194>
     cb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     cbc:	ldr	r0, [r0, #12]
     cc0:	ldr	r0, [r0, #4]
     cc4:	ldr	r1, [r0, #24]
     cc8:	ldr	r0, [r0, #28]
     ccc:	eor	r2, r1, #8
     cd0:	orr	r2, r2, r0
     cd4:	cmp	r2, #0
     cd8:	str	r1, [sp, #16]
     cdc:	str	r0, [sp, #12]
     ce0:	beq	d3c <read_array+0x218>
     ce4:	b	ce8 <read_array+0x1c4>
     ce8:	ldr	r0, [sp, #16]
     cec:	eor	r1, r0, #16
     cf0:	ldr	r2, [sp, #12]
     cf4:	orr	r1, r1, r2
     cf8:	cmp	r1, #0
     cfc:	beq	d40 <read_array+0x21c>
     d00:	b	d04 <read_array+0x1e0>
     d04:	ldr	r0, [sp, #16]
     d08:	eor	r1, r0, #32
     d0c:	ldr	r2, [sp, #12]
     d10:	orr	r1, r1, r2
     d14:	cmp	r1, #0
     d18:	beq	d84 <read_array+0x260>
     d1c:	b	d20 <read_array+0x1fc>
     d20:	ldr	r0, [sp, #16]
     d24:	eor	r1, r0, #64	; 0x40
     d28:	ldr	r2, [sp, #12]
     d2c:	orr	r1, r1, r2
     d30:	cmp	r1, #0
     d34:	beq	dc8 <read_array+0x2a4>
     d38:	b	e0c <read_array+0x2e8>
     d3c:	b	e2c <read_array+0x308>
     d40:	movw	r0, #0
     d44:	str	r0, [sp, #28]
     d48:	ldr	r0, [sp, #28]
     d4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d50:	ldr	r1, [r1, #4]
     d54:	ldr	r1, [r1, #44]	; 0x2c
     d58:	cmp	r0, r1
     d5c:	bge	d80 <read_array+0x25c>
     d60:	ldr	r0, [fp, #-20]	; 0xffffffec
     d64:	ldr	r1, [sp, #28]
     d68:	add	r0, r0, r1, lsl #1
     d6c:	bl	16e0 <swap2>
     d70:	ldr	r0, [sp, #28]
     d74:	add	r0, r0, #1
     d78:	str	r0, [sp, #28]
     d7c:	b	d48 <read_array+0x224>
     d80:	b	e2c <read_array+0x308>
     d84:	movw	r0, #0
     d88:	str	r0, [sp, #28]
     d8c:	ldr	r0, [sp, #28]
     d90:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d94:	ldr	r1, [r1, #4]
     d98:	ldr	r1, [r1, #44]	; 0x2c
     d9c:	cmp	r0, r1
     da0:	bge	dc4 <read_array+0x2a0>
     da4:	ldr	r0, [fp, #-20]	; 0xffffffec
     da8:	ldr	r1, [sp, #28]
     dac:	add	r0, r0, r1, lsl #2
     db0:	bl	174c <swap4>
     db4:	ldr	r0, [sp, #28]
     db8:	add	r0, r0, #1
     dbc:	str	r0, [sp, #28]
     dc0:	b	d8c <read_array+0x268>
     dc4:	b	e2c <read_array+0x308>
     dc8:	movw	r0, #0
     dcc:	str	r0, [sp, #28]
     dd0:	ldr	r0, [sp, #28]
     dd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     dd8:	ldr	r1, [r1, #4]
     ddc:	ldr	r1, [r1, #44]	; 0x2c
     de0:	cmp	r0, r1
     de4:	bge	e08 <read_array+0x2e4>
     de8:	ldr	r0, [fp, #-20]	; 0xffffffec
     dec:	ldr	r1, [sp, #28]
     df0:	add	r0, r0, r1, lsl #3
     df4:	bl	180c <swap8>
     df8:	ldr	r0, [sp, #28]
     dfc:	add	r0, r0, #1
     e00:	str	r0, [sp, #28]
     e04:	b	dd0 <read_array+0x2ac>
     e08:	b	e2c <read_array+0x308>
     e0c:	movw	r0, #0
     e10:	movt	r0, #0
     e14:	movw	r1, #0
     e18:	movt	r1, #0
     e1c:	movw	r2, #262	; 0x106
     e20:	movw	r3, #0
     e24:	movt	r3, #0
     e28:	bl	0 <__assert_fail>
     e2c:	movw	r0, #0
     e30:	str	r0, [fp, #-12]
     e34:	ldr	r0, [fp, #-12]
     e38:	sub	sp, fp, #8
     e3c:	pop	{r4, r5, fp, pc}

00000e40 <coda_netcdf_cursor_read_int16_array>:
     e40:	push	{fp, lr}
     e44:	mov	fp, sp
     e48:	sub	sp, sp, #8
     e4c:	str	r0, [sp, #4]
     e50:	str	r1, [sp]
     e54:	ldr	r0, [sp, #4]
     e58:	ldr	r1, [sp]
     e5c:	bl	b24 <read_array>
     e60:	mov	sp, fp
     e64:	pop	{fp, pc}

00000e68 <coda_netcdf_cursor_read_int32_array>:
     e68:	push	{fp, lr}
     e6c:	mov	fp, sp
     e70:	sub	sp, sp, #8
     e74:	str	r0, [sp, #4]
     e78:	str	r1, [sp]
     e7c:	ldr	r0, [sp, #4]
     e80:	ldr	r1, [sp]
     e84:	bl	b24 <read_array>
     e88:	mov	sp, fp
     e8c:	pop	{fp, pc}

00000e90 <coda_netcdf_cursor_read_float_array>:
     e90:	push	{fp, lr}
     e94:	mov	fp, sp
     e98:	sub	sp, sp, #8
     e9c:	str	r0, [sp, #4]
     ea0:	str	r1, [sp]
     ea4:	ldr	r0, [sp, #4]
     ea8:	ldr	r1, [sp]
     eac:	bl	b24 <read_array>
     eb0:	mov	sp, fp
     eb4:	pop	{fp, pc}

00000eb8 <coda_netcdf_cursor_read_double_array>:
     eb8:	push	{fp, lr}
     ebc:	mov	fp, sp
     ec0:	sub	sp, sp, #8
     ec4:	str	r0, [sp, #4]
     ec8:	str	r1, [sp]
     ecc:	ldr	r0, [sp, #4]
     ed0:	ldr	r1, [sp]
     ed4:	bl	b24 <read_array>
     ed8:	mov	sp, fp
     edc:	pop	{fp, pc}

00000ee0 <coda_netcdf_cursor_read_char_array>:
     ee0:	push	{fp, lr}
     ee4:	mov	fp, sp
     ee8:	sub	sp, sp, #8
     eec:	str	r0, [sp, #4]
     ef0:	str	r1, [sp]
     ef4:	ldr	r0, [sp, #4]
     ef8:	ldr	r1, [sp]
     efc:	bl	b24 <read_array>
     f00:	mov	sp, fp
     f04:	pop	{fp, pc}

00000f08 <coda_netcdf_cursor_read_int8_partial_array>:
     f08:	push	{fp, lr}
     f0c:	mov	fp, sp
     f10:	sub	sp, sp, #16
     f14:	str	r0, [fp, #-4]
     f18:	str	r1, [sp, #8]
     f1c:	str	r2, [sp, #4]
     f20:	str	r3, [sp]
     f24:	ldr	r0, [fp, #-4]
     f28:	ldr	r1, [sp, #8]
     f2c:	ldr	r2, [sp, #4]
     f30:	ldr	r3, [sp]
     f34:	bl	f40 <read_partial_array>
     f38:	mov	sp, fp
     f3c:	pop	{fp, pc}

00000f40 <read_partial_array>:
     f40:	push	{r4, r5, fp, lr}
     f44:	add	fp, sp, #8
     f48:	sub	sp, sp, #96	; 0x60
     f4c:	str	r0, [fp, #-16]
     f50:	str	r1, [fp, #-20]	; 0xffffffec
     f54:	str	r2, [fp, #-24]	; 0xffffffe8
     f58:	str	r3, [fp, #-28]	; 0xffffffe4
     f5c:	ldr	r0, [fp, #-16]
     f60:	ldr	r1, [r0, #4]
     f64:	add	r0, r0, r1, lsl #4
     f68:	ldr	r0, [r0, #-8]
     f6c:	str	r0, [fp, #-32]	; 0xffffffe0
     f70:	ldr	r0, [fp, #-16]
     f74:	ldr	r0, [r0]
     f78:	str	r0, [fp, #-36]	; 0xffffffdc
     f7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f80:	ldr	r0, [r0, #12]
     f84:	ldr	r0, [r0, #4]
     f88:	ldr	r1, [r0, #24]
     f8c:	ldr	r0, [r0, #28]
     f90:	lsr	r1, r1, #3
     f94:	orr	r0, r1, r0, lsl #29
     f98:	str	r0, [fp, #-40]	; 0xffffffd8
     f9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     fa0:	ldr	r0, [r0, #12]
     fa4:	ldr	r0, [r0, #24]
     fa8:	cmp	r0, #0
     fac:	beq	117c <read_partial_array+0x23c>
     fb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     fb4:	ldr	r0, [r0, #4]
     fb8:	ldr	r0, [r0, #52]	; 0x34
     fbc:	str	r0, [fp, #-48]	; 0xffffffd0
     fc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     fc4:	ldr	r0, [r0, #4]
     fc8:	ldr	r0, [r0, #44]	; 0x2c
     fcc:	ldr	r1, [fp, #-48]	; 0xffffffd0
     fd0:	sdiv	r0, r0, r1
     fd4:	str	r0, [sp, #52]	; 0x34
     fd8:	mov	r0, #0
     fdc:	str	r0, [sp, #44]	; 0x2c
     fe0:	str	r0, [sp, #40]	; 0x28
     fe4:	movw	r0, #0
     fe8:	str	r0, [fp, #-44]	; 0xffffffd4
     fec:	ldr	r0, [fp, #-44]	; 0xffffffd4
     ff0:	ldr	r1, [fp, #-48]	; 0xffffffd0
     ff4:	cmp	r0, r1
     ff8:	bge	1178 <read_partial_array+0x238>
     ffc:	mov	r0, #0
    1000:	str	r0, [sp, #36]	; 0x24
    1004:	str	r0, [sp, #32]
    1008:	ldr	r0, [sp, #52]	; 0x34
    100c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1010:	mul	r0, r0, r1
    1014:	asr	r1, r0, #31
    1018:	str	r0, [sp, #24]
    101c:	str	r1, [sp, #28]
    1020:	ldr	r0, [fp, #-20]	; 0xffffffec
    1024:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1028:	add	r0, r0, r1
    102c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1030:	add	r1, r1, #1
    1034:	ldr	r2, [sp, #52]	; 0x34
    1038:	mul	r1, r1, r2
    103c:	cmp	r0, r1
    1040:	bge	1070 <read_partial_array+0x130>
    1044:	ldr	r0, [fp, #-20]	; 0xffffffec
    1048:	ldr	r1, [fp, #-24]	; 0xffffffe8
    104c:	add	r0, r0, r1
    1050:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1054:	ldr	r2, [sp, #52]	; 0x34
    1058:	mls	r0, r1, r2, r0
    105c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1060:	mul	r0, r0, r1
    1064:	asr	r1, r0, #31
    1068:	str	r0, [sp, #24]
    106c:	str	r1, [sp, #28]
    1070:	ldr	r0, [fp, #-20]	; 0xffffffec
    1074:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1078:	ldr	r2, [sp, #52]	; 0x34
    107c:	mul	r1, r1, r2
    1080:	cmp	r0, r1
    1084:	ble	10cc <read_partial_array+0x18c>
    1088:	ldr	r0, [fp, #-20]	; 0xffffffec
    108c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1090:	ldr	r2, [sp, #52]	; 0x34
    1094:	mls	r0, r1, r2, r0
    1098:	ldr	r1, [fp, #-40]	; 0xffffffd8
    109c:	mul	r0, r0, r1
    10a0:	asr	r1, r0, #31
    10a4:	str	r0, [sp, #32]
    10a8:	str	r1, [sp, #36]	; 0x24
    10ac:	ldr	r0, [sp, #32]
    10b0:	ldr	r1, [sp, #36]	; 0x24
    10b4:	ldr	r2, [sp, #24]
    10b8:	ldr	r3, [sp, #28]
    10bc:	subs	r0, r2, r0
    10c0:	sbc	r1, r3, r1
    10c4:	str	r0, [sp, #24]
    10c8:	str	r1, [sp, #28]
    10cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    10d0:	ldr	r1, [r0, #52]	; 0x34
    10d4:	ldr	r0, [r0, #60]	; 0x3c
    10d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    10dc:	ldr	r2, [r2, #12]
    10e0:	ldr	r3, [r2, #16]
    10e4:	ldr	r2, [r2, #20]
    10e8:	ldr	ip, [fp, #-44]	; 0xffffffd4
    10ec:	mul	r0, ip, r0
    10f0:	adds	r3, r3, r0
    10f4:	adc	r0, r2, r0, asr #31
    10f8:	ldr	r2, [sp, #32]
    10fc:	ldr	ip, [sp, #36]	; 0x24
    1100:	adds	r2, r3, r2
    1104:	adc	r3, r0, ip
    1108:	ldr	r0, [sp, #24]
    110c:	ldr	ip, [sp, #28]
    1110:	ldr	lr, [fp, #-28]	; 0xffffffe4
    1114:	ldr	r4, [sp, #40]	; 0x28
    1118:	add	lr, lr, r4
    111c:	mov	r4, sp
    1120:	str	lr, [r4, #8]
    1124:	str	ip, [r4, #4]
    1128:	str	r0, [r4]
    112c:	mov	r0, r1
    1130:	bl	148c <read_bytes>
    1134:	cmp	r0, #0
    1138:	beq	1148 <read_partial_array+0x208>
    113c:	mvn	r0, #0
    1140:	str	r0, [fp, #-12]
    1144:	b	1368 <read_partial_array+0x428>
    1148:	ldr	r0, [sp, #24]
    114c:	ldr	r1, [sp, #28]
    1150:	ldr	r2, [sp, #40]	; 0x28
    1154:	ldr	r3, [sp, #44]	; 0x2c
    1158:	adds	r0, r2, r0
    115c:	adc	r1, r3, r1
    1160:	str	r0, [sp, #40]	; 0x28
    1164:	str	r1, [sp, #44]	; 0x2c
    1168:	ldr	r0, [fp, #-44]	; 0xffffffd4
    116c:	add	r0, r0, #1
    1170:	str	r0, [fp, #-44]	; 0xffffffd4
    1174:	b	fec <read_partial_array+0xac>
    1178:	b	11ec <read_partial_array+0x2ac>
    117c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1180:	ldr	r0, [r0, #52]	; 0x34
    1184:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1188:	ldr	r1, [r1, #12]
    118c:	ldr	r2, [r1, #16]
    1190:	ldr	r1, [r1, #20]
    1194:	ldr	r3, [fp, #-20]	; 0xffffffec
    1198:	ldr	ip, [fp, #-40]	; 0xffffffd8
    119c:	mul	r3, r3, ip
    11a0:	adds	r2, r2, r3
    11a4:	adc	r3, r1, r3, asr #31
    11a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    11ac:	mul	r1, r1, ip
    11b0:	mov	ip, r1
    11b4:	asr	lr, r1, #31
    11b8:	ldr	r4, [fp, #-28]	; 0xffffffe4
    11bc:	mov	r5, sp
    11c0:	str	r4, [r5, #8]
    11c4:	str	lr, [r5, #4]
    11c8:	str	r1, [r5]
    11cc:	str	ip, [sp, #20]
    11d0:	bl	148c <read_bytes>
    11d4:	cmp	r0, #0
    11d8:	beq	11e8 <read_partial_array+0x2a8>
    11dc:	mvn	r0, #0
    11e0:	str	r0, [fp, #-12]
    11e4:	b	1368 <read_partial_array+0x428>
    11e8:	b	11ec <read_partial_array+0x2ac>
    11ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    11f0:	ldr	r0, [r0, #12]
    11f4:	ldr	r0, [r0, #4]
    11f8:	ldr	r1, [r0, #24]
    11fc:	ldr	r0, [r0, #28]
    1200:	eor	r2, r1, #8
    1204:	orr	r2, r2, r0
    1208:	cmp	r2, #0
    120c:	str	r1, [sp, #16]
    1210:	str	r0, [sp, #12]
    1214:	beq	1270 <read_partial_array+0x330>
    1218:	b	121c <read_partial_array+0x2dc>
    121c:	ldr	r0, [sp, #16]
    1220:	eor	r1, r0, #16
    1224:	ldr	r2, [sp, #12]
    1228:	orr	r1, r1, r2
    122c:	cmp	r1, #0
    1230:	beq	1274 <read_partial_array+0x334>
    1234:	b	1238 <read_partial_array+0x2f8>
    1238:	ldr	r0, [sp, #16]
    123c:	eor	r1, r0, #32
    1240:	ldr	r2, [sp, #12]
    1244:	orr	r1, r1, r2
    1248:	cmp	r1, #0
    124c:	beq	12b8 <read_partial_array+0x378>
    1250:	b	1254 <read_partial_array+0x314>
    1254:	ldr	r0, [sp, #16]
    1258:	eor	r1, r0, #64	; 0x40
    125c:	ldr	r2, [sp, #12]
    1260:	orr	r1, r1, r2
    1264:	cmp	r1, #0
    1268:	beq	12fc <read_partial_array+0x3bc>
    126c:	b	1340 <read_partial_array+0x400>
    1270:	b	1360 <read_partial_array+0x420>
    1274:	movw	r0, #0
    1278:	str	r0, [fp, #-44]	; 0xffffffd4
    127c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1280:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1284:	ldr	r1, [r1, #4]
    1288:	ldr	r1, [r1, #44]	; 0x2c
    128c:	cmp	r0, r1
    1290:	bge	12b4 <read_partial_array+0x374>
    1294:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1298:	ldr	r1, [fp, #-44]	; 0xffffffd4
    129c:	add	r0, r0, r1, lsl #1
    12a0:	bl	16e0 <swap2>
    12a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    12a8:	add	r0, r0, #1
    12ac:	str	r0, [fp, #-44]	; 0xffffffd4
    12b0:	b	127c <read_partial_array+0x33c>
    12b4:	b	1360 <read_partial_array+0x420>
    12b8:	movw	r0, #0
    12bc:	str	r0, [fp, #-44]	; 0xffffffd4
    12c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    12c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    12c8:	ldr	r1, [r1, #4]
    12cc:	ldr	r1, [r1, #44]	; 0x2c
    12d0:	cmp	r0, r1
    12d4:	bge	12f8 <read_partial_array+0x3b8>
    12d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    12dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    12e0:	add	r0, r0, r1, lsl #2
    12e4:	bl	174c <swap4>
    12e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    12ec:	add	r0, r0, #1
    12f0:	str	r0, [fp, #-44]	; 0xffffffd4
    12f4:	b	12c0 <read_partial_array+0x380>
    12f8:	b	1360 <read_partial_array+0x420>
    12fc:	movw	r0, #0
    1300:	str	r0, [fp, #-44]	; 0xffffffd4
    1304:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1308:	ldr	r1, [fp, #-32]	; 0xffffffe0
    130c:	ldr	r1, [r1, #4]
    1310:	ldr	r1, [r1, #44]	; 0x2c
    1314:	cmp	r0, r1
    1318:	bge	133c <read_partial_array+0x3fc>
    131c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1320:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1324:	add	r0, r0, r1, lsl #3
    1328:	bl	180c <swap8>
    132c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1330:	add	r0, r0, #1
    1334:	str	r0, [fp, #-44]	; 0xffffffd4
    1338:	b	1304 <read_partial_array+0x3c4>
    133c:	b	1360 <read_partial_array+0x420>
    1340:	movw	r0, #0
    1344:	movt	r0, #0
    1348:	movw	r1, #0
    134c:	movt	r1, #0
    1350:	movw	r2, #347	; 0x15b
    1354:	movw	r3, #0
    1358:	movt	r3, #0
    135c:	bl	0 <__assert_fail>
    1360:	movw	r0, #0
    1364:	str	r0, [fp, #-12]
    1368:	ldr	r0, [fp, #-12]
    136c:	sub	sp, fp, #8
    1370:	pop	{r4, r5, fp, pc}

00001374 <coda_netcdf_cursor_read_int16_partial_array>:
    1374:	push	{fp, lr}
    1378:	mov	fp, sp
    137c:	sub	sp, sp, #16
    1380:	str	r0, [fp, #-4]
    1384:	str	r1, [sp, #8]
    1388:	str	r2, [sp, #4]
    138c:	str	r3, [sp]
    1390:	ldr	r0, [fp, #-4]
    1394:	ldr	r1, [sp, #8]
    1398:	ldr	r2, [sp, #4]
    139c:	ldr	r3, [sp]
    13a0:	bl	f40 <read_partial_array>
    13a4:	mov	sp, fp
    13a8:	pop	{fp, pc}

000013ac <coda_netcdf_cursor_read_int32_partial_array>:
    13ac:	push	{fp, lr}
    13b0:	mov	fp, sp
    13b4:	sub	sp, sp, #16
    13b8:	str	r0, [fp, #-4]
    13bc:	str	r1, [sp, #8]
    13c0:	str	r2, [sp, #4]
    13c4:	str	r3, [sp]
    13c8:	ldr	r0, [fp, #-4]
    13cc:	ldr	r1, [sp, #8]
    13d0:	ldr	r2, [sp, #4]
    13d4:	ldr	r3, [sp]
    13d8:	bl	f40 <read_partial_array>
    13dc:	mov	sp, fp
    13e0:	pop	{fp, pc}

000013e4 <coda_netcdf_cursor_read_float_partial_array>:
    13e4:	push	{fp, lr}
    13e8:	mov	fp, sp
    13ec:	sub	sp, sp, #16
    13f0:	str	r0, [fp, #-4]
    13f4:	str	r1, [sp, #8]
    13f8:	str	r2, [sp, #4]
    13fc:	str	r3, [sp]
    1400:	ldr	r0, [fp, #-4]
    1404:	ldr	r1, [sp, #8]
    1408:	ldr	r2, [sp, #4]
    140c:	ldr	r3, [sp]
    1410:	bl	f40 <read_partial_array>
    1414:	mov	sp, fp
    1418:	pop	{fp, pc}

0000141c <coda_netcdf_cursor_read_double_partial_array>:
    141c:	push	{fp, lr}
    1420:	mov	fp, sp
    1424:	sub	sp, sp, #16
    1428:	str	r0, [fp, #-4]
    142c:	str	r1, [sp, #8]
    1430:	str	r2, [sp, #4]
    1434:	str	r3, [sp]
    1438:	ldr	r0, [fp, #-4]
    143c:	ldr	r1, [sp, #8]
    1440:	ldr	r2, [sp, #4]
    1444:	ldr	r3, [sp]
    1448:	bl	f40 <read_partial_array>
    144c:	mov	sp, fp
    1450:	pop	{fp, pc}

00001454 <coda_netcdf_cursor_read_char_partial_array>:
    1454:	push	{fp, lr}
    1458:	mov	fp, sp
    145c:	sub	sp, sp, #16
    1460:	str	r0, [fp, #-4]
    1464:	str	r1, [sp, #8]
    1468:	str	r2, [sp, #4]
    146c:	str	r3, [sp]
    1470:	ldr	r0, [fp, #-4]
    1474:	ldr	r1, [sp, #8]
    1478:	ldr	r2, [sp, #4]
    147c:	ldr	r3, [sp]
    1480:	bl	f40 <read_partial_array>
    1484:	mov	sp, fp
    1488:	pop	{fp, pc}

0000148c <read_bytes>:
    148c:	push	{fp, lr}
    1490:	mov	fp, sp
    1494:	sub	sp, sp, #112	; 0x70
    1498:	ldr	r1, [fp, #12]
    149c:	ldr	ip, [fp, #8]
    14a0:	ldr	lr, [fp, #16]
    14a4:	str	r0, [fp, #-8]
    14a8:	str	r3, [fp, #-12]
    14ac:	str	r2, [fp, #-16]
    14b0:	str	r1, [fp, #-20]	; 0xffffffec
    14b4:	str	ip, [fp, #-24]	; 0xffffffe8
    14b8:	ldr	r0, [fp, #-8]
    14bc:	ldr	r0, [r0, #48]	; 0x30
    14c0:	movw	r1, #0
    14c4:	cmp	r0, r1
    14c8:	beq	15e0 <read_bytes+0x154>
    14cc:	ldr	r0, [fp, #-16]
    14d0:	ldr	r1, [fp, #-12]
    14d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    14d8:	ldr	r3, [fp, #-20]	; 0xffffffec
    14dc:	adds	r0, r0, r2
    14e0:	adc	r1, r1, r3
    14e4:	ldr	r2, [fp, #-8]
    14e8:	ldr	r3, [r2, #40]	; 0x28
    14ec:	ldr	r2, [r2, #44]	; 0x2c
    14f0:	subs	r0, r3, r0
    14f4:	sbcs	r1, r2, r1
    14f8:	bcs	15c0 <read_bytes+0x134>
    14fc:	b	1500 <read_bytes+0x74>
    1500:	ldr	r0, [fp, #-8]
    1504:	ldr	r0, [r0, #16]
    1508:	cmp	r0, #0
    150c:	beq	1520 <read_bytes+0x94>
    1510:	ldr	r0, [fp, #-8]
    1514:	ldr	r0, [r0, #16]
    1518:	cmp	r0, #1
    151c:	bne	153c <read_bytes+0xb0>
    1520:	mvn	r0, #300	; 0x12c
    1524:	movw	r1, #0
    1528:	movt	r1, #0
    152c:	bl	0 <coda_set_error>
    1530:	mvn	r0, #0
    1534:	str	r0, [fp, #-4]
    1538:	b	16d4 <read_bytes+0x248>
    153c:	add	r2, sp, #25
    1540:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1544:	ldr	r1, [fp, #-20]	; 0xffffffec
    1548:	sub	r3, fp, #45	; 0x2d
    154c:	str	r2, [sp, #20]
    1550:	mov	r2, r3
    1554:	bl	0 <coda_str64>
    1558:	ldr	r0, [fp, #-16]
    155c:	ldr	r1, [fp, #-12]
    1560:	add	r2, sp, #46	; 0x2e
    1564:	bl	0 <coda_str64>
    1568:	ldr	r0, [fp, #-8]
    156c:	ldr	r1, [r0, #40]	; 0x28
    1570:	ldr	r0, [r0, #44]	; 0x2c
    1574:	str	r0, [sp, #16]
    1578:	mov	r0, r1
    157c:	ldr	r1, [sp, #16]
    1580:	ldr	r2, [sp, #20]
    1584:	bl	0 <coda_str64>
    1588:	add	r0, sp, #25
    158c:	add	r3, sp, #46	; 0x2e
    1590:	sub	r2, fp, #45	; 0x2d
    1594:	mvn	r1, #300	; 0x12c
    1598:	str	r0, [sp, #12]
    159c:	mov	r0, r1
    15a0:	movw	r1, #0
    15a4:	movt	r1, #0
    15a8:	ldr	ip, [sp, #12]
    15ac:	str	ip, [sp]
    15b0:	bl	0 <coda_set_error>
    15b4:	mvn	r0, #0
    15b8:	str	r0, [fp, #-4]
    15bc:	b	16d4 <read_bytes+0x248>
    15c0:	ldr	r0, [fp, #16]
    15c4:	ldr	r1, [fp, #-8]
    15c8:	ldr	r1, [r1, #48]	; 0x30
    15cc:	ldr	r2, [fp, #-16]
    15d0:	add	r1, r1, r2
    15d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    15d8:	bl	0 <memcpy>
    15dc:	b	16cc <read_bytes+0x240>
    15e0:	ldr	r0, [fp, #-8]
    15e4:	ldr	r0, [r0, #16]
    15e8:	cmp	r0, #0
    15ec:	beq	1600 <read_bytes+0x174>
    15f0:	ldr	r0, [fp, #-8]
    15f4:	ldr	r0, [r0, #16]
    15f8:	cmp	r0, #1
    15fc:	bne	1604 <read_bytes+0x178>
    1600:	b	1624 <read_bytes+0x198>
    1604:	movw	r0, #0
    1608:	movt	r0, #0
    160c:	movw	r1, #0
    1610:	movt	r1, #0
    1614:	movw	r2, #83	; 0x53
    1618:	movw	r3, #0
    161c:	movt	r3, #0
    1620:	bl	0 <__assert_fail>
    1624:	ldr	r0, [fp, #-16]
    1628:	ldr	r1, [fp, #-12]
    162c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1630:	ldr	r3, [fp, #-20]	; 0xffffffec
    1634:	adds	r0, r0, r2
    1638:	adc	r1, r1, r3
    163c:	ldr	r2, [fp, #-8]
    1640:	ldr	r3, [r2, #8]
    1644:	ldr	r2, [r2, #12]
    1648:	subs	r0, r3, r0
    164c:	sbcs	r1, r2, r1
    1650:	bcs	1674 <read_bytes+0x1e8>
    1654:	b	1658 <read_bytes+0x1cc>
    1658:	mvn	r0, #300	; 0x12c
    165c:	movw	r1, #0
    1660:	movt	r1, #0
    1664:	bl	0 <coda_set_error>
    1668:	mvn	r0, #0
    166c:	str	r0, [fp, #-4]
    1670:	b	16d4 <read_bytes+0x248>
    1674:	ldr	r0, [fp, #-8]
    1678:	ldr	r0, [r0, #56]	; 0x38
    167c:	ldr	r1, [fp, #16]
    1680:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1684:	ldr	r3, [fp, #-16]
    1688:	bl	0 <pread>
    168c:	cmp	r0, #0
    1690:	bge	16c8 <read_bytes+0x23c>
    1694:	bl	0 <__errno_location>
    1698:	ldr	r0, [r0]
    169c:	bl	0 <strerror>
    16a0:	mvn	r1, #21
    16a4:	str	r0, [sp, #8]
    16a8:	mov	r0, r1
    16ac:	movw	r1, #0
    16b0:	movt	r1, #0
    16b4:	ldr	r2, [sp, #8]
    16b8:	bl	0 <coda_set_error>
    16bc:	mvn	r0, #0
    16c0:	str	r0, [fp, #-4]
    16c4:	b	16d4 <read_bytes+0x248>
    16c8:	b	16cc <read_bytes+0x240>
    16cc:	movw	r0, #0
    16d0:	str	r0, [fp, #-4]
    16d4:	ldr	r0, [fp, #-4]
    16d8:	mov	sp, fp
    16dc:	pop	{fp, pc}

000016e0 <swap2>:
    16e0:	sub	sp, sp, #8
    16e4:	str	r0, [sp, #4]
    16e8:	ldr	r0, [sp, #4]
    16ec:	str	r0, [sp]
    16f0:	ldr	r0, [sp]
    16f4:	ldrb	r0, [r0]
    16f8:	ldr	r1, [sp]
    16fc:	ldrb	r1, [r1, #1]
    1700:	eor	r0, r0, r1
    1704:	ldr	r1, [sp]
    1708:	strb	r0, [r1]
    170c:	ldr	r0, [sp]
    1710:	ldrb	r0, [r0]
    1714:	ldr	r1, [sp]
    1718:	ldrb	r1, [r1, #1]
    171c:	eor	r0, r0, r1
    1720:	ldr	r1, [sp]
    1724:	strb	r0, [r1, #1]
    1728:	ldr	r0, [sp]
    172c:	ldrb	r0, [r0]
    1730:	ldr	r1, [sp]
    1734:	ldrb	r1, [r1, #1]
    1738:	eor	r0, r0, r1
    173c:	ldr	r1, [sp]
    1740:	strb	r0, [r1]
    1744:	add	sp, sp, #8
    1748:	bx	lr

0000174c <swap4>:
    174c:	sub	sp, sp, #8
    1750:	str	r0, [sp, #4]
    1754:	ldr	r0, [sp, #4]
    1758:	str	r0, [sp]
    175c:	ldr	r0, [sp]
    1760:	ldrb	r0, [r0]
    1764:	ldr	r1, [sp]
    1768:	ldrb	r1, [r1, #3]
    176c:	eor	r0, r0, r1
    1770:	ldr	r1, [sp]
    1774:	strb	r0, [r1]
    1778:	ldr	r0, [sp]
    177c:	ldrb	r0, [r0]
    1780:	ldr	r1, [sp]
    1784:	ldrb	r1, [r1, #3]
    1788:	eor	r0, r0, r1
    178c:	ldr	r1, [sp]
    1790:	strb	r0, [r1, #3]
    1794:	ldr	r0, [sp]
    1798:	ldrb	r0, [r0]
    179c:	ldr	r1, [sp]
    17a0:	ldrb	r1, [r1, #3]
    17a4:	eor	r0, r0, r1
    17a8:	ldr	r1, [sp]
    17ac:	strb	r0, [r1]
    17b0:	ldr	r0, [sp]
    17b4:	ldrb	r0, [r0, #1]
    17b8:	ldr	r1, [sp]
    17bc:	ldrb	r1, [r1, #2]
    17c0:	eor	r0, r0, r1
    17c4:	ldr	r1, [sp]
    17c8:	strb	r0, [r1, #1]
    17cc:	ldr	r0, [sp]
    17d0:	ldrb	r0, [r0, #1]
    17d4:	ldr	r1, [sp]
    17d8:	ldrb	r1, [r1, #2]
    17dc:	eor	r0, r0, r1
    17e0:	ldr	r1, [sp]
    17e4:	strb	r0, [r1, #2]
    17e8:	ldr	r0, [sp]
    17ec:	ldrb	r0, [r0, #1]
    17f0:	ldr	r1, [sp]
    17f4:	ldrb	r1, [r1, #2]
    17f8:	eor	r0, r0, r1
    17fc:	ldr	r1, [sp]
    1800:	strb	r0, [r1, #1]
    1804:	add	sp, sp, #8
    1808:	bx	lr

0000180c <swap8>:
    180c:	sub	sp, sp, #8
    1810:	str	r0, [sp, #4]
    1814:	ldr	r0, [sp, #4]
    1818:	str	r0, [sp]
    181c:	ldr	r0, [sp]
    1820:	ldrb	r0, [r0]
    1824:	ldr	r1, [sp]
    1828:	ldrb	r1, [r1, #7]
    182c:	eor	r0, r0, r1
    1830:	ldr	r1, [sp]
    1834:	strb	r0, [r1]
    1838:	ldr	r0, [sp]
    183c:	ldrb	r0, [r0]
    1840:	ldr	r1, [sp]
    1844:	ldrb	r1, [r1, #7]
    1848:	eor	r0, r0, r1
    184c:	ldr	r1, [sp]
    1850:	strb	r0, [r1, #7]
    1854:	ldr	r0, [sp]
    1858:	ldrb	r0, [r0]
    185c:	ldr	r1, [sp]
    1860:	ldrb	r1, [r1, #7]
    1864:	eor	r0, r0, r1
    1868:	ldr	r1, [sp]
    186c:	strb	r0, [r1]
    1870:	ldr	r0, [sp]
    1874:	ldrb	r0, [r0, #1]
    1878:	ldr	r1, [sp]
    187c:	ldrb	r1, [r1, #6]
    1880:	eor	r0, r0, r1
    1884:	ldr	r1, [sp]
    1888:	strb	r0, [r1, #1]
    188c:	ldr	r0, [sp]
    1890:	ldrb	r0, [r0, #1]
    1894:	ldr	r1, [sp]
    1898:	ldrb	r1, [r1, #6]
    189c:	eor	r0, r0, r1
    18a0:	ldr	r1, [sp]
    18a4:	strb	r0, [r1, #6]
    18a8:	ldr	r0, [sp]
    18ac:	ldrb	r0, [r0, #1]
    18b0:	ldr	r1, [sp]
    18b4:	ldrb	r1, [r1, #6]
    18b8:	eor	r0, r0, r1
    18bc:	ldr	r1, [sp]
    18c0:	strb	r0, [r1, #1]
    18c4:	ldr	r0, [sp]
    18c8:	ldrb	r0, [r0, #2]
    18cc:	ldr	r1, [sp]
    18d0:	ldrb	r1, [r1, #5]
    18d4:	eor	r0, r0, r1
    18d8:	ldr	r1, [sp]
    18dc:	strb	r0, [r1, #2]
    18e0:	ldr	r0, [sp]
    18e4:	ldrb	r0, [r0, #2]
    18e8:	ldr	r1, [sp]
    18ec:	ldrb	r1, [r1, #5]
    18f0:	eor	r0, r0, r1
    18f4:	ldr	r1, [sp]
    18f8:	strb	r0, [r1, #5]
    18fc:	ldr	r0, [sp]
    1900:	ldrb	r0, [r0, #2]
    1904:	ldr	r1, [sp]
    1908:	ldrb	r1, [r1, #5]
    190c:	eor	r0, r0, r1
    1910:	ldr	r1, [sp]
    1914:	strb	r0, [r1, #2]
    1918:	ldr	r0, [sp]
    191c:	ldrb	r0, [r0, #3]
    1920:	ldr	r1, [sp]
    1924:	ldrb	r1, [r1, #4]
    1928:	eor	r0, r0, r1
    192c:	ldr	r1, [sp]
    1930:	strb	r0, [r1, #3]
    1934:	ldr	r0, [sp]
    1938:	ldrb	r0, [r0, #3]
    193c:	ldr	r1, [sp]
    1940:	ldrb	r1, [r1, #4]
    1944:	eor	r0, r0, r1
    1948:	ldr	r1, [sp]
    194c:	strb	r0, [r1, #4]
    1950:	ldr	r0, [sp]
    1954:	ldrb	r0, [r0, #3]
    1958:	ldr	r1, [sp]
    195c:	ldrb	r1, [r1, #4]
    1960:	eor	r0, r0, r1
    1964:	ldr	r1, [sp]
    1968:	strb	r0, [r1, #3]
    196c:	add	sp, sp, #8
    1970:	bx	lr
