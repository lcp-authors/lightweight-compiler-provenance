
../compcert-repos/prog2/MT1E1-2.2:     file format elf32-littlearm


Disassembly of section .init:

000107cc <.init>:
   107cc:	push	{r3, lr}
   107d0:	bl	108d0 <_start@@Base+0x3c>
   107d4:	pop	{r3, pc}

Disassembly of section .plt:

000107d8 <strcmp@plt-0x14>:
   107d8:	push	{lr}		; (str lr, [sp, #-4]!)
   107dc:	ldr	lr, [pc, #4]	; 107e8 <strcmp@plt-0x4>
   107e0:	add	lr, pc, lr
   107e4:	ldr	pc, [lr, #8]!
   107e8:	andeq	r0, r1, r8, lsl r8

000107ec <strcmp@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #16, 20	; 0x10000
   107f4:	ldr	pc, [ip, #2072]!	; 0x818

000107f8 <__isoc99_fscanf@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #16, 20	; 0x10000
   10800:	ldr	pc, [ip, #2064]!	; 0x810

00010804 <fopen@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #16, 20	; 0x10000
   1080c:	ldr	pc, [ip, #2056]!	; 0x808

00010810 <free@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #16, 20	; 0x10000
   10818:	ldr	pc, [ip, #2048]!	; 0x800

0001081c <memcpy@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #16, 20	; 0x10000
   10824:	ldr	pc, [ip, #2040]!	; 0x7f8

00010828 <realloc@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #16, 20	; 0x10000
   10830:	ldr	pc, [ip, #2032]!	; 0x7f0

00010834 <strcpy@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #16, 20	; 0x10000
   1083c:	ldr	pc, [ip, #2024]!	; 0x7e8

00010840 <malloc@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #16, 20	; 0x10000
   10848:	ldr	pc, [ip, #2016]!	; 0x7e0

0001084c <__libc_start_main@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #16, 20	; 0x10000
   10854:	ldr	pc, [ip, #2008]!	; 0x7d8

00010858 <__gmon_start__@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #16, 20	; 0x10000
   10860:	ldr	pc, [ip, #2000]!	; 0x7d0

00010864 <strlen@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #16, 20	; 0x10000
   1086c:	ldr	pc, [ip, #1992]!	; 0x7c8

00010870 <fprintf@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #16, 20	; 0x10000
   10878:	ldr	pc, [ip, #1984]!	; 0x7c0

0001087c <fclose@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #16, 20	; 0x10000
   10884:	ldr	pc, [ip, #1976]!	; 0x7b8

00010888 <abort@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #16, 20	; 0x10000
   10890:	ldr	pc, [ip, #1968]!	; 0x7b0

Disassembly of section .text:

00010894 <_start@@Base>:
   10894:	mov	fp, #0
   10898:	mov	lr, #0
   1089c:	pop	{r1}		; (ldr r1, [sp], #4)
   108a0:	mov	r2, sp
   108a4:	push	{r2}		; (str r2, [sp, #-4]!)
   108a8:	push	{r0}		; (str r0, [sp, #-4]!)
   108ac:	ldr	ip, [pc, #16]	; 108c4 <_start@@Base+0x30>
   108b0:	push	{ip}		; (str ip, [sp, #-4]!)
   108b4:	ldr	r0, [pc, #12]	; 108c8 <_start@@Base+0x34>
   108b8:	ldr	r3, [pc, #12]	; 108cc <_start@@Base+0x38>
   108bc:	bl	1084c <__libc_start_main@plt>
   108c0:	bl	10888 <abort@plt>
   108c4:	muleq	r1, r8, sp
   108c8:	andeq	r0, r1, ip, lsr ip
   108cc:	andeq	r0, r1, r8, lsr sp
   108d0:	ldr	r3, [pc, #20]	; 108ec <_start@@Base+0x58>
   108d4:	ldr	r2, [pc, #20]	; 108f0 <_start@@Base+0x5c>
   108d8:	add	r3, pc, r3
   108dc:	ldr	r2, [r3, r2]
   108e0:	cmp	r2, #0
   108e4:	bxeq	lr
   108e8:	b	10858 <__gmon_start__@plt>
   108ec:	andeq	r0, r1, r0, lsr #14
   108f0:	andeq	r0, r0, r4, asr #32
   108f4:	ldr	r0, [pc, #24]	; 10914 <_start@@Base+0x80>
   108f8:	ldr	r3, [pc, #24]	; 10918 <_start@@Base+0x84>
   108fc:	cmp	r3, r0
   10900:	bxeq	lr
   10904:	ldr	r3, [pc, #16]	; 1091c <_start@@Base+0x88>
   10908:	cmp	r3, #0
   1090c:	bxeq	lr
   10910:	bx	r3
   10914:	andeq	r1, r2, r0, asr r0
   10918:	andeq	r1, r2, r0, asr r0
   1091c:	andeq	r0, r0, r0
   10920:	ldr	r0, [pc, #36]	; 1094c <_start@@Base+0xb8>
   10924:	ldr	r1, [pc, #36]	; 10950 <_start@@Base+0xbc>
   10928:	sub	r1, r1, r0
   1092c:	asr	r1, r1, #2
   10930:	add	r1, r1, r1, lsr #31
   10934:	asrs	r1, r1, #1
   10938:	bxeq	lr
   1093c:	ldr	r3, [pc, #16]	; 10954 <_start@@Base+0xc0>
   10940:	cmp	r3, #0
   10944:	bxeq	lr
   10948:	bx	r3
   1094c:	andeq	r1, r2, r0, asr r0
   10950:	andeq	r1, r2, r0, asr r0
   10954:	andeq	r0, r0, r0
   10958:	push	{r4, lr}
   1095c:	ldr	r4, [pc, #24]	; 1097c <_start@@Base+0xe8>
   10960:	ldrb	r3, [r4]
   10964:	cmp	r3, #0
   10968:	popne	{r4, pc}
   1096c:	bl	108f4 <_start@@Base+0x60>
   10970:	mov	r3, #1
   10974:	strb	r3, [r4]
   10978:	pop	{r4, pc}
   1097c:	andeq	r1, r2, r4, asr r0
   10980:	b	10920 <_start@@Base+0x8c>

00010984 <conta_vitorias@@Base>:
   10984:	push	{fp, lr}
   10988:	mov	fp, sp
   1098c:	sub	sp, sp, #80	; 0x50
   10990:	str	r0, [fp, #-8]
   10994:	str	r1, [fp, #-12]
   10998:	movw	r0, #20
   1099c:	bl	10840 <malloc@plt>
   109a0:	str	r0, [fp, #-16]
   109a4:	ldr	r0, [fp, #-16]
   109a8:	movw	r1, #0
   109ac:	cmp	r0, r1
   109b0:	bne	109c0 <conta_vitorias@@Base+0x3c>
   109b4:	movw	r0, #0
   109b8:	str	r0, [fp, #-4]
   109bc:	b	10c30 <conta_vitorias@@Base+0x2ac>
   109c0:	ldr	r0, [fp, #-12]
   109c4:	movw	r1, #0
   109c8:	str	r1, [r0]
   109cc:	sub	r2, fp, #31
   109d0:	ldr	r0, [fp, #-8]
   109d4:	movw	r1, #3496	; 0xda8
   109d8:	movt	r1, #1
   109dc:	bl	107f8 <__isoc99_fscanf@plt>
   109e0:	cmp	r0, #1
   109e4:	bne	10b20 <conta_vitorias@@Base+0x19c>
   109e8:	sub	r0, fp, #31
   109ec:	str	r0, [sp, #12]
   109f0:	bl	10864 <strlen@plt>
   109f4:	ldr	r1, [sp, #12]
   109f8:	add	r0, r1, r0
   109fc:	movw	r2, #0
   10a00:	strb	r2, [r0]
   10a04:	movw	r0, #0
   10a08:	str	r0, [sp, #16]
   10a0c:	str	r0, [fp, #-36]	; 0xffffffdc
   10a10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10a14:	ldr	r1, [fp, #-12]
   10a18:	ldr	r1, [r1]
   10a1c:	cmp	r0, r1
   10a20:	bge	10a88 <conta_vitorias@@Base+0x104>
   10a24:	sub	r0, fp, #31
   10a28:	ldr	r1, [fp, #-16]
   10a2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10a30:	movw	r3, #20
   10a34:	mul	r2, r2, r3
   10a38:	add	r1, r1, r2
   10a3c:	bl	107ec <strcmp@plt>
   10a40:	cmp	r0, #0
   10a44:	bne	10a74 <conta_vitorias@@Base+0xf0>
   10a48:	ldr	r0, [fp, #-16]
   10a4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10a50:	movw	r2, #20
   10a54:	mul	r1, r1, r2
   10a58:	add	r0, r0, r1
   10a5c:	ldr	r1, [r0, #16]
   10a60:	add	r1, r1, #1
   10a64:	str	r1, [r0, #16]
   10a68:	movw	r0, #1
   10a6c:	str	r0, [sp, #16]
   10a70:	b	10a88 <conta_vitorias@@Base+0x104>
   10a74:	b	10a78 <conta_vitorias@@Base+0xf4>
   10a78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10a7c:	add	r0, r0, #1
   10a80:	str	r0, [fp, #-36]	; 0xffffffdc
   10a84:	b	10a10 <conta_vitorias@@Base+0x8c>
   10a88:	ldr	r0, [sp, #16]
   10a8c:	cmp	r0, #0
   10a90:	bne	10b1c <conta_vitorias@@Base+0x198>
   10a94:	ldr	r0, [fp, #-16]
   10a98:	ldr	r1, [fp, #-12]
   10a9c:	ldr	r1, [r1]
   10aa0:	add	r1, r1, #1
   10aa4:	movw	r2, #20
   10aa8:	mul	r1, r1, r2
   10aac:	bl	10828 <realloc@plt>
   10ab0:	str	r0, [fp, #-16]
   10ab4:	ldr	r0, [fp, #-16]
   10ab8:	movw	r1, #0
   10abc:	cmp	r0, r1
   10ac0:	bne	10ad0 <conta_vitorias@@Base+0x14c>
   10ac4:	movw	r0, #0
   10ac8:	str	r0, [fp, #-4]
   10acc:	b	10c30 <conta_vitorias@@Base+0x2ac>
   10ad0:	sub	r1, fp, #31
   10ad4:	ldr	r0, [fp, #-16]
   10ad8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10adc:	movw	r3, #20
   10ae0:	mul	r2, r2, r3
   10ae4:	add	r0, r0, r2
   10ae8:	str	r3, [sp, #8]
   10aec:	bl	10834 <strcpy@plt>
   10af0:	ldr	r1, [fp, #-16]
   10af4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10af8:	ldr	r3, [sp, #8]
   10afc:	mul	r2, r2, r3
   10b00:	add	r1, r1, r2
   10b04:	movw	r2, #1
   10b08:	str	r2, [r1, #16]
   10b0c:	ldr	r1, [fp, #-12]
   10b10:	ldr	r2, [r1]
   10b14:	add	r2, r2, #1
   10b18:	str	r2, [r1]
   10b1c:	b	109cc <conta_vitorias@@Base+0x48>
   10b20:	movw	r0, #1
   10b24:	str	r0, [fp, #-36]	; 0xffffffdc
   10b28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10b2c:	ldr	r1, [fp, #-12]
   10b30:	ldr	r1, [r1]
   10b34:	cmp	r0, r1
   10b38:	bge	10c28 <conta_vitorias@@Base+0x2a4>
   10b3c:	ldr	r0, [fp, #-16]
   10b40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10b44:	movw	r2, #20
   10b48:	mul	r1, r1, r2
   10b4c:	add	r0, r0, r1
   10b50:	add	r1, sp, #20
   10b54:	str	r0, [sp, #4]
   10b58:	mov	r0, r1
   10b5c:	ldr	r1, [sp, #4]
   10b60:	bl	1081c <memcpy@plt>
   10b64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10b68:	str	r0, [sp, #40]	; 0x28
   10b6c:	ldr	r0, [sp, #40]	; 0x28
   10b70:	cmp	r0, #0
   10b74:	movw	r0, #0
   10b78:	str	r0, [sp]
   10b7c:	ble	10bb0 <conta_vitorias@@Base+0x22c>
   10b80:	ldr	r0, [sp, #36]	; 0x24
   10b84:	ldr	r1, [fp, #-16]
   10b88:	ldr	r2, [sp, #40]	; 0x28
   10b8c:	sub	r2, r2, #1
   10b90:	movw	r3, #20
   10b94:	mul	r2, r2, r3
   10b98:	add	r1, r1, r2
   10b9c:	ldr	r1, [r1, #16]
   10ba0:	cmp	r0, r1
   10ba4:	movw	r0, #0
   10ba8:	movgt	r0, #1
   10bac:	str	r0, [sp]
   10bb0:	ldr	r0, [sp]
   10bb4:	tst	r0, #1
   10bb8:	beq	10bfc <conta_vitorias@@Base+0x278>
   10bbc:	ldr	r0, [fp, #-16]
   10bc0:	ldr	r1, [sp, #40]	; 0x28
   10bc4:	movw	r2, #20
   10bc8:	mul	r1, r1, r2
   10bcc:	add	r0, r0, r1
   10bd0:	ldr	r1, [fp, #-16]
   10bd4:	ldr	r3, [sp, #40]	; 0x28
   10bd8:	sub	r3, r3, #1
   10bdc:	mul	r3, r3, r2
   10be0:	add	r1, r1, r3
   10be4:	bl	1081c <memcpy@plt>
   10be8:	ldr	r0, [sp, #40]	; 0x28
   10bec:	mvn	r1, #0
   10bf0:	add	r0, r0, r1
   10bf4:	str	r0, [sp, #40]	; 0x28
   10bf8:	b	10b6c <conta_vitorias@@Base+0x1e8>
   10bfc:	ldr	r0, [fp, #-16]
   10c00:	ldr	r1, [sp, #40]	; 0x28
   10c04:	movw	r2, #20
   10c08:	mul	r1, r1, r2
   10c0c:	add	r0, r0, r1
   10c10:	add	r1, sp, #20
   10c14:	bl	1081c <memcpy@plt>
   10c18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10c1c:	add	r0, r0, #1
   10c20:	str	r0, [fp, #-36]	; 0xffffffdc
   10c24:	b	10b28 <conta_vitorias@@Base+0x1a4>
   10c28:	ldr	r0, [fp, #-16]
   10c2c:	str	r0, [fp, #-4]
   10c30:	ldr	r0, [fp, #-4]
   10c34:	mov	sp, fp
   10c38:	pop	{fp, pc}

00010c3c <main@@Base>:
   10c3c:	push	{fp, lr}
   10c40:	mov	fp, sp
   10c44:	sub	sp, sp, #24
   10c48:	movw	r0, #0
   10c4c:	str	r0, [fp, #-4]
   10c50:	movw	r0, #3499	; 0xdab
   10c54:	movt	r0, #1
   10c58:	movw	r1, #3507	; 0xdb3
   10c5c:	movt	r1, #1
   10c60:	bl	10804 <fopen@plt>
   10c64:	str	r0, [fp, #-8]
   10c68:	movw	r0, #0
   10c6c:	str	r0, [sp, #4]
   10c70:	ldr	r0, [fp, #-8]
   10c74:	add	r1, sp, #4
   10c78:	bl	10984 <conta_vitorias@@Base>
   10c7c:	str	r0, [sp, #12]
   10c80:	movw	r0, #4176	; 0x1050
   10c84:	movt	r0, #2
   10c88:	ldr	r0, [r0]
   10c8c:	movw	r1, #3509	; 0xdb5
   10c90:	movt	r1, #1
   10c94:	bl	10870 <fprintf@plt>
   10c98:	ldr	r1, [sp, #12]
   10c9c:	movw	r2, #0
   10ca0:	cmp	r1, r2
   10ca4:	beq	10d14 <main@@Base+0xd8>
   10ca8:	movw	r0, #0
   10cac:	str	r0, [sp, #8]
   10cb0:	ldr	r0, [sp, #8]
   10cb4:	ldr	r1, [sp, #4]
   10cb8:	cmp	r0, r1
   10cbc:	bge	10d10 <main@@Base+0xd4>
   10cc0:	movw	r0, #4176	; 0x1050
   10cc4:	movt	r0, #2
   10cc8:	ldr	r0, [r0]
   10ccc:	ldr	r1, [sp, #12]
   10cd0:	ldr	r2, [sp, #8]
   10cd4:	movw	r3, #20
   10cd8:	mul	r2, r2, r3
   10cdc:	add	r2, r1, r2
   10ce0:	ldr	r1, [sp, #12]
   10ce4:	ldr	ip, [sp, #8]
   10ce8:	mul	r3, ip, r3
   10cec:	add	r1, r1, r3
   10cf0:	ldr	r3, [r1, #16]
   10cf4:	movw	r1, #3522	; 0xdc2
   10cf8:	movt	r1, #1
   10cfc:	bl	10870 <fprintf@plt>
   10d00:	ldr	r0, [sp, #8]
   10d04:	add	r0, r0, #1
   10d08:	str	r0, [sp, #8]
   10d0c:	b	10cb0 <main@@Base+0x74>
   10d10:	b	10d14 <main@@Base+0xd8>
   10d14:	ldr	r0, [sp, #12]
   10d18:	bl	10810 <free@plt>
   10d1c:	ldr	r0, [fp, #-8]
   10d20:	bl	1087c <fclose@plt>
   10d24:	movw	r1, #0
   10d28:	str	r0, [sp]
   10d2c:	mov	r0, r1
   10d30:	mov	sp, fp
   10d34:	pop	{fp, pc}

00010d38 <__libc_csu_init@@Base>:
   10d38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d3c:	mov	r7, r0
   10d40:	ldr	r6, [pc, #72]	; 10d90 <__libc_csu_init@@Base+0x58>
   10d44:	ldr	r5, [pc, #72]	; 10d94 <__libc_csu_init@@Base+0x5c>
   10d48:	add	r6, pc, r6
   10d4c:	add	r5, pc, r5
   10d50:	sub	r6, r6, r5
   10d54:	mov	r8, r1
   10d58:	mov	r9, r2
   10d5c:	bl	107cc <strcmp@plt-0x20>
   10d60:	asrs	r6, r6, #2
   10d64:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d68:	mov	r4, #0
   10d6c:	add	r4, r4, #1
   10d70:	ldr	r3, [r5], #4
   10d74:	mov	r2, r9
   10d78:	mov	r1, r8
   10d7c:	mov	r0, r7
   10d80:	blx	r3
   10d84:	cmp	r6, r4
   10d88:	bne	10d6c <__libc_csu_init@@Base+0x34>
   10d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d90:			; <UNDEFINED> instruction: 0x000101bc
   10d94:			; <UNDEFINED> instruction: 0x000101b4

00010d98 <__libc_csu_fini@@Base>:
   10d98:	bx	lr

Disassembly of section .fini:

00010d9c <.fini>:
   10d9c:	push	{r3, lr}
   10da0:	pop	{r3, pc}
