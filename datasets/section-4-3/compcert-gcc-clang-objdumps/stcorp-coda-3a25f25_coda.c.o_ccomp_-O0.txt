
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_get_libcoda_version>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	ldr	r0, [pc, #12]	; 24 <coda_get_libcoda_version+0x24>
  14:	ldr	r0, [r0]
  18:	ldr	lr, [sp, #4]
  1c:	add	sp, sp, #8
  20:	bx	lr
  24:	.word	0x00000000

00000028 <coda_set_option_bypass_special_types>:
  28:	mov	ip, sp
  2c:	sub	sp, sp, #8
  30:	str	ip, [sp]
  34:	str	lr, [sp, #4]
  38:	cmp	r0, #0
  3c:	bne	48 <coda_set_option_bypass_special_types+0x20>
  40:	mov	r2, #0
  44:	b	54 <coda_set_option_bypass_special_types+0x2c>
  48:	cmp	r0, #1
  4c:	movne	r2, #1
  50:	moveq	r2, #0
  54:	cmp	r2, #0
  58:	beq	7c <coda_set_option_bypass_special_types+0x54>
  5c:	mvn	r2, #99	; 0x63
  60:	ldr	r1, [pc, #44]	; 94 <coda_set_option_bypass_special_types+0x6c>
  64:	mov	r3, r0
  68:	mov	r0, r2
  6c:	mov	r2, r3
  70:	bl	0 <coda_set_error>
  74:	mvn	r0, #0
  78:	b	88 <coda_set_option_bypass_special_types+0x60>
  7c:	ldr	r3, [pc, #20]	; 98 <coda_set_option_bypass_special_types+0x70>
  80:	str	r0, [r3]
  84:	mov	r0, #0
  88:	ldr	lr, [sp, #4]
  8c:	add	sp, sp, #8
  90:	bx	lr
  94:	.word	0x0000009c
  98:	.word	0x00000000

0000009c <coda_get_option_bypass_special_types>:
  9c:	mov	ip, sp
  a0:	sub	sp, sp, #8
  a4:	str	ip, [sp]
  a8:	str	lr, [sp, #4]
  ac:	ldr	r0, [pc, #12]	; c0 <coda_get_option_bypass_special_types+0x24>
  b0:	ldr	r0, [r0]
  b4:	ldr	lr, [sp, #4]
  b8:	add	sp, sp, #8
  bc:	bx	lr
  c0:	.word	0x00000000

000000c4 <coda_set_option_perform_boundary_checks>:
  c4:	mov	ip, sp
  c8:	sub	sp, sp, #8
  cc:	str	ip, [sp]
  d0:	str	lr, [sp, #4]
  d4:	cmp	r0, #0
  d8:	bne	e4 <coda_set_option_perform_boundary_checks+0x20>
  dc:	mov	r2, #0
  e0:	b	f0 <coda_set_option_perform_boundary_checks+0x2c>
  e4:	cmp	r0, #1
  e8:	movne	r2, #1
  ec:	moveq	r2, #0
  f0:	cmp	r2, #0
  f4:	beq	118 <coda_set_option_perform_boundary_checks+0x54>
  f8:	mvn	r2, #99	; 0x63
  fc:	ldr	r1, [pc, #48]	; 134 <coda_set_option_perform_boundary_checks+0x70>
 100:	mov	r3, r0
 104:	mov	r0, r2
 108:	mov	r2, r3
 10c:	bl	0 <coda_set_error>
 110:	mvn	r0, #0
 114:	b	124 <coda_set_option_perform_boundary_checks+0x60>
 118:	ldr	r3, [pc, #16]	; 130 <coda_set_option_perform_boundary_checks+0x6c>
 11c:	str	r0, [r3]
 120:	mov	r0, #0
 124:	ldr	lr, [sp, #4]
 128:	add	sp, sp, #8
 12c:	bx	lr
 130:	.word	0x00000000
 134:	.word	0x0000009c

00000138 <coda_get_option_perform_boundary_checks>:
 138:	mov	ip, sp
 13c:	sub	sp, sp, #8
 140:	str	ip, [sp]
 144:	str	lr, [sp, #4]
 148:	ldr	r0, [pc, #12]	; 15c <coda_get_option_perform_boundary_checks+0x24>
 14c:	ldr	r0, [r0]
 150:	ldr	lr, [sp, #4]
 154:	add	sp, sp, #8
 158:	bx	lr
 15c:	.word	0x00000000

00000160 <coda_set_option_perform_conversions>:
 160:	mov	ip, sp
 164:	sub	sp, sp, #8
 168:	str	ip, [sp]
 16c:	str	lr, [sp, #4]
 170:	cmp	r0, #0
 174:	beq	188 <coda_set_option_perform_conversions+0x28>
 178:	cmp	r0, #1
 17c:	moveq	r2, #1
 180:	movne	r2, #0
 184:	b	18c <coda_set_option_perform_conversions+0x2c>
 188:	mov	r2, #1
 18c:	cmp	r2, #0
 190:	bne	1b4 <coda_set_option_perform_conversions+0x54>
 194:	mvn	r2, #99	; 0x63
 198:	ldr	r1, [pc, #48]	; 1d0 <coda_set_option_perform_conversions+0x70>
 19c:	mov	r3, r0
 1a0:	mov	r0, r2
 1a4:	mov	r2, r3
 1a8:	bl	0 <coda_set_error>
 1ac:	mvn	r0, #0
 1b0:	b	1c0 <coda_set_option_perform_conversions+0x60>
 1b4:	ldr	r3, [pc, #16]	; 1cc <coda_set_option_perform_conversions+0x6c>
 1b8:	str	r0, [r3]
 1bc:	mov	r0, #0
 1c0:	ldr	lr, [sp, #4]
 1c4:	add	sp, sp, #8
 1c8:	bx	lr
 1cc:	.word	0x00000000
 1d0:	.word	0x0000009c

000001d4 <coda_get_option_perform_conversions>:
 1d4:	mov	ip, sp
 1d8:	sub	sp, sp, #8
 1dc:	str	ip, [sp]
 1e0:	str	lr, [sp, #4]
 1e4:	ldr	r0, [pc, #12]	; 1f8 <coda_get_option_perform_conversions+0x24>
 1e8:	ldr	r0, [r0]
 1ec:	ldr	lr, [sp, #4]
 1f0:	add	sp, sp, #8
 1f4:	bx	lr
 1f8:	.word	0x00000000

000001fc <coda_set_option_use_fast_size_expressions>:
 1fc:	mov	ip, sp
 200:	sub	sp, sp, #8
 204:	str	ip, [sp]
 208:	str	lr, [sp, #4]
 20c:	cmp	r0, #0
 210:	beq	224 <coda_set_option_use_fast_size_expressions+0x28>
 214:	cmp	r0, #1
 218:	moveq	r2, #1
 21c:	movne	r2, #0
 220:	b	228 <coda_set_option_use_fast_size_expressions+0x2c>
 224:	mov	r2, #1
 228:	cmp	r2, #0
 22c:	bne	250 <coda_set_option_use_fast_size_expressions+0x54>
 230:	mvn	r2, #99	; 0x63
 234:	ldr	r1, [pc, #48]	; 26c <coda_set_option_use_fast_size_expressions+0x70>
 238:	mov	r3, r0
 23c:	mov	r0, r2
 240:	mov	r2, r3
 244:	bl	0 <coda_set_error>
 248:	mvn	r0, #0
 24c:	b	25c <coda_set_option_use_fast_size_expressions+0x60>
 250:	ldr	r3, [pc, #16]	; 268 <coda_set_option_use_fast_size_expressions+0x6c>
 254:	str	r0, [r3]
 258:	mov	r0, #0
 25c:	ldr	lr, [sp, #4]
 260:	add	sp, sp, #8
 264:	bx	lr
 268:	.word	0x00000000
 26c:	.word	0x0000009c

00000270 <coda_get_option_use_fast_size_expressions>:
 270:	mov	ip, sp
 274:	sub	sp, sp, #8
 278:	str	ip, [sp]
 27c:	str	lr, [sp, #4]
 280:	ldr	r0, [pc, #12]	; 294 <coda_get_option_use_fast_size_expressions+0x24>
 284:	ldr	r0, [r0]
 288:	ldr	lr, [sp, #4]
 28c:	add	sp, sp, #8
 290:	bx	lr
 294:	.word	0x00000000

00000298 <coda_set_option_use_mmap>:
 298:	mov	ip, sp
 29c:	sub	sp, sp, #8
 2a0:	str	ip, [sp]
 2a4:	str	lr, [sp, #4]
 2a8:	cmp	r0, #0
 2ac:	beq	2c0 <coda_set_option_use_mmap+0x28>
 2b0:	cmp	r0, #1
 2b4:	moveq	r2, #1
 2b8:	movne	r2, #0
 2bc:	b	2c4 <coda_set_option_use_mmap+0x2c>
 2c0:	mov	r2, #1
 2c4:	cmp	r2, #0
 2c8:	bne	2ec <coda_set_option_use_mmap+0x54>
 2cc:	mvn	r2, #99	; 0x63
 2d0:	ldr	r1, [pc, #48]	; 308 <coda_set_option_use_mmap+0x70>
 2d4:	mov	r3, r0
 2d8:	mov	r0, r2
 2dc:	mov	r2, r3
 2e0:	bl	0 <coda_set_error>
 2e4:	mvn	r0, #0
 2e8:	b	2f8 <coda_set_option_use_mmap+0x60>
 2ec:	ldr	r3, [pc, #16]	; 304 <coda_set_option_use_mmap+0x6c>
 2f0:	str	r0, [r3]
 2f4:	mov	r0, #0
 2f8:	ldr	lr, [sp, #4]
 2fc:	add	sp, sp, #8
 300:	bx	lr
 304:	.word	0x00000000
 308:	.word	0x0000009c

0000030c <coda_get_option_use_mmap>:
 30c:	mov	ip, sp
 310:	sub	sp, sp, #8
 314:	str	ip, [sp]
 318:	str	lr, [sp, #4]
 31c:	ldr	r0, [pc, #12]	; 330 <coda_get_option_use_mmap+0x24>
 320:	ldr	r0, [r0]
 324:	ldr	lr, [sp, #4]
 328:	add	sp, sp, #8
 32c:	bx	lr
 330:	.word	0x00000000

00000334 <coda_set_definition_path>:
 334:	mov	ip, sp
 338:	sub	sp, sp, #16
 33c:	str	ip, [sp]
 340:	str	lr, [sp, #4]
 344:	str	r4, [sp, #8]
 348:	mov	r4, r0
 34c:	ldr	ip, [pc, #136]	; 3dc <coda_set_definition_path+0xa8>
 350:	ldr	r3, [ip]
 354:	cmp	r3, #0
 358:	beq	374 <coda_set_definition_path+0x40>
 35c:	ldr	r1, [pc, #120]	; 3dc <coda_set_definition_path+0xa8>
 360:	ldr	r0, [r1]
 364:	bl	0 <free>
 368:	ldr	r2, [pc, #108]	; 3dc <coda_set_definition_path+0xa8>
 36c:	mov	r0, #0
 370:	str	r0, [r2]
 374:	cmp	r4, #0
 378:	bne	384 <coda_set_definition_path+0x50>
 37c:	mov	r0, #0
 380:	b	3c4 <coda_set_definition_path+0x90>
 384:	mov	r0, r4
 388:	bl	0 <strdup>
 38c:	ldr	r1, [pc, #72]	; 3dc <coda_set_definition_path+0xa8>
 390:	str	r0, [r1]
 394:	ldr	r0, [pc, #64]	; 3dc <coda_set_definition_path+0xa8>
 398:	ldr	r0, [r0]
 39c:	cmp	r0, #0
 3a0:	bne	3c0 <coda_set_definition_path+0x8c>
 3a4:	mvn	r0, #0
 3a8:	ldr	r1, [pc, #36]	; 3d4 <coda_set_definition_path+0xa0>
 3ac:	ldr	r2, [pc, #36]	; 3d8 <coda_set_definition_path+0xa4>
 3b0:	movw	r3, #385	; 0x181
 3b4:	bl	0 <coda_set_error>
 3b8:	mvn	r0, #0
 3bc:	b	3c4 <coda_set_definition_path+0x90>
 3c0:	mov	r0, #0
 3c4:	ldr	r4, [sp, #8]
 3c8:	ldr	lr, [sp, #4]
 3cc:	add	sp, sp, #16
 3d0:	bx	lr
 3d4:	.word	0x00000069
 3d8:	.word	0x00000005
 3dc:	.word	0x00000020

000003e0 <coda_set_definition_path_conditional>:
 3e0:	mov	ip, sp
 3e4:	sub	sp, sp, #32
 3e8:	str	ip, [sp]
 3ec:	str	lr, [sp, #4]
 3f0:	str	r4, [sp, #8]
 3f4:	str	r5, [sp, #12]
 3f8:	str	r6, [sp, #16]
 3fc:	mov	r4, r2
 400:	mov	r5, r1
 404:	mov	r6, r0
 408:	ldr	r0, [pc, #216]	; 4e8 <coda_set_definition_path_conditional+0x108>
 40c:	bl	0 <getenv>
 410:	cmp	r0, #0
 414:	beq	420 <coda_set_definition_path_conditional+0x40>
 418:	mov	r0, #0
 41c:	b	4d0 <coda_set_definition_path_conditional+0xf0>
 420:	cmp	r5, #0
 424:	beq	448 <coda_set_definition_path_conditional+0x68>
 428:	add	r2, sp, #24
 42c:	mov	r1, r6
 430:	mov	r0, r5
 434:	bl	0 <coda_path_find_file>
 438:	cmp	r0, #0
 43c:	beq	464 <coda_set_definition_path_conditional+0x84>
 440:	mvn	r0, #0
 444:	b	4d0 <coda_set_definition_path_conditional+0xf0>
 448:	add	r1, sp, #24
 44c:	mov	r0, r6
 450:	bl	0 <coda_path_for_program>
 454:	cmp	r0, #0
 458:	beq	464 <coda_set_definition_path_conditional+0x84>
 45c:	mvn	r0, #0
 460:	b	4d0 <coda_set_definition_path_conditional+0xf0>
 464:	ldr	r0, [sp, #24]
 468:	cmp	r0, #0
 46c:	beq	4cc <coda_set_definition_path_conditional+0xec>
 470:	ldr	r0, [sp, #24]
 474:	mov	r1, #1
 478:	add	r3, sp, #28
 47c:	mov	r2, r4
 480:	bl	0 <coda_path_from_path>
 484:	cmp	r0, #0
 488:	beq	49c <coda_set_definition_path_conditional+0xbc>
 48c:	ldr	r0, [sp, #24]
 490:	bl	0 <free>
 494:	mvn	r0, #0
 498:	b	4d0 <coda_set_definition_path_conditional+0xf0>
 49c:	ldr	r0, [sp, #24]
 4a0:	bl	0 <free>
 4a4:	ldr	r0, [sp, #28]
 4a8:	bl	334 <coda_set_definition_path>
 4ac:	cmp	r0, #0
 4b0:	beq	4c4 <coda_set_definition_path_conditional+0xe4>
 4b4:	ldr	r0, [sp, #28]
 4b8:	bl	0 <free>
 4bc:	mvn	r0, #0
 4c0:	b	4d0 <coda_set_definition_path_conditional+0xf0>
 4c4:	ldr	r0, [sp, #28]
 4c8:	bl	0 <free>
 4cc:	mov	r0, #0
 4d0:	ldr	r4, [sp, #8]
 4d4:	ldr	r5, [sp, #12]
 4d8:	ldr	r6, [sp, #16]
 4dc:	ldr	lr, [sp, #4]
 4e0:	add	sp, sp, #32
 4e4:	bx	lr
 4e8:	.word	0x00000059

000004ec <coda_init>:
 4ec:	mov	ip, sp
 4f0:	sub	sp, sp, #8
 4f4:	str	ip, [sp]
 4f8:	str	lr, [sp, #4]
 4fc:	ldr	r0, [pc, #292]	; 628 <coda_init+0x13c>
 500:	ldr	r0, [r0]
 504:	cmp	r0, #0
 508:	bne	5ec <coda_init+0x100>
 50c:	bl	0 <coda_leap_second_table_init>
 510:	cmp	r0, #0
 514:	beq	520 <coda_init+0x34>
 518:	mvn	r0, #0
 51c:	b	604 <coda_init+0x118>
 520:	bl	0 <coda_data_dictionary_init>
 524:	cmp	r0, #0
 528:	beq	538 <coda_init+0x4c>
 52c:	bl	0 <coda_leap_second_table_done>
 530:	mvn	r0, #0
 534:	b	604 <coda_init+0x118>
 538:	ldr	r0, [pc, #228]	; 624 <coda_init+0x138>
 53c:	ldr	r0, [r0]
 540:	cmp	r0, #0
 544:	bne	5a0 <coda_init+0xb4>
 548:	ldr	r0, [pc, #200]	; 618 <coda_init+0x12c>
 54c:	bl	0 <getenv>
 550:	cmp	r0, #0
 554:	beq	5a0 <coda_init+0xb4>
 558:	ldr	r0, [pc, #184]	; 618 <coda_init+0x12c>
 55c:	bl	0 <getenv>
 560:	bl	0 <strdup>
 564:	ldr	r1, [pc, #184]	; 624 <coda_init+0x138>
 568:	str	r0, [r1]
 56c:	ldr	r0, [pc, #176]	; 624 <coda_init+0x138>
 570:	ldr	r0, [r0]
 574:	cmp	r0, #0
 578:	bne	5a0 <coda_init+0xb4>
 57c:	bl	0 <coda_data_dictionary_done>
 580:	bl	0 <coda_leap_second_table_done>
 584:	mvn	r0, #0
 588:	ldr	r1, [pc, #132]	; 614 <coda_init+0x128>
 58c:	ldr	r2, [pc, #140]	; 620 <coda_init+0x134>
 590:	mov	r3, #512	; 0x200
 594:	bl	0 <coda_set_error>
 598:	mvn	r0, #0
 59c:	b	604 <coda_init+0x118>
 5a0:	ldr	r0, [pc, #124]	; 624 <coda_init+0x138>
 5a4:	ldr	r0, [r0]
 5a8:	cmp	r0, #0
 5ac:	beq	5d4 <coda_init+0xe8>
 5b0:	ldr	r0, [pc, #108]	; 624 <coda_init+0x138>
 5b4:	ldr	r0, [r0]
 5b8:	bl	0 <coda_read_definitions>
 5bc:	cmp	r0, #0
 5c0:	beq	5d4 <coda_init+0xe8>
 5c4:	bl	0 <coda_data_dictionary_done>
 5c8:	bl	0 <coda_leap_second_table_done>
 5cc:	mvn	r0, #0
 5d0:	b	604 <coda_init+0x118>
 5d4:	ldr	r2, [pc, #52]	; 610 <coda_init+0x124>
 5d8:	mov	r1, #1
 5dc:	str	r1, [r2]
 5e0:	ldr	r1, [pc, #52]	; 61c <coda_init+0x130>
 5e4:	mov	ip, #1
 5e8:	str	ip, [r1]
 5ec:	ldr	r0, [pc, #52]	; 628 <coda_init+0x13c>
 5f0:	ldr	r3, [pc, #48]	; 628 <coda_init+0x13c>
 5f4:	ldr	r2, [r3]
 5f8:	add	ip, r2, #1
 5fc:	str	ip, [r0]
 600:	mov	r0, #0
 604:	ldr	lr, [sp, #4]
 608:	add	sp, sp, #8
 60c:	bx	lr
 610:	.word	0x00000000
 614:	.word	0x00000069
 618:	.word	0x00000059
 61c:	.word	0x00000000
 620:	.word	0x00000005
 624:	.word	0x00000020
 628:	.word	0x00000004

0000062c <coda_done>:
 62c:	mov	ip, sp
 630:	sub	sp, sp, #8
 634:	str	ip, [sp]
 638:	str	lr, [sp, #4]
 63c:	ldr	r0, [pc, #128]	; 6c4 <coda_done+0x98>
 640:	ldr	r0, [r0]
 644:	cmp	r0, #0
 648:	ble	6b4 <coda_done+0x88>
 64c:	ldr	r1, [pc, #112]	; 6c4 <coda_done+0x98>
 650:	ldr	r3, [pc, #108]	; 6c4 <coda_done+0x98>
 654:	ldr	r2, [r3]
 658:	sub	r0, r2, #1
 65c:	str	r0, [r1]
 660:	ldr	r0, [pc, #92]	; 6c4 <coda_done+0x98>
 664:	ldr	r0, [r0]
 668:	cmp	r0, #0
 66c:	bne	6b4 <coda_done+0x88>
 670:	bl	0 <coda_sp3_done>
 674:	bl	0 <coda_rinex_done>
 678:	bl	0 <coda_grib_done>
 67c:	bl	0 <coda_data_dictionary_done>
 680:	ldr	r0, [pc, #56]	; 6c0 <coda_done+0x94>
 684:	ldr	r0, [r0]
 688:	cmp	r0, #0
 68c:	beq	6a8 <coda_done+0x7c>
 690:	ldr	r0, [pc, #40]	; 6c0 <coda_done+0x94>
 694:	ldr	r0, [r0]
 698:	bl	0 <free>
 69c:	ldr	ip, [pc, #28]	; 6c0 <coda_done+0x94>
 6a0:	mov	r0, #0
 6a4:	str	r0, [ip]
 6a8:	bl	0 <coda_mem_done>
 6ac:	bl	0 <coda_type_done>
 6b0:	bl	0 <coda_leap_second_table_done>
 6b4:	ldr	lr, [sp, #4]
 6b8:	add	sp, sp, #8
 6bc:	bx	lr
 6c0:	.word	0x00000020
 6c4:	.word	0x00000004

000006c8 <coda_free>:
 6c8:	mov	ip, sp
 6cc:	sub	sp, sp, #8
 6d0:	str	ip, [sp]
 6d4:	str	lr, [sp, #4]
 6d8:	bl	0 <free>
 6dc:	ldr	lr, [sp, #4]
 6e0:	add	sp, sp, #8
 6e4:	bx	lr
