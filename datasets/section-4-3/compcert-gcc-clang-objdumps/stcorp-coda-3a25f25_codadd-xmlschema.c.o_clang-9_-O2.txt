
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-xmlschema.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <generate_xmlschema>:
   0:	push	{r4, r5, r6, r7, fp, lr}
   4:	add	fp, sp, #16
   8:	mov	r4, r0
   c:	movw	r0, #0
  10:	mov	r6, r3
  14:	mov	r7, r2
  18:	movt	r0, #0
  1c:	ldr	r5, [r0]
  20:	mov	r0, r1
  24:	bl	0 <coda_data_dictionary_get_product_class>
  28:	cmp	r0, #0
  2c:	beq	154 <generate_xmlschema+0x154>
  30:	mov	r1, r7
  34:	bl	0 <coda_product_class_get_product_type>
  38:	cmp	r0, #0
  3c:	beq	160 <generate_xmlschema+0x160>
  40:	mov	r1, r6
  44:	bl	0 <coda_product_type_get_product_definition_by_version>
  48:	cmp	r0, #0
  4c:	beq	16c <generate_xmlschema+0x16c>
  50:	mov	r6, r0
  54:	ldr	r0, [r0]
  58:	cmp	r0, #2
  5c:	bne	1a8 <generate_xmlschema+0x1a8>
  60:	ldr	r7, [r6, #28]
  64:	cmp	r7, #0
  68:	beq	1c4 <generate_xmlschema+0x1c4>
  6c:	cmp	r4, #0
  70:	beq	94 <generate_xmlschema+0x94>
  74:	movw	r1, #0
  78:	mov	r0, r4
  7c:	movt	r1, #0
  80:	bl	0 <fopen>
  84:	cmp	r0, #0
  88:	beq	224 <generate_xmlschema+0x224>
  8c:	ldr	r7, [r6, #28]
  90:	mov	r5, r0
  94:	ldr	r0, [r7, #8]
  98:	cmp	r0, #0
  9c:	bne	1ec <generate_xmlschema+0x1ec>
  a0:	ldr	r0, [r7, #48]	; 0x30
  a4:	cmp	r0, #1
  a8:	bne	204 <generate_xmlschema+0x204>
  ac:	movw	r0, #0
  b0:	mov	r1, #39	; 0x27
  b4:	mov	r2, #1
  b8:	mov	r3, r5
  bc:	movt	r0, #0
  c0:	bl	0 <fwrite>
  c4:	movw	r0, #0
  c8:	mov	r1, #56	; 0x38
  cc:	mov	r2, #1
  d0:	mov	r3, r5
  d4:	movt	r0, #0
  d8:	bl	0 <fwrite>
  dc:	ldr	r0, [r7, #52]	; 0x34
  e0:	movw	r1, #0
  e4:	movt	r1, #0
  e8:	ldr	r0, [r0]
  ec:	ldr	r2, [r0, #4]
  f0:	mov	r0, r5
  f4:	bl	0 <fprintf>
  f8:	ldr	r0, [r7, #52]	; 0x34
  fc:	ldr	r0, [r0]
 100:	ldr	r1, [r0, #8]
 104:	mov	r0, r5
 108:	bl	24c <print_xml_element>
 10c:	movw	r0, #0
 110:	mov	r1, #14
 114:	mov	r2, #1
 118:	mov	r3, r5
 11c:	movt	r0, #0
 120:	bl	0 <fwrite>
 124:	movw	r0, #0
 128:	mov	r1, #13
 12c:	mov	r2, #1
 130:	mov	r3, r5
 134:	movt	r0, #0
 138:	bl	0 <fwrite>
 13c:	cmp	r4, #0
 140:	beq	150 <generate_xmlschema+0x150>
 144:	mov	r0, r5
 148:	pop	{r4, r5, r6, r7, fp, lr}
 14c:	b	0 <fclose>
 150:	pop	{r4, r5, r6, r7, fp, pc}
 154:	ldr	r0, [pc, #236]	; 248 <generate_xmlschema+0x248>
 158:	ldr	r1, [pc, r0]
 15c:	b	174 <generate_xmlschema+0x174>
 160:	ldr	r0, [pc, #220]	; 244 <generate_xmlschema+0x244>
 164:	ldr	r1, [pc, r0]
 168:	b	174 <generate_xmlschema+0x174>
 16c:	ldr	r0, [pc, #204]	; 240 <generate_xmlschema+0x240>
 170:	ldr	r1, [pc, r0]
 174:	bl	0 <__aeabi_read_tp>
 178:	ldr	r0, [r0, r1]
 17c:	movw	r1, #0
 180:	movt	r1, #0
 184:	ldr	r4, [r1]
 188:	bl	0 <coda_errno_to_string>
 18c:	movw	r1, #0
 190:	mov	r2, r0
 194:	mov	r0, r4
 198:	movt	r1, #0
 19c:	bl	0 <fprintf>
 1a0:	mov	r0, #1
 1a4:	bl	0 <exit>
 1a8:	movw	r0, #0
 1ac:	mov	r1, #36	; 0x24
 1b0:	movt	r0, #0
 1b4:	ldr	r3, [r0]
 1b8:	movw	r0, #0
 1bc:	movt	r0, #0
 1c0:	b	1dc <generate_xmlschema+0x1dc>
 1c4:	movw	r0, #0
 1c8:	mov	r1, #49	; 0x31
 1cc:	movt	r0, #0
 1d0:	ldr	r3, [r0]
 1d4:	movw	r0, #0
 1d8:	movt	r0, #0
 1dc:	mov	r2, #1
 1e0:	bl	0 <fwrite>
 1e4:	mov	r0, #1
 1e8:	bl	0 <exit>
 1ec:	movw	r0, #0
 1f0:	movw	r1, #0
 1f4:	movw	r3, #0
 1f8:	mov	r2, #229	; 0xe5
 1fc:	movt	r0, #0
 200:	b	218 <generate_xmlschema+0x218>
 204:	movw	r0, #0
 208:	movw	r1, #0
 20c:	movw	r3, #0
 210:	mov	r2, #231	; 0xe7
 214:	movt	r0, #0
 218:	movt	r1, #0
 21c:	movt	r3, #0
 220:	bl	0 <__assert_fail>
 224:	movw	r0, #0
 228:	movw	r1, #0
 22c:	mov	r2, r4
 230:	movt	r0, #0
 234:	movt	r1, #0
 238:	ldr	r0, [r0]
 23c:	b	19c <generate_xmlschema+0x19c>
 240:	.word	0x000000c8
 244:	.word	0x000000d8
 248:	.word	0x000000e8

0000024c <print_xml_element>:
 24c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 250:	add	fp, sp, #28
 254:	sub	sp, sp, #28
 258:	mov	r5, r1
 25c:	mov	r4, r0
 260:	add	r1, sp, #24
 264:	mov	r0, r5
 268:	bl	0 <coda_type_get_class>
 26c:	ldr	r0, [sp, #24]
 270:	cmp	r0, #0
 274:	bne	58c <print_xml_element+0x340>
 278:	movw	r0, #0
 27c:	mov	r1, #29
 280:	mov	r2, #1
 284:	mov	r3, r4
 288:	movt	r0, #0
 28c:	bl	0 <fwrite>
 290:	add	r1, sp, #20
 294:	mov	r0, r5
 298:	bl	0 <coda_type_get_num_record_fields>
 29c:	ldr	r0, [sp, #20]
 2a0:	cmp	r0, #1
 2a4:	blt	518 <print_xml_element+0x2cc>
 2a8:	mov	r6, #0
 2ac:	add	r9, sp, #12
 2b0:	add	sl, sp, #16
 2b4:	add	r7, sp, #4
 2b8:	b	2fc <print_xml_element+0xb0>
 2bc:	mov	r0, #62	; 0x3e
 2c0:	mov	r1, r4
 2c4:	bl	0 <fputc>
 2c8:	ldr	r1, [sp, #12]
 2cc:	mov	r0, r4
 2d0:	bl	24c <print_xml_element>
 2d4:	movw	r0, #0
 2d8:	mov	r1, #13
 2dc:	mov	r2, #1
 2e0:	mov	r3, r4
 2e4:	movt	r0, #0
 2e8:	bl	0 <fwrite>
 2ec:	ldr	r0, [sp, #20]
 2f0:	add	r6, r6, #1
 2f4:	cmp	r6, r0
 2f8:	bge	518 <print_xml_element+0x2cc>
 2fc:	mov	r0, r5
 300:	mov	r1, r6
 304:	add	r2, sp, #8
 308:	bl	0 <coda_type_get_record_field_real_name>
 30c:	mov	r0, r5
 310:	mov	r1, r6
 314:	mov	r2, r9
 318:	bl	0 <coda_type_get_record_field_type>
 31c:	ldr	r0, [sp, #12]
 320:	mov	r1, sl
 324:	bl	0 <coda_type_get_class>
 328:	ldr	r0, [sp, #12]
 32c:	mov	r1, r7
 330:	bl	0 <coda_type_get_format>
 334:	ldr	r2, [sp, #8]
 338:	movw	r1, #0
 33c:	mov	r0, r4
 340:	movt	r1, #0
 344:	bl	0 <fprintf>
 348:	ldr	r0, [sp, #16]
 34c:	cmp	r0, #1
 350:	ldreq	r1, [sp, #4]
 354:	cmpeq	r1, #2
 358:	beq	398 <print_xml_element+0x14c>
 35c:	cmp	r0, #6
 360:	bne	3e0 <print_xml_element+0x194>
 364:	ldr	r0, [sp, #12]
 368:	mov	r1, r9
 36c:	bl	0 <coda_type_get_special_base_type>
 370:	ldr	r0, [sp, #12]
 374:	mov	r1, sl
 378:	bl	0 <coda_type_get_class>
 37c:	ldr	r0, [sp, #12]
 380:	mov	r1, r7
 384:	bl	0 <coda_type_get_format>
 388:	ldr	r0, [sp, #16]
 38c:	cmp	r0, #0
 390:	bne	3e8 <print_xml_element+0x19c>
 394:	b	2bc <print_xml_element+0x70>
 398:	movw	r0, #0
 39c:	mov	r1, #36	; 0x24
 3a0:	mov	r2, #1
 3a4:	mov	r3, r4
 3a8:	movt	r0, #0
 3ac:	bl	0 <fwrite>
 3b0:	ldr	r0, [sp, #12]
 3b4:	mov	r1, r9
 3b8:	bl	0 <coda_type_get_array_base_type>
 3bc:	ldr	r0, [sp, #12]
 3c0:	mov	r1, sl
 3c4:	bl	0 <coda_type_get_class>
 3c8:	ldr	r0, [sp, #12]
 3cc:	mov	r1, r7
 3d0:	bl	0 <coda_type_get_format>
 3d4:	ldr	r0, [sp, #16]
 3d8:	cmp	r0, #6
 3dc:	beq	364 <print_xml_element+0x118>
 3e0:	cmp	r0, #0
 3e4:	beq	2bc <print_xml_element+0x70>
 3e8:	sub	r0, r0, #1
 3ec:	cmp	r0, #3
 3f0:	bhi	55c <print_xml_element+0x310>
 3f4:	movw	r8, #0
 3f8:	add	r1, pc, #4
 3fc:	movt	r8, #0
 400:	ldr	pc, [r1, r0, lsl #2]
 404:	.word	0x00000414
 408:	.word	0x00000440
 40c:	.word	0x0000042c
 410:	.word	0x00000438
 414:	ldr	r0, [sp, #4]
 418:	movw	r8, #0
 41c:	movt	r8, #0
 420:	cmp	r0, #2
 424:	bne	440 <print_xml_element+0x1f4>
 428:	b	574 <print_xml_element+0x328>
 42c:	movw	r8, #0
 430:	movt	r8, #0
 434:	b	440 <print_xml_element+0x1f4>
 438:	movw	r8, #0
 43c:	movt	r8, #0
 440:	ldr	r0, [sp, #12]
 444:	mov	r1, sp
 448:	bl	0 <coda_type_has_attributes>
 44c:	ldr	r0, [sp]
 450:	cmp	r0, #0
 454:	beq	500 <print_xml_element+0x2b4>
 458:	mov	r0, #62	; 0x3e
 45c:	mov	r1, r4
 460:	bl	0 <fputc>
 464:	movw	r0, #0
 468:	mov	r1, #16
 46c:	mov	r2, #1
 470:	mov	r3, r4
 474:	movt	r0, #0
 478:	bl	0 <fwrite>
 47c:	movw	r0, #0
 480:	mov	r1, #18
 484:	mov	r2, #1
 488:	mov	r3, r4
 48c:	movt	r0, #0
 490:	bl	0 <fwrite>
 494:	movw	r1, #0
 498:	mov	r0, r4
 49c:	mov	r2, r8
 4a0:	movt	r1, #0
 4a4:	bl	0 <fprintf>
 4a8:	ldr	r1, [sp, #12]
 4ac:	mov	r0, r4
 4b0:	bl	5ac <print_attributes>
 4b4:	movw	r0, #0
 4b8:	mov	r1, #15
 4bc:	mov	r2, #1
 4c0:	mov	r3, r4
 4c4:	movt	r0, #0
 4c8:	bl	0 <fwrite>
 4cc:	movw	r0, #0
 4d0:	mov	r1, #19
 4d4:	mov	r2, #1
 4d8:	mov	r3, r4
 4dc:	movt	r0, #0
 4e0:	bl	0 <fwrite>
 4e4:	movw	r0, #0
 4e8:	mov	r1, #17
 4ec:	mov	r2, #1
 4f0:	mov	r3, r4
 4f4:	movt	r0, #0
 4f8:	bl	0 <fwrite>
 4fc:	b	2d4 <print_xml_element+0x88>
 500:	movw	r1, #0
 504:	mov	r0, r4
 508:	mov	r2, r8
 50c:	movt	r1, #0
 510:	bl	0 <fprintf>
 514:	b	2d4 <print_xml_element+0x88>
 518:	movw	r0, #0
 51c:	mov	r1, #14
 520:	mov	r2, #1
 524:	mov	r3, r4
 528:	movt	r0, #0
 52c:	bl	0 <fwrite>
 530:	mov	r0, r4
 534:	mov	r1, r5
 538:	bl	5ac <print_attributes>
 53c:	movw	r0, #0
 540:	mov	r1, #17
 544:	mov	r2, #1
 548:	mov	r3, r4
 54c:	movt	r0, #0
 550:	bl	0 <fwrite>
 554:	sub	sp, fp, #28
 558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 55c:	movw	r0, #0
 560:	movw	r1, #0
 564:	movw	r3, #0
 568:	mov	r2, #151	; 0x97
 56c:	movt	r0, #0
 570:	b	5a0 <print_xml_element+0x354>
 574:	movw	r0, #0
 578:	movw	r1, #0
 57c:	movw	r3, #0
 580:	mov	r2, #138	; 0x8a
 584:	movt	r0, #0
 588:	b	5a0 <print_xml_element+0x354>
 58c:	movw	r0, #0
 590:	movw	r1, #0
 594:	movw	r3, #0
 598:	mov	r2, #96	; 0x60
 59c:	movt	r0, #0
 5a0:	movt	r1, #0
 5a4:	movt	r3, #0
 5a8:	bl	0 <__assert_fail>

000005ac <print_attributes>:
 5ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 5b0:	add	fp, sp, #28
 5b4:	sub	sp, sp, #28
 5b8:	mov	r2, r1
 5bc:	mov	r4, r0
 5c0:	add	r1, sp, #24
 5c4:	mov	r0, r2
 5c8:	bl	0 <coda_type_get_attributes>
 5cc:	ldr	r0, [sp, #24]
 5d0:	add	r1, sp, #20
 5d4:	bl	0 <coda_type_get_num_record_fields>
 5d8:	ldr	r0, [sp, #20]
 5dc:	cmp	r0, #1
 5e0:	blt	6f0 <print_attributes+0x144>
 5e4:	movw	r6, #0
 5e8:	movw	r8, #0
 5ec:	mov	r5, #0
 5f0:	add	r9, sp, #4
 5f4:	add	sl, sp, #12
 5f8:	add	r7, sp, #16
 5fc:	movt	r6, #0
 600:	movt	r8, #0
 604:	b	644 <print_attributes+0x98>
 608:	movw	r0, #0
 60c:	mov	r1, #16
 610:	movt	r0, #0
 614:	mov	r2, #1
 618:	mov	r3, r4
 61c:	bl	0 <fwrite>
 620:	mov	r0, r8
 624:	mov	r1, #2
 628:	mov	r2, #1
 62c:	mov	r3, r4
 630:	bl	0 <fwrite>
 634:	ldr	r0, [sp, #20]
 638:	add	r5, r5, #1
 63c:	cmp	r5, r0
 640:	bge	6f0 <print_attributes+0x144>
 644:	ldr	r0, [sp, #24]
 648:	mov	r1, r5
 64c:	add	r2, sp, #8
 650:	bl	0 <coda_type_get_record_field_real_name>
 654:	ldr	r0, [sp, #24]
 658:	mov	r1, r5
 65c:	mov	r2, r9
 660:	bl	0 <coda_type_get_record_field_available_status>
 664:	ldr	r0, [sp, #24]
 668:	mov	r1, r5
 66c:	mov	r2, sl
 670:	bl	0 <coda_type_get_record_field_type>
 674:	ldr	r0, [sp, #12]
 678:	mov	r1, r7
 67c:	bl	0 <coda_type_get_class>
 680:	ldr	r2, [sp, #8]
 684:	mov	r0, r4
 688:	mov	r1, r6
 68c:	bl	0 <fprintf>
 690:	ldr	r0, [sp, #4]
 694:	cmp	r0, #1
 698:	bne	6b4 <print_attributes+0x108>
 69c:	movw	r0, #0
 6a0:	mov	r1, #15
 6a4:	mov	r2, #1
 6a8:	mov	r3, r4
 6ac:	movt	r0, #0
 6b0:	bl	0 <fwrite>
 6b4:	ldr	r0, [sp, #16]
 6b8:	cmp	r0, #4
 6bc:	beq	6e0 <print_attributes+0x134>
 6c0:	cmp	r0, #3
 6c4:	beq	608 <print_attributes+0x5c>
 6c8:	cmp	r0, #2
 6cc:	bne	6f8 <print_attributes+0x14c>
 6d0:	movw	r0, #0
 6d4:	mov	r1, #18
 6d8:	movt	r0, #0
 6dc:	b	614 <print_attributes+0x68>
 6e0:	movw	r0, #0
 6e4:	mov	r1, #17
 6e8:	movt	r0, #0
 6ec:	b	614 <print_attributes+0x68>
 6f0:	sub	sp, fp, #28
 6f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 6f8:	movw	r0, #0
 6fc:	movw	r1, #0
 700:	movw	r3, #0
 704:	mov	r2, #82	; 0x52
 708:	movt	r0, #0
 70c:	movt	r1, #0
 710:	movt	r3, #0
 714:	bl	0 <__assert_fail>
