
../compcert-repos/prog2/CMakeFiles/4.dir/Aula04_Listas_T1/lista-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_l>:
   0:	push	{r0, r1, r2, r3}
   4:	mov	r0, #12
   8:	push	{r4, r5, r6, r7, r8, r9, lr}
   c:	sub	sp, sp, #12
  10:	mov	r4, #0
  14:	ldr	r7, [sp, #40]	; 0x28
  18:	bl	0 <malloc>
  1c:	add	r3, sp, #44	; 0x2c
  20:	cmp	r7, #0
  24:	str	r3, [sp, #4]
  28:	mov	r9, r0
  2c:	str	r7, [r0, #8]
  30:	str	r4, [r0]
  34:	str	r4, [r0, #4]
  38:	ble	94 <_l+0x94>
  3c:	mov	r8, #12
  40:	ldr	r3, [sp, #4]
  44:	cmp	r4, #0
  48:	add	r2, r3, #4
  4c:	mov	r0, r8
  50:	str	r2, [sp, #4]
  54:	ldr	r6, [r3]
  58:	beq	b4 <_l+0xb4>
  5c:	bl	0 <malloc>
  60:	str	r0, [r5, #4]
  64:	str	r5, [r0, #8]
  68:	mov	r5, r0
  6c:	mov	r0, r6
  70:	bl	0 <strlen>
  74:	add	r4, r4, #1
  78:	add	r0, r0, #1
  7c:	bl	0 <malloc>
  80:	mov	r1, r6
  84:	str	r0, [r5]
  88:	bl	0 <strcpy>
  8c:	cmp	r7, r4
  90:	bne	40 <_l+0x40>
  94:	mov	r3, #0
  98:	mov	r0, r9
  9c:	str	r5, [r9, #4]
  a0:	str	r3, [r5, #4]
  a4:	add	sp, sp, #12
  a8:	pop	{r4, r5, r6, r7, r8, r9, lr}
  ac:	add	sp, sp, #16
  b0:	bx	lr
  b4:	bl	0 <malloc>
  b8:	str	r0, [r9]
  bc:	str	r4, [r0, #8]
  c0:	mov	r5, r0
  c4:	b	6c <_l+0x6c>

000000c8 <_f>:
  c8:	cmp	r0, #0
  cc:	bxeq	lr
  d0:	ldr	r3, [r0]
  d4:	cmp	r3, #0
  d8:	cmpne	r1, #0
  dc:	movgt	r2, #1
  e0:	movle	r2, #0
  e4:	ble	100 <_f+0x38>
  e8:	mov	r2, #0
  ec:	ldr	r3, [r3, #4]
  f0:	add	r2, r2, #1
  f4:	cmp	r3, #0
  f8:	cmpne	r1, r2
  fc:	bgt	ec <_f+0x24>
 100:	cmp	r1, r2
 104:	ldreq	r0, [r3]
 108:	ldrne	r0, [pc]	; 110 <_f+0x48>
 10c:	bx	lr
 110:	.word	0x00000000

00000114 <teste_lista_nova>:
 114:	push	{r4, r5, r6, lr}
 118:	ldr	r0, [pc, #104]	; 188 <teste_lista_nova+0x74>
 11c:	bl	0 <printf>
 120:	bl	0 <lista_nova>
 124:	subs	r5, r0, #0
 128:	beq	170 <teste_lista_nova+0x5c>
 12c:	ldr	r4, [r5, #8]
 130:	cmp	r4, #0
 134:	bne	14c <teste_lista_nova+0x38>
 138:	bl	0 <lista_apaga>
 13c:	ldr	r0, [pc, #72]	; 18c <teste_lista_nova+0x78>
 140:	bl	0 <puts>
 144:	mov	r0, r4
 148:	pop	{r4, r5, r6, pc}
 14c:	ldr	r0, [pc, #60]	; 190 <teste_lista_nova+0x7c>
 150:	bl	0 <printf>
 154:	mov	r0, r5
 158:	bl	0 <lista_apaga>
 15c:	mov	r4, #1
 160:	mov	r0, #10
 164:	bl	0 <putchar>
 168:	mov	r0, r4
 16c:	pop	{r4, r5, r6, pc}
 170:	ldr	r0, [pc, #28]	; 194 <teste_lista_nova+0x80>
 174:	bl	0 <printf>
 178:	mov	r0, #10
 17c:	bl	0 <putchar>
 180:	mov	r4, #1
 184:	b	144 <teste_lista_nova+0x30>
 188:	.word	0x00000004
 18c:	.word	0x00000050
 190:	.word	0x0000002c
 194:	.word	0x00000014

00000198 <teste_lista_insere>:
 198:	ldr	r2, [pc, #712]	; 468 <teste_lista_insere+0x2d0>
 19c:	push	{r4, r5, r6, r7, r8, lr}
 1a0:	mov	r1, r2
 1a4:	mov	r0, #2
 1a8:	bl	0 <_l>
 1ac:	mov	r4, r0
 1b0:	ldr	r0, [pc, #692]	; 46c <teste_lista_insere+0x2d4>
 1b4:	bl	0 <printf>
 1b8:	ldr	r3, [r4]
 1bc:	mov	r0, r4
 1c0:	ldr	r1, [pc, #680]	; 470 <teste_lista_insere+0x2d8>
 1c4:	ldr	r2, [r3, #4]
 1c8:	bl	0 <lista_insere>
 1cc:	cmp	r0, #0
 1d0:	movne	r5, #0
 1d4:	beq	3b0 <teste_lista_insere+0x218>
 1d8:	ldr	r3, [r4, #8]
 1dc:	cmp	r3, #3
 1e0:	beq	20c <teste_lista_insere+0x74>
 1e4:	ldr	r0, [pc, #648]	; 474 <teste_lista_insere+0x2dc>
 1e8:	bl	0 <printf>
 1ec:	ldr	r3, [r4, #8]
 1f0:	add	r5, r5, #1
 1f4:	cmp	r3, #3
 1f8:	beq	20c <teste_lista_insere+0x74>
 1fc:	mov	r0, #10
 200:	bl	0 <putchar>
 204:	mov	r0, r5
 208:	pop	{r4, r5, r6, r7, r8, pc}
 20c:	ldr	r6, [r4]
 210:	ldr	r1, [pc, #592]	; 468 <teste_lista_insere+0x2d0>
 214:	ldr	r0, [r6]
 218:	bl	0 <strcmp>
 21c:	cmp	r0, #0
 220:	bne	254 <teste_lista_insere+0xbc>
 224:	ldr	r7, [r6, #4]
 228:	ldr	r1, [pc, #576]	; 470 <teste_lista_insere+0x2d8>
 22c:	ldr	r0, [r7]
 230:	bl	0 <strcmp>
 234:	cmp	r0, #0
 238:	bne	254 <teste_lista_insere+0xbc>
 23c:	ldr	r3, [r7, #4]
 240:	ldr	r1, [pc, #544]	; 468 <teste_lista_insere+0x2d0>
 244:	ldr	r0, [r3]
 248:	bl	0 <strcmp>
 24c:	cmp	r0, #0
 250:	beq	264 <teste_lista_insere+0xcc>
 254:	ldr	r0, [pc, #540]	; 478 <teste_lista_insere+0x2e0>
 258:	bl	0 <printf>
 25c:	ldr	r6, [r4]
 260:	add	r5, r5, #1
 264:	mov	r2, r6
 268:	ldr	r1, [pc, #512]	; 470 <teste_lista_insere+0x2d8>
 26c:	mov	r0, r4
 270:	bl	0 <lista_insere>
 274:	ldr	r3, [r4]
 278:	cmp	r3, r0
 27c:	beq	28c <teste_lista_insere+0xf4>
 280:	ldr	r0, [pc, #500]	; 47c <teste_lista_insere+0x2e4>
 284:	bl	0 <printf>
 288:	add	r5, r5, #1
 28c:	ldr	r3, [r4, #8]
 290:	cmp	r3, #4
 294:	beq	2b0 <teste_lista_insere+0x118>
 298:	ldr	r0, [pc, #480]	; 480 <teste_lista_insere+0x2e8>
 29c:	bl	0 <printf>
 2a0:	ldr	r3, [r4, #8]
 2a4:	add	r5, r5, #1
 2a8:	cmp	r3, #4
 2ac:	bne	1fc <teste_lista_insere+0x64>
 2b0:	ldr	r6, [r4]
 2b4:	ldr	r1, [pc, #436]	; 470 <teste_lista_insere+0x2d8>
 2b8:	ldr	r0, [r6]
 2bc:	bl	0 <strcmp>
 2c0:	cmp	r0, #0
 2c4:	bne	2e0 <teste_lista_insere+0x148>
 2c8:	ldr	r6, [r6, #4]
 2cc:	ldr	r1, [pc, #404]	; 468 <teste_lista_insere+0x2d0>
 2d0:	ldr	r0, [r6]
 2d4:	bl	0 <strcmp>
 2d8:	cmp	r0, #0
 2dc:	beq	3c0 <teste_lista_insere+0x228>
 2e0:	ldr	r0, [pc, #400]	; 478 <teste_lista_insere+0x2e0>
 2e4:	bl	0 <printf>
 2e8:	add	r5, r5, #1
 2ec:	mov	r2, #0
 2f0:	ldr	r1, [pc, #376]	; 470 <teste_lista_insere+0x2d8>
 2f4:	mov	r0, r4
 2f8:	bl	0 <lista_insere>
 2fc:	ldr	r3, [r4, #8]
 300:	cmp	r3, #5
 304:	beq	320 <teste_lista_insere+0x188>
 308:	ldr	r0, [pc, #372]	; 484 <teste_lista_insere+0x2ec>
 30c:	bl	0 <printf>
 310:	ldr	r3, [r4, #8]
 314:	add	r5, r5, #1
 318:	cmp	r3, #5
 31c:	bne	1fc <teste_lista_insere+0x64>
 320:	ldr	r3, [r4]
 324:	ldr	r1, [pc, #324]	; 470 <teste_lista_insere+0x2d8>
 328:	ldr	r3, [r3, #4]
 32c:	ldr	r3, [r3, #4]
 330:	ldr	r3, [r3, #4]
 334:	ldr	r3, [r3, #4]
 338:	ldr	r0, [r3]
 33c:	bl	0 <strcmp>
 340:	cmp	r0, #0
 344:	bne	41c <teste_lista_insere+0x284>
 348:	mov	r0, r4
 34c:	bl	0 <lista_apaga>
 350:	bl	0 <lista_nova>
 354:	mov	r2, #0
 358:	ldr	r1, [pc, #272]	; 470 <teste_lista_insere+0x2d8>
 35c:	mov	r4, r0
 360:	bl	0 <lista_insere>
 364:	ldr	r3, [r4, #8]
 368:	cmp	r3, #1
 36c:	beq	3f4 <teste_lista_insere+0x25c>
 370:	ldr	r0, [pc, #272]	; 488 <teste_lista_insere+0x2f0>
 374:	bl	0 <printf>
 378:	mov	r0, r4
 37c:	bl	0 <lista_tamanho>
 380:	add	r5, r5, #1
 384:	cmp	r0, #1
 388:	bne	1fc <teste_lista_insere+0x64>
 38c:	ldr	r3, [r4]
 390:	ldr	r1, [pc, #216]	; 470 <teste_lista_insere+0x2d8>
 394:	ldr	r0, [r3]
 398:	bl	0 <strcmp>
 39c:	cmp	r0, #0
 3a0:	bne	450 <teste_lista_insere+0x2b8>
 3a4:	mov	r0, r4
 3a8:	bl	0 <lista_apaga>
 3ac:	b	1fc <teste_lista_insere+0x64>
 3b0:	ldr	r0, [pc, #212]	; 48c <teste_lista_insere+0x2f4>
 3b4:	bl	0 <printf>
 3b8:	mov	r5, #1
 3bc:	b	1d8 <teste_lista_insere+0x40>
 3c0:	ldr	r6, [r6, #4]
 3c4:	ldr	r1, [pc, #164]	; 470 <teste_lista_insere+0x2d8>
 3c8:	ldr	r0, [r6]
 3cc:	bl	0 <strcmp>
 3d0:	cmp	r0, #0
 3d4:	bne	2e0 <teste_lista_insere+0x148>
 3d8:	ldr	r3, [r6, #4]
 3dc:	ldr	r1, [pc, #132]	; 468 <teste_lista_insere+0x2d0>
 3e0:	ldr	r0, [r3]
 3e4:	bl	0 <strcmp>
 3e8:	cmp	r0, #0
 3ec:	beq	2ec <teste_lista_insere+0x154>
 3f0:	b	2e0 <teste_lista_insere+0x148>
 3f4:	mov	r0, r4
 3f8:	bl	0 <lista_tamanho>
 3fc:	cmp	r0, #1
 400:	beq	42c <teste_lista_insere+0x294>
 404:	cmp	r5, #0
 408:	bne	1fc <teste_lista_insere+0x64>
 40c:	ldr	r0, [pc, #124]	; 490 <teste_lista_insere+0x2f8>
 410:	bl	0 <puts>
 414:	mov	r5, #0
 418:	b	204 <teste_lista_insere+0x6c>
 41c:	ldr	r0, [pc, #84]	; 478 <teste_lista_insere+0x2e0>
 420:	bl	0 <printf>
 424:	add	r5, r5, #1
 428:	b	348 <teste_lista_insere+0x1b0>
 42c:	ldr	r3, [r4]
 430:	ldr	r1, [pc, #56]	; 470 <teste_lista_insere+0x2d8>
 434:	ldr	r0, [r3]
 438:	bl	0 <strcmp>
 43c:	cmp	r0, #0
 440:	bne	450 <teste_lista_insere+0x2b8>
 444:	mov	r0, r4
 448:	bl	0 <lista_apaga>
 44c:	b	404 <teste_lista_insere+0x26c>
 450:	ldr	r0, [pc, #32]	; 478 <teste_lista_insere+0x2e0>
 454:	bl	0 <printf>
 458:	mov	r0, r4
 45c:	add	r5, r5, #1
 460:	bl	0 <lista_apaga>
 464:	b	1fc <teste_lista_insere+0x64>
 468:	.word	0x00000054
 46c:	.word	0x00000058
 470:	.word	0x0000006c
 474:	.word	0x000000a0
 478:	.word	0x000000dc
 47c:	.word	0x00000114
 480:	.word	0x00000144
 484:	.word	0x00000180
 488:	.word	0x000001bc
 48c:	.word	0x00000074
 490:	.word	0x00000050

00000494 <teste_lista_remove>:
 494:	push	{r4, r5, r6, lr}
 498:	sub	sp, sp, #8
 49c:	ldr	r2, [pc, #348]	; 600 <teste_lista_remove+0x16c>
 4a0:	ldr	r3, [pc, #348]	; 604 <teste_lista_remove+0x170>
 4a4:	ldr	r1, [pc, #348]	; 608 <teste_lista_remove+0x174>
 4a8:	str	r2, [sp, #4]
 4ac:	str	r3, [sp]
 4b0:	ldr	r2, [pc, #340]	; 60c <teste_lista_remove+0x178>
 4b4:	ldr	r3, [pc, #340]	; 610 <teste_lista_remove+0x17c>
 4b8:	mov	r0, #5
 4bc:	bl	0 <_l>
 4c0:	mov	r4, r0
 4c4:	ldr	r0, [pc, #328]	; 614 <teste_lista_remove+0x180>
 4c8:	bl	0 <printf>
 4cc:	ldr	r3, [r4]
 4d0:	mov	r0, r4
 4d4:	ldr	r3, [r3, #4]
 4d8:	ldr	r3, [r3, #4]
 4dc:	ldr	r1, [r3, #4]
 4e0:	bl	0 <lista_remove>
 4e4:	ldr	r3, [r4, #4]
 4e8:	cmp	r3, r0
 4ec:	moveq	r5, #0
 4f0:	beq	500 <teste_lista_remove+0x6c>
 4f4:	ldr	r0, [pc, #284]	; 618 <teste_lista_remove+0x184>
 4f8:	bl	0 <printf>
 4fc:	mov	r5, #1
 500:	ldr	r3, [r4, #8]
 504:	cmp	r3, #4
 508:	beq	518 <teste_lista_remove+0x84>
 50c:	ldr	r0, [pc, #264]	; 61c <teste_lista_remove+0x188>
 510:	bl	0 <printf>
 514:	add	r5, r5, #1
 518:	ldr	r6, [r4]
 51c:	ldr	r1, [pc, #228]	; 608 <teste_lista_remove+0x174>
 520:	ldr	r0, [r6]
 524:	bl	0 <strcmp>
 528:	cmp	r0, #0
 52c:	bne	548 <teste_lista_remove+0xb4>
 530:	ldr	r6, [r6, #4]
 534:	ldr	r1, [pc, #208]	; 60c <teste_lista_remove+0x178>
 538:	ldr	r0, [r6]
 53c:	bl	0 <strcmp>
 540:	cmp	r0, #0
 544:	beq	590 <teste_lista_remove+0xfc>
 548:	ldr	r0, [pc, #208]	; 620 <teste_lista_remove+0x18c>
 54c:	bl	0 <printf>
 550:	mov	r1, #0
 554:	mov	r0, r4
 558:	bl	0 <lista_remove>
 55c:	add	r5, r5, #1
 560:	cmp	r0, #0
 564:	beq	5f4 <teste_lista_remove+0x160>
 568:	ldr	r0, [pc, #180]	; 624 <teste_lista_remove+0x190>
 56c:	bl	0 <printf>
 570:	mov	r0, r4
 574:	add	r5, r5, #1
 578:	bl	0 <lista_apaga>
 57c:	mov	r0, #10
 580:	bl	0 <putchar>
 584:	mov	r0, r5
 588:	add	sp, sp, #8
 58c:	pop	{r4, r5, r6, pc}
 590:	ldr	r6, [r6, #4]
 594:	ldr	r1, [pc, #116]	; 610 <teste_lista_remove+0x17c>
 598:	ldr	r0, [r6]
 59c:	bl	0 <strcmp>
 5a0:	cmp	r0, #0
 5a4:	bne	548 <teste_lista_remove+0xb4>
 5a8:	ldr	r3, [r6, #4]
 5ac:	ldr	r1, [pc, #76]	; 600 <teste_lista_remove+0x16c>
 5b0:	ldr	r0, [r3]
 5b4:	bl	0 <strcmp>
 5b8:	subs	r1, r0, #0
 5bc:	bne	548 <teste_lista_remove+0xb4>
 5c0:	mov	r0, r4
 5c4:	bl	0 <lista_remove>
 5c8:	cmp	r0, #0
 5cc:	bne	568 <teste_lista_remove+0xd4>
 5d0:	mov	r0, r4
 5d4:	bl	0 <lista_apaga>
 5d8:	cmp	r5, #0
 5dc:	bne	57c <teste_lista_remove+0xe8>
 5e0:	ldr	r0, [pc, #64]	; 628 <teste_lista_remove+0x194>
 5e4:	bl	0 <puts>
 5e8:	mov	r0, r5
 5ec:	add	sp, sp, #8
 5f0:	pop	{r4, r5, r6, pc}
 5f4:	mov	r0, r4
 5f8:	bl	0 <lista_apaga>
 5fc:	b	57c <teste_lista_remove+0xe8>
 600:	.word	0x00000204
 604:	.word	0x00000208
 608:	.word	0x00000200
 60c:	.word	0x000001fc
 610:	.word	0x000001f8
 614:	.word	0x0000020c
 618:	.word	0x00000220
 61c:	.word	0x0000025c
 620:	.word	0x00000298
 624:	.word	0x000002d0
 628:	.word	0x00000050

0000062c <teste_lista_pesquisa>:
 62c:	push	{r4, r5, lr}
 630:	sub	sp, sp, #20
 634:	ldr	r3, [pc, #340]	; 790 <teste_lista_pesquisa+0x164>
 638:	ldr	r5, [pc, #340]	; 794 <teste_lista_pesquisa+0x168>
 63c:	mov	r2, r3
 640:	mov	r1, r3
 644:	str	r3, [sp, #12]
 648:	str	r3, [sp, #8]
 64c:	str	r3, [sp]
 650:	str	r5, [sp, #4]
 654:	mov	r0, #7
 658:	bl	0 <_l>
 65c:	mov	r4, r0
 660:	ldr	r0, [pc, #304]	; 798 <teste_lista_pesquisa+0x16c>
 664:	bl	0 <printf>
 668:	mov	r1, r5
 66c:	mov	r0, r4
 670:	mov	r2, #0
 674:	bl	0 <lista_pesquisa>
 678:	ldr	r3, [r4]
 67c:	ldr	r3, [r3, #4]
 680:	ldr	r3, [r3, #4]
 684:	ldr	r3, [r3, #4]
 688:	ldr	r3, [r3, #4]
 68c:	cmp	r3, r0
 690:	moveq	r5, #0
 694:	beq	6a4 <teste_lista_pesquisa+0x78>
 698:	ldr	r0, [pc, #252]	; 79c <teste_lista_pesquisa+0x170>
 69c:	bl	0 <printf>
 6a0:	mov	r5, #1
 6a4:	mov	r2, #0
 6a8:	ldr	r1, [pc, #240]	; 7a0 <teste_lista_pesquisa+0x174>
 6ac:	mov	r0, r4
 6b0:	bl	0 <lista_pesquisa>
 6b4:	cmp	r0, #0
 6b8:	beq	6c8 <teste_lista_pesquisa+0x9c>
 6bc:	ldr	r0, [pc, #224]	; 7a4 <teste_lista_pesquisa+0x178>
 6c0:	bl	0 <printf>
 6c4:	add	r5, r5, #1
 6c8:	mov	r2, #1
 6cc:	ldr	r1, [pc, #188]	; 790 <teste_lista_pesquisa+0x164>
 6d0:	mov	r0, r4
 6d4:	bl	0 <lista_pesquisa>
 6d8:	ldr	r3, [r4]
 6dc:	ldr	r3, [r3, #4]
 6e0:	ldr	r3, [r3, #4]
 6e4:	ldr	r3, [r3, #4]
 6e8:	ldr	r3, [r3, #4]
 6ec:	ldr	r3, [r3, #4]
 6f0:	ldr	r3, [r3, #4]
 6f4:	cmp	r3, r0
 6f8:	beq	754 <teste_lista_pesquisa+0x128>
 6fc:	ldr	r0, [pc, #152]	; 79c <teste_lista_pesquisa+0x170>
 700:	bl	0 <printf>
 704:	mov	r2, #1
 708:	ldr	r1, [pc, #144]	; 7a0 <teste_lista_pesquisa+0x174>
 70c:	mov	r0, r4
 710:	bl	0 <lista_pesquisa>
 714:	add	r5, r5, #1
 718:	cmp	r0, #0
 71c:	beq	748 <teste_lista_pesquisa+0x11c>
 720:	ldr	r0, [pc, #124]	; 7a4 <teste_lista_pesquisa+0x178>
 724:	bl	0 <printf>
 728:	mov	r0, r4
 72c:	add	r5, r5, #1
 730:	bl	0 <lista_apaga>
 734:	mov	r0, #10
 738:	bl	0 <putchar>
 73c:	mov	r0, r5
 740:	add	sp, sp, #20
 744:	pop	{r4, r5, pc}
 748:	mov	r0, r4
 74c:	bl	0 <lista_apaga>
 750:	b	734 <teste_lista_pesquisa+0x108>
 754:	mov	r2, #1
 758:	ldr	r1, [pc, #64]	; 7a0 <teste_lista_pesquisa+0x174>
 75c:	mov	r0, r4
 760:	bl	0 <lista_pesquisa>
 764:	cmp	r0, #0
 768:	bne	720 <teste_lista_pesquisa+0xf4>
 76c:	mov	r0, r4
 770:	bl	0 <lista_apaga>
 774:	cmp	r5, #0
 778:	bne	734 <teste_lista_pesquisa+0x108>
 77c:	ldr	r0, [pc, #36]	; 7a8 <teste_lista_pesquisa+0x17c>
 780:	bl	0 <puts>
 784:	mov	r0, r5
 788:	add	sp, sp, #20
 78c:	pop	{r4, r5, pc}
 790:	.word	0x00000054
 794:	.word	0x00000304
 798:	.word	0x00000308
 79c:	.word	0x0000031c
 7a0:	.word	0x00000364
 7a4:	.word	0x0000036c
 7a8:	.word	0x00000050

000007ac <teste_lista_ordena>:
 7ac:	push	{r4, r5, r6, lr}
 7b0:	sub	sp, sp, #8
 7b4:	ldr	r2, [pc, #412]	; 958 <teste_lista_ordena+0x1ac>
 7b8:	ldr	r3, [pc, #412]	; 95c <teste_lista_ordena+0x1b0>
 7bc:	ldr	r1, [pc, #412]	; 960 <teste_lista_ordena+0x1b4>
 7c0:	str	r2, [sp, #4]
 7c4:	str	r3, [sp]
 7c8:	ldr	r2, [pc, #404]	; 964 <teste_lista_ordena+0x1b8>
 7cc:	ldr	r3, [pc, #404]	; 968 <teste_lista_ordena+0x1bc>
 7d0:	mov	r0, #5
 7d4:	bl	0 <_l>
 7d8:	mov	r5, r0
 7dc:	ldr	r0, [pc, #392]	; 96c <teste_lista_ordena+0x1c0>
 7e0:	bl	0 <printf>
 7e4:	mov	r0, #0
 7e8:	bl	0 <lista_ordena>
 7ec:	cmn	r0, #1
 7f0:	moveq	r4, #0
 7f4:	beq	804 <teste_lista_ordena+0x58>
 7f8:	ldr	r0, [pc, #368]	; 970 <teste_lista_ordena+0x1c4>
 7fc:	bl	0 <printf>
 800:	mov	r4, #1
 804:	mov	r0, r5
 808:	bl	0 <lista_ordena>
 80c:	ldr	r6, [r5]
 810:	ldr	r1, [pc, #328]	; 960 <teste_lista_ordena+0x1b4>
 814:	ldr	r0, [r6]
 818:	bl	0 <strcmp>
 81c:	cmp	r0, #0
 820:	bne	83c <teste_lista_ordena+0x90>
 824:	ldr	r6, [r6, #4]
 828:	ldr	r1, [pc, #308]	; 964 <teste_lista_ordena+0x1b8>
 82c:	ldr	r0, [r6]
 830:	bl	0 <strcmp>
 834:	cmp	r0, #0
 838:	beq	90c <teste_lista_ordena+0x160>
 83c:	ldr	r0, [pc, #304]	; 974 <teste_lista_ordena+0x1c8>
 840:	bl	0 <printf>
 844:	add	r4, r4, #1
 848:	ldr	r6, [r5, #4]
 84c:	ldr	r1, [pc, #276]	; 968 <teste_lista_ordena+0x1bc>
 850:	ldr	r0, [r6]
 854:	bl	0 <strcmp>
 858:	cmp	r0, #0
 85c:	bne	878 <teste_lista_ordena+0xcc>
 860:	ldr	r6, [r6, #8]
 864:	ldr	r1, [pc, #236]	; 958 <teste_lista_ordena+0x1ac>
 868:	ldr	r0, [r6]
 86c:	bl	0 <strcmp>
 870:	cmp	r0, #0
 874:	beq	8a0 <teste_lista_ordena+0xf4>
 878:	ldr	r0, [pc, #248]	; 978 <teste_lista_ordena+0x1cc>
 87c:	bl	0 <printf>
 880:	mov	r0, r5
 884:	add	r4, r4, #1
 888:	bl	0 <lista_apaga>
 88c:	mov	r0, #10
 890:	bl	0 <putchar>
 894:	mov	r0, r4
 898:	add	sp, sp, #8
 89c:	pop	{r4, r5, r6, pc}
 8a0:	ldr	r6, [r6, #8]
 8a4:	ldr	r1, [pc, #176]	; 95c <teste_lista_ordena+0x1b0>
 8a8:	ldr	r0, [r6]
 8ac:	bl	0 <strcmp>
 8b0:	cmp	r0, #0
 8b4:	bne	878 <teste_lista_ordena+0xcc>
 8b8:	ldr	r6, [r6, #8]
 8bc:	ldr	r1, [pc, #160]	; 964 <teste_lista_ordena+0x1b8>
 8c0:	ldr	r0, [r6]
 8c4:	bl	0 <strcmp>
 8c8:	cmp	r0, #0
 8cc:	bne	878 <teste_lista_ordena+0xcc>
 8d0:	ldr	r3, [r6, #8]
 8d4:	ldr	r1, [pc, #132]	; 960 <teste_lista_ordena+0x1b4>
 8d8:	ldr	r0, [r3]
 8dc:	bl	0 <strcmp>
 8e0:	cmp	r0, #0
 8e4:	bne	878 <teste_lista_ordena+0xcc>
 8e8:	mov	r0, r5
 8ec:	bl	0 <lista_apaga>
 8f0:	cmp	r4, #0
 8f4:	bne	88c <teste_lista_ordena+0xe0>
 8f8:	ldr	r0, [pc, #124]	; 97c <teste_lista_ordena+0x1d0>
 8fc:	bl	0 <puts>
 900:	mov	r0, r4
 904:	add	sp, sp, #8
 908:	pop	{r4, r5, r6, pc}
 90c:	ldr	r6, [r6, #4]
 910:	ldr	r1, [pc, #68]	; 95c <teste_lista_ordena+0x1b0>
 914:	ldr	r0, [r6]
 918:	bl	0 <strcmp>
 91c:	cmp	r0, #0
 920:	bne	83c <teste_lista_ordena+0x90>
 924:	ldr	r6, [r6, #4]
 928:	ldr	r1, [pc, #40]	; 958 <teste_lista_ordena+0x1ac>
 92c:	ldr	r0, [r6]
 930:	bl	0 <strcmp>
 934:	cmp	r0, #0
 938:	bne	83c <teste_lista_ordena+0x90>
 93c:	ldr	r3, [r6, #4]
 940:	ldr	r1, [pc, #32]	; 968 <teste_lista_ordena+0x1bc>
 944:	ldr	r0, [r3]
 948:	bl	0 <strcmp>
 94c:	cmp	r0, #0
 950:	beq	848 <teste_lista_ordena+0x9c>
 954:	b	83c <teste_lista_ordena+0x90>
 958:	.word	0x000003b8
 95c:	.word	0x000003bc
 960:	.word	0x000003b4
 964:	.word	0x000003b0
 968:	.word	0x000003ac
 96c:	.word	0x000003c0
 970:	.word	0x000003d4
 974:	.word	0x00000404
 978:	.word	0x00000444
 97c:	.word	0x00000050

00000980 <teste_lista_inverte>:
 980:	push	{r4, r5, r6, lr}
 984:	sub	sp, sp, #8
 988:	ldr	r2, [pc, #436]	; b44 <teste_lista_inverte+0x1c4>
 98c:	ldr	r3, [pc, #436]	; b48 <teste_lista_inverte+0x1c8>
 990:	ldr	r1, [pc, #436]	; b4c <teste_lista_inverte+0x1cc>
 994:	str	r2, [sp, #4]
 998:	str	r3, [sp]
 99c:	ldr	r2, [pc, #428]	; b50 <teste_lista_inverte+0x1d0>
 9a0:	ldr	r3, [pc, #428]	; b54 <teste_lista_inverte+0x1d4>
 9a4:	mov	r0, #5
 9a8:	bl	0 <_l>
 9ac:	mov	r5, r0
 9b0:	ldr	r0, [pc, #416]	; b58 <teste_lista_inverte+0x1d8>
 9b4:	bl	0 <printf>
 9b8:	mov	r0, #0
 9bc:	bl	0 <lista_inverte>
 9c0:	cmn	r0, #1
 9c4:	moveq	r4, #0
 9c8:	beq	9d8 <teste_lista_inverte+0x58>
 9cc:	ldr	r0, [pc, #392]	; b5c <teste_lista_inverte+0x1dc>
 9d0:	bl	0 <printf>
 9d4:	mov	r4, #1
 9d8:	mov	r0, r5
 9dc:	bl	0 <lista_inverte>
 9e0:	ldr	r3, [r5, #8]
 9e4:	cmp	r3, #5
 9e8:	beq	9f8 <teste_lista_inverte+0x78>
 9ec:	ldr	r0, [pc, #364]	; b60 <teste_lista_inverte+0x1e0>
 9f0:	bl	0 <printf>
 9f4:	add	r4, r4, #1
 9f8:	ldr	r6, [r5]
 9fc:	ldr	r1, [pc, #320]	; b44 <teste_lista_inverte+0x1c4>
 a00:	ldr	r0, [r6]
 a04:	bl	0 <strcmp>
 a08:	cmp	r0, #0
 a0c:	bne	a28 <teste_lista_inverte+0xa8>
 a10:	ldr	r6, [r6, #4]
 a14:	ldr	r1, [pc, #300]	; b48 <teste_lista_inverte+0x1c8>
 a18:	ldr	r0, [r6]
 a1c:	bl	0 <strcmp>
 a20:	cmp	r0, #0
 a24:	beq	af8 <teste_lista_inverte+0x178>
 a28:	ldr	r0, [pc, #308]	; b64 <teste_lista_inverte+0x1e4>
 a2c:	bl	0 <printf>
 a30:	add	r4, r4, #1
 a34:	ldr	r6, [r5, #4]
 a38:	ldr	r1, [pc, #268]	; b4c <teste_lista_inverte+0x1cc>
 a3c:	ldr	r0, [r6]
 a40:	bl	0 <strcmp>
 a44:	cmp	r0, #0
 a48:	bne	a64 <teste_lista_inverte+0xe4>
 a4c:	ldr	r6, [r6, #8]
 a50:	ldr	r1, [pc, #248]	; b50 <teste_lista_inverte+0x1d0>
 a54:	ldr	r0, [r6]
 a58:	bl	0 <strcmp>
 a5c:	cmp	r0, #0
 a60:	beq	a8c <teste_lista_inverte+0x10c>
 a64:	ldr	r0, [pc, #252]	; b68 <teste_lista_inverte+0x1e8>
 a68:	bl	0 <printf>
 a6c:	mov	r0, r5
 a70:	add	r4, r4, #1
 a74:	bl	0 <lista_apaga>
 a78:	mov	r0, #10
 a7c:	bl	0 <putchar>
 a80:	mov	r0, r4
 a84:	add	sp, sp, #8
 a88:	pop	{r4, r5, r6, pc}
 a8c:	ldr	r6, [r6, #8]
 a90:	ldr	r1, [pc, #188]	; b54 <teste_lista_inverte+0x1d4>
 a94:	ldr	r0, [r6]
 a98:	bl	0 <strcmp>
 a9c:	cmp	r0, #0
 aa0:	bne	a64 <teste_lista_inverte+0xe4>
 aa4:	ldr	r6, [r6, #8]
 aa8:	ldr	r1, [pc, #152]	; b48 <teste_lista_inverte+0x1c8>
 aac:	ldr	r0, [r6]
 ab0:	bl	0 <strcmp>
 ab4:	cmp	r0, #0
 ab8:	bne	a64 <teste_lista_inverte+0xe4>
 abc:	ldr	r3, [r6, #8]
 ac0:	ldr	r1, [pc, #124]	; b44 <teste_lista_inverte+0x1c4>
 ac4:	ldr	r0, [r3]
 ac8:	bl	0 <strcmp>
 acc:	cmp	r0, #0
 ad0:	bne	a64 <teste_lista_inverte+0xe4>
 ad4:	mov	r0, r5
 ad8:	bl	0 <lista_apaga>
 adc:	cmp	r4, #0
 ae0:	bne	a78 <teste_lista_inverte+0xf8>
 ae4:	ldr	r0, [pc, #128]	; b6c <teste_lista_inverte+0x1ec>
 ae8:	bl	0 <puts>
 aec:	mov	r0, r4
 af0:	add	sp, sp, #8
 af4:	pop	{r4, r5, r6, pc}
 af8:	ldr	r6, [r6, #4]
 afc:	ldr	r1, [pc, #80]	; b54 <teste_lista_inverte+0x1d4>
 b00:	ldr	r0, [r6]
 b04:	bl	0 <strcmp>
 b08:	cmp	r0, #0
 b0c:	bne	a28 <teste_lista_inverte+0xa8>
 b10:	ldr	r6, [r6, #4]
 b14:	ldr	r1, [pc, #52]	; b50 <teste_lista_inverte+0x1d0>
 b18:	ldr	r0, [r6]
 b1c:	bl	0 <strcmp>
 b20:	cmp	r0, #0
 b24:	bne	a28 <teste_lista_inverte+0xa8>
 b28:	ldr	r3, [r6, #4]
 b2c:	ldr	r1, [pc, #24]	; b4c <teste_lista_inverte+0x1cc>
 b30:	ldr	r0, [r3]
 b34:	bl	0 <strcmp>
 b38:	cmp	r0, #0
 b3c:	beq	a34 <teste_lista_inverte+0xb4>
 b40:	b	a28 <teste_lista_inverte+0xa8>
 b44:	.word	0x000003b8
 b48:	.word	0x000003bc
 b4c:	.word	0x000003b4
 b50:	.word	0x000003b0
 b54:	.word	0x000003ac
 b58:	.word	0x00000484
 b5c:	.word	0x000003d4
 b60:	.word	0x00000498
 b64:	.word	0x000004c4
 b68:	.word	0x00000444
 b6c:	.word	0x00000050

Disassembly of section .text.startup:

00000000 <main>:
   0:	ldr	r2, [pc, #124]	; 84 <main+0x84>
   4:	mov	r3, #0
   8:	push	{r4, lr}
   c:	mov	r1, r3
  10:	ldr	r0, [r2]
  14:	mov	r2, #2
  18:	bl	0 <setvbuf>
  1c:	ldr	r2, [pc, #100]	; 88 <main+0x88>
  20:	mov	r3, #0
  24:	mov	r1, r3
  28:	ldr	r0, [r2]
  2c:	mov	r2, #2
  30:	bl	0 <setvbuf>
  34:	bl	114 <teste_lista_nova>
  38:	mov	r4, r0
  3c:	bl	198 <teste_lista_insere>
  40:	add	r4, r4, r0
  44:	bl	494 <teste_lista_remove>
  48:	add	r4, r4, r0
  4c:	bl	62c <teste_lista_pesquisa>
  50:	add	r4, r4, r0
  54:	bl	7ac <teste_lista_ordena>
  58:	add	r4, r4, r0
  5c:	bl	980 <teste_lista_inverte>
  60:	adds	r1, r4, r0
  64:	beq	78 <main+0x78>
  68:	ldr	r0, [pc, #28]	; 8c <main+0x8c>
  6c:	bl	0 <printf>
  70:	mov	r0, #0
  74:	pop	{r4, pc}
  78:	ldr	r0, [pc, #16]	; 90 <main+0x90>
  7c:	bl	0 <puts>
  80:	b	70 <main+0x70>
	...
  8c:	.word	0x0000051c
  90:	.word	0x00000504
