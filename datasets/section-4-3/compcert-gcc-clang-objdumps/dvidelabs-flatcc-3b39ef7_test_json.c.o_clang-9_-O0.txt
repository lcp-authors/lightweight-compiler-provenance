
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json.dir/test_json.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <test_json>:
       0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
       4:	add	fp, sp, #24
       8:	sub	sp, sp, #520	; 0x208
       c:	ldr	ip, [fp, #16]
      10:	ldr	lr, [fp, #12]
      14:	ldr	r4, [fp, #8]
      18:	str	r0, [fp, #-28]	; 0xffffffe4
      1c:	str	r1, [fp, #-32]	; 0xffffffe0
      20:	str	r2, [fp, #-36]	; 0xffffffdc
      24:	str	r3, [fp, #-40]	; 0xffffffd8
      28:	mvn	r0, #0
      2c:	str	r0, [fp, #-44]	; 0xffffffd4
      30:	movw	r0, #0
      34:	str	r0, [fp, #-52]	; 0xffffffcc
      38:	str	r0, [fp, #-56]	; 0xffffffc8
      3c:	add	r0, sp, #248	; 0xf8
      40:	str	r0, [sp, #244]	; 0xf4
      44:	ldr	r0, [sp, #244]	; 0xf4
      48:	str	ip, [sp, #144]	; 0x90
      4c:	str	lr, [sp, #140]	; 0x8c
      50:	str	r4, [sp, #136]	; 0x88
      54:	bl	0 <flatcc_builder_init>
      58:	add	r1, sp, #152	; 0x98
      5c:	str	r0, [sp, #132]	; 0x84
      60:	mov	r0, r1
      64:	movw	r1, #0
      68:	bl	0 <flatcc_json_printer_init_dynamic_buffer>
      6c:	ldr	r1, [fp, #12]
      70:	add	r2, sp, #152	; 0x98
      74:	str	r0, [sp, #128]	; 0x80
      78:	mov	r0, r2
      7c:	bl	504 <flatcc_json_printer_set_flags>
      80:	ldr	r0, [sp, #244]	; 0xf4
      84:	ldr	r2, [fp, #-32]	; 0xffffffe0
      88:	ldr	r1, [fp, #-32]	; 0xffffffe0
      8c:	str	r0, [sp, #124]	; 0x7c
      90:	mov	r0, r1
      94:	str	r2, [sp, #120]	; 0x78
      98:	bl	0 <strlen>
      9c:	ldr	r1, [fp, #8]
      a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
      a4:	ldr	r2, [r2]
      a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
      ac:	ldr	r3, [r3, #4]
      b0:	ldr	ip, [sp, #124]	; 0x7c
      b4:	str	r0, [sp, #116]	; 0x74
      b8:	mov	r0, ip
      bc:	add	lr, sp, #200	; 0xc8
      c0:	str	r1, [sp, #112]	; 0x70
      c4:	mov	r1, lr
      c8:	ldr	lr, [sp, #120]	; 0x78
      cc:	str	r2, [sp, #108]	; 0x6c
      d0:	mov	r2, lr
      d4:	ldr	r4, [sp, #116]	; 0x74
      d8:	str	r3, [sp, #104]	; 0x68
      dc:	mov	r3, r4
      e0:	ldr	r5, [sp, #112]	; 0x70
      e4:	str	r5, [sp]
      e8:	ldr	r6, [sp, #108]	; 0x6c
      ec:	str	r6, [sp, #4]
      f0:	ldr	r7, [sp, #104]	; 0x68
      f4:	str	r7, [sp, #8]
      f8:	bl	0 <flatcc_json_parser_table_as_root>
      fc:	str	r0, [fp, #-48]	; 0xffffffd0
     100:	ldr	r0, [fp, #-48]	; 0xffffffd0
     104:	ldr	r1, [fp, #-40]	; 0xffffffd8
     108:	cmp	r0, r1
     10c:	beq	304 <test_json+0x304>
     110:	ldr	r0, [fp, #-40]	; 0xffffffd8
     114:	cmp	r0, #0
     118:	beq	23c <test_json+0x23c>
     11c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     120:	cmp	r0, #0
     124:	beq	1d0 <test_json+0x1d0>
     128:	movw	r0, #0
     12c:	movt	r0, #0
     130:	ldr	r0, [r0]
     134:	ldr	r2, [fp, #16]
     138:	ldr	r1, [fp, #-48]	; 0xffffffd0
     13c:	str	r0, [sp, #100]	; 0x64
     140:	mov	r0, r1
     144:	str	r2, [sp, #96]	; 0x60
     148:	bl	0 <flatcc_json_parser_error_string>
     14c:	ldr	r1, [sp, #100]	; 0x64
     150:	str	r0, [sp, #92]	; 0x5c
     154:	mov	r0, r1
     158:	movw	r1, #0
     15c:	movt	r1, #0
     160:	ldr	r2, [sp, #96]	; 0x60
     164:	ldr	r3, [sp, #92]	; 0x5c
     168:	bl	0 <fprintf>
     16c:	movw	r1, #0
     170:	movt	r1, #0
     174:	ldr	r1, [r1]
     178:	ldr	r2, [fp, #-40]	; 0xffffffd8
     17c:	str	r0, [sp, #88]	; 0x58
     180:	mov	r0, r2
     184:	str	r1, [sp, #84]	; 0x54
     188:	bl	0 <flatcc_json_parser_error_string>
     18c:	ldr	r1, [sp, #84]	; 0x54
     190:	str	r0, [sp, #80]	; 0x50
     194:	mov	r0, r1
     198:	movw	r1, #0
     19c:	movt	r1, #0
     1a0:	ldr	r2, [sp, #80]	; 0x50
     1a4:	bl	0 <fprintf>
     1a8:	movw	r1, #0
     1ac:	movt	r1, #0
     1b0:	ldr	r1, [r1]
     1b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
     1b8:	str	r0, [sp, #76]	; 0x4c
     1bc:	mov	r0, r1
     1c0:	movw	r1, #0
     1c4:	movt	r1, #0
     1c8:	bl	0 <fprintf>
     1cc:	b	238 <test_json+0x238>
     1d0:	movw	r0, #0
     1d4:	movt	r0, #0
     1d8:	ldr	r0, [r0]
     1dc:	ldr	r2, [fp, #16]
     1e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
     1e4:	str	r0, [sp, #72]	; 0x48
     1e8:	mov	r0, r1
     1ec:	str	r2, [sp, #68]	; 0x44
     1f0:	bl	0 <flatcc_json_parser_error_string>
     1f4:	ldr	r1, [sp, #72]	; 0x48
     1f8:	str	r0, [sp, #64]	; 0x40
     1fc:	mov	r0, r1
     200:	movw	r1, #0
     204:	movt	r1, #0
     208:	ldr	r2, [sp, #68]	; 0x44
     20c:	ldr	r3, [sp, #64]	; 0x40
     210:	bl	0 <fprintf>
     214:	movw	r1, #0
     218:	movt	r1, #0
     21c:	ldr	r1, [r1]
     220:	ldr	r2, [fp, #-32]	; 0xffffffe0
     224:	str	r0, [sp, #60]	; 0x3c
     228:	mov	r0, r1
     22c:	movw	r1, #0
     230:	movt	r1, #0
     234:	bl	0 <fprintf>
     238:	b	2a4 <test_json+0x2a4>
     23c:	movw	r0, #0
     240:	movt	r0, #0
     244:	ldr	r0, [r0]
     248:	ldr	r2, [fp, #16]
     24c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     250:	str	r0, [sp, #56]	; 0x38
     254:	mov	r0, r1
     258:	str	r2, [sp, #52]	; 0x34
     25c:	bl	0 <flatcc_json_parser_error_string>
     260:	ldr	r1, [sp, #56]	; 0x38
     264:	str	r0, [sp, #48]	; 0x30
     268:	mov	r0, r1
     26c:	movw	r1, #0
     270:	movt	r1, #0
     274:	ldr	r2, [sp, #52]	; 0x34
     278:	ldr	r3, [sp, #48]	; 0x30
     27c:	bl	0 <fprintf>
     280:	movw	r1, #0
     284:	movt	r1, #0
     288:	ldr	r1, [r1]
     28c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     290:	str	r0, [sp, #44]	; 0x2c
     294:	mov	r0, r1
     298:	movw	r1, #0
     29c:	movt	r1, #0
     2a0:	bl	0 <fprintf>
     2a4:	movw	r0, #0
     2a8:	str	r0, [sp, #148]	; 0x94
     2ac:	ldr	r0, [sp, #148]	; 0x94
     2b0:	ldr	r1, [sp, #220]	; 0xdc
     2b4:	sub	r1, r1, #1
     2b8:	cmp	r0, r1
     2bc:	bge	2e8 <test_json+0x2e8>
     2c0:	movw	r0, #0
     2c4:	movt	r0, #0
     2c8:	ldr	r0, [r0]
     2cc:	movw	r1, #0
     2d0:	movt	r1, #0
     2d4:	bl	0 <fprintf>
     2d8:	ldr	r0, [sp, #148]	; 0x94
     2dc:	add	r0, r0, #1
     2e0:	str	r0, [sp, #148]	; 0x94
     2e4:	b	2ac <test_json+0x2ac>
     2e8:	movw	r0, #0
     2ec:	movt	r0, #0
     2f0:	ldr	r0, [r0]
     2f4:	movw	r1, #0
     2f8:	movt	r1, #0
     2fc:	bl	0 <fprintf>
     300:	b	4c8 <test_json+0x4c8>
     304:	ldr	r0, [fp, #-40]	; 0xffffffd8
     308:	cmp	r0, #0
     30c:	beq	31c <test_json+0x31c>
     310:	movw	r0, #0
     314:	str	r0, [fp, #-44]	; 0xffffffd4
     318:	b	4a4 <test_json+0x4a4>
     31c:	ldr	r0, [sp, #244]	; 0xf4
     320:	sub	r1, fp, #60	; 0x3c
     324:	bl	0 <flatcc_builder_finalize_aligned_buffer>
     328:	str	r0, [fp, #-52]	; 0xffffffcc
     32c:	ldr	r0, [fp, #-52]	; 0xffffffcc
     330:	ldr	r1, [fp, #-60]	; 0xffffffc4
     334:	ldr	r2, [fp, #-28]	; 0xffffffe4
     338:	ldr	r2, [r2]
     33c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     340:	ldr	r3, [r3, #12]
     344:	bl	0 <flatcc_verify_table_as_root>
     348:	str	r0, [fp, #-44]	; 0xffffffd4
     34c:	cmp	r0, #0
     350:	beq	3a8 <test_json+0x3a8>
     354:	movw	r0, #0
     358:	movt	r0, #0
     35c:	ldr	r0, [r0]
     360:	ldr	r3, [fp, #16]
     364:	ldr	r1, [fp, #-44]	; 0xffffffd4
     368:	str	r0, [sp, #40]	; 0x28
     36c:	mov	r0, r1
     370:	str	r3, [sp, #36]	; 0x24
     374:	bl	0 <flatcc_verify_error_string>
     378:	ldr	r1, [sp, #40]	; 0x28
     37c:	str	r0, [sp, #32]
     380:	mov	r0, r1
     384:	movw	r1, #0
     388:	movt	r1, #0
     38c:	movw	r2, #0
     390:	movt	r2, #0
     394:	ldr	r3, [sp, #36]	; 0x24
     398:	ldr	ip, [sp, #32]
     39c:	str	ip, [sp]
     3a0:	bl	0 <fprintf>
     3a4:	b	4c8 <test_json+0x4c8>
     3a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
     3ac:	ldr	r2, [fp, #-60]	; 0xffffffc4
     3b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     3b4:	ldr	r3, [r0]
     3b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     3bc:	ldr	r0, [r0, #8]
     3c0:	add	ip, sp, #152	; 0x98
     3c4:	str	r0, [sp, #28]
     3c8:	mov	r0, ip
     3cc:	ldr	ip, [sp, #28]
     3d0:	str	ip, [sp]
     3d4:	bl	0 <flatcc_json_printer_table_as_root>
     3d8:	add	r1, sp, #152	; 0x98
     3dc:	str	r0, [sp, #24]
     3e0:	mov	r0, r1
     3e4:	sub	r1, fp, #64	; 0x40
     3e8:	bl	0 <flatcc_json_printer_get_buffer>
     3ec:	str	r0, [fp, #-56]	; 0xffffffc8
     3f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
     3f4:	movw	r1, #0
     3f8:	cmp	r0, r1
     3fc:	beq	414 <test_json+0x414>
     400:	ldr	r0, [fp, #-36]	; 0xffffffdc
     404:	ldr	r1, [fp, #-56]	; 0xffffffc8
     408:	bl	0 <strcmp>
     40c:	cmp	r0, #0
     410:	beq	49c <test_json+0x49c>
     414:	movw	r0, #0
     418:	movt	r0, #0
     41c:	ldr	r0, [r0]
     420:	ldr	r2, [fp, #16]
     424:	movw	r1, #0
     428:	movt	r1, #0
     42c:	bl	0 <fprintf>
     430:	movw	r1, #0
     434:	movt	r1, #0
     438:	ldr	r1, [r1]
     43c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     440:	str	r0, [sp, #20]
     444:	mov	r0, r1
     448:	movw	r1, #0
     44c:	movt	r1, #0
     450:	bl	0 <fprintf>
     454:	movw	r1, #0
     458:	movt	r1, #0
     45c:	ldr	r1, [r1]
     460:	str	r0, [sp, #16]
     464:	mov	r0, r1
     468:	movw	r1, #0
     46c:	movt	r1, #0
     470:	bl	0 <fprintf>
     474:	movw	r1, #0
     478:	movt	r1, #0
     47c:	ldr	r1, [r1]
     480:	ldr	r2, [fp, #-36]	; 0xffffffdc
     484:	str	r0, [sp, #12]
     488:	mov	r0, r1
     48c:	movw	r1, #0
     490:	movt	r1, #0
     494:	bl	0 <fprintf>
     498:	b	4c8 <test_json+0x4c8>
     49c:	movw	r0, #0
     4a0:	str	r0, [fp, #-44]	; 0xffffffd4
     4a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
     4a8:	bl	0 <flatcc_builder_aligned_free>
     4ac:	ldr	r0, [sp, #244]	; 0xf4
     4b0:	bl	0 <flatcc_builder_clear>
     4b4:	add	r0, sp, #152	; 0x98
     4b8:	bl	0 <flatcc_json_printer_clear>
     4bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
     4c0:	sub	sp, fp, #24
     4c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
     4c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
     4cc:	movw	r1, #0
     4d0:	cmp	r0, r1
     4d4:	beq	4f8 <test_json+0x4f8>
     4d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
     4dc:	ldr	r2, [fp, #-60]	; 0xffffffc4
     4e0:	movw	r0, #0
     4e4:	movt	r0, #0
     4e8:	ldr	r3, [r0]
     4ec:	movw	r0, #0
     4f0:	movt	r0, #0
     4f4:	bl	5fc <hexdump>
     4f8:	mvn	r0, #0
     4fc:	str	r0, [fp, #-44]	; 0xffffffd4
     500:	b	4a4 <test_json+0x4a4>

00000504 <flatcc_json_printer_set_flags>:
     504:	push	{fp, lr}
     508:	mov	fp, sp
     50c:	sub	sp, sp, #8
     510:	str	r0, [sp, #4]
     514:	str	r1, [sp]
     518:	ldr	r0, [sp]
     51c:	and	r0, r0, #1
     520:	cmp	r0, #0
     524:	movw	r0, #0
     528:	movne	r0, #1
     52c:	mvn	r1, #0
     530:	eor	r0, r0, r1
     534:	eor	r0, r0, r1
     538:	and	r0, r0, #1
     53c:	ldr	r2, [sp, #4]
     540:	strb	r0, [r2, #26]
     544:	ldr	r0, [sp]
     548:	and	r0, r0, #2
     54c:	cmp	r0, #0
     550:	movw	r0, #0
     554:	movne	r0, #1
     558:	eor	r0, r0, r1
     55c:	eor	r0, r0, r1
     560:	and	r0, r0, #1
     564:	ldr	r2, [sp, #4]
     568:	strb	r0, [r2, #27]
     56c:	ldr	r0, [sp]
     570:	and	r0, r0, #4
     574:	cmp	r0, #0
     578:	movw	r0, #0
     57c:	movne	r0, #1
     580:	eor	r0, r0, r1
     584:	eor	r0, r0, r1
     588:	and	r0, r0, #1
     58c:	ldr	r2, [sp, #4]
     590:	strb	r0, [r2, #28]
     594:	ldr	r0, [sp]
     598:	and	r0, r0, #8
     59c:	cmp	r0, #0
     5a0:	movw	r0, #0
     5a4:	movne	r0, #1
     5a8:	eor	r0, r0, r1
     5ac:	eor	r0, r0, r1
     5b0:	and	r0, r0, #1
     5b4:	ldr	r1, [sp, #4]
     5b8:	strb	r0, [r1, #29]
     5bc:	ldr	r0, [sp]
     5c0:	and	r0, r0, #16
     5c4:	cmp	r0, #0
     5c8:	beq	5dc <flatcc_json_printer_set_flags+0xd8>
     5cc:	ldr	r0, [sp, #4]
     5d0:	movw	r1, #2
     5d4:	and	r1, r1, #255	; 0xff
     5d8:	bl	27b4 <flatcc_json_printer_set_indent>
     5dc:	ldr	r0, [sp]
     5e0:	and	r0, r0, #32
     5e4:	cmp	r0, #0
     5e8:	beq	5f4 <flatcc_json_printer_set_flags+0xf0>
     5ec:	ldr	r0, [sp, #4]
     5f0:	bl	27d4 <flatcc_json_printer_set_nonstrict>
     5f4:	mov	sp, fp
     5f8:	pop	{fp, pc}

000005fc <hexdump>:
     5fc:	push	{fp, lr}
     600:	mov	fp, sp
     604:	sub	sp, sp, #48	; 0x30
     608:	str	r0, [fp, #-4]
     60c:	str	r1, [fp, #-8]
     610:	str	r2, [fp, #-12]
     614:	str	r3, [fp, #-16]
     618:	ldr	r0, [fp, #-8]
     61c:	str	r0, [sp, #4]
     620:	ldr	r0, [fp, #-4]
     624:	movw	r1, #0
     628:	cmp	r0, r1
     62c:	beq	644 <hexdump+0x48>
     630:	ldr	r0, [fp, #-16]
     634:	ldr	r2, [fp, #-4]
     638:	movw	r1, #0
     63c:	movt	r1, #0
     640:	bl	0 <fprintf>
     644:	movw	r0, #0
     648:	str	r0, [fp, #-20]	; 0xffffffec
     64c:	ldr	r0, [fp, #-20]	; 0xffffffec
     650:	ldr	r1, [fp, #-12]
     654:	cmp	r0, r1
     658:	bcs	784 <hexdump+0x188>
     65c:	ldr	r0, [fp, #-20]	; 0xffffffec
     660:	and	r0, r0, #15
     664:	cmp	r0, #0
     668:	bne	6a4 <hexdump+0xa8>
     66c:	ldr	r0, [fp, #-20]	; 0xffffffec
     670:	cmp	r0, #0
     674:	beq	68c <hexdump+0x90>
     678:	add	r2, sp, #11
     67c:	ldr	r0, [fp, #-16]
     680:	movw	r1, #0
     684:	movt	r1, #0
     688:	bl	0 <fprintf>
     68c:	ldr	r0, [fp, #-16]
     690:	ldr	r2, [fp, #-20]	; 0xffffffec
     694:	movw	r1, #0
     698:	movt	r1, #0
     69c:	bl	0 <fprintf>
     6a0:	b	6c8 <hexdump+0xcc>
     6a4:	ldr	r0, [fp, #-20]	; 0xffffffec
     6a8:	and	r0, r0, #7
     6ac:	cmp	r0, #0
     6b0:	bne	6c4 <hexdump+0xc8>
     6b4:	ldr	r0, [fp, #-16]
     6b8:	movw	r1, #0
     6bc:	movt	r1, #0
     6c0:	bl	0 <fprintf>
     6c4:	b	6c8 <hexdump+0xcc>
     6c8:	ldr	r0, [fp, #-16]
     6cc:	ldr	r1, [sp, #4]
     6d0:	ldr	r2, [fp, #-20]	; 0xffffffec
     6d4:	add	r1, r1, r2
     6d8:	ldrb	r2, [r1]
     6dc:	movw	r1, #0
     6e0:	movt	r1, #0
     6e4:	bl	0 <fprintf>
     6e8:	ldr	r1, [sp, #4]
     6ec:	ldr	r2, [fp, #-20]	; 0xffffffec
     6f0:	add	r1, r1, r2
     6f4:	ldrb	r1, [r1]
     6f8:	cmp	r1, #32
     6fc:	blt	718 <hexdump+0x11c>
     700:	ldr	r0, [sp, #4]
     704:	ldr	r1, [fp, #-20]	; 0xffffffec
     708:	add	r0, r0, r1
     70c:	ldrb	r0, [r0]
     710:	cmp	r0, #126	; 0x7e
     714:	ble	734 <hexdump+0x138>
     718:	ldr	r0, [fp, #-20]	; 0xffffffec
     71c:	and	r0, r0, #15
     720:	add	r1, sp, #11
     724:	add	r0, r1, r0
     728:	movw	r1, #46	; 0x2e
     72c:	strb	r1, [r0]
     730:	b	758 <hexdump+0x15c>
     734:	ldr	r0, [sp, #4]
     738:	ldr	r1, [fp, #-20]	; 0xffffffec
     73c:	add	r0, r0, r1
     740:	ldrb	r0, [r0]
     744:	ldr	r1, [fp, #-20]	; 0xffffffec
     748:	and	r1, r1, #15
     74c:	add	r2, sp, #11
     750:	add	r1, r2, r1
     754:	strb	r0, [r1]
     758:	ldr	r0, [fp, #-20]	; 0xffffffec
     75c:	and	r0, r0, #15
     760:	add	r0, r0, #1
     764:	add	r1, sp, #11
     768:	add	r0, r1, r0
     76c:	movw	r1, #0
     770:	strb	r1, [r0]
     774:	ldr	r0, [fp, #-20]	; 0xffffffec
     778:	add	r0, r0, #1
     77c:	str	r0, [fp, #-20]	; 0xffffffec
     780:	b	64c <hexdump+0x50>
     784:	b	788 <hexdump+0x18c>
     788:	ldr	r0, [fp, #-20]	; 0xffffffec
     78c:	and	r0, r0, #15
     790:	cmp	r0, #0
     794:	beq	7b8 <hexdump+0x1bc>
     798:	ldr	r0, [fp, #-16]
     79c:	movw	r1, #0
     7a0:	movt	r1, #0
     7a4:	bl	0 <fprintf>
     7a8:	ldr	r1, [fp, #-20]	; 0xffffffec
     7ac:	add	r1, r1, #1
     7b0:	str	r1, [fp, #-20]	; 0xffffffec
     7b4:	b	788 <hexdump+0x18c>
     7b8:	add	r2, sp, #11
     7bc:	ldr	r0, [fp, #-16]
     7c0:	movw	r1, #0
     7c4:	movt	r1, #0
     7c8:	bl	0 <fprintf>
     7cc:	mov	sp, fp
     7d0:	pop	{fp, pc}

000007d4 <edge_case_tests>:
     7d4:	push	{fp, lr}
     7d8:	mov	fp, sp
     7dc:	sub	sp, sp, #72	; 0x48
     7e0:	movw	r0, #0
     7e4:	str	r0, [fp, #-4]
     7e8:	movw	r1, #0
     7ec:	movt	r1, #0
     7f0:	str	r1, [fp, #-8]
     7f4:	ldr	r1, [fp, #-8]
     7f8:	str	r0, [fp, #-12]
     7fc:	mov	r0, r1
     800:	movw	r1, #0
     804:	movt	r1, #0
     808:	movw	r2, #0
     80c:	movt	r2, #0
     810:	ldr	r3, [fp, #-12]
     814:	ldr	ip, [fp, #-12]
     818:	str	ip, [sp]
     81c:	str	ip, [sp, #4]
     820:	movw	lr, #155	; 0x9b
     824:	str	lr, [sp, #8]
     828:	bl	0 <test_json>
     82c:	ldr	r1, [fp, #-4]
     830:	orr	r0, r1, r0
     834:	str	r0, [fp, #-4]
     838:	ldr	r0, [fp, #-8]
     83c:	movw	r1, #0
     840:	movt	r1, #0
     844:	movw	r2, #0
     848:	movt	r2, #0
     84c:	movw	r3, #0
     850:	str	r3, [fp, #-16]
     854:	movw	ip, #2
     858:	str	ip, [sp]
     85c:	ldr	ip, [fp, #-16]
     860:	str	ip, [sp, #4]
     864:	movw	lr, #168	; 0xa8
     868:	str	lr, [sp, #8]
     86c:	bl	0 <test_json>
     870:	ldr	r1, [fp, #-4]
     874:	orr	r0, r1, r0
     878:	str	r0, [fp, #-4]
     87c:	ldr	r0, [fp, #-8]
     880:	movw	r1, #0
     884:	movt	r1, #0
     888:	movw	r2, #0
     88c:	movt	r2, #0
     890:	movw	r3, #0
     894:	str	r3, [fp, #-20]	; 0xffffffec
     898:	ldr	ip, [fp, #-20]	; 0xffffffec
     89c:	str	ip, [sp]
     8a0:	movw	lr, #2
     8a4:	str	lr, [sp, #4]
     8a8:	movw	lr, #172	; 0xac
     8ac:	str	lr, [sp, #8]
     8b0:	bl	0 <test_json>
     8b4:	ldr	r1, [fp, #-4]
     8b8:	orr	r0, r1, r0
     8bc:	str	r0, [fp, #-4]
     8c0:	ldr	r0, [fp, #-8]
     8c4:	movw	r1, #0
     8c8:	movt	r1, #0
     8cc:	movw	r2, #0
     8d0:	movt	r2, #0
     8d4:	movw	r3, #0
     8d8:	movw	ip, #2
     8dc:	str	ip, [sp]
     8e0:	movw	ip, #4
     8e4:	str	ip, [sp, #4]
     8e8:	movw	ip, #176	; 0xb0
     8ec:	str	ip, [sp, #8]
     8f0:	bl	0 <test_json>
     8f4:	ldr	r1, [fp, #-4]
     8f8:	orr	r0, r1, r0
     8fc:	str	r0, [fp, #-4]
     900:	ldr	r0, [fp, #-8]
     904:	movw	r1, #0
     908:	movt	r1, #0
     90c:	movw	r2, #0
     910:	movt	r2, #0
     914:	movw	r3, #0
     918:	str	r3, [fp, #-24]	; 0xffffffe8
     91c:	ldr	ip, [fp, #-24]	; 0xffffffe8
     920:	str	ip, [sp]
     924:	movw	lr, #8
     928:	str	lr, [sp, #4]
     92c:	movw	lr, #180	; 0xb4
     930:	str	lr, [sp, #8]
     934:	bl	0 <test_json>
     938:	ldr	r1, [fp, #-4]
     93c:	orr	r0, r1, r0
     940:	str	r0, [fp, #-4]
     944:	ldr	r0, [fp, #-8]
     948:	movw	r1, #0
     94c:	movt	r1, #0
     950:	movw	r2, #0
     954:	movt	r2, #0
     958:	movw	r3, #0
     95c:	str	r3, [fp, #-28]	; 0xffffffe4
     960:	movw	ip, #2
     964:	str	ip, [sp]
     968:	ldr	ip, [fp, #-28]	; 0xffffffe4
     96c:	str	ip, [sp, #4]
     970:	movw	lr, #195	; 0xc3
     974:	str	lr, [sp, #8]
     978:	bl	0 <test_json>
     97c:	ldr	r1, [fp, #-4]
     980:	orr	r0, r1, r0
     984:	str	r0, [fp, #-4]
     988:	ldr	r0, [fp, #-8]
     98c:	movw	r1, #0
     990:	movt	r1, #0
     994:	movw	r2, #0
     998:	movt	r2, #0
     99c:	movw	r3, #0
     9a0:	str	r3, [fp, #-32]	; 0xffffffe0
     9a4:	movw	ip, #1
     9a8:	str	ip, [sp]
     9ac:	ldr	ip, [fp, #-32]	; 0xffffffe0
     9b0:	str	ip, [sp, #4]
     9b4:	movw	lr, #199	; 0xc7
     9b8:	str	lr, [sp, #8]
     9bc:	bl	0 <test_json>
     9c0:	ldr	r1, [fp, #-4]
     9c4:	orr	r0, r1, r0
     9c8:	str	r0, [fp, #-4]
     9cc:	ldr	r0, [fp, #-8]
     9d0:	movw	r1, #0
     9d4:	movt	r1, #0
     9d8:	movw	r2, #0
     9dc:	movt	r2, #0
     9e0:	movw	r3, #0
     9e4:	movw	ip, #1
     9e8:	str	ip, [sp]
     9ec:	str	ip, [sp, #4]
     9f0:	movw	ip, #203	; 0xcb
     9f4:	str	ip, [sp, #8]
     9f8:	bl	0 <test_json>
     9fc:	ldr	r1, [fp, #-4]
     a00:	orr	r0, r1, r0
     a04:	str	r0, [fp, #-4]
     a08:	ldr	r0, [fp, #-8]
     a0c:	movw	r1, #0
     a10:	movt	r1, #0
     a14:	movw	r2, #0
     a18:	movt	r2, #0
     a1c:	movw	r3, #0
     a20:	str	r3, [sp, #36]	; 0x24
     a24:	movw	ip, #1
     a28:	str	ip, [sp]
     a2c:	ldr	ip, [sp, #36]	; 0x24
     a30:	str	ip, [sp, #4]
     a34:	movw	lr, #209	; 0xd1
     a38:	str	lr, [sp, #8]
     a3c:	bl	0 <test_json>
     a40:	ldr	r1, [fp, #-4]
     a44:	orr	r0, r1, r0
     a48:	str	r0, [fp, #-4]
     a4c:	ldr	r0, [fp, #-8]
     a50:	movw	r1, #0
     a54:	movt	r1, #0
     a58:	movw	r2, #0
     a5c:	movt	r2, #0
     a60:	movw	r3, #0
     a64:	str	r3, [sp, #32]
     a68:	movw	ip, #2
     a6c:	str	ip, [sp]
     a70:	ldr	ip, [sp, #32]
     a74:	str	ip, [sp, #4]
     a78:	movw	lr, #217	; 0xd9
     a7c:	str	lr, [sp, #8]
     a80:	bl	0 <test_json>
     a84:	ldr	r1, [fp, #-4]
     a88:	orr	r0, r1, r0
     a8c:	str	r0, [fp, #-4]
     a90:	ldr	r0, [fp, #-8]
     a94:	movw	r1, #0
     a98:	movt	r1, #0
     a9c:	movw	r2, #0
     aa0:	movt	r2, #0
     aa4:	movw	r3, #0
     aa8:	str	r3, [sp, #28]
     aac:	ldr	ip, [sp, #28]
     ab0:	str	ip, [sp]
     ab4:	movw	lr, #2
     ab8:	str	lr, [sp, #4]
     abc:	movw	lr, #221	; 0xdd
     ac0:	str	lr, [sp, #8]
     ac4:	bl	0 <test_json>
     ac8:	ldr	r1, [fp, #-4]
     acc:	orr	r0, r1, r0
     ad0:	str	r0, [fp, #-4]
     ad4:	ldr	r0, [fp, #-8]
     ad8:	movw	r1, #0
     adc:	movt	r1, #0
     ae0:	movw	r2, #0
     ae4:	movt	r2, #0
     ae8:	movw	r3, #0
     aec:	movw	ip, #2
     af0:	str	ip, [sp]
     af4:	movw	ip, #4
     af8:	str	ip, [sp, #4]
     afc:	movw	ip, #225	; 0xe1
     b00:	str	ip, [sp, #8]
     b04:	bl	0 <test_json>
     b08:	ldr	r1, [fp, #-4]
     b0c:	orr	r0, r1, r0
     b10:	str	r0, [fp, #-4]
     b14:	ldr	r0, [fp, #-8]
     b18:	movw	r1, #0
     b1c:	movt	r1, #0
     b20:	movw	r2, #0
     b24:	movt	r2, #0
     b28:	movw	r3, #0
     b2c:	str	r3, [sp, #24]
     b30:	ldr	ip, [sp, #24]
     b34:	str	ip, [sp]
     b38:	movw	lr, #8
     b3c:	str	lr, [sp, #4]
     b40:	movw	lr, #229	; 0xe5
     b44:	str	lr, [sp, #8]
     b48:	bl	0 <test_json>
     b4c:	ldr	r1, [fp, #-4]
     b50:	orr	r0, r1, r0
     b54:	str	r0, [fp, #-4]
     b58:	ldr	r0, [fp, #-8]
     b5c:	movw	r1, #0
     b60:	movt	r1, #0
     b64:	movw	r2, #0
     b68:	movt	r2, #0
     b6c:	movw	r3, #0
     b70:	str	r3, [sp, #20]
     b74:	movw	ip, #2
     b78:	str	ip, [sp]
     b7c:	ldr	ip, [sp, #20]
     b80:	str	ip, [sp, #4]
     b84:	movw	lr, #233	; 0xe9
     b88:	str	lr, [sp, #8]
     b8c:	bl	0 <test_json>
     b90:	ldr	r1, [fp, #-4]
     b94:	orr	r0, r1, r0
     b98:	str	r0, [fp, #-4]
     b9c:	ldr	r0, [fp, #-8]
     ba0:	movw	r1, #0
     ba4:	movt	r1, #0
     ba8:	movw	r2, #0
     bac:	movt	r2, #0
     bb0:	movw	r3, #0
     bb4:	str	r3, [sp, #16]
     bb8:	movw	ip, #1
     bbc:	str	ip, [sp]
     bc0:	ldr	ip, [sp, #16]
     bc4:	str	ip, [sp, #4]
     bc8:	movw	lr, #237	; 0xed
     bcc:	str	lr, [sp, #8]
     bd0:	bl	0 <test_json>
     bd4:	ldr	r1, [fp, #-4]
     bd8:	orr	r0, r1, r0
     bdc:	str	r0, [fp, #-4]
     be0:	ldr	r0, [fp, #-8]
     be4:	movw	r1, #0
     be8:	movt	r1, #0
     bec:	movw	r2, #0
     bf0:	movt	r2, #0
     bf4:	movw	r3, #0
     bf8:	movw	ip, #1
     bfc:	str	ip, [sp]
     c00:	str	ip, [sp, #4]
     c04:	movw	ip, #241	; 0xf1
     c08:	str	ip, [sp, #8]
     c0c:	bl	0 <test_json>
     c10:	ldr	r1, [fp, #-4]
     c14:	orr	r0, r1, r0
     c18:	str	r0, [fp, #-4]
     c1c:	ldr	r0, [fp, #-8]
     c20:	movw	r1, #0
     c24:	movt	r1, #0
     c28:	movw	r2, #0
     c2c:	movt	r2, #0
     c30:	movw	r3, #0
     c34:	str	r3, [sp, #12]
     c38:	movw	ip, #1
     c3c:	str	ip, [sp]
     c40:	ldr	ip, [sp, #12]
     c44:	str	ip, [sp, #4]
     c48:	movw	lr, #247	; 0xf7
     c4c:	str	lr, [sp, #8]
     c50:	bl	0 <test_json>
     c54:	ldr	r1, [fp, #-4]
     c58:	orr	r0, r1, r0
     c5c:	str	r0, [fp, #-4]
     c60:	ldr	r0, [fp, #-4]
     c64:	mov	sp, fp
     c68:	pop	{fp, pc}

00000c6c <error_case_tests>:
     c6c:	push	{fp, lr}
     c70:	mov	fp, sp
     c74:	sub	sp, sp, #96	; 0x60
     c78:	movw	r0, #0
     c7c:	str	r0, [fp, #-4]
     c80:	movw	r1, #0
     c84:	movt	r1, #0
     c88:	str	r1, [fp, #-8]
     c8c:	ldr	r1, [fp, #-8]
     c90:	str	r0, [fp, #-12]
     c94:	mov	r0, r1
     c98:	movw	r1, #0
     c9c:	movt	r1, #0
     ca0:	ldr	r2, [fp, #-12]
     ca4:	movw	r3, #13
     ca8:	ldr	ip, [fp, #-12]
     cac:	str	ip, [sp]
     cb0:	str	ip, [sp, #4]
     cb4:	movw	lr, #285	; 0x11d
     cb8:	str	lr, [sp, #8]
     cbc:	bl	0 <test_json>
     cc0:	ldr	r1, [fp, #-4]
     cc4:	orr	r0, r1, r0
     cc8:	str	r0, [fp, #-4]
     ccc:	ldr	r0, [fp, #-8]
     cd0:	movw	r1, #0
     cd4:	movt	r1, #0
     cd8:	movw	r2, #0
     cdc:	str	r2, [fp, #-16]
     ce0:	movw	r3, #13
     ce4:	ldr	ip, [fp, #-16]
     ce8:	str	ip, [sp]
     cec:	str	ip, [sp, #4]
     cf0:	movw	lr, #287	; 0x11f
     cf4:	str	lr, [sp, #8]
     cf8:	bl	0 <test_json>
     cfc:	ldr	r1, [fp, #-4]
     d00:	orr	r0, r1, r0
     d04:	str	r0, [fp, #-4]
     d08:	ldr	r0, [fp, #-8]
     d0c:	movw	r1, #0
     d10:	movt	r1, #0
     d14:	movw	r2, #0
     d18:	str	r2, [fp, #-20]	; 0xffffffec
     d1c:	movw	r3, #13
     d20:	ldr	ip, [fp, #-20]	; 0xffffffec
     d24:	str	ip, [sp]
     d28:	str	ip, [sp, #4]
     d2c:	movw	lr, #289	; 0x121
     d30:	str	lr, [sp, #8]
     d34:	bl	0 <test_json>
     d38:	ldr	r1, [fp, #-4]
     d3c:	orr	r0, r1, r0
     d40:	str	r0, [fp, #-4]
     d44:	ldr	r0, [fp, #-8]
     d48:	movw	r1, #0
     d4c:	movt	r1, #0
     d50:	movw	r2, #0
     d54:	str	r2, [fp, #-24]	; 0xffffffe8
     d58:	movw	r3, #13
     d5c:	ldr	ip, [fp, #-24]	; 0xffffffe8
     d60:	str	ip, [sp]
     d64:	str	ip, [sp, #4]
     d68:	movw	lr, #291	; 0x123
     d6c:	str	lr, [sp, #8]
     d70:	bl	0 <test_json>
     d74:	ldr	r1, [fp, #-4]
     d78:	orr	r0, r1, r0
     d7c:	str	r0, [fp, #-4]
     d80:	ldr	r0, [fp, #-8]
     d84:	movw	r1, #0
     d88:	movt	r1, #0
     d8c:	movw	r2, #0
     d90:	str	r2, [fp, #-28]	; 0xffffffe4
     d94:	movw	r3, #13
     d98:	ldr	ip, [fp, #-28]	; 0xffffffe4
     d9c:	str	ip, [sp]
     da0:	str	ip, [sp, #4]
     da4:	movw	lr, #293	; 0x125
     da8:	str	lr, [sp, #8]
     dac:	bl	0 <test_json>
     db0:	ldr	r1, [fp, #-4]
     db4:	orr	r0, r1, r0
     db8:	str	r0, [fp, #-4]
     dbc:	ldr	r0, [fp, #-8]
     dc0:	movw	r1, #0
     dc4:	movt	r1, #0
     dc8:	movw	r2, #0
     dcc:	str	r2, [fp, #-32]	; 0xffffffe0
     dd0:	movw	r3, #13
     dd4:	ldr	ip, [fp, #-32]	; 0xffffffe0
     dd8:	str	ip, [sp]
     ddc:	str	ip, [sp, #4]
     de0:	movw	lr, #296	; 0x128
     de4:	str	lr, [sp, #8]
     de8:	bl	0 <test_json>
     dec:	ldr	r1, [fp, #-4]
     df0:	orr	r0, r1, r0
     df4:	str	r0, [fp, #-4]
     df8:	ldr	r0, [fp, #-8]
     dfc:	movw	r1, #0
     e00:	movt	r1, #0
     e04:	movw	r2, #0
     e08:	str	r2, [fp, #-36]	; 0xffffffdc
     e0c:	movw	r3, #13
     e10:	ldr	ip, [fp, #-36]	; 0xffffffdc
     e14:	str	ip, [sp]
     e18:	str	ip, [sp, #4]
     e1c:	movw	lr, #299	; 0x12b
     e20:	str	lr, [sp, #8]
     e24:	bl	0 <test_json>
     e28:	ldr	r1, [fp, #-4]
     e2c:	orr	r0, r1, r0
     e30:	str	r0, [fp, #-4]
     e34:	ldr	r0, [fp, #-8]
     e38:	movw	r1, #0
     e3c:	movt	r1, #0
     e40:	movw	r2, #0
     e44:	str	r2, [fp, #-40]	; 0xffffffd8
     e48:	movw	r3, #13
     e4c:	ldr	ip, [fp, #-40]	; 0xffffffd8
     e50:	str	ip, [sp]
     e54:	str	ip, [sp, #4]
     e58:	movw	lr, #303	; 0x12f
     e5c:	str	lr, [sp, #8]
     e60:	bl	0 <test_json>
     e64:	ldr	r1, [fp, #-4]
     e68:	orr	r0, r1, r0
     e6c:	str	r0, [fp, #-4]
     e70:	ldr	r0, [fp, #-8]
     e74:	movw	r1, #0
     e78:	movt	r1, #0
     e7c:	movw	r2, #0
     e80:	str	r2, [fp, #-44]	; 0xffffffd4
     e84:	movw	r3, #13
     e88:	ldr	ip, [fp, #-44]	; 0xffffffd4
     e8c:	str	ip, [sp]
     e90:	str	ip, [sp, #4]
     e94:	movw	lr, #307	; 0x133
     e98:	str	lr, [sp, #8]
     e9c:	bl	0 <test_json>
     ea0:	ldr	r1, [fp, #-4]
     ea4:	orr	r0, r1, r0
     ea8:	str	r0, [fp, #-4]
     eac:	ldr	r0, [fp, #-8]
     eb0:	movw	r1, #0
     eb4:	movt	r1, #0
     eb8:	movw	r2, #0
     ebc:	str	r2, [sp, #48]	; 0x30
     ec0:	movw	r3, #13
     ec4:	ldr	ip, [sp, #48]	; 0x30
     ec8:	str	ip, [sp]
     ecc:	str	ip, [sp, #4]
     ed0:	movw	lr, #322	; 0x142
     ed4:	str	lr, [sp, #8]
     ed8:	bl	0 <test_json>
     edc:	ldr	r1, [fp, #-4]
     ee0:	orr	r0, r1, r0
     ee4:	str	r0, [fp, #-4]
     ee8:	ldr	r0, [fp, #-8]
     eec:	movw	r1, #0
     ef0:	movt	r1, #0
     ef4:	movw	r2, #0
     ef8:	str	r2, [sp, #44]	; 0x2c
     efc:	movw	r3, #13
     f00:	ldr	ip, [sp, #44]	; 0x2c
     f04:	str	ip, [sp]
     f08:	str	ip, [sp, #4]
     f0c:	movw	lr, #324	; 0x144
     f10:	str	lr, [sp, #8]
     f14:	bl	0 <test_json>
     f18:	ldr	r1, [fp, #-4]
     f1c:	orr	r0, r1, r0
     f20:	str	r0, [fp, #-4]
     f24:	ldr	r0, [fp, #-8]
     f28:	movw	r1, #0
     f2c:	movt	r1, #0
     f30:	movw	r2, #0
     f34:	str	r2, [sp, #40]	; 0x28
     f38:	movw	r3, #13
     f3c:	ldr	ip, [sp, #40]	; 0x28
     f40:	str	ip, [sp]
     f44:	str	ip, [sp, #4]
     f48:	movw	lr, #326	; 0x146
     f4c:	str	lr, [sp, #8]
     f50:	bl	0 <test_json>
     f54:	ldr	r1, [fp, #-4]
     f58:	orr	r0, r1, r0
     f5c:	str	r0, [fp, #-4]
     f60:	ldr	r0, [fp, #-8]
     f64:	movw	r1, #0
     f68:	movt	r1, #0
     f6c:	movw	r2, #0
     f70:	str	r2, [sp, #36]	; 0x24
     f74:	movw	r3, #13
     f78:	ldr	ip, [sp, #36]	; 0x24
     f7c:	str	ip, [sp]
     f80:	str	ip, [sp, #4]
     f84:	movw	lr, #328	; 0x148
     f88:	str	lr, [sp, #8]
     f8c:	bl	0 <test_json>
     f90:	ldr	r1, [fp, #-4]
     f94:	orr	r0, r1, r0
     f98:	str	r0, [fp, #-4]
     f9c:	ldr	r0, [fp, #-8]
     fa0:	movw	r1, #0
     fa4:	movt	r1, #0
     fa8:	movw	r2, #0
     fac:	str	r2, [sp, #32]
     fb0:	movw	r3, #13
     fb4:	ldr	ip, [sp, #32]
     fb8:	str	ip, [sp]
     fbc:	str	ip, [sp, #4]
     fc0:	movw	lr, #330	; 0x14a
     fc4:	str	lr, [sp, #8]
     fc8:	bl	0 <test_json>
     fcc:	ldr	r1, [fp, #-4]
     fd0:	orr	r0, r1, r0
     fd4:	str	r0, [fp, #-4]
     fd8:	ldr	r0, [fp, #-8]
     fdc:	movw	r1, #0
     fe0:	movt	r1, #0
     fe4:	movw	r2, #0
     fe8:	str	r2, [sp, #28]
     fec:	movw	r3, #13
     ff0:	ldr	ip, [sp, #28]
     ff4:	str	ip, [sp]
     ff8:	str	ip, [sp, #4]
     ffc:	movw	lr, #333	; 0x14d
    1000:	str	lr, [sp, #8]
    1004:	bl	0 <test_json>
    1008:	ldr	r1, [fp, #-4]
    100c:	orr	r0, r1, r0
    1010:	str	r0, [fp, #-4]
    1014:	ldr	r0, [fp, #-8]
    1018:	movw	r1, #0
    101c:	movt	r1, #0
    1020:	movw	r2, #0
    1024:	str	r2, [sp, #24]
    1028:	movw	r3, #13
    102c:	ldr	ip, [sp, #24]
    1030:	str	ip, [sp]
    1034:	str	ip, [sp, #4]
    1038:	movw	lr, #336	; 0x150
    103c:	str	lr, [sp, #8]
    1040:	bl	0 <test_json>
    1044:	ldr	r1, [fp, #-4]
    1048:	orr	r0, r1, r0
    104c:	str	r0, [fp, #-4]
    1050:	ldr	r0, [fp, #-8]
    1054:	movw	r1, #0
    1058:	movt	r1, #0
    105c:	movw	r2, #0
    1060:	str	r2, [sp, #20]
    1064:	movw	r3, #13
    1068:	ldr	ip, [sp, #20]
    106c:	str	ip, [sp]
    1070:	str	ip, [sp, #4]
    1074:	movw	lr, #340	; 0x154
    1078:	str	lr, [sp, #8]
    107c:	bl	0 <test_json>
    1080:	ldr	r1, [fp, #-4]
    1084:	orr	r0, r1, r0
    1088:	str	r0, [fp, #-4]
    108c:	ldr	r0, [fp, #-8]
    1090:	movw	r1, #0
    1094:	movt	r1, #0
    1098:	movw	r2, #0
    109c:	str	r2, [sp, #16]
    10a0:	movw	r3, #13
    10a4:	ldr	ip, [sp, #16]
    10a8:	str	ip, [sp]
    10ac:	str	ip, [sp, #4]
    10b0:	movw	lr, #344	; 0x158
    10b4:	str	lr, [sp, #8]
    10b8:	bl	0 <test_json>
    10bc:	ldr	r1, [fp, #-4]
    10c0:	orr	r0, r1, r0
    10c4:	str	r0, [fp, #-4]
    10c8:	ldr	r0, [fp, #-4]
    10cc:	mov	sp, fp
    10d0:	pop	{fp, pc}

000010d4 <base64_tests>:
    10d4:	push	{fp, lr}
    10d8:	mov	fp, sp
    10dc:	sub	sp, sp, #64	; 0x40
    10e0:	movw	r0, #0
    10e4:	str	r0, [fp, #-4]
    10e8:	movw	r1, #0
    10ec:	movt	r1, #0
    10f0:	str	r1, [fp, #-8]
    10f4:	ldr	r1, [fp, #-8]
    10f8:	str	r0, [fp, #-12]
    10fc:	mov	r0, r1
    1100:	movw	r1, #0
    1104:	movt	r1, #0
    1108:	movw	r2, #0
    110c:	movt	r2, #0
    1110:	ldr	r3, [fp, #-12]
    1114:	ldr	ip, [fp, #-12]
    1118:	str	ip, [sp]
    111c:	str	ip, [sp, #4]
    1120:	movw	lr, #369	; 0x171
    1124:	str	lr, [sp, #8]
    1128:	bl	0 <test_json>
    112c:	ldr	r1, [fp, #-4]
    1130:	orr	r0, r1, r0
    1134:	str	r0, [fp, #-4]
    1138:	ldr	r0, [fp, #-8]
    113c:	movw	r1, #0
    1140:	movt	r1, #0
    1144:	movw	r2, #0
    1148:	movt	r2, #0
    114c:	movw	r3, #0
    1150:	str	r3, [fp, #-16]
    1154:	ldr	ip, [fp, #-16]
    1158:	str	ip, [sp]
    115c:	str	ip, [sp, #4]
    1160:	movw	lr, #372	; 0x174
    1164:	str	lr, [sp, #8]
    1168:	bl	0 <test_json>
    116c:	ldr	r1, [fp, #-4]
    1170:	orr	r0, r1, r0
    1174:	str	r0, [fp, #-4]
    1178:	ldr	r0, [fp, #-8]
    117c:	movw	r1, #0
    1180:	movt	r1, #0
    1184:	movw	r2, #0
    1188:	movt	r2, #0
    118c:	movw	r3, #0
    1190:	str	r3, [fp, #-20]	; 0xffffffec
    1194:	ldr	ip, [fp, #-20]	; 0xffffffec
    1198:	str	ip, [sp]
    119c:	str	ip, [sp, #4]
    11a0:	movw	lr, #376	; 0x178
    11a4:	str	lr, [sp, #8]
    11a8:	bl	0 <test_json>
    11ac:	ldr	r1, [fp, #-4]
    11b0:	orr	r0, r1, r0
    11b4:	str	r0, [fp, #-4]
    11b8:	ldr	r0, [fp, #-8]
    11bc:	movw	r1, #0
    11c0:	movt	r1, #0
    11c4:	movw	r2, #0
    11c8:	movt	r2, #0
    11cc:	movw	r3, #0
    11d0:	str	r3, [fp, #-24]	; 0xffffffe8
    11d4:	ldr	ip, [fp, #-24]	; 0xffffffe8
    11d8:	str	ip, [sp]
    11dc:	str	ip, [sp, #4]
    11e0:	movw	lr, #379	; 0x17b
    11e4:	str	lr, [sp, #8]
    11e8:	bl	0 <test_json>
    11ec:	ldr	r1, [fp, #-4]
    11f0:	orr	r0, r1, r0
    11f4:	str	r0, [fp, #-4]
    11f8:	ldr	r0, [fp, #-8]
    11fc:	movw	r1, #0
    1200:	movt	r1, #0
    1204:	movw	r2, #0
    1208:	movt	r2, #0
    120c:	movw	r3, #0
    1210:	str	r3, [fp, #-28]	; 0xffffffe4
    1214:	ldr	ip, [fp, #-28]	; 0xffffffe4
    1218:	str	ip, [sp]
    121c:	str	ip, [sp, #4]
    1220:	movw	lr, #382	; 0x17e
    1224:	str	lr, [sp, #8]
    1228:	bl	0 <test_json>
    122c:	ldr	r1, [fp, #-4]
    1230:	orr	r0, r1, r0
    1234:	str	r0, [fp, #-4]
    1238:	ldr	r0, [fp, #-8]
    123c:	movw	r1, #0
    1240:	movt	r1, #0
    1244:	movw	r2, #0
    1248:	movt	r2, #0
    124c:	movw	r3, #0
    1250:	str	r3, [sp, #32]
    1254:	ldr	ip, [sp, #32]
    1258:	str	ip, [sp]
    125c:	str	ip, [sp, #4]
    1260:	movw	lr, #385	; 0x181
    1264:	str	lr, [sp, #8]
    1268:	bl	0 <test_json>
    126c:	ldr	r1, [fp, #-4]
    1270:	orr	r0, r1, r0
    1274:	str	r0, [fp, #-4]
    1278:	ldr	r0, [fp, #-8]
    127c:	movw	r1, #0
    1280:	movt	r1, #0
    1284:	movw	r2, #0
    1288:	str	r2, [sp, #28]
    128c:	movw	r3, #31
    1290:	ldr	ip, [sp, #28]
    1294:	str	ip, [sp]
    1298:	str	ip, [sp, #4]
    129c:	movw	lr, #388	; 0x184
    12a0:	str	lr, [sp, #8]
    12a4:	bl	0 <test_json>
    12a8:	ldr	r1, [fp, #-4]
    12ac:	orr	r0, r1, r0
    12b0:	str	r0, [fp, #-4]
    12b4:	ldr	r0, [fp, #-8]
    12b8:	movw	r1, #0
    12bc:	movt	r1, #0
    12c0:	movw	r2, #0
    12c4:	str	r2, [sp, #24]
    12c8:	movw	r3, #32
    12cc:	ldr	ip, [sp, #24]
    12d0:	str	ip, [sp]
    12d4:	str	ip, [sp, #4]
    12d8:	movw	lr, #391	; 0x187
    12dc:	str	lr, [sp, #8]
    12e0:	bl	0 <test_json>
    12e4:	ldr	r1, [fp, #-4]
    12e8:	orr	r0, r1, r0
    12ec:	str	r0, [fp, #-4]
    12f0:	ldr	r0, [fp, #-8]
    12f4:	movw	r1, #0
    12f8:	movt	r1, #0
    12fc:	movw	r2, #0
    1300:	movt	r2, #0
    1304:	movw	r3, #0
    1308:	str	r3, [sp, #20]
    130c:	ldr	ip, [sp, #20]
    1310:	str	ip, [sp]
    1314:	str	ip, [sp, #4]
    1318:	movw	lr, #406	; 0x196
    131c:	str	lr, [sp, #8]
    1320:	bl	0 <test_json>
    1324:	ldr	r1, [fp, #-4]
    1328:	orr	r0, r1, r0
    132c:	str	r0, [fp, #-4]
    1330:	ldr	r0, [fp, #-8]
    1334:	movw	r1, #0
    1338:	movt	r1, #0
    133c:	movw	r2, #0
    1340:	movt	r2, #0
    1344:	movw	r3, #0
    1348:	str	r3, [sp, #16]
    134c:	ldr	ip, [sp, #16]
    1350:	str	ip, [sp]
    1354:	str	ip, [sp, #4]
    1358:	movw	lr, #419	; 0x1a3
    135c:	str	lr, [sp, #8]
    1360:	bl	0 <test_json>
    1364:	ldr	r1, [fp, #-4]
    1368:	orr	r0, r1, r0
    136c:	str	r0, [fp, #-4]
    1370:	ldr	r0, [fp, #-4]
    1374:	mov	sp, fp
    1378:	pop	{fp, pc}

0000137c <mixed_type_union_tests>:
    137c:	push	{fp, lr}
    1380:	mov	fp, sp
    1384:	sub	sp, sp, #48	; 0x30
    1388:	movw	r0, #0
    138c:	str	r0, [fp, #-4]
    1390:	movw	r1, #0
    1394:	movt	r1, #0
    1398:	str	r1, [fp, #-8]
    139c:	ldr	r1, [fp, #-8]
    13a0:	str	r0, [fp, #-12]
    13a4:	mov	r0, r1
    13a8:	movw	r1, #0
    13ac:	movt	r1, #0
    13b0:	movw	r2, #0
    13b4:	movt	r2, #0
    13b8:	ldr	r3, [fp, #-12]
    13bc:	ldr	ip, [fp, #-12]
    13c0:	str	ip, [sp]
    13c4:	str	ip, [sp, #4]
    13c8:	movw	lr, #432	; 0x1b0
    13cc:	str	lr, [sp, #8]
    13d0:	bl	0 <test_json>
    13d4:	ldr	r1, [fp, #-4]
    13d8:	orr	r0, r1, r0
    13dc:	str	r0, [fp, #-4]
    13e0:	ldr	r0, [fp, #-8]
    13e4:	movw	r1, #0
    13e8:	movt	r1, #0
    13ec:	movw	r2, #0
    13f0:	movt	r2, #0
    13f4:	movw	r3, #0
    13f8:	str	r3, [fp, #-16]
    13fc:	ldr	ip, [fp, #-16]
    1400:	str	ip, [sp]
    1404:	str	ip, [sp, #4]
    1408:	movw	lr, #437	; 0x1b5
    140c:	str	lr, [sp, #8]
    1410:	bl	0 <test_json>
    1414:	ldr	r1, [fp, #-4]
    1418:	orr	r0, r1, r0
    141c:	str	r0, [fp, #-4]
    1420:	ldr	r0, [fp, #-8]
    1424:	movw	r1, #0
    1428:	movt	r1, #0
    142c:	movw	r2, #0
    1430:	movt	r2, #0
    1434:	movw	r3, #0
    1438:	str	r3, [fp, #-20]	; 0xffffffec
    143c:	ldr	ip, [fp, #-20]	; 0xffffffec
    1440:	str	ip, [sp]
    1444:	str	ip, [sp, #4]
    1448:	movw	lr, #442	; 0x1ba
    144c:	str	lr, [sp, #8]
    1450:	bl	0 <test_json>
    1454:	ldr	r1, [fp, #-4]
    1458:	orr	r0, r1, r0
    145c:	str	r0, [fp, #-4]
    1460:	ldr	r0, [fp, #-8]
    1464:	movw	r1, #0
    1468:	movt	r1, #0
    146c:	movw	r2, #0
    1470:	movt	r2, #0
    1474:	movw	r3, #0
    1478:	str	r3, [sp, #24]
    147c:	ldr	ip, [sp, #24]
    1480:	str	ip, [sp]
    1484:	str	ip, [sp, #4]
    1488:	movw	lr, #449	; 0x1c1
    148c:	str	lr, [sp, #8]
    1490:	bl	0 <test_json>
    1494:	ldr	r1, [fp, #-4]
    1498:	orr	r0, r1, r0
    149c:	str	r0, [fp, #-4]
    14a0:	ldr	r0, [fp, #-8]
    14a4:	movw	r1, #0
    14a8:	movt	r1, #0
    14ac:	movw	r2, #0
    14b0:	movt	r2, #0
    14b4:	movw	r3, #0
    14b8:	str	r3, [sp, #20]
    14bc:	ldr	ip, [sp, #20]
    14c0:	str	ip, [sp]
    14c4:	str	ip, [sp, #4]
    14c8:	movw	lr, #458	; 0x1ca
    14cc:	str	lr, [sp, #8]
    14d0:	bl	0 <test_json>
    14d4:	ldr	r1, [fp, #-4]
    14d8:	orr	r0, r1, r0
    14dc:	str	r0, [fp, #-4]
    14e0:	ldr	r0, [fp, #-8]
    14e4:	movw	r1, #0
    14e8:	movt	r1, #0
    14ec:	movw	r2, #0
    14f0:	movt	r2, #0
    14f4:	movw	r3, #0
    14f8:	str	r3, [sp, #16]
    14fc:	ldr	ip, [sp, #16]
    1500:	str	ip, [sp]
    1504:	str	ip, [sp, #4]
    1508:	movw	lr, #469	; 0x1d5
    150c:	str	lr, [sp, #8]
    1510:	bl	0 <test_json>
    1514:	ldr	r1, [fp, #-4]
    1518:	orr	r0, r1, r0
    151c:	str	r0, [fp, #-4]
    1520:	ldr	r0, [fp, #-8]
    1524:	movw	r1, #0
    1528:	movt	r1, #0
    152c:	movw	r2, #0
    1530:	movt	r2, #0
    1534:	movw	r3, #0
    1538:	str	r3, [sp, #12]
    153c:	ldr	ip, [sp, #12]
    1540:	str	ip, [sp]
    1544:	str	ip, [sp, #4]
    1548:	movw	lr, #474	; 0x1da
    154c:	str	lr, [sp, #8]
    1550:	bl	0 <test_json>
    1554:	ldr	r1, [fp, #-4]
    1558:	orr	r0, r1, r0
    155c:	str	r0, [fp, #-4]
    1560:	ldr	r0, [fp, #-4]
    1564:	mov	sp, fp
    1568:	pop	{fp, pc}

0000156c <union_vector_tests>:
    156c:	push	{fp, lr}
    1570:	mov	fp, sp
    1574:	sub	sp, sp, #48	; 0x30
    1578:	movw	r0, #0
    157c:	str	r0, [fp, #-4]
    1580:	movw	r1, #0
    1584:	movt	r1, #0
    1588:	str	r1, [fp, #-8]
    158c:	ldr	r1, [fp, #-8]
    1590:	str	r0, [fp, #-12]
    1594:	mov	r0, r1
    1598:	movw	r1, #0
    159c:	movt	r1, #0
    15a0:	movw	r2, #0
    15a4:	movt	r2, #0
    15a8:	ldr	r3, [fp, #-12]
    15ac:	ldr	ip, [fp, #-12]
    15b0:	str	ip, [sp]
    15b4:	str	ip, [sp, #4]
    15b8:	movw	lr, #485	; 0x1e5
    15bc:	str	lr, [sp, #8]
    15c0:	bl	0 <test_json>
    15c4:	ldr	r1, [fp, #-4]
    15c8:	orr	r0, r1, r0
    15cc:	str	r0, [fp, #-4]
    15d0:	ldr	r0, [fp, #-8]
    15d4:	movw	r1, #0
    15d8:	movt	r1, #0
    15dc:	movw	r2, #0
    15e0:	movt	r2, #0
    15e4:	movw	r3, #0
    15e8:	str	r3, [fp, #-16]
    15ec:	ldr	ip, [fp, #-16]
    15f0:	str	ip, [sp]
    15f4:	str	ip, [sp, #4]
    15f8:	movw	lr, #488	; 0x1e8
    15fc:	str	lr, [sp, #8]
    1600:	bl	0 <test_json>
    1604:	ldr	r1, [fp, #-4]
    1608:	orr	r0, r1, r0
    160c:	str	r0, [fp, #-4]
    1610:	ldr	r0, [fp, #-8]
    1614:	movw	r1, #0
    1618:	movt	r1, #0
    161c:	movw	r2, #0
    1620:	movt	r2, #0
    1624:	movw	r3, #0
    1628:	str	r3, [fp, #-20]	; 0xffffffec
    162c:	ldr	ip, [fp, #-20]	; 0xffffffec
    1630:	str	ip, [sp]
    1634:	str	ip, [sp, #4]
    1638:	movw	lr, #491	; 0x1eb
    163c:	str	lr, [sp, #8]
    1640:	bl	0 <test_json>
    1644:	ldr	r1, [fp, #-4]
    1648:	orr	r0, r1, r0
    164c:	str	r0, [fp, #-4]
    1650:	ldr	r0, [fp, #-8]
    1654:	movw	r1, #0
    1658:	movt	r1, #0
    165c:	movw	r2, #0
    1660:	movt	r2, #0
    1664:	movw	r3, #0
    1668:	str	r3, [sp, #24]
    166c:	ldr	ip, [sp, #24]
    1670:	str	ip, [sp]
    1674:	str	ip, [sp, #4]
    1678:	movw	lr, #494	; 0x1ee
    167c:	str	lr, [sp, #8]
    1680:	bl	0 <test_json>
    1684:	ldr	r1, [fp, #-4]
    1688:	orr	r0, r1, r0
    168c:	str	r0, [fp, #-4]
    1690:	ldr	r0, [fp, #-8]
    1694:	movw	r1, #0
    1698:	movt	r1, #0
    169c:	movw	r2, #0
    16a0:	movt	r2, #0
    16a4:	movw	r3, #0
    16a8:	str	r3, [sp, #20]
    16ac:	ldr	ip, [sp, #20]
    16b0:	str	ip, [sp]
    16b4:	str	ip, [sp, #4]
    16b8:	movw	lr, #497	; 0x1f1
    16bc:	str	lr, [sp, #8]
    16c0:	bl	0 <test_json>
    16c4:	ldr	r1, [fp, #-4]
    16c8:	orr	r0, r1, r0
    16cc:	str	r0, [fp, #-4]
    16d0:	ldr	r0, [fp, #-8]
    16d4:	movw	r1, #0
    16d8:	movt	r1, #0
    16dc:	movw	r2, #0
    16e0:	movt	r2, #0
    16e4:	movw	r3, #0
    16e8:	str	r3, [sp, #16]
    16ec:	ldr	ip, [sp, #16]
    16f0:	str	ip, [sp]
    16f4:	str	ip, [sp, #4]
    16f8:	movw	lr, #500	; 0x1f4
    16fc:	str	lr, [sp, #8]
    1700:	bl	0 <test_json>
    1704:	ldr	r1, [fp, #-4]
    1708:	orr	r0, r1, r0
    170c:	str	r0, [fp, #-4]
    1710:	ldr	r0, [fp, #-4]
    1714:	mov	sp, fp
    1718:	pop	{fp, pc}

0000171c <main>:
    171c:	push	{fp, lr}
    1720:	mov	fp, sp
    1724:	sub	sp, sp, #280	; 0x118
    1728:	movw	r0, #0
    172c:	str	r0, [fp, #-4]
    1730:	str	r0, [fp, #-8]
    1734:	movw	r0, #0
    1738:	movt	r0, #0
    173c:	str	r0, [fp, #-12]
    1740:	bl	7d4 <edge_case_tests>
    1744:	ldr	r1, [fp, #-8]
    1748:	orr	r0, r1, r0
    174c:	str	r0, [fp, #-8]
    1750:	bl	c6c <error_case_tests>
    1754:	ldr	r1, [fp, #-8]
    1758:	orr	r0, r1, r0
    175c:	str	r0, [fp, #-8]
    1760:	bl	156c <union_vector_tests>
    1764:	ldr	r1, [fp, #-8]
    1768:	orr	r0, r1, r0
    176c:	str	r0, [fp, #-8]
    1770:	bl	10d4 <base64_tests>
    1774:	ldr	r1, [fp, #-8]
    1778:	orr	r0, r1, r0
    177c:	str	r0, [fp, #-8]
    1780:	bl	137c <mixed_type_union_tests>
    1784:	ldr	r1, [fp, #-8]
    1788:	orr	r0, r1, r0
    178c:	str	r0, [fp, #-8]
    1790:	ldr	r0, [fp, #-12]
    1794:	movw	r1, #0
    1798:	movt	r1, #0
    179c:	movw	r2, #0
    17a0:	movt	r2, #0
    17a4:	movw	r3, #0
    17a8:	str	r3, [fp, #-16]
    17ac:	ldr	ip, [fp, #-16]
    17b0:	str	ip, [sp]
    17b4:	str	ip, [sp, #4]
    17b8:	movw	lr, #525	; 0x20d
    17bc:	str	lr, [sp, #8]
    17c0:	bl	0 <test_json>
    17c4:	ldr	r1, [fp, #-8]
    17c8:	orr	r0, r1, r0
    17cc:	str	r0, [fp, #-8]
    17d0:	ldr	r0, [fp, #-12]
    17d4:	movw	r1, #0
    17d8:	movt	r1, #0
    17dc:	movw	r2, #0
    17e0:	movt	r2, #0
    17e4:	movw	r3, #0
    17e8:	str	r3, [fp, #-20]	; 0xffffffec
    17ec:	ldr	ip, [fp, #-20]	; 0xffffffec
    17f0:	str	ip, [sp]
    17f4:	str	ip, [sp, #4]
    17f8:	movw	lr, #528	; 0x210
    17fc:	str	lr, [sp, #8]
    1800:	bl	0 <test_json>
    1804:	ldr	r1, [fp, #-8]
    1808:	orr	r0, r1, r0
    180c:	str	r0, [fp, #-8]
    1810:	ldr	r0, [fp, #-12]
    1814:	movw	r1, #0
    1818:	movt	r1, #0
    181c:	movw	r2, #0
    1820:	movt	r2, #0
    1824:	movw	r3, #0
    1828:	str	r3, [fp, #-24]	; 0xffffffe8
    182c:	ldr	ip, [fp, #-24]	; 0xffffffe8
    1830:	str	ip, [sp]
    1834:	str	ip, [sp, #4]
    1838:	movw	lr, #531	; 0x213
    183c:	str	lr, [sp, #8]
    1840:	bl	0 <test_json>
    1844:	ldr	r1, [fp, #-8]
    1848:	orr	r0, r1, r0
    184c:	str	r0, [fp, #-8]
    1850:	ldr	r0, [fp, #-12]
    1854:	movw	r1, #0
    1858:	movt	r1, #0
    185c:	movw	r2, #0
    1860:	movt	r2, #0
    1864:	movw	r3, #0
    1868:	str	r3, [fp, #-28]	; 0xffffffe4
    186c:	ldr	ip, [fp, #-28]	; 0xffffffe4
    1870:	str	ip, [sp]
    1874:	str	ip, [sp, #4]
    1878:	movw	lr, #534	; 0x216
    187c:	str	lr, [sp, #8]
    1880:	bl	0 <test_json>
    1884:	ldr	r1, [fp, #-8]
    1888:	orr	r0, r1, r0
    188c:	str	r0, [fp, #-8]
    1890:	ldr	r0, [fp, #-12]
    1894:	movw	r1, #0
    1898:	movt	r1, #0
    189c:	movw	r2, #0
    18a0:	movt	r2, #0
    18a4:	movw	r3, #0
    18a8:	str	r3, [fp, #-32]	; 0xffffffe0
    18ac:	ldr	ip, [fp, #-32]	; 0xffffffe0
    18b0:	str	ip, [sp]
    18b4:	str	ip, [sp, #4]
    18b8:	movw	lr, #537	; 0x219
    18bc:	str	lr, [sp, #8]
    18c0:	bl	0 <test_json>
    18c4:	ldr	r1, [fp, #-8]
    18c8:	orr	r0, r1, r0
    18cc:	str	r0, [fp, #-8]
    18d0:	ldr	r0, [fp, #-12]
    18d4:	movw	r1, #0
    18d8:	movt	r1, #0
    18dc:	movw	r2, #0
    18e0:	movt	r2, #0
    18e4:	movw	r3, #0
    18e8:	str	r3, [fp, #-36]	; 0xffffffdc
    18ec:	ldr	ip, [fp, #-36]	; 0xffffffdc
    18f0:	str	ip, [sp]
    18f4:	str	ip, [sp, #4]
    18f8:	movw	lr, #540	; 0x21c
    18fc:	str	lr, [sp, #8]
    1900:	bl	0 <test_json>
    1904:	ldr	r1, [fp, #-8]
    1908:	orr	r0, r1, r0
    190c:	str	r0, [fp, #-8]
    1910:	ldr	r0, [fp, #-12]
    1914:	movw	r1, #0
    1918:	movt	r1, #0
    191c:	movw	r2, #0
    1920:	movt	r2, #0
    1924:	movw	r3, #0
    1928:	str	r3, [fp, #-40]	; 0xffffffd8
    192c:	ldr	ip, [fp, #-40]	; 0xffffffd8
    1930:	str	ip, [sp]
    1934:	str	ip, [sp, #4]
    1938:	movw	lr, #543	; 0x21f
    193c:	str	lr, [sp, #8]
    1940:	bl	0 <test_json>
    1944:	ldr	r1, [fp, #-8]
    1948:	orr	r0, r1, r0
    194c:	str	r0, [fp, #-8]
    1950:	ldr	r0, [fp, #-12]
    1954:	movw	r1, #0
    1958:	movt	r1, #0
    195c:	movw	r2, #0
    1960:	movt	r2, #0
    1964:	movw	r3, #0
    1968:	str	r3, [fp, #-44]	; 0xffffffd4
    196c:	ldr	ip, [fp, #-44]	; 0xffffffd4
    1970:	str	ip, [sp]
    1974:	str	ip, [sp, #4]
    1978:	movw	lr, #547	; 0x223
    197c:	str	lr, [sp, #8]
    1980:	bl	0 <test_json>
    1984:	ldr	r1, [fp, #-8]
    1988:	orr	r0, r1, r0
    198c:	str	r0, [fp, #-8]
    1990:	ldr	r0, [fp, #-12]
    1994:	movw	r1, #0
    1998:	movt	r1, #0
    199c:	movw	r2, #0
    19a0:	movt	r2, #0
    19a4:	movw	r3, #0
    19a8:	str	r3, [fp, #-48]	; 0xffffffd0
    19ac:	ldr	ip, [fp, #-48]	; 0xffffffd0
    19b0:	str	ip, [sp]
    19b4:	str	ip, [sp, #4]
    19b8:	movw	lr, #551	; 0x227
    19bc:	str	lr, [sp, #8]
    19c0:	bl	0 <test_json>
    19c4:	ldr	r1, [fp, #-8]
    19c8:	orr	r0, r1, r0
    19cc:	str	r0, [fp, #-8]
    19d0:	ldr	r0, [fp, #-12]
    19d4:	movw	r1, #0
    19d8:	movt	r1, #0
    19dc:	movw	r2, #0
    19e0:	movt	r2, #0
    19e4:	movw	r3, #0
    19e8:	str	r3, [fp, #-52]	; 0xffffffcc
    19ec:	ldr	ip, [fp, #-52]	; 0xffffffcc
    19f0:	str	ip, [sp]
    19f4:	str	ip, [sp, #4]
    19f8:	movw	lr, #555	; 0x22b
    19fc:	str	lr, [sp, #8]
    1a00:	bl	0 <test_json>
    1a04:	ldr	r1, [fp, #-8]
    1a08:	orr	r0, r1, r0
    1a0c:	str	r0, [fp, #-8]
    1a10:	ldr	r0, [fp, #-12]
    1a14:	movw	r1, #0
    1a18:	movt	r1, #0
    1a1c:	movw	r2, #0
    1a20:	movt	r2, #0
    1a24:	movw	r3, #0
    1a28:	str	r3, [fp, #-56]	; 0xffffffc8
    1a2c:	ldr	ip, [fp, #-56]	; 0xffffffc8
    1a30:	str	ip, [sp]
    1a34:	str	ip, [sp, #4]
    1a38:	movw	lr, #558	; 0x22e
    1a3c:	str	lr, [sp, #8]
    1a40:	bl	0 <test_json>
    1a44:	ldr	r1, [fp, #-8]
    1a48:	orr	r0, r1, r0
    1a4c:	str	r0, [fp, #-8]
    1a50:	ldr	r0, [fp, #-12]
    1a54:	movw	r1, #0
    1a58:	movt	r1, #0
    1a5c:	movw	r2, #0
    1a60:	movt	r2, #0
    1a64:	movw	r3, #0
    1a68:	str	r3, [fp, #-60]	; 0xffffffc4
    1a6c:	ldr	ip, [fp, #-60]	; 0xffffffc4
    1a70:	str	ip, [sp]
    1a74:	str	ip, [sp, #4]
    1a78:	movw	lr, #561	; 0x231
    1a7c:	str	lr, [sp, #8]
    1a80:	bl	0 <test_json>
    1a84:	ldr	r1, [fp, #-8]
    1a88:	orr	r0, r1, r0
    1a8c:	str	r0, [fp, #-8]
    1a90:	ldr	r0, [fp, #-12]
    1a94:	movw	r1, #0
    1a98:	movt	r1, #0
    1a9c:	movw	r2, #0
    1aa0:	movt	r2, #0
    1aa4:	movw	r3, #0
    1aa8:	str	r3, [fp, #-64]	; 0xffffffc0
    1aac:	ldr	ip, [fp, #-64]	; 0xffffffc0
    1ab0:	str	ip, [sp]
    1ab4:	str	ip, [sp, #4]
    1ab8:	movw	lr, #564	; 0x234
    1abc:	str	lr, [sp, #8]
    1ac0:	bl	0 <test_json>
    1ac4:	ldr	r1, [fp, #-8]
    1ac8:	orr	r0, r1, r0
    1acc:	str	r0, [fp, #-8]
    1ad0:	ldr	r0, [fp, #-12]
    1ad4:	movw	r1, #0
    1ad8:	movt	r1, #0
    1adc:	movw	r2, #0
    1ae0:	movt	r2, #0
    1ae4:	movw	r3, #0
    1ae8:	str	r3, [fp, #-68]	; 0xffffffbc
    1aec:	ldr	ip, [fp, #-68]	; 0xffffffbc
    1af0:	str	ip, [sp]
    1af4:	str	ip, [sp, #4]
    1af8:	movw	lr, #567	; 0x237
    1afc:	str	lr, [sp, #8]
    1b00:	bl	0 <test_json>
    1b04:	ldr	r1, [fp, #-8]
    1b08:	orr	r0, r1, r0
    1b0c:	str	r0, [fp, #-8]
    1b10:	ldr	r0, [fp, #-12]
    1b14:	movw	r1, #0
    1b18:	movt	r1, #0
    1b1c:	movw	r2, #0
    1b20:	movt	r2, #0
    1b24:	movw	r3, #0
    1b28:	str	r3, [fp, #-72]	; 0xffffffb8
    1b2c:	ldr	ip, [fp, #-72]	; 0xffffffb8
    1b30:	str	ip, [sp]
    1b34:	str	ip, [sp, #4]
    1b38:	movw	lr, #570	; 0x23a
    1b3c:	str	lr, [sp, #8]
    1b40:	bl	0 <test_json>
    1b44:	ldr	r1, [fp, #-8]
    1b48:	orr	r0, r1, r0
    1b4c:	str	r0, [fp, #-8]
    1b50:	ldr	r0, [fp, #-12]
    1b54:	movw	r1, #0
    1b58:	movt	r1, #0
    1b5c:	movw	r2, #0
    1b60:	movt	r2, #0
    1b64:	movw	r3, #0
    1b68:	str	r3, [fp, #-76]	; 0xffffffb4
    1b6c:	ldr	ip, [fp, #-76]	; 0xffffffb4
    1b70:	str	ip, [sp]
    1b74:	str	ip, [sp, #4]
    1b78:	movw	lr, #573	; 0x23d
    1b7c:	str	lr, [sp, #8]
    1b80:	bl	0 <test_json>
    1b84:	ldr	r1, [fp, #-8]
    1b88:	orr	r0, r1, r0
    1b8c:	str	r0, [fp, #-8]
    1b90:	ldr	r0, [fp, #-12]
    1b94:	movw	r1, #0
    1b98:	movt	r1, #0
    1b9c:	movw	r2, #0
    1ba0:	movt	r2, #0
    1ba4:	movw	r3, #0
    1ba8:	str	r3, [fp, #-80]	; 0xffffffb0
    1bac:	ldr	ip, [fp, #-80]	; 0xffffffb0
    1bb0:	str	ip, [sp]
    1bb4:	str	ip, [sp, #4]
    1bb8:	movw	lr, #577	; 0x241
    1bbc:	str	lr, [sp, #8]
    1bc0:	bl	0 <test_json>
    1bc4:	ldr	r1, [fp, #-8]
    1bc8:	orr	r0, r1, r0
    1bcc:	str	r0, [fp, #-8]
    1bd0:	ldr	r0, [fp, #-12]
    1bd4:	movw	r1, #0
    1bd8:	movt	r1, #0
    1bdc:	movw	r2, #0
    1be0:	movt	r2, #0
    1be4:	movw	r3, #0
    1be8:	str	r3, [fp, #-84]	; 0xffffffac
    1bec:	ldr	ip, [fp, #-84]	; 0xffffffac
    1bf0:	str	ip, [sp]
    1bf4:	str	ip, [sp, #4]
    1bf8:	movw	lr, #581	; 0x245
    1bfc:	str	lr, [sp, #8]
    1c00:	bl	0 <test_json>
    1c04:	ldr	r1, [fp, #-8]
    1c08:	orr	r0, r1, r0
    1c0c:	str	r0, [fp, #-8]
    1c10:	ldr	r0, [fp, #-12]
    1c14:	movw	r1, #0
    1c18:	movt	r1, #0
    1c1c:	movw	r2, #0
    1c20:	movt	r2, #0
    1c24:	movw	r3, #0
    1c28:	str	r3, [fp, #-88]	; 0xffffffa8
    1c2c:	ldr	ip, [fp, #-88]	; 0xffffffa8
    1c30:	str	ip, [sp]
    1c34:	str	ip, [sp, #4]
    1c38:	movw	lr, #601	; 0x259
    1c3c:	str	lr, [sp, #8]
    1c40:	bl	0 <test_json>
    1c44:	ldr	r1, [fp, #-8]
    1c48:	orr	r0, r1, r0
    1c4c:	str	r0, [fp, #-8]
    1c50:	ldr	r0, [fp, #-12]
    1c54:	movw	r1, #0
    1c58:	movt	r1, #0
    1c5c:	movw	r2, #0
    1c60:	movt	r2, #0
    1c64:	movw	r3, #0
    1c68:	str	r3, [fp, #-92]	; 0xffffffa4
    1c6c:	ldr	ip, [fp, #-92]	; 0xffffffa4
    1c70:	str	ip, [sp]
    1c74:	str	ip, [sp, #4]
    1c78:	movw	lr, #604	; 0x25c
    1c7c:	str	lr, [sp, #8]
    1c80:	bl	0 <test_json>
    1c84:	ldr	r1, [fp, #-8]
    1c88:	orr	r0, r1, r0
    1c8c:	str	r0, [fp, #-8]
    1c90:	ldr	r0, [fp, #-12]
    1c94:	movw	r1, #0
    1c98:	movt	r1, #0
    1c9c:	movw	r2, #0
    1ca0:	movt	r2, #0
    1ca4:	movw	r3, #0
    1ca8:	str	r3, [fp, #-96]	; 0xffffffa0
    1cac:	ldr	ip, [fp, #-96]	; 0xffffffa0
    1cb0:	str	ip, [sp]
    1cb4:	str	ip, [sp, #4]
    1cb8:	movw	lr, #607	; 0x25f
    1cbc:	str	lr, [sp, #8]
    1cc0:	bl	0 <test_json>
    1cc4:	ldr	r1, [fp, #-8]
    1cc8:	orr	r0, r1, r0
    1ccc:	str	r0, [fp, #-8]
    1cd0:	ldr	r0, [fp, #-12]
    1cd4:	movw	r1, #0
    1cd8:	movt	r1, #0
    1cdc:	movw	r2, #0
    1ce0:	movt	r2, #0
    1ce4:	movw	r3, #0
    1ce8:	str	r3, [fp, #-100]	; 0xffffff9c
    1cec:	ldr	ip, [fp, #-100]	; 0xffffff9c
    1cf0:	str	ip, [sp]
    1cf4:	str	ip, [sp, #4]
    1cf8:	movw	lr, #610	; 0x262
    1cfc:	str	lr, [sp, #8]
    1d00:	bl	0 <test_json>
    1d04:	ldr	r1, [fp, #-8]
    1d08:	orr	r0, r1, r0
    1d0c:	str	r0, [fp, #-8]
    1d10:	ldr	r0, [fp, #-12]
    1d14:	movw	r1, #0
    1d18:	movt	r1, #0
    1d1c:	movw	r2, #0
    1d20:	movt	r2, #0
    1d24:	movw	r3, #0
    1d28:	str	r3, [fp, #-104]	; 0xffffff98
    1d2c:	ldr	ip, [fp, #-104]	; 0xffffff98
    1d30:	str	ip, [sp]
    1d34:	str	ip, [sp, #4]
    1d38:	movw	lr, #613	; 0x265
    1d3c:	str	lr, [sp, #8]
    1d40:	bl	0 <test_json>
    1d44:	ldr	r1, [fp, #-8]
    1d48:	orr	r0, r1, r0
    1d4c:	str	r0, [fp, #-8]
    1d50:	ldr	r0, [fp, #-12]
    1d54:	movw	r1, #0
    1d58:	movt	r1, #0
    1d5c:	movw	r2, #0
    1d60:	movt	r2, #0
    1d64:	movw	r3, #0
    1d68:	str	r3, [fp, #-108]	; 0xffffff94
    1d6c:	ldr	ip, [fp, #-108]	; 0xffffff94
    1d70:	str	ip, [sp]
    1d74:	str	ip, [sp, #4]
    1d78:	movw	lr, #616	; 0x268
    1d7c:	str	lr, [sp, #8]
    1d80:	bl	0 <test_json>
    1d84:	ldr	r1, [fp, #-8]
    1d88:	orr	r0, r1, r0
    1d8c:	str	r0, [fp, #-8]
    1d90:	ldr	r0, [fp, #-12]
    1d94:	movw	r1, #0
    1d98:	movt	r1, #0
    1d9c:	movw	r2, #0
    1da0:	movt	r2, #0
    1da4:	movw	r3, #0
    1da8:	str	r3, [fp, #-112]	; 0xffffff90
    1dac:	ldr	ip, [fp, #-112]	; 0xffffff90
    1db0:	str	ip, [sp]
    1db4:	str	ip, [sp, #4]
    1db8:	movw	lr, #619	; 0x26b
    1dbc:	str	lr, [sp, #8]
    1dc0:	bl	0 <test_json>
    1dc4:	ldr	r1, [fp, #-8]
    1dc8:	orr	r0, r1, r0
    1dcc:	str	r0, [fp, #-8]
    1dd0:	ldr	r0, [fp, #-12]
    1dd4:	movw	r1, #0
    1dd8:	movt	r1, #0
    1ddc:	movw	r2, #0
    1de0:	movt	r2, #0
    1de4:	movw	r3, #0
    1de8:	str	r3, [fp, #-116]	; 0xffffff8c
    1dec:	ldr	ip, [fp, #-116]	; 0xffffff8c
    1df0:	str	ip, [sp]
    1df4:	str	ip, [sp, #4]
    1df8:	movw	lr, #622	; 0x26e
    1dfc:	str	lr, [sp, #8]
    1e00:	bl	0 <test_json>
    1e04:	ldr	r1, [fp, #-8]
    1e08:	orr	r0, r1, r0
    1e0c:	str	r0, [fp, #-8]
    1e10:	ldr	r0, [fp, #-12]
    1e14:	movw	r1, #0
    1e18:	movt	r1, #0
    1e1c:	movw	r2, #0
    1e20:	movt	r2, #0
    1e24:	movw	r3, #0
    1e28:	str	r3, [fp, #-120]	; 0xffffff88
    1e2c:	ldr	ip, [fp, #-120]	; 0xffffff88
    1e30:	str	ip, [sp]
    1e34:	str	ip, [sp, #4]
    1e38:	movw	lr, #625	; 0x271
    1e3c:	str	lr, [sp, #8]
    1e40:	bl	0 <test_json>
    1e44:	ldr	r1, [fp, #-8]
    1e48:	orr	r0, r1, r0
    1e4c:	str	r0, [fp, #-8]
    1e50:	ldr	r0, [fp, #-12]
    1e54:	movw	r1, #0
    1e58:	movt	r1, #0
    1e5c:	movw	r2, #0
    1e60:	movt	r2, #0
    1e64:	movw	r3, #0
    1e68:	str	r3, [fp, #-124]	; 0xffffff84
    1e6c:	ldr	ip, [fp, #-124]	; 0xffffff84
    1e70:	str	ip, [sp]
    1e74:	str	ip, [sp, #4]
    1e78:	movw	lr, #628	; 0x274
    1e7c:	str	lr, [sp, #8]
    1e80:	bl	0 <test_json>
    1e84:	ldr	r1, [fp, #-8]
    1e88:	orr	r0, r1, r0
    1e8c:	str	r0, [fp, #-8]
    1e90:	ldr	r0, [fp, #-12]
    1e94:	movw	r1, #0
    1e98:	movt	r1, #0
    1e9c:	movw	r2, #0
    1ea0:	movt	r2, #0
    1ea4:	movw	r3, #0
    1ea8:	str	r3, [fp, #-128]	; 0xffffff80
    1eac:	ldr	ip, [fp, #-128]	; 0xffffff80
    1eb0:	str	ip, [sp]
    1eb4:	str	ip, [sp, #4]
    1eb8:	movw	lr, #631	; 0x277
    1ebc:	str	lr, [sp, #8]
    1ec0:	bl	0 <test_json>
    1ec4:	ldr	r1, [fp, #-8]
    1ec8:	orr	r0, r1, r0
    1ecc:	str	r0, [fp, #-8]
    1ed0:	ldr	r0, [fp, #-12]
    1ed4:	movw	r1, #0
    1ed8:	movt	r1, #0
    1edc:	movw	r2, #0
    1ee0:	movt	r2, #0
    1ee4:	movw	r3, #0
    1ee8:	str	r3, [fp, #-132]	; 0xffffff7c
    1eec:	ldr	ip, [fp, #-132]	; 0xffffff7c
    1ef0:	str	ip, [sp]
    1ef4:	str	ip, [sp, #4]
    1ef8:	movw	lr, #634	; 0x27a
    1efc:	str	lr, [sp, #8]
    1f00:	bl	0 <test_json>
    1f04:	ldr	r1, [fp, #-8]
    1f08:	orr	r0, r1, r0
    1f0c:	str	r0, [fp, #-8]
    1f10:	ldr	r0, [fp, #-12]
    1f14:	movw	r1, #0
    1f18:	movt	r1, #0
    1f1c:	movw	r2, #0
    1f20:	movt	r2, #0
    1f24:	movw	r3, #0
    1f28:	str	r3, [fp, #-136]	; 0xffffff78
    1f2c:	ldr	ip, [fp, #-136]	; 0xffffff78
    1f30:	str	ip, [sp]
    1f34:	str	ip, [sp, #4]
    1f38:	movw	lr, #638	; 0x27e
    1f3c:	str	lr, [sp, #8]
    1f40:	bl	0 <test_json>
    1f44:	ldr	r1, [fp, #-8]
    1f48:	orr	r0, r1, r0
    1f4c:	str	r0, [fp, #-8]
    1f50:	ldr	r0, [fp, #-12]
    1f54:	movw	r1, #0
    1f58:	movt	r1, #0
    1f5c:	movw	r2, #0
    1f60:	movt	r2, #0
    1f64:	movw	r3, #0
    1f68:	str	r3, [sp, #140]	; 0x8c
    1f6c:	ldr	ip, [sp, #140]	; 0x8c
    1f70:	str	ip, [sp]
    1f74:	str	ip, [sp, #4]
    1f78:	movw	lr, #642	; 0x282
    1f7c:	str	lr, [sp, #8]
    1f80:	bl	0 <test_json>
    1f84:	ldr	r1, [fp, #-8]
    1f88:	orr	r0, r1, r0
    1f8c:	str	r0, [fp, #-8]
    1f90:	ldr	r0, [fp, #-12]
    1f94:	movw	r1, #0
    1f98:	movt	r1, #0
    1f9c:	movw	r2, #0
    1fa0:	movt	r2, #0
    1fa4:	movw	r3, #0
    1fa8:	str	r3, [sp, #136]	; 0x88
    1fac:	ldr	ip, [sp, #136]	; 0x88
    1fb0:	str	ip, [sp]
    1fb4:	str	ip, [sp, #4]
    1fb8:	movw	lr, #646	; 0x286
    1fbc:	str	lr, [sp, #8]
    1fc0:	bl	0 <test_json>
    1fc4:	ldr	r1, [fp, #-8]
    1fc8:	orr	r0, r1, r0
    1fcc:	str	r0, [fp, #-8]
    1fd0:	ldr	r0, [fp, #-12]
    1fd4:	movw	r1, #0
    1fd8:	movt	r1, #0
    1fdc:	movw	r2, #0
    1fe0:	movt	r2, #0
    1fe4:	movw	r3, #0
    1fe8:	str	r3, [sp, #132]	; 0x84
    1fec:	ldr	ip, [sp, #132]	; 0x84
    1ff0:	str	ip, [sp]
    1ff4:	str	ip, [sp, #4]
    1ff8:	movw	lr, #649	; 0x289
    1ffc:	str	lr, [sp, #8]
    2000:	bl	0 <test_json>
    2004:	ldr	r1, [fp, #-8]
    2008:	orr	r0, r1, r0
    200c:	str	r0, [fp, #-8]
    2010:	ldr	r0, [fp, #-12]
    2014:	movw	r1, #0
    2018:	movt	r1, #0
    201c:	movw	r2, #0
    2020:	movt	r2, #0
    2024:	movw	r3, #0
    2028:	str	r3, [sp, #128]	; 0x80
    202c:	ldr	ip, [sp, #128]	; 0x80
    2030:	str	ip, [sp]
    2034:	str	ip, [sp, #4]
    2038:	movw	lr, #653	; 0x28d
    203c:	str	lr, [sp, #8]
    2040:	bl	0 <test_json>
    2044:	ldr	r1, [fp, #-8]
    2048:	orr	r0, r1, r0
    204c:	str	r0, [fp, #-8]
    2050:	ldr	r0, [fp, #-12]
    2054:	movw	r1, #0
    2058:	movt	r1, #0
    205c:	movw	r2, #0
    2060:	movt	r2, #0
    2064:	movw	r3, #0
    2068:	str	r3, [sp, #124]	; 0x7c
    206c:	ldr	ip, [sp, #124]	; 0x7c
    2070:	str	ip, [sp]
    2074:	str	ip, [sp, #4]
    2078:	movw	lr, #656	; 0x290
    207c:	str	lr, [sp, #8]
    2080:	bl	0 <test_json>
    2084:	ldr	r1, [fp, #-8]
    2088:	orr	r0, r1, r0
    208c:	str	r0, [fp, #-8]
    2090:	ldr	r0, [fp, #-12]
    2094:	movw	r1, #0
    2098:	movt	r1, #0
    209c:	movw	r2, #0
    20a0:	movt	r2, #0
    20a4:	movw	r3, #0
    20a8:	str	r3, [sp, #120]	; 0x78
    20ac:	ldr	ip, [sp, #120]	; 0x78
    20b0:	str	ip, [sp]
    20b4:	str	ip, [sp, #4]
    20b8:	movw	lr, #659	; 0x293
    20bc:	str	lr, [sp, #8]
    20c0:	bl	0 <test_json>
    20c4:	ldr	r1, [fp, #-8]
    20c8:	orr	r0, r1, r0
    20cc:	str	r0, [fp, #-8]
    20d0:	ldr	r0, [fp, #-12]
    20d4:	movw	r1, #0
    20d8:	movt	r1, #0
    20dc:	movw	r2, #0
    20e0:	movt	r2, #0
    20e4:	movw	r3, #0
    20e8:	str	r3, [sp, #116]	; 0x74
    20ec:	ldr	ip, [sp, #116]	; 0x74
    20f0:	str	ip, [sp]
    20f4:	str	ip, [sp, #4]
    20f8:	movw	lr, #662	; 0x296
    20fc:	str	lr, [sp, #8]
    2100:	bl	0 <test_json>
    2104:	ldr	r1, [fp, #-8]
    2108:	orr	r0, r1, r0
    210c:	str	r0, [fp, #-8]
    2110:	ldr	r0, [fp, #-12]
    2114:	movw	r1, #0
    2118:	movt	r1, #0
    211c:	movw	r2, #0
    2120:	movt	r2, #0
    2124:	movw	r3, #0
    2128:	str	r3, [sp, #112]	; 0x70
    212c:	ldr	ip, [sp, #112]	; 0x70
    2130:	str	ip, [sp]
    2134:	str	ip, [sp, #4]
    2138:	movw	lr, #665	; 0x299
    213c:	str	lr, [sp, #8]
    2140:	bl	0 <test_json>
    2144:	ldr	r1, [fp, #-8]
    2148:	orr	r0, r1, r0
    214c:	str	r0, [fp, #-8]
    2150:	ldr	r0, [fp, #-12]
    2154:	movw	r1, #0
    2158:	movt	r1, #0
    215c:	movw	r2, #0
    2160:	movt	r2, #0
    2164:	movw	r3, #0
    2168:	str	r3, [sp, #108]	; 0x6c
    216c:	ldr	ip, [sp, #108]	; 0x6c
    2170:	str	ip, [sp]
    2174:	str	ip, [sp, #4]
    2178:	movw	lr, #668	; 0x29c
    217c:	str	lr, [sp, #8]
    2180:	bl	0 <test_json>
    2184:	ldr	r1, [fp, #-8]
    2188:	orr	r0, r1, r0
    218c:	str	r0, [fp, #-8]
    2190:	ldr	r0, [fp, #-12]
    2194:	movw	r1, #0
    2198:	movt	r1, #0
    219c:	movw	r2, #0
    21a0:	movt	r2, #0
    21a4:	movw	r3, #0
    21a8:	str	r3, [sp, #104]	; 0x68
    21ac:	ldr	ip, [sp, #104]	; 0x68
    21b0:	str	ip, [sp]
    21b4:	str	ip, [sp, #4]
    21b8:	movw	lr, #671	; 0x29f
    21bc:	str	lr, [sp, #8]
    21c0:	bl	0 <test_json>
    21c4:	ldr	r1, [fp, #-8]
    21c8:	orr	r0, r1, r0
    21cc:	str	r0, [fp, #-8]
    21d0:	ldr	r0, [fp, #-12]
    21d4:	movw	r1, #0
    21d8:	movt	r1, #0
    21dc:	movw	r2, #0
    21e0:	movt	r2, #0
    21e4:	movw	r3, #0
    21e8:	str	r3, [sp, #100]	; 0x64
    21ec:	ldr	ip, [sp, #100]	; 0x64
    21f0:	str	ip, [sp]
    21f4:	str	ip, [sp, #4]
    21f8:	movw	lr, #674	; 0x2a2
    21fc:	str	lr, [sp, #8]
    2200:	bl	0 <test_json>
    2204:	ldr	r1, [fp, #-8]
    2208:	orr	r0, r1, r0
    220c:	str	r0, [fp, #-8]
    2210:	ldr	r0, [fp, #-12]
    2214:	movw	r1, #0
    2218:	movt	r1, #0
    221c:	movw	r2, #0
    2220:	movt	r2, #0
    2224:	movw	r3, #0
    2228:	str	r3, [sp, #96]	; 0x60
    222c:	ldr	ip, [sp, #96]	; 0x60
    2230:	str	ip, [sp]
    2234:	str	ip, [sp, #4]
    2238:	movw	lr, #677	; 0x2a5
    223c:	str	lr, [sp, #8]
    2240:	bl	0 <test_json>
    2244:	ldr	r1, [fp, #-8]
    2248:	orr	r0, r1, r0
    224c:	str	r0, [fp, #-8]
    2250:	ldr	r0, [fp, #-12]
    2254:	movw	r1, #0
    2258:	movt	r1, #0
    225c:	movw	r2, #0
    2260:	movt	r2, #0
    2264:	movw	r3, #0
    2268:	str	r3, [sp, #92]	; 0x5c
    226c:	ldr	ip, [sp, #92]	; 0x5c
    2270:	str	ip, [sp]
    2274:	str	ip, [sp, #4]
    2278:	movw	lr, #680	; 0x2a8
    227c:	str	lr, [sp, #8]
    2280:	bl	0 <test_json>
    2284:	ldr	r1, [fp, #-8]
    2288:	orr	r0, r1, r0
    228c:	str	r0, [fp, #-8]
    2290:	ldr	r0, [fp, #-12]
    2294:	movw	r1, #0
    2298:	movt	r1, #0
    229c:	movw	r2, #0
    22a0:	movt	r2, #0
    22a4:	movw	r3, #0
    22a8:	str	r3, [sp, #88]	; 0x58
    22ac:	ldr	ip, [sp, #88]	; 0x58
    22b0:	str	ip, [sp]
    22b4:	str	ip, [sp, #4]
    22b8:	movw	lr, #683	; 0x2ab
    22bc:	str	lr, [sp, #8]
    22c0:	bl	0 <test_json>
    22c4:	ldr	r1, [fp, #-8]
    22c8:	orr	r0, r1, r0
    22cc:	str	r0, [fp, #-8]
    22d0:	ldr	r0, [fp, #-12]
    22d4:	movw	r1, #0
    22d8:	movt	r1, #0
    22dc:	movw	r2, #0
    22e0:	movt	r2, #0
    22e4:	movw	r3, #0
    22e8:	str	r3, [sp, #84]	; 0x54
    22ec:	ldr	ip, [sp, #84]	; 0x54
    22f0:	str	ip, [sp]
    22f4:	str	ip, [sp, #4]
    22f8:	movw	lr, #686	; 0x2ae
    22fc:	str	lr, [sp, #8]
    2300:	bl	0 <test_json>
    2304:	ldr	r1, [fp, #-8]
    2308:	orr	r0, r1, r0
    230c:	str	r0, [fp, #-8]
    2310:	ldr	r0, [fp, #-12]
    2314:	movw	r1, #0
    2318:	movt	r1, #0
    231c:	movw	r2, #0
    2320:	movt	r2, #0
    2324:	movw	r3, #0
    2328:	str	r3, [sp, #80]	; 0x50
    232c:	ldr	ip, [sp, #80]	; 0x50
    2330:	str	ip, [sp]
    2334:	str	ip, [sp, #4]
    2338:	movw	lr, #690	; 0x2b2
    233c:	str	lr, [sp, #8]
    2340:	bl	0 <test_json>
    2344:	ldr	r1, [fp, #-8]
    2348:	orr	r0, r1, r0
    234c:	str	r0, [fp, #-8]
    2350:	ldr	r0, [fp, #-12]
    2354:	movw	r1, #0
    2358:	movt	r1, #0
    235c:	movw	r2, #0
    2360:	movt	r2, #0
    2364:	movw	r3, #0
    2368:	str	r3, [sp, #76]	; 0x4c
    236c:	ldr	ip, [sp, #76]	; 0x4c
    2370:	str	ip, [sp]
    2374:	str	ip, [sp, #4]
    2378:	movw	lr, #694	; 0x2b6
    237c:	str	lr, [sp, #8]
    2380:	bl	0 <test_json>
    2384:	ldr	r1, [fp, #-8]
    2388:	orr	r0, r1, r0
    238c:	str	r0, [fp, #-8]
    2390:	ldr	r0, [fp, #-12]
    2394:	movw	r1, #0
    2398:	movt	r1, #0
    239c:	movw	r2, #0
    23a0:	movt	r2, #0
    23a4:	movw	r3, #0
    23a8:	str	r3, [sp, #72]	; 0x48
    23ac:	ldr	ip, [sp, #72]	; 0x48
    23b0:	str	ip, [sp]
    23b4:	str	ip, [sp, #4]
    23b8:	movw	lr, #698	; 0x2ba
    23bc:	str	lr, [sp, #8]
    23c0:	bl	0 <test_json>
    23c4:	ldr	r1, [fp, #-8]
    23c8:	orr	r0, r1, r0
    23cc:	str	r0, [fp, #-8]
    23d0:	ldr	r0, [fp, #-12]
    23d4:	movw	r1, #0
    23d8:	movt	r1, #0
    23dc:	movw	r2, #0
    23e0:	movt	r2, #0
    23e4:	movw	r3, #0
    23e8:	str	r3, [sp, #68]	; 0x44
    23ec:	ldr	ip, [sp, #68]	; 0x44
    23f0:	str	ip, [sp]
    23f4:	str	ip, [sp, #4]
    23f8:	movw	lr, #701	; 0x2bd
    23fc:	str	lr, [sp, #8]
    2400:	bl	0 <test_json>
    2404:	ldr	r1, [fp, #-8]
    2408:	orr	r0, r1, r0
    240c:	str	r0, [fp, #-8]
    2410:	ldr	r0, [fp, #-12]
    2414:	movw	r1, #0
    2418:	movt	r1, #0
    241c:	movw	r2, #0
    2420:	movt	r2, #0
    2424:	movw	r3, #0
    2428:	str	r3, [sp, #64]	; 0x40
    242c:	ldr	ip, [sp, #64]	; 0x40
    2430:	str	ip, [sp]
    2434:	str	ip, [sp, #4]
    2438:	movw	lr, #716	; 0x2cc
    243c:	str	lr, [sp, #8]
    2440:	bl	0 <test_json>
    2444:	ldr	r1, [fp, #-8]
    2448:	orr	r0, r1, r0
    244c:	str	r0, [fp, #-8]
    2450:	ldr	r0, [fp, #-12]
    2454:	movw	r1, #0
    2458:	movt	r1, #0
    245c:	movw	r2, #0
    2460:	movt	r2, #0
    2464:	movw	r3, #0
    2468:	str	r3, [sp, #60]	; 0x3c
    246c:	ldr	ip, [sp, #60]	; 0x3c
    2470:	str	ip, [sp]
    2474:	str	ip, [sp, #4]
    2478:	movw	lr, #731	; 0x2db
    247c:	str	lr, [sp, #8]
    2480:	bl	0 <test_json>
    2484:	ldr	r1, [fp, #-8]
    2488:	orr	r0, r1, r0
    248c:	str	r0, [fp, #-8]
    2490:	ldr	r0, [fp, #-12]
    2494:	movw	r1, #0
    2498:	movt	r1, #0
    249c:	movw	r2, #0
    24a0:	movt	r2, #0
    24a4:	movw	r3, #0
    24a8:	str	r3, [sp, #56]	; 0x38
    24ac:	ldr	ip, [sp, #56]	; 0x38
    24b0:	str	ip, [sp]
    24b4:	str	ip, [sp, #4]
    24b8:	movw	lr, #734	; 0x2de
    24bc:	str	lr, [sp, #8]
    24c0:	bl	0 <test_json>
    24c4:	ldr	r1, [fp, #-8]
    24c8:	orr	r0, r1, r0
    24cc:	str	r0, [fp, #-8]
    24d0:	ldr	r0, [fp, #-12]
    24d4:	movw	r1, #0
    24d8:	movt	r1, #0
    24dc:	movw	r2, #0
    24e0:	movt	r2, #0
    24e4:	movw	r3, #0
    24e8:	str	r3, [sp, #52]	; 0x34
    24ec:	ldr	ip, [sp, #52]	; 0x34
    24f0:	str	ip, [sp]
    24f4:	str	ip, [sp, #4]
    24f8:	movw	lr, #738	; 0x2e2
    24fc:	str	lr, [sp, #8]
    2500:	bl	0 <test_json>
    2504:	ldr	r1, [fp, #-8]
    2508:	orr	r0, r1, r0
    250c:	str	r0, [fp, #-8]
    2510:	ldr	r0, [fp, #-12]
    2514:	movw	r1, #0
    2518:	movt	r1, #0
    251c:	movw	r2, #0
    2520:	movt	r2, #0
    2524:	movw	r3, #0
    2528:	str	r3, [sp, #48]	; 0x30
    252c:	ldr	ip, [sp, #48]	; 0x30
    2530:	str	ip, [sp]
    2534:	str	ip, [sp, #4]
    2538:	movw	lr, #750	; 0x2ee
    253c:	str	lr, [sp, #8]
    2540:	bl	0 <test_json>
    2544:	ldr	r1, [fp, #-8]
    2548:	orr	r0, r1, r0
    254c:	str	r0, [fp, #-8]
    2550:	ldr	r0, [fp, #-12]
    2554:	movw	r1, #0
    2558:	movt	r1, #0
    255c:	movw	r2, #0
    2560:	movt	r2, #0
    2564:	movw	r3, #0
    2568:	str	r3, [sp, #44]	; 0x2c
    256c:	ldr	ip, [sp, #44]	; 0x2c
    2570:	str	ip, [sp]
    2574:	str	ip, [sp, #4]
    2578:	movw	lr, #766	; 0x2fe
    257c:	str	lr, [sp, #8]
    2580:	bl	0 <test_json>
    2584:	ldr	r1, [fp, #-8]
    2588:	orr	r0, r1, r0
    258c:	str	r0, [fp, #-8]
    2590:	ldr	r0, [fp, #-12]
    2594:	movw	r1, #0
    2598:	movt	r1, #0
    259c:	movw	r2, #0
    25a0:	movt	r2, #0
    25a4:	movw	r3, #0
    25a8:	str	r3, [sp, #40]	; 0x28
    25ac:	ldr	ip, [sp, #40]	; 0x28
    25b0:	str	ip, [sp]
    25b4:	str	ip, [sp, #4]
    25b8:	movw	lr, #770	; 0x302
    25bc:	str	lr, [sp, #8]
    25c0:	bl	0 <test_json>
    25c4:	ldr	r1, [fp, #-8]
    25c8:	orr	r0, r1, r0
    25cc:	str	r0, [fp, #-8]
    25d0:	ldr	r0, [fp, #-12]
    25d4:	movw	r1, #0
    25d8:	movt	r1, #0
    25dc:	movw	r2, #0
    25e0:	movt	r2, #0
    25e4:	movw	r3, #0
    25e8:	str	r3, [sp, #36]	; 0x24
    25ec:	ldr	ip, [sp, #36]	; 0x24
    25f0:	str	ip, [sp]
    25f4:	str	ip, [sp, #4]
    25f8:	movw	lr, #776	; 0x308
    25fc:	str	lr, [sp, #8]
    2600:	bl	0 <test_json>
    2604:	ldr	r1, [fp, #-8]
    2608:	orr	r0, r1, r0
    260c:	str	r0, [fp, #-8]
    2610:	ldr	r0, [fp, #-12]
    2614:	movw	r1, #0
    2618:	movt	r1, #0
    261c:	movw	r2, #0
    2620:	movt	r2, #0
    2624:	movw	r3, #0
    2628:	str	r3, [sp, #32]
    262c:	ldr	ip, [sp, #32]
    2630:	str	ip, [sp]
    2634:	str	ip, [sp, #4]
    2638:	movw	lr, #781	; 0x30d
    263c:	str	lr, [sp, #8]
    2640:	bl	0 <test_json>
    2644:	ldr	r1, [fp, #-8]
    2648:	orr	r0, r1, r0
    264c:	str	r0, [fp, #-8]
    2650:	ldr	r0, [fp, #-12]
    2654:	movw	r1, #0
    2658:	movt	r1, #0
    265c:	movw	r2, #0
    2660:	movt	r2, #0
    2664:	movw	r3, #0
    2668:	str	r3, [sp, #28]
    266c:	ldr	ip, [sp, #28]
    2670:	str	ip, [sp]
    2674:	str	ip, [sp, #4]
    2678:	movw	lr, #786	; 0x312
    267c:	str	lr, [sp, #8]
    2680:	bl	0 <test_json>
    2684:	ldr	r1, [fp, #-8]
    2688:	orr	r0, r1, r0
    268c:	str	r0, [fp, #-8]
    2690:	ldr	r0, [fp, #-12]
    2694:	movw	r1, #0
    2698:	movt	r1, #0
    269c:	movw	r2, #0
    26a0:	movt	r2, #0
    26a4:	movw	r3, #0
    26a8:	str	r3, [sp, #24]
    26ac:	ldr	ip, [sp, #24]
    26b0:	str	ip, [sp]
    26b4:	str	ip, [sp, #4]
    26b8:	movw	lr, #791	; 0x317
    26bc:	str	lr, [sp, #8]
    26c0:	bl	0 <test_json>
    26c4:	ldr	r1, [fp, #-8]
    26c8:	orr	r0, r1, r0
    26cc:	str	r0, [fp, #-8]
    26d0:	ldr	r0, [fp, #-12]
    26d4:	movw	r1, #0
    26d8:	movt	r1, #0
    26dc:	movw	r2, #0
    26e0:	movt	r2, #0
    26e4:	movw	r3, #0
    26e8:	str	r3, [sp, #20]
    26ec:	ldr	ip, [sp, #20]
    26f0:	str	ip, [sp]
    26f4:	str	ip, [sp, #4]
    26f8:	movw	lr, #796	; 0x31c
    26fc:	str	lr, [sp, #8]
    2700:	bl	0 <test_json>
    2704:	ldr	r1, [fp, #-8]
    2708:	orr	r0, r1, r0
    270c:	str	r0, [fp, #-8]
    2710:	ldr	r0, [fp, #-12]
    2714:	movw	r1, #0
    2718:	movt	r1, #0
    271c:	movw	r2, #0
    2720:	movt	r2, #0
    2724:	movw	r3, #0
    2728:	str	r3, [sp, #16]
    272c:	ldr	ip, [sp, #16]
    2730:	str	ip, [sp]
    2734:	str	ip, [sp, #4]
    2738:	movw	lr, #801	; 0x321
    273c:	str	lr, [sp, #8]
    2740:	bl	0 <test_json>
    2744:	ldr	r1, [fp, #-8]
    2748:	orr	r0, r1, r0
    274c:	str	r0, [fp, #-8]
    2750:	ldr	r0, [fp, #-12]
    2754:	movw	r1, #0
    2758:	movt	r1, #0
    275c:	movw	r2, #0
    2760:	movt	r2, #0
    2764:	movw	r3, #0
    2768:	str	r3, [sp, #12]
    276c:	ldr	ip, [sp, #12]
    2770:	str	ip, [sp]
    2774:	str	ip, [sp, #4]
    2778:	movw	lr, #806	; 0x326
    277c:	str	lr, [sp, #8]
    2780:	bl	0 <test_json>
    2784:	ldr	r1, [fp, #-8]
    2788:	orr	r0, r1, r0
    278c:	str	r0, [fp, #-8]
    2790:	ldr	r0, [fp, #-8]
    2794:	cmp	r0, #0
    2798:	movw	r0, #0
    279c:	movne	r0, #1
    27a0:	tst	r0, #1
    27a4:	mvn	r0, #0
    27a8:	moveq	r0, #0
    27ac:	mov	sp, fp
    27b0:	pop	{fp, pc}

000027b4 <flatcc_json_printer_set_indent>:
    27b4:	sub	sp, sp, #8
    27b8:	str	r0, [sp, #4]
    27bc:	strb	r1, [sp, #3]
    27c0:	ldrb	r0, [sp, #3]
    27c4:	ldr	r1, [sp, #4]
    27c8:	strb	r0, [r1, #25]
    27cc:	add	sp, sp, #8
    27d0:	bx	lr

000027d4 <flatcc_json_printer_set_nonstrict>:
    27d4:	push	{fp, lr}
    27d8:	mov	fp, sp
    27dc:	sub	sp, sp, #8
    27e0:	str	r0, [sp, #4]
    27e4:	ldr	r0, [sp, #4]
    27e8:	movw	r1, #2
    27ec:	and	r1, r1, #255	; 0xff
    27f0:	bl	27b4 <flatcc_json_printer_set_indent>
    27f4:	ldr	r0, [sp, #4]
    27f8:	movw	r1, #1
    27fc:	bl	2814 <flatcc_json_printer_set_unquoted>
    2800:	ldr	r0, [sp, #4]
    2804:	movw	r1, #0
    2808:	bl	2850 <flatcc_json_printer_set_noenum>
    280c:	mov	sp, fp
    2810:	pop	{fp, pc}

00002814 <flatcc_json_printer_set_unquoted>:
    2814:	sub	sp, sp, #8
    2818:	str	r0, [sp, #4]
    281c:	str	r1, [sp]
    2820:	ldr	r0, [sp]
    2824:	cmp	r0, #0
    2828:	movw	r0, #0
    282c:	movne	r0, #1
    2830:	mvn	r1, #0
    2834:	eor	r0, r0, r1
    2838:	eor	r0, r0, r1
    283c:	and	r0, r0, #1
    2840:	ldr	r1, [sp, #4]
    2844:	strb	r0, [r1, #26]
    2848:	add	sp, sp, #8
    284c:	bx	lr

00002850 <flatcc_json_printer_set_noenum>:
    2850:	sub	sp, sp, #8
    2854:	str	r0, [sp, #4]
    2858:	str	r1, [sp]
    285c:	ldr	r0, [sp]
    2860:	cmp	r0, #0
    2864:	movw	r0, #0
    2868:	movne	r0, #1
    286c:	mvn	r1, #0
    2870:	eor	r0, r0, r1
    2874:	eor	r0, r0, r1
    2878:	and	r0, r0, #1
    287c:	ldr	r1, [sp, #4]
    2880:	strb	r0, [r1, #27]
    2884:	add	sp, sp, #8
    2888:	bx	lr
    288c:	nop	{0}

00002890 <MyGame_Example_Monster_parse_json_table>:
    2890:	push	{fp, lr}
    2894:	mov	fp, sp
    2898:	sub	sp, sp, #192	; 0xc0
    289c:	str	r0, [fp, #-8]
    28a0:	str	r1, [fp, #-12]
    28a4:	str	r2, [fp, #-16]
    28a8:	str	r3, [fp, #-20]	; 0xffffffec
    28ac:	ldr	r0, [fp, #-20]	; 0xffffffec
    28b0:	movw	r1, #0
    28b4:	str	r1, [r0]
    28b8:	ldr	r0, [fp, #-8]
    28bc:	ldr	r0, [r0]
    28c0:	movw	r1, #36	; 0x24
    28c4:	bl	0 <flatcc_builder_start_table>
    28c8:	cmp	r0, #0
    28cc:	beq	28d4 <MyGame_Example_Monster_parse_json_table+0x44>
    28d0:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    28d4:	ldr	r0, [fp, #-16]
    28d8:	ldr	r1, [fp, #-8]
    28dc:	ldr	r2, [fp, #-12]
    28e0:	ldr	r3, [fp, #-16]
    28e4:	str	r0, [sp, #36]	; 0x24
    28e8:	mov	r0, r1
    28ec:	mov	r1, r2
    28f0:	mov	r2, r3
    28f4:	movw	r3, #1
    28f8:	sub	ip, fp, #52	; 0x34
    28fc:	str	ip, [sp]
    2900:	bl	0 <flatcc_json_parser_prepare_unions>
    2904:	ldr	r1, [sp, #36]	; 0x24
    2908:	cmp	r1, r0
    290c:	bne	2914 <MyGame_Example_Monster_parse_json_table+0x84>
    2910:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    2914:	ldr	r0, [fp, #-8]
    2918:	ldr	r1, [fp, #-12]
    291c:	ldr	r2, [fp, #-16]
    2920:	sub	r3, fp, #24
    2924:	bl	6fa0 <flatcc_json_parser_object_start>
    2928:	str	r0, [fp, #-12]
    292c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2930:	cmp	r0, #0
    2934:	beq	6144 <MyGame_Example_Monster_parse_json_table+0x38b4>
    2938:	ldr	r0, [fp, #-8]
    293c:	ldr	r1, [fp, #-12]
    2940:	ldr	r2, [fp, #-16]
    2944:	bl	7084 <flatcc_json_parser_symbol_start>
    2948:	str	r0, [fp, #-12]
    294c:	ldr	r0, [fp, #-12]
    2950:	ldr	r1, [fp, #-16]
    2954:	bl	7130 <flatcc_json_parser_symbol_part>
    2958:	str	r1, [fp, #-44]	; 0xffffffd4
    295c:	str	r0, [fp, #-48]	; 0xffffffd0
    2960:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2964:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2968:	movw	r2, #29280	; 0x7260
    296c:	movt	r2, #24946	; 0x6172
    2970:	subs	r0, r2, r0
    2974:	movw	r2, #29556	; 0x7374
    2978:	movt	r2, #29797	; 0x7465
    297c:	sbcs	r1, r2, r1
    2980:	bcc	3ae8 <MyGame_Example_Monster_parse_json_table+0x1258>
    2984:	b	2988 <MyGame_Example_Monster_parse_json_table+0xf8>
    2988:	ldr	r0, [fp, #-44]	; 0xffffffd4
    298c:	movw	r1, #28004	; 0x6d64
    2990:	movt	r1, #28257	; 0x6e61
    2994:	cmp	r0, r1
    2998:	bhi	32f8 <MyGame_Example_Monster_parse_json_table+0xa68>
    299c:	b	29a0 <MyGame_Example_Monster_parse_json_table+0x110>
    29a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    29a4:	movw	r1, #25975	; 0x6577
    29a8:	movt	r1, #26220	; 0x666c
    29ac:	cmp	r0, r1
    29b0:	bhi	2be8 <MyGame_Example_Monster_parse_json_table+0x358>
    29b4:	b	29b8 <MyGame_Example_Monster_parse_json_table+0x128>
    29b8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    29bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    29c0:	movw	r2, #25965	; 0x656d
    29c4:	movt	r2, #25966	; 0x656e
    29c8:	eor	r1, r1, r2
    29cc:	eor	r0, r0, #121	; 0x79
    29d0:	orr	r0, r1, r0, lsl #24
    29d4:	cmp	r0, #0
    29d8:	bne	2a7c <MyGame_Example_Monster_parse_json_table+0x1ec>
    29dc:	b	29e0 <MyGame_Example_Monster_parse_json_table+0x150>
    29e0:	ldr	r0, [fp, #-8]
    29e4:	ldr	r1, [fp, #-12]
    29e8:	str	r1, [fp, #-40]	; 0xffffffd8
    29ec:	ldr	r2, [fp, #-16]
    29f0:	movw	r3, #5
    29f4:	bl	7168 <flatcc_json_parser_match_symbol>
    29f8:	str	r0, [fp, #-12]
    29fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2a00:	ldr	r1, [fp, #-12]
    2a04:	cmp	r0, r1
    2a08:	beq	2a64 <MyGame_Example_Monster_parse_json_table+0x1d4>
    2a0c:	ldr	r0, [fp, #-8]
    2a10:	ldr	r1, [fp, #-12]
    2a14:	ldr	r2, [fp, #-16]
    2a18:	sub	r3, fp, #32
    2a1c:	bl	2890 <MyGame_Example_Monster_parse_json_table>
    2a20:	str	r0, [fp, #-12]
    2a24:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2a28:	cmp	r0, #0
    2a2c:	beq	2a50 <MyGame_Example_Monster_parse_json_table+0x1c0>
    2a30:	ldr	r0, [fp, #-8]
    2a34:	ldr	r0, [r0]
    2a38:	movw	r1, #12
    2a3c:	bl	0 <flatcc_builder_table_add_offset>
    2a40:	str	r0, [fp, #-36]	; 0xffffffdc
    2a44:	movw	r1, #0
    2a48:	cmp	r0, r1
    2a4c:	bne	2a54 <MyGame_Example_Monster_parse_json_table+0x1c4>
    2a50:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    2a54:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2a58:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2a5c:	str	r0, [r1]
    2a60:	b	2a78 <MyGame_Example_Monster_parse_json_table+0x1e8>
    2a64:	ldr	r0, [fp, #-8]
    2a68:	ldr	r1, [fp, #-12]
    2a6c:	ldr	r2, [fp, #-16]
    2a70:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2a74:	str	r0, [fp, #-12]
    2a78:	b	2be4 <MyGame_Example_Monster_parse_json_table+0x354>
    2a7c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    2a80:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2a84:	movw	r2, #27759	; 0x6c6f
    2a88:	movt	r2, #25455	; 0x636f
    2a8c:	eor	r1, r1, r2
    2a90:	eor	r0, r0, #114	; 0x72
    2a94:	orr	r0, r1, r0, lsl #24
    2a98:	cmp	r0, #0
    2a9c:	bne	2bcc <MyGame_Example_Monster_parse_json_table+0x33c>
    2aa0:	b	2aa4 <MyGame_Example_Monster_parse_json_table+0x214>
    2aa4:	ldr	r0, [fp, #-8]
    2aa8:	ldr	r1, [fp, #-12]
    2aac:	str	r1, [fp, #-40]	; 0xffffffd8
    2ab0:	ldr	r2, [fp, #-16]
    2ab4:	movw	r3, #5
    2ab8:	bl	7168 <flatcc_json_parser_match_symbol>
    2abc:	str	r0, [fp, #-12]
    2ac0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2ac4:	ldr	r1, [fp, #-12]
    2ac8:	cmp	r0, r1
    2acc:	beq	2bb4 <MyGame_Example_Monster_parse_json_table+0x324>
    2ad0:	movw	r0, #0
    2ad4:	strb	r0, [fp, #-53]	; 0xffffffcb
    2ad8:	ldr	r0, [fp, #-8]
    2adc:	ldr	r1, [fp, #-12]
    2ae0:	str	r1, [fp, #-40]	; 0xffffffd8
    2ae4:	ldr	r2, [fp, #-16]
    2ae8:	sub	r3, fp, #53	; 0x35
    2aec:	bl	8684 <flatcc_json_parser_int8>
    2af0:	str	r0, [fp, #-12]
    2af4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2af8:	ldr	r1, [fp, #-12]
    2afc:	cmp	r0, r1
    2b00:	bne	2b54 <MyGame_Example_Monster_parse_json_table+0x2c4>
    2b04:	ldr	r0, [fp, #-8]
    2b08:	ldr	r1, [fp, #-12]
    2b0c:	str	r1, [fp, #-40]	; 0xffffffd8
    2b10:	ldr	r2, [fp, #-16]
    2b14:	movw	r3, #0
    2b18:	movt	r3, #0
    2b1c:	sub	ip, fp, #53	; 0x35
    2b20:	str	ip, [sp]
    2b24:	bl	8760 <flatcc_json_parser_symbolic_int8>
    2b28:	str	r0, [fp, #-12]
    2b2c:	ldr	r0, [fp, #-12]
    2b30:	ldr	r1, [fp, #-40]	; 0xffffffd8
    2b34:	cmp	r0, r1
    2b38:	beq	2b4c <MyGame_Example_Monster_parse_json_table+0x2bc>
    2b3c:	ldr	r0, [fp, #-12]
    2b40:	ldr	r1, [fp, #-16]
    2b44:	cmp	r0, r1
    2b48:	bne	2b50 <MyGame_Example_Monster_parse_json_table+0x2c0>
    2b4c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    2b50:	b	2b54 <MyGame_Example_Monster_parse_json_table+0x2c4>
    2b54:	ldrsb	r0, [fp, #-53]	; 0xffffffcb
    2b58:	cmp	r0, #8
    2b5c:	bne	2b74 <MyGame_Example_Monster_parse_json_table+0x2e4>
    2b60:	ldr	r0, [fp, #-8]
    2b64:	ldr	r0, [r0, #8]
    2b68:	and	r0, r0, #2
    2b6c:	cmp	r0, #0
    2b70:	beq	2bb0 <MyGame_Example_Monster_parse_json_table+0x320>
    2b74:	ldr	r0, [fp, #-8]
    2b78:	ldr	r0, [r0]
    2b7c:	movw	r1, #6
    2b80:	movw	r2, #1
    2b84:	movw	r3, #1
    2b88:	uxth	r3, r3
    2b8c:	bl	0 <flatcc_builder_table_add>
    2b90:	str	r0, [fp, #-28]	; 0xffffffe4
    2b94:	movw	r1, #0
    2b98:	cmp	r0, r1
    2b9c:	bne	2ba4 <MyGame_Example_Monster_parse_json_table+0x314>
    2ba0:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    2ba4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2ba8:	ldrsb	r1, [fp, #-53]	; 0xffffffcb
    2bac:	bl	898c <flatbuffers_int8_write_to_pe>
    2bb0:	b	2bc8 <MyGame_Example_Monster_parse_json_table+0x338>
    2bb4:	ldr	r0, [fp, #-8]
    2bb8:	ldr	r1, [fp, #-12]
    2bbc:	ldr	r2, [fp, #-16]
    2bc0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2bc4:	str	r0, [fp, #-12]
    2bc8:	b	2be0 <MyGame_Example_Monster_parse_json_table+0x350>
    2bcc:	ldr	r0, [fp, #-8]
    2bd0:	ldr	r1, [fp, #-12]
    2bd4:	ldr	r2, [fp, #-16]
    2bd8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2bdc:	str	r0, [fp, #-12]
    2be0:	b	2be4 <MyGame_Example_Monster_parse_json_table+0x354>
    2be4:	b	32f4 <MyGame_Example_Monster_parse_json_table+0xa64>
    2be8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2bec:	movw	r1, #65535	; 0xffff
    2bf0:	movt	r1, #26735	; 0x686f
    2bf4:	cmp	r0, r1
    2bf8:	bhi	2de0 <MyGame_Example_Monster_parse_json_table+0x550>
    2bfc:	b	2c00 <MyGame_Example_Monster_parse_json_table+0x370>
    2c00:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2c04:	movw	r1, #25976	; 0x6578
    2c08:	movt	r1, #26220	; 0x666c
    2c0c:	teq	r0, r1
    2c10:	bne	2dc8 <MyGame_Example_Monster_parse_json_table+0x538>
    2c14:	b	2c18 <MyGame_Example_Monster_parse_json_table+0x388>
    2c18:	ldr	r0, [fp, #-8]
    2c1c:	ldr	r1, [fp, #-12]
    2c20:	str	r1, [fp, #-40]	; 0xffffffd8
    2c24:	ldr	r2, [fp, #-16]
    2c28:	movw	r3, #4
    2c2c:	bl	7168 <flatcc_json_parser_match_symbol>
    2c30:	str	r0, [fp, #-12]
    2c34:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2c38:	ldr	r1, [fp, #-12]
    2c3c:	cmp	r0, r1
    2c40:	beq	2db0 <MyGame_Example_Monster_parse_json_table+0x520>
    2c44:	ldr	r0, [fp, #-8]
    2c48:	ldr	r0, [r0]
    2c4c:	movw	r1, #1
    2c50:	movw	r2, #1
    2c54:	uxth	r2, r2
    2c58:	mvn	r3, #0
    2c5c:	bl	0 <flatcc_builder_start_vector>
    2c60:	cmp	r0, #0
    2c64:	beq	2c6c <MyGame_Example_Monster_parse_json_table+0x3dc>
    2c68:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    2c6c:	ldr	r0, [fp, #-8]
    2c70:	ldr	r1, [fp, #-12]
    2c74:	ldr	r2, [fp, #-16]
    2c78:	sub	r3, fp, #24
    2c7c:	bl	89b8 <flatcc_json_parser_array_start>
    2c80:	str	r0, [fp, #-12]
    2c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c88:	cmp	r0, #0
    2c8c:	beq	2d60 <MyGame_Example_Monster_parse_json_table+0x4d0>
    2c90:	movw	r0, #0
    2c94:	strb	r0, [fp, #-54]	; 0xffffffca
    2c98:	ldr	r0, [fp, #-8]
    2c9c:	ldr	r0, [r0]
    2ca0:	movw	r1, #1
    2ca4:	bl	0 <flatcc_builder_extend_vector>
    2ca8:	str	r0, [fp, #-28]	; 0xffffffe4
    2cac:	movw	r1, #0
    2cb0:	cmp	r0, r1
    2cb4:	bne	2cbc <MyGame_Example_Monster_parse_json_table+0x42c>
    2cb8:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    2cbc:	ldr	r0, [fp, #-8]
    2cc0:	ldr	r1, [fp, #-12]
    2cc4:	str	r1, [fp, #-40]	; 0xffffffd8
    2cc8:	ldr	r2, [fp, #-16]
    2ccc:	sub	r3, fp, #54	; 0x36
    2cd0:	bl	8a9c <flatcc_json_parser_uint8>
    2cd4:	str	r0, [fp, #-12]
    2cd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2cdc:	ldr	r1, [fp, #-12]
    2ce0:	cmp	r0, r1
    2ce4:	bne	2d38 <MyGame_Example_Monster_parse_json_table+0x4a8>
    2ce8:	ldr	r0, [fp, #-8]
    2cec:	ldr	r1, [fp, #-12]
    2cf0:	str	r1, [fp, #-40]	; 0xffffffd8
    2cf4:	ldr	r2, [fp, #-16]
    2cf8:	movw	r3, #0
    2cfc:	movt	r3, #0
    2d00:	sub	ip, fp, #54	; 0x36
    2d04:	str	ip, [sp]
    2d08:	bl	8b78 <flatcc_json_parser_symbolic_uint8>
    2d0c:	str	r0, [fp, #-12]
    2d10:	ldr	r0, [fp, #-12]
    2d14:	ldr	r1, [fp, #-40]	; 0xffffffd8
    2d18:	cmp	r0, r1
    2d1c:	beq	2d30 <MyGame_Example_Monster_parse_json_table+0x4a0>
    2d20:	ldr	r0, [fp, #-12]
    2d24:	ldr	r1, [fp, #-16]
    2d28:	cmp	r0, r1
    2d2c:	bne	2d34 <MyGame_Example_Monster_parse_json_table+0x4a4>
    2d30:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    2d34:	b	2d38 <MyGame_Example_Monster_parse_json_table+0x4a8>
    2d38:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2d3c:	ldrb	r1, [fp, #-54]	; 0xffffffca
    2d40:	bl	8da4 <flatbuffers_uint8_write_to_pe>
    2d44:	ldr	r0, [fp, #-8]
    2d48:	ldr	r1, [fp, #-12]
    2d4c:	ldr	r2, [fp, #-16]
    2d50:	sub	r3, fp, #24
    2d54:	bl	8dd0 <flatcc_json_parser_array_end>
    2d58:	str	r0, [fp, #-12]
    2d5c:	b	2c84 <MyGame_Example_Monster_parse_json_table+0x3f4>
    2d60:	ldr	r0, [fp, #-8]
    2d64:	ldr	r0, [r0]
    2d68:	bl	0 <flatcc_builder_end_vector>
    2d6c:	str	r0, [fp, #-32]	; 0xffffffe0
    2d70:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2d74:	cmp	r0, #0
    2d78:	beq	2d9c <MyGame_Example_Monster_parse_json_table+0x50c>
    2d7c:	ldr	r0, [fp, #-8]
    2d80:	ldr	r0, [r0]
    2d84:	movw	r1, #30
    2d88:	bl	0 <flatcc_builder_table_add_offset>
    2d8c:	str	r0, [fp, #-36]	; 0xffffffdc
    2d90:	movw	r1, #0
    2d94:	cmp	r0, r1
    2d98:	bne	2da0 <MyGame_Example_Monster_parse_json_table+0x510>
    2d9c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    2da0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2da4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2da8:	str	r0, [r1]
    2dac:	b	2dc4 <MyGame_Example_Monster_parse_json_table+0x534>
    2db0:	ldr	r0, [fp, #-8]
    2db4:	ldr	r1, [fp, #-12]
    2db8:	ldr	r2, [fp, #-16]
    2dbc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2dc0:	str	r0, [fp, #-12]
    2dc4:	b	2ddc <MyGame_Example_Monster_parse_json_table+0x54c>
    2dc8:	ldr	r0, [fp, #-8]
    2dcc:	ldr	r1, [fp, #-12]
    2dd0:	ldr	r2, [fp, #-16]
    2dd4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2dd8:	str	r0, [fp, #-12]
    2ddc:	b	32f0 <MyGame_Example_Monster_parse_json_table+0xa60>
    2de0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2de4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2de8:	movw	r2, #28529	; 0x6f71
    2dec:	movt	r2, #28276	; 0x6e74
    2df0:	subs	r0, r2, r0
    2df4:	movw	r2, #30309	; 0x7665
    2df8:	movt	r2, #26990	; 0x696e
    2dfc:	sbcs	r1, r2, r1
    2e00:	bcc	2f64 <MyGame_Example_Monster_parse_json_table+0x6d4>
    2e04:	b	2e08 <MyGame_Example_Monster_parse_json_table+0x578>
    2e08:	ldrh	r0, [fp, #-42]	; 0xffffffd6
    2e0c:	movw	r1, #0
    2e10:	movt	r1, #26736	; 0x6870
    2e14:	teq	r1, r0, lsl #16
    2e18:	bne	2f4c <MyGame_Example_Monster_parse_json_table+0x6bc>
    2e1c:	b	2e20 <MyGame_Example_Monster_parse_json_table+0x590>
    2e20:	ldr	r0, [fp, #-8]
    2e24:	ldr	r1, [fp, #-12]
    2e28:	str	r1, [fp, #-40]	; 0xffffffd8
    2e2c:	ldr	r2, [fp, #-16]
    2e30:	movw	r3, #2
    2e34:	bl	7168 <flatcc_json_parser_match_symbol>
    2e38:	str	r0, [fp, #-12]
    2e3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2e40:	ldr	r1, [fp, #-12]
    2e44:	cmp	r0, r1
    2e48:	beq	2f34 <MyGame_Example_Monster_parse_json_table+0x6a4>
    2e4c:	movw	r0, #0
    2e50:	strh	r0, [fp, #-56]	; 0xffffffc8
    2e54:	ldr	r0, [fp, #-8]
    2e58:	ldr	r1, [fp, #-12]
    2e5c:	str	r1, [fp, #-40]	; 0xffffffd8
    2e60:	ldr	r2, [fp, #-16]
    2e64:	sub	r3, fp, #56	; 0x38
    2e68:	bl	8f34 <flatcc_json_parser_int16>
    2e6c:	str	r0, [fp, #-12]
    2e70:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2e74:	ldr	r1, [fp, #-12]
    2e78:	cmp	r0, r1
    2e7c:	bne	2ed0 <MyGame_Example_Monster_parse_json_table+0x640>
    2e80:	ldr	r0, [fp, #-8]
    2e84:	ldr	r1, [fp, #-12]
    2e88:	str	r1, [fp, #-40]	; 0xffffffd8
    2e8c:	ldr	r2, [fp, #-16]
    2e90:	movw	r3, #0
    2e94:	movt	r3, #0
    2e98:	sub	ip, fp, #56	; 0x38
    2e9c:	str	ip, [sp]
    2ea0:	bl	9010 <flatcc_json_parser_symbolic_int16>
    2ea4:	str	r0, [fp, #-12]
    2ea8:	ldr	r0, [fp, #-12]
    2eac:	ldr	r1, [fp, #-40]	; 0xffffffd8
    2eb0:	cmp	r0, r1
    2eb4:	beq	2ec8 <MyGame_Example_Monster_parse_json_table+0x638>
    2eb8:	ldr	r0, [fp, #-12]
    2ebc:	ldr	r1, [fp, #-16]
    2ec0:	cmp	r0, r1
    2ec4:	bne	2ecc <MyGame_Example_Monster_parse_json_table+0x63c>
    2ec8:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    2ecc:	b	2ed0 <MyGame_Example_Monster_parse_json_table+0x640>
    2ed0:	ldrsh	r0, [fp, #-56]	; 0xffffffc8
    2ed4:	cmp	r0, #100	; 0x64
    2ed8:	bne	2ef0 <MyGame_Example_Monster_parse_json_table+0x660>
    2edc:	ldr	r0, [fp, #-8]
    2ee0:	ldr	r0, [r0, #8]
    2ee4:	and	r0, r0, #2
    2ee8:	cmp	r0, #0
    2eec:	beq	2f30 <MyGame_Example_Monster_parse_json_table+0x6a0>
    2ef0:	ldr	r0, [fp, #-8]
    2ef4:	ldr	r0, [r0]
    2ef8:	movw	r1, #2
    2efc:	str	r1, [sp, #32]
    2f00:	ldr	r2, [sp, #32]
    2f04:	movw	r3, #2
    2f08:	uxth	r3, r3
    2f0c:	bl	0 <flatcc_builder_table_add>
    2f10:	str	r0, [fp, #-28]	; 0xffffffe4
    2f14:	movw	r1, #0
    2f18:	cmp	r0, r1
    2f1c:	bne	2f24 <MyGame_Example_Monster_parse_json_table+0x694>
    2f20:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    2f24:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2f28:	ldrsh	r1, [fp, #-56]	; 0xffffffc8
    2f2c:	bl	923c <flatbuffers_int16_write_to_pe>
    2f30:	b	2f48 <MyGame_Example_Monster_parse_json_table+0x6b8>
    2f34:	ldr	r0, [fp, #-8]
    2f38:	ldr	r1, [fp, #-12]
    2f3c:	ldr	r2, [fp, #-16]
    2f40:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2f44:	str	r0, [fp, #-12]
    2f48:	b	2f60 <MyGame_Example_Monster_parse_json_table+0x6d0>
    2f4c:	ldr	r0, [fp, #-8]
    2f50:	ldr	r1, [fp, #-12]
    2f54:	ldr	r2, [fp, #-16]
    2f58:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2f5c:	str	r0, [fp, #-12]
    2f60:	b	32ec <MyGame_Example_Monster_parse_json_table+0xa5c>
    2f64:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2f68:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2f6c:	movw	r2, #30309	; 0x7665
    2f70:	movt	r2, #26990	; 0x696e
    2f74:	eor	r1, r1, r2
    2f78:	movw	r2, #28530	; 0x6f72
    2f7c:	movt	r2, #28276	; 0x6e74
    2f80:	eor	r0, r0, r2
    2f84:	orr	r0, r0, r1
    2f88:	cmp	r0, #0
    2f8c:	bne	3190 <MyGame_Example_Monster_parse_json_table+0x900>
    2f90:	b	2f94 <MyGame_Example_Monster_parse_json_table+0x704>
    2f94:	ldr	r0, [fp, #-12]
    2f98:	add	r0, r0, #8
    2f9c:	str	r0, [fp, #-12]
    2fa0:	ldr	r0, [fp, #-12]
    2fa4:	ldr	r1, [fp, #-16]
    2fa8:	bl	7130 <flatcc_json_parser_symbol_part>
    2fac:	str	r1, [fp, #-44]	; 0xffffffd4
    2fb0:	str	r0, [fp, #-48]	; 0xffffffd0
    2fb4:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    2fb8:	mov	r1, #2030043136	; 0x79000000
    2fbc:	teq	r1, r0, lsl #24
    2fc0:	bne	3178 <MyGame_Example_Monster_parse_json_table+0x8e8>
    2fc4:	b	2fc8 <MyGame_Example_Monster_parse_json_table+0x738>
    2fc8:	ldr	r0, [fp, #-8]
    2fcc:	ldr	r1, [fp, #-12]
    2fd0:	str	r1, [fp, #-40]	; 0xffffffd8
    2fd4:	ldr	r2, [fp, #-16]
    2fd8:	movw	r3, #1
    2fdc:	bl	7168 <flatcc_json_parser_match_symbol>
    2fe0:	str	r0, [fp, #-12]
    2fe4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2fe8:	ldr	r1, [fp, #-12]
    2fec:	cmp	r0, r1
    2ff0:	beq	3160 <MyGame_Example_Monster_parse_json_table+0x8d0>
    2ff4:	ldr	r0, [fp, #-8]
    2ff8:	ldr	r0, [r0]
    2ffc:	movw	r1, #1
    3000:	movw	r2, #1
    3004:	uxth	r2, r2
    3008:	mvn	r3, #0
    300c:	bl	0 <flatcc_builder_start_vector>
    3010:	cmp	r0, #0
    3014:	beq	301c <MyGame_Example_Monster_parse_json_table+0x78c>
    3018:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    301c:	ldr	r0, [fp, #-8]
    3020:	ldr	r1, [fp, #-12]
    3024:	ldr	r2, [fp, #-16]
    3028:	sub	r3, fp, #24
    302c:	bl	89b8 <flatcc_json_parser_array_start>
    3030:	str	r0, [fp, #-12]
    3034:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3038:	cmp	r0, #0
    303c:	beq	3110 <MyGame_Example_Monster_parse_json_table+0x880>
    3040:	movw	r0, #0
    3044:	strb	r0, [fp, #-57]	; 0xffffffc7
    3048:	ldr	r0, [fp, #-8]
    304c:	ldr	r0, [r0]
    3050:	movw	r1, #1
    3054:	bl	0 <flatcc_builder_extend_vector>
    3058:	str	r0, [fp, #-28]	; 0xffffffe4
    305c:	movw	r1, #0
    3060:	cmp	r0, r1
    3064:	bne	306c <MyGame_Example_Monster_parse_json_table+0x7dc>
    3068:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    306c:	ldr	r0, [fp, #-8]
    3070:	ldr	r1, [fp, #-12]
    3074:	str	r1, [fp, #-40]	; 0xffffffd8
    3078:	ldr	r2, [fp, #-16]
    307c:	sub	r3, fp, #57	; 0x39
    3080:	bl	8a9c <flatcc_json_parser_uint8>
    3084:	str	r0, [fp, #-12]
    3088:	ldr	r0, [fp, #-40]	; 0xffffffd8
    308c:	ldr	r1, [fp, #-12]
    3090:	cmp	r0, r1
    3094:	bne	30e8 <MyGame_Example_Monster_parse_json_table+0x858>
    3098:	ldr	r0, [fp, #-8]
    309c:	ldr	r1, [fp, #-12]
    30a0:	str	r1, [fp, #-40]	; 0xffffffd8
    30a4:	ldr	r2, [fp, #-16]
    30a8:	movw	r3, #0
    30ac:	movt	r3, #0
    30b0:	sub	ip, fp, #57	; 0x39
    30b4:	str	ip, [sp]
    30b8:	bl	8b78 <flatcc_json_parser_symbolic_uint8>
    30bc:	str	r0, [fp, #-12]
    30c0:	ldr	r0, [fp, #-12]
    30c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    30c8:	cmp	r0, r1
    30cc:	beq	30e0 <MyGame_Example_Monster_parse_json_table+0x850>
    30d0:	ldr	r0, [fp, #-12]
    30d4:	ldr	r1, [fp, #-16]
    30d8:	cmp	r0, r1
    30dc:	bne	30e4 <MyGame_Example_Monster_parse_json_table+0x854>
    30e0:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    30e4:	b	30e8 <MyGame_Example_Monster_parse_json_table+0x858>
    30e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    30ec:	ldrb	r1, [fp, #-57]	; 0xffffffc7
    30f0:	bl	8da4 <flatbuffers_uint8_write_to_pe>
    30f4:	ldr	r0, [fp, #-8]
    30f8:	ldr	r1, [fp, #-12]
    30fc:	ldr	r2, [fp, #-16]
    3100:	sub	r3, fp, #24
    3104:	bl	8dd0 <flatcc_json_parser_array_end>
    3108:	str	r0, [fp, #-12]
    310c:	b	3034 <MyGame_Example_Monster_parse_json_table+0x7a4>
    3110:	ldr	r0, [fp, #-8]
    3114:	ldr	r0, [r0]
    3118:	bl	0 <flatcc_builder_end_vector>
    311c:	str	r0, [fp, #-32]	; 0xffffffe0
    3120:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3124:	cmp	r0, #0
    3128:	beq	314c <MyGame_Example_Monster_parse_json_table+0x8bc>
    312c:	ldr	r0, [fp, #-8]
    3130:	ldr	r0, [r0]
    3134:	movw	r1, #5
    3138:	bl	0 <flatcc_builder_table_add_offset>
    313c:	str	r0, [fp, #-36]	; 0xffffffdc
    3140:	movw	r1, #0
    3144:	cmp	r0, r1
    3148:	bne	3150 <MyGame_Example_Monster_parse_json_table+0x8c0>
    314c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    3150:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3154:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3158:	str	r0, [r1]
    315c:	b	3174 <MyGame_Example_Monster_parse_json_table+0x8e4>
    3160:	ldr	r0, [fp, #-8]
    3164:	ldr	r1, [fp, #-12]
    3168:	ldr	r2, [fp, #-16]
    316c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3170:	str	r0, [fp, #-12]
    3174:	b	318c <MyGame_Example_Monster_parse_json_table+0x8fc>
    3178:	ldr	r0, [fp, #-8]
    317c:	ldr	r1, [fp, #-12]
    3180:	ldr	r2, [fp, #-16]
    3184:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3188:	str	r0, [fp, #-12]
    318c:	b	32e8 <MyGame_Example_Monster_parse_json_table+0xa58>
    3190:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3194:	movw	r1, #28257	; 0x6e61
    3198:	movt	r1, #28001	; 0x6d61
    319c:	teq	r0, r1
    31a0:	bne	32d0 <MyGame_Example_Monster_parse_json_table+0xa40>
    31a4:	b	31a8 <MyGame_Example_Monster_parse_json_table+0x918>
    31a8:	ldr	r0, [fp, #-8]
    31ac:	ldr	r1, [fp, #-12]
    31b0:	str	r1, [fp, #-40]	; 0xffffffd8
    31b4:	ldr	r2, [fp, #-16]
    31b8:	movw	r3, #4
    31bc:	bl	7168 <flatcc_json_parser_match_symbol>
    31c0:	str	r0, [fp, #-12]
    31c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    31c8:	ldr	r1, [fp, #-12]
    31cc:	cmp	r0, r1
    31d0:	beq	32b8 <MyGame_Example_Monster_parse_json_table+0xa28>
    31d4:	movw	r0, #0
    31d8:	strh	r0, [fp, #-60]	; 0xffffffc4
    31dc:	ldr	r0, [fp, #-8]
    31e0:	ldr	r1, [fp, #-12]
    31e4:	str	r1, [fp, #-40]	; 0xffffffd8
    31e8:	ldr	r2, [fp, #-16]
    31ec:	sub	r3, fp, #60	; 0x3c
    31f0:	bl	8f34 <flatcc_json_parser_int16>
    31f4:	str	r0, [fp, #-12]
    31f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    31fc:	ldr	r1, [fp, #-12]
    3200:	cmp	r0, r1
    3204:	bne	3258 <MyGame_Example_Monster_parse_json_table+0x9c8>
    3208:	ldr	r0, [fp, #-8]
    320c:	ldr	r1, [fp, #-12]
    3210:	str	r1, [fp, #-40]	; 0xffffffd8
    3214:	ldr	r2, [fp, #-16]
    3218:	movw	r3, #0
    321c:	movt	r3, #0
    3220:	sub	ip, fp, #60	; 0x3c
    3224:	str	ip, [sp]
    3228:	bl	9010 <flatcc_json_parser_symbolic_int16>
    322c:	str	r0, [fp, #-12]
    3230:	ldr	r0, [fp, #-12]
    3234:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3238:	cmp	r0, r1
    323c:	beq	3250 <MyGame_Example_Monster_parse_json_table+0x9c0>
    3240:	ldr	r0, [fp, #-12]
    3244:	ldr	r1, [fp, #-16]
    3248:	cmp	r0, r1
    324c:	bne	3254 <MyGame_Example_Monster_parse_json_table+0x9c4>
    3250:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    3254:	b	3258 <MyGame_Example_Monster_parse_json_table+0x9c8>
    3258:	ldrsh	r0, [fp, #-60]	; 0xffffffc4
    325c:	cmp	r0, #150	; 0x96
    3260:	bne	3278 <MyGame_Example_Monster_parse_json_table+0x9e8>
    3264:	ldr	r0, [fp, #-8]
    3268:	ldr	r0, [r0, #8]
    326c:	and	r0, r0, #2
    3270:	cmp	r0, #0
    3274:	beq	32b4 <MyGame_Example_Monster_parse_json_table+0xa24>
    3278:	ldr	r0, [fp, #-8]
    327c:	ldr	r0, [r0]
    3280:	movw	r1, #1
    3284:	movw	r2, #2
    3288:	movw	r3, #2
    328c:	uxth	r3, r3
    3290:	bl	0 <flatcc_builder_table_add>
    3294:	str	r0, [fp, #-28]	; 0xffffffe4
    3298:	movw	r1, #0
    329c:	cmp	r0, r1
    32a0:	bne	32a8 <MyGame_Example_Monster_parse_json_table+0xa18>
    32a4:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    32a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    32ac:	ldrsh	r1, [fp, #-60]	; 0xffffffc4
    32b0:	bl	923c <flatbuffers_int16_write_to_pe>
    32b4:	b	32cc <MyGame_Example_Monster_parse_json_table+0xa3c>
    32b8:	ldr	r0, [fp, #-8]
    32bc:	ldr	r1, [fp, #-12]
    32c0:	ldr	r2, [fp, #-16]
    32c4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    32c8:	str	r0, [fp, #-12]
    32cc:	b	32e4 <MyGame_Example_Monster_parse_json_table+0xa54>
    32d0:	ldr	r0, [fp, #-8]
    32d4:	ldr	r1, [fp, #-12]
    32d8:	ldr	r2, [fp, #-16]
    32dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    32e0:	str	r0, [fp, #-12]
    32e4:	b	32e8 <MyGame_Example_Monster_parse_json_table+0xa58>
    32e8:	b	32ec <MyGame_Example_Monster_parse_json_table+0xa5c>
    32ec:	b	32f0 <MyGame_Example_Monster_parse_json_table+0xa60>
    32f0:	b	32f4 <MyGame_Example_Monster_parse_json_table+0xa64>
    32f4:	b	3ae4 <MyGame_Example_Monster_parse_json_table+0x1254>
    32f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    32fc:	movw	r1, #29555	; 0x7373
    3300:	movt	r1, #29797	; 0x7465
    3304:	cmp	r0, r1
    3308:	bhi	3664 <MyGame_Example_Monster_parse_json_table+0xdd4>
    330c:	b	3310 <MyGame_Example_Monster_parse_json_table+0xa80>
    3310:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3314:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3318:	movw	r2, #24429	; 0x5f6d
    331c:	movt	r2, #28276	; 0x6e74
    3320:	subs	r0, r2, r0
    3324:	movw	r2, #29285	; 0x7265
    3328:	movt	r2, #28769	; 0x7061
    332c:	sbcs	r1, r2, r1
    3330:	bcc	3404 <MyGame_Example_Monster_parse_json_table+0xb74>
    3334:	b	3338 <MyGame_Example_Monster_parse_json_table+0xaa8>
    3338:	ldr	r0, [fp, #-44]	; 0xffffffd4
    333c:	movw	r1, #28005	; 0x6d65
    3340:	movt	r1, #28257	; 0x6e61
    3344:	teq	r0, r1
    3348:	bne	33ec <MyGame_Example_Monster_parse_json_table+0xb5c>
    334c:	b	3350 <MyGame_Example_Monster_parse_json_table+0xac0>
    3350:	ldr	r0, [fp, #-8]
    3354:	ldr	r1, [fp, #-12]
    3358:	str	r1, [fp, #-40]	; 0xffffffd8
    335c:	ldr	r2, [fp, #-16]
    3360:	movw	r3, #4
    3364:	bl	7168 <flatcc_json_parser_match_symbol>
    3368:	str	r0, [fp, #-12]
    336c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3370:	ldr	r1, [fp, #-12]
    3374:	cmp	r0, r1
    3378:	beq	33d4 <MyGame_Example_Monster_parse_json_table+0xb44>
    337c:	ldr	r0, [fp, #-8]
    3380:	ldr	r1, [fp, #-12]
    3384:	ldr	r2, [fp, #-16]
    3388:	sub	r3, fp, #32
    338c:	bl	0 <flatcc_json_parser_build_string>
    3390:	str	r0, [fp, #-12]
    3394:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3398:	cmp	r0, #0
    339c:	beq	33c0 <MyGame_Example_Monster_parse_json_table+0xb30>
    33a0:	ldr	r0, [fp, #-8]
    33a4:	ldr	r0, [r0]
    33a8:	movw	r1, #3
    33ac:	bl	0 <flatcc_builder_table_add_offset>
    33b0:	str	r0, [fp, #-36]	; 0xffffffdc
    33b4:	movw	r1, #0
    33b8:	cmp	r0, r1
    33bc:	bne	33c4 <MyGame_Example_Monster_parse_json_table+0xb34>
    33c0:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    33c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    33c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    33cc:	str	r0, [r1]
    33d0:	b	33e8 <MyGame_Example_Monster_parse_json_table+0xb58>
    33d4:	ldr	r0, [fp, #-8]
    33d8:	ldr	r1, [fp, #-12]
    33dc:	ldr	r2, [fp, #-16]
    33e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    33e4:	str	r0, [fp, #-12]
    33e8:	b	3400 <MyGame_Example_Monster_parse_json_table+0xb70>
    33ec:	ldr	r0, [fp, #-8]
    33f0:	ldr	r1, [fp, #-12]
    33f4:	ldr	r2, [fp, #-16]
    33f8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    33fc:	str	r0, [fp, #-12]
    3400:	b	3660 <MyGame_Example_Monster_parse_json_table+0xdd0>
    3404:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3408:	ldr	r1, [fp, #-44]	; 0xffffffd4
    340c:	movw	r2, #29285	; 0x7265
    3410:	movt	r2, #28769	; 0x7061
    3414:	eor	r1, r1, r2
    3418:	movw	r2, #24430	; 0x5f6e
    341c:	movt	r2, #28276	; 0x6e74
    3420:	eor	r0, r0, r2
    3424:	orr	r0, r0, r1
    3428:	cmp	r0, #0
    342c:	bne	3598 <MyGame_Example_Monster_parse_json_table+0xd08>
    3430:	b	3434 <MyGame_Example_Monster_parse_json_table+0xba4>
    3434:	ldr	r0, [fp, #-12]
    3438:	add	r0, r0, #8
    343c:	str	r0, [fp, #-12]
    3440:	ldr	r0, [fp, #-12]
    3444:	ldr	r1, [fp, #-16]
    3448:	bl	7130 <flatcc_json_parser_symbol_part>
    344c:	str	r1, [fp, #-44]	; 0xffffffd4
    3450:	str	r0, [fp, #-48]	; 0xffffffd0
    3454:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3458:	ldr	r1, [fp, #-44]	; 0xffffffd4
    345c:	movw	r2, #25971	; 0x6573
    3460:	movt	r2, #24941	; 0x616d
    3464:	eor	r1, r1, r2
    3468:	movw	r2, #25445	; 0x6365
    346c:	movt	r2, #28769	; 0x7061
    3470:	eor	r0, r0, r2
    3474:	orr	r0, r0, r1
    3478:	cmp	r0, #0
    347c:	bne	3580 <MyGame_Example_Monster_parse_json_table+0xcf0>
    3480:	b	3484 <MyGame_Example_Monster_parse_json_table+0xbf4>
    3484:	ldr	r0, [fp, #-12]
    3488:	add	r0, r0, #8
    348c:	str	r0, [fp, #-12]
    3490:	ldr	r0, [fp, #-12]
    3494:	ldr	r1, [fp, #-16]
    3498:	bl	7130 <flatcc_json_parser_symbol_part>
    349c:	str	r1, [fp, #-44]	; 0xffffffd4
    34a0:	str	r0, [fp, #-48]	; 0xffffffd0
    34a4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    34a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    34ac:	movw	r2, #25971	; 0x6573
    34b0:	movt	r2, #24436	; 0x5f74
    34b4:	eor	r1, r1, r2
    34b8:	eor	r0, r0, #116	; 0x74
    34bc:	orr	r0, r1, r0, lsl #24
    34c0:	cmp	r0, #0
    34c4:	bne	3568 <MyGame_Example_Monster_parse_json_table+0xcd8>
    34c8:	b	34cc <MyGame_Example_Monster_parse_json_table+0xc3c>
    34cc:	ldr	r0, [fp, #-8]
    34d0:	ldr	r1, [fp, #-12]
    34d4:	str	r1, [fp, #-40]	; 0xffffffd8
    34d8:	ldr	r2, [fp, #-16]
    34dc:	movw	r3, #5
    34e0:	bl	7168 <flatcc_json_parser_match_symbol>
    34e4:	str	r0, [fp, #-12]
    34e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    34ec:	ldr	r1, [fp, #-12]
    34f0:	cmp	r0, r1
    34f4:	beq	3550 <MyGame_Example_Monster_parse_json_table+0xcc0>
    34f8:	ldr	r0, [fp, #-8]
    34fc:	ldr	r1, [fp, #-12]
    3500:	ldr	r2, [fp, #-16]
    3504:	sub	r3, fp, #32
    3508:	bl	9268 <MyGame_InParentNamespace_parse_json_table>
    350c:	str	r0, [fp, #-12]
    3510:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3514:	cmp	r0, #0
    3518:	beq	353c <MyGame_Example_Monster_parse_json_table+0xcac>
    351c:	ldr	r0, [fp, #-8]
    3520:	ldr	r0, [r0]
    3524:	movw	r1, #34	; 0x22
    3528:	bl	0 <flatcc_builder_table_add_offset>
    352c:	str	r0, [fp, #-36]	; 0xffffffdc
    3530:	movw	r1, #0
    3534:	cmp	r0, r1
    3538:	bne	3540 <MyGame_Example_Monster_parse_json_table+0xcb0>
    353c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    3540:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3544:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3548:	str	r0, [r1]
    354c:	b	3564 <MyGame_Example_Monster_parse_json_table+0xcd4>
    3550:	ldr	r0, [fp, #-8]
    3554:	ldr	r1, [fp, #-12]
    3558:	ldr	r2, [fp, #-16]
    355c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3560:	str	r0, [fp, #-12]
    3564:	b	357c <MyGame_Example_Monster_parse_json_table+0xcec>
    3568:	ldr	r0, [fp, #-8]
    356c:	ldr	r1, [fp, #-12]
    3570:	ldr	r2, [fp, #-16]
    3574:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3578:	str	r0, [fp, #-12]
    357c:	b	3594 <MyGame_Example_Monster_parse_json_table+0xd04>
    3580:	ldr	r0, [fp, #-8]
    3584:	ldr	r1, [fp, #-12]
    3588:	ldr	r2, [fp, #-16]
    358c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3590:	str	r0, [fp, #-12]
    3594:	b	365c <MyGame_Example_Monster_parse_json_table+0xdcc>
    3598:	ldr	r0, [fp, #-44]	; 0xffffffd4
    359c:	bic	r0, r0, #255	; 0xff
    35a0:	movw	r1, #29440	; 0x7300
    35a4:	movt	r1, #28783	; 0x706f
    35a8:	teq	r0, r1
    35ac:	bne	3644 <MyGame_Example_Monster_parse_json_table+0xdb4>
    35b0:	b	35b4 <MyGame_Example_Monster_parse_json_table+0xd24>
    35b4:	ldr	r0, [fp, #-8]
    35b8:	ldr	r1, [fp, #-12]
    35bc:	str	r1, [fp, #-40]	; 0xffffffd8
    35c0:	ldr	r2, [fp, #-16]
    35c4:	movw	r3, #3
    35c8:	bl	7168 <flatcc_json_parser_match_symbol>
    35cc:	str	r0, [fp, #-12]
    35d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    35d4:	ldr	r1, [fp, #-12]
    35d8:	cmp	r0, r1
    35dc:	beq	362c <MyGame_Example_Monster_parse_json_table+0xd9c>
    35e0:	ldr	r0, [fp, #-8]
    35e4:	ldr	r0, [r0]
    35e8:	movw	r1, #0
    35ec:	movw	r2, #32
    35f0:	movw	r3, #16
    35f4:	uxth	r3, r3
    35f8:	bl	0 <flatcc_builder_table_add>
    35fc:	str	r0, [fp, #-28]	; 0xffffffe4
    3600:	movw	r1, #0
    3604:	cmp	r0, r1
    3608:	bne	3610 <MyGame_Example_Monster_parse_json_table+0xd80>
    360c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    3610:	ldr	r0, [fp, #-8]
    3614:	ldr	r1, [fp, #-12]
    3618:	ldr	r2, [fp, #-16]
    361c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3620:	bl	9378 <MyGame_Example_Vec3_parse_json_struct_inline>
    3624:	str	r0, [fp, #-12]
    3628:	b	3640 <MyGame_Example_Monster_parse_json_table+0xdb0>
    362c:	ldr	r0, [fp, #-8]
    3630:	ldr	r1, [fp, #-12]
    3634:	ldr	r2, [fp, #-16]
    3638:	bl	0 <flatcc_json_parser_unmatched_symbol>
    363c:	str	r0, [fp, #-12]
    3640:	b	3658 <MyGame_Example_Monster_parse_json_table+0xdc8>
    3644:	ldr	r0, [fp, #-8]
    3648:	ldr	r1, [fp, #-12]
    364c:	ldr	r2, [fp, #-16]
    3650:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3654:	str	r0, [fp, #-12]
    3658:	b	365c <MyGame_Example_Monster_parse_json_table+0xdcc>
    365c:	b	3660 <MyGame_Example_Monster_parse_json_table+0xdd0>
    3660:	b	3ae0 <MyGame_Example_Monster_parse_json_table+0x1250>
    3664:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    3668:	ldr	r1, [fp, #-44]	; 0xffffffd4
    366c:	movw	r2, #29556	; 0x7374
    3670:	movt	r2, #29797	; 0x7465
    3674:	eor	r1, r1, r2
    3678:	eor	r0, r0, #52	; 0x34
    367c:	orr	r0, r1, r0, lsl #24
    3680:	cmp	r0, #0
    3684:	bne	37b4 <MyGame_Example_Monster_parse_json_table+0xf24>
    3688:	b	368c <MyGame_Example_Monster_parse_json_table+0xdfc>
    368c:	ldr	r0, [fp, #-8]
    3690:	ldr	r1, [fp, #-12]
    3694:	str	r1, [fp, #-40]	; 0xffffffd8
    3698:	ldr	r2, [fp, #-16]
    369c:	movw	r3, #5
    36a0:	bl	7168 <flatcc_json_parser_match_symbol>
    36a4:	str	r0, [fp, #-12]
    36a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    36ac:	ldr	r1, [fp, #-12]
    36b0:	cmp	r0, r1
    36b4:	beq	37ac <MyGame_Example_Monster_parse_json_table+0xf1c>
    36b8:	ldr	r3, [pc, #4092]	; 46bc <MyGame_Example_Monster_parse_json_table+0x1e2c>
    36bc:	ldr	r0, [fp, #-8]
    36c0:	ldr	r0, [r0]
    36c4:	movw	r1, #4
    36c8:	movw	r2, #2
    36cc:	uxth	r2, r2
    36d0:	bl	0 <flatcc_builder_start_vector>
    36d4:	cmp	r0, #0
    36d8:	beq	36e0 <MyGame_Example_Monster_parse_json_table+0xe50>
    36dc:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    36e0:	ldr	r0, [fp, #-8]
    36e4:	ldr	r1, [fp, #-12]
    36e8:	ldr	r2, [fp, #-16]
    36ec:	sub	r3, fp, #24
    36f0:	bl	89b8 <flatcc_json_parser_array_start>
    36f4:	str	r0, [fp, #-12]
    36f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    36fc:	cmp	r0, #0
    3700:	beq	375c <MyGame_Example_Monster_parse_json_table+0xecc>
    3704:	ldr	r0, [fp, #-8]
    3708:	ldr	r0, [r0]
    370c:	movw	r1, #1
    3710:	bl	0 <flatcc_builder_extend_vector>
    3714:	str	r0, [fp, #-28]	; 0xffffffe4
    3718:	movw	r1, #0
    371c:	cmp	r0, r1
    3720:	bne	3728 <MyGame_Example_Monster_parse_json_table+0xe98>
    3724:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    3728:	ldr	r0, [fp, #-8]
    372c:	ldr	r1, [fp, #-12]
    3730:	ldr	r2, [fp, #-16]
    3734:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3738:	bl	9a80 <MyGame_Example_Test_parse_json_struct_inline>
    373c:	str	r0, [fp, #-12]
    3740:	ldr	r0, [fp, #-8]
    3744:	ldr	r1, [fp, #-12]
    3748:	ldr	r2, [fp, #-16]
    374c:	sub	r3, fp, #24
    3750:	bl	8dd0 <flatcc_json_parser_array_end>
    3754:	str	r0, [fp, #-12]
    3758:	b	36f8 <MyGame_Example_Monster_parse_json_table+0xe68>
    375c:	ldr	r0, [fp, #-8]
    3760:	ldr	r0, [r0]
    3764:	bl	0 <flatcc_builder_end_vector>
    3768:	str	r0, [fp, #-32]	; 0xffffffe0
    376c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3770:	cmp	r0, #0
    3774:	beq	3798 <MyGame_Example_Monster_parse_json_table+0xf08>
    3778:	ldr	r0, [fp, #-8]
    377c:	ldr	r0, [r0]
    3780:	movw	r1, #9
    3784:	bl	0 <flatcc_builder_table_add_offset>
    3788:	str	r0, [fp, #-36]	; 0xffffffdc
    378c:	movw	r1, #0
    3790:	cmp	r0, r1
    3794:	bne	379c <MyGame_Example_Monster_parse_json_table+0xf0c>
    3798:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    379c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    37a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    37a4:	str	r0, [r1]
    37a8:	b	37b0 <MyGame_Example_Monster_parse_json_table+0xf20>
    37ac:	b	3854 <MyGame_Example_Monster_parse_json_table+0xfc4>
    37b0:	b	3850 <MyGame_Example_Monster_parse_json_table+0xfc0>
    37b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    37b8:	movw	r1, #29556	; 0x7374
    37bc:	movt	r1, #29797	; 0x7465
    37c0:	teq	r0, r1
    37c4:	bne	3848 <MyGame_Example_Monster_parse_json_table+0xfb8>
    37c8:	b	37cc <MyGame_Example_Monster_parse_json_table+0xf3c>
    37cc:	ldr	r0, [fp, #-8]
    37d0:	ldr	r1, [fp, #-12]
    37d4:	str	r1, [fp, #-40]	; 0xffffffd8
    37d8:	ldr	r2, [fp, #-16]
    37dc:	movw	r3, #4
    37e0:	bl	7168 <flatcc_json_parser_match_symbol>
    37e4:	str	r0, [fp, #-12]
    37e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    37ec:	ldr	r1, [fp, #-12]
    37f0:	cmp	r0, r1
    37f4:	beq	3840 <MyGame_Example_Monster_parse_json_table+0xfb0>
    37f8:	ldr	r0, [fp, #-8]
    37fc:	ldr	r1, [fp, #-12]
    3800:	ldr	r2, [fp, #-16]
    3804:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3808:	movw	ip, #0
    380c:	str	r3, [sp, #28]
    3810:	mov	r3, ip
    3814:	movw	ip, #8
    3818:	uxth	ip, ip
    381c:	str	ip, [sp]
    3820:	ldr	ip, [sp, #28]
    3824:	str	ip, [sp, #4]
    3828:	movw	lr, #0
    382c:	movt	lr, #0
    3830:	str	lr, [sp, #8]
    3834:	bl	0 <flatcc_json_parser_union>
    3838:	str	r0, [fp, #-12]
    383c:	b	3844 <MyGame_Example_Monster_parse_json_table+0xfb4>
    3840:	b	3854 <MyGame_Example_Monster_parse_json_table+0xfc4>
    3844:	b	384c <MyGame_Example_Monster_parse_json_table+0xfbc>
    3848:	b	3854 <MyGame_Example_Monster_parse_json_table+0xfc4>
    384c:	b	3850 <MyGame_Example_Monster_parse_json_table+0xfc0>
    3850:	b	3adc <MyGame_Example_Monster_parse_json_table+0x124c>
    3854:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    3858:	ldr	r1, [fp, #-44]	; 0xffffffd4
    385c:	movw	r2, #29556	; 0x7374
    3860:	movt	r2, #29797	; 0x7465
    3864:	eor	r1, r1, r2
    3868:	eor	r0, r0, #53	; 0x35
    386c:	orr	r0, r1, r0, lsl #24
    3870:	cmp	r0, #0
    3874:	bne	39a4 <MyGame_Example_Monster_parse_json_table+0x1114>
    3878:	b	387c <MyGame_Example_Monster_parse_json_table+0xfec>
    387c:	ldr	r0, [fp, #-8]
    3880:	ldr	r1, [fp, #-12]
    3884:	str	r1, [fp, #-40]	; 0xffffffd8
    3888:	ldr	r2, [fp, #-16]
    388c:	movw	r3, #5
    3890:	bl	7168 <flatcc_json_parser_match_symbol>
    3894:	str	r0, [fp, #-12]
    3898:	ldr	r0, [fp, #-40]	; 0xffffffd8
    389c:	ldr	r1, [fp, #-12]
    38a0:	cmp	r0, r1
    38a4:	beq	399c <MyGame_Example_Monster_parse_json_table+0x110c>
    38a8:	ldr	r3, [pc, #3596]	; 46bc <MyGame_Example_Monster_parse_json_table+0x1e2c>
    38ac:	ldr	r0, [fp, #-8]
    38b0:	ldr	r0, [r0]
    38b4:	movw	r1, #4
    38b8:	movw	r2, #2
    38bc:	uxth	r2, r2
    38c0:	bl	0 <flatcc_builder_start_vector>
    38c4:	cmp	r0, #0
    38c8:	beq	38d0 <MyGame_Example_Monster_parse_json_table+0x1040>
    38cc:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    38d0:	ldr	r0, [fp, #-8]
    38d4:	ldr	r1, [fp, #-12]
    38d8:	ldr	r2, [fp, #-16]
    38dc:	sub	r3, fp, #24
    38e0:	bl	89b8 <flatcc_json_parser_array_start>
    38e4:	str	r0, [fp, #-12]
    38e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    38ec:	cmp	r0, #0
    38f0:	beq	394c <MyGame_Example_Monster_parse_json_table+0x10bc>
    38f4:	ldr	r0, [fp, #-8]
    38f8:	ldr	r0, [r0]
    38fc:	movw	r1, #1
    3900:	bl	0 <flatcc_builder_extend_vector>
    3904:	str	r0, [fp, #-28]	; 0xffffffe4
    3908:	movw	r1, #0
    390c:	cmp	r0, r1
    3910:	bne	3918 <MyGame_Example_Monster_parse_json_table+0x1088>
    3914:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    3918:	ldr	r0, [fp, #-8]
    391c:	ldr	r1, [fp, #-12]
    3920:	ldr	r2, [fp, #-16]
    3924:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3928:	bl	9a80 <MyGame_Example_Test_parse_json_struct_inline>
    392c:	str	r0, [fp, #-12]
    3930:	ldr	r0, [fp, #-8]
    3934:	ldr	r1, [fp, #-12]
    3938:	ldr	r2, [fp, #-16]
    393c:	sub	r3, fp, #24
    3940:	bl	8dd0 <flatcc_json_parser_array_end>
    3944:	str	r0, [fp, #-12]
    3948:	b	38e8 <MyGame_Example_Monster_parse_json_table+0x1058>
    394c:	ldr	r0, [fp, #-8]
    3950:	ldr	r0, [r0]
    3954:	bl	0 <flatcc_builder_end_vector>
    3958:	str	r0, [fp, #-32]	; 0xffffffe0
    395c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3960:	cmp	r0, #0
    3964:	beq	3988 <MyGame_Example_Monster_parse_json_table+0x10f8>
    3968:	ldr	r0, [fp, #-8]
    396c:	ldr	r0, [r0]
    3970:	movw	r1, #31
    3974:	bl	0 <flatcc_builder_table_add_offset>
    3978:	str	r0, [fp, #-36]	; 0xffffffdc
    397c:	movw	r1, #0
    3980:	cmp	r0, r1
    3984:	bne	398c <MyGame_Example_Monster_parse_json_table+0x10fc>
    3988:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    398c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3990:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3994:	str	r0, [r1]
    3998:	b	39a0 <MyGame_Example_Monster_parse_json_table+0x1110>
    399c:	b	39ac <MyGame_Example_Monster_parse_json_table+0x111c>
    39a0:	b	39a8 <MyGame_Example_Monster_parse_json_table+0x1118>
    39a4:	b	39ac <MyGame_Example_Monster_parse_json_table+0x111c>
    39a8:	b	3ad8 <MyGame_Example_Monster_parse_json_table+0x1248>
    39ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    39b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    39b4:	movw	r2, #29556	; 0x7374
    39b8:	movt	r2, #29797	; 0x7465
    39bc:	eor	r1, r1, r2
    39c0:	movw	r2, #31088	; 0x7970
    39c4:	movt	r2, #24436	; 0x5f74
    39c8:	eor	r0, r0, r2
    39cc:	orr	r0, r0, r1
    39d0:	cmp	r0, #0
    39d4:	bne	3ac0 <MyGame_Example_Monster_parse_json_table+0x1230>
    39d8:	b	39dc <MyGame_Example_Monster_parse_json_table+0x114c>
    39dc:	ldr	r0, [fp, #-12]
    39e0:	add	r0, r0, #8
    39e4:	str	r0, [fp, #-12]
    39e8:	ldr	r0, [fp, #-12]
    39ec:	ldr	r1, [fp, #-16]
    39f0:	bl	7130 <flatcc_json_parser_symbol_part>
    39f4:	str	r1, [fp, #-44]	; 0xffffffd4
    39f8:	str	r0, [fp, #-48]	; 0xffffffd0
    39fc:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    3a00:	mov	r1, #1694498816	; 0x65000000
    3a04:	teq	r1, r0, lsl #24
    3a08:	bne	3aa8 <MyGame_Example_Monster_parse_json_table+0x1218>
    3a0c:	b	3a10 <MyGame_Example_Monster_parse_json_table+0x1180>
    3a10:	ldr	r0, [fp, #-8]
    3a14:	ldr	r1, [fp, #-12]
    3a18:	str	r1, [fp, #-40]	; 0xffffffd8
    3a1c:	ldr	r2, [fp, #-16]
    3a20:	movw	r3, #1
    3a24:	bl	7168 <flatcc_json_parser_match_symbol>
    3a28:	str	r0, [fp, #-12]
    3a2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3a30:	ldr	r1, [fp, #-12]
    3a34:	cmp	r0, r1
    3a38:	beq	3a90 <MyGame_Example_Monster_parse_json_table+0x1200>
    3a3c:	ldr	r0, [fp, #-8]
    3a40:	ldr	r1, [fp, #-12]
    3a44:	ldr	r2, [fp, #-16]
    3a48:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3a4c:	movw	ip, #0
    3a50:	str	r3, [sp, #24]
    3a54:	mov	r3, ip
    3a58:	movw	ip, #8
    3a5c:	uxth	ip, ip
    3a60:	str	ip, [sp]
    3a64:	ldr	ip, [sp, #24]
    3a68:	str	ip, [sp, #4]
    3a6c:	movw	lr, #0
    3a70:	movt	lr, #0
    3a74:	str	lr, [sp, #8]
    3a78:	movw	lr, #0
    3a7c:	movt	lr, #0
    3a80:	str	lr, [sp, #12]
    3a84:	bl	0 <flatcc_json_parser_union_type>
    3a88:	str	r0, [fp, #-12]
    3a8c:	b	3aa4 <MyGame_Example_Monster_parse_json_table+0x1214>
    3a90:	ldr	r0, [fp, #-8]
    3a94:	ldr	r1, [fp, #-12]
    3a98:	ldr	r2, [fp, #-16]
    3a9c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3aa0:	str	r0, [fp, #-12]
    3aa4:	b	3abc <MyGame_Example_Monster_parse_json_table+0x122c>
    3aa8:	ldr	r0, [fp, #-8]
    3aac:	ldr	r1, [fp, #-12]
    3ab0:	ldr	r2, [fp, #-16]
    3ab4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3ab8:	str	r0, [fp, #-12]
    3abc:	b	3ad4 <MyGame_Example_Monster_parse_json_table+0x1244>
    3ac0:	ldr	r0, [fp, #-8]
    3ac4:	ldr	r1, [fp, #-12]
    3ac8:	ldr	r2, [fp, #-16]
    3acc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3ad0:	str	r0, [fp, #-12]
    3ad4:	b	3ad8 <MyGame_Example_Monster_parse_json_table+0x1248>
    3ad8:	b	3adc <MyGame_Example_Monster_parse_json_table+0x124c>
    3adc:	b	3ae0 <MyGame_Example_Monster_parse_json_table+0x1250>
    3ae0:	b	3ae4 <MyGame_Example_Monster_parse_json_table+0x1254>
    3ae4:	b	6128 <MyGame_Example_Monster_parse_json_table+0x3898>
    3ae8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3aec:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3af0:	movw	r2, #65535	; 0xffff
    3af4:	movt	r2, #26162	; 0x6632
    3af8:	subs	r0, r2, r0
    3afc:	movw	r2, #29556	; 0x7374
    3b00:	movt	r2, #29797	; 0x7465
    3b04:	sbcs	r1, r2, r1
    3b08:	bcc	4b40 <MyGame_Example_Monster_parse_json_table+0x22b0>
    3b0c:	b	3b10 <MyGame_Example_Monster_parse_json_table+0x1280>
    3b10:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3b14:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3b18:	movw	r2, #29556	; 0x7374
    3b1c:	movt	r2, #29797	; 0x7465
    3b20:	eor	r1, r1, r2
    3b24:	movw	r2, #29281	; 0x7261
    3b28:	movt	r2, #24946	; 0x6172
    3b2c:	eor	r0, r0, r2
    3b30:	orr	r0, r0, r1
    3b34:	cmp	r0, #0
    3b38:	bne	4448 <MyGame_Example_Monster_parse_json_table+0x1bb8>
    3b3c:	b	3b40 <MyGame_Example_Monster_parse_json_table+0x12b0>
    3b40:	ldr	r0, [fp, #-12]
    3b44:	add	r0, r0, #8
    3b48:	str	r0, [fp, #-12]
    3b4c:	ldr	r0, [fp, #-12]
    3b50:	ldr	r1, [fp, #-16]
    3b54:	bl	7130 <flatcc_json_parser_symbol_part>
    3b58:	str	r1, [fp, #-44]	; 0xffffffd4
    3b5c:	str	r0, [fp, #-48]	; 0xffffffd0
    3b60:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3b64:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3b68:	movw	r2, #26989	; 0x696d
    3b6c:	movt	r2, #29810	; 0x7472
    3b70:	subs	r0, r2, r0
    3b74:	movw	r2, #26227	; 0x6673
    3b78:	movt	r2, #31087	; 0x796f
    3b7c:	sbcs	r1, r2, r1
    3b80:	bcc	3f54 <MyGame_Example_Monster_parse_json_table+0x16c4>
    3b84:	b	3b88 <MyGame_Example_Monster_parse_json_table+0x12f8>
    3b88:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3b8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3b90:	movw	r2, #26210	; 0x6662
    3b94:	movt	r2, #31087	; 0x796f
    3b98:	eor	r1, r1, r2
    3b9c:	movw	r2, #27763	; 0x6c73
    3ba0:	movt	r2, #28527	; 0x6f6f
    3ba4:	eor	r0, r0, r2
    3ba8:	orr	r0, r0, r1
    3bac:	cmp	r0, #0
    3bb0:	bne	3d58 <MyGame_Example_Monster_parse_json_table+0x14c8>
    3bb4:	b	3bb8 <MyGame_Example_Monster_parse_json_table+0x1328>
    3bb8:	ldr	r0, [fp, #-8]
    3bbc:	ldr	r1, [fp, #-12]
    3bc0:	str	r1, [fp, #-40]	; 0xffffffd8
    3bc4:	ldr	r2, [fp, #-16]
    3bc8:	movw	r3, #8
    3bcc:	bl	7168 <flatcc_json_parser_match_symbol>
    3bd0:	str	r0, [fp, #-12]
    3bd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3bd8:	ldr	r1, [fp, #-12]
    3bdc:	cmp	r0, r1
    3be0:	beq	3d50 <MyGame_Example_Monster_parse_json_table+0x14c0>
    3be4:	ldr	r0, [fp, #-8]
    3be8:	ldr	r0, [r0]
    3bec:	movw	r1, #1
    3bf0:	movw	r2, #1
    3bf4:	uxth	r2, r2
    3bf8:	mvn	r3, #0
    3bfc:	bl	0 <flatcc_builder_start_vector>
    3c00:	cmp	r0, #0
    3c04:	beq	3c0c <MyGame_Example_Monster_parse_json_table+0x137c>
    3c08:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    3c0c:	ldr	r0, [fp, #-8]
    3c10:	ldr	r1, [fp, #-12]
    3c14:	ldr	r2, [fp, #-16]
    3c18:	sub	r3, fp, #24
    3c1c:	bl	89b8 <flatcc_json_parser_array_start>
    3c20:	str	r0, [fp, #-12]
    3c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3c28:	cmp	r0, #0
    3c2c:	beq	3d00 <MyGame_Example_Monster_parse_json_table+0x1470>
    3c30:	movw	r0, #0
    3c34:	strb	r0, [fp, #-61]	; 0xffffffc3
    3c38:	ldr	r0, [fp, #-8]
    3c3c:	ldr	r0, [r0]
    3c40:	movw	r1, #1
    3c44:	bl	0 <flatcc_builder_extend_vector>
    3c48:	str	r0, [fp, #-28]	; 0xffffffe4
    3c4c:	movw	r1, #0
    3c50:	cmp	r0, r1
    3c54:	bne	3c5c <MyGame_Example_Monster_parse_json_table+0x13cc>
    3c58:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    3c5c:	ldr	r0, [fp, #-8]
    3c60:	ldr	r1, [fp, #-12]
    3c64:	str	r1, [fp, #-40]	; 0xffffffd8
    3c68:	ldr	r2, [fp, #-16]
    3c6c:	sub	r3, fp, #61	; 0x3d
    3c70:	bl	a348 <flatcc_json_parser_bool>
    3c74:	str	r0, [fp, #-12]
    3c78:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3c7c:	ldr	r1, [fp, #-12]
    3c80:	cmp	r0, r1
    3c84:	bne	3cd8 <MyGame_Example_Monster_parse_json_table+0x1448>
    3c88:	ldr	r0, [fp, #-8]
    3c8c:	ldr	r1, [fp, #-12]
    3c90:	str	r1, [fp, #-40]	; 0xffffffd8
    3c94:	ldr	r2, [fp, #-16]
    3c98:	movw	r3, #0
    3c9c:	movt	r3, #0
    3ca0:	sub	ip, fp, #61	; 0x3d
    3ca4:	str	ip, [sp]
    3ca8:	bl	a460 <flatcc_json_parser_symbolic_bool>
    3cac:	str	r0, [fp, #-12]
    3cb0:	ldr	r0, [fp, #-12]
    3cb4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3cb8:	cmp	r0, r1
    3cbc:	beq	3cd0 <MyGame_Example_Monster_parse_json_table+0x1440>
    3cc0:	ldr	r0, [fp, #-12]
    3cc4:	ldr	r1, [fp, #-16]
    3cc8:	cmp	r0, r1
    3ccc:	bne	3cd4 <MyGame_Example_Monster_parse_json_table+0x1444>
    3cd0:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    3cd4:	b	3cd8 <MyGame_Example_Monster_parse_json_table+0x1448>
    3cd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3cdc:	ldrb	r1, [fp, #-61]	; 0xffffffc3
    3ce0:	bl	a68c <flatbuffers_bool_write_to_pe>
    3ce4:	ldr	r0, [fp, #-8]
    3ce8:	ldr	r1, [fp, #-12]
    3cec:	ldr	r2, [fp, #-16]
    3cf0:	sub	r3, fp, #24
    3cf4:	bl	8dd0 <flatcc_json_parser_array_end>
    3cf8:	str	r0, [fp, #-12]
    3cfc:	b	3c24 <MyGame_Example_Monster_parse_json_table+0x1394>
    3d00:	ldr	r0, [fp, #-8]
    3d04:	ldr	r0, [r0]
    3d08:	bl	0 <flatcc_builder_end_vector>
    3d0c:	str	r0, [fp, #-32]	; 0xffffffe0
    3d10:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3d14:	cmp	r0, #0
    3d18:	beq	3d3c <MyGame_Example_Monster_parse_json_table+0x14ac>
    3d1c:	ldr	r0, [fp, #-8]
    3d20:	ldr	r0, [r0]
    3d24:	movw	r1, #24
    3d28:	bl	0 <flatcc_builder_table_add_offset>
    3d2c:	str	r0, [fp, #-36]	; 0xffffffdc
    3d30:	movw	r1, #0
    3d34:	cmp	r0, r1
    3d38:	bne	3d40 <MyGame_Example_Monster_parse_json_table+0x14b0>
    3d3c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    3d40:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3d44:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3d48:	str	r0, [r1]
    3d4c:	b	3d54 <MyGame_Example_Monster_parse_json_table+0x14c4>
    3d50:	b	3d60 <MyGame_Example_Monster_parse_json_table+0x14d0>
    3d54:	b	3d5c <MyGame_Example_Monster_parse_json_table+0x14cc>
    3d58:	b	3d60 <MyGame_Example_Monster_parse_json_table+0x14d0>
    3d5c:	b	3f50 <MyGame_Example_Monster_parse_json_table+0x16c0>
    3d60:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3d64:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3d68:	movw	r2, #26227	; 0x6673
    3d6c:	movt	r2, #31087	; 0x796f
    3d70:	eor	r1, r1, r2
    3d74:	movw	r2, #29797	; 0x7465
    3d78:	movt	r2, #28530	; 0x6f72
    3d7c:	eor	r0, r0, r2
    3d80:	orr	r0, r0, r1
    3d84:	cmp	r0, #0
    3d88:	bne	3f38 <MyGame_Example_Monster_parse_json_table+0x16a8>
    3d8c:	b	3d90 <MyGame_Example_Monster_parse_json_table+0x1500>
    3d90:	ldr	r0, [fp, #-12]
    3d94:	add	r0, r0, #8
    3d98:	str	r0, [fp, #-12]
    3d9c:	ldr	r0, [fp, #-12]
    3da0:	ldr	r1, [fp, #-16]
    3da4:	bl	7130 <flatcc_json_parser_symbol_part>
    3da8:	str	r1, [fp, #-44]	; 0xffffffd4
    3dac:	str	r0, [fp, #-48]	; 0xffffffd0
    3db0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3db4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3db8:	movw	r2, #29556	; 0x7374
    3dbc:	movt	r2, #100	; 0x64
    3dc0:	eor	r2, r2, r1, lsr #8
    3dc4:	lsr	r0, r0, #8
    3dc8:	orr	r0, r0, r1, lsl #24
    3dcc:	movw	r1, #25460	; 0x6374
    3dd0:	movt	r1, #29301	; 0x7275
    3dd4:	eor	r0, r0, r1
    3dd8:	orr	r0, r0, r2
    3ddc:	cmp	r0, #0
    3de0:	bne	3f20 <MyGame_Example_Monster_parse_json_table+0x1690>
    3de4:	b	3de8 <MyGame_Example_Monster_parse_json_table+0x1558>
    3de8:	ldr	r0, [fp, #-8]
    3dec:	ldr	r1, [fp, #-12]
    3df0:	str	r1, [fp, #-40]	; 0xffffffd8
    3df4:	ldr	r2, [fp, #-16]
    3df8:	movw	r3, #7
    3dfc:	bl	7168 <flatcc_json_parser_match_symbol>
    3e00:	str	r0, [fp, #-12]
    3e04:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3e08:	ldr	r1, [fp, #-12]
    3e0c:	cmp	r0, r1
    3e10:	beq	3f08 <MyGame_Example_Monster_parse_json_table+0x1678>
    3e14:	ldr	r3, [pc, #3952]	; 4d8c <MyGame_Example_Monster_parse_json_table+0x24fc>
    3e18:	ldr	r0, [fp, #-8]
    3e1c:	ldr	r0, [r0]
    3e20:	movw	r1, #8
    3e24:	movw	r2, #4
    3e28:	uxth	r2, r2
    3e2c:	bl	0 <flatcc_builder_start_vector>
    3e30:	cmp	r0, #0
    3e34:	beq	3e3c <MyGame_Example_Monster_parse_json_table+0x15ac>
    3e38:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    3e3c:	ldr	r0, [fp, #-8]
    3e40:	ldr	r1, [fp, #-12]
    3e44:	ldr	r2, [fp, #-16]
    3e48:	sub	r3, fp, #24
    3e4c:	bl	89b8 <flatcc_json_parser_array_start>
    3e50:	str	r0, [fp, #-12]
    3e54:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3e58:	cmp	r0, #0
    3e5c:	beq	3eb8 <MyGame_Example_Monster_parse_json_table+0x1628>
    3e60:	ldr	r0, [fp, #-8]
    3e64:	ldr	r0, [r0]
    3e68:	movw	r1, #1
    3e6c:	bl	0 <flatcc_builder_extend_vector>
    3e70:	str	r0, [fp, #-28]	; 0xffffffe4
    3e74:	movw	r1, #0
    3e78:	cmp	r0, r1
    3e7c:	bne	3e84 <MyGame_Example_Monster_parse_json_table+0x15f4>
    3e80:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    3e84:	ldr	r0, [fp, #-8]
    3e88:	ldr	r1, [fp, #-12]
    3e8c:	ldr	r2, [fp, #-16]
    3e90:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3e94:	bl	a6b8 <MyGame_Example_Ability_parse_json_struct_inline>
    3e98:	str	r0, [fp, #-12]
    3e9c:	ldr	r0, [fp, #-8]
    3ea0:	ldr	r1, [fp, #-12]
    3ea4:	ldr	r2, [fp, #-16]
    3ea8:	sub	r3, fp, #24
    3eac:	bl	8dd0 <flatcc_json_parser_array_end>
    3eb0:	str	r0, [fp, #-12]
    3eb4:	b	3e54 <MyGame_Example_Monster_parse_json_table+0x15c4>
    3eb8:	ldr	r0, [fp, #-8]
    3ebc:	ldr	r0, [r0]
    3ec0:	bl	0 <flatcc_builder_end_vector>
    3ec4:	str	r0, [fp, #-32]	; 0xffffffe0
    3ec8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3ecc:	cmp	r0, #0
    3ed0:	beq	3ef4 <MyGame_Example_Monster_parse_json_table+0x1664>
    3ed4:	ldr	r0, [fp, #-8]
    3ed8:	ldr	r0, [r0]
    3edc:	movw	r1, #29
    3ee0:	bl	0 <flatcc_builder_table_add_offset>
    3ee4:	str	r0, [fp, #-36]	; 0xffffffdc
    3ee8:	movw	r1, #0
    3eec:	cmp	r0, r1
    3ef0:	bne	3ef8 <MyGame_Example_Monster_parse_json_table+0x1668>
    3ef4:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    3ef8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3efc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3f00:	str	r0, [r1]
    3f04:	b	3f1c <MyGame_Example_Monster_parse_json_table+0x168c>
    3f08:	ldr	r0, [fp, #-8]
    3f0c:	ldr	r1, [fp, #-12]
    3f10:	ldr	r2, [fp, #-16]
    3f14:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3f18:	str	r0, [fp, #-12]
    3f1c:	b	3f34 <MyGame_Example_Monster_parse_json_table+0x16a4>
    3f20:	ldr	r0, [fp, #-8]
    3f24:	ldr	r1, [fp, #-12]
    3f28:	ldr	r2, [fp, #-16]
    3f2c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3f30:	str	r0, [fp, #-12]
    3f34:	b	3f4c <MyGame_Example_Monster_parse_json_table+0x16bc>
    3f38:	ldr	r0, [fp, #-8]
    3f3c:	ldr	r1, [fp, #-12]
    3f40:	ldr	r2, [fp, #-16]
    3f44:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3f48:	str	r0, [fp, #-12]
    3f4c:	b	3f50 <MyGame_Example_Monster_parse_json_table+0x16c0>
    3f50:	b	4444 <MyGame_Example_Monster_parse_json_table+0x1bb4>
    3f54:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3f58:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3f5c:	movw	r2, #26227	; 0x6673
    3f60:	movt	r2, #31087	; 0x796f
    3f64:	eor	r1, r1, r2
    3f68:	movw	r2, #26990	; 0x696e
    3f6c:	movt	r2, #29810	; 0x7472
    3f70:	eor	r0, r0, r2
    3f74:	orr	r0, r0, r1
    3f78:	cmp	r0, #0
    3f7c:	bne	426c <MyGame_Example_Monster_parse_json_table+0x19dc>
    3f80:	b	3f84 <MyGame_Example_Monster_parse_json_table+0x16f4>
    3f84:	ldr	r0, [fp, #-12]
    3f88:	add	r0, r0, #8
    3f8c:	str	r0, [fp, #-12]
    3f90:	ldr	r0, [fp, #-12]
    3f94:	ldr	r1, [fp, #-16]
    3f98:	bl	7130 <flatcc_json_parser_symbol_part>
    3f9c:	str	r1, [fp, #-44]	; 0xffffffd4
    3fa0:	str	r0, [fp, #-48]	; 0xffffffd0
    3fa4:	ldrh	r0, [fp, #-42]	; 0xffffffd6
    3fa8:	movw	r1, #0
    3fac:	movt	r1, #26418	; 0x6732
    3fb0:	teq	r1, r0, lsl #16
    3fb4:	bne	40fc <MyGame_Example_Monster_parse_json_table+0x186c>
    3fb8:	b	3fbc <MyGame_Example_Monster_parse_json_table+0x172c>
    3fbc:	ldr	r0, [fp, #-8]
    3fc0:	ldr	r1, [fp, #-12]
    3fc4:	str	r1, [fp, #-40]	; 0xffffffd8
    3fc8:	ldr	r2, [fp, #-16]
    3fcc:	movw	r3, #2
    3fd0:	bl	7168 <flatcc_json_parser_match_symbol>
    3fd4:	str	r0, [fp, #-12]
    3fd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3fdc:	ldr	r1, [fp, #-12]
    3fe0:	cmp	r0, r1
    3fe4:	beq	40e4 <MyGame_Example_Monster_parse_json_table+0x1854>
    3fe8:	ldr	r0, [fp, #-8]
    3fec:	ldr	r0, [r0]
    3ff0:	bl	0 <flatcc_builder_start_offset_vector>
    3ff4:	cmp	r0, #0
    3ff8:	beq	4000 <MyGame_Example_Monster_parse_json_table+0x1770>
    3ffc:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4000:	ldr	r0, [fp, #-8]
    4004:	ldr	r1, [fp, #-12]
    4008:	ldr	r2, [fp, #-16]
    400c:	sub	r3, fp, #24
    4010:	bl	89b8 <flatcc_json_parser_array_start>
    4014:	str	r0, [fp, #-12]
    4018:	ldr	r0, [fp, #-24]	; 0xffffffe8
    401c:	cmp	r0, #0
    4020:	beq	4094 <MyGame_Example_Monster_parse_json_table+0x1804>
    4024:	ldr	r0, [fp, #-8]
    4028:	ldr	r1, [fp, #-12]
    402c:	ldr	r2, [fp, #-16]
    4030:	sub	r3, fp, #32
    4034:	bl	0 <flatcc_json_parser_build_string>
    4038:	str	r0, [fp, #-12]
    403c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4040:	cmp	r0, #0
    4044:	beq	4068 <MyGame_Example_Monster_parse_json_table+0x17d8>
    4048:	ldr	r0, [fp, #-8]
    404c:	ldr	r0, [r0]
    4050:	movw	r1, #1
    4054:	bl	0 <flatcc_builder_extend_offset_vector>
    4058:	str	r0, [fp, #-36]	; 0xffffffdc
    405c:	movw	r1, #0
    4060:	cmp	r0, r1
    4064:	bne	406c <MyGame_Example_Monster_parse_json_table+0x17dc>
    4068:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    406c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4070:	ldr	r1, [fp, #-36]	; 0xffffffdc
    4074:	str	r0, [r1]
    4078:	ldr	r0, [fp, #-8]
    407c:	ldr	r1, [fp, #-12]
    4080:	ldr	r2, [fp, #-16]
    4084:	sub	r3, fp, #24
    4088:	bl	8dd0 <flatcc_json_parser_array_end>
    408c:	str	r0, [fp, #-12]
    4090:	b	4018 <MyGame_Example_Monster_parse_json_table+0x1788>
    4094:	ldr	r0, [fp, #-8]
    4098:	ldr	r0, [r0]
    409c:	bl	0 <flatcc_builder_end_offset_vector>
    40a0:	str	r0, [fp, #-32]	; 0xffffffe0
    40a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    40a8:	cmp	r0, #0
    40ac:	beq	40d0 <MyGame_Example_Monster_parse_json_table+0x1840>
    40b0:	ldr	r0, [fp, #-8]
    40b4:	ldr	r0, [r0]
    40b8:	movw	r1, #28
    40bc:	bl	0 <flatcc_builder_table_add_offset>
    40c0:	str	r0, [fp, #-36]	; 0xffffffdc
    40c4:	movw	r1, #0
    40c8:	cmp	r0, r1
    40cc:	bne	40d4 <MyGame_Example_Monster_parse_json_table+0x1844>
    40d0:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    40d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    40d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    40dc:	str	r0, [r1]
    40e0:	b	40f8 <MyGame_Example_Monster_parse_json_table+0x1868>
    40e4:	ldr	r0, [fp, #-8]
    40e8:	ldr	r1, [fp, #-12]
    40ec:	ldr	r2, [fp, #-16]
    40f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    40f4:	str	r0, [fp, #-12]
    40f8:	b	4268 <MyGame_Example_Monster_parse_json_table+0x19d8>
    40fc:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    4100:	mov	r1, #1728053248	; 0x67000000
    4104:	teq	r1, r0, lsl #24
    4108:	bne	4250 <MyGame_Example_Monster_parse_json_table+0x19c0>
    410c:	b	4110 <MyGame_Example_Monster_parse_json_table+0x1880>
    4110:	ldr	r0, [fp, #-8]
    4114:	ldr	r1, [fp, #-12]
    4118:	str	r1, [fp, #-40]	; 0xffffffd8
    411c:	ldr	r2, [fp, #-16]
    4120:	movw	r3, #1
    4124:	bl	7168 <flatcc_json_parser_match_symbol>
    4128:	str	r0, [fp, #-12]
    412c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4130:	ldr	r1, [fp, #-12]
    4134:	cmp	r0, r1
    4138:	beq	4238 <MyGame_Example_Monster_parse_json_table+0x19a8>
    413c:	ldr	r0, [fp, #-8]
    4140:	ldr	r0, [r0]
    4144:	bl	0 <flatcc_builder_start_offset_vector>
    4148:	cmp	r0, #0
    414c:	beq	4154 <MyGame_Example_Monster_parse_json_table+0x18c4>
    4150:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4154:	ldr	r0, [fp, #-8]
    4158:	ldr	r1, [fp, #-12]
    415c:	ldr	r2, [fp, #-16]
    4160:	sub	r3, fp, #24
    4164:	bl	89b8 <flatcc_json_parser_array_start>
    4168:	str	r0, [fp, #-12]
    416c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4170:	cmp	r0, #0
    4174:	beq	41e8 <MyGame_Example_Monster_parse_json_table+0x1958>
    4178:	ldr	r0, [fp, #-8]
    417c:	ldr	r1, [fp, #-12]
    4180:	ldr	r2, [fp, #-16]
    4184:	sub	r3, fp, #32
    4188:	bl	0 <flatcc_json_parser_build_string>
    418c:	str	r0, [fp, #-12]
    4190:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4194:	cmp	r0, #0
    4198:	beq	41bc <MyGame_Example_Monster_parse_json_table+0x192c>
    419c:	ldr	r0, [fp, #-8]
    41a0:	ldr	r0, [r0]
    41a4:	movw	r1, #1
    41a8:	bl	0 <flatcc_builder_extend_offset_vector>
    41ac:	str	r0, [fp, #-36]	; 0xffffffdc
    41b0:	movw	r1, #0
    41b4:	cmp	r0, r1
    41b8:	bne	41c0 <MyGame_Example_Monster_parse_json_table+0x1930>
    41bc:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    41c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    41c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    41c8:	str	r0, [r1]
    41cc:	ldr	r0, [fp, #-8]
    41d0:	ldr	r1, [fp, #-12]
    41d4:	ldr	r2, [fp, #-16]
    41d8:	sub	r3, fp, #24
    41dc:	bl	8dd0 <flatcc_json_parser_array_end>
    41e0:	str	r0, [fp, #-12]
    41e4:	b	416c <MyGame_Example_Monster_parse_json_table+0x18dc>
    41e8:	ldr	r0, [fp, #-8]
    41ec:	ldr	r0, [r0]
    41f0:	bl	0 <flatcc_builder_end_offset_vector>
    41f4:	str	r0, [fp, #-32]	; 0xffffffe0
    41f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    41fc:	cmp	r0, #0
    4200:	beq	4224 <MyGame_Example_Monster_parse_json_table+0x1994>
    4204:	ldr	r0, [fp, #-8]
    4208:	ldr	r0, [r0]
    420c:	movw	r1, #10
    4210:	bl	0 <flatcc_builder_table_add_offset>
    4214:	str	r0, [fp, #-36]	; 0xffffffdc
    4218:	movw	r1, #0
    421c:	cmp	r0, r1
    4220:	bne	4228 <MyGame_Example_Monster_parse_json_table+0x1998>
    4224:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4228:	ldr	r0, [fp, #-32]	; 0xffffffe0
    422c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    4230:	str	r0, [r1]
    4234:	b	424c <MyGame_Example_Monster_parse_json_table+0x19bc>
    4238:	ldr	r0, [fp, #-8]
    423c:	ldr	r1, [fp, #-12]
    4240:	ldr	r2, [fp, #-16]
    4244:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4248:	str	r0, [fp, #-12]
    424c:	b	4264 <MyGame_Example_Monster_parse_json_table+0x19d4>
    4250:	ldr	r0, [fp, #-8]
    4254:	ldr	r1, [fp, #-12]
    4258:	ldr	r2, [fp, #-16]
    425c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4260:	str	r0, [fp, #-12]
    4264:	b	4268 <MyGame_Example_Monster_parse_json_table+0x19d8>
    4268:	b	4440 <MyGame_Example_Monster_parse_json_table+0x1bb0>
    426c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4270:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4274:	movw	r2, #26228	; 0x6674
    4278:	movt	r2, #31087	; 0x796f
    427c:	eor	r1, r1, r2
    4280:	movw	r2, #27749	; 0x6c65
    4284:	movt	r2, #24930	; 0x6162
    4288:	eor	r0, r0, r2
    428c:	orr	r0, r0, r1
    4290:	cmp	r0, #0
    4294:	bne	4428 <MyGame_Example_Monster_parse_json_table+0x1b98>
    4298:	b	429c <MyGame_Example_Monster_parse_json_table+0x1a0c>
    429c:	ldr	r0, [fp, #-12]
    42a0:	add	r0, r0, #8
    42a4:	str	r0, [fp, #-12]
    42a8:	ldr	r0, [fp, #-12]
    42ac:	ldr	r1, [fp, #-16]
    42b0:	bl	7130 <flatcc_json_parser_symbol_part>
    42b4:	str	r1, [fp, #-44]	; 0xffffffd4
    42b8:	str	r0, [fp, #-48]	; 0xffffffd0
    42bc:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    42c0:	mov	r1, #1929379840	; 0x73000000
    42c4:	teq	r1, r0, lsl #24
    42c8:	bne	4410 <MyGame_Example_Monster_parse_json_table+0x1b80>
    42cc:	b	42d0 <MyGame_Example_Monster_parse_json_table+0x1a40>
    42d0:	ldr	r0, [fp, #-8]
    42d4:	ldr	r1, [fp, #-12]
    42d8:	str	r1, [fp, #-40]	; 0xffffffd8
    42dc:	ldr	r2, [fp, #-16]
    42e0:	movw	r3, #1
    42e4:	bl	7168 <flatcc_json_parser_match_symbol>
    42e8:	str	r0, [fp, #-12]
    42ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    42f0:	ldr	r1, [fp, #-12]
    42f4:	cmp	r0, r1
    42f8:	beq	43f8 <MyGame_Example_Monster_parse_json_table+0x1b68>
    42fc:	ldr	r0, [fp, #-8]
    4300:	ldr	r0, [r0]
    4304:	bl	0 <flatcc_builder_start_offset_vector>
    4308:	cmp	r0, #0
    430c:	beq	4314 <MyGame_Example_Monster_parse_json_table+0x1a84>
    4310:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4314:	ldr	r0, [fp, #-8]
    4318:	ldr	r1, [fp, #-12]
    431c:	ldr	r2, [fp, #-16]
    4320:	sub	r3, fp, #24
    4324:	bl	89b8 <flatcc_json_parser_array_start>
    4328:	str	r0, [fp, #-12]
    432c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4330:	cmp	r0, #0
    4334:	beq	43a8 <MyGame_Example_Monster_parse_json_table+0x1b18>
    4338:	ldr	r0, [fp, #-8]
    433c:	ldr	r1, [fp, #-12]
    4340:	ldr	r2, [fp, #-16]
    4344:	sub	r3, fp, #32
    4348:	bl	2890 <MyGame_Example_Monster_parse_json_table>
    434c:	str	r0, [fp, #-12]
    4350:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4354:	cmp	r0, #0
    4358:	beq	437c <MyGame_Example_Monster_parse_json_table+0x1aec>
    435c:	ldr	r0, [fp, #-8]
    4360:	ldr	r0, [r0]
    4364:	movw	r1, #1
    4368:	bl	0 <flatcc_builder_extend_offset_vector>
    436c:	str	r0, [fp, #-36]	; 0xffffffdc
    4370:	movw	r1, #0
    4374:	cmp	r0, r1
    4378:	bne	4380 <MyGame_Example_Monster_parse_json_table+0x1af0>
    437c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4380:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4384:	ldr	r1, [fp, #-36]	; 0xffffffdc
    4388:	str	r0, [r1]
    438c:	ldr	r0, [fp, #-8]
    4390:	ldr	r1, [fp, #-12]
    4394:	ldr	r2, [fp, #-16]
    4398:	sub	r3, fp, #24
    439c:	bl	8dd0 <flatcc_json_parser_array_end>
    43a0:	str	r0, [fp, #-12]
    43a4:	b	432c <MyGame_Example_Monster_parse_json_table+0x1a9c>
    43a8:	ldr	r0, [fp, #-8]
    43ac:	ldr	r0, [r0]
    43b0:	bl	0 <flatcc_builder_end_offset_vector>
    43b4:	str	r0, [fp, #-32]	; 0xffffffe0
    43b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    43bc:	cmp	r0, #0
    43c0:	beq	43e4 <MyGame_Example_Monster_parse_json_table+0x1b54>
    43c4:	ldr	r0, [fp, #-8]
    43c8:	ldr	r0, [r0]
    43cc:	movw	r1, #11
    43d0:	bl	0 <flatcc_builder_table_add_offset>
    43d4:	str	r0, [fp, #-36]	; 0xffffffdc
    43d8:	movw	r1, #0
    43dc:	cmp	r0, r1
    43e0:	bne	43e8 <MyGame_Example_Monster_parse_json_table+0x1b58>
    43e4:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    43e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    43ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
    43f0:	str	r0, [r1]
    43f4:	b	440c <MyGame_Example_Monster_parse_json_table+0x1b7c>
    43f8:	ldr	r0, [fp, #-8]
    43fc:	ldr	r1, [fp, #-12]
    4400:	ldr	r2, [fp, #-16]
    4404:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4408:	str	r0, [fp, #-12]
    440c:	b	4424 <MyGame_Example_Monster_parse_json_table+0x1b94>
    4410:	ldr	r0, [fp, #-8]
    4414:	ldr	r1, [fp, #-12]
    4418:	ldr	r2, [fp, #-16]
    441c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4420:	str	r0, [fp, #-12]
    4424:	b	443c <MyGame_Example_Monster_parse_json_table+0x1bac>
    4428:	ldr	r0, [fp, #-8]
    442c:	ldr	r1, [fp, #-12]
    4430:	ldr	r2, [fp, #-16]
    4434:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4438:	str	r0, [fp, #-12]
    443c:	b	4440 <MyGame_Example_Monster_parse_json_table+0x1bb0>
    4440:	b	4444 <MyGame_Example_Monster_parse_json_table+0x1bb4>
    4444:	b	4b3c <MyGame_Example_Monster_parse_json_table+0x22ac>
    4448:	ldr	r0, [fp, #-48]	; 0xffffffd0
    444c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4450:	movw	r2, #28787	; 0x7073
    4454:	movt	r2, #25965	; 0x656d
    4458:	subs	r0, r2, r0
    445c:	movw	r2, #29556	; 0x7374
    4460:	movt	r2, #29797	; 0x7465
    4464:	sbcs	r1, r2, r1
    4468:	bcc	4704 <MyGame_Example_Monster_parse_json_table+0x1e74>
    446c:	b	4470 <MyGame_Example_Monster_parse_json_table+0x1be0>
    4470:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4474:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4478:	movw	r2, #29556	; 0x7374
    447c:	movt	r2, #29797	; 0x7465
    4480:	eor	r1, r1, r2
    4484:	movw	r2, #29541	; 0x7365
    4488:	movt	r2, #25185	; 0x6261
    448c:	eor	r0, r0, r2
    4490:	orr	r0, r0, r1
    4494:	cmp	r0, #0
    4498:	bne	458c <MyGame_Example_Monster_parse_json_table+0x1cfc>
    449c:	b	44a0 <MyGame_Example_Monster_parse_json_table+0x1c10>
    44a0:	ldr	r0, [fp, #-12]
    44a4:	add	r0, r0, #8
    44a8:	str	r0, [fp, #-12]
    44ac:	ldr	r0, [fp, #-12]
    44b0:	ldr	r1, [fp, #-16]
    44b4:	bl	7130 <flatcc_json_parser_symbol_part>
    44b8:	str	r1, [fp, #-44]	; 0xffffffd4
    44bc:	str	r0, [fp, #-48]	; 0xffffffd0
    44c0:	ldrh	r0, [fp, #-42]	; 0xffffffd6
    44c4:	movw	r1, #0
    44c8:	movt	r1, #13876	; 0x3634
    44cc:	teq	r1, r0, lsl #16
    44d0:	bne	4574 <MyGame_Example_Monster_parse_json_table+0x1ce4>
    44d4:	b	44d8 <MyGame_Example_Monster_parse_json_table+0x1c48>
    44d8:	ldr	r0, [fp, #-8]
    44dc:	ldr	r1, [fp, #-12]
    44e0:	str	r1, [fp, #-40]	; 0xffffffd8
    44e4:	ldr	r2, [fp, #-16]
    44e8:	movw	r3, #2
    44ec:	bl	7168 <flatcc_json_parser_match_symbol>
    44f0:	str	r0, [fp, #-12]
    44f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    44f8:	ldr	r1, [fp, #-12]
    44fc:	cmp	r0, r1
    4500:	beq	455c <MyGame_Example_Monster_parse_json_table+0x1ccc>
    4504:	ldr	r0, [fp, #-8]
    4508:	ldr	r1, [fp, #-12]
    450c:	ldr	r2, [fp, #-16]
    4510:	sub	r3, fp, #32
    4514:	bl	a994 <MyGame_Example_TestBase64_parse_json_table>
    4518:	str	r0, [fp, #-12]
    451c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4520:	cmp	r0, #0
    4524:	beq	4548 <MyGame_Example_Monster_parse_json_table+0x1cb8>
    4528:	ldr	r0, [fp, #-8]
    452c:	ldr	r0, [r0]
    4530:	movw	r1, #35	; 0x23
    4534:	bl	0 <flatcc_builder_table_add_offset>
    4538:	str	r0, [fp, #-36]	; 0xffffffdc
    453c:	movw	r1, #0
    4540:	cmp	r0, r1
    4544:	bne	454c <MyGame_Example_Monster_parse_json_table+0x1cbc>
    4548:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    454c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4550:	ldr	r1, [fp, #-36]	; 0xffffffdc
    4554:	str	r0, [r1]
    4558:	b	4570 <MyGame_Example_Monster_parse_json_table+0x1ce0>
    455c:	ldr	r0, [fp, #-8]
    4560:	ldr	r1, [fp, #-12]
    4564:	ldr	r2, [fp, #-16]
    4568:	bl	0 <flatcc_json_parser_unmatched_symbol>
    456c:	str	r0, [fp, #-12]
    4570:	b	4588 <MyGame_Example_Monster_parse_json_table+0x1cf8>
    4574:	ldr	r0, [fp, #-8]
    4578:	ldr	r1, [fp, #-12]
    457c:	ldr	r2, [fp, #-16]
    4580:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4584:	str	r0, [fp, #-12]
    4588:	b	4700 <MyGame_Example_Monster_parse_json_table+0x1e70>
    458c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4590:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4594:	movw	r2, #29556	; 0x7374
    4598:	movt	r2, #29797	; 0x7465
    459c:	eor	r1, r1, r2
    45a0:	movw	r2, #28524	; 0x6f6c
    45a4:	movt	r2, #25199	; 0x626f
    45a8:	eor	r0, r0, r2
    45ac:	orr	r0, r0, r1
    45b0:	cmp	r0, #0
    45b4:	bne	46e8 <MyGame_Example_Monster_parse_json_table+0x1e58>
    45b8:	b	45bc <MyGame_Example_Monster_parse_json_table+0x1d2c>
    45bc:	ldr	r0, [fp, #-8]
    45c0:	ldr	r1, [fp, #-12]
    45c4:	str	r1, [fp, #-40]	; 0xffffffd8
    45c8:	ldr	r2, [fp, #-16]
    45cc:	movw	r3, #8
    45d0:	bl	7168 <flatcc_json_parser_match_symbol>
    45d4:	str	r0, [fp, #-12]
    45d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    45dc:	ldr	r1, [fp, #-12]
    45e0:	cmp	r0, r1
    45e4:	beq	46d0 <MyGame_Example_Monster_parse_json_table+0x1e40>
    45e8:	movw	r0, #0
    45ec:	strb	r0, [fp, #-62]	; 0xffffffc2
    45f0:	ldr	r0, [fp, #-8]
    45f4:	ldr	r1, [fp, #-12]
    45f8:	str	r1, [fp, #-40]	; 0xffffffd8
    45fc:	ldr	r2, [fp, #-16]
    4600:	sub	r3, fp, #62	; 0x3e
    4604:	bl	a348 <flatcc_json_parser_bool>
    4608:	str	r0, [fp, #-12]
    460c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4610:	ldr	r1, [fp, #-12]
    4614:	cmp	r0, r1
    4618:	bne	466c <MyGame_Example_Monster_parse_json_table+0x1ddc>
    461c:	ldr	r0, [fp, #-8]
    4620:	ldr	r1, [fp, #-12]
    4624:	str	r1, [fp, #-40]	; 0xffffffd8
    4628:	ldr	r2, [fp, #-16]
    462c:	movw	r3, #0
    4630:	movt	r3, #0
    4634:	sub	ip, fp, #62	; 0x3e
    4638:	str	ip, [sp]
    463c:	bl	a460 <flatcc_json_parser_symbolic_bool>
    4640:	str	r0, [fp, #-12]
    4644:	ldr	r0, [fp, #-12]
    4648:	ldr	r1, [fp, #-40]	; 0xffffffd8
    464c:	cmp	r0, r1
    4650:	beq	4664 <MyGame_Example_Monster_parse_json_table+0x1dd4>
    4654:	ldr	r0, [fp, #-12]
    4658:	ldr	r1, [fp, #-16]
    465c:	cmp	r0, r1
    4660:	bne	4668 <MyGame_Example_Monster_parse_json_table+0x1dd8>
    4664:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4668:	b	466c <MyGame_Example_Monster_parse_json_table+0x1ddc>
    466c:	ldrb	r0, [fp, #-62]	; 0xffffffc2
    4670:	cmp	r0, #1
    4674:	bne	468c <MyGame_Example_Monster_parse_json_table+0x1dfc>
    4678:	ldr	r0, [fp, #-8]
    467c:	ldr	r0, [r0, #8]
    4680:	and	r0, r0, #2
    4684:	cmp	r0, #0
    4688:	beq	46cc <MyGame_Example_Monster_parse_json_table+0x1e3c>
    468c:	ldr	r0, [fp, #-8]
    4690:	ldr	r0, [r0]
    4694:	movw	r1, #15
    4698:	movw	r2, #1
    469c:	movw	r3, #1
    46a0:	uxth	r3, r3
    46a4:	bl	0 <flatcc_builder_table_add>
    46a8:	str	r0, [fp, #-28]	; 0xffffffe4
    46ac:	movw	r1, #0
    46b0:	cmp	r0, r1
    46b4:	bne	46c0 <MyGame_Example_Monster_parse_json_table+0x1e30>
    46b8:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    46bc:	.word	0x3fffffff
    46c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    46c4:	ldrb	r1, [fp, #-62]	; 0xffffffc2
    46c8:	bl	a68c <flatbuffers_bool_write_to_pe>
    46cc:	b	46e4 <MyGame_Example_Monster_parse_json_table+0x1e54>
    46d0:	ldr	r0, [fp, #-8]
    46d4:	ldr	r1, [fp, #-12]
    46d8:	ldr	r2, [fp, #-16]
    46dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    46e0:	str	r0, [fp, #-12]
    46e4:	b	46fc <MyGame_Example_Monster_parse_json_table+0x1e6c>
    46e8:	ldr	r0, [fp, #-8]
    46ec:	ldr	r1, [fp, #-12]
    46f0:	ldr	r2, [fp, #-16]
    46f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    46f8:	str	r0, [fp, #-12]
    46fc:	b	4700 <MyGame_Example_Monster_parse_json_table+0x1e70>
    4700:	b	4b38 <MyGame_Example_Monster_parse_json_table+0x22a8>
    4704:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4708:	ldr	r1, [fp, #-44]	; 0xffffffd4
    470c:	mvn	r2, #-1711276032	; 0x9a000000
    4710:	subs	r0, r2, r0
    4714:	movw	r2, #29556	; 0x7374
    4718:	movt	r2, #29797	; 0x7465
    471c:	sbcs	r1, r2, r1
    4720:	bcc	4858 <MyGame_Example_Monster_parse_json_table+0x1fc8>
    4724:	b	4728 <MyGame_Example_Monster_parse_json_table+0x1e98>
    4728:	ldr	r0, [fp, #-48]	; 0xffffffd0
    472c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4730:	movw	r2, #29556	; 0x7374
    4734:	movt	r2, #29797	; 0x7465
    4738:	eor	r1, r1, r2
    473c:	movw	r2, #28788	; 0x7074
    4740:	movt	r2, #25965	; 0x656d
    4744:	eor	r0, r0, r2
    4748:	orr	r0, r0, r1
    474c:	cmp	r0, #0
    4750:	bne	4840 <MyGame_Example_Monster_parse_json_table+0x1fb0>
    4754:	b	4758 <MyGame_Example_Monster_parse_json_table+0x1ec8>
    4758:	ldr	r0, [fp, #-12]
    475c:	add	r0, r0, #8
    4760:	str	r0, [fp, #-12]
    4764:	ldr	r0, [fp, #-12]
    4768:	ldr	r1, [fp, #-16]
    476c:	bl	7130 <flatcc_json_parser_symbol_part>
    4770:	str	r1, [fp, #-44]	; 0xffffffd4
    4774:	str	r0, [fp, #-48]	; 0xffffffd0
    4778:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    477c:	mov	r1, #2030043136	; 0x79000000
    4780:	teq	r1, r0, lsl #24
    4784:	bne	4828 <MyGame_Example_Monster_parse_json_table+0x1f98>
    4788:	b	478c <MyGame_Example_Monster_parse_json_table+0x1efc>
    478c:	ldr	r0, [fp, #-8]
    4790:	ldr	r1, [fp, #-12]
    4794:	str	r1, [fp, #-40]	; 0xffffffd8
    4798:	ldr	r2, [fp, #-16]
    479c:	movw	r3, #1
    47a0:	bl	7168 <flatcc_json_parser_match_symbol>
    47a4:	str	r0, [fp, #-12]
    47a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    47ac:	ldr	r1, [fp, #-12]
    47b0:	cmp	r0, r1
    47b4:	beq	4810 <MyGame_Example_Monster_parse_json_table+0x1f80>
    47b8:	ldr	r0, [fp, #-8]
    47bc:	ldr	r1, [fp, #-12]
    47c0:	ldr	r2, [fp, #-16]
    47c4:	sub	r3, fp, #32
    47c8:	bl	ad6c <MyGame_Example_Stat_parse_json_table>
    47cc:	str	r0, [fp, #-12]
    47d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    47d4:	cmp	r0, #0
    47d8:	beq	47fc <MyGame_Example_Monster_parse_json_table+0x1f6c>
    47dc:	ldr	r0, [fp, #-8]
    47e0:	ldr	r0, [r0]
    47e4:	movw	r1, #14
    47e8:	bl	0 <flatcc_builder_table_add_offset>
    47ec:	str	r0, [fp, #-36]	; 0xffffffdc
    47f0:	movw	r1, #0
    47f4:	cmp	r0, r1
    47f8:	bne	4800 <MyGame_Example_Monster_parse_json_table+0x1f70>
    47fc:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4800:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4804:	ldr	r1, [fp, #-36]	; 0xffffffdc
    4808:	str	r0, [r1]
    480c:	b	4824 <MyGame_Example_Monster_parse_json_table+0x1f94>
    4810:	ldr	r0, [fp, #-8]
    4814:	ldr	r1, [fp, #-12]
    4818:	ldr	r2, [fp, #-16]
    481c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4820:	str	r0, [fp, #-12]
    4824:	b	483c <MyGame_Example_Monster_parse_json_table+0x1fac>
    4828:	ldr	r0, [fp, #-8]
    482c:	ldr	r1, [fp, #-12]
    4830:	ldr	r2, [fp, #-16]
    4834:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4838:	str	r0, [fp, #-12]
    483c:	b	4854 <MyGame_Example_Monster_parse_json_table+0x1fc4>
    4840:	ldr	r0, [fp, #-8]
    4844:	ldr	r1, [fp, #-12]
    4848:	ldr	r2, [fp, #-16]
    484c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4850:	str	r0, [fp, #-12]
    4854:	b	4b34 <MyGame_Example_Monster_parse_json_table+0x22a4>
    4858:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    485c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4860:	movw	r2, #29797	; 0x7465
    4864:	eor	r2, r2, r1, lsr #16
    4868:	orr	r0, r0, r1, lsl #16
    486c:	movw	r1, #26162	; 0x6632
    4870:	movt	r1, #29556	; 0x7374
    4874:	eor	r0, r0, r1
    4878:	orr	r0, r0, r2
    487c:	cmp	r0, #0
    4880:	bne	49bc <MyGame_Example_Monster_parse_json_table+0x212c>
    4884:	b	4888 <MyGame_Example_Monster_parse_json_table+0x1ff8>
    4888:	ldr	r0, [fp, #-8]
    488c:	ldr	r1, [fp, #-12]
    4890:	str	r1, [fp, #-40]	; 0xffffffd8
    4894:	ldr	r2, [fp, #-16]
    4898:	movw	r3, #6
    489c:	bl	7168 <flatcc_json_parser_match_symbol>
    48a0:	str	r0, [fp, #-12]
    48a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    48a8:	ldr	r1, [fp, #-12]
    48ac:	cmp	r0, r1
    48b0:	beq	49a4 <MyGame_Example_Monster_parse_json_table+0x2114>
    48b4:	vldr	s0, [pc, #1012]	; 4cb0 <MyGame_Example_Monster_parse_json_table+0x2420>
    48b8:	vstr	s0, [fp, #-68]	; 0xffffffbc
    48bc:	ldr	r0, [fp, #-8]
    48c0:	ldr	r1, [fp, #-12]
    48c4:	str	r1, [fp, #-40]	; 0xffffffd8
    48c8:	ldr	r2, [fp, #-16]
    48cc:	sub	r3, fp, #68	; 0x44
    48d0:	bl	0 <flatcc_json_parser_float>
    48d4:	str	r0, [fp, #-12]
    48d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    48dc:	ldr	r1, [fp, #-12]
    48e0:	cmp	r0, r1
    48e4:	bne	4938 <MyGame_Example_Monster_parse_json_table+0x20a8>
    48e8:	ldr	r0, [fp, #-8]
    48ec:	ldr	r1, [fp, #-12]
    48f0:	str	r1, [fp, #-40]	; 0xffffffd8
    48f4:	ldr	r2, [fp, #-16]
    48f8:	movw	r3, #0
    48fc:	movt	r3, #0
    4900:	sub	ip, fp, #68	; 0x44
    4904:	str	ip, [sp]
    4908:	bl	b228 <flatcc_json_parser_symbolic_float>
    490c:	str	r0, [fp, #-12]
    4910:	ldr	r0, [fp, #-12]
    4914:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4918:	cmp	r0, r1
    491c:	beq	4930 <MyGame_Example_Monster_parse_json_table+0x20a0>
    4920:	ldr	r0, [fp, #-12]
    4924:	ldr	r1, [fp, #-16]
    4928:	cmp	r0, r1
    492c:	bne	4934 <MyGame_Example_Monster_parse_json_table+0x20a4>
    4930:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4934:	b	4938 <MyGame_Example_Monster_parse_json_table+0x20a8>
    4938:	vldr	s0, [fp, #-68]	; 0xffffffbc
    493c:	vcvt.f64.f32	d16, s0
    4940:	vmov.f64	d17, #8	; 0x40400000  3.0
    4944:	vcmp.f64	d16, d17
    4948:	vmrs	APSR_nzcv, fpscr
    494c:	bne	4964 <MyGame_Example_Monster_parse_json_table+0x20d4>
    4950:	ldr	r0, [fp, #-8]
    4954:	ldr	r0, [r0, #8]
    4958:	and	r0, r0, #2
    495c:	cmp	r0, #0
    4960:	beq	49a0 <MyGame_Example_Monster_parse_json_table+0x2110>
    4964:	ldr	r0, [fp, #-8]
    4968:	ldr	r0, [r0]
    496c:	movw	r1, #26
    4970:	movw	r2, #4
    4974:	movw	r3, #4
    4978:	uxth	r3, r3
    497c:	bl	0 <flatcc_builder_table_add>
    4980:	str	r0, [fp, #-28]	; 0xffffffe4
    4984:	movw	r1, #0
    4988:	cmp	r0, r1
    498c:	bne	4994 <MyGame_Example_Monster_parse_json_table+0x2104>
    4990:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4994:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4998:	vldr	s0, [fp, #-68]	; 0xffffffbc
    499c:	bl	b458 <flatbuffers_float_write_to_pe>
    49a0:	b	49b8 <MyGame_Example_Monster_parse_json_table+0x2128>
    49a4:	ldr	r0, [fp, #-8]
    49a8:	ldr	r1, [fp, #-12]
    49ac:	ldr	r2, [fp, #-16]
    49b0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    49b4:	str	r0, [fp, #-12]
    49b8:	b	4b30 <MyGame_Example_Monster_parse_json_table+0x22a0>
    49bc:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    49c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    49c4:	movw	r2, #29556	; 0x7374
    49c8:	movt	r2, #29797	; 0x7465
    49cc:	eor	r1, r1, r2
    49d0:	eor	r0, r0, #102	; 0x66
    49d4:	orr	r0, r1, r0, lsl #24
    49d8:	cmp	r0, #0
    49dc:	bne	4b18 <MyGame_Example_Monster_parse_json_table+0x2288>
    49e0:	b	49e4 <MyGame_Example_Monster_parse_json_table+0x2154>
    49e4:	ldr	r0, [fp, #-8]
    49e8:	ldr	r1, [fp, #-12]
    49ec:	str	r1, [fp, #-40]	; 0xffffffd8
    49f0:	ldr	r2, [fp, #-16]
    49f4:	movw	r3, #5
    49f8:	bl	7168 <flatcc_json_parser_match_symbol>
    49fc:	str	r0, [fp, #-12]
    4a00:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4a04:	ldr	r1, [fp, #-12]
    4a08:	cmp	r0, r1
    4a0c:	beq	4b00 <MyGame_Example_Monster_parse_json_table+0x2270>
    4a10:	vldr	s0, [pc, #664]	; 4cb0 <MyGame_Example_Monster_parse_json_table+0x2420>
    4a14:	vstr	s0, [fp, #-72]	; 0xffffffb8
    4a18:	ldr	r0, [fp, #-8]
    4a1c:	ldr	r1, [fp, #-12]
    4a20:	str	r1, [fp, #-40]	; 0xffffffd8
    4a24:	ldr	r2, [fp, #-16]
    4a28:	sub	r3, fp, #72	; 0x48
    4a2c:	bl	0 <flatcc_json_parser_float>
    4a30:	str	r0, [fp, #-12]
    4a34:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4a38:	ldr	r1, [fp, #-12]
    4a3c:	cmp	r0, r1
    4a40:	bne	4a94 <MyGame_Example_Monster_parse_json_table+0x2204>
    4a44:	ldr	r0, [fp, #-8]
    4a48:	ldr	r1, [fp, #-12]
    4a4c:	str	r1, [fp, #-40]	; 0xffffffd8
    4a50:	ldr	r2, [fp, #-16]
    4a54:	movw	r3, #0
    4a58:	movt	r3, #0
    4a5c:	sub	ip, fp, #72	; 0x48
    4a60:	str	ip, [sp]
    4a64:	bl	b228 <flatcc_json_parser_symbolic_float>
    4a68:	str	r0, [fp, #-12]
    4a6c:	ldr	r0, [fp, #-12]
    4a70:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4a74:	cmp	r0, r1
    4a78:	beq	4a8c <MyGame_Example_Monster_parse_json_table+0x21fc>
    4a7c:	ldr	r0, [fp, #-12]
    4a80:	ldr	r1, [fp, #-16]
    4a84:	cmp	r0, r1
    4a88:	bne	4a90 <MyGame_Example_Monster_parse_json_table+0x2200>
    4a8c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4a90:	b	4a94 <MyGame_Example_Monster_parse_json_table+0x2204>
    4a94:	vldr	d16, [pc, #1012]	; 4e90 <MyGame_Example_Monster_parse_json_table+0x2600>
    4a98:	vldr	s0, [fp, #-72]	; 0xffffffb8
    4a9c:	vcvt.f64.f32	d17, s0
    4aa0:	vcmp.f64	d17, d16
    4aa4:	vmrs	APSR_nzcv, fpscr
    4aa8:	bne	4ac0 <MyGame_Example_Monster_parse_json_table+0x2230>
    4aac:	ldr	r0, [fp, #-8]
    4ab0:	ldr	r0, [r0, #8]
    4ab4:	and	r0, r0, #2
    4ab8:	cmp	r0, #0
    4abc:	beq	4afc <MyGame_Example_Monster_parse_json_table+0x226c>
    4ac0:	ldr	r0, [fp, #-8]
    4ac4:	ldr	r0, [r0]
    4ac8:	movw	r1, #25
    4acc:	movw	r2, #4
    4ad0:	movw	r3, #4
    4ad4:	uxth	r3, r3
    4ad8:	bl	0 <flatcc_builder_table_add>
    4adc:	str	r0, [fp, #-28]	; 0xffffffe4
    4ae0:	movw	r1, #0
    4ae4:	cmp	r0, r1
    4ae8:	bne	4af0 <MyGame_Example_Monster_parse_json_table+0x2260>
    4aec:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4af0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4af4:	vldr	s0, [fp, #-72]	; 0xffffffb8
    4af8:	bl	b458 <flatbuffers_float_write_to_pe>
    4afc:	b	4b14 <MyGame_Example_Monster_parse_json_table+0x2284>
    4b00:	ldr	r0, [fp, #-8]
    4b04:	ldr	r1, [fp, #-12]
    4b08:	ldr	r2, [fp, #-16]
    4b0c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4b10:	str	r0, [fp, #-12]
    4b14:	b	4b2c <MyGame_Example_Monster_parse_json_table+0x229c>
    4b18:	ldr	r0, [fp, #-8]
    4b1c:	ldr	r1, [fp, #-12]
    4b20:	ldr	r2, [fp, #-16]
    4b24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4b28:	str	r0, [fp, #-12]
    4b2c:	b	4b30 <MyGame_Example_Monster_parse_json_table+0x22a0>
    4b30:	b	4b34 <MyGame_Example_Monster_parse_json_table+0x22a4>
    4b34:	b	4b38 <MyGame_Example_Monster_parse_json_table+0x22a8>
    4b38:	b	4b3c <MyGame_Example_Monster_parse_json_table+0x22ac>
    4b3c:	b	6124 <MyGame_Example_Monster_parse_json_table+0x3894>
    4b40:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4b44:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4b48:	movw	r2, #29543	; 0x7367
    4b4c:	movt	r2, #26721	; 0x6861
    4b50:	subs	r0, r2, r0
    4b54:	movw	r2, #29556	; 0x7374
    4b58:	movt	r2, #29797	; 0x7465
    4b5c:	sbcs	r1, r2, r1
    4b60:	bcc	4ce4 <MyGame_Example_Monster_parse_json_table+0x2454>
    4b64:	b	4b68 <MyGame_Example_Monster_parse_json_table+0x22d8>
    4b68:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    4b6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4b70:	movw	r2, #29797	; 0x7465
    4b74:	eor	r2, r2, r1, lsr #16
    4b78:	orr	r0, r0, r1, lsl #16
    4b7c:	movw	r1, #26163	; 0x6633
    4b80:	movt	r1, #29556	; 0x7374
    4b84:	eor	r0, r0, r1
    4b88:	orr	r0, r0, r2
    4b8c:	cmp	r0, #0
    4b90:	bne	4ccc <MyGame_Example_Monster_parse_json_table+0x243c>
    4b94:	b	4b98 <MyGame_Example_Monster_parse_json_table+0x2308>
    4b98:	ldr	r0, [fp, #-8]
    4b9c:	ldr	r1, [fp, #-12]
    4ba0:	str	r1, [fp, #-40]	; 0xffffffd8
    4ba4:	ldr	r2, [fp, #-16]
    4ba8:	movw	r3, #6
    4bac:	bl	7168 <flatcc_json_parser_match_symbol>
    4bb0:	str	r0, [fp, #-12]
    4bb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4bb8:	ldr	r1, [fp, #-12]
    4bbc:	cmp	r0, r1
    4bc0:	beq	4cb4 <MyGame_Example_Monster_parse_json_table+0x2424>
    4bc4:	vldr	s0, [pc, #228]	; 4cb0 <MyGame_Example_Monster_parse_json_table+0x2420>
    4bc8:	vstr	s0, [fp, #-76]	; 0xffffffb4
    4bcc:	ldr	r0, [fp, #-8]
    4bd0:	ldr	r1, [fp, #-12]
    4bd4:	str	r1, [fp, #-40]	; 0xffffffd8
    4bd8:	ldr	r2, [fp, #-16]
    4bdc:	sub	r3, fp, #76	; 0x4c
    4be0:	bl	0 <flatcc_json_parser_float>
    4be4:	str	r0, [fp, #-12]
    4be8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4bec:	ldr	r1, [fp, #-12]
    4bf0:	cmp	r0, r1
    4bf4:	bne	4c48 <MyGame_Example_Monster_parse_json_table+0x23b8>
    4bf8:	ldr	r0, [fp, #-8]
    4bfc:	ldr	r1, [fp, #-12]
    4c00:	str	r1, [fp, #-40]	; 0xffffffd8
    4c04:	ldr	r2, [fp, #-16]
    4c08:	movw	r3, #0
    4c0c:	movt	r3, #0
    4c10:	sub	ip, fp, #76	; 0x4c
    4c14:	str	ip, [sp]
    4c18:	bl	b228 <flatcc_json_parser_symbolic_float>
    4c1c:	str	r0, [fp, #-12]
    4c20:	ldr	r0, [fp, #-12]
    4c24:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4c28:	cmp	r0, r1
    4c2c:	beq	4c40 <MyGame_Example_Monster_parse_json_table+0x23b0>
    4c30:	ldr	r0, [fp, #-12]
    4c34:	ldr	r1, [fp, #-16]
    4c38:	cmp	r0, r1
    4c3c:	bne	4c44 <MyGame_Example_Monster_parse_json_table+0x23b4>
    4c40:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4c44:	b	4c48 <MyGame_Example_Monster_parse_json_table+0x23b8>
    4c48:	vldr	s0, [fp, #-76]	; 0xffffffb4
    4c4c:	vcvt.f64.f32	d16, s0
    4c50:	vcmp.f64	d16, #0.0
    4c54:	vmrs	APSR_nzcv, fpscr
    4c58:	bne	4c70 <MyGame_Example_Monster_parse_json_table+0x23e0>
    4c5c:	ldr	r0, [fp, #-8]
    4c60:	ldr	r0, [r0, #8]
    4c64:	and	r0, r0, #2
    4c68:	cmp	r0, #0
    4c6c:	beq	4cac <MyGame_Example_Monster_parse_json_table+0x241c>
    4c70:	ldr	r0, [fp, #-8]
    4c74:	ldr	r0, [r0]
    4c78:	movw	r1, #27
    4c7c:	movw	r2, #4
    4c80:	movw	r3, #4
    4c84:	uxth	r3, r3
    4c88:	bl	0 <flatcc_builder_table_add>
    4c8c:	str	r0, [fp, #-28]	; 0xffffffe4
    4c90:	movw	r1, #0
    4c94:	cmp	r0, r1
    4c98:	bne	4ca0 <MyGame_Example_Monster_parse_json_table+0x2410>
    4c9c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4ca0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4ca4:	vldr	s0, [fp, #-76]	; 0xffffffb4
    4ca8:	bl	b458 <flatbuffers_float_write_to_pe>
    4cac:	b	4cc8 <MyGame_Example_Monster_parse_json_table+0x2438>
    4cb0:	.word	0x00000000
    4cb4:	ldr	r0, [fp, #-8]
    4cb8:	ldr	r1, [fp, #-12]
    4cbc:	ldr	r2, [fp, #-16]
    4cc0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4cc4:	str	r0, [fp, #-12]
    4cc8:	b	4ce0 <MyGame_Example_Monster_parse_json_table+0x2450>
    4ccc:	ldr	r0, [fp, #-8]
    4cd0:	ldr	r1, [fp, #-12]
    4cd4:	ldr	r2, [fp, #-16]
    4cd8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4cdc:	str	r0, [fp, #-12]
    4ce0:	b	6120 <MyGame_Example_Monster_parse_json_table+0x3890>
    4ce4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4ce8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4cec:	movw	r2, #29556	; 0x7374
    4cf0:	movt	r2, #29797	; 0x7465
    4cf4:	eor	r1, r1, r2
    4cf8:	movw	r2, #29544	; 0x7368
    4cfc:	movt	r2, #26721	; 0x6861
    4d00:	eor	r0, r0, r2
    4d04:	orr	r0, r0, r1
    4d08:	cmp	r0, #0
    4d0c:	bne	5914 <MyGame_Example_Monster_parse_json_table+0x3084>
    4d10:	b	4d14 <MyGame_Example_Monster_parse_json_table+0x2484>
    4d14:	ldr	r0, [fp, #-12]
    4d18:	add	r0, r0, #8
    4d1c:	str	r0, [fp, #-12]
    4d20:	ldr	r0, [fp, #-12]
    4d24:	ldr	r1, [fp, #-16]
    4d28:	bl	7130 <flatcc_json_parser_symbol_part>
    4d2c:	str	r1, [fp, #-44]	; 0xffffffd4
    4d30:	str	r0, [fp, #-48]	; 0xffffffd0
    4d34:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4d38:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4d3c:	movw	r2, #30256	; 0x7630
    4d40:	movt	r2, #26222	; 0x666e
    4d44:	subs	r0, r2, r0
    4d48:	movw	r2, #13407	; 0x345f
    4d4c:	movt	r2, #29494	; 0x7336
    4d50:	sbcs	r1, r2, r1
    4d54:	bcc	5038 <MyGame_Example_Monster_parse_json_table+0x27a8>
    4d58:	b	4d5c <MyGame_Example_Monster_parse_json_table+0x24cc>
    4d5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4d60:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4d64:	movw	r2, #12895	; 0x325f
    4d68:	movt	r2, #29491	; 0x7333
    4d6c:	eor	r1, r1, r2
    4d70:	movw	r2, #30257	; 0x7631
    4d74:	movt	r2, #26222	; 0x666e
    4d78:	eor	r0, r0, r2
    4d7c:	orr	r0, r0, r1
    4d80:	cmp	r0, #0
    4d84:	bne	5020 <MyGame_Example_Monster_parse_json_table+0x2790>
    4d88:	b	4d90 <MyGame_Example_Monster_parse_json_table+0x2500>
    4d8c:	.word	0x1fffffff
    4d90:	ldr	r0, [fp, #-8]
    4d94:	ldr	r1, [fp, #-12]
    4d98:	str	r1, [fp, #-40]	; 0xffffffd8
    4d9c:	ldr	r2, [fp, #-16]
    4da0:	movw	r3, #8
    4da4:	bl	7168 <flatcc_json_parser_match_symbol>
    4da8:	str	r0, [fp, #-12]
    4dac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4db0:	ldr	r1, [fp, #-12]
    4db4:	cmp	r0, r1
    4db8:	beq	4ea8 <MyGame_Example_Monster_parse_json_table+0x2618>
    4dbc:	movw	r0, #0
    4dc0:	str	r0, [fp, #-80]	; 0xffffffb0
    4dc4:	ldr	r0, [fp, #-8]
    4dc8:	ldr	r1, [fp, #-12]
    4dcc:	str	r1, [fp, #-40]	; 0xffffffd8
    4dd0:	ldr	r2, [fp, #-16]
    4dd4:	sub	r3, fp, #80	; 0x50
    4dd8:	bl	b484 <flatcc_json_parser_int32>
    4ddc:	str	r0, [fp, #-12]
    4de0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4de4:	ldr	r1, [fp, #-12]
    4de8:	cmp	r0, r1
    4dec:	bne	4e40 <MyGame_Example_Monster_parse_json_table+0x25b0>
    4df0:	ldr	r0, [fp, #-8]
    4df4:	ldr	r1, [fp, #-12]
    4df8:	str	r1, [fp, #-40]	; 0xffffffd8
    4dfc:	ldr	r2, [fp, #-16]
    4e00:	movw	r3, #0
    4e04:	movt	r3, #0
    4e08:	sub	ip, fp, #80	; 0x50
    4e0c:	str	ip, [sp]
    4e10:	bl	b55c <flatcc_json_parser_symbolic_int32>
    4e14:	str	r0, [fp, #-12]
    4e18:	ldr	r0, [fp, #-12]
    4e1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4e20:	cmp	r0, r1
    4e24:	beq	4e38 <MyGame_Example_Monster_parse_json_table+0x25a8>
    4e28:	ldr	r0, [fp, #-12]
    4e2c:	ldr	r1, [fp, #-16]
    4e30:	cmp	r0, r1
    4e34:	bne	4e3c <MyGame_Example_Monster_parse_json_table+0x25ac>
    4e38:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4e3c:	b	4e40 <MyGame_Example_Monster_parse_json_table+0x25b0>
    4e40:	ldr	r0, [fp, #-80]	; 0xffffffb0
    4e44:	cmp	r0, #0
    4e48:	bne	4e60 <MyGame_Example_Monster_parse_json_table+0x25d0>
    4e4c:	ldr	r0, [fp, #-8]
    4e50:	ldr	r0, [r0, #8]
    4e54:	and	r0, r0, #2
    4e58:	cmp	r0, #0
    4e5c:	beq	4ea4 <MyGame_Example_Monster_parse_json_table+0x2614>
    4e60:	ldr	r0, [fp, #-8]
    4e64:	ldr	r0, [r0]
    4e68:	movw	r1, #16
    4e6c:	movw	r2, #4
    4e70:	movw	r3, #4
    4e74:	uxth	r3, r3
    4e78:	bl	0 <flatcc_builder_table_add>
    4e7c:	str	r0, [fp, #-28]	; 0xffffffe4
    4e80:	movw	r1, #0
    4e84:	cmp	r0, r1
    4e88:	bne	4e98 <MyGame_Example_Monster_parse_json_table+0x2608>
    4e8c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4e90:	.word	0x00000000
    4e94:	.word	0x41132cbc
    4e98:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4e9c:	ldr	r1, [fp, #-80]	; 0xffffffb0
    4ea0:	bl	b784 <flatbuffers_int32_write_to_pe>
    4ea4:	b	501c <MyGame_Example_Monster_parse_json_table+0x278c>
    4ea8:	ldr	r0, [fp, #-12]
    4eac:	add	r0, r0, #8
    4eb0:	str	r0, [fp, #-12]
    4eb4:	ldr	r0, [fp, #-12]
    4eb8:	ldr	r1, [fp, #-16]
    4ebc:	bl	7130 <flatcc_json_parser_symbol_part>
    4ec0:	str	r1, [fp, #-44]	; 0xffffffd4
    4ec4:	str	r0, [fp, #-48]	; 0xffffffd0
    4ec8:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    4ecc:	mov	r1, #1627389952	; 0x61000000
    4ed0:	teq	r1, r0, lsl #24
    4ed4:	bne	5004 <MyGame_Example_Monster_parse_json_table+0x2774>
    4ed8:	b	4edc <MyGame_Example_Monster_parse_json_table+0x264c>
    4edc:	ldr	r0, [fp, #-8]
    4ee0:	ldr	r1, [fp, #-12]
    4ee4:	str	r1, [fp, #-40]	; 0xffffffd8
    4ee8:	ldr	r2, [fp, #-16]
    4eec:	movw	r3, #1
    4ef0:	bl	7168 <flatcc_json_parser_match_symbol>
    4ef4:	str	r0, [fp, #-12]
    4ef8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4efc:	ldr	r1, [fp, #-12]
    4f00:	cmp	r0, r1
    4f04:	beq	4fec <MyGame_Example_Monster_parse_json_table+0x275c>
    4f08:	movw	r0, #0
    4f0c:	str	r0, [fp, #-84]	; 0xffffffac
    4f10:	ldr	r0, [fp, #-8]
    4f14:	ldr	r1, [fp, #-12]
    4f18:	str	r1, [fp, #-40]	; 0xffffffd8
    4f1c:	ldr	r2, [fp, #-16]
    4f20:	sub	r3, fp, #84	; 0x54
    4f24:	bl	b484 <flatcc_json_parser_int32>
    4f28:	str	r0, [fp, #-12]
    4f2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4f30:	ldr	r1, [fp, #-12]
    4f34:	cmp	r0, r1
    4f38:	bne	4f8c <MyGame_Example_Monster_parse_json_table+0x26fc>
    4f3c:	ldr	r0, [fp, #-8]
    4f40:	ldr	r1, [fp, #-12]
    4f44:	str	r1, [fp, #-40]	; 0xffffffd8
    4f48:	ldr	r2, [fp, #-16]
    4f4c:	movw	r3, #0
    4f50:	movt	r3, #0
    4f54:	sub	ip, fp, #84	; 0x54
    4f58:	str	ip, [sp]
    4f5c:	bl	b55c <flatcc_json_parser_symbolic_int32>
    4f60:	str	r0, [fp, #-12]
    4f64:	ldr	r0, [fp, #-12]
    4f68:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4f6c:	cmp	r0, r1
    4f70:	beq	4f84 <MyGame_Example_Monster_parse_json_table+0x26f4>
    4f74:	ldr	r0, [fp, #-12]
    4f78:	ldr	r1, [fp, #-16]
    4f7c:	cmp	r0, r1
    4f80:	bne	4f88 <MyGame_Example_Monster_parse_json_table+0x26f8>
    4f84:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4f88:	b	4f8c <MyGame_Example_Monster_parse_json_table+0x26fc>
    4f8c:	ldr	r0, [fp, #-84]	; 0xffffffac
    4f90:	cmp	r0, #0
    4f94:	bne	4fac <MyGame_Example_Monster_parse_json_table+0x271c>
    4f98:	ldr	r0, [fp, #-8]
    4f9c:	ldr	r0, [r0, #8]
    4fa0:	and	r0, r0, #2
    4fa4:	cmp	r0, #0
    4fa8:	beq	4fe8 <MyGame_Example_Monster_parse_json_table+0x2758>
    4fac:	ldr	r0, [fp, #-8]
    4fb0:	ldr	r0, [r0]
    4fb4:	movw	r1, #20
    4fb8:	movw	r2, #4
    4fbc:	movw	r3, #4
    4fc0:	uxth	r3, r3
    4fc4:	bl	0 <flatcc_builder_table_add>
    4fc8:	str	r0, [fp, #-28]	; 0xffffffe4
    4fcc:	movw	r1, #0
    4fd0:	cmp	r0, r1
    4fd4:	bne	4fdc <MyGame_Example_Monster_parse_json_table+0x274c>
    4fd8:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    4fdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4fe0:	ldr	r1, [fp, #-84]	; 0xffffffac
    4fe4:	bl	b784 <flatbuffers_int32_write_to_pe>
    4fe8:	b	5000 <MyGame_Example_Monster_parse_json_table+0x2770>
    4fec:	ldr	r0, [fp, #-8]
    4ff0:	ldr	r1, [fp, #-12]
    4ff4:	ldr	r2, [fp, #-16]
    4ff8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4ffc:	str	r0, [fp, #-12]
    5000:	b	5018 <MyGame_Example_Monster_parse_json_table+0x2788>
    5004:	ldr	r0, [fp, #-8]
    5008:	ldr	r1, [fp, #-12]
    500c:	ldr	r2, [fp, #-16]
    5010:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5014:	str	r0, [fp, #-12]
    5018:	b	501c <MyGame_Example_Monster_parse_json_table+0x278c>
    501c:	b	5034 <MyGame_Example_Monster_parse_json_table+0x27a4>
    5020:	ldr	r0, [fp, #-8]
    5024:	ldr	r1, [fp, #-12]
    5028:	ldr	r2, [fp, #-16]
    502c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5030:	str	r0, [fp, #-12]
    5034:	b	5910 <MyGame_Example_Monster_parse_json_table+0x3080>
    5038:	ldr	r0, [fp, #-48]	; 0xffffffd0
    503c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5040:	movw	r2, #30256	; 0x7630
    5044:	movt	r2, #26222	; 0x666e
    5048:	subs	r0, r2, r0
    504c:	movw	r2, #12895	; 0x325f
    5050:	movt	r2, #30003	; 0x7533
    5054:	sbcs	r1, r2, r1
    5058:	bcc	5358 <MyGame_Example_Monster_parse_json_table+0x2ac8>
    505c:	b	5060 <MyGame_Example_Monster_parse_json_table+0x27d0>
    5060:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5064:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5068:	movw	r2, #13407	; 0x345f
    506c:	movt	r2, #29494	; 0x7336
    5070:	eor	r1, r1, r2
    5074:	movw	r2, #30257	; 0x7631
    5078:	movt	r2, #26222	; 0x666e
    507c:	eor	r0, r0, r2
    5080:	orr	r0, r0, r1
    5084:	cmp	r0, #0
    5088:	bne	5340 <MyGame_Example_Monster_parse_json_table+0x2ab0>
    508c:	b	5090 <MyGame_Example_Monster_parse_json_table+0x2800>
    5090:	ldr	r0, [fp, #-8]
    5094:	ldr	r1, [fp, #-12]
    5098:	str	r1, [fp, #-40]	; 0xffffffd8
    509c:	ldr	r2, [fp, #-16]
    50a0:	movw	r3, #8
    50a4:	bl	7168 <flatcc_json_parser_match_symbol>
    50a8:	str	r0, [fp, #-12]
    50ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    50b0:	ldr	r1, [fp, #-12]
    50b4:	cmp	r0, r1
    50b8:	beq	51b4 <MyGame_Example_Monster_parse_json_table+0x2924>
    50bc:	mov	r0, #0
    50c0:	str	r0, [sp, #100]	; 0x64
    50c4:	str	r0, [sp, #96]	; 0x60
    50c8:	ldr	r0, [fp, #-8]
    50cc:	ldr	r1, [fp, #-12]
    50d0:	str	r1, [fp, #-40]	; 0xffffffd8
    50d4:	ldr	r2, [fp, #-16]
    50d8:	add	r3, sp, #96	; 0x60
    50dc:	bl	b7b0 <flatcc_json_parser_int64>
    50e0:	str	r0, [fp, #-12]
    50e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    50e8:	ldr	r1, [fp, #-12]
    50ec:	cmp	r0, r1
    50f0:	bne	5144 <MyGame_Example_Monster_parse_json_table+0x28b4>
    50f4:	ldr	r0, [fp, #-8]
    50f8:	ldr	r1, [fp, #-12]
    50fc:	str	r1, [fp, #-40]	; 0xffffffd8
    5100:	ldr	r2, [fp, #-16]
    5104:	movw	r3, #0
    5108:	movt	r3, #0
    510c:	add	ip, sp, #96	; 0x60
    5110:	str	ip, [sp]
    5114:	bl	b888 <flatcc_json_parser_symbolic_int64>
    5118:	str	r0, [fp, #-12]
    511c:	ldr	r0, [fp, #-12]
    5120:	ldr	r1, [fp, #-40]	; 0xffffffd8
    5124:	cmp	r0, r1
    5128:	beq	513c <MyGame_Example_Monster_parse_json_table+0x28ac>
    512c:	ldr	r0, [fp, #-12]
    5130:	ldr	r1, [fp, #-16]
    5134:	cmp	r0, r1
    5138:	bne	5140 <MyGame_Example_Monster_parse_json_table+0x28b0>
    513c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5140:	b	5144 <MyGame_Example_Monster_parse_json_table+0x28b4>
    5144:	ldr	r0, [sp, #96]	; 0x60
    5148:	ldr	r1, [sp, #100]	; 0x64
    514c:	orr	r0, r0, r1
    5150:	cmp	r0, #0
    5154:	bne	5170 <MyGame_Example_Monster_parse_json_table+0x28e0>
    5158:	b	515c <MyGame_Example_Monster_parse_json_table+0x28cc>
    515c:	ldr	r0, [fp, #-8]
    5160:	ldr	r0, [r0, #8]
    5164:	and	r0, r0, #2
    5168:	cmp	r0, #0
    516c:	beq	51b0 <MyGame_Example_Monster_parse_json_table+0x2920>
    5170:	ldr	r0, [fp, #-8]
    5174:	ldr	r0, [r0]
    5178:	movw	r1, #18
    517c:	movw	r2, #8
    5180:	movw	r3, #8
    5184:	uxth	r3, r3
    5188:	bl	0 <flatcc_builder_table_add>
    518c:	str	r0, [fp, #-28]	; 0xffffffe4
    5190:	movw	r1, #0
    5194:	cmp	r0, r1
    5198:	bne	51a0 <MyGame_Example_Monster_parse_json_table+0x2910>
    519c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    51a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    51a4:	ldr	r2, [sp, #96]	; 0x60
    51a8:	ldr	r3, [sp, #100]	; 0x64
    51ac:	bl	bac8 <flatbuffers_int64_write_to_pe>
    51b0:	b	533c <MyGame_Example_Monster_parse_json_table+0x2aac>
    51b4:	ldr	r0, [fp, #-12]
    51b8:	add	r0, r0, #8
    51bc:	str	r0, [fp, #-12]
    51c0:	ldr	r0, [fp, #-12]
    51c4:	ldr	r1, [fp, #-16]
    51c8:	bl	7130 <flatcc_json_parser_symbol_part>
    51cc:	str	r1, [fp, #-44]	; 0xffffffd4
    51d0:	str	r0, [fp, #-48]	; 0xffffffd0
    51d4:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    51d8:	mov	r1, #1627389952	; 0x61000000
    51dc:	teq	r1, r0, lsl #24
    51e0:	bne	5324 <MyGame_Example_Monster_parse_json_table+0x2a94>
    51e4:	b	51e8 <MyGame_Example_Monster_parse_json_table+0x2958>
    51e8:	ldr	r0, [fp, #-8]
    51ec:	ldr	r1, [fp, #-12]
    51f0:	str	r1, [fp, #-40]	; 0xffffffd8
    51f4:	ldr	r2, [fp, #-16]
    51f8:	movw	r3, #1
    51fc:	bl	7168 <flatcc_json_parser_match_symbol>
    5200:	str	r0, [fp, #-12]
    5204:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5208:	ldr	r1, [fp, #-12]
    520c:	cmp	r0, r1
    5210:	beq	530c <MyGame_Example_Monster_parse_json_table+0x2a7c>
    5214:	mov	r0, #0
    5218:	str	r0, [sp, #92]	; 0x5c
    521c:	str	r0, [sp, #88]	; 0x58
    5220:	ldr	r0, [fp, #-8]
    5224:	ldr	r1, [fp, #-12]
    5228:	str	r1, [fp, #-40]	; 0xffffffd8
    522c:	ldr	r2, [fp, #-16]
    5230:	add	r3, sp, #88	; 0x58
    5234:	bl	b7b0 <flatcc_json_parser_int64>
    5238:	str	r0, [fp, #-12]
    523c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5240:	ldr	r1, [fp, #-12]
    5244:	cmp	r0, r1
    5248:	bne	529c <MyGame_Example_Monster_parse_json_table+0x2a0c>
    524c:	ldr	r0, [fp, #-8]
    5250:	ldr	r1, [fp, #-12]
    5254:	str	r1, [fp, #-40]	; 0xffffffd8
    5258:	ldr	r2, [fp, #-16]
    525c:	movw	r3, #0
    5260:	movt	r3, #0
    5264:	add	ip, sp, #88	; 0x58
    5268:	str	ip, [sp]
    526c:	bl	b888 <flatcc_json_parser_symbolic_int64>
    5270:	str	r0, [fp, #-12]
    5274:	ldr	r0, [fp, #-12]
    5278:	ldr	r1, [fp, #-40]	; 0xffffffd8
    527c:	cmp	r0, r1
    5280:	beq	5294 <MyGame_Example_Monster_parse_json_table+0x2a04>
    5284:	ldr	r0, [fp, #-12]
    5288:	ldr	r1, [fp, #-16]
    528c:	cmp	r0, r1
    5290:	bne	5298 <MyGame_Example_Monster_parse_json_table+0x2a08>
    5294:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5298:	b	529c <MyGame_Example_Monster_parse_json_table+0x2a0c>
    529c:	ldr	r0, [sp, #88]	; 0x58
    52a0:	ldr	r1, [sp, #92]	; 0x5c
    52a4:	orr	r0, r0, r1
    52a8:	cmp	r0, #0
    52ac:	bne	52c8 <MyGame_Example_Monster_parse_json_table+0x2a38>
    52b0:	b	52b4 <MyGame_Example_Monster_parse_json_table+0x2a24>
    52b4:	ldr	r0, [fp, #-8]
    52b8:	ldr	r0, [r0, #8]
    52bc:	and	r0, r0, #2
    52c0:	cmp	r0, #0
    52c4:	beq	5308 <MyGame_Example_Monster_parse_json_table+0x2a78>
    52c8:	ldr	r0, [fp, #-8]
    52cc:	ldr	r0, [r0]
    52d0:	movw	r1, #22
    52d4:	movw	r2, #8
    52d8:	movw	r3, #8
    52dc:	uxth	r3, r3
    52e0:	bl	0 <flatcc_builder_table_add>
    52e4:	str	r0, [fp, #-28]	; 0xffffffe4
    52e8:	movw	r1, #0
    52ec:	cmp	r0, r1
    52f0:	bne	52f8 <MyGame_Example_Monster_parse_json_table+0x2a68>
    52f4:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    52f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    52fc:	ldr	r2, [sp, #88]	; 0x58
    5300:	ldr	r3, [sp, #92]	; 0x5c
    5304:	bl	bac8 <flatbuffers_int64_write_to_pe>
    5308:	b	5320 <MyGame_Example_Monster_parse_json_table+0x2a90>
    530c:	ldr	r0, [fp, #-8]
    5310:	ldr	r1, [fp, #-12]
    5314:	ldr	r2, [fp, #-16]
    5318:	bl	0 <flatcc_json_parser_unmatched_symbol>
    531c:	str	r0, [fp, #-12]
    5320:	b	5338 <MyGame_Example_Monster_parse_json_table+0x2aa8>
    5324:	ldr	r0, [fp, #-8]
    5328:	ldr	r1, [fp, #-12]
    532c:	ldr	r2, [fp, #-16]
    5330:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5334:	str	r0, [fp, #-12]
    5338:	b	533c <MyGame_Example_Monster_parse_json_table+0x2aac>
    533c:	b	5354 <MyGame_Example_Monster_parse_json_table+0x2ac4>
    5340:	ldr	r0, [fp, #-8]
    5344:	ldr	r1, [fp, #-12]
    5348:	ldr	r2, [fp, #-16]
    534c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5350:	str	r0, [fp, #-12]
    5354:	b	590c <MyGame_Example_Monster_parse_json_table+0x307c>
    5358:	ldr	r0, [fp, #-48]	; 0xffffffd0
    535c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5360:	movw	r2, #12895	; 0x325f
    5364:	movt	r2, #30003	; 0x7533
    5368:	eor	r1, r1, r2
    536c:	movw	r2, #30257	; 0x7631
    5370:	movt	r2, #26222	; 0x666e
    5374:	eor	r0, r0, r2
    5378:	orr	r0, r0, r1
    537c:	cmp	r0, #0
    5380:	bne	5610 <MyGame_Example_Monster_parse_json_table+0x2d80>
    5384:	b	5388 <MyGame_Example_Monster_parse_json_table+0x2af8>
    5388:	ldr	r0, [fp, #-8]
    538c:	ldr	r1, [fp, #-12]
    5390:	str	r1, [fp, #-40]	; 0xffffffd8
    5394:	ldr	r2, [fp, #-16]
    5398:	movw	r3, #8
    539c:	bl	7168 <flatcc_json_parser_match_symbol>
    53a0:	str	r0, [fp, #-12]
    53a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    53a8:	ldr	r1, [fp, #-12]
    53ac:	cmp	r0, r1
    53b0:	beq	5498 <MyGame_Example_Monster_parse_json_table+0x2c08>
    53b4:	movw	r0, #0
    53b8:	str	r0, [sp, #84]	; 0x54
    53bc:	ldr	r0, [fp, #-8]
    53c0:	ldr	r1, [fp, #-12]
    53c4:	str	r1, [fp, #-40]	; 0xffffffd8
    53c8:	ldr	r2, [fp, #-16]
    53cc:	add	r3, sp, #84	; 0x54
    53d0:	bl	bb00 <flatcc_json_parser_uint32>
    53d4:	str	r0, [fp, #-12]
    53d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    53dc:	ldr	r1, [fp, #-12]
    53e0:	cmp	r0, r1
    53e4:	bne	5438 <MyGame_Example_Monster_parse_json_table+0x2ba8>
    53e8:	ldr	r0, [fp, #-8]
    53ec:	ldr	r1, [fp, #-12]
    53f0:	str	r1, [fp, #-40]	; 0xffffffd8
    53f4:	ldr	r2, [fp, #-16]
    53f8:	movw	r3, #0
    53fc:	movt	r3, #0
    5400:	add	ip, sp, #84	; 0x54
    5404:	str	ip, [sp]
    5408:	bl	bbd8 <flatcc_json_parser_symbolic_uint32>
    540c:	str	r0, [fp, #-12]
    5410:	ldr	r0, [fp, #-12]
    5414:	ldr	r1, [fp, #-40]	; 0xffffffd8
    5418:	cmp	r0, r1
    541c:	beq	5430 <MyGame_Example_Monster_parse_json_table+0x2ba0>
    5420:	ldr	r0, [fp, #-12]
    5424:	ldr	r1, [fp, #-16]
    5428:	cmp	r0, r1
    542c:	bne	5434 <MyGame_Example_Monster_parse_json_table+0x2ba4>
    5430:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5434:	b	5438 <MyGame_Example_Monster_parse_json_table+0x2ba8>
    5438:	ldr	r0, [sp, #84]	; 0x54
    543c:	cmp	r0, #0
    5440:	bne	5458 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    5444:	ldr	r0, [fp, #-8]
    5448:	ldr	r0, [r0, #8]
    544c:	and	r0, r0, #2
    5450:	cmp	r0, #0
    5454:	beq	5494 <MyGame_Example_Monster_parse_json_table+0x2c04>
    5458:	ldr	r0, [fp, #-8]
    545c:	ldr	r0, [r0]
    5460:	movw	r1, #17
    5464:	movw	r2, #4
    5468:	movw	r3, #4
    546c:	uxth	r3, r3
    5470:	bl	0 <flatcc_builder_table_add>
    5474:	str	r0, [fp, #-28]	; 0xffffffe4
    5478:	movw	r1, #0
    547c:	cmp	r0, r1
    5480:	bne	5488 <MyGame_Example_Monster_parse_json_table+0x2bf8>
    5484:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5488:	ldr	r0, [fp, #-28]	; 0xffffffe4
    548c:	ldr	r1, [sp, #84]	; 0x54
    5490:	bl	be00 <flatbuffers_uint32_write_to_pe>
    5494:	b	560c <MyGame_Example_Monster_parse_json_table+0x2d7c>
    5498:	ldr	r0, [fp, #-12]
    549c:	add	r0, r0, #8
    54a0:	str	r0, [fp, #-12]
    54a4:	ldr	r0, [fp, #-12]
    54a8:	ldr	r1, [fp, #-16]
    54ac:	bl	7130 <flatcc_json_parser_symbol_part>
    54b0:	str	r1, [fp, #-44]	; 0xffffffd4
    54b4:	str	r0, [fp, #-48]	; 0xffffffd0
    54b8:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    54bc:	mov	r1, #1627389952	; 0x61000000
    54c0:	teq	r1, r0, lsl #24
    54c4:	bne	55f4 <MyGame_Example_Monster_parse_json_table+0x2d64>
    54c8:	b	54cc <MyGame_Example_Monster_parse_json_table+0x2c3c>
    54cc:	ldr	r0, [fp, #-8]
    54d0:	ldr	r1, [fp, #-12]
    54d4:	str	r1, [fp, #-40]	; 0xffffffd8
    54d8:	ldr	r2, [fp, #-16]
    54dc:	movw	r3, #1
    54e0:	bl	7168 <flatcc_json_parser_match_symbol>
    54e4:	str	r0, [fp, #-12]
    54e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    54ec:	ldr	r1, [fp, #-12]
    54f0:	cmp	r0, r1
    54f4:	beq	55dc <MyGame_Example_Monster_parse_json_table+0x2d4c>
    54f8:	movw	r0, #0
    54fc:	str	r0, [sp, #80]	; 0x50
    5500:	ldr	r0, [fp, #-8]
    5504:	ldr	r1, [fp, #-12]
    5508:	str	r1, [fp, #-40]	; 0xffffffd8
    550c:	ldr	r2, [fp, #-16]
    5510:	add	r3, sp, #80	; 0x50
    5514:	bl	bb00 <flatcc_json_parser_uint32>
    5518:	str	r0, [fp, #-12]
    551c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5520:	ldr	r1, [fp, #-12]
    5524:	cmp	r0, r1
    5528:	bne	557c <MyGame_Example_Monster_parse_json_table+0x2cec>
    552c:	ldr	r0, [fp, #-8]
    5530:	ldr	r1, [fp, #-12]
    5534:	str	r1, [fp, #-40]	; 0xffffffd8
    5538:	ldr	r2, [fp, #-16]
    553c:	movw	r3, #0
    5540:	movt	r3, #0
    5544:	add	ip, sp, #80	; 0x50
    5548:	str	ip, [sp]
    554c:	bl	bbd8 <flatcc_json_parser_symbolic_uint32>
    5550:	str	r0, [fp, #-12]
    5554:	ldr	r0, [fp, #-12]
    5558:	ldr	r1, [fp, #-40]	; 0xffffffd8
    555c:	cmp	r0, r1
    5560:	beq	5574 <MyGame_Example_Monster_parse_json_table+0x2ce4>
    5564:	ldr	r0, [fp, #-12]
    5568:	ldr	r1, [fp, #-16]
    556c:	cmp	r0, r1
    5570:	bne	5578 <MyGame_Example_Monster_parse_json_table+0x2ce8>
    5574:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5578:	b	557c <MyGame_Example_Monster_parse_json_table+0x2cec>
    557c:	ldr	r0, [sp, #80]	; 0x50
    5580:	cmp	r0, #0
    5584:	bne	559c <MyGame_Example_Monster_parse_json_table+0x2d0c>
    5588:	ldr	r0, [fp, #-8]
    558c:	ldr	r0, [r0, #8]
    5590:	and	r0, r0, #2
    5594:	cmp	r0, #0
    5598:	beq	55d8 <MyGame_Example_Monster_parse_json_table+0x2d48>
    559c:	ldr	r0, [fp, #-8]
    55a0:	ldr	r0, [r0]
    55a4:	movw	r1, #21
    55a8:	movw	r2, #4
    55ac:	movw	r3, #4
    55b0:	uxth	r3, r3
    55b4:	bl	0 <flatcc_builder_table_add>
    55b8:	str	r0, [fp, #-28]	; 0xffffffe4
    55bc:	movw	r1, #0
    55c0:	cmp	r0, r1
    55c4:	bne	55cc <MyGame_Example_Monster_parse_json_table+0x2d3c>
    55c8:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    55cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    55d0:	ldr	r1, [sp, #80]	; 0x50
    55d4:	bl	be00 <flatbuffers_uint32_write_to_pe>
    55d8:	b	55f0 <MyGame_Example_Monster_parse_json_table+0x2d60>
    55dc:	ldr	r0, [fp, #-8]
    55e0:	ldr	r1, [fp, #-12]
    55e4:	ldr	r2, [fp, #-16]
    55e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    55ec:	str	r0, [fp, #-12]
    55f0:	b	5608 <MyGame_Example_Monster_parse_json_table+0x2d78>
    55f4:	ldr	r0, [fp, #-8]
    55f8:	ldr	r1, [fp, #-12]
    55fc:	ldr	r2, [fp, #-16]
    5600:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5604:	str	r0, [fp, #-12]
    5608:	b	560c <MyGame_Example_Monster_parse_json_table+0x2d7c>
    560c:	b	5908 <MyGame_Example_Monster_parse_json_table+0x3078>
    5610:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5614:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5618:	movw	r2, #13407	; 0x345f
    561c:	movt	r2, #30006	; 0x7536
    5620:	eor	r1, r1, r2
    5624:	movw	r2, #30257	; 0x7631
    5628:	movt	r2, #26222	; 0x666e
    562c:	eor	r0, r0, r2
    5630:	orr	r0, r0, r1
    5634:	cmp	r0, #0
    5638:	bne	58f0 <MyGame_Example_Monster_parse_json_table+0x3060>
    563c:	b	5640 <MyGame_Example_Monster_parse_json_table+0x2db0>
    5640:	ldr	r0, [fp, #-8]
    5644:	ldr	r1, [fp, #-12]
    5648:	str	r1, [fp, #-40]	; 0xffffffd8
    564c:	ldr	r2, [fp, #-16]
    5650:	movw	r3, #8
    5654:	bl	7168 <flatcc_json_parser_match_symbol>
    5658:	str	r0, [fp, #-12]
    565c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5660:	ldr	r1, [fp, #-12]
    5664:	cmp	r0, r1
    5668:	beq	5764 <MyGame_Example_Monster_parse_json_table+0x2ed4>
    566c:	mov	r0, #0
    5670:	str	r0, [sp, #76]	; 0x4c
    5674:	str	r0, [sp, #72]	; 0x48
    5678:	ldr	r0, [fp, #-8]
    567c:	ldr	r1, [fp, #-12]
    5680:	str	r1, [fp, #-40]	; 0xffffffd8
    5684:	ldr	r2, [fp, #-16]
    5688:	add	r3, sp, #72	; 0x48
    568c:	bl	be2c <flatcc_json_parser_uint64>
    5690:	str	r0, [fp, #-12]
    5694:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5698:	ldr	r1, [fp, #-12]
    569c:	cmp	r0, r1
    56a0:	bne	56f4 <MyGame_Example_Monster_parse_json_table+0x2e64>
    56a4:	ldr	r0, [fp, #-8]
    56a8:	ldr	r1, [fp, #-12]
    56ac:	str	r1, [fp, #-40]	; 0xffffffd8
    56b0:	ldr	r2, [fp, #-16]
    56b4:	movw	r3, #0
    56b8:	movt	r3, #0
    56bc:	add	ip, sp, #72	; 0x48
    56c0:	str	ip, [sp]
    56c4:	bl	bf04 <flatcc_json_parser_symbolic_uint64>
    56c8:	str	r0, [fp, #-12]
    56cc:	ldr	r0, [fp, #-12]
    56d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    56d4:	cmp	r0, r1
    56d8:	beq	56ec <MyGame_Example_Monster_parse_json_table+0x2e5c>
    56dc:	ldr	r0, [fp, #-12]
    56e0:	ldr	r1, [fp, #-16]
    56e4:	cmp	r0, r1
    56e8:	bne	56f0 <MyGame_Example_Monster_parse_json_table+0x2e60>
    56ec:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    56f0:	b	56f4 <MyGame_Example_Monster_parse_json_table+0x2e64>
    56f4:	ldr	r0, [sp, #72]	; 0x48
    56f8:	ldr	r1, [sp, #76]	; 0x4c
    56fc:	orr	r0, r0, r1
    5700:	cmp	r0, #0
    5704:	bne	5720 <MyGame_Example_Monster_parse_json_table+0x2e90>
    5708:	b	570c <MyGame_Example_Monster_parse_json_table+0x2e7c>
    570c:	ldr	r0, [fp, #-8]
    5710:	ldr	r0, [r0, #8]
    5714:	and	r0, r0, #2
    5718:	cmp	r0, #0
    571c:	beq	5760 <MyGame_Example_Monster_parse_json_table+0x2ed0>
    5720:	ldr	r0, [fp, #-8]
    5724:	ldr	r0, [r0]
    5728:	movw	r1, #19
    572c:	movw	r2, #8
    5730:	movw	r3, #8
    5734:	uxth	r3, r3
    5738:	bl	0 <flatcc_builder_table_add>
    573c:	str	r0, [fp, #-28]	; 0xffffffe4
    5740:	movw	r1, #0
    5744:	cmp	r0, r1
    5748:	bne	5750 <MyGame_Example_Monster_parse_json_table+0x2ec0>
    574c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5750:	ldr	r0, [fp, #-28]	; 0xffffffe4
    5754:	ldr	r2, [sp, #72]	; 0x48
    5758:	ldr	r3, [sp, #76]	; 0x4c
    575c:	bl	c144 <flatbuffers_uint64_write_to_pe>
    5760:	b	58ec <MyGame_Example_Monster_parse_json_table+0x305c>
    5764:	ldr	r0, [fp, #-12]
    5768:	add	r0, r0, #8
    576c:	str	r0, [fp, #-12]
    5770:	ldr	r0, [fp, #-12]
    5774:	ldr	r1, [fp, #-16]
    5778:	bl	7130 <flatcc_json_parser_symbol_part>
    577c:	str	r1, [fp, #-44]	; 0xffffffd4
    5780:	str	r0, [fp, #-48]	; 0xffffffd0
    5784:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    5788:	mov	r1, #1627389952	; 0x61000000
    578c:	teq	r1, r0, lsl #24
    5790:	bne	58d4 <MyGame_Example_Monster_parse_json_table+0x3044>
    5794:	b	5798 <MyGame_Example_Monster_parse_json_table+0x2f08>
    5798:	ldr	r0, [fp, #-8]
    579c:	ldr	r1, [fp, #-12]
    57a0:	str	r1, [fp, #-40]	; 0xffffffd8
    57a4:	ldr	r2, [fp, #-16]
    57a8:	movw	r3, #1
    57ac:	bl	7168 <flatcc_json_parser_match_symbol>
    57b0:	str	r0, [fp, #-12]
    57b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    57b8:	ldr	r1, [fp, #-12]
    57bc:	cmp	r0, r1
    57c0:	beq	58bc <MyGame_Example_Monster_parse_json_table+0x302c>
    57c4:	mov	r0, #0
    57c8:	str	r0, [sp, #68]	; 0x44
    57cc:	str	r0, [sp, #64]	; 0x40
    57d0:	ldr	r0, [fp, #-8]
    57d4:	ldr	r1, [fp, #-12]
    57d8:	str	r1, [fp, #-40]	; 0xffffffd8
    57dc:	ldr	r2, [fp, #-16]
    57e0:	add	r3, sp, #64	; 0x40
    57e4:	bl	be2c <flatcc_json_parser_uint64>
    57e8:	str	r0, [fp, #-12]
    57ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    57f0:	ldr	r1, [fp, #-12]
    57f4:	cmp	r0, r1
    57f8:	bne	584c <MyGame_Example_Monster_parse_json_table+0x2fbc>
    57fc:	ldr	r0, [fp, #-8]
    5800:	ldr	r1, [fp, #-12]
    5804:	str	r1, [fp, #-40]	; 0xffffffd8
    5808:	ldr	r2, [fp, #-16]
    580c:	movw	r3, #0
    5810:	movt	r3, #0
    5814:	add	ip, sp, #64	; 0x40
    5818:	str	ip, [sp]
    581c:	bl	bf04 <flatcc_json_parser_symbolic_uint64>
    5820:	str	r0, [fp, #-12]
    5824:	ldr	r0, [fp, #-12]
    5828:	ldr	r1, [fp, #-40]	; 0xffffffd8
    582c:	cmp	r0, r1
    5830:	beq	5844 <MyGame_Example_Monster_parse_json_table+0x2fb4>
    5834:	ldr	r0, [fp, #-12]
    5838:	ldr	r1, [fp, #-16]
    583c:	cmp	r0, r1
    5840:	bne	5848 <MyGame_Example_Monster_parse_json_table+0x2fb8>
    5844:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5848:	b	584c <MyGame_Example_Monster_parse_json_table+0x2fbc>
    584c:	ldr	r0, [sp, #64]	; 0x40
    5850:	ldr	r1, [sp, #68]	; 0x44
    5854:	orr	r0, r0, r1
    5858:	cmp	r0, #0
    585c:	bne	5878 <MyGame_Example_Monster_parse_json_table+0x2fe8>
    5860:	b	5864 <MyGame_Example_Monster_parse_json_table+0x2fd4>
    5864:	ldr	r0, [fp, #-8]
    5868:	ldr	r0, [r0, #8]
    586c:	and	r0, r0, #2
    5870:	cmp	r0, #0
    5874:	beq	58b8 <MyGame_Example_Monster_parse_json_table+0x3028>
    5878:	ldr	r0, [fp, #-8]
    587c:	ldr	r0, [r0]
    5880:	movw	r1, #23
    5884:	movw	r2, #8
    5888:	movw	r3, #8
    588c:	uxth	r3, r3
    5890:	bl	0 <flatcc_builder_table_add>
    5894:	str	r0, [fp, #-28]	; 0xffffffe4
    5898:	movw	r1, #0
    589c:	cmp	r0, r1
    58a0:	bne	58a8 <MyGame_Example_Monster_parse_json_table+0x3018>
    58a4:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    58a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    58ac:	ldr	r2, [sp, #64]	; 0x40
    58b0:	ldr	r3, [sp, #68]	; 0x44
    58b4:	bl	c144 <flatbuffers_uint64_write_to_pe>
    58b8:	b	58d0 <MyGame_Example_Monster_parse_json_table+0x3040>
    58bc:	ldr	r0, [fp, #-8]
    58c0:	ldr	r1, [fp, #-12]
    58c4:	ldr	r2, [fp, #-16]
    58c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    58cc:	str	r0, [fp, #-12]
    58d0:	b	58e8 <MyGame_Example_Monster_parse_json_table+0x3058>
    58d4:	ldr	r0, [fp, #-8]
    58d8:	ldr	r1, [fp, #-12]
    58dc:	ldr	r2, [fp, #-16]
    58e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    58e4:	str	r0, [fp, #-12]
    58e8:	b	58ec <MyGame_Example_Monster_parse_json_table+0x305c>
    58ec:	b	5904 <MyGame_Example_Monster_parse_json_table+0x3074>
    58f0:	ldr	r0, [fp, #-8]
    58f4:	ldr	r1, [fp, #-12]
    58f8:	ldr	r2, [fp, #-16]
    58fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5900:	str	r0, [fp, #-12]
    5904:	b	5908 <MyGame_Example_Monster_parse_json_table+0x3078>
    5908:	b	590c <MyGame_Example_Monster_parse_json_table+0x307c>
    590c:	b	5910 <MyGame_Example_Monster_parse_json_table+0x3080>
    5910:	b	611c <MyGame_Example_Monster_parse_json_table+0x388c>
    5914:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5918:	ldr	r1, [fp, #-44]	; 0xffffffd4
    591c:	movw	r2, #24430	; 0x5f6e
    5920:	movt	r2, #28530	; 0x6f72
    5924:	subs	r0, r2, r0
    5928:	movw	r2, #25460	; 0x6374
    592c:	movt	r2, #30309	; 0x7665
    5930:	sbcs	r1, r2, r1
    5934:	bcc	5c78 <MyGame_Example_Monster_parse_json_table+0x33e8>
    5938:	b	593c <MyGame_Example_Monster_parse_json_table+0x30ac>
    593c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5940:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5944:	movw	r2, #29556	; 0x7374
    5948:	movt	r2, #29797	; 0x7465
    594c:	eor	r1, r1, r2
    5950:	movw	r2, #29556	; 0x7374
    5954:	movt	r2, #28261	; 0x6e65
    5958:	eor	r0, r0, r2
    595c:	orr	r0, r0, r1
    5960:	cmp	r0, #0
    5964:	bne	5c60 <MyGame_Example_Monster_parse_json_table+0x33d0>
    5968:	b	596c <MyGame_Example_Monster_parse_json_table+0x30dc>
    596c:	ldr	r0, [fp, #-12]
    5970:	add	r0, r0, #8
    5974:	str	r0, [fp, #-12]
    5978:	ldr	r0, [fp, #-12]
    597c:	ldr	r1, [fp, #-16]
    5980:	bl	7130 <flatcc_json_parser_symbol_part>
    5984:	str	r1, [fp, #-44]	; 0xffffffd4
    5988:	str	r0, [fp, #-48]	; 0xffffffd0
    598c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5990:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5994:	movw	r2, #26220	; 0x666c
    5998:	movt	r2, #25956	; 0x6564
    599c:	eor	r1, r1, r2
    59a0:	movw	r2, #25205	; 0x6275
    59a4:	movt	r2, #24948	; 0x6174
    59a8:	eor	r0, r0, r2
    59ac:	orr	r0, r0, r1
    59b0:	cmp	r0, #0
    59b4:	bne	5c48 <MyGame_Example_Monster_parse_json_table+0x33b8>
    59b8:	b	59bc <MyGame_Example_Monster_parse_json_table+0x312c>
    59bc:	ldr	r0, [fp, #-12]
    59c0:	add	r0, r0, #8
    59c4:	str	r0, [fp, #-12]
    59c8:	ldr	r0, [fp, #-12]
    59cc:	ldr	r1, [fp, #-16]
    59d0:	bl	7130 <flatcc_json_parser_symbol_part>
    59d4:	str	r1, [fp, #-44]	; 0xffffffd4
    59d8:	str	r0, [fp, #-48]	; 0xffffffd0
    59dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    59e0:	movw	r1, #25970	; 0x6572
    59e4:	movt	r1, #26214	; 0x6666
    59e8:	teq	r0, r1
    59ec:	bne	5c30 <MyGame_Example_Monster_parse_json_table+0x33a0>
    59f0:	b	59f4 <MyGame_Example_Monster_parse_json_table+0x3164>
    59f4:	ldr	r0, [fp, #-8]
    59f8:	ldr	r1, [fp, #-12]
    59fc:	str	r1, [fp, #-40]	; 0xffffffd8
    5a00:	ldr	r2, [fp, #-16]
    5a04:	movw	r3, #4
    5a08:	bl	7168 <flatcc_json_parser_match_symbol>
    5a0c:	str	r0, [fp, #-12]
    5a10:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5a14:	ldr	r1, [fp, #-12]
    5a18:	cmp	r0, r1
    5a1c:	beq	5c18 <MyGame_Example_Monster_parse_json_table+0x3388>
    5a20:	ldr	r0, [fp, #-12]
    5a24:	ldr	r1, [fp, #-16]
    5a28:	cmp	r0, r1
    5a2c:	beq	5b70 <MyGame_Example_Monster_parse_json_table+0x32e0>
    5a30:	ldr	r0, [fp, #-12]
    5a34:	ldrb	r0, [r0]
    5a38:	cmp	r0, #91	; 0x5b
    5a3c:	bne	5b70 <MyGame_Example_Monster_parse_json_table+0x32e0>
    5a40:	ldr	r0, [fp, #-8]
    5a44:	ldr	r0, [r0]
    5a48:	movw	r1, #1
    5a4c:	movw	r2, #1
    5a50:	uxth	r2, r2
    5a54:	mvn	r3, #0
    5a58:	bl	0 <flatcc_builder_start_vector>
    5a5c:	cmp	r0, #0
    5a60:	beq	5a68 <MyGame_Example_Monster_parse_json_table+0x31d8>
    5a64:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5a68:	ldr	r0, [fp, #-8]
    5a6c:	ldr	r1, [fp, #-12]
    5a70:	ldr	r2, [fp, #-16]
    5a74:	sub	r3, fp, #24
    5a78:	bl	89b8 <flatcc_json_parser_array_start>
    5a7c:	str	r0, [fp, #-12]
    5a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5a84:	cmp	r0, #0
    5a88:	beq	5b5c <MyGame_Example_Monster_parse_json_table+0x32cc>
    5a8c:	movw	r0, #0
    5a90:	strb	r0, [sp, #63]	; 0x3f
    5a94:	ldr	r0, [fp, #-8]
    5a98:	ldr	r0, [r0]
    5a9c:	movw	r1, #1
    5aa0:	bl	0 <flatcc_builder_extend_vector>
    5aa4:	str	r0, [fp, #-28]	; 0xffffffe4
    5aa8:	movw	r1, #0
    5aac:	cmp	r0, r1
    5ab0:	bne	5ab8 <MyGame_Example_Monster_parse_json_table+0x3228>
    5ab4:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5ab8:	ldr	r0, [fp, #-8]
    5abc:	ldr	r1, [fp, #-12]
    5ac0:	str	r1, [fp, #-40]	; 0xffffffd8
    5ac4:	ldr	r2, [fp, #-16]
    5ac8:	add	r3, sp, #63	; 0x3f
    5acc:	bl	8a9c <flatcc_json_parser_uint8>
    5ad0:	str	r0, [fp, #-12]
    5ad4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5ad8:	ldr	r1, [fp, #-12]
    5adc:	cmp	r0, r1
    5ae0:	bne	5b34 <MyGame_Example_Monster_parse_json_table+0x32a4>
    5ae4:	ldr	r0, [fp, #-8]
    5ae8:	ldr	r1, [fp, #-12]
    5aec:	str	r1, [fp, #-40]	; 0xffffffd8
    5af0:	ldr	r2, [fp, #-16]
    5af4:	movw	r3, #0
    5af8:	movt	r3, #0
    5afc:	add	ip, sp, #63	; 0x3f
    5b00:	str	ip, [sp]
    5b04:	bl	8b78 <flatcc_json_parser_symbolic_uint8>
    5b08:	str	r0, [fp, #-12]
    5b0c:	ldr	r0, [fp, #-12]
    5b10:	ldr	r1, [fp, #-40]	; 0xffffffd8
    5b14:	cmp	r0, r1
    5b18:	beq	5b2c <MyGame_Example_Monster_parse_json_table+0x329c>
    5b1c:	ldr	r0, [fp, #-12]
    5b20:	ldr	r1, [fp, #-16]
    5b24:	cmp	r0, r1
    5b28:	bne	5b30 <MyGame_Example_Monster_parse_json_table+0x32a0>
    5b2c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5b30:	b	5b34 <MyGame_Example_Monster_parse_json_table+0x32a4>
    5b34:	ldr	r0, [fp, #-28]	; 0xffffffe4
    5b38:	ldrb	r1, [sp, #63]	; 0x3f
    5b3c:	bl	8da4 <flatbuffers_uint8_write_to_pe>
    5b40:	ldr	r0, [fp, #-8]
    5b44:	ldr	r1, [fp, #-12]
    5b48:	ldr	r2, [fp, #-16]
    5b4c:	sub	r3, fp, #24
    5b50:	bl	8dd0 <flatcc_json_parser_array_end>
    5b54:	str	r0, [fp, #-12]
    5b58:	b	5a80 <MyGame_Example_Monster_parse_json_table+0x31f0>
    5b5c:	ldr	r0, [fp, #-8]
    5b60:	ldr	r0, [r0]
    5b64:	bl	0 <flatcc_builder_end_vector>
    5b68:	str	r0, [fp, #-32]	; 0xffffffe0
    5b6c:	b	5bd8 <MyGame_Example_Monster_parse_json_table+0x3348>
    5b70:	ldr	r0, [fp, #-8]
    5b74:	ldr	r0, [r0]
    5b78:	movw	r1, #0
    5b7c:	str	r1, [sp, #20]
    5b80:	movw	r2, #0
    5b84:	uxth	r2, r2
    5b88:	ldr	r3, [sp, #20]
    5b8c:	bl	0 <flatcc_builder_start_buffer>
    5b90:	cmp	r0, #0
    5b94:	beq	5b9c <MyGame_Example_Monster_parse_json_table+0x330c>
    5b98:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5b9c:	ldr	r0, [fp, #-8]
    5ba0:	ldr	r1, [fp, #-12]
    5ba4:	ldr	r2, [fp, #-16]
    5ba8:	sub	r3, fp, #32
    5bac:	bl	2890 <MyGame_Example_Monster_parse_json_table>
    5bb0:	str	r0, [fp, #-12]
    5bb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5bb8:	cmp	r0, #0
    5bbc:	bne	5bc4 <MyGame_Example_Monster_parse_json_table+0x3334>
    5bc0:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5bc4:	ldr	r0, [fp, #-8]
    5bc8:	ldr	r0, [r0]
    5bcc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    5bd0:	bl	0 <flatcc_builder_end_buffer>
    5bd4:	str	r0, [fp, #-32]	; 0xffffffe0
    5bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5bdc:	cmp	r0, #0
    5be0:	beq	5c04 <MyGame_Example_Monster_parse_json_table+0x3374>
    5be4:	ldr	r0, [fp, #-8]
    5be8:	ldr	r0, [r0]
    5bec:	movw	r1, #13
    5bf0:	bl	0 <flatcc_builder_table_add_offset>
    5bf4:	str	r0, [fp, #-36]	; 0xffffffdc
    5bf8:	movw	r1, #0
    5bfc:	cmp	r0, r1
    5c00:	bne	5c08 <MyGame_Example_Monster_parse_json_table+0x3378>
    5c04:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5c08:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5c0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5c10:	str	r0, [r1]
    5c14:	b	5c2c <MyGame_Example_Monster_parse_json_table+0x339c>
    5c18:	ldr	r0, [fp, #-8]
    5c1c:	ldr	r1, [fp, #-12]
    5c20:	ldr	r2, [fp, #-16]
    5c24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5c28:	str	r0, [fp, #-12]
    5c2c:	b	5c44 <MyGame_Example_Monster_parse_json_table+0x33b4>
    5c30:	ldr	r0, [fp, #-8]
    5c34:	ldr	r1, [fp, #-12]
    5c38:	ldr	r2, [fp, #-16]
    5c3c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5c40:	str	r0, [fp, #-12]
    5c44:	b	5c5c <MyGame_Example_Monster_parse_json_table+0x33cc>
    5c48:	ldr	r0, [fp, #-8]
    5c4c:	ldr	r1, [fp, #-12]
    5c50:	ldr	r2, [fp, #-16]
    5c54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5c58:	str	r0, [fp, #-12]
    5c5c:	b	5c74 <MyGame_Example_Monster_parse_json_table+0x33e4>
    5c60:	ldr	r0, [fp, #-8]
    5c64:	ldr	r1, [fp, #-12]
    5c68:	ldr	r2, [fp, #-16]
    5c6c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5c70:	str	r0, [fp, #-12]
    5c74:	b	6118 <MyGame_Example_Monster_parse_json_table+0x3888>
    5c78:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5c7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5c80:	movw	r2, #25460	; 0x6374
    5c84:	movt	r2, #30309	; 0x7665
    5c88:	eor	r1, r1, r2
    5c8c:	movw	r2, #24431	; 0x5f6f
    5c90:	movt	r2, #28530	; 0x6f72
    5c94:	eor	r0, r0, r2
    5c98:	orr	r0, r0, r1
    5c9c:	cmp	r0, #0
    5ca0:	bne	6100 <MyGame_Example_Monster_parse_json_table+0x3870>
    5ca4:	b	5ca8 <MyGame_Example_Monster_parse_json_table+0x3418>
    5ca8:	ldr	r0, [fp, #-12]
    5cac:	add	r0, r0, #8
    5cb0:	str	r0, [fp, #-12]
    5cb4:	ldr	r0, [fp, #-12]
    5cb8:	ldr	r1, [fp, #-16]
    5cbc:	bl	7130 <flatcc_json_parser_symbol_part>
    5cc0:	str	r1, [fp, #-44]	; 0xffffffd4
    5cc4:	str	r0, [fp, #-48]	; 0xffffffd0
    5cc8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5ccc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5cd0:	movw	r2, #25711	; 0x646f
    5cd4:	movt	r2, #26207	; 0x665f
    5cd8:	eor	r1, r1, r2
    5cdc:	movw	r2, #27749	; 0x6c65
    5ce0:	movt	r2, #30050	; 0x7562
    5ce4:	eor	r0, r0, r2
    5ce8:	orr	r0, r0, r1
    5cec:	cmp	r0, #0
    5cf0:	bne	5ef4 <MyGame_Example_Monster_parse_json_table+0x3664>
    5cf4:	b	5cf8 <MyGame_Example_Monster_parse_json_table+0x3468>
    5cf8:	ldr	r0, [fp, #-12]
    5cfc:	add	r0, r0, #8
    5d00:	str	r0, [fp, #-12]
    5d04:	ldr	r0, [fp, #-12]
    5d08:	ldr	r1, [fp, #-16]
    5d0c:	bl	7130 <flatcc_json_parser_symbol_part>
    5d10:	str	r1, [fp, #-44]	; 0xffffffd4
    5d14:	str	r0, [fp, #-48]	; 0xffffffd0
    5d18:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    5d1c:	mov	r1, #1929379840	; 0x73000000
    5d20:	teq	r1, r0, lsl #24
    5d24:	bne	5edc <MyGame_Example_Monster_parse_json_table+0x364c>
    5d28:	b	5d2c <MyGame_Example_Monster_parse_json_table+0x349c>
    5d2c:	ldr	r0, [fp, #-8]
    5d30:	ldr	r1, [fp, #-12]
    5d34:	str	r1, [fp, #-40]	; 0xffffffd8
    5d38:	ldr	r2, [fp, #-16]
    5d3c:	movw	r3, #1
    5d40:	bl	7168 <flatcc_json_parser_match_symbol>
    5d44:	str	r0, [fp, #-12]
    5d48:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5d4c:	ldr	r1, [fp, #-12]
    5d50:	cmp	r0, r1
    5d54:	beq	5ec4 <MyGame_Example_Monster_parse_json_table+0x3634>
    5d58:	ldr	r3, [pc, #1184]	; 6200 <MyGame_Example_Monster_parse_json_table+0x3970>
    5d5c:	ldr	r0, [fp, #-8]
    5d60:	ldr	r0, [r0]
    5d64:	movw	r1, #8
    5d68:	movw	r2, #8
    5d6c:	uxth	r2, r2
    5d70:	bl	0 <flatcc_builder_start_vector>
    5d74:	cmp	r0, #0
    5d78:	beq	5d80 <MyGame_Example_Monster_parse_json_table+0x34f0>
    5d7c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5d80:	ldr	r0, [fp, #-8]
    5d84:	ldr	r1, [fp, #-12]
    5d88:	ldr	r2, [fp, #-16]
    5d8c:	sub	r3, fp, #24
    5d90:	bl	89b8 <flatcc_json_parser_array_start>
    5d94:	str	r0, [fp, #-12]
    5d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5d9c:	cmp	r0, #0
    5da0:	beq	5e74 <MyGame_Example_Monster_parse_json_table+0x35e4>
    5da4:	vldr	d16, [pc, #996]	; 6190 <MyGame_Example_Monster_parse_json_table+0x3900>
    5da8:	vstr	d16, [sp, #48]	; 0x30
    5dac:	ldr	r0, [fp, #-8]
    5db0:	ldr	r0, [r0]
    5db4:	movw	r1, #1
    5db8:	bl	0 <flatcc_builder_extend_vector>
    5dbc:	str	r0, [fp, #-28]	; 0xffffffe4
    5dc0:	movw	r1, #0
    5dc4:	cmp	r0, r1
    5dc8:	bne	5dd0 <MyGame_Example_Monster_parse_json_table+0x3540>
    5dcc:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5dd0:	ldr	r0, [fp, #-8]
    5dd4:	ldr	r1, [fp, #-12]
    5dd8:	str	r1, [fp, #-40]	; 0xffffffd8
    5ddc:	ldr	r2, [fp, #-16]
    5de0:	add	r3, sp, #48	; 0x30
    5de4:	bl	0 <flatcc_json_parser_double>
    5de8:	str	r0, [fp, #-12]
    5dec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5df0:	ldr	r1, [fp, #-12]
    5df4:	cmp	r0, r1
    5df8:	bne	5e4c <MyGame_Example_Monster_parse_json_table+0x35bc>
    5dfc:	ldr	r0, [fp, #-8]
    5e00:	ldr	r1, [fp, #-12]
    5e04:	str	r1, [fp, #-40]	; 0xffffffd8
    5e08:	ldr	r2, [fp, #-16]
    5e0c:	movw	r3, #0
    5e10:	movt	r3, #0
    5e14:	add	ip, sp, #48	; 0x30
    5e18:	str	ip, [sp]
    5e1c:	bl	c180 <flatcc_json_parser_symbolic_double>
    5e20:	str	r0, [fp, #-12]
    5e24:	ldr	r0, [fp, #-12]
    5e28:	ldr	r1, [fp, #-40]	; 0xffffffd8
    5e2c:	cmp	r0, r1
    5e30:	beq	5e44 <MyGame_Example_Monster_parse_json_table+0x35b4>
    5e34:	ldr	r0, [fp, #-12]
    5e38:	ldr	r1, [fp, #-16]
    5e3c:	cmp	r0, r1
    5e40:	bne	5e48 <MyGame_Example_Monster_parse_json_table+0x35b8>
    5e44:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5e48:	b	5e4c <MyGame_Example_Monster_parse_json_table+0x35bc>
    5e4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    5e50:	vldr	d0, [sp, #48]	; 0x30
    5e54:	bl	c3b8 <flatbuffers_double_write_to_pe>
    5e58:	ldr	r0, [fp, #-8]
    5e5c:	ldr	r1, [fp, #-12]
    5e60:	ldr	r2, [fp, #-16]
    5e64:	sub	r3, fp, #24
    5e68:	bl	8dd0 <flatcc_json_parser_array_end>
    5e6c:	str	r0, [fp, #-12]
    5e70:	b	5d98 <MyGame_Example_Monster_parse_json_table+0x3508>
    5e74:	ldr	r0, [fp, #-8]
    5e78:	ldr	r0, [r0]
    5e7c:	bl	0 <flatcc_builder_end_vector>
    5e80:	str	r0, [fp, #-32]	; 0xffffffe0
    5e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5e88:	cmp	r0, #0
    5e8c:	beq	5eb0 <MyGame_Example_Monster_parse_json_table+0x3620>
    5e90:	ldr	r0, [fp, #-8]
    5e94:	ldr	r0, [r0]
    5e98:	movw	r1, #33	; 0x21
    5e9c:	bl	0 <flatcc_builder_table_add_offset>
    5ea0:	str	r0, [fp, #-36]	; 0xffffffdc
    5ea4:	movw	r1, #0
    5ea8:	cmp	r0, r1
    5eac:	bne	5eb4 <MyGame_Example_Monster_parse_json_table+0x3624>
    5eb0:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5eb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5eb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5ebc:	str	r0, [r1]
    5ec0:	b	5ed8 <MyGame_Example_Monster_parse_json_table+0x3648>
    5ec4:	ldr	r0, [fp, #-8]
    5ec8:	ldr	r1, [fp, #-12]
    5ecc:	ldr	r2, [fp, #-16]
    5ed0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5ed4:	str	r0, [fp, #-12]
    5ed8:	b	5ef0 <MyGame_Example_Monster_parse_json_table+0x3660>
    5edc:	ldr	r0, [fp, #-8]
    5ee0:	ldr	r1, [fp, #-12]
    5ee4:	ldr	r2, [fp, #-16]
    5ee8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5eec:	str	r0, [fp, #-12]
    5ef0:	b	60fc <MyGame_Example_Monster_parse_json_table+0x386c>
    5ef4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5ef8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5efc:	movw	r2, #24428	; 0x5f6c
    5f00:	movt	r2, #102	; 0x66
    5f04:	eor	r2, r2, r1, lsr #8
    5f08:	lsr	r0, r0, #8
    5f0c:	orr	r0, r0, r1, lsl #24
    5f10:	movw	r1, #26483	; 0x6773
    5f14:	movt	r1, #28526	; 0x6f6e
    5f18:	eor	r0, r0, r1
    5f1c:	orr	r0, r0, r2
    5f20:	cmp	r0, #0
    5f24:	bne	60e4 <MyGame_Example_Monster_parse_json_table+0x3854>
    5f28:	b	5f2c <MyGame_Example_Monster_parse_json_table+0x369c>
    5f2c:	ldr	r0, [fp, #-8]
    5f30:	ldr	r1, [fp, #-12]
    5f34:	str	r1, [fp, #-40]	; 0xffffffd8
    5f38:	ldr	r2, [fp, #-16]
    5f3c:	movw	r3, #7
    5f40:	bl	7168 <flatcc_json_parser_match_symbol>
    5f44:	str	r0, [fp, #-12]
    5f48:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5f4c:	ldr	r1, [fp, #-12]
    5f50:	cmp	r0, r1
    5f54:	beq	60cc <MyGame_Example_Monster_parse_json_table+0x383c>
    5f58:	ldr	r3, [pc, #672]	; 6200 <MyGame_Example_Monster_parse_json_table+0x3970>
    5f5c:	ldr	r0, [fp, #-8]
    5f60:	ldr	r0, [r0]
    5f64:	movw	r1, #8
    5f68:	movw	r2, #8
    5f6c:	uxth	r2, r2
    5f70:	bl	0 <flatcc_builder_start_vector>
    5f74:	cmp	r0, #0
    5f78:	beq	5f80 <MyGame_Example_Monster_parse_json_table+0x36f0>
    5f7c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5f80:	ldr	r0, [fp, #-8]
    5f84:	ldr	r1, [fp, #-12]
    5f88:	ldr	r2, [fp, #-16]
    5f8c:	sub	r3, fp, #24
    5f90:	bl	89b8 <flatcc_json_parser_array_start>
    5f94:	str	r0, [fp, #-12]
    5f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5f9c:	cmp	r0, #0
    5fa0:	beq	607c <MyGame_Example_Monster_parse_json_table+0x37ec>
    5fa4:	mov	r0, #0
    5fa8:	str	r0, [sp, #44]	; 0x2c
    5fac:	str	r0, [sp, #40]	; 0x28
    5fb0:	ldr	r0, [fp, #-8]
    5fb4:	ldr	r0, [r0]
    5fb8:	movw	r1, #1
    5fbc:	bl	0 <flatcc_builder_extend_vector>
    5fc0:	str	r0, [fp, #-28]	; 0xffffffe4
    5fc4:	movw	r1, #0
    5fc8:	cmp	r0, r1
    5fcc:	bne	5fd4 <MyGame_Example_Monster_parse_json_table+0x3744>
    5fd0:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    5fd4:	ldr	r0, [fp, #-8]
    5fd8:	ldr	r1, [fp, #-12]
    5fdc:	str	r1, [fp, #-40]	; 0xffffffd8
    5fe0:	ldr	r2, [fp, #-16]
    5fe4:	add	r3, sp, #40	; 0x28
    5fe8:	bl	b7b0 <flatcc_json_parser_int64>
    5fec:	str	r0, [fp, #-12]
    5ff0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5ff4:	ldr	r1, [fp, #-12]
    5ff8:	cmp	r0, r1
    5ffc:	bne	6050 <MyGame_Example_Monster_parse_json_table+0x37c0>
    6000:	ldr	r0, [fp, #-8]
    6004:	ldr	r1, [fp, #-12]
    6008:	str	r1, [fp, #-40]	; 0xffffffd8
    600c:	ldr	r2, [fp, #-16]
    6010:	movw	r3, #0
    6014:	movt	r3, #0
    6018:	add	ip, sp, #40	; 0x28
    601c:	str	ip, [sp]
    6020:	bl	b888 <flatcc_json_parser_symbolic_int64>
    6024:	str	r0, [fp, #-12]
    6028:	ldr	r0, [fp, #-12]
    602c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6030:	cmp	r0, r1
    6034:	beq	6048 <MyGame_Example_Monster_parse_json_table+0x37b8>
    6038:	ldr	r0, [fp, #-12]
    603c:	ldr	r1, [fp, #-16]
    6040:	cmp	r0, r1
    6044:	bne	604c <MyGame_Example_Monster_parse_json_table+0x37bc>
    6048:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    604c:	b	6050 <MyGame_Example_Monster_parse_json_table+0x37c0>
    6050:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6054:	ldr	r2, [sp, #40]	; 0x28
    6058:	ldr	r3, [sp, #44]	; 0x2c
    605c:	bl	bac8 <flatbuffers_int64_write_to_pe>
    6060:	ldr	r0, [fp, #-8]
    6064:	ldr	r1, [fp, #-12]
    6068:	ldr	r2, [fp, #-16]
    606c:	sub	r3, fp, #24
    6070:	bl	8dd0 <flatcc_json_parser_array_end>
    6074:	str	r0, [fp, #-12]
    6078:	b	5f98 <MyGame_Example_Monster_parse_json_table+0x3708>
    607c:	ldr	r0, [fp, #-8]
    6080:	ldr	r0, [r0]
    6084:	bl	0 <flatcc_builder_end_vector>
    6088:	str	r0, [fp, #-32]	; 0xffffffe0
    608c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6090:	cmp	r0, #0
    6094:	beq	60b8 <MyGame_Example_Monster_parse_json_table+0x3828>
    6098:	ldr	r0, [fp, #-8]
    609c:	ldr	r0, [r0]
    60a0:	movw	r1, #32
    60a4:	bl	0 <flatcc_builder_table_add_offset>
    60a8:	str	r0, [fp, #-36]	; 0xffffffdc
    60ac:	movw	r1, #0
    60b0:	cmp	r0, r1
    60b4:	bne	60bc <MyGame_Example_Monster_parse_json_table+0x382c>
    60b8:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    60bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    60c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    60c4:	str	r0, [r1]
    60c8:	b	60e0 <MyGame_Example_Monster_parse_json_table+0x3850>
    60cc:	ldr	r0, [fp, #-8]
    60d0:	ldr	r1, [fp, #-12]
    60d4:	ldr	r2, [fp, #-16]
    60d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    60dc:	str	r0, [fp, #-12]
    60e0:	b	60f8 <MyGame_Example_Monster_parse_json_table+0x3868>
    60e4:	ldr	r0, [fp, #-8]
    60e8:	ldr	r1, [fp, #-12]
    60ec:	ldr	r2, [fp, #-16]
    60f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    60f4:	str	r0, [fp, #-12]
    60f8:	b	60fc <MyGame_Example_Monster_parse_json_table+0x386c>
    60fc:	b	6114 <MyGame_Example_Monster_parse_json_table+0x3884>
    6100:	ldr	r0, [fp, #-8]
    6104:	ldr	r1, [fp, #-12]
    6108:	ldr	r2, [fp, #-16]
    610c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6110:	str	r0, [fp, #-12]
    6114:	b	6118 <MyGame_Example_Monster_parse_json_table+0x3888>
    6118:	b	611c <MyGame_Example_Monster_parse_json_table+0x388c>
    611c:	b	6120 <MyGame_Example_Monster_parse_json_table+0x3890>
    6120:	b	6124 <MyGame_Example_Monster_parse_json_table+0x3894>
    6124:	b	6128 <MyGame_Example_Monster_parse_json_table+0x3898>
    6128:	ldr	r0, [fp, #-8]
    612c:	ldr	r1, [fp, #-12]
    6130:	ldr	r2, [fp, #-16]
    6134:	sub	r3, fp, #24
    6138:	bl	c3e4 <flatcc_json_parser_object_end>
    613c:	str	r0, [fp, #-12]
    6140:	b	292c <MyGame_Example_Monster_parse_json_table+0x9c>
    6144:	ldr	r0, [fp, #-8]
    6148:	ldr	r0, [r0, #24]
    614c:	cmp	r0, #0
    6150:	beq	6158 <MyGame_Example_Monster_parse_json_table+0x38c8>
    6154:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    6158:	ldr	r0, [fp, #-8]
    615c:	ldr	r0, [r0]
    6160:	movw	r1, #3
    6164:	uxth	r1, r1
    6168:	bl	0 <flatcc_builder_check_required_field>
    616c:	cmp	r0, #0
    6170:	bne	6198 <MyGame_Example_Monster_parse_json_table+0x3908>
    6174:	ldr	r0, [fp, #-8]
    6178:	ldr	r1, [fp, #-12]
    617c:	ldr	r2, [fp, #-16]
    6180:	movw	r3, #29
    6184:	bl	0 <flatcc_json_parser_set_error>
    6188:	str	r0, [fp, #-12]
    618c:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
	...
    6198:	ldr	r0, [fp, #-8]
    619c:	ldr	r1, [fp, #-12]
    61a0:	ldr	r2, [fp, #-16]
    61a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    61a8:	bl	0 <flatcc_json_parser_finalize_unions>
    61ac:	str	r0, [fp, #-12]
    61b0:	ldr	r0, [fp, #-8]
    61b4:	ldr	r0, [r0]
    61b8:	bl	0 <flatcc_builder_end_table>
    61bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    61c0:	str	r0, [r1]
    61c4:	cmp	r0, #0
    61c8:	bne	61d0 <MyGame_Example_Monster_parse_json_table+0x3940>
    61cc:	b	61dc <MyGame_Example_Monster_parse_json_table+0x394c>
    61d0:	ldr	r0, [fp, #-12]
    61d4:	str	r0, [fp, #-4]
    61d8:	b	61f4 <MyGame_Example_Monster_parse_json_table+0x3964>
    61dc:	ldr	r0, [fp, #-8]
    61e0:	ldr	r1, [fp, #-12]
    61e4:	ldr	r2, [fp, #-16]
    61e8:	movw	r3, #33	; 0x21
    61ec:	bl	0 <flatcc_json_parser_set_error>
    61f0:	str	r0, [fp, #-4]
    61f4:	ldr	r0, [fp, #-4]
    61f8:	mov	sp, fp
    61fc:	pop	{fp, pc}
    6200:	.word	0x1fffffff

00006204 <MyGame_Example_Monster_print_json_table>:
    6204:	push	{fp, lr}
    6208:	mov	fp, sp
    620c:	sub	sp, sp, #32
    6210:	str	r0, [fp, #-4]
    6214:	str	r1, [fp, #-8]
    6218:	ldr	r0, [fp, #-4]
    621c:	ldr	r1, [fp, #-8]
    6220:	movw	r2, #0
    6224:	movw	r3, #0
    6228:	movt	r3, #0
    622c:	movw	ip, #3
    6230:	str	ip, [sp]
    6234:	movw	ip, #0
    6238:	movt	ip, #0
    623c:	str	ip, [sp, #4]
    6240:	bl	0 <flatcc_json_printer_struct_field>
    6244:	ldr	r0, [fp, #-4]
    6248:	ldr	r1, [fp, #-8]
    624c:	movw	r2, #1
    6250:	movw	r3, #0
    6254:	movt	r3, #0
    6258:	movw	ip, #4
    625c:	str	ip, [sp]
    6260:	movw	ip, #150	; 0x96
    6264:	sxth	ip, ip
    6268:	str	ip, [sp, #4]
    626c:	bl	0 <flatcc_json_printer_int16_field>
    6270:	ldr	r0, [fp, #-4]
    6274:	ldr	r1, [fp, #-8]
    6278:	movw	r2, #2
    627c:	str	r2, [fp, #-12]
    6280:	movw	r3, #0
    6284:	movt	r3, #0
    6288:	ldr	ip, [fp, #-12]
    628c:	str	ip, [sp]
    6290:	movw	lr, #100	; 0x64
    6294:	sxth	lr, lr
    6298:	str	lr, [sp, #4]
    629c:	bl	0 <flatcc_json_printer_int16_field>
    62a0:	ldr	r0, [fp, #-4]
    62a4:	ldr	r1, [fp, #-8]
    62a8:	movw	r2, #3
    62ac:	movw	r3, #0
    62b0:	movt	r3, #0
    62b4:	movw	ip, #4
    62b8:	str	ip, [sp]
    62bc:	bl	0 <flatcc_json_printer_string_field>
    62c0:	ldr	r0, [fp, #-4]
    62c4:	ldr	r1, [fp, #-8]
    62c8:	movw	r2, #5
    62cc:	movw	r3, #0
    62d0:	movt	r3, #0
    62d4:	movw	ip, #9
    62d8:	str	ip, [sp]
    62dc:	bl	0 <flatcc_json_printer_uint8_vector_field>
    62e0:	ldr	r0, [fp, #-4]
    62e4:	ldr	r1, [fp, #-8]
    62e8:	movw	r2, #6
    62ec:	movw	r3, #0
    62f0:	movt	r3, #0
    62f4:	movw	ip, #5
    62f8:	str	ip, [sp]
    62fc:	movw	ip, #8
    6300:	sxtb	ip, ip
    6304:	str	ip, [sp, #4]
    6308:	movw	ip, #0
    630c:	movt	ip, #0
    6310:	str	ip, [sp, #8]
    6314:	bl	0 <flatcc_json_printer_int8_enum_field>
    6318:	ldr	r0, [fp, #-4]
    631c:	ldr	r1, [fp, #-8]
    6320:	movw	r2, #8
    6324:	movw	r3, #0
    6328:	movt	r3, #0
    632c:	movw	ip, #4
    6330:	str	ip, [sp]
    6334:	movw	ip, #0
    6338:	movt	ip, #0
    633c:	str	ip, [sp, #4]
    6340:	movw	ip, #0
    6344:	movt	ip, #0
    6348:	str	ip, [sp, #8]
    634c:	bl	0 <flatcc_json_printer_union_field>
    6350:	ldr	r0, [fp, #-4]
    6354:	ldr	r1, [fp, #-8]
    6358:	movw	r2, #9
    635c:	movw	r3, #0
    6360:	movt	r3, #0
    6364:	movw	ip, #5
    6368:	str	ip, [sp]
    636c:	movw	ip, #4
    6370:	str	ip, [sp, #4]
    6374:	movw	ip, #0
    6378:	movt	ip, #0
    637c:	str	ip, [sp, #8]
    6380:	bl	0 <flatcc_json_printer_struct_vector_field>
    6384:	ldr	r0, [fp, #-4]
    6388:	ldr	r1, [fp, #-8]
    638c:	movw	r2, #10
    6390:	movw	r3, #0
    6394:	movt	r3, #0
    6398:	movw	ip, #17
    639c:	str	ip, [sp]
    63a0:	bl	0 <flatcc_json_printer_string_vector_field>
    63a4:	ldr	r0, [fp, #-4]
    63a8:	ldr	r1, [fp, #-8]
    63ac:	movw	r2, #11
    63b0:	movw	r3, #0
    63b4:	movt	r3, #0
    63b8:	movw	ip, #17
    63bc:	str	ip, [sp]
    63c0:	movw	ip, #0
    63c4:	movt	ip, #0
    63c8:	str	ip, [sp, #4]
    63cc:	bl	0 <flatcc_json_printer_table_vector_field>
    63d0:	ldr	r0, [fp, #-4]
    63d4:	ldr	r1, [fp, #-8]
    63d8:	movw	r2, #12
    63dc:	movw	r3, #0
    63e0:	movt	r3, #0
    63e4:	movw	ip, #5
    63e8:	str	ip, [sp]
    63ec:	movw	ip, #0
    63f0:	movt	ip, #0
    63f4:	str	ip, [sp, #4]
    63f8:	bl	0 <flatcc_json_printer_table_field>
    63fc:	ldr	r0, [fp, #-4]
    6400:	ldr	r1, [fp, #-8]
    6404:	movw	r2, #13
    6408:	movw	r3, #0
    640c:	movt	r3, #0
    6410:	movw	ip, #20
    6414:	str	ip, [sp]
    6418:	movw	ip, #0
    641c:	str	ip, [sp, #4]
    6420:	movw	ip, #0
    6424:	movt	ip, #0
    6428:	str	ip, [sp, #8]
    642c:	bl	0 <flatcc_json_printer_table_as_nested_root>
    6430:	ldr	r0, [fp, #-4]
    6434:	ldr	r1, [fp, #-8]
    6438:	movw	r2, #14
    643c:	movw	r3, #0
    6440:	movt	r3, #0
    6444:	movw	ip, #9
    6448:	str	ip, [sp]
    644c:	movw	ip, #0
    6450:	movt	ip, #0
    6454:	str	ip, [sp, #4]
    6458:	bl	0 <flatcc_json_printer_table_field>
    645c:	ldr	r0, [fp, #-4]
    6460:	ldr	r1, [fp, #-8]
    6464:	movw	r2, #15
    6468:	movw	r3, #0
    646c:	movt	r3, #0
    6470:	movw	ip, #8
    6474:	str	ip, [sp]
    6478:	movw	ip, #1
    647c:	and	ip, ip, #255	; 0xff
    6480:	str	ip, [sp, #4]
    6484:	bl	0 <flatcc_json_printer_bool_field>
    6488:	ldr	r0, [fp, #-4]
    648c:	ldr	r1, [fp, #-8]
    6490:	movw	r2, #16
    6494:	str	r2, [sp, #16]
    6498:	movw	r3, #0
    649c:	movt	r3, #0
    64a0:	ldr	ip, [sp, #16]
    64a4:	str	ip, [sp]
    64a8:	movw	lr, #0
    64ac:	str	lr, [sp, #4]
    64b0:	bl	0 <flatcc_json_printer_int32_field>
    64b4:	ldr	r0, [fp, #-4]
    64b8:	ldr	r1, [fp, #-8]
    64bc:	movw	r2, #17
    64c0:	movw	r3, #0
    64c4:	movt	r3, #0
    64c8:	movw	ip, #16
    64cc:	str	ip, [sp]
    64d0:	movw	ip, #0
    64d4:	str	ip, [sp, #4]
    64d8:	bl	0 <flatcc_json_printer_uint32_field>
    64dc:	ldr	r0, [fp, #-4]
    64e0:	ldr	r1, [fp, #-8]
    64e4:	mov	r2, sp
    64e8:	mov	r3, #0
    64ec:	str	r3, [r2, #12]
    64f0:	str	r3, [r2, #8]
    64f4:	mov	r3, #16
    64f8:	str	r3, [r2]
    64fc:	movw	r3, #0
    6500:	movt	r3, #0
    6504:	mov	r2, #18
    6508:	bl	0 <flatcc_json_printer_int64_field>
    650c:	ldr	r0, [fp, #-4]
    6510:	ldr	r1, [fp, #-8]
    6514:	mov	r2, sp
    6518:	mov	r3, #0
    651c:	str	r3, [r2, #12]
    6520:	str	r3, [r2, #8]
    6524:	mov	r3, #16
    6528:	str	r3, [r2]
    652c:	movw	r3, #0
    6530:	movt	r3, #0
    6534:	mov	r2, #19
    6538:	bl	0 <flatcc_json_printer_uint64_field>
    653c:	ldr	r0, [fp, #-4]
    6540:	ldr	r1, [fp, #-8]
    6544:	movw	r2, #20
    6548:	movw	r3, #0
    654c:	movt	r3, #0
    6550:	movw	ip, #17
    6554:	str	ip, [sp]
    6558:	movw	ip, #0
    655c:	str	ip, [sp, #4]
    6560:	bl	0 <flatcc_json_printer_int32_field>
    6564:	ldr	r0, [fp, #-4]
    6568:	ldr	r1, [fp, #-8]
    656c:	movw	r2, #21
    6570:	movw	r3, #0
    6574:	movt	r3, #0
    6578:	movw	ip, #17
    657c:	str	ip, [sp]
    6580:	movw	ip, #0
    6584:	str	ip, [sp, #4]
    6588:	bl	0 <flatcc_json_printer_uint32_field>
    658c:	ldr	r0, [fp, #-4]
    6590:	ldr	r1, [fp, #-8]
    6594:	mov	r2, sp
    6598:	mov	r3, #0
    659c:	str	r3, [r2, #12]
    65a0:	str	r3, [r2, #8]
    65a4:	mov	r3, #17
    65a8:	str	r3, [r2]
    65ac:	movw	r3, #0
    65b0:	movt	r3, #0
    65b4:	mov	r2, #22
    65b8:	bl	0 <flatcc_json_printer_int64_field>
    65bc:	ldr	r0, [fp, #-4]
    65c0:	ldr	r1, [fp, #-8]
    65c4:	mov	r2, sp
    65c8:	mov	r3, #0
    65cc:	str	r3, [r2, #12]
    65d0:	str	r3, [r2, #8]
    65d4:	mov	r3, #17
    65d8:	str	r3, [r2]
    65dc:	movw	r3, #0
    65e0:	movt	r3, #0
    65e4:	mov	r2, #23
    65e8:	bl	0 <flatcc_json_printer_uint64_field>
    65ec:	ldr	r0, [fp, #-4]
    65f0:	ldr	r1, [fp, #-8]
    65f4:	movw	r2, #24
    65f8:	movw	r3, #0
    65fc:	movt	r3, #0
    6600:	movw	ip, #16
    6604:	str	ip, [sp]
    6608:	bl	0 <flatcc_json_printer_bool_vector_field>
    660c:	vldr	s0, [pc, #432]	; 67c4 <MyGame_Example_Monster_print_json_table+0x5c0>
    6610:	ldr	r0, [fp, #-4]
    6614:	ldr	r1, [fp, #-8]
    6618:	movw	r2, #25
    661c:	movw	r3, #0
    6620:	movt	r3, #0
    6624:	movw	ip, #5
    6628:	str	ip, [sp]
    662c:	bl	0 <flatcc_json_printer_float_field>
    6630:	ldr	r0, [fp, #-4]
    6634:	ldr	r1, [fp, #-8]
    6638:	movw	r2, #26
    663c:	movw	r3, #0
    6640:	movt	r3, #0
    6644:	movw	ip, #6
    6648:	str	ip, [sp]
    664c:	vmov.f32	s0, #8	; 0x40400000  3.0
    6650:	bl	0 <flatcc_json_printer_float_field>
    6654:	vldr	s0, [pc, #356]	; 67c0 <MyGame_Example_Monster_print_json_table+0x5bc>
    6658:	ldr	r0, [fp, #-4]
    665c:	ldr	r1, [fp, #-8]
    6660:	movw	r2, #27
    6664:	movw	r3, #0
    6668:	movt	r3, #0
    666c:	movw	ip, #6
    6670:	str	ip, [sp]
    6674:	bl	0 <flatcc_json_printer_float_field>
    6678:	ldr	r0, [fp, #-4]
    667c:	ldr	r1, [fp, #-8]
    6680:	movw	r2, #28
    6684:	movw	r3, #0
    6688:	movt	r3, #0
    668c:	movw	ip, #18
    6690:	str	ip, [sp]
    6694:	bl	0 <flatcc_json_printer_string_vector_field>
    6698:	ldr	r0, [fp, #-4]
    669c:	ldr	r1, [fp, #-8]
    66a0:	movw	r2, #29
    66a4:	movw	r3, #0
    66a8:	movt	r3, #0
    66ac:	movw	ip, #23
    66b0:	str	ip, [sp]
    66b4:	movw	ip, #8
    66b8:	str	ip, [sp, #4]
    66bc:	movw	ip, #0
    66c0:	movt	ip, #0
    66c4:	str	ip, [sp, #8]
    66c8:	bl	0 <flatcc_json_printer_struct_vector_field>
    66cc:	ldr	r0, [fp, #-4]
    66d0:	ldr	r1, [fp, #-8]
    66d4:	movw	r2, #30
    66d8:	movw	r3, #0
    66dc:	movt	r3, #0
    66e0:	movw	ip, #4
    66e4:	str	ip, [sp]
    66e8:	bl	0 <flatcc_json_printer_uint8_vector_field>
    66ec:	ldr	r0, [fp, #-4]
    66f0:	ldr	r1, [fp, #-8]
    66f4:	movw	r2, #31
    66f8:	movw	r3, #0
    66fc:	movt	r3, #0
    6700:	movw	ip, #5
    6704:	str	ip, [sp]
    6708:	movw	ip, #4
    670c:	str	ip, [sp, #4]
    6710:	movw	ip, #0
    6714:	movt	ip, #0
    6718:	str	ip, [sp, #8]
    671c:	bl	0 <flatcc_json_printer_struct_vector_field>
    6720:	ldr	r0, [fp, #-4]
    6724:	ldr	r1, [fp, #-8]
    6728:	movw	r2, #32
    672c:	movw	r3, #0
    6730:	movt	r3, #0
    6734:	movw	ip, #15
    6738:	str	ip, [sp]
    673c:	bl	0 <flatcc_json_printer_int64_vector_field>
    6740:	ldr	r0, [fp, #-4]
    6744:	ldr	r1, [fp, #-8]
    6748:	movw	r2, #33	; 0x21
    674c:	movw	r3, #0
    6750:	movt	r3, #0
    6754:	movw	ip, #17
    6758:	str	ip, [sp]
    675c:	bl	0 <flatcc_json_printer_double_vector_field>
    6760:	ldr	r0, [fp, #-4]
    6764:	ldr	r1, [fp, #-8]
    6768:	movw	r2, #34	; 0x22
    676c:	movw	r3, #0
    6770:	movt	r3, #0
    6774:	movw	ip, #21
    6778:	str	ip, [sp]
    677c:	movw	ip, #0
    6780:	movt	ip, #0
    6784:	str	ip, [sp, #4]
    6788:	bl	0 <flatcc_json_printer_table_field>
    678c:	ldr	r0, [fp, #-4]
    6790:	ldr	r1, [fp, #-8]
    6794:	movw	r2, #35	; 0x23
    6798:	movw	r3, #0
    679c:	movt	r3, #0
    67a0:	movw	ip, #10
    67a4:	str	ip, [sp]
    67a8:	movw	ip, #0
    67ac:	movt	ip, #0
    67b0:	str	ip, [sp, #4]
    67b4:	bl	0 <flatcc_json_printer_table_field>
    67b8:	mov	sp, fp
    67bc:	pop	{fp, pc}
    67c0:	.word	0x00000000
    67c4:	.word	0x489965e0

000067c8 <MyGame_Example_Monster_verify_table>:
    67c8:	push	{fp, lr}
    67cc:	mov	fp, sp
    67d0:	sub	sp, sp, #48	; 0x30
    67d4:	str	r0, [fp, #-8]
    67d8:	ldr	r0, [fp, #-8]
    67dc:	movw	r1, #0
    67e0:	uxth	r1, r1
    67e4:	movw	r2, #32
    67e8:	movw	r3, #16
    67ec:	uxth	r3, r3
    67f0:	bl	0 <flatcc_verify_field>
    67f4:	str	r0, [fp, #-12]
    67f8:	cmp	r0, #0
    67fc:	beq	680c <MyGame_Example_Monster_verify_table+0x44>
    6800:	ldr	r0, [fp, #-12]
    6804:	str	r0, [fp, #-4]
    6808:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    680c:	ldr	r0, [fp, #-8]
    6810:	movw	r1, #2
    6814:	uxth	r2, r1
    6818:	str	r1, [fp, #-16]
    681c:	mov	r1, r2
    6820:	movw	r2, #2
    6824:	ldr	r3, [fp, #-16]
    6828:	uxth	r3, r3
    682c:	bl	0 <flatcc_verify_field>
    6830:	str	r0, [fp, #-12]
    6834:	cmp	r0, #0
    6838:	beq	6848 <MyGame_Example_Monster_verify_table+0x80>
    683c:	ldr	r0, [fp, #-12]
    6840:	str	r0, [fp, #-4]
    6844:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6848:	ldr	r0, [fp, #-8]
    684c:	movw	r1, #1
    6850:	uxth	r1, r1
    6854:	movw	r2, #2
    6858:	movw	r3, #2
    685c:	uxth	r3, r3
    6860:	bl	0 <flatcc_verify_field>
    6864:	str	r0, [fp, #-12]
    6868:	cmp	r0, #0
    686c:	beq	687c <MyGame_Example_Monster_verify_table+0xb4>
    6870:	ldr	r0, [fp, #-12]
    6874:	str	r0, [fp, #-4]
    6878:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    687c:	ldr	r0, [fp, #-8]
    6880:	movw	r1, #3
    6884:	uxth	r1, r1
    6888:	movw	r2, #1
    688c:	bl	0 <flatcc_verify_string_field>
    6890:	str	r0, [fp, #-12]
    6894:	cmp	r0, #0
    6898:	beq	68a8 <MyGame_Example_Monster_verify_table+0xe0>
    689c:	ldr	r0, [fp, #-12]
    68a0:	str	r0, [fp, #-4]
    68a4:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    68a8:	ldr	r0, [fp, #-8]
    68ac:	movw	r1, #6
    68b0:	uxth	r1, r1
    68b4:	movw	r2, #1
    68b8:	movw	r3, #1
    68bc:	uxth	r3, r3
    68c0:	bl	0 <flatcc_verify_field>
    68c4:	str	r0, [fp, #-12]
    68c8:	cmp	r0, #0
    68cc:	beq	68dc <MyGame_Example_Monster_verify_table+0x114>
    68d0:	ldr	r0, [fp, #-12]
    68d4:	str	r0, [fp, #-4]
    68d8:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    68dc:	ldr	r0, [fp, #-8]
    68e0:	movw	r1, #5
    68e4:	uxth	r1, r1
    68e8:	movw	r2, #0
    68ec:	movw	r3, #1
    68f0:	movw	ip, #1
    68f4:	uxth	ip, ip
    68f8:	str	ip, [sp]
    68fc:	mvn	ip, #0
    6900:	str	ip, [sp, #4]
    6904:	bl	0 <flatcc_verify_vector_field>
    6908:	str	r0, [fp, #-12]
    690c:	cmp	r0, #0
    6910:	beq	6920 <MyGame_Example_Monster_verify_table+0x158>
    6914:	ldr	r0, [fp, #-12]
    6918:	str	r0, [fp, #-4]
    691c:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6920:	ldr	r0, [fp, #-8]
    6924:	movw	r1, #11
    6928:	uxth	r1, r1
    692c:	movw	r2, #0
    6930:	movw	r3, #0
    6934:	movt	r3, #0
    6938:	bl	0 <flatcc_verify_table_vector_field>
    693c:	str	r0, [fp, #-12]
    6940:	cmp	r0, #0
    6944:	beq	6954 <MyGame_Example_Monster_verify_table+0x18c>
    6948:	ldr	r0, [fp, #-12]
    694c:	str	r0, [fp, #-4]
    6950:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6954:	ldr	r0, [fp, #-8]
    6958:	movw	r1, #10
    695c:	uxth	r1, r1
    6960:	movw	r2, #0
    6964:	bl	0 <flatcc_verify_string_vector_field>
    6968:	str	r0, [fp, #-12]
    696c:	cmp	r0, #0
    6970:	beq	6980 <MyGame_Example_Monster_verify_table+0x1b8>
    6974:	ldr	r0, [fp, #-12]
    6978:	str	r0, [fp, #-4]
    697c:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6980:	ldr	r0, [fp, #-8]
    6984:	movw	r1, #28
    6988:	uxth	r1, r1
    698c:	movw	r2, #0
    6990:	bl	0 <flatcc_verify_string_vector_field>
    6994:	str	r0, [fp, #-12]
    6998:	cmp	r0, #0
    699c:	beq	69ac <MyGame_Example_Monster_verify_table+0x1e4>
    69a0:	ldr	r0, [fp, #-12]
    69a4:	str	r0, [fp, #-4]
    69a8:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    69ac:	ldr	r0, [fp, #-8]
    69b0:	movw	r1, #24
    69b4:	uxth	r1, r1
    69b8:	movw	r2, #0
    69bc:	movw	r3, #1
    69c0:	movw	ip, #1
    69c4:	uxth	ip, ip
    69c8:	str	ip, [sp]
    69cc:	mvn	ip, #0
    69d0:	str	ip, [sp, #4]
    69d4:	bl	0 <flatcc_verify_vector_field>
    69d8:	str	r0, [fp, #-12]
    69dc:	cmp	r0, #0
    69e0:	beq	69f0 <MyGame_Example_Monster_verify_table+0x228>
    69e4:	ldr	r0, [fp, #-12]
    69e8:	str	r0, [fp, #-4]
    69ec:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    69f0:	ldr	r0, [pc, #1440]	; 6f98 <MyGame_Example_Monster_verify_table+0x7d0>
    69f4:	ldr	r1, [fp, #-8]
    69f8:	str	r0, [fp, #-20]	; 0xffffffec
    69fc:	mov	r0, r1
    6a00:	movw	r1, #29
    6a04:	uxth	r1, r1
    6a08:	movw	r2, #0
    6a0c:	movw	r3, #8
    6a10:	movw	ip, #4
    6a14:	uxth	ip, ip
    6a18:	str	ip, [sp]
    6a1c:	ldr	ip, [fp, #-20]	; 0xffffffec
    6a20:	str	ip, [sp, #4]
    6a24:	bl	0 <flatcc_verify_vector_field>
    6a28:	str	r0, [fp, #-12]
    6a2c:	cmp	r0, #0
    6a30:	beq	6a40 <MyGame_Example_Monster_verify_table+0x278>
    6a34:	ldr	r0, [fp, #-12]
    6a38:	str	r0, [fp, #-4]
    6a3c:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6a40:	ldr	r0, [fp, #-8]
    6a44:	movw	r1, #12
    6a48:	uxth	r1, r1
    6a4c:	movw	r2, #0
    6a50:	movw	r3, #0
    6a54:	movt	r3, #0
    6a58:	bl	0 <flatcc_verify_table_field>
    6a5c:	str	r0, [fp, #-12]
    6a60:	cmp	r0, #0
    6a64:	beq	6a74 <MyGame_Example_Monster_verify_table+0x2ac>
    6a68:	ldr	r0, [fp, #-12]
    6a6c:	str	r0, [fp, #-4]
    6a70:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6a74:	ldr	r0, [fp, #-8]
    6a78:	movw	r1, #8
    6a7c:	uxth	r1, r1
    6a80:	movw	r2, #0
    6a84:	movw	r3, #0
    6a88:	movt	r3, #0
    6a8c:	bl	0 <flatcc_verify_union_field>
    6a90:	str	r0, [fp, #-12]
    6a94:	cmp	r0, #0
    6a98:	beq	6aa8 <MyGame_Example_Monster_verify_table+0x2e0>
    6a9c:	ldr	r0, [fp, #-12]
    6aa0:	str	r0, [fp, #-4]
    6aa4:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6aa8:	ldr	r0, [pc, #1260]	; 6f9c <MyGame_Example_Monster_verify_table+0x7d4>
    6aac:	ldr	r1, [fp, #-8]
    6ab0:	str	r0, [sp, #24]
    6ab4:	mov	r0, r1
    6ab8:	movw	r1, #9
    6abc:	uxth	r1, r1
    6ac0:	movw	r2, #0
    6ac4:	movw	r3, #4
    6ac8:	movw	ip, #2
    6acc:	uxth	ip, ip
    6ad0:	str	ip, [sp]
    6ad4:	ldr	ip, [sp, #24]
    6ad8:	str	ip, [sp, #4]
    6adc:	bl	0 <flatcc_verify_vector_field>
    6ae0:	str	r0, [fp, #-12]
    6ae4:	cmp	r0, #0
    6ae8:	beq	6af8 <MyGame_Example_Monster_verify_table+0x330>
    6aec:	ldr	r0, [fp, #-12]
    6af0:	str	r0, [fp, #-4]
    6af4:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6af8:	ldr	r0, [pc, #1180]	; 6f9c <MyGame_Example_Monster_verify_table+0x7d4>
    6afc:	ldr	r1, [fp, #-8]
    6b00:	str	r0, [sp, #20]
    6b04:	mov	r0, r1
    6b08:	movw	r1, #31
    6b0c:	uxth	r1, r1
    6b10:	movw	r2, #0
    6b14:	movw	r3, #4
    6b18:	movw	ip, #2
    6b1c:	uxth	ip, ip
    6b20:	str	ip, [sp]
    6b24:	ldr	ip, [sp, #20]
    6b28:	str	ip, [sp, #4]
    6b2c:	bl	0 <flatcc_verify_vector_field>
    6b30:	str	r0, [fp, #-12]
    6b34:	cmp	r0, #0
    6b38:	beq	6b48 <MyGame_Example_Monster_verify_table+0x380>
    6b3c:	ldr	r0, [fp, #-12]
    6b40:	str	r0, [fp, #-4]
    6b44:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6b48:	ldr	r0, [fp, #-8]
    6b4c:	movw	r1, #13
    6b50:	uxth	r1, r1
    6b54:	movw	r2, #0
    6b58:	str	r2, [sp, #16]
    6b5c:	ldr	r3, [sp, #16]
    6b60:	movw	ip, #1
    6b64:	uxth	ip, ip
    6b68:	str	ip, [sp]
    6b6c:	movw	ip, #0
    6b70:	movt	ip, #0
    6b74:	str	ip, [sp, #4]
    6b78:	bl	0 <flatcc_verify_table_as_nested_root>
    6b7c:	str	r0, [fp, #-12]
    6b80:	cmp	r0, #0
    6b84:	beq	6b94 <MyGame_Example_Monster_verify_table+0x3cc>
    6b88:	ldr	r0, [fp, #-12]
    6b8c:	str	r0, [fp, #-4]
    6b90:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6b94:	ldr	r0, [fp, #-8]
    6b98:	movw	r1, #14
    6b9c:	uxth	r1, r1
    6ba0:	movw	r2, #0
    6ba4:	movw	r3, #0
    6ba8:	movt	r3, #0
    6bac:	bl	0 <flatcc_verify_table_field>
    6bb0:	str	r0, [fp, #-12]
    6bb4:	cmp	r0, #0
    6bb8:	beq	6bc8 <MyGame_Example_Monster_verify_table+0x400>
    6bbc:	ldr	r0, [fp, #-12]
    6bc0:	str	r0, [fp, #-4]
    6bc4:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6bc8:	ldr	r0, [fp, #-8]
    6bcc:	movw	r1, #15
    6bd0:	uxth	r1, r1
    6bd4:	movw	r2, #1
    6bd8:	movw	r3, #1
    6bdc:	uxth	r3, r3
    6be0:	bl	0 <flatcc_verify_field>
    6be4:	str	r0, [fp, #-12]
    6be8:	cmp	r0, #0
    6bec:	beq	6bfc <MyGame_Example_Monster_verify_table+0x434>
    6bf0:	ldr	r0, [fp, #-12]
    6bf4:	str	r0, [fp, #-4]
    6bf8:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6bfc:	ldr	r0, [fp, #-8]
    6c00:	movw	r1, #16
    6c04:	uxth	r1, r1
    6c08:	movw	r2, #4
    6c0c:	movw	r3, #4
    6c10:	uxth	r3, r3
    6c14:	bl	0 <flatcc_verify_field>
    6c18:	str	r0, [fp, #-12]
    6c1c:	cmp	r0, #0
    6c20:	beq	6c30 <MyGame_Example_Monster_verify_table+0x468>
    6c24:	ldr	r0, [fp, #-12]
    6c28:	str	r0, [fp, #-4]
    6c2c:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6c30:	ldr	r0, [fp, #-8]
    6c34:	movw	r1, #17
    6c38:	uxth	r1, r1
    6c3c:	movw	r2, #4
    6c40:	movw	r3, #4
    6c44:	uxth	r3, r3
    6c48:	bl	0 <flatcc_verify_field>
    6c4c:	str	r0, [fp, #-12]
    6c50:	cmp	r0, #0
    6c54:	beq	6c64 <MyGame_Example_Monster_verify_table+0x49c>
    6c58:	ldr	r0, [fp, #-12]
    6c5c:	str	r0, [fp, #-4]
    6c60:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6c64:	ldr	r0, [fp, #-8]
    6c68:	movw	r1, #18
    6c6c:	uxth	r1, r1
    6c70:	movw	r2, #8
    6c74:	movw	r3, #8
    6c78:	uxth	r3, r3
    6c7c:	bl	0 <flatcc_verify_field>
    6c80:	str	r0, [fp, #-12]
    6c84:	cmp	r0, #0
    6c88:	beq	6c98 <MyGame_Example_Monster_verify_table+0x4d0>
    6c8c:	ldr	r0, [fp, #-12]
    6c90:	str	r0, [fp, #-4]
    6c94:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6c98:	ldr	r0, [fp, #-8]
    6c9c:	movw	r1, #19
    6ca0:	uxth	r1, r1
    6ca4:	movw	r2, #8
    6ca8:	movw	r3, #8
    6cac:	uxth	r3, r3
    6cb0:	bl	0 <flatcc_verify_field>
    6cb4:	str	r0, [fp, #-12]
    6cb8:	cmp	r0, #0
    6cbc:	beq	6ccc <MyGame_Example_Monster_verify_table+0x504>
    6cc0:	ldr	r0, [fp, #-12]
    6cc4:	str	r0, [fp, #-4]
    6cc8:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6ccc:	ldr	r0, [fp, #-8]
    6cd0:	movw	r1, #20
    6cd4:	uxth	r1, r1
    6cd8:	movw	r2, #4
    6cdc:	movw	r3, #4
    6ce0:	uxth	r3, r3
    6ce4:	bl	0 <flatcc_verify_field>
    6ce8:	str	r0, [fp, #-12]
    6cec:	cmp	r0, #0
    6cf0:	beq	6d00 <MyGame_Example_Monster_verify_table+0x538>
    6cf4:	ldr	r0, [fp, #-12]
    6cf8:	str	r0, [fp, #-4]
    6cfc:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6d00:	ldr	r0, [fp, #-8]
    6d04:	movw	r1, #21
    6d08:	uxth	r1, r1
    6d0c:	movw	r2, #4
    6d10:	movw	r3, #4
    6d14:	uxth	r3, r3
    6d18:	bl	0 <flatcc_verify_field>
    6d1c:	str	r0, [fp, #-12]
    6d20:	cmp	r0, #0
    6d24:	beq	6d34 <MyGame_Example_Monster_verify_table+0x56c>
    6d28:	ldr	r0, [fp, #-12]
    6d2c:	str	r0, [fp, #-4]
    6d30:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6d34:	ldr	r0, [fp, #-8]
    6d38:	movw	r1, #22
    6d3c:	uxth	r1, r1
    6d40:	movw	r2, #8
    6d44:	movw	r3, #8
    6d48:	uxth	r3, r3
    6d4c:	bl	0 <flatcc_verify_field>
    6d50:	str	r0, [fp, #-12]
    6d54:	cmp	r0, #0
    6d58:	beq	6d68 <MyGame_Example_Monster_verify_table+0x5a0>
    6d5c:	ldr	r0, [fp, #-12]
    6d60:	str	r0, [fp, #-4]
    6d64:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6d68:	ldr	r0, [fp, #-8]
    6d6c:	movw	r1, #23
    6d70:	uxth	r1, r1
    6d74:	movw	r2, #8
    6d78:	movw	r3, #8
    6d7c:	uxth	r3, r3
    6d80:	bl	0 <flatcc_verify_field>
    6d84:	str	r0, [fp, #-12]
    6d88:	cmp	r0, #0
    6d8c:	beq	6d9c <MyGame_Example_Monster_verify_table+0x5d4>
    6d90:	ldr	r0, [fp, #-12]
    6d94:	str	r0, [fp, #-4]
    6d98:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6d9c:	ldr	r0, [fp, #-8]
    6da0:	movw	r1, #25
    6da4:	uxth	r1, r1
    6da8:	movw	r2, #4
    6dac:	movw	r3, #4
    6db0:	uxth	r3, r3
    6db4:	bl	0 <flatcc_verify_field>
    6db8:	str	r0, [fp, #-12]
    6dbc:	cmp	r0, #0
    6dc0:	beq	6dd0 <MyGame_Example_Monster_verify_table+0x608>
    6dc4:	ldr	r0, [fp, #-12]
    6dc8:	str	r0, [fp, #-4]
    6dcc:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6dd0:	ldr	r0, [fp, #-8]
    6dd4:	movw	r1, #26
    6dd8:	uxth	r1, r1
    6ddc:	movw	r2, #4
    6de0:	movw	r3, #4
    6de4:	uxth	r3, r3
    6de8:	bl	0 <flatcc_verify_field>
    6dec:	str	r0, [fp, #-12]
    6df0:	cmp	r0, #0
    6df4:	beq	6e04 <MyGame_Example_Monster_verify_table+0x63c>
    6df8:	ldr	r0, [fp, #-12]
    6dfc:	str	r0, [fp, #-4]
    6e00:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6e04:	ldr	r0, [fp, #-8]
    6e08:	movw	r1, #27
    6e0c:	uxth	r1, r1
    6e10:	movw	r2, #4
    6e14:	movw	r3, #4
    6e18:	uxth	r3, r3
    6e1c:	bl	0 <flatcc_verify_field>
    6e20:	str	r0, [fp, #-12]
    6e24:	cmp	r0, #0
    6e28:	beq	6e38 <MyGame_Example_Monster_verify_table+0x670>
    6e2c:	ldr	r0, [fp, #-12]
    6e30:	str	r0, [fp, #-4]
    6e34:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6e38:	ldr	r0, [fp, #-8]
    6e3c:	movw	r1, #30
    6e40:	uxth	r1, r1
    6e44:	movw	r2, #0
    6e48:	movw	r3, #1
    6e4c:	movw	ip, #1
    6e50:	uxth	ip, ip
    6e54:	str	ip, [sp]
    6e58:	mvn	ip, #0
    6e5c:	str	ip, [sp, #4]
    6e60:	bl	0 <flatcc_verify_vector_field>
    6e64:	str	r0, [fp, #-12]
    6e68:	cmp	r0, #0
    6e6c:	beq	6e7c <MyGame_Example_Monster_verify_table+0x6b4>
    6e70:	ldr	r0, [fp, #-12]
    6e74:	str	r0, [fp, #-4]
    6e78:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6e7c:	ldr	r0, [pc, #276]	; 6f98 <MyGame_Example_Monster_verify_table+0x7d0>
    6e80:	ldr	r1, [fp, #-8]
    6e84:	str	r0, [sp, #12]
    6e88:	mov	r0, r1
    6e8c:	movw	r1, #32
    6e90:	uxth	r1, r1
    6e94:	movw	r2, #0
    6e98:	movw	r3, #8
    6e9c:	movw	ip, #8
    6ea0:	uxth	ip, ip
    6ea4:	str	ip, [sp]
    6ea8:	ldr	ip, [sp, #12]
    6eac:	str	ip, [sp, #4]
    6eb0:	bl	0 <flatcc_verify_vector_field>
    6eb4:	str	r0, [fp, #-12]
    6eb8:	cmp	r0, #0
    6ebc:	beq	6ecc <MyGame_Example_Monster_verify_table+0x704>
    6ec0:	ldr	r0, [fp, #-12]
    6ec4:	str	r0, [fp, #-4]
    6ec8:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6ecc:	ldr	r0, [pc, #196]	; 6f98 <MyGame_Example_Monster_verify_table+0x7d0>
    6ed0:	ldr	r1, [fp, #-8]
    6ed4:	str	r0, [sp, #8]
    6ed8:	mov	r0, r1
    6edc:	movw	r1, #33	; 0x21
    6ee0:	uxth	r1, r1
    6ee4:	movw	r2, #0
    6ee8:	movw	r3, #8
    6eec:	movw	ip, #8
    6ef0:	uxth	ip, ip
    6ef4:	str	ip, [sp]
    6ef8:	ldr	ip, [sp, #8]
    6efc:	str	ip, [sp, #4]
    6f00:	bl	0 <flatcc_verify_vector_field>
    6f04:	str	r0, [fp, #-12]
    6f08:	cmp	r0, #0
    6f0c:	beq	6f1c <MyGame_Example_Monster_verify_table+0x754>
    6f10:	ldr	r0, [fp, #-12]
    6f14:	str	r0, [fp, #-4]
    6f18:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6f1c:	ldr	r0, [fp, #-8]
    6f20:	movw	r1, #34	; 0x22
    6f24:	uxth	r1, r1
    6f28:	movw	r2, #0
    6f2c:	movw	r3, #0
    6f30:	movt	r3, #0
    6f34:	bl	0 <flatcc_verify_table_field>
    6f38:	str	r0, [fp, #-12]
    6f3c:	cmp	r0, #0
    6f40:	beq	6f50 <MyGame_Example_Monster_verify_table+0x788>
    6f44:	ldr	r0, [fp, #-12]
    6f48:	str	r0, [fp, #-4]
    6f4c:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6f50:	ldr	r0, [fp, #-8]
    6f54:	movw	r1, #35	; 0x23
    6f58:	uxth	r1, r1
    6f5c:	movw	r2, #0
    6f60:	movw	r3, #0
    6f64:	movt	r3, #0
    6f68:	bl	0 <flatcc_verify_table_field>
    6f6c:	str	r0, [fp, #-12]
    6f70:	cmp	r0, #0
    6f74:	beq	6f84 <MyGame_Example_Monster_verify_table+0x7bc>
    6f78:	ldr	r0, [fp, #-12]
    6f7c:	str	r0, [fp, #-4]
    6f80:	b	6f8c <MyGame_Example_Monster_verify_table+0x7c4>
    6f84:	movw	r0, #0
    6f88:	str	r0, [fp, #-4]
    6f8c:	ldr	r0, [fp, #-4]
    6f90:	mov	sp, fp
    6f94:	pop	{fp, pc}
    6f98:	.word	0x1fffffff
    6f9c:	.word	0x3fffffff

00006fa0 <flatcc_json_parser_object_start>:
    6fa0:	push	{fp, lr}
    6fa4:	mov	fp, sp
    6fa8:	sub	sp, sp, #24
    6fac:	str	r0, [fp, #-8]
    6fb0:	str	r1, [sp, #12]
    6fb4:	str	r2, [sp, #8]
    6fb8:	str	r3, [sp, #4]
    6fbc:	ldr	r0, [sp, #12]
    6fc0:	ldr	r1, [sp, #8]
    6fc4:	cmp	r0, r1
    6fc8:	beq	6fdc <flatcc_json_parser_object_start+0x3c>
    6fcc:	ldr	r0, [sp, #12]
    6fd0:	ldrb	r0, [r0]
    6fd4:	cmp	r0, #123	; 0x7b
    6fd8:	beq	7004 <flatcc_json_parser_object_start+0x64>
    6fdc:	ldr	r0, [sp, #4]
    6fe0:	movw	r1, #0
    6fe4:	str	r1, [r0]
    6fe8:	ldr	r0, [fp, #-8]
    6fec:	ldr	r1, [sp, #12]
    6ff0:	ldr	r2, [sp, #8]
    6ff4:	movw	r3, #21
    6ff8:	bl	0 <flatcc_json_parser_set_error>
    6ffc:	str	r0, [fp, #-4]
    7000:	b	7078 <flatcc_json_parser_object_start+0xd8>
    7004:	ldr	r0, [fp, #-8]
    7008:	ldr	r1, [sp, #12]
    700c:	add	r1, r1, #1
    7010:	ldr	r2, [sp, #8]
    7014:	bl	c548 <flatcc_json_parser_space>
    7018:	str	r0, [sp, #12]
    701c:	ldr	r0, [sp, #12]
    7020:	ldr	r1, [sp, #8]
    7024:	cmp	r0, r1
    7028:	beq	7064 <flatcc_json_parser_object_start+0xc4>
    702c:	ldr	r0, [sp, #12]
    7030:	ldrb	r0, [r0]
    7034:	cmp	r0, #125	; 0x7d
    7038:	bne	7064 <flatcc_json_parser_object_start+0xc4>
    703c:	ldr	r0, [sp, #4]
    7040:	movw	r1, #0
    7044:	str	r1, [r0]
    7048:	ldr	r0, [fp, #-8]
    704c:	ldr	r1, [sp, #12]
    7050:	add	r1, r1, #1
    7054:	ldr	r2, [sp, #8]
    7058:	bl	c548 <flatcc_json_parser_space>
    705c:	str	r0, [fp, #-4]
    7060:	b	7078 <flatcc_json_parser_object_start+0xd8>
    7064:	ldr	r0, [sp, #4]
    7068:	movw	r1, #1
    706c:	str	r1, [r0]
    7070:	ldr	r0, [sp, #12]
    7074:	str	r0, [fp, #-4]
    7078:	ldr	r0, [fp, #-4]
    707c:	mov	sp, fp
    7080:	pop	{fp, pc}

00007084 <flatcc_json_parser_symbol_start>:
    7084:	push	{fp, lr}
    7088:	mov	fp, sp
    708c:	sub	sp, sp, #16
    7090:	str	r0, [sp, #8]
    7094:	str	r1, [sp, #4]
    7098:	str	r2, [sp]
    709c:	ldr	r0, [sp, #4]
    70a0:	ldr	r1, [sp]
    70a4:	cmp	r0, r1
    70a8:	bne	70b8 <flatcc_json_parser_symbol_start+0x34>
    70ac:	ldr	r0, [sp, #4]
    70b0:	str	r0, [fp, #-4]
    70b4:	b	7124 <flatcc_json_parser_symbol_start+0xa0>
    70b8:	ldr	r0, [sp, #4]
    70bc:	ldrb	r0, [r0]
    70c0:	cmp	r0, #34	; 0x22
    70c4:	bne	70e4 <flatcc_json_parser_symbol_start+0x60>
    70c8:	ldr	r0, [sp, #4]
    70cc:	add	r0, r0, #1
    70d0:	str	r0, [sp, #4]
    70d4:	ldr	r0, [sp, #8]
    70d8:	movw	r1, #0
    70dc:	str	r1, [r0, #12]
    70e0:	b	711c <flatcc_json_parser_symbol_start+0x98>
    70e4:	ldr	r0, [sp, #4]
    70e8:	ldrb	r0, [r0]
    70ec:	cmp	r0, #46	; 0x2e
    70f0:	bne	7110 <flatcc_json_parser_symbol_start+0x8c>
    70f4:	ldr	r0, [sp, #8]
    70f8:	ldr	r1, [sp, #4]
    70fc:	ldr	r2, [sp]
    7100:	movw	r3, #5
    7104:	bl	0 <flatcc_json_parser_set_error>
    7108:	str	r0, [fp, #-4]
    710c:	b	7124 <flatcc_json_parser_symbol_start+0xa0>
    7110:	ldr	r0, [sp, #8]
    7114:	movw	r1, #1
    7118:	str	r1, [r0, #12]
    711c:	ldr	r0, [sp, #4]
    7120:	str	r0, [fp, #-4]
    7124:	ldr	r0, [fp, #-4]
    7128:	mov	sp, fp
    712c:	pop	{fp, pc}

00007130 <flatcc_json_parser_symbol_part>:
    7130:	push	{fp, lr}
    7134:	mov	fp, sp
    7138:	sub	sp, sp, #16
    713c:	str	r0, [fp, #-4]
    7140:	str	r1, [sp, #8]
    7144:	ldr	r0, [sp, #8]
    7148:	ldr	r1, [fp, #-4]
    714c:	sub	r0, r0, r1
    7150:	str	r0, [sp, #4]
    7154:	ldr	r0, [fp, #-4]
    7158:	ldr	r1, [sp, #8]
    715c:	bl	c5e4 <flatcc_json_parser_symbol_part_ext>
    7160:	mov	sp, fp
    7164:	pop	{fp, pc}

00007168 <flatcc_json_parser_match_symbol>:
    7168:	push	{fp, lr}
    716c:	mov	fp, sp
    7170:	sub	sp, sp, #24
    7174:	str	r0, [fp, #-8]
    7178:	str	r1, [sp, #12]
    717c:	str	r2, [sp, #8]
    7180:	str	r3, [sp, #4]
    7184:	ldr	r0, [sp, #12]
    7188:	str	r0, [sp]
    718c:	ldr	r0, [sp, #8]
    7190:	ldr	r1, [sp, #12]
    7194:	sub	r0, r0, r1
    7198:	ldr	r1, [sp, #4]
    719c:	cmp	r0, r1
    71a0:	bgt	71b0 <flatcc_json_parser_match_symbol+0x48>
    71a4:	ldr	r0, [sp]
    71a8:	str	r0, [fp, #-4]
    71ac:	b	72c4 <flatcc_json_parser_match_symbol+0x15c>
    71b0:	ldr	r0, [fp, #-8]
    71b4:	ldr	r0, [r0, #12]
    71b8:	cmp	r0, #0
    71bc:	beq	721c <flatcc_json_parser_match_symbol+0xb4>
    71c0:	ldr	r0, [sp, #12]
    71c4:	ldr	r1, [sp, #4]
    71c8:	add	r0, r0, r1
    71cc:	ldrb	r0, [r0]
    71d0:	cmp	r0, #32
    71d4:	ble	71fc <flatcc_json_parser_match_symbol+0x94>
    71d8:	ldr	r0, [sp, #12]
    71dc:	ldr	r1, [sp, #4]
    71e0:	add	r0, r0, r1
    71e4:	ldrb	r0, [r0]
    71e8:	cmp	r0, #58	; 0x3a
    71ec:	beq	71fc <flatcc_json_parser_match_symbol+0x94>
    71f0:	ldr	r0, [sp]
    71f4:	str	r0, [fp, #-4]
    71f8:	b	72c4 <flatcc_json_parser_match_symbol+0x15c>
    71fc:	ldr	r0, [sp, #4]
    7200:	ldr	r1, [sp, #12]
    7204:	add	r0, r1, r0
    7208:	str	r0, [sp, #12]
    720c:	ldr	r0, [fp, #-8]
    7210:	movw	r1, #0
    7214:	str	r1, [r0, #12]
    7218:	b	7254 <flatcc_json_parser_match_symbol+0xec>
    721c:	ldr	r0, [sp, #12]
    7220:	ldr	r1, [sp, #4]
    7224:	add	r0, r0, r1
    7228:	ldrb	r0, [r0]
    722c:	cmp	r0, #34	; 0x22
    7230:	beq	7240 <flatcc_json_parser_match_symbol+0xd8>
    7234:	ldr	r0, [sp]
    7238:	str	r0, [fp, #-4]
    723c:	b	72c4 <flatcc_json_parser_match_symbol+0x15c>
    7240:	ldr	r0, [sp, #4]
    7244:	add	r0, r0, #1
    7248:	ldr	r1, [sp, #12]
    724c:	add	r0, r1, r0
    7250:	str	r0, [sp, #12]
    7254:	ldr	r0, [fp, #-8]
    7258:	ldr	r1, [sp, #12]
    725c:	ldr	r2, [sp, #8]
    7260:	bl	c548 <flatcc_json_parser_space>
    7264:	str	r0, [sp, #12]
    7268:	ldr	r0, [sp, #12]
    726c:	ldr	r1, [sp, #8]
    7270:	cmp	r0, r1
    7274:	beq	72ac <flatcc_json_parser_match_symbol+0x144>
    7278:	ldr	r0, [sp, #12]
    727c:	ldrb	r0, [r0]
    7280:	cmp	r0, #58	; 0x3a
    7284:	bne	72ac <flatcc_json_parser_match_symbol+0x144>
    7288:	ldr	r0, [sp, #12]
    728c:	add	r0, r0, #1
    7290:	str	r0, [sp, #12]
    7294:	ldr	r0, [fp, #-8]
    7298:	ldr	r1, [sp, #12]
    729c:	ldr	r2, [sp, #8]
    72a0:	bl	c548 <flatcc_json_parser_space>
    72a4:	str	r0, [fp, #-4]
    72a8:	b	72c4 <flatcc_json_parser_match_symbol+0x15c>
    72ac:	ldr	r0, [fp, #-8]
    72b0:	ldr	r1, [sp, #12]
    72b4:	ldr	r2, [sp, #8]
    72b8:	movw	r3, #4
    72bc:	bl	0 <flatcc_json_parser_set_error>
    72c0:	str	r0, [fp, #-4]
    72c4:	ldr	r0, [fp, #-4]
    72c8:	mov	sp, fp
    72cc:	pop	{fp, pc}

000072d0 <MyGame_Example_Color_parse_json_enum>:
    72d0:	push	{fp, lr}
    72d4:	mov	fp, sp
    72d8:	sub	sp, sp, #64	; 0x40
    72dc:	ldr	ip, [fp, #12]
    72e0:	ldr	lr, [fp, #8]
    72e4:	str	r0, [fp, #-8]
    72e8:	str	r1, [fp, #-12]
    72ec:	str	r2, [fp, #-16]
    72f0:	str	r3, [fp, #-20]	; 0xffffffec
    72f4:	ldr	r0, [fp, #-12]
    72f8:	str	r0, [fp, #-24]	; 0xffffffe8
    72fc:	ldr	r0, [fp, #-12]
    7300:	ldr	r1, [fp, #-16]
    7304:	str	ip, [sp, #20]
    7308:	str	lr, [sp, #16]
    730c:	bl	7130 <flatcc_json_parser_symbol_part>
    7310:	str	r1, [sp, #28]
    7314:	str	r0, [sp, #24]
    7318:	ldr	r0, [sp, #24]
    731c:	ldr	r1, [sp, #28]
    7320:	mvn	r2, #-1845493760	; 0x92000000
    7324:	subs	r0, r2, r0
    7328:	movw	r2, #25957	; 0x6565
    732c:	movt	r2, #18290	; 0x4772
    7330:	sbcs	r1, r2, r1
    7334:	bcc	73d8 <MyGame_Example_Color_parse_json_enum+0x108>
    7338:	b	733c <MyGame_Example_Color_parse_json_enum+0x6c>
    733c:	ldr	r0, [sp, #28]
    7340:	movw	r1, #30053	; 0x7565
    7344:	movt	r1, #17004	; 0x426c
    7348:	teq	r0, r1
    734c:	bne	73c8 <MyGame_Example_Color_parse_json_enum+0xf8>
    7350:	b	7354 <MyGame_Example_Color_parse_json_enum+0x84>
    7354:	ldr	r0, [fp, #-8]
    7358:	ldr	r1, [fp, #-12]
    735c:	str	r1, [fp, #-28]	; 0xffffffe4
    7360:	ldr	r2, [fp, #-16]
    7364:	ldr	r3, [fp, #12]
    7368:	movw	ip, #4
    736c:	str	r3, [sp, #12]
    7370:	mov	r3, ip
    7374:	ldr	ip, [sp, #12]
    7378:	str	ip, [sp]
    737c:	bl	0 <flatcc_json_parser_match_constant>
    7380:	str	r0, [fp, #-12]
    7384:	ldr	r0, [fp, #-12]
    7388:	ldr	r1, [fp, #-28]	; 0xffffffe4
    738c:	cmp	r0, r1
    7390:	beq	73b8 <MyGame_Example_Color_parse_json_enum+0xe8>
    7394:	ldr	r0, [fp, #8]
    7398:	mov	r1, #0
    739c:	str	r1, [r0, #4]
    73a0:	mov	r1, #8
    73a4:	str	r1, [r0]
    73a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    73ac:	movw	r1, #0
    73b0:	str	r1, [r0]
    73b4:	b	73c4 <MyGame_Example_Color_parse_json_enum+0xf4>
    73b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    73bc:	str	r0, [fp, #-4]
    73c0:	b	7520 <MyGame_Example_Color_parse_json_enum+0x250>
    73c4:	b	73d4 <MyGame_Example_Color_parse_json_enum+0x104>
    73c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    73cc:	str	r0, [fp, #-4]
    73d0:	b	7520 <MyGame_Example_Color_parse_json_enum+0x250>
    73d4:	b	7518 <MyGame_Example_Color_parse_json_enum+0x248>
    73d8:	ldr	r0, [sp, #28]
    73dc:	bic	r0, r0, #255	; 0xff
    73e0:	movw	r1, #25600	; 0x6400
    73e4:	movt	r1, #21093	; 0x5265
    73e8:	teq	r0, r1
    73ec:	bne	7468 <MyGame_Example_Color_parse_json_enum+0x198>
    73f0:	b	73f4 <MyGame_Example_Color_parse_json_enum+0x124>
    73f4:	ldr	r0, [fp, #-8]
    73f8:	ldr	r1, [fp, #-12]
    73fc:	str	r1, [fp, #-28]	; 0xffffffe4
    7400:	ldr	r2, [fp, #-16]
    7404:	ldr	r3, [fp, #12]
    7408:	movw	ip, #3
    740c:	str	r3, [sp, #8]
    7410:	mov	r3, ip
    7414:	ldr	ip, [sp, #8]
    7418:	str	ip, [sp]
    741c:	bl	0 <flatcc_json_parser_match_constant>
    7420:	str	r0, [fp, #-12]
    7424:	ldr	r0, [fp, #-12]
    7428:	ldr	r1, [fp, #-28]	; 0xffffffe4
    742c:	cmp	r0, r1
    7430:	beq	7458 <MyGame_Example_Color_parse_json_enum+0x188>
    7434:	ldr	r0, [fp, #8]
    7438:	mov	r1, #0
    743c:	str	r1, [r0, #4]
    7440:	mov	r1, #1
    7444:	str	r1, [r0]
    7448:	ldr	r0, [fp, #-20]	; 0xffffffec
    744c:	movw	r1, #0
    7450:	str	r1, [r0]
    7454:	b	7464 <MyGame_Example_Color_parse_json_enum+0x194>
    7458:	ldr	r0, [fp, #-24]	; 0xffffffe8
    745c:	str	r0, [fp, #-4]
    7460:	b	7520 <MyGame_Example_Color_parse_json_enum+0x250>
    7464:	b	7514 <MyGame_Example_Color_parse_json_enum+0x244>
    7468:	ldrb	r0, [sp, #27]
    746c:	ldr	r1, [sp, #28]
    7470:	movw	r2, #25957	; 0x6565
    7474:	movt	r2, #18290	; 0x4772
    7478:	eor	r1, r1, r2
    747c:	eor	r0, r0, #110	; 0x6e
    7480:	orr	r0, r1, r0, lsl #24
    7484:	cmp	r0, #0
    7488:	bne	7504 <MyGame_Example_Color_parse_json_enum+0x234>
    748c:	b	7490 <MyGame_Example_Color_parse_json_enum+0x1c0>
    7490:	ldr	r0, [fp, #-8]
    7494:	ldr	r1, [fp, #-12]
    7498:	str	r1, [fp, #-28]	; 0xffffffe4
    749c:	ldr	r2, [fp, #-16]
    74a0:	ldr	r3, [fp, #12]
    74a4:	movw	ip, #5
    74a8:	str	r3, [sp, #4]
    74ac:	mov	r3, ip
    74b0:	ldr	ip, [sp, #4]
    74b4:	str	ip, [sp]
    74b8:	bl	0 <flatcc_json_parser_match_constant>
    74bc:	str	r0, [fp, #-12]
    74c0:	ldr	r0, [fp, #-12]
    74c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    74c8:	cmp	r0, r1
    74cc:	beq	74f4 <MyGame_Example_Color_parse_json_enum+0x224>
    74d0:	ldr	r0, [fp, #8]
    74d4:	mov	r1, #0
    74d8:	str	r1, [r0, #4]
    74dc:	mov	r1, #2
    74e0:	str	r1, [r0]
    74e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    74e8:	movw	r1, #0
    74ec:	str	r1, [r0]
    74f0:	b	7500 <MyGame_Example_Color_parse_json_enum+0x230>
    74f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    74f8:	str	r0, [fp, #-4]
    74fc:	b	7520 <MyGame_Example_Color_parse_json_enum+0x250>
    7500:	b	7510 <MyGame_Example_Color_parse_json_enum+0x240>
    7504:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7508:	str	r0, [fp, #-4]
    750c:	b	7520 <MyGame_Example_Color_parse_json_enum+0x250>
    7510:	b	7514 <MyGame_Example_Color_parse_json_enum+0x244>
    7514:	b	7518 <MyGame_Example_Color_parse_json_enum+0x248>
    7518:	ldr	r0, [fp, #-12]
    751c:	str	r0, [fp, #-4]
    7520:	ldr	r0, [fp, #-4]
    7524:	mov	sp, fp
    7528:	pop	{fp, pc}

0000752c <monster_test_local_MyGame_Example_json_parser_enum>:
    752c:	push	{fp, lr}
    7530:	mov	fp, sp
    7534:	sub	sp, sp, #56	; 0x38
    7538:	ldr	ip, [fp, #12]
    753c:	ldr	lr, [fp, #8]
    7540:	str	r0, [fp, #-8]
    7544:	str	r1, [fp, #-12]
    7548:	str	r2, [fp, #-16]
    754c:	str	r3, [fp, #-20]	; 0xffffffec
    7550:	ldr	r0, [fp, #-12]
    7554:	str	r0, [fp, #-24]	; 0xffffffe8
    7558:	ldr	r0, [fp, #-12]
    755c:	ldr	r1, [fp, #-16]
    7560:	str	ip, [sp, #12]
    7564:	str	lr, [sp, #8]
    7568:	bl	7130 <flatcc_json_parser_symbol_part>
    756c:	str	r1, [sp, #20]
    7570:	str	r0, [sp, #16]
    7574:	ldr	r0, [sp, #16]
    7578:	ldr	r1, [sp, #20]
    757c:	movw	r2, #30060	; 0x756c
    7580:	movt	r2, #25966	; 0x656e
    7584:	subs	r0, r2, r0
    7588:	movw	r2, #30815	; 0x785f
    758c:	movt	r2, #26725	; 0x6865
    7590:	sbcs	r1, r2, r1
    7594:	bcc	7780 <monster_test_local_MyGame_Example_json_parser_enum+0x254>
    7598:	b	759c <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    759c:	ldr	r0, [sp, #16]
    75a0:	ldr	r1, [sp, #20]
    75a4:	mvn	r2, #-1912602624	; 0x8e000000
    75a8:	subs	r0, r2, r0
    75ac:	movw	r2, #27759	; 0x6c6f
    75b0:	movt	r2, #17263	; 0x436f
    75b4:	sbcs	r1, r2, r1
    75b8:	bcc	7654 <monster_test_local_MyGame_Example_json_parser_enum+0x128>
    75bc:	b	75c0 <monster_test_local_MyGame_Example_json_parser_enum+0x94>
    75c0:	ldr	r0, [sp, #20]
    75c4:	bic	r0, r0, #255	; 0xff
    75c8:	movw	r1, #30976	; 0x7900
    75cc:	movt	r1, #16750	; 0x416e
    75d0:	teq	r0, r1
    75d4:	bne	7644 <monster_test_local_MyGame_Example_json_parser_enum+0x118>
    75d8:	b	75dc <monster_test_local_MyGame_Example_json_parser_enum+0xb0>
    75dc:	ldr	r0, [fp, #-8]
    75e0:	ldr	r1, [fp, #-12]
    75e4:	str	r1, [sp, #28]
    75e8:	ldr	r2, [fp, #-16]
    75ec:	movw	r3, #3
    75f0:	bl	c758 <flatcc_json_parser_match_scope>
    75f4:	str	r0, [fp, #-12]
    75f8:	ldr	r0, [fp, #-12]
    75fc:	ldr	r1, [sp, #28]
    7600:	cmp	r0, r1
    7604:	beq	7634 <monster_test_local_MyGame_Example_json_parser_enum+0x108>
    7608:	ldr	r0, [fp, #-8]
    760c:	ldr	r1, [fp, #-12]
    7610:	ldr	r2, [fp, #-16]
    7614:	ldr	r3, [fp, #-20]	; 0xffffffec
    7618:	ldr	ip, [fp, #8]
    761c:	ldr	lr, [fp, #12]
    7620:	str	ip, [sp]
    7624:	str	lr, [sp, #4]
    7628:	bl	9ecc <MyGame_Example_Any_parse_json_enum>
    762c:	str	r0, [fp, #-12]
    7630:	b	7640 <monster_test_local_MyGame_Example_json_parser_enum+0x114>
    7634:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7638:	str	r0, [fp, #-4]
    763c:	b	7abc <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    7640:	b	7650 <monster_test_local_MyGame_Example_json_parser_enum+0x124>
    7644:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7648:	str	r0, [fp, #-4]
    764c:	b	7abc <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    7650:	b	777c <monster_test_local_MyGame_Example_json_parser_enum+0x250>
    7654:	ldr	r0, [sp, #20]
    7658:	bic	r0, r0, #255	; 0xff
    765c:	movw	r1, #28416	; 0x6f00
    7660:	movt	r1, #18031	; 0x466f
    7664:	teq	r0, r1
    7668:	bne	76d8 <monster_test_local_MyGame_Example_json_parser_enum+0x1ac>
    766c:	b	7670 <monster_test_local_MyGame_Example_json_parser_enum+0x144>
    7670:	ldr	r0, [fp, #-8]
    7674:	ldr	r1, [fp, #-12]
    7678:	str	r1, [sp, #28]
    767c:	ldr	r2, [fp, #-16]
    7680:	movw	r3, #3
    7684:	bl	c758 <flatcc_json_parser_match_scope>
    7688:	str	r0, [fp, #-12]
    768c:	ldr	r0, [fp, #-12]
    7690:	ldr	r1, [sp, #28]
    7694:	cmp	r0, r1
    7698:	beq	76c8 <monster_test_local_MyGame_Example_json_parser_enum+0x19c>
    769c:	ldr	r0, [fp, #-8]
    76a0:	ldr	r1, [fp, #-12]
    76a4:	ldr	r2, [fp, #-16]
    76a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    76ac:	ldr	ip, [fp, #8]
    76b0:	ldr	lr, [fp, #12]
    76b4:	str	ip, [sp]
    76b8:	str	lr, [sp, #4]
    76bc:	bl	c7dc <MyGame_Example_Foo_parse_json_enum>
    76c0:	str	r0, [fp, #-12]
    76c4:	b	76d4 <monster_test_local_MyGame_Example_json_parser_enum+0x1a8>
    76c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    76cc:	str	r0, [fp, #-4]
    76d0:	b	7abc <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    76d4:	b	7778 <monster_test_local_MyGame_Example_json_parser_enum+0x24c>
    76d8:	ldrb	r0, [sp, #19]
    76dc:	ldr	r1, [sp, #20]
    76e0:	movw	r2, #27759	; 0x6c6f
    76e4:	movt	r2, #17263	; 0x436f
    76e8:	eor	r1, r1, r2
    76ec:	eor	r0, r0, #114	; 0x72
    76f0:	orr	r0, r1, r0, lsl #24
    76f4:	cmp	r0, #0
    76f8:	bne	7768 <monster_test_local_MyGame_Example_json_parser_enum+0x23c>
    76fc:	b	7700 <monster_test_local_MyGame_Example_json_parser_enum+0x1d4>
    7700:	ldr	r0, [fp, #-8]
    7704:	ldr	r1, [fp, #-12]
    7708:	str	r1, [sp, #28]
    770c:	ldr	r2, [fp, #-16]
    7710:	movw	r3, #5
    7714:	bl	c758 <flatcc_json_parser_match_scope>
    7718:	str	r0, [fp, #-12]
    771c:	ldr	r0, [fp, #-12]
    7720:	ldr	r1, [sp, #28]
    7724:	cmp	r0, r1
    7728:	beq	7758 <monster_test_local_MyGame_Example_json_parser_enum+0x22c>
    772c:	ldr	r0, [fp, #-8]
    7730:	ldr	r1, [fp, #-12]
    7734:	ldr	r2, [fp, #-16]
    7738:	ldr	r3, [fp, #-20]	; 0xffffffec
    773c:	ldr	ip, [fp, #8]
    7740:	ldr	lr, [fp, #12]
    7744:	str	ip, [sp]
    7748:	str	lr, [sp, #4]
    774c:	bl	72d0 <MyGame_Example_Color_parse_json_enum>
    7750:	str	r0, [fp, #-12]
    7754:	b	7764 <monster_test_local_MyGame_Example_json_parser_enum+0x238>
    7758:	ldr	r0, [fp, #-24]	; 0xffffffe8
    775c:	str	r0, [fp, #-4]
    7760:	b	7abc <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    7764:	b	7774 <monster_test_local_MyGame_Example_json_parser_enum+0x248>
    7768:	ldr	r0, [fp, #-24]	; 0xffffffe8
    776c:	str	r0, [fp, #-4]
    7770:	b	7abc <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    7774:	b	7778 <monster_test_local_MyGame_Example_json_parser_enum+0x24c>
    7778:	b	777c <monster_test_local_MyGame_Example_json_parser_enum+0x250>
    777c:	b	7ab4 <monster_test_local_MyGame_Example_json_parser_enum+0x588>
    7780:	ldr	r0, [sp, #16]
    7784:	ldr	r1, [sp, #20]
    7788:	movw	r2, #30060	; 0x756c
    778c:	movt	r2, #25966	; 0x656e
    7790:	subs	r0, r2, r0
    7794:	movw	r2, #29791	; 0x745f
    7798:	movt	r2, #26990	; 0x696e
    779c:	sbcs	r1, r2, r1
    77a0:	bcc	7850 <monster_test_local_MyGame_Example_json_parser_enum+0x324>
    77a4:	b	77a8 <monster_test_local_MyGame_Example_json_parser_enum+0x27c>
    77a8:	ldr	r0, [sp, #16]
    77ac:	ldr	r1, [sp, #20]
    77b0:	movw	r2, #30815	; 0x785f
    77b4:	movt	r2, #26725	; 0x6865
    77b8:	eor	r1, r1, r2
    77bc:	movw	r2, #30061	; 0x756d
    77c0:	movt	r2, #25966	; 0x656e
    77c4:	eor	r0, r0, r2
    77c8:	orr	r0, r0, r1
    77cc:	cmp	r0, #0
    77d0:	bne	7840 <monster_test_local_MyGame_Example_json_parser_enum+0x314>
    77d4:	b	77d8 <monster_test_local_MyGame_Example_json_parser_enum+0x2ac>
    77d8:	ldr	r0, [fp, #-8]
    77dc:	ldr	r1, [fp, #-12]
    77e0:	str	r1, [sp, #28]
    77e4:	ldr	r2, [fp, #-16]
    77e8:	movw	r3, #8
    77ec:	bl	c758 <flatcc_json_parser_match_scope>
    77f0:	str	r0, [fp, #-12]
    77f4:	ldr	r0, [fp, #-12]
    77f8:	ldr	r1, [sp, #28]
    77fc:	cmp	r0, r1
    7800:	beq	7830 <monster_test_local_MyGame_Example_json_parser_enum+0x304>
    7804:	ldr	r0, [fp, #-8]
    7808:	ldr	r1, [fp, #-12]
    780c:	ldr	r2, [fp, #-16]
    7810:	ldr	r3, [fp, #-20]	; 0xffffffec
    7814:	ldr	ip, [fp, #8]
    7818:	ldr	lr, [fp, #12]
    781c:	str	ip, [sp]
    7820:	str	lr, [sp, #4]
    7824:	bl	ca18 <MyGame_Example_hex_enum_parse_json_enum>
    7828:	str	r0, [fp, #-12]
    782c:	b	783c <monster_test_local_MyGame_Example_json_parser_enum+0x310>
    7830:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7834:	str	r0, [fp, #-4]
    7838:	b	7abc <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    783c:	b	784c <monster_test_local_MyGame_Example_json_parser_enum+0x320>
    7840:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7844:	str	r0, [fp, #-4]
    7848:	b	7abc <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    784c:	b	7ab0 <monster_test_local_MyGame_Example_json_parser_enum+0x584>
    7850:	ldr	r0, [sp, #16]
    7854:	ldr	r1, [sp, #20]
    7858:	movw	r2, #30060	; 0x756c
    785c:	movt	r2, #25966	; 0x656e
    7860:	subs	r0, r2, r0
    7864:	movw	r2, #26463	; 0x675f
    7868:	movt	r2, #28261	; 0x6e65
    786c:	sbcs	r1, r2, r1
    7870:	bcc	7920 <monster_test_local_MyGame_Example_json_parser_enum+0x3f4>
    7874:	b	7878 <monster_test_local_MyGame_Example_json_parser_enum+0x34c>
    7878:	ldr	r0, [sp, #16]
    787c:	ldr	r1, [sp, #20]
    7880:	movw	r2, #29791	; 0x745f
    7884:	movt	r2, #26990	; 0x696e
    7888:	eor	r1, r1, r2
    788c:	movw	r2, #30061	; 0x756d
    7890:	movt	r2, #25966	; 0x656e
    7894:	eor	r0, r0, r2
    7898:	orr	r0, r0, r1
    789c:	cmp	r0, #0
    78a0:	bne	7910 <monster_test_local_MyGame_Example_json_parser_enum+0x3e4>
    78a4:	b	78a8 <monster_test_local_MyGame_Example_json_parser_enum+0x37c>
    78a8:	ldr	r0, [fp, #-8]
    78ac:	ldr	r1, [fp, #-12]
    78b0:	str	r1, [sp, #28]
    78b4:	ldr	r2, [fp, #-16]
    78b8:	movw	r3, #8
    78bc:	bl	c758 <flatcc_json_parser_match_scope>
    78c0:	str	r0, [fp, #-12]
    78c4:	ldr	r0, [fp, #-12]
    78c8:	ldr	r1, [sp, #28]
    78cc:	cmp	r0, r1
    78d0:	beq	7900 <monster_test_local_MyGame_Example_json_parser_enum+0x3d4>
    78d4:	ldr	r0, [fp, #-8]
    78d8:	ldr	r1, [fp, #-12]
    78dc:	ldr	r2, [fp, #-16]
    78e0:	ldr	r3, [fp, #-20]	; 0xffffffec
    78e4:	ldr	ip, [fp, #8]
    78e8:	ldr	lr, [fp, #12]
    78ec:	str	ip, [sp]
    78f0:	str	lr, [sp, #4]
    78f4:	bl	cc70 <MyGame_Example_int_enum_parse_json_enum>
    78f8:	str	r0, [fp, #-12]
    78fc:	b	790c <monster_test_local_MyGame_Example_json_parser_enum+0x3e0>
    7900:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7904:	str	r0, [fp, #-4]
    7908:	b	7abc <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    790c:	b	791c <monster_test_local_MyGame_Example_json_parser_enum+0x3f0>
    7910:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7914:	str	r0, [fp, #-4]
    7918:	b	7abc <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    791c:	b	7aac <monster_test_local_MyGame_Example_json_parser_enum+0x580>
    7920:	ldr	r0, [sp, #16]
    7924:	ldr	r1, [sp, #20]
    7928:	movw	r2, #26463	; 0x675f
    792c:	movt	r2, #28261	; 0x6e65
    7930:	eor	r1, r1, r2
    7934:	movw	r2, #30061	; 0x756d
    7938:	movt	r2, #25966	; 0x656e
    793c:	eor	r0, r0, r2
    7940:	orr	r0, r0, r1
    7944:	cmp	r0, #0
    7948:	bne	79b0 <monster_test_local_MyGame_Example_json_parser_enum+0x484>
    794c:	b	7950 <monster_test_local_MyGame_Example_json_parser_enum+0x424>
    7950:	ldr	r0, [fp, #-8]
    7954:	ldr	r1, [fp, #-12]
    7958:	str	r1, [sp, #28]
    795c:	ldr	r2, [fp, #-16]
    7960:	movw	r3, #8
    7964:	bl	c758 <flatcc_json_parser_match_scope>
    7968:	str	r0, [fp, #-12]
    796c:	ldr	r0, [fp, #-12]
    7970:	ldr	r1, [sp, #28]
    7974:	cmp	r0, r1
    7978:	beq	79a8 <monster_test_local_MyGame_Example_json_parser_enum+0x47c>
    797c:	ldr	r0, [fp, #-8]
    7980:	ldr	r1, [fp, #-12]
    7984:	ldr	r2, [fp, #-16]
    7988:	ldr	r3, [fp, #-20]	; 0xffffffec
    798c:	ldr	ip, [fp, #8]
    7990:	ldr	lr, [fp, #12]
    7994:	str	ip, [sp]
    7998:	str	lr, [sp, #4]
    799c:	bl	cfa8 <MyGame_Example_neg_enum_parse_json_enum>
    79a0:	str	r0, [fp, #-12]
    79a4:	b	79ac <monster_test_local_MyGame_Example_json_parser_enum+0x480>
    79a8:	b	79b8 <monster_test_local_MyGame_Example_json_parser_enum+0x48c>
    79ac:	b	79b4 <monster_test_local_MyGame_Example_json_parser_enum+0x488>
    79b0:	b	79b8 <monster_test_local_MyGame_Example_json_parser_enum+0x48c>
    79b4:	b	7aa8 <monster_test_local_MyGame_Example_json_parser_enum+0x57c>
    79b8:	ldr	r0, [sp, #16]
    79bc:	ldr	r1, [sp, #20]
    79c0:	movw	r2, #29797	; 0x7465
    79c4:	movt	r2, #28271	; 0x6e6f
    79c8:	eor	r1, r1, r2
    79cc:	movw	r2, #29817	; 0x7479
    79d0:	movt	r2, #28016	; 0x6d70
    79d4:	eor	r0, r0, r2
    79d8:	orr	r0, r0, r1
    79dc:	cmp	r0, #0
    79e0:	bne	7a98 <monster_test_local_MyGame_Example_json_parser_enum+0x56c>
    79e4:	b	79e8 <monster_test_local_MyGame_Example_json_parser_enum+0x4bc>
    79e8:	ldr	r0, [fp, #-12]
    79ec:	add	r0, r0, #8
    79f0:	str	r0, [fp, #-12]
    79f4:	ldr	r0, [fp, #-12]
    79f8:	ldr	r1, [fp, #-16]
    79fc:	bl	7130 <flatcc_json_parser_symbol_part>
    7a00:	str	r1, [sp, #20]
    7a04:	str	r0, [sp, #16]
    7a08:	ldr	r0, [sp, #20]
    7a0c:	movw	r1, #30061	; 0x756d
    7a10:	movt	r1, #25966	; 0x656e
    7a14:	teq	r0, r1
    7a18:	bne	7a88 <monster_test_local_MyGame_Example_json_parser_enum+0x55c>
    7a1c:	b	7a20 <monster_test_local_MyGame_Example_json_parser_enum+0x4f4>
    7a20:	ldr	r0, [fp, #-8]
    7a24:	ldr	r1, [fp, #-12]
    7a28:	str	r1, [sp, #28]
    7a2c:	ldr	r2, [fp, #-16]
    7a30:	movw	r3, #4
    7a34:	bl	c758 <flatcc_json_parser_match_scope>
    7a38:	str	r0, [fp, #-12]
    7a3c:	ldr	r0, [fp, #-12]
    7a40:	ldr	r1, [sp, #28]
    7a44:	cmp	r0, r1
    7a48:	beq	7a78 <monster_test_local_MyGame_Example_json_parser_enum+0x54c>
    7a4c:	ldr	r0, [fp, #-8]
    7a50:	ldr	r1, [fp, #-12]
    7a54:	ldr	r2, [fp, #-16]
    7a58:	ldr	r3, [fp, #-20]	; 0xffffffec
    7a5c:	ldr	ip, [fp, #8]
    7a60:	ldr	lr, [fp, #12]
    7a64:	str	ip, [sp]
    7a68:	str	lr, [sp, #4]
    7a6c:	bl	d1e4 <MyGame_Example_notemptyenum_parse_json_enum>
    7a70:	str	r0, [fp, #-12]
    7a74:	b	7a84 <monster_test_local_MyGame_Example_json_parser_enum+0x558>
    7a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7a7c:	str	r0, [fp, #-4]
    7a80:	b	7abc <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    7a84:	b	7a94 <monster_test_local_MyGame_Example_json_parser_enum+0x568>
    7a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7a8c:	str	r0, [fp, #-4]
    7a90:	b	7abc <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    7a94:	b	7aa4 <monster_test_local_MyGame_Example_json_parser_enum+0x578>
    7a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7a9c:	str	r0, [fp, #-4]
    7aa0:	b	7abc <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    7aa4:	b	7aa8 <monster_test_local_MyGame_Example_json_parser_enum+0x57c>
    7aa8:	b	7aac <monster_test_local_MyGame_Example_json_parser_enum+0x580>
    7aac:	b	7ab0 <monster_test_local_MyGame_Example_json_parser_enum+0x584>
    7ab0:	b	7ab4 <monster_test_local_MyGame_Example_json_parser_enum+0x588>
    7ab4:	ldr	r0, [fp, #-12]
    7ab8:	str	r0, [fp, #-4]
    7abc:	ldr	r0, [fp, #-4]
    7ac0:	mov	sp, fp
    7ac4:	pop	{fp, pc}

00007ac8 <monster_test_global_json_parser_enum>:
    7ac8:	push	{fp, lr}
    7acc:	mov	fp, sp
    7ad0:	sub	sp, sp, #56	; 0x38
    7ad4:	ldr	ip, [fp, #12]
    7ad8:	ldr	lr, [fp, #8]
    7adc:	str	r0, [fp, #-8]
    7ae0:	str	r1, [fp, #-12]
    7ae4:	str	r2, [fp, #-16]
    7ae8:	str	r3, [fp, #-20]	; 0xffffffec
    7aec:	ldr	r0, [fp, #-12]
    7af0:	str	r0, [fp, #-24]	; 0xffffffe8
    7af4:	ldr	r0, [fp, #-12]
    7af8:	ldr	r1, [fp, #-16]
    7afc:	str	ip, [sp, #12]
    7b00:	str	lr, [sp, #8]
    7b04:	bl	7130 <flatcc_json_parser_symbol_part>
    7b08:	str	r1, [sp, #20]
    7b0c:	str	r0, [sp, #16]
    7b10:	ldr	r0, [sp, #16]
    7b14:	ldr	r1, [sp, #20]
    7b18:	movw	r2, #11844	; 0x2e44
    7b1c:	movt	r2, #28005	; 0x6d65
    7b20:	subs	r0, r2, r0
    7b24:	movw	r2, #18273	; 0x4761
    7b28:	movt	r2, #19833	; 0x4d79
    7b2c:	sbcs	r1, r2, r1
    7b30:	bcc	7c84 <monster_test_global_json_parser_enum+0x1bc>
    7b34:	b	7b38 <monster_test_global_json_parser_enum+0x70>
    7b38:	ldr	r0, [sp, #16]
    7b3c:	ldr	r1, [sp, #20]
    7b40:	movw	r2, #28276	; 0x6e74
    7b44:	movt	r2, #18017	; 0x4661
    7b48:	eor	r1, r1, r2
    7b4c:	movw	r2, #31022	; 0x792e
    7b50:	movt	r2, #24947	; 0x6173
    7b54:	eor	r0, r0, r2
    7b58:	orr	r0, r0, r1
    7b5c:	cmp	r0, #0
    7b60:	bne	7c74 <monster_test_global_json_parser_enum+0x1ac>
    7b64:	b	7b68 <monster_test_global_json_parser_enum+0xa0>
    7b68:	ldr	r0, [fp, #-12]
    7b6c:	add	r0, r0, #8
    7b70:	str	r0, [fp, #-12]
    7b74:	ldr	r0, [fp, #-12]
    7b78:	ldr	r1, [fp, #-16]
    7b7c:	bl	7130 <flatcc_json_parser_symbol_part>
    7b80:	str	r1, [sp, #20]
    7b84:	str	r0, [sp, #16]
    7b88:	ldr	r0, [sp, #16]
    7b8c:	ldr	r1, [sp, #20]
    7b90:	movw	r2, #24946	; 0x6172
    7b94:	movt	r2, #17256	; 0x4368
    7b98:	eor	r1, r1, r2
    7b9c:	movw	r2, #29797	; 0x7465
    7ba0:	movt	r2, #24931	; 0x6163
    7ba4:	eor	r0, r0, r2
    7ba8:	orr	r0, r0, r1
    7bac:	cmp	r0, #0
    7bb0:	bne	7c64 <monster_test_global_json_parser_enum+0x19c>
    7bb4:	b	7bb8 <monster_test_global_json_parser_enum+0xf0>
    7bb8:	ldr	r0, [fp, #-12]
    7bbc:	add	r0, r0, #8
    7bc0:	str	r0, [fp, #-12]
    7bc4:	ldr	r0, [fp, #-12]
    7bc8:	ldr	r1, [fp, #-16]
    7bcc:	bl	7130 <flatcc_json_parser_symbol_part>
    7bd0:	str	r1, [sp, #20]
    7bd4:	str	r0, [sp, #16]
    7bd8:	ldrb	r0, [sp, #23]
    7bdc:	mov	r1, #1912602624	; 0x72000000
    7be0:	teq	r1, r0, lsl #24
    7be4:	bne	7c54 <monster_test_global_json_parser_enum+0x18c>
    7be8:	b	7bec <monster_test_global_json_parser_enum+0x124>
    7bec:	ldr	r0, [fp, #-8]
    7bf0:	ldr	r1, [fp, #-12]
    7bf4:	str	r1, [sp, #28]
    7bf8:	ldr	r2, [fp, #-16]
    7bfc:	movw	r3, #1
    7c00:	bl	c758 <flatcc_json_parser_match_scope>
    7c04:	str	r0, [fp, #-12]
    7c08:	ldr	r0, [fp, #-12]
    7c0c:	ldr	r1, [sp, #28]
    7c10:	cmp	r0, r1
    7c14:	beq	7c44 <monster_test_global_json_parser_enum+0x17c>
    7c18:	ldr	r0, [fp, #-8]
    7c1c:	ldr	r1, [fp, #-12]
    7c20:	ldr	r2, [fp, #-16]
    7c24:	ldr	r3, [fp, #-20]	; 0xffffffec
    7c28:	ldr	ip, [fp, #8]
    7c2c:	ldr	lr, [fp, #12]
    7c30:	str	ip, [sp]
    7c34:	str	lr, [sp, #4]
    7c38:	bl	d2d0 <Fantasy_Character_parse_json_enum>
    7c3c:	str	r0, [fp, #-12]
    7c40:	b	7c50 <monster_test_global_json_parser_enum+0x188>
    7c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7c48:	str	r0, [fp, #-4]
    7c4c:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    7c50:	b	7c60 <monster_test_global_json_parser_enum+0x198>
    7c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7c58:	str	r0, [fp, #-4]
    7c5c:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    7c60:	b	7c70 <monster_test_global_json_parser_enum+0x1a8>
    7c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7c68:	str	r0, [fp, #-4]
    7c6c:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    7c70:	b	7c80 <monster_test_global_json_parser_enum+0x1b8>
    7c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7c78:	str	r0, [fp, #-4]
    7c7c:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    7c80:	b	8670 <monster_test_global_json_parser_enum+0xba8>
    7c84:	ldr	r0, [sp, #16]
    7c88:	ldr	r1, [sp, #20]
    7c8c:	movw	r2, #18273	; 0x4761
    7c90:	movt	r2, #19833	; 0x4d79
    7c94:	eor	r1, r1, r2
    7c98:	movw	r2, #11845	; 0x2e45
    7c9c:	movt	r2, #28005	; 0x6d65
    7ca0:	eor	r0, r0, r2
    7ca4:	orr	r0, r0, r1
    7ca8:	cmp	r0, #0
    7cac:	bne	8460 <monster_test_global_json_parser_enum+0x998>
    7cb0:	b	7cb4 <monster_test_global_json_parser_enum+0x1ec>
    7cb4:	ldr	r0, [fp, #-12]
    7cb8:	add	r0, r0, #8
    7cbc:	str	r0, [fp, #-12]
    7cc0:	ldr	r0, [fp, #-12]
    7cc4:	ldr	r1, [fp, #-16]
    7cc8:	bl	7130 <flatcc_json_parser_symbol_part>
    7ccc:	str	r1, [sp, #20]
    7cd0:	str	r0, [sp, #16]
    7cd4:	ldr	r0, [sp, #16]
    7cd8:	ldr	r1, [sp, #20]
    7cdc:	movw	r2, #11879	; 0x2e67
    7ce0:	movt	r2, #27749	; 0x6c65
    7ce4:	subs	r0, r2, r0
    7ce8:	movw	r2, #28016	; 0x6d70
    7cec:	movt	r2, #30817	; 0x7861
    7cf0:	sbcs	r1, r2, r1
    7cf4:	bcc	7fec <monster_test_global_json_parser_enum+0x524>
    7cf8:	b	7cfc <monster_test_global_json_parser_enum+0x234>
    7cfc:	ldr	r0, [sp, #16]
    7d00:	ldr	r1, [sp, #20]
    7d04:	movw	r2, #11842	; 0x2e42
    7d08:	movt	r2, #27749	; 0x6c65
    7d0c:	subs	r0, r2, r0
    7d10:	movw	r2, #28016	; 0x6d70
    7d14:	movt	r2, #30817	; 0x7861
    7d18:	sbcs	r1, r2, r1
    7d1c:	bcc	7e14 <monster_test_global_json_parser_enum+0x34c>
    7d20:	b	7d24 <monster_test_global_json_parser_enum+0x25c>
    7d24:	ldr	r0, [sp, #16]
    7d28:	ldr	r1, [sp, #20]
    7d2c:	movw	r2, #28016	; 0x6d70
    7d30:	movt	r2, #30817	; 0x7861
    7d34:	eor	r1, r1, r2
    7d38:	movw	r2, #11841	; 0x2e41
    7d3c:	movt	r2, #27749	; 0x6c65
    7d40:	eor	r0, r0, r2
    7d44:	orr	r0, r0, r1
    7d48:	cmp	r0, #0
    7d4c:	bne	7e04 <monster_test_global_json_parser_enum+0x33c>
    7d50:	b	7d54 <monster_test_global_json_parser_enum+0x28c>
    7d54:	ldr	r0, [fp, #-12]
    7d58:	add	r0, r0, #8
    7d5c:	str	r0, [fp, #-12]
    7d60:	ldr	r0, [fp, #-12]
    7d64:	ldr	r1, [fp, #-16]
    7d68:	bl	7130 <flatcc_json_parser_symbol_part>
    7d6c:	str	r1, [sp, #20]
    7d70:	str	r0, [sp, #16]
    7d74:	ldrh	r0, [sp, #22]
    7d78:	movw	r1, #0
    7d7c:	movt	r1, #28281	; 0x6e79
    7d80:	teq	r1, r0, lsl #16
    7d84:	bne	7df4 <monster_test_global_json_parser_enum+0x32c>
    7d88:	b	7d8c <monster_test_global_json_parser_enum+0x2c4>
    7d8c:	ldr	r0, [fp, #-8]
    7d90:	ldr	r1, [fp, #-12]
    7d94:	str	r1, [sp, #28]
    7d98:	ldr	r2, [fp, #-16]
    7d9c:	movw	r3, #2
    7da0:	bl	c758 <flatcc_json_parser_match_scope>
    7da4:	str	r0, [fp, #-12]
    7da8:	ldr	r0, [fp, #-12]
    7dac:	ldr	r1, [sp, #28]
    7db0:	cmp	r0, r1
    7db4:	beq	7de4 <monster_test_global_json_parser_enum+0x31c>
    7db8:	ldr	r0, [fp, #-8]
    7dbc:	ldr	r1, [fp, #-12]
    7dc0:	ldr	r2, [fp, #-16]
    7dc4:	ldr	r3, [fp, #-20]	; 0xffffffec
    7dc8:	ldr	ip, [fp, #8]
    7dcc:	ldr	lr, [fp, #12]
    7dd0:	str	ip, [sp]
    7dd4:	str	lr, [sp, #4]
    7dd8:	bl	9ecc <MyGame_Example_Any_parse_json_enum>
    7ddc:	str	r0, [fp, #-12]
    7de0:	b	7df0 <monster_test_global_json_parser_enum+0x328>
    7de4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7de8:	str	r0, [fp, #-4]
    7dec:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    7df0:	b	7e00 <monster_test_global_json_parser_enum+0x338>
    7df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7df8:	str	r0, [fp, #-4]
    7dfc:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    7e00:	b	7e10 <monster_test_global_json_parser_enum+0x348>
    7e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7e08:	str	r0, [fp, #-4]
    7e0c:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    7e10:	b	7fe8 <monster_test_global_json_parser_enum+0x520>
    7e14:	ldr	r0, [sp, #16]
    7e18:	ldr	r1, [sp, #20]
    7e1c:	movw	r2, #28016	; 0x6d70
    7e20:	movt	r2, #30817	; 0x7861
    7e24:	eor	r1, r1, r2
    7e28:	movw	r2, #11843	; 0x2e43
    7e2c:	movt	r2, #27749	; 0x6c65
    7e30:	eor	r0, r0, r2
    7e34:	orr	r0, r0, r1
    7e38:	cmp	r0, #0
    7e3c:	bne	7ef4 <monster_test_global_json_parser_enum+0x42c>
    7e40:	b	7e44 <monster_test_global_json_parser_enum+0x37c>
    7e44:	ldr	r0, [fp, #-12]
    7e48:	add	r0, r0, #8
    7e4c:	str	r0, [fp, #-12]
    7e50:	ldr	r0, [fp, #-12]
    7e54:	ldr	r1, [fp, #-16]
    7e58:	bl	7130 <flatcc_json_parser_symbol_part>
    7e5c:	str	r1, [sp, #20]
    7e60:	str	r0, [sp, #16]
    7e64:	ldr	r0, [sp, #20]
    7e68:	movw	r1, #28530	; 0x6f72
    7e6c:	movt	r1, #28524	; 0x6f6c
    7e70:	teq	r0, r1
    7e74:	bne	7ee4 <monster_test_global_json_parser_enum+0x41c>
    7e78:	b	7e7c <monster_test_global_json_parser_enum+0x3b4>
    7e7c:	ldr	r0, [fp, #-8]
    7e80:	ldr	r1, [fp, #-12]
    7e84:	str	r1, [sp, #28]
    7e88:	ldr	r2, [fp, #-16]
    7e8c:	movw	r3, #4
    7e90:	bl	c758 <flatcc_json_parser_match_scope>
    7e94:	str	r0, [fp, #-12]
    7e98:	ldr	r0, [fp, #-12]
    7e9c:	ldr	r1, [sp, #28]
    7ea0:	cmp	r0, r1
    7ea4:	beq	7ed4 <monster_test_global_json_parser_enum+0x40c>
    7ea8:	ldr	r0, [fp, #-8]
    7eac:	ldr	r1, [fp, #-12]
    7eb0:	ldr	r2, [fp, #-16]
    7eb4:	ldr	r3, [fp, #-20]	; 0xffffffec
    7eb8:	ldr	ip, [fp, #8]
    7ebc:	ldr	lr, [fp, #12]
    7ec0:	str	ip, [sp]
    7ec4:	str	lr, [sp, #4]
    7ec8:	bl	72d0 <MyGame_Example_Color_parse_json_enum>
    7ecc:	str	r0, [fp, #-12]
    7ed0:	b	7ee0 <monster_test_global_json_parser_enum+0x418>
    7ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7ed8:	str	r0, [fp, #-4]
    7edc:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    7ee0:	b	7ef0 <monster_test_global_json_parser_enum+0x428>
    7ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7ee8:	str	r0, [fp, #-4]
    7eec:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    7ef0:	b	7fe4 <monster_test_global_json_parser_enum+0x51c>
    7ef4:	ldr	r0, [sp, #16]
    7ef8:	ldr	r1, [sp, #20]
    7efc:	movw	r2, #28016	; 0x6d70
    7f00:	movt	r2, #30817	; 0x7861
    7f04:	eor	r1, r1, r2
    7f08:	movw	r2, #11846	; 0x2e46
    7f0c:	movt	r2, #27749	; 0x6c65
    7f10:	eor	r0, r0, r2
    7f14:	orr	r0, r0, r1
    7f18:	cmp	r0, #0
    7f1c:	bne	7fd4 <monster_test_global_json_parser_enum+0x50c>
    7f20:	b	7f24 <monster_test_global_json_parser_enum+0x45c>
    7f24:	ldr	r0, [fp, #-12]
    7f28:	add	r0, r0, #8
    7f2c:	str	r0, [fp, #-12]
    7f30:	ldr	r0, [fp, #-12]
    7f34:	ldr	r1, [fp, #-16]
    7f38:	bl	7130 <flatcc_json_parser_symbol_part>
    7f3c:	str	r1, [sp, #20]
    7f40:	str	r0, [sp, #16]
    7f44:	ldrh	r0, [sp, #22]
    7f48:	movw	r1, #0
    7f4c:	movt	r1, #28527	; 0x6f6f
    7f50:	teq	r1, r0, lsl #16
    7f54:	bne	7fc4 <monster_test_global_json_parser_enum+0x4fc>
    7f58:	b	7f5c <monster_test_global_json_parser_enum+0x494>
    7f5c:	ldr	r0, [fp, #-8]
    7f60:	ldr	r1, [fp, #-12]
    7f64:	str	r1, [sp, #28]
    7f68:	ldr	r2, [fp, #-16]
    7f6c:	movw	r3, #2
    7f70:	bl	c758 <flatcc_json_parser_match_scope>
    7f74:	str	r0, [fp, #-12]
    7f78:	ldr	r0, [fp, #-12]
    7f7c:	ldr	r1, [sp, #28]
    7f80:	cmp	r0, r1
    7f84:	beq	7fb4 <monster_test_global_json_parser_enum+0x4ec>
    7f88:	ldr	r0, [fp, #-8]
    7f8c:	ldr	r1, [fp, #-12]
    7f90:	ldr	r2, [fp, #-16]
    7f94:	ldr	r3, [fp, #-20]	; 0xffffffec
    7f98:	ldr	ip, [fp, #8]
    7f9c:	ldr	lr, [fp, #12]
    7fa0:	str	ip, [sp]
    7fa4:	str	lr, [sp, #4]
    7fa8:	bl	c7dc <MyGame_Example_Foo_parse_json_enum>
    7fac:	str	r0, [fp, #-12]
    7fb0:	b	7fc0 <monster_test_global_json_parser_enum+0x4f8>
    7fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7fb8:	str	r0, [fp, #-4]
    7fbc:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    7fc0:	b	7fd0 <monster_test_global_json_parser_enum+0x508>
    7fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7fc8:	str	r0, [fp, #-4]
    7fcc:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    7fd0:	b	7fe0 <monster_test_global_json_parser_enum+0x518>
    7fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7fd8:	str	r0, [fp, #-4]
    7fdc:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    7fe0:	b	7fe4 <monster_test_global_json_parser_enum+0x51c>
    7fe4:	b	7fe8 <monster_test_global_json_parser_enum+0x520>
    7fe8:	b	845c <monster_test_global_json_parser_enum+0x994>
    7fec:	ldr	r0, [sp, #16]
    7ff0:	ldr	r1, [sp, #20]
    7ff4:	movw	r2, #11880	; 0x2e68
    7ff8:	movt	r2, #27749	; 0x6c65
    7ffc:	subs	r0, r2, r0
    8000:	movw	r2, #28016	; 0x6d70
    8004:	movt	r2, #30817	; 0x7861
    8008:	sbcs	r1, r2, r1
    800c:	bcc	8124 <monster_test_global_json_parser_enum+0x65c>
    8010:	b	8014 <monster_test_global_json_parser_enum+0x54c>
    8014:	ldr	r0, [sp, #16]
    8018:	ldr	r1, [sp, #20]
    801c:	movw	r2, #28016	; 0x6d70
    8020:	movt	r2, #30817	; 0x7861
    8024:	eor	r1, r1, r2
    8028:	movw	r2, #11880	; 0x2e68
    802c:	movt	r2, #27749	; 0x6c65
    8030:	eor	r0, r0, r2
    8034:	orr	r0, r0, r1
    8038:	cmp	r0, #0
    803c:	bne	8114 <monster_test_global_json_parser_enum+0x64c>
    8040:	b	8044 <monster_test_global_json_parser_enum+0x57c>
    8044:	ldr	r0, [fp, #-12]
    8048:	add	r0, r0, #8
    804c:	str	r0, [fp, #-12]
    8050:	ldr	r0, [fp, #-12]
    8054:	ldr	r1, [fp, #-16]
    8058:	bl	7130 <flatcc_json_parser_symbol_part>
    805c:	str	r1, [sp, #20]
    8060:	str	r0, [sp, #16]
    8064:	ldr	r0, [sp, #16]
    8068:	ldr	r1, [sp, #20]
    806c:	movw	r2, #30815	; 0x785f
    8070:	movt	r2, #101	; 0x65
    8074:	eor	r2, r2, r1, lsr #8
    8078:	lsr	r0, r0, #8
    807c:	orr	r0, r0, r1, lsl #24
    8080:	movw	r1, #30061	; 0x756d
    8084:	movt	r1, #25966	; 0x656e
    8088:	eor	r0, r0, r1
    808c:	orr	r0, r0, r2
    8090:	cmp	r0, #0
    8094:	bne	8104 <monster_test_global_json_parser_enum+0x63c>
    8098:	b	809c <monster_test_global_json_parser_enum+0x5d4>
    809c:	ldr	r0, [fp, #-8]
    80a0:	ldr	r1, [fp, #-12]
    80a4:	str	r1, [sp, #28]
    80a8:	ldr	r2, [fp, #-16]
    80ac:	movw	r3, #7
    80b0:	bl	c758 <flatcc_json_parser_match_scope>
    80b4:	str	r0, [fp, #-12]
    80b8:	ldr	r0, [fp, #-12]
    80bc:	ldr	r1, [sp, #28]
    80c0:	cmp	r0, r1
    80c4:	beq	80f4 <monster_test_global_json_parser_enum+0x62c>
    80c8:	ldr	r0, [fp, #-8]
    80cc:	ldr	r1, [fp, #-12]
    80d0:	ldr	r2, [fp, #-16]
    80d4:	ldr	r3, [fp, #-20]	; 0xffffffec
    80d8:	ldr	ip, [fp, #8]
    80dc:	ldr	lr, [fp, #12]
    80e0:	str	ip, [sp]
    80e4:	str	lr, [sp, #4]
    80e8:	bl	ca18 <MyGame_Example_hex_enum_parse_json_enum>
    80ec:	str	r0, [fp, #-12]
    80f0:	b	8100 <monster_test_global_json_parser_enum+0x638>
    80f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    80f8:	str	r0, [fp, #-4]
    80fc:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    8100:	b	8110 <monster_test_global_json_parser_enum+0x648>
    8104:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8108:	str	r0, [fp, #-4]
    810c:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    8110:	b	8120 <monster_test_global_json_parser_enum+0x658>
    8114:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8118:	str	r0, [fp, #-4]
    811c:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    8120:	b	8458 <monster_test_global_json_parser_enum+0x990>
    8124:	ldr	r0, [sp, #16]
    8128:	ldr	r1, [sp, #20]
    812c:	movw	r2, #11885	; 0x2e6d
    8130:	movt	r2, #27749	; 0x6c65
    8134:	subs	r0, r2, r0
    8138:	movw	r2, #28016	; 0x6d70
    813c:	movt	r2, #30817	; 0x7861
    8140:	sbcs	r1, r2, r1
    8144:	bcc	825c <monster_test_global_json_parser_enum+0x794>
    8148:	b	814c <monster_test_global_json_parser_enum+0x684>
    814c:	ldr	r0, [sp, #16]
    8150:	ldr	r1, [sp, #20]
    8154:	movw	r2, #28016	; 0x6d70
    8158:	movt	r2, #30817	; 0x7861
    815c:	eor	r1, r1, r2
    8160:	movw	r2, #11881	; 0x2e69
    8164:	movt	r2, #27749	; 0x6c65
    8168:	eor	r0, r0, r2
    816c:	orr	r0, r0, r1
    8170:	cmp	r0, #0
    8174:	bne	824c <monster_test_global_json_parser_enum+0x784>
    8178:	b	817c <monster_test_global_json_parser_enum+0x6b4>
    817c:	ldr	r0, [fp, #-12]
    8180:	add	r0, r0, #8
    8184:	str	r0, [fp, #-12]
    8188:	ldr	r0, [fp, #-12]
    818c:	ldr	r1, [fp, #-16]
    8190:	bl	7130 <flatcc_json_parser_symbol_part>
    8194:	str	r1, [sp, #20]
    8198:	str	r0, [sp, #16]
    819c:	ldr	r0, [sp, #16]
    81a0:	ldr	r1, [sp, #20]
    81a4:	movw	r2, #29791	; 0x745f
    81a8:	movt	r2, #110	; 0x6e
    81ac:	eor	r2, r2, r1, lsr #8
    81b0:	lsr	r0, r0, #8
    81b4:	orr	r0, r0, r1, lsl #24
    81b8:	movw	r1, #30061	; 0x756d
    81bc:	movt	r1, #25966	; 0x656e
    81c0:	eor	r0, r0, r1
    81c4:	orr	r0, r0, r2
    81c8:	cmp	r0, #0
    81cc:	bne	823c <monster_test_global_json_parser_enum+0x774>
    81d0:	b	81d4 <monster_test_global_json_parser_enum+0x70c>
    81d4:	ldr	r0, [fp, #-8]
    81d8:	ldr	r1, [fp, #-12]
    81dc:	str	r1, [sp, #28]
    81e0:	ldr	r2, [fp, #-16]
    81e4:	movw	r3, #7
    81e8:	bl	c758 <flatcc_json_parser_match_scope>
    81ec:	str	r0, [fp, #-12]
    81f0:	ldr	r0, [fp, #-12]
    81f4:	ldr	r1, [sp, #28]
    81f8:	cmp	r0, r1
    81fc:	beq	822c <monster_test_global_json_parser_enum+0x764>
    8200:	ldr	r0, [fp, #-8]
    8204:	ldr	r1, [fp, #-12]
    8208:	ldr	r2, [fp, #-16]
    820c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8210:	ldr	ip, [fp, #8]
    8214:	ldr	lr, [fp, #12]
    8218:	str	ip, [sp]
    821c:	str	lr, [sp, #4]
    8220:	bl	cc70 <MyGame_Example_int_enum_parse_json_enum>
    8224:	str	r0, [fp, #-12]
    8228:	b	8238 <monster_test_global_json_parser_enum+0x770>
    822c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8230:	str	r0, [fp, #-4]
    8234:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    8238:	b	8248 <monster_test_global_json_parser_enum+0x780>
    823c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8240:	str	r0, [fp, #-4]
    8244:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    8248:	b	8258 <monster_test_global_json_parser_enum+0x790>
    824c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8250:	str	r0, [fp, #-4]
    8254:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    8258:	b	8454 <monster_test_global_json_parser_enum+0x98c>
    825c:	ldr	r0, [sp, #16]
    8260:	ldr	r1, [sp, #20]
    8264:	movw	r2, #28016	; 0x6d70
    8268:	movt	r2, #30817	; 0x7861
    826c:	eor	r1, r1, r2
    8270:	movw	r2, #11886	; 0x2e6e
    8274:	movt	r2, #27749	; 0x6c65
    8278:	eor	r0, r0, r2
    827c:	orr	r0, r0, r1
    8280:	cmp	r0, #0
    8284:	bne	8444 <monster_test_global_json_parser_enum+0x97c>
    8288:	b	828c <monster_test_global_json_parser_enum+0x7c4>
    828c:	ldr	r0, [fp, #-12]
    8290:	add	r0, r0, #8
    8294:	str	r0, [fp, #-12]
    8298:	ldr	r0, [fp, #-12]
    829c:	ldr	r1, [fp, #-16]
    82a0:	bl	7130 <flatcc_json_parser_symbol_part>
    82a4:	str	r1, [sp, #20]
    82a8:	str	r0, [sp, #16]
    82ac:	ldr	r0, [sp, #16]
    82b0:	ldr	r1, [sp, #20]
    82b4:	movw	r2, #26463	; 0x675f
    82b8:	movt	r2, #101	; 0x65
    82bc:	eor	r2, r2, r1, lsr #8
    82c0:	lsr	r0, r0, #8
    82c4:	orr	r0, r0, r1, lsl #24
    82c8:	movw	r1, #30061	; 0x756d
    82cc:	movt	r1, #25966	; 0x656e
    82d0:	eor	r0, r0, r1
    82d4:	orr	r0, r0, r2
    82d8:	cmp	r0, #0
    82dc:	bne	8344 <monster_test_global_json_parser_enum+0x87c>
    82e0:	b	82e4 <monster_test_global_json_parser_enum+0x81c>
    82e4:	ldr	r0, [fp, #-8]
    82e8:	ldr	r1, [fp, #-12]
    82ec:	str	r1, [sp, #28]
    82f0:	ldr	r2, [fp, #-16]
    82f4:	movw	r3, #7
    82f8:	bl	c758 <flatcc_json_parser_match_scope>
    82fc:	str	r0, [fp, #-12]
    8300:	ldr	r0, [fp, #-12]
    8304:	ldr	r1, [sp, #28]
    8308:	cmp	r0, r1
    830c:	beq	833c <monster_test_global_json_parser_enum+0x874>
    8310:	ldr	r0, [fp, #-8]
    8314:	ldr	r1, [fp, #-12]
    8318:	ldr	r2, [fp, #-16]
    831c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8320:	ldr	ip, [fp, #8]
    8324:	ldr	lr, [fp, #12]
    8328:	str	ip, [sp]
    832c:	str	lr, [sp, #4]
    8330:	bl	cfa8 <MyGame_Example_neg_enum_parse_json_enum>
    8334:	str	r0, [fp, #-12]
    8338:	b	8340 <monster_test_global_json_parser_enum+0x878>
    833c:	b	834c <monster_test_global_json_parser_enum+0x884>
    8340:	b	8348 <monster_test_global_json_parser_enum+0x880>
    8344:	b	834c <monster_test_global_json_parser_enum+0x884>
    8348:	b	8440 <monster_test_global_json_parser_enum+0x978>
    834c:	ldr	r0, [sp, #16]
    8350:	ldr	r1, [sp, #20]
    8354:	movw	r2, #25965	; 0x656d
    8358:	movt	r2, #28532	; 0x6f74
    835c:	eor	r1, r1, r2
    8360:	movw	r2, #31077	; 0x7965
    8364:	movt	r2, #28788	; 0x7074
    8368:	eor	r0, r0, r2
    836c:	orr	r0, r0, r1
    8370:	cmp	r0, #0
    8374:	bne	8430 <monster_test_global_json_parser_enum+0x968>
    8378:	b	837c <monster_test_global_json_parser_enum+0x8b4>
    837c:	ldr	r0, [fp, #-12]
    8380:	add	r0, r0, #8
    8384:	str	r0, [fp, #-12]
    8388:	ldr	r0, [fp, #-12]
    838c:	ldr	r1, [fp, #-16]
    8390:	bl	7130 <flatcc_json_parser_symbol_part>
    8394:	str	r1, [sp, #20]
    8398:	str	r0, [sp, #16]
    839c:	ldr	r0, [sp, #20]
    83a0:	bic	r0, r0, #255	; 0xff
    83a4:	movw	r1, #27904	; 0x6d00
    83a8:	movt	r1, #28277	; 0x6e75
    83ac:	teq	r0, r1
    83b0:	bne	8420 <monster_test_global_json_parser_enum+0x958>
    83b4:	b	83b8 <monster_test_global_json_parser_enum+0x8f0>
    83b8:	ldr	r0, [fp, #-8]
    83bc:	ldr	r1, [fp, #-12]
    83c0:	str	r1, [sp, #28]
    83c4:	ldr	r2, [fp, #-16]
    83c8:	movw	r3, #3
    83cc:	bl	c758 <flatcc_json_parser_match_scope>
    83d0:	str	r0, [fp, #-12]
    83d4:	ldr	r0, [fp, #-12]
    83d8:	ldr	r1, [sp, #28]
    83dc:	cmp	r0, r1
    83e0:	beq	8410 <monster_test_global_json_parser_enum+0x948>
    83e4:	ldr	r0, [fp, #-8]
    83e8:	ldr	r1, [fp, #-12]
    83ec:	ldr	r2, [fp, #-16]
    83f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    83f4:	ldr	ip, [fp, #8]
    83f8:	ldr	lr, [fp, #12]
    83fc:	str	ip, [sp]
    8400:	str	lr, [sp, #4]
    8404:	bl	d1e4 <MyGame_Example_notemptyenum_parse_json_enum>
    8408:	str	r0, [fp, #-12]
    840c:	b	841c <monster_test_global_json_parser_enum+0x954>
    8410:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8414:	str	r0, [fp, #-4]
    8418:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    841c:	b	842c <monster_test_global_json_parser_enum+0x964>
    8420:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8424:	str	r0, [fp, #-4]
    8428:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    842c:	b	843c <monster_test_global_json_parser_enum+0x974>
    8430:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8434:	str	r0, [fp, #-4]
    8438:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    843c:	b	8440 <monster_test_global_json_parser_enum+0x978>
    8440:	b	8450 <monster_test_global_json_parser_enum+0x988>
    8444:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8448:	str	r0, [fp, #-4]
    844c:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    8450:	b	8454 <monster_test_global_json_parser_enum+0x98c>
    8454:	b	8458 <monster_test_global_json_parser_enum+0x990>
    8458:	b	845c <monster_test_global_json_parser_enum+0x994>
    845c:	b	866c <monster_test_global_json_parser_enum+0xba4>
    8460:	ldr	r0, [sp, #16]
    8464:	ldr	r1, [sp, #20]
    8468:	movw	r2, #18273	; 0x4761
    846c:	movt	r2, #19833	; 0x4d79
    8470:	eor	r1, r1, r2
    8474:	movw	r2, #11855	; 0x2e4f
    8478:	movt	r2, #28005	; 0x6d65
    847c:	eor	r0, r0, r2
    8480:	orr	r0, r0, r1
    8484:	cmp	r0, #0
    8488:	bne	865c <monster_test_global_json_parser_enum+0xb94>
    848c:	b	8490 <monster_test_global_json_parser_enum+0x9c8>
    8490:	ldr	r0, [fp, #-12]
    8494:	add	r0, r0, #8
    8498:	str	r0, [fp, #-12]
    849c:	ldr	r0, [fp, #-12]
    84a0:	ldr	r1, [fp, #-16]
    84a4:	bl	7130 <flatcc_json_parser_symbol_part>
    84a8:	str	r1, [sp, #20]
    84ac:	str	r0, [sp, #16]
    84b0:	ldr	r0, [sp, #16]
    84b4:	ldr	r1, [sp, #20]
    84b8:	movw	r2, #25970	; 0x6572
    84bc:	movt	r2, #29800	; 0x7468
    84c0:	eor	r1, r1, r2
    84c4:	movw	r2, #28005	; 0x6d65
    84c8:	movt	r2, #20065	; 0x4e61
    84cc:	eor	r0, r0, r2
    84d0:	orr	r0, r0, r1
    84d4:	cmp	r0, #0
    84d8:	bne	864c <monster_test_global_json_parser_enum+0xb84>
    84dc:	b	84e0 <monster_test_global_json_parser_enum+0xa18>
    84e0:	ldr	r0, [fp, #-12]
    84e4:	add	r0, r0, #8
    84e8:	str	r0, [fp, #-12]
    84ec:	ldr	r0, [fp, #-12]
    84f0:	ldr	r1, [fp, #-16]
    84f4:	bl	7130 <flatcc_json_parser_symbol_part>
    84f8:	str	r1, [sp, #20]
    84fc:	str	r0, [sp, #16]
    8500:	ldr	r0, [sp, #16]
    8504:	ldr	r1, [sp, #20]
    8508:	movw	r2, #24931	; 0x6163
    850c:	movt	r2, #21360	; 0x5370
    8510:	eor	r1, r1, r2
    8514:	movw	r2, #18034	; 0x4672
    8518:	movt	r2, #25902	; 0x652e
    851c:	eor	r0, r0, r2
    8520:	orr	r0, r0, r1
    8524:	cmp	r0, #0
    8528:	bne	863c <monster_test_global_json_parser_enum+0xb74>
    852c:	b	8530 <monster_test_global_json_parser_enum+0xa68>
    8530:	ldr	r0, [fp, #-12]
    8534:	add	r0, r0, #8
    8538:	str	r0, [fp, #-12]
    853c:	ldr	r0, [fp, #-12]
    8540:	ldr	r1, [fp, #-16]
    8544:	bl	7130 <flatcc_json_parser_symbol_part>
    8548:	str	r1, [sp, #20]
    854c:	str	r0, [sp, #16]
    8550:	ldr	r0, [sp, #16]
    8554:	ldr	r1, [sp, #20]
    8558:	movw	r2, #18798	; 0x496e
    855c:	movt	r2, #28525	; 0x6f6d
    8560:	eor	r1, r1, r2
    8564:	movw	r2, #30052	; 0x7564
    8568:	movt	r2, #25452	; 0x636c
    856c:	eor	r0, r0, r2
    8570:	orr	r0, r0, r1
    8574:	cmp	r0, #0
    8578:	bne	862c <monster_test_global_json_parser_enum+0xb64>
    857c:	b	8580 <monster_test_global_json_parser_enum+0xab8>
    8580:	ldr	r0, [fp, #-12]
    8584:	add	r0, r0, #8
    8588:	str	r0, [fp, #-12]
    858c:	ldr	r0, [fp, #-12]
    8590:	ldr	r1, [fp, #-16]
    8594:	bl	7130 <flatcc_json_parser_symbol_part>
    8598:	str	r1, [sp, #20]
    859c:	str	r0, [sp, #16]
    85a0:	ldrb	r0, [sp, #23]
    85a4:	mov	r1, #1694498816	; 0x65000000
    85a8:	teq	r1, r0, lsl #24
    85ac:	bne	861c <monster_test_global_json_parser_enum+0xb54>
    85b0:	b	85b4 <monster_test_global_json_parser_enum+0xaec>
    85b4:	ldr	r0, [fp, #-8]
    85b8:	ldr	r1, [fp, #-12]
    85bc:	str	r1, [sp, #28]
    85c0:	ldr	r2, [fp, #-16]
    85c4:	movw	r3, #1
    85c8:	bl	c758 <flatcc_json_parser_match_scope>
    85cc:	str	r0, [fp, #-12]
    85d0:	ldr	r0, [fp, #-12]
    85d4:	ldr	r1, [sp, #28]
    85d8:	cmp	r0, r1
    85dc:	beq	860c <monster_test_global_json_parser_enum+0xb44>
    85e0:	ldr	r0, [fp, #-8]
    85e4:	ldr	r1, [fp, #-12]
    85e8:	ldr	r2, [fp, #-16]
    85ec:	ldr	r3, [fp, #-20]	; 0xffffffec
    85f0:	ldr	ip, [fp, #8]
    85f4:	ldr	lr, [fp, #12]
    85f8:	str	ip, [sp]
    85fc:	str	lr, [sp, #4]
    8600:	bl	d86c <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    8604:	str	r0, [fp, #-12]
    8608:	b	8618 <monster_test_global_json_parser_enum+0xb50>
    860c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8610:	str	r0, [fp, #-4]
    8614:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    8618:	b	8628 <monster_test_global_json_parser_enum+0xb60>
    861c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8620:	str	r0, [fp, #-4]
    8624:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    8628:	b	8638 <monster_test_global_json_parser_enum+0xb70>
    862c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8630:	str	r0, [fp, #-4]
    8634:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    8638:	b	8648 <monster_test_global_json_parser_enum+0xb80>
    863c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8640:	str	r0, [fp, #-4]
    8644:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    8648:	b	8658 <monster_test_global_json_parser_enum+0xb90>
    864c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8650:	str	r0, [fp, #-4]
    8654:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    8658:	b	8668 <monster_test_global_json_parser_enum+0xba0>
    865c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8660:	str	r0, [fp, #-4]
    8664:	b	8678 <monster_test_global_json_parser_enum+0xbb0>
    8668:	b	866c <monster_test_global_json_parser_enum+0xba4>
    866c:	b	8670 <monster_test_global_json_parser_enum+0xba8>
    8670:	ldr	r0, [fp, #-12]
    8674:	str	r0, [fp, #-4]
    8678:	ldr	r0, [fp, #-4]
    867c:	mov	sp, fp
    8680:	pop	{fp, pc}

00008684 <flatcc_json_parser_int8>:
    8684:	push	{r4, r5, fp, lr}
    8688:	add	fp, sp, #8
    868c:	sub	sp, sp, #56	; 0x38
    8690:	str	r0, [fp, #-16]
    8694:	str	r1, [fp, #-20]	; 0xffffffec
    8698:	str	r2, [fp, #-24]	; 0xffffffe8
    869c:	str	r3, [fp, #-28]	; 0xffffffe4
    86a0:	mov	r0, #0
    86a4:	str	r0, [sp, #28]
    86a8:	str	r0, [sp, #24]
    86ac:	movw	r0, #0
    86b0:	str	r0, [sp, #20]
    86b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    86b8:	str	r0, [sp, #16]
    86bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    86c0:	movw	r1, #0
    86c4:	strb	r1, [r0]
    86c8:	ldr	r0, [fp, #-20]	; 0xffffffec
    86cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    86d0:	cmp	r0, r1
    86d4:	bne	86e4 <flatcc_json_parser_int8+0x60>
    86d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    86dc:	str	r0, [fp, #-12]
    86e0:	b	8754 <flatcc_json_parser_int8+0xd0>
    86e4:	ldr	r0, [fp, #-16]
    86e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    86ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    86f0:	add	r3, sp, #20
    86f4:	add	ip, sp, #24
    86f8:	str	ip, [sp]
    86fc:	bl	0 <flatcc_json_parser_integer>
    8700:	str	r0, [fp, #-20]	; 0xffffffec
    8704:	ldr	r0, [fp, #-20]	; 0xffffffec
    8708:	ldr	r1, [sp, #16]
    870c:	cmp	r0, r1
    8710:	beq	874c <flatcc_json_parser_int8+0xc8>
    8714:	ldr	r0, [fp, #-16]
    8718:	ldr	r1, [fp, #-20]	; 0xffffffec
    871c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8720:	ldr	r3, [sp, #20]
    8724:	ldr	ip, [sp, #24]
    8728:	ldr	lr, [sp, #28]
    872c:	ldr	r4, [fp, #-28]	; 0xffffffe4
    8730:	mov	r5, sp
    8734:	str	r4, [r5, #8]
    8738:	str	lr, [r5, #4]
    873c:	str	ip, [r5]
    8740:	bl	da50 <flatcc_json_parser_coerce_int8>
    8744:	str	r0, [fp, #-12]
    8748:	b	8754 <flatcc_json_parser_int8+0xd0>
    874c:	ldr	r0, [fp, #-20]	; 0xffffffec
    8750:	str	r0, [fp, #-12]
    8754:	ldr	r0, [fp, #-12]
    8758:	sub	sp, fp, #8
    875c:	pop	{r4, r5, fp, pc}

00008760 <flatcc_json_parser_symbolic_int8>:
    8760:	push	{r4, r5, r6, sl, fp, lr}
    8764:	add	fp, sp, #16
    8768:	sub	sp, sp, #88	; 0x58
    876c:	ldr	ip, [fp, #8]
    8770:	str	r0, [fp, #-24]	; 0xffffffe8
    8774:	str	r1, [fp, #-28]	; 0xffffffe4
    8778:	str	r2, [fp, #-32]	; 0xffffffe0
    877c:	str	r3, [fp, #-36]	; 0xffffffdc
    8780:	movw	r0, #0
    8784:	strb	r0, [fp, #-45]	; 0xffffffd3
    8788:	movw	r1, #0
    878c:	str	r1, [sp, #36]	; 0x24
    8790:	ldr	r1, [fp, #8]
    8794:	strb	r0, [r1]
    8798:	ldr	r0, [fp, #-24]	; 0xffffffe8
    879c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    87a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    87a4:	str	ip, [sp, #32]
    87a8:	bl	db28 <flatcc_json_parser_constant_start>
    87ac:	str	r0, [fp, #-28]	; 0xffffffe4
    87b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    87b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    87b8:	cmp	r0, r1
    87bc:	bne	87cc <flatcc_json_parser_symbolic_int8+0x6c>
    87c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    87c4:	str	r0, [fp, #-20]	; 0xffffffec
    87c8:	b	8980 <flatcc_json_parser_symbolic_int8+0x220>
    87cc:	b	87d0 <flatcc_json_parser_symbolic_int8+0x70>
    87d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    87d4:	str	r0, [fp, #-40]	; 0xffffffd8
    87d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    87dc:	ldr	r0, [r0]
    87e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    87e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    87e8:	str	r2, [fp, #-44]	; 0xffffffd4
    87ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    87f0:	str	r0, [sp, #28]
    87f4:	mov	r0, r1
    87f8:	mov	r1, r2
    87fc:	mov	r2, r3
    8800:	add	r3, sp, #44	; 0x2c
    8804:	add	ip, sp, #48	; 0x30
    8808:	str	ip, [sp]
    880c:	add	ip, sp, #40	; 0x28
    8810:	str	ip, [sp, #4]
    8814:	ldr	ip, [sp, #28]
    8818:	blx	ip
    881c:	str	r0, [fp, #-28]	; 0xffffffe4
    8820:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8824:	ldr	r1, [fp, #-32]	; 0xffffffe0
    8828:	cmp	r0, r1
    882c:	bne	883c <flatcc_json_parser_symbolic_int8+0xdc>
    8830:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8834:	str	r0, [fp, #-20]	; 0xffffffec
    8838:	b	8980 <flatcc_json_parser_symbolic_int8+0x220>
    883c:	b	8840 <flatcc_json_parser_symbolic_int8+0xe0>
    8840:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8844:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8848:	cmp	r0, r1
    884c:	movw	r0, #0
    8850:	str	r0, [sp, #24]
    8854:	bne	887c <flatcc_json_parser_symbolic_int8+0x11c>
    8858:	ldr	r0, [fp, #-40]	; 0xffffffd8
    885c:	add	r1, r0, #4
    8860:	str	r1, [fp, #-40]	; 0xffffffd8
    8864:	ldr	r0, [r0, #4]
    8868:	movw	r1, #0
    886c:	cmp	r0, r1
    8870:	movw	r0, #0
    8874:	movne	r0, #1
    8878:	str	r0, [sp, #24]
    887c:	ldr	r0, [sp, #24]
    8880:	tst	r0, #1
    8884:	bne	87d8 <flatcc_json_parser_symbolic_int8+0x78>
    8888:	ldr	r0, [fp, #-44]	; 0xffffffd4
    888c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8890:	cmp	r0, r1
    8894:	bne	88b4 <flatcc_json_parser_symbolic_int8+0x154>
    8898:	ldr	r0, [fp, #-24]	; 0xffffffe8
    889c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    88a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    88a4:	movw	r3, #23
    88a8:	bl	0 <flatcc_json_parser_set_error>
    88ac:	str	r0, [fp, #-20]	; 0xffffffec
    88b0:	b	8980 <flatcc_json_parser_symbolic_int8+0x220>
    88b4:	ldr	r0, [sp, #36]	; 0x24
    88b8:	add	r1, r0, #1
    88bc:	str	r1, [sp, #36]	; 0x24
    88c0:	cmp	r0, #0
    88c4:	beq	88f4 <flatcc_json_parser_symbolic_int8+0x194>
    88c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    88cc:	ldr	r0, [r0, #12]
    88d0:	cmp	r0, #0
    88d4:	beq	88f4 <flatcc_json_parser_symbolic_int8+0x194>
    88d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    88dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    88e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    88e4:	movw	r3, #14
    88e8:	bl	0 <flatcc_json_parser_set_error>
    88ec:	str	r0, [fp, #-20]	; 0xffffffec
    88f0:	b	8980 <flatcc_json_parser_symbolic_int8+0x220>
    88f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    88f8:	mov	r1, r0
    88fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8900:	ldr	r3, [fp, #-28]	; 0xffffffe4
    8904:	ldr	ip, [sp, #44]	; 0x2c
    8908:	ldr	lr, [sp, #48]	; 0x30
    890c:	ldr	r4, [sp, #52]	; 0x34
    8910:	mov	r5, sp
    8914:	sub	r6, fp, #45	; 0x2d
    8918:	str	r6, [r5, #8]
    891c:	str	r4, [r5, #4]
    8920:	str	lr, [r5]
    8924:	str	r0, [sp, #20]
    8928:	mov	r0, r2
    892c:	str	r1, [sp, #16]
    8930:	mov	r1, r3
    8934:	ldr	r2, [sp, #20]
    8938:	mov	r3, ip
    893c:	bl	da50 <flatcc_json_parser_coerce_int8>
    8940:	ldr	r1, [sp, #16]
    8944:	cmp	r1, r0
    8948:	bne	8958 <flatcc_json_parser_symbolic_int8+0x1f8>
    894c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8950:	str	r0, [fp, #-20]	; 0xffffffec
    8954:	b	8980 <flatcc_json_parser_symbolic_int8+0x220>
    8958:	ldrsb	r0, [fp, #-45]	; 0xffffffd3
    895c:	ldr	r1, [fp, #8]
    8960:	ldrsb	r2, [r1]
    8964:	add	r0, r2, r0
    8968:	strb	r0, [r1]
    896c:	ldr	r0, [sp, #40]	; 0x28
    8970:	cmp	r0, #0
    8974:	bne	87d0 <flatcc_json_parser_symbolic_int8+0x70>
    8978:	ldr	r0, [fp, #-28]	; 0xffffffe4
    897c:	str	r0, [fp, #-20]	; 0xffffffec
    8980:	ldr	r0, [fp, #-20]	; 0xffffffec
    8984:	sub	sp, fp, #16
    8988:	pop	{r4, r5, r6, sl, fp, pc}

0000898c <flatbuffers_int8_write_to_pe>:
    898c:	push	{fp, lr}
    8990:	mov	fp, sp
    8994:	sub	sp, sp, #8
    8998:	str	r0, [sp, #4]
    899c:	strb	r1, [sp, #3]
    89a0:	ldrsb	r0, [sp, #3]
    89a4:	bl	db84 <flatbuffers_int8_cast_to_pe>
    89a8:	ldr	r1, [sp, #4]
    89ac:	strb	r0, [r1]
    89b0:	mov	sp, fp
    89b4:	pop	{fp, pc}

000089b8 <flatcc_json_parser_array_start>:
    89b8:	push	{fp, lr}
    89bc:	mov	fp, sp
    89c0:	sub	sp, sp, #24
    89c4:	str	r0, [fp, #-8]
    89c8:	str	r1, [sp, #12]
    89cc:	str	r2, [sp, #8]
    89d0:	str	r3, [sp, #4]
    89d4:	ldr	r0, [sp, #12]
    89d8:	ldr	r1, [sp, #8]
    89dc:	cmp	r0, r1
    89e0:	beq	89f4 <flatcc_json_parser_array_start+0x3c>
    89e4:	ldr	r0, [sp, #12]
    89e8:	ldrb	r0, [r0]
    89ec:	cmp	r0, #91	; 0x5b
    89f0:	beq	8a1c <flatcc_json_parser_array_start+0x64>
    89f4:	ldr	r0, [sp, #4]
    89f8:	movw	r1, #0
    89fc:	str	r1, [r0]
    8a00:	ldr	r0, [fp, #-8]
    8a04:	ldr	r1, [sp, #12]
    8a08:	ldr	r2, [sp, #8]
    8a0c:	movw	r3, #22
    8a10:	bl	0 <flatcc_json_parser_set_error>
    8a14:	str	r0, [fp, #-4]
    8a18:	b	8a90 <flatcc_json_parser_array_start+0xd8>
    8a1c:	ldr	r0, [fp, #-8]
    8a20:	ldr	r1, [sp, #12]
    8a24:	add	r1, r1, #1
    8a28:	ldr	r2, [sp, #8]
    8a2c:	bl	c548 <flatcc_json_parser_space>
    8a30:	str	r0, [sp, #12]
    8a34:	ldr	r0, [sp, #12]
    8a38:	ldr	r1, [sp, #8]
    8a3c:	cmp	r0, r1
    8a40:	beq	8a7c <flatcc_json_parser_array_start+0xc4>
    8a44:	ldr	r0, [sp, #12]
    8a48:	ldrb	r0, [r0]
    8a4c:	cmp	r0, #93	; 0x5d
    8a50:	bne	8a7c <flatcc_json_parser_array_start+0xc4>
    8a54:	ldr	r0, [sp, #4]
    8a58:	movw	r1, #0
    8a5c:	str	r1, [r0]
    8a60:	ldr	r0, [fp, #-8]
    8a64:	ldr	r1, [sp, #12]
    8a68:	add	r1, r1, #1
    8a6c:	ldr	r2, [sp, #8]
    8a70:	bl	c548 <flatcc_json_parser_space>
    8a74:	str	r0, [fp, #-4]
    8a78:	b	8a90 <flatcc_json_parser_array_start+0xd8>
    8a7c:	ldr	r0, [sp, #4]
    8a80:	movw	r1, #1
    8a84:	str	r1, [r0]
    8a88:	ldr	r0, [sp, #12]
    8a8c:	str	r0, [fp, #-4]
    8a90:	ldr	r0, [fp, #-4]
    8a94:	mov	sp, fp
    8a98:	pop	{fp, pc}

00008a9c <flatcc_json_parser_uint8>:
    8a9c:	push	{r4, r5, fp, lr}
    8aa0:	add	fp, sp, #8
    8aa4:	sub	sp, sp, #56	; 0x38
    8aa8:	str	r0, [fp, #-16]
    8aac:	str	r1, [fp, #-20]	; 0xffffffec
    8ab0:	str	r2, [fp, #-24]	; 0xffffffe8
    8ab4:	str	r3, [fp, #-28]	; 0xffffffe4
    8ab8:	mov	r0, #0
    8abc:	str	r0, [sp, #28]
    8ac0:	str	r0, [sp, #24]
    8ac4:	movw	r0, #0
    8ac8:	str	r0, [sp, #20]
    8acc:	ldr	r0, [fp, #-20]	; 0xffffffec
    8ad0:	str	r0, [sp, #16]
    8ad4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8ad8:	movw	r1, #0
    8adc:	strb	r1, [r0]
    8ae0:	ldr	r0, [fp, #-20]	; 0xffffffec
    8ae4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8ae8:	cmp	r0, r1
    8aec:	bne	8afc <flatcc_json_parser_uint8+0x60>
    8af0:	ldr	r0, [fp, #-20]	; 0xffffffec
    8af4:	str	r0, [fp, #-12]
    8af8:	b	8b6c <flatcc_json_parser_uint8+0xd0>
    8afc:	ldr	r0, [fp, #-16]
    8b00:	ldr	r1, [fp, #-20]	; 0xffffffec
    8b04:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8b08:	add	r3, sp, #20
    8b0c:	add	ip, sp, #24
    8b10:	str	ip, [sp]
    8b14:	bl	0 <flatcc_json_parser_integer>
    8b18:	str	r0, [fp, #-20]	; 0xffffffec
    8b1c:	ldr	r0, [fp, #-20]	; 0xffffffec
    8b20:	ldr	r1, [sp, #16]
    8b24:	cmp	r0, r1
    8b28:	beq	8b64 <flatcc_json_parser_uint8+0xc8>
    8b2c:	ldr	r0, [fp, #-16]
    8b30:	ldr	r1, [fp, #-20]	; 0xffffffec
    8b34:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8b38:	ldr	r3, [sp, #20]
    8b3c:	ldr	ip, [sp, #24]
    8b40:	ldr	lr, [sp, #28]
    8b44:	ldr	r4, [fp, #-28]	; 0xffffffe4
    8b48:	mov	r5, sp
    8b4c:	str	r4, [r5, #8]
    8b50:	str	lr, [r5, #4]
    8b54:	str	ip, [r5]
    8b58:	bl	db98 <flatcc_json_parser_coerce_uint8>
    8b5c:	str	r0, [fp, #-12]
    8b60:	b	8b6c <flatcc_json_parser_uint8+0xd0>
    8b64:	ldr	r0, [fp, #-20]	; 0xffffffec
    8b68:	str	r0, [fp, #-12]
    8b6c:	ldr	r0, [fp, #-12]
    8b70:	sub	sp, fp, #8
    8b74:	pop	{r4, r5, fp, pc}

00008b78 <flatcc_json_parser_symbolic_uint8>:
    8b78:	push	{r4, r5, r6, sl, fp, lr}
    8b7c:	add	fp, sp, #16
    8b80:	sub	sp, sp, #88	; 0x58
    8b84:	ldr	ip, [fp, #8]
    8b88:	str	r0, [fp, #-24]	; 0xffffffe8
    8b8c:	str	r1, [fp, #-28]	; 0xffffffe4
    8b90:	str	r2, [fp, #-32]	; 0xffffffe0
    8b94:	str	r3, [fp, #-36]	; 0xffffffdc
    8b98:	movw	r0, #0
    8b9c:	strb	r0, [fp, #-45]	; 0xffffffd3
    8ba0:	movw	r1, #0
    8ba4:	str	r1, [sp, #36]	; 0x24
    8ba8:	ldr	r1, [fp, #8]
    8bac:	strb	r0, [r1]
    8bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8bb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8bb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8bbc:	str	ip, [sp, #32]
    8bc0:	bl	db28 <flatcc_json_parser_constant_start>
    8bc4:	str	r0, [fp, #-28]	; 0xffffffe4
    8bc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8bcc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    8bd0:	cmp	r0, r1
    8bd4:	bne	8be4 <flatcc_json_parser_symbolic_uint8+0x6c>
    8bd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8bdc:	str	r0, [fp, #-20]	; 0xffffffec
    8be0:	b	8d98 <flatcc_json_parser_symbolic_uint8+0x220>
    8be4:	b	8be8 <flatcc_json_parser_symbolic_uint8+0x70>
    8be8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    8bec:	str	r0, [fp, #-40]	; 0xffffffd8
    8bf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8bf4:	ldr	r0, [r0]
    8bf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8bfc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    8c00:	str	r2, [fp, #-44]	; 0xffffffd4
    8c04:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8c08:	str	r0, [sp, #28]
    8c0c:	mov	r0, r1
    8c10:	mov	r1, r2
    8c14:	mov	r2, r3
    8c18:	add	r3, sp, #44	; 0x2c
    8c1c:	add	ip, sp, #48	; 0x30
    8c20:	str	ip, [sp]
    8c24:	add	ip, sp, #40	; 0x28
    8c28:	str	ip, [sp, #4]
    8c2c:	ldr	ip, [sp, #28]
    8c30:	blx	ip
    8c34:	str	r0, [fp, #-28]	; 0xffffffe4
    8c38:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8c3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    8c40:	cmp	r0, r1
    8c44:	bne	8c54 <flatcc_json_parser_symbolic_uint8+0xdc>
    8c48:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8c4c:	str	r0, [fp, #-20]	; 0xffffffec
    8c50:	b	8d98 <flatcc_json_parser_symbolic_uint8+0x220>
    8c54:	b	8c58 <flatcc_json_parser_symbolic_uint8+0xe0>
    8c58:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8c5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8c60:	cmp	r0, r1
    8c64:	movw	r0, #0
    8c68:	str	r0, [sp, #24]
    8c6c:	bne	8c94 <flatcc_json_parser_symbolic_uint8+0x11c>
    8c70:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8c74:	add	r1, r0, #4
    8c78:	str	r1, [fp, #-40]	; 0xffffffd8
    8c7c:	ldr	r0, [r0, #4]
    8c80:	movw	r1, #0
    8c84:	cmp	r0, r1
    8c88:	movw	r0, #0
    8c8c:	movne	r0, #1
    8c90:	str	r0, [sp, #24]
    8c94:	ldr	r0, [sp, #24]
    8c98:	tst	r0, #1
    8c9c:	bne	8bf0 <flatcc_json_parser_symbolic_uint8+0x78>
    8ca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8ca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8ca8:	cmp	r0, r1
    8cac:	bne	8ccc <flatcc_json_parser_symbolic_uint8+0x154>
    8cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8cb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8cb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8cbc:	movw	r3, #23
    8cc0:	bl	0 <flatcc_json_parser_set_error>
    8cc4:	str	r0, [fp, #-20]	; 0xffffffec
    8cc8:	b	8d98 <flatcc_json_parser_symbolic_uint8+0x220>
    8ccc:	ldr	r0, [sp, #36]	; 0x24
    8cd0:	add	r1, r0, #1
    8cd4:	str	r1, [sp, #36]	; 0x24
    8cd8:	cmp	r0, #0
    8cdc:	beq	8d0c <flatcc_json_parser_symbolic_uint8+0x194>
    8ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8ce4:	ldr	r0, [r0, #12]
    8ce8:	cmp	r0, #0
    8cec:	beq	8d0c <flatcc_json_parser_symbolic_uint8+0x194>
    8cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8cf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8cf8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8cfc:	movw	r3, #14
    8d00:	bl	0 <flatcc_json_parser_set_error>
    8d04:	str	r0, [fp, #-20]	; 0xffffffec
    8d08:	b	8d98 <flatcc_json_parser_symbolic_uint8+0x220>
    8d0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8d10:	mov	r1, r0
    8d14:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8d18:	ldr	r3, [fp, #-28]	; 0xffffffe4
    8d1c:	ldr	ip, [sp, #44]	; 0x2c
    8d20:	ldr	lr, [sp, #48]	; 0x30
    8d24:	ldr	r4, [sp, #52]	; 0x34
    8d28:	mov	r5, sp
    8d2c:	sub	r6, fp, #45	; 0x2d
    8d30:	str	r6, [r5, #8]
    8d34:	str	r4, [r5, #4]
    8d38:	str	lr, [r5]
    8d3c:	str	r0, [sp, #20]
    8d40:	mov	r0, r2
    8d44:	str	r1, [sp, #16]
    8d48:	mov	r1, r3
    8d4c:	ldr	r2, [sp, #20]
    8d50:	mov	r3, ip
    8d54:	bl	db98 <flatcc_json_parser_coerce_uint8>
    8d58:	ldr	r1, [sp, #16]
    8d5c:	cmp	r1, r0
    8d60:	bne	8d70 <flatcc_json_parser_symbolic_uint8+0x1f8>
    8d64:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8d68:	str	r0, [fp, #-20]	; 0xffffffec
    8d6c:	b	8d98 <flatcc_json_parser_symbolic_uint8+0x220>
    8d70:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    8d74:	ldr	r1, [fp, #8]
    8d78:	ldrb	r2, [r1]
    8d7c:	add	r0, r2, r0
    8d80:	strb	r0, [r1]
    8d84:	ldr	r0, [sp, #40]	; 0x28
    8d88:	cmp	r0, #0
    8d8c:	bne	8be8 <flatcc_json_parser_symbolic_uint8+0x70>
    8d90:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8d94:	str	r0, [fp, #-20]	; 0xffffffec
    8d98:	ldr	r0, [fp, #-20]	; 0xffffffec
    8d9c:	sub	sp, fp, #16
    8da0:	pop	{r4, r5, r6, sl, fp, pc}

00008da4 <flatbuffers_uint8_write_to_pe>:
    8da4:	push	{fp, lr}
    8da8:	mov	fp, sp
    8dac:	sub	sp, sp, #8
    8db0:	str	r0, [sp, #4]
    8db4:	strb	r1, [sp, #3]
    8db8:	ldrb	r0, [sp, #3]
    8dbc:	bl	dc44 <flatbuffers_uint8_cast_to_pe>
    8dc0:	ldr	r1, [sp, #4]
    8dc4:	strb	r0, [r1]
    8dc8:	mov	sp, fp
    8dcc:	pop	{fp, pc}

00008dd0 <flatcc_json_parser_array_end>:
    8dd0:	push	{fp, lr}
    8dd4:	mov	fp, sp
    8dd8:	sub	sp, sp, #24
    8ddc:	str	r0, [fp, #-8]
    8de0:	str	r1, [sp, #12]
    8de4:	str	r2, [sp, #8]
    8de8:	str	r3, [sp, #4]
    8dec:	ldr	r0, [fp, #-8]
    8df0:	ldr	r1, [sp, #12]
    8df4:	ldr	r2, [sp, #8]
    8df8:	bl	c548 <flatcc_json_parser_space>
    8dfc:	str	r0, [sp, #12]
    8e00:	ldr	r0, [sp, #12]
    8e04:	ldr	r1, [sp, #8]
    8e08:	cmp	r0, r1
    8e0c:	bne	8e28 <flatcc_json_parser_array_end+0x58>
    8e10:	ldr	r0, [sp, #4]
    8e14:	movw	r1, #0
    8e18:	str	r1, [r0]
    8e1c:	ldr	r0, [sp, #12]
    8e20:	str	r0, [fp, #-4]
    8e24:	b	8f28 <flatcc_json_parser_array_end+0x158>
    8e28:	ldr	r0, [sp, #12]
    8e2c:	ldrb	r0, [r0]
    8e30:	cmp	r0, #44	; 0x2c
    8e34:	beq	8e8c <flatcc_json_parser_array_end+0xbc>
    8e38:	ldr	r0, [sp, #4]
    8e3c:	movw	r1, #0
    8e40:	str	r1, [r0]
    8e44:	ldr	r0, [sp, #12]
    8e48:	ldrb	r0, [r0]
    8e4c:	cmp	r0, #93	; 0x5d
    8e50:	beq	8e70 <flatcc_json_parser_array_end+0xa0>
    8e54:	ldr	r0, [fp, #-8]
    8e58:	ldr	r1, [sp, #12]
    8e5c:	ldr	r2, [sp, #8]
    8e60:	movw	r3, #9
    8e64:	bl	0 <flatcc_json_parser_set_error>
    8e68:	str	r0, [fp, #-4]
    8e6c:	b	8f28 <flatcc_json_parser_array_end+0x158>
    8e70:	ldr	r0, [fp, #-8]
    8e74:	ldr	r1, [sp, #12]
    8e78:	add	r1, r1, #1
    8e7c:	ldr	r2, [sp, #8]
    8e80:	bl	c548 <flatcc_json_parser_space>
    8e84:	str	r0, [fp, #-4]
    8e88:	b	8f28 <flatcc_json_parser_array_end+0x158>
    8e8c:	ldr	r0, [fp, #-8]
    8e90:	ldr	r1, [sp, #12]
    8e94:	add	r1, r1, #1
    8e98:	ldr	r2, [sp, #8]
    8e9c:	bl	c548 <flatcc_json_parser_space>
    8ea0:	str	r0, [sp, #12]
    8ea4:	ldr	r0, [sp, #12]
    8ea8:	ldr	r1, [sp, #8]
    8eac:	cmp	r0, r1
    8eb0:	bne	8edc <flatcc_json_parser_array_end+0x10c>
    8eb4:	ldr	r0, [sp, #4]
    8eb8:	movw	r1, #0
    8ebc:	str	r1, [r0]
    8ec0:	ldr	r0, [fp, #-8]
    8ec4:	ldr	r1, [sp, #12]
    8ec8:	ldr	r2, [sp, #8]
    8ecc:	movw	r3, #9
    8ed0:	bl	0 <flatcc_json_parser_set_error>
    8ed4:	str	r0, [fp, #-4]
    8ed8:	b	8f28 <flatcc_json_parser_array_end+0x158>
    8edc:	ldr	r0, [sp, #12]
    8ee0:	ldrb	r0, [r0]
    8ee4:	cmp	r0, #93	; 0x5d
    8ee8:	bne	8f14 <flatcc_json_parser_array_end+0x144>
    8eec:	ldr	r0, [sp, #4]
    8ef0:	movw	r1, #0
    8ef4:	str	r1, [r0]
    8ef8:	ldr	r0, [fp, #-8]
    8efc:	ldr	r1, [sp, #12]
    8f00:	add	r1, r1, #1
    8f04:	ldr	r2, [sp, #8]
    8f08:	bl	c548 <flatcc_json_parser_space>
    8f0c:	str	r0, [fp, #-4]
    8f10:	b	8f28 <flatcc_json_parser_array_end+0x158>
    8f14:	ldr	r0, [sp, #4]
    8f18:	movw	r1, #1
    8f1c:	str	r1, [r0]
    8f20:	ldr	r0, [sp, #12]
    8f24:	str	r0, [fp, #-4]
    8f28:	ldr	r0, [fp, #-4]
    8f2c:	mov	sp, fp
    8f30:	pop	{fp, pc}

00008f34 <flatcc_json_parser_int16>:
    8f34:	push	{r4, r5, fp, lr}
    8f38:	add	fp, sp, #8
    8f3c:	sub	sp, sp, #56	; 0x38
    8f40:	str	r0, [fp, #-16]
    8f44:	str	r1, [fp, #-20]	; 0xffffffec
    8f48:	str	r2, [fp, #-24]	; 0xffffffe8
    8f4c:	str	r3, [fp, #-28]	; 0xffffffe4
    8f50:	mov	r0, #0
    8f54:	str	r0, [sp, #28]
    8f58:	str	r0, [sp, #24]
    8f5c:	movw	r0, #0
    8f60:	str	r0, [sp, #20]
    8f64:	ldr	r0, [fp, #-20]	; 0xffffffec
    8f68:	str	r0, [sp, #16]
    8f6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8f70:	movw	r1, #0
    8f74:	strh	r1, [r0]
    8f78:	ldr	r0, [fp, #-20]	; 0xffffffec
    8f7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8f80:	cmp	r0, r1
    8f84:	bne	8f94 <flatcc_json_parser_int16+0x60>
    8f88:	ldr	r0, [fp, #-20]	; 0xffffffec
    8f8c:	str	r0, [fp, #-12]
    8f90:	b	9004 <flatcc_json_parser_int16+0xd0>
    8f94:	ldr	r0, [fp, #-16]
    8f98:	ldr	r1, [fp, #-20]	; 0xffffffec
    8f9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8fa0:	add	r3, sp, #20
    8fa4:	add	ip, sp, #24
    8fa8:	str	ip, [sp]
    8fac:	bl	0 <flatcc_json_parser_integer>
    8fb0:	str	r0, [fp, #-20]	; 0xffffffec
    8fb4:	ldr	r0, [fp, #-20]	; 0xffffffec
    8fb8:	ldr	r1, [sp, #16]
    8fbc:	cmp	r0, r1
    8fc0:	beq	8ffc <flatcc_json_parser_int16+0xc8>
    8fc4:	ldr	r0, [fp, #-16]
    8fc8:	ldr	r1, [fp, #-20]	; 0xffffffec
    8fcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8fd0:	ldr	r3, [sp, #20]
    8fd4:	ldr	ip, [sp, #24]
    8fd8:	ldr	lr, [sp, #28]
    8fdc:	ldr	r4, [fp, #-28]	; 0xffffffe4
    8fe0:	mov	r5, sp
    8fe4:	str	r4, [r5, #8]
    8fe8:	str	lr, [r5, #4]
    8fec:	str	ip, [r5]
    8ff0:	bl	dc58 <flatcc_json_parser_coerce_int16>
    8ff4:	str	r0, [fp, #-12]
    8ff8:	b	9004 <flatcc_json_parser_int16+0xd0>
    8ffc:	ldr	r0, [fp, #-20]	; 0xffffffec
    9000:	str	r0, [fp, #-12]
    9004:	ldr	r0, [fp, #-12]
    9008:	sub	sp, fp, #8
    900c:	pop	{r4, r5, fp, pc}

00009010 <flatcc_json_parser_symbolic_int16>:
    9010:	push	{r4, r5, r6, sl, fp, lr}
    9014:	add	fp, sp, #16
    9018:	sub	sp, sp, #88	; 0x58
    901c:	ldr	ip, [fp, #8]
    9020:	str	r0, [fp, #-24]	; 0xffffffe8
    9024:	str	r1, [fp, #-28]	; 0xffffffe4
    9028:	str	r2, [fp, #-32]	; 0xffffffe0
    902c:	str	r3, [fp, #-36]	; 0xffffffdc
    9030:	movw	r0, #0
    9034:	strh	r0, [fp, #-46]	; 0xffffffd2
    9038:	movw	r1, #0
    903c:	str	r1, [sp, #36]	; 0x24
    9040:	ldr	r1, [fp, #8]
    9044:	strh	r0, [r1]
    9048:	ldr	r0, [fp, #-24]	; 0xffffffe8
    904c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9050:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9054:	str	ip, [sp, #32]
    9058:	bl	db28 <flatcc_json_parser_constant_start>
    905c:	str	r0, [fp, #-28]	; 0xffffffe4
    9060:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9064:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9068:	cmp	r0, r1
    906c:	bne	907c <flatcc_json_parser_symbolic_int16+0x6c>
    9070:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9074:	str	r0, [fp, #-20]	; 0xffffffec
    9078:	b	9230 <flatcc_json_parser_symbolic_int16+0x220>
    907c:	b	9080 <flatcc_json_parser_symbolic_int16+0x70>
    9080:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9084:	str	r0, [fp, #-40]	; 0xffffffd8
    9088:	ldr	r0, [fp, #-40]	; 0xffffffd8
    908c:	ldr	r0, [r0]
    9090:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9094:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9098:	str	r2, [fp, #-44]	; 0xffffffd4
    909c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    90a0:	str	r0, [sp, #28]
    90a4:	mov	r0, r1
    90a8:	mov	r1, r2
    90ac:	mov	r2, r3
    90b0:	add	r3, sp, #44	; 0x2c
    90b4:	add	ip, sp, #48	; 0x30
    90b8:	str	ip, [sp]
    90bc:	add	ip, sp, #40	; 0x28
    90c0:	str	ip, [sp, #4]
    90c4:	ldr	ip, [sp, #28]
    90c8:	blx	ip
    90cc:	str	r0, [fp, #-28]	; 0xffffffe4
    90d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    90d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    90d8:	cmp	r0, r1
    90dc:	bne	90ec <flatcc_json_parser_symbolic_int16+0xdc>
    90e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    90e4:	str	r0, [fp, #-20]	; 0xffffffec
    90e8:	b	9230 <flatcc_json_parser_symbolic_int16+0x220>
    90ec:	b	90f0 <flatcc_json_parser_symbolic_int16+0xe0>
    90f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    90f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    90f8:	cmp	r0, r1
    90fc:	movw	r0, #0
    9100:	str	r0, [sp, #24]
    9104:	bne	912c <flatcc_json_parser_symbolic_int16+0x11c>
    9108:	ldr	r0, [fp, #-40]	; 0xffffffd8
    910c:	add	r1, r0, #4
    9110:	str	r1, [fp, #-40]	; 0xffffffd8
    9114:	ldr	r0, [r0, #4]
    9118:	movw	r1, #0
    911c:	cmp	r0, r1
    9120:	movw	r0, #0
    9124:	movne	r0, #1
    9128:	str	r0, [sp, #24]
    912c:	ldr	r0, [sp, #24]
    9130:	tst	r0, #1
    9134:	bne	9088 <flatcc_json_parser_symbolic_int16+0x78>
    9138:	ldr	r0, [fp, #-44]	; 0xffffffd4
    913c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9140:	cmp	r0, r1
    9144:	bne	9164 <flatcc_json_parser_symbolic_int16+0x154>
    9148:	ldr	r0, [fp, #-24]	; 0xffffffe8
    914c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9150:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9154:	movw	r3, #23
    9158:	bl	0 <flatcc_json_parser_set_error>
    915c:	str	r0, [fp, #-20]	; 0xffffffec
    9160:	b	9230 <flatcc_json_parser_symbolic_int16+0x220>
    9164:	ldr	r0, [sp, #36]	; 0x24
    9168:	add	r1, r0, #1
    916c:	str	r1, [sp, #36]	; 0x24
    9170:	cmp	r0, #0
    9174:	beq	91a4 <flatcc_json_parser_symbolic_int16+0x194>
    9178:	ldr	r0, [fp, #-24]	; 0xffffffe8
    917c:	ldr	r0, [r0, #12]
    9180:	cmp	r0, #0
    9184:	beq	91a4 <flatcc_json_parser_symbolic_int16+0x194>
    9188:	ldr	r0, [fp, #-24]	; 0xffffffe8
    918c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9190:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9194:	movw	r3, #14
    9198:	bl	0 <flatcc_json_parser_set_error>
    919c:	str	r0, [fp, #-20]	; 0xffffffec
    91a0:	b	9230 <flatcc_json_parser_symbolic_int16+0x220>
    91a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    91a8:	mov	r1, r0
    91ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    91b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    91b4:	ldr	ip, [sp, #44]	; 0x2c
    91b8:	ldr	lr, [sp, #48]	; 0x30
    91bc:	ldr	r4, [sp, #52]	; 0x34
    91c0:	mov	r5, sp
    91c4:	sub	r6, fp, #46	; 0x2e
    91c8:	str	r6, [r5, #8]
    91cc:	str	r4, [r5, #4]
    91d0:	str	lr, [r5]
    91d4:	str	r0, [sp, #20]
    91d8:	mov	r0, r2
    91dc:	str	r1, [sp, #16]
    91e0:	mov	r1, r3
    91e4:	ldr	r2, [sp, #20]
    91e8:	mov	r3, ip
    91ec:	bl	dc58 <flatcc_json_parser_coerce_int16>
    91f0:	ldr	r1, [sp, #16]
    91f4:	cmp	r1, r0
    91f8:	bne	9208 <flatcc_json_parser_symbolic_int16+0x1f8>
    91fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9200:	str	r0, [fp, #-20]	; 0xffffffec
    9204:	b	9230 <flatcc_json_parser_symbolic_int16+0x220>
    9208:	ldrsh	r0, [fp, #-46]	; 0xffffffd2
    920c:	ldr	r1, [fp, #8]
    9210:	ldrsh	r2, [r1]
    9214:	add	r0, r2, r0
    9218:	strh	r0, [r1]
    921c:	ldr	r0, [sp, #40]	; 0x28
    9220:	cmp	r0, #0
    9224:	bne	9080 <flatcc_json_parser_symbolic_int16+0x70>
    9228:	ldr	r0, [fp, #-28]	; 0xffffffe4
    922c:	str	r0, [fp, #-20]	; 0xffffffec
    9230:	ldr	r0, [fp, #-20]	; 0xffffffec
    9234:	sub	sp, fp, #16
    9238:	pop	{r4, r5, r6, sl, fp, pc}

0000923c <flatbuffers_int16_write_to_pe>:
    923c:	push	{fp, lr}
    9240:	mov	fp, sp
    9244:	sub	sp, sp, #8
    9248:	str	r0, [sp, #4]
    924c:	strh	r1, [sp, #2]
    9250:	ldrsh	r0, [sp, #2]
    9254:	bl	dd34 <flatbuffers_int16_cast_to_pe>
    9258:	ldr	r1, [sp, #4]
    925c:	strh	r0, [r1]
    9260:	mov	sp, fp
    9264:	pop	{fp, pc}

00009268 <MyGame_InParentNamespace_parse_json_table>:
    9268:	push	{fp, lr}
    926c:	mov	fp, sp
    9270:	sub	sp, sp, #24
    9274:	str	r0, [fp, #-8]
    9278:	str	r1, [sp, #12]
    927c:	str	r2, [sp, #8]
    9280:	str	r3, [sp, #4]
    9284:	ldr	r0, [sp, #4]
    9288:	movw	r1, #0
    928c:	str	r1, [r0]
    9290:	ldr	r0, [fp, #-8]
    9294:	ldr	r0, [r0]
    9298:	bl	0 <flatcc_builder_start_table>
    929c:	cmp	r0, #0
    92a0:	beq	92a8 <MyGame_InParentNamespace_parse_json_table+0x40>
    92a4:	b	9350 <MyGame_InParentNamespace_parse_json_table+0xe8>
    92a8:	ldr	r0, [fp, #-8]
    92ac:	ldr	r1, [sp, #12]
    92b0:	ldr	r2, [sp, #8]
    92b4:	mov	r3, sp
    92b8:	bl	6fa0 <flatcc_json_parser_object_start>
    92bc:	str	r0, [sp, #12]
    92c0:	ldr	r0, [sp]
    92c4:	cmp	r0, #0
    92c8:	beq	9310 <MyGame_InParentNamespace_parse_json_table+0xa8>
    92cc:	ldr	r0, [fp, #-8]
    92d0:	ldr	r1, [sp, #12]
    92d4:	ldr	r2, [sp, #8]
    92d8:	bl	7084 <flatcc_json_parser_symbol_start>
    92dc:	str	r0, [sp, #12]
    92e0:	ldr	r0, [fp, #-8]
    92e4:	ldr	r1, [sp, #12]
    92e8:	ldr	r2, [sp, #8]
    92ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    92f0:	str	r0, [sp, #12]
    92f4:	ldr	r0, [fp, #-8]
    92f8:	ldr	r1, [sp, #12]
    92fc:	ldr	r2, [sp, #8]
    9300:	mov	r3, sp
    9304:	bl	c3e4 <flatcc_json_parser_object_end>
    9308:	str	r0, [sp, #12]
    930c:	b	92c0 <MyGame_InParentNamespace_parse_json_table+0x58>
    9310:	ldr	r0, [fp, #-8]
    9314:	ldr	r0, [r0, #24]
    9318:	cmp	r0, #0
    931c:	beq	9324 <MyGame_InParentNamespace_parse_json_table+0xbc>
    9320:	b	9350 <MyGame_InParentNamespace_parse_json_table+0xe8>
    9324:	ldr	r0, [fp, #-8]
    9328:	ldr	r0, [r0]
    932c:	bl	0 <flatcc_builder_end_table>
    9330:	ldr	r1, [sp, #4]
    9334:	str	r0, [r1]
    9338:	cmp	r0, #0
    933c:	bne	9344 <MyGame_InParentNamespace_parse_json_table+0xdc>
    9340:	b	9350 <MyGame_InParentNamespace_parse_json_table+0xe8>
    9344:	ldr	r0, [sp, #12]
    9348:	str	r0, [fp, #-4]
    934c:	b	9368 <MyGame_InParentNamespace_parse_json_table+0x100>
    9350:	ldr	r0, [fp, #-8]
    9354:	ldr	r1, [sp, #12]
    9358:	ldr	r2, [sp, #8]
    935c:	movw	r3, #33	; 0x21
    9360:	bl	0 <flatcc_json_parser_set_error>
    9364:	str	r0, [fp, #-4]
    9368:	ldr	r0, [fp, #-4]
    936c:	mov	sp, fp
    9370:	pop	{fp, pc}
    9374:	nop	{0}

00009378 <MyGame_Example_Vec3_parse_json_struct_inline>:
    9378:	push	{fp, lr}
    937c:	mov	fp, sp
    9380:	sub	sp, sp, #80	; 0x50
    9384:	str	r0, [fp, #-8]
    9388:	str	r1, [fp, #-12]
    938c:	str	r2, [fp, #-16]
    9390:	str	r3, [fp, #-20]	; 0xffffffec
    9394:	ldr	r0, [fp, #-8]
    9398:	ldr	r1, [fp, #-12]
    939c:	ldr	r2, [fp, #-16]
    93a0:	sub	r3, fp, #24
    93a4:	bl	6fa0 <flatcc_json_parser_object_start>
    93a8:	str	r0, [fp, #-12]
    93ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    93b0:	cmp	r0, #0
    93b4:	beq	9a4c <MyGame_Example_Vec3_parse_json_struct_inline+0x6d4>
    93b8:	ldr	r0, [fp, #-8]
    93bc:	ldr	r1, [fp, #-12]
    93c0:	ldr	r2, [fp, #-16]
    93c4:	bl	7084 <flatcc_json_parser_symbol_start>
    93c8:	str	r0, [fp, #-12]
    93cc:	ldr	r0, [fp, #-12]
    93d0:	ldr	r1, [fp, #-16]
    93d4:	bl	7130 <flatcc_json_parser_symbol_part>
    93d8:	str	r1, [sp, #36]	; 0x24
    93dc:	str	r0, [sp, #32]
    93e0:	ldr	r0, [sp, #32]
    93e4:	ldr	r1, [sp, #36]	; 0x24
    93e8:	mvn	r2, #-855638016	; 0xcd000000
    93ec:	subs	r0, r2, r0
    93f0:	movw	r2, #29556	; 0x7374
    93f4:	movt	r2, #29797	; 0x7465
    93f8:	sbcs	r1, r2, r1
    93fc:	bcc	9638 <MyGame_Example_Vec3_parse_json_struct_inline+0x2c0>
    9400:	b	9404 <MyGame_Example_Vec3_parse_json_struct_inline+0x8c>
    9404:	ldrb	r0, [sp, #35]	; 0x23
    9408:	ldr	r1, [sp, #36]	; 0x24
    940c:	movw	r2, #29556	; 0x7374
    9410:	movt	r2, #29797	; 0x7465
    9414:	eor	r1, r1, r2
    9418:	eor	r0, r0, #50	; 0x32
    941c:	orr	r0, r1, r0, lsl #24
    9420:	cmp	r0, #0
    9424:	bne	9510 <MyGame_Example_Vec3_parse_json_struct_inline+0x198>
    9428:	b	942c <MyGame_Example_Vec3_parse_json_struct_inline+0xb4>
    942c:	ldr	r0, [fp, #-8]
    9430:	ldr	r1, [fp, #-12]
    9434:	str	r1, [fp, #-36]	; 0xffffffdc
    9438:	ldr	r2, [fp, #-16]
    943c:	movw	r3, #5
    9440:	bl	7168 <flatcc_json_parser_match_symbol>
    9444:	str	r0, [fp, #-12]
    9448:	ldr	r0, [fp, #-36]	; 0xffffffdc
    944c:	ldr	r1, [fp, #-12]
    9450:	cmp	r0, r1
    9454:	beq	94f8 <MyGame_Example_Vec3_parse_json_struct_inline+0x180>
    9458:	movw	r0, #0
    945c:	strb	r0, [sp, #31]
    9460:	ldr	r0, [fp, #-20]	; 0xffffffec
    9464:	add	r0, r0, #24
    9468:	str	r0, [fp, #-32]	; 0xffffffe0
    946c:	ldr	r0, [fp, #-8]
    9470:	ldr	r1, [fp, #-12]
    9474:	str	r1, [fp, #-36]	; 0xffffffdc
    9478:	ldr	r2, [fp, #-16]
    947c:	add	r3, sp, #31
    9480:	bl	8684 <flatcc_json_parser_int8>
    9484:	str	r0, [fp, #-12]
    9488:	ldr	r0, [fp, #-36]	; 0xffffffdc
    948c:	ldr	r1, [fp, #-12]
    9490:	cmp	r0, r1
    9494:	bne	94e8 <MyGame_Example_Vec3_parse_json_struct_inline+0x170>
    9498:	ldr	r0, [fp, #-8]
    949c:	ldr	r1, [fp, #-12]
    94a0:	str	r1, [fp, #-36]	; 0xffffffdc
    94a4:	ldr	r2, [fp, #-16]
    94a8:	movw	r3, #0
    94ac:	movt	r3, #0
    94b0:	add	ip, sp, #31
    94b4:	str	ip, [sp]
    94b8:	bl	8760 <flatcc_json_parser_symbolic_int8>
    94bc:	str	r0, [fp, #-12]
    94c0:	ldr	r0, [fp, #-12]
    94c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    94c8:	cmp	r0, r1
    94cc:	beq	94e0 <MyGame_Example_Vec3_parse_json_struct_inline+0x168>
    94d0:	ldr	r0, [fp, #-12]
    94d4:	ldr	r1, [fp, #-16]
    94d8:	cmp	r0, r1
    94dc:	bne	94e4 <MyGame_Example_Vec3_parse_json_struct_inline+0x16c>
    94e0:	b	9a58 <MyGame_Example_Vec3_parse_json_struct_inline+0x6e0>
    94e4:	b	94e8 <MyGame_Example_Vec3_parse_json_struct_inline+0x170>
    94e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    94ec:	ldrsb	r1, [sp, #31]
    94f0:	bl	898c <flatbuffers_int8_write_to_pe>
    94f4:	b	950c <MyGame_Example_Vec3_parse_json_struct_inline+0x194>
    94f8:	ldr	r0, [fp, #-8]
    94fc:	ldr	r1, [fp, #-12]
    9500:	ldr	r2, [fp, #-16]
    9504:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9508:	str	r0, [fp, #-12]
    950c:	b	9634 <MyGame_Example_Vec3_parse_json_struct_inline+0x2bc>
    9510:	ldrb	r0, [sp, #35]	; 0x23
    9514:	ldr	r1, [sp, #36]	; 0x24
    9518:	movw	r2, #29556	; 0x7374
    951c:	movt	r2, #29797	; 0x7465
    9520:	eor	r1, r1, r2
    9524:	eor	r0, r0, #49	; 0x31
    9528:	orr	r0, r1, r0, lsl #24
    952c:	cmp	r0, #0
    9530:	bne	961c <MyGame_Example_Vec3_parse_json_struct_inline+0x2a4>
    9534:	b	9538 <MyGame_Example_Vec3_parse_json_struct_inline+0x1c0>
    9538:	ldr	r0, [fp, #-8]
    953c:	ldr	r1, [fp, #-12]
    9540:	str	r1, [fp, #-36]	; 0xffffffdc
    9544:	ldr	r2, [fp, #-16]
    9548:	movw	r3, #5
    954c:	bl	7168 <flatcc_json_parser_match_symbol>
    9550:	str	r0, [fp, #-12]
    9554:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9558:	ldr	r1, [fp, #-12]
    955c:	cmp	r0, r1
    9560:	beq	9604 <MyGame_Example_Vec3_parse_json_struct_inline+0x28c>
    9564:	vldr	d16, [pc, #948]	; 9920 <MyGame_Example_Vec3_parse_json_struct_inline+0x5a8>
    9568:	vstr	d16, [sp, #16]
    956c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9570:	add	r0, r0, #16
    9574:	str	r0, [fp, #-32]	; 0xffffffe0
    9578:	ldr	r0, [fp, #-8]
    957c:	ldr	r1, [fp, #-12]
    9580:	str	r1, [fp, #-36]	; 0xffffffdc
    9584:	ldr	r2, [fp, #-16]
    9588:	add	r3, sp, #16
    958c:	bl	0 <flatcc_json_parser_double>
    9590:	str	r0, [fp, #-12]
    9594:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9598:	ldr	r1, [fp, #-12]
    959c:	cmp	r0, r1
    95a0:	bne	95f4 <MyGame_Example_Vec3_parse_json_struct_inline+0x27c>
    95a4:	ldr	r0, [fp, #-8]
    95a8:	ldr	r1, [fp, #-12]
    95ac:	str	r1, [fp, #-36]	; 0xffffffdc
    95b0:	ldr	r2, [fp, #-16]
    95b4:	movw	r3, #0
    95b8:	movt	r3, #0
    95bc:	add	ip, sp, #16
    95c0:	str	ip, [sp]
    95c4:	bl	c180 <flatcc_json_parser_symbolic_double>
    95c8:	str	r0, [fp, #-12]
    95cc:	ldr	r0, [fp, #-12]
    95d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    95d4:	cmp	r0, r1
    95d8:	beq	95ec <MyGame_Example_Vec3_parse_json_struct_inline+0x274>
    95dc:	ldr	r0, [fp, #-12]
    95e0:	ldr	r1, [fp, #-16]
    95e4:	cmp	r0, r1
    95e8:	bne	95f0 <MyGame_Example_Vec3_parse_json_struct_inline+0x278>
    95ec:	b	9a58 <MyGame_Example_Vec3_parse_json_struct_inline+0x6e0>
    95f0:	b	95f4 <MyGame_Example_Vec3_parse_json_struct_inline+0x27c>
    95f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    95f8:	vldr	d0, [sp, #16]
    95fc:	bl	c3b8 <flatbuffers_double_write_to_pe>
    9600:	b	9618 <MyGame_Example_Vec3_parse_json_struct_inline+0x2a0>
    9604:	ldr	r0, [fp, #-8]
    9608:	ldr	r1, [fp, #-12]
    960c:	ldr	r2, [fp, #-16]
    9610:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9614:	str	r0, [fp, #-12]
    9618:	b	9630 <MyGame_Example_Vec3_parse_json_struct_inline+0x2b8>
    961c:	ldr	r0, [fp, #-8]
    9620:	ldr	r1, [fp, #-12]
    9624:	ldr	r2, [fp, #-16]
    9628:	bl	0 <flatcc_json_parser_unmatched_symbol>
    962c:	str	r0, [fp, #-12]
    9630:	b	9634 <MyGame_Example_Vec3_parse_json_struct_inline+0x2bc>
    9634:	b	9a30 <MyGame_Example_Vec3_parse_json_struct_inline+0x6b8>
    9638:	ldr	r0, [sp, #36]	; 0x24
    963c:	cmn	r0, #-2013265919	; 0x88000001
    9640:	bhi	96f4 <MyGame_Example_Vec3_parse_json_struct_inline+0x37c>
    9644:	b	9648 <MyGame_Example_Vec3_parse_json_struct_inline+0x2d0>
    9648:	ldrb	r0, [sp, #35]	; 0x23
    964c:	ldr	r1, [sp, #36]	; 0x24
    9650:	movw	r2, #29556	; 0x7374
    9654:	movt	r2, #29797	; 0x7465
    9658:	eor	r1, r1, r2
    965c:	eor	r0, r0, #51	; 0x33
    9660:	orr	r0, r1, r0, lsl #24
    9664:	cmp	r0, #0
    9668:	bne	96dc <MyGame_Example_Vec3_parse_json_struct_inline+0x364>
    966c:	b	9670 <MyGame_Example_Vec3_parse_json_struct_inline+0x2f8>
    9670:	ldr	r0, [fp, #-8]
    9674:	ldr	r1, [fp, #-12]
    9678:	str	r1, [fp, #-36]	; 0xffffffdc
    967c:	ldr	r2, [fp, #-16]
    9680:	movw	r3, #5
    9684:	bl	7168 <flatcc_json_parser_match_symbol>
    9688:	str	r0, [fp, #-12]
    968c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9690:	ldr	r1, [fp, #-12]
    9694:	cmp	r0, r1
    9698:	beq	96c4 <MyGame_Example_Vec3_parse_json_struct_inline+0x34c>
    969c:	ldr	r0, [fp, #-20]	; 0xffffffec
    96a0:	add	r0, r0, #26
    96a4:	str	r0, [fp, #-32]	; 0xffffffe0
    96a8:	ldr	r0, [fp, #-8]
    96ac:	ldr	r1, [fp, #-12]
    96b0:	ldr	r2, [fp, #-16]
    96b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    96b8:	bl	9a80 <MyGame_Example_Test_parse_json_struct_inline>
    96bc:	str	r0, [fp, #-12]
    96c0:	b	96d8 <MyGame_Example_Vec3_parse_json_struct_inline+0x360>
    96c4:	ldr	r0, [fp, #-8]
    96c8:	ldr	r1, [fp, #-12]
    96cc:	ldr	r2, [fp, #-16]
    96d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    96d4:	str	r0, [fp, #-12]
    96d8:	b	96f0 <MyGame_Example_Vec3_parse_json_struct_inline+0x378>
    96dc:	ldr	r0, [fp, #-8]
    96e0:	ldr	r1, [fp, #-12]
    96e4:	ldr	r2, [fp, #-16]
    96e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    96ec:	str	r0, [fp, #-12]
    96f0:	b	9a2c <MyGame_Example_Vec3_parse_json_struct_inline+0x6b4>
    96f4:	ldrb	r0, [sp, #39]	; 0x27
    96f8:	cmp	r0, #120	; 0x78
    96fc:	bhi	9814 <MyGame_Example_Vec3_parse_json_struct_inline+0x49c>
    9700:	b	9704 <MyGame_Example_Vec3_parse_json_struct_inline+0x38c>
    9704:	ldrb	r0, [sp, #39]	; 0x27
    9708:	mov	r1, #2013265920	; 0x78000000
    970c:	teq	r1, r0, lsl #24
    9710:	bne	97fc <MyGame_Example_Vec3_parse_json_struct_inline+0x484>
    9714:	b	9718 <MyGame_Example_Vec3_parse_json_struct_inline+0x3a0>
    9718:	ldr	r0, [fp, #-8]
    971c:	ldr	r1, [fp, #-12]
    9720:	str	r1, [fp, #-36]	; 0xffffffdc
    9724:	ldr	r2, [fp, #-16]
    9728:	movw	r3, #1
    972c:	bl	7168 <flatcc_json_parser_match_symbol>
    9730:	str	r0, [fp, #-12]
    9734:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9738:	ldr	r1, [fp, #-12]
    973c:	cmp	r0, r1
    9740:	beq	97e4 <MyGame_Example_Vec3_parse_json_struct_inline+0x46c>
    9744:	vldr	s0, [pc, #816]	; 9a7c <MyGame_Example_Vec3_parse_json_struct_inline+0x704>
    9748:	vstr	s0, [sp, #12]
    974c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9750:	add	r0, r0, #0
    9754:	str	r0, [fp, #-32]	; 0xffffffe0
    9758:	ldr	r0, [fp, #-8]
    975c:	ldr	r1, [fp, #-12]
    9760:	str	r1, [fp, #-36]	; 0xffffffdc
    9764:	ldr	r2, [fp, #-16]
    9768:	add	r3, sp, #12
    976c:	bl	0 <flatcc_json_parser_float>
    9770:	str	r0, [fp, #-12]
    9774:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9778:	ldr	r1, [fp, #-12]
    977c:	cmp	r0, r1
    9780:	bne	97d4 <MyGame_Example_Vec3_parse_json_struct_inline+0x45c>
    9784:	ldr	r0, [fp, #-8]
    9788:	ldr	r1, [fp, #-12]
    978c:	str	r1, [fp, #-36]	; 0xffffffdc
    9790:	ldr	r2, [fp, #-16]
    9794:	movw	r3, #0
    9798:	movt	r3, #0
    979c:	add	ip, sp, #12
    97a0:	str	ip, [sp]
    97a4:	bl	b228 <flatcc_json_parser_symbolic_float>
    97a8:	str	r0, [fp, #-12]
    97ac:	ldr	r0, [fp, #-12]
    97b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    97b4:	cmp	r0, r1
    97b8:	beq	97cc <MyGame_Example_Vec3_parse_json_struct_inline+0x454>
    97bc:	ldr	r0, [fp, #-12]
    97c0:	ldr	r1, [fp, #-16]
    97c4:	cmp	r0, r1
    97c8:	bne	97d0 <MyGame_Example_Vec3_parse_json_struct_inline+0x458>
    97cc:	b	9a58 <MyGame_Example_Vec3_parse_json_struct_inline+0x6e0>
    97d0:	b	97d4 <MyGame_Example_Vec3_parse_json_struct_inline+0x45c>
    97d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    97d8:	vldr	s0, [sp, #12]
    97dc:	bl	b458 <flatbuffers_float_write_to_pe>
    97e0:	b	97f8 <MyGame_Example_Vec3_parse_json_struct_inline+0x480>
    97e4:	ldr	r0, [fp, #-8]
    97e8:	ldr	r1, [fp, #-12]
    97ec:	ldr	r2, [fp, #-16]
    97f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    97f4:	str	r0, [fp, #-12]
    97f8:	b	9810 <MyGame_Example_Vec3_parse_json_struct_inline+0x498>
    97fc:	ldr	r0, [fp, #-8]
    9800:	ldr	r1, [fp, #-12]
    9804:	ldr	r2, [fp, #-16]
    9808:	bl	0 <flatcc_json_parser_unmatched_symbol>
    980c:	str	r0, [fp, #-12]
    9810:	b	9a28 <MyGame_Example_Vec3_parse_json_struct_inline+0x6b0>
    9814:	ldrb	r0, [sp, #39]	; 0x27
    9818:	mov	r1, #2046820352	; 0x7a000000
    981c:	teq	r1, r0, lsl #24
    9820:	bne	990c <MyGame_Example_Vec3_parse_json_struct_inline+0x594>
    9824:	b	9828 <MyGame_Example_Vec3_parse_json_struct_inline+0x4b0>
    9828:	ldr	r0, [fp, #-8]
    982c:	ldr	r1, [fp, #-12]
    9830:	str	r1, [fp, #-36]	; 0xffffffdc
    9834:	ldr	r2, [fp, #-16]
    9838:	movw	r3, #1
    983c:	bl	7168 <flatcc_json_parser_match_symbol>
    9840:	str	r0, [fp, #-12]
    9844:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9848:	ldr	r1, [fp, #-12]
    984c:	cmp	r0, r1
    9850:	beq	98f4 <MyGame_Example_Vec3_parse_json_struct_inline+0x57c>
    9854:	vldr	s0, [pc, #544]	; 9a7c <MyGame_Example_Vec3_parse_json_struct_inline+0x704>
    9858:	vstr	s0, [sp, #8]
    985c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9860:	add	r0, r0, #8
    9864:	str	r0, [fp, #-32]	; 0xffffffe0
    9868:	ldr	r0, [fp, #-8]
    986c:	ldr	r1, [fp, #-12]
    9870:	str	r1, [fp, #-36]	; 0xffffffdc
    9874:	ldr	r2, [fp, #-16]
    9878:	add	r3, sp, #8
    987c:	bl	0 <flatcc_json_parser_float>
    9880:	str	r0, [fp, #-12]
    9884:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9888:	ldr	r1, [fp, #-12]
    988c:	cmp	r0, r1
    9890:	bne	98e4 <MyGame_Example_Vec3_parse_json_struct_inline+0x56c>
    9894:	ldr	r0, [fp, #-8]
    9898:	ldr	r1, [fp, #-12]
    989c:	str	r1, [fp, #-36]	; 0xffffffdc
    98a0:	ldr	r2, [fp, #-16]
    98a4:	movw	r3, #0
    98a8:	movt	r3, #0
    98ac:	add	ip, sp, #8
    98b0:	str	ip, [sp]
    98b4:	bl	b228 <flatcc_json_parser_symbolic_float>
    98b8:	str	r0, [fp, #-12]
    98bc:	ldr	r0, [fp, #-12]
    98c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    98c4:	cmp	r0, r1
    98c8:	beq	98dc <MyGame_Example_Vec3_parse_json_struct_inline+0x564>
    98cc:	ldr	r0, [fp, #-12]
    98d0:	ldr	r1, [fp, #-16]
    98d4:	cmp	r0, r1
    98d8:	bne	98e0 <MyGame_Example_Vec3_parse_json_struct_inline+0x568>
    98dc:	b	9a58 <MyGame_Example_Vec3_parse_json_struct_inline+0x6e0>
    98e0:	b	98e4 <MyGame_Example_Vec3_parse_json_struct_inline+0x56c>
    98e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    98e8:	vldr	s0, [sp, #8]
    98ec:	bl	b458 <flatbuffers_float_write_to_pe>
    98f0:	b	9908 <MyGame_Example_Vec3_parse_json_struct_inline+0x590>
    98f4:	ldr	r0, [fp, #-8]
    98f8:	ldr	r1, [fp, #-12]
    98fc:	ldr	r2, [fp, #-16]
    9900:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9904:	str	r0, [fp, #-12]
    9908:	b	9a24 <MyGame_Example_Vec3_parse_json_struct_inline+0x6ac>
    990c:	ldrb	r0, [sp, #39]	; 0x27
    9910:	mov	r1, #2030043136	; 0x79000000
    9914:	teq	r1, r0, lsl #24
    9918:	bne	9a0c <MyGame_Example_Vec3_parse_json_struct_inline+0x694>
    991c:	b	9928 <MyGame_Example_Vec3_parse_json_struct_inline+0x5b0>
	...
    9928:	ldr	r0, [fp, #-8]
    992c:	ldr	r1, [fp, #-12]
    9930:	str	r1, [fp, #-36]	; 0xffffffdc
    9934:	ldr	r2, [fp, #-16]
    9938:	movw	r3, #1
    993c:	bl	7168 <flatcc_json_parser_match_symbol>
    9940:	str	r0, [fp, #-12]
    9944:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9948:	ldr	r1, [fp, #-12]
    994c:	cmp	r0, r1
    9950:	beq	99f4 <MyGame_Example_Vec3_parse_json_struct_inline+0x67c>
    9954:	vldr	s0, [pc, #288]	; 9a7c <MyGame_Example_Vec3_parse_json_struct_inline+0x704>
    9958:	vstr	s0, [sp, #4]
    995c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9960:	add	r0, r0, #4
    9964:	str	r0, [fp, #-32]	; 0xffffffe0
    9968:	ldr	r0, [fp, #-8]
    996c:	ldr	r1, [fp, #-12]
    9970:	str	r1, [fp, #-36]	; 0xffffffdc
    9974:	ldr	r2, [fp, #-16]
    9978:	add	r3, sp, #4
    997c:	bl	0 <flatcc_json_parser_float>
    9980:	str	r0, [fp, #-12]
    9984:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9988:	ldr	r1, [fp, #-12]
    998c:	cmp	r0, r1
    9990:	bne	99e4 <MyGame_Example_Vec3_parse_json_struct_inline+0x66c>
    9994:	ldr	r0, [fp, #-8]
    9998:	ldr	r1, [fp, #-12]
    999c:	str	r1, [fp, #-36]	; 0xffffffdc
    99a0:	ldr	r2, [fp, #-16]
    99a4:	movw	r3, #0
    99a8:	movt	r3, #0
    99ac:	add	ip, sp, #4
    99b0:	str	ip, [sp]
    99b4:	bl	b228 <flatcc_json_parser_symbolic_float>
    99b8:	str	r0, [fp, #-12]
    99bc:	ldr	r0, [fp, #-12]
    99c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    99c4:	cmp	r0, r1
    99c8:	beq	99dc <MyGame_Example_Vec3_parse_json_struct_inline+0x664>
    99cc:	ldr	r0, [fp, #-12]
    99d0:	ldr	r1, [fp, #-16]
    99d4:	cmp	r0, r1
    99d8:	bne	99e0 <MyGame_Example_Vec3_parse_json_struct_inline+0x668>
    99dc:	b	9a58 <MyGame_Example_Vec3_parse_json_struct_inline+0x6e0>
    99e0:	b	99e4 <MyGame_Example_Vec3_parse_json_struct_inline+0x66c>
    99e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    99e8:	vldr	s0, [sp, #4]
    99ec:	bl	b458 <flatbuffers_float_write_to_pe>
    99f0:	b	9a08 <MyGame_Example_Vec3_parse_json_struct_inline+0x690>
    99f4:	ldr	r0, [fp, #-8]
    99f8:	ldr	r1, [fp, #-12]
    99fc:	ldr	r2, [fp, #-16]
    9a00:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9a04:	str	r0, [fp, #-12]
    9a08:	b	9a20 <MyGame_Example_Vec3_parse_json_struct_inline+0x6a8>
    9a0c:	ldr	r0, [fp, #-8]
    9a10:	ldr	r1, [fp, #-12]
    9a14:	ldr	r2, [fp, #-16]
    9a18:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9a1c:	str	r0, [fp, #-12]
    9a20:	b	9a24 <MyGame_Example_Vec3_parse_json_struct_inline+0x6ac>
    9a24:	b	9a28 <MyGame_Example_Vec3_parse_json_struct_inline+0x6b0>
    9a28:	b	9a2c <MyGame_Example_Vec3_parse_json_struct_inline+0x6b4>
    9a2c:	b	9a30 <MyGame_Example_Vec3_parse_json_struct_inline+0x6b8>
    9a30:	ldr	r0, [fp, #-8]
    9a34:	ldr	r1, [fp, #-12]
    9a38:	ldr	r2, [fp, #-16]
    9a3c:	sub	r3, fp, #24
    9a40:	bl	c3e4 <flatcc_json_parser_object_end>
    9a44:	str	r0, [fp, #-12]
    9a48:	b	93ac <MyGame_Example_Vec3_parse_json_struct_inline+0x34>
    9a4c:	ldr	r0, [fp, #-12]
    9a50:	str	r0, [fp, #-4]
    9a54:	b	9a70 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f8>
    9a58:	ldr	r0, [fp, #-8]
    9a5c:	ldr	r1, [fp, #-12]
    9a60:	ldr	r2, [fp, #-16]
    9a64:	movw	r3, #33	; 0x21
    9a68:	bl	0 <flatcc_json_parser_set_error>
    9a6c:	str	r0, [fp, #-4]
    9a70:	ldr	r0, [fp, #-4]
    9a74:	mov	sp, fp
    9a78:	pop	{fp, pc}
    9a7c:	.word	0x00000000

00009a80 <MyGame_Example_Test_parse_json_struct_inline>:
    9a80:	push	{fp, lr}
    9a84:	mov	fp, sp
    9a88:	sub	sp, sp, #56	; 0x38
    9a8c:	str	r0, [fp, #-8]
    9a90:	str	r1, [fp, #-12]
    9a94:	str	r2, [fp, #-16]
    9a98:	str	r3, [fp, #-20]	; 0xffffffec
    9a9c:	ldr	r0, [fp, #-8]
    9aa0:	ldr	r1, [fp, #-12]
    9aa4:	ldr	r2, [fp, #-16]
    9aa8:	sub	r3, fp, #24
    9aac:	bl	6fa0 <flatcc_json_parser_object_start>
    9ab0:	str	r0, [fp, #-12]
    9ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9ab8:	cmp	r0, #0
    9abc:	beq	9d0c <MyGame_Example_Test_parse_json_struct_inline+0x28c>
    9ac0:	ldr	r0, [fp, #-8]
    9ac4:	ldr	r1, [fp, #-12]
    9ac8:	ldr	r2, [fp, #-16]
    9acc:	bl	7084 <flatcc_json_parser_symbol_start>
    9ad0:	str	r0, [fp, #-12]
    9ad4:	ldr	r0, [fp, #-12]
    9ad8:	ldr	r1, [fp, #-16]
    9adc:	bl	7130 <flatcc_json_parser_symbol_part>
    9ae0:	str	r1, [sp, #12]
    9ae4:	str	r0, [sp, #8]
    9ae8:	ldrb	r0, [sp, #15]
    9aec:	mov	r1, #1644167168	; 0x62000000
    9af0:	teq	r1, r0, lsl #24
    9af4:	bne	9be0 <MyGame_Example_Test_parse_json_struct_inline+0x160>
    9af8:	b	9afc <MyGame_Example_Test_parse_json_struct_inline+0x7c>
    9afc:	ldr	r0, [fp, #-8]
    9b00:	ldr	r1, [fp, #-12]
    9b04:	str	r1, [sp, #20]
    9b08:	ldr	r2, [fp, #-16]
    9b0c:	movw	r3, #1
    9b10:	bl	7168 <flatcc_json_parser_match_symbol>
    9b14:	str	r0, [fp, #-12]
    9b18:	ldr	r0, [sp, #20]
    9b1c:	ldr	r1, [fp, #-12]
    9b20:	cmp	r0, r1
    9b24:	beq	9bc8 <MyGame_Example_Test_parse_json_struct_inline+0x148>
    9b28:	movw	r0, #0
    9b2c:	strb	r0, [sp, #7]
    9b30:	ldr	r0, [fp, #-20]	; 0xffffffec
    9b34:	add	r0, r0, #2
    9b38:	str	r0, [sp, #24]
    9b3c:	ldr	r0, [fp, #-8]
    9b40:	ldr	r1, [fp, #-12]
    9b44:	str	r1, [sp, #20]
    9b48:	ldr	r2, [fp, #-16]
    9b4c:	add	r3, sp, #7
    9b50:	bl	8684 <flatcc_json_parser_int8>
    9b54:	str	r0, [fp, #-12]
    9b58:	ldr	r0, [sp, #20]
    9b5c:	ldr	r1, [fp, #-12]
    9b60:	cmp	r0, r1
    9b64:	bne	9bb8 <MyGame_Example_Test_parse_json_struct_inline+0x138>
    9b68:	ldr	r0, [fp, #-8]
    9b6c:	ldr	r1, [fp, #-12]
    9b70:	str	r1, [sp, #20]
    9b74:	ldr	r2, [fp, #-16]
    9b78:	movw	r3, #0
    9b7c:	movt	r3, #0
    9b80:	add	ip, sp, #7
    9b84:	str	ip, [sp]
    9b88:	bl	8760 <flatcc_json_parser_symbolic_int8>
    9b8c:	str	r0, [fp, #-12]
    9b90:	ldr	r0, [fp, #-12]
    9b94:	ldr	r1, [sp, #20]
    9b98:	cmp	r0, r1
    9b9c:	beq	9bb0 <MyGame_Example_Test_parse_json_struct_inline+0x130>
    9ba0:	ldr	r0, [fp, #-12]
    9ba4:	ldr	r1, [fp, #-16]
    9ba8:	cmp	r0, r1
    9bac:	bne	9bb4 <MyGame_Example_Test_parse_json_struct_inline+0x134>
    9bb0:	b	9d18 <MyGame_Example_Test_parse_json_struct_inline+0x298>
    9bb4:	b	9bb8 <MyGame_Example_Test_parse_json_struct_inline+0x138>
    9bb8:	ldr	r0, [sp, #24]
    9bbc:	ldrsb	r1, [sp, #7]
    9bc0:	bl	898c <flatbuffers_int8_write_to_pe>
    9bc4:	b	9bdc <MyGame_Example_Test_parse_json_struct_inline+0x15c>
    9bc8:	ldr	r0, [fp, #-8]
    9bcc:	ldr	r1, [fp, #-12]
    9bd0:	ldr	r2, [fp, #-16]
    9bd4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9bd8:	str	r0, [fp, #-12]
    9bdc:	b	9cf0 <MyGame_Example_Test_parse_json_struct_inline+0x270>
    9be0:	ldrb	r0, [sp, #15]
    9be4:	mov	r1, #1627389952	; 0x61000000
    9be8:	teq	r1, r0, lsl #24
    9bec:	bne	9cd8 <MyGame_Example_Test_parse_json_struct_inline+0x258>
    9bf0:	b	9bf4 <MyGame_Example_Test_parse_json_struct_inline+0x174>
    9bf4:	ldr	r0, [fp, #-8]
    9bf8:	ldr	r1, [fp, #-12]
    9bfc:	str	r1, [sp, #20]
    9c00:	ldr	r2, [fp, #-16]
    9c04:	movw	r3, #1
    9c08:	bl	7168 <flatcc_json_parser_match_symbol>
    9c0c:	str	r0, [fp, #-12]
    9c10:	ldr	r0, [sp, #20]
    9c14:	ldr	r1, [fp, #-12]
    9c18:	cmp	r0, r1
    9c1c:	beq	9cc0 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    9c20:	movw	r0, #0
    9c24:	strh	r0, [sp, #4]
    9c28:	ldr	r0, [fp, #-20]	; 0xffffffec
    9c2c:	add	r0, r0, #0
    9c30:	str	r0, [sp, #24]
    9c34:	ldr	r0, [fp, #-8]
    9c38:	ldr	r1, [fp, #-12]
    9c3c:	str	r1, [sp, #20]
    9c40:	ldr	r2, [fp, #-16]
    9c44:	add	r3, sp, #4
    9c48:	bl	8f34 <flatcc_json_parser_int16>
    9c4c:	str	r0, [fp, #-12]
    9c50:	ldr	r0, [sp, #20]
    9c54:	ldr	r1, [fp, #-12]
    9c58:	cmp	r0, r1
    9c5c:	bne	9cb0 <MyGame_Example_Test_parse_json_struct_inline+0x230>
    9c60:	ldr	r0, [fp, #-8]
    9c64:	ldr	r1, [fp, #-12]
    9c68:	str	r1, [sp, #20]
    9c6c:	ldr	r2, [fp, #-16]
    9c70:	movw	r3, #0
    9c74:	movt	r3, #0
    9c78:	add	ip, sp, #4
    9c7c:	str	ip, [sp]
    9c80:	bl	9010 <flatcc_json_parser_symbolic_int16>
    9c84:	str	r0, [fp, #-12]
    9c88:	ldr	r0, [fp, #-12]
    9c8c:	ldr	r1, [sp, #20]
    9c90:	cmp	r0, r1
    9c94:	beq	9ca8 <MyGame_Example_Test_parse_json_struct_inline+0x228>
    9c98:	ldr	r0, [fp, #-12]
    9c9c:	ldr	r1, [fp, #-16]
    9ca0:	cmp	r0, r1
    9ca4:	bne	9cac <MyGame_Example_Test_parse_json_struct_inline+0x22c>
    9ca8:	b	9d18 <MyGame_Example_Test_parse_json_struct_inline+0x298>
    9cac:	b	9cb0 <MyGame_Example_Test_parse_json_struct_inline+0x230>
    9cb0:	ldr	r0, [sp, #24]
    9cb4:	ldrsh	r1, [sp, #4]
    9cb8:	bl	923c <flatbuffers_int16_write_to_pe>
    9cbc:	b	9cd4 <MyGame_Example_Test_parse_json_struct_inline+0x254>
    9cc0:	ldr	r0, [fp, #-8]
    9cc4:	ldr	r1, [fp, #-12]
    9cc8:	ldr	r2, [fp, #-16]
    9ccc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9cd0:	str	r0, [fp, #-12]
    9cd4:	b	9cec <MyGame_Example_Test_parse_json_struct_inline+0x26c>
    9cd8:	ldr	r0, [fp, #-8]
    9cdc:	ldr	r1, [fp, #-12]
    9ce0:	ldr	r2, [fp, #-16]
    9ce4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9ce8:	str	r0, [fp, #-12]
    9cec:	b	9cf0 <MyGame_Example_Test_parse_json_struct_inline+0x270>
    9cf0:	ldr	r0, [fp, #-8]
    9cf4:	ldr	r1, [fp, #-12]
    9cf8:	ldr	r2, [fp, #-16]
    9cfc:	sub	r3, fp, #24
    9d00:	bl	c3e4 <flatcc_json_parser_object_end>
    9d04:	str	r0, [fp, #-12]
    9d08:	b	9ab4 <MyGame_Example_Test_parse_json_struct_inline+0x34>
    9d0c:	ldr	r0, [fp, #-12]
    9d10:	str	r0, [fp, #-4]
    9d14:	b	9d30 <MyGame_Example_Test_parse_json_struct_inline+0x2b0>
    9d18:	ldr	r0, [fp, #-8]
    9d1c:	ldr	r1, [fp, #-12]
    9d20:	ldr	r2, [fp, #-16]
    9d24:	movw	r3, #33	; 0x21
    9d28:	bl	0 <flatcc_json_parser_set_error>
    9d2c:	str	r0, [fp, #-4]
    9d30:	ldr	r0, [fp, #-4]
    9d34:	mov	sp, fp
    9d38:	pop	{fp, pc}

00009d3c <MyGame_Example_Any_parse_json_union>:
    9d3c:	push	{fp, lr}
    9d40:	mov	fp, sp
    9d44:	sub	sp, sp, #24
    9d48:	ldr	ip, [fp, #8]
    9d4c:	str	r0, [fp, #-8]
    9d50:	str	r1, [sp, #12]
    9d54:	str	r2, [sp, #8]
    9d58:	strb	r3, [sp, #7]
    9d5c:	ldr	r0, [fp, #8]
    9d60:	mov	r1, #0
    9d64:	str	r1, [r0]
    9d68:	ldrb	r0, [sp, #7]
    9d6c:	mov	r1, r0
    9d70:	cmp	r0, #4
    9d74:	str	r1, [sp]
    9d78:	bhi	9e28 <MyGame_Example_Any_parse_json_union+0xec>
    9d7c:	add	r0, pc, #8
    9d80:	ldr	r1, [sp]
    9d84:	ldr	r0, [r0, r1, lsl #2]
    9d88:	mov	pc, r0
    9d8c:	.word	0x00009da0
    9d90:	.word	0x00009db8
    9d94:	.word	0x00009dd4
    9d98:	.word	0x00009df0
    9d9c:	.word	0x00009e0c
    9da0:	ldr	r0, [fp, #-8]
    9da4:	ldr	r1, [sp, #12]
    9da8:	ldr	r2, [sp, #8]
    9dac:	bl	dd48 <flatcc_json_parser_none>
    9db0:	str	r0, [fp, #-4]
    9db4:	b	9ec0 <MyGame_Example_Any_parse_json_union+0x184>
    9db8:	ldr	r0, [fp, #-8]
    9dbc:	ldr	r1, [sp, #12]
    9dc0:	ldr	r2, [sp, #8]
    9dc4:	ldr	r3, [fp, #8]
    9dc8:	bl	2890 <MyGame_Example_Monster_parse_json_table>
    9dcc:	str	r0, [sp, #12]
    9dd0:	b	9e70 <MyGame_Example_Any_parse_json_union+0x134>
    9dd4:	ldr	r0, [fp, #-8]
    9dd8:	ldr	r1, [sp, #12]
    9ddc:	ldr	r2, [sp, #8]
    9de0:	ldr	r3, [fp, #8]
    9de4:	bl	ddc8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>
    9de8:	str	r0, [sp, #12]
    9dec:	b	9e70 <MyGame_Example_Any_parse_json_union+0x134>
    9df0:	ldr	r0, [fp, #-8]
    9df4:	ldr	r1, [sp, #12]
    9df8:	ldr	r2, [sp, #8]
    9dfc:	ldr	r3, [fp, #8]
    9e00:	bl	e410 <MyGame_Example2_Monster_parse_json_table>
    9e04:	str	r0, [sp, #12]
    9e08:	b	9e70 <MyGame_Example_Any_parse_json_union+0x134>
    9e0c:	ldr	r0, [fp, #-8]
    9e10:	ldr	r1, [sp, #12]
    9e14:	ldr	r2, [sp, #8]
    9e18:	ldr	r3, [fp, #8]
    9e1c:	bl	e51c <MyGame_Example_Alt_parse_json_table>
    9e20:	str	r0, [sp, #12]
    9e24:	b	9e70 <MyGame_Example_Any_parse_json_union+0x134>
    9e28:	ldr	r0, [fp, #-8]
    9e2c:	ldr	r0, [r0, #8]
    9e30:	and	r0, r0, #1
    9e34:	cmp	r0, #0
    9e38:	bne	9e58 <MyGame_Example_Any_parse_json_union+0x11c>
    9e3c:	ldr	r0, [fp, #-8]
    9e40:	ldr	r1, [sp, #12]
    9e44:	ldr	r2, [sp, #8]
    9e48:	movw	r3, #15
    9e4c:	bl	0 <flatcc_json_parser_set_error>
    9e50:	str	r0, [fp, #-4]
    9e54:	b	9ec0 <MyGame_Example_Any_parse_json_union+0x184>
    9e58:	ldr	r0, [fp, #-8]
    9e5c:	ldr	r1, [sp, #12]
    9e60:	ldr	r2, [sp, #8]
    9e64:	bl	0 <flatcc_json_parser_generic_json>
    9e68:	str	r0, [fp, #-4]
    9e6c:	b	9ec0 <MyGame_Example_Any_parse_json_union+0x184>
    9e70:	ldr	r0, [fp, #-8]
    9e74:	ldr	r0, [r0, #24]
    9e78:	cmp	r0, #0
    9e7c:	beq	9e8c <MyGame_Example_Any_parse_json_union+0x150>
    9e80:	ldr	r0, [sp, #12]
    9e84:	str	r0, [fp, #-4]
    9e88:	b	9ec0 <MyGame_Example_Any_parse_json_union+0x184>
    9e8c:	ldr	r0, [fp, #8]
    9e90:	ldr	r0, [r0]
    9e94:	cmp	r0, #0
    9e98:	bne	9eb8 <MyGame_Example_Any_parse_json_union+0x17c>
    9e9c:	ldr	r0, [fp, #-8]
    9ea0:	ldr	r1, [sp, #12]
    9ea4:	ldr	r2, [sp, #8]
    9ea8:	movw	r3, #33	; 0x21
    9eac:	bl	0 <flatcc_json_parser_set_error>
    9eb0:	str	r0, [fp, #-4]
    9eb4:	b	9ec0 <MyGame_Example_Any_parse_json_union+0x184>
    9eb8:	ldr	r0, [sp, #12]
    9ebc:	str	r0, [fp, #-4]
    9ec0:	ldr	r0, [fp, #-4]
    9ec4:	mov	sp, fp
    9ec8:	pop	{fp, pc}

00009ecc <MyGame_Example_Any_parse_json_enum>:
    9ecc:	push	{fp, lr}
    9ed0:	mov	fp, sp
    9ed4:	sub	sp, sp, #72	; 0x48
    9ed8:	ldr	ip, [fp, #12]
    9edc:	ldr	lr, [fp, #8]
    9ee0:	str	r0, [fp, #-8]
    9ee4:	str	r1, [fp, #-12]
    9ee8:	str	r2, [fp, #-16]
    9eec:	str	r3, [fp, #-20]	; 0xffffffec
    9ef0:	ldr	r0, [fp, #-12]
    9ef4:	str	r0, [fp, #-24]	; 0xffffffe8
    9ef8:	ldr	r0, [fp, #-12]
    9efc:	ldr	r1, [fp, #-16]
    9f00:	str	ip, [sp, #28]
    9f04:	str	lr, [sp, #24]
    9f08:	bl	7130 <flatcc_json_parser_symbol_part>
    9f0c:	str	r1, [sp, #36]	; 0x24
    9f10:	str	r0, [sp, #32]
    9f14:	ldr	r0, [sp, #32]
    9f18:	ldr	r1, [sp, #36]	; 0x24
    9f1c:	movw	r2, #29183	; 0x71ff
    9f20:	movt	r2, #29797	; 0x7465
    9f24:	subs	r0, r2, r0
    9f28:	movw	r2, #28275	; 0x6e73
    9f2c:	movt	r2, #19823	; 0x4d6f
    9f30:	sbcs	r1, r2, r1
    9f34:	bcc	9fdc <MyGame_Example_Any_parse_json_enum+0x110>
    9f38:	b	9f3c <MyGame_Example_Any_parse_json_enum+0x70>
    9f3c:	ldr	r0, [sp, #36]	; 0x24
    9f40:	bic	r0, r0, #255	; 0xff
    9f44:	movw	r1, #29696	; 0x7400
    9f48:	movt	r1, #16748	; 0x416c
    9f4c:	teq	r0, r1
    9f50:	bne	9fcc <MyGame_Example_Any_parse_json_enum+0x100>
    9f54:	b	9f58 <MyGame_Example_Any_parse_json_enum+0x8c>
    9f58:	ldr	r0, [fp, #-8]
    9f5c:	ldr	r1, [fp, #-12]
    9f60:	str	r1, [fp, #-28]	; 0xffffffe4
    9f64:	ldr	r2, [fp, #-16]
    9f68:	ldr	r3, [fp, #12]
    9f6c:	movw	ip, #3
    9f70:	str	r3, [sp, #20]
    9f74:	mov	r3, ip
    9f78:	ldr	ip, [sp, #20]
    9f7c:	str	ip, [sp]
    9f80:	bl	0 <flatcc_json_parser_match_constant>
    9f84:	str	r0, [fp, #-12]
    9f88:	ldr	r0, [fp, #-12]
    9f8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9f90:	cmp	r0, r1
    9f94:	beq	9fbc <MyGame_Example_Any_parse_json_enum+0xf0>
    9f98:	ldr	r0, [fp, #8]
    9f9c:	mov	r1, #0
    9fa0:	str	r1, [r0, #4]
    9fa4:	mov	r1, #4
    9fa8:	str	r1, [r0]
    9fac:	ldr	r0, [fp, #-20]	; 0xffffffec
    9fb0:	movw	r1, #0
    9fb4:	str	r1, [r0]
    9fb8:	b	9fc8 <MyGame_Example_Any_parse_json_enum+0xfc>
    9fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9fc0:	str	r0, [fp, #-4]
    9fc4:	b	a33c <MyGame_Example_Any_parse_json_enum+0x470>
    9fc8:	b	9fd8 <MyGame_Example_Any_parse_json_enum+0x10c>
    9fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9fd0:	str	r0, [fp, #-4]
    9fd4:	b	a33c <MyGame_Example_Any_parse_json_enum+0x470>
    9fd8:	b	a334 <MyGame_Example_Any_parse_json_enum+0x468>
    9fdc:	ldr	r0, [sp, #32]
    9fe0:	ldr	r1, [sp, #36]	; 0x24
    9fe4:	movw	r2, #28275	; 0x6e73
    9fe8:	movt	r2, #19823	; 0x4d6f
    9fec:	eor	r1, r1, r2
    9ff0:	movw	r2, #29234	; 0x7232
    9ff4:	movt	r2, #29797	; 0x7465
    9ff8:	eor	r0, r0, r2
    9ffc:	orr	r0, r0, r1
    a000:	cmp	r0, #0
    a004:	bne	a078 <MyGame_Example_Any_parse_json_enum+0x1ac>
    a008:	b	a00c <MyGame_Example_Any_parse_json_enum+0x140>
    a00c:	ldr	r0, [fp, #-8]
    a010:	ldr	r1, [fp, #-12]
    a014:	str	r1, [fp, #-28]	; 0xffffffe4
    a018:	ldr	r2, [fp, #-16]
    a01c:	ldr	r3, [fp, #12]
    a020:	movw	ip, #8
    a024:	str	r3, [sp, #16]
    a028:	mov	r3, ip
    a02c:	ldr	ip, [sp, #16]
    a030:	str	ip, [sp]
    a034:	bl	0 <flatcc_json_parser_match_constant>
    a038:	str	r0, [fp, #-12]
    a03c:	ldr	r0, [fp, #-12]
    a040:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a044:	cmp	r0, r1
    a048:	beq	a070 <MyGame_Example_Any_parse_json_enum+0x1a4>
    a04c:	ldr	r0, [fp, #8]
    a050:	mov	r1, #0
    a054:	str	r1, [r0, #4]
    a058:	mov	r1, #3
    a05c:	str	r1, [r0]
    a060:	ldr	r0, [fp, #-20]	; 0xffffffec
    a064:	movw	r1, #0
    a068:	str	r1, [r0]
    a06c:	b	a074 <MyGame_Example_Any_parse_json_enum+0x1a8>
    a070:	b	a128 <MyGame_Example_Any_parse_json_enum+0x25c>
    a074:	b	a124 <MyGame_Example_Any_parse_json_enum+0x258>
    a078:	ldr	r0, [sp, #32]
    a07c:	ldr	r1, [sp, #36]	; 0x24
    a080:	movw	r2, #28526	; 0x6f6e
    a084:	movt	r2, #77	; 0x4d
    a088:	eor	r2, r2, r1, lsr #8
    a08c:	lsr	r0, r0, #8
    a090:	orr	r0, r0, r1, lsl #24
    a094:	movw	r1, #25970	; 0x6572
    a098:	movt	r1, #29556	; 0x7374
    a09c:	eor	r0, r0, r1
    a0a0:	orr	r0, r0, r2
    a0a4:	cmp	r0, #0
    a0a8:	bne	a11c <MyGame_Example_Any_parse_json_enum+0x250>
    a0ac:	b	a0b0 <MyGame_Example_Any_parse_json_enum+0x1e4>
    a0b0:	ldr	r0, [fp, #-8]
    a0b4:	ldr	r1, [fp, #-12]
    a0b8:	str	r1, [fp, #-28]	; 0xffffffe4
    a0bc:	ldr	r2, [fp, #-16]
    a0c0:	ldr	r3, [fp, #12]
    a0c4:	movw	ip, #7
    a0c8:	str	r3, [sp, #12]
    a0cc:	mov	r3, ip
    a0d0:	ldr	ip, [sp, #12]
    a0d4:	str	ip, [sp]
    a0d8:	bl	0 <flatcc_json_parser_match_constant>
    a0dc:	str	r0, [fp, #-12]
    a0e0:	ldr	r0, [fp, #-12]
    a0e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a0e8:	cmp	r0, r1
    a0ec:	beq	a114 <MyGame_Example_Any_parse_json_enum+0x248>
    a0f0:	ldr	r0, [fp, #8]
    a0f4:	mov	r1, #0
    a0f8:	str	r1, [r0, #4]
    a0fc:	mov	r1, #1
    a100:	str	r1, [r0]
    a104:	ldr	r0, [fp, #-20]	; 0xffffffec
    a108:	movw	r1, #0
    a10c:	str	r1, [r0]
    a110:	b	a118 <MyGame_Example_Any_parse_json_enum+0x24c>
    a114:	b	a128 <MyGame_Example_Any_parse_json_enum+0x25c>
    a118:	b	a120 <MyGame_Example_Any_parse_json_enum+0x254>
    a11c:	b	a128 <MyGame_Example_Any_parse_json_enum+0x25c>
    a120:	b	a124 <MyGame_Example_Any_parse_json_enum+0x258>
    a124:	b	a330 <MyGame_Example_Any_parse_json_enum+0x464>
    a128:	ldr	r0, [sp, #36]	; 0x24
    a12c:	movw	r1, #20037	; 0x4e45
    a130:	movt	r1, #20047	; 0x4e4f
    a134:	teq	r0, r1
    a138:	bne	a1a8 <MyGame_Example_Any_parse_json_enum+0x2dc>
    a13c:	b	a140 <MyGame_Example_Any_parse_json_enum+0x274>
    a140:	ldr	r0, [fp, #-8]
    a144:	ldr	r1, [fp, #-12]
    a148:	str	r1, [fp, #-28]	; 0xffffffe4
    a14c:	ldr	r2, [fp, #-16]
    a150:	ldr	r3, [fp, #12]
    a154:	movw	ip, #4
    a158:	str	r3, [sp, #8]
    a15c:	mov	r3, ip
    a160:	ldr	ip, [sp, #8]
    a164:	str	ip, [sp]
    a168:	bl	0 <flatcc_json_parser_match_constant>
    a16c:	str	r0, [fp, #-12]
    a170:	ldr	r0, [fp, #-12]
    a174:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a178:	cmp	r0, r1
    a17c:	beq	a1a0 <MyGame_Example_Any_parse_json_enum+0x2d4>
    a180:	ldr	r0, [fp, #8]
    a184:	mov	r1, #0
    a188:	str	r1, [r0, #4]
    a18c:	str	r1, [r0]
    a190:	ldr	r0, [fp, #-20]	; 0xffffffec
    a194:	movw	r1, #0
    a198:	str	r1, [r0]
    a19c:	b	a1a4 <MyGame_Example_Any_parse_json_enum+0x2d8>
    a1a0:	b	a1b0 <MyGame_Example_Any_parse_json_enum+0x2e4>
    a1a4:	b	a1ac <MyGame_Example_Any_parse_json_enum+0x2e0>
    a1a8:	b	a1b0 <MyGame_Example_Any_parse_json_enum+0x2e4>
    a1ac:	b	a32c <MyGame_Example_Any_parse_json_enum+0x460>
    a1b0:	ldr	r0, [sp, #32]
    a1b4:	ldr	r1, [sp, #36]	; 0x24
    a1b8:	movw	r2, #29556	; 0x7374
    a1bc:	movt	r2, #21605	; 0x5465
    a1c0:	eor	r1, r1, r2
    a1c4:	movw	r2, #28016	; 0x6d70
    a1c8:	movt	r2, #21353	; 0x5369
    a1cc:	eor	r0, r0, r2
    a1d0:	orr	r0, r0, r1
    a1d4:	cmp	r0, #0
    a1d8:	bne	a31c <MyGame_Example_Any_parse_json_enum+0x450>
    a1dc:	b	a1e0 <MyGame_Example_Any_parse_json_enum+0x314>
    a1e0:	ldr	r0, [fp, #-12]
    a1e4:	add	r0, r0, #8
    a1e8:	str	r0, [fp, #-12]
    a1ec:	ldr	r0, [fp, #-12]
    a1f0:	ldr	r1, [fp, #-16]
    a1f4:	bl	7130 <flatcc_json_parser_symbol_part>
    a1f8:	str	r1, [sp, #36]	; 0x24
    a1fc:	str	r0, [sp, #32]
    a200:	ldr	r0, [sp, #32]
    a204:	ldr	r1, [sp, #36]	; 0x24
    a208:	movw	r2, #21601	; 0x5461
    a20c:	movt	r2, #27749	; 0x6c65
    a210:	eor	r1, r1, r2
    a214:	movw	r2, #25943	; 0x6557
    a218:	movt	r2, #25196	; 0x626c
    a21c:	eor	r0, r0, r2
    a220:	orr	r0, r0, r1
    a224:	cmp	r0, #0
    a228:	bne	a30c <MyGame_Example_Any_parse_json_enum+0x440>
    a22c:	b	a230 <MyGame_Example_Any_parse_json_enum+0x364>
    a230:	ldr	r0, [fp, #-12]
    a234:	add	r0, r0, #8
    a238:	str	r0, [fp, #-12]
    a23c:	ldr	r0, [fp, #-12]
    a240:	ldr	r1, [fp, #-16]
    a244:	bl	7130 <flatcc_json_parser_symbol_part>
    a248:	str	r1, [sp, #36]	; 0x24
    a24c:	str	r0, [sp, #32]
    a250:	ldr	r0, [sp, #32]
    a254:	ldr	r1, [sp, #36]	; 0x24
    a258:	movw	r2, #29800	; 0x7468
    a25c:	movt	r2, #105	; 0x69
    a260:	eor	r2, r2, r1, lsr #8
    a264:	lsr	r0, r0, #8
    a268:	orr	r0, r0, r1, lsl #24
    a26c:	movw	r1, #30061	; 0x756d
    a270:	movt	r1, #17774	; 0x456e
    a274:	eor	r0, r0, r1
    a278:	orr	r0, r0, r2
    a27c:	cmp	r0, #0
    a280:	bne	a2fc <MyGame_Example_Any_parse_json_enum+0x430>
    a284:	b	a288 <MyGame_Example_Any_parse_json_enum+0x3bc>
    a288:	ldr	r0, [fp, #-8]
    a28c:	ldr	r1, [fp, #-12]
    a290:	str	r1, [fp, #-28]	; 0xffffffe4
    a294:	ldr	r2, [fp, #-16]
    a298:	ldr	r3, [fp, #12]
    a29c:	movw	ip, #7
    a2a0:	str	r3, [sp, #4]
    a2a4:	mov	r3, ip
    a2a8:	ldr	ip, [sp, #4]
    a2ac:	str	ip, [sp]
    a2b0:	bl	0 <flatcc_json_parser_match_constant>
    a2b4:	str	r0, [fp, #-12]
    a2b8:	ldr	r0, [fp, #-12]
    a2bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a2c0:	cmp	r0, r1
    a2c4:	beq	a2ec <MyGame_Example_Any_parse_json_enum+0x420>
    a2c8:	ldr	r0, [fp, #8]
    a2cc:	mov	r1, #0
    a2d0:	str	r1, [r0, #4]
    a2d4:	mov	r1, #2
    a2d8:	str	r1, [r0]
    a2dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    a2e0:	movw	r1, #0
    a2e4:	str	r1, [r0]
    a2e8:	b	a2f8 <MyGame_Example_Any_parse_json_enum+0x42c>
    a2ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a2f0:	str	r0, [fp, #-4]
    a2f4:	b	a33c <MyGame_Example_Any_parse_json_enum+0x470>
    a2f8:	b	a308 <MyGame_Example_Any_parse_json_enum+0x43c>
    a2fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a300:	str	r0, [fp, #-4]
    a304:	b	a33c <MyGame_Example_Any_parse_json_enum+0x470>
    a308:	b	a318 <MyGame_Example_Any_parse_json_enum+0x44c>
    a30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a310:	str	r0, [fp, #-4]
    a314:	b	a33c <MyGame_Example_Any_parse_json_enum+0x470>
    a318:	b	a328 <MyGame_Example_Any_parse_json_enum+0x45c>
    a31c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a320:	str	r0, [fp, #-4]
    a324:	b	a33c <MyGame_Example_Any_parse_json_enum+0x470>
    a328:	b	a32c <MyGame_Example_Any_parse_json_enum+0x460>
    a32c:	b	a330 <MyGame_Example_Any_parse_json_enum+0x464>
    a330:	b	a334 <MyGame_Example_Any_parse_json_enum+0x468>
    a334:	ldr	r0, [fp, #-12]
    a338:	str	r0, [fp, #-4]
    a33c:	ldr	r0, [fp, #-4]
    a340:	mov	sp, fp
    a344:	pop	{fp, pc}

0000a348 <flatcc_json_parser_bool>:
    a348:	push	{fp, lr}
    a34c:	mov	fp, sp
    a350:	sub	sp, sp, #32
    a354:	str	r0, [fp, #-8]
    a358:	str	r1, [fp, #-12]
    a35c:	str	r2, [sp, #16]
    a360:	str	r3, [sp, #12]
    a364:	ldr	r0, [fp, #-12]
    a368:	str	r0, [sp, #8]
    a36c:	ldr	r0, [sp, #16]
    a370:	ldr	r1, [fp, #-12]
    a374:	sub	r0, r0, r1
    a378:	cmp	r0, #4
    a37c:	blt	a3bc <flatcc_json_parser_bool+0x74>
    a380:	ldr	r0, [fp, #-12]
    a384:	ldr	r0, [r0]
    a388:	movw	r1, #29300	; 0x7274
    a38c:	movt	r1, #25973	; 0x6575
    a390:	subs	r0, r0, r1
    a394:	movwne	r0, #1
    a398:	cmp	r0, #0
    a39c:	bne	a3bc <flatcc_json_parser_bool+0x74>
    a3a0:	ldr	r0, [sp, #12]
    a3a4:	movw	r1, #1
    a3a8:	strb	r1, [r0]
    a3ac:	ldr	r0, [sp, #8]
    a3b0:	add	r0, r0, #4
    a3b4:	str	r0, [fp, #-4]
    a3b8:	b	a454 <flatcc_json_parser_bool+0x10c>
    a3bc:	ldr	r0, [sp, #16]
    a3c0:	ldr	r1, [fp, #-12]
    a3c4:	sub	r0, r0, r1
    a3c8:	cmp	r0, #5
    a3cc:	blt	a408 <flatcc_json_parser_bool+0xc0>
    a3d0:	ldr	r0, [fp, #-12]
    a3d4:	movw	r1, #0
    a3d8:	movt	r1, #0
    a3dc:	mov	r2, #5
    a3e0:	bl	0 <memcmp>
    a3e4:	cmp	r0, #0
    a3e8:	bne	a408 <flatcc_json_parser_bool+0xc0>
    a3ec:	ldr	r0, [sp, #12]
    a3f0:	movw	r1, #0
    a3f4:	strb	r1, [r0]
    a3f8:	ldr	r0, [sp, #8]
    a3fc:	add	r0, r0, #5
    a400:	str	r0, [fp, #-4]
    a404:	b	a454 <flatcc_json_parser_bool+0x10c>
    a408:	b	a40c <flatcc_json_parser_bool+0xc4>
    a40c:	ldr	r0, [fp, #-8]
    a410:	ldr	r1, [fp, #-12]
    a414:	ldr	r2, [sp, #16]
    a418:	add	r3, sp, #7
    a41c:	bl	8a9c <flatcc_json_parser_uint8>
    a420:	str	r0, [fp, #-12]
    a424:	ldrsb	r0, [sp, #7]
    a428:	cmp	r0, #0
    a42c:	movw	r0, #0
    a430:	movne	r0, #1
    a434:	mvn	r1, #0
    a438:	eor	r0, r0, r1
    a43c:	eor	r0, r0, r1
    a440:	and	r0, r0, #1
    a444:	ldr	r1, [sp, #12]
    a448:	strb	r0, [r1]
    a44c:	ldr	r0, [fp, #-12]
    a450:	str	r0, [fp, #-4]
    a454:	ldr	r0, [fp, #-4]
    a458:	mov	sp, fp
    a45c:	pop	{fp, pc}

0000a460 <flatcc_json_parser_symbolic_bool>:
    a460:	push	{r4, r5, r6, sl, fp, lr}
    a464:	add	fp, sp, #16
    a468:	sub	sp, sp, #88	; 0x58
    a46c:	ldr	ip, [fp, #8]
    a470:	str	r0, [fp, #-24]	; 0xffffffe8
    a474:	str	r1, [fp, #-28]	; 0xffffffe4
    a478:	str	r2, [fp, #-32]	; 0xffffffe0
    a47c:	str	r3, [fp, #-36]	; 0xffffffdc
    a480:	movw	r0, #0
    a484:	strb	r0, [fp, #-45]	; 0xffffffd3
    a488:	movw	r1, #0
    a48c:	str	r1, [sp, #36]	; 0x24
    a490:	ldr	r1, [fp, #8]
    a494:	strb	r0, [r1]
    a498:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a49c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a4a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a4a4:	str	ip, [sp, #32]
    a4a8:	bl	db28 <flatcc_json_parser_constant_start>
    a4ac:	str	r0, [fp, #-28]	; 0xffffffe4
    a4b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a4b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    a4b8:	cmp	r0, r1
    a4bc:	bne	a4cc <flatcc_json_parser_symbolic_bool+0x6c>
    a4c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a4c4:	str	r0, [fp, #-20]	; 0xffffffec
    a4c8:	b	a680 <flatcc_json_parser_symbolic_bool+0x220>
    a4cc:	b	a4d0 <flatcc_json_parser_symbolic_bool+0x70>
    a4d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a4d4:	str	r0, [fp, #-40]	; 0xffffffd8
    a4d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a4dc:	ldr	r0, [r0]
    a4e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a4e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a4e8:	str	r2, [fp, #-44]	; 0xffffffd4
    a4ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a4f0:	str	r0, [sp, #28]
    a4f4:	mov	r0, r1
    a4f8:	mov	r1, r2
    a4fc:	mov	r2, r3
    a500:	add	r3, sp, #44	; 0x2c
    a504:	add	ip, sp, #48	; 0x30
    a508:	str	ip, [sp]
    a50c:	add	ip, sp, #40	; 0x28
    a510:	str	ip, [sp, #4]
    a514:	ldr	ip, [sp, #28]
    a518:	blx	ip
    a51c:	str	r0, [fp, #-28]	; 0xffffffe4
    a520:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a524:	ldr	r1, [fp, #-32]	; 0xffffffe0
    a528:	cmp	r0, r1
    a52c:	bne	a53c <flatcc_json_parser_symbolic_bool+0xdc>
    a530:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a534:	str	r0, [fp, #-20]	; 0xffffffec
    a538:	b	a680 <flatcc_json_parser_symbolic_bool+0x220>
    a53c:	b	a540 <flatcc_json_parser_symbolic_bool+0xe0>
    a540:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a544:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a548:	cmp	r0, r1
    a54c:	movw	r0, #0
    a550:	str	r0, [sp, #24]
    a554:	bne	a57c <flatcc_json_parser_symbolic_bool+0x11c>
    a558:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a55c:	add	r1, r0, #4
    a560:	str	r1, [fp, #-40]	; 0xffffffd8
    a564:	ldr	r0, [r0, #4]
    a568:	movw	r1, #0
    a56c:	cmp	r0, r1
    a570:	movw	r0, #0
    a574:	movne	r0, #1
    a578:	str	r0, [sp, #24]
    a57c:	ldr	r0, [sp, #24]
    a580:	tst	r0, #1
    a584:	bne	a4d8 <flatcc_json_parser_symbolic_bool+0x78>
    a588:	ldr	r0, [fp, #-44]	; 0xffffffd4
    a58c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a590:	cmp	r0, r1
    a594:	bne	a5b4 <flatcc_json_parser_symbolic_bool+0x154>
    a598:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a59c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a5a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a5a4:	movw	r3, #23
    a5a8:	bl	0 <flatcc_json_parser_set_error>
    a5ac:	str	r0, [fp, #-20]	; 0xffffffec
    a5b0:	b	a680 <flatcc_json_parser_symbolic_bool+0x220>
    a5b4:	ldr	r0, [sp, #36]	; 0x24
    a5b8:	add	r1, r0, #1
    a5bc:	str	r1, [sp, #36]	; 0x24
    a5c0:	cmp	r0, #0
    a5c4:	beq	a5f4 <flatcc_json_parser_symbolic_bool+0x194>
    a5c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a5cc:	ldr	r0, [r0, #12]
    a5d0:	cmp	r0, #0
    a5d4:	beq	a5f4 <flatcc_json_parser_symbolic_bool+0x194>
    a5d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a5dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a5e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a5e4:	movw	r3, #14
    a5e8:	bl	0 <flatcc_json_parser_set_error>
    a5ec:	str	r0, [fp, #-20]	; 0xffffffec
    a5f0:	b	a680 <flatcc_json_parser_symbolic_bool+0x220>
    a5f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a5f8:	mov	r1, r0
    a5fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a600:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a604:	ldr	ip, [sp, #44]	; 0x2c
    a608:	ldr	lr, [sp, #48]	; 0x30
    a60c:	ldr	r4, [sp, #52]	; 0x34
    a610:	mov	r5, sp
    a614:	sub	r6, fp, #45	; 0x2d
    a618:	str	r6, [r5, #8]
    a61c:	str	r4, [r5, #4]
    a620:	str	lr, [r5]
    a624:	str	r0, [sp, #20]
    a628:	mov	r0, r2
    a62c:	str	r1, [sp, #16]
    a630:	mov	r1, r3
    a634:	ldr	r2, [sp, #20]
    a638:	mov	r3, ip
    a63c:	bl	12130 <flatcc_json_parser_coerce_bool>
    a640:	ldr	r1, [sp, #16]
    a644:	cmp	r1, r0
    a648:	bne	a658 <flatcc_json_parser_symbolic_bool+0x1f8>
    a64c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a650:	str	r0, [fp, #-20]	; 0xffffffec
    a654:	b	a680 <flatcc_json_parser_symbolic_bool+0x220>
    a658:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    a65c:	ldr	r1, [fp, #8]
    a660:	ldrb	r2, [r1]
    a664:	add	r0, r2, r0
    a668:	strb	r0, [r1]
    a66c:	ldr	r0, [sp, #40]	; 0x28
    a670:	cmp	r0, #0
    a674:	bne	a4d0 <flatcc_json_parser_symbolic_bool+0x70>
    a678:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a67c:	str	r0, [fp, #-20]	; 0xffffffec
    a680:	ldr	r0, [fp, #-20]	; 0xffffffec
    a684:	sub	sp, fp, #16
    a688:	pop	{r4, r5, r6, sl, fp, pc}

0000a68c <flatbuffers_bool_write_to_pe>:
    a68c:	push	{fp, lr}
    a690:	mov	fp, sp
    a694:	sub	sp, sp, #8
    a698:	str	r0, [sp, #4]
    a69c:	strb	r1, [sp, #3]
    a6a0:	ldrb	r0, [sp, #3]
    a6a4:	bl	121c8 <flatbuffers_bool_cast_to_pe>
    a6a8:	ldr	r1, [sp, #4]
    a6ac:	strb	r0, [r1]
    a6b0:	mov	sp, fp
    a6b4:	pop	{fp, pc}

0000a6b8 <MyGame_Example_Ability_parse_json_struct_inline>:
    a6b8:	push	{fp, lr}
    a6bc:	mov	fp, sp
    a6c0:	sub	sp, sp, #64	; 0x40
    a6c4:	str	r0, [fp, #-8]
    a6c8:	str	r1, [fp, #-12]
    a6cc:	str	r2, [fp, #-16]
    a6d0:	str	r3, [fp, #-20]	; 0xffffffec
    a6d4:	ldr	r0, [fp, #-8]
    a6d8:	ldr	r1, [fp, #-12]
    a6dc:	ldr	r2, [fp, #-16]
    a6e0:	sub	r3, fp, #24
    a6e4:	bl	6fa0 <flatcc_json_parser_object_start>
    a6e8:	str	r0, [fp, #-12]
    a6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a6f0:	cmp	r0, #0
    a6f4:	beq	a964 <MyGame_Example_Ability_parse_json_struct_inline+0x2ac>
    a6f8:	ldr	r0, [fp, #-8]
    a6fc:	ldr	r1, [fp, #-12]
    a700:	ldr	r2, [fp, #-16]
    a704:	bl	7084 <flatcc_json_parser_symbol_start>
    a708:	str	r0, [fp, #-12]
    a70c:	ldr	r0, [fp, #-12]
    a710:	ldr	r1, [fp, #-16]
    a714:	bl	7130 <flatcc_json_parser_symbol_part>
    a718:	str	r1, [sp, #20]
    a71c:	str	r0, [sp, #16]
    a720:	ldrh	r0, [sp, #22]
    a724:	movw	r1, #0
    a728:	movt	r1, #26980	; 0x6964
    a72c:	teq	r1, r0, lsl #16
    a730:	bne	a81c <MyGame_Example_Ability_parse_json_struct_inline+0x164>
    a734:	b	a738 <MyGame_Example_Ability_parse_json_struct_inline+0x80>
    a738:	ldr	r0, [fp, #-8]
    a73c:	ldr	r1, [fp, #-12]
    a740:	str	r1, [sp, #28]
    a744:	ldr	r2, [fp, #-16]
    a748:	movw	r3, #2
    a74c:	bl	7168 <flatcc_json_parser_match_symbol>
    a750:	str	r0, [fp, #-12]
    a754:	ldr	r0, [sp, #28]
    a758:	ldr	r1, [fp, #-12]
    a75c:	cmp	r0, r1
    a760:	beq	a804 <MyGame_Example_Ability_parse_json_struct_inline+0x14c>
    a764:	movw	r0, #0
    a768:	str	r0, [sp, #12]
    a76c:	ldr	r0, [fp, #-20]	; 0xffffffec
    a770:	add	r0, r0, #0
    a774:	str	r0, [sp, #32]
    a778:	ldr	r0, [fp, #-8]
    a77c:	ldr	r1, [fp, #-12]
    a780:	str	r1, [sp, #28]
    a784:	ldr	r2, [fp, #-16]
    a788:	add	r3, sp, #12
    a78c:	bl	bb00 <flatcc_json_parser_uint32>
    a790:	str	r0, [fp, #-12]
    a794:	ldr	r0, [sp, #28]
    a798:	ldr	r1, [fp, #-12]
    a79c:	cmp	r0, r1
    a7a0:	bne	a7f4 <MyGame_Example_Ability_parse_json_struct_inline+0x13c>
    a7a4:	ldr	r0, [fp, #-8]
    a7a8:	ldr	r1, [fp, #-12]
    a7ac:	str	r1, [sp, #28]
    a7b0:	ldr	r2, [fp, #-16]
    a7b4:	movw	r3, #0
    a7b8:	movt	r3, #0
    a7bc:	add	ip, sp, #12
    a7c0:	str	ip, [sp]
    a7c4:	bl	bbd8 <flatcc_json_parser_symbolic_uint32>
    a7c8:	str	r0, [fp, #-12]
    a7cc:	ldr	r0, [fp, #-12]
    a7d0:	ldr	r1, [sp, #28]
    a7d4:	cmp	r0, r1
    a7d8:	beq	a7ec <MyGame_Example_Ability_parse_json_struct_inline+0x134>
    a7dc:	ldr	r0, [fp, #-12]
    a7e0:	ldr	r1, [fp, #-16]
    a7e4:	cmp	r0, r1
    a7e8:	bne	a7f0 <MyGame_Example_Ability_parse_json_struct_inline+0x138>
    a7ec:	b	a970 <MyGame_Example_Ability_parse_json_struct_inline+0x2b8>
    a7f0:	b	a7f4 <MyGame_Example_Ability_parse_json_struct_inline+0x13c>
    a7f4:	ldr	r0, [sp, #32]
    a7f8:	ldr	r1, [sp, #12]
    a7fc:	bl	be00 <flatbuffers_uint32_write_to_pe>
    a800:	b	a818 <MyGame_Example_Ability_parse_json_struct_inline+0x160>
    a804:	ldr	r0, [fp, #-8]
    a808:	ldr	r1, [fp, #-12]
    a80c:	ldr	r2, [fp, #-16]
    a810:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a814:	str	r0, [fp, #-12]
    a818:	b	a948 <MyGame_Example_Ability_parse_json_struct_inline+0x290>
    a81c:	ldr	r0, [sp, #16]
    a820:	ldr	r1, [sp, #20]
    a824:	movw	r2, #29556	; 0x7374
    a828:	movt	r2, #25705	; 0x6469
    a82c:	eor	r1, r1, r2
    a830:	movw	r2, #25445	; 0x6365
    a834:	movt	r2, #24942	; 0x616e
    a838:	eor	r0, r0, r2
    a83c:	orr	r0, r0, r1
    a840:	cmp	r0, #0
    a844:	bne	a930 <MyGame_Example_Ability_parse_json_struct_inline+0x278>
    a848:	b	a84c <MyGame_Example_Ability_parse_json_struct_inline+0x194>
    a84c:	ldr	r0, [fp, #-8]
    a850:	ldr	r1, [fp, #-12]
    a854:	str	r1, [sp, #28]
    a858:	ldr	r2, [fp, #-16]
    a85c:	movw	r3, #8
    a860:	bl	7168 <flatcc_json_parser_match_symbol>
    a864:	str	r0, [fp, #-12]
    a868:	ldr	r0, [sp, #28]
    a86c:	ldr	r1, [fp, #-12]
    a870:	cmp	r0, r1
    a874:	beq	a918 <MyGame_Example_Ability_parse_json_struct_inline+0x260>
    a878:	movw	r0, #0
    a87c:	str	r0, [sp, #8]
    a880:	ldr	r0, [fp, #-20]	; 0xffffffec
    a884:	add	r0, r0, #4
    a888:	str	r0, [sp, #32]
    a88c:	ldr	r0, [fp, #-8]
    a890:	ldr	r1, [fp, #-12]
    a894:	str	r1, [sp, #28]
    a898:	ldr	r2, [fp, #-16]
    a89c:	add	r3, sp, #8
    a8a0:	bl	bb00 <flatcc_json_parser_uint32>
    a8a4:	str	r0, [fp, #-12]
    a8a8:	ldr	r0, [sp, #28]
    a8ac:	ldr	r1, [fp, #-12]
    a8b0:	cmp	r0, r1
    a8b4:	bne	a908 <MyGame_Example_Ability_parse_json_struct_inline+0x250>
    a8b8:	ldr	r0, [fp, #-8]
    a8bc:	ldr	r1, [fp, #-12]
    a8c0:	str	r1, [sp, #28]
    a8c4:	ldr	r2, [fp, #-16]
    a8c8:	movw	r3, #0
    a8cc:	movt	r3, #0
    a8d0:	add	ip, sp, #8
    a8d4:	str	ip, [sp]
    a8d8:	bl	bbd8 <flatcc_json_parser_symbolic_uint32>
    a8dc:	str	r0, [fp, #-12]
    a8e0:	ldr	r0, [fp, #-12]
    a8e4:	ldr	r1, [sp, #28]
    a8e8:	cmp	r0, r1
    a8ec:	beq	a900 <MyGame_Example_Ability_parse_json_struct_inline+0x248>
    a8f0:	ldr	r0, [fp, #-12]
    a8f4:	ldr	r1, [fp, #-16]
    a8f8:	cmp	r0, r1
    a8fc:	bne	a904 <MyGame_Example_Ability_parse_json_struct_inline+0x24c>
    a900:	b	a970 <MyGame_Example_Ability_parse_json_struct_inline+0x2b8>
    a904:	b	a908 <MyGame_Example_Ability_parse_json_struct_inline+0x250>
    a908:	ldr	r0, [sp, #32]
    a90c:	ldr	r1, [sp, #8]
    a910:	bl	be00 <flatbuffers_uint32_write_to_pe>
    a914:	b	a92c <MyGame_Example_Ability_parse_json_struct_inline+0x274>
    a918:	ldr	r0, [fp, #-8]
    a91c:	ldr	r1, [fp, #-12]
    a920:	ldr	r2, [fp, #-16]
    a924:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a928:	str	r0, [fp, #-12]
    a92c:	b	a944 <MyGame_Example_Ability_parse_json_struct_inline+0x28c>
    a930:	ldr	r0, [fp, #-8]
    a934:	ldr	r1, [fp, #-12]
    a938:	ldr	r2, [fp, #-16]
    a93c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a940:	str	r0, [fp, #-12]
    a944:	b	a948 <MyGame_Example_Ability_parse_json_struct_inline+0x290>
    a948:	ldr	r0, [fp, #-8]
    a94c:	ldr	r1, [fp, #-12]
    a950:	ldr	r2, [fp, #-16]
    a954:	sub	r3, fp, #24
    a958:	bl	c3e4 <flatcc_json_parser_object_end>
    a95c:	str	r0, [fp, #-12]
    a960:	b	a6ec <MyGame_Example_Ability_parse_json_struct_inline+0x34>
    a964:	ldr	r0, [fp, #-12]
    a968:	str	r0, [fp, #-4]
    a96c:	b	a988 <MyGame_Example_Ability_parse_json_struct_inline+0x2d0>
    a970:	ldr	r0, [fp, #-8]
    a974:	ldr	r1, [fp, #-12]
    a978:	ldr	r2, [fp, #-16]
    a97c:	movw	r3, #33	; 0x21
    a980:	bl	0 <flatcc_json_parser_set_error>
    a984:	str	r0, [fp, #-4]
    a988:	ldr	r0, [fp, #-4]
    a98c:	mov	sp, fp
    a990:	pop	{fp, pc}

0000a994 <MyGame_Example_TestBase64_parse_json_table>:
    a994:	push	{fp, lr}
    a998:	mov	fp, sp
    a99c:	sub	sp, sp, #56	; 0x38
    a9a0:	str	r0, [fp, #-8]
    a9a4:	str	r1, [fp, #-12]
    a9a8:	str	r2, [fp, #-16]
    a9ac:	str	r3, [fp, #-20]	; 0xffffffec
    a9b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    a9b4:	movw	r1, #0
    a9b8:	str	r1, [r0]
    a9bc:	ldr	r0, [fp, #-8]
    a9c0:	ldr	r0, [r0]
    a9c4:	movw	r1, #3
    a9c8:	bl	0 <flatcc_builder_start_table>
    a9cc:	cmp	r0, #0
    a9d0:	beq	a9d8 <MyGame_Example_TestBase64_parse_json_table+0x44>
    a9d4:	b	ad48 <MyGame_Example_TestBase64_parse_json_table+0x3b4>
    a9d8:	ldr	r0, [fp, #-8]
    a9dc:	ldr	r1, [fp, #-12]
    a9e0:	ldr	r2, [fp, #-16]
    a9e4:	sub	r3, fp, #24
    a9e8:	bl	6fa0 <flatcc_json_parser_object_start>
    a9ec:	str	r0, [fp, #-12]
    a9f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a9f4:	cmp	r0, #0
    a9f8:	beq	ad08 <MyGame_Example_TestBase64_parse_json_table+0x374>
    a9fc:	ldr	r0, [fp, #-8]
    aa00:	ldr	r1, [fp, #-12]
    aa04:	ldr	r2, [fp, #-16]
    aa08:	bl	7084 <flatcc_json_parser_symbol_start>
    aa0c:	str	r0, [fp, #-12]
    aa10:	ldr	r0, [fp, #-12]
    aa14:	ldr	r1, [fp, #-16]
    aa18:	bl	7130 <flatcc_json_parser_symbol_part>
    aa1c:	str	r1, [sp, #12]
    aa20:	str	r0, [sp, #8]
    aa24:	ldr	r0, [sp, #8]
    aa28:	ldr	r1, [sp, #12]
    aa2c:	movw	r2, #65535	; 0xffff
    aa30:	movt	r2, #25955	; 0x6563
    aa34:	subs	r0, r2, r0
    aa38:	movw	r2, #29556	; 0x7374
    aa3c:	movt	r2, #28261	; 0x6e65
    aa40:	sbcs	r1, r2, r1
    aa44:	bcc	ab20 <MyGame_Example_TestBase64_parse_json_table+0x18c>
    aa48:	b	aa4c <MyGame_Example_TestBase64_parse_json_table+0xb8>
    aa4c:	ldr	r0, [sp, #12]
    aa50:	movw	r1, #29793	; 0x7461
    aa54:	movt	r1, #25697	; 0x6461
    aa58:	teq	r0, r1
    aa5c:	bne	ab08 <MyGame_Example_TestBase64_parse_json_table+0x174>
    aa60:	b	aa64 <MyGame_Example_TestBase64_parse_json_table+0xd0>
    aa64:	ldr	r0, [fp, #-8]
    aa68:	ldr	r1, [fp, #-12]
    aa6c:	str	r1, [sp, #16]
    aa70:	ldr	r2, [fp, #-16]
    aa74:	movw	r3, #4
    aa78:	bl	7168 <flatcc_json_parser_match_symbol>
    aa7c:	str	r0, [fp, #-12]
    aa80:	ldr	r0, [sp, #16]
    aa84:	ldr	r1, [fp, #-12]
    aa88:	cmp	r0, r1
    aa8c:	beq	aaf0 <MyGame_Example_TestBase64_parse_json_table+0x15c>
    aa90:	ldr	r0, [fp, #-8]
    aa94:	ldr	r1, [fp, #-12]
    aa98:	ldr	r2, [fp, #-16]
    aa9c:	add	r3, sp, #24
    aaa0:	movw	ip, #0
    aaa4:	str	ip, [sp]
    aaa8:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    aaac:	str	r0, [fp, #-12]
    aab0:	ldr	r0, [sp, #24]
    aab4:	cmp	r0, #0
    aab8:	beq	aadc <MyGame_Example_TestBase64_parse_json_table+0x148>
    aabc:	ldr	r0, [fp, #-8]
    aac0:	ldr	r0, [r0]
    aac4:	movw	r1, #0
    aac8:	bl	0 <flatcc_builder_table_add_offset>
    aacc:	str	r0, [sp, #20]
    aad0:	movw	r1, #0
    aad4:	cmp	r0, r1
    aad8:	bne	aae0 <MyGame_Example_TestBase64_parse_json_table+0x14c>
    aadc:	b	ad48 <MyGame_Example_TestBase64_parse_json_table+0x3b4>
    aae0:	ldr	r0, [sp, #24]
    aae4:	ldr	r1, [sp, #20]
    aae8:	str	r0, [r1]
    aaec:	b	ab04 <MyGame_Example_TestBase64_parse_json_table+0x170>
    aaf0:	ldr	r0, [fp, #-8]
    aaf4:	ldr	r1, [fp, #-12]
    aaf8:	ldr	r2, [fp, #-16]
    aafc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ab00:	str	r0, [fp, #-12]
    ab04:	b	ab1c <MyGame_Example_TestBase64_parse_json_table+0x188>
    ab08:	ldr	r0, [fp, #-8]
    ab0c:	ldr	r1, [fp, #-12]
    ab10:	ldr	r2, [fp, #-16]
    ab14:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ab18:	str	r0, [fp, #-12]
    ab1c:	b	acec <MyGame_Example_TestBase64_parse_json_table+0x358>
    ab20:	ldr	r0, [sp, #8]
    ab24:	ldr	r1, [sp, #12]
    ab28:	movw	r2, #29292	; 0x726c
    ab2c:	movt	r2, #117	; 0x75
    ab30:	eor	r2, r2, r1, lsr #8
    ab34:	lsr	r0, r0, #8
    ab38:	orr	r0, r0, r1, lsl #24
    ab3c:	movw	r1, #29793	; 0x7461
    ab40:	movt	r1, #25697	; 0x6461
    ab44:	eor	r0, r0, r1
    ab48:	orr	r0, r0, r2
    ab4c:	cmp	r0, #0
    ab50:	bne	abfc <MyGame_Example_TestBase64_parse_json_table+0x268>
    ab54:	b	ab58 <MyGame_Example_TestBase64_parse_json_table+0x1c4>
    ab58:	ldr	r0, [fp, #-8]
    ab5c:	ldr	r1, [fp, #-12]
    ab60:	str	r1, [sp, #16]
    ab64:	ldr	r2, [fp, #-16]
    ab68:	movw	r3, #7
    ab6c:	bl	7168 <flatcc_json_parser_match_symbol>
    ab70:	str	r0, [fp, #-12]
    ab74:	ldr	r0, [sp, #16]
    ab78:	ldr	r1, [fp, #-12]
    ab7c:	cmp	r0, r1
    ab80:	beq	abe4 <MyGame_Example_TestBase64_parse_json_table+0x250>
    ab84:	ldr	r0, [fp, #-8]
    ab88:	ldr	r1, [fp, #-12]
    ab8c:	ldr	r2, [fp, #-16]
    ab90:	add	r3, sp, #24
    ab94:	movw	ip, #1
    ab98:	str	ip, [sp]
    ab9c:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    aba0:	str	r0, [fp, #-12]
    aba4:	ldr	r0, [sp, #24]
    aba8:	cmp	r0, #0
    abac:	beq	abd0 <MyGame_Example_TestBase64_parse_json_table+0x23c>
    abb0:	ldr	r0, [fp, #-8]
    abb4:	ldr	r0, [r0]
    abb8:	movw	r1, #1
    abbc:	bl	0 <flatcc_builder_table_add_offset>
    abc0:	str	r0, [sp, #20]
    abc4:	movw	r1, #0
    abc8:	cmp	r0, r1
    abcc:	bne	abd4 <MyGame_Example_TestBase64_parse_json_table+0x240>
    abd0:	b	ad48 <MyGame_Example_TestBase64_parse_json_table+0x3b4>
    abd4:	ldr	r0, [sp, #24]
    abd8:	ldr	r1, [sp, #20]
    abdc:	str	r0, [r1]
    abe0:	b	abf8 <MyGame_Example_TestBase64_parse_json_table+0x264>
    abe4:	ldr	r0, [fp, #-8]
    abe8:	ldr	r1, [fp, #-12]
    abec:	ldr	r2, [fp, #-16]
    abf0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    abf4:	str	r0, [fp, #-12]
    abf8:	b	ace8 <MyGame_Example_TestBase64_parse_json_table+0x354>
    abfc:	ldrh	r0, [sp, #10]
    ac00:	ldr	r1, [sp, #12]
    ac04:	movw	r2, #28261	; 0x6e65
    ac08:	eor	r2, r2, r1, lsr #16
    ac0c:	orr	r0, r0, r1, lsl #16
    ac10:	movw	r1, #25956	; 0x6564
    ac14:	movt	r1, #29556	; 0x7374
    ac18:	eor	r0, r0, r1
    ac1c:	orr	r0, r0, r2
    ac20:	cmp	r0, #0
    ac24:	bne	acd0 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    ac28:	b	ac2c <MyGame_Example_TestBase64_parse_json_table+0x298>
    ac2c:	ldr	r0, [fp, #-8]
    ac30:	ldr	r1, [fp, #-12]
    ac34:	str	r1, [sp, #16]
    ac38:	ldr	r2, [fp, #-16]
    ac3c:	movw	r3, #6
    ac40:	bl	7168 <flatcc_json_parser_match_symbol>
    ac44:	str	r0, [fp, #-12]
    ac48:	ldr	r0, [sp, #16]
    ac4c:	ldr	r1, [fp, #-12]
    ac50:	cmp	r0, r1
    ac54:	beq	acb8 <MyGame_Example_TestBase64_parse_json_table+0x324>
    ac58:	ldr	r0, [fp, #-8]
    ac5c:	ldr	r1, [fp, #-12]
    ac60:	ldr	r2, [fp, #-16]
    ac64:	add	r3, sp, #24
    ac68:	movw	ip, #0
    ac6c:	str	ip, [sp]
    ac70:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    ac74:	str	r0, [fp, #-12]
    ac78:	ldr	r0, [sp, #24]
    ac7c:	cmp	r0, #0
    ac80:	beq	aca4 <MyGame_Example_TestBase64_parse_json_table+0x310>
    ac84:	ldr	r0, [fp, #-8]
    ac88:	ldr	r0, [r0]
    ac8c:	movw	r1, #2
    ac90:	bl	0 <flatcc_builder_table_add_offset>
    ac94:	str	r0, [sp, #20]
    ac98:	movw	r1, #0
    ac9c:	cmp	r0, r1
    aca0:	bne	aca8 <MyGame_Example_TestBase64_parse_json_table+0x314>
    aca4:	b	ad48 <MyGame_Example_TestBase64_parse_json_table+0x3b4>
    aca8:	ldr	r0, [sp, #24]
    acac:	ldr	r1, [sp, #20]
    acb0:	str	r0, [r1]
    acb4:	b	accc <MyGame_Example_TestBase64_parse_json_table+0x338>
    acb8:	ldr	r0, [fp, #-8]
    acbc:	ldr	r1, [fp, #-12]
    acc0:	ldr	r2, [fp, #-16]
    acc4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    acc8:	str	r0, [fp, #-12]
    accc:	b	ace4 <MyGame_Example_TestBase64_parse_json_table+0x350>
    acd0:	ldr	r0, [fp, #-8]
    acd4:	ldr	r1, [fp, #-12]
    acd8:	ldr	r2, [fp, #-16]
    acdc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ace0:	str	r0, [fp, #-12]
    ace4:	b	ace8 <MyGame_Example_TestBase64_parse_json_table+0x354>
    ace8:	b	acec <MyGame_Example_TestBase64_parse_json_table+0x358>
    acec:	ldr	r0, [fp, #-8]
    acf0:	ldr	r1, [fp, #-12]
    acf4:	ldr	r2, [fp, #-16]
    acf8:	sub	r3, fp, #24
    acfc:	bl	c3e4 <flatcc_json_parser_object_end>
    ad00:	str	r0, [fp, #-12]
    ad04:	b	a9f0 <MyGame_Example_TestBase64_parse_json_table+0x5c>
    ad08:	ldr	r0, [fp, #-8]
    ad0c:	ldr	r0, [r0, #24]
    ad10:	cmp	r0, #0
    ad14:	beq	ad1c <MyGame_Example_TestBase64_parse_json_table+0x388>
    ad18:	b	ad48 <MyGame_Example_TestBase64_parse_json_table+0x3b4>
    ad1c:	ldr	r0, [fp, #-8]
    ad20:	ldr	r0, [r0]
    ad24:	bl	0 <flatcc_builder_end_table>
    ad28:	ldr	r1, [fp, #-20]	; 0xffffffec
    ad2c:	str	r0, [r1]
    ad30:	cmp	r0, #0
    ad34:	bne	ad3c <MyGame_Example_TestBase64_parse_json_table+0x3a8>
    ad38:	b	ad48 <MyGame_Example_TestBase64_parse_json_table+0x3b4>
    ad3c:	ldr	r0, [fp, #-12]
    ad40:	str	r0, [fp, #-4]
    ad44:	b	ad60 <MyGame_Example_TestBase64_parse_json_table+0x3cc>
    ad48:	ldr	r0, [fp, #-8]
    ad4c:	ldr	r1, [fp, #-12]
    ad50:	ldr	r2, [fp, #-16]
    ad54:	movw	r3, #33	; 0x21
    ad58:	bl	0 <flatcc_json_parser_set_error>
    ad5c:	str	r0, [fp, #-4]
    ad60:	ldr	r0, [fp, #-4]
    ad64:	mov	sp, fp
    ad68:	pop	{fp, pc}

0000ad6c <MyGame_Example_Stat_parse_json_table>:
    ad6c:	push	{fp, lr}
    ad70:	mov	fp, sp
    ad74:	sub	sp, sp, #72	; 0x48
    ad78:	str	r0, [fp, #-8]
    ad7c:	str	r1, [fp, #-12]
    ad80:	str	r2, [fp, #-16]
    ad84:	str	r3, [fp, #-20]	; 0xffffffec
    ad88:	ldr	r0, [fp, #-20]	; 0xffffffec
    ad8c:	movw	r1, #0
    ad90:	str	r1, [r0]
    ad94:	ldr	r0, [fp, #-8]
    ad98:	ldr	r0, [r0]
    ad9c:	movw	r1, #3
    ada0:	bl	0 <flatcc_builder_start_table>
    ada4:	cmp	r0, #0
    ada8:	beq	adb0 <MyGame_Example_Stat_parse_json_table+0x44>
    adac:	b	b204 <MyGame_Example_Stat_parse_json_table+0x498>
    adb0:	ldr	r0, [fp, #-8]
    adb4:	ldr	r1, [fp, #-12]
    adb8:	ldr	r2, [fp, #-16]
    adbc:	sub	r3, fp, #24
    adc0:	bl	6fa0 <flatcc_json_parser_object_start>
    adc4:	str	r0, [fp, #-12]
    adc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    adcc:	cmp	r0, #0
    add0:	beq	b1c4 <MyGame_Example_Stat_parse_json_table+0x458>
    add4:	ldr	r0, [fp, #-8]
    add8:	ldr	r1, [fp, #-12]
    addc:	ldr	r2, [fp, #-16]
    ade0:	bl	7084 <flatcc_json_parser_symbol_start>
    ade4:	str	r0, [fp, #-12]
    ade8:	ldr	r0, [fp, #-12]
    adec:	ldr	r1, [fp, #-16]
    adf0:	bl	7130 <flatcc_json_parser_symbol_part>
    adf4:	str	r1, [sp, #28]
    adf8:	str	r0, [sp, #24]
    adfc:	ldr	r0, [sp, #28]
    ae00:	movw	r1, #65535	; 0xffff
    ae04:	movt	r1, #26979	; 0x6963
    ae08:	cmp	r0, r1
    ae0c:	bhi	af80 <MyGame_Example_Stat_parse_json_table+0x214>
    ae10:	b	ae14 <MyGame_Example_Stat_parse_json_table+0xa8>
    ae14:	ldrb	r0, [sp, #27]
    ae18:	ldr	r1, [sp, #28]
    ae1c:	movw	r2, #30062	; 0x756e
    ae20:	movt	r2, #25455	; 0x636f
    ae24:	eor	r1, r1, r2
    ae28:	eor	r0, r0, #116	; 0x74
    ae2c:	orr	r0, r1, r0, lsl #24
    ae30:	cmp	r0, #0
    ae34:	bne	af68 <MyGame_Example_Stat_parse_json_table+0x1fc>
    ae38:	b	ae3c <MyGame_Example_Stat_parse_json_table+0xd0>
    ae3c:	ldr	r0, [fp, #-8]
    ae40:	ldr	r1, [fp, #-12]
    ae44:	str	r1, [sp, #32]
    ae48:	ldr	r2, [fp, #-16]
    ae4c:	movw	r3, #5
    ae50:	bl	7168 <flatcc_json_parser_match_symbol>
    ae54:	str	r0, [fp, #-12]
    ae58:	ldr	r0, [sp, #32]
    ae5c:	ldr	r1, [fp, #-12]
    ae60:	cmp	r0, r1
    ae64:	beq	af50 <MyGame_Example_Stat_parse_json_table+0x1e4>
    ae68:	movw	r0, #0
    ae6c:	strh	r0, [sp, #22]
    ae70:	ldr	r0, [fp, #-8]
    ae74:	ldr	r1, [fp, #-12]
    ae78:	str	r1, [sp, #32]
    ae7c:	ldr	r2, [fp, #-16]
    ae80:	add	r3, sp, #22
    ae84:	bl	11b10 <flatcc_json_parser_uint16>
    ae88:	str	r0, [fp, #-12]
    ae8c:	ldr	r0, [sp, #32]
    ae90:	ldr	r1, [fp, #-12]
    ae94:	cmp	r0, r1
    ae98:	bne	aeec <MyGame_Example_Stat_parse_json_table+0x180>
    ae9c:	ldr	r0, [fp, #-8]
    aea0:	ldr	r1, [fp, #-12]
    aea4:	str	r1, [sp, #32]
    aea8:	ldr	r2, [fp, #-16]
    aeac:	movw	r3, #0
    aeb0:	movt	r3, #0
    aeb4:	add	ip, sp, #22
    aeb8:	str	ip, [sp]
    aebc:	bl	11bec <flatcc_json_parser_symbolic_uint16>
    aec0:	str	r0, [fp, #-12]
    aec4:	ldr	r0, [fp, #-12]
    aec8:	ldr	r1, [sp, #32]
    aecc:	cmp	r0, r1
    aed0:	beq	aee4 <MyGame_Example_Stat_parse_json_table+0x178>
    aed4:	ldr	r0, [fp, #-12]
    aed8:	ldr	r1, [fp, #-16]
    aedc:	cmp	r0, r1
    aee0:	bne	aee8 <MyGame_Example_Stat_parse_json_table+0x17c>
    aee4:	b	b204 <MyGame_Example_Stat_parse_json_table+0x498>
    aee8:	b	aeec <MyGame_Example_Stat_parse_json_table+0x180>
    aeec:	ldrh	r0, [sp, #22]
    aef0:	cmp	r0, #0
    aef4:	bne	af0c <MyGame_Example_Stat_parse_json_table+0x1a0>
    aef8:	ldr	r0, [fp, #-8]
    aefc:	ldr	r0, [r0, #8]
    af00:	and	r0, r0, #2
    af04:	cmp	r0, #0
    af08:	beq	af4c <MyGame_Example_Stat_parse_json_table+0x1e0>
    af0c:	ldr	r0, [fp, #-8]
    af10:	ldr	r0, [r0]
    af14:	movw	r1, #2
    af18:	str	r1, [sp, #4]
    af1c:	ldr	r2, [sp, #4]
    af20:	movw	r3, #2
    af24:	uxth	r3, r3
    af28:	bl	0 <flatcc_builder_table_add>
    af2c:	str	r0, [fp, #-28]	; 0xffffffe4
    af30:	movw	r1, #0
    af34:	cmp	r0, r1
    af38:	bne	af40 <MyGame_Example_Stat_parse_json_table+0x1d4>
    af3c:	b	b204 <MyGame_Example_Stat_parse_json_table+0x498>
    af40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    af44:	ldrh	r1, [sp, #22]
    af48:	bl	11e18 <flatbuffers_uint16_write_to_pe>
    af4c:	b	af64 <MyGame_Example_Stat_parse_json_table+0x1f8>
    af50:	ldr	r0, [fp, #-8]
    af54:	ldr	r1, [fp, #-12]
    af58:	ldr	r2, [fp, #-16]
    af5c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    af60:	str	r0, [fp, #-12]
    af64:	b	af7c <MyGame_Example_Stat_parse_json_table+0x210>
    af68:	ldr	r0, [fp, #-8]
    af6c:	ldr	r1, [fp, #-12]
    af70:	ldr	r2, [fp, #-16]
    af74:	bl	0 <flatcc_json_parser_unmatched_symbol>
    af78:	str	r0, [fp, #-12]
    af7c:	b	b1a8 <MyGame_Example_Stat_parse_json_table+0x43c>
    af80:	ldr	r0, [sp, #28]
    af84:	bic	r0, r0, #255	; 0xff
    af88:	movw	r1, #27648	; 0x6c00
    af8c:	movt	r1, #30305	; 0x7661
    af90:	teq	r0, r1
    af94:	bne	b0d8 <MyGame_Example_Stat_parse_json_table+0x36c>
    af98:	b	af9c <MyGame_Example_Stat_parse_json_table+0x230>
    af9c:	ldr	r0, [fp, #-8]
    afa0:	ldr	r1, [fp, #-12]
    afa4:	str	r1, [sp, #32]
    afa8:	ldr	r2, [fp, #-16]
    afac:	movw	r3, #3
    afb0:	bl	7168 <flatcc_json_parser_match_symbol>
    afb4:	str	r0, [fp, #-12]
    afb8:	ldr	r0, [sp, #32]
    afbc:	ldr	r1, [fp, #-12]
    afc0:	cmp	r0, r1
    afc4:	beq	b0c0 <MyGame_Example_Stat_parse_json_table+0x354>
    afc8:	mov	r0, #0
    afcc:	str	r0, [sp, #12]
    afd0:	str	r0, [sp, #8]
    afd4:	ldr	r0, [fp, #-8]
    afd8:	ldr	r1, [fp, #-12]
    afdc:	str	r1, [sp, #32]
    afe0:	ldr	r2, [fp, #-16]
    afe4:	add	r3, sp, #8
    afe8:	bl	b7b0 <flatcc_json_parser_int64>
    afec:	str	r0, [fp, #-12]
    aff0:	ldr	r0, [sp, #32]
    aff4:	ldr	r1, [fp, #-12]
    aff8:	cmp	r0, r1
    affc:	bne	b050 <MyGame_Example_Stat_parse_json_table+0x2e4>
    b000:	ldr	r0, [fp, #-8]
    b004:	ldr	r1, [fp, #-12]
    b008:	str	r1, [sp, #32]
    b00c:	ldr	r2, [fp, #-16]
    b010:	movw	r3, #0
    b014:	movt	r3, #0
    b018:	add	ip, sp, #8
    b01c:	str	ip, [sp]
    b020:	bl	b888 <flatcc_json_parser_symbolic_int64>
    b024:	str	r0, [fp, #-12]
    b028:	ldr	r0, [fp, #-12]
    b02c:	ldr	r1, [sp, #32]
    b030:	cmp	r0, r1
    b034:	beq	b048 <MyGame_Example_Stat_parse_json_table+0x2dc>
    b038:	ldr	r0, [fp, #-12]
    b03c:	ldr	r1, [fp, #-16]
    b040:	cmp	r0, r1
    b044:	bne	b04c <MyGame_Example_Stat_parse_json_table+0x2e0>
    b048:	b	b204 <MyGame_Example_Stat_parse_json_table+0x498>
    b04c:	b	b050 <MyGame_Example_Stat_parse_json_table+0x2e4>
    b050:	ldr	r0, [sp, #8]
    b054:	ldr	r1, [sp, #12]
    b058:	orr	r0, r0, r1
    b05c:	cmp	r0, #0
    b060:	bne	b07c <MyGame_Example_Stat_parse_json_table+0x310>
    b064:	b	b068 <MyGame_Example_Stat_parse_json_table+0x2fc>
    b068:	ldr	r0, [fp, #-8]
    b06c:	ldr	r0, [r0, #8]
    b070:	and	r0, r0, #2
    b074:	cmp	r0, #0
    b078:	beq	b0bc <MyGame_Example_Stat_parse_json_table+0x350>
    b07c:	ldr	r0, [fp, #-8]
    b080:	ldr	r0, [r0]
    b084:	movw	r1, #1
    b088:	movw	r2, #8
    b08c:	movw	r3, #8
    b090:	uxth	r3, r3
    b094:	bl	0 <flatcc_builder_table_add>
    b098:	str	r0, [fp, #-28]	; 0xffffffe4
    b09c:	movw	r1, #0
    b0a0:	cmp	r0, r1
    b0a4:	bne	b0ac <MyGame_Example_Stat_parse_json_table+0x340>
    b0a8:	b	b204 <MyGame_Example_Stat_parse_json_table+0x498>
    b0ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b0b0:	ldr	r2, [sp, #8]
    b0b4:	ldr	r3, [sp, #12]
    b0b8:	bl	bac8 <flatbuffers_int64_write_to_pe>
    b0bc:	b	b0d4 <MyGame_Example_Stat_parse_json_table+0x368>
    b0c0:	ldr	r0, [fp, #-8]
    b0c4:	ldr	r1, [fp, #-12]
    b0c8:	ldr	r2, [fp, #-16]
    b0cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b0d0:	str	r0, [fp, #-12]
    b0d4:	b	b1a4 <MyGame_Example_Stat_parse_json_table+0x438>
    b0d8:	ldrh	r0, [sp, #30]
    b0dc:	movw	r1, #0
    b0e0:	movt	r1, #26980	; 0x6964
    b0e4:	teq	r1, r0, lsl #16
    b0e8:	bne	b18c <MyGame_Example_Stat_parse_json_table+0x420>
    b0ec:	b	b0f0 <MyGame_Example_Stat_parse_json_table+0x384>
    b0f0:	ldr	r0, [fp, #-8]
    b0f4:	ldr	r1, [fp, #-12]
    b0f8:	str	r1, [sp, #32]
    b0fc:	ldr	r2, [fp, #-16]
    b100:	movw	r3, #2
    b104:	bl	7168 <flatcc_json_parser_match_symbol>
    b108:	str	r0, [fp, #-12]
    b10c:	ldr	r0, [sp, #32]
    b110:	ldr	r1, [fp, #-12]
    b114:	cmp	r0, r1
    b118:	beq	b174 <MyGame_Example_Stat_parse_json_table+0x408>
    b11c:	ldr	r0, [fp, #-8]
    b120:	ldr	r1, [fp, #-12]
    b124:	ldr	r2, [fp, #-16]
    b128:	sub	r3, fp, #32
    b12c:	bl	0 <flatcc_json_parser_build_string>
    b130:	str	r0, [fp, #-12]
    b134:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b138:	cmp	r0, #0
    b13c:	beq	b160 <MyGame_Example_Stat_parse_json_table+0x3f4>
    b140:	ldr	r0, [fp, #-8]
    b144:	ldr	r0, [r0]
    b148:	movw	r1, #0
    b14c:	bl	0 <flatcc_builder_table_add_offset>
    b150:	str	r0, [sp, #36]	; 0x24
    b154:	movw	r1, #0
    b158:	cmp	r0, r1
    b15c:	bne	b164 <MyGame_Example_Stat_parse_json_table+0x3f8>
    b160:	b	b204 <MyGame_Example_Stat_parse_json_table+0x498>
    b164:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b168:	ldr	r1, [sp, #36]	; 0x24
    b16c:	str	r0, [r1]
    b170:	b	b188 <MyGame_Example_Stat_parse_json_table+0x41c>
    b174:	ldr	r0, [fp, #-8]
    b178:	ldr	r1, [fp, #-12]
    b17c:	ldr	r2, [fp, #-16]
    b180:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b184:	str	r0, [fp, #-12]
    b188:	b	b1a0 <MyGame_Example_Stat_parse_json_table+0x434>
    b18c:	ldr	r0, [fp, #-8]
    b190:	ldr	r1, [fp, #-12]
    b194:	ldr	r2, [fp, #-16]
    b198:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b19c:	str	r0, [fp, #-12]
    b1a0:	b	b1a4 <MyGame_Example_Stat_parse_json_table+0x438>
    b1a4:	b	b1a8 <MyGame_Example_Stat_parse_json_table+0x43c>
    b1a8:	ldr	r0, [fp, #-8]
    b1ac:	ldr	r1, [fp, #-12]
    b1b0:	ldr	r2, [fp, #-16]
    b1b4:	sub	r3, fp, #24
    b1b8:	bl	c3e4 <flatcc_json_parser_object_end>
    b1bc:	str	r0, [fp, #-12]
    b1c0:	b	adc8 <MyGame_Example_Stat_parse_json_table+0x5c>
    b1c4:	ldr	r0, [fp, #-8]
    b1c8:	ldr	r0, [r0, #24]
    b1cc:	cmp	r0, #0
    b1d0:	beq	b1d8 <MyGame_Example_Stat_parse_json_table+0x46c>
    b1d4:	b	b204 <MyGame_Example_Stat_parse_json_table+0x498>
    b1d8:	ldr	r0, [fp, #-8]
    b1dc:	ldr	r0, [r0]
    b1e0:	bl	0 <flatcc_builder_end_table>
    b1e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    b1e8:	str	r0, [r1]
    b1ec:	cmp	r0, #0
    b1f0:	bne	b1f8 <MyGame_Example_Stat_parse_json_table+0x48c>
    b1f4:	b	b204 <MyGame_Example_Stat_parse_json_table+0x498>
    b1f8:	ldr	r0, [fp, #-12]
    b1fc:	str	r0, [fp, #-4]
    b200:	b	b21c <MyGame_Example_Stat_parse_json_table+0x4b0>
    b204:	ldr	r0, [fp, #-8]
    b208:	ldr	r1, [fp, #-12]
    b20c:	ldr	r2, [fp, #-16]
    b210:	movw	r3, #33	; 0x21
    b214:	bl	0 <flatcc_json_parser_set_error>
    b218:	str	r0, [fp, #-4]
    b21c:	ldr	r0, [fp, #-4]
    b220:	mov	sp, fp
    b224:	pop	{fp, pc}

0000b228 <flatcc_json_parser_symbolic_float>:
    b228:	push	{r4, r5, r6, sl, fp, lr}
    b22c:	add	fp, sp, #16
    b230:	sub	sp, sp, #88	; 0x58
    b234:	ldr	ip, [fp, #8]
    b238:	vldr	s0, [pc, #532]	; b454 <flatcc_json_parser_symbolic_float+0x22c>
    b23c:	str	r0, [fp, #-24]	; 0xffffffe8
    b240:	str	r1, [fp, #-28]	; 0xffffffe4
    b244:	str	r2, [fp, #-32]	; 0xffffffe0
    b248:	str	r3, [fp, #-36]	; 0xffffffdc
    b24c:	vstr	s0, [fp, #-48]	; 0xffffffd0
    b250:	movw	r0, #0
    b254:	str	r0, [sp, #36]	; 0x24
    b258:	ldr	r0, [fp, #8]
    b25c:	vstr	s0, [r0]
    b260:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b264:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b268:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b26c:	str	ip, [sp, #32]
    b270:	bl	db28 <flatcc_json_parser_constant_start>
    b274:	str	r0, [fp, #-28]	; 0xffffffe4
    b278:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b27c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b280:	cmp	r0, r1
    b284:	bne	b294 <flatcc_json_parser_symbolic_float+0x6c>
    b288:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b28c:	str	r0, [fp, #-20]	; 0xffffffec
    b290:	b	b448 <flatcc_json_parser_symbolic_float+0x220>
    b294:	b	b298 <flatcc_json_parser_symbolic_float+0x70>
    b298:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b29c:	str	r0, [fp, #-40]	; 0xffffffd8
    b2a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b2a4:	ldr	r0, [r0]
    b2a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b2ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b2b0:	str	r2, [fp, #-44]	; 0xffffffd4
    b2b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b2b8:	str	r0, [sp, #28]
    b2bc:	mov	r0, r1
    b2c0:	mov	r1, r2
    b2c4:	mov	r2, r3
    b2c8:	add	r3, sp, #44	; 0x2c
    b2cc:	add	ip, sp, #48	; 0x30
    b2d0:	str	ip, [sp]
    b2d4:	add	ip, sp, #40	; 0x28
    b2d8:	str	ip, [sp, #4]
    b2dc:	ldr	ip, [sp, #28]
    b2e0:	blx	ip
    b2e4:	str	r0, [fp, #-28]	; 0xffffffe4
    b2e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b2ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b2f0:	cmp	r0, r1
    b2f4:	bne	b304 <flatcc_json_parser_symbolic_float+0xdc>
    b2f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b2fc:	str	r0, [fp, #-20]	; 0xffffffec
    b300:	b	b448 <flatcc_json_parser_symbolic_float+0x220>
    b304:	b	b308 <flatcc_json_parser_symbolic_float+0xe0>
    b308:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b30c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    b310:	cmp	r0, r1
    b314:	movw	r0, #0
    b318:	str	r0, [sp, #24]
    b31c:	bne	b344 <flatcc_json_parser_symbolic_float+0x11c>
    b320:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b324:	add	r1, r0, #4
    b328:	str	r1, [fp, #-40]	; 0xffffffd8
    b32c:	ldr	r0, [r0, #4]
    b330:	movw	r1, #0
    b334:	cmp	r0, r1
    b338:	movw	r0, #0
    b33c:	movne	r0, #1
    b340:	str	r0, [sp, #24]
    b344:	ldr	r0, [sp, #24]
    b348:	tst	r0, #1
    b34c:	bne	b2a0 <flatcc_json_parser_symbolic_float+0x78>
    b350:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b354:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b358:	cmp	r0, r1
    b35c:	bne	b37c <flatcc_json_parser_symbolic_float+0x154>
    b360:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b364:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b368:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b36c:	movw	r3, #23
    b370:	bl	0 <flatcc_json_parser_set_error>
    b374:	str	r0, [fp, #-20]	; 0xffffffec
    b378:	b	b448 <flatcc_json_parser_symbolic_float+0x220>
    b37c:	ldr	r0, [sp, #36]	; 0x24
    b380:	add	r1, r0, #1
    b384:	str	r1, [sp, #36]	; 0x24
    b388:	cmp	r0, #0
    b38c:	beq	b3bc <flatcc_json_parser_symbolic_float+0x194>
    b390:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b394:	ldr	r0, [r0, #12]
    b398:	cmp	r0, #0
    b39c:	beq	b3bc <flatcc_json_parser_symbolic_float+0x194>
    b3a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b3a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b3a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b3ac:	movw	r3, #14
    b3b0:	bl	0 <flatcc_json_parser_set_error>
    b3b4:	str	r0, [fp, #-20]	; 0xffffffec
    b3b8:	b	b448 <flatcc_json_parser_symbolic_float+0x220>
    b3bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b3c0:	mov	r1, r0
    b3c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b3c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b3cc:	ldr	ip, [sp, #44]	; 0x2c
    b3d0:	ldr	lr, [sp, #48]	; 0x30
    b3d4:	ldr	r4, [sp, #52]	; 0x34
    b3d8:	mov	r5, sp
    b3dc:	sub	r6, fp, #48	; 0x30
    b3e0:	str	r6, [r5, #8]
    b3e4:	str	r4, [r5, #4]
    b3e8:	str	lr, [r5]
    b3ec:	str	r0, [sp, #20]
    b3f0:	mov	r0, r2
    b3f4:	str	r1, [sp, #16]
    b3f8:	mov	r1, r3
    b3fc:	ldr	r2, [sp, #20]
    b400:	mov	r3, ip
    b404:	bl	121dc <flatcc_json_parser_coerce_float>
    b408:	ldr	r1, [sp, #16]
    b40c:	cmp	r1, r0
    b410:	bne	b420 <flatcc_json_parser_symbolic_float+0x1f8>
    b414:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b418:	str	r0, [fp, #-20]	; 0xffffffec
    b41c:	b	b448 <flatcc_json_parser_symbolic_float+0x220>
    b420:	vldr	s0, [fp, #-48]	; 0xffffffd0
    b424:	ldr	r0, [fp, #8]
    b428:	vldr	s2, [r0]
    b42c:	vadd.f32	s0, s2, s0
    b430:	vstr	s0, [r0]
    b434:	ldr	r0, [sp, #40]	; 0x28
    b438:	cmp	r0, #0
    b43c:	bne	b298 <flatcc_json_parser_symbolic_float+0x70>
    b440:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b444:	str	r0, [fp, #-20]	; 0xffffffec
    b448:	ldr	r0, [fp, #-20]	; 0xffffffec
    b44c:	sub	sp, fp, #16
    b450:	pop	{r4, r5, r6, sl, fp, pc}
    b454:	.word	0x00000000

0000b458 <flatbuffers_float_write_to_pe>:
    b458:	push	{fp, lr}
    b45c:	mov	fp, sp
    b460:	sub	sp, sp, #8
    b464:	str	r0, [sp, #4]
    b468:	vstr	s0, [sp]
    b46c:	vldr	s0, [sp]
    b470:	bl	12260 <flatbuffers_float_cast_to_pe>
    b474:	ldr	r0, [sp, #4]
    b478:	vstr	s0, [r0]
    b47c:	mov	sp, fp
    b480:	pop	{fp, pc}

0000b484 <flatcc_json_parser_int32>:
    b484:	push	{r4, r5, fp, lr}
    b488:	add	fp, sp, #8
    b48c:	sub	sp, sp, #56	; 0x38
    b490:	str	r0, [fp, #-16]
    b494:	str	r1, [fp, #-20]	; 0xffffffec
    b498:	str	r2, [fp, #-24]	; 0xffffffe8
    b49c:	str	r3, [fp, #-28]	; 0xffffffe4
    b4a0:	mov	r0, #0
    b4a4:	str	r0, [sp, #28]
    b4a8:	str	r0, [sp, #24]
    b4ac:	movw	r0, #0
    b4b0:	str	r0, [sp, #20]
    b4b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    b4b8:	str	r1, [sp, #16]
    b4bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b4c0:	str	r0, [r1]
    b4c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    b4c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b4cc:	cmp	r0, r1
    b4d0:	bne	b4e0 <flatcc_json_parser_int32+0x5c>
    b4d4:	ldr	r0, [fp, #-20]	; 0xffffffec
    b4d8:	str	r0, [fp, #-12]
    b4dc:	b	b550 <flatcc_json_parser_int32+0xcc>
    b4e0:	ldr	r0, [fp, #-16]
    b4e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    b4e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b4ec:	add	r3, sp, #20
    b4f0:	add	ip, sp, #24
    b4f4:	str	ip, [sp]
    b4f8:	bl	0 <flatcc_json_parser_integer>
    b4fc:	str	r0, [fp, #-20]	; 0xffffffec
    b500:	ldr	r0, [fp, #-20]	; 0xffffffec
    b504:	ldr	r1, [sp, #16]
    b508:	cmp	r0, r1
    b50c:	beq	b548 <flatcc_json_parser_int32+0xc4>
    b510:	ldr	r0, [fp, #-16]
    b514:	ldr	r1, [fp, #-20]	; 0xffffffec
    b518:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b51c:	ldr	r3, [sp, #20]
    b520:	ldr	ip, [sp, #24]
    b524:	ldr	lr, [sp, #28]
    b528:	ldr	r4, [fp, #-28]	; 0xffffffe4
    b52c:	mov	r5, sp
    b530:	str	r4, [r5, #8]
    b534:	str	lr, [r5, #4]
    b538:	str	ip, [r5]
    b53c:	bl	12284 <flatcc_json_parser_coerce_int32>
    b540:	str	r0, [fp, #-12]
    b544:	b	b550 <flatcc_json_parser_int32+0xcc>
    b548:	ldr	r0, [fp, #-20]	; 0xffffffec
    b54c:	str	r0, [fp, #-12]
    b550:	ldr	r0, [fp, #-12]
    b554:	sub	sp, fp, #8
    b558:	pop	{r4, r5, fp, pc}

0000b55c <flatcc_json_parser_symbolic_int32>:
    b55c:	push	{r4, r5, r6, sl, fp, lr}
    b560:	add	fp, sp, #16
    b564:	sub	sp, sp, #88	; 0x58
    b568:	ldr	ip, [fp, #8]
    b56c:	str	r0, [fp, #-24]	; 0xffffffe8
    b570:	str	r1, [fp, #-28]	; 0xffffffe4
    b574:	str	r2, [fp, #-32]	; 0xffffffe0
    b578:	str	r3, [fp, #-36]	; 0xffffffdc
    b57c:	movw	r0, #0
    b580:	str	r0, [fp, #-48]	; 0xffffffd0
    b584:	str	r0, [sp, #36]	; 0x24
    b588:	ldr	r1, [fp, #8]
    b58c:	str	r0, [r1]
    b590:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b594:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b598:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b59c:	str	ip, [sp, #32]
    b5a0:	bl	db28 <flatcc_json_parser_constant_start>
    b5a4:	str	r0, [fp, #-28]	; 0xffffffe4
    b5a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b5ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b5b0:	cmp	r0, r1
    b5b4:	bne	b5c4 <flatcc_json_parser_symbolic_int32+0x68>
    b5b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b5bc:	str	r0, [fp, #-20]	; 0xffffffec
    b5c0:	b	b778 <flatcc_json_parser_symbolic_int32+0x21c>
    b5c4:	b	b5c8 <flatcc_json_parser_symbolic_int32+0x6c>
    b5c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b5cc:	str	r0, [fp, #-40]	; 0xffffffd8
    b5d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b5d4:	ldr	r0, [r0]
    b5d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b5dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b5e0:	str	r2, [fp, #-44]	; 0xffffffd4
    b5e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b5e8:	str	r0, [sp, #28]
    b5ec:	mov	r0, r1
    b5f0:	mov	r1, r2
    b5f4:	mov	r2, r3
    b5f8:	add	r3, sp, #44	; 0x2c
    b5fc:	add	ip, sp, #48	; 0x30
    b600:	str	ip, [sp]
    b604:	add	ip, sp, #40	; 0x28
    b608:	str	ip, [sp, #4]
    b60c:	ldr	ip, [sp, #28]
    b610:	blx	ip
    b614:	str	r0, [fp, #-28]	; 0xffffffe4
    b618:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b61c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b620:	cmp	r0, r1
    b624:	bne	b634 <flatcc_json_parser_symbolic_int32+0xd8>
    b628:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b62c:	str	r0, [fp, #-20]	; 0xffffffec
    b630:	b	b778 <flatcc_json_parser_symbolic_int32+0x21c>
    b634:	b	b638 <flatcc_json_parser_symbolic_int32+0xdc>
    b638:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b63c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    b640:	cmp	r0, r1
    b644:	movw	r0, #0
    b648:	str	r0, [sp, #24]
    b64c:	bne	b674 <flatcc_json_parser_symbolic_int32+0x118>
    b650:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b654:	add	r1, r0, #4
    b658:	str	r1, [fp, #-40]	; 0xffffffd8
    b65c:	ldr	r0, [r0, #4]
    b660:	movw	r1, #0
    b664:	cmp	r0, r1
    b668:	movw	r0, #0
    b66c:	movne	r0, #1
    b670:	str	r0, [sp, #24]
    b674:	ldr	r0, [sp, #24]
    b678:	tst	r0, #1
    b67c:	bne	b5d0 <flatcc_json_parser_symbolic_int32+0x74>
    b680:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b684:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b688:	cmp	r0, r1
    b68c:	bne	b6ac <flatcc_json_parser_symbolic_int32+0x150>
    b690:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b694:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b698:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b69c:	movw	r3, #23
    b6a0:	bl	0 <flatcc_json_parser_set_error>
    b6a4:	str	r0, [fp, #-20]	; 0xffffffec
    b6a8:	b	b778 <flatcc_json_parser_symbolic_int32+0x21c>
    b6ac:	ldr	r0, [sp, #36]	; 0x24
    b6b0:	add	r1, r0, #1
    b6b4:	str	r1, [sp, #36]	; 0x24
    b6b8:	cmp	r0, #0
    b6bc:	beq	b6ec <flatcc_json_parser_symbolic_int32+0x190>
    b6c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b6c4:	ldr	r0, [r0, #12]
    b6c8:	cmp	r0, #0
    b6cc:	beq	b6ec <flatcc_json_parser_symbolic_int32+0x190>
    b6d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b6d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b6d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b6dc:	movw	r3, #14
    b6e0:	bl	0 <flatcc_json_parser_set_error>
    b6e4:	str	r0, [fp, #-20]	; 0xffffffec
    b6e8:	b	b778 <flatcc_json_parser_symbolic_int32+0x21c>
    b6ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b6f0:	mov	r1, r0
    b6f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b6f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b6fc:	ldr	ip, [sp, #44]	; 0x2c
    b700:	ldr	lr, [sp, #48]	; 0x30
    b704:	ldr	r4, [sp, #52]	; 0x34
    b708:	mov	r5, sp
    b70c:	sub	r6, fp, #48	; 0x30
    b710:	str	r6, [r5, #8]
    b714:	str	r4, [r5, #4]
    b718:	str	lr, [r5]
    b71c:	str	r0, [sp, #20]
    b720:	mov	r0, r2
    b724:	str	r1, [sp, #16]
    b728:	mov	r1, r3
    b72c:	ldr	r2, [sp, #20]
    b730:	mov	r3, ip
    b734:	bl	12284 <flatcc_json_parser_coerce_int32>
    b738:	ldr	r1, [sp, #16]
    b73c:	cmp	r1, r0
    b740:	bne	b750 <flatcc_json_parser_symbolic_int32+0x1f4>
    b744:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b748:	str	r0, [fp, #-20]	; 0xffffffec
    b74c:	b	b778 <flatcc_json_parser_symbolic_int32+0x21c>
    b750:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b754:	ldr	r1, [fp, #8]
    b758:	ldr	r2, [r1]
    b75c:	add	r0, r2, r0
    b760:	str	r0, [r1]
    b764:	ldr	r0, [sp, #40]	; 0x28
    b768:	cmp	r0, #0
    b76c:	bne	b5c8 <flatcc_json_parser_symbolic_int32+0x6c>
    b770:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b774:	str	r0, [fp, #-20]	; 0xffffffec
    b778:	ldr	r0, [fp, #-20]	; 0xffffffec
    b77c:	sub	sp, fp, #16
    b780:	pop	{r4, r5, r6, sl, fp, pc}

0000b784 <flatbuffers_int32_write_to_pe>:
    b784:	push	{fp, lr}
    b788:	mov	fp, sp
    b78c:	sub	sp, sp, #8
    b790:	str	r0, [sp, #4]
    b794:	str	r1, [sp]
    b798:	ldr	r0, [sp]
    b79c:	bl	1235c <flatbuffers_int32_cast_to_pe>
    b7a0:	ldr	r1, [sp, #4]
    b7a4:	str	r0, [r1]
    b7a8:	mov	sp, fp
    b7ac:	pop	{fp, pc}

0000b7b0 <flatcc_json_parser_int64>:
    b7b0:	push	{r4, r5, fp, lr}
    b7b4:	add	fp, sp, #8
    b7b8:	sub	sp, sp, #56	; 0x38
    b7bc:	str	r0, [fp, #-16]
    b7c0:	str	r1, [fp, #-20]	; 0xffffffec
    b7c4:	str	r2, [fp, #-24]	; 0xffffffe8
    b7c8:	str	r3, [fp, #-28]	; 0xffffffe4
    b7cc:	mov	r0, #0
    b7d0:	str	r0, [sp, #28]
    b7d4:	str	r0, [sp, #24]
    b7d8:	str	r0, [sp, #20]
    b7dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    b7e0:	str	r1, [sp, #16]
    b7e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b7e8:	str	r0, [r1, #4]
    b7ec:	str	r0, [r1]
    b7f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    b7f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b7f8:	cmp	r0, r1
    b7fc:	bne	b80c <flatcc_json_parser_int64+0x5c>
    b800:	ldr	r0, [fp, #-20]	; 0xffffffec
    b804:	str	r0, [fp, #-12]
    b808:	b	b87c <flatcc_json_parser_int64+0xcc>
    b80c:	ldr	r0, [fp, #-16]
    b810:	ldr	r1, [fp, #-20]	; 0xffffffec
    b814:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b818:	add	r3, sp, #20
    b81c:	add	ip, sp, #24
    b820:	str	ip, [sp]
    b824:	bl	0 <flatcc_json_parser_integer>
    b828:	str	r0, [fp, #-20]	; 0xffffffec
    b82c:	ldr	r0, [fp, #-20]	; 0xffffffec
    b830:	ldr	r1, [sp, #16]
    b834:	cmp	r0, r1
    b838:	beq	b874 <flatcc_json_parser_int64+0xc4>
    b83c:	ldr	r0, [fp, #-16]
    b840:	ldr	r1, [fp, #-20]	; 0xffffffec
    b844:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b848:	ldr	r3, [sp, #20]
    b84c:	ldr	ip, [sp, #24]
    b850:	ldr	lr, [sp, #28]
    b854:	ldr	r4, [fp, #-28]	; 0xffffffe4
    b858:	mov	r5, sp
    b85c:	str	r4, [r5, #8]
    b860:	str	lr, [r5, #4]
    b864:	str	ip, [r5]
    b868:	bl	12370 <flatcc_json_parser_coerce_int64>
    b86c:	str	r0, [fp, #-12]
    b870:	b	b87c <flatcc_json_parser_int64+0xcc>
    b874:	ldr	r0, [fp, #-20]	; 0xffffffec
    b878:	str	r0, [fp, #-12]
    b87c:	ldr	r0, [fp, #-12]
    b880:	sub	sp, fp, #8
    b884:	pop	{r4, r5, fp, pc}

0000b888 <flatcc_json_parser_symbolic_int64>:
    b888:	push	{r4, r5, r6, sl, fp, lr}
    b88c:	add	fp, sp, #16
    b890:	sub	sp, sp, #96	; 0x60
    b894:	ldr	ip, [fp, #8]
    b898:	str	r0, [fp, #-24]	; 0xffffffe8
    b89c:	str	r1, [fp, #-28]	; 0xffffffe4
    b8a0:	str	r2, [fp, #-32]	; 0xffffffe0
    b8a4:	str	r3, [fp, #-36]	; 0xffffffdc
    b8a8:	mov	r0, #0
    b8ac:	str	r0, [sp, #60]	; 0x3c
    b8b0:	str	r0, [sp, #56]	; 0x38
    b8b4:	str	r0, [sp, #36]	; 0x24
    b8b8:	ldr	r1, [fp, #8]
    b8bc:	str	r0, [r1, #4]
    b8c0:	str	r0, [r1]
    b8c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b8c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b8cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b8d0:	str	ip, [sp, #32]
    b8d4:	bl	db28 <flatcc_json_parser_constant_start>
    b8d8:	str	r0, [fp, #-28]	; 0xffffffe4
    b8dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b8e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b8e4:	cmp	r0, r1
    b8e8:	bne	b8f8 <flatcc_json_parser_symbolic_int64+0x70>
    b8ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b8f0:	str	r0, [fp, #-20]	; 0xffffffec
    b8f4:	b	babc <flatcc_json_parser_symbolic_int64+0x234>
    b8f8:	b	b8fc <flatcc_json_parser_symbolic_int64+0x74>
    b8fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b900:	str	r0, [fp, #-40]	; 0xffffffd8
    b904:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b908:	ldr	r0, [r0]
    b90c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b910:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b914:	str	r2, [fp, #-44]	; 0xffffffd4
    b918:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b91c:	str	r0, [sp, #28]
    b920:	mov	r0, r1
    b924:	mov	r1, r2
    b928:	mov	r2, r3
    b92c:	add	r3, sp, #44	; 0x2c
    b930:	add	ip, sp, #48	; 0x30
    b934:	str	ip, [sp]
    b938:	add	ip, sp, #40	; 0x28
    b93c:	str	ip, [sp, #4]
    b940:	ldr	ip, [sp, #28]
    b944:	blx	ip
    b948:	str	r0, [fp, #-28]	; 0xffffffe4
    b94c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b950:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b954:	cmp	r0, r1
    b958:	bne	b968 <flatcc_json_parser_symbolic_int64+0xe0>
    b95c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b960:	str	r0, [fp, #-20]	; 0xffffffec
    b964:	b	babc <flatcc_json_parser_symbolic_int64+0x234>
    b968:	b	b96c <flatcc_json_parser_symbolic_int64+0xe4>
    b96c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b970:	ldr	r1, [fp, #-44]	; 0xffffffd4
    b974:	cmp	r0, r1
    b978:	movw	r0, #0
    b97c:	str	r0, [sp, #24]
    b980:	bne	b9a8 <flatcc_json_parser_symbolic_int64+0x120>
    b984:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b988:	add	r1, r0, #4
    b98c:	str	r1, [fp, #-40]	; 0xffffffd8
    b990:	ldr	r0, [r0, #4]
    b994:	movw	r1, #0
    b998:	cmp	r0, r1
    b99c:	movw	r0, #0
    b9a0:	movne	r0, #1
    b9a4:	str	r0, [sp, #24]
    b9a8:	ldr	r0, [sp, #24]
    b9ac:	tst	r0, #1
    b9b0:	bne	b904 <flatcc_json_parser_symbolic_int64+0x7c>
    b9b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b9b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b9bc:	cmp	r0, r1
    b9c0:	bne	b9e0 <flatcc_json_parser_symbolic_int64+0x158>
    b9c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b9c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b9cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b9d0:	movw	r3, #23
    b9d4:	bl	0 <flatcc_json_parser_set_error>
    b9d8:	str	r0, [fp, #-20]	; 0xffffffec
    b9dc:	b	babc <flatcc_json_parser_symbolic_int64+0x234>
    b9e0:	ldr	r0, [sp, #36]	; 0x24
    b9e4:	add	r1, r0, #1
    b9e8:	str	r1, [sp, #36]	; 0x24
    b9ec:	cmp	r0, #0
    b9f0:	beq	ba20 <flatcc_json_parser_symbolic_int64+0x198>
    b9f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b9f8:	ldr	r0, [r0, #12]
    b9fc:	cmp	r0, #0
    ba00:	beq	ba20 <flatcc_json_parser_symbolic_int64+0x198>
    ba04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ba08:	ldr	r1, [fp, #-28]	; 0xffffffe4
    ba0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ba10:	movw	r3, #14
    ba14:	bl	0 <flatcc_json_parser_set_error>
    ba18:	str	r0, [fp, #-20]	; 0xffffffec
    ba1c:	b	babc <flatcc_json_parser_symbolic_int64+0x234>
    ba20:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ba24:	mov	r1, r0
    ba28:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ba2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ba30:	ldr	ip, [sp, #44]	; 0x2c
    ba34:	ldr	lr, [sp, #48]	; 0x30
    ba38:	ldr	r4, [sp, #52]	; 0x34
    ba3c:	mov	r5, sp
    ba40:	add	r6, sp, #56	; 0x38
    ba44:	str	r6, [r5, #8]
    ba48:	str	r4, [r5, #4]
    ba4c:	str	lr, [r5]
    ba50:	str	r0, [sp, #20]
    ba54:	mov	r0, r2
    ba58:	str	r1, [sp, #16]
    ba5c:	mov	r1, r3
    ba60:	ldr	r2, [sp, #20]
    ba64:	mov	r3, ip
    ba68:	bl	12370 <flatcc_json_parser_coerce_int64>
    ba6c:	ldr	r1, [sp, #16]
    ba70:	cmp	r1, r0
    ba74:	bne	ba84 <flatcc_json_parser_symbolic_int64+0x1fc>
    ba78:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ba7c:	str	r0, [fp, #-20]	; 0xffffffec
    ba80:	b	babc <flatcc_json_parser_symbolic_int64+0x234>
    ba84:	ldr	r0, [sp, #56]	; 0x38
    ba88:	ldr	r1, [sp, #60]	; 0x3c
    ba8c:	ldr	r2, [fp, #8]
    ba90:	ldr	r3, [r2]
    ba94:	ldr	ip, [r2, #4]
    ba98:	adds	r0, r3, r0
    ba9c:	adc	r1, ip, r1
    baa0:	str	r0, [r2]
    baa4:	str	r1, [r2, #4]
    baa8:	ldr	r0, [sp, #40]	; 0x28
    baac:	cmp	r0, #0
    bab0:	bne	b8fc <flatcc_json_parser_symbolic_int64+0x74>
    bab4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bab8:	str	r0, [fp, #-20]	; 0xffffffec
    babc:	ldr	r0, [fp, #-20]	; 0xffffffec
    bac0:	sub	sp, fp, #16
    bac4:	pop	{r4, r5, r6, sl, fp, pc}

0000bac8 <flatbuffers_int64_write_to_pe>:
    bac8:	push	{fp, lr}
    bacc:	mov	fp, sp
    bad0:	sub	sp, sp, #16
    bad4:	str	r0, [fp, #-4]
    bad8:	str	r3, [sp, #4]
    badc:	str	r2, [sp]
    bae0:	ldr	r0, [sp]
    bae4:	ldr	r1, [sp, #4]
    bae8:	bl	12454 <flatbuffers_int64_cast_to_pe>
    baec:	ldr	r2, [fp, #-4]
    baf0:	str	r1, [r2, #4]
    baf4:	str	r0, [r2]
    baf8:	mov	sp, fp
    bafc:	pop	{fp, pc}

0000bb00 <flatcc_json_parser_uint32>:
    bb00:	push	{r4, r5, fp, lr}
    bb04:	add	fp, sp, #8
    bb08:	sub	sp, sp, #56	; 0x38
    bb0c:	str	r0, [fp, #-16]
    bb10:	str	r1, [fp, #-20]	; 0xffffffec
    bb14:	str	r2, [fp, #-24]	; 0xffffffe8
    bb18:	str	r3, [fp, #-28]	; 0xffffffe4
    bb1c:	mov	r0, #0
    bb20:	str	r0, [sp, #28]
    bb24:	str	r0, [sp, #24]
    bb28:	movw	r0, #0
    bb2c:	str	r0, [sp, #20]
    bb30:	ldr	r1, [fp, #-20]	; 0xffffffec
    bb34:	str	r1, [sp, #16]
    bb38:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bb3c:	str	r0, [r1]
    bb40:	ldr	r0, [fp, #-20]	; 0xffffffec
    bb44:	ldr	r1, [fp, #-24]	; 0xffffffe8
    bb48:	cmp	r0, r1
    bb4c:	bne	bb5c <flatcc_json_parser_uint32+0x5c>
    bb50:	ldr	r0, [fp, #-20]	; 0xffffffec
    bb54:	str	r0, [fp, #-12]
    bb58:	b	bbcc <flatcc_json_parser_uint32+0xcc>
    bb5c:	ldr	r0, [fp, #-16]
    bb60:	ldr	r1, [fp, #-20]	; 0xffffffec
    bb64:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bb68:	add	r3, sp, #20
    bb6c:	add	ip, sp, #24
    bb70:	str	ip, [sp]
    bb74:	bl	0 <flatcc_json_parser_integer>
    bb78:	str	r0, [fp, #-20]	; 0xffffffec
    bb7c:	ldr	r0, [fp, #-20]	; 0xffffffec
    bb80:	ldr	r1, [sp, #16]
    bb84:	cmp	r0, r1
    bb88:	beq	bbc4 <flatcc_json_parser_uint32+0xc4>
    bb8c:	ldr	r0, [fp, #-16]
    bb90:	ldr	r1, [fp, #-20]	; 0xffffffec
    bb94:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bb98:	ldr	r3, [sp, #20]
    bb9c:	ldr	ip, [sp, #24]
    bba0:	ldr	lr, [sp, #28]
    bba4:	ldr	r4, [fp, #-28]	; 0xffffffe4
    bba8:	mov	r5, sp
    bbac:	str	r4, [r5, #8]
    bbb0:	str	lr, [r5, #4]
    bbb4:	str	ip, [r5]
    bbb8:	bl	12470 <flatcc_json_parser_coerce_uint32>
    bbbc:	str	r0, [fp, #-12]
    bbc0:	b	bbcc <flatcc_json_parser_uint32+0xcc>
    bbc4:	ldr	r0, [fp, #-20]	; 0xffffffec
    bbc8:	str	r0, [fp, #-12]
    bbcc:	ldr	r0, [fp, #-12]
    bbd0:	sub	sp, fp, #8
    bbd4:	pop	{r4, r5, fp, pc}

0000bbd8 <flatcc_json_parser_symbolic_uint32>:
    bbd8:	push	{r4, r5, r6, sl, fp, lr}
    bbdc:	add	fp, sp, #16
    bbe0:	sub	sp, sp, #88	; 0x58
    bbe4:	ldr	ip, [fp, #8]
    bbe8:	str	r0, [fp, #-24]	; 0xffffffe8
    bbec:	str	r1, [fp, #-28]	; 0xffffffe4
    bbf0:	str	r2, [fp, #-32]	; 0xffffffe0
    bbf4:	str	r3, [fp, #-36]	; 0xffffffdc
    bbf8:	movw	r0, #0
    bbfc:	str	r0, [fp, #-48]	; 0xffffffd0
    bc00:	str	r0, [sp, #36]	; 0x24
    bc04:	ldr	r1, [fp, #8]
    bc08:	str	r0, [r1]
    bc0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bc10:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bc14:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bc18:	str	ip, [sp, #32]
    bc1c:	bl	db28 <flatcc_json_parser_constant_start>
    bc20:	str	r0, [fp, #-28]	; 0xffffffe4
    bc24:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bc28:	ldr	r1, [fp, #-32]	; 0xffffffe0
    bc2c:	cmp	r0, r1
    bc30:	bne	bc40 <flatcc_json_parser_symbolic_uint32+0x68>
    bc34:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bc38:	str	r0, [fp, #-20]	; 0xffffffec
    bc3c:	b	bdf4 <flatcc_json_parser_symbolic_uint32+0x21c>
    bc40:	b	bc44 <flatcc_json_parser_symbolic_uint32+0x6c>
    bc44:	ldr	r0, [fp, #-36]	; 0xffffffdc
    bc48:	str	r0, [fp, #-40]	; 0xffffffd8
    bc4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    bc50:	ldr	r0, [r0]
    bc54:	ldr	r1, [fp, #-24]	; 0xffffffe8
    bc58:	ldr	r2, [fp, #-28]	; 0xffffffe4
    bc5c:	str	r2, [fp, #-44]	; 0xffffffd4
    bc60:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bc64:	str	r0, [sp, #28]
    bc68:	mov	r0, r1
    bc6c:	mov	r1, r2
    bc70:	mov	r2, r3
    bc74:	add	r3, sp, #44	; 0x2c
    bc78:	add	ip, sp, #48	; 0x30
    bc7c:	str	ip, [sp]
    bc80:	add	ip, sp, #40	; 0x28
    bc84:	str	ip, [sp, #4]
    bc88:	ldr	ip, [sp, #28]
    bc8c:	blx	ip
    bc90:	str	r0, [fp, #-28]	; 0xffffffe4
    bc94:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bc98:	ldr	r1, [fp, #-32]	; 0xffffffe0
    bc9c:	cmp	r0, r1
    bca0:	bne	bcb0 <flatcc_json_parser_symbolic_uint32+0xd8>
    bca4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bca8:	str	r0, [fp, #-20]	; 0xffffffec
    bcac:	b	bdf4 <flatcc_json_parser_symbolic_uint32+0x21c>
    bcb0:	b	bcb4 <flatcc_json_parser_symbolic_uint32+0xdc>
    bcb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bcb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    bcbc:	cmp	r0, r1
    bcc0:	movw	r0, #0
    bcc4:	str	r0, [sp, #24]
    bcc8:	bne	bcf0 <flatcc_json_parser_symbolic_uint32+0x118>
    bccc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    bcd0:	add	r1, r0, #4
    bcd4:	str	r1, [fp, #-40]	; 0xffffffd8
    bcd8:	ldr	r0, [r0, #4]
    bcdc:	movw	r1, #0
    bce0:	cmp	r0, r1
    bce4:	movw	r0, #0
    bce8:	movne	r0, #1
    bcec:	str	r0, [sp, #24]
    bcf0:	ldr	r0, [sp, #24]
    bcf4:	tst	r0, #1
    bcf8:	bne	bc4c <flatcc_json_parser_symbolic_uint32+0x74>
    bcfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    bd00:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bd04:	cmp	r0, r1
    bd08:	bne	bd28 <flatcc_json_parser_symbolic_uint32+0x150>
    bd0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bd10:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bd14:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bd18:	movw	r3, #23
    bd1c:	bl	0 <flatcc_json_parser_set_error>
    bd20:	str	r0, [fp, #-20]	; 0xffffffec
    bd24:	b	bdf4 <flatcc_json_parser_symbolic_uint32+0x21c>
    bd28:	ldr	r0, [sp, #36]	; 0x24
    bd2c:	add	r1, r0, #1
    bd30:	str	r1, [sp, #36]	; 0x24
    bd34:	cmp	r0, #0
    bd38:	beq	bd68 <flatcc_json_parser_symbolic_uint32+0x190>
    bd3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bd40:	ldr	r0, [r0, #12]
    bd44:	cmp	r0, #0
    bd48:	beq	bd68 <flatcc_json_parser_symbolic_uint32+0x190>
    bd4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bd50:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bd54:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bd58:	movw	r3, #14
    bd5c:	bl	0 <flatcc_json_parser_set_error>
    bd60:	str	r0, [fp, #-20]	; 0xffffffec
    bd64:	b	bdf4 <flatcc_json_parser_symbolic_uint32+0x21c>
    bd68:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bd6c:	mov	r1, r0
    bd70:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bd74:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bd78:	ldr	ip, [sp, #44]	; 0x2c
    bd7c:	ldr	lr, [sp, #48]	; 0x30
    bd80:	ldr	r4, [sp, #52]	; 0x34
    bd84:	mov	r5, sp
    bd88:	sub	r6, fp, #48	; 0x30
    bd8c:	str	r6, [r5, #8]
    bd90:	str	r4, [r5, #4]
    bd94:	str	lr, [r5]
    bd98:	str	r0, [sp, #20]
    bd9c:	mov	r0, r2
    bda0:	str	r1, [sp, #16]
    bda4:	mov	r1, r3
    bda8:	ldr	r2, [sp, #20]
    bdac:	mov	r3, ip
    bdb0:	bl	12470 <flatcc_json_parser_coerce_uint32>
    bdb4:	ldr	r1, [sp, #16]
    bdb8:	cmp	r1, r0
    bdbc:	bne	bdcc <flatcc_json_parser_symbolic_uint32+0x1f4>
    bdc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bdc4:	str	r0, [fp, #-20]	; 0xffffffec
    bdc8:	b	bdf4 <flatcc_json_parser_symbolic_uint32+0x21c>
    bdcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    bdd0:	ldr	r1, [fp, #8]
    bdd4:	ldr	r2, [r1]
    bdd8:	add	r0, r2, r0
    bddc:	str	r0, [r1]
    bde0:	ldr	r0, [sp, #40]	; 0x28
    bde4:	cmp	r0, #0
    bde8:	bne	bc44 <flatcc_json_parser_symbolic_uint32+0x6c>
    bdec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bdf0:	str	r0, [fp, #-20]	; 0xffffffec
    bdf4:	ldr	r0, [fp, #-20]	; 0xffffffec
    bdf8:	sub	sp, fp, #16
    bdfc:	pop	{r4, r5, r6, sl, fp, pc}

0000be00 <flatbuffers_uint32_write_to_pe>:
    be00:	push	{fp, lr}
    be04:	mov	fp, sp
    be08:	sub	sp, sp, #8
    be0c:	str	r0, [sp, #4]
    be10:	str	r1, [sp]
    be14:	ldr	r0, [sp]
    be18:	bl	12514 <flatbuffers_uint32_cast_to_pe>
    be1c:	ldr	r1, [sp, #4]
    be20:	str	r0, [r1]
    be24:	mov	sp, fp
    be28:	pop	{fp, pc}

0000be2c <flatcc_json_parser_uint64>:
    be2c:	push	{r4, r5, fp, lr}
    be30:	add	fp, sp, #8
    be34:	sub	sp, sp, #56	; 0x38
    be38:	str	r0, [fp, #-16]
    be3c:	str	r1, [fp, #-20]	; 0xffffffec
    be40:	str	r2, [fp, #-24]	; 0xffffffe8
    be44:	str	r3, [fp, #-28]	; 0xffffffe4
    be48:	mov	r0, #0
    be4c:	str	r0, [sp, #28]
    be50:	str	r0, [sp, #24]
    be54:	str	r0, [sp, #20]
    be58:	ldr	r1, [fp, #-20]	; 0xffffffec
    be5c:	str	r1, [sp, #16]
    be60:	ldr	r1, [fp, #-28]	; 0xffffffe4
    be64:	str	r0, [r1, #4]
    be68:	str	r0, [r1]
    be6c:	ldr	r0, [fp, #-20]	; 0xffffffec
    be70:	ldr	r1, [fp, #-24]	; 0xffffffe8
    be74:	cmp	r0, r1
    be78:	bne	be88 <flatcc_json_parser_uint64+0x5c>
    be7c:	ldr	r0, [fp, #-20]	; 0xffffffec
    be80:	str	r0, [fp, #-12]
    be84:	b	bef8 <flatcc_json_parser_uint64+0xcc>
    be88:	ldr	r0, [fp, #-16]
    be8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    be90:	ldr	r2, [fp, #-24]	; 0xffffffe8
    be94:	add	r3, sp, #20
    be98:	add	ip, sp, #24
    be9c:	str	ip, [sp]
    bea0:	bl	0 <flatcc_json_parser_integer>
    bea4:	str	r0, [fp, #-20]	; 0xffffffec
    bea8:	ldr	r0, [fp, #-20]	; 0xffffffec
    beac:	ldr	r1, [sp, #16]
    beb0:	cmp	r0, r1
    beb4:	beq	bef0 <flatcc_json_parser_uint64+0xc4>
    beb8:	ldr	r0, [fp, #-16]
    bebc:	ldr	r1, [fp, #-20]	; 0xffffffec
    bec0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bec4:	ldr	r3, [sp, #20]
    bec8:	ldr	ip, [sp, #24]
    becc:	ldr	lr, [sp, #28]
    bed0:	ldr	r4, [fp, #-28]	; 0xffffffe4
    bed4:	mov	r5, sp
    bed8:	str	r4, [r5, #8]
    bedc:	str	lr, [r5, #4]
    bee0:	str	ip, [r5]
    bee4:	bl	12528 <flatcc_json_parser_coerce_uint64>
    bee8:	str	r0, [fp, #-12]
    beec:	b	bef8 <flatcc_json_parser_uint64+0xcc>
    bef0:	ldr	r0, [fp, #-20]	; 0xffffffec
    bef4:	str	r0, [fp, #-12]
    bef8:	ldr	r0, [fp, #-12]
    befc:	sub	sp, fp, #8
    bf00:	pop	{r4, r5, fp, pc}

0000bf04 <flatcc_json_parser_symbolic_uint64>:
    bf04:	push	{r4, r5, r6, sl, fp, lr}
    bf08:	add	fp, sp, #16
    bf0c:	sub	sp, sp, #96	; 0x60
    bf10:	ldr	ip, [fp, #8]
    bf14:	str	r0, [fp, #-24]	; 0xffffffe8
    bf18:	str	r1, [fp, #-28]	; 0xffffffe4
    bf1c:	str	r2, [fp, #-32]	; 0xffffffe0
    bf20:	str	r3, [fp, #-36]	; 0xffffffdc
    bf24:	mov	r0, #0
    bf28:	str	r0, [sp, #60]	; 0x3c
    bf2c:	str	r0, [sp, #56]	; 0x38
    bf30:	str	r0, [sp, #36]	; 0x24
    bf34:	ldr	r1, [fp, #8]
    bf38:	str	r0, [r1, #4]
    bf3c:	str	r0, [r1]
    bf40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bf44:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bf48:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bf4c:	str	ip, [sp, #32]
    bf50:	bl	db28 <flatcc_json_parser_constant_start>
    bf54:	str	r0, [fp, #-28]	; 0xffffffe4
    bf58:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bf5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    bf60:	cmp	r0, r1
    bf64:	bne	bf74 <flatcc_json_parser_symbolic_uint64+0x70>
    bf68:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bf6c:	str	r0, [fp, #-20]	; 0xffffffec
    bf70:	b	c138 <flatcc_json_parser_symbolic_uint64+0x234>
    bf74:	b	bf78 <flatcc_json_parser_symbolic_uint64+0x74>
    bf78:	ldr	r0, [fp, #-36]	; 0xffffffdc
    bf7c:	str	r0, [fp, #-40]	; 0xffffffd8
    bf80:	ldr	r0, [fp, #-40]	; 0xffffffd8
    bf84:	ldr	r0, [r0]
    bf88:	ldr	r1, [fp, #-24]	; 0xffffffe8
    bf8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    bf90:	str	r2, [fp, #-44]	; 0xffffffd4
    bf94:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bf98:	str	r0, [sp, #28]
    bf9c:	mov	r0, r1
    bfa0:	mov	r1, r2
    bfa4:	mov	r2, r3
    bfa8:	add	r3, sp, #44	; 0x2c
    bfac:	add	ip, sp, #48	; 0x30
    bfb0:	str	ip, [sp]
    bfb4:	add	ip, sp, #40	; 0x28
    bfb8:	str	ip, [sp, #4]
    bfbc:	ldr	ip, [sp, #28]
    bfc0:	blx	ip
    bfc4:	str	r0, [fp, #-28]	; 0xffffffe4
    bfc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bfcc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    bfd0:	cmp	r0, r1
    bfd4:	bne	bfe4 <flatcc_json_parser_symbolic_uint64+0xe0>
    bfd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bfdc:	str	r0, [fp, #-20]	; 0xffffffec
    bfe0:	b	c138 <flatcc_json_parser_symbolic_uint64+0x234>
    bfe4:	b	bfe8 <flatcc_json_parser_symbolic_uint64+0xe4>
    bfe8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bfec:	ldr	r1, [fp, #-44]	; 0xffffffd4
    bff0:	cmp	r0, r1
    bff4:	movw	r0, #0
    bff8:	str	r0, [sp, #24]
    bffc:	bne	c024 <flatcc_json_parser_symbolic_uint64+0x120>
    c000:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c004:	add	r1, r0, #4
    c008:	str	r1, [fp, #-40]	; 0xffffffd8
    c00c:	ldr	r0, [r0, #4]
    c010:	movw	r1, #0
    c014:	cmp	r0, r1
    c018:	movw	r0, #0
    c01c:	movne	r0, #1
    c020:	str	r0, [sp, #24]
    c024:	ldr	r0, [sp, #24]
    c028:	tst	r0, #1
    c02c:	bne	bf80 <flatcc_json_parser_symbolic_uint64+0x7c>
    c030:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c034:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c038:	cmp	r0, r1
    c03c:	bne	c05c <flatcc_json_parser_symbolic_uint64+0x158>
    c040:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c044:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c048:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c04c:	movw	r3, #23
    c050:	bl	0 <flatcc_json_parser_set_error>
    c054:	str	r0, [fp, #-20]	; 0xffffffec
    c058:	b	c138 <flatcc_json_parser_symbolic_uint64+0x234>
    c05c:	ldr	r0, [sp, #36]	; 0x24
    c060:	add	r1, r0, #1
    c064:	str	r1, [sp, #36]	; 0x24
    c068:	cmp	r0, #0
    c06c:	beq	c09c <flatcc_json_parser_symbolic_uint64+0x198>
    c070:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c074:	ldr	r0, [r0, #12]
    c078:	cmp	r0, #0
    c07c:	beq	c09c <flatcc_json_parser_symbolic_uint64+0x198>
    c080:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c084:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c088:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c08c:	movw	r3, #14
    c090:	bl	0 <flatcc_json_parser_set_error>
    c094:	str	r0, [fp, #-20]	; 0xffffffec
    c098:	b	c138 <flatcc_json_parser_symbolic_uint64+0x234>
    c09c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c0a0:	mov	r1, r0
    c0a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    c0a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c0ac:	ldr	ip, [sp, #44]	; 0x2c
    c0b0:	ldr	lr, [sp, #48]	; 0x30
    c0b4:	ldr	r4, [sp, #52]	; 0x34
    c0b8:	mov	r5, sp
    c0bc:	add	r6, sp, #56	; 0x38
    c0c0:	str	r6, [r5, #8]
    c0c4:	str	r4, [r5, #4]
    c0c8:	str	lr, [r5]
    c0cc:	str	r0, [sp, #20]
    c0d0:	mov	r0, r2
    c0d4:	str	r1, [sp, #16]
    c0d8:	mov	r1, r3
    c0dc:	ldr	r2, [sp, #20]
    c0e0:	mov	r3, ip
    c0e4:	bl	12528 <flatcc_json_parser_coerce_uint64>
    c0e8:	ldr	r1, [sp, #16]
    c0ec:	cmp	r1, r0
    c0f0:	bne	c100 <flatcc_json_parser_symbolic_uint64+0x1fc>
    c0f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c0f8:	str	r0, [fp, #-20]	; 0xffffffec
    c0fc:	b	c138 <flatcc_json_parser_symbolic_uint64+0x234>
    c100:	ldr	r0, [sp, #56]	; 0x38
    c104:	ldr	r1, [sp, #60]	; 0x3c
    c108:	ldr	r2, [fp, #8]
    c10c:	ldr	r3, [r2]
    c110:	ldr	ip, [r2, #4]
    c114:	adds	r0, r3, r0
    c118:	adc	r1, ip, r1
    c11c:	str	r0, [r2]
    c120:	str	r1, [r2, #4]
    c124:	ldr	r0, [sp, #40]	; 0x28
    c128:	cmp	r0, #0
    c12c:	bne	bf78 <flatcc_json_parser_symbolic_uint64+0x74>
    c130:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c134:	str	r0, [fp, #-20]	; 0xffffffec
    c138:	ldr	r0, [fp, #-20]	; 0xffffffec
    c13c:	sub	sp, fp, #16
    c140:	pop	{r4, r5, r6, sl, fp, pc}

0000c144 <flatbuffers_uint64_write_to_pe>:
    c144:	push	{fp, lr}
    c148:	mov	fp, sp
    c14c:	sub	sp, sp, #16
    c150:	str	r0, [fp, #-4]
    c154:	str	r3, [sp, #4]
    c158:	str	r2, [sp]
    c15c:	ldr	r0, [sp]
    c160:	ldr	r1, [sp, #4]
    c164:	bl	125a8 <flatbuffers_uint64_cast_to_pe>
    c168:	ldr	r2, [fp, #-4]
    c16c:	str	r1, [r2, #4]
    c170:	str	r0, [r2]
    c174:	mov	sp, fp
    c178:	pop	{fp, pc}
    c17c:	nop	{0}

0000c180 <flatcc_json_parser_symbolic_double>:
    c180:	push	{r4, r5, r6, sl, fp, lr}
    c184:	add	fp, sp, #16
    c188:	sub	sp, sp, #96	; 0x60
    c18c:	ldr	ip, [fp, #8]
    c190:	vldr	d16, [pc, #536]	; c3b0 <flatcc_json_parser_symbolic_double+0x230>
    c194:	str	r0, [fp, #-24]	; 0xffffffe8
    c198:	str	r1, [fp, #-28]	; 0xffffffe4
    c19c:	str	r2, [fp, #-32]	; 0xffffffe0
    c1a0:	str	r3, [fp, #-36]	; 0xffffffdc
    c1a4:	vstr	d16, [sp, #56]	; 0x38
    c1a8:	movw	r0, #0
    c1ac:	str	r0, [sp, #36]	; 0x24
    c1b0:	ldr	r0, [fp, #8]
    c1b4:	vstr	d16, [r0]
    c1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c1bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c1c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c1c4:	str	ip, [sp, #32]
    c1c8:	bl	db28 <flatcc_json_parser_constant_start>
    c1cc:	str	r0, [fp, #-28]	; 0xffffffe4
    c1d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c1d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c1d8:	cmp	r0, r1
    c1dc:	bne	c1ec <flatcc_json_parser_symbolic_double+0x6c>
    c1e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c1e4:	str	r0, [fp, #-20]	; 0xffffffec
    c1e8:	b	c3a0 <flatcc_json_parser_symbolic_double+0x220>
    c1ec:	b	c1f0 <flatcc_json_parser_symbolic_double+0x70>
    c1f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c1f4:	str	r0, [fp, #-40]	; 0xffffffd8
    c1f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c1fc:	ldr	r0, [r0]
    c200:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c204:	ldr	r2, [fp, #-28]	; 0xffffffe4
    c208:	str	r2, [fp, #-44]	; 0xffffffd4
    c20c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c210:	str	r0, [sp, #28]
    c214:	mov	r0, r1
    c218:	mov	r1, r2
    c21c:	mov	r2, r3
    c220:	add	r3, sp, #44	; 0x2c
    c224:	add	ip, sp, #48	; 0x30
    c228:	str	ip, [sp]
    c22c:	add	ip, sp, #40	; 0x28
    c230:	str	ip, [sp, #4]
    c234:	ldr	ip, [sp, #28]
    c238:	blx	ip
    c23c:	str	r0, [fp, #-28]	; 0xffffffe4
    c240:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c244:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c248:	cmp	r0, r1
    c24c:	bne	c25c <flatcc_json_parser_symbolic_double+0xdc>
    c250:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c254:	str	r0, [fp, #-20]	; 0xffffffec
    c258:	b	c3a0 <flatcc_json_parser_symbolic_double+0x220>
    c25c:	b	c260 <flatcc_json_parser_symbolic_double+0xe0>
    c260:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c264:	ldr	r1, [fp, #-44]	; 0xffffffd4
    c268:	cmp	r0, r1
    c26c:	movw	r0, #0
    c270:	str	r0, [sp, #24]
    c274:	bne	c29c <flatcc_json_parser_symbolic_double+0x11c>
    c278:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c27c:	add	r1, r0, #4
    c280:	str	r1, [fp, #-40]	; 0xffffffd8
    c284:	ldr	r0, [r0, #4]
    c288:	movw	r1, #0
    c28c:	cmp	r0, r1
    c290:	movw	r0, #0
    c294:	movne	r0, #1
    c298:	str	r0, [sp, #24]
    c29c:	ldr	r0, [sp, #24]
    c2a0:	tst	r0, #1
    c2a4:	bne	c1f8 <flatcc_json_parser_symbolic_double+0x78>
    c2a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c2ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c2b0:	cmp	r0, r1
    c2b4:	bne	c2d4 <flatcc_json_parser_symbolic_double+0x154>
    c2b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c2bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c2c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c2c4:	movw	r3, #23
    c2c8:	bl	0 <flatcc_json_parser_set_error>
    c2cc:	str	r0, [fp, #-20]	; 0xffffffec
    c2d0:	b	c3a0 <flatcc_json_parser_symbolic_double+0x220>
    c2d4:	ldr	r0, [sp, #36]	; 0x24
    c2d8:	add	r1, r0, #1
    c2dc:	str	r1, [sp, #36]	; 0x24
    c2e0:	cmp	r0, #0
    c2e4:	beq	c314 <flatcc_json_parser_symbolic_double+0x194>
    c2e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c2ec:	ldr	r0, [r0, #12]
    c2f0:	cmp	r0, #0
    c2f4:	beq	c314 <flatcc_json_parser_symbolic_double+0x194>
    c2f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c2fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c300:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c304:	movw	r3, #14
    c308:	bl	0 <flatcc_json_parser_set_error>
    c30c:	str	r0, [fp, #-20]	; 0xffffffec
    c310:	b	c3a0 <flatcc_json_parser_symbolic_double+0x220>
    c314:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c318:	mov	r1, r0
    c31c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    c320:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c324:	ldr	ip, [sp, #44]	; 0x2c
    c328:	ldr	lr, [sp, #48]	; 0x30
    c32c:	ldr	r4, [sp, #52]	; 0x34
    c330:	mov	r5, sp
    c334:	add	r6, sp, #56	; 0x38
    c338:	str	r6, [r5, #8]
    c33c:	str	r4, [r5, #4]
    c340:	str	lr, [r5]
    c344:	str	r0, [sp, #20]
    c348:	mov	r0, r2
    c34c:	str	r1, [sp, #16]
    c350:	mov	r1, r3
    c354:	ldr	r2, [sp, #20]
    c358:	mov	r3, ip
    c35c:	bl	125c4 <flatcc_json_parser_coerce_double>
    c360:	ldr	r1, [sp, #16]
    c364:	cmp	r1, r0
    c368:	bne	c378 <flatcc_json_parser_symbolic_double+0x1f8>
    c36c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c370:	str	r0, [fp, #-20]	; 0xffffffec
    c374:	b	c3a0 <flatcc_json_parser_symbolic_double+0x220>
    c378:	vldr	d16, [sp, #56]	; 0x38
    c37c:	ldr	r0, [fp, #8]
    c380:	vldr	d17, [r0]
    c384:	vadd.f64	d16, d17, d16
    c388:	vstr	d16, [r0]
    c38c:	ldr	r0, [sp, #40]	; 0x28
    c390:	cmp	r0, #0
    c394:	bne	c1f0 <flatcc_json_parser_symbolic_double+0x70>
    c398:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c39c:	str	r0, [fp, #-20]	; 0xffffffec
    c3a0:	ldr	r0, [fp, #-20]	; 0xffffffec
    c3a4:	sub	sp, fp, #16
    c3a8:	pop	{r4, r5, r6, sl, fp, pc}
    c3ac:	nop	{0}
	...

0000c3b8 <flatbuffers_double_write_to_pe>:
    c3b8:	push	{fp, lr}
    c3bc:	mov	fp, sp
    c3c0:	sub	sp, sp, #16
    c3c4:	str	r0, [fp, #-4]
    c3c8:	vstr	d0, [sp]
    c3cc:	vldr	d0, [sp]
    c3d0:	bl	12648 <flatbuffers_double_cast_to_pe>
    c3d4:	ldr	r0, [fp, #-4]
    c3d8:	vstr	d0, [r0]
    c3dc:	mov	sp, fp
    c3e0:	pop	{fp, pc}

0000c3e4 <flatcc_json_parser_object_end>:
    c3e4:	push	{fp, lr}
    c3e8:	mov	fp, sp
    c3ec:	sub	sp, sp, #24
    c3f0:	str	r0, [fp, #-8]
    c3f4:	str	r1, [sp, #12]
    c3f8:	str	r2, [sp, #8]
    c3fc:	str	r3, [sp, #4]
    c400:	ldr	r0, [fp, #-8]
    c404:	ldr	r1, [sp, #12]
    c408:	ldr	r2, [sp, #8]
    c40c:	bl	c548 <flatcc_json_parser_space>
    c410:	str	r0, [sp, #12]
    c414:	ldr	r0, [sp, #12]
    c418:	ldr	r1, [sp, #8]
    c41c:	cmp	r0, r1
    c420:	bne	c43c <flatcc_json_parser_object_end+0x58>
    c424:	ldr	r0, [sp, #4]
    c428:	movw	r1, #0
    c42c:	str	r1, [r0]
    c430:	ldr	r0, [sp, #12]
    c434:	str	r0, [fp, #-4]
    c438:	b	c53c <flatcc_json_parser_object_end+0x158>
    c43c:	ldr	r0, [sp, #12]
    c440:	ldrb	r0, [r0]
    c444:	cmp	r0, #44	; 0x2c
    c448:	beq	c4a0 <flatcc_json_parser_object_end+0xbc>
    c44c:	ldr	r0, [sp, #4]
    c450:	movw	r1, #0
    c454:	str	r1, [r0]
    c458:	ldr	r0, [sp, #12]
    c45c:	ldrb	r0, [r0]
    c460:	cmp	r0, #125	; 0x7d
    c464:	beq	c484 <flatcc_json_parser_object_end+0xa0>
    c468:	ldr	r0, [fp, #-8]
    c46c:	ldr	r1, [sp, #12]
    c470:	ldr	r2, [sp, #8]
    c474:	movw	r3, #10
    c478:	bl	0 <flatcc_json_parser_set_error>
    c47c:	str	r0, [fp, #-4]
    c480:	b	c53c <flatcc_json_parser_object_end+0x158>
    c484:	ldr	r0, [fp, #-8]
    c488:	ldr	r1, [sp, #12]
    c48c:	add	r1, r1, #1
    c490:	ldr	r2, [sp, #8]
    c494:	bl	c548 <flatcc_json_parser_space>
    c498:	str	r0, [fp, #-4]
    c49c:	b	c53c <flatcc_json_parser_object_end+0x158>
    c4a0:	ldr	r0, [fp, #-8]
    c4a4:	ldr	r1, [sp, #12]
    c4a8:	add	r1, r1, #1
    c4ac:	ldr	r2, [sp, #8]
    c4b0:	bl	c548 <flatcc_json_parser_space>
    c4b4:	str	r0, [sp, #12]
    c4b8:	ldr	r0, [sp, #12]
    c4bc:	ldr	r1, [sp, #8]
    c4c0:	cmp	r0, r1
    c4c4:	bne	c4f0 <flatcc_json_parser_object_end+0x10c>
    c4c8:	ldr	r0, [sp, #4]
    c4cc:	movw	r1, #0
    c4d0:	str	r1, [r0]
    c4d4:	ldr	r0, [fp, #-8]
    c4d8:	ldr	r1, [sp, #12]
    c4dc:	ldr	r2, [sp, #8]
    c4e0:	movw	r3, #10
    c4e4:	bl	0 <flatcc_json_parser_set_error>
    c4e8:	str	r0, [fp, #-4]
    c4ec:	b	c53c <flatcc_json_parser_object_end+0x158>
    c4f0:	ldr	r0, [sp, #12]
    c4f4:	ldrb	r0, [r0]
    c4f8:	cmp	r0, #125	; 0x7d
    c4fc:	bne	c528 <flatcc_json_parser_object_end+0x144>
    c500:	ldr	r0, [sp, #4]
    c504:	movw	r1, #0
    c508:	str	r1, [r0]
    c50c:	ldr	r0, [fp, #-8]
    c510:	ldr	r1, [sp, #12]
    c514:	add	r1, r1, #1
    c518:	ldr	r2, [sp, #8]
    c51c:	bl	c548 <flatcc_json_parser_space>
    c520:	str	r0, [fp, #-4]
    c524:	b	c53c <flatcc_json_parser_object_end+0x158>
    c528:	ldr	r0, [sp, #4]
    c52c:	movw	r1, #1
    c530:	str	r1, [r0]
    c534:	ldr	r0, [sp, #12]
    c538:	str	r0, [fp, #-4]
    c53c:	ldr	r0, [fp, #-4]
    c540:	mov	sp, fp
    c544:	pop	{fp, pc}

0000c548 <flatcc_json_parser_space>:
    c548:	push	{fp, lr}
    c54c:	mov	fp, sp
    c550:	sub	sp, sp, #16
    c554:	str	r0, [sp, #8]
    c558:	str	r1, [sp, #4]
    c55c:	str	r2, [sp]
    c560:	ldr	r0, [sp]
    c564:	ldr	r1, [sp, #4]
    c568:	sub	r0, r0, r1
    c56c:	cmp	r0, #1
    c570:	ble	c5c4 <flatcc_json_parser_space+0x7c>
    c574:	ldr	r0, [sp, #4]
    c578:	ldrb	r0, [r0]
    c57c:	cmp	r0, #32
    c580:	ble	c590 <flatcc_json_parser_space+0x48>
    c584:	ldr	r0, [sp, #4]
    c588:	str	r0, [fp, #-4]
    c58c:	b	c5d8 <flatcc_json_parser_space+0x90>
    c590:	ldr	r0, [sp, #4]
    c594:	ldrb	r0, [r0]
    c598:	cmp	r0, #32
    c59c:	bne	c5c0 <flatcc_json_parser_space+0x78>
    c5a0:	ldr	r0, [sp, #4]
    c5a4:	ldrb	r0, [r0, #1]
    c5a8:	cmp	r0, #32
    c5ac:	ble	c5c0 <flatcc_json_parser_space+0x78>
    c5b0:	ldr	r0, [sp, #4]
    c5b4:	add	r0, r0, #1
    c5b8:	str	r0, [fp, #-4]
    c5bc:	b	c5d8 <flatcc_json_parser_space+0x90>
    c5c0:	b	c5c4 <flatcc_json_parser_space+0x7c>
    c5c4:	ldr	r0, [sp, #8]
    c5c8:	ldr	r1, [sp, #4]
    c5cc:	ldr	r2, [sp]
    c5d0:	bl	0 <flatcc_json_parser_space_ext>
    c5d4:	str	r0, [fp, #-4]
    c5d8:	ldr	r0, [fp, #-4]
    c5dc:	mov	sp, fp
    c5e0:	pop	{fp, pc}

0000c5e4 <flatcc_json_parser_symbol_part_ext>:
    c5e4:	sub	sp, sp, #24
    c5e8:	str	r0, [sp, #20]
    c5ec:	str	r1, [sp, #16]
    c5f0:	mov	r0, #0
    c5f4:	str	r0, [sp, #12]
    c5f8:	str	r0, [sp, #8]
    c5fc:	ldr	r0, [sp, #16]
    c600:	ldr	r1, [sp, #20]
    c604:	sub	r0, r0, r1
    c608:	str	r0, [sp, #4]
    c60c:	ldr	r0, [sp, #4]
    c610:	cmp	r0, #8
    c614:	bls	c620 <flatcc_json_parser_symbol_part_ext+0x3c>
    c618:	movw	r0, #8
    c61c:	str	r0, [sp, #4]
    c620:	ldr	r0, [sp, #4]
    c624:	cmp	r0, #8
    c628:	str	r0, [sp]
    c62c:	bhi	c748 <flatcc_json_parser_symbol_part_ext+0x164>
    c630:	add	r0, pc, #8
    c634:	ldr	r1, [sp]
    c638:	ldr	r0, [r0, r1, lsl #2]
    c63c:	mov	pc, r0
    c640:	.word	0x0000c744
    c644:	.word	0x0000c728
    c648:	.word	0x0000c70c
    c64c:	.word	0x0000c6f0
    c650:	.word	0x0000c6d4
    c654:	.word	0x0000c6b8
    c658:	.word	0x0000c69c
    c65c:	.word	0x0000c680
    c660:	.word	0x0000c664
    c664:	ldr	r0, [sp, #20]
    c668:	ldrb	r0, [r0, #7]
    c66c:	ldr	r1, [sp, #8]
    c670:	ldr	r2, [sp, #12]
    c674:	orr	r0, r1, r0
    c678:	str	r2, [sp, #12]
    c67c:	str	r0, [sp, #8]
    c680:	ldr	r0, [sp, #20]
    c684:	ldrb	r0, [r0, #6]
    c688:	ldr	r1, [sp, #8]
    c68c:	ldr	r2, [sp, #12]
    c690:	orr	r0, r1, r0, lsl #8
    c694:	str	r2, [sp, #12]
    c698:	str	r0, [sp, #8]
    c69c:	ldr	r0, [sp, #20]
    c6a0:	ldrb	r0, [r0, #5]
    c6a4:	ldr	r1, [sp, #8]
    c6a8:	ldr	r2, [sp, #12]
    c6ac:	orr	r0, r1, r0, lsl #16
    c6b0:	str	r2, [sp, #12]
    c6b4:	str	r0, [sp, #8]
    c6b8:	ldr	r0, [sp, #20]
    c6bc:	ldrb	r0, [r0, #4]
    c6c0:	ldr	r1, [sp, #8]
    c6c4:	ldr	r2, [sp, #12]
    c6c8:	orr	r0, r1, r0, lsl #24
    c6cc:	str	r2, [sp, #12]
    c6d0:	str	r0, [sp, #8]
    c6d4:	ldr	r0, [sp, #20]
    c6d8:	ldrb	r0, [r0, #3]
    c6dc:	ldr	r1, [sp, #8]
    c6e0:	ldr	r2, [sp, #12]
    c6e4:	orr	r0, r2, r0
    c6e8:	str	r1, [sp, #8]
    c6ec:	str	r0, [sp, #12]
    c6f0:	ldr	r0, [sp, #20]
    c6f4:	ldrb	r0, [r0, #2]
    c6f8:	ldr	r1, [sp, #8]
    c6fc:	ldr	r2, [sp, #12]
    c700:	orr	r0, r2, r0, lsl #8
    c704:	str	r1, [sp, #8]
    c708:	str	r0, [sp, #12]
    c70c:	ldr	r0, [sp, #20]
    c710:	ldrb	r0, [r0, #1]
    c714:	ldr	r1, [sp, #8]
    c718:	ldr	r2, [sp, #12]
    c71c:	orr	r0, r2, r0, lsl #16
    c720:	str	r1, [sp, #8]
    c724:	str	r0, [sp, #12]
    c728:	ldr	r0, [sp, #20]
    c72c:	ldrb	r0, [r0]
    c730:	ldr	r1, [sp, #8]
    c734:	ldr	r2, [sp, #12]
    c738:	orr	r0, r2, r0, lsl #24
    c73c:	str	r1, [sp, #8]
    c740:	str	r0, [sp, #12]
    c744:	b	c748 <flatcc_json_parser_symbol_part_ext+0x164>
    c748:	ldr	r0, [sp, #8]
    c74c:	ldr	r1, [sp, #12]
    c750:	add	sp, sp, #24
    c754:	bx	lr

0000c758 <flatcc_json_parser_match_scope>:
    c758:	sub	sp, sp, #24
    c75c:	str	r0, [sp, #16]
    c760:	str	r1, [sp, #12]
    c764:	str	r2, [sp, #8]
    c768:	str	r3, [sp, #4]
    c76c:	ldr	r0, [sp, #12]
    c770:	str	r0, [sp]
    c774:	ldr	r0, [sp, #8]
    c778:	ldr	r1, [sp, #12]
    c77c:	sub	r0, r0, r1
    c780:	ldr	r1, [sp, #4]
    c784:	cmp	r0, r1
    c788:	bgt	c798 <flatcc_json_parser_match_scope+0x40>
    c78c:	ldr	r0, [sp]
    c790:	str	r0, [sp, #20]
    c794:	b	c7d0 <flatcc_json_parser_match_scope+0x78>
    c798:	ldr	r0, [sp, #12]
    c79c:	ldr	r1, [sp, #4]
    c7a0:	add	r0, r0, r1
    c7a4:	ldrb	r0, [r0]
    c7a8:	cmp	r0, #46	; 0x2e
    c7ac:	beq	c7bc <flatcc_json_parser_match_scope+0x64>
    c7b0:	ldr	r0, [sp]
    c7b4:	str	r0, [sp, #20]
    c7b8:	b	c7d0 <flatcc_json_parser_match_scope+0x78>
    c7bc:	ldr	r0, [sp, #12]
    c7c0:	ldr	r1, [sp, #4]
    c7c4:	add	r0, r0, r1
    c7c8:	add	r0, r0, #1
    c7cc:	str	r0, [sp, #20]
    c7d0:	ldr	r0, [sp, #20]
    c7d4:	add	sp, sp, #24
    c7d8:	bx	lr

0000c7dc <MyGame_Example_Foo_parse_json_enum>:
    c7dc:	push	{fp, lr}
    c7e0:	mov	fp, sp
    c7e4:	sub	sp, sp, #64	; 0x40
    c7e8:	ldr	ip, [fp, #12]
    c7ec:	ldr	lr, [fp, #8]
    c7f0:	str	r0, [fp, #-8]
    c7f4:	str	r1, [fp, #-12]
    c7f8:	str	r2, [fp, #-16]
    c7fc:	str	r3, [fp, #-20]	; 0xffffffec
    c800:	ldr	r0, [fp, #-12]
    c804:	str	r0, [fp, #-24]	; 0xffffffe8
    c808:	ldr	r0, [fp, #-12]
    c80c:	ldr	r1, [fp, #-16]
    c810:	str	ip, [sp, #20]
    c814:	str	lr, [sp, #16]
    c818:	bl	7130 <flatcc_json_parser_symbol_part>
    c81c:	str	r1, [sp, #28]
    c820:	str	r0, [sp, #24]
    c824:	ldr	r0, [sp, #24]
    c828:	ldr	r1, [sp, #28]
    c82c:	movw	r2, #20577	; 0x5061
    c830:	movt	r2, #18798	; 0x496e
    c834:	eor	r1, r1, r2
    c838:	movw	r2, #28276	; 0x6e74
    c83c:	movt	r2, #29285	; 0x7265
    c840:	eor	r0, r0, r2
    c844:	orr	r0, r0, r1
    c848:	cmp	r0, #0
    c84c:	bne	c96c <MyGame_Example_Foo_parse_json_enum+0x190>
    c850:	b	c854 <MyGame_Example_Foo_parse_json_enum+0x78>
    c854:	ldr	r0, [fp, #-12]
    c858:	add	r0, r0, #8
    c85c:	str	r0, [fp, #-12]
    c860:	ldr	r0, [fp, #-12]
    c864:	ldr	r1, [fp, #-16]
    c868:	bl	7130 <flatcc_json_parser_symbol_part>
    c86c:	str	r1, [sp, #28]
    c870:	str	r0, [sp, #24]
    c874:	ldr	r0, [sp, #24]
    c878:	ldr	r1, [sp, #28]
    c87c:	movw	r2, #28005	; 0x6d65
    c880:	movt	r2, #20065	; 0x4e61
    c884:	eor	r1, r1, r2
    c888:	movw	r2, #24931	; 0x6163
    c88c:	movt	r2, #29552	; 0x7370
    c890:	eor	r0, r0, r2
    c894:	orr	r0, r0, r1
    c898:	cmp	r0, #0
    c89c:	bne	c95c <MyGame_Example_Foo_parse_json_enum+0x180>
    c8a0:	b	c8a4 <MyGame_Example_Foo_parse_json_enum+0xc8>
    c8a4:	ldr	r0, [fp, #-12]
    c8a8:	add	r0, r0, #8
    c8ac:	str	r0, [fp, #-12]
    c8b0:	ldr	r0, [fp, #-12]
    c8b4:	ldr	r1, [fp, #-16]
    c8b8:	bl	7130 <flatcc_json_parser_symbol_part>
    c8bc:	str	r1, [sp, #28]
    c8c0:	str	r0, [sp, #24]
    c8c4:	ldrb	r0, [sp, #31]
    c8c8:	mov	r1, #1694498816	; 0x65000000
    c8cc:	teq	r1, r0, lsl #24
    c8d0:	bne	c94c <MyGame_Example_Foo_parse_json_enum+0x170>
    c8d4:	b	c8d8 <MyGame_Example_Foo_parse_json_enum+0xfc>
    c8d8:	ldr	r0, [fp, #-8]
    c8dc:	ldr	r1, [fp, #-12]
    c8e0:	str	r1, [fp, #-28]	; 0xffffffe4
    c8e4:	ldr	r2, [fp, #-16]
    c8e8:	ldr	r3, [fp, #12]
    c8ec:	movw	ip, #1
    c8f0:	str	r3, [sp, #12]
    c8f4:	mov	r3, ip
    c8f8:	ldr	ip, [sp, #12]
    c8fc:	str	ip, [sp]
    c900:	bl	0 <flatcc_json_parser_match_constant>
    c904:	str	r0, [fp, #-12]
    c908:	ldr	r0, [fp, #-12]
    c90c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c910:	cmp	r0, r1
    c914:	beq	c93c <MyGame_Example_Foo_parse_json_enum+0x160>
    c918:	ldr	r0, [fp, #8]
    c91c:	mov	r1, #0
    c920:	str	r1, [r0, #4]
    c924:	mov	r1, #1
    c928:	str	r1, [r0]
    c92c:	ldr	r0, [fp, #-20]	; 0xffffffec
    c930:	movw	r1, #0
    c934:	str	r1, [r0]
    c938:	b	c948 <MyGame_Example_Foo_parse_json_enum+0x16c>
    c93c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c940:	str	r0, [fp, #-4]
    c944:	b	ca0c <MyGame_Example_Foo_parse_json_enum+0x230>
    c948:	b	c958 <MyGame_Example_Foo_parse_json_enum+0x17c>
    c94c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c950:	str	r0, [fp, #-4]
    c954:	b	ca0c <MyGame_Example_Foo_parse_json_enum+0x230>
    c958:	b	c968 <MyGame_Example_Foo_parse_json_enum+0x18c>
    c95c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c960:	str	r0, [fp, #-4]
    c964:	b	ca0c <MyGame_Example_Foo_parse_json_enum+0x230>
    c968:	b	ca04 <MyGame_Example_Foo_parse_json_enum+0x228>
    c96c:	ldr	r0, [sp, #28]
    c970:	movw	r1, #20037	; 0x4e45
    c974:	movt	r1, #20047	; 0x4e4f
    c978:	teq	r0, r1
    c97c:	bne	c9f4 <MyGame_Example_Foo_parse_json_enum+0x218>
    c980:	b	c984 <MyGame_Example_Foo_parse_json_enum+0x1a8>
    c984:	ldr	r0, [fp, #-8]
    c988:	ldr	r1, [fp, #-12]
    c98c:	str	r1, [fp, #-28]	; 0xffffffe4
    c990:	ldr	r2, [fp, #-16]
    c994:	ldr	r3, [fp, #12]
    c998:	movw	ip, #4
    c99c:	str	r3, [sp, #8]
    c9a0:	mov	r3, ip
    c9a4:	ldr	ip, [sp, #8]
    c9a8:	str	ip, [sp]
    c9ac:	bl	0 <flatcc_json_parser_match_constant>
    c9b0:	str	r0, [fp, #-12]
    c9b4:	ldr	r0, [fp, #-12]
    c9b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c9bc:	cmp	r0, r1
    c9c0:	beq	c9e4 <MyGame_Example_Foo_parse_json_enum+0x208>
    c9c4:	ldr	r0, [fp, #8]
    c9c8:	mov	r1, #0
    c9cc:	str	r1, [r0, #4]
    c9d0:	str	r1, [r0]
    c9d4:	ldr	r0, [fp, #-20]	; 0xffffffec
    c9d8:	movw	r1, #0
    c9dc:	str	r1, [r0]
    c9e0:	b	c9f0 <MyGame_Example_Foo_parse_json_enum+0x214>
    c9e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c9e8:	str	r0, [fp, #-4]
    c9ec:	b	ca0c <MyGame_Example_Foo_parse_json_enum+0x230>
    c9f0:	b	ca00 <MyGame_Example_Foo_parse_json_enum+0x224>
    c9f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c9f8:	str	r0, [fp, #-4]
    c9fc:	b	ca0c <MyGame_Example_Foo_parse_json_enum+0x230>
    ca00:	b	ca04 <MyGame_Example_Foo_parse_json_enum+0x228>
    ca04:	ldr	r0, [fp, #-12]
    ca08:	str	r0, [fp, #-4]
    ca0c:	ldr	r0, [fp, #-4]
    ca10:	mov	sp, fp
    ca14:	pop	{fp, pc}

0000ca18 <MyGame_Example_hex_enum_parse_json_enum>:
    ca18:	push	{fp, lr}
    ca1c:	mov	fp, sp
    ca20:	sub	sp, sp, #64	; 0x40
    ca24:	ldr	ip, [fp, #12]
    ca28:	ldr	lr, [fp, #8]
    ca2c:	str	r0, [fp, #-8]
    ca30:	str	r1, [fp, #-12]
    ca34:	str	r2, [fp, #-16]
    ca38:	str	r3, [fp, #-20]	; 0xffffffec
    ca3c:	ldr	r0, [fp, #-12]
    ca40:	str	r0, [fp, #-24]	; 0xffffffe8
    ca44:	ldr	r0, [fp, #-12]
    ca48:	ldr	r1, [fp, #-16]
    ca4c:	str	ip, [sp, #20]
    ca50:	str	lr, [sp, #16]
    ca54:	bl	7130 <flatcc_json_parser_symbol_part>
    ca58:	str	r1, [sp, #28]
    ca5c:	str	r0, [sp, #24]
    ca60:	ldr	r0, [sp, #28]
    ca64:	movw	r1, #30769	; 0x7831
    ca68:	movt	r1, #26725	; 0x6865
    ca6c:	cmp	r0, r1
    ca70:	bhi	cb14 <MyGame_Example_hex_enum_parse_json_enum+0xfc>
    ca74:	b	ca78 <MyGame_Example_hex_enum_parse_json_enum+0x60>
    ca78:	ldr	r0, [sp, #28]
    ca7c:	movw	r1, #30769	; 0x7831
    ca80:	movt	r1, #26725	; 0x6865
    ca84:	teq	r0, r1
    ca88:	bne	cb04 <MyGame_Example_hex_enum_parse_json_enum+0xec>
    ca8c:	b	ca90 <MyGame_Example_hex_enum_parse_json_enum+0x78>
    ca90:	ldr	r0, [fp, #-8]
    ca94:	ldr	r1, [fp, #-12]
    ca98:	str	r1, [fp, #-28]	; 0xffffffe4
    ca9c:	ldr	r2, [fp, #-16]
    caa0:	ldr	r3, [fp, #12]
    caa4:	movw	ip, #4
    caa8:	str	r3, [sp, #12]
    caac:	mov	r3, ip
    cab0:	ldr	ip, [sp, #12]
    cab4:	str	ip, [sp]
    cab8:	bl	0 <flatcc_json_parser_match_constant>
    cabc:	str	r0, [fp, #-12]
    cac0:	ldr	r0, [fp, #-12]
    cac4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    cac8:	cmp	r0, r1
    cacc:	beq	caf4 <MyGame_Example_hex_enum_parse_json_enum+0xdc>
    cad0:	ldr	r0, [fp, #8]
    cad4:	mov	r1, #0
    cad8:	str	r1, [r0, #4]
    cadc:	mov	r1, #3
    cae0:	str	r1, [r0]
    cae4:	ldr	r0, [fp, #-20]	; 0xffffffec
    cae8:	movw	r1, #0
    caec:	str	r1, [r0]
    caf0:	b	cb00 <MyGame_Example_hex_enum_parse_json_enum+0xe8>
    caf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    caf8:	str	r0, [fp, #-4]
    cafc:	b	cc64 <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    cb00:	b	cb10 <MyGame_Example_hex_enum_parse_json_enum+0xf8>
    cb04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cb08:	str	r0, [fp, #-4]
    cb0c:	b	cc64 <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    cb10:	b	cc5c <MyGame_Example_hex_enum_parse_json_enum+0x244>
    cb14:	ldrh	r0, [sp, #26]
    cb18:	ldr	r1, [sp, #28]
    cb1c:	movw	r2, #26725	; 0x6865
    cb20:	eor	r2, r2, r1, lsr #16
    cb24:	orr	r0, r0, r1, lsl #16
    cb28:	movw	r1, #25959	; 0x6567
    cb2c:	movt	r1, #30830	; 0x786e
    cb30:	eor	r0, r0, r1
    cb34:	orr	r0, r0, r2
    cb38:	cmp	r0, #0
    cb3c:	bne	cbb8 <MyGame_Example_hex_enum_parse_json_enum+0x1a0>
    cb40:	b	cb44 <MyGame_Example_hex_enum_parse_json_enum+0x12c>
    cb44:	ldr	r0, [fp, #-8]
    cb48:	ldr	r1, [fp, #-12]
    cb4c:	str	r1, [fp, #-28]	; 0xffffffe4
    cb50:	ldr	r2, [fp, #-16]
    cb54:	ldr	r3, [fp, #12]
    cb58:	movw	ip, #6
    cb5c:	str	r3, [sp, #8]
    cb60:	mov	r3, ip
    cb64:	ldr	ip, [sp, #8]
    cb68:	str	ip, [sp]
    cb6c:	bl	0 <flatcc_json_parser_match_constant>
    cb70:	str	r0, [fp, #-12]
    cb74:	ldr	r0, [fp, #-12]
    cb78:	ldr	r1, [fp, #-28]	; 0xffffffe4
    cb7c:	cmp	r0, r1
    cb80:	beq	cba8 <MyGame_Example_hex_enum_parse_json_enum+0x190>
    cb84:	ldr	r0, [fp, #8]
    cb88:	mvn	r1, #0
    cb8c:	str	r1, [r0, #4]
    cb90:	mvn	r1, #1
    cb94:	str	r1, [r0]
    cb98:	ldr	r0, [fp, #-20]	; 0xffffffec
    cb9c:	movw	r1, #1
    cba0:	str	r1, [r0]
    cba4:	b	cbb4 <MyGame_Example_hex_enum_parse_json_enum+0x19c>
    cba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cbac:	str	r0, [fp, #-4]
    cbb0:	b	cc64 <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    cbb4:	b	cc58 <MyGame_Example_hex_enum_parse_json_enum+0x240>
    cbb8:	ldr	r0, [sp, #28]
    cbbc:	movw	r1, #30770	; 0x7832
    cbc0:	movt	r1, #26725	; 0x6865
    cbc4:	teq	r0, r1
    cbc8:	bne	cc48 <MyGame_Example_hex_enum_parse_json_enum+0x230>
    cbcc:	b	cbd0 <MyGame_Example_hex_enum_parse_json_enum+0x1b8>
    cbd0:	ldr	r0, [fp, #-8]
    cbd4:	ldr	r1, [fp, #-12]
    cbd8:	str	r1, [fp, #-28]	; 0xffffffe4
    cbdc:	ldr	r2, [fp, #-16]
    cbe0:	ldr	r3, [fp, #12]
    cbe4:	movw	ip, #4
    cbe8:	str	r3, [sp, #4]
    cbec:	mov	r3, ip
    cbf0:	ldr	ip, [sp, #4]
    cbf4:	str	ip, [sp]
    cbf8:	bl	0 <flatcc_json_parser_match_constant>
    cbfc:	str	r0, [fp, #-12]
    cc00:	ldr	r0, [fp, #-12]
    cc04:	ldr	r1, [fp, #-28]	; 0xffffffe4
    cc08:	cmp	r0, r1
    cc0c:	beq	cc38 <MyGame_Example_hex_enum_parse_json_enum+0x220>
    cc10:	ldr	r0, [fp, #8]
    cc14:	mov	r1, #0
    cc18:	str	r1, [r0, #4]
    cc1c:	movw	r1, #48815	; 0xbeaf
    cc20:	movt	r1, #32431	; 0x7eaf
    cc24:	str	r1, [r0]
    cc28:	ldr	r0, [fp, #-20]	; 0xffffffec
    cc2c:	movw	r1, #0
    cc30:	str	r1, [r0]
    cc34:	b	cc44 <MyGame_Example_hex_enum_parse_json_enum+0x22c>
    cc38:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cc3c:	str	r0, [fp, #-4]
    cc40:	b	cc64 <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    cc44:	b	cc54 <MyGame_Example_hex_enum_parse_json_enum+0x23c>
    cc48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cc4c:	str	r0, [fp, #-4]
    cc50:	b	cc64 <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    cc54:	b	cc58 <MyGame_Example_hex_enum_parse_json_enum+0x240>
    cc58:	b	cc5c <MyGame_Example_hex_enum_parse_json_enum+0x244>
    cc5c:	ldr	r0, [fp, #-12]
    cc60:	str	r0, [fp, #-4]
    cc64:	ldr	r0, [fp, #-4]
    cc68:	mov	sp, fp
    cc6c:	pop	{fp, pc}

0000cc70 <MyGame_Example_int_enum_parse_json_enum>:
    cc70:	push	{fp, lr}
    cc74:	mov	fp, sp
    cc78:	sub	sp, sp, #72	; 0x48
    cc7c:	ldr	ip, [fp, #12]
    cc80:	ldr	lr, [fp, #8]
    cc84:	str	r0, [fp, #-8]
    cc88:	str	r1, [fp, #-12]
    cc8c:	str	r2, [fp, #-16]
    cc90:	str	r3, [fp, #-20]	; 0xffffffec
    cc94:	ldr	r0, [fp, #-12]
    cc98:	str	r0, [fp, #-24]	; 0xffffffe8
    cc9c:	ldr	r0, [fp, #-12]
    cca0:	ldr	r1, [fp, #-16]
    cca4:	str	ip, [sp, #28]
    cca8:	str	lr, [sp, #24]
    ccac:	bl	7130 <flatcc_json_parser_symbol_part>
    ccb0:	str	r1, [sp, #36]	; 0x24
    ccb4:	str	r0, [sp, #32]
    ccb8:	ldr	r0, [sp, #36]	; 0x24
    ccbc:	movw	r1, #29745	; 0x7431
    ccc0:	movt	r1, #26990	; 0x696e
    ccc4:	cmp	r0, r1
    ccc8:	bhi	cd6c <MyGame_Example_int_enum_parse_json_enum+0xfc>
    cccc:	b	ccd0 <MyGame_Example_int_enum_parse_json_enum+0x60>
    ccd0:	ldr	r0, [sp, #36]	; 0x24
    ccd4:	movw	r1, #29745	; 0x7431
    ccd8:	movt	r1, #26990	; 0x696e
    ccdc:	teq	r0, r1
    cce0:	bne	cd5c <MyGame_Example_int_enum_parse_json_enum+0xec>
    cce4:	b	cce8 <MyGame_Example_int_enum_parse_json_enum+0x78>
    cce8:	ldr	r0, [fp, #-8]
    ccec:	ldr	r1, [fp, #-12]
    ccf0:	str	r1, [fp, #-28]	; 0xffffffe4
    ccf4:	ldr	r2, [fp, #-16]
    ccf8:	ldr	r3, [fp, #12]
    ccfc:	movw	ip, #4
    cd00:	str	r3, [sp, #20]
    cd04:	mov	r3, ip
    cd08:	ldr	ip, [sp, #20]
    cd0c:	str	ip, [sp]
    cd10:	bl	0 <flatcc_json_parser_match_constant>
    cd14:	str	r0, [fp, #-12]
    cd18:	ldr	r0, [fp, #-12]
    cd1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    cd20:	cmp	r0, r1
    cd24:	beq	cd4c <MyGame_Example_int_enum_parse_json_enum+0xdc>
    cd28:	ldr	r0, [fp, #8]
    cd2c:	mov	r1, #0
    cd30:	str	r1, [r0, #4]
    cd34:	mov	r1, #2
    cd38:	str	r1, [r0]
    cd3c:	ldr	r0, [fp, #-20]	; 0xffffffec
    cd40:	movw	r1, #0
    cd44:	str	r1, [r0]
    cd48:	b	cd58 <MyGame_Example_int_enum_parse_json_enum+0xe8>
    cd4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cd50:	str	r0, [fp, #-4]
    cd54:	b	cf9c <MyGame_Example_int_enum_parse_json_enum+0x32c>
    cd58:	b	cd68 <MyGame_Example_int_enum_parse_json_enum+0xf8>
    cd5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cd60:	str	r0, [fp, #-4]
    cd64:	b	cf9c <MyGame_Example_int_enum_parse_json_enum+0x32c>
    cd68:	b	cf94 <MyGame_Example_int_enum_parse_json_enum+0x324>
    cd6c:	ldr	r0, [sp, #32]
    cd70:	ldr	r1, [sp, #36]	; 0x24
    cd74:	movw	r2, #65535	; 0xffff
    cd78:	movt	r2, #25958	; 0x6566
    cd7c:	subs	r0, r2, r0
    cd80:	movw	r2, #29806	; 0x746e
    cd84:	movt	r2, #26990	; 0x696e
    cd88:	sbcs	r1, r2, r1
    cd8c:	bcc	ce30 <MyGame_Example_int_enum_parse_json_enum+0x1c0>
    cd90:	b	cd94 <MyGame_Example_int_enum_parse_json_enum+0x124>
    cd94:	ldr	r0, [sp, #36]	; 0x24
    cd98:	movw	r1, #29746	; 0x7432
    cd9c:	movt	r1, #26990	; 0x696e
    cda0:	teq	r0, r1
    cda4:	bne	ce20 <MyGame_Example_int_enum_parse_json_enum+0x1b0>
    cda8:	b	cdac <MyGame_Example_int_enum_parse_json_enum+0x13c>
    cdac:	ldr	r0, [fp, #-8]
    cdb0:	ldr	r1, [fp, #-12]
    cdb4:	str	r1, [fp, #-28]	; 0xffffffe4
    cdb8:	ldr	r2, [fp, #-16]
    cdbc:	ldr	r3, [fp, #12]
    cdc0:	movw	ip, #4
    cdc4:	str	r3, [sp, #16]
    cdc8:	mov	r3, ip
    cdcc:	ldr	ip, [sp, #16]
    cdd0:	str	ip, [sp]
    cdd4:	bl	0 <flatcc_json_parser_match_constant>
    cdd8:	str	r0, [fp, #-12]
    cddc:	ldr	r0, [fp, #-12]
    cde0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    cde4:	cmp	r0, r1
    cde8:	beq	ce10 <MyGame_Example_int_enum_parse_json_enum+0x1a0>
    cdec:	ldr	r0, [fp, #8]
    cdf0:	mov	r1, #0
    cdf4:	str	r1, [r0, #4]
    cdf8:	mov	r1, #42	; 0x2a
    cdfc:	str	r1, [r0]
    ce00:	ldr	r0, [fp, #-20]	; 0xffffffec
    ce04:	movw	r1, #0
    ce08:	str	r1, [r0]
    ce0c:	b	ce1c <MyGame_Example_int_enum_parse_json_enum+0x1ac>
    ce10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ce14:	str	r0, [fp, #-4]
    ce18:	b	cf9c <MyGame_Example_int_enum_parse_json_enum+0x32c>
    ce1c:	b	ce2c <MyGame_Example_int_enum_parse_json_enum+0x1bc>
    ce20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ce24:	str	r0, [fp, #-4]
    ce28:	b	cf9c <MyGame_Example_int_enum_parse_json_enum+0x32c>
    ce2c:	b	cf90 <MyGame_Example_int_enum_parse_json_enum+0x320>
    ce30:	ldr	r0, [sp, #32]
    ce34:	ldr	r1, [sp, #36]	; 0x24
    ce38:	movw	r2, #28276	; 0x6e74
    ce3c:	movt	r2, #105	; 0x69
    ce40:	eor	r2, r2, r1, lsr #8
    ce44:	lsr	r0, r0, #8
    ce48:	orr	r0, r0, r1, lsl #24
    ce4c:	movw	r1, #26418	; 0x6732
    ce50:	movt	r1, #28261	; 0x6e65
    ce54:	eor	r0, r0, r1
    ce58:	orr	r0, r0, r2
    ce5c:	cmp	r0, #0
    ce60:	bne	ced8 <MyGame_Example_int_enum_parse_json_enum+0x268>
    ce64:	b	ce68 <MyGame_Example_int_enum_parse_json_enum+0x1f8>
    ce68:	ldr	r0, [fp, #-8]
    ce6c:	ldr	r1, [fp, #-12]
    ce70:	str	r1, [fp, #-28]	; 0xffffffe4
    ce74:	ldr	r2, [fp, #-16]
    ce78:	ldr	r3, [fp, #12]
    ce7c:	movw	ip, #7
    ce80:	str	r3, [sp, #12]
    ce84:	mov	r3, ip
    ce88:	ldr	ip, [sp, #12]
    ce8c:	str	ip, [sp]
    ce90:	bl	0 <flatcc_json_parser_match_constant>
    ce94:	str	r0, [fp, #-12]
    ce98:	ldr	r0, [fp, #-12]
    ce9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    cea0:	cmp	r0, r1
    cea4:	beq	cec8 <MyGame_Example_int_enum_parse_json_enum+0x258>
    cea8:	ldr	r0, [fp, #8]
    ceac:	mvn	r1, #0
    ceb0:	str	r1, [r0, #4]
    ceb4:	str	r1, [r0]
    ceb8:	ldr	r0, [fp, #-20]	; 0xffffffec
    cebc:	movw	r1, #1
    cec0:	str	r1, [r0]
    cec4:	b	ced4 <MyGame_Example_int_enum_parse_json_enum+0x264>
    cec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cecc:	str	r0, [fp, #-4]
    ced0:	b	cf9c <MyGame_Example_int_enum_parse_json_enum+0x32c>
    ced4:	b	cf8c <MyGame_Example_int_enum_parse_json_enum+0x31c>
    ced8:	ldrh	r0, [sp, #34]	; 0x22
    cedc:	ldr	r1, [sp, #36]	; 0x24
    cee0:	movw	r2, #26990	; 0x696e
    cee4:	eor	r2, r2, r1, lsr #16
    cee8:	orr	r0, r0, r1, lsl #16
    ceec:	movw	r1, #25959	; 0x6567
    cef0:	movt	r1, #29806	; 0x746e
    cef4:	eor	r0, r0, r1
    cef8:	orr	r0, r0, r2
    cefc:	cmp	r0, #0
    cf00:	bne	cf7c <MyGame_Example_int_enum_parse_json_enum+0x30c>
    cf04:	b	cf08 <MyGame_Example_int_enum_parse_json_enum+0x298>
    cf08:	ldr	r0, [fp, #-8]
    cf0c:	ldr	r1, [fp, #-12]
    cf10:	str	r1, [fp, #-28]	; 0xffffffe4
    cf14:	ldr	r2, [fp, #-16]
    cf18:	ldr	r3, [fp, #12]
    cf1c:	movw	ip, #6
    cf20:	str	r3, [sp, #8]
    cf24:	mov	r3, ip
    cf28:	ldr	ip, [sp, #8]
    cf2c:	str	ip, [sp]
    cf30:	bl	0 <flatcc_json_parser_match_constant>
    cf34:	str	r0, [fp, #-12]
    cf38:	ldr	r0, [fp, #-12]
    cf3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    cf40:	cmp	r0, r1
    cf44:	beq	cf6c <MyGame_Example_int_enum_parse_json_enum+0x2fc>
    cf48:	ldr	r0, [fp, #8]
    cf4c:	mvn	r1, #0
    cf50:	str	r1, [r0, #4]
    cf54:	mvn	r1, #1
    cf58:	str	r1, [r0]
    cf5c:	ldr	r0, [fp, #-20]	; 0xffffffec
    cf60:	movw	r1, #1
    cf64:	str	r1, [r0]
    cf68:	b	cf78 <MyGame_Example_int_enum_parse_json_enum+0x308>
    cf6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cf70:	str	r0, [fp, #-4]
    cf74:	b	cf9c <MyGame_Example_int_enum_parse_json_enum+0x32c>
    cf78:	b	cf88 <MyGame_Example_int_enum_parse_json_enum+0x318>
    cf7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cf80:	str	r0, [fp, #-4]
    cf84:	b	cf9c <MyGame_Example_int_enum_parse_json_enum+0x32c>
    cf88:	b	cf8c <MyGame_Example_int_enum_parse_json_enum+0x31c>
    cf8c:	b	cf90 <MyGame_Example_int_enum_parse_json_enum+0x320>
    cf90:	b	cf94 <MyGame_Example_int_enum_parse_json_enum+0x324>
    cf94:	ldr	r0, [fp, #-12]
    cf98:	str	r0, [fp, #-4]
    cf9c:	ldr	r0, [fp, #-4]
    cfa0:	mov	sp, fp
    cfa4:	pop	{fp, pc}

0000cfa8 <MyGame_Example_neg_enum_parse_json_enum>:
    cfa8:	push	{fp, lr}
    cfac:	mov	fp, sp
    cfb0:	sub	sp, sp, #64	; 0x40
    cfb4:	ldr	ip, [fp, #12]
    cfb8:	ldr	lr, [fp, #8]
    cfbc:	str	r0, [fp, #-8]
    cfc0:	str	r1, [fp, #-12]
    cfc4:	str	r2, [fp, #-16]
    cfc8:	str	r3, [fp, #-20]	; 0xffffffec
    cfcc:	ldr	r0, [fp, #-12]
    cfd0:	str	r0, [fp, #-24]	; 0xffffffe8
    cfd4:	ldr	r0, [fp, #-12]
    cfd8:	ldr	r1, [fp, #-16]
    cfdc:	str	ip, [sp, #20]
    cfe0:	str	lr, [sp, #16]
    cfe4:	bl	7130 <flatcc_json_parser_symbol_part>
    cfe8:	str	r1, [sp, #28]
    cfec:	str	r0, [sp, #24]
    cff0:	ldr	r0, [sp, #28]
    cff4:	movw	r1, #26417	; 0x6731
    cff8:	movt	r1, #28261	; 0x6e65
    cffc:	cmp	r0, r1
    d000:	bhi	d0a4 <MyGame_Example_neg_enum_parse_json_enum+0xfc>
    d004:	b	d008 <MyGame_Example_neg_enum_parse_json_enum+0x60>
    d008:	ldr	r0, [sp, #28]
    d00c:	movw	r1, #26417	; 0x6731
    d010:	movt	r1, #28261	; 0x6e65
    d014:	teq	r0, r1
    d018:	bne	d094 <MyGame_Example_neg_enum_parse_json_enum+0xec>
    d01c:	b	d020 <MyGame_Example_neg_enum_parse_json_enum+0x78>
    d020:	ldr	r0, [fp, #-8]
    d024:	ldr	r1, [fp, #-12]
    d028:	str	r1, [fp, #-28]	; 0xffffffe4
    d02c:	ldr	r2, [fp, #-16]
    d030:	ldr	r3, [fp, #12]
    d034:	movw	ip, #4
    d038:	str	r3, [sp, #12]
    d03c:	mov	r3, ip
    d040:	ldr	ip, [sp, #12]
    d044:	str	ip, [sp]
    d048:	bl	0 <flatcc_json_parser_match_constant>
    d04c:	str	r0, [fp, #-12]
    d050:	ldr	r0, [fp, #-12]
    d054:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d058:	cmp	r0, r1
    d05c:	beq	d084 <MyGame_Example_neg_enum_parse_json_enum+0xdc>
    d060:	ldr	r0, [fp, #8]
    d064:	mvn	r1, #0
    d068:	str	r1, [r0, #4]
    d06c:	mvn	r1, #11
    d070:	str	r1, [r0]
    d074:	ldr	r0, [fp, #-20]	; 0xffffffec
    d078:	movw	r1, #1
    d07c:	str	r1, [r0]
    d080:	b	d090 <MyGame_Example_neg_enum_parse_json_enum+0xe8>
    d084:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d088:	str	r0, [fp, #-4]
    d08c:	b	d1d8 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    d090:	b	d0a0 <MyGame_Example_neg_enum_parse_json_enum+0xf8>
    d094:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d098:	str	r0, [fp, #-4]
    d09c:	b	d1d8 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    d0a0:	b	d1d0 <MyGame_Example_neg_enum_parse_json_enum+0x228>
    d0a4:	ldr	r0, [sp, #28]
    d0a8:	movw	r1, #26419	; 0x6733
    d0ac:	movt	r1, #28261	; 0x6e65
    d0b0:	teq	r0, r1
    d0b4:	bne	d130 <MyGame_Example_neg_enum_parse_json_enum+0x188>
    d0b8:	b	d0bc <MyGame_Example_neg_enum_parse_json_enum+0x114>
    d0bc:	ldr	r0, [fp, #-8]
    d0c0:	ldr	r1, [fp, #-12]
    d0c4:	str	r1, [fp, #-28]	; 0xffffffe4
    d0c8:	ldr	r2, [fp, #-16]
    d0cc:	ldr	r3, [fp, #12]
    d0d0:	movw	ip, #4
    d0d4:	str	r3, [sp, #8]
    d0d8:	mov	r3, ip
    d0dc:	ldr	ip, [sp, #8]
    d0e0:	str	ip, [sp]
    d0e4:	bl	0 <flatcc_json_parser_match_constant>
    d0e8:	str	r0, [fp, #-12]
    d0ec:	ldr	r0, [fp, #-12]
    d0f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d0f4:	cmp	r0, r1
    d0f8:	beq	d120 <MyGame_Example_neg_enum_parse_json_enum+0x178>
    d0fc:	ldr	r0, [fp, #8]
    d100:	mvn	r1, #0
    d104:	str	r1, [r0, #4]
    d108:	mvn	r1, #9
    d10c:	str	r1, [r0]
    d110:	ldr	r0, [fp, #-20]	; 0xffffffec
    d114:	movw	r1, #1
    d118:	str	r1, [r0]
    d11c:	b	d12c <MyGame_Example_neg_enum_parse_json_enum+0x184>
    d120:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d124:	str	r0, [fp, #-4]
    d128:	b	d1d8 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    d12c:	b	d1cc <MyGame_Example_neg_enum_parse_json_enum+0x224>
    d130:	ldr	r0, [sp, #28]
    d134:	movw	r1, #26418	; 0x6732
    d138:	movt	r1, #28261	; 0x6e65
    d13c:	teq	r0, r1
    d140:	bne	d1bc <MyGame_Example_neg_enum_parse_json_enum+0x214>
    d144:	b	d148 <MyGame_Example_neg_enum_parse_json_enum+0x1a0>
    d148:	ldr	r0, [fp, #-8]
    d14c:	ldr	r1, [fp, #-12]
    d150:	str	r1, [fp, #-28]	; 0xffffffe4
    d154:	ldr	r2, [fp, #-16]
    d158:	ldr	r3, [fp, #12]
    d15c:	movw	ip, #4
    d160:	str	r3, [sp, #4]
    d164:	mov	r3, ip
    d168:	ldr	ip, [sp, #4]
    d16c:	str	ip, [sp]
    d170:	bl	0 <flatcc_json_parser_match_constant>
    d174:	str	r0, [fp, #-12]
    d178:	ldr	r0, [fp, #-12]
    d17c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d180:	cmp	r0, r1
    d184:	beq	d1ac <MyGame_Example_neg_enum_parse_json_enum+0x204>
    d188:	ldr	r0, [fp, #8]
    d18c:	mvn	r1, #0
    d190:	str	r1, [r0, #4]
    d194:	mvn	r1, #10
    d198:	str	r1, [r0]
    d19c:	ldr	r0, [fp, #-20]	; 0xffffffec
    d1a0:	movw	r1, #1
    d1a4:	str	r1, [r0]
    d1a8:	b	d1b8 <MyGame_Example_neg_enum_parse_json_enum+0x210>
    d1ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d1b0:	str	r0, [fp, #-4]
    d1b4:	b	d1d8 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    d1b8:	b	d1c8 <MyGame_Example_neg_enum_parse_json_enum+0x220>
    d1bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d1c0:	str	r0, [fp, #-4]
    d1c4:	b	d1d8 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    d1c8:	b	d1cc <MyGame_Example_neg_enum_parse_json_enum+0x224>
    d1cc:	b	d1d0 <MyGame_Example_neg_enum_parse_json_enum+0x228>
    d1d0:	ldr	r0, [fp, #-12]
    d1d4:	str	r0, [fp, #-4]
    d1d8:	ldr	r0, [fp, #-4]
    d1dc:	mov	sp, fp
    d1e0:	pop	{fp, pc}

0000d1e4 <MyGame_Example_notemptyenum_parse_json_enum>:
    d1e4:	push	{fp, lr}
    d1e8:	mov	fp, sp
    d1ec:	sub	sp, sp, #56	; 0x38
    d1f0:	ldr	ip, [fp, #12]
    d1f4:	ldr	lr, [fp, #8]
    d1f8:	str	r0, [fp, #-8]
    d1fc:	str	r1, [fp, #-12]
    d200:	str	r2, [fp, #-16]
    d204:	str	r3, [fp, #-20]	; 0xffffffec
    d208:	ldr	r0, [fp, #-12]
    d20c:	str	r0, [fp, #-24]	; 0xffffffe8
    d210:	ldr	r0, [fp, #-12]
    d214:	ldr	r1, [fp, #-16]
    d218:	str	ip, [sp, #12]
    d21c:	str	lr, [sp, #8]
    d220:	bl	7130 <flatcc_json_parser_symbol_part>
    d224:	str	r1, [sp, #20]
    d228:	str	r0, [sp, #16]
    d22c:	ldrb	r0, [sp, #23]
    d230:	mov	r1, #2013265920	; 0x78000000
    d234:	teq	r1, r0, lsl #24
    d238:	bne	d2b0 <MyGame_Example_notemptyenum_parse_json_enum+0xcc>
    d23c:	b	d240 <MyGame_Example_notemptyenum_parse_json_enum+0x5c>
    d240:	ldr	r0, [fp, #-8]
    d244:	ldr	r1, [fp, #-12]
    d248:	str	r1, [sp, #28]
    d24c:	ldr	r2, [fp, #-16]
    d250:	ldr	r3, [fp, #12]
    d254:	movw	ip, #1
    d258:	str	r3, [sp, #4]
    d25c:	mov	r3, ip
    d260:	ldr	ip, [sp, #4]
    d264:	str	ip, [sp]
    d268:	bl	0 <flatcc_json_parser_match_constant>
    d26c:	str	r0, [fp, #-12]
    d270:	ldr	r0, [fp, #-12]
    d274:	ldr	r1, [sp, #28]
    d278:	cmp	r0, r1
    d27c:	beq	d2a0 <MyGame_Example_notemptyenum_parse_json_enum+0xbc>
    d280:	ldr	r0, [fp, #8]
    d284:	mov	r1, #0
    d288:	str	r1, [r0, #4]
    d28c:	str	r1, [r0]
    d290:	ldr	r0, [fp, #-20]	; 0xffffffec
    d294:	movw	r1, #0
    d298:	str	r1, [r0]
    d29c:	b	d2ac <MyGame_Example_notemptyenum_parse_json_enum+0xc8>
    d2a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d2a4:	str	r0, [fp, #-4]
    d2a8:	b	d2c4 <MyGame_Example_notemptyenum_parse_json_enum+0xe0>
    d2ac:	b	d2bc <MyGame_Example_notemptyenum_parse_json_enum+0xd8>
    d2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d2b4:	str	r0, [fp, #-4]
    d2b8:	b	d2c4 <MyGame_Example_notemptyenum_parse_json_enum+0xe0>
    d2bc:	ldr	r0, [fp, #-12]
    d2c0:	str	r0, [fp, #-4]
    d2c4:	ldr	r0, [fp, #-4]
    d2c8:	mov	sp, fp
    d2cc:	pop	{fp, pc}

0000d2d0 <Fantasy_Character_parse_json_enum>:
    d2d0:	push	{fp, lr}
    d2d4:	mov	fp, sp
    d2d8:	sub	sp, sp, #80	; 0x50
    d2dc:	ldr	ip, [fp, #12]
    d2e0:	ldr	lr, [fp, #8]
    d2e4:	str	r0, [fp, #-8]
    d2e8:	str	r1, [fp, #-12]
    d2ec:	str	r2, [fp, #-16]
    d2f0:	str	r3, [fp, #-20]	; 0xffffffec
    d2f4:	ldr	r0, [fp, #-12]
    d2f8:	str	r0, [fp, #-24]	; 0xffffffe8
    d2fc:	ldr	r0, [fp, #-12]
    d300:	ldr	r1, [fp, #-16]
    d304:	str	ip, [sp, #36]	; 0x24
    d308:	str	lr, [sp, #32]
    d30c:	bl	7130 <flatcc_json_parser_symbol_part>
    d310:	str	r1, [sp, #44]	; 0x2c
    d314:	str	r0, [sp, #40]	; 0x28
    d318:	ldr	r0, [sp, #44]	; 0x2c
    d31c:	movw	r1, #20036	; 0x4e44
    d320:	movt	r1, #20047	; 0x4e4f
    d324:	cmp	r0, r1
    d328:	bhi	d564 <Fantasy_Character_parse_json_enum+0x294>
    d32c:	b	d330 <Fantasy_Character_parse_json_enum+0x60>
    d330:	ldr	r0, [sp, #40]	; 0x28
    d334:	ldr	r1, [sp, #44]	; 0x2c
    d338:	movw	r2, #28159	; 0x6dff
    d33c:	movt	r2, #18017	; 0x4661
    d340:	subs	r0, r2, r0
    d344:	movw	r2, #28523	; 0x6f6b
    d348:	movt	r2, #17007	; 0x426f
    d34c:	sbcs	r1, r2, r1
    d350:	bcc	d404 <Fantasy_Character_parse_json_enum+0x134>
    d354:	b	d358 <Fantasy_Character_parse_json_enum+0x88>
    d358:	ldrb	r0, [sp, #43]	; 0x2b
    d35c:	ldr	r1, [sp, #44]	; 0x2c
    d360:	movw	r2, #27756	; 0x6c6c
    d364:	movt	r2, #16997	; 0x4265
    d368:	eor	r1, r1, r2
    d36c:	eor	r0, r0, #101	; 0x65
    d370:	orr	r0, r1, r0, lsl #24
    d374:	cmp	r0, #0
    d378:	bne	d3f4 <Fantasy_Character_parse_json_enum+0x124>
    d37c:	b	d380 <Fantasy_Character_parse_json_enum+0xb0>
    d380:	ldr	r0, [fp, #-8]
    d384:	ldr	r1, [fp, #-12]
    d388:	str	r1, [fp, #-28]	; 0xffffffe4
    d38c:	ldr	r2, [fp, #-16]
    d390:	ldr	r3, [fp, #12]
    d394:	movw	ip, #5
    d398:	str	r3, [sp, #28]
    d39c:	mov	r3, ip
    d3a0:	ldr	ip, [sp, #28]
    d3a4:	str	ip, [sp]
    d3a8:	bl	0 <flatcc_json_parser_match_constant>
    d3ac:	str	r0, [fp, #-12]
    d3b0:	ldr	r0, [fp, #-12]
    d3b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d3b8:	cmp	r0, r1
    d3bc:	beq	d3e4 <Fantasy_Character_parse_json_enum+0x114>
    d3c0:	ldr	r0, [fp, #8]
    d3c4:	mov	r1, #0
    d3c8:	str	r1, [r0, #4]
    d3cc:	mov	r1, #9
    d3d0:	str	r1, [r0]
    d3d4:	ldr	r0, [fp, #-20]	; 0xffffffec
    d3d8:	movw	r1, #0
    d3dc:	str	r1, [r0]
    d3e0:	b	d3f0 <Fantasy_Character_parse_json_enum+0x120>
    d3e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d3e8:	str	r0, [fp, #-4]
    d3ec:	b	d860 <Fantasy_Character_parse_json_enum+0x590>
    d3f0:	b	d400 <Fantasy_Character_parse_json_enum+0x130>
    d3f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d3f8:	str	r0, [fp, #-4]
    d3fc:	b	d860 <Fantasy_Character_parse_json_enum+0x590>
    d400:	b	d560 <Fantasy_Character_parse_json_enum+0x290>
    d404:	ldrb	r0, [sp, #43]	; 0x2b
    d408:	ldr	r1, [sp, #44]	; 0x2c
    d40c:	movw	r2, #19553	; 0x4c61
    d410:	movt	r2, #19829	; 0x4d75
    d414:	eor	r1, r1, r2
    d418:	eor	r0, r0, #110	; 0x6e
    d41c:	orr	r0, r1, r0, lsl #24
    d420:	cmp	r0, #0
    d424:	bne	d4a0 <Fantasy_Character_parse_json_enum+0x1d0>
    d428:	b	d42c <Fantasy_Character_parse_json_enum+0x15c>
    d42c:	ldr	r0, [fp, #-8]
    d430:	ldr	r1, [fp, #-12]
    d434:	str	r1, [fp, #-28]	; 0xffffffe4
    d438:	ldr	r2, [fp, #-16]
    d43c:	ldr	r3, [fp, #12]
    d440:	movw	ip, #5
    d444:	str	r3, [sp, #24]
    d448:	mov	r3, ip
    d44c:	ldr	ip, [sp, #24]
    d450:	str	ip, [sp]
    d454:	bl	0 <flatcc_json_parser_match_constant>
    d458:	str	r0, [fp, #-12]
    d45c:	ldr	r0, [fp, #-12]
    d460:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d464:	cmp	r0, r1
    d468:	beq	d490 <Fantasy_Character_parse_json_enum+0x1c0>
    d46c:	ldr	r0, [fp, #8]
    d470:	mov	r1, #0
    d474:	str	r1, [r0, #4]
    d478:	mov	r1, #2
    d47c:	str	r1, [r0]
    d480:	ldr	r0, [fp, #-20]	; 0xffffffec
    d484:	movw	r1, #0
    d488:	str	r1, [r0]
    d48c:	b	d49c <Fantasy_Character_parse_json_enum+0x1cc>
    d490:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d494:	str	r0, [fp, #-4]
    d498:	b	d860 <Fantasy_Character_parse_json_enum+0x590>
    d49c:	b	d55c <Fantasy_Character_parse_json_enum+0x28c>
    d4a0:	ldr	r0, [sp, #40]	; 0x28
    d4a4:	ldr	r1, [sp, #44]	; 0x2c
    d4a8:	movw	r2, #28527	; 0x6f6f
    d4ac:	movt	r2, #66	; 0x42
    d4b0:	eor	r2, r2, r1, lsr #8
    d4b4:	lsr	r0, r0, #8
    d4b8:	orr	r0, r0, r1, lsl #24
    d4bc:	movw	r1, #24942	; 0x616e
    d4c0:	movt	r1, #27462	; 0x6b46
    d4c4:	eor	r0, r0, r1
    d4c8:	orr	r0, r0, r2
    d4cc:	cmp	r0, #0
    d4d0:	bne	d54c <Fantasy_Character_parse_json_enum+0x27c>
    d4d4:	b	d4d8 <Fantasy_Character_parse_json_enum+0x208>
    d4d8:	ldr	r0, [fp, #-8]
    d4dc:	ldr	r1, [fp, #-12]
    d4e0:	str	r1, [fp, #-28]	; 0xffffffe4
    d4e4:	ldr	r2, [fp, #-16]
    d4e8:	ldr	r3, [fp, #12]
    d4ec:	movw	ip, #7
    d4f0:	str	r3, [sp, #20]
    d4f4:	mov	r3, ip
    d4f8:	ldr	ip, [sp, #20]
    d4fc:	str	ip, [sp]
    d500:	bl	0 <flatcc_json_parser_match_constant>
    d504:	str	r0, [fp, #-12]
    d508:	ldr	r0, [fp, #-12]
    d50c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d510:	cmp	r0, r1
    d514:	beq	d53c <Fantasy_Character_parse_json_enum+0x26c>
    d518:	ldr	r0, [fp, #8]
    d51c:	mov	r1, #0
    d520:	str	r1, [r0, #4]
    d524:	mov	r1, #10
    d528:	str	r1, [r0]
    d52c:	ldr	r0, [fp, #-20]	; 0xffffffec
    d530:	movw	r1, #0
    d534:	str	r1, [r0]
    d538:	b	d548 <Fantasy_Character_parse_json_enum+0x278>
    d53c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d540:	str	r0, [fp, #-4]
    d544:	b	d860 <Fantasy_Character_parse_json_enum+0x590>
    d548:	b	d558 <Fantasy_Character_parse_json_enum+0x288>
    d54c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d550:	str	r0, [fp, #-4]
    d554:	b	d860 <Fantasy_Character_parse_json_enum+0x590>
    d558:	b	d55c <Fantasy_Character_parse_json_enum+0x28c>
    d55c:	b	d560 <Fantasy_Character_parse_json_enum+0x290>
    d560:	b	d858 <Fantasy_Character_parse_json_enum+0x588>
    d564:	ldr	r0, [sp, #40]	; 0x28
    d568:	ldr	r1, [sp, #44]	; 0x2c
    d56c:	mvn	r2, #-1912602624	; 0x8e000000
    d570:	subs	r0, r2, r0
    d574:	movw	r2, #26725	; 0x6865
    d578:	movt	r2, #20340	; 0x4f74
    d57c:	sbcs	r1, r2, r1
    d580:	bcc	d620 <Fantasy_Character_parse_json_enum+0x350>
    d584:	b	d588 <Fantasy_Character_parse_json_enum+0x2b8>
    d588:	ldr	r0, [sp, #44]	; 0x2c
    d58c:	movw	r1, #20037	; 0x4e45
    d590:	movt	r1, #20047	; 0x4e4f
    d594:	teq	r0, r1
    d598:	bne	d610 <Fantasy_Character_parse_json_enum+0x340>
    d59c:	b	d5a0 <Fantasy_Character_parse_json_enum+0x2d0>
    d5a0:	ldr	r0, [fp, #-8]
    d5a4:	ldr	r1, [fp, #-12]
    d5a8:	str	r1, [fp, #-28]	; 0xffffffe4
    d5ac:	ldr	r2, [fp, #-16]
    d5b0:	ldr	r3, [fp, #12]
    d5b4:	movw	ip, #4
    d5b8:	str	r3, [sp, #16]
    d5bc:	mov	r3, ip
    d5c0:	ldr	ip, [sp, #16]
    d5c4:	str	ip, [sp]
    d5c8:	bl	0 <flatcc_json_parser_match_constant>
    d5cc:	str	r0, [fp, #-12]
    d5d0:	ldr	r0, [fp, #-12]
    d5d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d5d8:	cmp	r0, r1
    d5dc:	beq	d600 <Fantasy_Character_parse_json_enum+0x330>
    d5e0:	ldr	r0, [fp, #8]
    d5e4:	mov	r1, #0
    d5e8:	str	r1, [r0, #4]
    d5ec:	str	r1, [r0]
    d5f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    d5f4:	movw	r1, #0
    d5f8:	str	r1, [r0]
    d5fc:	b	d60c <Fantasy_Character_parse_json_enum+0x33c>
    d600:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d604:	str	r0, [fp, #-4]
    d608:	b	d860 <Fantasy_Character_parse_json_enum+0x590>
    d60c:	b	d61c <Fantasy_Character_parse_json_enum+0x34c>
    d610:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d614:	str	r0, [fp, #-4]
    d618:	b	d860 <Fantasy_Character_parse_json_enum+0x590>
    d61c:	b	d854 <Fantasy_Character_parse_json_enum+0x584>
    d620:	ldr	r0, [sp, #40]	; 0x28
    d624:	ldr	r1, [sp, #44]	; 0x2c
    d628:	movw	r2, #25963	; 0x656b
    d62c:	movt	r2, #28282	; 0x6e7a
    d630:	subs	r0, r2, r0
    d634:	movw	r2, #28789	; 0x7075
    d638:	movt	r2, #21089	; 0x5261
    d63c:	sbcs	r1, r2, r1
    d640:	bcc	d6f4 <Fantasy_Character_parse_json_enum+0x424>
    d644:	b	d648 <Fantasy_Character_parse_json_enum+0x378>
    d648:	ldrb	r0, [sp, #43]	; 0x2b
    d64c:	ldr	r1, [sp, #44]	; 0x2c
    d650:	movw	r2, #26725	; 0x6865
    d654:	movt	r2, #20340	; 0x4f74
    d658:	eor	r1, r1, r2
    d65c:	eor	r0, r0, #114	; 0x72
    d660:	orr	r0, r1, r0, lsl #24
    d664:	cmp	r0, #0
    d668:	bne	d6e4 <Fantasy_Character_parse_json_enum+0x414>
    d66c:	b	d670 <Fantasy_Character_parse_json_enum+0x3a0>
    d670:	ldr	r0, [fp, #-8]
    d674:	ldr	r1, [fp, #-12]
    d678:	str	r1, [fp, #-28]	; 0xffffffe4
    d67c:	ldr	r2, [fp, #-16]
    d680:	ldr	r3, [fp, #12]
    d684:	movw	ip, #5
    d688:	str	r3, [sp, #12]
    d68c:	mov	r3, ip
    d690:	ldr	ip, [sp, #12]
    d694:	str	ip, [sp]
    d698:	bl	0 <flatcc_json_parser_match_constant>
    d69c:	str	r0, [fp, #-12]
    d6a0:	ldr	r0, [fp, #-12]
    d6a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d6a8:	cmp	r0, r1
    d6ac:	beq	d6d4 <Fantasy_Character_parse_json_enum+0x404>
    d6b0:	ldr	r0, [fp, #8]
    d6b4:	mov	r1, #0
    d6b8:	str	r1, [r0, #4]
    d6bc:	mov	r1, #11
    d6c0:	str	r1, [r0]
    d6c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    d6c8:	movw	r1, #0
    d6cc:	str	r1, [r0]
    d6d0:	b	d6e0 <Fantasy_Character_parse_json_enum+0x410>
    d6d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d6d8:	str	r0, [fp, #-4]
    d6dc:	b	d860 <Fantasy_Character_parse_json_enum+0x590>
    d6e0:	b	d6f0 <Fantasy_Character_parse_json_enum+0x420>
    d6e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d6e8:	str	r0, [fp, #-4]
    d6ec:	b	d860 <Fantasy_Character_parse_json_enum+0x590>
    d6f0:	b	d850 <Fantasy_Character_parse_json_enum+0x580>
    d6f4:	ldrh	r0, [sp, #42]	; 0x2a
    d6f8:	ldr	r1, [sp, #44]	; 0x2c
    d6fc:	movw	r2, #21870	; 0x556e
    d700:	eor	r2, r2, r1, lsr #16
    d704:	orr	r0, r0, r1, lsl #16
    d708:	movw	r1, #25956	; 0x6564
    d70c:	movt	r1, #30067	; 0x7573
    d710:	eor	r0, r0, r1
    d714:	orr	r0, r0, r2
    d718:	cmp	r0, #0
    d71c:	bne	d798 <Fantasy_Character_parse_json_enum+0x4c8>
    d720:	b	d724 <Fantasy_Character_parse_json_enum+0x454>
    d724:	ldr	r0, [fp, #-8]
    d728:	ldr	r1, [fp, #-12]
    d72c:	str	r1, [fp, #-28]	; 0xffffffe4
    d730:	ldr	r2, [fp, #-16]
    d734:	ldr	r3, [fp, #12]
    d738:	movw	ip, #6
    d73c:	str	r3, [sp, #8]
    d740:	mov	r3, ip
    d744:	ldr	ip, [sp, #8]
    d748:	str	ip, [sp]
    d74c:	bl	0 <flatcc_json_parser_match_constant>
    d750:	str	r0, [fp, #-12]
    d754:	ldr	r0, [fp, #-12]
    d758:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d75c:	cmp	r0, r1
    d760:	beq	d788 <Fantasy_Character_parse_json_enum+0x4b8>
    d764:	ldr	r0, [fp, #8]
    d768:	mov	r1, #0
    d76c:	str	r1, [r0, #4]
    d770:	mov	r1, #255	; 0xff
    d774:	str	r1, [r0]
    d778:	ldr	r0, [fp, #-20]	; 0xffffffec
    d77c:	movw	r1, #0
    d780:	str	r1, [r0]
    d784:	b	d794 <Fantasy_Character_parse_json_enum+0x4c4>
    d788:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d78c:	str	r0, [fp, #-4]
    d790:	b	d860 <Fantasy_Character_parse_json_enum+0x590>
    d794:	b	d84c <Fantasy_Character_parse_json_enum+0x57c>
    d798:	ldr	r0, [sp, #40]	; 0x28
    d79c:	ldr	r1, [sp, #44]	; 0x2c
    d7a0:	movw	r2, #28789	; 0x7075
    d7a4:	movt	r2, #21089	; 0x5261
    d7a8:	eor	r1, r1, r2
    d7ac:	movw	r2, #25964	; 0x656c
    d7b0:	movt	r2, #28282	; 0x6e7a
    d7b4:	eor	r0, r0, r2
    d7b8:	orr	r0, r0, r1
    d7bc:	cmp	r0, #0
    d7c0:	bne	d83c <Fantasy_Character_parse_json_enum+0x56c>
    d7c4:	b	d7c8 <Fantasy_Character_parse_json_enum+0x4f8>
    d7c8:	ldr	r0, [fp, #-8]
    d7cc:	ldr	r1, [fp, #-12]
    d7d0:	str	r1, [fp, #-28]	; 0xffffffe4
    d7d4:	ldr	r2, [fp, #-16]
    d7d8:	ldr	r3, [fp, #12]
    d7dc:	movw	ip, #8
    d7e0:	str	r3, [sp, #4]
    d7e4:	mov	r3, ip
    d7e8:	ldr	ip, [sp, #4]
    d7ec:	str	ip, [sp]
    d7f0:	bl	0 <flatcc_json_parser_match_constant>
    d7f4:	str	r0, [fp, #-12]
    d7f8:	ldr	r0, [fp, #-12]
    d7fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d800:	cmp	r0, r1
    d804:	beq	d82c <Fantasy_Character_parse_json_enum+0x55c>
    d808:	ldr	r0, [fp, #8]
    d80c:	mov	r1, #0
    d810:	str	r1, [r0, #4]
    d814:	mov	r1, #8
    d818:	str	r1, [r0]
    d81c:	ldr	r0, [fp, #-20]	; 0xffffffec
    d820:	movw	r1, #0
    d824:	str	r1, [r0]
    d828:	b	d838 <Fantasy_Character_parse_json_enum+0x568>
    d82c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d830:	str	r0, [fp, #-4]
    d834:	b	d860 <Fantasy_Character_parse_json_enum+0x590>
    d838:	b	d848 <Fantasy_Character_parse_json_enum+0x578>
    d83c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d840:	str	r0, [fp, #-4]
    d844:	b	d860 <Fantasy_Character_parse_json_enum+0x590>
    d848:	b	d84c <Fantasy_Character_parse_json_enum+0x57c>
    d84c:	b	d850 <Fantasy_Character_parse_json_enum+0x580>
    d850:	b	d854 <Fantasy_Character_parse_json_enum+0x584>
    d854:	b	d858 <Fantasy_Character_parse_json_enum+0x588>
    d858:	ldr	r0, [fp, #-12]
    d85c:	str	r0, [fp, #-4]
    d860:	ldr	r0, [fp, #-4]
    d864:	mov	sp, fp
    d868:	pop	{fp, pc}

0000d86c <MyGame_OtherNameSpace_FromInclude_parse_json_enum>:
    d86c:	push	{fp, lr}
    d870:	mov	fp, sp
    d874:	sub	sp, sp, #64	; 0x40
    d878:	ldr	ip, [fp, #12]
    d87c:	ldr	lr, [fp, #8]
    d880:	str	r0, [fp, #-8]
    d884:	str	r1, [fp, #-12]
    d888:	str	r2, [fp, #-16]
    d88c:	str	r3, [fp, #-20]	; 0xffffffec
    d890:	ldr	r0, [fp, #-12]
    d894:	str	r0, [fp, #-24]	; 0xffffffe8
    d898:	ldr	r0, [fp, #-12]
    d89c:	ldr	r1, [fp, #-16]
    d8a0:	str	ip, [sp, #20]
    d8a4:	str	lr, [sp, #16]
    d8a8:	bl	7130 <flatcc_json_parser_symbol_part>
    d8ac:	str	r1, [sp, #28]
    d8b0:	str	r0, [sp, #24]
    d8b4:	ldr	r0, [sp, #28]
    d8b8:	bic	r0, r0, #255	; 0xff
    d8bc:	movw	r1, #28416	; 0x6f00
    d8c0:	movt	r1, #18031	; 0x466f
    d8c4:	teq	r0, r1
    d8c8:	bne	d93c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd0>
    d8cc:	b	d8d0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x64>
    d8d0:	ldr	r0, [fp, #-8]
    d8d4:	ldr	r1, [fp, #-12]
    d8d8:	str	r1, [fp, #-28]	; 0xffffffe4
    d8dc:	ldr	r2, [fp, #-16]
    d8e0:	ldr	r3, [fp, #12]
    d8e4:	movw	ip, #3
    d8e8:	str	r3, [sp, #12]
    d8ec:	mov	r3, ip
    d8f0:	ldr	ip, [sp, #12]
    d8f4:	str	ip, [sp]
    d8f8:	bl	0 <flatcc_json_parser_match_constant>
    d8fc:	str	r0, [fp, #-12]
    d900:	ldr	r0, [fp, #-12]
    d904:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d908:	cmp	r0, r1
    d90c:	beq	d934 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xc8>
    d910:	ldr	r0, [fp, #8]
    d914:	mov	r1, #0
    d918:	str	r1, [r0, #4]
    d91c:	mov	r1, #17
    d920:	str	r1, [r0]
    d924:	ldr	r0, [fp, #-20]	; 0xffffffec
    d928:	movw	r1, #0
    d92c:	str	r1, [r0]
    d930:	b	d938 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xcc>
    d934:	b	d944 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd8>
    d938:	b	d940 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd4>
    d93c:	b	d944 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd8>
    d940:	b	da3c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d0>
    d944:	ldr	r0, [sp, #24]
    d948:	ldr	r1, [sp, #28]
    d94c:	movw	r2, #25452	; 0x636c
    d950:	movt	r2, #18798	; 0x496e
    d954:	eor	r1, r1, r2
    d958:	movw	r2, #25942	; 0x6556
    d95c:	movt	r2, #30052	; 0x7564
    d960:	eor	r0, r0, r2
    d964:	orr	r0, r0, r1
    d968:	cmp	r0, #0
    d96c:	bne	da2c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1c0>
    d970:	b	d974 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x108>
    d974:	ldr	r0, [fp, #-12]
    d978:	add	r0, r0, #8
    d97c:	str	r0, [fp, #-12]
    d980:	ldr	r0, [fp, #-12]
    d984:	ldr	r1, [fp, #-16]
    d988:	bl	7130 <flatcc_json_parser_symbol_part>
    d98c:	str	r1, [sp, #28]
    d990:	str	r0, [sp, #24]
    d994:	ldrh	r0, [sp, #30]
    d998:	movw	r1, #0
    d99c:	movt	r1, #24940	; 0x616c
    d9a0:	teq	r1, r0, lsl #16
    d9a4:	bne	da1c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1b0>
    d9a8:	b	d9ac <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x140>
    d9ac:	ldr	r0, [fp, #-8]
    d9b0:	ldr	r1, [fp, #-12]
    d9b4:	str	r1, [fp, #-28]	; 0xffffffe4
    d9b8:	ldr	r2, [fp, #-16]
    d9bc:	ldr	r3, [fp, #12]
    d9c0:	movw	ip, #2
    d9c4:	str	r3, [sp, #8]
    d9c8:	mov	r3, ip
    d9cc:	ldr	ip, [sp, #8]
    d9d0:	str	ip, [sp]
    d9d4:	bl	0 <flatcc_json_parser_match_constant>
    d9d8:	str	r0, [fp, #-12]
    d9dc:	ldr	r0, [fp, #-12]
    d9e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d9e4:	cmp	r0, r1
    d9e8:	beq	da0c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1a0>
    d9ec:	ldr	r0, [fp, #8]
    d9f0:	mov	r1, #0
    d9f4:	str	r1, [r0, #4]
    d9f8:	str	r1, [r0]
    d9fc:	ldr	r0, [fp, #-20]	; 0xffffffec
    da00:	movw	r1, #0
    da04:	str	r1, [r0]
    da08:	b	da18 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1ac>
    da0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    da10:	str	r0, [fp, #-4]
    da14:	b	da44 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d8>
    da18:	b	da28 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1bc>
    da1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    da20:	str	r0, [fp, #-4]
    da24:	b	da44 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d8>
    da28:	b	da38 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1cc>
    da2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    da30:	str	r0, [fp, #-4]
    da34:	b	da44 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d8>
    da38:	b	da3c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d0>
    da3c:	ldr	r0, [fp, #-12]
    da40:	str	r0, [fp, #-4]
    da44:	ldr	r0, [fp, #-4]
    da48:	mov	sp, fp
    da4c:	pop	{fp, pc}

0000da50 <flatcc_json_parser_coerce_int8>:
    da50:	push	{r4, sl, fp, lr}
    da54:	add	fp, sp, #8
    da58:	sub	sp, sp, #32
    da5c:	ldr	ip, [fp, #12]
    da60:	ldr	lr, [fp, #8]
    da64:	ldr	r4, [fp, #16]
    da68:	str	r0, [fp, #-16]
    da6c:	str	r1, [sp, #20]
    da70:	str	r2, [sp, #16]
    da74:	str	r3, [sp, #12]
    da78:	str	ip, [sp, #4]
    da7c:	str	lr, [sp]
    da80:	ldr	r0, [sp, #12]
    da84:	cmp	r0, #0
    da88:	beq	dad4 <flatcc_json_parser_coerce_int8+0x84>
    da8c:	ldr	r0, [sp]
    da90:	ldr	r1, [sp, #4]
    da94:	subs	r0, r0, #129	; 0x81
    da98:	sbcs	r1, r1, #0
    da9c:	bcc	dac0 <flatcc_json_parser_coerce_int8+0x70>
    daa0:	b	daa4 <flatcc_json_parser_coerce_int8+0x54>
    daa4:	ldr	r0, [fp, #-16]
    daa8:	ldr	r1, [sp, #20]
    daac:	ldr	r2, [sp, #16]
    dab0:	movw	r3, #8
    dab4:	bl	0 <flatcc_json_parser_set_error>
    dab8:	str	r0, [fp, #-12]
    dabc:	b	db1c <flatcc_json_parser_coerce_int8+0xcc>
    dac0:	ldr	r0, [sp]
    dac4:	rsb	r0, r0, #0
    dac8:	ldr	r1, [fp, #16]
    dacc:	strb	r0, [r1]
    dad0:	b	db14 <flatcc_json_parser_coerce_int8+0xc4>
    dad4:	ldr	r0, [sp]
    dad8:	ldr	r1, [sp, #4]
    dadc:	subs	r0, r0, #128	; 0x80
    dae0:	sbcs	r1, r1, #0
    dae4:	bcc	db08 <flatcc_json_parser_coerce_int8+0xb8>
    dae8:	b	daec <flatcc_json_parser_coerce_int8+0x9c>
    daec:	ldr	r0, [fp, #-16]
    daf0:	ldr	r1, [sp, #20]
    daf4:	ldr	r2, [sp, #16]
    daf8:	movw	r3, #7
    dafc:	bl	0 <flatcc_json_parser_set_error>
    db00:	str	r0, [fp, #-12]
    db04:	b	db1c <flatcc_json_parser_coerce_int8+0xcc>
    db08:	ldrb	r0, [sp]
    db0c:	ldr	r1, [fp, #16]
    db10:	strb	r0, [r1]
    db14:	ldr	r0, [sp, #20]
    db18:	str	r0, [fp, #-12]
    db1c:	ldr	r0, [fp, #-12]
    db20:	sub	sp, fp, #8
    db24:	pop	{r4, sl, fp, pc}

0000db28 <flatcc_json_parser_constant_start>:
    db28:	push	{fp, lr}
    db2c:	mov	fp, sp
    db30:	sub	sp, sp, #16
    db34:	str	r0, [fp, #-4]
    db38:	str	r1, [sp, #8]
    db3c:	str	r2, [sp, #4]
    db40:	ldr	r0, [fp, #-4]
    db44:	ldr	r1, [sp, #8]
    db48:	ldr	r2, [sp, #4]
    db4c:	bl	7084 <flatcc_json_parser_symbol_start>
    db50:	str	r0, [sp, #8]
    db54:	ldr	r0, [fp, #-4]
    db58:	ldr	r0, [r0, #12]
    db5c:	cmp	r0, #0
    db60:	bne	db78 <flatcc_json_parser_constant_start+0x50>
    db64:	ldr	r0, [fp, #-4]
    db68:	ldr	r1, [sp, #8]
    db6c:	ldr	r2, [sp, #4]
    db70:	bl	c548 <flatcc_json_parser_space>
    db74:	str	r0, [sp, #8]
    db78:	ldr	r0, [sp, #8]
    db7c:	mov	sp, fp
    db80:	pop	{fp, pc}

0000db84 <flatbuffers_int8_cast_to_pe>:
    db84:	sub	sp, sp, #4
    db88:	strb	r0, [sp, #3]
    db8c:	ldrsb	r0, [sp, #3]
    db90:	add	sp, sp, #4
    db94:	bx	lr

0000db98 <flatcc_json_parser_coerce_uint8>:
    db98:	push	{r4, sl, fp, lr}
    db9c:	add	fp, sp, #8
    dba0:	sub	sp, sp, #32
    dba4:	ldr	ip, [fp, #12]
    dba8:	ldr	lr, [fp, #8]
    dbac:	ldr	r4, [fp, #16]
    dbb0:	str	r0, [fp, #-16]
    dbb4:	str	r1, [sp, #20]
    dbb8:	str	r2, [sp, #16]
    dbbc:	str	r3, [sp, #12]
    dbc0:	str	ip, [sp, #4]
    dbc4:	str	lr, [sp]
    dbc8:	ldr	r0, [sp, #12]
    dbcc:	cmp	r0, #0
    dbd0:	beq	dbf0 <flatcc_json_parser_coerce_uint8+0x58>
    dbd4:	ldr	r0, [fp, #-16]
    dbd8:	ldr	r1, [sp, #20]
    dbdc:	ldr	r2, [sp, #16]
    dbe0:	movw	r3, #8
    dbe4:	bl	0 <flatcc_json_parser_set_error>
    dbe8:	str	r0, [fp, #-12]
    dbec:	b	dc38 <flatcc_json_parser_coerce_uint8+0xa0>
    dbf0:	ldr	r0, [sp]
    dbf4:	ldr	r1, [sp, #4]
    dbf8:	subs	r0, r0, #256	; 0x100
    dbfc:	sbcs	r1, r1, #0
    dc00:	bcc	dc24 <flatcc_json_parser_coerce_uint8+0x8c>
    dc04:	b	dc08 <flatcc_json_parser_coerce_uint8+0x70>
    dc08:	ldr	r0, [fp, #-16]
    dc0c:	ldr	r1, [sp, #20]
    dc10:	ldr	r2, [sp, #16]
    dc14:	movw	r3, #7
    dc18:	bl	0 <flatcc_json_parser_set_error>
    dc1c:	str	r0, [fp, #-12]
    dc20:	b	dc38 <flatcc_json_parser_coerce_uint8+0xa0>
    dc24:	ldrb	r0, [sp]
    dc28:	ldr	r1, [fp, #16]
    dc2c:	strb	r0, [r1]
    dc30:	ldr	r0, [sp, #20]
    dc34:	str	r0, [fp, #-12]
    dc38:	ldr	r0, [fp, #-12]
    dc3c:	sub	sp, fp, #8
    dc40:	pop	{r4, sl, fp, pc}

0000dc44 <flatbuffers_uint8_cast_to_pe>:
    dc44:	sub	sp, sp, #4
    dc48:	strb	r0, [sp, #3]
    dc4c:	ldrb	r0, [sp, #3]
    dc50:	add	sp, sp, #4
    dc54:	bx	lr

0000dc58 <flatcc_json_parser_coerce_int16>:
    dc58:	push	{r4, sl, fp, lr}
    dc5c:	add	fp, sp, #8
    dc60:	sub	sp, sp, #32
    dc64:	ldr	ip, [fp, #12]
    dc68:	ldr	lr, [fp, #8]
    dc6c:	ldr	r4, [fp, #16]
    dc70:	str	r0, [fp, #-16]
    dc74:	str	r1, [sp, #20]
    dc78:	str	r2, [sp, #16]
    dc7c:	str	r3, [sp, #12]
    dc80:	str	ip, [sp, #4]
    dc84:	str	lr, [sp]
    dc88:	ldr	r0, [sp, #12]
    dc8c:	cmp	r0, #0
    dc90:	beq	dce0 <flatcc_json_parser_coerce_int16+0x88>
    dc94:	ldr	r0, [sp]
    dc98:	ldr	r1, [sp, #4]
    dc9c:	movw	r2, #32769	; 0x8001
    dca0:	subs	r0, r0, r2
    dca4:	sbcs	r1, r1, #0
    dca8:	bcc	dccc <flatcc_json_parser_coerce_int16+0x74>
    dcac:	b	dcb0 <flatcc_json_parser_coerce_int16+0x58>
    dcb0:	ldr	r0, [fp, #-16]
    dcb4:	ldr	r1, [sp, #20]
    dcb8:	ldr	r2, [sp, #16]
    dcbc:	movw	r3, #8
    dcc0:	bl	0 <flatcc_json_parser_set_error>
    dcc4:	str	r0, [fp, #-12]
    dcc8:	b	dd28 <flatcc_json_parser_coerce_int16+0xd0>
    dccc:	ldr	r0, [sp]
    dcd0:	rsb	r0, r0, #0
    dcd4:	ldr	r1, [fp, #16]
    dcd8:	strh	r0, [r1]
    dcdc:	b	dd20 <flatcc_json_parser_coerce_int16+0xc8>
    dce0:	ldr	r0, [sp]
    dce4:	ldr	r1, [sp, #4]
    dce8:	subs	r0, r0, #32768	; 0x8000
    dcec:	sbcs	r1, r1, #0
    dcf0:	bcc	dd14 <flatcc_json_parser_coerce_int16+0xbc>
    dcf4:	b	dcf8 <flatcc_json_parser_coerce_int16+0xa0>
    dcf8:	ldr	r0, [fp, #-16]
    dcfc:	ldr	r1, [sp, #20]
    dd00:	ldr	r2, [sp, #16]
    dd04:	movw	r3, #7
    dd08:	bl	0 <flatcc_json_parser_set_error>
    dd0c:	str	r0, [fp, #-12]
    dd10:	b	dd28 <flatcc_json_parser_coerce_int16+0xd0>
    dd14:	ldrh	r0, [sp]
    dd18:	ldr	r1, [fp, #16]
    dd1c:	strh	r0, [r1]
    dd20:	ldr	r0, [sp, #20]
    dd24:	str	r0, [fp, #-12]
    dd28:	ldr	r0, [fp, #-12]
    dd2c:	sub	sp, fp, #8
    dd30:	pop	{r4, sl, fp, pc}

0000dd34 <flatbuffers_int16_cast_to_pe>:
    dd34:	sub	sp, sp, #4
    dd38:	strh	r0, [sp, #2]
    dd3c:	ldrsh	r0, [sp, #2]
    dd40:	add	sp, sp, #4
    dd44:	bx	lr

0000dd48 <flatcc_json_parser_none>:
    dd48:	push	{fp, lr}
    dd4c:	mov	fp, sp
    dd50:	sub	sp, sp, #16
    dd54:	str	r0, [sp, #8]
    dd58:	str	r1, [sp, #4]
    dd5c:	str	r2, [sp]
    dd60:	ldr	r0, [sp]
    dd64:	ldr	r1, [sp, #4]
    dd68:	sub	r0, r0, r1
    dd6c:	cmp	r0, #4
    dd70:	blt	dda4 <flatcc_json_parser_none+0x5c>
    dd74:	ldr	r0, [sp, #4]
    dd78:	ldr	r0, [r0]
    dd7c:	movw	r1, #30062	; 0x756e
    dd80:	movt	r1, #27756	; 0x6c6c
    dd84:	subs	r0, r0, r1
    dd88:	movwne	r0, #1
    dd8c:	cmp	r0, #0
    dd90:	bne	dda4 <flatcc_json_parser_none+0x5c>
    dd94:	ldr	r0, [sp, #4]
    dd98:	add	r0, r0, #4
    dd9c:	str	r0, [fp, #-4]
    dda0:	b	ddbc <flatcc_json_parser_none+0x74>
    dda4:	ldr	r0, [sp, #8]
    dda8:	ldr	r1, [sp, #4]
    ddac:	ldr	r2, [sp]
    ddb0:	movw	r3, #26
    ddb4:	bl	0 <flatcc_json_parser_set_error>
    ddb8:	str	r0, [fp, #-4]
    ddbc:	ldr	r0, [fp, #-4]
    ddc0:	mov	sp, fp
    ddc4:	pop	{fp, pc}

0000ddc8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>:
    ddc8:	push	{fp, lr}
    ddcc:	mov	fp, sp
    ddd0:	sub	sp, sp, #64	; 0x40
    ddd4:	str	r0, [fp, #-8]
    ddd8:	str	r1, [fp, #-12]
    dddc:	str	r2, [fp, #-16]
    dde0:	str	r3, [fp, #-20]	; 0xffffffec
    dde4:	ldr	r0, [fp, #-20]	; 0xffffffec
    dde8:	movw	r1, #0
    ddec:	str	r1, [r0]
    ddf0:	ldr	r0, [fp, #-8]
    ddf4:	ldr	r0, [r0]
    ddf8:	movw	r1, #4
    ddfc:	bl	0 <flatcc_builder_start_table>
    de00:	cmp	r0, #0
    de04:	beq	de0c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x44>
    de08:	b	e3ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    de0c:	ldr	r0, [fp, #-8]
    de10:	ldr	r1, [fp, #-12]
    de14:	ldr	r2, [fp, #-16]
    de18:	sub	r3, fp, #24
    de1c:	bl	6fa0 <flatcc_json_parser_object_start>
    de20:	str	r0, [fp, #-12]
    de24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    de28:	cmp	r0, #0
    de2c:	beq	e3ac <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5e4>
    de30:	ldr	r0, [fp, #-8]
    de34:	ldr	r1, [fp, #-12]
    de38:	ldr	r2, [fp, #-16]
    de3c:	bl	7084 <flatcc_json_parser_symbol_start>
    de40:	str	r0, [fp, #-12]
    de44:	ldr	r0, [fp, #-12]
    de48:	ldr	r1, [fp, #-16]
    de4c:	bl	7130 <flatcc_json_parser_symbol_part>
    de50:	str	r1, [sp, #20]
    de54:	str	r0, [sp, #16]
    de58:	ldrh	r0, [sp, #18]
    de5c:	ldr	r1, [sp, #20]
    de60:	movw	r2, #25455	; 0x636f
    de64:	eor	r2, r2, r1, lsr #16
    de68:	orr	r0, r0, r1, lsl #16
    de6c:	movw	r1, #29234	; 0x7232
    de70:	movt	r1, #27759	; 0x6c6f
    de74:	eor	r0, r0, r1
    de78:	orr	r0, r0, r2
    de7c:	cmp	r0, #0
    de80:	bne	dfa4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1dc>
    de84:	b	de88 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0xc0>
    de88:	ldr	r0, [fp, #-8]
    de8c:	ldr	r1, [fp, #-12]
    de90:	str	r1, [sp, #24]
    de94:	ldr	r2, [fp, #-16]
    de98:	movw	r3, #6
    de9c:	bl	7168 <flatcc_json_parser_match_symbol>
    dea0:	str	r0, [fp, #-12]
    dea4:	ldr	r0, [sp, #24]
    dea8:	ldr	r1, [fp, #-12]
    deac:	cmp	r0, r1
    deb0:	beq	df9c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1d4>
    deb4:	movw	r0, #0
    deb8:	strb	r0, [sp, #15]
    debc:	ldr	r0, [fp, #-8]
    dec0:	ldr	r1, [fp, #-12]
    dec4:	str	r1, [sp, #24]
    dec8:	ldr	r2, [fp, #-16]
    decc:	add	r3, sp, #15
    ded0:	bl	8684 <flatcc_json_parser_int8>
    ded4:	str	r0, [fp, #-12]
    ded8:	ldr	r0, [sp, #24]
    dedc:	ldr	r1, [fp, #-12]
    dee0:	cmp	r0, r1
    dee4:	bne	df38 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x170>
    dee8:	ldr	r0, [fp, #-8]
    deec:	ldr	r1, [fp, #-12]
    def0:	str	r1, [sp, #24]
    def4:	ldr	r2, [fp, #-16]
    def8:	movw	r3, #0
    defc:	movt	r3, #0
    df00:	add	ip, sp, #15
    df04:	str	ip, [sp]
    df08:	bl	8760 <flatcc_json_parser_symbolic_int8>
    df0c:	str	r0, [fp, #-12]
    df10:	ldr	r0, [fp, #-12]
    df14:	ldr	r1, [sp, #24]
    df18:	cmp	r0, r1
    df1c:	beq	df30 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x168>
    df20:	ldr	r0, [fp, #-12]
    df24:	ldr	r1, [fp, #-16]
    df28:	cmp	r0, r1
    df2c:	bne	df34 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x16c>
    df30:	b	e3ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    df34:	b	df38 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x170>
    df38:	ldrsb	r0, [sp, #15]
    df3c:	cmp	r0, #2
    df40:	bne	df58 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x190>
    df44:	ldr	r0, [fp, #-8]
    df48:	ldr	r0, [r0, #8]
    df4c:	and	r0, r0, #2
    df50:	cmp	r0, #0
    df54:	beq	df98 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1d0>
    df58:	ldr	r0, [fp, #-8]
    df5c:	ldr	r0, [r0]
    df60:	movw	r1, #1
    df64:	str	r1, [sp, #8]
    df68:	ldr	r2, [sp, #8]
    df6c:	movw	r3, #1
    df70:	uxth	r3, r3
    df74:	bl	0 <flatcc_builder_table_add>
    df78:	str	r0, [fp, #-28]	; 0xffffffe4
    df7c:	movw	r1, #0
    df80:	cmp	r0, r1
    df84:	bne	df8c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1c4>
    df88:	b	e3ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    df8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    df90:	ldrsb	r1, [sp, #15]
    df94:	bl	898c <flatbuffers_int8_write_to_pe>
    df98:	b	dfa0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1d8>
    df9c:	b	e0f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x328>
    dfa0:	b	e0ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x324>
    dfa4:	ldrb	r0, [sp, #19]
    dfa8:	ldr	r1, [sp, #20]
    dfac:	movw	r2, #27759	; 0x6c6f
    dfb0:	movt	r2, #25455	; 0x636f
    dfb4:	eor	r1, r1, r2
    dfb8:	eor	r0, r0, #114	; 0x72
    dfbc:	orr	r0, r1, r0, lsl #24
    dfc0:	cmp	r0, #0
    dfc4:	bne	e0e4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x31c>
    dfc8:	b	dfcc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x204>
    dfcc:	ldr	r0, [fp, #-8]
    dfd0:	ldr	r1, [fp, #-12]
    dfd4:	str	r1, [sp, #24]
    dfd8:	ldr	r2, [fp, #-16]
    dfdc:	movw	r3, #5
    dfe0:	bl	7168 <flatcc_json_parser_match_symbol>
    dfe4:	str	r0, [fp, #-12]
    dfe8:	ldr	r0, [sp, #24]
    dfec:	ldr	r1, [fp, #-12]
    dff0:	cmp	r0, r1
    dff4:	beq	e0dc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x314>
    dff8:	movw	r0, #0
    dffc:	strb	r0, [sp, #14]
    e000:	ldr	r0, [fp, #-8]
    e004:	ldr	r1, [fp, #-12]
    e008:	str	r1, [sp, #24]
    e00c:	ldr	r2, [fp, #-16]
    e010:	add	r3, sp, #14
    e014:	bl	8684 <flatcc_json_parser_int8>
    e018:	str	r0, [fp, #-12]
    e01c:	ldr	r0, [sp, #24]
    e020:	ldr	r1, [fp, #-12]
    e024:	cmp	r0, r1
    e028:	bne	e07c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b4>
    e02c:	ldr	r0, [fp, #-8]
    e030:	ldr	r1, [fp, #-12]
    e034:	str	r1, [sp, #24]
    e038:	ldr	r2, [fp, #-16]
    e03c:	movw	r3, #0
    e040:	movt	r3, #0
    e044:	add	ip, sp, #14
    e048:	str	ip, [sp]
    e04c:	bl	8760 <flatcc_json_parser_symbolic_int8>
    e050:	str	r0, [fp, #-12]
    e054:	ldr	r0, [fp, #-12]
    e058:	ldr	r1, [sp, #24]
    e05c:	cmp	r0, r1
    e060:	beq	e074 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2ac>
    e064:	ldr	r0, [fp, #-12]
    e068:	ldr	r1, [fp, #-16]
    e06c:	cmp	r0, r1
    e070:	bne	e078 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b0>
    e074:	b	e3ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    e078:	b	e07c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b4>
    e07c:	ldrsb	r0, [sp, #14]
    e080:	cmp	r0, #2
    e084:	bne	e09c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2d4>
    e088:	ldr	r0, [fp, #-8]
    e08c:	ldr	r0, [r0, #8]
    e090:	and	r0, r0, #2
    e094:	cmp	r0, #0
    e098:	beq	e0d8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x310>
    e09c:	ldr	r0, [fp, #-8]
    e0a0:	ldr	r0, [r0]
    e0a4:	movw	r1, #0
    e0a8:	movw	r2, #1
    e0ac:	movw	r3, #1
    e0b0:	uxth	r3, r3
    e0b4:	bl	0 <flatcc_builder_table_add>
    e0b8:	str	r0, [fp, #-28]	; 0xffffffe4
    e0bc:	movw	r1, #0
    e0c0:	cmp	r0, r1
    e0c4:	bne	e0cc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x304>
    e0c8:	b	e3ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    e0cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e0d0:	ldrsb	r1, [sp, #14]
    e0d4:	bl	898c <flatbuffers_int8_write_to_pe>
    e0d8:	b	e0e0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x318>
    e0dc:	b	e0f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x328>
    e0e0:	b	e0e8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x320>
    e0e4:	b	e0f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x328>
    e0e8:	b	e0ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x324>
    e0ec:	b	e390 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c8>
    e0f0:	ldr	r0, [sp, #20]
    e0f4:	bic	r0, r0, #255	; 0xff
    e0f8:	movw	r1, #12800	; 0x3200
    e0fc:	movt	r1, #30051	; 0x7563
    e100:	teq	r0, r1
    e104:	bne	e234 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x46c>
    e108:	b	e10c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x344>
    e10c:	ldr	r0, [fp, #-8]
    e110:	ldr	r1, [fp, #-12]
    e114:	str	r1, [sp, #24]
    e118:	ldr	r2, [fp, #-16]
    e11c:	movw	r3, #3
    e120:	bl	7168 <flatcc_json_parser_match_symbol>
    e124:	str	r0, [fp, #-12]
    e128:	ldr	r0, [sp, #24]
    e12c:	ldr	r1, [fp, #-12]
    e130:	cmp	r0, r1
    e134:	beq	e21c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x454>
    e138:	movw	r0, #0
    e13c:	strb	r0, [sp, #13]
    e140:	ldr	r0, [fp, #-8]
    e144:	ldr	r1, [fp, #-12]
    e148:	str	r1, [sp, #24]
    e14c:	ldr	r2, [fp, #-16]
    e150:	add	r3, sp, #13
    e154:	bl	8a9c <flatcc_json_parser_uint8>
    e158:	str	r0, [fp, #-12]
    e15c:	ldr	r0, [sp, #24]
    e160:	ldr	r1, [fp, #-12]
    e164:	cmp	r0, r1
    e168:	bne	e1bc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f4>
    e16c:	ldr	r0, [fp, #-8]
    e170:	ldr	r1, [fp, #-12]
    e174:	str	r1, [sp, #24]
    e178:	ldr	r2, [fp, #-16]
    e17c:	movw	r3, #0
    e180:	movt	r3, #0
    e184:	add	ip, sp, #13
    e188:	str	ip, [sp]
    e18c:	bl	8b78 <flatcc_json_parser_symbolic_uint8>
    e190:	str	r0, [fp, #-12]
    e194:	ldr	r0, [fp, #-12]
    e198:	ldr	r1, [sp, #24]
    e19c:	cmp	r0, r1
    e1a0:	beq	e1b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3ec>
    e1a4:	ldr	r0, [fp, #-12]
    e1a8:	ldr	r1, [fp, #-16]
    e1ac:	cmp	r0, r1
    e1b0:	bne	e1b8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f0>
    e1b4:	b	e3ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    e1b8:	b	e1bc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f4>
    e1bc:	ldrb	r0, [sp, #13]
    e1c0:	cmp	r0, #2
    e1c4:	bne	e1dc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x414>
    e1c8:	ldr	r0, [fp, #-8]
    e1cc:	ldr	r0, [r0, #8]
    e1d0:	and	r0, r0, #2
    e1d4:	cmp	r0, #0
    e1d8:	beq	e218 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x450>
    e1dc:	ldr	r0, [fp, #-8]
    e1e0:	ldr	r0, [r0]
    e1e4:	movw	r1, #3
    e1e8:	movw	r2, #1
    e1ec:	movw	r3, #1
    e1f0:	uxth	r3, r3
    e1f4:	bl	0 <flatcc_builder_table_add>
    e1f8:	str	r0, [fp, #-28]	; 0xffffffe4
    e1fc:	movw	r1, #0
    e200:	cmp	r0, r1
    e204:	bne	e20c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x444>
    e208:	b	e3ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    e20c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e210:	ldrb	r1, [sp, #13]
    e214:	bl	8da4 <flatbuffers_uint8_write_to_pe>
    e218:	b	e230 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x468>
    e21c:	ldr	r0, [fp, #-8]
    e220:	ldr	r1, [fp, #-12]
    e224:	ldr	r2, [fp, #-16]
    e228:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e22c:	str	r0, [fp, #-12]
    e230:	b	e38c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c4>
    e234:	ldrh	r0, [sp, #22]
    e238:	movw	r1, #0
    e23c:	movt	r1, #30051	; 0x7563
    e240:	teq	r1, r0, lsl #16
    e244:	bne	e374 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5ac>
    e248:	b	e24c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x484>
    e24c:	ldr	r0, [fp, #-8]
    e250:	ldr	r1, [fp, #-12]
    e254:	str	r1, [sp, #24]
    e258:	ldr	r2, [fp, #-16]
    e25c:	movw	r3, #2
    e260:	bl	7168 <flatcc_json_parser_match_symbol>
    e264:	str	r0, [fp, #-12]
    e268:	ldr	r0, [sp, #24]
    e26c:	ldr	r1, [fp, #-12]
    e270:	cmp	r0, r1
    e274:	beq	e35c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x594>
    e278:	movw	r0, #0
    e27c:	strb	r0, [sp, #12]
    e280:	ldr	r0, [fp, #-8]
    e284:	ldr	r1, [fp, #-12]
    e288:	str	r1, [sp, #24]
    e28c:	ldr	r2, [fp, #-16]
    e290:	add	r3, sp, #12
    e294:	bl	8a9c <flatcc_json_parser_uint8>
    e298:	str	r0, [fp, #-12]
    e29c:	ldr	r0, [sp, #24]
    e2a0:	ldr	r1, [fp, #-12]
    e2a4:	cmp	r0, r1
    e2a8:	bne	e2fc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x534>
    e2ac:	ldr	r0, [fp, #-8]
    e2b0:	ldr	r1, [fp, #-12]
    e2b4:	str	r1, [sp, #24]
    e2b8:	ldr	r2, [fp, #-16]
    e2bc:	movw	r3, #0
    e2c0:	movt	r3, #0
    e2c4:	add	ip, sp, #12
    e2c8:	str	ip, [sp]
    e2cc:	bl	8b78 <flatcc_json_parser_symbolic_uint8>
    e2d0:	str	r0, [fp, #-12]
    e2d4:	ldr	r0, [fp, #-12]
    e2d8:	ldr	r1, [sp, #24]
    e2dc:	cmp	r0, r1
    e2e0:	beq	e2f4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x52c>
    e2e4:	ldr	r0, [fp, #-12]
    e2e8:	ldr	r1, [fp, #-16]
    e2ec:	cmp	r0, r1
    e2f0:	bne	e2f8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    e2f4:	b	e3ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    e2f8:	b	e2fc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x534>
    e2fc:	ldrb	r0, [sp, #12]
    e300:	cmp	r0, #2
    e304:	bne	e31c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x554>
    e308:	ldr	r0, [fp, #-8]
    e30c:	ldr	r0, [r0, #8]
    e310:	and	r0, r0, #2
    e314:	cmp	r0, #0
    e318:	beq	e358 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x590>
    e31c:	ldr	r0, [fp, #-8]
    e320:	ldr	r0, [r0]
    e324:	movw	r1, #2
    e328:	movw	r2, #1
    e32c:	movw	r3, #1
    e330:	uxth	r3, r3
    e334:	bl	0 <flatcc_builder_table_add>
    e338:	str	r0, [fp, #-28]	; 0xffffffe4
    e33c:	movw	r1, #0
    e340:	cmp	r0, r1
    e344:	bne	e34c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x584>
    e348:	b	e3ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    e34c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e350:	ldrb	r1, [sp, #12]
    e354:	bl	8da4 <flatbuffers_uint8_write_to_pe>
    e358:	b	e370 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5a8>
    e35c:	ldr	r0, [fp, #-8]
    e360:	ldr	r1, [fp, #-12]
    e364:	ldr	r2, [fp, #-16]
    e368:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e36c:	str	r0, [fp, #-12]
    e370:	b	e388 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c0>
    e374:	ldr	r0, [fp, #-8]
    e378:	ldr	r1, [fp, #-12]
    e37c:	ldr	r2, [fp, #-16]
    e380:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e384:	str	r0, [fp, #-12]
    e388:	b	e38c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c4>
    e38c:	b	e390 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c8>
    e390:	ldr	r0, [fp, #-8]
    e394:	ldr	r1, [fp, #-12]
    e398:	ldr	r2, [fp, #-16]
    e39c:	sub	r3, fp, #24
    e3a0:	bl	c3e4 <flatcc_json_parser_object_end>
    e3a4:	str	r0, [fp, #-12]
    e3a8:	b	de24 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c>
    e3ac:	ldr	r0, [fp, #-8]
    e3b0:	ldr	r0, [r0, #24]
    e3b4:	cmp	r0, #0
    e3b8:	beq	e3c0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5f8>
    e3bc:	b	e3ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    e3c0:	ldr	r0, [fp, #-8]
    e3c4:	ldr	r0, [r0]
    e3c8:	bl	0 <flatcc_builder_end_table>
    e3cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    e3d0:	str	r0, [r1]
    e3d4:	cmp	r0, #0
    e3d8:	bne	e3e0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x618>
    e3dc:	b	e3ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    e3e0:	ldr	r0, [fp, #-12]
    e3e4:	str	r0, [fp, #-4]
    e3e8:	b	e404 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x63c>
    e3ec:	ldr	r0, [fp, #-8]
    e3f0:	ldr	r1, [fp, #-12]
    e3f4:	ldr	r2, [fp, #-16]
    e3f8:	movw	r3, #33	; 0x21
    e3fc:	bl	0 <flatcc_json_parser_set_error>
    e400:	str	r0, [fp, #-4]
    e404:	ldr	r0, [fp, #-4]
    e408:	mov	sp, fp
    e40c:	pop	{fp, pc}

0000e410 <MyGame_Example2_Monster_parse_json_table>:
    e410:	push	{fp, lr}
    e414:	mov	fp, sp
    e418:	sub	sp, sp, #24
    e41c:	str	r0, [fp, #-8]
    e420:	str	r1, [sp, #12]
    e424:	str	r2, [sp, #8]
    e428:	str	r3, [sp, #4]
    e42c:	ldr	r0, [sp, #4]
    e430:	movw	r1, #0
    e434:	str	r1, [r0]
    e438:	ldr	r0, [fp, #-8]
    e43c:	ldr	r0, [r0]
    e440:	bl	0 <flatcc_builder_start_table>
    e444:	cmp	r0, #0
    e448:	beq	e450 <MyGame_Example2_Monster_parse_json_table+0x40>
    e44c:	b	e4f8 <MyGame_Example2_Monster_parse_json_table+0xe8>
    e450:	ldr	r0, [fp, #-8]
    e454:	ldr	r1, [sp, #12]
    e458:	ldr	r2, [sp, #8]
    e45c:	mov	r3, sp
    e460:	bl	6fa0 <flatcc_json_parser_object_start>
    e464:	str	r0, [sp, #12]
    e468:	ldr	r0, [sp]
    e46c:	cmp	r0, #0
    e470:	beq	e4b8 <MyGame_Example2_Monster_parse_json_table+0xa8>
    e474:	ldr	r0, [fp, #-8]
    e478:	ldr	r1, [sp, #12]
    e47c:	ldr	r2, [sp, #8]
    e480:	bl	7084 <flatcc_json_parser_symbol_start>
    e484:	str	r0, [sp, #12]
    e488:	ldr	r0, [fp, #-8]
    e48c:	ldr	r1, [sp, #12]
    e490:	ldr	r2, [sp, #8]
    e494:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e498:	str	r0, [sp, #12]
    e49c:	ldr	r0, [fp, #-8]
    e4a0:	ldr	r1, [sp, #12]
    e4a4:	ldr	r2, [sp, #8]
    e4a8:	mov	r3, sp
    e4ac:	bl	c3e4 <flatcc_json_parser_object_end>
    e4b0:	str	r0, [sp, #12]
    e4b4:	b	e468 <MyGame_Example2_Monster_parse_json_table+0x58>
    e4b8:	ldr	r0, [fp, #-8]
    e4bc:	ldr	r0, [r0, #24]
    e4c0:	cmp	r0, #0
    e4c4:	beq	e4cc <MyGame_Example2_Monster_parse_json_table+0xbc>
    e4c8:	b	e4f8 <MyGame_Example2_Monster_parse_json_table+0xe8>
    e4cc:	ldr	r0, [fp, #-8]
    e4d0:	ldr	r0, [r0]
    e4d4:	bl	0 <flatcc_builder_end_table>
    e4d8:	ldr	r1, [sp, #4]
    e4dc:	str	r0, [r1]
    e4e0:	cmp	r0, #0
    e4e4:	bne	e4ec <MyGame_Example2_Monster_parse_json_table+0xdc>
    e4e8:	b	e4f8 <MyGame_Example2_Monster_parse_json_table+0xe8>
    e4ec:	ldr	r0, [sp, #12]
    e4f0:	str	r0, [fp, #-4]
    e4f4:	b	e510 <MyGame_Example2_Monster_parse_json_table+0x100>
    e4f8:	ldr	r0, [fp, #-8]
    e4fc:	ldr	r1, [sp, #12]
    e500:	ldr	r2, [sp, #8]
    e504:	movw	r3, #33	; 0x21
    e508:	bl	0 <flatcc_json_parser_set_error>
    e50c:	str	r0, [fp, #-4]
    e510:	ldr	r0, [fp, #-4]
    e514:	mov	sp, fp
    e518:	pop	{fp, pc}

0000e51c <MyGame_Example_Alt_parse_json_table>:
    e51c:	push	{fp, lr}
    e520:	mov	fp, sp
    e524:	sub	sp, sp, #88	; 0x58
    e528:	str	r0, [fp, #-8]
    e52c:	str	r1, [fp, #-12]
    e530:	str	r2, [fp, #-16]
    e534:	str	r3, [fp, #-20]	; 0xffffffec
    e538:	ldr	r0, [fp, #-20]	; 0xffffffec
    e53c:	movw	r1, #0
    e540:	str	r1, [r0]
    e544:	ldr	r0, [fp, #-8]
    e548:	ldr	r0, [r0]
    e54c:	movw	r1, #4
    e550:	bl	0 <flatcc_builder_start_table>
    e554:	cmp	r0, #0
    e558:	beq	e560 <MyGame_Example_Alt_parse_json_table+0x44>
    e55c:	b	e9f0 <MyGame_Example_Alt_parse_json_table+0x4d4>
    e560:	ldr	r0, [fp, #-16]
    e564:	ldr	r1, [fp, #-8]
    e568:	ldr	r2, [fp, #-12]
    e56c:	ldr	r3, [fp, #-16]
    e570:	str	r0, [sp, #32]
    e574:	mov	r0, r1
    e578:	mov	r1, r2
    e57c:	mov	r2, r3
    e580:	movw	r3, #1
    e584:	add	ip, sp, #36	; 0x24
    e588:	str	ip, [sp]
    e58c:	bl	0 <flatcc_json_parser_prepare_unions>
    e590:	ldr	r1, [sp, #32]
    e594:	cmp	r1, r0
    e598:	bne	e5a0 <MyGame_Example_Alt_parse_json_table+0x84>
    e59c:	b	e9f0 <MyGame_Example_Alt_parse_json_table+0x4d4>
    e5a0:	ldr	r0, [fp, #-8]
    e5a4:	ldr	r1, [fp, #-12]
    e5a8:	ldr	r2, [fp, #-16]
    e5ac:	sub	r3, fp, #24
    e5b0:	bl	6fa0 <flatcc_json_parser_object_start>
    e5b4:	str	r0, [fp, #-12]
    e5b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e5bc:	cmp	r0, #0
    e5c0:	beq	e998 <MyGame_Example_Alt_parse_json_table+0x47c>
    e5c4:	ldr	r0, [fp, #-8]
    e5c8:	ldr	r1, [fp, #-12]
    e5cc:	ldr	r2, [fp, #-16]
    e5d0:	bl	7084 <flatcc_json_parser_symbol_start>
    e5d4:	str	r0, [fp, #-12]
    e5d8:	ldr	r0, [fp, #-12]
    e5dc:	ldr	r1, [fp, #-16]
    e5e0:	bl	7130 <flatcc_json_parser_symbol_part>
    e5e4:	str	r1, [sp, #44]	; 0x2c
    e5e8:	str	r0, [sp, #40]	; 0x28
    e5ec:	ldr	r0, [sp, #40]	; 0x28
    e5f0:	ldr	r1, [sp, #44]	; 0x2c
    e5f4:	movw	r2, #28281	; 0x6e79
    e5f8:	movt	r2, #28001	; 0x6d61
    e5fc:	eor	r1, r1, r2
    e600:	movw	r2, #31071	; 0x795f
    e604:	movt	r2, #24942	; 0x616e
    e608:	eor	r0, r0, r2
    e60c:	orr	r0, r0, r1
    e610:	cmp	r0, #0
    e614:	bne	e710 <MyGame_Example_Alt_parse_json_table+0x1f4>
    e618:	b	e61c <MyGame_Example_Alt_parse_json_table+0x100>
    e61c:	ldr	r0, [fp, #-12]
    e620:	add	r0, r0, #8
    e624:	str	r0, [fp, #-12]
    e628:	ldr	r0, [fp, #-12]
    e62c:	ldr	r1, [fp, #-16]
    e630:	bl	7130 <flatcc_json_parser_symbol_part>
    e634:	str	r1, [sp, #44]	; 0x2c
    e638:	str	r0, [sp, #40]	; 0x28
    e63c:	ldr	r0, [sp, #44]	; 0x2c
    e640:	movw	r1, #28773	; 0x7065
    e644:	movt	r1, #29817	; 0x7479
    e648:	teq	r0, r1
    e64c:	bne	e6f8 <MyGame_Example_Alt_parse_json_table+0x1dc>
    e650:	b	e654 <MyGame_Example_Alt_parse_json_table+0x138>
    e654:	ldr	r0, [fp, #-8]
    e658:	ldr	r1, [fp, #-12]
    e65c:	str	r1, [fp, #-40]	; 0xffffffd8
    e660:	ldr	r2, [fp, #-16]
    e664:	movw	r3, #4
    e668:	bl	7168 <flatcc_json_parser_match_symbol>
    e66c:	str	r0, [fp, #-12]
    e670:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e674:	ldr	r1, [fp, #-12]
    e678:	cmp	r0, r1
    e67c:	beq	e6e0 <MyGame_Example_Alt_parse_json_table+0x1c4>
    e680:	ldr	r0, [fp, #-8]
    e684:	ldr	r1, [fp, #-12]
    e688:	ldr	r2, [fp, #-16]
    e68c:	ldr	r3, [sp, #36]	; 0x24
    e690:	movw	ip, #0
    e694:	str	r3, [sp, #28]
    e698:	mov	r3, ip
    e69c:	movw	ip, #3
    e6a0:	uxth	ip, ip
    e6a4:	str	ip, [sp]
    e6a8:	ldr	ip, [sp, #28]
    e6ac:	str	ip, [sp, #4]
    e6b0:	movw	lr, #0
    e6b4:	movt	lr, #0
    e6b8:	str	lr, [sp, #8]
    e6bc:	movw	lr, #0
    e6c0:	movt	lr, #0
    e6c4:	str	lr, [sp, #12]
    e6c8:	movw	lr, #0
    e6cc:	movt	lr, #0
    e6d0:	str	lr, [sp, #16]
    e6d4:	bl	0 <flatcc_json_parser_union_type_vector>
    e6d8:	str	r0, [fp, #-12]
    e6dc:	b	e6f4 <MyGame_Example_Alt_parse_json_table+0x1d8>
    e6e0:	ldr	r0, [fp, #-8]
    e6e4:	ldr	r1, [fp, #-12]
    e6e8:	ldr	r2, [fp, #-16]
    e6ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e6f0:	str	r0, [fp, #-12]
    e6f4:	b	e70c <MyGame_Example_Alt_parse_json_table+0x1f0>
    e6f8:	ldr	r0, [fp, #-8]
    e6fc:	ldr	r1, [fp, #-12]
    e700:	ldr	r2, [fp, #-16]
    e704:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e708:	str	r0, [fp, #-12]
    e70c:	b	e97c <MyGame_Example_Alt_parse_json_table+0x460>
    e710:	ldr	r0, [sp, #40]	; 0x28
    e714:	ldr	r1, [sp, #44]	; 0x2c
    e718:	movw	r2, #24942	; 0x616e
    e71c:	movt	r2, #109	; 0x6d
    e720:	eor	r2, r2, r1, lsr #8
    e724:	lsr	r0, r0, #8
    e728:	orr	r0, r0, r1, lsl #24
    e72c:	movw	r1, #28281	; 0x6e79
    e730:	movt	r1, #31073	; 0x7961
    e734:	eor	r0, r0, r1
    e738:	orr	r0, r0, r2
    e73c:	cmp	r0, #0
    e740:	bne	e7c4 <MyGame_Example_Alt_parse_json_table+0x2a8>
    e744:	b	e748 <MyGame_Example_Alt_parse_json_table+0x22c>
    e748:	ldr	r0, [fp, #-8]
    e74c:	ldr	r1, [fp, #-12]
    e750:	str	r1, [fp, #-40]	; 0xffffffd8
    e754:	ldr	r2, [fp, #-16]
    e758:	movw	r3, #7
    e75c:	bl	7168 <flatcc_json_parser_match_symbol>
    e760:	str	r0, [fp, #-12]
    e764:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e768:	ldr	r1, [fp, #-12]
    e76c:	cmp	r0, r1
    e770:	beq	e7bc <MyGame_Example_Alt_parse_json_table+0x2a0>
    e774:	ldr	r0, [fp, #-8]
    e778:	ldr	r1, [fp, #-12]
    e77c:	ldr	r2, [fp, #-16]
    e780:	ldr	r3, [sp, #36]	; 0x24
    e784:	movw	ip, #0
    e788:	str	r3, [sp, #24]
    e78c:	mov	r3, ip
    e790:	movw	ip, #3
    e794:	uxth	ip, ip
    e798:	str	ip, [sp]
    e79c:	ldr	ip, [sp, #24]
    e7a0:	str	ip, [sp, #4]
    e7a4:	movw	lr, #0
    e7a8:	movt	lr, #0
    e7ac:	str	lr, [sp, #8]
    e7b0:	bl	0 <flatcc_json_parser_union_vector>
    e7b4:	str	r0, [fp, #-12]
    e7b8:	b	e7c0 <MyGame_Example_Alt_parse_json_table+0x2a4>
    e7bc:	b	e7cc <MyGame_Example_Alt_parse_json_table+0x2b0>
    e7c0:	b	e7c8 <MyGame_Example_Alt_parse_json_table+0x2ac>
    e7c4:	b	e7cc <MyGame_Example_Alt_parse_json_table+0x2b0>
    e7c8:	b	e978 <MyGame_Example_Alt_parse_json_table+0x45c>
    e7cc:	ldrh	r0, [sp, #42]	; 0x2a
    e7d0:	ldr	r1, [sp, #44]	; 0x2c
    e7d4:	movw	r2, #28786	; 0x7072
    e7d8:	eor	r2, r2, r1, lsr #16
    e7dc:	orr	r0, r0, r1, lsl #16
    e7e0:	movw	r1, #27000	; 0x6978
    e7e4:	movt	r1, #25958	; 0x6566
    e7e8:	eor	r0, r0, r1
    e7ec:	orr	r0, r0, r2
    e7f0:	cmp	r0, #0
    e7f4:	bne	e898 <MyGame_Example_Alt_parse_json_table+0x37c>
    e7f8:	b	e7fc <MyGame_Example_Alt_parse_json_table+0x2e0>
    e7fc:	ldr	r0, [fp, #-8]
    e800:	ldr	r1, [fp, #-12]
    e804:	str	r1, [fp, #-40]	; 0xffffffd8
    e808:	ldr	r2, [fp, #-16]
    e80c:	movw	r3, #6
    e810:	bl	7168 <flatcc_json_parser_match_symbol>
    e814:	str	r0, [fp, #-12]
    e818:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e81c:	ldr	r1, [fp, #-12]
    e820:	cmp	r0, r1
    e824:	beq	e880 <MyGame_Example_Alt_parse_json_table+0x364>
    e828:	ldr	r0, [fp, #-8]
    e82c:	ldr	r1, [fp, #-12]
    e830:	ldr	r2, [fp, #-16]
    e834:	sub	r3, fp, #32
    e838:	bl	eaa4 <MyGame_Example_TestJSONPrefix_parse_json_table>
    e83c:	str	r0, [fp, #-12]
    e840:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e844:	cmp	r0, #0
    e848:	beq	e86c <MyGame_Example_Alt_parse_json_table+0x350>
    e84c:	ldr	r0, [fp, #-8]
    e850:	ldr	r0, [r0]
    e854:	movw	r1, #0
    e858:	bl	0 <flatcc_builder_table_add_offset>
    e85c:	str	r0, [fp, #-36]	; 0xffffffdc
    e860:	movw	r1, #0
    e864:	cmp	r0, r1
    e868:	bne	e870 <MyGame_Example_Alt_parse_json_table+0x354>
    e86c:	b	e9f0 <MyGame_Example_Alt_parse_json_table+0x4d4>
    e870:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e874:	ldr	r1, [fp, #-36]	; 0xffffffdc
    e878:	str	r0, [r1]
    e87c:	b	e894 <MyGame_Example_Alt_parse_json_table+0x378>
    e880:	ldr	r0, [fp, #-8]
    e884:	ldr	r1, [fp, #-12]
    e888:	ldr	r2, [fp, #-16]
    e88c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e890:	str	r0, [fp, #-12]
    e894:	b	e974 <MyGame_Example_Alt_parse_json_table+0x458>
    e898:	ldrb	r0, [sp, #43]	; 0x2b
    e89c:	ldr	r1, [sp, #44]	; 0x2c
    e8a0:	movw	r2, #30313	; 0x7669
    e8a4:	movt	r2, #28015	; 0x6d6f
    e8a8:	eor	r1, r1, r2
    e8ac:	eor	r0, r0, #101	; 0x65
    e8b0:	orr	r0, r1, r0, lsl #24
    e8b4:	cmp	r0, #0
    e8b8:	bne	e95c <MyGame_Example_Alt_parse_json_table+0x440>
    e8bc:	b	e8c0 <MyGame_Example_Alt_parse_json_table+0x3a4>
    e8c0:	ldr	r0, [fp, #-8]
    e8c4:	ldr	r1, [fp, #-12]
    e8c8:	str	r1, [fp, #-40]	; 0xffffffd8
    e8cc:	ldr	r2, [fp, #-16]
    e8d0:	movw	r3, #5
    e8d4:	bl	7168 <flatcc_json_parser_match_symbol>
    e8d8:	str	r0, [fp, #-12]
    e8dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e8e0:	ldr	r1, [fp, #-12]
    e8e4:	cmp	r0, r1
    e8e8:	beq	e944 <MyGame_Example_Alt_parse_json_table+0x428>
    e8ec:	ldr	r0, [fp, #-8]
    e8f0:	ldr	r1, [fp, #-12]
    e8f4:	ldr	r2, [fp, #-16]
    e8f8:	sub	r3, fp, #32
    e8fc:	bl	eee4 <Fantasy_Movie_parse_json_table>
    e900:	str	r0, [fp, #-12]
    e904:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e908:	cmp	r0, #0
    e90c:	beq	e930 <MyGame_Example_Alt_parse_json_table+0x414>
    e910:	ldr	r0, [fp, #-8]
    e914:	ldr	r0, [r0]
    e918:	movw	r1, #1
    e91c:	bl	0 <flatcc_builder_table_add_offset>
    e920:	str	r0, [fp, #-36]	; 0xffffffdc
    e924:	movw	r1, #0
    e928:	cmp	r0, r1
    e92c:	bne	e934 <MyGame_Example_Alt_parse_json_table+0x418>
    e930:	b	e9f0 <MyGame_Example_Alt_parse_json_table+0x4d4>
    e934:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e938:	ldr	r1, [fp, #-36]	; 0xffffffdc
    e93c:	str	r0, [r1]
    e940:	b	e958 <MyGame_Example_Alt_parse_json_table+0x43c>
    e944:	ldr	r0, [fp, #-8]
    e948:	ldr	r1, [fp, #-12]
    e94c:	ldr	r2, [fp, #-16]
    e950:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e954:	str	r0, [fp, #-12]
    e958:	b	e970 <MyGame_Example_Alt_parse_json_table+0x454>
    e95c:	ldr	r0, [fp, #-8]
    e960:	ldr	r1, [fp, #-12]
    e964:	ldr	r2, [fp, #-16]
    e968:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e96c:	str	r0, [fp, #-12]
    e970:	b	e974 <MyGame_Example_Alt_parse_json_table+0x458>
    e974:	b	e978 <MyGame_Example_Alt_parse_json_table+0x45c>
    e978:	b	e97c <MyGame_Example_Alt_parse_json_table+0x460>
    e97c:	ldr	r0, [fp, #-8]
    e980:	ldr	r1, [fp, #-12]
    e984:	ldr	r2, [fp, #-16]
    e988:	sub	r3, fp, #24
    e98c:	bl	c3e4 <flatcc_json_parser_object_end>
    e990:	str	r0, [fp, #-12]
    e994:	b	e5b8 <MyGame_Example_Alt_parse_json_table+0x9c>
    e998:	ldr	r0, [fp, #-8]
    e99c:	ldr	r0, [r0, #24]
    e9a0:	cmp	r0, #0
    e9a4:	beq	e9ac <MyGame_Example_Alt_parse_json_table+0x490>
    e9a8:	b	e9f0 <MyGame_Example_Alt_parse_json_table+0x4d4>
    e9ac:	ldr	r0, [fp, #-8]
    e9b0:	ldr	r1, [fp, #-12]
    e9b4:	ldr	r2, [fp, #-16]
    e9b8:	ldr	r3, [sp, #36]	; 0x24
    e9bc:	bl	0 <flatcc_json_parser_finalize_unions>
    e9c0:	str	r0, [fp, #-12]
    e9c4:	ldr	r0, [fp, #-8]
    e9c8:	ldr	r0, [r0]
    e9cc:	bl	0 <flatcc_builder_end_table>
    e9d0:	ldr	r1, [fp, #-20]	; 0xffffffec
    e9d4:	str	r0, [r1]
    e9d8:	cmp	r0, #0
    e9dc:	bne	e9e4 <MyGame_Example_Alt_parse_json_table+0x4c8>
    e9e0:	b	e9f0 <MyGame_Example_Alt_parse_json_table+0x4d4>
    e9e4:	ldr	r0, [fp, #-12]
    e9e8:	str	r0, [fp, #-4]
    e9ec:	b	ea08 <MyGame_Example_Alt_parse_json_table+0x4ec>
    e9f0:	ldr	r0, [fp, #-8]
    e9f4:	ldr	r1, [fp, #-12]
    e9f8:	ldr	r2, [fp, #-16]
    e9fc:	movw	r3, #33	; 0x21
    ea00:	bl	0 <flatcc_json_parser_set_error>
    ea04:	str	r0, [fp, #-4]
    ea08:	ldr	r0, [fp, #-4]
    ea0c:	mov	sp, fp
    ea10:	pop	{fp, pc}

0000ea14 <MyGame_Example_Any_json_union_accept_type>:
    ea14:	sub	sp, sp, #12
    ea18:	strb	r0, [sp, #7]
    ea1c:	ldrb	r0, [sp, #7]
    ea20:	mov	r1, r0
    ea24:	cmp	r0, #4
    ea28:	str	r1, [sp]
    ea2c:	bhi	ea90 <MyGame_Example_Any_json_union_accept_type+0x7c>
    ea30:	add	r0, pc, #8
    ea34:	ldr	r1, [sp]
    ea38:	ldr	r0, [r0, r1, lsl #2]
    ea3c:	mov	pc, r0
    ea40:	.word	0x0000ea54
    ea44:	.word	0x0000ea60
    ea48:	.word	0x0000ea6c
    ea4c:	.word	0x0000ea78
    ea50:	.word	0x0000ea84
    ea54:	movw	r0, #1
    ea58:	str	r0, [sp, #8]
    ea5c:	b	ea98 <MyGame_Example_Any_json_union_accept_type+0x84>
    ea60:	movw	r0, #1
    ea64:	str	r0, [sp, #8]
    ea68:	b	ea98 <MyGame_Example_Any_json_union_accept_type+0x84>
    ea6c:	movw	r0, #1
    ea70:	str	r0, [sp, #8]
    ea74:	b	ea98 <MyGame_Example_Any_json_union_accept_type+0x84>
    ea78:	movw	r0, #1
    ea7c:	str	r0, [sp, #8]
    ea80:	b	ea98 <MyGame_Example_Any_json_union_accept_type+0x84>
    ea84:	movw	r0, #1
    ea88:	str	r0, [sp, #8]
    ea8c:	b	ea98 <MyGame_Example_Any_json_union_accept_type+0x84>
    ea90:	movw	r0, #0
    ea94:	str	r0, [sp, #8]
    ea98:	ldr	r0, [sp, #8]
    ea9c:	add	sp, sp, #12
    eaa0:	bx	lr

0000eaa4 <MyGame_Example_TestJSONPrefix_parse_json_table>:
    eaa4:	push	{fp, lr}
    eaa8:	mov	fp, sp
    eaac:	sub	sp, sp, #48	; 0x30
    eab0:	str	r0, [fp, #-8]
    eab4:	str	r1, [fp, #-12]
    eab8:	str	r2, [fp, #-16]
    eabc:	str	r3, [fp, #-20]	; 0xffffffec
    eac0:	ldr	r0, [fp, #-20]	; 0xffffffec
    eac4:	movw	r1, #0
    eac8:	str	r1, [r0]
    eacc:	ldr	r0, [fp, #-8]
    ead0:	ldr	r0, [r0]
    ead4:	movw	r1, #3
    ead8:	bl	0 <flatcc_builder_start_table>
    eadc:	cmp	r0, #0
    eae0:	beq	eae8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x44>
    eae4:	b	eec0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    eae8:	ldr	r0, [fp, #-8]
    eaec:	ldr	r1, [fp, #-12]
    eaf0:	ldr	r2, [fp, #-16]
    eaf4:	add	r3, sp, #24
    eaf8:	bl	6fa0 <flatcc_json_parser_object_start>
    eafc:	str	r0, [fp, #-12]
    eb00:	ldr	r0, [sp, #24]
    eb04:	cmp	r0, #0
    eb08:	beq	ee80 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3dc>
    eb0c:	ldr	r0, [fp, #-8]
    eb10:	ldr	r1, [fp, #-12]
    eb14:	ldr	r2, [fp, #-16]
    eb18:	bl	7084 <flatcc_json_parser_symbol_start>
    eb1c:	str	r0, [fp, #-12]
    eb20:	ldr	r0, [fp, #-12]
    eb24:	ldr	r1, [fp, #-16]
    eb28:	bl	7130 <flatcc_json_parser_symbol_part>
    eb2c:	str	r1, [sp, #4]
    eb30:	str	r0, [sp]
    eb34:	ldr	r0, [sp]
    eb38:	ldr	r1, [sp, #4]
    eb3c:	movw	r2, #29556	; 0x7374
    eb40:	movt	r2, #29797	; 0x7465
    eb44:	eor	r1, r1, r2
    eb48:	movw	r2, #28526	; 0x6f6e
    eb4c:	movt	r2, #27251	; 0x6a73
    eb50:	eor	r0, r0, r2
    eb54:	orr	r0, r0, r1
    eb58:	cmp	r0, #0
    eb5c:	bne	ee50 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ac>
    eb60:	b	eb64 <MyGame_Example_TestJSONPrefix_parse_json_table+0xc0>
    eb64:	ldr	r0, [fp, #-12]
    eb68:	add	r0, r0, #8
    eb6c:	str	r0, [fp, #-12]
    eb70:	ldr	r0, [fp, #-12]
    eb74:	ldr	r1, [fp, #-16]
    eb78:	bl	7130 <flatcc_json_parser_symbol_part>
    eb7c:	str	r1, [sp, #4]
    eb80:	str	r0, [sp]
    eb84:	ldr	r0, [sp]
    eb88:	ldr	r1, [sp, #4]
    eb8c:	movw	r2, #25958	; 0x6566
    eb90:	movt	r2, #28786	; 0x7072
    eb94:	eor	r1, r1, r2
    eb98:	movw	r2, #28769	; 0x7061
    eb9c:	movt	r2, #27000	; 0x6978
    eba0:	eor	r0, r0, r2
    eba4:	orr	r0, r0, r1
    eba8:	cmp	r0, #0
    ebac:	bne	ee38 <MyGame_Example_TestJSONPrefix_parse_json_table+0x394>
    ebb0:	b	ebb4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x110>
    ebb4:	ldr	r0, [fp, #-12]
    ebb8:	add	r0, r0, #8
    ebbc:	str	r0, [fp, #-12]
    ebc0:	ldr	r0, [fp, #-12]
    ebc4:	ldr	r1, [fp, #-16]
    ebc8:	bl	7130 <flatcc_json_parser_symbol_part>
    ebcc:	str	r1, [sp, #4]
    ebd0:	str	r0, [sp]
    ebd4:	ldrh	r0, [sp, #2]
    ebd8:	ldr	r1, [sp, #4]
    ebdc:	movw	r2, #29299	; 0x7273
    ebe0:	eor	r2, r2, r1, lsr #16
    ebe4:	orr	r0, r0, r1, lsl #16
    ebe8:	movw	r1, #26418	; 0x6732
    ebec:	movt	r1, #26990	; 0x696e
    ebf0:	eor	r0, r0, r1
    ebf4:	orr	r0, r0, r2
    ebf8:	cmp	r0, #0
    ebfc:	bne	ec90 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1ec>
    ec00:	b	ec04 <MyGame_Example_TestJSONPrefix_parse_json_table+0x160>
    ec04:	ldr	r0, [fp, #-8]
    ec08:	ldr	r1, [fp, #-12]
    ec0c:	str	r1, [sp, #8]
    ec10:	ldr	r2, [fp, #-16]
    ec14:	movw	r3, #6
    ec18:	bl	7168 <flatcc_json_parser_match_symbol>
    ec1c:	str	r0, [fp, #-12]
    ec20:	ldr	r0, [sp, #8]
    ec24:	ldr	r1, [fp, #-12]
    ec28:	cmp	r0, r1
    ec2c:	beq	ec88 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1e4>
    ec30:	ldr	r0, [fp, #-8]
    ec34:	ldr	r1, [fp, #-12]
    ec38:	ldr	r2, [fp, #-16]
    ec3c:	add	r3, sp, #16
    ec40:	bl	faa4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>
    ec44:	str	r0, [fp, #-12]
    ec48:	ldr	r0, [sp, #16]
    ec4c:	cmp	r0, #0
    ec50:	beq	ec74 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1d0>
    ec54:	ldr	r0, [fp, #-8]
    ec58:	ldr	r0, [r0]
    ec5c:	movw	r1, #1
    ec60:	bl	0 <flatcc_builder_table_add_offset>
    ec64:	str	r0, [sp, #12]
    ec68:	movw	r1, #0
    ec6c:	cmp	r0, r1
    ec70:	bne	ec78 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1d4>
    ec74:	b	eec0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    ec78:	ldr	r0, [sp, #16]
    ec7c:	ldr	r1, [sp, #12]
    ec80:	str	r0, [r1]
    ec84:	b	ec8c <MyGame_Example_TestJSONPrefix_parse_json_table+0x1e8>
    ec88:	b	ed50 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2ac>
    ec8c:	b	ed4c <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a8>
    ec90:	ldrb	r0, [sp, #3]
    ec94:	ldr	r1, [sp, #4]
    ec98:	movw	r2, #26990	; 0x696e
    ec9c:	movt	r2, #29299	; 0x7273
    eca0:	eor	r1, r1, r2
    eca4:	eor	r0, r0, #103	; 0x67
    eca8:	orr	r0, r1, r0, lsl #24
    ecac:	cmp	r0, #0
    ecb0:	bne	ed44 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a0>
    ecb4:	b	ecb8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x214>
    ecb8:	ldr	r0, [fp, #-8]
    ecbc:	ldr	r1, [fp, #-12]
    ecc0:	str	r1, [sp, #8]
    ecc4:	ldr	r2, [fp, #-16]
    ecc8:	movw	r3, #5
    eccc:	bl	7168 <flatcc_json_parser_match_symbol>
    ecd0:	str	r0, [fp, #-12]
    ecd4:	ldr	r0, [sp, #8]
    ecd8:	ldr	r1, [fp, #-12]
    ecdc:	cmp	r0, r1
    ece0:	beq	ed3c <MyGame_Example_TestJSONPrefix_parse_json_table+0x298>
    ece4:	ldr	r0, [fp, #-8]
    ece8:	ldr	r1, [fp, #-12]
    ecec:	ldr	r2, [fp, #-16]
    ecf0:	add	r3, sp, #16
    ecf4:	bl	ff00 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>
    ecf8:	str	r0, [fp, #-12]
    ecfc:	ldr	r0, [sp, #16]
    ed00:	cmp	r0, #0
    ed04:	beq	ed28 <MyGame_Example_TestJSONPrefix_parse_json_table+0x284>
    ed08:	ldr	r0, [fp, #-8]
    ed0c:	ldr	r0, [r0]
    ed10:	movw	r1, #0
    ed14:	bl	0 <flatcc_builder_table_add_offset>
    ed18:	str	r0, [sp, #12]
    ed1c:	movw	r1, #0
    ed20:	cmp	r0, r1
    ed24:	bne	ed2c <MyGame_Example_TestJSONPrefix_parse_json_table+0x288>
    ed28:	b	eec0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    ed2c:	ldr	r0, [sp, #16]
    ed30:	ldr	r1, [sp, #12]
    ed34:	str	r0, [r1]
    ed38:	b	ed40 <MyGame_Example_TestJSONPrefix_parse_json_table+0x29c>
    ed3c:	b	ed50 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2ac>
    ed40:	b	ed48 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a4>
    ed44:	b	ed50 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2ac>
    ed48:	b	ed4c <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a8>
    ed4c:	b	ee34 <MyGame_Example_TestJSONPrefix_parse_json_table+0x390>
    ed50:	ldrh	r0, [sp, #2]
    ed54:	ldr	r1, [sp, #4]
    ed58:	movw	r2, #29299	; 0x7273
    ed5c:	eor	r2, r2, r1, lsr #16
    ed60:	orr	r0, r0, r1, lsl #16
    ed64:	movw	r1, #26419	; 0x6733
    ed68:	movt	r1, #26990	; 0x696e
    ed6c:	eor	r0, r0, r1
    ed70:	orr	r0, r0, r2
    ed74:	cmp	r0, #0
    ed78:	bne	ee1c <MyGame_Example_TestJSONPrefix_parse_json_table+0x378>
    ed7c:	b	ed80 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2dc>
    ed80:	ldr	r0, [fp, #-8]
    ed84:	ldr	r1, [fp, #-12]
    ed88:	str	r1, [sp, #8]
    ed8c:	ldr	r2, [fp, #-16]
    ed90:	movw	r3, #6
    ed94:	bl	7168 <flatcc_json_parser_match_symbol>
    ed98:	str	r0, [fp, #-12]
    ed9c:	ldr	r0, [sp, #8]
    eda0:	ldr	r1, [fp, #-12]
    eda4:	cmp	r0, r1
    eda8:	beq	ee04 <MyGame_Example_TestJSONPrefix_parse_json_table+0x360>
    edac:	ldr	r0, [fp, #-8]
    edb0:	ldr	r1, [fp, #-12]
    edb4:	ldr	r2, [fp, #-16]
    edb8:	add	r3, sp, #16
    edbc:	bl	10b20 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>
    edc0:	str	r0, [fp, #-12]
    edc4:	ldr	r0, [sp, #16]
    edc8:	cmp	r0, #0
    edcc:	beq	edf0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x34c>
    edd0:	ldr	r0, [fp, #-8]
    edd4:	ldr	r0, [r0]
    edd8:	movw	r1, #2
    eddc:	bl	0 <flatcc_builder_table_add_offset>
    ede0:	str	r0, [sp, #12]
    ede4:	movw	r1, #0
    ede8:	cmp	r0, r1
    edec:	bne	edf4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x350>
    edf0:	b	eec0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    edf4:	ldr	r0, [sp, #16]
    edf8:	ldr	r1, [sp, #12]
    edfc:	str	r0, [r1]
    ee00:	b	ee18 <MyGame_Example_TestJSONPrefix_parse_json_table+0x374>
    ee04:	ldr	r0, [fp, #-8]
    ee08:	ldr	r1, [fp, #-12]
    ee0c:	ldr	r2, [fp, #-16]
    ee10:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ee14:	str	r0, [fp, #-12]
    ee18:	b	ee30 <MyGame_Example_TestJSONPrefix_parse_json_table+0x38c>
    ee1c:	ldr	r0, [fp, #-8]
    ee20:	ldr	r1, [fp, #-12]
    ee24:	ldr	r2, [fp, #-16]
    ee28:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ee2c:	str	r0, [fp, #-12]
    ee30:	b	ee34 <MyGame_Example_TestJSONPrefix_parse_json_table+0x390>
    ee34:	b	ee4c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3a8>
    ee38:	ldr	r0, [fp, #-8]
    ee3c:	ldr	r1, [fp, #-12]
    ee40:	ldr	r2, [fp, #-16]
    ee44:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ee48:	str	r0, [fp, #-12]
    ee4c:	b	ee64 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c0>
    ee50:	ldr	r0, [fp, #-8]
    ee54:	ldr	r1, [fp, #-12]
    ee58:	ldr	r2, [fp, #-16]
    ee5c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ee60:	str	r0, [fp, #-12]
    ee64:	ldr	r0, [fp, #-8]
    ee68:	ldr	r1, [fp, #-12]
    ee6c:	ldr	r2, [fp, #-16]
    ee70:	add	r3, sp, #24
    ee74:	bl	c3e4 <flatcc_json_parser_object_end>
    ee78:	str	r0, [fp, #-12]
    ee7c:	b	eb00 <MyGame_Example_TestJSONPrefix_parse_json_table+0x5c>
    ee80:	ldr	r0, [fp, #-8]
    ee84:	ldr	r0, [r0, #24]
    ee88:	cmp	r0, #0
    ee8c:	beq	ee94 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3f0>
    ee90:	b	eec0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    ee94:	ldr	r0, [fp, #-8]
    ee98:	ldr	r0, [r0]
    ee9c:	bl	0 <flatcc_builder_end_table>
    eea0:	ldr	r1, [fp, #-20]	; 0xffffffec
    eea4:	str	r0, [r1]
    eea8:	cmp	r0, #0
    eeac:	bne	eeb4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x410>
    eeb0:	b	eec0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    eeb4:	ldr	r0, [fp, #-12]
    eeb8:	str	r0, [fp, #-4]
    eebc:	b	eed8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x434>
    eec0:	ldr	r0, [fp, #-8]
    eec4:	ldr	r1, [fp, #-12]
    eec8:	ldr	r2, [fp, #-16]
    eecc:	movw	r3, #33	; 0x21
    eed0:	bl	0 <flatcc_json_parser_set_error>
    eed4:	str	r0, [fp, #-4]
    eed8:	ldr	r0, [fp, #-4]
    eedc:	mov	sp, fp
    eee0:	pop	{fp, pc}

0000eee4 <Fantasy_Movie_parse_json_table>:
    eee4:	push	{fp, lr}
    eee8:	mov	fp, sp
    eeec:	sub	sp, sp, #120	; 0x78
    eef0:	str	r0, [fp, #-8]
    eef4:	str	r1, [fp, #-12]
    eef8:	str	r2, [fp, #-16]
    eefc:	str	r3, [fp, #-20]	; 0xffffffec
    ef00:	ldr	r0, [fp, #-20]	; 0xffffffec
    ef04:	movw	r1, #0
    ef08:	str	r1, [r0]
    ef0c:	ldr	r0, [fp, #-8]
    ef10:	ldr	r0, [r0]
    ef14:	movw	r1, #10
    ef18:	bl	0 <flatcc_builder_start_table>
    ef1c:	cmp	r0, #0
    ef20:	beq	ef28 <Fantasy_Movie_parse_json_table+0x44>
    ef24:	b	fa80 <Fantasy_Movie_parse_json_table+0xb9c>
    ef28:	ldr	r0, [fp, #-16]
    ef2c:	ldr	r1, [fp, #-8]
    ef30:	ldr	r2, [fp, #-12]
    ef34:	ldr	r3, [fp, #-16]
    ef38:	str	r0, [fp, #-56]	; 0xffffffc8
    ef3c:	mov	r0, r1
    ef40:	mov	r1, r2
    ef44:	mov	r2, r3
    ef48:	movw	r3, #5
    ef4c:	sub	ip, fp, #52	; 0x34
    ef50:	str	ip, [sp]
    ef54:	bl	0 <flatcc_json_parser_prepare_unions>
    ef58:	ldr	r1, [fp, #-56]	; 0xffffffc8
    ef5c:	cmp	r1, r0
    ef60:	bne	ef68 <Fantasy_Movie_parse_json_table+0x84>
    ef64:	b	fa80 <Fantasy_Movie_parse_json_table+0xb9c>
    ef68:	ldr	r0, [fp, #-8]
    ef6c:	ldr	r1, [fp, #-12]
    ef70:	ldr	r2, [fp, #-16]
    ef74:	sub	r3, fp, #24
    ef78:	bl	6fa0 <flatcc_json_parser_object_start>
    ef7c:	str	r0, [fp, #-12]
    ef80:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ef84:	cmp	r0, #0
    ef88:	beq	fa28 <Fantasy_Movie_parse_json_table+0xb44>
    ef8c:	ldr	r0, [fp, #-8]
    ef90:	ldr	r1, [fp, #-12]
    ef94:	ldr	r2, [fp, #-16]
    ef98:	bl	7084 <flatcc_json_parser_symbol_start>
    ef9c:	str	r0, [fp, #-12]
    efa0:	ldr	r0, [fp, #-12]
    efa4:	ldr	r1, [fp, #-16]
    efa8:	bl	7130 <flatcc_json_parser_symbol_part>
    efac:	str	r1, [fp, #-44]	; 0xffffffd4
    efb0:	str	r0, [fp, #-48]	; 0xffffffd0
    efb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    efb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    efbc:	movw	r2, #29796	; 0x7464
    efc0:	movt	r2, #24931	; 0x6163
    efc4:	subs	r0, r2, r0
    efc8:	movw	r2, #24946	; 0x6172
    efcc:	movt	r2, #25448	; 0x6368
    efd0:	sbcs	r1, r2, r1
    efd4:	bcc	f3a8 <Fantasy_Movie_parse_json_table+0x4c4>
    efd8:	b	efdc <Fantasy_Movie_parse_json_table+0xf8>
    efdc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    efe0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    efe4:	movw	r2, #29793	; 0x7461
    efe8:	movt	r2, #24942	; 0x616e
    efec:	eor	r1, r1, r2
    eff0:	movw	r2, #28265	; 0x6e69
    eff4:	movt	r2, #26479	; 0x676f
    eff8:	eor	r0, r0, r2
    effc:	orr	r0, r0, r1
    f000:	cmp	r0, #0
    f004:	bne	f1bc <Fantasy_Movie_parse_json_table+0x2d8>
    f008:	b	f00c <Fantasy_Movie_parse_json_table+0x128>
    f00c:	ldr	r0, [fp, #-12]
    f010:	add	r0, r0, #8
    f014:	str	r0, [fp, #-12]
    f018:	ldr	r0, [fp, #-12]
    f01c:	ldr	r1, [fp, #-16]
    f020:	bl	7130 <flatcc_json_parser_symbol_part>
    f024:	str	r1, [fp, #-44]	; 0xffffffd4
    f028:	str	r0, [fp, #-48]	; 0xffffffd0
    f02c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f030:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f034:	movw	r2, #29791	; 0x745f
    f038:	movt	r2, #115	; 0x73
    f03c:	eor	r2, r2, r1, lsr #8
    f040:	lsr	r0, r0, #8
    f044:	orr	r0, r0, r1, lsl #24
    f048:	movw	r1, #28773	; 0x7065
    f04c:	movt	r1, #29817	; 0x7479
    f050:	eor	r0, r0, r1
    f054:	orr	r0, r0, r2
    f058:	cmp	r0, #0
    f05c:	bne	f0fc <Fantasy_Movie_parse_json_table+0x218>
    f060:	b	f064 <Fantasy_Movie_parse_json_table+0x180>
    f064:	ldr	r0, [fp, #-8]
    f068:	ldr	r1, [fp, #-12]
    f06c:	str	r1, [fp, #-40]	; 0xffffffd8
    f070:	ldr	r2, [fp, #-16]
    f074:	movw	r3, #7
    f078:	bl	7168 <flatcc_json_parser_match_symbol>
    f07c:	str	r0, [fp, #-12]
    f080:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f084:	ldr	r1, [fp, #-12]
    f088:	cmp	r0, r1
    f08c:	beq	f0e4 <Fantasy_Movie_parse_json_table+0x200>
    f090:	ldr	r0, [fp, #-8]
    f094:	ldr	r1, [fp, #-12]
    f098:	ldr	r2, [fp, #-16]
    f09c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f0a0:	movw	ip, #1
    f0a4:	str	r3, [sp, #60]	; 0x3c
    f0a8:	mov	r3, ip
    f0ac:	movw	ip, #3
    f0b0:	uxth	ip, ip
    f0b4:	str	ip, [sp]
    f0b8:	ldr	ip, [sp, #60]	; 0x3c
    f0bc:	str	ip, [sp, #4]
    f0c0:	movw	lr, #0
    f0c4:	movt	lr, #0
    f0c8:	str	lr, [sp, #8]
    f0cc:	movw	lr, #0
    f0d0:	movt	lr, #0
    f0d4:	str	lr, [sp, #12]
    f0d8:	bl	0 <flatcc_json_parser_union_type>
    f0dc:	str	r0, [fp, #-12]
    f0e0:	b	f0f8 <Fantasy_Movie_parse_json_table+0x214>
    f0e4:	ldr	r0, [fp, #-8]
    f0e8:	ldr	r1, [fp, #-12]
    f0ec:	ldr	r2, [fp, #-16]
    f0f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f0f4:	str	r0, [fp, #-12]
    f0f8:	b	f1b8 <Fantasy_Movie_parse_json_table+0x2d4>
    f0fc:	ldrh	r0, [fp, #-42]	; 0xffffffd6
    f100:	movw	r1, #0
    f104:	movt	r1, #29556	; 0x7374
    f108:	teq	r1, r0, lsl #16
    f10c:	bne	f1a0 <Fantasy_Movie_parse_json_table+0x2bc>
    f110:	b	f114 <Fantasy_Movie_parse_json_table+0x230>
    f114:	ldr	r0, [fp, #-8]
    f118:	ldr	r1, [fp, #-12]
    f11c:	str	r1, [fp, #-40]	; 0xffffffd8
    f120:	ldr	r2, [fp, #-16]
    f124:	movw	r3, #2
    f128:	bl	7168 <flatcc_json_parser_match_symbol>
    f12c:	str	r0, [fp, #-12]
    f130:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f134:	ldr	r1, [fp, #-12]
    f138:	cmp	r0, r1
    f13c:	beq	f188 <Fantasy_Movie_parse_json_table+0x2a4>
    f140:	ldr	r0, [fp, #-8]
    f144:	ldr	r1, [fp, #-12]
    f148:	ldr	r2, [fp, #-16]
    f14c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f150:	movw	ip, #1
    f154:	str	r3, [sp, #56]	; 0x38
    f158:	mov	r3, ip
    f15c:	movw	ip, #3
    f160:	uxth	ip, ip
    f164:	str	ip, [sp]
    f168:	ldr	ip, [sp, #56]	; 0x38
    f16c:	str	ip, [sp, #4]
    f170:	movw	lr, #0
    f174:	movt	lr, #0
    f178:	str	lr, [sp, #8]
    f17c:	bl	0 <flatcc_json_parser_union>
    f180:	str	r0, [fp, #-12]
    f184:	b	f19c <Fantasy_Movie_parse_json_table+0x2b8>
    f188:	ldr	r0, [fp, #-8]
    f18c:	ldr	r1, [fp, #-12]
    f190:	ldr	r2, [fp, #-16]
    f194:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f198:	str	r0, [fp, #-12]
    f19c:	b	f1b4 <Fantasy_Movie_parse_json_table+0x2d0>
    f1a0:	ldr	r0, [fp, #-8]
    f1a4:	ldr	r1, [fp, #-12]
    f1a8:	ldr	r2, [fp, #-16]
    f1ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f1b0:	str	r0, [fp, #-12]
    f1b4:	b	f1b8 <Fantasy_Movie_parse_json_table+0x2d4>
    f1b8:	b	f3a4 <Fantasy_Movie_parse_json_table+0x4c0>
    f1bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f1c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f1c4:	movw	r2, #28005	; 0x6d65
    f1c8:	movt	r2, #25441	; 0x6361
    f1cc:	eor	r1, r1, r2
    f1d0:	movw	r2, #29817	; 0x7479
    f1d4:	movt	r2, #28511	; 0x6f5f
    f1d8:	eor	r0, r0, r2
    f1dc:	orr	r0, r0, r1
    f1e0:	cmp	r0, #0
    f1e4:	bne	f2d4 <Fantasy_Movie_parse_json_table+0x3f0>
    f1e8:	b	f1ec <Fantasy_Movie_parse_json_table+0x308>
    f1ec:	ldr	r0, [fp, #-12]
    f1f0:	add	r0, r0, #8
    f1f4:	str	r0, [fp, #-12]
    f1f8:	ldr	r0, [fp, #-12]
    f1fc:	ldr	r1, [fp, #-16]
    f200:	bl	7130 <flatcc_json_parser_symbol_part>
    f204:	str	r1, [fp, #-44]	; 0xffffffd4
    f208:	str	r0, [fp, #-48]	; 0xffffffd0
    f20c:	ldrh	r0, [fp, #-42]	; 0xffffffd6
    f210:	movw	r1, #0
    f214:	movt	r1, #28773	; 0x7065
    f218:	teq	r1, r0, lsl #16
    f21c:	bne	f2bc <Fantasy_Movie_parse_json_table+0x3d8>
    f220:	b	f224 <Fantasy_Movie_parse_json_table+0x340>
    f224:	ldr	r0, [fp, #-8]
    f228:	ldr	r1, [fp, #-12]
    f22c:	str	r1, [fp, #-40]	; 0xffffffd8
    f230:	ldr	r2, [fp, #-16]
    f234:	movw	r3, #2
    f238:	bl	7168 <flatcc_json_parser_match_symbol>
    f23c:	str	r0, [fp, #-12]
    f240:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f244:	ldr	r1, [fp, #-12]
    f248:	cmp	r0, r1
    f24c:	beq	f2a4 <Fantasy_Movie_parse_json_table+0x3c0>
    f250:	ldr	r0, [fp, #-8]
    f254:	ldr	r1, [fp, #-12]
    f258:	ldr	r2, [fp, #-16]
    f25c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f260:	movw	ip, #3
    f264:	str	r3, [sp, #52]	; 0x34
    f268:	mov	r3, ip
    f26c:	movw	ip, #7
    f270:	uxth	ip, ip
    f274:	str	ip, [sp]
    f278:	ldr	ip, [sp, #52]	; 0x34
    f27c:	str	ip, [sp, #4]
    f280:	movw	lr, #0
    f284:	movt	lr, #0
    f288:	str	lr, [sp, #8]
    f28c:	movw	lr, #0
    f290:	movt	lr, #0
    f294:	str	lr, [sp, #12]
    f298:	bl	0 <flatcc_json_parser_union_type>
    f29c:	str	r0, [fp, #-12]
    f2a0:	b	f2b8 <Fantasy_Movie_parse_json_table+0x3d4>
    f2a4:	ldr	r0, [fp, #-8]
    f2a8:	ldr	r1, [fp, #-12]
    f2ac:	ldr	r2, [fp, #-16]
    f2b0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f2b4:	str	r0, [fp, #-12]
    f2b8:	b	f2d0 <Fantasy_Movie_parse_json_table+0x3ec>
    f2bc:	ldr	r0, [fp, #-8]
    f2c0:	ldr	r1, [fp, #-12]
    f2c4:	ldr	r2, [fp, #-16]
    f2c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f2cc:	str	r0, [fp, #-12]
    f2d0:	b	f3a0 <Fantasy_Movie_parse_json_table+0x4bc>
    f2d4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    f2d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f2dc:	movw	r2, #28005	; 0x6d65
    f2e0:	movt	r2, #25441	; 0x6361
    f2e4:	eor	r1, r1, r2
    f2e8:	eor	r0, r0, #111	; 0x6f
    f2ec:	orr	r0, r1, r0, lsl #24
    f2f0:	cmp	r0, #0
    f2f4:	bne	f388 <Fantasy_Movie_parse_json_table+0x4a4>
    f2f8:	b	f2fc <Fantasy_Movie_parse_json_table+0x418>
    f2fc:	ldr	r0, [fp, #-8]
    f300:	ldr	r1, [fp, #-12]
    f304:	str	r1, [fp, #-40]	; 0xffffffd8
    f308:	ldr	r2, [fp, #-16]
    f30c:	movw	r3, #5
    f310:	bl	7168 <flatcc_json_parser_match_symbol>
    f314:	str	r0, [fp, #-12]
    f318:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f31c:	ldr	r1, [fp, #-12]
    f320:	cmp	r0, r1
    f324:	beq	f370 <Fantasy_Movie_parse_json_table+0x48c>
    f328:	ldr	r0, [fp, #-8]
    f32c:	ldr	r1, [fp, #-12]
    f330:	ldr	r2, [fp, #-16]
    f334:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f338:	movw	ip, #3
    f33c:	str	r3, [sp, #48]	; 0x30
    f340:	mov	r3, ip
    f344:	movw	ip, #7
    f348:	uxth	ip, ip
    f34c:	str	ip, [sp]
    f350:	ldr	ip, [sp, #48]	; 0x30
    f354:	str	ip, [sp, #4]
    f358:	movw	lr, #0
    f35c:	movt	lr, #0
    f360:	str	lr, [sp, #8]
    f364:	bl	0 <flatcc_json_parser_union>
    f368:	str	r0, [fp, #-12]
    f36c:	b	f384 <Fantasy_Movie_parse_json_table+0x4a0>
    f370:	ldr	r0, [fp, #-8]
    f374:	ldr	r1, [fp, #-12]
    f378:	ldr	r2, [fp, #-16]
    f37c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f380:	str	r0, [fp, #-12]
    f384:	b	f39c <Fantasy_Movie_parse_json_table+0x4b8>
    f388:	ldr	r0, [fp, #-8]
    f38c:	ldr	r1, [fp, #-12]
    f390:	ldr	r2, [fp, #-16]
    f394:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f398:	str	r0, [fp, #-12]
    f39c:	b	f3a0 <Fantasy_Movie_parse_json_table+0x4bc>
    f3a0:	b	f3a4 <Fantasy_Movie_parse_json_table+0x4c0>
    f3a4:	b	fa0c <Fantasy_Movie_parse_json_table+0xb28>
    f3a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f3ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f3b0:	movw	r2, #26720	; 0x6860
    f3b4:	movt	r2, #24419	; 0x5f63
    f3b8:	subs	r0, r2, r0
    f3bc:	movw	r2, #26990	; 0x696e
    f3c0:	movt	r2, #28001	; 0x6d61
    f3c4:	sbcs	r1, r2, r1
    f3c8:	bcc	f5d4 <Fantasy_Movie_parse_json_table+0x6f0>
    f3cc:	b	f3d0 <Fantasy_Movie_parse_json_table+0x4ec>
    f3d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f3d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f3d8:	movw	r2, #24946	; 0x6172
    f3dc:	movt	r2, #25448	; 0x6368
    f3e0:	eor	r1, r1, r2
    f3e4:	movw	r2, #29797	; 0x7465
    f3e8:	movt	r2, #24931	; 0x6163
    f3ec:	eor	r0, r0, r2
    f3f0:	orr	r0, r0, r1
    f3f4:	cmp	r0, #0
    f3f8:	bne	f5bc <Fantasy_Movie_parse_json_table+0x6d8>
    f3fc:	b	f400 <Fantasy_Movie_parse_json_table+0x51c>
    f400:	ldr	r0, [fp, #-12]
    f404:	add	r0, r0, #8
    f408:	str	r0, [fp, #-12]
    f40c:	ldr	r0, [fp, #-12]
    f410:	ldr	r1, [fp, #-16]
    f414:	bl	7130 <flatcc_json_parser_symbol_part>
    f418:	str	r1, [fp, #-44]	; 0xffffffd4
    f41c:	str	r0, [fp, #-48]	; 0xffffffd0
    f420:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f424:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f428:	movw	r2, #29535	; 0x735f
    f42c:	movt	r2, #114	; 0x72
    f430:	eor	r2, r2, r1, lsr #8
    f434:	lsr	r0, r0, #8
    f438:	orr	r0, r0, r1, lsl #24
    f43c:	movw	r1, #28773	; 0x7065
    f440:	movt	r1, #29817	; 0x7479
    f444:	eor	r0, r0, r1
    f448:	orr	r0, r0, r2
    f44c:	cmp	r0, #0
    f450:	bne	f4fc <Fantasy_Movie_parse_json_table+0x618>
    f454:	b	f458 <Fantasy_Movie_parse_json_table+0x574>
    f458:	ldr	r0, [fp, #-8]
    f45c:	ldr	r1, [fp, #-12]
    f460:	str	r1, [fp, #-40]	; 0xffffffd8
    f464:	ldr	r2, [fp, #-16]
    f468:	movw	r3, #7
    f46c:	bl	7168 <flatcc_json_parser_match_symbol>
    f470:	str	r0, [fp, #-12]
    f474:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f478:	ldr	r1, [fp, #-12]
    f47c:	cmp	r0, r1
    f480:	beq	f4e4 <Fantasy_Movie_parse_json_table+0x600>
    f484:	ldr	r0, [fp, #-8]
    f488:	ldr	r1, [fp, #-12]
    f48c:	ldr	r2, [fp, #-16]
    f490:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f494:	movw	ip, #4
    f498:	str	r3, [sp, #44]	; 0x2c
    f49c:	mov	r3, ip
    f4a0:	movw	ip, #9
    f4a4:	uxth	ip, ip
    f4a8:	str	ip, [sp]
    f4ac:	ldr	ip, [sp, #44]	; 0x2c
    f4b0:	str	ip, [sp, #4]
    f4b4:	movw	lr, #0
    f4b8:	movt	lr, #0
    f4bc:	str	lr, [sp, #8]
    f4c0:	movw	lr, #0
    f4c4:	movt	lr, #0
    f4c8:	str	lr, [sp, #12]
    f4cc:	movw	lr, #0
    f4d0:	movt	lr, #0
    f4d4:	str	lr, [sp, #16]
    f4d8:	bl	0 <flatcc_json_parser_union_type_vector>
    f4dc:	str	r0, [fp, #-12]
    f4e0:	b	f4f8 <Fantasy_Movie_parse_json_table+0x614>
    f4e4:	ldr	r0, [fp, #-8]
    f4e8:	ldr	r1, [fp, #-12]
    f4ec:	ldr	r2, [fp, #-16]
    f4f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f4f4:	str	r0, [fp, #-12]
    f4f8:	b	f5b8 <Fantasy_Movie_parse_json_table+0x6d4>
    f4fc:	ldrh	r0, [fp, #-42]	; 0xffffffd6
    f500:	movw	r1, #0
    f504:	movt	r1, #29299	; 0x7273
    f508:	teq	r1, r0, lsl #16
    f50c:	bne	f5a0 <Fantasy_Movie_parse_json_table+0x6bc>
    f510:	b	f514 <Fantasy_Movie_parse_json_table+0x630>
    f514:	ldr	r0, [fp, #-8]
    f518:	ldr	r1, [fp, #-12]
    f51c:	str	r1, [fp, #-40]	; 0xffffffd8
    f520:	ldr	r2, [fp, #-16]
    f524:	movw	r3, #2
    f528:	bl	7168 <flatcc_json_parser_match_symbol>
    f52c:	str	r0, [fp, #-12]
    f530:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f534:	ldr	r1, [fp, #-12]
    f538:	cmp	r0, r1
    f53c:	beq	f588 <Fantasy_Movie_parse_json_table+0x6a4>
    f540:	ldr	r0, [fp, #-8]
    f544:	ldr	r1, [fp, #-12]
    f548:	ldr	r2, [fp, #-16]
    f54c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f550:	movw	ip, #4
    f554:	str	r3, [sp, #40]	; 0x28
    f558:	mov	r3, ip
    f55c:	movw	ip, #9
    f560:	uxth	ip, ip
    f564:	str	ip, [sp]
    f568:	ldr	ip, [sp, #40]	; 0x28
    f56c:	str	ip, [sp, #4]
    f570:	movw	lr, #0
    f574:	movt	lr, #0
    f578:	str	lr, [sp, #8]
    f57c:	bl	0 <flatcc_json_parser_union_vector>
    f580:	str	r0, [fp, #-12]
    f584:	b	f59c <Fantasy_Movie_parse_json_table+0x6b8>
    f588:	ldr	r0, [fp, #-8]
    f58c:	ldr	r1, [fp, #-12]
    f590:	ldr	r2, [fp, #-16]
    f594:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f598:	str	r0, [fp, #-12]
    f59c:	b	f5b4 <Fantasy_Movie_parse_json_table+0x6d0>
    f5a0:	ldr	r0, [fp, #-8]
    f5a4:	ldr	r1, [fp, #-12]
    f5a8:	ldr	r2, [fp, #-16]
    f5ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f5b0:	str	r0, [fp, #-12]
    f5b4:	b	f5b8 <Fantasy_Movie_parse_json_table+0x6d4>
    f5b8:	b	f5d0 <Fantasy_Movie_parse_json_table+0x6ec>
    f5bc:	ldr	r0, [fp, #-8]
    f5c0:	ldr	r1, [fp, #-12]
    f5c4:	ldr	r2, [fp, #-16]
    f5c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f5cc:	str	r0, [fp, #-12]
    f5d0:	b	fa08 <Fantasy_Movie_parse_json_table+0xb24>
    f5d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f5d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f5dc:	movw	r2, #26990	; 0x696e
    f5e0:	movt	r2, #28001	; 0x6d61
    f5e4:	eor	r1, r1, r2
    f5e8:	movw	r2, #26721	; 0x6861
    f5ec:	movt	r2, #24419	; 0x5f63
    f5f0:	eor	r0, r0, r2
    f5f4:	orr	r0, r0, r1
    f5f8:	cmp	r0, #0
    f5fc:	bne	f818 <Fantasy_Movie_parse_json_table+0x934>
    f600:	b	f604 <Fantasy_Movie_parse_json_table+0x720>
    f604:	ldr	r0, [fp, #-12]
    f608:	add	r0, r0, #8
    f60c:	str	r0, [fp, #-12]
    f610:	ldr	r0, [fp, #-12]
    f614:	ldr	r1, [fp, #-16]
    f618:	bl	7130 <flatcc_json_parser_symbol_part>
    f61c:	str	r1, [fp, #-44]	; 0xffffffd4
    f620:	str	r0, [fp, #-48]	; 0xffffffd0
    f624:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f628:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f62c:	movw	r2, #25460	; 0x6374
    f630:	movt	r2, #29281	; 0x7261
    f634:	eor	r1, r1, r2
    f638:	movw	r2, #24436	; 0x5f74
    f63c:	movt	r2, #25970	; 0x6572
    f640:	eor	r0, r0, r2
    f644:	orr	r0, r0, r1
    f648:	cmp	r0, #0
    f64c:	bne	f740 <Fantasy_Movie_parse_json_table+0x85c>
    f650:	b	f654 <Fantasy_Movie_parse_json_table+0x770>
    f654:	ldr	r0, [fp, #-12]
    f658:	add	r0, r0, #8
    f65c:	str	r0, [fp, #-12]
    f660:	ldr	r0, [fp, #-12]
    f664:	ldr	r1, [fp, #-16]
    f668:	bl	7130 <flatcc_json_parser_symbol_part>
    f66c:	str	r1, [fp, #-44]	; 0xffffffd4
    f670:	str	r0, [fp, #-48]	; 0xffffffd0
    f674:	ldr	r0, [fp, #-44]	; 0xffffffd4
    f678:	bic	r0, r0, #255	; 0xff
    f67c:	movw	r1, #25856	; 0x6500
    f680:	movt	r1, #31088	; 0x7970
    f684:	teq	r0, r1
    f688:	bne	f728 <Fantasy_Movie_parse_json_table+0x844>
    f68c:	b	f690 <Fantasy_Movie_parse_json_table+0x7ac>
    f690:	ldr	r0, [fp, #-8]
    f694:	ldr	r1, [fp, #-12]
    f698:	str	r1, [fp, #-40]	; 0xffffffd8
    f69c:	ldr	r2, [fp, #-16]
    f6a0:	movw	r3, #3
    f6a4:	bl	7168 <flatcc_json_parser_match_symbol>
    f6a8:	str	r0, [fp, #-12]
    f6ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f6b0:	ldr	r1, [fp, #-12]
    f6b4:	cmp	r0, r1
    f6b8:	beq	f710 <Fantasy_Movie_parse_json_table+0x82c>
    f6bc:	ldr	r0, [fp, #-8]
    f6c0:	ldr	r1, [fp, #-12]
    f6c4:	ldr	r2, [fp, #-16]
    f6c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f6cc:	movw	ip, #0
    f6d0:	str	r3, [sp, #36]	; 0x24
    f6d4:	mov	r3, ip
    f6d8:	movw	ip, #1
    f6dc:	uxth	ip, ip
    f6e0:	str	ip, [sp]
    f6e4:	ldr	ip, [sp, #36]	; 0x24
    f6e8:	str	ip, [sp, #4]
    f6ec:	movw	lr, #0
    f6f0:	movt	lr, #0
    f6f4:	str	lr, [sp, #8]
    f6f8:	movw	lr, #0
    f6fc:	movt	lr, #0
    f700:	str	lr, [sp, #12]
    f704:	bl	0 <flatcc_json_parser_union_type>
    f708:	str	r0, [fp, #-12]
    f70c:	b	f724 <Fantasy_Movie_parse_json_table+0x840>
    f710:	ldr	r0, [fp, #-8]
    f714:	ldr	r1, [fp, #-12]
    f718:	ldr	r2, [fp, #-16]
    f71c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f720:	str	r0, [fp, #-12]
    f724:	b	f73c <Fantasy_Movie_parse_json_table+0x858>
    f728:	ldr	r0, [fp, #-8]
    f72c:	ldr	r1, [fp, #-12]
    f730:	ldr	r2, [fp, #-16]
    f734:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f738:	str	r0, [fp, #-12]
    f73c:	b	f814 <Fantasy_Movie_parse_json_table+0x930>
    f740:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    f744:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f748:	movw	r2, #29281	; 0x7261
    f74c:	eor	r2, r2, r1, lsr #16
    f750:	orr	r0, r0, r1, lsl #16
    f754:	movw	r1, #25970	; 0x6572
    f758:	movt	r1, #25460	; 0x6374
    f75c:	eor	r0, r0, r1
    f760:	orr	r0, r0, r2
    f764:	cmp	r0, #0
    f768:	bne	f7fc <Fantasy_Movie_parse_json_table+0x918>
    f76c:	b	f770 <Fantasy_Movie_parse_json_table+0x88c>
    f770:	ldr	r0, [fp, #-8]
    f774:	ldr	r1, [fp, #-12]
    f778:	str	r1, [fp, #-40]	; 0xffffffd8
    f77c:	ldr	r2, [fp, #-16]
    f780:	movw	r3, #6
    f784:	bl	7168 <flatcc_json_parser_match_symbol>
    f788:	str	r0, [fp, #-12]
    f78c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f790:	ldr	r1, [fp, #-12]
    f794:	cmp	r0, r1
    f798:	beq	f7e4 <Fantasy_Movie_parse_json_table+0x900>
    f79c:	ldr	r0, [fp, #-8]
    f7a0:	ldr	r1, [fp, #-12]
    f7a4:	ldr	r2, [fp, #-16]
    f7a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f7ac:	movw	ip, #0
    f7b0:	str	r3, [sp, #32]
    f7b4:	mov	r3, ip
    f7b8:	movw	ip, #1
    f7bc:	uxth	ip, ip
    f7c0:	str	ip, [sp]
    f7c4:	ldr	ip, [sp, #32]
    f7c8:	str	ip, [sp, #4]
    f7cc:	movw	lr, #0
    f7d0:	movt	lr, #0
    f7d4:	str	lr, [sp, #8]
    f7d8:	bl	0 <flatcc_json_parser_union>
    f7dc:	str	r0, [fp, #-12]
    f7e0:	b	f7f8 <Fantasy_Movie_parse_json_table+0x914>
    f7e4:	ldr	r0, [fp, #-8]
    f7e8:	ldr	r1, [fp, #-12]
    f7ec:	ldr	r2, [fp, #-16]
    f7f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f7f4:	str	r0, [fp, #-12]
    f7f8:	b	f810 <Fantasy_Movie_parse_json_table+0x92c>
    f7fc:	ldr	r0, [fp, #-8]
    f800:	ldr	r1, [fp, #-12]
    f804:	ldr	r2, [fp, #-16]
    f808:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f80c:	str	r0, [fp, #-12]
    f810:	b	f814 <Fantasy_Movie_parse_json_table+0x930>
    f814:	b	fa04 <Fantasy_Movie_parse_json_table+0xb20>
    f818:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f81c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f820:	movw	r2, #25701	; 0x6465
    f824:	movt	r2, #29545	; 0x7369
    f828:	eor	r1, r1, r2
    f82c:	movw	r2, #26979	; 0x6963
    f830:	movt	r2, #24427	; 0x5f6b
    f834:	eor	r0, r0, r2
    f838:	orr	r0, r0, r1
    f83c:	cmp	r0, #0
    f840:	bne	f9ec <Fantasy_Movie_parse_json_table+0xb08>
    f844:	b	f848 <Fantasy_Movie_parse_json_table+0x964>
    f848:	ldr	r0, [fp, #-12]
    f84c:	add	r0, r0, #8
    f850:	str	r0, [fp, #-12]
    f854:	ldr	r0, [fp, #-12]
    f858:	ldr	r1, [fp, #-16]
    f85c:	bl	7130 <flatcc_json_parser_symbol_part>
    f860:	str	r1, [fp, #-44]	; 0xffffffd4
    f864:	str	r0, [fp, #-48]	; 0xffffffd0
    f868:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    f86c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f870:	movw	r2, #27487	; 0x6b5f
    f874:	eor	r2, r2, r1, lsr #16
    f878:	orr	r0, r0, r1, lsl #16
    f87c:	movw	r1, #28773	; 0x7065
    f880:	movt	r1, #29817	; 0x7479
    f884:	eor	r0, r0, r1
    f888:	orr	r0, r0, r2
    f88c:	cmp	r0, #0
    f890:	bne	f930 <Fantasy_Movie_parse_json_table+0xa4c>
    f894:	b	f898 <Fantasy_Movie_parse_json_table+0x9b4>
    f898:	ldr	r0, [fp, #-8]
    f89c:	ldr	r1, [fp, #-12]
    f8a0:	str	r1, [fp, #-40]	; 0xffffffd8
    f8a4:	ldr	r2, [fp, #-16]
    f8a8:	movw	r3, #6
    f8ac:	bl	7168 <flatcc_json_parser_match_symbol>
    f8b0:	str	r0, [fp, #-12]
    f8b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f8b8:	ldr	r1, [fp, #-12]
    f8bc:	cmp	r0, r1
    f8c0:	beq	f918 <Fantasy_Movie_parse_json_table+0xa34>
    f8c4:	ldr	r0, [fp, #-8]
    f8c8:	ldr	r1, [fp, #-12]
    f8cc:	ldr	r2, [fp, #-16]
    f8d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f8d4:	movw	ip, #2
    f8d8:	str	r3, [sp, #28]
    f8dc:	mov	r3, ip
    f8e0:	movw	ip, #5
    f8e4:	uxth	ip, ip
    f8e8:	str	ip, [sp]
    f8ec:	ldr	ip, [sp, #28]
    f8f0:	str	ip, [sp, #4]
    f8f4:	movw	lr, #0
    f8f8:	movt	lr, #0
    f8fc:	str	lr, [sp, #8]
    f900:	movw	lr, #0
    f904:	movt	lr, #0
    f908:	str	lr, [sp, #12]
    f90c:	bl	0 <flatcc_json_parser_union_type>
    f910:	str	r0, [fp, #-12]
    f914:	b	f92c <Fantasy_Movie_parse_json_table+0xa48>
    f918:	ldr	r0, [fp, #-8]
    f91c:	ldr	r1, [fp, #-12]
    f920:	ldr	r2, [fp, #-16]
    f924:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f928:	str	r0, [fp, #-12]
    f92c:	b	f9e8 <Fantasy_Movie_parse_json_table+0xb04>
    f930:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    f934:	mov	r1, #1795162112	; 0x6b000000
    f938:	teq	r1, r0, lsl #24
    f93c:	bne	f9d0 <Fantasy_Movie_parse_json_table+0xaec>
    f940:	b	f944 <Fantasy_Movie_parse_json_table+0xa60>
    f944:	ldr	r0, [fp, #-8]
    f948:	ldr	r1, [fp, #-12]
    f94c:	str	r1, [fp, #-40]	; 0xffffffd8
    f950:	ldr	r2, [fp, #-16]
    f954:	movw	r3, #1
    f958:	bl	7168 <flatcc_json_parser_match_symbol>
    f95c:	str	r0, [fp, #-12]
    f960:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f964:	ldr	r1, [fp, #-12]
    f968:	cmp	r0, r1
    f96c:	beq	f9b8 <Fantasy_Movie_parse_json_table+0xad4>
    f970:	ldr	r0, [fp, #-8]
    f974:	ldr	r1, [fp, #-12]
    f978:	ldr	r2, [fp, #-16]
    f97c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f980:	movw	ip, #2
    f984:	str	r3, [sp, #24]
    f988:	mov	r3, ip
    f98c:	movw	ip, #5
    f990:	uxth	ip, ip
    f994:	str	ip, [sp]
    f998:	ldr	ip, [sp, #24]
    f99c:	str	ip, [sp, #4]
    f9a0:	movw	lr, #0
    f9a4:	movt	lr, #0
    f9a8:	str	lr, [sp, #8]
    f9ac:	bl	0 <flatcc_json_parser_union>
    f9b0:	str	r0, [fp, #-12]
    f9b4:	b	f9cc <Fantasy_Movie_parse_json_table+0xae8>
    f9b8:	ldr	r0, [fp, #-8]
    f9bc:	ldr	r1, [fp, #-12]
    f9c0:	ldr	r2, [fp, #-16]
    f9c4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f9c8:	str	r0, [fp, #-12]
    f9cc:	b	f9e4 <Fantasy_Movie_parse_json_table+0xb00>
    f9d0:	ldr	r0, [fp, #-8]
    f9d4:	ldr	r1, [fp, #-12]
    f9d8:	ldr	r2, [fp, #-16]
    f9dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f9e0:	str	r0, [fp, #-12]
    f9e4:	b	f9e8 <Fantasy_Movie_parse_json_table+0xb04>
    f9e8:	b	fa00 <Fantasy_Movie_parse_json_table+0xb1c>
    f9ec:	ldr	r0, [fp, #-8]
    f9f0:	ldr	r1, [fp, #-12]
    f9f4:	ldr	r2, [fp, #-16]
    f9f8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f9fc:	str	r0, [fp, #-12]
    fa00:	b	fa04 <Fantasy_Movie_parse_json_table+0xb20>
    fa04:	b	fa08 <Fantasy_Movie_parse_json_table+0xb24>
    fa08:	b	fa0c <Fantasy_Movie_parse_json_table+0xb28>
    fa0c:	ldr	r0, [fp, #-8]
    fa10:	ldr	r1, [fp, #-12]
    fa14:	ldr	r2, [fp, #-16]
    fa18:	sub	r3, fp, #24
    fa1c:	bl	c3e4 <flatcc_json_parser_object_end>
    fa20:	str	r0, [fp, #-12]
    fa24:	b	ef80 <Fantasy_Movie_parse_json_table+0x9c>
    fa28:	ldr	r0, [fp, #-8]
    fa2c:	ldr	r0, [r0, #24]
    fa30:	cmp	r0, #0
    fa34:	beq	fa3c <Fantasy_Movie_parse_json_table+0xb58>
    fa38:	b	fa80 <Fantasy_Movie_parse_json_table+0xb9c>
    fa3c:	ldr	r0, [fp, #-8]
    fa40:	ldr	r1, [fp, #-12]
    fa44:	ldr	r2, [fp, #-16]
    fa48:	ldr	r3, [fp, #-52]	; 0xffffffcc
    fa4c:	bl	0 <flatcc_json_parser_finalize_unions>
    fa50:	str	r0, [fp, #-12]
    fa54:	ldr	r0, [fp, #-8]
    fa58:	ldr	r0, [r0]
    fa5c:	bl	0 <flatcc_builder_end_table>
    fa60:	ldr	r1, [fp, #-20]	; 0xffffffec
    fa64:	str	r0, [r1]
    fa68:	cmp	r0, #0
    fa6c:	bne	fa74 <Fantasy_Movie_parse_json_table+0xb90>
    fa70:	b	fa80 <Fantasy_Movie_parse_json_table+0xb9c>
    fa74:	ldr	r0, [fp, #-12]
    fa78:	str	r0, [fp, #-4]
    fa7c:	b	fa98 <Fantasy_Movie_parse_json_table+0xbb4>
    fa80:	ldr	r0, [fp, #-8]
    fa84:	ldr	r1, [fp, #-12]
    fa88:	ldr	r2, [fp, #-16]
    fa8c:	movw	r3, #33	; 0x21
    fa90:	bl	0 <flatcc_json_parser_set_error>
    fa94:	str	r0, [fp, #-4]
    fa98:	ldr	r0, [fp, #-4]
    fa9c:	mov	sp, fp
    faa0:	pop	{fp, pc}

0000faa4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>:
    faa4:	push	{fp, lr}
    faa8:	mov	fp, sp
    faac:	sub	sp, sp, #64	; 0x40
    fab0:	str	r0, [fp, #-8]
    fab4:	str	r1, [fp, #-12]
    fab8:	str	r2, [fp, #-16]
    fabc:	str	r3, [fp, #-20]	; 0xffffffec
    fac0:	ldr	r0, [fp, #-20]	; 0xffffffec
    fac4:	movw	r1, #0
    fac8:	str	r1, [r0]
    facc:	ldr	r0, [fp, #-8]
    fad0:	ldr	r0, [r0]
    fad4:	movw	r1, #2
    fad8:	bl	0 <flatcc_builder_start_table>
    fadc:	cmp	r0, #0
    fae0:	beq	fae8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x44>
    fae4:	b	fedc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    fae8:	ldr	r0, [fp, #-8]
    faec:	ldr	r1, [fp, #-12]
    faf0:	ldr	r2, [fp, #-16]
    faf4:	sub	r3, fp, #24
    faf8:	bl	6fa0 <flatcc_json_parser_object_start>
    fafc:	str	r0, [fp, #-12]
    fb00:	ldr	r0, [fp, #-24]	; 0xffffffe8
    fb04:	cmp	r0, #0
    fb08:	beq	fe9c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3f8>
    fb0c:	ldr	r0, [fp, #-8]
    fb10:	ldr	r1, [fp, #-12]
    fb14:	ldr	r2, [fp, #-16]
    fb18:	bl	7084 <flatcc_json_parser_symbol_start>
    fb1c:	str	r0, [fp, #-12]
    fb20:	ldr	r0, [fp, #-12]
    fb24:	ldr	r1, [fp, #-16]
    fb28:	bl	7130 <flatcc_json_parser_symbol_part>
    fb2c:	str	r1, [sp, #20]
    fb30:	str	r0, [sp, #16]
    fb34:	ldr	r0, [sp, #16]
    fb38:	ldr	r1, [sp, #20]
    fb3c:	movw	r2, #24929	; 0x6161
    fb40:	movt	r2, #24929	; 0x6161
    fb44:	eor	r1, r1, r2
    fb48:	movw	r2, #25186	; 0x6262
    fb4c:	movt	r2, #24418	; 0x5f62
    fb50:	eor	r0, r0, r2
    fb54:	orr	r0, r0, r1
    fb58:	cmp	r0, #0
    fb5c:	bne	fe6c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c8>
    fb60:	b	fb64 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0xc0>
    fb64:	ldr	r0, [fp, #-12]
    fb68:	add	r0, r0, #8
    fb6c:	str	r0, [fp, #-12]
    fb70:	ldr	r0, [fp, #-12]
    fb74:	ldr	r1, [fp, #-16]
    fb78:	bl	7130 <flatcc_json_parser_symbol_part>
    fb7c:	str	r1, [sp, #20]
    fb80:	str	r0, [sp, #16]
    fb84:	ldr	r0, [sp, #16]
    fb88:	ldr	r1, [sp, #20]
    fb8c:	movw	r2, #24435	; 0x5f73
    fb90:	movt	r2, #98	; 0x62
    fb94:	eor	r2, r2, r1, lsr #8
    fb98:	lsr	r0, r0, #8
    fb9c:	orr	r0, r0, r1, lsl #24
    fba0:	movw	r1, #28787	; 0x7073
    fba4:	movt	r1, #29797	; 0x7465
    fba8:	eor	r0, r0, r1
    fbac:	orr	r0, r0, r2
    fbb0:	cmp	r0, #0
    fbb4:	bne	fcf8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x254>
    fbb8:	b	fbbc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x118>
    fbbc:	ldr	r0, [fp, #-8]
    fbc0:	ldr	r1, [fp, #-12]
    fbc4:	str	r1, [sp, #24]
    fbc8:	ldr	r2, [fp, #-16]
    fbcc:	movw	r3, #7
    fbd0:	bl	7168 <flatcc_json_parser_match_symbol>
    fbd4:	str	r0, [fp, #-12]
    fbd8:	ldr	r0, [sp, #24]
    fbdc:	ldr	r1, [fp, #-12]
    fbe0:	cmp	r0, r1
    fbe4:	beq	fce0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x23c>
    fbe8:	mov	r0, #0
    fbec:	str	r0, [sp, #12]
    fbf0:	str	r0, [sp, #8]
    fbf4:	ldr	r0, [fp, #-8]
    fbf8:	ldr	r1, [fp, #-12]
    fbfc:	str	r1, [sp, #24]
    fc00:	ldr	r2, [fp, #-16]
    fc04:	add	r3, sp, #8
    fc08:	bl	b7b0 <flatcc_json_parser_int64>
    fc0c:	str	r0, [fp, #-12]
    fc10:	ldr	r0, [sp, #24]
    fc14:	ldr	r1, [fp, #-12]
    fc18:	cmp	r0, r1
    fc1c:	bne	fc70 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1cc>
    fc20:	ldr	r0, [fp, #-8]
    fc24:	ldr	r1, [fp, #-12]
    fc28:	str	r1, [sp, #24]
    fc2c:	ldr	r2, [fp, #-16]
    fc30:	movw	r3, #0
    fc34:	movt	r3, #0
    fc38:	add	ip, sp, #8
    fc3c:	str	ip, [sp]
    fc40:	bl	b888 <flatcc_json_parser_symbolic_int64>
    fc44:	str	r0, [fp, #-12]
    fc48:	ldr	r0, [fp, #-12]
    fc4c:	ldr	r1, [sp, #24]
    fc50:	cmp	r0, r1
    fc54:	beq	fc68 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1c4>
    fc58:	ldr	r0, [fp, #-12]
    fc5c:	ldr	r1, [fp, #-16]
    fc60:	cmp	r0, r1
    fc64:	bne	fc6c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1c8>
    fc68:	b	fedc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    fc6c:	b	fc70 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1cc>
    fc70:	ldr	r0, [sp, #8]
    fc74:	ldr	r1, [sp, #12]
    fc78:	orr	r0, r0, r1
    fc7c:	cmp	r0, #0
    fc80:	bne	fc9c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1f8>
    fc84:	b	fc88 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1e4>
    fc88:	ldr	r0, [fp, #-8]
    fc8c:	ldr	r0, [r0, #8]
    fc90:	and	r0, r0, #2
    fc94:	cmp	r0, #0
    fc98:	beq	fcdc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x238>
    fc9c:	ldr	r0, [fp, #-8]
    fca0:	ldr	r0, [r0]
    fca4:	movw	r1, #0
    fca8:	movw	r2, #8
    fcac:	movw	r3, #8
    fcb0:	uxth	r3, r3
    fcb4:	bl	0 <flatcc_builder_table_add>
    fcb8:	str	r0, [fp, #-28]	; 0xffffffe4
    fcbc:	movw	r1, #0
    fcc0:	cmp	r0, r1
    fcc4:	bne	fccc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x228>
    fcc8:	b	fedc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    fccc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fcd0:	ldr	r2, [sp, #8]
    fcd4:	ldr	r3, [sp, #12]
    fcd8:	bl	bac8 <flatbuffers_int64_write_to_pe>
    fcdc:	b	fcf4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x250>
    fce0:	ldr	r0, [fp, #-8]
    fce4:	ldr	r1, [fp, #-12]
    fce8:	ldr	r2, [fp, #-16]
    fcec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fcf0:	str	r0, [fp, #-12]
    fcf4:	b	fe68 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c4>
    fcf8:	ldr	r0, [sp, #16]
    fcfc:	ldr	r1, [sp, #20]
    fd00:	movw	r2, #29556	; 0x7374
    fd04:	movt	r2, #25183	; 0x625f
    fd08:	eor	r1, r1, r2
    fd0c:	movw	r2, #29791	; 0x745f
    fd10:	movt	r2, #24946	; 0x6172
    fd14:	eor	r0, r0, r2
    fd18:	orr	r0, r0, r1
    fd1c:	cmp	r0, #0
    fd20:	bne	fe50 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3ac>
    fd24:	b	fd28 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x284>
    fd28:	ldr	r0, [fp, #-8]
    fd2c:	ldr	r1, [fp, #-12]
    fd30:	str	r1, [sp, #24]
    fd34:	ldr	r2, [fp, #-16]
    fd38:	movw	r3, #8
    fd3c:	bl	7168 <flatcc_json_parser_match_symbol>
    fd40:	str	r0, [fp, #-12]
    fd44:	ldr	r0, [sp, #24]
    fd48:	ldr	r1, [fp, #-12]
    fd4c:	cmp	r0, r1
    fd50:	beq	fe38 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x394>
    fd54:	movw	r0, #0
    fd58:	str	r0, [sp, #4]
    fd5c:	ldr	r0, [fp, #-8]
    fd60:	ldr	r1, [fp, #-12]
    fd64:	str	r1, [sp, #24]
    fd68:	ldr	r2, [fp, #-16]
    fd6c:	add	r3, sp, #4
    fd70:	bl	bb00 <flatcc_json_parser_uint32>
    fd74:	str	r0, [fp, #-12]
    fd78:	ldr	r0, [sp, #24]
    fd7c:	ldr	r1, [fp, #-12]
    fd80:	cmp	r0, r1
    fd84:	bne	fdd8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x334>
    fd88:	ldr	r0, [fp, #-8]
    fd8c:	ldr	r1, [fp, #-12]
    fd90:	str	r1, [sp, #24]
    fd94:	ldr	r2, [fp, #-16]
    fd98:	movw	r3, #0
    fd9c:	movt	r3, #0
    fda0:	add	ip, sp, #4
    fda4:	str	ip, [sp]
    fda8:	bl	bbd8 <flatcc_json_parser_symbolic_uint32>
    fdac:	str	r0, [fp, #-12]
    fdb0:	ldr	r0, [fp, #-12]
    fdb4:	ldr	r1, [sp, #24]
    fdb8:	cmp	r0, r1
    fdbc:	beq	fdd0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x32c>
    fdc0:	ldr	r0, [fp, #-12]
    fdc4:	ldr	r1, [fp, #-16]
    fdc8:	cmp	r0, r1
    fdcc:	bne	fdd4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x330>
    fdd0:	b	fedc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    fdd4:	b	fdd8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x334>
    fdd8:	ldr	r0, [sp, #4]
    fddc:	cmp	r0, #0
    fde0:	bne	fdf8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x354>
    fde4:	ldr	r0, [fp, #-8]
    fde8:	ldr	r0, [r0, #8]
    fdec:	and	r0, r0, #2
    fdf0:	cmp	r0, #0
    fdf4:	beq	fe34 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x390>
    fdf8:	ldr	r0, [fp, #-8]
    fdfc:	ldr	r0, [r0]
    fe00:	movw	r1, #1
    fe04:	movw	r2, #4
    fe08:	movw	r3, #4
    fe0c:	uxth	r3, r3
    fe10:	bl	0 <flatcc_builder_table_add>
    fe14:	str	r0, [fp, #-28]	; 0xffffffe4
    fe18:	movw	r1, #0
    fe1c:	cmp	r0, r1
    fe20:	bne	fe28 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x384>
    fe24:	b	fedc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    fe28:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fe2c:	ldr	r1, [sp, #4]
    fe30:	bl	be00 <flatbuffers_uint32_write_to_pe>
    fe34:	b	fe4c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3a8>
    fe38:	ldr	r0, [fp, #-8]
    fe3c:	ldr	r1, [fp, #-12]
    fe40:	ldr	r2, [fp, #-16]
    fe44:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fe48:	str	r0, [fp, #-12]
    fe4c:	b	fe64 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c0>
    fe50:	ldr	r0, [fp, #-8]
    fe54:	ldr	r1, [fp, #-12]
    fe58:	ldr	r2, [fp, #-16]
    fe5c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fe60:	str	r0, [fp, #-12]
    fe64:	b	fe68 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c4>
    fe68:	b	fe80 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3dc>
    fe6c:	ldr	r0, [fp, #-8]
    fe70:	ldr	r1, [fp, #-12]
    fe74:	ldr	r2, [fp, #-16]
    fe78:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fe7c:	str	r0, [fp, #-12]
    fe80:	ldr	r0, [fp, #-8]
    fe84:	ldr	r1, [fp, #-12]
    fe88:	ldr	r2, [fp, #-16]
    fe8c:	sub	r3, fp, #24
    fe90:	bl	c3e4 <flatcc_json_parser_object_end>
    fe94:	str	r0, [fp, #-12]
    fe98:	b	fb00 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x5c>
    fe9c:	ldr	r0, [fp, #-8]
    fea0:	ldr	r0, [r0, #24]
    fea4:	cmp	r0, #0
    fea8:	beq	feb0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x40c>
    feac:	b	fedc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    feb0:	ldr	r0, [fp, #-8]
    feb4:	ldr	r0, [r0]
    feb8:	bl	0 <flatcc_builder_end_table>
    febc:	ldr	r1, [fp, #-20]	; 0xffffffec
    fec0:	str	r0, [r1]
    fec4:	cmp	r0, #0
    fec8:	bne	fed0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x42c>
    fecc:	b	fedc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    fed0:	ldr	r0, [fp, #-12]
    fed4:	str	r0, [fp, #-4]
    fed8:	b	fef4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x450>
    fedc:	ldr	r0, [fp, #-8]
    fee0:	ldr	r1, [fp, #-12]
    fee4:	ldr	r2, [fp, #-16]
    fee8:	movw	r3, #33	; 0x21
    feec:	bl	0 <flatcc_json_parser_set_error>
    fef0:	str	r0, [fp, #-4]
    fef4:	ldr	r0, [fp, #-4]
    fef8:	mov	sp, fp
    fefc:	pop	{fp, pc}

0000ff00 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>:
    ff00:	push	{fp, lr}
    ff04:	mov	fp, sp
    ff08:	sub	sp, sp, #96	; 0x60
    ff0c:	str	r0, [fp, #-8]
    ff10:	str	r1, [fp, #-12]
    ff14:	str	r2, [fp, #-16]
    ff18:	str	r3, [fp, #-20]	; 0xffffffec
    ff1c:	ldr	r0, [fp, #-20]	; 0xffffffec
    ff20:	movw	r1, #0
    ff24:	str	r1, [r0]
    ff28:	ldr	r0, [fp, #-8]
    ff2c:	ldr	r0, [r0]
    ff30:	movw	r1, #9
    ff34:	bl	0 <flatcc_builder_start_table>
    ff38:	cmp	r0, #0
    ff3c:	beq	ff44 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x44>
    ff40:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    ff44:	ldr	r0, [fp, #-8]
    ff48:	ldr	r1, [fp, #-12]
    ff4c:	ldr	r2, [fp, #-16]
    ff50:	sub	r3, fp, #24
    ff54:	bl	6fa0 <flatcc_json_parser_object_start>
    ff58:	str	r0, [fp, #-12]
    ff5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ff60:	cmp	r0, #0
    ff64:	beq	10abc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbbc>
    ff68:	ldr	r0, [fp, #-8]
    ff6c:	ldr	r1, [fp, #-12]
    ff70:	ldr	r2, [fp, #-16]
    ff74:	bl	7084 <flatcc_json_parser_symbol_start>
    ff78:	str	r0, [fp, #-12]
    ff7c:	ldr	r0, [fp, #-12]
    ff80:	ldr	r1, [fp, #-16]
    ff84:	bl	7130 <flatcc_json_parser_symbol_part>
    ff88:	str	r1, [sp, #52]	; 0x34
    ff8c:	str	r0, [sp, #48]	; 0x30
    ff90:	ldr	r0, [sp, #52]	; 0x34
    ff94:	movw	r1, #25442	; 0x6362
    ff98:	movt	r1, #25443	; 0x6363
    ff9c:	cmp	r0, r1
    ffa0:	bhi	1043c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x53c>
    ffa4:	b	ffa8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8>
    ffa8:	ldr	r0, [sp, #48]	; 0x30
    ffac:	ldr	r1, [sp, #52]	; 0x34
    ffb0:	movw	r2, #24929	; 0x6161
    ffb4:	movt	r2, #24929	; 0x6161
    ffb8:	eor	r1, r1, r2
    ffbc:	movw	r2, #13108	; 0x3334
    ffc0:	movt	r2, #12594	; 0x3132
    ffc4:	eor	r0, r0, r2
    ffc8:	orr	r0, r0, r1
    ffcc:	cmp	r0, #0
    ffd0:	bne	1014c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x24c>
    ffd4:	b	ffd8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xd8>
    ffd8:	ldr	r0, [fp, #-12]
    ffdc:	add	r0, r0, #8
    ffe0:	str	r0, [fp, #-12]
    ffe4:	ldr	r0, [fp, #-12]
    ffe8:	ldr	r1, [fp, #-16]
    ffec:	bl	7130 <flatcc_json_parser_symbol_part>
    fff0:	str	r1, [sp, #52]	; 0x34
    fff4:	str	r0, [sp, #48]	; 0x30
    fff8:	ldrb	r0, [sp, #55]	; 0x37
    fffc:	mov	r1, #889192448	; 0x35000000
   10000:	teq	r1, r0, lsl #24
   10004:	bne	10134 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x234>
   10008:	b	1000c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x10c>
   1000c:	ldr	r0, [fp, #-8]
   10010:	ldr	r1, [fp, #-12]
   10014:	str	r1, [fp, #-40]	; 0xffffffd8
   10018:	ldr	r2, [fp, #-16]
   1001c:	movw	r3, #1
   10020:	bl	7168 <flatcc_json_parser_match_symbol>
   10024:	str	r0, [fp, #-12]
   10028:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1002c:	ldr	r1, [fp, #-12]
   10030:	cmp	r0, r1
   10034:	beq	1011c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x21c>
   10038:	movw	r0, #0
   1003c:	str	r0, [sp, #44]	; 0x2c
   10040:	ldr	r0, [fp, #-8]
   10044:	ldr	r1, [fp, #-12]
   10048:	str	r1, [fp, #-40]	; 0xffffffd8
   1004c:	ldr	r2, [fp, #-16]
   10050:	add	r3, sp, #44	; 0x2c
   10054:	bl	bb00 <flatcc_json_parser_uint32>
   10058:	str	r0, [fp, #-12]
   1005c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10060:	ldr	r1, [fp, #-12]
   10064:	cmp	r0, r1
   10068:	bne	100bc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1bc>
   1006c:	ldr	r0, [fp, #-8]
   10070:	ldr	r1, [fp, #-12]
   10074:	str	r1, [fp, #-40]	; 0xffffffd8
   10078:	ldr	r2, [fp, #-16]
   1007c:	movw	r3, #0
   10080:	movt	r3, #0
   10084:	add	ip, sp, #44	; 0x2c
   10088:	str	ip, [sp]
   1008c:	bl	bbd8 <flatcc_json_parser_symbolic_uint32>
   10090:	str	r0, [fp, #-12]
   10094:	ldr	r0, [fp, #-12]
   10098:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1009c:	cmp	r0, r1
   100a0:	beq	100b4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1b4>
   100a4:	ldr	r0, [fp, #-12]
   100a8:	ldr	r1, [fp, #-16]
   100ac:	cmp	r0, r1
   100b0:	bne	100b8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1b8>
   100b4:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   100b8:	b	100bc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1bc>
   100bc:	ldr	r0, [sp, #44]	; 0x2c
   100c0:	cmp	r0, #0
   100c4:	bne	100dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1dc>
   100c8:	ldr	r0, [fp, #-8]
   100cc:	ldr	r0, [r0, #8]
   100d0:	and	r0, r0, #2
   100d4:	cmp	r0, #0
   100d8:	beq	10118 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x218>
   100dc:	ldr	r0, [fp, #-8]
   100e0:	ldr	r0, [r0]
   100e4:	movw	r1, #1
   100e8:	movw	r2, #4
   100ec:	movw	r3, #4
   100f0:	uxth	r3, r3
   100f4:	bl	0 <flatcc_builder_table_add>
   100f8:	str	r0, [fp, #-28]	; 0xffffffe4
   100fc:	movw	r1, #0
   10100:	cmp	r0, r1
   10104:	bne	1010c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x20c>
   10108:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   1010c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10110:	ldr	r1, [sp, #44]	; 0x2c
   10114:	bl	be00 <flatbuffers_uint32_write_to_pe>
   10118:	b	10130 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x230>
   1011c:	ldr	r0, [fp, #-8]
   10120:	ldr	r1, [fp, #-12]
   10124:	ldr	r2, [fp, #-16]
   10128:	bl	0 <flatcc_json_parser_unmatched_symbol>
   1012c:	str	r0, [fp, #-12]
   10130:	b	10148 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x248>
   10134:	ldr	r0, [fp, #-8]
   10138:	ldr	r1, [fp, #-12]
   1013c:	ldr	r2, [fp, #-16]
   10140:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10144:	str	r0, [fp, #-12]
   10148:	b	10438 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x538>
   1014c:	ldr	r0, [sp, #52]	; 0x34
   10150:	movw	r1, #24929	; 0x6161
   10154:	movt	r1, #24929	; 0x6161
   10158:	teq	r0, r1
   1015c:	bne	101f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f0>
   10160:	b	10164 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x264>
   10164:	ldr	r0, [fp, #-8]
   10168:	ldr	r1, [fp, #-12]
   1016c:	str	r1, [fp, #-40]	; 0xffffffd8
   10170:	ldr	r2, [fp, #-16]
   10174:	movw	r3, #4
   10178:	bl	7168 <flatcc_json_parser_match_symbol>
   1017c:	str	r0, [fp, #-12]
   10180:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10184:	ldr	r1, [fp, #-12]
   10188:	cmp	r0, r1
   1018c:	beq	101e8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2e8>
   10190:	ldr	r0, [fp, #-8]
   10194:	ldr	r1, [fp, #-12]
   10198:	ldr	r2, [fp, #-16]
   1019c:	sub	r3, fp, #32
   101a0:	bl	0 <flatcc_json_parser_build_string>
   101a4:	str	r0, [fp, #-12]
   101a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   101ac:	cmp	r0, #0
   101b0:	beq	101d4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2d4>
   101b4:	ldr	r0, [fp, #-8]
   101b8:	ldr	r0, [r0]
   101bc:	movw	r1, #0
   101c0:	bl	0 <flatcc_builder_table_add_offset>
   101c4:	str	r0, [fp, #-36]	; 0xffffffdc
   101c8:	movw	r1, #0
   101cc:	cmp	r0, r1
   101d0:	bne	101d8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2d8>
   101d4:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   101d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   101dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   101e0:	str	r0, [r1]
   101e4:	b	101ec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2ec>
   101e8:	b	101f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f8>
   101ec:	b	101f4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f4>
   101f0:	b	101f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f8>
   101f4:	b	10434 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x534>
   101f8:	ldr	r0, [sp, #48]	; 0x30
   101fc:	ldr	r1, [sp, #52]	; 0x34
   10200:	movw	r2, #25186	; 0x6262
   10204:	movt	r2, #25186	; 0x6262
   10208:	eor	r1, r1, r2
   1020c:	movw	r2, #13108	; 0x3334
   10210:	movt	r2, #12594	; 0x3132
   10214:	eor	r0, r0, r2
   10218:	orr	r0, r0, r1
   1021c:	cmp	r0, #0
   10220:	bne	10364 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x464>
   10224:	b	10228 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x328>
   10228:	ldr	r0, [fp, #-8]
   1022c:	ldr	r1, [fp, #-12]
   10230:	str	r1, [fp, #-40]	; 0xffffffd8
   10234:	ldr	r2, [fp, #-16]
   10238:	movw	r3, #8
   1023c:	bl	7168 <flatcc_json_parser_match_symbol>
   10240:	str	r0, [fp, #-12]
   10244:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10248:	ldr	r1, [fp, #-12]
   1024c:	cmp	r0, r1
   10250:	beq	1034c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x44c>
   10254:	mov	r0, #0
   10258:	str	r0, [sp, #36]	; 0x24
   1025c:	str	r0, [sp, #32]
   10260:	ldr	r0, [fp, #-8]
   10264:	ldr	r1, [fp, #-12]
   10268:	str	r1, [fp, #-40]	; 0xffffffd8
   1026c:	ldr	r2, [fp, #-16]
   10270:	add	r3, sp, #32
   10274:	bl	b7b0 <flatcc_json_parser_int64>
   10278:	str	r0, [fp, #-12]
   1027c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10280:	ldr	r1, [fp, #-12]
   10284:	cmp	r0, r1
   10288:	bne	102dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3dc>
   1028c:	ldr	r0, [fp, #-8]
   10290:	ldr	r1, [fp, #-12]
   10294:	str	r1, [fp, #-40]	; 0xffffffd8
   10298:	ldr	r2, [fp, #-16]
   1029c:	movw	r3, #0
   102a0:	movt	r3, #0
   102a4:	add	ip, sp, #32
   102a8:	str	ip, [sp]
   102ac:	bl	b888 <flatcc_json_parser_symbolic_int64>
   102b0:	str	r0, [fp, #-12]
   102b4:	ldr	r0, [fp, #-12]
   102b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   102bc:	cmp	r0, r1
   102c0:	beq	102d4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3d4>
   102c4:	ldr	r0, [fp, #-12]
   102c8:	ldr	r1, [fp, #-16]
   102cc:	cmp	r0, r1
   102d0:	bne	102d8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3d8>
   102d4:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   102d8:	b	102dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3dc>
   102dc:	ldr	r0, [sp, #32]
   102e0:	ldr	r1, [sp, #36]	; 0x24
   102e4:	orr	r0, r0, r1
   102e8:	cmp	r0, #0
   102ec:	bne	10308 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x408>
   102f0:	b	102f4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3f4>
   102f4:	ldr	r0, [fp, #-8]
   102f8:	ldr	r0, [r0, #8]
   102fc:	and	r0, r0, #2
   10300:	cmp	r0, #0
   10304:	beq	10348 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x448>
   10308:	ldr	r0, [fp, #-8]
   1030c:	ldr	r0, [r0]
   10310:	movw	r1, #3
   10314:	movw	r2, #8
   10318:	movw	r3, #8
   1031c:	uxth	r3, r3
   10320:	bl	0 <flatcc_builder_table_add>
   10324:	str	r0, [fp, #-28]	; 0xffffffe4
   10328:	movw	r1, #0
   1032c:	cmp	r0, r1
   10330:	bne	10338 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x438>
   10334:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10338:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1033c:	ldr	r2, [sp, #32]
   10340:	ldr	r3, [sp, #36]	; 0x24
   10344:	bl	bac8 <flatbuffers_int64_write_to_pe>
   10348:	b	10360 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x460>
   1034c:	ldr	r0, [fp, #-8]
   10350:	ldr	r1, [fp, #-12]
   10354:	ldr	r2, [fp, #-16]
   10358:	bl	0 <flatcc_json_parser_unmatched_symbol>
   1035c:	str	r0, [fp, #-12]
   10360:	b	10430 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x530>
   10364:	ldr	r0, [sp, #52]	; 0x34
   10368:	movw	r1, #25186	; 0x6262
   1036c:	movt	r1, #25186	; 0x6262
   10370:	teq	r0, r1
   10374:	bne	10418 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x518>
   10378:	b	1037c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x47c>
   1037c:	ldr	r0, [fp, #-8]
   10380:	ldr	r1, [fp, #-12]
   10384:	str	r1, [fp, #-40]	; 0xffffffd8
   10388:	ldr	r2, [fp, #-16]
   1038c:	movw	r3, #4
   10390:	bl	7168 <flatcc_json_parser_match_symbol>
   10394:	str	r0, [fp, #-12]
   10398:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1039c:	ldr	r1, [fp, #-12]
   103a0:	cmp	r0, r1
   103a4:	beq	10400 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x500>
   103a8:	ldr	r0, [fp, #-8]
   103ac:	ldr	r1, [fp, #-12]
   103b0:	ldr	r2, [fp, #-16]
   103b4:	sub	r3, fp, #32
   103b8:	bl	0 <flatcc_json_parser_build_string>
   103bc:	str	r0, [fp, #-12]
   103c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   103c4:	cmp	r0, #0
   103c8:	beq	103ec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x4ec>
   103cc:	ldr	r0, [fp, #-8]
   103d0:	ldr	r0, [r0]
   103d4:	movw	r1, #2
   103d8:	bl	0 <flatcc_builder_table_add_offset>
   103dc:	str	r0, [fp, #-36]	; 0xffffffdc
   103e0:	movw	r1, #0
   103e4:	cmp	r0, r1
   103e8:	bne	103f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x4f0>
   103ec:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   103f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   103f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   103f8:	str	r0, [r1]
   103fc:	b	10414 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x514>
   10400:	ldr	r0, [fp, #-8]
   10404:	ldr	r1, [fp, #-12]
   10408:	ldr	r2, [fp, #-16]
   1040c:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10410:	str	r0, [fp, #-12]
   10414:	b	1042c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x52c>
   10418:	ldr	r0, [fp, #-8]
   1041c:	ldr	r1, [fp, #-12]
   10420:	ldr	r2, [fp, #-16]
   10424:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10428:	str	r0, [fp, #-12]
   1042c:	b	10430 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x530>
   10430:	b	10434 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x534>
   10434:	b	10438 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x538>
   10438:	b	10aa0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xba0>
   1043c:	ldr	r0, [sp, #48]	; 0x30
   10440:	ldr	r1, [sp, #52]	; 0x34
   10444:	movw	r2, #25443	; 0x6363
   10448:	movt	r2, #25443	; 0x6363
   1044c:	eor	r1, r1, r2
   10450:	movw	r2, #13108	; 0x3334
   10454:	movt	r2, #12594	; 0x3132
   10458:	eor	r0, r0, r2
   1045c:	orr	r0, r0, r1
   10460:	cmp	r0, #0
   10464:	bne	10708 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x808>
   10468:	b	1046c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x56c>
   1046c:	ldr	r0, [fp, #-8]
   10470:	ldr	r1, [fp, #-12]
   10474:	str	r1, [fp, #-40]	; 0xffffffd8
   10478:	ldr	r2, [fp, #-16]
   1047c:	movw	r3, #8
   10480:	bl	7168 <flatcc_json_parser_match_symbol>
   10484:	str	r0, [fp, #-12]
   10488:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1048c:	ldr	r1, [fp, #-12]
   10490:	cmp	r0, r1
   10494:	beq	10590 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x690>
   10498:	mov	r0, #0
   1049c:	str	r0, [sp, #28]
   104a0:	str	r0, [sp, #24]
   104a4:	ldr	r0, [fp, #-8]
   104a8:	ldr	r1, [fp, #-12]
   104ac:	str	r1, [fp, #-40]	; 0xffffffd8
   104b0:	ldr	r2, [fp, #-16]
   104b4:	add	r3, sp, #24
   104b8:	bl	b7b0 <flatcc_json_parser_int64>
   104bc:	str	r0, [fp, #-12]
   104c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   104c4:	ldr	r1, [fp, #-12]
   104c8:	cmp	r0, r1
   104cc:	bne	10520 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x620>
   104d0:	ldr	r0, [fp, #-8]
   104d4:	ldr	r1, [fp, #-12]
   104d8:	str	r1, [fp, #-40]	; 0xffffffd8
   104dc:	ldr	r2, [fp, #-16]
   104e0:	movw	r3, #0
   104e4:	movt	r3, #0
   104e8:	add	ip, sp, #24
   104ec:	str	ip, [sp]
   104f0:	bl	b888 <flatcc_json_parser_symbolic_int64>
   104f4:	str	r0, [fp, #-12]
   104f8:	ldr	r0, [fp, #-12]
   104fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10500:	cmp	r0, r1
   10504:	beq	10518 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x618>
   10508:	ldr	r0, [fp, #-12]
   1050c:	ldr	r1, [fp, #-16]
   10510:	cmp	r0, r1
   10514:	bne	1051c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x61c>
   10518:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   1051c:	b	10520 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x620>
   10520:	ldr	r0, [sp, #24]
   10524:	ldr	r1, [sp, #28]
   10528:	orr	r0, r0, r1
   1052c:	cmp	r0, #0
   10530:	bne	1054c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x64c>
   10534:	b	10538 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x638>
   10538:	ldr	r0, [fp, #-8]
   1053c:	ldr	r0, [r0, #8]
   10540:	and	r0, r0, #2
   10544:	cmp	r0, #0
   10548:	beq	1058c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x68c>
   1054c:	ldr	r0, [fp, #-8]
   10550:	ldr	r0, [r0]
   10554:	movw	r1, #5
   10558:	movw	r2, #8
   1055c:	movw	r3, #8
   10560:	uxth	r3, r3
   10564:	bl	0 <flatcc_builder_table_add>
   10568:	str	r0, [fp, #-28]	; 0xffffffe4
   1056c:	movw	r1, #0
   10570:	cmp	r0, r1
   10574:	bne	1057c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x67c>
   10578:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   1057c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10580:	ldr	r2, [sp, #24]
   10584:	ldr	r3, [sp, #28]
   10588:	bl	bac8 <flatbuffers_int64_write_to_pe>
   1058c:	b	10704 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x804>
   10590:	ldr	r0, [fp, #-12]
   10594:	add	r0, r0, #8
   10598:	str	r0, [fp, #-12]
   1059c:	ldr	r0, [fp, #-12]
   105a0:	ldr	r1, [fp, #-16]
   105a4:	bl	7130 <flatcc_json_parser_symbol_part>
   105a8:	str	r1, [sp, #52]	; 0x34
   105ac:	str	r0, [sp, #48]	; 0x30
   105b0:	ldrb	r0, [sp, #55]	; 0x37
   105b4:	mov	r1, #889192448	; 0x35000000
   105b8:	teq	r1, r0, lsl #24
   105bc:	bne	106ec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7ec>
   105c0:	b	105c4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x6c4>
   105c4:	ldr	r0, [fp, #-8]
   105c8:	ldr	r1, [fp, #-12]
   105cc:	str	r1, [fp, #-40]	; 0xffffffd8
   105d0:	ldr	r2, [fp, #-16]
   105d4:	movw	r3, #1
   105d8:	bl	7168 <flatcc_json_parser_match_symbol>
   105dc:	str	r0, [fp, #-12]
   105e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   105e4:	ldr	r1, [fp, #-12]
   105e8:	cmp	r0, r1
   105ec:	beq	106d4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7d4>
   105f0:	movw	r0, #0
   105f4:	str	r0, [sp, #20]
   105f8:	ldr	r0, [fp, #-8]
   105fc:	ldr	r1, [fp, #-12]
   10600:	str	r1, [fp, #-40]	; 0xffffffd8
   10604:	ldr	r2, [fp, #-16]
   10608:	add	r3, sp, #20
   1060c:	bl	bb00 <flatcc_json_parser_uint32>
   10610:	str	r0, [fp, #-12]
   10614:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10618:	ldr	r1, [fp, #-12]
   1061c:	cmp	r0, r1
   10620:	bne	10674 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x774>
   10624:	ldr	r0, [fp, #-8]
   10628:	ldr	r1, [fp, #-12]
   1062c:	str	r1, [fp, #-40]	; 0xffffffd8
   10630:	ldr	r2, [fp, #-16]
   10634:	movw	r3, #0
   10638:	movt	r3, #0
   1063c:	add	ip, sp, #20
   10640:	str	ip, [sp]
   10644:	bl	bbd8 <flatcc_json_parser_symbolic_uint32>
   10648:	str	r0, [fp, #-12]
   1064c:	ldr	r0, [fp, #-12]
   10650:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10654:	cmp	r0, r1
   10658:	beq	1066c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x76c>
   1065c:	ldr	r0, [fp, #-12]
   10660:	ldr	r1, [fp, #-16]
   10664:	cmp	r0, r1
   10668:	bne	10670 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x770>
   1066c:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10670:	b	10674 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x774>
   10674:	ldr	r0, [sp, #20]
   10678:	cmp	r0, #0
   1067c:	bne	10694 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x794>
   10680:	ldr	r0, [fp, #-8]
   10684:	ldr	r0, [r0, #8]
   10688:	and	r0, r0, #2
   1068c:	cmp	r0, #0
   10690:	beq	106d0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7d0>
   10694:	ldr	r0, [fp, #-8]
   10698:	ldr	r0, [r0]
   1069c:	movw	r1, #6
   106a0:	movw	r2, #4
   106a4:	movw	r3, #4
   106a8:	uxth	r3, r3
   106ac:	bl	0 <flatcc_builder_table_add>
   106b0:	str	r0, [fp, #-28]	; 0xffffffe4
   106b4:	movw	r1, #0
   106b8:	cmp	r0, r1
   106bc:	bne	106c4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7c4>
   106c0:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   106c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   106c8:	ldr	r1, [sp, #20]
   106cc:	bl	be00 <flatbuffers_uint32_write_to_pe>
   106d0:	b	106e8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7e8>
   106d4:	ldr	r0, [fp, #-8]
   106d8:	ldr	r1, [fp, #-12]
   106dc:	ldr	r2, [fp, #-16]
   106e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
   106e4:	str	r0, [fp, #-12]
   106e8:	b	10700 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x800>
   106ec:	ldr	r0, [fp, #-8]
   106f0:	ldr	r1, [fp, #-12]
   106f4:	ldr	r2, [fp, #-16]
   106f8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   106fc:	str	r0, [fp, #-12]
   10700:	b	10704 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x804>
   10704:	b	10a9c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb9c>
   10708:	ldr	r0, [sp, #52]	; 0x34
   1070c:	movw	r1, #25443	; 0x6363
   10710:	movt	r1, #25443	; 0x6363
   10714:	teq	r0, r1
   10718:	bne	107ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8ac>
   1071c:	b	10720 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x820>
   10720:	ldr	r0, [fp, #-8]
   10724:	ldr	r1, [fp, #-12]
   10728:	str	r1, [fp, #-40]	; 0xffffffd8
   1072c:	ldr	r2, [fp, #-16]
   10730:	movw	r3, #4
   10734:	bl	7168 <flatcc_json_parser_match_symbol>
   10738:	str	r0, [fp, #-12]
   1073c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10740:	ldr	r1, [fp, #-12]
   10744:	cmp	r0, r1
   10748:	beq	107a4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8a4>
   1074c:	ldr	r0, [fp, #-8]
   10750:	ldr	r1, [fp, #-12]
   10754:	ldr	r2, [fp, #-16]
   10758:	sub	r3, fp, #32
   1075c:	bl	0 <flatcc_json_parser_build_string>
   10760:	str	r0, [fp, #-12]
   10764:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10768:	cmp	r0, #0
   1076c:	beq	10790 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x890>
   10770:	ldr	r0, [fp, #-8]
   10774:	ldr	r0, [r0]
   10778:	movw	r1, #4
   1077c:	bl	0 <flatcc_builder_table_add_offset>
   10780:	str	r0, [fp, #-36]	; 0xffffffdc
   10784:	movw	r1, #0
   10788:	cmp	r0, r1
   1078c:	bne	10794 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x894>
   10790:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10794:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10798:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1079c:	str	r0, [r1]
   107a0:	b	107a8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8a8>
   107a4:	b	107b4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8b4>
   107a8:	b	107b0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8b0>
   107ac:	b	107b4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8b4>
   107b0:	b	10a98 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb98>
   107b4:	ldr	r0, [sp, #48]	; 0x30
   107b8:	ldr	r1, [sp, #52]	; 0x34
   107bc:	movw	r2, #25700	; 0x6464
   107c0:	movt	r2, #25700	; 0x6464
   107c4:	eor	r1, r1, r2
   107c8:	movw	r2, #13108	; 0x3334
   107cc:	movt	r2, #12594	; 0x3132
   107d0:	eor	r0, r0, r2
   107d4:	orr	r0, r0, r1
   107d8:	cmp	r0, #0
   107dc:	bne	10a80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb80>
   107e0:	b	107e4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8e4>
   107e4:	ldr	r0, [fp, #-8]
   107e8:	ldr	r1, [fp, #-12]
   107ec:	str	r1, [fp, #-40]	; 0xffffffd8
   107f0:	ldr	r2, [fp, #-16]
   107f4:	movw	r3, #8
   107f8:	bl	7168 <flatcc_json_parser_match_symbol>
   107fc:	str	r0, [fp, #-12]
   10800:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10804:	ldr	r1, [fp, #-12]
   10808:	cmp	r0, r1
   1080c:	beq	10908 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa08>
   10810:	mov	r0, #0
   10814:	str	r0, [sp, #12]
   10818:	str	r0, [sp, #8]
   1081c:	ldr	r0, [fp, #-8]
   10820:	ldr	r1, [fp, #-12]
   10824:	str	r1, [fp, #-40]	; 0xffffffd8
   10828:	ldr	r2, [fp, #-16]
   1082c:	add	r3, sp, #8
   10830:	bl	b7b0 <flatcc_json_parser_int64>
   10834:	str	r0, [fp, #-12]
   10838:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1083c:	ldr	r1, [fp, #-12]
   10840:	cmp	r0, r1
   10844:	bne	10898 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x998>
   10848:	ldr	r0, [fp, #-8]
   1084c:	ldr	r1, [fp, #-12]
   10850:	str	r1, [fp, #-40]	; 0xffffffd8
   10854:	ldr	r2, [fp, #-16]
   10858:	movw	r3, #0
   1085c:	movt	r3, #0
   10860:	add	ip, sp, #8
   10864:	str	ip, [sp]
   10868:	bl	b888 <flatcc_json_parser_symbolic_int64>
   1086c:	str	r0, [fp, #-12]
   10870:	ldr	r0, [fp, #-12]
   10874:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10878:	cmp	r0, r1
   1087c:	beq	10890 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x990>
   10880:	ldr	r0, [fp, #-12]
   10884:	ldr	r1, [fp, #-16]
   10888:	cmp	r0, r1
   1088c:	bne	10894 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x994>
   10890:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10894:	b	10898 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x998>
   10898:	ldr	r0, [sp, #8]
   1089c:	ldr	r1, [sp, #12]
   108a0:	orr	r0, r0, r1
   108a4:	cmp	r0, #0
   108a8:	bne	108c4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9c4>
   108ac:	b	108b0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9b0>
   108b0:	ldr	r0, [fp, #-8]
   108b4:	ldr	r0, [r0, #8]
   108b8:	and	r0, r0, #2
   108bc:	cmp	r0, #0
   108c0:	beq	10904 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa04>
   108c4:	ldr	r0, [fp, #-8]
   108c8:	ldr	r0, [r0]
   108cc:	movw	r1, #7
   108d0:	movw	r2, #8
   108d4:	movw	r3, #8
   108d8:	uxth	r3, r3
   108dc:	bl	0 <flatcc_builder_table_add>
   108e0:	str	r0, [fp, #-28]	; 0xffffffe4
   108e4:	movw	r1, #0
   108e8:	cmp	r0, r1
   108ec:	bne	108f4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9f4>
   108f0:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   108f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   108f8:	ldr	r2, [sp, #8]
   108fc:	ldr	r3, [sp, #12]
   10900:	bl	bac8 <flatbuffers_int64_write_to_pe>
   10904:	b	10a7c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb7c>
   10908:	ldr	r0, [fp, #-12]
   1090c:	add	r0, r0, #8
   10910:	str	r0, [fp, #-12]
   10914:	ldr	r0, [fp, #-12]
   10918:	ldr	r1, [fp, #-16]
   1091c:	bl	7130 <flatcc_json_parser_symbol_part>
   10920:	str	r1, [sp, #52]	; 0x34
   10924:	str	r0, [sp, #48]	; 0x30
   10928:	ldrb	r0, [sp, #55]	; 0x37
   1092c:	mov	r1, #889192448	; 0x35000000
   10930:	teq	r1, r0, lsl #24
   10934:	bne	10a64 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb64>
   10938:	b	1093c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa3c>
   1093c:	ldr	r0, [fp, #-8]
   10940:	ldr	r1, [fp, #-12]
   10944:	str	r1, [fp, #-40]	; 0xffffffd8
   10948:	ldr	r2, [fp, #-16]
   1094c:	movw	r3, #1
   10950:	bl	7168 <flatcc_json_parser_match_symbol>
   10954:	str	r0, [fp, #-12]
   10958:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1095c:	ldr	r1, [fp, #-12]
   10960:	cmp	r0, r1
   10964:	beq	10a4c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb4c>
   10968:	movw	r0, #0
   1096c:	str	r0, [sp, #4]
   10970:	ldr	r0, [fp, #-8]
   10974:	ldr	r1, [fp, #-12]
   10978:	str	r1, [fp, #-40]	; 0xffffffd8
   1097c:	ldr	r2, [fp, #-16]
   10980:	add	r3, sp, #4
   10984:	bl	bb00 <flatcc_json_parser_uint32>
   10988:	str	r0, [fp, #-12]
   1098c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10990:	ldr	r1, [fp, #-12]
   10994:	cmp	r0, r1
   10998:	bne	109ec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xaec>
   1099c:	ldr	r0, [fp, #-8]
   109a0:	ldr	r1, [fp, #-12]
   109a4:	str	r1, [fp, #-40]	; 0xffffffd8
   109a8:	ldr	r2, [fp, #-16]
   109ac:	movw	r3, #0
   109b0:	movt	r3, #0
   109b4:	add	ip, sp, #4
   109b8:	str	ip, [sp]
   109bc:	bl	bbd8 <flatcc_json_parser_symbolic_uint32>
   109c0:	str	r0, [fp, #-12]
   109c4:	ldr	r0, [fp, #-12]
   109c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   109cc:	cmp	r0, r1
   109d0:	beq	109e4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xae4>
   109d4:	ldr	r0, [fp, #-12]
   109d8:	ldr	r1, [fp, #-16]
   109dc:	cmp	r0, r1
   109e0:	bne	109e8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xae8>
   109e4:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   109e8:	b	109ec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xaec>
   109ec:	ldr	r0, [sp, #4]
   109f0:	cmp	r0, #0
   109f4:	bne	10a0c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb0c>
   109f8:	ldr	r0, [fp, #-8]
   109fc:	ldr	r0, [r0, #8]
   10a00:	and	r0, r0, #2
   10a04:	cmp	r0, #0
   10a08:	beq	10a48 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb48>
   10a0c:	ldr	r0, [fp, #-8]
   10a10:	ldr	r0, [r0]
   10a14:	movw	r1, #8
   10a18:	movw	r2, #4
   10a1c:	movw	r3, #4
   10a20:	uxth	r3, r3
   10a24:	bl	0 <flatcc_builder_table_add>
   10a28:	str	r0, [fp, #-28]	; 0xffffffe4
   10a2c:	movw	r1, #0
   10a30:	cmp	r0, r1
   10a34:	bne	10a3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb3c>
   10a38:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10a3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10a40:	ldr	r1, [sp, #4]
   10a44:	bl	be00 <flatbuffers_uint32_write_to_pe>
   10a48:	b	10a60 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb60>
   10a4c:	ldr	r0, [fp, #-8]
   10a50:	ldr	r1, [fp, #-12]
   10a54:	ldr	r2, [fp, #-16]
   10a58:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10a5c:	str	r0, [fp, #-12]
   10a60:	b	10a78 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb78>
   10a64:	ldr	r0, [fp, #-8]
   10a68:	ldr	r1, [fp, #-12]
   10a6c:	ldr	r2, [fp, #-16]
   10a70:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10a74:	str	r0, [fp, #-12]
   10a78:	b	10a7c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb7c>
   10a7c:	b	10a94 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb94>
   10a80:	ldr	r0, [fp, #-8]
   10a84:	ldr	r1, [fp, #-12]
   10a88:	ldr	r2, [fp, #-16]
   10a8c:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10a90:	str	r0, [fp, #-12]
   10a94:	b	10a98 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb98>
   10a98:	b	10a9c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb9c>
   10a9c:	b	10aa0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xba0>
   10aa0:	ldr	r0, [fp, #-8]
   10aa4:	ldr	r1, [fp, #-12]
   10aa8:	ldr	r2, [fp, #-16]
   10aac:	sub	r3, fp, #24
   10ab0:	bl	c3e4 <flatcc_json_parser_object_end>
   10ab4:	str	r0, [fp, #-12]
   10ab8:	b	ff5c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x5c>
   10abc:	ldr	r0, [fp, #-8]
   10ac0:	ldr	r0, [r0, #24]
   10ac4:	cmp	r0, #0
   10ac8:	beq	10ad0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbd0>
   10acc:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10ad0:	ldr	r0, [fp, #-8]
   10ad4:	ldr	r0, [r0]
   10ad8:	bl	0 <flatcc_builder_end_table>
   10adc:	ldr	r1, [fp, #-20]	; 0xffffffec
   10ae0:	str	r0, [r1]
   10ae4:	cmp	r0, #0
   10ae8:	bne	10af0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbf0>
   10aec:	b	10afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10af0:	ldr	r0, [fp, #-12]
   10af4:	str	r0, [fp, #-4]
   10af8:	b	10b14 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc14>
   10afc:	ldr	r0, [fp, #-8]
   10b00:	ldr	r1, [fp, #-12]
   10b04:	ldr	r2, [fp, #-16]
   10b08:	movw	r3, #33	; 0x21
   10b0c:	bl	0 <flatcc_json_parser_set_error>
   10b10:	str	r0, [fp, #-4]
   10b14:	ldr	r0, [fp, #-4]
   10b18:	mov	sp, fp
   10b1c:	pop	{fp, pc}

00010b20 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>:
   10b20:	push	{fp, lr}
   10b24:	mov	fp, sp
   10b28:	sub	sp, sp, #72	; 0x48
   10b2c:	str	r0, [fp, #-8]
   10b30:	str	r1, [fp, #-12]
   10b34:	str	r2, [fp, #-16]
   10b38:	str	r3, [fp, #-20]	; 0xffffffec
   10b3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10b40:	movw	r1, #0
   10b44:	str	r1, [r0]
   10b48:	ldr	r0, [fp, #-8]
   10b4c:	ldr	r0, [r0]
   10b50:	movw	r1, #2
   10b54:	bl	0 <flatcc_builder_start_table>
   10b58:	cmp	r0, #0
   10b5c:	beq	10b64 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x44>
   10b60:	b	10fb8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
   10b64:	ldr	r0, [fp, #-8]
   10b68:	ldr	r1, [fp, #-12]
   10b6c:	ldr	r2, [fp, #-16]
   10b70:	sub	r3, fp, #24
   10b74:	bl	6fa0 <flatcc_json_parser_object_start>
   10b78:	str	r0, [fp, #-12]
   10b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10b80:	cmp	r0, #0
   10b84:	beq	10f78 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x458>
   10b88:	ldr	r0, [fp, #-8]
   10b8c:	ldr	r1, [fp, #-12]
   10b90:	ldr	r2, [fp, #-16]
   10b94:	bl	7084 <flatcc_json_parser_symbol_start>
   10b98:	str	r0, [fp, #-12]
   10b9c:	ldr	r0, [fp, #-12]
   10ba0:	ldr	r1, [fp, #-16]
   10ba4:	bl	7130 <flatcc_json_parser_symbol_part>
   10ba8:	str	r1, [sp, #28]
   10bac:	str	r0, [sp, #24]
   10bb0:	ldr	r0, [sp, #24]
   10bb4:	ldr	r1, [sp, #28]
   10bb8:	movw	r2, #24929	; 0x6161
   10bbc:	movt	r2, #24929	; 0x6161
   10bc0:	eor	r1, r1, r2
   10bc4:	movw	r2, #25186	; 0x6262
   10bc8:	movt	r2, #24418	; 0x5f62
   10bcc:	eor	r0, r0, r2
   10bd0:	orr	r0, r0, r1
   10bd4:	cmp	r0, #0
   10bd8:	bne	10f48 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x428>
   10bdc:	b	10be0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0xc0>
   10be0:	ldr	r0, [fp, #-12]
   10be4:	add	r0, r0, #8
   10be8:	str	r0, [fp, #-12]
   10bec:	ldr	r0, [fp, #-12]
   10bf0:	ldr	r1, [fp, #-16]
   10bf4:	bl	7130 <flatcc_json_parser_symbol_part>
   10bf8:	str	r1, [sp, #28]
   10bfc:	str	r0, [sp, #24]
   10c00:	ldr	r0, [sp, #24]
   10c04:	ldr	r1, [sp, #28]
   10c08:	movw	r2, #29556	; 0x7374
   10c0c:	movt	r2, #25183	; 0x625f
   10c10:	eor	r1, r1, r2
   10c14:	movw	r2, #29791	; 0x745f
   10c18:	movt	r2, #24946	; 0x6172
   10c1c:	eor	r0, r0, r2
   10c20:	orr	r0, r0, r1
   10c24:	cmp	r0, #0
   10c28:	bne	10db8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x298>
   10c2c:	b	10c30 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x110>
   10c30:	ldr	r0, [fp, #-12]
   10c34:	add	r0, r0, #8
   10c38:	str	r0, [fp, #-12]
   10c3c:	ldr	r0, [fp, #-12]
   10c40:	ldr	r1, [fp, #-16]
   10c44:	bl	7130 <flatcc_json_parser_symbol_part>
   10c48:	str	r1, [sp, #28]
   10c4c:	str	r0, [sp, #24]
   10c50:	ldrb	r0, [sp, #27]
   10c54:	ldr	r1, [sp, #28]
   10c58:	movw	r2, #25968	; 0x6570
   10c5c:	movt	r2, #29556	; 0x7374
   10c60:	eor	r1, r1, r2
   10c64:	eor	r0, r0, #115	; 0x73
   10c68:	orr	r0, r1, r0, lsl #24
   10c6c:	cmp	r0, #0
   10c70:	bne	10da0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x280>
   10c74:	b	10c78 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x158>
   10c78:	ldr	r0, [fp, #-8]
   10c7c:	ldr	r1, [fp, #-12]
   10c80:	str	r1, [sp, #32]
   10c84:	ldr	r2, [fp, #-16]
   10c88:	movw	r3, #5
   10c8c:	bl	7168 <flatcc_json_parser_match_symbol>
   10c90:	str	r0, [fp, #-12]
   10c94:	ldr	r0, [sp, #32]
   10c98:	ldr	r1, [fp, #-12]
   10c9c:	cmp	r0, r1
   10ca0:	beq	10d88 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x268>
   10ca4:	movw	r0, #0
   10ca8:	str	r0, [sp, #20]
   10cac:	ldr	r0, [fp, #-8]
   10cb0:	ldr	r1, [fp, #-12]
   10cb4:	str	r1, [sp, #32]
   10cb8:	ldr	r2, [fp, #-16]
   10cbc:	add	r3, sp, #20
   10cc0:	bl	bb00 <flatcc_json_parser_uint32>
   10cc4:	str	r0, [fp, #-12]
   10cc8:	ldr	r0, [sp, #32]
   10ccc:	ldr	r1, [fp, #-12]
   10cd0:	cmp	r0, r1
   10cd4:	bne	10d28 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x208>
   10cd8:	ldr	r0, [fp, #-8]
   10cdc:	ldr	r1, [fp, #-12]
   10ce0:	str	r1, [sp, #32]
   10ce4:	ldr	r2, [fp, #-16]
   10ce8:	movw	r3, #0
   10cec:	movt	r3, #0
   10cf0:	add	ip, sp, #20
   10cf4:	str	ip, [sp]
   10cf8:	bl	bbd8 <flatcc_json_parser_symbolic_uint32>
   10cfc:	str	r0, [fp, #-12]
   10d00:	ldr	r0, [fp, #-12]
   10d04:	ldr	r1, [sp, #32]
   10d08:	cmp	r0, r1
   10d0c:	beq	10d20 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x200>
   10d10:	ldr	r0, [fp, #-12]
   10d14:	ldr	r1, [fp, #-16]
   10d18:	cmp	r0, r1
   10d1c:	bne	10d24 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x204>
   10d20:	b	10fb8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
   10d24:	b	10d28 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x208>
   10d28:	ldr	r0, [sp, #20]
   10d2c:	cmp	r0, #0
   10d30:	bne	10d48 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x228>
   10d34:	ldr	r0, [fp, #-8]
   10d38:	ldr	r0, [r0, #8]
   10d3c:	and	r0, r0, #2
   10d40:	cmp	r0, #0
   10d44:	beq	10d84 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x264>
   10d48:	ldr	r0, [fp, #-8]
   10d4c:	ldr	r0, [r0]
   10d50:	movw	r1, #1
   10d54:	movw	r2, #4
   10d58:	movw	r3, #4
   10d5c:	uxth	r3, r3
   10d60:	bl	0 <flatcc_builder_table_add>
   10d64:	str	r0, [fp, #-28]	; 0xffffffe4
   10d68:	movw	r1, #0
   10d6c:	cmp	r0, r1
   10d70:	bne	10d78 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x258>
   10d74:	b	10fb8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
   10d78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10d7c:	ldr	r1, [sp, #20]
   10d80:	bl	be00 <flatbuffers_uint32_write_to_pe>
   10d84:	b	10d9c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x27c>
   10d88:	ldr	r0, [fp, #-8]
   10d8c:	ldr	r1, [fp, #-12]
   10d90:	ldr	r2, [fp, #-16]
   10d94:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10d98:	str	r0, [fp, #-12]
   10d9c:	b	10db4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x294>
   10da0:	ldr	r0, [fp, #-8]
   10da4:	ldr	r1, [fp, #-12]
   10da8:	ldr	r2, [fp, #-16]
   10dac:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10db0:	str	r0, [fp, #-12]
   10db4:	b	10f44 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x424>
   10db8:	ldr	r0, [sp, #24]
   10dbc:	ldr	r1, [sp, #28]
   10dc0:	movw	r2, #24435	; 0x5f73
   10dc4:	movt	r2, #98	; 0x62
   10dc8:	eor	r2, r2, r1, lsr #8
   10dcc:	lsr	r0, r0, #8
   10dd0:	orr	r0, r0, r1, lsl #24
   10dd4:	movw	r1, #28787	; 0x7073
   10dd8:	movt	r1, #29797	; 0x7465
   10ddc:	eor	r0, r0, r1
   10de0:	orr	r0, r0, r2
   10de4:	cmp	r0, #0
   10de8:	bne	10f2c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x40c>
   10dec:	b	10df0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x2d0>
   10df0:	ldr	r0, [fp, #-8]
   10df4:	ldr	r1, [fp, #-12]
   10df8:	str	r1, [sp, #32]
   10dfc:	ldr	r2, [fp, #-16]
   10e00:	movw	r3, #7
   10e04:	bl	7168 <flatcc_json_parser_match_symbol>
   10e08:	str	r0, [fp, #-12]
   10e0c:	ldr	r0, [sp, #32]
   10e10:	ldr	r1, [fp, #-12]
   10e14:	cmp	r0, r1
   10e18:	beq	10f14 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3f4>
   10e1c:	mov	r0, #0
   10e20:	str	r0, [sp, #12]
   10e24:	str	r0, [sp, #8]
   10e28:	ldr	r0, [fp, #-8]
   10e2c:	ldr	r1, [fp, #-12]
   10e30:	str	r1, [sp, #32]
   10e34:	ldr	r2, [fp, #-16]
   10e38:	add	r3, sp, #8
   10e3c:	bl	b7b0 <flatcc_json_parser_int64>
   10e40:	str	r0, [fp, #-12]
   10e44:	ldr	r0, [sp, #32]
   10e48:	ldr	r1, [fp, #-12]
   10e4c:	cmp	r0, r1
   10e50:	bne	10ea4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x384>
   10e54:	ldr	r0, [fp, #-8]
   10e58:	ldr	r1, [fp, #-12]
   10e5c:	str	r1, [sp, #32]
   10e60:	ldr	r2, [fp, #-16]
   10e64:	movw	r3, #0
   10e68:	movt	r3, #0
   10e6c:	add	ip, sp, #8
   10e70:	str	ip, [sp]
   10e74:	bl	b888 <flatcc_json_parser_symbolic_int64>
   10e78:	str	r0, [fp, #-12]
   10e7c:	ldr	r0, [fp, #-12]
   10e80:	ldr	r1, [sp, #32]
   10e84:	cmp	r0, r1
   10e88:	beq	10e9c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x37c>
   10e8c:	ldr	r0, [fp, #-12]
   10e90:	ldr	r1, [fp, #-16]
   10e94:	cmp	r0, r1
   10e98:	bne	10ea0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x380>
   10e9c:	b	10fb8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
   10ea0:	b	10ea4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x384>
   10ea4:	ldr	r0, [sp, #8]
   10ea8:	ldr	r1, [sp, #12]
   10eac:	orr	r0, r0, r1
   10eb0:	cmp	r0, #0
   10eb4:	bne	10ed0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3b0>
   10eb8:	b	10ebc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x39c>
   10ebc:	ldr	r0, [fp, #-8]
   10ec0:	ldr	r0, [r0, #8]
   10ec4:	and	r0, r0, #2
   10ec8:	cmp	r0, #0
   10ecc:	beq	10f10 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3f0>
   10ed0:	ldr	r0, [fp, #-8]
   10ed4:	ldr	r0, [r0]
   10ed8:	movw	r1, #0
   10edc:	movw	r2, #8
   10ee0:	movw	r3, #8
   10ee4:	uxth	r3, r3
   10ee8:	bl	0 <flatcc_builder_table_add>
   10eec:	str	r0, [fp, #-28]	; 0xffffffe4
   10ef0:	movw	r1, #0
   10ef4:	cmp	r0, r1
   10ef8:	bne	10f00 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e0>
   10efc:	b	10fb8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
   10f00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10f04:	ldr	r2, [sp, #8]
   10f08:	ldr	r3, [sp, #12]
   10f0c:	bl	bac8 <flatbuffers_int64_write_to_pe>
   10f10:	b	10f28 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x408>
   10f14:	ldr	r0, [fp, #-8]
   10f18:	ldr	r1, [fp, #-12]
   10f1c:	ldr	r2, [fp, #-16]
   10f20:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10f24:	str	r0, [fp, #-12]
   10f28:	b	10f40 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x420>
   10f2c:	ldr	r0, [fp, #-8]
   10f30:	ldr	r1, [fp, #-12]
   10f34:	ldr	r2, [fp, #-16]
   10f38:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10f3c:	str	r0, [fp, #-12]
   10f40:	b	10f44 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x424>
   10f44:	b	10f5c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x43c>
   10f48:	ldr	r0, [fp, #-8]
   10f4c:	ldr	r1, [fp, #-12]
   10f50:	ldr	r2, [fp, #-16]
   10f54:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10f58:	str	r0, [fp, #-12]
   10f5c:	ldr	r0, [fp, #-8]
   10f60:	ldr	r1, [fp, #-12]
   10f64:	ldr	r2, [fp, #-16]
   10f68:	sub	r3, fp, #24
   10f6c:	bl	c3e4 <flatcc_json_parser_object_end>
   10f70:	str	r0, [fp, #-12]
   10f74:	b	10b7c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x5c>
   10f78:	ldr	r0, [fp, #-8]
   10f7c:	ldr	r0, [r0, #24]
   10f80:	cmp	r0, #0
   10f84:	beq	10f8c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x46c>
   10f88:	b	10fb8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
   10f8c:	ldr	r0, [fp, #-8]
   10f90:	ldr	r0, [r0]
   10f94:	bl	0 <flatcc_builder_end_table>
   10f98:	ldr	r1, [fp, #-20]	; 0xffffffec
   10f9c:	str	r0, [r1]
   10fa0:	cmp	r0, #0
   10fa4:	bne	10fac <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x48c>
   10fa8:	b	10fb8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
   10fac:	ldr	r0, [fp, #-12]
   10fb0:	str	r0, [fp, #-4]
   10fb4:	b	10fd0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x4b0>
   10fb8:	ldr	r0, [fp, #-8]
   10fbc:	ldr	r1, [fp, #-12]
   10fc0:	ldr	r2, [fp, #-16]
   10fc4:	movw	r3, #33	; 0x21
   10fc8:	bl	0 <flatcc_json_parser_set_error>
   10fcc:	str	r0, [fp, #-4]
   10fd0:	ldr	r0, [fp, #-4]
   10fd4:	mov	sp, fp
   10fd8:	pop	{fp, pc}

00010fdc <monster_test_local_Fantasy_json_parser_enum>:
   10fdc:	push	{fp, lr}
   10fe0:	mov	fp, sp
   10fe4:	sub	sp, sp, #56	; 0x38
   10fe8:	ldr	ip, [fp, #12]
   10fec:	ldr	lr, [fp, #8]
   10ff0:	str	r0, [fp, #-8]
   10ff4:	str	r1, [fp, #-12]
   10ff8:	str	r2, [fp, #-16]
   10ffc:	str	r3, [fp, #-20]	; 0xffffffec
   11000:	ldr	r0, [fp, #-12]
   11004:	str	r0, [fp, #-24]	; 0xffffffe8
   11008:	ldr	r0, [fp, #-12]
   1100c:	ldr	r1, [fp, #-16]
   11010:	str	ip, [sp, #12]
   11014:	str	lr, [sp, #8]
   11018:	bl	7130 <flatcc_json_parser_symbol_part>
   1101c:	str	r1, [sp, #20]
   11020:	str	r0, [sp, #16]
   11024:	ldr	r0, [sp, #16]
   11028:	ldr	r1, [sp, #20]
   1102c:	movw	r2, #24946	; 0x6172
   11030:	movt	r2, #17256	; 0x4368
   11034:	eor	r1, r1, r2
   11038:	movw	r2, #29797	; 0x7465
   1103c:	movt	r2, #24931	; 0x6163
   11040:	eor	r0, r0, r2
   11044:	orr	r0, r0, r1
   11048:	cmp	r0, #0
   1104c:	bne	11100 <monster_test_local_Fantasy_json_parser_enum+0x124>
   11050:	b	11054 <monster_test_local_Fantasy_json_parser_enum+0x78>
   11054:	ldr	r0, [fp, #-12]
   11058:	add	r0, r0, #8
   1105c:	str	r0, [fp, #-12]
   11060:	ldr	r0, [fp, #-12]
   11064:	ldr	r1, [fp, #-16]
   11068:	bl	7130 <flatcc_json_parser_symbol_part>
   1106c:	str	r1, [sp, #20]
   11070:	str	r0, [sp, #16]
   11074:	ldrb	r0, [sp, #23]
   11078:	mov	r1, #1912602624	; 0x72000000
   1107c:	teq	r1, r0, lsl #24
   11080:	bne	110f0 <monster_test_local_Fantasy_json_parser_enum+0x114>
   11084:	b	11088 <monster_test_local_Fantasy_json_parser_enum+0xac>
   11088:	ldr	r0, [fp, #-8]
   1108c:	ldr	r1, [fp, #-12]
   11090:	str	r1, [sp, #28]
   11094:	ldr	r2, [fp, #-16]
   11098:	movw	r3, #1
   1109c:	bl	c758 <flatcc_json_parser_match_scope>
   110a0:	str	r0, [fp, #-12]
   110a4:	ldr	r0, [fp, #-12]
   110a8:	ldr	r1, [sp, #28]
   110ac:	cmp	r0, r1
   110b0:	beq	110e0 <monster_test_local_Fantasy_json_parser_enum+0x104>
   110b4:	ldr	r0, [fp, #-8]
   110b8:	ldr	r1, [fp, #-12]
   110bc:	ldr	r2, [fp, #-16]
   110c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   110c4:	ldr	ip, [fp, #8]
   110c8:	ldr	lr, [fp, #12]
   110cc:	str	ip, [sp]
   110d0:	str	lr, [sp, #4]
   110d4:	bl	d2d0 <Fantasy_Character_parse_json_enum>
   110d8:	str	r0, [fp, #-12]
   110dc:	b	110ec <monster_test_local_Fantasy_json_parser_enum+0x110>
   110e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   110e4:	str	r0, [fp, #-4]
   110e8:	b	11114 <monster_test_local_Fantasy_json_parser_enum+0x138>
   110ec:	b	110fc <monster_test_local_Fantasy_json_parser_enum+0x120>
   110f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   110f4:	str	r0, [fp, #-4]
   110f8:	b	11114 <monster_test_local_Fantasy_json_parser_enum+0x138>
   110fc:	b	1110c <monster_test_local_Fantasy_json_parser_enum+0x130>
   11100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11104:	str	r0, [fp, #-4]
   11108:	b	11114 <monster_test_local_Fantasy_json_parser_enum+0x138>
   1110c:	ldr	r0, [fp, #-12]
   11110:	str	r0, [fp, #-4]
   11114:	ldr	r0, [fp, #-4]
   11118:	mov	sp, fp
   1111c:	pop	{fp, pc}

00011120 <Fantasy_Character_parse_json_union>:
   11120:	push	{fp, lr}
   11124:	mov	fp, sp
   11128:	sub	sp, sp, #24
   1112c:	ldr	ip, [fp, #8]
   11130:	str	r0, [fp, #-8]
   11134:	str	r1, [sp, #12]
   11138:	str	r2, [sp, #8]
   1113c:	strb	r3, [sp, #7]
   11140:	ldr	r0, [fp, #8]
   11144:	mov	r1, #0
   11148:	str	r1, [r0]
   1114c:	ldrb	r0, [sp, #7]
   11150:	mov	r1, r0
   11154:	cmp	r0, #0
   11158:	str	r1, [sp]
   1115c:	beq	111c4 <Fantasy_Character_parse_json_union+0xa4>
   11160:	b	11164 <Fantasy_Character_parse_json_union+0x44>
   11164:	ldr	r0, [sp]
   11168:	cmp	r0, #2
   1116c:	beq	111dc <Fantasy_Character_parse_json_union+0xbc>
   11170:	b	11174 <Fantasy_Character_parse_json_union+0x54>
   11174:	ldr	r0, [sp]
   11178:	cmp	r0, #8
   1117c:	beq	111f8 <Fantasy_Character_parse_json_union+0xd8>
   11180:	b	11184 <Fantasy_Character_parse_json_union+0x64>
   11184:	ldr	r0, [sp]
   11188:	cmp	r0, #9
   1118c:	beq	11214 <Fantasy_Character_parse_json_union+0xf4>
   11190:	b	11194 <Fantasy_Character_parse_json_union+0x74>
   11194:	ldr	r0, [sp]
   11198:	cmp	r0, #10
   1119c:	beq	11230 <Fantasy_Character_parse_json_union+0x110>
   111a0:	b	111a4 <Fantasy_Character_parse_json_union+0x84>
   111a4:	ldr	r0, [sp]
   111a8:	cmp	r0, #11
   111ac:	beq	1124c <Fantasy_Character_parse_json_union+0x12c>
   111b0:	b	111b4 <Fantasy_Character_parse_json_union+0x94>
   111b4:	ldr	r0, [sp]
   111b8:	cmp	r0, #255	; 0xff
   111bc:	beq	11268 <Fantasy_Character_parse_json_union+0x148>
   111c0:	b	11284 <Fantasy_Character_parse_json_union+0x164>
   111c4:	ldr	r0, [fp, #-8]
   111c8:	ldr	r1, [sp, #12]
   111cc:	ldr	r2, [sp, #8]
   111d0:	bl	dd48 <flatcc_json_parser_none>
   111d4:	str	r0, [fp, #-4]
   111d8:	b	1131c <Fantasy_Character_parse_json_union+0x1fc>
   111dc:	ldr	r0, [fp, #-8]
   111e0:	ldr	r1, [sp, #12]
   111e4:	ldr	r2, [sp, #8]
   111e8:	ldr	r3, [fp, #8]
   111ec:	bl	11410 <Fantasy_Attacker_parse_json_table>
   111f0:	str	r0, [sp, #12]
   111f4:	b	112cc <Fantasy_Character_parse_json_union+0x1ac>
   111f8:	ldr	r0, [fp, #-8]
   111fc:	ldr	r1, [sp, #12]
   11200:	ldr	r2, [sp, #8]
   11204:	ldr	r3, [fp, #8]
   11208:	bl	11748 <Fantasy_Rapunzel_parse_json_struct>
   1120c:	str	r0, [sp, #12]
   11210:	b	112cc <Fantasy_Character_parse_json_union+0x1ac>
   11214:	ldr	r0, [fp, #-8]
   11218:	ldr	r1, [sp, #12]
   1121c:	ldr	r2, [sp, #8]
   11220:	ldr	r3, [fp, #8]
   11224:	bl	11814 <Fantasy_BookReader_parse_json_struct>
   11228:	str	r0, [sp, #12]
   1122c:	b	112cc <Fantasy_Character_parse_json_union+0x1ac>
   11230:	ldr	r0, [fp, #-8]
   11234:	ldr	r1, [sp, #12]
   11238:	ldr	r2, [sp, #8]
   1123c:	ldr	r3, [fp, #8]
   11240:	bl	11814 <Fantasy_BookReader_parse_json_struct>
   11244:	str	r0, [sp, #12]
   11248:	b	112cc <Fantasy_Character_parse_json_union+0x1ac>
   1124c:	ldr	r0, [fp, #-8]
   11250:	ldr	r1, [sp, #12]
   11254:	ldr	r2, [sp, #8]
   11258:	ldr	r3, [fp, #8]
   1125c:	bl	0 <flatcc_json_parser_build_string>
   11260:	str	r0, [sp, #12]
   11264:	b	112cc <Fantasy_Character_parse_json_union+0x1ac>
   11268:	ldr	r0, [fp, #-8]
   1126c:	ldr	r1, [sp, #12]
   11270:	ldr	r2, [sp, #8]
   11274:	ldr	r3, [fp, #8]
   11278:	bl	0 <flatcc_json_parser_build_string>
   1127c:	str	r0, [sp, #12]
   11280:	b	112cc <Fantasy_Character_parse_json_union+0x1ac>
   11284:	ldr	r0, [fp, #-8]
   11288:	ldr	r0, [r0, #8]
   1128c:	and	r0, r0, #1
   11290:	cmp	r0, #0
   11294:	bne	112b4 <Fantasy_Character_parse_json_union+0x194>
   11298:	ldr	r0, [fp, #-8]
   1129c:	ldr	r1, [sp, #12]
   112a0:	ldr	r2, [sp, #8]
   112a4:	movw	r3, #15
   112a8:	bl	0 <flatcc_json_parser_set_error>
   112ac:	str	r0, [fp, #-4]
   112b0:	b	1131c <Fantasy_Character_parse_json_union+0x1fc>
   112b4:	ldr	r0, [fp, #-8]
   112b8:	ldr	r1, [sp, #12]
   112bc:	ldr	r2, [sp, #8]
   112c0:	bl	0 <flatcc_json_parser_generic_json>
   112c4:	str	r0, [fp, #-4]
   112c8:	b	1131c <Fantasy_Character_parse_json_union+0x1fc>
   112cc:	ldr	r0, [fp, #-8]
   112d0:	ldr	r0, [r0, #24]
   112d4:	cmp	r0, #0
   112d8:	beq	112e8 <Fantasy_Character_parse_json_union+0x1c8>
   112dc:	ldr	r0, [sp, #12]
   112e0:	str	r0, [fp, #-4]
   112e4:	b	1131c <Fantasy_Character_parse_json_union+0x1fc>
   112e8:	ldr	r0, [fp, #8]
   112ec:	ldr	r0, [r0]
   112f0:	cmp	r0, #0
   112f4:	bne	11314 <Fantasy_Character_parse_json_union+0x1f4>
   112f8:	ldr	r0, [fp, #-8]
   112fc:	ldr	r1, [sp, #12]
   11300:	ldr	r2, [sp, #8]
   11304:	movw	r3, #33	; 0x21
   11308:	bl	0 <flatcc_json_parser_set_error>
   1130c:	str	r0, [fp, #-4]
   11310:	b	1131c <Fantasy_Character_parse_json_union+0x1fc>
   11314:	ldr	r0, [sp, #12]
   11318:	str	r0, [fp, #-4]
   1131c:	ldr	r0, [fp, #-4]
   11320:	mov	sp, fp
   11324:	pop	{fp, pc}

00011328 <Fantasy_Character_json_union_accept_type>:
   11328:	sub	sp, sp, #12
   1132c:	strb	r0, [sp, #7]
   11330:	ldrb	r0, [sp, #7]
   11334:	mov	r1, r0
   11338:	cmp	r0, #0
   1133c:	str	r1, [sp]
   11340:	beq	113a8 <Fantasy_Character_json_union_accept_type+0x80>
   11344:	b	11348 <Fantasy_Character_json_union_accept_type+0x20>
   11348:	ldr	r0, [sp]
   1134c:	cmp	r0, #2
   11350:	beq	113b4 <Fantasy_Character_json_union_accept_type+0x8c>
   11354:	b	11358 <Fantasy_Character_json_union_accept_type+0x30>
   11358:	ldr	r0, [sp]
   1135c:	cmp	r0, #8
   11360:	beq	113c0 <Fantasy_Character_json_union_accept_type+0x98>
   11364:	b	11368 <Fantasy_Character_json_union_accept_type+0x40>
   11368:	ldr	r0, [sp]
   1136c:	cmp	r0, #9
   11370:	beq	113cc <Fantasy_Character_json_union_accept_type+0xa4>
   11374:	b	11378 <Fantasy_Character_json_union_accept_type+0x50>
   11378:	ldr	r0, [sp]
   1137c:	cmp	r0, #10
   11380:	beq	113d8 <Fantasy_Character_json_union_accept_type+0xb0>
   11384:	b	11388 <Fantasy_Character_json_union_accept_type+0x60>
   11388:	ldr	r0, [sp]
   1138c:	cmp	r0, #11
   11390:	beq	113e4 <Fantasy_Character_json_union_accept_type+0xbc>
   11394:	b	11398 <Fantasy_Character_json_union_accept_type+0x70>
   11398:	ldr	r0, [sp]
   1139c:	cmp	r0, #255	; 0xff
   113a0:	beq	113f0 <Fantasy_Character_json_union_accept_type+0xc8>
   113a4:	b	113fc <Fantasy_Character_json_union_accept_type+0xd4>
   113a8:	movw	r0, #1
   113ac:	str	r0, [sp, #8]
   113b0:	b	11404 <Fantasy_Character_json_union_accept_type+0xdc>
   113b4:	movw	r0, #1
   113b8:	str	r0, [sp, #8]
   113bc:	b	11404 <Fantasy_Character_json_union_accept_type+0xdc>
   113c0:	movw	r0, #1
   113c4:	str	r0, [sp, #8]
   113c8:	b	11404 <Fantasy_Character_json_union_accept_type+0xdc>
   113cc:	movw	r0, #1
   113d0:	str	r0, [sp, #8]
   113d4:	b	11404 <Fantasy_Character_json_union_accept_type+0xdc>
   113d8:	movw	r0, #1
   113dc:	str	r0, [sp, #8]
   113e0:	b	11404 <Fantasy_Character_json_union_accept_type+0xdc>
   113e4:	movw	r0, #1
   113e8:	str	r0, [sp, #8]
   113ec:	b	11404 <Fantasy_Character_json_union_accept_type+0xdc>
   113f0:	movw	r0, #1
   113f4:	str	r0, [sp, #8]
   113f8:	b	11404 <Fantasy_Character_json_union_accept_type+0xdc>
   113fc:	movw	r0, #0
   11400:	str	r0, [sp, #8]
   11404:	ldr	r0, [sp, #8]
   11408:	add	sp, sp, #12
   1140c:	bx	lr

00011410 <Fantasy_Attacker_parse_json_table>:
   11410:	push	{fp, lr}
   11414:	mov	fp, sp
   11418:	sub	sp, sp, #56	; 0x38
   1141c:	str	r0, [fp, #-8]
   11420:	str	r1, [fp, #-12]
   11424:	str	r2, [fp, #-16]
   11428:	str	r3, [fp, #-20]	; 0xffffffec
   1142c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11430:	movw	r1, #0
   11434:	str	r1, [r0]
   11438:	ldr	r0, [fp, #-8]
   1143c:	ldr	r0, [r0]
   11440:	movw	r1, #1
   11444:	bl	0 <flatcc_builder_start_table>
   11448:	cmp	r0, #0
   1144c:	beq	11454 <Fantasy_Attacker_parse_json_table+0x44>
   11450:	b	11724 <Fantasy_Attacker_parse_json_table+0x314>
   11454:	ldr	r0, [fp, #-8]
   11458:	ldr	r1, [fp, #-12]
   1145c:	ldr	r2, [fp, #-16]
   11460:	sub	r3, fp, #24
   11464:	bl	6fa0 <flatcc_json_parser_object_start>
   11468:	str	r0, [fp, #-12]
   1146c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11470:	cmp	r0, #0
   11474:	beq	116e4 <Fantasy_Attacker_parse_json_table+0x2d4>
   11478:	ldr	r0, [fp, #-8]
   1147c:	ldr	r1, [fp, #-12]
   11480:	ldr	r2, [fp, #-16]
   11484:	bl	7084 <flatcc_json_parser_symbol_start>
   11488:	str	r0, [fp, #-12]
   1148c:	ldr	r0, [fp, #-12]
   11490:	ldr	r1, [fp, #-16]
   11494:	bl	7130 <flatcc_json_parser_symbol_part>
   11498:	str	r1, [sp, #12]
   1149c:	str	r0, [sp, #8]
   114a0:	ldr	r0, [sp, #8]
   114a4:	ldr	r1, [sp, #12]
   114a8:	movw	r2, #28530	; 0x6f72
   114ac:	movt	r2, #29559	; 0x7377
   114b0:	eor	r1, r1, r2
   114b4:	movw	r2, #24948	; 0x6174
   114b8:	movt	r2, #25695	; 0x645f
   114bc:	eor	r0, r0, r2
   114c0:	orr	r0, r0, r1
   114c4:	cmp	r0, #0
   114c8:	bne	116b4 <Fantasy_Attacker_parse_json_table+0x2a4>
   114cc:	b	114d0 <Fantasy_Attacker_parse_json_table+0xc0>
   114d0:	ldr	r0, [fp, #-12]
   114d4:	add	r0, r0, #8
   114d8:	str	r0, [fp, #-12]
   114dc:	ldr	r0, [fp, #-12]
   114e0:	ldr	r1, [fp, #-16]
   114e4:	bl	7130 <flatcc_json_parser_symbol_part>
   114e8:	str	r1, [sp, #12]
   114ec:	str	r0, [sp, #8]
   114f0:	ldr	r0, [sp, #8]
   114f4:	ldr	r1, [sp, #12]
   114f8:	movw	r2, #25451	; 0x636b
   114fc:	movt	r2, #29793	; 0x7461
   11500:	eor	r1, r1, r2
   11504:	movw	r2, #24941	; 0x616d
   11508:	movt	r2, #24420	; 0x5f64
   1150c:	eor	r0, r0, r2
   11510:	orr	r0, r0, r1
   11514:	cmp	r0, #0
   11518:	bne	1169c <Fantasy_Attacker_parse_json_table+0x28c>
   1151c:	b	11520 <Fantasy_Attacker_parse_json_table+0x110>
   11520:	ldr	r0, [fp, #-12]
   11524:	add	r0, r0, #8
   11528:	str	r0, [fp, #-12]
   1152c:	ldr	r0, [fp, #-12]
   11530:	ldr	r1, [fp, #-16]
   11534:	bl	7130 <flatcc_json_parser_symbol_part>
   11538:	str	r1, [sp, #12]
   1153c:	str	r0, [sp, #8]
   11540:	ldr	r0, [sp, #12]
   11544:	bic	r0, r0, #255	; 0xff
   11548:	movw	r1, #25856	; 0x6500
   1154c:	movt	r1, #24935	; 0x6167
   11550:	teq	r0, r1
   11554:	bne	11684 <Fantasy_Attacker_parse_json_table+0x274>
   11558:	b	1155c <Fantasy_Attacker_parse_json_table+0x14c>
   1155c:	ldr	r0, [fp, #-8]
   11560:	ldr	r1, [fp, #-12]
   11564:	str	r1, [sp, #16]
   11568:	ldr	r2, [fp, #-16]
   1156c:	movw	r3, #3
   11570:	bl	7168 <flatcc_json_parser_match_symbol>
   11574:	str	r0, [fp, #-12]
   11578:	ldr	r0, [sp, #16]
   1157c:	ldr	r1, [fp, #-12]
   11580:	cmp	r0, r1
   11584:	beq	1166c <Fantasy_Attacker_parse_json_table+0x25c>
   11588:	movw	r0, #0
   1158c:	str	r0, [sp, #4]
   11590:	ldr	r0, [fp, #-8]
   11594:	ldr	r1, [fp, #-12]
   11598:	str	r1, [sp, #16]
   1159c:	ldr	r2, [fp, #-16]
   115a0:	add	r3, sp, #4
   115a4:	bl	b484 <flatcc_json_parser_int32>
   115a8:	str	r0, [fp, #-12]
   115ac:	ldr	r0, [sp, #16]
   115b0:	ldr	r1, [fp, #-12]
   115b4:	cmp	r0, r1
   115b8:	bne	1160c <Fantasy_Attacker_parse_json_table+0x1fc>
   115bc:	ldr	r0, [fp, #-8]
   115c0:	ldr	r1, [fp, #-12]
   115c4:	str	r1, [sp, #16]
   115c8:	ldr	r2, [fp, #-16]
   115cc:	movw	r3, #0
   115d0:	movt	r3, #0
   115d4:	add	ip, sp, #4
   115d8:	str	ip, [sp]
   115dc:	bl	b55c <flatcc_json_parser_symbolic_int32>
   115e0:	str	r0, [fp, #-12]
   115e4:	ldr	r0, [fp, #-12]
   115e8:	ldr	r1, [sp, #16]
   115ec:	cmp	r0, r1
   115f0:	beq	11604 <Fantasy_Attacker_parse_json_table+0x1f4>
   115f4:	ldr	r0, [fp, #-12]
   115f8:	ldr	r1, [fp, #-16]
   115fc:	cmp	r0, r1
   11600:	bne	11608 <Fantasy_Attacker_parse_json_table+0x1f8>
   11604:	b	11724 <Fantasy_Attacker_parse_json_table+0x314>
   11608:	b	1160c <Fantasy_Attacker_parse_json_table+0x1fc>
   1160c:	ldr	r0, [sp, #4]
   11610:	cmp	r0, #0
   11614:	bne	1162c <Fantasy_Attacker_parse_json_table+0x21c>
   11618:	ldr	r0, [fp, #-8]
   1161c:	ldr	r0, [r0, #8]
   11620:	and	r0, r0, #2
   11624:	cmp	r0, #0
   11628:	beq	11668 <Fantasy_Attacker_parse_json_table+0x258>
   1162c:	ldr	r0, [fp, #-8]
   11630:	ldr	r0, [r0]
   11634:	movw	r1, #0
   11638:	movw	r2, #4
   1163c:	movw	r3, #4
   11640:	uxth	r3, r3
   11644:	bl	0 <flatcc_builder_table_add>
   11648:	str	r0, [sp, #28]
   1164c:	movw	r1, #0
   11650:	cmp	r0, r1
   11654:	bne	1165c <Fantasy_Attacker_parse_json_table+0x24c>
   11658:	b	11724 <Fantasy_Attacker_parse_json_table+0x314>
   1165c:	ldr	r0, [sp, #28]
   11660:	ldr	r1, [sp, #4]
   11664:	bl	b784 <flatbuffers_int32_write_to_pe>
   11668:	b	11680 <Fantasy_Attacker_parse_json_table+0x270>
   1166c:	ldr	r0, [fp, #-8]
   11670:	ldr	r1, [fp, #-12]
   11674:	ldr	r2, [fp, #-16]
   11678:	bl	0 <flatcc_json_parser_unmatched_symbol>
   1167c:	str	r0, [fp, #-12]
   11680:	b	11698 <Fantasy_Attacker_parse_json_table+0x288>
   11684:	ldr	r0, [fp, #-8]
   11688:	ldr	r1, [fp, #-12]
   1168c:	ldr	r2, [fp, #-16]
   11690:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11694:	str	r0, [fp, #-12]
   11698:	b	116b0 <Fantasy_Attacker_parse_json_table+0x2a0>
   1169c:	ldr	r0, [fp, #-8]
   116a0:	ldr	r1, [fp, #-12]
   116a4:	ldr	r2, [fp, #-16]
   116a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   116ac:	str	r0, [fp, #-12]
   116b0:	b	116c8 <Fantasy_Attacker_parse_json_table+0x2b8>
   116b4:	ldr	r0, [fp, #-8]
   116b8:	ldr	r1, [fp, #-12]
   116bc:	ldr	r2, [fp, #-16]
   116c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
   116c4:	str	r0, [fp, #-12]
   116c8:	ldr	r0, [fp, #-8]
   116cc:	ldr	r1, [fp, #-12]
   116d0:	ldr	r2, [fp, #-16]
   116d4:	sub	r3, fp, #24
   116d8:	bl	c3e4 <flatcc_json_parser_object_end>
   116dc:	str	r0, [fp, #-12]
   116e0:	b	1146c <Fantasy_Attacker_parse_json_table+0x5c>
   116e4:	ldr	r0, [fp, #-8]
   116e8:	ldr	r0, [r0, #24]
   116ec:	cmp	r0, #0
   116f0:	beq	116f8 <Fantasy_Attacker_parse_json_table+0x2e8>
   116f4:	b	11724 <Fantasy_Attacker_parse_json_table+0x314>
   116f8:	ldr	r0, [fp, #-8]
   116fc:	ldr	r0, [r0]
   11700:	bl	0 <flatcc_builder_end_table>
   11704:	ldr	r1, [fp, #-20]	; 0xffffffec
   11708:	str	r0, [r1]
   1170c:	cmp	r0, #0
   11710:	bne	11718 <Fantasy_Attacker_parse_json_table+0x308>
   11714:	b	11724 <Fantasy_Attacker_parse_json_table+0x314>
   11718:	ldr	r0, [fp, #-12]
   1171c:	str	r0, [fp, #-4]
   11720:	b	1173c <Fantasy_Attacker_parse_json_table+0x32c>
   11724:	ldr	r0, [fp, #-8]
   11728:	ldr	r1, [fp, #-12]
   1172c:	ldr	r2, [fp, #-16]
   11730:	movw	r3, #33	; 0x21
   11734:	bl	0 <flatcc_json_parser_set_error>
   11738:	str	r0, [fp, #-4]
   1173c:	ldr	r0, [fp, #-4]
   11740:	mov	sp, fp
   11744:	pop	{fp, pc}

00011748 <Fantasy_Rapunzel_parse_json_struct>:
   11748:	push	{fp, lr}
   1174c:	mov	fp, sp
   11750:	sub	sp, sp, #24
   11754:	str	r0, [fp, #-8]
   11758:	str	r1, [sp, #12]
   1175c:	str	r2, [sp, #8]
   11760:	str	r3, [sp, #4]
   11764:	ldr	r0, [sp, #4]
   11768:	movw	r1, #0
   1176c:	str	r1, [r0]
   11770:	ldr	r0, [fp, #-8]
   11774:	ldr	r0, [r0]
   11778:	movw	r1, #2
   1177c:	movw	r2, #2
   11780:	uxth	r2, r2
   11784:	bl	0 <flatcc_builder_start_struct>
   11788:	str	r0, [sp]
   1178c:	movw	r1, #0
   11790:	cmp	r0, r1
   11794:	bne	1179c <Fantasy_Rapunzel_parse_json_struct+0x54>
   11798:	b	117f0 <Fantasy_Rapunzel_parse_json_struct+0xa8>
   1179c:	ldr	r0, [fp, #-8]
   117a0:	ldr	r1, [sp, #12]
   117a4:	ldr	r2, [sp, #8]
   117a8:	ldr	r3, [sp]
   117ac:	bl	118e0 <Fantasy_Rapunzel_parse_json_struct_inline>
   117b0:	str	r0, [sp, #12]
   117b4:	ldr	r0, [sp, #12]
   117b8:	ldr	r1, [sp, #8]
   117bc:	cmp	r0, r1
   117c0:	beq	117e0 <Fantasy_Rapunzel_parse_json_struct+0x98>
   117c4:	ldr	r0, [fp, #-8]
   117c8:	ldr	r0, [r0]
   117cc:	bl	0 <flatcc_builder_end_struct>
   117d0:	ldr	r1, [sp, #4]
   117d4:	str	r0, [r1]
   117d8:	cmp	r0, #0
   117dc:	bne	117e4 <Fantasy_Rapunzel_parse_json_struct+0x9c>
   117e0:	b	117f0 <Fantasy_Rapunzel_parse_json_struct+0xa8>
   117e4:	ldr	r0, [sp, #12]
   117e8:	str	r0, [fp, #-4]
   117ec:	b	11808 <Fantasy_Rapunzel_parse_json_struct+0xc0>
   117f0:	ldr	r0, [fp, #-8]
   117f4:	ldr	r1, [sp, #12]
   117f8:	ldr	r2, [sp, #8]
   117fc:	movw	r3, #33	; 0x21
   11800:	bl	0 <flatcc_json_parser_set_error>
   11804:	str	r0, [fp, #-4]
   11808:	ldr	r0, [fp, #-4]
   1180c:	mov	sp, fp
   11810:	pop	{fp, pc}

00011814 <Fantasy_BookReader_parse_json_struct>:
   11814:	push	{fp, lr}
   11818:	mov	fp, sp
   1181c:	sub	sp, sp, #24
   11820:	str	r0, [fp, #-8]
   11824:	str	r1, [sp, #12]
   11828:	str	r2, [sp, #8]
   1182c:	str	r3, [sp, #4]
   11830:	ldr	r0, [sp, #4]
   11834:	movw	r1, #0
   11838:	str	r1, [r0]
   1183c:	ldr	r0, [fp, #-8]
   11840:	ldr	r0, [r0]
   11844:	movw	r1, #4
   11848:	movw	r2, #4
   1184c:	uxth	r2, r2
   11850:	bl	0 <flatcc_builder_start_struct>
   11854:	str	r0, [sp]
   11858:	movw	r1, #0
   1185c:	cmp	r0, r1
   11860:	bne	11868 <Fantasy_BookReader_parse_json_struct+0x54>
   11864:	b	118bc <Fantasy_BookReader_parse_json_struct+0xa8>
   11868:	ldr	r0, [fp, #-8]
   1186c:	ldr	r1, [sp, #12]
   11870:	ldr	r2, [sp, #8]
   11874:	ldr	r3, [sp]
   11878:	bl	11f04 <Fantasy_BookReader_parse_json_struct_inline>
   1187c:	str	r0, [sp, #12]
   11880:	ldr	r0, [sp, #12]
   11884:	ldr	r1, [sp, #8]
   11888:	cmp	r0, r1
   1188c:	beq	118ac <Fantasy_BookReader_parse_json_struct+0x98>
   11890:	ldr	r0, [fp, #-8]
   11894:	ldr	r0, [r0]
   11898:	bl	0 <flatcc_builder_end_struct>
   1189c:	ldr	r1, [sp, #4]
   118a0:	str	r0, [r1]
   118a4:	cmp	r0, #0
   118a8:	bne	118b0 <Fantasy_BookReader_parse_json_struct+0x9c>
   118ac:	b	118bc <Fantasy_BookReader_parse_json_struct+0xa8>
   118b0:	ldr	r0, [sp, #12]
   118b4:	str	r0, [fp, #-4]
   118b8:	b	118d4 <Fantasy_BookReader_parse_json_struct+0xc0>
   118bc:	ldr	r0, [fp, #-8]
   118c0:	ldr	r1, [sp, #12]
   118c4:	ldr	r2, [sp, #8]
   118c8:	movw	r3, #33	; 0x21
   118cc:	bl	0 <flatcc_json_parser_set_error>
   118d0:	str	r0, [fp, #-4]
   118d4:	ldr	r0, [fp, #-4]
   118d8:	mov	sp, fp
   118dc:	pop	{fp, pc}

000118e0 <Fantasy_Rapunzel_parse_json_struct_inline>:
   118e0:	push	{fp, lr}
   118e4:	mov	fp, sp
   118e8:	sub	sp, sp, #56	; 0x38
   118ec:	str	r0, [fp, #-8]
   118f0:	str	r1, [fp, #-12]
   118f4:	str	r2, [fp, #-16]
   118f8:	str	r3, [fp, #-20]	; 0xffffffec
   118fc:	ldr	r0, [fp, #-8]
   11900:	ldr	r1, [fp, #-12]
   11904:	ldr	r2, [fp, #-16]
   11908:	sub	r3, fp, #24
   1190c:	bl	6fa0 <flatcc_json_parser_object_start>
   11910:	str	r0, [fp, #-12]
   11914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11918:	cmp	r0, #0
   1191c:	beq	11ae0 <Fantasy_Rapunzel_parse_json_struct_inline+0x200>
   11920:	ldr	r0, [fp, #-8]
   11924:	ldr	r1, [fp, #-12]
   11928:	ldr	r2, [fp, #-16]
   1192c:	bl	7084 <flatcc_json_parser_symbol_start>
   11930:	str	r0, [fp, #-12]
   11934:	ldr	r0, [fp, #-12]
   11938:	ldr	r1, [fp, #-16]
   1193c:	bl	7130 <flatcc_json_parser_symbol_part>
   11940:	str	r1, [sp, #12]
   11944:	str	r0, [sp, #8]
   11948:	ldr	r0, [sp, #8]
   1194c:	ldr	r1, [sp, #12]
   11950:	movw	r2, #26994	; 0x6972
   11954:	movt	r2, #26721	; 0x6861
   11958:	eor	r1, r1, r2
   1195c:	movw	r2, #25966	; 0x656e
   11960:	movt	r2, #24428	; 0x5f6c
   11964:	eor	r0, r0, r2
   11968:	orr	r0, r0, r1
   1196c:	cmp	r0, #0
   11970:	bne	11ab0 <Fantasy_Rapunzel_parse_json_struct_inline+0x1d0>
   11974:	b	11978 <Fantasy_Rapunzel_parse_json_struct_inline+0x98>
   11978:	ldr	r0, [fp, #-12]
   1197c:	add	r0, r0, #8
   11980:	str	r0, [fp, #-12]
   11984:	ldr	r0, [fp, #-12]
   11988:	ldr	r1, [fp, #-16]
   1198c:	bl	7130 <flatcc_json_parser_symbol_part>
   11990:	str	r1, [sp, #12]
   11994:	str	r0, [sp, #8]
   11998:	ldr	r0, [sp, #12]
   1199c:	bic	r0, r0, #255	; 0xff
   119a0:	movw	r1, #26624	; 0x6800
   119a4:	movt	r1, #26484	; 0x6774
   119a8:	teq	r0, r1
   119ac:	bne	11a98 <Fantasy_Rapunzel_parse_json_struct_inline+0x1b8>
   119b0:	b	119b4 <Fantasy_Rapunzel_parse_json_struct_inline+0xd4>
   119b4:	ldr	r0, [fp, #-8]
   119b8:	ldr	r1, [fp, #-12]
   119bc:	str	r1, [sp, #20]
   119c0:	ldr	r2, [fp, #-16]
   119c4:	movw	r3, #3
   119c8:	bl	7168 <flatcc_json_parser_match_symbol>
   119cc:	str	r0, [fp, #-12]
   119d0:	ldr	r0, [sp, #20]
   119d4:	ldr	r1, [fp, #-12]
   119d8:	cmp	r0, r1
   119dc:	beq	11a80 <Fantasy_Rapunzel_parse_json_struct_inline+0x1a0>
   119e0:	movw	r0, #0
   119e4:	strh	r0, [sp, #6]
   119e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   119ec:	add	r0, r0, #0
   119f0:	str	r0, [sp, #24]
   119f4:	ldr	r0, [fp, #-8]
   119f8:	ldr	r1, [fp, #-12]
   119fc:	str	r1, [sp, #20]
   11a00:	ldr	r2, [fp, #-16]
   11a04:	add	r3, sp, #6
   11a08:	bl	11b10 <flatcc_json_parser_uint16>
   11a0c:	str	r0, [fp, #-12]
   11a10:	ldr	r0, [sp, #20]
   11a14:	ldr	r1, [fp, #-12]
   11a18:	cmp	r0, r1
   11a1c:	bne	11a70 <Fantasy_Rapunzel_parse_json_struct_inline+0x190>
   11a20:	ldr	r0, [fp, #-8]
   11a24:	ldr	r1, [fp, #-12]
   11a28:	str	r1, [sp, #20]
   11a2c:	ldr	r2, [fp, #-16]
   11a30:	movw	r3, #0
   11a34:	movt	r3, #0
   11a38:	add	ip, sp, #6
   11a3c:	str	ip, [sp]
   11a40:	bl	11bec <flatcc_json_parser_symbolic_uint16>
   11a44:	str	r0, [fp, #-12]
   11a48:	ldr	r0, [fp, #-12]
   11a4c:	ldr	r1, [sp, #20]
   11a50:	cmp	r0, r1
   11a54:	beq	11a68 <Fantasy_Rapunzel_parse_json_struct_inline+0x188>
   11a58:	ldr	r0, [fp, #-12]
   11a5c:	ldr	r1, [fp, #-16]
   11a60:	cmp	r0, r1
   11a64:	bne	11a6c <Fantasy_Rapunzel_parse_json_struct_inline+0x18c>
   11a68:	b	11aec <Fantasy_Rapunzel_parse_json_struct_inline+0x20c>
   11a6c:	b	11a70 <Fantasy_Rapunzel_parse_json_struct_inline+0x190>
   11a70:	ldr	r0, [sp, #24]
   11a74:	ldrh	r1, [sp, #6]
   11a78:	bl	11e18 <flatbuffers_uint16_write_to_pe>
   11a7c:	b	11a94 <Fantasy_Rapunzel_parse_json_struct_inline+0x1b4>
   11a80:	ldr	r0, [fp, #-8]
   11a84:	ldr	r1, [fp, #-12]
   11a88:	ldr	r2, [fp, #-16]
   11a8c:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11a90:	str	r0, [fp, #-12]
   11a94:	b	11aac <Fantasy_Rapunzel_parse_json_struct_inline+0x1cc>
   11a98:	ldr	r0, [fp, #-8]
   11a9c:	ldr	r1, [fp, #-12]
   11aa0:	ldr	r2, [fp, #-16]
   11aa4:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11aa8:	str	r0, [fp, #-12]
   11aac:	b	11ac4 <Fantasy_Rapunzel_parse_json_struct_inline+0x1e4>
   11ab0:	ldr	r0, [fp, #-8]
   11ab4:	ldr	r1, [fp, #-12]
   11ab8:	ldr	r2, [fp, #-16]
   11abc:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11ac0:	str	r0, [fp, #-12]
   11ac4:	ldr	r0, [fp, #-8]
   11ac8:	ldr	r1, [fp, #-12]
   11acc:	ldr	r2, [fp, #-16]
   11ad0:	sub	r3, fp, #24
   11ad4:	bl	c3e4 <flatcc_json_parser_object_end>
   11ad8:	str	r0, [fp, #-12]
   11adc:	b	11914 <Fantasy_Rapunzel_parse_json_struct_inline+0x34>
   11ae0:	ldr	r0, [fp, #-12]
   11ae4:	str	r0, [fp, #-4]
   11ae8:	b	11b04 <Fantasy_Rapunzel_parse_json_struct_inline+0x224>
   11aec:	ldr	r0, [fp, #-8]
   11af0:	ldr	r1, [fp, #-12]
   11af4:	ldr	r2, [fp, #-16]
   11af8:	movw	r3, #33	; 0x21
   11afc:	bl	0 <flatcc_json_parser_set_error>
   11b00:	str	r0, [fp, #-4]
   11b04:	ldr	r0, [fp, #-4]
   11b08:	mov	sp, fp
   11b0c:	pop	{fp, pc}

00011b10 <flatcc_json_parser_uint16>:
   11b10:	push	{r4, r5, fp, lr}
   11b14:	add	fp, sp, #8
   11b18:	sub	sp, sp, #56	; 0x38
   11b1c:	str	r0, [fp, #-16]
   11b20:	str	r1, [fp, #-20]	; 0xffffffec
   11b24:	str	r2, [fp, #-24]	; 0xffffffe8
   11b28:	str	r3, [fp, #-28]	; 0xffffffe4
   11b2c:	mov	r0, #0
   11b30:	str	r0, [sp, #28]
   11b34:	str	r0, [sp, #24]
   11b38:	movw	r0, #0
   11b3c:	str	r0, [sp, #20]
   11b40:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b44:	str	r0, [sp, #16]
   11b48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11b4c:	movw	r1, #0
   11b50:	strh	r1, [r0]
   11b54:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11b5c:	cmp	r0, r1
   11b60:	bne	11b70 <flatcc_json_parser_uint16+0x60>
   11b64:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b68:	str	r0, [fp, #-12]
   11b6c:	b	11be0 <flatcc_json_parser_uint16+0xd0>
   11b70:	ldr	r0, [fp, #-16]
   11b74:	ldr	r1, [fp, #-20]	; 0xffffffec
   11b78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11b7c:	add	r3, sp, #20
   11b80:	add	ip, sp, #24
   11b84:	str	ip, [sp]
   11b88:	bl	0 <flatcc_json_parser_integer>
   11b8c:	str	r0, [fp, #-20]	; 0xffffffec
   11b90:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b94:	ldr	r1, [sp, #16]
   11b98:	cmp	r0, r1
   11b9c:	beq	11bd8 <flatcc_json_parser_uint16+0xc8>
   11ba0:	ldr	r0, [fp, #-16]
   11ba4:	ldr	r1, [fp, #-20]	; 0xffffffec
   11ba8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11bac:	ldr	r3, [sp, #20]
   11bb0:	ldr	ip, [sp, #24]
   11bb4:	ldr	lr, [sp, #28]
   11bb8:	ldr	r4, [fp, #-28]	; 0xffffffe4
   11bbc:	mov	r5, sp
   11bc0:	str	r4, [r5, #8]
   11bc4:	str	lr, [r5, #4]
   11bc8:	str	ip, [r5]
   11bcc:	bl	11e44 <flatcc_json_parser_coerce_uint16>
   11bd0:	str	r0, [fp, #-12]
   11bd4:	b	11be0 <flatcc_json_parser_uint16+0xd0>
   11bd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   11bdc:	str	r0, [fp, #-12]
   11be0:	ldr	r0, [fp, #-12]
   11be4:	sub	sp, fp, #8
   11be8:	pop	{r4, r5, fp, pc}

00011bec <flatcc_json_parser_symbolic_uint16>:
   11bec:	push	{r4, r5, r6, sl, fp, lr}
   11bf0:	add	fp, sp, #16
   11bf4:	sub	sp, sp, #88	; 0x58
   11bf8:	ldr	ip, [fp, #8]
   11bfc:	str	r0, [fp, #-24]	; 0xffffffe8
   11c00:	str	r1, [fp, #-28]	; 0xffffffe4
   11c04:	str	r2, [fp, #-32]	; 0xffffffe0
   11c08:	str	r3, [fp, #-36]	; 0xffffffdc
   11c0c:	movw	r0, #0
   11c10:	strh	r0, [fp, #-46]	; 0xffffffd2
   11c14:	movw	r1, #0
   11c18:	str	r1, [sp, #36]	; 0x24
   11c1c:	ldr	r1, [fp, #8]
   11c20:	strh	r0, [r1]
   11c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11c2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11c30:	str	ip, [sp, #32]
   11c34:	bl	db28 <flatcc_json_parser_constant_start>
   11c38:	str	r0, [fp, #-28]	; 0xffffffe4
   11c3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11c44:	cmp	r0, r1
   11c48:	bne	11c58 <flatcc_json_parser_symbolic_uint16+0x6c>
   11c4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c50:	str	r0, [fp, #-20]	; 0xffffffec
   11c54:	b	11e0c <flatcc_json_parser_symbolic_uint16+0x220>
   11c58:	b	11c5c <flatcc_json_parser_symbolic_uint16+0x70>
   11c5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11c60:	str	r0, [fp, #-40]	; 0xffffffd8
   11c64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11c68:	ldr	r0, [r0]
   11c6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11c70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11c74:	str	r2, [fp, #-44]	; 0xffffffd4
   11c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c7c:	str	r0, [sp, #28]
   11c80:	mov	r0, r1
   11c84:	mov	r1, r2
   11c88:	mov	r2, r3
   11c8c:	add	r3, sp, #44	; 0x2c
   11c90:	add	ip, sp, #48	; 0x30
   11c94:	str	ip, [sp]
   11c98:	add	ip, sp, #40	; 0x28
   11c9c:	str	ip, [sp, #4]
   11ca0:	ldr	ip, [sp, #28]
   11ca4:	blx	ip
   11ca8:	str	r0, [fp, #-28]	; 0xffffffe4
   11cac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11cb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11cb4:	cmp	r0, r1
   11cb8:	bne	11cc8 <flatcc_json_parser_symbolic_uint16+0xdc>
   11cbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11cc0:	str	r0, [fp, #-20]	; 0xffffffec
   11cc4:	b	11e0c <flatcc_json_parser_symbolic_uint16+0x220>
   11cc8:	b	11ccc <flatcc_json_parser_symbolic_uint16+0xe0>
   11ccc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11cd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11cd4:	cmp	r0, r1
   11cd8:	movw	r0, #0
   11cdc:	str	r0, [sp, #24]
   11ce0:	bne	11d08 <flatcc_json_parser_symbolic_uint16+0x11c>
   11ce4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11ce8:	add	r1, r0, #4
   11cec:	str	r1, [fp, #-40]	; 0xffffffd8
   11cf0:	ldr	r0, [r0, #4]
   11cf4:	movw	r1, #0
   11cf8:	cmp	r0, r1
   11cfc:	movw	r0, #0
   11d00:	movne	r0, #1
   11d04:	str	r0, [sp, #24]
   11d08:	ldr	r0, [sp, #24]
   11d0c:	tst	r0, #1
   11d10:	bne	11c64 <flatcc_json_parser_symbolic_uint16+0x78>
   11d14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11d18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11d1c:	cmp	r0, r1
   11d20:	bne	11d40 <flatcc_json_parser_symbolic_uint16+0x154>
   11d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11d2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11d30:	movw	r3, #23
   11d34:	bl	0 <flatcc_json_parser_set_error>
   11d38:	str	r0, [fp, #-20]	; 0xffffffec
   11d3c:	b	11e0c <flatcc_json_parser_symbolic_uint16+0x220>
   11d40:	ldr	r0, [sp, #36]	; 0x24
   11d44:	add	r1, r0, #1
   11d48:	str	r1, [sp, #36]	; 0x24
   11d4c:	cmp	r0, #0
   11d50:	beq	11d80 <flatcc_json_parser_symbolic_uint16+0x194>
   11d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d58:	ldr	r0, [r0, #12]
   11d5c:	cmp	r0, #0
   11d60:	beq	11d80 <flatcc_json_parser_symbolic_uint16+0x194>
   11d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11d6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11d70:	movw	r3, #14
   11d74:	bl	0 <flatcc_json_parser_set_error>
   11d78:	str	r0, [fp, #-20]	; 0xffffffec
   11d7c:	b	11e0c <flatcc_json_parser_symbolic_uint16+0x220>
   11d80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d84:	mov	r1, r0
   11d88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11d8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11d90:	ldr	ip, [sp, #44]	; 0x2c
   11d94:	ldr	lr, [sp, #48]	; 0x30
   11d98:	ldr	r4, [sp, #52]	; 0x34
   11d9c:	mov	r5, sp
   11da0:	sub	r6, fp, #46	; 0x2e
   11da4:	str	r6, [r5, #8]
   11da8:	str	r4, [r5, #4]
   11dac:	str	lr, [r5]
   11db0:	str	r0, [sp, #20]
   11db4:	mov	r0, r2
   11db8:	str	r1, [sp, #16]
   11dbc:	mov	r1, r3
   11dc0:	ldr	r2, [sp, #20]
   11dc4:	mov	r3, ip
   11dc8:	bl	11e44 <flatcc_json_parser_coerce_uint16>
   11dcc:	ldr	r1, [sp, #16]
   11dd0:	cmp	r1, r0
   11dd4:	bne	11de4 <flatcc_json_parser_symbolic_uint16+0x1f8>
   11dd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ddc:	str	r0, [fp, #-20]	; 0xffffffec
   11de0:	b	11e0c <flatcc_json_parser_symbolic_uint16+0x220>
   11de4:	ldrh	r0, [fp, #-46]	; 0xffffffd2
   11de8:	ldr	r1, [fp, #8]
   11dec:	ldrh	r2, [r1]
   11df0:	add	r0, r2, r0
   11df4:	strh	r0, [r1]
   11df8:	ldr	r0, [sp, #40]	; 0x28
   11dfc:	cmp	r0, #0
   11e00:	bne	11c5c <flatcc_json_parser_symbolic_uint16+0x70>
   11e04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11e08:	str	r0, [fp, #-20]	; 0xffffffec
   11e0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e10:	sub	sp, fp, #16
   11e14:	pop	{r4, r5, r6, sl, fp, pc}

00011e18 <flatbuffers_uint16_write_to_pe>:
   11e18:	push	{fp, lr}
   11e1c:	mov	fp, sp
   11e20:	sub	sp, sp, #8
   11e24:	str	r0, [sp, #4]
   11e28:	strh	r1, [sp, #2]
   11e2c:	ldrh	r0, [sp, #2]
   11e30:	bl	11ef0 <flatbuffers_uint16_cast_to_pe>
   11e34:	ldr	r1, [sp, #4]
   11e38:	strh	r0, [r1]
   11e3c:	mov	sp, fp
   11e40:	pop	{fp, pc}

00011e44 <flatcc_json_parser_coerce_uint16>:
   11e44:	push	{r4, sl, fp, lr}
   11e48:	add	fp, sp, #8
   11e4c:	sub	sp, sp, #32
   11e50:	ldr	ip, [fp, #12]
   11e54:	ldr	lr, [fp, #8]
   11e58:	ldr	r4, [fp, #16]
   11e5c:	str	r0, [fp, #-16]
   11e60:	str	r1, [sp, #20]
   11e64:	str	r2, [sp, #16]
   11e68:	str	r3, [sp, #12]
   11e6c:	str	ip, [sp, #4]
   11e70:	str	lr, [sp]
   11e74:	ldr	r0, [sp, #12]
   11e78:	cmp	r0, #0
   11e7c:	beq	11e9c <flatcc_json_parser_coerce_uint16+0x58>
   11e80:	ldr	r0, [fp, #-16]
   11e84:	ldr	r1, [sp, #20]
   11e88:	ldr	r2, [sp, #16]
   11e8c:	movw	r3, #8
   11e90:	bl	0 <flatcc_json_parser_set_error>
   11e94:	str	r0, [fp, #-12]
   11e98:	b	11ee4 <flatcc_json_parser_coerce_uint16+0xa0>
   11e9c:	ldr	r0, [sp]
   11ea0:	ldr	r1, [sp, #4]
   11ea4:	subs	r0, r0, #65536	; 0x10000
   11ea8:	sbcs	r1, r1, #0
   11eac:	bcc	11ed0 <flatcc_json_parser_coerce_uint16+0x8c>
   11eb0:	b	11eb4 <flatcc_json_parser_coerce_uint16+0x70>
   11eb4:	ldr	r0, [fp, #-16]
   11eb8:	ldr	r1, [sp, #20]
   11ebc:	ldr	r2, [sp, #16]
   11ec0:	movw	r3, #7
   11ec4:	bl	0 <flatcc_json_parser_set_error>
   11ec8:	str	r0, [fp, #-12]
   11ecc:	b	11ee4 <flatcc_json_parser_coerce_uint16+0xa0>
   11ed0:	ldrh	r0, [sp]
   11ed4:	ldr	r1, [fp, #16]
   11ed8:	strh	r0, [r1]
   11edc:	ldr	r0, [sp, #20]
   11ee0:	str	r0, [fp, #-12]
   11ee4:	ldr	r0, [fp, #-12]
   11ee8:	sub	sp, fp, #8
   11eec:	pop	{r4, sl, fp, pc}

00011ef0 <flatbuffers_uint16_cast_to_pe>:
   11ef0:	sub	sp, sp, #4
   11ef4:	strh	r0, [sp, #2]
   11ef8:	ldrh	r0, [sp, #2]
   11efc:	add	sp, sp, #4
   11f00:	bx	lr

00011f04 <Fantasy_BookReader_parse_json_struct_inline>:
   11f04:	push	{fp, lr}
   11f08:	mov	fp, sp
   11f0c:	sub	sp, sp, #56	; 0x38
   11f10:	str	r0, [fp, #-8]
   11f14:	str	r1, [fp, #-12]
   11f18:	str	r2, [fp, #-16]
   11f1c:	str	r3, [fp, #-20]	; 0xffffffec
   11f20:	ldr	r0, [fp, #-8]
   11f24:	ldr	r1, [fp, #-12]
   11f28:	ldr	r2, [fp, #-16]
   11f2c:	sub	r3, fp, #24
   11f30:	bl	6fa0 <flatcc_json_parser_object_start>
   11f34:	str	r0, [fp, #-12]
   11f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11f3c:	cmp	r0, #0
   11f40:	beq	12100 <Fantasy_BookReader_parse_json_struct_inline+0x1fc>
   11f44:	ldr	r0, [fp, #-8]
   11f48:	ldr	r1, [fp, #-12]
   11f4c:	ldr	r2, [fp, #-16]
   11f50:	bl	7084 <flatcc_json_parser_symbol_start>
   11f54:	str	r0, [fp, #-12]
   11f58:	ldr	r0, [fp, #-12]
   11f5c:	ldr	r1, [fp, #-16]
   11f60:	bl	7130 <flatcc_json_parser_symbol_part>
   11f64:	str	r1, [sp, #12]
   11f68:	str	r0, [sp, #8]
   11f6c:	ldr	r0, [sp, #8]
   11f70:	ldr	r1, [sp, #12]
   11f74:	movw	r2, #28523	; 0x6f6b
   11f78:	movt	r2, #25199	; 0x626f
   11f7c:	eor	r1, r1, r2
   11f80:	movw	r2, #29285	; 0x7265
   11f84:	movt	r2, #29535	; 0x735f
   11f88:	eor	r0, r0, r2
   11f8c:	orr	r0, r0, r1
   11f90:	cmp	r0, #0
   11f94:	bne	120d0 <Fantasy_BookReader_parse_json_struct_inline+0x1cc>
   11f98:	b	11f9c <Fantasy_BookReader_parse_json_struct_inline+0x98>
   11f9c:	ldr	r0, [fp, #-12]
   11fa0:	add	r0, r0, #8
   11fa4:	str	r0, [fp, #-12]
   11fa8:	ldr	r0, [fp, #-12]
   11fac:	ldr	r1, [fp, #-16]
   11fb0:	bl	7130 <flatcc_json_parser_symbol_part>
   11fb4:	str	r1, [sp, #12]
   11fb8:	str	r0, [sp, #8]
   11fbc:	ldrh	r0, [sp, #14]
   11fc0:	movw	r1, #0
   11fc4:	movt	r1, #24932	; 0x6164
   11fc8:	teq	r1, r0, lsl #16
   11fcc:	bne	120b8 <Fantasy_BookReader_parse_json_struct_inline+0x1b4>
   11fd0:	b	11fd4 <Fantasy_BookReader_parse_json_struct_inline+0xd0>
   11fd4:	ldr	r0, [fp, #-8]
   11fd8:	ldr	r1, [fp, #-12]
   11fdc:	str	r1, [sp, #20]
   11fe0:	ldr	r2, [fp, #-16]
   11fe4:	movw	r3, #2
   11fe8:	bl	7168 <flatcc_json_parser_match_symbol>
   11fec:	str	r0, [fp, #-12]
   11ff0:	ldr	r0, [sp, #20]
   11ff4:	ldr	r1, [fp, #-12]
   11ff8:	cmp	r0, r1
   11ffc:	beq	120a0 <Fantasy_BookReader_parse_json_struct_inline+0x19c>
   12000:	movw	r0, #0
   12004:	str	r0, [sp, #4]
   12008:	ldr	r0, [fp, #-20]	; 0xffffffec
   1200c:	add	r0, r0, #0
   12010:	str	r0, [sp, #24]
   12014:	ldr	r0, [fp, #-8]
   12018:	ldr	r1, [fp, #-12]
   1201c:	str	r1, [sp, #20]
   12020:	ldr	r2, [fp, #-16]
   12024:	add	r3, sp, #4
   12028:	bl	b484 <flatcc_json_parser_int32>
   1202c:	str	r0, [fp, #-12]
   12030:	ldr	r0, [sp, #20]
   12034:	ldr	r1, [fp, #-12]
   12038:	cmp	r0, r1
   1203c:	bne	12090 <Fantasy_BookReader_parse_json_struct_inline+0x18c>
   12040:	ldr	r0, [fp, #-8]
   12044:	ldr	r1, [fp, #-12]
   12048:	str	r1, [sp, #20]
   1204c:	ldr	r2, [fp, #-16]
   12050:	movw	r3, #0
   12054:	movt	r3, #0
   12058:	add	ip, sp, #4
   1205c:	str	ip, [sp]
   12060:	bl	b55c <flatcc_json_parser_symbolic_int32>
   12064:	str	r0, [fp, #-12]
   12068:	ldr	r0, [fp, #-12]
   1206c:	ldr	r1, [sp, #20]
   12070:	cmp	r0, r1
   12074:	beq	12088 <Fantasy_BookReader_parse_json_struct_inline+0x184>
   12078:	ldr	r0, [fp, #-12]
   1207c:	ldr	r1, [fp, #-16]
   12080:	cmp	r0, r1
   12084:	bne	1208c <Fantasy_BookReader_parse_json_struct_inline+0x188>
   12088:	b	1210c <Fantasy_BookReader_parse_json_struct_inline+0x208>
   1208c:	b	12090 <Fantasy_BookReader_parse_json_struct_inline+0x18c>
   12090:	ldr	r0, [sp, #24]
   12094:	ldr	r1, [sp, #4]
   12098:	bl	b784 <flatbuffers_int32_write_to_pe>
   1209c:	b	120b4 <Fantasy_BookReader_parse_json_struct_inline+0x1b0>
   120a0:	ldr	r0, [fp, #-8]
   120a4:	ldr	r1, [fp, #-12]
   120a8:	ldr	r2, [fp, #-16]
   120ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
   120b0:	str	r0, [fp, #-12]
   120b4:	b	120cc <Fantasy_BookReader_parse_json_struct_inline+0x1c8>
   120b8:	ldr	r0, [fp, #-8]
   120bc:	ldr	r1, [fp, #-12]
   120c0:	ldr	r2, [fp, #-16]
   120c4:	bl	0 <flatcc_json_parser_unmatched_symbol>
   120c8:	str	r0, [fp, #-12]
   120cc:	b	120e4 <Fantasy_BookReader_parse_json_struct_inline+0x1e0>
   120d0:	ldr	r0, [fp, #-8]
   120d4:	ldr	r1, [fp, #-12]
   120d8:	ldr	r2, [fp, #-16]
   120dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
   120e0:	str	r0, [fp, #-12]
   120e4:	ldr	r0, [fp, #-8]
   120e8:	ldr	r1, [fp, #-12]
   120ec:	ldr	r2, [fp, #-16]
   120f0:	sub	r3, fp, #24
   120f4:	bl	c3e4 <flatcc_json_parser_object_end>
   120f8:	str	r0, [fp, #-12]
   120fc:	b	11f38 <Fantasy_BookReader_parse_json_struct_inline+0x34>
   12100:	ldr	r0, [fp, #-12]
   12104:	str	r0, [fp, #-4]
   12108:	b	12124 <Fantasy_BookReader_parse_json_struct_inline+0x220>
   1210c:	ldr	r0, [fp, #-8]
   12110:	ldr	r1, [fp, #-12]
   12114:	ldr	r2, [fp, #-16]
   12118:	movw	r3, #33	; 0x21
   1211c:	bl	0 <flatcc_json_parser_set_error>
   12120:	str	r0, [fp, #-4]
   12124:	ldr	r0, [fp, #-4]
   12128:	mov	sp, fp
   1212c:	pop	{fp, pc}

00012130 <flatcc_json_parser_coerce_bool>:
   12130:	push	{r4, sl, fp, lr}
   12134:	add	fp, sp, #8
   12138:	sub	sp, sp, #32
   1213c:	ldr	ip, [fp, #12]
   12140:	ldr	lr, [fp, #8]
   12144:	ldr	r4, [fp, #16]
   12148:	str	r0, [fp, #-16]
   1214c:	str	r1, [sp, #20]
   12150:	str	r2, [sp, #16]
   12154:	str	r3, [sp, #12]
   12158:	str	ip, [sp, #4]
   1215c:	str	lr, [sp]
   12160:	ldr	r0, [sp, #12]
   12164:	cmp	r0, #0
   12168:	beq	12188 <flatcc_json_parser_coerce_bool+0x58>
   1216c:	ldr	r0, [fp, #-16]
   12170:	ldr	r1, [sp, #20]
   12174:	ldr	r2, [sp, #16]
   12178:	movw	r3, #8
   1217c:	bl	0 <flatcc_json_parser_set_error>
   12180:	str	r0, [fp, #-12]
   12184:	b	121bc <flatcc_json_parser_coerce_bool+0x8c>
   12188:	ldr	r0, [sp]
   1218c:	ldr	r1, [sp, #4]
   12190:	orr	r0, r0, r1
   12194:	cmp	r0, #0
   12198:	movwne	r0, #1
   1219c:	mvn	r1, #0
   121a0:	eor	r0, r0, r1
   121a4:	eor	r0, r0, r1
   121a8:	and	r0, r0, #1
   121ac:	ldr	r1, [fp, #16]
   121b0:	strb	r0, [r1]
   121b4:	ldr	r0, [sp, #20]
   121b8:	str	r0, [fp, #-12]
   121bc:	ldr	r0, [fp, #-12]
   121c0:	sub	sp, fp, #8
   121c4:	pop	{r4, sl, fp, pc}

000121c8 <flatbuffers_bool_cast_to_pe>:
   121c8:	sub	sp, sp, #4
   121cc:	strb	r0, [sp, #3]
   121d0:	ldrb	r0, [sp, #3]
   121d4:	add	sp, sp, #4
   121d8:	bx	lr

000121dc <flatcc_json_parser_coerce_float>:
   121dc:	push	{r4, sl, fp, lr}
   121e0:	add	fp, sp, #8
   121e4:	sub	sp, sp, #32
   121e8:	ldr	ip, [fp, #12]
   121ec:	ldr	lr, [fp, #8]
   121f0:	ldr	r4, [fp, #16]
   121f4:	str	r0, [fp, #-12]
   121f8:	str	r1, [fp, #-16]
   121fc:	str	r2, [sp, #20]
   12200:	str	r3, [sp, #16]
   12204:	str	ip, [sp, #12]
   12208:	str	lr, [sp, #8]
   1220c:	ldr	r0, [sp, #16]
   12210:	cmp	r0, #0
   12214:	beq	12234 <flatcc_json_parser_coerce_float+0x58>
   12218:	ldr	r0, [sp, #8]
   1221c:	ldr	r1, [sp, #12]
   12220:	bl	0 <__aeabi_ul2f>
   12224:	vmov	s0, r0
   12228:	vneg.f32	s0, s0
   1222c:	vstr	s0, [sp, #4]
   12230:	b	12248 <flatcc_json_parser_coerce_float+0x6c>
   12234:	ldr	r0, [sp, #8]
   12238:	ldr	r1, [sp, #12]
   1223c:	bl	0 <__aeabi_ul2f>
   12240:	vmov	s0, r0
   12244:	vstr	s0, [sp, #4]
   12248:	vldr	s0, [sp, #4]
   1224c:	ldr	r0, [fp, #16]
   12250:	vstr	s0, [r0]
   12254:	ldr	r0, [fp, #-16]
   12258:	sub	sp, fp, #8
   1225c:	pop	{r4, sl, fp, pc}

00012260 <flatbuffers_float_cast_to_pe>:
   12260:	sub	sp, sp, #8
   12264:	vstr	s0, [sp, #4]
   12268:	vldr	s0, [sp, #4]
   1226c:	vstr	s0, [sp]
   12270:	ldr	r0, [sp]
   12274:	str	r0, [sp]
   12278:	vldr	s0, [sp]
   1227c:	add	sp, sp, #8
   12280:	bx	lr

00012284 <flatcc_json_parser_coerce_int32>:
   12284:	push	{r4, sl, fp, lr}
   12288:	add	fp, sp, #8
   1228c:	sub	sp, sp, #32
   12290:	ldr	ip, [fp, #12]
   12294:	ldr	lr, [fp, #8]
   12298:	ldr	r4, [fp, #16]
   1229c:	str	r0, [fp, #-16]
   122a0:	str	r1, [sp, #20]
   122a4:	str	r2, [sp, #16]
   122a8:	str	r3, [sp, #12]
   122ac:	str	ip, [sp, #4]
   122b0:	str	lr, [sp]
   122b4:	ldr	r0, [sp, #12]
   122b8:	cmp	r0, #0
   122bc:	beq	12308 <flatcc_json_parser_coerce_int32+0x84>
   122c0:	ldr	r0, [sp]
   122c4:	ldr	r1, [sp, #4]
   122c8:	subs	r0, r0, #-2147483647	; 0x80000001
   122cc:	sbcs	r1, r1, #0
   122d0:	bcc	122f4 <flatcc_json_parser_coerce_int32+0x70>
   122d4:	b	122d8 <flatcc_json_parser_coerce_int32+0x54>
   122d8:	ldr	r0, [fp, #-16]
   122dc:	ldr	r1, [sp, #20]
   122e0:	ldr	r2, [sp, #16]
   122e4:	movw	r3, #8
   122e8:	bl	0 <flatcc_json_parser_set_error>
   122ec:	str	r0, [fp, #-12]
   122f0:	b	12350 <flatcc_json_parser_coerce_int32+0xcc>
   122f4:	ldr	r0, [sp]
   122f8:	rsb	r0, r0, #0
   122fc:	ldr	r1, [fp, #16]
   12300:	str	r0, [r1]
   12304:	b	12348 <flatcc_json_parser_coerce_int32+0xc4>
   12308:	ldr	r0, [sp]
   1230c:	ldr	r1, [sp, #4]
   12310:	subs	r0, r0, #-2147483648	; 0x80000000
   12314:	sbcs	r1, r1, #0
   12318:	bcc	1233c <flatcc_json_parser_coerce_int32+0xb8>
   1231c:	b	12320 <flatcc_json_parser_coerce_int32+0x9c>
   12320:	ldr	r0, [fp, #-16]
   12324:	ldr	r1, [sp, #20]
   12328:	ldr	r2, [sp, #16]
   1232c:	movw	r3, #7
   12330:	bl	0 <flatcc_json_parser_set_error>
   12334:	str	r0, [fp, #-12]
   12338:	b	12350 <flatcc_json_parser_coerce_int32+0xcc>
   1233c:	ldr	r0, [sp]
   12340:	ldr	r1, [fp, #16]
   12344:	str	r0, [r1]
   12348:	ldr	r0, [sp, #20]
   1234c:	str	r0, [fp, #-12]
   12350:	ldr	r0, [fp, #-12]
   12354:	sub	sp, fp, #8
   12358:	pop	{r4, sl, fp, pc}

0001235c <flatbuffers_int32_cast_to_pe>:
   1235c:	sub	sp, sp, #4
   12360:	str	r0, [sp]
   12364:	ldr	r0, [sp]
   12368:	add	sp, sp, #4
   1236c:	bx	lr

00012370 <flatcc_json_parser_coerce_int64>:
   12370:	push	{r4, sl, fp, lr}
   12374:	add	fp, sp, #8
   12378:	sub	sp, sp, #32
   1237c:	ldr	ip, [fp, #12]
   12380:	ldr	lr, [fp, #8]
   12384:	ldr	r4, [fp, #16]
   12388:	str	r0, [fp, #-16]
   1238c:	str	r1, [sp, #20]
   12390:	str	r2, [sp, #16]
   12394:	str	r3, [sp, #12]
   12398:	str	ip, [sp, #4]
   1239c:	str	lr, [sp]
   123a0:	ldr	r0, [sp, #12]
   123a4:	cmp	r0, #0
   123a8:	beq	12400 <flatcc_json_parser_coerce_int64+0x90>
   123ac:	ldr	r0, [sp]
   123b0:	ldr	r1, [sp, #4]
   123b4:	subs	r0, r0, #1
   123b8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   123bc:	bcc	123e0 <flatcc_json_parser_coerce_int64+0x70>
   123c0:	b	123c4 <flatcc_json_parser_coerce_int64+0x54>
   123c4:	ldr	r0, [fp, #-16]
   123c8:	ldr	r1, [sp, #20]
   123cc:	ldr	r2, [sp, #16]
   123d0:	movw	r3, #8
   123d4:	bl	0 <flatcc_json_parser_set_error>
   123d8:	str	r0, [fp, #-12]
   123dc:	b	12448 <flatcc_json_parser_coerce_int64+0xd8>
   123e0:	ldr	r0, [sp]
   123e4:	ldr	r1, [sp, #4]
   123e8:	rsbs	r0, r0, #0
   123ec:	rsc	r1, r1, #0
   123f0:	ldr	r2, [fp, #16]
   123f4:	str	r0, [r2]
   123f8:	str	r1, [r2, #4]
   123fc:	b	12440 <flatcc_json_parser_coerce_int64+0xd0>
   12400:	ldr	r0, [sp, #4]
   12404:	cmn	r0, #1
   12408:	bgt	1242c <flatcc_json_parser_coerce_int64+0xbc>
   1240c:	b	12410 <flatcc_json_parser_coerce_int64+0xa0>
   12410:	ldr	r0, [fp, #-16]
   12414:	ldr	r1, [sp, #20]
   12418:	ldr	r2, [sp, #16]
   1241c:	movw	r3, #7
   12420:	bl	0 <flatcc_json_parser_set_error>
   12424:	str	r0, [fp, #-12]
   12428:	b	12448 <flatcc_json_parser_coerce_int64+0xd8>
   1242c:	ldr	r0, [sp]
   12430:	ldr	r1, [sp, #4]
   12434:	ldr	r2, [fp, #16]
   12438:	str	r1, [r2, #4]
   1243c:	str	r0, [r2]
   12440:	ldr	r0, [sp, #20]
   12444:	str	r0, [fp, #-12]
   12448:	ldr	r0, [fp, #-12]
   1244c:	sub	sp, fp, #8
   12450:	pop	{r4, sl, fp, pc}

00012454 <flatbuffers_int64_cast_to_pe>:
   12454:	sub	sp, sp, #8
   12458:	str	r0, [sp]
   1245c:	str	r1, [sp, #4]
   12460:	ldr	r0, [sp]
   12464:	ldr	r1, [sp, #4]
   12468:	add	sp, sp, #8
   1246c:	bx	lr

00012470 <flatcc_json_parser_coerce_uint32>:
   12470:	push	{r4, sl, fp, lr}
   12474:	add	fp, sp, #8
   12478:	sub	sp, sp, #32
   1247c:	ldr	ip, [fp, #12]
   12480:	ldr	lr, [fp, #8]
   12484:	ldr	r4, [fp, #16]
   12488:	str	r0, [fp, #-16]
   1248c:	str	r1, [sp, #20]
   12490:	str	r2, [sp, #16]
   12494:	str	r3, [sp, #12]
   12498:	str	ip, [sp, #4]
   1249c:	str	lr, [sp]
   124a0:	ldr	r0, [sp, #12]
   124a4:	cmp	r0, #0
   124a8:	beq	124c8 <flatcc_json_parser_coerce_uint32+0x58>
   124ac:	ldr	r0, [fp, #-16]
   124b0:	ldr	r1, [sp, #20]
   124b4:	ldr	r2, [sp, #16]
   124b8:	movw	r3, #8
   124bc:	bl	0 <flatcc_json_parser_set_error>
   124c0:	str	r0, [fp, #-12]
   124c4:	b	12508 <flatcc_json_parser_coerce_uint32+0x98>
   124c8:	ldr	r0, [sp, #4]
   124cc:	cmp	r0, #0
   124d0:	beq	124f4 <flatcc_json_parser_coerce_uint32+0x84>
   124d4:	b	124d8 <flatcc_json_parser_coerce_uint32+0x68>
   124d8:	ldr	r0, [fp, #-16]
   124dc:	ldr	r1, [sp, #20]
   124e0:	ldr	r2, [sp, #16]
   124e4:	movw	r3, #7
   124e8:	bl	0 <flatcc_json_parser_set_error>
   124ec:	str	r0, [fp, #-12]
   124f0:	b	12508 <flatcc_json_parser_coerce_uint32+0x98>
   124f4:	ldr	r0, [sp]
   124f8:	ldr	r1, [fp, #16]
   124fc:	str	r0, [r1]
   12500:	ldr	r0, [sp, #20]
   12504:	str	r0, [fp, #-12]
   12508:	ldr	r0, [fp, #-12]
   1250c:	sub	sp, fp, #8
   12510:	pop	{r4, sl, fp, pc}

00012514 <flatbuffers_uint32_cast_to_pe>:
   12514:	sub	sp, sp, #4
   12518:	str	r0, [sp]
   1251c:	ldr	r0, [sp]
   12520:	add	sp, sp, #4
   12524:	bx	lr

00012528 <flatcc_json_parser_coerce_uint64>:
   12528:	push	{r4, sl, fp, lr}
   1252c:	add	fp, sp, #8
   12530:	sub	sp, sp, #32
   12534:	ldr	ip, [fp, #12]
   12538:	ldr	lr, [fp, #8]
   1253c:	ldr	r4, [fp, #16]
   12540:	str	r0, [fp, #-16]
   12544:	str	r1, [sp, #20]
   12548:	str	r2, [sp, #16]
   1254c:	str	r3, [sp, #12]
   12550:	str	ip, [sp, #4]
   12554:	str	lr, [sp]
   12558:	ldr	r0, [sp, #12]
   1255c:	cmp	r0, #0
   12560:	beq	12580 <flatcc_json_parser_coerce_uint64+0x58>
   12564:	ldr	r0, [fp, #-16]
   12568:	ldr	r1, [sp, #20]
   1256c:	ldr	r2, [sp, #16]
   12570:	movw	r3, #8
   12574:	bl	0 <flatcc_json_parser_set_error>
   12578:	str	r0, [fp, #-12]
   1257c:	b	1259c <flatcc_json_parser_coerce_uint64+0x74>
   12580:	ldr	r0, [sp]
   12584:	ldr	r1, [sp, #4]
   12588:	ldr	r2, [fp, #16]
   1258c:	str	r1, [r2, #4]
   12590:	str	r0, [r2]
   12594:	ldr	r0, [sp, #20]
   12598:	str	r0, [fp, #-12]
   1259c:	ldr	r0, [fp, #-12]
   125a0:	sub	sp, fp, #8
   125a4:	pop	{r4, sl, fp, pc}

000125a8 <flatbuffers_uint64_cast_to_pe>:
   125a8:	sub	sp, sp, #8
   125ac:	str	r0, [sp]
   125b0:	str	r1, [sp, #4]
   125b4:	ldr	r0, [sp]
   125b8:	ldr	r1, [sp, #4]
   125bc:	add	sp, sp, #8
   125c0:	bx	lr

000125c4 <flatcc_json_parser_coerce_double>:
   125c4:	push	{r4, sl, fp, lr}
   125c8:	add	fp, sp, #8
   125cc:	sub	sp, sp, #32
   125d0:	ldr	ip, [fp, #12]
   125d4:	ldr	lr, [fp, #8]
   125d8:	ldr	r4, [fp, #16]
   125dc:	str	r0, [fp, #-12]
   125e0:	str	r1, [fp, #-16]
   125e4:	str	r2, [sp, #20]
   125e8:	str	r3, [sp, #16]
   125ec:	str	ip, [sp, #12]
   125f0:	str	lr, [sp, #8]
   125f4:	ldr	r0, [sp, #16]
   125f8:	cmp	r0, #0
   125fc:	beq	1261c <flatcc_json_parser_coerce_double+0x58>
   12600:	ldr	r0, [sp, #8]
   12604:	ldr	r1, [sp, #12]
   12608:	bl	0 <__aeabi_ul2d>
   1260c:	vmov	d16, r0, r1
   12610:	vneg.f64	d16, d16
   12614:	vstr	d16, [sp]
   12618:	b	12630 <flatcc_json_parser_coerce_double+0x6c>
   1261c:	ldr	r0, [sp, #8]
   12620:	ldr	r1, [sp, #12]
   12624:	bl	0 <__aeabi_ul2d>
   12628:	vmov	d16, r0, r1
   1262c:	vstr	d16, [sp]
   12630:	vldr	d16, [sp]
   12634:	ldr	r0, [fp, #16]
   12638:	vstr	d16, [r0]
   1263c:	ldr	r0, [fp, #-16]
   12640:	sub	sp, fp, #8
   12644:	pop	{r4, sl, fp, pc}

00012648 <flatbuffers_double_cast_to_pe>:
   12648:	sub	sp, sp, #16
   1264c:	vstr	d0, [sp, #8]
   12650:	vldr	d16, [sp, #8]
   12654:	vstr	d16, [sp]
   12658:	vldr	d0, [sp]
   1265c:	add	sp, sp, #16
   12660:	bx	lr

00012664 <MyGame_Example_Vec3_print_json_struct>:
   12664:	push	{fp, lr}
   12668:	mov	fp, sp
   1266c:	sub	sp, sp, #32
   12670:	str	r0, [fp, #-4]
   12674:	str	r1, [fp, #-8]
   12678:	ldr	r0, [fp, #-4]
   1267c:	ldr	r2, [fp, #-8]
   12680:	movw	r1, #0
   12684:	str	r1, [fp, #-12]
   12688:	ldr	r3, [fp, #-12]
   1268c:	movw	ip, #0
   12690:	movt	ip, #0
   12694:	str	ip, [sp]
   12698:	movw	ip, #1
   1269c:	str	ip, [sp, #4]
   126a0:	bl	0 <flatcc_json_printer_float_struct_field>
   126a4:	ldr	r0, [fp, #-4]
   126a8:	ldr	r2, [fp, #-8]
   126ac:	movw	r1, #1
   126b0:	str	r1, [sp, #16]
   126b4:	movw	r3, #4
   126b8:	movw	ip, #0
   126bc:	movt	ip, #0
   126c0:	str	ip, [sp]
   126c4:	ldr	ip, [sp, #16]
   126c8:	str	ip, [sp, #4]
   126cc:	bl	0 <flatcc_json_printer_float_struct_field>
   126d0:	ldr	r0, [fp, #-4]
   126d4:	ldr	r2, [fp, #-8]
   126d8:	movw	r1, #2
   126dc:	movw	r3, #8
   126e0:	movw	ip, #0
   126e4:	movt	ip, #0
   126e8:	str	ip, [sp]
   126ec:	movw	ip, #1
   126f0:	str	ip, [sp, #4]
   126f4:	bl	0 <flatcc_json_printer_float_struct_field>
   126f8:	ldr	r0, [fp, #-4]
   126fc:	ldr	r2, [fp, #-8]
   12700:	movw	r1, #3
   12704:	movw	r3, #16
   12708:	movw	ip, #0
   1270c:	movt	ip, #0
   12710:	str	ip, [sp]
   12714:	movw	ip, #5
   12718:	str	ip, [sp, #4]
   1271c:	bl	0 <flatcc_json_printer_double_struct_field>
   12720:	ldr	r0, [fp, #-4]
   12724:	ldr	r2, [fp, #-8]
   12728:	movw	r1, #4
   1272c:	movw	r3, #24
   12730:	movw	ip, #0
   12734:	movt	ip, #0
   12738:	str	ip, [sp]
   1273c:	movw	ip, #5
   12740:	str	ip, [sp, #4]
   12744:	movw	ip, #0
   12748:	movt	ip, #0
   1274c:	str	ip, [sp, #8]
   12750:	bl	0 <flatcc_json_printer_int8_enum_struct_field>
   12754:	ldr	r0, [fp, #-4]
   12758:	ldr	r2, [fp, #-8]
   1275c:	movw	r1, #5
   12760:	str	r1, [sp, #12]
   12764:	movw	r3, #26
   12768:	movw	ip, #0
   1276c:	movt	ip, #0
   12770:	str	ip, [sp]
   12774:	ldr	ip, [sp, #12]
   12778:	str	ip, [sp, #4]
   1277c:	movw	lr, #0
   12780:	movt	lr, #0
   12784:	str	lr, [sp, #8]
   12788:	bl	0 <flatcc_json_printer_embedded_struct_field>
   1278c:	mov	sp, fp
   12790:	pop	{fp, pc}

00012794 <MyGame_Example_Color_print_json_enum>:
   12794:	push	{fp, lr}
   12798:	mov	fp, sp
   1279c:	sub	sp, sp, #16
   127a0:	str	r0, [fp, #-4]
   127a4:	strb	r1, [fp, #-5]
   127a8:	ldrb	r0, [fp, #-5]
   127ac:	strb	r0, [fp, #-6]
   127b0:	ldrb	r0, [fp, #-6]
   127b4:	ldrb	r1, [fp, #-6]
   127b8:	sub	r1, r1, #1
   127bc:	and	r0, r0, r1
   127c0:	movw	r1, #0
   127c4:	cmp	r1, r0
   127c8:	movw	r0, #0
   127cc:	movne	r0, #1
   127d0:	and	r0, r0, #1
   127d4:	str	r0, [sp, #4]
   127d8:	str	r1, [sp]
   127dc:	ldrb	r0, [fp, #-6]
   127e0:	and	r0, r0, #244	; 0xf4
   127e4:	cmp	r0, #0
   127e8:	bne	127f8 <MyGame_Example_Color_print_json_enum+0x64>
   127ec:	ldrb	r0, [fp, #-6]
   127f0:	cmp	r0, #0
   127f4:	bne	12808 <MyGame_Example_Color_print_json_enum+0x74>
   127f8:	ldr	r0, [fp, #-4]
   127fc:	ldrsb	r1, [fp, #-5]
   12800:	bl	0 <flatcc_json_printer_int8>
   12804:	b	128b0 <MyGame_Example_Color_print_json_enum+0x11c>
   12808:	ldr	r0, [fp, #-4]
   1280c:	ldr	r1, [sp, #4]
   12810:	bl	0 <flatcc_json_printer_delimit_enum_flags>
   12814:	ldrb	r0, [fp, #-6]
   12818:	and	r0, r0, #1
   1281c:	cmp	r0, #0
   12820:	beq	12844 <MyGame_Example_Color_print_json_enum+0xb0>
   12824:	ldr	r0, [fp, #-4]
   12828:	ldr	r1, [sp]
   1282c:	add	r2, r1, #1
   12830:	str	r2, [sp]
   12834:	movw	r2, #0
   12838:	movt	r2, #0
   1283c:	movw	r3, #3
   12840:	bl	0 <flatcc_json_printer_enum_flag>
   12844:	ldrb	r0, [fp, #-6]
   12848:	and	r0, r0, #2
   1284c:	cmp	r0, #0
   12850:	beq	12874 <MyGame_Example_Color_print_json_enum+0xe0>
   12854:	ldr	r0, [fp, #-4]
   12858:	ldr	r1, [sp]
   1285c:	add	r2, r1, #1
   12860:	str	r2, [sp]
   12864:	movw	r2, #0
   12868:	movt	r2, #0
   1286c:	movw	r3, #5
   12870:	bl	0 <flatcc_json_printer_enum_flag>
   12874:	ldrb	r0, [fp, #-6]
   12878:	and	r0, r0, #8
   1287c:	cmp	r0, #0
   12880:	beq	128a4 <MyGame_Example_Color_print_json_enum+0x110>
   12884:	ldr	r0, [fp, #-4]
   12888:	ldr	r1, [sp]
   1288c:	add	r2, r1, #1
   12890:	str	r2, [sp]
   12894:	movw	r2, #0
   12898:	movt	r2, #0
   1289c:	movw	r3, #4
   128a0:	bl	0 <flatcc_json_printer_enum_flag>
   128a4:	ldr	r0, [fp, #-4]
   128a8:	ldr	r1, [sp, #4]
   128ac:	bl	0 <flatcc_json_printer_delimit_enum_flags>
   128b0:	mov	sp, fp
   128b4:	pop	{fp, pc}

000128b8 <MyGame_Example_Any_print_json_union_type>:
   128b8:	push	{fp, lr}
   128bc:	mov	fp, sp
   128c0:	sub	sp, sp, #16
   128c4:	str	r0, [fp, #-4]
   128c8:	strb	r1, [fp, #-5]
   128cc:	ldrb	r0, [fp, #-5]
   128d0:	sub	r0, r0, #1
   128d4:	cmp	r0, #3
   128d8:	str	r0, [sp, #4]
   128dc:	bhi	12960 <MyGame_Example_Any_print_json_union_type+0xa8>
   128e0:	add	r0, pc, #8
   128e4:	ldr	r1, [sp, #4]
   128e8:	ldr	r0, [r0, r1, lsl #2]
   128ec:	mov	pc, r0
   128f0:	.word	0x00012900
   128f4:	.word	0x00012918
   128f8:	.word	0x00012930
   128fc:	.word	0x00012948
   12900:	ldr	r0, [fp, #-4]
   12904:	movw	r1, #0
   12908:	movt	r1, #0
   1290c:	movw	r2, #7
   12910:	bl	0 <flatcc_json_printer_enum>
   12914:	b	12974 <MyGame_Example_Any_print_json_union_type+0xbc>
   12918:	ldr	r0, [fp, #-4]
   1291c:	movw	r1, #0
   12920:	movt	r1, #0
   12924:	movw	r2, #23
   12928:	bl	0 <flatcc_json_printer_enum>
   1292c:	b	12974 <MyGame_Example_Any_print_json_union_type+0xbc>
   12930:	ldr	r0, [fp, #-4]
   12934:	movw	r1, #0
   12938:	movt	r1, #0
   1293c:	movw	r2, #8
   12940:	bl	0 <flatcc_json_printer_enum>
   12944:	b	12974 <MyGame_Example_Any_print_json_union_type+0xbc>
   12948:	ldr	r0, [fp, #-4]
   1294c:	movw	r1, #0
   12950:	movt	r1, #0
   12954:	movw	r2, #3
   12958:	bl	0 <flatcc_json_printer_enum>
   1295c:	b	12974 <MyGame_Example_Any_print_json_union_type+0xbc>
   12960:	ldr	r0, [fp, #-4]
   12964:	movw	r1, #0
   12968:	movt	r1, #0
   1296c:	movw	r2, #4
   12970:	bl	0 <flatcc_json_printer_enum>
   12974:	mov	sp, fp
   12978:	pop	{fp, pc}

0001297c <MyGame_Example_Any_print_json_union>:
   1297c:	push	{fp, lr}
   12980:	mov	fp, sp
   12984:	sub	sp, sp, #16
   12988:	str	r0, [fp, #-4]
   1298c:	str	r1, [sp, #8]
   12990:	ldr	r0, [sp, #8]
   12994:	ldrb	r0, [r0, #8]
   12998:	sub	r0, r0, #1
   1299c:	cmp	r0, #3
   129a0:	str	r0, [sp, #4]
   129a4:	bhi	12a28 <MyGame_Example_Any_print_json_union+0xac>
   129a8:	add	r0, pc, #8
   129ac:	ldr	r1, [sp, #4]
   129b0:	ldr	r0, [r0, r1, lsl #2]
   129b4:	mov	pc, r0
   129b8:	.word	0x000129c8
   129bc:	.word	0x000129e0
   129c0:	.word	0x000129f8
   129c4:	.word	0x00012a10
   129c8:	ldr	r0, [fp, #-4]
   129cc:	ldr	r1, [sp, #8]
   129d0:	movw	r2, #0
   129d4:	movt	r2, #0
   129d8:	bl	0 <flatcc_json_printer_union_table>
   129dc:	b	12a2c <MyGame_Example_Any_print_json_union+0xb0>
   129e0:	ldr	r0, [fp, #-4]
   129e4:	ldr	r1, [sp, #8]
   129e8:	movw	r2, #0
   129ec:	movt	r2, #0
   129f0:	bl	0 <flatcc_json_printer_union_table>
   129f4:	b	12a2c <MyGame_Example_Any_print_json_union+0xb0>
   129f8:	ldr	r0, [fp, #-4]
   129fc:	ldr	r1, [sp, #8]
   12a00:	movw	r2, #0
   12a04:	movt	r2, #0
   12a08:	bl	0 <flatcc_json_printer_union_table>
   12a0c:	b	12a2c <MyGame_Example_Any_print_json_union+0xb0>
   12a10:	ldr	r0, [fp, #-4]
   12a14:	ldr	r1, [sp, #8]
   12a18:	movw	r2, #0
   12a1c:	movt	r2, #0
   12a20:	bl	0 <flatcc_json_printer_union_table>
   12a24:	b	12a2c <MyGame_Example_Any_print_json_union+0xb0>
   12a28:	b	12a2c <MyGame_Example_Any_print_json_union+0xb0>
   12a2c:	mov	sp, fp
   12a30:	pop	{fp, pc}

00012a34 <MyGame_Example_Test_print_json_struct>:
   12a34:	push	{fp, lr}
   12a38:	mov	fp, sp
   12a3c:	sub	sp, sp, #24
   12a40:	str	r0, [fp, #-4]
   12a44:	str	r1, [fp, #-8]
   12a48:	ldr	r0, [fp, #-4]
   12a4c:	ldr	r2, [fp, #-8]
   12a50:	movw	r1, #0
   12a54:	str	r1, [sp, #12]
   12a58:	ldr	r3, [sp, #12]
   12a5c:	movw	ip, #0
   12a60:	movt	ip, #0
   12a64:	str	ip, [sp]
   12a68:	movw	ip, #1
   12a6c:	str	ip, [sp, #4]
   12a70:	bl	0 <flatcc_json_printer_int16_struct_field>
   12a74:	ldr	r0, [fp, #-4]
   12a78:	ldr	r2, [fp, #-8]
   12a7c:	movw	r1, #1
   12a80:	str	r1, [sp, #8]
   12a84:	movw	r3, #2
   12a88:	movw	ip, #0
   12a8c:	movt	ip, #0
   12a90:	str	ip, [sp]
   12a94:	ldr	ip, [sp, #8]
   12a98:	str	ip, [sp, #4]
   12a9c:	bl	0 <flatcc_json_printer_int8_struct_field>
   12aa0:	mov	sp, fp
   12aa4:	pop	{fp, pc}

00012aa8 <MyGame_Example_Stat_print_json_table>:
   12aa8:	push	{fp, lr}
   12aac:	mov	fp, sp
   12ab0:	sub	sp, sp, #24
   12ab4:	str	r0, [fp, #-4]
   12ab8:	str	r1, [fp, #-8]
   12abc:	ldr	r0, [fp, #-4]
   12ac0:	ldr	r1, [fp, #-8]
   12ac4:	movw	r2, #0
   12ac8:	movw	r3, #0
   12acc:	movt	r3, #0
   12ad0:	movw	ip, #2
   12ad4:	str	ip, [sp]
   12ad8:	bl	0 <flatcc_json_printer_string_field>
   12adc:	ldr	r0, [fp, #-4]
   12ae0:	ldr	r1, [fp, #-8]
   12ae4:	mov	r2, sp
   12ae8:	mov	r3, #0
   12aec:	str	r3, [r2, #12]
   12af0:	str	r3, [r2, #8]
   12af4:	mov	r3, #3
   12af8:	str	r3, [r2]
   12afc:	movw	r3, #0
   12b00:	movt	r3, #0
   12b04:	mov	r2, #1
   12b08:	bl	0 <flatcc_json_printer_int64_field>
   12b0c:	ldr	r0, [fp, #-4]
   12b10:	ldr	r1, [fp, #-8]
   12b14:	movw	r2, #2
   12b18:	movw	r3, #0
   12b1c:	movt	r3, #0
   12b20:	movw	ip, #5
   12b24:	str	ip, [sp]
   12b28:	movw	ip, #0
   12b2c:	uxth	ip, ip
   12b30:	str	ip, [sp, #4]
   12b34:	bl	0 <flatcc_json_printer_uint16_field>
   12b38:	mov	sp, fp
   12b3c:	pop	{fp, pc}

00012b40 <MyGame_Example_Ability_print_json_struct>:
   12b40:	push	{fp, lr}
   12b44:	mov	fp, sp
   12b48:	sub	sp, sp, #24
   12b4c:	str	r0, [fp, #-4]
   12b50:	str	r1, [fp, #-8]
   12b54:	ldr	r0, [fp, #-4]
   12b58:	ldr	r2, [fp, #-8]
   12b5c:	movw	r1, #0
   12b60:	str	r1, [sp, #12]
   12b64:	ldr	r3, [sp, #12]
   12b68:	movw	ip, #0
   12b6c:	movt	ip, #0
   12b70:	str	ip, [sp]
   12b74:	movw	ip, #2
   12b78:	str	ip, [sp, #4]
   12b7c:	bl	0 <flatcc_json_printer_uint32_struct_field>
   12b80:	ldr	r0, [fp, #-4]
   12b84:	ldr	r2, [fp, #-8]
   12b88:	movw	r1, #1
   12b8c:	movw	r3, #4
   12b90:	movw	ip, #0
   12b94:	movt	ip, #0
   12b98:	str	ip, [sp]
   12b9c:	movw	ip, #8
   12ba0:	str	ip, [sp, #4]
   12ba4:	bl	0 <flatcc_json_printer_uint32_struct_field>
   12ba8:	mov	sp, fp
   12bac:	pop	{fp, pc}

00012bb0 <MyGame_InParentNamespace_print_json_table>:
   12bb0:	sub	sp, sp, #8
   12bb4:	str	r0, [sp, #4]
   12bb8:	str	r1, [sp]
   12bbc:	add	sp, sp, #8
   12bc0:	bx	lr

00012bc4 <MyGame_Example_TestBase64_print_json_table>:
   12bc4:	push	{fp, lr}
   12bc8:	mov	fp, sp
   12bcc:	sub	sp, sp, #24
   12bd0:	str	r0, [fp, #-4]
   12bd4:	str	r1, [fp, #-8]
   12bd8:	ldr	r0, [fp, #-4]
   12bdc:	ldr	r1, [fp, #-8]
   12be0:	movw	r2, #0
   12be4:	str	r2, [sp, #12]
   12be8:	movw	r3, #0
   12bec:	movt	r3, #0
   12bf0:	movw	ip, #4
   12bf4:	str	ip, [sp]
   12bf8:	ldr	ip, [sp, #12]
   12bfc:	str	ip, [sp, #4]
   12c00:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
   12c04:	ldr	r0, [fp, #-4]
   12c08:	ldr	r1, [fp, #-8]
   12c0c:	movw	r2, #1
   12c10:	str	r2, [sp, #8]
   12c14:	movw	r3, #0
   12c18:	movt	r3, #0
   12c1c:	movw	ip, #7
   12c20:	str	ip, [sp]
   12c24:	ldr	ip, [sp, #8]
   12c28:	str	ip, [sp, #4]
   12c2c:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
   12c30:	ldr	r0, [fp, #-4]
   12c34:	ldr	r1, [fp, #-8]
   12c38:	movw	r2, #2
   12c3c:	movw	r3, #0
   12c40:	movt	r3, #0
   12c44:	movw	ip, #6
   12c48:	str	ip, [sp]
   12c4c:	movw	ip, #0
   12c50:	str	ip, [sp, #4]
   12c54:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
   12c58:	mov	sp, fp
   12c5c:	pop	{fp, pc}

00012c60 <MyGame_Example_TestSimpleTableWithEnum_print_json_table>:
   12c60:	push	{fp, lr}
   12c64:	mov	fp, sp
   12c68:	sub	sp, sp, #32
   12c6c:	str	r0, [fp, #-4]
   12c70:	str	r1, [fp, #-8]
   12c74:	ldr	r0, [fp, #-4]
   12c78:	ldr	r1, [fp, #-8]
   12c7c:	movw	r2, #0
   12c80:	movw	r3, #0
   12c84:	movt	r3, #0
   12c88:	movw	ip, #5
   12c8c:	str	ip, [sp]
   12c90:	movw	ip, #2
   12c94:	sxtb	ip, ip
   12c98:	str	ip, [sp, #4]
   12c9c:	movw	ip, #0
   12ca0:	movt	ip, #0
   12ca4:	str	ip, [sp, #8]
   12ca8:	bl	0 <flatcc_json_printer_int8_enum_field>
   12cac:	ldr	r0, [fp, #-4]
   12cb0:	ldr	r1, [fp, #-8]
   12cb4:	movw	r2, #1
   12cb8:	movw	r3, #0
   12cbc:	movt	r3, #0
   12cc0:	movw	ip, #6
   12cc4:	str	ip, [sp]
   12cc8:	movw	ip, #2
   12ccc:	sxtb	ip, ip
   12cd0:	str	ip, [sp, #4]
   12cd4:	movw	ip, #0
   12cd8:	movt	ip, #0
   12cdc:	str	ip, [sp, #8]
   12ce0:	bl	0 <flatcc_json_printer_int8_enum_field>
   12ce4:	ldr	r0, [fp, #-4]
   12ce8:	ldr	r1, [fp, #-8]
   12cec:	movw	r2, #2
   12cf0:	str	r2, [fp, #-12]
   12cf4:	movw	r3, #0
   12cf8:	movt	r3, #0
   12cfc:	ldr	ip, [fp, #-12]
   12d00:	str	ip, [sp]
   12d04:	movw	lr, #2
   12d08:	and	lr, lr, #255	; 0xff
   12d0c:	str	lr, [sp, #4]
   12d10:	bl	0 <flatcc_json_printer_uint8_field>
   12d14:	ldr	r0, [fp, #-4]
   12d18:	ldr	r1, [fp, #-8]
   12d1c:	movw	r2, #3
   12d20:	str	r2, [sp, #16]
   12d24:	movw	r3, #0
   12d28:	movt	r3, #0
   12d2c:	ldr	ip, [sp, #16]
   12d30:	str	ip, [sp]
   12d34:	movw	lr, #2
   12d38:	and	lr, lr, #255	; 0xff
   12d3c:	str	lr, [sp, #4]
   12d40:	bl	0 <flatcc_json_printer_uint8_field>
   12d44:	mov	sp, fp
   12d48:	pop	{fp, pc}

00012d4c <MyGame_Example2_Monster_print_json_table>:
   12d4c:	sub	sp, sp, #8
   12d50:	str	r0, [sp, #4]
   12d54:	str	r1, [sp]
   12d58:	add	sp, sp, #8
   12d5c:	bx	lr

00012d60 <MyGame_Example_Alt_print_json_table>:
   12d60:	push	{fp, lr}
   12d64:	mov	fp, sp
   12d68:	sub	sp, sp, #24
   12d6c:	str	r0, [fp, #-4]
   12d70:	str	r1, [fp, #-8]
   12d74:	ldr	r0, [fp, #-4]
   12d78:	ldr	r1, [fp, #-8]
   12d7c:	movw	r2, #0
   12d80:	movw	r3, #0
   12d84:	movt	r3, #0
   12d88:	movw	ip, #6
   12d8c:	str	ip, [sp]
   12d90:	movw	ip, #0
   12d94:	movt	ip, #0
   12d98:	str	ip, [sp, #4]
   12d9c:	bl	0 <flatcc_json_printer_table_field>
   12da0:	ldr	r0, [fp, #-4]
   12da4:	ldr	r1, [fp, #-8]
   12da8:	movw	r2, #1
   12dac:	movw	r3, #0
   12db0:	movt	r3, #0
   12db4:	movw	ip, #5
   12db8:	str	ip, [sp]
   12dbc:	movw	ip, #0
   12dc0:	movt	ip, #0
   12dc4:	str	ip, [sp, #4]
   12dc8:	bl	0 <flatcc_json_printer_table_field>
   12dcc:	ldr	r0, [fp, #-4]
   12dd0:	ldr	r1, [fp, #-8]
   12dd4:	movw	r2, #3
   12dd8:	movw	r3, #0
   12ddc:	movt	r3, #0
   12de0:	movw	ip, #7
   12de4:	str	ip, [sp]
   12de8:	movw	ip, #0
   12dec:	movt	ip, #0
   12df0:	str	ip, [sp, #4]
   12df4:	movw	ip, #0
   12df8:	movt	ip, #0
   12dfc:	str	ip, [sp, #8]
   12e00:	bl	0 <flatcc_json_printer_union_vector_field>
   12e04:	mov	sp, fp
   12e08:	pop	{fp, pc}

00012e0c <MyGame_Example_TestJSONPrefix_print_json_table>:
   12e0c:	push	{fp, lr}
   12e10:	mov	fp, sp
   12e14:	sub	sp, sp, #16
   12e18:	str	r0, [fp, #-4]
   12e1c:	str	r1, [sp, #8]
   12e20:	ldr	r0, [fp, #-4]
   12e24:	ldr	r1, [sp, #8]
   12e28:	movw	r2, #0
   12e2c:	movw	r3, #0
   12e30:	movt	r3, #0
   12e34:	movw	ip, #21
   12e38:	str	ip, [sp]
   12e3c:	movw	ip, #0
   12e40:	movt	ip, #0
   12e44:	str	ip, [sp, #4]
   12e48:	bl	0 <flatcc_json_printer_table_field>
   12e4c:	ldr	r0, [fp, #-4]
   12e50:	ldr	r1, [sp, #8]
   12e54:	movw	r2, #1
   12e58:	movw	r3, #0
   12e5c:	movt	r3, #0
   12e60:	movw	ip, #22
   12e64:	str	ip, [sp]
   12e68:	movw	ip, #0
   12e6c:	movt	ip, #0
   12e70:	str	ip, [sp, #4]
   12e74:	bl	0 <flatcc_json_printer_table_field>
   12e78:	ldr	r0, [fp, #-4]
   12e7c:	ldr	r1, [sp, #8]
   12e80:	movw	r2, #2
   12e84:	movw	r3, #0
   12e88:	movt	r3, #0
   12e8c:	movw	ip, #22
   12e90:	str	ip, [sp]
   12e94:	movw	ip, #0
   12e98:	movt	ip, #0
   12e9c:	str	ip, [sp, #4]
   12ea0:	bl	0 <flatcc_json_printer_table_field>
   12ea4:	mov	sp, fp
   12ea8:	pop	{fp, pc}

00012eac <Fantasy_Movie_print_json_table>:
   12eac:	push	{fp, lr}
   12eb0:	mov	fp, sp
   12eb4:	sub	sp, sp, #24
   12eb8:	str	r0, [fp, #-4]
   12ebc:	str	r1, [fp, #-8]
   12ec0:	ldr	r0, [fp, #-4]
   12ec4:	ldr	r1, [fp, #-8]
   12ec8:	movw	r2, #1
   12ecc:	movw	r3, #0
   12ed0:	movt	r3, #0
   12ed4:	movw	ip, #14
   12ed8:	str	ip, [sp]
   12edc:	movw	ip, #0
   12ee0:	movt	ip, #0
   12ee4:	str	ip, [sp, #4]
   12ee8:	movw	ip, #0
   12eec:	movt	ip, #0
   12ef0:	str	ip, [sp, #8]
   12ef4:	bl	0 <flatcc_json_printer_union_field>
   12ef8:	ldr	r0, [fp, #-4]
   12efc:	ldr	r1, [fp, #-8]
   12f00:	movw	r2, #3
   12f04:	movw	r3, #0
   12f08:	movt	r3, #0
   12f0c:	movw	ip, #10
   12f10:	str	ip, [sp]
   12f14:	movw	ip, #0
   12f18:	movt	ip, #0
   12f1c:	str	ip, [sp, #4]
   12f20:	movw	ip, #0
   12f24:	movt	ip, #0
   12f28:	str	ip, [sp, #8]
   12f2c:	bl	0 <flatcc_json_printer_union_field>
   12f30:	ldr	r0, [fp, #-4]
   12f34:	ldr	r1, [fp, #-8]
   12f38:	movw	r2, #5
   12f3c:	movw	r3, #0
   12f40:	movt	r3, #0
   12f44:	movw	ip, #9
   12f48:	str	ip, [sp]
   12f4c:	movw	ip, #0
   12f50:	movt	ip, #0
   12f54:	str	ip, [sp, #4]
   12f58:	movw	ip, #0
   12f5c:	movt	ip, #0
   12f60:	str	ip, [sp, #8]
   12f64:	bl	0 <flatcc_json_printer_union_field>
   12f68:	ldr	r0, [fp, #-4]
   12f6c:	ldr	r1, [fp, #-8]
   12f70:	movw	r2, #7
   12f74:	movw	r3, #0
   12f78:	movt	r3, #0
   12f7c:	movw	ip, #5
   12f80:	str	ip, [sp]
   12f84:	movw	ip, #0
   12f88:	movt	ip, #0
   12f8c:	str	ip, [sp, #4]
   12f90:	movw	ip, #0
   12f94:	movt	ip, #0
   12f98:	str	ip, [sp, #8]
   12f9c:	bl	0 <flatcc_json_printer_union_field>
   12fa0:	ldr	r0, [fp, #-4]
   12fa4:	ldr	r1, [fp, #-8]
   12fa8:	movw	r2, #9
   12fac:	movw	r3, #0
   12fb0:	movt	r3, #0
   12fb4:	movw	ip, #10
   12fb8:	str	ip, [sp]
   12fbc:	movw	ip, #0
   12fc0:	movt	ip, #0
   12fc4:	str	ip, [sp, #4]
   12fc8:	movw	ip, #0
   12fcc:	movt	ip, #0
   12fd0:	str	ip, [sp, #8]
   12fd4:	bl	0 <flatcc_json_printer_union_vector_field>
   12fd8:	mov	sp, fp
   12fdc:	pop	{fp, pc}

00012fe0 <MyGame_Example_TestJSONPrefixParsing_print_json_table>:
   12fe0:	push	{fp, lr}
   12fe4:	mov	fp, sp
   12fe8:	sub	sp, sp, #32
   12fec:	str	r0, [fp, #-4]
   12ff0:	str	r1, [fp, #-8]
   12ff4:	ldr	r0, [fp, #-4]
   12ff8:	ldr	r1, [fp, #-8]
   12ffc:	movw	r2, #0
   13000:	movw	r3, #0
   13004:	movt	r3, #0
   13008:	movw	ip, #4
   1300c:	str	ip, [sp]
   13010:	bl	0 <flatcc_json_printer_string_field>
   13014:	ldr	r0, [fp, #-4]
   13018:	ldr	r1, [fp, #-8]
   1301c:	movw	r2, #1
   13020:	movw	r3, #0
   13024:	movt	r3, #0
   13028:	movw	ip, #9
   1302c:	str	ip, [sp]
   13030:	movw	ip, #0
   13034:	str	ip, [sp, #4]
   13038:	bl	0 <flatcc_json_printer_uint32_field>
   1303c:	ldr	r0, [fp, #-4]
   13040:	ldr	r1, [fp, #-8]
   13044:	movw	r2, #2
   13048:	movw	r3, #0
   1304c:	movt	r3, #0
   13050:	movw	ip, #4
   13054:	str	ip, [sp]
   13058:	bl	0 <flatcc_json_printer_string_field>
   1305c:	ldr	r0, [fp, #-4]
   13060:	ldr	r1, [fp, #-8]
   13064:	mov	r2, sp
   13068:	mov	r3, #0
   1306c:	str	r3, [r2, #12]
   13070:	str	r3, [r2, #8]
   13074:	mov	r3, #8
   13078:	str	r3, [r2]
   1307c:	movw	r3, #0
   13080:	movt	r3, #0
   13084:	mov	r2, #3
   13088:	bl	0 <flatcc_json_printer_int64_field>
   1308c:	ldr	r0, [fp, #-4]
   13090:	ldr	r1, [fp, #-8]
   13094:	movw	r2, #4
   13098:	str	r2, [fp, #-12]
   1309c:	movw	r3, #0
   130a0:	movt	r3, #0
   130a4:	ldr	ip, [fp, #-12]
   130a8:	str	ip, [sp]
   130ac:	bl	0 <flatcc_json_printer_string_field>
   130b0:	ldr	r0, [fp, #-4]
   130b4:	ldr	r1, [fp, #-8]
   130b8:	mov	r2, sp
   130bc:	mov	r3, #0
   130c0:	str	r3, [r2, #12]
   130c4:	str	r3, [r2, #8]
   130c8:	mov	r3, #8
   130cc:	str	r3, [r2]
   130d0:	movw	r3, #0
   130d4:	movt	r3, #0
   130d8:	mov	r2, #5
   130dc:	bl	0 <flatcc_json_printer_int64_field>
   130e0:	ldr	r0, [fp, #-4]
   130e4:	ldr	r1, [fp, #-8]
   130e8:	movw	r2, #6
   130ec:	movw	r3, #0
   130f0:	movt	r3, #0
   130f4:	movw	ip, #9
   130f8:	str	ip, [sp]
   130fc:	movw	ip, #0
   13100:	str	ip, [sp, #4]
   13104:	bl	0 <flatcc_json_printer_uint32_field>
   13108:	ldr	r0, [fp, #-4]
   1310c:	ldr	r1, [fp, #-8]
   13110:	mov	r2, sp
   13114:	mov	r3, #0
   13118:	str	r3, [r2, #12]
   1311c:	str	r3, [r2, #8]
   13120:	mov	r3, #8
   13124:	str	r3, [r2]
   13128:	movw	r3, #0
   1312c:	movt	r3, #0
   13130:	mov	r2, #7
   13134:	bl	0 <flatcc_json_printer_int64_field>
   13138:	ldr	r0, [fp, #-4]
   1313c:	ldr	r1, [fp, #-8]
   13140:	movw	r2, #8
   13144:	movw	r3, #0
   13148:	movt	r3, #0
   1314c:	movw	ip, #9
   13150:	str	ip, [sp]
   13154:	movw	ip, #0
   13158:	str	ip, [sp, #4]
   1315c:	bl	0 <flatcc_json_printer_uint32_field>
   13160:	mov	sp, fp
   13164:	pop	{fp, pc}

00013168 <MyGame_Example_TestJSONPrefixParsing2_print_json_table>:
   13168:	push	{fp, lr}
   1316c:	mov	fp, sp
   13170:	sub	sp, sp, #32
   13174:	str	r0, [fp, #-4]
   13178:	str	r1, [fp, #-8]
   1317c:	ldr	r0, [fp, #-4]
   13180:	ldr	r1, [fp, #-8]
   13184:	mov	r2, sp
   13188:	mov	r3, #0
   1318c:	str	r3, [r2, #12]
   13190:	str	r3, [r2, #8]
   13194:	mov	ip, #15
   13198:	str	ip, [r2]
   1319c:	movw	r2, #0
   131a0:	movt	r2, #0
   131a4:	str	r2, [fp, #-12]
   131a8:	mov	r2, r3
   131ac:	ldr	r3, [fp, #-12]
   131b0:	bl	0 <flatcc_json_printer_int64_field>
   131b4:	ldr	r0, [fp, #-4]
   131b8:	ldr	r1, [fp, #-8]
   131bc:	movw	r2, #1
   131c0:	movw	r3, #0
   131c4:	movt	r3, #0
   131c8:	movw	ip, #16
   131cc:	str	ip, [sp]
   131d0:	movw	ip, #0
   131d4:	str	ip, [sp, #4]
   131d8:	bl	0 <flatcc_json_printer_uint32_field>
   131dc:	mov	sp, fp
   131e0:	pop	{fp, pc}

000131e4 <MyGame_Example_TestJSONPrefixParsing3_print_json_table>:
   131e4:	push	{fp, lr}
   131e8:	mov	fp, sp
   131ec:	sub	sp, sp, #32
   131f0:	str	r0, [fp, #-4]
   131f4:	str	r1, [fp, #-8]
   131f8:	ldr	r0, [fp, #-4]
   131fc:	ldr	r1, [fp, #-8]
   13200:	mov	r2, sp
   13204:	mov	r3, #0
   13208:	str	r3, [r2, #12]
   1320c:	str	r3, [r2, #8]
   13210:	mov	ip, #15
   13214:	str	ip, [r2]
   13218:	movw	r2, #0
   1321c:	movt	r2, #0
   13220:	str	r2, [fp, #-12]
   13224:	mov	r2, r3
   13228:	ldr	r3, [fp, #-12]
   1322c:	bl	0 <flatcc_json_printer_int64_field>
   13230:	ldr	r0, [fp, #-4]
   13234:	ldr	r1, [fp, #-8]
   13238:	movw	r2, #1
   1323c:	movw	r3, #0
   13240:	movt	r3, #0
   13244:	movw	ip, #21
   13248:	str	ip, [sp]
   1324c:	movw	ip, #0
   13250:	str	ip, [sp, #4]
   13254:	bl	0 <flatcc_json_printer_uint32_field>
   13258:	mov	sp, fp
   1325c:	pop	{fp, pc}

00013260 <Fantasy_Character_print_json_union_type>:
   13260:	push	{fp, lr}
   13264:	mov	fp, sp
   13268:	sub	sp, sp, #16
   1326c:	str	r0, [fp, #-4]
   13270:	strb	r1, [fp, #-5]
   13274:	ldrb	r0, [fp, #-5]
   13278:	mov	r1, r0
   1327c:	cmp	r0, #2
   13280:	str	r1, [sp, #4]
   13284:	beq	132dc <Fantasy_Character_print_json_union_type+0x7c>
   13288:	b	1328c <Fantasy_Character_print_json_union_type+0x2c>
   1328c:	ldr	r0, [sp, #4]
   13290:	cmp	r0, #8
   13294:	beq	132f4 <Fantasy_Character_print_json_union_type+0x94>
   13298:	b	1329c <Fantasy_Character_print_json_union_type+0x3c>
   1329c:	ldr	r0, [sp, #4]
   132a0:	cmp	r0, #9
   132a4:	beq	1330c <Fantasy_Character_print_json_union_type+0xac>
   132a8:	b	132ac <Fantasy_Character_print_json_union_type+0x4c>
   132ac:	ldr	r0, [sp, #4]
   132b0:	cmp	r0, #10
   132b4:	beq	13324 <Fantasy_Character_print_json_union_type+0xc4>
   132b8:	b	132bc <Fantasy_Character_print_json_union_type+0x5c>
   132bc:	ldr	r0, [sp, #4]
   132c0:	cmp	r0, #11
   132c4:	beq	1333c <Fantasy_Character_print_json_union_type+0xdc>
   132c8:	b	132cc <Fantasy_Character_print_json_union_type+0x6c>
   132cc:	ldr	r0, [sp, #4]
   132d0:	cmp	r0, #255	; 0xff
   132d4:	beq	13354 <Fantasy_Character_print_json_union_type+0xf4>
   132d8:	b	1336c <Fantasy_Character_print_json_union_type+0x10c>
   132dc:	ldr	r0, [fp, #-4]
   132e0:	movw	r1, #0
   132e4:	movt	r1, #0
   132e8:	movw	r2, #5
   132ec:	bl	0 <flatcc_json_printer_enum>
   132f0:	b	13380 <Fantasy_Character_print_json_union_type+0x120>
   132f4:	ldr	r0, [fp, #-4]
   132f8:	movw	r1, #0
   132fc:	movt	r1, #0
   13300:	movw	r2, #8
   13304:	bl	0 <flatcc_json_printer_enum>
   13308:	b	13380 <Fantasy_Character_print_json_union_type+0x120>
   1330c:	ldr	r0, [fp, #-4]
   13310:	movw	r1, #0
   13314:	movt	r1, #0
   13318:	movw	r2, #5
   1331c:	bl	0 <flatcc_json_printer_enum>
   13320:	b	13380 <Fantasy_Character_print_json_union_type+0x120>
   13324:	ldr	r0, [fp, #-4]
   13328:	movw	r1, #0
   1332c:	movt	r1, #0
   13330:	movw	r2, #7
   13334:	bl	0 <flatcc_json_printer_enum>
   13338:	b	13380 <Fantasy_Character_print_json_union_type+0x120>
   1333c:	ldr	r0, [fp, #-4]
   13340:	movw	r1, #0
   13344:	movt	r1, #0
   13348:	movw	r2, #5
   1334c:	bl	0 <flatcc_json_printer_enum>
   13350:	b	13380 <Fantasy_Character_print_json_union_type+0x120>
   13354:	ldr	r0, [fp, #-4]
   13358:	movw	r1, #0
   1335c:	movt	r1, #0
   13360:	movw	r2, #6
   13364:	bl	0 <flatcc_json_printer_enum>
   13368:	b	13380 <Fantasy_Character_print_json_union_type+0x120>
   1336c:	ldr	r0, [fp, #-4]
   13370:	movw	r1, #0
   13374:	movt	r1, #0
   13378:	movw	r2, #4
   1337c:	bl	0 <flatcc_json_printer_enum>
   13380:	mov	sp, fp
   13384:	pop	{fp, pc}

00013388 <Fantasy_Character_print_json_union>:
   13388:	push	{fp, lr}
   1338c:	mov	fp, sp
   13390:	sub	sp, sp, #16
   13394:	str	r0, [fp, #-4]
   13398:	str	r1, [sp, #8]
   1339c:	ldr	r0, [sp, #8]
   133a0:	ldrb	r0, [r0, #8]
   133a4:	mov	r1, r0
   133a8:	cmp	r0, #2
   133ac:	str	r1, [sp, #4]
   133b0:	beq	13408 <Fantasy_Character_print_json_union+0x80>
   133b4:	b	133b8 <Fantasy_Character_print_json_union+0x30>
   133b8:	ldr	r0, [sp, #4]
   133bc:	cmp	r0, #8
   133c0:	beq	13420 <Fantasy_Character_print_json_union+0x98>
   133c4:	b	133c8 <Fantasy_Character_print_json_union+0x40>
   133c8:	ldr	r0, [sp, #4]
   133cc:	cmp	r0, #9
   133d0:	beq	13438 <Fantasy_Character_print_json_union+0xb0>
   133d4:	b	133d8 <Fantasy_Character_print_json_union+0x50>
   133d8:	ldr	r0, [sp, #4]
   133dc:	cmp	r0, #10
   133e0:	beq	13450 <Fantasy_Character_print_json_union+0xc8>
   133e4:	b	133e8 <Fantasy_Character_print_json_union+0x60>
   133e8:	ldr	r0, [sp, #4]
   133ec:	cmp	r0, #11
   133f0:	beq	13468 <Fantasy_Character_print_json_union+0xe0>
   133f4:	b	133f8 <Fantasy_Character_print_json_union+0x70>
   133f8:	ldr	r0, [sp, #4]
   133fc:	cmp	r0, #255	; 0xff
   13400:	beq	13478 <Fantasy_Character_print_json_union+0xf0>
   13404:	b	13488 <Fantasy_Character_print_json_union+0x100>
   13408:	ldr	r0, [fp, #-4]
   1340c:	ldr	r1, [sp, #8]
   13410:	movw	r2, #0
   13414:	movt	r2, #0
   13418:	bl	0 <flatcc_json_printer_union_table>
   1341c:	b	1348c <Fantasy_Character_print_json_union+0x104>
   13420:	ldr	r0, [fp, #-4]
   13424:	ldr	r1, [sp, #8]
   13428:	movw	r2, #0
   1342c:	movt	r2, #0
   13430:	bl	0 <flatcc_json_printer_union_struct>
   13434:	b	1348c <Fantasy_Character_print_json_union+0x104>
   13438:	ldr	r0, [fp, #-4]
   1343c:	ldr	r1, [sp, #8]
   13440:	movw	r2, #0
   13444:	movt	r2, #0
   13448:	bl	0 <flatcc_json_printer_union_struct>
   1344c:	b	1348c <Fantasy_Character_print_json_union+0x104>
   13450:	ldr	r0, [fp, #-4]
   13454:	ldr	r1, [sp, #8]
   13458:	movw	r2, #0
   1345c:	movt	r2, #0
   13460:	bl	0 <flatcc_json_printer_union_struct>
   13464:	b	1348c <Fantasy_Character_print_json_union+0x104>
   13468:	ldr	r0, [fp, #-4]
   1346c:	ldr	r1, [sp, #8]
   13470:	bl	0 <flatcc_json_printer_union_string>
   13474:	b	1348c <Fantasy_Character_print_json_union+0x104>
   13478:	ldr	r0, [fp, #-4]
   1347c:	ldr	r1, [sp, #8]
   13480:	bl	0 <flatcc_json_printer_union_string>
   13484:	b	1348c <Fantasy_Character_print_json_union+0x104>
   13488:	b	1348c <Fantasy_Character_print_json_union+0x104>
   1348c:	mov	sp, fp
   13490:	pop	{fp, pc}

00013494 <Fantasy_Attacker_print_json_table>:
   13494:	push	{fp, lr}
   13498:	mov	fp, sp
   1349c:	sub	sp, sp, #24
   134a0:	str	r0, [fp, #-4]
   134a4:	str	r1, [fp, #-8]
   134a8:	ldr	r0, [fp, #-4]
   134ac:	ldr	r1, [fp, #-8]
   134b0:	movw	r2, #0
   134b4:	str	r2, [sp, #12]
   134b8:	movw	r3, #0
   134bc:	movt	r3, #0
   134c0:	movw	ip, #19
   134c4:	str	ip, [sp]
   134c8:	ldr	ip, [sp, #12]
   134cc:	str	ip, [sp, #4]
   134d0:	bl	0 <flatcc_json_printer_int32_field>
   134d4:	mov	sp, fp
   134d8:	pop	{fp, pc}

000134dc <Fantasy_Rapunzel_print_json_struct>:
   134dc:	push	{fp, lr}
   134e0:	mov	fp, sp
   134e4:	sub	sp, sp, #24
   134e8:	str	r0, [fp, #-4]
   134ec:	str	r1, [fp, #-8]
   134f0:	ldr	r0, [fp, #-4]
   134f4:	ldr	r2, [fp, #-8]
   134f8:	movw	r1, #0
   134fc:	str	r1, [sp, #12]
   13500:	ldr	r3, [sp, #12]
   13504:	movw	ip, #0
   13508:	movt	ip, #0
   1350c:	str	ip, [sp]
   13510:	movw	ip, #11
   13514:	str	ip, [sp, #4]
   13518:	bl	0 <flatcc_json_printer_uint16_struct_field>
   1351c:	mov	sp, fp
   13520:	pop	{fp, pc}

00013524 <Fantasy_BookReader_print_json_struct>:
   13524:	push	{fp, lr}
   13528:	mov	fp, sp
   1352c:	sub	sp, sp, #24
   13530:	str	r0, [fp, #-4]
   13534:	str	r1, [fp, #-8]
   13538:	ldr	r0, [fp, #-4]
   1353c:	ldr	r2, [fp, #-8]
   13540:	movw	r1, #0
   13544:	str	r1, [sp, #12]
   13548:	ldr	r3, [sp, #12]
   1354c:	movw	ip, #0
   13550:	movt	ip, #0
   13554:	str	ip, [sp]
   13558:	movw	ip, #10
   1355c:	str	ip, [sp, #4]
   13560:	bl	0 <flatcc_json_printer_int32_struct_field>
   13564:	mov	sp, fp
   13568:	pop	{fp, pc}

0001356c <MyGame_Example_Any_union_verifier>:
   1356c:	push	{fp, lr}
   13570:	mov	fp, sp
   13574:	sub	sp, sp, #16
   13578:	str	r0, [sp, #8]
   1357c:	ldr	r0, [sp, #8]
   13580:	ldrb	r0, [r0, #12]
   13584:	sub	r0, r0, #1
   13588:	cmp	r0, #3
   1358c:	str	r0, [sp, #4]
   13590:	bhi	13614 <MyGame_Example_Any_union_verifier+0xa8>
   13594:	add	r0, pc, #8
   13598:	ldr	r1, [sp, #4]
   1359c:	ldr	r0, [r0, r1, lsl #2]
   135a0:	mov	pc, r0
   135a4:	.word	0x000135b4
   135a8:	.word	0x000135cc
   135ac:	.word	0x000135e4
   135b0:	.word	0x000135fc
   135b4:	ldr	r0, [sp, #8]
   135b8:	movw	r1, #0
   135bc:	movt	r1, #0
   135c0:	bl	0 <flatcc_verify_union_table>
   135c4:	str	r0, [fp, #-4]
   135c8:	b	1361c <MyGame_Example_Any_union_verifier+0xb0>
   135cc:	ldr	r0, [sp, #8]
   135d0:	movw	r1, #0
   135d4:	movt	r1, #0
   135d8:	bl	0 <flatcc_verify_union_table>
   135dc:	str	r0, [fp, #-4]
   135e0:	b	1361c <MyGame_Example_Any_union_verifier+0xb0>
   135e4:	ldr	r0, [sp, #8]
   135e8:	movw	r1, #0
   135ec:	movt	r1, #0
   135f0:	bl	0 <flatcc_verify_union_table>
   135f4:	str	r0, [fp, #-4]
   135f8:	b	1361c <MyGame_Example_Any_union_verifier+0xb0>
   135fc:	ldr	r0, [sp, #8]
   13600:	movw	r1, #0
   13604:	movt	r1, #0
   13608:	bl	0 <flatcc_verify_union_table>
   1360c:	str	r0, [fp, #-4]
   13610:	b	1361c <MyGame_Example_Any_union_verifier+0xb0>
   13614:	movw	r0, #0
   13618:	str	r0, [fp, #-4]
   1361c:	ldr	r0, [fp, #-4]
   13620:	mov	sp, fp
   13624:	pop	{fp, pc}

00013628 <MyGame_Example_Stat_verify_table>:
   13628:	push	{fp, lr}
   1362c:	mov	fp, sp
   13630:	sub	sp, sp, #16
   13634:	str	r0, [sp, #8]
   13638:	ldr	r0, [sp, #8]
   1363c:	movw	r1, #0
   13640:	uxth	r1, r1
   13644:	movw	r2, #0
   13648:	bl	0 <flatcc_verify_string_field>
   1364c:	str	r0, [sp, #4]
   13650:	cmp	r0, #0
   13654:	beq	13664 <MyGame_Example_Stat_verify_table+0x3c>
   13658:	ldr	r0, [sp, #4]
   1365c:	str	r0, [fp, #-4]
   13660:	b	136dc <MyGame_Example_Stat_verify_table+0xb4>
   13664:	ldr	r0, [sp, #8]
   13668:	movw	r1, #1
   1366c:	uxth	r1, r1
   13670:	movw	r2, #8
   13674:	movw	r3, #8
   13678:	uxth	r3, r3
   1367c:	bl	0 <flatcc_verify_field>
   13680:	str	r0, [sp, #4]
   13684:	cmp	r0, #0
   13688:	beq	13698 <MyGame_Example_Stat_verify_table+0x70>
   1368c:	ldr	r0, [sp, #4]
   13690:	str	r0, [fp, #-4]
   13694:	b	136dc <MyGame_Example_Stat_verify_table+0xb4>
   13698:	ldr	r0, [sp, #8]
   1369c:	movw	r1, #2
   136a0:	uxth	r2, r1
   136a4:	str	r1, [sp]
   136a8:	mov	r1, r2
   136ac:	movw	r2, #2
   136b0:	ldr	r3, [sp]
   136b4:	uxth	r3, r3
   136b8:	bl	0 <flatcc_verify_field>
   136bc:	str	r0, [sp, #4]
   136c0:	cmp	r0, #0
   136c4:	beq	136d4 <MyGame_Example_Stat_verify_table+0xac>
   136c8:	ldr	r0, [sp, #4]
   136cc:	str	r0, [fp, #-4]
   136d0:	b	136dc <MyGame_Example_Stat_verify_table+0xb4>
   136d4:	movw	r0, #0
   136d8:	str	r0, [fp, #-4]
   136dc:	ldr	r0, [fp, #-4]
   136e0:	mov	sp, fp
   136e4:	pop	{fp, pc}

000136e8 <MyGame_InParentNamespace_verify_table>:
   136e8:	sub	sp, sp, #4
   136ec:	str	r0, [sp]
   136f0:	movw	r0, #0
   136f4:	add	sp, sp, #4
   136f8:	bx	lr

000136fc <MyGame_Example_TestBase64_verify_table>:
   136fc:	push	{fp, lr}
   13700:	mov	fp, sp
   13704:	sub	sp, sp, #32
   13708:	str	r0, [fp, #-8]
   1370c:	ldr	r0, [fp, #-8]
   13710:	movw	r1, #0
   13714:	uxth	r1, r1
   13718:	movw	r2, #0
   1371c:	movw	r3, #1
   13720:	movw	ip, #1
   13724:	uxth	ip, ip
   13728:	str	ip, [sp]
   1372c:	mvn	ip, #0
   13730:	str	ip, [sp, #4]
   13734:	bl	0 <flatcc_verify_vector_field>
   13738:	str	r0, [fp, #-12]
   1373c:	cmp	r0, #0
   13740:	beq	13750 <MyGame_Example_TestBase64_verify_table+0x54>
   13744:	ldr	r0, [fp, #-12]
   13748:	str	r0, [fp, #-4]
   1374c:	b	137f0 <MyGame_Example_TestBase64_verify_table+0xf4>
   13750:	ldr	r0, [fp, #-8]
   13754:	movw	r1, #1
   13758:	uxth	r2, r1
   1375c:	str	r1, [sp, #16]
   13760:	mov	r1, r2
   13764:	movw	r2, #0
   13768:	movw	r3, #1
   1376c:	ldr	ip, [sp, #16]
   13770:	uxth	lr, ip
   13774:	str	lr, [sp]
   13778:	mvn	lr, #0
   1377c:	str	lr, [sp, #4]
   13780:	bl	0 <flatcc_verify_vector_field>
   13784:	str	r0, [fp, #-12]
   13788:	cmp	r0, #0
   1378c:	beq	1379c <MyGame_Example_TestBase64_verify_table+0xa0>
   13790:	ldr	r0, [fp, #-12]
   13794:	str	r0, [fp, #-4]
   13798:	b	137f0 <MyGame_Example_TestBase64_verify_table+0xf4>
   1379c:	ldr	r0, [fp, #-8]
   137a0:	movw	r1, #2
   137a4:	uxth	r1, r1
   137a8:	movw	r2, #0
   137ac:	str	r2, [sp, #12]
   137b0:	ldr	r3, [sp, #12]
   137b4:	movw	ip, #1
   137b8:	uxth	ip, ip
   137bc:	str	ip, [sp]
   137c0:	movw	ip, #0
   137c4:	movt	ip, #0
   137c8:	str	ip, [sp, #4]
   137cc:	bl	0 <flatcc_verify_table_as_nested_root>
   137d0:	str	r0, [fp, #-12]
   137d4:	cmp	r0, #0
   137d8:	beq	137e8 <MyGame_Example_TestBase64_verify_table+0xec>
   137dc:	ldr	r0, [fp, #-12]
   137e0:	str	r0, [fp, #-4]
   137e4:	b	137f0 <MyGame_Example_TestBase64_verify_table+0xf4>
   137e8:	movw	r0, #0
   137ec:	str	r0, [fp, #-4]
   137f0:	ldr	r0, [fp, #-4]
   137f4:	mov	sp, fp
   137f8:	pop	{fp, pc}

000137fc <MyGame_Example_TestSimpleTableWithEnum_verify_table>:
   137fc:	push	{fp, lr}
   13800:	mov	fp, sp
   13804:	sub	sp, sp, #16
   13808:	str	r0, [sp, #8]
   1380c:	ldr	r0, [sp, #8]
   13810:	movw	r1, #0
   13814:	uxth	r1, r1
   13818:	movw	r2, #1
   1381c:	movw	r3, #1
   13820:	uxth	r3, r3
   13824:	bl	0 <flatcc_verify_field>
   13828:	str	r0, [sp, #4]
   1382c:	cmp	r0, #0
   13830:	beq	13840 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x44>
   13834:	ldr	r0, [sp, #4]
   13838:	str	r0, [fp, #-4]
   1383c:	b	138ec <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xf0>
   13840:	ldr	r0, [sp, #8]
   13844:	movw	r1, #1
   13848:	uxth	r2, r1
   1384c:	str	r1, [sp]
   13850:	mov	r1, r2
   13854:	movw	r2, #1
   13858:	ldr	r3, [sp]
   1385c:	uxth	r3, r3
   13860:	bl	0 <flatcc_verify_field>
   13864:	str	r0, [sp, #4]
   13868:	cmp	r0, #0
   1386c:	beq	1387c <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x80>
   13870:	ldr	r0, [sp, #4]
   13874:	str	r0, [fp, #-4]
   13878:	b	138ec <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xf0>
   1387c:	ldr	r0, [sp, #8]
   13880:	movw	r1, #2
   13884:	uxth	r1, r1
   13888:	movw	r2, #1
   1388c:	movw	r3, #1
   13890:	uxth	r3, r3
   13894:	bl	0 <flatcc_verify_field>
   13898:	str	r0, [sp, #4]
   1389c:	cmp	r0, #0
   138a0:	beq	138b0 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xb4>
   138a4:	ldr	r0, [sp, #4]
   138a8:	str	r0, [fp, #-4]
   138ac:	b	138ec <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xf0>
   138b0:	ldr	r0, [sp, #8]
   138b4:	movw	r1, #3
   138b8:	uxth	r1, r1
   138bc:	movw	r2, #1
   138c0:	movw	r3, #1
   138c4:	uxth	r3, r3
   138c8:	bl	0 <flatcc_verify_field>
   138cc:	str	r0, [sp, #4]
   138d0:	cmp	r0, #0
   138d4:	beq	138e4 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xe8>
   138d8:	ldr	r0, [sp, #4]
   138dc:	str	r0, [fp, #-4]
   138e0:	b	138ec <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xf0>
   138e4:	movw	r0, #0
   138e8:	str	r0, [fp, #-4]
   138ec:	ldr	r0, [fp, #-4]
   138f0:	mov	sp, fp
   138f4:	pop	{fp, pc}

000138f8 <MyGame_Example2_Monster_verify_table>:
   138f8:	sub	sp, sp, #4
   138fc:	str	r0, [sp]
   13900:	movw	r0, #0
   13904:	add	sp, sp, #4
   13908:	bx	lr

0001390c <MyGame_Example_Alt_verify_table>:
   1390c:	push	{fp, lr}
   13910:	mov	fp, sp
   13914:	sub	sp, sp, #16
   13918:	str	r0, [sp, #8]
   1391c:	ldr	r0, [sp, #8]
   13920:	movw	r1, #0
   13924:	uxth	r1, r1
   13928:	movw	r2, #0
   1392c:	movw	r3, #0
   13930:	movt	r3, #0
   13934:	bl	0 <flatcc_verify_table_field>
   13938:	str	r0, [sp, #4]
   1393c:	cmp	r0, #0
   13940:	beq	13950 <MyGame_Example_Alt_verify_table+0x44>
   13944:	ldr	r0, [sp, #4]
   13948:	str	r0, [fp, #-4]
   1394c:	b	139c0 <MyGame_Example_Alt_verify_table+0xb4>
   13950:	ldr	r0, [sp, #8]
   13954:	movw	r1, #1
   13958:	uxth	r1, r1
   1395c:	movw	r2, #0
   13960:	movw	r3, #0
   13964:	movt	r3, #0
   13968:	bl	0 <flatcc_verify_table_field>
   1396c:	str	r0, [sp, #4]
   13970:	cmp	r0, #0
   13974:	beq	13984 <MyGame_Example_Alt_verify_table+0x78>
   13978:	ldr	r0, [sp, #4]
   1397c:	str	r0, [fp, #-4]
   13980:	b	139c0 <MyGame_Example_Alt_verify_table+0xb4>
   13984:	ldr	r0, [sp, #8]
   13988:	movw	r1, #3
   1398c:	uxth	r1, r1
   13990:	movw	r2, #0
   13994:	movw	r3, #0
   13998:	movt	r3, #0
   1399c:	bl	0 <flatcc_verify_union_vector_field>
   139a0:	str	r0, [sp, #4]
   139a4:	cmp	r0, #0
   139a8:	beq	139b8 <MyGame_Example_Alt_verify_table+0xac>
   139ac:	ldr	r0, [sp, #4]
   139b0:	str	r0, [fp, #-4]
   139b4:	b	139c0 <MyGame_Example_Alt_verify_table+0xb4>
   139b8:	movw	r0, #0
   139bc:	str	r0, [fp, #-4]
   139c0:	ldr	r0, [fp, #-4]
   139c4:	mov	sp, fp
   139c8:	pop	{fp, pc}

000139cc <MyGame_Example_TestJSONPrefix_verify_table>:
   139cc:	push	{fp, lr}
   139d0:	mov	fp, sp
   139d4:	sub	sp, sp, #16
   139d8:	str	r0, [sp, #8]
   139dc:	ldr	r0, [sp, #8]
   139e0:	movw	r1, #0
   139e4:	uxth	r1, r1
   139e8:	movw	r2, #0
   139ec:	movw	r3, #0
   139f0:	movt	r3, #0
   139f4:	bl	0 <flatcc_verify_table_field>
   139f8:	str	r0, [sp, #4]
   139fc:	cmp	r0, #0
   13a00:	beq	13a10 <MyGame_Example_TestJSONPrefix_verify_table+0x44>
   13a04:	ldr	r0, [sp, #4]
   13a08:	str	r0, [fp, #-4]
   13a0c:	b	13a80 <MyGame_Example_TestJSONPrefix_verify_table+0xb4>
   13a10:	ldr	r0, [sp, #8]
   13a14:	movw	r1, #1
   13a18:	uxth	r1, r1
   13a1c:	movw	r2, #0
   13a20:	movw	r3, #0
   13a24:	movt	r3, #0
   13a28:	bl	0 <flatcc_verify_table_field>
   13a2c:	str	r0, [sp, #4]
   13a30:	cmp	r0, #0
   13a34:	beq	13a44 <MyGame_Example_TestJSONPrefix_verify_table+0x78>
   13a38:	ldr	r0, [sp, #4]
   13a3c:	str	r0, [fp, #-4]
   13a40:	b	13a80 <MyGame_Example_TestJSONPrefix_verify_table+0xb4>
   13a44:	ldr	r0, [sp, #8]
   13a48:	movw	r1, #2
   13a4c:	uxth	r1, r1
   13a50:	movw	r2, #0
   13a54:	movw	r3, #0
   13a58:	movt	r3, #0
   13a5c:	bl	0 <flatcc_verify_table_field>
   13a60:	str	r0, [sp, #4]
   13a64:	cmp	r0, #0
   13a68:	beq	13a78 <MyGame_Example_TestJSONPrefix_verify_table+0xac>
   13a6c:	ldr	r0, [sp, #4]
   13a70:	str	r0, [fp, #-4]
   13a74:	b	13a80 <MyGame_Example_TestJSONPrefix_verify_table+0xb4>
   13a78:	movw	r0, #0
   13a7c:	str	r0, [fp, #-4]
   13a80:	ldr	r0, [fp, #-4]
   13a84:	mov	sp, fp
   13a88:	pop	{fp, pc}

00013a8c <Fantasy_Movie_verify_table>:
   13a8c:	push	{fp, lr}
   13a90:	mov	fp, sp
   13a94:	sub	sp, sp, #16
   13a98:	str	r0, [sp, #8]
   13a9c:	ldr	r0, [sp, #8]
   13aa0:	movw	r1, #1
   13aa4:	uxth	r1, r1
   13aa8:	movw	r2, #0
   13aac:	movw	r3, #0
   13ab0:	movt	r3, #0
   13ab4:	bl	0 <flatcc_verify_union_field>
   13ab8:	str	r0, [sp, #4]
   13abc:	cmp	r0, #0
   13ac0:	beq	13ad0 <Fantasy_Movie_verify_table+0x44>
   13ac4:	ldr	r0, [sp, #4]
   13ac8:	str	r0, [fp, #-4]
   13acc:	b	13ba8 <Fantasy_Movie_verify_table+0x11c>
   13ad0:	ldr	r0, [sp, #8]
   13ad4:	movw	r1, #3
   13ad8:	uxth	r1, r1
   13adc:	movw	r2, #0
   13ae0:	movw	r3, #0
   13ae4:	movt	r3, #0
   13ae8:	bl	0 <flatcc_verify_union_field>
   13aec:	str	r0, [sp, #4]
   13af0:	cmp	r0, #0
   13af4:	beq	13b04 <Fantasy_Movie_verify_table+0x78>
   13af8:	ldr	r0, [sp, #4]
   13afc:	str	r0, [fp, #-4]
   13b00:	b	13ba8 <Fantasy_Movie_verify_table+0x11c>
   13b04:	ldr	r0, [sp, #8]
   13b08:	movw	r1, #5
   13b0c:	uxth	r1, r1
   13b10:	movw	r2, #0
   13b14:	movw	r3, #0
   13b18:	movt	r3, #0
   13b1c:	bl	0 <flatcc_verify_union_field>
   13b20:	str	r0, [sp, #4]
   13b24:	cmp	r0, #0
   13b28:	beq	13b38 <Fantasy_Movie_verify_table+0xac>
   13b2c:	ldr	r0, [sp, #4]
   13b30:	str	r0, [fp, #-4]
   13b34:	b	13ba8 <Fantasy_Movie_verify_table+0x11c>
   13b38:	ldr	r0, [sp, #8]
   13b3c:	movw	r1, #7
   13b40:	uxth	r1, r1
   13b44:	movw	r2, #0
   13b48:	movw	r3, #0
   13b4c:	movt	r3, #0
   13b50:	bl	0 <flatcc_verify_union_field>
   13b54:	str	r0, [sp, #4]
   13b58:	cmp	r0, #0
   13b5c:	beq	13b6c <Fantasy_Movie_verify_table+0xe0>
   13b60:	ldr	r0, [sp, #4]
   13b64:	str	r0, [fp, #-4]
   13b68:	b	13ba8 <Fantasy_Movie_verify_table+0x11c>
   13b6c:	ldr	r0, [sp, #8]
   13b70:	movw	r1, #9
   13b74:	uxth	r1, r1
   13b78:	movw	r2, #0
   13b7c:	movw	r3, #0
   13b80:	movt	r3, #0
   13b84:	bl	0 <flatcc_verify_union_vector_field>
   13b88:	str	r0, [sp, #4]
   13b8c:	cmp	r0, #0
   13b90:	beq	13ba0 <Fantasy_Movie_verify_table+0x114>
   13b94:	ldr	r0, [sp, #4]
   13b98:	str	r0, [fp, #-4]
   13b9c:	b	13ba8 <Fantasy_Movie_verify_table+0x11c>
   13ba0:	movw	r0, #0
   13ba4:	str	r0, [fp, #-4]
   13ba8:	ldr	r0, [fp, #-4]
   13bac:	mov	sp, fp
   13bb0:	pop	{fp, pc}

00013bb4 <MyGame_Example_TestJSONPrefixParsing_verify_table>:
   13bb4:	push	{fp, lr}
   13bb8:	mov	fp, sp
   13bbc:	sub	sp, sp, #16
   13bc0:	str	r0, [sp, #8]
   13bc4:	ldr	r0, [sp, #8]
   13bc8:	movw	r1, #0
   13bcc:	uxth	r1, r1
   13bd0:	movw	r2, #0
   13bd4:	bl	0 <flatcc_verify_string_field>
   13bd8:	str	r0, [sp, #4]
   13bdc:	cmp	r0, #0
   13be0:	beq	13bf0 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x3c>
   13be4:	ldr	r0, [sp, #4]
   13be8:	str	r0, [fp, #-4]
   13bec:	b	13d88 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13bf0:	ldr	r0, [sp, #8]
   13bf4:	movw	r1, #1
   13bf8:	uxth	r1, r1
   13bfc:	movw	r2, #4
   13c00:	movw	r3, #4
   13c04:	uxth	r3, r3
   13c08:	bl	0 <flatcc_verify_field>
   13c0c:	str	r0, [sp, #4]
   13c10:	cmp	r0, #0
   13c14:	beq	13c24 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x70>
   13c18:	ldr	r0, [sp, #4]
   13c1c:	str	r0, [fp, #-4]
   13c20:	b	13d88 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13c24:	ldr	r0, [sp, #8]
   13c28:	movw	r1, #2
   13c2c:	uxth	r1, r1
   13c30:	movw	r2, #0
   13c34:	bl	0 <flatcc_verify_string_field>
   13c38:	str	r0, [sp, #4]
   13c3c:	cmp	r0, #0
   13c40:	beq	13c50 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x9c>
   13c44:	ldr	r0, [sp, #4]
   13c48:	str	r0, [fp, #-4]
   13c4c:	b	13d88 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13c50:	ldr	r0, [sp, #8]
   13c54:	movw	r1, #3
   13c58:	uxth	r1, r1
   13c5c:	movw	r2, #8
   13c60:	movw	r3, #8
   13c64:	uxth	r3, r3
   13c68:	bl	0 <flatcc_verify_field>
   13c6c:	str	r0, [sp, #4]
   13c70:	cmp	r0, #0
   13c74:	beq	13c84 <MyGame_Example_TestJSONPrefixParsing_verify_table+0xd0>
   13c78:	ldr	r0, [sp, #4]
   13c7c:	str	r0, [fp, #-4]
   13c80:	b	13d88 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13c84:	ldr	r0, [sp, #8]
   13c88:	movw	r1, #4
   13c8c:	uxth	r1, r1
   13c90:	movw	r2, #0
   13c94:	bl	0 <flatcc_verify_string_field>
   13c98:	str	r0, [sp, #4]
   13c9c:	cmp	r0, #0
   13ca0:	beq	13cb0 <MyGame_Example_TestJSONPrefixParsing_verify_table+0xfc>
   13ca4:	ldr	r0, [sp, #4]
   13ca8:	str	r0, [fp, #-4]
   13cac:	b	13d88 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13cb0:	ldr	r0, [sp, #8]
   13cb4:	movw	r1, #5
   13cb8:	uxth	r1, r1
   13cbc:	movw	r2, #8
   13cc0:	movw	r3, #8
   13cc4:	uxth	r3, r3
   13cc8:	bl	0 <flatcc_verify_field>
   13ccc:	str	r0, [sp, #4]
   13cd0:	cmp	r0, #0
   13cd4:	beq	13ce4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x130>
   13cd8:	ldr	r0, [sp, #4]
   13cdc:	str	r0, [fp, #-4]
   13ce0:	b	13d88 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13ce4:	ldr	r0, [sp, #8]
   13ce8:	movw	r1, #6
   13cec:	uxth	r1, r1
   13cf0:	movw	r2, #4
   13cf4:	movw	r3, #4
   13cf8:	uxth	r3, r3
   13cfc:	bl	0 <flatcc_verify_field>
   13d00:	str	r0, [sp, #4]
   13d04:	cmp	r0, #0
   13d08:	beq	13d18 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x164>
   13d0c:	ldr	r0, [sp, #4]
   13d10:	str	r0, [fp, #-4]
   13d14:	b	13d88 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13d18:	ldr	r0, [sp, #8]
   13d1c:	movw	r1, #7
   13d20:	uxth	r1, r1
   13d24:	movw	r2, #8
   13d28:	movw	r3, #8
   13d2c:	uxth	r3, r3
   13d30:	bl	0 <flatcc_verify_field>
   13d34:	str	r0, [sp, #4]
   13d38:	cmp	r0, #0
   13d3c:	beq	13d4c <MyGame_Example_TestJSONPrefixParsing_verify_table+0x198>
   13d40:	ldr	r0, [sp, #4]
   13d44:	str	r0, [fp, #-4]
   13d48:	b	13d88 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13d4c:	ldr	r0, [sp, #8]
   13d50:	movw	r1, #8
   13d54:	uxth	r1, r1
   13d58:	movw	r2, #4
   13d5c:	movw	r3, #4
   13d60:	uxth	r3, r3
   13d64:	bl	0 <flatcc_verify_field>
   13d68:	str	r0, [sp, #4]
   13d6c:	cmp	r0, #0
   13d70:	beq	13d80 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1cc>
   13d74:	ldr	r0, [sp, #4]
   13d78:	str	r0, [fp, #-4]
   13d7c:	b	13d88 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13d80:	movw	r0, #0
   13d84:	str	r0, [fp, #-4]
   13d88:	ldr	r0, [fp, #-4]
   13d8c:	mov	sp, fp
   13d90:	pop	{fp, pc}

00013d94 <MyGame_Example_TestJSONPrefixParsing2_verify_table>:
   13d94:	push	{fp, lr}
   13d98:	mov	fp, sp
   13d9c:	sub	sp, sp, #16
   13da0:	str	r0, [sp, #8]
   13da4:	ldr	r0, [sp, #8]
   13da8:	movw	r1, #0
   13dac:	uxth	r1, r1
   13db0:	movw	r2, #8
   13db4:	movw	r3, #8
   13db8:	uxth	r3, r3
   13dbc:	bl	0 <flatcc_verify_field>
   13dc0:	str	r0, [sp, #4]
   13dc4:	cmp	r0, #0
   13dc8:	beq	13dd8 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x44>
   13dcc:	ldr	r0, [sp, #4]
   13dd0:	str	r0, [fp, #-4]
   13dd4:	b	13e14 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x80>
   13dd8:	ldr	r0, [sp, #8]
   13ddc:	movw	r1, #1
   13de0:	uxth	r1, r1
   13de4:	movw	r2, #4
   13de8:	movw	r3, #4
   13dec:	uxth	r3, r3
   13df0:	bl	0 <flatcc_verify_field>
   13df4:	str	r0, [sp, #4]
   13df8:	cmp	r0, #0
   13dfc:	beq	13e0c <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x78>
   13e00:	ldr	r0, [sp, #4]
   13e04:	str	r0, [fp, #-4]
   13e08:	b	13e14 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x80>
   13e0c:	movw	r0, #0
   13e10:	str	r0, [fp, #-4]
   13e14:	ldr	r0, [fp, #-4]
   13e18:	mov	sp, fp
   13e1c:	pop	{fp, pc}

00013e20 <MyGame_Example_TestJSONPrefixParsing3_verify_table>:
   13e20:	push	{fp, lr}
   13e24:	mov	fp, sp
   13e28:	sub	sp, sp, #16
   13e2c:	str	r0, [sp, #8]
   13e30:	ldr	r0, [sp, #8]
   13e34:	movw	r1, #0
   13e38:	uxth	r1, r1
   13e3c:	movw	r2, #8
   13e40:	movw	r3, #8
   13e44:	uxth	r3, r3
   13e48:	bl	0 <flatcc_verify_field>
   13e4c:	str	r0, [sp, #4]
   13e50:	cmp	r0, #0
   13e54:	beq	13e64 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x44>
   13e58:	ldr	r0, [sp, #4]
   13e5c:	str	r0, [fp, #-4]
   13e60:	b	13ea0 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x80>
   13e64:	ldr	r0, [sp, #8]
   13e68:	movw	r1, #1
   13e6c:	uxth	r1, r1
   13e70:	movw	r2, #4
   13e74:	movw	r3, #4
   13e78:	uxth	r3, r3
   13e7c:	bl	0 <flatcc_verify_field>
   13e80:	str	r0, [sp, #4]
   13e84:	cmp	r0, #0
   13e88:	beq	13e98 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x78>
   13e8c:	ldr	r0, [sp, #4]
   13e90:	str	r0, [fp, #-4]
   13e94:	b	13ea0 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x80>
   13e98:	movw	r0, #0
   13e9c:	str	r0, [fp, #-4]
   13ea0:	ldr	r0, [fp, #-4]
   13ea4:	mov	sp, fp
   13ea8:	pop	{fp, pc}

00013eac <Fantasy_Character_union_verifier>:
   13eac:	push	{fp, lr}
   13eb0:	mov	fp, sp
   13eb4:	sub	sp, sp, #16
   13eb8:	str	r0, [sp, #8]
   13ebc:	ldr	r0, [sp, #8]
   13ec0:	ldrb	r0, [r0, #12]
   13ec4:	mov	r1, r0
   13ec8:	cmp	r0, #2
   13ecc:	str	r1, [sp, #4]
   13ed0:	beq	13f28 <Fantasy_Character_union_verifier+0x7c>
   13ed4:	b	13ed8 <Fantasy_Character_union_verifier+0x2c>
   13ed8:	ldr	r0, [sp, #4]
   13edc:	cmp	r0, #8
   13ee0:	beq	13f40 <Fantasy_Character_union_verifier+0x94>
   13ee4:	b	13ee8 <Fantasy_Character_union_verifier+0x3c>
   13ee8:	ldr	r0, [sp, #4]
   13eec:	cmp	r0, #9
   13ef0:	beq	13f5c <Fantasy_Character_union_verifier+0xb0>
   13ef4:	b	13ef8 <Fantasy_Character_union_verifier+0x4c>
   13ef8:	ldr	r0, [sp, #4]
   13efc:	cmp	r0, #10
   13f00:	beq	13f78 <Fantasy_Character_union_verifier+0xcc>
   13f04:	b	13f08 <Fantasy_Character_union_verifier+0x5c>
   13f08:	ldr	r0, [sp, #4]
   13f0c:	cmp	r0, #11
   13f10:	beq	13f94 <Fantasy_Character_union_verifier+0xe8>
   13f14:	b	13f18 <Fantasy_Character_union_verifier+0x6c>
   13f18:	ldr	r0, [sp, #4]
   13f1c:	cmp	r0, #255	; 0xff
   13f20:	beq	13fa4 <Fantasy_Character_union_verifier+0xf8>
   13f24:	b	13fb4 <Fantasy_Character_union_verifier+0x108>
   13f28:	ldr	r0, [sp, #8]
   13f2c:	movw	r1, #0
   13f30:	movt	r1, #0
   13f34:	bl	0 <flatcc_verify_union_table>
   13f38:	str	r0, [fp, #-4]
   13f3c:	b	13fbc <Fantasy_Character_union_verifier+0x110>
   13f40:	ldr	r0, [sp, #8]
   13f44:	movw	r1, #2
   13f48:	movw	r2, #2
   13f4c:	uxth	r2, r2
   13f50:	bl	0 <flatcc_verify_union_struct>
   13f54:	str	r0, [fp, #-4]
   13f58:	b	13fbc <Fantasy_Character_union_verifier+0x110>
   13f5c:	ldr	r0, [sp, #8]
   13f60:	movw	r1, #4
   13f64:	movw	r2, #4
   13f68:	uxth	r2, r2
   13f6c:	bl	0 <flatcc_verify_union_struct>
   13f70:	str	r0, [fp, #-4]
   13f74:	b	13fbc <Fantasy_Character_union_verifier+0x110>
   13f78:	ldr	r0, [sp, #8]
   13f7c:	movw	r1, #4
   13f80:	movw	r2, #4
   13f84:	uxth	r2, r2
   13f88:	bl	0 <flatcc_verify_union_struct>
   13f8c:	str	r0, [fp, #-4]
   13f90:	b	13fbc <Fantasy_Character_union_verifier+0x110>
   13f94:	ldr	r0, [sp, #8]
   13f98:	bl	0 <flatcc_verify_union_string>
   13f9c:	str	r0, [fp, #-4]
   13fa0:	b	13fbc <Fantasy_Character_union_verifier+0x110>
   13fa4:	ldr	r0, [sp, #8]
   13fa8:	bl	0 <flatcc_verify_union_string>
   13fac:	str	r0, [fp, #-4]
   13fb0:	b	13fbc <Fantasy_Character_union_verifier+0x110>
   13fb4:	movw	r0, #0
   13fb8:	str	r0, [fp, #-4]
   13fbc:	ldr	r0, [fp, #-4]
   13fc0:	mov	sp, fp
   13fc4:	pop	{fp, pc}

00013fc8 <Fantasy_Attacker_verify_table>:
   13fc8:	push	{fp, lr}
   13fcc:	mov	fp, sp
   13fd0:	sub	sp, sp, #16
   13fd4:	str	r0, [sp, #8]
   13fd8:	ldr	r0, [sp, #8]
   13fdc:	movw	r1, #0
   13fe0:	uxth	r1, r1
   13fe4:	movw	r2, #4
   13fe8:	movw	r3, #4
   13fec:	uxth	r3, r3
   13ff0:	bl	0 <flatcc_verify_field>
   13ff4:	str	r0, [sp, #4]
   13ff8:	cmp	r0, #0
   13ffc:	beq	1400c <Fantasy_Attacker_verify_table+0x44>
   14000:	ldr	r0, [sp, #4]
   14004:	str	r0, [fp, #-4]
   14008:	b	14014 <Fantasy_Attacker_verify_table+0x4c>
   1400c:	movw	r0, #0
   14010:	str	r0, [fp, #-4]
   14014:	ldr	r0, [fp, #-4]
   14018:	mov	sp, fp
   1401c:	pop	{fp, pc}
