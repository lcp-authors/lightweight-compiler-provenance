
../compcert-repos/prog2/CMakeFiles/5.1.dir/Aula05_Filas_e_Pilhas/1/armazem.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <armazem_novo>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #16
  10:	str	r0, [fp, #-16]
  14:	str	r1, [fp, #-20]	; 0xffffffec
  18:	mov	r0, #12
  1c:	bl	0 <malloc>
  20:	mov	r3, r0
  24:	str	r3, [fp, #-8]
  28:	ldr	r3, [fp, #-8]
  2c:	ldr	r2, [fp, #-16]
  30:	str	r2, [r3]
  34:	ldr	r3, [fp, #-8]
  38:	ldr	r2, [fp, #-20]	; 0xffffffec
  3c:	str	r2, [r3, #4]
  40:	bl	0 <fila_nova>
  44:	mov	r2, r0
  48:	ldr	r3, [fp, #-8]
  4c:	str	r2, [r3, #8]
  50:	ldr	r3, [fp, #-8]
  54:	mov	r0, r3
  58:	sub	sp, fp, #4
  5c:	ldr	fp, [sp]
  60:	add	sp, sp, #4
  64:	pop	{pc}		; (ldr pc, [sp], #4)

00000068 <armazem_vazio>:
  68:	str	fp, [sp, #-8]!
  6c:	str	lr, [sp, #4]
  70:	add	fp, sp, #4
  74:	sub	sp, sp, #8
  78:	str	r0, [fp, #-8]
  7c:	ldr	r3, [fp, #-8]
  80:	cmp	r3, #0
  84:	beq	a4 <armazem_vazio+0x3c>
  88:	ldr	r3, [fp, #-8]
  8c:	ldr	r3, [r3, #8]
  90:	mov	r0, r3
  94:	bl	0 <fila_tamanho>
  98:	mov	r3, r0
  9c:	cmp	r3, #0
  a0:	bne	ac <armazem_vazio+0x44>
  a4:	mov	r3, #1
  a8:	b	b0 <armazem_vazio+0x48>
  ac:	mov	r3, #0
  b0:	mov	r0, r3
  b4:	sub	sp, fp, #4
  b8:	ldr	fp, [sp]
  bc:	add	sp, sp, #4
  c0:	pop	{pc}		; (ldr pc, [sp], #4)

000000c4 <armazem_cheio>:
  c4:	str	fp, [sp, #-8]!
  c8:	str	lr, [sp, #4]
  cc:	add	fp, sp, #4
  d0:	sub	sp, sp, #8
  d4:	str	r0, [fp, #-8]
  d8:	ldr	r0, [fp, #-8]
  dc:	bl	68 <armazem_vazio>
  e0:	mov	r3, r0
  e4:	cmp	r3, #0
  e8:	beq	f4 <armazem_cheio+0x30>
  ec:	mov	r3, #0
  f0:	b	14c <armazem_cheio+0x88>
  f4:	ldr	r3, [fp, #-8]
  f8:	ldr	r3, [r3, #8]
  fc:	mov	r0, r3
 100:	bl	0 <fila_tamanho>
 104:	mov	r2, r0
 108:	ldr	r3, [fp, #-8]
 10c:	ldr	r3, [r3]
 110:	cmp	r2, r3
 114:	bne	148 <armazem_cheio+0x84>
 118:	ldr	r3, [fp, #-8]
 11c:	ldr	r3, [r3, #8]
 120:	mov	r0, r3
 124:	bl	0 <fila_back>
 128:	mov	r3, r0
 12c:	ldr	r2, [r3, #4]
 130:	ldr	r3, [fp, #-8]
 134:	ldr	r3, [r3, #4]
 138:	cmp	r2, r3
 13c:	bne	148 <armazem_cheio+0x84>
 140:	mov	r3, #1
 144:	b	14c <armazem_cheio+0x88>
 148:	mov	r3, #0
 14c:	mov	r0, r3
 150:	sub	sp, fp, #4
 154:	ldr	fp, [sp]
 158:	add	sp, sp, #4
 15c:	pop	{pc}		; (ldr pc, [sp], #4)

00000160 <armazenar_contentor>:
 160:	str	r4, [sp, #-12]!
 164:	str	fp, [sp, #4]
 168:	str	lr, [sp, #8]
 16c:	add	fp, sp, #8
 170:	sub	sp, sp, #20
 174:	str	r0, [fp, #-24]	; 0xffffffe8
 178:	str	r1, [fp, #-28]	; 0xffffffe4
 17c:	bl	0 <pilha_nova>
 180:	str	r0, [fp, #-16]
 184:	ldr	r3, [fp, #-24]	; 0xffffffe8
 188:	cmp	r3, #0
 18c:	beq	1b0 <armazenar_contentor+0x50>
 190:	ldr	r3, [fp, #-28]	; 0xffffffe4
 194:	cmp	r3, #0
 198:	beq	1b0 <armazenar_contentor+0x50>
 19c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 1a0:	bl	c4 <armazem_cheio>
 1a4:	mov	r3, r0
 1a8:	cmp	r3, #0
 1ac:	beq	1b8 <armazenar_contentor+0x58>
 1b0:	mov	r3, #0
 1b4:	b	248 <armazenar_contentor+0xe8>
 1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 1bc:	bl	68 <armazem_vazio>
 1c0:	mov	r3, r0
 1c4:	cmp	r3, #0
 1c8:	beq	1e8 <armazenar_contentor+0x88>
 1cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1d0:	ldr	r4, [r3, #8]
 1d4:	bl	0 <pilha_nova>
 1d8:	mov	r3, r0
 1dc:	mov	r1, r3
 1e0:	mov	r0, r4
 1e4:	bl	0 <fila_push>
 1e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1ec:	ldr	r3, [r3, #8]
 1f0:	mov	r0, r3
 1f4:	bl	0 <fila_back>
 1f8:	mov	r3, r0
 1fc:	ldr	r2, [r3, #4]
 200:	ldr	r3, [fp, #-24]	; 0xffffffe8
 204:	ldr	r3, [r3, #4]
 208:	cmp	r2, r3
 20c:	bne	224 <armazenar_contentor+0xc4>
 210:	ldr	r3, [fp, #-24]	; 0xffffffe8
 214:	ldr	r3, [r3, #8]
 218:	ldr	r1, [fp, #-16]
 21c:	mov	r0, r3
 220:	bl	0 <fila_push>
 224:	ldr	r3, [fp, #-24]	; 0xffffffe8
 228:	ldr	r3, [r3, #8]
 22c:	mov	r0, r3
 230:	bl	0 <fila_back>
 234:	mov	r3, r0
 238:	ldr	r1, [fp, #-28]	; 0xffffffe4
 23c:	mov	r0, r3
 240:	bl	0 <pilha_push>
 244:	mov	r3, #1
 248:	mov	r0, r3
 24c:	sub	sp, fp, #8
 250:	ldr	r4, [sp]
 254:	ldr	fp, [sp, #4]
 258:	add	sp, sp, #8
 25c:	pop	{pc}		; (ldr pc, [sp], #4)

00000260 <expedir_contentor>:
 260:	str	r4, [sp, #-12]!
 264:	str	fp, [sp, #4]
 268:	str	lr, [sp, #8]
 26c:	add	fp, sp, #8
 270:	sub	sp, sp, #20
 274:	str	r0, [fp, #-24]	; 0xffffffe8
 278:	ldr	r0, [fp, #-24]	; 0xffffffe8
 27c:	bl	68 <armazem_vazio>
 280:	mov	r3, r0
 284:	cmp	r3, #0
 288:	bne	2b4 <expedir_contentor+0x54>
 28c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 290:	ldr	r3, [r3, #8]
 294:	mov	r0, r3
 298:	bl	0 <fila_front>
 29c:	mov	r3, r0
 2a0:	mov	r0, r3
 2a4:	bl	0 <pilha_top>
 2a8:	mov	r3, r0
 2ac:	cmp	r3, #0
 2b0:	bne	2bc <expedir_contentor+0x5c>
 2b4:	mov	r3, #0
 2b8:	b	368 <expedir_contentor+0x108>
 2bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2c0:	ldr	r3, [r3, #8]
 2c4:	mov	r0, r3
 2c8:	bl	0 <fila_front>
 2cc:	mov	r3, r0
 2d0:	mov	r0, r3
 2d4:	bl	0 <pilha_top>
 2d8:	mov	r3, r0
 2dc:	ldr	r4, [r3]
 2e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2e4:	ldr	r3, [r3, #8]
 2e8:	mov	r0, r3
 2ec:	bl	0 <fila_front>
 2f0:	mov	r3, r0
 2f4:	mov	r0, r3
 2f8:	bl	0 <pilha_top>
 2fc:	mov	r3, r0
 300:	vldr	s15, [r3, #4]
 304:	vmov.f32	s0, s15
 308:	mov	r0, r4
 30c:	bl	0 <contentor_novo>
 310:	str	r0, [fp, #-16]
 314:	ldr	r3, [fp, #-24]	; 0xffffffe8
 318:	ldr	r3, [r3, #8]
 31c:	mov	r0, r3
 320:	bl	0 <fila_front>
 324:	mov	r3, r0
 328:	ldr	r3, [r3, #4]
 32c:	cmp	r3, #1
 330:	bgt	348 <expedir_contentor+0xe8>
 334:	ldr	r3, [fp, #-24]	; 0xffffffe8
 338:	ldr	r3, [r3, #8]
 33c:	mov	r0, r3
 340:	bl	0 <fila_pop>
 344:	b	364 <expedir_contentor+0x104>
 348:	ldr	r3, [fp, #-24]	; 0xffffffe8
 34c:	ldr	r3, [r3, #8]
 350:	mov	r0, r3
 354:	bl	0 <fila_front>
 358:	mov	r3, r0
 35c:	mov	r0, r3
 360:	bl	0 <pilha_pop>
 364:	ldr	r3, [fp, #-16]
 368:	mov	r0, r3
 36c:	sub	sp, fp, #8
 370:	ldr	r4, [sp]
 374:	ldr	fp, [sp, #4]
 378:	add	sp, sp, #8
 37c:	pop	{pc}		; (ldr pc, [sp], #4)
