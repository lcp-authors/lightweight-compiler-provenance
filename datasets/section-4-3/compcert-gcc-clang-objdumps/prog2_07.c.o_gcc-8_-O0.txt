
../compcert-repos/prog2/CMakeFiles/0.7.dir/Aula00_Conceitos_base/07.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <media>:
   0:	push	{fp}		; (str fp, [sp, #-4]!)
   4:	add	fp, sp, #0
   8:	sub	sp, sp, #20
   c:	str	r0, [fp, #-16]
  10:	str	r1, [fp, #-20]	; 0xffffffec
  14:	mov	r3, #0
  18:	str	r3, [fp, #-12]
  1c:	mov	r3, #0
  20:	str	r3, [fp, #-8]
  24:	b	b4 <media+0xb4>
  28:	ldr	r3, [fp, #-8]
  2c:	lsl	r3, r3, #2
  30:	ldr	r2, [fp, #-16]
  34:	add	r3, r2, r3
  38:	vldr	s15, [r3]
  3c:	vcvt.f64.f32	d7, s15
  40:	vldr	d6, [pc, #168]	; f0 <media+0xf0>
  44:	vcmpe.f64	d7, d6
  48:	vmrs	APSR_nzcv, fpscr
  4c:	blt	88 <media+0x88>
  50:	ldr	r3, [fp, #-8]
  54:	lsl	r3, r3, #2
  58:	ldr	r2, [fp, #-16]
  5c:	add	r3, r2, r3
  60:	vldr	s15, [r3]
  64:	vldr	s14, [pc, #140]	; f8 <media+0xf8>
  68:	vcmpe.f32	s15, s14
  6c:	vmrs	APSR_nzcv, fpscr
  70:	bpl	88 <media+0x88>
  74:	vldr	s15, [fp, #-12]
  78:	vldr	s14, [pc, #120]	; f8 <media+0xf8>
  7c:	vadd.f32	s15, s15, s14
  80:	vstr	s15, [fp, #-12]
  84:	b	a8 <media+0xa8>
  88:	ldr	r3, [fp, #-8]
  8c:	lsl	r3, r3, #2
  90:	ldr	r2, [fp, #-16]
  94:	add	r3, r2, r3
  98:	vldr	s15, [r3]
  9c:	vldr	s14, [fp, #-12]
  a0:	vadd.f32	s15, s14, s15
  a4:	vstr	s15, [fp, #-12]
  a8:	ldr	r3, [fp, #-8]
  ac:	add	r3, r3, #1
  b0:	str	r3, [fp, #-8]
  b4:	ldr	r2, [fp, #-8]
  b8:	ldr	r3, [fp, #-20]	; 0xffffffec
  bc:	cmp	r2, r3
  c0:	blt	28 <media+0x28>
  c4:	ldr	r3, [fp, #-20]	; 0xffffffec
  c8:	vmov	s15, r3
  cc:	vcvt.f32.s32	s15, s15
  d0:	vldr	s14, [fp, #-12]
  d4:	vdiv.f32	s13, s14, s15
  d8:	vmov.f32	s15, s13
  dc:	vmov.f32	s0, s15
  e0:	add	sp, fp, #0
  e4:	pop	{fp}		; (ldr fp, [sp], #4)
  e8:	bx	lr
  ec:	nop	{0}
  f0:	.word	0x9999999a
  f4:	.word	0x40229999
  f8:	.word	0x41180000

000000fc <lernotas>:
  fc:	str	fp, [sp, #-8]!
 100:	str	lr, [sp, #4]
 104:	add	fp, sp, #4
 108:	sub	sp, sp, #24
 10c:	str	r0, [fp, #-24]	; 0xffffffe8
 110:	mov	r3, #0
 114:	str	r3, [fp, #-8]
 118:	b	164 <lernotas+0x68>
 11c:	vldr	s15, [fp, #-12]
 120:	vcvt.f64.f32	d7, s15
 124:	vldr	d6, [pc, #116]	; 1a0 <lernotas+0xa4>
 128:	vmul.f64	d6, d7, d6
 12c:	vldr	s15, [fp, #-16]
 130:	vcvt.f64.f32	d7, s15
 134:	vldr	d5, [pc, #108]	; 1a8 <lernotas+0xac>
 138:	vmul.f64	d7, d7, d5
 13c:	vadd.f64	d7, d6, d7
 140:	ldr	r3, [fp, #-8]
 144:	lsl	r3, r3, #2
 148:	ldr	r2, [fp, #-24]	; 0xffffffe8
 14c:	add	r3, r2, r3
 150:	vcvt.f32.f64	s15, d7
 154:	vstr	s15, [r3]
 158:	ldr	r3, [fp, #-8]
 15c:	add	r3, r3, #1
 160:	str	r3, [fp, #-8]
 164:	sub	r2, fp, #16
 168:	sub	r3, fp, #12
 16c:	mov	r1, r3
 170:	movw	r0, #0
 174:	movt	r0, #0
 178:	bl	0 <__isoc99_scanf>
 17c:	mov	r3, r0
 180:	cmp	r3, #2
 184:	beq	11c <lernotas+0x20>
 188:	ldr	r3, [fp, #-8]
 18c:	mov	r0, r3
 190:	sub	sp, fp, #4
 194:	ldr	fp, [sp]
 198:	add	sp, sp, #4
 19c:	pop	{pc}		; (ldr pc, [sp], #4)
 1a0:	.word	0x33333333
 1a4:	.word	0x3fe33333
 1a8:	.word	0x9999999a
 1ac:	.word	0x3fd99999

000001b0 <main>:
 1b0:	str	fp, [sp, #-8]!
 1b4:	str	lr, [sp, #4]
 1b8:	add	fp, sp, #4
 1bc:	sub	sp, sp, #408	; 0x198
 1c0:	sub	r3, fp, #408	; 0x198
 1c4:	mov	r2, #400	; 0x190
 1c8:	mov	r1, #0
 1cc:	mov	r0, r3
 1d0:	bl	0 <memset>
 1d4:	sub	r3, fp, #408	; 0x198
 1d8:	mov	r0, r3
 1dc:	bl	fc <lernotas>
 1e0:	str	r0, [fp, #-8]
 1e4:	sub	r3, fp, #408	; 0x198
 1e8:	ldr	r1, [fp, #-8]
 1ec:	mov	r0, r3
 1f0:	bl	0 <media>
 1f4:	vmov.f32	s15, s0
 1f8:	vcvt.f64.f32	d7, s15
 1fc:	vmov	r2, r3, d7
 200:	movw	r0, #0
 204:	movt	r0, #0
 208:	bl	0 <printf>
 20c:	mov	r3, #0
 210:	mov	r0, r3
 214:	sub	sp, fp, #4
 218:	ldr	fp, [sp]
 21c:	add	sp, sp, #4
 220:	pop	{pc}		; (ldr pc, [sp], #4)
