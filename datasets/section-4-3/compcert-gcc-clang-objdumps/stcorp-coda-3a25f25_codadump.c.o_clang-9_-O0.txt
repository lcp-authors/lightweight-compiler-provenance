
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <handle_coda_error>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #16
       c:	movw	r0, #0
      10:	movt	r0, #0
      14:	ldr	r0, [r0]
      18:	str	r0, [fp, #-4]
      1c:	bl	0 <coda_get_errno>
      20:	ldr	r0, [r0]
      24:	bl	0 <coda_errno_to_string>
      28:	ldr	r1, [fp, #-4]
      2c:	str	r0, [sp, #8]
      30:	mov	r0, r1
      34:	movw	r1, #0
      38:	movt	r1, #0
      3c:	ldr	r2, [sp, #8]
      40:	bl	0 <fprintf>
      44:	movw	r1, #0
      48:	movt	r1, #0
      4c:	ldr	r1, [r1]
      50:	str	r0, [sp, #4]
      54:	mov	r0, r1
      58:	bl	0 <fflush>
      5c:	movw	r1, #1
      60:	str	r0, [sp]
      64:	mov	r0, r1
      68:	bl	0 <exit>

0000006c <main>:
      6c:	push	{fp, lr}
      70:	mov	fp, sp
      74:	sub	sp, sp, #40	; 0x28
      78:	movw	r2, #0
      7c:	str	r2, [fp, #-4]
      80:	str	r0, [fp, #-8]
      84:	str	r1, [fp, #-12]
      88:	ldr	r0, [fp, #-8]
      8c:	cmp	r0, #1
      90:	beq	cc <main+0x60>
      94:	ldr	r0, [fp, #-12]
      98:	ldr	r0, [r0, #4]
      9c:	movw	r1, #0
      a0:	movt	r1, #0
      a4:	bl	0 <strcmp>
      a8:	cmp	r0, #0
      ac:	beq	cc <main+0x60>
      b0:	ldr	r0, [fp, #-12]
      b4:	ldr	r0, [r0, #4]
      b8:	movw	r1, #0
      bc:	movt	r1, #0
      c0:	bl	0 <strcmp>
      c4:	cmp	r0, #0
      c8:	bne	d8 <main+0x6c>
      cc:	bl	209c <print_help>
      d0:	movw	r0, #0
      d4:	bl	0 <exit>
      d8:	ldr	r0, [fp, #-12]
      dc:	ldr	r0, [r0, #4]
      e0:	movw	r1, #0
      e4:	movt	r1, #0
      e8:	bl	0 <strcmp>
      ec:	cmp	r0, #0
      f0:	beq	110 <main+0xa4>
      f4:	ldr	r0, [fp, #-12]
      f8:	ldr	r0, [r0, #4]
      fc:	movw	r1, #0
     100:	movt	r1, #0
     104:	bl	0 <strcmp>
     108:	cmp	r0, #0
     10c:	bne	11c <main+0xb0>
     110:	bl	29e0 <print_version>
     114:	movw	r0, #0
     118:	bl	0 <exit>
     11c:	movw	r0, #1
     120:	str	r0, [fp, #-16]
     124:	ldr	r0, [fp, #-16]
     128:	add	r0, r0, #1
     12c:	ldr	r1, [fp, #-8]
     130:	cmp	r0, r1
     134:	bge	184 <main+0x118>
     138:	ldr	r0, [fp, #-12]
     13c:	ldr	r1, [fp, #-16]
     140:	add	r0, r0, r1, lsl #2
     144:	ldr	r0, [r0]
     148:	movw	r1, #0
     14c:	movt	r1, #0
     150:	bl	0 <strcmp>
     154:	cmp	r0, #0
     158:	bne	184 <main+0x118>
     15c:	ldr	r0, [fp, #-12]
     160:	ldr	r1, [fp, #-16]
     164:	add	r1, r1, #1
     168:	add	r0, r0, r1, lsl #2
     16c:	ldr	r0, [r0]
     170:	bl	0 <coda_set_definition_path>
     174:	ldr	r1, [fp, #-16]
     178:	add	r1, r1, #2
     17c:	str	r1, [fp, #-16]
     180:	b	1f8 <main+0x18c>
     184:	movw	r0, #0
     188:	movt	r0, #0
     18c:	str	r0, [sp, #20]
     190:	ldr	r0, [fp, #-12]
     194:	ldr	r0, [r0]
     198:	ldr	r2, [sp, #20]
     19c:	movw	r1, #0
     1a0:	bl	0 <coda_set_definition_path_conditional>
     1a4:	cmp	r0, #0
     1a8:	beq	1f4 <main+0x188>
     1ac:	movw	r0, #0
     1b0:	movt	r0, #0
     1b4:	ldr	r0, [r0]
     1b8:	str	r0, [sp, #16]
     1bc:	bl	0 <coda_get_errno>
     1c0:	ldr	r0, [r0]
     1c4:	bl	0 <coda_errno_to_string>
     1c8:	ldr	r1, [sp, #16]
     1cc:	str	r0, [sp, #12]
     1d0:	mov	r0, r1
     1d4:	movw	r1, #0
     1d8:	movt	r1, #0
     1dc:	ldr	r2, [sp, #12]
     1e0:	bl	0 <fprintf>
     1e4:	movw	r1, #1
     1e8:	str	r0, [sp, #8]
     1ec:	mov	r0, r1
     1f0:	bl	0 <exit>
     1f4:	b	1f8 <main+0x18c>
     1f8:	ldr	r0, [fp, #-12]
     1fc:	ldr	r1, [fp, #-16]
     200:	add	r0, r0, r1, lsl #2
     204:	ldr	r0, [r0]
     208:	movw	r1, #0
     20c:	movt	r1, #0
     210:	bl	0 <strcmp>
     214:	cmp	r0, #0
     218:	bne	254 <main+0x1e8>
     21c:	movw	r0, #0
     220:	movt	r0, #0
     224:	mov	r1, #0
     228:	str	r1, [r0]
     22c:	ldr	r0, [fp, #-16]
     230:	add	r0, r0, #1
     234:	str	r0, [fp, #-16]
     238:	ldr	r0, [fp, #-8]
     23c:	ldr	r1, [fp, #-16]
     240:	sub	r0, r0, r1
     244:	ldr	r2, [fp, #-12]
     248:	add	r1, r2, r1, lsl #2
     24c:	bl	408 <handle_list_run_mode>
     250:	b	3fc <main+0x390>
     254:	ldr	r0, [fp, #-12]
     258:	ldr	r1, [fp, #-16]
     25c:	add	r0, r0, r1, lsl #2
     260:	ldr	r0, [r0]
     264:	movw	r1, #0
     268:	movt	r1, #0
     26c:	bl	0 <strcmp>
     270:	cmp	r0, #0
     274:	bne	2b0 <main+0x244>
     278:	movw	r0, #0
     27c:	movt	r0, #0
     280:	mov	r1, #1
     284:	str	r1, [r0]
     288:	ldr	r0, [fp, #-16]
     28c:	add	r0, r0, #1
     290:	str	r0, [fp, #-16]
     294:	ldr	r0, [fp, #-8]
     298:	ldr	r1, [fp, #-16]
     29c:	sub	r0, r0, r1
     2a0:	ldr	r2, [fp, #-12]
     2a4:	add	r1, r2, r1, lsl #2
     2a8:	bl	978 <handle_ascii_run_mode>
     2ac:	b	3f8 <main+0x38c>
     2b0:	ldr	r0, [fp, #-12]
     2b4:	ldr	r1, [fp, #-16]
     2b8:	add	r0, r0, r1, lsl #2
     2bc:	ldr	r0, [r0]
     2c0:	movw	r1, #0
     2c4:	movt	r1, #0
     2c8:	bl	0 <strcmp>
     2cc:	cmp	r0, #0
     2d0:	bne	30c <main+0x2a0>
     2d4:	movw	r0, #0
     2d8:	movt	r0, #0
     2dc:	mov	r1, #3
     2e0:	str	r1, [r0]
     2e4:	ldr	r0, [fp, #-16]
     2e8:	add	r0, r0, #1
     2ec:	str	r0, [fp, #-16]
     2f0:	ldr	r0, [fp, #-8]
     2f4:	ldr	r1, [fp, #-16]
     2f8:	sub	r0, r0, r1
     2fc:	ldr	r2, [fp, #-12]
     300:	add	r1, r2, r1, lsl #2
     304:	bl	1108 <handle_json_run_mode>
     308:	b	3f4 <main+0x388>
     30c:	ldr	r0, [fp, #-12]
     310:	ldr	r1, [fp, #-16]
     314:	add	r0, r0, r1, lsl #2
     318:	ldr	r0, [r0]
     31c:	movw	r1, #0
     320:	movt	r1, #0
     324:	bl	0 <strcmp>
     328:	cmp	r0, #0
     32c:	bne	368 <main+0x2fc>
     330:	movw	r0, #0
     334:	movt	r0, #0
     338:	mov	r1, #4
     33c:	str	r1, [r0]
     340:	ldr	r0, [fp, #-16]
     344:	add	r0, r0, #1
     348:	str	r0, [fp, #-16]
     34c:	ldr	r0, [fp, #-8]
     350:	ldr	r1, [fp, #-16]
     354:	sub	r0, r0, r1
     358:	ldr	r2, [fp, #-12]
     35c:	add	r1, r2, r1, lsl #2
     360:	bl	15ec <handle_yaml_run_mode>
     364:	b	3f0 <main+0x384>
     368:	ldr	r0, [fp, #-12]
     36c:	ldr	r1, [fp, #-16]
     370:	add	r0, r0, r1, lsl #2
     374:	ldr	r0, [r0]
     378:	movw	r1, #0
     37c:	movt	r1, #0
     380:	bl	0 <strcmp>
     384:	cmp	r0, #0
     388:	bne	3c4 <main+0x358>
     38c:	movw	r0, #0
     390:	movt	r0, #0
     394:	mov	r1, #5
     398:	str	r1, [r0]
     39c:	ldr	r0, [fp, #-16]
     3a0:	add	r0, r0, #1
     3a4:	str	r0, [fp, #-16]
     3a8:	ldr	r0, [fp, #-8]
     3ac:	ldr	r1, [fp, #-16]
     3b0:	sub	r0, r0, r1
     3b4:	ldr	r2, [fp, #-12]
     3b8:	add	r1, r2, r1, lsl #2
     3bc:	bl	1ad0 <handle_debug_run_mode>
     3c0:	b	3ec <main+0x380>
     3c4:	movw	r0, #0
     3c8:	movt	r0, #0
     3cc:	ldr	r0, [r0]
     3d0:	movw	r1, #0
     3d4:	movt	r1, #0
     3d8:	bl	0 <fprintf>
     3dc:	str	r0, [sp, #4]
     3e0:	bl	209c <print_help>
     3e4:	movw	r0, #1
     3e8:	bl	0 <exit>
     3ec:	b	3f0 <main+0x384>
     3f0:	b	3f4 <main+0x388>
     3f4:	b	3f8 <main+0x38c>
     3f8:	b	3fc <main+0x390>
     3fc:	movw	r0, #0
     400:	mov	sp, fp
     404:	pop	{fp, pc}

00000408 <handle_list_run_mode>:
     408:	push	{fp, lr}
     40c:	mov	fp, sp
     410:	sub	sp, sp, #56	; 0x38
     414:	str	r0, [fp, #-4]
     418:	str	r1, [fp, #-8]
     41c:	movw	r0, #0
     420:	movt	r0, #0
     424:	movw	r1, #0
     428:	str	r1, [r0]
     42c:	str	r1, [r0, #664]	; 0x298
     430:	movw	r0, #0
     434:	movt	r0, #0
     438:	movw	r2, #1
     43c:	str	r2, [r0]
     440:	movw	r0, #0
     444:	movt	r0, #0
     448:	str	r1, [r0]
     44c:	str	r2, [fp, #-12]
     450:	str	r2, [fp, #-16]
     454:	movw	r0, #0
     458:	movt	r0, #0
     45c:	str	r1, [r0]
     460:	movw	r0, #0
     464:	movt	r0, #0
     468:	str	r1, [r0]
     46c:	movw	r0, #0
     470:	movt	r0, #0
     474:	str	r1, [r0]
     478:	movw	r0, #0
     47c:	movt	r0, #0
     480:	str	r1, [r0]
     484:	str	r1, [fp, #-20]	; 0xffffffec
     488:	ldr	r0, [fp, #-20]	; 0xffffffec
     48c:	ldr	r1, [fp, #-4]
     490:	cmp	r0, r1
     494:	bge	840 <handle_list_run_mode+0x438>
     498:	ldr	r0, [fp, #-8]
     49c:	ldr	r1, [fp, #-20]	; 0xffffffec
     4a0:	add	r0, r0, r1, lsl #2
     4a4:	ldr	r0, [r0]
     4a8:	movw	r1, #0
     4ac:	movt	r1, #0
     4b0:	bl	0 <strcmp>
     4b4:	cmp	r0, #0
     4b8:	beq	4e0 <handle_list_run_mode+0xd8>
     4bc:	ldr	r0, [fp, #-8]
     4c0:	ldr	r1, [fp, #-20]	; 0xffffffec
     4c4:	add	r0, r0, r1, lsl #2
     4c8:	ldr	r0, [r0]
     4cc:	movw	r1, #0
     4d0:	movt	r1, #0
     4d4:	bl	0 <strcmp>
     4d8:	cmp	r0, #0
     4dc:	bne	4f4 <handle_list_run_mode+0xec>
     4e0:	movw	r0, #0
     4e4:	movt	r0, #0
     4e8:	movw	r1, #1
     4ec:	str	r1, [r0]
     4f0:	b	82c <handle_list_run_mode+0x424>
     4f4:	ldr	r0, [fp, #-8]
     4f8:	ldr	r1, [fp, #-20]	; 0xffffffec
     4fc:	add	r0, r0, r1, lsl #2
     500:	ldr	r0, [r0]
     504:	movw	r1, #0
     508:	movt	r1, #0
     50c:	bl	0 <strcmp>
     510:	cmp	r0, #0
     514:	beq	53c <handle_list_run_mode+0x134>
     518:	ldr	r0, [fp, #-8]
     51c:	ldr	r1, [fp, #-20]	; 0xffffffec
     520:	add	r0, r0, r1, lsl #2
     524:	ldr	r0, [r0]
     528:	movw	r1, #0
     52c:	movt	r1, #0
     530:	bl	0 <strcmp>
     534:	cmp	r0, #0
     538:	bne	548 <handle_list_run_mode+0x140>
     53c:	movw	r0, #0
     540:	str	r0, [fp, #-16]
     544:	b	828 <handle_list_run_mode+0x420>
     548:	ldr	r0, [fp, #-8]
     54c:	ldr	r1, [fp, #-20]	; 0xffffffec
     550:	add	r0, r0, r1, lsl #2
     554:	ldr	r0, [r0]
     558:	movw	r1, #0
     55c:	movt	r1, #0
     560:	bl	0 <strcmp>
     564:	cmp	r0, #0
     568:	beq	590 <handle_list_run_mode+0x188>
     56c:	ldr	r0, [fp, #-8]
     570:	ldr	r1, [fp, #-20]	; 0xffffffec
     574:	add	r0, r0, r1, lsl #2
     578:	ldr	r0, [r0]
     57c:	movw	r1, #0
     580:	movt	r1, #0
     584:	bl	0 <strcmp>
     588:	cmp	r0, #0
     58c:	bne	630 <handle_list_run_mode+0x228>
     590:	ldr	r0, [fp, #-20]	; 0xffffffec
     594:	add	r0, r0, #1
     598:	ldr	r1, [fp, #-4]
     59c:	cmp	r0, r1
     5a0:	bge	630 <handle_list_run_mode+0x228>
     5a4:	ldr	r0, [fp, #-8]
     5a8:	ldr	r1, [fp, #-20]	; 0xffffffec
     5ac:	add	r1, r1, #1
     5b0:	add	r0, r0, r1, lsl #2
     5b4:	ldr	r0, [r0]
     5b8:	ldrb	r0, [r0]
     5bc:	cmp	r0, #45	; 0x2d
     5c0:	beq	630 <handle_list_run_mode+0x228>
     5c4:	ldr	r0, [fp, #-8]
     5c8:	ldr	r1, [fp, #-20]	; 0xffffffec
     5cc:	add	r1, r1, #1
     5d0:	add	r0, r0, r1, lsl #2
     5d4:	ldr	r0, [r0]
     5d8:	bl	0 <codadump_filter_create>
     5dc:	movw	r1, #0
     5e0:	movt	r1, #0
     5e4:	str	r0, [r1, #664]	; 0x298
     5e8:	ldr	r0, [r1, #664]	; 0x298
     5ec:	movw	r1, #0
     5f0:	cmp	r0, r1
     5f4:	bne	620 <handle_list_run_mode+0x218>
     5f8:	movw	r0, #0
     5fc:	movt	r0, #0
     600:	ldr	r0, [r0]
     604:	movw	r1, #0
     608:	movt	r1, #0
     60c:	bl	0 <fprintf>
     610:	str	r0, [fp, #-24]	; 0xffffffe8
     614:	bl	209c <print_help>
     618:	movw	r0, #1
     61c:	bl	0 <exit>
     620:	ldr	r0, [fp, #-20]	; 0xffffffec
     624:	add	r0, r0, #1
     628:	str	r0, [fp, #-20]	; 0xffffffec
     62c:	b	824 <handle_list_run_mode+0x41c>
     630:	ldr	r0, [fp, #-8]
     634:	ldr	r1, [fp, #-20]	; 0xffffffec
     638:	add	r0, r0, r1, lsl #2
     63c:	ldr	r0, [r0]
     640:	movw	r1, #0
     644:	movt	r1, #0
     648:	bl	0 <strcmp>
     64c:	cmp	r0, #0
     650:	beq	678 <handle_list_run_mode+0x270>
     654:	ldr	r0, [fp, #-8]
     658:	ldr	r1, [fp, #-20]	; 0xffffffec
     65c:	add	r0, r0, r1, lsl #2
     660:	ldr	r0, [r0]
     664:	movw	r1, #0
     668:	movt	r1, #0
     66c:	bl	0 <strcmp>
     670:	cmp	r0, #0
     674:	bne	68c <handle_list_run_mode+0x284>
     678:	movw	r0, #0
     67c:	movt	r0, #0
     680:	movw	r1, #1
     684:	str	r1, [r0]
     688:	b	820 <handle_list_run_mode+0x418>
     68c:	ldr	r0, [fp, #-8]
     690:	ldr	r1, [fp, #-20]	; 0xffffffec
     694:	add	r0, r0, r1, lsl #2
     698:	ldr	r0, [r0]
     69c:	movw	r1, #0
     6a0:	movt	r1, #0
     6a4:	bl	0 <strcmp>
     6a8:	cmp	r0, #0
     6ac:	beq	6d4 <handle_list_run_mode+0x2cc>
     6b0:	ldr	r0, [fp, #-8]
     6b4:	ldr	r1, [fp, #-20]	; 0xffffffec
     6b8:	add	r0, r0, r1, lsl #2
     6bc:	ldr	r0, [r0]
     6c0:	movw	r1, #0
     6c4:	movt	r1, #0
     6c8:	bl	0 <strcmp>
     6cc:	cmp	r0, #0
     6d0:	bne	6e8 <handle_list_run_mode+0x2e0>
     6d4:	movw	r0, #0
     6d8:	movt	r0, #0
     6dc:	movw	r1, #1
     6e0:	str	r1, [r0]
     6e4:	b	81c <handle_list_run_mode+0x414>
     6e8:	ldr	r0, [fp, #-8]
     6ec:	ldr	r1, [fp, #-20]	; 0xffffffec
     6f0:	add	r0, r0, r1, lsl #2
     6f4:	ldr	r0, [r0]
     6f8:	movw	r1, #0
     6fc:	movt	r1, #0
     700:	bl	0 <strcmp>
     704:	cmp	r0, #0
     708:	bne	720 <handle_list_run_mode+0x318>
     70c:	movw	r0, #0
     710:	movt	r0, #0
     714:	movw	r1, #1
     718:	str	r1, [r0]
     71c:	b	818 <handle_list_run_mode+0x410>
     720:	ldr	r0, [fp, #-8]
     724:	ldr	r1, [fp, #-20]	; 0xffffffec
     728:	add	r0, r0, r1, lsl #2
     72c:	ldr	r0, [r0]
     730:	movw	r1, #0
     734:	movt	r1, #0
     738:	bl	0 <strcmp>
     73c:	cmp	r0, #0
     740:	bne	764 <handle_list_run_mode+0x35c>
     744:	movw	r0, #0
     748:	movt	r0, #0
     74c:	movw	r1, #1
     750:	str	r1, [r0]
     754:	movw	r0, #0
     758:	movt	r0, #0
     75c:	str	r1, [r0]
     760:	b	814 <handle_list_run_mode+0x40c>
     764:	ldr	r0, [fp, #-8]
     768:	ldr	r1, [fp, #-20]	; 0xffffffec
     76c:	add	r0, r0, r1, lsl #2
     770:	ldr	r0, [r0]
     774:	movw	r1, #0
     778:	movt	r1, #0
     77c:	bl	0 <strcmp>
     780:	cmp	r0, #0
     784:	bne	794 <handle_list_run_mode+0x38c>
     788:	movw	r0, #0
     78c:	str	r0, [fp, #-12]
     790:	b	810 <handle_list_run_mode+0x408>
     794:	ldr	r0, [fp, #-20]	; 0xffffffec
     798:	ldr	r1, [fp, #-4]
     79c:	sub	r1, r1, #1
     7a0:	cmp	r0, r1
     7a4:	bne	7e4 <handle_list_run_mode+0x3dc>
     7a8:	ldr	r0, [fp, #-8]
     7ac:	ldr	r1, [fp, #-20]	; 0xffffffec
     7b0:	add	r0, r0, r1, lsl #2
     7b4:	ldr	r0, [r0]
     7b8:	ldrb	r0, [r0]
     7bc:	cmp	r0, #45	; 0x2d
     7c0:	beq	7e4 <handle_list_run_mode+0x3dc>
     7c4:	ldr	r0, [fp, #-8]
     7c8:	ldr	r1, [fp, #-20]	; 0xffffffec
     7cc:	add	r0, r0, r1, lsl #2
     7d0:	ldr	r0, [r0]
     7d4:	movw	r1, #0
     7d8:	movt	r1, #0
     7dc:	str	r0, [r1]
     7e0:	b	80c <handle_list_run_mode+0x404>
     7e4:	movw	r0, #0
     7e8:	movt	r0, #0
     7ec:	ldr	r0, [r0]
     7f0:	movw	r1, #0
     7f4:	movt	r1, #0
     7f8:	bl	0 <fprintf>
     7fc:	str	r0, [sp, #28]
     800:	bl	209c <print_help>
     804:	movw	r0, #1
     808:	bl	0 <exit>
     80c:	b	810 <handle_list_run_mode+0x408>
     810:	b	814 <handle_list_run_mode+0x40c>
     814:	b	818 <handle_list_run_mode+0x410>
     818:	b	81c <handle_list_run_mode+0x414>
     81c:	b	820 <handle_list_run_mode+0x418>
     820:	b	824 <handle_list_run_mode+0x41c>
     824:	b	828 <handle_list_run_mode+0x420>
     828:	b	82c <handle_list_run_mode+0x424>
     82c:	b	830 <handle_list_run_mode+0x428>
     830:	ldr	r0, [fp, #-20]	; 0xffffffec
     834:	add	r0, r0, #1
     838:	str	r0, [fp, #-20]	; 0xffffffec
     83c:	b	488 <handle_list_run_mode+0x80>
     840:	movw	r0, #0
     844:	movt	r0, #0
     848:	ldr	r0, [r0]
     84c:	movw	r1, #0
     850:	cmp	r0, r1
     854:	beq	870 <handle_list_run_mode+0x468>
     858:	movw	r0, #0
     85c:	movt	r0, #0
     860:	ldr	r0, [r0]
     864:	ldrb	r0, [r0]
     868:	cmp	r0, #0
     86c:	bne	898 <handle_list_run_mode+0x490>
     870:	movw	r0, #0
     874:	movt	r0, #0
     878:	ldr	r0, [r0]
     87c:	movw	r1, #0
     880:	movt	r1, #0
     884:	bl	0 <fprintf>
     888:	str	r0, [sp, #24]
     88c:	bl	209c <print_help>
     890:	movw	r0, #1
     894:	bl	0 <exit>
     898:	bl	0 <coda_init>
     89c:	cmp	r0, #0
     8a0:	beq	8ec <handle_list_run_mode+0x4e4>
     8a4:	movw	r0, #0
     8a8:	movt	r0, #0
     8ac:	ldr	r0, [r0]
     8b0:	str	r0, [sp, #20]
     8b4:	bl	0 <coda_get_errno>
     8b8:	ldr	r0, [r0]
     8bc:	bl	0 <coda_errno_to_string>
     8c0:	ldr	r1, [sp, #20]
     8c4:	str	r0, [sp, #16]
     8c8:	mov	r0, r1
     8cc:	movw	r1, #0
     8d0:	movt	r1, #0
     8d4:	ldr	r2, [sp, #16]
     8d8:	bl	0 <fprintf>
     8dc:	movw	r1, #1
     8e0:	str	r0, [sp, #12]
     8e4:	mov	r0, r1
     8e8:	bl	0 <exit>
     8ec:	ldr	r0, [fp, #-12]
     8f0:	cmp	r0, #0
     8f4:	movw	r0, #0
     8f8:	movne	r0, #1
     8fc:	mvn	r1, #0
     900:	eor	r0, r0, r1
     904:	and	r0, r0, #1
     908:	bl	0 <coda_set_option_bypass_special_types>
     90c:	movw	r1, #0
     910:	str	r0, [sp, #8]
     914:	mov	r0, r1
     918:	bl	0 <coda_set_option_perform_boundary_checks>
     91c:	ldr	r1, [fp, #-16]
     920:	str	r0, [sp, #4]
     924:	mov	r0, r1
     928:	bl	0 <coda_set_option_perform_conversions>
     92c:	movw	r1, #0
     930:	movt	r1, #0
     934:	str	r0, [sp]
     938:	blx	r1
     93c:	movw	r0, #0
     940:	movt	r0, #0
     944:	blx	r0
     948:	movw	r0, #0
     94c:	movt	r0, #0
     950:	blx	r0
     954:	movw	r0, #0
     958:	movt	r0, #0
     95c:	blx	r0
     960:	movw	r0, #0
     964:	movt	r0, #0
     968:	blx	r0
     96c:	bl	0 <coda_done>
     970:	mov	sp, fp
     974:	pop	{fp, pc}

00000978 <handle_ascii_run_mode>:
     978:	push	{fp, lr}
     97c:	mov	fp, sp
     980:	sub	sp, sp, #64	; 0x40
     984:	str	r0, [fp, #-4]
     988:	str	r1, [fp, #-8]
     98c:	movw	r0, #0
     990:	movt	r0, #0
     994:	movw	r1, #0
     998:	str	r1, [r0]
     99c:	str	r1, [r0, #664]	; 0x298
     9a0:	movw	r0, #0
     9a4:	movt	r0, #0
     9a8:	str	r1, [r0]
     9ac:	movw	r0, #0
     9b0:	movt	r0, #0
     9b4:	movw	r2, #0
     9b8:	movt	r2, #0
     9bc:	str	r2, [r0]
     9c0:	movw	r0, #0
     9c4:	movt	r0, #0
     9c8:	ldr	r0, [r0]
     9cc:	movw	r2, #0
     9d0:	movt	r2, #0
     9d4:	str	r0, [r2]
     9d8:	movw	r0, #0
     9dc:	movt	r0, #0
     9e0:	movw	r2, #1
     9e4:	str	r2, [r0]
     9e8:	movw	r0, #0
     9ec:	movt	r0, #0
     9f0:	str	r2, [r0]
     9f4:	str	r2, [fp, #-12]
     9f8:	str	r2, [fp, #-16]
     9fc:	movw	r0, #0
     a00:	movt	r0, #0
     a04:	str	r1, [r0]
     a08:	movw	r0, #0
     a0c:	movt	r0, #0
     a10:	str	r1, [r0]
     a14:	movw	r0, #0
     a18:	movt	r0, #0
     a1c:	str	r1, [r0]
     a20:	movw	r0, #0
     a24:	movt	r0, #0
     a28:	str	r1, [r0]
     a2c:	str	r1, [fp, #-20]	; 0xffffffec
     a30:	ldr	r0, [fp, #-20]	; 0xffffffec
     a34:	ldr	r1, [fp, #-4]
     a38:	cmp	r0, r1
     a3c:	bge	f24 <handle_ascii_run_mode+0x5ac>
     a40:	ldr	r0, [fp, #-8]
     a44:	ldr	r1, [fp, #-20]	; 0xffffffec
     a48:	add	r0, r0, r1, lsl #2
     a4c:	ldr	r0, [r0]
     a50:	movw	r1, #0
     a54:	movt	r1, #0
     a58:	bl	0 <strcmp>
     a5c:	cmp	r0, #0
     a60:	beq	a88 <handle_ascii_run_mode+0x110>
     a64:	ldr	r0, [fp, #-8]
     a68:	ldr	r1, [fp, #-20]	; 0xffffffec
     a6c:	add	r0, r0, r1, lsl #2
     a70:	ldr	r0, [r0]
     a74:	movw	r1, #0
     a78:	movt	r1, #0
     a7c:	bl	0 <strcmp>
     a80:	cmp	r0, #0
     a84:	bne	a94 <handle_ascii_run_mode+0x11c>
     a88:	movw	r0, #0
     a8c:	str	r0, [fp, #-16]
     a90:	b	f10 <handle_ascii_run_mode+0x598>
     a94:	ldr	r0, [fp, #-8]
     a98:	ldr	r1, [fp, #-20]	; 0xffffffec
     a9c:	add	r0, r0, r1, lsl #2
     aa0:	ldr	r0, [r0]
     aa4:	movw	r1, #0
     aa8:	movt	r1, #0
     aac:	bl	0 <strcmp>
     ab0:	cmp	r0, #0
     ab4:	beq	adc <handle_ascii_run_mode+0x164>
     ab8:	ldr	r0, [fp, #-8]
     abc:	ldr	r1, [fp, #-20]	; 0xffffffec
     ac0:	add	r0, r0, r1, lsl #2
     ac4:	ldr	r0, [r0]
     ac8:	movw	r1, #0
     acc:	movt	r1, #0
     ad0:	bl	0 <strcmp>
     ad4:	cmp	r0, #0
     ad8:	bne	b7c <handle_ascii_run_mode+0x204>
     adc:	ldr	r0, [fp, #-20]	; 0xffffffec
     ae0:	add	r0, r0, #1
     ae4:	ldr	r1, [fp, #-4]
     ae8:	cmp	r0, r1
     aec:	bge	b7c <handle_ascii_run_mode+0x204>
     af0:	ldr	r0, [fp, #-8]
     af4:	ldr	r1, [fp, #-20]	; 0xffffffec
     af8:	add	r1, r1, #1
     afc:	add	r0, r0, r1, lsl #2
     b00:	ldr	r0, [r0]
     b04:	ldrb	r0, [r0]
     b08:	cmp	r0, #45	; 0x2d
     b0c:	beq	b7c <handle_ascii_run_mode+0x204>
     b10:	ldr	r0, [fp, #-8]
     b14:	ldr	r1, [fp, #-20]	; 0xffffffec
     b18:	add	r1, r1, #1
     b1c:	add	r0, r0, r1, lsl #2
     b20:	ldr	r0, [r0]
     b24:	bl	0 <codadump_filter_create>
     b28:	movw	r1, #0
     b2c:	movt	r1, #0
     b30:	str	r0, [r1, #664]	; 0x298
     b34:	ldr	r0, [r1, #664]	; 0x298
     b38:	movw	r1, #0
     b3c:	cmp	r0, r1
     b40:	bne	b6c <handle_ascii_run_mode+0x1f4>
     b44:	movw	r0, #0
     b48:	movt	r0, #0
     b4c:	ldr	r0, [r0]
     b50:	movw	r1, #0
     b54:	movt	r1, #0
     b58:	bl	0 <fprintf>
     b5c:	str	r0, [fp, #-24]	; 0xffffffe8
     b60:	bl	209c <print_help>
     b64:	movw	r0, #1
     b68:	bl	0 <exit>
     b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
     b70:	add	r0, r0, #1
     b74:	str	r0, [fp, #-20]	; 0xffffffec
     b78:	b	f0c <handle_ascii_run_mode+0x594>
     b7c:	ldr	r0, [fp, #-8]
     b80:	ldr	r1, [fp, #-20]	; 0xffffffec
     b84:	add	r0, r0, r1, lsl #2
     b88:	ldr	r0, [r0]
     b8c:	movw	r1, #0
     b90:	movt	r1, #0
     b94:	bl	0 <strcmp>
     b98:	cmp	r0, #0
     b9c:	beq	bc4 <handle_ascii_run_mode+0x24c>
     ba0:	ldr	r0, [fp, #-8]
     ba4:	ldr	r1, [fp, #-20]	; 0xffffffec
     ba8:	add	r0, r0, r1, lsl #2
     bac:	ldr	r0, [r0]
     bb0:	movw	r1, #0
     bb4:	movt	r1, #0
     bb8:	bl	0 <strcmp>
     bbc:	cmp	r0, #0
     bc0:	bne	bd8 <handle_ascii_run_mode+0x260>
     bc4:	movw	r0, #0
     bc8:	movt	r0, #0
     bcc:	movw	r1, #1
     bd0:	str	r1, [r0]
     bd4:	b	f08 <handle_ascii_run_mode+0x590>
     bd8:	ldr	r0, [fp, #-8]
     bdc:	ldr	r1, [fp, #-20]	; 0xffffffec
     be0:	add	r0, r0, r1, lsl #2
     be4:	ldr	r0, [r0]
     be8:	movw	r1, #0
     bec:	movt	r1, #0
     bf0:	bl	0 <strcmp>
     bf4:	cmp	r0, #0
     bf8:	beq	c20 <handle_ascii_run_mode+0x2a8>
     bfc:	ldr	r0, [fp, #-8]
     c00:	ldr	r1, [fp, #-20]	; 0xffffffec
     c04:	add	r0, r0, r1, lsl #2
     c08:	ldr	r0, [r0]
     c0c:	movw	r1, #0
     c10:	movt	r1, #0
     c14:	bl	0 <strcmp>
     c18:	cmp	r0, #0
     c1c:	bne	c34 <handle_ascii_run_mode+0x2bc>
     c20:	movw	r0, #0
     c24:	movt	r0, #0
     c28:	movw	r1, #1
     c2c:	str	r1, [r0]
     c30:	b	f04 <handle_ascii_run_mode+0x58c>
     c34:	ldr	r0, [fp, #-8]
     c38:	ldr	r1, [fp, #-20]	; 0xffffffec
     c3c:	add	r0, r0, r1, lsl #2
     c40:	ldr	r0, [r0]
     c44:	movw	r1, #0
     c48:	movt	r1, #0
     c4c:	bl	0 <strcmp>
     c50:	cmp	r0, #0
     c54:	beq	c7c <handle_ascii_run_mode+0x304>
     c58:	ldr	r0, [fp, #-8]
     c5c:	ldr	r1, [fp, #-20]	; 0xffffffec
     c60:	add	r0, r0, r1, lsl #2
     c64:	ldr	r0, [r0]
     c68:	movw	r1, #0
     c6c:	movt	r1, #0
     c70:	bl	0 <strcmp>
     c74:	cmp	r0, #0
     c78:	bne	ce0 <handle_ascii_run_mode+0x368>
     c7c:	ldr	r0, [fp, #-20]	; 0xffffffec
     c80:	add	r0, r0, #1
     c84:	ldr	r1, [fp, #-4]
     c88:	cmp	r0, r1
     c8c:	bge	ce0 <handle_ascii_run_mode+0x368>
     c90:	ldr	r0, [fp, #-8]
     c94:	ldr	r1, [fp, #-20]	; 0xffffffec
     c98:	add	r1, r1, #1
     c9c:	add	r0, r0, r1, lsl #2
     ca0:	ldr	r0, [r0]
     ca4:	ldrb	r0, [r0]
     ca8:	cmp	r0, #45	; 0x2d
     cac:	beq	ce0 <handle_ascii_run_mode+0x368>
     cb0:	ldr	r0, [fp, #-8]
     cb4:	ldr	r1, [fp, #-20]	; 0xffffffec
     cb8:	add	r1, r1, #1
     cbc:	add	r0, r0, r1, lsl #2
     cc0:	ldr	r0, [r0]
     cc4:	movw	r1, #0
     cc8:	movt	r1, #0
     ccc:	str	r0, [r1]
     cd0:	ldr	r0, [fp, #-20]	; 0xffffffec
     cd4:	add	r0, r0, #1
     cd8:	str	r0, [fp, #-20]	; 0xffffffec
     cdc:	b	f00 <handle_ascii_run_mode+0x588>
     ce0:	ldr	r0, [fp, #-8]
     ce4:	ldr	r1, [fp, #-20]	; 0xffffffec
     ce8:	add	r0, r0, r1, lsl #2
     cec:	ldr	r0, [r0]
     cf0:	movw	r1, #0
     cf4:	movt	r1, #0
     cf8:	bl	0 <strcmp>
     cfc:	cmp	r0, #0
     d00:	beq	d28 <handle_ascii_run_mode+0x3b0>
     d04:	ldr	r0, [fp, #-8]
     d08:	ldr	r1, [fp, #-20]	; 0xffffffec
     d0c:	add	r0, r0, r1, lsl #2
     d10:	ldr	r0, [r0]
     d14:	movw	r1, #0
     d18:	movt	r1, #0
     d1c:	bl	0 <strcmp>
     d20:	cmp	r0, #0
     d24:	bne	d3c <handle_ascii_run_mode+0x3c4>
     d28:	movw	r0, #0
     d2c:	movt	r0, #0
     d30:	movw	r1, #1
     d34:	str	r1, [r0]
     d38:	b	efc <handle_ascii_run_mode+0x584>
     d3c:	ldr	r0, [fp, #-8]
     d40:	ldr	r1, [fp, #-20]	; 0xffffffec
     d44:	add	r0, r0, r1, lsl #2
     d48:	ldr	r0, [r0]
     d4c:	movw	r1, #0
     d50:	movt	r1, #0
     d54:	bl	0 <strcmp>
     d58:	cmp	r0, #0
     d5c:	beq	d84 <handle_ascii_run_mode+0x40c>
     d60:	ldr	r0, [fp, #-8]
     d64:	ldr	r1, [fp, #-20]	; 0xffffffec
     d68:	add	r0, r0, r1, lsl #2
     d6c:	ldr	r0, [r0]
     d70:	movw	r1, #0
     d74:	movt	r1, #0
     d78:	bl	0 <strcmp>
     d7c:	cmp	r0, #0
     d80:	bne	de8 <handle_ascii_run_mode+0x470>
     d84:	ldr	r0, [fp, #-20]	; 0xffffffec
     d88:	add	r0, r0, #1
     d8c:	ldr	r1, [fp, #-4]
     d90:	cmp	r0, r1
     d94:	bge	de8 <handle_ascii_run_mode+0x470>
     d98:	ldr	r0, [fp, #-8]
     d9c:	ldr	r1, [fp, #-20]	; 0xffffffec
     da0:	add	r1, r1, #1
     da4:	add	r0, r0, r1, lsl #2
     da8:	ldr	r0, [r0]
     dac:	ldrb	r0, [r0]
     db0:	cmp	r0, #45	; 0x2d
     db4:	beq	de8 <handle_ascii_run_mode+0x470>
     db8:	ldr	r0, [fp, #-8]
     dbc:	ldr	r1, [fp, #-20]	; 0xffffffec
     dc0:	add	r1, r1, #1
     dc4:	add	r0, r0, r1, lsl #2
     dc8:	ldr	r0, [r0]
     dcc:	movw	r1, #0
     dd0:	movt	r1, #0
     dd4:	str	r0, [r1]
     dd8:	ldr	r0, [fp, #-20]	; 0xffffffec
     ddc:	add	r0, r0, #1
     de0:	str	r0, [fp, #-20]	; 0xffffffec
     de4:	b	ef8 <handle_ascii_run_mode+0x580>
     de8:	ldr	r0, [fp, #-8]
     dec:	ldr	r1, [fp, #-20]	; 0xffffffec
     df0:	add	r0, r0, r1, lsl #2
     df4:	ldr	r0, [r0]
     df8:	movw	r1, #0
     dfc:	movt	r1, #0
     e00:	bl	0 <strcmp>
     e04:	cmp	r0, #0
     e08:	beq	e30 <handle_ascii_run_mode+0x4b8>
     e0c:	ldr	r0, [fp, #-8]
     e10:	ldr	r1, [fp, #-20]	; 0xffffffec
     e14:	add	r0, r0, r1, lsl #2
     e18:	ldr	r0, [r0]
     e1c:	movw	r1, #0
     e20:	movt	r1, #0
     e24:	bl	0 <strcmp>
     e28:	cmp	r0, #0
     e2c:	bne	e44 <handle_ascii_run_mode+0x4cc>
     e30:	movw	r0, #0
     e34:	movt	r0, #0
     e38:	movw	r1, #1
     e3c:	str	r1, [r0]
     e40:	b	ef4 <handle_ascii_run_mode+0x57c>
     e44:	ldr	r0, [fp, #-8]
     e48:	ldr	r1, [fp, #-20]	; 0xffffffec
     e4c:	add	r0, r0, r1, lsl #2
     e50:	ldr	r0, [r0]
     e54:	movw	r1, #0
     e58:	movt	r1, #0
     e5c:	bl	0 <strcmp>
     e60:	cmp	r0, #0
     e64:	bne	e74 <handle_ascii_run_mode+0x4fc>
     e68:	movw	r0, #0
     e6c:	str	r0, [fp, #-12]
     e70:	b	ef0 <handle_ascii_run_mode+0x578>
     e74:	ldr	r0, [fp, #-20]	; 0xffffffec
     e78:	ldr	r1, [fp, #-4]
     e7c:	sub	r1, r1, #1
     e80:	cmp	r0, r1
     e84:	bne	ec4 <handle_ascii_run_mode+0x54c>
     e88:	ldr	r0, [fp, #-8]
     e8c:	ldr	r1, [fp, #-20]	; 0xffffffec
     e90:	add	r0, r0, r1, lsl #2
     e94:	ldr	r0, [r0]
     e98:	ldrb	r0, [r0]
     e9c:	cmp	r0, #45	; 0x2d
     ea0:	beq	ec4 <handle_ascii_run_mode+0x54c>
     ea4:	ldr	r0, [fp, #-8]
     ea8:	ldr	r1, [fp, #-20]	; 0xffffffec
     eac:	add	r0, r0, r1, lsl #2
     eb0:	ldr	r0, [r0]
     eb4:	movw	r1, #0
     eb8:	movt	r1, #0
     ebc:	str	r0, [r1]
     ec0:	b	eec <handle_ascii_run_mode+0x574>
     ec4:	movw	r0, #0
     ec8:	movt	r0, #0
     ecc:	ldr	r0, [r0]
     ed0:	movw	r1, #0
     ed4:	movt	r1, #0
     ed8:	bl	0 <fprintf>
     edc:	str	r0, [fp, #-28]	; 0xffffffe4
     ee0:	bl	209c <print_help>
     ee4:	movw	r0, #1
     ee8:	bl	0 <exit>
     eec:	b	ef0 <handle_ascii_run_mode+0x578>
     ef0:	b	ef4 <handle_ascii_run_mode+0x57c>
     ef4:	b	ef8 <handle_ascii_run_mode+0x580>
     ef8:	b	efc <handle_ascii_run_mode+0x584>
     efc:	b	f00 <handle_ascii_run_mode+0x588>
     f00:	b	f04 <handle_ascii_run_mode+0x58c>
     f04:	b	f08 <handle_ascii_run_mode+0x590>
     f08:	b	f0c <handle_ascii_run_mode+0x594>
     f0c:	b	f10 <handle_ascii_run_mode+0x598>
     f10:	b	f14 <handle_ascii_run_mode+0x59c>
     f14:	ldr	r0, [fp, #-20]	; 0xffffffec
     f18:	add	r0, r0, #1
     f1c:	str	r0, [fp, #-20]	; 0xffffffec
     f20:	b	a30 <handle_ascii_run_mode+0xb8>
     f24:	movw	r0, #0
     f28:	movt	r0, #0
     f2c:	ldr	r0, [r0]
     f30:	movw	r1, #0
     f34:	cmp	r0, r1
     f38:	beq	f54 <handle_ascii_run_mode+0x5dc>
     f3c:	movw	r0, #0
     f40:	movt	r0, #0
     f44:	ldr	r0, [r0]
     f48:	ldrb	r0, [r0]
     f4c:	cmp	r0, #0
     f50:	bne	f7c <handle_ascii_run_mode+0x604>
     f54:	movw	r0, #0
     f58:	movt	r0, #0
     f5c:	ldr	r0, [r0]
     f60:	movw	r1, #0
     f64:	movt	r1, #0
     f68:	bl	0 <fprintf>
     f6c:	str	r0, [sp, #32]
     f70:	bl	209c <print_help>
     f74:	movw	r0, #1
     f78:	bl	0 <exit>
     f7c:	bl	0 <coda_init>
     f80:	cmp	r0, #0
     f84:	beq	fd0 <handle_ascii_run_mode+0x658>
     f88:	movw	r0, #0
     f8c:	movt	r0, #0
     f90:	ldr	r0, [r0]
     f94:	str	r0, [sp, #28]
     f98:	bl	0 <coda_get_errno>
     f9c:	ldr	r0, [r0]
     fa0:	bl	0 <coda_errno_to_string>
     fa4:	ldr	r1, [sp, #28]
     fa8:	str	r0, [sp, #24]
     fac:	mov	r0, r1
     fb0:	movw	r1, #0
     fb4:	movt	r1, #0
     fb8:	ldr	r2, [sp, #24]
     fbc:	bl	0 <fprintf>
     fc0:	movw	r1, #1
     fc4:	str	r0, [sp, #20]
     fc8:	mov	r0, r1
     fcc:	bl	0 <exit>
     fd0:	ldr	r0, [fp, #-12]
     fd4:	cmp	r0, #0
     fd8:	movw	r0, #0
     fdc:	movne	r0, #1
     fe0:	mvn	r1, #0
     fe4:	eor	r0, r0, r1
     fe8:	and	r0, r0, #1
     fec:	bl	0 <coda_set_option_bypass_special_types>
     ff0:	movw	r1, #0
     ff4:	str	r0, [sp, #16]
     ff8:	mov	r0, r1
     ffc:	bl	0 <coda_set_option_perform_boundary_checks>
    1000:	ldr	r1, [fp, #-16]
    1004:	str	r0, [sp, #12]
    1008:	mov	r0, r1
    100c:	bl	0 <coda_set_option_perform_conversions>
    1010:	movw	r1, #0
    1014:	movt	r1, #0
    1018:	str	r0, [sp, #8]
    101c:	blx	r1
    1020:	movw	r0, #0
    1024:	movt	r0, #0
    1028:	blx	r0
    102c:	movw	r0, #0
    1030:	movt	r0, #0
    1034:	ldr	r0, [r0]
    1038:	movw	r1, #0
    103c:	cmp	r0, r1
    1040:	beq	10b0 <handle_ascii_run_mode+0x738>
    1044:	movw	r0, #0
    1048:	movt	r0, #0
    104c:	ldr	r0, [r0]
    1050:	movw	r1, #0
    1054:	movt	r1, #0
    1058:	bl	0 <fopen>
    105c:	movw	r1, #0
    1060:	movt	r1, #0
    1064:	str	r0, [r1]
    1068:	ldr	r0, [r1]
    106c:	movw	r1, #0
    1070:	cmp	r0, r1
    1074:	bne	10ac <handle_ascii_run_mode+0x734>
    1078:	movw	r0, #0
    107c:	movt	r0, #0
    1080:	ldr	r0, [r0]
    1084:	movw	r1, #0
    1088:	movt	r1, #0
    108c:	ldr	r2, [r1]
    1090:	movw	r1, #0
    1094:	movt	r1, #0
    1098:	bl	0 <fprintf>
    109c:	movw	r1, #1
    10a0:	str	r0, [sp, #4]
    10a4:	mov	r0, r1
    10a8:	bl	0 <exit>
    10ac:	b	10b0 <handle_ascii_run_mode+0x738>
    10b0:	movw	r0, #0
    10b4:	movt	r0, #0
    10b8:	blx	r0
    10bc:	movw	r0, #0
    10c0:	movt	r0, #0
    10c4:	ldr	r0, [r0]
    10c8:	movw	r1, #0
    10cc:	cmp	r0, r1
    10d0:	beq	10e4 <handle_ascii_run_mode+0x76c>
    10d4:	movw	r0, #0
    10d8:	movt	r0, #0
    10dc:	ldr	r0, [r0]
    10e0:	bl	0 <fclose>
    10e4:	movw	r0, #0
    10e8:	movt	r0, #0
    10ec:	blx	r0
    10f0:	movw	r0, #0
    10f4:	movt	r0, #0
    10f8:	blx	r0
    10fc:	bl	0 <coda_done>
    1100:	mov	sp, fp
    1104:	pop	{fp, pc}

00001108 <handle_json_run_mode>:
    1108:	push	{fp, lr}
    110c:	mov	fp, sp
    1110:	sub	sp, sp, #56	; 0x38
    1114:	str	r0, [fp, #-4]
    1118:	str	r1, [fp, #-8]
    111c:	movw	r0, #0
    1120:	movt	r0, #0
    1124:	movw	r1, #0
    1128:	str	r1, [r0]
    112c:	movw	r0, #0
    1130:	movt	r0, #0
    1134:	str	r1, [r0]
    1138:	movw	r0, #0
    113c:	movt	r0, #0
    1140:	str	r1, [r0]
    1144:	movw	r0, #0
    1148:	movt	r0, #0
    114c:	ldr	r0, [r0]
    1150:	movw	r2, #0
    1154:	movt	r2, #0
    1158:	str	r0, [r2]
    115c:	movw	r0, #1
    1160:	str	r0, [fp, #-12]
    1164:	str	r0, [fp, #-16]
    1168:	str	r1, [fp, #-20]	; 0xffffffec
    116c:	str	r1, [fp, #-24]	; 0xffffffe8
    1170:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1174:	ldr	r1, [fp, #-4]
    1178:	cmp	r0, r1
    117c:	bge	1450 <handle_json_run_mode+0x348>
    1180:	ldr	r0, [fp, #-8]
    1184:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1188:	add	r0, r0, r1, lsl #2
    118c:	ldr	r0, [r0]
    1190:	movw	r1, #0
    1194:	movt	r1, #0
    1198:	bl	0 <strcmp>
    119c:	cmp	r0, #0
    11a0:	beq	11c8 <handle_json_run_mode+0xc0>
    11a4:	ldr	r0, [fp, #-8]
    11a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    11ac:	add	r0, r0, r1, lsl #2
    11b0:	ldr	r0, [r0]
    11b4:	movw	r1, #0
    11b8:	movt	r1, #0
    11bc:	bl	0 <strcmp>
    11c0:	cmp	r0, #0
    11c4:	bne	11d4 <handle_json_run_mode+0xcc>
    11c8:	movw	r0, #1
    11cc:	str	r0, [fp, #-20]	; 0xffffffec
    11d0:	b	143c <handle_json_run_mode+0x334>
    11d4:	ldr	r0, [fp, #-8]
    11d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    11dc:	add	r0, r0, r1, lsl #2
    11e0:	ldr	r0, [r0]
    11e4:	movw	r1, #0
    11e8:	movt	r1, #0
    11ec:	bl	0 <strcmp>
    11f0:	cmp	r0, #0
    11f4:	beq	121c <handle_json_run_mode+0x114>
    11f8:	ldr	r0, [fp, #-8]
    11fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1200:	add	r0, r0, r1, lsl #2
    1204:	ldr	r0, [r0]
    1208:	movw	r1, #0
    120c:	movt	r1, #0
    1210:	bl	0 <strcmp>
    1214:	cmp	r0, #0
    1218:	bne	1228 <handle_json_run_mode+0x120>
    121c:	movw	r0, #0
    1220:	str	r0, [fp, #-16]
    1224:	b	1438 <handle_json_run_mode+0x330>
    1228:	ldr	r0, [fp, #-8]
    122c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1230:	add	r0, r0, r1, lsl #2
    1234:	ldr	r0, [r0]
    1238:	movw	r1, #0
    123c:	movt	r1, #0
    1240:	bl	0 <strcmp>
    1244:	cmp	r0, #0
    1248:	beq	1270 <handle_json_run_mode+0x168>
    124c:	ldr	r0, [fp, #-8]
    1250:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1254:	add	r0, r0, r1, lsl #2
    1258:	ldr	r0, [r0]
    125c:	movw	r1, #0
    1260:	movt	r1, #0
    1264:	bl	0 <strcmp>
    1268:	cmp	r0, #0
    126c:	bne	12d4 <handle_json_run_mode+0x1cc>
    1270:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1274:	add	r0, r0, #1
    1278:	ldr	r1, [fp, #-4]
    127c:	cmp	r0, r1
    1280:	bge	12d4 <handle_json_run_mode+0x1cc>
    1284:	ldr	r0, [fp, #-8]
    1288:	ldr	r1, [fp, #-24]	; 0xffffffe8
    128c:	add	r1, r1, #1
    1290:	add	r0, r0, r1, lsl #2
    1294:	ldr	r0, [r0]
    1298:	ldrb	r0, [r0]
    129c:	cmp	r0, #45	; 0x2d
    12a0:	beq	12d4 <handle_json_run_mode+0x1cc>
    12a4:	ldr	r0, [fp, #-8]
    12a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    12ac:	add	r1, r1, #1
    12b0:	add	r0, r0, r1, lsl #2
    12b4:	ldr	r0, [r0]
    12b8:	movw	r1, #0
    12bc:	movt	r1, #0
    12c0:	str	r0, [r1]
    12c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    12c8:	add	r0, r0, #1
    12cc:	str	r0, [fp, #-24]	; 0xffffffe8
    12d0:	b	1434 <handle_json_run_mode+0x32c>
    12d4:	ldr	r0, [fp, #-8]
    12d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    12dc:	add	r0, r0, r1, lsl #2
    12e0:	ldr	r0, [r0]
    12e4:	movw	r1, #0
    12e8:	movt	r1, #0
    12ec:	bl	0 <strcmp>
    12f0:	cmp	r0, #0
    12f4:	beq	131c <handle_json_run_mode+0x214>
    12f8:	ldr	r0, [fp, #-8]
    12fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1300:	add	r0, r0, r1, lsl #2
    1304:	ldr	r0, [r0]
    1308:	movw	r1, #0
    130c:	movt	r1, #0
    1310:	bl	0 <strcmp>
    1314:	cmp	r0, #0
    1318:	bne	1380 <handle_json_run_mode+0x278>
    131c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1320:	add	r0, r0, #1
    1324:	ldr	r1, [fp, #-4]
    1328:	cmp	r0, r1
    132c:	bge	1380 <handle_json_run_mode+0x278>
    1330:	ldr	r0, [fp, #-8]
    1334:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1338:	add	r1, r1, #1
    133c:	add	r0, r0, r1, lsl #2
    1340:	ldr	r0, [r0]
    1344:	ldrb	r0, [r0]
    1348:	cmp	r0, #45	; 0x2d
    134c:	beq	1380 <handle_json_run_mode+0x278>
    1350:	ldr	r0, [fp, #-8]
    1354:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1358:	add	r1, r1, #1
    135c:	add	r0, r0, r1, lsl #2
    1360:	ldr	r0, [r0]
    1364:	movw	r1, #0
    1368:	movt	r1, #0
    136c:	str	r0, [r1]
    1370:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1374:	add	r0, r0, #1
    1378:	str	r0, [fp, #-24]	; 0xffffffe8
    137c:	b	1430 <handle_json_run_mode+0x328>
    1380:	ldr	r0, [fp, #-8]
    1384:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1388:	add	r0, r0, r1, lsl #2
    138c:	ldr	r0, [r0]
    1390:	movw	r1, #0
    1394:	movt	r1, #0
    1398:	bl	0 <strcmp>
    139c:	cmp	r0, #0
    13a0:	bne	13b0 <handle_json_run_mode+0x2a8>
    13a4:	movw	r0, #0
    13a8:	str	r0, [fp, #-12]
    13ac:	b	142c <handle_json_run_mode+0x324>
    13b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13b4:	ldr	r1, [fp, #-4]
    13b8:	sub	r1, r1, #1
    13bc:	cmp	r0, r1
    13c0:	bne	1400 <handle_json_run_mode+0x2f8>
    13c4:	ldr	r0, [fp, #-8]
    13c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    13cc:	add	r0, r0, r1, lsl #2
    13d0:	ldr	r0, [r0]
    13d4:	ldrb	r0, [r0]
    13d8:	cmp	r0, #45	; 0x2d
    13dc:	beq	1400 <handle_json_run_mode+0x2f8>
    13e0:	ldr	r0, [fp, #-8]
    13e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    13e8:	add	r0, r0, r1, lsl #2
    13ec:	ldr	r0, [r0]
    13f0:	movw	r1, #0
    13f4:	movt	r1, #0
    13f8:	str	r0, [r1]
    13fc:	b	1428 <handle_json_run_mode+0x320>
    1400:	movw	r0, #0
    1404:	movt	r0, #0
    1408:	ldr	r0, [r0]
    140c:	movw	r1, #0
    1410:	movt	r1, #0
    1414:	bl	0 <fprintf>
    1418:	str	r0, [sp, #28]
    141c:	bl	209c <print_help>
    1420:	movw	r0, #1
    1424:	bl	0 <exit>
    1428:	b	142c <handle_json_run_mode+0x324>
    142c:	b	1430 <handle_json_run_mode+0x328>
    1430:	b	1434 <handle_json_run_mode+0x32c>
    1434:	b	1438 <handle_json_run_mode+0x330>
    1438:	b	143c <handle_json_run_mode+0x334>
    143c:	b	1440 <handle_json_run_mode+0x338>
    1440:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1444:	add	r0, r0, #1
    1448:	str	r0, [fp, #-24]	; 0xffffffe8
    144c:	b	1170 <handle_json_run_mode+0x68>
    1450:	movw	r0, #0
    1454:	movt	r0, #0
    1458:	ldr	r0, [r0]
    145c:	movw	r1, #0
    1460:	cmp	r0, r1
    1464:	beq	1480 <handle_json_run_mode+0x378>
    1468:	movw	r0, #0
    146c:	movt	r0, #0
    1470:	ldr	r0, [r0]
    1474:	ldrb	r0, [r0]
    1478:	cmp	r0, #0
    147c:	bne	14a8 <handle_json_run_mode+0x3a0>
    1480:	movw	r0, #0
    1484:	movt	r0, #0
    1488:	ldr	r0, [r0]
    148c:	movw	r1, #0
    1490:	movt	r1, #0
    1494:	bl	0 <fprintf>
    1498:	str	r0, [sp, #24]
    149c:	bl	209c <print_help>
    14a0:	movw	r0, #1
    14a4:	bl	0 <exit>
    14a8:	bl	0 <coda_init>
    14ac:	cmp	r0, #0
    14b0:	beq	14fc <handle_json_run_mode+0x3f4>
    14b4:	movw	r0, #0
    14b8:	movt	r0, #0
    14bc:	ldr	r0, [r0]
    14c0:	str	r0, [sp, #20]
    14c4:	bl	0 <coda_get_errno>
    14c8:	ldr	r0, [r0]
    14cc:	bl	0 <coda_errno_to_string>
    14d0:	ldr	r1, [sp, #20]
    14d4:	str	r0, [sp, #16]
    14d8:	mov	r0, r1
    14dc:	movw	r1, #0
    14e0:	movt	r1, #0
    14e4:	ldr	r2, [sp, #16]
    14e8:	bl	0 <fprintf>
    14ec:	movw	r1, #1
    14f0:	str	r0, [sp, #12]
    14f4:	mov	r0, r1
    14f8:	bl	0 <exit>
    14fc:	ldr	r0, [fp, #-12]
    1500:	cmp	r0, #0
    1504:	movw	r0, #0
    1508:	movne	r0, #1
    150c:	mvn	r1, #0
    1510:	eor	r0, r0, r1
    1514:	and	r0, r0, #1
    1518:	bl	0 <coda_set_option_bypass_special_types>
    151c:	ldr	r1, [fp, #-16]
    1520:	str	r0, [sp, #8]
    1524:	mov	r0, r1
    1528:	bl	0 <coda_set_option_perform_conversions>
    152c:	movw	r1, #0
    1530:	movt	r1, #0
    1534:	ldr	r1, [r1]
    1538:	movw	r2, #0
    153c:	cmp	r1, r2
    1540:	beq	15b0 <handle_json_run_mode+0x4a8>
    1544:	movw	r0, #0
    1548:	movt	r0, #0
    154c:	ldr	r0, [r0]
    1550:	movw	r1, #0
    1554:	movt	r1, #0
    1558:	bl	0 <fopen>
    155c:	movw	r1, #0
    1560:	movt	r1, #0
    1564:	str	r0, [r1]
    1568:	ldr	r0, [r1]
    156c:	movw	r1, #0
    1570:	cmp	r0, r1
    1574:	bne	15ac <handle_json_run_mode+0x4a4>
    1578:	movw	r0, #0
    157c:	movt	r0, #0
    1580:	ldr	r0, [r0]
    1584:	movw	r1, #0
    1588:	movt	r1, #0
    158c:	ldr	r2, [r1]
    1590:	movw	r1, #0
    1594:	movt	r1, #0
    1598:	bl	0 <fprintf>
    159c:	movw	r1, #1
    15a0:	str	r0, [sp, #4]
    15a4:	mov	r0, r1
    15a8:	bl	0 <exit>
    15ac:	b	15b0 <handle_json_run_mode+0x4a8>
    15b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    15b4:	bl	0 <print_json_data>
    15b8:	movw	r0, #0
    15bc:	movt	r0, #0
    15c0:	ldr	r0, [r0]
    15c4:	movw	r1, #0
    15c8:	cmp	r0, r1
    15cc:	beq	15e0 <handle_json_run_mode+0x4d8>
    15d0:	movw	r0, #0
    15d4:	movt	r0, #0
    15d8:	ldr	r0, [r0]
    15dc:	bl	0 <fclose>
    15e0:	bl	0 <coda_done>
    15e4:	mov	sp, fp
    15e8:	pop	{fp, pc}

000015ec <handle_yaml_run_mode>:
    15ec:	push	{fp, lr}
    15f0:	mov	fp, sp
    15f4:	sub	sp, sp, #56	; 0x38
    15f8:	str	r0, [fp, #-4]
    15fc:	str	r1, [fp, #-8]
    1600:	movw	r0, #0
    1604:	movt	r0, #0
    1608:	movw	r1, #0
    160c:	str	r1, [r0]
    1610:	movw	r0, #0
    1614:	movt	r0, #0
    1618:	str	r1, [r0]
    161c:	movw	r0, #0
    1620:	movt	r0, #0
    1624:	str	r1, [r0]
    1628:	movw	r0, #0
    162c:	movt	r0, #0
    1630:	ldr	r0, [r0]
    1634:	movw	r2, #0
    1638:	movt	r2, #0
    163c:	str	r0, [r2]
    1640:	movw	r0, #1
    1644:	str	r0, [fp, #-12]
    1648:	str	r0, [fp, #-16]
    164c:	str	r1, [fp, #-20]	; 0xffffffec
    1650:	str	r1, [fp, #-24]	; 0xffffffe8
    1654:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1658:	ldr	r1, [fp, #-4]
    165c:	cmp	r0, r1
    1660:	bge	1934 <handle_yaml_run_mode+0x348>
    1664:	ldr	r0, [fp, #-8]
    1668:	ldr	r1, [fp, #-24]	; 0xffffffe8
    166c:	add	r0, r0, r1, lsl #2
    1670:	ldr	r0, [r0]
    1674:	movw	r1, #0
    1678:	movt	r1, #0
    167c:	bl	0 <strcmp>
    1680:	cmp	r0, #0
    1684:	beq	16ac <handle_yaml_run_mode+0xc0>
    1688:	ldr	r0, [fp, #-8]
    168c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1690:	add	r0, r0, r1, lsl #2
    1694:	ldr	r0, [r0]
    1698:	movw	r1, #0
    169c:	movt	r1, #0
    16a0:	bl	0 <strcmp>
    16a4:	cmp	r0, #0
    16a8:	bne	16b8 <handle_yaml_run_mode+0xcc>
    16ac:	movw	r0, #1
    16b0:	str	r0, [fp, #-20]	; 0xffffffec
    16b4:	b	1920 <handle_yaml_run_mode+0x334>
    16b8:	ldr	r0, [fp, #-8]
    16bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    16c0:	add	r0, r0, r1, lsl #2
    16c4:	ldr	r0, [r0]
    16c8:	movw	r1, #0
    16cc:	movt	r1, #0
    16d0:	bl	0 <strcmp>
    16d4:	cmp	r0, #0
    16d8:	beq	1700 <handle_yaml_run_mode+0x114>
    16dc:	ldr	r0, [fp, #-8]
    16e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    16e4:	add	r0, r0, r1, lsl #2
    16e8:	ldr	r0, [r0]
    16ec:	movw	r1, #0
    16f0:	movt	r1, #0
    16f4:	bl	0 <strcmp>
    16f8:	cmp	r0, #0
    16fc:	bne	170c <handle_yaml_run_mode+0x120>
    1700:	movw	r0, #0
    1704:	str	r0, [fp, #-16]
    1708:	b	191c <handle_yaml_run_mode+0x330>
    170c:	ldr	r0, [fp, #-8]
    1710:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1714:	add	r0, r0, r1, lsl #2
    1718:	ldr	r0, [r0]
    171c:	movw	r1, #0
    1720:	movt	r1, #0
    1724:	bl	0 <strcmp>
    1728:	cmp	r0, #0
    172c:	beq	1754 <handle_yaml_run_mode+0x168>
    1730:	ldr	r0, [fp, #-8]
    1734:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1738:	add	r0, r0, r1, lsl #2
    173c:	ldr	r0, [r0]
    1740:	movw	r1, #0
    1744:	movt	r1, #0
    1748:	bl	0 <strcmp>
    174c:	cmp	r0, #0
    1750:	bne	17b8 <handle_yaml_run_mode+0x1cc>
    1754:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1758:	add	r0, r0, #1
    175c:	ldr	r1, [fp, #-4]
    1760:	cmp	r0, r1
    1764:	bge	17b8 <handle_yaml_run_mode+0x1cc>
    1768:	ldr	r0, [fp, #-8]
    176c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1770:	add	r1, r1, #1
    1774:	add	r0, r0, r1, lsl #2
    1778:	ldr	r0, [r0]
    177c:	ldrb	r0, [r0]
    1780:	cmp	r0, #45	; 0x2d
    1784:	beq	17b8 <handle_yaml_run_mode+0x1cc>
    1788:	ldr	r0, [fp, #-8]
    178c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1790:	add	r1, r1, #1
    1794:	add	r0, r0, r1, lsl #2
    1798:	ldr	r0, [r0]
    179c:	movw	r1, #0
    17a0:	movt	r1, #0
    17a4:	str	r0, [r1]
    17a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    17ac:	add	r0, r0, #1
    17b0:	str	r0, [fp, #-24]	; 0xffffffe8
    17b4:	b	1918 <handle_yaml_run_mode+0x32c>
    17b8:	ldr	r0, [fp, #-8]
    17bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    17c0:	add	r0, r0, r1, lsl #2
    17c4:	ldr	r0, [r0]
    17c8:	movw	r1, #0
    17cc:	movt	r1, #0
    17d0:	bl	0 <strcmp>
    17d4:	cmp	r0, #0
    17d8:	beq	1800 <handle_yaml_run_mode+0x214>
    17dc:	ldr	r0, [fp, #-8]
    17e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    17e4:	add	r0, r0, r1, lsl #2
    17e8:	ldr	r0, [r0]
    17ec:	movw	r1, #0
    17f0:	movt	r1, #0
    17f4:	bl	0 <strcmp>
    17f8:	cmp	r0, #0
    17fc:	bne	1864 <handle_yaml_run_mode+0x278>
    1800:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1804:	add	r0, r0, #1
    1808:	ldr	r1, [fp, #-4]
    180c:	cmp	r0, r1
    1810:	bge	1864 <handle_yaml_run_mode+0x278>
    1814:	ldr	r0, [fp, #-8]
    1818:	ldr	r1, [fp, #-24]	; 0xffffffe8
    181c:	add	r1, r1, #1
    1820:	add	r0, r0, r1, lsl #2
    1824:	ldr	r0, [r0]
    1828:	ldrb	r0, [r0]
    182c:	cmp	r0, #45	; 0x2d
    1830:	beq	1864 <handle_yaml_run_mode+0x278>
    1834:	ldr	r0, [fp, #-8]
    1838:	ldr	r1, [fp, #-24]	; 0xffffffe8
    183c:	add	r1, r1, #1
    1840:	add	r0, r0, r1, lsl #2
    1844:	ldr	r0, [r0]
    1848:	movw	r1, #0
    184c:	movt	r1, #0
    1850:	str	r0, [r1]
    1854:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1858:	add	r0, r0, #1
    185c:	str	r0, [fp, #-24]	; 0xffffffe8
    1860:	b	1914 <handle_yaml_run_mode+0x328>
    1864:	ldr	r0, [fp, #-8]
    1868:	ldr	r1, [fp, #-24]	; 0xffffffe8
    186c:	add	r0, r0, r1, lsl #2
    1870:	ldr	r0, [r0]
    1874:	movw	r1, #0
    1878:	movt	r1, #0
    187c:	bl	0 <strcmp>
    1880:	cmp	r0, #0
    1884:	bne	1894 <handle_yaml_run_mode+0x2a8>
    1888:	movw	r0, #0
    188c:	str	r0, [fp, #-12]
    1890:	b	1910 <handle_yaml_run_mode+0x324>
    1894:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1898:	ldr	r1, [fp, #-4]
    189c:	sub	r1, r1, #1
    18a0:	cmp	r0, r1
    18a4:	bne	18e4 <handle_yaml_run_mode+0x2f8>
    18a8:	ldr	r0, [fp, #-8]
    18ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    18b0:	add	r0, r0, r1, lsl #2
    18b4:	ldr	r0, [r0]
    18b8:	ldrb	r0, [r0]
    18bc:	cmp	r0, #45	; 0x2d
    18c0:	beq	18e4 <handle_yaml_run_mode+0x2f8>
    18c4:	ldr	r0, [fp, #-8]
    18c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    18cc:	add	r0, r0, r1, lsl #2
    18d0:	ldr	r0, [r0]
    18d4:	movw	r1, #0
    18d8:	movt	r1, #0
    18dc:	str	r0, [r1]
    18e0:	b	190c <handle_yaml_run_mode+0x320>
    18e4:	movw	r0, #0
    18e8:	movt	r0, #0
    18ec:	ldr	r0, [r0]
    18f0:	movw	r1, #0
    18f4:	movt	r1, #0
    18f8:	bl	0 <fprintf>
    18fc:	str	r0, [sp, #28]
    1900:	bl	209c <print_help>
    1904:	movw	r0, #1
    1908:	bl	0 <exit>
    190c:	b	1910 <handle_yaml_run_mode+0x324>
    1910:	b	1914 <handle_yaml_run_mode+0x328>
    1914:	b	1918 <handle_yaml_run_mode+0x32c>
    1918:	b	191c <handle_yaml_run_mode+0x330>
    191c:	b	1920 <handle_yaml_run_mode+0x334>
    1920:	b	1924 <handle_yaml_run_mode+0x338>
    1924:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1928:	add	r0, r0, #1
    192c:	str	r0, [fp, #-24]	; 0xffffffe8
    1930:	b	1654 <handle_yaml_run_mode+0x68>
    1934:	movw	r0, #0
    1938:	movt	r0, #0
    193c:	ldr	r0, [r0]
    1940:	movw	r1, #0
    1944:	cmp	r0, r1
    1948:	beq	1964 <handle_yaml_run_mode+0x378>
    194c:	movw	r0, #0
    1950:	movt	r0, #0
    1954:	ldr	r0, [r0]
    1958:	ldrb	r0, [r0]
    195c:	cmp	r0, #0
    1960:	bne	198c <handle_yaml_run_mode+0x3a0>
    1964:	movw	r0, #0
    1968:	movt	r0, #0
    196c:	ldr	r0, [r0]
    1970:	movw	r1, #0
    1974:	movt	r1, #0
    1978:	bl	0 <fprintf>
    197c:	str	r0, [sp, #24]
    1980:	bl	209c <print_help>
    1984:	movw	r0, #1
    1988:	bl	0 <exit>
    198c:	bl	0 <coda_init>
    1990:	cmp	r0, #0
    1994:	beq	19e0 <handle_yaml_run_mode+0x3f4>
    1998:	movw	r0, #0
    199c:	movt	r0, #0
    19a0:	ldr	r0, [r0]
    19a4:	str	r0, [sp, #20]
    19a8:	bl	0 <coda_get_errno>
    19ac:	ldr	r0, [r0]
    19b0:	bl	0 <coda_errno_to_string>
    19b4:	ldr	r1, [sp, #20]
    19b8:	str	r0, [sp, #16]
    19bc:	mov	r0, r1
    19c0:	movw	r1, #0
    19c4:	movt	r1, #0
    19c8:	ldr	r2, [sp, #16]
    19cc:	bl	0 <fprintf>
    19d0:	movw	r1, #1
    19d4:	str	r0, [sp, #12]
    19d8:	mov	r0, r1
    19dc:	bl	0 <exit>
    19e0:	ldr	r0, [fp, #-12]
    19e4:	cmp	r0, #0
    19e8:	movw	r0, #0
    19ec:	movne	r0, #1
    19f0:	mvn	r1, #0
    19f4:	eor	r0, r0, r1
    19f8:	and	r0, r0, #1
    19fc:	bl	0 <coda_set_option_bypass_special_types>
    1a00:	ldr	r1, [fp, #-16]
    1a04:	str	r0, [sp, #8]
    1a08:	mov	r0, r1
    1a0c:	bl	0 <coda_set_option_perform_conversions>
    1a10:	movw	r1, #0
    1a14:	movt	r1, #0
    1a18:	ldr	r1, [r1]
    1a1c:	movw	r2, #0
    1a20:	cmp	r1, r2
    1a24:	beq	1a94 <handle_yaml_run_mode+0x4a8>
    1a28:	movw	r0, #0
    1a2c:	movt	r0, #0
    1a30:	ldr	r0, [r0]
    1a34:	movw	r1, #0
    1a38:	movt	r1, #0
    1a3c:	bl	0 <fopen>
    1a40:	movw	r1, #0
    1a44:	movt	r1, #0
    1a48:	str	r0, [r1]
    1a4c:	ldr	r0, [r1]
    1a50:	movw	r1, #0
    1a54:	cmp	r0, r1
    1a58:	bne	1a90 <handle_yaml_run_mode+0x4a4>
    1a5c:	movw	r0, #0
    1a60:	movt	r0, #0
    1a64:	ldr	r0, [r0]
    1a68:	movw	r1, #0
    1a6c:	movt	r1, #0
    1a70:	ldr	r2, [r1]
    1a74:	movw	r1, #0
    1a78:	movt	r1, #0
    1a7c:	bl	0 <fprintf>
    1a80:	movw	r1, #1
    1a84:	str	r0, [sp, #4]
    1a88:	mov	r0, r1
    1a8c:	bl	0 <exit>
    1a90:	b	1a94 <handle_yaml_run_mode+0x4a8>
    1a94:	ldr	r0, [fp, #-20]	; 0xffffffec
    1a98:	bl	0 <print_yaml_data>
    1a9c:	movw	r0, #0
    1aa0:	movt	r0, #0
    1aa4:	ldr	r0, [r0]
    1aa8:	movw	r1, #0
    1aac:	cmp	r0, r1
    1ab0:	beq	1ac4 <handle_yaml_run_mode+0x4d8>
    1ab4:	movw	r0, #0
    1ab8:	movt	r0, #0
    1abc:	ldr	r0, [r0]
    1ac0:	bl	0 <fclose>
    1ac4:	bl	0 <coda_done>
    1ac8:	mov	sp, fp
    1acc:	pop	{fp, pc}

00001ad0 <handle_debug_run_mode>:
    1ad0:	push	{fp, lr}
    1ad4:	mov	fp, sp
    1ad8:	sub	sp, sp, #56	; 0x38
    1adc:	str	r0, [fp, #-4]
    1ae0:	str	r1, [fp, #-8]
    1ae4:	movw	r0, #0
    1ae8:	str	r0, [fp, #-12]
    1aec:	str	r0, [fp, #-16]
    1af0:	str	r0, [fp, #-20]	; 0xffffffec
    1af4:	movw	r1, #0
    1af8:	movt	r1, #0
    1afc:	str	r0, [r1]
    1b00:	movw	r1, #0
    1b04:	movt	r1, #0
    1b08:	str	r0, [r1]
    1b0c:	movw	r1, #0
    1b10:	movt	r1, #0
    1b14:	str	r0, [r1]
    1b18:	movw	r1, #0
    1b1c:	movt	r1, #0
    1b20:	ldr	r1, [r1]
    1b24:	movw	r2, #0
    1b28:	movt	r2, #0
    1b2c:	str	r1, [r2]
    1b30:	movw	r1, #1
    1b34:	str	r1, [fp, #-24]	; 0xffffffe8
    1b38:	str	r0, [sp, #28]
    1b3c:	ldr	r0, [sp, #28]
    1b40:	ldr	r1, [fp, #-4]
    1b44:	cmp	r0, r1
    1b48:	bge	1f10 <handle_debug_run_mode+0x440>
    1b4c:	ldr	r0, [fp, #-8]
    1b50:	ldr	r1, [sp, #28]
    1b54:	add	r0, r0, r1, lsl #2
    1b58:	ldr	r0, [r0]
    1b5c:	movw	r1, #0
    1b60:	movt	r1, #0
    1b64:	bl	0 <strcmp>
    1b68:	cmp	r0, #0
    1b6c:	beq	1b94 <handle_debug_run_mode+0xc4>
    1b70:	ldr	r0, [fp, #-8]
    1b74:	ldr	r1, [sp, #28]
    1b78:	add	r0, r0, r1, lsl #2
    1b7c:	ldr	r0, [r0]
    1b80:	movw	r1, #0
    1b84:	movt	r1, #0
    1b88:	bl	0 <strcmp>
    1b8c:	cmp	r0, #0
    1b90:	bne	1ba0 <handle_debug_run_mode+0xd0>
    1b94:	movw	r0, #0
    1b98:	str	r0, [fp, #-24]	; 0xffffffe8
    1b9c:	b	1efc <handle_debug_run_mode+0x42c>
    1ba0:	ldr	r0, [fp, #-8]
    1ba4:	ldr	r1, [sp, #28]
    1ba8:	add	r0, r0, r1, lsl #2
    1bac:	ldr	r0, [r0]
    1bb0:	movw	r1, #0
    1bb4:	movt	r1, #0
    1bb8:	bl	0 <strcmp>
    1bbc:	cmp	r0, #0
    1bc0:	beq	1be8 <handle_debug_run_mode+0x118>
    1bc4:	ldr	r0, [fp, #-8]
    1bc8:	ldr	r1, [sp, #28]
    1bcc:	add	r0, r0, r1, lsl #2
    1bd0:	ldr	r0, [r0]
    1bd4:	movw	r1, #0
    1bd8:	movt	r1, #0
    1bdc:	bl	0 <strcmp>
    1be0:	cmp	r0, #0
    1be4:	bne	1c4c <handle_debug_run_mode+0x17c>
    1be8:	ldr	r0, [sp, #28]
    1bec:	add	r0, r0, #1
    1bf0:	ldr	r1, [fp, #-4]
    1bf4:	cmp	r0, r1
    1bf8:	bge	1c4c <handle_debug_run_mode+0x17c>
    1bfc:	ldr	r0, [fp, #-8]
    1c00:	ldr	r1, [sp, #28]
    1c04:	add	r1, r1, #1
    1c08:	add	r0, r0, r1, lsl #2
    1c0c:	ldr	r0, [r0]
    1c10:	ldrb	r0, [r0]
    1c14:	cmp	r0, #45	; 0x2d
    1c18:	beq	1c4c <handle_debug_run_mode+0x17c>
    1c1c:	ldr	r0, [fp, #-8]
    1c20:	ldr	r1, [sp, #28]
    1c24:	add	r1, r1, #1
    1c28:	add	r0, r0, r1, lsl #2
    1c2c:	ldr	r0, [r0]
    1c30:	movw	r1, #0
    1c34:	movt	r1, #0
    1c38:	str	r0, [r1]
    1c3c:	ldr	r0, [sp, #28]
    1c40:	add	r0, r0, #1
    1c44:	str	r0, [sp, #28]
    1c48:	b	1ef8 <handle_debug_run_mode+0x428>
    1c4c:	ldr	r0, [fp, #-8]
    1c50:	ldr	r1, [sp, #28]
    1c54:	add	r0, r0, r1, lsl #2
    1c58:	ldr	r0, [r0]
    1c5c:	movw	r1, #0
    1c60:	movt	r1, #0
    1c64:	bl	0 <strcmp>
    1c68:	cmp	r0, #0
    1c6c:	beq	1c94 <handle_debug_run_mode+0x1c4>
    1c70:	ldr	r0, [fp, #-8]
    1c74:	ldr	r1, [sp, #28]
    1c78:	add	r0, r0, r1, lsl #2
    1c7c:	ldr	r0, [r0]
    1c80:	movw	r1, #0
    1c84:	movt	r1, #0
    1c88:	bl	0 <strcmp>
    1c8c:	cmp	r0, #0
    1c90:	bne	1cf8 <handle_debug_run_mode+0x228>
    1c94:	ldr	r0, [sp, #28]
    1c98:	add	r0, r0, #1
    1c9c:	ldr	r1, [fp, #-4]
    1ca0:	cmp	r0, r1
    1ca4:	bge	1cf8 <handle_debug_run_mode+0x228>
    1ca8:	ldr	r0, [fp, #-8]
    1cac:	ldr	r1, [sp, #28]
    1cb0:	add	r1, r1, #1
    1cb4:	add	r0, r0, r1, lsl #2
    1cb8:	ldr	r0, [r0]
    1cbc:	ldrb	r0, [r0]
    1cc0:	cmp	r0, #45	; 0x2d
    1cc4:	beq	1cf8 <handle_debug_run_mode+0x228>
    1cc8:	ldr	r0, [fp, #-8]
    1ccc:	ldr	r1, [sp, #28]
    1cd0:	add	r1, r1, #1
    1cd4:	add	r0, r0, r1, lsl #2
    1cd8:	ldr	r0, [r0]
    1cdc:	movw	r1, #0
    1ce0:	movt	r1, #0
    1ce4:	str	r0, [r1]
    1ce8:	ldr	r0, [sp, #28]
    1cec:	add	r0, r0, #1
    1cf0:	str	r0, [sp, #28]
    1cf4:	b	1ef4 <handle_debug_run_mode+0x424>
    1cf8:	ldr	r0, [fp, #-8]
    1cfc:	ldr	r1, [sp, #28]
    1d00:	add	r0, r0, r1, lsl #2
    1d04:	ldr	r0, [r0]
    1d08:	movw	r1, #0
    1d0c:	movt	r1, #0
    1d10:	bl	0 <strcmp>
    1d14:	cmp	r0, #0
    1d18:	bne	1d84 <handle_debug_run_mode+0x2b4>
    1d1c:	ldr	r0, [sp, #28]
    1d20:	add	r0, r0, #1
    1d24:	ldr	r1, [fp, #-4]
    1d28:	cmp	r0, r1
    1d2c:	bge	1d84 <handle_debug_run_mode+0x2b4>
    1d30:	ldr	r0, [fp, #-8]
    1d34:	ldr	r1, [sp, #28]
    1d38:	add	r1, r1, #1
    1d3c:	add	r0, r0, r1, lsl #2
    1d40:	ldr	r0, [r0]
    1d44:	ldrb	r0, [r0]
    1d48:	cmp	r0, #45	; 0x2d
    1d4c:	beq	1d84 <handle_debug_run_mode+0x2b4>
    1d50:	ldr	r0, [fp, #-8]
    1d54:	ldr	r1, [sp, #28]
    1d58:	add	r1, r1, #1
    1d5c:	add	r0, r0, r1, lsl #2
    1d60:	ldr	r0, [r0]
    1d64:	bl	0 <atoi>
    1d68:	movw	r1, #0
    1d6c:	movt	r1, #0
    1d70:	str	r0, [r1]
    1d74:	ldr	r0, [sp, #28]
    1d78:	add	r0, r0, #1
    1d7c:	str	r0, [sp, #28]
    1d80:	b	1ef0 <handle_debug_run_mode+0x420>
    1d84:	ldr	r0, [fp, #-8]
    1d88:	ldr	r1, [sp, #28]
    1d8c:	add	r0, r0, r1, lsl #2
    1d90:	ldr	r0, [r0]
    1d94:	movw	r1, #0
    1d98:	movt	r1, #0
    1d9c:	bl	0 <strcmp>
    1da0:	cmp	r0, #0
    1da4:	bne	1e70 <handle_debug_run_mode+0x3a0>
    1da8:	ldr	r0, [sp, #28]
    1dac:	add	r0, r0, #3
    1db0:	ldr	r1, [fp, #-4]
    1db4:	cmp	r0, r1
    1db8:	bge	1e70 <handle_debug_run_mode+0x3a0>
    1dbc:	ldr	r0, [fp, #-8]
    1dc0:	ldr	r1, [sp, #28]
    1dc4:	add	r1, r1, #1
    1dc8:	add	r0, r0, r1, lsl #2
    1dcc:	ldr	r0, [r0]
    1dd0:	ldrb	r0, [r0]
    1dd4:	cmp	r0, #45	; 0x2d
    1dd8:	beq	1e70 <handle_debug_run_mode+0x3a0>
    1ddc:	ldr	r0, [fp, #-8]
    1de0:	ldr	r1, [sp, #28]
    1de4:	add	r1, r1, #2
    1de8:	add	r0, r0, r1, lsl #2
    1dec:	ldr	r0, [r0]
    1df0:	ldrb	r0, [r0]
    1df4:	cmp	r0, #45	; 0x2d
    1df8:	beq	1e70 <handle_debug_run_mode+0x3a0>
    1dfc:	ldr	r0, [fp, #-8]
    1e00:	ldr	r1, [sp, #28]
    1e04:	add	r1, r1, #3
    1e08:	add	r0, r0, r1, lsl #2
    1e0c:	ldr	r0, [r0]
    1e10:	ldrb	r0, [r0]
    1e14:	cmp	r0, #45	; 0x2d
    1e18:	beq	1e70 <handle_debug_run_mode+0x3a0>
    1e1c:	ldr	r0, [fp, #-8]
    1e20:	ldr	r1, [sp, #28]
    1e24:	add	r0, r0, r1, lsl #2
    1e28:	ldr	r0, [r0, #4]
    1e2c:	str	r0, [fp, #-12]
    1e30:	ldr	r0, [fp, #-8]
    1e34:	ldr	r1, [sp, #28]
    1e38:	add	r0, r0, r1, lsl #2
    1e3c:	ldr	r0, [r0, #8]
    1e40:	str	r0, [fp, #-16]
    1e44:	ldr	r0, [fp, #-8]
    1e48:	ldr	r1, [sp, #28]
    1e4c:	add	r1, r1, #3
    1e50:	add	r0, r0, r1, lsl #2
    1e54:	ldr	r0, [r0]
    1e58:	bl	0 <atoi>
    1e5c:	str	r0, [fp, #-20]	; 0xffffffec
    1e60:	ldr	r0, [sp, #28]
    1e64:	add	r0, r0, #3
    1e68:	str	r0, [sp, #28]
    1e6c:	b	1eec <handle_debug_run_mode+0x41c>
    1e70:	ldr	r0, [sp, #28]
    1e74:	ldr	r1, [fp, #-4]
    1e78:	sub	r1, r1, #1
    1e7c:	cmp	r0, r1
    1e80:	bne	1ec0 <handle_debug_run_mode+0x3f0>
    1e84:	ldr	r0, [fp, #-8]
    1e88:	ldr	r1, [sp, #28]
    1e8c:	add	r0, r0, r1, lsl #2
    1e90:	ldr	r0, [r0]
    1e94:	ldrb	r0, [r0]
    1e98:	cmp	r0, #45	; 0x2d
    1e9c:	beq	1ec0 <handle_debug_run_mode+0x3f0>
    1ea0:	ldr	r0, [fp, #-8]
    1ea4:	ldr	r1, [sp, #28]
    1ea8:	add	r0, r0, r1, lsl #2
    1eac:	ldr	r0, [r0]
    1eb0:	movw	r1, #0
    1eb4:	movt	r1, #0
    1eb8:	str	r0, [r1]
    1ebc:	b	1ee8 <handle_debug_run_mode+0x418>
    1ec0:	movw	r0, #0
    1ec4:	movt	r0, #0
    1ec8:	ldr	r0, [r0]
    1ecc:	movw	r1, #0
    1ed0:	movt	r1, #0
    1ed4:	bl	0 <fprintf>
    1ed8:	str	r0, [sp, #24]
    1edc:	bl	209c <print_help>
    1ee0:	movw	r0, #1
    1ee4:	bl	0 <exit>
    1ee8:	b	1eec <handle_debug_run_mode+0x41c>
    1eec:	b	1ef0 <handle_debug_run_mode+0x420>
    1ef0:	b	1ef4 <handle_debug_run_mode+0x424>
    1ef4:	b	1ef8 <handle_debug_run_mode+0x428>
    1ef8:	b	1efc <handle_debug_run_mode+0x42c>
    1efc:	b	1f00 <handle_debug_run_mode+0x430>
    1f00:	ldr	r0, [sp, #28]
    1f04:	add	r0, r0, #1
    1f08:	str	r0, [sp, #28]
    1f0c:	b	1b3c <handle_debug_run_mode+0x6c>
    1f10:	movw	r0, #0
    1f14:	movt	r0, #0
    1f18:	ldr	r0, [r0]
    1f1c:	movw	r1, #0
    1f20:	cmp	r0, r1
    1f24:	beq	1f40 <handle_debug_run_mode+0x470>
    1f28:	movw	r0, #0
    1f2c:	movt	r0, #0
    1f30:	ldr	r0, [r0]
    1f34:	ldrb	r0, [r0]
    1f38:	cmp	r0, #0
    1f3c:	bne	1f68 <handle_debug_run_mode+0x498>
    1f40:	movw	r0, #0
    1f44:	movt	r0, #0
    1f48:	ldr	r0, [r0]
    1f4c:	movw	r1, #0
    1f50:	movt	r1, #0
    1f54:	bl	0 <fprintf>
    1f58:	str	r0, [sp, #20]
    1f5c:	bl	209c <print_help>
    1f60:	movw	r0, #1
    1f64:	bl	0 <exit>
    1f68:	bl	0 <coda_init>
    1f6c:	cmp	r0, #0
    1f70:	beq	1fbc <handle_debug_run_mode+0x4ec>
    1f74:	movw	r0, #0
    1f78:	movt	r0, #0
    1f7c:	ldr	r0, [r0]
    1f80:	str	r0, [sp, #16]
    1f84:	bl	0 <coda_get_errno>
    1f88:	ldr	r0, [r0]
    1f8c:	bl	0 <coda_errno_to_string>
    1f90:	ldr	r1, [sp, #16]
    1f94:	str	r0, [sp, #12]
    1f98:	mov	r0, r1
    1f9c:	movw	r1, #0
    1fa0:	movt	r1, #0
    1fa4:	ldr	r2, [sp, #12]
    1fa8:	bl	0 <fprintf>
    1fac:	movw	r1, #1
    1fb0:	str	r0, [sp, #8]
    1fb4:	mov	r0, r1
    1fb8:	bl	0 <exit>
    1fbc:	movw	r0, #0
    1fc0:	bl	0 <coda_set_option_perform_conversions>
    1fc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1fc8:	str	r0, [sp, #4]
    1fcc:	mov	r0, r1
    1fd0:	bl	0 <coda_set_option_use_fast_size_expressions>
    1fd4:	movw	r1, #0
    1fd8:	movt	r1, #0
    1fdc:	ldr	r1, [r1]
    1fe0:	movw	r2, #0
    1fe4:	cmp	r1, r2
    1fe8:	beq	2058 <handle_debug_run_mode+0x588>
    1fec:	movw	r0, #0
    1ff0:	movt	r0, #0
    1ff4:	ldr	r0, [r0]
    1ff8:	movw	r1, #0
    1ffc:	movt	r1, #0
    2000:	bl	0 <fopen>
    2004:	movw	r1, #0
    2008:	movt	r1, #0
    200c:	str	r0, [r1]
    2010:	ldr	r0, [r1]
    2014:	movw	r1, #0
    2018:	cmp	r0, r1
    201c:	bne	2054 <handle_debug_run_mode+0x584>
    2020:	movw	r0, #0
    2024:	movt	r0, #0
    2028:	ldr	r0, [r0]
    202c:	movw	r1, #0
    2030:	movt	r1, #0
    2034:	ldr	r2, [r1]
    2038:	movw	r1, #0
    203c:	movt	r1, #0
    2040:	bl	0 <fprintf>
    2044:	movw	r1, #1
    2048:	str	r0, [sp]
    204c:	mov	r0, r1
    2050:	bl	0 <exit>
    2054:	b	2058 <handle_debug_run_mode+0x588>
    2058:	ldr	r0, [fp, #-12]
    205c:	ldr	r1, [fp, #-16]
    2060:	ldr	r2, [fp, #-20]	; 0xffffffec
    2064:	bl	0 <print_debug_data>
    2068:	movw	r0, #0
    206c:	movt	r0, #0
    2070:	ldr	r0, [r0]
    2074:	movw	r1, #0
    2078:	cmp	r0, r1
    207c:	beq	2090 <handle_debug_run_mode+0x5c0>
    2080:	movw	r0, #0
    2084:	movt	r0, #0
    2088:	ldr	r0, [r0]
    208c:	bl	0 <fclose>
    2090:	bl	0 <coda_done>
    2094:	mov	sp, fp
    2098:	pop	{fp, pc}

0000209c <print_help>:
    209c:	push	{fp, lr}
    20a0:	mov	fp, sp
    20a4:	sub	sp, sp, #472	; 0x1d8
    20a8:	movw	r0, #0
    20ac:	movt	r0, #0
    20b0:	bl	0 <printf>
    20b4:	movw	r1, #0
    20b8:	movt	r1, #0
    20bc:	str	r0, [fp, #-4]
    20c0:	mov	r0, r1
    20c4:	bl	0 <printf>
    20c8:	movw	r1, #0
    20cc:	movt	r1, #0
    20d0:	str	r0, [fp, #-8]
    20d4:	mov	r0, r1
    20d8:	bl	0 <printf>
    20dc:	movw	r1, #0
    20e0:	movt	r1, #0
    20e4:	str	r0, [fp, #-12]
    20e8:	mov	r0, r1
    20ec:	bl	0 <printf>
    20f0:	movw	r1, #0
    20f4:	movt	r1, #0
    20f8:	str	r0, [fp, #-16]
    20fc:	mov	r0, r1
    2100:	bl	0 <printf>
    2104:	movw	r1, #0
    2108:	movt	r1, #0
    210c:	str	r0, [fp, #-20]	; 0xffffffec
    2110:	mov	r0, r1
    2114:	bl	0 <printf>
    2118:	movw	r1, #0
    211c:	movt	r1, #0
    2120:	str	r0, [fp, #-24]	; 0xffffffe8
    2124:	mov	r0, r1
    2128:	bl	0 <printf>
    212c:	movw	r1, #0
    2130:	movt	r1, #0
    2134:	str	r0, [fp, #-28]	; 0xffffffe4
    2138:	mov	r0, r1
    213c:	bl	0 <printf>
    2140:	movw	r1, #0
    2144:	movt	r1, #0
    2148:	str	r0, [fp, #-32]	; 0xffffffe0
    214c:	mov	r0, r1
    2150:	bl	0 <printf>
    2154:	movw	r1, #0
    2158:	movt	r1, #0
    215c:	str	r0, [fp, #-36]	; 0xffffffdc
    2160:	mov	r0, r1
    2164:	bl	0 <printf>
    2168:	movw	r1, #0
    216c:	movt	r1, #0
    2170:	str	r0, [fp, #-40]	; 0xffffffd8
    2174:	mov	r0, r1
    2178:	bl	0 <printf>
    217c:	movw	r1, #0
    2180:	movt	r1, #0
    2184:	str	r0, [fp, #-44]	; 0xffffffd4
    2188:	mov	r0, r1
    218c:	bl	0 <printf>
    2190:	movw	r1, #0
    2194:	movt	r1, #0
    2198:	str	r0, [fp, #-48]	; 0xffffffd0
    219c:	mov	r0, r1
    21a0:	bl	0 <printf>
    21a4:	movw	r1, #0
    21a8:	movt	r1, #0
    21ac:	str	r0, [fp, #-52]	; 0xffffffcc
    21b0:	mov	r0, r1
    21b4:	bl	0 <printf>
    21b8:	movw	r1, #0
    21bc:	movt	r1, #0
    21c0:	str	r0, [fp, #-56]	; 0xffffffc8
    21c4:	mov	r0, r1
    21c8:	bl	0 <printf>
    21cc:	movw	r1, #0
    21d0:	movt	r1, #0
    21d4:	str	r0, [fp, #-60]	; 0xffffffc4
    21d8:	mov	r0, r1
    21dc:	bl	0 <printf>
    21e0:	movw	r1, #0
    21e4:	movt	r1, #0
    21e8:	str	r0, [fp, #-64]	; 0xffffffc0
    21ec:	mov	r0, r1
    21f0:	bl	0 <printf>
    21f4:	movw	r1, #0
    21f8:	movt	r1, #0
    21fc:	str	r0, [fp, #-68]	; 0xffffffbc
    2200:	mov	r0, r1
    2204:	bl	0 <printf>
    2208:	movw	r1, #0
    220c:	movt	r1, #0
    2210:	str	r0, [fp, #-72]	; 0xffffffb8
    2214:	mov	r0, r1
    2218:	bl	0 <printf>
    221c:	movw	r1, #0
    2220:	movt	r1, #0
    2224:	str	r0, [fp, #-76]	; 0xffffffb4
    2228:	mov	r0, r1
    222c:	bl	0 <printf>
    2230:	movw	r1, #0
    2234:	movt	r1, #0
    2238:	str	r0, [fp, #-80]	; 0xffffffb0
    223c:	mov	r0, r1
    2240:	bl	0 <printf>
    2244:	movw	r1, #0
    2248:	movt	r1, #0
    224c:	str	r0, [fp, #-84]	; 0xffffffac
    2250:	mov	r0, r1
    2254:	bl	0 <printf>
    2258:	movw	r1, #0
    225c:	movt	r1, #0
    2260:	str	r0, [fp, #-88]	; 0xffffffa8
    2264:	mov	r0, r1
    2268:	bl	0 <printf>
    226c:	movw	r1, #0
    2270:	movt	r1, #0
    2274:	str	r0, [fp, #-92]	; 0xffffffa4
    2278:	mov	r0, r1
    227c:	bl	0 <printf>
    2280:	movw	r1, #0
    2284:	movt	r1, #0
    2288:	str	r0, [fp, #-96]	; 0xffffffa0
    228c:	mov	r0, r1
    2290:	bl	0 <printf>
    2294:	movw	r1, #0
    2298:	movt	r1, #0
    229c:	str	r0, [fp, #-100]	; 0xffffff9c
    22a0:	mov	r0, r1
    22a4:	bl	0 <printf>
    22a8:	movw	r1, #0
    22ac:	movt	r1, #0
    22b0:	str	r0, [fp, #-104]	; 0xffffff98
    22b4:	mov	r0, r1
    22b8:	bl	0 <printf>
    22bc:	movw	r1, #0
    22c0:	movt	r1, #0
    22c4:	str	r0, [fp, #-108]	; 0xffffff94
    22c8:	mov	r0, r1
    22cc:	bl	0 <printf>
    22d0:	movw	r1, #0
    22d4:	movt	r1, #0
    22d8:	str	r0, [fp, #-112]	; 0xffffff90
    22dc:	mov	r0, r1
    22e0:	bl	0 <printf>
    22e4:	movw	r1, #0
    22e8:	movt	r1, #0
    22ec:	str	r0, [fp, #-116]	; 0xffffff8c
    22f0:	mov	r0, r1
    22f4:	bl	0 <printf>
    22f8:	movw	r1, #0
    22fc:	movt	r1, #0
    2300:	str	r0, [fp, #-120]	; 0xffffff88
    2304:	mov	r0, r1
    2308:	bl	0 <printf>
    230c:	movw	r1, #0
    2310:	movt	r1, #0
    2314:	str	r0, [fp, #-124]	; 0xffffff84
    2318:	mov	r0, r1
    231c:	bl	0 <printf>
    2320:	movw	r1, #0
    2324:	movt	r1, #0
    2328:	str	r0, [fp, #-128]	; 0xffffff80
    232c:	mov	r0, r1
    2330:	bl	0 <printf>
    2334:	movw	r1, #0
    2338:	movt	r1, #0
    233c:	str	r0, [fp, #-132]	; 0xffffff7c
    2340:	mov	r0, r1
    2344:	bl	0 <printf>
    2348:	movw	r1, #0
    234c:	movt	r1, #0
    2350:	str	r0, [fp, #-136]	; 0xffffff78
    2354:	mov	r0, r1
    2358:	bl	0 <printf>
    235c:	movw	r1, #0
    2360:	movt	r1, #0
    2364:	str	r0, [fp, #-140]	; 0xffffff74
    2368:	mov	r0, r1
    236c:	bl	0 <printf>
    2370:	movw	r1, #0
    2374:	movt	r1, #0
    2378:	str	r0, [fp, #-144]	; 0xffffff70
    237c:	mov	r0, r1
    2380:	bl	0 <printf>
    2384:	movw	r1, #0
    2388:	movt	r1, #0
    238c:	str	r0, [fp, #-148]	; 0xffffff6c
    2390:	mov	r0, r1
    2394:	bl	0 <printf>
    2398:	movw	r1, #0
    239c:	movt	r1, #0
    23a0:	str	r0, [fp, #-152]	; 0xffffff68
    23a4:	mov	r0, r1
    23a8:	bl	0 <printf>
    23ac:	movw	r1, #0
    23b0:	movt	r1, #0
    23b4:	str	r0, [fp, #-156]	; 0xffffff64
    23b8:	mov	r0, r1
    23bc:	bl	0 <printf>
    23c0:	movw	r1, #0
    23c4:	movt	r1, #0
    23c8:	str	r0, [fp, #-160]	; 0xffffff60
    23cc:	mov	r0, r1
    23d0:	bl	0 <printf>
    23d4:	movw	r1, #0
    23d8:	movt	r1, #0
    23dc:	str	r0, [fp, #-164]	; 0xffffff5c
    23e0:	mov	r0, r1
    23e4:	bl	0 <printf>
    23e8:	movw	r1, #0
    23ec:	movt	r1, #0
    23f0:	str	r0, [fp, #-168]	; 0xffffff58
    23f4:	mov	r0, r1
    23f8:	bl	0 <printf>
    23fc:	movw	r1, #0
    2400:	movt	r1, #0
    2404:	str	r0, [fp, #-172]	; 0xffffff54
    2408:	mov	r0, r1
    240c:	bl	0 <printf>
    2410:	movw	r1, #0
    2414:	movt	r1, #0
    2418:	str	r0, [fp, #-176]	; 0xffffff50
    241c:	mov	r0, r1
    2420:	bl	0 <printf>
    2424:	movw	r1, #0
    2428:	movt	r1, #0
    242c:	str	r0, [fp, #-180]	; 0xffffff4c
    2430:	mov	r0, r1
    2434:	bl	0 <printf>
    2438:	movw	r1, #0
    243c:	movt	r1, #0
    2440:	str	r0, [fp, #-184]	; 0xffffff48
    2444:	mov	r0, r1
    2448:	bl	0 <printf>
    244c:	movw	r1, #0
    2450:	movt	r1, #0
    2454:	str	r0, [fp, #-188]	; 0xffffff44
    2458:	mov	r0, r1
    245c:	bl	0 <printf>
    2460:	movw	r1, #0
    2464:	movt	r1, #0
    2468:	str	r0, [fp, #-192]	; 0xffffff40
    246c:	mov	r0, r1
    2470:	bl	0 <printf>
    2474:	movw	r1, #0
    2478:	movt	r1, #0
    247c:	str	r0, [fp, #-196]	; 0xffffff3c
    2480:	mov	r0, r1
    2484:	bl	0 <printf>
    2488:	movw	r1, #0
    248c:	movt	r1, #0
    2490:	str	r0, [fp, #-200]	; 0xffffff38
    2494:	mov	r0, r1
    2498:	bl	0 <printf>
    249c:	movw	r1, #0
    24a0:	movt	r1, #0
    24a4:	str	r0, [fp, #-204]	; 0xffffff34
    24a8:	mov	r0, r1
    24ac:	bl	0 <printf>
    24b0:	movw	r1, #0
    24b4:	movt	r1, #0
    24b8:	str	r0, [fp, #-208]	; 0xffffff30
    24bc:	mov	r0, r1
    24c0:	bl	0 <printf>
    24c4:	movw	r1, #0
    24c8:	movt	r1, #0
    24cc:	str	r0, [fp, #-212]	; 0xffffff2c
    24d0:	mov	r0, r1
    24d4:	bl	0 <printf>
    24d8:	movw	r1, #0
    24dc:	movt	r1, #0
    24e0:	str	r0, [fp, #-216]	; 0xffffff28
    24e4:	mov	r0, r1
    24e8:	bl	0 <printf>
    24ec:	movw	r1, #0
    24f0:	movt	r1, #0
    24f4:	str	r0, [fp, #-220]	; 0xffffff24
    24f8:	mov	r0, r1
    24fc:	bl	0 <printf>
    2500:	movw	r1, #0
    2504:	movt	r1, #0
    2508:	str	r0, [fp, #-224]	; 0xffffff20
    250c:	mov	r0, r1
    2510:	bl	0 <printf>
    2514:	movw	r1, #0
    2518:	movt	r1, #0
    251c:	str	r0, [fp, #-228]	; 0xffffff1c
    2520:	mov	r0, r1
    2524:	bl	0 <printf>
    2528:	movw	r1, #0
    252c:	movt	r1, #0
    2530:	str	r0, [fp, #-232]	; 0xffffff18
    2534:	mov	r0, r1
    2538:	bl	0 <printf>
    253c:	movw	r1, #0
    2540:	movt	r1, #0
    2544:	str	r0, [sp, #236]	; 0xec
    2548:	mov	r0, r1
    254c:	bl	0 <printf>
    2550:	movw	r1, #0
    2554:	movt	r1, #0
    2558:	str	r0, [sp, #232]	; 0xe8
    255c:	mov	r0, r1
    2560:	bl	0 <printf>
    2564:	movw	r1, #0
    2568:	movt	r1, #0
    256c:	str	r0, [sp, #228]	; 0xe4
    2570:	mov	r0, r1
    2574:	bl	0 <printf>
    2578:	movw	r1, #0
    257c:	movt	r1, #0
    2580:	str	r0, [sp, #224]	; 0xe0
    2584:	mov	r0, r1
    2588:	bl	0 <printf>
    258c:	movw	r1, #0
    2590:	movt	r1, #0
    2594:	str	r0, [sp, #220]	; 0xdc
    2598:	mov	r0, r1
    259c:	bl	0 <printf>
    25a0:	movw	r1, #0
    25a4:	movt	r1, #0
    25a8:	str	r0, [sp, #216]	; 0xd8
    25ac:	mov	r0, r1
    25b0:	bl	0 <printf>
    25b4:	movw	r1, #0
    25b8:	movt	r1, #0
    25bc:	str	r0, [sp, #212]	; 0xd4
    25c0:	mov	r0, r1
    25c4:	bl	0 <printf>
    25c8:	movw	r1, #0
    25cc:	movt	r1, #0
    25d0:	str	r0, [sp, #208]	; 0xd0
    25d4:	mov	r0, r1
    25d8:	bl	0 <printf>
    25dc:	movw	r1, #0
    25e0:	movt	r1, #0
    25e4:	str	r0, [sp, #204]	; 0xcc
    25e8:	mov	r0, r1
    25ec:	bl	0 <printf>
    25f0:	movw	r1, #0
    25f4:	movt	r1, #0
    25f8:	str	r0, [sp, #200]	; 0xc8
    25fc:	mov	r0, r1
    2600:	bl	0 <printf>
    2604:	movw	r1, #0
    2608:	movt	r1, #0
    260c:	str	r0, [sp, #196]	; 0xc4
    2610:	mov	r0, r1
    2614:	bl	0 <printf>
    2618:	movw	r1, #0
    261c:	movt	r1, #0
    2620:	str	r0, [sp, #192]	; 0xc0
    2624:	mov	r0, r1
    2628:	bl	0 <printf>
    262c:	movw	r1, #0
    2630:	movt	r1, #0
    2634:	str	r0, [sp, #188]	; 0xbc
    2638:	mov	r0, r1
    263c:	bl	0 <printf>
    2640:	movw	r1, #0
    2644:	movt	r1, #0
    2648:	str	r0, [sp, #184]	; 0xb8
    264c:	mov	r0, r1
    2650:	bl	0 <printf>
    2654:	movw	r1, #0
    2658:	movt	r1, #0
    265c:	str	r0, [sp, #180]	; 0xb4
    2660:	mov	r0, r1
    2664:	bl	0 <printf>
    2668:	movw	r1, #0
    266c:	movt	r1, #0
    2670:	str	r0, [sp, #176]	; 0xb0
    2674:	mov	r0, r1
    2678:	bl	0 <printf>
    267c:	movw	r1, #0
    2680:	movt	r1, #0
    2684:	str	r0, [sp, #172]	; 0xac
    2688:	mov	r0, r1
    268c:	bl	0 <printf>
    2690:	movw	r1, #0
    2694:	movt	r1, #0
    2698:	str	r0, [sp, #168]	; 0xa8
    269c:	mov	r0, r1
    26a0:	bl	0 <printf>
    26a4:	movw	r1, #0
    26a8:	movt	r1, #0
    26ac:	str	r0, [sp, #164]	; 0xa4
    26b0:	mov	r0, r1
    26b4:	bl	0 <printf>
    26b8:	movw	r1, #0
    26bc:	movt	r1, #0
    26c0:	str	r0, [sp, #160]	; 0xa0
    26c4:	mov	r0, r1
    26c8:	bl	0 <printf>
    26cc:	movw	r1, #0
    26d0:	movt	r1, #0
    26d4:	str	r0, [sp, #156]	; 0x9c
    26d8:	mov	r0, r1
    26dc:	bl	0 <printf>
    26e0:	movw	r1, #0
    26e4:	movt	r1, #0
    26e8:	str	r0, [sp, #152]	; 0x98
    26ec:	mov	r0, r1
    26f0:	bl	0 <printf>
    26f4:	movw	r1, #0
    26f8:	movt	r1, #0
    26fc:	str	r0, [sp, #148]	; 0x94
    2700:	mov	r0, r1
    2704:	bl	0 <printf>
    2708:	movw	r1, #0
    270c:	movt	r1, #0
    2710:	str	r0, [sp, #144]	; 0x90
    2714:	mov	r0, r1
    2718:	bl	0 <printf>
    271c:	movw	r1, #0
    2720:	movt	r1, #0
    2724:	str	r0, [sp, #140]	; 0x8c
    2728:	mov	r0, r1
    272c:	bl	0 <printf>
    2730:	movw	r1, #0
    2734:	movt	r1, #0
    2738:	str	r0, [sp, #136]	; 0x88
    273c:	mov	r0, r1
    2740:	bl	0 <printf>
    2744:	movw	r1, #0
    2748:	movt	r1, #0
    274c:	str	r0, [sp, #132]	; 0x84
    2750:	mov	r0, r1
    2754:	bl	0 <printf>
    2758:	movw	r1, #0
    275c:	movt	r1, #0
    2760:	str	r0, [sp, #128]	; 0x80
    2764:	mov	r0, r1
    2768:	bl	0 <printf>
    276c:	movw	r1, #0
    2770:	movt	r1, #0
    2774:	str	r0, [sp, #124]	; 0x7c
    2778:	mov	r0, r1
    277c:	bl	0 <printf>
    2780:	movw	r1, #0
    2784:	movt	r1, #0
    2788:	str	r0, [sp, #120]	; 0x78
    278c:	mov	r0, r1
    2790:	bl	0 <printf>
    2794:	movw	r1, #0
    2798:	movt	r1, #0
    279c:	str	r0, [sp, #116]	; 0x74
    27a0:	mov	r0, r1
    27a4:	bl	0 <printf>
    27a8:	movw	r1, #0
    27ac:	movt	r1, #0
    27b0:	str	r0, [sp, #112]	; 0x70
    27b4:	mov	r0, r1
    27b8:	bl	0 <printf>
    27bc:	movw	r1, #0
    27c0:	movt	r1, #0
    27c4:	str	r0, [sp, #108]	; 0x6c
    27c8:	mov	r0, r1
    27cc:	bl	0 <printf>
    27d0:	movw	r1, #0
    27d4:	movt	r1, #0
    27d8:	str	r0, [sp, #104]	; 0x68
    27dc:	mov	r0, r1
    27e0:	bl	0 <printf>
    27e4:	movw	r1, #0
    27e8:	movt	r1, #0
    27ec:	str	r0, [sp, #100]	; 0x64
    27f0:	mov	r0, r1
    27f4:	bl	0 <printf>
    27f8:	movw	r1, #0
    27fc:	movt	r1, #0
    2800:	str	r0, [sp, #96]	; 0x60
    2804:	mov	r0, r1
    2808:	bl	0 <printf>
    280c:	movw	r1, #0
    2810:	movt	r1, #0
    2814:	str	r0, [sp, #92]	; 0x5c
    2818:	mov	r0, r1
    281c:	bl	0 <printf>
    2820:	movw	r1, #0
    2824:	movt	r1, #0
    2828:	str	r0, [sp, #88]	; 0x58
    282c:	mov	r0, r1
    2830:	bl	0 <printf>
    2834:	movw	r1, #0
    2838:	movt	r1, #0
    283c:	str	r0, [sp, #84]	; 0x54
    2840:	mov	r0, r1
    2844:	bl	0 <printf>
    2848:	movw	r1, #0
    284c:	movt	r1, #0
    2850:	str	r0, [sp, #80]	; 0x50
    2854:	mov	r0, r1
    2858:	bl	0 <printf>
    285c:	movw	r1, #0
    2860:	movt	r1, #0
    2864:	str	r0, [sp, #76]	; 0x4c
    2868:	mov	r0, r1
    286c:	bl	0 <printf>
    2870:	movw	r1, #0
    2874:	movt	r1, #0
    2878:	str	r0, [sp, #72]	; 0x48
    287c:	mov	r0, r1
    2880:	bl	0 <printf>
    2884:	movw	r1, #0
    2888:	movt	r1, #0
    288c:	str	r0, [sp, #68]	; 0x44
    2890:	mov	r0, r1
    2894:	bl	0 <printf>
    2898:	movw	r1, #0
    289c:	movt	r1, #0
    28a0:	str	r0, [sp, #64]	; 0x40
    28a4:	mov	r0, r1
    28a8:	bl	0 <printf>
    28ac:	movw	r1, #0
    28b0:	movt	r1, #0
    28b4:	str	r0, [sp, #60]	; 0x3c
    28b8:	mov	r0, r1
    28bc:	bl	0 <printf>
    28c0:	movw	r1, #0
    28c4:	movt	r1, #0
    28c8:	str	r0, [sp, #56]	; 0x38
    28cc:	mov	r0, r1
    28d0:	bl	0 <printf>
    28d4:	movw	r1, #0
    28d8:	movt	r1, #0
    28dc:	str	r0, [sp, #52]	; 0x34
    28e0:	mov	r0, r1
    28e4:	bl	0 <printf>
    28e8:	movw	r1, #0
    28ec:	movt	r1, #0
    28f0:	str	r0, [sp, #48]	; 0x30
    28f4:	mov	r0, r1
    28f8:	bl	0 <printf>
    28fc:	movw	r1, #0
    2900:	movt	r1, #0
    2904:	str	r0, [sp, #44]	; 0x2c
    2908:	mov	r0, r1
    290c:	bl	0 <printf>
    2910:	movw	r1, #0
    2914:	movt	r1, #0
    2918:	str	r0, [sp, #40]	; 0x28
    291c:	mov	r0, r1
    2920:	bl	0 <printf>
    2924:	movw	r1, #0
    2928:	movt	r1, #0
    292c:	str	r0, [sp, #36]	; 0x24
    2930:	mov	r0, r1
    2934:	bl	0 <printf>
    2938:	movw	r1, #0
    293c:	movt	r1, #0
    2940:	str	r0, [sp, #32]
    2944:	mov	r0, r1
    2948:	bl	0 <printf>
    294c:	movw	r1, #0
    2950:	movt	r1, #0
    2954:	str	r0, [sp, #28]
    2958:	mov	r0, r1
    295c:	bl	0 <printf>
    2960:	movw	r1, #0
    2964:	movt	r1, #0
    2968:	str	r0, [sp, #24]
    296c:	mov	r0, r1
    2970:	bl	0 <printf>
    2974:	movw	r1, #0
    2978:	movt	r1, #0
    297c:	str	r0, [sp, #20]
    2980:	mov	r0, r1
    2984:	bl	0 <printf>
    2988:	movw	r1, #0
    298c:	movt	r1, #0
    2990:	str	r0, [sp, #16]
    2994:	mov	r0, r1
    2998:	bl	0 <printf>
    299c:	movw	r1, #0
    29a0:	movt	r1, #0
    29a4:	str	r0, [sp, #12]
    29a8:	mov	r0, r1
    29ac:	bl	0 <printf>
    29b0:	movw	r1, #0
    29b4:	movt	r1, #0
    29b8:	str	r0, [sp, #8]
    29bc:	mov	r0, r1
    29c0:	bl	0 <printf>
    29c4:	movw	r1, #0
    29c8:	movt	r1, #0
    29cc:	str	r0, [sp, #4]
    29d0:	mov	r0, r1
    29d4:	bl	0 <printf>
    29d8:	mov	sp, fp
    29dc:	pop	{fp, pc}

000029e0 <print_version>:
    29e0:	push	{fp, lr}
    29e4:	mov	fp, sp
    29e8:	sub	sp, sp, #16
    29ec:	bl	0 <coda_get_libcoda_version>
    29f0:	movw	r1, #0
    29f4:	movt	r1, #0
    29f8:	str	r0, [fp, #-4]
    29fc:	mov	r0, r1
    2a00:	ldr	r1, [fp, #-4]
    2a04:	bl	0 <printf>
    2a08:	movw	r1, #0
    2a0c:	movt	r1, #0
    2a10:	str	r0, [sp, #8]
    2a14:	mov	r0, r1
    2a18:	bl	0 <printf>
    2a1c:	movw	r1, #0
    2a20:	movt	r1, #0
    2a24:	str	r0, [sp, #4]
    2a28:	mov	r0, r1
    2a2c:	bl	0 <printf>
    2a30:	mov	sp, fp
    2a34:	pop	{fp, pc}
