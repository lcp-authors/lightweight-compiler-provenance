
../compcert-repos/prog2/CMakeFiles/0.3.dir/Aula00_Conceitos_base/03.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <avg>:
   0:	vldr	s0, [pc, #88]	; 60 <avg+0x60>
   4:	vldr	s2, [r0]
   8:	vldr	s4, [r0, #4]
   c:	vldr	s6, [r0, #8]
  10:	vldr	s8, [r0, #12]
  14:	vldr	s10, [r0, #16]
  18:	vldr	s12, [r0, #20]
  1c:	vldr	s14, [r0, #24]
  20:	vldr	s1, [r0, #28]
  24:	vadd.f32	s0, s2, s0
  28:	vldr	s2, [r0, #32]
  2c:	vadd.f32	s0, s0, s4
  30:	vldr	s4, [r0, #36]	; 0x24
  34:	vadd.f32	s0, s0, s6
  38:	vadd.f32	s0, s0, s8
  3c:	vadd.f32	s0, s0, s10
  40:	vadd.f32	s0, s0, s12
  44:	vadd.f32	s0, s0, s14
  48:	vadd.f32	s0, s0, s1
  4c:	vadd.f32	s0, s0, s2
  50:	vmov.f32	s2, #36	; 0x41200000  10.0
  54:	vadd.f32	s0, s0, s4
  58:	vdiv.f32	s0, s0, s2
  5c:	bx	lr
  60:	.word	0x00000000

00000064 <max>:
  64:	vldr	s0, [r0]
  68:	vldr	s2, [r0, #4]
  6c:	vldr	s4, [r0, #8]
  70:	vldr	s6, [r0, #12]
  74:	vldr	s8, [r0, #16]
  78:	vldr	s10, [r0, #20]
  7c:	vldr	s12, [r0, #24]
  80:	vldr	s14, [r0, #28]
  84:	vcmpe.f32	s2, s0
  88:	vmrs	APSR_nzcv, fpscr
  8c:	vselgt.f32	s0, s2, s0
  90:	vldr	s2, [r0, #32]
  94:	vcmpe.f32	s4, s0
  98:	vmrs	APSR_nzcv, fpscr
  9c:	vselgt.f32	s0, s4, s0
  a0:	vldr	s4, [r0, #36]	; 0x24
  a4:	vcmpe.f32	s6, s0
  a8:	vmrs	APSR_nzcv, fpscr
  ac:	vselgt.f32	s0, s6, s0
  b0:	vcmpe.f32	s8, s0
  b4:	vmrs	APSR_nzcv, fpscr
  b8:	vselgt.f32	s0, s8, s0
  bc:	vcmpe.f32	s10, s0
  c0:	vmrs	APSR_nzcv, fpscr
  c4:	vselgt.f32	s0, s10, s0
  c8:	vcmpe.f32	s12, s0
  cc:	vmrs	APSR_nzcv, fpscr
  d0:	vselgt.f32	s0, s12, s0
  d4:	vcmpe.f32	s14, s0
  d8:	vmrs	APSR_nzcv, fpscr
  dc:	vselgt.f32	s0, s14, s0
  e0:	vcmpe.f32	s2, s0
  e4:	vmrs	APSR_nzcv, fpscr
  e8:	vselgt.f32	s0, s2, s0
  ec:	vcmpe.f32	s4, s0
  f0:	vmrs	APSR_nzcv, fpscr
  f4:	vselgt.f32	s0, s4, s0
  f8:	bx	lr

000000fc <min>:
  fc:	vldr	s0, [r0]
 100:	vldr	s2, [r0, #4]
 104:	vldr	s4, [r0, #8]
 108:	vldr	s6, [r0, #12]
 10c:	vldr	s8, [r0, #16]
 110:	vldr	s10, [r0, #20]
 114:	vldr	s12, [r0, #24]
 118:	vldr	s14, [r0, #28]
 11c:	vcmpe.f32	s0, s2
 120:	vmrs	APSR_nzcv, fpscr
 124:	vselgt.f32	s0, s2, s0
 128:	vldr	s2, [r0, #32]
 12c:	vcmpe.f32	s0, s4
 130:	vmrs	APSR_nzcv, fpscr
 134:	vselgt.f32	s0, s4, s0
 138:	vldr	s4, [r0, #36]	; 0x24
 13c:	vcmpe.f32	s0, s6
 140:	vmrs	APSR_nzcv, fpscr
 144:	vselgt.f32	s0, s6, s0
 148:	vcmpe.f32	s0, s8
 14c:	vmrs	APSR_nzcv, fpscr
 150:	vselgt.f32	s0, s8, s0
 154:	vcmpe.f32	s0, s10
 158:	vmrs	APSR_nzcv, fpscr
 15c:	vselgt.f32	s0, s10, s0
 160:	vcmpe.f32	s0, s12
 164:	vmrs	APSR_nzcv, fpscr
 168:	vselgt.f32	s0, s12, s0
 16c:	vcmpe.f32	s0, s14
 170:	vmrs	APSR_nzcv, fpscr
 174:	vselgt.f32	s0, s14, s0
 178:	vcmpe.f32	s0, s2
 17c:	vmrs	APSR_nzcv, fpscr
 180:	vselgt.f32	s0, s2, s0
 184:	vcmpe.f32	s0, s4
 188:	vmrs	APSR_nzcv, fpscr
 18c:	vselgt.f32	s0, s4, s0
 190:	bx	lr

00000194 <main>:
 194:	push	{r4, r5, r6, sl, fp, lr}
 198:	add	fp, sp, #16
 19c:	sub	sp, sp, #40	; 0x28
 1a0:	movw	r4, #0
 1a4:	mov	r1, #1
 1a8:	movt	r4, #0
 1ac:	mov	r0, r4
 1b0:	bl	0 <printf>
 1b4:	movw	r5, #0
 1b8:	mov	r6, sp
 1bc:	movt	r5, #0
 1c0:	mov	r1, r6
 1c4:	mov	r0, r5
 1c8:	bl	0 <__isoc99_scanf>
 1cc:	mov	r0, r4
 1d0:	mov	r1, #2
 1d4:	bl	0 <printf>
 1d8:	add	r1, r6, #4
 1dc:	mov	r0, r5
 1e0:	bl	0 <__isoc99_scanf>
 1e4:	mov	r0, r4
 1e8:	mov	r1, #3
 1ec:	bl	0 <printf>
 1f0:	add	r1, r6, #8
 1f4:	mov	r0, r5
 1f8:	bl	0 <__isoc99_scanf>
 1fc:	mov	r0, r4
 200:	mov	r1, #4
 204:	bl	0 <printf>
 208:	add	r1, r6, #12
 20c:	mov	r0, r5
 210:	bl	0 <__isoc99_scanf>
 214:	mov	r0, r4
 218:	mov	r1, #5
 21c:	bl	0 <printf>
 220:	add	r1, r6, #16
 224:	mov	r0, r5
 228:	bl	0 <__isoc99_scanf>
 22c:	mov	r0, r4
 230:	mov	r1, #6
 234:	bl	0 <printf>
 238:	add	r1, r6, #20
 23c:	mov	r0, r5
 240:	bl	0 <__isoc99_scanf>
 244:	mov	r0, r4
 248:	mov	r1, #7
 24c:	bl	0 <printf>
 250:	add	r1, r6, #24
 254:	mov	r0, r5
 258:	bl	0 <__isoc99_scanf>
 25c:	mov	r0, r4
 260:	mov	r1, #8
 264:	bl	0 <printf>
 268:	add	r1, r6, #28
 26c:	mov	r0, r5
 270:	bl	0 <__isoc99_scanf>
 274:	mov	r0, r4
 278:	mov	r1, #9
 27c:	bl	0 <printf>
 280:	add	r1, r6, #32
 284:	mov	r0, r5
 288:	bl	0 <__isoc99_scanf>
 28c:	mov	r0, r4
 290:	mov	r1, #10
 294:	bl	0 <printf>
 298:	add	r1, r6, #36	; 0x24
 29c:	mov	r0, r5
 2a0:	bl	0 <__isoc99_scanf>
 2a4:	vldr	s0, [pc, #680]	; 554 <main+0x3c0>
 2a8:	vldr	s2, [sp]
 2ac:	vldr	s4, [sp, #4]
 2b0:	vldr	s6, [sp, #8]
 2b4:	vldr	s8, [sp, #12]
 2b8:	movw	r0, #0
 2bc:	movt	r0, #0
 2c0:	vadd.f32	s0, s2, s0
 2c4:	vldr	s2, [sp, #16]
 2c8:	vadd.f32	s0, s0, s4
 2cc:	vldr	s4, [sp, #20]
 2d0:	vadd.f32	s0, s0, s6
 2d4:	vldr	s6, [sp, #24]
 2d8:	vadd.f32	s0, s0, s8
 2dc:	vadd.f32	s0, s0, s2
 2e0:	vldr	s2, [sp, #28]
 2e4:	vadd.f32	s0, s0, s4
 2e8:	vldr	s4, [sp, #32]
 2ec:	vadd.f32	s0, s0, s6
 2f0:	vldr	s6, [sp, #36]	; 0x24
 2f4:	vadd.f32	s0, s0, s2
 2f8:	vmov.f32	s2, #36	; 0x41200000  10.0
 2fc:	vadd.f32	s0, s0, s4
 300:	vadd.f32	s0, s0, s6
 304:	vdiv.f32	s0, s0, s2
 308:	vcvt.f64.f32	d16, s0
 30c:	vmov	r2, r3, d16
 310:	bl	0 <printf>
 314:	vldr	s0, [sp]
 318:	vldr	s2, [sp, #4]
 31c:	vldr	s4, [sp, #8]
 320:	vldr	s6, [sp, #12]
 324:	vldr	s8, [sp, #32]
 328:	movw	r0, #0
 32c:	movt	r0, #0
 330:	vcmpe.f32	s2, s0
 334:	vmrs	APSR_nzcv, fpscr
 338:	vselgt.f32	s0, s2, s0
 33c:	vldr	s2, [sp, #16]
 340:	vcmpe.f32	s4, s0
 344:	vmrs	APSR_nzcv, fpscr
 348:	vselgt.f32	s0, s4, s0
 34c:	vldr	s4, [sp, #20]
 350:	vcmpe.f32	s6, s0
 354:	vmrs	APSR_nzcv, fpscr
 358:	vselgt.f32	s0, s6, s0
 35c:	vldr	s6, [sp, #24]
 360:	vcmpe.f32	s2, s0
 364:	vmrs	APSR_nzcv, fpscr
 368:	vselgt.f32	s0, s2, s0
 36c:	vldr	s2, [sp, #28]
 370:	vcmpe.f32	s4, s0
 374:	vmrs	APSR_nzcv, fpscr
 378:	vselgt.f32	s0, s4, s0
 37c:	vldr	s4, [sp, #36]	; 0x24
 380:	vcmpe.f32	s6, s0
 384:	vmrs	APSR_nzcv, fpscr
 388:	vselgt.f32	s0, s6, s0
 38c:	vcmpe.f32	s2, s0
 390:	vmrs	APSR_nzcv, fpscr
 394:	vselgt.f32	s0, s2, s0
 398:	vcmpe.f32	s8, s0
 39c:	vmrs	APSR_nzcv, fpscr
 3a0:	vselgt.f32	s0, s8, s0
 3a4:	vcmpe.f32	s4, s0
 3a8:	vmrs	APSR_nzcv, fpscr
 3ac:	vselgt.f32	s0, s4, s0
 3b0:	vcvt.f64.f32	d16, s0
 3b4:	vmov	r2, r3, d16
 3b8:	bl	0 <printf>
 3bc:	vldr	s0, [sp]
 3c0:	vldr	s2, [sp, #4]
 3c4:	vldr	s4, [sp, #8]
 3c8:	vldr	s6, [sp, #12]
 3cc:	vldr	s8, [sp, #32]
 3d0:	movw	r0, #0
 3d4:	movt	r0, #0
 3d8:	vcmpe.f32	s0, s2
 3dc:	vmrs	APSR_nzcv, fpscr
 3e0:	vselgt.f32	s0, s2, s0
 3e4:	vldr	s2, [sp, #16]
 3e8:	vcmpe.f32	s0, s4
 3ec:	vmrs	APSR_nzcv, fpscr
 3f0:	vselgt.f32	s0, s4, s0
 3f4:	vldr	s4, [sp, #20]
 3f8:	vcmpe.f32	s0, s6
 3fc:	vmrs	APSR_nzcv, fpscr
 400:	vselgt.f32	s0, s6, s0
 404:	vldr	s6, [sp, #24]
 408:	vcmpe.f32	s0, s2
 40c:	vmrs	APSR_nzcv, fpscr
 410:	vselgt.f32	s0, s2, s0
 414:	vldr	s2, [sp, #28]
 418:	vcmpe.f32	s0, s4
 41c:	vmrs	APSR_nzcv, fpscr
 420:	vselgt.f32	s0, s4, s0
 424:	vldr	s4, [sp, #36]	; 0x24
 428:	vcmpe.f32	s0, s6
 42c:	vmrs	APSR_nzcv, fpscr
 430:	vselgt.f32	s0, s6, s0
 434:	vcmpe.f32	s0, s2
 438:	vmrs	APSR_nzcv, fpscr
 43c:	vselgt.f32	s0, s2, s0
 440:	vcmpe.f32	s0, s8
 444:	vmrs	APSR_nzcv, fpscr
 448:	vselgt.f32	s0, s8, s0
 44c:	vcmpe.f32	s0, s4
 450:	vmrs	APSR_nzcv, fpscr
 454:	vselgt.f32	s0, s4, s0
 458:	vcvt.f64.f32	d16, s0
 45c:	vmov	r2, r3, d16
 460:	bl	0 <printf>
 464:	movw	r0, #0
 468:	movt	r0, #0
 46c:	bl	0 <printf>
 470:	vldr	s0, [sp]
 474:	movw	r4, #0
 478:	movt	r4, #0
 47c:	mov	r0, r4
 480:	vcvt.f64.f32	d16, s0
 484:	vmov	r2, r3, d16
 488:	bl	0 <printf>
 48c:	vldr	s0, [sp, #4]
 490:	mov	r0, r4
 494:	vcvt.f64.f32	d16, s0
 498:	vmov	r2, r3, d16
 49c:	bl	0 <printf>
 4a0:	vldr	s0, [sp, #8]
 4a4:	mov	r0, r4
 4a8:	vcvt.f64.f32	d16, s0
 4ac:	vmov	r2, r3, d16
 4b0:	bl	0 <printf>
 4b4:	vldr	s0, [sp, #12]
 4b8:	mov	r0, r4
 4bc:	vcvt.f64.f32	d16, s0
 4c0:	vmov	r2, r3, d16
 4c4:	bl	0 <printf>
 4c8:	vldr	s0, [sp, #16]
 4cc:	mov	r0, r4
 4d0:	vcvt.f64.f32	d16, s0
 4d4:	vmov	r2, r3, d16
 4d8:	bl	0 <printf>
 4dc:	vldr	s0, [sp, #20]
 4e0:	mov	r0, r4
 4e4:	vcvt.f64.f32	d16, s0
 4e8:	vmov	r2, r3, d16
 4ec:	bl	0 <printf>
 4f0:	vldr	s0, [sp, #24]
 4f4:	mov	r0, r4
 4f8:	vcvt.f64.f32	d16, s0
 4fc:	vmov	r2, r3, d16
 500:	bl	0 <printf>
 504:	vldr	s0, [sp, #28]
 508:	mov	r0, r4
 50c:	vcvt.f64.f32	d16, s0
 510:	vmov	r2, r3, d16
 514:	bl	0 <printf>
 518:	vldr	s0, [sp, #32]
 51c:	mov	r0, r4
 520:	vcvt.f64.f32	d16, s0
 524:	vmov	r2, r3, d16
 528:	bl	0 <printf>
 52c:	vldr	s0, [sp, #36]	; 0x24
 530:	mov	r0, r4
 534:	vcvt.f64.f32	d16, s0
 538:	vmov	r2, r3, d16
 53c:	bl	0 <printf>
 540:	mov	r0, #10
 544:	bl	0 <putchar>
 548:	mov	r0, #0
 54c:	sub	sp, fp, #16
 550:	pop	{r4, r5, r6, sl, fp, pc}
 554:	.word	0x00000000
