
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #144	; 0x90
       c:	movw	r2, #0
      10:	str	r2, [fp, #-4]
      14:	str	r0, [fp, #-8]
      18:	str	r1, [fp, #-12]
      1c:	movw	r0, #1
      20:	str	r0, [fp, #-16]
      24:	movw	r1, #0
      28:	movt	r1, #0
      2c:	movw	r3, #0
      30:	movt	r3, #0
      34:	str	r3, [r1]
      38:	movw	r1, #0
      3c:	movt	r1, #0
      40:	str	r2, [r1]
      44:	movw	r1, #0
      48:	movt	r1, #0
      4c:	str	r2, [r1]
      50:	movw	r1, #0
      54:	movt	r1, #0
      58:	str	r2, [r1]
      5c:	movw	r1, #0
      60:	movt	r1, #0
      64:	str	r2, [r1]
      68:	movw	r1, #0
      6c:	movt	r1, #0
      70:	str	r2, [r1]
      74:	movw	r1, #0
      78:	movt	r1, #0
      7c:	str	r2, [r1]
      80:	movw	r1, #0
      84:	movt	r1, #0
      88:	str	r2, [r1]
      8c:	movw	r1, #0
      90:	movt	r1, #0
      94:	str	r2, [r1]
      98:	movw	r1, #0
      9c:	movt	r1, #0
      a0:	str	r2, [r1]
      a4:	movw	r1, #0
      a8:	movt	r1, #0
      ac:	str	r0, [r1]
      b0:	ldr	r0, [fp, #-8]
      b4:	cmp	r0, #1
      b8:	ble	168 <main+0x168>
      bc:	ldr	r0, [fp, #-12]
      c0:	ldr	r1, [fp, #-16]
      c4:	add	r0, r0, r1, lsl #2
      c8:	ldr	r0, [r0]
      cc:	movw	r1, #0
      d0:	movt	r1, #0
      d4:	bl	0 <strcmp>
      d8:	cmp	r0, #0
      dc:	beq	104 <main+0x104>
      e0:	ldr	r0, [fp, #-12]
      e4:	ldr	r1, [fp, #-16]
      e8:	add	r0, r0, r1, lsl #2
      ec:	ldr	r0, [r0]
      f0:	movw	r1, #0
      f4:	movt	r1, #0
      f8:	bl	0 <strcmp>
      fc:	cmp	r0, #0
     100:	bne	110 <main+0x110>
     104:	bl	d7c <print_help>
     108:	movw	r0, #0
     10c:	bl	0 <exit>
     110:	ldr	r0, [fp, #-12]
     114:	ldr	r1, [fp, #-16]
     118:	add	r0, r0, r1, lsl #2
     11c:	ldr	r0, [r0]
     120:	movw	r1, #0
     124:	movt	r1, #0
     128:	bl	0 <strcmp>
     12c:	cmp	r0, #0
     130:	beq	158 <main+0x158>
     134:	ldr	r0, [fp, #-12]
     138:	ldr	r1, [fp, #-16]
     13c:	add	r0, r0, r1, lsl #2
     140:	ldr	r0, [r0]
     144:	movw	r1, #0
     148:	movt	r1, #0
     14c:	bl	0 <strcmp>
     150:	cmp	r0, #0
     154:	bne	164 <main+0x164>
     158:	bl	133c <print_version>
     15c:	movw	r0, #0
     160:	bl	0 <exit>
     164:	b	168 <main+0x168>
     168:	ldr	r0, [fp, #-16]
     16c:	add	r0, r0, #1
     170:	ldr	r1, [fp, #-8]
     174:	cmp	r0, r1
     178:	bge	1c8 <main+0x1c8>
     17c:	ldr	r0, [fp, #-12]
     180:	ldr	r1, [fp, #-16]
     184:	add	r0, r0, r1, lsl #2
     188:	ldr	r0, [r0]
     18c:	movw	r1, #0
     190:	movt	r1, #0
     194:	bl	0 <strcmp>
     198:	cmp	r0, #0
     19c:	bne	1c8 <main+0x1c8>
     1a0:	ldr	r0, [fp, #-12]
     1a4:	ldr	r1, [fp, #-16]
     1a8:	add	r1, r1, #1
     1ac:	add	r0, r0, r1, lsl #2
     1b0:	ldr	r0, [r0]
     1b4:	bl	0 <coda_set_definition_path>
     1b8:	ldr	r1, [fp, #-16]
     1bc:	add	r1, r1, #2
     1c0:	str	r1, [fp, #-16]
     1c4:	b	24c <main+0x24c>
     1c8:	movw	r0, #0
     1cc:	movt	r0, #0
     1d0:	str	r0, [fp, #-20]	; 0xffffffec
     1d4:	ldr	r0, [fp, #-12]
     1d8:	ldr	r0, [r0]
     1dc:	ldr	r2, [fp, #-20]	; 0xffffffec
     1e0:	movw	r1, #0
     1e4:	bl	0 <coda_set_definition_path_conditional>
     1e8:	cmp	r0, #0
     1ec:	beq	248 <main+0x248>
     1f0:	movw	r0, #0
     1f4:	movt	r0, #0
     1f8:	ldr	r0, [r0]
     1fc:	ldr	r1, [pc, #2924]	; d70 <main+0xd70>
     200:	ldr	r1, [pc, r1]
     204:	str	r0, [fp, #-60]	; 0xffffffc4
     208:	str	r1, [fp, #-64]	; 0xffffffc0
     20c:	bl	0 <__aeabi_read_tp>
     210:	ldr	r1, [fp, #-64]	; 0xffffffc0
     214:	ldr	r0, [r0, r1]
     218:	bl	0 <coda_errno_to_string>
     21c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     220:	str	r0, [fp, #-68]	; 0xffffffbc
     224:	mov	r0, r1
     228:	movw	r1, #0
     22c:	movt	r1, #0
     230:	ldr	r2, [fp, #-68]	; 0xffffffbc
     234:	bl	0 <fprintf>
     238:	movw	r1, #1
     23c:	str	r0, [sp, #72]	; 0x48
     240:	mov	r0, r1
     244:	bl	0 <exit>
     248:	b	24c <main+0x24c>
     24c:	ldr	r0, [pc, #2848]	; d74 <main+0xd74>
     250:	ldr	r0, [pc, r0]
     254:	str	r0, [sp, #68]	; 0x44
     258:	bl	0 <__aeabi_read_tp>
     25c:	mov	r1, #1
     260:	ldr	r2, [sp, #68]	; 0x44
     264:	str	r1, [r0, r2]
     268:	bl	0 <coda_init>
     26c:	cmp	r0, #0
     270:	beq	2cc <main+0x2cc>
     274:	movw	r0, #0
     278:	movt	r0, #0
     27c:	ldr	r0, [r0]
     280:	ldr	r1, [pc, #2800]	; d78 <main+0xd78>
     284:	ldr	r1, [pc, r1]
     288:	str	r0, [sp, #64]	; 0x40
     28c:	str	r1, [sp, #60]	; 0x3c
     290:	bl	0 <__aeabi_read_tp>
     294:	ldr	r1, [sp, #60]	; 0x3c
     298:	ldr	r0, [r0, r1]
     29c:	bl	0 <coda_errno_to_string>
     2a0:	ldr	r1, [sp, #64]	; 0x40
     2a4:	str	r0, [sp, #56]	; 0x38
     2a8:	mov	r0, r1
     2ac:	movw	r1, #0
     2b0:	movt	r1, #0
     2b4:	ldr	r2, [sp, #56]	; 0x38
     2b8:	bl	0 <fprintf>
     2bc:	movw	r1, #1
     2c0:	str	r0, [sp, #52]	; 0x34
     2c4:	mov	r0, r1
     2c8:	bl	0 <exit>
     2cc:	ldr	r0, [fp, #-16]
     2d0:	ldr	r1, [fp, #-8]
     2d4:	cmp	r0, r1
     2d8:	bne	2e8 <main+0x2e8>
     2dc:	bl	0 <coda_done>
     2e0:	movw	r0, #0
     2e4:	bl	0 <exit>
     2e8:	mov	r0, #0
     2ec:	bl	0 <coda_set_option_perform_conversions>
     2f0:	ldr	r1, [fp, #-12]
     2f4:	ldr	r2, [fp, #-16]
     2f8:	add	r1, r1, r2, lsl #2
     2fc:	ldr	r1, [r1]
     300:	movw	r2, #0
     304:	movt	r2, #0
     308:	str	r0, [sp, #48]	; 0x30
     30c:	mov	r0, r1
     310:	mov	r1, r2
     314:	bl	0 <strcmp>
     318:	cmp	r0, #0
     31c:	bne	380 <main+0x380>
     320:	ldr	r0, [fp, #-16]
     324:	add	r0, r0, #1
     328:	str	r0, [fp, #-16]
     32c:	ldr	r0, [fp, #-16]
     330:	ldr	r1, [fp, #-8]
     334:	sub	r1, r1, #1
     338:	cmp	r0, r1
     33c:	beq	368 <main+0x368>
     340:	movw	r0, #0
     344:	movt	r0, #0
     348:	ldr	r0, [r0]
     34c:	movw	r1, #0
     350:	movt	r1, #0
     354:	bl	0 <fprintf>
     358:	str	r0, [sp, #44]	; 0x2c
     35c:	bl	d7c <print_help>
     360:	movw	r0, #1
     364:	bl	0 <exit>
     368:	ldr	r0, [fp, #-12]
     36c:	ldr	r1, [fp, #-16]
     370:	add	r0, r0, r1, lsl #2
     374:	ldr	r0, [r0]
     378:	bl	0 <generate_html>
     37c:	b	d60 <main+0xd60>
     380:	ldr	r0, [fp, #-12]
     384:	ldr	r1, [fp, #-16]
     388:	add	r0, r0, r1, lsl #2
     38c:	ldr	r0, [r0]
     390:	movw	r1, #0
     394:	movt	r1, #0
     398:	bl	0 <strcmp>
     39c:	cmp	r0, #0
     3a0:	bne	8a4 <main+0x8a4>
     3a4:	movw	r0, #0
     3a8:	str	r0, [fp, #-24]	; 0xffffffe8
     3ac:	str	r0, [fp, #-28]	; 0xffffffe4
     3b0:	mvn	r0, #0
     3b4:	str	r0, [fp, #-32]	; 0xffffffe0
     3b8:	ldr	r0, [fp, #-16]
     3bc:	add	r0, r0, #1
     3c0:	str	r0, [fp, #-16]
     3c4:	ldr	r0, [fp, #-16]
     3c8:	ldr	r1, [fp, #-8]
     3cc:	cmp	r0, r1
     3d0:	bge	780 <main+0x780>
     3d4:	ldr	r0, [fp, #-12]
     3d8:	ldr	r1, [fp, #-16]
     3dc:	add	r0, r0, r1, lsl #2
     3e0:	ldr	r0, [r0]
     3e4:	movw	r1, #0
     3e8:	movt	r1, #0
     3ec:	bl	0 <strcmp>
     3f0:	cmp	r0, #0
     3f4:	beq	41c <main+0x41c>
     3f8:	ldr	r0, [fp, #-12]
     3fc:	ldr	r1, [fp, #-16]
     400:	add	r0, r0, r1, lsl #2
     404:	ldr	r0, [r0]
     408:	movw	r1, #0
     40c:	movt	r1, #0
     410:	bl	0 <strcmp>
     414:	cmp	r0, #0
     418:	bne	430 <main+0x430>
     41c:	movw	r0, #0
     420:	movt	r0, #0
     424:	movw	r1, #1
     428:	str	r1, [r0]
     42c:	b	770 <main+0x770>
     430:	ldr	r0, [fp, #-12]
     434:	ldr	r1, [fp, #-16]
     438:	add	r0, r0, r1, lsl #2
     43c:	ldr	r0, [r0]
     440:	movw	r1, #0
     444:	movt	r1, #0
     448:	bl	0 <strcmp>
     44c:	cmp	r0, #0
     450:	beq	478 <main+0x478>
     454:	ldr	r0, [fp, #-12]
     458:	ldr	r1, [fp, #-16]
     45c:	add	r0, r0, r1, lsl #2
     460:	ldr	r0, [r0]
     464:	movw	r1, #0
     468:	movt	r1, #0
     46c:	bl	0 <strcmp>
     470:	cmp	r0, #0
     474:	bne	48c <main+0x48c>
     478:	movw	r0, #0
     47c:	movt	r0, #0
     480:	movw	r1, #1
     484:	str	r1, [r0]
     488:	b	76c <main+0x76c>
     48c:	ldr	r0, [fp, #-12]
     490:	ldr	r1, [fp, #-16]
     494:	add	r0, r0, r1, lsl #2
     498:	ldr	r0, [r0]
     49c:	movw	r1, #0
     4a0:	movt	r1, #0
     4a4:	bl	0 <strcmp>
     4a8:	cmp	r0, #0
     4ac:	beq	4d4 <main+0x4d4>
     4b0:	ldr	r0, [fp, #-12]
     4b4:	ldr	r1, [fp, #-16]
     4b8:	add	r0, r0, r1, lsl #2
     4bc:	ldr	r0, [r0]
     4c0:	movw	r1, #0
     4c4:	movt	r1, #0
     4c8:	bl	0 <strcmp>
     4cc:	cmp	r0, #0
     4d0:	bne	4e8 <main+0x4e8>
     4d4:	movw	r0, #0
     4d8:	movt	r0, #0
     4dc:	movw	r1, #1
     4e0:	str	r1, [r0]
     4e4:	b	768 <main+0x768>
     4e8:	ldr	r0, [fp, #-12]
     4ec:	ldr	r1, [fp, #-16]
     4f0:	add	r0, r0, r1, lsl #2
     4f4:	ldr	r0, [r0]
     4f8:	movw	r1, #0
     4fc:	movt	r1, #0
     500:	bl	0 <strcmp>
     504:	cmp	r0, #0
     508:	beq	530 <main+0x530>
     50c:	ldr	r0, [fp, #-12]
     510:	ldr	r1, [fp, #-16]
     514:	add	r0, r0, r1, lsl #2
     518:	ldr	r0, [r0]
     51c:	movw	r1, #0
     520:	movt	r1, #0
     524:	bl	0 <strcmp>
     528:	cmp	r0, #0
     52c:	bne	544 <main+0x544>
     530:	movw	r0, #0
     534:	movt	r0, #0
     538:	movw	r1, #1
     53c:	str	r1, [r0]
     540:	b	764 <main+0x764>
     544:	ldr	r0, [fp, #-12]
     548:	ldr	r1, [fp, #-16]
     54c:	add	r0, r0, r1, lsl #2
     550:	ldr	r0, [r0]
     554:	movw	r1, #0
     558:	movt	r1, #0
     55c:	bl	0 <strcmp>
     560:	cmp	r0, #0
     564:	bne	57c <main+0x57c>
     568:	movw	r0, #0
     56c:	movt	r0, #0
     570:	movw	r1, #1
     574:	str	r1, [r0]
     578:	b	760 <main+0x760>
     57c:	ldr	r0, [fp, #-12]
     580:	ldr	r1, [fp, #-16]
     584:	add	r0, r0, r1, lsl #2
     588:	ldr	r0, [r0]
     58c:	movw	r1, #0
     590:	movt	r1, #0
     594:	bl	0 <strcmp>
     598:	cmp	r0, #0
     59c:	bne	5b4 <main+0x5b4>
     5a0:	movw	r0, #0
     5a4:	movt	r0, #0
     5a8:	movw	r1, #1
     5ac:	str	r1, [r0]
     5b0:	b	75c <main+0x75c>
     5b4:	ldr	r0, [fp, #-12]
     5b8:	ldr	r1, [fp, #-16]
     5bc:	add	r0, r0, r1, lsl #2
     5c0:	ldr	r0, [r0]
     5c4:	movw	r1, #0
     5c8:	movt	r1, #0
     5cc:	bl	0 <strcmp>
     5d0:	cmp	r0, #0
     5d4:	bne	5ec <main+0x5ec>
     5d8:	movw	r0, #0
     5dc:	movt	r0, #0
     5e0:	movw	r1, #1
     5e4:	str	r1, [r0]
     5e8:	b	758 <main+0x758>
     5ec:	ldr	r0, [fp, #-12]
     5f0:	ldr	r1, [fp, #-16]
     5f4:	add	r0, r0, r1, lsl #2
     5f8:	ldr	r0, [r0]
     5fc:	movw	r1, #0
     600:	movt	r1, #0
     604:	bl	0 <strcmp>
     608:	cmp	r0, #0
     60c:	bne	624 <main+0x624>
     610:	movw	r0, #0
     614:	movt	r0, #0
     618:	movw	r1, #1
     61c:	str	r1, [r0]
     620:	b	754 <main+0x754>
     624:	ldr	r0, [fp, #-12]
     628:	ldr	r1, [fp, #-16]
     62c:	add	r0, r0, r1, lsl #2
     630:	ldr	r0, [r0]
     634:	movw	r1, #0
     638:	movt	r1, #0
     63c:	bl	0 <strcmp>
     640:	cmp	r0, #0
     644:	bne	65c <main+0x65c>
     648:	movw	r0, #0
     64c:	movt	r0, #0
     650:	movw	r1, #0
     654:	str	r1, [r0]
     658:	b	750 <main+0x750>
     65c:	ldr	r0, [fp, #-12]
     660:	ldr	r1, [fp, #-16]
     664:	add	r0, r0, r1, lsl #2
     668:	ldr	r0, [r0]
     66c:	movw	r1, #0
     670:	movt	r1, #0
     674:	bl	0 <strcmp>
     678:	cmp	r0, #0
     67c:	beq	6a4 <main+0x6a4>
     680:	ldr	r0, [fp, #-12]
     684:	ldr	r1, [fp, #-16]
     688:	add	r0, r0, r1, lsl #2
     68c:	ldr	r0, [r0]
     690:	movw	r1, #0
     694:	movt	r1, #0
     698:	bl	0 <strcmp>
     69c:	cmp	r0, #0
     6a0:	bne	704 <main+0x704>
     6a4:	ldr	r0, [fp, #-16]
     6a8:	add	r0, r0, #1
     6ac:	ldr	r1, [fp, #-8]
     6b0:	cmp	r0, r1
     6b4:	bge	704 <main+0x704>
     6b8:	ldr	r0, [fp, #-12]
     6bc:	ldr	r1, [fp, #-16]
     6c0:	add	r1, r1, #1
     6c4:	add	r0, r0, r1, lsl #2
     6c8:	ldr	r0, [r0]
     6cc:	ldrb	r0, [r0]
     6d0:	cmp	r0, #45	; 0x2d
     6d4:	beq	704 <main+0x704>
     6d8:	ldr	r0, [fp, #-16]
     6dc:	add	r0, r0, #1
     6e0:	str	r0, [fp, #-16]
     6e4:	ldr	r0, [fp, #-12]
     6e8:	ldr	r1, [fp, #-16]
     6ec:	add	r0, r0, r1, lsl #2
     6f0:	ldr	r0, [r0]
     6f4:	movw	r1, #0
     6f8:	movt	r1, #0
     6fc:	str	r0, [r1]
     700:	b	74c <main+0x74c>
     704:	ldr	r0, [fp, #-12]
     708:	ldr	r1, [fp, #-16]
     70c:	add	r0, r0, r1, lsl #2
     710:	ldr	r0, [r0]
     714:	ldrb	r0, [r0]
     718:	cmp	r0, #45	; 0x2d
     71c:	beq	724 <main+0x724>
     720:	b	780 <main+0x780>
     724:	movw	r0, #0
     728:	movt	r0, #0
     72c:	ldr	r0, [r0]
     730:	movw	r1, #0
     734:	movt	r1, #0
     738:	bl	0 <fprintf>
     73c:	str	r0, [sp, #40]	; 0x28
     740:	bl	d7c <print_help>
     744:	movw	r0, #1
     748:	bl	0 <exit>
     74c:	b	750 <main+0x750>
     750:	b	754 <main+0x754>
     754:	b	758 <main+0x758>
     758:	b	75c <main+0x75c>
     75c:	b	760 <main+0x760>
     760:	b	764 <main+0x764>
     764:	b	768 <main+0x768>
     768:	b	76c <main+0x76c>
     76c:	b	770 <main+0x770>
     770:	ldr	r0, [fp, #-16]
     774:	add	r0, r0, #1
     778:	str	r0, [fp, #-16]
     77c:	b	3c4 <main+0x3c4>
     780:	ldr	r0, [fp, #-16]
     784:	ldr	r1, [fp, #-8]
     788:	cmp	r0, r1
     78c:	bge	890 <main+0x890>
     790:	ldr	r0, [fp, #-12]
     794:	ldr	r1, [fp, #-16]
     798:	add	r0, r0, r1, lsl #2
     79c:	ldr	r0, [r0]
     7a0:	str	r0, [fp, #-24]	; 0xffffffe8
     7a4:	ldr	r0, [fp, #-16]
     7a8:	add	r0, r0, #1
     7ac:	str	r0, [fp, #-16]
     7b0:	ldr	r0, [fp, #-16]
     7b4:	ldr	r1, [fp, #-8]
     7b8:	cmp	r0, r1
     7bc:	bge	88c <main+0x88c>
     7c0:	ldr	r0, [fp, #-12]
     7c4:	ldr	r1, [fp, #-16]
     7c8:	add	r0, r0, r1, lsl #2
     7cc:	ldr	r0, [r0]
     7d0:	str	r0, [fp, #-28]	; 0xffffffe4
     7d4:	ldr	r0, [fp, #-16]
     7d8:	add	r0, r0, #1
     7dc:	str	r0, [fp, #-16]
     7e0:	ldr	r0, [fp, #-16]
     7e4:	ldr	r1, [fp, #-8]
     7e8:	cmp	r0, r1
     7ec:	bge	888 <main+0x888>
     7f0:	ldr	r0, [fp, #-12]
     7f4:	ldr	r1, [fp, #-16]
     7f8:	add	r0, r0, r1, lsl #2
     7fc:	ldr	r0, [r0]
     800:	movw	r1, #0
     804:	movt	r1, #0
     808:	sub	r2, fp, #32
     80c:	bl	0 <__isoc99_sscanf>
     810:	cmp	r0, #1
     814:	beq	840 <main+0x840>
     818:	movw	r0, #0
     81c:	movt	r0, #0
     820:	ldr	r0, [r0]
     824:	movw	r1, #0
     828:	movt	r1, #0
     82c:	bl	0 <fprintf>
     830:	str	r0, [sp, #36]	; 0x24
     834:	bl	d7c <print_help>
     838:	movw	r0, #1
     83c:	bl	0 <exit>
     840:	ldr	r0, [fp, #-16]
     844:	add	r0, r0, #1
     848:	str	r0, [fp, #-16]
     84c:	ldr	r0, [fp, #-16]
     850:	ldr	r1, [fp, #-8]
     854:	cmp	r0, r1
     858:	bge	884 <main+0x884>
     85c:	movw	r0, #0
     860:	movt	r0, #0
     864:	ldr	r0, [r0]
     868:	movw	r1, #0
     86c:	movt	r1, #0
     870:	bl	0 <fprintf>
     874:	str	r0, [sp, #32]
     878:	bl	d7c <print_help>
     87c:	movw	r0, #1
     880:	bl	0 <exit>
     884:	b	888 <main+0x888>
     888:	b	88c <main+0x88c>
     88c:	b	890 <main+0x890>
     890:	ldr	r0, [fp, #-24]	; 0xffffffe8
     894:	ldr	r1, [fp, #-28]	; 0xffffffe4
     898:	ldr	r2, [fp, #-32]	; 0xffffffe0
     89c:	bl	0 <generate_list>
     8a0:	b	d5c <main+0xd5c>
     8a4:	ldr	r0, [fp, #-12]
     8a8:	ldr	r1, [fp, #-16]
     8ac:	add	r0, r0, r1, lsl #2
     8b0:	ldr	r0, [r0]
     8b4:	movw	r1, #0
     8b8:	movt	r1, #0
     8bc:	bl	0 <strcmp>
     8c0:	cmp	r0, #0
     8c4:	bne	ad0 <main+0xad0>
     8c8:	movw	r0, #0
     8cc:	str	r0, [fp, #-36]	; 0xffffffdc
     8d0:	str	r0, [fp, #-40]	; 0xffffffd8
     8d4:	str	r0, [fp, #-44]	; 0xffffffd4
     8d8:	mvn	r0, #0
     8dc:	str	r0, [fp, #-48]	; 0xffffffd0
     8e0:	ldr	r0, [fp, #-16]
     8e4:	add	r0, r0, #1
     8e8:	str	r0, [fp, #-16]
     8ec:	ldr	r0, [fp, #-16]
     8f0:	ldr	r1, [fp, #-8]
     8f4:	cmp	r0, r1
     8f8:	bge	9f4 <main+0x9f4>
     8fc:	ldr	r0, [fp, #-12]
     900:	ldr	r1, [fp, #-16]
     904:	add	r0, r0, r1, lsl #2
     908:	ldr	r0, [r0]
     90c:	movw	r1, #0
     910:	movt	r1, #0
     914:	bl	0 <strcmp>
     918:	cmp	r0, #0
     91c:	beq	944 <main+0x944>
     920:	ldr	r0, [fp, #-12]
     924:	ldr	r1, [fp, #-16]
     928:	add	r0, r0, r1, lsl #2
     92c:	ldr	r0, [r0]
     930:	movw	r1, #0
     934:	movt	r1, #0
     938:	bl	0 <strcmp>
     93c:	cmp	r0, #0
     940:	bne	99c <main+0x99c>
     944:	ldr	r0, [fp, #-16]
     948:	add	r0, r0, #1
     94c:	ldr	r1, [fp, #-8]
     950:	cmp	r0, r1
     954:	bge	99c <main+0x99c>
     958:	ldr	r0, [fp, #-12]
     95c:	ldr	r1, [fp, #-16]
     960:	add	r1, r1, #1
     964:	add	r0, r0, r1, lsl #2
     968:	ldr	r0, [r0]
     96c:	ldrb	r0, [r0]
     970:	cmp	r0, #45	; 0x2d
     974:	beq	99c <main+0x99c>
     978:	ldr	r0, [fp, #-16]
     97c:	add	r0, r0, #1
     980:	str	r0, [fp, #-16]
     984:	ldr	r0, [fp, #-12]
     988:	ldr	r1, [fp, #-16]
     98c:	add	r0, r0, r1, lsl #2
     990:	ldr	r0, [r0]
     994:	str	r0, [fp, #-36]	; 0xffffffdc
     998:	b	9e4 <main+0x9e4>
     99c:	ldr	r0, [fp, #-12]
     9a0:	ldr	r1, [fp, #-16]
     9a4:	add	r0, r0, r1, lsl #2
     9a8:	ldr	r0, [r0]
     9ac:	ldrb	r0, [r0]
     9b0:	cmp	r0, #45	; 0x2d
     9b4:	beq	9bc <main+0x9bc>
     9b8:	b	9f4 <main+0x9f4>
     9bc:	movw	r0, #0
     9c0:	movt	r0, #0
     9c4:	ldr	r0, [r0]
     9c8:	movw	r1, #0
     9cc:	movt	r1, #0
     9d0:	bl	0 <fprintf>
     9d4:	str	r0, [sp, #28]
     9d8:	bl	d7c <print_help>
     9dc:	movw	r0, #1
     9e0:	bl	0 <exit>
     9e4:	ldr	r0, [fp, #-16]
     9e8:	add	r0, r0, #1
     9ec:	str	r0, [fp, #-16]
     9f0:	b	8ec <main+0x8ec>
     9f4:	ldr	r0, [fp, #-16]
     9f8:	ldr	r1, [fp, #-8]
     9fc:	sub	r1, r1, #3
     a00:	cmp	r0, r1
     a04:	beq	a30 <main+0xa30>
     a08:	movw	r0, #0
     a0c:	movt	r0, #0
     a10:	ldr	r0, [r0]
     a14:	movw	r1, #0
     a18:	movt	r1, #0
     a1c:	bl	0 <fprintf>
     a20:	str	r0, [sp, #24]
     a24:	bl	d7c <print_help>
     a28:	movw	r0, #1
     a2c:	bl	0 <exit>
     a30:	ldr	r0, [fp, #-12]
     a34:	ldr	r1, [fp, #-16]
     a38:	ldr	r0, [r0, r1, lsl #2]
     a3c:	str	r0, [fp, #-40]	; 0xffffffd8
     a40:	ldr	r0, [fp, #-16]
     a44:	add	r0, r0, #1
     a48:	str	r0, [fp, #-16]
     a4c:	ldr	r0, [fp, #-12]
     a50:	ldr	r1, [fp, #-16]
     a54:	ldr	r0, [r0, r1, lsl #2]
     a58:	str	r0, [fp, #-44]	; 0xffffffd4
     a5c:	ldr	r0, [fp, #-16]
     a60:	add	r0, r0, #1
     a64:	str	r0, [fp, #-16]
     a68:	ldr	r0, [fp, #-12]
     a6c:	ldr	r1, [fp, #-16]
     a70:	add	r0, r0, r1, lsl #2
     a74:	ldr	r0, [r0]
     a78:	movw	r1, #0
     a7c:	movt	r1, #0
     a80:	sub	r2, fp, #48	; 0x30
     a84:	bl	0 <__isoc99_sscanf>
     a88:	cmp	r0, #1
     a8c:	beq	ab8 <main+0xab8>
     a90:	movw	r0, #0
     a94:	movt	r0, #0
     a98:	ldr	r0, [r0]
     a9c:	movw	r1, #0
     aa0:	movt	r1, #0
     aa4:	bl	0 <fprintf>
     aa8:	str	r0, [sp, #20]
     aac:	bl	d7c <print_help>
     ab0:	movw	r0, #1
     ab4:	bl	0 <exit>
     ab8:	ldr	r0, [fp, #-36]	; 0xffffffdc
     abc:	ldr	r1, [fp, #-40]	; 0xffffffd8
     ac0:	ldr	r2, [fp, #-44]	; 0xffffffd4
     ac4:	ldr	r3, [fp, #-48]	; 0xffffffd0
     ac8:	bl	0 <generate_xmlschema>
     acc:	b	d58 <main+0xd58>
     ad0:	ldr	r0, [fp, #-12]
     ad4:	ldr	r1, [fp, #-16]
     ad8:	add	r0, r0, r1, lsl #2
     adc:	ldr	r0, [r0]
     ae0:	movw	r1, #0
     ae4:	movt	r1, #0
     ae8:	bl	0 <strcmp>
     aec:	cmp	r0, #0
     af0:	bne	b90 <main+0xb90>
     af4:	ldr	r0, [fp, #-16]
     af8:	add	r0, r0, #1
     afc:	str	r0, [fp, #-16]
     b00:	ldr	r0, [fp, #-16]
     b04:	ldr	r1, [fp, #-8]
     b08:	sub	r1, r1, #1
     b0c:	cmp	r0, r1
     b10:	beq	b3c <main+0xb3c>
     b14:	movw	r0, #0
     b18:	movt	r0, #0
     b1c:	ldr	r0, [r0]
     b20:	movw	r1, #0
     b24:	movt	r1, #0
     b28:	bl	0 <fprintf>
     b2c:	str	r0, [sp, #16]
     b30:	bl	d7c <print_help>
     b34:	movw	r0, #1
     b38:	bl	0 <exit>
     b3c:	ldr	r0, [fp, #-12]
     b40:	ldr	r1, [fp, #-16]
     b44:	add	r0, r0, r1, lsl #2
     b48:	ldr	r0, [r0]
     b4c:	sub	r1, fp, #52	; 0x34
     b50:	bl	0 <coda_format_from_string>
     b54:	cmp	r0, #0
     b58:	beq	b84 <main+0xb84>
     b5c:	movw	r0, #0
     b60:	movt	r0, #0
     b64:	ldr	r0, [r0]
     b68:	movw	r1, #0
     b6c:	movt	r1, #0
     b70:	bl	0 <fprintf>
     b74:	str	r0, [sp, #12]
     b78:	bl	d7c <print_help>
     b7c:	movw	r0, #1
     b80:	bl	0 <exit>
     b84:	ldr	r0, [fp, #-52]	; 0xffffffcc
     b88:	bl	0 <generate_detection_tree>
     b8c:	b	d54 <main+0xd54>
     b90:	ldr	r0, [fp, #-12]
     b94:	ldr	r1, [fp, #-16]
     b98:	add	r0, r0, r1, lsl #2
     b9c:	ldr	r0, [r0]
     ba0:	movw	r1, #0
     ba4:	movt	r1, #0
     ba8:	bl	0 <strcmp>
     bac:	cmp	r0, #0
     bb0:	bne	d28 <main+0xd28>
     bb4:	movw	r0, #0
     bb8:	str	r0, [fp, #-56]	; 0xffffffc8
     bbc:	ldr	r0, [fp, #-16]
     bc0:	add	r0, r0, #1
     bc4:	str	r0, [fp, #-16]
     bc8:	ldr	r0, [fp, #-16]
     bcc:	ldr	r1, [fp, #-8]
     bd0:	cmp	r0, r1
     bd4:	bge	cd0 <main+0xcd0>
     bd8:	ldr	r0, [fp, #-12]
     bdc:	ldr	r1, [fp, #-16]
     be0:	add	r0, r0, r1, lsl #2
     be4:	ldr	r0, [r0]
     be8:	movw	r1, #0
     bec:	movt	r1, #0
     bf0:	bl	0 <strcmp>
     bf4:	cmp	r0, #0
     bf8:	beq	c20 <main+0xc20>
     bfc:	ldr	r0, [fp, #-12]
     c00:	ldr	r1, [fp, #-16]
     c04:	add	r0, r0, r1, lsl #2
     c08:	ldr	r0, [r0]
     c0c:	movw	r1, #0
     c10:	movt	r1, #0
     c14:	bl	0 <strcmp>
     c18:	cmp	r0, #0
     c1c:	bne	c78 <main+0xc78>
     c20:	ldr	r0, [fp, #-16]
     c24:	add	r0, r0, #1
     c28:	ldr	r1, [fp, #-8]
     c2c:	cmp	r0, r1
     c30:	bge	c78 <main+0xc78>
     c34:	ldr	r0, [fp, #-12]
     c38:	ldr	r1, [fp, #-16]
     c3c:	add	r1, r1, #1
     c40:	add	r0, r0, r1, lsl #2
     c44:	ldr	r0, [r0]
     c48:	ldrb	r0, [r0]
     c4c:	cmp	r0, #45	; 0x2d
     c50:	beq	c78 <main+0xc78>
     c54:	ldr	r0, [fp, #-16]
     c58:	add	r0, r0, #1
     c5c:	str	r0, [fp, #-16]
     c60:	ldr	r0, [fp, #-12]
     c64:	ldr	r1, [fp, #-16]
     c68:	add	r0, r0, r1, lsl #2
     c6c:	ldr	r0, [r0]
     c70:	str	r0, [fp, #-56]	; 0xffffffc8
     c74:	b	cc0 <main+0xcc0>
     c78:	ldr	r0, [fp, #-12]
     c7c:	ldr	r1, [fp, #-16]
     c80:	add	r0, r0, r1, lsl #2
     c84:	ldr	r0, [r0]
     c88:	ldrb	r0, [r0]
     c8c:	cmp	r0, #45	; 0x2d
     c90:	beq	c98 <main+0xc98>
     c94:	b	cd0 <main+0xcd0>
     c98:	movw	r0, #0
     c9c:	movt	r0, #0
     ca0:	ldr	r0, [r0]
     ca4:	movw	r1, #0
     ca8:	movt	r1, #0
     cac:	bl	0 <fprintf>
     cb0:	str	r0, [sp, #8]
     cb4:	bl	d7c <print_help>
     cb8:	movw	r0, #1
     cbc:	bl	0 <exit>
     cc0:	ldr	r0, [fp, #-16]
     cc4:	add	r0, r0, #1
     cc8:	str	r0, [fp, #-16]
     ccc:	b	bc8 <main+0xbc8>
     cd0:	ldr	r0, [fp, #-16]
     cd4:	ldr	r1, [fp, #-8]
     cd8:	sub	r1, r1, #1
     cdc:	cmp	r0, r1
     ce0:	beq	d0c <main+0xd0c>
     ce4:	movw	r0, #0
     ce8:	movt	r0, #0
     cec:	ldr	r0, [r0]
     cf0:	movw	r1, #0
     cf4:	movt	r1, #0
     cf8:	bl	0 <fprintf>
     cfc:	str	r0, [sp, #4]
     d00:	bl	d7c <print_help>
     d04:	movw	r0, #1
     d08:	bl	0 <exit>
     d0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
     d10:	ldr	r1, [fp, #-12]
     d14:	ldr	r2, [fp, #-16]
     d18:	add	r1, r1, r2, lsl #2
     d1c:	ldr	r1, [r1]
     d20:	bl	0 <generate_definition>
     d24:	b	d50 <main+0xd50>
     d28:	movw	r0, #0
     d2c:	movt	r0, #0
     d30:	ldr	r0, [r0]
     d34:	movw	r1, #0
     d38:	movt	r1, #0
     d3c:	bl	0 <fprintf>
     d40:	str	r0, [sp]
     d44:	bl	d7c <print_help>
     d48:	movw	r0, #1
     d4c:	bl	0 <exit>
     d50:	b	d54 <main+0xd54>
     d54:	b	d58 <main+0xd58>
     d58:	b	d5c <main+0xd5c>
     d5c:	b	d60 <main+0xd60>
     d60:	bl	0 <coda_done>
     d64:	movw	r0, #0
     d68:	mov	sp, fp
     d6c:	pop	{fp, pc}
     d70:	.word	0x00000b68
     d74:	.word	0x00000b1c
     d78:	.word	0x00000aec

00000d7c <print_help>:
     d7c:	push	{fp, lr}
     d80:	mov	fp, sp
     d84:	sub	sp, sp, #288	; 0x120
     d88:	movw	r0, #0
     d8c:	movt	r0, #0
     d90:	bl	0 <printf>
     d94:	movw	r1, #0
     d98:	movt	r1, #0
     d9c:	str	r0, [fp, #-4]
     da0:	mov	r0, r1
     da4:	bl	0 <printf>
     da8:	movw	r1, #0
     dac:	movt	r1, #0
     db0:	str	r0, [fp, #-8]
     db4:	mov	r0, r1
     db8:	bl	0 <printf>
     dbc:	movw	r1, #0
     dc0:	movt	r1, #0
     dc4:	str	r0, [fp, #-12]
     dc8:	mov	r0, r1
     dcc:	bl	0 <printf>
     dd0:	movw	r1, #0
     dd4:	movt	r1, #0
     dd8:	str	r0, [fp, #-16]
     ddc:	mov	r0, r1
     de0:	bl	0 <printf>
     de4:	movw	r1, #0
     de8:	movt	r1, #0
     dec:	str	r0, [fp, #-20]	; 0xffffffec
     df0:	mov	r0, r1
     df4:	bl	0 <printf>
     df8:	movw	r1, #0
     dfc:	movt	r1, #0
     e00:	str	r0, [fp, #-24]	; 0xffffffe8
     e04:	mov	r0, r1
     e08:	bl	0 <printf>
     e0c:	movw	r1, #0
     e10:	movt	r1, #0
     e14:	str	r0, [fp, #-28]	; 0xffffffe4
     e18:	mov	r0, r1
     e1c:	bl	0 <printf>
     e20:	movw	r1, #0
     e24:	movt	r1, #0
     e28:	str	r0, [fp, #-32]	; 0xffffffe0
     e2c:	mov	r0, r1
     e30:	bl	0 <printf>
     e34:	movw	r1, #0
     e38:	movt	r1, #0
     e3c:	str	r0, [fp, #-36]	; 0xffffffdc
     e40:	mov	r0, r1
     e44:	bl	0 <printf>
     e48:	movw	r1, #0
     e4c:	movt	r1, #0
     e50:	str	r0, [fp, #-40]	; 0xffffffd8
     e54:	mov	r0, r1
     e58:	bl	0 <printf>
     e5c:	movw	r1, #0
     e60:	movt	r1, #0
     e64:	str	r0, [fp, #-44]	; 0xffffffd4
     e68:	mov	r0, r1
     e6c:	bl	0 <printf>
     e70:	movw	r1, #0
     e74:	movt	r1, #0
     e78:	str	r0, [fp, #-48]	; 0xffffffd0
     e7c:	mov	r0, r1
     e80:	bl	0 <printf>
     e84:	movw	r1, #0
     e88:	movt	r1, #0
     e8c:	str	r0, [fp, #-52]	; 0xffffffcc
     e90:	mov	r0, r1
     e94:	bl	0 <printf>
     e98:	movw	r1, #0
     e9c:	movt	r1, #0
     ea0:	str	r0, [fp, #-56]	; 0xffffffc8
     ea4:	mov	r0, r1
     ea8:	bl	0 <printf>
     eac:	movw	r1, #0
     eb0:	movt	r1, #0
     eb4:	str	r0, [fp, #-60]	; 0xffffffc4
     eb8:	mov	r0, r1
     ebc:	bl	0 <printf>
     ec0:	movw	r1, #0
     ec4:	movt	r1, #0
     ec8:	str	r0, [fp, #-64]	; 0xffffffc0
     ecc:	mov	r0, r1
     ed0:	bl	0 <printf>
     ed4:	movw	r1, #0
     ed8:	movt	r1, #0
     edc:	str	r0, [fp, #-68]	; 0xffffffbc
     ee0:	mov	r0, r1
     ee4:	bl	0 <printf>
     ee8:	movw	r1, #0
     eec:	movt	r1, #0
     ef0:	str	r0, [fp, #-72]	; 0xffffffb8
     ef4:	mov	r0, r1
     ef8:	bl	0 <printf>
     efc:	movw	r1, #0
     f00:	movt	r1, #0
     f04:	str	r0, [fp, #-76]	; 0xffffffb4
     f08:	mov	r0, r1
     f0c:	bl	0 <printf>
     f10:	movw	r1, #0
     f14:	movt	r1, #0
     f18:	str	r0, [fp, #-80]	; 0xffffffb0
     f1c:	mov	r0, r1
     f20:	bl	0 <printf>
     f24:	movw	r1, #0
     f28:	movt	r1, #0
     f2c:	str	r0, [fp, #-84]	; 0xffffffac
     f30:	mov	r0, r1
     f34:	bl	0 <printf>
     f38:	movw	r1, #0
     f3c:	movt	r1, #0
     f40:	str	r0, [fp, #-88]	; 0xffffffa8
     f44:	mov	r0, r1
     f48:	bl	0 <printf>
     f4c:	movw	r1, #0
     f50:	movt	r1, #0
     f54:	str	r0, [fp, #-92]	; 0xffffffa4
     f58:	mov	r0, r1
     f5c:	bl	0 <printf>
     f60:	movw	r1, #0
     f64:	movt	r1, #0
     f68:	str	r0, [fp, #-96]	; 0xffffffa0
     f6c:	mov	r0, r1
     f70:	bl	0 <printf>
     f74:	movw	r1, #0
     f78:	movt	r1, #0
     f7c:	str	r0, [fp, #-100]	; 0xffffff9c
     f80:	mov	r0, r1
     f84:	bl	0 <printf>
     f88:	movw	r1, #0
     f8c:	movt	r1, #0
     f90:	str	r0, [fp, #-104]	; 0xffffff98
     f94:	mov	r0, r1
     f98:	bl	0 <printf>
     f9c:	movw	r1, #0
     fa0:	movt	r1, #0
     fa4:	str	r0, [fp, #-108]	; 0xffffff94
     fa8:	mov	r0, r1
     fac:	bl	0 <printf>
     fb0:	movw	r1, #0
     fb4:	movt	r1, #0
     fb8:	str	r0, [fp, #-112]	; 0xffffff90
     fbc:	mov	r0, r1
     fc0:	bl	0 <printf>
     fc4:	movw	r1, #0
     fc8:	movt	r1, #0
     fcc:	str	r0, [fp, #-116]	; 0xffffff8c
     fd0:	mov	r0, r1
     fd4:	bl	0 <printf>
     fd8:	movw	r1, #0
     fdc:	movt	r1, #0
     fe0:	str	r0, [fp, #-120]	; 0xffffff88
     fe4:	mov	r0, r1
     fe8:	bl	0 <printf>
     fec:	movw	r1, #0
     ff0:	movt	r1, #0
     ff4:	str	r0, [fp, #-124]	; 0xffffff84
     ff8:	mov	r0, r1
     ffc:	bl	0 <printf>
    1000:	movw	r1, #0
    1004:	movt	r1, #0
    1008:	str	r0, [fp, #-128]	; 0xffffff80
    100c:	mov	r0, r1
    1010:	bl	0 <printf>
    1014:	movw	r1, #0
    1018:	movt	r1, #0
    101c:	str	r0, [fp, #-132]	; 0xffffff7c
    1020:	mov	r0, r1
    1024:	bl	0 <printf>
    1028:	movw	r1, #0
    102c:	movt	r1, #0
    1030:	str	r0, [fp, #-136]	; 0xffffff78
    1034:	mov	r0, r1
    1038:	bl	0 <printf>
    103c:	movw	r1, #0
    1040:	movt	r1, #0
    1044:	str	r0, [fp, #-140]	; 0xffffff74
    1048:	mov	r0, r1
    104c:	bl	0 <printf>
    1050:	movw	r1, #0
    1054:	movt	r1, #0
    1058:	str	r0, [sp, #144]	; 0x90
    105c:	mov	r0, r1
    1060:	bl	0 <printf>
    1064:	movw	r1, #0
    1068:	movt	r1, #0
    106c:	str	r0, [sp, #140]	; 0x8c
    1070:	mov	r0, r1
    1074:	bl	0 <printf>
    1078:	movw	r1, #0
    107c:	movt	r1, #0
    1080:	str	r0, [sp, #136]	; 0x88
    1084:	mov	r0, r1
    1088:	bl	0 <printf>
    108c:	movw	r1, #0
    1090:	movt	r1, #0
    1094:	str	r0, [sp, #132]	; 0x84
    1098:	mov	r0, r1
    109c:	bl	0 <printf>
    10a0:	movw	r1, #0
    10a4:	movt	r1, #0
    10a8:	str	r0, [sp, #128]	; 0x80
    10ac:	mov	r0, r1
    10b0:	bl	0 <printf>
    10b4:	movw	r1, #0
    10b8:	movt	r1, #0
    10bc:	str	r0, [sp, #124]	; 0x7c
    10c0:	mov	r0, r1
    10c4:	bl	0 <printf>
    10c8:	movw	r1, #0
    10cc:	movt	r1, #0
    10d0:	str	r0, [sp, #120]	; 0x78
    10d4:	mov	r0, r1
    10d8:	bl	0 <printf>
    10dc:	movw	r1, #0
    10e0:	movt	r1, #0
    10e4:	str	r0, [sp, #116]	; 0x74
    10e8:	mov	r0, r1
    10ec:	bl	0 <printf>
    10f0:	movw	r1, #0
    10f4:	movt	r1, #0
    10f8:	str	r0, [sp, #112]	; 0x70
    10fc:	mov	r0, r1
    1100:	bl	0 <printf>
    1104:	movw	r1, #0
    1108:	movt	r1, #0
    110c:	str	r0, [sp, #108]	; 0x6c
    1110:	mov	r0, r1
    1114:	bl	0 <printf>
    1118:	movw	r1, #0
    111c:	movt	r1, #0
    1120:	str	r0, [sp, #104]	; 0x68
    1124:	mov	r0, r1
    1128:	bl	0 <printf>
    112c:	movw	r1, #0
    1130:	movt	r1, #0
    1134:	str	r0, [sp, #100]	; 0x64
    1138:	mov	r0, r1
    113c:	bl	0 <printf>
    1140:	movw	r1, #0
    1144:	movt	r1, #0
    1148:	str	r0, [sp, #96]	; 0x60
    114c:	mov	r0, r1
    1150:	bl	0 <printf>
    1154:	movw	r1, #0
    1158:	movt	r1, #0
    115c:	str	r0, [sp, #92]	; 0x5c
    1160:	mov	r0, r1
    1164:	bl	0 <printf>
    1168:	movw	r1, #0
    116c:	movt	r1, #0
    1170:	str	r0, [sp, #88]	; 0x58
    1174:	mov	r0, r1
    1178:	bl	0 <printf>
    117c:	movw	r1, #0
    1180:	movt	r1, #0
    1184:	str	r0, [sp, #84]	; 0x54
    1188:	mov	r0, r1
    118c:	bl	0 <printf>
    1190:	movw	r1, #0
    1194:	movt	r1, #0
    1198:	str	r0, [sp, #80]	; 0x50
    119c:	mov	r0, r1
    11a0:	bl	0 <printf>
    11a4:	movw	r1, #0
    11a8:	movt	r1, #0
    11ac:	str	r0, [sp, #76]	; 0x4c
    11b0:	mov	r0, r1
    11b4:	bl	0 <printf>
    11b8:	movw	r1, #0
    11bc:	movt	r1, #0
    11c0:	str	r0, [sp, #72]	; 0x48
    11c4:	mov	r0, r1
    11c8:	bl	0 <printf>
    11cc:	movw	r1, #0
    11d0:	movt	r1, #0
    11d4:	str	r0, [sp, #68]	; 0x44
    11d8:	mov	r0, r1
    11dc:	bl	0 <printf>
    11e0:	movw	r1, #0
    11e4:	movt	r1, #0
    11e8:	str	r0, [sp, #64]	; 0x40
    11ec:	mov	r0, r1
    11f0:	bl	0 <printf>
    11f4:	movw	r1, #0
    11f8:	movt	r1, #0
    11fc:	str	r0, [sp, #60]	; 0x3c
    1200:	mov	r0, r1
    1204:	bl	0 <printf>
    1208:	movw	r1, #0
    120c:	movt	r1, #0
    1210:	str	r0, [sp, #56]	; 0x38
    1214:	mov	r0, r1
    1218:	bl	0 <printf>
    121c:	movw	r1, #0
    1220:	movt	r1, #0
    1224:	str	r0, [sp, #52]	; 0x34
    1228:	mov	r0, r1
    122c:	bl	0 <printf>
    1230:	movw	r1, #0
    1234:	movt	r1, #0
    1238:	str	r0, [sp, #48]	; 0x30
    123c:	mov	r0, r1
    1240:	bl	0 <printf>
    1244:	movw	r1, #0
    1248:	movt	r1, #0
    124c:	str	r0, [sp, #44]	; 0x2c
    1250:	mov	r0, r1
    1254:	bl	0 <printf>
    1258:	movw	r1, #0
    125c:	movt	r1, #0
    1260:	str	r0, [sp, #40]	; 0x28
    1264:	mov	r0, r1
    1268:	bl	0 <printf>
    126c:	movw	r1, #0
    1270:	movt	r1, #0
    1274:	str	r0, [sp, #36]	; 0x24
    1278:	mov	r0, r1
    127c:	bl	0 <printf>
    1280:	movw	r1, #0
    1284:	movt	r1, #0
    1288:	str	r0, [sp, #32]
    128c:	mov	r0, r1
    1290:	bl	0 <printf>
    1294:	movw	r1, #0
    1298:	movt	r1, #0
    129c:	str	r0, [sp, #28]
    12a0:	mov	r0, r1
    12a4:	bl	0 <printf>
    12a8:	movw	r1, #0
    12ac:	movt	r1, #0
    12b0:	str	r0, [sp, #24]
    12b4:	mov	r0, r1
    12b8:	bl	0 <printf>
    12bc:	movw	r1, #0
    12c0:	movt	r1, #0
    12c4:	str	r0, [sp, #20]
    12c8:	mov	r0, r1
    12cc:	bl	0 <printf>
    12d0:	movw	r1, #0
    12d4:	movt	r1, #0
    12d8:	str	r0, [sp, #16]
    12dc:	mov	r0, r1
    12e0:	bl	0 <printf>
    12e4:	movw	r1, #0
    12e8:	movt	r1, #0
    12ec:	str	r0, [sp, #12]
    12f0:	mov	r0, r1
    12f4:	bl	0 <printf>
    12f8:	movw	r1, #0
    12fc:	movt	r1, #0
    1300:	str	r0, [sp, #8]
    1304:	mov	r0, r1
    1308:	bl	0 <printf>
    130c:	movw	r1, #0
    1310:	movt	r1, #0
    1314:	str	r0, [sp, #4]
    1318:	mov	r0, r1
    131c:	bl	0 <printf>
    1320:	movw	r1, #0
    1324:	movt	r1, #0
    1328:	str	r0, [sp]
    132c:	mov	r0, r1
    1330:	bl	0 <printf>
    1334:	mov	sp, fp
    1338:	pop	{fp, pc}

0000133c <print_version>:
    133c:	push	{fp, lr}
    1340:	mov	fp, sp
    1344:	sub	sp, sp, #16
    1348:	ldr	r0, [pc, #76]	; 139c <print_version+0x60>
    134c:	ldr	r0, [pc, r0]
    1350:	str	r0, [fp, #-4]
    1354:	bl	0 <__aeabi_read_tp>
    1358:	ldr	r1, [fp, #-4]
    135c:	ldr	r1, [r0, r1]
    1360:	movw	r0, #0
    1364:	movt	r0, #0
    1368:	bl	0 <printf>
    136c:	movw	r1, #0
    1370:	movt	r1, #0
    1374:	str	r0, [sp, #8]
    1378:	mov	r0, r1
    137c:	bl	0 <printf>
    1380:	movw	r1, #0
    1384:	movt	r1, #0
    1388:	str	r0, [sp, #4]
    138c:	mov	r0, r1
    1390:	bl	0 <printf>
    1394:	mov	sp, fp
    1398:	pop	{fp, pc}
    139c:	.word	0x00000048
