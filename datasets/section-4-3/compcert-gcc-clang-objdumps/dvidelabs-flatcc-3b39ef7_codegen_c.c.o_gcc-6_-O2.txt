
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_str_set_destructor>:
   0:	mov	r0, r1
   4:	b	0 <free>

00000008 <__flatcc_fb_close_output_file.part.1>:
   8:	ldr	r3, [r0, #204]	; 0xcc
   c:	cmp	r3, #0
  10:	bxeq	lr
  14:	push	{r4, lr}
  18:	mov	r4, r0
  1c:	mov	r0, r3
  20:	bl	0 <fclose>
  24:	mov	r3, #0
  28:	str	r3, [r4, #204]	; 0xcc
  2c:	pop	{r4, pc}

00000030 <__flatcc_fb_open_output_file>:
  30:	push	{r4, r5, r6, r7, r8, r9, lr}
  34:	mov	r7, r1
  38:	ldr	r1, [r0, #212]	; 0xd4
  3c:	mov	r6, r0
  40:	sub	sp, sp, #12
  44:	ldr	r5, [r1, #216]	; 0xd8
  48:	mov	r8, r2
  4c:	subs	r0, r5, #0
  50:	mov	r9, r3
  54:	beq	78 <__flatcc_fb_open_output_file+0x48>
  58:	bl	0 <strlen>
  5c:	ldr	r4, [r6, #204]	; 0xcc
  60:	cmp	r4, #0
  64:	movne	r4, #0
  68:	beq	8c <__flatcc_fb_open_output_file+0x5c>
  6c:	mov	r0, r4
  70:	add	sp, sp, #12
  74:	pop	{r4, r5, r6, r7, r8, r9, pc}
  78:	ldr	r4, [r6, #204]	; 0xcc
  7c:	ldr	r5, [pc, #120]	; fc <__flatcc_fb_open_output_file+0xcc>
  80:	cmp	r4, #0
  84:	movne	r4, #0
  88:	bne	6c <__flatcc_fb_open_output_file+0x3c>
  8c:	mov	ip, #1
  90:	mov	r1, r0
  94:	str	r9, [sp]
  98:	mov	r0, r5
  9c:	mov	r3, r8
  a0:	mov	r2, r7
  a4:	str	ip, [sp, #4]
  a8:	bl	0 <__flatcc_fb_create_join_path_n>
  ac:	subs	r5, r0, #0
  b0:	beq	f8 <__flatcc_fb_open_output_file+0xc8>
  b4:	ldr	r1, [pc, #68]	; 100 <__flatcc_fb_open_output_file+0xd0>
  b8:	bl	0 <fopen>
  bc:	cmp	r0, #0
  c0:	str	r0, [r6, #204]	; 0xcc
  c4:	beq	dc <__flatcc_fb_open_output_file+0xac>
  c8:	mov	r0, r5
  cc:	bl	0 <free>
  d0:	mov	r0, r4
  d4:	add	sp, sp, #12
  d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
  dc:	ldr	r3, [pc, #32]	; 104 <__flatcc_fb_open_output_file+0xd4>
  e0:	mov	r2, r5
  e4:	ldr	r1, [pc, #28]	; 108 <__flatcc_fb_open_output_file+0xd8>
  e8:	ldr	r0, [r3]
  ec:	bl	0 <fprintf>
  f0:	mvn	r4, #0
  f4:	b	c8 <__flatcc_fb_open_output_file+0x98>
  f8:	bl	0 <_str_set_destructor>
  fc:	.word	0x00000024
 100:	.word	0x00000028
 104:	.word	0x00000000
 108:	.word	0x0000002c

0000010c <__flatcc_fb_close_output_file>:
 10c:	ldr	r3, [r0, #212]	; 0xd4
 110:	ldr	r2, [r3, #124]	; 0x7c
 114:	cmp	r2, #0
 118:	bxne	lr
 11c:	ldr	r3, [r3, #108]	; 0x6c
 120:	cmp	r3, #0
 124:	bxne	lr
 128:	b	8 <__flatcc_fb_close_output_file.part.1>

0000012c <__flatcc_fb_end_output_c>:
 12c:	ldr	r3, [pc, #40]	; 15c <__flatcc_fb_end_output_c+0x30>
 130:	push	{r4, lr}
 134:	mov	r4, r0
 138:	ldr	r3, [r3]
 13c:	ldr	r0, [r0, #204]	; 0xcc
 140:	cmp	r3, r0
 144:	cmpne	r0, #0
 148:	beq	150 <__flatcc_fb_end_output_c+0x24>
 14c:	bl	0 <fclose>
 150:	mov	r3, #0
 154:	str	r3, [r4, #204]	; 0xcc
 158:	pop	{r4, pc}
 15c:	.word	0x00000000

00000160 <__flatcc_fb_init_output_c>:
 160:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 164:	mov	r7, r1
 168:	ldr	ip, [r1, #128]	; 0x80
 16c:	ldr	r1, [pc, #420]	; 318 <__flatcc_fb_init_output_c+0x1b8>
 170:	ldr	r8, [r7, #216]	; 0xd8
 174:	cmp	ip, #0
 178:	ldr	r3, [pc, #412]	; 31c <__flatcc_fb_init_output_c+0x1bc>
 17c:	ldr	r9, [pc, #412]	; 320 <__flatcc_fb_init_output_c+0x1c0>
 180:	movne	r9, r1
 184:	mov	r1, #0
 188:	cmp	r8, r1
 18c:	mov	r2, #232	; 0xe8
 190:	moveq	r8, r3
 194:	mov	r6, r0
 198:	bl	0 <memset>
 19c:	ldr	r4, [r7, #196]	; 0xc4
 1a0:	str	r7, [r6, #212]	; 0xd4
 1a4:	cmp	r4, #0
 1a8:	beq	2bc <__flatcc_fb_init_output_c+0x15c>
 1ac:	mov	r0, r4
 1b0:	bl	0 <strlen>
 1b4:	cmp	r0, #100	; 0x64
 1b8:	mov	sl, r0
 1bc:	bhi	2f8 <__flatcc_fb_init_output_c+0x198>
 1c0:	mov	r1, r4
 1c4:	mov	r2, #100	; 0x64
 1c8:	mov	r0, r6
 1cc:	bl	0 <strncpy>
 1d0:	mov	r3, #0
 1d4:	cmp	sl, #0
 1d8:	strb	r3, [r6, #100]	; 0x64
 1dc:	bne	284 <__flatcc_fb_init_output_c+0x124>
 1e0:	ldrb	r4, [r6]
 1e4:	add	r5, r6, #102	; 0x66
 1e8:	cmp	r4, #0
 1ec:	beq	2b4 <__flatcc_fb_init_output_c+0x154>
 1f0:	bl	0 <__ctype_toupper_loc>
 1f4:	mov	r3, r5
 1f8:	mov	r2, r6
 1fc:	ldr	r1, [r0]
 200:	ldr	r1, [r1, r4, lsl #2]
 204:	strb	r1, [r3], #1
 208:	ldrb	r4, [r2, #1]!
 20c:	cmp	r4, #0
 210:	bne	1fc <__flatcc_fb_init_output_c+0x9c>
 214:	add	sl, r6, sl
 218:	mov	r2, #0
 21c:	strb	r2, [r3]
 220:	strb	r2, [sl, #102]	; 0x66
 224:	ldr	r4, [r7, #108]	; 0x6c
 228:	ldr	r3, [r7, #176]	; 0xb0
 22c:	cmp	r4, r2
 230:	str	r3, [r6, #224]	; 0xe0
 234:	bne	29c <__flatcc_fb_init_output_c+0x13c>
 238:	ldr	r3, [r6, #212]	; 0xd4
 23c:	ldr	r1, [r3, #124]	; 0x7c
 240:	cmp	r1, #0
 244:	beq	27c <__flatcc_fb_init_output_c+0x11c>
 248:	mov	r0, r8
 24c:	mov	r3, #1
 250:	ldr	r2, [pc, #196]	; 31c <__flatcc_fb_init_output_c+0x1bc>
 254:	bl	0 <__flatcc_fb_create_join_path>
 258:	subs	r5, r0, #0
 25c:	beq	314 <__flatcc_fb_init_output_c+0x1b4>
 260:	mov	r1, r9
 264:	bl	0 <fopen>
 268:	cmp	r0, #0
 26c:	str	r0, [r6, #204]	; 0xcc
 270:	beq	2dc <__flatcc_fb_init_output_c+0x17c>
 274:	mov	r0, r5
 278:	bl	0 <free>
 27c:	mov	r0, r4
 280:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 284:	add	r1, sl, #1
 288:	mov	r2, #95	; 0x5f
 28c:	mov	r3, #0
 290:	strb	r2, [r6, sl]
 294:	strb	r3, [r6, r1]
 298:	b	1e0 <__flatcc_fb_init_output_c+0x80>
 29c:	ldr	r3, [pc, #128]	; 324 <__flatcc_fb_init_output_c+0x1c4>
 2a0:	mov	r4, r2
 2a4:	mov	r0, r4
 2a8:	ldr	r3, [r3]
 2ac:	str	r3, [r6, #204]	; 0xcc
 2b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 2b4:	mov	r3, r5
 2b8:	b	214 <__flatcc_fb_init_output_c+0xb4>
 2bc:	ldr	r1, [pc, #100]	; 328 <__flatcc_fb_init_output_c+0x1c8>
 2c0:	mov	r2, #100	; 0x64
 2c4:	mov	r0, r6
 2c8:	bl	0 <strncpy>
 2cc:	mov	sl, #11
 2d0:	strb	r4, [r6, #100]	; 0x64
 2d4:	mov	r1, #12
 2d8:	b	288 <__flatcc_fb_init_output_c+0x128>
 2dc:	ldr	r3, [pc, #72]	; 32c <__flatcc_fb_init_output_c+0x1cc>
 2e0:	mov	r2, r5
 2e4:	ldr	r1, [pc, #68]	; 330 <__flatcc_fb_init_output_c+0x1d0>
 2e8:	ldr	r0, [r3]
 2ec:	bl	0 <fprintf>
 2f0:	mvn	r4, #0
 2f4:	b	274 <__flatcc_fb_init_output_c+0x114>
 2f8:	ldr	r3, [pc, #44]	; 32c <__flatcc_fb_init_output_c+0x1cc>
 2fc:	mov	r2, #100	; 0x64
 300:	ldr	r1, [pc, #44]	; 334 <__flatcc_fb_init_output_c+0x1d4>
 304:	ldr	r0, [r3]
 308:	bl	0 <fprintf>
 30c:	mvn	r4, #0
 310:	b	27c <__flatcc_fb_init_output_c+0x11c>
 314:	bl	0 <_str_set_destructor>
 318:	.word	0x00000050
 31c:	.word	0x00000024
 320:	.word	0x00000028
 324:	.word	0x00000000
 328:	.word	0x0000008c
 32c:	.word	0x00000000
 330:	.word	0x0000002c
 334:	.word	0x00000054

00000338 <__flatcc_fb_gen_c_includes>:
 338:	ldr	ip, [r0, #208]	; 0xd0
 33c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 340:	sub	sp, sp, #28
 344:	mov	r3, #0
 348:	mov	r7, r0
 34c:	ldr	r0, [ip, #164]	; 0xa4
 350:	ldr	r5, [ip]
 354:	mov	sl, r1
 358:	mov	fp, r2
 35c:	str	r3, [sp, #12]
 360:	str	r3, [sp, #8]
 364:	str	r3, [sp, #16]
 368:	str	r3, [sp, #20]
 36c:	bl	0 <__flatcc_fb_copy_path>
 370:	mov	r2, #1
 374:	mov	r1, r0
 378:	add	r0, sp, #8
 37c:	bl	0 <str_set_insert_item>
 380:	cmp	r5, #0
 384:	movne	r8, #1
 388:	beq	414 <__flatcc_fb_gen_c_includes+0xdc>
 38c:	ldr	r3, [r7, #212]	; 0xd4
 390:	ldr	r1, [r5, #12]
 394:	ldr	r0, [r5, #8]
 398:	ldr	r2, [r3, #96]	; 0x60
 39c:	bl	0 <__flatcc_fb_create_basename>
 3a0:	subs	r6, r0, #0
 3a4:	beq	450 <__flatcc_fb_gen_c_includes+0x118>
 3a8:	ldr	r5, [r5]
 3ac:	bl	0 <__flatcc_fb_copy_path>
 3b0:	subs	r9, r0, #0
 3b4:	beq	450 <__flatcc_fb_gen_c_includes+0x118>
 3b8:	ldrb	r4, [r9]
 3bc:	cmp	r4, #0
 3c0:	beq	3e4 <__flatcc_fb_gen_c_includes+0xac>
 3c4:	bl	0 <__ctype_toupper_loc>
 3c8:	mov	r2, r9
 3cc:	ldr	r1, [r0]
 3d0:	ldr	r1, [r1, r4, lsl #2]
 3d4:	strb	r1, [r2]
 3d8:	ldrb	r4, [r2, #1]!
 3dc:	cmp	r4, #0
 3e0:	bne	3cc <__flatcc_fb_gen_c_includes+0x94>
 3e4:	mov	r2, r8
 3e8:	mov	r1, r9
 3ec:	add	r0, sp, #8
 3f0:	bl	0 <str_set_insert_item>
 3f4:	cmp	r0, #0
 3f8:	beq	42c <__flatcc_fb_gen_c_includes+0xf4>
 3fc:	mov	r0, r9
 400:	bl	0 <free>
 404:	mov	r0, r6
 408:	bl	0 <free>
 40c:	cmp	r5, #0
 410:	bne	38c <__flatcc_fb_gen_c_includes+0x54>
 414:	add	r0, sp, #8
 418:	mov	r2, #0
 41c:	ldr	r1, [pc, #48]	; 454 <__flatcc_fb_gen_c_includes+0x11c>
 420:	bl	0 <str_set_destroy>
 424:	add	sp, sp, #28
 428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 42c:	ldr	r0, [r7, #204]	; 0xcc
 430:	mov	r2, r9
 434:	stm	sp, {r6, sl}
 438:	mov	r3, fp
 43c:	ldr	r1, [pc, #20]	; 458 <__flatcc_fb_gen_c_includes+0x120>
 440:	bl	0 <fprintf>
 444:	mov	r0, r6
 448:	bl	0 <free>
 44c:	b	40c <__flatcc_fb_gen_c_includes+0xd4>
 450:	bl	0 <_str_set_destructor>
 454:	.word	0x00000000
 458:	.word	0x00000098

0000045c <__flatcc_fb_copy_scope>:
 45c:	ldr	r3, [r0]
 460:	push	{r4, r5, r6, r7, r8, lr}
 464:	cmp	r3, #0
 468:	ldr	r6, [r0, #24]
 46c:	mov	ip, r6
 470:	beq	490 <__flatcc_fb_copy_scope+0x34>
 474:	ldr	r2, [r3, #4]
 478:	ldr	r3, [r3]
 47c:	ldr	r2, [r2, #4]
 480:	cmp	r3, #0
 484:	add	r2, r2, #1
 488:	add	ip, ip, r2
 48c:	bne	474 <__flatcc_fb_copy_scope+0x18>
 490:	cmp	ip, #101	; 0x65
 494:	bhi	4fc <__flatcc_fb_copy_scope+0xa0>
 498:	mov	r7, r1
 49c:	mov	r4, r0
 4a0:	ldr	r1, [r0, #20]
 4a4:	mov	r2, r6
 4a8:	mov	r0, r7
 4ac:	bl	0 <memcpy>
 4b0:	ldr	r5, [r4]
 4b4:	cmp	r5, #0
 4b8:	beq	4ec <__flatcc_fb_copy_scope+0x90>
 4bc:	mov	r8, #95	; 0x5f
 4c0:	ldr	r3, [r5, #4]
 4c4:	add	r0, r7, r6
 4c8:	ldm	r3, {r1, r4}
 4cc:	mov	r2, r4
 4d0:	add	r4, r4, r6
 4d4:	bl	0 <memcpy>
 4d8:	strb	r8, [r7, r4]
 4dc:	ldr	r5, [r5]
 4e0:	add	r6, r4, #1
 4e4:	cmp	r5, #0
 4e8:	bne	4c0 <__flatcc_fb_copy_scope+0x64>
 4ec:	mov	r3, #0
 4f0:	mov	r0, r6
 4f4:	strb	r3, [r7, r6]
 4f8:	pop	{r4, r5, r6, r7, r8, pc}
 4fc:	mov	r3, #0
 500:	strb	r3, [r1]
 504:	mvn	r0, #0
 508:	pop	{r4, r5, r6, r7, r8, pc}

0000050c <__flatcc_fb_scoped_symbol_name>:
 50c:	ldr	r3, [r2, #204]	; 0xcc
 510:	push	{r4, r5, r6, lr}
 514:	cmp	r3, r0
 518:	mov	r4, r2
 51c:	ldr	r5, [r1, #4]
 520:	beq	5b4 <__flatcc_fb_scoped_symbol_name+0xa8>
 524:	mov	r1, r2
 528:	bl	45c <__flatcc_fb_copy_scope>
 52c:	cmp	r0, #0
 530:	str	r0, [r4, #208]	; 0xd0
 534:	blt	594 <__flatcc_fb_scoped_symbol_name+0x88>
 538:	ldr	r2, [r5, #4]
 53c:	add	r3, r2, r0
 540:	cmp	r3, #203	; 0xcb
 544:	str	r2, [r4, #212]	; 0xd4
 548:	str	r3, [r4, #216]	; 0xd8
 54c:	ble	578 <__flatcc_fb_scoped_symbol_name+0x6c>
 550:	ldr	r1, [pc, #100]	; 5bc <__flatcc_fb_scoped_symbol_name+0xb0>
 554:	ldr	r3, [r5]
 558:	ldr	r0, [r1]
 55c:	ldr	r1, [pc, #92]	; 5c0 <__flatcc_fb_scoped_symbol_name+0xb4>
 560:	bl	0 <fprintf>
 564:	ldr	r0, [r4, #208]	; 0xd0
 568:	mov	r3, #203	; 0xcb
 56c:	sub	r2, r3, r0
 570:	str	r2, [r4, #212]	; 0xd4
 574:	str	r3, [r4, #216]	; 0xd8
 578:	ldr	r1, [r5]
 57c:	add	r0, r4, r0
 580:	bl	0 <memcpy>
 584:	ldr	r3, [r4, #216]	; 0xd8
 588:	mov	r2, #0
 58c:	strb	r2, [r4, r3]
 590:	pop	{r4, r5, r6, pc}
 594:	ldr	r3, [pc, #32]	; 5bc <__flatcc_fb_scoped_symbol_name+0xb0>
 598:	mov	r2, #0
 59c:	str	r2, [r4, #208]	; 0xd0
 5a0:	ldr	r3, [r3]
 5a4:	mov	r2, #28
 5a8:	mov	r1, #1
 5ac:	ldr	r0, [pc, #16]	; 5c4 <__flatcc_fb_scoped_symbol_name+0xb8>
 5b0:	bl	0 <fwrite>
 5b4:	ldr	r0, [r4, #208]	; 0xd0
 5b8:	b	538 <__flatcc_fb_scoped_symbol_name+0x2c>
 5bc:	.word	0x00000000
 5c0:	.word	0x000000e0
 5c4:	.word	0x000000c0

000005c8 <__flatcc_fb_codegen_common_c>:
 5c8:	push	{r4, r5, r6, lr}
 5cc:	mov	r4, r0
 5d0:	bl	0 <strlen>
 5d4:	ldr	r3, [r4, #212]	; 0xd4
 5d8:	ldr	r2, [r3, #144]	; 0x90
 5dc:	cmp	r2, #0
 5e0:	sub	r6, r0, #1
 5e4:	bne	64c <__flatcc_fb_codegen_common_c+0x84>
 5e8:	ldr	r3, [r3, #148]	; 0x94
 5ec:	cmp	r3, #0
 5f0:	bne	600 <__flatcc_fb_codegen_common_c+0x38>
 5f4:	mov	r5, #0
 5f8:	mov	r0, r5
 5fc:	pop	{r4, r5, r6, pc}
 600:	mov	r2, r6
 604:	ldr	r3, [pc, #168]	; 6b4 <__flatcc_fb_codegen_common_c+0xec>
 608:	mov	r1, r4
 60c:	mov	r0, r4
 610:	bl	30 <__flatcc_fb_open_output_file>
 614:	cmp	r0, #0
 618:	bne	694 <__flatcc_fb_codegen_common_c+0xcc>
 61c:	mov	r0, r4
 620:	bl	0 <__flatcc_fb_gen_common_c_builder_header>
 624:	ldr	r3, [r4, #212]	; 0xd4
 628:	ldr	r2, [r3, #124]	; 0x7c
 62c:	cmp	r2, #0
 630:	bne	5f4 <__flatcc_fb_codegen_common_c+0x2c>
 634:	ldr	r5, [r3, #108]	; 0x6c
 638:	cmp	r5, #0
 63c:	bne	5f4 <__flatcc_fb_codegen_common_c+0x2c>
 640:	mov	r0, r4
 644:	bl	8 <__flatcc_fb_close_output_file.part.1>
 648:	b	5f8 <__flatcc_fb_codegen_common_c+0x30>
 64c:	ldr	r3, [pc, #100]	; 6b8 <__flatcc_fb_codegen_common_c+0xf0>
 650:	mov	r2, r6
 654:	mov	r1, r4
 658:	mov	r0, r4
 65c:	bl	30 <__flatcc_fb_open_output_file>
 660:	cmp	r0, #0
 664:	bne	694 <__flatcc_fb_codegen_common_c+0xcc>
 668:	mov	r0, r4
 66c:	bl	0 <__flatcc_fb_gen_common_c_header>
 670:	ldr	r3, [r4, #212]	; 0xd4
 674:	ldr	r2, [r3, #124]	; 0x7c
 678:	cmp	r2, #0
 67c:	mov	r5, r0
 680:	beq	69c <__flatcc_fb_codegen_common_c+0xd4>
 684:	cmp	r5, #0
 688:	bne	5f8 <__flatcc_fb_codegen_common_c+0x30>
 68c:	ldr	r3, [r4, #212]	; 0xd4
 690:	b	5e8 <__flatcc_fb_codegen_common_c+0x20>
 694:	mvn	r5, #0
 698:	b	5f8 <__flatcc_fb_codegen_common_c+0x30>
 69c:	ldr	r3, [r3, #108]	; 0x6c
 6a0:	cmp	r3, #0
 6a4:	bne	684 <__flatcc_fb_codegen_common_c+0xbc>
 6a8:	mov	r0, r4
 6ac:	bl	8 <__flatcc_fb_close_output_file.part.1>
 6b0:	b	684 <__flatcc_fb_codegen_common_c+0xbc>
 6b4:	.word	0x0000011c
 6b8:	.word	0x00000108

000006bc <__flatcc_fb_codegen_c>:
 6bc:	mov	r2, #0
 6c0:	push	{r4, r5, r6, lr}
 6c4:	mov	r4, r0
 6c8:	str	r1, [r0, #208]	; 0xd0
 6cc:	ldr	r0, [r1, #60]	; 0x3c
 6d0:	mov	r1, r2
 6d4:	bl	0 <fb_scope_table_find>
 6d8:	ldr	r3, [r4, #208]	; 0xd0
 6dc:	ldr	r5, [r3, #160]	; 0xa0
 6e0:	str	r0, [r4, #216]	; 0xd8
 6e4:	mov	r0, r5
 6e8:	bl	0 <strlen>
 6ec:	ldr	r3, [r4, #212]	; 0xd4
 6f0:	ldr	r2, [r3, #152]	; 0x98
 6f4:	cmp	r2, #0
 6f8:	mov	r6, r0
 6fc:	bne	794 <__flatcc_fb_codegen_c+0xd8>
 700:	ldr	r2, [r3, #156]	; 0x9c
 704:	cmp	r2, #0
 708:	bne	7ec <__flatcc_fb_codegen_c+0x130>
 70c:	ldr	r2, [r3, #160]	; 0xa0
 710:	cmp	r2, #0
 714:	bne	848 <__flatcc_fb_codegen_c+0x18c>
 718:	ldr	r2, [r3, #164]	; 0xa4
 71c:	cmp	r2, #0
 720:	bne	8a4 <__flatcc_fb_codegen_c+0x1e8>
 724:	ldr	r3, [r3, #168]	; 0xa8
 728:	cmp	r3, #0
 72c:	bne	73c <__flatcc_fb_codegen_c+0x80>
 730:	mov	r5, #0
 734:	mov	r0, r5
 738:	pop	{r4, r5, r6, pc}
 73c:	ldr	r1, [r4, #208]	; 0xd0
 740:	mov	r2, r6
 744:	ldr	r3, [pc, #448]	; 90c <__flatcc_fb_codegen_c+0x250>
 748:	ldr	r1, [r1, #160]	; 0xa0
 74c:	mov	r0, r4
 750:	bl	30 <__flatcc_fb_open_output_file>
 754:	cmp	r0, #0
 758:	bne	900 <__flatcc_fb_codegen_c+0x244>
 75c:	mov	r0, r4
 760:	bl	0 <__flatcc_fb_gen_c_json_printer>
 764:	subs	r5, r0, #0
 768:	bne	734 <__flatcc_fb_codegen_c+0x78>
 76c:	ldr	r3, [r4, #212]	; 0xd4
 770:	ldr	r2, [r3, #124]	; 0x7c
 774:	cmp	r2, #0
 778:	bne	730 <__flatcc_fb_codegen_c+0x74>
 77c:	ldr	r5, [r3, #108]	; 0x6c
 780:	cmp	r5, #0
 784:	bne	730 <__flatcc_fb_codegen_c+0x74>
 788:	mov	r0, r4
 78c:	bl	8 <__flatcc_fb_close_output_file.part.1>
 790:	b	734 <__flatcc_fb_codegen_c+0x78>
 794:	mov	r2, r0
 798:	mov	r1, r5
 79c:	ldr	r3, [pc, #364]	; 910 <__flatcc_fb_codegen_c+0x254>
 7a0:	mov	r0, r4
 7a4:	bl	30 <__flatcc_fb_open_output_file>
 7a8:	cmp	r0, #0
 7ac:	bne	900 <__flatcc_fb_codegen_c+0x244>
 7b0:	mov	r0, r4
 7b4:	bl	0 <__flatcc_fb_gen_c_reader>
 7b8:	subs	r5, r0, #0
 7bc:	bne	734 <__flatcc_fb_codegen_c+0x78>
 7c0:	ldr	r3, [r4, #212]	; 0xd4
 7c4:	ldr	r2, [r3, #124]	; 0x7c
 7c8:	cmp	r2, #0
 7cc:	bne	700 <__flatcc_fb_codegen_c+0x44>
 7d0:	ldr	r2, [r3, #108]	; 0x6c
 7d4:	cmp	r2, #0
 7d8:	bne	700 <__flatcc_fb_codegen_c+0x44>
 7dc:	mov	r0, r4
 7e0:	bl	8 <__flatcc_fb_close_output_file.part.1>
 7e4:	ldr	r3, [r4, #212]	; 0xd4
 7e8:	b	700 <__flatcc_fb_codegen_c+0x44>
 7ec:	ldr	r1, [r4, #208]	; 0xd0
 7f0:	ldr	r3, [pc, #284]	; 914 <__flatcc_fb_codegen_c+0x258>
 7f4:	mov	r2, r6
 7f8:	ldr	r1, [r1, #160]	; 0xa0
 7fc:	mov	r0, r4
 800:	bl	30 <__flatcc_fb_open_output_file>
 804:	cmp	r0, #0
 808:	bne	900 <__flatcc_fb_codegen_c+0x244>
 80c:	mov	r0, r4
 810:	bl	0 <__flatcc_fb_gen_c_builder>
 814:	subs	r5, r0, #0
 818:	bne	734 <__flatcc_fb_codegen_c+0x78>
 81c:	ldr	r3, [r4, #212]	; 0xd4
 820:	ldr	r2, [r3, #124]	; 0x7c
 824:	cmp	r2, #0
 828:	bne	70c <__flatcc_fb_codegen_c+0x50>
 82c:	ldr	r2, [r3, #108]	; 0x6c
 830:	cmp	r2, #0
 834:	bne	70c <__flatcc_fb_codegen_c+0x50>
 838:	mov	r0, r4
 83c:	bl	8 <__flatcc_fb_close_output_file.part.1>
 840:	ldr	r3, [r4, #212]	; 0xd4
 844:	b	70c <__flatcc_fb_codegen_c+0x50>
 848:	ldr	r1, [r4, #208]	; 0xd0
 84c:	ldr	r3, [pc, #196]	; 918 <__flatcc_fb_codegen_c+0x25c>
 850:	mov	r2, r6
 854:	ldr	r1, [r1, #160]	; 0xa0
 858:	mov	r0, r4
 85c:	bl	30 <__flatcc_fb_open_output_file>
 860:	cmp	r0, #0
 864:	bne	900 <__flatcc_fb_codegen_c+0x244>
 868:	mov	r0, r4
 86c:	bl	0 <__flatcc_fb_gen_c_verifier>
 870:	subs	r5, r0, #0
 874:	bne	734 <__flatcc_fb_codegen_c+0x78>
 878:	ldr	r3, [r4, #212]	; 0xd4
 87c:	ldr	r2, [r3, #124]	; 0x7c
 880:	cmp	r2, #0
 884:	bne	718 <__flatcc_fb_codegen_c+0x5c>
 888:	ldr	r2, [r3, #108]	; 0x6c
 88c:	cmp	r2, #0
 890:	bne	718 <__flatcc_fb_codegen_c+0x5c>
 894:	mov	r0, r4
 898:	bl	8 <__flatcc_fb_close_output_file.part.1>
 89c:	ldr	r3, [r4, #212]	; 0xd4
 8a0:	b	718 <__flatcc_fb_codegen_c+0x5c>
 8a4:	ldr	r1, [r4, #208]	; 0xd0
 8a8:	ldr	r3, [pc, #108]	; 91c <__flatcc_fb_codegen_c+0x260>
 8ac:	mov	r2, r6
 8b0:	ldr	r1, [r1, #160]	; 0xa0
 8b4:	mov	r0, r4
 8b8:	bl	30 <__flatcc_fb_open_output_file>
 8bc:	cmp	r0, #0
 8c0:	bne	900 <__flatcc_fb_codegen_c+0x244>
 8c4:	mov	r0, r4
 8c8:	bl	0 <__flatcc_fb_gen_c_json_parser>
 8cc:	subs	r5, r0, #0
 8d0:	bne	734 <__flatcc_fb_codegen_c+0x78>
 8d4:	ldr	r3, [r4, #212]	; 0xd4
 8d8:	ldr	r2, [r3, #124]	; 0x7c
 8dc:	cmp	r2, #0
 8e0:	bne	724 <__flatcc_fb_codegen_c+0x68>
 8e4:	ldr	r2, [r3, #108]	; 0x6c
 8e8:	cmp	r2, #0
 8ec:	bne	724 <__flatcc_fb_codegen_c+0x68>
 8f0:	mov	r0, r4
 8f4:	bl	8 <__flatcc_fb_close_output_file.part.1>
 8f8:	ldr	r3, [r4, #212]	; 0xd4
 8fc:	b	724 <__flatcc_fb_codegen_c+0x68>
 900:	mvn	r5, #0
 904:	mov	r0, r5
 908:	pop	{r4, r5, r6, pc}
 90c:	.word	0x00000164
 910:	.word	0x00000130
 914:	.word	0x0000013c
 918:	.word	0x00000148
 91c:	.word	0x00000154

Disassembly of section .text.unlikely:

00000000 <checkmem.part.0>:
   0:	ldr	r3, [pc, #28]	; 24 <checkmem.part.0+0x24>
   4:	push	{r4, lr}
   8:	mov	r2, #34	; 0x22
   c:	mov	r1, #1
  10:	ldr	r3, [r3]
  14:	ldr	r0, [pc, #12]	; 28 <checkmem.part.0+0x28>
  18:	bl	0 <fwrite>
  1c:	mov	r0, #1
  20:	bl	0 <exit>
	...
