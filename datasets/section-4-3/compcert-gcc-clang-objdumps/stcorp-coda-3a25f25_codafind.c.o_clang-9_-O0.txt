
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codafind.dir/tools/codafind/codafind.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <callback>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #24
   c:	str	r0, [fp, #-4]
  10:	str	r1, [fp, #-8]
  14:	str	r2, [sp, #12]
  18:	str	r3, [sp, #8]
  1c:	ldr	r0, [fp, #-8]
  20:	cmp	r0, #0
  24:	bne	4c <callback+0x4c>
  28:	movw	r0, #0
  2c:	movt	r0, #0
  30:	ldr	r0, [r0]
  34:	ldr	r2, [fp, #-4]
  38:	ldr	r3, [sp, #12]
  3c:	movw	r1, #0
  40:	movt	r1, #0
  44:	bl	0 <fprintf>
  48:	b	180 <callback+0x180>
  4c:	ldr	r0, [fp, #-8]
  50:	cmp	r0, #2
  54:	bne	78 <callback+0x78>
  58:	movw	r0, #0
  5c:	movt	r0, #0
  60:	ldr	r0, [r0]
  64:	ldr	r2, [fp, #-4]
  68:	movw	r1, #0
  6c:	movt	r1, #0
  70:	bl	0 <fprintf>
  74:	b	17c <callback+0x17c>
  78:	ldr	r0, [fp, #-8]
  7c:	cmp	r0, #1
  80:	bne	a8 <callback+0xa8>
  84:	movw	r0, #0
  88:	movt	r0, #0
  8c:	ldr	r0, [r0]
  90:	ldr	r2, [fp, #-4]
  94:	ldr	r3, [sp, #12]
  98:	movw	r1, #0
  9c:	movt	r1, #0
  a0:	bl	0 <fprintf>
  a4:	b	178 <callback+0x178>
  a8:	movw	r0, #0
  ac:	movt	r0, #0
  b0:	ldr	r0, [r0]
  b4:	cmp	r0, #0
  b8:	beq	154 <callback+0x154>
  bc:	ldr	r1, [fp, #-4]
  c0:	movw	r0, #0
  c4:	movt	r0, #0
  c8:	bl	0 <printf>
  cc:	ldr	r1, [fp, #-8]
  d0:	cmp	r1, #5
  d4:	str	r1, [sp, #4]
  d8:	bhi	150 <callback+0x150>
  dc:	add	r0, pc, #8
  e0:	ldr	r1, [sp, #4]
  e4:	ldr	r0, [r0, r1, lsl #2]
  e8:	mov	pc, r0
  ec:	.word	0x00000104
  f0:	.word	0x00000104
  f4:	.word	0x00000104
  f8:	.word	0x00000124
  fc:	.word	0x00000144
 100:	.word	0x00000134
 104:	movw	r0, #0
 108:	movt	r0, #0
 10c:	movw	r1, #0
 110:	movt	r1, #0
 114:	movw	r2, #110	; 0x6e
 118:	movw	r3, #0
 11c:	movt	r3, #0
 120:	bl	0 <__assert_fail>
 124:	movw	r0, #0
 128:	movt	r0, #0
 12c:	bl	0 <printf>
 130:	b	150 <callback+0x150>
 134:	movw	r0, #0
 138:	movt	r0, #0
 13c:	bl	0 <printf>
 140:	b	150 <callback+0x150>
 144:	movw	r0, #0
 148:	movt	r0, #0
 14c:	bl	0 <printf>
 150:	b	174 <callback+0x174>
 154:	ldr	r0, [fp, #-8]
 158:	cmp	r0, #4
 15c:	bne	170 <callback+0x170>
 160:	ldr	r1, [fp, #-4]
 164:	movw	r0, #0
 168:	movt	r0, #0
 16c:	bl	0 <printf>
 170:	b	174 <callback+0x174>
 174:	b	178 <callback+0x178>
 178:	b	17c <callback+0x17c>
 17c:	b	180 <callback+0x180>
 180:	movw	r0, #0
 184:	mov	sp, fp
 188:	pop	{fp, pc}

0000018c <main>:
 18c:	push	{fp, lr}
 190:	mov	fp, sp
 194:	sub	sp, sp, #80	; 0x50
 198:	movw	r2, #0
 19c:	str	r2, [fp, #-4]
 1a0:	str	r0, [fp, #-8]
 1a4:	str	r1, [fp, #-12]
 1a8:	str	r2, [fp, #-16]
 1ac:	movw	r0, #0
 1b0:	movt	r0, #0
 1b4:	str	r2, [r0]
 1b8:	movw	r0, #1
 1bc:	str	r0, [fp, #-20]	; 0xffffffec
 1c0:	ldr	r0, [fp, #-8]
 1c4:	cmp	r0, #1
 1c8:	beq	204 <main+0x78>
 1cc:	ldr	r0, [fp, #-12]
 1d0:	ldr	r0, [r0, #4]
 1d4:	movw	r1, #0
 1d8:	movt	r1, #0
 1dc:	bl	0 <strcmp>
 1e0:	cmp	r0, #0
 1e4:	beq	204 <main+0x78>
 1e8:	ldr	r0, [fp, #-12]
 1ec:	ldr	r0, [r0, #4]
 1f0:	movw	r1, #0
 1f4:	movt	r1, #0
 1f8:	bl	0 <strcmp>
 1fc:	cmp	r0, #0
 200:	bne	210 <main+0x84>
 204:	bl	628 <print_help>
 208:	movw	r0, #0
 20c:	bl	0 <exit>
 210:	ldr	r0, [fp, #-12]
 214:	ldr	r0, [r0, #4]
 218:	movw	r1, #0
 21c:	movt	r1, #0
 220:	bl	0 <strcmp>
 224:	cmp	r0, #0
 228:	beq	248 <main+0xbc>
 22c:	ldr	r0, [fp, #-12]
 230:	ldr	r0, [r0, #4]
 234:	movw	r1, #0
 238:	movt	r1, #0
 23c:	bl	0 <strcmp>
 240:	cmp	r0, #0
 244:	bne	254 <main+0xc8>
 248:	bl	878 <print_version>
 24c:	movw	r0, #0
 250:	bl	0 <exit>
 254:	movw	r0, #1
 258:	str	r0, [fp, #-24]	; 0xffffffe8
 25c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 260:	add	r0, r0, #1
 264:	ldr	r1, [fp, #-8]
 268:	cmp	r0, r1
 26c:	bge	2bc <main+0x130>
 270:	ldr	r0, [fp, #-12]
 274:	ldr	r1, [fp, #-24]	; 0xffffffe8
 278:	add	r0, r0, r1, lsl #2
 27c:	ldr	r0, [r0]
 280:	movw	r1, #0
 284:	movt	r1, #0
 288:	bl	0 <strcmp>
 28c:	cmp	r0, #0
 290:	bne	2bc <main+0x130>
 294:	ldr	r0, [fp, #-12]
 298:	ldr	r1, [fp, #-24]	; 0xffffffe8
 29c:	add	r1, r1, #1
 2a0:	add	r0, r0, r1, lsl #2
 2a4:	ldr	r0, [r0]
 2a8:	bl	0 <coda_set_definition_path>
 2ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
 2b0:	add	r1, r1, #2
 2b4:	str	r1, [fp, #-24]	; 0xffffffe8
 2b8:	b	330 <main+0x1a4>
 2bc:	movw	r0, #0
 2c0:	movt	r0, #0
 2c4:	str	r0, [fp, #-28]	; 0xffffffe4
 2c8:	ldr	r0, [fp, #-12]
 2cc:	ldr	r0, [r0]
 2d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
 2d4:	movw	r1, #0
 2d8:	bl	0 <coda_set_definition_path_conditional>
 2dc:	cmp	r0, #0
 2e0:	beq	32c <main+0x1a0>
 2e4:	movw	r0, #0
 2e8:	movt	r0, #0
 2ec:	ldr	r0, [r0]
 2f0:	str	r0, [fp, #-32]	; 0xffffffe0
 2f4:	bl	0 <coda_get_errno>
 2f8:	ldr	r0, [r0]
 2fc:	bl	0 <coda_errno_to_string>
 300:	ldr	r1, [fp, #-32]	; 0xffffffe0
 304:	str	r0, [fp, #-36]	; 0xffffffdc
 308:	mov	r0, r1
 30c:	movw	r1, #0
 310:	movt	r1, #0
 314:	ldr	r2, [fp, #-36]	; 0xffffffdc
 318:	bl	0 <fprintf>
 31c:	movw	r1, #1
 320:	str	r0, [sp, #40]	; 0x28
 324:	mov	r0, r1
 328:	bl	0 <exit>
 32c:	b	330 <main+0x1a4>
 330:	b	334 <main+0x1a8>
 334:	ldr	r0, [fp, #-24]	; 0xffffffe8
 338:	ldr	r1, [fp, #-8]
 33c:	cmp	r0, r1
 340:	bge	4f8 <main+0x36c>
 344:	ldr	r0, [fp, #-12]
 348:	ldr	r1, [fp, #-24]	; 0xffffffe8
 34c:	add	r0, r0, r1, lsl #2
 350:	ldr	r0, [r0]
 354:	movw	r1, #0
 358:	movt	r1, #0
 35c:	bl	0 <strcmp>
 360:	cmp	r0, #0
 364:	beq	38c <main+0x200>
 368:	ldr	r0, [fp, #-12]
 36c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 370:	add	r0, r0, r1, lsl #2
 374:	ldr	r0, [r0]
 378:	movw	r1, #0
 37c:	movt	r1, #0
 380:	bl	0 <strcmp>
 384:	cmp	r0, #0
 388:	bne	398 <main+0x20c>
 38c:	movw	r0, #0
 390:	str	r0, [fp, #-20]	; 0xffffffec
 394:	b	4e8 <main+0x35c>
 398:	ldr	r0, [fp, #-12]
 39c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 3a0:	add	r0, r0, r1, lsl #2
 3a4:	ldr	r0, [r0]
 3a8:	movw	r1, #0
 3ac:	movt	r1, #0
 3b0:	bl	0 <strcmp>
 3b4:	cmp	r0, #0
 3b8:	beq	3e0 <main+0x254>
 3bc:	ldr	r0, [fp, #-12]
 3c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
 3c4:	add	r0, r0, r1, lsl #2
 3c8:	ldr	r0, [r0]
 3cc:	movw	r1, #0
 3d0:	movt	r1, #0
 3d4:	bl	0 <strcmp>
 3d8:	cmp	r0, #0
 3dc:	bne	43c <main+0x2b0>
 3e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
 3e4:	add	r0, r0, #1
 3e8:	ldr	r1, [fp, #-8]
 3ec:	cmp	r0, r1
 3f0:	bge	43c <main+0x2b0>
 3f4:	ldr	r0, [fp, #-12]
 3f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
 3fc:	add	r1, r1, #1
 400:	add	r0, r0, r1, lsl #2
 404:	ldr	r0, [r0]
 408:	ldrb	r0, [r0]
 40c:	cmp	r0, #45	; 0x2d
 410:	beq	43c <main+0x2b0>
 414:	ldr	r0, [fp, #-12]
 418:	ldr	r1, [fp, #-24]	; 0xffffffe8
 41c:	add	r1, r1, #1
 420:	add	r0, r0, r1, lsl #2
 424:	ldr	r0, [r0]
 428:	str	r0, [fp, #-16]
 42c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 430:	add	r0, r0, #1
 434:	str	r0, [fp, #-24]	; 0xffffffe8
 438:	b	4e4 <main+0x358>
 43c:	ldr	r0, [fp, #-12]
 440:	ldr	r1, [fp, #-24]	; 0xffffffe8
 444:	add	r0, r0, r1, lsl #2
 448:	ldr	r0, [r0]
 44c:	movw	r1, #0
 450:	movt	r1, #0
 454:	bl	0 <strcmp>
 458:	cmp	r0, #0
 45c:	beq	484 <main+0x2f8>
 460:	ldr	r0, [fp, #-12]
 464:	ldr	r1, [fp, #-24]	; 0xffffffe8
 468:	add	r0, r0, r1, lsl #2
 46c:	ldr	r0, [r0]
 470:	movw	r1, #0
 474:	movt	r1, #0
 478:	bl	0 <strcmp>
 47c:	cmp	r0, #0
 480:	bne	498 <main+0x30c>
 484:	movw	r0, #0
 488:	movt	r0, #0
 48c:	movw	r1, #1
 490:	str	r1, [r0]
 494:	b	4e0 <main+0x354>
 498:	ldr	r0, [fp, #-12]
 49c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 4a0:	add	r0, r0, r1, lsl #2
 4a4:	ldr	r0, [r0]
 4a8:	ldrb	r0, [r0]
 4ac:	cmp	r0, #45	; 0x2d
 4b0:	beq	4b8 <main+0x32c>
 4b4:	b	4f8 <main+0x36c>
 4b8:	movw	r0, #0
 4bc:	movt	r0, #0
 4c0:	ldr	r0, [r0]
 4c4:	movw	r1, #0
 4c8:	movt	r1, #0
 4cc:	bl	0 <fprintf>
 4d0:	str	r0, [sp, #36]	; 0x24
 4d4:	bl	628 <print_help>
 4d8:	movw	r0, #1
 4dc:	bl	0 <exit>
 4e0:	b	4e4 <main+0x358>
 4e4:	b	4e8 <main+0x35c>
 4e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 4ec:	add	r0, r0, #1
 4f0:	str	r0, [fp, #-24]	; 0xffffffe8
 4f4:	b	334 <main+0x1a8>
 4f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 4fc:	ldr	r1, [fp, #-8]
 500:	cmp	r0, r1
 504:	bne	530 <main+0x3a4>
 508:	movw	r0, #0
 50c:	movt	r0, #0
 510:	ldr	r0, [r0]
 514:	movw	r1, #0
 518:	movt	r1, #0
 51c:	bl	0 <fprintf>
 520:	str	r0, [sp, #32]
 524:	bl	628 <print_help>
 528:	movw	r0, #1
 52c:	bl	0 <exit>
 530:	bl	0 <coda_init>
 534:	cmp	r0, #0
 538:	beq	584 <main+0x3f8>
 53c:	movw	r0, #0
 540:	movt	r0, #0
 544:	ldr	r0, [r0]
 548:	str	r0, [sp, #28]
 54c:	bl	0 <coda_get_errno>
 550:	ldr	r0, [r0]
 554:	bl	0 <coda_errno_to_string>
 558:	ldr	r1, [sp, #28]
 55c:	str	r0, [sp, #24]
 560:	mov	r0, r1
 564:	movw	r1, #0
 568:	movt	r1, #0
 56c:	ldr	r2, [sp, #24]
 570:	bl	0 <fprintf>
 574:	movw	r1, #1
 578:	str	r0, [sp, #20]
 57c:	mov	r0, r1
 580:	bl	0 <exit>
 584:	ldr	r0, [fp, #-20]	; 0xffffffec
 588:	bl	0 <coda_set_option_perform_conversions>
 58c:	ldr	r1, [fp, #-16]
 590:	ldr	r2, [fp, #-8]
 594:	ldr	r3, [fp, #-24]	; 0xffffffe8
 598:	sub	r2, r2, r3
 59c:	ldr	ip, [fp, #-12]
 5a0:	add	r3, ip, r3, lsl #2
 5a4:	str	r0, [sp, #16]
 5a8:	mov	r0, r1
 5ac:	mov	r1, r2
 5b0:	mov	r2, r3
 5b4:	movw	r3, #0
 5b8:	movt	r3, #0
 5bc:	movw	ip, #0
 5c0:	str	ip, [sp]
 5c4:	bl	0 <coda_match_filefilter>
 5c8:	cmp	r0, #0
 5cc:	beq	618 <main+0x48c>
 5d0:	movw	r0, #0
 5d4:	movt	r0, #0
 5d8:	ldr	r0, [r0]
 5dc:	str	r0, [sp, #12]
 5e0:	bl	0 <coda_get_errno>
 5e4:	ldr	r0, [r0]
 5e8:	bl	0 <coda_errno_to_string>
 5ec:	ldr	r1, [sp, #12]
 5f0:	str	r0, [sp, #8]
 5f4:	mov	r0, r1
 5f8:	movw	r1, #0
 5fc:	movt	r1, #0
 600:	ldr	r2, [sp, #8]
 604:	bl	0 <fprintf>
 608:	movw	r1, #1
 60c:	str	r0, [sp, #4]
 610:	mov	r0, r1
 614:	bl	0 <exit>
 618:	bl	0 <coda_done>
 61c:	movw	r0, #0
 620:	mov	sp, fp
 624:	pop	{fp, pc}

00000628 <print_help>:
 628:	push	{fp, lr}
 62c:	mov	fp, sp
 630:	sub	sp, sp, #112	; 0x70
 634:	movw	r0, #0
 638:	movt	r0, #0
 63c:	bl	0 <printf>
 640:	movw	r1, #0
 644:	movt	r1, #0
 648:	str	r0, [fp, #-4]
 64c:	mov	r0, r1
 650:	bl	0 <printf>
 654:	movw	r1, #0
 658:	movt	r1, #0
 65c:	str	r0, [fp, #-8]
 660:	mov	r0, r1
 664:	bl	0 <printf>
 668:	movw	r1, #0
 66c:	movt	r1, #0
 670:	str	r0, [fp, #-12]
 674:	mov	r0, r1
 678:	bl	0 <printf>
 67c:	movw	r1, #0
 680:	movt	r1, #0
 684:	str	r0, [fp, #-16]
 688:	mov	r0, r1
 68c:	bl	0 <printf>
 690:	movw	r1, #0
 694:	movt	r1, #0
 698:	str	r0, [fp, #-20]	; 0xffffffec
 69c:	mov	r0, r1
 6a0:	bl	0 <printf>
 6a4:	movw	r1, #0
 6a8:	movt	r1, #0
 6ac:	str	r0, [fp, #-24]	; 0xffffffe8
 6b0:	mov	r0, r1
 6b4:	bl	0 <printf>
 6b8:	movw	r1, #0
 6bc:	movt	r1, #0
 6c0:	str	r0, [fp, #-28]	; 0xffffffe4
 6c4:	mov	r0, r1
 6c8:	bl	0 <printf>
 6cc:	movw	r1, #0
 6d0:	movt	r1, #0
 6d4:	str	r0, [fp, #-32]	; 0xffffffe0
 6d8:	mov	r0, r1
 6dc:	bl	0 <printf>
 6e0:	movw	r1, #0
 6e4:	movt	r1, #0
 6e8:	str	r0, [fp, #-36]	; 0xffffffdc
 6ec:	mov	r0, r1
 6f0:	bl	0 <printf>
 6f4:	movw	r1, #0
 6f8:	movt	r1, #0
 6fc:	str	r0, [fp, #-40]	; 0xffffffd8
 700:	mov	r0, r1
 704:	bl	0 <printf>
 708:	movw	r1, #0
 70c:	movt	r1, #0
 710:	str	r0, [fp, #-44]	; 0xffffffd4
 714:	mov	r0, r1
 718:	bl	0 <printf>
 71c:	movw	r1, #0
 720:	movt	r1, #0
 724:	str	r0, [fp, #-48]	; 0xffffffd0
 728:	mov	r0, r1
 72c:	bl	0 <printf>
 730:	movw	r1, #0
 734:	movt	r1, #0
 738:	str	r0, [fp, #-52]	; 0xffffffcc
 73c:	mov	r0, r1
 740:	bl	0 <printf>
 744:	movw	r1, #0
 748:	movt	r1, #0
 74c:	str	r0, [sp, #56]	; 0x38
 750:	mov	r0, r1
 754:	bl	0 <printf>
 758:	movw	r1, #0
 75c:	movt	r1, #0
 760:	str	r0, [sp, #52]	; 0x34
 764:	mov	r0, r1
 768:	bl	0 <printf>
 76c:	movw	r1, #0
 770:	movt	r1, #0
 774:	str	r0, [sp, #48]	; 0x30
 778:	mov	r0, r1
 77c:	bl	0 <printf>
 780:	movw	r1, #0
 784:	movt	r1, #0
 788:	str	r0, [sp, #44]	; 0x2c
 78c:	mov	r0, r1
 790:	bl	0 <printf>
 794:	movw	r1, #0
 798:	movt	r1, #0
 79c:	str	r0, [sp, #40]	; 0x28
 7a0:	mov	r0, r1
 7a4:	bl	0 <printf>
 7a8:	movw	r1, #0
 7ac:	movt	r1, #0
 7b0:	str	r0, [sp, #36]	; 0x24
 7b4:	mov	r0, r1
 7b8:	bl	0 <printf>
 7bc:	movw	r1, #0
 7c0:	movt	r1, #0
 7c4:	str	r0, [sp, #32]
 7c8:	mov	r0, r1
 7cc:	bl	0 <printf>
 7d0:	movw	r1, #0
 7d4:	movt	r1, #0
 7d8:	str	r0, [sp, #28]
 7dc:	mov	r0, r1
 7e0:	bl	0 <printf>
 7e4:	movw	r1, #0
 7e8:	movt	r1, #0
 7ec:	str	r0, [sp, #24]
 7f0:	mov	r0, r1
 7f4:	bl	0 <printf>
 7f8:	movw	r1, #0
 7fc:	movt	r1, #0
 800:	str	r0, [sp, #20]
 804:	mov	r0, r1
 808:	bl	0 <printf>
 80c:	movw	r1, #0
 810:	movt	r1, #0
 814:	str	r0, [sp, #16]
 818:	mov	r0, r1
 81c:	bl	0 <printf>
 820:	movw	r1, #0
 824:	movt	r1, #0
 828:	str	r0, [sp, #12]
 82c:	mov	r0, r1
 830:	bl	0 <printf>
 834:	movw	r1, #0
 838:	movt	r1, #0
 83c:	str	r0, [sp, #8]
 840:	mov	r0, r1
 844:	bl	0 <printf>
 848:	movw	r1, #0
 84c:	movt	r1, #0
 850:	str	r0, [sp, #4]
 854:	mov	r0, r1
 858:	bl	0 <printf>
 85c:	movw	r1, #0
 860:	movt	r1, #0
 864:	str	r0, [sp]
 868:	mov	r0, r1
 86c:	bl	0 <printf>
 870:	mov	sp, fp
 874:	pop	{fp, pc}

00000878 <print_version>:
 878:	push	{fp, lr}
 87c:	mov	fp, sp
 880:	sub	sp, sp, #16
 884:	bl	0 <coda_get_libcoda_version>
 888:	movw	r1, #0
 88c:	movt	r1, #0
 890:	str	r0, [fp, #-4]
 894:	mov	r0, r1
 898:	ldr	r1, [fp, #-4]
 89c:	bl	0 <printf>
 8a0:	movw	r1, #0
 8a4:	movt	r1, #0
 8a8:	str	r0, [sp, #8]
 8ac:	mov	r0, r1
 8b0:	bl	0 <printf>
 8b4:	movw	r1, #0
 8b8:	movt	r1, #0
 8bc:	str	r0, [sp, #4]
 8c0:	mov	r0, r1
 8c4:	bl	0 <printf>
 8c8:	mov	sp, fp
 8cc:	pop	{fp, pc}
