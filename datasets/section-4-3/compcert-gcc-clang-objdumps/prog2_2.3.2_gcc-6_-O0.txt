
../compcert-repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

000109c0 <.init>:
   109c0:	push	{r3, lr}
   109c4:	bl	10b00 <_start@@Base+0x3c>
   109c8:	pop	{r3, pc}

Disassembly of section .plt:

000109cc <calloc@plt-0x14>:
   109cc:	push	{lr}		; (str lr, [sp, #-4]!)
   109d0:	ldr	lr, [pc, #4]	; 109dc <calloc@plt-0x4>
   109d4:	add	lr, pc, lr
   109d8:	ldr	pc, [lr, #8]!
   109dc:	andeq	r1, r1, r4, lsr #12

000109e0 <calloc@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1572]!	; 0x624

000109ec <raise@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1564]!	; 0x61c

000109f8 <strcmp@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1556]!	; 0x614

00010a04 <printf@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1548]!	; 0x60c

00010a10 <free@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1540]!	; 0x604

00010a1c <fgets@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a28 <time@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a34 <realloc@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a40 <strcat@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a4c <strcpy@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a58 <puts@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a64 <malloc@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a70 <__libc_start_main@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a7c <__gmon_start__@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a88 <strlen@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a94 <srand@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1452]!	; 0x5ac

00010aa0 <rand@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1444]!	; 0x5a4

00010aac <__isoc99_scanf@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1436]!	; 0x59c

00010ab8 <abort@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #69632	; 0x11000
   10ac0:	ldr	pc, [ip, #1428]!	; 0x594

Disassembly of section .text:

00010ac4 <_start@@Base>:
   10ac4:	mov	fp, #0
   10ac8:	mov	lr, #0
   10acc:	pop	{r1}		; (ldr r1, [sp], #4)
   10ad0:	mov	r2, sp
   10ad4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ad8:	push	{r0}		; (str r0, [sp, #-4]!)
   10adc:	ldr	ip, [pc, #16]	; 10af4 <_start@@Base+0x30>
   10ae0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ae4:	ldr	r0, [pc, #12]	; 10af8 <_start@@Base+0x34>
   10ae8:	ldr	r3, [pc, #12]	; 10afc <_start@@Base+0x38>
   10aec:	bl	10a70 <__libc_start_main@plt>
   10af0:	bl	10ab8 <abort@plt>
   10af4:	andeq	r1, r1, r8, lsl #21
   10af8:	andeq	r0, r1, r8, asr ip
   10afc:	andeq	r1, r1, r8, lsr #20
   10b00:	ldr	r3, [pc, #20]	; 10b1c <_start@@Base+0x58>
   10b04:	ldr	r2, [pc, #20]	; 10b20 <_start@@Base+0x5c>
   10b08:	add	r3, pc, r3
   10b0c:	ldr	r2, [r3, r2]
   10b10:	cmp	r2, #0
   10b14:	bxeq	lr
   10b18:	b	10a7c <__gmon_start__@plt>
   10b1c:	strdeq	r1, [r1], -r0
   10b20:	andeq	r0, r0, r8, asr r0
   10b24:	ldr	r3, [pc, #28]	; 10b48 <_start@@Base+0x84>
   10b28:	ldr	r0, [pc, #28]	; 10b4c <_start@@Base+0x88>
   10b2c:	sub	r3, r3, r0
   10b30:	cmp	r3, #6
   10b34:	bxls	lr
   10b38:	ldr	r3, [pc, #16]	; 10b50 <_start@@Base+0x8c>
   10b3c:	cmp	r3, #0
   10b40:	bxeq	lr
   10b44:	bx	r3
   10b48:	andeq	r2, r2, r7, rrx
   10b4c:	andeq	r2, r2, r4, rrx
   10b50:	andeq	r0, r0, r0
   10b54:	ldr	r1, [pc, #36]	; 10b80 <_start@@Base+0xbc>
   10b58:	ldr	r0, [pc, #36]	; 10b84 <_start@@Base+0xc0>
   10b5c:	sub	r1, r1, r0
   10b60:	asr	r1, r1, #2
   10b64:	add	r1, r1, r1, lsr #31
   10b68:	asrs	r1, r1, #1
   10b6c:	bxeq	lr
   10b70:	ldr	r3, [pc, #16]	; 10b88 <_start@@Base+0xc4>
   10b74:	cmp	r3, #0
   10b78:	bxeq	lr
   10b7c:	bx	r3
   10b80:	andeq	r2, r2, r4, rrx
   10b84:	andeq	r2, r2, r4, rrx
   10b88:	andeq	r0, r0, r0
   10b8c:	push	{r4, lr}
   10b90:	ldr	r4, [pc, #24]	; 10bb0 <_start@@Base+0xec>
   10b94:	ldrb	r3, [r4]
   10b98:	cmp	r3, #0
   10b9c:	popne	{r4, pc}
   10ba0:	bl	10b24 <_start@@Base+0x60>
   10ba4:	mov	r3, #1
   10ba8:	strb	r3, [r4]
   10bac:	pop	{r4, pc}
   10bb0:	andeq	r2, r2, ip, rrx
   10bb4:	ldr	r0, [pc, #40]	; 10be4 <_start@@Base+0x120>
   10bb8:	ldr	r3, [r0]
   10bbc:	cmp	r3, #0
   10bc0:	bne	10bc8 <_start@@Base+0x104>
   10bc4:	b	10b54 <_start@@Base+0x90>
   10bc8:	ldr	r3, [pc, #24]	; 10be8 <_start@@Base+0x124>
   10bcc:	cmp	r3, #0
   10bd0:	beq	10bc4 <_start@@Base+0x100>
   10bd4:	push	{r4, lr}
   10bd8:	blx	r3
   10bdc:	pop	{r4, lr}
   10be0:	b	10b54 <_start@@Base+0x90>
   10be4:	andeq	r1, r2, r4, lsl pc
   10be8:	andeq	r0, r0, r0

00010bec <imprime@@Base>:
   10bec:	push	{r4, fp, lr}
   10bf0:	add	fp, sp, #8
   10bf4:	sub	sp, sp, #20
   10bf8:	str	r0, [fp, #-24]	; 0xffffffe8
   10bfc:	mov	r3, #0
   10c00:	str	r3, [fp, #-16]
   10c04:	b	10c3c <imprime@@Base+0x50>
   10c08:	ldr	r3, [fp, #-16]
   10c0c:	add	r4, r3, #1
   10c10:	ldr	r1, [fp, #-16]
   10c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10c18:	bl	11010 <vetor_elemento@@Base>
   10c1c:	mov	r3, r0
   10c20:	mov	r2, r3
   10c24:	mov	r1, r4
   10c28:	ldr	r0, [pc, #36]	; 10c54 <imprime@@Base+0x68>
   10c2c:	bl	10a04 <printf@plt>
   10c30:	ldr	r3, [fp, #-16]
   10c34:	add	r3, r3, #1
   10c38:	str	r3, [fp, #-16]
   10c3c:	ldr	r3, [fp, #-16]
   10c40:	cmp	r3, #4
   10c44:	ble	10c08 <imprime@@Base+0x1c>
   10c48:	nop			; (mov r0, r0)
   10c4c:	sub	sp, fp, #8
   10c50:	pop	{r4, fp, pc}
   10c54:	muleq	r1, r8, sl

00010c58 <main@@Base>:
   10c58:	push	{fp, lr}
   10c5c:	add	fp, sp, #4
   10c60:	sub	sp, sp, #112	; 0x70
   10c64:	bl	10db4 <vetor_novo@@Base>
   10c68:	str	r0, [fp, #-12]
   10c6c:	mov	r3, #0
   10c70:	str	r3, [fp, #-8]
   10c74:	b	10ce8 <main@@Base+0x90>
   10c78:	ldr	r3, [fp, #-8]
   10c7c:	add	r3, r3, #1
   10c80:	mov	r1, r3
   10c84:	ldr	r0, [pc, #268]	; 10d98 <main@@Base+0x140>
   10c88:	bl	10a04 <printf@plt>
   10c8c:	ldr	r3, [pc, #264]	; 10d9c <main@@Base+0x144>
   10c90:	ldr	r2, [r3]
   10c94:	sub	r3, fp, #112	; 0x70
   10c98:	mov	r1, #100	; 0x64
   10c9c:	mov	r0, r3
   10ca0:	bl	10a1c <fgets@plt>
   10ca4:	sub	r3, fp, #112	; 0x70
   10ca8:	mov	r0, r3
   10cac:	bl	10a88 <strlen@plt>
   10cb0:	mov	r3, r0
   10cb4:	sub	r3, r3, #1
   10cb8:	sub	r2, fp, #4
   10cbc:	add	r3, r2, r3
   10cc0:	mov	r2, #0
   10cc4:	strb	r2, [r3, #-108]	; 0xffffff94
   10cc8:	sub	r3, fp, #112	; 0x70
   10ccc:	ldr	r2, [fp, #-8]
   10cd0:	mov	r1, r3
   10cd4:	ldr	r0, [fp, #-12]
   10cd8:	bl	11080 <vetor_insere@@Base>
   10cdc:	ldr	r3, [fp, #-8]
   10ce0:	add	r3, r3, #1
   10ce4:	str	r3, [fp, #-8]
   10ce8:	ldr	r3, [fp, #-8]
   10cec:	cmp	r3, #4
   10cf0:	ble	10c78 <main@@Base+0x20>
   10cf4:	ldr	r0, [fp, #-12]
   10cf8:	bl	10bec <imprime@@Base>
   10cfc:	ldr	r0, [pc, #156]	; 10da0 <main@@Base+0x148>
   10d00:	bl	10a04 <printf@plt>
   10d04:	sub	r3, fp, #112	; 0x70
   10d08:	mov	r1, r3
   10d0c:	ldr	r0, [pc, #144]	; 10da4 <main@@Base+0x14c>
   10d10:	bl	10aac <__isoc99_scanf@plt>
   10d14:	sub	r3, fp, #112	; 0x70
   10d18:	mov	r1, r3
   10d1c:	ldr	r0, [fp, #-12]
   10d20:	bl	11358 <vetor_pesquisa@@Base>
   10d24:	mov	r3, r0
   10d28:	mov	r1, r3
   10d2c:	ldr	r0, [fp, #-12]
   10d30:	bl	11268 <vetor_remove@@Base>
   10d34:	mov	r3, r0
   10d38:	cmp	r3, #0
   10d3c:	beq	10d4c <main@@Base+0xf4>
   10d40:	ldr	r0, [pc, #96]	; 10da8 <main@@Base+0x150>
   10d44:	bl	10a58 <puts@plt>
   10d48:	b	10d54 <main@@Base+0xfc>
   10d4c:	ldr	r0, [fp, #-12]
   10d50:	bl	10bec <imprime@@Base>
   10d54:	ldr	r0, [fp, #-12]
   10d58:	bl	113f4 <vetor_ordena@@Base>
   10d5c:	mov	r3, r0
   10d60:	cmp	r3, #0
   10d64:	beq	10d70 <main@@Base+0x118>
   10d68:	ldr	r0, [pc, #60]	; 10dac <main@@Base+0x154>
   10d6c:	bl	10a04 <printf@plt>
   10d70:	ldr	r0, [pc, #56]	; 10db0 <main@@Base+0x158>
   10d74:	bl	10a58 <puts@plt>
   10d78:	ldr	r0, [fp, #-12]
   10d7c:	bl	10bec <imprime@@Base>
   10d80:	ldr	r0, [fp, #-12]
   10d84:	bl	10e18 <vetor_apaga@@Base>
   10d88:	mov	r3, #0
   10d8c:	mov	r0, r3
   10d90:	sub	sp, fp, #4
   10d94:	pop	{fp, pc}
   10d98:			; <UNDEFINED> instruction: 0x00011ab8
   10d9c:	andeq	r2, r2, r8, rrx
   10da0:	andeq	r1, r1, ip, asr #21
   10da4:	andeq	r1, r1, ip, ror #21
   10da8:	strdeq	r1, [r1], -r0
   10dac:	andeq	r1, r1, r8, lsl #22
   10db0:	andeq	r1, r1, ip, lsr #22

00010db4 <vetor_novo@@Base>:
   10db4:	push	{fp, lr}
   10db8:	add	fp, sp, #4
   10dbc:	sub	sp, sp, #8
   10dc0:	mov	r0, #12
   10dc4:	bl	10a64 <malloc@plt>
   10dc8:	mov	r3, r0
   10dcc:	str	r3, [fp, #-8]
   10dd0:	ldr	r3, [fp, #-8]
   10dd4:	cmp	r3, #0
   10dd8:	bne	10de4 <vetor_novo@@Base+0x30>
   10ddc:	mov	r3, #0
   10de0:	b	10e0c <vetor_novo@@Base+0x58>
   10de4:	ldr	r3, [fp, #-8]
   10de8:	mov	r2, #0
   10dec:	str	r2, [r3]
   10df0:	ldr	r3, [fp, #-8]
   10df4:	mov	r2, #0
   10df8:	str	r2, [r3, #4]
   10dfc:	ldr	r3, [fp, #-8]
   10e00:	mov	r2, #0
   10e04:	str	r2, [r3, #8]
   10e08:	ldr	r3, [fp, #-8]
   10e0c:	mov	r0, r3
   10e10:	sub	sp, fp, #4
   10e14:	pop	{fp, pc}

00010e18 <vetor_apaga@@Base>:
   10e18:	push	{fp, lr}
   10e1c:	add	fp, sp, #4
   10e20:	sub	sp, sp, #16
   10e24:	str	r0, [fp, #-16]
   10e28:	ldr	r3, [fp, #-16]
   10e2c:	cmp	r3, #0
   10e30:	beq	10e9c <vetor_apaga@@Base+0x84>
   10e34:	mov	r3, #0
   10e38:	str	r3, [fp, #-8]
   10e3c:	b	10e6c <vetor_apaga@@Base+0x54>
   10e40:	ldr	r3, [fp, #-16]
   10e44:	ldr	r2, [r3, #8]
   10e48:	ldr	r3, [fp, #-8]
   10e4c:	lsl	r3, r3, #2
   10e50:	add	r3, r2, r3
   10e54:	ldr	r3, [r3]
   10e58:	mov	r0, r3
   10e5c:	bl	10a10 <free@plt>
   10e60:	ldr	r3, [fp, #-8]
   10e64:	add	r3, r3, #1
   10e68:	str	r3, [fp, #-8]
   10e6c:	ldr	r3, [fp, #-16]
   10e70:	ldr	r2, [r3]
   10e74:	ldr	r3, [fp, #-8]
   10e78:	cmp	r2, r3
   10e7c:	bgt	10e40 <vetor_apaga@@Base+0x28>
   10e80:	ldr	r3, [fp, #-16]
   10e84:	ldr	r3, [r3, #8]
   10e88:	mov	r0, r3
   10e8c:	bl	10a10 <free@plt>
   10e90:	ldr	r0, [fp, #-16]
   10e94:	bl	10a10 <free@plt>
   10e98:	b	10ea0 <vetor_apaga@@Base+0x88>
   10e9c:	nop			; (mov r0, r0)
   10ea0:	sub	sp, fp, #4
   10ea4:	pop	{fp, pc}

00010ea8 <vetor_atribui@@Base>:
   10ea8:	push	{r4, fp, lr}
   10eac:	add	fp, sp, #8
   10eb0:	sub	sp, sp, #28
   10eb4:	str	r0, [fp, #-24]	; 0xffffffe8
   10eb8:	str	r1, [fp, #-28]	; 0xffffffe4
   10ebc:	str	r2, [fp, #-32]	; 0xffffffe0
   10ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ec4:	cmp	r3, #0
   10ec8:	beq	10eec <vetor_atribui@@Base+0x44>
   10ecc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10ed0:	cmp	r3, #0
   10ed4:	blt	10eec <vetor_atribui@@Base+0x44>
   10ed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10edc:	ldr	r2, [r3]
   10ee0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10ee4:	cmp	r2, r3
   10ee8:	bgt	10ef4 <vetor_atribui@@Base+0x4c>
   10eec:	mvn	r3, #0
   10ef0:	b	10fc8 <vetor_atribui@@Base+0x120>
   10ef4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10ef8:	bl	10a88 <strlen@plt>
   10efc:	str	r0, [fp, #-16]
   10f00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f04:	ldr	r2, [r3, #8]
   10f08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f0c:	lsl	r3, r3, #2
   10f10:	add	r3, r2, r3
   10f14:	ldr	r3, [r3]
   10f18:	mov	r0, r3
   10f1c:	bl	10a88 <strlen@plt>
   10f20:	mov	r2, r0
   10f24:	ldr	r3, [fp, #-16]
   10f28:	cmp	r2, r3
   10f2c:	bcs	10fa0 <vetor_atribui@@Base+0xf8>
   10f30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f34:	ldr	r2, [r3, #8]
   10f38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f3c:	lsl	r3, r3, #2
   10f40:	add	r4, r2, r3
   10f44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f48:	ldr	r2, [r3, #8]
   10f4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f50:	lsl	r3, r3, #2
   10f54:	add	r3, r2, r3
   10f58:	ldr	r2, [r3]
   10f5c:	ldr	r3, [fp, #-16]
   10f60:	add	r3, r3, #1
   10f64:	mov	r1, r3
   10f68:	mov	r0, r2
   10f6c:	bl	10a34 <realloc@plt>
   10f70:	mov	r3, r0
   10f74:	str	r3, [r4]
   10f78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f7c:	ldr	r2, [r3, #8]
   10f80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f84:	lsl	r3, r3, #2
   10f88:	add	r3, r2, r3
   10f8c:	ldr	r3, [r3]
   10f90:	cmp	r3, #0
   10f94:	bne	10fa0 <vetor_atribui@@Base+0xf8>
   10f98:	mvn	r3, #0
   10f9c:	b	10fc8 <vetor_atribui@@Base+0x120>
   10fa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fa4:	ldr	r2, [r3, #8]
   10fa8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10fac:	lsl	r3, r3, #2
   10fb0:	add	r3, r2, r3
   10fb4:	ldr	r3, [r3]
   10fb8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10fbc:	mov	r0, r3
   10fc0:	bl	10a4c <strcpy@plt>
   10fc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10fc8:	mov	r0, r3
   10fcc:	sub	sp, fp, #8
   10fd0:	pop	{r4, fp, pc}

00010fd4 <vetor_tamanho@@Base>:
   10fd4:	push	{fp}		; (str fp, [sp, #-4]!)
   10fd8:	add	fp, sp, #0
   10fdc:	sub	sp, sp, #12
   10fe0:	str	r0, [fp, #-8]
   10fe4:	ldr	r3, [fp, #-8]
   10fe8:	cmp	r3, #0
   10fec:	bne	10ff8 <vetor_tamanho@@Base+0x24>
   10ff0:	mvn	r3, #0
   10ff4:	b	11000 <vetor_tamanho@@Base+0x2c>
   10ff8:	ldr	r3, [fp, #-8]
   10ffc:	ldr	r3, [r3]
   11000:	mov	r0, r3
   11004:	add	sp, fp, #0
   11008:	pop	{fp}		; (ldr fp, [sp], #4)
   1100c:	bx	lr

00011010 <vetor_elemento@@Base>:
   11010:	push	{fp}		; (str fp, [sp, #-4]!)
   11014:	add	fp, sp, #0
   11018:	sub	sp, sp, #12
   1101c:	str	r0, [fp, #-8]
   11020:	str	r1, [fp, #-12]
   11024:	ldr	r3, [fp, #-8]
   11028:	cmp	r3, #0
   1102c:	beq	11050 <vetor_elemento@@Base+0x40>
   11030:	ldr	r3, [fp, #-12]
   11034:	cmp	r3, #0
   11038:	blt	11050 <vetor_elemento@@Base+0x40>
   1103c:	ldr	r3, [fp, #-8]
   11040:	ldr	r2, [r3]
   11044:	ldr	r3, [fp, #-12]
   11048:	cmp	r2, r3
   1104c:	bgt	11058 <vetor_elemento@@Base+0x48>
   11050:	mov	r3, #0
   11054:	b	11070 <vetor_elemento@@Base+0x60>
   11058:	ldr	r3, [fp, #-8]
   1105c:	ldr	r2, [r3, #8]
   11060:	ldr	r3, [fp, #-12]
   11064:	lsl	r3, r3, #2
   11068:	add	r3, r2, r3
   1106c:	ldr	r3, [r3]
   11070:	mov	r0, r3
   11074:	add	sp, fp, #0
   11078:	pop	{fp}		; (ldr fp, [sp], #4)
   1107c:	bx	lr

00011080 <vetor_insere@@Base>:
   11080:	push	{r4, fp, lr}
   11084:	add	fp, sp, #8
   11088:	sub	sp, sp, #28
   1108c:	str	r0, [fp, #-24]	; 0xffffffe8
   11090:	str	r1, [fp, #-28]	; 0xffffffe4
   11094:	str	r2, [fp, #-32]	; 0xffffffe0
   11098:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1109c:	cmp	r3, #0
   110a0:	beq	110c4 <vetor_insere@@Base+0x44>
   110a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   110a8:	cmp	r3, #0
   110ac:	blt	110c4 <vetor_insere@@Base+0x44>
   110b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110b4:	ldr	r2, [r3]
   110b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   110bc:	cmp	r2, r3
   110c0:	bge	110cc <vetor_insere@@Base+0x4c>
   110c4:	mvn	r3, #0
   110c8:	b	1125c <vetor_insere@@Base+0x1dc>
   110cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110d0:	ldr	r2, [r3]
   110d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110d8:	ldr	r3, [r3, #4]
   110dc:	cmp	r2, r3
   110e0:	bne	1115c <vetor_insere@@Base+0xdc>
   110e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110e8:	ldr	r3, [r3, #4]
   110ec:	cmp	r3, #0
   110f0:	bne	11104 <vetor_insere@@Base+0x84>
   110f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110f8:	mov	r2, #1
   110fc:	str	r2, [r3, #4]
   11100:	b	11118 <vetor_insere@@Base+0x98>
   11104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11108:	ldr	r3, [r3, #4]
   1110c:	lsl	r2, r3, #1
   11110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11114:	str	r2, [r3, #4]
   11118:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1111c:	ldr	r2, [r3, #8]
   11120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11124:	ldr	r3, [r3, #4]
   11128:	lsl	r3, r3, #2
   1112c:	mov	r1, r3
   11130:	mov	r0, r2
   11134:	bl	10a34 <realloc@plt>
   11138:	mov	r2, r0
   1113c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11140:	str	r2, [r3, #8]
   11144:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11148:	ldr	r3, [r3, #8]
   1114c:	cmp	r3, #0
   11150:	bne	1115c <vetor_insere@@Base+0xdc>
   11154:	mvn	r3, #0
   11158:	b	1125c <vetor_insere@@Base+0x1dc>
   1115c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11160:	ldr	r3, [r3]
   11164:	sub	r3, r3, #1
   11168:	str	r3, [fp, #-16]
   1116c:	b	111b0 <vetor_insere@@Base+0x130>
   11170:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11174:	ldr	r2, [r3, #8]
   11178:	ldr	r3, [fp, #-16]
   1117c:	add	r3, r3, #1
   11180:	lsl	r3, r3, #2
   11184:	add	r3, r2, r3
   11188:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1118c:	ldr	r1, [r2, #8]
   11190:	ldr	r2, [fp, #-16]
   11194:	lsl	r2, r2, #2
   11198:	add	r2, r1, r2
   1119c:	ldr	r2, [r2]
   111a0:	str	r2, [r3]
   111a4:	ldr	r3, [fp, #-16]
   111a8:	sub	r3, r3, #1
   111ac:	str	r3, [fp, #-16]
   111b0:	ldr	r2, [fp, #-16]
   111b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   111b8:	cmp	r2, r3
   111bc:	bge	11170 <vetor_insere@@Base+0xf0>
   111c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   111c4:	ldr	r2, [r3, #8]
   111c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   111cc:	lsl	r3, r3, #2
   111d0:	add	r4, r2, r3
   111d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   111d8:	bl	10a88 <strlen@plt>
   111dc:	mov	r3, r0
   111e0:	add	r3, r3, #1
   111e4:	mov	r1, #1
   111e8:	mov	r0, r3
   111ec:	bl	109e0 <calloc@plt>
   111f0:	mov	r3, r0
   111f4:	str	r3, [r4]
   111f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   111fc:	ldr	r2, [r3, #8]
   11200:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11204:	lsl	r3, r3, #2
   11208:	add	r3, r2, r3
   1120c:	ldr	r3, [r3]
   11210:	cmp	r3, #0
   11214:	bne	11220 <vetor_insere@@Base+0x1a0>
   11218:	mvn	r3, #0
   1121c:	b	1125c <vetor_insere@@Base+0x1dc>
   11220:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11224:	ldr	r2, [r3, #8]
   11228:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1122c:	lsl	r3, r3, #2
   11230:	add	r3, r2, r3
   11234:	ldr	r3, [r3]
   11238:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1123c:	mov	r0, r3
   11240:	bl	10a4c <strcpy@plt>
   11244:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11248:	ldr	r3, [r3]
   1124c:	add	r2, r3, #1
   11250:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11254:	str	r2, [r3]
   11258:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1125c:	mov	r0, r3
   11260:	sub	sp, fp, #8
   11264:	pop	{r4, fp, pc}

00011268 <vetor_remove@@Base>:
   11268:	push	{fp, lr}
   1126c:	add	fp, sp, #4
   11270:	sub	sp, sp, #16
   11274:	str	r0, [fp, #-16]
   11278:	str	r1, [fp, #-20]	; 0xffffffec
   1127c:	ldr	r3, [fp, #-16]
   11280:	cmp	r3, #0
   11284:	beq	112a8 <vetor_remove@@Base+0x40>
   11288:	ldr	r3, [fp, #-20]	; 0xffffffec
   1128c:	cmp	r3, #0
   11290:	blt	112a8 <vetor_remove@@Base+0x40>
   11294:	ldr	r3, [fp, #-16]
   11298:	ldr	r2, [r3]
   1129c:	ldr	r3, [fp, #-20]	; 0xffffffec
   112a0:	cmp	r2, r3
   112a4:	bgt	112b0 <vetor_remove@@Base+0x48>
   112a8:	mvn	r3, #0
   112ac:	b	1134c <vetor_remove@@Base+0xe4>
   112b0:	ldr	r3, [fp, #-16]
   112b4:	ldr	r2, [r3, #8]
   112b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   112bc:	lsl	r3, r3, #2
   112c0:	add	r3, r2, r3
   112c4:	ldr	r3, [r3]
   112c8:	mov	r0, r3
   112cc:	bl	10a10 <free@plt>
   112d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   112d4:	add	r3, r3, #1
   112d8:	str	r3, [fp, #-8]
   112dc:	b	11320 <vetor_remove@@Base+0xb8>
   112e0:	ldr	r3, [fp, #-16]
   112e4:	ldr	r2, [r3, #8]
   112e8:	ldr	r3, [fp, #-8]
   112ec:	sub	r3, r3, #-1073741823	; 0xc0000001
   112f0:	lsl	r3, r3, #2
   112f4:	add	r3, r2, r3
   112f8:	ldr	r2, [fp, #-16]
   112fc:	ldr	r1, [r2, #8]
   11300:	ldr	r2, [fp, #-8]
   11304:	lsl	r2, r2, #2
   11308:	add	r2, r1, r2
   1130c:	ldr	r2, [r2]
   11310:	str	r2, [r3]
   11314:	ldr	r3, [fp, #-8]
   11318:	add	r3, r3, #1
   1131c:	str	r3, [fp, #-8]
   11320:	ldr	r3, [fp, #-16]
   11324:	ldr	r2, [r3]
   11328:	ldr	r3, [fp, #-8]
   1132c:	cmp	r2, r3
   11330:	bgt	112e0 <vetor_remove@@Base+0x78>
   11334:	ldr	r3, [fp, #-16]
   11338:	ldr	r3, [r3]
   1133c:	sub	r2, r3, #1
   11340:	ldr	r3, [fp, #-16]
   11344:	str	r2, [r3]
   11348:	mov	r3, #0
   1134c:	mov	r0, r3
   11350:	sub	sp, fp, #4
   11354:	pop	{fp, pc}

00011358 <vetor_pesquisa@@Base>:
   11358:	push	{fp, lr}
   1135c:	add	fp, sp, #4
   11360:	sub	sp, sp, #16
   11364:	str	r0, [fp, #-16]
   11368:	str	r1, [fp, #-20]	; 0xffffffec
   1136c:	ldr	r3, [fp, #-16]
   11370:	cmp	r3, #0
   11374:	bne	11380 <vetor_pesquisa@@Base+0x28>
   11378:	mvn	r3, #0
   1137c:	b	113e8 <vetor_pesquisa@@Base+0x90>
   11380:	mov	r3, #0
   11384:	str	r3, [fp, #-8]
   11388:	b	113d0 <vetor_pesquisa@@Base+0x78>
   1138c:	ldr	r3, [fp, #-16]
   11390:	ldr	r2, [r3, #8]
   11394:	ldr	r3, [fp, #-8]
   11398:	lsl	r3, r3, #2
   1139c:	add	r3, r2, r3
   113a0:	ldr	r3, [r3]
   113a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   113a8:	mov	r0, r3
   113ac:	bl	109f8 <strcmp@plt>
   113b0:	mov	r3, r0
   113b4:	cmp	r3, #0
   113b8:	bne	113c4 <vetor_pesquisa@@Base+0x6c>
   113bc:	ldr	r3, [fp, #-8]
   113c0:	b	113e8 <vetor_pesquisa@@Base+0x90>
   113c4:	ldr	r3, [fp, #-8]
   113c8:	add	r3, r3, #1
   113cc:	str	r3, [fp, #-8]
   113d0:	ldr	r3, [fp, #-16]
   113d4:	ldr	r2, [r3]
   113d8:	ldr	r3, [fp, #-8]
   113dc:	cmp	r2, r3
   113e0:	bgt	1138c <vetor_pesquisa@@Base+0x34>
   113e4:	mvn	r3, #0
   113e8:	mov	r0, r3
   113ec:	sub	sp, fp, #4
   113f0:	pop	{fp, pc}

000113f4 <vetor_ordena@@Base>:
   113f4:	push	{fp, lr}
   113f8:	add	fp, sp, #4
   113fc:	sub	sp, sp, #24
   11400:	str	r0, [fp, #-24]	; 0xffffffe8
   11404:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11408:	cmp	r3, #0
   1140c:	bne	11418 <vetor_ordena@@Base+0x24>
   11410:	mvn	r3, #0
   11414:	b	1150c <vetor_ordena@@Base+0x118>
   11418:	mov	r3, #1
   1141c:	str	r3, [fp, #-8]
   11420:	b	114f4 <vetor_ordena@@Base+0x100>
   11424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11428:	ldr	r2, [r3, #8]
   1142c:	ldr	r3, [fp, #-8]
   11430:	lsl	r3, r3, #2
   11434:	add	r3, r2, r3
   11438:	ldr	r3, [r3]
   1143c:	str	r3, [fp, #-16]
   11440:	ldr	r3, [fp, #-8]
   11444:	str	r3, [fp, #-12]
   11448:	b	1148c <vetor_ordena@@Base+0x98>
   1144c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11450:	ldr	r2, [r3, #8]
   11454:	ldr	r3, [fp, #-12]
   11458:	lsl	r3, r3, #2
   1145c:	add	r3, r2, r3
   11460:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11464:	ldr	r1, [r2, #8]
   11468:	ldr	r2, [fp, #-12]
   1146c:	sub	r2, r2, #-1073741823	; 0xc0000001
   11470:	lsl	r2, r2, #2
   11474:	add	r2, r1, r2
   11478:	ldr	r2, [r2]
   1147c:	str	r2, [r3]
   11480:	ldr	r3, [fp, #-12]
   11484:	sub	r3, r3, #1
   11488:	str	r3, [fp, #-12]
   1148c:	ldr	r3, [fp, #-12]
   11490:	cmp	r3, #0
   11494:	ble	114cc <vetor_ordena@@Base+0xd8>
   11498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1149c:	ldr	r2, [r3, #8]
   114a0:	ldr	r3, [fp, #-12]
   114a4:	sub	r3, r3, #-1073741823	; 0xc0000001
   114a8:	lsl	r3, r3, #2
   114ac:	add	r3, r2, r3
   114b0:	ldr	r3, [r3]
   114b4:	mov	r1, r3
   114b8:	ldr	r0, [fp, #-16]
   114bc:	bl	109f8 <strcmp@plt>
   114c0:	mov	r3, r0
   114c4:	cmp	r3, #0
   114c8:	blt	1144c <vetor_ordena@@Base+0x58>
   114cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114d0:	ldr	r2, [r3, #8]
   114d4:	ldr	r3, [fp, #-12]
   114d8:	lsl	r3, r3, #2
   114dc:	add	r3, r2, r3
   114e0:	ldr	r2, [fp, #-16]
   114e4:	str	r2, [r3]
   114e8:	ldr	r3, [fp, #-8]
   114ec:	add	r3, r3, #1
   114f0:	str	r3, [fp, #-8]
   114f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114f8:	ldr	r2, [r3]
   114fc:	ldr	r3, [fp, #-8]
   11500:	cmp	r2, r3
   11504:	bgt	11424 <vetor_ordena@@Base+0x30>
   11508:	mov	r3, #0
   1150c:	mov	r0, r3
   11510:	sub	sp, fp, #4
   11514:	pop	{fp, pc}

00011518 <vetor_concatena@@Base>:
   11518:	push	{fp, lr}
   1151c:	add	fp, sp, #4
   11520:	sub	sp, sp, #16
   11524:	str	r0, [fp, #-16]
   11528:	str	r1, [fp, #-20]	; 0xffffffec
   1152c:	ldr	r3, [fp, #-16]
   11530:	cmp	r3, #0
   11534:	beq	11544 <vetor_concatena@@Base+0x2c>
   11538:	ldr	r3, [fp, #-20]	; 0xffffffec
   1153c:	cmp	r3, #0
   11540:	bne	1154c <vetor_concatena@@Base+0x34>
   11544:	mov	r3, #0
   11548:	b	115e0 <vetor_concatena@@Base+0xc8>
   1154c:	bl	10db4 <vetor_novo@@Base>
   11550:	str	r0, [fp, #-8]
   11554:	ldr	r3, [fp, #-20]	; 0xffffffec
   11558:	ldr	r3, [r3]
   1155c:	lsl	r3, r3, #2
   11560:	ldr	r2, [fp, #-16]
   11564:	ldr	r2, [r2]
   11568:	add	r3, r3, r2
   1156c:	mov	r2, r3
   11570:	ldr	r3, [fp, #-8]
   11574:	str	r2, [r3, #8]
   11578:	ldr	r3, [fp, #-16]
   1157c:	ldr	r2, [r3, #4]
   11580:	ldr	r3, [fp, #-20]	; 0xffffffec
   11584:	ldr	r3, [r3, #4]
   11588:	add	r2, r2, r3
   1158c:	ldr	r3, [fp, #-8]
   11590:	str	r2, [r3, #4]
   11594:	ldr	r3, [fp, #-8]
   11598:	ldr	r3, [r3, #8]
   1159c:	ldr	r2, [r3]
   115a0:	ldr	r3, [fp, #-16]
   115a4:	ldr	r3, [r3, #8]
   115a8:	ldr	r3, [r3]
   115ac:	mov	r1, r3
   115b0:	mov	r0, r2
   115b4:	bl	10a4c <strcpy@plt>
   115b8:	ldr	r3, [fp, #-8]
   115bc:	ldr	r3, [r3, #8]
   115c0:	ldr	r2, [r3]
   115c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   115c8:	ldr	r3, [r3, #8]
   115cc:	ldr	r3, [r3]
   115d0:	mov	r1, r3
   115d4:	mov	r0, r2
   115d8:	bl	10a40 <strcat@plt>
   115dc:	ldr	r3, [fp, #-8]
   115e0:	mov	r0, r3
   115e4:	sub	sp, fp, #4
   115e8:	pop	{fp, pc}

000115ec <vetor_inverte@@Base>:
   115ec:	push	{fp, lr}
   115f0:	add	fp, sp, #4
   115f4:	sub	sp, sp, #24
   115f8:	str	r0, [fp, #-24]	; 0xffffffe8
   115fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11600:	bl	10fd4 <vetor_tamanho@@Base>
   11604:	str	r0, [fp, #-16]
   11608:	ldr	r3, [fp, #-16]
   1160c:	str	r3, [fp, #-12]
   11610:	ldr	r3, [fp, #-16]
   11614:	cmp	r3, #0
   11618:	ble	116c8 <vetor_inverte@@Base+0xdc>
   1161c:	mov	r3, #0
   11620:	str	r3, [fp, #-8]
   11624:	b	116a8 <vetor_inverte@@Base+0xbc>
   11628:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1162c:	ldr	r2, [r3, #8]
   11630:	ldr	r3, [fp, #-8]
   11634:	lsl	r3, r3, #2
   11638:	add	r3, r2, r3
   1163c:	ldr	r3, [r3]
   11640:	str	r3, [fp, #-20]	; 0xffffffec
   11644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11648:	ldr	r2, [r3, #8]
   1164c:	ldr	r3, [fp, #-8]
   11650:	lsl	r3, r3, #2
   11654:	add	r3, r2, r3
   11658:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1165c:	ldr	r1, [r2, #8]
   11660:	ldr	r2, [fp, #-12]
   11664:	lsl	r2, r2, #2
   11668:	add	r2, r1, r2
   1166c:	ldr	r2, [r2]
   11670:	str	r2, [r3]
   11674:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11678:	ldr	r2, [r3, #8]
   1167c:	ldr	r3, [fp, #-12]
   11680:	lsl	r3, r3, #2
   11684:	add	r3, r2, r3
   11688:	ldr	r2, [fp, #-20]	; 0xffffffec
   1168c:	str	r2, [r3]
   11690:	ldr	r3, [fp, #-12]
   11694:	sub	r3, r3, #1
   11698:	str	r3, [fp, #-12]
   1169c:	ldr	r3, [fp, #-8]
   116a0:	add	r3, r3, #1
   116a4:	str	r3, [fp, #-8]
   116a8:	ldr	r2, [fp, #-8]
   116ac:	ldr	r3, [fp, #-16]
   116b0:	cmp	r2, r3
   116b4:	bge	116c8 <vetor_inverte@@Base+0xdc>
   116b8:	ldr	r2, [fp, #-8]
   116bc:	ldr	r3, [fp, #-12]
   116c0:	cmp	r2, r3
   116c4:	blt	11628 <vetor_inverte@@Base+0x3c>
   116c8:	mov	r3, #0
   116cc:	mov	r0, r3
   116d0:	sub	sp, fp, #4
   116d4:	pop	{fp, pc}

000116d8 <vetor_baralha@@Base>:
   116d8:	push	{fp, lr}
   116dc:	add	fp, sp, #4
   116e0:	sub	sp, sp, #32
   116e4:	str	r0, [fp, #-32]	; 0xffffffe0
   116e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   116ec:	ldr	r3, [r3]
   116f0:	str	r3, [fp, #-12]
   116f4:	bl	10db4 <vetor_novo@@Base>
   116f8:	str	r0, [fp, #-16]
   116fc:	sub	r3, fp, #24
   11700:	mov	r0, r3
   11704:	bl	10a28 <time@plt>
   11708:	mov	r3, r0
   1170c:	mov	r0, r3
   11710:	bl	10a94 <srand@plt>
   11714:	mov	r3, #0
   11718:	str	r3, [fp, #-8]
   1171c:	b	117b8 <vetor_baralha@@Base+0xe0>
   11720:	bl	10aa0 <rand@plt>
   11724:	mov	r2, r0
   11728:	ldr	r3, [fp, #-12]
   1172c:	add	r3, r3, #1
   11730:	mov	r1, r3
   11734:	mov	r0, r2
   11738:	bl	119f8 <vetor_baralha@@Base+0x320>
   1173c:	mov	r3, r1
   11740:	str	r3, [fp, #-20]	; 0xffffffec
   11744:	ldr	r3, [fp, #-16]
   11748:	ldr	r2, [r3, #8]
   1174c:	ldr	r3, [fp, #-8]
   11750:	lsl	r3, r3, #2
   11754:	add	r3, r2, r3
   11758:	ldr	r3, [r3]
   1175c:	str	r3, [fp, #-28]	; 0xffffffe4
   11760:	ldr	r3, [fp, #-16]
   11764:	ldr	r2, [r3, #8]
   11768:	ldr	r3, [fp, #-8]
   1176c:	lsl	r3, r3, #2
   11770:	add	r3, r2, r3
   11774:	ldr	r2, [fp, #-16]
   11778:	ldr	r1, [r2, #8]
   1177c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11780:	lsl	r2, r2, #2
   11784:	add	r2, r1, r2
   11788:	ldr	r2, [r2]
   1178c:	str	r2, [r3]
   11790:	ldr	r3, [fp, #-16]
   11794:	ldr	r2, [r3, #8]
   11798:	ldr	r3, [fp, #-20]	; 0xffffffec
   1179c:	lsl	r3, r3, #2
   117a0:	add	r3, r2, r3
   117a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   117a8:	str	r2, [r3]
   117ac:	ldr	r3, [fp, #-8]
   117b0:	add	r3, r3, #1
   117b4:	str	r3, [fp, #-8]
   117b8:	ldr	r2, [fp, #-8]
   117bc:	ldr	r3, [fp, #-12]
   117c0:	cmp	r2, r3
   117c4:	blt	11720 <vetor_baralha@@Base+0x48>
   117c8:	ldr	r3, [fp, #-16]
   117cc:	mov	r0, r3
   117d0:	sub	sp, fp, #4
   117d4:	pop	{fp, pc}
   117d8:	cmp	r1, #0
   117dc:	beq	119e8 <vetor_baralha@@Base+0x310>
   117e0:	eor	ip, r0, r1
   117e4:	rsbmi	r1, r1, #0
   117e8:	subs	r2, r1, #1
   117ec:	beq	119b4 <vetor_baralha@@Base+0x2dc>
   117f0:	movs	r3, r0
   117f4:	rsbmi	r3, r0, #0
   117f8:	cmp	r3, r1
   117fc:	bls	119c0 <vetor_baralha@@Base+0x2e8>
   11800:	tst	r1, r2
   11804:	beq	119d0 <vetor_baralha@@Base+0x2f8>
   11808:	clz	r2, r3
   1180c:	clz	r0, r1
   11810:	sub	r2, r0, r2
   11814:	rsbs	r2, r2, #31
   11818:	addne	r2, r2, r2, lsl #1
   1181c:	mov	r0, #0
   11820:	addne	pc, pc, r2, lsl #2
   11824:	nop			; (mov r0, r0)
   11828:	cmp	r3, r1, lsl #31
   1182c:	adc	r0, r0, r0
   11830:	subcs	r3, r3, r1, lsl #31
   11834:	cmp	r3, r1, lsl #30
   11838:	adc	r0, r0, r0
   1183c:	subcs	r3, r3, r1, lsl #30
   11840:	cmp	r3, r1, lsl #29
   11844:	adc	r0, r0, r0
   11848:	subcs	r3, r3, r1, lsl #29
   1184c:	cmp	r3, r1, lsl #28
   11850:	adc	r0, r0, r0
   11854:	subcs	r3, r3, r1, lsl #28
   11858:	cmp	r3, r1, lsl #27
   1185c:	adc	r0, r0, r0
   11860:	subcs	r3, r3, r1, lsl #27
   11864:	cmp	r3, r1, lsl #26
   11868:	adc	r0, r0, r0
   1186c:	subcs	r3, r3, r1, lsl #26
   11870:	cmp	r3, r1, lsl #25
   11874:	adc	r0, r0, r0
   11878:	subcs	r3, r3, r1, lsl #25
   1187c:	cmp	r3, r1, lsl #24
   11880:	adc	r0, r0, r0
   11884:	subcs	r3, r3, r1, lsl #24
   11888:	cmp	r3, r1, lsl #23
   1188c:	adc	r0, r0, r0
   11890:	subcs	r3, r3, r1, lsl #23
   11894:	cmp	r3, r1, lsl #22
   11898:	adc	r0, r0, r0
   1189c:	subcs	r3, r3, r1, lsl #22
   118a0:	cmp	r3, r1, lsl #21
   118a4:	adc	r0, r0, r0
   118a8:	subcs	r3, r3, r1, lsl #21
   118ac:	cmp	r3, r1, lsl #20
   118b0:	adc	r0, r0, r0
   118b4:	subcs	r3, r3, r1, lsl #20
   118b8:	cmp	r3, r1, lsl #19
   118bc:	adc	r0, r0, r0
   118c0:	subcs	r3, r3, r1, lsl #19
   118c4:	cmp	r3, r1, lsl #18
   118c8:	adc	r0, r0, r0
   118cc:	subcs	r3, r3, r1, lsl #18
   118d0:	cmp	r3, r1, lsl #17
   118d4:	adc	r0, r0, r0
   118d8:	subcs	r3, r3, r1, lsl #17
   118dc:	cmp	r3, r1, lsl #16
   118e0:	adc	r0, r0, r0
   118e4:	subcs	r3, r3, r1, lsl #16
   118e8:	cmp	r3, r1, lsl #15
   118ec:	adc	r0, r0, r0
   118f0:	subcs	r3, r3, r1, lsl #15
   118f4:	cmp	r3, r1, lsl #14
   118f8:	adc	r0, r0, r0
   118fc:	subcs	r3, r3, r1, lsl #14
   11900:	cmp	r3, r1, lsl #13
   11904:	adc	r0, r0, r0
   11908:	subcs	r3, r3, r1, lsl #13
   1190c:	cmp	r3, r1, lsl #12
   11910:	adc	r0, r0, r0
   11914:	subcs	r3, r3, r1, lsl #12
   11918:	cmp	r3, r1, lsl #11
   1191c:	adc	r0, r0, r0
   11920:	subcs	r3, r3, r1, lsl #11
   11924:	cmp	r3, r1, lsl #10
   11928:	adc	r0, r0, r0
   1192c:	subcs	r3, r3, r1, lsl #10
   11930:	cmp	r3, r1, lsl #9
   11934:	adc	r0, r0, r0
   11938:	subcs	r3, r3, r1, lsl #9
   1193c:	cmp	r3, r1, lsl #8
   11940:	adc	r0, r0, r0
   11944:	subcs	r3, r3, r1, lsl #8
   11948:	cmp	r3, r1, lsl #7
   1194c:	adc	r0, r0, r0
   11950:	subcs	r3, r3, r1, lsl #7
   11954:	cmp	r3, r1, lsl #6
   11958:	adc	r0, r0, r0
   1195c:	subcs	r3, r3, r1, lsl #6
   11960:	cmp	r3, r1, lsl #5
   11964:	adc	r0, r0, r0
   11968:	subcs	r3, r3, r1, lsl #5
   1196c:	cmp	r3, r1, lsl #4
   11970:	adc	r0, r0, r0
   11974:	subcs	r3, r3, r1, lsl #4
   11978:	cmp	r3, r1, lsl #3
   1197c:	adc	r0, r0, r0
   11980:	subcs	r3, r3, r1, lsl #3
   11984:	cmp	r3, r1, lsl #2
   11988:	adc	r0, r0, r0
   1198c:	subcs	r3, r3, r1, lsl #2
   11990:	cmp	r3, r1, lsl #1
   11994:	adc	r0, r0, r0
   11998:	subcs	r3, r3, r1, lsl #1
   1199c:	cmp	r3, r1
   119a0:	adc	r0, r0, r0
   119a4:	subcs	r3, r3, r1
   119a8:	cmp	ip, #0
   119ac:	rsbmi	r0, r0, #0
   119b0:	bx	lr
   119b4:	teq	ip, r0
   119b8:	rsbmi	r0, r0, #0
   119bc:	bx	lr
   119c0:	movcc	r0, #0
   119c4:	asreq	r0, ip, #31
   119c8:	orreq	r0, r0, #1
   119cc:	bx	lr
   119d0:	clz	r2, r1
   119d4:	rsb	r2, r2, #31
   119d8:	cmp	ip, #0
   119dc:	lsr	r0, r3, r2
   119e0:	rsbmi	r0, r0, #0
   119e4:	bx	lr
   119e8:	cmp	r0, #0
   119ec:	mvngt	r0, #-2147483648	; 0x80000000
   119f0:	movlt	r0, #-2147483648	; 0x80000000
   119f4:	b	11a18 <vetor_baralha@@Base+0x340>
   119f8:	cmp	r1, #0
   119fc:	beq	119e8 <vetor_baralha@@Base+0x310>
   11a00:	push	{r0, r1, lr}
   11a04:	bl	117e0 <vetor_baralha@@Base+0x108>
   11a08:	pop	{r1, r2, lr}
   11a0c:	mul	r3, r2, r0
   11a10:	sub	r1, r1, r3
   11a14:	bx	lr
   11a18:	push	{r1, lr}
   11a1c:	mov	r0, #8
   11a20:	bl	109ec <raise@plt>
   11a24:	pop	{r1, pc}

00011a28 <__libc_csu_init@@Base>:
   11a28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a2c:	mov	r7, r0
   11a30:	ldr	r6, [pc, #72]	; 11a80 <__libc_csu_init@@Base+0x58>
   11a34:	ldr	r5, [pc, #72]	; 11a84 <__libc_csu_init@@Base+0x5c>
   11a38:	add	r6, pc, r6
   11a3c:	add	r5, pc, r5
   11a40:	sub	r6, r6, r5
   11a44:	mov	r8, r1
   11a48:	mov	r9, r2
   11a4c:	bl	109c0 <calloc@plt-0x20>
   11a50:	asrs	r6, r6, #2
   11a54:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a58:	mov	r4, #0
   11a5c:	add	r4, r4, #1
   11a60:	ldr	r3, [r5], #4
   11a64:	mov	r2, r9
   11a68:	mov	r1, r8
   11a6c:	mov	r0, r7
   11a70:	blx	r3
   11a74:	cmp	r6, r4
   11a78:	bne	11a5c <__libc_csu_init@@Base+0x34>
   11a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a80:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11a84:	andeq	r0, r1, r8, asr #9

00011a88 <__libc_csu_fini@@Base>:
   11a88:	bx	lr

Disassembly of section .fini:

00011a8c <.fini>:
   11a8c:	push	{r3, lr}
   11a90:	pop	{r3, pc}
