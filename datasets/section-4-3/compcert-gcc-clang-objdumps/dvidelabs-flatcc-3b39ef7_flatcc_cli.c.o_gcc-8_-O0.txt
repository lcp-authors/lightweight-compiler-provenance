
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/cli/CMakeFiles/flatcc_cli.dir/flatcc_cli.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <usage>:
       0:	str	fp, [sp, #-8]!
       4:	str	lr, [sp, #4]
       8:	add	fp, sp, #4
       c:	sub	sp, sp, #8
      10:	str	r0, [fp, #-8]
      14:	movw	r2, #0
      18:	movt	r2, #0
      1c:	movw	r1, #0
      20:	movt	r1, #0
      24:	ldr	r0, [fp, #-8]
      28:	bl	0 <fprintf>
      2c:	movw	r2, #0
      30:	movt	r2, #0
      34:	movw	r1, #0
      38:	movt	r1, #0
      3c:	ldr	r0, [fp, #-8]
      40:	bl	0 <fprintf>
      44:	ldr	r3, [fp, #-8]
      48:	mov	r2, #35	; 0x23
      4c:	mov	r1, #1
      50:	movw	r0, #0
      54:	movt	r0, #0
      58:	bl	0 <fwrite>
      5c:	ldr	r3, [fp, #-8]
      60:	movw	r2, #1409	; 0x581
      64:	mov	r1, #1
      68:	movw	r0, #0
      6c:	movt	r0, #0
      70:	bl	0 <fwrite>
      74:	nop	{0}
      78:	sub	sp, fp, #4
      7c:	ldr	fp, [sp]
      80:	add	sp, sp, #4
      84:	pop	{pc}		; (ldr pc, [sp], #4)

00000088 <help>:
      88:	str	fp, [sp, #-8]!
      8c:	str	lr, [sp, #4]
      90:	add	fp, sp, #4
      94:	sub	sp, sp, #8
      98:	str	r0, [fp, #-8]
      9c:	ldr	r0, [fp, #-8]
      a0:	bl	0 <usage>
      a4:	ldr	r3, [fp, #-8]
      a8:	movw	r2, #3140	; 0xc44
      ac:	mov	r1, #1
      b0:	movw	r0, #0
      b4:	movt	r0, #0
      b8:	bl	0 <fwrite>
      bc:	nop	{0}
      c0:	sub	sp, fp, #4
      c4:	ldr	fp, [sp]
      c8:	add	sp, sp, #4
      cc:	pop	{pc}		; (ldr pc, [sp], #4)

000000d0 <parse_bool_arg>:
      d0:	str	fp, [sp, #-8]!
      d4:	str	lr, [sp, #4]
      d8:	add	fp, sp, #4
      dc:	sub	sp, sp, #8
      e0:	str	r0, [fp, #-8]
      e4:	movw	r1, #0
      e8:	movt	r1, #0
      ec:	ldr	r0, [fp, #-8]
      f0:	bl	0 <strcmp>
      f4:	mov	r3, r0
      f8:	cmp	r3, #0
      fc:	beq	11c <parse_bool_arg+0x4c>
     100:	movw	r1, #0
     104:	movt	r1, #0
     108:	ldr	r0, [fp, #-8]
     10c:	bl	0 <strcmp>
     110:	mov	r3, r0
     114:	cmp	r3, #0
     118:	bne	124 <parse_bool_arg+0x54>
     11c:	mov	r3, #0
     120:	b	188 <parse_bool_arg+0xb8>
     124:	movw	r1, #0
     128:	movt	r1, #0
     12c:	ldr	r0, [fp, #-8]
     130:	bl	0 <strcmp>
     134:	mov	r3, r0
     138:	cmp	r3, #0
     13c:	beq	15c <parse_bool_arg+0x8c>
     140:	movw	r1, #0
     144:	movt	r1, #0
     148:	ldr	r0, [fp, #-8]
     14c:	bl	0 <strcmp>
     150:	mov	r3, r0
     154:	cmp	r3, #0
     158:	bne	164 <parse_bool_arg+0x94>
     15c:	mov	r3, #1
     160:	b	188 <parse_bool_arg+0xb8>
     164:	movw	r3, #0
     168:	movt	r3, #0
     16c:	ldr	r3, [r3]
     170:	ldr	r2, [fp, #-8]
     174:	movw	r1, #0
     178:	movt	r1, #0
     17c:	mov	r0, r3
     180:	bl	0 <fprintf>
     184:	mvn	r3, #0
     188:	mov	r0, r3
     18c:	sub	sp, fp, #4
     190:	ldr	fp, [sp]
     194:	add	sp, sp, #4
     198:	pop	{pc}		; (ldr pc, [sp], #4)

0000019c <match_long_arg>:
     19c:	str	fp, [sp, #-8]!
     1a0:	str	lr, [sp, #4]
     1a4:	add	fp, sp, #4
     1a8:	sub	sp, sp, #16
     1ac:	str	r0, [fp, #-8]
     1b0:	str	r1, [fp, #-12]
     1b4:	str	r2, [fp, #-16]
     1b8:	ldr	r2, [fp, #-16]
     1bc:	ldr	r1, [fp, #-12]
     1c0:	ldr	r0, [fp, #-8]
     1c4:	bl	0 <strncmp>
     1c8:	mov	r3, r0
     1cc:	cmp	r3, #0
     1d0:	bne	1f4 <match_long_arg+0x58>
     1d4:	ldr	r0, [fp, #-8]
     1d8:	bl	0 <strlen>
     1dc:	mov	r2, r0
     1e0:	ldr	r3, [fp, #-16]
     1e4:	cmp	r3, r2
     1e8:	bne	1f4 <match_long_arg+0x58>
     1ec:	mov	r3, #1
     1f0:	b	1f8 <match_long_arg+0x5c>
     1f4:	mov	r3, #0
     1f8:	mov	r0, r3
     1fc:	sub	sp, fp, #4
     200:	ldr	fp, [sp]
     204:	add	sp, sp, #4
     208:	pop	{pc}		; (ldr pc, [sp], #4)

0000020c <set_opt>:
     20c:	str	fp, [sp, #-8]!
     210:	str	lr, [sp, #4]
     214:	add	fp, sp, #4
     218:	sub	sp, sp, #32
     21c:	str	r0, [fp, #-24]	; 0xffffffe8
     220:	str	r1, [fp, #-28]	; 0xffffffe4
     224:	str	r2, [fp, #-32]	; 0xffffffe0
     228:	mov	r3, #0
     22c:	str	r3, [fp, #-8]
     230:	ldr	r0, [fp, #-28]	; 0xffffffe4
     234:	bl	0 <strlen>
     238:	str	r0, [fp, #-12]
     23c:	mov	r1, #61	; 0x3d
     240:	ldr	r0, [fp, #-28]	; 0xffffffe4
     244:	bl	0 <strchr>
     248:	str	r0, [fp, #-16]
     24c:	ldr	r3, [fp, #-16]
     250:	cmp	r3, #0
     254:	beq	274 <set_opt+0x68>
     258:	ldr	r3, [fp, #-16]
     25c:	add	r3, r3, #1
     260:	str	r3, [fp, #-32]	; 0xffffffe0
     264:	ldr	r2, [fp, #-16]
     268:	ldr	r3, [fp, #-28]	; 0xffffffe4
     26c:	sub	r3, r2, r3
     270:	str	r3, [fp, #-12]
     274:	ldr	r3, [fp, #-28]	; 0xffffffe4
     278:	ldrb	r3, [r3]
     27c:	cmp	r3, #104	; 0x68
     280:	beq	2a0 <set_opt+0x94>
     284:	ldr	r1, [fp, #-28]	; 0xffffffe4
     288:	movw	r0, #0
     28c:	movt	r0, #0
     290:	bl	0 <strcmp>
     294:	mov	r3, r0
     298:	cmp	r3, #0
     29c:	bne	2bc <set_opt+0xb0>
     2a0:	movw	r3, #0
     2a4:	movt	r3, #0
     2a8:	ldr	r3, [r3]
     2ac:	mov	r0, r3
     2b0:	bl	88 <help>
     2b4:	mov	r0, #0
     2b8:	bl	0 <exit>
     2bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
     2c0:	movw	r0, #0
     2c4:	movt	r0, #0
     2c8:	bl	0 <strcmp>
     2cc:	mov	r3, r0
     2d0:	cmp	r3, #0
     2d4:	bne	328 <set_opt+0x11c>
     2d8:	movw	r3, #0
     2dc:	movt	r3, #0
     2e0:	ldr	r3, [r3]
     2e4:	movw	r2, #0
     2e8:	movt	r2, #0
     2ec:	movw	r1, #0
     2f0:	movt	r1, #0
     2f4:	mov	r0, r3
     2f8:	bl	0 <fprintf>
     2fc:	movw	r3, #0
     300:	movt	r3, #0
     304:	ldr	r3, [r3]
     308:	movw	r2, #0
     30c:	movt	r2, #0
     310:	movw	r1, #0
     314:	movt	r1, #0
     318:	mov	r0, r3
     31c:	bl	0 <fprintf>
     320:	mov	r0, #0
     324:	bl	0 <exit>
     328:	ldr	r1, [fp, #-28]	; 0xffffffe4
     32c:	movw	r0, #0
     330:	movt	r0, #0
     334:	bl	0 <strcmp>
     338:	mov	r3, r0
     33c:	cmp	r3, #0
     340:	bne	358 <set_opt+0x14c>
     344:	ldr	r3, [fp, #-24]	; 0xffffffe8
     348:	mov	r2, #1
     34c:	str	r2, [r3, #108]	; 0x6c
     350:	mov	r3, #0
     354:	b	b90 <set_opt+0x984>
     358:	ldr	r1, [fp, #-28]	; 0xffffffe4
     35c:	movw	r0, #0
     360:	movt	r0, #0
     364:	bl	0 <strcmp>
     368:	mov	r3, r0
     36c:	cmp	r3, #0
     370:	bne	388 <set_opt+0x17c>
     374:	ldr	r3, [fp, #-24]	; 0xffffffe8
     378:	mov	r2, #1
     37c:	str	r2, [r3, #180]	; 0xb4
     380:	mov	r3, #0
     384:	b	b90 <set_opt+0x984>
     388:	ldr	r1, [fp, #-28]	; 0xffffffe4
     38c:	movw	r0, #0
     390:	movt	r0, #0
     394:	bl	0 <strcmp>
     398:	mov	r3, r0
     39c:	cmp	r3, #0
     3a0:	bne	3b8 <set_opt+0x1ac>
     3a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     3a8:	mov	r2, #1
     3ac:	str	r2, [r3, #164]	; 0xa4
     3b0:	mov	r3, #0
     3b4:	b	b90 <set_opt+0x984>
     3b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
     3bc:	movw	r0, #0
     3c0:	movt	r0, #0
     3c4:	bl	0 <strcmp>
     3c8:	mov	r3, r0
     3cc:	cmp	r3, #0
     3d0:	bne	3e8 <set_opt+0x1dc>
     3d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     3d8:	mov	r2, #1
     3dc:	str	r2, [r3, #168]	; 0xa8
     3e0:	mov	r3, #0
     3e4:	b	b90 <set_opt+0x984>
     3e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
     3ec:	movw	r0, #0
     3f0:	movt	r0, #0
     3f4:	bl	0 <strcmp>
     3f8:	mov	r3, r0
     3fc:	cmp	r3, #0
     400:	bne	424 <set_opt+0x218>
     404:	ldr	r3, [fp, #-24]	; 0xffffffe8
     408:	mov	r2, #1
     40c:	str	r2, [r3, #164]	; 0xa4
     410:	ldr	r3, [fp, #-24]	; 0xffffffe8
     414:	mov	r2, #1
     418:	str	r2, [r3, #168]	; 0xa8
     41c:	mov	r3, #0
     420:	b	b90 <set_opt+0x984>
     424:	ldr	r2, [fp, #-12]
     428:	ldr	r1, [fp, #-28]	; 0xffffffe4
     42c:	movw	r0, #0
     430:	movt	r0, #0
     434:	bl	19c <match_long_arg>
     438:	mov	r3, r0
     43c:	cmp	r3, #0
     440:	beq	4e0 <set_opt+0x2d4>
     444:	movw	r3, #0
     448:	movt	r3, #0
     44c:	ldr	r3, [r3]
     450:	mov	r2, #112	; 0x70
     454:	mov	r1, #1
     458:	movw	r0, #0
     45c:	movt	r0, #0
     460:	bl	0 <fwrite>
     464:	ldr	r3, [fp, #-32]	; 0xffffffe0
     468:	cmp	r3, #0
     46c:	bne	498 <set_opt+0x28c>
     470:	movw	r3, #0
     474:	movt	r3, #0
     478:	ldr	r3, [r3]
     47c:	mov	r2, #44	; 0x2c
     480:	mov	r1, #1
     484:	movw	r0, #0
     488:	movt	r0, #0
     48c:	bl	0 <fwrite>
     490:	mvn	r0, #0
     494:	bl	0 <exit>
     498:	ldr	r0, [fp, #-32]	; 0xffffffe0
     49c:	bl	d0 <parse_bool_arg>
     4a0:	mov	r2, r0
     4a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4a8:	str	r2, [r3, #184]	; 0xb8
     4ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4b0:	ldr	r3, [r3, #184]	; 0xb8
     4b4:	cmp	r3, #0
     4b8:	bge	4c4 <set_opt+0x2b8>
     4bc:	mvn	r0, #0
     4c0:	bl	0 <exit>
     4c4:	ldr	r3, [fp, #-16]
     4c8:	cmp	r3, #0
     4cc:	beq	4d8 <set_opt+0x2cc>
     4d0:	mov	r3, #0
     4d4:	b	b90 <set_opt+0x984>
     4d8:	mov	r3, #2
     4dc:	b	b90 <set_opt+0x984>
     4e0:	ldr	r2, [fp, #-12]
     4e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
     4e8:	movw	r0, #0
     4ec:	movt	r0, #0
     4f0:	bl	19c <match_long_arg>
     4f4:	mov	r3, r0
     4f8:	cmp	r3, #0
     4fc:	beq	57c <set_opt+0x370>
     500:	ldr	r3, [fp, #-32]	; 0xffffffe0
     504:	cmp	r3, #0
     508:	bne	534 <set_opt+0x328>
     50c:	movw	r3, #0
     510:	movt	r3, #0
     514:	ldr	r3, [r3]
     518:	mov	r2, #41	; 0x29
     51c:	mov	r1, #1
     520:	movw	r0, #0
     524:	movt	r0, #0
     528:	bl	0 <fwrite>
     52c:	mvn	r0, #0
     530:	bl	0 <exit>
     534:	ldr	r0, [fp, #-32]	; 0xffffffe0
     538:	bl	d0 <parse_bool_arg>
     53c:	mov	r2, r0
     540:	ldr	r3, [fp, #-24]	; 0xffffffe8
     544:	str	r2, [r3, #188]	; 0xbc
     548:	ldr	r3, [fp, #-24]	; 0xffffffe8
     54c:	ldr	r3, [r3, #188]	; 0xbc
     550:	cmp	r3, #0
     554:	bge	560 <set_opt+0x354>
     558:	mvn	r0, #0
     55c:	bl	0 <exit>
     560:	ldr	r3, [fp, #-16]
     564:	cmp	r3, #0
     568:	beq	574 <set_opt+0x368>
     56c:	mov	r3, #0
     570:	b	b90 <set_opt+0x984>
     574:	mov	r3, #2
     578:	b	b90 <set_opt+0x984>
     57c:	ldr	r2, [fp, #-12]
     580:	ldr	r1, [fp, #-28]	; 0xffffffe4
     584:	movw	r0, #0
     588:	movt	r0, #0
     58c:	bl	19c <match_long_arg>
     590:	mov	r3, r0
     594:	cmp	r3, #0
     598:	beq	604 <set_opt+0x3f8>
     59c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     5a0:	cmp	r3, #0
     5a4:	bne	5d0 <set_opt+0x3c4>
     5a8:	movw	r3, #0
     5ac:	movt	r3, #0
     5b0:	ldr	r3, [r3]
     5b4:	mov	r2, #35	; 0x23
     5b8:	mov	r1, #1
     5bc:	movw	r0, #0
     5c0:	movt	r0, #0
     5c4:	bl	0 <fwrite>
     5c8:	mvn	r0, #0
     5cc:	bl	0 <exit>
     5d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
     5d8:	str	r2, [r3, #116]	; 0x74
     5dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5e0:	mov	r2, #1
     5e4:	str	r2, [r3, #112]	; 0x70
     5e8:	ldr	r3, [fp, #-16]
     5ec:	cmp	r3, #0
     5f0:	beq	5fc <set_opt+0x3f0>
     5f4:	mov	r3, #0
     5f8:	b	b90 <set_opt+0x984>
     5fc:	mov	r3, #2
     600:	b	b90 <set_opt+0x984>
     604:	ldr	r2, [fp, #-12]
     608:	ldr	r1, [fp, #-28]	; 0xffffffe4
     60c:	movw	r0, #0
     610:	movt	r0, #0
     614:	bl	19c <match_long_arg>
     618:	mov	r3, r0
     61c:	cmp	r3, #0
     620:	beq	680 <set_opt+0x474>
     624:	ldr	r3, [fp, #-32]	; 0xffffffe0
     628:	cmp	r3, #0
     62c:	bne	658 <set_opt+0x44c>
     630:	movw	r3, #0
     634:	movt	r3, #0
     638:	ldr	r3, [r3]
     63c:	mov	r2, #37	; 0x25
     640:	mov	r1, #1
     644:	movw	r0, #0
     648:	movt	r0, #0
     64c:	bl	0 <fwrite>
     650:	mvn	r0, #0
     654:	bl	0 <exit>
     658:	ldr	r3, [fp, #-24]	; 0xffffffe8
     65c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     660:	str	r2, [r3, #120]	; 0x78
     664:	ldr	r3, [fp, #-16]
     668:	cmp	r3, #0
     66c:	beq	678 <set_opt+0x46c>
     670:	mov	r3, #0
     674:	b	b90 <set_opt+0x984>
     678:	mov	r3, #2
     67c:	b	b90 <set_opt+0x984>
     680:	ldr	r2, [fp, #-12]
     684:	ldr	r1, [fp, #-28]	; 0xffffffe4
     688:	movw	r0, #0
     68c:	movt	r0, #0
     690:	bl	19c <match_long_arg>
     694:	mov	r3, r0
     698:	cmp	r3, #0
     69c:	beq	6fc <set_opt+0x4f0>
     6a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     6a4:	cmp	r3, #0
     6a8:	bne	6d4 <set_opt+0x4c8>
     6ac:	movw	r3, #0
     6b0:	movt	r3, #0
     6b4:	ldr	r3, [r3]
     6b8:	mov	r2, #35	; 0x23
     6bc:	mov	r1, #1
     6c0:	movw	r0, #0
     6c4:	movt	r0, #0
     6c8:	bl	0 <fwrite>
     6cc:	mvn	r0, #0
     6d0:	bl	0 <exit>
     6d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     6d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
     6dc:	str	r2, [r3, #124]	; 0x7c
     6e0:	ldr	r3, [fp, #-16]
     6e4:	cmp	r3, #0
     6e8:	beq	6f4 <set_opt+0x4e8>
     6ec:	mov	r3, #0
     6f0:	b	b90 <set_opt+0x984>
     6f4:	mov	r3, #2
     6f8:	b	b90 <set_opt+0x984>
     6fc:	ldr	r2, [fp, #-12]
     700:	ldr	r1, [fp, #-28]	; 0xffffffe4
     704:	movw	r0, #0
     708:	movt	r0, #0
     70c:	bl	19c <match_long_arg>
     710:	mov	r3, r0
     714:	cmp	r3, #0
     718:	beq	778 <set_opt+0x56c>
     71c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     720:	cmp	r3, #0
     724:	bne	750 <set_opt+0x544>
     728:	movw	r3, #0
     72c:	movt	r3, #0
     730:	ldr	r3, [r3]
     734:	mov	r2, #41	; 0x29
     738:	mov	r1, #1
     73c:	movw	r0, #0
     740:	movt	r0, #0
     744:	bl	0 <fwrite>
     748:	mvn	r0, #0
     74c:	bl	0 <exit>
     750:	ldr	r3, [fp, #-24]	; 0xffffffe8
     754:	ldr	r2, [fp, #-32]	; 0xffffffe0
     758:	str	r2, [r3, #196]	; 0xc4
     75c:	ldr	r3, [fp, #-16]
     760:	cmp	r3, #0
     764:	beq	770 <set_opt+0x564>
     768:	mov	r3, #0
     76c:	b	b90 <set_opt+0x984>
     770:	mov	r3, #2
     774:	b	b90 <set_opt+0x984>
     778:	ldr	r2, [fp, #-12]
     77c:	ldr	r1, [fp, #-28]	; 0xffffffe4
     780:	movw	r0, #0
     784:	movt	r0, #0
     788:	bl	19c <match_long_arg>
     78c:	mov	r3, r0
     790:	cmp	r3, #0
     794:	beq	7f4 <set_opt+0x5e8>
     798:	ldr	r3, [fp, #-32]	; 0xffffffe0
     79c:	cmp	r3, #0
     7a0:	bne	7cc <set_opt+0x5c0>
     7a4:	movw	r3, #0
     7a8:	movt	r3, #0
     7ac:	ldr	r3, [r3]
     7b0:	mov	r2, #28
     7b4:	mov	r1, #1
     7b8:	movw	r0, #0
     7bc:	movt	r0, #0
     7c0:	bl	0 <fwrite>
     7c4:	mvn	r0, #0
     7c8:	bl	0 <exit>
     7cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     7d4:	str	r2, [r3, #192]	; 0xc0
     7d8:	ldr	r3, [fp, #-16]
     7dc:	cmp	r3, #0
     7e0:	beq	7ec <set_opt+0x5e0>
     7e4:	mov	r3, #0
     7e8:	b	b90 <set_opt+0x984>
     7ec:	mov	r3, #2
     7f0:	b	b90 <set_opt+0x984>
     7f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     7f8:	ldrb	r3, [r3]
     7fc:	sub	r3, r3, #45	; 0x2d
     800:	cmp	r3, #74	; 0x4a
     804:	ldrls	pc, [pc, r3, lsl #2]
     808:	b	b64 <set_opt+0x958>
     80c:	.word	0x00000938
     810:	.word	0x00000b64
     814:	.word	0x00000b64
     818:	.word	0x00000b64
     81c:	.word	0x00000b64
     820:	.word	0x00000b64
     824:	.word	0x00000b64
     828:	.word	0x00000b64
     82c:	.word	0x00000b64
     830:	.word	0x00000b64
     834:	.word	0x00000b64
     838:	.word	0x00000b64
     83c:	.word	0x00000b64
     840:	.word	0x00000b64
     844:	.word	0x00000b64
     848:	.word	0x00000b64
     84c:	.word	0x00000b64
     850:	.word	0x00000b64
     854:	.word	0x00000b64
     858:	.word	0x00000b64
     85c:	.word	0x00000b64
     860:	.word	0x00000b64
     864:	.word	0x00000b64
     868:	.word	0x00000b64
     86c:	.word	0x00000b64
     870:	.word	0x00000b64
     874:	.word	0x00000b64
     878:	.word	0x00000b64
     87c:	.word	0x00000960
     880:	.word	0x00000b64
     884:	.word	0x00000b64
     888:	.word	0x00000b64
     88c:	.word	0x00000b64
     890:	.word	0x00000b64
     894:	.word	0x00000b64
     898:	.word	0x00000b64
     89c:	.word	0x00000b64
     8a0:	.word	0x00000b64
     8a4:	.word	0x00000b64
     8a8:	.word	0x00000b64
     8ac:	.word	0x00000b64
     8b0:	.word	0x00000b64
     8b4:	.word	0x00000b64
     8b8:	.word	0x00000b64
     8bc:	.word	0x00000b64
     8c0:	.word	0x00000b64
     8c4:	.word	0x00000b64
     8c8:	.word	0x00000b64
     8cc:	.word	0x00000b64
     8d0:	.word	0x00000b64
     8d4:	.word	0x00000b64
     8d8:	.word	0x00000b64
     8dc:	.word	0x00000b14
     8e0:	.word	0x00000b64
     8e4:	.word	0x00000ad8
     8e8:	.word	0x00000b00
     8ec:	.word	0x00000b64
     8f0:	.word	0x00000b64
     8f4:	.word	0x00000b64
     8f8:	.word	0x00000b64
     8fc:	.word	0x00000b64
     900:	.word	0x00000b64
     904:	.word	0x00000b64
     908:	.word	0x00000b64
     90c:	.word	0x00000b64
     910:	.word	0x00000b64
     914:	.word	0x000009fc
     918:	.word	0x00000b64
     91c:	.word	0x00000b64
     920:	.word	0x00000aec
     924:	.word	0x00000b64
     928:	.word	0x00000b64
     92c:	.word	0x00000b64
     930:	.word	0x00000ac4
     934:	.word	0x00000ab0
     938:	movw	r3, #0
     93c:	movt	r3, #0
     940:	ldr	r3, [r3]
     944:	ldr	r2, [fp, #-28]	; 0xffffffe4
     948:	movw	r1, #0
     94c:	movt	r1, #0
     950:	mov	r0, r3
     954:	bl	0 <fprintf>
     958:	mvn	r0, #0
     95c:	bl	0 <exit>
     960:	ldr	r3, [fp, #-28]	; 0xffffffe4
     964:	add	r3, r3, #1
     968:	ldrb	r3, [r3]
     96c:	cmp	r3, #0
     970:	beq	98c <set_opt+0x780>
     974:	mov	r3, #1
     978:	str	r3, [fp, #-8]
     97c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     980:	add	r3, r3, #1
     984:	str	r3, [fp, #-32]	; 0xffffffe0
     988:	b	9c8 <set_opt+0x7bc>
     98c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     990:	cmp	r3, #0
     994:	bne	9c0 <set_opt+0x7b4>
     998:	movw	r3, #0
     99c:	movt	r3, #0
     9a0:	ldr	r3, [r3]
     9a4:	mov	r2, #28
     9a8:	mov	r1, #1
     9ac:	movw	r0, #0
     9b0:	movt	r0, #0
     9b4:	bl	0 <fwrite>
     9b8:	mvn	r0, #0
     9bc:	bl	0 <exit>
     9c0:	mov	r3, #2
     9c4:	str	r3, [fp, #-8]
     9c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9cc:	ldr	r2, [r3, #200]	; 0xc8
     9d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9d4:	ldr	r3, [r3, #208]	; 0xd0
     9d8:	add	r0, r3, #1
     9dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
     9e0:	str	r0, [r1, #208]	; 0xd0
     9e4:	lsl	r3, r3, #2
     9e8:	add	r3, r2, r3
     9ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
     9f0:	str	r2, [r3]
     9f4:	ldr	r3, [fp, #-8]
     9f8:	b	b90 <set_opt+0x984>
     9fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a00:	ldr	r3, [r3, #216]	; 0xd8
     a04:	cmp	r3, #0
     a08:	beq	a34 <set_opt+0x828>
     a0c:	movw	r3, #0
     a10:	movt	r3, #0
     a14:	ldr	r3, [r3]
     a18:	mov	r2, #37	; 0x25
     a1c:	mov	r1, #1
     a20:	movw	r0, #0
     a24:	movt	r0, #0
     a28:	bl	0 <fwrite>
     a2c:	mvn	r0, #0
     a30:	bl	0 <exit>
     a34:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a38:	add	r3, r3, #1
     a3c:	ldrb	r3, [r3]
     a40:	cmp	r3, #0
     a44:	beq	a60 <set_opt+0x854>
     a48:	mov	r3, #1
     a4c:	str	r3, [fp, #-8]
     a50:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a54:	add	r3, r3, #1
     a58:	str	r3, [fp, #-32]	; 0xffffffe0
     a5c:	b	a9c <set_opt+0x890>
     a60:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a64:	cmp	r3, #0
     a68:	bne	a94 <set_opt+0x888>
     a6c:	movw	r3, #0
     a70:	movt	r3, #0
     a74:	ldr	r3, [r3]
     a78:	mov	r2, #28
     a7c:	mov	r1, #1
     a80:	movw	r0, #0
     a84:	movt	r0, #0
     a88:	bl	0 <fwrite>
     a8c:	mvn	r0, #0
     a90:	bl	0 <exit>
     a94:	mov	r3, #2
     a98:	str	r3, [fp, #-8]
     a9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     aa0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     aa4:	str	r2, [r3, #216]	; 0xd8
     aa8:	ldr	r3, [fp, #-8]
     aac:	b	b90 <set_opt+0x984>
     ab0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ab4:	mov	r2, #1
     ab8:	str	r2, [r3, #156]	; 0x9c
     abc:	mov	r3, #0
     ac0:	b	b90 <set_opt+0x984>
     ac4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ac8:	mov	r2, #1
     acc:	str	r2, [r3, #160]	; 0xa0
     ad0:	mov	r3, #0
     ad4:	b	b90 <set_opt+0x984>
     ad8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     adc:	mov	r2, #1
     ae0:	str	r2, [r3, #144]	; 0x90
     ae4:	mov	r3, #0
     ae8:	b	b90 <set_opt+0x984>
     aec:	ldr	r3, [fp, #-24]	; 0xffffffe8
     af0:	mov	r2, #1
     af4:	str	r2, [r3, #172]	; 0xac
     af8:	mov	r3, #0
     afc:	b	b90 <set_opt+0x984>
     b00:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b04:	mov	r2, #1
     b08:	str	r2, [r3, #112]	; 0x70
     b0c:	mov	r3, #0
     b10:	b	b90 <set_opt+0x984>
     b14:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b18:	mov	r2, #1
     b1c:	str	r2, [r3, #152]	; 0x98
     b20:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b24:	mov	r2, #1
     b28:	str	r2, [r3, #156]	; 0x9c
     b2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b30:	mov	r2, #1
     b34:	str	r2, [r3, #160]	; 0xa0
     b38:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b3c:	mov	r2, #1
     b40:	str	r2, [r3, #144]	; 0x90
     b44:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b48:	mov	r2, #1
     b4c:	str	r2, [r3, #148]	; 0x94
     b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b54:	mov	r2, #1
     b58:	str	r2, [r3, #172]	; 0xac
     b5c:	mov	r3, #0
     b60:	b	b90 <set_opt+0x984>
     b64:	movw	r3, #0
     b68:	movt	r3, #0
     b6c:	ldr	r0, [r3]
     b70:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b74:	ldrb	r3, [r3]
     b78:	mov	r2, r3
     b7c:	movw	r1, #0
     b80:	movt	r1, #0
     b84:	bl	0 <fprintf>
     b88:	mvn	r0, #0
     b8c:	bl	0 <exit>
     b90:	mov	r0, r3
     b94:	sub	sp, fp, #4
     b98:	ldr	fp, [sp]
     b9c:	add	sp, sp, #4
     ba0:	pop	{pc}		; (ldr pc, [sp], #4)

00000ba4 <get_opt>:
     ba4:	str	fp, [sp, #-8]!
     ba8:	str	lr, [sp, #4]
     bac:	add	fp, sp, #4
     bb0:	sub	sp, sp, #16
     bb4:	str	r0, [fp, #-8]
     bb8:	str	r1, [fp, #-12]
     bbc:	str	r2, [fp, #-16]
     bc0:	ldr	r3, [fp, #-12]
     bc4:	add	r3, r3, #1
     bc8:	ldrb	r3, [r3]
     bcc:	cmp	r3, #45	; 0x2d
     bd0:	bne	c04 <get_opt+0x60>
     bd4:	ldr	r3, [fp, #-12]
     bd8:	add	r3, r3, #1
     bdc:	ldr	r2, [fp, #-16]
     be0:	mov	r1, r3
     be4:	ldr	r0, [fp, #-8]
     be8:	bl	20c <set_opt>
     bec:	mov	r3, r0
     bf0:	cmp	r3, #2
     bf4:	moveq	r3, #1
     bf8:	movne	r3, #0
     bfc:	uxtb	r3, r3
     c00:	b	ca8 <get_opt+0x104>
     c04:	ldr	r3, [fp, #-12]
     c08:	add	r3, r3, #1
     c0c:	str	r3, [fp, #-12]
     c10:	ldr	r3, [fp, #-12]
     c14:	ldrb	r3, [r3]
     c18:	cmp	r3, #0
     c1c:	bne	c94 <get_opt+0xf0>
     c20:	movw	r3, #0
     c24:	movt	r3, #0
     c28:	ldr	r3, [r3]
     c2c:	mov	r2, #24
     c30:	mov	r1, #1
     c34:	movw	r0, #0
     c38:	movt	r0, #0
     c3c:	bl	0 <fwrite>
     c40:	mvn	r0, #0
     c44:	bl	0 <exit>
     c48:	ldr	r2, [fp, #-16]
     c4c:	ldr	r1, [fp, #-12]
     c50:	ldr	r0, [fp, #-8]
     c54:	bl	20c <set_opt>
     c58:	mov	r3, r0
     c5c:	cmp	r3, #1
     c60:	beq	c84 <get_opt+0xe0>
     c64:	cmp	r3, #2
     c68:	beq	c8c <get_opt+0xe8>
     c6c:	cmp	r3, #0
     c70:	bne	c94 <get_opt+0xf0>
     c74:	ldr	r3, [fp, #-12]
     c78:	add	r3, r3, #1
     c7c:	str	r3, [fp, #-12]
     c80:	b	c94 <get_opt+0xf0>
     c84:	mov	r3, #0
     c88:	b	ca8 <get_opt+0x104>
     c8c:	mov	r3, #1
     c90:	b	ca8 <get_opt+0x104>
     c94:	ldr	r3, [fp, #-12]
     c98:	ldrb	r3, [r3]
     c9c:	cmp	r3, #0
     ca0:	bne	c48 <get_opt+0xa4>
     ca4:	mov	r3, #0
     ca8:	mov	r0, r3
     cac:	sub	sp, fp, #4
     cb0:	ldr	fp, [sp]
     cb4:	add	sp, sp, #4
     cb8:	pop	{pc}		; (ldr pc, [sp], #4)

00000cbc <parse_opts>:
     cbc:	str	fp, [sp, #-8]!
     cc0:	str	lr, [sp, #4]
     cc4:	add	fp, sp, #4
     cc8:	sub	sp, sp, #32
     ccc:	str	r0, [fp, #-24]	; 0xffffffe8
     cd0:	str	r1, [fp, #-28]	; 0xffffffe4
     cd4:	str	r2, [fp, #-32]	; 0xffffffe0
     cd8:	mov	r3, #1
     cdc:	str	r3, [fp, #-8]
     ce0:	b	dc0 <parse_opts+0x104>
     ce4:	ldr	r3, [fp, #-8]
     ce8:	lsl	r3, r3, #2
     cec:	ldr	r2, [fp, #-28]	; 0xffffffe4
     cf0:	add	r3, r2, r3
     cf4:	ldr	r3, [r3]
     cf8:	ldrb	r3, [r3]
     cfc:	cmp	r3, #45	; 0x2d
     d00:	bne	d78 <parse_opts+0xbc>
     d04:	ldr	r3, [fp, #-8]
     d08:	lsl	r3, r3, #2
     d0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
     d10:	add	r3, r2, r3
     d14:	ldr	r3, [r3]
     d18:	str	r3, [fp, #-12]
     d1c:	ldr	r3, [fp, #-8]
     d20:	add	r3, r3, #1
     d24:	ldr	r2, [fp, #-24]	; 0xffffffe8
     d28:	cmp	r2, r3
     d2c:	ble	d4c <parse_opts+0x90>
     d30:	ldr	r3, [fp, #-8]
     d34:	add	r3, r3, #1
     d38:	lsl	r3, r3, #2
     d3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
     d40:	add	r3, r2, r3
     d44:	ldr	r3, [r3]
     d48:	b	d50 <parse_opts+0x94>
     d4c:	mov	r3, #0
     d50:	str	r3, [fp, #-16]
     d54:	ldr	r2, [fp, #-16]
     d58:	ldr	r1, [fp, #-12]
     d5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d60:	bl	ba4 <get_opt>
     d64:	mov	r2, r0
     d68:	ldr	r3, [fp, #-8]
     d6c:	add	r3, r3, r2
     d70:	str	r3, [fp, #-8]
     d74:	b	db4 <parse_opts+0xf8>
     d78:	ldr	r3, [fp, #-8]
     d7c:	lsl	r3, r3, #2
     d80:	ldr	r2, [fp, #-28]	; 0xffffffe4
     d84:	add	r2, r2, r3
     d88:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d8c:	ldr	r1, [r3, #204]	; 0xcc
     d90:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d94:	ldr	r3, [r3, #212]	; 0xd4
     d98:	add	ip, r3, #1
     d9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     da0:	str	ip, [r0, #212]	; 0xd4
     da4:	lsl	r3, r3, #2
     da8:	add	r3, r1, r3
     dac:	ldr	r2, [r2]
     db0:	str	r2, [r3]
     db4:	ldr	r3, [fp, #-8]
     db8:	add	r3, r3, #1
     dbc:	str	r3, [fp, #-8]
     dc0:	ldr	r2, [fp, #-8]
     dc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     dc8:	cmp	r2, r3
     dcc:	blt	ce4 <parse_opts+0x28>
     dd0:	nop	{0}
     dd4:	sub	sp, fp, #4
     dd8:	ldr	fp, [sp]
     ddc:	add	sp, sp, #4
     de0:	pop	{pc}		; (ldr pc, [sp], #4)

00000de4 <main>:
     de4:	str	fp, [sp, #-8]!
     de8:	str	lr, [sp, #4]
     dec:	add	fp, sp, #4
     df0:	sub	sp, sp, #256	; 0x100
     df4:	str	r0, [fp, #-256]	; 0xffffff00
     df8:	str	r1, [fp, #-260]	; 0xfffffefc
     dfc:	mov	r3, #0
     e00:	str	r3, [fp, #-8]
     e04:	mov	r3, #0
     e08:	str	r3, [fp, #-8]
     e0c:	mov	r3, #0
     e10:	str	r3, [fp, #-16]
     e14:	ldr	r3, [fp, #-256]	; 0xffffff00
     e18:	cmp	r3, #1
     e1c:	bgt	e3c <main+0x58>
     e20:	movw	r3, #0
     e24:	movt	r3, #0
     e28:	ldr	r3, [r3]
     e2c:	mov	r0, r3
     e30:	bl	0 <usage>
     e34:	mvn	r0, #0
     e38:	bl	0 <exit>
     e3c:	sub	r3, fp, #252	; 0xfc
     e40:	mov	r0, r3
     e44:	bl	0 <flatcc_init_options>
     e48:	ldr	r3, [fp, #-256]	; 0xffffff00
     e4c:	lsl	r3, r3, #2
     e50:	mov	r0, r3
     e54:	bl	0 <malloc>
     e58:	mov	r3, r0
     e5c:	str	r3, [fp, #-52]	; 0xffffffcc
     e60:	ldr	r3, [fp, #-52]	; 0xffffffcc
     e64:	cmp	r3, #0
     e68:	bne	e94 <main+0xb0>
     e6c:	movw	r3, #0
     e70:	movt	r3, #0
     e74:	ldr	r3, [r3]
     e78:	mov	r2, #26
     e7c:	mov	r1, #1
     e80:	movw	r0, #0
     e84:	movt	r0, #0
     e88:	bl	0 <fwrite>
     e8c:	mvn	r0, #0
     e90:	bl	0 <exit>
     e94:	ldr	r3, [fp, #-256]	; 0xffffff00
     e98:	lsl	r3, r3, #2
     e9c:	mov	r0, r3
     ea0:	bl	0 <malloc>
     ea4:	mov	r3, r0
     ea8:	str	r3, [fp, #-48]	; 0xffffffd0
     eac:	ldr	r3, [fp, #-48]	; 0xffffffd0
     eb0:	cmp	r3, #0
     eb4:	bne	eec <main+0x108>
     eb8:	movw	r3, #0
     ebc:	movt	r3, #0
     ec0:	ldr	r3, [r3]
     ec4:	mov	r2, #26
     ec8:	mov	r1, #1
     ecc:	movw	r0, #0
     ed0:	movt	r0, #0
     ed4:	bl	0 <fwrite>
     ed8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     edc:	mov	r0, r3
     ee0:	bl	0 <free>
     ee4:	mvn	r0, #0
     ee8:	bl	0 <exit>
     eec:	sub	r3, fp, #252	; 0xfc
     ef0:	mov	r2, r3
     ef4:	ldr	r1, [fp, #-260]	; 0xfffffefc
     ef8:	ldr	r0, [fp, #-256]	; 0xffffff00
     efc:	bl	cbc <parse_opts>
     f00:	ldr	r3, [fp, #-96]	; 0xffffffa0
     f04:	cmp	r3, #0
     f08:	beq	f20 <main+0x13c>
     f0c:	ldr	r3, [fp, #-108]	; 0xffffff94
     f10:	cmp	r3, #0
     f14:	beq	f20 <main+0x13c>
     f18:	mov	r3, #1
     f1c:	b	f24 <main+0x140>
     f20:	mov	r3, #0
     f24:	str	r3, [fp, #-104]	; 0xffffff98
     f28:	ldr	r3, [fp, #-40]	; 0xffffffd8
     f2c:	cmp	r3, #0
     f30:	bne	fe0 <main+0x1fc>
     f34:	ldr	r3, [fp, #-108]	; 0xffffff94
     f38:	cmp	r3, #0
     f3c:	beq	f4c <main+0x168>
     f40:	ldr	r3, [fp, #-72]	; 0xffffffb8
     f44:	cmp	r3, #0
     f48:	beq	f70 <main+0x18c>
     f4c:	movw	r3, #0
     f50:	movt	r3, #0
     f54:	ldr	r3, [r3]
     f58:	mov	r2, #17
     f5c:	mov	r1, #1
     f60:	movw	r0, #0
     f64:	movt	r0, #0
     f68:	bl	0 <fwrite>
     f6c:	b	1258 <main+0x474>
     f70:	sub	r0, fp, #252	; 0xfc
     f74:	mov	r3, #0
     f78:	mov	r2, #0
     f7c:	mov	r1, #0
     f80:	bl	0 <flatcc_create_context>
     f84:	str	r0, [fp, #-8]
     f88:	ldr	r3, [fp, #-8]
     f8c:	cmp	r3, #0
     f90:	bne	fb8 <main+0x1d4>
     f94:	movw	r3, #0
     f98:	movt	r3, #0
     f9c:	ldr	r3, [r3]
     fa0:	mov	r2, #49	; 0x31
     fa4:	mov	r1, #1
     fa8:	movw	r0, #0
     fac:	movt	r0, #0
     fb0:	bl	0 <fwrite>
     fb4:	b	1258 <main+0x474>
     fb8:	ldr	r0, [fp, #-8]
     fbc:	bl	0 <flatcc_generate_files>
     fc0:	mov	r3, r0
     fc4:	cmp	r3, #0
     fc8:	bne	1244 <main+0x460>
     fcc:	ldr	r0, [fp, #-8]
     fd0:	bl	0 <flatcc_destroy_context>
     fd4:	mov	r3, #0
     fd8:	str	r3, [fp, #-8]
     fdc:	b	1260 <main+0x47c>
     fe0:	ldr	r3, [fp, #-100]	; 0xffffff9c
     fe4:	cmp	r3, #0
     fe8:	bne	1034 <main+0x250>
     fec:	ldr	r3, [fp, #-96]	; 0xffffffa0
     ff0:	cmp	r3, #0
     ff4:	bne	1034 <main+0x250>
     ff8:	ldr	r3, [fp, #-92]	; 0xffffffa4
     ffc:	cmp	r3, #0
    1000:	bne	1034 <main+0x250>
    1004:	ldr	r3, [fp, #-108]	; 0xffffff94
    1008:	cmp	r3, #0
    100c:	bne	1034 <main+0x250>
    1010:	ldr	r3, [fp, #-104]	; 0xffffff98
    1014:	cmp	r3, #0
    1018:	bne	1034 <main+0x250>
    101c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    1020:	cmp	r3, #0
    1024:	bne	1034 <main+0x250>
    1028:	ldr	r3, [fp, #-84]	; 0xffffffac
    102c:	cmp	r3, #0
    1030:	beq	103c <main+0x258>
    1034:	mov	r3, #1
    1038:	b	1040 <main+0x25c>
    103c:	mov	r3, #0
    1040:	str	r3, [fp, #-24]	; 0xffffffe8
    1044:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1048:	cmp	r3, #0
    104c:	bne	107c <main+0x298>
    1050:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1054:	cmp	r3, #0
    1058:	beq	1074 <main+0x290>
    105c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    1060:	cmp	r3, #0
    1064:	bne	1074 <main+0x290>
    1068:	ldr	r3, [fp, #-92]	; 0xffffffa4
    106c:	cmp	r3, #0
    1070:	beq	107c <main+0x298>
    1074:	mov	r3, #1
    1078:	str	r3, [fp, #-100]	; 0xffffff9c
    107c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1080:	cmp	r3, #0
    1084:	beq	10f4 <main+0x310>
    1088:	ldr	r3, [fp, #-24]	; 0xffffffe8
    108c:	cmp	r3, #0
    1090:	beq	10f4 <main+0x310>
    1094:	ldr	r3, [fp, #-144]	; 0xffffff70
    1098:	cmp	r3, #0
    109c:	beq	10c4 <main+0x2e0>
    10a0:	movw	r3, #0
    10a4:	movt	r3, #0
    10a8:	ldr	r3, [r3]
    10ac:	mov	r2, #57	; 0x39
    10b0:	mov	r1, #1
    10b4:	movw	r0, #0
    10b8:	movt	r0, #0
    10bc:	bl	0 <fwrite>
    10c0:	b	1258 <main+0x474>
    10c4:	ldr	r3, [fp, #-128]	; 0xffffff80
    10c8:	cmp	r3, #0
    10cc:	beq	10f4 <main+0x310>
    10d0:	movw	r3, #0
    10d4:	movt	r3, #0
    10d8:	ldr	r3, [r3]
    10dc:	mov	r2, #58	; 0x3a
    10e0:	mov	r1, #1
    10e4:	movw	r0, #0
    10e8:	movt	r0, #0
    10ec:	bl	0 <fwrite>
    10f0:	b	1258 <main+0x474>
    10f4:	ldr	r3, [fp, #-132]	; 0xffffff7c
    10f8:	cmp	r3, #0
    10fc:	beq	1130 <main+0x34c>
    1100:	ldr	r3, [fp, #-136]	; 0xffffff78
    1104:	cmp	r3, #0
    1108:	bne	1130 <main+0x34c>
    110c:	movw	r3, #0
    1110:	movt	r3, #0
    1114:	ldr	r3, [r3]
    1118:	mov	r2, #44	; 0x2c
    111c:	mov	r1, #1
    1120:	movw	r0, #0
    1124:	movt	r0, #0
    1128:	bl	0 <fwrite>
    112c:	b	1258 <main+0x474>
    1130:	ldr	r3, [fp, #-144]	; 0xffffff70
    1134:	cmp	r3, #0
    1138:	beq	116c <main+0x388>
    113c:	ldr	r3, [fp, #-128]	; 0xffffff80
    1140:	cmp	r3, #0
    1144:	beq	116c <main+0x388>
    1148:	movw	r3, #0
    114c:	movt	r3, #0
    1150:	ldr	r3, [r3]
    1154:	mov	r2, #38	; 0x26
    1158:	mov	r1, #1
    115c:	movw	r0, #0
    1160:	movt	r0, #0
    1164:	bl	0 <fwrite>
    1168:	b	1258 <main+0x474>
    116c:	mov	r3, #0
    1170:	str	r3, [fp, #-12]
    1174:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1178:	str	r3, [fp, #-20]	; 0xffffffec
    117c:	b	1230 <main+0x44c>
    1180:	ldr	r3, [fp, #-20]	; 0xffffffec
    1184:	ldr	r1, [r3]
    1188:	sub	r0, fp, #252	; 0xfc
    118c:	mov	r3, #0
    1190:	mov	r2, #0
    1194:	bl	0 <flatcc_create_context>
    1198:	str	r0, [fp, #-8]
    119c:	ldr	r3, [fp, #-8]
    11a0:	cmp	r3, #0
    11a4:	bne	11cc <main+0x3e8>
    11a8:	movw	r3, #0
    11ac:	movt	r3, #0
    11b0:	ldr	r3, [r3]
    11b4:	mov	r2, #49	; 0x31
    11b8:	mov	r1, #1
    11bc:	movw	r0, #0
    11c0:	movt	r0, #0
    11c4:	bl	0 <fwrite>
    11c8:	b	1258 <main+0x474>
    11cc:	ldr	r3, [fp, #-20]	; 0xffffffec
    11d0:	ldr	r3, [r3]
    11d4:	mov	r1, r3
    11d8:	ldr	r0, [fp, #-8]
    11dc:	bl	0 <flatcc_parse_file>
    11e0:	mov	r3, r0
    11e4:	cmp	r3, #0
    11e8:	bne	124c <main+0x468>
    11ec:	ldr	r0, [fp, #-8]
    11f0:	bl	0 <flatcc_generate_files>
    11f4:	mov	r3, r0
    11f8:	cmp	r3, #0
    11fc:	bne	1254 <main+0x470>
    1200:	ldr	r0, [fp, #-8]
    1204:	bl	0 <flatcc_destroy_context>
    1208:	mov	r3, #0
    120c:	str	r3, [fp, #-8]
    1210:	mov	r3, #1
    1214:	str	r3, [fp, #-124]	; 0xffffff84
    1218:	ldr	r3, [fp, #-12]
    121c:	add	r3, r3, #1
    1220:	str	r3, [fp, #-12]
    1224:	ldr	r3, [fp, #-20]	; 0xffffffec
    1228:	add	r3, r3, #4
    122c:	str	r3, [fp, #-20]	; 0xffffffec
    1230:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1234:	ldr	r2, [fp, #-12]
    1238:	cmp	r2, r3
    123c:	blt	1180 <main+0x39c>
    1240:	b	1260 <main+0x47c>
    1244:	nop	{0}
    1248:	b	1258 <main+0x474>
    124c:	nop	{0}
    1250:	b	1258 <main+0x474>
    1254:	nop	{0}
    1258:	mvn	r3, #0
    125c:	str	r3, [fp, #-16]
    1260:	ldr	r3, [fp, #-8]
    1264:	cmp	r3, #0
    1268:	beq	127c <main+0x498>
    126c:	ldr	r0, [fp, #-8]
    1270:	bl	0 <flatcc_destroy_context>
    1274:	mov	r3, #0
    1278:	str	r3, [fp, #-8]
    127c:	ldr	r3, [fp, #-16]
    1280:	cmp	r3, #0
    1284:	beq	12a8 <main+0x4c4>
    1288:	movw	r3, #0
    128c:	movt	r3, #0
    1290:	ldr	r3, [r3]
    1294:	mov	r2, #14
    1298:	mov	r1, #1
    129c:	movw	r0, #0
    12a0:	movt	r0, #0
    12a4:	bl	0 <fwrite>
    12a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    12ac:	mov	r0, r3
    12b0:	bl	0 <free>
    12b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    12b8:	mov	r0, r3
    12bc:	bl	0 <free>
    12c0:	ldr	r3, [fp, #-16]
    12c4:	mov	r0, r3
    12c8:	sub	sp, fp, #4
    12cc:	ldr	fp, [sp]
    12d0:	add	sp, sp, #4
    12d4:	pop	{pc}		; (ldr pc, [sp], #4)
