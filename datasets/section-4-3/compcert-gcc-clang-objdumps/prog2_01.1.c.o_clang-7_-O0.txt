
../compcert-repos/prog2/CMakeFiles/1.1.1.dir/Aula01_Ficheiros_e_Formatos_de_dados/01.1.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <in_array>:
   0:	sub	sp, sp, #20
   4:	str	r0, [sp, #12]
   8:	str	r1, [sp, #8]
   c:	str	r2, [sp, #4]
  10:	movw	r0, #0
  14:	str	r0, [sp]
  18:	str	r0, [sp]
  1c:	ldr	r0, [sp]
  20:	ldr	r1, [sp, #4]
  24:	cmp	r0, r1
  28:	bgt	68 <in_array+0x68>
  2c:	ldr	r0, [sp, #8]
  30:	ldr	r1, [sp]
  34:	add	r0, r0, r1, lsl #2
  38:	ldr	r0, [r0]
  3c:	ldr	r1, [sp, #12]
  40:	cmp	r0, r1
  44:	bne	54 <in_array+0x54>
  48:	movw	r0, #1
  4c:	str	r0, [sp, #16]
  50:	b	70 <in_array+0x70>
  54:	b	58 <in_array+0x58>
  58:	ldr	r0, [sp]
  5c:	add	r0, r0, #1
  60:	str	r0, [sp]
  64:	b	1c <in_array+0x1c>
  68:	movw	r0, #0
  6c:	str	r0, [sp, #16]
  70:	ldr	r0, [sp, #16]
  74:	add	sp, sp, #20
  78:	bx	lr

0000007c <main>:
  7c:	push	{r4, r5, fp, lr}
  80:	add	fp, sp, #8
  84:	sub	sp, sp, #240	; 0xf0
  88:	movw	r0, #0
  8c:	movt	r0, #0
  90:	movw	r1, #0
  94:	movt	r1, #0
  98:	movw	r2, #0
  9c:	str	r2, [fp, #-12]
  a0:	sub	r2, fp, #48	; 0x30
  a4:	str	r0, [sp, #16]
  a8:	mov	r0, r2
  ac:	movw	r2, #32
  b0:	bl	0 <memcpy>
  b4:	movw	r0, #0
  b8:	movt	r0, #0
  bc:	ldr	r1, [r0]
  c0:	str	r1, [fp, #-64]	; 0xffffffc0
  c4:	ldr	r1, [r0, #4]
  c8:	str	r1, [fp, #-60]	; 0xffffffc4
  cc:	ldr	r1, [r0, #8]
  d0:	str	r1, [fp, #-56]	; 0xffffffc8
  d4:	ldr	r0, [r0, #12]
  d8:	str	r0, [fp, #-52]	; 0xffffffcc
  dc:	movw	r0, #0
  e0:	movt	r0, #0
  e4:	ldr	r1, [r0]
  e8:	str	r1, [fp, #-72]	; 0xffffffb8
  ec:	ldr	r0, [r0, #4]
  f0:	str	r0, [fp, #-68]	; 0xffffffbc
  f4:	sub	r0, fp, #96	; 0x60
  f8:	ldr	r1, [sp, #16]
  fc:	movw	r2, #24
 100:	bl	0 <memcpy>
 104:	movw	r0, #0
 108:	movt	r0, #0
 10c:	ldr	r1, [r0]
 110:	str	r1, [fp, #-104]	; 0xffffff98
 114:	ldr	r0, [r0, #4]
 118:	str	r0, [fp, #-100]	; 0xffffff9c
 11c:	movw	r0, #0
 120:	movt	r0, #0
 124:	ldr	r1, [r0]
 128:	str	r1, [fp, #-112]	; 0xffffff90
 12c:	ldr	r0, [r0, #4]
 130:	str	r0, [fp, #-108]	; 0xffffff94
 134:	movw	r0, #0
 138:	movt	r0, #0
 13c:	movw	r1, #0
 140:	movt	r1, #0
 144:	bl	0 <fopen>
 148:	str	r0, [fp, #-16]
 14c:	movw	r0, #0
 150:	str	r0, [fp, #-120]	; 0xffffff88
 154:	add	r0, sp, #24
 158:	movw	r1, #0
 15c:	and	r1, r1, #255	; 0xff
 160:	movw	r2, #104	; 0x68
 164:	bl	0 <memset>
 168:	ldr	r0, [fp, #-16]
 16c:	bl	0 <getc>
 170:	str	r0, [fp, #-116]	; 0xffffff8c
 174:	ldr	r0, [fp, #-116]	; 0xffffff8c
 178:	cmn	r0, #1
 17c:	bne	184 <main+0x108>
 180:	b	2c4 <main+0x248>
 184:	sub	r1, fp, #48	; 0x30
 188:	ldr	r0, [fp, #-116]	; 0xffffff8c
 18c:	movw	r2, #8
 190:	bl	0 <in_array>
 194:	cmp	r0, #0
 198:	beq	1a8 <main+0x12c>
 19c:	movw	r0, #97	; 0x61
 1a0:	str	r0, [fp, #-116]	; 0xffffff8c
 1a4:	b	26c <main+0x1f0>
 1a8:	sub	r1, fp, #64	; 0x40
 1ac:	ldr	r0, [fp, #-116]	; 0xffffff8c
 1b0:	movw	r2, #4
 1b4:	bl	0 <in_array>
 1b8:	cmp	r0, #0
 1bc:	beq	1cc <main+0x150>
 1c0:	movw	r0, #101	; 0x65
 1c4:	str	r0, [fp, #-116]	; 0xffffff8c
 1c8:	b	268 <main+0x1ec>
 1cc:	sub	r1, fp, #72	; 0x48
 1d0:	ldr	r0, [fp, #-116]	; 0xffffff8c
 1d4:	movw	r2, #2
 1d8:	bl	0 <in_array>
 1dc:	cmp	r0, #0
 1e0:	beq	1f0 <main+0x174>
 1e4:	movw	r0, #105	; 0x69
 1e8:	str	r0, [fp, #-116]	; 0xffffff8c
 1ec:	b	264 <main+0x1e8>
 1f0:	sub	r1, fp, #96	; 0x60
 1f4:	ldr	r0, [fp, #-116]	; 0xffffff8c
 1f8:	movw	r2, #6
 1fc:	bl	0 <in_array>
 200:	cmp	r0, #0
 204:	beq	214 <main+0x198>
 208:	movw	r0, #111	; 0x6f
 20c:	str	r0, [fp, #-116]	; 0xffffff8c
 210:	b	260 <main+0x1e4>
 214:	sub	r1, fp, #104	; 0x68
 218:	ldr	r0, [fp, #-116]	; 0xffffff8c
 21c:	movw	r2, #2
 220:	bl	0 <in_array>
 224:	cmp	r0, #0
 228:	beq	238 <main+0x1bc>
 22c:	movw	r0, #117	; 0x75
 230:	str	r0, [fp, #-116]	; 0xffffff8c
 234:	b	25c <main+0x1e0>
 238:	sub	r1, fp, #112	; 0x70
 23c:	ldr	r0, [fp, #-116]	; 0xffffff8c
 240:	movw	r2, #2
 244:	bl	0 <in_array>
 248:	cmp	r0, #0
 24c:	beq	258 <main+0x1dc>
 250:	movw	r0, #99	; 0x63
 254:	str	r0, [fp, #-116]	; 0xffffff8c
 258:	b	25c <main+0x1e0>
 25c:	b	260 <main+0x1e4>
 260:	b	264 <main+0x1e8>
 264:	b	268 <main+0x1ec>
 268:	b	26c <main+0x1f0>
 26c:	ldr	r0, [fp, #-116]	; 0xffffff8c
 270:	bl	0 <tolower>
 274:	str	r0, [fp, #-116]	; 0xffffff8c
 278:	ldr	r0, [fp, #-116]	; 0xffffff8c
 27c:	sub	r0, r0, #97	; 0x61
 280:	str	r0, [fp, #-116]	; 0xffffff8c
 284:	ldr	r0, [fp, #-116]	; 0xffffff8c
 288:	cmp	r0, #25
 28c:	bgt	2c0 <main+0x244>
 290:	ldr	r0, [fp, #-116]	; 0xffffff8c
 294:	cmp	r0, #0
 298:	blt	2c0 <main+0x244>
 29c:	ldr	r0, [fp, #-116]	; 0xffffff8c
 2a0:	add	r1, sp, #24
 2a4:	add	r0, r1, r0, lsl #2
 2a8:	ldr	r1, [r0]
 2ac:	add	r1, r1, #1
 2b0:	str	r1, [r0]
 2b4:	ldr	r0, [fp, #-120]	; 0xffffff88
 2b8:	add	r0, r0, #1
 2bc:	str	r0, [fp, #-120]	; 0xffffff88
 2c0:	b	168 <main+0xec>
 2c4:	ldr	r0, [fp, #-120]	; 0xffffff88
 2c8:	str	r0, [sp, #20]
 2cc:	ldr	r0, [fp, #-16]
 2d0:	bl	0 <fclose>
 2d4:	movw	lr, #0
 2d8:	movt	lr, #0
 2dc:	str	r0, [sp, #12]
 2e0:	mov	r0, lr
 2e4:	bl	0 <printf>
 2e8:	ldr	r1, [fp, #-120]	; 0xffffff88
 2ec:	movw	lr, #0
 2f0:	movt	lr, #0
 2f4:	str	r0, [sp, #8]
 2f8:	mov	r0, lr
 2fc:	bl	0 <printf>
 300:	movw	r1, #0
 304:	str	r1, [fp, #-120]	; 0xffffff88
 308:	str	r0, [sp, #4]
 30c:	ldr	r0, [fp, #-120]	; 0xffffff88
 310:	cmp	r0, #25
 314:	bgt	374 <main+0x2f8>
 318:	vldr	s0, [pc, #96]	; 380 <main+0x304>
 31c:	ldr	r0, [fp, #-120]	; 0xffffff88
 320:	add	r1, r0, #97	; 0x61
 324:	add	r2, sp, #24
 328:	add	r0, r2, r0, lsl #2
 32c:	ldr	r0, [r0]
 330:	vmov	s2, r0
 334:	vcvt.f32.s32	s2, s2
 338:	ldr	r0, [sp, #20]
 33c:	vmov	s4, r0
 340:	vcvt.f32.s32	s4, s4
 344:	vdiv.f32	s2, s2, s4
 348:	vmul.f32	s0, s2, s0
 34c:	vcvt.f64.f32	d16, s0
 350:	movw	r0, #0
 354:	movt	r0, #0
 358:	vmov	r2, r3, d16
 35c:	bl	0 <printf>
 360:	str	r0, [sp]
 364:	ldr	r0, [fp, #-120]	; 0xffffff88
 368:	add	r0, r0, #1
 36c:	str	r0, [fp, #-120]	; 0xffffff88
 370:	b	30c <main+0x290>
 374:	movw	r0, #0
 378:	sub	sp, fp, #8
 37c:	pop	{r4, r5, fp, pc}
 380:	.word	0x42c80000
