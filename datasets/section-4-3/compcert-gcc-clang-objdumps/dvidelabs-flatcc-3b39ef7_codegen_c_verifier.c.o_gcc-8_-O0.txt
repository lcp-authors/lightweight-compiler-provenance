
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c_verifier.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <error_tok_2>:
       0:	str	fp, [sp, #-8]!
       4:	str	lr, [sp, #4]
       8:	add	fp, sp, #4
       c:	sub	sp, sp, #24
      10:	str	r0, [fp, #-8]
      14:	str	r1, [fp, #-12]
      18:	str	r2, [fp, #-16]
      1c:	str	r3, [fp, #-20]	; 0xffffffec
      20:	mov	r3, #0
      24:	str	r3, [sp, #4]
      28:	mov	r3, #0
      2c:	str	r3, [sp]
      30:	ldr	r3, [fp, #-20]	; 0xffffffec
      34:	ldr	r2, [fp, #-16]
      38:	ldr	r1, [fp, #-12]
      3c:	ldr	r0, [fp, #-8]
      40:	bl	0 <__flatcc_error_report>
      44:	nop	{0}
      48:	sub	sp, fp, #4
      4c:	ldr	fp, [sp]
      50:	add	sp, sp, #4
      54:	pop	{pc}		; (ldr pc, [sp], #4)

00000058 <token_name>:
      58:	push	{fp}		; (str fp, [sp, #-4]!)
      5c:	add	fp, sp, #0
      60:	sub	sp, sp, #20
      64:	str	r0, [fp, #-8]
      68:	str	r1, [fp, #-12]
      6c:	str	r2, [fp, #-16]
      70:	ldr	r3, [fp, #-8]
      74:	ldr	r2, [r3, #4]
      78:	ldr	r3, [fp, #-12]
      7c:	str	r2, [r3]
      80:	ldr	r3, [fp, #-8]
      84:	ldr	r2, [r3]
      88:	ldr	r3, [fp, #-16]
      8c:	str	r2, [r3]
      90:	nop	{0}
      94:	add	sp, fp, #0
      98:	pop	{fp}		; (ldr fp, [sp], #4)
      9c:	bx	lr

000000a0 <fb_compound_name>:
      a0:	str	fp, [sp, #-8]!
      a4:	str	lr, [sp, #4]
      a8:	add	fp, sp, #4
      ac:	sub	sp, sp, #8
      b0:	str	r0, [fp, #-8]
      b4:	str	r1, [fp, #-12]
      b8:	ldr	r3, [fp, #-8]
      bc:	ldr	r3, [r3, #12]
      c0:	ldr	r1, [fp, #-8]
      c4:	ldr	r2, [fp, #-12]
      c8:	mov	r0, r3
      cc:	bl	0 <__flatcc_fb_scoped_symbol_name>
      d0:	nop	{0}
      d4:	sub	sp, fp, #4
      d8:	ldr	fp, [sp]
      dc:	add	sp, sp, #4
      e0:	pop	{pc}		; (ldr pc, [sp], #4)

000000e4 <symbol_name>:
      e4:	str	fp, [sp, #-8]!
      e8:	str	lr, [sp, #4]
      ec:	add	fp, sp, #4
      f0:	sub	sp, sp, #16
      f4:	str	r0, [fp, #-8]
      f8:	str	r1, [fp, #-12]
      fc:	str	r2, [fp, #-16]
     100:	ldr	r3, [fp, #-8]
     104:	ldr	r3, [r3, #4]
     108:	ldr	r2, [fp, #-16]
     10c:	ldr	r1, [fp, #-12]
     110:	mov	r0, r3
     114:	bl	58 <token_name>
     118:	nop	{0}
     11c:	sub	sp, fp, #4
     120:	ldr	fp, [sp]
     124:	add	sp, sp, #4
     128:	pop	{pc}		; (ldr pc, [sp], #4)

0000012c <gen_prologue>:
     12c:	str	fp, [sp, #-8]!
     130:	str	lr, [sp, #4]
     134:	add	fp, sp, #4
     138:	sub	sp, sp, #8
     13c:	str	r0, [fp, #-8]
     140:	ldr	r3, [fp, #-8]
     144:	ldr	r3, [r3, #212]	; 0xd4
     148:	ldr	r3, [r3, #140]	; 0x8c
     14c:	cmp	r3, #0
     150:	beq	170 <gen_prologue+0x44>
     154:	ldr	r3, [fp, #-8]
     158:	ldr	r3, [r3, #204]	; 0xcc
     15c:	mov	r2, #36	; 0x24
     160:	mov	r1, #1
     164:	movw	r0, #0
     168:	movt	r0, #0
     16c:	bl	0 <fwrite>
     170:	mov	r3, #0
     174:	mov	r0, r3
     178:	sub	sp, fp, #4
     17c:	ldr	fp, [sp]
     180:	add	sp, sp, #4
     184:	pop	{pc}		; (ldr pc, [sp], #4)

00000188 <gen_epilogue>:
     188:	str	fp, [sp, #-8]!
     18c:	str	lr, [sp, #4]
     190:	add	fp, sp, #4
     194:	sub	sp, sp, #8
     198:	str	r0, [fp, #-8]
     19c:	ldr	r3, [fp, #-8]
     1a0:	ldr	r3, [r3, #212]	; 0xd4
     1a4:	ldr	r3, [r3, #140]	; 0x8c
     1a8:	cmp	r3, #0
     1ac:	beq	1cc <gen_epilogue+0x44>
     1b0:	ldr	r3, [fp, #-8]
     1b4:	ldr	r3, [r3, #204]	; 0xcc
     1b8:	mov	r2, #36	; 0x24
     1bc:	mov	r1, #1
     1c0:	movw	r0, #0
     1c4:	movt	r0, #0
     1c8:	bl	0 <fwrite>
     1cc:	mov	r3, #0
     1d0:	mov	r0, r3
     1d4:	sub	sp, fp, #4
     1d8:	ldr	fp, [sp]
     1dc:	add	sp, sp, #4
     1e0:	pop	{pc}		; (ldr pc, [sp], #4)

000001e4 <gen_verifier_pretext>:
     1e4:	str	fp, [sp, #-8]!
     1e8:	str	lr, [sp, #4]
     1ec:	add	fp, sp, #4
     1f0:	sub	sp, sp, #8
     1f4:	str	r0, [fp, #-8]
     1f8:	ldr	r3, [fp, #-8]
     1fc:	ldr	r0, [r3, #204]	; 0xcc
     200:	ldr	r3, [fp, #-8]
     204:	ldr	r3, [r3, #208]	; 0xd0
     208:	ldr	r2, [r3, #164]	; 0xa4
     20c:	ldr	r3, [fp, #-8]
     210:	ldr	r3, [r3, #208]	; 0xd0
     214:	ldr	r3, [r3, #164]	; 0xa4
     218:	movw	r1, #0
     21c:	movt	r1, #0
     220:	bl	0 <fprintf>
     224:	ldr	r3, [fp, #-8]
     228:	ldr	r3, [r3, #204]	; 0xcc
     22c:	mov	r2, #81	; 0x51
     230:	mov	r1, #1
     234:	movw	r0, #0
     238:	movt	r0, #0
     23c:	bl	0 <fwrite>
     240:	ldr	r3, [fp, #-8]
     244:	ldr	r0, [r3, #204]	; 0xcc
     248:	ldr	r3, [fp, #-8]
     24c:	ldr	r3, [r3, #208]	; 0xd0
     250:	ldr	r3, [r3, #164]	; 0xa4
     254:	mov	r2, r3
     258:	movw	r1, #0
     25c:	movt	r1, #0
     260:	bl	0 <fprintf>
     264:	ldr	r3, [fp, #-8]
     268:	ldr	r0, [r3, #204]	; 0xcc
     26c:	ldr	r3, [fp, #-8]
     270:	ldr	r3, [r3, #208]	; 0xd0
     274:	ldr	r3, [r3, #160]	; 0xa0
     278:	mov	r2, r3
     27c:	movw	r1, #0
     280:	movt	r1, #0
     284:	bl	0 <fprintf>
     288:	ldr	r3, [fp, #-8]
     28c:	ldr	r3, [r3, #204]	; 0xcc
     290:	mov	r2, #7
     294:	mov	r1, #1
     298:	movw	r0, #0
     29c:	movt	r0, #0
     2a0:	bl	0 <fwrite>
     2a4:	ldr	r3, [fp, #-8]
     2a8:	ldr	r3, [r3, #204]	; 0xcc
     2ac:	mov	r2, #36	; 0x24
     2b0:	mov	r1, #1
     2b4:	movw	r0, #0
     2b8:	movt	r0, #0
     2bc:	bl	0 <fwrite>
     2c0:	movw	r2, #0
     2c4:	movt	r2, #0
     2c8:	movw	r1, #0
     2cc:	movt	r1, #0
     2d0:	ldr	r0, [fp, #-8]
     2d4:	bl	0 <__flatcc_fb_gen_c_includes>
     2d8:	ldr	r0, [fp, #-8]
     2dc:	bl	12c <gen_prologue>
     2e0:	ldr	r3, [fp, #-8]
     2e4:	ldr	r3, [r3, #204]	; 0xcc
     2e8:	mov	r1, r3
     2ec:	mov	r0, #10
     2f0:	bl	0 <fputc>
     2f4:	mov	r3, #0
     2f8:	mov	r0, r3
     2fc:	sub	sp, fp, #4
     300:	ldr	fp, [sp]
     304:	add	sp, sp, #4
     308:	pop	{pc}		; (ldr pc, [sp], #4)

0000030c <gen_verifier_footer>:
     30c:	str	fp, [sp, #-8]!
     310:	str	lr, [sp, #4]
     314:	add	fp, sp, #4
     318:	sub	sp, sp, #8
     31c:	str	r0, [fp, #-8]
     320:	ldr	r0, [fp, #-8]
     324:	bl	188 <gen_epilogue>
     328:	ldr	r3, [fp, #-8]
     32c:	ldr	r0, [r3, #204]	; 0xcc
     330:	ldr	r3, [fp, #-8]
     334:	ldr	r3, [r3, #208]	; 0xd0
     338:	ldr	r3, [r3, #164]	; 0xa4
     33c:	mov	r2, r3
     340:	movw	r1, #0
     344:	movt	r1, #0
     348:	bl	0 <fprintf>
     34c:	mov	r3, #0
     350:	mov	r0, r3
     354:	sub	sp, fp, #4
     358:	ldr	fp, [sp]
     35c:	add	sp, sp, #4
     360:	pop	{pc}		; (ldr pc, [sp], #4)

00000364 <gen_union_verifier>:
     364:	str	r4, [sp, #-12]!
     368:	str	fp, [sp, #4]
     36c:	str	lr, [sp, #8]
     370:	add	fp, sp, #8
     374:	sub	sp, sp, #492	; 0x1ec
     378:	str	r0, [fp, #-472]	; 0xfffffe28
     37c:	str	r1, [fp, #-476]	; 0xfffffe24
     380:	sub	r3, fp, #240	; 0xf0
     384:	mov	r2, #220	; 0xdc
     388:	mov	r1, #0
     38c:	mov	r0, r3
     390:	bl	0 <memset>
     394:	sub	r3, fp, #460	; 0x1cc
     398:	mov	r2, #220	; 0xdc
     39c:	mov	r1, #0
     3a0:	mov	r0, r3
     3a4:	bl	0 <memset>
     3a8:	sub	r3, fp, #240	; 0xf0
     3ac:	mov	r1, r3
     3b0:	ldr	r0, [fp, #-476]	; 0xfffffe24
     3b4:	bl	a0 <fb_compound_name>
     3b8:	ldr	r3, [fp, #-472]	; 0xfffffe28
     3bc:	ldr	r3, [r3, #204]	; 0xcc
     3c0:	sub	r2, fp, #240	; 0xf0
     3c4:	movw	r1, #0
     3c8:	movt	r1, #0
     3cc:	mov	r0, r3
     3d0:	bl	0 <fprintf>
     3d4:	ldr	r3, [fp, #-476]	; 0xfffffe24
     3d8:	ldr	r3, [r3, #20]
     3dc:	str	r3, [fp, #-16]
     3e0:	b	5e0 <gen_union_verifier+0x27c>
     3e4:	ldr	r3, [fp, #-16]
     3e8:	str	r3, [fp, #-20]	; 0xffffffec
     3ec:	sub	r2, fp, #468	; 0x1d4
     3f0:	sub	r3, fp, #464	; 0x1d0
     3f4:	mov	r1, r3
     3f8:	ldr	r0, [fp, #-16]
     3fc:	bl	e4 <symbol_name>
     400:	ldr	r3, [fp, #-20]	; 0xffffffec
     404:	ldrh	r3, [r3, #24]
     408:	cmp	r3, #10
     40c:	beq	54c <gen_union_verifier+0x1e8>
     410:	cmp	r3, #14
     414:	beq	424 <gen_union_verifier+0xc0>
     418:	cmp	r3, #0
     41c:	bne	584 <gen_union_verifier+0x220>
     420:	b	5d4 <gen_union_verifier+0x270>
     424:	ldr	r3, [fp, #-20]	; 0xffffffec
     428:	ldr	r3, [r3, #16]
     42c:	sub	r2, fp, #460	; 0x1cc
     430:	mov	r1, r2
     434:	mov	r0, r3
     438:	bl	a0 <fb_compound_name>
     43c:	ldr	r3, [fp, #-20]	; 0xffffffec
     440:	ldr	r3, [r3, #16]
     444:	ldrh	r3, [r3, #8]
     448:	cmp	r3, #0
     44c:	beq	45c <gen_union_verifier+0xf8>
     450:	cmp	r3, #1
     454:	beq	49c <gen_union_verifier+0x138>
     458:	b	4fc <gen_union_verifier+0x198>
     45c:	ldr	r3, [fp, #-472]	; 0xfffffe28
     460:	ldr	r0, [r3, #204]	; 0xcc
     464:	ldr	r3, [fp, #-20]	; 0xffffffec
     468:	ldrd	r2, [r3, #48]	; 0x30
     46c:	mov	ip, r2
     470:	ldr	r3, [fp, #-464]	; 0xfffffe30
     474:	ldr	r2, [fp, #-468]	; 0xfffffe2c
     478:	sub	r1, fp, #460	; 0x1cc
     47c:	str	r2, [sp, #4]
     480:	str	r3, [sp]
     484:	mov	r3, r1
     488:	mov	r2, ip
     48c:	movw	r1, #0
     490:	movt	r1, #0
     494:	bl	0 <fprintf>
     498:	b	5d4 <gen_union_verifier+0x270>
     49c:	ldr	r3, [fp, #-472]	; 0xfffffe28
     4a0:	ldr	ip, [r3, #204]	; 0xcc
     4a4:	ldr	r3, [fp, #-20]	; 0xffffffec
     4a8:	ldrd	r2, [r3, #48]	; 0x30
     4ac:	mov	r4, r2
     4b0:	ldr	r3, [fp, #-20]	; 0xffffffec
     4b4:	ldr	r3, [r3, #16]
     4b8:	ldrd	r2, [r3, #112]	; 0x70
     4bc:	ldr	r1, [fp, #-20]	; 0xffffffec
     4c0:	ldr	r1, [r1, #16]
     4c4:	ldrh	r1, [r1, #104]	; 0x68
     4c8:	mov	lr, r1
     4cc:	ldr	r1, [fp, #-464]	; 0xfffffe30
     4d0:	ldr	r0, [fp, #-468]	; 0xfffffe2c
     4d4:	str	r0, [sp, #16]
     4d8:	str	r1, [sp, #12]
     4dc:	str	lr, [sp, #8]
     4e0:	strd	r2, [sp]
     4e4:	mov	r2, r4
     4e8:	movw	r1, #0
     4ec:	movt	r1, #0
     4f0:	mov	r0, ip
     4f4:	bl	0 <fprintf>
     4f8:	b	5d4 <gen_union_verifier+0x270>
     4fc:	movw	r3, #0
     500:	movt	r3, #0
     504:	ldr	r0, [r3]
     508:	movw	r3, #0
     50c:	movt	r3, #0
     510:	str	r3, [sp]
     514:	mov	r3, #74	; 0x4a
     518:	movw	r2, #0
     51c:	movt	r2, #0
     520:	movw	r1, #0
     524:	movt	r1, #0
     528:	bl	0 <fprintf>
     52c:	movw	r3, #0
     530:	movt	r3, #0
     534:	mov	r2, #74	; 0x4a
     538:	movw	r1, #0
     53c:	movt	r1, #0
     540:	movw	r0, #0
     544:	movt	r0, #0
     548:	bl	0 <__assert_fail>
     54c:	ldr	r3, [fp, #-472]	; 0xfffffe28
     550:	ldr	r0, [r3, #204]	; 0xcc
     554:	ldr	r3, [fp, #-20]	; 0xffffffec
     558:	ldrd	r2, [r3, #48]	; 0x30
     55c:	mov	r1, r2
     560:	ldr	r2, [fp, #-464]	; 0xfffffe30
     564:	ldr	r3, [fp, #-468]	; 0xfffffe2c
     568:	str	r3, [sp]
     56c:	mov	r3, r2
     570:	mov	r2, r1
     574:	movw	r1, #0
     578:	movt	r1, #0
     57c:	bl	0 <fprintf>
     580:	b	5d4 <gen_union_verifier+0x270>
     584:	movw	r3, #0
     588:	movt	r3, #0
     58c:	ldr	r0, [r3]
     590:	movw	r3, #0
     594:	movt	r3, #0
     598:	str	r3, [sp]
     59c:	mov	r3, #83	; 0x53
     5a0:	movw	r2, #0
     5a4:	movt	r2, #0
     5a8:	movw	r1, #0
     5ac:	movt	r1, #0
     5b0:	bl	0 <fprintf>
     5b4:	movw	r3, #0
     5b8:	movt	r3, #0
     5bc:	mov	r2, #83	; 0x53
     5c0:	movw	r1, #0
     5c4:	movt	r1, #0
     5c8:	movw	r0, #0
     5cc:	movt	r0, #0
     5d0:	bl	0 <__assert_fail>
     5d4:	ldr	r3, [fp, #-16]
     5d8:	ldr	r3, [r3]
     5dc:	str	r3, [fp, #-16]
     5e0:	ldr	r3, [fp, #-16]
     5e4:	cmp	r3, #0
     5e8:	bne	3e4 <gen_union_verifier+0x80>
     5ec:	ldr	r3, [fp, #-472]	; 0xfffffe28
     5f0:	ldr	r3, [r3, #204]	; 0xcc
     5f4:	mov	r2, #47	; 0x2f
     5f8:	mov	r1, #1
     5fc:	movw	r0, #0
     600:	movt	r0, #0
     604:	bl	0 <fwrite>
     608:	mov	r3, #0
     60c:	mov	r0, r3
     610:	sub	sp, fp, #8
     614:	ldr	r4, [sp]
     618:	ldr	fp, [sp, #4]
     61c:	add	sp, sp, #8
     620:	pop	{pc}		; (ldr pc, [sp], #4)

00000624 <gen_table_verifier>:
     624:	strd	r4, [sp, #-32]!	; 0xffffffe0
     628:	strd	r6, [sp, #8]
     62c:	strd	r8, [sp, #16]
     630:	str	fp, [sp, #24]
     634:	str	lr, [sp, #28]
     638:	add	fp, sp, #28
     63c:	sub	sp, sp, #504	; 0x1f8
     640:	str	r0, [fp, #-496]	; 0xfffffe10
     644:	str	r1, [fp, #-500]	; 0xfffffe0c
     648:	mov	r3, #1
     64c:	str	r3, [fp, #-36]	; 0xffffffdc
     650:	ldr	r3, [fp, #-496]	; 0xfffffe10
     654:	str	r3, [fp, #-40]	; 0xffffffd8
     658:	sub	r3, fp, #268	; 0x10c
     65c:	mov	r2, #220	; 0xdc
     660:	mov	r1, #0
     664:	mov	r0, r3
     668:	bl	0 <memset>
     66c:	sub	r3, fp, #488	; 0x1e8
     670:	mov	r2, #220	; 0xdc
     674:	mov	r1, #0
     678:	mov	r0, r3
     67c:	bl	0 <memset>
     680:	sub	r3, fp, #268	; 0x10c
     684:	mov	r1, r3
     688:	ldr	r0, [fp, #-500]	; 0xfffffe0c
     68c:	bl	a0 <fb_compound_name>
     690:	ldr	r3, [fp, #-496]	; 0xfffffe10
     694:	ldr	r3, [r3, #204]	; 0xcc
     698:	sub	r2, fp, #268	; 0x10c
     69c:	movw	r1, #0
     6a0:	movt	r1, #0
     6a4:	mov	r0, r3
     6a8:	bl	0 <fprintf>
     6ac:	ldr	r3, [fp, #-500]	; 0xfffffe0c
     6b0:	ldr	r3, [r3, #20]
     6b4:	str	r3, [fp, #-32]	; 0xffffffe0
     6b8:	b	c6c <gen_table_verifier+0x648>
     6bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     6c0:	str	r3, [fp, #-44]	; 0xffffffd4
     6c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     6c8:	ldrh	r3, [r3, #72]	; 0x48
     6cc:	and	r3, r3, #4
     6d0:	cmp	r3, #0
     6d4:	bne	c5c <gen_table_verifier+0x638>
     6d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
     6dc:	cmp	r3, #0
     6e0:	beq	704 <gen_table_verifier+0xe0>
     6e4:	ldr	r3, [fp, #-496]	; 0xfffffe10
     6e8:	ldr	r3, [r3, #204]	; 0xcc
     6ec:	mov	r2, #28
     6f0:	mov	r1, #1
     6f4:	movw	r0, #0
     6f8:	movt	r0, #0
     6fc:	bl	0 <fwrite>
     700:	b	720 <gen_table_verifier+0xfc>
     704:	ldr	r3, [fp, #-496]	; 0xfffffe10
     708:	ldr	r3, [r3, #204]	; 0xcc
     70c:	mov	r2, #30
     710:	mov	r1, #1
     714:	movw	r0, #0
     718:	movt	r0, #0
     71c:	bl	0 <fwrite>
     720:	mov	r3, #0
     724:	str	r3, [fp, #-36]	; 0xffffffdc
     728:	ldr	r3, [fp, #-44]	; 0xffffffd4
     72c:	ldrh	r3, [r3, #72]	; 0x48
     730:	and	r3, r3, #256	; 0x100
     734:	cmp	r3, #0
     738:	movne	r3, #1
     73c:	moveq	r3, #0
     740:	uxtb	r3, r3
     744:	str	r3, [fp, #-48]	; 0xffffffd0
     748:	ldr	r3, [fp, #-44]	; 0xffffffd4
     74c:	ldrh	r3, [r3, #24]
     750:	sub	r3, r3, #7
     754:	cmp	r3, #8
     758:	ldrls	pc, [pc, r3, lsl #2]
     75c:	b	c2c <gen_table_verifier+0x608>
     760:	.word	0x000007c8
     764:	.word	0x00000784
     768:	.word	0x00000944
     76c:	.word	0x0000091c
     770:	.word	0x00000c2c
     774:	.word	0x00000c2c
     778:	.word	0x00000c2c
     77c:	.word	0x0000096c
     780:	.word	0x00000aa8
     784:	ldr	r3, [fp, #-496]	; 0xfffffe10
     788:	ldr	lr, [r3, #204]	; 0xcc
     78c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     790:	ldrd	r0, [r3, #96]	; 0x60
     794:	ldr	r3, [fp, #-44]	; 0xffffffd4
     798:	ldrd	r2, [r3, #88]	; 0x58
     79c:	ldr	ip, [fp, #-44]	; 0xffffffd4
     7a0:	ldrh	ip, [ip, #74]	; 0x4a
     7a4:	str	ip, [sp, #8]
     7a8:	strd	r2, [sp]
     7ac:	mov	r2, r0
     7b0:	mov	r3, r1
     7b4:	movw	r1, #0
     7b8:	movt	r1, #0
     7bc:	mov	r0, lr
     7c0:	bl	0 <fprintf>
     7c4:	b	c2c <gen_table_verifier+0x608>
     7c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     7cc:	ldr	r3, [r3, #104]	; 0x68
     7d0:	cmp	r3, #0
     7d4:	beq	890 <gen_table_verifier+0x26c>
     7d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     7dc:	ldr	r3, [r3, #104]	; 0x68
     7e0:	sub	r2, fp, #488	; 0x1e8
     7e4:	mov	r1, r2
     7e8:	mov	r0, r3
     7ec:	bl	a0 <fb_compound_name>
     7f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     7f4:	ldr	r3, [r3, #104]	; 0x68
     7f8:	ldrh	r3, [r3, #8]
     7fc:	cmp	r3, #0
     800:	bne	844 <gen_table_verifier+0x220>
     804:	ldr	r3, [fp, #-496]	; 0xfffffe10
     808:	ldr	r0, [r3, #204]	; 0xcc
     80c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     810:	ldrd	r2, [r3, #96]	; 0x60
     814:	ldr	r1, [fp, #-44]	; 0xffffffd4
     818:	ldrh	r1, [r1, #74]	; 0x4a
     81c:	mov	ip, r1
     820:	sub	r1, fp, #488	; 0x1e8
     824:	str	r1, [sp, #8]
     828:	str	ip, [sp, #4]
     82c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     830:	str	r1, [sp]
     834:	movw	r1, #0
     838:	movt	r1, #0
     83c:	bl	0 <fprintf>
     840:	b	c2c <gen_table_verifier+0x608>
     844:	ldr	r3, [fp, #-496]	; 0xfffffe10
     848:	ldr	lr, [r3, #204]	; 0xcc
     84c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     850:	ldrd	r0, [r3, #96]	; 0x60
     854:	ldr	r3, [fp, #-44]	; 0xffffffd4
     858:	ldrd	r2, [r3, #88]	; 0x58
     85c:	ldr	ip, [fp, #-44]	; 0xffffffd4
     860:	ldrh	ip, [ip, #74]	; 0x4a
     864:	str	ip, [sp, #16]
     868:	strd	r2, [sp, #8]
     86c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     870:	str	r3, [sp]
     874:	mov	r2, r0
     878:	mov	r3, r1
     87c:	movw	r1, #0
     880:	movt	r1, #0
     884:	mov	r0, lr
     888:	bl	0 <fprintf>
     88c:	b	c2c <gen_table_verifier+0x608>
     890:	ldr	r3, [fp, #-496]	; 0xfffffe10
     894:	ldr	r8, [r3, #204]	; 0xcc
     898:	ldr	r3, [fp, #-44]	; 0xffffffd4
     89c:	ldrd	r6, [r3, #96]	; 0x60
     8a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     8a4:	ldrd	r4, [r3, #88]	; 0x58
     8a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     8ac:	ldrh	r3, [r3, #74]	; 0x4a
     8b0:	mov	r9, r3
     8b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     8b8:	ldrd	r2, [r3, #88]	; 0x58
     8bc:	orrs	r3, r2, r3
     8c0:	beq	8e4 <gen_table_verifier+0x2c0>
     8c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     8c8:	ldrd	r2, [r3, #88]	; 0x58
     8cc:	mvn	r0, #0
     8d0:	mov	r1, #0
     8d4:	bl	0 <__aeabi_uldivmod>
     8d8:	mov	r2, r0
     8dc:	mov	r3, r1
     8e0:	b	8ec <gen_table_verifier+0x2c8>
     8e4:	mvn	r2, #0
     8e8:	mov	r3, #0
     8ec:	strd	r2, [sp, #24]
     8f0:	str	r9, [sp, #16]
     8f4:	strd	r4, [sp, #8]
     8f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
     8fc:	str	r3, [sp]
     900:	mov	r2, r6
     904:	mov	r3, r7
     908:	movw	r1, #0
     90c:	movt	r1, #0
     910:	mov	r0, r8
     914:	bl	0 <fprintf>
     918:	b	c2c <gen_table_verifier+0x608>
     91c:	ldr	r3, [fp, #-496]	; 0xfffffe10
     920:	ldr	r0, [r3, #204]	; 0xcc
     924:	ldr	r3, [fp, #-44]	; 0xffffffd4
     928:	ldrd	r2, [r3, #96]	; 0x60
     92c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     930:	str	r1, [sp]
     934:	movw	r1, #0
     938:	movt	r1, #0
     93c:	bl	0 <fprintf>
     940:	b	c2c <gen_table_verifier+0x608>
     944:	ldr	r3, [fp, #-496]	; 0xfffffe10
     948:	ldr	r0, [r3, #204]	; 0xcc
     94c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     950:	ldrd	r2, [r3, #96]	; 0x60
     954:	ldr	r1, [fp, #-48]	; 0xffffffd0
     958:	str	r1, [sp]
     95c:	movw	r1, #0
     960:	movt	r1, #0
     964:	bl	0 <fprintf>
     968:	b	c2c <gen_table_verifier+0x608>
     96c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     970:	ldr	r3, [r3, #16]
     974:	sub	r2, fp, #488	; 0x1e8
     978:	mov	r1, r2
     97c:	mov	r0, r3
     980:	bl	a0 <fb_compound_name>
     984:	ldr	r3, [fp, #-44]	; 0xffffffd4
     988:	ldr	r3, [r3, #16]
     98c:	ldrh	r3, [r3, #8]
     990:	cmp	r3, #4
     994:	ldrls	pc, [pc, r3, lsl #2]
     998:	b	a54 <gen_table_verifier+0x430>
     99c:	.word	0x000009f4
     9a0:	.word	0x000009b0
     9a4:	.word	0x00000a54
     9a8:	.word	0x000009b0
     9ac:	.word	0x00000a24
     9b0:	ldr	r3, [fp, #-496]	; 0xfffffe10
     9b4:	ldr	lr, [r3, #204]	; 0xcc
     9b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     9bc:	ldrd	r0, [r3, #96]	; 0x60
     9c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     9c4:	ldrd	r2, [r3, #88]	; 0x58
     9c8:	ldr	ip, [fp, #-44]	; 0xffffffd4
     9cc:	ldrh	ip, [ip, #74]	; 0x4a
     9d0:	str	ip, [sp, #8]
     9d4:	strd	r2, [sp]
     9d8:	mov	r2, r0
     9dc:	mov	r3, r1
     9e0:	movw	r1, #0
     9e4:	movt	r1, #0
     9e8:	mov	r0, lr
     9ec:	bl	0 <fprintf>
     9f0:	b	aa4 <gen_table_verifier+0x480>
     9f4:	ldr	r3, [fp, #-496]	; 0xfffffe10
     9f8:	ldr	r0, [r3, #204]	; 0xcc
     9fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
     a00:	ldrd	r2, [r3, #96]	; 0x60
     a04:	sub	r1, fp, #488	; 0x1e8
     a08:	str	r1, [sp, #4]
     a0c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     a10:	str	r1, [sp]
     a14:	movw	r1, #0
     a18:	movt	r1, #0
     a1c:	bl	0 <fprintf>
     a20:	b	aa4 <gen_table_verifier+0x480>
     a24:	ldr	r3, [fp, #-496]	; 0xfffffe10
     a28:	ldr	r0, [r3, #204]	; 0xcc
     a2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     a30:	ldrd	r2, [r3, #96]	; 0x60
     a34:	sub	r1, fp, #488	; 0x1e8
     a38:	str	r1, [sp, #4]
     a3c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     a40:	str	r1, [sp]
     a44:	movw	r1, #0
     a48:	movt	r1, #0
     a4c:	bl	0 <fprintf>
     a50:	b	aa4 <gen_table_verifier+0x480>
     a54:	movw	r3, #0
     a58:	movt	r3, #0
     a5c:	ldr	r0, [r3]
     a60:	movw	r3, #0
     a64:	movt	r3, #0
     a68:	str	r3, [sp]
     a6c:	mov	r3, #178	; 0xb2
     a70:	movw	r2, #0
     a74:	movt	r2, #0
     a78:	movw	r1, #0
     a7c:	movt	r1, #0
     a80:	bl	0 <fprintf>
     a84:	movw	r3, #0
     a88:	movt	r3, #0
     a8c:	mov	r2, #178	; 0xb2
     a90:	movw	r1, #0
     a94:	movt	r1, #0
     a98:	movw	r0, #0
     a9c:	movt	r0, #0
     aa0:	bl	0 <__assert_fail>
     aa4:	b	c2c <gen_table_verifier+0x608>
     aa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     aac:	ldr	r3, [r3, #16]
     ab0:	sub	r2, fp, #488	; 0x1e8
     ab4:	mov	r1, r2
     ab8:	mov	r0, r3
     abc:	bl	a0 <fb_compound_name>
     ac0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     ac4:	ldr	r3, [r3, #16]
     ac8:	ldrh	r3, [r3, #8]
     acc:	cmp	r3, #4
     ad0:	ldrls	pc, [pc, r3, lsl #2]
     ad4:	b	bd8 <gen_table_verifier+0x5b4>
     ad8:	.word	0x00000aec
     adc:	.word	0x00000b1c
     ae0:	.word	0x00000bd8
     ae4:	.word	0x00000b1c
     ae8:	.word	0x00000ba8
     aec:	ldr	r3, [fp, #-496]	; 0xfffffe10
     af0:	ldr	r0, [r3, #204]	; 0xcc
     af4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     af8:	ldrd	r2, [r3, #96]	; 0x60
     afc:	sub	r1, fp, #488	; 0x1e8
     b00:	str	r1, [sp, #4]
     b04:	ldr	r1, [fp, #-48]	; 0xffffffd0
     b08:	str	r1, [sp]
     b0c:	movw	r1, #0
     b10:	movt	r1, #0
     b14:	bl	0 <fprintf>
     b18:	b	c28 <gen_table_verifier+0x604>
     b1c:	ldr	r3, [fp, #-496]	; 0xfffffe10
     b20:	ldr	r8, [r3, #204]	; 0xcc
     b24:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b28:	ldrd	r6, [r3, #96]	; 0x60
     b2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b30:	ldrd	r4, [r3, #88]	; 0x58
     b34:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b38:	ldrh	r3, [r3, #74]	; 0x4a
     b3c:	mov	r9, r3
     b40:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b44:	ldrd	r2, [r3, #88]	; 0x58
     b48:	orrs	r3, r2, r3
     b4c:	beq	b70 <gen_table_verifier+0x54c>
     b50:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b54:	ldrd	r2, [r3, #88]	; 0x58
     b58:	mvn	r0, #0
     b5c:	mov	r1, #0
     b60:	bl	0 <__aeabi_uldivmod>
     b64:	mov	r2, r0
     b68:	mov	r3, r1
     b6c:	b	b78 <gen_table_verifier+0x554>
     b70:	mvn	r2, #0
     b74:	mov	r3, #0
     b78:	strd	r2, [sp, #24]
     b7c:	str	r9, [sp, #16]
     b80:	strd	r4, [sp, #8]
     b84:	ldr	r3, [fp, #-48]	; 0xffffffd0
     b88:	str	r3, [sp]
     b8c:	mov	r2, r6
     b90:	mov	r3, r7
     b94:	movw	r1, #0
     b98:	movt	r1, #0
     b9c:	mov	r0, r8
     ba0:	bl	0 <fprintf>
     ba4:	b	c28 <gen_table_verifier+0x604>
     ba8:	ldr	r3, [fp, #-496]	; 0xfffffe10
     bac:	ldr	r0, [r3, #204]	; 0xcc
     bb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     bb4:	ldrd	r2, [r3, #96]	; 0x60
     bb8:	sub	r1, fp, #488	; 0x1e8
     bbc:	str	r1, [sp, #4]
     bc0:	ldr	r1, [fp, #-48]	; 0xffffffd0
     bc4:	str	r1, [sp]
     bc8:	movw	r1, #0
     bcc:	movt	r1, #0
     bd0:	bl	0 <fprintf>
     bd4:	b	c28 <gen_table_verifier+0x604>
     bd8:	movw	r3, #0
     bdc:	movt	r3, #0
     be0:	ldr	r0, [r3]
     be4:	movw	r3, #0
     be8:	movt	r3, #0
     bec:	str	r3, [sp]
     bf0:	mov	r3, #202	; 0xca
     bf4:	movw	r2, #0
     bf8:	movt	r2, #0
     bfc:	movw	r1, #0
     c00:	movt	r1, #0
     c04:	bl	0 <fprintf>
     c08:	movw	r3, #0
     c0c:	movt	r3, #0
     c10:	mov	r2, #202	; 0xca
     c14:	movw	r1, #0
     c18:	movt	r1, #0
     c1c:	movw	r0, #0
     c20:	movt	r0, #0
     c24:	bl	0 <__assert_fail>
     c28:	nop	{0}
     c2c:	ldr	r3, [fp, #-496]	; 0xfffffe10
     c30:	ldr	r0, [r3, #204]	; 0xcc
     c34:	ldr	r3, [fp, #-32]	; 0xffffffe0
     c38:	ldr	r3, [r3, #4]
     c3c:	ldr	r2, [r3, #4]
     c40:	ldr	r3, [fp, #-32]	; 0xffffffe0
     c44:	ldr	r3, [r3, #4]
     c48:	ldr	r3, [r3]
     c4c:	movw	r1, #0
     c50:	movt	r1, #0
     c54:	bl	0 <fprintf>
     c58:	b	c60 <gen_table_verifier+0x63c>
     c5c:	nop	{0}
     c60:	ldr	r3, [fp, #-32]	; 0xffffffe0
     c64:	ldr	r3, [r3]
     c68:	str	r3, [fp, #-32]	; 0xffffffe0
     c6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     c70:	cmp	r3, #0
     c74:	bne	6bc <gen_table_verifier+0x98>
     c78:	ldr	r3, [fp, #-36]	; 0xffffffdc
     c7c:	cmp	r3, #0
     c80:	bne	ca0 <gen_table_verifier+0x67c>
     c84:	ldr	r3, [fp, #-496]	; 0xfffffe10
     c88:	ldr	r3, [r3, #204]	; 0xcc
     c8c:	mov	r2, #15
     c90:	mov	r1, #1
     c94:	movw	r0, #0
     c98:	movt	r0, #0
     c9c:	bl	0 <fwrite>
     ca0:	ldr	r3, [fp, #-496]	; 0xfffffe10
     ca4:	ldr	r3, [r3, #204]	; 0xcc
     ca8:	mov	r2, #29
     cac:	mov	r1, #1
     cb0:	movw	r0, #0
     cb4:	movt	r0, #0
     cb8:	bl	0 <fwrite>
     cbc:	ldr	r3, [fp, #-496]	; 0xfffffe10
     cc0:	ldr	r3, [r3, #204]	; 0xcc
     cc4:	mov	r2, #3
     cc8:	mov	r1, #1
     ccc:	movw	r0, #0
     cd0:	movt	r0, #0
     cd4:	bl	0 <fwrite>
     cd8:	ldr	r3, [fp, #-496]	; 0xfffffe10
     cdc:	ldr	r0, [r3, #204]	; 0xcc
     ce0:	sub	r1, fp, #268	; 0x10c
     ce4:	sub	r2, fp, #268	; 0x10c
     ce8:	sub	r3, fp, #268	; 0x10c
     cec:	str	r3, [sp]
     cf0:	mov	r3, r1
     cf4:	movw	r1, #0
     cf8:	movt	r1, #0
     cfc:	bl	0 <fprintf>
     d00:	ldr	r3, [fp, #-496]	; 0xfffffe10
     d04:	ldr	r0, [r3, #204]	; 0xcc
     d08:	sub	r1, fp, #268	; 0x10c
     d0c:	sub	r2, fp, #268	; 0x10c
     d10:	sub	r3, fp, #268	; 0x10c
     d14:	str	r3, [sp]
     d18:	mov	r3, r1
     d1c:	movw	r1, #0
     d20:	movt	r1, #0
     d24:	bl	0 <fprintf>
     d28:	ldr	r3, [fp, #-496]	; 0xfffffe10
     d2c:	ldr	r0, [r3, #204]	; 0xcc
     d30:	sub	r3, fp, #268	; 0x10c
     d34:	sub	r2, fp, #268	; 0x10c
     d38:	movw	r1, #0
     d3c:	movt	r1, #0
     d40:	bl	0 <fprintf>
     d44:	ldr	r3, [fp, #-496]	; 0xfffffe10
     d48:	ldr	r0, [r3, #204]	; 0xcc
     d4c:	sub	r2, fp, #268	; 0x10c
     d50:	sub	r3, fp, #268	; 0x10c
     d54:	str	r3, [sp]
     d58:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d5c:	movw	r1, #0
     d60:	movt	r1, #0
     d64:	bl	0 <fprintf>
     d68:	mov	r3, #0
     d6c:	mov	r0, r3
     d70:	sub	sp, fp, #28
     d74:	ldrd	r4, [sp]
     d78:	ldrd	r6, [sp, #8]
     d7c:	ldrd	r8, [sp, #16]
     d80:	ldr	fp, [sp, #24]
     d84:	add	sp, sp, #28
     d88:	pop	{pc}		; (ldr pc, [sp], #4)

00000d8c <gen_struct_verifier>:
     d8c:	str	fp, [sp, #-8]!
     d90:	str	lr, [sp, #4]
     d94:	add	fp, sp, #4
     d98:	sub	sp, sp, #248	; 0xf8
     d9c:	str	r0, [fp, #-232]	; 0xffffff18
     da0:	str	r1, [fp, #-236]	; 0xffffff14
     da4:	sub	r3, fp, #224	; 0xe0
     da8:	mov	r2, #220	; 0xdc
     dac:	mov	r1, #0
     db0:	mov	r0, r3
     db4:	bl	0 <memset>
     db8:	sub	r3, fp, #224	; 0xe0
     dbc:	mov	r1, r3
     dc0:	ldr	r0, [fp, #-236]	; 0xffffff14
     dc4:	bl	a0 <fb_compound_name>
     dc8:	ldr	r3, [fp, #-232]	; 0xffffff18
     dcc:	ldr	r0, [r3, #204]	; 0xcc
     dd0:	ldr	r3, [fp, #-236]	; 0xffffff14
     dd4:	ldrd	r2, [r3, #112]	; 0x70
     dd8:	ldr	r1, [fp, #-236]	; 0xffffff14
     ddc:	ldrh	r1, [r1, #104]	; 0x68
     de0:	mov	lr, r1
     de4:	sub	ip, fp, #224	; 0xe0
     de8:	sub	r1, fp, #224	; 0xe0
     dec:	str	lr, [sp, #8]
     df0:	strd	r2, [sp]
     df4:	mov	r3, ip
     df8:	mov	r2, r1
     dfc:	movw	r1, #0
     e00:	movt	r1, #0
     e04:	bl	0 <fprintf>
     e08:	ldr	r3, [fp, #-232]	; 0xffffff18
     e0c:	ldr	r0, [r3, #204]	; 0xcc
     e10:	ldr	r3, [fp, #-236]	; 0xffffff14
     e14:	ldrd	r2, [r3, #112]	; 0x70
     e18:	ldr	r1, [fp, #-236]	; 0xffffff14
     e1c:	ldrh	r1, [r1, #104]	; 0x68
     e20:	mov	lr, r1
     e24:	sub	ip, fp, #224	; 0xe0
     e28:	sub	r1, fp, #224	; 0xe0
     e2c:	str	lr, [sp, #8]
     e30:	strd	r2, [sp]
     e34:	mov	r3, ip
     e38:	mov	r2, r1
     e3c:	movw	r1, #0
     e40:	movt	r1, #0
     e44:	bl	0 <fprintf>
     e48:	ldr	r3, [fp, #-232]	; 0xffffff18
     e4c:	ldr	r0, [r3, #204]	; 0xcc
     e50:	ldr	ip, [fp, #-232]	; 0xffffff18
     e54:	ldr	r3, [fp, #-236]	; 0xffffff14
     e58:	ldrd	r2, [r3, #112]	; 0x70
     e5c:	ldr	r1, [fp, #-236]	; 0xffffff14
     e60:	ldrh	r1, [r1, #104]	; 0x68
     e64:	mov	lr, r1
     e68:	sub	r1, fp, #224	; 0xe0
     e6c:	str	lr, [sp, #8]
     e70:	strd	r2, [sp]
     e74:	mov	r3, ip
     e78:	mov	r2, r1
     e7c:	movw	r1, #0
     e80:	movt	r1, #0
     e84:	bl	0 <fprintf>
     e88:	ldr	r3, [fp, #-232]	; 0xffffff18
     e8c:	ldr	r0, [r3, #204]	; 0xcc
     e90:	ldr	r3, [fp, #-236]	; 0xffffff14
     e94:	ldrd	r2, [r3, #112]	; 0x70
     e98:	ldr	r1, [fp, #-236]	; 0xffffff14
     e9c:	ldrh	r1, [r1, #104]	; 0x68
     ea0:	mov	ip, r1
     ea4:	sub	r1, fp, #224	; 0xe0
     ea8:	str	ip, [sp, #8]
     eac:	strd	r2, [sp]
     eb0:	mov	r2, r1
     eb4:	movw	r1, #0
     eb8:	movt	r1, #0
     ebc:	bl	0 <fprintf>
     ec0:	mov	r3, #0
     ec4:	mov	r0, r3
     ec8:	sub	sp, fp, #4
     ecc:	ldr	fp, [sp]
     ed0:	add	sp, sp, #4
     ed4:	pop	{pc}		; (ldr pc, [sp], #4)

00000ed8 <gen_verifier_prototypes>:
     ed8:	str	fp, [sp, #-8]!
     edc:	str	lr, [sp, #4]
     ee0:	add	fp, sp, #4
     ee4:	sub	sp, sp, #232	; 0xe8
     ee8:	str	r0, [fp, #-232]	; 0xffffff18
     eec:	sub	r3, fp, #228	; 0xe4
     ef0:	mov	r2, #220	; 0xdc
     ef4:	mov	r1, #0
     ef8:	mov	r0, r3
     efc:	bl	0 <memset>
     f00:	ldr	r3, [fp, #-232]	; 0xffffff18
     f04:	ldr	r3, [r3, #208]	; 0xd0
     f08:	ldr	r3, [r3, #40]	; 0x28
     f0c:	str	r3, [fp, #-8]
     f10:	b	f5c <gen_verifier_prototypes+0x84>
     f14:	ldr	r3, [fp, #-8]
     f18:	ldrh	r3, [r3, #8]
     f1c:	cmp	r3, #0
     f20:	bne	f50 <gen_verifier_prototypes+0x78>
     f24:	sub	r3, fp, #228	; 0xe4
     f28:	mov	r1, r3
     f2c:	ldr	r0, [fp, #-8]
     f30:	bl	a0 <fb_compound_name>
     f34:	ldr	r3, [fp, #-232]	; 0xffffff18
     f38:	ldr	r3, [r3, #204]	; 0xcc
     f3c:	sub	r2, fp, #228	; 0xe4
     f40:	movw	r1, #0
     f44:	movt	r1, #0
     f48:	mov	r0, r3
     f4c:	bl	0 <fprintf>
     f50:	ldr	r3, [fp, #-8]
     f54:	ldr	r3, [r3]
     f58:	str	r3, [fp, #-8]
     f5c:	ldr	r3, [fp, #-8]
     f60:	cmp	r3, #0
     f64:	bne	f14 <gen_verifier_prototypes+0x3c>
     f68:	ldr	r3, [fp, #-232]	; 0xffffff18
     f6c:	ldr	r3, [r3, #204]	; 0xcc
     f70:	mov	r1, r3
     f74:	mov	r0, #10
     f78:	bl	0 <fputc>
     f7c:	mov	r3, #0
     f80:	mov	r0, r3
     f84:	sub	sp, fp, #4
     f88:	ldr	fp, [sp]
     f8c:	add	sp, sp, #4
     f90:	pop	{pc}		; (ldr pc, [sp], #4)

00000f94 <gen_union_verifiers>:
     f94:	str	fp, [sp, #-8]!
     f98:	str	lr, [sp, #4]
     f9c:	add	fp, sp, #4
     fa0:	sub	sp, sp, #16
     fa4:	str	r0, [fp, #-16]
     fa8:	ldr	r3, [fp, #-16]
     fac:	ldr	r3, [r3, #208]	; 0xd0
     fb0:	ldr	r3, [r3, #40]	; 0x28
     fb4:	str	r3, [fp, #-8]
     fb8:	b	fe4 <gen_union_verifiers+0x50>
     fbc:	ldr	r3, [fp, #-8]
     fc0:	ldrh	r3, [r3, #8]
     fc4:	cmp	r3, #4
     fc8:	bne	fd8 <gen_union_verifiers+0x44>
     fcc:	ldr	r1, [fp, #-8]
     fd0:	ldr	r0, [fp, #-16]
     fd4:	bl	364 <gen_union_verifier>
     fd8:	ldr	r3, [fp, #-8]
     fdc:	ldr	r3, [r3]
     fe0:	str	r3, [fp, #-8]
     fe4:	ldr	r3, [fp, #-8]
     fe8:	cmp	r3, #0
     fec:	bne	fbc <gen_union_verifiers+0x28>
     ff0:	mov	r3, #0
     ff4:	mov	r0, r3
     ff8:	sub	sp, fp, #4
     ffc:	ldr	fp, [sp]
    1000:	add	sp, sp, #4
    1004:	pop	{pc}		; (ldr pc, [sp], #4)

00001008 <gen_struct_verifiers>:
    1008:	str	fp, [sp, #-8]!
    100c:	str	lr, [sp, #4]
    1010:	add	fp, sp, #4
    1014:	sub	sp, sp, #16
    1018:	str	r0, [fp, #-16]
    101c:	ldr	r3, [fp, #-16]
    1020:	ldr	r3, [r3, #208]	; 0xd0
    1024:	ldr	r3, [r3, #40]	; 0x28
    1028:	str	r3, [fp, #-8]
    102c:	b	1058 <gen_struct_verifiers+0x50>
    1030:	ldr	r3, [fp, #-8]
    1034:	ldrh	r3, [r3, #8]
    1038:	cmp	r3, #1
    103c:	bne	104c <gen_struct_verifiers+0x44>
    1040:	ldr	r1, [fp, #-8]
    1044:	ldr	r0, [fp, #-16]
    1048:	bl	d8c <gen_struct_verifier>
    104c:	ldr	r3, [fp, #-8]
    1050:	ldr	r3, [r3]
    1054:	str	r3, [fp, #-8]
    1058:	ldr	r3, [fp, #-8]
    105c:	cmp	r3, #0
    1060:	bne	1030 <gen_struct_verifiers+0x28>
    1064:	mov	r3, #0
    1068:	mov	r0, r3
    106c:	sub	sp, fp, #4
    1070:	ldr	fp, [sp]
    1074:	add	sp, sp, #4
    1078:	pop	{pc}		; (ldr pc, [sp], #4)

0000107c <gen_table_verifiers>:
    107c:	str	fp, [sp, #-8]!
    1080:	str	lr, [sp, #4]
    1084:	add	fp, sp, #4
    1088:	sub	sp, sp, #16
    108c:	str	r0, [fp, #-16]
    1090:	ldr	r3, [fp, #-16]
    1094:	ldr	r3, [r3, #208]	; 0xd0
    1098:	ldr	r3, [r3, #40]	; 0x28
    109c:	str	r3, [fp, #-8]
    10a0:	b	10cc <gen_table_verifiers+0x50>
    10a4:	ldr	r3, [fp, #-8]
    10a8:	ldrh	r3, [r3, #8]
    10ac:	cmp	r3, #0
    10b0:	bne	10c0 <gen_table_verifiers+0x44>
    10b4:	ldr	r1, [fp, #-8]
    10b8:	ldr	r0, [fp, #-16]
    10bc:	bl	624 <gen_table_verifier>
    10c0:	ldr	r3, [fp, #-8]
    10c4:	ldr	r3, [r3]
    10c8:	str	r3, [fp, #-8]
    10cc:	ldr	r3, [fp, #-8]
    10d0:	cmp	r3, #0
    10d4:	bne	10a4 <gen_table_verifiers+0x28>
    10d8:	mov	r3, #0
    10dc:	mov	r0, r3
    10e0:	sub	sp, fp, #4
    10e4:	ldr	fp, [sp]
    10e8:	add	sp, sp, #4
    10ec:	pop	{pc}		; (ldr pc, [sp], #4)

000010f0 <__flatcc_fb_gen_c_verifier>:
    10f0:	str	fp, [sp, #-8]!
    10f4:	str	lr, [sp, #4]
    10f8:	add	fp, sp, #4
    10fc:	sub	sp, sp, #8
    1100:	str	r0, [fp, #-8]
    1104:	ldr	r0, [fp, #-8]
    1108:	bl	1e4 <gen_verifier_pretext>
    110c:	ldr	r0, [fp, #-8]
    1110:	bl	ed8 <gen_verifier_prototypes>
    1114:	ldr	r0, [fp, #-8]
    1118:	bl	f94 <gen_union_verifiers>
    111c:	ldr	r0, [fp, #-8]
    1120:	bl	1008 <gen_struct_verifiers>
    1124:	ldr	r0, [fp, #-8]
    1128:	bl	107c <gen_table_verifiers>
    112c:	ldr	r0, [fp, #-8]
    1130:	bl	30c <gen_verifier_footer>
    1134:	mov	r3, #0
    1138:	mov	r0, r3
    113c:	sub	sp, fp, #4
    1140:	ldr	fp, [sp]
    1144:	add	sp, sp, #4
    1148:	pop	{pc}		; (ldr pc, [sp], #4)
