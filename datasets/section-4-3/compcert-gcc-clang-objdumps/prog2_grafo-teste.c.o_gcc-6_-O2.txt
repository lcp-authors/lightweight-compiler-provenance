
../compcert-repos/prog2/CMakeFiles/8.dir/Aula08_Grafos_T2/grafo-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_g>:
   0:	push	{r1, r2, r3}
   4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8:	sub	sp, sp, #16
   c:	mov	r4, r0
  10:	str	r0, [sp, #4]
  14:	mov	r0, #8
  18:	ldr	r6, [sp, #52]	; 0x34
  1c:	bl	0 <malloc>
  20:	add	r3, sp, #56	; 0x38
  24:	mov	r1, #8
  28:	str	r3, [sp, #12]
  2c:	mov	r9, r0
  30:	mov	r0, r4
  34:	bl	0 <calloc>
  38:	cmp	r6, #0
  3c:	str	r0, [r9, #4]
  40:	ble	ac <_g+0xac>
  44:	sub	r6, r6, #1
  48:	bic	r6, r6, #1
  4c:	mov	r5, r0
  50:	add	r6, r6, #2
  54:	mov	fp, #0
  58:	mov	r8, #8
  5c:	mov	r7, #1
  60:	ldr	r2, [sp, #12]
  64:	mov	r1, r8
  68:	mov	r3, r2
  6c:	mov	r0, r7
  70:	ldr	r4, [r3], #8
  74:	ldr	sl, [r2, #4]
  78:	str	r3, [sp, #12]
  7c:	bl	0 <calloc>
  80:	add	r1, r5, r4, lsl #3
  84:	ldr	r3, [r5, r4, lsl #3]
  88:	ldr	ip, [r1, #4]
  8c:	add	fp, fp, #2
  90:	add	r3, r3, #1
  94:	cmp	fp, r6
  98:	str	r0, [r1, #4]
  9c:	str	sl, [r0]
  a0:	str	ip, [r0, #4]
  a4:	str	r3, [r5, r4, lsl #3]
  a8:	bne	60 <_g+0x60>
  ac:	ldr	r3, [sp, #4]
  b0:	mov	r0, r9
  b4:	str	r3, [r9]
  b8:	add	sp, sp, #16
  bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  c0:	add	sp, sp, #12
  c4:	bx	lr

000000c8 <_f>:
  c8:	push	{r4, r5, r6, lr}
  cc:	subs	r5, r0, #0
  d0:	beq	118 <_f+0x50>
  d4:	ldr	r3, [r5]
  d8:	cmp	r3, #0
  dc:	ble	118 <_f+0x50>
  e0:	mov	r6, r1
  e4:	mov	r4, #0
  e8:	b	f8 <_f+0x30>
  ec:	ldr	r3, [r5]
  f0:	cmp	r3, r4
  f4:	ble	118 <_f+0x50>
  f8:	mov	r1, r4
  fc:	mov	r0, r5
 100:	bl	0 <vetor_elemento>
 104:	add	r4, r4, #1
 108:	cmp	r0, r6
 10c:	bne	ec <_f+0x24>
 110:	mov	r0, #1
 114:	pop	{r4, r5, r6, pc}
 118:	mov	r0, #0
 11c:	pop	{r4, r5, r6, pc}

00000120 <teste_grafo_novo>:
 120:	push	{r4, r5, r6, lr}
 124:	ldr	r0, [pc, #192]	; 1ec <teste_grafo_novo+0xcc>
 128:	bl	0 <printf>
 12c:	mov	r0, #10
 130:	bl	0 <grafo_novo>
 134:	subs	r5, r0, #0
 138:	beq	1bc <teste_grafo_novo+0x9c>
 13c:	ldr	r3, [r5]
 140:	cmp	r3, #10
 144:	moveq	r4, #0
 148:	beq	158 <teste_grafo_novo+0x38>
 14c:	ldr	r0, [pc, #156]	; 1f0 <teste_grafo_novo+0xd0>
 150:	bl	0 <printf>
 154:	mov	r4, #1
 158:	mov	r0, r5
 15c:	bl	0 <grafo_apaga>
 160:	mov	r0, #1
 164:	bl	0 <grafo_novo>
 168:	subs	r5, r0, #0
 16c:	beq	1d4 <teste_grafo_novo+0xb4>
 170:	ldr	r3, [r5]
 174:	cmp	r3, #1
 178:	beq	1a0 <teste_grafo_novo+0x80>
 17c:	ldr	r0, [pc, #112]	; 1f4 <teste_grafo_novo+0xd4>
 180:	bl	0 <printf>
 184:	mov	r0, r5
 188:	add	r4, r4, #1
 18c:	bl	0 <grafo_apaga>
 190:	mov	r0, #10
 194:	bl	0 <putchar>
 198:	mov	r0, r4
 19c:	pop	{r4, r5, r6, pc}
 1a0:	bl	0 <grafo_apaga>
 1a4:	cmp	r4, #0
 1a8:	bne	190 <teste_grafo_novo+0x70>
 1ac:	ldr	r0, [pc, #68]	; 1f8 <teste_grafo_novo+0xd8>
 1b0:	bl	0 <puts>
 1b4:	mov	r0, r4
 1b8:	pop	{r4, r5, r6, pc}
 1bc:	ldr	r0, [pc, #56]	; 1fc <teste_grafo_novo+0xdc>
 1c0:	bl	0 <printf>
 1c4:	mov	r0, #10
 1c8:	bl	0 <putchar>
 1cc:	mov	r4, #1
 1d0:	b	198 <teste_grafo_novo+0x78>
 1d4:	ldr	r0, [pc, #32]	; 1fc <teste_grafo_novo+0xdc>
 1d8:	bl	0 <printf>
 1dc:	mov	r0, #10
 1e0:	add	r4, r4, #1
 1e4:	bl	0 <putchar>
 1e8:	b	198 <teste_grafo_novo+0x78>
 1ec:	.word	0x00000000
 1f0:	.word	0x00000028
 1f4:	.word	0x0000004c
 1f8:	.word	0x00000070
 1fc:	.word	0x00000010

00000200 <teste_grafo_aresta>:
 200:	push	{r4, r5, r6, r7, r8, lr}
 204:	sub	sp, sp, #80	; 0x50
 208:	mov	ip, #7
 20c:	mov	r3, #2
 210:	mov	r7, #0
 214:	mov	r0, #6
 218:	mov	r5, #4
 21c:	mov	r1, #3
 220:	mov	r8, #5
 224:	mov	r4, #1
 228:	mov	r2, r1
 22c:	str	ip, [sp, #16]
 230:	str	ip, [sp]
 234:	str	r3, [sp, #12]
 238:	str	r3, [sp, #4]
 23c:	str	r0, [sp, #44]	; 0x2c
 240:	str	r1, [sp, #68]	; 0x44
 244:	str	r0, [sp, #64]	; 0x40
 248:	mov	r1, #22
 24c:	str	r0, [sp, #60]	; 0x3c
 250:	str	r7, [sp, #36]	; 0x24
 254:	str	r7, [sp, #8]
 258:	str	r5, [sp, #40]	; 0x28
 25c:	str	r5, [sp, #32]
 260:	str	r5, [sp, #28]
 264:	str	r8, [sp, #24]
 268:	str	r8, [sp, #20]
 26c:	mov	r0, #8
 270:	str	ip, [sp, #56]	; 0x38
 274:	str	r4, [sp, #76]	; 0x4c
 278:	str	r4, [sp, #52]	; 0x34
 27c:	str	r4, [sp, #48]	; 0x30
 280:	str	r7, [sp, #72]	; 0x48
 284:	bl	0 <_g>
 288:	mov	r6, r0
 28c:	ldr	r0, [pc, #240]	; 384 <teste_grafo_aresta+0x184>
 290:	bl	0 <printf>
 294:	mov	r2, r5
 298:	mov	r1, r8
 29c:	mov	r0, r6
 2a0:	bl	0 <grafo_aresta>
 2a4:	cmp	r0, r4
 2a8:	moveq	r4, r7
 2ac:	beq	2b8 <teste_grafo_aresta+0xb8>
 2b0:	ldr	r0, [pc, #208]	; 388 <teste_grafo_aresta+0x188>
 2b4:	bl	0 <printf>
 2b8:	mov	r2, #6
 2bc:	mov	r1, #7
 2c0:	mov	r0, r6
 2c4:	bl	0 <grafo_aresta>
 2c8:	cmp	r0, #1
 2cc:	beq	2dc <teste_grafo_aresta+0xdc>
 2d0:	ldr	r0, [pc, #176]	; 388 <teste_grafo_aresta+0x188>
 2d4:	bl	0 <printf>
 2d8:	add	r4, r4, #1
 2dc:	mov	r2, #1
 2e0:	mov	r1, #7
 2e4:	mov	r0, r6
 2e8:	bl	0 <grafo_aresta>
 2ec:	cmp	r0, #0
 2f0:	bne	354 <teste_grafo_aresta+0x154>
 2f4:	mov	r2, #7
 2f8:	mov	r1, #2
 2fc:	bl	0 <grafo_aresta>
 300:	cmn	r0, #1
 304:	beq	330 <teste_grafo_aresta+0x130>
 308:	ldr	r0, [pc, #124]	; 38c <teste_grafo_aresta+0x18c>
 30c:	bl	0 <printf>
 310:	mov	r0, r6
 314:	add	r4, r4, #1
 318:	bl	0 <grafo_apaga>
 31c:	mov	r0, #10
 320:	bl	0 <putchar>
 324:	mov	r0, r4
 328:	add	sp, sp, #80	; 0x50
 32c:	pop	{r4, r5, r6, r7, r8, pc}
 330:	mov	r0, r6
 334:	bl	0 <grafo_apaga>
 338:	cmp	r4, #0
 33c:	bne	31c <teste_grafo_aresta+0x11c>
 340:	ldr	r0, [pc, #72]	; 390 <teste_grafo_aresta+0x190>
 344:	bl	0 <puts>
 348:	mov	r0, r4
 34c:	add	sp, sp, #80	; 0x50
 350:	pop	{r4, r5, r6, r7, r8, pc}
 354:	ldr	r0, [pc, #56]	; 394 <teste_grafo_aresta+0x194>
 358:	bl	0 <printf>
 35c:	mov	r2, #7
 360:	mov	r1, #2
 364:	mov	r0, #0
 368:	bl	0 <grafo_aresta>
 36c:	add	r4, r4, #1
 370:	cmn	r0, #1
 374:	bne	308 <teste_grafo_aresta+0x108>
 378:	mov	r0, r6
 37c:	bl	0 <grafo_apaga>
 380:	b	31c <teste_grafo_aresta+0x11c>
 384:	.word	0x00000074
 388:	.word	0x00000088
 38c:	.word	0x000000fc
 390:	.word	0x00000070
 394:	.word	0x000000c0

00000398 <teste_grafo_adiciona>:
 398:	push	{r4, r5, r6, lr}
 39c:	sub	sp, sp, #8
 3a0:	mov	r4, #2
 3a4:	mov	r6, #7
 3a8:	mov	r3, r4
 3ac:	mov	r2, #3
 3b0:	mov	r1, #4
 3b4:	str	r4, [sp, #4]
 3b8:	str	r6, [sp]
 3bc:	mov	r0, #9
 3c0:	bl	0 <_g>
 3c4:	mov	r5, r0
 3c8:	ldr	r0, [pc, #432]	; 580 <teste_grafo_adiciona+0x1e8>
 3cc:	bl	0 <printf>
 3d0:	mov	r1, r4
 3d4:	mov	r2, r6
 3d8:	mov	r0, r5
 3dc:	bl	0 <grafo_adiciona>
 3e0:	cmp	r0, #1
 3e4:	moveq	r4, #0
 3e8:	beq	3f8 <teste_grafo_adiciona+0x60>
 3ec:	ldr	r0, [pc, #400]	; 584 <teste_grafo_adiciona+0x1ec>
 3f0:	bl	0 <printf>
 3f4:	mov	r4, #1
 3f8:	ldr	r3, [r5, #4]
 3fc:	ldr	r3, [r3, #20]
 400:	cmp	r3, #0
 404:	beq	414 <teste_grafo_adiciona+0x7c>
 408:	ldr	r3, [r3]
 40c:	cmp	r3, #7
 410:	beq	420 <teste_grafo_adiciona+0x88>
 414:	ldr	r0, [pc, #364]	; 588 <teste_grafo_adiciona+0x1f0>
 418:	bl	0 <printf>
 41c:	add	r4, r4, #1
 420:	mov	r2, #8
 424:	mov	r1, #3
 428:	mov	r0, r5
 42c:	bl	0 <grafo_adiciona>
 430:	cmp	r0, #1
 434:	beq	444 <teste_grafo_adiciona+0xac>
 438:	ldr	r0, [pc, #324]	; 584 <teste_grafo_adiciona+0x1ec>
 43c:	bl	0 <printf>
 440:	add	r4, r4, #1
 444:	ldr	r3, [r5, #4]
 448:	ldr	r3, [r3, #28]
 44c:	cmp	r3, #0
 450:	beq	46c <teste_grafo_adiciona+0xd4>
 454:	ldr	r2, [r3, #4]
 458:	cmp	r2, #0
 45c:	beq	46c <teste_grafo_adiciona+0xd4>
 460:	ldr	r1, [r2, #4]
 464:	cmp	r1, #0
 468:	beq	54c <teste_grafo_adiciona+0x1b4>
 46c:	ldr	r0, [pc, #280]	; 58c <teste_grafo_adiciona+0x1f4>
 470:	bl	0 <printf>
 474:	add	r4, r4, #1
 478:	mov	r2, #7
 47c:	mov	r1, #2
 480:	mov	r0, r5
 484:	bl	0 <grafo_adiciona>
 488:	cmp	r0, #0
 48c:	bne	53c <teste_grafo_adiciona+0x1a4>
 490:	mov	r2, #7
 494:	mov	r1, #22
 498:	mov	r0, r5
 49c:	bl	0 <grafo_adiciona>
 4a0:	cmn	r0, #1
 4a4:	beq	500 <teste_grafo_adiciona+0x168>
 4a8:	ldr	r0, [pc, #224]	; 590 <teste_grafo_adiciona+0x1f8>
 4ac:	bl	0 <printf>
 4b0:	mov	r2, #7
 4b4:	mov	r1, #2
 4b8:	mov	r0, #0
 4bc:	bl	0 <grafo_adiciona>
 4c0:	add	r4, r4, #1
 4c4:	cmn	r0, #1
 4c8:	beq	4f4 <teste_grafo_adiciona+0x15c>
 4cc:	ldr	r0, [pc, #192]	; 594 <teste_grafo_adiciona+0x1fc>
 4d0:	bl	0 <printf>
 4d4:	mov	r0, r5
 4d8:	add	r4, r4, #1
 4dc:	bl	0 <grafo_apaga>
 4e0:	mov	r0, #10
 4e4:	bl	0 <putchar>
 4e8:	mov	r0, r4
 4ec:	add	sp, sp, #8
 4f0:	pop	{r4, r5, r6, pc}
 4f4:	mov	r0, r5
 4f8:	bl	0 <grafo_apaga>
 4fc:	b	4e0 <teste_grafo_adiciona+0x148>
 500:	mov	r2, #7
 504:	mov	r1, #2
 508:	mov	r0, #0
 50c:	bl	0 <grafo_adiciona>
 510:	cmn	r0, #1
 514:	bne	4cc <teste_grafo_adiciona+0x134>
 518:	mov	r0, r5
 51c:	bl	0 <grafo_apaga>
 520:	cmp	r4, #0
 524:	bne	4e0 <teste_grafo_adiciona+0x148>
 528:	ldr	r0, [pc, #104]	; 598 <teste_grafo_adiciona+0x200>
 52c:	bl	0 <puts>
 530:	mov	r0, r4
 534:	add	sp, sp, #8
 538:	pop	{r4, r5, r6, pc}
 53c:	ldr	r0, [pc, #88]	; 59c <teste_grafo_adiciona+0x204>
 540:	bl	0 <printf>
 544:	add	r4, r4, #1
 548:	b	490 <teste_grafo_adiciona+0xf8>
 54c:	ldr	r3, [r3]
 550:	cmp	r3, #2
 554:	beq	570 <teste_grafo_adiciona+0x1d8>
 558:	cmp	r3, #8
 55c:	bne	46c <teste_grafo_adiciona+0xd4>
 560:	ldr	r3, [r2]
 564:	cmp	r3, #2
 568:	bne	46c <teste_grafo_adiciona+0xd4>
 56c:	b	478 <teste_grafo_adiciona+0xe0>
 570:	ldr	r3, [r2]
 574:	cmp	r3, #8
 578:	bne	46c <teste_grafo_adiciona+0xd4>
 57c:	b	478 <teste_grafo_adiciona+0xe0>
 580:	.word	0x00000134
 584:	.word	0x00000148
 588:	.word	0x00000184
 58c:	.word	0x000001b4
 590:	.word	0x00000228
 594:	.word	0x00000260
 598:	.word	0x00000070
 59c:	.word	0x000001f0

000005a0 <teste_grafo_remove>:
 5a0:	push	{r4, r5, r6, lr}
 5a4:	sub	sp, sp, #16
 5a8:	mov	r4, #1
 5ac:	mov	r3, #2
 5b0:	mov	r6, #7
 5b4:	str	r3, [sp, #4]
 5b8:	mov	r2, #3
 5bc:	mov	r1, #6
 5c0:	str	r4, [sp, #12]
 5c4:	str	r6, [sp, #8]
 5c8:	str	r6, [sp]
 5cc:	mov	r0, #9
 5d0:	bl	0 <_g>
 5d4:	mov	r5, r0
 5d8:	ldr	r0, [pc, #328]	; 728 <teste_grafo_remove+0x188>
 5dc:	bl	0 <printf>
 5e0:	mov	r2, r4
 5e4:	mov	r1, r6
 5e8:	mov	r0, r5
 5ec:	bl	0 <grafo_remove>
 5f0:	cmp	r0, r4
 5f4:	moveq	r4, #0
 5f8:	beq	604 <teste_grafo_remove+0x64>
 5fc:	ldr	r0, [pc, #296]	; 72c <teste_grafo_remove+0x18c>
 600:	bl	0 <printf>
 604:	ldr	r3, [r5, #4]
 608:	ldr	r3, [r3, #60]	; 0x3c
 60c:	cmp	r3, #0
 610:	beq	620 <teste_grafo_remove+0x80>
 614:	ldr	r2, [r3, #4]
 618:	cmp	r2, #0
 61c:	beq	718 <teste_grafo_remove+0x178>
 620:	ldr	r0, [pc, #264]	; 730 <teste_grafo_remove+0x190>
 624:	bl	0 <printf>
 628:	add	r4, r4, #1
 62c:	mov	r2, #2
 630:	mov	r1, #7
 634:	mov	r0, r5
 638:	bl	0 <grafo_remove>
 63c:	cmp	r0, #1
 640:	beq	650 <teste_grafo_remove+0xb0>
 644:	ldr	r0, [pc, #224]	; 72c <teste_grafo_remove+0x18c>
 648:	bl	0 <printf>
 64c:	add	r4, r4, #1
 650:	ldr	r3, [r5, #4]
 654:	ldr	r3, [r3, #60]	; 0x3c
 658:	cmp	r3, #0
 65c:	beq	66c <teste_grafo_remove+0xcc>
 660:	ldr	r0, [pc, #200]	; 730 <teste_grafo_remove+0x190>
 664:	bl	0 <printf>
 668:	add	r4, r4, #1
 66c:	mov	r2, #0
 670:	mov	r1, #4
 674:	mov	r0, r5
 678:	bl	0 <grafo_remove>
 67c:	cmp	r0, #0
 680:	bne	6e8 <teste_grafo_remove+0x148>
 684:	mov	r2, #22
 688:	mov	r1, #7
 68c:	mov	r0, r5
 690:	bl	0 <grafo_remove>
 694:	cmn	r0, #1
 698:	beq	6c4 <teste_grafo_remove+0x124>
 69c:	ldr	r0, [pc, #144]	; 734 <teste_grafo_remove+0x194>
 6a0:	bl	0 <printf>
 6a4:	mov	r0, r5
 6a8:	add	r4, r4, #1
 6ac:	bl	0 <grafo_apaga>
 6b0:	mov	r0, #10
 6b4:	bl	0 <putchar>
 6b8:	mov	r0, r4
 6bc:	add	sp, sp, #16
 6c0:	pop	{r4, r5, r6, pc}
 6c4:	mov	r0, r5
 6c8:	bl	0 <grafo_apaga>
 6cc:	cmp	r4, #0
 6d0:	bne	6b0 <teste_grafo_remove+0x110>
 6d4:	ldr	r0, [pc, #92]	; 738 <teste_grafo_remove+0x198>
 6d8:	bl	0 <puts>
 6dc:	mov	r0, r4
 6e0:	add	sp, sp, #16
 6e4:	pop	{r4, r5, r6, pc}
 6e8:	ldr	r0, [pc, #76]	; 73c <teste_grafo_remove+0x19c>
 6ec:	bl	0 <printf>
 6f0:	mov	r2, #22
 6f4:	mov	r1, #7
 6f8:	mov	r0, r5
 6fc:	bl	0 <grafo_remove>
 700:	add	r4, r4, #1
 704:	cmn	r0, #1
 708:	bne	69c <teste_grafo_remove+0xfc>
 70c:	mov	r0, r5
 710:	bl	0 <grafo_apaga>
 714:	b	6b0 <teste_grafo_remove+0x110>
 718:	ldr	r3, [r3]
 71c:	cmp	r3, #2
 720:	bne	620 <teste_grafo_remove+0x80>
 724:	b	62c <teste_grafo_remove+0x8c>
 728:	.word	0x00000298
 72c:	.word	0x000002ac
 730:	.word	0x000002e8
 734:	.word	0x00000360
 738:	.word	0x00000070
 73c:	.word	0x00000324

00000740 <teste_v_sucessores>:
 740:	push	{r4, r5, r6, r7, lr}
 744:	sub	sp, sp, #84	; 0x54
 748:	mov	r5, #7
 74c:	mov	r3, #2
 750:	mov	r2, #4
 754:	mov	r4, #0
 758:	mov	r0, #3
 75c:	mov	r1, #5
 760:	mov	ip, #6
 764:	str	r3, [sp, #12]
 768:	str	r3, [sp, #4]
 76c:	mov	r6, #1
 770:	str	r5, [sp, #16]
 774:	str	r5, [sp]
 778:	str	r2, [sp, #40]	; 0x28
 77c:	str	r2, [sp, #32]
 780:	str	r2, [sp, #28]
 784:	str	r1, [sp, #24]
 788:	mov	r2, r0
 78c:	str	r1, [sp, #20]
 790:	str	r0, [sp, #68]	; 0x44
 794:	mov	r1, #22
 798:	str	r4, [sp, #36]	; 0x24
 79c:	str	r4, [sp, #8]
 7a0:	mov	r0, #8
 7a4:	str	ip, [sp, #44]	; 0x2c
 7a8:	str	ip, [sp, #64]	; 0x40
 7ac:	str	ip, [sp, #60]	; 0x3c
 7b0:	str	r5, [sp, #56]	; 0x38
 7b4:	str	r4, [sp, #72]	; 0x48
 7b8:	str	r6, [sp, #76]	; 0x4c
 7bc:	str	r6, [sp, #52]	; 0x34
 7c0:	str	r6, [sp, #48]	; 0x30
 7c4:	bl	0 <_g>
 7c8:	mov	r7, r0
 7cc:	ldr	r0, [pc, #292]	; 8f8 <teste_v_sucessores+0x1b8>
 7d0:	bl	0 <printf>
 7d4:	mov	r1, r5
 7d8:	mov	r0, r7
 7dc:	bl	0 <v_sucessores>
 7e0:	subs	r5, r0, #0
 7e4:	beq	8cc <teste_v_sucessores+0x18c>
 7e8:	ldr	r3, [r5]
 7ec:	cmp	r3, #3
 7f0:	moveq	r6, r4
 7f4:	beq	800 <teste_v_sucessores+0xc0>
 7f8:	ldr	r0, [pc, #252]	; 8fc <teste_v_sucessores+0x1bc>
 7fc:	bl	0 <printf>
 800:	mov	r1, #2
 804:	mov	r0, r5
 808:	bl	c8 <_f>
 80c:	cmp	r0, #0
 810:	bne	870 <teste_v_sucessores+0x130>
 814:	ldr	r0, [pc, #228]	; 900 <teste_v_sucessores+0x1c0>
 818:	add	r6, r6, #1
 81c:	bl	0 <printf>
 820:	mov	r0, r5
 824:	bl	0 <vetor_apaga>
 828:	mov	r1, #2
 82c:	mov	r0, r7
 830:	bl	0 <v_sucessores>
 834:	subs	r5, r0, #0
 838:	beq	8e0 <teste_v_sucessores+0x1a0>
 83c:	ldr	r3, [r5]
 840:	cmp	r3, #0
 844:	bne	89c <teste_v_sucessores+0x15c>
 848:	bl	0 <vetor_apaga>
 84c:	mov	r0, r7
 850:	bl	0 <grafo_apaga>
 854:	cmp	r6, #0
 858:	bne	8b8 <teste_v_sucessores+0x178>
 85c:	ldr	r0, [pc, #160]	; 904 <teste_v_sucessores+0x1c4>
 860:	bl	0 <puts>
 864:	mov	r0, r6
 868:	add	sp, sp, #84	; 0x54
 86c:	pop	{r4, r5, r6, r7, pc}
 870:	mov	r1, #5
 874:	mov	r0, r5
 878:	bl	c8 <_f>
 87c:	cmp	r0, #0
 880:	beq	814 <teste_v_sucessores+0xd4>
 884:	mov	r1, #6
 888:	mov	r0, r5
 88c:	bl	c8 <_f>
 890:	cmp	r0, #0
 894:	beq	814 <teste_v_sucessores+0xd4>
 898:	b	820 <teste_v_sucessores+0xe0>
 89c:	ldr	r0, [pc, #100]	; 908 <teste_v_sucessores+0x1c8>
 8a0:	bl	0 <printf>
 8a4:	mov	r0, r5
 8a8:	bl	0 <vetor_apaga>
 8ac:	mov	r0, r7
 8b0:	add	r6, r6, #1
 8b4:	bl	0 <grafo_apaga>
 8b8:	mov	r0, #10
 8bc:	bl	0 <putchar>
 8c0:	mov	r0, r6
 8c4:	add	sp, sp, #84	; 0x54
 8c8:	pop	{r4, r5, r6, r7, pc}
 8cc:	ldr	r0, [pc, #56]	; 90c <teste_v_sucessores+0x1cc>
 8d0:	bl	0 <printf>
 8d4:	mov	r0, #10
 8d8:	bl	0 <putchar>
 8dc:	b	864 <teste_v_sucessores+0x124>
 8e0:	ldr	r0, [pc, #40]	; 910 <teste_v_sucessores+0x1d0>
 8e4:	bl	0 <printf>
 8e8:	mov	r0, #10
 8ec:	add	r6, r6, #1
 8f0:	bl	0 <putchar>
 8f4:	b	864 <teste_v_sucessores+0x124>
 8f8:	.word	0x00000398
 8fc:	.word	0x000003dc
 900:	.word	0x00000408
 904:	.word	0x00000070
 908:	.word	0x00000474
 90c:	.word	0x000003ac
 910:	.word	0x00000434

00000914 <teste_v_antecessores>:
 914:	push	{r4, r5, r6, r7, lr}
 918:	sub	sp, sp, #84	; 0x54
 91c:	mov	ip, #7
 920:	mov	lr, #5
 924:	mov	r5, #2
 928:	mov	r0, #6
 92c:	mov	r3, #4
 930:	mov	r4, #0
 934:	mov	r1, #3
 938:	mov	r2, r1
 93c:	str	ip, [sp, #16]
 940:	str	ip, [sp]
 944:	str	lr, [sp, #24]
 948:	str	lr, [sp, #20]
 94c:	mov	r6, #1
 950:	str	r0, [sp, #44]	; 0x2c
 954:	str	r3, [sp, #40]	; 0x28
 958:	str	r3, [sp, #32]
 95c:	str	r3, [sp, #28]
 960:	str	r5, [sp, #12]
 964:	mov	r3, r5
 968:	str	r5, [sp, #4]
 96c:	str	r1, [sp, #68]	; 0x44
 970:	str	r0, [sp, #64]	; 0x40
 974:	mov	r1, #22
 978:	str	r0, [sp, #60]	; 0x3c
 97c:	str	r4, [sp, #36]	; 0x24
 980:	str	r4, [sp, #8]
 984:	mov	r0, #8
 988:	str	ip, [sp, #56]	; 0x38
 98c:	str	r4, [sp, #72]	; 0x48
 990:	str	r6, [sp, #76]	; 0x4c
 994:	str	r6, [sp, #52]	; 0x34
 998:	str	r6, [sp, #48]	; 0x30
 99c:	bl	0 <_g>
 9a0:	mov	r7, r0
 9a4:	ldr	r0, [pc, #292]	; ad0 <teste_v_antecessores+0x1bc>
 9a8:	bl	0 <printf>
 9ac:	mov	r1, r5
 9b0:	mov	r0, r7
 9b4:	bl	0 <v_antecessores>
 9b8:	subs	r5, r0, #0
 9bc:	beq	aa4 <teste_v_antecessores+0x190>
 9c0:	ldr	r3, [r5]
 9c4:	cmp	r3, #3
 9c8:	moveq	r6, r4
 9cc:	beq	9d8 <teste_v_antecessores+0xc4>
 9d0:	ldr	r0, [pc, #252]	; ad4 <teste_v_antecessores+0x1c0>
 9d4:	bl	0 <printf>
 9d8:	mov	r1, #0
 9dc:	mov	r0, r5
 9e0:	bl	c8 <_f>
 9e4:	cmp	r0, #0
 9e8:	bne	a48 <teste_v_antecessores+0x134>
 9ec:	ldr	r0, [pc, #228]	; ad8 <teste_v_antecessores+0x1c4>
 9f0:	add	r6, r6, #1
 9f4:	bl	0 <printf>
 9f8:	mov	r0, r5
 9fc:	bl	0 <vetor_apaga>
 a00:	mov	r1, #7
 a04:	mov	r0, r7
 a08:	bl	0 <v_antecessores>
 a0c:	subs	r5, r0, #0
 a10:	beq	ab8 <teste_v_antecessores+0x1a4>
 a14:	ldr	r3, [r5]
 a18:	cmp	r3, #0
 a1c:	bne	a74 <teste_v_antecessores+0x160>
 a20:	bl	0 <vetor_apaga>
 a24:	mov	r0, r7
 a28:	bl	0 <grafo_apaga>
 a2c:	cmp	r6, #0
 a30:	bne	a90 <teste_v_antecessores+0x17c>
 a34:	ldr	r0, [pc, #160]	; adc <teste_v_antecessores+0x1c8>
 a38:	bl	0 <puts>
 a3c:	mov	r0, r6
 a40:	add	sp, sp, #84	; 0x54
 a44:	pop	{r4, r5, r6, r7, pc}
 a48:	mov	r1, #3
 a4c:	mov	r0, r5
 a50:	bl	c8 <_f>
 a54:	cmp	r0, #0
 a58:	beq	9ec <teste_v_antecessores+0xd8>
 a5c:	mov	r1, #7
 a60:	mov	r0, r5
 a64:	bl	c8 <_f>
 a68:	cmp	r0, #0
 a6c:	beq	9ec <teste_v_antecessores+0xd8>
 a70:	b	9f8 <teste_v_antecessores+0xe4>
 a74:	ldr	r0, [pc, #100]	; ae0 <teste_v_antecessores+0x1cc>
 a78:	bl	0 <printf>
 a7c:	mov	r0, r5
 a80:	bl	0 <vetor_apaga>
 a84:	mov	r0, r7
 a88:	add	r6, r6, #1
 a8c:	bl	0 <grafo_apaga>
 a90:	mov	r0, #10
 a94:	bl	0 <putchar>
 a98:	mov	r0, r6
 a9c:	add	sp, sp, #84	; 0x54
 aa0:	pop	{r4, r5, r6, r7, pc}
 aa4:	ldr	r0, [pc, #56]	; ae4 <teste_v_antecessores+0x1d0>
 aa8:	bl	0 <printf>
 aac:	mov	r0, #10
 ab0:	bl	0 <putchar>
 ab4:	b	a3c <teste_v_antecessores+0x128>
 ab8:	ldr	r0, [pc, #40]	; ae8 <teste_v_antecessores+0x1d4>
 abc:	bl	0 <printf>
 ac0:	mov	r0, #10
 ac4:	add	r6, r6, #1
 ac8:	bl	0 <putchar>
 acc:	b	a3c <teste_v_antecessores+0x128>
 ad0:	.word	0x000004a4
 ad4:	.word	0x000004e8
 ad8:	.word	0x00000518
 adc:	.word	0x00000070
 ae0:	.word	0x00000588
 ae4:	.word	0x000004b8
 ae8:	.word	0x00000548

00000aec <teste_v_grau>:
 aec:	push	{r4, r5, r6, lr}
 af0:	sub	sp, sp, #80	; 0x50
 af4:	mov	ip, #7
 af8:	mov	r3, #2
 afc:	mov	r6, #0
 b00:	mov	r2, #4
 b04:	mov	r0, #3
 b08:	mov	r1, #5
 b0c:	mov	lr, #6
 b10:	mov	r4, #1
 b14:	str	ip, [sp, #16]
 b18:	str	ip, [sp]
 b1c:	str	r3, [sp, #12]
 b20:	str	r3, [sp, #4]
 b24:	str	r2, [sp, #40]	; 0x28
 b28:	str	r2, [sp, #32]
 b2c:	str	r2, [sp, #28]
 b30:	str	r1, [sp, #24]
 b34:	mov	r2, r0
 b38:	str	r1, [sp, #20]
 b3c:	str	r0, [sp, #68]	; 0x44
 b40:	mov	r1, #22
 b44:	str	r6, [sp, #36]	; 0x24
 b48:	str	r6, [sp, #8]
 b4c:	mov	r0, #8
 b50:	str	lr, [sp, #44]	; 0x2c
 b54:	str	lr, [sp, #64]	; 0x40
 b58:	str	lr, [sp, #60]	; 0x3c
 b5c:	str	ip, [sp, #56]	; 0x38
 b60:	str	r4, [sp, #76]	; 0x4c
 b64:	str	r4, [sp, #52]	; 0x34
 b68:	str	r4, [sp, #48]	; 0x30
 b6c:	str	r6, [sp, #72]	; 0x48
 b70:	bl	0 <_g>
 b74:	mov	r5, r0
 b78:	ldr	r0, [pc, #192]	; c40 <teste_v_grau+0x154>
 b7c:	bl	0 <printf>
 b80:	mov	r0, r5
 b84:	mvn	r1, #3
 b88:	bl	0 <v_grau>
 b8c:	cmn	r0, #1
 b90:	moveq	r4, r6
 b94:	beq	ba0 <teste_v_grau+0xb4>
 b98:	ldr	r0, [pc, #164]	; c44 <teste_v_grau+0x158>
 b9c:	bl	0 <printf>
 ba0:	mov	r1, #7
 ba4:	mov	r0, r5
 ba8:	bl	0 <v_grau>
 bac:	cmp	r0, #3
 bb0:	beq	c08 <teste_v_grau+0x11c>
 bb4:	ldr	r0, [pc, #140]	; c48 <teste_v_grau+0x15c>
 bb8:	bl	0 <printf>
 bbc:	mov	r1, #5
 bc0:	mov	r0, r5
 bc4:	bl	0 <v_grau>
 bc8:	add	r4, r4, #1
 bcc:	cmp	r0, #2
 bd0:	beq	bfc <teste_v_grau+0x110>
 bd4:	ldr	r0, [pc, #112]	; c4c <teste_v_grau+0x160>
 bd8:	bl	0 <printf>
 bdc:	mov	r0, r5
 be0:	add	r4, r4, #1
 be4:	bl	0 <grafo_apaga>
 be8:	mov	r0, #10
 bec:	bl	0 <putchar>
 bf0:	mov	r0, r4
 bf4:	add	sp, sp, #80	; 0x50
 bf8:	pop	{r4, r5, r6, pc}
 bfc:	mov	r0, r5
 c00:	bl	0 <grafo_apaga>
 c04:	b	be8 <teste_v_grau+0xfc>
 c08:	mov	r1, #5
 c0c:	mov	r0, r5
 c10:	bl	0 <v_grau>
 c14:	cmp	r0, #2
 c18:	bne	bd4 <teste_v_grau+0xe8>
 c1c:	mov	r0, r5
 c20:	bl	0 <grafo_apaga>
 c24:	cmp	r4, #0
 c28:	bne	be8 <teste_v_grau+0xfc>
 c2c:	ldr	r0, [pc, #28]	; c50 <teste_v_grau+0x164>
 c30:	bl	0 <puts>
 c34:	mov	r0, r4
 c38:	add	sp, sp, #80	; 0x50
 c3c:	pop	{r4, r5, r6, pc}
 c40:	.word	0x000005b8
 c44:	.word	0x000005c4
 c48:	.word	0x000005f4
 c4c:	.word	0x00000624
 c50:	.word	0x00000070

00000c54 <teste_v_celebridade>:
 c54:	push	{r4, r5, r6, r7, lr}
 c58:	sub	sp, sp, #116	; 0x74
 c5c:	mov	r4, #2
 c60:	mov	lr, #3
 c64:	mov	r6, #7
 c68:	mov	r0, #4
 c6c:	mov	ip, #0
 c70:	mov	r1, #5
 c74:	mov	r5, #1
 c78:	mov	r3, r4
 c7c:	mov	r2, lr
 c80:	str	ip, [sp, #8]
 c84:	str	r6, [sp]
 c88:	str	ip, [sp, #72]	; 0x48
 c8c:	str	ip, [sp, #36]	; 0x24
 c90:	str	r1, [sp, #104]	; 0x68
 c94:	mov	ip, #6
 c98:	str	r1, [sp, #24]
 c9c:	str	r1, [sp, #20]
 ca0:	str	r0, [sp, #96]	; 0x60
 ca4:	mov	r1, #30
 ca8:	str	r0, [sp, #40]	; 0x28
 cac:	str	r0, [sp, #32]
 cb0:	str	r0, [sp, #28]
 cb4:	str	r4, [sp, #4]
 cb8:	mov	r0, #8
 cbc:	str	lr, [sp, #68]	; 0x44
 cc0:	str	ip, [sp, #88]	; 0x58
 cc4:	str	ip, [sp, #64]	; 0x40
 cc8:	str	ip, [sp, #60]	; 0x3c
 ccc:	str	ip, [sp, #44]	; 0x2c
 cd0:	str	r6, [sp, #56]	; 0x38
 cd4:	str	r6, [sp, #16]
 cd8:	str	r4, [sp, #12]
 cdc:	str	r4, [sp, #108]	; 0x6c
 ce0:	str	r4, [sp, #100]	; 0x64
 ce4:	str	r4, [sp, #92]	; 0x5c
 ce8:	str	r4, [sp, #84]	; 0x54
 cec:	str	r5, [sp, #80]	; 0x50
 cf0:	str	r5, [sp, #76]	; 0x4c
 cf4:	str	r5, [sp, #52]	; 0x34
 cf8:	str	r5, [sp, #48]	; 0x30
 cfc:	bl	0 <_g>
 d00:	mov	r7, r0
 d04:	ldr	r0, [pc, #148]	; da0 <teste_v_celebridade+0x14c>
 d08:	bl	0 <printf>
 d0c:	mov	r1, r6
 d10:	mov	r0, r7
 d14:	bl	0 <v_celebridade>
 d18:	subs	r6, r0, #0
 d1c:	bne	d78 <teste_v_celebridade+0x124>
 d20:	mov	r1, r4
 d24:	mov	r0, r7
 d28:	bl	0 <v_celebridade>
 d2c:	cmp	r0, #1
 d30:	movne	r6, r5
 d34:	beq	d5c <teste_v_celebridade+0x108>
 d38:	ldr	r0, [pc, #100]	; da4 <teste_v_celebridade+0x150>
 d3c:	bl	0 <printf>
 d40:	mov	r0, r7
 d44:	bl	0 <grafo_apaga>
 d48:	mov	r0, #10
 d4c:	bl	0 <putchar>
 d50:	mov	r0, r6
 d54:	add	sp, sp, #116	; 0x74
 d58:	pop	{r4, r5, r6, r7, pc}
 d5c:	mov	r0, r7
 d60:	bl	0 <grafo_apaga>
 d64:	ldr	r0, [pc, #60]	; da8 <teste_v_celebridade+0x154>
 d68:	bl	0 <puts>
 d6c:	mov	r0, r6
 d70:	add	sp, sp, #116	; 0x74
 d74:	pop	{r4, r5, r6, r7, pc}
 d78:	ldr	r0, [pc, #44]	; dac <teste_v_celebridade+0x158>
 d7c:	bl	0 <printf>
 d80:	mov	r1, r4
 d84:	mov	r0, r7
 d88:	bl	0 <v_celebridade>
 d8c:	cmp	r0, r5
 d90:	mov	r6, r0
 d94:	movne	r6, r4
 d98:	beq	d40 <teste_v_celebridade+0xec>
 d9c:	b	d38 <teste_v_celebridade+0xe4>
 da0:	.word	0x00000654
 da4:	.word	0x000006a0
 da8:	.word	0x00000070
 dac:	.word	0x00000668

Disassembly of section .text.startup:

00000000 <main>:
   0:	ldr	r2, [pc, #140]	; 94 <main+0x94>
   4:	mov	r3, #0
   8:	push	{r4, lr}
   c:	mov	r1, r3
  10:	ldr	r0, [r2]
  14:	mov	r2, #2
  18:	bl	0 <setvbuf>
  1c:	ldr	r2, [pc, #116]	; 98 <main+0x98>
  20:	mov	r3, #0
  24:	mov	r1, r3
  28:	ldr	r0, [r2]
  2c:	mov	r2, #2
  30:	bl	0 <setvbuf>
  34:	bl	120 <teste_grafo_novo>
  38:	mov	r4, r0
  3c:	bl	200 <teste_grafo_aresta>
  40:	add	r4, r4, r0
  44:	bl	398 <teste_grafo_adiciona>
  48:	add	r4, r4, r0
  4c:	bl	5a0 <teste_grafo_remove>
  50:	add	r4, r4, r0
  54:	bl	740 <teste_v_sucessores>
  58:	add	r4, r4, r0
  5c:	bl	914 <teste_v_antecessores>
  60:	add	r4, r4, r0
  64:	bl	aec <teste_v_grau>
  68:	add	r4, r4, r0
  6c:	bl	c54 <teste_v_celebridade>
  70:	adds	r1, r4, r0
  74:	beq	88 <main+0x88>
  78:	ldr	r0, [pc, #28]	; 9c <main+0x9c>
  7c:	bl	0 <printf>
  80:	mov	r0, #0
  84:	pop	{r4, pc}
  88:	ldr	r0, [pc, #16]	; a0 <main+0xa0>
  8c:	bl	0 <puts>
  90:	b	80 <main+0x80>
	...
  9c:	.word	0x000006ec
  a0:	.word	0x000006d4
