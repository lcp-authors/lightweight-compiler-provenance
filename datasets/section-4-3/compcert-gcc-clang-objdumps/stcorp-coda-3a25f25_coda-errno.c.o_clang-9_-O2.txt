
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-errno.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_get_errno>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	ldr	r1, [pc, #8]	; 18 <coda_get_errno+0x18>
   c:	bl	0 <__aeabi_read_tp>
  10:	add	r0, r0, r1
  14:	pop	{fp, pc}
  18:	.word	0x00000000

0000001c <coda_add_error_message_vargs>:
  1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
  20:	add	fp, sp, #24
  24:	sub	sp, sp, #8
  28:	sub	sp, sp, #4096	; 0x1000
  2c:	cmp	r0, #0
  30:	beq	b0 <coda_add_error_message_vargs+0x94>
  34:	ldr	r8, [pc, #124]	; b8 <coda_add_error_message_vargs+0x9c>
  38:	mov	r4, r1
  3c:	mov	r5, r0
  40:	bl	0 <__aeabi_read_tp>
  44:	add	r0, r0, r8
  48:	bl	0 <strlen>
  4c:	cmp	r0, #4096	; 0x1000
  50:	bge	b0 <coda_add_error_message_vargs+0x94>
  54:	cmp	r0, #0
  58:	bne	7c <coda_add_error_message_vargs+0x60>
  5c:	ldr	r1, [pc, #88]	; bc <coda_add_error_message_vargs+0xa0>
  60:	bl	0 <__aeabi_read_tp>
  64:	ldr	r0, [r0, r1]
  68:	bl	c0 <coda_errno_to_string>
  6c:	mov	r1, r0
  70:	add	r0, sp, #7
  74:	bl	0 <strcpy>
  78:	bl	0 <strlen>
  7c:	rsb	r6, r0, #4096	; 0x1000
  80:	add	r7, sp, #7
  84:	mov	r2, r5
  88:	mov	r3, r4
  8c:	mov	r0, r7
  90:	mov	r1, r6
  94:	bl	0 <vsnprintf>
  98:	mov	r0, #0
  9c:	strb	r0, [r7, r6]
  a0:	bl	0 <__aeabi_read_tp>
  a4:	add	r0, r0, r8
  a8:	mov	r1, r7
  ac:	bl	0 <strcat>
  b0:	sub	sp, fp, #24
  b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
	...

000000c0 <coda_errno_to_string>:
  c0:	push	{r4, r5, fp, lr}
  c4:	add	fp, sp, #8
  c8:	ldr	r5, [pc, #1228]	; 59c <coda_errno_to_string+0x4dc>
  cc:	mov	r1, r0
  d0:	bl	0 <__aeabi_read_tp>
  d4:	ldr	r2, [pc, #1220]	; 5a0 <coda_errno_to_string+0x4e0>
  d8:	ldr	r4, [r0, r2]
  dc:	cmp	r4, r1
  e0:	bne	f0 <coda_errno_to_string+0x30>
  e4:	ldrb	r2, [r0, r5]!
  e8:	cmp	r2, #0
  ec:	popne	{r4, r5, fp, pc}
  f0:	cmn	r1, #300	; 0x12c
  f4:	blt	444 <coda_errno_to_string+0x384>
  f8:	add	r2, r1, #200	; 0xc8
  fc:	cmp	r2, #200	; 0xc8
 100:	bhi	488 <coda_errno_to_string+0x3c8>
 104:	movw	r0, #0
 108:	add	r3, pc, #4
 10c:	movt	r0, #0
 110:	ldr	pc, [r3, r2, lsl #2]
 114:	.word	0x00000438
 118:	.word	0x0000049c
 11c:	.word	0x0000049c
 120:	.word	0x0000049c
 124:	.word	0x0000049c
 128:	.word	0x0000049c
 12c:	.word	0x0000049c
 130:	.word	0x0000049c
 134:	.word	0x0000049c
 138:	.word	0x0000049c
 13c:	.word	0x0000049c
 140:	.word	0x0000049c
 144:	.word	0x0000049c
 148:	.word	0x0000049c
 14c:	.word	0x0000049c
 150:	.word	0x0000049c
 154:	.word	0x0000049c
 158:	.word	0x0000049c
 15c:	.word	0x0000049c
 160:	.word	0x0000049c
 164:	.word	0x0000049c
 168:	.word	0x0000049c
 16c:	.word	0x0000049c
 170:	.word	0x0000049c
 174:	.word	0x0000049c
 178:	.word	0x0000049c
 17c:	.word	0x0000049c
 180:	.word	0x0000049c
 184:	.word	0x0000049c
 188:	.word	0x0000049c
 18c:	.word	0x0000049c
 190:	.word	0x0000049c
 194:	.word	0x0000049c
 198:	.word	0x0000049c
 19c:	.word	0x0000049c
 1a0:	.word	0x0000049c
 1a4:	.word	0x0000049c
 1a8:	.word	0x0000049c
 1ac:	.word	0x0000049c
 1b0:	.word	0x0000049c
 1b4:	.word	0x0000049c
 1b8:	.word	0x0000049c
 1bc:	.word	0x0000049c
 1c0:	.word	0x0000049c
 1c4:	.word	0x0000049c
 1c8:	.word	0x0000049c
 1cc:	.word	0x0000049c
 1d0:	.word	0x0000049c
 1d4:	.word	0x0000049c
 1d8:	.word	0x0000049c
 1dc:	.word	0x0000049c
 1e0:	.word	0x0000049c
 1e4:	.word	0x0000049c
 1e8:	.word	0x0000049c
 1ec:	.word	0x0000049c
 1f0:	.word	0x0000049c
 1f4:	.word	0x0000049c
 1f8:	.word	0x0000049c
 1fc:	.word	0x0000049c
 200:	.word	0x0000049c
 204:	.word	0x0000049c
 208:	.word	0x0000049c
 20c:	.word	0x0000049c
 210:	.word	0x0000049c
 214:	.word	0x0000049c
 218:	.word	0x0000049c
 21c:	.word	0x0000049c
 220:	.word	0x0000049c
 224:	.word	0x0000049c
 228:	.word	0x0000049c
 22c:	.word	0x0000049c
 230:	.word	0x0000049c
 234:	.word	0x0000049c
 238:	.word	0x0000049c
 23c:	.word	0x0000049c
 240:	.word	0x0000049c
 244:	.word	0x0000049c
 248:	.word	0x0000049c
 24c:	.word	0x0000049c
 250:	.word	0x0000049c
 254:	.word	0x0000049c
 258:	.word	0x0000049c
 25c:	.word	0x0000049c
 260:	.word	0x0000049c
 264:	.word	0x0000049c
 268:	.word	0x0000049c
 26c:	.word	0x0000049c
 270:	.word	0x0000049c
 274:	.word	0x0000049c
 278:	.word	0x0000049c
 27c:	.word	0x0000049c
 280:	.word	0x0000049c
 284:	.word	0x000004b8
 288:	.word	0x000004c4
 28c:	.word	0x000004d0
 290:	.word	0x000004dc
 294:	.word	0x000004e8
 298:	.word	0x000004f4
 29c:	.word	0x00000500
 2a0:	.word	0x0000050c
 2a4:	.word	0x00000518
 2a8:	.word	0x0000049c
 2ac:	.word	0x0000049c
 2b0:	.word	0x0000049c
 2b4:	.word	0x0000049c
 2b8:	.word	0x0000049c
 2bc:	.word	0x0000049c
 2c0:	.word	0x0000049c
 2c4:	.word	0x0000049c
 2c8:	.word	0x0000049c
 2cc:	.word	0x0000049c
 2d0:	.word	0x0000049c
 2d4:	.word	0x0000049c
 2d8:	.word	0x0000049c
 2dc:	.word	0x0000049c
 2e0:	.word	0x0000049c
 2e4:	.word	0x0000049c
 2e8:	.word	0x0000049c
 2ec:	.word	0x0000049c
 2f0:	.word	0x0000049c
 2f4:	.word	0x0000049c
 2f8:	.word	0x0000049c
 2fc:	.word	0x0000049c
 300:	.word	0x0000049c
 304:	.word	0x0000049c
 308:	.word	0x0000049c
 30c:	.word	0x0000049c
 310:	.word	0x0000049c
 314:	.word	0x0000049c
 318:	.word	0x0000049c
 31c:	.word	0x0000049c
 320:	.word	0x0000049c
 324:	.word	0x0000049c
 328:	.word	0x0000049c
 32c:	.word	0x0000049c
 330:	.word	0x0000049c
 334:	.word	0x0000049c
 338:	.word	0x0000049c
 33c:	.word	0x0000049c
 340:	.word	0x0000049c
 344:	.word	0x0000049c
 348:	.word	0x0000049c
 34c:	.word	0x0000049c
 350:	.word	0x0000049c
 354:	.word	0x0000049c
 358:	.word	0x0000049c
 35c:	.word	0x0000049c
 360:	.word	0x0000049c
 364:	.word	0x0000049c
 368:	.word	0x0000049c
 36c:	.word	0x0000049c
 370:	.word	0x0000049c
 374:	.word	0x0000049c
 378:	.word	0x0000049c
 37c:	.word	0x0000049c
 380:	.word	0x0000049c
 384:	.word	0x0000049c
 388:	.word	0x0000049c
 38c:	.word	0x0000049c
 390:	.word	0x0000049c
 394:	.word	0x0000049c
 398:	.word	0x0000049c
 39c:	.word	0x0000049c
 3a0:	.word	0x0000049c
 3a4:	.word	0x0000049c
 3a8:	.word	0x0000049c
 3ac:	.word	0x0000049c
 3b0:	.word	0x0000049c
 3b4:	.word	0x0000049c
 3b8:	.word	0x0000049c
 3bc:	.word	0x0000049c
 3c0:	.word	0x0000049c
 3c4:	.word	0x0000049c
 3c8:	.word	0x0000049c
 3cc:	.word	0x0000049c
 3d0:	.word	0x0000049c
 3d4:	.word	0x0000049c
 3d8:	.word	0x00000524
 3dc:	.word	0x00000530
 3e0:	.word	0x0000053c
 3e4:	.word	0x00000548
 3e8:	.word	0x0000049c
 3ec:	.word	0x0000049c
 3f0:	.word	0x0000049c
 3f4:	.word	0x0000049c
 3f8:	.word	0x0000049c
 3fc:	.word	0x00000554
 400:	.word	0x00000560
 404:	.word	0x0000056c
 408:	.word	0x00000578
 40c:	.word	0x00000584
 410:	.word	0x0000049c
 414:	.word	0x0000049c
 418:	.word	0x0000049c
 41c:	.word	0x0000049c
 420:	.word	0x0000049c
 424:	.word	0x0000049c
 428:	.word	0x0000049c
 42c:	.word	0x0000049c
 430:	.word	0x00000590
 434:	.word	0x000004b4
 438:	movw	r0, #0
 43c:	movt	r0, #0
 440:	pop	{r4, r5, fp, pc}
 444:	mvn	r0, #400	; 0x190
 448:	cmp	r1, r0
 44c:	beq	470 <coda_errno_to_string+0x3b0>
 450:	cmn	r1, #400	; 0x190
 454:	beq	47c <coda_errno_to_string+0x3bc>
 458:	mvn	r0, #300	; 0x12c
 45c:	cmp	r1, r0
 460:	bne	49c <coda_errno_to_string+0x3dc>
 464:	movw	r0, #0
 468:	movt	r0, #0
 46c:	pop	{r4, r5, fp, pc}
 470:	movw	r0, #0
 474:	movt	r0, #0
 478:	pop	{r4, r5, fp, pc}
 47c:	movw	r0, #0
 480:	movt	r0, #0
 484:	pop	{r4, r5, fp, pc}
 488:	cmn	r1, #300	; 0x12c
 48c:	bne	49c <coda_errno_to_string+0x3dc>
 490:	movw	r0, #0
 494:	movt	r0, #0
 498:	pop	{r4, r5, fp, pc}
 49c:	bl	0 <__aeabi_read_tp>
 4a0:	mov	r2, r0
 4a4:	movw	r0, #0
 4a8:	cmp	r4, r1
 4ac:	movt	r0, #0
 4b0:	addeq	r0, r2, r5
 4b4:	pop	{r4, r5, fp, pc}
 4b8:	movw	r0, #0
 4bc:	movt	r0, #0
 4c0:	pop	{r4, r5, fp, pc}
 4c4:	movw	r0, #0
 4c8:	movt	r0, #0
 4cc:	pop	{r4, r5, fp, pc}
 4d0:	movw	r0, #0
 4d4:	movt	r0, #0
 4d8:	pop	{r4, r5, fp, pc}
 4dc:	movw	r0, #0
 4e0:	movt	r0, #0
 4e4:	pop	{r4, r5, fp, pc}
 4e8:	movw	r0, #0
 4ec:	movt	r0, #0
 4f0:	pop	{r4, r5, fp, pc}
 4f4:	movw	r0, #0
 4f8:	movt	r0, #0
 4fc:	pop	{r4, r5, fp, pc}
 500:	movw	r0, #0
 504:	movt	r0, #0
 508:	pop	{r4, r5, fp, pc}
 50c:	movw	r0, #0
 510:	movt	r0, #0
 514:	pop	{r4, r5, fp, pc}
 518:	movw	r0, #0
 51c:	movt	r0, #0
 520:	pop	{r4, r5, fp, pc}
 524:	movw	r0, #0
 528:	movt	r0, #0
 52c:	pop	{r4, r5, fp, pc}
 530:	movw	r0, #0
 534:	movt	r0, #0
 538:	pop	{r4, r5, fp, pc}
 53c:	movw	r0, #0
 540:	movt	r0, #0
 544:	pop	{r4, r5, fp, pc}
 548:	movw	r0, #0
 54c:	movt	r0, #0
 550:	pop	{r4, r5, fp, pc}
 554:	movw	r0, #0
 558:	movt	r0, #0
 55c:	pop	{r4, r5, fp, pc}
 560:	movw	r0, #0
 564:	movt	r0, #0
 568:	pop	{r4, r5, fp, pc}
 56c:	movw	r0, #0
 570:	movt	r0, #0
 574:	pop	{r4, r5, fp, pc}
 578:	movw	r0, #0
 57c:	movt	r0, #0
 580:	pop	{r4, r5, fp, pc}
 584:	movw	r0, #0
 588:	movt	r0, #0
 58c:	pop	{r4, r5, fp, pc}
 590:	movw	r0, #0
 594:	movt	r0, #0
 598:	pop	{r4, r5, fp, pc}
	...

000005a4 <coda_add_error_message>:
 5a4:	sub	sp, sp, #12
 5a8:	push	{fp, lr}
 5ac:	mov	fp, sp
 5b0:	sub	sp, sp, #4
 5b4:	add	ip, fp, #8
 5b8:	stm	ip, {r1, r2, r3}
 5bc:	add	r1, fp, #8
 5c0:	str	r1, [sp]
 5c4:	bl	1c <coda_add_error_message_vargs>
 5c8:	mov	sp, fp
 5cc:	pop	{fp, lr}
 5d0:	add	sp, sp, #12
 5d4:	bx	lr

000005d8 <coda_set_error_message_vargs>:
 5d8:	push	{r4, r5, r6, r7, fp, lr}
 5dc:	add	fp, sp, #16
 5e0:	sub	sp, sp, #8
 5e4:	sub	sp, sp, #4096	; 0x1000
 5e8:	cmp	r0, #0
 5ec:	beq	630 <coda_set_error_message_vargs+0x58>
 5f0:	add	r4, sp, #7
 5f4:	mov	r3, r1
 5f8:	mov	r2, r0
 5fc:	mov	r1, #4096	; 0x1000
 600:	mov	r5, #4096	; 0x1000
 604:	mov	r0, r4
 608:	bl	0 <vsnprintf>
 60c:	ldr	r1, [pc, #52]	; 648 <coda_set_error_message_vargs+0x70>
 610:	mov	r0, #0
 614:	strb	r0, [r4, r5]
 618:	bl	0 <__aeabi_read_tp>
 61c:	add	r0, r0, r1
 620:	mov	r1, r4
 624:	bl	0 <strcpy>
 628:	sub	sp, fp, #16
 62c:	pop	{r4, r5, r6, r7, fp, pc}
 630:	ldr	r1, [pc, #16]	; 648 <coda_set_error_message_vargs+0x70>
 634:	mov	r2, #0
 638:	bl	0 <__aeabi_read_tp>
 63c:	strb	r2, [r0, r1]
 640:	sub	sp, fp, #16
 644:	pop	{r4, r5, r6, r7, fp, pc}
 648:	.word	0x00000000

0000064c <coda_set_error_message>:
 64c:	sub	sp, sp, #12
 650:	push	{r4, r5, r6, r7, fp, lr}
 654:	add	fp, sp, #16
 658:	sub	sp, sp, #12
 65c:	sub	sp, sp, #4096	; 0x1000
 660:	mov	ip, r0
 664:	add	r0, fp, #8
 668:	stm	r0, {r1, r2, r3}
 66c:	add	r0, fp, #8
 670:	cmp	ip, #0
 674:	str	r0, [sp, #4]
 678:	beq	6b8 <coda_set_error_message+0x6c>
 67c:	ldr	r3, [sp, #4]
 680:	add	r4, sp, #11
 684:	mov	r1, #4096	; 0x1000
 688:	mov	r2, ip
 68c:	mov	r5, #4096	; 0x1000
 690:	mov	r0, r4
 694:	bl	0 <vsnprintf>
 698:	ldr	r1, [pc, #56]	; 6d8 <coda_set_error_message+0x8c>
 69c:	mov	r0, #0
 6a0:	strb	r0, [r4, r5]
 6a4:	bl	0 <__aeabi_read_tp>
 6a8:	add	r0, r0, r1
 6ac:	mov	r1, r4
 6b0:	bl	0 <strcpy>
 6b4:	b	6c8 <coda_set_error_message+0x7c>
 6b8:	ldr	r1, [pc, #24]	; 6d8 <coda_set_error_message+0x8c>
 6bc:	mov	r2, #0
 6c0:	bl	0 <__aeabi_read_tp>
 6c4:	strb	r2, [r0, r1]
 6c8:	sub	sp, fp, #16
 6cc:	pop	{r4, r5, r6, r7, fp, lr}
 6d0:	add	sp, sp, #12
 6d4:	bx	lr
 6d8:	.word	0x00000000

000006dc <coda_cursor_add_to_error_message>:
 6dc:	push	{r4, sl, fp, lr}
 6e0:	add	fp, sp, #8
 6e4:	mov	r4, r0
 6e8:	movw	r0, #0
 6ec:	movt	r0, #0
 6f0:	bl	5a4 <coda_add_error_message>
 6f4:	movw	r1, #0
 6f8:	mov	r0, r4
 6fc:	movt	r1, #0
 700:	pop	{r4, sl, fp, lr}
 704:	b	0 <coda_cursor_print_path>

00000708 <add_error_message>:
 708:	sub	sp, sp, #12
 70c:	push	{fp, lr}
 710:	mov	fp, sp
 714:	sub	sp, sp, #4
 718:	add	ip, fp, #8
 71c:	stm	ip, {r1, r2, r3}
 720:	add	r1, fp, #8
 724:	str	r1, [sp]
 728:	bl	1c <coda_add_error_message_vargs>
 72c:	mov	r0, #0
 730:	mov	sp, fp
 734:	pop	{fp, lr}
 738:	add	sp, sp, #12
 73c:	bx	lr

00000740 <coda_set_error>:
 740:	sub	sp, sp, #8
 744:	push	{r4, r5, r6, sl, fp, lr}
 748:	add	fp, sp, #16
 74c:	sub	sp, sp, #8
 750:	sub	sp, sp, #4096	; 0x1000
 754:	ldr	r5, [pc, #128]	; 7dc <coda_set_error+0x9c>
 758:	mov	r4, r1
 75c:	mov	r1, r0
 760:	bl	0 <__aeabi_read_tp>
 764:	str	r1, [r0, r5]
 768:	add	r0, fp, #8
 76c:	cmp	r4, #0
 770:	str	r2, [fp, #8]
 774:	str	r3, [fp, #12]
 778:	str	r0, [sp]
 77c:	beq	7bc <coda_set_error+0x7c>
 780:	ldr	r3, [sp]
 784:	add	r5, sp, #7
 788:	mov	r1, #4096	; 0x1000
 78c:	mov	r2, r4
 790:	mov	r6, #4096	; 0x1000
 794:	mov	r0, r5
 798:	bl	0 <vsnprintf>
 79c:	ldr	r1, [pc, #60]	; 7e0 <coda_set_error+0xa0>
 7a0:	mov	r0, #0
 7a4:	strb	r0, [r5, r6]
 7a8:	bl	0 <__aeabi_read_tp>
 7ac:	add	r0, r0, r1
 7b0:	mov	r1, r5
 7b4:	bl	0 <strcpy>
 7b8:	b	7cc <coda_set_error+0x8c>
 7bc:	ldr	r1, [pc, #28]	; 7e0 <coda_set_error+0xa0>
 7c0:	mov	r2, #0
 7c4:	bl	0 <__aeabi_read_tp>
 7c8:	strb	r2, [r0, r1]
 7cc:	sub	sp, fp, #16
 7d0:	pop	{r4, r5, r6, sl, fp, lr}
 7d4:	add	sp, sp, #8
 7d8:	bx	lr
	...
