
../compcert-repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

000121a0 <.init>:
   121a0:	push	{r3, lr}
   121a4:	bl	126ac <_start@@Base+0x3c>
   121a8:	pop	{r3, pc}

Disassembly of section .plt:

000121ac <coda_cursor_get_byte_size@plt-0x14>:
   121ac:	push	{lr}		; (str lr, [sp, #-4]!)
   121b0:	ldr	lr, [pc, #4]	; 121bc <coda_cursor_get_byte_size@plt-0x4>
   121b4:	add	lr, pc, lr
   121b8:	ldr	pc, [lr, #8]!
   121bc:	andeq	ip, r1, r4, asr #28

000121c0 <coda_cursor_get_byte_size@plt>:
   121c0:	add	ip, pc, #0, 12
   121c4:	add	ip, ip, #28, 20	; 0x1c000
   121c8:	ldr	pc, [ip, #3652]!	; 0xe44

000121cc <coda_type_get_special_type_name@plt>:
   121cc:	add	ip, pc, #0, 12
   121d0:	add	ip, ip, #28, 20	; 0x1c000
   121d4:	ldr	pc, [ip, #3644]!	; 0xe3c

000121d8 <coda_set_option_use_fast_size_expressions@plt>:
   121d8:	add	ip, pc, #0, 12
   121dc:	add	ip, ip, #28, 20	; 0x1c000
   121e0:	ldr	pc, [ip, #3636]!	; 0xe34

000121e4 <raise@plt>:
   121e4:	add	ip, pc, #0, 12
   121e8:	add	ip, ip, #28, 20	; 0x1c000
   121ec:	ldr	pc, [ip, #3628]!	; 0xe2c

000121f0 <coda_get_option_bypass_special_types@plt>:
   121f0:	add	ip, pc, #0, 12
   121f4:	add	ip, ip, #28, 20	; 0x1c000
   121f8:	ldr	pc, [ip, #3620]!	; 0xe24

000121fc <coda_set_option_perform_boundary_checks@plt>:
   121fc:	add	ip, pc, #0, 12
   12200:	add	ip, ip, #28, 20	; 0x1c000
   12204:	ldr	pc, [ip, #3612]!	; 0xe1c

00012208 <strcmp@plt>:
   12208:	add	ip, pc, #0, 12
   1220c:	add	ip, ip, #28, 20	; 0x1c000
   12210:	ldr	pc, [ip, #3604]!	; 0xe14

00012214 <coda_type_get_record_field_hidden_status@plt>:
   12214:	add	ip, pc, #0, 12
   12218:	add	ip, ip, #28, 20	; 0x1c000
   1221c:	ldr	pc, [ip, #3596]!	; 0xe0c

00012220 <printf@plt>:
   12220:	add	ip, pc, #0, 12
   12224:	add	ip, ip, #28, 20	; 0x1c000
   12228:	ldr	pc, [ip, #3588]!	; 0xe04

0001222c <coda_cursor_get_record_field_available_status@plt>:
   1222c:	add	ip, pc, #0, 12
   12230:	add	ip, ip, #28, 20	; 0x1c000
   12234:	ldr	pc, [ip, #3580]!	; 0xdfc

00012238 <fopen@plt>:
   12238:	add	ip, pc, #0, 12
   1223c:	add	ip, ip, #28, 20	; 0x1c000
   12240:	ldr	pc, [ip, #3572]!	; 0xdf4

00012244 <coda_set_error@plt>:
   12244:	add	ip, pc, #0, 12
   12248:	add	ip, ip, #28, 20	; 0x1c000
   1224c:	ldr	pc, [ip, #3564]!	; 0xdec

00012250 <coda_open@plt>:
   12250:	add	ip, pc, #0, 12
   12254:	add	ip, ip, #28, 20	; 0x1c000
   12258:	ldr	pc, [ip, #3556]!	; 0xde4

0001225c <fflush@plt>:
   1225c:	add	ip, pc, #0, 12
   12260:	add	ip, ip, #28, 20	; 0x1c000
   12264:	ldr	pc, [ip, #3548]!	; 0xddc

00012268 <coda_time_double_to_string@plt>:
   12268:	add	ip, pc, #0, 12
   1226c:	add	ip, ip, #28, 20	; 0x1c000
   12270:	ldr	pc, [ip, #3540]!	; 0xdd4

00012274 <coda_cursor_get_num_elements@plt>:
   12274:	add	ip, pc, #0, 12
   12278:	add	ip, ip, #28, 20	; 0x1c000
   1227c:	ldr	pc, [ip, #3532]!	; 0xdcc

00012280 <coda_str64u@plt>:
   12280:	add	ip, pc, #0, 12
   12284:	add	ip, ip, #28, 20	; 0x1c000
   12288:	ldr	pc, [ip, #3524]!	; 0xdc4

0001228c <free@plt>:
   1228c:	add	ip, pc, #0, 12
   12290:	add	ip, ip, #28, 20	; 0x1c000
   12294:	ldr	pc, [ip, #3516]!	; 0xdbc

00012298 <coda_set_option_use_mmap@plt>:
   12298:	add	ip, pc, #0, 12
   1229c:	add	ip, ip, #28, 20	; 0x1c000
   122a0:	ldr	pc, [ip, #3508]!	; 0xdb4

000122a4 <coda_set_definition_path_conditional@plt>:
   122a4:	add	ip, pc, #0, 12
   122a8:	add	ip, ip, #28, 20	; 0x1c000
   122ac:	ldr	pc, [ip, #3500]!	; 0xdac

000122b0 <coda_cursor_read_uint32@plt>:
   122b0:	add	ip, pc, #0, 12
   122b4:	add	ip, ip, #28, 20	; 0x1c000
   122b8:	ldr	pc, [ip, #3492]!	; 0xda4

000122bc <coda_set_option_bypass_special_types@plt>:
   122bc:	add	ip, pc, #0, 12
   122c0:	add	ip, ip, #28, 20	; 0x1c000
   122c4:	ldr	pc, [ip, #3484]!	; 0xd9c

000122c8 <coda_type_get_record_field_type@plt>:
   122c8:	add	ip, pc, #0, 12
   122cc:	add	ip, ip, #28, 20	; 0x1c000
   122d0:	ldr	pc, [ip, #3476]!	; 0xd94

000122d4 <coda_cursor_get_type@plt>:
   122d4:	add	ip, pc, #0, 12
   122d8:	add	ip, ip, #28, 20	; 0x1c000
   122dc:	ldr	pc, [ip, #3468]!	; 0xd8c

000122e0 <memcpy@plt>:
   122e0:	add	ip, pc, #0, 12
   122e4:	add	ip, ip, #28, 20	; 0x1c000
   122e8:	ldr	pc, [ip, #3460]!	; 0xd84

000122ec <coda_isInf@plt>:
   122ec:	add	ip, pc, #0, 12
   122f0:	add	ip, ip, #28, 20	; 0x1c000
   122f4:	ldr	pc, [ip, #3452]!	; 0xd7c

000122f8 <coda_type_get_bit_size@plt>:
   122f8:	add	ip, pc, #0, 12
   122fc:	add	ip, ip, #28, 20	; 0x1c000
   12300:	ldr	pc, [ip, #3444]!	; 0xd74

00012304 <coda_type_get_record_field_available_status@plt>:
   12304:	add	ip, pc, #0, 12
   12308:	add	ip, ip, #28, 20	; 0x1c000
   1230c:	ldr	pc, [ip, #3436]!	; 0xd6c

00012310 <coda_cursor_has_attributes@plt>:
   12310:	add	ip, pc, #0, 12
   12314:	add	ip, ip, #28, 20	; 0x1c000
   12318:	ldr	pc, [ip, #3428]!	; 0xd64

0001231c <coda_cursor_get_type_class@plt>:
   1231c:	add	ip, pc, #0, 12
   12320:	add	ip, ip, #28, 20	; 0x1c000
   12324:	ldr	pc, [ip, #3420]!	; 0xd5c

00012328 <coda_set_definition_path@plt>:
   12328:	add	ip, pc, #0, 12
   1232c:	add	ip, ip, #28, 20	; 0x1c000
   12330:	ldr	pc, [ip, #3412]!	; 0xd54

00012334 <coda_get_product_format@plt>:
   12334:	add	ip, pc, #0, 12
   12338:	add	ip, ip, #28, 20	; 0x1c000
   1233c:	ldr	pc, [ip, #3404]!	; 0xd4c

00012340 <coda_type_get_unit@plt>:
   12340:	add	ip, pc, #0, 12
   12344:	add	ip, ip, #28, 20	; 0x1c000
   12348:	ldr	pc, [ip, #3396]!	; 0xd44

0001234c <coda_type_get_description@plt>:
   1234c:	add	ip, pc, #0, 12
   12350:	add	ip, ip, #28, 20	; 0x1c000
   12354:	ldr	pc, [ip, #3388]!	; 0xd3c

00012358 <coda_cursor_get_special_type@plt>:
   12358:	add	ip, pc, #0, 12
   1235c:	add	ip, ip, #28, 20	; 0x1c000
   12360:	ldr	pc, [ip, #3380]!	; 0xd34

00012364 <coda_cursor_goto_first_array_element@plt>:
   12364:	add	ip, pc, #0, 12
   12368:	add	ip, ip, #28, 20	; 0x1c000
   1236c:	ldr	pc, [ip, #3372]!	; 0xd2c

00012370 <fwrite@plt>:
   12370:	add	ip, pc, #0, 12
   12374:	add	ip, ip, #28, 20	; 0x1c000
   12378:	ldr	pc, [ip, #3364]!	; 0xd24

0001237c <coda_cursor_set_product@plt>:
   1237c:	add	ip, pc, #0, 12
   12380:	add	ip, ip, #28, 20	; 0x1c000
   12384:	ldr	pc, [ip, #3356]!	; 0xd1c

00012388 <coda_cursor_goto_first_record_field@plt>:
   12388:	add	ip, pc, #0, 12
   1238c:	add	ip, ip, #28, 20	; 0x1c000
   12390:	ldr	pc, [ip, #3348]!	; 0xd14

00012394 <coda_cursor_goto_record_field_by_index@plt>:
   12394:	add	ip, pc, #0, 12
   12398:	add	ip, ip, #28, 20	; 0x1c000
   1239c:	ldr	pc, [ip, #3340]!	; 0xd0c

000123a0 <coda_done@plt>:
   123a0:	add	ip, pc, #0, 12
   123a4:	add	ip, ip, #28, 20	; 0x1c000
   123a8:	ldr	pc, [ip, #3332]!	; 0xd04

000123ac <puts@plt>:
   123ac:	add	ip, pc, #0, 12
   123b0:	add	ip, ip, #28, 20	; 0x1c000
   123b4:	ldr	pc, [ip, #3324]!	; 0xcfc

000123b8 <coda_cursor_get_read_type@plt>:
   123b8:	add	ip, pc, #0, 12
   123bc:	add	ip, ip, #28, 20	; 0x1c000
   123c0:	ldr	pc, [ip, #3316]!	; 0xcf4

000123c4 <malloc@plt>:
   123c4:	add	ip, pc, #0, 12
   123c8:	add	ip, ip, #28, 20	; 0x1c000
   123cc:	ldr	pc, [ip, #3308]!	; 0xcec

000123d0 <__libc_start_main@plt>:
   123d0:	add	ip, pc, #0, 12
   123d4:	add	ip, ip, #28, 20	; 0x1c000
   123d8:	ldr	pc, [ip, #3300]!	; 0xce4

000123dc <__gmon_start__@plt>:
   123dc:	add	ip, pc, #0, 12
   123e0:	add	ip, ip, #28, 20	; 0x1c000
   123e4:	ldr	pc, [ip, #3292]!	; 0xcdc

000123e8 <coda_cursor_read_string@plt>:
   123e8:	add	ip, pc, #0, 12
   123ec:	add	ip, ip, #28, 20	; 0x1c000
   123f0:	ldr	pc, [ip, #3284]!	; 0xcd4

000123f4 <coda_cursor_goto_parent@plt>:
   123f4:	add	ip, pc, #0, 12
   123f8:	add	ip, ip, #28, 20	; 0x1c000
   123fc:	ldr	pc, [ip, #3276]!	; 0xccc

00012400 <coda_type_get_num_record_fields@plt>:
   12400:	add	ip, pc, #0, 12
   12404:	add	ip, ip, #28, 20	; 0x1c000
   12408:	ldr	pc, [ip, #3268]!	; 0xcc4

0001240c <exit@plt>:
   1240c:	add	ip, pc, #0, 12
   12410:	add	ip, ip, #28, 20	; 0x1c000
   12414:	ldr	pc, [ip, #3260]!	; 0xcbc

00012418 <coda_type_get_read_type@plt>:
   12418:	add	ip, pc, #0, 12
   1241c:	add	ip, ip, #28, 20	; 0x1c000
   12420:	ldr	pc, [ip, #3252]!	; 0xcb4

00012424 <coda_cursor_get_string_length@plt>:
   12424:	add	ip, pc, #0, 12
   12428:	add	ip, ip, #28, 20	; 0x1c000
   1242c:	ldr	pc, [ip, #3244]!	; 0xcac

00012430 <coda_cursor_read_uint64@plt>:
   12430:	add	ip, pc, #0, 12
   12434:	add	ip, ip, #28, 20	; 0x1c000
   12438:	ldr	pc, [ip, #3236]!	; 0xca4

0001243c <coda_cursor_read_double@plt>:
   1243c:	add	ip, pc, #0, 12
   12440:	add	ip, ip, #28, 20	; 0x1c000
   12444:	ldr	pc, [ip, #3228]!	; 0xc9c

00012448 <coda_isNaN@plt>:
   12448:	add	ip, pc, #0, 12
   1244c:	add	ip, ip, #28, 20	; 0x1c000
   12450:	ldr	pc, [ip, #3220]!	; 0xc94

00012454 <fprintf@plt>:
   12454:	add	ip, pc, #0, 12
   12458:	add	ip, ip, #28, 20	; 0x1c000
   1245c:	ldr	pc, [ip, #3212]!	; 0xc8c

00012460 <coda_cursor_goto_next_array_element@plt>:
   12460:	add	ip, pc, #0, 12
   12464:	add	ip, ip, #28, 20	; 0x1c000
   12468:	ldr	pc, [ip, #3204]!	; 0xc84

0001246c <coda_open_as@plt>:
   1246c:	add	ip, pc, #0, 12
   12470:	add	ip, ip, #28, 20	; 0x1c000
   12474:	ldr	pc, [ip, #3196]!	; 0xc7c

00012478 <coda_init@plt>:
   12478:	add	ip, pc, #0, 12
   1247c:	add	ip, ip, #28, 20	; 0x1c000
   12480:	ldr	pc, [ip, #3188]!	; 0xc74

00012484 <coda_set_option_perform_conversions@plt>:
   12484:	add	ip, pc, #0, 12
   12488:	add	ip, ip, #28, 20	; 0x1c000
   1248c:	ldr	pc, [ip, #3180]!	; 0xc6c

00012490 <coda_cursor_goto_attributes@plt>:
   12490:	add	ip, pc, #0, 12
   12494:	add	ip, ip, #28, 20	; 0x1c000
   12498:	ldr	pc, [ip, #3172]!	; 0xc64

0001249c <coda_cursor_read_char@plt>:
   1249c:	add	ip, pc, #0, 12
   124a0:	add	ip, ip, #28, 20	; 0x1c000
   124a4:	ldr	pc, [ip, #3164]!	; 0xc5c

000124a8 <memset@plt>:
   124a8:	add	ip, pc, #0, 12
   124ac:	add	ip, ip, #28, 20	; 0x1c000
   124b0:	ldr	pc, [ip, #3156]!	; 0xc54

000124b4 <putchar@plt>:
   124b4:	add	ip, pc, #0, 12
   124b8:	add	ip, ip, #28, 20	; 0x1c000
   124bc:	ldr	pc, [ip, #3148]!	; 0xc4c

000124c0 <strncpy@plt>:
   124c0:	add	ip, pc, #0, 12
   124c4:	add	ip, ip, #28, 20	; 0x1c000
   124c8:	ldr	pc, [ip, #3140]!	; 0xc44

000124cc <coda_type_get_special_type@plt>:
   124cc:	add	ip, pc, #0, 12
   124d0:	add	ip, ip, #28, 20	; 0x1c000
   124d4:	ldr	pc, [ip, #3132]!	; 0xc3c

000124d8 <coda_type_get_record_union_status@plt>:
   124d8:	add	ip, pc, #0, 12
   124dc:	add	ip, ip, #28, 20	; 0x1c000
   124e0:	ldr	pc, [ip, #3124]!	; 0xc34

000124e4 <coda_cursor_read_complex_double_split@plt>:
   124e4:	add	ip, pc, #0, 12
   124e8:	add	ip, ip, #28, 20	; 0x1c000
   124ec:	ldr	pc, [ip, #3116]!	; 0xc2c

000124f0 <coda_type_get_array_base_type@plt>:
   124f0:	add	ip, pc, #0, 12
   124f4:	add	ip, ip, #28, 20	; 0x1c000
   124f8:	ldr	pc, [ip, #3108]!	; 0xc24

000124fc <fclose@plt>:
   124fc:	add	ip, pc, #0, 12
   12500:	add	ip, ip, #28, 20	; 0x1c000
   12504:	ldr	pc, [ip, #3100]!	; 0xc1c

00012508 <coda_type_get_string_length@plt>:
   12508:	add	ip, pc, #0, 12
   1250c:	add	ip, ip, #28, 20	; 0x1c000
   12510:	ldr	pc, [ip, #3092]!	; 0xc14

00012514 <coda_type_get_native_type_name@plt>:
   12514:	add	ip, pc, #0, 12
   12518:	add	ip, ip, #28, 20	; 0x1c000
   1251c:	ldr	pc, [ip, #3084]!	; 0xc0c

00012520 <coda_cursor_get_array_dim@plt>:
   12520:	add	ip, pc, #0, 12
   12524:	add	ip, ip, #28, 20	; 0x1c000
   12528:	ldr	pc, [ip, #3076]!	; 0xc04

0001252c <coda_cursor_has_ascii_content@plt>:
   1252c:	add	ip, pc, #0, 12
   12530:	add	ip, ip, #28, 20	; 0x1c000
   12534:	ldr	pc, [ip, #3068]!	; 0xbfc

00012538 <coda_close@plt>:
   12538:	add	ip, pc, #0, 12
   1253c:	add	ip, ip, #28, 20	; 0x1c000
   12540:	ldr	pc, [ip, #3060]!	; 0xbf4

00012544 <coda_cursor_read_int64@plt>:
   12544:	add	ip, pc, #0, 12
   12548:	add	ip, ip, #28, 20	; 0x1c000
   1254c:	ldr	pc, [ip, #3052]!	; 0xbec

00012550 <vfprintf@plt>:
   12550:	add	ip, pc, #0, 12
   12554:	add	ip, ip, #28, 20	; 0x1c000
   12558:	ldr	pc, [ip, #3044]!	; 0xbe4

0001255c <coda_cursor_goto@plt>:
   1255c:	add	ip, pc, #0, 12
   12560:	add	ip, ip, #28, 20	; 0x1c000
   12564:	ldr	pc, [ip, #3036]!	; 0xbdc

00012568 <coda_type_get_record_field_index_from_name@plt>:
   12568:	add	ip, pc, #0, 12
   1256c:	add	ip, ip, #28, 20	; 0x1c000
   12570:	ldr	pc, [ip, #3028]!	; 0xbd4

00012574 <coda_cursor_read_complex_double_pair@plt>:
   12574:	add	ip, pc, #0, 12
   12578:	add	ip, ip, #28, 20	; 0x1c000
   1257c:	ldr	pc, [ip, #3020]!	; 0xbcc

00012580 <coda_cursor_goto_next_record_field@plt>:
   12580:	add	ip, pc, #0, 12
   12584:	add	ip, ip, #28, 20	; 0x1c000
   12588:	ldr	pc, [ip, #3012]!	; 0xbc4

0001258c <fputc@plt>:
   1258c:	add	ip, pc, #0, 12
   12590:	add	ip, ip, #28, 20	; 0x1c000
   12594:	ldr	pc, [ip, #3004]!	; 0xbbc

00012598 <coda_type_get_array_dim@plt>:
   12598:	add	ip, pc, #0, 12
   1259c:	add	ip, ip, #28, 20	; 0x1c000
   125a0:	ldr	pc, [ip, #2996]!	; 0xbb4

000125a4 <coda_cursor_get_bit_size@plt>:
   125a4:	add	ip, pc, #0, 12
   125a8:	add	ip, ip, #28, 20	; 0x1c000
   125ac:	ldr	pc, [ip, #2988]!	; 0xbac

000125b0 <atoi@plt>:
   125b0:	add	ip, pc, #0, 12
   125b4:	add	ip, ip, #28, 20	; 0x1c000
   125b8:	ldr	pc, [ip, #2980]!	; 0xba4

000125bc <coda_errno_to_string@plt>:
   125bc:	add	ip, pc, #0, 12
   125c0:	add	ip, ip, #28, 20	; 0x1c000
   125c4:	ldr	pc, [ip, #2972]!	; 0xb9c

000125c8 <coda_cursor_use_base_type_of_special_type@plt>:
   125c8:	add	ip, pc, #0, 12
   125cc:	add	ip, ip, #28, 20	; 0x1c000
   125d0:	ldr	pc, [ip, #2964]!	; 0xb94

000125d4 <coda_cursor_get_available_union_field_index@plt>:
   125d4:	add	ip, pc, #0, 12
   125d8:	add	ip, ip, #28, 20	; 0x1c000
   125dc:	ldr	pc, [ip, #2956]!	; 0xb8c

000125e0 <coda_cursor_read_int32@plt>:
   125e0:	add	ip, pc, #0, 12
   125e4:	add	ip, ip, #28, 20	; 0x1c000
   125e8:	ldr	pc, [ip, #2948]!	; 0xb84

000125ec <coda_cursor_get_file_bit_offset@plt>:
   125ec:	add	ip, pc, #0, 12
   125f0:	add	ip, ip, #28, 20	; 0x1c000
   125f4:	ldr	pc, [ip, #2940]!	; 0xb7c

000125f8 <coda_get_libcoda_version@plt>:
   125f8:	add	ip, pc, #0, 12
   125fc:	add	ip, ip, #28, 20	; 0x1c000
   12600:	ldr	pc, [ip, #2932]!	; 0xb74

00012604 <coda_get_errno@plt>:
   12604:	add	ip, pc, #0, 12
   12608:	add	ip, ip, #28, 20	; 0x1c000
   1260c:	ldr	pc, [ip, #2924]!	; 0xb6c

00012610 <coda_type_get_special_base_type@plt>:
   12610:	add	ip, pc, #0, 12
   12614:	add	ip, ip, #28, 20	; 0x1c000
   12618:	ldr	pc, [ip, #2916]!	; 0xb64

0001261c <coda_type_get_record_field_name@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #28, 20	; 0x1c000
   12624:	ldr	pc, [ip, #2908]!	; 0xb5c

00012628 <fputs@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #28, 20	; 0x1c000
   12630:	ldr	pc, [ip, #2900]!	; 0xb54

00012634 <abort@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #28, 20	; 0x1c000
   1263c:	ldr	pc, [ip, #2892]!	; 0xb4c

00012640 <coda_cursor_read_bits@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #28, 20	; 0x1c000
   12648:	ldr	pc, [ip, #2884]!	; 0xb44

0001264c <coda_str64@plt>:
   1264c:	add	ip, pc, #0, 12
   12650:	add	ip, ip, #28, 20	; 0x1c000
   12654:	ldr	pc, [ip, #2876]!	; 0xb3c

00012658 <__assert_fail@plt>:
   12658:	add	ip, pc, #0, 12
   1265c:	add	ip, ip, #28, 20	; 0x1c000
   12660:	ldr	pc, [ip, #2868]!	; 0xb34

00012664 <coda_type_get_class@plt>:
   12664:	add	ip, pc, #0, 12
   12668:	add	ip, ip, #28, 20	; 0x1c000
   1266c:	ldr	pc, [ip, #2860]!	; 0xb2c

Disassembly of section .text:

00012670 <_start@@Base>:
   12670:	mov	fp, #0
   12674:	mov	lr, #0
   12678:	pop	{r1}		; (ldr r1, [sp], #4)
   1267c:	mov	r2, sp
   12680:	push	{r2}		; (str r2, [sp, #-4]!)
   12684:	push	{r0}		; (str r0, [sp, #-4]!)
   12688:	ldr	ip, [pc, #16]	; 126a0 <_start@@Base+0x30>
   1268c:	push	{ip}		; (str ip, [sp, #-4]!)
   12690:	ldr	r0, [pc, #12]	; 126a4 <_start@@Base+0x34>
   12694:	ldr	r3, [pc, #12]	; 126a8 <_start@@Base+0x38>
   12698:	bl	123d0 <__libc_start_main@plt>
   1269c:	bl	12634 <abort@plt>
   126a0:	andeq	ip, r1, r0, ror sl
   126a4:	ldrdeq	ip, [r1], -r4
   126a8:	andeq	ip, r1, r0, lsl sl
   126ac:	ldr	r3, [pc, #20]	; 126c8 <_start@@Base+0x58>
   126b0:	ldr	r2, [pc, #20]	; 126cc <_start@@Base+0x5c>
   126b4:	add	r3, pc, r3
   126b8:	ldr	r2, [r3, r2]
   126bc:	cmp	r2, #0
   126c0:	bxeq	lr
   126c4:	b	123dc <__gmon_start__@plt>
   126c8:	andeq	ip, r1, r4, asr #18
   126cc:	muleq	r0, ip, r1
   126d0:	ldr	r3, [pc, #28]	; 126f4 <_start@@Base+0x84>
   126d4:	ldr	r0, [pc, #28]	; 126f8 <_start@@Base+0x88>
   126d8:	sub	r3, r3, r0
   126dc:	cmp	r3, #6
   126e0:	bxls	lr
   126e4:	ldr	r3, [pc, #16]	; 126fc <_start@@Base+0x8c>
   126e8:	cmp	r3, #0
   126ec:	bxeq	lr
   126f0:	bx	r3
   126f4:			; <UNDEFINED> instruction: 0x0002f1b7
   126f8:			; <UNDEFINED> instruction: 0x0002f1b4
   126fc:	andeq	r0, r0, r0
   12700:	ldr	r1, [pc, #36]	; 1272c <_start@@Base+0xbc>
   12704:	ldr	r0, [pc, #36]	; 12730 <_start@@Base+0xc0>
   12708:	sub	r1, r1, r0
   1270c:	asr	r1, r1, #2
   12710:	add	r1, r1, r1, lsr #31
   12714:	asrs	r1, r1, #1
   12718:	bxeq	lr
   1271c:	ldr	r3, [pc, #16]	; 12734 <_start@@Base+0xc4>
   12720:	cmp	r3, #0
   12724:	bxeq	lr
   12728:	bx	r3
   1272c:			; <UNDEFINED> instruction: 0x0002f1b4
   12730:			; <UNDEFINED> instruction: 0x0002f1b4
   12734:	andeq	r0, r0, r0
   12738:	push	{r4, lr}
   1273c:	ldr	r4, [pc, #24]	; 1275c <_start@@Base+0xec>
   12740:	ldrb	r3, [r4]
   12744:	cmp	r3, #0
   12748:	popne	{r4, pc}
   1274c:	bl	126d0 <_start@@Base+0x60>
   12750:	mov	r3, #1
   12754:	strb	r3, [r4]
   12758:	pop	{r4, pc}
   1275c:	andeq	pc, r2, r0, asr #3
   12760:	ldr	r0, [pc, #40]	; 12790 <_start@@Base+0x120>
   12764:	ldr	r3, [r0]
   12768:	cmp	r3, #0
   1276c:	bne	12774 <_start@@Base+0x104>
   12770:	b	12700 <_start@@Base+0x90>
   12774:	ldr	r3, [pc, #24]	; 12794 <_start@@Base+0x124>
   12778:	cmp	r3, #0
   1277c:	beq	12770 <_start@@Base+0x100>
   12780:	push	{r4, lr}
   12784:	blx	r3
   12788:	pop	{r4, lr}
   1278c:	b	12700 <_start@@Base+0x90>
   12790:	strdeq	lr, [r2], -ip
   12794:	andeq	r0, r0, r0
   12798:	push	{fp, lr}
   1279c:	add	fp, sp, #4
   127a0:	sub	sp, sp, #24
   127a4:	str	r0, [fp, #-24]	; 0xffffffe8
   127a8:	mov	r3, #0
   127ac:	str	r3, [fp, #-8]
   127b0:	mov	r3, #0
   127b4:	str	r3, [fp, #-12]
   127b8:	b	12894 <_start@@Base+0x224>
   127bc:	ldr	r2, [pc, #240]	; 128b4 <_start@@Base+0x244>
   127c0:	ldr	r3, [fp, #-12]
   127c4:	add	r3, r3, #2
   127c8:	ldr	r3, [r2, r3, lsl #2]
   127cc:	sub	r2, fp, #20
   127d0:	mov	r1, r2
   127d4:	mov	r0, r3
   127d8:	bl	12664 <coda_type_get_class@plt>
   127dc:	mov	r3, r0
   127e0:	cmp	r3, #0
   127e4:	beq	127ec <_start@@Base+0x17c>
   127e8:	bl	1a55c <handle_coda_error@@Base>
   127ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   127f0:	cmp	r3, #1
   127f4:	bne	12888 <_start@@Base+0x218>
   127f8:	mov	r3, #0
   127fc:	str	r3, [fp, #-16]
   12800:	b	1284c <_start@@Base+0x1dc>
   12804:	ldr	r1, [pc, #168]	; 128b4 <_start@@Base+0x244>
   12808:	ldr	r2, [fp, #-8]
   1280c:	mov	r3, r2
   12810:	lsl	r3, r3, #2
   12814:	add	r3, r3, r2
   12818:	lsl	r3, r3, #2
   1281c:	ldr	r2, [fp, #-16]
   12820:	add	r3, r3, r2
   12824:	add	r3, r3, #212	; 0xd4
   12828:	ldr	r2, [r1, r3, lsl #2]
   1282c:	ldr	r3, [pc, #132]	; 128b8 <_start@@Base+0x248>
   12830:	ldr	r3, [r3]
   12834:	ldr	r1, [pc, #128]	; 128bc <_start@@Base+0x24c>
   12838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1283c:	bl	12454 <fprintf@plt>
   12840:	ldr	r3, [fp, #-16]
   12844:	add	r3, r3, #1
   12848:	str	r3, [fp, #-16]
   1284c:	ldr	r1, [pc, #96]	; 128b4 <_start@@Base+0x244>
   12850:	ldr	r2, [fp, #-8]
   12854:	mov	r3, r2
   12858:	lsl	r3, r3, #2
   1285c:	add	r3, r3, r2
   12860:	lsl	r3, r3, #4
   12864:	add	r3, r1, r3
   12868:	add	r3, r3, #804	; 0x324
   1286c:	ldr	r2, [r3]
   12870:	ldr	r3, [fp, #-16]
   12874:	cmp	r2, r3
   12878:	bgt	12804 <_start@@Base+0x194>
   1287c:	ldr	r3, [fp, #-8]
   12880:	add	r3, r3, #1
   12884:	str	r3, [fp, #-8]
   12888:	ldr	r3, [fp, #-12]
   1288c:	add	r3, r3, #1
   12890:	str	r3, [fp, #-12]
   12894:	ldr	r3, [pc, #24]	; 128b4 <_start@@Base+0x244>
   12898:	ldr	r2, [r3, #136]	; 0x88
   1289c:	ldr	r3, [fp, #-12]
   128a0:	cmp	r2, r3
   128a4:	bgt	127bc <_start@@Base+0x14c>
   128a8:	nop			; (mov r0, r0)
   128ac:	sub	sp, fp, #4
   128b0:	pop	{fp, pc}
   128b4:	strdeq	pc, [r2], -r0
   128b8:	muleq	r3, ip, r0
   128bc:	andeq	ip, r1, r0, lsl #21
   128c0:	push	{r4, r5, fp, lr}
   128c4:	add	fp, sp, #12
   128c8:	sub	sp, sp, #216	; 0xd8
   128cc:	str	r0, [fp, #-208]	; 0xffffff30
   128d0:	str	r1, [fp, #-212]	; 0xffffff2c
   128d4:	ldr	r3, [pc, #2028]	; 130c8 <_start@@Base+0xa58>
   128d8:	ldr	r3, [r3]
   128dc:	cmp	r3, #0
   128e0:	beq	128ec <_start@@Base+0x27c>
   128e4:	ldr	r0, [fp, #-208]	; 0xffffff30
   128e8:	bl	12798 <_start@@Base+0x128>
   128ec:	ldr	r2, [pc, #2008]	; 130cc <_start@@Base+0xa5c>
   128f0:	ldr	r3, [fp, #-212]	; 0xffffff2c
   128f4:	add	r3, r3, #2
   128f8:	ldr	r3, [r2, r3, lsl #2]
   128fc:	sub	r2, fp, #40	; 0x28
   12900:	mov	r1, r2
   12904:	mov	r0, r3
   12908:	bl	12664 <coda_type_get_class@plt>
   1290c:	mov	r3, r0
   12910:	cmp	r3, #0
   12914:	beq	1291c <_start@@Base+0x2ac>
   12918:	bl	1a55c <handle_coda_error@@Base>
   1291c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12920:	cmp	r3, #6
   12924:	ldrls	pc, [pc, r3, lsl #2]
   12928:	b	130b0 <_start@@Base+0xa40>
   1292c:	muleq	r1, r0, r0
   12930:	muleq	r1, r0, r0
   12934:	andeq	r2, r1, r8, asr #18
   12938:	andeq	r2, r1, r8, asr #18
   1293c:	andeq	r2, r1, r8, asr #18
   12940:	andeq	r2, r1, r8, asr #18
   12944:	ldrdeq	r2, [r1], -r0
   12948:	ldr	r2, [pc, #1916]	; 130cc <_start@@Base+0xa5c>
   1294c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   12950:	add	r3, r3, #2
   12954:	ldr	r3, [r2, r3, lsl #2]
   12958:	sub	r2, fp, #44	; 0x2c
   1295c:	mov	r1, r2
   12960:	mov	r0, r3
   12964:	bl	12418 <coda_type_get_read_type@plt>
   12968:	mov	r3, r0
   1296c:	cmp	r3, #0
   12970:	beq	12978 <_start@@Base+0x308>
   12974:	bl	1a55c <handle_coda_error@@Base>
   12978:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1297c:	add	r3, r3, #1
   12980:	cmp	r3, #13
   12984:	ldrls	pc, [pc, r3, lsl #2]
   12988:	b	130a4 <_start@@Base+0xa34>
   1298c:			; <UNDEFINED> instruction: 0x00012eb8
   12990:	andeq	r2, r1, ip, ror #26
   12994:	andeq	r2, r1, r4, lsr #27
   12998:	andeq	r2, r1, ip, ror #26
   1299c:	andeq	r2, r1, r4, lsr #27
   129a0:	andeq	r2, r1, ip, ror #26
   129a4:	andeq	r2, r1, r4, lsr #27
   129a8:	ldrdeq	r2, [r1], -ip
   129ac:	andeq	r2, r1, r0, lsr #28
   129b0:	andeq	r2, r1, r4, ror #28
   129b4:	andeq	r2, r1, r4, ror #28
   129b8:	andeq	r2, r1, r4, asr #19
   129bc:	andeq	r2, r1, r0, lsr #20
   129c0:	andeq	r2, r1, ip, ror #21
   129c4:	sub	r3, fp, #45	; 0x2d
   129c8:	mov	r1, r3
   129cc:	ldr	r0, [pc, #1788]	; 130d0 <_start@@Base+0xa60>
   129d0:	bl	1249c <coda_cursor_read_char@plt>
   129d4:	mov	r3, r0
   129d8:	cmp	r3, #0
   129dc:	beq	129e4 <_start@@Base+0x374>
   129e0:	bl	1a55c <handle_coda_error@@Base>
   129e4:	ldr	r3, [pc, #1768]	; 130d4 <_start@@Base+0xa64>
   129e8:	ldr	r3, [r3]
   129ec:	cmp	r3, #0
   129f0:	beq	12a0c <_start@@Base+0x39c>
   129f4:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   129f8:	mov	r2, r3
   129fc:	ldr	r1, [pc, #1748]	; 130d8 <_start@@Base+0xa68>
   12a00:	ldr	r0, [fp, #-208]	; 0xffffff30
   12a04:	bl	12454 <fprintf@plt>
   12a08:	b	12ecc <_start@@Base+0x85c>
   12a0c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12a10:	ldr	r1, [fp, #-208]	; 0xffffff30
   12a14:	mov	r0, r3
   12a18:	bl	1258c <fputc@plt>
   12a1c:	b	12ecc <_start@@Base+0x85c>
   12a20:	sub	r3, fp, #52	; 0x34
   12a24:	mov	r1, r3
   12a28:	ldr	r0, [pc, #1696]	; 130d0 <_start@@Base+0xa60>
   12a2c:	bl	12424 <coda_cursor_get_string_length@plt>
   12a30:	mov	r3, r0
   12a34:	cmp	r3, #0
   12a38:	beq	12a40 <_start@@Base+0x3d0>
   12a3c:	bl	1a55c <handle_coda_error@@Base>
   12a40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12a44:	add	r3, r3, #1
   12a48:	mov	r0, r3
   12a4c:	bl	123c4 <malloc@plt>
   12a50:	mov	r3, r0
   12a54:	str	r3, [fp, #-20]	; 0xffffffec
   12a58:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a5c:	cmp	r3, #0
   12a60:	bne	12a88 <_start@@Base+0x418>
   12a64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12a68:	add	r2, r3, #1
   12a6c:	mov	r3, #126	; 0x7e
   12a70:	str	r3, [sp]
   12a74:	ldr	r3, [pc, #1632]	; 130dc <_start@@Base+0xa6c>
   12a78:	ldr	r1, [pc, #1632]	; 130e0 <_start@@Base+0xa70>
   12a7c:	mvn	r0, #0
   12a80:	bl	12244 <coda_set_error@plt>
   12a84:	bl	1a55c <handle_coda_error@@Base>
   12a88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12a8c:	add	r3, r3, #1
   12a90:	mov	r2, r3
   12a94:	ldr	r1, [fp, #-20]	; 0xffffffec
   12a98:	ldr	r0, [pc, #1584]	; 130d0 <_start@@Base+0xa60>
   12a9c:	bl	123e8 <coda_cursor_read_string@plt>
   12aa0:	mov	r3, r0
   12aa4:	cmp	r3, #0
   12aa8:	beq	12ab0 <_start@@Base+0x440>
   12aac:	bl	1a55c <handle_coda_error@@Base>
   12ab0:	ldr	r3, [pc, #1564]	; 130d4 <_start@@Base+0xa64>
   12ab4:	ldr	r3, [r3]
   12ab8:	cmp	r3, #0
   12abc:	beq	12ad4 <_start@@Base+0x464>
   12ac0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12ac4:	ldr	r1, [pc, #1560]	; 130e4 <_start@@Base+0xa74>
   12ac8:	ldr	r0, [fp, #-208]	; 0xffffff30
   12acc:	bl	12454 <fprintf@plt>
   12ad0:	b	12ae0 <_start@@Base+0x470>
   12ad4:	ldr	r1, [fp, #-208]	; 0xffffff30
   12ad8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12adc:	bl	12628 <fputs@plt>
   12ae0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ae4:	bl	1228c <free@plt>
   12ae8:	b	12ecc <_start@@Base+0x85c>
   12aec:	sub	r3, fp, #60	; 0x3c
   12af0:	mov	r1, r3
   12af4:	ldr	r0, [pc, #1492]	; 130d0 <_start@@Base+0xa60>
   12af8:	bl	125a4 <coda_cursor_get_bit_size@plt>
   12afc:	mov	r3, r0
   12b00:	cmp	r3, #0
   12b04:	beq	12b0c <_start@@Base+0x49c>
   12b08:	bl	1a55c <handle_coda_error@@Base>
   12b0c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   12b10:	lsr	r4, r2, #3
   12b14:	orr	r4, r4, r3, lsl #29
   12b18:	asr	r5, r3, #3
   12b1c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   12b20:	mov	r0, #7
   12b24:	mov	r1, #0
   12b28:	and	r2, r2, r0
   12b2c:	and	r3, r3, r1
   12b30:	orrs	r3, r2, r3
   12b34:	beq	12b44 <_start@@Base+0x4d4>
   12b38:	mov	r2, #1
   12b3c:	mov	r3, #0
   12b40:	b	12b4c <_start@@Base+0x4dc>
   12b44:	mov	r2, #0
   12b48:	mov	r3, #0
   12b4c:	adds	r2, r2, r4
   12b50:	adc	r3, r3, r5
   12b54:	strd	r2, [fp, #-28]	; 0xffffffe4
   12b58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12b5c:	mov	r0, r3
   12b60:	bl	123c4 <malloc@plt>
   12b64:	mov	r3, r0
   12b68:	str	r3, [fp, #-32]	; 0xffffffe0
   12b6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12b70:	cmp	r3, #0
   12b74:	bne	12b98 <_start@@Base+0x528>
   12b78:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12b7c:	mov	r3, #163	; 0xa3
   12b80:	str	r3, [sp]
   12b84:	ldr	r3, [pc, #1360]	; 130dc <_start@@Base+0xa6c>
   12b88:	ldr	r1, [pc, #1360]	; 130e0 <_start@@Base+0xa70>
   12b8c:	mvn	r0, #0
   12b90:	bl	12244 <coda_set_error@plt>
   12b94:	bl	1a55c <handle_coda_error@@Base>
   12b98:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   12b9c:	strd	r2, [sp]
   12ba0:	mov	r2, #0
   12ba4:	mov	r3, #0
   12ba8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12bac:	ldr	r0, [pc, #1308]	; 130d0 <_start@@Base+0xa60>
   12bb0:	bl	12640 <coda_cursor_read_bits@plt>
   12bb4:	mov	r3, r0
   12bb8:	cmp	r3, #0
   12bbc:	beq	12bc4 <_start@@Base+0x554>
   12bc0:	bl	1a55c <handle_coda_error@@Base>
   12bc4:	mov	r3, #0
   12bc8:	str	r3, [fp, #-16]
   12bcc:	b	12d44 <_start@@Base+0x6d4>
   12bd0:	ldr	r3, [fp, #-16]
   12bd4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12bd8:	add	r3, r2, r3
   12bdc:	ldrb	r3, [r3]
   12be0:	strb	r3, [fp, #-33]	; 0xffffffdf
   12be4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12be8:	cmp	r3, #10
   12bec:	beq	12c80 <_start@@Base+0x610>
   12bf0:	cmp	r3, #10
   12bf4:	bgt	12c14 <_start@@Base+0x5a4>
   12bf8:	cmp	r3, #8
   12bfc:	beq	12c50 <_start@@Base+0x5e0>
   12c00:	cmp	r3, #8
   12c04:	bgt	12c68 <_start@@Base+0x5f8>
   12c08:	cmp	r3, #7
   12c0c:	beq	12c38 <_start@@Base+0x5c8>
   12c10:	b	12cf8 <_start@@Base+0x688>
   12c14:	cmp	r3, #12
   12c18:	beq	12cb0 <_start@@Base+0x640>
   12c1c:	cmp	r3, #12
   12c20:	blt	12c98 <_start@@Base+0x628>
   12c24:	cmp	r3, #13
   12c28:	beq	12cc8 <_start@@Base+0x658>
   12c2c:	cmp	r3, #92	; 0x5c
   12c30:	beq	12ce0 <_start@@Base+0x670>
   12c34:	b	12cf8 <_start@@Base+0x688>
   12c38:	ldr	r3, [fp, #-208]	; 0xffffff30
   12c3c:	mov	r2, #2
   12c40:	mov	r1, #1
   12c44:	ldr	r0, [pc, #1180]	; 130e8 <_start@@Base+0xa78>
   12c48:	bl	12370 <fwrite@plt>
   12c4c:	b	12d38 <_start@@Base+0x6c8>
   12c50:	ldr	r3, [fp, #-208]	; 0xffffff30
   12c54:	mov	r2, #2
   12c58:	mov	r1, #1
   12c5c:	ldr	r0, [pc, #1160]	; 130ec <_start@@Base+0xa7c>
   12c60:	bl	12370 <fwrite@plt>
   12c64:	b	12d38 <_start@@Base+0x6c8>
   12c68:	ldr	r3, [fp, #-208]	; 0xffffff30
   12c6c:	mov	r2, #2
   12c70:	mov	r1, #1
   12c74:	ldr	r0, [pc, #1140]	; 130f0 <_start@@Base+0xa80>
   12c78:	bl	12370 <fwrite@plt>
   12c7c:	b	12d38 <_start@@Base+0x6c8>
   12c80:	ldr	r3, [fp, #-208]	; 0xffffff30
   12c84:	mov	r2, #2
   12c88:	mov	r1, #1
   12c8c:	ldr	r0, [pc, #1120]	; 130f4 <_start@@Base+0xa84>
   12c90:	bl	12370 <fwrite@plt>
   12c94:	b	12d38 <_start@@Base+0x6c8>
   12c98:	ldr	r3, [fp, #-208]	; 0xffffff30
   12c9c:	mov	r2, #2
   12ca0:	mov	r1, #1
   12ca4:	ldr	r0, [pc, #1100]	; 130f8 <_start@@Base+0xa88>
   12ca8:	bl	12370 <fwrite@plt>
   12cac:	b	12d38 <_start@@Base+0x6c8>
   12cb0:	ldr	r3, [fp, #-208]	; 0xffffff30
   12cb4:	mov	r2, #2
   12cb8:	mov	r1, #1
   12cbc:	ldr	r0, [pc, #1080]	; 130fc <_start@@Base+0xa8c>
   12cc0:	bl	12370 <fwrite@plt>
   12cc4:	b	12d38 <_start@@Base+0x6c8>
   12cc8:	ldr	r3, [fp, #-208]	; 0xffffff30
   12ccc:	mov	r2, #2
   12cd0:	mov	r1, #1
   12cd4:	ldr	r0, [pc, #1060]	; 13100 <_start@@Base+0xa90>
   12cd8:	bl	12370 <fwrite@plt>
   12cdc:	b	12d38 <_start@@Base+0x6c8>
   12ce0:	ldr	r3, [fp, #-208]	; 0xffffff30
   12ce4:	mov	r2, #2
   12ce8:	mov	r1, #1
   12cec:	ldr	r0, [pc, #1040]	; 13104 <_start@@Base+0xa94>
   12cf0:	bl	12370 <fwrite@plt>
   12cf4:	b	12d38 <_start@@Base+0x6c8>
   12cf8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12cfc:	cmp	r3, #31
   12d00:	bls	12d24 <_start@@Base+0x6b4>
   12d04:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12d08:	cmp	r3, #126	; 0x7e
   12d0c:	bhi	12d24 <_start@@Base+0x6b4>
   12d10:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12d14:	ldr	r1, [fp, #-208]	; 0xffffff30
   12d18:	mov	r0, r3
   12d1c:	bl	1258c <fputc@plt>
   12d20:	b	12d38 <_start@@Base+0x6c8>
   12d24:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12d28:	mov	r2, r3
   12d2c:	ldr	r1, [pc, #980]	; 13108 <_start@@Base+0xa98>
   12d30:	ldr	r0, [fp, #-208]	; 0xffffff30
   12d34:	bl	12454 <fprintf@plt>
   12d38:	ldr	r3, [fp, #-16]
   12d3c:	add	r3, r3, #1
   12d40:	str	r3, [fp, #-16]
   12d44:	ldr	r3, [fp, #-16]
   12d48:	mov	r0, r3
   12d4c:	asr	r1, r0, #31
   12d50:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   12d54:	cmp	r0, r2
   12d58:	sbcs	r3, r1, r3
   12d5c:	blt	12bd0 <_start@@Base+0x560>
   12d60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d64:	bl	1228c <free@plt>
   12d68:	b	12ecc <_start@@Base+0x85c>
   12d6c:	sub	r3, fp, #64	; 0x40
   12d70:	mov	r1, r3
   12d74:	ldr	r0, [pc, #852]	; 130d0 <_start@@Base+0xa60>
   12d78:	bl	125e0 <coda_cursor_read_int32@plt>
   12d7c:	mov	r3, r0
   12d80:	cmp	r3, #0
   12d84:	beq	12d8c <_start@@Base+0x71c>
   12d88:	bl	1a55c <handle_coda_error@@Base>
   12d8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12d90:	mov	r2, r3
   12d94:	ldr	r1, [pc, #880]	; 1310c <_start@@Base+0xa9c>
   12d98:	ldr	r0, [fp, #-208]	; 0xffffff30
   12d9c:	bl	12454 <fprintf@plt>
   12da0:	b	12ecc <_start@@Base+0x85c>
   12da4:	sub	r3, fp, #68	; 0x44
   12da8:	mov	r1, r3
   12dac:	ldr	r0, [pc, #796]	; 130d0 <_start@@Base+0xa60>
   12db0:	bl	122b0 <coda_cursor_read_uint32@plt>
   12db4:	mov	r3, r0
   12db8:	cmp	r3, #0
   12dbc:	beq	12dc4 <_start@@Base+0x754>
   12dc0:	bl	1a55c <handle_coda_error@@Base>
   12dc4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12dc8:	mov	r2, r3
   12dcc:	ldr	r1, [pc, #828]	; 13110 <_start@@Base+0xaa0>
   12dd0:	ldr	r0, [fp, #-208]	; 0xffffff30
   12dd4:	bl	12454 <fprintf@plt>
   12dd8:	b	12ecc <_start@@Base+0x85c>
   12ddc:	sub	r3, fp, #76	; 0x4c
   12de0:	mov	r1, r3
   12de4:	ldr	r0, [pc, #740]	; 130d0 <_start@@Base+0xa60>
   12de8:	bl	12544 <coda_cursor_read_int64@plt>
   12dec:	mov	r3, r0
   12df0:	cmp	r3, #0
   12df4:	beq	12dfc <_start@@Base+0x78c>
   12df8:	bl	1a55c <handle_coda_error@@Base>
   12dfc:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   12e00:	sub	r3, fp, #100	; 0x64
   12e04:	mov	r2, r3
   12e08:	bl	1264c <coda_str64@plt>
   12e0c:	sub	r3, fp, #100	; 0x64
   12e10:	ldr	r1, [fp, #-208]	; 0xffffff30
   12e14:	mov	r0, r3
   12e18:	bl	12628 <fputs@plt>
   12e1c:	b	12ecc <_start@@Base+0x85c>
   12e20:	sub	r3, fp, #108	; 0x6c
   12e24:	mov	r1, r3
   12e28:	ldr	r0, [pc, #672]	; 130d0 <_start@@Base+0xa60>
   12e2c:	bl	12430 <coda_cursor_read_uint64@plt>
   12e30:	mov	r3, r0
   12e34:	cmp	r3, #0
   12e38:	beq	12e40 <_start@@Base+0x7d0>
   12e3c:	bl	1a55c <handle_coda_error@@Base>
   12e40:	ldrd	r0, [fp, #-108]	; 0xffffff94
   12e44:	sub	r3, fp, #132	; 0x84
   12e48:	mov	r2, r3
   12e4c:	bl	12280 <coda_str64u@plt>
   12e50:	sub	r3, fp, #132	; 0x84
   12e54:	ldr	r1, [fp, #-208]	; 0xffffff30
   12e58:	mov	r0, r3
   12e5c:	bl	12628 <fputs@plt>
   12e60:	b	12ecc <_start@@Base+0x85c>
   12e64:	sub	r3, fp, #140	; 0x8c
   12e68:	mov	r1, r3
   12e6c:	ldr	r0, [pc, #604]	; 130d0 <_start@@Base+0xa60>
   12e70:	bl	1243c <coda_cursor_read_double@plt>
   12e74:	mov	r3, r0
   12e78:	cmp	r3, #0
   12e7c:	beq	12e84 <_start@@Base+0x814>
   12e80:	bl	1a55c <handle_coda_error@@Base>
   12e84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12e88:	cmp	r3, #8
   12e8c:	bne	12ea4 <_start@@Base+0x834>
   12e90:	ldrd	r2, [fp, #-140]	; 0xffffff74
   12e94:	ldr	r1, [pc, #632]	; 13114 <_start@@Base+0xaa4>
   12e98:	ldr	r0, [fp, #-208]	; 0xffffff30
   12e9c:	bl	12454 <fprintf@plt>
   12ea0:	b	12ecc <_start@@Base+0x85c>
   12ea4:	ldrd	r2, [fp, #-140]	; 0xffffff74
   12ea8:	ldr	r1, [pc, #616]	; 13118 <_start@@Base+0xaa8>
   12eac:	ldr	r0, [fp, #-208]	; 0xffffff30
   12eb0:	bl	12454 <fprintf@plt>
   12eb4:	b	12ecc <_start@@Base+0x85c>
   12eb8:	ldr	r3, [pc, #604]	; 1311c <_start@@Base+0xaac>
   12ebc:	ldr	r2, [pc, #604]	; 13120 <_start@@Base+0xab0>
   12ec0:	ldr	r1, [pc, #532]	; 130dc <_start@@Base+0xa6c>
   12ec4:	ldr	r0, [pc, #600]	; 13124 <_start@@Base+0xab4>
   12ec8:	bl	12658 <__assert_fail@plt>
   12ecc:	b	130a4 <_start@@Base+0xa34>
   12ed0:	ldr	r2, [pc, #500]	; 130cc <_start@@Base+0xa5c>
   12ed4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   12ed8:	add	r3, r3, #2
   12edc:	ldr	r3, [r2, r3, lsl #2]
   12ee0:	sub	r2, fp, #144	; 0x90
   12ee4:	mov	r1, r2
   12ee8:	mov	r0, r3
   12eec:	bl	124cc <coda_type_get_special_type@plt>
   12ef0:	mov	r3, r0
   12ef4:	cmp	r3, #0
   12ef8:	beq	12f00 <_start@@Base+0x890>
   12efc:	bl	1a55c <handle_coda_error@@Base>
   12f00:	ldr	r3, [fp, #-144]	; 0xffffff70
   12f04:	cmp	r3, #3
   12f08:	ldrls	pc, [pc, r3, lsl #2]
   12f0c:	b	130ac <_start@@Base+0xa3c>
   12f10:	andeq	r3, r1, r8, lsl #1
   12f14:	andeq	r2, r1, r0, lsr #30
   12f18:	andeq	r2, r1, r0, lsr #30
   12f1c:	andeq	r3, r1, r8, lsr r0
   12f20:	sub	r3, fp, #156	; 0x9c
   12f24:	mov	r1, r3
   12f28:	ldr	r0, [pc, #416]	; 130d0 <_start@@Base+0xa60>
   12f2c:	bl	1243c <coda_cursor_read_double@plt>
   12f30:	mov	r3, r0
   12f34:	cmp	r3, #0
   12f38:	beq	12f40 <_start@@Base+0x8d0>
   12f3c:	bl	1a55c <handle_coda_error@@Base>
   12f40:	ldr	r3, [fp, #-144]	; 0xffffff70
   12f44:	cmp	r3, #2
   12f48:	bne	13020 <_start@@Base+0x9b0>
   12f4c:	ldr	r3, [pc, #468]	; 13128 <_start@@Base+0xab8>
   12f50:	ldr	r3, [r3]
   12f54:	cmp	r3, #0
   12f58:	beq	13020 <_start@@Base+0x9b0>
   12f5c:	vldr	d7, [fp, #-156]	; 0xffffff64
   12f60:	vmov.f64	d0, d7
   12f64:	bl	12448 <coda_isNaN@plt>
   12f68:	mov	r3, r0
   12f6c:	cmp	r3, #0
   12f70:	bne	12f8c <_start@@Base+0x91c>
   12f74:	vldr	d7, [fp, #-156]	; 0xffffff64
   12f78:	vmov.f64	d0, d7
   12f7c:	bl	122ec <coda_isInf@plt>
   12f80:	mov	r3, r0
   12f84:	cmp	r3, #0
   12f88:	beq	12fbc <_start@@Base+0x94c>
   12f8c:	ldr	r3, [pc, #408]	; 1312c <_start@@Base+0xabc>
   12f90:	sub	ip, fp, #184	; 0xb8
   12f94:	mov	lr, r3
   12f98:	ldm	lr!, {r0, r1, r2, r3}
   12f9c:	stmia	ip!, {r0, r1, r2, r3}
   12fa0:	ldm	lr, {r0, r1, r2}
   12fa4:	stmia	ip!, {r0, r1}
   12fa8:	strh	r2, [ip]
   12fac:	add	ip, ip, #2
   12fb0:	lsr	r3, r2, #16
   12fb4:	strb	r3, [ip]
   12fb8:	b	12fe4 <_start@@Base+0x974>
   12fbc:	vldr	d7, [fp, #-156]	; 0xffffff64
   12fc0:	sub	r3, fp, #184	; 0xb8
   12fc4:	mov	r1, r3
   12fc8:	ldr	r0, [pc, #352]	; 13130 <_start@@Base+0xac0>
   12fcc:	vmov.f64	d0, d7
   12fd0:	bl	12268 <coda_time_double_to_string@plt>
   12fd4:	mov	r3, r0
   12fd8:	cmp	r3, #0
   12fdc:	beq	12fe4 <_start@@Base+0x974>
   12fe0:	bl	1a55c <handle_coda_error@@Base>
   12fe4:	ldr	r3, [pc, #232]	; 130d4 <_start@@Base+0xa64>
   12fe8:	ldr	r3, [r3]
   12fec:	cmp	r3, #0
   12ff0:	beq	1300c <_start@@Base+0x99c>
   12ff4:	sub	r3, fp, #184	; 0xb8
   12ff8:	mov	r2, r3
   12ffc:	ldr	r1, [pc, #224]	; 130e4 <_start@@Base+0xa74>
   13000:	ldr	r0, [fp, #-208]	; 0xffffff30
   13004:	bl	12454 <fprintf@plt>
   13008:	b	13034 <_start@@Base+0x9c4>
   1300c:	sub	r3, fp, #184	; 0xb8
   13010:	ldr	r1, [fp, #-208]	; 0xffffff30
   13014:	mov	r0, r3
   13018:	bl	12628 <fputs@plt>
   1301c:	b	13034 <_start@@Base+0x9c4>
   13020:	ldrd	r2, [fp, #-156]	; 0xffffff64
   13024:	ldr	r1, [pc, #236]	; 13118 <_start@@Base+0xaa8>
   13028:	ldr	r0, [fp, #-208]	; 0xffffff30
   1302c:	bl	12454 <fprintf@plt>
   13030:	b	1308c <_start@@Base+0xa1c>
   13034:	b	1308c <_start@@Base+0xa1c>
   13038:	sub	r3, fp, #204	; 0xcc
   1303c:	mov	r1, r3
   13040:	ldr	r0, [pc, #136]	; 130d0 <_start@@Base+0xa60>
   13044:	bl	12574 <coda_cursor_read_complex_double_pair@plt>
   13048:	mov	r3, r0
   1304c:	cmp	r3, #0
   13050:	beq	13058 <_start@@Base+0x9e8>
   13054:	bl	1a55c <handle_coda_error@@Base>
   13058:	ldrd	r0, [fp, #-204]	; 0xffffff34
   1305c:	ldr	r3, [pc, #208]	; 13134 <_start@@Base+0xac4>
   13060:	ldr	ip, [r3]
   13064:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   13068:	strd	r2, [sp, #8]
   1306c:	str	ip, [sp]
   13070:	mov	r2, r0
   13074:	mov	r3, r1
   13078:	ldr	r1, [pc, #184]	; 13138 <_start@@Base+0xac8>
   1307c:	ldr	r0, [fp, #-208]	; 0xffffff30
   13080:	bl	12454 <fprintf@plt>
   13084:	b	1308c <_start@@Base+0xa1c>
   13088:	nop			; (mov r0, r0)
   1308c:	b	130ac <_start@@Base+0xa3c>
   13090:	ldr	r3, [pc, #132]	; 1311c <_start@@Base+0xaac>
   13094:	mov	r2, #368	; 0x170
   13098:	ldr	r1, [pc, #60]	; 130dc <_start@@Base+0xa6c>
   1309c:	ldr	r0, [pc, #128]	; 13124 <_start@@Base+0xab4>
   130a0:	bl	12658 <__assert_fail@plt>
   130a4:	nop			; (mov r0, r0)
   130a8:	b	130b0 <_start@@Base+0xa40>
   130ac:	nop			; (mov r0, r0)
   130b0:	ldr	r1, [fp, #-208]	; 0xffffff30
   130b4:	mov	r0, #10
   130b8:	bl	1258c <fputc@plt>
   130bc:	nop			; (mov r0, r0)
   130c0:	sub	sp, fp, #12
   130c4:	pop	{r4, r5, fp, pc}
   130c8:	andeq	r0, r3, r8, lsr #1
   130cc:	strdeq	pc, [r2], -r0
   130d0:	andeq	pc, r2, r0, lsl #5
   130d4:	andeq	r0, r3, ip, lsr #4
   130d8:	andeq	ip, r1, r8, lsl #21
   130dc:	muleq	r1, r0, sl
   130e0:	andeq	ip, r1, r4, ror #21
   130e4:	andeq	ip, r1, ip, lsl fp
   130e8:	andeq	ip, r1, r4, lsr #22
   130ec:	andeq	ip, r1, r8, lsr #22
   130f0:	andeq	ip, r1, ip, lsr #22
   130f4:	andeq	ip, r1, r0, lsr fp
   130f8:	andeq	ip, r1, r4, lsr fp
   130fc:	andeq	ip, r1, r8, lsr fp
   13100:	andeq	ip, r1, ip, lsr fp
   13104:	andeq	ip, r1, r0, asr #22
   13108:	andeq	ip, r1, r4, asr #22
   1310c:	andeq	ip, r1, ip, asr #22
   13110:	andeq	ip, r1, r0, asr fp
   13114:	andeq	ip, r1, r4, asr fp
   13118:	andeq	ip, r1, ip, asr fp
   1311c:	andeq	ip, r1, r8, lsr #23
   13120:	andeq	r0, r0, r6, lsr #2
   13124:	andeq	ip, r1, r4, ror #22
   13128:	andeq	pc, r2, r4, ror #3
   1312c:	andeq	ip, r1, r8, ror #22
   13130:	andeq	ip, r1, r4, lsl #23
   13134:	muleq	r3, ip, r0
   13138:	andeq	ip, r1, r0, lsr #23
   1313c:	push	{fp, lr}
   13140:	add	fp, sp, #4
   13144:	sub	sp, sp, #80	; 0x50
   13148:	str	r0, [fp, #-72]	; 0xffffffb8
   1314c:	str	r1, [fp, #-76]	; 0xffffffb4
   13150:	str	r2, [fp, #-80]	; 0xffffffb0
   13154:	str	r3, [fp, #-84]	; 0xffffffac
   13158:	ldr	r2, [pc, #1160]	; 135e8 <_start@@Base+0xf78>
   1315c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13160:	add	r3, r3, #2
   13164:	ldr	r3, [r2, r3, lsl #2]
   13168:	sub	r2, fp, #32
   1316c:	mov	r1, r2
   13170:	mov	r0, r3
   13174:	bl	12664 <coda_type_get_class@plt>
   13178:	mov	r3, r0
   1317c:	cmp	r3, #0
   13180:	beq	13188 <_start@@Base+0xb18>
   13184:	bl	1a55c <handle_coda_error@@Base>
   13188:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1318c:	cmp	r3, #0
   13190:	beq	13528 <_start@@Base+0xeb8>
   13194:	cmp	r3, #1
   13198:	bne	135c8 <_start@@Base+0xf58>
   1319c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   131a0:	mov	r3, r2
   131a4:	lsl	r3, r3, #2
   131a8:	add	r3, r3, r2
   131ac:	lsl	r3, r3, #4
   131b0:	add	r3, r3, #800	; 0x320
   131b4:	ldr	r2, [pc, #1068]	; 135e8 <_start@@Base+0xf78>
   131b8:	add	r3, r3, r2
   131bc:	str	r3, [fp, #-20]	; 0xffffffec
   131c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   131c4:	ldr	r3, [r3]
   131c8:	str	r3, [fp, #-24]	; 0xffffffe8
   131cc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   131d0:	cmp	r3, #0
   131d4:	bne	131e4 <_start@@Base+0xb74>
   131d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   131dc:	mov	r2, #0
   131e0:	str	r2, [r3, #44]	; 0x2c
   131e4:	ldr	r3, [pc, #1024]	; 135ec <_start@@Base+0xf7c>
   131e8:	ldr	r2, [r3, #104]	; 0x68
   131ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   131f0:	ldr	r1, [r3, #4]
   131f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   131f8:	add	r3, r1, r3
   131fc:	cmp	r2, r3
   13200:	movge	r3, #1
   13204:	movlt	r3, #0
   13208:	uxtb	r3, r3
   1320c:	str	r3, [fp, #-28]	; 0xffffffe4
   13210:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13214:	cmp	r3, #0
   13218:	beq	13270 <_start@@Base+0xc00>
   1321c:	ldr	r3, [pc, #964]	; 135e8 <_start@@Base+0xf78>
   13220:	ldr	r3, [r3, #3360]	; 0xd20
   13224:	sub	r2, r3, #1
   13228:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1322c:	cmp	r2, r3
   13230:	ble	13270 <_start@@Base+0xc00>
   13234:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13238:	add	r2, r3, #1
   1323c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13240:	ldr	r3, [r3, #44]	; 0x2c
   13244:	ldr	r1, [fp, #-20]	; 0xffffffec
   13248:	ldr	r1, [r1, #40]	; 0x28
   1324c:	mul	r1, r1, r3
   13250:	ldr	r0, [pc, #912]	; 135e8 <_start@@Base+0xf78>
   13254:	mov	r3, r2
   13258:	lsl	r3, r3, #2
   1325c:	add	r3, r3, r2
   13260:	lsl	r3, r3, #4
   13264:	add	r3, r0, r3
   13268:	add	r3, r3, #844	; 0x34c
   1326c:	str	r1, [r3]
   13270:	mov	r3, #1
   13274:	str	r3, [fp, #-8]
   13278:	mov	r3, #0
   1327c:	str	r3, [fp, #-12]
   13280:	b	13360 <_start@@Base+0xcf0>
   13284:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13288:	ldr	r3, [fp, #-12]
   1328c:	add	r3, r2, r3
   13290:	ldr	r2, [pc, #852]	; 135ec <_start@@Base+0xf7c>
   13294:	add	r3, r3, #18
   13298:	ldr	r3, [r2, r3, lsl #2]
   1329c:	cmp	r3, #0
   132a0:	beq	132f0 <_start@@Base+0xc80>
   132a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   132a8:	ldr	r3, [fp, #-12]
   132ac:	add	r3, r2, r3
   132b0:	ldr	r2, [pc, #820]	; 135ec <_start@@Base+0xf7c>
   132b4:	add	r3, r3, #26
   132b8:	lsl	r3, r3, #2
   132bc:	add	r3, r2, r3
   132c0:	ldr	r2, [r3, #4]
   132c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   132c8:	ldr	r3, [r3, #44]	; 0x2c
   132cc:	lsl	r3, r3, #2
   132d0:	add	r3, r2, r3
   132d4:	ldr	r2, [r3]
   132d8:	ldr	r3, [fp, #-12]
   132dc:	lsl	r3, r3, #2
   132e0:	sub	r1, fp, #4
   132e4:	add	r3, r1, r3
   132e8:	str	r2, [r3, #-64]	; 0xffffffc0
   132ec:	b	13320 <_start@@Base+0xcb0>
   132f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   132f4:	ldr	r3, [fp, #-12]
   132f8:	add	r3, r2, r3
   132fc:	ldr	r2, [pc, #744]	; 135ec <_start@@Base+0xf7c>
   13300:	lsl	r3, r3, #2
   13304:	add	r3, r2, r3
   13308:	ldr	r2, [r3, #4]
   1330c:	ldr	r3, [fp, #-12]
   13310:	lsl	r3, r3, #2
   13314:	sub	r1, fp, #4
   13318:	add	r3, r1, r3
   1331c:	str	r2, [r3, #-64]	; 0xffffffc0
   13320:	ldr	r3, [fp, #-12]
   13324:	lsl	r3, r3, #2
   13328:	sub	r2, fp, #4
   1332c:	add	r3, r2, r3
   13330:	ldr	r2, [r3, #-64]	; 0xffffffc0
   13334:	ldr	r3, [fp, #-8]
   13338:	mul	r3, r2, r3
   1333c:	str	r3, [fp, #-8]
   13340:	ldr	r3, [fp, #-20]	; 0xffffffec
   13344:	ldr	r2, [fp, #-12]
   13348:	add	r2, r2, #12
   1334c:	mov	r1, #0
   13350:	str	r1, [r3, r2, lsl #2]
   13354:	ldr	r3, [fp, #-12]
   13358:	add	r3, r3, #1
   1335c:	str	r3, [fp, #-12]
   13360:	ldr	r3, [fp, #-20]	; 0xffffffec
   13364:	ldr	r2, [r3, #4]
   13368:	ldr	r3, [fp, #-12]
   1336c:	cmp	r2, r3
   13370:	bgt	13284 <_start@@Base+0xc14>
   13374:	ldr	r3, [fp, #-8]
   13378:	cmp	r3, #0
   1337c:	beq	135e0 <_start@@Base+0xf70>
   13380:	ldr	r0, [pc, #616]	; 135f0 <_start@@Base+0xf80>
   13384:	bl	12364 <coda_cursor_goto_first_array_element@plt>
   13388:	mov	r3, r0
   1338c:	cmp	r3, #0
   13390:	beq	13398 <_start@@Base+0xd28>
   13394:	bl	1a55c <handle_coda_error@@Base>
   13398:	mov	r3, #0
   1339c:	str	r3, [fp, #-12]
   133a0:	b	1350c <_start@@Base+0xe9c>
   133a4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   133a8:	add	r1, r3, #1
   133ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   133b0:	add	r2, r3, #1
   133b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   133b8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   133bc:	bl	1313c <_start@@Base+0xacc>
   133c0:	ldr	r3, [fp, #-8]
   133c4:	sub	r2, r3, #1
   133c8:	ldr	r3, [fp, #-12]
   133cc:	cmp	r2, r3
   133d0:	ble	13500 <_start@@Base+0xe90>
   133d4:	ldr	r0, [pc, #532]	; 135f0 <_start@@Base+0xf80>
   133d8:	bl	12460 <coda_cursor_goto_next_array_element@plt>
   133dc:	mov	r3, r0
   133e0:	cmp	r3, #0
   133e4:	beq	133ec <_start@@Base+0xd7c>
   133e8:	bl	1a55c <handle_coda_error@@Base>
   133ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   133f0:	cmp	r3, #0
   133f4:	beq	1345c <_start@@Base+0xdec>
   133f8:	ldr	r3, [pc, #488]	; 135e8 <_start@@Base+0xf78>
   133fc:	ldr	r3, [r3, #3360]	; 0xd20
   13400:	sub	r2, r3, #1
   13404:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13408:	cmp	r2, r3
   1340c:	ble	1345c <_start@@Base+0xdec>
   13410:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13414:	add	r2, r3, #1
   13418:	ldr	r1, [pc, #456]	; 135e8 <_start@@Base+0xf78>
   1341c:	mov	r3, r2
   13420:	lsl	r3, r3, #2
   13424:	add	r3, r3, r2
   13428:	lsl	r3, r3, #4
   1342c:	add	r3, r1, r3
   13430:	add	r3, r3, #844	; 0x34c
   13434:	ldr	r3, [r3]
   13438:	add	r1, r3, #1
   1343c:	ldr	r0, [pc, #420]	; 135e8 <_start@@Base+0xf78>
   13440:	mov	r3, r2
   13444:	lsl	r3, r3, #2
   13448:	add	r3, r3, r2
   1344c:	lsl	r3, r3, #4
   13450:	add	r3, r0, r3
   13454:	add	r3, r3, #844	; 0x34c
   13458:	str	r1, [r3]
   1345c:	ldr	r3, [pc, #400]	; 135f4 <_start@@Base+0xf84>
   13460:	ldr	r3, [r3]
   13464:	cmp	r3, #0
   13468:	beq	13500 <_start@@Base+0xe90>
   1346c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13470:	ldr	r3, [r3, #4]
   13474:	sub	r3, r3, #1
   13478:	str	r3, [fp, #-16]
   1347c:	b	134ec <_start@@Base+0xe7c>
   13480:	ldr	r3, [fp, #-20]	; 0xffffffec
   13484:	ldr	r2, [fp, #-16]
   13488:	add	r2, r2, #12
   1348c:	ldr	r3, [r3, r2, lsl #2]
   13490:	add	r1, r3, #1
   13494:	ldr	r3, [fp, #-20]	; 0xffffffec
   13498:	ldr	r2, [fp, #-16]
   1349c:	add	r2, r2, #12
   134a0:	str	r1, [r3, r2, lsl #2]
   134a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   134a8:	ldr	r2, [fp, #-16]
   134ac:	add	r2, r2, #12
   134b0:	ldr	r2, [r3, r2, lsl #2]
   134b4:	ldr	r3, [fp, #-16]
   134b8:	lsl	r3, r3, #2
   134bc:	sub	r1, fp, #4
   134c0:	add	r3, r1, r3
   134c4:	ldr	r3, [r3, #-64]	; 0xffffffc0
   134c8:	cmp	r2, r3
   134cc:	bne	134fc <_start@@Base+0xe8c>
   134d0:	ldr	r3, [fp, #-16]
   134d4:	sub	r2, r3, #1
   134d8:	str	r2, [fp, #-16]
   134dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   134e0:	add	r3, r3, #12
   134e4:	mov	r1, #0
   134e8:	str	r1, [r2, r3, lsl #2]
   134ec:	ldr	r3, [fp, #-16]
   134f0:	cmp	r3, #0
   134f4:	bge	13480 <_start@@Base+0xe10>
   134f8:	b	13500 <_start@@Base+0xe90>
   134fc:	nop			; (mov r0, r0)
   13500:	ldr	r3, [fp, #-12]
   13504:	add	r3, r3, #1
   13508:	str	r3, [fp, #-12]
   1350c:	ldr	r2, [fp, #-12]
   13510:	ldr	r3, [fp, #-8]
   13514:	cmp	r2, r3
   13518:	blt	133a4 <_start@@Base+0xd34>
   1351c:	ldr	r0, [pc, #204]	; 135f0 <_start@@Base+0xf80>
   13520:	bl	123f4 <coda_cursor_goto_parent@plt>
   13524:	b	135e0 <_start@@Base+0xf70>
   13528:	ldr	r2, [pc, #184]	; 135e8 <_start@@Base+0xf78>
   1352c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13530:	add	r3, r3, #872	; 0x368
   13534:	lsl	r3, r3, #2
   13538:	add	r3, r2, r3
   1353c:	ldr	r3, [r3, #4]
   13540:	sub	r2, fp, #36	; 0x24
   13544:	mov	r1, r3
   13548:	ldr	r0, [pc, #160]	; 135f0 <_start@@Base+0xf80>
   1354c:	bl	1222c <coda_cursor_get_record_field_available_status@plt>
   13550:	mov	r3, r0
   13554:	cmp	r3, #0
   13558:	beq	13560 <_start@@Base+0xef0>
   1355c:	bl	1a55c <handle_coda_error@@Base>
   13560:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13564:	cmp	r3, #0
   13568:	beq	135dc <_start@@Base+0xf6c>
   1356c:	ldr	r2, [pc, #116]	; 135e8 <_start@@Base+0xf78>
   13570:	ldr	r3, [fp, #-84]	; 0xffffffac
   13574:	add	r3, r3, #872	; 0x368
   13578:	lsl	r3, r3, #2
   1357c:	add	r3, r2, r3
   13580:	ldr	r3, [r3, #4]
   13584:	mov	r1, r3
   13588:	ldr	r0, [pc, #96]	; 135f0 <_start@@Base+0xf80>
   1358c:	bl	12394 <coda_cursor_goto_record_field_by_index@plt>
   13590:	mov	r3, r0
   13594:	cmp	r3, #0
   13598:	beq	135a0 <_start@@Base+0xf30>
   1359c:	bl	1a55c <handle_coda_error@@Base>
   135a0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   135a4:	add	r1, r3, #1
   135a8:	ldr	r3, [fp, #-84]	; 0xffffffac
   135ac:	add	r3, r3, #1
   135b0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   135b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   135b8:	bl	1313c <_start@@Base+0xacc>
   135bc:	ldr	r0, [pc, #44]	; 135f0 <_start@@Base+0xf80>
   135c0:	bl	123f4 <coda_cursor_goto_parent@plt>
   135c4:	b	135dc <_start@@Base+0xf6c>
   135c8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   135cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   135d0:	bl	128c0 <_start@@Base+0x250>
   135d4:	nop			; (mov r0, r0)
   135d8:	b	135e0 <_start@@Base+0xf70>
   135dc:	nop			; (mov r0, r0)
   135e0:	sub	sp, fp, #4
   135e4:	pop	{fp, pc}
   135e8:	strdeq	pc, [r2], -r0
   135ec:	strheq	r0, [r3], -r8
   135f0:	andeq	pc, r2, r0, lsl #5
   135f4:	andeq	r0, r3, r8, lsr #1

000135f8 <export_data_element_to_ascii@@Base>:
   135f8:	push	{fp, lr}
   135fc:	add	fp, sp, #4
   13600:	ldr	r3, [pc, #196]	; 136cc <export_data_element_to_ascii@@Base+0xd4>
   13604:	ldr	r3, [r3]
   13608:	cmp	r3, #0
   1360c:	beq	13620 <export_data_element_to_ascii@@Base+0x28>
   13610:	ldr	r3, [pc, #180]	; 136cc <export_data_element_to_ascii@@Base+0xd4>
   13614:	mov	r2, #0
   13618:	str	r2, [r3]
   1361c:	b	13634 <export_data_element_to_ascii@@Base+0x3c>
   13620:	ldr	r3, [pc, #168]	; 136d0 <export_data_element_to_ascii@@Base+0xd8>
   13624:	ldr	r3, [r3]
   13628:	mov	r1, r3
   1362c:	mov	r0, #10
   13630:	bl	1258c <fputc@plt>
   13634:	ldr	r3, [pc, #152]	; 136d4 <export_data_element_to_ascii@@Base+0xdc>
   13638:	ldr	r3, [r3]
   1363c:	cmp	r3, #0
   13640:	beq	13670 <export_data_element_to_ascii@@Base+0x78>
   13644:	ldr	r3, [pc, #132]	; 136d0 <export_data_element_to_ascii@@Base+0xd8>
   13648:	ldr	r3, [r3]
   1364c:	mov	r2, #0
   13650:	mov	r1, #2
   13654:	mov	r0, r3
   13658:	bl	181a4 <print_full_field_name@@Base>
   1365c:	ldr	r3, [pc, #108]	; 136d0 <export_data_element_to_ascii@@Base+0xd8>
   13660:	ldr	r3, [r3]
   13664:	mov	r1, r3
   13668:	mov	r0, #10
   1366c:	bl	1258c <fputc@plt>
   13670:	ldr	r3, [pc, #96]	; 136d8 <export_data_element_to_ascii@@Base+0xe0>
   13674:	ldr	r3, [r3]
   13678:	cmp	r3, #0
   1367c:	ble	136a8 <export_data_element_to_ascii@@Base+0xb0>
   13680:	ldr	r3, [pc, #80]	; 136d8 <export_data_element_to_ascii@@Base+0xe0>
   13684:	ldr	r3, [r3]
   13688:	sub	r3, r3, #1
   1368c:	ldr	r2, [pc, #68]	; 136d8 <export_data_element_to_ascii@@Base+0xe0>
   13690:	add	r3, r3, #38	; 0x26
   13694:	lsl	r3, r3, #3
   13698:	add	r3, r2, r3
   1369c:	ldrd	r2, [r3]
   136a0:	orrs	r3, r2, r3
   136a4:	beq	136c4 <export_data_element_to_ascii@@Base+0xcc>
   136a8:	ldr	r3, [pc, #32]	; 136d0 <export_data_element_to_ascii@@Base+0xd8>
   136ac:	ldr	r0, [r3]
   136b0:	mov	r3, #0
   136b4:	mov	r2, #0
   136b8:	mov	r1, #0
   136bc:	bl	1313c <_start@@Base+0xacc>
   136c0:	b	136c8 <export_data_element_to_ascii@@Base+0xd0>
   136c4:	nop			; (mov r0, r0)
   136c8:	pop	{fp, pc}
   136cc:	andeq	pc, r2, r8, lsr #3
   136d0:	muleq	r3, r8, r0
   136d4:	andeq	r0, r3, r8, lsr #4
   136d8:	strheq	r0, [r3], -r8
   136dc:	push	{fp, lr}
   136e0:	add	fp, sp, #4
   136e4:	sub	sp, sp, #8
   136e8:	ldr	r3, [pc, #104]	; 13758 <export_data_element_to_ascii@@Base+0x160>
   136ec:	ldr	r3, [r3]
   136f0:	cmp	r3, #0
   136f4:	bge	1370c <export_data_element_to_ascii@@Base+0x114>
   136f8:	ldr	r3, [pc, #92]	; 1375c <export_data_element_to_ascii@@Base+0x164>
   136fc:	mov	r2, #44	; 0x2c
   13700:	ldr	r1, [pc, #88]	; 13760 <export_data_element_to_ascii@@Base+0x168>
   13704:	ldr	r0, [pc, #88]	; 13764 <export_data_element_to_ascii@@Base+0x16c>
   13708:	bl	12658 <__assert_fail@plt>
   1370c:	ldr	r3, [pc, #68]	; 13758 <export_data_element_to_ascii@@Base+0x160>
   13710:	ldr	r3, [r3]
   13714:	str	r3, [fp, #-8]
   13718:	b	13740 <export_data_element_to_ascii@@Base+0x148>
   1371c:	ldr	r3, [pc, #68]	; 13768 <export_data_element_to_ascii@@Base+0x170>
   13720:	ldr	r3, [r3]
   13724:	mov	r2, #2
   13728:	mov	r1, #1
   1372c:	ldr	r0, [pc, #56]	; 1376c <export_data_element_to_ascii@@Base+0x174>
   13730:	bl	12370 <fwrite@plt>
   13734:	ldr	r3, [fp, #-8]
   13738:	sub	r3, r3, #1
   1373c:	str	r3, [fp, #-8]
   13740:	ldr	r3, [fp, #-8]
   13744:	cmp	r3, #0
   13748:	bgt	1371c <export_data_element_to_ascii@@Base+0x124>
   1374c:	nop			; (mov r0, r0)
   13750:	sub	sp, fp, #4
   13754:	pop	{fp, pc}
   13758:	andeq	pc, r2, r4, asr #3
   1375c:	andeq	ip, r1, ip, ror sp
   13760:			; <UNDEFINED> instruction: 0x0001cbbc
   13764:	andeq	ip, r1, r0, lsl ip
   13768:	muleq	r3, r8, r0
   1376c:	andeq	ip, r1, ip, lsl ip
   13770:	push	{r0, r1, r2, r3}
   13774:	push	{fp, lr}
   13778:	add	fp, sp, #4
   1377c:	sub	sp, sp, #8
   13780:	add	r3, fp, #8
   13784:	str	r3, [fp, #-12]
   13788:	ldr	r3, [pc, #44]	; 137bc <export_data_element_to_ascii@@Base+0x1c4>
   1378c:	ldr	r3, [r3]
   13790:	ldr	r2, [fp, #-12]
   13794:	ldr	r1, [fp, #4]
   13798:	mov	r0, r3
   1379c:	bl	12550 <vfprintf@plt>
   137a0:	str	r0, [fp, #-8]
   137a4:	ldr	r3, [fp, #-8]
   137a8:	mov	r0, r3
   137ac:	sub	sp, fp, #4
   137b0:	pop	{fp, lr}
   137b4:	add	sp, sp, #16
   137b8:	bx	lr
   137bc:	muleq	r3, r8, r0
   137c0:	push	{r0, r1, r2, r3}
   137c4:	push	{fp, lr}
   137c8:	add	fp, sp, #4
   137cc:	sub	sp, sp, #8
   137d0:	bl	136dc <export_data_element_to_ascii@@Base+0xe4>
   137d4:	add	r3, fp, #8
   137d8:	str	r3, [fp, #-12]
   137dc:	ldr	r3, [pc, #44]	; 13810 <export_data_element_to_ascii@@Base+0x218>
   137e0:	ldr	r3, [r3]
   137e4:	ldr	r2, [fp, #-12]
   137e8:	ldr	r1, [fp, #4]
   137ec:	mov	r0, r3
   137f0:	bl	12550 <vfprintf@plt>
   137f4:	str	r0, [fp, #-8]
   137f8:	ldr	r3, [fp, #-8]
   137fc:	mov	r0, r3
   13800:	sub	sp, fp, #4
   13804:	pop	{fp, lr}
   13808:	add	sp, sp, #16
   1380c:	bx	lr
   13810:	muleq	r3, r8, r0
   13814:	push	{fp, lr}
   13818:	add	fp, sp, #4
   1381c:	sub	sp, sp, #16
   13820:	str	r0, [fp, #-16]
   13824:	str	r1, [fp, #-20]	; 0xffffffec
   13828:	mov	r3, #0
   1382c:	str	r3, [fp, #-8]
   13830:	b	13944 <export_data_element_to_ascii@@Base+0x34c>
   13834:	ldr	r3, [fp, #-8]
   13838:	ldr	r2, [fp, #-16]
   1383c:	add	r3, r2, r3
   13840:	ldrb	r3, [r3]
   13844:	strb	r3, [fp, #-9]
   13848:	ldrb	r3, [fp, #-9]
   1384c:	cmp	r3, #10
   13850:	beq	138c0 <export_data_element_to_ascii@@Base+0x2c8>
   13854:	cmp	r3, #10
   13858:	bgt	13878 <export_data_element_to_ascii@@Base+0x280>
   1385c:	cmp	r3, #8
   13860:	beq	138a8 <export_data_element_to_ascii@@Base+0x2b0>
   13864:	cmp	r3, #8
   13868:	bgt	138b4 <export_data_element_to_ascii@@Base+0x2bc>
   1386c:	cmp	r3, #7
   13870:	beq	1389c <export_data_element_to_ascii@@Base+0x2a4>
   13874:	b	138fc <export_data_element_to_ascii@@Base+0x304>
   13878:	cmp	r3, #12
   1387c:	beq	138d8 <export_data_element_to_ascii@@Base+0x2e0>
   13880:	cmp	r3, #12
   13884:	blt	138cc <export_data_element_to_ascii@@Base+0x2d4>
   13888:	cmp	r3, #13
   1388c:	beq	138e4 <export_data_element_to_ascii@@Base+0x2ec>
   13890:	cmp	r3, #92	; 0x5c
   13894:	beq	138f0 <export_data_element_to_ascii@@Base+0x2f8>
   13898:	b	138fc <export_data_element_to_ascii@@Base+0x304>
   1389c:	ldr	r0, [pc, #188]	; 13960 <export_data_element_to_ascii@@Base+0x368>
   138a0:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   138a4:	b	13938 <export_data_element_to_ascii@@Base+0x340>
   138a8:	ldr	r0, [pc, #180]	; 13964 <export_data_element_to_ascii@@Base+0x36c>
   138ac:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   138b0:	b	13938 <export_data_element_to_ascii@@Base+0x340>
   138b4:	ldr	r0, [pc, #172]	; 13968 <export_data_element_to_ascii@@Base+0x370>
   138b8:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   138bc:	b	13938 <export_data_element_to_ascii@@Base+0x340>
   138c0:	ldr	r0, [pc, #164]	; 1396c <export_data_element_to_ascii@@Base+0x374>
   138c4:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   138c8:	b	13938 <export_data_element_to_ascii@@Base+0x340>
   138cc:	ldr	r0, [pc, #156]	; 13970 <export_data_element_to_ascii@@Base+0x378>
   138d0:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   138d4:	b	13938 <export_data_element_to_ascii@@Base+0x340>
   138d8:	ldr	r0, [pc, #148]	; 13974 <export_data_element_to_ascii@@Base+0x37c>
   138dc:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   138e0:	b	13938 <export_data_element_to_ascii@@Base+0x340>
   138e4:	ldr	r0, [pc, #140]	; 13978 <export_data_element_to_ascii@@Base+0x380>
   138e8:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   138ec:	b	13938 <export_data_element_to_ascii@@Base+0x340>
   138f0:	ldr	r0, [pc, #132]	; 1397c <export_data_element_to_ascii@@Base+0x384>
   138f4:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   138f8:	b	13938 <export_data_element_to_ascii@@Base+0x340>
   138fc:	ldrb	r3, [fp, #-9]
   13900:	cmp	r3, #31
   13904:	bls	13928 <export_data_element_to_ascii@@Base+0x330>
   13908:	ldrb	r3, [fp, #-9]
   1390c:	cmp	r3, #126	; 0x7e
   13910:	bhi	13928 <export_data_element_to_ascii@@Base+0x330>
   13914:	ldrb	r3, [fp, #-9]
   13918:	mov	r1, r3
   1391c:	ldr	r0, [pc, #92]	; 13980 <export_data_element_to_ascii@@Base+0x388>
   13920:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   13924:	b	13938 <export_data_element_to_ascii@@Base+0x340>
   13928:	ldrb	r3, [fp, #-9]
   1392c:	mov	r1, r3
   13930:	ldr	r0, [pc, #76]	; 13984 <export_data_element_to_ascii@@Base+0x38c>
   13934:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   13938:	ldr	r3, [fp, #-8]
   1393c:	add	r3, r3, #1
   13940:	str	r3, [fp, #-8]
   13944:	ldr	r2, [fp, #-8]
   13948:	ldr	r3, [fp, #-20]	; 0xffffffec
   1394c:	cmp	r2, r3
   13950:	blt	13834 <export_data_element_to_ascii@@Base+0x23c>
   13954:	nop			; (mov r0, r0)
   13958:	sub	sp, fp, #4
   1395c:	pop	{fp, pc}
   13960:	andeq	ip, r1, r0, lsr #24
   13964:	andeq	ip, r1, r4, lsr #24
   13968:	andeq	ip, r1, r8, lsr #24
   1396c:	andeq	ip, r1, ip, lsr #24
   13970:	andeq	ip, r1, r0, lsr ip
   13974:	andeq	ip, r1, r4, lsr ip
   13978:	andeq	ip, r1, r8, lsr ip
   1397c:	andeq	ip, r1, ip, lsr ip
   13980:	andeq	ip, r1, r0, asr #24
   13984:	andeq	ip, r1, r4, asr #24
   13988:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1398c:	add	fp, sp, #28
   13990:	sub	sp, sp, #952	; 0x3b8
   13994:	str	r0, [fp, #-952]	; 0xfffffc48
   13998:	str	r1, [fp, #-956]	; 0xfffffc44
   1399c:	sub	r3, fp, #64	; 0x40
   139a0:	mov	r1, r3
   139a4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   139a8:	bl	12310 <coda_cursor_has_attributes@plt>
   139ac:	mov	r3, r0
   139b0:	cmp	r3, #0
   139b4:	beq	139bc <export_data_element_to_ascii@@Base+0x3c4>
   139b8:	bl	1a55c <handle_coda_error@@Base>
   139bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   139c0:	cmp	r3, #0
   139c4:	beq	13a24 <export_data_element_to_ascii@@Base+0x42c>
   139c8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   139cc:	bl	12490 <coda_cursor_goto_attributes@plt>
   139d0:	mov	r3, r0
   139d4:	cmp	r3, #0
   139d8:	beq	139e0 <export_data_element_to_ascii@@Base+0x3e8>
   139dc:	bl	1a55c <handle_coda_error@@Base>
   139e0:	ldr	r0, [pc, #3616]	; 14808 <export_data_element_to_ascii@@Base+0x1210>
   139e4:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   139e8:	ldr	r3, [pc, #3612]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   139ec:	ldr	r3, [r3]
   139f0:	add	r3, r3, #1
   139f4:	ldr	r2, [pc, #3600]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   139f8:	str	r3, [r2]
   139fc:	ldr	r1, [fp, #-956]	; 0xfffffc44
   13a00:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13a04:	bl	13988 <export_data_element_to_ascii@@Base+0x390>
   13a08:	ldr	r3, [pc, #3580]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   13a0c:	ldr	r3, [r3]
   13a10:	sub	r3, r3, #1
   13a14:	ldr	r2, [pc, #3568]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   13a18:	str	r3, [r2]
   13a1c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13a20:	bl	123f4 <coda_cursor_goto_parent@plt>
   13a24:	sub	r3, fp, #60	; 0x3c
   13a28:	mov	r1, r3
   13a2c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13a30:	bl	1231c <coda_cursor_get_type_class@plt>
   13a34:	mov	r3, r0
   13a38:	cmp	r3, #0
   13a3c:	beq	13a44 <export_data_element_to_ascii@@Base+0x44c>
   13a40:	bl	1a55c <handle_coda_error@@Base>
   13a44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13a48:	cmp	r3, #6
   13a4c:	ldrls	pc, [pc, r3, lsl #2]
   13a50:	b	147fc <export_data_element_to_ascii@@Base+0x1204>
   13a54:	andeq	r3, r1, r0, ror sl
   13a58:	andeq	r3, r1, r0, ror lr
   13a5c:			; <UNDEFINED> instruction: 0x000141bc
   13a60:			; <UNDEFINED> instruction: 0x000141bc
   13a64:			; <UNDEFINED> instruction: 0x000141bc
   13a68:			; <UNDEFINED> instruction: 0x000141bc
   13a6c:	strdeq	r4, [r1], -ip
   13a70:	sub	r3, fp, #68	; 0x44
   13a74:	mov	r1, r3
   13a78:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13a7c:	bl	12274 <coda_cursor_get_num_elements@plt>
   13a80:	mov	r3, r0
   13a84:	cmp	r3, #0
   13a88:	beq	13a90 <export_data_element_to_ascii@@Base+0x498>
   13a8c:	bl	1a55c <handle_coda_error@@Base>
   13a90:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13a94:	cmp	r3, #0
   13a98:	ble	147e0 <export_data_element_to_ascii@@Base+0x11e8>
   13a9c:	sub	r3, fp, #72	; 0x48
   13aa0:	mov	r1, r3
   13aa4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13aa8:	bl	122d4 <coda_cursor_get_type@plt>
   13aac:	mov	r3, r0
   13ab0:	cmp	r3, #0
   13ab4:	beq	13abc <export_data_element_to_ascii@@Base+0x4c4>
   13ab8:	bl	1a55c <handle_coda_error@@Base>
   13abc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13ac0:	sub	r2, fp, #76	; 0x4c
   13ac4:	mov	r1, r2
   13ac8:	mov	r0, r3
   13acc:	bl	124d8 <coda_type_get_record_union_status@plt>
   13ad0:	mov	r3, r0
   13ad4:	cmp	r3, #0
   13ad8:	beq	13ae0 <export_data_element_to_ascii@@Base+0x4e8>
   13adc:	bl	1a55c <handle_coda_error@@Base>
   13ae0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13ae4:	cmp	r3, #0
   13ae8:	beq	13c98 <export_data_element_to_ascii@@Base+0x6a0>
   13aec:	sub	r3, fp, #80	; 0x50
   13af0:	mov	r1, r3
   13af4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13af8:	bl	125d4 <coda_cursor_get_available_union_field_index@plt>
   13afc:	mov	r3, r0
   13b00:	cmp	r3, #0
   13b04:	beq	13b0c <export_data_element_to_ascii@@Base+0x514>
   13b08:	bl	1a55c <handle_coda_error@@Base>
   13b0c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13b10:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13b14:	sub	r2, fp, #84	; 0x54
   13b18:	mov	r0, r3
   13b1c:	bl	1261c <coda_type_get_record_field_name@plt>
   13b20:	mov	r3, r0
   13b24:	cmp	r3, #0
   13b28:	beq	13b30 <export_data_element_to_ascii@@Base+0x538>
   13b2c:	bl	1a55c <handle_coda_error@@Base>
   13b30:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13b34:	mov	r1, r3
   13b38:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13b3c:	bl	12394 <coda_cursor_goto_record_field_by_index@plt>
   13b40:	mov	r3, r0
   13b44:	cmp	r3, #0
   13b48:	beq	13b50 <export_data_element_to_ascii@@Base+0x558>
   13b4c:	bl	1a55c <handle_coda_error@@Base>
   13b50:	ldr	r3, [fp, #-84]	; 0xffffffac
   13b54:	mov	r1, r3
   13b58:	ldr	r0, [pc, #3248]	; 14810 <export_data_element_to_ascii@@Base+0x1218>
   13b5c:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   13b60:	ldr	r3, [pc, #3244]	; 14814 <export_data_element_to_ascii@@Base+0x121c>
   13b64:	ldr	r3, [r3]
   13b68:	cmp	r3, #0
   13b6c:	beq	13c18 <export_data_element_to_ascii@@Base+0x620>
   13b70:	sub	r3, fp, #92	; 0x5c
   13b74:	mov	r1, r3
   13b78:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13b7c:	bl	125ec <coda_cursor_get_file_bit_offset@plt>
   13b80:	mov	r3, r0
   13b84:	cmp	r3, #0
   13b88:	beq	13b90 <export_data_element_to_ascii@@Base+0x598>
   13b8c:	bl	1a55c <handle_coda_error@@Base>
   13b90:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13b94:	cmp	r2, #0
   13b98:	sbcs	r3, r3, #0
   13b9c:	blt	13c18 <export_data_element_to_ascii@@Base+0x620>
   13ba0:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13ba4:	lsr	r1, r2, #3
   13ba8:	str	r1, [fp, #-964]	; 0xfffffc3c
   13bac:	ldr	r1, [fp, #-964]	; 0xfffffc3c
   13bb0:	orr	r1, r1, r3, lsl #29
   13bb4:	str	r1, [fp, #-964]	; 0xfffffc3c
   13bb8:	asr	r3, r3, #3
   13bbc:	str	r3, [fp, #-960]	; 0xfffffc40
   13bc0:	sub	r3, fp, #116	; 0x74
   13bc4:	mov	r2, r3
   13bc8:	sub	r3, fp, #964	; 0x3c4
   13bcc:	ldrd	r0, [r3]
   13bd0:	bl	1264c <coda_str64@plt>
   13bd4:	sub	r3, fp, #116	; 0x74
   13bd8:	mov	r1, r3
   13bdc:	ldr	r0, [pc, #3124]	; 14818 <export_data_element_to_ascii@@Base+0x1220>
   13be0:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   13be4:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13be8:	mov	r0, #7
   13bec:	mov	r1, #0
   13bf0:	and	r2, r2, r0
   13bf4:	and	r3, r3, r1
   13bf8:	orrs	r3, r2, r3
   13bfc:	beq	13c18 <export_data_element_to_ascii@@Base+0x620>
   13c00:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13c04:	mov	r3, r2
   13c08:	and	r3, r3, #7
   13c0c:	mov	r1, r3
   13c10:	ldr	r0, [pc, #3076]	; 1481c <export_data_element_to_ascii@@Base+0x1224>
   13c14:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   13c18:	ldr	r0, [pc, #3072]	; 14820 <export_data_element_to_ascii@@Base+0x1228>
   13c1c:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   13c20:	ldr	r3, [pc, #3044]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   13c24:	ldr	r3, [r3]
   13c28:	add	r3, r3, #1
   13c2c:	ldr	r2, [pc, #3032]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   13c30:	str	r3, [r2]
   13c34:	ldr	r3, [pc, #3048]	; 14824 <export_data_element_to_ascii@@Base+0x122c>
   13c38:	ldr	r3, [r3]
   13c3c:	cmp	r3, #0
   13c40:	blt	13c58 <export_data_element_to_ascii@@Base+0x660>
   13c44:	ldr	r3, [pc, #3032]	; 14824 <export_data_element_to_ascii@@Base+0x122c>
   13c48:	ldr	r3, [r3]
   13c4c:	ldr	r2, [fp, #-956]	; 0xfffffc44
   13c50:	cmp	r2, r3
   13c54:	bge	13c70 <export_data_element_to_ascii@@Base+0x678>
   13c58:	ldr	r3, [fp, #-956]	; 0xfffffc44
   13c5c:	add	r3, r3, #1
   13c60:	mov	r1, r3
   13c64:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13c68:	bl	13988 <export_data_element_to_ascii@@Base+0x390>
   13c6c:	b	13c78 <export_data_element_to_ascii@@Base+0x680>
   13c70:	ldr	r0, [pc, #2992]	; 14828 <export_data_element_to_ascii@@Base+0x1230>
   13c74:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   13c78:	ldr	r3, [pc, #2956]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   13c7c:	ldr	r3, [r3]
   13c80:	sub	r3, r3, #1
   13c84:	ldr	r2, [pc, #2944]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   13c88:	str	r3, [r2]
   13c8c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13c90:	bl	123f4 <coda_cursor_goto_parent@plt>
   13c94:	b	147e0 <export_data_element_to_ascii@@Base+0x11e8>
   13c98:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13c9c:	bl	12388 <coda_cursor_goto_first_record_field@plt>
   13ca0:	mov	r3, r0
   13ca4:	cmp	r3, #0
   13ca8:	beq	13cb0 <export_data_element_to_ascii@@Base+0x6b8>
   13cac:	bl	1a55c <handle_coda_error@@Base>
   13cb0:	mov	r3, #0
   13cb4:	str	r3, [fp, #-80]	; 0xffffffb0
   13cb8:	b	13e54 <export_data_element_to_ascii@@Base+0x85c>
   13cbc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13cc0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13cc4:	sub	r2, fp, #120	; 0x78
   13cc8:	mov	r0, r3
   13ccc:	bl	1261c <coda_type_get_record_field_name@plt>
   13cd0:	mov	r3, r0
   13cd4:	cmp	r3, #0
   13cd8:	beq	13ce0 <export_data_element_to_ascii@@Base+0x6e8>
   13cdc:	bl	1a55c <handle_coda_error@@Base>
   13ce0:	ldr	r3, [fp, #-120]	; 0xffffff88
   13ce4:	mov	r1, r3
   13ce8:	ldr	r0, [pc, #2848]	; 14810 <export_data_element_to_ascii@@Base+0x1218>
   13cec:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   13cf0:	ldr	r3, [pc, #2844]	; 14814 <export_data_element_to_ascii@@Base+0x121c>
   13cf4:	ldr	r3, [r3]
   13cf8:	cmp	r3, #0
   13cfc:	beq	13da8 <export_data_element_to_ascii@@Base+0x7b0>
   13d00:	sub	r3, fp, #132	; 0x84
   13d04:	mov	r1, r3
   13d08:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13d0c:	bl	125ec <coda_cursor_get_file_bit_offset@plt>
   13d10:	mov	r3, r0
   13d14:	cmp	r3, #0
   13d18:	beq	13d20 <export_data_element_to_ascii@@Base+0x728>
   13d1c:	bl	1a55c <handle_coda_error@@Base>
   13d20:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   13d24:	cmp	r2, #0
   13d28:	sbcs	r3, r3, #0
   13d2c:	blt	13da8 <export_data_element_to_ascii@@Base+0x7b0>
   13d30:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   13d34:	lsr	r1, r2, #3
   13d38:	str	r1, [fp, #-972]	; 0xfffffc34
   13d3c:	ldr	r1, [fp, #-972]	; 0xfffffc34
   13d40:	orr	r1, r1, r3, lsl #29
   13d44:	str	r1, [fp, #-972]	; 0xfffffc34
   13d48:	asr	r3, r3, #3
   13d4c:	str	r3, [fp, #-968]	; 0xfffffc38
   13d50:	sub	r3, fp, #156	; 0x9c
   13d54:	mov	r2, r3
   13d58:	sub	r3, fp, #972	; 0x3cc
   13d5c:	ldrd	r0, [r3]
   13d60:	bl	1264c <coda_str64@plt>
   13d64:	sub	r3, fp, #156	; 0x9c
   13d68:	mov	r1, r3
   13d6c:	ldr	r0, [pc, #2724]	; 14818 <export_data_element_to_ascii@@Base+0x1220>
   13d70:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   13d74:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   13d78:	mov	r0, #7
   13d7c:	mov	r1, #0
   13d80:	and	r2, r2, r0
   13d84:	and	r3, r3, r1
   13d88:	orrs	r3, r2, r3
   13d8c:	beq	13da8 <export_data_element_to_ascii@@Base+0x7b0>
   13d90:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   13d94:	mov	r3, r2
   13d98:	and	r3, r3, #7
   13d9c:	mov	r1, r3
   13da0:	ldr	r0, [pc, #2676]	; 1481c <export_data_element_to_ascii@@Base+0x1224>
   13da4:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   13da8:	ldr	r0, [pc, #2672]	; 14820 <export_data_element_to_ascii@@Base+0x1228>
   13dac:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   13db0:	ldr	r3, [pc, #2644]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   13db4:	ldr	r3, [r3]
   13db8:	add	r3, r3, #1
   13dbc:	ldr	r2, [pc, #2632]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   13dc0:	str	r3, [r2]
   13dc4:	ldr	r3, [pc, #2648]	; 14824 <export_data_element_to_ascii@@Base+0x122c>
   13dc8:	ldr	r3, [r3]
   13dcc:	cmp	r3, #0
   13dd0:	blt	13de8 <export_data_element_to_ascii@@Base+0x7f0>
   13dd4:	ldr	r3, [pc, #2632]	; 14824 <export_data_element_to_ascii@@Base+0x122c>
   13dd8:	ldr	r3, [r3]
   13ddc:	ldr	r2, [fp, #-956]	; 0xfffffc44
   13de0:	cmp	r2, r3
   13de4:	bge	13e00 <export_data_element_to_ascii@@Base+0x808>
   13de8:	ldr	r3, [fp, #-956]	; 0xfffffc44
   13dec:	add	r3, r3, #1
   13df0:	mov	r1, r3
   13df4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13df8:	bl	13988 <export_data_element_to_ascii@@Base+0x390>
   13dfc:	b	13e08 <export_data_element_to_ascii@@Base+0x810>
   13e00:	ldr	r0, [pc, #2592]	; 14828 <export_data_element_to_ascii@@Base+0x1230>
   13e04:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   13e08:	ldr	r3, [pc, #2556]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   13e0c:	ldr	r3, [r3]
   13e10:	sub	r3, r3, #1
   13e14:	ldr	r2, [pc, #2544]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   13e18:	str	r3, [r2]
   13e1c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13e20:	sub	r2, r3, #1
   13e24:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13e28:	cmp	r2, r3
   13e2c:	ble	13e48 <export_data_element_to_ascii@@Base+0x850>
   13e30:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13e34:	bl	12580 <coda_cursor_goto_next_record_field@plt>
   13e38:	mov	r3, r0
   13e3c:	cmp	r3, #0
   13e40:	beq	13e48 <export_data_element_to_ascii@@Base+0x850>
   13e44:	bl	1a55c <handle_coda_error@@Base>
   13e48:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13e4c:	add	r3, r3, #1
   13e50:	str	r3, [fp, #-80]	; 0xffffffb0
   13e54:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13e58:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13e5c:	cmp	r2, r3
   13e60:	blt	13cbc <export_data_element_to_ascii@@Base+0x6c4>
   13e64:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13e68:	bl	123f4 <coda_cursor_goto_parent@plt>
   13e6c:	b	147e0 <export_data_element_to_ascii@@Base+0x11e8>
   13e70:	sub	r2, fp, #948	; 0x3b4
   13e74:	sub	r3, fp, #160	; 0xa0
   13e78:	mov	r1, r3
   13e7c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13e80:	bl	12520 <coda_cursor_get_array_dim@plt>
   13e84:	mov	r3, r0
   13e88:	cmp	r3, #0
   13e8c:	beq	13e94 <export_data_element_to_ascii@@Base+0x89c>
   13e90:	bl	1a55c <handle_coda_error@@Base>
   13e94:	ldr	r3, [fp, #-160]	; 0xffffff60
   13e98:	cmp	r3, #0
   13e9c:	blt	147e8 <export_data_element_to_ascii@@Base+0x11f0>
   13ea0:	mov	r3, #1
   13ea4:	str	r3, [fp, #-32]	; 0xffffffe0
   13ea8:	mov	r3, #0
   13eac:	str	r3, [fp, #-36]	; 0xffffffdc
   13eb0:	b	13ef8 <export_data_element_to_ascii@@Base+0x900>
   13eb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13eb8:	lsl	r3, r3, #2
   13ebc:	sub	r2, fp, #28
   13ec0:	add	r3, r2, r3
   13ec4:	ldr	r2, [r3, #-920]	; 0xfffffc68
   13ec8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ecc:	mul	r3, r2, r3
   13ed0:	str	r3, [fp, #-32]	; 0xffffffe0
   13ed4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13ed8:	lsl	r3, r3, #2
   13edc:	sub	r2, fp, #28
   13ee0:	add	r3, r2, r3
   13ee4:	mov	r2, #0
   13ee8:	str	r2, [r3, #-888]	; 0xfffffc88
   13eec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13ef0:	add	r3, r3, #1
   13ef4:	str	r3, [fp, #-36]	; 0xffffffdc
   13ef8:	ldr	r3, [fp, #-160]	; 0xffffff60
   13efc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13f00:	cmp	r2, r3
   13f04:	blt	13eb4 <export_data_element_to_ascii@@Base+0x8bc>
   13f08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13f0c:	cmp	r3, #0
   13f10:	ble	147e8 <export_data_element_to_ascii@@Base+0x11f0>
   13f14:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13f18:	bl	12364 <coda_cursor_goto_first_array_element@plt>
   13f1c:	mov	r3, r0
   13f20:	cmp	r3, #0
   13f24:	beq	13f2c <export_data_element_to_ascii@@Base+0x934>
   13f28:	bl	1a55c <handle_coda_error@@Base>
   13f2c:	mov	r3, #0
   13f30:	str	r3, [fp, #-36]	; 0xffffffdc
   13f34:	b	141a0 <export_data_element_to_ascii@@Base+0xba8>
   13f38:	ldr	r0, [pc, #2284]	; 1482c <export_data_element_to_ascii@@Base+0x1234>
   13f3c:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   13f40:	mov	r3, #0
   13f44:	str	r3, [fp, #-40]	; 0xffffffd8
   13f48:	b	13f94 <export_data_element_to_ascii@@Base+0x99c>
   13f4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13f50:	lsl	r3, r3, #2
   13f54:	sub	r2, fp, #28
   13f58:	add	r3, r2, r3
   13f5c:	ldr	r3, [r3, #-888]	; 0xfffffc88
   13f60:	mov	r1, r3
   13f64:	ldr	r0, [pc, #2244]	; 14830 <export_data_element_to_ascii@@Base+0x1238>
   13f68:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   13f6c:	ldr	r3, [fp, #-160]	; 0xffffff60
   13f70:	sub	r2, r3, #1
   13f74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13f78:	cmp	r2, r3
   13f7c:	ble	13f88 <export_data_element_to_ascii@@Base+0x990>
   13f80:	ldr	r0, [pc, #2220]	; 14834 <export_data_element_to_ascii@@Base+0x123c>
   13f84:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   13f88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13f8c:	add	r3, r3, #1
   13f90:	str	r3, [fp, #-40]	; 0xffffffd8
   13f94:	ldr	r3, [fp, #-160]	; 0xffffff60
   13f98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13f9c:	cmp	r2, r3
   13fa0:	blt	13f4c <export_data_element_to_ascii@@Base+0x954>
   13fa4:	ldr	r0, [pc, #2188]	; 14838 <export_data_element_to_ascii@@Base+0x1240>
   13fa8:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   13fac:	ldr	r3, [pc, #2144]	; 14814 <export_data_element_to_ascii@@Base+0x121c>
   13fb0:	ldr	r3, [r3]
   13fb4:	cmp	r3, #0
   13fb8:	beq	14054 <export_data_element_to_ascii@@Base+0xa5c>
   13fbc:	sub	r3, fp, #172	; 0xac
   13fc0:	mov	r1, r3
   13fc4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13fc8:	bl	125ec <coda_cursor_get_file_bit_offset@plt>
   13fcc:	mov	r3, r0
   13fd0:	cmp	r3, #0
   13fd4:	beq	13fdc <export_data_element_to_ascii@@Base+0x9e4>
   13fd8:	bl	1a55c <handle_coda_error@@Base>
   13fdc:	ldrd	r2, [fp, #-172]	; 0xffffff54
   13fe0:	cmp	r2, #0
   13fe4:	sbcs	r3, r3, #0
   13fe8:	blt	14054 <export_data_element_to_ascii@@Base+0xa5c>
   13fec:	ldrd	r2, [fp, #-172]	; 0xffffff54
   13ff0:	lsr	r8, r2, #3
   13ff4:	orr	r8, r8, r3, lsl #29
   13ff8:	asr	r9, r3, #3
   13ffc:	sub	r3, fp, #196	; 0xc4
   14000:	mov	r2, r3
   14004:	mov	r0, r8
   14008:	mov	r1, r9
   1400c:	bl	1264c <coda_str64@plt>
   14010:	sub	r3, fp, #196	; 0xc4
   14014:	mov	r1, r3
   14018:	ldr	r0, [pc, #2040]	; 14818 <export_data_element_to_ascii@@Base+0x1220>
   1401c:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   14020:	ldrd	r2, [fp, #-172]	; 0xffffff54
   14024:	mov	r0, #7
   14028:	mov	r1, #0
   1402c:	and	r2, r2, r0
   14030:	and	r3, r3, r1
   14034:	orrs	r3, r2, r3
   14038:	beq	14054 <export_data_element_to_ascii@@Base+0xa5c>
   1403c:	ldrd	r2, [fp, #-172]	; 0xffffff54
   14040:	mov	r3, r2
   14044:	and	r3, r3, #7
   14048:	mov	r1, r3
   1404c:	ldr	r0, [pc, #1992]	; 1481c <export_data_element_to_ascii@@Base+0x1224>
   14050:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   14054:	ldr	r0, [pc, #1988]	; 14820 <export_data_element_to_ascii@@Base+0x1228>
   14058:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   1405c:	ldr	r3, [pc, #1960]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   14060:	ldr	r3, [r3]
   14064:	add	r3, r3, #1
   14068:	ldr	r2, [pc, #1948]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   1406c:	str	r3, [r2]
   14070:	ldr	r3, [pc, #1964]	; 14824 <export_data_element_to_ascii@@Base+0x122c>
   14074:	ldr	r3, [r3]
   14078:	cmp	r3, #0
   1407c:	blt	14094 <export_data_element_to_ascii@@Base+0xa9c>
   14080:	ldr	r3, [pc, #1948]	; 14824 <export_data_element_to_ascii@@Base+0x122c>
   14084:	ldr	r3, [r3]
   14088:	ldr	r2, [fp, #-956]	; 0xfffffc44
   1408c:	cmp	r2, r3
   14090:	bge	140ac <export_data_element_to_ascii@@Base+0xab4>
   14094:	ldr	r3, [fp, #-956]	; 0xfffffc44
   14098:	add	r3, r3, #1
   1409c:	mov	r1, r3
   140a0:	ldr	r0, [fp, #-952]	; 0xfffffc48
   140a4:	bl	13988 <export_data_element_to_ascii@@Base+0x390>
   140a8:	b	140b4 <export_data_element_to_ascii@@Base+0xabc>
   140ac:	ldr	r0, [pc, #1908]	; 14828 <export_data_element_to_ascii@@Base+0x1230>
   140b0:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   140b4:	ldr	r3, [pc, #1872]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   140b8:	ldr	r3, [r3]
   140bc:	sub	r3, r3, #1
   140c0:	ldr	r2, [pc, #1860]	; 1480c <export_data_element_to_ascii@@Base+0x1214>
   140c4:	str	r3, [r2]
   140c8:	ldr	r3, [fp, #-160]	; 0xffffff60
   140cc:	sub	r3, r3, #1
   140d0:	str	r3, [fp, #-40]	; 0xffffffd8
   140d4:	b	14154 <export_data_element_to_ascii@@Base+0xb5c>
   140d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   140dc:	lsl	r3, r3, #2
   140e0:	sub	r2, fp, #28
   140e4:	add	r3, r2, r3
   140e8:	ldr	r3, [r3, #-888]	; 0xfffffc88
   140ec:	add	r2, r3, #1
   140f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   140f4:	lsl	r3, r3, #2
   140f8:	sub	r1, fp, #28
   140fc:	add	r3, r1, r3
   14100:	str	r2, [r3, #-888]	; 0xfffffc88
   14104:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14108:	lsl	r3, r3, #2
   1410c:	sub	r2, fp, #28
   14110:	add	r3, r2, r3
   14114:	ldr	r2, [r3, #-888]	; 0xfffffc88
   14118:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1411c:	lsl	r3, r3, #2
   14120:	sub	r1, fp, #28
   14124:	add	r3, r1, r3
   14128:	ldr	r3, [r3, #-920]	; 0xfffffc68
   1412c:	cmp	r2, r3
   14130:	bne	14164 <export_data_element_to_ascii@@Base+0xb6c>
   14134:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14138:	sub	r2, r3, #1
   1413c:	str	r2, [fp, #-40]	; 0xffffffd8
   14140:	lsl	r3, r3, #2
   14144:	sub	r2, fp, #28
   14148:	add	r3, r2, r3
   1414c:	mov	r2, #0
   14150:	str	r2, [r3, #-888]	; 0xfffffc88
   14154:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14158:	cmp	r3, #0
   1415c:	bge	140d8 <export_data_element_to_ascii@@Base+0xae0>
   14160:	b	14168 <export_data_element_to_ascii@@Base+0xb70>
   14164:	nop			; (mov r0, r0)
   14168:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1416c:	sub	r2, r3, #1
   14170:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14174:	cmp	r2, r3
   14178:	ble	14194 <export_data_element_to_ascii@@Base+0xb9c>
   1417c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14180:	bl	12460 <coda_cursor_goto_next_array_element@plt>
   14184:	mov	r3, r0
   14188:	cmp	r3, #0
   1418c:	beq	14194 <export_data_element_to_ascii@@Base+0xb9c>
   14190:	bl	1a55c <handle_coda_error@@Base>
   14194:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14198:	add	r3, r3, #1
   1419c:	str	r3, [fp, #-36]	; 0xffffffdc
   141a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   141a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   141a8:	cmp	r2, r3
   141ac:	blt	13f38 <export_data_element_to_ascii@@Base+0x940>
   141b0:	ldr	r0, [fp, #-952]	; 0xfffffc48
   141b4:	bl	123f4 <coda_cursor_goto_parent@plt>
   141b8:	b	147e8 <export_data_element_to_ascii@@Base+0x11f0>
   141bc:	sub	r3, fp, #204	; 0xcc
   141c0:	mov	r1, r3
   141c4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   141c8:	bl	1252c <coda_cursor_has_ascii_content@plt>
   141cc:	mov	r3, r0
   141d0:	cmp	r3, #0
   141d4:	beq	141dc <export_data_element_to_ascii@@Base+0xbe4>
   141d8:	bl	1a55c <handle_coda_error@@Base>
   141dc:	ldr	r3, [fp, #-204]	; 0xffffff34
   141e0:	cmp	r3, #0
   141e4:	beq	142a8 <export_data_element_to_ascii@@Base+0xcb0>
   141e8:	sub	r3, fp, #208	; 0xd0
   141ec:	mov	r1, r3
   141f0:	ldr	r0, [fp, #-952]	; 0xfffffc48
   141f4:	bl	12424 <coda_cursor_get_string_length@plt>
   141f8:	mov	r3, r0
   141fc:	cmp	r3, #0
   14200:	beq	14208 <export_data_element_to_ascii@@Base+0xc10>
   14204:	bl	1a55c <handle_coda_error@@Base>
   14208:	ldr	r3, [fp, #-208]	; 0xffffff30
   1420c:	add	r3, r3, #1
   14210:	mov	r0, r3
   14214:	bl	123c4 <malloc@plt>
   14218:	mov	r3, r0
   1421c:	str	r3, [fp, #-44]	; 0xffffffd4
   14220:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14224:	cmp	r3, #0
   14228:	bne	14250 <export_data_element_to_ascii@@Base+0xc58>
   1422c:	ldr	r3, [fp, #-208]	; 0xffffff30
   14230:	add	r2, r3, #1
   14234:	ldr	r3, [pc, #1536]	; 1483c <export_data_element_to_ascii@@Base+0x1244>
   14238:	str	r3, [sp]
   1423c:	ldr	r3, [pc, #1532]	; 14840 <export_data_element_to_ascii@@Base+0x1248>
   14240:	ldr	r1, [pc, #1532]	; 14844 <export_data_element_to_ascii@@Base+0x124c>
   14244:	mvn	r0, #0
   14248:	bl	12244 <coda_set_error@plt>
   1424c:	bl	1a55c <handle_coda_error@@Base>
   14250:	ldr	r3, [fp, #-208]	; 0xffffff30
   14254:	add	r3, r3, #1
   14258:	mov	r2, r3
   1425c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14260:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14264:	bl	123e8 <coda_cursor_read_string@plt>
   14268:	mov	r3, r0
   1426c:	cmp	r3, #0
   14270:	beq	14278 <export_data_element_to_ascii@@Base+0xc80>
   14274:	bl	1a55c <handle_coda_error@@Base>
   14278:	ldr	r0, [pc, #1480]	; 14848 <export_data_element_to_ascii@@Base+0x1250>
   1427c:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   14280:	ldr	r3, [fp, #-208]	; 0xffffff30
   14284:	mov	r1, r3
   14288:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1428c:	bl	13814 <export_data_element_to_ascii@@Base+0x21c>
   14290:	ldr	r3, [fp, #-208]	; 0xffffff30
   14294:	mov	r1, r3
   14298:	ldr	r0, [pc, #1452]	; 1484c <export_data_element_to_ascii@@Base+0x1254>
   1429c:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   142a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142a4:	bl	1228c <free@plt>
   142a8:	sub	r3, fp, #200	; 0xc8
   142ac:	mov	r1, r3
   142b0:	ldr	r0, [fp, #-952]	; 0xfffffc48
   142b4:	bl	123b8 <coda_cursor_get_read_type@plt>
   142b8:	mov	r3, r0
   142bc:	cmp	r3, #0
   142c0:	beq	142c8 <export_data_element_to_ascii@@Base+0xcd0>
   142c4:	bl	1a55c <handle_coda_error@@Base>
   142c8:	ldr	r3, [fp, #-200]	; 0xffffff38
   142cc:	add	r3, r3, #1
   142d0:	cmp	r3, #13
   142d4:	ldrls	pc, [pc, r3, lsl #2]
   142d8:	b	147f0 <export_data_element_to_ascii@@Base+0x11f8>
   142dc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   142e0:	andeq	r4, r1, r8, lsl #9
   142e4:			; <UNDEFINED> instruction: 0x000144bc
   142e8:	andeq	r4, r1, r8, lsl #9
   142ec:			; <UNDEFINED> instruction: 0x000144bc
   142f0:	andeq	r4, r1, r8, lsl #9
   142f4:			; <UNDEFINED> instruction: 0x000144bc
   142f8:	strdeq	r4, [r1], -r0
   142fc:	andeq	r4, r1, r8, lsr r5
   14300:	andeq	r4, r1, r0, lsl #11
   14304:	andeq	r4, r1, r0, lsl #11
   14308:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1430c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14310:	andeq	r4, r1, r4, lsl r3
   14314:	sub	r3, fp, #220	; 0xdc
   14318:	mov	r1, r3
   1431c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14320:	bl	125a4 <coda_cursor_get_bit_size@plt>
   14324:	mov	r3, r0
   14328:	cmp	r3, #0
   1432c:	beq	14334 <export_data_element_to_ascii@@Base+0xd3c>
   14330:	bl	1a55c <handle_coda_error@@Base>
   14334:	ldrd	r2, [fp, #-220]	; 0xffffff24
   14338:	lsr	r4, r2, #3
   1433c:	orr	r4, r4, r3, lsl #29
   14340:	asr	r5, r3, #3
   14344:	ldrd	r2, [fp, #-220]	; 0xffffff24
   14348:	mov	r0, #7
   1434c:	mov	r1, #0
   14350:	and	r2, r2, r0
   14354:	and	r3, r3, r1
   14358:	orrs	r3, r2, r3
   1435c:	beq	1436c <export_data_element_to_ascii@@Base+0xd74>
   14360:	mov	r2, #1
   14364:	mov	r3, #0
   14368:	b	14374 <export_data_element_to_ascii@@Base+0xd7c>
   1436c:	mov	r2, #0
   14370:	mov	r3, #0
   14374:	adds	r2, r2, r4
   14378:	adc	r3, r3, r5
   1437c:	strd	r2, [fp, #-52]	; 0xffffffcc
   14380:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14384:	mov	r0, r3
   14388:	bl	123c4 <malloc@plt>
   1438c:	mov	r3, r0
   14390:	str	r3, [fp, #-56]	; 0xffffffc8
   14394:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14398:	cmp	r3, #0
   1439c:	bne	143c0 <export_data_element_to_ascii@@Base+0xdc8>
   143a0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   143a4:	ldr	r3, [pc, #1188]	; 14850 <export_data_element_to_ascii@@Base+0x1258>
   143a8:	str	r3, [sp]
   143ac:	ldr	r3, [pc, #1164]	; 14840 <export_data_element_to_ascii@@Base+0x1248>
   143b0:	ldr	r1, [pc, #1164]	; 14844 <export_data_element_to_ascii@@Base+0x124c>
   143b4:	mvn	r0, #0
   143b8:	bl	12244 <coda_set_error@plt>
   143bc:	bl	1a55c <handle_coda_error@@Base>
   143c0:	ldrd	r2, [fp, #-220]	; 0xffffff24
   143c4:	strd	r2, [sp]
   143c8:	mov	r2, #0
   143cc:	mov	r3, #0
   143d0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   143d4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   143d8:	bl	12640 <coda_cursor_read_bits@plt>
   143dc:	mov	r3, r0
   143e0:	cmp	r3, #0
   143e4:	beq	143ec <export_data_element_to_ascii@@Base+0xdf4>
   143e8:	bl	1a55c <handle_coda_error@@Base>
   143ec:	ldr	r0, [pc, #1108]	; 14848 <export_data_element_to_ascii@@Base+0x1250>
   143f0:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   143f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   143f8:	mov	r1, r3
   143fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14400:	bl	13814 <export_data_element_to_ascii@@Base+0x21c>
   14404:	ldr	r0, [pc, #1096]	; 14854 <export_data_element_to_ascii@@Base+0x125c>
   14408:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   1440c:	ldrd	r2, [fp, #-220]	; 0xffffff24
   14410:	lsr	r6, r2, #3
   14414:	orr	r6, r6, r3, lsl #29
   14418:	asr	r7, r3, #3
   1441c:	sub	r3, fp, #244	; 0xf4
   14420:	mov	r2, r3
   14424:	mov	r0, r6
   14428:	mov	r1, r7
   1442c:	bl	1264c <coda_str64@plt>
   14430:	sub	r3, fp, #244	; 0xf4
   14434:	mov	r1, r3
   14438:	ldr	r0, [pc, #1048]	; 14858 <export_data_element_to_ascii@@Base+0x1260>
   1443c:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   14440:	ldrd	r2, [fp, #-220]	; 0xffffff24
   14444:	mov	r0, #7
   14448:	mov	r1, #0
   1444c:	and	r2, r2, r0
   14450:	and	r3, r3, r1
   14454:	orrs	r3, r2, r3
   14458:	beq	14474 <export_data_element_to_ascii@@Base+0xe7c>
   1445c:	ldrd	r2, [fp, #-220]	; 0xffffff24
   14460:	mov	r3, r2
   14464:	and	r3, r3, #7
   14468:	mov	r1, r3
   1446c:	ldr	r0, [pc, #936]	; 1481c <export_data_element_to_ascii@@Base+0x1224>
   14470:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   14474:	ldr	r0, [pc, #992]	; 1485c <export_data_element_to_ascii@@Base+0x1264>
   14478:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   1447c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14480:	bl	1228c <free@plt>
   14484:	b	145f8 <export_data_element_to_ascii@@Base+0x1000>
   14488:	sub	r3, fp, #248	; 0xf8
   1448c:	mov	r1, r3
   14490:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14494:	bl	125e0 <coda_cursor_read_int32@plt>
   14498:	mov	r3, r0
   1449c:	cmp	r3, #0
   144a0:	beq	144a8 <export_data_element_to_ascii@@Base+0xeb0>
   144a4:	bl	1a55c <handle_coda_error@@Base>
   144a8:	ldr	r3, [fp, #-248]	; 0xffffff08
   144ac:	mov	r1, r3
   144b0:	ldr	r0, [pc, #936]	; 14860 <export_data_element_to_ascii@@Base+0x1268>
   144b4:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   144b8:	b	145f8 <export_data_element_to_ascii@@Base+0x1000>
   144bc:	sub	r3, fp, #252	; 0xfc
   144c0:	mov	r1, r3
   144c4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   144c8:	bl	122b0 <coda_cursor_read_uint32@plt>
   144cc:	mov	r3, r0
   144d0:	cmp	r3, #0
   144d4:	beq	144dc <export_data_element_to_ascii@@Base+0xee4>
   144d8:	bl	1a55c <handle_coda_error@@Base>
   144dc:	ldr	r3, [fp, #-252]	; 0xffffff04
   144e0:	mov	r1, r3
   144e4:	ldr	r0, [pc, #888]	; 14864 <export_data_element_to_ascii@@Base+0x126c>
   144e8:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   144ec:	b	145f8 <export_data_element_to_ascii@@Base+0x1000>
   144f0:	sub	r3, fp, #260	; 0x104
   144f4:	mov	r1, r3
   144f8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   144fc:	bl	12544 <coda_cursor_read_int64@plt>
   14500:	mov	r3, r0
   14504:	cmp	r3, #0
   14508:	beq	14510 <export_data_element_to_ascii@@Base+0xf18>
   1450c:	bl	1a55c <handle_coda_error@@Base>
   14510:	sub	r3, fp, #260	; 0x104
   14514:	ldrd	r0, [r3]
   14518:	sub	r3, fp, #284	; 0x11c
   1451c:	mov	r2, r3
   14520:	bl	1264c <coda_str64@plt>
   14524:	sub	r3, fp, #284	; 0x11c
   14528:	mov	r1, r3
   1452c:	ldr	r0, [pc, #820]	; 14868 <export_data_element_to_ascii@@Base+0x1270>
   14530:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   14534:	b	145f8 <export_data_element_to_ascii@@Base+0x1000>
   14538:	sub	r3, fp, #292	; 0x124
   1453c:	mov	r1, r3
   14540:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14544:	bl	12430 <coda_cursor_read_uint64@plt>
   14548:	mov	r3, r0
   1454c:	cmp	r3, #0
   14550:	beq	14558 <export_data_element_to_ascii@@Base+0xf60>
   14554:	bl	1a55c <handle_coda_error@@Base>
   14558:	sub	r3, fp, #284	; 0x11c
   1455c:	ldrd	r0, [r3, #-8]
   14560:	sub	r3, fp, #316	; 0x13c
   14564:	mov	r2, r3
   14568:	bl	12280 <coda_str64u@plt>
   1456c:	sub	r3, fp, #316	; 0x13c
   14570:	mov	r1, r3
   14574:	ldr	r0, [pc, #748]	; 14868 <export_data_element_to_ascii@@Base+0x1270>
   14578:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   1457c:	b	145f8 <export_data_element_to_ascii@@Base+0x1000>
   14580:	sub	r3, fp, #324	; 0x144
   14584:	mov	r1, r3
   14588:	ldr	r0, [fp, #-952]	; 0xfffffc48
   1458c:	bl	1243c <coda_cursor_read_double@plt>
   14590:	mov	r3, r0
   14594:	cmp	r3, #0
   14598:	beq	145a0 <export_data_element_to_ascii@@Base+0xfa8>
   1459c:	bl	1a55c <handle_coda_error@@Base>
   145a0:	ldr	r3, [fp, #-200]	; 0xffffff38
   145a4:	cmp	r3, #8
   145a8:	bne	145c0 <export_data_element_to_ascii@@Base+0xfc8>
   145ac:	sub	r3, fp, #324	; 0x144
   145b0:	ldrd	r2, [r3]
   145b4:	ldr	r0, [pc, #688]	; 1486c <export_data_element_to_ascii@@Base+0x1274>
   145b8:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   145bc:	b	145f8 <export_data_element_to_ascii@@Base+0x1000>
   145c0:	sub	r3, fp, #324	; 0x144
   145c4:	ldrd	r2, [r3]
   145c8:	ldr	r0, [pc, #672]	; 14870 <export_data_element_to_ascii@@Base+0x1278>
   145cc:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   145d0:	b	145f8 <export_data_element_to_ascii@@Base+0x1000>
   145d4:	ldr	r3, [fp, #-204]	; 0xffffff34
   145d8:	cmp	r3, #0
   145dc:	bne	145f4 <export_data_element_to_ascii@@Base+0xffc>
   145e0:	ldr	r3, [pc, #652]	; 14874 <export_data_element_to_ascii@@Base+0x127c>
   145e4:	mov	r2, #548	; 0x224
   145e8:	ldr	r1, [pc, #592]	; 14840 <export_data_element_to_ascii@@Base+0x1248>
   145ec:	ldr	r0, [pc, #644]	; 14878 <export_data_element_to_ascii@@Base+0x1280>
   145f0:	bl	12658 <__assert_fail@plt>
   145f4:	nop			; (mov r0, r0)
   145f8:	b	147f0 <export_data_element_to_ascii@@Base+0x11f8>
   145fc:	sub	r3, fp, #328	; 0x148
   14600:	mov	r1, r3
   14604:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14608:	bl	12358 <coda_cursor_get_special_type@plt>
   1460c:	mov	r3, r0
   14610:	cmp	r3, #0
   14614:	beq	1461c <export_data_element_to_ascii@@Base+0x1024>
   14618:	bl	1a55c <handle_coda_error@@Base>
   1461c:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   14620:	cmp	r3, #0
   14624:	beq	1466c <export_data_element_to_ascii@@Base+0x1074>
   14628:	ldr	r2, [fp, #-952]	; 0xfffffc48
   1462c:	sub	r3, fp, #916	; 0x394
   14630:	mov	r1, r2
   14634:	mov	r2, #520	; 0x208
   14638:	mov	r0, r3
   1463c:	bl	122e0 <memcpy@plt>
   14640:	sub	r3, fp, #916	; 0x394
   14644:	mov	r0, r3
   14648:	bl	125c8 <coda_cursor_use_base_type_of_special_type@plt>
   1464c:	mov	r3, r0
   14650:	cmp	r3, #0
   14654:	beq	1465c <export_data_element_to_ascii@@Base+0x1064>
   14658:	bl	1a55c <handle_coda_error@@Base>
   1465c:	sub	r3, fp, #916	; 0x394
   14660:	ldr	r1, [fp, #-956]	; 0xfffffc44
   14664:	mov	r0, r3
   14668:	bl	13988 <export_data_element_to_ascii@@Base+0x390>
   1466c:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   14670:	mov	r0, r3
   14674:	bl	121cc <coda_type_get_special_type_name@plt>
   14678:	mov	r3, r0
   1467c:	mov	r1, r3
   14680:	ldr	r0, [pc, #500]	; 1487c <export_data_element_to_ascii@@Base+0x1284>
   14684:	bl	137c0 <export_data_element_to_ascii@@Base+0x1c8>
   14688:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   1468c:	cmp	r3, #3
   14690:	ldrls	pc, [pc, r3, lsl #2]
   14694:	b	147f8 <export_data_element_to_ascii@@Base+0x1200>
   14698:	andeq	r4, r1, r8, lsr #13
   1469c:			; <UNDEFINED> instruction: 0x000146b4
   146a0:	andeq	r4, r1, r8, ror #13
   146a4:	muleq	r1, r0, r7
   146a8:	ldr	r0, [pc, #368]	; 14820 <export_data_element_to_ascii@@Base+0x1228>
   146ac:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   146b0:	b	147dc <export_data_element_to_ascii@@Base+0x11e4>
   146b4:	sub	r3, fp, #340	; 0x154
   146b8:	mov	r1, r3
   146bc:	ldr	r0, [fp, #-952]	; 0xfffffc48
   146c0:	bl	1243c <coda_cursor_read_double@plt>
   146c4:	mov	r3, r0
   146c8:	cmp	r3, #0
   146cc:	beq	146d4 <export_data_element_to_ascii@@Base+0x10dc>
   146d0:	bl	1a55c <handle_coda_error@@Base>
   146d4:	sub	r3, fp, #340	; 0x154
   146d8:	ldrd	r2, [r3]
   146dc:	ldr	r0, [pc, #396]	; 14870 <export_data_element_to_ascii@@Base+0x1278>
   146e0:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   146e4:	b	147dc <export_data_element_to_ascii@@Base+0x11e4>
   146e8:	sub	r3, fp, #348	; 0x15c
   146ec:	mov	r1, r3
   146f0:	ldr	r0, [fp, #-952]	; 0xfffffc48
   146f4:	bl	1243c <coda_cursor_read_double@plt>
   146f8:	mov	r3, r0
   146fc:	cmp	r3, #0
   14700:	beq	14708 <export_data_element_to_ascii@@Base+0x1110>
   14704:	bl	1a55c <handle_coda_error@@Base>
   14708:	vldr	d7, [fp, #-348]	; 0xfffffea4
   1470c:	vmov.f64	d0, d7
   14710:	bl	12448 <coda_isNaN@plt>
   14714:	mov	r3, r0
   14718:	cmp	r3, #0
   1471c:	bne	14738 <export_data_element_to_ascii@@Base+0x1140>
   14720:	vldr	d7, [fp, #-348]	; 0xfffffea4
   14724:	vmov.f64	d0, d7
   14728:	bl	122ec <coda_isInf@plt>
   1472c:	mov	r3, r0
   14730:	cmp	r3, #0
   14734:	beq	1474c <export_data_element_to_ascii@@Base+0x1154>
   14738:	sub	r3, fp, #348	; 0x15c
   1473c:	ldrd	r2, [r3]
   14740:	ldr	r0, [pc, #312]	; 14880 <export_data_element_to_ascii@@Base+0x1288>
   14744:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   14748:	b	147dc <export_data_element_to_ascii@@Base+0x11e4>
   1474c:	vldr	d7, [fp, #-348]	; 0xfffffea4
   14750:	sub	r3, fp, #376	; 0x178
   14754:	mov	r1, r3
   14758:	ldr	r0, [pc, #292]	; 14884 <export_data_element_to_ascii@@Base+0x128c>
   1475c:	vmov.f64	d0, d7
   14760:	bl	12268 <coda_time_double_to_string@plt>
   14764:	mov	r3, r0
   14768:	cmp	r3, #0
   1476c:	beq	1477c <export_data_element_to_ascii@@Base+0x1184>
   14770:	ldr	r0, [pc, #272]	; 14888 <export_data_element_to_ascii@@Base+0x1290>
   14774:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   14778:	b	147dc <export_data_element_to_ascii@@Base+0x11e4>
   1477c:	sub	r3, fp, #376	; 0x178
   14780:	mov	r1, r3
   14784:	ldr	r0, [pc, #256]	; 1488c <export_data_element_to_ascii@@Base+0x1294>
   14788:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   1478c:	b	147dc <export_data_element_to_ascii@@Base+0x11e4>
   14790:	sub	r2, fp, #396	; 0x18c
   14794:	sub	r3, fp, #388	; 0x184
   14798:	mov	r1, r3
   1479c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   147a0:	bl	124e4 <coda_cursor_read_complex_double_split@plt>
   147a4:	mov	r3, r0
   147a8:	cmp	r3, #0
   147ac:	beq	147b4 <export_data_element_to_ascii@@Base+0x11bc>
   147b0:	bl	1a55c <handle_coda_error@@Base>
   147b4:	sub	r1, fp, #388	; 0x184
   147b8:	ldrd	r0, [r1]
   147bc:	sub	r3, fp, #396	; 0x18c
   147c0:	ldrd	r2, [r3]
   147c4:	strd	r2, [sp]
   147c8:	mov	r2, r0
   147cc:	mov	r3, r1
   147d0:	ldr	r0, [pc, #184]	; 14890 <export_data_element_to_ascii@@Base+0x1298>
   147d4:	bl	13770 <export_data_element_to_ascii@@Base+0x178>
   147d8:	nop			; (mov r0, r0)
   147dc:	b	147f8 <export_data_element_to_ascii@@Base+0x1200>
   147e0:	nop			; (mov r0, r0)
   147e4:	b	147fc <export_data_element_to_ascii@@Base+0x1204>
   147e8:	nop			; (mov r0, r0)
   147ec:	b	147fc <export_data_element_to_ascii@@Base+0x1204>
   147f0:	nop			; (mov r0, r0)
   147f4:	b	147fc <export_data_element_to_ascii@@Base+0x1204>
   147f8:	nop			; (mov r0, r0)
   147fc:	nop			; (mov r0, r0)
   14800:	sub	sp, fp, #28
   14804:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14808:	andeq	ip, r1, ip, asr #24
   1480c:	andeq	pc, r2, r4, asr #3
   14810:	andeq	ip, r1, ip, asr ip
   14814:	andeq	pc, r2, ip, lsr #3
   14818:	andeq	ip, r1, r4, ror #24
   1481c:	andeq	ip, r1, r8, ror #24
   14820:	andeq	ip, r1, ip, ror #24
   14824:			; <UNDEFINED> instruction: 0x0002f1b0
   14828:	andeq	ip, r1, r0, ror ip
   1482c:	andeq	ip, r1, r8, ror ip
   14830:	andeq	ip, r1, ip, ror ip
   14834:	andeq	ip, r1, r0, lsl #25
   14838:	andeq	ip, r1, r4, lsl #25
   1483c:	muleq	r0, sl, r1
   14840:			; <UNDEFINED> instruction: 0x0001cbbc
   14844:	andeq	ip, r1, r8, lsl #25
   14848:	andeq	ip, r1, r0, asr #25
   1484c:	andeq	ip, r1, r4, asr #25
   14850:			; <UNDEFINED> instruction: 0x000001bf
   14854:	ldrdeq	ip, [r1], -r4
   14858:	andeq	ip, r1, r0, ror #25
   1485c:	andeq	ip, r1, r4, ror #25
   14860:	andeq	ip, r1, r8, ror #25
   14864:	strdeq	ip, [r1], -r0
   14868:	strdeq	ip, [r1], -r8
   1486c:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   14870:	andeq	ip, r1, r4, lsl #26
   14874:	andeq	ip, r1, r4, lsl #27
   14878:	andeq	ip, r1, ip, lsl #26
   1487c:	andeq	ip, r1, r0, lsr #26
   14880:	andeq	ip, r1, r8, lsr #26
   14884:	andeq	ip, r1, r0, lsr sp
   14888:	andeq	ip, r1, ip, asr #26
   1488c:	andeq	ip, r1, r8, ror #26
   14890:	andeq	ip, r1, r0, ror sp

00014894 <print_debug_data@@Base>:
   14894:	push	{fp, lr}
   14898:	add	fp, sp, #4
   1489c:	sub	sp, sp, #560	; 0x230
   148a0:	str	r0, [fp, #-544]	; 0xfffffde0
   148a4:	str	r1, [fp, #-548]	; 0xfffffddc
   148a8:	str	r2, [fp, #-552]	; 0xfffffdd8
   148ac:	ldr	r3, [fp, #-544]	; 0xfffffde0
   148b0:	cmp	r3, #0
   148b4:	bne	148d8 <print_debug_data@@Base+0x44>
   148b8:	ldr	r3, [pc, #440]	; 14a78 <print_debug_data@@Base+0x1e4>
   148bc:	ldr	r3, [r3]
   148c0:	sub	r2, fp, #12
   148c4:	mov	r1, r2
   148c8:	mov	r0, r3
   148cc:	bl	12250 <coda_open@plt>
   148d0:	str	r0, [fp, #-8]
   148d4:	b	148fc <print_debug_data@@Base+0x68>
   148d8:	ldr	r3, [pc, #408]	; 14a78 <print_debug_data@@Base+0x1e4>
   148dc:	ldr	r0, [r3]
   148e0:	sub	r3, fp, #12
   148e4:	str	r3, [sp]
   148e8:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   148ec:	ldr	r2, [fp, #-548]	; 0xfffffddc
   148f0:	ldr	r1, [fp, #-544]	; 0xfffffde0
   148f4:	bl	1246c <coda_open_as@plt>
   148f8:	str	r0, [fp, #-8]
   148fc:	ldr	r3, [fp, #-8]
   14900:	cmp	r3, #0
   14904:	beq	1497c <print_debug_data@@Base+0xe8>
   14908:	bl	12604 <coda_get_errno@plt>
   1490c:	mov	r3, r0
   14910:	ldr	r3, [r3]
   14914:	cmn	r3, #21
   14918:	bne	1497c <print_debug_data@@Base+0xe8>
   1491c:	mov	r0, #0
   14920:	bl	12298 <coda_set_option_use_mmap@plt>
   14924:	ldr	r3, [fp, #-544]	; 0xfffffde0
   14928:	cmp	r3, #0
   1492c:	bne	14950 <print_debug_data@@Base+0xbc>
   14930:	ldr	r3, [pc, #320]	; 14a78 <print_debug_data@@Base+0x1e4>
   14934:	ldr	r3, [r3]
   14938:	sub	r2, fp, #12
   1493c:	mov	r1, r2
   14940:	mov	r0, r3
   14944:	bl	12250 <coda_open@plt>
   14948:	str	r0, [fp, #-8]
   1494c:	b	14974 <print_debug_data@@Base+0xe0>
   14950:	ldr	r3, [pc, #288]	; 14a78 <print_debug_data@@Base+0x1e4>
   14954:	ldr	r0, [r3]
   14958:	sub	r3, fp, #12
   1495c:	str	r3, [sp]
   14960:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   14964:	ldr	r2, [fp, #-548]	; 0xfffffddc
   14968:	ldr	r1, [fp, #-544]	; 0xfffffde0
   1496c:	bl	1246c <coda_open_as@plt>
   14970:	str	r0, [fp, #-8]
   14974:	mov	r0, #1
   14978:	bl	12298 <coda_set_option_use_mmap@plt>
   1497c:	ldr	r3, [fp, #-8]
   14980:	cmp	r3, #0
   14984:	beq	1498c <print_debug_data@@Base+0xf8>
   14988:	bl	1a55c <handle_coda_error@@Base>
   1498c:	ldr	r3, [fp, #-12]
   14990:	sub	r2, fp, #536	; 0x218
   14994:	mov	r1, r2
   14998:	mov	r0, r3
   1499c:	bl	12334 <coda_get_product_format@plt>
   149a0:	mov	r3, r0
   149a4:	cmp	r3, #0
   149a8:	beq	149b0 <print_debug_data@@Base+0x11c>
   149ac:	bl	1a55c <handle_coda_error@@Base>
   149b0:	ldr	r3, [fp, #-536]	; 0xfffffde8
   149b4:	cmp	r3, #0
   149b8:	beq	149d4 <print_debug_data@@Base+0x140>
   149bc:	ldr	r3, [fp, #-536]	; 0xfffffde8
   149c0:	cmp	r3, #1
   149c4:	beq	149d4 <print_debug_data@@Base+0x140>
   149c8:	ldr	r3, [fp, #-536]	; 0xfffffde8
   149cc:	cmp	r3, #2
   149d0:	bne	149dc <print_debug_data@@Base+0x148>
   149d4:	mov	r3, #1
   149d8:	b	149e0 <print_debug_data@@Base+0x14c>
   149dc:	mov	r3, #0
   149e0:	ldr	r2, [pc, #148]	; 14a7c <print_debug_data@@Base+0x1e8>
   149e4:	str	r3, [r2]
   149e8:	ldr	r2, [fp, #-12]
   149ec:	sub	r3, fp, #532	; 0x214
   149f0:	mov	r1, r2
   149f4:	mov	r0, r3
   149f8:	bl	1237c <coda_cursor_set_product@plt>
   149fc:	mov	r3, r0
   14a00:	cmp	r3, #0
   14a04:	beq	14a0c <print_debug_data@@Base+0x178>
   14a08:	bl	1a55c <handle_coda_error@@Base>
   14a0c:	ldr	r3, [pc, #108]	; 14a80 <print_debug_data@@Base+0x1ec>
   14a10:	ldr	r3, [r3]
   14a14:	cmp	r3, #0
   14a18:	beq	14a48 <print_debug_data@@Base+0x1b4>
   14a1c:	ldr	r3, [pc, #92]	; 14a80 <print_debug_data@@Base+0x1ec>
   14a20:	ldr	r2, [r3]
   14a24:	sub	r3, fp, #532	; 0x214
   14a28:	mov	r1, r2
   14a2c:	mov	r0, r3
   14a30:	bl	1255c <coda_cursor_goto@plt>
   14a34:	str	r0, [fp, #-8]
   14a38:	ldr	r3, [fp, #-8]
   14a3c:	cmp	r3, #0
   14a40:	beq	14a48 <print_debug_data@@Base+0x1b4>
   14a44:	bl	1a55c <handle_coda_error@@Base>
   14a48:	mov	r0, #0
   14a4c:	bl	121fc <coda_set_option_perform_boundary_checks@plt>
   14a50:	sub	r3, fp, #532	; 0x214
   14a54:	mov	r1, #0
   14a58:	mov	r0, r3
   14a5c:	bl	13988 <export_data_element_to_ascii@@Base+0x390>
   14a60:	ldr	r3, [fp, #-12]
   14a64:	mov	r0, r3
   14a68:	bl	12538 <coda_close@plt>
   14a6c:	nop			; (mov r0, r0)
   14a70:	sub	sp, fp, #4
   14a74:	pop	{fp, pc}
   14a78:	strdeq	pc, [r2], -r0
   14a7c:	andeq	pc, r2, ip, lsr #3
   14a80:	strheq	r0, [r3], -r0	; <UNPREDICTABLE>

00014a84 <dim_info_init@@Base>:
   14a84:	push	{fp}		; (str fp, [sp, #-4]!)
   14a88:	add	fp, sp, #0
   14a8c:	ldr	r3, [pc, #44]	; 14ac0 <dim_info_init@@Base+0x3c>
   14a90:	mov	r2, #0
   14a94:	str	r2, [r3]
   14a98:	ldr	r3, [pc, #32]	; 14ac0 <dim_info_init@@Base+0x3c>
   14a9c:	mov	r2, #0
   14aa0:	str	r2, [r3, #68]	; 0x44
   14aa4:	ldr	r3, [pc, #20]	; 14ac0 <dim_info_init@@Base+0x3c>
   14aa8:	mvn	r2, #0
   14aac:	str	r2, [r3, #104]	; 0x68
   14ab0:	nop			; (mov r0, r0)
   14ab4:	add	sp, fp, #0
   14ab8:	pop	{fp}		; (ldr fp, [sp], #4)
   14abc:	bx	lr
   14ac0:	strheq	r0, [r3], -r8

00014ac4 <dim_info_done@@Base>:
   14ac4:	push	{fp}		; (str fp, [sp, #-4]!)
   14ac8:	add	fp, sp, #0
   14acc:	nop			; (mov r0, r0)
   14ad0:	add	sp, fp, #0
   14ad4:	pop	{fp}		; (ldr fp, [sp], #4)
   14ad8:	bx	lr

00014adc <print_all_distinct_dims@@Base>:
   14adc:	push	{fp, lr}
   14ae0:	add	fp, sp, #4
   14ae4:	sub	sp, sp, #24
   14ae8:	str	r0, [fp, #-16]
   14aec:	ldr	r3, [pc, #812]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14af0:	ldr	r2, [r3]
   14af4:	ldr	r3, [fp, #-16]
   14af8:	cmp	r2, r3
   14afc:	bgt	14b14 <print_all_distinct_dims@@Base+0x38>
   14b00:	ldr	r3, [pc, #796]	; 14e24 <print_all_distinct_dims@@Base+0x348>
   14b04:	mov	r2, #50	; 0x32
   14b08:	ldr	r1, [pc, #792]	; 14e28 <print_all_distinct_dims@@Base+0x34c>
   14b0c:	ldr	r0, [pc, #792]	; 14e2c <print_all_distinct_dims@@Base+0x350>
   14b10:	bl	12658 <__assert_fail@plt>
   14b14:	ldr	r2, [pc, #772]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14b18:	ldr	r3, [fp, #-16]
   14b1c:	add	r3, r3, #18
   14b20:	ldr	r3, [r2, r3, lsl #2]
   14b24:	cmp	r3, #0
   14b28:	beq	14e14 <print_all_distinct_dims@@Base+0x338>
   14b2c:	ldr	r2, [pc, #748]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14b30:	ldr	r3, [fp, #-16]
   14b34:	lsl	r3, r3, #2
   14b38:	add	r3, r2, r3
   14b3c:	ldr	r3, [r3, #4]
   14b40:	add	r3, r3, #1
   14b44:	lsl	r3, r3, #2
   14b48:	mov	r0, r3
   14b4c:	bl	123c4 <malloc@plt>
   14b50:	mov	r3, r0
   14b54:	str	r3, [fp, #-12]
   14b58:	ldr	r3, [fp, #-12]
   14b5c:	cmp	r3, #0
   14b60:	bne	14b9c <print_all_distinct_dims@@Base+0xc0>
   14b64:	ldr	r2, [pc, #692]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14b68:	ldr	r3, [fp, #-16]
   14b6c:	lsl	r3, r3, #2
   14b70:	add	r3, r2, r3
   14b74:	ldr	r3, [r3, #4]
   14b78:	add	r3, r3, #1
   14b7c:	lsl	r2, r3, #2
   14b80:	mov	r3, #61	; 0x3d
   14b84:	str	r3, [sp]
   14b88:	ldr	r3, [pc, #664]	; 14e28 <print_all_distinct_dims@@Base+0x34c>
   14b8c:	ldr	r1, [pc, #668]	; 14e30 <print_all_distinct_dims@@Base+0x354>
   14b90:	mvn	r0, #0
   14b94:	bl	12244 <coda_set_error@plt>
   14b98:	bl	1a55c <handle_coda_error@@Base>
   14b9c:	ldr	r2, [pc, #636]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14ba0:	ldr	r3, [fp, #-16]
   14ba4:	lsl	r3, r3, #2
   14ba8:	add	r3, r2, r3
   14bac:	ldr	r3, [r3, #4]
   14bb0:	add	r3, r3, #1
   14bb4:	lsl	r3, r3, #2
   14bb8:	mov	r2, r3
   14bbc:	mov	r1, #0
   14bc0:	ldr	r0, [fp, #-12]
   14bc4:	bl	124a8 <memset@plt>
   14bc8:	mov	r3, #0
   14bcc:	str	r3, [fp, #-8]
   14bd0:	b	14c50 <print_all_distinct_dims@@Base+0x174>
   14bd4:	ldr	r2, [pc, #580]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14bd8:	ldr	r3, [fp, #-16]
   14bdc:	add	r3, r3, #26
   14be0:	lsl	r3, r3, #2
   14be4:	add	r3, r2, r3
   14be8:	ldr	r2, [r3, #4]
   14bec:	ldr	r3, [fp, #-8]
   14bf0:	lsl	r3, r3, #2
   14bf4:	add	r3, r2, r3
   14bf8:	ldr	r3, [r3]
   14bfc:	cmp	r3, #0
   14c00:	blt	14c44 <print_all_distinct_dims@@Base+0x168>
   14c04:	ldr	r2, [pc, #532]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14c08:	ldr	r3, [fp, #-16]
   14c0c:	add	r3, r3, #26
   14c10:	lsl	r3, r3, #2
   14c14:	add	r3, r2, r3
   14c18:	ldr	r2, [r3, #4]
   14c1c:	ldr	r3, [fp, #-8]
   14c20:	lsl	r3, r3, #2
   14c24:	add	r3, r2, r3
   14c28:	ldr	r3, [r3]
   14c2c:	lsl	r3, r3, #2
   14c30:	ldr	r2, [fp, #-12]
   14c34:	add	r3, r2, r3
   14c38:	ldr	r2, [r3]
   14c3c:	add	r2, r2, #1
   14c40:	str	r2, [r3]
   14c44:	ldr	r3, [fp, #-8]
   14c48:	add	r3, r3, #1
   14c4c:	str	r3, [fp, #-8]
   14c50:	ldr	r3, [fp, #-8]
   14c54:	mov	r0, r3
   14c58:	asr	r1, r0, #31
   14c5c:	ldr	r2, [pc, #444]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14c60:	ldr	r3, [fp, #-16]
   14c64:	add	r3, r3, #34	; 0x22
   14c68:	lsl	r3, r3, #2
   14c6c:	add	r3, r2, r3
   14c70:	ldr	r3, [r3, #4]
   14c74:	sub	r3, r3, #1
   14c78:	ldr	r2, [pc, #416]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14c7c:	add	r3, r3, #30
   14c80:	lsl	r3, r3, #3
   14c84:	add	r3, r2, r3
   14c88:	ldrd	r2, [r3]
   14c8c:	cmp	r0, r2
   14c90:	sbcs	r3, r1, r3
   14c94:	blt	14bd4 <print_all_distinct_dims@@Base+0xf8>
   14c98:	ldr	r3, [fp, #-16]
   14c9c:	add	r3, r3, #1
   14ca0:	mov	r1, r3
   14ca4:	ldr	r0, [pc, #392]	; 14e34 <print_all_distinct_dims@@Base+0x358>
   14ca8:	bl	12220 <printf@plt>
   14cac:	ldr	r2, [pc, #364]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14cb0:	ldr	r3, [fp, #-16]
   14cb4:	add	r3, r3, #8
   14cb8:	lsl	r3, r3, #2
   14cbc:	add	r3, r2, r3
   14cc0:	ldr	r3, [r3, #4]
   14cc4:	str	r3, [fp, #-8]
   14cc8:	b	14d00 <print_all_distinct_dims@@Base+0x224>
   14ccc:	ldr	r3, [fp, #-8]
   14cd0:	lsl	r3, r3, #2
   14cd4:	ldr	r2, [fp, #-12]
   14cd8:	add	r3, r2, r3
   14cdc:	ldr	r3, [r3]
   14ce0:	cmp	r3, #0
   14ce4:	ble	14cf4 <print_all_distinct_dims@@Base+0x218>
   14ce8:	ldr	r1, [fp, #-8]
   14cec:	ldr	r0, [pc, #324]	; 14e38 <print_all_distinct_dims@@Base+0x35c>
   14cf0:	bl	12220 <printf@plt>
   14cf4:	ldr	r3, [fp, #-8]
   14cf8:	add	r3, r3, #1
   14cfc:	str	r3, [fp, #-8]
   14d00:	ldr	r2, [pc, #280]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14d04:	ldr	r3, [fp, #-16]
   14d08:	lsl	r3, r3, #2
   14d0c:	add	r3, r2, r3
   14d10:	ldr	r2, [r3, #4]
   14d14:	ldr	r3, [fp, #-8]
   14d18:	cmp	r2, r3
   14d1c:	bgt	14ccc <print_all_distinct_dims@@Base+0x1f0>
   14d20:	ldr	r2, [pc, #248]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14d24:	ldr	r3, [fp, #-16]
   14d28:	lsl	r3, r3, #2
   14d2c:	add	r3, r2, r3
   14d30:	ldr	r3, [r3, #4]
   14d34:	mov	r1, r3
   14d38:	ldr	r0, [pc, #252]	; 14e3c <print_all_distinct_dims@@Base+0x360>
   14d3c:	bl	12220 <printf@plt>
   14d40:	ldr	r0, [pc, #248]	; 14e40 <print_all_distinct_dims@@Base+0x364>
   14d44:	bl	12220 <printf@plt>
   14d48:	ldr	r2, [pc, #208]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14d4c:	ldr	r3, [fp, #-16]
   14d50:	add	r3, r3, #8
   14d54:	lsl	r3, r3, #2
   14d58:	add	r3, r2, r3
   14d5c:	ldr	r3, [r3, #4]
   14d60:	str	r3, [fp, #-8]
   14d64:	b	14db0 <print_all_distinct_dims@@Base+0x2d4>
   14d68:	ldr	r3, [fp, #-8]
   14d6c:	lsl	r3, r3, #2
   14d70:	ldr	r2, [fp, #-12]
   14d74:	add	r3, r2, r3
   14d78:	ldr	r3, [r3]
   14d7c:	cmp	r3, #0
   14d80:	ble	14da4 <print_all_distinct_dims@@Base+0x2c8>
   14d84:	ldr	r3, [fp, #-8]
   14d88:	lsl	r3, r3, #2
   14d8c:	ldr	r2, [fp, #-12]
   14d90:	add	r3, r2, r3
   14d94:	ldr	r3, [r3]
   14d98:	mov	r1, r3
   14d9c:	ldr	r0, [pc, #148]	; 14e38 <print_all_distinct_dims@@Base+0x35c>
   14da0:	bl	12220 <printf@plt>
   14da4:	ldr	r3, [fp, #-8]
   14da8:	add	r3, r3, #1
   14dac:	str	r3, [fp, #-8]
   14db0:	ldr	r2, [pc, #104]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14db4:	ldr	r3, [fp, #-16]
   14db8:	lsl	r3, r3, #2
   14dbc:	add	r3, r2, r3
   14dc0:	ldr	r2, [r3, #4]
   14dc4:	ldr	r3, [fp, #-8]
   14dc8:	cmp	r2, r3
   14dcc:	bgt	14d68 <print_all_distinct_dims@@Base+0x28c>
   14dd0:	ldr	r2, [pc, #72]	; 14e20 <print_all_distinct_dims@@Base+0x344>
   14dd4:	ldr	r3, [fp, #-16]
   14dd8:	lsl	r3, r3, #2
   14ddc:	add	r3, r2, r3
   14de0:	ldr	r3, [r3, #4]
   14de4:	lsl	r3, r3, #2
   14de8:	ldr	r2, [fp, #-12]
   14dec:	add	r3, r2, r3
   14df0:	ldr	r3, [r3]
   14df4:	mov	r1, r3
   14df8:	ldr	r0, [pc, #60]	; 14e3c <print_all_distinct_dims@@Base+0x360>
   14dfc:	bl	12220 <printf@plt>
   14e00:	mov	r0, #10
   14e04:	bl	124b4 <putchar@plt>
   14e08:	ldr	r0, [fp, #-12]
   14e0c:	bl	1228c <free@plt>
   14e10:	b	14e18 <print_all_distinct_dims@@Base+0x33c>
   14e14:	nop			; (mov r0, r0)
   14e18:	sub	sp, fp, #4
   14e1c:	pop	{fp, pc}
   14e20:	strheq	r0, [r3], -r8
   14e24:	andeq	ip, r1, r8, lsr #30
   14e28:	muleq	r1, r0, sp
   14e2c:	andeq	ip, r1, r4, ror #27
   14e30:	andeq	ip, r1, r0, lsl #28
   14e34:	andeq	ip, r1, r8, lsr lr
   14e38:	andeq	ip, r1, r4, asr #28
   14e3c:	andeq	ip, r1, r8, asr #28
   14e40:	andeq	ip, r1, ip, asr #28
   14e44:	push	{fp, lr}
   14e48:	add	fp, sp, #4
   14e4c:	sub	sp, sp, #120	; 0x78
   14e50:	str	r0, [fp, #-112]	; 0xffffff90
   14e54:	str	r1, [fp, #-116]	; 0xffffff8c
   14e58:	str	r2, [fp, #-120]	; 0xffffff88
   14e5c:	sub	r3, fp, #52	; 0x34
   14e60:	mov	r1, r3
   14e64:	ldr	r0, [pc, #2168]	; 156e4 <print_all_distinct_dims@@Base+0xc08>
   14e68:	bl	1231c <coda_cursor_get_type_class@plt>
   14e6c:	mov	r3, r0
   14e70:	cmp	r3, #0
   14e74:	beq	14e7c <print_all_distinct_dims@@Base+0x3a0>
   14e78:	bl	1a55c <handle_coda_error@@Base>
   14e7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14e80:	cmp	r3, #5
   14e84:	ldrls	pc, [pc, r3, lsl #2]
   14e88:	b	156b8 <print_all_distinct_dims@@Base+0xbdc>
   14e8c:	andeq	r5, r1, r8, lsl r3
   14e90:	andeq	r4, r1, r4, lsr #29
   14e94:			; <UNDEFINED> instruction: 0x000156b8
   14e98:			; <UNDEFINED> instruction: 0x000156b8
   14e9c:	ldrdeq	r5, [r1], -r4
   14ea0:	ldrdeq	r5, [r1], -r4
   14ea4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   14ea8:	mov	r3, r2
   14eac:	lsl	r3, r3, #2
   14eb0:	add	r3, r3, r2
   14eb4:	lsl	r3, r3, #4
   14eb8:	add	r3, r3, #800	; 0x320
   14ebc:	ldr	r2, [pc, #2084]	; 156e8 <print_all_distinct_dims@@Base+0xc0c>
   14ec0:	add	r3, r3, r2
   14ec4:	str	r3, [fp, #-28]	; 0xffffffe4
   14ec8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14ecc:	ldr	r3, [r3]
   14ed0:	str	r3, [fp, #-32]	; 0xffffffe0
   14ed4:	ldr	r3, [pc, #2060]	; 156e8 <print_all_distinct_dims@@Base+0xc0c>
   14ed8:	ldr	r2, [r3, #3360]	; 0xd20
   14edc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   14ee0:	cmp	r2, r3
   14ee4:	bne	15128 <print_all_distinct_dims@@Base+0x64c>
   14ee8:	sub	r2, fp, #104	; 0x68
   14eec:	sub	r3, fp, #56	; 0x38
   14ef0:	mov	r1, r3
   14ef4:	ldr	r0, [pc, #2024]	; 156e4 <print_all_distinct_dims@@Base+0xc08>
   14ef8:	bl	12520 <coda_cursor_get_array_dim@plt>
   14efc:	mov	r3, r0
   14f00:	cmp	r3, #0
   14f04:	beq	14f0c <print_all_distinct_dims@@Base+0x430>
   14f08:	bl	1a55c <handle_coda_error@@Base>
   14f0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f10:	ldr	r2, [r3, #4]
   14f14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14f18:	cmp	r2, r3
   14f1c:	beq	14f34 <print_all_distinct_dims@@Base+0x458>
   14f20:	ldr	r3, [pc, #1988]	; 156ec <print_all_distinct_dims@@Base+0xc10>
   14f24:	mov	r2, #125	; 0x7d
   14f28:	ldr	r1, [pc, #1984]	; 156f0 <print_all_distinct_dims@@Base+0xc14>
   14f2c:	ldr	r0, [pc, #1984]	; 156f4 <print_all_distinct_dims@@Base+0xc18>
   14f30:	bl	12658 <__assert_fail@plt>
   14f34:	mov	r3, #0
   14f38:	str	r3, [fp, #-8]
   14f3c:	b	15110 <print_all_distinct_dims@@Base+0x634>
   14f40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f44:	ldr	r2, [fp, #-8]
   14f48:	add	r2, r2, #2
   14f4c:	ldr	r3, [r3, r2, lsl #2]
   14f50:	cmn	r3, #1
   14f54:	bne	15104 <print_all_distinct_dims@@Base+0x628>
   14f58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14f5c:	ldr	r3, [fp, #-8]
   14f60:	add	r3, r2, r3
   14f64:	ldr	r2, [pc, #1932]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   14f68:	add	r3, r3, #26
   14f6c:	lsl	r3, r3, #2
   14f70:	add	r3, r2, r3
   14f74:	ldr	r2, [r3, #4]
   14f78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f7c:	ldr	r3, [r3, #44]	; 0x2c
   14f80:	lsl	r3, r3, #2
   14f84:	add	r2, r2, r3
   14f88:	ldr	r3, [fp, #-8]
   14f8c:	lsl	r3, r3, #2
   14f90:	sub	r1, fp, #4
   14f94:	add	r3, r1, r3
   14f98:	ldr	r3, [r3, #-100]	; 0xffffff9c
   14f9c:	str	r3, [r2]
   14fa0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14fa4:	ldr	r3, [fp, #-8]
   14fa8:	add	r3, r2, r3
   14fac:	ldr	r2, [pc, #1860]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   14fb0:	lsl	r3, r3, #2
   14fb4:	add	r3, r2, r3
   14fb8:	ldr	r3, [r3, #4]
   14fbc:	cmn	r3, #1
   14fc0:	bne	1502c <print_all_distinct_dims@@Base+0x550>
   14fc4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14fc8:	ldr	r3, [fp, #-8]
   14fcc:	add	r1, r2, r3
   14fd0:	ldr	r3, [fp, #-8]
   14fd4:	lsl	r3, r3, #2
   14fd8:	sub	r2, fp, #4
   14fdc:	add	r3, r2, r3
   14fe0:	ldr	r2, [r3, #-100]	; 0xffffff9c
   14fe4:	ldr	r0, [pc, #1804]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   14fe8:	lsl	r3, r1, #2
   14fec:	add	r3, r0, r3
   14ff0:	str	r2, [r3, #4]
   14ff4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14ff8:	ldr	r3, [fp, #-8]
   14ffc:	add	r1, r2, r3
   15000:	ldr	r3, [fp, #-8]
   15004:	lsl	r3, r3, #2
   15008:	sub	r2, fp, #4
   1500c:	add	r3, r2, r3
   15010:	ldr	r2, [r3, #-100]	; 0xffffff9c
   15014:	ldr	r0, [pc, #1756]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   15018:	add	r3, r1, #8
   1501c:	lsl	r3, r3, #2
   15020:	add	r3, r0, r3
   15024:	str	r2, [r3, #4]
   15028:	b	15104 <print_all_distinct_dims@@Base+0x628>
   1502c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15030:	ldr	r3, [fp, #-8]
   15034:	add	r3, r2, r3
   15038:	ldr	r2, [pc, #1720]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   1503c:	lsl	r3, r3, #2
   15040:	add	r3, r2, r3
   15044:	ldr	r2, [r3, #4]
   15048:	ldr	r3, [fp, #-8]
   1504c:	lsl	r3, r3, #2
   15050:	sub	r1, fp, #4
   15054:	add	r3, r1, r3
   15058:	ldr	r3, [r3, #-100]	; 0xffffff9c
   1505c:	cmp	r2, r3
   15060:	bge	15094 <print_all_distinct_dims@@Base+0x5b8>
   15064:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15068:	ldr	r3, [fp, #-8]
   1506c:	add	r1, r2, r3
   15070:	ldr	r3, [fp, #-8]
   15074:	lsl	r3, r3, #2
   15078:	sub	r2, fp, #4
   1507c:	add	r3, r2, r3
   15080:	ldr	r2, [r3, #-100]	; 0xffffff9c
   15084:	ldr	r0, [pc, #1644]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   15088:	lsl	r3, r1, #2
   1508c:	add	r3, r0, r3
   15090:	str	r2, [r3, #4]
   15094:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15098:	ldr	r3, [fp, #-8]
   1509c:	add	r3, r2, r3
   150a0:	ldr	r2, [pc, #1616]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   150a4:	add	r3, r3, #8
   150a8:	lsl	r3, r3, #2
   150ac:	add	r3, r2, r3
   150b0:	ldr	r2, [r3, #4]
   150b4:	ldr	r3, [fp, #-8]
   150b8:	lsl	r3, r3, #2
   150bc:	sub	r1, fp, #4
   150c0:	add	r3, r1, r3
   150c4:	ldr	r3, [r3, #-100]	; 0xffffff9c
   150c8:	cmp	r2, r3
   150cc:	ble	15104 <print_all_distinct_dims@@Base+0x628>
   150d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   150d4:	ldr	r3, [fp, #-8]
   150d8:	add	r1, r2, r3
   150dc:	ldr	r3, [fp, #-8]
   150e0:	lsl	r3, r3, #2
   150e4:	sub	r2, fp, #4
   150e8:	add	r3, r2, r3
   150ec:	ldr	r2, [r3, #-100]	; 0xffffff9c
   150f0:	ldr	r0, [pc, #1536]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   150f4:	add	r3, r1, #8
   150f8:	lsl	r3, r3, #2
   150fc:	add	r3, r0, r3
   15100:	str	r2, [r3, #4]
   15104:	ldr	r3, [fp, #-8]
   15108:	add	r3, r3, #1
   1510c:	str	r3, [fp, #-8]
   15110:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15114:	ldr	r2, [r3, #4]
   15118:	ldr	r3, [fp, #-8]
   1511c:	cmp	r2, r3
   15120:	bgt	14f40 <print_all_distinct_dims@@Base+0x464>
   15124:	b	156cc <print_all_distinct_dims@@Base+0xbf0>
   15128:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1512c:	cmp	r3, #0
   15130:	bne	15140 <print_all_distinct_dims@@Base+0x664>
   15134:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15138:	mov	r2, #0
   1513c:	str	r2, [r3, #44]	; 0x2c
   15140:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15144:	add	r2, r3, #1
   15148:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1514c:	ldr	r3, [r3, #44]	; 0x2c
   15150:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15154:	ldr	r1, [r1, #40]	; 0x28
   15158:	mul	r1, r1, r3
   1515c:	ldr	r0, [pc, #1412]	; 156e8 <print_all_distinct_dims@@Base+0xc0c>
   15160:	mov	r3, r2
   15164:	lsl	r3, r3, #2
   15168:	add	r3, r3, r2
   1516c:	lsl	r3, r3, #4
   15170:	add	r3, r0, r3
   15174:	add	r3, r3, #844	; 0x34c
   15178:	str	r1, [r3]
   1517c:	mov	r3, #1
   15180:	str	r3, [fp, #-12]
   15184:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15188:	str	r3, [fp, #-16]
   1518c:	b	15210 <print_all_distinct_dims@@Base+0x734>
   15190:	ldr	r2, [pc, #1376]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   15194:	ldr	r3, [fp, #-16]
   15198:	add	r3, r3, #18
   1519c:	ldr	r3, [r2, r3, lsl #2]
   151a0:	cmp	r3, #0
   151a4:	beq	151e4 <print_all_distinct_dims@@Base+0x708>
   151a8:	ldr	r2, [pc, #1352]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   151ac:	ldr	r3, [fp, #-16]
   151b0:	add	r3, r3, #26
   151b4:	lsl	r3, r3, #2
   151b8:	add	r3, r2, r3
   151bc:	ldr	r2, [r3, #4]
   151c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   151c4:	ldr	r3, [r3, #44]	; 0x2c
   151c8:	lsl	r3, r3, #2
   151cc:	add	r3, r2, r3
   151d0:	ldr	r2, [r3]
   151d4:	ldr	r3, [fp, #-12]
   151d8:	mul	r3, r2, r3
   151dc:	str	r3, [fp, #-12]
   151e0:	b	15204 <print_all_distinct_dims@@Base+0x728>
   151e4:	ldr	r2, [pc, #1292]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   151e8:	ldr	r3, [fp, #-16]
   151ec:	lsl	r3, r3, #2
   151f0:	add	r3, r2, r3
   151f4:	ldr	r2, [r3, #4]
   151f8:	ldr	r3, [fp, #-12]
   151fc:	mul	r3, r2, r3
   15200:	str	r3, [fp, #-12]
   15204:	ldr	r3, [fp, #-16]
   15208:	add	r3, r3, #1
   1520c:	str	r3, [fp, #-16]
   15210:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15214:	ldr	r2, [r3, #4]
   15218:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1521c:	add	r2, r2, r3
   15220:	ldr	r3, [fp, #-16]
   15224:	cmp	r2, r3
   15228:	bgt	15190 <print_all_distinct_dims@@Base+0x6b4>
   1522c:	ldr	r3, [fp, #-12]
   15230:	cmp	r3, #0
   15234:	ble	156cc <print_all_distinct_dims@@Base+0xbf0>
   15238:	ldr	r0, [pc, #1188]	; 156e4 <print_all_distinct_dims@@Base+0xc08>
   1523c:	bl	12364 <coda_cursor_goto_first_array_element@plt>
   15240:	mov	r3, r0
   15244:	cmp	r3, #0
   15248:	beq	15250 <print_all_distinct_dims@@Base+0x774>
   1524c:	bl	1a55c <handle_coda_error@@Base>
   15250:	mov	r3, #0
   15254:	str	r3, [fp, #-20]	; 0xffffffec
   15258:	b	152fc <print_all_distinct_dims@@Base+0x820>
   1525c:	ldr	r3, [fp, #-112]	; 0xffffff90
   15260:	add	r0, r3, #1
   15264:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15268:	add	r3, r3, #1
   1526c:	ldr	r2, [fp, #-120]	; 0xffffff88
   15270:	mov	r1, r3
   15274:	bl	14e44 <print_all_distinct_dims@@Base+0x368>
   15278:	ldr	r3, [fp, #-12]
   1527c:	sub	r2, r3, #1
   15280:	ldr	r3, [fp, #-20]	; 0xffffffec
   15284:	cmp	r2, r3
   15288:	ble	152f0 <print_all_distinct_dims@@Base+0x814>
   1528c:	ldr	r0, [pc, #1104]	; 156e4 <print_all_distinct_dims@@Base+0xc08>
   15290:	bl	12460 <coda_cursor_goto_next_array_element@plt>
   15294:	mov	r3, r0
   15298:	cmp	r3, #0
   1529c:	beq	152a4 <print_all_distinct_dims@@Base+0x7c8>
   152a0:	bl	1a55c <handle_coda_error@@Base>
   152a4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   152a8:	add	r2, r3, #1
   152ac:	ldr	r1, [pc, #1076]	; 156e8 <print_all_distinct_dims@@Base+0xc0c>
   152b0:	mov	r3, r2
   152b4:	lsl	r3, r3, #2
   152b8:	add	r3, r3, r2
   152bc:	lsl	r3, r3, #4
   152c0:	add	r3, r1, r3
   152c4:	add	r3, r3, #844	; 0x34c
   152c8:	ldr	r3, [r3]
   152cc:	add	r1, r3, #1
   152d0:	ldr	r0, [pc, #1040]	; 156e8 <print_all_distinct_dims@@Base+0xc0c>
   152d4:	mov	r3, r2
   152d8:	lsl	r3, r3, #2
   152dc:	add	r3, r3, r2
   152e0:	lsl	r3, r3, #4
   152e4:	add	r3, r0, r3
   152e8:	add	r3, r3, #844	; 0x34c
   152ec:	str	r1, [r3]
   152f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   152f4:	add	r3, r3, #1
   152f8:	str	r3, [fp, #-20]	; 0xffffffec
   152fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   15300:	ldr	r3, [fp, #-12]
   15304:	cmp	r2, r3
   15308:	blt	1525c <print_all_distinct_dims@@Base+0x780>
   1530c:	ldr	r0, [pc, #976]	; 156e4 <print_all_distinct_dims@@Base+0xc08>
   15310:	bl	123f4 <coda_cursor_goto_parent@plt>
   15314:	b	156cc <print_all_distinct_dims@@Base+0xbf0>
   15318:	ldr	r2, [pc, #968]	; 156e8 <print_all_distinct_dims@@Base+0xc0c>
   1531c:	ldr	r3, [fp, #-120]	; 0xffffff88
   15320:	add	r3, r3, #872	; 0x368
   15324:	lsl	r3, r3, #2
   15328:	add	r3, r2, r3
   1532c:	ldr	r3, [r3, #4]
   15330:	sub	r2, fp, #60	; 0x3c
   15334:	mov	r1, r3
   15338:	ldr	r0, [pc, #932]	; 156e4 <print_all_distinct_dims@@Base+0xc08>
   1533c:	bl	1222c <coda_cursor_get_record_field_available_status@plt>
   15340:	mov	r3, r0
   15344:	cmp	r3, #0
   15348:	beq	15350 <print_all_distinct_dims@@Base+0x874>
   1534c:	bl	1a55c <handle_coda_error@@Base>
   15350:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15354:	cmp	r3, #0
   15358:	beq	153b8 <print_all_distinct_dims@@Base+0x8dc>
   1535c:	ldr	r2, [pc, #900]	; 156e8 <print_all_distinct_dims@@Base+0xc0c>
   15360:	ldr	r3, [fp, #-120]	; 0xffffff88
   15364:	add	r3, r3, #872	; 0x368
   15368:	lsl	r3, r3, #2
   1536c:	add	r3, r2, r3
   15370:	ldr	r3, [r3, #4]
   15374:	mov	r1, r3
   15378:	ldr	r0, [pc, #868]	; 156e4 <print_all_distinct_dims@@Base+0xc08>
   1537c:	bl	12394 <coda_cursor_goto_record_field_by_index@plt>
   15380:	mov	r3, r0
   15384:	cmp	r3, #0
   15388:	beq	15390 <print_all_distinct_dims@@Base+0x8b4>
   1538c:	bl	1a55c <handle_coda_error@@Base>
   15390:	ldr	r3, [fp, #-112]	; 0xffffff90
   15394:	add	r0, r3, #1
   15398:	ldr	r3, [fp, #-120]	; 0xffffff88
   1539c:	add	r3, r3, #1
   153a0:	mov	r2, r3
   153a4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   153a8:	bl	14e44 <print_all_distinct_dims@@Base+0x368>
   153ac:	ldr	r0, [pc, #816]	; 156e4 <print_all_distinct_dims@@Base+0xc08>
   153b0:	bl	123f4 <coda_cursor_goto_parent@plt>
   153b4:	b	156d8 <print_all_distinct_dims@@Base+0xbfc>
   153b8:	ldr	r3, [pc, #808]	; 156e8 <print_all_distinct_dims@@Base+0xc0c>
   153bc:	ldr	r2, [r3, #3360]	; 0xd20
   153c0:	mov	r3, r2
   153c4:	lsl	r3, r3, #2
   153c8:	add	r3, r3, r2
   153cc:	lsl	r3, r3, #4
   153d0:	add	r3, r3, #800	; 0x320
   153d4:	ldr	r2, [pc, #780]	; 156e8 <print_all_distinct_dims@@Base+0xc0c>
   153d8:	add	r3, r3, r2
   153dc:	str	r3, [fp, #-36]	; 0xffffffdc
   153e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   153e4:	ldr	r3, [r3]
   153e8:	str	r3, [fp, #-40]	; 0xffffffd8
   153ec:	mov	r3, #0
   153f0:	str	r3, [fp, #-24]	; 0xffffffe8
   153f4:	b	154bc <print_all_distinct_dims@@Base+0x9e0>
   153f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   153fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15400:	add	r2, r2, #2
   15404:	ldr	r3, [r3, r2, lsl #2]
   15408:	cmn	r3, #1
   1540c:	bne	154b0 <print_all_distinct_dims@@Base+0x9d4>
   15410:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15414:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15418:	add	r3, r2, r3
   1541c:	ldr	r2, [pc, #724]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   15420:	add	r3, r3, #26
   15424:	lsl	r3, r3, #2
   15428:	add	r3, r2, r3
   1542c:	ldr	r2, [r3, #4]
   15430:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15434:	ldr	r3, [r3, #44]	; 0x2c
   15438:	lsl	r3, r3, #2
   1543c:	add	r3, r2, r3
   15440:	mov	r2, #0
   15444:	str	r2, [r3]
   15448:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1544c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15450:	add	r3, r2, r3
   15454:	ldr	r2, [pc, #668]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   15458:	lsl	r3, r3, #2
   1545c:	add	r3, r2, r3
   15460:	ldr	r3, [r3, #4]
   15464:	cmn	r3, #1
   15468:	bne	1548c <print_all_distinct_dims@@Base+0x9b0>
   1546c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15474:	add	r3, r2, r3
   15478:	ldr	r2, [pc, #632]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   1547c:	lsl	r3, r3, #2
   15480:	add	r3, r2, r3
   15484:	mov	r2, #0
   15488:	str	r2, [r3, #4]
   1548c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15494:	add	r3, r2, r3
   15498:	ldr	r2, [pc, #600]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   1549c:	add	r3, r3, #8
   154a0:	lsl	r3, r3, #2
   154a4:	add	r3, r2, r3
   154a8:	mov	r2, #0
   154ac:	str	r2, [r3, #4]
   154b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   154b4:	add	r3, r3, #1
   154b8:	str	r3, [fp, #-24]	; 0xffffffe8
   154bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   154c0:	ldr	r2, [r3, #4]
   154c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   154c8:	cmp	r2, r3
   154cc:	bgt	153f8 <print_all_distinct_dims@@Base+0x91c>
   154d0:	b	156d8 <print_all_distinct_dims@@Base+0xbfc>
   154d4:	ldr	r3, [pc, #524]	; 156e8 <print_all_distinct_dims@@Base+0xc0c>
   154d8:	ldr	r2, [r3, #3360]	; 0xd20
   154dc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   154e0:	cmp	r2, r3
   154e4:	beq	154fc <print_all_distinct_dims@@Base+0xa20>
   154e8:	ldr	r3, [pc, #508]	; 156ec <print_all_distinct_dims@@Base+0xc10>
   154ec:	mov	r2, #252	; 0xfc
   154f0:	ldr	r1, [pc, #504]	; 156f0 <print_all_distinct_dims@@Base+0xc14>
   154f4:	ldr	r0, [pc, #512]	; 156fc <print_all_distinct_dims@@Base+0xc20>
   154f8:	bl	12658 <__assert_fail@plt>
   154fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15500:	cmp	r3, #4
   15504:	bne	1553c <print_all_distinct_dims@@Base+0xa60>
   15508:	sub	r3, fp, #72	; 0x48
   1550c:	mov	r1, r3
   15510:	ldr	r0, [pc, #460]	; 156e4 <print_all_distinct_dims@@Base+0xc08>
   15514:	bl	12424 <coda_cursor_get_string_length@plt>
   15518:	mov	r3, r0
   1551c:	cmp	r3, #0
   15520:	beq	15528 <print_all_distinct_dims@@Base+0xa4c>
   15524:	bl	1a55c <handle_coda_error@@Base>
   15528:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1552c:	mov	r2, r3
   15530:	asr	r3, r2, #31
   15534:	strd	r2, [fp, #-68]	; 0xffffffbc
   15538:	b	1555c <print_all_distinct_dims@@Base+0xa80>
   1553c:	sub	r3, fp, #68	; 0x44
   15540:	mov	r1, r3
   15544:	ldr	r0, [pc, #408]	; 156e4 <print_all_distinct_dims@@Base+0xc08>
   15548:	bl	121c0 <coda_cursor_get_byte_size@plt>
   1554c:	mov	r3, r0
   15550:	cmp	r3, #0
   15554:	beq	1555c <print_all_distinct_dims@@Base+0xa80>
   15558:	bl	1a55c <handle_coda_error@@Base>
   1555c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   15560:	mov	r3, r2
   15564:	lsl	r3, r3, #2
   15568:	add	r3, r3, r2
   1556c:	lsl	r3, r3, #4
   15570:	add	r3, r3, #800	; 0x320
   15574:	ldr	r2, [pc, #364]	; 156e8 <print_all_distinct_dims@@Base+0xc0c>
   15578:	add	r3, r3, r2
   1557c:	str	r3, [fp, #-44]	; 0xffffffd4
   15580:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15584:	ldr	r3, [r3]
   15588:	str	r3, [fp, #-48]	; 0xffffffd0
   1558c:	ldr	r2, [pc, #356]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   15590:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15594:	add	r3, r3, #26
   15598:	lsl	r3, r3, #2
   1559c:	add	r3, r2, r3
   155a0:	ldr	r2, [r3, #4]
   155a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   155a8:	ldr	r3, [r3, #44]	; 0x2c
   155ac:	lsl	r3, r3, #2
   155b0:	add	r1, r2, r3
   155b4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   155b8:	mov	r3, r2
   155bc:	str	r3, [r1]
   155c0:	ldr	r2, [pc, #304]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   155c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   155c8:	lsl	r3, r3, #2
   155cc:	add	r3, r2, r3
   155d0:	ldr	r3, [r3, #4]
   155d4:	cmn	r3, #1
   155d8:	bne	1561c <print_all_distinct_dims@@Base+0xb40>
   155dc:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   155e0:	mov	r1, r2
   155e4:	ldr	r2, [pc, #268]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   155e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   155ec:	lsl	r3, r3, #2
   155f0:	add	r3, r2, r3
   155f4:	str	r1, [r3, #4]
   155f8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   155fc:	mov	r1, r2
   15600:	ldr	r2, [pc, #240]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   15604:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15608:	add	r3, r3, #8
   1560c:	lsl	r3, r3, #2
   15610:	add	r3, r2, r3
   15614:	str	r1, [r3, #4]
   15618:	b	156d4 <print_all_distinct_dims@@Base+0xbf8>
   1561c:	ldr	r2, [pc, #212]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   15620:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15624:	lsl	r3, r3, #2
   15628:	add	r3, r2, r3
   1562c:	ldr	r3, [r3, #4]
   15630:	mov	r0, r3
   15634:	asr	r1, r0, #31
   15638:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1563c:	cmp	r0, r2
   15640:	sbcs	r3, r1, r3
   15644:	bge	15664 <print_all_distinct_dims@@Base+0xb88>
   15648:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1564c:	mov	r1, r2
   15650:	ldr	r2, [pc, #160]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   15654:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15658:	lsl	r3, r3, #2
   1565c:	add	r3, r2, r3
   15660:	str	r1, [r3, #4]
   15664:	ldr	r2, [pc, #140]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   15668:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1566c:	add	r3, r3, #8
   15670:	lsl	r3, r3, #2
   15674:	add	r3, r2, r3
   15678:	ldr	r3, [r3, #4]
   1567c:	mov	r2, r3
   15680:	asr	r3, r2, #31
   15684:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   15688:	cmp	r0, r2
   1568c:	sbcs	r3, r1, r3
   15690:	bge	156d4 <print_all_distinct_dims@@Base+0xbf8>
   15694:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15698:	mov	r1, r2
   1569c:	ldr	r2, [pc, #84]	; 156f8 <print_all_distinct_dims@@Base+0xc1c>
   156a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   156a4:	add	r3, r3, #8
   156a8:	lsl	r3, r3, #2
   156ac:	add	r3, r2, r3
   156b0:	str	r1, [r3, #4]
   156b4:	b	156d4 <print_all_distinct_dims@@Base+0xbf8>
   156b8:	ldr	r3, [pc, #44]	; 156ec <print_all_distinct_dims@@Base+0xc10>
   156bc:	ldr	r2, [pc, #60]	; 15700 <print_all_distinct_dims@@Base+0xc24>
   156c0:	ldr	r1, [pc, #40]	; 156f0 <print_all_distinct_dims@@Base+0xc14>
   156c4:	ldr	r0, [pc, #56]	; 15704 <print_all_distinct_dims@@Base+0xc28>
   156c8:	bl	12658 <__assert_fail@plt>
   156cc:	nop			; (mov r0, r0)
   156d0:	b	156d8 <print_all_distinct_dims@@Base+0xbfc>
   156d4:	nop			; (mov r0, r0)
   156d8:	nop			; (mov r0, r0)
   156dc:	sub	sp, fp, #4
   156e0:	pop	{fp, pc}
   156e4:	andeq	pc, r2, r0, lsl #5
   156e8:	strdeq	pc, [r2], -r0
   156ec:	andeq	ip, r1, r0, asr #30
   156f0:	muleq	r1, r0, sp
   156f4:	andeq	ip, r1, r4, asr lr
   156f8:	strheq	r0, [r3], -r8
   156fc:	andeq	ip, r1, r8, ror lr
   15700:	andeq	r0, r0, r6, lsr #2
   15704:	andeq	ip, r1, r0, lsr #29

00015708 <dim_enter_array@@Base>:
   15708:	push	{r4, r5, fp, lr}
   1570c:	add	fp, sp, #12
   15710:	sub	sp, sp, #112	; 0x70
   15714:	ldr	r3, [pc, #3556]	; 16500 <dim_enter_array@@Base+0xdf8>
   15718:	ldr	r2, [r3, #3360]	; 0xd20
   1571c:	mov	r3, r2
   15720:	lsl	r3, r3, #2
   15724:	add	r3, r3, r2
   15728:	lsl	r3, r3, #4
   1572c:	add	r3, r3, #800	; 0x320
   15730:	ldr	r2, [pc, #3528]	; 16500 <dim_enter_array@@Base+0xdf8>
   15734:	add	r3, r3, r2
   15738:	str	r3, [fp, #-56]	; 0xffffffc8
   1573c:	ldr	r3, [pc, #3516]	; 16500 <dim_enter_array@@Base+0xdf8>
   15740:	ldr	r3, [r3, #136]	; 0x88
   15744:	ldr	r2, [pc, #3508]	; 16500 <dim_enter_array@@Base+0xdf8>
   15748:	add	r3, r3, #2
   1574c:	ldr	r3, [r2, r3, lsl #2]
   15750:	sub	r2, fp, #64	; 0x40
   15754:	mov	r1, r2
   15758:	mov	r0, r3
   1575c:	bl	12664 <coda_type_get_class@plt>
   15760:	mov	r3, r0
   15764:	cmp	r3, #0
   15768:	beq	15770 <dim_enter_array@@Base+0x68>
   1576c:	bl	1a55c <handle_coda_error@@Base>
   15770:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15774:	sub	r3, r3, #1
   15778:	cmp	r3, #5
   1577c:	ldrls	pc, [pc, r3, lsl #2]
   15780:	b	159a0 <dim_enter_array@@Base+0x298>
   15784:	muleq	r1, ip, r7
   15788:	andeq	r5, r1, r0, lsr #19
   1578c:	andeq	r5, r1, r0, lsr #19
   15790:	andeq	r5, r1, r0, lsr #17
   15794:	strdeq	r5, [r1], -r0
   15798:	andeq	r5, r1, ip, lsr #16
   1579c:	ldr	r3, [pc, #3420]	; 16500 <dim_enter_array@@Base+0xdf8>
   157a0:	ldr	r3, [r3, #136]	; 0x88
   157a4:	ldr	r2, [pc, #3412]	; 16500 <dim_enter_array@@Base+0xdf8>
   157a8:	add	r3, r3, #2
   157ac:	ldr	r3, [r2, r3, lsl #2]
   157b0:	sub	r2, fp, #116	; 0x74
   157b4:	sub	r1, fp, #68	; 0x44
   157b8:	mov	r0, r3
   157bc:	bl	12598 <coda_type_get_array_dim@plt>
   157c0:	mov	r3, r0
   157c4:	cmp	r3, #0
   157c8:	beq	157d0 <dim_enter_array@@Base+0xc8>
   157cc:	bl	1a55c <handle_coda_error@@Base>
   157d0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   157d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   157d8:	str	r2, [r3, #4]
   157dc:	mov	r3, #0
   157e0:	str	r3, [fp, #-40]	; 0xffffffd8
   157e4:	b	15818 <dim_enter_array@@Base+0x110>
   157e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   157ec:	lsl	r3, r3, #2
   157f0:	sub	r2, fp, #12
   157f4:	add	r3, r2, r3
   157f8:	ldr	r1, [r3, #-104]	; 0xffffff98
   157fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15800:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15804:	add	r2, r2, #2
   15808:	str	r1, [r3, r2, lsl #2]
   1580c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15810:	add	r3, r3, #1
   15814:	str	r3, [fp, #-40]	; 0xffffffd8
   15818:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1581c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15820:	cmp	r2, r3
   15824:	blt	157e8 <dim_enter_array@@Base+0xe0>
   15828:	b	159b4 <dim_enter_array@@Base+0x2ac>
   1582c:	ldr	r3, [pc, #3276]	; 16500 <dim_enter_array@@Base+0xdf8>
   15830:	ldr	r3, [r3, #136]	; 0x88
   15834:	ldr	r2, [pc, #3268]	; 16500 <dim_enter_array@@Base+0xdf8>
   15838:	add	r3, r3, #2
   1583c:	ldr	r3, [r2, r3, lsl #2]
   15840:	sub	r2, fp, #72	; 0x48
   15844:	mov	r1, r2
   15848:	mov	r0, r3
   1584c:	bl	124cc <coda_type_get_special_type@plt>
   15850:	mov	r3, r0
   15854:	cmp	r3, #0
   15858:	beq	15860 <dim_enter_array@@Base+0x158>
   1585c:	bl	1a55c <handle_coda_error@@Base>
   15860:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15864:	cmp	r3, #3
   15868:	bne	1588c <dim_enter_array@@Base+0x184>
   1586c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15870:	mov	r2, #1
   15874:	str	r2, [r3, #4]
   15878:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1587c:	mov	r2, #2
   15880:	str	r2, [r3, #8]
   15884:	nop			; (mov r0, r0)
   15888:	b	159b4 <dim_enter_array@@Base+0x2ac>
   1588c:	ldr	r3, [pc, #3184]	; 16504 <dim_enter_array@@Base+0xdfc>
   15890:	ldr	r2, [pc, #3184]	; 16508 <dim_enter_array@@Base+0xe00>
   15894:	ldr	r1, [pc, #3184]	; 1650c <dim_enter_array@@Base+0xe04>
   15898:	ldr	r0, [pc, #3184]	; 16510 <dim_enter_array@@Base+0xe08>
   1589c:	bl	12658 <__assert_fail@plt>
   158a0:	ldr	r3, [pc, #3160]	; 16500 <dim_enter_array@@Base+0xdf8>
   158a4:	ldr	r3, [r3, #136]	; 0x88
   158a8:	ldr	r2, [pc, #3152]	; 16500 <dim_enter_array@@Base+0xdf8>
   158ac:	add	r3, r3, #2
   158b0:	ldr	r3, [r2, r3, lsl #2]
   158b4:	sub	r2, fp, #76	; 0x4c
   158b8:	mov	r1, r2
   158bc:	mov	r0, r3
   158c0:	bl	12508 <coda_type_get_string_length@plt>
   158c4:	mov	r3, r0
   158c8:	cmp	r3, #0
   158cc:	beq	158d4 <dim_enter_array@@Base+0x1cc>
   158d0:	bl	1a55c <handle_coda_error@@Base>
   158d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   158d8:	mov	r2, #1
   158dc:	str	r2, [r3, #4]
   158e0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   158e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   158e8:	str	r2, [r3, #8]
   158ec:	b	159b4 <dim_enter_array@@Base+0x2ac>
   158f0:	ldr	r3, [pc, #3080]	; 16500 <dim_enter_array@@Base+0xdf8>
   158f4:	ldr	r3, [r3, #136]	; 0x88
   158f8:	ldr	r2, [pc, #3072]	; 16500 <dim_enter_array@@Base+0xdf8>
   158fc:	add	r3, r3, #2
   15900:	ldr	r3, [r2, r3, lsl #2]
   15904:	sub	r2, fp, #84	; 0x54
   15908:	mov	r1, r2
   1590c:	mov	r0, r3
   15910:	bl	122f8 <coda_type_get_bit_size@plt>
   15914:	mov	r3, r0
   15918:	cmp	r3, #0
   1591c:	beq	15924 <dim_enter_array@@Base+0x21c>
   15920:	bl	1a55c <handle_coda_error@@Base>
   15924:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15928:	mov	r2, #1
   1592c:	str	r2, [r3, #4]
   15930:	ldrd	r2, [fp, #-84]	; 0xffffffac
   15934:	cmp	r2, #0
   15938:	sbcs	r3, r3, #0
   1593c:	blt	15990 <dim_enter_array@@Base+0x288>
   15940:	ldrd	r2, [fp, #-84]	; 0xffffffac
   15944:	lsr	r4, r2, #3
   15948:	orr	r4, r4, r3, lsl #29
   1594c:	asr	r5, r3, #3
   15950:	mov	ip, r4
   15954:	ldrd	r2, [fp, #-84]	; 0xffffffac
   15958:	mov	r0, #7
   1595c:	mov	r1, #0
   15960:	and	r2, r2, r0
   15964:	and	r3, r3, r1
   15968:	orrs	r3, r2, r3
   1596c:	beq	15978 <dim_enter_array@@Base+0x270>
   15970:	mov	r3, #1
   15974:	b	1597c <dim_enter_array@@Base+0x274>
   15978:	mov	r3, #0
   1597c:	add	r3, ip, r3
   15980:	mov	r2, r3
   15984:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15988:	str	r2, [r3, #8]
   1598c:	b	159b4 <dim_enter_array@@Base+0x2ac>
   15990:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15994:	mvn	r2, #0
   15998:	str	r2, [r3, #8]
   1599c:	b	159b4 <dim_enter_array@@Base+0x2ac>
   159a0:	ldr	r3, [pc, #2908]	; 16504 <dim_enter_array@@Base+0xdfc>
   159a4:	ldr	r2, [pc, #2920]	; 16514 <dim_enter_array@@Base+0xe0c>
   159a8:	ldr	r1, [pc, #2908]	; 1650c <dim_enter_array@@Base+0xe04>
   159ac:	ldr	r0, [pc, #2908]	; 16510 <dim_enter_array@@Base+0xe08>
   159b0:	bl	12658 <__assert_fail@plt>
   159b4:	ldr	r3, [pc, #2908]	; 16518 <dim_enter_array@@Base+0xe10>
   159b8:	ldr	r3, [r3]
   159bc:	cmp	r3, #0
   159c0:	bne	159ec <dim_enter_array@@Base+0x2e4>
   159c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   159c8:	mvn	r2, #0
   159cc:	str	r2, [r3]
   159d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   159d4:	mov	r2, #0
   159d8:	str	r2, [r3, #40]	; 0x28
   159dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   159e0:	mov	r2, #0
   159e4:	str	r2, [r3, #44]	; 0x2c
   159e8:	b	164f8 <dim_enter_array@@Base+0xdf0>
   159ec:	ldr	r3, [pc, #2856]	; 1651c <dim_enter_array@@Base+0xe14>
   159f0:	ldr	r3, [r3]
   159f4:	str	r3, [fp, #-60]	; 0xffffffc4
   159f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   159fc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15a00:	str	r2, [r3]
   15a04:	ldr	r3, [pc, #2832]	; 1651c <dim_enter_array@@Base+0xe14>
   15a08:	ldr	r2, [r3]
   15a0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15a10:	ldr	r3, [r3, #4]
   15a14:	add	r3, r2, r3
   15a18:	cmp	r3, #8
   15a1c:	ble	15a34 <dim_enter_array@@Base+0x32c>
   15a20:	ldr	r3, [pc, #2780]	; 16504 <dim_enter_array@@Base+0xdfc>
   15a24:	ldr	r2, [pc, #2804]	; 16520 <dim_enter_array@@Base+0xe18>
   15a28:	ldr	r1, [pc, #2780]	; 1650c <dim_enter_array@@Base+0xe04>
   15a2c:	ldr	r0, [pc, #2800]	; 16524 <dim_enter_array@@Base+0xe1c>
   15a30:	bl	12658 <__assert_fail@plt>
   15a34:	ldr	r3, [pc, #2784]	; 1651c <dim_enter_array@@Base+0xe14>
   15a38:	ldr	r2, [r3]
   15a3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15a40:	ldr	r3, [r3, #4]
   15a44:	add	r3, r2, r3
   15a48:	ldr	r2, [pc, #2764]	; 1651c <dim_enter_array@@Base+0xe14>
   15a4c:	str	r3, [r2]
   15a50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15a54:	cmp	r3, #0
   15a58:	ble	15aa0 <dim_enter_array@@Base+0x398>
   15a5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15a60:	sub	r3, r3, #1
   15a64:	ldr	r2, [pc, #2736]	; 1651c <dim_enter_array@@Base+0xe14>
   15a68:	add	r3, r3, #30
   15a6c:	lsl	r3, r3, #3
   15a70:	add	r3, r2, r3
   15a74:	ldrd	r2, [r3]
   15a78:	strd	r2, [fp, #-20]	; 0xffffffec
   15a7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15a80:	sub	r3, r3, #1
   15a84:	ldr	r2, [pc, #2704]	; 1651c <dim_enter_array@@Base+0xe14>
   15a88:	add	r3, r3, #38	; 0x26
   15a8c:	lsl	r3, r3, #3
   15a90:	add	r3, r2, r3
   15a94:	ldrd	r2, [r3]
   15a98:	strd	r2, [fp, #-28]	; 0xffffffe4
   15a9c:	b	15ab8 <dim_enter_array@@Base+0x3b0>
   15aa0:	mov	r2, #1
   15aa4:	mov	r3, #0
   15aa8:	strd	r2, [fp, #-20]	; 0xffffffec
   15aac:	mov	r2, #1
   15ab0:	mov	r3, #0
   15ab4:	strd	r2, [fp, #-28]	; 0xffffffe4
   15ab8:	mov	r3, #0
   15abc:	str	r3, [fp, #-32]	; 0xffffffe0
   15ac0:	mov	r3, #0
   15ac4:	str	r3, [fp, #-36]	; 0xffffffdc
   15ac8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15acc:	cmp	r2, #1
   15ad0:	sbcs	r3, r3, #0
   15ad4:	blt	15b70 <dim_enter_array@@Base+0x468>
   15ad8:	mov	r3, #0
   15adc:	str	r3, [fp, #-40]	; 0xffffffd8
   15ae0:	b	15b58 <dim_enter_array@@Base+0x450>
   15ae4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15ae8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15aec:	add	r3, r2, r3
   15af0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15af4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15af8:	add	r1, r1, #2
   15afc:	ldr	r2, [r2, r1, lsl #2]
   15b00:	ldr	r1, [pc, #2580]	; 1651c <dim_enter_array@@Base+0xe14>
   15b04:	lsl	r3, r3, #2
   15b08:	add	r3, r1, r3
   15b0c:	str	r2, [r3, #4]
   15b10:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15b14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15b18:	add	r3, r2, r3
   15b1c:	ldr	r2, [pc, #2552]	; 1651c <dim_enter_array@@Base+0xe14>
   15b20:	add	r3, r3, #18
   15b24:	mov	r1, #0
   15b28:	str	r1, [r2, r3, lsl #2]
   15b2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15b30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15b34:	add	r2, r2, #2
   15b38:	ldr	r3, [r3, r2, lsl #2]
   15b3c:	cmn	r3, #1
   15b40:	bne	15b4c <dim_enter_array@@Base+0x444>
   15b44:	mov	r3, #1
   15b48:	str	r3, [fp, #-32]	; 0xffffffe0
   15b4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15b50:	add	r3, r3, #1
   15b54:	str	r3, [fp, #-40]	; 0xffffffd8
   15b58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15b5c:	ldr	r2, [r3, #4]
   15b60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15b64:	cmp	r2, r3
   15b68:	bgt	15ae4 <dim_enter_array@@Base+0x3dc>
   15b6c:	b	15bd8 <dim_enter_array@@Base+0x4d0>
   15b70:	mov	r3, #0
   15b74:	str	r3, [fp, #-40]	; 0xffffffd8
   15b78:	b	15bc4 <dim_enter_array@@Base+0x4bc>
   15b7c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15b80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15b84:	add	r3, r2, r3
   15b88:	ldr	r2, [pc, #2444]	; 1651c <dim_enter_array@@Base+0xe14>
   15b8c:	lsl	r3, r3, #2
   15b90:	add	r3, r2, r3
   15b94:	mov	r2, #0
   15b98:	str	r2, [r3, #4]
   15b9c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15ba0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15ba4:	add	r3, r2, r3
   15ba8:	ldr	r2, [pc, #2412]	; 1651c <dim_enter_array@@Base+0xe14>
   15bac:	add	r3, r3, #18
   15bb0:	mov	r1, #0
   15bb4:	str	r1, [r2, r3, lsl #2]
   15bb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15bbc:	add	r3, r3, #1
   15bc0:	str	r3, [fp, #-40]	; 0xffffffd8
   15bc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15bc8:	ldr	r2, [r3, #4]
   15bcc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15bd0:	cmp	r2, r3
   15bd4:	bgt	15b7c <dim_enter_array@@Base+0x474>
   15bd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15bdc:	cmp	r3, #0
   15be0:	beq	15edc <dim_enter_array@@Base+0x7d4>
   15be4:	mov	r3, #0
   15be8:	str	r3, [fp, #-40]	; 0xffffffd8
   15bec:	b	15d70 <dim_enter_array@@Base+0x668>
   15bf0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15bf4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15bf8:	add	r2, r2, #2
   15bfc:	ldr	r3, [r3, r2, lsl #2]
   15c00:	cmn	r3, #1
   15c04:	bne	15d1c <dim_enter_array@@Base+0x614>
   15c08:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15c0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15c10:	add	r3, r2, r3
   15c14:	ldr	r2, [pc, #2304]	; 1651c <dim_enter_array@@Base+0xe14>
   15c18:	add	r3, r3, #34	; 0x22
   15c1c:	lsl	r3, r3, #2
   15c20:	add	r3, r2, r3
   15c24:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15c28:	str	r2, [r3, #4]
   15c2c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15c30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15c34:	add	r4, r2, r3
   15c38:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c3c:	lsl	r3, r3, #2
   15c40:	mov	r0, r3
   15c44:	bl	123c4 <malloc@plt>
   15c48:	mov	r3, r0
   15c4c:	mov	r1, r3
   15c50:	ldr	r2, [pc, #2244]	; 1651c <dim_enter_array@@Base+0xe14>
   15c54:	add	r3, r4, #26
   15c58:	lsl	r3, r3, #2
   15c5c:	add	r3, r2, r3
   15c60:	str	r1, [r3, #4]
   15c64:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15c68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15c6c:	add	r3, r2, r3
   15c70:	ldr	r2, [pc, #2212]	; 1651c <dim_enter_array@@Base+0xe14>
   15c74:	add	r3, r3, #26
   15c78:	lsl	r3, r3, #2
   15c7c:	add	r3, r2, r3
   15c80:	ldr	r3, [r3, #4]
   15c84:	cmp	r3, #0
   15c88:	bne	15cb0 <dim_enter_array@@Base+0x5a8>
   15c8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c90:	lsl	r2, r3, #2
   15c94:	mov	r3, #456	; 0x1c8
   15c98:	str	r3, [sp]
   15c9c:	ldr	r3, [pc, #2152]	; 1650c <dim_enter_array@@Base+0xe04>
   15ca0:	ldr	r1, [pc, #2176]	; 16528 <dim_enter_array@@Base+0xe20>
   15ca4:	mvn	r0, #0
   15ca8:	bl	12244 <coda_set_error@plt>
   15cac:	bl	1a55c <handle_coda_error@@Base>
   15cb0:	mov	r3, #0
   15cb4:	str	r3, [fp, #-44]	; 0xffffffd4
   15cb8:	b	15cfc <dim_enter_array@@Base+0x5f4>
   15cbc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15cc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15cc4:	add	r3, r2, r3
   15cc8:	ldr	r2, [pc, #2124]	; 1651c <dim_enter_array@@Base+0xe14>
   15ccc:	add	r3, r3, #26
   15cd0:	lsl	r3, r3, #2
   15cd4:	add	r3, r2, r3
   15cd8:	ldr	r2, [r3, #4]
   15cdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15ce0:	lsl	r3, r3, #2
   15ce4:	add	r3, r2, r3
   15ce8:	mvn	r2, #0
   15cec:	str	r2, [r3]
   15cf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15cf4:	add	r3, r3, #1
   15cf8:	str	r3, [fp, #-44]	; 0xffffffd4
   15cfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d00:	mov	r0, r3
   15d04:	asr	r1, r0, #31
   15d08:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15d0c:	cmp	r0, r2
   15d10:	sbcs	r3, r1, r3
   15d14:	blt	15cbc <dim_enter_array@@Base+0x5b4>
   15d18:	b	15d64 <dim_enter_array@@Base+0x65c>
   15d1c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15d20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15d24:	add	r3, r2, r3
   15d28:	ldr	r2, [pc, #2028]	; 1651c <dim_enter_array@@Base+0xe14>
   15d2c:	add	r3, r3, #34	; 0x22
   15d30:	lsl	r3, r3, #2
   15d34:	add	r3, r2, r3
   15d38:	mov	r2, #0
   15d3c:	str	r2, [r3, #4]
   15d40:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15d44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15d48:	add	r3, r2, r3
   15d4c:	ldr	r2, [pc, #1992]	; 1651c <dim_enter_array@@Base+0xe14>
   15d50:	add	r3, r3, #26
   15d54:	lsl	r3, r3, #2
   15d58:	add	r3, r2, r3
   15d5c:	mov	r2, #0
   15d60:	str	r2, [r3, #4]
   15d64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15d68:	add	r3, r3, #1
   15d6c:	str	r3, [fp, #-40]	; 0xffffffd8
   15d70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15d74:	ldr	r2, [r3, #4]
   15d78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15d7c:	cmp	r2, r3
   15d80:	bgt	15bf0 <dim_enter_array@@Base+0x4e8>
   15d84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15d88:	mov	r2, #0
   15d8c:	str	r2, [r3, #44]	; 0x2c
   15d90:	mov	r2, #0
   15d94:	mov	r1, #0
   15d98:	mov	r0, #0
   15d9c:	bl	14e44 <print_all_distinct_dims@@Base+0x368>
   15da0:	mov	r3, #0
   15da4:	str	r3, [fp, #-40]	; 0xffffffd8
   15da8:	b	15ec8 <dim_enter_array@@Base+0x7c0>
   15dac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15db0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15db4:	add	r2, r2, #2
   15db8:	ldr	r3, [r3, r2, lsl #2]
   15dbc:	cmn	r3, #1
   15dc0:	bne	15ebc <dim_enter_array@@Base+0x7b4>
   15dc4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15dc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15dcc:	add	r3, r2, r3
   15dd0:	ldr	r2, [pc, #1860]	; 1651c <dim_enter_array@@Base+0xe14>
   15dd4:	lsl	r3, r3, #2
   15dd8:	add	r3, r2, r3
   15ddc:	ldr	r2, [r3, #4]
   15de0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15de4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15de8:	add	r3, r1, r3
   15dec:	ldr	r1, [pc, #1832]	; 1651c <dim_enter_array@@Base+0xe14>
   15df0:	add	r3, r3, #8
   15df4:	lsl	r3, r3, #2
   15df8:	add	r3, r1, r3
   15dfc:	ldr	r3, [r3, #4]
   15e00:	cmp	r2, r3
   15e04:	beq	15e30 <dim_enter_array@@Base+0x728>
   15e08:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15e0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15e10:	add	r3, r2, r3
   15e14:	ldr	r2, [pc, #1792]	; 1651c <dim_enter_array@@Base+0xe14>
   15e18:	add	r3, r3, #18
   15e1c:	mov	r1, #1
   15e20:	str	r1, [r2, r3, lsl #2]
   15e24:	mov	r3, #1
   15e28:	str	r3, [fp, #-36]	; 0xffffffdc
   15e2c:	b	15ebc <dim_enter_array@@Base+0x7b4>
   15e30:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15e34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15e38:	add	r3, r2, r3
   15e3c:	ldr	r2, [pc, #1752]	; 1651c <dim_enter_array@@Base+0xe14>
   15e40:	add	r3, r3, #18
   15e44:	mov	r1, #0
   15e48:	str	r1, [r2, r3, lsl #2]
   15e4c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15e50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15e54:	add	r3, r2, r3
   15e58:	ldr	r2, [pc, #1724]	; 1651c <dim_enter_array@@Base+0xe14>
   15e5c:	add	r3, r3, #26
   15e60:	lsl	r3, r3, #2
   15e64:	add	r3, r2, r3
   15e68:	ldr	r3, [r3, #4]
   15e6c:	mov	r0, r3
   15e70:	bl	1228c <free@plt>
   15e74:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15e78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15e7c:	add	r3, r2, r3
   15e80:	ldr	r2, [pc, #1684]	; 1651c <dim_enter_array@@Base+0xe14>
   15e84:	add	r3, r3, #26
   15e88:	lsl	r3, r3, #2
   15e8c:	add	r3, r2, r3
   15e90:	mov	r2, #0
   15e94:	str	r2, [r3, #4]
   15e98:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15e9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15ea0:	add	r3, r2, r3
   15ea4:	ldr	r2, [pc, #1648]	; 1651c <dim_enter_array@@Base+0xe14>
   15ea8:	add	r3, r3, #34	; 0x22
   15eac:	lsl	r3, r3, #2
   15eb0:	add	r3, r2, r3
   15eb4:	mov	r2, #0
   15eb8:	str	r2, [r3, #4]
   15ebc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15ec0:	add	r3, r3, #1
   15ec4:	str	r3, [fp, #-40]	; 0xffffffd8
   15ec8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15ecc:	ldr	r2, [r3, #4]
   15ed0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15ed4:	cmp	r2, r3
   15ed8:	bgt	15dac <dim_enter_array@@Base+0x6a4>
   15edc:	ldr	r3, [pc, #1592]	; 1651c <dim_enter_array@@Base+0xe14>
   15ee0:	mov	r2, #0
   15ee4:	str	r2, [r3, #68]	; 0x44
   15ee8:	ldr	r3, [pc, #1580]	; 1651c <dim_enter_array@@Base+0xe14>
   15eec:	mvn	r2, #0
   15ef0:	str	r2, [r3, #104]	; 0x68
   15ef4:	mov	r3, #0
   15ef8:	str	r3, [fp, #-40]	; 0xffffffd8
   15efc:	b	15f3c <dim_enter_array@@Base+0x834>
   15f00:	ldr	r2, [pc, #1556]	; 1651c <dim_enter_array@@Base+0xe14>
   15f04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f08:	add	r3, r3, #18
   15f0c:	ldr	r3, [r2, r3, lsl #2]
   15f10:	cmp	r3, #0
   15f14:	beq	15f30 <dim_enter_array@@Base+0x828>
   15f18:	ldr	r3, [pc, #1532]	; 1651c <dim_enter_array@@Base+0xe14>
   15f1c:	mov	r2, #1
   15f20:	str	r2, [r3, #68]	; 0x44
   15f24:	ldr	r2, [pc, #1520]	; 1651c <dim_enter_array@@Base+0xe14>
   15f28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f2c:	str	r3, [r2, #104]	; 0x68
   15f30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f34:	add	r3, r3, #1
   15f38:	str	r3, [fp, #-40]	; 0xffffffd8
   15f3c:	ldr	r3, [pc, #1496]	; 1651c <dim_enter_array@@Base+0xe14>
   15f40:	ldr	r2, [r3]
   15f44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f48:	cmp	r2, r3
   15f4c:	bgt	15f00 <dim_enter_array@@Base+0x7f8>
   15f50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15f54:	mov	r2, #1
   15f58:	str	r2, [r3, #40]	; 0x28
   15f5c:	mov	r3, #0
   15f60:	str	r3, [fp, #-40]	; 0xffffffd8
   15f64:	b	1608c <dim_enter_array@@Base+0x984>
   15f68:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15f6c:	ldr	r2, [r3, #40]	; 0x28
   15f70:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15f74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f78:	add	r3, r1, r3
   15f7c:	ldr	r1, [pc, #1432]	; 1651c <dim_enter_array@@Base+0xe14>
   15f80:	lsl	r3, r3, #2
   15f84:	add	r3, r1, r3
   15f88:	ldr	r3, [r3, #4]
   15f8c:	mul	r2, r3, r2
   15f90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15f94:	str	r2, [r3, #40]	; 0x28
   15f98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f9c:	cmp	r3, #0
   15fa0:	bne	16000 <dim_enter_array@@Base+0x8f8>
   15fa4:	ldr	r2, [pc, #1392]	; 1651c <dim_enter_array@@Base+0xe14>
   15fa8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15fac:	lsl	r3, r3, #2
   15fb0:	add	r3, r2, r3
   15fb4:	ldr	r3, [r3, #4]
   15fb8:	mov	r2, r3
   15fbc:	asr	r3, r2, #31
   15fc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   15fc4:	mul	r0, r3, r1
   15fc8:	ldr	r1, [fp, #-16]
   15fcc:	mul	r1, r2, r1
   15fd0:	add	r1, r0, r1
   15fd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   15fd8:	umull	r2, r3, r0, r2
   15fdc:	add	r1, r1, r3
   15fe0:	mov	r3, r1
   15fe4:	ldr	r0, [pc, #1328]	; 1651c <dim_enter_array@@Base+0xe14>
   15fe8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15fec:	add	r1, r1, #30
   15ff0:	lsl	r1, r1, #3
   15ff4:	add	r1, r0, r1
   15ff8:	strd	r2, [r1]
   15ffc:	b	16080 <dim_enter_array@@Base+0x978>
   16000:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16004:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16008:	add	ip, r2, r3
   1600c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16010:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16014:	add	r3, r2, r3
   16018:	sub	r3, r3, #1
   1601c:	ldr	r2, [pc, #1272]	; 1651c <dim_enter_array@@Base+0xe14>
   16020:	add	r3, r3, #30
   16024:	lsl	r3, r3, #3
   16028:	add	r3, r2, r3
   1602c:	ldrd	r0, [r3]
   16030:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16034:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16038:	add	r3, r2, r3
   1603c:	ldr	r2, [pc, #1240]	; 1651c <dim_enter_array@@Base+0xe14>
   16040:	lsl	r3, r3, #2
   16044:	add	r3, r2, r3
   16048:	ldr	r3, [r3, #4]
   1604c:	mov	r2, r3
   16050:	asr	r3, r2, #31
   16054:	mul	r4, r2, r1
   16058:	mul	lr, r0, r3
   1605c:	add	lr, r4, lr
   16060:	umull	r2, r3, r0, r2
   16064:	add	r1, lr, r3
   16068:	mov	r3, r1
   1606c:	ldr	r0, [pc, #1192]	; 1651c <dim_enter_array@@Base+0xe14>
   16070:	add	r1, ip, #30
   16074:	lsl	r1, r1, #3
   16078:	add	r1, r0, r1
   1607c:	strd	r2, [r1]
   16080:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16084:	add	r3, r3, #1
   16088:	str	r3, [fp, #-40]	; 0xffffffd8
   1608c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16090:	ldr	r2, [r3, #4]
   16094:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16098:	cmp	r2, r3
   1609c:	bgt	15f68 <dim_enter_array@@Base+0x860>
   160a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   160a4:	cmp	r3, #0
   160a8:	beq	16248 <dim_enter_array@@Base+0xb40>
   160ac:	mov	r3, #0
   160b0:	str	r3, [fp, #-40]	; 0xffffffd8
   160b4:	b	160ec <dim_enter_array@@Base+0x9e4>
   160b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   160bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   160c0:	add	r3, r2, r3
   160c4:	ldr	r2, [pc, #1104]	; 1651c <dim_enter_array@@Base+0xe14>
   160c8:	add	r3, r3, #38	; 0x26
   160cc:	lsl	r3, r3, #3
   160d0:	add	r1, r2, r3
   160d4:	mov	r2, #0
   160d8:	mov	r3, #0
   160dc:	strd	r2, [r1]
   160e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   160e4:	add	r3, r3, #1
   160e8:	str	r3, [fp, #-40]	; 0xffffffd8
   160ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   160f0:	ldr	r2, [r3, #4]
   160f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   160f8:	cmp	r2, r3
   160fc:	bgt	160b8 <dim_enter_array@@Base+0x9b0>
   16100:	mov	r3, #0
   16104:	str	r3, [fp, #-48]	; 0xffffffd0
   16108:	b	16228 <dim_enter_array@@Base+0xb20>
   1610c:	mov	r3, #1
   16110:	str	r3, [fp, #-52]	; 0xffffffcc
   16114:	mov	r3, #0
   16118:	str	r3, [fp, #-40]	; 0xffffffd8
   1611c:	b	16208 <dim_enter_array@@Base+0xb00>
   16120:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16124:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16128:	add	r3, r2, r3
   1612c:	ldr	r2, [pc, #1000]	; 1651c <dim_enter_array@@Base+0xe14>
   16130:	add	r3, r3, #18
   16134:	ldr	r3, [r2, r3, lsl #2]
   16138:	cmp	r3, #0
   1613c:	beq	16180 <dim_enter_array@@Base+0xa78>
   16140:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16144:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16148:	add	r3, r2, r3
   1614c:	ldr	r2, [pc, #968]	; 1651c <dim_enter_array@@Base+0xe14>
   16150:	add	r3, r3, #26
   16154:	lsl	r3, r3, #2
   16158:	add	r3, r2, r3
   1615c:	ldr	r2, [r3, #4]
   16160:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16164:	lsl	r3, r3, #2
   16168:	add	r3, r2, r3
   1616c:	ldr	r2, [r3]
   16170:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16174:	mul	r3, r2, r3
   16178:	str	r3, [fp, #-52]	; 0xffffffcc
   1617c:	b	161a8 <dim_enter_array@@Base+0xaa0>
   16180:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16184:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16188:	add	r3, r2, r3
   1618c:	ldr	r2, [pc, #904]	; 1651c <dim_enter_array@@Base+0xe14>
   16190:	lsl	r3, r3, #2
   16194:	add	r3, r2, r3
   16198:	ldr	r2, [r3, #4]
   1619c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   161a0:	mul	r3, r2, r3
   161a4:	str	r3, [fp, #-52]	; 0xffffffcc
   161a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   161ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   161b0:	add	ip, r2, r3
   161b4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   161b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   161bc:	add	r3, r2, r3
   161c0:	ldr	r2, [pc, #852]	; 1651c <dim_enter_array@@Base+0xe14>
   161c4:	add	r3, r3, #38	; 0x26
   161c8:	lsl	r3, r3, #3
   161cc:	add	r3, r2, r3
   161d0:	ldrd	r0, [r3]
   161d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   161d8:	mov	r2, r3
   161dc:	asr	r3, r2, #31
   161e0:	adds	r2, r2, r0
   161e4:	adc	r3, r3, r1
   161e8:	ldr	r0, [pc, #812]	; 1651c <dim_enter_array@@Base+0xe14>
   161ec:	add	r1, ip, #38	; 0x26
   161f0:	lsl	r1, r1, #3
   161f4:	add	r1, r0, r1
   161f8:	strd	r2, [r1]
   161fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16200:	add	r3, r3, #1
   16204:	str	r3, [fp, #-40]	; 0xffffffd8
   16208:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1620c:	ldr	r2, [r3, #4]
   16210:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16214:	cmp	r2, r3
   16218:	bgt	16120 <dim_enter_array@@Base+0xa18>
   1621c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16220:	add	r3, r3, #1
   16224:	str	r3, [fp, #-48]	; 0xffffffd0
   16228:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1622c:	mov	r0, r3
   16230:	asr	r1, r0, #31
   16234:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16238:	cmp	r0, r2
   1623c:	sbcs	r3, r1, r3
   16240:	blt	1610c <dim_enter_array@@Base+0xa04>
   16244:	b	1634c <dim_enter_array@@Base+0xc44>
   16248:	ldr	r2, [pc, #716]	; 1651c <dim_enter_array@@Base+0xe14>
   1624c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16250:	lsl	r3, r3, #2
   16254:	add	r3, r2, r3
   16258:	ldr	r3, [r3, #4]
   1625c:	mov	r2, r3
   16260:	asr	r3, r2, #31
   16264:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16268:	mul	r0, r3, r1
   1626c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16270:	mul	r1, r2, r1
   16274:	add	r1, r0, r1
   16278:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1627c:	umull	r2, r3, r0, r2
   16280:	add	r1, r1, r3
   16284:	mov	r3, r1
   16288:	ldr	r0, [pc, #652]	; 1651c <dim_enter_array@@Base+0xe14>
   1628c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16290:	add	r1, r1, #38	; 0x26
   16294:	lsl	r1, r1, #3
   16298:	add	r1, r0, r1
   1629c:	strd	r2, [r1]
   162a0:	mov	r3, #1
   162a4:	str	r3, [fp, #-40]	; 0xffffffd8
   162a8:	b	16338 <dim_enter_array@@Base+0xc30>
   162ac:	ldr	r2, [fp, #-60]	; 0xffffffc4
   162b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162b4:	add	ip, r2, r3
   162b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   162bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162c0:	add	r3, r2, r3
   162c4:	sub	r3, r3, #1
   162c8:	ldr	r2, [pc, #588]	; 1651c <dim_enter_array@@Base+0xe14>
   162cc:	add	r3, r3, #38	; 0x26
   162d0:	lsl	r3, r3, #3
   162d4:	add	r3, r2, r3
   162d8:	ldrd	r0, [r3]
   162dc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   162e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162e4:	add	r3, r2, r3
   162e8:	ldr	r2, [pc, #556]	; 1651c <dim_enter_array@@Base+0xe14>
   162ec:	lsl	r3, r3, #2
   162f0:	add	r3, r2, r3
   162f4:	ldr	r3, [r3, #4]
   162f8:	mov	r2, r3
   162fc:	asr	r3, r2, #31
   16300:	mul	r4, r2, r1
   16304:	mul	lr, r0, r3
   16308:	add	lr, r4, lr
   1630c:	umull	r2, r3, r0, r2
   16310:	add	r1, lr, r3
   16314:	mov	r3, r1
   16318:	ldr	r0, [pc, #508]	; 1651c <dim_enter_array@@Base+0xe14>
   1631c:	add	r1, ip, #38	; 0x26
   16320:	lsl	r1, r1, #3
   16324:	add	r1, r0, r1
   16328:	strd	r2, [r1]
   1632c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16330:	add	r3, r3, #1
   16334:	str	r3, [fp, #-40]	; 0xffffffd8
   16338:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1633c:	ldr	r2, [r3, #4]
   16340:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16344:	cmp	r2, r3
   16348:	bgt	162ac <dim_enter_array@@Base+0xba4>
   1634c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16350:	ldr	r2, [r3, #4]
   16354:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16358:	add	r3, r2, r3
   1635c:	sub	r3, r3, #1
   16360:	ldr	r2, [pc, #436]	; 1651c <dim_enter_array@@Base+0xe14>
   16364:	add	r3, r3, #38	; 0x26
   16368:	lsl	r3, r3, #3
   1636c:	add	r3, r2, r3
   16370:	ldrd	r2, [r3]
   16374:	cmp	r2, #1
   16378:	sbcs	r3, r3, #0
   1637c:	blt	164f8 <dim_enter_array@@Base+0xdf0>
   16380:	ldr	r3, [pc, #404]	; 1651c <dim_enter_array@@Base+0xe14>
   16384:	ldr	r3, [r3]
   16388:	sub	r1, r3, #1
   1638c:	ldr	r3, [pc, #392]	; 1651c <dim_enter_array@@Base+0xe14>
   16390:	ldr	r3, [r3]
   16394:	sub	r3, r3, #1
   16398:	ldr	r2, [pc, #380]	; 1651c <dim_enter_array@@Base+0xe14>
   1639c:	lsl	r3, r3, #2
   163a0:	add	r3, r2, r3
   163a4:	ldr	r3, [r3, #4]
   163a8:	mov	r2, r3
   163ac:	asr	r3, r2, #31
   163b0:	ldr	r0, [pc, #356]	; 1651c <dim_enter_array@@Base+0xe14>
   163b4:	add	r1, r1, #22
   163b8:	lsl	r1, r1, #3
   163bc:	add	r1, r0, r1
   163c0:	strd	r2, [r1]
   163c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   163c8:	ldr	r3, [r3, #4]
   163cc:	sub	r3, r3, #2
   163d0:	str	r3, [fp, #-40]	; 0xffffffd8
   163d4:	b	16464 <dim_enter_array@@Base+0xd5c>
   163d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   163dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   163e0:	add	ip, r2, r3
   163e4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   163e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   163ec:	add	r3, r2, r3
   163f0:	ldr	r2, [pc, #292]	; 1651c <dim_enter_array@@Base+0xe14>
   163f4:	lsl	r3, r3, #2
   163f8:	add	r3, r2, r3
   163fc:	ldr	r3, [r3, #4]
   16400:	mov	r0, r3
   16404:	asr	r1, r0, #31
   16408:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1640c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16410:	add	r3, r2, r3
   16414:	add	r3, r3, #1
   16418:	ldr	r2, [pc, #252]	; 1651c <dim_enter_array@@Base+0xe14>
   1641c:	add	r3, r3, #22
   16420:	lsl	r3, r3, #3
   16424:	add	r3, r2, r3
   16428:	ldrd	r2, [r3]
   1642c:	mul	r4, r2, r1
   16430:	mul	lr, r0, r3
   16434:	add	lr, r4, lr
   16438:	umull	r2, r3, r0, r2
   1643c:	add	r1, lr, r3
   16440:	mov	r3, r1
   16444:	ldr	r0, [pc, #208]	; 1651c <dim_enter_array@@Base+0xe14>
   16448:	add	r1, ip, #22
   1644c:	lsl	r1, r1, #3
   16450:	add	r1, r0, r1
   16454:	strd	r2, [r1]
   16458:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1645c:	sub	r3, r3, #1
   16460:	str	r3, [fp, #-40]	; 0xffffffd8
   16464:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16468:	cmp	r3, #0
   1646c:	bge	163d8 <dim_enter_array@@Base+0xcd0>
   16470:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16474:	sub	r3, r3, #1
   16478:	str	r3, [fp, #-40]	; 0xffffffd8
   1647c:	b	164ec <dim_enter_array@@Base+0xde4>
   16480:	ldr	r2, [pc, #148]	; 1651c <dim_enter_array@@Base+0xe14>
   16484:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16488:	add	r3, r3, #22
   1648c:	lsl	r3, r3, #3
   16490:	add	r3, r2, r3
   16494:	ldrd	r0, [r3]
   16498:	ldr	r2, [pc, #124]	; 1651c <dim_enter_array@@Base+0xe14>
   1649c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   164a0:	add	r3, r3, #22
   164a4:	lsl	r3, r3, #3
   164a8:	add	r3, r2, r3
   164ac:	ldrd	r2, [r3]
   164b0:	mul	lr, r2, r1
   164b4:	mul	ip, r0, r3
   164b8:	add	ip, lr, ip
   164bc:	umull	r2, r3, r0, r2
   164c0:	add	r1, ip, r3
   164c4:	mov	r3, r1
   164c8:	ldr	r0, [pc, #76]	; 1651c <dim_enter_array@@Base+0xe14>
   164cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   164d0:	add	r1, r1, #22
   164d4:	lsl	r1, r1, #3
   164d8:	add	r1, r0, r1
   164dc:	strd	r2, [r1]
   164e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   164e4:	sub	r3, r3, #1
   164e8:	str	r3, [fp, #-40]	; 0xffffffd8
   164ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   164f0:	cmp	r3, #0
   164f4:	bge	16480 <dim_enter_array@@Base+0xd78>
   164f8:	sub	sp, fp, #12
   164fc:	pop	{r4, r5, fp, pc}
   16500:	strdeq	pc, [r2], -r0
   16504:	andeq	ip, r1, r8, asr pc
   16508:	andeq	r0, r0, sp, asr r1
   1650c:	muleq	r1, r0, sp
   16510:	andeq	ip, r1, r0, lsr #29
   16514:	andeq	r0, r0, r2, lsl #3
   16518:	andeq	pc, r2, ip, ror #3
   1651c:	strheq	r0, [r3], -r8
   16520:	muleq	r0, r2, r1
   16524:	andeq	ip, r1, r4, lsr #29
   16528:	andeq	ip, r1, r0, lsl #28

0001652c <dim_leave_array@@Base>:
   1652c:	push	{fp, lr}
   16530:	add	fp, sp, #4
   16534:	sub	sp, sp, #16
   16538:	ldr	r3, [pc, #528]	; 16750 <dim_leave_array@@Base+0x224>
   1653c:	ldr	r3, [r3, #3360]	; 0xd20
   16540:	cmp	r3, #0
   16544:	bge	1655c <dim_leave_array@@Base+0x30>
   16548:	ldr	r3, [pc, #516]	; 16754 <dim_leave_array@@Base+0x228>
   1654c:	ldr	r2, [pc, #516]	; 16758 <dim_leave_array@@Base+0x22c>
   16550:	ldr	r1, [pc, #516]	; 1675c <dim_leave_array@@Base+0x230>
   16554:	ldr	r0, [pc, #516]	; 16760 <dim_leave_array@@Base+0x234>
   16558:	bl	12658 <__assert_fail@plt>
   1655c:	ldr	r3, [pc, #492]	; 16750 <dim_leave_array@@Base+0x224>
   16560:	ldr	r2, [r3, #3360]	; 0xd20
   16564:	mov	r3, r2
   16568:	lsl	r3, r3, #2
   1656c:	add	r3, r3, r2
   16570:	lsl	r3, r3, #4
   16574:	add	r3, r3, #800	; 0x320
   16578:	ldr	r2, [pc, #464]	; 16750 <dim_leave_array@@Base+0x224>
   1657c:	add	r3, r3, r2
   16580:	str	r3, [fp, #-12]
   16584:	ldr	r3, [fp, #-12]
   16588:	ldr	r3, [r3]
   1658c:	str	r3, [fp, #-16]
   16590:	ldr	r3, [pc, #460]	; 16764 <dim_leave_array@@Base+0x238>
   16594:	ldr	r2, [r3]
   16598:	ldr	r3, [fp, #-12]
   1659c:	ldr	r3, [r3, #4]
   165a0:	sub	r3, r2, r3
   165a4:	ldr	r2, [pc, #440]	; 16764 <dim_leave_array@@Base+0x238>
   165a8:	str	r3, [r2]
   165ac:	mov	r3, #0
   165b0:	str	r3, [fp, #-8]
   165b4:	b	1660c <dim_leave_array@@Base+0xe0>
   165b8:	ldr	r2, [fp, #-16]
   165bc:	ldr	r3, [fp, #-8]
   165c0:	add	r3, r2, r3
   165c4:	ldr	r2, [pc, #408]	; 16764 <dim_leave_array@@Base+0x238>
   165c8:	add	r3, r3, #18
   165cc:	ldr	r3, [r2, r3, lsl #2]
   165d0:	cmp	r3, #0
   165d4:	beq	16600 <dim_leave_array@@Base+0xd4>
   165d8:	ldr	r2, [fp, #-16]
   165dc:	ldr	r3, [fp, #-8]
   165e0:	add	r3, r2, r3
   165e4:	ldr	r2, [pc, #376]	; 16764 <dim_leave_array@@Base+0x238>
   165e8:	add	r3, r3, #26
   165ec:	lsl	r3, r3, #2
   165f0:	add	r3, r2, r3
   165f4:	ldr	r3, [r3, #4]
   165f8:	mov	r0, r3
   165fc:	bl	1228c <free@plt>
   16600:	ldr	r3, [fp, #-8]
   16604:	add	r3, r3, #1
   16608:	str	r3, [fp, #-8]
   1660c:	ldr	r3, [fp, #-12]
   16610:	ldr	r2, [r3, #4]
   16614:	ldr	r3, [fp, #-8]
   16618:	cmp	r2, r3
   1661c:	bgt	165b8 <dim_leave_array@@Base+0x8c>
   16620:	ldr	r3, [pc, #316]	; 16764 <dim_leave_array@@Base+0x238>
   16624:	mov	r2, #0
   16628:	str	r2, [r3, #68]	; 0x44
   1662c:	ldr	r3, [pc, #304]	; 16764 <dim_leave_array@@Base+0x238>
   16630:	mvn	r2, #0
   16634:	str	r2, [r3, #104]	; 0x68
   16638:	mov	r3, #0
   1663c:	str	r3, [fp, #-8]
   16640:	b	16680 <dim_leave_array@@Base+0x154>
   16644:	ldr	r2, [pc, #280]	; 16764 <dim_leave_array@@Base+0x238>
   16648:	ldr	r3, [fp, #-8]
   1664c:	add	r3, r3, #18
   16650:	ldr	r3, [r2, r3, lsl #2]
   16654:	cmp	r3, #0
   16658:	beq	16674 <dim_leave_array@@Base+0x148>
   1665c:	ldr	r3, [pc, #256]	; 16764 <dim_leave_array@@Base+0x238>
   16660:	mov	r2, #1
   16664:	str	r2, [r3, #68]	; 0x44
   16668:	ldr	r2, [pc, #244]	; 16764 <dim_leave_array@@Base+0x238>
   1666c:	ldr	r3, [fp, #-8]
   16670:	str	r3, [r2, #104]	; 0x68
   16674:	ldr	r3, [fp, #-8]
   16678:	add	r3, r3, #1
   1667c:	str	r3, [fp, #-8]
   16680:	ldr	r3, [pc, #220]	; 16764 <dim_leave_array@@Base+0x238>
   16684:	ldr	r2, [r3]
   16688:	ldr	r3, [fp, #-8]
   1668c:	cmp	r2, r3
   16690:	bgt	16644 <dim_leave_array@@Base+0x118>
   16694:	ldr	r3, [fp, #-12]
   16698:	ldr	r2, [r3, #4]
   1669c:	ldr	r3, [fp, #-16]
   166a0:	add	r3, r2, r3
   166a4:	sub	r3, r3, #1
   166a8:	ldr	r2, [pc, #180]	; 16764 <dim_leave_array@@Base+0x238>
   166ac:	add	r3, r3, #38	; 0x26
   166b0:	lsl	r3, r3, #3
   166b4:	add	r3, r2, r3
   166b8:	ldrd	r2, [r3]
   166bc:	cmp	r2, #1
   166c0:	sbcs	r3, r3, #0
   166c4:	blt	16744 <dim_leave_array@@Base+0x218>
   166c8:	ldr	r3, [fp, #-16]
   166cc:	sub	r3, r3, #1
   166d0:	str	r3, [fp, #-8]
   166d4:	b	16738 <dim_leave_array@@Base+0x20c>
   166d8:	ldr	r2, [pc, #132]	; 16764 <dim_leave_array@@Base+0x238>
   166dc:	ldr	r3, [fp, #-8]
   166e0:	add	r3, r3, #22
   166e4:	lsl	r3, r3, #3
   166e8:	add	r3, r2, r3
   166ec:	ldrd	r0, [r3]
   166f0:	ldr	r2, [pc, #108]	; 16764 <dim_leave_array@@Base+0x238>
   166f4:	ldr	r3, [fp, #-16]
   166f8:	add	r3, r3, #22
   166fc:	lsl	r3, r3, #3
   16700:	add	r3, r2, r3
   16704:	ldrd	r2, [r3]
   16708:	bl	1c804 <main@@Base+0x430>
   1670c:	mov	r2, r0
   16710:	mov	r3, r1
   16714:	ldr	r0, [pc, #72]	; 16764 <dim_leave_array@@Base+0x238>
   16718:	ldr	r1, [fp, #-8]
   1671c:	add	r1, r1, #22
   16720:	lsl	r1, r1, #3
   16724:	add	r1, r0, r1
   16728:	strd	r2, [r1]
   1672c:	ldr	r3, [fp, #-8]
   16730:	sub	r3, r3, #1
   16734:	str	r3, [fp, #-8]
   16738:	ldr	r3, [fp, #-8]
   1673c:	cmp	r3, #0
   16740:	bge	166d8 <dim_leave_array@@Base+0x1ac>
   16744:	nop			; (mov r0, r0)
   16748:	sub	sp, fp, #4
   1674c:	pop	{fp, pc}
   16750:	strdeq	pc, [r2], -r0
   16754:	andeq	ip, r1, r8, ror #30
   16758:	andeq	r0, r0, r3, asr #4
   1675c:	muleq	r1, r0, sp
   16760:	andeq	ip, r1, r0, ror #29
   16764:	strheq	r0, [r3], -r8
   16768:	push	{fp, lr}
   1676c:	add	fp, sp, #4
   16770:	sub	sp, sp, #48	; 0x30
   16774:	str	r0, [fp, #-40]	; 0xffffffd8
   16778:	str	r1, [fp, #-44]	; 0xffffffd4
   1677c:	str	r2, [fp, #-48]	; 0xffffffd0
   16780:	sub	r3, fp, #28
   16784:	mov	r1, r3
   16788:	ldr	r0, [pc, #932]	; 16b34 <dim_leave_array@@Base+0x608>
   1678c:	bl	1231c <coda_cursor_get_type_class@plt>
   16790:	mov	r3, r0
   16794:	cmp	r3, #0
   16798:	beq	167a0 <dim_leave_array@@Base+0x274>
   1679c:	bl	1a55c <handle_coda_error@@Base>
   167a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   167a4:	cmp	r3, #0
   167a8:	beq	16a2c <dim_leave_array@@Base+0x500>
   167ac:	cmp	r3, #1
   167b0:	bne	16b04 <dim_leave_array@@Base+0x5d8>
   167b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   167b8:	mov	r3, r2
   167bc:	lsl	r3, r3, #2
   167c0:	add	r3, r3, r2
   167c4:	lsl	r3, r3, #4
   167c8:	add	r3, r3, #800	; 0x320
   167cc:	ldr	r2, [pc, #868]	; 16b38 <dim_leave_array@@Base+0x60c>
   167d0:	add	r3, r3, r2
   167d4:	str	r3, [fp, #-20]	; 0xffffffec
   167d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   167dc:	ldr	r3, [r3]
   167e0:	str	r3, [fp, #-24]	; 0xffffffe8
   167e4:	ldr	r3, [pc, #844]	; 16b38 <dim_leave_array@@Base+0x60c>
   167e8:	ldr	r2, [r3, #3360]	; 0xd20
   167ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   167f0:	cmp	r2, r3
   167f4:	bgt	1680c <dim_leave_array@@Base+0x2e0>
   167f8:	ldr	r3, [pc, #828]	; 16b3c <dim_leave_array@@Base+0x610>
   167fc:	ldr	r2, [pc, #828]	; 16b40 <dim_leave_array@@Base+0x614>
   16800:	ldr	r1, [pc, #828]	; 16b44 <dim_leave_array@@Base+0x618>
   16804:	ldr	r0, [pc, #828]	; 16b48 <dim_leave_array@@Base+0x61c>
   16808:	bl	12658 <__assert_fail@plt>
   1680c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16810:	cmp	r3, #0
   16814:	bne	16824 <dim_leave_array@@Base+0x2f8>
   16818:	ldr	r3, [fp, #-20]	; 0xffffffec
   1681c:	mov	r2, #0
   16820:	str	r2, [r3, #44]	; 0x2c
   16824:	ldr	r3, [pc, #780]	; 16b38 <dim_leave_array@@Base+0x60c>
   16828:	ldr	r2, [r3, #3360]	; 0xd20
   1682c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16830:	cmp	r2, r3
   16834:	ble	16874 <dim_leave_array@@Base+0x348>
   16838:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1683c:	add	r2, r3, #1
   16840:	ldr	r3, [fp, #-20]	; 0xffffffec
   16844:	ldr	r3, [r3, #44]	; 0x2c
   16848:	ldr	r1, [fp, #-20]	; 0xffffffec
   1684c:	ldr	r1, [r1, #40]	; 0x28
   16850:	mul	r1, r1, r3
   16854:	ldr	r0, [pc, #732]	; 16b38 <dim_leave_array@@Base+0x60c>
   16858:	mov	r3, r2
   1685c:	lsl	r3, r3, #2
   16860:	add	r3, r3, r2
   16864:	lsl	r3, r3, #4
   16868:	add	r3, r0, r3
   1686c:	add	r3, r3, #844	; 0x34c
   16870:	str	r1, [r3]
   16874:	mov	r3, #1
   16878:	str	r3, [fp, #-8]
   1687c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16880:	str	r3, [fp, #-12]
   16884:	b	16908 <dim_leave_array@@Base+0x3dc>
   16888:	ldr	r2, [pc, #700]	; 16b4c <dim_leave_array@@Base+0x620>
   1688c:	ldr	r3, [fp, #-12]
   16890:	add	r3, r3, #18
   16894:	ldr	r3, [r2, r3, lsl #2]
   16898:	cmp	r3, #0
   1689c:	beq	168dc <dim_leave_array@@Base+0x3b0>
   168a0:	ldr	r2, [pc, #676]	; 16b4c <dim_leave_array@@Base+0x620>
   168a4:	ldr	r3, [fp, #-12]
   168a8:	add	r3, r3, #26
   168ac:	lsl	r3, r3, #2
   168b0:	add	r3, r2, r3
   168b4:	ldr	r2, [r3, #4]
   168b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   168bc:	ldr	r3, [r3, #44]	; 0x2c
   168c0:	lsl	r3, r3, #2
   168c4:	add	r3, r2, r3
   168c8:	ldr	r2, [r3]
   168cc:	ldr	r3, [fp, #-8]
   168d0:	mul	r3, r2, r3
   168d4:	str	r3, [fp, #-8]
   168d8:	b	168fc <dim_leave_array@@Base+0x3d0>
   168dc:	ldr	r2, [pc, #616]	; 16b4c <dim_leave_array@@Base+0x620>
   168e0:	ldr	r3, [fp, #-12]
   168e4:	lsl	r3, r3, #2
   168e8:	add	r3, r2, r3
   168ec:	ldr	r2, [r3, #4]
   168f0:	ldr	r3, [fp, #-8]
   168f4:	mul	r3, r2, r3
   168f8:	str	r3, [fp, #-8]
   168fc:	ldr	r3, [fp, #-12]
   16900:	add	r3, r3, #1
   16904:	str	r3, [fp, #-12]
   16908:	ldr	r3, [fp, #-20]	; 0xffffffec
   1690c:	ldr	r2, [r3, #4]
   16910:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16914:	add	r2, r2, r3
   16918:	ldr	r3, [fp, #-12]
   1691c:	cmp	r2, r3
   16920:	bgt	16888 <dim_leave_array@@Base+0x35c>
   16924:	ldr	r3, [fp, #-8]
   16928:	cmp	r3, #0
   1692c:	ble	16b18 <dim_leave_array@@Base+0x5ec>
   16930:	ldr	r0, [pc, #508]	; 16b34 <dim_leave_array@@Base+0x608>
   16934:	bl	12364 <coda_cursor_goto_first_array_element@plt>
   16938:	mov	r3, r0
   1693c:	cmp	r3, #0
   16940:	beq	16948 <dim_leave_array@@Base+0x41c>
   16944:	bl	1a55c <handle_coda_error@@Base>
   16948:	mov	r3, #0
   1694c:	str	r3, [fp, #-16]
   16950:	b	16a10 <dim_leave_array@@Base+0x4e4>
   16954:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16958:	add	r0, r3, #1
   1695c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16960:	add	r3, r3, #1
   16964:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16968:	mov	r1, r3
   1696c:	bl	16768 <dim_leave_array@@Base+0x23c>
   16970:	mov	r3, r0
   16974:	cmp	r3, #0
   16978:	beq	1698c <dim_leave_array@@Base+0x460>
   1697c:	ldr	r0, [pc, #432]	; 16b34 <dim_leave_array@@Base+0x608>
   16980:	bl	123f4 <coda_cursor_goto_parent@plt>
   16984:	mov	r3, #1
   16988:	b	16b28 <dim_leave_array@@Base+0x5fc>
   1698c:	ldr	r3, [fp, #-8]
   16990:	sub	r2, r3, #1
   16994:	ldr	r3, [fp, #-16]
   16998:	cmp	r2, r3
   1699c:	ble	16a04 <dim_leave_array@@Base+0x4d8>
   169a0:	ldr	r0, [pc, #396]	; 16b34 <dim_leave_array@@Base+0x608>
   169a4:	bl	12460 <coda_cursor_goto_next_array_element@plt>
   169a8:	mov	r3, r0
   169ac:	cmp	r3, #0
   169b0:	beq	169b8 <dim_leave_array@@Base+0x48c>
   169b4:	bl	1a55c <handle_coda_error@@Base>
   169b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   169bc:	add	r2, r3, #1
   169c0:	ldr	r1, [pc, #368]	; 16b38 <dim_leave_array@@Base+0x60c>
   169c4:	mov	r3, r2
   169c8:	lsl	r3, r3, #2
   169cc:	add	r3, r3, r2
   169d0:	lsl	r3, r3, #4
   169d4:	add	r3, r1, r3
   169d8:	add	r3, r3, #844	; 0x34c
   169dc:	ldr	r3, [r3]
   169e0:	add	r1, r3, #1
   169e4:	ldr	r0, [pc, #332]	; 16b38 <dim_leave_array@@Base+0x60c>
   169e8:	mov	r3, r2
   169ec:	lsl	r3, r3, #2
   169f0:	add	r3, r3, r2
   169f4:	lsl	r3, r3, #4
   169f8:	add	r3, r0, r3
   169fc:	add	r3, r3, #844	; 0x34c
   16a00:	str	r1, [r3]
   16a04:	ldr	r3, [fp, #-16]
   16a08:	add	r3, r3, #1
   16a0c:	str	r3, [fp, #-16]
   16a10:	ldr	r2, [fp, #-16]
   16a14:	ldr	r3, [fp, #-8]
   16a18:	cmp	r2, r3
   16a1c:	blt	16954 <dim_leave_array@@Base+0x428>
   16a20:	ldr	r0, [pc, #268]	; 16b34 <dim_leave_array@@Base+0x608>
   16a24:	bl	123f4 <coda_cursor_goto_parent@plt>
   16a28:	b	16b18 <dim_leave_array@@Base+0x5ec>
   16a2c:	ldr	r2, [pc, #260]	; 16b38 <dim_leave_array@@Base+0x60c>
   16a30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16a34:	add	r3, r3, #872	; 0x368
   16a38:	lsl	r3, r3, #2
   16a3c:	add	r3, r2, r3
   16a40:	ldr	r3, [r3, #4]
   16a44:	sub	r2, fp, #32
   16a48:	mov	r1, r3
   16a4c:	ldr	r0, [pc, #224]	; 16b34 <dim_leave_array@@Base+0x608>
   16a50:	bl	1222c <coda_cursor_get_record_field_available_status@plt>
   16a54:	mov	r3, r0
   16a58:	cmp	r3, #0
   16a5c:	beq	16a64 <dim_leave_array@@Base+0x538>
   16a60:	bl	1a55c <handle_coda_error@@Base>
   16a64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16a68:	cmp	r3, #0
   16a6c:	beq	16b20 <dim_leave_array@@Base+0x5f4>
   16a70:	ldr	r3, [pc, #192]	; 16b38 <dim_leave_array@@Base+0x60c>
   16a74:	ldr	r3, [r3, #3748]	; 0xea4
   16a78:	sub	r2, r3, #1
   16a7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16a80:	cmp	r2, r3
   16a84:	bne	16a90 <dim_leave_array@@Base+0x564>
   16a88:	mov	r3, #1
   16a8c:	b	16b28 <dim_leave_array@@Base+0x5fc>
   16a90:	ldr	r2, [pc, #160]	; 16b38 <dim_leave_array@@Base+0x60c>
   16a94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16a98:	add	r3, r3, #872	; 0x368
   16a9c:	lsl	r3, r3, #2
   16aa0:	add	r3, r2, r3
   16aa4:	ldr	r3, [r3, #4]
   16aa8:	mov	r1, r3
   16aac:	ldr	r0, [pc, #128]	; 16b34 <dim_leave_array@@Base+0x608>
   16ab0:	bl	12394 <coda_cursor_goto_record_field_by_index@plt>
   16ab4:	mov	r3, r0
   16ab8:	cmp	r3, #0
   16abc:	beq	16ac4 <dim_leave_array@@Base+0x598>
   16ac0:	bl	1a55c <handle_coda_error@@Base>
   16ac4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16ac8:	add	r0, r3, #1
   16acc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16ad0:	add	r3, r3, #1
   16ad4:	mov	r2, r3
   16ad8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16adc:	bl	16768 <dim_leave_array@@Base+0x23c>
   16ae0:	mov	r3, r0
   16ae4:	str	r3, [fp, #-32]	; 0xffffffe0
   16ae8:	ldr	r0, [pc, #68]	; 16b34 <dim_leave_array@@Base+0x608>
   16aec:	bl	123f4 <coda_cursor_goto_parent@plt>
   16af0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16af4:	cmp	r3, #0
   16af8:	beq	16b20 <dim_leave_array@@Base+0x5f4>
   16afc:	mov	r3, #1
   16b00:	b	16b28 <dim_leave_array@@Base+0x5fc>
   16b04:	ldr	r3, [pc, #48]	; 16b3c <dim_leave_array@@Base+0x610>
   16b08:	ldr	r2, [pc, #64]	; 16b50 <dim_leave_array@@Base+0x624>
   16b0c:	ldr	r1, [pc, #48]	; 16b44 <dim_leave_array@@Base+0x618>
   16b10:	ldr	r0, [pc, #60]	; 16b54 <dim_leave_array@@Base+0x628>
   16b14:	bl	12658 <__assert_fail@plt>
   16b18:	nop			; (mov r0, r0)
   16b1c:	b	16b24 <dim_leave_array@@Base+0x5f8>
   16b20:	nop			; (mov r0, r0)
   16b24:	mov	r3, #0
   16b28:	mov	r0, r3
   16b2c:	sub	sp, fp, #4
   16b30:	pop	{fp, pc}
   16b34:	andeq	pc, r2, r0, lsl #5
   16b38:	strdeq	pc, [r2], -r0
   16b3c:	andeq	ip, r1, r8, ror pc
   16b40:	andeq	r0, r0, lr, ror r2
   16b44:	muleq	r1, r0, sp
   16b48:	andeq	ip, r1, r0, lsl #30
   16b4c:	strheq	r0, [r3], -r8
   16b50:	ldrdeq	r0, [r0], -r9
   16b54:	andeq	ip, r1, r0, lsr #29

00016b58 <dim_record_field_available@@Base>:
   16b58:	push	{fp, lr}
   16b5c:	add	fp, sp, #4
   16b60:	mov	r2, #0
   16b64:	mov	r1, #0
   16b68:	mov	r0, #0
   16b6c:	bl	16768 <dim_leave_array@@Base+0x23c>
   16b70:	mov	r3, r0
   16b74:	mov	r0, r3
   16b78:	pop	{fp, pc}
   16b7c:	push	{r4, fp, lr}
   16b80:	add	fp, sp, #8
   16b84:	sub	sp, sp, #36	; 0x24
   16b88:	str	r0, [fp, #-24]	; 0xffffffe8
   16b8c:	str	r1, [fp, #-28]	; 0xffffffe4
   16b90:	str	r2, [fp, #-32]	; 0xffffffe0
   16b94:	mov	r3, #0
   16b98:	str	r3, [fp, #-16]
   16b9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16ba0:	cmp	r3, #0
   16ba4:	bne	16bbc <dim_record_field_available@@Base+0x64>
   16ba8:	ldr	r3, [pc, #860]	; 16f0c <dim_record_field_available@@Base+0x3b4>
   16bac:	mov	r2, #44	; 0x2c
   16bb0:	ldr	r1, [pc, #856]	; 16f10 <dim_record_field_available@@Base+0x3b8>
   16bb4:	ldr	r0, [pc, #856]	; 16f14 <dim_record_field_available@@Base+0x3bc>
   16bb8:	bl	12658 <__assert_fail@plt>
   16bbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16bc0:	cmp	r3, #0
   16bc4:	bne	16bdc <dim_record_field_available@@Base+0x84>
   16bc8:	ldr	r3, [pc, #828]	; 16f0c <dim_record_field_available@@Base+0x3b4>
   16bcc:	mov	r2, #45	; 0x2d
   16bd0:	ldr	r1, [pc, #824]	; 16f10 <dim_record_field_available@@Base+0x3b8>
   16bd4:	ldr	r0, [pc, #828]	; 16f18 <dim_record_field_available@@Base+0x3c0>
   16bd8:	bl	12658 <__assert_fail@plt>
   16bdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16be0:	cmp	r3, #0
   16be4:	bne	16c08 <dim_record_field_available@@Base+0xb0>
   16be8:	ldr	r3, [pc, #796]	; 16f0c <dim_record_field_available@@Base+0x3b4>
   16bec:	mov	r2, #46	; 0x2e
   16bf0:	ldr	r1, [pc, #792]	; 16f10 <dim_record_field_available@@Base+0x3b8>
   16bf4:	ldr	r0, [pc, #800]	; 16f1c <dim_record_field_available@@Base+0x3c4>
   16bf8:	bl	12658 <__assert_fail@plt>
   16bfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c00:	add	r3, r3, #1
   16c04:	str	r3, [fp, #-24]	; 0xffffffe8
   16c08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c0c:	ldrb	r3, [r3]
   16c10:	cmp	r3, #32
   16c14:	beq	16bfc <dim_record_field_available@@Base+0xa4>
   16c18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c1c:	ldrb	r3, [r3]
   16c20:	cmp	r3, #9
   16c24:	beq	16bfc <dim_record_field_available@@Base+0xa4>
   16c28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c2c:	ldrb	r3, [r3]
   16c30:	cmp	r3, #10
   16c34:	beq	16bfc <dim_record_field_available@@Base+0xa4>
   16c38:	b	16c48 <dim_record_field_available@@Base+0xf0>
   16c3c:	ldr	r3, [fp, #-16]
   16c40:	add	r3, r3, #1
   16c44:	str	r3, [fp, #-16]
   16c48:	ldr	r3, [fp, #-16]
   16c4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c50:	add	r3, r2, r3
   16c54:	ldrb	r3, [r3]
   16c58:	cmp	r3, #0
   16c5c:	beq	16ca8 <dim_record_field_available@@Base+0x150>
   16c60:	ldr	r3, [fp, #-16]
   16c64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c68:	add	r3, r2, r3
   16c6c:	ldrb	r3, [r3]
   16c70:	cmp	r3, #46	; 0x2e
   16c74:	beq	16ca8 <dim_record_field_available@@Base+0x150>
   16c78:	ldr	r3, [fp, #-16]
   16c7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c80:	add	r3, r2, r3
   16c84:	ldrb	r3, [r3]
   16c88:	cmp	r3, #59	; 0x3b
   16c8c:	beq	16ca8 <dim_record_field_available@@Base+0x150>
   16c90:	ldr	r3, [fp, #-16]
   16c94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c98:	add	r3, r2, r3
   16c9c:	ldrb	r3, [r3]
   16ca0:	cmp	r3, #44	; 0x2c
   16ca4:	bne	16c3c <dim_record_field_available@@Base+0xe4>
   16ca8:	ldr	r3, [fp, #-16]
   16cac:	cmp	r3, #0
   16cb0:	ble	16ef4 <dim_record_field_available@@Base+0x39c>
   16cb4:	ldr	r3, [fp, #-16]
   16cb8:	str	r3, [fp, #-20]	; 0xffffffec
   16cbc:	mov	r0, #12
   16cc0:	bl	123c4 <malloc@plt>
   16cc4:	mov	r3, r0
   16cc8:	mov	r2, r3
   16ccc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16cd0:	str	r2, [r3]
   16cd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16cd8:	ldr	r3, [r3]
   16cdc:	cmp	r3, #0
   16ce0:	bne	16d04 <dim_record_field_available@@Base+0x1ac>
   16ce4:	mov	r3, #69	; 0x45
   16ce8:	str	r3, [sp]
   16cec:	ldr	r3, [pc, #540]	; 16f10 <dim_record_field_available@@Base+0x3b8>
   16cf0:	mov	r2, #12
   16cf4:	ldr	r1, [pc, #548]	; 16f20 <dim_record_field_available@@Base+0x3c8>
   16cf8:	mvn	r0, #0
   16cfc:	bl	12244 <coda_set_error@plt>
   16d00:	bl	1a55c <handle_coda_error@@Base>
   16d04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d08:	ldr	r4, [r3]
   16d0c:	ldr	r3, [fp, #-16]
   16d10:	add	r3, r3, #1
   16d14:	mov	r0, r3
   16d18:	bl	123c4 <malloc@plt>
   16d1c:	mov	r3, r0
   16d20:	str	r3, [r4]
   16d24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d28:	ldr	r3, [r3]
   16d2c:	ldr	r3, [r3]
   16d30:	cmp	r3, #0
   16d34:	bne	16d5c <dim_record_field_available@@Base+0x204>
   16d38:	ldr	r3, [fp, #-16]
   16d3c:	add	r2, r3, #1
   16d40:	mov	r3, #76	; 0x4c
   16d44:	str	r3, [sp]
   16d48:	ldr	r3, [pc, #448]	; 16f10 <dim_record_field_available@@Base+0x3b8>
   16d4c:	ldr	r1, [pc, #464]	; 16f24 <dim_record_field_available@@Base+0x3cc>
   16d50:	mvn	r0, #0
   16d54:	bl	12244 <coda_set_error@plt>
   16d58:	bl	1a55c <handle_coda_error@@Base>
   16d5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d60:	ldr	r3, [r3]
   16d64:	ldr	r3, [r3]
   16d68:	ldr	r2, [fp, #-16]
   16d6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d70:	mov	r0, r3
   16d74:	bl	124c0 <strncpy@plt>
   16d78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d7c:	ldr	r3, [r3]
   16d80:	mov	r2, #0
   16d84:	str	r2, [r3, #4]
   16d88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d8c:	ldr	r3, [r3]
   16d90:	mov	r2, #0
   16d94:	str	r2, [r3, #8]
   16d98:	b	16da8 <dim_record_field_available@@Base+0x250>
   16d9c:	ldr	r3, [fp, #-16]
   16da0:	sub	r3, r3, #1
   16da4:	str	r3, [fp, #-16]
   16da8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16dac:	ldr	r3, [r3]
   16db0:	ldr	r2, [r3]
   16db4:	ldr	r3, [fp, #-16]
   16db8:	sub	r3, r3, #1
   16dbc:	add	r3, r2, r3
   16dc0:	ldrb	r3, [r3]
   16dc4:	cmp	r3, #32
   16dc8:	beq	16d9c <dim_record_field_available@@Base+0x244>
   16dcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16dd0:	ldr	r3, [r3]
   16dd4:	ldr	r2, [r3]
   16dd8:	ldr	r3, [fp, #-16]
   16ddc:	sub	r3, r3, #1
   16de0:	add	r3, r2, r3
   16de4:	ldrb	r3, [r3]
   16de8:	cmp	r3, #9
   16dec:	beq	16d9c <dim_record_field_available@@Base+0x244>
   16df0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16df4:	ldr	r3, [r3]
   16df8:	ldr	r2, [r3]
   16dfc:	ldr	r3, [fp, #-16]
   16e00:	sub	r3, r3, #1
   16e04:	add	r3, r2, r3
   16e08:	ldrb	r3, [r3]
   16e0c:	cmp	r3, #10
   16e10:	beq	16d9c <dim_record_field_available@@Base+0x244>
   16e14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16e18:	ldr	r3, [r3]
   16e1c:	ldr	r2, [r3]
   16e20:	ldr	r3, [fp, #-16]
   16e24:	add	r3, r2, r3
   16e28:	mov	r2, #0
   16e2c:	strb	r2, [r3]
   16e30:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e38:	add	r3, r2, r3
   16e3c:	ldrb	r3, [r3]
   16e40:	cmp	r3, #46	; 0x2e
   16e44:	bne	16e90 <dim_record_field_available@@Base+0x338>
   16e48:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e4c:	add	r3, r3, #1
   16e50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e54:	add	r0, r2, r3
   16e58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16e5c:	ldr	r3, [r3]
   16e60:	add	r3, r3, #4
   16e64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16e68:	mov	r1, r3
   16e6c:	bl	16b7c <dim_record_field_available@@Base+0x24>
   16e70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16e74:	ldr	r3, [r3]
   16e78:	ldr	r3, [r3, #4]
   16e7c:	cmp	r3, #0
   16e80:	bne	16f00 <dim_record_field_available@@Base+0x3a8>
   16e84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16e88:	bl	1715c <codadump_filter_remove@@Base>
   16e8c:	b	16f00 <dim_record_field_available@@Base+0x3a8>
   16e90:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e98:	add	r3, r2, r3
   16e9c:	ldrb	r3, [r3]
   16ea0:	cmp	r3, #59	; 0x3b
   16ea4:	beq	16ec0 <dim_record_field_available@@Base+0x368>
   16ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16eac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16eb0:	add	r3, r2, r3
   16eb4:	ldrb	r3, [r3]
   16eb8:	cmp	r3, #44	; 0x2c
   16ebc:	bne	16edc <dim_record_field_available@@Base+0x384>
   16ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16ec4:	add	r3, r3, #1
   16ec8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16ecc:	add	r2, r2, r3
   16ed0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16ed4:	str	r2, [r3]
   16ed8:	b	16f00 <dim_record_field_available@@Base+0x3a8>
   16edc:	ldr	r3, [fp, #-20]	; 0xffffffec
   16ee0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16ee4:	add	r2, r2, r3
   16ee8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16eec:	str	r2, [r3]
   16ef0:	b	16f00 <dim_record_field_available@@Base+0x3a8>
   16ef4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ef8:	mov	r2, #0
   16efc:	str	r2, [r3]
   16f00:	nop			; (mov r0, r0)
   16f04:	sub	sp, fp, #8
   16f08:	pop	{r4, fp, pc}
   16f0c:	muleq	r1, r4, r0
   16f10:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   16f14:	strdeq	ip, [r1], -r4
   16f18:	andeq	sp, r1, r8
   16f1c:	andeq	sp, r1, r8, lsl r0
   16f20:	andeq	sp, r1, r8, lsr #32
   16f24:	andeq	sp, r1, r0, rrx
   16f28:	push	{fp, lr}
   16f2c:	add	fp, sp, #4
   16f30:	sub	sp, sp, #8
   16f34:	str	r0, [fp, #-8]
   16f38:	str	r1, [fp, #-12]
   16f3c:	ldr	r3, [fp, #-8]
   16f40:	cmp	r3, #0
   16f44:	bne	16f5c <dim_record_field_available@@Base+0x404>
   16f48:	ldr	r3, [pc, #304]	; 17080 <dim_record_field_available@@Base+0x528>
   16f4c:	mov	r2, #117	; 0x75
   16f50:	ldr	r1, [pc, #300]	; 17084 <dim_record_field_available@@Base+0x52c>
   16f54:	ldr	r0, [pc, #300]	; 17088 <dim_record_field_available@@Base+0x530>
   16f58:	bl	12658 <__assert_fail@plt>
   16f5c:	ldr	r3, [fp, #-12]
   16f60:	cmp	r3, #0
   16f64:	beq	17074 <dim_record_field_available@@Base+0x51c>
   16f68:	ldr	r3, [fp, #-8]
   16f6c:	ldr	r3, [r3]
   16f70:	cmp	r3, #0
   16f74:	bne	16f88 <dim_record_field_available@@Base+0x430>
   16f78:	ldr	r2, [fp, #-12]
   16f7c:	ldr	r3, [fp, #-8]
   16f80:	str	r2, [r3]
   16f84:	b	17078 <dim_record_field_available@@Base+0x520>
   16f88:	ldr	r3, [fp, #-8]
   16f8c:	ldr	r3, [r3]
   16f90:	ldr	r2, [r3]
   16f94:	ldr	r3, [fp, #-12]
   16f98:	ldr	r3, [r3]
   16f9c:	mov	r1, r3
   16fa0:	mov	r0, r2
   16fa4:	bl	12208 <strcmp@plt>
   16fa8:	mov	r3, r0
   16fac:	cmp	r3, #0
   16fb0:	bne	1702c <dim_record_field_available@@Base+0x4d4>
   16fb4:	ldr	r3, [fp, #-8]
   16fb8:	ldr	r3, [r3]
   16fbc:	ldr	r3, [r3, #4]
   16fc0:	cmp	r3, #0
   16fc4:	beq	1701c <dim_record_field_available@@Base+0x4c4>
   16fc8:	ldr	r3, [fp, #-12]
   16fcc:	ldr	r3, [r3, #4]
   16fd0:	cmp	r3, #0
   16fd4:	beq	17008 <dim_record_field_available@@Base+0x4b0>
   16fd8:	ldr	r3, [fp, #-8]
   16fdc:	ldr	r3, [r3]
   16fe0:	add	r2, r3, #4
   16fe4:	ldr	r3, [fp, #-12]
   16fe8:	ldr	r3, [r3, #4]
   16fec:	mov	r1, r3
   16ff0:	mov	r0, r2
   16ff4:	bl	16f28 <dim_record_field_available@@Base+0x3d0>
   16ff8:	ldr	r3, [fp, #-12]
   16ffc:	mov	r2, #0
   17000:	str	r2, [r3, #4]
   17004:	b	1701c <dim_record_field_available@@Base+0x4c4>
   17008:	ldr	r3, [fp, #-8]
   1700c:	ldr	r3, [r3]
   17010:	add	r3, r3, #4
   17014:	mov	r0, r3
   17018:	bl	1715c <codadump_filter_remove@@Base>
   1701c:	sub	r3, fp, #12
   17020:	mov	r0, r3
   17024:	bl	1715c <codadump_filter_remove@@Base>
   17028:	b	17078 <dim_record_field_available@@Base+0x520>
   1702c:	ldr	r3, [fp, #-8]
   17030:	ldr	r3, [r3]
   17034:	ldr	r3, [r3, #8]
   17038:	cmp	r3, #0
   1703c:	beq	17060 <dim_record_field_available@@Base+0x508>
   17040:	ldr	r3, [fp, #-8]
   17044:	ldr	r3, [r3]
   17048:	add	r3, r3, #8
   1704c:	ldr	r2, [fp, #-12]
   17050:	mov	r1, r2
   17054:	mov	r0, r3
   17058:	bl	16f28 <dim_record_field_available@@Base+0x3d0>
   1705c:	b	17078 <dim_record_field_available@@Base+0x520>
   17060:	ldr	r3, [fp, #-8]
   17064:	ldr	r3, [r3]
   17068:	ldr	r2, [fp, #-12]
   1706c:	str	r2, [r3, #8]
   17070:	b	17078 <dim_record_field_available@@Base+0x520>
   17074:	nop			; (mov r0, r0)
   17078:	sub	sp, fp, #4
   1707c:	pop	{fp, pc}
   17080:	andeq	sp, r1, r4, lsr #1
   17084:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   17088:	andeq	sp, r1, r8
   1708c:	push	{fp, lr}
   17090:	add	fp, sp, #4
   17094:	sub	sp, sp, #16
   17098:	str	r0, [fp, #-16]
   1709c:	str	r1, [fp, #-20]	; 0xffffffec
   170a0:	mov	r3, #0
   170a4:	str	r3, [fp, #-8]
   170a8:	ldr	r3, [fp, #-16]
   170ac:	str	r3, [fp, #-12]
   170b0:	ldr	r3, [fp, #-16]
   170b4:	cmp	r3, #0
   170b8:	beq	17118 <dim_record_field_available@@Base+0x5c0>
   170bc:	b	17104 <dim_record_field_available@@Base+0x5ac>
   170c0:	ldr	r3, [fp, #-12]
   170c4:	sub	r2, fp, #12
   170c8:	sub	r1, fp, #8
   170cc:	mov	r0, r3
   170d0:	bl	16b7c <dim_record_field_available@@Base+0x24>
   170d4:	ldr	r3, [fp, #-8]
   170d8:	cmp	r3, #0
   170dc:	bne	170ec <dim_record_field_available@@Base+0x594>
   170e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   170e4:	bl	1715c <codadump_filter_remove@@Base>
   170e8:	b	1711c <dim_record_field_available@@Base+0x5c4>
   170ec:	ldr	r3, [fp, #-8]
   170f0:	mov	r1, r3
   170f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   170f8:	bl	16f28 <dim_record_field_available@@Base+0x3d0>
   170fc:	mov	r3, #0
   17100:	str	r3, [fp, #-8]
   17104:	ldr	r3, [fp, #-12]
   17108:	ldrb	r3, [r3]
   1710c:	cmp	r3, #0
   17110:	bne	170c0 <dim_record_field_available@@Base+0x568>
   17114:	b	1711c <dim_record_field_available@@Base+0x5c4>
   17118:	nop			; (mov r0, r0)
   1711c:	sub	sp, fp, #4
   17120:	pop	{fp, pc}

00017124 <codadump_filter_create@@Base>:
   17124:	push	{fp, lr}
   17128:	add	fp, sp, #4
   1712c:	sub	sp, sp, #16
   17130:	str	r0, [fp, #-16]
   17134:	mov	r3, #0
   17138:	str	r3, [fp, #-8]
   1713c:	sub	r3, fp, #8
   17140:	mov	r1, r3
   17144:	ldr	r0, [fp, #-16]
   17148:	bl	1708c <dim_record_field_available@@Base+0x534>
   1714c:	ldr	r3, [fp, #-8]
   17150:	mov	r0, r3
   17154:	sub	sp, fp, #4
   17158:	pop	{fp, pc}

0001715c <codadump_filter_remove@@Base>:
   1715c:	push	{fp, lr}
   17160:	add	fp, sp, #4
   17164:	sub	sp, sp, #8
   17168:	str	r0, [fp, #-8]
   1716c:	ldr	r3, [fp, #-8]
   17170:	cmp	r3, #0
   17174:	bne	1718c <codadump_filter_remove@@Base+0x30>
   17178:	ldr	r3, [pc, #204]	; 1724c <codadump_filter_remove@@Base+0xf0>
   1717c:	mov	r2, #192	; 0xc0
   17180:	ldr	r1, [pc, #200]	; 17250 <codadump_filter_remove@@Base+0xf4>
   17184:	ldr	r0, [pc, #200]	; 17254 <codadump_filter_remove@@Base+0xf8>
   17188:	bl	12658 <__assert_fail@plt>
   1718c:	ldr	r3, [fp, #-8]
   17190:	ldr	r3, [r3]
   17194:	cmp	r3, #0
   17198:	beq	17240 <codadump_filter_remove@@Base+0xe4>
   1719c:	ldr	r3, [fp, #-8]
   171a0:	ldr	r3, [r3]
   171a4:	ldr	r3, [r3, #8]
   171a8:	cmp	r3, #0
   171ac:	beq	171c4 <codadump_filter_remove@@Base+0x68>
   171b0:	ldr	r3, [fp, #-8]
   171b4:	ldr	r3, [r3]
   171b8:	add	r3, r3, #8
   171bc:	mov	r0, r3
   171c0:	bl	1715c <codadump_filter_remove@@Base>
   171c4:	ldr	r3, [fp, #-8]
   171c8:	ldr	r3, [r3]
   171cc:	ldr	r3, [r3, #4]
   171d0:	cmp	r3, #0
   171d4:	beq	171ec <codadump_filter_remove@@Base+0x90>
   171d8:	ldr	r3, [fp, #-8]
   171dc:	ldr	r3, [r3]
   171e0:	add	r3, r3, #4
   171e4:	mov	r0, r3
   171e8:	bl	1715c <codadump_filter_remove@@Base>
   171ec:	ldr	r3, [fp, #-8]
   171f0:	ldr	r3, [r3]
   171f4:	ldr	r3, [r3]
   171f8:	cmp	r3, #0
   171fc:	beq	17224 <codadump_filter_remove@@Base+0xc8>
   17200:	ldr	r3, [fp, #-8]
   17204:	ldr	r3, [r3]
   17208:	ldr	r3, [r3]
   1720c:	mov	r0, r3
   17210:	bl	1228c <free@plt>
   17214:	ldr	r3, [fp, #-8]
   17218:	ldr	r3, [r3]
   1721c:	mov	r2, #0
   17220:	str	r2, [r3]
   17224:	ldr	r3, [fp, #-8]
   17228:	ldr	r3, [r3]
   1722c:	mov	r0, r3
   17230:	bl	1228c <free@plt>
   17234:	ldr	r3, [fp, #-8]
   17238:	mov	r2, #0
   1723c:	str	r2, [r3]
   17240:	nop			; (mov r0, r0)
   17244:	sub	sp, fp, #4
   17248:	pop	{fp, pc}
   1724c:	strheq	sp, [r1], -r0
   17250:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   17254:	andeq	sp, r1, r8

00017258 <codadump_filter_get_fieldname@@Base>:
   17258:	push	{fp, lr}
   1725c:	add	fp, sp, #4
   17260:	sub	sp, sp, #8
   17264:	str	r0, [fp, #-8]
   17268:	ldr	r3, [fp, #-8]
   1726c:	cmp	r3, #0
   17270:	bne	17288 <codadump_filter_get_fieldname@@Base+0x30>
   17274:	ldr	r3, [pc, #32]	; 1729c <codadump_filter_get_fieldname@@Base+0x44>
   17278:	mov	r2, #216	; 0xd8
   1727c:	ldr	r1, [pc, #28]	; 172a0 <codadump_filter_get_fieldname@@Base+0x48>
   17280:	ldr	r0, [pc, #28]	; 172a4 <codadump_filter_get_fieldname@@Base+0x4c>
   17284:	bl	12658 <__assert_fail@plt>
   17288:	ldr	r3, [fp, #-8]
   1728c:	ldr	r3, [r3]
   17290:	mov	r0, r3
   17294:	sub	sp, fp, #4
   17298:	pop	{fp, pc}
   1729c:	andeq	sp, r1, r8, asr #1
   172a0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   172a4:	andeq	sp, r1, r8

000172a8 <codadump_filter_get_subfilter@@Base>:
   172a8:	push	{fp, lr}
   172ac:	add	fp, sp, #4
   172b0:	sub	sp, sp, #8
   172b4:	str	r0, [fp, #-8]
   172b8:	ldr	r3, [fp, #-8]
   172bc:	cmp	r3, #0
   172c0:	bne	172d8 <codadump_filter_get_subfilter@@Base+0x30>
   172c4:	ldr	r3, [pc, #32]	; 172ec <codadump_filter_get_subfilter@@Base+0x44>
   172c8:	mov	r2, #223	; 0xdf
   172cc:	ldr	r1, [pc, #28]	; 172f0 <codadump_filter_get_subfilter@@Base+0x48>
   172d0:	ldr	r0, [pc, #28]	; 172f4 <codadump_filter_get_subfilter@@Base+0x4c>
   172d4:	bl	12658 <__assert_fail@plt>
   172d8:	ldr	r3, [fp, #-8]
   172dc:	ldr	r3, [r3, #4]
   172e0:	mov	r0, r3
   172e4:	sub	sp, fp, #4
   172e8:	pop	{fp, pc}
   172ec:	andeq	sp, r1, r8, ror #1
   172f0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   172f4:	andeq	sp, r1, r8

000172f8 <codadump_filter_get_next_filter@@Base>:
   172f8:	push	{fp, lr}
   172fc:	add	fp, sp, #4
   17300:	sub	sp, sp, #8
   17304:	str	r0, [fp, #-8]
   17308:	ldr	r3, [fp, #-8]
   1730c:	cmp	r3, #0
   17310:	bne	17328 <codadump_filter_get_next_filter@@Base+0x30>
   17314:	ldr	r3, [pc, #32]	; 1733c <codadump_filter_get_next_filter@@Base+0x44>
   17318:	mov	r2, #230	; 0xe6
   1731c:	ldr	r1, [pc, #28]	; 17340 <codadump_filter_get_next_filter@@Base+0x48>
   17320:	ldr	r0, [pc, #28]	; 17344 <codadump_filter_get_next_filter@@Base+0x4c>
   17324:	bl	12658 <__assert_fail@plt>
   17328:	ldr	r3, [fp, #-8]
   1732c:	ldr	r3, [r3, #8]
   17330:	mov	r0, r3
   17334:	sub	sp, fp, #4
   17338:	pop	{fp, pc}
   1733c:	andeq	sp, r1, r8, lsl #2
   17340:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   17344:	andeq	sp, r1, r8
   17348:	push	{r0, r1, r2, r3}
   1734c:	push	{fp, lr}
   17350:	add	fp, sp, #4
   17354:	sub	sp, sp, #8
   17358:	add	r3, fp, #8
   1735c:	str	r3, [fp, #-12]
   17360:	ldr	r3, [pc, #44]	; 17394 <codadump_filter_get_next_filter@@Base+0x9c>
   17364:	ldr	r3, [r3]
   17368:	ldr	r2, [fp, #-12]
   1736c:	ldr	r1, [fp, #4]
   17370:	mov	r0, r3
   17374:	bl	12550 <vfprintf@plt>
   17378:	str	r0, [fp, #-8]
   1737c:	ldr	r3, [fp, #-8]
   17380:	mov	r0, r3
   17384:	sub	sp, fp, #4
   17388:	pop	{fp, lr}
   1738c:	add	sp, sp, #16
   17390:	bx	lr
   17394:	muleq	r3, r8, r0
   17398:	push	{fp, lr}
   1739c:	add	fp, sp, #4
   173a0:	sub	sp, sp, #16
   173a4:	str	r0, [fp, #-16]
   173a8:	str	r1, [fp, #-20]	; 0xffffffec
   173ac:	mov	r3, #0
   173b0:	str	r3, [fp, #-8]
   173b4:	b	174b4 <codadump_filter_get_next_filter@@Base+0x1bc>
   173b8:	ldr	r3, [fp, #-8]
   173bc:	ldr	r2, [fp, #-16]
   173c0:	add	r3, r2, r3
   173c4:	ldrb	r3, [r3]
   173c8:	strb	r3, [fp, #-9]
   173cc:	ldrb	r3, [fp, #-9]
   173d0:	cmp	r3, #12
   173d4:	beq	17424 <codadump_filter_get_next_filter@@Base+0x12c>
   173d8:	cmp	r3, #12
   173dc:	bgt	173fc <codadump_filter_get_next_filter@@Base+0x104>
   173e0:	cmp	r3, #9
   173e4:	beq	17448 <codadump_filter_get_next_filter@@Base+0x150>
   173e8:	cmp	r3, #10
   173ec:	beq	17430 <codadump_filter_get_next_filter@@Base+0x138>
   173f0:	cmp	r3, #8
   173f4:	beq	17418 <codadump_filter_get_next_filter@@Base+0x120>
   173f8:	b	1746c <codadump_filter_get_next_filter@@Base+0x174>
   173fc:	cmp	r3, #34	; 0x22
   17400:	beq	17454 <codadump_filter_get_next_filter@@Base+0x15c>
   17404:	cmp	r3, #92	; 0x5c
   17408:	beq	17460 <codadump_filter_get_next_filter@@Base+0x168>
   1740c:	cmp	r3, #13
   17410:	beq	1743c <codadump_filter_get_next_filter@@Base+0x144>
   17414:	b	1746c <codadump_filter_get_next_filter@@Base+0x174>
   17418:	ldr	r0, [pc, #176]	; 174d0 <codadump_filter_get_next_filter@@Base+0x1d8>
   1741c:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17420:	b	174a8 <codadump_filter_get_next_filter@@Base+0x1b0>
   17424:	ldr	r0, [pc, #168]	; 174d4 <codadump_filter_get_next_filter@@Base+0x1dc>
   17428:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   1742c:	b	174a8 <codadump_filter_get_next_filter@@Base+0x1b0>
   17430:	ldr	r0, [pc, #160]	; 174d8 <codadump_filter_get_next_filter@@Base+0x1e0>
   17434:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17438:	b	174a8 <codadump_filter_get_next_filter@@Base+0x1b0>
   1743c:	ldr	r0, [pc, #152]	; 174dc <codadump_filter_get_next_filter@@Base+0x1e4>
   17440:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17444:	b	174a8 <codadump_filter_get_next_filter@@Base+0x1b0>
   17448:	ldr	r0, [pc, #144]	; 174e0 <codadump_filter_get_next_filter@@Base+0x1e8>
   1744c:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17450:	b	174a8 <codadump_filter_get_next_filter@@Base+0x1b0>
   17454:	ldr	r0, [pc, #136]	; 174e4 <codadump_filter_get_next_filter@@Base+0x1ec>
   17458:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   1745c:	b	174a8 <codadump_filter_get_next_filter@@Base+0x1b0>
   17460:	ldr	r0, [pc, #128]	; 174e8 <codadump_filter_get_next_filter@@Base+0x1f0>
   17464:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17468:	b	174a8 <codadump_filter_get_next_filter@@Base+0x1b0>
   1746c:	ldrb	r3, [fp, #-9]
   17470:	cmp	r3, #31
   17474:	bls	17498 <codadump_filter_get_next_filter@@Base+0x1a0>
   17478:	ldrb	r3, [fp, #-9]
   1747c:	cmp	r3, #126	; 0x7e
   17480:	bhi	17498 <codadump_filter_get_next_filter@@Base+0x1a0>
   17484:	ldrb	r3, [fp, #-9]
   17488:	mov	r1, r3
   1748c:	ldr	r0, [pc, #88]	; 174ec <codadump_filter_get_next_filter@@Base+0x1f4>
   17490:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17494:	b	174a8 <codadump_filter_get_next_filter@@Base+0x1b0>
   17498:	ldrb	r3, [fp, #-9]
   1749c:	mov	r1, r3
   174a0:	ldr	r0, [pc, #72]	; 174f0 <codadump_filter_get_next_filter@@Base+0x1f8>
   174a4:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   174a8:	ldr	r3, [fp, #-8]
   174ac:	add	r3, r3, #1
   174b0:	str	r3, [fp, #-8]
   174b4:	ldr	r2, [fp, #-8]
   174b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   174bc:	cmp	r2, r3
   174c0:	blt	173b8 <codadump_filter_get_next_filter@@Base+0xc0>
   174c4:	nop			; (mov r0, r0)
   174c8:	sub	sp, fp, #4
   174cc:	pop	{fp, pc}
   174d0:	andeq	sp, r1, r8, lsr #2
   174d4:	andeq	sp, r1, ip, lsr #2
   174d8:	andeq	sp, r1, r0, lsr r1
   174dc:	andeq	sp, r1, r4, lsr r1
   174e0:	andeq	sp, r1, r8, lsr r1
   174e4:	andeq	sp, r1, ip, lsr r1
   174e8:	andeq	sp, r1, r0, asr #2
   174ec:	andeq	sp, r1, r4, asr #2
   174f0:	andeq	sp, r1, r8, asr #2
   174f4:	push	{r4, r5, fp, lr}
   174f8:	add	fp, sp, #12
   174fc:	sub	sp, sp, #288	; 0x120
   17500:	str	r0, [fp, #-288]	; 0xfffffee0
   17504:	mov	r3, #0
   17508:	str	r3, [fp, #-48]	; 0xffffffd0
   1750c:	ldr	r3, [pc, #2388]	; 17e68 <codadump_filter_get_next_filter@@Base+0xb70>
   17510:	ldr	r3, [r3]
   17514:	cmp	r3, #0
   17518:	beq	17580 <codadump_filter_get_next_filter@@Base+0x288>
   1751c:	sub	r3, fp, #48	; 0x30
   17520:	mov	r1, r3
   17524:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17528:	bl	12310 <coda_cursor_has_attributes@plt>
   1752c:	mov	r3, r0
   17530:	cmp	r3, #0
   17534:	beq	1753c <codadump_filter_get_next_filter@@Base+0x244>
   17538:	bl	1a55c <handle_coda_error@@Base>
   1753c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17540:	cmp	r3, #0
   17544:	beq	17580 <codadump_filter_get_next_filter@@Base+0x288>
   17548:	ldr	r0, [pc, #2332]	; 17e6c <codadump_filter_get_next_filter@@Base+0xb74>
   1754c:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17550:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17554:	bl	12490 <coda_cursor_goto_attributes@plt>
   17558:	mov	r3, r0
   1755c:	cmp	r3, #0
   17560:	beq	17568 <codadump_filter_get_next_filter@@Base+0x270>
   17564:	bl	1a55c <handle_coda_error@@Base>
   17568:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1756c:	bl	174f4 <codadump_filter_get_next_filter@@Base+0x1fc>
   17570:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17574:	bl	123f4 <coda_cursor_goto_parent@plt>
   17578:	ldr	r0, [pc, #2288]	; 17e70 <codadump_filter_get_next_filter@@Base+0xb78>
   1757c:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17580:	sub	r3, fp, #44	; 0x2c
   17584:	mov	r1, r3
   17588:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1758c:	bl	1231c <coda_cursor_get_type_class@plt>
   17590:	mov	r3, r0
   17594:	cmp	r3, #0
   17598:	beq	175a0 <codadump_filter_get_next_filter@@Base+0x2a8>
   1759c:	bl	1a55c <handle_coda_error@@Base>
   175a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   175a4:	cmp	r3, #6
   175a8:	ldrls	pc, [pc, r3, lsl #2]
   175ac:	b	17e48 <codadump_filter_get_next_filter@@Base+0xb50>
   175b0:	andeq	r7, r1, ip, asr #11
   175b4:	andeq	r7, r1, ip, ror #15
   175b8:	andeq	r7, r1, r0, lsl r9
   175bc:	andeq	r7, r1, r0, lsl r9
   175c0:	andeq	r7, r1, r0, lsl r9
   175c4:	andeq	r7, r1, r0, lsl r9
   175c8:	ldrdeq	r7, [r1], -r4
   175cc:	ldr	r0, [pc, #2208]	; 17e74 <codadump_filter_get_next_filter@@Base+0xb7c>
   175d0:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   175d4:	sub	r3, fp, #52	; 0x34
   175d8:	mov	r1, r3
   175dc:	ldr	r0, [fp, #-288]	; 0xfffffee0
   175e0:	bl	12274 <coda_cursor_get_num_elements@plt>
   175e4:	mov	r3, r0
   175e8:	cmp	r3, #0
   175ec:	beq	175f4 <codadump_filter_get_next_filter@@Base+0x2fc>
   175f0:	bl	1a55c <handle_coda_error@@Base>
   175f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   175f8:	cmp	r3, #0
   175fc:	ble	177e0 <codadump_filter_get_next_filter@@Base+0x4e8>
   17600:	sub	r3, fp, #56	; 0x38
   17604:	mov	r1, r3
   17608:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1760c:	bl	122d4 <coda_cursor_get_type@plt>
   17610:	mov	r3, r0
   17614:	cmp	r3, #0
   17618:	beq	17620 <codadump_filter_get_next_filter@@Base+0x328>
   1761c:	bl	1a55c <handle_coda_error@@Base>
   17620:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17624:	sub	r2, fp, #60	; 0x3c
   17628:	mov	r1, r2
   1762c:	mov	r0, r3
   17630:	bl	124d8 <coda_type_get_record_union_status@plt>
   17634:	mov	r3, r0
   17638:	cmp	r3, #0
   1763c:	beq	17644 <codadump_filter_get_next_filter@@Base+0x34c>
   17640:	bl	1a55c <handle_coda_error@@Base>
   17644:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17648:	cmp	r3, #0
   1764c:	beq	176d8 <codadump_filter_get_next_filter@@Base+0x3e0>
   17650:	sub	r3, fp, #64	; 0x40
   17654:	mov	r1, r3
   17658:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1765c:	bl	125d4 <coda_cursor_get_available_union_field_index@plt>
   17660:	mov	r3, r0
   17664:	cmp	r3, #0
   17668:	beq	17670 <codadump_filter_get_next_filter@@Base+0x378>
   1766c:	bl	1a55c <handle_coda_error@@Base>
   17670:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17674:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17678:	sub	r2, fp, #68	; 0x44
   1767c:	mov	r0, r3
   17680:	bl	1261c <coda_type_get_record_field_name@plt>
   17684:	mov	r3, r0
   17688:	cmp	r3, #0
   1768c:	beq	17694 <codadump_filter_get_next_filter@@Base+0x39c>
   17690:	bl	1a55c <handle_coda_error@@Base>
   17694:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17698:	mov	r1, r3
   1769c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   176a0:	bl	12394 <coda_cursor_goto_record_field_by_index@plt>
   176a4:	mov	r3, r0
   176a8:	cmp	r3, #0
   176ac:	beq	176b4 <codadump_filter_get_next_filter@@Base+0x3bc>
   176b0:	bl	1a55c <handle_coda_error@@Base>
   176b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   176b8:	mov	r1, r3
   176bc:	ldr	r0, [pc, #1972]	; 17e78 <codadump_filter_get_next_filter@@Base+0xb80>
   176c0:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   176c4:	ldr	r0, [fp, #-288]	; 0xfffffee0
   176c8:	bl	174f4 <codadump_filter_get_next_filter@@Base+0x1fc>
   176cc:	ldr	r0, [fp, #-288]	; 0xfffffee0
   176d0:	bl	123f4 <coda_cursor_goto_parent@plt>
   176d4:	b	177e0 <codadump_filter_get_next_filter@@Base+0x4e8>
   176d8:	mov	r3, #1
   176dc:	str	r3, [fp, #-16]
   176e0:	ldr	r0, [fp, #-288]	; 0xfffffee0
   176e4:	bl	12388 <coda_cursor_goto_first_record_field@plt>
   176e8:	mov	r3, r0
   176ec:	cmp	r3, #0
   176f0:	beq	176f8 <codadump_filter_get_next_filter@@Base+0x400>
   176f4:	bl	1a55c <handle_coda_error@@Base>
   176f8:	mov	r3, #0
   176fc:	str	r3, [fp, #-64]	; 0xffffffc0
   17700:	b	177c8 <codadump_filter_get_next_filter@@Base+0x4d0>
   17704:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17708:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1770c:	sub	r2, fp, #76	; 0x4c
   17710:	mov	r0, r3
   17714:	bl	12214 <coda_type_get_record_field_hidden_status@plt>
   17718:	mov	r3, r0
   1771c:	cmp	r3, #0
   17720:	beq	17728 <codadump_filter_get_next_filter@@Base+0x430>
   17724:	bl	1a55c <handle_coda_error@@Base>
   17728:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1772c:	cmp	r3, #0
   17730:	bne	17790 <codadump_filter_get_next_filter@@Base+0x498>
   17734:	ldr	r3, [fp, #-16]
   17738:	cmp	r3, #0
   1773c:	bne	1774c <codadump_filter_get_next_filter@@Base+0x454>
   17740:	ldr	r0, [pc, #1844]	; 17e7c <codadump_filter_get_next_filter@@Base+0xb84>
   17744:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17748:	b	17754 <codadump_filter_get_next_filter@@Base+0x45c>
   1774c:	mov	r3, #0
   17750:	str	r3, [fp, #-16]
   17754:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17758:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1775c:	sub	r2, fp, #72	; 0x48
   17760:	mov	r0, r3
   17764:	bl	1261c <coda_type_get_record_field_name@plt>
   17768:	mov	r3, r0
   1776c:	cmp	r3, #0
   17770:	beq	17778 <codadump_filter_get_next_filter@@Base+0x480>
   17774:	bl	1a55c <handle_coda_error@@Base>
   17778:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1777c:	mov	r1, r3
   17780:	ldr	r0, [pc, #1776]	; 17e78 <codadump_filter_get_next_filter@@Base+0xb80>
   17784:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17788:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1778c:	bl	174f4 <codadump_filter_get_next_filter@@Base+0x1fc>
   17790:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17794:	sub	r2, r3, #1
   17798:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1779c:	cmp	r2, r3
   177a0:	ble	177bc <codadump_filter_get_next_filter@@Base+0x4c4>
   177a4:	ldr	r0, [fp, #-288]	; 0xfffffee0
   177a8:	bl	12580 <coda_cursor_goto_next_record_field@plt>
   177ac:	mov	r3, r0
   177b0:	cmp	r3, #0
   177b4:	beq	177bc <codadump_filter_get_next_filter@@Base+0x4c4>
   177b8:	bl	1a55c <handle_coda_error@@Base>
   177bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   177c0:	add	r3, r3, #1
   177c4:	str	r3, [fp, #-64]	; 0xffffffc0
   177c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   177cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   177d0:	cmp	r2, r3
   177d4:	blt	17704 <codadump_filter_get_next_filter@@Base+0x40c>
   177d8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   177dc:	bl	123f4 <coda_cursor_goto_parent@plt>
   177e0:	ldr	r0, [pc, #1688]	; 17e80 <codadump_filter_get_next_filter@@Base+0xb88>
   177e4:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   177e8:	b	17e48 <codadump_filter_get_next_filter@@Base+0xb50>
   177ec:	ldr	r0, [pc, #1680]	; 17e84 <codadump_filter_get_next_filter@@Base+0xb8c>
   177f0:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   177f4:	sub	r2, fp, #284	; 0x11c
   177f8:	sub	r3, fp, #80	; 0x50
   177fc:	mov	r1, r3
   17800:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17804:	bl	12520 <coda_cursor_get_array_dim@plt>
   17808:	mov	r3, r0
   1780c:	cmp	r3, #0
   17810:	beq	17818 <codadump_filter_get_next_filter@@Base+0x520>
   17814:	bl	1a55c <handle_coda_error@@Base>
   17818:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1781c:	cmp	r3, #0
   17820:	blt	17904 <codadump_filter_get_next_filter@@Base+0x60c>
   17824:	mov	r3, #1
   17828:	str	r3, [fp, #-20]	; 0xffffffec
   1782c:	mov	r3, #0
   17830:	str	r3, [fp, #-24]	; 0xffffffe8
   17834:	b	17864 <codadump_filter_get_next_filter@@Base+0x56c>
   17838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1783c:	lsl	r3, r3, #2
   17840:	sub	r2, fp, #12
   17844:	add	r3, r2, r3
   17848:	ldr	r2, [r3, #-272]	; 0xfffffef0
   1784c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17850:	mul	r3, r2, r3
   17854:	str	r3, [fp, #-20]	; 0xffffffec
   17858:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1785c:	add	r3, r3, #1
   17860:	str	r3, [fp, #-24]	; 0xffffffe8
   17864:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17868:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1786c:	cmp	r2, r3
   17870:	blt	17838 <codadump_filter_get_next_filter@@Base+0x540>
   17874:	ldr	r3, [fp, #-20]	; 0xffffffec
   17878:	cmp	r3, #0
   1787c:	ble	17904 <codadump_filter_get_next_filter@@Base+0x60c>
   17880:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17884:	bl	12364 <coda_cursor_goto_first_array_element@plt>
   17888:	mov	r3, r0
   1788c:	cmp	r3, #0
   17890:	beq	17898 <codadump_filter_get_next_filter@@Base+0x5a0>
   17894:	bl	1a55c <handle_coda_error@@Base>
   17898:	mov	r3, #0
   1789c:	str	r3, [fp, #-24]	; 0xffffffe8
   178a0:	b	178ec <codadump_filter_get_next_filter@@Base+0x5f4>
   178a4:	ldr	r0, [fp, #-288]	; 0xfffffee0
   178a8:	bl	174f4 <codadump_filter_get_next_filter@@Base+0x1fc>
   178ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   178b0:	sub	r2, r3, #1
   178b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178b8:	cmp	r2, r3
   178bc:	ble	178e0 <codadump_filter_get_next_filter@@Base+0x5e8>
   178c0:	ldr	r0, [pc, #1460]	; 17e7c <codadump_filter_get_next_filter@@Base+0xb84>
   178c4:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   178c8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   178cc:	bl	12460 <coda_cursor_goto_next_array_element@plt>
   178d0:	mov	r3, r0
   178d4:	cmp	r3, #0
   178d8:	beq	178e0 <codadump_filter_get_next_filter@@Base+0x5e8>
   178dc:	bl	1a55c <handle_coda_error@@Base>
   178e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178e4:	add	r3, r3, #1
   178e8:	str	r3, [fp, #-24]	; 0xffffffe8
   178ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   178f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   178f4:	cmp	r2, r3
   178f8:	blt	178a4 <codadump_filter_get_next_filter@@Base+0x5ac>
   178fc:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17900:	bl	123f4 <coda_cursor_goto_parent@plt>
   17904:	ldr	r0, [pc, #1404]	; 17e88 <codadump_filter_get_next_filter@@Base+0xb90>
   17908:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   1790c:	b	17e48 <codadump_filter_get_next_filter@@Base+0xb50>
   17910:	sub	r3, fp, #84	; 0x54
   17914:	mov	r1, r3
   17918:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1791c:	bl	123b8 <coda_cursor_get_read_type@plt>
   17920:	mov	r3, r0
   17924:	cmp	r3, #0
   17928:	beq	17930 <codadump_filter_get_next_filter@@Base+0x638>
   1792c:	bl	1a55c <handle_coda_error@@Base>
   17930:	ldr	r3, [fp, #-84]	; 0xffffffac
   17934:	add	r3, r3, #1
   17938:	cmp	r3, #13
   1793c:	ldrls	pc, [pc, r3, lsl #2]
   17940:	b	17e3c <codadump_filter_get_next_filter@@Base+0xb44>
   17944:	andeq	r7, r1, r4, asr #25
   17948:	andeq	r7, r1, r8, lsl #23
   1794c:			; <UNDEFINED> instruction: 0x00017bbc
   17950:	andeq	r7, r1, r8, lsl #23
   17954:			; <UNDEFINED> instruction: 0x00017bbc
   17958:	andeq	r7, r1, r8, lsl #23
   1795c:			; <UNDEFINED> instruction: 0x00017bbc
   17960:	strdeq	r7, [r1], -r0
   17964:	andeq	r7, r1, r4, lsr ip
   17968:	andeq	r7, r1, r8, ror ip
   1796c:	andeq	r7, r1, r8, ror ip
   17970:	andeq	r7, r1, ip, ror r9
   17974:	andeq	r7, r1, r0, asr #19
   17978:	andeq	r7, r1, r4, lsl #21
   1797c:	sub	r3, fp, #85	; 0x55
   17980:	mov	r1, r3
   17984:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17988:	bl	1249c <coda_cursor_read_char@plt>
   1798c:	mov	r3, r0
   17990:	cmp	r3, #0
   17994:	beq	1799c <codadump_filter_get_next_filter@@Base+0x6a4>
   17998:	bl	1a55c <handle_coda_error@@Base>
   1799c:	ldr	r0, [pc, #1256]	; 17e8c <codadump_filter_get_next_filter@@Base+0xb94>
   179a0:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   179a4:	sub	r3, fp, #85	; 0x55
   179a8:	mov	r1, #1
   179ac:	mov	r0, r3
   179b0:	bl	17398 <codadump_filter_get_next_filter@@Base+0xa0>
   179b4:	ldr	r0, [pc, #1232]	; 17e8c <codadump_filter_get_next_filter@@Base+0xb94>
   179b8:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   179bc:	b	17cd0 <codadump_filter_get_next_filter@@Base+0x9d8>
   179c0:	sub	r3, fp, #92	; 0x5c
   179c4:	mov	r1, r3
   179c8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   179cc:	bl	12424 <coda_cursor_get_string_length@plt>
   179d0:	mov	r3, r0
   179d4:	cmp	r3, #0
   179d8:	beq	179e0 <codadump_filter_get_next_filter@@Base+0x6e8>
   179dc:	bl	1a55c <handle_coda_error@@Base>
   179e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   179e4:	add	r3, r3, #1
   179e8:	mov	r0, r3
   179ec:	bl	123c4 <malloc@plt>
   179f0:	mov	r3, r0
   179f4:	str	r3, [fp, #-28]	; 0xffffffe4
   179f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   179fc:	cmp	r3, #0
   17a00:	bne	17a28 <codadump_filter_get_next_filter@@Base+0x730>
   17a04:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17a08:	add	r2, r3, #1
   17a0c:	ldr	r3, [pc, #1148]	; 17e90 <codadump_filter_get_next_filter@@Base+0xb98>
   17a10:	str	r3, [sp]
   17a14:	ldr	r3, [pc, #1144]	; 17e94 <codadump_filter_get_next_filter@@Base+0xb9c>
   17a18:	ldr	r1, [pc, #1144]	; 17e98 <codadump_filter_get_next_filter@@Base+0xba0>
   17a1c:	mvn	r0, #0
   17a20:	bl	12244 <coda_set_error@plt>
   17a24:	bl	1a55c <handle_coda_error@@Base>
   17a28:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17a2c:	add	r3, r3, #1
   17a30:	mov	r2, r3
   17a34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17a38:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17a3c:	bl	123e8 <coda_cursor_read_string@plt>
   17a40:	mov	r3, r0
   17a44:	cmp	r3, #0
   17a48:	beq	17a50 <codadump_filter_get_next_filter@@Base+0x758>
   17a4c:	bl	1a55c <handle_coda_error@@Base>
   17a50:	ldr	r0, [pc, #1076]	; 17e8c <codadump_filter_get_next_filter@@Base+0xb94>
   17a54:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17a58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17a5c:	mov	r1, r3
   17a60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17a64:	bl	17398 <codadump_filter_get_next_filter@@Base+0xa0>
   17a68:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17a6c:	mov	r1, r3
   17a70:	ldr	r0, [pc, #1044]	; 17e8c <codadump_filter_get_next_filter@@Base+0xb94>
   17a74:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17a78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17a7c:	bl	1228c <free@plt>
   17a80:	b	17cd0 <codadump_filter_get_next_filter@@Base+0x9d8>
   17a84:	sub	r3, fp, #100	; 0x64
   17a88:	mov	r1, r3
   17a8c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17a90:	bl	125a4 <coda_cursor_get_bit_size@plt>
   17a94:	mov	r3, r0
   17a98:	cmp	r3, #0
   17a9c:	beq	17aa4 <codadump_filter_get_next_filter@@Base+0x7ac>
   17aa0:	bl	1a55c <handle_coda_error@@Base>
   17aa4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   17aa8:	lsr	r4, r2, #3
   17aac:	orr	r4, r4, r3, lsl #29
   17ab0:	asr	r5, r3, #3
   17ab4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   17ab8:	mov	r0, #7
   17abc:	mov	r1, #0
   17ac0:	and	r2, r2, r0
   17ac4:	and	r3, r3, r1
   17ac8:	orrs	r3, r2, r3
   17acc:	beq	17adc <codadump_filter_get_next_filter@@Base+0x7e4>
   17ad0:	mov	r2, #1
   17ad4:	mov	r3, #0
   17ad8:	b	17ae4 <codadump_filter_get_next_filter@@Base+0x7ec>
   17adc:	mov	r2, #0
   17ae0:	mov	r3, #0
   17ae4:	adds	r2, r2, r4
   17ae8:	adc	r3, r3, r5
   17aec:	strd	r2, [fp, #-36]	; 0xffffffdc
   17af0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17af4:	mov	r0, r3
   17af8:	bl	123c4 <malloc@plt>
   17afc:	mov	r3, r0
   17b00:	str	r3, [fp, #-40]	; 0xffffffd8
   17b04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17b08:	cmp	r3, #0
   17b0c:	bne	17b30 <codadump_filter_get_next_filter@@Base+0x838>
   17b10:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17b14:	ldr	r3, [pc, #896]	; 17e9c <codadump_filter_get_next_filter@@Base+0xba4>
   17b18:	str	r3, [sp]
   17b1c:	ldr	r3, [pc, #880]	; 17e94 <codadump_filter_get_next_filter@@Base+0xb9c>
   17b20:	ldr	r1, [pc, #880]	; 17e98 <codadump_filter_get_next_filter@@Base+0xba0>
   17b24:	mvn	r0, #0
   17b28:	bl	12244 <coda_set_error@plt>
   17b2c:	bl	1a55c <handle_coda_error@@Base>
   17b30:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   17b34:	strd	r2, [sp]
   17b38:	mov	r2, #0
   17b3c:	mov	r3, #0
   17b40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17b44:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17b48:	bl	12640 <coda_cursor_read_bits@plt>
   17b4c:	mov	r3, r0
   17b50:	cmp	r3, #0
   17b54:	beq	17b5c <codadump_filter_get_next_filter@@Base+0x864>
   17b58:	bl	1a55c <handle_coda_error@@Base>
   17b5c:	ldr	r0, [pc, #808]	; 17e8c <codadump_filter_get_next_filter@@Base+0xb94>
   17b60:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17b64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17b68:	mov	r1, r3
   17b6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17b70:	bl	17398 <codadump_filter_get_next_filter@@Base+0xa0>
   17b74:	ldr	r0, [pc, #784]	; 17e8c <codadump_filter_get_next_filter@@Base+0xb94>
   17b78:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17b7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17b80:	bl	1228c <free@plt>
   17b84:	b	17cd0 <codadump_filter_get_next_filter@@Base+0x9d8>
   17b88:	sub	r3, fp, #104	; 0x68
   17b8c:	mov	r1, r3
   17b90:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17b94:	bl	125e0 <coda_cursor_read_int32@plt>
   17b98:	mov	r3, r0
   17b9c:	cmp	r3, #0
   17ba0:	beq	17ba8 <codadump_filter_get_next_filter@@Base+0x8b0>
   17ba4:	bl	1a55c <handle_coda_error@@Base>
   17ba8:	ldr	r3, [fp, #-104]	; 0xffffff98
   17bac:	mov	r1, r3
   17bb0:	ldr	r0, [pc, #744]	; 17ea0 <codadump_filter_get_next_filter@@Base+0xba8>
   17bb4:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17bb8:	b	17cd0 <codadump_filter_get_next_filter@@Base+0x9d8>
   17bbc:	sub	r3, fp, #108	; 0x6c
   17bc0:	mov	r1, r3
   17bc4:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17bc8:	bl	122b0 <coda_cursor_read_uint32@plt>
   17bcc:	mov	r3, r0
   17bd0:	cmp	r3, #0
   17bd4:	beq	17bdc <codadump_filter_get_next_filter@@Base+0x8e4>
   17bd8:	bl	1a55c <handle_coda_error@@Base>
   17bdc:	ldr	r3, [fp, #-108]	; 0xffffff94
   17be0:	mov	r1, r3
   17be4:	ldr	r0, [pc, #696]	; 17ea4 <codadump_filter_get_next_filter@@Base+0xbac>
   17be8:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17bec:	b	17cd0 <codadump_filter_get_next_filter@@Base+0x9d8>
   17bf0:	sub	r3, fp, #116	; 0x74
   17bf4:	mov	r1, r3
   17bf8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17bfc:	bl	12544 <coda_cursor_read_int64@plt>
   17c00:	mov	r3, r0
   17c04:	cmp	r3, #0
   17c08:	beq	17c10 <codadump_filter_get_next_filter@@Base+0x918>
   17c0c:	bl	1a55c <handle_coda_error@@Base>
   17c10:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   17c14:	sub	r3, fp, #140	; 0x8c
   17c18:	mov	r2, r3
   17c1c:	bl	1264c <coda_str64@plt>
   17c20:	sub	r3, fp, #140	; 0x8c
   17c24:	mov	r1, r3
   17c28:	ldr	r0, [pc, #632]	; 17ea8 <codadump_filter_get_next_filter@@Base+0xbb0>
   17c2c:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17c30:	b	17cd0 <codadump_filter_get_next_filter@@Base+0x9d8>
   17c34:	sub	r3, fp, #148	; 0x94
   17c38:	mov	r1, r3
   17c3c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17c40:	bl	12430 <coda_cursor_read_uint64@plt>
   17c44:	mov	r3, r0
   17c48:	cmp	r3, #0
   17c4c:	beq	17c54 <codadump_filter_get_next_filter@@Base+0x95c>
   17c50:	bl	1a55c <handle_coda_error@@Base>
   17c54:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   17c58:	sub	r3, fp, #172	; 0xac
   17c5c:	mov	r2, r3
   17c60:	bl	12280 <coda_str64u@plt>
   17c64:	sub	r3, fp, #172	; 0xac
   17c68:	mov	r1, r3
   17c6c:	ldr	r0, [pc, #564]	; 17ea8 <codadump_filter_get_next_filter@@Base+0xbb0>
   17c70:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17c74:	b	17cd0 <codadump_filter_get_next_filter@@Base+0x9d8>
   17c78:	sub	r3, fp, #180	; 0xb4
   17c7c:	mov	r1, r3
   17c80:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17c84:	bl	1243c <coda_cursor_read_double@plt>
   17c88:	mov	r3, r0
   17c8c:	cmp	r3, #0
   17c90:	beq	17c98 <codadump_filter_get_next_filter@@Base+0x9a0>
   17c94:	bl	1a55c <handle_coda_error@@Base>
   17c98:	ldr	r3, [fp, #-84]	; 0xffffffac
   17c9c:	cmp	r3, #8
   17ca0:	bne	17cb4 <codadump_filter_get_next_filter@@Base+0x9bc>
   17ca4:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   17ca8:	ldr	r0, [pc, #508]	; 17eac <codadump_filter_get_next_filter@@Base+0xbb4>
   17cac:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17cb0:	b	17cd0 <codadump_filter_get_next_filter@@Base+0x9d8>
   17cb4:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   17cb8:	ldr	r0, [pc, #496]	; 17eb0 <codadump_filter_get_next_filter@@Base+0xbb8>
   17cbc:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17cc0:	b	17cd0 <codadump_filter_get_next_filter@@Base+0x9d8>
   17cc4:	ldr	r0, [pc, #488]	; 17eb4 <codadump_filter_get_next_filter@@Base+0xbbc>
   17cc8:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17ccc:	nop			; (mov r0, r0)
   17cd0:	b	17e3c <codadump_filter_get_next_filter@@Base+0xb44>
   17cd4:	sub	r3, fp, #184	; 0xb8
   17cd8:	mov	r1, r3
   17cdc:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17ce0:	bl	12358 <coda_cursor_get_special_type@plt>
   17ce4:	mov	r3, r0
   17ce8:	cmp	r3, #0
   17cec:	beq	17cf4 <codadump_filter_get_next_filter@@Base+0x9fc>
   17cf0:	bl	1a55c <handle_coda_error@@Base>
   17cf4:	ldr	r3, [fp, #-184]	; 0xffffff48
   17cf8:	cmp	r3, #3
   17cfc:	ldrls	pc, [pc, r3, lsl #2]
   17d00:	b	17e44 <codadump_filter_get_next_filter@@Base+0xb4c>
   17d04:	andeq	r7, r1, r4, lsl sp
   17d08:	andeq	r7, r1, r0, lsr #26
   17d0c:	andeq	r7, r1, r0, asr sp
   17d10:	strdeq	r7, [r1], -r4
   17d14:	ldr	r0, [pc, #408]	; 17eb4 <codadump_filter_get_next_filter@@Base+0xbbc>
   17d18:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17d1c:	b	17e38 <codadump_filter_get_next_filter@@Base+0xb40>
   17d20:	sub	r3, fp, #196	; 0xc4
   17d24:	mov	r1, r3
   17d28:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17d2c:	bl	1243c <coda_cursor_read_double@plt>
   17d30:	mov	r3, r0
   17d34:	cmp	r3, #0
   17d38:	beq	17d40 <codadump_filter_get_next_filter@@Base+0xa48>
   17d3c:	bl	1a55c <handle_coda_error@@Base>
   17d40:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   17d44:	ldr	r0, [pc, #356]	; 17eb0 <codadump_filter_get_next_filter@@Base+0xbb8>
   17d48:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17d4c:	b	17e38 <codadump_filter_get_next_filter@@Base+0xb40>
   17d50:	sub	r3, fp, #204	; 0xcc
   17d54:	mov	r1, r3
   17d58:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17d5c:	bl	1243c <coda_cursor_read_double@plt>
   17d60:	mov	r3, r0
   17d64:	cmp	r3, #0
   17d68:	beq	17d70 <codadump_filter_get_next_filter@@Base+0xa78>
   17d6c:	bl	1a55c <handle_coda_error@@Base>
   17d70:	vldr	d7, [fp, #-204]	; 0xffffff34
   17d74:	vmov.f64	d0, d7
   17d78:	bl	12448 <coda_isNaN@plt>
   17d7c:	mov	r3, r0
   17d80:	cmp	r3, #0
   17d84:	bne	17da0 <codadump_filter_get_next_filter@@Base+0xaa8>
   17d88:	vldr	d7, [fp, #-204]	; 0xffffff34
   17d8c:	vmov.f64	d0, d7
   17d90:	bl	122ec <coda_isInf@plt>
   17d94:	mov	r3, r0
   17d98:	cmp	r3, #0
   17d9c:	beq	17db0 <codadump_filter_get_next_filter@@Base+0xab8>
   17da0:	ldrd	r2, [fp, #-204]	; 0xffffff34
   17da4:	ldr	r0, [pc, #260]	; 17eb0 <codadump_filter_get_next_filter@@Base+0xbb8>
   17da8:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17dac:	b	17e38 <codadump_filter_get_next_filter@@Base+0xb40>
   17db0:	vldr	d7, [fp, #-204]	; 0xffffff34
   17db4:	sub	r3, fp, #232	; 0xe8
   17db8:	mov	r1, r3
   17dbc:	ldr	r0, [pc, #244]	; 17eb8 <codadump_filter_get_next_filter@@Base+0xbc0>
   17dc0:	vmov.f64	d0, d7
   17dc4:	bl	12268 <coda_time_double_to_string@plt>
   17dc8:	mov	r3, r0
   17dcc:	cmp	r3, #0
   17dd0:	beq	17de0 <codadump_filter_get_next_filter@@Base+0xae8>
   17dd4:	ldr	r0, [pc, #224]	; 17ebc <codadump_filter_get_next_filter@@Base+0xbc4>
   17dd8:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17ddc:	b	17e38 <codadump_filter_get_next_filter@@Base+0xb40>
   17de0:	sub	r3, fp, #232	; 0xe8
   17de4:	mov	r1, r3
   17de8:	ldr	r0, [pc, #208]	; 17ec0 <codadump_filter_get_next_filter@@Base+0xbc8>
   17dec:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17df0:	b	17e38 <codadump_filter_get_next_filter@@Base+0xb40>
   17df4:	sub	r2, fp, #252	; 0xfc
   17df8:	sub	r3, fp, #244	; 0xf4
   17dfc:	mov	r1, r3
   17e00:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17e04:	bl	124e4 <coda_cursor_read_complex_double_split@plt>
   17e08:	mov	r3, r0
   17e0c:	cmp	r3, #0
   17e10:	beq	17e18 <codadump_filter_get_next_filter@@Base+0xb20>
   17e14:	bl	1a55c <handle_coda_error@@Base>
   17e18:	ldrd	r0, [fp, #-244]	; 0xffffff0c
   17e1c:	ldrd	r2, [fp, #-252]	; 0xffffff04
   17e20:	strd	r2, [sp]
   17e24:	mov	r2, r0
   17e28:	mov	r3, r1
   17e2c:	ldr	r0, [pc, #144]	; 17ec4 <codadump_filter_get_next_filter@@Base+0xbcc>
   17e30:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17e34:	nop			; (mov r0, r0)
   17e38:	b	17e44 <codadump_filter_get_next_filter@@Base+0xb4c>
   17e3c:	nop			; (mov r0, r0)
   17e40:	b	17e48 <codadump_filter_get_next_filter@@Base+0xb50>
   17e44:	nop			; (mov r0, r0)
   17e48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17e4c:	cmp	r3, #0
   17e50:	beq	17e5c <codadump_filter_get_next_filter@@Base+0xb64>
   17e54:	ldr	r0, [pc, #36]	; 17e80 <codadump_filter_get_next_filter@@Base+0xb88>
   17e58:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17e5c:	nop			; (mov r0, r0)
   17e60:	sub	sp, fp, #12
   17e64:	pop	{r4, r5, fp, pc}
   17e68:	andeq	pc, r2, r8, asr #3
   17e6c:	andeq	sp, r1, r0, asr r1
   17e70:	andeq	sp, r1, ip, asr r1
   17e74:	andeq	sp, r1, r8, ror #2
   17e78:	andeq	sp, r1, ip, ror #2
   17e7c:	andeq	sp, r1, r4, ror r1
   17e80:	andeq	sp, r1, r8, ror r1
   17e84:	andeq	sp, r1, ip, ror r1
   17e88:	andeq	sp, r1, r0, lsl #3
   17e8c:	andeq	sp, r1, r4, lsl #3
   17e90:	andeq	r0, r0, pc, lsr #2
   17e94:	andeq	sp, r1, r8, lsl #3
   17e98:	ldrdeq	sp, [r1], -ip
   17e9c:	andeq	r0, r0, lr, asr #2
   17ea0:	andeq	sp, r1, r4, lsl r2
   17ea4:	andeq	sp, r1, r8, lsl r2
   17ea8:	andeq	sp, r1, ip, lsl r2
   17eac:	andeq	sp, r1, r0, lsr #4
   17eb0:	andeq	sp, r1, r8, lsr #4
   17eb4:	andeq	sp, r1, r0, lsr r2
   17eb8:	andeq	sp, r1, r8, lsr r2
   17ebc:	andeq	sp, r1, r8, asr r2
   17ec0:	andeq	sp, r1, r4, ror r2
   17ec4:	andeq	sp, r1, ip, ror r2

00017ec8 <print_json_data@@Base>:
   17ec8:	push	{fp, lr}
   17ecc:	add	fp, sp, #4
   17ed0:	sub	sp, sp, #536	; 0x218
   17ed4:	str	r0, [fp, #-536]	; 0xfffffde8
   17ed8:	ldr	r2, [pc, #272]	; 17ff0 <print_json_data@@Base+0x128>
   17edc:	ldr	r3, [fp, #-536]	; 0xfffffde8
   17ee0:	str	r3, [r2]
   17ee4:	ldr	r3, [pc, #264]	; 17ff4 <print_json_data@@Base+0x12c>
   17ee8:	ldr	r3, [r3]
   17eec:	sub	r2, fp, #12
   17ef0:	mov	r1, r2
   17ef4:	mov	r0, r3
   17ef8:	bl	12250 <coda_open@plt>
   17efc:	str	r0, [fp, #-8]
   17f00:	ldr	r3, [fp, #-8]
   17f04:	cmp	r3, #0
   17f08:	beq	17f4c <print_json_data@@Base+0x84>
   17f0c:	bl	12604 <coda_get_errno@plt>
   17f10:	mov	r3, r0
   17f14:	ldr	r3, [r3]
   17f18:	cmn	r3, #21
   17f1c:	bne	17f4c <print_json_data@@Base+0x84>
   17f20:	mov	r0, #0
   17f24:	bl	12298 <coda_set_option_use_mmap@plt>
   17f28:	ldr	r3, [pc, #196]	; 17ff4 <print_json_data@@Base+0x12c>
   17f2c:	ldr	r3, [r3]
   17f30:	sub	r2, fp, #12
   17f34:	mov	r1, r2
   17f38:	mov	r0, r3
   17f3c:	bl	12250 <coda_open@plt>
   17f40:	str	r0, [fp, #-8]
   17f44:	mov	r0, #1
   17f48:	bl	12298 <coda_set_option_use_mmap@plt>
   17f4c:	ldr	r3, [fp, #-8]
   17f50:	cmp	r3, #0
   17f54:	beq	17f5c <print_json_data@@Base+0x94>
   17f58:	bl	1a55c <handle_coda_error@@Base>
   17f5c:	ldr	r2, [fp, #-12]
   17f60:	sub	r3, fp, #532	; 0x214
   17f64:	mov	r1, r2
   17f68:	mov	r0, r3
   17f6c:	bl	1237c <coda_cursor_set_product@plt>
   17f70:	mov	r3, r0
   17f74:	cmp	r3, #0
   17f78:	beq	17f80 <print_json_data@@Base+0xb8>
   17f7c:	bl	1a55c <handle_coda_error@@Base>
   17f80:	ldr	r3, [pc, #112]	; 17ff8 <print_json_data@@Base+0x130>
   17f84:	ldr	r3, [r3]
   17f88:	cmp	r3, #0
   17f8c:	beq	17fbc <print_json_data@@Base+0xf4>
   17f90:	ldr	r3, [pc, #96]	; 17ff8 <print_json_data@@Base+0x130>
   17f94:	ldr	r2, [r3]
   17f98:	sub	r3, fp, #532	; 0x214
   17f9c:	mov	r1, r2
   17fa0:	mov	r0, r3
   17fa4:	bl	1255c <coda_cursor_goto@plt>
   17fa8:	str	r0, [fp, #-8]
   17fac:	ldr	r3, [fp, #-8]
   17fb0:	cmp	r3, #0
   17fb4:	beq	17fbc <print_json_data@@Base+0xf4>
   17fb8:	bl	1a55c <handle_coda_error@@Base>
   17fbc:	mov	r0, #0
   17fc0:	bl	121fc <coda_set_option_perform_boundary_checks@plt>
   17fc4:	sub	r3, fp, #532	; 0x214
   17fc8:	mov	r0, r3
   17fcc:	bl	174f4 <codadump_filter_get_next_filter@@Base+0x1fc>
   17fd0:	ldr	r0, [pc, #36]	; 17ffc <print_json_data@@Base+0x134>
   17fd4:	bl	17348 <codadump_filter_get_next_filter@@Base+0x50>
   17fd8:	ldr	r3, [fp, #-12]
   17fdc:	mov	r0, r3
   17fe0:	bl	12538 <coda_close@plt>
   17fe4:	nop			; (mov r0, r0)
   17fe8:	sub	sp, fp, #4
   17fec:	pop	{fp, pc}
   17ff0:	andeq	pc, r2, r8, asr #3
   17ff4:	strdeq	pc, [r2], -r0
   17ff8:	strheq	r0, [r3], -r0	; <UNPREDICTABLE>
   17ffc:	andeq	sp, r1, r8, lsl #5
   18000:	push	{fp, lr}
   18004:	add	fp, sp, #4
   18008:	sub	sp, sp, #16
   1800c:	str	r0, [fp, #-16]
   18010:	str	r1, [fp, #-20]	; 0xffffffec
   18014:	ldr	r2, [fp, #-20]	; 0xffffffec
   18018:	mov	r3, r2
   1801c:	lsl	r3, r3, #2
   18020:	add	r3, r3, r2
   18024:	lsl	r3, r3, #4
   18028:	add	r3, r3, #800	; 0x320
   1802c:	ldr	r2, [pc, #348]	; 18190 <print_json_data@@Base+0x2c8>
   18030:	add	r3, r3, r2
   18034:	str	r3, [fp, #-12]
   18038:	mov	r3, #0
   1803c:	str	r3, [fp, #-8]
   18040:	b	18170 <print_json_data@@Base+0x2a8>
   18044:	ldr	r3, [fp, #-8]
   18048:	cmp	r3, #0
   1804c:	ble	1805c <print_json_data@@Base+0x194>
   18050:	ldr	r1, [fp, #-16]
   18054:	mov	r0, #44	; 0x2c
   18058:	bl	1258c <fputc@plt>
   1805c:	ldr	r3, [pc, #304]	; 18194 <print_json_data@@Base+0x2cc>
   18060:	ldr	r3, [r3]
   18064:	cmp	r3, #0
   18068:	beq	1811c <print_json_data@@Base+0x254>
   1806c:	ldr	r3, [fp, #-12]
   18070:	ldr	r2, [r3]
   18074:	ldr	r3, [fp, #-8]
   18078:	add	r3, r2, r3
   1807c:	ldr	r2, [pc, #276]	; 18198 <print_json_data@@Base+0x2d0>
   18080:	add	r3, r3, #18
   18084:	ldr	r3, [r2, r3, lsl #2]
   18088:	cmp	r3, #0
   1808c:	beq	180e8 <print_json_data@@Base+0x220>
   18090:	ldr	r3, [fp, #-12]
   18094:	ldr	r2, [r3]
   18098:	ldr	r3, [fp, #-8]
   1809c:	add	r3, r2, r3
   180a0:	ldr	r2, [pc, #240]	; 18198 <print_json_data@@Base+0x2d0>
   180a4:	add	r3, r3, #8
   180a8:	lsl	r3, r3, #2
   180ac:	add	r3, r2, r3
   180b0:	ldr	r1, [r3, #4]
   180b4:	ldr	r3, [fp, #-12]
   180b8:	ldr	r2, [r3]
   180bc:	ldr	r3, [fp, #-8]
   180c0:	add	r3, r2, r3
   180c4:	ldr	r2, [pc, #204]	; 18198 <print_json_data@@Base+0x2d0>
   180c8:	lsl	r3, r3, #2
   180cc:	add	r3, r2, r3
   180d0:	ldr	r3, [r3, #4]
   180d4:	mov	r2, r1
   180d8:	ldr	r1, [pc, #188]	; 1819c <print_json_data@@Base+0x2d4>
   180dc:	ldr	r0, [fp, #-16]
   180e0:	bl	12454 <fprintf@plt>
   180e4:	b	18164 <print_json_data@@Base+0x29c>
   180e8:	ldr	r3, [fp, #-12]
   180ec:	ldr	r2, [r3]
   180f0:	ldr	r3, [fp, #-8]
   180f4:	add	r3, r2, r3
   180f8:	ldr	r2, [pc, #152]	; 18198 <print_json_data@@Base+0x2d0>
   180fc:	lsl	r3, r3, #2
   18100:	add	r3, r2, r3
   18104:	ldr	r3, [r3, #4]
   18108:	mov	r2, r3
   1810c:	ldr	r1, [pc, #140]	; 181a0 <print_json_data@@Base+0x2d8>
   18110:	ldr	r0, [fp, #-16]
   18114:	bl	12454 <fprintf@plt>
   18118:	b	18164 <print_json_data@@Base+0x29c>
   1811c:	ldr	r3, [fp, #-12]
   18120:	ldr	r2, [fp, #-8]
   18124:	add	r2, r2, #2
   18128:	ldr	r3, [r3, r2, lsl #2]
   1812c:	cmn	r3, #1
   18130:	bne	18144 <print_json_data@@Base+0x27c>
   18134:	ldr	r1, [fp, #-16]
   18138:	mov	r0, #63	; 0x3f
   1813c:	bl	1258c <fputc@plt>
   18140:	b	18164 <print_json_data@@Base+0x29c>
   18144:	ldr	r3, [fp, #-12]
   18148:	ldr	r2, [fp, #-8]
   1814c:	add	r2, r2, #2
   18150:	ldr	r3, [r3, r2, lsl #2]
   18154:	mov	r2, r3
   18158:	ldr	r1, [pc, #64]	; 181a0 <print_json_data@@Base+0x2d8>
   1815c:	ldr	r0, [fp, #-16]
   18160:	bl	12454 <fprintf@plt>
   18164:	ldr	r3, [fp, #-8]
   18168:	add	r3, r3, #1
   1816c:	str	r3, [fp, #-8]
   18170:	ldr	r3, [fp, #-12]
   18174:	ldr	r2, [r3, #4]
   18178:	ldr	r3, [fp, #-8]
   1817c:	cmp	r2, r3
   18180:	bgt	18044 <print_json_data@@Base+0x17c>
   18184:	nop			; (mov r0, r0)
   18188:	sub	sp, fp, #4
   1818c:	pop	{fp, pc}
   18190:	strdeq	pc, [r2], -r0
   18194:	andeq	pc, r2, ip, ror #3
   18198:	strheq	r0, [r3], -r8
   1819c:	andeq	sp, r1, ip, lsl #5
   181a0:	muleq	r1, r4, r2

000181a4 <print_full_field_name@@Base>:
   181a4:	push	{fp, lr}
   181a8:	add	fp, sp, #4
   181ac:	sub	sp, sp, #40	; 0x28
   181b0:	str	r0, [fp, #-32]	; 0xffffffe0
   181b4:	str	r1, [fp, #-36]	; 0xffffffdc
   181b8:	str	r2, [fp, #-40]	; 0xffffffd8
   181bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   181c0:	cmp	r3, #1
   181c4:	bne	18344 <print_full_field_name@@Base+0x1a0>
   181c8:	mov	r3, #0
   181cc:	str	r3, [fp, #-12]
   181d0:	mov	r3, #0
   181d4:	str	r3, [fp, #-16]
   181d8:	mov	r3, #0
   181dc:	str	r3, [fp, #-8]
   181e0:	b	182e8 <print_full_field_name@@Base+0x144>
   181e4:	ldr	r2, [pc, #892]	; 18568 <print_full_field_name@@Base+0x3c4>
   181e8:	ldr	r3, [fp, #-8]
   181ec:	add	r3, r3, #2
   181f0:	ldr	r3, [r2, r3, lsl #2]
   181f4:	sub	r2, fp, #24
   181f8:	mov	r1, r2
   181fc:	mov	r0, r3
   18200:	bl	12664 <coda_type_get_class@plt>
   18204:	mov	r3, r0
   18208:	cmp	r3, #0
   1820c:	beq	18214 <print_full_field_name@@Base+0x70>
   18210:	bl	1a55c <handle_coda_error@@Base>
   18214:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18218:	cmp	r3, #0
   1821c:	beq	1822c <print_full_field_name@@Base+0x88>
   18220:	cmp	r3, #1
   18224:	beq	18264 <print_full_field_name@@Base+0xc0>
   18228:	b	182dc <print_full_field_name@@Base+0x138>
   1822c:	ldr	r2, [pc, #820]	; 18568 <print_full_field_name@@Base+0x3c4>
   18230:	ldr	r3, [fp, #-12]
   18234:	add	r3, r3, #904	; 0x388
   18238:	lsl	r3, r3, #2
   1823c:	add	r3, r2, r3
   18240:	ldr	r3, [r3, #4]
   18244:	mov	r2, r3
   18248:	ldr	r1, [pc, #796]	; 1856c <print_full_field_name@@Base+0x3c8>
   1824c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18250:	bl	12454 <fprintf@plt>
   18254:	ldr	r3, [fp, #-12]
   18258:	add	r3, r3, #1
   1825c:	str	r3, [fp, #-12]
   18260:	b	182dc <print_full_field_name@@Base+0x138>
   18264:	ldr	r3, [fp, #-8]
   18268:	cmp	r3, #0
   1826c:	bne	1827c <print_full_field_name@@Base+0xd8>
   18270:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18274:	mov	r0, #47	; 0x2f
   18278:	bl	1258c <fputc@plt>
   1827c:	ldr	r1, [pc, #740]	; 18568 <print_full_field_name@@Base+0x3c4>
   18280:	ldr	r2, [fp, #-16]
   18284:	mov	r3, r2
   18288:	lsl	r3, r3, #2
   1828c:	add	r3, r3, r2
   18290:	lsl	r3, r3, #4
   18294:	add	r3, r1, r3
   18298:	add	r3, r3, #804	; 0x324
   1829c:	ldr	r3, [r3]
   182a0:	cmp	r3, #0
   182a4:	ble	182cc <print_full_field_name@@Base+0x128>
   182a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   182ac:	mov	r0, #91	; 0x5b
   182b0:	bl	1258c <fputc@plt>
   182b4:	ldr	r1, [fp, #-16]
   182b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   182bc:	bl	18000 <print_json_data@@Base+0x138>
   182c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   182c4:	mov	r0, #93	; 0x5d
   182c8:	bl	1258c <fputc@plt>
   182cc:	ldr	r3, [fp, #-16]
   182d0:	add	r3, r3, #1
   182d4:	str	r3, [fp, #-16]
   182d8:	nop			; (mov r0, r0)
   182dc:	ldr	r3, [fp, #-8]
   182e0:	add	r3, r3, #1
   182e4:	str	r3, [fp, #-8]
   182e8:	ldr	r3, [pc, #632]	; 18568 <print_full_field_name@@Base+0x3c4>
   182ec:	ldr	r2, [r3, #136]	; 0x88
   182f0:	ldr	r3, [fp, #-8]
   182f4:	cmp	r2, r3
   182f8:	bgt	181e4 <print_full_field_name@@Base+0x40>
   182fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18300:	cmp	r3, #0
   18304:	beq	1855c <print_full_field_name@@Base+0x3b8>
   18308:	ldr	r3, [pc, #600]	; 18568 <print_full_field_name@@Base+0x3c4>
   1830c:	ldr	r2, [r3, #3360]	; 0xd20
   18310:	ldr	r3, [fp, #-16]
   18314:	cmp	r2, r3
   18318:	ble	1855c <print_full_field_name@@Base+0x3b8>
   1831c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18320:	mov	r0, #91	; 0x5b
   18324:	bl	1258c <fputc@plt>
   18328:	ldr	r1, [fp, #-16]
   1832c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18330:	bl	18000 <print_json_data@@Base+0x138>
   18334:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18338:	mov	r0, #93	; 0x5d
   1833c:	bl	1258c <fputc@plt>
   18340:	b	1855c <print_full_field_name@@Base+0x3b8>
   18344:	mov	r3, #0
   18348:	str	r3, [fp, #-8]
   1834c:	b	18398 <print_full_field_name@@Base+0x1f4>
   18350:	ldr	r3, [fp, #-8]
   18354:	cmp	r3, #0
   18358:	ble	18368 <print_full_field_name@@Base+0x1c4>
   1835c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18360:	mov	r0, #46	; 0x2e
   18364:	bl	1258c <fputc@plt>
   18368:	ldr	r2, [pc, #504]	; 18568 <print_full_field_name@@Base+0x3c4>
   1836c:	ldr	r3, [fp, #-8]
   18370:	add	r3, r3, #904	; 0x388
   18374:	lsl	r3, r3, #2
   18378:	add	r3, r2, r3
   1837c:	ldr	r3, [r3, #4]
   18380:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18384:	mov	r0, r3
   18388:	bl	12628 <fputs@plt>
   1838c:	ldr	r3, [fp, #-8]
   18390:	add	r3, r3, #1
   18394:	str	r3, [fp, #-8]
   18398:	ldr	r3, [pc, #456]	; 18568 <print_full_field_name@@Base+0x3c4>
   1839c:	ldr	r2, [r3, #3748]	; 0xea4
   183a0:	ldr	r3, [fp, #-8]
   183a4:	cmp	r2, r3
   183a8:	bgt	18350 <print_full_field_name@@Base+0x1ac>
   183ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   183b0:	cmp	r3, #2
   183b4:	bne	1855c <print_full_field_name@@Base+0x3b8>
   183b8:	mov	r3, #0
   183bc:	str	r3, [fp, #-20]	; 0xffffffec
   183c0:	mov	r3, #0
   183c4:	str	r3, [fp, #-8]
   183c8:	b	184a8 <print_full_field_name@@Base+0x304>
   183cc:	ldr	r2, [pc, #404]	; 18568 <print_full_field_name@@Base+0x3c4>
   183d0:	ldr	r3, [fp, #-8]
   183d4:	add	r3, r3, #2
   183d8:	ldr	r3, [r2, r3, lsl #2]
   183dc:	sub	r2, fp, #28
   183e0:	mov	r1, r2
   183e4:	mov	r0, r3
   183e8:	bl	12664 <coda_type_get_class@plt>
   183ec:	mov	r3, r0
   183f0:	cmp	r3, #0
   183f4:	beq	183fc <print_full_field_name@@Base+0x258>
   183f8:	bl	1a55c <handle_coda_error@@Base>
   183fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18400:	cmp	r3, #1
   18404:	bne	1849c <print_full_field_name@@Base+0x2f8>
   18408:	ldr	r1, [pc, #344]	; 18568 <print_full_field_name@@Base+0x3c4>
   1840c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18410:	mov	r3, r2
   18414:	lsl	r3, r3, #2
   18418:	add	r3, r3, r2
   1841c:	lsl	r3, r3, #4
   18420:	add	r3, r1, r3
   18424:	add	r3, r3, #804	; 0x324
   18428:	ldr	r3, [r3]
   1842c:	cmp	r3, #0
   18430:	ble	1849c <print_full_field_name@@Base+0x2f8>
   18434:	ldr	r1, [pc, #300]	; 18568 <print_full_field_name@@Base+0x3c4>
   18438:	ldr	r2, [fp, #-20]	; 0xffffffec
   1843c:	mov	r3, r2
   18440:	lsl	r3, r3, #2
   18444:	add	r3, r3, r2
   18448:	lsl	r3, r3, #4
   1844c:	add	r3, r1, r3
   18450:	add	r3, r3, #800	; 0x320
   18454:	ldr	r3, [r3]
   18458:	cmp	r3, #0
   1845c:	bne	18478 <print_full_field_name@@Base+0x2d4>
   18460:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18464:	mov	r2, #2
   18468:	mov	r1, #1
   1846c:	ldr	r0, [pc, #252]	; 18570 <print_full_field_name@@Base+0x3cc>
   18470:	bl	12370 <fwrite@plt>
   18474:	b	18484 <print_full_field_name@@Base+0x2e0>
   18478:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1847c:	mov	r0, #44	; 0x2c
   18480:	bl	1258c <fputc@plt>
   18484:	ldr	r1, [fp, #-20]	; 0xffffffec
   18488:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1848c:	bl	18000 <print_json_data@@Base+0x138>
   18490:	ldr	r3, [fp, #-20]	; 0xffffffec
   18494:	add	r3, r3, #1
   18498:	str	r3, [fp, #-20]	; 0xffffffec
   1849c:	ldr	r3, [fp, #-8]
   184a0:	add	r3, r3, #1
   184a4:	str	r3, [fp, #-8]
   184a8:	ldr	r3, [pc, #184]	; 18568 <print_full_field_name@@Base+0x3c4>
   184ac:	ldr	r2, [r3, #136]	; 0x88
   184b0:	ldr	r3, [fp, #-8]
   184b4:	cmp	r2, r3
   184b8:	bgt	183cc <print_full_field_name@@Base+0x228>
   184bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   184c0:	cmp	r3, #0
   184c4:	beq	18544 <print_full_field_name@@Base+0x3a0>
   184c8:	ldr	r3, [pc, #152]	; 18568 <print_full_field_name@@Base+0x3c4>
   184cc:	ldr	r2, [r3, #3360]	; 0xd20
   184d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   184d4:	cmp	r2, r3
   184d8:	ble	18544 <print_full_field_name@@Base+0x3a0>
   184dc:	ldr	r1, [pc, #132]	; 18568 <print_full_field_name@@Base+0x3c4>
   184e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   184e4:	mov	r3, r2
   184e8:	lsl	r3, r3, #2
   184ec:	add	r3, r3, r2
   184f0:	lsl	r3, r3, #4
   184f4:	add	r3, r1, r3
   184f8:	add	r3, r3, #800	; 0x320
   184fc:	ldr	r3, [r3]
   18500:	cmp	r3, #0
   18504:	bne	18520 <print_full_field_name@@Base+0x37c>
   18508:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1850c:	mov	r2, #2
   18510:	mov	r1, #1
   18514:	ldr	r0, [pc, #84]	; 18570 <print_full_field_name@@Base+0x3cc>
   18518:	bl	12370 <fwrite@plt>
   1851c:	b	1852c <print_full_field_name@@Base+0x388>
   18520:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18524:	mov	r0, #44	; 0x2c
   18528:	bl	1258c <fputc@plt>
   1852c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18534:	bl	18000 <print_json_data@@Base+0x138>
   18538:	ldr	r3, [fp, #-20]	; 0xffffffec
   1853c:	add	r3, r3, #1
   18540:	str	r3, [fp, #-20]	; 0xffffffec
   18544:	ldr	r3, [fp, #-20]	; 0xffffffec
   18548:	cmp	r3, #0
   1854c:	ble	1855c <print_full_field_name@@Base+0x3b8>
   18550:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18554:	mov	r0, #93	; 0x5d
   18558:	bl	1258c <fputc@plt>
   1855c:	nop			; (mov r0, r0)
   18560:	sub	sp, fp, #4
   18564:	pop	{fp, pc}
   18568:	strdeq	pc, [r2], -r0
   1856c:	muleq	r1, r8, r2
   18570:	muleq	r1, ip, r2

00018574 <traverse_info_init@@Base>:
   18574:	push	{fp}		; (str fp, [sp, #-4]!)
   18578:	add	fp, sp, #0
   1857c:	ldr	r3, [pc, #56]	; 185bc <traverse_info_init@@Base+0x48>
   18580:	mov	r2, #0
   18584:	str	r2, [r3, #4]
   18588:	ldr	r3, [pc, #44]	; 185bc <traverse_info_init@@Base+0x48>
   1858c:	mov	r2, #0
   18590:	str	r2, [r3, #136]	; 0x88
   18594:	ldr	r3, [pc, #32]	; 185bc <traverse_info_init@@Base+0x48>
   18598:	mov	r2, #0
   1859c:	str	r2, [r3, #3360]	; 0xd20
   185a0:	ldr	r3, [pc, #20]	; 185bc <traverse_info_init@@Base+0x48>
   185a4:	mov	r2, #0
   185a8:	str	r2, [r3, #3748]	; 0xea4
   185ac:	nop			; (mov r0, r0)
   185b0:	add	sp, fp, #0
   185b4:	pop	{fp}		; (ldr fp, [sp], #4)
   185b8:	bx	lr
   185bc:	strdeq	pc, [r2], -r0

000185c0 <traverse_info_done@@Base>:
   185c0:	push	{fp, lr}
   185c4:	add	fp, sp, #4
   185c8:	ldr	r3, [pc, #56]	; 18608 <traverse_info_done@@Base+0x48>
   185cc:	ldr	r3, [r3, #4]
   185d0:	cmp	r3, #0
   185d4:	beq	185e8 <traverse_info_done@@Base+0x28>
   185d8:	ldr	r3, [pc, #40]	; 18608 <traverse_info_done@@Base+0x48>
   185dc:	ldr	r3, [r3, #4]
   185e0:	mov	r0, r3
   185e4:	bl	12538 <coda_close@plt>
   185e8:	ldr	r3, [pc, #24]	; 18608 <traverse_info_done@@Base+0x48>
   185ec:	ldr	r3, [r3, #664]	; 0x298
   185f0:	cmp	r3, #0
   185f4:	beq	18600 <traverse_info_done@@Base+0x40>
   185f8:	ldr	r0, [pc, #12]	; 1860c <traverse_info_done@@Base+0x4c>
   185fc:	bl	1715c <codadump_filter_remove@@Base>
   18600:	nop			; (mov r0, r0)
   18604:	pop	{fp, pc}
   18608:	strdeq	pc, [r2], -r0
   1860c:	andeq	pc, r2, r8, lsl #9
   18610:	push	{fp, lr}
   18614:	add	fp, sp, #4
   18618:	sub	sp, sp, #24
   1861c:	ldr	r3, [pc, #720]	; 188f4 <traverse_info_done@@Base+0x334>
   18620:	ldr	r3, [r3]
   18624:	cmp	r3, #0
   18628:	bne	188d4 <traverse_info_done@@Base+0x314>
   1862c:	ldr	r3, [pc, #708]	; 188f8 <traverse_info_done@@Base+0x338>
   18630:	ldr	r3, [r3]
   18634:	mov	r2, #0
   18638:	mov	r1, #1
   1863c:	mov	r0, r3
   18640:	bl	181a4 <print_full_field_name@@Base>
   18644:	ldr	r3, [pc, #688]	; 188fc <traverse_info_done@@Base+0x33c>
   18648:	ldr	r3, [r3]
   1864c:	cmp	r3, #0
   18650:	beq	187a4 <traverse_info_done@@Base+0x1e4>
   18654:	ldr	r3, [pc, #676]	; 18900 <traverse_info_done@@Base+0x340>
   18658:	ldr	r3, [r3, #136]	; 0x88
   1865c:	ldr	r2, [pc, #668]	; 18900 <traverse_info_done@@Base+0x340>
   18660:	add	r3, r3, #2
   18664:	ldr	r3, [r2, r3, lsl #2]
   18668:	sub	r2, fp, #12
   1866c:	mov	r1, r2
   18670:	mov	r0, r3
   18674:	bl	12664 <coda_type_get_class@plt>
   18678:	mov	r3, r0
   1867c:	cmp	r3, #0
   18680:	beq	18688 <traverse_info_done@@Base+0xc8>
   18684:	bl	1a55c <handle_coda_error@@Base>
   18688:	ldr	r3, [fp, #-12]
   1868c:	cmp	r3, #6
   18690:	bne	186e8 <traverse_info_done@@Base+0x128>
   18694:	ldr	r3, [pc, #612]	; 18900 <traverse_info_done@@Base+0x340>
   18698:	ldr	r3, [r3, #136]	; 0x88
   1869c:	ldr	r2, [pc, #604]	; 18900 <traverse_info_done@@Base+0x340>
   186a0:	add	r3, r3, #2
   186a4:	ldr	r3, [r2, r3, lsl #2]
   186a8:	sub	r2, fp, #16
   186ac:	mov	r1, r2
   186b0:	mov	r0, r3
   186b4:	bl	124cc <coda_type_get_special_type@plt>
   186b8:	mov	r3, r0
   186bc:	cmp	r3, #0
   186c0:	beq	186c8 <traverse_info_done@@Base+0x108>
   186c4:	bl	1a55c <handle_coda_error@@Base>
   186c8:	ldr	r3, [fp, #-16]
   186cc:	mov	r0, r3
   186d0:	bl	121cc <coda_type_get_special_type_name@plt>
   186d4:	mov	r3, r0
   186d8:	mov	r1, r3
   186dc:	ldr	r0, [pc, #544]	; 18904 <traverse_info_done@@Base+0x344>
   186e0:	bl	12220 <printf@plt>
   186e4:	b	187a4 <traverse_info_done@@Base+0x1e4>
   186e8:	ldr	r3, [pc, #528]	; 18900 <traverse_info_done@@Base+0x340>
   186ec:	ldr	r3, [r3, #136]	; 0x88
   186f0:	ldr	r2, [pc, #520]	; 18900 <traverse_info_done@@Base+0x340>
   186f4:	add	r3, r3, #2
   186f8:	ldr	r3, [r2, r3, lsl #2]
   186fc:	sub	r2, fp, #20
   18700:	mov	r1, r2
   18704:	mov	r0, r3
   18708:	bl	12418 <coda_type_get_read_type@plt>
   1870c:	mov	r3, r0
   18710:	cmp	r3, #0
   18714:	beq	1871c <traverse_info_done@@Base+0x15c>
   18718:	bl	1a55c <handle_coda_error@@Base>
   1871c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18720:	mov	r0, r3
   18724:	bl	12514 <coda_type_get_native_type_name@plt>
   18728:	mov	r3, r0
   1872c:	mov	r1, r3
   18730:	ldr	r0, [pc, #460]	; 18904 <traverse_info_done@@Base+0x344>
   18734:	bl	12220 <printf@plt>
   18738:	ldr	r3, [fp, #-20]	; 0xffffffec
   1873c:	cmp	r3, #11
   18740:	beq	18750 <traverse_info_done@@Base+0x190>
   18744:	ldr	r3, [fp, #-20]	; 0xffffffec
   18748:	cmp	r3, #12
   1874c:	bne	187a4 <traverse_info_done@@Base+0x1e4>
   18750:	mov	r0, #40	; 0x28
   18754:	bl	124b4 <putchar@plt>
   18758:	ldr	r3, [pc, #416]	; 18900 <traverse_info_done@@Base+0x340>
   1875c:	ldr	r3, [r3, #3360]	; 0xd20
   18760:	cmp	r3, #0
   18764:	bgt	1877c <traverse_info_done@@Base+0x1bc>
   18768:	ldr	r3, [pc, #408]	; 18908 <traverse_info_done@@Base+0x348>
   1876c:	mov	r2, #238	; 0xee
   18770:	ldr	r1, [pc, #404]	; 1890c <traverse_info_done@@Base+0x34c>
   18774:	ldr	r0, [pc, #404]	; 18910 <traverse_info_done@@Base+0x350>
   18778:	bl	12658 <__assert_fail@plt>
   1877c:	ldr	r3, [pc, #372]	; 188f8 <traverse_info_done@@Base+0x338>
   18780:	ldr	r2, [r3]
   18784:	ldr	r3, [pc, #372]	; 18900 <traverse_info_done@@Base+0x340>
   18788:	ldr	r3, [r3, #3360]	; 0xd20
   1878c:	sub	r3, r3, #1
   18790:	mov	r1, r3
   18794:	mov	r0, r2
   18798:	bl	18000 <print_json_data@@Base+0x138>
   1879c:	mov	r0, #41	; 0x29
   187a0:	bl	124b4 <putchar@plt>
   187a4:	ldr	r3, [pc, #360]	; 18914 <traverse_info_done@@Base+0x354>
   187a8:	ldr	r3, [r3]
   187ac:	cmp	r3, #0
   187b0:	beq	18814 <traverse_info_done@@Base+0x254>
   187b4:	ldr	r3, [pc, #324]	; 18900 <traverse_info_done@@Base+0x340>
   187b8:	ldr	r3, [r3, #136]	; 0x88
   187bc:	ldr	r2, [pc, #316]	; 18900 <traverse_info_done@@Base+0x340>
   187c0:	add	r3, r3, #2
   187c4:	ldr	r3, [r2, r3, lsl #2]
   187c8:	sub	r2, fp, #24
   187cc:	mov	r1, r2
   187d0:	mov	r0, r3
   187d4:	bl	12340 <coda_type_get_unit@plt>
   187d8:	mov	r3, r0
   187dc:	cmp	r3, #0
   187e0:	beq	187e8 <traverse_info_done@@Base+0x228>
   187e4:	bl	1a55c <handle_coda_error@@Base>
   187e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187ec:	cmp	r3, #0
   187f0:	beq	18814 <traverse_info_done@@Base+0x254>
   187f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187f8:	ldrb	r3, [r3]
   187fc:	cmp	r3, #0
   18800:	beq	18814 <traverse_info_done@@Base+0x254>
   18804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18808:	mov	r1, r3
   1880c:	ldr	r0, [pc, #260]	; 18918 <traverse_info_done@@Base+0x358>
   18810:	bl	12220 <printf@plt>
   18814:	ldr	r3, [pc, #256]	; 1891c <traverse_info_done@@Base+0x35c>
   18818:	ldr	r3, [r3]
   1881c:	cmp	r3, #0
   18820:	beq	18884 <traverse_info_done@@Base+0x2c4>
   18824:	ldr	r3, [pc, #212]	; 18900 <traverse_info_done@@Base+0x340>
   18828:	ldr	r3, [r3, #136]	; 0x88
   1882c:	ldr	r2, [pc, #204]	; 18900 <traverse_info_done@@Base+0x340>
   18830:	add	r3, r3, #2
   18834:	ldr	r3, [r2, r3, lsl #2]
   18838:	sub	r2, fp, #28
   1883c:	mov	r1, r2
   18840:	mov	r0, r3
   18844:	bl	1234c <coda_type_get_description@plt>
   18848:	mov	r3, r0
   1884c:	cmp	r3, #0
   18850:	beq	18858 <traverse_info_done@@Base+0x298>
   18854:	bl	1a55c <handle_coda_error@@Base>
   18858:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1885c:	cmp	r3, #0
   18860:	beq	18884 <traverse_info_done@@Base+0x2c4>
   18864:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18868:	ldrb	r3, [r3]
   1886c:	cmp	r3, #0
   18870:	beq	18884 <traverse_info_done@@Base+0x2c4>
   18874:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18878:	mov	r1, r3
   1887c:	ldr	r0, [pc, #156]	; 18920 <traverse_info_done@@Base+0x360>
   18880:	bl	12220 <printf@plt>
   18884:	mov	r0, #10
   18888:	bl	124b4 <putchar@plt>
   1888c:	ldr	r3, [pc, #144]	; 18924 <traverse_info_done@@Base+0x364>
   18890:	ldr	r3, [r3]
   18894:	cmp	r3, #0
   18898:	beq	188e8 <traverse_info_done@@Base+0x328>
   1889c:	mov	r3, #0
   188a0:	str	r3, [fp, #-8]
   188a4:	b	188bc <traverse_info_done@@Base+0x2fc>
   188a8:	ldr	r0, [fp, #-8]
   188ac:	bl	14adc <print_all_distinct_dims@@Base>
   188b0:	ldr	r3, [fp, #-8]
   188b4:	add	r3, r3, #1
   188b8:	str	r3, [fp, #-8]
   188bc:	ldr	r3, [pc, #100]	; 18928 <traverse_info_done@@Base+0x368>
   188c0:	ldr	r2, [r3]
   188c4:	ldr	r3, [fp, #-8]
   188c8:	cmp	r2, r3
   188cc:	bgt	188a8 <traverse_info_done@@Base+0x2e8>
   188d0:	b	188e8 <traverse_info_done@@Base+0x328>
   188d4:	ldr	r3, [pc, #24]	; 188f4 <traverse_info_done@@Base+0x334>
   188d8:	ldr	r3, [r3]
   188dc:	cmp	r3, #1
   188e0:	bne	188e8 <traverse_info_done@@Base+0x328>
   188e4:	bl	135f8 <export_data_element_to_ascii@@Base>
   188e8:	nop			; (mov r0, r0)
   188ec:	sub	sp, fp, #4
   188f0:	pop	{fp, pc}
   188f4:	andeq	r0, r3, ip, lsr #1
   188f8:			; <UNDEFINED> instruction: 0x0002f1bc
   188fc:	andeq	r0, r3, r0, lsr #1
   18900:	strdeq	pc, [r2], -r0
   18904:	andeq	sp, r1, r0, lsr #5
   18908:	andeq	sp, r1, r0, ror r3
   1890c:	andeq	sp, r1, r4, lsr #5
   18910:	strdeq	sp, [r1], -ip
   18914:	andeq	pc, r2, r8, ror #3
   18918:	andeq	sp, r1, ip, lsl r3
   1891c:	andeq	r0, r3, r4, lsr #1
   18920:	andeq	sp, r1, r4, lsr #6
   18924:	ldrdeq	pc, [r2], -ip
   18928:	strheq	r0, [r3], -r8
   1892c:	push	{fp, lr}
   18930:	add	fp, sp, #4
   18934:	sub	sp, sp, #16
   18938:	str	r0, [fp, #-16]
   1893c:	str	r1, [fp, #-20]	; 0xffffffec
   18940:	ldr	r3, [pc, #432]	; 18af8 <traverse_info_done@@Base+0x538>
   18944:	ldr	r3, [r3, #3748]	; 0xea4
   18948:	sub	r3, r3, #1
   1894c:	ldr	r2, [pc, #420]	; 18af8 <traverse_info_done@@Base+0x538>
   18950:	add	r3, r3, #872	; 0x368
   18954:	lsl	r3, r3, #2
   18958:	add	r3, r2, r3
   1895c:	ldr	r2, [fp, #-16]
   18960:	str	r2, [r3, #4]
   18964:	ldr	r3, [pc, #396]	; 18af8 <traverse_info_done@@Base+0x538>
   18968:	ldr	r3, [r3, #136]	; 0x88
   1896c:	sub	r3, r3, #1
   18970:	ldr	r2, [pc, #384]	; 18af8 <traverse_info_done@@Base+0x538>
   18974:	add	r3, r3, #2
   18978:	ldr	r3, [r2, r3, lsl #2]
   1897c:	sub	r2, fp, #8
   18980:	ldr	r1, [fp, #-16]
   18984:	mov	r0, r3
   18988:	bl	12214 <coda_type_get_record_field_hidden_status@plt>
   1898c:	mov	r3, r0
   18990:	cmp	r3, #0
   18994:	beq	1899c <traverse_info_done@@Base+0x3dc>
   18998:	bl	1a55c <handle_coda_error@@Base>
   1899c:	ldr	r3, [fp, #-8]
   189a0:	cmp	r3, #0
   189a4:	beq	189b4 <traverse_info_done@@Base+0x3f4>
   189a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   189ac:	cmp	r3, #0
   189b0:	beq	18ae4 <traverse_info_done@@Base+0x524>
   189b4:	ldr	r3, [pc, #320]	; 18afc <traverse_info_done@@Base+0x53c>
   189b8:	ldr	r3, [r3]
   189bc:	cmp	r3, #0
   189c0:	beq	18a3c <traverse_info_done@@Base+0x47c>
   189c4:	ldr	r3, [pc, #300]	; 18af8 <traverse_info_done@@Base+0x538>
   189c8:	ldr	r3, [r3, #136]	; 0x88
   189cc:	sub	r3, r3, #1
   189d0:	ldr	r2, [pc, #288]	; 18af8 <traverse_info_done@@Base+0x538>
   189d4:	add	r3, r3, #2
   189d8:	ldr	r3, [r2, r3, lsl #2]
   189dc:	sub	r2, fp, #12
   189e0:	ldr	r1, [fp, #-16]
   189e4:	mov	r0, r3
   189e8:	bl	12304 <coda_type_get_record_field_available_status@plt>
   189ec:	mov	r3, r0
   189f0:	cmp	r3, #0
   189f4:	beq	189fc <traverse_info_done@@Base+0x43c>
   189f8:	bl	1a55c <handle_coda_error@@Base>
   189fc:	ldr	r3, [fp, #-12]
   18a00:	cmn	r3, #1
   18a04:	bne	18a18 <traverse_info_done@@Base+0x458>
   18a08:	bl	16b58 <dim_record_field_available@@Base>
   18a0c:	mov	r3, r0
   18a10:	cmp	r3, #0
   18a14:	beq	18aec <traverse_info_done@@Base+0x52c>
   18a18:	ldr	r3, [pc, #216]	; 18af8 <traverse_info_done@@Base+0x538>
   18a1c:	ldr	r3, [r3, #136]	; 0x88
   18a20:	sub	r3, r3, #1
   18a24:	ldr	r2, [fp, #-12]
   18a28:	ldr	r1, [pc, #200]	; 18af8 <traverse_info_done@@Base+0x538>
   18a2c:	add	r3, r3, #840	; 0x348
   18a30:	lsl	r3, r3, #2
   18a34:	add	r3, r1, r3
   18a38:	str	r2, [r3, #4]
   18a3c:	ldr	r3, [pc, #180]	; 18af8 <traverse_info_done@@Base+0x538>
   18a40:	ldr	r3, [r3, #136]	; 0x88
   18a44:	sub	r3, r3, #1
   18a48:	ldr	r2, [pc, #168]	; 18af8 <traverse_info_done@@Base+0x538>
   18a4c:	add	r3, r3, #2
   18a50:	ldr	r0, [r2, r3, lsl #2]
   18a54:	ldr	r3, [pc, #156]	; 18af8 <traverse_info_done@@Base+0x538>
   18a58:	ldr	r3, [r3, #3748]	; 0xea4
   18a5c:	sub	r3, r3, #1
   18a60:	add	r3, r3, #904	; 0x388
   18a64:	lsl	r3, r3, #2
   18a68:	ldr	r2, [pc, #136]	; 18af8 <traverse_info_done@@Base+0x538>
   18a6c:	add	r3, r3, r2
   18a70:	add	r3, r3, #4
   18a74:	mov	r2, r3
   18a78:	ldr	r1, [fp, #-16]
   18a7c:	bl	1261c <coda_type_get_record_field_name@plt>
   18a80:	mov	r3, r0
   18a84:	cmp	r3, #0
   18a88:	beq	18a90 <traverse_info_done@@Base+0x4d0>
   18a8c:	bl	1a55c <handle_coda_error@@Base>
   18a90:	ldr	r3, [pc, #96]	; 18af8 <traverse_info_done@@Base+0x538>
   18a94:	ldr	r3, [r3, #136]	; 0x88
   18a98:	sub	r3, r3, #1
   18a9c:	ldr	r2, [pc, #84]	; 18af8 <traverse_info_done@@Base+0x538>
   18aa0:	add	r3, r3, #2
   18aa4:	ldr	r0, [r2, r3, lsl #2]
   18aa8:	ldr	r3, [pc, #72]	; 18af8 <traverse_info_done@@Base+0x538>
   18aac:	ldr	r3, [r3, #136]	; 0x88
   18ab0:	add	r3, r3, #2
   18ab4:	lsl	r3, r3, #2
   18ab8:	ldr	r2, [pc, #56]	; 18af8 <traverse_info_done@@Base+0x538>
   18abc:	add	r3, r3, r2
   18ac0:	mov	r2, r3
   18ac4:	ldr	r1, [fp, #-16]
   18ac8:	bl	122c8 <coda_type_get_record_field_type@plt>
   18acc:	mov	r3, r0
   18ad0:	cmp	r3, #0
   18ad4:	beq	18adc <traverse_info_done@@Base+0x51c>
   18ad8:	bl	1a55c <handle_coda_error@@Base>
   18adc:	bl	18b00 <traverse_info_done@@Base+0x540>
   18ae0:	b	18af0 <traverse_info_done@@Base+0x530>
   18ae4:	nop			; (mov r0, r0)
   18ae8:	b	18af0 <traverse_info_done@@Base+0x530>
   18aec:	nop			; (mov r0, r0)
   18af0:	sub	sp, fp, #4
   18af4:	pop	{fp, pc}
   18af8:	strdeq	pc, [r2], -r0
   18afc:	andeq	pc, r2, ip, ror #3
   18b00:	push	{r4, fp, lr}
   18b04:	add	fp, sp, #8
   18b08:	sub	sp, sp, #36	; 0x24
   18b0c:	ldr	r3, [pc, #1336]	; 1904c <traverse_info_done@@Base+0xa8c>
   18b10:	ldr	r3, [r3, #136]	; 0x88
   18b14:	ldr	r2, [pc, #1328]	; 1904c <traverse_info_done@@Base+0xa8c>
   18b18:	add	r3, r3, #2
   18b1c:	ldr	r3, [r2, r3, lsl #2]
   18b20:	sub	r2, fp, #24
   18b24:	mov	r1, r2
   18b28:	mov	r0, r3
   18b2c:	bl	12664 <coda_type_get_class@plt>
   18b30:	mov	r3, r0
   18b34:	cmp	r3, #0
   18b38:	beq	18b40 <traverse_info_done@@Base+0x580>
   18b3c:	bl	1a55c <handle_coda_error@@Base>
   18b40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b44:	cmp	r3, #6
   18b48:	ldrls	pc, [pc, r3, lsl #2]
   18b4c:	b	19044 <traverse_info_done@@Base+0xa84>
   18b50:	andeq	r8, r1, ip, ror #22
   18b54:	strdeq	r8, [r1], -ip
   18b58:			; <UNDEFINED> instruction: 0x00018eb4
   18b5c:			; <UNDEFINED> instruction: 0x00018eb4
   18b60:			; <UNDEFINED> instruction: 0x00018eb4
   18b64:			; <UNDEFINED> instruction: 0x00018eb4
   18b68:	andeq	r8, r1, ip, lsr pc
   18b6c:	ldr	r3, [pc, #1240]	; 1904c <traverse_info_done@@Base+0xa8c>
   18b70:	ldr	r3, [r3, #136]	; 0x88
   18b74:	cmp	r3, #30
   18b78:	bgt	19030 <traverse_info_done@@Base+0xa70>
   18b7c:	ldr	r3, [pc, #1224]	; 1904c <traverse_info_done@@Base+0xa8c>
   18b80:	ldr	r3, [r3, #3748]	; 0xea4
   18b84:	add	r3, r3, #1
   18b88:	ldr	r2, [pc, #1212]	; 1904c <traverse_info_done@@Base+0xa8c>
   18b8c:	str	r3, [r2, #3748]	; 0xea4
   18b90:	ldr	r3, [pc, #1204]	; 1904c <traverse_info_done@@Base+0xa8c>
   18b94:	ldr	r3, [r3, #136]	; 0x88
   18b98:	ldr	r2, [pc, #1196]	; 1904c <traverse_info_done@@Base+0xa8c>
   18b9c:	add	r3, r3, #2
   18ba0:	ldr	r3, [r2, r3, lsl #2]
   18ba4:	sub	r2, fp, #28
   18ba8:	mov	r1, r2
   18bac:	mov	r0, r3
   18bb0:	bl	12400 <coda_type_get_num_record_fields@plt>
   18bb4:	mov	r3, r0
   18bb8:	cmp	r3, #0
   18bbc:	beq	18bc4 <traverse_info_done@@Base+0x604>
   18bc0:	bl	1a55c <handle_coda_error@@Base>
   18bc4:	ldr	r3, [pc, #1152]	; 1904c <traverse_info_done@@Base+0xa8c>
   18bc8:	ldr	r3, [r3, #136]	; 0x88
   18bcc:	add	r3, r3, #1
   18bd0:	ldr	r2, [pc, #1140]	; 1904c <traverse_info_done@@Base+0xa8c>
   18bd4:	str	r3, [r2, #136]	; 0x88
   18bd8:	ldr	r3, [pc, #1132]	; 1904c <traverse_info_done@@Base+0xa8c>
   18bdc:	ldr	r3, [r3, #796]	; 0x31c
   18be0:	ldr	r2, [pc, #1124]	; 1904c <traverse_info_done@@Base+0xa8c>
   18be4:	add	r3, r3, #166	; 0xa6
   18be8:	ldr	r3, [r2, r3, lsl #2]
   18bec:	cmp	r3, #0
   18bf0:	beq	18d98 <traverse_info_done@@Base+0x7d8>
   18bf4:	ldr	r3, [pc, #1104]	; 1904c <traverse_info_done@@Base+0xa8c>
   18bf8:	ldr	r3, [r3, #796]	; 0x31c
   18bfc:	ldr	r2, [pc, #1096]	; 1904c <traverse_info_done@@Base+0xa8c>
   18c00:	add	r3, r3, #166	; 0xa6
   18c04:	ldr	r3, [r2, r3, lsl #2]
   18c08:	str	r3, [fp, #-16]
   18c0c:	b	18d60 <traverse_info_done@@Base+0x7a0>
   18c10:	ldr	r3, [pc, #1076]	; 1904c <traverse_info_done@@Base+0xa8c>
   18c14:	ldr	r3, [r3, #796]	; 0x31c
   18c18:	ldr	r2, [pc, #1068]	; 1904c <traverse_info_done@@Base+0xa8c>
   18c1c:	add	r3, r3, #166	; 0xa6
   18c20:	ldr	r3, [r2, r3, lsl #2]
   18c24:	mov	r0, r3
   18c28:	bl	17258 <codadump_filter_get_fieldname@@Base>
   18c2c:	str	r0, [fp, #-20]	; 0xffffffec
   18c30:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c34:	cmp	r3, #0
   18c38:	bne	18c50 <traverse_info_done@@Base+0x690>
   18c3c:	ldr	r3, [pc, #1036]	; 19050 <traverse_info_done@@Base+0xa90>
   18c40:	ldr	r2, [pc, #1036]	; 19054 <traverse_info_done@@Base+0xa94>
   18c44:	ldr	r1, [pc, #1036]	; 19058 <traverse_info_done@@Base+0xa98>
   18c48:	ldr	r0, [pc, #1036]	; 1905c <traverse_info_done@@Base+0xa9c>
   18c4c:	bl	12658 <__assert_fail@plt>
   18c50:	ldr	r3, [pc, #1012]	; 1904c <traverse_info_done@@Base+0xa8c>
   18c54:	ldr	r3, [r3, #136]	; 0x88
   18c58:	sub	r3, r3, #1
   18c5c:	ldr	r2, [pc, #1000]	; 1904c <traverse_info_done@@Base+0xa8c>
   18c60:	add	r3, r3, #2
   18c64:	ldr	r3, [r2, r3, lsl #2]
   18c68:	sub	r2, fp, #32
   18c6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18c70:	mov	r0, r3
   18c74:	bl	12568 <coda_type_get_record_field_index_from_name@plt>
   18c78:	mov	r3, r0
   18c7c:	cmp	r3, #0
   18c80:	beq	18cbc <traverse_info_done@@Base+0x6fc>
   18c84:	bl	12604 <coda_get_errno@plt>
   18c88:	mov	r3, r0
   18c8c:	ldr	r3, [r3]
   18c90:	cmn	r3, #102	; 0x66
   18c94:	bne	18cb8 <traverse_info_done@@Base+0x6f8>
   18c98:	ldr	r3, [pc, #960]	; 19060 <traverse_info_done@@Base+0xaa0>
   18c9c:	ldr	r3, [r3]
   18ca0:	ldr	r2, [fp, #-20]	; 0xffffffec
   18ca4:	ldr	r1, [pc, #952]	; 19064 <traverse_info_done@@Base+0xaa4>
   18ca8:	mov	r0, r3
   18cac:	bl	12454 <fprintf@plt>
   18cb0:	mov	r0, #1
   18cb4:	bl	1240c <exit@plt>
   18cb8:	bl	1a55c <handle_coda_error@@Base>
   18cbc:	ldr	r3, [pc, #904]	; 1904c <traverse_info_done@@Base+0xa8c>
   18cc0:	ldr	r3, [r3, #796]	; 0x31c
   18cc4:	add	r4, r3, #1
   18cc8:	ldr	r3, [pc, #892]	; 1904c <traverse_info_done@@Base+0xa8c>
   18ccc:	ldr	r3, [r3, #796]	; 0x31c
   18cd0:	ldr	r2, [pc, #884]	; 1904c <traverse_info_done@@Base+0xa8c>
   18cd4:	add	r3, r3, #166	; 0xa6
   18cd8:	ldr	r3, [r2, r3, lsl #2]
   18cdc:	mov	r0, r3
   18ce0:	bl	172a8 <codadump_filter_get_subfilter@@Base>
   18ce4:	mov	r1, r0
   18ce8:	ldr	r2, [pc, #860]	; 1904c <traverse_info_done@@Base+0xa8c>
   18cec:	add	r3, r4, #166	; 0xa6
   18cf0:	str	r1, [r2, r3, lsl #2]
   18cf4:	ldr	r3, [pc, #848]	; 1904c <traverse_info_done@@Base+0xa8c>
   18cf8:	ldr	r3, [r3, #796]	; 0x31c
   18cfc:	add	r3, r3, #1
   18d00:	ldr	r2, [pc, #836]	; 1904c <traverse_info_done@@Base+0xa8c>
   18d04:	str	r3, [r2, #796]	; 0x31c
   18d08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18d0c:	mov	r1, #1
   18d10:	mov	r0, r3
   18d14:	bl	1892c <traverse_info_done@@Base+0x36c>
   18d18:	ldr	r3, [pc, #812]	; 1904c <traverse_info_done@@Base+0xa8c>
   18d1c:	ldr	r3, [r3, #796]	; 0x31c
   18d20:	sub	r3, r3, #1
   18d24:	ldr	r2, [pc, #800]	; 1904c <traverse_info_done@@Base+0xa8c>
   18d28:	str	r3, [r2, #796]	; 0x31c
   18d2c:	ldr	r3, [pc, #792]	; 1904c <traverse_info_done@@Base+0xa8c>
   18d30:	ldr	r4, [r3, #796]	; 0x31c
   18d34:	ldr	r3, [pc, #784]	; 1904c <traverse_info_done@@Base+0xa8c>
   18d38:	ldr	r3, [r3, #796]	; 0x31c
   18d3c:	ldr	r2, [pc, #776]	; 1904c <traverse_info_done@@Base+0xa8c>
   18d40:	add	r3, r3, #166	; 0xa6
   18d44:	ldr	r3, [r2, r3, lsl #2]
   18d48:	mov	r0, r3
   18d4c:	bl	172f8 <codadump_filter_get_next_filter@@Base>
   18d50:	mov	r1, r0
   18d54:	ldr	r2, [pc, #752]	; 1904c <traverse_info_done@@Base+0xa8c>
   18d58:	add	r3, r4, #166	; 0xa6
   18d5c:	str	r1, [r2, r3, lsl #2]
   18d60:	ldr	r3, [pc, #740]	; 1904c <traverse_info_done@@Base+0xa8c>
   18d64:	ldr	r3, [r3, #796]	; 0x31c
   18d68:	ldr	r2, [pc, #732]	; 1904c <traverse_info_done@@Base+0xa8c>
   18d6c:	add	r3, r3, #166	; 0xa6
   18d70:	ldr	r3, [r2, r3, lsl #2]
   18d74:	cmp	r3, #0
   18d78:	bne	18c10 <traverse_info_done@@Base+0x650>
   18d7c:	ldr	r3, [pc, #712]	; 1904c <traverse_info_done@@Base+0xa8c>
   18d80:	ldr	r3, [r3, #796]	; 0x31c
   18d84:	ldr	r1, [pc, #704]	; 1904c <traverse_info_done@@Base+0xa8c>
   18d88:	add	r3, r3, #166	; 0xa6
   18d8c:	ldr	r2, [fp, #-16]
   18d90:	str	r2, [r1, r3, lsl #2]
   18d94:	b	18dd0 <traverse_info_done@@Base+0x810>
   18d98:	mov	r3, #0
   18d9c:	str	r3, [fp, #-32]	; 0xffffffe0
   18da0:	b	18dc0 <traverse_info_done@@Base+0x800>
   18da4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18da8:	mov	r1, #0
   18dac:	mov	r0, r3
   18db0:	bl	1892c <traverse_info_done@@Base+0x36c>
   18db4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18db8:	add	r3, r3, #1
   18dbc:	str	r3, [fp, #-32]	; 0xffffffe0
   18dc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18dc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18dc8:	cmp	r2, r3
   18dcc:	blt	18da4 <traverse_info_done@@Base+0x7e4>
   18dd0:	ldr	r3, [pc, #628]	; 1904c <traverse_info_done@@Base+0xa8c>
   18dd4:	ldr	r3, [r3, #136]	; 0x88
   18dd8:	sub	r3, r3, #1
   18ddc:	ldr	r2, [pc, #616]	; 1904c <traverse_info_done@@Base+0xa8c>
   18de0:	str	r3, [r2, #136]	; 0x88
   18de4:	ldr	r3, [pc, #608]	; 1904c <traverse_info_done@@Base+0xa8c>
   18de8:	ldr	r3, [r3, #3748]	; 0xea4
   18dec:	sub	r3, r3, #1
   18df0:	ldr	r2, [pc, #596]	; 1904c <traverse_info_done@@Base+0xa8c>
   18df4:	str	r3, [r2, #3748]	; 0xea4
   18df8:	b	19044 <traverse_info_done@@Base+0xa84>
   18dfc:	ldr	r3, [pc, #584]	; 1904c <traverse_info_done@@Base+0xa8c>
   18e00:	ldr	r3, [r3, #136]	; 0x88
   18e04:	cmp	r3, #30
   18e08:	bgt	19038 <traverse_info_done@@Base+0xa78>
   18e0c:	bl	15708 <dim_enter_array@@Base>
   18e10:	ldr	r3, [pc, #564]	; 1904c <traverse_info_done@@Base+0xa8c>
   18e14:	ldr	r3, [r3, #3360]	; 0xd20
   18e18:	add	r3, r3, #1
   18e1c:	ldr	r2, [pc, #552]	; 1904c <traverse_info_done@@Base+0xa8c>
   18e20:	str	r3, [r2, #3360]	; 0xd20
   18e24:	ldr	r3, [pc, #544]	; 1904c <traverse_info_done@@Base+0xa8c>
   18e28:	ldr	r3, [r3, #136]	; 0x88
   18e2c:	add	r3, r3, #1
   18e30:	ldr	r2, [pc, #532]	; 1904c <traverse_info_done@@Base+0xa8c>
   18e34:	str	r3, [r2, #136]	; 0x88
   18e38:	ldr	r3, [pc, #524]	; 1904c <traverse_info_done@@Base+0xa8c>
   18e3c:	ldr	r3, [r3, #136]	; 0x88
   18e40:	sub	r3, r3, #1
   18e44:	ldr	r2, [pc, #512]	; 1904c <traverse_info_done@@Base+0xa8c>
   18e48:	add	r3, r3, #2
   18e4c:	ldr	r0, [r2, r3, lsl #2]
   18e50:	ldr	r3, [pc, #500]	; 1904c <traverse_info_done@@Base+0xa8c>
   18e54:	ldr	r3, [r3, #136]	; 0x88
   18e58:	add	r3, r3, #2
   18e5c:	lsl	r3, r3, #2
   18e60:	ldr	r2, [pc, #484]	; 1904c <traverse_info_done@@Base+0xa8c>
   18e64:	add	r3, r3, r2
   18e68:	mov	r1, r3
   18e6c:	bl	124f0 <coda_type_get_array_base_type@plt>
   18e70:	mov	r3, r0
   18e74:	cmp	r3, #0
   18e78:	beq	18e80 <traverse_info_done@@Base+0x8c0>
   18e7c:	bl	1a55c <handle_coda_error@@Base>
   18e80:	bl	18b00 <traverse_info_done@@Base+0x540>
   18e84:	ldr	r3, [pc, #448]	; 1904c <traverse_info_done@@Base+0xa8c>
   18e88:	ldr	r3, [r3, #136]	; 0x88
   18e8c:	sub	r3, r3, #1
   18e90:	ldr	r2, [pc, #436]	; 1904c <traverse_info_done@@Base+0xa8c>
   18e94:	str	r3, [r2, #136]	; 0x88
   18e98:	ldr	r3, [pc, #428]	; 1904c <traverse_info_done@@Base+0xa8c>
   18e9c:	ldr	r3, [r3, #3360]	; 0xd20
   18ea0:	sub	r3, r3, #1
   18ea4:	ldr	r2, [pc, #416]	; 1904c <traverse_info_done@@Base+0xa8c>
   18ea8:	str	r3, [r2, #3360]	; 0xd20
   18eac:	bl	1652c <dim_leave_array@@Base>
   18eb0:	b	19044 <traverse_info_done@@Base+0xa84>
   18eb4:	ldr	r3, [pc, #400]	; 1904c <traverse_info_done@@Base+0xa8c>
   18eb8:	ldr	r3, [r3, #136]	; 0x88
   18ebc:	ldr	r2, [pc, #392]	; 1904c <traverse_info_done@@Base+0xa8c>
   18ec0:	add	r3, r3, #2
   18ec4:	ldr	r3, [r2, r3, lsl #2]
   18ec8:	sub	r2, fp, #36	; 0x24
   18ecc:	mov	r1, r2
   18ed0:	mov	r0, r3
   18ed4:	bl	12418 <coda_type_get_read_type@plt>
   18ed8:	mov	r3, r0
   18edc:	cmp	r3, #0
   18ee0:	beq	18ee8 <traverse_info_done@@Base+0x928>
   18ee4:	bl	1a55c <handle_coda_error@@Base>
   18ee8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18eec:	sub	r3, r3, #11
   18ef0:	cmp	r3, #1
   18ef4:	bhi	18f30 <traverse_info_done@@Base+0x970>
   18ef8:	bl	15708 <dim_enter_array@@Base>
   18efc:	ldr	r3, [pc, #328]	; 1904c <traverse_info_done@@Base+0xa8c>
   18f00:	ldr	r3, [r3, #3360]	; 0xd20
   18f04:	add	r3, r3, #1
   18f08:	ldr	r2, [pc, #316]	; 1904c <traverse_info_done@@Base+0xa8c>
   18f0c:	str	r3, [r2, #3360]	; 0xd20
   18f10:	bl	18610 <traverse_info_done@@Base+0x50>
   18f14:	ldr	r3, [pc, #304]	; 1904c <traverse_info_done@@Base+0xa8c>
   18f18:	ldr	r3, [r3, #3360]	; 0xd20
   18f1c:	sub	r3, r3, #1
   18f20:	ldr	r2, [pc, #292]	; 1904c <traverse_info_done@@Base+0xa8c>
   18f24:	str	r3, [r2, #3360]	; 0xd20
   18f28:	bl	1652c <dim_leave_array@@Base>
   18f2c:	b	18f38 <traverse_info_done@@Base+0x978>
   18f30:	bl	18610 <traverse_info_done@@Base+0x50>
   18f34:	nop			; (mov r0, r0)
   18f38:	b	19044 <traverse_info_done@@Base+0xa84>
   18f3c:	bl	121f0 <coda_get_option_bypass_special_types@plt>
   18f40:	mov	r3, r0
   18f44:	cmp	r3, #0
   18f48:	beq	18f98 <traverse_info_done@@Base+0x9d8>
   18f4c:	ldr	r3, [pc, #248]	; 1904c <traverse_info_done@@Base+0xa8c>
   18f50:	ldr	r3, [r3, #136]	; 0x88
   18f54:	ldr	r2, [pc, #240]	; 1904c <traverse_info_done@@Base+0xa8c>
   18f58:	add	r3, r3, #2
   18f5c:	ldr	r0, [r2, r3, lsl #2]
   18f60:	ldr	r3, [pc, #228]	; 1904c <traverse_info_done@@Base+0xa8c>
   18f64:	ldr	r3, [r3, #136]	; 0x88
   18f68:	add	r3, r3, #2
   18f6c:	lsl	r3, r3, #2
   18f70:	ldr	r2, [pc, #212]	; 1904c <traverse_info_done@@Base+0xa8c>
   18f74:	add	r3, r3, r2
   18f78:	mov	r1, r3
   18f7c:	bl	12610 <coda_type_get_special_base_type@plt>
   18f80:	mov	r3, r0
   18f84:	cmp	r3, #0
   18f88:	beq	18f90 <traverse_info_done@@Base+0x9d0>
   18f8c:	bl	1a55c <handle_coda_error@@Base>
   18f90:	bl	18b00 <traverse_info_done@@Base+0x540>
   18f94:	b	19044 <traverse_info_done@@Base+0xa84>
   18f98:	ldr	r3, [pc, #172]	; 1904c <traverse_info_done@@Base+0xa8c>
   18f9c:	ldr	r3, [r3, #136]	; 0x88
   18fa0:	ldr	r2, [pc, #164]	; 1904c <traverse_info_done@@Base+0xa8c>
   18fa4:	add	r3, r3, #2
   18fa8:	ldr	r3, [r2, r3, lsl #2]
   18fac:	sub	r2, fp, #40	; 0x28
   18fb0:	mov	r1, r2
   18fb4:	mov	r0, r3
   18fb8:	bl	124cc <coda_type_get_special_type@plt>
   18fbc:	mov	r3, r0
   18fc0:	cmp	r3, #0
   18fc4:	beq	18fcc <traverse_info_done@@Base+0xa0c>
   18fc8:	bl	1a55c <handle_coda_error@@Base>
   18fcc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18fd0:	cmp	r3, #3
   18fd4:	ldrls	pc, [pc, r3, lsl #2]
   18fd8:	b	19040 <traverse_info_done@@Base+0xa80>
   18fdc:	andeq	r9, r1, r0, asr #32
   18fe0:	andeq	r8, r1, ip, ror #31
   18fe4:	andeq	r8, r1, ip, ror #31
   18fe8:	strdeq	r8, [r1], -r4
   18fec:	bl	18610 <traverse_info_done@@Base+0x50>
   18ff0:	b	1902c <traverse_info_done@@Base+0xa6c>
   18ff4:	bl	15708 <dim_enter_array@@Base>
   18ff8:	ldr	r3, [pc, #76]	; 1904c <traverse_info_done@@Base+0xa8c>
   18ffc:	ldr	r3, [r3, #3360]	; 0xd20
   19000:	add	r3, r3, #1
   19004:	ldr	r2, [pc, #64]	; 1904c <traverse_info_done@@Base+0xa8c>
   19008:	str	r3, [r2, #3360]	; 0xd20
   1900c:	bl	18610 <traverse_info_done@@Base+0x50>
   19010:	ldr	r3, [pc, #52]	; 1904c <traverse_info_done@@Base+0xa8c>
   19014:	ldr	r3, [r3, #3360]	; 0xd20
   19018:	sub	r3, r3, #1
   1901c:	ldr	r2, [pc, #40]	; 1904c <traverse_info_done@@Base+0xa8c>
   19020:	str	r3, [r2, #3360]	; 0xd20
   19024:	bl	1652c <dim_leave_array@@Base>
   19028:	nop			; (mov r0, r0)
   1902c:	b	19040 <traverse_info_done@@Base+0xa80>
   19030:	nop			; (mov r0, r0)
   19034:	b	19044 <traverse_info_done@@Base+0xa84>
   19038:	nop			; (mov r0, r0)
   1903c:	b	19044 <traverse_info_done@@Base+0xa84>
   19040:	nop			; (mov r0, r0)
   19044:	sub	sp, fp, #8
   19048:	pop	{r4, fp, pc}
   1904c:	strdeq	pc, [r2], -r0
   19050:	andeq	sp, r1, r4, lsl #7
   19054:	andeq	r0, r0, r9, lsl #3
   19058:	andeq	sp, r1, r4, lsr #5
   1905c:	andeq	sp, r1, ip, lsr #6
   19060:			; <UNDEFINED> instruction: 0x0002f1b8
   19064:	andeq	sp, r1, ip, lsr r3

00019068 <traverse_product@@Base>:
   19068:	push	{fp, lr}
   1906c:	add	fp, sp, #4
   19070:	sub	sp, sp, #8
   19074:	ldr	r3, [pc, #236]	; 19168 <traverse_product@@Base+0x100>
   19078:	ldr	r3, [r3]
   1907c:	ldr	r1, [pc, #232]	; 1916c <traverse_product@@Base+0x104>
   19080:	mov	r0, r3
   19084:	bl	12250 <coda_open@plt>
   19088:	str	r0, [fp, #-8]
   1908c:	ldr	r3, [fp, #-8]
   19090:	cmp	r3, #0
   19094:	beq	190d4 <traverse_product@@Base+0x6c>
   19098:	bl	12604 <coda_get_errno@plt>
   1909c:	mov	r3, r0
   190a0:	ldr	r3, [r3]
   190a4:	cmn	r3, #21
   190a8:	bne	190d4 <traverse_product@@Base+0x6c>
   190ac:	mov	r0, #0
   190b0:	bl	12298 <coda_set_option_use_mmap@plt>
   190b4:	ldr	r3, [pc, #172]	; 19168 <traverse_product@@Base+0x100>
   190b8:	ldr	r3, [r3]
   190bc:	ldr	r1, [pc, #168]	; 1916c <traverse_product@@Base+0x104>
   190c0:	mov	r0, r3
   190c4:	bl	12250 <coda_open@plt>
   190c8:	str	r0, [fp, #-8]
   190cc:	mov	r0, #1
   190d0:	bl	12298 <coda_set_option_use_mmap@plt>
   190d4:	ldr	r3, [fp, #-8]
   190d8:	cmp	r3, #0
   190dc:	beq	190e4 <traverse_product@@Base+0x7c>
   190e0:	bl	1a55c <handle_coda_error@@Base>
   190e4:	ldr	r3, [pc, #124]	; 19168 <traverse_product@@Base+0x100>
   190e8:	ldr	r3, [r3, #4]
   190ec:	mov	r1, r3
   190f0:	ldr	r0, [pc, #120]	; 19170 <traverse_product@@Base+0x108>
   190f4:	bl	1237c <coda_cursor_set_product@plt>
   190f8:	mov	r3, r0
   190fc:	cmp	r3, #0
   19100:	beq	19108 <traverse_product@@Base+0xa0>
   19104:	bl	1a55c <handle_coda_error@@Base>
   19108:	ldr	r3, [pc, #88]	; 19168 <traverse_product@@Base+0x100>
   1910c:	ldr	r3, [r3, #136]	; 0x88
   19110:	add	r3, r3, #2
   19114:	lsl	r3, r3, #2
   19118:	ldr	r2, [pc, #72]	; 19168 <traverse_product@@Base+0x100>
   1911c:	add	r3, r3, r2
   19120:	mov	r1, r3
   19124:	ldr	r0, [pc, #68]	; 19170 <traverse_product@@Base+0x108>
   19128:	bl	122d4 <coda_cursor_get_type@plt>
   1912c:	mov	r3, r0
   19130:	cmp	r3, #0
   19134:	beq	1913c <traverse_product@@Base+0xd4>
   19138:	bl	1a55c <handle_coda_error@@Base>
   1913c:	bl	18b00 <traverse_info_done@@Base+0x540>
   19140:	ldr	r3, [pc, #32]	; 19168 <traverse_product@@Base+0x100>
   19144:	ldr	r3, [r3, #4]
   19148:	mov	r0, r3
   1914c:	bl	12538 <coda_close@plt>
   19150:	ldr	r3, [pc, #16]	; 19168 <traverse_product@@Base+0x100>
   19154:	mov	r2, #0
   19158:	str	r2, [r3, #4]
   1915c:	nop			; (mov r0, r0)
   19160:	sub	sp, fp, #4
   19164:	pop	{fp, pc}
   19168:	strdeq	pc, [r2], -r0
   1916c:	strdeq	pc, [r2], -r4
   19170:	andeq	pc, r2, r0, lsl #5
   19174:	push	{fp, lr}
   19178:	add	fp, sp, #4
   1917c:	sub	sp, sp, #8
   19180:	ldr	r3, [pc, #104]	; 191f0 <traverse_product@@Base+0x188>
   19184:	ldr	r3, [r3]
   19188:	cmp	r3, #0
   1918c:	bge	191a4 <traverse_product@@Base+0x13c>
   19190:	ldr	r3, [pc, #92]	; 191f4 <traverse_product@@Base+0x18c>
   19194:	mov	r2, #44	; 0x2c
   19198:	ldr	r1, [pc, #88]	; 191f8 <traverse_product@@Base+0x190>
   1919c:	ldr	r0, [pc, #88]	; 191fc <traverse_product@@Base+0x194>
   191a0:	bl	12658 <__assert_fail@plt>
   191a4:	ldr	r3, [pc, #68]	; 191f0 <traverse_product@@Base+0x188>
   191a8:	ldr	r3, [r3]
   191ac:	str	r3, [fp, #-8]
   191b0:	b	191d8 <traverse_product@@Base+0x170>
   191b4:	ldr	r3, [pc, #68]	; 19200 <traverse_product@@Base+0x198>
   191b8:	ldr	r3, [r3]
   191bc:	mov	r2, #2
   191c0:	mov	r1, #1
   191c4:	ldr	r0, [pc, #56]	; 19204 <traverse_product@@Base+0x19c>
   191c8:	bl	12370 <fwrite@plt>
   191cc:	ldr	r3, [fp, #-8]
   191d0:	sub	r3, r3, #1
   191d4:	str	r3, [fp, #-8]
   191d8:	ldr	r3, [fp, #-8]
   191dc:	cmp	r3, #0
   191e0:	bgt	191b4 <traverse_product@@Base+0x14c>
   191e4:	nop			; (mov r0, r0)
   191e8:	sub	sp, fp, #4
   191ec:	pop	{fp, pc}
   191f0:	andeq	pc, r2, ip, asr #3
   191f4:	strdeq	sp, [r1], -ip
   191f8:	muleq	r1, r4, r3
   191fc:	andeq	sp, r1, r8, ror #7
   19200:	muleq	r3, r8, r0
   19204:	strdeq	sp, [r1], -r4
   19208:	push	{r0, r1, r2, r3}
   1920c:	push	{fp, lr}
   19210:	add	fp, sp, #4
   19214:	sub	sp, sp, #8
   19218:	add	r3, fp, #8
   1921c:	str	r3, [fp, #-12]
   19220:	ldr	r3, [pc, #44]	; 19254 <traverse_product@@Base+0x1ec>
   19224:	ldr	r3, [r3]
   19228:	ldr	r2, [fp, #-12]
   1922c:	ldr	r1, [fp, #4]
   19230:	mov	r0, r3
   19234:	bl	12550 <vfprintf@plt>
   19238:	str	r0, [fp, #-8]
   1923c:	ldr	r3, [fp, #-8]
   19240:	mov	r0, r3
   19244:	sub	sp, fp, #4
   19248:	pop	{fp, lr}
   1924c:	add	sp, sp, #16
   19250:	bx	lr
   19254:	muleq	r3, r8, r0
   19258:	push	{r0, r1, r2, r3}
   1925c:	push	{fp, lr}
   19260:	add	fp, sp, #4
   19264:	sub	sp, sp, #8
   19268:	bl	19174 <traverse_product@@Base+0x10c>
   1926c:	add	r3, fp, #8
   19270:	str	r3, [fp, #-12]
   19274:	ldr	r3, [pc, #44]	; 192a8 <traverse_product@@Base+0x240>
   19278:	ldr	r3, [r3]
   1927c:	ldr	r2, [fp, #-12]
   19280:	ldr	r1, [fp, #4]
   19284:	mov	r0, r3
   19288:	bl	12550 <vfprintf@plt>
   1928c:	str	r0, [fp, #-8]
   19290:	ldr	r3, [fp, #-8]
   19294:	mov	r0, r3
   19298:	sub	sp, fp, #4
   1929c:	pop	{fp, lr}
   192a0:	add	sp, sp, #16
   192a4:	bx	lr
   192a8:	muleq	r3, r8, r0
   192ac:	push	{fp, lr}
   192b0:	add	fp, sp, #4
   192b4:	sub	sp, sp, #16
   192b8:	str	r0, [fp, #-16]
   192bc:	str	r1, [fp, #-20]	; 0xffffffec
   192c0:	mov	r3, #0
   192c4:	str	r3, [fp, #-8]
   192c8:	b	193c8 <traverse_product@@Base+0x360>
   192cc:	ldr	r3, [fp, #-8]
   192d0:	ldr	r2, [fp, #-16]
   192d4:	add	r3, r2, r3
   192d8:	ldrb	r3, [r3]
   192dc:	strb	r3, [fp, #-9]
   192e0:	ldrb	r3, [fp, #-9]
   192e4:	cmp	r3, #12
   192e8:	beq	19338 <traverse_product@@Base+0x2d0>
   192ec:	cmp	r3, #12
   192f0:	bgt	19310 <traverse_product@@Base+0x2a8>
   192f4:	cmp	r3, #9
   192f8:	beq	1935c <traverse_product@@Base+0x2f4>
   192fc:	cmp	r3, #10
   19300:	beq	19344 <traverse_product@@Base+0x2dc>
   19304:	cmp	r3, #8
   19308:	beq	1932c <traverse_product@@Base+0x2c4>
   1930c:	b	19380 <traverse_product@@Base+0x318>
   19310:	cmp	r3, #34	; 0x22
   19314:	beq	19368 <traverse_product@@Base+0x300>
   19318:	cmp	r3, #92	; 0x5c
   1931c:	beq	19374 <traverse_product@@Base+0x30c>
   19320:	cmp	r3, #13
   19324:	beq	19350 <traverse_product@@Base+0x2e8>
   19328:	b	19380 <traverse_product@@Base+0x318>
   1932c:	ldr	r0, [pc, #176]	; 193e4 <traverse_product@@Base+0x37c>
   19330:	bl	19208 <traverse_product@@Base+0x1a0>
   19334:	b	193bc <traverse_product@@Base+0x354>
   19338:	ldr	r0, [pc, #168]	; 193e8 <traverse_product@@Base+0x380>
   1933c:	bl	19208 <traverse_product@@Base+0x1a0>
   19340:	b	193bc <traverse_product@@Base+0x354>
   19344:	ldr	r0, [pc, #160]	; 193ec <traverse_product@@Base+0x384>
   19348:	bl	19208 <traverse_product@@Base+0x1a0>
   1934c:	b	193bc <traverse_product@@Base+0x354>
   19350:	ldr	r0, [pc, #152]	; 193f0 <traverse_product@@Base+0x388>
   19354:	bl	19208 <traverse_product@@Base+0x1a0>
   19358:	b	193bc <traverse_product@@Base+0x354>
   1935c:	ldr	r0, [pc, #144]	; 193f4 <traverse_product@@Base+0x38c>
   19360:	bl	19208 <traverse_product@@Base+0x1a0>
   19364:	b	193bc <traverse_product@@Base+0x354>
   19368:	ldr	r0, [pc, #136]	; 193f8 <traverse_product@@Base+0x390>
   1936c:	bl	19208 <traverse_product@@Base+0x1a0>
   19370:	b	193bc <traverse_product@@Base+0x354>
   19374:	ldr	r0, [pc, #128]	; 193fc <traverse_product@@Base+0x394>
   19378:	bl	19208 <traverse_product@@Base+0x1a0>
   1937c:	b	193bc <traverse_product@@Base+0x354>
   19380:	ldrb	r3, [fp, #-9]
   19384:	cmp	r3, #31
   19388:	bls	193ac <traverse_product@@Base+0x344>
   1938c:	ldrb	r3, [fp, #-9]
   19390:	cmp	r3, #126	; 0x7e
   19394:	bhi	193ac <traverse_product@@Base+0x344>
   19398:	ldrb	r3, [fp, #-9]
   1939c:	mov	r1, r3
   193a0:	ldr	r0, [pc, #88]	; 19400 <traverse_product@@Base+0x398>
   193a4:	bl	19208 <traverse_product@@Base+0x1a0>
   193a8:	b	193bc <traverse_product@@Base+0x354>
   193ac:	ldrb	r3, [fp, #-9]
   193b0:	mov	r1, r3
   193b4:	ldr	r0, [pc, #72]	; 19404 <traverse_product@@Base+0x39c>
   193b8:	bl	19208 <traverse_product@@Base+0x1a0>
   193bc:	ldr	r3, [fp, #-8]
   193c0:	add	r3, r3, #1
   193c4:	str	r3, [fp, #-8]
   193c8:	ldr	r2, [fp, #-8]
   193cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   193d0:	cmp	r2, r3
   193d4:	blt	192cc <traverse_product@@Base+0x264>
   193d8:	nop			; (mov r0, r0)
   193dc:	sub	sp, fp, #4
   193e0:	pop	{fp, pc}
   193e4:	strdeq	sp, [r1], -r8
   193e8:	strdeq	sp, [r1], -ip
   193ec:	andeq	sp, r1, r0, lsl #8
   193f0:	andeq	sp, r1, r4, lsl #8
   193f4:	andeq	sp, r1, r8, lsl #8
   193f8:	andeq	sp, r1, ip, lsl #8
   193fc:	andeq	sp, r1, r0, lsl r4
   19400:	andeq	sp, r1, r4, lsl r4
   19404:	andeq	sp, r1, r8, lsl r4
   19408:	push	{r4, r5, fp, lr}
   1940c:	add	fp, sp, #12
   19410:	sub	sp, sp, #288	; 0x120
   19414:	str	r0, [fp, #-288]	; 0xfffffee0
   19418:	str	r1, [fp, #-292]	; 0xfffffedc
   1941c:	mov	r3, #0
   19420:	str	r3, [fp, #-48]	; 0xffffffd0
   19424:	ldr	r3, [pc, #2684]	; 19ea8 <traverse_product@@Base+0xe40>
   19428:	ldr	r3, [r3]
   1942c:	cmp	r3, #0
   19430:	beq	194f0 <traverse_product@@Base+0x488>
   19434:	sub	r3, fp, #48	; 0x30
   19438:	mov	r1, r3
   1943c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19440:	bl	12310 <coda_cursor_has_attributes@plt>
   19444:	mov	r3, r0
   19448:	cmp	r3, #0
   1944c:	beq	19454 <traverse_product@@Base+0x3ec>
   19450:	bl	1a55c <handle_coda_error@@Base>
   19454:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19458:	cmp	r3, #0
   1945c:	beq	194f0 <traverse_product@@Base+0x488>
   19460:	ldr	r3, [fp, #-292]	; 0xfffffedc
   19464:	cmp	r3, #0
   19468:	beq	19478 <traverse_product@@Base+0x410>
   1946c:	ldr	r0, [pc, #2616]	; 19eac <traverse_product@@Base+0xe44>
   19470:	bl	19208 <traverse_product@@Base+0x1a0>
   19474:	bl	19174 <traverse_product@@Base+0x10c>
   19478:	ldr	r0, [pc, #2608]	; 19eb0 <traverse_product@@Base+0xe48>
   1947c:	bl	19208 <traverse_product@@Base+0x1a0>
   19480:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19484:	bl	12490 <coda_cursor_goto_attributes@plt>
   19488:	mov	r3, r0
   1948c:	cmp	r3, #0
   19490:	beq	19498 <traverse_product@@Base+0x430>
   19494:	bl	1a55c <handle_coda_error@@Base>
   19498:	ldr	r3, [pc, #2580]	; 19eb4 <traverse_product@@Base+0xe4c>
   1949c:	ldr	r3, [r3]
   194a0:	add	r3, r3, #1
   194a4:	ldr	r2, [pc, #2568]	; 19eb4 <traverse_product@@Base+0xe4c>
   194a8:	str	r3, [r2]
   194ac:	mov	r1, #1
   194b0:	ldr	r0, [fp, #-288]	; 0xfffffee0
   194b4:	bl	19408 <traverse_product@@Base+0x3a0>
   194b8:	ldr	r3, [pc, #2548]	; 19eb4 <traverse_product@@Base+0xe4c>
   194bc:	ldr	r3, [r3]
   194c0:	sub	r3, r3, #1
   194c4:	ldr	r2, [pc, #2536]	; 19eb4 <traverse_product@@Base+0xe4c>
   194c8:	str	r3, [r2]
   194cc:	ldr	r0, [fp, #-288]	; 0xfffffee0
   194d0:	bl	123f4 <coda_cursor_goto_parent@plt>
   194d4:	ldr	r0, [pc, #2524]	; 19eb8 <traverse_product@@Base+0xe50>
   194d8:	bl	19258 <traverse_product@@Base+0x1f0>
   194dc:	ldr	r3, [pc, #2512]	; 19eb4 <traverse_product@@Base+0xe4c>
   194e0:	ldr	r3, [r3]
   194e4:	add	r3, r3, #1
   194e8:	ldr	r2, [pc, #2500]	; 19eb4 <traverse_product@@Base+0xe4c>
   194ec:	str	r3, [r2]
   194f0:	sub	r3, fp, #44	; 0x2c
   194f4:	mov	r1, r3
   194f8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   194fc:	bl	1231c <coda_cursor_get_type_class@plt>
   19500:	mov	r3, r0
   19504:	cmp	r3, #0
   19508:	beq	19510 <traverse_product@@Base+0x4a8>
   1950c:	bl	1a55c <handle_coda_error@@Base>
   19510:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19514:	cmp	r3, #6
   19518:	ldrls	pc, [pc, r3, lsl #2]
   1951c:	b	19e7c <traverse_product@@Base+0xe14>
   19520:	andeq	r9, r1, ip, lsr r5
   19524:	andeq	r9, r1, r4, ror #15
   19528:	andeq	r9, r1, r4, asr #18
   1952c:	andeq	r9, r1, r4, asr #18
   19530:	andeq	r9, r1, r4, asr #18
   19534:	andeq	r9, r1, r4, asr #18
   19538:	andeq	r9, r1, r8, lsl #26
   1953c:	sub	r3, fp, #52	; 0x34
   19540:	mov	r1, r3
   19544:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19548:	bl	12274 <coda_cursor_get_num_elements@plt>
   1954c:	mov	r3, r0
   19550:	cmp	r3, #0
   19554:	beq	1955c <traverse_product@@Base+0x4f4>
   19558:	bl	1a55c <handle_coda_error@@Base>
   1955c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19560:	cmp	r3, #0
   19564:	ble	197d8 <traverse_product@@Base+0x770>
   19568:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1956c:	cmp	r3, #0
   19570:	beq	1957c <traverse_product@@Base+0x514>
   19574:	ldr	r0, [pc, #2352]	; 19eac <traverse_product@@Base+0xe44>
   19578:	bl	19208 <traverse_product@@Base+0x1a0>
   1957c:	sub	r3, fp, #56	; 0x38
   19580:	mov	r1, r3
   19584:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19588:	bl	122d4 <coda_cursor_get_type@plt>
   1958c:	mov	r3, r0
   19590:	cmp	r3, #0
   19594:	beq	1959c <traverse_product@@Base+0x534>
   19598:	bl	1a55c <handle_coda_error@@Base>
   1959c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   195a0:	sub	r2, fp, #60	; 0x3c
   195a4:	mov	r1, r2
   195a8:	mov	r0, r3
   195ac:	bl	124d8 <coda_type_get_record_union_status@plt>
   195b0:	mov	r3, r0
   195b4:	cmp	r3, #0
   195b8:	beq	195c0 <traverse_product@@Base+0x558>
   195bc:	bl	1a55c <handle_coda_error@@Base>
   195c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   195c4:	cmp	r3, #0
   195c8:	beq	19690 <traverse_product@@Base+0x628>
   195cc:	sub	r3, fp, #64	; 0x40
   195d0:	mov	r1, r3
   195d4:	ldr	r0, [fp, #-288]	; 0xfffffee0
   195d8:	bl	125d4 <coda_cursor_get_available_union_field_index@plt>
   195dc:	mov	r3, r0
   195e0:	cmp	r3, #0
   195e4:	beq	195ec <traverse_product@@Base+0x584>
   195e8:	bl	1a55c <handle_coda_error@@Base>
   195ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   195f0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   195f4:	sub	r2, fp, #68	; 0x44
   195f8:	mov	r0, r3
   195fc:	bl	1261c <coda_type_get_record_field_name@plt>
   19600:	mov	r3, r0
   19604:	cmp	r3, #0
   19608:	beq	19610 <traverse_product@@Base+0x5a8>
   1960c:	bl	1a55c <handle_coda_error@@Base>
   19610:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19614:	mov	r1, r3
   19618:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1961c:	bl	12394 <coda_cursor_goto_record_field_by_index@plt>
   19620:	mov	r3, r0
   19624:	cmp	r3, #0
   19628:	beq	19630 <traverse_product@@Base+0x5c8>
   1962c:	bl	1a55c <handle_coda_error@@Base>
   19630:	ldr	r3, [fp, #-292]	; 0xfffffedc
   19634:	cmp	r3, #0
   19638:	beq	19640 <traverse_product@@Base+0x5d8>
   1963c:	bl	19174 <traverse_product@@Base+0x10c>
   19640:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19644:	mov	r1, r3
   19648:	ldr	r0, [pc, #2156]	; 19ebc <traverse_product@@Base+0xe54>
   1964c:	bl	19208 <traverse_product@@Base+0x1a0>
   19650:	ldr	r3, [pc, #2140]	; 19eb4 <traverse_product@@Base+0xe4c>
   19654:	ldr	r3, [r3]
   19658:	add	r3, r3, #1
   1965c:	ldr	r2, [pc, #2128]	; 19eb4 <traverse_product@@Base+0xe4c>
   19660:	str	r3, [r2]
   19664:	mov	r1, #1
   19668:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1966c:	bl	19408 <traverse_product@@Base+0x3a0>
   19670:	ldr	r3, [pc, #2108]	; 19eb4 <traverse_product@@Base+0xe4c>
   19674:	ldr	r3, [r3]
   19678:	sub	r3, r3, #1
   1967c:	ldr	r2, [pc, #2096]	; 19eb4 <traverse_product@@Base+0xe4c>
   19680:	str	r3, [r2]
   19684:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19688:	bl	123f4 <coda_cursor_goto_parent@plt>
   1968c:	b	19e7c <traverse_product@@Base+0xe14>
   19690:	mov	r3, #1
   19694:	str	r3, [fp, #-16]
   19698:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1969c:	bl	12388 <coda_cursor_goto_first_record_field@plt>
   196a0:	mov	r3, r0
   196a4:	cmp	r3, #0
   196a8:	beq	196b0 <traverse_product@@Base+0x648>
   196ac:	bl	1a55c <handle_coda_error@@Base>
   196b0:	mov	r3, #0
   196b4:	str	r3, [fp, #-64]	; 0xffffffc0
   196b8:	b	197bc <traverse_product@@Base+0x754>
   196bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   196c0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   196c4:	sub	r2, fp, #76	; 0x4c
   196c8:	mov	r0, r3
   196cc:	bl	12214 <coda_type_get_record_field_hidden_status@plt>
   196d0:	mov	r3, r0
   196d4:	cmp	r3, #0
   196d8:	beq	196e0 <traverse_product@@Base+0x678>
   196dc:	bl	1a55c <handle_coda_error@@Base>
   196e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   196e4:	cmp	r3, #0
   196e8:	bne	19784 <traverse_product@@Base+0x71c>
   196ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   196f0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   196f4:	sub	r2, fp, #72	; 0x48
   196f8:	mov	r0, r3
   196fc:	bl	1261c <coda_type_get_record_field_name@plt>
   19700:	mov	r3, r0
   19704:	cmp	r3, #0
   19708:	beq	19710 <traverse_product@@Base+0x6a8>
   1970c:	bl	1a55c <handle_coda_error@@Base>
   19710:	ldr	r3, [fp, #-292]	; 0xfffffedc
   19714:	cmp	r3, #0
   19718:	bne	19728 <traverse_product@@Base+0x6c0>
   1971c:	ldr	r3, [fp, #-16]
   19720:	cmp	r3, #0
   19724:	bne	1972c <traverse_product@@Base+0x6c4>
   19728:	bl	19174 <traverse_product@@Base+0x10c>
   1972c:	ldr	r3, [fp, #-16]
   19730:	cmp	r3, #0
   19734:	beq	19740 <traverse_product@@Base+0x6d8>
   19738:	mov	r3, #0
   1973c:	str	r3, [fp, #-16]
   19740:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19744:	mov	r1, r3
   19748:	ldr	r0, [pc, #1900]	; 19ebc <traverse_product@@Base+0xe54>
   1974c:	bl	19208 <traverse_product@@Base+0x1a0>
   19750:	ldr	r3, [pc, #1884]	; 19eb4 <traverse_product@@Base+0xe4c>
   19754:	ldr	r3, [r3]
   19758:	add	r3, r3, #1
   1975c:	ldr	r2, [pc, #1872]	; 19eb4 <traverse_product@@Base+0xe4c>
   19760:	str	r3, [r2]
   19764:	mov	r1, #1
   19768:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1976c:	bl	19408 <traverse_product@@Base+0x3a0>
   19770:	ldr	r3, [pc, #1852]	; 19eb4 <traverse_product@@Base+0xe4c>
   19774:	ldr	r3, [r3]
   19778:	sub	r3, r3, #1
   1977c:	ldr	r2, [pc, #1840]	; 19eb4 <traverse_product@@Base+0xe4c>
   19780:	str	r3, [r2]
   19784:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19788:	sub	r2, r3, #1
   1978c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19790:	cmp	r2, r3
   19794:	ble	197b0 <traverse_product@@Base+0x748>
   19798:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1979c:	bl	12580 <coda_cursor_goto_next_record_field@plt>
   197a0:	mov	r3, r0
   197a4:	cmp	r3, #0
   197a8:	beq	197b0 <traverse_product@@Base+0x748>
   197ac:	bl	1a55c <handle_coda_error@@Base>
   197b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   197b4:	add	r3, r3, #1
   197b8:	str	r3, [fp, #-64]	; 0xffffffc0
   197bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   197c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   197c4:	cmp	r2, r3
   197c8:	blt	196bc <traverse_product@@Base+0x654>
   197cc:	ldr	r0, [fp, #-288]	; 0xfffffee0
   197d0:	bl	123f4 <coda_cursor_goto_parent@plt>
   197d4:	b	19e7c <traverse_product@@Base+0xe14>
   197d8:	ldr	r0, [pc, #1760]	; 19ec0 <traverse_product@@Base+0xe58>
   197dc:	bl	19208 <traverse_product@@Base+0x1a0>
   197e0:	b	19e7c <traverse_product@@Base+0xe14>
   197e4:	sub	r2, fp, #284	; 0x11c
   197e8:	sub	r3, fp, #80	; 0x50
   197ec:	mov	r1, r3
   197f0:	ldr	r0, [fp, #-288]	; 0xfffffee0
   197f4:	bl	12520 <coda_cursor_get_array_dim@plt>
   197f8:	mov	r3, r0
   197fc:	cmp	r3, #0
   19800:	beq	19808 <traverse_product@@Base+0x7a0>
   19804:	bl	1a55c <handle_coda_error@@Base>
   19808:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1980c:	cmp	r3, #0
   19810:	blt	19938 <traverse_product@@Base+0x8d0>
   19814:	mov	r3, #1
   19818:	str	r3, [fp, #-20]	; 0xffffffec
   1981c:	mov	r3, #0
   19820:	str	r3, [fp, #-24]	; 0xffffffe8
   19824:	b	19854 <traverse_product@@Base+0x7ec>
   19828:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1982c:	lsl	r3, r3, #2
   19830:	sub	r2, fp, #12
   19834:	add	r3, r2, r3
   19838:	ldr	r2, [r3, #-272]	; 0xfffffef0
   1983c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19840:	mul	r3, r2, r3
   19844:	str	r3, [fp, #-20]	; 0xffffffec
   19848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1984c:	add	r3, r3, #1
   19850:	str	r3, [fp, #-24]	; 0xffffffe8
   19854:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19858:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1985c:	cmp	r2, r3
   19860:	blt	19828 <traverse_product@@Base+0x7c0>
   19864:	ldr	r3, [fp, #-20]	; 0xffffffec
   19868:	cmp	r3, #0
   1986c:	ble	1992c <traverse_product@@Base+0x8c4>
   19870:	ldr	r0, [pc, #1588]	; 19eac <traverse_product@@Base+0xe44>
   19874:	bl	19208 <traverse_product@@Base+0x1a0>
   19878:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1987c:	bl	12364 <coda_cursor_goto_first_array_element@plt>
   19880:	mov	r3, r0
   19884:	cmp	r3, #0
   19888:	beq	19890 <traverse_product@@Base+0x828>
   1988c:	bl	1a55c <handle_coda_error@@Base>
   19890:	mov	r3, #0
   19894:	str	r3, [fp, #-24]	; 0xffffffe8
   19898:	b	19910 <traverse_product@@Base+0x8a8>
   1989c:	ldr	r0, [pc, #1568]	; 19ec4 <traverse_product@@Base+0xe5c>
   198a0:	bl	19258 <traverse_product@@Base+0x1f0>
   198a4:	ldr	r3, [pc, #1544]	; 19eb4 <traverse_product@@Base+0xe4c>
   198a8:	ldr	r3, [r3]
   198ac:	add	r3, r3, #1
   198b0:	ldr	r2, [pc, #1532]	; 19eb4 <traverse_product@@Base+0xe4c>
   198b4:	str	r3, [r2]
   198b8:	mov	r1, #0
   198bc:	ldr	r0, [fp, #-288]	; 0xfffffee0
   198c0:	bl	19408 <traverse_product@@Base+0x3a0>
   198c4:	ldr	r3, [pc, #1512]	; 19eb4 <traverse_product@@Base+0xe4c>
   198c8:	ldr	r3, [r3]
   198cc:	sub	r3, r3, #1
   198d0:	ldr	r2, [pc, #1500]	; 19eb4 <traverse_product@@Base+0xe4c>
   198d4:	str	r3, [r2]
   198d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   198dc:	sub	r2, r3, #1
   198e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   198e4:	cmp	r2, r3
   198e8:	ble	19904 <traverse_product@@Base+0x89c>
   198ec:	ldr	r0, [fp, #-288]	; 0xfffffee0
   198f0:	bl	12460 <coda_cursor_goto_next_array_element@plt>
   198f4:	mov	r3, r0
   198f8:	cmp	r3, #0
   198fc:	beq	19904 <traverse_product@@Base+0x89c>
   19900:	bl	1a55c <handle_coda_error@@Base>
   19904:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19908:	add	r3, r3, #1
   1990c:	str	r3, [fp, #-24]	; 0xffffffe8
   19910:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19914:	ldr	r3, [fp, #-20]	; 0xffffffec
   19918:	cmp	r2, r3
   1991c:	blt	1989c <traverse_product@@Base+0x834>
   19920:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19924:	bl	123f4 <coda_cursor_goto_parent@plt>
   19928:	b	19e7c <traverse_product@@Base+0xe14>
   1992c:	ldr	r0, [pc, #1428]	; 19ec8 <traverse_product@@Base+0xe60>
   19930:	bl	19208 <traverse_product@@Base+0x1a0>
   19934:	b	19e7c <traverse_product@@Base+0xe14>
   19938:	ldr	r0, [pc, #1416]	; 19ec8 <traverse_product@@Base+0xe60>
   1993c:	bl	19208 <traverse_product@@Base+0x1a0>
   19940:	b	19e7c <traverse_product@@Base+0xe14>
   19944:	sub	r3, fp, #84	; 0x54
   19948:	mov	r1, r3
   1994c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19950:	bl	123b8 <coda_cursor_get_read_type@plt>
   19954:	mov	r3, r0
   19958:	cmp	r3, #0
   1995c:	beq	19964 <traverse_product@@Base+0x8fc>
   19960:	bl	1a55c <handle_coda_error@@Base>
   19964:	ldr	r3, [fp, #-84]	; 0xffffffac
   19968:	add	r3, r3, #1
   1996c:	cmp	r3, #13
   19970:	ldrls	pc, [pc, r3, lsl #2]
   19974:	b	19e70 <traverse_product@@Base+0xe08>
   19978:	strdeq	r9, [r1], -r8
   1997c:			; <UNDEFINED> instruction: 0x00019bbc
   19980:	strdeq	r9, [r1], -r0
   19984:			; <UNDEFINED> instruction: 0x00019bbc
   19988:	strdeq	r9, [r1], -r0
   1998c:			; <UNDEFINED> instruction: 0x00019bbc
   19990:	strdeq	r9, [r1], -r0
   19994:	andeq	r9, r1, r4, lsr #24
   19998:	andeq	r9, r1, r8, ror #24
   1999c:	andeq	r9, r1, ip, lsr #25
   199a0:	andeq	r9, r1, ip, lsr #25
   199a4:			; <UNDEFINED> instruction: 0x000199b0
   199a8:	strdeq	r9, [r1], -r4
   199ac:			; <UNDEFINED> instruction: 0x00019ab8
   199b0:	sub	r3, fp, #85	; 0x55
   199b4:	mov	r1, r3
   199b8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   199bc:	bl	1249c <coda_cursor_read_char@plt>
   199c0:	mov	r3, r0
   199c4:	cmp	r3, #0
   199c8:	beq	199d0 <traverse_product@@Base+0x968>
   199cc:	bl	1a55c <handle_coda_error@@Base>
   199d0:	ldr	r0, [pc, #1268]	; 19ecc <traverse_product@@Base+0xe64>
   199d4:	bl	19208 <traverse_product@@Base+0x1a0>
   199d8:	sub	r3, fp, #85	; 0x55
   199dc:	mov	r1, #1
   199e0:	mov	r0, r3
   199e4:	bl	192ac <traverse_product@@Base+0x244>
   199e8:	ldr	r0, [pc, #1248]	; 19ed0 <traverse_product@@Base+0xe68>
   199ec:	bl	19208 <traverse_product@@Base+0x1a0>
   199f0:	b	19d04 <traverse_product@@Base+0xc9c>
   199f4:	sub	r3, fp, #92	; 0x5c
   199f8:	mov	r1, r3
   199fc:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19a00:	bl	12424 <coda_cursor_get_string_length@plt>
   19a04:	mov	r3, r0
   19a08:	cmp	r3, #0
   19a0c:	beq	19a14 <traverse_product@@Base+0x9ac>
   19a10:	bl	1a55c <handle_coda_error@@Base>
   19a14:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19a18:	add	r3, r3, #1
   19a1c:	mov	r0, r3
   19a20:	bl	123c4 <malloc@plt>
   19a24:	mov	r3, r0
   19a28:	str	r3, [fp, #-28]	; 0xffffffe4
   19a2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19a30:	cmp	r3, #0
   19a34:	bne	19a5c <traverse_product@@Base+0x9f4>
   19a38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19a3c:	add	r2, r3, #1
   19a40:	ldr	r3, [pc, #1164]	; 19ed4 <traverse_product@@Base+0xe6c>
   19a44:	str	r3, [sp]
   19a48:	ldr	r3, [pc, #1160]	; 19ed8 <traverse_product@@Base+0xe70>
   19a4c:	ldr	r1, [pc, #1160]	; 19edc <traverse_product@@Base+0xe74>
   19a50:	mvn	r0, #0
   19a54:	bl	12244 <coda_set_error@plt>
   19a58:	bl	1a55c <handle_coda_error@@Base>
   19a5c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19a60:	add	r3, r3, #1
   19a64:	mov	r2, r3
   19a68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a6c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19a70:	bl	123e8 <coda_cursor_read_string@plt>
   19a74:	mov	r3, r0
   19a78:	cmp	r3, #0
   19a7c:	beq	19a84 <traverse_product@@Base+0xa1c>
   19a80:	bl	1a55c <handle_coda_error@@Base>
   19a84:	ldr	r0, [pc, #1088]	; 19ecc <traverse_product@@Base+0xe64>
   19a88:	bl	19208 <traverse_product@@Base+0x1a0>
   19a8c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19a90:	mov	r1, r3
   19a94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19a98:	bl	192ac <traverse_product@@Base+0x244>
   19a9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19aa0:	mov	r1, r3
   19aa4:	ldr	r0, [pc, #1060]	; 19ed0 <traverse_product@@Base+0xe68>
   19aa8:	bl	19208 <traverse_product@@Base+0x1a0>
   19aac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19ab0:	bl	1228c <free@plt>
   19ab4:	b	19d04 <traverse_product@@Base+0xc9c>
   19ab8:	sub	r3, fp, #100	; 0x64
   19abc:	mov	r1, r3
   19ac0:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19ac4:	bl	125a4 <coda_cursor_get_bit_size@plt>
   19ac8:	mov	r3, r0
   19acc:	cmp	r3, #0
   19ad0:	beq	19ad8 <traverse_product@@Base+0xa70>
   19ad4:	bl	1a55c <handle_coda_error@@Base>
   19ad8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   19adc:	lsr	r4, r2, #3
   19ae0:	orr	r4, r4, r3, lsl #29
   19ae4:	asr	r5, r3, #3
   19ae8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   19aec:	mov	r0, #7
   19af0:	mov	r1, #0
   19af4:	and	r2, r2, r0
   19af8:	and	r3, r3, r1
   19afc:	orrs	r3, r2, r3
   19b00:	beq	19b10 <traverse_product@@Base+0xaa8>
   19b04:	mov	r2, #1
   19b08:	mov	r3, #0
   19b0c:	b	19b18 <traverse_product@@Base+0xab0>
   19b10:	mov	r2, #0
   19b14:	mov	r3, #0
   19b18:	adds	r2, r2, r4
   19b1c:	adc	r3, r3, r5
   19b20:	strd	r2, [fp, #-36]	; 0xffffffdc
   19b24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19b28:	mov	r0, r3
   19b2c:	bl	123c4 <malloc@plt>
   19b30:	mov	r3, r0
   19b34:	str	r3, [fp, #-40]	; 0xffffffd8
   19b38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19b3c:	cmp	r3, #0
   19b40:	bne	19b64 <traverse_product@@Base+0xafc>
   19b44:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19b48:	mov	r3, #392	; 0x188
   19b4c:	str	r3, [sp]
   19b50:	ldr	r3, [pc, #896]	; 19ed8 <traverse_product@@Base+0xe70>
   19b54:	ldr	r1, [pc, #896]	; 19edc <traverse_product@@Base+0xe74>
   19b58:	mvn	r0, #0
   19b5c:	bl	12244 <coda_set_error@plt>
   19b60:	bl	1a55c <handle_coda_error@@Base>
   19b64:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   19b68:	strd	r2, [sp]
   19b6c:	mov	r2, #0
   19b70:	mov	r3, #0
   19b74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19b78:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19b7c:	bl	12640 <coda_cursor_read_bits@plt>
   19b80:	mov	r3, r0
   19b84:	cmp	r3, #0
   19b88:	beq	19b90 <traverse_product@@Base+0xb28>
   19b8c:	bl	1a55c <handle_coda_error@@Base>
   19b90:	ldr	r0, [pc, #820]	; 19ecc <traverse_product@@Base+0xe64>
   19b94:	bl	19208 <traverse_product@@Base+0x1a0>
   19b98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19b9c:	mov	r1, r3
   19ba0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19ba4:	bl	192ac <traverse_product@@Base+0x244>
   19ba8:	ldr	r0, [pc, #800]	; 19ed0 <traverse_product@@Base+0xe68>
   19bac:	bl	19208 <traverse_product@@Base+0x1a0>
   19bb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19bb4:	bl	1228c <free@plt>
   19bb8:	b	19d04 <traverse_product@@Base+0xc9c>
   19bbc:	sub	r3, fp, #104	; 0x68
   19bc0:	mov	r1, r3
   19bc4:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19bc8:	bl	125e0 <coda_cursor_read_int32@plt>
   19bcc:	mov	r3, r0
   19bd0:	cmp	r3, #0
   19bd4:	beq	19bdc <traverse_product@@Base+0xb74>
   19bd8:	bl	1a55c <handle_coda_error@@Base>
   19bdc:	ldr	r3, [fp, #-104]	; 0xffffff98
   19be0:	mov	r1, r3
   19be4:	ldr	r0, [pc, #756]	; 19ee0 <traverse_product@@Base+0xe78>
   19be8:	bl	19208 <traverse_product@@Base+0x1a0>
   19bec:	b	19d04 <traverse_product@@Base+0xc9c>
   19bf0:	sub	r3, fp, #108	; 0x6c
   19bf4:	mov	r1, r3
   19bf8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19bfc:	bl	122b0 <coda_cursor_read_uint32@plt>
   19c00:	mov	r3, r0
   19c04:	cmp	r3, #0
   19c08:	beq	19c10 <traverse_product@@Base+0xba8>
   19c0c:	bl	1a55c <handle_coda_error@@Base>
   19c10:	ldr	r3, [fp, #-108]	; 0xffffff94
   19c14:	mov	r1, r3
   19c18:	ldr	r0, [pc, #708]	; 19ee4 <traverse_product@@Base+0xe7c>
   19c1c:	bl	19208 <traverse_product@@Base+0x1a0>
   19c20:	b	19d04 <traverse_product@@Base+0xc9c>
   19c24:	sub	r3, fp, #116	; 0x74
   19c28:	mov	r1, r3
   19c2c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19c30:	bl	12544 <coda_cursor_read_int64@plt>
   19c34:	mov	r3, r0
   19c38:	cmp	r3, #0
   19c3c:	beq	19c44 <traverse_product@@Base+0xbdc>
   19c40:	bl	1a55c <handle_coda_error@@Base>
   19c44:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   19c48:	sub	r3, fp, #140	; 0x8c
   19c4c:	mov	r2, r3
   19c50:	bl	1264c <coda_str64@plt>
   19c54:	sub	r3, fp, #140	; 0x8c
   19c58:	mov	r1, r3
   19c5c:	ldr	r0, [pc, #644]	; 19ee8 <traverse_product@@Base+0xe80>
   19c60:	bl	19208 <traverse_product@@Base+0x1a0>
   19c64:	b	19d04 <traverse_product@@Base+0xc9c>
   19c68:	sub	r3, fp, #148	; 0x94
   19c6c:	mov	r1, r3
   19c70:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19c74:	bl	12430 <coda_cursor_read_uint64@plt>
   19c78:	mov	r3, r0
   19c7c:	cmp	r3, #0
   19c80:	beq	19c88 <traverse_product@@Base+0xc20>
   19c84:	bl	1a55c <handle_coda_error@@Base>
   19c88:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   19c8c:	sub	r3, fp, #172	; 0xac
   19c90:	mov	r2, r3
   19c94:	bl	12280 <coda_str64u@plt>
   19c98:	sub	r3, fp, #172	; 0xac
   19c9c:	mov	r1, r3
   19ca0:	ldr	r0, [pc, #576]	; 19ee8 <traverse_product@@Base+0xe80>
   19ca4:	bl	19208 <traverse_product@@Base+0x1a0>
   19ca8:	b	19d04 <traverse_product@@Base+0xc9c>
   19cac:	sub	r3, fp, #180	; 0xb4
   19cb0:	mov	r1, r3
   19cb4:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19cb8:	bl	1243c <coda_cursor_read_double@plt>
   19cbc:	mov	r3, r0
   19cc0:	cmp	r3, #0
   19cc4:	beq	19ccc <traverse_product@@Base+0xc64>
   19cc8:	bl	1a55c <handle_coda_error@@Base>
   19ccc:	ldr	r3, [fp, #-84]	; 0xffffffac
   19cd0:	cmp	r3, #8
   19cd4:	bne	19ce8 <traverse_product@@Base+0xc80>
   19cd8:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   19cdc:	ldr	r0, [pc, #520]	; 19eec <traverse_product@@Base+0xe84>
   19ce0:	bl	19208 <traverse_product@@Base+0x1a0>
   19ce4:	b	19d04 <traverse_product@@Base+0xc9c>
   19ce8:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   19cec:	ldr	r0, [pc, #508]	; 19ef0 <traverse_product@@Base+0xe88>
   19cf0:	bl	19208 <traverse_product@@Base+0x1a0>
   19cf4:	b	19d04 <traverse_product@@Base+0xc9c>
   19cf8:	ldr	r0, [pc, #500]	; 19ef4 <traverse_product@@Base+0xe8c>
   19cfc:	bl	19208 <traverse_product@@Base+0x1a0>
   19d00:	nop			; (mov r0, r0)
   19d04:	b	19e70 <traverse_product@@Base+0xe08>
   19d08:	sub	r3, fp, #184	; 0xb8
   19d0c:	mov	r1, r3
   19d10:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19d14:	bl	12358 <coda_cursor_get_special_type@plt>
   19d18:	mov	r3, r0
   19d1c:	cmp	r3, #0
   19d20:	beq	19d28 <traverse_product@@Base+0xcc0>
   19d24:	bl	1a55c <handle_coda_error@@Base>
   19d28:	ldr	r3, [fp, #-184]	; 0xffffff48
   19d2c:	cmp	r3, #3
   19d30:	ldrls	pc, [pc, r3, lsl #2]
   19d34:	b	19e78 <traverse_product@@Base+0xe10>
   19d38:	andeq	r9, r1, r8, asr #26
   19d3c:	andeq	r9, r1, r4, asr sp
   19d40:	andeq	r9, r1, r4, lsl #27
   19d44:	andeq	r9, r1, r8, lsr #28
   19d48:	ldr	r0, [pc, #420]	; 19ef4 <traverse_product@@Base+0xe8c>
   19d4c:	bl	19208 <traverse_product@@Base+0x1a0>
   19d50:	b	19e6c <traverse_product@@Base+0xe04>
   19d54:	sub	r3, fp, #196	; 0xc4
   19d58:	mov	r1, r3
   19d5c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19d60:	bl	1243c <coda_cursor_read_double@plt>
   19d64:	mov	r3, r0
   19d68:	cmp	r3, #0
   19d6c:	beq	19d74 <traverse_product@@Base+0xd0c>
   19d70:	bl	1a55c <handle_coda_error@@Base>
   19d74:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   19d78:	ldr	r0, [pc, #368]	; 19ef0 <traverse_product@@Base+0xe88>
   19d7c:	bl	19208 <traverse_product@@Base+0x1a0>
   19d80:	b	19e6c <traverse_product@@Base+0xe04>
   19d84:	sub	r3, fp, #204	; 0xcc
   19d88:	mov	r1, r3
   19d8c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19d90:	bl	1243c <coda_cursor_read_double@plt>
   19d94:	mov	r3, r0
   19d98:	cmp	r3, #0
   19d9c:	beq	19da4 <traverse_product@@Base+0xd3c>
   19da0:	bl	1a55c <handle_coda_error@@Base>
   19da4:	vldr	d7, [fp, #-204]	; 0xffffff34
   19da8:	vmov.f64	d0, d7
   19dac:	bl	12448 <coda_isNaN@plt>
   19db0:	mov	r3, r0
   19db4:	cmp	r3, #0
   19db8:	bne	19dd4 <traverse_product@@Base+0xd6c>
   19dbc:	vldr	d7, [fp, #-204]	; 0xffffff34
   19dc0:	vmov.f64	d0, d7
   19dc4:	bl	122ec <coda_isInf@plt>
   19dc8:	mov	r3, r0
   19dcc:	cmp	r3, #0
   19dd0:	beq	19de4 <traverse_product@@Base+0xd7c>
   19dd4:	ldrd	r2, [fp, #-204]	; 0xffffff34
   19dd8:	ldr	r0, [pc, #272]	; 19ef0 <traverse_product@@Base+0xe88>
   19ddc:	bl	19208 <traverse_product@@Base+0x1a0>
   19de0:	b	19e6c <traverse_product@@Base+0xe04>
   19de4:	vldr	d7, [fp, #-204]	; 0xffffff34
   19de8:	sub	r3, fp, #232	; 0xe8
   19dec:	mov	r1, r3
   19df0:	ldr	r0, [pc, #256]	; 19ef8 <traverse_product@@Base+0xe90>
   19df4:	vmov.f64	d0, d7
   19df8:	bl	12268 <coda_time_double_to_string@plt>
   19dfc:	mov	r3, r0
   19e00:	cmp	r3, #0
   19e04:	beq	19e14 <traverse_product@@Base+0xdac>
   19e08:	ldr	r0, [pc, #236]	; 19efc <traverse_product@@Base+0xe94>
   19e0c:	bl	19208 <traverse_product@@Base+0x1a0>
   19e10:	b	19e6c <traverse_product@@Base+0xe04>
   19e14:	sub	r3, fp, #232	; 0xe8
   19e18:	mov	r1, r3
   19e1c:	ldr	r0, [pc, #196]	; 19ee8 <traverse_product@@Base+0xe80>
   19e20:	bl	19208 <traverse_product@@Base+0x1a0>
   19e24:	b	19e6c <traverse_product@@Base+0xe04>
   19e28:	sub	r2, fp, #252	; 0xfc
   19e2c:	sub	r3, fp, #244	; 0xf4
   19e30:	mov	r1, r3
   19e34:	ldr	r0, [fp, #-288]	; 0xfffffee0
   19e38:	bl	124e4 <coda_cursor_read_complex_double_split@plt>
   19e3c:	mov	r3, r0
   19e40:	cmp	r3, #0
   19e44:	beq	19e4c <traverse_product@@Base+0xde4>
   19e48:	bl	1a55c <handle_coda_error@@Base>
   19e4c:	ldrd	r0, [fp, #-244]	; 0xffffff0c
   19e50:	ldrd	r2, [fp, #-252]	; 0xffffff04
   19e54:	strd	r2, [sp]
   19e58:	mov	r2, r0
   19e5c:	mov	r3, r1
   19e60:	ldr	r0, [pc, #152]	; 19f00 <traverse_product@@Base+0xe98>
   19e64:	bl	19208 <traverse_product@@Base+0x1a0>
   19e68:	nop			; (mov r0, r0)
   19e6c:	b	19e78 <traverse_product@@Base+0xe10>
   19e70:	nop			; (mov r0, r0)
   19e74:	b	19e7c <traverse_product@@Base+0xe14>
   19e78:	nop			; (mov r0, r0)
   19e7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19e80:	cmp	r3, #0
   19e84:	beq	19e9c <traverse_product@@Base+0xe34>
   19e88:	ldr	r3, [pc, #36]	; 19eb4 <traverse_product@@Base+0xe4c>
   19e8c:	ldr	r3, [r3]
   19e90:	sub	r3, r3, #1
   19e94:	ldr	r2, [pc, #24]	; 19eb4 <traverse_product@@Base+0xe4c>
   19e98:	str	r3, [r2]
   19e9c:	nop			; (mov r0, r0)
   19ea0:	sub	sp, fp, #12
   19ea4:	pop	{r4, r5, fp, pc}
   19ea8:	ldrdeq	pc, [r2], -r0
   19eac:	andeq	sp, r1, r0, lsr #8
   19eb0:	andeq	sp, r1, r4, lsr #8
   19eb4:	andeq	pc, r2, ip, asr #3
   19eb8:	andeq	sp, r1, ip, lsr #8
   19ebc:	andeq	sp, r1, r4, lsr r4
   19ec0:	andeq	sp, r1, ip, lsr r4
   19ec4:	andeq	sp, r1, r0, asr #8
   19ec8:	andeq	sp, r1, r4, asr #8
   19ecc:	andeq	sp, r1, r8, asr #8
   19ed0:	andeq	sp, r1, ip, asr #8
   19ed4:	andeq	r0, r0, r9, ror #2
   19ed8:	muleq	r1, r4, r3
   19edc:	andeq	sp, r1, r0, asr r4
   19ee0:	andeq	sp, r1, r8, lsl #9
   19ee4:	muleq	r1, r0, r4
   19ee8:	muleq	r1, r8, r4
   19eec:	muleq	r1, ip, r4
   19ef0:	andeq	sp, r1, r4, lsr #9
   19ef4:	andeq	sp, r1, ip, lsr #9
   19ef8:			; <UNDEFINED> instruction: 0x0001d4b4
   19efc:	ldrdeq	sp, [r1], -r4
   19f00:	strdeq	sp, [r1], -r0

00019f04 <print_yaml_data@@Base>:
   19f04:	push	{fp, lr}
   19f08:	add	fp, sp, #4
   19f0c:	sub	sp, sp, #536	; 0x218
   19f10:	str	r0, [fp, #-536]	; 0xfffffde8
   19f14:	ldr	r2, [pc, #268]	; 1a028 <print_yaml_data@@Base+0x124>
   19f18:	ldr	r3, [fp, #-536]	; 0xfffffde8
   19f1c:	str	r3, [r2]
   19f20:	ldr	r3, [pc, #260]	; 1a02c <print_yaml_data@@Base+0x128>
   19f24:	ldr	r3, [r3]
   19f28:	sub	r2, fp, #12
   19f2c:	mov	r1, r2
   19f30:	mov	r0, r3
   19f34:	bl	12250 <coda_open@plt>
   19f38:	str	r0, [fp, #-8]
   19f3c:	ldr	r3, [fp, #-8]
   19f40:	cmp	r3, #0
   19f44:	beq	19f88 <print_yaml_data@@Base+0x84>
   19f48:	bl	12604 <coda_get_errno@plt>
   19f4c:	mov	r3, r0
   19f50:	ldr	r3, [r3]
   19f54:	cmn	r3, #21
   19f58:	bne	19f88 <print_yaml_data@@Base+0x84>
   19f5c:	mov	r0, #0
   19f60:	bl	12298 <coda_set_option_use_mmap@plt>
   19f64:	ldr	r3, [pc, #192]	; 1a02c <print_yaml_data@@Base+0x128>
   19f68:	ldr	r3, [r3]
   19f6c:	sub	r2, fp, #12
   19f70:	mov	r1, r2
   19f74:	mov	r0, r3
   19f78:	bl	12250 <coda_open@plt>
   19f7c:	str	r0, [fp, #-8]
   19f80:	mov	r0, #1
   19f84:	bl	12298 <coda_set_option_use_mmap@plt>
   19f88:	ldr	r3, [fp, #-8]
   19f8c:	cmp	r3, #0
   19f90:	beq	19f98 <print_yaml_data@@Base+0x94>
   19f94:	bl	1a55c <handle_coda_error@@Base>
   19f98:	ldr	r2, [fp, #-12]
   19f9c:	sub	r3, fp, #532	; 0x214
   19fa0:	mov	r1, r2
   19fa4:	mov	r0, r3
   19fa8:	bl	1237c <coda_cursor_set_product@plt>
   19fac:	mov	r3, r0
   19fb0:	cmp	r3, #0
   19fb4:	beq	19fbc <print_yaml_data@@Base+0xb8>
   19fb8:	bl	1a55c <handle_coda_error@@Base>
   19fbc:	ldr	r3, [pc, #108]	; 1a030 <print_yaml_data@@Base+0x12c>
   19fc0:	ldr	r3, [r3]
   19fc4:	cmp	r3, #0
   19fc8:	beq	19ff8 <print_yaml_data@@Base+0xf4>
   19fcc:	ldr	r3, [pc, #92]	; 1a030 <print_yaml_data@@Base+0x12c>
   19fd0:	ldr	r2, [r3]
   19fd4:	sub	r3, fp, #532	; 0x214
   19fd8:	mov	r1, r2
   19fdc:	mov	r0, r3
   19fe0:	bl	1255c <coda_cursor_goto@plt>
   19fe4:	str	r0, [fp, #-8]
   19fe8:	ldr	r3, [fp, #-8]
   19fec:	cmp	r3, #0
   19ff0:	beq	19ff8 <print_yaml_data@@Base+0xf4>
   19ff4:	bl	1a55c <handle_coda_error@@Base>
   19ff8:	mov	r0, #0
   19ffc:	bl	121fc <coda_set_option_perform_boundary_checks@plt>
   1a000:	sub	r3, fp, #532	; 0x214
   1a004:	mov	r1, #0
   1a008:	mov	r0, r3
   1a00c:	bl	19408 <traverse_product@@Base+0x3a0>
   1a010:	ldr	r3, [fp, #-12]
   1a014:	mov	r0, r3
   1a018:	bl	12538 <coda_close@plt>
   1a01c:	nop			; (mov r0, r0)
   1a020:	sub	sp, fp, #4
   1a024:	pop	{fp, pc}
   1a028:	ldrdeq	pc, [r2], -r0
   1a02c:	strdeq	pc, [r2], -r0
   1a030:	strheq	r0, [r3], -r0	; <UNPREDICTABLE>
   1a034:	push	{fp, lr}
   1a038:	add	fp, sp, #4
   1a03c:	bl	125f8 <coda_get_libcoda_version@plt>
   1a040:	mov	r3, r0
   1a044:	mov	r1, r3
   1a048:	ldr	r0, [pc, #24]	; 1a068 <print_yaml_data@@Base+0x164>
   1a04c:	bl	12220 <printf@plt>
   1a050:	ldr	r0, [pc, #20]	; 1a06c <print_yaml_data@@Base+0x168>
   1a054:	bl	123ac <puts@plt>
   1a058:	mov	r0, #10
   1a05c:	bl	124b4 <putchar@plt>
   1a060:	nop			; (mov r0, r0)
   1a064:	pop	{fp, pc}
   1a068:	andeq	sp, r1, r4, lsl #10
   1a06c:	andeq	sp, r1, ip, lsl r5
   1a070:	push	{fp, lr}
   1a074:	add	fp, sp, #4
   1a078:	ldr	r0, [pc, #944]	; 1a430 <print_yaml_data@@Base+0x52c>
   1a07c:	bl	123ac <puts@plt>
   1a080:	ldr	r0, [pc, #940]	; 1a434 <print_yaml_data@@Base+0x530>
   1a084:	bl	123ac <puts@plt>
   1a088:	ldr	r0, [pc, #936]	; 1a438 <print_yaml_data@@Base+0x534>
   1a08c:	bl	123ac <puts@plt>
   1a090:	ldr	r0, [pc, #932]	; 1a43c <print_yaml_data@@Base+0x538>
   1a094:	bl	123ac <puts@plt>
   1a098:	ldr	r0, [pc, #928]	; 1a440 <print_yaml_data@@Base+0x53c>
   1a09c:	bl	123ac <puts@plt>
   1a0a0:	ldr	r0, [pc, #924]	; 1a444 <print_yaml_data@@Base+0x540>
   1a0a4:	bl	123ac <puts@plt>
   1a0a8:	ldr	r0, [pc, #920]	; 1a448 <print_yaml_data@@Base+0x544>
   1a0ac:	bl	123ac <puts@plt>
   1a0b0:	ldr	r0, [pc, #916]	; 1a44c <print_yaml_data@@Base+0x548>
   1a0b4:	bl	123ac <puts@plt>
   1a0b8:	ldr	r0, [pc, #912]	; 1a450 <print_yaml_data@@Base+0x54c>
   1a0bc:	bl	123ac <puts@plt>
   1a0c0:	ldr	r0, [pc, #908]	; 1a454 <print_yaml_data@@Base+0x550>
   1a0c4:	bl	123ac <puts@plt>
   1a0c8:	ldr	r0, [pc, #904]	; 1a458 <print_yaml_data@@Base+0x554>
   1a0cc:	bl	123ac <puts@plt>
   1a0d0:	ldr	r0, [pc, #900]	; 1a45c <print_yaml_data@@Base+0x558>
   1a0d4:	bl	123ac <puts@plt>
   1a0d8:	ldr	r0, [pc, #896]	; 1a460 <print_yaml_data@@Base+0x55c>
   1a0dc:	bl	123ac <puts@plt>
   1a0e0:	ldr	r0, [pc, #892]	; 1a464 <print_yaml_data@@Base+0x560>
   1a0e4:	bl	123ac <puts@plt>
   1a0e8:	ldr	r0, [pc, #888]	; 1a468 <print_yaml_data@@Base+0x564>
   1a0ec:	bl	123ac <puts@plt>
   1a0f0:	ldr	r0, [pc, #884]	; 1a46c <print_yaml_data@@Base+0x568>
   1a0f4:	bl	123ac <puts@plt>
   1a0f8:	ldr	r0, [pc, #880]	; 1a470 <print_yaml_data@@Base+0x56c>
   1a0fc:	bl	123ac <puts@plt>
   1a100:	ldr	r0, [pc, #876]	; 1a474 <print_yaml_data@@Base+0x570>
   1a104:	bl	123ac <puts@plt>
   1a108:	ldr	r0, [pc, #872]	; 1a478 <print_yaml_data@@Base+0x574>
   1a10c:	bl	123ac <puts@plt>
   1a110:	ldr	r0, [pc, #868]	; 1a47c <print_yaml_data@@Base+0x578>
   1a114:	bl	123ac <puts@plt>
   1a118:	ldr	r0, [pc, #864]	; 1a480 <print_yaml_data@@Base+0x57c>
   1a11c:	bl	123ac <puts@plt>
   1a120:	ldr	r0, [pc, #860]	; 1a484 <print_yaml_data@@Base+0x580>
   1a124:	bl	123ac <puts@plt>
   1a128:	ldr	r0, [pc, #856]	; 1a488 <print_yaml_data@@Base+0x584>
   1a12c:	bl	123ac <puts@plt>
   1a130:	mov	r0, #10
   1a134:	bl	124b4 <putchar@plt>
   1a138:	ldr	r0, [pc, #844]	; 1a48c <print_yaml_data@@Base+0x588>
   1a13c:	bl	123ac <puts@plt>
   1a140:	ldr	r0, [pc, #840]	; 1a490 <print_yaml_data@@Base+0x58c>
   1a144:	bl	123ac <puts@plt>
   1a148:	ldr	r0, [pc, #748]	; 1a43c <print_yaml_data@@Base+0x538>
   1a14c:	bl	123ac <puts@plt>
   1a150:	ldr	r0, [pc, #752]	; 1a448 <print_yaml_data@@Base+0x544>
   1a154:	bl	123ac <puts@plt>
   1a158:	ldr	r0, [pc, #748]	; 1a44c <print_yaml_data@@Base+0x548>
   1a15c:	bl	123ac <puts@plt>
   1a160:	ldr	r0, [pc, #744]	; 1a450 <print_yaml_data@@Base+0x54c>
   1a164:	bl	123ac <puts@plt>
   1a168:	ldr	r0, [pc, #740]	; 1a454 <print_yaml_data@@Base+0x550>
   1a16c:	bl	123ac <puts@plt>
   1a170:	ldr	r0, [pc, #796]	; 1a494 <print_yaml_data@@Base+0x590>
   1a174:	bl	123ac <puts@plt>
   1a178:	ldr	r0, [pc, #792]	; 1a498 <print_yaml_data@@Base+0x594>
   1a17c:	bl	123ac <puts@plt>
   1a180:	ldr	r0, [pc, #788]	; 1a49c <print_yaml_data@@Base+0x598>
   1a184:	bl	123ac <puts@plt>
   1a188:	ldr	r0, [pc, #784]	; 1a4a0 <print_yaml_data@@Base+0x59c>
   1a18c:	bl	123ac <puts@plt>
   1a190:	ldr	r0, [pc, #780]	; 1a4a4 <print_yaml_data@@Base+0x5a0>
   1a194:	bl	123ac <puts@plt>
   1a198:	ldr	r0, [pc, #776]	; 1a4a8 <print_yaml_data@@Base+0x5a4>
   1a19c:	bl	123ac <puts@plt>
   1a1a0:	ldr	r0, [pc, #772]	; 1a4ac <print_yaml_data@@Base+0x5a8>
   1a1a4:	bl	123ac <puts@plt>
   1a1a8:	ldr	r0, [pc, #768]	; 1a4b0 <print_yaml_data@@Base+0x5ac>
   1a1ac:	bl	123ac <puts@plt>
   1a1b0:	ldr	r0, [pc, #764]	; 1a4b4 <print_yaml_data@@Base+0x5b0>
   1a1b4:	bl	123ac <puts@plt>
   1a1b8:	ldr	r0, [pc, #760]	; 1a4b8 <print_yaml_data@@Base+0x5b4>
   1a1bc:	bl	123ac <puts@plt>
   1a1c0:	ldr	r0, [pc, #756]	; 1a4bc <print_yaml_data@@Base+0x5b8>
   1a1c4:	bl	123ac <puts@plt>
   1a1c8:	ldr	r0, [pc, #752]	; 1a4c0 <print_yaml_data@@Base+0x5bc>
   1a1cc:	bl	123ac <puts@plt>
   1a1d0:	ldr	r0, [pc, #676]	; 1a47c <print_yaml_data@@Base+0x578>
   1a1d4:	bl	123ac <puts@plt>
   1a1d8:	ldr	r0, [pc, #672]	; 1a480 <print_yaml_data@@Base+0x57c>
   1a1dc:	bl	123ac <puts@plt>
   1a1e0:	ldr	r0, [pc, #668]	; 1a484 <print_yaml_data@@Base+0x580>
   1a1e4:	bl	123ac <puts@plt>
   1a1e8:	ldr	r0, [pc, #664]	; 1a488 <print_yaml_data@@Base+0x584>
   1a1ec:	bl	123ac <puts@plt>
   1a1f0:	mov	r0, #10
   1a1f4:	bl	124b4 <putchar@plt>
   1a1f8:	ldr	r0, [pc, #708]	; 1a4c4 <print_yaml_data@@Base+0x5c0>
   1a1fc:	bl	123ac <puts@plt>
   1a200:	ldr	r0, [pc, #704]	; 1a4c8 <print_yaml_data@@Base+0x5c4>
   1a204:	bl	123ac <puts@plt>
   1a208:	ldr	r0, [pc, #700]	; 1a4cc <print_yaml_data@@Base+0x5c8>
   1a20c:	bl	123ac <puts@plt>
   1a210:	ldr	r0, [pc, #696]	; 1a4d0 <print_yaml_data@@Base+0x5cc>
   1a214:	bl	123ac <puts@plt>
   1a218:	ldr	r0, [pc, #692]	; 1a4d4 <print_yaml_data@@Base+0x5d0>
   1a21c:	bl	123ac <puts@plt>
   1a220:	ldr	r0, [pc, #688]	; 1a4d8 <print_yaml_data@@Base+0x5d4>
   1a224:	bl	123ac <puts@plt>
   1a228:	ldr	r0, [pc, #536]	; 1a448 <print_yaml_data@@Base+0x544>
   1a22c:	bl	123ac <puts@plt>
   1a230:	ldr	r0, [pc, #532]	; 1a44c <print_yaml_data@@Base+0x548>
   1a234:	bl	123ac <puts@plt>
   1a238:	ldr	r0, [pc, #612]	; 1a4a4 <print_yaml_data@@Base+0x5a0>
   1a23c:	bl	123ac <puts@plt>
   1a240:	ldr	r0, [pc, #608]	; 1a4a8 <print_yaml_data@@Base+0x5a4>
   1a244:	bl	123ac <puts@plt>
   1a248:	ldr	r0, [pc, #652]	; 1a4dc <print_yaml_data@@Base+0x5d8>
   1a24c:	bl	123ac <puts@plt>
   1a250:	ldr	r0, [pc, #648]	; 1a4e0 <print_yaml_data@@Base+0x5dc>
   1a254:	bl	123ac <puts@plt>
   1a258:	ldr	r0, [pc, #644]	; 1a4e4 <print_yaml_data@@Base+0x5e0>
   1a25c:	bl	123ac <puts@plt>
   1a260:	ldr	r0, [pc, #532]	; 1a47c <print_yaml_data@@Base+0x578>
   1a264:	bl	123ac <puts@plt>
   1a268:	ldr	r0, [pc, #528]	; 1a480 <print_yaml_data@@Base+0x57c>
   1a26c:	bl	123ac <puts@plt>
   1a270:	ldr	r0, [pc, #524]	; 1a484 <print_yaml_data@@Base+0x580>
   1a274:	bl	123ac <puts@plt>
   1a278:	ldr	r0, [pc, #520]	; 1a488 <print_yaml_data@@Base+0x584>
   1a27c:	bl	123ac <puts@plt>
   1a280:	mov	r0, #10
   1a284:	bl	124b4 <putchar@plt>
   1a288:	ldr	r0, [pc, #600]	; 1a4e8 <print_yaml_data@@Base+0x5e4>
   1a28c:	bl	123ac <puts@plt>
   1a290:	ldr	r0, [pc, #596]	; 1a4ec <print_yaml_data@@Base+0x5e8>
   1a294:	bl	123ac <puts@plt>
   1a298:	ldr	r0, [pc, #592]	; 1a4f0 <print_yaml_data@@Base+0x5ec>
   1a29c:	bl	123ac <puts@plt>
   1a2a0:	ldr	r0, [pc, #552]	; 1a4d0 <print_yaml_data@@Base+0x5cc>
   1a2a4:	bl	123ac <puts@plt>
   1a2a8:	ldr	r0, [pc, #548]	; 1a4d4 <print_yaml_data@@Base+0x5d0>
   1a2ac:	bl	123ac <puts@plt>
   1a2b0:	ldr	r0, [pc, #572]	; 1a4f4 <print_yaml_data@@Base+0x5f0>
   1a2b4:	bl	123ac <puts@plt>
   1a2b8:	ldr	r0, [pc, #568]	; 1a4f8 <print_yaml_data@@Base+0x5f4>
   1a2bc:	bl	123ac <puts@plt>
   1a2c0:	ldr	r0, [pc, #384]	; 1a448 <print_yaml_data@@Base+0x544>
   1a2c4:	bl	123ac <puts@plt>
   1a2c8:	ldr	r0, [pc, #380]	; 1a44c <print_yaml_data@@Base+0x548>
   1a2cc:	bl	123ac <puts@plt>
   1a2d0:	ldr	r0, [pc, #460]	; 1a4a4 <print_yaml_data@@Base+0x5a0>
   1a2d4:	bl	123ac <puts@plt>
   1a2d8:	ldr	r0, [pc, #456]	; 1a4a8 <print_yaml_data@@Base+0x5a4>
   1a2dc:	bl	123ac <puts@plt>
   1a2e0:	ldr	r0, [pc, #500]	; 1a4dc <print_yaml_data@@Base+0x5d8>
   1a2e4:	bl	123ac <puts@plt>
   1a2e8:	ldr	r0, [pc, #496]	; 1a4e0 <print_yaml_data@@Base+0x5dc>
   1a2ec:	bl	123ac <puts@plt>
   1a2f0:	ldr	r0, [pc, #492]	; 1a4e4 <print_yaml_data@@Base+0x5e0>
   1a2f4:	bl	123ac <puts@plt>
   1a2f8:	ldr	r0, [pc, #380]	; 1a47c <print_yaml_data@@Base+0x578>
   1a2fc:	bl	123ac <puts@plt>
   1a300:	ldr	r0, [pc, #376]	; 1a480 <print_yaml_data@@Base+0x57c>
   1a304:	bl	123ac <puts@plt>
   1a308:	ldr	r0, [pc, #372]	; 1a484 <print_yaml_data@@Base+0x580>
   1a30c:	bl	123ac <puts@plt>
   1a310:	ldr	r0, [pc, #368]	; 1a488 <print_yaml_data@@Base+0x584>
   1a314:	bl	123ac <puts@plt>
   1a318:	mov	r0, #10
   1a31c:	bl	124b4 <putchar@plt>
   1a320:	ldr	r0, [pc, #468]	; 1a4fc <print_yaml_data@@Base+0x5f8>
   1a324:	bl	123ac <puts@plt>
   1a328:	ldr	r0, [pc, #464]	; 1a500 <print_yaml_data@@Base+0x5fc>
   1a32c:	bl	123ac <puts@plt>
   1a330:	ldr	r0, [pc, #460]	; 1a504 <print_yaml_data@@Base+0x600>
   1a334:	bl	123ac <puts@plt>
   1a338:	ldr	r0, [pc, #456]	; 1a508 <print_yaml_data@@Base+0x604>
   1a33c:	bl	123ac <puts@plt>
   1a340:	ldr	r0, [pc, #452]	; 1a50c <print_yaml_data@@Base+0x608>
   1a344:	bl	123ac <puts@plt>
   1a348:	ldr	r0, [pc, #448]	; 1a510 <print_yaml_data@@Base+0x60c>
   1a34c:	bl	123ac <puts@plt>
   1a350:	ldr	r0, [pc, #444]	; 1a514 <print_yaml_data@@Base+0x610>
   1a354:	bl	123ac <puts@plt>
   1a358:	ldr	r0, [pc, #324]	; 1a4a4 <print_yaml_data@@Base+0x5a0>
   1a35c:	bl	123ac <puts@plt>
   1a360:	ldr	r0, [pc, #320]	; 1a4a8 <print_yaml_data@@Base+0x5a4>
   1a364:	bl	123ac <puts@plt>
   1a368:	ldr	r0, [pc, #364]	; 1a4dc <print_yaml_data@@Base+0x5d8>
   1a36c:	bl	123ac <puts@plt>
   1a370:	ldr	r0, [pc, #360]	; 1a4e0 <print_yaml_data@@Base+0x5dc>
   1a374:	bl	123ac <puts@plt>
   1a378:	ldr	r0, [pc, #356]	; 1a4e4 <print_yaml_data@@Base+0x5e0>
   1a37c:	bl	123ac <puts@plt>
   1a380:	ldr	r0, [pc, #400]	; 1a518 <print_yaml_data@@Base+0x614>
   1a384:	bl	123ac <puts@plt>
   1a388:	ldr	r0, [pc, #396]	; 1a51c <print_yaml_data@@Base+0x618>
   1a38c:	bl	123ac <puts@plt>
   1a390:	ldr	r0, [pc, #392]	; 1a520 <print_yaml_data@@Base+0x61c>
   1a394:	bl	123ac <puts@plt>
   1a398:	ldr	r0, [pc, #388]	; 1a524 <print_yaml_data@@Base+0x620>
   1a39c:	bl	123ac <puts@plt>
   1a3a0:	ldr	r0, [pc, #384]	; 1a528 <print_yaml_data@@Base+0x624>
   1a3a4:	bl	123ac <puts@plt>
   1a3a8:	ldr	r0, [pc, #380]	; 1a52c <print_yaml_data@@Base+0x628>
   1a3ac:	bl	123ac <puts@plt>
   1a3b0:	mov	r0, #10
   1a3b4:	bl	124b4 <putchar@plt>
   1a3b8:	ldr	r0, [pc, #368]	; 1a530 <print_yaml_data@@Base+0x62c>
   1a3bc:	bl	123ac <puts@plt>
   1a3c0:	ldr	r0, [pc, #364]	; 1a534 <print_yaml_data@@Base+0x630>
   1a3c4:	bl	123ac <puts@plt>
   1a3c8:	mov	r0, #10
   1a3cc:	bl	124b4 <putchar@plt>
   1a3d0:	ldr	r0, [pc, #352]	; 1a538 <print_yaml_data@@Base+0x634>
   1a3d4:	bl	123ac <puts@plt>
   1a3d8:	ldr	r0, [pc, #348]	; 1a53c <print_yaml_data@@Base+0x638>
   1a3dc:	bl	123ac <puts@plt>
   1a3e0:	mov	r0, #10
   1a3e4:	bl	124b4 <putchar@plt>
   1a3e8:	ldr	r0, [pc, #336]	; 1a540 <print_yaml_data@@Base+0x63c>
   1a3ec:	bl	123ac <puts@plt>
   1a3f0:	ldr	r0, [pc, #332]	; 1a544 <print_yaml_data@@Base+0x640>
   1a3f4:	bl	123ac <puts@plt>
   1a3f8:	ldr	r0, [pc, #328]	; 1a548 <print_yaml_data@@Base+0x644>
   1a3fc:	bl	123ac <puts@plt>
   1a400:	ldr	r0, [pc, #324]	; 1a54c <print_yaml_data@@Base+0x648>
   1a404:	bl	123ac <puts@plt>
   1a408:	ldr	r0, [pc, #320]	; 1a550 <print_yaml_data@@Base+0x64c>
   1a40c:	bl	123ac <puts@plt>
   1a410:	ldr	r0, [pc, #316]	; 1a554 <print_yaml_data@@Base+0x650>
   1a414:	bl	123ac <puts@plt>
   1a418:	ldr	r0, [pc, #312]	; 1a558 <print_yaml_data@@Base+0x654>
   1a41c:	bl	123ac <puts@plt>
   1a420:	mov	r0, #10
   1a424:	bl	124b4 <putchar@plt>
   1a428:	nop			; (mov r0, r0)
   1a42c:	pop	{fp, pc}
   1a430:	andeq	sp, r1, ip, asr #10
   1a434:	andeq	sp, r1, r4, asr r5
   1a438:	muleq	r1, ip, r5
   1a43c:	andeq	sp, r1, r8, asr #11
   1a440:	andeq	sp, r1, r0, ror #11
   1a444:	strdeq	sp, [r1], -ip
   1a448:	andeq	sp, r1, r4, lsr r6
   1a44c:	andeq	sp, r1, ip, asr r6
   1a450:	muleq	r1, r8, r6
   1a454:	andeq	sp, r1, r8, asr #13
   1a458:	andeq	sp, r1, r0, lsl r7
   1a45c:	andeq	sp, r1, r8, lsr #14
   1a460:	andeq	sp, r1, r4, asr r7
   1a464:	andeq	sp, r1, ip, ror #14
   1a468:	muleq	r1, r8, r7
   1a46c:			; <UNDEFINED> instruction: 0x0001d7b4
   1a470:	andeq	sp, r1, r8, ror #15
   1a474:	andeq	sp, r1, r4, lsl #16
   1a478:	andeq	sp, r1, ip, asr #16
   1a47c:	andeq	sp, r1, r8, ror r8
   1a480:	muleq	r1, r8, r8
   1a484:	andeq	sp, r1, r8, ror #17
   1a488:	andeq	sp, r1, r8, lsr r9
   1a48c:	andeq	sp, r1, r8, asr r9
   1a490:	andeq	sp, r1, r0, lsr #19
   1a494:	ldrdeq	sp, [r1], -ip
   1a498:	strdeq	sp, [r1], -r4
   1a49c:	andeq	sp, r1, r8, lsr sl
   1a4a0:	andeq	sp, r1, r0, asr sl
   1a4a4:	muleq	r1, ip, sl
   1a4a8:	andeq	sp, r1, r0, asr #21
   1a4ac:	strdeq	sp, [r1], -r4
   1a4b0:	andeq	sp, r1, r4, lsl fp
   1a4b4:	andeq	sp, r1, r0, ror #22
   1a4b8:	muleq	r1, r8, fp
   1a4bc:	andeq	sp, r1, r4, ror #23
   1a4c0:	andeq	sp, r1, r8, lsl #24
   1a4c4:	andeq	sp, r1, r8, asr ip
   1a4c8:	andeq	sp, r1, r0, lsr #25
   1a4cc:	ldrdeq	sp, [r1], -ip
   1a4d0:	strdeq	sp, [r1], -r4
   1a4d4:	andeq	sp, r1, r4, lsl sp
   1a4d8:	andeq	sp, r1, ip, asr sp
   1a4dc:	andeq	sp, r1, r8, lsr #27
   1a4e0:	andeq	sp, r1, r8, asr #27
   1a4e4:	andeq	sp, r1, r0, lsl lr
   1a4e8:	andeq	sp, r1, r0, ror #28
   1a4ec:	andeq	sp, r1, r8, lsr #29
   1a4f0:	andeq	sp, r1, r4, ror #29
   1a4f4:	strdeq	sp, [r1], -ip
   1a4f8:	andeq	sp, r1, r8, asr #30
   1a4fc:	andeq	sp, r1, r8, ror #30
   1a500:			; <UNDEFINED> instruction: 0x0001dfb0
   1a504:	strdeq	sp, [r1], -ip
   1a508:	andeq	lr, r1, r8, asr #32
   1a50c:	andeq	lr, r1, r8, ror r0
   1a510:	muleq	r1, r0, r0
   1a514:	andeq	lr, r1, r0, asr #1
   1a518:	strdeq	lr, [r1], -r8
   1a51c:	andeq	lr, r1, r8, lsl r1
   1a520:	andeq	lr, r1, r8, ror #2
   1a524:			; <UNDEFINED> instruction: 0x0001e1b4
   1a528:	strdeq	lr, [r1], -r4
   1a52c:	andeq	lr, r1, r4, asr #4
   1a530:	andeq	lr, r1, ip, ror r2
   1a534:	muleq	r1, r4, r2
   1a538:			; <UNDEFINED> instruction: 0x0001e2b4
   1a53c:	ldrdeq	lr, [r1], -r0
   1a540:	andeq	lr, r1, r4, lsl #6
   1a544:	andeq	lr, r1, r4, asr r3
   1a548:	andeq	lr, r1, r0, lsr #7
   1a54c:	andeq	lr, r1, ip, asr #7
   1a550:	andeq	lr, r1, r8, lsl r4
   1a554:	andeq	lr, r1, r0, ror #8
   1a558:	andeq	lr, r1, r0, lsr #9

0001a55c <handle_coda_error@@Base>:
   1a55c:	push	{r4, r5, fp, lr}
   1a560:	add	fp, sp, #12
   1a564:	ldr	r3, [pc, #64]	; 1a5ac <handle_coda_error@@Base+0x50>
   1a568:	ldr	r4, [r3]
   1a56c:	bl	12604 <coda_get_errno@plt>
   1a570:	mov	r3, r0
   1a574:	ldr	r3, [r3]
   1a578:	mov	r0, r3
   1a57c:	bl	125bc <coda_errno_to_string@plt>
   1a580:	mov	r3, r0
   1a584:	mov	r2, r3
   1a588:	ldr	r1, [pc, #32]	; 1a5b0 <handle_coda_error@@Base+0x54>
   1a58c:	mov	r0, r4
   1a590:	bl	12454 <fprintf@plt>
   1a594:	ldr	r3, [pc, #16]	; 1a5ac <handle_coda_error@@Base+0x50>
   1a598:	ldr	r3, [r3]
   1a59c:	mov	r0, r3
   1a5a0:	bl	1225c <fflush@plt>
   1a5a4:	mov	r0, #1
   1a5a8:	bl	1240c <exit@plt>
   1a5ac:			; <UNDEFINED> instruction: 0x0002f1b8
   1a5b0:	andeq	lr, r1, r0, ror #9
   1a5b4:	push	{r4, fp, lr}
   1a5b8:	add	fp, sp, #8
   1a5bc:	sub	sp, sp, #28
   1a5c0:	str	r0, [fp, #-32]	; 0xffffffe0
   1a5c4:	str	r1, [fp, #-36]	; 0xffffffdc
   1a5c8:	ldr	r3, [pc, #1344]	; 1ab10 <handle_coda_error@@Base+0x5b4>
   1a5cc:	mov	r2, #0
   1a5d0:	str	r2, [r3]
   1a5d4:	ldr	r3, [pc, #1332]	; 1ab10 <handle_coda_error@@Base+0x5b4>
   1a5d8:	mov	r2, #0
   1a5dc:	str	r2, [r3, #664]	; 0x298
   1a5e0:	ldr	r3, [pc, #1324]	; 1ab14 <handle_coda_error@@Base+0x5b8>
   1a5e4:	mov	r2, #1
   1a5e8:	str	r2, [r3]
   1a5ec:	ldr	r3, [pc, #1316]	; 1ab18 <handle_coda_error@@Base+0x5bc>
   1a5f0:	mov	r2, #0
   1a5f4:	str	r2, [r3]
   1a5f8:	mov	r3, #1
   1a5fc:	str	r3, [fp, #-16]
   1a600:	mov	r3, #1
   1a604:	str	r3, [fp, #-20]	; 0xffffffec
   1a608:	ldr	r3, [pc, #1292]	; 1ab1c <handle_coda_error@@Base+0x5c0>
   1a60c:	mov	r2, #0
   1a610:	str	r2, [r3]
   1a614:	ldr	r3, [pc, #1284]	; 1ab20 <handle_coda_error@@Base+0x5c4>
   1a618:	mov	r2, #0
   1a61c:	str	r2, [r3]
   1a620:	ldr	r3, [pc, #1276]	; 1ab24 <handle_coda_error@@Base+0x5c8>
   1a624:	mov	r2, #0
   1a628:	str	r2, [r3]
   1a62c:	ldr	r3, [pc, #1268]	; 1ab28 <handle_coda_error@@Base+0x5cc>
   1a630:	mov	r2, #0
   1a634:	str	r2, [r3]
   1a638:	mov	r3, #0
   1a63c:	str	r3, [fp, #-24]	; 0xffffffe8
   1a640:	b	1aa20 <handle_coda_error@@Base+0x4c4>
   1a644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a648:	lsl	r3, r3, #2
   1a64c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a650:	add	r3, r2, r3
   1a654:	ldr	r3, [r3]
   1a658:	ldr	r1, [pc, #1228]	; 1ab2c <handle_coda_error@@Base+0x5d0>
   1a65c:	mov	r0, r3
   1a660:	bl	12208 <strcmp@plt>
   1a664:	mov	r3, r0
   1a668:	cmp	r3, #0
   1a66c:	beq	1a69c <handle_coda_error@@Base+0x140>
   1a670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a674:	lsl	r3, r3, #2
   1a678:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a67c:	add	r3, r2, r3
   1a680:	ldr	r3, [r3]
   1a684:	ldr	r1, [pc, #1188]	; 1ab30 <handle_coda_error@@Base+0x5d4>
   1a688:	mov	r0, r3
   1a68c:	bl	12208 <strcmp@plt>
   1a690:	mov	r3, r0
   1a694:	cmp	r3, #0
   1a698:	bne	1a6ac <handle_coda_error@@Base+0x150>
   1a69c:	ldr	r3, [pc, #1140]	; 1ab18 <handle_coda_error@@Base+0x5bc>
   1a6a0:	mov	r2, #1
   1a6a4:	str	r2, [r3]
   1a6a8:	b	1aa14 <handle_coda_error@@Base+0x4b8>
   1a6ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a6b0:	lsl	r3, r3, #2
   1a6b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a6b8:	add	r3, r2, r3
   1a6bc:	ldr	r3, [r3]
   1a6c0:	ldr	r1, [pc, #1132]	; 1ab34 <handle_coda_error@@Base+0x5d8>
   1a6c4:	mov	r0, r3
   1a6c8:	bl	12208 <strcmp@plt>
   1a6cc:	mov	r3, r0
   1a6d0:	cmp	r3, #0
   1a6d4:	beq	1a704 <handle_coda_error@@Base+0x1a8>
   1a6d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a6dc:	lsl	r3, r3, #2
   1a6e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a6e4:	add	r3, r2, r3
   1a6e8:	ldr	r3, [r3]
   1a6ec:	ldr	r1, [pc, #1092]	; 1ab38 <handle_coda_error@@Base+0x5dc>
   1a6f0:	mov	r0, r3
   1a6f4:	bl	12208 <strcmp@plt>
   1a6f8:	mov	r3, r0
   1a6fc:	cmp	r3, #0
   1a700:	bne	1a710 <handle_coda_error@@Base+0x1b4>
   1a704:	mov	r3, #0
   1a708:	str	r3, [fp, #-20]	; 0xffffffec
   1a70c:	b	1aa14 <handle_coda_error@@Base+0x4b8>
   1a710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a714:	lsl	r3, r3, #2
   1a718:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a71c:	add	r3, r2, r3
   1a720:	ldr	r3, [r3]
   1a724:	ldr	r1, [pc, #1040]	; 1ab3c <handle_coda_error@@Base+0x5e0>
   1a728:	mov	r0, r3
   1a72c:	bl	12208 <strcmp@plt>
   1a730:	mov	r3, r0
   1a734:	cmp	r3, #0
   1a738:	beq	1a768 <handle_coda_error@@Base+0x20c>
   1a73c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a740:	lsl	r3, r3, #2
   1a744:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a748:	add	r3, r2, r3
   1a74c:	ldr	r3, [r3]
   1a750:	ldr	r1, [pc, #1000]	; 1ab40 <handle_coda_error@@Base+0x5e4>
   1a754:	mov	r0, r3
   1a758:	bl	12208 <strcmp@plt>
   1a75c:	mov	r3, r0
   1a760:	cmp	r3, #0
   1a764:	bne	1a810 <handle_coda_error@@Base+0x2b4>
   1a768:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a76c:	add	r2, r3, #1
   1a770:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a774:	cmp	r2, r3
   1a778:	bge	1a810 <handle_coda_error@@Base+0x2b4>
   1a77c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a780:	add	r3, r3, #1
   1a784:	lsl	r3, r3, #2
   1a788:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a78c:	add	r3, r2, r3
   1a790:	ldr	r3, [r3]
   1a794:	ldrb	r3, [r3]
   1a798:	cmp	r3, #45	; 0x2d
   1a79c:	beq	1a810 <handle_coda_error@@Base+0x2b4>
   1a7a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a7a4:	add	r3, r3, #1
   1a7a8:	lsl	r3, r3, #2
   1a7ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a7b0:	add	r3, r2, r3
   1a7b4:	ldr	r3, [r3]
   1a7b8:	mov	r0, r3
   1a7bc:	bl	17124 <codadump_filter_create@@Base>
   1a7c0:	mov	r2, r0
   1a7c4:	ldr	r3, [pc, #836]	; 1ab10 <handle_coda_error@@Base+0x5b4>
   1a7c8:	str	r2, [r3, #664]	; 0x298
   1a7cc:	ldr	r3, [pc, #828]	; 1ab10 <handle_coda_error@@Base+0x5b4>
   1a7d0:	ldr	r3, [r3, #664]	; 0x298
   1a7d4:	cmp	r3, #0
   1a7d8:	bne	1a800 <handle_coda_error@@Base+0x2a4>
   1a7dc:	ldr	r3, [pc, #864]	; 1ab44 <handle_coda_error@@Base+0x5e8>
   1a7e0:	ldr	r3, [r3]
   1a7e4:	mov	r2, #40	; 0x28
   1a7e8:	mov	r1, #1
   1a7ec:	ldr	r0, [pc, #852]	; 1ab48 <handle_coda_error@@Base+0x5ec>
   1a7f0:	bl	12370 <fwrite@plt>
   1a7f4:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1a7f8:	mov	r0, #1
   1a7fc:	bl	1240c <exit@plt>
   1a800:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a804:	add	r3, r3, #1
   1a808:	str	r3, [fp, #-24]	; 0xffffffe8
   1a80c:	b	1aa14 <handle_coda_error@@Base+0x4b8>
   1a810:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a814:	lsl	r3, r3, #2
   1a818:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a81c:	add	r3, r2, r3
   1a820:	ldr	r3, [r3]
   1a824:	ldr	r1, [pc, #800]	; 1ab4c <handle_coda_error@@Base+0x5f0>
   1a828:	mov	r0, r3
   1a82c:	bl	12208 <strcmp@plt>
   1a830:	mov	r3, r0
   1a834:	cmp	r3, #0
   1a838:	beq	1a868 <handle_coda_error@@Base+0x30c>
   1a83c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a840:	lsl	r3, r3, #2
   1a844:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a848:	add	r3, r2, r3
   1a84c:	ldr	r3, [r3]
   1a850:	ldr	r1, [pc, #760]	; 1ab50 <handle_coda_error@@Base+0x5f4>
   1a854:	mov	r0, r3
   1a858:	bl	12208 <strcmp@plt>
   1a85c:	mov	r3, r0
   1a860:	cmp	r3, #0
   1a864:	bne	1a878 <handle_coda_error@@Base+0x31c>
   1a868:	ldr	r3, [pc, #688]	; 1ab20 <handle_coda_error@@Base+0x5c4>
   1a86c:	mov	r2, #1
   1a870:	str	r2, [r3]
   1a874:	b	1aa14 <handle_coda_error@@Base+0x4b8>
   1a878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a87c:	lsl	r3, r3, #2
   1a880:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a884:	add	r3, r2, r3
   1a888:	ldr	r3, [r3]
   1a88c:	ldr	r1, [pc, #704]	; 1ab54 <handle_coda_error@@Base+0x5f8>
   1a890:	mov	r0, r3
   1a894:	bl	12208 <strcmp@plt>
   1a898:	mov	r3, r0
   1a89c:	cmp	r3, #0
   1a8a0:	beq	1a8d0 <handle_coda_error@@Base+0x374>
   1a8a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a8a8:	lsl	r3, r3, #2
   1a8ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a8b0:	add	r3, r2, r3
   1a8b4:	ldr	r3, [r3]
   1a8b8:	ldr	r1, [pc, #664]	; 1ab58 <handle_coda_error@@Base+0x5fc>
   1a8bc:	mov	r0, r3
   1a8c0:	bl	12208 <strcmp@plt>
   1a8c4:	mov	r3, r0
   1a8c8:	cmp	r3, #0
   1a8cc:	bne	1a8e0 <handle_coda_error@@Base+0x384>
   1a8d0:	ldr	r3, [pc, #588]	; 1ab24 <handle_coda_error@@Base+0x5c8>
   1a8d4:	mov	r2, #1
   1a8d8:	str	r2, [r3]
   1a8dc:	b	1aa14 <handle_coda_error@@Base+0x4b8>
   1a8e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a8e4:	lsl	r3, r3, #2
   1a8e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a8ec:	add	r3, r2, r3
   1a8f0:	ldr	r3, [r3]
   1a8f4:	ldr	r1, [pc, #608]	; 1ab5c <handle_coda_error@@Base+0x600>
   1a8f8:	mov	r0, r3
   1a8fc:	bl	12208 <strcmp@plt>
   1a900:	mov	r3, r0
   1a904:	cmp	r3, #0
   1a908:	bne	1a91c <handle_coda_error@@Base+0x3c0>
   1a90c:	ldr	r3, [pc, #532]	; 1ab28 <handle_coda_error@@Base+0x5cc>
   1a910:	mov	r2, #1
   1a914:	str	r2, [r3]
   1a918:	b	1aa14 <handle_coda_error@@Base+0x4b8>
   1a91c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a920:	lsl	r3, r3, #2
   1a924:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a928:	add	r3, r2, r3
   1a92c:	ldr	r3, [r3]
   1a930:	ldr	r1, [pc, #552]	; 1ab60 <handle_coda_error@@Base+0x604>
   1a934:	mov	r0, r3
   1a938:	bl	12208 <strcmp@plt>
   1a93c:	mov	r3, r0
   1a940:	cmp	r3, #0
   1a944:	bne	1a964 <handle_coda_error@@Base+0x408>
   1a948:	ldr	r3, [pc, #456]	; 1ab18 <handle_coda_error@@Base+0x5bc>
   1a94c:	mov	r2, #1
   1a950:	str	r2, [r3]
   1a954:	ldr	r3, [pc, #448]	; 1ab1c <handle_coda_error@@Base+0x5c0>
   1a958:	mov	r2, #1
   1a95c:	str	r2, [r3]
   1a960:	b	1aa14 <handle_coda_error@@Base+0x4b8>
   1a964:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a968:	lsl	r3, r3, #2
   1a96c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a970:	add	r3, r2, r3
   1a974:	ldr	r3, [r3]
   1a978:	ldr	r1, [pc, #484]	; 1ab64 <handle_coda_error@@Base+0x608>
   1a97c:	mov	r0, r3
   1a980:	bl	12208 <strcmp@plt>
   1a984:	mov	r3, r0
   1a988:	cmp	r3, #0
   1a98c:	bne	1a99c <handle_coda_error@@Base+0x440>
   1a990:	mov	r3, #0
   1a994:	str	r3, [fp, #-16]
   1a998:	b	1aa14 <handle_coda_error@@Base+0x4b8>
   1a99c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a9a0:	sub	r2, r3, #1
   1a9a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a9a8:	cmp	r2, r3
   1a9ac:	bne	1a9f0 <handle_coda_error@@Base+0x494>
   1a9b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a9b4:	lsl	r3, r3, #2
   1a9b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a9bc:	add	r3, r2, r3
   1a9c0:	ldr	r3, [r3]
   1a9c4:	ldrb	r3, [r3]
   1a9c8:	cmp	r3, #45	; 0x2d
   1a9cc:	beq	1a9f0 <handle_coda_error@@Base+0x494>
   1a9d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a9d4:	lsl	r3, r3, #2
   1a9d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a9dc:	add	r3, r2, r3
   1a9e0:	ldr	r3, [r3]
   1a9e4:	ldr	r2, [pc, #292]	; 1ab10 <handle_coda_error@@Base+0x5b4>
   1a9e8:	str	r3, [r2]
   1a9ec:	b	1aa14 <handle_coda_error@@Base+0x4b8>
   1a9f0:	ldr	r3, [pc, #332]	; 1ab44 <handle_coda_error@@Base+0x5e8>
   1a9f4:	ldr	r3, [r3]
   1a9f8:	mov	r2, #25
   1a9fc:	mov	r1, #1
   1aa00:	ldr	r0, [pc, #352]	; 1ab68 <handle_coda_error@@Base+0x60c>
   1aa04:	bl	12370 <fwrite@plt>
   1aa08:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1aa0c:	mov	r0, #1
   1aa10:	bl	1240c <exit@plt>
   1aa14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa18:	add	r3, r3, #1
   1aa1c:	str	r3, [fp, #-24]	; 0xffffffe8
   1aa20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aa24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aa28:	cmp	r2, r3
   1aa2c:	blt	1a644 <handle_coda_error@@Base+0xe8>
   1aa30:	ldr	r3, [pc, #216]	; 1ab10 <handle_coda_error@@Base+0x5b4>
   1aa34:	ldr	r3, [r3]
   1aa38:	cmp	r3, #0
   1aa3c:	beq	1aa54 <handle_coda_error@@Base+0x4f8>
   1aa40:	ldr	r3, [pc, #200]	; 1ab10 <handle_coda_error@@Base+0x5b4>
   1aa44:	ldr	r3, [r3]
   1aa48:	ldrb	r3, [r3]
   1aa4c:	cmp	r3, #0
   1aa50:	bne	1aa78 <handle_coda_error@@Base+0x51c>
   1aa54:	ldr	r3, [pc, #232]	; 1ab44 <handle_coda_error@@Base+0x5e8>
   1aa58:	ldr	r3, [r3]
   1aa5c:	mov	r2, #25
   1aa60:	mov	r1, #1
   1aa64:	ldr	r0, [pc, #252]	; 1ab68 <handle_coda_error@@Base+0x60c>
   1aa68:	bl	12370 <fwrite@plt>
   1aa6c:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1aa70:	mov	r0, #1
   1aa74:	bl	1240c <exit@plt>
   1aa78:	bl	12478 <coda_init@plt>
   1aa7c:	mov	r3, r0
   1aa80:	cmp	r3, #0
   1aa84:	beq	1aac0 <handle_coda_error@@Base+0x564>
   1aa88:	ldr	r3, [pc, #180]	; 1ab44 <handle_coda_error@@Base+0x5e8>
   1aa8c:	ldr	r4, [r3]
   1aa90:	bl	12604 <coda_get_errno@plt>
   1aa94:	mov	r3, r0
   1aa98:	ldr	r3, [r3]
   1aa9c:	mov	r0, r3
   1aaa0:	bl	125bc <coda_errno_to_string@plt>
   1aaa4:	mov	r3, r0
   1aaa8:	mov	r2, r3
   1aaac:	ldr	r1, [pc, #184]	; 1ab6c <handle_coda_error@@Base+0x610>
   1aab0:	mov	r0, r4
   1aab4:	bl	12454 <fprintf@plt>
   1aab8:	mov	r0, #1
   1aabc:	bl	1240c <exit@plt>
   1aac0:	ldr	r3, [fp, #-16]
   1aac4:	cmp	r3, #0
   1aac8:	moveq	r3, #1
   1aacc:	movne	r3, #0
   1aad0:	uxtb	r3, r3
   1aad4:	mov	r0, r3
   1aad8:	bl	122bc <coda_set_option_bypass_special_types@plt>
   1aadc:	mov	r0, #0
   1aae0:	bl	121fc <coda_set_option_perform_boundary_checks@plt>
   1aae4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aae8:	bl	12484 <coda_set_option_perform_conversions@plt>
   1aaec:	bl	18574 <traverse_info_init@@Base>
   1aaf0:	bl	14a84 <dim_info_init@@Base>
   1aaf4:	bl	19068 <traverse_product@@Base>
   1aaf8:	bl	14ac4 <dim_info_done@@Base>
   1aafc:	bl	185c0 <traverse_info_done@@Base>
   1ab00:	bl	123a0 <coda_done@plt>
   1ab04:	nop			; (mov r0, r0)
   1ab08:	sub	sp, fp, #8
   1ab0c:	pop	{r4, fp, pc}
   1ab10:	strdeq	pc, [r2], -r0
   1ab14:	ldrdeq	pc, [r2], -r8
   1ab18:	andeq	pc, r2, ip, ror #3
   1ab1c:	ldrdeq	pc, [r2], -ip
   1ab20:	andeq	r0, r3, r0, lsr #1
   1ab24:	andeq	pc, r2, r8, ror #3
   1ab28:	andeq	r0, r3, r4, lsr #1
   1ab2c:	andeq	lr, r1, ip, ror #9
   1ab30:	strdeq	lr, [r1], -r0
   1ab34:	strdeq	lr, [r1], -ip
   1ab38:	andeq	lr, r1, r0, lsl #10
   1ab3c:	andeq	lr, r1, r8, lsl r5
   1ab40:	andeq	lr, r1, ip, lsl r5
   1ab44:			; <UNDEFINED> instruction: 0x0002f1b8
   1ab48:	andeq	lr, r1, r8, lsr #10
   1ab4c:	andeq	lr, r1, r4, asr r5
   1ab50:	andeq	lr, r1, r8, asr r5
   1ab54:	andeq	lr, r1, r0, ror #10
   1ab58:	andeq	lr, r1, r4, ror #10
   1ab5c:	andeq	lr, r1, ip, ror #10
   1ab60:	andeq	lr, r1, ip, ror r5
   1ab64:	andeq	lr, r1, ip, lsl #11
   1ab68:	andeq	lr, r1, r0, lsr #11
   1ab6c:	andeq	lr, r1, r0, ror #9
   1ab70:	push	{r4, fp, lr}
   1ab74:	add	fp, sp, #8
   1ab78:	sub	sp, sp, #28
   1ab7c:	str	r0, [fp, #-32]	; 0xffffffe0
   1ab80:	str	r1, [fp, #-36]	; 0xffffffdc
   1ab84:	ldr	r3, [pc, #1872]	; 1b2dc <handle_coda_error@@Base+0xd80>
   1ab88:	mov	r2, #0
   1ab8c:	str	r2, [r3]
   1ab90:	ldr	r3, [pc, #1860]	; 1b2dc <handle_coda_error@@Base+0xd80>
   1ab94:	mov	r2, #0
   1ab98:	str	r2, [r3, #664]	; 0x298
   1ab9c:	ldr	r3, [pc, #1852]	; 1b2e0 <handle_coda_error@@Base+0xd84>
   1aba0:	mov	r2, #0
   1aba4:	str	r2, [r3]
   1aba8:	ldr	r3, [pc, #1844]	; 1b2e4 <handle_coda_error@@Base+0xd88>
   1abac:	ldr	r2, [pc, #1844]	; 1b2e8 <handle_coda_error@@Base+0xd8c>
   1abb0:	str	r2, [r3]
   1abb4:	ldr	r3, [pc, #1840]	; 1b2ec <handle_coda_error@@Base+0xd90>
   1abb8:	ldr	r3, [r3]
   1abbc:	ldr	r2, [pc, #1836]	; 1b2f0 <handle_coda_error@@Base+0xd94>
   1abc0:	str	r3, [r2]
   1abc4:	ldr	r3, [pc, #1832]	; 1b2f4 <handle_coda_error@@Base+0xd98>
   1abc8:	mov	r2, #1
   1abcc:	str	r2, [r3]
   1abd0:	ldr	r3, [pc, #1824]	; 1b2f8 <handle_coda_error@@Base+0xd9c>
   1abd4:	mov	r2, #1
   1abd8:	str	r2, [r3]
   1abdc:	mov	r3, #1
   1abe0:	str	r3, [fp, #-16]
   1abe4:	mov	r3, #1
   1abe8:	str	r3, [fp, #-20]	; 0xffffffec
   1abec:	ldr	r3, [pc, #1800]	; 1b2fc <handle_coda_error@@Base+0xda0>
   1abf0:	mov	r2, #0
   1abf4:	str	r2, [r3]
   1abf8:	ldr	r3, [pc, #1792]	; 1b300 <handle_coda_error@@Base+0xda4>
   1abfc:	mov	r2, #0
   1ac00:	str	r2, [r3]
   1ac04:	ldr	r3, [pc, #1784]	; 1b304 <handle_coda_error@@Base+0xda8>
   1ac08:	mov	r2, #0
   1ac0c:	str	r2, [r3]
   1ac10:	ldr	r3, [pc, #1776]	; 1b308 <handle_coda_error@@Base+0xdac>
   1ac14:	mov	r2, #0
   1ac18:	str	r2, [r3]
   1ac1c:	mov	r3, #0
   1ac20:	str	r3, [fp, #-24]	; 0xffffffe8
   1ac24:	b	1b168 <handle_coda_error@@Base+0xc0c>
   1ac28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac2c:	lsl	r3, r3, #2
   1ac30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ac34:	add	r3, r2, r3
   1ac38:	ldr	r3, [r3]
   1ac3c:	ldr	r1, [pc, #1736]	; 1b30c <handle_coda_error@@Base+0xdb0>
   1ac40:	mov	r0, r3
   1ac44:	bl	12208 <strcmp@plt>
   1ac48:	mov	r3, r0
   1ac4c:	cmp	r3, #0
   1ac50:	beq	1ac80 <handle_coda_error@@Base+0x724>
   1ac54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac58:	lsl	r3, r3, #2
   1ac5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ac60:	add	r3, r2, r3
   1ac64:	ldr	r3, [r3]
   1ac68:	ldr	r1, [pc, #1696]	; 1b310 <handle_coda_error@@Base+0xdb4>
   1ac6c:	mov	r0, r3
   1ac70:	bl	12208 <strcmp@plt>
   1ac74:	mov	r3, r0
   1ac78:	cmp	r3, #0
   1ac7c:	bne	1ac8c <handle_coda_error@@Base+0x730>
   1ac80:	mov	r3, #0
   1ac84:	str	r3, [fp, #-20]	; 0xffffffec
   1ac88:	b	1b15c <handle_coda_error@@Base+0xc00>
   1ac8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac90:	lsl	r3, r3, #2
   1ac94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ac98:	add	r3, r2, r3
   1ac9c:	ldr	r3, [r3]
   1aca0:	ldr	r1, [pc, #1644]	; 1b314 <handle_coda_error@@Base+0xdb8>
   1aca4:	mov	r0, r3
   1aca8:	bl	12208 <strcmp@plt>
   1acac:	mov	r3, r0
   1acb0:	cmp	r3, #0
   1acb4:	beq	1ace4 <handle_coda_error@@Base+0x788>
   1acb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1acbc:	lsl	r3, r3, #2
   1acc0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1acc4:	add	r3, r2, r3
   1acc8:	ldr	r3, [r3]
   1accc:	ldr	r1, [pc, #1604]	; 1b318 <handle_coda_error@@Base+0xdbc>
   1acd0:	mov	r0, r3
   1acd4:	bl	12208 <strcmp@plt>
   1acd8:	mov	r3, r0
   1acdc:	cmp	r3, #0
   1ace0:	bne	1ad8c <handle_coda_error@@Base+0x830>
   1ace4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ace8:	add	r2, r3, #1
   1acec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1acf0:	cmp	r2, r3
   1acf4:	bge	1ad8c <handle_coda_error@@Base+0x830>
   1acf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1acfc:	add	r3, r3, #1
   1ad00:	lsl	r3, r3, #2
   1ad04:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ad08:	add	r3, r2, r3
   1ad0c:	ldr	r3, [r3]
   1ad10:	ldrb	r3, [r3]
   1ad14:	cmp	r3, #45	; 0x2d
   1ad18:	beq	1ad8c <handle_coda_error@@Base+0x830>
   1ad1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad20:	add	r3, r3, #1
   1ad24:	lsl	r3, r3, #2
   1ad28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ad2c:	add	r3, r2, r3
   1ad30:	ldr	r3, [r3]
   1ad34:	mov	r0, r3
   1ad38:	bl	17124 <codadump_filter_create@@Base>
   1ad3c:	mov	r2, r0
   1ad40:	ldr	r3, [pc, #1428]	; 1b2dc <handle_coda_error@@Base+0xd80>
   1ad44:	str	r2, [r3, #664]	; 0x298
   1ad48:	ldr	r3, [pc, #1420]	; 1b2dc <handle_coda_error@@Base+0xd80>
   1ad4c:	ldr	r3, [r3, #664]	; 0x298
   1ad50:	cmp	r3, #0
   1ad54:	bne	1ad7c <handle_coda_error@@Base+0x820>
   1ad58:	ldr	r3, [pc, #1468]	; 1b31c <handle_coda_error@@Base+0xdc0>
   1ad5c:	ldr	r3, [r3]
   1ad60:	mov	r2, #40	; 0x28
   1ad64:	mov	r1, #1
   1ad68:	ldr	r0, [pc, #1456]	; 1b320 <handle_coda_error@@Base+0xdc4>
   1ad6c:	bl	12370 <fwrite@plt>
   1ad70:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1ad74:	mov	r0, #1
   1ad78:	bl	1240c <exit@plt>
   1ad7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad80:	add	r3, r3, #1
   1ad84:	str	r3, [fp, #-24]	; 0xffffffe8
   1ad88:	b	1b15c <handle_coda_error@@Base+0xc00>
   1ad8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad90:	lsl	r3, r3, #2
   1ad94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ad98:	add	r3, r2, r3
   1ad9c:	ldr	r3, [r3]
   1ada0:	ldr	r1, [pc, #1404]	; 1b324 <handle_coda_error@@Base+0xdc8>
   1ada4:	mov	r0, r3
   1ada8:	bl	12208 <strcmp@plt>
   1adac:	mov	r3, r0
   1adb0:	cmp	r3, #0
   1adb4:	beq	1ade4 <handle_coda_error@@Base+0x888>
   1adb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1adbc:	lsl	r3, r3, #2
   1adc0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1adc4:	add	r3, r2, r3
   1adc8:	ldr	r3, [r3]
   1adcc:	ldr	r1, [pc, #1364]	; 1b328 <handle_coda_error@@Base+0xdcc>
   1add0:	mov	r0, r3
   1add4:	bl	12208 <strcmp@plt>
   1add8:	mov	r3, r0
   1addc:	cmp	r3, #0
   1ade0:	bne	1adf4 <handle_coda_error@@Base+0x898>
   1ade4:	ldr	r3, [pc, #1296]	; 1b2fc <handle_coda_error@@Base+0xda0>
   1ade8:	mov	r2, #1
   1adec:	str	r2, [r3]
   1adf0:	b	1b15c <handle_coda_error@@Base+0xc00>
   1adf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1adf8:	lsl	r3, r3, #2
   1adfc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ae00:	add	r3, r2, r3
   1ae04:	ldr	r3, [r3]
   1ae08:	ldr	r1, [pc, #1308]	; 1b32c <handle_coda_error@@Base+0xdd0>
   1ae0c:	mov	r0, r3
   1ae10:	bl	12208 <strcmp@plt>
   1ae14:	mov	r3, r0
   1ae18:	cmp	r3, #0
   1ae1c:	beq	1ae4c <handle_coda_error@@Base+0x8f0>
   1ae20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae24:	lsl	r3, r3, #2
   1ae28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ae2c:	add	r3, r2, r3
   1ae30:	ldr	r3, [r3]
   1ae34:	ldr	r1, [pc, #1268]	; 1b330 <handle_coda_error@@Base+0xdd4>
   1ae38:	mov	r0, r3
   1ae3c:	bl	12208 <strcmp@plt>
   1ae40:	mov	r3, r0
   1ae44:	cmp	r3, #0
   1ae48:	bne	1ae5c <handle_coda_error@@Base+0x900>
   1ae4c:	ldr	r3, [pc, #1196]	; 1b300 <handle_coda_error@@Base+0xda4>
   1ae50:	mov	r2, #1
   1ae54:	str	r2, [r3]
   1ae58:	b	1b15c <handle_coda_error@@Base+0xc00>
   1ae5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae60:	lsl	r3, r3, #2
   1ae64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ae68:	add	r3, r2, r3
   1ae6c:	ldr	r3, [r3]
   1ae70:	ldr	r1, [pc, #1212]	; 1b334 <handle_coda_error@@Base+0xdd8>
   1ae74:	mov	r0, r3
   1ae78:	bl	12208 <strcmp@plt>
   1ae7c:	mov	r3, r0
   1ae80:	cmp	r3, #0
   1ae84:	beq	1aeb4 <handle_coda_error@@Base+0x958>
   1ae88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae8c:	lsl	r3, r3, #2
   1ae90:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ae94:	add	r3, r2, r3
   1ae98:	ldr	r3, [r3]
   1ae9c:	ldr	r1, [pc, #1172]	; 1b338 <handle_coda_error@@Base+0xddc>
   1aea0:	mov	r0, r3
   1aea4:	bl	12208 <strcmp@plt>
   1aea8:	mov	r3, r0
   1aeac:	cmp	r3, #0
   1aeb0:	bne	1af1c <handle_coda_error@@Base+0x9c0>
   1aeb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aeb8:	add	r2, r3, #1
   1aebc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aec0:	cmp	r2, r3
   1aec4:	bge	1af1c <handle_coda_error@@Base+0x9c0>
   1aec8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aecc:	add	r3, r3, #1
   1aed0:	lsl	r3, r3, #2
   1aed4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1aed8:	add	r3, r2, r3
   1aedc:	ldr	r3, [r3]
   1aee0:	ldrb	r3, [r3]
   1aee4:	cmp	r3, #45	; 0x2d
   1aee8:	beq	1af1c <handle_coda_error@@Base+0x9c0>
   1aeec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aef0:	add	r3, r3, #1
   1aef4:	lsl	r3, r3, #2
   1aef8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1aefc:	add	r3, r2, r3
   1af00:	ldr	r3, [r3]
   1af04:	ldr	r2, [pc, #980]	; 1b2e0 <handle_coda_error@@Base+0xd84>
   1af08:	str	r3, [r2]
   1af0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1af10:	add	r3, r3, #1
   1af14:	str	r3, [fp, #-24]	; 0xffffffe8
   1af18:	b	1b15c <handle_coda_error@@Base+0xc00>
   1af1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1af20:	lsl	r3, r3, #2
   1af24:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1af28:	add	r3, r2, r3
   1af2c:	ldr	r3, [r3]
   1af30:	ldr	r1, [pc, #1028]	; 1b33c <handle_coda_error@@Base+0xde0>
   1af34:	mov	r0, r3
   1af38:	bl	12208 <strcmp@plt>
   1af3c:	mov	r3, r0
   1af40:	cmp	r3, #0
   1af44:	beq	1af74 <handle_coda_error@@Base+0xa18>
   1af48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1af4c:	lsl	r3, r3, #2
   1af50:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1af54:	add	r3, r2, r3
   1af58:	ldr	r3, [r3]
   1af5c:	ldr	r1, [pc, #988]	; 1b340 <handle_coda_error@@Base+0xde4>
   1af60:	mov	r0, r3
   1af64:	bl	12208 <strcmp@plt>
   1af68:	mov	r3, r0
   1af6c:	cmp	r3, #0
   1af70:	bne	1af84 <handle_coda_error@@Base+0xa28>
   1af74:	ldr	r3, [pc, #904]	; 1b304 <handle_coda_error@@Base+0xda8>
   1af78:	mov	r2, #1
   1af7c:	str	r2, [r3]
   1af80:	b	1b15c <handle_coda_error@@Base+0xc00>
   1af84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1af88:	lsl	r3, r3, #2
   1af8c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1af90:	add	r3, r2, r3
   1af94:	ldr	r3, [r3]
   1af98:	ldr	r1, [pc, #932]	; 1b344 <handle_coda_error@@Base+0xde8>
   1af9c:	mov	r0, r3
   1afa0:	bl	12208 <strcmp@plt>
   1afa4:	mov	r3, r0
   1afa8:	cmp	r3, #0
   1afac:	beq	1afdc <handle_coda_error@@Base+0xa80>
   1afb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1afb4:	lsl	r3, r3, #2
   1afb8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1afbc:	add	r3, r2, r3
   1afc0:	ldr	r3, [r3]
   1afc4:	ldr	r1, [pc, #892]	; 1b348 <handle_coda_error@@Base+0xdec>
   1afc8:	mov	r0, r3
   1afcc:	bl	12208 <strcmp@plt>
   1afd0:	mov	r3, r0
   1afd4:	cmp	r3, #0
   1afd8:	bne	1b044 <handle_coda_error@@Base+0xae8>
   1afdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1afe0:	add	r2, r3, #1
   1afe4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1afe8:	cmp	r2, r3
   1afec:	bge	1b044 <handle_coda_error@@Base+0xae8>
   1aff0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aff4:	add	r3, r3, #1
   1aff8:	lsl	r3, r3, #2
   1affc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b000:	add	r3, r2, r3
   1b004:	ldr	r3, [r3]
   1b008:	ldrb	r3, [r3]
   1b00c:	cmp	r3, #45	; 0x2d
   1b010:	beq	1b044 <handle_coda_error@@Base+0xae8>
   1b014:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b018:	add	r3, r3, #1
   1b01c:	lsl	r3, r3, #2
   1b020:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b024:	add	r3, r2, r3
   1b028:	ldr	r3, [r3]
   1b02c:	ldr	r2, [pc, #688]	; 1b2e4 <handle_coda_error@@Base+0xd88>
   1b030:	str	r3, [r2]
   1b034:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b038:	add	r3, r3, #1
   1b03c:	str	r3, [fp, #-24]	; 0xffffffe8
   1b040:	b	1b15c <handle_coda_error@@Base+0xc00>
   1b044:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b048:	lsl	r3, r3, #2
   1b04c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b050:	add	r3, r2, r3
   1b054:	ldr	r3, [r3]
   1b058:	ldr	r1, [pc, #748]	; 1b34c <handle_coda_error@@Base+0xdf0>
   1b05c:	mov	r0, r3
   1b060:	bl	12208 <strcmp@plt>
   1b064:	mov	r3, r0
   1b068:	cmp	r3, #0
   1b06c:	beq	1b09c <handle_coda_error@@Base+0xb40>
   1b070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b074:	lsl	r3, r3, #2
   1b078:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b07c:	add	r3, r2, r3
   1b080:	ldr	r3, [r3]
   1b084:	ldr	r1, [pc, #708]	; 1b350 <handle_coda_error@@Base+0xdf4>
   1b088:	mov	r0, r3
   1b08c:	bl	12208 <strcmp@plt>
   1b090:	mov	r3, r0
   1b094:	cmp	r3, #0
   1b098:	bne	1b0ac <handle_coda_error@@Base+0xb50>
   1b09c:	ldr	r3, [pc, #612]	; 1b308 <handle_coda_error@@Base+0xdac>
   1b0a0:	mov	r2, #1
   1b0a4:	str	r2, [r3]
   1b0a8:	b	1b15c <handle_coda_error@@Base+0xc00>
   1b0ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b0b0:	lsl	r3, r3, #2
   1b0b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b0b8:	add	r3, r2, r3
   1b0bc:	ldr	r3, [r3]
   1b0c0:	ldr	r1, [pc, #652]	; 1b354 <handle_coda_error@@Base+0xdf8>
   1b0c4:	mov	r0, r3
   1b0c8:	bl	12208 <strcmp@plt>
   1b0cc:	mov	r3, r0
   1b0d0:	cmp	r3, #0
   1b0d4:	bne	1b0e4 <handle_coda_error@@Base+0xb88>
   1b0d8:	mov	r3, #0
   1b0dc:	str	r3, [fp, #-16]
   1b0e0:	b	1b15c <handle_coda_error@@Base+0xc00>
   1b0e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b0e8:	sub	r2, r3, #1
   1b0ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b0f0:	cmp	r2, r3
   1b0f4:	bne	1b138 <handle_coda_error@@Base+0xbdc>
   1b0f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b0fc:	lsl	r3, r3, #2
   1b100:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b104:	add	r3, r2, r3
   1b108:	ldr	r3, [r3]
   1b10c:	ldrb	r3, [r3]
   1b110:	cmp	r3, #45	; 0x2d
   1b114:	beq	1b138 <handle_coda_error@@Base+0xbdc>
   1b118:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b11c:	lsl	r3, r3, #2
   1b120:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b124:	add	r3, r2, r3
   1b128:	ldr	r3, [r3]
   1b12c:	ldr	r2, [pc, #424]	; 1b2dc <handle_coda_error@@Base+0xd80>
   1b130:	str	r3, [r2]
   1b134:	b	1b15c <handle_coda_error@@Base+0xc00>
   1b138:	ldr	r3, [pc, #476]	; 1b31c <handle_coda_error@@Base+0xdc0>
   1b13c:	ldr	r3, [r3]
   1b140:	mov	r2, #25
   1b144:	mov	r1, #1
   1b148:	ldr	r0, [pc, #520]	; 1b358 <handle_coda_error@@Base+0xdfc>
   1b14c:	bl	12370 <fwrite@plt>
   1b150:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1b154:	mov	r0, #1
   1b158:	bl	1240c <exit@plt>
   1b15c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b160:	add	r3, r3, #1
   1b164:	str	r3, [fp, #-24]	; 0xffffffe8
   1b168:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b16c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b170:	cmp	r2, r3
   1b174:	blt	1ac28 <handle_coda_error@@Base+0x6cc>
   1b178:	ldr	r3, [pc, #348]	; 1b2dc <handle_coda_error@@Base+0xd80>
   1b17c:	ldr	r3, [r3]
   1b180:	cmp	r3, #0
   1b184:	beq	1b19c <handle_coda_error@@Base+0xc40>
   1b188:	ldr	r3, [pc, #332]	; 1b2dc <handle_coda_error@@Base+0xd80>
   1b18c:	ldr	r3, [r3]
   1b190:	ldrb	r3, [r3]
   1b194:	cmp	r3, #0
   1b198:	bne	1b1c0 <handle_coda_error@@Base+0xc64>
   1b19c:	ldr	r3, [pc, #376]	; 1b31c <handle_coda_error@@Base+0xdc0>
   1b1a0:	ldr	r3, [r3]
   1b1a4:	mov	r2, #25
   1b1a8:	mov	r1, #1
   1b1ac:	ldr	r0, [pc, #420]	; 1b358 <handle_coda_error@@Base+0xdfc>
   1b1b0:	bl	12370 <fwrite@plt>
   1b1b4:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1b1b8:	mov	r0, #1
   1b1bc:	bl	1240c <exit@plt>
   1b1c0:	bl	12478 <coda_init@plt>
   1b1c4:	mov	r3, r0
   1b1c8:	cmp	r3, #0
   1b1cc:	beq	1b208 <handle_coda_error@@Base+0xcac>
   1b1d0:	ldr	r3, [pc, #324]	; 1b31c <handle_coda_error@@Base+0xdc0>
   1b1d4:	ldr	r4, [r3]
   1b1d8:	bl	12604 <coda_get_errno@plt>
   1b1dc:	mov	r3, r0
   1b1e0:	ldr	r3, [r3]
   1b1e4:	mov	r0, r3
   1b1e8:	bl	125bc <coda_errno_to_string@plt>
   1b1ec:	mov	r3, r0
   1b1f0:	mov	r2, r3
   1b1f4:	ldr	r1, [pc, #352]	; 1b35c <handle_coda_error@@Base+0xe00>
   1b1f8:	mov	r0, r4
   1b1fc:	bl	12454 <fprintf@plt>
   1b200:	mov	r0, #1
   1b204:	bl	1240c <exit@plt>
   1b208:	ldr	r3, [fp, #-16]
   1b20c:	cmp	r3, #0
   1b210:	moveq	r3, #1
   1b214:	movne	r3, #0
   1b218:	uxtb	r3, r3
   1b21c:	mov	r0, r3
   1b220:	bl	122bc <coda_set_option_bypass_special_types@plt>
   1b224:	mov	r0, #0
   1b228:	bl	121fc <coda_set_option_perform_boundary_checks@plt>
   1b22c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b230:	bl	12484 <coda_set_option_perform_conversions@plt>
   1b234:	bl	18574 <traverse_info_init@@Base>
   1b238:	bl	14a84 <dim_info_init@@Base>
   1b23c:	ldr	r3, [pc, #156]	; 1b2e0 <handle_coda_error@@Base+0xd84>
   1b240:	ldr	r3, [r3]
   1b244:	cmp	r3, #0
   1b248:	beq	1b2a0 <handle_coda_error@@Base+0xd44>
   1b24c:	ldr	r3, [pc, #140]	; 1b2e0 <handle_coda_error@@Base+0xd84>
   1b250:	ldr	r3, [r3]
   1b254:	ldr	r1, [pc, #260]	; 1b360 <handle_coda_error@@Base+0xe04>
   1b258:	mov	r0, r3
   1b25c:	bl	12238 <fopen@plt>
   1b260:	mov	r2, r0
   1b264:	ldr	r3, [pc, #132]	; 1b2f0 <handle_coda_error@@Base+0xd94>
   1b268:	str	r2, [r3]
   1b26c:	ldr	r3, [pc, #124]	; 1b2f0 <handle_coda_error@@Base+0xd94>
   1b270:	ldr	r3, [r3]
   1b274:	cmp	r3, #0
   1b278:	bne	1b2a0 <handle_coda_error@@Base+0xd44>
   1b27c:	ldr	r3, [pc, #152]	; 1b31c <handle_coda_error@@Base+0xdc0>
   1b280:	ldr	r0, [r3]
   1b284:	ldr	r3, [pc, #84]	; 1b2e0 <handle_coda_error@@Base+0xd84>
   1b288:	ldr	r3, [r3]
   1b28c:	mov	r2, r3
   1b290:	ldr	r1, [pc, #204]	; 1b364 <handle_coda_error@@Base+0xe08>
   1b294:	bl	12454 <fprintf@plt>
   1b298:	mov	r0, #1
   1b29c:	bl	1240c <exit@plt>
   1b2a0:	bl	19068 <traverse_product@@Base>
   1b2a4:	ldr	r3, [pc, #52]	; 1b2e0 <handle_coda_error@@Base+0xd84>
   1b2a8:	ldr	r3, [r3]
   1b2ac:	cmp	r3, #0
   1b2b0:	beq	1b2c4 <handle_coda_error@@Base+0xd68>
   1b2b4:	ldr	r3, [pc, #52]	; 1b2f0 <handle_coda_error@@Base+0xd94>
   1b2b8:	ldr	r3, [r3]
   1b2bc:	mov	r0, r3
   1b2c0:	bl	124fc <fclose@plt>
   1b2c4:	bl	14ac4 <dim_info_done@@Base>
   1b2c8:	bl	185c0 <traverse_info_done@@Base>
   1b2cc:	bl	123a0 <coda_done@plt>
   1b2d0:	nop			; (mov r0, r0)
   1b2d4:	sub	sp, fp, #8
   1b2d8:	pop	{r4, fp, pc}
   1b2dc:	strdeq	pc, [r2], -r0
   1b2e0:	andeq	pc, r2, r0, ror #3
   1b2e4:	muleq	r3, ip, r0
   1b2e8:			; <UNDEFINED> instruction: 0x0001e5bc
   1b2ec:			; <UNDEFINED> instruction: 0x0002f1bc
   1b2f0:	muleq	r3, r8, r0
   1b2f4:	ldrdeq	pc, [r2], -r8
   1b2f8:	andeq	pc, r2, ip, ror #3
   1b2fc:	andeq	r0, r3, r8, lsr #1
   1b300:	andeq	r0, r3, r8, lsr #4
   1b304:	andeq	r0, r3, ip, lsr #4
   1b308:	andeq	pc, r2, r4, ror #3
   1b30c:	strdeq	lr, [r1], -ip
   1b310:	andeq	lr, r1, r0, lsl #10
   1b314:	andeq	lr, r1, r8, lsl r5
   1b318:	andeq	lr, r1, ip, lsl r5
   1b31c:			; <UNDEFINED> instruction: 0x0002f1b8
   1b320:	andeq	lr, r1, r8, lsr #10
   1b324:	andeq	lr, r1, r0, asr #11
   1b328:	andeq	lr, r1, r4, asr #11
   1b32c:	andeq	lr, r1, ip, asr #11
   1b330:	ldrdeq	lr, [r1], -r0
   1b334:	ldrdeq	lr, [r1], -r8
   1b338:	ldrdeq	lr, [r1], -ip
   1b33c:	andeq	lr, r1, r8, ror #11
   1b340:	andeq	lr, r1, ip, ror #11
   1b344:	strdeq	lr, [r1], -ip
   1b348:	andeq	lr, r1, r0, lsl #12
   1b34c:	andeq	lr, r1, r4, asr r5
   1b350:	andeq	lr, r1, r4, lsl r6
   1b354:	andeq	lr, r1, ip, lsl #11
   1b358:	andeq	lr, r1, r0, lsr #11
   1b35c:	andeq	lr, r1, r0, ror #9
   1b360:	andeq	lr, r1, r8, lsr #12
   1b364:	andeq	lr, r1, ip, lsr #12
   1b368:	push	{r4, fp, lr}
   1b36c:	add	fp, sp, #8
   1b370:	sub	sp, sp, #28
   1b374:	str	r0, [fp, #-32]	; 0xffffffe0
   1b378:	str	r1, [fp, #-36]	; 0xffffffdc
   1b37c:	ldr	r3, [pc, #1204]	; 1b838 <handle_coda_error@@Base+0x12dc>
   1b380:	mov	r2, #0
   1b384:	str	r2, [r3]
   1b388:	ldr	r3, [pc, #1196]	; 1b83c <handle_coda_error@@Base+0x12e0>
   1b38c:	mov	r2, #0
   1b390:	str	r2, [r3]
   1b394:	ldr	r3, [pc, #1188]	; 1b840 <handle_coda_error@@Base+0x12e4>
   1b398:	mov	r2, #0
   1b39c:	str	r2, [r3]
   1b3a0:	ldr	r3, [pc, #1180]	; 1b844 <handle_coda_error@@Base+0x12e8>
   1b3a4:	ldr	r3, [r3]
   1b3a8:	ldr	r2, [pc, #1176]	; 1b848 <handle_coda_error@@Base+0x12ec>
   1b3ac:	str	r3, [r2]
   1b3b0:	mov	r3, #1
   1b3b4:	str	r3, [fp, #-16]
   1b3b8:	mov	r3, #1
   1b3bc:	str	r3, [fp, #-20]	; 0xffffffec
   1b3c0:	mov	r3, #0
   1b3c4:	str	r3, [fp, #-24]	; 0xffffffe8
   1b3c8:	mov	r3, #0
   1b3cc:	str	r3, [fp, #-28]	; 0xffffffe4
   1b3d0:	b	1b6d8 <handle_coda_error@@Base+0x117c>
   1b3d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b3d8:	lsl	r3, r3, #2
   1b3dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b3e0:	add	r3, r2, r3
   1b3e4:	ldr	r3, [r3]
   1b3e8:	ldr	r1, [pc, #1116]	; 1b84c <handle_coda_error@@Base+0x12f0>
   1b3ec:	mov	r0, r3
   1b3f0:	bl	12208 <strcmp@plt>
   1b3f4:	mov	r3, r0
   1b3f8:	cmp	r3, #0
   1b3fc:	beq	1b42c <handle_coda_error@@Base+0xed0>
   1b400:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b404:	lsl	r3, r3, #2
   1b408:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b40c:	add	r3, r2, r3
   1b410:	ldr	r3, [r3]
   1b414:	ldr	r1, [pc, #1076]	; 1b850 <handle_coda_error@@Base+0x12f4>
   1b418:	mov	r0, r3
   1b41c:	bl	12208 <strcmp@plt>
   1b420:	mov	r3, r0
   1b424:	cmp	r3, #0
   1b428:	bne	1b438 <handle_coda_error@@Base+0xedc>
   1b42c:	mov	r3, #1
   1b430:	str	r3, [fp, #-24]	; 0xffffffe8
   1b434:	b	1b6cc <handle_coda_error@@Base+0x1170>
   1b438:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b43c:	lsl	r3, r3, #2
   1b440:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b444:	add	r3, r2, r3
   1b448:	ldr	r3, [r3]
   1b44c:	ldr	r1, [pc, #1024]	; 1b854 <handle_coda_error@@Base+0x12f8>
   1b450:	mov	r0, r3
   1b454:	bl	12208 <strcmp@plt>
   1b458:	mov	r3, r0
   1b45c:	cmp	r3, #0
   1b460:	beq	1b490 <handle_coda_error@@Base+0xf34>
   1b464:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b468:	lsl	r3, r3, #2
   1b46c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b470:	add	r3, r2, r3
   1b474:	ldr	r3, [r3]
   1b478:	ldr	r1, [pc, #984]	; 1b858 <handle_coda_error@@Base+0x12fc>
   1b47c:	mov	r0, r3
   1b480:	bl	12208 <strcmp@plt>
   1b484:	mov	r3, r0
   1b488:	cmp	r3, #0
   1b48c:	bne	1b49c <handle_coda_error@@Base+0xf40>
   1b490:	mov	r3, #0
   1b494:	str	r3, [fp, #-20]	; 0xffffffec
   1b498:	b	1b6cc <handle_coda_error@@Base+0x1170>
   1b49c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b4a0:	lsl	r3, r3, #2
   1b4a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b4a8:	add	r3, r2, r3
   1b4ac:	ldr	r3, [r3]
   1b4b0:	ldr	r1, [pc, #932]	; 1b85c <handle_coda_error@@Base+0x1300>
   1b4b4:	mov	r0, r3
   1b4b8:	bl	12208 <strcmp@plt>
   1b4bc:	mov	r3, r0
   1b4c0:	cmp	r3, #0
   1b4c4:	beq	1b4f4 <handle_coda_error@@Base+0xf98>
   1b4c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b4cc:	lsl	r3, r3, #2
   1b4d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b4d4:	add	r3, r2, r3
   1b4d8:	ldr	r3, [r3]
   1b4dc:	ldr	r1, [pc, #892]	; 1b860 <handle_coda_error@@Base+0x1304>
   1b4e0:	mov	r0, r3
   1b4e4:	bl	12208 <strcmp@plt>
   1b4e8:	mov	r3, r0
   1b4ec:	cmp	r3, #0
   1b4f0:	bne	1b55c <handle_coda_error@@Base+0x1000>
   1b4f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b4f8:	add	r2, r3, #1
   1b4fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b500:	cmp	r2, r3
   1b504:	bge	1b55c <handle_coda_error@@Base+0x1000>
   1b508:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b50c:	add	r3, r3, #1
   1b510:	lsl	r3, r3, #2
   1b514:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b518:	add	r3, r2, r3
   1b51c:	ldr	r3, [r3]
   1b520:	ldrb	r3, [r3]
   1b524:	cmp	r3, #45	; 0x2d
   1b528:	beq	1b55c <handle_coda_error@@Base+0x1000>
   1b52c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b530:	add	r3, r3, #1
   1b534:	lsl	r3, r3, #2
   1b538:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b53c:	add	r3, r2, r3
   1b540:	ldr	r3, [r3]
   1b544:	ldr	r2, [pc, #752]	; 1b83c <handle_coda_error@@Base+0x12e0>
   1b548:	str	r3, [r2]
   1b54c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b550:	add	r3, r3, #1
   1b554:	str	r3, [fp, #-28]	; 0xffffffe4
   1b558:	b	1b6cc <handle_coda_error@@Base+0x1170>
   1b55c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b560:	lsl	r3, r3, #2
   1b564:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b568:	add	r3, r2, r3
   1b56c:	ldr	r3, [r3]
   1b570:	ldr	r1, [pc, #748]	; 1b864 <handle_coda_error@@Base+0x1308>
   1b574:	mov	r0, r3
   1b578:	bl	12208 <strcmp@plt>
   1b57c:	mov	r3, r0
   1b580:	cmp	r3, #0
   1b584:	beq	1b5b4 <handle_coda_error@@Base+0x1058>
   1b588:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b58c:	lsl	r3, r3, #2
   1b590:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b594:	add	r3, r2, r3
   1b598:	ldr	r3, [r3]
   1b59c:	ldr	r1, [pc, #708]	; 1b868 <handle_coda_error@@Base+0x130c>
   1b5a0:	mov	r0, r3
   1b5a4:	bl	12208 <strcmp@plt>
   1b5a8:	mov	r3, r0
   1b5ac:	cmp	r3, #0
   1b5b0:	bne	1b61c <handle_coda_error@@Base+0x10c0>
   1b5b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b5b8:	add	r2, r3, #1
   1b5bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5c0:	cmp	r2, r3
   1b5c4:	bge	1b61c <handle_coda_error@@Base+0x10c0>
   1b5c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b5cc:	add	r3, r3, #1
   1b5d0:	lsl	r3, r3, #2
   1b5d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b5d8:	add	r3, r2, r3
   1b5dc:	ldr	r3, [r3]
   1b5e0:	ldrb	r3, [r3]
   1b5e4:	cmp	r3, #45	; 0x2d
   1b5e8:	beq	1b61c <handle_coda_error@@Base+0x10c0>
   1b5ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b5f0:	add	r3, r3, #1
   1b5f4:	lsl	r3, r3, #2
   1b5f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b5fc:	add	r3, r2, r3
   1b600:	ldr	r3, [r3]
   1b604:	ldr	r2, [pc, #564]	; 1b840 <handle_coda_error@@Base+0x12e4>
   1b608:	str	r3, [r2]
   1b60c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b610:	add	r3, r3, #1
   1b614:	str	r3, [fp, #-28]	; 0xffffffe4
   1b618:	b	1b6cc <handle_coda_error@@Base+0x1170>
   1b61c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b620:	lsl	r3, r3, #2
   1b624:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b628:	add	r3, r2, r3
   1b62c:	ldr	r3, [r3]
   1b630:	ldr	r1, [pc, #564]	; 1b86c <handle_coda_error@@Base+0x1310>
   1b634:	mov	r0, r3
   1b638:	bl	12208 <strcmp@plt>
   1b63c:	mov	r3, r0
   1b640:	cmp	r3, #0
   1b644:	bne	1b654 <handle_coda_error@@Base+0x10f8>
   1b648:	mov	r3, #0
   1b64c:	str	r3, [fp, #-16]
   1b650:	b	1b6cc <handle_coda_error@@Base+0x1170>
   1b654:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b658:	sub	r2, r3, #1
   1b65c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b660:	cmp	r2, r3
   1b664:	bne	1b6a8 <handle_coda_error@@Base+0x114c>
   1b668:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b66c:	lsl	r3, r3, #2
   1b670:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b674:	add	r3, r2, r3
   1b678:	ldr	r3, [r3]
   1b67c:	ldrb	r3, [r3]
   1b680:	cmp	r3, #45	; 0x2d
   1b684:	beq	1b6a8 <handle_coda_error@@Base+0x114c>
   1b688:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b68c:	lsl	r3, r3, #2
   1b690:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b694:	add	r3, r2, r3
   1b698:	ldr	r3, [r3]
   1b69c:	ldr	r2, [pc, #404]	; 1b838 <handle_coda_error@@Base+0x12dc>
   1b6a0:	str	r3, [r2]
   1b6a4:	b	1b6cc <handle_coda_error@@Base+0x1170>
   1b6a8:	ldr	r3, [pc, #448]	; 1b870 <handle_coda_error@@Base+0x1314>
   1b6ac:	ldr	r3, [r3]
   1b6b0:	mov	r2, #25
   1b6b4:	mov	r1, #1
   1b6b8:	ldr	r0, [pc, #436]	; 1b874 <handle_coda_error@@Base+0x1318>
   1b6bc:	bl	12370 <fwrite@plt>
   1b6c0:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1b6c4:	mov	r0, #1
   1b6c8:	bl	1240c <exit@plt>
   1b6cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b6d0:	add	r3, r3, #1
   1b6d4:	str	r3, [fp, #-28]	; 0xffffffe4
   1b6d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b6dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b6e0:	cmp	r2, r3
   1b6e4:	blt	1b3d4 <handle_coda_error@@Base+0xe78>
   1b6e8:	ldr	r3, [pc, #328]	; 1b838 <handle_coda_error@@Base+0x12dc>
   1b6ec:	ldr	r3, [r3]
   1b6f0:	cmp	r3, #0
   1b6f4:	beq	1b70c <handle_coda_error@@Base+0x11b0>
   1b6f8:	ldr	r3, [pc, #312]	; 1b838 <handle_coda_error@@Base+0x12dc>
   1b6fc:	ldr	r3, [r3]
   1b700:	ldrb	r3, [r3]
   1b704:	cmp	r3, #0
   1b708:	bne	1b730 <handle_coda_error@@Base+0x11d4>
   1b70c:	ldr	r3, [pc, #348]	; 1b870 <handle_coda_error@@Base+0x1314>
   1b710:	ldr	r3, [r3]
   1b714:	mov	r2, #25
   1b718:	mov	r1, #1
   1b71c:	ldr	r0, [pc, #336]	; 1b874 <handle_coda_error@@Base+0x1318>
   1b720:	bl	12370 <fwrite@plt>
   1b724:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1b728:	mov	r0, #1
   1b72c:	bl	1240c <exit@plt>
   1b730:	bl	12478 <coda_init@plt>
   1b734:	mov	r3, r0
   1b738:	cmp	r3, #0
   1b73c:	beq	1b778 <handle_coda_error@@Base+0x121c>
   1b740:	ldr	r3, [pc, #296]	; 1b870 <handle_coda_error@@Base+0x1314>
   1b744:	ldr	r4, [r3]
   1b748:	bl	12604 <coda_get_errno@plt>
   1b74c:	mov	r3, r0
   1b750:	ldr	r3, [r3]
   1b754:	mov	r0, r3
   1b758:	bl	125bc <coda_errno_to_string@plt>
   1b75c:	mov	r3, r0
   1b760:	mov	r2, r3
   1b764:	ldr	r1, [pc, #268]	; 1b878 <handle_coda_error@@Base+0x131c>
   1b768:	mov	r0, r4
   1b76c:	bl	12454 <fprintf@plt>
   1b770:	mov	r0, #1
   1b774:	bl	1240c <exit@plt>
   1b778:	ldr	r3, [fp, #-16]
   1b77c:	cmp	r3, #0
   1b780:	moveq	r3, #1
   1b784:	movne	r3, #0
   1b788:	uxtb	r3, r3
   1b78c:	mov	r0, r3
   1b790:	bl	122bc <coda_set_option_bypass_special_types@plt>
   1b794:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b798:	bl	12484 <coda_set_option_perform_conversions@plt>
   1b79c:	ldr	r3, [pc, #152]	; 1b83c <handle_coda_error@@Base+0x12e0>
   1b7a0:	ldr	r3, [r3]
   1b7a4:	cmp	r3, #0
   1b7a8:	beq	1b800 <handle_coda_error@@Base+0x12a4>
   1b7ac:	ldr	r3, [pc, #136]	; 1b83c <handle_coda_error@@Base+0x12e0>
   1b7b0:	ldr	r3, [r3]
   1b7b4:	ldr	r1, [pc, #192]	; 1b87c <handle_coda_error@@Base+0x1320>
   1b7b8:	mov	r0, r3
   1b7bc:	bl	12238 <fopen@plt>
   1b7c0:	mov	r2, r0
   1b7c4:	ldr	r3, [pc, #124]	; 1b848 <handle_coda_error@@Base+0x12ec>
   1b7c8:	str	r2, [r3]
   1b7cc:	ldr	r3, [pc, #116]	; 1b848 <handle_coda_error@@Base+0x12ec>
   1b7d0:	ldr	r3, [r3]
   1b7d4:	cmp	r3, #0
   1b7d8:	bne	1b800 <handle_coda_error@@Base+0x12a4>
   1b7dc:	ldr	r3, [pc, #140]	; 1b870 <handle_coda_error@@Base+0x1314>
   1b7e0:	ldr	r0, [r3]
   1b7e4:	ldr	r3, [pc, #80]	; 1b83c <handle_coda_error@@Base+0x12e0>
   1b7e8:	ldr	r3, [r3]
   1b7ec:	mov	r2, r3
   1b7f0:	ldr	r1, [pc, #136]	; 1b880 <handle_coda_error@@Base+0x1324>
   1b7f4:	bl	12454 <fprintf@plt>
   1b7f8:	mov	r0, #1
   1b7fc:	bl	1240c <exit@plt>
   1b800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b804:	bl	17ec8 <print_json_data@@Base>
   1b808:	ldr	r3, [pc, #44]	; 1b83c <handle_coda_error@@Base+0x12e0>
   1b80c:	ldr	r3, [r3]
   1b810:	cmp	r3, #0
   1b814:	beq	1b828 <handle_coda_error@@Base+0x12cc>
   1b818:	ldr	r3, [pc, #40]	; 1b848 <handle_coda_error@@Base+0x12ec>
   1b81c:	ldr	r3, [r3]
   1b820:	mov	r0, r3
   1b824:	bl	124fc <fclose@plt>
   1b828:	bl	123a0 <coda_done@plt>
   1b82c:	nop			; (mov r0, r0)
   1b830:	sub	sp, fp, #8
   1b834:	pop	{r4, fp, pc}
   1b838:	strdeq	pc, [r2], -r0
   1b83c:	andeq	pc, r2, r0, ror #3
   1b840:	strheq	r0, [r3], -r0	; <UNPREDICTABLE>
   1b844:			; <UNDEFINED> instruction: 0x0002f1bc
   1b848:	muleq	r3, r8, r0
   1b84c:	andeq	lr, r1, r8, asr r6
   1b850:	andeq	lr, r1, ip, asr r6
   1b854:	strdeq	lr, [r1], -ip
   1b858:	andeq	lr, r1, r0, lsl #10
   1b85c:	ldrdeq	lr, [r1], -r8
   1b860:	ldrdeq	lr, [r1], -ip
   1b864:	andeq	lr, r1, ip, ror #12
   1b868:	andeq	lr, r1, r0, ror r6
   1b86c:	andeq	lr, r1, ip, lsl #11
   1b870:			; <UNDEFINED> instruction: 0x0002f1b8
   1b874:	andeq	lr, r1, r0, lsr #11
   1b878:	andeq	lr, r1, r0, ror #9
   1b87c:	andeq	lr, r1, r8, lsr #12
   1b880:	andeq	lr, r1, ip, lsr #12
   1b884:	push	{r4, fp, lr}
   1b888:	add	fp, sp, #8
   1b88c:	sub	sp, sp, #28
   1b890:	str	r0, [fp, #-32]	; 0xffffffe0
   1b894:	str	r1, [fp, #-36]	; 0xffffffdc
   1b898:	ldr	r3, [pc, #1204]	; 1bd54 <handle_coda_error@@Base+0x17f8>
   1b89c:	mov	r2, #0
   1b8a0:	str	r2, [r3]
   1b8a4:	ldr	r3, [pc, #1196]	; 1bd58 <handle_coda_error@@Base+0x17fc>
   1b8a8:	mov	r2, #0
   1b8ac:	str	r2, [r3]
   1b8b0:	ldr	r3, [pc, #1188]	; 1bd5c <handle_coda_error@@Base+0x1800>
   1b8b4:	mov	r2, #0
   1b8b8:	str	r2, [r3]
   1b8bc:	ldr	r3, [pc, #1180]	; 1bd60 <handle_coda_error@@Base+0x1804>
   1b8c0:	ldr	r3, [r3]
   1b8c4:	ldr	r2, [pc, #1176]	; 1bd64 <handle_coda_error@@Base+0x1808>
   1b8c8:	str	r3, [r2]
   1b8cc:	mov	r3, #1
   1b8d0:	str	r3, [fp, #-16]
   1b8d4:	mov	r3, #1
   1b8d8:	str	r3, [fp, #-20]	; 0xffffffec
   1b8dc:	mov	r3, #0
   1b8e0:	str	r3, [fp, #-24]	; 0xffffffe8
   1b8e4:	mov	r3, #0
   1b8e8:	str	r3, [fp, #-28]	; 0xffffffe4
   1b8ec:	b	1bbf4 <handle_coda_error@@Base+0x1698>
   1b8f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b8f4:	lsl	r3, r3, #2
   1b8f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b8fc:	add	r3, r2, r3
   1b900:	ldr	r3, [r3]
   1b904:	ldr	r1, [pc, #1116]	; 1bd68 <handle_coda_error@@Base+0x180c>
   1b908:	mov	r0, r3
   1b90c:	bl	12208 <strcmp@plt>
   1b910:	mov	r3, r0
   1b914:	cmp	r3, #0
   1b918:	beq	1b948 <handle_coda_error@@Base+0x13ec>
   1b91c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b920:	lsl	r3, r3, #2
   1b924:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b928:	add	r3, r2, r3
   1b92c:	ldr	r3, [r3]
   1b930:	ldr	r1, [pc, #1076]	; 1bd6c <handle_coda_error@@Base+0x1810>
   1b934:	mov	r0, r3
   1b938:	bl	12208 <strcmp@plt>
   1b93c:	mov	r3, r0
   1b940:	cmp	r3, #0
   1b944:	bne	1b954 <handle_coda_error@@Base+0x13f8>
   1b948:	mov	r3, #1
   1b94c:	str	r3, [fp, #-24]	; 0xffffffe8
   1b950:	b	1bbe8 <handle_coda_error@@Base+0x168c>
   1b954:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b958:	lsl	r3, r3, #2
   1b95c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b960:	add	r3, r2, r3
   1b964:	ldr	r3, [r3]
   1b968:	ldr	r1, [pc, #1024]	; 1bd70 <handle_coda_error@@Base+0x1814>
   1b96c:	mov	r0, r3
   1b970:	bl	12208 <strcmp@plt>
   1b974:	mov	r3, r0
   1b978:	cmp	r3, #0
   1b97c:	beq	1b9ac <handle_coda_error@@Base+0x1450>
   1b980:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b984:	lsl	r3, r3, #2
   1b988:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b98c:	add	r3, r2, r3
   1b990:	ldr	r3, [r3]
   1b994:	ldr	r1, [pc, #984]	; 1bd74 <handle_coda_error@@Base+0x1818>
   1b998:	mov	r0, r3
   1b99c:	bl	12208 <strcmp@plt>
   1b9a0:	mov	r3, r0
   1b9a4:	cmp	r3, #0
   1b9a8:	bne	1b9b8 <handle_coda_error@@Base+0x145c>
   1b9ac:	mov	r3, #0
   1b9b0:	str	r3, [fp, #-20]	; 0xffffffec
   1b9b4:	b	1bbe8 <handle_coda_error@@Base+0x168c>
   1b9b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b9bc:	lsl	r3, r3, #2
   1b9c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b9c4:	add	r3, r2, r3
   1b9c8:	ldr	r3, [r3]
   1b9cc:	ldr	r1, [pc, #932]	; 1bd78 <handle_coda_error@@Base+0x181c>
   1b9d0:	mov	r0, r3
   1b9d4:	bl	12208 <strcmp@plt>
   1b9d8:	mov	r3, r0
   1b9dc:	cmp	r3, #0
   1b9e0:	beq	1ba10 <handle_coda_error@@Base+0x14b4>
   1b9e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b9e8:	lsl	r3, r3, #2
   1b9ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b9f0:	add	r3, r2, r3
   1b9f4:	ldr	r3, [r3]
   1b9f8:	ldr	r1, [pc, #892]	; 1bd7c <handle_coda_error@@Base+0x1820>
   1b9fc:	mov	r0, r3
   1ba00:	bl	12208 <strcmp@plt>
   1ba04:	mov	r3, r0
   1ba08:	cmp	r3, #0
   1ba0c:	bne	1ba78 <handle_coda_error@@Base+0x151c>
   1ba10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ba14:	add	r2, r3, #1
   1ba18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba1c:	cmp	r2, r3
   1ba20:	bge	1ba78 <handle_coda_error@@Base+0x151c>
   1ba24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ba28:	add	r3, r3, #1
   1ba2c:	lsl	r3, r3, #2
   1ba30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ba34:	add	r3, r2, r3
   1ba38:	ldr	r3, [r3]
   1ba3c:	ldrb	r3, [r3]
   1ba40:	cmp	r3, #45	; 0x2d
   1ba44:	beq	1ba78 <handle_coda_error@@Base+0x151c>
   1ba48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ba4c:	add	r3, r3, #1
   1ba50:	lsl	r3, r3, #2
   1ba54:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ba58:	add	r3, r2, r3
   1ba5c:	ldr	r3, [r3]
   1ba60:	ldr	r2, [pc, #752]	; 1bd58 <handle_coda_error@@Base+0x17fc>
   1ba64:	str	r3, [r2]
   1ba68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ba6c:	add	r3, r3, #1
   1ba70:	str	r3, [fp, #-28]	; 0xffffffe4
   1ba74:	b	1bbe8 <handle_coda_error@@Base+0x168c>
   1ba78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ba7c:	lsl	r3, r3, #2
   1ba80:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ba84:	add	r3, r2, r3
   1ba88:	ldr	r3, [r3]
   1ba8c:	ldr	r1, [pc, #748]	; 1bd80 <handle_coda_error@@Base+0x1824>
   1ba90:	mov	r0, r3
   1ba94:	bl	12208 <strcmp@plt>
   1ba98:	mov	r3, r0
   1ba9c:	cmp	r3, #0
   1baa0:	beq	1bad0 <handle_coda_error@@Base+0x1574>
   1baa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1baa8:	lsl	r3, r3, #2
   1baac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bab0:	add	r3, r2, r3
   1bab4:	ldr	r3, [r3]
   1bab8:	ldr	r1, [pc, #708]	; 1bd84 <handle_coda_error@@Base+0x1828>
   1babc:	mov	r0, r3
   1bac0:	bl	12208 <strcmp@plt>
   1bac4:	mov	r3, r0
   1bac8:	cmp	r3, #0
   1bacc:	bne	1bb38 <handle_coda_error@@Base+0x15dc>
   1bad0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bad4:	add	r2, r3, #1
   1bad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1badc:	cmp	r2, r3
   1bae0:	bge	1bb38 <handle_coda_error@@Base+0x15dc>
   1bae4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bae8:	add	r3, r3, #1
   1baec:	lsl	r3, r3, #2
   1baf0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1baf4:	add	r3, r2, r3
   1baf8:	ldr	r3, [r3]
   1bafc:	ldrb	r3, [r3]
   1bb00:	cmp	r3, #45	; 0x2d
   1bb04:	beq	1bb38 <handle_coda_error@@Base+0x15dc>
   1bb08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb0c:	add	r3, r3, #1
   1bb10:	lsl	r3, r3, #2
   1bb14:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bb18:	add	r3, r2, r3
   1bb1c:	ldr	r3, [r3]
   1bb20:	ldr	r2, [pc, #564]	; 1bd5c <handle_coda_error@@Base+0x1800>
   1bb24:	str	r3, [r2]
   1bb28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb2c:	add	r3, r3, #1
   1bb30:	str	r3, [fp, #-28]	; 0xffffffe4
   1bb34:	b	1bbe8 <handle_coda_error@@Base+0x168c>
   1bb38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb3c:	lsl	r3, r3, #2
   1bb40:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bb44:	add	r3, r2, r3
   1bb48:	ldr	r3, [r3]
   1bb4c:	ldr	r1, [pc, #564]	; 1bd88 <handle_coda_error@@Base+0x182c>
   1bb50:	mov	r0, r3
   1bb54:	bl	12208 <strcmp@plt>
   1bb58:	mov	r3, r0
   1bb5c:	cmp	r3, #0
   1bb60:	bne	1bb70 <handle_coda_error@@Base+0x1614>
   1bb64:	mov	r3, #0
   1bb68:	str	r3, [fp, #-16]
   1bb6c:	b	1bbe8 <handle_coda_error@@Base+0x168c>
   1bb70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bb74:	sub	r2, r3, #1
   1bb78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb7c:	cmp	r2, r3
   1bb80:	bne	1bbc4 <handle_coda_error@@Base+0x1668>
   1bb84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb88:	lsl	r3, r3, #2
   1bb8c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bb90:	add	r3, r2, r3
   1bb94:	ldr	r3, [r3]
   1bb98:	ldrb	r3, [r3]
   1bb9c:	cmp	r3, #45	; 0x2d
   1bba0:	beq	1bbc4 <handle_coda_error@@Base+0x1668>
   1bba4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bba8:	lsl	r3, r3, #2
   1bbac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bbb0:	add	r3, r2, r3
   1bbb4:	ldr	r3, [r3]
   1bbb8:	ldr	r2, [pc, #404]	; 1bd54 <handle_coda_error@@Base+0x17f8>
   1bbbc:	str	r3, [r2]
   1bbc0:	b	1bbe8 <handle_coda_error@@Base+0x168c>
   1bbc4:	ldr	r3, [pc, #448]	; 1bd8c <handle_coda_error@@Base+0x1830>
   1bbc8:	ldr	r3, [r3]
   1bbcc:	mov	r2, #25
   1bbd0:	mov	r1, #1
   1bbd4:	ldr	r0, [pc, #436]	; 1bd90 <handle_coda_error@@Base+0x1834>
   1bbd8:	bl	12370 <fwrite@plt>
   1bbdc:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1bbe0:	mov	r0, #1
   1bbe4:	bl	1240c <exit@plt>
   1bbe8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bbec:	add	r3, r3, #1
   1bbf0:	str	r3, [fp, #-28]	; 0xffffffe4
   1bbf4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bbf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bbfc:	cmp	r2, r3
   1bc00:	blt	1b8f0 <handle_coda_error@@Base+0x1394>
   1bc04:	ldr	r3, [pc, #328]	; 1bd54 <handle_coda_error@@Base+0x17f8>
   1bc08:	ldr	r3, [r3]
   1bc0c:	cmp	r3, #0
   1bc10:	beq	1bc28 <handle_coda_error@@Base+0x16cc>
   1bc14:	ldr	r3, [pc, #312]	; 1bd54 <handle_coda_error@@Base+0x17f8>
   1bc18:	ldr	r3, [r3]
   1bc1c:	ldrb	r3, [r3]
   1bc20:	cmp	r3, #0
   1bc24:	bne	1bc4c <handle_coda_error@@Base+0x16f0>
   1bc28:	ldr	r3, [pc, #348]	; 1bd8c <handle_coda_error@@Base+0x1830>
   1bc2c:	ldr	r3, [r3]
   1bc30:	mov	r2, #25
   1bc34:	mov	r1, #1
   1bc38:	ldr	r0, [pc, #336]	; 1bd90 <handle_coda_error@@Base+0x1834>
   1bc3c:	bl	12370 <fwrite@plt>
   1bc40:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1bc44:	mov	r0, #1
   1bc48:	bl	1240c <exit@plt>
   1bc4c:	bl	12478 <coda_init@plt>
   1bc50:	mov	r3, r0
   1bc54:	cmp	r3, #0
   1bc58:	beq	1bc94 <handle_coda_error@@Base+0x1738>
   1bc5c:	ldr	r3, [pc, #296]	; 1bd8c <handle_coda_error@@Base+0x1830>
   1bc60:	ldr	r4, [r3]
   1bc64:	bl	12604 <coda_get_errno@plt>
   1bc68:	mov	r3, r0
   1bc6c:	ldr	r3, [r3]
   1bc70:	mov	r0, r3
   1bc74:	bl	125bc <coda_errno_to_string@plt>
   1bc78:	mov	r3, r0
   1bc7c:	mov	r2, r3
   1bc80:	ldr	r1, [pc, #268]	; 1bd94 <handle_coda_error@@Base+0x1838>
   1bc84:	mov	r0, r4
   1bc88:	bl	12454 <fprintf@plt>
   1bc8c:	mov	r0, #1
   1bc90:	bl	1240c <exit@plt>
   1bc94:	ldr	r3, [fp, #-16]
   1bc98:	cmp	r3, #0
   1bc9c:	moveq	r3, #1
   1bca0:	movne	r3, #0
   1bca4:	uxtb	r3, r3
   1bca8:	mov	r0, r3
   1bcac:	bl	122bc <coda_set_option_bypass_special_types@plt>
   1bcb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bcb4:	bl	12484 <coda_set_option_perform_conversions@plt>
   1bcb8:	ldr	r3, [pc, #152]	; 1bd58 <handle_coda_error@@Base+0x17fc>
   1bcbc:	ldr	r3, [r3]
   1bcc0:	cmp	r3, #0
   1bcc4:	beq	1bd1c <handle_coda_error@@Base+0x17c0>
   1bcc8:	ldr	r3, [pc, #136]	; 1bd58 <handle_coda_error@@Base+0x17fc>
   1bccc:	ldr	r3, [r3]
   1bcd0:	ldr	r1, [pc, #192]	; 1bd98 <handle_coda_error@@Base+0x183c>
   1bcd4:	mov	r0, r3
   1bcd8:	bl	12238 <fopen@plt>
   1bcdc:	mov	r2, r0
   1bce0:	ldr	r3, [pc, #124]	; 1bd64 <handle_coda_error@@Base+0x1808>
   1bce4:	str	r2, [r3]
   1bce8:	ldr	r3, [pc, #116]	; 1bd64 <handle_coda_error@@Base+0x1808>
   1bcec:	ldr	r3, [r3]
   1bcf0:	cmp	r3, #0
   1bcf4:	bne	1bd1c <handle_coda_error@@Base+0x17c0>
   1bcf8:	ldr	r3, [pc, #140]	; 1bd8c <handle_coda_error@@Base+0x1830>
   1bcfc:	ldr	r0, [r3]
   1bd00:	ldr	r3, [pc, #80]	; 1bd58 <handle_coda_error@@Base+0x17fc>
   1bd04:	ldr	r3, [r3]
   1bd08:	mov	r2, r3
   1bd0c:	ldr	r1, [pc, #136]	; 1bd9c <handle_coda_error@@Base+0x1840>
   1bd10:	bl	12454 <fprintf@plt>
   1bd14:	mov	r0, #1
   1bd18:	bl	1240c <exit@plt>
   1bd1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd20:	bl	19f04 <print_yaml_data@@Base>
   1bd24:	ldr	r3, [pc, #44]	; 1bd58 <handle_coda_error@@Base+0x17fc>
   1bd28:	ldr	r3, [r3]
   1bd2c:	cmp	r3, #0
   1bd30:	beq	1bd44 <handle_coda_error@@Base+0x17e8>
   1bd34:	ldr	r3, [pc, #40]	; 1bd64 <handle_coda_error@@Base+0x1808>
   1bd38:	ldr	r3, [r3]
   1bd3c:	mov	r0, r3
   1bd40:	bl	124fc <fclose@plt>
   1bd44:	bl	123a0 <coda_done@plt>
   1bd48:	nop			; (mov r0, r0)
   1bd4c:	sub	sp, fp, #8
   1bd50:	pop	{r4, fp, pc}
   1bd54:	strdeq	pc, [r2], -r0
   1bd58:	andeq	pc, r2, r0, ror #3
   1bd5c:	strheq	r0, [r3], -r0	; <UNPREDICTABLE>
   1bd60:			; <UNDEFINED> instruction: 0x0002f1bc
   1bd64:	muleq	r3, r8, r0
   1bd68:	andeq	lr, r1, r8, asr r6
   1bd6c:	andeq	lr, r1, ip, asr r6
   1bd70:	strdeq	lr, [r1], -ip
   1bd74:	andeq	lr, r1, r0, lsl #10
   1bd78:	ldrdeq	lr, [r1], -r8
   1bd7c:	ldrdeq	lr, [r1], -ip
   1bd80:	andeq	lr, r1, ip, ror #12
   1bd84:	andeq	lr, r1, r0, ror r6
   1bd88:	andeq	lr, r1, ip, lsl #11
   1bd8c:			; <UNDEFINED> instruction: 0x0002f1b8
   1bd90:	andeq	lr, r1, r0, lsr #11
   1bd94:	andeq	lr, r1, r0, ror #9
   1bd98:	andeq	lr, r1, r8, lsr #12
   1bd9c:	andeq	lr, r1, ip, lsr #12
   1bda0:	push	{r4, fp, lr}
   1bda4:	add	fp, sp, #8
   1bda8:	sub	sp, sp, #36	; 0x24
   1bdac:	str	r0, [fp, #-40]	; 0xffffffd8
   1bdb0:	str	r1, [fp, #-44]	; 0xffffffd4
   1bdb4:	mov	r3, #0
   1bdb8:	str	r3, [fp, #-16]
   1bdbc:	mov	r3, #0
   1bdc0:	str	r3, [fp, #-20]	; 0xffffffec
   1bdc4:	mov	r3, #0
   1bdc8:	str	r3, [fp, #-24]	; 0xffffffe8
   1bdcc:	ldr	r3, [pc, #1460]	; 1c388 <handle_coda_error@@Base+0x1e2c>
   1bdd0:	mov	r2, #0
   1bdd4:	str	r2, [r3]
   1bdd8:	ldr	r3, [pc, #1452]	; 1c38c <handle_coda_error@@Base+0x1e30>
   1bddc:	mov	r2, #0
   1bde0:	str	r2, [r3]
   1bde4:	ldr	r3, [pc, #1444]	; 1c390 <handle_coda_error@@Base+0x1e34>
   1bde8:	mov	r2, #0
   1bdec:	str	r2, [r3]
   1bdf0:	ldr	r3, [pc, #1436]	; 1c394 <handle_coda_error@@Base+0x1e38>
   1bdf4:	ldr	r3, [r3]
   1bdf8:	ldr	r2, [pc, #1432]	; 1c398 <handle_coda_error@@Base+0x1e3c>
   1bdfc:	str	r3, [r2]
   1be00:	mov	r3, #1
   1be04:	str	r3, [fp, #-28]	; 0xffffffe4
   1be08:	mov	r3, #0
   1be0c:	str	r3, [fp, #-32]	; 0xffffffe0
   1be10:	b	1c234 <handle_coda_error@@Base+0x1cd8>
   1be14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1be18:	lsl	r3, r3, #2
   1be1c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1be20:	add	r3, r2, r3
   1be24:	ldr	r3, [r3]
   1be28:	ldr	r1, [pc, #1388]	; 1c39c <handle_coda_error@@Base+0x1e40>
   1be2c:	mov	r0, r3
   1be30:	bl	12208 <strcmp@plt>
   1be34:	mov	r3, r0
   1be38:	cmp	r3, #0
   1be3c:	beq	1be6c <handle_coda_error@@Base+0x1910>
   1be40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1be44:	lsl	r3, r3, #2
   1be48:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1be4c:	add	r3, r2, r3
   1be50:	ldr	r3, [r3]
   1be54:	ldr	r1, [pc, #1348]	; 1c3a0 <handle_coda_error@@Base+0x1e44>
   1be58:	mov	r0, r3
   1be5c:	bl	12208 <strcmp@plt>
   1be60:	mov	r3, r0
   1be64:	cmp	r3, #0
   1be68:	bne	1be78 <handle_coda_error@@Base+0x191c>
   1be6c:	mov	r3, #0
   1be70:	str	r3, [fp, #-28]	; 0xffffffe4
   1be74:	b	1c228 <handle_coda_error@@Base+0x1ccc>
   1be78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1be7c:	lsl	r3, r3, #2
   1be80:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1be84:	add	r3, r2, r3
   1be88:	ldr	r3, [r3]
   1be8c:	ldr	r1, [pc, #1296]	; 1c3a4 <handle_coda_error@@Base+0x1e48>
   1be90:	mov	r0, r3
   1be94:	bl	12208 <strcmp@plt>
   1be98:	mov	r3, r0
   1be9c:	cmp	r3, #0
   1bea0:	beq	1bed0 <handle_coda_error@@Base+0x1974>
   1bea4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bea8:	lsl	r3, r3, #2
   1beac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1beb0:	add	r3, r2, r3
   1beb4:	ldr	r3, [r3]
   1beb8:	ldr	r1, [pc, #1256]	; 1c3a8 <handle_coda_error@@Base+0x1e4c>
   1bebc:	mov	r0, r3
   1bec0:	bl	12208 <strcmp@plt>
   1bec4:	mov	r3, r0
   1bec8:	cmp	r3, #0
   1becc:	bne	1bf38 <handle_coda_error@@Base+0x19dc>
   1bed0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bed4:	add	r2, r3, #1
   1bed8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bedc:	cmp	r2, r3
   1bee0:	bge	1bf38 <handle_coda_error@@Base+0x19dc>
   1bee4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bee8:	add	r3, r3, #1
   1beec:	lsl	r3, r3, #2
   1bef0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bef4:	add	r3, r2, r3
   1bef8:	ldr	r3, [r3]
   1befc:	ldrb	r3, [r3]
   1bf00:	cmp	r3, #45	; 0x2d
   1bf04:	beq	1bf38 <handle_coda_error@@Base+0x19dc>
   1bf08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bf0c:	add	r3, r3, #1
   1bf10:	lsl	r3, r3, #2
   1bf14:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bf18:	add	r3, r2, r3
   1bf1c:	ldr	r3, [r3]
   1bf20:	ldr	r2, [pc, #1124]	; 1c38c <handle_coda_error@@Base+0x1e30>
   1bf24:	str	r3, [r2]
   1bf28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bf2c:	add	r3, r3, #1
   1bf30:	str	r3, [fp, #-32]	; 0xffffffe0
   1bf34:	b	1c228 <handle_coda_error@@Base+0x1ccc>
   1bf38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bf3c:	lsl	r3, r3, #2
   1bf40:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bf44:	add	r3, r2, r3
   1bf48:	ldr	r3, [r3]
   1bf4c:	ldr	r1, [pc, #1112]	; 1c3ac <handle_coda_error@@Base+0x1e50>
   1bf50:	mov	r0, r3
   1bf54:	bl	12208 <strcmp@plt>
   1bf58:	mov	r3, r0
   1bf5c:	cmp	r3, #0
   1bf60:	beq	1bf90 <handle_coda_error@@Base+0x1a34>
   1bf64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bf68:	lsl	r3, r3, #2
   1bf6c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bf70:	add	r3, r2, r3
   1bf74:	ldr	r3, [r3]
   1bf78:	ldr	r1, [pc, #1072]	; 1c3b0 <handle_coda_error@@Base+0x1e54>
   1bf7c:	mov	r0, r3
   1bf80:	bl	12208 <strcmp@plt>
   1bf84:	mov	r3, r0
   1bf88:	cmp	r3, #0
   1bf8c:	bne	1bff8 <handle_coda_error@@Base+0x1a9c>
   1bf90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bf94:	add	r2, r3, #1
   1bf98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bf9c:	cmp	r2, r3
   1bfa0:	bge	1bff8 <handle_coda_error@@Base+0x1a9c>
   1bfa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bfa8:	add	r3, r3, #1
   1bfac:	lsl	r3, r3, #2
   1bfb0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bfb4:	add	r3, r2, r3
   1bfb8:	ldr	r3, [r3]
   1bfbc:	ldrb	r3, [r3]
   1bfc0:	cmp	r3, #45	; 0x2d
   1bfc4:	beq	1bff8 <handle_coda_error@@Base+0x1a9c>
   1bfc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bfcc:	add	r3, r3, #1
   1bfd0:	lsl	r3, r3, #2
   1bfd4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bfd8:	add	r3, r2, r3
   1bfdc:	ldr	r3, [r3]
   1bfe0:	ldr	r2, [pc, #936]	; 1c390 <handle_coda_error@@Base+0x1e34>
   1bfe4:	str	r3, [r2]
   1bfe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bfec:	add	r3, r3, #1
   1bff0:	str	r3, [fp, #-32]	; 0xffffffe0
   1bff4:	b	1c228 <handle_coda_error@@Base+0x1ccc>
   1bff8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bffc:	lsl	r3, r3, #2
   1c000:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c004:	add	r3, r2, r3
   1c008:	ldr	r3, [r3]
   1c00c:	ldr	r1, [pc, #928]	; 1c3b4 <handle_coda_error@@Base+0x1e58>
   1c010:	mov	r0, r3
   1c014:	bl	12208 <strcmp@plt>
   1c018:	mov	r3, r0
   1c01c:	cmp	r3, #0
   1c020:	bne	1c098 <handle_coda_error@@Base+0x1b3c>
   1c024:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c028:	add	r2, r3, #1
   1c02c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c030:	cmp	r2, r3
   1c034:	bge	1c098 <handle_coda_error@@Base+0x1b3c>
   1c038:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c03c:	add	r3, r3, #1
   1c040:	lsl	r3, r3, #2
   1c044:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c048:	add	r3, r2, r3
   1c04c:	ldr	r3, [r3]
   1c050:	ldrb	r3, [r3]
   1c054:	cmp	r3, #45	; 0x2d
   1c058:	beq	1c098 <handle_coda_error@@Base+0x1b3c>
   1c05c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c060:	add	r3, r3, #1
   1c064:	lsl	r3, r3, #2
   1c068:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c06c:	add	r3, r2, r3
   1c070:	ldr	r3, [r3]
   1c074:	mov	r0, r3
   1c078:	bl	125b0 <atoi@plt>
   1c07c:	mov	r2, r0
   1c080:	ldr	r3, [pc, #816]	; 1c3b8 <handle_coda_error@@Base+0x1e5c>
   1c084:	str	r2, [r3]
   1c088:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c08c:	add	r3, r3, #1
   1c090:	str	r3, [fp, #-32]	; 0xffffffe0
   1c094:	b	1c228 <handle_coda_error@@Base+0x1ccc>
   1c098:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c09c:	lsl	r3, r3, #2
   1c0a0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c0a4:	add	r3, r2, r3
   1c0a8:	ldr	r3, [r3]
   1c0ac:	ldr	r1, [pc, #776]	; 1c3bc <handle_coda_error@@Base+0x1e60>
   1c0b0:	mov	r0, r3
   1c0b4:	bl	12208 <strcmp@plt>
   1c0b8:	mov	r3, r0
   1c0bc:	cmp	r3, #0
   1c0c0:	bne	1c1b0 <handle_coda_error@@Base+0x1c54>
   1c0c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c0c8:	add	r2, r3, #3
   1c0cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c0d0:	cmp	r2, r3
   1c0d4:	bge	1c1b0 <handle_coda_error@@Base+0x1c54>
   1c0d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c0dc:	add	r3, r3, #1
   1c0e0:	lsl	r3, r3, #2
   1c0e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c0e8:	add	r3, r2, r3
   1c0ec:	ldr	r3, [r3]
   1c0f0:	ldrb	r3, [r3]
   1c0f4:	cmp	r3, #45	; 0x2d
   1c0f8:	beq	1c1b0 <handle_coda_error@@Base+0x1c54>
   1c0fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c100:	add	r3, r3, #2
   1c104:	lsl	r3, r3, #2
   1c108:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c10c:	add	r3, r2, r3
   1c110:	ldr	r3, [r3]
   1c114:	ldrb	r3, [r3]
   1c118:	cmp	r3, #45	; 0x2d
   1c11c:	beq	1c1b0 <handle_coda_error@@Base+0x1c54>
   1c120:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c124:	add	r3, r3, #3
   1c128:	lsl	r3, r3, #2
   1c12c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c130:	add	r3, r2, r3
   1c134:	ldr	r3, [r3]
   1c138:	ldrb	r3, [r3]
   1c13c:	cmp	r3, #45	; 0x2d
   1c140:	beq	1c1b0 <handle_coda_error@@Base+0x1c54>
   1c144:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c148:	add	r3, r3, #1
   1c14c:	lsl	r3, r3, #2
   1c150:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c154:	add	r3, r2, r3
   1c158:	ldr	r3, [r3]
   1c15c:	str	r3, [fp, #-16]
   1c160:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c164:	add	r3, r3, #2
   1c168:	lsl	r3, r3, #2
   1c16c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c170:	add	r3, r2, r3
   1c174:	ldr	r3, [r3]
   1c178:	str	r3, [fp, #-20]	; 0xffffffec
   1c17c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c180:	add	r3, r3, #3
   1c184:	lsl	r3, r3, #2
   1c188:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c18c:	add	r3, r2, r3
   1c190:	ldr	r3, [r3]
   1c194:	mov	r0, r3
   1c198:	bl	125b0 <atoi@plt>
   1c19c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c1a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c1a4:	add	r3, r3, #3
   1c1a8:	str	r3, [fp, #-32]	; 0xffffffe0
   1c1ac:	b	1c228 <handle_coda_error@@Base+0x1ccc>
   1c1b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c1b4:	sub	r2, r3, #1
   1c1b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c1bc:	cmp	r2, r3
   1c1c0:	bne	1c204 <handle_coda_error@@Base+0x1ca8>
   1c1c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c1c8:	lsl	r3, r3, #2
   1c1cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c1d0:	add	r3, r2, r3
   1c1d4:	ldr	r3, [r3]
   1c1d8:	ldrb	r3, [r3]
   1c1dc:	cmp	r3, #45	; 0x2d
   1c1e0:	beq	1c204 <handle_coda_error@@Base+0x1ca8>
   1c1e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c1e8:	lsl	r3, r3, #2
   1c1ec:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c1f0:	add	r3, r2, r3
   1c1f4:	ldr	r3, [r3]
   1c1f8:	ldr	r2, [pc, #392]	; 1c388 <handle_coda_error@@Base+0x1e2c>
   1c1fc:	str	r3, [r2]
   1c200:	b	1c228 <handle_coda_error@@Base+0x1ccc>
   1c204:	ldr	r3, [pc, #436]	; 1c3c0 <handle_coda_error@@Base+0x1e64>
   1c208:	ldr	r3, [r3]
   1c20c:	mov	r2, #25
   1c210:	mov	r1, #1
   1c214:	ldr	r0, [pc, #424]	; 1c3c4 <handle_coda_error@@Base+0x1e68>
   1c218:	bl	12370 <fwrite@plt>
   1c21c:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1c220:	mov	r0, #1
   1c224:	bl	1240c <exit@plt>
   1c228:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c22c:	add	r3, r3, #1
   1c230:	str	r3, [fp, #-32]	; 0xffffffe0
   1c234:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c238:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c23c:	cmp	r2, r3
   1c240:	blt	1be14 <handle_coda_error@@Base+0x18b8>
   1c244:	ldr	r3, [pc, #316]	; 1c388 <handle_coda_error@@Base+0x1e2c>
   1c248:	ldr	r3, [r3]
   1c24c:	cmp	r3, #0
   1c250:	beq	1c268 <handle_coda_error@@Base+0x1d0c>
   1c254:	ldr	r3, [pc, #300]	; 1c388 <handle_coda_error@@Base+0x1e2c>
   1c258:	ldr	r3, [r3]
   1c25c:	ldrb	r3, [r3]
   1c260:	cmp	r3, #0
   1c264:	bne	1c28c <handle_coda_error@@Base+0x1d30>
   1c268:	ldr	r3, [pc, #336]	; 1c3c0 <handle_coda_error@@Base+0x1e64>
   1c26c:	ldr	r3, [r3]
   1c270:	mov	r2, #25
   1c274:	mov	r1, #1
   1c278:	ldr	r0, [pc, #324]	; 1c3c4 <handle_coda_error@@Base+0x1e68>
   1c27c:	bl	12370 <fwrite@plt>
   1c280:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1c284:	mov	r0, #1
   1c288:	bl	1240c <exit@plt>
   1c28c:	bl	12478 <coda_init@plt>
   1c290:	mov	r3, r0
   1c294:	cmp	r3, #0
   1c298:	beq	1c2d4 <handle_coda_error@@Base+0x1d78>
   1c29c:	ldr	r3, [pc, #284]	; 1c3c0 <handle_coda_error@@Base+0x1e64>
   1c2a0:	ldr	r4, [r3]
   1c2a4:	bl	12604 <coda_get_errno@plt>
   1c2a8:	mov	r3, r0
   1c2ac:	ldr	r3, [r3]
   1c2b0:	mov	r0, r3
   1c2b4:	bl	125bc <coda_errno_to_string@plt>
   1c2b8:	mov	r3, r0
   1c2bc:	mov	r2, r3
   1c2c0:	ldr	r1, [pc, #256]	; 1c3c8 <handle_coda_error@@Base+0x1e6c>
   1c2c4:	mov	r0, r4
   1c2c8:	bl	12454 <fprintf@plt>
   1c2cc:	mov	r0, #1
   1c2d0:	bl	1240c <exit@plt>
   1c2d4:	mov	r0, #0
   1c2d8:	bl	12484 <coda_set_option_perform_conversions@plt>
   1c2dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c2e0:	bl	121d8 <coda_set_option_use_fast_size_expressions@plt>
   1c2e4:	ldr	r3, [pc, #160]	; 1c38c <handle_coda_error@@Base+0x1e30>
   1c2e8:	ldr	r3, [r3]
   1c2ec:	cmp	r3, #0
   1c2f0:	beq	1c348 <handle_coda_error@@Base+0x1dec>
   1c2f4:	ldr	r3, [pc, #144]	; 1c38c <handle_coda_error@@Base+0x1e30>
   1c2f8:	ldr	r3, [r3]
   1c2fc:	ldr	r1, [pc, #200]	; 1c3cc <handle_coda_error@@Base+0x1e70>
   1c300:	mov	r0, r3
   1c304:	bl	12238 <fopen@plt>
   1c308:	mov	r2, r0
   1c30c:	ldr	r3, [pc, #132]	; 1c398 <handle_coda_error@@Base+0x1e3c>
   1c310:	str	r2, [r3]
   1c314:	ldr	r3, [pc, #124]	; 1c398 <handle_coda_error@@Base+0x1e3c>
   1c318:	ldr	r3, [r3]
   1c31c:	cmp	r3, #0
   1c320:	bne	1c348 <handle_coda_error@@Base+0x1dec>
   1c324:	ldr	r3, [pc, #148]	; 1c3c0 <handle_coda_error@@Base+0x1e64>
   1c328:	ldr	r0, [r3]
   1c32c:	ldr	r3, [pc, #88]	; 1c38c <handle_coda_error@@Base+0x1e30>
   1c330:	ldr	r3, [r3]
   1c334:	mov	r2, r3
   1c338:	ldr	r1, [pc, #144]	; 1c3d0 <handle_coda_error@@Base+0x1e74>
   1c33c:	bl	12454 <fprintf@plt>
   1c340:	mov	r0, #1
   1c344:	bl	1240c <exit@plt>
   1c348:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c34c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c350:	ldr	r0, [fp, #-16]
   1c354:	bl	14894 <print_debug_data@@Base>
   1c358:	ldr	r3, [pc, #44]	; 1c38c <handle_coda_error@@Base+0x1e30>
   1c35c:	ldr	r3, [r3]
   1c360:	cmp	r3, #0
   1c364:	beq	1c378 <handle_coda_error@@Base+0x1e1c>
   1c368:	ldr	r3, [pc, #40]	; 1c398 <handle_coda_error@@Base+0x1e3c>
   1c36c:	ldr	r3, [r3]
   1c370:	mov	r0, r3
   1c374:	bl	124fc <fclose@plt>
   1c378:	bl	123a0 <coda_done@plt>
   1c37c:	nop			; (mov r0, r0)
   1c380:	sub	sp, fp, #8
   1c384:	pop	{r4, fp, pc}
   1c388:	strdeq	pc, [r2], -r0
   1c38c:	andeq	pc, r2, r0, ror #3
   1c390:	strheq	r0, [r3], -r0	; <UNPREDICTABLE>
   1c394:			; <UNDEFINED> instruction: 0x0002f1bc
   1c398:	muleq	r3, r8, r0
   1c39c:	strdeq	lr, [r1], -ip
   1c3a0:	andeq	lr, r1, r8, ror r6
   1c3a4:	ldrdeq	lr, [r1], -r8
   1c3a8:	ldrdeq	lr, [r1], -ip
   1c3ac:	andeq	lr, r1, ip, ror #12
   1c3b0:	andeq	lr, r1, r0, ror r6
   1c3b4:	muleq	r1, r8, r6
   1c3b8:			; <UNDEFINED> instruction: 0x0002f1b0
   1c3bc:	andeq	lr, r1, r4, lsr #13
   1c3c0:			; <UNDEFINED> instruction: 0x0002f1b8
   1c3c4:	andeq	lr, r1, r0, lsr #11
   1c3c8:	andeq	lr, r1, r0, ror #9
   1c3cc:	andeq	lr, r1, r8, lsr #12
   1c3d0:	andeq	lr, r1, ip, lsr #12

0001c3d4 <main@@Base>:
   1c3d4:	push	{r4, fp, lr}
   1c3d8:	add	fp, sp, #8
   1c3dc:	sub	sp, sp, #20
   1c3e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c3e4:	str	r1, [fp, #-28]	; 0xffffffe4
   1c3e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c3ec:	cmp	r3, #1
   1c3f0:	beq	1c43c <main@@Base+0x68>
   1c3f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c3f8:	add	r3, r3, #4
   1c3fc:	ldr	r3, [r3]
   1c400:	ldr	r1, [pc, #960]	; 1c7c8 <main@@Base+0x3f4>
   1c404:	mov	r0, r3
   1c408:	bl	12208 <strcmp@plt>
   1c40c:	mov	r3, r0
   1c410:	cmp	r3, #0
   1c414:	beq	1c43c <main@@Base+0x68>
   1c418:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c41c:	add	r3, r3, #4
   1c420:	ldr	r3, [r3]
   1c424:	ldr	r1, [pc, #928]	; 1c7cc <main@@Base+0x3f8>
   1c428:	mov	r0, r3
   1c42c:	bl	12208 <strcmp@plt>
   1c430:	mov	r3, r0
   1c434:	cmp	r3, #0
   1c438:	bne	1c448 <main@@Base+0x74>
   1c43c:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1c440:	mov	r0, #0
   1c444:	bl	1240c <exit@plt>
   1c448:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c44c:	add	r3, r3, #4
   1c450:	ldr	r3, [r3]
   1c454:	ldr	r1, [pc, #884]	; 1c7d0 <main@@Base+0x3fc>
   1c458:	mov	r0, r3
   1c45c:	bl	12208 <strcmp@plt>
   1c460:	mov	r3, r0
   1c464:	cmp	r3, #0
   1c468:	beq	1c490 <main@@Base+0xbc>
   1c46c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c470:	add	r3, r3, #4
   1c474:	ldr	r3, [r3]
   1c478:	ldr	r1, [pc, #852]	; 1c7d4 <main@@Base+0x400>
   1c47c:	mov	r0, r3
   1c480:	bl	12208 <strcmp@plt>
   1c484:	mov	r3, r0
   1c488:	cmp	r3, #0
   1c48c:	bne	1c49c <main@@Base+0xc8>
   1c490:	bl	1a034 <print_yaml_data@@Base+0x130>
   1c494:	mov	r0, #0
   1c498:	bl	1240c <exit@plt>
   1c49c:	mov	r3, #1
   1c4a0:	str	r3, [fp, #-16]
   1c4a4:	ldr	r3, [fp, #-16]
   1c4a8:	add	r2, r3, #1
   1c4ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c4b0:	cmp	r2, r3
   1c4b4:	bge	1c514 <main@@Base+0x140>
   1c4b8:	ldr	r3, [fp, #-16]
   1c4bc:	lsl	r3, r3, #2
   1c4c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c4c4:	add	r3, r2, r3
   1c4c8:	ldr	r3, [r3]
   1c4cc:	ldr	r1, [pc, #772]	; 1c7d8 <main@@Base+0x404>
   1c4d0:	mov	r0, r3
   1c4d4:	bl	12208 <strcmp@plt>
   1c4d8:	mov	r3, r0
   1c4dc:	cmp	r3, #0
   1c4e0:	bne	1c514 <main@@Base+0x140>
   1c4e4:	ldr	r3, [fp, #-16]
   1c4e8:	add	r3, r3, #1
   1c4ec:	lsl	r3, r3, #2
   1c4f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c4f4:	add	r3, r2, r3
   1c4f8:	ldr	r3, [r3]
   1c4fc:	mov	r0, r3
   1c500:	bl	12328 <coda_set_definition_path@plt>
   1c504:	ldr	r3, [fp, #-16]
   1c508:	add	r3, r3, #2
   1c50c:	str	r3, [fp, #-16]
   1c510:	b	1c578 <main@@Base+0x1a4>
   1c514:	ldr	r3, [pc, #704]	; 1c7dc <main@@Base+0x408>
   1c518:	str	r3, [fp, #-20]	; 0xffffffec
   1c51c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c520:	ldr	r3, [r3]
   1c524:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c528:	mov	r1, #0
   1c52c:	mov	r0, r3
   1c530:	bl	122a4 <coda_set_definition_path_conditional@plt>
   1c534:	mov	r3, r0
   1c538:	cmp	r3, #0
   1c53c:	beq	1c578 <main@@Base+0x1a4>
   1c540:	ldr	r3, [pc, #664]	; 1c7e0 <main@@Base+0x40c>
   1c544:	ldr	r4, [r3]
   1c548:	bl	12604 <coda_get_errno@plt>
   1c54c:	mov	r3, r0
   1c550:	ldr	r3, [r3]
   1c554:	mov	r0, r3
   1c558:	bl	125bc <coda_errno_to_string@plt>
   1c55c:	mov	r3, r0
   1c560:	mov	r2, r3
   1c564:	ldr	r1, [pc, #632]	; 1c7e4 <main@@Base+0x410>
   1c568:	mov	r0, r4
   1c56c:	bl	12454 <fprintf@plt>
   1c570:	mov	r0, #1
   1c574:	bl	1240c <exit@plt>
   1c578:	ldr	r3, [fp, #-16]
   1c57c:	lsl	r3, r3, #2
   1c580:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c584:	add	r3, r2, r3
   1c588:	ldr	r3, [r3]
   1c58c:	ldr	r1, [pc, #596]	; 1c7e8 <main@@Base+0x414>
   1c590:	mov	r0, r3
   1c594:	bl	12208 <strcmp@plt>
   1c598:	mov	r3, r0
   1c59c:	cmp	r3, #0
   1c5a0:	bne	1c5e4 <main@@Base+0x210>
   1c5a4:	ldr	r3, [pc, #576]	; 1c7ec <main@@Base+0x418>
   1c5a8:	mov	r2, #0
   1c5ac:	str	r2, [r3]
   1c5b0:	ldr	r3, [fp, #-16]
   1c5b4:	add	r3, r3, #1
   1c5b8:	str	r3, [fp, #-16]
   1c5bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c5c0:	ldr	r3, [fp, #-16]
   1c5c4:	sub	r0, r2, r3
   1c5c8:	ldr	r3, [fp, #-16]
   1c5cc:	lsl	r3, r3, #2
   1c5d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c5d4:	add	r3, r2, r3
   1c5d8:	mov	r1, r3
   1c5dc:	bl	1a5b4 <handle_coda_error@@Base+0x58>
   1c5e0:	b	1c7b8 <main@@Base+0x3e4>
   1c5e4:	ldr	r3, [fp, #-16]
   1c5e8:	lsl	r3, r3, #2
   1c5ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c5f0:	add	r3, r2, r3
   1c5f4:	ldr	r3, [r3]
   1c5f8:	ldr	r1, [pc, #496]	; 1c7f0 <main@@Base+0x41c>
   1c5fc:	mov	r0, r3
   1c600:	bl	12208 <strcmp@plt>
   1c604:	mov	r3, r0
   1c608:	cmp	r3, #0
   1c60c:	bne	1c650 <main@@Base+0x27c>
   1c610:	ldr	r3, [pc, #468]	; 1c7ec <main@@Base+0x418>
   1c614:	mov	r2, #1
   1c618:	str	r2, [r3]
   1c61c:	ldr	r3, [fp, #-16]
   1c620:	add	r3, r3, #1
   1c624:	str	r3, [fp, #-16]
   1c628:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c62c:	ldr	r3, [fp, #-16]
   1c630:	sub	r0, r2, r3
   1c634:	ldr	r3, [fp, #-16]
   1c638:	lsl	r3, r3, #2
   1c63c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c640:	add	r3, r2, r3
   1c644:	mov	r1, r3
   1c648:	bl	1ab70 <handle_coda_error@@Base+0x614>
   1c64c:	b	1c7b8 <main@@Base+0x3e4>
   1c650:	ldr	r3, [fp, #-16]
   1c654:	lsl	r3, r3, #2
   1c658:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c65c:	add	r3, r2, r3
   1c660:	ldr	r3, [r3]
   1c664:	ldr	r1, [pc, #392]	; 1c7f4 <main@@Base+0x420>
   1c668:	mov	r0, r3
   1c66c:	bl	12208 <strcmp@plt>
   1c670:	mov	r3, r0
   1c674:	cmp	r3, #0
   1c678:	bne	1c6bc <main@@Base+0x2e8>
   1c67c:	ldr	r3, [pc, #360]	; 1c7ec <main@@Base+0x418>
   1c680:	mov	r2, #3
   1c684:	str	r2, [r3]
   1c688:	ldr	r3, [fp, #-16]
   1c68c:	add	r3, r3, #1
   1c690:	str	r3, [fp, #-16]
   1c694:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c698:	ldr	r3, [fp, #-16]
   1c69c:	sub	r0, r2, r3
   1c6a0:	ldr	r3, [fp, #-16]
   1c6a4:	lsl	r3, r3, #2
   1c6a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c6ac:	add	r3, r2, r3
   1c6b0:	mov	r1, r3
   1c6b4:	bl	1b368 <handle_coda_error@@Base+0xe0c>
   1c6b8:	b	1c7b8 <main@@Base+0x3e4>
   1c6bc:	ldr	r3, [fp, #-16]
   1c6c0:	lsl	r3, r3, #2
   1c6c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c6c8:	add	r3, r2, r3
   1c6cc:	ldr	r3, [r3]
   1c6d0:	ldr	r1, [pc, #288]	; 1c7f8 <main@@Base+0x424>
   1c6d4:	mov	r0, r3
   1c6d8:	bl	12208 <strcmp@plt>
   1c6dc:	mov	r3, r0
   1c6e0:	cmp	r3, #0
   1c6e4:	bne	1c728 <main@@Base+0x354>
   1c6e8:	ldr	r3, [pc, #252]	; 1c7ec <main@@Base+0x418>
   1c6ec:	mov	r2, #4
   1c6f0:	str	r2, [r3]
   1c6f4:	ldr	r3, [fp, #-16]
   1c6f8:	add	r3, r3, #1
   1c6fc:	str	r3, [fp, #-16]
   1c700:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c704:	ldr	r3, [fp, #-16]
   1c708:	sub	r0, r2, r3
   1c70c:	ldr	r3, [fp, #-16]
   1c710:	lsl	r3, r3, #2
   1c714:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c718:	add	r3, r2, r3
   1c71c:	mov	r1, r3
   1c720:	bl	1b884 <handle_coda_error@@Base+0x1328>
   1c724:	b	1c7b8 <main@@Base+0x3e4>
   1c728:	ldr	r3, [fp, #-16]
   1c72c:	lsl	r3, r3, #2
   1c730:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c734:	add	r3, r2, r3
   1c738:	ldr	r3, [r3]
   1c73c:	ldr	r1, [pc, #184]	; 1c7fc <main@@Base+0x428>
   1c740:	mov	r0, r3
   1c744:	bl	12208 <strcmp@plt>
   1c748:	mov	r3, r0
   1c74c:	cmp	r3, #0
   1c750:	bne	1c794 <main@@Base+0x3c0>
   1c754:	ldr	r3, [pc, #144]	; 1c7ec <main@@Base+0x418>
   1c758:	mov	r2, #5
   1c75c:	str	r2, [r3]
   1c760:	ldr	r3, [fp, #-16]
   1c764:	add	r3, r3, #1
   1c768:	str	r3, [fp, #-16]
   1c76c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c770:	ldr	r3, [fp, #-16]
   1c774:	sub	r0, r2, r3
   1c778:	ldr	r3, [fp, #-16]
   1c77c:	lsl	r3, r3, #2
   1c780:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c784:	add	r3, r2, r3
   1c788:	mov	r1, r3
   1c78c:	bl	1bda0 <handle_coda_error@@Base+0x1844>
   1c790:	b	1c7b8 <main@@Base+0x3e4>
   1c794:	ldr	r3, [pc, #68]	; 1c7e0 <main@@Base+0x40c>
   1c798:	ldr	r3, [r3]
   1c79c:	mov	r2, #25
   1c7a0:	mov	r1, #1
   1c7a4:	ldr	r0, [pc, #84]	; 1c800 <main@@Base+0x42c>
   1c7a8:	bl	12370 <fwrite@plt>
   1c7ac:	bl	1a070 <print_yaml_data@@Base+0x16c>
   1c7b0:	mov	r0, #1
   1c7b4:	bl	1240c <exit@plt>
   1c7b8:	mov	r3, #0
   1c7bc:	mov	r0, r3
   1c7c0:	sub	sp, fp, #8
   1c7c4:	pop	{r4, fp, pc}
   1c7c8:			; <UNDEFINED> instruction: 0x0001e6b0
   1c7cc:			; <UNDEFINED> instruction: 0x0001e6b4
   1c7d0:			; <UNDEFINED> instruction: 0x0001e6bc
   1c7d4:	andeq	lr, r1, r0, asr #13
   1c7d8:	andeq	lr, r1, ip, asr #13
   1c7dc:	ldrdeq	lr, [r1], -r0
   1c7e0:			; <UNDEFINED> instruction: 0x0002f1b8
   1c7e4:	andeq	lr, r1, r0, ror #9
   1c7e8:	andeq	lr, r1, ip, ror #13
   1c7ec:	andeq	r0, r3, ip, lsr #1
   1c7f0:	strdeq	lr, [r1], -r4
   1c7f4:	strdeq	lr, [r1], -ip
   1c7f8:	andeq	lr, r1, r4, lsl #14
   1c7fc:	andeq	lr, r1, ip, lsl #14
   1c800:	andeq	lr, r1, r0, lsr #11
   1c804:	cmp	r3, #0
   1c808:	cmpeq	r2, #0
   1c80c:	bne	1c830 <main@@Base+0x45c>
   1c810:	cmp	r1, #0
   1c814:	movlt	r1, #-2147483648	; 0x80000000
   1c818:	movlt	r0, #0
   1c81c:	blt	1c82c <main@@Base+0x458>
   1c820:	cmpeq	r0, #0
   1c824:	mvnne	r1, #-2147483648	; 0x80000000
   1c828:	mvnne	r0, #0
   1c82c:	b	1c8d8 <main@@Base+0x504>
   1c830:	sub	sp, sp, #8
   1c834:	push	{sp, lr}
   1c838:	cmp	r1, #0
   1c83c:	blt	1c85c <main@@Base+0x488>
   1c840:	cmp	r3, #0
   1c844:	blt	1c890 <main@@Base+0x4bc>
   1c848:	bl	1c8e8 <main@@Base+0x514>
   1c84c:	ldr	lr, [sp, #4]
   1c850:	add	sp, sp, #8
   1c854:	pop	{r2, r3}
   1c858:	bx	lr
   1c85c:	rsbs	r0, r0, #0
   1c860:	sbc	r1, r1, r1, lsl #1
   1c864:	cmp	r3, #0
   1c868:	blt	1c8b4 <main@@Base+0x4e0>
   1c86c:	bl	1c8e8 <main@@Base+0x514>
   1c870:	ldr	lr, [sp, #4]
   1c874:	add	sp, sp, #8
   1c878:	pop	{r2, r3}
   1c87c:	rsbs	r0, r0, #0
   1c880:	sbc	r1, r1, r1, lsl #1
   1c884:	rsbs	r2, r2, #0
   1c888:	sbc	r3, r3, r3, lsl #1
   1c88c:	bx	lr
   1c890:	rsbs	r2, r2, #0
   1c894:	sbc	r3, r3, r3, lsl #1
   1c898:	bl	1c8e8 <main@@Base+0x514>
   1c89c:	ldr	lr, [sp, #4]
   1c8a0:	add	sp, sp, #8
   1c8a4:	pop	{r2, r3}
   1c8a8:	rsbs	r0, r0, #0
   1c8ac:	sbc	r1, r1, r1, lsl #1
   1c8b0:	bx	lr
   1c8b4:	rsbs	r2, r2, #0
   1c8b8:	sbc	r3, r3, r3, lsl #1
   1c8bc:	bl	1c8e8 <main@@Base+0x514>
   1c8c0:	ldr	lr, [sp, #4]
   1c8c4:	add	sp, sp, #8
   1c8c8:	pop	{r2, r3}
   1c8cc:	rsbs	r2, r2, #0
   1c8d0:	sbc	r3, r3, r3, lsl #1
   1c8d4:	bx	lr
   1c8d8:	push	{r1, lr}
   1c8dc:	mov	r0, #8
   1c8e0:	bl	121e4 <raise@plt>
   1c8e4:	pop	{r1, pc}
   1c8e8:	cmp	r1, r3
   1c8ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c8f0:	cmpeq	r0, r2
   1c8f4:	mov	r4, r0
   1c8f8:	mov	r5, r1
   1c8fc:	ldr	r9, [sp, #28]
   1c900:	movcc	r0, #0
   1c904:	movcc	r1, #0
   1c908:	bcc	1ca00 <main@@Base+0x62c>
   1c90c:	cmp	r3, #0
   1c910:	clzeq	ip, r2
   1c914:	clzne	ip, r3
   1c918:	addeq	ip, ip, #32
   1c91c:	cmp	r5, #0
   1c920:	clzeq	r1, r4
   1c924:	addeq	r1, r1, #32
   1c928:	clzne	r1, r5
   1c92c:	sub	ip, ip, r1
   1c930:	sub	lr, ip, #32
   1c934:	lsl	r7, r3, ip
   1c938:	rsb	r8, ip, #32
   1c93c:	orr	r7, r7, r2, lsl lr
   1c940:	orr	r7, r7, r2, lsr r8
   1c944:	lsl	r6, r2, ip
   1c948:	cmp	r5, r7
   1c94c:	cmpeq	r4, r6
   1c950:	movcc	r0, #0
   1c954:	movcc	r1, #0
   1c958:	bcc	1c974 <main@@Base+0x5a0>
   1c95c:	mov	r3, #1
   1c960:	subs	r4, r4, r6
   1c964:	lsl	r1, r3, lr
   1c968:	lsl	r0, r3, ip
   1c96c:	orr	r1, r1, r3, lsr r8
   1c970:	sbc	r5, r5, r7
   1c974:	cmp	ip, #0
   1c978:	beq	1ca00 <main@@Base+0x62c>
   1c97c:	lsrs	r3, r7, #1
   1c980:	rrx	r2, r6
   1c984:	mov	r6, ip
   1c988:	b	1c9ac <main@@Base+0x5d8>
   1c98c:	subs	r4, r4, r2
   1c990:	sbc	r5, r5, r3
   1c994:	adds	r4, r4, r4
   1c998:	adc	r5, r5, r5
   1c99c:	adds	r4, r4, #1
   1c9a0:	adc	r5, r5, #0
   1c9a4:	subs	r6, r6, #1
   1c9a8:	beq	1c9c8 <main@@Base+0x5f4>
   1c9ac:	cmp	r5, r3
   1c9b0:	cmpeq	r4, r2
   1c9b4:	bcs	1c98c <main@@Base+0x5b8>
   1c9b8:	adds	r4, r4, r4
   1c9bc:	adc	r5, r5, r5
   1c9c0:	subs	r6, r6, #1
   1c9c4:	bne	1c9ac <main@@Base+0x5d8>
   1c9c8:	lsr	r6, r4, ip
   1c9cc:	lsr	r7, r5, ip
   1c9d0:	orr	r6, r6, r5, lsl r8
   1c9d4:	adds	r2, r0, r4
   1c9d8:	orr	r6, r6, r5, lsr lr
   1c9dc:	adc	r3, r1, r5
   1c9e0:	lsl	r1, r7, ip
   1c9e4:	orr	r1, r1, r6, lsl lr
   1c9e8:	lsl	r0, r6, ip
   1c9ec:	orr	r1, r1, r6, lsr r8
   1c9f0:	subs	r0, r2, r0
   1c9f4:	mov	r4, r6
   1c9f8:	mov	r5, r7
   1c9fc:	sbc	r1, r3, r1
   1ca00:	cmp	r9, #0
   1ca04:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1ca08:	strd	r4, [r9]
   1ca0c:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001ca10 <__libc_csu_init@@Base>:
   1ca10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ca14:	mov	r7, r0
   1ca18:	ldr	r6, [pc, #72]	; 1ca68 <__libc_csu_init@@Base+0x58>
   1ca1c:	ldr	r5, [pc, #72]	; 1ca6c <__libc_csu_init@@Base+0x5c>
   1ca20:	add	r6, pc, r6
   1ca24:	add	r5, pc, r5
   1ca28:	sub	r6, r6, r5
   1ca2c:	mov	r8, r1
   1ca30:	mov	r9, r2
   1ca34:	bl	121a0 <coda_cursor_get_byte_size@plt-0x20>
   1ca38:	asrs	r6, r6, #2
   1ca3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ca40:	mov	r4, #0
   1ca44:	add	r4, r4, #1
   1ca48:	ldr	r3, [r5], #4
   1ca4c:	mov	r2, r9
   1ca50:	mov	r1, r8
   1ca54:	mov	r0, r7
   1ca58:	blx	r3
   1ca5c:	cmp	r6, r4
   1ca60:	bne	1ca44 <__libc_csu_init@@Base+0x34>
   1ca64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ca68:	ldrdeq	r2, [r1], -r0
   1ca6c:	andeq	r2, r1, r8, asr #9

0001ca70 <__libc_csu_fini@@Base>:
   1ca70:	bx	lr

Disassembly of section .fini:

0001ca74 <.fini>:
   1ca74:	push	{r3, lr}
   1ca78:	pop	{r3, pc}
