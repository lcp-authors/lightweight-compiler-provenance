
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/expat/xmlparse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <errorProcessor>:
       0:	ldr	r0, [r0, #292]	; 0x124
       4:	bx	lr

00000008 <normalizeLines>:
       8:	ldrb	r3, [r0]
       c:	cmp	r3, #0
      10:	bne	24 <normalizeLines+0x1c>
      14:	b	88 <normalizeLines+0x80>
      18:	ldrb	r3, [r0, #1]!
      1c:	cmp	r3, #0
      20:	beq	8c <normalizeLines+0x84>
      24:	cmp	r3, #13
      28:	bne	18 <normalizeLines+0x10>
      2c:	mov	r2, r0
      30:	mov	r3, #13
      34:	mov	ip, #10
      38:	b	50 <normalizeLines+0x48>
      3c:	strb	r3, [r0, #-1]
      40:	ldrb	r3, [r2, #1]
      44:	mov	r2, r1
      48:	cmp	r3, #0
      4c:	beq	84 <normalizeLines+0x7c>
      50:	cmp	r3, #13
      54:	add	r0, r0, #1
      58:	add	r1, r2, #1
      5c:	bne	3c <normalizeLines+0x34>
      60:	strb	ip, [r0, #-1]
      64:	ldrb	r3, [r2, #1]
      68:	cmp	r3, #10
      6c:	movne	r2, r1
      70:	bne	48 <normalizeLines+0x40>
      74:	ldrb	r3, [r2, #2]
      78:	add	r2, r2, #2
      7c:	cmp	r3, #0
      80:	bne	50 <normalizeLines+0x48>
      84:	strb	r3, [r0]
      88:	bx	lr
      8c:	bx	lr

00000090 <reportDefault>:
      90:	strd	r4, [sp, #-28]!	; 0xffffffe4
      94:	mov	r5, r1
      98:	mov	r4, r0
      9c:	strd	r6, [sp, #8]
      a0:	mov	r6, r3
      a4:	strd	r8, [sp, #16]
      a8:	str	lr, [sp, #24]
      ac:	sub	sp, sp, #28
      b0:	ldrb	r1, [r1, #72]	; 0x48
      b4:	str	r2, [sp, #12]
      b8:	cmp	r1, #0
      bc:	bne	148 <reportDefault+0xb8>
      c0:	ldr	r3, [r0, #152]	; 0x98
      c4:	cmp	r3, r5
      c8:	ldrne	r7, [r0, #308]	; 0x134
      cc:	addeq	r7, r0, #296	; 0x128
      d0:	addeq	r8, r0, #300	; 0x12c
      d4:	addne	r8, r7, #4
      d8:	ldr	lr, [r4, #52]	; 0x34
      dc:	add	r3, sp, #20
      e0:	mov	r2, r6
      e4:	add	r1, sp, #12
      e8:	mov	r0, r5
      ec:	ldr	ip, [r4, #56]	; 0x38
      f0:	ldr	r9, [r5, #60]	; 0x3c
      f4:	str	ip, [sp]
      f8:	str	lr, [sp, #20]
      fc:	blx	r9
     100:	ldr	r2, [sp, #12]
     104:	ldr	r3, [r4, #88]	; 0x58
     108:	str	r2, [r8]
     10c:	ldr	r2, [sp, #20]
     110:	ldr	r0, [r4, #4]
     114:	ldr	r1, [r4, #52]	; 0x34
     118:	sub	r2, r2, r1
     11c:	blx	r3
     120:	ldr	r3, [sp, #12]
     124:	cmp	r3, r6
     128:	str	r3, [r7]
     12c:	bne	d8 <reportDefault+0x48>
     130:	add	sp, sp, #28
     134:	ldrd	r4, [sp]
     138:	ldrd	r6, [sp, #8]
     13c:	ldrd	r8, [sp, #16]
     140:	add	sp, sp, #24
     144:	pop	{pc}		; (ldr pc, [sp], #4)
     148:	mov	r1, r2
     14c:	sub	r2, r3, r2
     150:	ldr	r0, [r0, #4]
     154:	ldr	r3, [r4, #88]	; 0x58
     158:	blx	r3
     15c:	b	130 <reportDefault+0xa0>

00000160 <doCdataSection>:
     160:	strd	r4, [sp, #-36]!	; 0xffffffdc
     164:	mov	r4, r0
     168:	mov	r5, r1
     16c:	strd	r6, [sp, #8]
     170:	mov	r7, r2
     174:	ldr	r2, [r0, #152]	; 0x98
     178:	strd	r8, [sp, #16]
     17c:	mov	r9, r3
     180:	strd	sl, [sp, #24]
     184:	mov	sl, #10
     188:	str	lr, [sp, #32]
     18c:	sub	sp, sp, #36	; 0x24
     190:	ldrb	fp, [sp, #76]	; 0x4c
     194:	cmp	r2, r1
     198:	mov	r2, #0
     19c:	ldrne	r6, [r0, #308]	; 0x134
     1a0:	addeq	r6, r0, #296	; 0x128
     1a4:	addeq	r8, r0, #300	; 0x12c
     1a8:	ldr	r3, [r7]
     1ac:	addne	r8, r6, #4
     1b0:	streq	r3, [r0, #296]	; 0x128
     1b4:	str	r3, [sp, #20]
     1b8:	str	r3, [r6]
     1bc:	str	r2, [r7]
     1c0:	add	r3, sp, #24
     1c4:	mov	r2, r9
     1c8:	ldr	ip, [r5, #8]
     1cc:	mov	r0, r5
     1d0:	ldr	r1, [sp, #20]
     1d4:	blx	ip
     1d8:	ldr	r3, [sp, #24]
     1dc:	add	r0, r0, #4
     1e0:	str	r3, [r8]
     1e4:	cmp	r0, #44	; 0x2c
     1e8:	ldrls	pc, [pc, r0, lsl #2]
     1ec:	b	3b8 <doCdataSection+0x258>
     1f0:	.word	0x000002f4
     1f4:	.word	0x000003b8
     1f8:	.word	0x00000314
     1fc:	.word	0x000002f4
     200:	.word	0x00000324
     204:	.word	0x000003b8
     208:	.word	0x000003b8
     20c:	.word	0x000003b8
     210:	.word	0x000003b8
     214:	.word	0x000003b8
     218:	.word	0x00000330
     21c:	.word	0x00000390
     220:	.word	0x000003b8
     224:	.word	0x000003b8
     228:	.word	0x000003b8
     22c:	.word	0x000003b8
     230:	.word	0x000003b8
     234:	.word	0x000003b8
     238:	.word	0x000003b8
     23c:	.word	0x000003b8
     240:	.word	0x000003b8
     244:	.word	0x000003b8
     248:	.word	0x000003b8
     24c:	.word	0x000003b8
     250:	.word	0x000003b8
     254:	.word	0x000003b8
     258:	.word	0x000003b8
     25c:	.word	0x000003b8
     260:	.word	0x000003b8
     264:	.word	0x000003b8
     268:	.word	0x000003b8
     26c:	.word	0x000003b8
     270:	.word	0x000003b8
     274:	.word	0x000003b8
     278:	.word	0x000003b8
     27c:	.word	0x000003b8
     280:	.word	0x000003b8
     284:	.word	0x000003b8
     288:	.word	0x000003b8
     28c:	.word	0x000003b8
     290:	.word	0x000003b8
     294:	.word	0x000003b8
     298:	.word	0x000003b8
     29c:	.word	0x000003b8
     2a0:	.word	0x000002a4
     2a4:	ldr	r2, [r4, #84]	; 0x54
     2a8:	cmp	r2, #0
     2ac:	beq	3f0 <doCdataSection+0x290>
     2b0:	ldr	r0, [r4, #4]
     2b4:	blx	r2
     2b8:	ldr	r2, [r4, #496]	; 0x1f0
     2bc:	ldr	r3, [sp, #24]
     2c0:	cmp	r2, #2
     2c4:	ldr	r2, [sp, #72]	; 0x48
     2c8:	moveq	r0, #35	; 0x23
     2cc:	movne	r0, #0
     2d0:	str	r3, [r7]
     2d4:	str	r3, [r2]
     2d8:	add	sp, sp, #36	; 0x24
     2dc:	ldrd	r4, [sp]
     2e0:	ldrd	r6, [sp, #8]
     2e4:	ldrd	r8, [sp, #16]
     2e8:	ldrd	sl, [sp, #24]
     2ec:	add	sp, sp, #32
     2f0:	pop	{pc}		; (ldr pc, [sp], #4)
     2f4:	cmp	fp, #0
     2f8:	moveq	r0, #20
     2fc:	beq	2d8 <doCdataSection+0x178>
     300:	ldr	r3, [sp, #20]
     304:	mov	r0, #0
     308:	ldr	r2, [sp, #72]	; 0x48
     30c:	str	r3, [r2]
     310:	b	2d8 <doCdataSection+0x178>
     314:	cmp	fp, #0
     318:	moveq	r0, #6
     31c:	beq	2d8 <doCdataSection+0x178>
     320:	b	300 <doCdataSection+0x1a0>
     324:	mov	r0, #4
     328:	str	r3, [r6]
     32c:	b	2d8 <doCdataSection+0x178>
     330:	ldr	r2, [r4, #68]	; 0x44
     334:	subs	ip, r2, #0
     338:	beq	3cc <doCdataSection+0x26c>
     33c:	ldrb	r2, [r5, #72]	; 0x48
     340:	cmp	r2, #0
     344:	beq	410 <doCdataSection+0x2b0>
     348:	ldr	r1, [sp, #20]
     34c:	ldr	r0, [r4, #4]
     350:	sub	r2, r3, r1
     354:	mov	r3, ip
     358:	blx	r3
     35c:	ldr	r3, [sp, #24]
     360:	str	r3, [sp, #20]
     364:	ldr	r2, [r4, #496]	; 0x1f0
     368:	str	r3, [r6]
     36c:	cmp	r2, #2
     370:	beq	3c4 <doCdataSection+0x264>
     374:	cmp	r2, #3
     378:	bne	1c0 <doCdataSection+0x60>
     37c:	ldr	r3, [sp, #24]
     380:	mov	r0, #0
     384:	ldr	r2, [sp, #72]	; 0x48
     388:	str	r3, [r2]
     38c:	b	2d8 <doCdataSection+0x178>
     390:	ldr	ip, [r4, #68]	; 0x44
     394:	cmp	ip, #0
     398:	beq	3cc <doCdataSection+0x26c>
     39c:	mov	r2, #1
     3a0:	add	r1, sp, #28
     3a4:	strb	sl, [sp, #28]
     3a8:	ldr	r0, [r4, #4]
     3ac:	blx	ip
     3b0:	ldr	r3, [sp, #24]
     3b4:	b	360 <doCdataSection+0x200>
     3b8:	mov	r0, #23
     3bc:	str	r3, [r6]
     3c0:	b	2d8 <doCdataSection+0x178>
     3c4:	mov	r0, #35	; 0x23
     3c8:	b	2d8 <doCdataSection+0x178>
     3cc:	ldr	r2, [r4, #88]	; 0x58
     3d0:	cmp	r2, #0
     3d4:	beq	3e8 <doCdataSection+0x288>
     3d8:	mov	r1, r5
     3dc:	mov	r0, r4
     3e0:	ldr	r2, [sp, #20]
     3e4:	bl	90 <reportDefault>
     3e8:	ldr	r3, [sp, #24]
     3ec:	b	360 <doCdataSection+0x200>
     3f0:	ldr	r2, [r4, #88]	; 0x58
     3f4:	cmp	r2, #0
     3f8:	beq	2b8 <doCdataSection+0x158>
     3fc:	mov	r1, r5
     400:	mov	r0, r4
     404:	ldr	r2, [sp, #20]
     408:	bl	90 <reportDefault>
     40c:	b	2b8 <doCdataSection+0x158>
     410:	str	r7, [sp, #8]
     414:	str	r9, [sp, #12]
     418:	mov	r9, ip
     41c:	b	424 <doCdataSection+0x2c4>
     420:	str	r2, [r6]
     424:	ldr	lr, [r4, #52]	; 0x34
     428:	add	r3, sp, #28
     42c:	add	r1, sp, #20
     430:	mov	r0, r5
     434:	ldr	ip, [r4, #56]	; 0x38
     438:	ldr	r2, [sp, #24]
     43c:	str	lr, [sp, #28]
     440:	ldr	r7, [r5, #60]	; 0x3c
     444:	str	ip, [sp]
     448:	blx	r7
     44c:	ldr	r3, [sp, #24]
     450:	str	r3, [r8]
     454:	ldr	r2, [sp, #28]
     458:	ldr	r0, [r4, #4]
     45c:	ldr	r1, [r4, #52]	; 0x34
     460:	sub	r2, r2, r1
     464:	blx	r9
     468:	ldrd	r2, [sp, #20]
     46c:	cmp	r2, r3
     470:	bne	420 <doCdataSection+0x2c0>
     474:	ldr	r7, [sp, #8]
     478:	ldr	r9, [sp, #12]
     47c:	b	360 <doCdataSection+0x200>

00000480 <doIgnoreSection>:
     480:	strd	r4, [sp, #-36]!	; 0xffffffdc
     484:	mov	r4, r0
     488:	mov	r5, r1
     48c:	strd	r6, [sp, #8]
     490:	mov	r7, r2
     494:	ldr	r2, [r0, #152]	; 0x98
     498:	strd	r8, [sp, #16]
     49c:	ldr	r6, [r7]
     4a0:	strd	sl, [sp, #24]
     4a4:	str	lr, [sp, #32]
     4a8:	sub	sp, sp, #12
     4ac:	cmp	r2, r1
     4b0:	mov	r2, r3
     4b4:	ldr	fp, [r5, #12]
     4b8:	addeq	r8, r0, #296	; 0x128
     4bc:	addeq	r9, r0, #300	; 0x12c
     4c0:	ldrne	r8, [r0, #308]	; 0x134
     4c4:	add	r3, sp, #4
     4c8:	mov	r1, r6
     4cc:	streq	r6, [r0, #296]	; 0x128
     4d0:	mov	r0, #0
     4d4:	ldrb	sl, [sp, #52]	; 0x34
     4d8:	str	r6, [r8]
     4dc:	addne	r9, r8, #4
     4e0:	str	r0, [r7]
     4e4:	mov	r0, r5
     4e8:	blx	fp
     4ec:	ldr	r3, [sp, #4]
     4f0:	add	r0, r0, #4
     4f4:	str	r3, [r9]
     4f8:	cmp	r0, #46	; 0x2e
     4fc:	ldrls	pc, [pc, r0, lsl #2]
     500:	b	650 <doIgnoreSection+0x1d0>
     504:	.word	0x00000624
     508:	.word	0x00000650
     50c:	.word	0x00000640
     510:	.word	0x00000624
     514:	.word	0x00000600
     518:	.word	0x00000650
     51c:	.word	0x00000650
     520:	.word	0x00000650
     524:	.word	0x00000650
     528:	.word	0x00000650
     52c:	.word	0x00000650
     530:	.word	0x00000650
     534:	.word	0x00000650
     538:	.word	0x00000650
     53c:	.word	0x00000650
     540:	.word	0x00000650
     544:	.word	0x00000650
     548:	.word	0x00000650
     54c:	.word	0x00000650
     550:	.word	0x00000650
     554:	.word	0x00000650
     558:	.word	0x00000650
     55c:	.word	0x00000650
     560:	.word	0x00000650
     564:	.word	0x00000650
     568:	.word	0x00000650
     56c:	.word	0x00000650
     570:	.word	0x00000650
     574:	.word	0x00000650
     578:	.word	0x00000650
     57c:	.word	0x00000650
     580:	.word	0x00000650
     584:	.word	0x00000650
     588:	.word	0x00000650
     58c:	.word	0x00000650
     590:	.word	0x00000650
     594:	.word	0x00000650
     598:	.word	0x00000650
     59c:	.word	0x00000650
     5a0:	.word	0x00000650
     5a4:	.word	0x00000650
     5a8:	.word	0x00000650
     5ac:	.word	0x00000650
     5b0:	.word	0x00000650
     5b4:	.word	0x00000650
     5b8:	.word	0x00000650
     5bc:	.word	0x000005c0
     5c0:	ldr	r2, [r4, #88]	; 0x58
     5c4:	cmp	r2, #0
     5c8:	beq	5dc <doIgnoreSection+0x15c>
     5cc:	mov	r2, r6
     5d0:	mov	r1, r5
     5d4:	mov	r0, r4
     5d8:	bl	90 <reportDefault>
     5dc:	ldr	r2, [r4, #496]	; 0x1f0
     5e0:	ldr	r3, [sp, #4]
     5e4:	cmp	r2, #2
     5e8:	ldr	r2, [sp, #48]	; 0x30
     5ec:	moveq	r0, #35	; 0x23
     5f0:	movne	r0, #0
     5f4:	str	r3, [r7]
     5f8:	str	r3, [r2]
     5fc:	b	608 <doIgnoreSection+0x188>
     600:	mov	r0, #4
     604:	str	r3, [r8]
     608:	add	sp, sp, #12
     60c:	ldrd	r4, [sp]
     610:	ldrd	r6, [sp, #8]
     614:	ldrd	r8, [sp, #16]
     618:	ldrd	sl, [sp, #24]
     61c:	add	sp, sp, #32
     620:	pop	{pc}		; (ldr pc, [sp], #4)
     624:	cmp	sl, #0
     628:	moveq	r0, #2
     62c:	beq	608 <doIgnoreSection+0x188>
     630:	ldr	r3, [sp, #48]	; 0x30
     634:	mov	r0, #0
     638:	str	r6, [r3]
     63c:	b	608 <doIgnoreSection+0x188>
     640:	cmp	sl, #0
     644:	moveq	r0, #6
     648:	beq	608 <doIgnoreSection+0x188>
     64c:	b	630 <doIgnoreSection+0x1b0>
     650:	mov	r0, #23
     654:	str	r3, [r8]
     658:	b	608 <doIgnoreSection+0x188>

0000065c <normalizePublicId>:
     65c:	ldrb	r3, [r0]
     660:	cmp	r3, #0
     664:	beq	6f8 <normalizePublicId+0x9c>
     668:	mov	ip, r0
     66c:	mov	r2, r0
     670:	push	{lr}		; (str lr, [sp, #-4]!)
     674:	mov	lr, #32
     678:	b	698 <normalizePublicId+0x3c>
     67c:	cmp	r3, #10
     680:	strbne	r3, [r1], #1
     684:	movne	r2, r1
     688:	beq	6ac <normalizePublicId+0x50>
     68c:	ldrb	r3, [ip, #1]!
     690:	cmp	r3, #0
     694:	beq	6d4 <normalizePublicId+0x78>
     698:	cmp	r3, #13
     69c:	mov	r1, r2
     6a0:	beq	6ac <normalizePublicId+0x50>
     6a4:	cmp	r3, #32
     6a8:	bne	67c <normalizePublicId+0x20>
     6ac:	cmp	r0, r2
     6b0:	mov	r3, r2
     6b4:	beq	68c <normalizePublicId+0x30>
     6b8:	ldrb	r1, [r2, #-1]
     6bc:	cmp	r1, #32
     6c0:	strbne	lr, [r3], #1
     6c4:	movne	r2, r3
     6c8:	ldrb	r3, [ip, #1]!
     6cc:	cmp	r3, #0
     6d0:	bne	698 <normalizePublicId+0x3c>
     6d4:	cmp	r2, r0
     6d8:	moveq	r2, r0
     6dc:	beq	6ec <normalizePublicId+0x90>
     6e0:	ldrb	r3, [r2, #-1]
     6e4:	cmp	r3, #32
     6e8:	subeq	r2, r2, #1
     6ec:	mov	r3, #0
     6f0:	strb	r3, [r2]
     6f4:	pop	{pc}		; (ldr pc, [sp], #4)
     6f8:	mov	r3, #0
     6fc:	strb	r3, [r0]
     700:	bx	lr

00000704 <hashTableDestroy>:
     704:	ldr	r3, [r0, #8]
     708:	strd	r4, [sp, #-16]!
     70c:	mov	r5, r0
     710:	str	r6, [sp, #8]
     714:	str	lr, [sp, #12]
     718:	cmp	r3, #0
     71c:	beq	748 <hashTableDestroy+0x44>
     720:	mov	r4, #0
     724:	ldr	r2, [r5]
     728:	ldr	r3, [r5, #16]
     72c:	ldr	r0, [r2, r4, lsl #2]
     730:	add	r4, r4, #1
     734:	ldr	r3, [r3, #8]
     738:	blx	r3
     73c:	ldr	r3, [r5, #8]
     740:	cmp	r3, r4
     744:	bhi	724 <hashTableDestroy+0x20>
     748:	ldr	r0, [r5]
     74c:	ldr	r3, [r5, #16]
     750:	ldrd	r4, [sp]
     754:	ldr	r6, [sp, #8]
     758:	ldr	r3, [r3, #8]
     75c:	ldr	lr, [sp, #12]
     760:	add	sp, sp, #16
     764:	bx	r3

00000768 <poolDestroy>:
     768:	strd	r4, [sp, #-16]!
     76c:	mov	r5, r0
     770:	ldr	r4, [r0]
     774:	str	r6, [sp, #8]
     778:	str	lr, [sp, #12]
     77c:	cmp	r4, #0
     780:	beq	7a0 <poolDestroy+0x38>
     784:	ldr	r2, [r5, #20]
     788:	mov	r0, r4
     78c:	ldr	r4, [r4]
     790:	ldr	r3, [r2, #8]
     794:	blx	r3
     798:	cmp	r4, #0
     79c:	bne	784 <poolDestroy+0x1c>
     7a0:	ldr	r4, [r5, #4]
     7a4:	cmp	r4, #0
     7a8:	beq	7c8 <poolDestroy+0x60>
     7ac:	ldr	r2, [r5, #20]
     7b0:	mov	r0, r4
     7b4:	ldr	r4, [r4]
     7b8:	ldr	r3, [r2, #8]
     7bc:	blx	r3
     7c0:	cmp	r4, #0
     7c4:	bne	7ac <poolDestroy+0x44>
     7c8:	ldrd	r4, [sp]
     7cc:	ldr	r6, [sp, #8]
     7d0:	add	sp, sp, #12
     7d4:	pop	{pc}		; (ldr pc, [sp], #4)

000007d8 <nextScaffoldPart>:
     7d8:	strd	r4, [sp, #-16]!
     7dc:	mov	r5, r0
     7e0:	ldr	r4, [r0, #364]	; 0x16c
     7e4:	str	r6, [sp, #8]
     7e8:	str	lr, [sp, #12]
     7ec:	ldr	r6, [r4, #184]	; 0xb8
     7f0:	cmp	r6, #0
     7f4:	beq	8cc <nextScaffoldPart+0xf4>
     7f8:	ldr	lr, [r4, #164]	; 0xa4
     7fc:	ldr	r1, [r4, #172]	; 0xac
     800:	ldr	ip, [r4, #176]	; 0xb0
     804:	cmp	ip, r1
     808:	bcc	844 <nextScaffoldPart+0x6c>
     80c:	cmp	lr, #0
     810:	beq	8f4 <nextScaffoldPart+0x11c>
     814:	rsb	r1, r1, r1, lsl #3
     818:	mov	r0, lr
     81c:	ldr	r3, [r5, #16]
     820:	lsl	r1, r1, #3
     824:	blx	r3
     828:	subs	lr, r0, #0
     82c:	beq	8ec <nextScaffoldPart+0x114>
     830:	ldr	r3, [r4, #172]	; 0xac
     834:	lsl	r3, r3, #1
     838:	str	r3, [r4, #172]	; 0xac
     83c:	ldr	ip, [r4, #176]	; 0xb0
     840:	str	lr, [r4, #164]	; 0xa4
     844:	ldr	r2, [r4, #180]	; 0xb4
     848:	add	r1, ip, #1
     84c:	rsb	r3, ip, ip, lsl #3
     850:	mov	r0, ip
     854:	add	r3, lr, r3, lsl #2
     858:	str	r1, [r4, #176]	; 0xb0
     85c:	cmp	r2, #0
     860:	beq	8a8 <nextScaffoldPart+0xd0>
     864:	ldr	r1, [r4, #184]	; 0xb8
     868:	sub	r2, r2, #-1073741823	; 0xc0000001
     86c:	ldr	r2, [r1, r2, lsl #2]
     870:	rsb	r2, r2, r2, lsl #3
     874:	add	r2, lr, r2, lsl #2
     878:	ldr	r1, [r2, #16]
     87c:	cmp	r1, #0
     880:	beq	890 <nextScaffoldPart+0xb8>
     884:	rsb	r1, r1, r1, lsl #3
     888:	add	r1, lr, r1, lsl #2
     88c:	str	ip, [r1, #24]
     890:	ldr	r1, [r2, #20]
     894:	str	ip, [r2, #16]
     898:	cmp	r1, #0
     89c:	add	r1, r1, #1
     8a0:	streq	ip, [r2, #12]
     8a4:	str	r1, [r2, #20]
     8a8:	mov	r2, #0
     8ac:	str	r2, [r3, #12]
     8b0:	str	r2, [r3, #16]
     8b4:	str	r2, [r3, #20]
     8b8:	str	r2, [r3, #24]
     8bc:	ldrd	r4, [sp]
     8c0:	ldr	r6, [sp, #8]
     8c4:	add	sp, sp, #12
     8c8:	pop	{pc}		; (ldr pc, [sp], #4)
     8cc:	ldr	r3, [r0, #12]
     8d0:	ldr	r0, [r0, #484]	; 0x1e4
     8d4:	lsl	r0, r0, #2
     8d8:	blx	r3
     8dc:	cmp	r0, #0
     8e0:	str	r0, [r4, #184]	; 0xb8
     8e4:	strne	r6, [r0]
     8e8:	bne	7f8 <nextScaffoldPart+0x20>
     8ec:	mvn	r0, #0
     8f0:	b	8bc <nextScaffoldPart+0xe4>
     8f4:	mov	r0, #896	; 0x380
     8f8:	ldr	r3, [r5, #12]
     8fc:	blx	r3
     900:	subs	lr, r0, #0
     904:	beq	8ec <nextScaffoldPart+0x114>
     908:	mov	r3, #32
     90c:	str	r3, [r4, #172]	; 0xac
     910:	b	83c <nextScaffoldPart+0x64>

00000914 <build_node>:
     914:	strd	r4, [sp, #-32]!	; 0xffffffe0
     918:	rsb	r1, r1, r1, lsl #3
     91c:	strd	r6, [sp, #8]
     920:	str	sl, [sp, #24]
     924:	lsl	r1, r1, #2
     928:	ldr	sl, [r0, #364]	; 0x16c
     92c:	str	lr, [sp, #28]
     930:	strd	r8, [sp, #16]
     934:	sub	sp, sp, #8
     938:	ldr	r7, [sp, #40]	; 0x28
     93c:	ldr	lr, [sl, #164]	; 0xa4
     940:	add	ip, lr, r1
     944:	ldr	r1, [lr, r1]
     948:	ldr	lr, [ip, #4]
     94c:	cmp	r1, #4
     950:	stm	r2, {r1, lr}
     954:	beq	9fc <build_node+0xe8>
     958:	mov	r6, r2
     95c:	ldr	r2, [r3]
     960:	mov	r8, r3
     964:	mov	r9, r0
     968:	ldr	r3, [ip, #20]
     96c:	str	r2, [r6, #16]
     970:	ldr	r2, [r8]
     974:	add	r1, r3, r3, lsl #2
     978:	cmp	r3, #0
     97c:	str	r3, [r6, #12]
     980:	add	r3, r2, r1, lsl #2
     984:	str	r3, [r8]
     988:	beq	9d8 <build_node+0xc4>
     98c:	ldr	r4, [ip, #12]
     990:	mov	r5, #0
     994:	add	ip, r5, r5, lsl #2
     998:	mov	r3, r8
     99c:	mov	r1, r4
     9a0:	ldr	r2, [r6, #16]
     9a4:	mov	r0, r9
     9a8:	add	r5, r5, #1
     9ac:	str	r7, [sp]
     9b0:	rsb	r4, r4, r4, lsl #3
     9b4:	add	r2, r2, ip, lsl #2
     9b8:	bl	914 <build_node>
     9bc:	ldr	r3, [r6, #12]
     9c0:	ldr	r2, [sl, #164]	; 0xa4
     9c4:	cmp	r3, r5
     9c8:	add	r2, r2, r4, lsl #2
     9cc:	bls	9d8 <build_node+0xc4>
     9d0:	ldr	r4, [r2, #24]
     9d4:	b	994 <build_node+0x80>
     9d8:	mov	r3, #0
     9dc:	str	r3, [r6, #8]
     9e0:	add	sp, sp, #8
     9e4:	ldrd	r4, [sp]
     9e8:	ldrd	r6, [sp, #8]
     9ec:	ldrd	r8, [sp, #16]
     9f0:	ldr	sl, [sp, #24]
     9f4:	add	sp, sp, #28
     9f8:	pop	{pc}		; (ldr pc, [sp], #4)
     9fc:	ldr	r3, [r7]
     a00:	ldr	r0, [ip, #8]
     a04:	str	r3, [r2, #8]
     a08:	ldr	r3, [r7]
     a0c:	add	r1, r3, #1
     a10:	str	r1, [r7]
     a14:	ldrb	r1, [r0]
     a18:	cmp	r1, #0
     a1c:	strb	r1, [r3]
     a20:	beq	a40 <build_node+0x12c>
     a24:	ldr	r3, [r7]
     a28:	add	r1, r3, #1
     a2c:	str	r1, [r7]
     a30:	ldrb	r1, [r0, #1]!
     a34:	cmp	r1, #0
     a38:	strb	r1, [r3]
     a3c:	bne	a24 <build_node+0x110>
     a40:	mov	r3, #0
     a44:	str	r3, [r2, #12]
     a48:	str	r3, [r2, #16]
     a4c:	b	9e0 <build_node+0xcc>

00000a50 <lookup>:
     a50:	strd	r4, [sp, #-36]!	; 0xffffffdc
     a54:	strd	r6, [sp, #8]
     a58:	mov	r7, r1
     a5c:	strd	r8, [sp, #16]
     a60:	ldr	r8, [r1, #8]
     a64:	strd	sl, [sp, #24]
     a68:	mov	fp, r2
     a6c:	str	lr, [sp, #32]
     a70:	sub	sp, sp, #52	; 0x34
     a74:	str	r0, [sp, #8]
     a78:	cmp	r8, #0
     a7c:	str	r3, [sp, #12]
     a80:	bne	b84 <lookup+0x134>
     a84:	cmp	r3, #0
     a88:	beq	c50 <lookup+0x200>
     a8c:	ldr	r3, [r7, #16]
     a90:	mov	r1, #6
     a94:	mov	r2, #64	; 0x40
     a98:	mov	r0, #256	; 0x100
     a9c:	strb	r1, [r7, #4]
     aa0:	str	r2, [r7, #8]
     aa4:	ldr	r3, [r3]
     aa8:	blx	r3
     aac:	cmp	r0, #0
     ab0:	mov	r5, r0
     ab4:	str	r0, [r7]
     ab8:	streq	r0, [r7, #8]
     abc:	beq	b64 <lookup+0x114>
     ac0:	mov	r2, #256	; 0x100
     ac4:	mov	r1, r8
     ac8:	bl	0 <memset>
     acc:	ldrb	r2, [fp]
     ad0:	ldr	r3, [sp, #8]
     ad4:	cmp	r2, #0
     ad8:	ldr	r3, [r3, #512]	; 0x200
     adc:	beq	b00 <lookup+0xb0>
     ae0:	movw	r0, #16963	; 0x4243
     ae4:	movt	r0, #15
     ae8:	mov	r1, fp
     aec:	mul	r3, r0, r3
     af0:	eor	r3, r3, r2
     af4:	ldrb	r2, [r1, #1]!
     af8:	cmp	r2, #0
     afc:	bne	aec <lookup+0x9c>
     b00:	ldr	r9, [r7]
     b04:	ldr	r6, [r7, #8]
     b08:	ldr	r2, [r7, #16]
     b0c:	sub	r6, r6, #1
     b10:	and	r3, r3, r6
     b14:	lsl	r6, r3, #2
     b18:	ldr	r3, [r2]
     b1c:	add	r9, r9, r6
     b20:	ldr	r4, [sp, #12]
     b24:	mov	r0, r4
     b28:	blx	r3
     b2c:	ldr	r3, [r7]
     b30:	str	r0, [r9]
     b34:	ldr	r0, [r3, r6]
     b38:	cmp	r0, #0
     b3c:	beq	c50 <lookup+0x200>
     b40:	mov	r2, r4
     b44:	mov	r1, #0
     b48:	bl	0 <memset>
     b4c:	ldr	r2, [r7]
     b50:	ldr	r3, [r7, #12]
     b54:	ldr	r5, [r2, r6]
     b58:	add	r3, r3, #1
     b5c:	str	fp, [r5]
     b60:	str	r3, [r7, #12]
     b64:	mov	r0, r5
     b68:	add	sp, sp, #52	; 0x34
     b6c:	ldrd	r4, [sp]
     b70:	ldrd	r6, [sp, #8]
     b74:	ldrd	r8, [sp, #16]
     b78:	ldrd	sl, [sp, #24]
     b7c:	add	sp, sp, #32
     b80:	pop	{pc}		; (ldr pc, [sp], #4)
     b84:	ldrb	r1, [r2]
     b88:	ldr	r3, [sp, #8]
     b8c:	cmp	r1, #0
     b90:	ldr	r4, [r3, #512]	; 0x200
     b94:	beq	bb8 <lookup+0x168>
     b98:	movw	r0, #16963	; 0x4243
     b9c:	movt	r0, #15
     ba0:	mov	r3, r1
     ba4:	mul	r4, r0, r4
     ba8:	eor	r4, r4, r3
     bac:	ldrb	r3, [r2, #1]!
     bb0:	cmp	r3, #0
     bb4:	bne	ba4 <lookup+0x154>
     bb8:	ldr	lr, [r7]
     bbc:	sub	sl, r8, #1
     bc0:	rsb	r3, r8, #0
     bc4:	and	ip, sl, r4
     bc8:	ubfx	sl, sl, #2, #8
     bcc:	and	r3, r3, r4
     bd0:	mov	r0, #0
     bd4:	str	r3, [sp, #4]
     bd8:	ldr	r5, [lr, ip, lsl #2]
     bdc:	lsl	r6, ip, #2
     be0:	add	r9, lr, r6
     be4:	cmp	r5, #0
     be8:	beq	c58 <lookup+0x208>
     bec:	ldr	r2, [r5]
     bf0:	ldrb	r3, [r2]
     bf4:	cmp	r3, r1
     bf8:	bne	c24 <lookup+0x1d4>
     bfc:	cmp	r1, #0
     c00:	beq	b64 <lookup+0x114>
     c04:	mov	r6, fp
     c08:	b	c14 <lookup+0x1c4>
     c0c:	cmp	r3, #0
     c10:	beq	b64 <lookup+0x114>
     c14:	ldrb	r9, [r6, #1]!
     c18:	ldrb	r3, [r2, #1]!
     c1c:	cmp	r3, r9
     c20:	beq	c0c <lookup+0x1bc>
     c24:	cmp	r0, #0
     c28:	bne	c40 <lookup+0x1f0>
     c2c:	ldrb	r0, [r7, #4]
     c30:	ldr	r3, [sp, #4]
     c34:	sub	r0, r0, #1
     c38:	and	r0, sl, r3, lsr r0
     c3c:	orr	r0, r0, #1
     c40:	cmp	r0, ip
     c44:	addhi	ip, r8, ip
     c48:	sub	ip, ip, r0
     c4c:	b	bd8 <lookup+0x188>
     c50:	mov	r5, #0
     c54:	b	b64 <lookup+0x114>
     c58:	ldr	r3, [sp, #12]
     c5c:	cmp	r3, #0
     c60:	beq	c50 <lookup+0x200>
     c64:	ldrb	r2, [r7, #4]
     c68:	ldr	r0, [r7, #12]
     c6c:	ldr	r3, [r7, #16]
     c70:	sub	r1, r2, #1
     c74:	lsrs	r1, r0, r1
     c78:	ldr	r3, [r3]
     c7c:	beq	b20 <lookup+0xd0>
     c80:	add	r2, r2, #1
     c84:	mov	r6, #4
     c88:	uxtb	r9, r2
     c8c:	mov	sl, #1
     c90:	lsl	r6, r6, r9
     c94:	lsl	sl, sl, r9
     c98:	str	r9, [sp, #32]
     c9c:	mov	r0, r6
     ca0:	blx	r3
     ca4:	sub	r3, sl, #1
     ca8:	subs	r8, r0, #0
     cac:	str	r3, [sp, #20]
     cb0:	beq	c50 <lookup+0x200>
     cb4:	ubfx	ip, r3, #2, #8
     cb8:	mov	r2, r6
     cbc:	mov	r1, r5
     cc0:	str	ip, [sp, #24]
     cc4:	bl	0 <memset>
     cc8:	ldr	r3, [r7, #8]
     ccc:	sub	r2, r9, #1
     cd0:	str	r2, [sp, #4]
     cd4:	rsb	r2, sl, #0
     cd8:	str	r2, [sp, #16]
     cdc:	cmp	r3, #0
     ce0:	beq	e2c <lookup+0x3dc>
     ce4:	ldr	r9, [r7]
     ce8:	movw	r5, #16963	; 0x4243
     cec:	movt	r5, #15
     cf0:	add	r6, r9, r3, lsl #2
     cf4:	str	r9, [sp, #28]
     cf8:	str	r4, [sp, #36]	; 0x24
     cfc:	str	r7, [sp, #40]	; 0x28
     d00:	str	fp, [sp, #44]	; 0x2c
     d04:	ldr	r7, [sp, #20]
     d08:	ldr	fp, [sp, #24]
     d0c:	b	d18 <lookup+0x2c8>
     d10:	cmp	r6, r9
     d14:	beq	da0 <lookup+0x350>
     d18:	ldr	r4, [r9], #4
     d1c:	cmp	r4, #0
     d20:	beq	d10 <lookup+0x2c0>
     d24:	ldr	r1, [r4]
     d28:	ldr	r3, [sp, #8]
     d2c:	ldrb	r2, [r1]
     d30:	ldr	r3, [r3, #512]	; 0x200
     d34:	cmp	r2, #0
     d38:	beq	d50 <lookup+0x300>
     d3c:	mul	r3, r5, r3
     d40:	eor	r3, r3, r2
     d44:	ldrb	r2, [r1, #1]!
     d48:	cmp	r2, #0
     d4c:	bne	d3c <lookup+0x2ec>
     d50:	ldr	r2, [sp, #16]
     d54:	and	ip, r3, r2
     d58:	ldr	r2, [sp, #4]
     d5c:	and	r3, r3, r7
     d60:	and	ip, fp, ip, lsr r2
     d64:	mov	r2, #0
     d68:	orr	ip, ip, #1
     d6c:	b	d84 <lookup+0x334>
     d70:	cmp	r2, #0
     d74:	moveq	r2, ip
     d78:	cmp	r2, r3
     d7c:	subhi	r3, r0, r2
     d80:	subls	r3, r3, r2
     d84:	ldr	r1, [r8, r3, lsl #2]
     d88:	add	r0, r3, sl
     d8c:	add	lr, r8, r3, lsl #2
     d90:	cmp	r1, #0
     d94:	bne	d70 <lookup+0x320>
     d98:	str	r4, [lr]
     d9c:	b	d10 <lookup+0x2c0>
     da0:	add	r4, sp, #36	; 0x24
     da4:	ldm	r4, {r4, r7, fp}
     da8:	ldr	r3, [r7, #16]
     dac:	ldr	r0, [sp, #28]
     db0:	ldr	r3, [r3, #8]
     db4:	blx	r3
     db8:	ldr	r2, [sp, #4]
     dbc:	str	r8, [r7]
     dc0:	ldr	r3, [sp, #20]
     dc4:	str	sl, [r7, #8]
     dc8:	ldr	r1, [sp, #16]
     dcc:	and	r3, r3, r4
     dd0:	and	r1, r1, r4
     dd4:	mov	r4, r3
     dd8:	ldr	r3, [sp, #24]
     ddc:	and	r1, r3, r1, lsr r2
     de0:	ldr	r2, [sp, #32]
     de4:	mov	r3, #0
     de8:	orr	r1, r1, #1
     dec:	strb	r2, [r7, #4]
     df0:	b	e08 <lookup+0x3b8>
     df4:	cmp	r3, #0
     df8:	moveq	r3, r1
     dfc:	cmp	r3, r4
     e00:	subhi	r4, r0, r3
     e04:	subls	r4, r4, r3
     e08:	ldr	r2, [r8, r4, lsl #2]
     e0c:	lsl	r6, r4, #2
     e10:	add	r0, r4, sl
     e14:	add	r9, r8, r6
     e18:	cmp	r2, #0
     e1c:	bne	df4 <lookup+0x3a4>
     e20:	ldr	r3, [r7, #16]
     e24:	ldr	r3, [r3]
     e28:	b	b20 <lookup+0xd0>
     e2c:	ldr	r3, [r7]
     e30:	str	r3, [sp, #28]
     e34:	b	da8 <lookup+0x358>

00000e38 <handleUnknownEncoding>:
     e38:	strd	r4, [sp, #-16]!
     e3c:	str	r6, [sp, #8]
     e40:	ldr	r6, [r0, #132]	; 0x84
     e44:	str	lr, [sp, #12]
     e48:	sub	sp, sp, #1040	; 0x410
     e4c:	sub	sp, sp, #8
     e50:	cmp	r6, #0
     e54:	beq	eb8 <handleUnknownEncoding+0x80>
     e58:	add	ip, sp, #1024	; 0x400
     e5c:	add	r3, sp, #8
     e60:	add	ip, ip, #8
     e64:	mvn	r2, #0
     e68:	str	r2, [r3, #4]!
     e6c:	cmp	r3, ip
     e70:	bne	e68 <handleUnknownEncoding+0x30>
     e74:	mov	r5, #0
     e78:	add	r3, sp, #12
     e7c:	mov	r4, r0
     e80:	mov	r2, r3
     e84:	ldr	r0, [r0, #256]	; 0x100
     e88:	str	r3, [sp, #4]
     e8c:	str	r5, [sp, #1036]	; 0x40c
     e90:	str	r5, [sp, #1040]	; 0x410
     e94:	str	r5, [sp, #1044]	; 0x414
     e98:	blx	r6
     e9c:	cmp	r0, r5
     ea0:	bne	ed4 <handleUnknownEncoding+0x9c>
     ea4:	ldr	r3, [sp, #1044]	; 0x414
     ea8:	cmp	r3, #0
     eac:	beq	eb8 <handleUnknownEncoding+0x80>
     eb0:	ldr	r0, [sp, #1036]	; 0x40c
     eb4:	blx	r3
     eb8:	mov	r0, #18
     ebc:	add	sp, sp, #1040	; 0x410
     ec0:	add	sp, sp, #8
     ec4:	ldrd	r4, [sp]
     ec8:	ldr	r6, [sp, #8]
     ecc:	add	sp, sp, #12
     ed0:	pop	{pc}		; (ldr pc, [sp], #4)
     ed4:	ldr	r6, [r4, #12]
     ed8:	bl	0 <coda_XmlSizeOfUnknownEncoding>
     edc:	blx	r6
     ee0:	cmp	r0, r5
     ee4:	str	r0, [r4, #248]	; 0xf8
     ee8:	beq	f3c <handleUnknownEncoding+0x104>
     eec:	ldrb	ip, [r4, #244]	; 0xf4
     ef0:	movw	r2, #0
     ef4:	movt	r2, #0
     ef8:	movw	r6, #0
     efc:	movt	r6, #0
     f00:	ldr	r1, [sp, #4]
     f04:	ldr	r3, [sp, #1036]	; 0x40c
     f08:	cmp	ip, #0
     f0c:	movne	r6, r2
     f10:	ldr	r2, [sp, #1040]	; 0x410
     f14:	blx	r6
     f18:	subs	r3, r0, #0
     f1c:	beq	ea4 <handleUnknownEncoding+0x6c>
     f20:	str	r3, [r4, #152]	; 0x98
     f24:	mov	r0, r5
     f28:	ldr	r2, [sp, #1036]	; 0x40c
     f2c:	ldr	r3, [sp, #1044]	; 0x414
     f30:	str	r2, [r4, #252]	; 0xfc
     f34:	str	r3, [r4, #260]	; 0x104
     f38:	b	ebc <handleUnknownEncoding+0x84>
     f3c:	ldr	r3, [sp, #1044]	; 0x414
     f40:	cmp	r3, r5
     f44:	moveq	r0, #1
     f48:	beq	ebc <handleUnknownEncoding+0x84>
     f4c:	ldr	r0, [sp, #1036]	; 0x40c
     f50:	blx	r3
     f54:	mov	r0, #1
     f58:	b	ebc <handleUnknownEncoding+0x84>

00000f5c <addBinding>:
     f5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
     f60:	ldr	r4, [r1]
     f64:	strd	r6, [sp, #8]
     f68:	strd	r8, [sp, #16]
     f6c:	strd	sl, [sp, #24]
     f70:	str	lr, [sp, #32]
     f74:	sub	sp, sp, #4
     f78:	ldrb	r5, [r3]
     f7c:	cmp	r5, #0
     f80:	bne	fac <addBinding+0x50>
     f84:	cmp	r4, #0
     f88:	movne	r0, #28
     f8c:	beq	1078 <addBinding+0x11c>
     f90:	add	sp, sp, #4
     f94:	ldrd	r4, [sp]
     f98:	ldrd	r6, [sp, #8]
     f9c:	ldrd	r8, [sp, #16]
     fa0:	ldrd	sl, [sp, #24]
     fa4:	add	sp, sp, #32
     fa8:	pop	{pc}		; (ldr pc, [sp], #4)
     fac:	cmp	r4, #0
     fb0:	beq	fc0 <addBinding+0x64>
     fb4:	ldrb	ip, [r4]
     fb8:	cmp	ip, #120	; 0x78
     fbc:	beq	1180 <addBinding+0x224>
     fc0:	mov	r8, #0
     fc4:	mov	lr, #1
     fc8:	movw	r9, #0
     fcc:	movt	r9, #0
     fd0:	mov	ip, lr
     fd4:	add	sl, r9, #40	; 0x28
     fd8:	eor	r7, r8, lr
     fdc:	mov	r6, r3
     fe0:	mov	r4, #0
     fe4:	b	1020 <addBinding+0xc4>
     fe8:	ands	fp, r7, lr
     fec:	andeq	fp, lr, #1
     ff0:	beq	1010 <addBinding+0xb4>
     ff4:	cmp	r4, #29
     ff8:	bgt	1008 <addBinding+0xac>
     ffc:	ldrb	lr, [r4, sl]
    1000:	cmp	lr, r5
    1004:	beq	1164 <addBinding+0x208>
    1008:	mov	lr, #0
    100c:	mov	fp, lr
    1010:	ldrb	r5, [r6, #1]!
    1014:	add	r4, r4, #1
    1018:	cmp	r5, #0
    101c:	beq	104c <addBinding+0xf0>
    1020:	eor	ip, ip, #1
    1024:	cmp	r4, #36	; 0x24
    1028:	orrgt	ip, ip, #1
    102c:	cmp	ip, #0
    1030:	movne	ip, #0
    1034:	bne	fe8 <addBinding+0x8c>
    1038:	ldrb	ip, [r4, r9]
    103c:	sub	ip, ip, r5
    1040:	clz	ip, ip
    1044:	lsr	ip, ip, #5
    1048:	b	fe8 <addBinding+0x8c>
    104c:	cmp	r4, #36	; 0x24
    1050:	movne	ip, #0
    1054:	andeq	ip, ip, #1
    1058:	cmp	r8, ip
    105c:	bne	1170 <addBinding+0x214>
    1060:	cmp	r4, #29
    1064:	movne	fp, #0
    1068:	andeq	fp, fp, #1
    106c:	cmp	fp, #0
    1070:	movne	r0, #40	; 0x28
    1074:	bne	f90 <addBinding+0x34>
    1078:	ldrb	ip, [r0, #488]	; 0x1e8
    107c:	mov	r6, r2
    1080:	mov	r7, r0
    1084:	mov	r8, r1
    1088:	mov	r9, r3
    108c:	ldr	r5, [r0, #384]	; 0x180
    1090:	cmp	ip, #0
    1094:	addne	r4, r4, #1
    1098:	cmp	r5, #0
    109c:	beq	11f4 <addBinding+0x298>
    10a0:	ldr	r0, [r5, #16]
    10a4:	ldr	r3, [r5, #24]
    10a8:	cmp	r3, r4
    10ac:	blt	11cc <addBinding+0x270>
    10b0:	ldr	r3, [r5, #4]
    10b4:	str	r3, [r7, #384]	; 0x180
    10b8:	mov	r2, r4
    10bc:	mov	r1, r9
    10c0:	str	r4, [r5, #20]
    10c4:	bl	0 <memcpy>
    10c8:	ldrb	r3, [r7, #488]	; 0x1e8
    10cc:	cmp	r3, #0
    10d0:	beq	10e0 <addBinding+0x184>
    10d4:	ldr	r2, [r5, #16]
    10d8:	add	r4, r2, r4
    10dc:	strb	r3, [r4, #-1]
    10e0:	ldr	r3, [r8, #4]
    10e4:	str	r8, [r5]
    10e8:	str	r3, [r5, #8]
    10ec:	str	r6, [r5, #12]
    10f0:	ldrb	r3, [r9]
    10f4:	cmp	r3, #0
    10f8:	movne	r3, r5
    10fc:	bne	1114 <addBinding+0x1b8>
    1100:	ldr	r3, [r7, #364]	; 0x16c
    1104:	add	r3, r3, #152	; 0x98
    1108:	cmp	r8, r3
    110c:	movne	r3, r5
    1110:	moveq	r3, #0
    1114:	str	r3, [r8, #4]
    1118:	cmp	r6, #0
    111c:	ldr	r3, [sp, #40]	; 0x28
    1120:	ldr	r3, [r3]
    1124:	str	r3, [r5, #4]
    1128:	ldr	r3, [sp, #40]	; 0x28
    112c:	str	r5, [r3]
    1130:	beq	115c <addBinding+0x200>
    1134:	ldr	r3, [r7, #108]	; 0x6c
    1138:	cmp	r3, #0
    113c:	moveq	r0, r3
    1140:	beq	f90 <addBinding+0x34>
    1144:	ldm	r8, {r1, r2}
    1148:	ldr	r0, [r7, #4]
    114c:	cmp	r2, #0
    1150:	movne	r2, r9
    1154:	moveq	r2, #0
    1158:	blx	r3
    115c:	mov	r0, #0
    1160:	b	f90 <addBinding+0x34>
    1164:	mov	lr, fp
    1168:	mov	fp, #1
    116c:	b	1010 <addBinding+0xb4>
    1170:	cmp	r8, #0
    1174:	moveq	r0, #40	; 0x28
    1178:	movne	r0, #38	; 0x26
    117c:	b	f90 <addBinding+0x34>
    1180:	ldrb	ip, [r4, #1]
    1184:	cmp	ip, #109	; 0x6d
    1188:	bne	fc0 <addBinding+0x64>
    118c:	ldrb	ip, [r4, #2]
    1190:	cmp	ip, #108	; 0x6c
    1194:	bne	fc0 <addBinding+0x64>
    1198:	ldrb	r8, [r4, #3]
    119c:	cmp	r8, #110	; 0x6e
    11a0:	clzne	r8, r8
    11a4:	lsrne	r8, r8, #5
    11a8:	bne	fc4 <addBinding+0x68>
    11ac:	ldrb	ip, [r4, #4]
    11b0:	cmp	ip, #115	; 0x73
    11b4:	bne	fc0 <addBinding+0x64>
    11b8:	ldrb	ip, [r4, #5]
    11bc:	cmp	ip, #0
    11c0:	moveq	r0, #39	; 0x27
    11c4:	bne	fc0 <addBinding+0x64>
    11c8:	b	f90 <addBinding+0x34>
    11cc:	add	sl, r4, #24
    11d0:	ldr	r3, [r7, #16]
    11d4:	mov	r1, sl
    11d8:	blx	r3
    11dc:	cmp	r0, #0
    11e0:	strne	r0, [r5, #16]
    11e4:	strne	sl, [r5, #24]
    11e8:	bne	10b0 <addBinding+0x154>
    11ec:	mov	r0, #1
    11f0:	b	f90 <addBinding+0x34>
    11f4:	mov	r0, #28
    11f8:	ldr	r3, [r7, #12]
    11fc:	blx	r3
    1200:	subs	r5, r0, #0
    1204:	beq	11ec <addBinding+0x290>
    1208:	add	sl, r4, #24
    120c:	ldr	r3, [r7, #12]
    1210:	mov	r0, sl
    1214:	blx	r3
    1218:	cmp	r0, #0
    121c:	str	r0, [r5, #16]
    1220:	strne	sl, [r5, #24]
    1224:	bne	10b8 <addBinding+0x15c>
    1228:	mov	r0, r5
    122c:	ldr	r3, [r7, #20]
    1230:	blx	r3
    1234:	b	11ec <addBinding+0x290>

00001238 <poolGrow>:
    1238:	ldr	r3, [r0, #4]
    123c:	strd	r4, [sp, #-16]!
    1240:	mov	r4, r0
    1244:	ldr	r1, [r0, #16]
    1248:	str	r6, [sp, #8]
    124c:	str	lr, [sp, #12]
    1250:	cmp	r3, #0
    1254:	beq	1348 <poolGrow+0x110>
    1258:	cmp	r1, #0
    125c:	ldr	ip, [r3, #4]
    1260:	beq	1400 <poolGrow+0x1c8>
    1264:	ldr	r2, [r4, #8]
    1268:	ldr	r0, [r0]
    126c:	sub	r2, r2, r1
    1270:	cmp	r2, ip
    1274:	blt	13b0 <poolGrow+0x178>
    1278:	cmp	r0, #0
    127c:	ldr	r3, [r4, #20]
    1280:	beq	1290 <poolGrow+0x58>
    1284:	add	ip, r0, #8
    1288:	cmp	r1, ip
    128c:	beq	1358 <poolGrow+0x120>
    1290:	cmp	r2, #1024	; 0x400
    1294:	blt	1318 <poolGrow+0xe0>
    1298:	lsl	r5, r2, #1
    129c:	ldr	r3, [r3]
    12a0:	add	r0, r5, #8
    12a4:	mov	r6, r5
    12a8:	blx	r3
    12ac:	cmp	r0, #0
    12b0:	beq	1334 <poolGrow+0xfc>
    12b4:	ldr	ip, [r4]
    12b8:	add	r3, r0, #8
    12bc:	ldr	r2, [r4, #12]
    12c0:	ldr	r1, [r4, #16]
    12c4:	str	ip, [r0]
    12c8:	str	r5, [r0, #4]
    12cc:	str	r0, [r4]
    12d0:	cmp	r2, r1
    12d4:	sub	r2, r2, r1
    12d8:	beq	12f4 <poolGrow+0xbc>
    12dc:	mov	r0, r3
    12e0:	bl	0 <memcpy>
    12e4:	ldr	r2, [r4, #12]
    12e8:	mov	r3, r0
    12ec:	ldr	r1, [r4, #16]
    12f0:	sub	r2, r2, r1
    12f4:	add	r6, r3, r6
    12f8:	add	r2, r3, r2
    12fc:	mov	r0, #1
    1300:	str	r6, [r4, #8]
    1304:	strd	r2, [r4, #12]
    1308:	ldrd	r4, [sp]
    130c:	ldr	r6, [sp, #8]
    1310:	add	sp, sp, #12
    1314:	pop	{pc}		; (ldr pc, [sp], #4)
    1318:	movw	r0, #1032	; 0x408
    131c:	ldr	r3, [r3]
    1320:	mov	r6, #1024	; 0x400
    1324:	blx	r3
    1328:	cmp	r0, #0
    132c:	mov	r5, r6
    1330:	bne	12b4 <poolGrow+0x7c>
    1334:	ldrd	r4, [sp]
    1338:	mov	r0, #0
    133c:	ldr	r6, [sp, #8]
    1340:	add	sp, sp, #12
    1344:	pop	{pc}		; (ldr pc, [sp], #4)
    1348:	ldr	r2, [r4, #8]
    134c:	ldr	r0, [r0]
    1350:	sub	r2, r2, r1
    1354:	b	1278 <poolGrow+0x40>
    1358:	lsl	r5, r2, #1
    135c:	ldr	r3, [r3, #4]
    1360:	add	r1, r5, #8
    1364:	blx	r3
    1368:	subs	r2, r0, #0
    136c:	beq	1334 <poolGrow+0xfc>
    1370:	ldr	r1, [r4, #12]
    1374:	add	r3, r2, #8
    1378:	mov	r0, #1
    137c:	add	lr, r3, r5
    1380:	str	r2, [r4]
    1384:	ldr	ip, [r4, #16]
    1388:	str	r5, [r2, #4]
    138c:	str	lr, [r4, #8]
    1390:	str	r3, [r4, #16]
    1394:	ldr	r6, [sp, #8]
    1398:	sub	r1, r1, ip
    139c:	add	r3, r3, r1
    13a0:	str	r3, [r4, #12]
    13a4:	ldrd	r4, [sp]
    13a8:	add	sp, sp, #12
    13ac:	pop	{pc}		; (ldr pc, [sp], #4)
    13b0:	ldr	ip, [r3]
    13b4:	str	r0, [r3]
    13b8:	add	r0, r3, #8
    13bc:	stm	r4, {r3, ip}
    13c0:	bl	0 <memcpy>
    13c4:	ldr	r1, [r4]
    13c8:	mov	r0, #1
    13cc:	ldr	r2, [r4, #12]
    13d0:	ldr	ip, [r4, #16]
    13d4:	add	r3, r1, #8
    13d8:	ldr	r1, [r1, #4]
    13dc:	ldr	r6, [sp, #8]
    13e0:	sub	r2, r2, ip
    13e4:	add	r2, r3, r2
    13e8:	strd	r2, [r4, #12]
    13ec:	add	r3, r3, r1
    13f0:	str	r3, [r4, #8]
    13f4:	ldrd	r4, [sp]
    13f8:	add	sp, sp, #12
    13fc:	pop	{pc}		; (ldr pc, [sp], #4)
    1400:	ldr	lr, [r3]
    1404:	mov	r2, r3
    1408:	mov	r0, #1
    140c:	ldr	r6, [sp, #8]
    1410:	stm	r4, {r3, lr}
    1414:	str	r1, [r2], #8
    1418:	add	ip, r2, ip
    141c:	str	ip, [r4, #8]
    1420:	str	r2, [r4, #12]
    1424:	str	r2, [r4, #16]
    1428:	ldrd	r4, [sp]
    142c:	add	sp, sp, #12
    1430:	pop	{pc}		; (ldr pc, [sp], #4)

00001434 <poolAppend>:
    1434:	strd	r4, [sp, #-24]!	; 0xffffffe8
    1438:	mov	r4, r0
    143c:	mov	r5, r1
    1440:	strd	r6, [sp, #8]
    1444:	mov	r6, r3
    1448:	str	r8, [sp, #16]
    144c:	str	lr, [sp, #20]
    1450:	sub	sp, sp, #16
    1454:	str	r2, [sp, #12]
    1458:	ldr	r2, [r0, #12]
    145c:	cmp	r2, #0
    1460:	beq	14b0 <poolAppend+0x7c>
    1464:	add	r8, r4, #12
    1468:	b	1478 <poolAppend+0x44>
    146c:	bl	1238 <poolGrow>
    1470:	cmp	r0, #0
    1474:	beq	14bc <poolAppend+0x88>
    1478:	ldr	ip, [r4, #8]
    147c:	mov	r3, r8
    1480:	mov	r0, r5
    1484:	mov	r2, r6
    1488:	add	r1, sp, #12
    148c:	ldr	r7, [r5, #60]	; 0x3c
    1490:	str	ip, [sp]
    1494:	blx	r7
    1498:	ldr	r3, [sp, #12]
    149c:	mov	r0, r4
    14a0:	cmp	r3, r6
    14a4:	bne	146c <poolAppend+0x38>
    14a8:	ldr	r0, [r4, #16]
    14ac:	b	14c0 <poolAppend+0x8c>
    14b0:	bl	1238 <poolGrow>
    14b4:	cmp	r0, #0
    14b8:	bne	1464 <poolAppend+0x30>
    14bc:	mov	r0, #0
    14c0:	add	sp, sp, #16
    14c4:	ldrd	r4, [sp]
    14c8:	ldrd	r6, [sp, #8]
    14cc:	ldr	r8, [sp, #16]
    14d0:	add	sp, sp, #20
    14d4:	pop	{pc}		; (ldr pc, [sp], #4)

000014d8 <poolStoreString>:
    14d8:	str	r4, [sp, #-8]!
    14dc:	mov	r4, r0
    14e0:	str	lr, [sp, #4]
    14e4:	bl	1434 <poolAppend>
    14e8:	cmp	r0, #0
    14ec:	beq	1534 <poolStoreString+0x5c>
    14f0:	ldrd	r2, [r4, #8]
    14f4:	cmp	r3, r2
    14f8:	beq	151c <poolStoreString+0x44>
    14fc:	add	r1, r3, #1
    1500:	mov	r2, #0
    1504:	str	r1, [r4, #12]
    1508:	strb	r2, [r3]
    150c:	ldr	r0, [r4, #16]
    1510:	ldr	r4, [sp]
    1514:	add	sp, sp, #4
    1518:	pop	{pc}		; (ldr pc, [sp], #4)
    151c:	mov	r0, r4
    1520:	bl	1238 <poolGrow>
    1524:	cmp	r0, #0
    1528:	beq	1534 <poolStoreString+0x5c>
    152c:	ldr	r3, [r4, #12]
    1530:	b	14fc <poolStoreString+0x24>
    1534:	ldr	r4, [sp]
    1538:	add	sp, sp, #4
    153c:	mov	r0, #0
    1540:	pop	{pc}		; (ldr pc, [sp], #4)

00001544 <processXmlDecl>:
    1544:	strd	r4, [sp, #-24]!	; 0xffffffe8
    1548:	mov	r4, r0
    154c:	strd	r6, [sp, #8]
    1550:	mov	r6, r1
    1554:	movw	r1, #0
    1558:	movt	r1, #0
    155c:	str	r8, [sp, #16]
    1560:	str	lr, [sp, #20]
    1564:	sub	sp, sp, #48	; 0x30
    1568:	add	lr, r0, #296	; 0x128
    156c:	ldrb	r5, [r0, #244]	; 0xf4
    1570:	add	ip, sp, #32
    1574:	add	r7, sp, #44	; 0x2c
    1578:	str	lr, [sp]
    157c:	add	lr, sp, #28
    1580:	add	r8, sp, #40	; 0x28
    1584:	movw	r0, #0
    1588:	movt	r0, #0
    158c:	str	ip, [sp, #16]
    1590:	add	ip, sp, #36	; 0x24
    1594:	cmp	r5, #0
    1598:	str	ip, [sp, #4]
    159c:	mov	ip, #0
    15a0:	str	lr, [sp, #12]
    15a4:	mvn	lr, #0
    15a8:	movne	r5, r0
    15ac:	moveq	r5, r1
    15b0:	mov	r0, r6
    15b4:	str	r8, [sp, #8]
    15b8:	str	r7, [sp, #20]
    15bc:	mov	r8, r3
    15c0:	mov	r7, r2
    15c4:	ldr	r1, [r4, #152]	; 0x98
    15c8:	str	ip, [sp, #28]
    15cc:	str	ip, [sp, #32]
    15d0:	str	ip, [sp, #36]	; 0x24
    15d4:	str	lr, [sp, #44]	; 0x2c
    15d8:	blx	r5
    15dc:	cmp	r0, #0
    15e0:	bne	1608 <processXmlDecl+0xc4>
    15e4:	cmp	r6, #0
    15e8:	movne	r0, #31
    15ec:	moveq	r0, #30
    15f0:	add	sp, sp, #48	; 0x30
    15f4:	ldrd	r4, [sp]
    15f8:	ldrd	r6, [sp, #8]
    15fc:	ldr	r8, [sp, #16]
    1600:	add	sp, sp, #20
    1604:	pop	{pc}		; (ldr pc, [sp], #4)
    1608:	cmp	r6, #0
    160c:	bne	161c <processXmlDecl+0xd8>
    1610:	ldr	r3, [sp, #44]	; 0x2c
    1614:	cmp	r3, #1
    1618:	beq	1744 <processXmlDecl+0x200>
    161c:	ldr	r3, [r4, #148]	; 0x94
    1620:	cmp	r3, #0
    1624:	beq	175c <processXmlDecl+0x218>
    1628:	ldr	r5, [sp, #28]
    162c:	cmp	r5, #0
    1630:	beq	166c <processXmlDecl+0x128>
    1634:	ldr	r6, [r4, #152]	; 0x98
    1638:	mov	r1, r5
    163c:	mov	r0, r6
    1640:	ldr	r3, [r6, #32]
    1644:	blx	r3
    1648:	add	r3, r5, r0
    164c:	mov	r2, r5
    1650:	mov	r1, r6
    1654:	add	r0, r4, #456	; 0x1c8
    1658:	bl	14d8 <poolStoreString>
    165c:	subs	r5, r0, #0
    1660:	beq	1878 <processXmlDecl+0x334>
    1664:	ldr	r3, [r4, #468]	; 0x1d4
    1668:	str	r3, [r4, #472]	; 0x1d8
    166c:	ldr	r2, [sp, #36]	; 0x24
    1670:	cmp	r2, #0
    1674:	beq	1710 <processXmlDecl+0x1cc>
    1678:	ldr	r1, [r4, #152]	; 0x98
    167c:	add	r0, r4, #456	; 0x1c8
    1680:	ldr	ip, [sp, #40]	; 0x28
    1684:	ldr	r3, [r1, #68]	; 0x44
    1688:	sub	r3, ip, r3
    168c:	bl	14d8 <poolStoreString>
    1690:	subs	r6, r0, #0
    1694:	beq	1878 <processXmlDecl+0x334>
    1698:	mov	r2, r5
    169c:	mov	r1, r6
    16a0:	ldr	r0, [r4, #4]
    16a4:	ldr	r3, [sp, #44]	; 0x2c
    16a8:	ldr	r7, [r4, #148]	; 0x94
    16ac:	blx	r7
    16b0:	ldr	r3, [r4, #240]	; 0xf0
    16b4:	cmp	r3, #0
    16b8:	beq	1840 <processXmlDecl+0x2fc>
    16bc:	ldr	r3, [r4, #456]	; 0x1c8
    16c0:	ldr	r1, [r4, #460]	; 0x1cc
    16c4:	cmp	r1, #0
    16c8:	beq	16f0 <processXmlDecl+0x1ac>
    16cc:	cmp	r3, #0
    16d0:	bne	16dc <processXmlDecl+0x198>
    16d4:	b	16f4 <processXmlDecl+0x1b0>
    16d8:	mov	r3, r2
    16dc:	ldr	r2, [r3]
    16e0:	str	r1, [r3]
    16e4:	mov	r1, r3
    16e8:	cmp	r2, #0
    16ec:	bne	16d8 <processXmlDecl+0x194>
    16f0:	str	r3, [r4, #460]	; 0x1cc
    16f4:	mov	r3, #0
    16f8:	mov	r0, r3
    16fc:	str	r3, [r4, #456]	; 0x1c8
    1700:	str	r3, [r4, #464]	; 0x1d0
    1704:	str	r3, [r4, #468]	; 0x1d4
    1708:	str	r3, [r4, #472]	; 0x1d8
    170c:	b	15f0 <processXmlDecl+0xac>
    1710:	mov	r1, r2
    1714:	mov	r2, r5
    1718:	ldr	r0, [r4, #4]
    171c:	ldr	r3, [sp, #44]	; 0x2c
    1720:	ldr	r6, [r4, #148]	; 0x94
    1724:	blx	r6
    1728:	ldr	r6, [r4, #240]	; 0xf0
    172c:	cmp	r6, #0
    1730:	beq	1840 <processXmlDecl+0x2fc>
    1734:	cmp	r5, #0
    1738:	bne	16bc <processXmlDecl+0x178>
    173c:	mov	r0, #0
    1740:	b	15f0 <processXmlDecl+0xac>
    1744:	ldr	r2, [r4, #364]	; 0x16c
    1748:	strb	r3, [r2, #130]	; 0x82
    174c:	ldr	r3, [r4, #508]	; 0x1fc
    1750:	cmp	r3, #1
    1754:	streq	r6, [r4, #508]	; 0x1fc
    1758:	b	161c <processXmlDecl+0xd8>
    175c:	ldr	r3, [r4, #88]	; 0x58
    1760:	cmp	r3, #0
    1764:	beq	177c <processXmlDecl+0x238>
    1768:	mov	r3, r8
    176c:	mov	r2, r7
    1770:	ldr	r1, [r4, #152]	; 0x98
    1774:	mov	r0, r4
    1778:	bl	90 <reportDefault>
    177c:	ldr	r5, [r4, #240]	; 0xf0
    1780:	cmp	r5, #0
    1784:	bne	173c <processXmlDecl+0x1f8>
    1788:	ldr	r3, [sp, #32]
    178c:	cmp	r3, #0
    1790:	movne	r6, r5
    1794:	bne	184c <processXmlDecl+0x308>
    1798:	ldr	r7, [sp, #28]
    179c:	cmp	r7, #0
    17a0:	beq	173c <processXmlDecl+0x1f8>
    17a4:	ldr	r5, [r4, #152]	; 0x98
    17a8:	mov	r1, r7
    17ac:	mov	r0, r5
    17b0:	ldr	r3, [r5, #32]
    17b4:	blx	r3
    17b8:	add	r3, r7, r0
    17bc:	mov	r1, r5
    17c0:	mov	r2, r7
    17c4:	add	r0, r4, #456	; 0x1c8
    17c8:	bl	14d8 <poolStoreString>
    17cc:	subs	r5, r0, #0
    17d0:	beq	1878 <processXmlDecl+0x334>
    17d4:	mov	r1, r5
    17d8:	mov	r0, r4
    17dc:	bl	e38 <handleUnknownEncoding>
    17e0:	ldr	r3, [r4, #456]	; 0x1c8
    17e4:	ldr	r1, [r4, #460]	; 0x1cc
    17e8:	cmp	r1, #0
    17ec:	beq	1814 <processXmlDecl+0x2d0>
    17f0:	cmp	r3, #0
    17f4:	bne	1800 <processXmlDecl+0x2bc>
    17f8:	b	1818 <processXmlDecl+0x2d4>
    17fc:	mov	r3, r2
    1800:	ldr	r2, [r3]
    1804:	str	r1, [r3]
    1808:	mov	r1, r3
    180c:	cmp	r2, #0
    1810:	bne	17fc <processXmlDecl+0x2b8>
    1814:	str	r3, [r4, #460]	; 0x1cc
    1818:	mov	r3, #0
    181c:	cmp	r0, #18
    1820:	str	r3, [r4, #456]	; 0x1c8
    1824:	str	r3, [r4, #464]	; 0x1d0
    1828:	str	r3, [r4, #468]	; 0x1d4
    182c:	str	r3, [r4, #472]	; 0x1d8
    1830:	bne	15f0 <processXmlDecl+0xac>
    1834:	ldr	r3, [sp, #28]
    1838:	str	r3, [r4, #296]	; 0x128
    183c:	b	15f0 <processXmlDecl+0xac>
    1840:	ldr	r3, [sp, #32]
    1844:	cmp	r3, #0
    1848:	beq	1880 <processXmlDecl+0x33c>
    184c:	ldr	r2, [r4, #152]	; 0x98
    1850:	ldr	r1, [r3, #68]	; 0x44
    1854:	ldr	r2, [r2, #68]	; 0x44
    1858:	cmp	r1, r2
    185c:	orreq	r5, r5, r6
    1860:	streq	r3, [r4, #152]	; 0x98
    1864:	beq	1734 <processXmlDecl+0x1f0>
    1868:	ldr	r3, [sp, #28]
    186c:	mov	r0, #19
    1870:	str	r3, [r4, #296]	; 0x128
    1874:	b	15f0 <processXmlDecl+0xac>
    1878:	mov	r0, #1
    187c:	b	15f0 <processXmlDecl+0xac>
    1880:	ldr	r7, [sp, #28]
    1884:	cmp	r7, #0
    1888:	orreq	r5, r5, r6
    188c:	beq	1734 <processXmlDecl+0x1f0>
    1890:	cmp	r5, #0
    1894:	bne	17d4 <processXmlDecl+0x290>
    1898:	b	17a4 <processXmlDecl+0x260>

0000189c <reportProcessingInstruction>:
    189c:	ldr	ip, [r0, #72]	; 0x48
    18a0:	strd	r4, [sp, #-32]!	; 0xffffffe0
    18a4:	mov	r4, r0
    18a8:	strd	r6, [sp, #8]
    18ac:	strd	r8, [sp, #16]
    18b0:	str	sl, [sp, #24]
    18b4:	cmp	ip, #0
    18b8:	str	lr, [sp, #28]
    18bc:	beq	19c8 <reportProcessingInstruction+0x12c>
    18c0:	mov	r6, r2
    18c4:	ldr	r2, [r1, #68]	; 0x44
    18c8:	mov	r5, r1
    18cc:	mov	r0, r1
    18d0:	mov	r9, r3
    18d4:	ldr	r3, [r1, #32]
    18d8:	add	r7, r4, #432	; 0x1b0
    18dc:	add	r6, r6, r2, lsl #1
    18e0:	mov	r1, r6
    18e4:	blx	r3
    18e8:	add	r8, r6, r0
    18ec:	mov	r2, r6
    18f0:	mov	r3, r8
    18f4:	mov	r0, r7
    18f8:	mov	r1, r5
    18fc:	bl	14d8 <poolStoreString>
    1900:	subs	r6, r0, #0
    1904:	beq	19c0 <reportProcessingInstruction+0x124>
    1908:	ldr	r2, [r4, #444]	; 0x1bc
    190c:	mov	r1, r8
    1910:	mov	r0, r5
    1914:	ldr	r3, [r5, #36]	; 0x24
    1918:	str	r2, [r4, #448]	; 0x1c0
    191c:	blx	r3
    1920:	ldr	r3, [r5, #68]	; 0x44
    1924:	mov	r2, r0
    1928:	mov	r1, r5
    192c:	mov	r0, r7
    1930:	sub	r3, r9, r3, lsl #1
    1934:	bl	14d8 <poolStoreString>
    1938:	subs	r5, r0, #0
    193c:	beq	19c0 <reportProcessingInstruction+0x124>
    1940:	bl	8 <normalizeLines>
    1944:	mov	r1, r6
    1948:	mov	r2, r5
    194c:	ldr	r0, [r4, #4]
    1950:	ldr	r3, [r4, #72]	; 0x48
    1954:	blx	r3
    1958:	ldr	r3, [r4, #432]	; 0x1b0
    195c:	ldr	r1, [r4, #436]	; 0x1b4
    1960:	cmp	r1, #0
    1964:	beq	198c <reportProcessingInstruction+0xf0>
    1968:	cmp	r3, #0
    196c:	bne	1978 <reportProcessingInstruction+0xdc>
    1970:	b	1990 <reportProcessingInstruction+0xf4>
    1974:	mov	r3, r2
    1978:	ldr	r2, [r3]
    197c:	str	r1, [r3]
    1980:	mov	r1, r3
    1984:	cmp	r2, #0
    1988:	bne	1974 <reportProcessingInstruction+0xd8>
    198c:	str	r3, [r4, #436]	; 0x1b4
    1990:	mov	r3, #0
    1994:	mov	r0, #1
    1998:	str	r3, [r4, #432]	; 0x1b0
    199c:	str	r3, [r4, #440]	; 0x1b8
    19a0:	str	r3, [r4, #444]	; 0x1bc
    19a4:	str	r3, [r4, #448]	; 0x1c0
    19a8:	ldrd	r4, [sp]
    19ac:	ldrd	r6, [sp, #8]
    19b0:	ldrd	r8, [sp, #16]
    19b4:	ldr	sl, [sp, #24]
    19b8:	add	sp, sp, #28
    19bc:	pop	{pc}		; (ldr pc, [sp], #4)
    19c0:	mov	r0, #0
    19c4:	b	19a8 <reportProcessingInstruction+0x10c>
    19c8:	ldr	ip, [r0, #88]	; 0x58
    19cc:	cmp	ip, #0
    19d0:	moveq	r0, #1
    19d4:	beq	19a8 <reportProcessingInstruction+0x10c>
    19d8:	bl	90 <reportDefault>
    19dc:	mov	r0, #1
    19e0:	b	19a8 <reportProcessingInstruction+0x10c>

000019e4 <getAttributeId>:
    19e4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    19e8:	ldr	r4, [r0, #364]	; 0x16c
    19ec:	ldr	ip, [r4, #92]	; 0x5c
    19f0:	strd	r6, [sp, #8]
    19f4:	mov	r6, r0
    19f8:	ldr	r0, [r4, #88]	; 0x58
    19fc:	strd	r8, [sp, #16]
    1a00:	add	r9, r4, #80	; 0x50
    1a04:	str	sl, [sp, #24]
    1a08:	str	lr, [sp, #28]
    1a0c:	sub	sp, sp, #16
    1a10:	cmp	ip, r0
    1a14:	beq	1a8c <getAttributeId+0xa8>
    1a18:	add	r0, ip, #1
    1a1c:	mov	lr, #0
    1a20:	str	r0, [r4, #92]	; 0x5c
    1a24:	mov	r0, r9
    1a28:	strb	lr, [ip]
    1a2c:	bl	14d8 <poolStoreString>
    1a30:	subs	r7, r0, #0
    1a34:	beq	1aac <getAttributeId+0xc8>
    1a38:	add	sl, r7, #1
    1a3c:	mov	r3, #12
    1a40:	mov	r2, sl
    1a44:	add	r1, r4, #40	; 0x28
    1a48:	mov	r0, r6
    1a4c:	bl	a50 <lookup>
    1a50:	subs	r8, r0, #0
    1a54:	beq	1aac <getAttributeId+0xc8>
    1a58:	ldr	r3, [r8]
    1a5c:	cmp	r3, sl
    1a60:	beq	1ab4 <getAttributeId+0xd0>
    1a64:	ldr	r3, [r4, #96]	; 0x60
    1a68:	str	r3, [r4, #92]	; 0x5c
    1a6c:	mov	r0, r8
    1a70:	add	sp, sp, #16
    1a74:	ldrd	r4, [sp]
    1a78:	ldrd	r6, [sp, #8]
    1a7c:	ldrd	r8, [sp, #16]
    1a80:	ldr	sl, [sp, #24]
    1a84:	add	sp, sp, #28
    1a88:	pop	{pc}		; (ldr pc, [sp], #4)
    1a8c:	mov	r0, r9
    1a90:	stmib	sp, {r1, r2, r3}
    1a94:	bl	1238 <poolGrow>
    1a98:	cmp	r0, #0
    1a9c:	ldmib	sp, {r1, r2, r3}
    1aa0:	beq	1aac <getAttributeId+0xc8>
    1aa4:	ldr	ip, [r4, #92]	; 0x5c
    1aa8:	b	1a18 <getAttributeId+0x34>
    1aac:	mov	r8, #0
    1ab0:	b	1a6c <getAttributeId+0x88>
    1ab4:	ldr	r2, [r4, #92]	; 0x5c
    1ab8:	str	r2, [r4, #96]	; 0x60
    1abc:	ldrb	r3, [r6, #244]	; 0xf4
    1ac0:	cmp	r3, #0
    1ac4:	beq	1a6c <getAttributeId+0x88>
    1ac8:	ldrb	r3, [r7, #1]
    1acc:	cmp	r3, #120	; 0x78
    1ad0:	beq	1ba8 <getAttributeId+0x1c4>
    1ad4:	cmp	r3, #0
    1ad8:	beq	1a6c <getAttributeId+0x88>
    1adc:	cmp	r3, #58	; 0x3a
    1ae0:	beq	1b50 <getAttributeId+0x16c>
    1ae4:	mov	r3, sl
    1ae8:	mvn	ip, r7
    1aec:	add	r0, ip, r3
    1af0:	ldrb	r1, [r3, #1]!
    1af4:	mov	r5, r7
    1af8:	cmp	r1, #0
    1afc:	beq	1a6c <getAttributeId+0x88>
    1b00:	cmp	r1, #58	; 0x3a
    1b04:	bne	1aec <getAttributeId+0x108>
    1b08:	add	sl, sl, r0
    1b0c:	b	1b2c <getAttributeId+0x148>
    1b10:	add	r3, r2, #1
    1b14:	str	r3, [r4, #92]	; 0x5c
    1b18:	ldrb	r3, [r5, #1]!
    1b1c:	cmp	sl, r5
    1b20:	strb	r3, [r2]
    1b24:	ldr	r2, [r4, #92]	; 0x5c
    1b28:	beq	1b50 <getAttributeId+0x16c>
    1b2c:	ldr	r3, [r4, #88]	; 0x58
    1b30:	cmp	r3, r2
    1b34:	bne	1b10 <getAttributeId+0x12c>
    1b38:	mov	r0, r9
    1b3c:	bl	1238 <poolGrow>
    1b40:	cmp	r0, #0
    1b44:	beq	1aac <getAttributeId+0xc8>
    1b48:	ldr	r2, [r4, #92]	; 0x5c
    1b4c:	b	1b10 <getAttributeId+0x12c>
    1b50:	ldr	r3, [r4, #88]	; 0x58
    1b54:	cmp	r3, r2
    1b58:	beq	1c04 <getAttributeId+0x220>
    1b5c:	add	r1, r2, #1
    1b60:	mov	ip, #0
    1b64:	mov	r0, r6
    1b68:	mov	r3, #8
    1b6c:	str	r1, [r4, #92]	; 0x5c
    1b70:	add	r1, r4, #60	; 0x3c
    1b74:	strb	ip, [r2]
    1b78:	ldr	r2, [r4, #96]	; 0x60
    1b7c:	bl	a50 <lookup>
    1b80:	cmp	r0, #0
    1b84:	str	r0, [r8, #4]
    1b88:	beq	1aac <getAttributeId+0xc8>
    1b8c:	ldr	r2, [r0]
    1b90:	ldr	r3, [r4, #96]	; 0x60
    1b94:	cmp	r2, r3
    1b98:	ldreq	r3, [r4, #92]	; 0x5c
    1b9c:	strne	r3, [r4, #92]	; 0x5c
    1ba0:	streq	r3, [r4, #96]	; 0x60
    1ba4:	b	1a6c <getAttributeId+0x88>
    1ba8:	ldrb	r3, [r7, #2]
    1bac:	cmp	r3, #109	; 0x6d
    1bb0:	bne	1ae4 <getAttributeId+0x100>
    1bb4:	ldrb	r3, [r7, #3]
    1bb8:	cmp	r3, #108	; 0x6c
    1bbc:	bne	1ae4 <getAttributeId+0x100>
    1bc0:	ldrb	r3, [r7, #4]
    1bc4:	cmp	r3, #110	; 0x6e
    1bc8:	bne	1ae4 <getAttributeId+0x100>
    1bcc:	ldrb	r3, [r7, #5]
    1bd0:	cmp	r3, #115	; 0x73
    1bd4:	bne	1ae4 <getAttributeId+0x100>
    1bd8:	ldrb	r3, [r7, #6]
    1bdc:	cmp	r3, #58	; 0x3a
    1be0:	cmpne	r3, #0
    1be4:	bne	1ae4 <getAttributeId+0x100>
    1be8:	cmp	r3, #0
    1bec:	bne	1c1c <getAttributeId+0x238>
    1bf0:	add	r4, r4, #152	; 0x98
    1bf4:	str	r4, [r8, #4]
    1bf8:	mov	r3, #1
    1bfc:	strb	r3, [r8, #9]
    1c00:	b	1a6c <getAttributeId+0x88>
    1c04:	mov	r0, r9
    1c08:	bl	1238 <poolGrow>
    1c0c:	cmp	r0, #0
    1c10:	beq	1aac <getAttributeId+0xc8>
    1c14:	ldr	r2, [r4, #92]	; 0x5c
    1c18:	b	1b5c <getAttributeId+0x178>
    1c1c:	add	r2, r7, #7
    1c20:	add	r1, r4, #60	; 0x3c
    1c24:	mov	r0, r6
    1c28:	mov	r3, #8
    1c2c:	bl	a50 <lookup>
    1c30:	str	r0, [r8, #4]
    1c34:	b	1bf8 <getAttributeId+0x214>

00001c38 <appendAttributeValue>:
    1c38:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1c3c:	mov	r5, r1
    1c40:	strd	r6, [sp, #8]
    1c44:	mov	r6, r3
    1c48:	strd	r8, [sp, #16]
    1c4c:	mov	r8, r0
    1c50:	ldr	r9, [r0, #364]	; 0x16c
    1c54:	strd	sl, [sp, #24]
    1c58:	mov	sl, r2
    1c5c:	add	fp, r0, #456	; 0x1c8
    1c60:	str	lr, [sp, #32]
    1c64:	sub	sp, sp, #28
    1c68:	ldr	r4, [sp, #68]	; 0x44
    1c6c:	add	r3, r9, #80	; 0x50
    1c70:	str	r3, [sp, #8]
    1c74:	add	r3, sp, #16
    1c78:	mov	r1, r6
    1c7c:	ldr	r7, [r5, #16]
    1c80:	mov	r0, r5
    1c84:	ldr	r2, [sp, #64]	; 0x40
    1c88:	blx	r7
    1c8c:	add	r0, r0, #4
    1c90:	cmp	r0, #43	; 0x2b
    1c94:	ldrls	pc, [pc, r0, lsl #2]
    1c98:	b	1ef8 <appendAttributeValue+0x2c0>
    1c9c:	.word	0x00001d9c
    1ca0:	.word	0x00001d4c
    1ca4:	.word	0x00001ef8
    1ca8:	.word	0x00001ee0
    1cac:	.word	0x00001de0
    1cb0:	.word	0x00001ef8
    1cb4:	.word	0x00001ef8
    1cb8:	.word	0x00001ef8
    1cbc:	.word	0x00001ef8
    1cc0:	.word	0x00001ef8
    1cc4:	.word	0x00001dbc
    1cc8:	.word	0x00001d58
    1ccc:	.word	0x00001ef8
    1cd0:	.word	0x00001e9c
    1cd4:	.word	0x00001e00
    1cd8:	.word	0x00001ef8
    1cdc:	.word	0x00001ef8
    1ce0:	.word	0x00001ef8
    1ce4:	.word	0x00001ef8
    1ce8:	.word	0x00001ef8
    1cec:	.word	0x00001ef8
    1cf0:	.word	0x00001ef8
    1cf4:	.word	0x00001ef8
    1cf8:	.word	0x00001ef8
    1cfc:	.word	0x00001ef8
    1d00:	.word	0x00001ef8
    1d04:	.word	0x00001ef8
    1d08:	.word	0x00001ef8
    1d0c:	.word	0x00001ef8
    1d10:	.word	0x00001ef8
    1d14:	.word	0x00001ef8
    1d18:	.word	0x00001ef8
    1d1c:	.word	0x00001ef8
    1d20:	.word	0x00001ef8
    1d24:	.word	0x00001ef8
    1d28:	.word	0x00001ef8
    1d2c:	.word	0x00001ef8
    1d30:	.word	0x00001ef8
    1d34:	.word	0x00001ef8
    1d38:	.word	0x00001ef8
    1d3c:	.word	0x00001ef8
    1d40:	.word	0x00001ef8
    1d44:	.word	0x00001ef8
    1d48:	.word	0x00001d58
    1d4c:	ldr	r3, [r5, #68]	; 0x44
    1d50:	add	r6, r6, r3
    1d54:	str	r6, [sp, #16]
    1d58:	cmp	sl, #0
    1d5c:	ldr	r3, [r4, #12]
    1d60:	bne	1d7c <appendAttributeValue+0x144>
    1d64:	ldr	r2, [r4, #16]
    1d68:	cmp	r2, r3
    1d6c:	beq	1dd8 <appendAttributeValue+0x1a0>
    1d70:	ldrb	r2, [r3, #-1]
    1d74:	cmp	r2, #32
    1d78:	beq	1dd8 <appendAttributeValue+0x1a0>
    1d7c:	ldr	r2, [r4, #8]
    1d80:	cmp	r2, r3
    1d84:	beq	1fe0 <appendAttributeValue+0x3a8>
    1d88:	add	r1, r3, #1
    1d8c:	mov	r2, #32
    1d90:	str	r1, [r4, #12]
    1d94:	strb	r2, [r3]
    1d98:	b	1dd8 <appendAttributeValue+0x1a0>
    1d9c:	mov	r0, #0
    1da0:	add	sp, sp, #28
    1da4:	ldrd	r4, [sp]
    1da8:	ldrd	r6, [sp, #8]
    1dac:	ldrd	r8, [sp, #16]
    1db0:	ldrd	sl, [sp, #24]
    1db4:	add	sp, sp, #32
    1db8:	pop	{pc}		; (ldr pc, [sp], #4)
    1dbc:	mov	r2, r6
    1dc0:	mov	r1, r5
    1dc4:	ldr	r3, [sp, #16]
    1dc8:	mov	r0, r4
    1dcc:	bl	1434 <poolAppend>
    1dd0:	cmp	r0, #0
    1dd4:	beq	2050 <appendAttributeValue+0x418>
    1dd8:	ldr	r6, [sp, #16]
    1ddc:	b	1c74 <appendAttributeValue+0x3c>
    1de0:	ldr	r3, [r8, #152]	; 0x98
    1de4:	cmp	r3, r5
    1de8:	movne	r0, #4
    1dec:	bne	1da0 <appendAttributeValue+0x168>
    1df0:	ldr	r3, [sp, #16]
    1df4:	mov	r0, #4
    1df8:	str	r3, [r8, #296]	; 0x128
    1dfc:	b	1da0 <appendAttributeValue+0x168>
    1e00:	mov	r1, r6
    1e04:	mov	r0, r5
    1e08:	ldr	r3, [r5, #44]	; 0x2c
    1e0c:	blx	r3
    1e10:	cmp	r0, #0
    1e14:	blt	2058 <appendAttributeValue+0x420>
    1e18:	cmp	sl, #0
    1e1c:	cmpeq	r0, #32
    1e20:	bne	1e40 <appendAttributeValue+0x208>
    1e24:	ldr	r3, [r4, #12]
    1e28:	ldr	r2, [r4, #16]
    1e2c:	cmp	r3, r2
    1e30:	beq	1dd8 <appendAttributeValue+0x1a0>
    1e34:	ldrb	r3, [r3, #-1]
    1e38:	cmp	r3, #32
    1e3c:	beq	1dd8 <appendAttributeValue+0x1a0>
    1e40:	add	r1, sp, #20
    1e44:	bl	0 <coda_XmlUtf8Encode>
    1e48:	cmp	r0, #0
    1e4c:	beq	2058 <appendAttributeValue+0x420>
    1e50:	addgt	r6, sp, #20
    1e54:	addgt	r7, r6, r0
    1e58:	bgt	1e78 <appendAttributeValue+0x240>
    1e5c:	b	1dd8 <appendAttributeValue+0x1a0>
    1e60:	ldrb	r2, [r6], #1
    1e64:	add	r1, r3, #1
    1e68:	str	r1, [r4, #12]
    1e6c:	cmp	r7, r6
    1e70:	strb	r2, [r3]
    1e74:	beq	1dd8 <appendAttributeValue+0x1a0>
    1e78:	ldrd	r2, [r4, #8]
    1e7c:	cmp	r3, r2
    1e80:	bne	1e60 <appendAttributeValue+0x228>
    1e84:	mov	r0, r4
    1e88:	bl	1238 <poolGrow>
    1e8c:	cmp	r0, #0
    1e90:	beq	2050 <appendAttributeValue+0x418>
    1e94:	ldr	r3, [r4, #12]
    1e98:	b	1e60 <appendAttributeValue+0x228>
    1e9c:	ldr	r2, [sp, #16]
    1ea0:	mov	r0, r5
    1ea4:	ldr	r3, [r5, #48]	; 0x30
    1ea8:	ldr	r1, [r5, #68]	; 0x44
    1eac:	sub	r2, r2, r1
    1eb0:	add	r1, r6, r1
    1eb4:	blx	r3
    1eb8:	uxtb	r7, r0
    1ebc:	cmp	r7, #0
    1ec0:	beq	1f0c <appendAttributeValue+0x2d4>
    1ec4:	ldrd	r2, [r4, #8]
    1ec8:	cmp	r3, r2
    1ecc:	beq	2010 <appendAttributeValue+0x3d8>
    1ed0:	add	r2, r3, #1
    1ed4:	str	r2, [r4, #12]
    1ed8:	strb	r7, [r3]
    1edc:	b	1dd8 <appendAttributeValue+0x1a0>
    1ee0:	ldr	r3, [r8, #152]	; 0x98
    1ee4:	mov	r0, #4
    1ee8:	cmp	r3, r5
    1eec:	bne	1da0 <appendAttributeValue+0x168>
    1ef0:	str	r6, [r8, #296]	; 0x128
    1ef4:	b	1da0 <appendAttributeValue+0x168>
    1ef8:	ldr	r3, [r8, #152]	; 0x98
    1efc:	mov	r0, #23
    1f00:	cmp	r3, r5
    1f04:	bne	1da0 <appendAttributeValue+0x168>
    1f08:	b	1ef0 <appendAttributeValue+0x2b8>
    1f0c:	ldr	r3, [sp, #16]
    1f10:	mov	r1, r5
    1f14:	mov	r0, fp
    1f18:	ldr	r2, [r5, #68]	; 0x44
    1f1c:	sub	r3, r3, r2
    1f20:	add	r2, r6, r2
    1f24:	bl	14d8 <poolStoreString>
    1f28:	subs	r2, r0, #0
    1f2c:	beq	2050 <appendAttributeValue+0x418>
    1f30:	mov	r3, r7
    1f34:	mov	r1, r9
    1f38:	mov	r0, r8
    1f3c:	bl	a50 <lookup>
    1f40:	ldr	r2, [sp, #8]
    1f44:	mov	r7, r0
    1f48:	ldr	r3, [r8, #472]	; 0x1d8
    1f4c:	cmp	r4, r2
    1f50:	str	r3, [r8, #468]	; 0x1d4
    1f54:	beq	2028 <appendAttributeValue+0x3f0>
    1f58:	ldrb	r3, [r9, #129]	; 0x81
    1f5c:	cmp	r3, #0
    1f60:	bne	1ff8 <appendAttributeValue+0x3c0>
    1f64:	cmp	r7, #0
    1f68:	beq	20c0 <appendAttributeValue+0x488>
    1f6c:	ldrb	r3, [r7, #34]	; 0x22
    1f70:	cmp	r3, #0
    1f74:	beq	20b8 <appendAttributeValue+0x480>
    1f78:	ldrb	r3, [r7, #32]
    1f7c:	cmp	r3, #0
    1f80:	bne	20a4 <appendAttributeValue+0x46c>
    1f84:	ldr	r3, [r7, #28]
    1f88:	cmp	r3, #0
    1f8c:	str	r3, [sp, #12]
    1f90:	bne	2090 <appendAttributeValue+0x458>
    1f94:	ldr	r1, [r7, #4]
    1f98:	cmp	r1, #0
    1f9c:	beq	207c <appendAttributeValue+0x444>
    1fa0:	ldr	ip, [r7, #8]
    1fa4:	mov	r0, #1
    1fa8:	mov	r3, r1
    1fac:	mov	r2, sl
    1fb0:	strb	r0, [r7, #32]
    1fb4:	mov	r0, r8
    1fb8:	str	r4, [sp, #4]
    1fbc:	add	ip, r1, ip
    1fc0:	ldr	r1, [r8, #236]	; 0xec
    1fc4:	str	ip, [sp]
    1fc8:	bl	1c38 <appendAttributeValue>
    1fcc:	ldr	r3, [sp, #12]
    1fd0:	cmp	r0, #0
    1fd4:	strb	r3, [r7, #32]
    1fd8:	beq	1dd8 <appendAttributeValue+0x1a0>
    1fdc:	b	1da0 <appendAttributeValue+0x168>
    1fe0:	mov	r0, r4
    1fe4:	bl	1238 <poolGrow>
    1fe8:	cmp	r0, #0
    1fec:	beq	2050 <appendAttributeValue+0x418>
    1ff0:	ldr	r3, [r4, #12]
    1ff4:	b	1d88 <appendAttributeValue+0x150>
    1ff8:	ldrb	r3, [r9, #130]	; 0x82
    1ffc:	cmp	r3, #0
    2000:	bne	1f64 <appendAttributeValue+0x32c>
    2004:	cmp	r7, #0
    2008:	bne	1f78 <appendAttributeValue+0x340>
    200c:	b	1dd8 <appendAttributeValue+0x1a0>
    2010:	mov	r0, r4
    2014:	bl	1238 <poolGrow>
    2018:	cmp	r0, #0
    201c:	beq	2050 <appendAttributeValue+0x418>
    2020:	ldr	r3, [r4, #12]
    2024:	b	1ed0 <appendAttributeValue+0x298>
    2028:	ldr	r3, [r8, #280]	; 0x118
    202c:	cmp	r3, #0
    2030:	beq	2004 <appendAttributeValue+0x3cc>
    2034:	ldrb	r3, [r9, #130]	; 0x82
    2038:	cmp	r3, #0
    203c:	beq	206c <appendAttributeValue+0x434>
    2040:	ldr	r3, [r8, #308]	; 0x134
    2044:	cmp	r3, #0
    2048:	bne	2004 <appendAttributeValue+0x3cc>
    204c:	b	1f64 <appendAttributeValue+0x32c>
    2050:	mov	r0, #1
    2054:	b	1da0 <appendAttributeValue+0x168>
    2058:	ldr	r3, [r8, #152]	; 0x98
    205c:	mov	r0, #14
    2060:	cmp	r3, r5
    2064:	bne	1da0 <appendAttributeValue+0x168>
    2068:	b	1ef0 <appendAttributeValue+0x2b8>
    206c:	ldrb	r3, [r9, #129]	; 0x81
    2070:	cmp	r3, #0
    2074:	beq	1f64 <appendAttributeValue+0x32c>
    2078:	b	2004 <appendAttributeValue+0x3cc>
    207c:	ldr	r3, [r8, #152]	; 0x98
    2080:	mov	r0, #16
    2084:	cmp	r3, r5
    2088:	bne	1da0 <appendAttributeValue+0x168>
    208c:	b	1ef0 <appendAttributeValue+0x2b8>
    2090:	ldr	r3, [r8, #152]	; 0x98
    2094:	mov	r0, #15
    2098:	cmp	r3, r5
    209c:	bne	1da0 <appendAttributeValue+0x168>
    20a0:	b	1ef0 <appendAttributeValue+0x2b8>
    20a4:	ldr	r3, [r8, #152]	; 0x98
    20a8:	mov	r0, #12
    20ac:	cmp	r3, r5
    20b0:	bne	1da0 <appendAttributeValue+0x168>
    20b4:	b	1ef0 <appendAttributeValue+0x2b8>
    20b8:	mov	r0, #24
    20bc:	b	1da0 <appendAttributeValue+0x168>
    20c0:	mov	r0, #11
    20c4:	b	1da0 <appendAttributeValue+0x168>

000020c8 <storeEntityValue>:
    20c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    20cc:	mov	r5, r0
    20d0:	ldr	r4, [r0, #364]	; 0x16c
    20d4:	strd	r6, [sp, #8]
    20d8:	mov	r7, r3
    20dc:	mov	r6, r1
    20e0:	strd	r8, [sp, #16]
    20e4:	mov	r9, #1
    20e8:	strd	sl, [sp, #24]
    20ec:	mov	sl, r2
    20f0:	str	lr, [sp, #32]
    20f4:	sub	sp, sp, #28
    20f8:	ldr	r3, [r4, #104]	; 0x68
    20fc:	add	r8, r4, #104	; 0x68
    2100:	ldr	fp, [r0, #284]	; 0x11c
    2104:	str	r9, [r0, #284]	; 0x11c
    2108:	cmp	r3, #0
    210c:	beq	23e0 <storeEntityValue+0x318>
    2110:	add	r3, r5, #432	; 0x1b0
    2114:	str	r3, [sp, #8]
    2118:	add	r3, sp, #16
    211c:	mov	r2, r7
    2120:	ldr	r9, [r6, #20]
    2124:	mov	r1, sl
    2128:	mov	r0, r6
    212c:	blx	r9
    2130:	add	r0, r0, #4
    2134:	cmp	r0, #32
    2138:	ldrls	pc, [pc, r0, lsl #2]
    213c:	b	23cc <storeEntityValue+0x304>
    2140:	.word	0x000021f4
    2144:	.word	0x000021c4
    2148:	.word	0x000023cc
    214c:	.word	0x0000225c
    2150:	.word	0x0000223c
    2154:	.word	0x000023cc
    2158:	.word	0x000023cc
    215c:	.word	0x000023cc
    2160:	.word	0x000023cc
    2164:	.word	0x000023cc
    2168:	.word	0x00002218
    216c:	.word	0x000021d0
    2170:	.word	0x000023cc
    2174:	.word	0x00002218
    2178:	.word	0x0000234c
    217c:	.word	0x000023cc
    2180:	.word	0x000023cc
    2184:	.word	0x000023cc
    2188:	.word	0x000023cc
    218c:	.word	0x000023cc
    2190:	.word	0x000023cc
    2194:	.word	0x000023cc
    2198:	.word	0x000023cc
    219c:	.word	0x000023cc
    21a0:	.word	0x000023cc
    21a4:	.word	0x000023cc
    21a8:	.word	0x000023cc
    21ac:	.word	0x000023cc
    21b0:	.word	0x000023cc
    21b4:	.word	0x000023cc
    21b8:	.word	0x000023cc
    21bc:	.word	0x000023cc
    21c0:	.word	0x00002274
    21c4:	ldr	r3, [r6, #68]	; 0x44
    21c8:	add	sl, sl, r3
    21cc:	str	sl, [sp, #16]
    21d0:	ldrd	r2, [r4, #112]	; 0x70
    21d4:	cmp	r2, r3
    21d8:	beq	23f8 <storeEntityValue+0x330>
    21dc:	add	r2, r3, #1
    21e0:	str	r2, [r4, #116]	; 0x74
    21e4:	mov	r2, #10
    21e8:	strb	r2, [r3]
    21ec:	ldr	sl, [sp, #16]
    21f0:	b	2118 <storeEntityValue+0x50>
    21f4:	mov	r0, #0
    21f8:	str	fp, [r5, #284]	; 0x11c
    21fc:	add	sp, sp, #28
    2200:	ldrd	r4, [sp]
    2204:	ldrd	r6, [sp, #8]
    2208:	ldrd	r8, [sp, #16]
    220c:	ldrd	sl, [sp, #24]
    2210:	add	sp, sp, #32
    2214:	pop	{pc}		; (ldr pc, [sp], #4)
    2218:	mov	r2, sl
    221c:	mov	r1, r6
    2220:	ldr	r3, [sp, #16]
    2224:	mov	r0, r8
    2228:	bl	1434 <poolAppend>
    222c:	cmp	r0, #0
    2230:	bne	21ec <storeEntityValue+0x124>
    2234:	mov	r0, #1
    2238:	b	21f8 <storeEntityValue+0x130>
    223c:	ldr	r3, [r5, #152]	; 0x98
    2240:	cmp	r3, r6
    2244:	movne	r0, #4
    2248:	bne	21f8 <storeEntityValue+0x130>
    224c:	ldr	r3, [sp, #16]
    2250:	mov	r0, #4
    2254:	str	r3, [r5, #296]	; 0x128
    2258:	b	21f8 <storeEntityValue+0x130>
    225c:	ldr	r3, [r5, #152]	; 0x98
    2260:	mov	r0, #4
    2264:	cmp	r3, r6
    2268:	bne	21f8 <storeEntityValue+0x130>
    226c:	str	sl, [r5, #296]	; 0x128
    2270:	b	21f8 <storeEntityValue+0x130>
    2274:	ldrb	r3, [r5, #504]	; 0x1f8
    2278:	cmp	r3, #0
    227c:	bne	228c <storeEntityValue+0x1c4>
    2280:	ldr	r3, [r5, #152]	; 0x98
    2284:	cmp	r3, r6
    2288:	beq	2440 <storeEntityValue+0x378>
    228c:	ldr	r2, [r6, #68]	; 0x44
    2290:	mov	r1, r6
    2294:	ldr	r3, [sp, #16]
    2298:	ldr	r0, [sp, #8]
    229c:	sub	r3, r3, r2
    22a0:	add	r2, sl, r2
    22a4:	bl	14d8 <poolStoreString>
    22a8:	subs	r2, r0, #0
    22ac:	beq	2234 <storeEntityValue+0x16c>
    22b0:	mov	r3, #0
    22b4:	add	r1, r4, #132	; 0x84
    22b8:	mov	r0, r5
    22bc:	bl	a50 <lookup>
    22c0:	ldr	r3, [r5, #448]	; 0x1c0
    22c4:	subs	r9, r0, #0
    22c8:	str	r3, [r5, #444]	; 0x1bc
    22cc:	beq	2460 <storeEntityValue+0x398>
    22d0:	ldrb	r3, [r9, #32]
    22d4:	cmp	r3, #0
    22d8:	str	r3, [sp, #12]
    22dc:	bne	2470 <storeEntityValue+0x3a8>
    22e0:	ldr	sl, [r9, #16]
    22e4:	cmp	sl, #0
    22e8:	beq	2410 <storeEntityValue+0x348>
    22ec:	ldr	lr, [r5, #120]	; 0x78
    22f0:	cmp	lr, #0
    22f4:	beq	2340 <storeEntityValue+0x278>
    22f8:	ldr	r1, [sp, #12]
    22fc:	mov	r0, #1
    2300:	mov	r3, sl
    2304:	strb	r1, [r4, #131]	; 0x83
    2308:	strb	r0, [r9, #32]
    230c:	ldr	ip, [r9, #24]
    2310:	ldr	r2, [r9, #20]
    2314:	ldr	r0, [r5, #124]	; 0x7c
    2318:	str	ip, [sp]
    231c:	mov	ip, lr
    2320:	blx	ip
    2324:	cmp	r0, #0
    2328:	beq	2484 <storeEntityValue+0x3bc>
    232c:	ldr	r3, [sp, #12]
    2330:	strb	r3, [r9, #32]
    2334:	ldrb	r3, [r4, #131]	; 0x83
    2338:	cmp	r3, #0
    233c:	bne	21ec <storeEntityValue+0x124>
    2340:	ldrb	r3, [r4, #130]	; 0x82
    2344:	strb	r3, [r4, #128]	; 0x80
    2348:	b	21ec <storeEntityValue+0x124>
    234c:	mov	r1, sl
    2350:	mov	r0, r6
    2354:	ldr	r3, [r6, #44]	; 0x2c
    2358:	blx	r3
    235c:	cmp	r0, #0
    2360:	blt	244c <storeEntityValue+0x384>
    2364:	add	r1, sp, #20
    2368:	bl	0 <coda_XmlUtf8Encode>
    236c:	cmp	r0, #0
    2370:	beq	244c <storeEntityValue+0x384>
    2374:	addgt	r3, sp, #20
    2378:	addgt	sl, r3, r0
    237c:	movgt	r9, r3
    2380:	ble	21ec <storeEntityValue+0x124>
    2384:	ldrd	r2, [r4, #112]	; 0x70
    2388:	cmp	r2, r3
    238c:	beq	23b4 <storeEntityValue+0x2ec>
    2390:	add	r2, r3, #1
    2394:	str	r2, [r4, #116]	; 0x74
    2398:	ldrb	r2, [r9], #1
    239c:	cmp	sl, r9
    23a0:	strb	r2, [r3]
    23a4:	beq	21ec <storeEntityValue+0x124>
    23a8:	ldrd	r2, [r4, #112]	; 0x70
    23ac:	cmp	r2, r3
    23b0:	bne	2390 <storeEntityValue+0x2c8>
    23b4:	mov	r0, r8
    23b8:	bl	1238 <poolGrow>
    23bc:	cmp	r0, #0
    23c0:	beq	2234 <storeEntityValue+0x16c>
    23c4:	ldr	r3, [r4, #116]	; 0x74
    23c8:	b	2390 <storeEntityValue+0x2c8>
    23cc:	ldr	r3, [r5, #152]	; 0x98
    23d0:	mov	r0, #23
    23d4:	cmp	r3, r6
    23d8:	bne	21f8 <storeEntityValue+0x130>
    23dc:	b	226c <storeEntityValue+0x1a4>
    23e0:	mov	r0, r8
    23e4:	bl	1238 <poolGrow>
    23e8:	cmp	r0, #0
    23ec:	bne	2110 <storeEntityValue+0x48>
    23f0:	mov	r0, r9
    23f4:	b	21fc <storeEntityValue+0x134>
    23f8:	mov	r0, r8
    23fc:	bl	1238 <poolGrow>
    2400:	cmp	r0, #0
    2404:	beq	2234 <storeEntityValue+0x16c>
    2408:	ldr	r3, [r4, #116]	; 0x74
    240c:	b	21dc <storeEntityValue+0x114>
    2410:	ldmib	r9, {r3, ip}
    2414:	mov	r2, #1
    2418:	mov	r0, r5
    241c:	strb	r2, [r9, #32]
    2420:	ldr	r1, [r5, #236]	; 0xec
    2424:	mov	r2, r3
    2428:	add	r3, r3, ip
    242c:	bl	20c8 <storeEntityValue>
    2430:	cmp	r0, #0
    2434:	strb	sl, [r9, #32]
    2438:	beq	21ec <storeEntityValue+0x124>
    243c:	b	21f8 <storeEntityValue+0x130>
    2440:	mov	r0, #10
    2444:	str	sl, [r5, #296]	; 0x128
    2448:	b	21f8 <storeEntityValue+0x130>
    244c:	ldr	r3, [r5, #152]	; 0x98
    2450:	mov	r0, #14
    2454:	cmp	r3, r6
    2458:	bne	21f8 <storeEntityValue+0x130>
    245c:	b	226c <storeEntityValue+0x1a4>
    2460:	ldrb	r3, [r4, #130]	; 0x82
    2464:	mov	r0, r9
    2468:	strb	r3, [r4, #128]	; 0x80
    246c:	b	21f8 <storeEntityValue+0x130>
    2470:	ldr	r3, [r5, #152]	; 0x98
    2474:	mov	r0, #12
    2478:	cmp	r3, r6
    247c:	bne	21f8 <storeEntityValue+0x130>
    2480:	b	226c <storeEntityValue+0x1a4>
    2484:	mov	r3, r0
    2488:	mov	r0, #21
    248c:	strb	r3, [r9, #32]
    2490:	b	21f8 <storeEntityValue+0x130>

00002494 <entityValueProcessor>:
    2494:	strd	r4, [sp, #-28]!	; 0xffffffe4
    2498:	strd	r6, [sp, #8]
    249c:	mov	r7, r1
    24a0:	mov	r6, r2
    24a4:	strd	r8, [sp, #16]
    24a8:	mov	r9, r0
    24ac:	mov	r8, r3
    24b0:	str	lr, [sp, #24]
    24b4:	sub	sp, sp, #12
    24b8:	ldr	r4, [r0, #152]	; 0x98
    24bc:	str	r1, [sp, #4]
    24c0:	b	24c8 <entityValueProcessor+0x34>
    24c4:	ldr	r1, [sp, #4]
    24c8:	add	r3, sp, #4
    24cc:	mov	r2, r6
    24d0:	mov	r0, r4
    24d4:	ldr	r5, [r4]
    24d8:	blx	r5
    24dc:	cmp	r0, #0
    24e0:	bgt	24c4 <entityValueProcessor+0x30>
    24e4:	ldrb	r3, [r9, #500]	; 0x1f4
    24e8:	cmp	r3, #0
    24ec:	bne	251c <entityValueProcessor+0x88>
    24f0:	cmp	r0, #0
    24f4:	movne	r0, r3
    24f8:	strne	r7, [r8]
    24fc:	bne	2504 <entityValueProcessor+0x70>
    2500:	mov	r0, #4
    2504:	add	sp, sp, #12
    2508:	ldrd	r4, [sp]
    250c:	ldrd	r6, [sp, #8]
    2510:	ldrd	r8, [sp, #16]
    2514:	add	sp, sp, #24
    2518:	pop	{pc}		; (ldr pc, [sp], #4)
    251c:	cmn	r0, #1
    2520:	moveq	r0, #5
    2524:	beq	2504 <entityValueProcessor+0x70>
    2528:	cmp	r0, #0
    252c:	beq	2500 <entityValueProcessor+0x6c>
    2530:	cmn	r0, #2
    2534:	moveq	r0, #6
    2538:	beq	2504 <entityValueProcessor+0x70>
    253c:	mov	r3, r6
    2540:	mov	r2, r7
    2544:	mov	r1, r4
    2548:	mov	r0, r9
    254c:	bl	20c8 <storeEntityValue>
    2550:	b	2504 <entityValueProcessor+0x70>

00002554 <entityValueInitProcessor>:
    2554:	strd	r4, [sp, #-28]!	; 0xffffffe4
    2558:	mov	r4, r0
    255c:	mov	r5, r1
    2560:	strd	r6, [sp, #8]
    2564:	mov	r7, r1
    2568:	mov	r6, r2
    256c:	strd	r8, [sp, #16]
    2570:	mov	r8, r3
    2574:	str	lr, [sp, #24]
    2578:	sub	sp, sp, #12
    257c:	str	r1, [r4, #296]	; 0x128
    2580:	str	r1, [sp, #4]
    2584:	b	258c <entityValueInitProcessor+0x38>
    2588:	str	r3, [r4, #296]	; 0x128
    258c:	ldr	ip, [r4, #152]	; 0x98
    2590:	add	r3, sp, #4
    2594:	mov	r2, r6
    2598:	mov	r1, r5
    259c:	mov	r0, ip
    25a0:	ldr	r9, [ip]
    25a4:	blx	r9
    25a8:	ldr	r3, [sp, #4]
    25ac:	cmp	r0, #0
    25b0:	str	r3, [r4, #300]	; 0x12c
    25b4:	ble	25f8 <entityValueInitProcessor+0xa4>
    25b8:	cmp	r0, #12
    25bc:	beq	261c <entityValueInitProcessor+0xc8>
    25c0:	cmp	r3, r6
    25c4:	cmpeq	r0, #14
    25c8:	mov	r5, r3
    25cc:	bne	2588 <entityValueInitProcessor+0x34>
    25d0:	ldrb	r0, [r4, #500]	; 0x1f4
    25d4:	cmp	r0, #0
    25d8:	bne	2588 <entityValueInitProcessor+0x34>
    25dc:	str	r3, [r8]
    25e0:	add	sp, sp, #12
    25e4:	ldrd	r4, [sp]
    25e8:	ldrd	r6, [sp, #8]
    25ec:	ldrd	r8, [sp, #16]
    25f0:	add	sp, sp, #24
    25f4:	pop	{pc}		; (ldr pc, [sp], #4)
    25f8:	ldrb	r3, [r4, #500]	; 0x1f4
    25fc:	cmp	r3, #0
    2600:	bne	2674 <entityValueInitProcessor+0x120>
    2604:	cmp	r0, #0
    2608:	movne	r0, r3
    260c:	strne	r7, [r8]
    2610:	bne	25e0 <entityValueInitProcessor+0x8c>
    2614:	mov	r0, #4
    2618:	b	25e0 <entityValueInitProcessor+0x8c>
    261c:	mov	r2, r5
    2620:	mov	r1, #0
    2624:	mov	r0, r4
    2628:	bl	1544 <processXmlDecl>
    262c:	cmp	r0, #0
    2630:	bne	25e0 <entityValueInitProcessor+0x8c>
    2634:	ldr	r3, [r4, #496]	; 0x1f0
    2638:	cmp	r3, #2
    263c:	moveq	r0, #35	; 0x23
    2640:	beq	25e0 <entityValueInitProcessor+0x8c>
    2644:	cmp	r3, #3
    2648:	beq	26ac <entityValueInitProcessor+0x158>
    264c:	ldr	r1, [sp, #4]
    2650:	movw	ip, #0
    2654:	movt	ip, #0
    2658:	mov	r2, r6
    265c:	mov	r3, r8
    2660:	mov	r0, r4
    2664:	str	r1, [r8]
    2668:	str	ip, [r4, #288]	; 0x120
    266c:	bl	2494 <entityValueProcessor>
    2670:	b	25e0 <entityValueInitProcessor+0x8c>
    2674:	cmn	r0, #1
    2678:	moveq	r0, #5
    267c:	beq	25e0 <entityValueInitProcessor+0x8c>
    2680:	cmp	r0, #0
    2684:	beq	2614 <entityValueInitProcessor+0xc0>
    2688:	cmn	r0, #2
    268c:	moveq	r0, #6
    2690:	beq	25e0 <entityValueInitProcessor+0x8c>
    2694:	mov	r3, r6
    2698:	mov	r2, r7
    269c:	ldr	r1, [r4, #152]	; 0x98
    26a0:	mov	r0, r4
    26a4:	bl	20c8 <storeEntityValue>
    26a8:	b	25e0 <entityValueInitProcessor+0x8c>
    26ac:	ldr	r3, [sp, #4]
    26b0:	str	r3, [r8]
    26b4:	b	25e0 <entityValueInitProcessor+0x8c>

000026b8 <poolCopyString>:
    26b8:	strd	r4, [sp, #-16]!
    26bc:	mov	r4, r0
    26c0:	mov	r5, r1
    26c4:	str	r6, [sp, #8]
    26c8:	str	lr, [sp, #12]
    26cc:	b	26e8 <poolCopyString+0x30>
    26d0:	add	r2, r3, #1
    26d4:	str	r2, [r4, #12]
    26d8:	ldrb	r2, [r5], #1
    26dc:	cmp	r2, #0
    26e0:	strb	r2, [r3]
    26e4:	beq	270c <poolCopyString+0x54>
    26e8:	ldrd	r2, [r4, #8]
    26ec:	cmp	r3, r2
    26f0:	bne	26d0 <poolCopyString+0x18>
    26f4:	mov	r0, r4
    26f8:	bl	1238 <poolGrow>
    26fc:	cmp	r0, #0
    2700:	beq	2718 <poolCopyString+0x60>
    2704:	ldr	r3, [r4, #12]
    2708:	b	26d0 <poolCopyString+0x18>
    270c:	ldr	r3, [r4, #12]
    2710:	ldr	r0, [r4, #16]
    2714:	str	r3, [r4, #16]
    2718:	ldrd	r4, [sp]
    271c:	ldr	r6, [sp, #8]
    2720:	add	sp, sp, #12
    2724:	pop	{pc}		; (ldr pc, [sp], #4)

00002728 <parserInit>:
    2728:	movw	r3, #0
    272c:	movt	r3, #0
    2730:	strd	r4, [sp, #-16]!
    2734:	mov	r4, r0
    2738:	add	r0, r0, #264	; 0x108
    273c:	str	r6, [sp, #8]
    2740:	mov	r6, r1
    2744:	str	lr, [sp, #12]
    2748:	str	r3, [r4, #288]	; 0x120
    274c:	bl	0 <coda_XmlPrologStateInit>
    2750:	cmp	r6, #0
    2754:	beq	2768 <parserInit+0x40>
    2758:	mov	r1, r6
    275c:	add	r0, r4, #432	; 0x1b0
    2760:	bl	26b8 <poolCopyString>
    2764:	mov	r6, r0
    2768:	mov	r5, #0
    276c:	add	r1, r4, #152	; 0x98
    2770:	str	r6, [r4, #240]	; 0xf0
    2774:	mov	r2, r5
    2778:	add	r0, r4, #156	; 0x9c
    277c:	str	r5, [r4, #368]	; 0x170
    2780:	bl	0 <coda_XmlInitEncoding>
    2784:	ldr	r2, [r4, #8]
    2788:	mov	r0, #0
    278c:	mov	r1, #0
    2790:	mov	ip, #1
    2794:	str	r5, [r4]
    2798:	str	r5, [r4, #4]
    279c:	strd	r0, [r4, #40]	; 0x28
    27a0:	add	r0, r4, #360	; 0x168
    27a4:	add	r1, r4, #504	; 0x1f8
    27a8:	str	r2, [r4, #24]
    27ac:	str	r2, [r4, #28]
    27b0:	str	r5, [r4, #48]	; 0x30
    27b4:	str	r5, [r4, #60]	; 0x3c
    27b8:	str	r5, [r4, #64]	; 0x40
    27bc:	str	r5, [r4, #68]	; 0x44
    27c0:	str	r5, [r4, #72]	; 0x48
    27c4:	str	r5, [r4, #76]	; 0x4c
    27c8:	str	r5, [r4, #80]	; 0x50
    27cc:	str	r5, [r4, #84]	; 0x54
    27d0:	str	r5, [r4, #88]	; 0x58
    27d4:	str	r5, [r4, #92]	; 0x5c
    27d8:	str	r5, [r4, #96]	; 0x60
    27dc:	str	r5, [r4, #100]	; 0x64
    27e0:	str	r5, [r4, #104]	; 0x68
    27e4:	str	r5, [r4, #108]	; 0x6c
    27e8:	str	r5, [r4, #112]	; 0x70
    27ec:	str	r5, [r4, #116]	; 0x74
    27f0:	str	r5, [r4, #120]	; 0x78
    27f4:	strd	r4, [r4, #124]	; 0x7c
    27f8:	str	r5, [r4, #136]	; 0x88
    27fc:	str	r5, [r4, #140]	; 0x8c
    2800:	str	r5, [r4, #144]	; 0x90
    2804:	str	r5, [r4, #148]	; 0x94
    2808:	str	r5, [r4, #416]	; 0x1a0
    280c:	str	r5, [r4, #420]	; 0x1a4
    2810:	str	r5, [r4, #424]	; 0x1a8
    2814:	str	r5, [r4, #428]	; 0x1ac
    2818:	str	r5, [r4, #292]	; 0x124
    281c:	str	r5, [r4, #296]	; 0x128
    2820:	str	r5, [r4, #300]	; 0x12c
    2824:	str	r5, [r4, #304]	; 0x130
    2828:	str	r5, [r4, #308]	; 0x134
    282c:	strb	ip, [r4, #316]	; 0x13c
    2830:	str	r5, [r4, #320]	; 0x140
    2834:	str	r5, [r4, #324]	; 0x144
    2838:	str	r5, [r4, #328]	; 0x148
    283c:	str	r5, [r4, #332]	; 0x14c
    2840:	str	r5, [r4, #336]	; 0x150
    2844:	str	r5, [r4, #340]	; 0x154
    2848:	str	r5, [r4, #344]	; 0x158
    284c:	str	r5, [r4, #348]	; 0x15c
    2850:	str	r5, [r4, #352]	; 0x160
    2854:	str	r5, [r4, #356]	; 0x164
    2858:	strh	r5, [r0]
    285c:	str	r5, [r4, #248]	; 0xf8
    2860:	str	r5, [r4, #252]	; 0xfc
    2864:	str	r5, [r4, #260]	; 0x104
    2868:	str	r5, [r4, #372]	; 0x174
    286c:	str	r5, [r4, #380]	; 0x17c
    2870:	str	r5, [r4, #392]	; 0x188
    2874:	str	r5, [r4, #492]	; 0x1ec
    2878:	str	r5, [r4, #496]	; 0x1f0
    287c:	strh	r5, [r1]
    2880:	str	r5, [r4, #508]	; 0x1fc
    2884:	str	r5, [r4, #512]	; 0x200
    2888:	ldrd	r4, [sp]
    288c:	ldr	r6, [sp, #8]
    2890:	add	sp, sp, #12
    2894:	pop	{pc}		; (ldr pc, [sp], #4)

00002898 <copyEntityTable>:
    2898:	strd	r4, [sp, #-36]!	; 0xffffffdc
    289c:	mov	ip, #0
    28a0:	mov	r5, r2
    28a4:	strd	r6, [sp, #8]
    28a8:	ldr	r6, [r3, #8]
    28ac:	strd	sl, [sp, #24]
    28b0:	ldr	fp, [r3]
    28b4:	strd	r8, [sp, #16]
    28b8:	mov	r8, r0
    28bc:	str	lr, [sp, #32]
    28c0:	sub	sp, sp, #20
    28c4:	stm	sp, {r1, ip}
    28c8:	add	r6, fp, r6, lsl #2
    28cc:	str	ip, [sp, #8]
    28d0:	cmp	fp, r6
    28d4:	beq	2900 <copyEntityTable+0x68>
    28d8:	mov	r3, fp
    28dc:	ldr	r4, [r3], #4
    28e0:	cmp	r4, #0
    28e4:	beq	28f8 <copyEntityTable+0x60>
    28e8:	b	2920 <copyEntityTable+0x88>
    28ec:	ldr	r4, [r3], #4
    28f0:	cmp	r4, #0
    28f4:	bne	2920 <copyEntityTable+0x88>
    28f8:	cmp	r6, r3
    28fc:	bne	28ec <copyEntityTable+0x54>
    2900:	mov	r0, #1
    2904:	add	sp, sp, #20
    2908:	ldrd	r4, [sp]
    290c:	ldrd	r6, [sp, #8]
    2910:	ldrd	r8, [sp, #16]
    2914:	ldrd	sl, [sp, #24]
    2918:	add	sp, sp, #32
    291c:	pop	{pc}		; (ldr pc, [sp], #4)
    2920:	mov	r0, r5
    2924:	ldr	r1, [r4]
    2928:	mov	fp, r3
    292c:	bl	26b8 <poolCopyString>
    2930:	subs	r2, r0, #0
    2934:	beq	2a8c <copyEntityTable+0x1f4>
    2938:	mov	r3, #36	; 0x24
    293c:	mov	r0, r8
    2940:	ldr	r1, [sp]
    2944:	bl	a50 <lookup>
    2948:	subs	sl, r0, #0
    294c:	beq	2a8c <copyEntityTable+0x1f4>
    2950:	ldr	r1, [r4, #16]
    2954:	cmp	r1, #0
    2958:	beq	29fc <copyEntityTable+0x164>
    295c:	mov	r0, r5
    2960:	bl	26b8 <poolCopyString>
    2964:	cmp	r0, #0
    2968:	beq	2a8c <copyEntityTable+0x1f4>
    296c:	ldr	r7, [r4, #20]
    2970:	str	r0, [sl, #16]
    2974:	cmp	r7, #0
    2978:	beq	29a8 <copyEntityTable+0x110>
    297c:	ldr	r3, [sp, #4]
    2980:	cmp	r7, r3
    2984:	beq	2a80 <copyEntityTable+0x1e8>
    2988:	mov	r1, r7
    298c:	mov	r0, r5
    2990:	bl	26b8 <poolCopyString>
    2994:	subs	r3, r0, #0
    2998:	str	r3, [sp, #8]
    299c:	beq	2a8c <copyEntityTable+0x1f4>
    29a0:	str	r7, [sp, #4]
    29a4:	str	r3, [sl, #20]
    29a8:	ldr	r1, [r4, #24]
    29ac:	cmp	r1, #0
    29b0:	beq	29c8 <copyEntityTable+0x130>
    29b4:	mov	r0, r5
    29b8:	bl	26b8 <poolCopyString>
    29bc:	cmp	r0, #0
    29c0:	beq	2a8c <copyEntityTable+0x1f4>
    29c4:	str	r0, [sl, #24]
    29c8:	ldr	r1, [r4, #28]
    29cc:	cmp	r1, #0
    29d0:	beq	29e8 <copyEntityTable+0x150>
    29d4:	mov	r0, r5
    29d8:	bl	26b8 <poolCopyString>
    29dc:	cmp	r0, #0
    29e0:	beq	2a8c <copyEntityTable+0x1f4>
    29e4:	str	r0, [sl, #28]
    29e8:	ldrb	r3, [r4, #33]	; 0x21
    29ec:	strb	r3, [sl, #33]	; 0x21
    29f0:	ldrb	r3, [r4, #34]	; 0x22
    29f4:	strb	r3, [sl, #34]	; 0x22
    29f8:	b	28d0 <copyEntityTable+0x38>
    29fc:	ldr	r0, [r5, #12]
    2a00:	ldr	r9, [r4, #4]
    2a04:	ldr	r1, [r4, #8]
    2a08:	cmp	r0, #0
    2a0c:	beq	2a94 <copyEntityTable+0x1fc>
    2a10:	cmp	r1, #0
    2a14:	ble	2a60 <copyEntityTable+0x1c8>
    2a18:	add	r7, r9, r1
    2a1c:	b	2a3c <copyEntityTable+0x1a4>
    2a20:	add	ip, r0, #1
    2a24:	str	ip, [r5, #12]
    2a28:	ldrb	ip, [r9], #1
    2a2c:	cmp	r9, r7
    2a30:	strb	ip, [r0]
    2a34:	ldr	r0, [r5, #12]
    2a38:	beq	2a60 <copyEntityTable+0x1c8>
    2a3c:	ldr	ip, [r5, #8]
    2a40:	cmp	r0, ip
    2a44:	bne	2a20 <copyEntityTable+0x188>
    2a48:	mov	r0, r5
    2a4c:	bl	1238 <poolGrow>
    2a50:	cmp	r0, #0
    2a54:	beq	2a8c <copyEntityTable+0x1f4>
    2a58:	ldr	r0, [r5, #12]
    2a5c:	b	2a20 <copyEntityTable+0x188>
    2a60:	ldr	r3, [r5, #16]
    2a64:	str	r0, [r5, #16]
    2a68:	cmp	r3, #0
    2a6c:	beq	2a8c <copyEntityTable+0x1f4>
    2a70:	ldr	r1, [r4, #8]
    2a74:	str	r3, [sl, #4]
    2a78:	str	r1, [sl, #8]
    2a7c:	b	29c8 <copyEntityTable+0x130>
    2a80:	ldr	r3, [sp, #8]
    2a84:	str	r3, [sl, #20]
    2a88:	b	29a8 <copyEntityTable+0x110>
    2a8c:	mov	r0, #0
    2a90:	b	2904 <copyEntityTable+0x6c>
    2a94:	mov	r0, r5
    2a98:	str	r1, [sp, #12]
    2a9c:	bl	1238 <poolGrow>
    2aa0:	cmp	r0, #0
    2aa4:	beq	2a8c <copyEntityTable+0x1f4>
    2aa8:	ldr	r0, [r5, #12]
    2aac:	ldr	r1, [sp, #12]
    2ab0:	b	2a10 <copyEntityTable+0x178>

00002ab4 <setContext>:
    2ab4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2ab8:	mov	r4, r0
    2abc:	strd	r6, [sp, #8]
    2ac0:	mov	r6, r1
    2ac4:	mov	r7, #0
    2ac8:	strd	r8, [sp, #16]
    2acc:	add	r8, r0, #432	; 0x1b0
    2ad0:	strd	sl, [sp, #24]
    2ad4:	mov	sl, r1
    2ad8:	add	fp, r0, #380	; 0x17c
    2adc:	str	lr, [sp, #32]
    2ae0:	sub	sp, sp, #12
    2ae4:	ldrb	r3, [r1]
    2ae8:	ldr	r9, [r0, #364]	; 0x16c
    2aec:	cmp	r3, #0
    2af0:	beq	2b64 <setContext+0xb0>
    2af4:	ldrb	r2, [r6]
    2af8:	ldr	r3, [r4, #440]	; 0x1b8
    2afc:	ldr	ip, [r4, #444]	; 0x1bc
    2b00:	cmp	r2, #0
    2b04:	cmpne	r2, #12
    2b08:	bne	2b84 <setContext+0xd0>
    2b0c:	cmp	ip, r3
    2b10:	beq	2c64 <setContext+0x1b0>
    2b14:	add	r2, ip, #1
    2b18:	mov	r3, #0
    2b1c:	mov	r1, r9
    2b20:	mov	r0, r4
    2b24:	str	r2, [r4, #444]	; 0x1bc
    2b28:	strb	r7, [ip]
    2b2c:	ldr	r2, [r4, #448]	; 0x1c0
    2b30:	bl	a50 <lookup>
    2b34:	cmp	r0, #0
    2b38:	movne	r3, #1
    2b3c:	strbne	r3, [r0, #32]
    2b40:	ldrb	r3, [r6]
    2b44:	cmp	r3, #0
    2b48:	ldr	r3, [r4, #448]	; 0x1c0
    2b4c:	addne	r6, r6, #1
    2b50:	mov	sl, r6
    2b54:	str	r3, [r4, #444]	; 0x1bc
    2b58:	ldrb	r3, [r6]
    2b5c:	cmp	r3, #0
    2b60:	bne	2af4 <setContext+0x40>
    2b64:	mov	r0, #1
    2b68:	add	sp, sp, #12
    2b6c:	ldrd	r4, [sp]
    2b70:	ldrd	r6, [sp, #8]
    2b74:	ldrd	r8, [sp, #16]
    2b78:	ldrd	sl, [sp, #24]
    2b7c:	add	sp, sp, #32
    2b80:	pop	{pc}		; (ldr pc, [sp], #4)
    2b84:	cmp	r2, #61	; 0x3d
    2b88:	beq	2bac <setContext+0xf8>
    2b8c:	cmp	ip, r3
    2b90:	beq	2cd4 <setContext+0x220>
    2b94:	add	r3, ip, #1
    2b98:	str	r3, [r4, #444]	; 0x1bc
    2b9c:	ldrb	r3, [r6], #1
    2ba0:	strb	r3, [ip]
    2ba4:	ldrb	r3, [sl]
    2ba8:	b	2aec <setContext+0x38>
    2bac:	ldr	r2, [r4, #448]	; 0x1c0
    2bb0:	cmp	r2, ip
    2bb4:	addeq	sl, r9, #152	; 0x98
    2bb8:	beq	2c04 <setContext+0x150>
    2bbc:	cmp	ip, r3
    2bc0:	beq	2cec <setContext+0x238>
    2bc4:	add	r2, ip, #1
    2bc8:	mov	r3, #8
    2bcc:	add	r1, r9, #60	; 0x3c
    2bd0:	mov	r0, r4
    2bd4:	str	r2, [r4, #444]	; 0x1bc
    2bd8:	strb	r7, [ip]
    2bdc:	ldr	r2, [r4, #448]	; 0x1c0
    2be0:	bl	a50 <lookup>
    2be4:	subs	sl, r0, #0
    2be8:	beq	2d1c <setContext+0x268>
    2bec:	ldr	r3, [sl]
    2bf0:	ldr	ip, [r4, #448]	; 0x1c0
    2bf4:	cmp	r3, ip
    2bf8:	beq	2d24 <setContext+0x270>
    2bfc:	ldr	r3, [r4, #440]	; 0x1b8
    2c00:	str	ip, [r4, #444]	; 0x1bc
    2c04:	ldrb	r2, [r6, #1]
    2c08:	add	r5, r6, #1
    2c0c:	cmp	r2, #0
    2c10:	cmpne	r2, #12
    2c14:	bne	2c44 <setContext+0x190>
    2c18:	b	2c7c <setContext+0x1c8>
    2c1c:	add	r3, ip, #1
    2c20:	str	r3, [r4, #444]	; 0x1bc
    2c24:	ldrb	r3, [r5]
    2c28:	strb	r3, [ip]
    2c2c:	ldrb	r3, [r5, #1]!
    2c30:	ldr	ip, [r4, #444]	; 0x1bc
    2c34:	cmp	r3, #12
    2c38:	cmpne	r3, #0
    2c3c:	ldr	r3, [r4, #440]	; 0x1b8
    2c40:	beq	2c7c <setContext+0x1c8>
    2c44:	cmp	ip, r3
    2c48:	bne	2c1c <setContext+0x168>
    2c4c:	mov	r0, r8
    2c50:	bl	1238 <poolGrow>
    2c54:	cmp	r0, #0
    2c58:	beq	2d1c <setContext+0x268>
    2c5c:	ldr	ip, [r4, #444]	; 0x1bc
    2c60:	b	2c1c <setContext+0x168>
    2c64:	mov	r0, r8
    2c68:	bl	1238 <poolGrow>
    2c6c:	cmp	r0, #0
    2c70:	beq	2d1c <setContext+0x268>
    2c74:	ldr	ip, [r4, #444]	; 0x1bc
    2c78:	b	2b14 <setContext+0x60>
    2c7c:	cmp	ip, r3
    2c80:	beq	2d04 <setContext+0x250>
    2c84:	add	r3, ip, #1
    2c88:	mov	r1, sl
    2c8c:	mov	r2, #0
    2c90:	mov	r0, r4
    2c94:	str	r3, [r4, #444]	; 0x1bc
    2c98:	strb	r7, [ip]
    2c9c:	str	fp, [sp]
    2ca0:	ldr	r3, [r4, #448]	; 0x1c0
    2ca4:	bl	f5c <addBinding>
    2ca8:	cmp	r0, #0
    2cac:	bne	2d1c <setContext+0x268>
    2cb0:	ldr	r3, [r4, #448]	; 0x1c0
    2cb4:	str	r3, [r4, #444]	; 0x1bc
    2cb8:	ldrb	r3, [r5]
    2cbc:	cmp	r3, #0
    2cc0:	beq	2b64 <setContext+0xb0>
    2cc4:	add	sl, r5, #1
    2cc8:	ldrb	r3, [r5, #1]
    2ccc:	mov	r6, sl
    2cd0:	b	2aec <setContext+0x38>
    2cd4:	mov	r0, r8
    2cd8:	bl	1238 <poolGrow>
    2cdc:	cmp	r0, #0
    2ce0:	beq	2d1c <setContext+0x268>
    2ce4:	ldr	ip, [r4, #444]	; 0x1bc
    2ce8:	b	2b94 <setContext+0xe0>
    2cec:	mov	r0, r8
    2cf0:	bl	1238 <poolGrow>
    2cf4:	cmp	r0, #0
    2cf8:	beq	2d1c <setContext+0x268>
    2cfc:	ldr	ip, [r4, #444]	; 0x1bc
    2d00:	b	2bc4 <setContext+0x110>
    2d04:	mov	r0, r8
    2d08:	bl	1238 <poolGrow>
    2d0c:	cmp	r0, #0
    2d10:	beq	2d1c <setContext+0x268>
    2d14:	ldr	ip, [r4, #444]	; 0x1bc
    2d18:	b	2c84 <setContext+0x1d0>
    2d1c:	mov	r0, #0
    2d20:	b	2b68 <setContext+0xb4>
    2d24:	mov	r1, ip
    2d28:	add	r0, r9, #80	; 0x50
    2d2c:	bl	26b8 <poolCopyString>
    2d30:	cmp	r0, #0
    2d34:	str	r0, [sl]
    2d38:	beq	2d1c <setContext+0x268>
    2d3c:	ldr	ip, [r4, #448]	; 0x1c0
    2d40:	b	2bfc <setContext+0x148>

00002d44 <defineAttribute.isra.2>:
    2d44:	strd	r4, [sp, #-24]!	; 0xffffffe8
    2d48:	strd	r6, [sp, #8]
    2d4c:	ldr	r6, [sp, #24]
    2d50:	str	r8, [sp, #16]
    2d54:	str	lr, [sp, #20]
    2d58:	ldr	lr, [r0, #12]
    2d5c:	cmp	r3, #0
    2d60:	cmpeq	r6, #0
    2d64:	beq	2db4 <defineAttribute.isra.2+0x70>
    2d68:	cmp	lr, #0
    2d6c:	ble	2da0 <defineAttribute.isra.2+0x5c>
    2d70:	ldr	r4, [r0, #20]
    2d74:	ldr	ip, [r4]
    2d78:	cmp	r1, ip
    2d7c:	beq	2e48 <defineAttribute.isra.2+0x104>
    2d80:	mov	ip, #0
    2d84:	b	2d94 <defineAttribute.isra.2+0x50>
    2d88:	ldr	r5, [r4, #12]!
    2d8c:	cmp	r5, r1
    2d90:	beq	2e48 <defineAttribute.isra.2+0x104>
    2d94:	add	ip, ip, #1
    2d98:	cmp	ip, lr
    2d9c:	bne	2d88 <defineAttribute.isra.2+0x44>
    2da0:	cmp	r3, #0
    2da4:	beq	2db4 <defineAttribute.isra.2+0x70>
    2da8:	ldr	r3, [r0, #8]
    2dac:	cmp	r3, #0
    2db0:	beq	2e84 <defineAttribute.isra.2+0x140>
    2db4:	ldr	r3, [r0, #16]
    2db8:	mov	r7, r2
    2dbc:	mov	r5, r1
    2dc0:	mov	r4, r0
    2dc4:	cmp	r3, lr
    2dc8:	beq	2e14 <defineAttribute.isra.2+0xd0>
    2dcc:	ldr	r0, [r0, #20]
    2dd0:	add	r3, lr, lr, lsl #1
    2dd4:	cmp	r7, #0
    2dd8:	add	lr, lr, #1
    2ddc:	lsl	r3, r3, #2
    2de0:	add	r2, r0, r3
    2de4:	str	r5, [r0, r3]
    2de8:	moveq	r3, #1
    2dec:	mov	r0, #1
    2df0:	strb	r7, [r2, #4]
    2df4:	str	r6, [r2, #8]
    2df8:	strbeq	r3, [r5, #8]
    2dfc:	str	lr, [r4, #12]
    2e00:	ldrd	r4, [sp]
    2e04:	ldrd	r6, [sp, #8]
    2e08:	ldr	r8, [sp, #16]
    2e0c:	add	sp, sp, #20
    2e10:	pop	{pc}		; (ldr pc, [sp], #4)
    2e14:	cmp	lr, #0
    2e18:	bne	2e50 <defineAttribute.isra.2+0x10c>
    2e1c:	ldr	r3, [sp, #28]
    2e20:	mov	r2, #8
    2e24:	mov	r0, #96	; 0x60
    2e28:	ldr	r3, [r3]
    2e2c:	str	r2, [r4, #16]
    2e30:	blx	r3
    2e34:	cmp	r0, #0
    2e38:	str	r0, [r4, #20]
    2e3c:	beq	2e94 <defineAttribute.isra.2+0x150>
    2e40:	ldr	lr, [r4, #12]
    2e44:	b	2dd0 <defineAttribute.isra.2+0x8c>
    2e48:	mov	r0, #1
    2e4c:	b	2e00 <defineAttribute.isra.2+0xbc>
    2e50:	ldr	r3, [sp, #32]
    2e54:	lsl	r8, lr, #1
    2e58:	add	r1, r8, lr, lsl #2
    2e5c:	ldr	r0, [r0, #20]
    2e60:	lsl	r1, r1, #2
    2e64:	ldr	r3, [r3]
    2e68:	blx	r3
    2e6c:	cmp	r0, #0
    2e70:	beq	2e94 <defineAttribute.isra.2+0x150>
    2e74:	str	r8, [r4, #16]
    2e78:	str	r0, [r4, #20]
    2e7c:	ldr	lr, [r4, #12]
    2e80:	b	2dd0 <defineAttribute.isra.2+0x8c>
    2e84:	ldrb	r3, [r1, #9]
    2e88:	cmp	r3, #0
    2e8c:	streq	r1, [r0, #8]
    2e90:	b	2db4 <defineAttribute.isra.2+0x70>
    2e94:	mov	r0, #0
    2e98:	b	2e00 <defineAttribute.isra.2+0xbc>

00002e9c <initializeEncoding>:
    2e9c:	str	r4, [sp, #-8]!
    2ea0:	movw	ip, #0
    2ea4:	movt	ip, #0
    2ea8:	ldr	r2, [r0, #240]	; 0xf0
    2eac:	add	r1, r0, #152	; 0x98
    2eb0:	mov	r4, r0
    2eb4:	str	lr, [sp, #4]
    2eb8:	movw	r3, #0
    2ebc:	movt	r3, #0
    2ec0:	ldrb	lr, [r0, #244]	; 0xf4
    2ec4:	add	r0, r0, #156	; 0x9c
    2ec8:	cmp	lr, #0
    2ecc:	moveq	r3, ip
    2ed0:	blx	r3
    2ed4:	cmp	r0, #0
    2ed8:	beq	2eec <initializeEncoding+0x50>
    2edc:	ldr	r4, [sp]
    2ee0:	add	sp, sp, #4
    2ee4:	mov	r0, #0
    2ee8:	pop	{pc}		; (ldr pc, [sp], #4)
    2eec:	mov	r0, r4
    2ef0:	ldr	lr, [sp, #4]
    2ef4:	ldr	r1, [r4, #240]	; 0xf0
    2ef8:	ldr	r4, [sp]
    2efc:	add	sp, sp, #8
    2f00:	b	e38 <handleUnknownEncoding>

00002f04 <storeRawNames.isra.9>:
    2f04:	strd	r4, [sp, #-24]!	; 0xffffffe8
    2f08:	subs	r4, r1, #0
    2f0c:	strd	r6, [sp, #8]
    2f10:	movne	r7, r0
    2f14:	str	r8, [sp, #16]
    2f18:	str	lr, [sp, #20]
    2f1c:	bne	2fa8 <storeRawNames.isra.9+0xa4>
    2f20:	b	2fc4 <storeRawNames.isra.9+0xc0>
    2f24:	ldr	r2, [r4, #8]
    2f28:	mov	r0, ip
    2f2c:	ldr	lr, [r4, #40]	; 0x28
    2f30:	add	r6, r2, r5
    2f34:	mov	r1, r6
    2f38:	sub	ip, lr, ip
    2f3c:	cmp	r6, ip
    2f40:	ble	2f8c <storeRawNames.isra.9+0x88>
    2f44:	ldr	r3, [r7]
    2f48:	blx	r3
    2f4c:	cmp	r0, #0
    2f50:	add	r3, r0, r5
    2f54:	add	r6, r0, r6
    2f58:	beq	2fc8 <storeRawNames.isra.9+0xc4>
    2f5c:	ldr	r1, [r4, #12]
    2f60:	str	r6, [r4, #40]	; 0x28
    2f64:	ldr	r2, [r4, #36]	; 0x24
    2f68:	str	r0, [r4, #36]	; 0x24
    2f6c:	cmp	r1, r2
    2f70:	ldr	r1, [r4, #16]
    2f74:	streq	r0, [r4, #12]
    2f78:	sub	r2, r1, r2
    2f7c:	cmp	r1, #0
    2f80:	add	r2, r0, r2
    2f84:	strne	r2, [r4, #16]
    2f88:	ldr	r2, [r4, #8]
    2f8c:	mov	r0, r3
    2f90:	ldr	r1, [r4, #4]
    2f94:	bl	0 <memcpy>
    2f98:	str	r0, [r4, #4]
    2f9c:	ldr	r4, [r4]
    2fa0:	cmp	r4, #0
    2fa4:	beq	2fc4 <storeRawNames.isra.9+0xc0>
    2fa8:	ldr	r2, [r4, #4]
    2fac:	ldr	r5, [r4, #24]
    2fb0:	ldr	ip, [r4, #36]	; 0x24
    2fb4:	add	r5, r5, #1
    2fb8:	add	r3, ip, r5
    2fbc:	cmp	r3, r2
    2fc0:	bne	2f24 <storeRawNames.isra.9+0x20>
    2fc4:	mov	r0, #1
    2fc8:	ldrd	r4, [sp]
    2fcc:	ldrd	r6, [sp, #8]
    2fd0:	ldr	r8, [sp, #16]
    2fd4:	add	sp, sp, #20
    2fd8:	pop	{pc}		; (ldr pc, [sp], #4)

00002fdc <setElementTypePrefix.isra.10>:
    2fdc:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2fe0:	ldr	r5, [r1]
    2fe4:	ldr	r4, [r0, #364]	; 0x16c
    2fe8:	strd	r6, [sp, #8]
    2fec:	strd	r8, [sp, #16]
    2ff0:	strd	sl, [sp, #24]
    2ff4:	str	lr, [sp, #32]
    2ff8:	sub	sp, sp, #4
    2ffc:	ldrb	r3, [r5]
    3000:	cmp	r3, #0
    3004:	beq	30e0 <setElementTypePrefix.isra.10+0x104>
    3008:	mov	r9, r2
    300c:	mov	r8, r0
    3010:	mov	r7, r1
    3014:	add	r6, r4, #80	; 0x50
    3018:	mov	sl, #0
    301c:	b	302c <setElementTypePrefix.isra.10+0x50>
    3020:	ldrb	r3, [r5, #1]!
    3024:	cmp	r3, #0
    3028:	beq	30e0 <setElementTypePrefix.isra.10+0x104>
    302c:	cmp	r3, #58	; 0x3a
    3030:	bne	3020 <setElementTypePrefix.isra.10+0x44>
    3034:	ldr	fp, [r7]
    3038:	cmp	fp, r5
    303c:	bne	305c <setElementTypePrefix.isra.10+0x80>
    3040:	b	3080 <setElementTypePrefix.isra.10+0xa4>
    3044:	add	r2, r3, #1
    3048:	str	r2, [r4, #92]	; 0x5c
    304c:	ldrb	r2, [fp], #1
    3050:	cmp	fp, r5
    3054:	strb	r2, [r3]
    3058:	beq	3080 <setElementTypePrefix.isra.10+0xa4>
    305c:	ldrd	r2, [r4, #88]	; 0x58
    3060:	cmp	r3, r2
    3064:	bne	3044 <setElementTypePrefix.isra.10+0x68>
    3068:	mov	r0, r6
    306c:	bl	1238 <poolGrow>
    3070:	cmp	r0, #0
    3074:	beq	3118 <setElementTypePrefix.isra.10+0x13c>
    3078:	ldr	r3, [r4, #92]	; 0x5c
    307c:	b	3044 <setElementTypePrefix.isra.10+0x68>
    3080:	ldr	r3, [r4, #88]	; 0x58
    3084:	ldr	r2, [r4, #92]	; 0x5c
    3088:	cmp	r2, r3
    308c:	beq	3100 <setElementTypePrefix.isra.10+0x124>
    3090:	add	ip, r2, #1
    3094:	mov	r3, #8
    3098:	add	r1, r4, #60	; 0x3c
    309c:	mov	r0, r8
    30a0:	str	ip, [r4, #92]	; 0x5c
    30a4:	strb	sl, [r2]
    30a8:	ldr	r2, [r4, #96]	; 0x60
    30ac:	bl	a50 <lookup>
    30b0:	cmp	r0, #0
    30b4:	beq	3118 <setElementTypePrefix.isra.10+0x13c>
    30b8:	ldr	r2, [r0]
    30bc:	ldr	r3, [r4, #96]	; 0x60
    30c0:	cmp	r2, r3
    30c4:	ldreq	r3, [r4, #92]	; 0x5c
    30c8:	strne	r3, [r4, #92]	; 0x5c
    30cc:	streq	r3, [r4, #96]	; 0x60
    30d0:	str	r0, [r9]
    30d4:	ldrb	r3, [r5, #1]!
    30d8:	cmp	r3, #0
    30dc:	bne	302c <setElementTypePrefix.isra.10+0x50>
    30e0:	mov	r0, #1
    30e4:	add	sp, sp, #4
    30e8:	ldrd	r4, [sp]
    30ec:	ldrd	r6, [sp, #8]
    30f0:	ldrd	r8, [sp, #16]
    30f4:	ldrd	sl, [sp, #24]
    30f8:	add	sp, sp, #32
    30fc:	pop	{pc}		; (ldr pc, [sp], #4)
    3100:	mov	r0, r6
    3104:	bl	1238 <poolGrow>
    3108:	cmp	r0, #0
    310c:	beq	3118 <setElementTypePrefix.isra.10+0x13c>
    3110:	ldr	r2, [r4, #92]	; 0x5c
    3114:	b	3090 <setElementTypePrefix.isra.10+0xb4>
    3118:	mov	r0, #0
    311c:	b	30e4 <setElementTypePrefix.isra.10+0x108>

00003120 <getElementType>:
    3120:	strd	r4, [sp, #-24]!	; 0xffffffe8
    3124:	ldr	r4, [r0, #364]	; 0x16c
    3128:	strd	r6, [sp, #8]
    312c:	mov	r6, r0
    3130:	str	r8, [sp, #16]
    3134:	str	lr, [sp, #20]
    3138:	add	r0, r4, #80	; 0x50
    313c:	bl	14d8 <poolStoreString>
    3140:	subs	r7, r0, #0
    3144:	beq	31b0 <getElementType+0x90>
    3148:	mov	r3, #24
    314c:	mov	r2, r7
    3150:	add	r1, r4, #20
    3154:	mov	r0, r6
    3158:	bl	a50 <lookup>
    315c:	subs	r5, r0, #0
    3160:	beq	31b0 <getElementType+0x90>
    3164:	ldr	r3, [r5]
    3168:	cmp	r3, r7
    316c:	beq	3190 <getElementType+0x70>
    3170:	ldr	r3, [r4, #96]	; 0x60
    3174:	str	r3, [r4, #92]	; 0x5c
    3178:	mov	r0, r5
    317c:	ldrd	r4, [sp]
    3180:	ldrd	r6, [sp, #8]
    3184:	ldr	r8, [sp, #16]
    3188:	add	sp, sp, #20
    318c:	pop	{pc}		; (ldr pc, [sp], #4)
    3190:	ldr	r3, [r4, #92]	; 0x5c
    3194:	mov	r0, r6
    3198:	add	r2, r5, #4
    319c:	mov	r1, r5
    31a0:	str	r3, [r4, #96]	; 0x60
    31a4:	bl	2fdc <setElementTypePrefix.isra.10>
    31a8:	cmp	r0, #0
    31ac:	bne	3178 <getElementType+0x58>
    31b0:	mov	r5, #0
    31b4:	b	3178 <getElementType+0x58>

000031b8 <reportComment>:
    31b8:	ldr	ip, [r0, #76]	; 0x4c
    31bc:	strd	r4, [sp, #-16]!
    31c0:	mov	r4, r0
    31c4:	str	r6, [sp, #8]
    31c8:	str	lr, [sp, #12]
    31cc:	cmp	ip, #0
    31d0:	beq	3274 <reportComment+0xbc>
    31d4:	mov	r5, r2
    31d8:	ldr	r2, [r1, #68]	; 0x44
    31dc:	mov	lr, r3
    31e0:	add	r0, r0, #432	; 0x1b0
    31e4:	add	r3, r2, r2, lsl #1
    31e8:	add	r2, r5, r2, lsl #2
    31ec:	sub	r3, lr, r3
    31f0:	bl	14d8 <poolStoreString>
    31f4:	subs	r5, r0, #0
    31f8:	moveq	r0, r5
    31fc:	beq	3264 <reportComment+0xac>
    3200:	bl	8 <normalizeLines>
    3204:	mov	r1, r5
    3208:	ldr	r0, [r4, #4]
    320c:	ldr	r3, [r4, #76]	; 0x4c
    3210:	blx	r3
    3214:	ldr	r3, [r4, #432]	; 0x1b0
    3218:	ldr	r1, [r4, #436]	; 0x1b4
    321c:	cmp	r1, #0
    3220:	beq	3248 <reportComment+0x90>
    3224:	cmp	r3, #0
    3228:	bne	3234 <reportComment+0x7c>
    322c:	b	324c <reportComment+0x94>
    3230:	mov	r3, r2
    3234:	ldr	r2, [r3]
    3238:	str	r1, [r3]
    323c:	mov	r1, r3
    3240:	cmp	r2, #0
    3244:	bne	3230 <reportComment+0x78>
    3248:	str	r3, [r4, #436]	; 0x1b4
    324c:	mov	r3, #0
    3250:	mov	r0, #1
    3254:	str	r3, [r4, #432]	; 0x1b0
    3258:	str	r3, [r4, #440]	; 0x1b8
    325c:	str	r3, [r4, #444]	; 0x1bc
    3260:	str	r3, [r4, #448]	; 0x1c0
    3264:	ldrd	r4, [sp]
    3268:	ldr	r6, [sp, #8]
    326c:	add	sp, sp, #12
    3270:	pop	{pc}		; (ldr pc, [sp], #4)
    3274:	ldr	ip, [r0, #88]	; 0x58
    3278:	cmp	ip, #0
    327c:	moveq	r0, #1
    3280:	beq	3264 <reportComment+0xac>
    3284:	bl	90 <reportDefault>
    3288:	ldrd	r4, [sp]
    328c:	mov	r0, #1
    3290:	ldr	r6, [sp, #8]
    3294:	add	sp, sp, #12
    3298:	pop	{pc}		; (ldr pc, [sp], #4)

0000329c <epilogProcessor>:
    329c:	strd	r4, [sp, #-28]!	; 0xffffffe4
    32a0:	mov	r4, r0
    32a4:	mov	r5, r1
    32a8:	strd	r6, [sp, #8]
    32ac:	mov	r7, r2
    32b0:	mov	r6, #0
    32b4:	strd	r8, [sp, #16]
    32b8:	mov	r8, r3
    32bc:	movw	r3, #0
    32c0:	movt	r3, #0
    32c4:	str	lr, [sp, #24]
    32c8:	sub	sp, sp, #12
    32cc:	str	r1, [r4, #296]	; 0x128
    32d0:	str	r3, [r0, #288]	; 0x120
    32d4:	ldr	ip, [r4, #152]	; 0x98
    32d8:	mov	r1, r5
    32dc:	add	r3, sp, #4
    32e0:	mov	r2, r7
    32e4:	mov	r0, ip
    32e8:	ldr	r9, [ip]
    32ec:	str	r6, [sp, #4]
    32f0:	blx	r9
    32f4:	ldr	r1, [sp, #4]
    32f8:	add	r0, r0, #15
    32fc:	str	r1, [r4, #300]	; 0x12c
    3300:	cmp	r0, #30
    3304:	ldrls	pc, [pc, r0, lsl #2]
    3308:	b	34a0 <epilogProcessor+0x204>
    330c:	.word	0x000033e0
    3310:	.word	0x000034a0
    3314:	.word	0x000034a0
    3318:	.word	0x000034a0
    331c:	.word	0x000034a0
    3320:	.word	0x000034a0
    3324:	.word	0x000034a0
    3328:	.word	0x000034a0
    332c:	.word	0x000034a0
    3330:	.word	0x000034a0
    3334:	.word	0x000034a0
    3338:	.word	0x000033c0
    333c:	.word	0x000034a0
    3340:	.word	0x00003478
    3344:	.word	0x0000348c
    3348:	.word	0x0000341c
    334c:	.word	0x000034a0
    3350:	.word	0x000034a0
    3354:	.word	0x000034a0
    3358:	.word	0x000034a0
    335c:	.word	0x000034a0
    3360:	.word	0x000034a0
    3364:	.word	0x000034a0
    3368:	.word	0x000034a0
    336c:	.word	0x000034a0
    3370:	.word	0x000034a0
    3374:	.word	0x00003388
    3378:	.word	0x000034a0
    337c:	.word	0x00003428
    3380:	.word	0x000034a0
    3384:	.word	0x0000344c
    3388:	mov	r3, r1
    338c:	mov	r2, r5
    3390:	ldr	r1, [r4, #152]	; 0x98
    3394:	mov	r0, r4
    3398:	bl	189c <reportProcessingInstruction>
    339c:	cmp	r0, #0
    33a0:	beq	3444 <epilogProcessor+0x1a8>
    33a4:	ldr	r5, [sp, #4]
    33a8:	str	r5, [r4, #296]	; 0x128
    33ac:	ldr	r3, [r4, #496]	; 0x1f0
    33b0:	cmp	r3, #2
    33b4:	beq	34a8 <epilogProcessor+0x20c>
    33b8:	cmp	r3, #3
    33bc:	bne	32d4 <epilogProcessor+0x38>
    33c0:	mov	r0, #0
    33c4:	str	r5, [r8]
    33c8:	add	sp, sp, #12
    33cc:	ldrd	r4, [sp]
    33d0:	ldrd	r6, [sp, #8]
    33d4:	ldrd	r8, [sp, #16]
    33d8:	add	sp, sp, #24
    33dc:	pop	{pc}		; (ldr pc, [sp], #4)
    33e0:	ldr	r3, [r4, #88]	; 0x58
    33e4:	cmp	r3, #0
    33e8:	beq	3410 <epilogProcessor+0x174>
    33ec:	mov	r3, r1
    33f0:	mov	r2, r5
    33f4:	ldr	r1, [r4, #152]	; 0x98
    33f8:	mov	r0, r4
    33fc:	bl	90 <reportDefault>
    3400:	ldr	r3, [r4, #496]	; 0x1f0
    3404:	cmp	r3, #2
    3408:	beq	34a8 <epilogProcessor+0x20c>
    340c:	ldr	r1, [sp, #4]
    3410:	mov	r0, #0
    3414:	str	r1, [r8]
    3418:	b	33c8 <epilogProcessor+0x12c>
    341c:	mov	r0, #4
    3420:	str	r1, [r4, #296]	; 0x128
    3424:	b	33c8 <epilogProcessor+0x12c>
    3428:	mov	r3, r1
    342c:	mov	r2, r5
    3430:	ldr	r1, [r4, #152]	; 0x98
    3434:	mov	r0, r4
    3438:	bl	31b8 <reportComment>
    343c:	cmp	r0, #0
    3440:	bne	33a4 <epilogProcessor+0x108>
    3444:	mov	r0, #1
    3448:	b	33c8 <epilogProcessor+0x12c>
    344c:	ldr	ip, [r4, #88]	; 0x58
    3450:	mov	r2, r5
    3454:	mov	r3, r1
    3458:	mov	r0, r4
    345c:	cmp	ip, #0
    3460:	moveq	r5, r1
    3464:	beq	33a8 <epilogProcessor+0x10c>
    3468:	ldr	r1, [r4, #152]	; 0x98
    346c:	bl	90 <reportDefault>
    3470:	ldr	r5, [sp, #4]
    3474:	b	33a8 <epilogProcessor+0x10c>
    3478:	ldrb	r0, [r4, #500]	; 0x1f4
    347c:	cmp	r0, #0
    3480:	movne	r0, #6
    3484:	bne	33c8 <epilogProcessor+0x12c>
    3488:	b	33c4 <epilogProcessor+0x128>
    348c:	ldrb	r0, [r4, #500]	; 0x1f4
    3490:	cmp	r0, #0
    3494:	movne	r0, #5
    3498:	bne	33c8 <epilogProcessor+0x12c>
    349c:	b	33c4 <epilogProcessor+0x128>
    34a0:	mov	r0, #9
    34a4:	b	33c8 <epilogProcessor+0x12c>
    34a8:	mov	r0, #35	; 0x23
    34ac:	b	33c8 <epilogProcessor+0x12c>

000034b0 <storeAttributeValue>:
    34b0:	strd	r4, [sp, #-16]!
    34b4:	str	r6, [sp, #8]
    34b8:	mov	r6, r2
    34bc:	str	lr, [sp, #12]
    34c0:	sub	sp, sp, #8
    34c4:	ldr	ip, [sp, #24]
    34c8:	ldr	r4, [sp, #28]
    34cc:	str	ip, [sp]
    34d0:	str	r4, [sp, #4]
    34d4:	bl	1c38 <appendAttributeValue>
    34d8:	subs	r5, r0, #0
    34dc:	bne	3508 <storeAttributeValue+0x58>
    34e0:	cmp	r6, #0
    34e4:	ldr	r3, [r4, #12]
    34e8:	beq	3520 <storeAttributeValue+0x70>
    34ec:	ldr	r2, [r4, #8]
    34f0:	cmp	r2, r3
    34f4:	beq	3548 <storeAttributeValue+0x98>
    34f8:	add	r1, r3, #1
    34fc:	mov	r2, #0
    3500:	str	r1, [r4, #12]
    3504:	strb	r2, [r3]
    3508:	mov	r0, r5
    350c:	add	sp, sp, #8
    3510:	ldrd	r4, [sp]
    3514:	ldr	r6, [sp, #8]
    3518:	add	sp, sp, #12
    351c:	pop	{pc}		; (ldr pc, [sp], #4)
    3520:	ldr	r2, [r4, #16]
    3524:	cmp	r2, r3
    3528:	beq	34ec <storeAttributeValue+0x3c>
    352c:	ldrb	r2, [r3, #-1]
    3530:	cmp	r2, #32
    3534:	ldr	r2, [r4, #8]
    3538:	subeq	r3, r3, #1
    353c:	streq	r3, [r4, #12]
    3540:	cmp	r2, r3
    3544:	bne	34f8 <storeAttributeValue+0x48>
    3548:	mov	r0, r4
    354c:	bl	1238 <poolGrow>
    3550:	cmp	r0, #0
    3554:	moveq	r5, #1
    3558:	beq	3508 <storeAttributeValue+0x58>
    355c:	ldr	r3, [r4, #12]
    3560:	b	34f8 <storeAttributeValue+0x48>

00003564 <storeAtts>:
    3564:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3568:	mov	r5, r2
    356c:	mov	r4, r0
    3570:	ldr	r2, [r3]
    3574:	strd	r6, [sp, #8]
    3578:	strd	r8, [sp, #16]
    357c:	mov	r8, r1
    3580:	ldr	r1, [r0, #364]	; 0x16c
    3584:	strd	sl, [sp, #24]
    3588:	str	lr, [sp, #32]
    358c:	sub	sp, sp, #60	; 0x3c
    3590:	str	r3, [sp, #32]
    3594:	mov	r3, #0
    3598:	add	r6, r1, #20
    359c:	str	r1, [sp, #36]	; 0x24
    35a0:	mov	r1, r6
    35a4:	bl	a50 <lookup>
    35a8:	subs	r3, r0, #0
    35ac:	str	r3, [sp, #28]
    35b0:	beq	3898 <storeAtts+0x334>
    35b4:	ldr	r3, [sp, #28]
    35b8:	mov	r1, r5
    35bc:	mov	r0, r8
    35c0:	ldr	r6, [r8, #40]	; 0x28
    35c4:	ldr	r2, [r4, #388]	; 0x184
    35c8:	ldr	r7, [r3, #12]
    35cc:	ldr	r3, [r4, #400]	; 0x190
    35d0:	str	r7, [sp, #24]
    35d4:	blx	r6
    35d8:	ldr	r6, [r4, #388]	; 0x184
    35dc:	add	r3, r7, r0
    35e0:	str	r0, [sp, #12]
    35e4:	cmp	r3, r6
    35e8:	bgt	3850 <storeAtts+0x2ec>
    35ec:	ldr	fp, [r4, #400]	; 0x190
    35f0:	ldr	r3, [sp, #12]
    35f4:	cmp	r3, #0
    35f8:	mov	r3, #0
    35fc:	ble	3ff4 <storeAtts+0xa90>
    3600:	mov	r9, r3
    3604:	add	r2, r4, #432	; 0x1b0
    3608:	mov	r3, fp
    360c:	mov	r7, r9
    3610:	str	r9, [sp, #16]
    3614:	str	r2, [sp, #20]
    3618:	b	36b0 <storeAtts+0x14c>
    361c:	ldrb	r2, [r6, #8]
    3620:	cmp	r2, #0
    3624:	bne	3800 <storeAtts+0x29c>
    3628:	mov	r2, #1
    362c:	ldr	r0, [sp, #20]
    3630:	mov	r1, r8
    3634:	ldr	r3, [ip, #4]
    3638:	str	r0, [sp, #4]
    363c:	mov	r0, r4
    3640:	ldr	ip, [ip, #8]
    3644:	str	ip, [sp]
    3648:	bl	34b0 <storeAttributeValue>
    364c:	cmp	r0, #0
    3650:	bne	37e4 <storeAtts+0x280>
    3654:	ldr	r2, [r4, #448]	; 0x1c0
    3658:	add	r3, fp, sl
    365c:	ldr	r1, [r6, #4]
    3660:	str	r2, [r3, #4]
    3664:	ldr	r3, [r4, #444]	; 0x1bc
    3668:	cmp	r1, #0
    366c:	str	r3, [r4, #448]	; 0x1c0
    3670:	beq	3750 <storeAtts+0x1ec>
    3674:	ldrb	r3, [r6, #9]
    3678:	cmp	r3, #0
    367c:	bne	37c0 <storeAtts+0x25c>
    3680:	ldr	r2, [sp, #16]
    3684:	add	r9, r9, #2
    3688:	ldr	r3, [r6]
    368c:	add	r2, r2, #1
    3690:	str	r2, [sp, #16]
    3694:	mov	r2, #2
    3698:	strb	r2, [r3, #-1]
    369c:	ldr	r3, [sp, #12]
    36a0:	add	r7, r7, #1
    36a4:	cmp	r3, r7
    36a8:	beq	3764 <storeAtts+0x200>
    36ac:	ldr	r3, [r4, #400]	; 0x190
    36b0:	mov	r0, r8
    36b4:	lsl	r5, r7, #4
    36b8:	ldr	r6, [r3, r7, lsl #4]
    36bc:	ldr	r3, [r8, #32]
    36c0:	mov	r1, r6
    36c4:	blx	r3
    36c8:	add	r3, r6, r0
    36cc:	mov	r2, r6
    36d0:	mov	r1, r8
    36d4:	mov	r0, r4
    36d8:	bl	19e4 <getAttributeId>
    36dc:	subs	r6, r0, #0
    36e0:	beq	38f4 <storeAtts+0x390>
    36e4:	ldr	r3, [r6]
    36e8:	ldrb	r2, [r3, #-1]
    36ec:	cmp	r2, #0
    36f0:	bne	3bc0 <storeAtts+0x65c>
    36f4:	mov	r2, #1
    36f8:	lsl	sl, r9, #2
    36fc:	strb	r2, [r3, #-1]
    3700:	ldr	ip, [r4, #400]	; 0x190
    3704:	ldr	r3, [r6]
    3708:	add	ip, ip, r5
    370c:	str	r3, [fp, r9, lsl #2]
    3710:	ldrb	r3, [ip, #12]
    3714:	cmp	r3, #0
    3718:	beq	361c <storeAtts+0xb8>
    371c:	mov	r1, r8
    3720:	ldrd	r2, [ip, #4]
    3724:	add	r5, sl, #4
    3728:	ldr	r0, [sp, #20]
    372c:	bl	14d8 <poolStoreString>
    3730:	cmp	r0, #0
    3734:	str	r0, [fp, r5]
    3738:	beq	38f4 <storeAtts+0x390>
    373c:	ldr	r1, [r6, #4]
    3740:	ldr	r3, [r4, #444]	; 0x1bc
    3744:	cmp	r1, #0
    3748:	str	r3, [r4, #448]	; 0x1c0
    374c:	bne	3674 <storeAtts+0x110>
    3750:	ldr	r3, [sp, #12]
    3754:	add	r7, r7, #1
    3758:	add	r9, r9, #2
    375c:	cmp	r3, r7
    3760:	bne	36ac <storeAtts+0x148>
    3764:	ldr	r3, [sp, #28]
    3768:	ldr	r3, [r3, #8]
    376c:	str	r9, [r4, #392]	; 0x188
    3770:	cmp	r3, #0
    3774:	beq	38fc <storeAtts+0x398>
    3778:	ldr	r1, [r3]
    377c:	ldrb	r3, [r1, #-1]
    3780:	cmp	r3, #0
    3784:	beq	38fc <storeAtts+0x398>
    3788:	cmp	r9, #0
    378c:	beq	3904 <storeAtts+0x3a0>
    3790:	ldr	r3, [fp]
    3794:	cmp	r1, r3
    3798:	mov	r3, #0
    379c:	bne	37b0 <storeAtts+0x24c>
    37a0:	b	3f28 <storeAtts+0x9c4>
    37a4:	ldr	r2, [fp, r3, lsl #2]
    37a8:	cmp	r1, r2
    37ac:	beq	3f28 <storeAtts+0x9c4>
    37b0:	add	r3, r3, #2
    37b4:	cmp	r3, r9
    37b8:	blt	37a4 <storeAtts+0x240>
    37bc:	b	3904 <storeAtts+0x3a0>
    37c0:	ldr	ip, [sp, #96]	; 0x60
    37c4:	add	sl, fp, sl
    37c8:	mov	r2, r6
    37cc:	mov	r0, r4
    37d0:	ldr	r3, [sl, #4]
    37d4:	str	ip, [sp]
    37d8:	bl	f5c <addBinding>
    37dc:	cmp	r0, #0
    37e0:	beq	369c <storeAtts+0x138>
    37e4:	add	sp, sp, #60	; 0x3c
    37e8:	ldrd	r4, [sp]
    37ec:	ldrd	r6, [sp, #8]
    37f0:	ldrd	r8, [sp, #16]
    37f4:	ldrd	sl, [sp, #24]
    37f8:	add	sp, sp, #32
    37fc:	pop	{pc}		; (ldr pc, [sp], #4)
    3800:	ldr	r2, [sp, #24]
    3804:	cmp	r2, #0
    3808:	ble	3628 <storeAtts+0xc4>
    380c:	ldr	r2, [sp, #28]
    3810:	ldr	r0, [r2, #20]
    3814:	ldr	r2, [r0]
    3818:	cmp	r6, r2
    381c:	beq	3848 <storeAtts+0x2e4>
    3820:	ldr	lr, [sp, #24]
    3824:	mov	r2, r0
    3828:	add	r3, r3, #1
    382c:	add	r2, r2, #12
    3830:	cmp	lr, r3
    3834:	mov	r0, r2
    3838:	beq	3628 <storeAtts+0xc4>
    383c:	ldr	r1, [r2]
    3840:	cmp	r1, r6
    3844:	bne	3828 <storeAtts+0x2c4>
    3848:	ldrb	r2, [r0, #4]
    384c:	b	362c <storeAtts+0xc8>
    3850:	add	r3, r3, #16
    3854:	ldr	r2, [r4, #16]
    3858:	lsl	r1, r3, #4
    385c:	str	r3, [r4, #388]	; 0x184
    3860:	ldr	r0, [r4, #400]	; 0x190
    3864:	blx	r2
    3868:	subs	fp, r0, #0
    386c:	beq	38f4 <storeAtts+0x390>
    3870:	ldr	r2, [sp, #12]
    3874:	str	fp, [r4, #400]	; 0x190
    3878:	cmp	r6, r2
    387c:	bge	35f0 <storeAtts+0x8c>
    3880:	mov	r1, r5
    3884:	mov	r3, fp
    3888:	ldr	r5, [r8, #40]	; 0x28
    388c:	mov	r0, r8
    3890:	blx	r5
    3894:	b	35ec <storeAtts+0x88>
    3898:	ldr	r3, [sp, #36]	; 0x24
    389c:	add	r0, r3, #80	; 0x50
    38a0:	ldr	r3, [sp, #32]
    38a4:	ldr	r1, [r3]
    38a8:	bl	26b8 <poolCopyString>
    38ac:	subs	r2, r0, #0
    38b0:	beq	38f4 <storeAtts+0x390>
    38b4:	mov	r3, #24
    38b8:	mov	r1, r6
    38bc:	mov	r0, r4
    38c0:	bl	a50 <lookup>
    38c4:	subs	r3, r0, #0
    38c8:	str	r3, [sp, #28]
    38cc:	beq	38f4 <storeAtts+0x390>
    38d0:	ldrb	r3, [r4, #244]	; 0xf4
    38d4:	cmp	r3, #0
    38d8:	beq	35b4 <storeAtts+0x50>
    38dc:	add	r2, r0, #4
    38e0:	mov	r1, r0
    38e4:	mov	r0, r4
    38e8:	bl	2fdc <setElementTypePrefix.isra.10>
    38ec:	cmp	r0, #0
    38f0:	bne	35b4 <storeAtts+0x50>
    38f4:	mov	r0, #1
    38f8:	b	37e4 <storeAtts+0x280>
    38fc:	mvn	r3, #0
    3900:	str	r3, [r4, #396]	; 0x18c
    3904:	ldr	r3, [sp, #24]
    3908:	cmp	r3, #0
    390c:	ble	39e0 <storeAtts+0x47c>
    3910:	mov	r5, #0
    3914:	str	r4, [sp, #12]
    3918:	ldr	r4, [sp, #24]
    391c:	ldr	r8, [sp, #28]
    3920:	b	3968 <storeAtts+0x404>
    3924:	ldrb	sl, [r2, #9]
    3928:	cmp	sl, #0
    392c:	bne	3ba4 <storeAtts+0x640>
    3930:	mov	r3, #2
    3934:	strb	r3, [lr, #-1]
    3938:	ldr	r3, [sp, #16]
    393c:	add	r3, r3, #1
    3940:	str	r3, [sp, #16]
    3944:	ldr	r3, [r0, ip, lsl #2]
    3948:	ldr	r3, [r3]
    394c:	str	r3, [fp, r9, lsl #2]
    3950:	add	r9, r9, #2
    3954:	ldr	r3, [r6, #8]
    3958:	str	r3, [r7, #4]
    395c:	add	r5, r5, #1
    3960:	cmp	r4, r5
    3964:	beq	39dc <storeAtts+0x478>
    3968:	ldr	r0, [r8, #20]
    396c:	add	ip, r5, r5, lsl #1
    3970:	ldr	r2, [r0, ip, lsl #2]
    3974:	add	r6, r0, ip, lsl #2
    3978:	ldr	lr, [r2]
    397c:	ldrb	r3, [lr, #-1]
    3980:	cmp	r3, #0
    3984:	bne	395c <storeAtts+0x3f8>
    3988:	ldr	r3, [r6, #8]
    398c:	cmp	r3, #0
    3990:	beq	395c <storeAtts+0x3f8>
    3994:	ldr	r1, [r2, #4]
    3998:	lsl	r7, r9, #2
    399c:	add	r7, fp, r7
    39a0:	cmp	r1, #0
    39a4:	bne	3924 <storeAtts+0x3c0>
    39a8:	mov	r3, #1
    39ac:	add	r5, r5, #1
    39b0:	cmp	r4, r5
    39b4:	strb	r3, [lr, #-1]
    39b8:	lsl	r3, r9, #2
    39bc:	ldr	r2, [r0, ip, lsl #2]
    39c0:	add	r3, fp, r3
    39c4:	ldr	r2, [r2]
    39c8:	str	r2, [fp, r9, lsl #2]
    39cc:	add	r9, r9, #2
    39d0:	ldr	r2, [r6, #8]
    39d4:	str	r2, [r3, #4]
    39d8:	bne	3968 <storeAtts+0x404>
    39dc:	ldr	r4, [sp, #12]
    39e0:	mov	r3, #0
    39e4:	ldr	r1, [sp, #16]
    39e8:	str	r3, [fp, r9, lsl #2]
    39ec:	cmp	r1, r3
    39f0:	beq	3c20 <storeAtts+0x6bc>
    39f4:	ldrb	r3, [r4, #412]	; 0x19c
    39f8:	lsl	r2, r1, #1
    39fc:	asrs	r2, r2, r3
    3a00:	beq	3e3c <storeAtts+0x8d8>
    3a04:	asr	r2, r1, r3
    3a08:	add	r3, r3, #1
    3a0c:	uxtb	r3, r3
    3a10:	cmp	r2, #0
    3a14:	bne	3a04 <storeAtts+0x4a0>
    3a18:	cmp	r3, #2
    3a1c:	bls	3f30 <storeAtts+0x9cc>
    3a20:	mov	r1, #12
    3a24:	mov	r2, #1
    3a28:	strb	r3, [r4, #412]	; 0x19c
    3a2c:	lsl	r1, r1, r3
    3a30:	lsl	r3, r2, r3
    3a34:	str	r3, [sp, #24]
    3a38:	ldr	r3, [r4, #16]
    3a3c:	ldr	r0, [r4, #404]	; 0x194
    3a40:	blx	r3
    3a44:	cmp	r0, #0
    3a48:	strne	r0, [r4, #404]	; 0x194
    3a4c:	beq	38f4 <storeAtts+0x390>
    3a50:	ldr	r3, [sp, #24]
    3a54:	cmp	r3, #0
    3a58:	beq	3a7c <storeAtts+0x518>
    3a5c:	ldr	r3, [sp, #24]
    3a60:	mvn	r1, #0
    3a64:	ldr	r2, [r4, #404]	; 0x194
    3a68:	add	r3, r3, r3, lsl #1
    3a6c:	add	r3, r2, r3, lsl #2
    3a70:	str	r1, [r3, #-12]!
    3a74:	cmp	r2, r3
    3a78:	bne	3a70 <storeAtts+0x50c>
    3a7c:	mvn	r3, #1
    3a80:	str	r3, [sp, #12]
    3a84:	ldr	r3, [sp, #12]
    3a88:	cmp	r9, #0
    3a8c:	str	r3, [r4, #408]	; 0x198
    3a90:	beq	3c44 <storeAtts+0x6e0>
    3a94:	ldr	r3, [sp, #24]
    3a98:	movw	r8, #16963	; 0x4243
    3a9c:	movt	r8, #15
    3aa0:	mov	sl, #0
    3aa4:	str	r9, [sp, #20]
    3aa8:	sub	r3, r3, #1
    3aac:	str	r3, [sp, #52]	; 0x34
    3ab0:	ubfx	r3, r3, #2, #8
    3ab4:	str	r3, [sp, #40]	; 0x28
    3ab8:	b	3acc <storeAtts+0x568>
    3abc:	ldr	r3, [sp, #20]
    3ac0:	add	sl, sl, #2
    3ac4:	cmp	sl, r3
    3ac8:	bge	3c44 <storeAtts+0x6e0>
    3acc:	ldr	r6, [fp, sl, lsl #2]
    3ad0:	ldrb	r3, [r6, #-1]
    3ad4:	cmp	r3, #2
    3ad8:	movne	r3, #0
    3adc:	strbne	r3, [r6, #-1]
    3ae0:	bne	3abc <storeAtts+0x558>
    3ae4:	ldr	r1, [sp, #36]	; 0x24
    3ae8:	mov	ip, #0
    3aec:	mov	r3, #0
    3af0:	mov	r2, r6
    3af4:	mov	r0, r4
    3af8:	ldr	r5, [r4, #512]	; 0x200
    3afc:	strb	ip, [r6, #-1]
    3b00:	add	r1, r1, #40	; 0x28
    3b04:	bl	a50 <lookup>
    3b08:	cmp	r0, #0
    3b0c:	beq	38f4 <storeAtts+0x390>
    3b10:	ldr	r3, [r0, #4]
    3b14:	cmp	r3, #0
    3b18:	beq	38f4 <storeAtts+0x390>
    3b1c:	ldr	r7, [r3, #4]
    3b20:	cmp	r7, #0
    3b24:	beq	4000 <storeAtts+0xa9c>
    3b28:	ldr	r3, [r7, #20]
    3b2c:	cmp	r3, #0
    3b30:	ble	3dd4 <storeAtts+0x870>
    3b34:	add	r3, r4, #432	; 0x1b0
    3b38:	mov	r9, #0
    3b3c:	str	r3, [sp, #44]	; 0x2c
    3b40:	str	r6, [sp, #48]	; 0x30
    3b44:	mov	r6, r7
    3b48:	mov	r7, r8
    3b4c:	b	3b70 <storeAtts+0x60c>
    3b50:	add	r0, r3, #1
    3b54:	mul	r5, r7, r5
    3b58:	str	r0, [r4, #444]	; 0x1bc
    3b5c:	strb	r8, [r3]
    3b60:	eor	r5, r5, r8
    3b64:	ldr	r3, [r6, #20]
    3b68:	cmp	r3, r9
    3b6c:	ble	3e68 <storeAtts+0x904>
    3b70:	ldr	ip, [r4, #440]	; 0x1b8
    3b74:	ldr	r3, [r4, #444]	; 0x1bc
    3b78:	ldr	r0, [r6, #16]
    3b7c:	cmp	r3, ip
    3b80:	ldrb	r8, [r0, r9]
    3b84:	add	r9, r9, #1
    3b88:	bne	3b50 <storeAtts+0x5ec>
    3b8c:	ldr	r0, [sp, #44]	; 0x2c
    3b90:	bl	1238 <poolGrow>
    3b94:	cmp	r0, #0
    3b98:	beq	38f4 <storeAtts+0x390>
    3b9c:	ldr	r3, [r4, #444]	; 0x1bc
    3ba0:	b	3b50 <storeAtts+0x5ec>
    3ba4:	ldr	r0, [sp, #96]	; 0x60
    3ba8:	str	r0, [sp]
    3bac:	ldr	r0, [sp, #12]
    3bb0:	bl	f5c <addBinding>
    3bb4:	cmp	r0, #0
    3bb8:	beq	395c <storeAtts+0x3f8>
    3bbc:	b	37e4 <storeAtts+0x280>
    3bc0:	ldr	r3, [r4, #152]	; 0x98
    3bc4:	cmp	r3, r8
    3bc8:	beq	3dbc <storeAtts+0x858>
    3bcc:	mov	r0, #8
    3bd0:	b	37e4 <storeAtts+0x280>
    3bd4:	ldrb	r3, [r4, #245]	; 0xf5
    3bd8:	mov	r6, r1
    3bdc:	mov	r1, r0
    3be0:	ldr	r2, [r4, #444]	; 0x1bc
    3be4:	cmp	r3, #0
    3be8:	bne	3f68 <storeAtts+0xa04>
    3bec:	ldr	r0, [sp, #16]
    3bf0:	ldr	r3, [r4, #448]	; 0x1c0
    3bf4:	str	r2, [r4, #448]	; 0x1c0
    3bf8:	ldr	r2, [sp, #12]
    3bfc:	subs	r0, r0, #1
    3c00:	str	r3, [fp, sl, lsl #2]
    3c04:	str	r0, [sp, #16]
    3c08:	stm	r1, {r2, r5}
    3c0c:	str	r3, [r1, #8]
    3c10:	bne	3abc <storeAtts+0x558>
    3c14:	ldr	r9, [sp, #20]
    3c18:	add	r3, sl, #2
    3c1c:	str	r3, [sp, #16]
    3c20:	ldr	r3, [sp, #16]
    3c24:	cmp	r3, r9
    3c28:	bge	3c44 <storeAtts+0x6e0>
    3c2c:	mov	r2, #0
    3c30:	ldr	r1, [fp, r3, lsl #2]
    3c34:	add	r3, r3, #2
    3c38:	cmp	r3, r9
    3c3c:	strb	r2, [r1, #-1]
    3c40:	blt	3c30 <storeAtts+0x6cc>
    3c44:	ldr	r3, [sp, #96]	; 0x60
    3c48:	ldr	r3, [r3]
    3c4c:	cmp	r3, #0
    3c50:	beq	3c70 <storeAtts+0x70c>
    3c54:	mov	r1, #0
    3c58:	ldr	r2, [r3, #12]
    3c5c:	ldr	r2, [r2]
    3c60:	strb	r1, [r2, #-1]
    3c64:	ldr	r3, [r3, #4]
    3c68:	cmp	r3, #0
    3c6c:	bne	3c58 <storeAtts+0x6f4>
    3c70:	ldrb	r0, [r4, #244]	; 0xf4
    3c74:	cmp	r0, #0
    3c78:	beq	37e4 <storeAtts+0x280>
    3c7c:	ldr	r3, [sp, #28]
    3c80:	ldr	r3, [r3, #4]
    3c84:	cmp	r3, #0
    3c88:	beq	3f48 <storeAtts+0x9e4>
    3c8c:	ldr	r5, [r3, #4]
    3c90:	cmp	r5, #0
    3c94:	beq	4000 <storeAtts+0xa9c>
    3c98:	ldr	r3, [sp, #32]
    3c9c:	ldr	r7, [r3]
    3ca0:	ldrb	r3, [r7], #1
    3ca4:	cmp	r3, #58	; 0x3a
    3ca8:	bne	3ca0 <storeAtts+0x73c>
    3cac:	ldrb	r9, [r4, #245]	; 0xf5
    3cb0:	ldr	r3, [r5]
    3cb4:	cmp	r9, #0
    3cb8:	ldr	ip, [r3]
    3cbc:	beq	3ce4 <storeAtts+0x780>
    3cc0:	cmp	ip, #0
    3cc4:	moveq	r9, ip
    3cc8:	beq	3ce4 <storeAtts+0x780>
    3ccc:	sub	r3, ip, #1
    3cd0:	rsb	r1, ip, #2
    3cd4:	add	r9, r1, r3
    3cd8:	ldrb	r2, [r3, #1]!
    3cdc:	cmp	r2, #0
    3ce0:	bne	3cd4 <storeAtts+0x770>
    3ce4:	ldr	r0, [r5, #20]
    3ce8:	sub	r2, r7, #1
    3cec:	mov	r3, #0
    3cf0:	ldr	r1, [sp, #32]
    3cf4:	stmib	r1, {r7, ip}
    3cf8:	str	r0, [r1, #16]
    3cfc:	str	r9, [r1, #20]
    3d00:	ldrb	r1, [r2, #1]!
    3d04:	add	r6, r3, #1
    3d08:	mov	r8, r3
    3d0c:	mov	r3, r6
    3d10:	cmp	r1, #0
    3d14:	bne	3d00 <storeAtts+0x79c>
    3d18:	ldr	r2, [r5, #24]
    3d1c:	add	r3, r0, r6
    3d20:	add	r3, r3, r9
    3d24:	cmp	r2, r3
    3d28:	bge	3e60 <storeAtts+0x8fc>
    3d2c:	add	sl, r3, #24
    3d30:	ldr	r3, [r4, #12]
    3d34:	mov	r0, sl
    3d38:	blx	r3
    3d3c:	subs	fp, r0, #0
    3d40:	beq	38f4 <storeAtts+0x390>
    3d44:	str	sl, [r5, #24]
    3d48:	ldr	r1, [r5, #16]
    3d4c:	ldr	r2, [r5, #20]
    3d50:	bl	0 <memcpy>
    3d54:	ldr	r3, [r4, #372]	; 0x174
    3d58:	ldr	r0, [r5, #16]
    3d5c:	cmp	r3, #0
    3d60:	beq	3d7c <storeAtts+0x818>
    3d64:	ldr	r2, [r3, #12]
    3d68:	cmp	r2, r0
    3d6c:	streq	fp, [r3, #12]
    3d70:	ldr	r3, [r3]
    3d74:	cmp	r3, #0
    3d78:	bne	3d64 <storeAtts+0x800>
    3d7c:	ldr	r3, [r4, #20]
    3d80:	blx	r3
    3d84:	ldr	r0, [r5, #20]
    3d88:	str	fp, [r5, #16]
    3d8c:	add	fp, fp, r0
    3d90:	mov	r2, r6
    3d94:	mov	r1, r7
    3d98:	mov	r0, fp
    3d9c:	bl	0 <memcpy>
    3da0:	cmp	r9, #0
    3da4:	bne	3fc0 <storeAtts+0xa5c>
    3da8:	ldr	r3, [r5, #16]
    3dac:	mov	r0, #0
    3db0:	ldr	r2, [sp, #32]
    3db4:	str	r3, [r2]
    3db8:	b	37e4 <storeAtts+0x280>
    3dbc:	ldr	r3, [r4, #400]	; 0x190
    3dc0:	mov	r0, #8
    3dc4:	ldr	r3, [r3, r5]
    3dc8:	str	r3, [r4, #296]	; 0x128
    3dcc:	b	37e4 <storeAtts+0x280>
    3dd0:	mov	r6, r3
    3dd4:	mov	r3, r6
    3dd8:	ldrb	r2, [r3], #1
    3ddc:	cmp	r2, #58	; 0x3a
    3de0:	bne	3dd0 <storeAtts+0x86c>
    3de4:	add	r3, r4, #432	; 0x1b0
    3de8:	str	r3, [sp, #44]	; 0x2c
    3dec:	b	3e10 <storeAtts+0x8ac>
    3df0:	add	r3, r2, #1
    3df4:	mul	r5, r8, r5
    3df8:	str	r3, [r4, #444]	; 0x1bc
    3dfc:	ldrb	r3, [r6]
    3e00:	eor	r5, r5, r9
    3e04:	cmp	r3, #0
    3e08:	strb	r3, [r2]
    3e0c:	beq	3e78 <storeAtts+0x914>
    3e10:	ldr	r3, [r4, #440]	; 0x1b8
    3e14:	ldr	r2, [r4, #444]	; 0x1bc
    3e18:	ldrb	r9, [r6, #1]!
    3e1c:	cmp	r2, r3
    3e20:	bne	3df0 <storeAtts+0x88c>
    3e24:	ldr	r0, [sp, #44]	; 0x2c
    3e28:	bl	1238 <poolGrow>
    3e2c:	cmp	r0, #0
    3e30:	beq	38f4 <storeAtts+0x390>
    3e34:	ldr	r2, [r4, #444]	; 0x1bc
    3e38:	b	3df0 <storeAtts+0x88c>
    3e3c:	ldr	r2, [r4, #408]	; 0x198
    3e40:	mov	r1, #1
    3e44:	lsl	r3, r1, r3
    3e48:	str	r3, [sp, #24]
    3e4c:	cmp	r2, #0
    3e50:	subne	r3, r2, #1
    3e54:	strne	r3, [sp, #12]
    3e58:	bne	3a84 <storeAtts+0x520>
    3e5c:	b	3a50 <storeAtts+0x4ec>
    3e60:	ldr	fp, [r5, #16]
    3e64:	b	3d8c <storeAtts+0x828>
    3e68:	mov	r8, r7
    3e6c:	mov	r7, r6
    3e70:	ldr	r6, [sp, #48]	; 0x30
    3e74:	b	3dd4 <storeAtts+0x870>
    3e78:	ldr	r2, [sp, #24]
    3e7c:	ldr	lr, [r4, #404]	; 0x194
    3e80:	rsb	r9, r2, #0
    3e84:	ldr	r2, [sp, #52]	; 0x34
    3e88:	and	r9, r9, r5
    3e8c:	and	r2, r5, r2
    3e90:	b	3ec4 <storeAtts+0x960>
    3e94:	cmp	r3, #0
    3e98:	bne	3eb0 <storeAtts+0x94c>
    3e9c:	ldrb	r3, [r4, #412]	; 0x19c
    3ea0:	ldr	r1, [sp, #40]	; 0x28
    3ea4:	sub	r3, r3, #1
    3ea8:	and	r3, r1, r9, lsr r3
    3eac:	orr	r3, r3, #1
    3eb0:	cmp	r3, r2
    3eb4:	ldrgt	r1, [sp, #24]
    3eb8:	suble	r2, r2, r3
    3ebc:	subgt	r1, r1, r3
    3ec0:	addgt	r2, r2, r1
    3ec4:	add	r1, r2, r2, lsl #1
    3ec8:	ldr	r6, [sp, #12]
    3ecc:	ldr	ip, [lr, r1, lsl #2]
    3ed0:	lsl	r1, r1, #2
    3ed4:	add	r0, lr, r1
    3ed8:	cmp	ip, r6
    3edc:	bne	3bd4 <storeAtts+0x670>
    3ee0:	ldr	r1, [r0, #4]
    3ee4:	cmp	r1, r5
    3ee8:	bne	3e94 <storeAtts+0x930>
    3eec:	ldr	r0, [r0, #8]
    3ef0:	ldr	r6, [r4, #448]	; 0x1c0
    3ef4:	ldrb	r1, [r0]
    3ef8:	ldrb	ip, [r6]
    3efc:	cmp	r1, ip
    3f00:	bne	3f1c <storeAtts+0x9b8>
    3f04:	cmp	r1, #0
    3f08:	beq	3bcc <storeAtts+0x668>
    3f0c:	ldrb	ip, [r6, #1]!
    3f10:	ldrb	r1, [r0, #1]!
    3f14:	cmp	r1, ip
    3f18:	beq	3f04 <storeAtts+0x9a0>
    3f1c:	cmp	ip, #0
    3f20:	bne	3e94 <storeAtts+0x930>
    3f24:	b	3bcc <storeAtts+0x668>
    3f28:	str	r3, [r4, #396]	; 0x18c
    3f2c:	b	3904 <storeAtts+0x3a0>
    3f30:	mov	r3, #3
    3f34:	mov	r2, #8
    3f38:	mov	r1, #96	; 0x60
    3f3c:	str	r2, [sp, #24]
    3f40:	strb	r3, [r4, #412]	; 0x19c
    3f44:	b	3a38 <storeAtts+0x4d4>
    3f48:	ldr	r3, [sp, #36]	; 0x24
    3f4c:	ldr	r5, [r3, #156]	; 0x9c
    3f50:	cmp	r5, #0
    3f54:	moveq	r0, r5
    3f58:	beq	37e4 <storeAtts+0x280>
    3f5c:	ldr	r3, [sp, #32]
    3f60:	ldr	r7, [r3]
    3f64:	b	3cac <storeAtts+0x748>
    3f68:	ldrb	r3, [r4, #488]	; 0x1e8
    3f6c:	add	r9, r4, #432	; 0x1b0
    3f70:	strb	r3, [r2, #-1]
    3f74:	ldr	r3, [r7]
    3f78:	ldr	r7, [r3]
    3f7c:	b	3f98 <storeAtts+0xa34>
    3f80:	add	r2, r3, #1
    3f84:	str	r2, [r4, #444]	; 0x1bc
    3f88:	ldrb	r2, [r7], #1
    3f8c:	cmp	r2, #0
    3f90:	strb	r2, [r3]
    3f94:	beq	3fe4 <storeAtts+0xa80>
    3f98:	ldr	r2, [r4, #440]	; 0x1b8
    3f9c:	ldr	r3, [r4, #444]	; 0x1bc
    3fa0:	cmp	r3, r2
    3fa4:	bne	3f80 <storeAtts+0xa1c>
    3fa8:	mov	r0, r9
    3fac:	bl	1238 <poolGrow>
    3fb0:	cmp	r0, #0
    3fb4:	beq	38f4 <storeAtts+0x390>
    3fb8:	ldr	r3, [r4, #444]	; 0x1bc
    3fbc:	b	3f80 <storeAtts+0xa1c>
    3fc0:	ldrb	r3, [r4, #488]	; 0x1e8
    3fc4:	add	r0, fp, r8
    3fc8:	mov	r2, r9
    3fcc:	add	r0, r0, #1
    3fd0:	strb	r3, [fp, r8]
    3fd4:	ldr	r3, [r5]
    3fd8:	ldr	r1, [r3]
    3fdc:	bl	0 <memcpy>
    3fe0:	b	3da8 <storeAtts+0x844>
    3fe4:	ldr	r1, [r4, #404]	; 0x194
    3fe8:	ldr	r2, [r4, #444]	; 0x1bc
    3fec:	add	r1, r1, r6
    3ff0:	b	3bec <storeAtts+0x688>
    3ff4:	mov	r9, r3
    3ff8:	str	r3, [sp, #16]
    3ffc:	b	3764 <storeAtts+0x200>
    4000:	mov	r0, #27
    4004:	b	37e4 <storeAtts+0x280>

00004008 <doProlog>:
    4008:	strd	r4, [sp, #-36]!	; 0xffffffdc
    400c:	mov	r4, r0
    4010:	mov	r5, r2
    4014:	strd	r6, [sp, #8]
    4018:	mov	r6, r1
    401c:	strd	r8, [sp, #16]
    4020:	strd	sl, [sp, #24]
    4024:	str	lr, [sp, #32]
    4028:	sub	sp, sp, #52	; 0x34
    402c:	ldrb	r1, [sp, #100]	; 0x64
    4030:	ldr	r9, [sp, #88]	; 0x58
    4034:	ldr	sl, [r0, #364]	; 0x16c
    4038:	str	r3, [sp, #32]
    403c:	ldr	r3, [r0, #152]	; 0x98
    4040:	str	r1, [sp, #28]
    4044:	cmp	r3, r6
    4048:	ldrne	r7, [r0, #308]	; 0x134
    404c:	addeq	r3, r0, #300	; 0x12c
    4050:	addeq	r7, r0, #296	; 0x128
    4054:	addne	r3, r7, #4
    4058:	str	r3, [sp, #24]
    405c:	str	r5, [r7]
    4060:	cmp	r9, #0
    4064:	ldr	r2, [sp, #24]
    4068:	ldr	r3, [sp, #92]	; 0x5c
    406c:	str	r3, [r2]
    4070:	ble	419c <doProlog+0x194>
    4074:	ldr	r3, [sp, #92]	; 0x5c
    4078:	mov	r2, r5
    407c:	mov	r1, r9
    4080:	str	r6, [sp]
    4084:	add	r0, r4, #264	; 0x108
    4088:	ldr	r8, [r4, #264]	; 0x108
    408c:	blx	r8
    4090:	add	r3, r0, #1
    4094:	mov	r8, r0
    4098:	cmp	r3, #61	; 0x3d
    409c:	ldrls	pc, [pc, r3, lsl #2]
    40a0:	b	4284 <doProlog+0x27c>
    40a4:	.word	0x00004b78
    40a8:	.word	0x00004c88
    40ac:	.word	0x000049f8
    40b0:	.word	0x00004a9c
    40b4:	.word	0x00004940
    40b8:	.word	0x000048fc
    40bc:	.word	0x00005294
    40c0:	.word	0x0000546c
    40c4:	.word	0x00005230
    40c8:	.word	0x000050cc
    40cc:	.word	0x00004200
    40d0:	.word	0x000050b0
    40d4:	.word	0x00005094
    40d8:	.word	0x00004a04
    40dc:	.word	0x000044fc
    40e0:	.word	0x000045d8
    40e4:	.word	0x00004570
    40e8:	.word	0x00004764
    40ec:	.word	0x00004710
    40f0:	.word	0x00004720
    40f4:	.word	0x0000465c
    40f8:	.word	0x0000501c
    40fc:	.word	0x00004fb8
    4100:	.word	0x000043a4
    4104:	.word	0x00004f84
    4108:	.word	0x00004fa4
    410c:	.word	0x00004f98
    4110:	.word	0x0000534c
    4114:	.word	0x00005340
    4118:	.word	0x00005334
    411c:	.word	0x00004c94
    4120:	.word	0x000049ec
    4124:	.word	0x00004978
    4128:	.word	0x00004978
    412c:	.word	0x000043d4
    4130:	.word	0x00004950
    4134:	.word	0x00004b94
    4138:	.word	0x00004b94
    413c:	.word	0x00004dc0
    4140:	.word	0x00004dc0
    4144:	.word	0x00004418
    4148:	.word	0x000047e8
    414c:	.word	0x00004f10
    4150:	.word	0x00004f10
    4154:	.word	0x00004ed4
    4158:	.word	0x00004cb8
    415c:	.word	0x00004cb0
    4160:	.word	0x00004ca8
    4164:	.word	0x00004428
    4168:	.word	0x00004ca0
    416c:	.word	0x00004d84
    4170:	.word	0x000043f0
    4174:	.word	0x00005454
    4178:	.word	0x00005440
    417c:	.word	0x00005518
    4180:	.word	0x00005398
    4184:	.word	0x00005378
    4188:	.word	0x00005358
    418c:	.word	0x000048d8
    4190:	.word	0x00004874
    4194:	.word	0x0000482c
    4198:	.word	0x0000482c
    419c:	ldr	r2, [sp, #28]
    41a0:	andne	r2, r2, #1
    41a4:	moveq	r2, #0
    41a8:	cmp	r2, #0
    41ac:	bne	4378 <doProlog+0x370>
    41b0:	add	r2, r9, #15
    41b4:	cmp	r2, #15
    41b8:	ldrls	pc, [pc, r2, lsl #2]
    41bc:	b	4390 <doProlog+0x388>
    41c0:	.word	0x00004328
    41c4:	.word	0x00004390
    41c8:	.word	0x00004390
    41cc:	.word	0x00004390
    41d0:	.word	0x00004390
    41d4:	.word	0x00004390
    41d8:	.word	0x00004390
    41dc:	.word	0x00004390
    41e0:	.word	0x00004390
    41e4:	.word	0x00004390
    41e8:	.word	0x00004390
    41ec:	.word	0x00004334
    41f0:	.word	0x00004390
    41f4:	.word	0x00004388
    41f8:	.word	0x00004314
    41fc:	.word	0x0000431c
    4200:	mov	r1, r5
    4204:	mov	r0, r6
    4208:	ldr	r3, [r6, #48]	; 0x30
    420c:	ldr	r2, [sp, #92]	; 0x5c
    4210:	blx	r3
    4214:	subs	r8, r0, #0
    4218:	movne	r3, #0
    421c:	strne	r3, [r4, #324]	; 0x144
    4220:	bne	4284 <doProlog+0x27c>
    4224:	ldrb	r3, [sl, #128]	; 0x80
    4228:	cmp	r3, #0
    422c:	beq	50bc <doProlog+0x10b4>
    4230:	mov	r2, r5
    4234:	mov	r1, r6
    4238:	ldr	r3, [sp, #92]	; 0x5c
    423c:	add	r0, sl, #80	; 0x50
    4240:	bl	14d8 <poolStoreString>
    4244:	subs	r9, r0, #0
    4248:	beq	4970 <doProlog+0x968>
    424c:	mov	r3, #36	; 0x24
    4250:	mov	r2, r9
    4254:	mov	r1, sl
    4258:	mov	r0, r4
    425c:	bl	a50 <lookup>
    4260:	cmp	r0, #0
    4264:	str	r0, [r4, #324]	; 0x144
    4268:	beq	4970 <doProlog+0x968>
    426c:	ldr	r3, [r0]
    4270:	cmp	r3, r9
    4274:	beq	5a24 <doProlog+0x1a1c>
    4278:	ldr	r3, [sl, #96]	; 0x60
    427c:	str	r3, [sl, #92]	; 0x5c
    4280:	str	r8, [r4, #324]	; 0x144
    4284:	ldr	r3, [r4, #88]	; 0x58
    4288:	cmp	r3, #0
    428c:	beq	42a4 <doProlog+0x29c>
    4290:	mov	r2, r5
    4294:	mov	r1, r6
    4298:	ldr	r3, [sp, #92]	; 0x5c
    429c:	mov	r0, r4
    42a0:	bl	90 <reportDefault>
    42a4:	ldr	r3, [r4, #496]	; 0x1f0
    42a8:	cmp	r3, #2
    42ac:	beq	42e8 <doProlog+0x2e0>
    42b0:	cmp	r3, #3
    42b4:	bne	42f0 <doProlog+0x2e8>
    42b8:	ldr	r3, [sp, #92]	; 0x5c
    42bc:	mov	r9, #0
    42c0:	ldr	r2, [sp, #96]	; 0x60
    42c4:	str	r3, [r2]
    42c8:	mov	r0, r9
    42cc:	add	sp, sp, #52	; 0x34
    42d0:	ldrd	r4, [sp]
    42d4:	ldrd	r6, [sp, #8]
    42d8:	ldrd	r8, [sp, #16]
    42dc:	ldrd	sl, [sp, #24]
    42e0:	add	sp, sp, #32
    42e4:	pop	{pc}		; (ldr pc, [sp], #4)
    42e8:	mov	r9, #35	; 0x23
    42ec:	b	42c8 <doProlog+0x2c0>
    42f0:	add	r3, sp, #84	; 0x54
    42f4:	mov	r0, r6
    42f8:	ldr	r8, [r6]
    42fc:	ldr	r5, [r3, #8]!
    4300:	ldr	r2, [sp, #32]
    4304:	mov	r1, r5
    4308:	blx	r8
    430c:	mov	r9, r0
    4310:	b	405c <doProlog+0x54>
    4314:	mov	r9, #5
    4318:	b	42c8 <doProlog+0x2c0>
    431c:	mov	r9, #4
    4320:	str	r3, [r7]
    4324:	b	42c8 <doProlog+0x2c0>
    4328:	mov	r9, #15
    432c:	ldr	r3, [sp, #92]	; 0x5c
    4330:	b	4078 <doProlog+0x70>
    4334:	ldr	r3, [r4, #152]	; 0x98
    4338:	cmp	r3, r6
    433c:	beq	552c <doProlog+0x1524>
    4340:	ldr	r3, [r4, #308]	; 0x134
    4344:	ldrb	r9, [r3, #20]
    4348:	cmp	r9, #0
    434c:	beq	437c <doProlog+0x374>
    4350:	ldr	r3, [sp, #32]
    4354:	add	r0, r4, #264	; 0x108
    4358:	mvn	r1, #3
    435c:	str	r6, [sp]
    4360:	ldr	r4, [r4, #264]	; 0x108
    4364:	mov	r2, r3
    4368:	blx	r4
    436c:	cmn	r0, #1
    4370:	moveq	r9, #29
    4374:	beq	42c8 <doProlog+0x2c0>
    4378:	mov	r9, #0
    437c:	ldr	r3, [sp, #96]	; 0x60
    4380:	str	r5, [r3]
    4384:	b	42c8 <doProlog+0x2c0>
    4388:	mov	r9, #6
    438c:	b	42c8 <doProlog+0x2c0>
    4390:	ldr	r2, [sp, #32]
    4394:	rsb	r9, r9, #0
    4398:	mov	r3, r2
    439c:	str	r2, [sp, #92]	; 0x5c
    43a0:	b	4078 <doProlog+0x70>
    43a4:	mov	r2, r5
    43a8:	mov	r1, r6
    43ac:	ldr	r3, [sp, #92]	; 0x5c
    43b0:	mov	r0, r4
    43b4:	bl	19e4 <getAttributeId>
    43b8:	cmp	r0, #0
    43bc:	str	r0, [r4, #356]	; 0x164
    43c0:	beq	4970 <doProlog+0x968>
    43c4:	mov	r2, #0
    43c8:	add	r3, r4, #360	; 0x168
    43cc:	str	r2, [r4, #340]	; 0x154
    43d0:	strh	r2, [r3]
    43d4:	ldrb	r3, [sl, #128]	; 0x80
    43d8:	cmp	r3, #0
    43dc:	beq	4284 <doProlog+0x27c>
    43e0:	ldr	r3, [r4, #140]	; 0x8c
    43e4:	cmp	r3, #0
    43e8:	bne	42a4 <doProlog+0x29c>
    43ec:	b	4284 <doProlog+0x27c>
    43f0:	ldr	r3, [r4, #268]	; 0x10c
    43f4:	ldr	r2, [r4, #480]	; 0x1e0
    43f8:	ldrb	r1, [r2, r3]
    43fc:	cmp	r1, #124	; 0x7c
    4400:	beq	5a5c <doProlog+0x1a54>
    4404:	mov	r1, #44	; 0x2c
    4408:	strb	r1, [r2, r3]
    440c:	ldrb	r3, [sl, #160]	; 0xa0
    4410:	cmp	r3, #0
    4414:	beq	4284 <doProlog+0x27c>
    4418:	ldr	r3, [r4, #136]	; 0x88
    441c:	cmp	r3, #0
    4420:	bne	42a4 <doProlog+0x29c>
    4424:	b	4284 <doProlog+0x27c>
    4428:	mov	r1, #1
    442c:	ldrb	r3, [sl, #160]	; 0xa0
    4430:	cmp	r3, #0
    4434:	beq	4284 <doProlog+0x27c>
    4438:	ldr	r3, [r4, #136]	; 0x88
    443c:	ldr	r2, [sl, #164]	; 0xa4
    4440:	ldr	r8, [sl, #180]	; 0xb4
    4444:	cmp	r3, #0
    4448:	ldr	r3, [sl, #184]	; 0xb8
    444c:	sub	r8, r8, #1
    4450:	beq	5548 <doProlog+0x1540>
    4454:	str	r8, [sl, #180]	; 0xb4
    4458:	cmp	r8, #0
    445c:	ldr	r3, [r3, r8, lsl #2]
    4460:	rsb	r3, r3, r3, lsl #3
    4464:	add	r3, r2, r3, lsl #2
    4468:	str	r1, [r3, #4]
    446c:	bne	42a4 <doProlog+0x29c>
    4470:	ldr	r1, [r4, #12]
    4474:	ldr	r2, [r4, #364]	; 0x16c
    4478:	ldr	r0, [r2, #168]	; 0xa8
    447c:	str	r2, [sp, #36]	; 0x24
    4480:	ldr	r3, [r2, #176]	; 0xb0
    4484:	add	r3, r3, r3, lsl #2
    4488:	add	r0, r0, r3, lsl #2
    448c:	blx	r1
    4490:	subs	r9, r0, #0
    4494:	ldr	r2, [sp, #36]	; 0x24
    4498:	beq	4970 <doProlog+0x968>
    449c:	ldr	ip, [r2, #176]	; 0xb0
    44a0:	add	r1, sp, #44	; 0x2c
    44a4:	add	r0, r9, #20
    44a8:	add	r3, sp, #40	; 0x28
    44ac:	mov	r2, r9
    44b0:	str	r1, [sp]
    44b4:	mov	r1, r8
    44b8:	str	r0, [sp, #40]	; 0x28
    44bc:	mov	r0, r4
    44c0:	add	ip, ip, ip, lsl #2
    44c4:	add	ip, r9, ip, lsl #2
    44c8:	str	ip, [sp, #44]	; 0x2c
    44cc:	bl	914 <build_node>
    44d0:	ldr	r3, [sp, #24]
    44d4:	mov	r2, r9
    44d8:	ldr	r1, [r4, #352]	; 0x160
    44dc:	str	r5, [r3]
    44e0:	ldr	r0, [r4, #4]
    44e4:	ldr	r1, [r1]
    44e8:	ldr	r3, [r4, #136]	; 0x88
    44ec:	blx	r3
    44f0:	strb	r8, [sl, #160]	; 0xa0
    44f4:	str	r8, [sl, #168]	; 0xa8
    44f8:	b	42a4 <doProlog+0x29c>
    44fc:	ldrb	r3, [sl, #128]	; 0x80
    4500:	cmp	r3, #0
    4504:	beq	4284 <doProlog+0x27c>
    4508:	ldr	r9, [r4, #324]	; 0x144
    450c:	cmp	r9, #0
    4510:	beq	4284 <doProlog+0x27c>
    4514:	mov	r8, #1
    4518:	ldr	r2, [r6, #68]	; 0x44
    451c:	mov	r1, r6
    4520:	add	r0, sl, #80	; 0x50
    4524:	ldr	r3, [sp, #92]	; 0x5c
    4528:	sub	r3, r3, r2
    452c:	add	r2, r5, r2
    4530:	bl	14d8 <poolStoreString>
    4534:	ldr	r3, [r4, #324]	; 0x144
    4538:	str	r0, [r9, #16]
    453c:	ldr	r2, [r3, #16]
    4540:	cmp	r2, #0
    4544:	beq	4970 <doProlog+0x968>
    4548:	ldr	r0, [r4, #144]	; 0x90
    454c:	ldr	r2, [sl, #92]	; 0x5c
    4550:	ldr	r1, [r4, #368]	; 0x170
    4554:	cmp	r0, #0
    4558:	str	r1, [r3, #20]
    455c:	str	r2, [sl, #96]	; 0x60
    4560:	bne	42a4 <doProlog+0x29c>
    4564:	cmp	r8, #0
    4568:	beq	42a4 <doProlog+0x29c>
    456c:	b	4284 <doProlog+0x27c>
    4570:	ldrb	r3, [sl, #128]	; 0x80
    4574:	cmp	r3, #0
    4578:	beq	4284 <doProlog+0x27c>
    457c:	ldr	ip, [r4, #324]	; 0x144
    4580:	cmp	ip, #0
    4584:	beq	4284 <doProlog+0x27c>
    4588:	ldr	r8, [r4, #144]	; 0x90
    458c:	cmp	r8, #0
    4590:	beq	4284 <doProlog+0x27c>
    4594:	ldr	r3, [sp, #24]
    4598:	mov	lr, #0
    459c:	str	r5, [r3]
    45a0:	mov	r3, lr
    45a4:	ldrb	r2, [ip, #33]	; 0x21
    45a8:	ldr	r1, [ip]
    45ac:	str	lr, [sp, #16]
    45b0:	ldr	r5, [ip, #24]
    45b4:	ldr	r0, [r4, #4]
    45b8:	str	r5, [sp, #12]
    45bc:	ldr	r5, [ip, #16]
    45c0:	str	r5, [sp, #8]
    45c4:	ldr	ip, [ip, #20]
    45c8:	str	lr, [sp]
    45cc:	str	ip, [sp, #4]
    45d0:	blx	r8
    45d4:	b	42a4 <doProlog+0x29c>
    45d8:	ldr	r9, [r6, #56]	; 0x38
    45dc:	ldr	r2, [sp, #92]	; 0x5c
    45e0:	mov	r3, r7
    45e4:	mov	r1, r5
    45e8:	mov	r0, r6
    45ec:	blx	r9
    45f0:	cmp	r0, #0
    45f4:	beq	5a14 <doProlog+0x1a0c>
    45f8:	ldrb	r3, [sl, #128]	; 0x80
    45fc:	cmp	r3, #0
    4600:	beq	4284 <doProlog+0x27c>
    4604:	ldr	r3, [r4, #324]	; 0x144
    4608:	cmp	r3, #0
    460c:	movne	r8, #1
    4610:	beq	4284 <doProlog+0x27c>
    4614:	ldr	r2, [r6, #68]	; 0x44
    4618:	mov	r1, r6
    461c:	add	r0, sl, #80	; 0x50
    4620:	ldr	r3, [sp, #92]	; 0x5c
    4624:	sub	r3, r3, r2
    4628:	add	r2, r5, r2
    462c:	bl	14d8 <poolStoreString>
    4630:	subs	r9, r0, #0
    4634:	beq	4970 <doProlog+0x968>
    4638:	bl	65c <normalizePublicId>
    463c:	ldr	r1, [r4, #144]	; 0x90
    4640:	ldr	r3, [sl, #92]	; 0x5c
    4644:	ldr	r2, [r4, #324]	; 0x144
    4648:	cmp	r1, #0
    464c:	str	r9, [r2, #24]
    4650:	str	r3, [sl, #96]	; 0x60
    4654:	bne	42a4 <doProlog+0x29c>
    4658:	b	4564 <doProlog+0x55c>
    465c:	ldr	r3, [r4, #344]	; 0x158
    4660:	cmp	r3, #0
    4664:	beq	5540 <doProlog+0x1538>
    4668:	ldr	r3, [r4, #104]	; 0x68
    466c:	cmp	r3, #0
    4670:	beq	5540 <doProlog+0x1538>
    4674:	ldr	r2, [r6, #68]	; 0x44
    4678:	mov	r1, r6
    467c:	add	r0, r4, #432	; 0x1b0
    4680:	ldr	r3, [sp, #92]	; 0x5c
    4684:	sub	r3, r3, r2
    4688:	add	r2, r5, r2
    468c:	bl	14d8 <poolStoreString>
    4690:	subs	r3, r0, #0
    4694:	beq	4970 <doProlog+0x968>
    4698:	ldr	r2, [sp, #24]
    469c:	mov	r8, #0
    46a0:	ldr	r9, [r4, #104]	; 0x68
    46a4:	str	r5, [r2]
    46a8:	ldr	r0, [r4, #4]
    46ac:	ldr	r2, [r4, #348]	; 0x15c
    46b0:	str	r2, [sp]
    46b4:	ldr	r1, [r4, #344]	; 0x158
    46b8:	ldr	r2, [r4, #368]	; 0x170
    46bc:	blx	r9
    46c0:	ldr	r3, [r4, #432]	; 0x1b0
    46c4:	ldr	r1, [r4, #436]	; 0x1b4
    46c8:	cmp	r1, #0
    46cc:	beq	46f4 <doProlog+0x6ec>
    46d0:	cmp	r3, #0
    46d4:	bne	46e0 <doProlog+0x6d8>
    46d8:	b	46f8 <doProlog+0x6f0>
    46dc:	mov	r3, r2
    46e0:	ldr	r2, [r3]
    46e4:	str	r1, [r3]
    46e8:	mov	r1, r3
    46ec:	cmp	r2, #0
    46f0:	bne	46dc <doProlog+0x6d4>
    46f4:	str	r3, [r4, #436]	; 0x1b4
    46f8:	mov	r3, #0
    46fc:	str	r3, [r4, #432]	; 0x1b0
    4700:	str	r3, [r4, #440]	; 0x1b8
    4704:	str	r3, [r4, #444]	; 0x1bc
    4708:	str	r3, [r4, #448]	; 0x1c0
    470c:	b	4564 <doProlog+0x55c>
    4710:	ldr	r3, [r4, #104]	; 0x68
    4714:	cmp	r3, #0
    4718:	bne	42a4 <doProlog+0x29c>
    471c:	b	4284 <doProlog+0x27c>
    4720:	ldr	r2, [r4, #104]	; 0x68
    4724:	mov	r3, #0
    4728:	str	r3, [r4, #344]	; 0x158
    472c:	str	r3, [r4, #348]	; 0x15c
    4730:	cmp	r2, r3
    4734:	beq	4284 <doProlog+0x27c>
    4738:	mov	r2, r5
    473c:	mov	r1, r6
    4740:	ldr	r3, [sp, #92]	; 0x5c
    4744:	add	r0, r4, #432	; 0x1b0
    4748:	bl	14d8 <poolStoreString>
    474c:	cmp	r0, #0
    4750:	str	r0, [r4, #344]	; 0x158
    4754:	beq	4970 <doProlog+0x968>
    4758:	ldr	r3, [r4, #444]	; 0x1bc
    475c:	str	r3, [r4, #448]	; 0x1c0
    4760:	b	42a4 <doProlog+0x29c>
    4764:	ldrb	r3, [sl, #128]	; 0x80
    4768:	cmp	r3, #0
    476c:	beq	4284 <doProlog+0x27c>
    4770:	ldr	r8, [r4, #324]	; 0x144
    4774:	cmp	r8, #0
    4778:	beq	4284 <doProlog+0x27c>
    477c:	mov	r2, r5
    4780:	mov	r1, r6
    4784:	ldr	r3, [sp, #92]	; 0x5c
    4788:	add	r0, sl, #80	; 0x50
    478c:	bl	14d8 <poolStoreString>
    4790:	ldr	ip, [r4, #324]	; 0x144
    4794:	str	r0, [r8, #28]
    4798:	ldr	r3, [ip, #28]
    479c:	cmp	r3, #0
    47a0:	beq	4970 <doProlog+0x968>
    47a4:	ldr	r8, [r4, #100]	; 0x64
    47a8:	ldr	r3, [sl, #92]	; 0x5c
    47ac:	cmp	r8, #0
    47b0:	str	r3, [sl, #96]	; 0x60
    47b4:	beq	5890 <doProlog+0x1888>
    47b8:	ldr	r3, [sp, #24]
    47bc:	str	r5, [r3]
    47c0:	ldr	r1, [ip]
    47c4:	ldr	r0, [ip, #28]
    47c8:	ldr	r3, [ip, #16]
    47cc:	ldr	r2, [ip, #20]
    47d0:	str	r0, [sp, #4]
    47d4:	ldr	ip, [ip, #24]
    47d8:	ldr	r0, [r4, #4]
    47dc:	str	ip, [sp]
    47e0:	blx	r8
    47e4:	b	42a4 <doProlog+0x29c>
    47e8:	ldr	r3, [r4, #136]	; 0x88
    47ec:	cmp	r3, #0
    47f0:	beq	4284 <doProlog+0x27c>
    47f4:	mov	r2, r5
    47f8:	mov	r1, r6
    47fc:	ldr	r3, [sp, #92]	; 0x5c
    4800:	mov	r0, r4
    4804:	bl	3120 <getElementType>
    4808:	cmp	r0, #0
    480c:	str	r0, [r4, #352]	; 0x160
    4810:	beq	4970 <doProlog+0x968>
    4814:	mov	r3, #0
    4818:	mov	r2, #1
    481c:	strb	r2, [sl, #160]	; 0xa0
    4820:	str	r3, [sl, #176]	; 0xb0
    4824:	str	r3, [sl, #180]	; 0xb4
    4828:	b	42a4 <doProlog+0x29c>
    482c:	mov	r3, #1
    4830:	strb	r3, [sl, #129]	; 0x81
    4834:	ldr	r3, [r4, #508]	; 0x1fc
    4838:	cmp	r3, #0
    483c:	bne	561c <doProlog+0x1614>
    4840:	ldrb	r3, [sl, #130]	; 0x82
    4844:	cmp	r3, #0
    4848:	strb	r3, [sl, #128]	; 0x80
    484c:	bne	4284 <doProlog+0x27c>
    4850:	ldr	r3, [r4, #116]	; 0x74
    4854:	cmp	r3, #0
    4858:	beq	4284 <doProlog+0x27c>
    485c:	ldr	r0, [r4, #4]
    4860:	blx	r3
    4864:	cmp	r0, #0
    4868:	bne	4284 <doProlog+0x27c>
    486c:	mov	r9, #22
    4870:	b	42c8 <doProlog+0x2c0>
    4874:	ldr	r3, [r4, #88]	; 0x58
    4878:	cmp	r3, #0
    487c:	beq	4894 <doProlog+0x88c>
    4880:	mov	r2, r5
    4884:	mov	r1, r6
    4888:	ldr	r3, [sp, #92]	; 0x5c
    488c:	mov	r0, r4
    4890:	bl	90 <reportDefault>
    4894:	ldr	ip, [sp, #28]
    4898:	add	r2, sp, #92	; 0x5c
    489c:	mov	r0, r4
    48a0:	ldr	r3, [sp, #32]
    48a4:	ldr	r1, [sp, #96]	; 0x60
    48a8:	stm	sp, {r1, ip}
    48ac:	mov	r1, r6
    48b0:	bl	480 <doIgnoreSection>
    48b4:	subs	r9, r0, #0
    48b8:	bne	42c8 <doProlog+0x2c0>
    48bc:	ldr	r3, [sp, #92]	; 0x5c
    48c0:	cmp	r3, #0
    48c4:	bne	42a4 <doProlog+0x29c>
    48c8:	movw	r3, #0
    48cc:	movt	r3, #0
    48d0:	str	r3, [r4, #288]	; 0x120
    48d4:	b	42c8 <doProlog+0x2c0>
    48d8:	mov	r2, r5
    48dc:	mov	r1, #1
    48e0:	mov	r0, r4
    48e4:	ldr	r3, [sp, #92]	; 0x5c
    48e8:	bl	1544 <processXmlDecl>
    48ec:	subs	r9, r0, #0
    48f0:	bne	42c8 <doProlog+0x2c0>
    48f4:	ldr	r6, [r4, #152]	; 0x98
    48f8:	b	42a4 <doProlog+0x29c>
    48fc:	ldr	r3, [r4, #92]	; 0x5c
    4900:	cmp	r3, #0
    4904:	beq	5584 <doProlog+0x157c>
    4908:	mov	r2, r5
    490c:	mov	r1, r6
    4910:	ldr	r3, [sp, #92]	; 0x5c
    4914:	add	r0, r4, #432	; 0x1b0
    4918:	bl	14d8 <poolStoreString>
    491c:	cmp	r0, #0
    4920:	str	r0, [r4, #328]	; 0x148
    4924:	beq	4970 <doProlog+0x968>
    4928:	ldr	r2, [r4, #444]	; 0x1bc
    492c:	mov	r3, #0
    4930:	str	r3, [r4, #332]	; 0x14c
    4934:	str	r3, [r4, #336]	; 0x150
    4938:	str	r2, [r4, #448]	; 0x1c0
    493c:	b	42a4 <doProlog+0x29c>
    4940:	ldr	r3, [r4, #92]	; 0x5c
    4944:	cmp	r3, #0
    4948:	bne	42a4 <doProlog+0x29c>
    494c:	b	4284 <doProlog+0x27c>
    4950:	mov	r2, r5
    4954:	mov	r1, r6
    4958:	ldr	r3, [sp, #92]	; 0x5c
    495c:	mov	r0, r4
    4960:	bl	3120 <getElementType>
    4964:	cmp	r0, #0
    4968:	str	r0, [r4, #352]	; 0x160
    496c:	bne	43d4 <doProlog+0x3cc>
    4970:	mov	r9, #1
    4974:	b	42c8 <doProlog+0x2c0>
    4978:	ldrb	r3, [sl, #128]	; 0x80
    497c:	cmp	r3, #0
    4980:	beq	4284 <doProlog+0x27c>
    4984:	ldr	r3, [r4, #140]	; 0x8c
    4988:	cmp	r3, #0
    498c:	beq	4284 <doProlog+0x27c>
    4990:	ldr	r3, [r4, #340]	; 0x154
    4994:	cmp	r3, #0
    4998:	ldrne	r8, [pc, #4068]	; 5984 <doProlog+0x197c>
    499c:	beq	5804 <doProlog+0x17fc>
    49a0:	add	r9, r4, #432	; 0x1b0
    49a4:	b	49c4 <doProlog+0x9bc>
    49a8:	add	r2, r3, #1
    49ac:	str	r2, [r4, #444]	; 0x1bc
    49b0:	ldrb	r2, [r8]
    49b4:	strb	r2, [r3]
    49b8:	ldrb	r3, [r8, #1]!
    49bc:	cmp	r3, #0
    49c0:	beq	558c <doProlog+0x1584>
    49c4:	ldr	r2, [r4, #440]	; 0x1b8
    49c8:	ldr	r3, [r4, #444]	; 0x1bc
    49cc:	cmp	r3, r2
    49d0:	bne	49a8 <doProlog+0x9a0>
    49d4:	mov	r0, r9
    49d8:	bl	1238 <poolGrow>
    49dc:	cmp	r0, #0
    49e0:	beq	4970 <doProlog+0x968>
    49e4:	ldr	r3, [r4, #444]	; 0x1bc
    49e8:	b	49a8 <doProlog+0x9a0>
    49ec:	ldr	r3, [pc, #3988]	; 5988 <doProlog+0x1980>
    49f0:	str	r3, [r4, #340]	; 0x154
    49f4:	b	43d4 <doProlog+0x3cc>
    49f8:	mov	r2, r5
    49fc:	mov	r1, #0
    4a00:	b	48e0 <doProlog+0x8d8>
    4a04:	ldrb	r3, [sl, #128]	; 0x80
    4a08:	cmp	r3, #0
    4a0c:	beq	4284 <doProlog+0x27c>
    4a10:	ldr	r2, [r6, #68]	; 0x44
    4a14:	mov	r1, r6
    4a18:	mov	r0, r4
    4a1c:	ldr	r3, [sp, #92]	; 0x5c
    4a20:	sub	r3, r3, r2
    4a24:	add	r2, r5, r2
    4a28:	bl	20c8 <storeEntityValue>
    4a2c:	ldr	r1, [r4, #324]	; 0x144
    4a30:	mov	r9, r0
    4a34:	cmp	r1, #0
    4a38:	beq	581c <doProlog+0x1814>
    4a3c:	ldr	r3, [sl, #116]	; 0x74
    4a40:	ldr	r2, [sl, #120]	; 0x78
    4a44:	ldr	r8, [r4, #144]	; 0x90
    4a48:	sub	ip, r3, r2
    4a4c:	cmp	r8, #0
    4a50:	stmib	r1, {r2, ip}
    4a54:	str	r3, [sl, #120]	; 0x78
    4a58:	beq	5910 <doProlog+0x1908>
    4a5c:	ldr	r3, [sp, #24]
    4a60:	mov	r0, #0
    4a64:	str	r5, [r3]
    4a68:	ldrb	r2, [r1, #33]	; 0x21
    4a6c:	ldm	r1, {r1, r3}
    4a70:	str	ip, [sp]
    4a74:	ldr	ip, [r4, #368]	; 0x170
    4a78:	str	r0, [sp, #8]
    4a7c:	str	r0, [sp, #12]
    4a80:	str	r0, [sp, #16]
    4a84:	ldr	r0, [r4, #4]
    4a88:	str	ip, [sp, #4]
    4a8c:	blx	r8
    4a90:	cmp	r9, #0
    4a94:	beq	42a4 <doProlog+0x29c>
    4a98:	b	42c8 <doProlog+0x2c0>
    4a9c:	ldrb	r3, [r4, #505]	; 0x1f9
    4aa0:	cmp	r3, #0
    4aa4:	beq	4b50 <doProlog+0xb48>
    4aa8:	mov	r3, #1
    4aac:	ldrb	r6, [sl, #129]	; 0x81
    4ab0:	strb	r3, [sl, #129]	; 0x81
    4ab4:	ldr	r3, [r4, #508]	; 0x1fc
    4ab8:	cmp	r3, #0
    4abc:	beq	4b50 <doProlog+0xb48>
    4ac0:	ldr	r3, [r4, #120]	; 0x78
    4ac4:	cmp	r3, #0
    4ac8:	beq	4b50 <doProlog+0xb48>
    4acc:	mov	r3, #36	; 0x24
    4ad0:	ldr	r2, [pc, #3764]	; 598c <doProlog+0x1984>
    4ad4:	add	r1, sl, #132	; 0x84
    4ad8:	mov	r0, r4
    4adc:	bl	a50 <lookup>
    4ae0:	cmp	r0, #0
    4ae4:	beq	4970 <doProlog+0x968>
    4ae8:	ldr	r2, [r4, #368]	; 0x170
    4aec:	mov	r3, #0
    4af0:	mov	r1, r3
    4af4:	str	r2, [r0, #20]
    4af8:	strb	r3, [sl, #131]	; 0x83
    4afc:	ldr	r3, [r0, #16]
    4b00:	ldr	ip, [r0, #24]
    4b04:	ldr	r7, [r4, #120]	; 0x78
    4b08:	ldr	r0, [r4, #124]	; 0x7c
    4b0c:	str	ip, [sp]
    4b10:	blx	r7
    4b14:	cmp	r0, #0
    4b18:	beq	5a54 <doProlog+0x1a4c>
    4b1c:	ldrb	r3, [sl, #131]	; 0x83
    4b20:	cmp	r3, #0
    4b24:	beq	5a1c <doProlog+0x1a14>
    4b28:	ldrb	r3, [sl, #130]	; 0x82
    4b2c:	cmp	r3, #0
    4b30:	bne	4b50 <doProlog+0xb48>
    4b34:	ldr	r3, [r4, #116]	; 0x74
    4b38:	cmp	r3, #0
    4b3c:	beq	4b50 <doProlog+0xb48>
    4b40:	ldr	r0, [r4, #4]
    4b44:	blx	r3
    4b48:	cmp	r0, #0
    4b4c:	beq	486c <doProlog+0x864>
    4b50:	movw	r3, #0
    4b54:	movt	r3, #0
    4b58:	ldr	r2, [sp, #32]
    4b5c:	mov	r1, r5
    4b60:	mov	r0, r4
    4b64:	str	r3, [r4, #288]	; 0x120
    4b68:	ldr	r3, [sp, #96]	; 0x60
    4b6c:	bl	6d0c <contentProcessor>
    4b70:	mov	r9, r0
    4b74:	b	42c8 <doProlog+0x2c0>
    4b78:	cmp	r9, #12
    4b7c:	moveq	r9, #17
    4b80:	beq	42c8 <doProlog+0x2c0>
    4b84:	cmp	r9, #28
    4b88:	moveq	r9, #10
    4b8c:	movne	r9, #2
    4b90:	b	42c8 <doProlog+0x2c0>
    4b94:	ldrb	r3, [sl, #128]	; 0x80
    4b98:	cmp	r3, #0
    4b9c:	beq	4284 <doProlog+0x27c>
    4ba0:	add	r1, r4, #16
    4ba4:	add	r2, r4, #12
    4ba8:	ldrb	r3, [r4, #361]	; 0x169
    4bac:	mov	r0, #0
    4bb0:	str	r2, [sp, #4]
    4bb4:	ldrb	r2, [r4, #360]	; 0x168
    4bb8:	str	r0, [sp]
    4bbc:	str	r1, [sp, #8]
    4bc0:	ldr	r0, [r4, #352]	; 0x160
    4bc4:	ldr	r1, [r4, #356]	; 0x164
    4bc8:	bl	2d44 <defineAttribute.isra.2>
    4bcc:	cmp	r0, #0
    4bd0:	beq	4970 <doProlog+0x968>
    4bd4:	ldr	r9, [r4, #140]	; 0x8c
    4bd8:	cmp	r9, #0
    4bdc:	beq	4284 <doProlog+0x27c>
    4be0:	ldr	r3, [r4, #340]	; 0x154
    4be4:	cmp	r3, #0
    4be8:	beq	4284 <doProlog+0x27c>
    4bec:	ldrb	r2, [r3]
    4bf0:	cmp	r2, #40	; 0x28
    4bf4:	beq	59bc <doProlog+0x19b4>
    4bf8:	cmp	r2, #78	; 0x4e
    4bfc:	beq	59b0 <doProlog+0x19a8>
    4c00:	ldr	r2, [sp, #24]
    4c04:	sub	r8, r8, #36	; 0x24
    4c08:	mov	r3, #0
    4c0c:	clz	r8, r8
    4c10:	ldr	r1, [r4, #352]	; 0x160
    4c14:	lsr	r8, r8, #5
    4c18:	str	r5, [r2]
    4c1c:	ldr	r0, [r4, #4]
    4c20:	ldr	r2, [r4, #356]	; 0x164
    4c24:	ldr	r1, [r1]
    4c28:	ldr	r2, [r2]
    4c2c:	stm	sp, {r3, r8}
    4c30:	ldr	r3, [r4, #340]	; 0x154
    4c34:	blx	r9
    4c38:	ldr	r3, [r4, #432]	; 0x1b0
    4c3c:	ldr	r1, [r4, #436]	; 0x1b4
    4c40:	cmp	r1, #0
    4c44:	beq	4c6c <doProlog+0xc64>
    4c48:	cmp	r3, #0
    4c4c:	bne	4c58 <doProlog+0xc50>
    4c50:	b	4c70 <doProlog+0xc68>
    4c54:	mov	r3, r2
    4c58:	ldr	r2, [r3]
    4c5c:	str	r1, [r3]
    4c60:	mov	r1, r3
    4c64:	cmp	r2, #0
    4c68:	bne	4c54 <doProlog+0xc4c>
    4c6c:	str	r3, [r4, #436]	; 0x1b4
    4c70:	mov	r3, #0
    4c74:	str	r3, [r4, #432]	; 0x1b0
    4c78:	str	r3, [r4, #440]	; 0x1b8
    4c7c:	str	r3, [r4, #444]	; 0x1bc
    4c80:	str	r3, [r4, #448]	; 0x1c0
    4c84:	b	42a4 <doProlog+0x29c>
    4c88:	cmp	r9, #14
    4c8c:	bne	4284 <doProlog+0x27c>
    4c90:	b	42a4 <doProlog+0x29c>
    4c94:	ldr	r3, [pc, #3316]	; 5990 <doProlog+0x1988>
    4c98:	str	r3, [r4, #340]	; 0x154
    4c9c:	b	43d4 <doProlog+0x3cc>
    4ca0:	mov	r1, #3
    4ca4:	b	442c <doProlog+0x424>
    4ca8:	mov	r1, #2
    4cac:	b	442c <doProlog+0x424>
    4cb0:	mov	r1, #0
    4cb4:	b	442c <doProlog+0x424>
    4cb8:	ldr	r3, [r4, #268]	; 0x10c
    4cbc:	ldr	r2, [r4, #484]	; 0x1e4
    4cc0:	cmp	r3, r2
    4cc4:	bcc	4d24 <doProlog+0xd1c>
    4cc8:	cmp	r2, #0
    4ccc:	beq	56cc <doProlog+0x16c4>
    4cd0:	lsl	r2, r2, #1
    4cd4:	ldr	r3, [r4, #16]
    4cd8:	mov	r1, r2
    4cdc:	ldr	r0, [r4, #480]	; 0x1e0
    4ce0:	str	r2, [r4, #484]	; 0x1e4
    4ce4:	blx	r3
    4ce8:	cmp	r0, #0
    4cec:	beq	4970 <doProlog+0x968>
    4cf0:	ldr	r3, [sl, #184]	; 0xb8
    4cf4:	str	r0, [r4, #480]	; 0x1e0
    4cf8:	cmp	r3, #0
    4cfc:	beq	56ec <doProlog+0x16e4>
    4d00:	ldr	r1, [r4, #484]	; 0x1e4
    4d04:	mov	r0, r3
    4d08:	ldr	r3, [r4, #16]
    4d0c:	lsl	r1, r1, #2
    4d10:	blx	r3
    4d14:	cmp	r0, #0
    4d18:	beq	4970 <doProlog+0x968>
    4d1c:	ldr	r3, [r4, #268]	; 0x10c
    4d20:	str	r0, [sl, #184]	; 0xb8
    4d24:	ldr	r0, [r4, #480]	; 0x1e0
    4d28:	mov	r2, #0
    4d2c:	strb	r2, [r0, r3]
    4d30:	ldrb	r3, [sl, #160]	; 0xa0
    4d34:	cmp	r3, r2
    4d38:	beq	4284 <doProlog+0x27c>
    4d3c:	mov	r0, r4
    4d40:	bl	7d8 <nextScaffoldPart>
    4d44:	cmp	r0, #0
    4d48:	blt	4970 <doProlog+0x968>
    4d4c:	ldr	lr, [sl, #180]	; 0xb4
    4d50:	rsb	r1, r0, r0, lsl #3
    4d54:	mov	ip, #6
    4d58:	ldr	r3, [sl, #184]	; 0xb8
    4d5c:	ldr	r2, [r4, #136]	; 0x88
    4d60:	str	r0, [r3, lr, lsl #2]
    4d64:	ldr	r3, [sl, #180]	; 0xb4
    4d68:	cmp	r2, #0
    4d6c:	ldr	r2, [sl, #164]	; 0xa4
    4d70:	add	r3, r3, #1
    4d74:	str	r3, [sl, #180]	; 0xb4
    4d78:	str	ip, [r2, r1, lsl #2]
    4d7c:	bne	42a4 <doProlog+0x29c>
    4d80:	b	4284 <doProlog+0x27c>
    4d84:	ldr	r2, [r4, #268]	; 0x10c
    4d88:	ldr	r1, [r4, #480]	; 0x1e0
    4d8c:	ldrb	r3, [r1, r2]
    4d90:	cmp	r3, #44	; 0x2c
    4d94:	beq	5a5c <doProlog+0x1a54>
    4d98:	ldrb	r0, [sl, #160]	; 0xa0
    4d9c:	clz	r3, r3
    4da0:	lsr	r3, r3, #5
    4da4:	cmp	r0, #0
    4da8:	moveq	r3, #0
    4dac:	cmp	r3, #0
    4db0:	bne	5704 <doProlog+0x16fc>
    4db4:	mov	r3, #124	; 0x7c
    4db8:	strb	r3, [r1, r2]
    4dbc:	b	4284 <doProlog+0x27c>
    4dc0:	ldrb	r3, [sl, #128]	; 0x80
    4dc4:	cmp	r3, #0
    4dc8:	beq	4284 <doProlog+0x27c>
    4dcc:	ldr	r3, [r6, #68]	; 0x44
    4dd0:	add	r2, sl, #80	; 0x50
    4dd4:	mov	r1, r6
    4dd8:	mov	r0, r4
    4ddc:	ldr	ip, [sp, #92]	; 0x5c
    4de0:	str	r2, [sp, #4]
    4de4:	ldrb	r2, [r4, #360]	; 0x168
    4de8:	sub	ip, ip, r3
    4dec:	add	r3, r5, r3
    4df0:	str	ip, [sp]
    4df4:	bl	34b0 <storeAttributeValue>
    4df8:	subs	r9, r0, #0
    4dfc:	bne	42c8 <doProlog+0x2c0>
    4e00:	mov	r3, r9
    4e04:	ldr	r2, [sl, #92]	; 0x5c
    4e08:	add	r1, r4, #16
    4e0c:	add	ip, r4, #12
    4e10:	ldr	r9, [sl, #96]	; 0x60
    4e14:	ldr	r0, [r4, #352]	; 0x160
    4e18:	str	r2, [sl, #96]	; 0x60
    4e1c:	ldrb	r2, [r4, #360]	; 0x168
    4e20:	stm	sp, {r9, ip}
    4e24:	str	r1, [sp, #8]
    4e28:	ldr	r1, [r4, #356]	; 0x164
    4e2c:	bl	2d44 <defineAttribute.isra.2>
    4e30:	cmp	r0, #0
    4e34:	beq	4970 <doProlog+0x968>
    4e38:	ldr	r3, [r4, #140]	; 0x8c
    4e3c:	subs	ip, r3, #0
    4e40:	beq	4284 <doProlog+0x27c>
    4e44:	ldr	r3, [r4, #340]	; 0x154
    4e48:	cmp	r3, #0
    4e4c:	beq	4284 <doProlog+0x27c>
    4e50:	ldrb	r2, [r3]
    4e54:	cmp	r2, #40	; 0x28
    4e58:	beq	5928 <doProlog+0x1920>
    4e5c:	cmp	r2, #78	; 0x4e
    4e60:	beq	591c <doProlog+0x1914>
    4e64:	ldr	r3, [sp, #24]
    4e68:	sub	r8, r8, #38	; 0x26
    4e6c:	clz	r8, r8
    4e70:	ldr	r2, [r4, #352]	; 0x160
    4e74:	lsr	r8, r8, #5
    4e78:	str	r5, [r3]
    4e7c:	ldr	r0, [r4, #4]
    4e80:	ldr	r3, [r4, #356]	; 0x164
    4e84:	ldr	r1, [r2]
    4e88:	ldr	r2, [r3]
    4e8c:	str	r9, [sp]
    4e90:	str	r8, [sp, #4]
    4e94:	ldr	r3, [r4, #340]	; 0x154
    4e98:	blx	ip
    4e9c:	ldr	r3, [r4, #432]	; 0x1b0
    4ea0:	ldr	r1, [r4, #436]	; 0x1b4
    4ea4:	cmp	r1, #0
    4ea8:	beq	4c6c <doProlog+0xc64>
    4eac:	cmp	r3, #0
    4eb0:	bne	4ebc <doProlog+0xeb4>
    4eb4:	b	4c70 <doProlog+0xc68>
    4eb8:	mov	r3, r2
    4ebc:	ldr	r2, [r3]
    4ec0:	str	r1, [r3]
    4ec4:	mov	r1, r3
    4ec8:	cmp	r2, #0
    4ecc:	bne	4eb8 <doProlog+0xeb0>
    4ed0:	b	4c6c <doProlog+0xc64>
    4ed4:	ldrb	r3, [sl, #160]	; 0xa0
    4ed8:	cmp	r3, #0
    4edc:	beq	4284 <doProlog+0x27c>
    4ee0:	ldr	r3, [sl, #180]	; 0xb4
    4ee4:	mov	r1, #3
    4ee8:	ldr	r2, [sl, #184]	; 0xb8
    4eec:	ldr	r0, [r4, #136]	; 0x88
    4ef0:	sub	r3, r3, #-1073741823	; 0xc0000001
    4ef4:	ldr	r3, [r2, r3, lsl #2]
    4ef8:	ldr	r2, [sl, #164]	; 0xa4
    4efc:	cmp	r0, #0
    4f00:	rsb	r3, r3, r3, lsl r1
    4f04:	str	r1, [r2, r3, lsl #2]
    4f08:	bne	42a4 <doProlog+0x29c>
    4f0c:	b	4284 <doProlog+0x27c>
    4f10:	ldrb	r3, [sl, #160]	; 0xa0
    4f14:	cmp	r3, #0
    4f18:	beq	4284 <doProlog+0x27c>
    4f1c:	ldr	r3, [r4, #136]	; 0x88
    4f20:	cmp	r3, #0
    4f24:	beq	5770 <doProlog+0x1768>
    4f28:	mov	r0, #20
    4f2c:	ldr	r3, [r4, #12]
    4f30:	blx	r3
    4f34:	cmp	r0, #0
    4f38:	beq	4970 <doProlog+0x968>
    4f3c:	cmp	r8, #41	; 0x29
    4f40:	mov	r8, #0
    4f44:	ldr	r3, [r4, #352]	; 0x160
    4f48:	moveq	r1, #2
    4f4c:	movne	r1, #1
    4f50:	mov	r2, r0
    4f54:	stm	r0, {r1, r8}
    4f58:	ldr	r1, [sp, #24]
    4f5c:	str	r8, [r0, #8]
    4f60:	str	r8, [r0, #12]
    4f64:	str	r8, [r0, #16]
    4f68:	str	r5, [r1]
    4f6c:	ldr	r1, [r3]
    4f70:	ldr	r0, [r4, #4]
    4f74:	ldr	r3, [r4, #136]	; 0x88
    4f78:	blx	r3
    4f7c:	strb	r8, [sl, #160]	; 0xa0
    4f80:	b	42a4 <doProlog+0x29c>
    4f84:	ldr	r3, [pc, #2568]	; 5994 <doProlog+0x198c>
    4f88:	mov	r2, #1
    4f8c:	str	r3, [r4, #340]	; 0x154
    4f90:	strb	r2, [r4, #360]	; 0x168
    4f94:	b	43d4 <doProlog+0x3cc>
    4f98:	ldr	r3, [pc, #2552]	; 5998 <doProlog+0x1990>
    4f9c:	str	r3, [r4, #340]	; 0x154
    4fa0:	b	43d4 <doProlog+0x3cc>
    4fa4:	ldr	r3, [pc, #2544]	; 599c <doProlog+0x1994>
    4fa8:	mov	r2, #1
    4fac:	str	r3, [r4, #340]	; 0x154
    4fb0:	strb	r2, [r4, #361]	; 0x169
    4fb4:	b	43d4 <doProlog+0x3cc>
    4fb8:	mov	r3, r7
    4fbc:	mov	r1, r5
    4fc0:	ldr	r8, [r6, #56]	; 0x38
    4fc4:	mov	r0, r6
    4fc8:	ldr	r2, [sp, #92]	; 0x5c
    4fcc:	blx	r8
    4fd0:	cmp	r0, #0
    4fd4:	beq	5a14 <doProlog+0x1a0c>
    4fd8:	ldr	r3, [r4, #344]	; 0x158
    4fdc:	cmp	r3, #0
    4fe0:	beq	4284 <doProlog+0x27c>
    4fe4:	ldr	r3, [r6, #68]	; 0x44
    4fe8:	mov	r1, r6
    4fec:	add	r0, r4, #432	; 0x1b0
    4ff0:	ldr	ip, [sp, #92]	; 0x5c
    4ff4:	add	r2, r5, r3
    4ff8:	sub	r3, ip, r3
    4ffc:	bl	14d8 <poolStoreString>
    5000:	subs	r5, r0, #0
    5004:	beq	4970 <doProlog+0x968>
    5008:	bl	65c <normalizePublicId>
    500c:	ldr	r3, [r4, #444]	; 0x1bc
    5010:	str	r5, [r4, #348]	; 0x15c
    5014:	str	r3, [r4, #448]	; 0x1c0
    5018:	b	42a4 <doProlog+0x29c>
    501c:	ldr	r3, [r4, #348]	; 0x15c
    5020:	cmp	r3, #0
    5024:	beq	556c <doProlog+0x1564>
    5028:	ldr	r9, [r4, #104]	; 0x68
    502c:	cmp	r9, #0
    5030:	beq	556c <doProlog+0x1564>
    5034:	ldr	r3, [sp, #24]
    5038:	str	r5, [r3]
    503c:	mov	r3, #0
    5040:	ldr	r0, [r4, #4]
    5044:	mov	r8, r3
    5048:	ldr	r2, [r4, #348]	; 0x15c
    504c:	ldr	r1, [r4, #344]	; 0x158
    5050:	str	r2, [sp]
    5054:	ldr	r2, [r4, #368]	; 0x170
    5058:	blx	r9
    505c:	ldr	r3, [r4, #432]	; 0x1b0
    5060:	ldr	r1, [r4, #436]	; 0x1b4
    5064:	cmp	r1, #0
    5068:	beq	46f4 <doProlog+0x6ec>
    506c:	cmp	r3, #0
    5070:	bne	507c <doProlog+0x1074>
    5074:	b	46f8 <doProlog+0x6f0>
    5078:	mov	r3, r2
    507c:	ldr	r2, [r3]
    5080:	str	r1, [r3]
    5084:	mov	r1, r3
    5088:	cmp	r2, #0
    508c:	bne	5078 <doProlog+0x1070>
    5090:	b	46f4 <doProlog+0x6ec>
    5094:	ldrb	r3, [sl, #128]	; 0x80
    5098:	cmp	r3, #0
    509c:	beq	4284 <doProlog+0x27c>
    50a0:	ldr	r3, [r4, #144]	; 0x90
    50a4:	cmp	r3, #0
    50a8:	bne	42a4 <doProlog+0x29c>
    50ac:	b	4284 <doProlog+0x27c>
    50b0:	ldrb	r3, [sl, #128]	; 0x80
    50b4:	cmp	r3, #0
    50b8:	bne	55c0 <doProlog+0x15b8>
    50bc:	ldr	r2, [sl, #96]	; 0x60
    50c0:	str	r2, [sl, #92]	; 0x5c
    50c4:	str	r3, [r4, #324]	; 0x144
    50c8:	b	4284 <doProlog+0x27c>
    50cc:	ldr	r1, [r4, #328]	; 0x148
    50d0:	ldr	r2, [r4, #332]	; 0x14c
    50d4:	cmp	r1, #0
    50d8:	moveq	r8, #1
    50dc:	beq	514c <doProlog+0x1144>
    50e0:	mov	r3, #0
    50e4:	ldr	r0, [r4, #4]
    50e8:	str	r3, [sp]
    50ec:	ldr	r8, [r4, #92]	; 0x5c
    50f0:	ldr	r3, [r4, #336]	; 0x150
    50f4:	blx	r8
    50f8:	ldr	r3, [r4, #432]	; 0x1b0
    50fc:	ldr	r1, [r4, #436]	; 0x1b4
    5100:	cmp	r1, #0
    5104:	beq	512c <doProlog+0x1124>
    5108:	cmp	r3, #0
    510c:	bne	5118 <doProlog+0x1110>
    5110:	b	5130 <doProlog+0x1128>
    5114:	mov	r3, r2
    5118:	ldr	r2, [r3]
    511c:	str	r1, [r3]
    5120:	mov	r1, r3
    5124:	cmp	r2, #0
    5128:	bne	5114 <doProlog+0x110c>
    512c:	str	r3, [r4, #436]	; 0x1b4
    5130:	ldr	r2, [r4, #332]	; 0x14c
    5134:	mov	r3, #0
    5138:	mov	r8, r3
    513c:	str	r3, [r4, #432]	; 0x1b0
    5140:	str	r3, [r4, #440]	; 0x1b8
    5144:	str	r3, [r4, #444]	; 0x1bc
    5148:	str	r3, [r4, #448]	; 0x1c0
    514c:	cmp	r2, #0
    5150:	beq	56f4 <doProlog+0x16ec>
    5154:	mov	r3, #1
    5158:	ldrb	r9, [sl, #129]	; 0x81
    515c:	strb	r3, [sl, #129]	; 0x81
    5160:	ldr	r3, [r4, #508]	; 0x1fc
    5164:	cmp	r3, #0
    5168:	beq	5210 <doProlog+0x1208>
    516c:	ldr	r3, [r4, #120]	; 0x78
    5170:	cmp	r3, #0
    5174:	beq	5210 <doProlog+0x1208>
    5178:	mov	r3, #36	; 0x24
    517c:	ldr	r2, [pc, #2056]	; 598c <doProlog+0x1984>
    5180:	add	r1, sl, #132	; 0x84
    5184:	mov	r0, r4
    5188:	bl	a50 <lookup>
    518c:	cmp	r0, #0
    5190:	beq	4970 <doProlog+0x968>
    5194:	ldrb	r3, [r4, #505]	; 0x1f9
    5198:	cmp	r3, #0
    519c:	mov	r3, #0
    51a0:	ldrne	r2, [r4, #368]	; 0x170
    51a4:	mov	r1, r3
    51a8:	ldreq	r2, [r0, #20]
    51ac:	strne	r2, [r0, #20]
    51b0:	strb	r3, [sl, #131]	; 0x83
    51b4:	ldr	r3, [r0, #16]
    51b8:	ldr	ip, [r0, #24]
    51bc:	ldr	r0, [r4, #120]	; 0x78
    51c0:	mov	lr, r0
    51c4:	ldr	r0, [r4, #124]	; 0x7c
    51c8:	str	ip, [sp]
    51cc:	mov	ip, lr
    51d0:	blx	ip
    51d4:	cmp	r0, #0
    51d8:	beq	5a54 <doProlog+0x1a4c>
    51dc:	ldrb	r3, [sl, #131]	; 0x83
    51e0:	cmp	r3, #0
    51e4:	beq	5778 <doProlog+0x1770>
    51e8:	ldrb	r3, [sl, #130]	; 0x82
    51ec:	cmp	r3, #0
    51f0:	bne	5210 <doProlog+0x1208>
    51f4:	ldr	r3, [r4, #116]	; 0x74
    51f8:	cmp	r3, #0
    51fc:	beq	5210 <doProlog+0x1208>
    5200:	ldr	r0, [r4, #4]
    5204:	blx	r3
    5208:	cmp	r0, #0
    520c:	beq	486c <doProlog+0x864>
    5210:	mov	r3, #0
    5214:	strb	r3, [r4, #505]	; 0x1f9
    5218:	ldr	r3, [r4, #96]	; 0x60
    521c:	cmp	r3, #0
    5220:	beq	4564 <doProlog+0x55c>
    5224:	ldr	r0, [r4, #4]
    5228:	blx	r3
    522c:	b	42a4 <doProlog+0x29c>
    5230:	ldr	r8, [r4, #92]	; 0x5c
    5234:	cmp	r8, #0
    5238:	beq	4284 <doProlog+0x27c>
    523c:	mov	r3, #1
    5240:	add	r1, r4, #328	; 0x148
    5244:	ldr	r0, [r4, #4]
    5248:	str	r3, [sp]
    524c:	ldm	r1, {r1, r2, r3}
    5250:	blx	r8
    5254:	ldr	r1, [r4, #436]	; 0x1b4
    5258:	mov	r3, #0
    525c:	str	r3, [r4, #328]	; 0x148
    5260:	cmp	r1, r3
    5264:	ldr	r3, [r4, #432]	; 0x1b0
    5268:	beq	4c6c <doProlog+0xc64>
    526c:	cmp	r3, #0
    5270:	bne	527c <doProlog+0x1274>
    5274:	b	4c70 <doProlog+0xc68>
    5278:	mov	r3, r2
    527c:	ldr	r2, [r3]
    5280:	str	r1, [r3]
    5284:	mov	r1, r3
    5288:	cmp	r2, #0
    528c:	bne	5278 <doProlog+0x1270>
    5290:	b	4c6c <doProlog+0xc64>
    5294:	mov	r8, #0
    5298:	mov	r3, #1
    529c:	strb	r8, [r4, #505]	; 0x1f9
    52a0:	strb	r3, [sl, #129]	; 0x81
    52a4:	ldr	r2, [r4, #92]	; 0x5c
    52a8:	cmp	r2, r8
    52ac:	beq	5574 <doProlog+0x156c>
    52b0:	ldr	r2, [r6, #68]	; 0x44
    52b4:	mov	r1, r6
    52b8:	add	r0, r4, #432	; 0x1b0
    52bc:	ldr	r3, [sp, #92]	; 0x5c
    52c0:	sub	r3, r3, r2
    52c4:	add	r2, r5, r2
    52c8:	bl	14d8 <poolStoreString>
    52cc:	cmp	r0, r8
    52d0:	str	r0, [r4, #332]	; 0x14c
    52d4:	beq	4970 <doProlog+0x968>
    52d8:	ldr	r3, [r4, #444]	; 0x1bc
    52dc:	str	r3, [r4, #448]	; 0x1c0
    52e0:	ldrb	r3, [sl, #130]	; 0x82
    52e4:	cmp	r3, #0
    52e8:	bne	5314 <doProlog+0x130c>
    52ec:	ldr	r3, [r4, #508]	; 0x1fc
    52f0:	cmp	r3, #0
    52f4:	bne	5314 <doProlog+0x130c>
    52f8:	ldr	r3, [r4, #116]	; 0x74
    52fc:	cmp	r3, #0
    5300:	beq	5314 <doProlog+0x130c>
    5304:	ldr	r0, [r4, #4]
    5308:	blx	r3
    530c:	cmp	r0, #0
    5310:	beq	486c <doProlog+0x864>
    5314:	ldr	r9, [r4, #324]	; 0x144
    5318:	cmp	r9, #0
    531c:	beq	5748 <doProlog+0x1740>
    5320:	ldrb	r3, [sl, #128]	; 0x80
    5324:	cmp	r3, #0
    5328:	beq	4564 <doProlog+0x55c>
    532c:	ldr	r9, [r4, #324]	; 0x144
    5330:	b	4518 <doProlog+0x510>
    5334:	ldr	r3, [pc, #1636]	; 59a0 <doProlog+0x1998>
    5338:	str	r3, [r4, #340]	; 0x154
    533c:	b	43d4 <doProlog+0x3cc>
    5340:	ldr	r3, [pc, #1628]	; 59a4 <doProlog+0x199c>
    5344:	str	r3, [r4, #340]	; 0x154
    5348:	b	43d4 <doProlog+0x3cc>
    534c:	ldr	r3, [pc, #1620]	; 59a8 <doProlog+0x19a0>
    5350:	str	r3, [r4, #340]	; 0x154
    5354:	b	43d4 <doProlog+0x3cc>
    5358:	mov	r2, r5
    535c:	mov	r1, r6
    5360:	ldr	r3, [sp, #92]	; 0x5c
    5364:	mov	r0, r4
    5368:	bl	31b8 <reportComment>
    536c:	cmp	r0, #0
    5370:	bne	42a4 <doProlog+0x29c>
    5374:	b	4970 <doProlog+0x968>
    5378:	mov	r2, r5
    537c:	mov	r1, r6
    5380:	ldr	r3, [sp, #92]	; 0x5c
    5384:	mov	r0, r4
    5388:	bl	189c <reportProcessingInstruction>
    538c:	cmp	r0, #0
    5390:	bne	42a4 <doProlog+0x29c>
    5394:	b	4970 <doProlog+0x968>
    5398:	ldrb	r3, [sl, #160]	; 0xa0
    539c:	cmp	r3, #0
    53a0:	beq	4284 <doProlog+0x27c>
    53a4:	mov	r9, #3
    53a8:	ldr	r3, [r6, #68]	; 0x44
    53ac:	ldr	r8, [sp, #92]	; 0x5c
    53b0:	sub	r8, r8, r3
    53b4:	mov	r0, r4
    53b8:	bl	7d8 <nextScaffoldPart>
    53bc:	subs	ip, r0, #0
    53c0:	blt	4970 <doProlog+0x968>
    53c4:	ldr	lr, [sl, #164]	; 0xa4
    53c8:	rsb	ip, ip, ip, lsl #3
    53cc:	mov	r3, r8
    53d0:	mov	fp, #4
    53d4:	mov	r2, r5
    53d8:	lsl	r8, ip, #2
    53dc:	mov	r1, r6
    53e0:	mov	r0, r4
    53e4:	str	fp, [lr, ip, lsl #2]
    53e8:	add	lr, lr, r8
    53ec:	str	r9, [lr, #4]
    53f0:	bl	3120 <getElementType>
    53f4:	cmp	r0, #0
    53f8:	beq	4970 <doProlog+0x968>
    53fc:	ldr	r1, [r0]
    5400:	ldr	r2, [sl, #164]	; 0xa4
    5404:	sub	r3, r1, #1
    5408:	rsb	r0, r1, #2
    540c:	add	r8, r2, r8
    5410:	str	r1, [r8, #8]
    5414:	add	r1, r0, r3
    5418:	ldrb	r2, [r3, #1]!
    541c:	cmp	r2, #0
    5420:	bne	5414 <doProlog+0x140c>
    5424:	ldr	r3, [sl, #168]	; 0xa8
    5428:	ldr	r2, [r4, #136]	; 0x88
    542c:	add	r1, r3, r1
    5430:	cmp	r2, #0
    5434:	str	r1, [sl, #168]	; 0xa8
    5438:	bne	42a4 <doProlog+0x29c>
    543c:	b	4284 <doProlog+0x27c>
    5440:	ldrb	r3, [sl, #160]	; 0xa0
    5444:	cmp	r3, #0
    5448:	beq	4284 <doProlog+0x27c>
    544c:	mov	r9, #2
    5450:	b	53a8 <doProlog+0x13a0>
    5454:	ldrb	r3, [sl, #160]	; 0xa0
    5458:	cmp	r3, #0
    545c:	beq	4284 <doProlog+0x27c>
    5460:	mov	r9, #0
    5464:	ldr	r8, [sp, #92]	; 0x5c
    5468:	b	53b4 <doProlog+0x13ac>
    546c:	mov	r8, #0
    5470:	mov	r3, #36	; 0x24
    5474:	ldr	r2, [pc, #1296]	; 598c <doProlog+0x1984>
    5478:	add	r1, sl, #132	; 0x84
    547c:	mov	r0, r4
    5480:	strb	r8, [r4, #505]	; 0x1f9
    5484:	bl	a50 <lookup>
    5488:	cmp	r0, r8
    548c:	str	r0, [r4, #324]	; 0x144
    5490:	beq	4970 <doProlog+0x968>
    5494:	mov	r3, #1
    5498:	ldr	r2, [sp, #92]	; 0x5c
    549c:	strb	r3, [sl, #129]	; 0x81
    54a0:	ldr	r3, [r4, #92]	; 0x5c
    54a4:	ldr	r9, [r6, #56]	; 0x38
    54a8:	cmp	r3, r8
    54ac:	beq	45e0 <doProlog+0x5d8>
    54b0:	mov	r3, r7
    54b4:	mov	r1, r5
    54b8:	mov	r0, r6
    54bc:	blx	r9
    54c0:	cmp	r0, r8
    54c4:	beq	5a14 <doProlog+0x1a0c>
    54c8:	ldr	r2, [r6, #68]	; 0x44
    54cc:	mov	r1, r6
    54d0:	add	r0, r4, #432	; 0x1b0
    54d4:	ldr	r3, [sp, #92]	; 0x5c
    54d8:	sub	r3, r3, r2
    54dc:	add	r2, r5, r2
    54e0:	bl	14d8 <poolStoreString>
    54e4:	subs	r9, r0, #0
    54e8:	beq	4970 <doProlog+0x968>
    54ec:	bl	65c <normalizePublicId>
    54f0:	ldr	r3, [r4, #444]	; 0x1bc
    54f4:	str	r9, [r4, #336]	; 0x150
    54f8:	str	r3, [r4, #448]	; 0x1c0
    54fc:	ldrb	r3, [sl, #128]	; 0x80
    5500:	cmp	r3, #0
    5504:	beq	42a4 <doProlog+0x29c>
    5508:	ldr	r3, [r4, #324]	; 0x144
    550c:	cmp	r3, #0
    5510:	beq	42a4 <doProlog+0x29c>
    5514:	b	4614 <doProlog+0x60c>
    5518:	ldrb	r3, [sl, #160]	; 0xa0
    551c:	cmp	r3, #0
    5520:	movne	r9, #1
    5524:	beq	4284 <doProlog+0x27c>
    5528:	b	53a8 <doProlog+0x13a0>
    552c:	ldrb	r3, [r4, #504]	; 0x1f8
    5530:	cmp	r3, #0
    5534:	moveq	r9, #3
    5538:	bne	4350 <doProlog+0x348>
    553c:	b	42c8 <doProlog+0x2c0>
    5540:	mov	r8, #1
    5544:	b	46c0 <doProlog+0x6b8>
    5548:	str	r8, [sl, #180]	; 0xb4
    554c:	cmp	r8, #0
    5550:	ldr	r3, [r3, r8, lsl #2]
    5554:	rsb	r3, r3, r3, lsl #3
    5558:	add	r2, r2, r3, lsl #2
    555c:	str	r1, [r2, #4]
    5560:	strbeq	r8, [sl, #160]	; 0xa0
    5564:	streq	r8, [sl, #168]	; 0xa8
    5568:	b	4284 <doProlog+0x27c>
    556c:	mov	r8, #1
    5570:	b	505c <doProlog+0x1054>
    5574:	mov	r8, r3
    5578:	ldr	r3, [pc, #1036]	; 598c <doProlog+0x1984>
    557c:	str	r3, [r4, #332]	; 0x14c
    5580:	b	52e0 <doProlog+0x12d8>
    5584:	str	r3, [r4, #332]	; 0x14c
    5588:	b	4284 <doProlog+0x27c>
    558c:	ldr	r3, [r4, #448]	; 0x1c0
    5590:	cmp	r3, #0
    5594:	beq	4970 <doProlog+0x968>
    5598:	mov	r2, r5
    559c:	mov	r0, r9
    55a0:	ldr	r3, [sp, #92]	; 0x5c
    55a4:	mov	r1, r6
    55a8:	bl	1434 <poolAppend>
    55ac:	cmp	r0, #0
    55b0:	beq	4970 <doProlog+0x968>
    55b4:	ldr	r3, [r4, #448]	; 0x1c0
    55b8:	str	r3, [r4, #340]	; 0x154
    55bc:	b	42a4 <doProlog+0x29c>
    55c0:	mov	r2, r5
    55c4:	mov	r1, r6
    55c8:	ldr	r3, [sp, #92]	; 0x5c
    55cc:	add	r0, sl, #80	; 0x50
    55d0:	bl	14d8 <poolStoreString>
    55d4:	subs	r8, r0, #0
    55d8:	beq	4970 <doProlog+0x968>
    55dc:	mov	r3, #36	; 0x24
    55e0:	mov	r2, r8
    55e4:	add	r1, sl, #132	; 0x84
    55e8:	mov	r0, r4
    55ec:	bl	a50 <lookup>
    55f0:	cmp	r0, #0
    55f4:	str	r0, [r4, #324]	; 0x144
    55f8:	beq	4970 <doProlog+0x968>
    55fc:	ldr	r3, [r0]
    5600:	cmp	r3, r8
    5604:	beq	5830 <doProlog+0x1828>
    5608:	ldr	r2, [sl, #96]	; 0x60
    560c:	mov	r3, #0
    5610:	str	r2, [sl, #92]	; 0x5c
    5614:	str	r3, [r4, #324]	; 0x144
    5618:	b	4284 <doProlog+0x27c>
    561c:	ldr	r2, [r6, #68]	; 0x44
    5620:	mov	r1, r6
    5624:	add	r0, sl, #80	; 0x50
    5628:	ldr	r3, [sp, #92]	; 0x5c
    562c:	sub	r3, r3, r2
    5630:	add	r2, r5, r2
    5634:	bl	14d8 <poolStoreString>
    5638:	subs	r3, r0, #0
    563c:	mov	r2, r3
    5640:	mov	fp, r3
    5644:	beq	4970 <doProlog+0x968>
    5648:	mov	r3, #0
    564c:	add	r1, sl, #132	; 0x84
    5650:	mov	r0, r4
    5654:	bl	a50 <lookup>
    5658:	ldr	r2, [r4, #280]	; 0x118
    565c:	mov	r9, r0
    5660:	ldr	r3, [sl, #96]	; 0x60
    5664:	cmp	r2, #0
    5668:	str	r3, [sl, #92]	; 0x5c
    566c:	beq	5688 <doProlog+0x1680>
    5670:	ldrb	r3, [sl, #130]	; 0x82
    5674:	cmp	r3, #0
    5678:	beq	5868 <doProlog+0x1860>
    567c:	ldr	r3, [r4, #308]	; 0x134
    5680:	cmp	r3, #0
    5684:	beq	5874 <doProlog+0x186c>
    5688:	cmp	r9, #0
    568c:	beq	58e0 <doProlog+0x18d8>
    5690:	ldrb	r3, [r9, #32]
    5694:	cmp	r3, #0
    5698:	bne	5ac0 <doProlog+0x1ab8>
    569c:	ldr	r3, [r9, #4]
    56a0:	subs	fp, r3, #0
    56a4:	beq	5788 <doProlog+0x1780>
    56a8:	sub	r2, r8, #60	; 0x3c
    56ac:	mov	r1, r9
    56b0:	clz	r2, r2
    56b4:	mov	r0, r4
    56b8:	lsr	r2, r2, #5
    56bc:	bl	5b10 <processInternalEntity>
    56c0:	subs	r9, r0, #0
    56c4:	beq	42a4 <doProlog+0x29c>
    56c8:	b	42c8 <doProlog+0x2c0>
    56cc:	mov	r3, #32
    56d0:	ldr	r2, [r4, #12]
    56d4:	mov	r0, r3
    56d8:	str	r3, [r4, #484]	; 0x1e4
    56dc:	blx	r2
    56e0:	cmp	r0, #0
    56e4:	str	r0, [r4, #480]	; 0x1e0
    56e8:	beq	4970 <doProlog+0x968>
    56ec:	ldr	r3, [r4, #268]	; 0x10c
    56f0:	b	4d28 <doProlog+0xd20>
    56f4:	ldrb	r3, [r4, #505]	; 0x1f9
    56f8:	cmp	r3, #0
    56fc:	beq	5218 <doProlog+0x1210>
    5700:	b	5154 <doProlog+0x114c>
    5704:	ldr	r0, [sl, #164]	; 0xa4
    5708:	ldr	r3, [sl, #180]	; 0xb4
    570c:	ldr	ip, [sl, #184]	; 0xb8
    5710:	sub	r3, r3, #-1073741823	; 0xc0000001
    5714:	ldr	r3, [ip, r3, lsl #2]
    5718:	rsb	r3, r3, r3, lsl #3
    571c:	ldr	ip, [r0, r3, lsl #2]
    5720:	cmp	ip, #3
    5724:	beq	4db4 <doProlog+0xdac>
    5728:	ldr	r8, [r4, #136]	; 0x88
    572c:	mov	lr, #5
    5730:	mov	ip, #124	; 0x7c
    5734:	str	lr, [r0, r3, lsl #2]
    5738:	strb	ip, [r1, r2]
    573c:	clz	r8, r8
    5740:	lsr	r8, r8, lr
    5744:	b	4564 <doProlog+0x55c>
    5748:	mov	r3, #36	; 0x24
    574c:	ldr	r2, [pc, #568]	; 598c <doProlog+0x1984>
    5750:	add	r1, sl, #132	; 0x84
    5754:	mov	r0, r4
    5758:	bl	a50 <lookup>
    575c:	cmp	r0, #0
    5760:	str	r0, [r4, #324]	; 0x144
    5764:	beq	4970 <doProlog+0x968>
    5768:	str	r9, [r0, #24]
    576c:	b	5320 <doProlog+0x1318>
    5770:	strb	r3, [sl, #160]	; 0xa0
    5774:	b	4284 <doProlog+0x27c>
    5778:	ldr	r3, [r4, #332]	; 0x14c
    577c:	cmp	r3, #0
    5780:	strbeq	r9, [sl, #129]	; 0x81
    5784:	b	5210 <doProlog+0x1208>
    5788:	ldr	r8, [r4, #120]	; 0x78
    578c:	cmp	r8, #0
    5790:	beq	5a64 <doProlog+0x1a5c>
    5794:	strb	fp, [sl, #131]	; 0x83
    5798:	mov	r2, #1
    579c:	mov	r1, fp
    57a0:	ldr	r3, [r9, #16]
    57a4:	strb	r2, [r9, #32]
    57a8:	ldr	ip, [r9, #24]
    57ac:	ldr	r2, [r9, #20]
    57b0:	ldr	r0, [r4, #124]	; 0x7c
    57b4:	str	ip, [sp]
    57b8:	blx	r8
    57bc:	cmp	r0, #0
    57c0:	beq	5af8 <doProlog+0x1af0>
    57c4:	strb	fp, [r9, #32]
    57c8:	ldrb	r2, [sl, #131]	; 0x83
    57cc:	ldrb	r3, [sl, #130]	; 0x82
    57d0:	cmp	r2, #0
    57d4:	strbeq	r3, [sl, #128]	; 0x80
    57d8:	beq	42a4 <doProlog+0x29c>
    57dc:	cmp	r3, #0
    57e0:	bne	42a4 <doProlog+0x29c>
    57e4:	ldr	r3, [r4, #116]	; 0x74
    57e8:	cmp	r3, #0
    57ec:	beq	42a4 <doProlog+0x29c>
    57f0:	ldr	r0, [r4, #4]
    57f4:	blx	r3
    57f8:	cmp	r0, #0
    57fc:	bne	42a4 <doProlog+0x29c>
    5800:	b	486c <doProlog+0x864>
    5804:	ldr	r3, [pc, #416]	; 59ac <doProlog+0x19a4>
    5808:	cmp	r8, #32
    580c:	add	r2, r3, #16
    5810:	movne	r3, r2
    5814:	mov	r8, r3
    5818:	b	49a0 <doProlog+0x998>
    581c:	ldr	r3, [sl, #120]	; 0x78
    5820:	cmp	r0, #0
    5824:	str	r3, [sl, #116]	; 0x74
    5828:	beq	4284 <doProlog+0x27c>
    582c:	b	42c8 <doProlog+0x2c0>
    5830:	ldr	r1, [sl, #92]	; 0x5c
    5834:	mov	r2, #1
    5838:	mov	r3, #0
    583c:	str	r1, [sl, #96]	; 0x60
    5840:	strb	r2, [r0, #33]	; 0x21
    5844:	ldr	r2, [r4, #492]	; 0x1ec
    5848:	str	r3, [r0, #24]
    584c:	cmp	r2, r3
    5850:	beq	5a70 <doProlog+0x1a68>
    5854:	strb	r3, [r0, #34]	; 0x22
    5858:	ldr	r3, [r4, #144]	; 0x90
    585c:	cmp	r3, #0
    5860:	bne	42a4 <doProlog+0x29c>
    5864:	b	4284 <doProlog+0x27c>
    5868:	ldrb	r3, [sl, #129]	; 0x81
    586c:	cmp	r3, #0
    5870:	bne	5688 <doProlog+0x1680>
    5874:	cmp	r9, #0
    5878:	beq	5b08 <doProlog+0x1b00>
    587c:	ldrb	r3, [r9, #34]	; 0x22
    5880:	cmp	r3, #0
    5884:	bne	5690 <doProlog+0x1688>
    5888:	mov	r9, #24
    588c:	b	42c8 <doProlog+0x2c0>
    5890:	ldr	r9, [r4, #144]	; 0x90
    5894:	cmp	r9, #0
    5898:	beq	4284 <doProlog+0x27c>
    589c:	ldr	r3, [sp, #24]
    58a0:	mov	r2, r8
    58a4:	str	r5, [r3]
    58a8:	mov	r3, r8
    58ac:	ldr	r1, [ip, #28]
    58b0:	ldr	r0, [r4, #4]
    58b4:	str	r1, [sp, #16]
    58b8:	ldr	r1, [ip, #24]
    58bc:	str	r1, [sp, #12]
    58c0:	ldr	r1, [ip, #16]
    58c4:	str	r1, [sp, #8]
    58c8:	ldr	r1, [ip, #20]
    58cc:	str	r8, [sp]
    58d0:	str	r1, [sp, #4]
    58d4:	ldr	r1, [ip]
    58d8:	blx	r9
    58dc:	b	42a4 <doProlog+0x29c>
    58e0:	ldrb	r3, [sl, #130]	; 0x82
    58e4:	cmp	r8, #60	; 0x3c
    58e8:	strb	r3, [sl, #128]	; 0x80
    58ec:	bne	4284 <doProlog+0x27c>
    58f0:	ldr	r3, [r4, #128]	; 0x80
    58f4:	cmp	r3, #0
    58f8:	beq	4284 <doProlog+0x27c>
    58fc:	mov	r1, fp
    5900:	mov	r2, #1
    5904:	ldr	r0, [r4, #4]
    5908:	blx	r3
    590c:	b	42a4 <doProlog+0x29c>
    5910:	cmp	r0, #0
    5914:	beq	4284 <doProlog+0x27c>
    5918:	b	42c8 <doProlog+0x2c0>
    591c:	ldrb	r3, [r3, #1]
    5920:	cmp	r3, #79	; 0x4f
    5924:	bne	4e64 <doProlog+0xe5c>
    5928:	ldr	r2, [r4, #440]	; 0x1b8
    592c:	ldr	r3, [r4, #444]	; 0x1bc
    5930:	cmp	r3, r2
    5934:	beq	5aa8 <doProlog+0x1aa0>
    5938:	add	r1, r3, #1
    593c:	mov	r2, #41	; 0x29
    5940:	str	r1, [r4, #444]	; 0x1bc
    5944:	strb	r2, [r3]
    5948:	ldr	r2, [r4, #440]	; 0x1b8
    594c:	ldr	r3, [r4, #444]	; 0x1bc
    5950:	cmp	r3, r2
    5954:	beq	5a90 <doProlog+0x1a88>
    5958:	add	r1, r3, #1
    595c:	mov	r2, #0
    5960:	str	r1, [r4, #444]	; 0x1bc
    5964:	strb	r2, [r3]
    5968:	ldr	r1, [r4, #140]	; 0x8c
    596c:	ldr	r2, [r4, #444]	; 0x1bc
    5970:	ldr	r3, [r4, #448]	; 0x1c0
    5974:	mov	ip, r1
    5978:	str	r3, [r4, #340]	; 0x154
    597c:	str	r2, [r4, #448]	; 0x1c0
    5980:	b	4e64 <doProlog+0xe5c>
    5984:	.word	0x00000054
    5988:	.word	0x00000098
    598c:	.word	0x0000005c
    5990:	.word	0x00000090
    5994:	.word	0x00000060
    5998:	.word	0x0000006c
    599c:	.word	0x00000068
    59a0:	.word	0x00000084
    59a4:	.word	0x0000007c
    59a8:	.word	0x00000074
    59ac:	.word	0x00000048
    59b0:	ldrb	r3, [r3, #1]
    59b4:	cmp	r3, #79	; 0x4f
    59b8:	bne	4c00 <doProlog+0xbf8>
    59bc:	ldr	r2, [r4, #440]	; 0x1b8
    59c0:	ldr	r3, [r4, #444]	; 0x1bc
    59c4:	cmp	r3, r2
    59c8:	beq	5ae0 <doProlog+0x1ad8>
    59cc:	add	r1, r3, #1
    59d0:	mov	r2, #41	; 0x29
    59d4:	str	r1, [r4, #444]	; 0x1bc
    59d8:	strb	r2, [r3]
    59dc:	ldr	r2, [r4, #440]	; 0x1b8
    59e0:	ldr	r3, [r4, #444]	; 0x1bc
    59e4:	cmp	r3, r2
    59e8:	beq	5ac8 <doProlog+0x1ac0>
    59ec:	add	r1, r3, #1
    59f0:	mov	r2, #0
    59f4:	str	r1, [r4, #444]	; 0x1bc
    59f8:	strb	r2, [r3]
    59fc:	ldr	r9, [r4, #140]	; 0x8c
    5a00:	ldr	r2, [r4, #444]	; 0x1bc
    5a04:	ldr	r3, [r4, #448]	; 0x1c0
    5a08:	str	r3, [r4, #340]	; 0x154
    5a0c:	str	r2, [r4, #448]	; 0x1c0
    5a10:	b	4c00 <doProlog+0xbf8>
    5a14:	mov	r9, #32
    5a18:	b	42c8 <doProlog+0x2c0>
    5a1c:	strb	r6, [sl, #129]	; 0x81
    5a20:	b	4b50 <doProlog+0xb48>
    5a24:	ldr	r3, [sl, #92]	; 0x5c
    5a28:	str	r3, [sl, #96]	; 0x60
    5a2c:	strb	r8, [r0, #33]	; 0x21
    5a30:	ldr	r3, [r4, #492]	; 0x1ec
    5a34:	str	r8, [r0, #24]
    5a38:	cmp	r3, #0
    5a3c:	beq	5a80 <doProlog+0x1a78>
    5a40:	strb	r8, [r0, #34]	; 0x22
    5a44:	ldr	r3, [r4, #144]	; 0x90
    5a48:	cmp	r3, #0
    5a4c:	bne	42a4 <doProlog+0x29c>
    5a50:	b	4284 <doProlog+0x27c>
    5a54:	mov	r9, #21
    5a58:	b	42c8 <doProlog+0x2c0>
    5a5c:	mov	r9, #2
    5a60:	b	42c8 <doProlog+0x2c0>
    5a64:	ldrb	r3, [sl, #130]	; 0x82
    5a68:	strb	r3, [sl, #128]	; 0x80
    5a6c:	b	4284 <doProlog+0x27c>
    5a70:	ldr	r3, [r4, #308]	; 0x134
    5a74:	clz	r3, r3
    5a78:	lsr	r3, r3, #5
    5a7c:	b	5854 <doProlog+0x184c>
    5a80:	ldr	r8, [r4, #308]	; 0x134
    5a84:	clz	r8, r8
    5a88:	lsr	r8, r8, #5
    5a8c:	b	5a40 <doProlog+0x1a38>
    5a90:	add	r0, r4, #432	; 0x1b0
    5a94:	bl	1238 <poolGrow>
    5a98:	cmp	r0, #0
    5a9c:	beq	4970 <doProlog+0x968>
    5aa0:	ldr	r3, [r4, #444]	; 0x1bc
    5aa4:	b	5958 <doProlog+0x1950>
    5aa8:	add	r0, r4, #432	; 0x1b0
    5aac:	bl	1238 <poolGrow>
    5ab0:	cmp	r0, #0
    5ab4:	beq	4970 <doProlog+0x968>
    5ab8:	ldr	r3, [r4, #444]	; 0x1bc
    5abc:	b	5938 <doProlog+0x1930>
    5ac0:	mov	r9, #12
    5ac4:	b	42c8 <doProlog+0x2c0>
    5ac8:	add	r0, r4, #432	; 0x1b0
    5acc:	bl	1238 <poolGrow>
    5ad0:	cmp	r0, #0
    5ad4:	beq	4970 <doProlog+0x968>
    5ad8:	ldr	r3, [r4, #444]	; 0x1bc
    5adc:	b	59ec <doProlog+0x19e4>
    5ae0:	add	r0, r4, #432	; 0x1b0
    5ae4:	bl	1238 <poolGrow>
    5ae8:	cmp	r0, #0
    5aec:	beq	4970 <doProlog+0x968>
    5af0:	ldr	r3, [r4, #444]	; 0x1bc
    5af4:	b	59cc <doProlog+0x19c4>
    5af8:	mov	r3, r9
    5afc:	mov	r9, #21
    5b00:	strb	r0, [r3, #32]
    5b04:	b	42c8 <doProlog+0x2c0>
    5b08:	mov	r9, #11
    5b0c:	b	42c8 <doProlog+0x2c0>

00005b10 <processInternalEntity>:
    5b10:	strd	r4, [sp, #-36]!	; 0xffffffdc
    5b14:	mov	r5, r0
    5b18:	ldr	r4, [r0, #312]	; 0x138
    5b1c:	strd	r6, [sp, #8]
    5b20:	mov	r6, r1
    5b24:	mov	r7, r2
    5b28:	strd	r8, [sp, #16]
    5b2c:	strd	sl, [sp, #24]
    5b30:	str	lr, [sp, #32]
    5b34:	sub	sp, sp, #28
    5b38:	cmp	r4, #0
    5b3c:	beq	5c50 <processInternalEntity+0x140>
    5b40:	ldr	r3, [r4, #8]
    5b44:	str	r3, [r0, #312]	; 0x138
    5b48:	mov	r3, #1
    5b4c:	mov	r8, #0
    5b50:	strb	r3, [r6, #32]
    5b54:	ldr	r3, [r5, #308]	; 0x134
    5b58:	ldr	r1, [r5, #320]	; 0x140
    5b5c:	str	r8, [r6, #12]
    5b60:	str	r3, [r4, #8]
    5b64:	str	r4, [r5, #308]	; 0x134
    5b68:	str	r8, [r4]
    5b6c:	str	r8, [r4, #4]
    5b70:	str	r6, [r4, #12]
    5b74:	str	r1, [r4, #16]
    5b78:	strb	r7, [r4, #20]
    5b7c:	ldrb	r3, [r6, #33]	; 0x21
    5b80:	ldr	r9, [r6, #4]
    5b84:	ldr	r7, [r6, #8]
    5b88:	cmp	r3, r8
    5b8c:	ldr	r2, [r5, #236]	; 0xec
    5b90:	add	r7, r9, r7
    5b94:	beq	5c34 <processInternalEntity+0x124>
    5b98:	add	sl, sp, #20
    5b9c:	mov	r0, r2
    5ba0:	ldr	fp, [r2]
    5ba4:	mov	r3, sl
    5ba8:	mov	r1, r9
    5bac:	mov	r2, r7
    5bb0:	blx	fp
    5bb4:	ldr	ip, [sp, #20]
    5bb8:	mov	r3, r7
    5bbc:	mov	r2, r9
    5bc0:	str	r0, [sp]
    5bc4:	mov	r0, r5
    5bc8:	str	sl, [sp, #8]
    5bcc:	str	r8, [sp, #12]
    5bd0:	ldr	r1, [r5, #236]	; 0xec
    5bd4:	str	ip, [sp, #4]
    5bd8:	bl	4008 <doProlog>
    5bdc:	cmp	r0, #0
    5be0:	bne	5c18 <processInternalEntity+0x108>
    5be4:	ldr	r3, [sp, #20]
    5be8:	cmp	r3, r7
    5bec:	beq	5bfc <processInternalEntity+0xec>
    5bf0:	ldr	r2, [r5, #496]	; 0x1f0
    5bf4:	cmp	r2, #3
    5bf8:	beq	5c6c <processInternalEntity+0x15c>
    5bfc:	mov	r3, #0
    5c00:	strb	r3, [r6, #32]
    5c04:	ldr	r2, [r4, #8]
    5c08:	ldr	r3, [r5, #312]	; 0x138
    5c0c:	str	r2, [r5, #308]	; 0x134
    5c10:	str	r3, [r4, #8]
    5c14:	str	r4, [r5, #312]	; 0x138
    5c18:	add	sp, sp, #28
    5c1c:	ldrd	r4, [sp]
    5c20:	ldrd	r6, [sp, #8]
    5c24:	ldrd	r8, [sp, #16]
    5c28:	ldrd	sl, [sp, #24]
    5c2c:	add	sp, sp, #32
    5c30:	pop	{pc}		; (ldr pc, [sp], #4)
    5c34:	add	r0, sp, #20
    5c38:	str	r7, [sp]
    5c3c:	stmib	sp, {r0, r3}
    5c40:	mov	r3, r9
    5c44:	mov	r0, r5
    5c48:	bl	5c84 <doContent>
    5c4c:	b	5bdc <processInternalEntity+0xcc>
    5c50:	mov	r0, #24
    5c54:	ldr	r3, [r5, #12]
    5c58:	blx	r3
    5c5c:	subs	r4, r0, #0
    5c60:	moveq	r0, #1
    5c64:	bne	5b48 <processInternalEntity+0x38>
    5c68:	b	5c18 <processInternalEntity+0x108>
    5c6c:	sub	r9, r3, r9
    5c70:	movw	r3, #0
    5c74:	movt	r3, #0
    5c78:	str	r9, [r6, #12]
    5c7c:	str	r3, [r5, #288]	; 0x120
    5c80:	b	5c18 <processInternalEntity+0x108>

00005c84 <doContent>:
    5c84:	strd	r4, [sp, #-36]!	; 0xffffffdc
    5c88:	mov	r5, r2
    5c8c:	mov	r4, r0
    5c90:	strd	r6, [sp, #8]
    5c94:	strd	r8, [sp, #16]
    5c98:	strd	sl, [sp, #24]
    5c9c:	str	lr, [sp, #32]
    5ca0:	sub	sp, sp, #84	; 0x54
    5ca4:	ldrb	sl, [sp, #128]	; 0x80
    5ca8:	str	r3, [sp, #44]	; 0x2c
    5cac:	ldr	r3, [r0, #152]	; 0x98
    5cb0:	str	sl, [sp, #12]
    5cb4:	str	r1, [sp, #16]
    5cb8:	cmp	r3, r2
    5cbc:	ldr	r3, [r0, #364]	; 0x16c
    5cc0:	add	r2, r0, #432	; 0x1b0
    5cc4:	addeq	r6, r0, #296	; 0x128
    5cc8:	addeq	fp, r0, #300	; 0x12c
    5ccc:	ldrne	r6, [r0, #308]	; 0x134
    5cd0:	str	r2, [sp, #20]
    5cd4:	str	r3, [sp, #24]
    5cd8:	ldr	r3, [sp, #44]	; 0x2c
    5cdc:	addne	fp, r6, #4
    5ce0:	mov	sl, r6
    5ce4:	str	r3, [r6]
    5ce8:	ldr	r1, [sp, #44]	; 0x2c
    5cec:	add	r3, sp, #48	; 0x30
    5cf0:	mov	r0, r5
    5cf4:	ldr	r6, [r5, #4]
    5cf8:	ldr	r2, [sp, #120]	; 0x78
    5cfc:	str	r1, [sp, #48]	; 0x30
    5d00:	blx	r6
    5d04:	ldr	r3, [sp, #48]	; 0x30
    5d08:	add	r0, r0, #5
    5d0c:	str	r3, [fp]
    5d10:	cmp	r0, #18
    5d14:	ldrls	pc, [pc, r0, lsl #2]
    5d18:	b	65c8 <doContent+0x944>
    5d1c:	.word	0x00005dd4
    5d20:	.word	0x000061e8
    5d24:	.word	0x00006210
    5d28:	.word	0x00005ff0
    5d2c:	.word	0x00006014
    5d30:	.word	0x00006028
    5d34:	.word	0x00006034
    5d38:	.word	0x00006034
    5d3c:	.word	0x00005e68
    5d40:	.word	0x00005e68
    5d44:	.word	0x000063e0
    5d48:	.word	0x00006384
    5d4c:	.word	0x000063b4
    5d50:	.word	0x0000626c
    5d54:	.word	0x000062c4
    5d58:	.word	0x00006314
    5d5c:	.word	0x00006364
    5d60:	.word	0x00005d68
    5d64:	.word	0x00005d88
    5d68:	mov	r0, #17
    5d6c:	add	sp, sp, #84	; 0x54
    5d70:	ldrd	r4, [sp]
    5d74:	ldrd	r6, [sp, #8]
    5d78:	ldrd	r8, [sp, #16]
    5d7c:	ldrd	sl, [sp, #24]
    5d80:	add	sp, sp, #32
    5d84:	pop	{pc}		; (ldr pc, [sp], #4)
    5d88:	mov	r1, r5
    5d8c:	mov	r0, r4
    5d90:	ldr	r2, [sp, #44]	; 0x2c
    5d94:	bl	31b8 <reportComment>
    5d98:	cmp	r0, #0
    5d9c:	beq	637c <doContent+0x6f8>
    5da0:	ldr	r3, [sp, #48]	; 0x30
    5da4:	str	r3, [sp, #44]	; 0x2c
    5da8:	ldr	r2, [r4, #496]	; 0x1f0
    5dac:	str	r3, [sl]
    5db0:	cmp	r2, #2
    5db4:	beq	6500 <doContent+0x87c>
    5db8:	cmp	r2, #3
    5dbc:	bne	5ce8 <doContent+0x64>
    5dc0:	ldr	r3, [sp, #48]	; 0x30
    5dc4:	mov	r0, #0
    5dc8:	ldr	r2, [sp, #124]	; 0x7c
    5dcc:	str	r3, [r2]
    5dd0:	b	5d6c <doContent+0xe8>
    5dd4:	mov	r6, sl
    5dd8:	ldr	sl, [sp, #12]
    5ddc:	cmp	sl, #0
    5de0:	bne	6000 <doContent+0x37c>
    5de4:	ldr	r3, [r4, #68]	; 0x44
    5de8:	cmp	r3, #0
    5dec:	beq	66dc <doContent+0xa58>
    5df0:	ldrb	r2, [r5, #72]	; 0x48
    5df4:	cmp	r2, #0
    5df8:	bne	66a0 <doContent+0xa1c>
    5dfc:	ldr	lr, [r4, #52]	; 0x34
    5e00:	mov	r0, r5
    5e04:	add	r3, sp, #56	; 0x38
    5e08:	add	r1, sp, #44	; 0x2c
    5e0c:	ldr	ip, [r4, #56]	; 0x38
    5e10:	ldr	r5, [r5, #60]	; 0x3c
    5e14:	ldr	r2, [sp, #120]	; 0x78
    5e18:	str	ip, [sp]
    5e1c:	str	lr, [sp, #56]	; 0x38
    5e20:	blx	r5
    5e24:	ldr	r2, [sp, #56]	; 0x38
    5e28:	ldr	r1, [r4, #52]	; 0x34
    5e2c:	ldr	r0, [r4, #4]
    5e30:	ldr	r3, [r4, #68]	; 0x44
    5e34:	sub	r2, r2, r1
    5e38:	blx	r3
    5e3c:	ldr	r3, [sp, #16]
    5e40:	cmp	r3, #0
    5e44:	beq	67e4 <doContent+0xb60>
    5e48:	ldr	r2, [sp, #16]
    5e4c:	ldr	r3, [r4, #320]	; 0x140
    5e50:	cmp	r3, r2
    5e54:	bne	6760 <doContent+0xadc>
    5e58:	ldrd	r2, [sp, #120]	; 0x78
    5e5c:	mov	r0, #0
    5e60:	str	r2, [r3]
    5e64:	b	5d6c <doContent+0xe8>
    5e68:	ldr	r6, [sp, #44]	; 0x2c
    5e6c:	mov	r3, #0
    5e70:	mov	r0, r5
    5e74:	ldr	r2, [r5, #68]	; 0x44
    5e78:	str	r3, [sp, #52]	; 0x34
    5e7c:	ldr	r3, [r5, #32]
    5e80:	add	r6, r6, r2
    5e84:	mov	r1, r6
    5e88:	blx	r3
    5e8c:	add	r3, r6, r0
    5e90:	mov	r2, r6
    5e94:	ldr	r0, [sp, #20]
    5e98:	mov	r1, r5
    5e9c:	bl	14d8 <poolStoreString>
    5ea0:	cmp	r0, #0
    5ea4:	str	r0, [sp, #56]	; 0x38
    5ea8:	beq	637c <doContent+0x6f8>
    5eac:	ldr	ip, [r4, #444]	; 0x1bc
    5eb0:	add	r3, sp, #52	; 0x34
    5eb4:	mov	r1, r5
    5eb8:	mov	r2, r3
    5ebc:	mov	r0, r4
    5ec0:	add	r3, sp, #56	; 0x38
    5ec4:	str	r2, [sp]
    5ec8:	ldr	r2, [sp, #44]	; 0x2c
    5ecc:	str	ip, [r4, #448]	; 0x1c0
    5ed0:	bl	3564 <storeAtts>
    5ed4:	cmp	r0, #0
    5ed8:	bne	5d6c <doContent+0xe8>
    5edc:	ldr	r3, [r4, #60]	; 0x3c
    5ee0:	ldr	r2, [r4, #444]	; 0x1bc
    5ee4:	cmp	r3, #0
    5ee8:	str	r2, [r4, #448]	; 0x1c0
    5eec:	beq	6630 <doContent+0x9ac>
    5ef0:	ldr	r0, [r4, #4]
    5ef4:	ldr	r1, [sp, #56]	; 0x38
    5ef8:	ldr	r2, [r4, #400]	; 0x190
    5efc:	blx	r3
    5f00:	ldr	r3, [r4, #64]	; 0x40
    5f04:	cmp	r3, #0
    5f08:	beq	5f28 <doContent+0x2a4>
    5f0c:	ldr	r2, [r4, #60]	; 0x3c
    5f10:	cmp	r2, #0
    5f14:	ldrne	r2, [fp]
    5f18:	strne	r2, [sl]
    5f1c:	ldr	r0, [r4, #4]
    5f20:	ldr	r1, [sp, #56]	; 0x38
    5f24:	blx	r3
    5f28:	ldr	r3, [r4, #432]	; 0x1b0
    5f2c:	ldr	r1, [r4, #436]	; 0x1b4
    5f30:	cmp	r1, #0
    5f34:	beq	5f5c <doContent+0x2d8>
    5f38:	cmp	r3, #0
    5f3c:	bne	5f48 <doContent+0x2c4>
    5f40:	b	5f60 <doContent+0x2dc>
    5f44:	mov	r3, r2
    5f48:	ldr	r2, [r3]
    5f4c:	str	r1, [r3]
    5f50:	mov	r1, r3
    5f54:	cmp	r2, #0
    5f58:	bne	5f44 <doContent+0x2c0>
    5f5c:	str	r3, [r4, #436]	; 0x1b4
    5f60:	ldr	r6, [sp, #52]	; 0x34
    5f64:	mov	r3, #0
    5f68:	str	r3, [r4, #432]	; 0x1b0
    5f6c:	str	r3, [r4, #440]	; 0x1b8
    5f70:	str	r3, [r4, #444]	; 0x1bc
    5f74:	cmp	r6, r3
    5f78:	str	r3, [r4, #448]	; 0x1c0
    5f7c:	beq	5fcc <doContent+0x348>
    5f80:	ldr	r3, [r4, #112]	; 0x70
    5f84:	ldr	r2, [r6]
    5f88:	cmp	r3, #0
    5f8c:	beq	5fa0 <doContent+0x31c>
    5f90:	ldr	r1, [r2]
    5f94:	ldr	r0, [r4, #4]
    5f98:	blx	r3
    5f9c:	ldr	r2, [r6]
    5fa0:	ldr	r3, [sp, #52]	; 0x34
    5fa4:	ldr	r0, [r4, #384]	; 0x180
    5fa8:	ldr	r3, [r3, #4]
    5fac:	str	r3, [sp, #52]	; 0x34
    5fb0:	cmp	r3, #0
    5fb4:	ldr	r1, [r6, #8]
    5fb8:	str	r0, [r6, #4]
    5fbc:	str	r6, [r4, #384]	; 0x180
    5fc0:	mov	r6, r3
    5fc4:	str	r1, [r2, #4]
    5fc8:	bne	5f80 <doContent+0x2fc>
    5fcc:	ldr	r2, [r4, #320]	; 0x140
    5fd0:	ldr	r3, [sp, #48]	; 0x30
    5fd4:	cmp	r2, #0
    5fd8:	bne	5da4 <doContent+0x120>
    5fdc:	mov	r1, r3
    5fe0:	mov	r0, r4
    5fe4:	ldrd	r2, [sp, #120]	; 0x78
    5fe8:	bl	329c <epilogProcessor>
    5fec:	b	5d6c <doContent+0xe8>
    5ff0:	ldr	sl, [sp, #12]
    5ff4:	cmp	sl, #0
    5ff8:	moveq	r0, #6
    5ffc:	beq	5d6c <doContent+0xe8>
    6000:	ldr	r3, [sp, #44]	; 0x2c
    6004:	mov	r0, #0
    6008:	ldr	r2, [sp, #124]	; 0x7c
    600c:	str	r3, [r2]
    6010:	b	5d6c <doContent+0xe8>
    6014:	ldr	sl, [sp, #12]
    6018:	cmp	sl, #0
    601c:	moveq	r0, #5
    6020:	beq	5d6c <doContent+0xe8>
    6024:	b	6000 <doContent+0x37c>
    6028:	mov	r0, #4
    602c:	str	r3, [sl]
    6030:	b	5d6c <doContent+0xe8>
    6034:	ldr	r7, [r4, #376]	; 0x178
    6038:	cmp	r7, #0
    603c:	beq	65d8 <doContent+0x954>
    6040:	ldr	r3, [r7]
    6044:	str	r3, [r4, #376]	; 0x178
    6048:	add	r3, sp, #56	; 0x38
    604c:	ldr	r1, [sp, #44]	; 0x2c
    6050:	mov	r2, #0
    6054:	add	lr, sp, #52	; 0x34
    6058:	mov	r0, r5
    605c:	ldr	ip, [r4, #372]	; 0x174
    6060:	str	r3, [sp, #32]
    6064:	ldr	r3, [r5, #68]	; 0x44
    6068:	str	lr, [sp, #28]
    606c:	add	r1, r1, r3
    6070:	ldr	r3, [r5, #32]
    6074:	str	ip, [r7]
    6078:	str	r2, [r7, #44]	; 0x2c
    607c:	str	r7, [r4, #372]	; 0x174
    6080:	str	r1, [r7, #4]
    6084:	str	r2, [r7, #16]
    6088:	str	r2, [r7, #20]
    608c:	blx	r3
    6090:	ldr	r6, [r7, #4]
    6094:	strd	sl, [sp, #36]	; 0x24
    6098:	ldr	r3, [r4, #320]	; 0x140
    609c:	str	r0, [r7, #8]
    60a0:	ldr	sl, [sp, #28]
    60a4:	str	r6, [sp, #56]	; 0x38
    60a8:	add	r6, r6, r0
    60ac:	ldr	r2, [r7, #36]	; 0x24
    60b0:	add	r3, r3, #1
    60b4:	str	r3, [r4, #320]	; 0x140
    60b8:	str	r2, [sp, #52]	; 0x34
    60bc:	ldr	r8, [r7, #40]	; 0x28
    60c0:	mov	r9, r8
    60c4:	ldr	r8, [sp, #32]
    60c8:	b	6100 <doContent+0x47c>
    60cc:	ldr	r9, [r7, #40]	; 0x28
    60d0:	ldr	r2, [r4, #16]
    60d4:	sub	r9, r9, r1
    60d8:	lsl	r9, r9, #1
    60dc:	mov	r1, r9
    60e0:	blx	r2
    60e4:	cmp	r0, #0
    60e8:	add	r9, r0, r9
    60ec:	add	r3, r0, fp
    60f0:	beq	637c <doContent+0x6f8>
    60f4:	str	r0, [r7, #36]	; 0x24
    60f8:	str	r9, [r7, #40]	; 0x28
    60fc:	str	r3, [sp, #52]	; 0x34
    6100:	sub	r0, r9, #1
    6104:	mov	r3, sl
    6108:	ldr	r9, [r5, #60]	; 0x3c
    610c:	mov	r1, r8
    6110:	mov	r2, r6
    6114:	str	r0, [sp]
    6118:	mov	r0, r5
    611c:	blx	r9
    6120:	ldr	r1, [r7, #36]	; 0x24
    6124:	ldr	r3, [sp, #56]	; 0x38
    6128:	ldr	ip, [sp, #52]	; 0x34
    612c:	mov	r0, r1
    6130:	cmp	r3, r6
    6134:	sub	fp, ip, r1
    6138:	bne	60cc <doContent+0x448>
    613c:	mov	r9, fp
    6140:	mov	r3, r7
    6144:	ldrd	sl, [sp, #36]	; 0x24
    6148:	mov	r0, #0
    614c:	add	r2, r7, #44	; 0x2c
    6150:	str	r9, [r7, #24]
    6154:	str	r1, [r3, #12]!
    6158:	mov	r1, r5
    615c:	strb	r0, [ip]
    6160:	mov	r0, r4
    6164:	str	r2, [sp]
    6168:	ldr	r2, [sp, #44]	; 0x2c
    616c:	bl	3564 <storeAtts>
    6170:	cmp	r0, #0
    6174:	bne	5d6c <doContent+0xe8>
    6178:	ldr	r3, [r4, #60]	; 0x3c
    617c:	cmp	r3, #0
    6180:	beq	67bc <doContent+0xb38>
    6184:	ldr	r0, [r4, #4]
    6188:	ldr	r1, [r7, #12]
    618c:	ldr	r2, [r4, #400]	; 0x190
    6190:	blx	r3
    6194:	ldr	r3, [sp, #48]	; 0x30
    6198:	ldr	r2, [r4, #432]	; 0x1b0
    619c:	ldr	r0, [r4, #436]	; 0x1b4
    61a0:	cmp	r0, #0
    61a4:	beq	61cc <doContent+0x548>
    61a8:	cmp	r2, #0
    61ac:	bne	61b8 <doContent+0x534>
    61b0:	b	61d0 <doContent+0x54c>
    61b4:	mov	r2, r1
    61b8:	ldr	r1, [r2]
    61bc:	str	r0, [r2]
    61c0:	mov	r0, r2
    61c4:	cmp	r1, #0
    61c8:	bne	61b4 <doContent+0x530>
    61cc:	str	r2, [r4, #436]	; 0x1b4
    61d0:	mov	r2, #0
    61d4:	str	r2, [r4, #432]	; 0x1b0
    61d8:	str	r2, [r4, #440]	; 0x1b8
    61dc:	str	r2, [r4, #444]	; 0x1bc
    61e0:	str	r2, [r4, #448]	; 0x1c0
    61e4:	b	5da4 <doContent+0x120>
    61e8:	ldr	sl, [sp, #12]
    61ec:	cmp	sl, #0
    61f0:	bne	6000 <doContent+0x37c>
    61f4:	ldr	r2, [sp, #16]
    61f8:	cmp	r2, #0
    61fc:	ble	667c <doContent+0x9f8>
    6200:	ldr	r3, [r4, #320]	; 0x140
    6204:	cmp	r3, r2
    6208:	bne	6264 <doContent+0x5e0>
    620c:	b	6000 <doContent+0x37c>
    6210:	ldr	sl, [sp, #12]
    6214:	cmp	sl, #0
    6218:	bne	6000 <doContent+0x37c>
    621c:	ldr	r3, [r4, #68]	; 0x44
    6220:	ldr	r2, [sp, #120]	; 0x78
    6224:	cmp	r3, #0
    6228:	str	r2, [fp]
    622c:	beq	66b8 <doContent+0xa34>
    6230:	mov	ip, #10
    6234:	mov	r2, #1
    6238:	ldr	r0, [r4, #4]
    623c:	add	r1, sp, #56	; 0x38
    6240:	strb	ip, [sp, #56]	; 0x38
    6244:	blx	r3
    6248:	ldr	r3, [sp, #16]
    624c:	cmp	r3, #0
    6250:	beq	667c <doContent+0x9f8>
    6254:	ldr	r2, [sp, #16]
    6258:	ldr	r3, [r4, #320]	; 0x140
    625c:	cmp	r3, r2
    6260:	beq	5e58 <doContent+0x1d4>
    6264:	mov	r0, #13
    6268:	b	5d6c <doContent+0xe8>
    626c:	ldr	r2, [r4, #80]	; 0x50
    6270:	cmp	r2, #0
    6274:	beq	6610 <doContent+0x98c>
    6278:	ldr	r0, [r4, #4]
    627c:	blx	r2
    6280:	ldr	ip, [sp, #12]
    6284:	add	r2, sp, #48	; 0x30
    6288:	mov	r0, r4
    628c:	ldr	r3, [sp, #120]	; 0x78
    6290:	ldr	r1, [sp, #124]	; 0x7c
    6294:	stm	sp, {r1, ip}
    6298:	mov	r1, r5
    629c:	bl	160 <doCdataSection>
    62a0:	cmp	r0, #0
    62a4:	bne	5d6c <doContent+0xe8>
    62a8:	ldr	r3, [sp, #48]	; 0x30
    62ac:	cmp	r3, #0
    62b0:	bne	5da4 <doContent+0x120>
    62b4:	movw	r3, #0
    62b8:	movt	r3, #0
    62bc:	str	r3, [r4, #288]	; 0x120
    62c0:	b	5d6c <doContent+0xe8>
    62c4:	ldr	ip, [sp, #44]	; 0x2c
    62c8:	mov	r0, r5
    62cc:	ldr	r6, [r5, #48]	; 0x30
    62d0:	ldr	r1, [r5, #68]	; 0x44
    62d4:	sub	r2, r3, r1
    62d8:	add	r1, ip, r1
    62dc:	blx	r6
    62e0:	uxtb	r6, r0
    62e4:	cmp	r6, #0
    62e8:	strb	r6, [sp, #56]	; 0x38
    62ec:	beq	6508 <doContent+0x884>
    62f0:	ldr	r3, [r4, #68]	; 0x44
    62f4:	cmp	r3, #0
    62f8:	beq	64dc <doContent+0x858>
    62fc:	mov	r2, #1
    6300:	add	r1, sp, #56	; 0x38
    6304:	ldr	r0, [r4, #4]
    6308:	blx	r3
    630c:	ldr	r3, [sp, #48]	; 0x30
    6310:	b	5da4 <doContent+0x120>
    6314:	mov	r0, r5
    6318:	ldr	r3, [r5, #44]	; 0x2c
    631c:	ldr	r1, [sp, #44]	; 0x2c
    6320:	blx	r3
    6324:	cmp	r0, #0
    6328:	blt	6bac <doContent+0xf28>
    632c:	ldr	r6, [r4, #68]	; 0x44
    6330:	cmp	r6, #0
    6334:	beq	64dc <doContent+0x858>
    6338:	ldr	r7, [r4, #4]
    633c:	add	r3, sp, #56	; 0x38
    6340:	mov	r1, r3
    6344:	mov	r8, r3
    6348:	bl	0 <coda_XmlUtf8Encode>
    634c:	mov	r2, r0
    6350:	mov	r1, r8
    6354:	mov	r0, r7
    6358:	blx	r6
    635c:	ldr	r3, [sp, #48]	; 0x30
    6360:	b	5da4 <doContent+0x120>
    6364:	mov	r1, r5
    6368:	mov	r0, r4
    636c:	ldr	r2, [sp, #44]	; 0x2c
    6370:	bl	189c <reportProcessingInstruction>
    6374:	cmp	r0, #0
    6378:	bne	5da0 <doContent+0x11c>
    637c:	mov	r0, #1
    6380:	b	5d6c <doContent+0xe8>
    6384:	ldr	r6, [r4, #68]	; 0x44
    6388:	cmp	r6, #0
    638c:	beq	65c8 <doContent+0x944>
    6390:	ldrb	r2, [r5, #72]	; 0x48
    6394:	cmp	r2, #0
    6398:	beq	6700 <doContent+0xa7c>
    639c:	ldr	r1, [sp, #44]	; 0x2c
    63a0:	ldr	r0, [r4, #4]
    63a4:	sub	r2, r3, r1
    63a8:	blx	r6
    63ac:	ldr	r3, [sp, #48]	; 0x30
    63b0:	b	5da4 <doContent+0x120>
    63b4:	ldr	r6, [r4, #68]	; 0x44
    63b8:	cmp	r6, #0
    63bc:	beq	65c8 <doContent+0x944>
    63c0:	mov	r3, #10
    63c4:	mov	r2, #1
    63c8:	ldr	r0, [r4, #4]
    63cc:	add	r1, sp, #56	; 0x38
    63d0:	strb	r3, [sp, #56]	; 0x38
    63d4:	blx	r6
    63d8:	ldr	r3, [sp, #48]	; 0x30
    63dc:	b	5da4 <doContent+0x120>
    63e0:	ldr	r2, [sp, #16]
    63e4:	ldr	r3, [r4, #320]	; 0x140
    63e8:	cmp	r3, r2
    63ec:	beq	6264 <doContent+0x5e0>
    63f0:	ldr	r7, [r4, #372]	; 0x174
    63f4:	mov	r0, r5
    63f8:	ldr	r8, [sp, #44]	; 0x2c
    63fc:	ldr	r3, [r5, #68]	; 0x44
    6400:	ldr	r1, [r7]
    6404:	ldr	r2, [r4, #376]	; 0x178
    6408:	add	r8, r8, r3, lsl #1
    640c:	ldr	r3, [r5, #32]
    6410:	str	r1, [r4, #372]	; 0x174
    6414:	mov	r1, r8
    6418:	str	r2, [r7]
    641c:	str	r7, [r4, #376]	; 0x178
    6420:	blx	r3
    6424:	ldr	r2, [r7, #8]
    6428:	cmp	r2, r0
    642c:	bne	6b54 <doContent+0xed0>
    6430:	mov	r1, r8
    6434:	ldr	r0, [r7, #4]
    6438:	bl	0 <memcmp>
    643c:	cmp	r0, #0
    6440:	bne	6b54 <doContent+0xed0>
    6444:	ldr	r6, [r4, #64]	; 0x40
    6448:	ldr	r3, [r4, #320]	; 0x140
    644c:	cmp	r6, #0
    6450:	sub	r3, r3, #1
    6454:	str	r3, [r4, #320]	; 0x140
    6458:	beq	665c <doContent+0x9d8>
    645c:	ldrb	r3, [r4, #244]	; 0xf4
    6460:	ldr	r1, [r7, #12]
    6464:	ldr	r2, [r7, #16]
    6468:	cmp	r3, #0
    646c:	cmpne	r2, #0
    6470:	bne	6770 <doContent+0xaec>
    6474:	ldr	r0, [r4, #4]
    6478:	blx	r6
    647c:	ldr	r3, [r7, #44]	; 0x2c
    6480:	cmp	r3, #0
    6484:	mov	r6, r3
    6488:	beq	5fcc <doContent+0x348>
    648c:	ldr	r8, [r4, #112]	; 0x70
    6490:	ldr	r2, [r6]
    6494:	cmp	r8, #0
    6498:	beq	64b0 <doContent+0x82c>
    649c:	ldr	r1, [r2]
    64a0:	ldr	r0, [r4, #4]
    64a4:	blx	r8
    64a8:	ldr	r2, [r6]
    64ac:	ldr	r3, [r7, #44]	; 0x2c
    64b0:	ldr	r3, [r3, #4]
    64b4:	ldr	r1, [r6, #8]
    64b8:	ldr	r0, [r4, #384]	; 0x180
    64bc:	cmp	r3, #0
    64c0:	str	r3, [r7, #44]	; 0x2c
    64c4:	str	r0, [r6, #4]
    64c8:	str	r6, [r4, #384]	; 0x180
    64cc:	mov	r6, r3
    64d0:	str	r1, [r2, #4]
    64d4:	bne	648c <doContent+0x808>
    64d8:	b	5fcc <doContent+0x348>
    64dc:	ldr	r2, [r4, #88]	; 0x58
    64e0:	ldr	r3, [sp, #48]	; 0x30
    64e4:	cmp	r2, #0
    64e8:	beq	5da4 <doContent+0x120>
    64ec:	mov	r1, r5
    64f0:	mov	r0, r4
    64f4:	ldr	r2, [sp, #44]	; 0x2c
    64f8:	bl	90 <reportDefault>
    64fc:	b	5da0 <doContent+0x11c>
    6500:	mov	r0, #35	; 0x23
    6504:	b	5d6c <doContent+0xe8>
    6508:	ldr	r7, [sp, #24]
    650c:	mov	r1, r5
    6510:	ldr	ip, [sp, #44]	; 0x2c
    6514:	ldr	r3, [sp, #48]	; 0x30
    6518:	add	r0, r7, #80	; 0x50
    651c:	ldr	r2, [r5, #68]	; 0x44
    6520:	sub	r3, r3, r2
    6524:	add	r2, ip, r2
    6528:	bl	14d8 <poolStoreString>
    652c:	subs	r8, r0, #0
    6530:	beq	637c <doContent+0x6f8>
    6534:	mov	r3, r6
    6538:	mov	r2, r8
    653c:	mov	r6, r7
    6540:	mov	r1, r7
    6544:	mov	r0, r4
    6548:	bl	a50 <lookup>
    654c:	ldrb	r2, [r6, #129]	; 0x81
    6550:	mov	r7, r0
    6554:	ldr	r3, [r6, #96]	; 0x60
    6558:	cmp	r2, #0
    655c:	str	r3, [r6, #92]	; 0x5c
    6560:	beq	6684 <doContent+0xa00>
    6564:	ldrb	r3, [r6, #130]	; 0x82
    6568:	cmp	r3, #0
    656c:	bne	6684 <doContent+0xa00>
    6570:	cmp	r0, #0
    6574:	beq	6b88 <doContent+0xf04>
    6578:	ldrb	ip, [r7, #32]
    657c:	cmp	ip, #0
    6580:	bne	6cbc <doContent+0x1038>
    6584:	ldr	r3, [r7, #28]
    6588:	cmp	r3, #0
    658c:	bne	6cb4 <doContent+0x1030>
    6590:	ldr	r2, [r7, #4]
    6594:	cmp	r2, #0
    6598:	beq	67f4 <doContent+0xb70>
    659c:	ldrb	r2, [r4, #316]	; 0x13c
    65a0:	cmp	r2, #0
    65a4:	bne	68c0 <doContent+0xc3c>
    65a8:	ldr	r3, [r4, #128]	; 0x80
    65ac:	cmp	r3, #0
    65b0:	beq	64dc <doContent+0x858>
    65b4:	ldr	r1, [r7]
    65b8:	ldr	r0, [r4, #4]
    65bc:	blx	r3
    65c0:	ldr	r3, [sp, #48]	; 0x30
    65c4:	b	5da4 <doContent+0x120>
    65c8:	ldr	r2, [r4, #88]	; 0x58
    65cc:	cmp	r2, #0
    65d0:	bne	64ec <doContent+0x868>
    65d4:	b	5da0 <doContent+0x11c>
    65d8:	mov	r0, #48	; 0x30
    65dc:	ldr	r3, [r4, #12]
    65e0:	blx	r3
    65e4:	subs	r7, r0, #0
    65e8:	beq	637c <doContent+0x6f8>
    65ec:	mov	r0, #32
    65f0:	ldr	r3, [r4, #12]
    65f4:	blx	r3
    65f8:	cmp	r0, #0
    65fc:	str	r0, [r7, #36]	; 0x24
    6600:	beq	6c9c <doContent+0x1018>
    6604:	add	r0, r0, #32
    6608:	str	r0, [r7, #40]	; 0x28
    660c:	b	6048 <doContent+0x3c4>
    6610:	ldr	r2, [r4, #88]	; 0x58
    6614:	cmp	r2, #0
    6618:	beq	6280 <doContent+0x5fc>
    661c:	mov	r1, r5
    6620:	mov	r0, r4
    6624:	ldr	r2, [sp, #44]	; 0x2c
    6628:	bl	90 <reportDefault>
    662c:	b	6280 <doContent+0x5fc>
    6630:	ldr	r3, [r4, #64]	; 0x40
    6634:	cmp	r3, #0
    6638:	bne	5f1c <doContent+0x298>
    663c:	ldr	r3, [r4, #88]	; 0x58
    6640:	cmp	r3, #0
    6644:	beq	5f28 <doContent+0x2a4>
    6648:	mov	r1, r5
    664c:	mov	r0, r4
    6650:	ldrd	r2, [sp, #44]	; 0x2c
    6654:	bl	90 <reportDefault>
    6658:	b	5f28 <doContent+0x2a4>
    665c:	ldr	r3, [r4, #88]	; 0x58
    6660:	cmp	r3, #0
    6664:	beq	647c <doContent+0x7f8>
    6668:	mov	r1, r5
    666c:	mov	r0, r4
    6670:	ldrd	r2, [sp, #44]	; 0x2c
    6674:	bl	90 <reportDefault>
    6678:	b	647c <doContent+0x7f8>
    667c:	mov	r0, #3
    6680:	b	5d6c <doContent+0xe8>
    6684:	cmp	r7, #0
    6688:	beq	6cac <doContent+0x1028>
    668c:	ldrb	r3, [r7, #34]	; 0x22
    6690:	cmp	r3, #0
    6694:	bne	6578 <doContent+0x8f4>
    6698:	mov	r0, #24
    669c:	b	5d6c <doContent+0xe8>
    66a0:	ldr	r1, [sp, #44]	; 0x2c
    66a4:	ldr	r2, [sp, #120]	; 0x78
    66a8:	ldr	r0, [r4, #4]
    66ac:	sub	r2, r2, r1
    66b0:	blx	r3
    66b4:	b	5e3c <doContent+0x1b8>
    66b8:	ldr	r3, [r4, #88]	; 0x58
    66bc:	cmp	r3, #0
    66c0:	beq	6248 <doContent+0x5c4>
    66c4:	mov	r1, r5
    66c8:	mov	r0, r4
    66cc:	ldr	r2, [sp, #44]	; 0x2c
    66d0:	ldr	r3, [sp, #120]	; 0x78
    66d4:	bl	90 <reportDefault>
    66d8:	b	6248 <doContent+0x5c4>
    66dc:	ldr	r3, [r4, #88]	; 0x58
    66e0:	cmp	r3, #0
    66e4:	beq	5e3c <doContent+0x1b8>
    66e8:	mov	r1, r5
    66ec:	mov	r0, r4
    66f0:	ldr	r2, [sp, #44]	; 0x2c
    66f4:	ldr	r3, [sp, #120]	; 0x78
    66f8:	bl	90 <reportDefault>
    66fc:	b	5e3c <doContent+0x1b8>
    6700:	add	r7, sp, #56	; 0x38
    6704:	b	670c <doContent+0xa88>
    6708:	str	r2, [sl]
    670c:	ldr	lr, [r4, #52]	; 0x34
    6710:	mov	r3, r7
    6714:	add	r1, sp, #44	; 0x2c
    6718:	mov	r0, r5
    671c:	ldr	ip, [r4, #56]	; 0x38
    6720:	ldr	r2, [sp, #48]	; 0x30
    6724:	str	lr, [sp, #56]	; 0x38
    6728:	ldr	r8, [r5, #60]	; 0x3c
    672c:	str	ip, [sp]
    6730:	blx	r8
    6734:	ldr	r3, [sp, #44]	; 0x2c
    6738:	str	r3, [fp]
    673c:	ldr	r2, [sp, #56]	; 0x38
    6740:	ldr	r1, [r4, #52]	; 0x34
    6744:	ldr	r0, [r4, #4]
    6748:	sub	r2, r2, r1
    674c:	blx	r6
    6750:	ldrd	r2, [sp, #44]	; 0x2c
    6754:	cmp	r2, r3
    6758:	bne	6708 <doContent+0xa84>
    675c:	b	5da4 <doContent+0x120>
    6760:	ldr	r3, [sp, #120]	; 0x78
    6764:	mov	r0, #13
    6768:	str	r3, [r6]
    676c:	b	5d6c <doContent+0xe8>
    6770:	ldrb	r0, [r2]
    6774:	ldr	r3, [r7, #28]
    6778:	cmp	r0, #0
    677c:	add	r3, r1, r3
    6780:	beq	6794 <doContent+0xb10>
    6784:	strb	r0, [r3], #1
    6788:	ldrb	r0, [r2, #1]!
    678c:	cmp	r0, #0
    6790:	bne	6784 <doContent+0xb00>
    6794:	ldrb	r1, [r4, #245]	; 0xf5
    6798:	ldr	r2, [r7, #20]
    679c:	cmp	r1, #0
    67a0:	cmpne	r2, #0
    67a4:	bne	6b60 <doContent+0xedc>
    67a8:	mov	r2, #0
    67ac:	strb	r2, [r3]
    67b0:	ldr	r1, [r7, #12]
    67b4:	ldr	r6, [r4, #64]	; 0x40
    67b8:	b	6474 <doContent+0x7f0>
    67bc:	ldr	r2, [r4, #88]	; 0x58
    67c0:	ldr	r3, [sp, #48]	; 0x30
    67c4:	cmp	r2, #0
    67c8:	beq	6198 <doContent+0x514>
    67cc:	mov	r1, r5
    67d0:	mov	r0, r4
    67d4:	ldr	r2, [sp, #44]	; 0x2c
    67d8:	bl	90 <reportDefault>
    67dc:	ldr	r3, [sp, #48]	; 0x30
    67e0:	b	6198 <doContent+0x514>
    67e4:	ldr	r3, [sp, #120]	; 0x78
    67e8:	mov	r0, #3
    67ec:	str	r3, [r6]
    67f0:	b	5d6c <doContent+0xe8>
    67f4:	ldr	r3, [r4, #120]	; 0x78
    67f8:	cmp	r3, #0
    67fc:	beq	64dc <doContent+0x858>
    6800:	mov	r8, #1
    6804:	strb	r8, [r7, #32]
    6808:	ldr	r3, [r4, #364]	; 0x16c
    680c:	str	r3, [sp, #28]
    6810:	ldr	r3, [r3, #156]	; 0x9c
    6814:	cmp	r3, #0
    6818:	beq	68f4 <doContent+0xc70>
    681c:	ldr	r2, [r4, #440]	; 0x1b8
    6820:	ldr	r3, [r4, #444]	; 0x1bc
    6824:	cmp	r3, r2
    6828:	beq	6c84 <doContent+0x1000>
    682c:	add	r1, r3, #1
    6830:	mov	r2, #61	; 0x3d
    6834:	str	r1, [r4, #444]	; 0x1bc
    6838:	strb	r2, [r3]
    683c:	ldr	r3, [sp, #28]
    6840:	ldrb	r2, [r4, #488]	; 0x1e8
    6844:	ldr	r3, [r3, #156]	; 0x9c
    6848:	cmp	r2, #0
    684c:	ldr	r8, [r3, #20]
    6850:	subne	r8, r8, #1
    6854:	cmp	r8, #0
    6858:	ble	68f0 <doContent+0xc6c>
    685c:	mov	r6, #0
    6860:	str	r5, [sp, #32]
    6864:	mov	r5, r8
    6868:	ldr	r9, [sp, #20]
    686c:	ldr	r8, [sp, #28]
    6870:	b	6898 <doContent+0xc14>
    6874:	ldr	r2, [r8, #156]	; 0x9c
    6878:	add	r0, r3, #1
    687c:	ldr	r2, [r2, #16]
    6880:	str	r0, [r4, #444]	; 0x1bc
    6884:	ldrb	r2, [r2, r6]
    6888:	add	r6, r6, #1
    688c:	cmp	r6, r5
    6890:	strb	r2, [r3]
    6894:	beq	68ec <doContent+0xc68>
    6898:	ldr	r2, [r4, #440]	; 0x1b8
    689c:	ldr	r3, [r4, #444]	; 0x1bc
    68a0:	cmp	r3, r2
    68a4:	bne	6874 <doContent+0xbf0>
    68a8:	mov	r0, r9
    68ac:	bl	1238 <poolGrow>
    68b0:	cmp	r0, #0
    68b4:	beq	68dc <doContent+0xc58>
    68b8:	ldr	r3, [r4, #444]	; 0x1bc
    68bc:	b	6874 <doContent+0xbf0>
    68c0:	mov	r2, r3
    68c4:	mov	r1, r7
    68c8:	mov	r0, r4
    68cc:	bl	5b10 <processInternalEntity>
    68d0:	cmp	r0, #0
    68d4:	beq	5da0 <doContent+0x11c>
    68d8:	b	5d6c <doContent+0xe8>
    68dc:	mov	r3, #0
    68e0:	mov	r0, #1
    68e4:	strb	r3, [r7, #32]
    68e8:	b	5d6c <doContent+0xe8>
    68ec:	ldr	r5, [sp, #32]
    68f0:	mov	ip, #1
    68f4:	ldr	r3, [sp, #28]
    68f8:	mov	r6, ip
    68fc:	strd	sl, [sp, #32]
    6900:	ldr	r0, [r4, #440]	; 0x1b8
    6904:	str	r5, [sp, #40]	; 0x28
    6908:	ldr	r1, [r4, #444]	; 0x1bc
    690c:	ldr	r8, [r3, #60]	; 0x3c
    6910:	mov	lr, r0
    6914:	mov	ip, r0
    6918:	ldr	r3, [r3, #68]	; 0x44
    691c:	mov	r0, r1
    6920:	add	r9, r8, r3, lsl #2
    6924:	mov	r3, r1
    6928:	mov	r5, r9
    692c:	ldr	r9, [sp, #20]
    6930:	b	6940 <doContent+0xcbc>
    6934:	ldr	sl, [r8], #4
    6938:	cmp	sl, #0
    693c:	bne	6a08 <doContent+0xd84>
    6940:	cmp	r5, r8
    6944:	bne	6934 <doContent+0xcb0>
    6948:	add	r3, sp, #28
    694c:	ldr	r5, [sp, #40]	; 0x28
    6950:	mov	r1, r0
    6954:	ldm	r3, {r3, sl, fp}
    6958:	mov	r0, ip
    695c:	mov	ip, r6
    6960:	ldr	r9, [r3]
    6964:	ldr	r8, [r3, #8]
    6968:	mov	r3, r1
    696c:	mov	r6, r9
    6970:	add	r8, r9, r8, lsl #2
    6974:	mov	r9, r8
    6978:	cmp	r9, r6
    697c:	beq	69a8 <doContent+0xd24>
    6980:	mov	r2, r6
    6984:	ldr	r8, [r2], #4
    6988:	cmp	r8, #0
    698c:	beq	69a0 <doContent+0xd1c>
    6990:	b	6be4 <doContent+0xf60>
    6994:	ldr	r8, [r2], #4
    6998:	cmp	r8, #0
    699c:	bne	6be4 <doContent+0xf60>
    69a0:	cmp	r9, r2
    69a4:	bne	6994 <doContent+0xd10>
    69a8:	cmp	r3, r0
    69ac:	mov	r1, r3
    69b0:	beq	6cf4 <doContent+0x1070>
    69b4:	mov	r3, #0
    69b8:	add	r2, r1, #1
    69bc:	str	r2, [r4, #444]	; 0x1bc
    69c0:	strb	r3, [r1]
    69c4:	ldr	r1, [r4, #448]	; 0x1c0
    69c8:	strb	r3, [r7, #32]
    69cc:	cmp	r1, r3
    69d0:	beq	637c <doContent+0x6f8>
    69d4:	ldr	r3, [r7, #16]
    69d8:	ldr	ip, [r7, #24]
    69dc:	ldr	r2, [r7, #20]
    69e0:	ldr	r6, [r4, #120]	; 0x78
    69e4:	ldr	r0, [r4, #124]	; 0x7c
    69e8:	str	ip, [sp]
    69ec:	blx	r6
    69f0:	cmp	r0, #0
    69f4:	beq	6cec <doContent+0x1068>
    69f8:	ldr	r2, [r4, #448]	; 0x1c0
    69fc:	ldr	r3, [sp, #48]	; 0x30
    6a00:	str	r2, [r4, #444]	; 0x1bc
    6a04:	b	5da4 <doContent+0x120>
    6a08:	ldr	r2, [sl, #4]
    6a0c:	cmp	r2, #0
    6a10:	beq	6940 <doContent+0xcbc>
    6a14:	cmp	r6, #0
    6a18:	beq	6a44 <doContent+0xdc0>
    6a1c:	cmp	r0, ip
    6a20:	beq	6bcc <doContent+0xf48>
    6a24:	add	r0, r3, #1
    6a28:	mov	r2, #12
    6a2c:	str	r0, [r4, #444]	; 0x1bc
    6a30:	strb	r2, [r3]
    6a34:	ldr	ip, [r4, #440]	; 0x1b8
    6a38:	ldr	r3, [r4, #444]	; 0x1bc
    6a3c:	mov	lr, ip
    6a40:	mov	r0, r3
    6a44:	ldr	r6, [sl]
    6a48:	ldrb	r2, [r6]
    6a4c:	cmp	r2, #0
    6a50:	bne	6a7c <doContent+0xdf8>
    6a54:	b	6aa4 <doContent+0xe20>
    6a58:	add	r2, r3, #1
    6a5c:	str	r2, [r4, #444]	; 0x1bc
    6a60:	ldrb	r2, [r6]
    6a64:	strb	r2, [r3]
    6a68:	ldrb	r3, [r6, #1]!
    6a6c:	cmp	r3, #0
    6a70:	beq	6a9c <doContent+0xe18>
    6a74:	ldr	lr, [r4, #440]	; 0x1b8
    6a78:	ldr	r3, [r4, #444]	; 0x1bc
    6a7c:	cmp	lr, r3
    6a80:	bne	6a58 <doContent+0xdd4>
    6a84:	mov	r0, r9
    6a88:	bl	1238 <poolGrow>
    6a8c:	cmp	r0, #0
    6a90:	beq	68dc <doContent+0xc58>
    6a94:	ldr	r3, [r4, #444]	; 0x1bc
    6a98:	b	6a58 <doContent+0xdd4>
    6a9c:	ldr	ip, [r4, #440]	; 0x1b8
    6aa0:	ldr	r0, [r4, #444]	; 0x1bc
    6aa4:	cmp	r0, ip
    6aa8:	beq	6bb4 <doContent+0xf30>
    6aac:	add	r3, r0, #1
    6ab0:	str	r3, [r4, #444]	; 0x1bc
    6ab4:	mov	r3, #61	; 0x3d
    6ab8:	strb	r3, [r0]
    6abc:	ldr	r3, [sl, #4]
    6ac0:	ldrb	r2, [r4, #488]	; 0x1e8
    6ac4:	ldr	lr, [r4, #440]	; 0x1b8
    6ac8:	ldr	fp, [r3, #20]
    6acc:	cmp	r2, #0
    6ad0:	ldr	r3, [r4, #444]	; 0x1bc
    6ad4:	mov	ip, lr
    6ad8:	subne	fp, fp, #1
    6adc:	cmp	fp, #0
    6ae0:	mov	r0, r3
    6ae4:	ble	6c7c <doContent+0xff8>
    6ae8:	mov	r6, #0
    6aec:	b	6b1c <doContent+0xe98>
    6af0:	ldr	r2, [sl, #4]
    6af4:	add	r1, r3, #1
    6af8:	ldr	r2, [r2, #16]
    6afc:	str	r1, [r4, #444]	; 0x1bc
    6b00:	ldrb	r2, [r2, r6]
    6b04:	add	r6, r6, #1
    6b08:	cmp	r6, fp
    6b0c:	strb	r2, [r3]
    6b10:	beq	6b3c <doContent+0xeb8>
    6b14:	ldr	lr, [r4, #440]	; 0x1b8
    6b18:	ldr	r3, [r4, #444]	; 0x1bc
    6b1c:	cmp	r3, lr
    6b20:	bne	6af0 <doContent+0xe6c>
    6b24:	mov	r0, r9
    6b28:	bl	1238 <poolGrow>
    6b2c:	cmp	r0, #0
    6b30:	beq	68dc <doContent+0xc58>
    6b34:	ldr	r3, [r4, #444]	; 0x1bc
    6b38:	b	6af0 <doContent+0xe6c>
    6b3c:	ldr	ip, [r4, #440]	; 0x1b8
    6b40:	mov	r6, #1
    6b44:	ldr	r3, [r4, #444]	; 0x1bc
    6b48:	mov	lr, ip
    6b4c:	mov	r0, r3
    6b50:	b	6940 <doContent+0xcbc>
    6b54:	mov	r0, #7
    6b58:	str	r8, [sl]
    6b5c:	b	5d6c <doContent+0xe8>
    6b60:	ldrb	r1, [r4, #488]	; 0x1e8
    6b64:	strb	r1, [r3], #1
    6b68:	ldrb	r1, [r2]
    6b6c:	cmp	r1, #0
    6b70:	beq	67a8 <doContent+0xb24>
    6b74:	strb	r1, [r3], #1
    6b78:	ldrb	r1, [r2, #1]!
    6b7c:	cmp	r1, #0
    6b80:	bne	6b74 <doContent+0xef0>
    6b84:	b	67a8 <doContent+0xb24>
    6b88:	ldr	r3, [r4, #128]	; 0x80
    6b8c:	cmp	r3, #0
    6b90:	beq	64dc <doContent+0x858>
    6b94:	mov	r2, r0
    6b98:	mov	r1, r8
    6b9c:	ldr	r0, [r4, #4]
    6ba0:	blx	r3
    6ba4:	ldr	r3, [sp, #48]	; 0x30
    6ba8:	b	5da4 <doContent+0x120>
    6bac:	mov	r0, #14
    6bb0:	b	5d6c <doContent+0xe8>
    6bb4:	mov	r0, r9
    6bb8:	bl	1238 <poolGrow>
    6bbc:	cmp	r0, #0
    6bc0:	beq	68dc <doContent+0xc58>
    6bc4:	ldr	r0, [r4, #444]	; 0x1bc
    6bc8:	b	6aac <doContent+0xe28>
    6bcc:	mov	r0, r9
    6bd0:	bl	1238 <poolGrow>
    6bd4:	cmp	r0, #0
    6bd8:	beq	68dc <doContent+0xc58>
    6bdc:	ldr	r3, [r4, #444]	; 0x1bc
    6be0:	b	6a24 <doContent+0xda0>
    6be4:	ldrb	r1, [r8, #32]
    6be8:	mov	r6, r2
    6bec:	cmp	r1, #0
    6bf0:	beq	6978 <doContent+0xcf4>
    6bf4:	cmp	ip, #0
    6bf8:	beq	6c1c <doContent+0xf98>
    6bfc:	cmp	r3, r0
    6c00:	beq	6cc4 <doContent+0x1040>
    6c04:	add	r0, r3, #1
    6c08:	mov	r1, #12
    6c0c:	str	r0, [r4, #444]	; 0x1bc
    6c10:	strb	r1, [r3]
    6c14:	ldr	r0, [r4, #440]	; 0x1b8
    6c18:	ldr	r3, [r4, #444]	; 0x1bc
    6c1c:	ldr	r8, [r8]
    6c20:	ldrb	r1, [r8]
    6c24:	cmp	r1, #0
    6c28:	bne	6c54 <doContent+0xfd0>
    6c2c:	b	6c74 <doContent+0xff0>
    6c30:	add	r2, r3, #1
    6c34:	str	r2, [r4, #444]	; 0x1bc
    6c38:	ldrb	r2, [r8]
    6c3c:	strb	r2, [r3]
    6c40:	ldrb	r3, [r8, #1]!
    6c44:	ldr	r0, [r4, #440]	; 0x1b8
    6c48:	cmp	r3, #0
    6c4c:	ldr	r3, [r4, #444]	; 0x1bc
    6c50:	beq	6c74 <doContent+0xff0>
    6c54:	cmp	r3, r0
    6c58:	bne	6c30 <doContent+0xfac>
    6c5c:	ldr	r0, [sp, #20]
    6c60:	bl	1238 <poolGrow>
    6c64:	cmp	r0, #0
    6c68:	beq	68dc <doContent+0xc58>
    6c6c:	ldr	r3, [r4, #444]	; 0x1bc
    6c70:	b	6c30 <doContent+0xfac>
    6c74:	mov	ip, #1
    6c78:	b	6978 <doContent+0xcf4>
    6c7c:	mov	r6, #1
    6c80:	b	6940 <doContent+0xcbc>
    6c84:	ldr	r0, [sp, #20]
    6c88:	bl	1238 <poolGrow>
    6c8c:	cmp	r0, #0
    6c90:	beq	6cdc <doContent+0x1058>
    6c94:	ldr	r3, [r4, #444]	; 0x1bc
    6c98:	b	682c <doContent+0xba8>
    6c9c:	mov	r0, r7
    6ca0:	ldr	r3, [r4, #20]
    6ca4:	blx	r3
    6ca8:	b	637c <doContent+0x6f8>
    6cac:	mov	r0, #11
    6cb0:	b	5d6c <doContent+0xe8>
    6cb4:	mov	r0, #15
    6cb8:	b	5d6c <doContent+0xe8>
    6cbc:	mov	r0, #12
    6cc0:	b	5d6c <doContent+0xe8>
    6cc4:	ldr	r0, [sp, #20]
    6cc8:	bl	1238 <poolGrow>
    6ccc:	cmp	r0, #0
    6cd0:	beq	68dc <doContent+0xc58>
    6cd4:	ldr	r3, [r4, #444]	; 0x1bc
    6cd8:	b	6c04 <doContent+0xf80>
    6cdc:	mov	r3, r0
    6ce0:	mov	r0, #1
    6ce4:	strb	r3, [r7, #32]
    6ce8:	b	5d6c <doContent+0xe8>
    6cec:	mov	r0, #21
    6cf0:	b	5d6c <doContent+0xe8>
    6cf4:	ldr	r0, [sp, #20]
    6cf8:	bl	1238 <poolGrow>
    6cfc:	cmp	r0, #0
    6d00:	beq	6cdc <doContent+0x1058>
    6d04:	ldr	r1, [r4, #444]	; 0x1bc
    6d08:	b	69b4 <doContent+0xd30>

00006d0c <contentProcessor>:
    6d0c:	str	r4, [sp, #-8]!
    6d10:	mov	r4, r0
    6d14:	str	lr, [sp, #4]
    6d18:	sub	sp, sp, #16
    6d1c:	str	r2, [sp]
    6d20:	ldrb	ip, [r0, #500]	; 0x1f4
    6d24:	str	r3, [sp, #4]
    6d28:	mov	r3, r1
    6d2c:	mov	r1, #0
    6d30:	ldr	r2, [r0, #152]	; 0x98
    6d34:	clz	ip, ip
    6d38:	lsr	ip, ip, #5
    6d3c:	str	ip, [sp, #8]
    6d40:	bl	5c84 <doContent>
    6d44:	cmp	r0, #0
    6d48:	beq	6d5c <contentProcessor+0x50>
    6d4c:	add	sp, sp, #16
    6d50:	ldr	r4, [sp]
    6d54:	add	sp, sp, #4
    6d58:	pop	{pc}		; (ldr pc, [sp], #4)
    6d5c:	add	r0, r4, #16
    6d60:	ldr	r1, [r4, #372]	; 0x174
    6d64:	bl	2f04 <storeRawNames.isra.9>
    6d68:	clz	r0, r0
    6d6c:	lsr	r0, r0, #5
    6d70:	add	sp, sp, #16
    6d74:	ldr	r4, [sp]
    6d78:	add	sp, sp, #4
    6d7c:	pop	{pc}		; (ldr pc, [sp], #4)

00006d80 <externalEntityContentProcessor>:
    6d80:	str	r4, [sp, #-8]!
    6d84:	mov	r4, r0
    6d88:	str	lr, [sp, #4]
    6d8c:	sub	sp, sp, #16
    6d90:	str	r2, [sp]
    6d94:	ldrb	ip, [r0, #500]	; 0x1f4
    6d98:	str	r3, [sp, #4]
    6d9c:	mov	r3, r1
    6da0:	mov	r1, #1
    6da4:	ldr	r2, [r0, #152]	; 0x98
    6da8:	clz	ip, ip
    6dac:	lsr	ip, ip, #5
    6db0:	str	ip, [sp, #8]
    6db4:	bl	5c84 <doContent>
    6db8:	cmp	r0, #0
    6dbc:	beq	6dd0 <externalEntityContentProcessor+0x50>
    6dc0:	add	sp, sp, #16
    6dc4:	ldr	r4, [sp]
    6dc8:	add	sp, sp, #4
    6dcc:	pop	{pc}		; (ldr pc, [sp], #4)
    6dd0:	add	r0, r4, #16
    6dd4:	ldr	r1, [r4, #372]	; 0x174
    6dd8:	bl	2f04 <storeRawNames.isra.9>
    6ddc:	clz	r0, r0
    6de0:	lsr	r0, r0, #5
    6de4:	add	sp, sp, #16
    6de8:	ldr	r4, [sp]
    6dec:	add	sp, sp, #4
    6df0:	pop	{pc}		; (ldr pc, [sp], #4)

00006df4 <cdataSectionProcessor>:
    6df4:	strd	r4, [sp, #-16]!
    6df8:	mov	r5, r2
    6dfc:	mov	r4, r0
    6e00:	str	r6, [sp, #8]
    6e04:	mov	r6, r3
    6e08:	mov	r3, r5
    6e0c:	str	lr, [sp, #12]
    6e10:	sub	sp, sp, #16
    6e14:	ldrb	ip, [r0, #500]	; 0x1f4
    6e18:	add	r2, sp, #12
    6e1c:	str	r6, [sp]
    6e20:	str	r1, [sp, #12]
    6e24:	ldr	r1, [r0, #152]	; 0x98
    6e28:	clz	ip, ip
    6e2c:	lsr	ip, ip, #5
    6e30:	str	ip, [sp, #4]
    6e34:	bl	160 <doCdataSection>
    6e38:	cmp	r0, #0
    6e3c:	bne	6e74 <cdataSectionProcessor+0x80>
    6e40:	ldr	r1, [sp, #12]
    6e44:	cmp	r1, #0
    6e48:	beq	6e74 <cdataSectionProcessor+0x80>
    6e4c:	ldr	r3, [r4, #492]	; 0x1ec
    6e50:	cmp	r3, #0
    6e54:	beq	6e88 <cdataSectionProcessor+0x94>
    6e58:	movw	r0, #0
    6e5c:	movt	r0, #0
    6e60:	mov	r3, r6
    6e64:	mov	r2, r5
    6e68:	str	r0, [r4, #288]	; 0x120
    6e6c:	mov	r0, r4
    6e70:	bl	6d80 <externalEntityContentProcessor>
    6e74:	add	sp, sp, #16
    6e78:	ldrd	r4, [sp]
    6e7c:	ldr	r6, [sp, #8]
    6e80:	add	sp, sp, #12
    6e84:	pop	{pc}		; (ldr pc, [sp], #4)
    6e88:	movw	r0, #0
    6e8c:	movt	r0, #0
    6e90:	mov	r3, r6
    6e94:	mov	r2, r5
    6e98:	str	r0, [r4, #288]	; 0x120
    6e9c:	mov	r0, r4
    6ea0:	bl	6d0c <contentProcessor>
    6ea4:	b	6e74 <cdataSectionProcessor+0x80>

00006ea8 <externalEntityInitProcessor3>:
    6ea8:	ldr	ip, [r0, #152]	; 0x98
    6eac:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6eb0:	mov	r4, r0
    6eb4:	mov	r5, r1
    6eb8:	strd	r6, [sp, #8]
    6ebc:	mov	r6, r3
    6ec0:	mov	r7, r2
    6ec4:	str	r8, [sp, #16]
    6ec8:	str	lr, [sp, #20]
    6ecc:	sub	sp, sp, #8
    6ed0:	add	r3, sp, #4
    6ed4:	mov	r0, ip
    6ed8:	str	r1, [r4, #296]	; 0x128
    6edc:	str	r1, [sp, #4]
    6ee0:	ldr	r8, [ip, #4]
    6ee4:	blx	r8
    6ee8:	ldr	r3, [sp, #4]
    6eec:	cmn	r0, #1
    6ef0:	str	r3, [r4, #300]	; 0x12c
    6ef4:	beq	6f48 <externalEntityInitProcessor3+0xa0>
    6ef8:	cmp	r0, #12
    6efc:	beq	6f78 <externalEntityInitProcessor3+0xd0>
    6f00:	cmn	r0, #2
    6f04:	beq	6f64 <externalEntityInitProcessor3+0xbc>
    6f08:	movw	r0, #0
    6f0c:	movt	r0, #0
    6f10:	mov	ip, #1
    6f14:	mov	r3, r6
    6f18:	mov	r2, r7
    6f1c:	mov	r1, r5
    6f20:	str	r0, [r4, #288]	; 0x120
    6f24:	mov	r0, r4
    6f28:	str	ip, [r4, #320]	; 0x140
    6f2c:	bl	6d80 <externalEntityContentProcessor>
    6f30:	add	sp, sp, #8
    6f34:	ldrd	r4, [sp]
    6f38:	ldrd	r6, [sp, #8]
    6f3c:	ldr	r8, [sp, #16]
    6f40:	add	sp, sp, #20
    6f44:	pop	{pc}		; (ldr pc, [sp], #4)
    6f48:	ldrb	r3, [r4, #500]	; 0x1f4
    6f4c:	cmp	r3, #0
    6f50:	movne	r0, #5
    6f54:	bne	6f30 <externalEntityInitProcessor3+0x88>
    6f58:	mov	r0, #0
    6f5c:	str	r5, [r6]
    6f60:	b	6f30 <externalEntityInitProcessor3+0x88>
    6f64:	ldrb	r3, [r4, #500]	; 0x1f4
    6f68:	cmp	r3, #0
    6f6c:	movne	r0, #6
    6f70:	bne	6f30 <externalEntityInitProcessor3+0x88>
    6f74:	b	6f58 <externalEntityInitProcessor3+0xb0>
    6f78:	mov	r2, r5
    6f7c:	mov	r1, #1
    6f80:	mov	r0, r4
    6f84:	bl	1544 <processXmlDecl>
    6f88:	cmp	r0, #0
    6f8c:	bne	6f30 <externalEntityInitProcessor3+0x88>
    6f90:	ldr	r3, [r4, #496]	; 0x1f0
    6f94:	cmp	r3, #2
    6f98:	moveq	r0, #35	; 0x23
    6f9c:	beq	6f30 <externalEntityInitProcessor3+0x88>
    6fa0:	cmp	r3, #3
    6fa4:	bne	6fb4 <externalEntityInitProcessor3+0x10c>
    6fa8:	ldr	r3, [sp, #4]
    6fac:	str	r3, [r6]
    6fb0:	b	6f30 <externalEntityInitProcessor3+0x88>
    6fb4:	ldr	r5, [sp, #4]
    6fb8:	b	6f08 <externalEntityInitProcessor3+0x60>

00006fbc <externalEntityInitProcessor2>:
    6fbc:	ldr	ip, [r0, #152]	; 0x98
    6fc0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6fc4:	mov	r4, r0
    6fc8:	mov	r5, r1
    6fcc:	strd	r6, [sp, #8]
    6fd0:	mov	r7, r3
    6fd4:	str	r8, [sp, #16]
    6fd8:	mov	r8, r2
    6fdc:	str	lr, [sp, #20]
    6fe0:	sub	sp, sp, #8
    6fe4:	mov	r0, ip
    6fe8:	add	r3, sp, #4
    6fec:	ldr	r6, [ip, #4]
    6ff0:	str	r1, [sp, #4]
    6ff4:	blx	r6
    6ff8:	cmn	r0, #1
    6ffc:	beq	7048 <externalEntityInitProcessor2+0x8c>
    7000:	cmp	r0, #14
    7004:	beq	7080 <externalEntityInitProcessor2+0xc4>
    7008:	cmn	r0, #2
    700c:	beq	7068 <externalEntityInitProcessor2+0xac>
    7010:	movw	r0, #0
    7014:	movt	r0, #0
    7018:	mov	r3, r7
    701c:	mov	r2, r8
    7020:	mov	r1, r5
    7024:	str	r0, [r4, #288]	; 0x120
    7028:	mov	r0, r4
    702c:	bl	6ea8 <externalEntityInitProcessor3>
    7030:	add	sp, sp, #8
    7034:	ldrd	r4, [sp]
    7038:	ldrd	r6, [sp, #8]
    703c:	ldr	r8, [sp, #16]
    7040:	add	sp, sp, #20
    7044:	pop	{pc}		; (ldr pc, [sp], #4)
    7048:	ldrb	r3, [r4, #500]	; 0x1f4
    704c:	cmp	r3, #0
    7050:	movne	r0, #5
    7054:	strne	r5, [r4, #296]	; 0x128
    7058:	bne	7030 <externalEntityInitProcessor2+0x74>
    705c:	mov	r0, #0
    7060:	str	r5, [r7]
    7064:	b	7030 <externalEntityInitProcessor2+0x74>
    7068:	ldrb	r3, [r4, #500]	; 0x1f4
    706c:	cmp	r3, #0
    7070:	movne	r0, #6
    7074:	strne	r5, [r4, #296]	; 0x128
    7078:	bne	7030 <externalEntityInitProcessor2+0x74>
    707c:	b	705c <externalEntityInitProcessor2+0xa0>
    7080:	ldr	r5, [sp, #4]
    7084:	cmp	r5, r8
    7088:	bne	7010 <externalEntityInitProcessor2+0x54>
    708c:	ldrb	r0, [r4, #500]	; 0x1f4
    7090:	cmp	r0, #0
    7094:	bne	7010 <externalEntityInitProcessor2+0x54>
    7098:	b	7060 <externalEntityInitProcessor2+0xa4>

0000709c <prologProcessor>:
    709c:	ldr	ip, [r0, #152]	; 0x98
    70a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    70a4:	mov	r4, r0
    70a8:	mov	r5, r1
    70ac:	strd	r6, [sp, #8]
    70b0:	mov	r6, r3
    70b4:	mov	r7, r2
    70b8:	str	r8, [sp, #16]
    70bc:	str	lr, [sp, #20]
    70c0:	sub	sp, sp, #24
    70c4:	add	r3, sp, #20
    70c8:	mov	r0, ip
    70cc:	ldr	r8, [ip]
    70d0:	str	r1, [sp, #20]
    70d4:	blx	r8
    70d8:	ldrb	ip, [r4, #500]	; 0x1f4
    70dc:	mov	r3, r7
    70e0:	mov	r2, r5
    70e4:	str	r0, [sp]
    70e8:	mov	r0, r4
    70ec:	ldr	lr, [sp, #20]
    70f0:	str	r6, [sp, #8]
    70f4:	ldr	r1, [r4, #152]	; 0x98
    70f8:	clz	ip, ip
    70fc:	lsr	ip, ip, #5
    7100:	str	lr, [sp, #4]
    7104:	str	ip, [sp, #12]
    7108:	bl	4008 <doProlog>
    710c:	add	sp, sp, #24
    7110:	ldrd	r4, [sp]
    7114:	ldrd	r6, [sp, #8]
    7118:	ldr	r8, [sp, #16]
    711c:	add	sp, sp, #20
    7120:	pop	{pc}		; (ldr pc, [sp], #4)

00007124 <ignoreSectionProcessor>:
    7124:	strd	r4, [sp, #-16]!
    7128:	mov	r5, r2
    712c:	mov	r4, r0
    7130:	str	r6, [sp, #8]
    7134:	mov	r6, r3
    7138:	mov	r3, r5
    713c:	str	lr, [sp, #12]
    7140:	sub	sp, sp, #16
    7144:	ldrb	ip, [r0, #500]	; 0x1f4
    7148:	add	r2, sp, #12
    714c:	str	r6, [sp]
    7150:	str	r1, [sp, #12]
    7154:	ldr	r1, [r0, #152]	; 0x98
    7158:	clz	ip, ip
    715c:	lsr	ip, ip, #5
    7160:	str	ip, [sp, #4]
    7164:	bl	480 <doIgnoreSection>
    7168:	cmp	r0, #0
    716c:	bne	717c <ignoreSectionProcessor+0x58>
    7170:	ldr	r1, [sp, #12]
    7174:	cmp	r1, #0
    7178:	bne	7190 <ignoreSectionProcessor+0x6c>
    717c:	add	sp, sp, #16
    7180:	ldrd	r4, [sp]
    7184:	ldr	r6, [sp, #8]
    7188:	add	sp, sp, #12
    718c:	pop	{pc}		; (ldr pc, [sp], #4)
    7190:	movw	r0, #0
    7194:	movt	r0, #0
    7198:	mov	r3, r6
    719c:	mov	r2, r5
    71a0:	str	r0, [r4, #288]	; 0x120
    71a4:	mov	r0, r4
    71a8:	bl	709c <prologProcessor>
    71ac:	b	717c <ignoreSectionProcessor+0x58>

000071b0 <externalParEntProcessor>:
    71b0:	ldr	ip, [r0, #152]	; 0x98
    71b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
    71b8:	mov	r4, r0
    71bc:	mov	r5, r1
    71c0:	strd	r6, [sp, #8]
    71c4:	mov	r7, r3
    71c8:	mov	r6, r2
    71cc:	str	r8, [sp, #16]
    71d0:	str	lr, [sp, #20]
    71d4:	sub	sp, sp, #24
    71d8:	mov	r0, ip
    71dc:	add	r3, sp, #20
    71e0:	ldr	r8, [ip]
    71e4:	str	r1, [sp, #20]
    71e8:	blx	r8
    71ec:	cmp	r0, #0
    71f0:	ble	7284 <externalParEntProcessor+0xd4>
    71f4:	cmp	r0, #14
    71f8:	ldr	r8, [sp, #20]
    71fc:	ldr	r1, [r4, #152]	; 0x98
    7200:	beq	7250 <externalParEntProcessor+0xa0>
    7204:	ldrb	ip, [r4, #500]	; 0x1f4
    7208:	clz	ip, ip
    720c:	lsr	ip, ip, #5
    7210:	movw	lr, #0
    7214:	movt	lr, #0
    7218:	stm	sp, {r0, r8}
    721c:	mov	r3, r6
    7220:	mov	r2, r5
    7224:	str	r7, [sp, #8]
    7228:	mov	r0, r4
    722c:	str	ip, [sp, #12]
    7230:	str	lr, [r4, #288]	; 0x120
    7234:	bl	4008 <doProlog>
    7238:	add	sp, sp, #24
    723c:	ldrd	r4, [sp]
    7240:	ldrd	r6, [sp, #8]
    7244:	ldr	r8, [sp, #16]
    7248:	add	sp, sp, #20
    724c:	pop	{pc}		; (ldr pc, [sp], #4)
    7250:	mov	r0, r1
    7254:	add	r3, sp, #20
    7258:	ldr	r5, [r1]
    725c:	mov	r2, r6
    7260:	mov	r1, r8
    7264:	blx	r5
    7268:	ldrb	ip, [r4, #500]	; 0x1f4
    726c:	mov	r5, r8
    7270:	ldr	r8, [sp, #20]
    7274:	ldr	r1, [r4, #152]	; 0x98
    7278:	clz	ip, ip
    727c:	lsr	ip, ip, #5
    7280:	b	7210 <externalParEntProcessor+0x60>
    7284:	ldrb	ip, [r4, #500]	; 0x1f4
    7288:	cmp	r0, #0
    728c:	moveq	r3, #0
    7290:	clz	ip, ip
    7294:	lsr	ip, ip, #5
    7298:	movne	r3, ip
    729c:	cmp	r3, #0
    72a0:	movne	r0, #0
    72a4:	strne	r5, [r7]
    72a8:	bne	7238 <externalParEntProcessor+0x88>
    72ac:	cmn	r0, #1
    72b0:	moveq	r0, #5
    72b4:	beq	7238 <externalParEntProcessor+0x88>
    72b8:	cmp	r0, #0
    72bc:	moveq	r0, #4
    72c0:	beq	7238 <externalParEntProcessor+0x88>
    72c4:	cmn	r0, #2
    72c8:	moveq	r0, #6
    72cc:	beq	7238 <externalParEntProcessor+0x88>
    72d0:	ldr	r8, [sp, #20]
    72d4:	ldr	r1, [r4, #152]	; 0x98
    72d8:	b	7210 <externalParEntProcessor+0x60>

000072dc <internalEntityProcessor>:
    72dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
    72e0:	strd	r6, [sp, #8]
    72e4:	strd	r8, [sp, #16]
    72e8:	ldr	r8, [r0, #308]	; 0x134
    72ec:	strd	sl, [sp, #24]
    72f0:	str	lr, [sp, #32]
    72f4:	sub	sp, sp, #36	; 0x24
    72f8:	cmp	r8, #0
    72fc:	beq	74b0 <internalEntityProcessor+0x1d4>
    7300:	ldr	r5, [r8, #12]
    7304:	mov	fp, r2
    7308:	mov	r4, r0
    730c:	str	r3, [sp, #20]
    7310:	mov	r9, r1
    7314:	ldr	r2, [r0, #236]	; 0xec
    7318:	ldrb	ip, [r5, #33]	; 0x21
    731c:	ldrd	r6, [r5, #4]
    7320:	ldr	r3, [r5, #12]
    7324:	cmp	ip, #0
    7328:	add	r7, r6, r7
    732c:	add	r6, r6, r3
    7330:	beq	7440 <internalEntityProcessor+0x164>
    7334:	ldr	r3, [r2]
    7338:	add	sl, sp, #28
    733c:	mov	r0, r2
    7340:	mov	r1, r6
    7344:	mov	r2, r7
    7348:	mov	ip, r3
    734c:	mov	r3, sl
    7350:	blx	ip
    7354:	ldr	ip, [sp, #28]
    7358:	mov	r1, #0
    735c:	mov	r2, r6
    7360:	mov	r3, r7
    7364:	str	r0, [sp]
    7368:	mov	r0, r4
    736c:	str	sl, [sp, #8]
    7370:	str	r1, [sp, #12]
    7374:	ldr	r1, [r4, #236]	; 0xec
    7378:	str	ip, [sp, #4]
    737c:	bl	4008 <doProlog>
    7380:	cmp	r0, #0
    7384:	bne	7424 <internalEntityProcessor+0x148>
    7388:	ldr	r3, [sp, #28]
    738c:	cmp	r3, r7
    7390:	beq	73a0 <internalEntityProcessor+0xc4>
    7394:	ldr	r2, [r4, #496]	; 0x1f0
    7398:	cmp	r2, #3
    739c:	beq	74a0 <internalEntityProcessor+0x1c4>
    73a0:	mov	r3, #0
    73a4:	strb	r3, [r5, #32]
    73a8:	ldr	r2, [r8, #8]
    73ac:	ldr	r0, [r4, #152]	; 0x98
    73b0:	ldr	r3, [r4, #312]	; 0x138
    73b4:	str	r2, [r4, #308]	; 0x134
    73b8:	str	r3, [r8, #8]
    73bc:	str	r8, [r4, #312]	; 0x138
    73c0:	ldrb	r3, [r5, #33]	; 0x21
    73c4:	cmp	r3, #0
    73c8:	beq	7458 <internalEntityProcessor+0x17c>
    73cc:	movw	r1, #0
    73d0:	movt	r1, #0
    73d4:	ldr	r5, [r0]
    73d8:	mov	r3, sl
    73dc:	mov	r2, fp
    73e0:	str	r1, [r4, #288]	; 0x120
    73e4:	mov	r1, r9
    73e8:	blx	r5
    73ec:	ldrb	ip, [r4, #500]	; 0x1f4
    73f0:	mov	r3, fp
    73f4:	mov	r2, r9
    73f8:	str	r0, [sp]
    73fc:	mov	r0, r4
    7400:	ldr	r1, [sp, #20]
    7404:	ldr	lr, [sp, #28]
    7408:	clz	ip, ip
    740c:	lsr	ip, ip, #5
    7410:	str	r1, [sp, #8]
    7414:	ldr	r1, [r4, #152]	; 0x98
    7418:	str	lr, [sp, #4]
    741c:	str	ip, [sp, #12]
    7420:	bl	4008 <doProlog>
    7424:	add	sp, sp, #36	; 0x24
    7428:	ldrd	r4, [sp]
    742c:	ldrd	r6, [sp, #8]
    7430:	ldrd	r8, [sp, #16]
    7434:	ldrd	sl, [sp, #24]
    7438:	add	sp, sp, #32
    743c:	pop	{pc}		; (ldr pc, [sp], #4)
    7440:	add	sl, sp, #28
    7444:	mov	r3, r6
    7448:	ldr	r1, [r8, #16]
    744c:	stm	sp, {r7, sl, ip}
    7450:	bl	5c84 <doContent>
    7454:	b	7380 <internalEntityProcessor+0xa4>
    7458:	ldrb	ip, [r4, #500]	; 0x1f4
    745c:	mov	r2, r0
    7460:	movw	lr, #0
    7464:	movt	lr, #0
    7468:	str	fp, [sp]
    746c:	mov	r3, r9
    7470:	ldr	r1, [r4, #492]	; 0x1ec
    7474:	ldr	r0, [sp, #20]
    7478:	clz	ip, ip
    747c:	lsr	ip, ip, #5
    7480:	adds	r1, r1, #0
    7484:	movne	r1, #1
    7488:	str	r0, [sp, #4]
    748c:	mov	r0, r4
    7490:	str	lr, [r4, #288]	; 0x120
    7494:	str	ip, [sp, #8]
    7498:	bl	5c84 <doContent>
    749c:	b	7424 <internalEntityProcessor+0x148>
    74a0:	ldr	r2, [r5, #4]
    74a4:	sub	r3, r3, r2
    74a8:	str	r3, [r5, #12]
    74ac:	b	7424 <internalEntityProcessor+0x148>
    74b0:	mov	r0, #23
    74b4:	b	7424 <internalEntityProcessor+0x148>

000074b8 <externalEntityInitProcessor>:
    74b8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    74bc:	mov	r5, r1
    74c0:	mov	r4, r0
    74c4:	strd	r6, [sp, #8]
    74c8:	mov	r6, r2
    74cc:	mov	r7, r3
    74d0:	str	r8, [sp, #16]
    74d4:	str	lr, [sp, #20]
    74d8:	bl	2e9c <initializeEncoding>
    74dc:	cmp	r0, #0
    74e0:	beq	74f8 <externalEntityInitProcessor+0x40>
    74e4:	ldrd	r4, [sp]
    74e8:	ldrd	r6, [sp, #8]
    74ec:	ldr	r8, [sp, #16]
    74f0:	add	sp, sp, #20
    74f4:	pop	{pc}		; (ldr pc, [sp], #4)
    74f8:	movw	r0, #0
    74fc:	movt	r0, #0
    7500:	ldr	r8, [sp, #16]
    7504:	mov	r3, r7
    7508:	mov	r2, r6
    750c:	mov	r1, r5
    7510:	ldrd	r6, [sp, #8]
    7514:	ldr	lr, [sp, #20]
    7518:	str	r0, [r4, #288]	; 0x120
    751c:	mov	r0, r4
    7520:	ldrd	r4, [sp]
    7524:	add	sp, sp, #24
    7528:	b	6fbc <externalEntityInitProcessor2>

0000752c <prologInitProcessor>:
    752c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    7530:	mov	r5, r1
    7534:	mov	r4, r0
    7538:	strd	r6, [sp, #8]
    753c:	mov	r6, r2
    7540:	mov	r7, r3
    7544:	str	r8, [sp, #16]
    7548:	str	lr, [sp, #20]
    754c:	bl	2e9c <initializeEncoding>
    7550:	cmp	r0, #0
    7554:	beq	756c <prologInitProcessor+0x40>
    7558:	ldrd	r4, [sp]
    755c:	ldrd	r6, [sp, #8]
    7560:	ldr	r8, [sp, #16]
    7564:	add	sp, sp, #20
    7568:	pop	{pc}		; (ldr pc, [sp], #4)
    756c:	movw	r0, #0
    7570:	movt	r0, #0
    7574:	ldr	r8, [sp, #16]
    7578:	mov	r3, r7
    757c:	mov	r2, r6
    7580:	mov	r1, r5
    7584:	ldrd	r6, [sp, #8]
    7588:	ldr	lr, [sp, #20]
    758c:	str	r0, [r4, #288]	; 0x120
    7590:	mov	r0, r4
    7594:	ldrd	r4, [sp]
    7598:	add	sp, sp, #24
    759c:	b	709c <prologProcessor>

000075a0 <externalParEntInitProcessor>:
    75a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    75a4:	mov	r5, r1
    75a8:	mov	r4, r0
    75ac:	strd	r6, [sp, #8]
    75b0:	mov	r6, r2
    75b4:	mov	r7, r3
    75b8:	str	r8, [sp, #16]
    75bc:	str	lr, [sp, #20]
    75c0:	bl	2e9c <initializeEncoding>
    75c4:	cmp	r0, #0
    75c8:	bne	764c <externalParEntInitProcessor+0xac>
    75cc:	ldr	r3, [r4, #364]	; 0x16c
    75d0:	mov	r2, #1
    75d4:	strb	r2, [r3, #131]	; 0x83
    75d8:	ldr	r3, [r4, #284]	; 0x11c
    75dc:	cmp	r3, #0
    75e0:	beq	7618 <externalParEntInitProcessor+0x78>
    75e4:	movw	r0, #0
    75e8:	movt	r0, #0
    75ec:	ldr	r8, [sp, #16]
    75f0:	mov	r3, r7
    75f4:	mov	r2, r6
    75f8:	mov	r1, r5
    75fc:	ldrd	r6, [sp, #8]
    7600:	ldr	lr, [sp, #20]
    7604:	str	r0, [r4, #288]	; 0x120
    7608:	mov	r0, r4
    760c:	ldrd	r4, [sp]
    7610:	add	sp, sp, #24
    7614:	b	2554 <entityValueInitProcessor>
    7618:	movw	r0, #0
    761c:	movt	r0, #0
    7620:	ldr	r8, [sp, #16]
    7624:	mov	r3, r7
    7628:	mov	r2, r6
    762c:	mov	r1, r5
    7630:	ldrd	r6, [sp, #8]
    7634:	ldr	lr, [sp, #20]
    7638:	str	r0, [r4, #288]	; 0x120
    763c:	mov	r0, r4
    7640:	ldrd	r4, [sp]
    7644:	add	sp, sp, #24
    7648:	b	71b0 <externalParEntProcessor>
    764c:	ldrd	r4, [sp]
    7650:	ldrd	r6, [sp, #8]
    7654:	ldr	r8, [sp, #16]
    7658:	add	sp, sp, #20
    765c:	pop	{pc}		; (ldr pc, [sp], #4)

00007660 <startParsing>:
    7660:	str	r4, [sp, #-8]!
    7664:	mov	r4, r0
    7668:	ldr	r0, [r0, #512]	; 0x200
    766c:	str	lr, [sp, #4]
    7670:	cmp	r0, #0
    7674:	beq	7694 <startParsing+0x34>
    7678:	ldrb	r3, [r4, #244]	; 0xf4
    767c:	cmp	r3, #0
    7680:	bne	76c0 <startParsing+0x60>
    7684:	ldr	r4, [sp]
    7688:	add	sp, sp, #4
    768c:	mov	r0, #1
    7690:	pop	{pc}		; (ldr pc, [sp], #4)
    7694:	bl	0 <time>
    7698:	cmn	r0, #1
    769c:	movcc	r3, #0
    76a0:	movcs	r3, #1
    76a4:	add	r0, r3, r0
    76a8:	bl	0 <srand>
    76ac:	bl	0 <rand>
    76b0:	ldrb	r3, [r4, #244]	; 0xf4
    76b4:	str	r0, [r4, #512]	; 0x200
    76b8:	cmp	r3, #0
    76bc:	beq	7684 <startParsing+0x24>
    76c0:	mov	r0, r4
    76c4:	ldr	r1, [pc, #12]	; 76d8 <startParsing+0x78>
    76c8:	ldr	r4, [sp]
    76cc:	ldr	lr, [sp, #4]
    76d0:	add	sp, sp, #8
    76d4:	b	2ab4 <setContext>
    76d8:	.word	0x000000a4

000076dc <coda_XML_ParserReset>:
    76dc:	strd	r4, [sp, #-24]!	; 0xffffffe8
    76e0:	ldr	r5, [r0, #492]	; 0x1ec
    76e4:	strd	r6, [sp, #8]
    76e8:	str	r8, [sp, #16]
    76ec:	str	lr, [sp, #20]
    76f0:	cmp	r5, #0
    76f4:	movne	r0, #0
    76f8:	beq	7710 <coda_XML_ParserReset+0x34>
    76fc:	ldrd	r4, [sp]
    7700:	ldrd	r6, [sp, #8]
    7704:	ldr	r8, [sp, #16]
    7708:	add	sp, sp, #20
    770c:	pop	{pc}		; (ldr pc, [sp], #4)
    7710:	ldr	lr, [r0, #372]	; 0x174
    7714:	cmp	lr, #0
    7718:	ldrne	r2, [r0, #376]	; 0x178
    771c:	beq	7770 <coda_XML_ParserReset+0x94>
    7720:	ldr	r4, [lr]
    7724:	str	r2, [lr]
    7728:	ldr	r3, [lr, #44]	; 0x2c
    772c:	cmp	r3, #0
    7730:	ldrne	ip, [r0, #384]	; 0x180
    7734:	beq	7754 <coda_XML_ParserReset+0x78>
    7738:	ldr	r2, [r3, #4]
    773c:	str	ip, [r3, #4]
    7740:	mov	ip, r3
    7744:	str	r3, [r0, #384]	; 0x180
    7748:	cmp	r2, #0
    774c:	mov	r3, r2
    7750:	bne	7738 <coda_XML_ParserReset+0x5c>
    7754:	cmp	r4, #0
    7758:	mov	r2, lr
    775c:	str	r5, [lr, #44]	; 0x2c
    7760:	str	lr, [r0, #376]	; 0x178
    7764:	beq	7770 <coda_XML_ParserReset+0x94>
    7768:	mov	lr, r4
    776c:	b	7720 <coda_XML_ParserReset+0x44>
    7770:	ldr	r3, [r0, #308]	; 0x134
    7774:	cmp	r3, #0
    7778:	ldrne	ip, [r0, #312]	; 0x138
    777c:	bne	7788 <coda_XML_ParserReset+0xac>
    7780:	b	77a0 <coda_XML_ParserReset+0xc4>
    7784:	mov	r3, r2
    7788:	ldr	r2, [r3, #8]
    778c:	str	ip, [r3, #8]
    7790:	mov	ip, r3
    7794:	cmp	r2, #0
    7798:	bne	7784 <coda_XML_ParserReset+0xa8>
    779c:	str	r3, [r0, #312]	; 0x138
    77a0:	ldr	r3, [r0, #380]	; 0x17c
    77a4:	cmp	r3, #0
    77a8:	ldrne	ip, [r0, #384]	; 0x180
    77ac:	beq	77cc <coda_XML_ParserReset+0xf0>
    77b0:	ldr	r2, [r3, #4]
    77b4:	str	ip, [r3, #4]
    77b8:	mov	ip, r3
    77bc:	str	r3, [r0, #384]	; 0x180
    77c0:	cmp	r2, #0
    77c4:	mov	r3, r2
    77c8:	bne	77b0 <coda_XML_ParserReset+0xd4>
    77cc:	mov	r6, r0
    77d0:	ldr	r3, [r0, #20]
    77d4:	mov	r4, r1
    77d8:	ldr	r0, [r0, #248]	; 0xf8
    77dc:	blx	r3
    77e0:	ldr	r3, [r6, #260]	; 0x104
    77e4:	cmp	r3, #0
    77e8:	beq	77f4 <coda_XML_ParserReset+0x118>
    77ec:	ldr	r0, [r6, #252]	; 0xfc
    77f0:	blx	r3
    77f4:	ldr	r3, [r6, #432]	; 0x1b0
    77f8:	ldr	r1, [r6, #436]	; 0x1b4
    77fc:	cmp	r1, #0
    7800:	beq	7828 <coda_XML_ParserReset+0x14c>
    7804:	cmp	r3, #0
    7808:	bne	7814 <coda_XML_ParserReset+0x138>
    780c:	b	782c <coda_XML_ParserReset+0x150>
    7810:	mov	r3, r2
    7814:	ldr	r2, [r3]
    7818:	str	r1, [r3]
    781c:	mov	r1, r3
    7820:	cmp	r2, #0
    7824:	bne	7810 <coda_XML_ParserReset+0x134>
    7828:	str	r3, [r6, #436]	; 0x1b4
    782c:	ldr	r1, [r6, #460]	; 0x1cc
    7830:	mov	r3, #0
    7834:	str	r3, [r6, #432]	; 0x1b0
    7838:	str	r3, [r6, #440]	; 0x1b8
    783c:	str	r3, [r6, #444]	; 0x1bc
    7840:	cmp	r1, r3
    7844:	str	r3, [r6, #448]	; 0x1c0
    7848:	ldr	r3, [r6, #456]	; 0x1c8
    784c:	beq	7874 <coda_XML_ParserReset+0x198>
    7850:	cmp	r3, #0
    7854:	bne	7860 <coda_XML_ParserReset+0x184>
    7858:	b	7878 <coda_XML_ParserReset+0x19c>
    785c:	mov	r3, r2
    7860:	ldr	r2, [r3]
    7864:	str	r1, [r3]
    7868:	mov	r1, r3
    786c:	cmp	r2, #0
    7870:	bne	785c <coda_XML_ParserReset+0x180>
    7874:	str	r3, [r6, #460]	; 0x1cc
    7878:	mov	r3, #0
    787c:	mov	r1, r4
    7880:	mov	r0, r6
    7884:	str	r3, [r6, #456]	; 0x1c8
    7888:	str	r3, [r6, #464]	; 0x1d0
    788c:	str	r3, [r6, #468]	; 0x1d4
    7890:	str	r3, [r6, #472]	; 0x1d8
    7894:	bl	2728 <parserInit>
    7898:	ldr	r5, [r6, #364]	; 0x16c
    789c:	ldr	r4, [r5, #20]
    78a0:	ldr	r7, [r5, #28]
    78a4:	add	r7, r4, r7, lsl #2
    78a8:	cmp	r7, r4
    78ac:	beq	78d8 <coda_XML_ParserReset+0x1fc>
    78b0:	mov	r3, r4
    78b4:	ldr	r2, [r3], #4
    78b8:	cmp	r2, #0
    78bc:	beq	78d0 <coda_XML_ParserReset+0x1f4>
    78c0:	b	7b1c <coda_XML_ParserReset+0x440>
    78c4:	ldr	r2, [r3], #4
    78c8:	cmp	r2, #0
    78cc:	bne	7b1c <coda_XML_ParserReset+0x440>
    78d0:	cmp	r7, r3
    78d4:	bne	78c4 <coda_XML_ParserReset+0x1e8>
    78d8:	ldr	r3, [r5, #8]
    78dc:	cmp	r3, #0
    78e0:	beq	7918 <coda_XML_ParserReset+0x23c>
    78e4:	ldr	r3, [r5]
    78e8:	mov	r4, #0
    78ec:	mov	r7, r4
    78f0:	ldr	r2, [r5, #16]
    78f4:	ldr	r0, [r3, r4, lsl #2]
    78f8:	ldr	r3, [r2, #8]
    78fc:	blx	r3
    7900:	ldr	r3, [r5]
    7904:	ldr	r2, [r5, #8]
    7908:	str	r7, [r3, r4, lsl #2]
    790c:	add	r4, r4, #1
    7910:	cmp	r4, r2
    7914:	bcc	78f0 <coda_XML_ParserReset+0x214>
    7918:	ldr	r3, [r5, #140]	; 0x8c
    791c:	mov	r4, #0
    7920:	str	r4, [r5, #12]
    7924:	strb	r4, [r5, #131]	; 0x83
    7928:	cmp	r3, r4
    792c:	beq	7960 <coda_XML_ParserReset+0x284>
    7930:	ldr	r3, [r5, #132]	; 0x84
    7934:	mov	r7, r4
    7938:	ldr	r2, [r5, #148]	; 0x94
    793c:	ldr	r0, [r3, r4, lsl #2]
    7940:	ldr	r3, [r2, #8]
    7944:	blx	r3
    7948:	ldr	r3, [r5, #132]	; 0x84
    794c:	ldr	r2, [r5, #140]	; 0x8c
    7950:	str	r7, [r3, r4, lsl #2]
    7954:	add	r4, r4, #1
    7958:	cmp	r4, r2
    795c:	bcc	7938 <coda_XML_ParserReset+0x25c>
    7960:	ldr	r3, [r5, #28]
    7964:	mov	r4, #0
    7968:	str	r4, [r5, #144]	; 0x90
    796c:	cmp	r3, r4
    7970:	beq	79a4 <coda_XML_ParserReset+0x2c8>
    7974:	ldr	r3, [r5, #20]
    7978:	mov	r7, r4
    797c:	ldr	r2, [r5, #36]	; 0x24
    7980:	ldr	r0, [r3, r4, lsl #2]
    7984:	ldr	r3, [r2, #8]
    7988:	blx	r3
    798c:	ldr	r3, [r5, #20]
    7990:	ldr	r2, [r5, #28]
    7994:	str	r7, [r3, r4, lsl #2]
    7998:	add	r4, r4, #1
    799c:	cmp	r4, r2
    79a0:	bcc	797c <coda_XML_ParserReset+0x2a0>
    79a4:	ldr	r3, [r5, #48]	; 0x30
    79a8:	mov	r4, #0
    79ac:	str	r4, [r5, #32]
    79b0:	cmp	r3, r4
    79b4:	beq	79e8 <coda_XML_ParserReset+0x30c>
    79b8:	ldr	r3, [r5, #40]	; 0x28
    79bc:	mov	r7, r4
    79c0:	ldr	r2, [r5, #56]	; 0x38
    79c4:	ldr	r0, [r3, r4, lsl #2]
    79c8:	ldr	r3, [r2, #8]
    79cc:	blx	r3
    79d0:	ldr	r3, [r5, #40]	; 0x28
    79d4:	ldr	r2, [r5, #48]	; 0x30
    79d8:	str	r7, [r3, r4, lsl #2]
    79dc:	add	r4, r4, #1
    79e0:	cmp	r4, r2
    79e4:	bcc	79c0 <coda_XML_ParserReset+0x2e4>
    79e8:	ldr	r3, [r5, #68]	; 0x44
    79ec:	mov	r4, #0
    79f0:	str	r4, [r5, #52]	; 0x34
    79f4:	cmp	r3, r4
    79f8:	beq	7a2c <coda_XML_ParserReset+0x350>
    79fc:	ldr	r3, [r5, #60]	; 0x3c
    7a00:	mov	r7, r4
    7a04:	ldr	r2, [r5, #76]	; 0x4c
    7a08:	ldr	r0, [r3, r4, lsl #2]
    7a0c:	ldr	r3, [r2, #8]
    7a10:	blx	r3
    7a14:	ldr	r3, [r5, #60]	; 0x3c
    7a18:	ldr	r2, [r5, #68]	; 0x44
    7a1c:	str	r7, [r3, r4, lsl #2]
    7a20:	add	r4, r4, #1
    7a24:	cmp	r4, r2
    7a28:	bcc	7a04 <coda_XML_ParserReset+0x328>
    7a2c:	ldr	r1, [r5, #84]	; 0x54
    7a30:	mov	r3, #0
    7a34:	str	r3, [r5, #72]	; 0x48
    7a38:	ldr	r3, [r5, #80]	; 0x50
    7a3c:	cmp	r1, #0
    7a40:	beq	7a68 <coda_XML_ParserReset+0x38c>
    7a44:	cmp	r3, #0
    7a48:	bne	7a54 <coda_XML_ParserReset+0x378>
    7a4c:	b	7a6c <coda_XML_ParserReset+0x390>
    7a50:	mov	r3, r2
    7a54:	ldr	r2, [r3]
    7a58:	str	r1, [r3]
    7a5c:	mov	r1, r3
    7a60:	cmp	r2, #0
    7a64:	bne	7a50 <coda_XML_ParserReset+0x374>
    7a68:	str	r3, [r5, #84]	; 0x54
    7a6c:	ldr	r1, [r5, #108]	; 0x6c
    7a70:	mov	r3, #0
    7a74:	str	r3, [r5, #80]	; 0x50
    7a78:	str	r3, [r5, #88]	; 0x58
    7a7c:	str	r3, [r5, #92]	; 0x5c
    7a80:	cmp	r1, r3
    7a84:	str	r3, [r5, #96]	; 0x60
    7a88:	ldr	r3, [r5, #104]	; 0x68
    7a8c:	beq	7ab4 <coda_XML_ParserReset+0x3d8>
    7a90:	cmp	r3, #0
    7a94:	bne	7aa0 <coda_XML_ParserReset+0x3c4>
    7a98:	b	7ab8 <coda_XML_ParserReset+0x3dc>
    7a9c:	mov	r3, r2
    7aa0:	ldr	r2, [r3]
    7aa4:	str	r1, [r3]
    7aa8:	mov	r1, r3
    7aac:	cmp	r2, #0
    7ab0:	bne	7a9c <coda_XML_ParserReset+0x3c0>
    7ab4:	str	r3, [r5, #108]	; 0x6c
    7ab8:	mov	r4, #0
    7abc:	ldr	r0, [r5, #184]	; 0xb8
    7ac0:	str	r4, [r5, #104]	; 0x68
    7ac4:	str	r4, [r5, #112]	; 0x70
    7ac8:	str	r4, [r5, #116]	; 0x74
    7acc:	str	r4, [r5, #120]	; 0x78
    7ad0:	str	r4, [r5, #152]	; 0x98
    7ad4:	str	r4, [r5, #156]	; 0x9c
    7ad8:	strb	r4, [r5, #160]	; 0xa0
    7adc:	ldr	r3, [r6, #20]
    7ae0:	blx	r3
    7ae4:	ldr	r3, [r6, #20]
    7ae8:	str	r4, [r5, #184]	; 0xb8
    7aec:	ldr	r0, [r5, #164]	; 0xa4
    7af0:	blx	r3
    7af4:	mov	r3, #1
    7af8:	mov	r0, r3
    7afc:	strh	r3, [r5, #128]	; 0x80
    7b00:	strb	r4, [r5, #130]	; 0x82
    7b04:	str	r4, [r5, #164]	; 0xa4
    7b08:	str	r4, [r5, #168]	; 0xa8
    7b0c:	str	r4, [r5, #172]	; 0xac
    7b10:	str	r4, [r5, #176]	; 0xb0
    7b14:	str	r4, [r5, #180]	; 0xb4
    7b18:	b	76fc <coda_XML_ParserReset+0x20>
    7b1c:	mov	r4, r3
    7b20:	ldr	r3, [r2, #16]
    7b24:	cmp	r3, #0
    7b28:	beq	78a8 <coda_XML_ParserReset+0x1cc>
    7b2c:	ldr	r0, [r2, #20]
    7b30:	ldr	r3, [r6, #20]
    7b34:	blx	r3
    7b38:	b	78a8 <coda_XML_ParserReset+0x1cc>

00007b3c <coda_XML_SetEncoding>:
    7b3c:	ldr	r3, [r0, #496]	; 0x1f0
    7b40:	bic	r3, r3, #2
    7b44:	cmp	r3, #1
    7b48:	beq	7b8c <coda_XML_SetEncoding+0x50>
    7b4c:	cmp	r1, #0
    7b50:	moveq	r3, #1
    7b54:	streq	r1, [r0, #240]	; 0xf0
    7b58:	beq	7b90 <coda_XML_SetEncoding+0x54>
    7b5c:	str	r4, [sp, #-8]!
    7b60:	mov	r4, r0
    7b64:	add	r0, r0, #432	; 0x1b0
    7b68:	str	lr, [sp, #4]
    7b6c:	bl	26b8 <poolCopyString>
    7b70:	adds	r3, r0, #0
    7b74:	str	r0, [r4, #240]	; 0xf0
    7b78:	movne	r3, #1
    7b7c:	ldr	r4, [sp]
    7b80:	add	sp, sp, #4
    7b84:	mov	r0, r3
    7b88:	pop	{pc}		; (ldr pc, [sp], #4)
    7b8c:	mov	r3, #0
    7b90:	mov	r0, r3
    7b94:	bx	lr

00007b98 <coda_XML_ParserFree>:
    7b98:	strd	r4, [sp, #-32]!	; 0xffffffe0
    7b9c:	strd	r6, [sp, #8]
    7ba0:	subs	r6, r0, #0
    7ba4:	strd	r8, [sp, #16]
    7ba8:	str	sl, [sp, #24]
    7bac:	str	lr, [sp, #28]
    7bb0:	beq	7e30 <coda_XML_ParserFree+0x298>
    7bb4:	ldr	r7, [r6, #372]	; 0x174
    7bb8:	mov	r9, #0
    7bbc:	cmp	r7, #0
    7bc0:	beq	7c1c <coda_XML_ParserFree+0x84>
    7bc4:	ldr	r3, [r6, #20]
    7bc8:	ldr	r8, [r7]
    7bcc:	ldr	r0, [r7, #36]	; 0x24
    7bd0:	blx	r3
    7bd4:	ldr	r4, [r7, #44]	; 0x2c
    7bd8:	cmp	r4, #0
    7bdc:	beq	7c04 <coda_XML_ParserFree+0x6c>
    7be0:	ldr	r5, [r4, #4]
    7be4:	ldr	r0, [r4, #16]
    7be8:	ldr	r3, [r6, #20]
    7bec:	blx	r3
    7bf0:	mov	r0, r4
    7bf4:	ldr	r3, [r6, #20]
    7bf8:	blx	r3
    7bfc:	subs	r4, r5, #0
    7c00:	bne	7be0 <coda_XML_ParserFree+0x48>
    7c04:	mov	r0, r7
    7c08:	mov	r7, r8
    7c0c:	ldr	r3, [r6, #20]
    7c10:	blx	r3
    7c14:	cmp	r7, #0
    7c18:	bne	7bc4 <coda_XML_ParserFree+0x2c>
    7c1c:	ldr	r7, [r6, #376]	; 0x178
    7c20:	cmp	r7, #0
    7c24:	beq	7c30 <coda_XML_ParserFree+0x98>
    7c28:	str	r9, [r6, #376]	; 0x178
    7c2c:	b	7bc4 <coda_XML_ParserFree+0x2c>
    7c30:	ldr	r0, [r6, #308]	; 0x134
    7c34:	b	7c48 <coda_XML_ParserFree+0xb0>
    7c38:	ldr	r4, [r0, #8]
    7c3c:	ldr	r3, [r6, #20]
    7c40:	blx	r3
    7c44:	mov	r0, r4
    7c48:	cmp	r0, #0
    7c4c:	bne	7c38 <coda_XML_ParserFree+0xa0>
    7c50:	ldr	r0, [r6, #312]	; 0x138
    7c54:	cmp	r0, #0
    7c58:	beq	7c64 <coda_XML_ParserFree+0xcc>
    7c5c:	str	r7, [r6, #312]	; 0x138
    7c60:	b	7c38 <coda_XML_ParserFree+0xa0>
    7c64:	ldr	r4, [r6, #384]	; 0x180
    7c68:	cmp	r4, #0
    7c6c:	beq	7c94 <coda_XML_ParserFree+0xfc>
    7c70:	ldr	r5, [r4, #4]
    7c74:	ldr	r0, [r4, #16]
    7c78:	ldr	r3, [r6, #20]
    7c7c:	blx	r3
    7c80:	mov	r0, r4
    7c84:	ldr	r3, [r6, #20]
    7c88:	blx	r3
    7c8c:	subs	r4, r5, #0
    7c90:	bne	7c70 <coda_XML_ParserFree+0xd8>
    7c94:	ldr	r4, [r6, #380]	; 0x17c
    7c98:	cmp	r4, #0
    7c9c:	beq	7cc4 <coda_XML_ParserFree+0x12c>
    7ca0:	ldr	r5, [r4, #4]
    7ca4:	ldr	r0, [r4, #16]
    7ca8:	ldr	r3, [r6, #20]
    7cac:	blx	r3
    7cb0:	mov	r0, r4
    7cb4:	ldr	r3, [r6, #20]
    7cb8:	blx	r3
    7cbc:	subs	r4, r5, #0
    7cc0:	bne	7ca0 <coda_XML_ParserFree+0x108>
    7cc4:	add	r0, r6, #432	; 0x1b0
    7cc8:	bl	768 <poolDestroy>
    7ccc:	add	r0, r6, #456	; 0x1c8
    7cd0:	bl	768 <poolDestroy>
    7cd4:	ldrb	r3, [r6, #504]	; 0x1f8
    7cd8:	cmp	r3, #0
    7cdc:	bne	7d90 <coda_XML_ParserFree+0x1f8>
    7ce0:	ldr	r7, [r6, #364]	; 0x16c
    7ce4:	cmp	r7, #0
    7ce8:	beq	7d90 <coda_XML_ParserFree+0x1f8>
    7cec:	ldr	r4, [r7, #20]
    7cf0:	ldr	r5, [r7, #28]
    7cf4:	ldr	r8, [r6, #492]	; 0x1ec
    7cf8:	add	r5, r4, r5, lsl #2
    7cfc:	cmp	r5, r4
    7d00:	beq	7d2c <coda_XML_ParserFree+0x194>
    7d04:	mov	r3, r4
    7d08:	ldr	r2, [r3], #4
    7d0c:	cmp	r2, #0
    7d10:	beq	7d24 <coda_XML_ParserFree+0x18c>
    7d14:	b	7e10 <coda_XML_ParserFree+0x278>
    7d18:	ldr	r2, [r3], #4
    7d1c:	cmp	r2, #0
    7d20:	bne	7e10 <coda_XML_ParserFree+0x278>
    7d24:	cmp	r5, r3
    7d28:	bne	7d18 <coda_XML_ParserFree+0x180>
    7d2c:	mov	r0, r7
    7d30:	bl	704 <hashTableDestroy>
    7d34:	add	r0, r7, #132	; 0x84
    7d38:	bl	704 <hashTableDestroy>
    7d3c:	add	r0, r7, #20
    7d40:	bl	704 <hashTableDestroy>
    7d44:	add	r0, r7, #40	; 0x28
    7d48:	bl	704 <hashTableDestroy>
    7d4c:	add	r0, r7, #60	; 0x3c
    7d50:	bl	704 <hashTableDestroy>
    7d54:	add	r0, r7, #80	; 0x50
    7d58:	bl	768 <poolDestroy>
    7d5c:	add	r0, r7, #104	; 0x68
    7d60:	bl	768 <poolDestroy>
    7d64:	cmp	r8, #0
    7d68:	bne	7d84 <coda_XML_ParserFree+0x1ec>
    7d6c:	ldr	r3, [r6, #20]
    7d70:	ldr	r0, [r7, #184]	; 0xb8
    7d74:	blx	r3
    7d78:	ldr	r3, [r6, #20]
    7d7c:	ldr	r0, [r7, #164]	; 0xa4
    7d80:	blx	r3
    7d84:	mov	r0, r7
    7d88:	ldr	r3, [r6, #20]
    7d8c:	blx	r3
    7d90:	ldr	r3, [r6, #20]
    7d94:	ldr	r0, [r6, #400]	; 0x190
    7d98:	blx	r3
    7d9c:	ldr	r3, [r6, #20]
    7da0:	ldr	r0, [r6, #480]	; 0x1e0
    7da4:	blx	r3
    7da8:	ldr	r0, [r6, #8]
    7dac:	ldr	r3, [r6, #20]
    7db0:	blx	r3
    7db4:	ldr	r3, [r6, #20]
    7db8:	ldr	r0, [r6, #52]	; 0x34
    7dbc:	blx	r3
    7dc0:	ldr	r3, [r6, #20]
    7dc4:	ldr	r0, [r6, #404]	; 0x194
    7dc8:	blx	r3
    7dcc:	ldr	r3, [r6, #20]
    7dd0:	ldr	r0, [r6, #248]	; 0xf8
    7dd4:	blx	r3
    7dd8:	ldr	r3, [r6, #260]	; 0x104
    7ddc:	cmp	r3, #0
    7de0:	beq	7dec <coda_XML_ParserFree+0x254>
    7de4:	ldr	r0, [r6, #252]	; 0xfc
    7de8:	blx	r3
    7dec:	mov	r0, r6
    7df0:	ldrd	r4, [sp]
    7df4:	ldrd	r8, [sp, #16]
    7df8:	ldr	r3, [r6, #20]
    7dfc:	ldrd	r6, [sp, #8]
    7e00:	ldr	sl, [sp, #24]
    7e04:	ldr	lr, [sp, #28]
    7e08:	add	sp, sp, #32
    7e0c:	bx	r3
    7e10:	mov	r4, r3
    7e14:	ldr	r3, [r2, #16]
    7e18:	cmp	r3, #0
    7e1c:	beq	7cfc <coda_XML_ParserFree+0x164>
    7e20:	ldr	r0, [r2, #20]
    7e24:	ldr	r3, [r6, #20]
    7e28:	blx	r3
    7e2c:	b	7cfc <coda_XML_ParserFree+0x164>
    7e30:	ldrd	r4, [sp]
    7e34:	ldrd	r6, [sp, #8]
    7e38:	ldrd	r8, [sp, #16]
    7e3c:	ldr	sl, [sp, #24]
    7e40:	add	sp, sp, #28
    7e44:	pop	{pc}		; (ldr pc, [sp], #4)

00007e48 <parserCreate>:
    7e48:	strd	r4, [sp, #-32]!	; 0xffffffe0
    7e4c:	mov	r5, r3
    7e50:	strd	r6, [sp, #8]
    7e54:	subs	r6, r1, #0
    7e58:	mov	r7, r0
    7e5c:	mov	r0, #520	; 0x208
    7e60:	strd	r8, [sp, #16]
    7e64:	mov	r8, r2
    7e68:	str	sl, [sp, #24]
    7e6c:	str	lr, [sp, #28]
    7e70:	beq	7fd0 <parserCreate+0x188>
    7e74:	ldr	r3, [r6]
    7e78:	blx	r3
    7e7c:	subs	r4, r0, #0
    7e80:	beq	7fbc <parserCreate+0x174>
    7e84:	ldr	r3, [r6]
    7e88:	ldmib	r6, {r1, r2}
    7e8c:	str	r3, [r4, #12]
    7e90:	str	r1, [r4, #16]
    7e94:	str	r2, [r4, #20]
    7e98:	mov	r2, #0
    7e9c:	mov	r1, #16
    7ea0:	mov	r0, #256	; 0x100
    7ea4:	str	r2, [r4, #8]
    7ea8:	str	r2, [r4, #32]
    7eac:	str	r1, [r4, #388]	; 0x184
    7eb0:	blx	r3
    7eb4:	cmp	r0, #0
    7eb8:	mov	r3, r0
    7ebc:	str	r0, [r4, #400]	; 0x190
    7ec0:	beq	80e0 <parserCreate+0x298>
    7ec4:	mov	r0, #1024	; 0x400
    7ec8:	ldr	r3, [r4, #12]
    7ecc:	blx	r3
    7ed0:	cmp	r0, #0
    7ed4:	mov	r6, r0
    7ed8:	str	r0, [r4, #52]	; 0x34
    7edc:	beq	80f4 <parserCreate+0x2ac>
    7ee0:	add	r6, r0, #1024	; 0x400
    7ee4:	cmp	r5, #0
    7ee8:	add	r9, r4, #12
    7eec:	strne	r5, [r4, #364]	; 0x16c
    7ef0:	str	r6, [r4, #56]	; 0x38
    7ef4:	beq	8004 <parserCreate+0x1bc>
    7ef8:	mov	r3, #0
    7efc:	mov	r2, #33	; 0x21
    7f00:	mov	r1, r7
    7f04:	mov	r0, r4
    7f08:	str	r3, [r4, #132]	; 0x84
    7f0c:	strh	r3, [r4, #244]	; 0xf4
    7f10:	str	r3, [r4, #256]	; 0x100
    7f14:	str	r3, [r4, #312]	; 0x138
    7f18:	str	r3, [r4, #376]	; 0x178
    7f1c:	str	r3, [r4, #384]	; 0x180
    7f20:	str	r3, [r4, #404]	; 0x194
    7f24:	str	r3, [r4, #408]	; 0x198
    7f28:	strb	r3, [r4, #412]	; 0x19c
    7f2c:	str	r3, [r4, #432]	; 0x1b0
    7f30:	str	r3, [r4, #436]	; 0x1b4
    7f34:	str	r3, [r4, #440]	; 0x1b8
    7f38:	str	r3, [r4, #444]	; 0x1bc
    7f3c:	str	r3, [r4, #448]	; 0x1c0
    7f40:	str	r9, [r4, #452]	; 0x1c4
    7f44:	str	r3, [r4, #456]	; 0x1c8
    7f48:	str	r3, [r4, #460]	; 0x1cc
    7f4c:	str	r3, [r4, #464]	; 0x1d0
    7f50:	str	r3, [r4, #468]	; 0x1d4
    7f54:	str	r3, [r4, #472]	; 0x1d8
    7f58:	str	r9, [r4, #476]	; 0x1dc
    7f5c:	str	r3, [r4, #480]	; 0x1e0
    7f60:	str	r3, [r4, #484]	; 0x1e4
    7f64:	strb	r2, [r4, #488]	; 0x1e8
    7f68:	bl	2728 <parserInit>
    7f6c:	cmp	r7, #0
    7f70:	beq	7f80 <parserCreate+0x138>
    7f74:	ldr	r3, [r4, #240]	; 0xf0
    7f78:	cmp	r3, #0
    7f7c:	beq	8114 <parserCreate+0x2cc>
    7f80:	cmp	r8, #0
    7f84:	beq	7fc4 <parserCreate+0x17c>
    7f88:	mov	r3, #1
    7f8c:	strb	r3, [r4, #244]	; 0xf4
    7f90:	bl	0 <coda_XmlGetUtf8InternalEncodingNS>
    7f94:	str	r0, [r4, #236]	; 0xec
    7f98:	ldrb	r3, [r8]
    7f9c:	strb	r3, [r4, #488]	; 0x1e8
    7fa0:	mov	r0, r4
    7fa4:	ldrd	r4, [sp]
    7fa8:	ldrd	r6, [sp, #8]
    7fac:	ldrd	r8, [sp, #16]
    7fb0:	ldr	sl, [sp, #24]
    7fb4:	add	sp, sp, #28
    7fb8:	pop	{pc}		; (ldr pc, [sp], #4)
    7fbc:	mov	r4, #0
    7fc0:	b	7fa0 <parserCreate+0x158>
    7fc4:	bl	0 <coda_XmlGetUtf8InternalEncoding>
    7fc8:	str	r0, [r4, #236]	; 0xec
    7fcc:	b	7fa0 <parserCreate+0x158>
    7fd0:	bl	0 <malloc>
    7fd4:	subs	r4, r0, #0
    7fd8:	beq	7fbc <parserCreate+0x174>
    7fdc:	movw	r3, #0
    7fe0:	movt	r3, #0
    7fe4:	movw	r1, #0
    7fe8:	movt	r1, #0
    7fec:	movw	r2, #0
    7ff0:	movt	r2, #0
    7ff4:	str	r3, [r4, #12]
    7ff8:	str	r1, [r4, #16]
    7ffc:	str	r2, [r4, #20]
    8000:	b	7e98 <parserCreate+0x50>
    8004:	mov	r0, #188	; 0xbc
    8008:	ldr	r3, [r4, #12]
    800c:	blx	r3
    8010:	cmp	r0, #0
    8014:	beq	8124 <parserCreate+0x2dc>
    8018:	mov	r3, #1
    801c:	str	r5, [r0]
    8020:	strb	r5, [r0, #4]
    8024:	str	r5, [r0, #8]
    8028:	str	r5, [r0, #12]
    802c:	str	r9, [r0, #16]
    8030:	str	r5, [r0, #20]
    8034:	strb	r5, [r0, #24]
    8038:	str	r5, [r0, #28]
    803c:	str	r5, [r0, #32]
    8040:	str	r9, [r0, #36]	; 0x24
    8044:	str	r5, [r0, #40]	; 0x28
    8048:	strb	r5, [r0, #44]	; 0x2c
    804c:	str	r5, [r0, #48]	; 0x30
    8050:	str	r5, [r0, #52]	; 0x34
    8054:	str	r9, [r0, #56]	; 0x38
    8058:	str	r5, [r0, #60]	; 0x3c
    805c:	strb	r5, [r0, #64]	; 0x40
    8060:	str	r5, [r0, #68]	; 0x44
    8064:	str	r5, [r0, #72]	; 0x48
    8068:	str	r9, [r0, #76]	; 0x4c
    806c:	str	r5, [r0, #80]	; 0x50
    8070:	str	r5, [r0, #84]	; 0x54
    8074:	str	r5, [r0, #88]	; 0x58
    8078:	str	r5, [r0, #92]	; 0x5c
    807c:	str	r5, [r0, #96]	; 0x60
    8080:	str	r9, [r0, #100]	; 0x64
    8084:	str	r5, [r0, #104]	; 0x68
    8088:	str	r5, [r0, #108]	; 0x6c
    808c:	str	r5, [r0, #112]	; 0x70
    8090:	str	r5, [r0, #116]	; 0x74
    8094:	str	r5, [r0, #120]	; 0x78
    8098:	str	r9, [r0, #124]	; 0x7c
    809c:	str	r5, [r0, #140]	; 0x8c
    80a0:	str	r3, [r0, #128]	; 0x80
    80a4:	str	r5, [r0, #132]	; 0x84
    80a8:	strb	r5, [r0, #136]	; 0x88
    80ac:	str	r5, [r0, #144]	; 0x90
    80b0:	str	r9, [r0, #148]	; 0x94
    80b4:	str	r5, [r0, #152]	; 0x98
    80b8:	str	r5, [r0, #156]	; 0x9c
    80bc:	strb	r5, [r0, #160]	; 0xa0
    80c0:	str	r5, [r0, #164]	; 0xa4
    80c4:	str	r5, [r0, #168]	; 0xa8
    80c8:	str	r5, [r0, #172]	; 0xac
    80cc:	str	r5, [r0, #176]	; 0xb0
    80d0:	str	r5, [r0, #180]	; 0xb4
    80d4:	str	r5, [r0, #184]	; 0xb8
    80d8:	str	r0, [r4, #364]	; 0x16c
    80dc:	b	7ef8 <parserCreate+0xb0>
    80e0:	mov	r0, r4
    80e4:	ldr	r2, [r4, #20]
    80e8:	mov	r4, r3
    80ec:	blx	r2
    80f0:	b	7fa0 <parserCreate+0x158>
    80f4:	ldr	r3, [r4, #20]
    80f8:	ldr	r0, [r4, #400]	; 0x190
    80fc:	blx	r3
    8100:	mov	r0, r4
    8104:	ldr	r3, [r4, #20]
    8108:	mov	r4, r6
    810c:	blx	r3
    8110:	b	7fa0 <parserCreate+0x158>
    8114:	mov	r0, r4
    8118:	mov	r4, r3
    811c:	bl	7b98 <coda_XML_ParserFree>
    8120:	b	7fa0 <parserCreate+0x158>
    8124:	str	r5, [r4, #364]	; 0x16c
    8128:	ldr	r3, [r4, #20]
    812c:	ldr	r0, [r4, #52]	; 0x34
    8130:	blx	r3
    8134:	ldr	r3, [r4, #20]
    8138:	ldr	r0, [r4, #400]	; 0x190
    813c:	blx	r3
    8140:	mov	r0, r4
    8144:	ldr	r3, [r4, #20]
    8148:	mov	r4, r5
    814c:	blx	r3
    8150:	b	7fa0 <parserCreate+0x158>

00008154 <coda_XML_ParserCreate_MM>:
    8154:	mov	r3, #0
    8158:	b	7e48 <parserCreate>

0000815c <coda_XML_ParserCreate>:
    815c:	mov	r3, #0
    8160:	mov	r2, r3
    8164:	mov	r1, r3
    8168:	b	7e48 <parserCreate>

0000816c <coda_XML_ParserCreateNS>:
    816c:	push	{lr}		; (str lr, [sp, #-4]!)
    8170:	sub	sp, sp, #12
    8174:	mov	r3, #0
    8178:	add	r2, sp, #4
    817c:	strb	r1, [sp, #4]
    8180:	mov	r1, r3
    8184:	bl	7e48 <parserCreate>
    8188:	add	sp, sp, #12
    818c:	pop	{pc}		; (ldr pc, [sp], #4)

00008190 <coda_XML_ExternalEntityParserCreate>:
    8190:	strd	r4, [sp, #-36]!	; 0xffffffdc
    8194:	mov	r4, r0
    8198:	subs	r3, r1, #0
    819c:	add	r1, r0, #12
    81a0:	strd	r6, [sp, #8]
    81a4:	strd	r8, [sp, #16]
    81a8:	strd	sl, [sp, #24]
    81ac:	str	lr, [sp, #32]
    81b0:	sub	sp, sp, #116	; 0x74
    81b4:	ldrb	ip, [r0, #244]	; 0xf4
    81b8:	mov	r0, r2
    81bc:	ldr	r7, [r4]
    81c0:	ldr	r2, [r4, #60]	; 0x3c
    81c4:	ldr	r6, [r4, #4]
    81c8:	ldr	r9, [r4, #364]	; 0x16c
    81cc:	strd	r2, [sp, #4]
    81d0:	ldr	r2, [r4, #64]	; 0x40
    81d4:	ldrb	r3, [r4, #316]	; 0x13c
    81d8:	str	r2, [sp, #12]
    81dc:	ldr	r2, [r4, #68]	; 0x44
    81e0:	str	r2, [sp, #16]
    81e4:	ldr	r2, [r4, #72]	; 0x48
    81e8:	str	r3, [sp, #88]	; 0x58
    81ec:	ldrb	r3, [r4, #245]	; 0xf5
    81f0:	str	r2, [sp, #20]
    81f4:	ldr	r2, [r4, #76]	; 0x4c
    81f8:	str	r2, [sp, #24]
    81fc:	ldr	r2, [r4, #80]	; 0x50
    8200:	str	r3, [sp, #96]	; 0x60
    8204:	moveq	r3, r9
    8208:	movne	r3, #0
    820c:	cmp	ip, #0
    8210:	str	r2, [sp, #28]
    8214:	ldr	r2, [r4, #84]	; 0x54
    8218:	str	r2, [sp, #32]
    821c:	ldr	r2, [r4, #88]	; 0x58
    8220:	str	r2, [sp, #36]	; 0x24
    8224:	ldr	r2, [r4, #100]	; 0x64
    8228:	str	r2, [sp, #40]	; 0x28
    822c:	ldr	r2, [r4, #104]	; 0x68
    8230:	ldr	r8, [r4, #124]	; 0x7c
    8234:	ldrbne	ip, [r4, #488]	; 0x1e8
    8238:	str	r2, [sp, #44]	; 0x2c
    823c:	ldr	r2, [r4, #108]	; 0x6c
    8240:	ldr	fp, [r4, #352]	; 0x160
    8244:	strbne	ip, [sp, #108]	; 0x6c
    8248:	ldr	sl, [r4, #508]	; 0x1fc
    824c:	str	r2, [sp, #48]	; 0x30
    8250:	ldr	r2, [r4, #112]	; 0x70
    8254:	str	r2, [sp, #52]	; 0x34
    8258:	ldr	r2, [r4, #116]	; 0x74
    825c:	str	r2, [sp, #56]	; 0x38
    8260:	ldr	r2, [r4, #120]	; 0x78
    8264:	str	r2, [sp, #60]	; 0x3c
    8268:	ldr	r2, [r4, #128]	; 0x80
    826c:	str	r2, [sp, #64]	; 0x40
    8270:	ldr	r2, [r4, #132]	; 0x84
    8274:	str	r2, [sp, #68]	; 0x44
    8278:	ldr	r2, [r4, #136]	; 0x88
    827c:	str	r2, [sp, #72]	; 0x48
    8280:	ldr	r2, [r4, #140]	; 0x8c
    8284:	str	r2, [sp, #76]	; 0x4c
    8288:	ldr	r2, [r4, #144]	; 0x90
    828c:	str	r2, [sp, #80]	; 0x50
    8290:	ldr	r2, [r4, #148]	; 0x94
    8294:	str	r2, [sp, #84]	; 0x54
    8298:	ldr	r2, [r4, #284]	; 0x11c
    829c:	str	r2, [sp, #92]	; 0x5c
    82a0:	ldr	r2, [r4, #512]	; 0x200
    82a4:	str	r2, [sp, #100]	; 0x64
    82a8:	addne	r2, sp, #108	; 0x6c
    82ac:	moveq	r2, ip
    82b0:	bl	7e48 <parserCreate>
    82b4:	cmp	r0, #0
    82b8:	mov	r5, r0
    82bc:	beq	8498 <coda_XML_ExternalEntityParserCreate+0x308>
    82c0:	ldr	r3, [sp, #4]
    82c4:	cmp	r7, r6
    82c8:	movne	r6, r0
    82cc:	str	r7, [r0]
    82d0:	cmp	r4, r8
    82d4:	str	r6, [r0, #4]
    82d8:	str	r3, [r0, #60]	; 0x3c
    82dc:	ldr	r3, [sp, #12]
    82e0:	str	r3, [r0, #64]	; 0x40
    82e4:	ldr	r3, [sp, #16]
    82e8:	str	r3, [r0, #68]	; 0x44
    82ec:	ldr	r3, [sp, #20]
    82f0:	str	r3, [r0, #72]	; 0x48
    82f4:	ldr	r3, [sp, #24]
    82f8:	str	r3, [r0, #76]	; 0x4c
    82fc:	ldr	r3, [sp, #28]
    8300:	str	r3, [r0, #80]	; 0x50
    8304:	ldr	r3, [sp, #32]
    8308:	str	r3, [r0, #84]	; 0x54
    830c:	ldr	r3, [sp, #36]	; 0x24
    8310:	str	r3, [r0, #88]	; 0x58
    8314:	ldr	r3, [sp, #40]	; 0x28
    8318:	str	r3, [r0, #100]	; 0x64
    831c:	ldr	r3, [sp, #44]	; 0x2c
    8320:	str	r3, [r0, #104]	; 0x68
    8324:	ldr	r3, [sp, #48]	; 0x30
    8328:	str	r3, [r0, #108]	; 0x6c
    832c:	ldr	r3, [sp, #52]	; 0x34
    8330:	str	r3, [r0, #112]	; 0x70
    8334:	ldr	r3, [sp, #56]	; 0x38
    8338:	str	r3, [r0, #116]	; 0x74
    833c:	ldr	r3, [sp, #60]	; 0x3c
    8340:	str	r3, [r0, #120]	; 0x78
    8344:	ldr	r3, [sp, #64]	; 0x40
    8348:	str	r3, [r0, #128]	; 0x80
    834c:	ldr	r3, [sp, #68]	; 0x44
    8350:	strne	r8, [r0, #124]	; 0x7c
    8354:	str	r3, [r0, #132]	; 0x84
    8358:	ldr	r3, [sp, #72]	; 0x48
    835c:	str	r3, [r0, #136]	; 0x88
    8360:	ldr	r3, [sp, #76]	; 0x4c
    8364:	str	fp, [r0, #352]	; 0x160
    8368:	str	r4, [r0, #492]	; 0x1ec
    836c:	str	sl, [r0, #508]	; 0x1fc
    8370:	str	r3, [r0, #140]	; 0x8c
    8374:	ldr	r3, [sp, #80]	; 0x50
    8378:	str	r3, [r0, #144]	; 0x90
    837c:	ldr	r3, [sp, #84]	; 0x54
    8380:	str	r3, [r0, #148]	; 0x94
    8384:	ldr	r3, [sp, #8]
    8388:	cmp	r3, #0
    838c:	ldr	r3, [sp, #96]	; 0x60
    8390:	strb	r3, [r0, #245]	; 0xf5
    8394:	ldr	r3, [sp, #92]	; 0x5c
    8398:	str	r3, [r0, #284]	; 0x11c
    839c:	ldr	r3, [sp, #88]	; 0x58
    83a0:	strb	r3, [r0, #316]	; 0x13c
    83a4:	ldr	r3, [sp, #100]	; 0x64
    83a8:	str	r3, [r0, #512]	; 0x200
    83ac:	beq	85a0 <coda_XML_ExternalEntityParserCreate+0x410>
    83b0:	ldr	sl, [r0, #364]	; 0x16c
    83b4:	ldr	r6, [r9, #60]	; 0x3c
    83b8:	ldr	r7, [r9, #68]	; 0x44
    83bc:	add	r3, sl, #80	; 0x50
    83c0:	add	r8, sl, #60	; 0x3c
    83c4:	str	r3, [sp, #4]
    83c8:	add	r7, r6, r7, lsl #2
    83cc:	b	83dc <coda_XML_ExternalEntityParserCreate+0x24c>
    83d0:	ldr	r3, [r6], #4
    83d4:	cmp	r3, #0
    83d8:	bne	84b8 <coda_XML_ExternalEntityParserCreate+0x328>
    83dc:	cmp	r7, r6
    83e0:	bne	83d0 <coda_XML_ExternalEntityParserCreate+0x240>
    83e4:	add	r3, sl, #40	; 0x28
    83e8:	ldr	r6, [r9, #40]	; 0x28
    83ec:	mov	fp, #0
    83f0:	str	r5, [sp, #12]
    83f4:	str	r3, [sp, #16]
    83f8:	ldr	r3, [r9, #48]	; 0x30
    83fc:	add	r3, r6, r3, lsl #2
    8400:	mov	r5, r3
    8404:	b	8414 <coda_XML_ExternalEntityParserCreate+0x284>
    8408:	ldr	r7, [r6], #4
    840c:	cmp	r7, #0
    8410:	bne	84f4 <coda_XML_ExternalEntityParserCreate+0x364>
    8414:	cmp	r5, r6
    8418:	bne	8408 <coda_XML_ExternalEntityParserCreate+0x278>
    841c:	add	r3, sl, #20
    8420:	ldr	r5, [sp, #12]
    8424:	ldr	r8, [r9, #20]
    8428:	str	r3, [sp, #32]
    842c:	add	r3, sl, #40	; 0x28
    8430:	str	sl, [sp, #28]
    8434:	str	r3, [sp, #12]
    8438:	ldr	r3, [r9, #28]
    843c:	str	r5, [sp, #16]
    8440:	str	r9, [sp, #36]	; 0x24
    8444:	add	r3, r8, r3, lsl #2
    8448:	mov	sl, r3
    844c:	b	845c <coda_XML_ExternalEntityParserCreate+0x2cc>
    8450:	ldr	r6, [r8], #4
    8454:	cmp	r6, #0
    8458:	bne	85c0 <coda_XML_ExternalEntityParserCreate+0x430>
    845c:	cmp	sl, r8
    8460:	bne	8450 <coda_XML_ExternalEntityParserCreate+0x2c0>
    8464:	mov	r0, r4
    8468:	ldr	r2, [sp, #4]
    846c:	ldr	sl, [sp, #28]
    8470:	ldr	r9, [sp, #36]	; 0x24
    8474:	ldr	r5, [sp, #16]
    8478:	mov	r1, sl
    847c:	mov	r3, r9
    8480:	bl	2898 <copyEntityTable>
    8484:	cmp	r0, #0
    8488:	bne	8744 <coda_XML_ExternalEntityParserCreate+0x5b4>
    848c:	mov	r0, r5
    8490:	mov	r5, #0
    8494:	bl	7b98 <coda_XML_ParserFree>
    8498:	mov	r0, r5
    849c:	add	sp, sp, #116	; 0x74
    84a0:	ldrd	r4, [sp]
    84a4:	ldrd	r6, [sp, #8]
    84a8:	ldrd	r8, [sp, #16]
    84ac:	ldrd	sl, [sp, #24]
    84b0:	add	sp, sp, #32
    84b4:	pop	{pc}		; (ldr pc, [sp], #4)
    84b8:	ldr	r1, [r3]
    84bc:	ldr	r0, [sp, #4]
    84c0:	bl	26b8 <poolCopyString>
    84c4:	subs	r2, r0, #0
    84c8:	beq	848c <coda_XML_ExternalEntityParserCreate+0x2fc>
    84cc:	mov	r3, #8
    84d0:	mov	r1, r8
    84d4:	mov	r0, r4
    84d8:	bl	a50 <lookup>
    84dc:	cmp	r0, #0
    84e0:	bne	83dc <coda_XML_ExternalEntityParserCreate+0x24c>
    84e4:	mov	r0, r5
    84e8:	mov	r5, #0
    84ec:	bl	7b98 <coda_XML_ParserFree>
    84f0:	b	8498 <coda_XML_ExternalEntityParserCreate+0x308>
    84f4:	ldrd	r2, [sl, #88]	; 0x58
    84f8:	cmp	r3, r2
    84fc:	beq	8588 <coda_XML_ExternalEntityParserCreate+0x3f8>
    8500:	add	r2, r3, #1
    8504:	ldr	r0, [sp, #4]
    8508:	str	r2, [sl, #92]	; 0x5c
    850c:	strb	fp, [r3]
    8510:	ldr	r1, [r7]
    8514:	bl	26b8 <poolCopyString>
    8518:	subs	r2, r0, #0
    851c:	beq	8734 <coda_XML_ExternalEntityParserCreate+0x5a4>
    8520:	add	r2, r2, #1
    8524:	mov	r3, #12
    8528:	ldr	r1, [sp, #16]
    852c:	mov	r0, r4
    8530:	bl	a50 <lookup>
    8534:	subs	r8, r0, #0
    8538:	beq	8734 <coda_XML_ExternalEntityParserCreate+0x5a4>
    853c:	ldrb	r3, [r7, #8]
    8540:	strb	r3, [r8, #8]
    8544:	ldr	r2, [r7, #4]
    8548:	cmp	r2, #0
    854c:	beq	8414 <coda_XML_ExternalEntityParserCreate+0x284>
    8550:	ldrb	r3, [r7, #9]
    8554:	add	r1, r9, #152	; 0x98
    8558:	cmp	r2, r1
    855c:	strb	r3, [r8, #9]
    8560:	addeq	r3, sl, #152	; 0x98
    8564:	streq	r3, [r8, #4]
    8568:	beq	8414 <coda_XML_ExternalEntityParserCreate+0x284>
    856c:	mov	r3, #0
    8570:	add	r1, sl, #60	; 0x3c
    8574:	ldr	r2, [r2]
    8578:	mov	r0, r4
    857c:	bl	a50 <lookup>
    8580:	str	r0, [r8, #4]
    8584:	b	8414 <coda_XML_ExternalEntityParserCreate+0x284>
    8588:	ldr	r0, [sp, #4]
    858c:	bl	1238 <poolGrow>
    8590:	cmp	r0, #0
    8594:	beq	8734 <coda_XML_ExternalEntityParserCreate+0x5a4>
    8598:	ldr	r3, [sl, #92]	; 0x5c
    859c:	b	8500 <coda_XML_ExternalEntityParserCreate+0x370>
    85a0:	mov	r3, #1
    85a4:	add	r0, r0, #264	; 0x108
    85a8:	strb	r3, [r5, #504]	; 0x1f8
    85ac:	bl	0 <coda_XmlPrologStateInitExternalEntity>
    85b0:	movw	r3, #0
    85b4:	movt	r3, #0
    85b8:	str	r3, [r5, #288]	; 0x120
    85bc:	b	8498 <coda_XML_ExternalEntityParserCreate+0x308>
    85c0:	ldr	r1, [r6]
    85c4:	ldr	r0, [sp, #4]
    85c8:	bl	26b8 <poolCopyString>
    85cc:	subs	r2, r0, #0
    85d0:	beq	873c <coda_XML_ExternalEntityParserCreate+0x5ac>
    85d4:	mov	r3, #24
    85d8:	mov	r0, r4
    85dc:	ldr	r1, [sp, #32]
    85e0:	bl	a50 <lookup>
    85e4:	subs	fp, r0, #0
    85e8:	beq	873c <coda_XML_ExternalEntityParserCreate+0x5ac>
    85ec:	ldr	r0, [r6, #12]
    85f0:	cmp	r0, #0
    85f4:	beq	8618 <coda_XML_ExternalEntityParserCreate+0x488>
    85f8:	ldr	r3, [sp, #16]
    85fc:	add	r0, r0, r0, lsl #1
    8600:	lsl	r0, r0, #2
    8604:	ldr	r3, [r3, #12]
    8608:	blx	r3
    860c:	cmp	r0, #0
    8610:	str	r0, [fp, #20]
    8614:	beq	87cc <coda_XML_ExternalEntityParserCreate+0x63c>
    8618:	ldr	r2, [r6, #8]
    861c:	cmp	r2, #0
    8620:	beq	863c <coda_XML_ExternalEntityParserCreate+0x4ac>
    8624:	mov	r3, #0
    8628:	mov	r0, r4
    862c:	ldr	r2, [r2]
    8630:	ldr	r1, [sp, #12]
    8634:	bl	a50 <lookup>
    8638:	str	r0, [fp, #8]
    863c:	ldr	r2, [r6, #4]
    8640:	ldr	r3, [r6, #12]
    8644:	cmp	r2, #0
    8648:	str	r3, [fp, #12]
    864c:	str	r3, [fp, #16]
    8650:	beq	8674 <coda_XML_ExternalEntityParserCreate+0x4e4>
    8654:	ldr	r1, [sp, #28]
    8658:	mov	r3, #0
    865c:	mov	r0, r4
    8660:	ldr	r2, [r2]
    8664:	add	r1, r1, #60	; 0x3c
    8668:	bl	a50 <lookup>
    866c:	ldr	r3, [fp, #12]
    8670:	str	r0, [fp, #4]
    8674:	cmp	r3, #0
    8678:	ble	845c <coda_XML_ExternalEntityParserCreate+0x2cc>
    867c:	mov	r5, #0
    8680:	str	sl, [sp, #20]
    8684:	mov	r7, r5
    8688:	str	r8, [sp, #24]
    868c:	ldr	r8, [sp, #4]
    8690:	ldr	sl, [sp, #12]
    8694:	b	86c4 <coda_XML_ExternalEntityParserCreate+0x534>
    8698:	bl	26b8 <poolCopyString>
    869c:	ldr	r3, [fp, #20]
    86a0:	str	r0, [r9, #8]
    86a4:	add	r3, r3, r5
    86a8:	ldr	r3, [r3, #8]
    86ac:	cmp	r3, #0
    86b0:	beq	873c <coda_XML_ExternalEntityParserCreate+0x5ac>
    86b4:	ldr	r3, [fp, #12]
    86b8:	add	r5, r5, #12
    86bc:	cmp	r7, r3
    86c0:	bge	8728 <coda_XML_ExternalEntityParserCreate+0x598>
    86c4:	ldr	r2, [r6, #20]
    86c8:	mov	r3, #0
    86cc:	mov	r1, sl
    86d0:	mov	r0, r4
    86d4:	add	r7, r7, #1
    86d8:	ldr	r9, [fp, #20]
    86dc:	ldr	r2, [r2, r5]
    86e0:	ldr	r2, [r2]
    86e4:	bl	a50 <lookup>
    86e8:	ldr	r3, [r6, #20]
    86ec:	str	r0, [r9, r5]
    86f0:	mov	r0, r8
    86f4:	ldr	r9, [fp, #20]
    86f8:	add	r3, r3, r5
    86fc:	ldrb	r2, [r3, #4]
    8700:	add	r9, r9, r5
    8704:	strb	r2, [r9, #4]
    8708:	ldr	r3, [r3, #8]
    870c:	subs	r1, r3, #0
    8710:	bne	8698 <coda_XML_ExternalEntityParserCreate+0x508>
    8714:	str	r3, [r9, #8]
    8718:	add	r5, r5, #12
    871c:	ldr	r3, [fp, #12]
    8720:	cmp	r7, r3
    8724:	blt	86c4 <coda_XML_ExternalEntityParserCreate+0x534>
    8728:	ldr	sl, [sp, #20]
    872c:	ldr	r8, [sp, #24]
    8730:	b	845c <coda_XML_ExternalEntityParserCreate+0x2cc>
    8734:	ldr	r5, [sp, #12]
    8738:	b	848c <coda_XML_ExternalEntityParserCreate+0x2fc>
    873c:	ldr	r5, [sp, #16]
    8740:	b	848c <coda_XML_ExternalEntityParserCreate+0x2fc>
    8744:	mov	r0, r4
    8748:	add	r3, r9, #132	; 0x84
    874c:	ldr	r2, [sp, #4]
    8750:	add	r1, sl, #132	; 0x84
    8754:	bl	2898 <copyEntityTable>
    8758:	cmp	r0, #0
    875c:	beq	848c <coda_XML_ExternalEntityParserCreate+0x2fc>
    8760:	ldrb	r3, [r9, #131]	; 0x83
    8764:	mov	r0, r5
    8768:	ldr	r1, [sp, #8]
    876c:	strb	r3, [sl, #131]	; 0x83
    8770:	ldrb	r3, [r9, #128]	; 0x80
    8774:	strb	r3, [sl, #128]	; 0x80
    8778:	ldrb	r3, [r9, #129]	; 0x81
    877c:	strb	r3, [sl, #129]	; 0x81
    8780:	ldrb	r3, [r9, #130]	; 0x82
    8784:	strb	r3, [sl, #130]	; 0x82
    8788:	ldrb	r3, [r9, #160]	; 0xa0
    878c:	strb	r3, [sl, #160]	; 0xa0
    8790:	ldrd	r2, [r9, #164]	; 0xa4
    8794:	ldr	ip, [r9, #172]	; 0xac
    8798:	str	r2, [sl, #164]	; 0xa4
    879c:	ldr	r2, [r9, #180]	; 0xb4
    87a0:	str	r3, [sl, #168]	; 0xa8
    87a4:	ldr	r3, [r9, #184]	; 0xb8
    87a8:	str	ip, [sl, #172]	; 0xac
    87ac:	strd	r2, [sl, #180]	; 0xb4
    87b0:	bl	2ab4 <setContext>
    87b4:	cmp	r0, #0
    87b8:	movwne	r3, #0
    87bc:	movtne	r3, #0
    87c0:	strne	r3, [r5, #288]	; 0x120
    87c4:	bne	8498 <coda_XML_ExternalEntityParserCreate+0x308>
    87c8:	b	848c <coda_XML_ExternalEntityParserCreate+0x2fc>
    87cc:	ldr	r5, [sp, #16]
    87d0:	mov	r0, fp
    87d4:	ldr	r3, [r5, #20]
    87d8:	blx	r3
    87dc:	b	848c <coda_XML_ExternalEntityParserCreate+0x2fc>

000087e0 <coda_XML_UseParserAsHandlerArg>:
    87e0:	str	r0, [r0, #4]
    87e4:	bx	lr

000087e8 <coda_XML_UseForeignDTD>:
    87e8:	ldr	r3, [r0, #496]	; 0x1f0
    87ec:	mov	r2, r0
    87f0:	bic	r3, r3, #2
    87f4:	cmp	r3, #1
    87f8:	movne	r0, #0
    87fc:	moveq	r0, #26
    8800:	strbne	r1, [r2, #505]	; 0x1f9
    8804:	bx	lr

00008808 <coda_XML_SetReturnNSTriplet>:
    8808:	ldr	r3, [r0, #496]	; 0x1f0
    880c:	bic	r3, r3, #2
    8810:	cmp	r3, #1
    8814:	beq	8824 <coda_XML_SetReturnNSTriplet+0x1c>
    8818:	adds	r1, r1, #0
    881c:	movne	r1, #1
    8820:	strb	r1, [r0, #245]	; 0xf5
    8824:	bx	lr

00008828 <coda_XML_SetUserData>:
    8828:	ldr	r3, [r0]
    882c:	str	r1, [r0]
    8830:	ldr	r2, [r0, #4]
    8834:	cmp	r2, r3
    8838:	streq	r1, [r0, #4]
    883c:	bx	lr

00008840 <coda_XML_SetBase>:
    8840:	subs	r2, r1, #0
    8844:	beq	8884 <coda_XML_SetBase+0x44>
    8848:	str	r4, [sp, #-8]!
    884c:	mov	r4, r0
    8850:	ldr	r0, [r0, #364]	; 0x16c
    8854:	str	lr, [sp, #4]
    8858:	add	r0, r0, #80	; 0x50
    885c:	bl	26b8 <poolCopyString>
    8860:	cmp	r0, #0
    8864:	moveq	r3, r0
    8868:	beq	8874 <coda_XML_SetBase+0x34>
    886c:	mov	r3, #1
    8870:	str	r0, [r4, #368]	; 0x170
    8874:	ldr	r4, [sp]
    8878:	add	sp, sp, #4
    887c:	mov	r0, r3
    8880:	pop	{pc}		; (ldr pc, [sp], #4)
    8884:	mov	r3, #1
    8888:	str	r2, [r0, #368]	; 0x170
    888c:	mov	r0, r3
    8890:	bx	lr

00008894 <coda_XML_GetBase>:
    8894:	ldr	r0, [r0, #368]	; 0x170
    8898:	bx	lr

0000889c <coda_XML_GetSpecifiedAttributeCount>:
    889c:	ldr	r0, [r0, #392]	; 0x188
    88a0:	bx	lr

000088a4 <coda_XML_GetIdAttributeIndex>:
    88a4:	ldr	r0, [r0, #396]	; 0x18c
    88a8:	bx	lr

000088ac <coda_XML_SetElementHandler>:
    88ac:	str	r1, [r0, #60]	; 0x3c
    88b0:	str	r2, [r0, #64]	; 0x40
    88b4:	bx	lr

000088b8 <coda_XML_SetStartElementHandler>:
    88b8:	str	r1, [r0, #60]	; 0x3c
    88bc:	bx	lr

000088c0 <coda_XML_SetEndElementHandler>:
    88c0:	str	r1, [r0, #64]	; 0x40
    88c4:	bx	lr

000088c8 <coda_XML_SetCharacterDataHandler>:
    88c8:	str	r1, [r0, #68]	; 0x44
    88cc:	bx	lr

000088d0 <coda_XML_SetProcessingInstructionHandler>:
    88d0:	str	r1, [r0, #72]	; 0x48
    88d4:	bx	lr

000088d8 <coda_XML_SetCommentHandler>:
    88d8:	str	r1, [r0, #76]	; 0x4c
    88dc:	bx	lr

000088e0 <coda_XML_SetCdataSectionHandler>:
    88e0:	str	r1, [r0, #80]	; 0x50
    88e4:	str	r2, [r0, #84]	; 0x54
    88e8:	bx	lr

000088ec <coda_XML_SetStartCdataSectionHandler>:
    88ec:	str	r1, [r0, #80]	; 0x50
    88f0:	bx	lr

000088f4 <coda_XML_SetEndCdataSectionHandler>:
    88f4:	str	r1, [r0, #84]	; 0x54
    88f8:	bx	lr

000088fc <coda_XML_SetDefaultHandler>:
    88fc:	mov	r3, #0
    8900:	str	r1, [r0, #88]	; 0x58
    8904:	strb	r3, [r0, #316]	; 0x13c
    8908:	bx	lr

0000890c <coda_XML_SetDefaultHandlerExpand>:
    890c:	mov	r3, #1
    8910:	str	r1, [r0, #88]	; 0x58
    8914:	strb	r3, [r0, #316]	; 0x13c
    8918:	bx	lr

0000891c <coda_XML_SetDoctypeDeclHandler>:
    891c:	str	r1, [r0, #92]	; 0x5c
    8920:	str	r2, [r0, #96]	; 0x60
    8924:	bx	lr

00008928 <coda_XML_SetStartDoctypeDeclHandler>:
    8928:	str	r1, [r0, #92]	; 0x5c
    892c:	bx	lr

00008930 <coda_XML_SetEndDoctypeDeclHandler>:
    8930:	str	r1, [r0, #96]	; 0x60
    8934:	bx	lr

00008938 <coda_XML_SetUnparsedEntityDeclHandler>:
    8938:	str	r1, [r0, #100]	; 0x64
    893c:	bx	lr

00008940 <coda_XML_SetNotationDeclHandler>:
    8940:	str	r1, [r0, #104]	; 0x68
    8944:	bx	lr

00008948 <coda_XML_SetNamespaceDeclHandler>:
    8948:	str	r1, [r0, #108]	; 0x6c
    894c:	str	r2, [r0, #112]	; 0x70
    8950:	bx	lr

00008954 <coda_XML_SetStartNamespaceDeclHandler>:
    8954:	str	r1, [r0, #108]	; 0x6c
    8958:	bx	lr

0000895c <coda_XML_SetEndNamespaceDeclHandler>:
    895c:	str	r1, [r0, #112]	; 0x70
    8960:	bx	lr

00008964 <coda_XML_SetNotStandaloneHandler>:
    8964:	str	r1, [r0, #116]	; 0x74
    8968:	bx	lr

0000896c <coda_XML_SetExternalEntityRefHandler>:
    896c:	str	r1, [r0, #120]	; 0x78
    8970:	bx	lr

00008974 <coda_XML_SetExternalEntityRefHandlerArg>:
    8974:	cmp	r1, #0
    8978:	moveq	r1, r0
    897c:	str	r1, [r0, #124]	; 0x7c
    8980:	bx	lr

00008984 <coda_XML_SetSkippedEntityHandler>:
    8984:	str	r1, [r0, #128]	; 0x80
    8988:	bx	lr

0000898c <coda_XML_SetUnknownEncodingHandler>:
    898c:	str	r1, [r0, #132]	; 0x84
    8990:	str	r2, [r0, #256]	; 0x100
    8994:	bx	lr

00008998 <coda_XML_SetElementDeclHandler>:
    8998:	str	r1, [r0, #136]	; 0x88
    899c:	bx	lr

000089a0 <coda_XML_SetAttlistDeclHandler>:
    89a0:	str	r1, [r0, #140]	; 0x8c
    89a4:	bx	lr

000089a8 <coda_XML_SetEntityDeclHandler>:
    89a8:	str	r1, [r0, #144]	; 0x90
    89ac:	bx	lr

000089b0 <coda_XML_SetXmlDeclHandler>:
    89b0:	str	r1, [r0, #148]	; 0x94
    89b4:	bx	lr

000089b8 <coda_XML_SetParamEntityParsing>:
    89b8:	ldr	r3, [r0, #496]	; 0x1f0
    89bc:	mov	r2, r0
    89c0:	bic	r3, r3, #2
    89c4:	cmp	r3, #1
    89c8:	movne	r0, #1
    89cc:	moveq	r0, #0
    89d0:	strne	r1, [r2, #508]	; 0x1fc
    89d4:	bx	lr

000089d8 <coda_XML_SetHashSalt>:
    89d8:	ldr	r3, [r0, #496]	; 0x1f0
    89dc:	mov	r2, r0
    89e0:	bic	r3, r3, #2
    89e4:	cmp	r3, #1
    89e8:	movne	r0, #1
    89ec:	moveq	r0, #0
    89f0:	strne	r1, [r2, #512]	; 0x200
    89f4:	bx	lr

000089f8 <coda_XML_ParseBuffer>:
    89f8:	strd	r4, [sp, #-32]!	; 0xffffffe0
    89fc:	mov	r4, r0
    8a00:	ldr	r5, [r0, #496]	; 0x1f0
    8a04:	strd	r6, [sp, #8]
    8a08:	str	r8, [sp, #16]
    8a0c:	strd	sl, [sp, #20]
    8a10:	str	lr, [sp, #28]
    8a14:	sub	sp, sp, #8
    8a18:	cmp	r5, #2
    8a1c:	beq	8b24 <coda_XML_ParseBuffer+0x12c>
    8a20:	cmp	r5, #3
    8a24:	beq	8b14 <coda_XML_ParseBuffer+0x11c>
    8a28:	cmp	r5, #0
    8a2c:	mov	r8, r2
    8a30:	beq	8ae8 <coda_XML_ParseBuffer+0xf0>
    8a34:	ldr	lr, [r4, #24]
    8a38:	mov	r5, #1
    8a3c:	add	r3, r4, #24
    8a40:	mov	r0, r4
    8a44:	ldrd	r6, [r4, #40]	; 0x28
    8a48:	ldr	ip, [r4, #28]
    8a4c:	str	lr, [r4, #304]	; 0x130
    8a50:	str	r5, [r4, #496]	; 0x1f0
    8a54:	adds	sl, r6, r1
    8a58:	strb	r8, [r4, #500]	; 0x1f4
    8a5c:	adc	fp, r7, r1, asr #31
    8a60:	ldr	r6, [r4, #288]	; 0x120
    8a64:	add	ip, ip, r1
    8a68:	mov	r1, lr
    8a6c:	mov	r2, ip
    8a70:	str	ip, [r4, #28]
    8a74:	strd	sl, [r4, #40]	; 0x28
    8a78:	str	ip, [r4, #48]	; 0x30
    8a7c:	blx	r6
    8a80:	cmp	r0, #0
    8a84:	str	r0, [r4, #292]	; 0x124
    8a88:	bne	8b34 <coda_XML_ParseBuffer+0x13c>
    8a8c:	ldr	r3, [r4, #496]	; 0x1f0
    8a90:	cmp	r3, #1
    8a94:	bls	8b50 <coda_XML_ParseBuffer+0x158>
    8a98:	cmp	r3, #3
    8a9c:	moveq	r5, #2
    8aa0:	movne	r5, #1
    8aa4:	add	r3, r4, #416	; 0x1a0
    8aa8:	ldr	r2, [r4, #24]
    8aac:	ldr	ip, [r4, #152]	; 0x98
    8ab0:	ldr	r1, [r4, #304]	; 0x130
    8ab4:	mov	r0, ip
    8ab8:	ldr	r6, [ip, #52]	; 0x34
    8abc:	blx	r6
    8ac0:	ldr	r3, [r4, #24]
    8ac4:	str	r3, [r4, #304]	; 0x130
    8ac8:	mov	r0, r5
    8acc:	add	sp, sp, #8
    8ad0:	ldrd	r4, [sp]
    8ad4:	ldrd	r6, [sp, #8]
    8ad8:	ldr	r8, [sp, #16]
    8adc:	ldrd	sl, [sp, #20]
    8ae0:	add	sp, sp, #28
    8ae4:	pop	{pc}		; (ldr pc, [sp], #4)
    8ae8:	ldr	r3, [r0, #492]	; 0x1ec
    8aec:	cmp	r3, #0
    8af0:	bne	8a34 <coda_XML_ParseBuffer+0x3c>
    8af4:	str	r1, [sp, #4]
    8af8:	bl	7660 <startParsing>
    8afc:	cmp	r0, #0
    8b00:	ldr	r1, [sp, #4]
    8b04:	moveq	r3, #1
    8b08:	streq	r3, [r4, #292]	; 0x124
    8b0c:	bne	8a34 <coda_XML_ParseBuffer+0x3c>
    8b10:	b	8ac8 <coda_XML_ParseBuffer+0xd0>
    8b14:	mov	r3, #33	; 0x21
    8b18:	mov	r5, #0
    8b1c:	str	r3, [r0, #292]	; 0x124
    8b20:	b	8ac8 <coda_XML_ParseBuffer+0xd0>
    8b24:	mov	r3, #36	; 0x24
    8b28:	mov	r5, #0
    8b2c:	str	r3, [r0, #292]	; 0x124
    8b30:	b	8ac8 <coda_XML_ParseBuffer+0xd0>
    8b34:	ldr	r2, [r4, #296]	; 0x128
    8b38:	movw	r3, #0
    8b3c:	movt	r3, #0
    8b40:	mov	r5, #0
    8b44:	str	r3, [r4, #288]	; 0x120
    8b48:	str	r2, [r4, #300]	; 0x12c
    8b4c:	b	8ac8 <coda_XML_ParseBuffer+0xd0>
    8b50:	cmp	r8, #0
    8b54:	movne	r3, #2
    8b58:	strne	r3, [r4, #496]	; 0x1f0
    8b5c:	beq	8aa4 <coda_XML_ParseBuffer+0xac>
    8b60:	b	8ac8 <coda_XML_ParseBuffer+0xd0>

00008b64 <coda_XML_GetBuffer>:
    8b64:	cmp	r1, #0
    8b68:	strd	r4, [sp, #-16]!
    8b6c:	mov	r4, r0
    8b70:	str	r6, [sp, #8]
    8b74:	str	lr, [sp, #12]
    8b78:	blt	8cd8 <coda_XML_GetBuffer+0x174>
    8b7c:	ldr	r3, [r0, #496]	; 0x1f0
    8b80:	cmp	r3, #2
    8b84:	beq	8cbc <coda_XML_GetBuffer+0x158>
    8b88:	cmp	r3, #3
    8b8c:	bne	8bac <coda_XML_GetBuffer+0x48>
    8b90:	mov	r3, #33	; 0x21
    8b94:	mov	r0, #0
    8b98:	str	r3, [r4, #292]	; 0x124
    8b9c:	ldrd	r4, [sp]
    8ba0:	ldr	r6, [sp, #8]
    8ba4:	add	sp, sp, #12
    8ba8:	pop	{pc}		; (ldr pc, [sp], #4)
    8bac:	ldr	r0, [r0, #28]
    8bb0:	ldr	r5, [r4, #32]
    8bb4:	sub	r3, r5, r0
    8bb8:	cmp	r1, r3
    8bbc:	ble	8b9c <coda_XML_GetBuffer+0x38>
    8bc0:	ldr	lr, [r4, #8]
    8bc4:	ldr	r3, [r4, #24]
    8bc8:	sub	r2, r0, r3
    8bcc:	sub	ip, r3, lr
    8bd0:	adds	r1, r1, r2
    8bd4:	bmi	8cd8 <coda_XML_GetBuffer+0x174>
    8bd8:	cmp	ip, #1024	; 0x400
    8bdc:	sub	r6, r5, lr
    8be0:	ble	8cf4 <coda_XML_GetBuffer+0x190>
    8be4:	add	r1, r1, #1024	; 0x400
    8be8:	cmp	r6, r1
    8bec:	bge	8d04 <coda_XML_GetBuffer+0x1a0>
    8bf0:	subs	r5, r5, r3
    8bf4:	moveq	r5, #1024	; 0x400
    8bf8:	lsl	r5, r5, #1
    8bfc:	cmp	r5, r1
    8c00:	movge	r3, #0
    8c04:	movlt	r3, #1
    8c08:	cmp	r5, #0
    8c0c:	movle	r3, #0
    8c10:	cmp	r3, #0
    8c14:	bne	8bf8 <coda_XML_GetBuffer+0x94>
    8c18:	cmp	r5, #0
    8c1c:	ble	8cd8 <coda_XML_GetBuffer+0x174>
    8c20:	mov	r0, r5
    8c24:	ldr	r3, [r4, #12]
    8c28:	blx	r3
    8c2c:	subs	r6, r0, #0
    8c30:	beq	8cd8 <coda_XML_GetBuffer+0x174>
    8c34:	ldr	r1, [r4, #24]
    8c38:	add	r5, r6, r5
    8c3c:	str	r5, [r4, #32]
    8c40:	ldr	r2, [r4, #28]
    8c44:	cmp	r1, #0
    8c48:	beq	8d38 <coda_XML_GetBuffer+0x1d4>
    8c4c:	ldr	r5, [r4, #8]
    8c50:	sub	r2, r2, r1
    8c54:	sub	r5, r1, r5
    8c58:	cmp	r5, #1024	; 0x400
    8c5c:	movge	r5, #1024	; 0x400
    8c60:	add	r2, r2, r5
    8c64:	sub	r1, r1, r5
    8c68:	bl	0 <memcpy>
    8c6c:	ldr	r0, [r4, #8]
    8c70:	ldr	r3, [r4, #20]
    8c74:	blx	r3
    8c78:	ldr	r3, [r4, #24]
    8c7c:	add	r2, r6, r5
    8c80:	str	r6, [r4, #8]
    8c84:	ldr	r0, [r4, #28]
    8c88:	str	r2, [r4, #24]
    8c8c:	sub	r0, r0, r3
    8c90:	add	r0, r0, r5
    8c94:	add	r0, r6, r0
    8c98:	str	r0, [r4, #28]
    8c9c:	mov	r3, #0
    8ca0:	ldr	r6, [sp, #8]
    8ca4:	str	r3, [r4, #296]	; 0x128
    8ca8:	str	r3, [r4, #300]	; 0x12c
    8cac:	str	r3, [r4, #304]	; 0x130
    8cb0:	ldrd	r4, [sp]
    8cb4:	add	sp, sp, #12
    8cb8:	pop	{pc}		; (ldr pc, [sp], #4)
    8cbc:	mov	r3, #36	; 0x24
    8cc0:	ldr	r6, [sp, #8]
    8cc4:	mov	r0, #0
    8cc8:	str	r3, [r4, #292]	; 0x124
    8ccc:	ldrd	r4, [sp]
    8cd0:	add	sp, sp, #12
    8cd4:	pop	{pc}		; (ldr pc, [sp], #4)
    8cd8:	mov	r3, #1
    8cdc:	ldr	r6, [sp, #8]
    8ce0:	mov	r0, #0
    8ce4:	str	r3, [r4, #292]	; 0x124
    8ce8:	ldrd	r4, [sp]
    8cec:	add	sp, sp, #12
    8cf0:	pop	{pc}		; (ldr pc, [sp], #4)
    8cf4:	add	r1, r1, ip
    8cf8:	cmp	r6, r1
    8cfc:	bge	8c9c <coda_XML_GetBuffer+0x138>
    8d00:	b	8bf0 <coda_XML_GetBuffer+0x8c>
    8d04:	sub	r5, ip, #1024	; 0x400
    8d08:	add	r2, r2, #1024	; 0x400
    8d0c:	add	r1, lr, r5
    8d10:	mov	r0, lr
    8d14:	bl	0 <memmove>
    8d18:	ldr	r3, [r4, #24]
    8d1c:	rsb	ip, r5, #0
    8d20:	ldr	r0, [r4, #28]
    8d24:	add	r3, r3, ip
    8d28:	add	r0, r0, ip
    8d2c:	str	r3, [r4, #24]
    8d30:	str	r0, [r4, #28]
    8d34:	b	8c9c <coda_XML_GetBuffer+0x138>
    8d38:	add	r0, r6, r2
    8d3c:	str	r6, [r4, #8]
    8d40:	str	r6, [r4, #24]
    8d44:	str	r0, [r4, #28]
    8d48:	b	8c9c <coda_XML_GetBuffer+0x138>

00008d4c <coda_XML_Parse>:
    8d4c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    8d50:	mov	r4, r0
    8d54:	ldr	r5, [r0, #496]	; 0x1f0
    8d58:	strd	r6, [sp, #8]
    8d5c:	str	r8, [sp, #16]
    8d60:	str	lr, [sp, #20]
    8d64:	cmp	r5, #2
    8d68:	beq	8e24 <coda_XML_Parse+0xd8>
    8d6c:	cmp	r5, #3
    8d70:	beq	8e58 <coda_XML_Parse+0x10c>
    8d74:	cmp	r5, #0
    8d78:	mov	r8, r3
    8d7c:	mov	r7, r2
    8d80:	mov	r6, r1
    8d84:	beq	8e34 <coda_XML_Parse+0xe8>
    8d88:	mov	r5, #1
    8d8c:	cmp	r7, #0
    8d90:	str	r5, [r4, #496]	; 0x1f0
    8d94:	bne	8e68 <coda_XML_Parse+0x11c>
    8d98:	cmp	r8, #0
    8d9c:	strb	r8, [r4, #500]	; 0x1f4
    8da0:	beq	8e0c <coda_XML_Parse+0xc0>
    8da4:	ldr	r1, [r4, #24]
    8da8:	add	r3, r4, #24
    8dac:	mov	r0, r4
    8db0:	ldr	r2, [r4, #28]
    8db4:	ldr	r6, [r4, #288]	; 0x120
    8db8:	str	r2, [r4, #48]	; 0x30
    8dbc:	str	r1, [r4, #304]	; 0x130
    8dc0:	blx	r6
    8dc4:	cmp	r0, #0
    8dc8:	str	r0, [r4, #292]	; 0x124
    8dcc:	bne	8eac <coda_XML_Parse+0x160>
    8dd0:	ldr	r3, [r4, #496]	; 0x1f0
    8dd4:	cmp	r3, r5
    8dd8:	bls	8ec8 <coda_XML_Parse+0x17c>
    8ddc:	cmp	r3, #3
    8de0:	bne	8e0c <coda_XML_Parse+0xc0>
    8de4:	add	r3, r4, #416	; 0x1a0
    8de8:	ldr	r2, [r4, #24]
    8dec:	mov	r5, #2
    8df0:	ldr	ip, [r4, #152]	; 0x98
    8df4:	ldr	r1, [r4, #304]	; 0x130
    8df8:	mov	r0, ip
    8dfc:	ldr	r6, [ip, #52]	; 0x34
    8e00:	blx	r6
    8e04:	ldr	r3, [r4, #24]
    8e08:	str	r3, [r4, #304]	; 0x130
    8e0c:	mov	r0, r5
    8e10:	ldrd	r4, [sp]
    8e14:	ldrd	r6, [sp, #8]
    8e18:	ldr	r8, [sp, #16]
    8e1c:	add	sp, sp, #20
    8e20:	pop	{pc}		; (ldr pc, [sp], #4)
    8e24:	mov	r3, #36	; 0x24
    8e28:	mov	r5, #0
    8e2c:	str	r3, [r0, #292]	; 0x124
    8e30:	b	8e0c <coda_XML_Parse+0xc0>
    8e34:	ldr	r3, [r0, #492]	; 0x1ec
    8e38:	cmp	r3, #0
    8e3c:	bne	8d88 <coda_XML_Parse+0x3c>
    8e40:	bl	7660 <startParsing>
    8e44:	cmp	r0, #0
    8e48:	moveq	r3, #1
    8e4c:	streq	r3, [r4, #292]	; 0x124
    8e50:	bne	8d88 <coda_XML_Parse+0x3c>
    8e54:	b	8e0c <coda_XML_Parse+0xc0>
    8e58:	mov	r3, #33	; 0x21
    8e5c:	mov	r5, #0
    8e60:	str	r3, [r0, #292]	; 0x124
    8e64:	b	8e0c <coda_XML_Parse+0xc0>
    8e68:	mov	r1, r7
    8e6c:	mov	r0, r4
    8e70:	bl	8b64 <coda_XML_GetBuffer>
    8e74:	subs	r5, r0, #0
    8e78:	beq	8e0c <coda_XML_Parse+0xc0>
    8e7c:	mov	r1, r6
    8e80:	mov	r2, r7
    8e84:	bl	0 <memcpy>
    8e88:	mov	r2, r8
    8e8c:	mov	r1, r7
    8e90:	ldrd	r6, [sp, #8]
    8e94:	mov	r0, r4
    8e98:	ldrd	r4, [sp]
    8e9c:	ldr	r8, [sp, #16]
    8ea0:	ldr	lr, [sp, #20]
    8ea4:	add	sp, sp, #24
    8ea8:	b	89f8 <coda_XML_ParseBuffer>
    8eac:	ldr	r2, [r4, #296]	; 0x128
    8eb0:	movw	r3, #0
    8eb4:	movt	r3, #0
    8eb8:	mov	r5, r7
    8ebc:	str	r3, [r4, #288]	; 0x120
    8ec0:	str	r2, [r4, #300]	; 0x12c
    8ec4:	b	8e0c <coda_XML_Parse+0xc0>
    8ec8:	mov	r3, #2
    8ecc:	str	r3, [r4, #496]	; 0x1f0
    8ed0:	b	8e0c <coda_XML_Parse+0xc0>

00008ed4 <coda_XML_StopParser>:
    8ed4:	ldr	r3, [r0, #496]	; 0x1f0
    8ed8:	cmp	r3, #2
    8edc:	beq	8f10 <coda_XML_StopParser+0x3c>
    8ee0:	cmp	r3, #3
    8ee4:	bne	8f24 <coda_XML_StopParser+0x50>
    8ee8:	cmp	r1, #0
    8eec:	movne	r2, #33	; 0x21
    8ef0:	movne	r3, #0
    8ef4:	strne	r2, [r0, #292]	; 0x124
    8ef8:	bne	8f08 <coda_XML_StopParser+0x34>
    8efc:	mov	r2, #2
    8f00:	mov	r3, #1
    8f04:	str	r2, [r0, #496]	; 0x1f0
    8f08:	mov	r0, r3
    8f0c:	bx	lr
    8f10:	mov	r2, #36	; 0x24
    8f14:	mov	r3, #0
    8f18:	str	r2, [r0, #292]	; 0x124
    8f1c:	mov	r0, r3
    8f20:	bx	lr
    8f24:	cmp	r1, #0
    8f28:	beq	8efc <coda_XML_StopParser+0x28>
    8f2c:	ldrb	r3, [r0, #504]	; 0x1f8
    8f30:	cmp	r3, #0
    8f34:	movne	r2, #37	; 0x25
    8f38:	movne	r3, #0
    8f3c:	strne	r2, [r0, #292]	; 0x124
    8f40:	bne	8f08 <coda_XML_StopParser+0x34>
    8f44:	mov	r2, #3
    8f48:	mov	r3, #1
    8f4c:	str	r2, [r0, #496]	; 0x1f0
    8f50:	mov	r0, r3
    8f54:	bx	lr

00008f58 <coda_XML_ResumeParser>:
    8f58:	ldr	r3, [r0, #496]	; 0x1f0
    8f5c:	strd	r4, [sp, #-16]!
    8f60:	mov	r4, r0
    8f64:	str	r6, [sp, #8]
    8f68:	str	lr, [sp, #12]
    8f6c:	cmp	r3, #3
    8f70:	beq	8f94 <coda_XML_ResumeParser+0x3c>
    8f74:	mov	r3, #34	; 0x22
    8f78:	mov	r5, #0
    8f7c:	str	r3, [r0, #292]	; 0x124
    8f80:	mov	r0, r5
    8f84:	ldrd	r4, [sp]
    8f88:	ldr	r6, [sp, #8]
    8f8c:	add	sp, sp, #12
    8f90:	pop	{pc}		; (ldr pc, [sp], #4)
    8f94:	mov	r5, #1
    8f98:	add	r3, r0, #24
    8f9c:	ldr	r1, [r0, #24]
    8fa0:	str	r5, [r0, #496]	; 0x1f0
    8fa4:	ldr	r2, [r0, #48]	; 0x30
    8fa8:	ldr	r6, [r0, #288]	; 0x120
    8fac:	blx	r6
    8fb0:	cmp	r0, #0
    8fb4:	str	r0, [r4, #292]	; 0x124
    8fb8:	bne	8ffc <coda_XML_ResumeParser+0xa4>
    8fbc:	ldr	r3, [r4, #496]	; 0x1f0
    8fc0:	cmp	r3, #1
    8fc4:	bls	9018 <coda_XML_ResumeParser+0xc0>
    8fc8:	cmp	r3, #3
    8fcc:	moveq	r5, #2
    8fd0:	movne	r5, #1
    8fd4:	add	r3, r4, #416	; 0x1a0
    8fd8:	ldr	r2, [r4, #24]
    8fdc:	ldr	ip, [r4, #152]	; 0x98
    8fe0:	ldr	r1, [r4, #304]	; 0x130
    8fe4:	mov	r0, ip
    8fe8:	ldr	r6, [ip, #52]	; 0x34
    8fec:	blx	r6
    8ff0:	ldr	r3, [r4, #24]
    8ff4:	str	r3, [r4, #304]	; 0x130
    8ff8:	b	8f80 <coda_XML_ResumeParser+0x28>
    8ffc:	ldr	r2, [r4, #296]	; 0x128
    9000:	movw	r3, #0
    9004:	movt	r3, #0
    9008:	mov	r5, #0
    900c:	str	r3, [r4, #288]	; 0x120
    9010:	str	r2, [r4, #300]	; 0x12c
    9014:	b	8f80 <coda_XML_ResumeParser+0x28>
    9018:	ldrb	r3, [r4, #500]	; 0x1f4
    901c:	cmp	r3, #0
    9020:	movne	r3, #2
    9024:	strne	r3, [r4, #496]	; 0x1f0
    9028:	beq	8fd4 <coda_XML_ResumeParser+0x7c>
    902c:	b	8f80 <coda_XML_ResumeParser+0x28>

00009030 <coda_XML_GetParsingStatus>:
    9030:	cmp	r1, #0
    9034:	beq	9048 <coda_XML_GetParsingStatus+0x18>
    9038:	add	r0, r0, #496	; 0x1f0
    903c:	ldrd	r2, [r0]
    9040:	strd	r2, [r1]
    9044:	bx	lr
    9048:	movw	r1, #0
    904c:	movt	r1, #0
    9050:	ldr	r3, [pc, #20]	; 906c <coda_XML_GetParsingStatus+0x3c>
    9054:	movw	r0, #0
    9058:	movt	r0, #0
    905c:	str	r4, [sp, #-8]!
    9060:	movw	r2, #1835	; 0x72b
    9064:	str	lr, [sp, #4]
    9068:	bl	0 <__assert_fail>
    906c:	.word	0x000000d0

00009070 <coda_XML_GetErrorCode>:
    9070:	ldr	r0, [r0, #292]	; 0x124
    9074:	bx	lr

00009078 <coda_XML_GetCurrentByteIndex>:
    9078:	ldr	r2, [r0, #296]	; 0x128
    907c:	strd	r4, [sp, #-8]!
    9080:	cmp	r2, #0
    9084:	beq	90b0 <coda_XML_GetCurrentByteIndex+0x38>
    9088:	ldr	r3, [r0, #48]	; 0x30
    908c:	ldrd	r0, [r0, #40]	; 0x28
    9090:	sub	r3, r3, r2
    9094:	subs	r4, r0, r3
    9098:	sbc	r5, r1, r3, asr #31
    909c:	mov	r0, r4
    90a0:	mov	r1, r5
    90a4:	ldrd	r4, [sp]
    90a8:	add	sp, sp, #8
    90ac:	bx	lr
    90b0:	mvn	r4, #0
    90b4:	mvn	r5, #0
    90b8:	b	909c <coda_XML_GetCurrentByteIndex+0x24>

000090bc <coda_XML_GetCurrentByteCount>:
    90bc:	ldr	r3, [r0, #300]	; 0x12c
    90c0:	cmp	r3, #0
    90c4:	beq	90dc <coda_XML_GetCurrentByteCount+0x20>
    90c8:	ldr	r0, [r0, #296]	; 0x128
    90cc:	cmp	r0, #0
    90d0:	beq	90e0 <coda_XML_GetCurrentByteCount+0x24>
    90d4:	sub	r0, r3, r0
    90d8:	bx	lr
    90dc:	mov	r0, r3
    90e0:	bx	lr

000090e4 <coda_XML_GetInputContext>:
    90e4:	ldr	ip, [r0, #296]	; 0x128
    90e8:	cmp	ip, #0
    90ec:	moveq	r3, ip
    90f0:	beq	9114 <coda_XML_GetInputContext+0x30>
    90f4:	ldr	r3, [r0, #8]
    90f8:	cmp	r3, #0
    90fc:	beq	9114 <coda_XML_GetInputContext+0x30>
    9100:	ldr	r0, [r0, #28]
    9104:	sub	ip, ip, r3
    9108:	str	ip, [r1]
    910c:	sub	r0, r0, r3
    9110:	str	r0, [r2]
    9114:	mov	r0, r3
    9118:	bx	lr

0000911c <coda_XML_GetCurrentLineNumber>:
    911c:	ldr	r2, [r0, #296]	; 0x128
    9120:	strd	r4, [sp, #-16]!
    9124:	str	r6, [sp, #8]
    9128:	str	lr, [sp, #12]
    912c:	cmp	r2, #0
    9130:	beq	9140 <coda_XML_GetCurrentLineNumber+0x24>
    9134:	ldr	r1, [r0, #304]	; 0x130
    9138:	cmp	r2, r1
    913c:	bcs	9160 <coda_XML_GetCurrentLineNumber+0x44>
    9140:	add	r5, r0, #416	; 0x1a0
    9144:	ldrd	r0, [r5]
    9148:	ldrd	r4, [sp]
    914c:	ldr	r6, [sp, #8]
    9150:	add	sp, sp, #12
    9154:	adds	r0, r0, #1
    9158:	adc	r1, r1, #0
    915c:	pop	{pc}		; (ldr pc, [sp], #4)
    9160:	ldr	ip, [r0, #152]	; 0x98
    9164:	add	r5, r0, #416	; 0x1a0
    9168:	mov	r4, r0
    916c:	mov	r3, r5
    9170:	mov	r0, ip
    9174:	ldr	r6, [ip, #52]	; 0x34
    9178:	blx	r6
    917c:	ldr	r3, [r4, #296]	; 0x128
    9180:	str	r3, [r4, #304]	; 0x130
    9184:	b	9144 <coda_XML_GetCurrentLineNumber+0x28>

00009188 <coda_XML_GetCurrentColumnNumber>:
    9188:	ldr	r2, [r0, #296]	; 0x128
    918c:	strd	r4, [sp, #-16]!
    9190:	mov	r4, r0
    9194:	str	r6, [sp, #8]
    9198:	str	lr, [sp, #12]
    919c:	cmp	r2, #0
    91a0:	beq	91cc <coda_XML_GetCurrentColumnNumber+0x44>
    91a4:	ldr	r1, [r0, #304]	; 0x130
    91a8:	cmp	r2, r1
    91ac:	bcc	91cc <coda_XML_GetCurrentColumnNumber+0x44>
    91b0:	ldr	ip, [r0, #152]	; 0x98
    91b4:	add	r3, r0, #416	; 0x1a0
    91b8:	mov	r0, ip
    91bc:	ldr	r5, [ip, #52]	; 0x34
    91c0:	blx	r5
    91c4:	ldr	r3, [r4, #296]	; 0x128
    91c8:	str	r3, [r4, #304]	; 0x130
    91cc:	add	r4, r4, #432	; 0x1b0
    91d0:	ldr	r6, [sp, #8]
    91d4:	ldrd	r0, [r4, #-8]
    91d8:	ldrd	r4, [sp]
    91dc:	add	sp, sp, #12
    91e0:	pop	{pc}		; (ldr pc, [sp], #4)

000091e4 <coda_XML_FreeContentModel>:
    91e4:	ldr	r3, [r0, #20]
    91e8:	mov	r0, r1
    91ec:	bx	r3

000091f0 <coda_XML_MemMalloc>:
    91f0:	ldr	r3, [r0, #12]
    91f4:	mov	r0, r1
    91f8:	bx	r3

000091fc <coda_XML_MemRealloc>:
    91fc:	mov	ip, r1
    9200:	mov	r1, r2
    9204:	ldr	r3, [r0, #16]
    9208:	mov	r0, ip
    920c:	bx	r3

00009210 <coda_XML_MemFree>:
    9210:	ldr	r3, [r0, #20]
    9214:	mov	r0, r1
    9218:	bx	r3

0000921c <coda_XML_DefaultCurrent>:
    921c:	ldr	r3, [r0, #88]	; 0x58
    9220:	cmp	r3, #0
    9224:	beq	9250 <coda_XML_DefaultCurrent+0x34>
    9228:	ldr	r3, [r0, #308]	; 0x134
    922c:	cmp	r3, #0
    9230:	beq	9240 <coda_XML_DefaultCurrent+0x24>
    9234:	ldrd	r2, [r3]
    9238:	ldr	r1, [r0, #236]	; 0xec
    923c:	b	90 <reportDefault>
    9240:	ldr	r1, [r0, #152]	; 0x98
    9244:	ldr	r2, [r0, #296]	; 0x128
    9248:	ldr	r3, [r0, #300]	; 0x12c
    924c:	b	90 <reportDefault>
    9250:	bx	lr

00009254 <coda_XML_ErrorString>:
    9254:	sub	r3, r0, #1
    9258:	cmp	r3, #39	; 0x27
    925c:	bhi	9274 <coda_XML_ErrorString+0x20>
    9260:	movw	r3, #0
    9264:	movt	r3, #0
    9268:	add	r3, r3, r0, lsl #2
    926c:	ldr	r0, [r3, #236]	; 0xec
    9270:	bx	lr
    9274:	mov	r0, #0
    9278:	bx	lr

0000927c <coda_XML_ExpatVersion>:
    927c:	movw	r0, #0
    9280:	movt	r0, #0
    9284:	bx	lr

00009288 <coda_XML_ExpatVersionInfo>:
    9288:	mov	r2, #1
    928c:	mov	r1, #2
    9290:	stm	r0, {r1, r2}
    9294:	str	r2, [r0, #8]
    9298:	bx	lr

0000929c <coda_XML_GetFeatureList>:
    929c:	ldr	r0, [pc]	; 92a4 <coda_XML_GetFeatureList+0x8>
    92a0:	bx	lr
    92a4:	.word	0x00000190
