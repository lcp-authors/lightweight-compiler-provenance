
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/pcre/pcre_byte_order.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <swap_uint32>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	and	r1, r0, #65280	; 0xff00
  14:	lsl	ip, r1, #8
  18:	orr	r3, ip, r0, lsl #24
  1c:	and	r1, r0, #16711680	; 0xff0000
  20:	orr	r2, r3, r1, lsr #8
  24:	orr	r0, r2, r0, lsr #24
  28:	ldr	lr, [sp, #4]
  2c:	add	sp, sp, #8
  30:	bx	lr

00000034 <swap_uint16>:
  34:	mov	ip, sp
  38:	sub	sp, sp, #8
  3c:	str	ip, [sp]
  40:	str	lr, [sp, #4]
  44:	lsl	r1, r0, #8
  48:	orr	r0, r1, r0, asr #8
  4c:	bic	r0, r0, #16711680	; 0xff0000
  50:	bic	r0, r0, #-16777216	; 0xff000000
  54:	ldr	lr, [sp, #4]
  58:	add	sp, sp, #8
  5c:	bx	lr

00000060 <coda_pcre_pattern_to_host_byte_order>:
  60:	mov	ip, sp
  64:	sub	sp, sp, #24
  68:	str	ip, [sp]
  6c:	str	lr, [sp, #4]
  70:	str	r4, [sp, #8]
  74:	str	r5, [sp, #12]
  78:	str	r6, [sp, #16]
  7c:	mov	r6, r2
  80:	mov	r5, r1
  84:	mov	r4, r0
  88:	cmp	r4, #0
  8c:	bne	98 <coda_pcre_pattern_to_host_byte_order+0x38>
  90:	mvn	r0, #1
  94:	b	248 <coda_pcre_pattern_to_host_byte_order+0x1e8>
  98:	ldr	r0, [r4]
  9c:	movw	lr, #21061	; 0x5245
  a0:	movt	lr, #20547	; 0x5043
  a4:	cmp	r0, lr
  a8:	bne	d0 <coda_pcre_pattern_to_host_byte_order+0x70>
  ac:	ldr	r3, [r4, #12]
  b0:	and	ip, r3, #1
  b4:	cmp	ip, #0
  b8:	bne	c4 <coda_pcre_pattern_to_host_byte_order+0x64>
  bc:	mvn	r0, #27
  c0:	b	248 <coda_pcre_pattern_to_host_byte_order+0x1e8>
  c4:	str	r6, [r4, #48]	; 0x30
  c8:	mov	r0, #0
  cc:	b	248 <coda_pcre_pattern_to_host_byte_order+0x1e8>
  d0:	movw	lr, #17232	; 0x4350
  d4:	movt	lr, #17746	; 0x4552
  d8:	cmp	r0, lr
  dc:	beq	e8 <coda_pcre_pattern_to_host_byte_order+0x88>
  e0:	mvn	r0, #3
  e4:	b	248 <coda_pcre_pattern_to_host_byte_order+0x1e8>
  e8:	ldr	r0, [r4, #12]
  ec:	bl	0 <swap_uint32>
  f0:	and	r1, r0, #1
  f4:	cmp	r1, #0
  f8:	bne	104 <coda_pcre_pattern_to_host_byte_order+0xa4>
  fc:	mvn	r0, #27
 100:	b	248 <coda_pcre_pattern_to_host_byte_order+0x1e8>
 104:	movw	r1, #21061	; 0x5245
 108:	movt	r1, #20547	; 0x5043
 10c:	str	r1, [r4]
 110:	ldr	r0, [r4, #4]
 114:	bl	0 <swap_uint32>
 118:	str	r0, [r4, #4]
 11c:	ldr	r0, [r4, #8]
 120:	bl	0 <swap_uint32>
 124:	str	r0, [r4, #8]
 128:	ldr	r0, [r4, #12]
 12c:	bl	0 <swap_uint32>
 130:	str	r0, [r4, #12]
 134:	ldr	r0, [r4, #16]
 138:	bl	0 <swap_uint32>
 13c:	str	r0, [r4, #16]
 140:	ldr	r0, [r4, #20]
 144:	bl	0 <swap_uint32>
 148:	str	r0, [r4, #20]
 14c:	ldrh	r3, [r4, #24]
 150:	bic	r0, r3, #16711680	; 0xff0000
 154:	bic	r0, r0, #-16777216	; 0xff000000
 158:	bl	34 <swap_uint16>
 15c:	strh	r0, [r4, #24]
 160:	ldrh	r0, [r4, #26]
 164:	bic	r0, r0, #16711680	; 0xff0000
 168:	bic	r0, r0, #-16777216	; 0xff000000
 16c:	bl	34 <swap_uint16>
 170:	strh	r0, [r4, #26]
 174:	ldrh	r0, [r4, #28]
 178:	bic	r0, r0, #16711680	; 0xff0000
 17c:	bic	r0, r0, #-16777216	; 0xff000000
 180:	bl	34 <swap_uint16>
 184:	strh	r0, [r4, #28]
 188:	ldrh	r1, [r4, #30]
 18c:	bic	r0, r1, #16711680	; 0xff0000
 190:	bic	r0, r0, #-16777216	; 0xff000000
 194:	bl	34 <swap_uint16>
 198:	strh	r0, [r4, #30]
 19c:	ldrh	r2, [r4, #32]
 1a0:	bic	r0, r2, #16711680	; 0xff0000
 1a4:	bic	r0, r0, #-16777216	; 0xff000000
 1a8:	bl	34 <swap_uint16>
 1ac:	strh	r0, [r4, #32]
 1b0:	ldrh	r0, [r4, #34]	; 0x22
 1b4:	bic	r0, r0, #16711680	; 0xff0000
 1b8:	bic	r0, r0, #-16777216	; 0xff000000
 1bc:	bl	34 <swap_uint16>
 1c0:	strh	r0, [r4, #34]	; 0x22
 1c4:	ldrh	r2, [r4, #36]	; 0x24
 1c8:	bic	r0, r2, #16711680	; 0xff0000
 1cc:	bic	r0, r0, #-16777216	; 0xff000000
 1d0:	bl	34 <swap_uint16>
 1d4:	strh	r0, [r4, #36]	; 0x24
 1d8:	ldrh	r2, [r4, #38]	; 0x26
 1dc:	bic	r0, r2, #16711680	; 0xff0000
 1e0:	bic	r0, r0, #-16777216	; 0xff000000
 1e4:	bl	34 <swap_uint16>
 1e8:	strh	r0, [r4, #38]	; 0x26
 1ec:	ldrh	r3, [r4, #40]	; 0x28
 1f0:	bic	r0, r3, #16711680	; 0xff0000
 1f4:	bic	r0, r0, #-16777216	; 0xff000000
 1f8:	bl	34 <swap_uint16>
 1fc:	strh	r0, [r4, #40]	; 0x28
 200:	str	r6, [r4, #48]	; 0x30
 204:	cmp	r5, #0
 208:	beq	244 <coda_pcre_pattern_to_host_byte_order+0x1e4>
 20c:	ldr	ip, [r5]
 210:	and	r1, ip, #1
 214:	cmp	r1, #0
 218:	beq	244 <coda_pcre_pattern_to_host_byte_order+0x1e4>
 21c:	ldr	r4, [r5, #4]
 220:	ldr	r0, [r4]
 224:	bl	0 <swap_uint32>
 228:	str	r0, [r4]
 22c:	ldr	r0, [r4, #4]
 230:	bl	0 <swap_uint32>
 234:	str	r0, [r4, #4]
 238:	ldr	r0, [r4, #40]	; 0x28
 23c:	bl	0 <swap_uint32>
 240:	str	r0, [r4, #40]	; 0x28
 244:	mov	r0, #0
 248:	ldr	r4, [sp, #8]
 24c:	ldr	r5, [sp, #12]
 250:	ldr	r6, [sp, #16]
 254:	ldr	lr, [sp, #4]
 258:	add	sp, sp, #24
 25c:	bx	lr
