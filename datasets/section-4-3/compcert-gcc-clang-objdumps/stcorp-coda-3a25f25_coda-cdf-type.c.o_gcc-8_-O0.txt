
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cdf-type.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_cdf_type_delete>:
       0:	str	fp, [sp, #-8]!
       4:	str	lr, [sp, #4]
       8:	add	fp, sp, #4
       c:	sub	sp, sp, #16
      10:	str	r0, [fp, #-16]
      14:	ldr	r3, [fp, #-16]
      18:	cmp	r3, #0
      1c:	bne	40 <coda_cdf_type_delete+0x40>
      20:	movw	r3, #0
      24:	movt	r3, #0
      28:	mov	r2, #39	; 0x27
      2c:	movw	r1, #0
      30:	movt	r1, #0
      34:	movw	r0, #0
      38:	movt	r0, #0
      3c:	bl	0 <__assert_fail>
      40:	ldr	r3, [fp, #-16]
      44:	ldr	r3, [r3]
      48:	cmp	r3, #103	; 0x67
      4c:	beq	70 <coda_cdf_type_delete+0x70>
      50:	movw	r3, #0
      54:	movt	r3, #0
      58:	mov	r2, #40	; 0x28
      5c:	movw	r1, #0
      60:	movt	r1, #0
      64:	movw	r0, #0
      68:	movt	r0, #0
      6c:	bl	0 <__assert_fail>
      70:	ldr	r3, [fp, #-16]
      74:	ldr	r3, [r3, #8]
      78:	cmp	r3, #1
      7c:	beq	94 <coda_cdf_type_delete+0x94>
      80:	cmp	r3, #0
      84:	beq	14c <coda_cdf_type_delete+0x14c>
      88:	cmp	r3, #2
      8c:	beq	b8 <coda_cdf_type_delete+0xb8>
      90:	b	158 <coda_cdf_type_delete+0x158>
      94:	ldr	r3, [fp, #-16]
      98:	ldr	r3, [r3, #12]
      9c:	cmp	r3, #0
      a0:	beq	154 <coda_cdf_type_delete+0x154>
      a4:	ldr	r3, [fp, #-16]
      a8:	ldr	r3, [r3, #12]
      ac:	mov	r0, r3
      b0:	bl	0 <coda_dynamic_type_delete>
      b4:	b	154 <coda_cdf_type_delete+0x154>
      b8:	ldr	r3, [fp, #-16]
      bc:	str	r3, [fp, #-8]
      c0:	ldr	r3, [fp, #-8]
      c4:	ldr	r3, [r3, #12]
      c8:	cmp	r3, #0
      cc:	beq	e0 <coda_cdf_type_delete+0xe0>
      d0:	ldr	r3, [fp, #-8]
      d4:	ldr	r3, [r3, #12]
      d8:	mov	r0, r3
      dc:	bl	0 <coda_dynamic_type_delete>
      e0:	ldr	r3, [fp, #-8]
      e4:	ldr	r3, [r3, #16]
      e8:	cmp	r3, #0
      ec:	beq	100 <coda_cdf_type_delete+0x100>
      f0:	ldr	r3, [fp, #-8]
      f4:	ldr	r3, [r3, #16]
      f8:	mov	r0, r3
      fc:	bl	0 <coda_dynamic_type_delete>
     100:	ldr	r3, [fp, #-8]
     104:	ldr	r3, [r3, #36]	; 0x24
     108:	cmp	r3, #0
     10c:	beq	120 <coda_cdf_type_delete+0x120>
     110:	ldr	r3, [fp, #-8]
     114:	ldr	r3, [r3, #36]	; 0x24
     118:	mov	r0, r3
     11c:	bl	0 <free>
     120:	ldr	r3, [fp, #-8]
     124:	ldr	r3, [r3, #40]	; 0x28
     128:	cmp	r3, #0
     12c:	beq	144 <coda_cdf_type_delete+0x144>
     130:	ldr	r3, [fp, #-8]
     134:	ldr	r3, [r3, #40]	; 0x28
     138:	mov	r0, r3
     13c:	bl	0 <free>
     140:	b	158 <coda_cdf_type_delete+0x158>
     144:	nop	{0}
     148:	b	158 <coda_cdf_type_delete+0x158>
     14c:	nop	{0}
     150:	b	158 <coda_cdf_type_delete+0x158>
     154:	nop	{0}
     158:	ldr	r3, [fp, #-16]
     15c:	ldr	r3, [r3, #4]
     160:	cmp	r3, #0
     164:	beq	178 <coda_cdf_type_delete+0x178>
     168:	ldr	r3, [fp, #-16]
     16c:	ldr	r3, [r3, #4]
     170:	mov	r0, r3
     174:	bl	0 <coda_type_release>
     178:	ldr	r0, [fp, #-16]
     17c:	bl	0 <free>
     180:	nop	{0}
     184:	sub	sp, fp, #4
     188:	ldr	fp, [sp]
     18c:	add	sp, sp, #4
     190:	pop	{pc}		; (ldr pc, [sp], #4)

00000194 <basic_type_init>:
     194:	str	fp, [sp, #-8]!
     198:	str	lr, [sp, #4]
     19c:	add	fp, sp, #4
     1a0:	sub	sp, sp, #32
     1a4:	str	r0, [fp, #-24]	; 0xffffffe8
     1a8:	str	r1, [fp, #-28]	; 0xffffffe4
     1ac:	str	r2, [fp, #-32]	; 0xffffffe0
     1b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     1b4:	sub	r3, r3, #1
     1b8:	cmp	r3, #51	; 0x33
     1bc:	ldrls	pc, [pc, r3, lsl #2]
     1c0:	b	3f0 <basic_type_init+0x25c>
     1c4:	.word	0x00000294
     1c8:	.word	0x000002b4
     1cc:	.word	0x000003f0
     1d0:	.word	0x000002d4
     1d4:	.word	0x000003f0
     1d8:	.word	0x000003f0
     1dc:	.word	0x000003f0
     1e0:	.word	0x000002f4
     1e4:	.word	0x000003f0
     1e8:	.word	0x000003f0
     1ec:	.word	0x00000314
     1f0:	.word	0x00000334
     1f4:	.word	0x000003f0
     1f8:	.word	0x00000354
     1fc:	.word	0x000003f0
     200:	.word	0x000003f0
     204:	.word	0x000003f0
     208:	.word	0x000003f0
     20c:	.word	0x000003f0
     210:	.word	0x000003f0
     214:	.word	0x00000374
     218:	.word	0x00000394
     21c:	.word	0x000003f0
     220:	.word	0x000003f0
     224:	.word	0x000003f0
     228:	.word	0x000003f0
     22c:	.word	0x000003f0
     230:	.word	0x000003f0
     234:	.word	0x000003f0
     238:	.word	0x000003f0
     23c:	.word	0x000003f0
     240:	.word	0x000003f0
     244:	.word	0x000003f0
     248:	.word	0x000003f0
     24c:	.word	0x000003f0
     250:	.word	0x000003f0
     254:	.word	0x000003f0
     258:	.word	0x000003f0
     25c:	.word	0x000003f0
     260:	.word	0x000003f0
     264:	.word	0x00000294
     268:	.word	0x000003f0
     26c:	.word	0x000003f0
     270:	.word	0x00000374
     274:	.word	0x00000394
     278:	.word	0x000003f0
     27c:	.word	0x000003f0
     280:	.word	0x000003f0
     284:	.word	0x000003f0
     288:	.word	0x000003f0
     28c:	.word	0x000003b4
     290:	.word	0x000003b4
     294:	mov	r3, #2
     298:	str	r3, [fp, #-8]
     29c:	mov	r3, #0
     2a0:	str	r3, [fp, #-12]
     2a4:	mov	r2, #1
     2a8:	mov	r3, #0
     2ac:	strd	r2, [fp, #-20]	; 0xffffffec
     2b0:	b	40c <basic_type_init+0x278>
     2b4:	mov	r3, #2
     2b8:	str	r3, [fp, #-8]
     2bc:	mov	r3, #2
     2c0:	str	r3, [fp, #-12]
     2c4:	mov	r2, #2
     2c8:	mov	r3, #0
     2cc:	strd	r2, [fp, #-20]	; 0xffffffec
     2d0:	b	40c <basic_type_init+0x278>
     2d4:	mov	r3, #2
     2d8:	str	r3, [fp, #-8]
     2dc:	mov	r3, #4
     2e0:	str	r3, [fp, #-12]
     2e4:	mov	r2, #4
     2e8:	mov	r3, #0
     2ec:	strd	r2, [fp, #-20]	; 0xffffffec
     2f0:	b	40c <basic_type_init+0x278>
     2f4:	mov	r3, #2
     2f8:	str	r3, [fp, #-8]
     2fc:	mov	r3, #6
     300:	str	r3, [fp, #-12]
     304:	mov	r2, #8
     308:	mov	r3, #0
     30c:	strd	r2, [fp, #-20]	; 0xffffffec
     310:	b	40c <basic_type_init+0x278>
     314:	mov	r3, #2
     318:	str	r3, [fp, #-8]
     31c:	mov	r3, #1
     320:	str	r3, [fp, #-12]
     324:	mov	r2, #1
     328:	mov	r3, #0
     32c:	strd	r2, [fp, #-20]	; 0xffffffec
     330:	b	40c <basic_type_init+0x278>
     334:	mov	r3, #2
     338:	str	r3, [fp, #-8]
     33c:	mov	r3, #3
     340:	str	r3, [fp, #-12]
     344:	mov	r2, #2
     348:	mov	r3, #0
     34c:	strd	r2, [fp, #-20]	; 0xffffffec
     350:	b	40c <basic_type_init+0x278>
     354:	mov	r3, #2
     358:	str	r3, [fp, #-8]
     35c:	mov	r3, #5
     360:	str	r3, [fp, #-12]
     364:	mov	r2, #4
     368:	mov	r3, #0
     36c:	strd	r2, [fp, #-20]	; 0xffffffec
     370:	b	40c <basic_type_init+0x278>
     374:	mov	r3, #3
     378:	str	r3, [fp, #-8]
     37c:	mov	r3, #8
     380:	str	r3, [fp, #-12]
     384:	mov	r2, #4
     388:	mov	r3, #0
     38c:	strd	r2, [fp, #-20]	; 0xffffffec
     390:	b	40c <basic_type_init+0x278>
     394:	mov	r3, #3
     398:	str	r3, [fp, #-8]
     39c:	mov	r3, #9
     3a0:	str	r3, [fp, #-12]
     3a4:	mov	r2, #8
     3a8:	mov	r3, #0
     3ac:	strd	r2, [fp, #-20]	; 0xffffffec
     3b0:	b	40c <basic_type_init+0x278>
     3b4:	mov	r3, #4
     3b8:	str	r3, [fp, #-8]
     3bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     3c0:	cmp	r3, #1
     3c4:	bne	3d4 <basic_type_init+0x240>
     3c8:	mov	r3, #10
     3cc:	str	r3, [fp, #-12]
     3d0:	b	3dc <basic_type_init+0x248>
     3d4:	mov	r3, #11
     3d8:	str	r3, [fp, #-12]
     3dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     3e0:	mov	r2, r3
     3e4:	asr	r3, r2, #31
     3e8:	strd	r2, [fp, #-20]	; 0xffffffec
     3ec:	b	40c <basic_type_init+0x278>
     3f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
     3f4:	movw	r1, #0
     3f8:	movt	r1, #0
     3fc:	mvn	r0, #99	; 0x63
     400:	bl	0 <coda_set_error>
     404:	mvn	r3, #0
     408:	b	4f4 <basic_type_init+0x360>
     40c:	ldr	r3, [fp, #-8]
     410:	cmp	r3, #2
     414:	bcc	468 <basic_type_init+0x2d4>
     418:	ldr	r3, [fp, #-8]
     41c:	cmp	r3, #3
     420:	bls	434 <basic_type_init+0x2a0>
     424:	ldr	r3, [fp, #-8]
     428:	cmp	r3, #4
     42c:	beq	450 <basic_type_init+0x2bc>
     430:	b	468 <basic_type_init+0x2d4>
     434:	ldr	r1, [fp, #-8]
     438:	mov	r0, #5
     43c:	bl	0 <coda_type_number_new>
     440:	mov	r2, r0
     444:	ldr	r3, [fp, #-24]	; 0xffffffe8
     448:	str	r2, [r3, #4]
     44c:	b	488 <basic_type_init+0x2f4>
     450:	mov	r0, #5
     454:	bl	0 <coda_type_text_new>
     458:	mov	r2, r0
     45c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     460:	str	r2, [r3, #4]
     464:	b	488 <basic_type_init+0x2f4>
     468:	movw	r3, #0
     46c:	movt	r3, #0
     470:	mov	r2, #165	; 0xa5
     474:	movw	r1, #0
     478:	movt	r1, #0
     47c:	movw	r0, #0
     480:	movt	r0, #0
     484:	bl	0 <__assert_fail>
     488:	ldr	r3, [fp, #-24]	; 0xffffffe8
     48c:	ldr	r3, [r3, #4]
     490:	cmp	r3, #0
     494:	bne	4a0 <basic_type_init+0x30c>
     498:	mvn	r3, #0
     49c:	b	4f4 <basic_type_init+0x360>
     4a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4a4:	ldr	r3, [r3, #4]
     4a8:	ldr	r1, [fp, #-12]
     4ac:	mov	r0, r3
     4b0:	bl	0 <coda_type_set_read_type>
     4b4:	mov	r3, r0
     4b8:	cmp	r3, #0
     4bc:	beq	4c8 <basic_type_init+0x334>
     4c0:	mvn	r3, #0
     4c4:	b	4f4 <basic_type_init+0x360>
     4c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4cc:	ldr	r1, [r3, #4]
     4d0:	ldrd	r2, [fp, #-20]	; 0xffffffec
     4d4:	mov	r0, r1
     4d8:	bl	0 <coda_type_set_byte_size>
     4dc:	mov	r3, r0
     4e0:	cmp	r3, #0
     4e4:	beq	4f0 <basic_type_init+0x35c>
     4e8:	mvn	r3, #0
     4ec:	b	4f4 <basic_type_init+0x360>
     4f0:	mov	r3, #0
     4f4:	mov	r0, r3
     4f8:	sub	sp, fp, #4
     4fc:	ldr	fp, [sp]
     500:	add	sp, sp, #4
     504:	pop	{pc}		; (ldr pc, [sp], #4)

00000508 <basic_type_new>:
     508:	str	fp, [sp, #-8]!
     50c:	str	lr, [sp, #4]
     510:	add	fp, sp, #4
     514:	sub	sp, sp, #24
     518:	str	r0, [fp, #-16]
     51c:	str	r1, [fp, #-20]	; 0xffffffec
     520:	mov	r0, #12
     524:	bl	0 <malloc>
     528:	mov	r3, r0
     52c:	str	r3, [fp, #-8]
     530:	ldr	r3, [fp, #-8]
     534:	cmp	r3, #0
     538:	bne	568 <basic_type_new+0x60>
     53c:	mov	r3, #191	; 0xbf
     540:	str	r3, [sp]
     544:	movw	r3, #0
     548:	movt	r3, #0
     54c:	mov	r2, #12
     550:	movw	r1, #0
     554:	movt	r1, #0
     558:	mvn	r0, #0
     55c:	bl	0 <coda_set_error>
     560:	mov	r3, #0
     564:	b	5bc <basic_type_new+0xb4>
     568:	ldr	r3, [fp, #-8]
     56c:	mov	r2, #103	; 0x67
     570:	str	r2, [r3]
     574:	ldr	r3, [fp, #-8]
     578:	mov	r2, #0
     57c:	str	r2, [r3, #4]
     580:	ldr	r3, [fp, #-8]
     584:	mov	r2, #0
     588:	str	r2, [r3, #8]
     58c:	ldr	r2, [fp, #-20]	; 0xffffffec
     590:	ldr	r1, [fp, #-16]
     594:	ldr	r0, [fp, #-8]
     598:	bl	194 <basic_type_init>
     59c:	mov	r3, r0
     5a0:	cmp	r3, #0
     5a4:	beq	5b8 <basic_type_new+0xb0>
     5a8:	ldr	r0, [fp, #-8]
     5ac:	bl	0 <coda_cdf_type_delete>
     5b0:	mov	r3, #0
     5b4:	b	5bc <basic_type_new+0xb4>
     5b8:	ldr	r3, [fp, #-8]
     5bc:	mov	r0, r3
     5c0:	sub	sp, fp, #4
     5c4:	ldr	fp, [sp]
     5c8:	add	sp, sp, #4
     5cc:	pop	{pc}		; (ldr pc, [sp], #4)

000005d0 <time_type_new>:
     5d0:	str	fp, [sp, #-8]!
     5d4:	str	lr, [sp, #4]
     5d8:	add	fp, sp, #4
     5dc:	sub	sp, sp, #32
     5e0:	str	r0, [fp, #-24]	; 0xffffffe8
     5e4:	str	r1, [fp, #-28]	; 0xffffffe4
     5e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5ec:	cmp	r3, #31
     5f0:	beq	620 <time_type_new+0x50>
     5f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5f8:	cmp	r3, #33	; 0x21
     5fc:	beq	620 <time_type_new+0x50>
     600:	movw	r3, #0
     604:	movt	r3, #0
     608:	mov	r2, #211	; 0xd3
     60c:	movw	r1, #0
     610:	movt	r1, #0
     614:	movw	r0, #0
     618:	movt	r0, #0
     61c:	bl	0 <__assert_fail>
     620:	mov	r0, #20
     624:	bl	0 <malloc>
     628:	mov	r3, r0
     62c:	str	r3, [fp, #-12]
     630:	ldr	r3, [fp, #-12]
     634:	cmp	r3, #0
     638:	bne	668 <time_type_new+0x98>
     63c:	mov	r3, #217	; 0xd9
     640:	str	r3, [sp]
     644:	movw	r3, #0
     648:	movt	r3, #0
     64c:	mov	r2, #20
     650:	movw	r1, #0
     654:	movt	r1, #0
     658:	mvn	r0, #0
     65c:	bl	0 <coda_set_error>
     660:	mov	r3, #0
     664:	b	788 <time_type_new+0x1b8>
     668:	ldr	r3, [fp, #-12]
     66c:	mov	r2, #103	; 0x67
     670:	str	r2, [r3]
     674:	ldr	r3, [fp, #-12]
     678:	mov	r2, #0
     67c:	str	r2, [r3, #4]
     680:	ldr	r3, [fp, #-12]
     684:	mov	r2, #1
     688:	str	r2, [r3, #8]
     68c:	ldr	r3, [fp, #-12]
     690:	ldr	r2, [fp, #-24]	; 0xffffffe8
     694:	str	r2, [r3, #16]
     698:	ldr	r3, [fp, #-12]
     69c:	mov	r2, #0
     6a0:	str	r2, [r3, #12]
     6a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     6a8:	cmp	r3, #31
     6ac:	bne	6c0 <time_type_new+0xf0>
     6b0:	movw	r3, #0
     6b4:	movt	r3, #0
     6b8:	str	r3, [fp, #-8]
     6bc:	b	6cc <time_type_new+0xfc>
     6c0:	movw	r3, #0
     6c4:	movt	r3, #0
     6c8:	str	r3, [fp, #-8]
     6cc:	sub	r3, fp, #16
     6d0:	mov	r1, r3
     6d4:	ldr	r0, [fp, #-8]
     6d8:	bl	0 <coda_expression_from_string>
     6dc:	mov	r3, r0
     6e0:	cmp	r3, #0
     6e4:	beq	6f8 <time_type_new+0x128>
     6e8:	ldr	r0, [fp, #-12]
     6ec:	bl	0 <coda_cdf_type_delete>
     6f0:	mov	r3, #0
     6f4:	b	788 <time_type_new+0x1b8>
     6f8:	ldr	r3, [fp, #-16]
     6fc:	mov	r1, r3
     700:	mov	r0, #5
     704:	bl	0 <coda_type_time_new>
     708:	mov	r2, r0
     70c:	ldr	r3, [fp, #-12]
     710:	str	r2, [r3, #4]
     714:	ldr	r3, [fp, #-12]
     718:	ldr	r3, [r3, #4]
     71c:	cmp	r3, #0
     720:	bne	740 <time_type_new+0x170>
     724:	ldr	r3, [fp, #-16]
     728:	mov	r0, r3
     72c:	bl	0 <coda_expression_delete>
     730:	ldr	r0, [fp, #-12]
     734:	bl	0 <coda_cdf_type_delete>
     738:	mov	r3, #0
     73c:	b	788 <time_type_new+0x1b8>
     740:	ldr	r3, [fp, #-12]
     744:	ldr	r2, [r3, #4]
     748:	ldr	r3, [fp, #-28]	; 0xffffffe4
     74c:	ldr	r3, [r3, #4]
     750:	mov	r1, r3
     754:	mov	r0, r2
     758:	bl	0 <coda_type_time_set_base_type>
     75c:	mov	r3, r0
     760:	cmp	r3, #0
     764:	beq	778 <time_type_new+0x1a8>
     768:	ldr	r0, [fp, #-12]
     76c:	bl	0 <coda_cdf_type_delete>
     770:	mov	r3, #0
     774:	b	788 <time_type_new+0x1b8>
     778:	ldr	r3, [fp, #-12]
     77c:	ldr	r2, [fp, #-28]	; 0xffffffe4
     780:	str	r2, [r3, #12]
     784:	ldr	r3, [fp, #-12]
     788:	mov	r0, r3
     78c:	sub	sp, fp, #4
     790:	ldr	fp, [sp]
     794:	add	sp, sp, #4
     798:	pop	{pc}		; (ldr pc, [sp], #4)

0000079c <coda_cdf_variable_new>:
     79c:	strd	r4, [sp, #-32]!	; 0xffffffe0
     7a0:	strd	r6, [sp, #8]
     7a4:	strd	r8, [sp, #16]
     7a8:	str	fp, [sp, #24]
     7ac:	str	lr, [sp, #28]
     7b0:	add	fp, sp, #28
     7b4:	sub	sp, sp, #64	; 0x40
     7b8:	str	r0, [fp, #-64]	; 0xffffffc0
     7bc:	str	r1, [fp, #-68]	; 0xffffffbc
     7c0:	str	r2, [fp, #-72]	; 0xffffffb8
     7c4:	str	r3, [fp, #-76]	; 0xffffffb4
     7c8:	mov	r3, #0
     7cc:	str	r3, [fp, #-32]	; 0xffffffe0
     7d0:	mvn	r3, #0
     7d4:	str	r3, [fp, #-36]	; 0xffffffdc
     7d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
     7dc:	cmp	r3, #0
     7e0:	bne	810 <coda_cdf_variable_new+0x74>
     7e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
     7e8:	cmp	r3, #0
     7ec:	beq	810 <coda_cdf_variable_new+0x74>
     7f0:	movw	r3, #0
     7f4:	movt	r3, #0
     7f8:	mov	r2, #268	; 0x10c
     7fc:	movw	r1, #0
     800:	movt	r1, #0
     804:	movw	r0, #0
     808:	movt	r0, #0
     80c:	bl	0 <__assert_fail>
     810:	mov	r0, #44	; 0x2c
     814:	bl	0 <malloc>
     818:	mov	r3, r0
     81c:	str	r3, [fp, #-44]	; 0xffffffd4
     820:	ldr	r3, [fp, #-44]	; 0xffffffd4
     824:	cmp	r3, #0
     828:	bne	858 <coda_cdf_variable_new+0xbc>
     82c:	movw	r3, #274	; 0x112
     830:	str	r3, [sp]
     834:	movw	r3, #0
     838:	movt	r3, #0
     83c:	mov	r2, #44	; 0x2c
     840:	movw	r1, #0
     844:	movt	r1, #0
     848:	mvn	r0, #0
     84c:	bl	0 <coda_set_error>
     850:	mov	r3, #0
     854:	b	dc8 <coda_cdf_variable_new+0x62c>
     858:	ldr	r3, [fp, #-44]	; 0xffffffd4
     85c:	mov	r2, #103	; 0x67
     860:	str	r2, [r3]
     864:	ldr	r3, [fp, #-44]	; 0xffffffd4
     868:	mov	r2, #0
     86c:	str	r2, [r3, #4]
     870:	ldr	r3, [fp, #-44]	; 0xffffffd4
     874:	mov	r2, #2
     878:	str	r2, [r3, #8]
     87c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     880:	mov	r2, #0
     884:	str	r2, [r3, #12]
     888:	ldr	r3, [fp, #-44]	; 0xffffffd4
     88c:	mov	r2, #0
     890:	str	r2, [r3, #16]
     894:	ldr	r3, [fp, #-44]	; 0xffffffd4
     898:	mov	r2, #1
     89c:	str	r2, [r3, #20]
     8a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     8a4:	mov	r2, #1
     8a8:	str	r2, [r3, #24]
     8ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
     8b0:	mvn	r2, #0
     8b4:	str	r2, [r3, #28]
     8b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     8bc:	ldr	r2, [fp, #20]
     8c0:	str	r2, [r3, #32]
     8c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     8c8:	mov	r2, #0
     8cc:	str	r2, [r3, #36]	; 0x24
     8d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     8d4:	mov	r2, #0
     8d8:	str	r2, [r3, #40]	; 0x28
     8dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
     8e0:	cmp	r3, #0
     8e4:	bne	940 <coda_cdf_variable_new+0x1a4>
     8e8:	mov	r3, #1
     8ec:	str	r3, [fp, #-32]	; 0xffffffe0
     8f0:	mov	r3, #0
     8f4:	str	r3, [fp, #-40]	; 0xffffffd8
     8f8:	b	930 <coda_cdf_variable_new+0x194>
     8fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
     900:	lsl	r3, r3, #2
     904:	ldr	r2, [fp, #8]
     908:	add	r3, r2, r3
     90c:	ldr	r3, [r3]
     910:	cmp	r3, #0
     914:	beq	924 <coda_cdf_variable_new+0x188>
     918:	mov	r3, #0
     91c:	str	r3, [fp, #-32]	; 0xffffffe0
     920:	b	940 <coda_cdf_variable_new+0x1a4>
     924:	ldr	r3, [fp, #-40]	; 0xffffffd8
     928:	add	r3, r3, #1
     92c:	str	r3, [fp, #-40]	; 0xffffffd8
     930:	ldr	r2, [fp, #-40]	; 0xffffffd8
     934:	ldr	r3, [fp, #-76]	; 0xffffffb4
     938:	cmp	r2, r3
     93c:	blt	8fc <coda_cdf_variable_new+0x160>
     940:	ldr	r3, [fp, #-64]	; 0xffffffc0
     944:	cmp	r3, #31
     948:	beq	958 <coda_cdf_variable_new+0x1bc>
     94c:	ldr	r3, [fp, #-64]	; 0xffffffc0
     950:	cmp	r3, #33	; 0x21
     954:	bne	980 <coda_cdf_variable_new+0x1e4>
     958:	ldr	r3, [fp, #-64]	; 0xffffffc0
     95c:	str	r3, [fp, #-36]	; 0xffffffdc
     960:	ldr	r3, [fp, #-64]	; 0xffffffc0
     964:	cmp	r3, #31
     968:	bne	978 <coda_cdf_variable_new+0x1dc>
     96c:	mov	r3, #45	; 0x2d
     970:	str	r3, [fp, #-64]	; 0xffffffc0
     974:	b	980 <coda_cdf_variable_new+0x1e4>
     978:	mov	r3, #8
     97c:	str	r3, [fp, #-64]	; 0xffffffc0
     980:	ldr	r3, [fp, #-32]	; 0xffffffe0
     984:	cmp	r3, #0
     988:	beq	a18 <coda_cdf_variable_new+0x27c>
     98c:	ldr	r2, [fp, #16]
     990:	ldr	r1, [fp, #-64]	; 0xffffffc0
     994:	ldr	r0, [fp, #-44]	; 0xffffffd4
     998:	bl	194 <basic_type_init>
     99c:	mov	r3, r0
     9a0:	cmp	r3, #0
     9a4:	beq	9b8 <coda_cdf_variable_new+0x21c>
     9a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
     9ac:	bl	0 <coda_cdf_type_delete>
     9b0:	mov	r3, #0
     9b4:	b	dc8 <coda_cdf_variable_new+0x62c>
     9b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     9bc:	ldr	r3, [r3, #4]
     9c0:	ldrd	r2, [r3, #24]
     9c4:	asr	r1, r3, #31
     9c8:	mov	r0, r1
     9cc:	asr	r1, r0, #31
     9d0:	mov	r4, #7
     9d4:	mov	r5, #0
     9d8:	and	ip, r0, r4
     9dc:	str	ip, [fp, #-84]	; 0xffffffac
     9e0:	and	r1, r1, r5
     9e4:	str	r1, [fp, #-80]	; 0xffffffb0
     9e8:	ldrd	r0, [fp, #-84]	; 0xffffffac
     9ec:	mov	ip, r0
     9f0:	adds	r6, ip, r2
     9f4:	adc	r7, r1, r3
     9f8:	mov	r2, #0
     9fc:	mov	r3, #0
     a00:	lsr	r2, r6, #3
     a04:	orr	r2, r2, r7, lsl #29
     a08:	asr	r3, r7, #3
     a0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     a10:	str	r2, [r3, #28]
     a14:	b	cb0 <coda_cdf_variable_new+0x514>
     a18:	ldr	r1, [fp, #16]
     a1c:	ldr	r0, [fp, #-64]	; 0xffffffc0
     a20:	bl	508 <basic_type_new>
     a24:	mov	r2, r0
     a28:	ldr	r3, [fp, #-44]	; 0xffffffd4
     a2c:	str	r2, [r3, #16]
     a30:	ldr	r3, [fp, #-44]	; 0xffffffd4
     a34:	ldr	r3, [r3, #16]
     a38:	cmp	r3, #0
     a3c:	bne	a50 <coda_cdf_variable_new+0x2b4>
     a40:	ldr	r0, [fp, #-44]	; 0xffffffd4
     a44:	bl	0 <coda_cdf_type_delete>
     a48:	mov	r3, #0
     a4c:	b	dc8 <coda_cdf_variable_new+0x62c>
     a50:	ldr	r3, [fp, #-36]	; 0xffffffdc
     a54:	cmn	r3, #1
     a58:	beq	a9c <coda_cdf_variable_new+0x300>
     a5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     a60:	ldr	r3, [r3, #16]
     a64:	mov	r1, r3
     a68:	ldr	r0, [fp, #-36]	; 0xffffffdc
     a6c:	bl	5d0 <time_type_new>
     a70:	str	r0, [fp, #-48]	; 0xffffffd0
     a74:	ldr	r3, [fp, #-48]	; 0xffffffd0
     a78:	cmp	r3, #0
     a7c:	bne	a90 <coda_cdf_variable_new+0x2f4>
     a80:	ldr	r0, [fp, #-44]	; 0xffffffd4
     a84:	bl	0 <coda_cdf_type_delete>
     a88:	mov	r3, #0
     a8c:	b	dc8 <coda_cdf_variable_new+0x62c>
     a90:	ldr	r3, [fp, #-44]	; 0xffffffd4
     a94:	ldr	r2, [fp, #-48]	; 0xffffffd0
     a98:	str	r2, [r3, #16]
     a9c:	mov	r0, #5
     aa0:	bl	0 <coda_type_array_new>
     aa4:	mov	r2, r0
     aa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     aac:	str	r2, [r3, #4]
     ab0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     ab4:	ldr	r3, [r3, #4]
     ab8:	cmp	r3, #0
     abc:	bne	ad0 <coda_cdf_variable_new+0x334>
     ac0:	ldr	r0, [fp, #-44]	; 0xffffffd4
     ac4:	bl	0 <coda_cdf_type_delete>
     ac8:	mov	r3, #0
     acc:	b	dc8 <coda_cdf_variable_new+0x62c>
     ad0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     ad4:	ldr	r2, [r3, #4]
     ad8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     adc:	ldr	r3, [r3, #16]
     ae0:	ldr	r3, [r3, #4]
     ae4:	mov	r1, r3
     ae8:	mov	r0, r2
     aec:	bl	0 <coda_type_array_set_base_type>
     af0:	mov	r3, r0
     af4:	cmp	r3, #0
     af8:	beq	b0c <coda_cdf_variable_new+0x370>
     afc:	ldr	r0, [fp, #-44]	; 0xffffffd4
     b00:	bl	0 <coda_cdf_type_delete>
     b04:	mov	r3, #0
     b08:	b	dc8 <coda_cdf_variable_new+0x62c>
     b0c:	ldr	r3, [fp, #-72]	; 0xffffffb8
     b10:	cmp	r3, #0
     b14:	beq	b60 <coda_cdf_variable_new+0x3c4>
     b18:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b1c:	ldr	r2, [r3, #4]
     b20:	ldr	r3, [fp, #-68]	; 0xffffffbc
     b24:	add	r3, r3, #1
     b28:	mov	r1, r3
     b2c:	mov	r0, r2
     b30:	bl	0 <coda_type_array_add_fixed_dimension>
     b34:	mov	r3, r0
     b38:	cmp	r3, #0
     b3c:	beq	b50 <coda_cdf_variable_new+0x3b4>
     b40:	ldr	r0, [fp, #-44]	; 0xffffffd4
     b44:	bl	0 <coda_cdf_type_delete>
     b48:	mov	r3, #0
     b4c:	b	dc8 <coda_cdf_variable_new+0x62c>
     b50:	ldr	r3, [fp, #-68]	; 0xffffffbc
     b54:	add	r2, r3, #1
     b58:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b5c:	str	r2, [r3, #20]
     b60:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b64:	ldr	r3, [r3, #16]
     b68:	ldr	r3, [r3, #4]
     b6c:	ldrd	r2, [r3, #24]
     b70:	asr	r1, r3, #31
     b74:	mov	r0, r1
     b78:	asr	r1, r0, #31
     b7c:	mov	r6, #7
     b80:	mov	r7, #0
     b84:	and	r8, r0, r6
     b88:	and	r9, r1, r7
     b8c:	adds	r4, r8, r2
     b90:	adc	r5, r9, r3
     b94:	mov	r2, #0
     b98:	mov	r3, #0
     b9c:	lsr	r2, r4, #3
     ba0:	orr	r2, r2, r5, lsl #29
     ba4:	asr	r3, r5, #3
     ba8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     bac:	str	r2, [r3, #28]
     bb0:	mov	r3, #0
     bb4:	str	r3, [fp, #-40]	; 0xffffffd8
     bb8:	b	c74 <coda_cdf_variable_new+0x4d8>
     bbc:	ldr	r3, [fp, #12]
     bc0:	cmp	r3, #0
     bc4:	beq	bdc <coda_cdf_variable_new+0x440>
     bc8:	ldr	r3, [fp, #-76]	; 0xffffffb4
     bcc:	sub	r2, r3, #1
     bd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
     bd4:	sub	r3, r2, r3
     bd8:	b	be0 <coda_cdf_variable_new+0x444>
     bdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
     be0:	str	r3, [fp, #-52]	; 0xffffffcc
     be4:	ldr	r3, [fp, #-52]	; 0xffffffcc
     be8:	lsl	r3, r3, #2
     bec:	ldr	r2, [fp, #8]
     bf0:	add	r3, r2, r3
     bf4:	ldr	r3, [r3]
     bf8:	cmp	r3, #0
     bfc:	beq	c68 <coda_cdf_variable_new+0x4cc>
     c00:	ldr	r3, [fp, #-44]	; 0xffffffd4
     c04:	ldr	r0, [r3, #4]
     c08:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c0c:	lsl	r3, r3, #2
     c10:	ldr	r2, [fp, #4]
     c14:	add	r3, r2, r3
     c18:	ldr	r3, [r3]
     c1c:	mov	r1, r3
     c20:	bl	0 <coda_type_array_add_fixed_dimension>
     c24:	mov	r3, r0
     c28:	cmp	r3, #0
     c2c:	beq	c40 <coda_cdf_variable_new+0x4a4>
     c30:	ldr	r0, [fp, #-44]	; 0xffffffd4
     c34:	bl	0 <coda_cdf_type_delete>
     c38:	mov	r3, #0
     c3c:	b	dc8 <coda_cdf_variable_new+0x62c>
     c40:	ldr	r3, [fp, #-44]	; 0xffffffd4
     c44:	ldr	r3, [r3, #24]
     c48:	ldr	r2, [fp, #-52]	; 0xffffffcc
     c4c:	lsl	r2, r2, #2
     c50:	ldr	r1, [fp, #4]
     c54:	add	r2, r1, r2
     c58:	ldr	r2, [r2]
     c5c:	mul	r2, r2, r3
     c60:	ldr	r3, [fp, #-44]	; 0xffffffd4
     c64:	str	r2, [r3, #24]
     c68:	ldr	r3, [fp, #-40]	; 0xffffffd8
     c6c:	add	r3, r3, #1
     c70:	str	r3, [fp, #-40]	; 0xffffffd8
     c74:	ldr	r2, [fp, #-40]	; 0xffffffd8
     c78:	ldr	r3, [fp, #-76]	; 0xffffffb4
     c7c:	cmp	r2, r3
     c80:	blt	bbc <coda_cdf_variable_new+0x420>
     c84:	ldr	r3, [fp, #-44]	; 0xffffffd4
     c88:	ldr	r3, [r3, #4]
     c8c:	mov	r0, r3
     c90:	bl	0 <coda_type_array_validate>
     c94:	mov	r3, r0
     c98:	cmp	r3, #0
     c9c:	beq	cb0 <coda_cdf_variable_new+0x514>
     ca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
     ca4:	bl	0 <coda_cdf_type_delete>
     ca8:	mov	r3, #0
     cac:	b	dc8 <coda_cdf_variable_new+0x62c>
     cb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     cb4:	ldr	r3, [r3, #20]
     cb8:	lsl	r3, r3, #3
     cbc:	mov	r0, r3
     cc0:	bl	0 <malloc>
     cc4:	mov	r3, r0
     cc8:	mov	r2, r3
     ccc:	ldr	r3, [fp, #-44]	; 0xffffffd4
     cd0:	str	r2, [r3, #36]	; 0x24
     cd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     cd8:	ldr	r3, [r3, #36]	; 0x24
     cdc:	cmp	r3, #0
     ce0:	bne	d20 <coda_cdf_variable_new+0x584>
     ce4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     ce8:	ldr	r3, [r3, #20]
     cec:	lsl	r2, r3, #3
     cf0:	mov	r3, #392	; 0x188
     cf4:	str	r3, [sp]
     cf8:	movw	r3, #0
     cfc:	movt	r3, #0
     d00:	movw	r1, #0
     d04:	movt	r1, #0
     d08:	mvn	r0, #0
     d0c:	bl	0 <coda_set_error>
     d10:	ldr	r0, [fp, #-44]	; 0xffffffd4
     d14:	bl	0 <coda_cdf_type_delete>
     d18:	mov	r3, #0
     d1c:	b	dc8 <coda_cdf_variable_new+0x62c>
     d20:	mov	r3, #0
     d24:	str	r3, [fp, #-40]	; 0xffffffd8
     d28:	b	d58 <coda_cdf_variable_new+0x5bc>
     d2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     d30:	ldr	r2, [r3, #36]	; 0x24
     d34:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d38:	lsl	r3, r3, #3
     d3c:	add	r1, r2, r3
     d40:	mvn	r2, #0
     d44:	mvn	r3, #0
     d48:	strd	r2, [r1]
     d4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d50:	add	r3, r3, #1
     d54:	str	r3, [fp, #-40]	; 0xffffffd8
     d58:	ldr	r3, [fp, #-44]	; 0xffffffd4
     d5c:	ldr	r3, [r3, #20]
     d60:	ldr	r2, [fp, #-40]	; 0xffffffd8
     d64:	cmp	r2, r3
     d68:	blt	d2c <coda_cdf_variable_new+0x590>
     d6c:	ldr	r3, [fp, #24]
     d70:	ldr	r2, [fp, #-44]	; 0xffffffd4
     d74:	str	r2, [r3]
     d78:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d7c:	cmp	r3, #0
     d80:	beq	dc4 <coda_cdf_variable_new+0x628>
     d84:	ldr	r3, [fp, #-36]	; 0xffffffdc
     d88:	cmn	r3, #1
     d8c:	beq	dc4 <coda_cdf_variable_new+0x628>
     d90:	ldr	r1, [fp, #-44]	; 0xffffffd4
     d94:	ldr	r0, [fp, #-36]	; 0xffffffdc
     d98:	bl	5d0 <time_type_new>
     d9c:	str	r0, [fp, #-56]	; 0xffffffc8
     da0:	ldr	r3, [fp, #-56]	; 0xffffffc8
     da4:	cmp	r3, #0
     da8:	bne	dbc <coda_cdf_variable_new+0x620>
     dac:	ldr	r0, [fp, #-44]	; 0xffffffd4
     db0:	bl	0 <coda_cdf_type_delete>
     db4:	mov	r3, #0
     db8:	b	dc8 <coda_cdf_variable_new+0x62c>
     dbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
     dc0:	b	dc8 <coda_cdf_variable_new+0x62c>
     dc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     dc8:	mov	r0, r3
     dcc:	sub	sp, fp, #28
     dd0:	ldrd	r4, [sp]
     dd4:	ldrd	r6, [sp, #8]
     dd8:	ldrd	r8, [sp, #16]
     ddc:	ldr	fp, [sp, #24]
     de0:	add	sp, sp, #28
     de4:	pop	{pc}		; (ldr pc, [sp], #4)

00000de8 <coda_cdf_variable_add_attribute>:
     de8:	str	r4, [sp, #-12]!
     dec:	str	fp, [sp, #4]
     df0:	str	lr, [sp, #8]
     df4:	add	fp, sp, #8
     df8:	sub	sp, sp, #44	; 0x2c
     dfc:	str	r0, [fp, #-32]	; 0xffffffe0
     e00:	str	r1, [fp, #-36]	; 0xffffffdc
     e04:	str	r2, [fp, #-40]	; 0xffffffd8
     e08:	str	r3, [fp, #-44]	; 0xffffffd4
     e0c:	mvn	r3, #0
     e10:	str	r3, [fp, #-16]
     e14:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e18:	cmp	r3, #0
     e1c:	bne	e44 <coda_cdf_variable_add_attribute+0x5c>
     e20:	movw	r3, #427	; 0x1ab
     e24:	movw	r2, #0
     e28:	movt	r2, #0
     e2c:	movw	r1, #0
     e30:	movt	r1, #0
     e34:	mvn	r0, #99	; 0x63
     e38:	bl	0 <coda_set_error>
     e3c:	mvn	r3, #0
     e40:	b	12a8 <coda_cdf_variable_add_attribute+0x4c0>
     e44:	ldr	r3, [fp, #-36]	; 0xffffffdc
     e48:	cmp	r3, #0
     e4c:	bne	e74 <coda_cdf_variable_add_attribute+0x8c>
     e50:	mov	r3, #432	; 0x1b0
     e54:	movw	r2, #0
     e58:	movt	r2, #0
     e5c:	movw	r1, #0
     e60:	movt	r1, #0
     e64:	mvn	r0, #99	; 0x63
     e68:	bl	0 <coda_set_error>
     e6c:	mvn	r3, #0
     e70:	b	12a8 <coda_cdf_variable_add_attribute+0x4c0>
     e74:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e78:	cmp	r3, #0
     e7c:	bne	ea4 <coda_cdf_variable_add_attribute+0xbc>
     e80:	movw	r3, #437	; 0x1b5
     e84:	movw	r2, #0
     e88:	movt	r2, #0
     e8c:	movw	r1, #0
     e90:	movt	r1, #0
     e94:	mvn	r0, #99	; 0x63
     e98:	bl	0 <coda_set_error>
     e9c:	mvn	r3, #0
     ea0:	b	12a8 <coda_cdf_variable_add_attribute+0x4c0>
     ea4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ea8:	ldr	r3, [r3, #12]
     eac:	cmp	r3, #0
     eb0:	bne	f7c <coda_cdf_variable_add_attribute+0x194>
     eb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     eb8:	cmp	r3, #0
     ebc:	beq	f50 <coda_cdf_variable_add_attribute+0x168>
     ec0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ec4:	ldr	r3, [r3, #4]
     ec8:	ldr	r3, [r3, #36]	; 0x24
     ecc:	cmp	r3, #0
     ed0:	bne	f14 <coda_cdf_variable_add_attribute+0x12c>
     ed4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ed8:	ldr	r3, [r3, #4]
     edc:	ldr	r2, [r3]
     ee0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ee4:	ldr	r4, [r3, #4]
     ee8:	mov	r0, r2
     eec:	bl	0 <coda_type_record_new>
     ef0:	mov	r3, r0
     ef4:	str	r3, [r4, #36]	; 0x24
     ef8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     efc:	ldr	r3, [r3, #4]
     f00:	ldr	r3, [r3, #36]	; 0x24
     f04:	cmp	r3, #0
     f08:	bne	f14 <coda_cdf_variable_add_attribute+0x12c>
     f0c:	mvn	r3, #0
     f10:	b	12a8 <coda_cdf_variable_add_attribute+0x4c0>
     f14:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f18:	ldr	r3, [r3, #4]
     f1c:	ldr	r3, [r3, #36]	; 0x24
     f20:	mov	r1, #0
     f24:	mov	r0, r3
     f28:	bl	0 <coda_mem_record_new>
     f2c:	mov	r2, r0
     f30:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f34:	str	r2, [r3, #12]
     f38:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f3c:	ldr	r3, [r3, #12]
     f40:	cmp	r3, #0
     f44:	bne	ff4 <coda_cdf_variable_add_attribute+0x20c>
     f48:	mvn	r3, #0
     f4c:	b	12a8 <coda_cdf_variable_add_attribute+0x4c0>
     f50:	movw	r3, #462	; 0x1ce
     f54:	str	r3, [sp]
     f58:	movw	r3, #0
     f5c:	movt	r3, #0
     f60:	ldr	r2, [fp, #-36]	; 0xffffffdc
     f64:	movw	r1, #0
     f68:	movt	r1, #0
     f6c:	mvn	r0, #101	; 0x65
     f70:	bl	0 <coda_set_error>
     f74:	mvn	r3, #0
     f78:	b	12a8 <coda_cdf_variable_add_attribute+0x4c0>
     f7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f80:	ldr	r3, [r3, #12]
     f84:	ldr	r3, [r3]
     f88:	cmp	r3, #100	; 0x64
     f8c:	beq	fb4 <coda_cdf_variable_add_attribute+0x1cc>
     f90:	movw	r3, #470	; 0x1d6
     f94:	movw	r2, #0
     f98:	movt	r2, #0
     f9c:	movw	r1, #0
     fa0:	movt	r1, #0
     fa4:	mvn	r0, #99	; 0x63
     fa8:	bl	0 <coda_set_error>
     fac:	mvn	r3, #0
     fb0:	b	12a8 <coda_cdf_variable_add_attribute+0x4c0>
     fb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     fb8:	ldr	r3, [r3, #4]
     fbc:	ldr	r2, [r3, #36]	; 0x24
     fc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     fc4:	ldr	r3, [r3, #12]
     fc8:	ldr	r3, [r3, #4]
     fcc:	cmp	r2, r3
     fd0:	beq	ff4 <coda_cdf_variable_add_attribute+0x20c>
     fd4:	movw	r3, #0
     fd8:	movt	r3, #0
     fdc:	movw	r2, #473	; 0x1d9
     fe0:	movw	r1, #0
     fe4:	movt	r1, #0
     fe8:	movw	r0, #0
     fec:	movt	r0, #0
     ff0:	bl	0 <__assert_fail>
     ff4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ff8:	ldr	r3, [r3, #12]
     ffc:	str	r3, [fp, #-24]	; 0xffffffe8
    1000:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1004:	ldr	r3, [r3, #4]
    1008:	ldr	r3, [r3, #44]	; 0x2c
    100c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1010:	mov	r0, r3
    1014:	bl	0 <coda_hashtable_get_index_from_name>
    1018:	str	r0, [fp, #-16]
    101c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1020:	cmp	r3, #0
    1024:	beq	11a8 <coda_cdf_variable_add_attribute+0x3c0>
    1028:	ldr	r3, [fp, #-16]
    102c:	cmp	r3, #0
    1030:	blt	1068 <coda_cdf_variable_add_attribute+0x280>
    1034:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1038:	ldr	r3, [r3, #16]
    103c:	ldr	r2, [fp, #-16]
    1040:	cmp	r2, r3
    1044:	bge	10ac <coda_cdf_variable_add_attribute+0x2c4>
    1048:	ldr	r3, [fp, #-24]	; 0xffffffe8
    104c:	ldr	r2, [r3, #20]
    1050:	ldr	r3, [fp, #-16]
    1054:	lsl	r3, r3, #2
    1058:	add	r3, r2, r3
    105c:	ldr	r3, [r3]
    1060:	cmp	r3, #0
    1064:	beq	10ac <coda_cdf_variable_add_attribute+0x2c4>
    1068:	ldr	r3, [fp, #-24]	; 0xffffffe8
    106c:	ldr	r0, [r3, #4]
    1070:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1074:	ldr	r3, [r3, #4]
    1078:	mov	r2, r3
    107c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1080:	bl	0 <coda_type_record_create_field>
    1084:	mov	r3, r0
    1088:	cmp	r3, #0
    108c:	beq	1098 <coda_cdf_variable_add_attribute+0x2b0>
    1090:	mvn	r3, #0
    1094:	b	12a8 <coda_cdf_variable_add_attribute+0x4c0>
    1098:	ldr	r3, [fp, #-24]	; 0xffffffe8
    109c:	ldr	r3, [r3, #4]
    10a0:	ldr	r3, [r3, #48]	; 0x30
    10a4:	sub	r3, r3, #1
    10a8:	str	r3, [fp, #-16]
    10ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10b0:	ldr	r2, [r3, #16]
    10b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10b8:	ldr	r3, [r3, #4]
    10bc:	ldr	r3, [r3, #48]	; 0x30
    10c0:	cmp	r2, r3
    10c4:	bge	1288 <coda_cdf_variable_add_attribute+0x4a0>
    10c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10cc:	ldr	r2, [r3, #20]
    10d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10d4:	ldr	r3, [r3, #4]
    10d8:	ldr	r3, [r3, #48]	; 0x30
    10dc:	lsl	r3, r3, #2
    10e0:	mov	r1, r3
    10e4:	mov	r0, r2
    10e8:	bl	0 <realloc>
    10ec:	str	r0, [fp, #-28]	; 0xffffffe4
    10f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10f4:	cmp	r3, #0
    10f8:	bne	1134 <coda_cdf_variable_add_attribute+0x34c>
    10fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1100:	ldr	r3, [r3, #4]
    1104:	ldr	r3, [r3, #48]	; 0x30
    1108:	lsl	r2, r3, #2
    110c:	movw	r3, #499	; 0x1f3
    1110:	str	r3, [sp]
    1114:	movw	r3, #0
    1118:	movt	r3, #0
    111c:	movw	r1, #0
    1120:	movt	r1, #0
    1124:	mvn	r0, #0
    1128:	bl	0 <coda_set_error>
    112c:	mvn	r3, #0
    1130:	b	12a8 <coda_cdf_variable_add_attribute+0x4c0>
    1134:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1138:	ldr	r2, [fp, #-28]	; 0xffffffe4
    113c:	str	r2, [r3, #20]
    1140:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1144:	ldr	r3, [r3, #16]
    1148:	str	r3, [fp, #-20]	; 0xffffffec
    114c:	b	1178 <coda_cdf_variable_add_attribute+0x390>
    1150:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1154:	ldr	r2, [r3, #20]
    1158:	ldr	r3, [fp, #-20]	; 0xffffffec
    115c:	lsl	r3, r3, #2
    1160:	add	r3, r2, r3
    1164:	mov	r2, #0
    1168:	str	r2, [r3]
    116c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1170:	add	r3, r3, #1
    1174:	str	r3, [fp, #-20]	; 0xffffffec
    1178:	ldr	r3, [fp, #-24]	; 0xffffffe8
    117c:	ldr	r3, [r3, #4]
    1180:	ldr	r3, [r3, #48]	; 0x30
    1184:	ldr	r2, [fp, #-20]	; 0xffffffec
    1188:	cmp	r2, r3
    118c:	blt	1150 <coda_cdf_variable_add_attribute+0x368>
    1190:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1194:	ldr	r3, [r3, #4]
    1198:	ldr	r2, [r3, #48]	; 0x30
    119c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11a0:	str	r2, [r3, #16]
    11a4:	b	1288 <coda_cdf_variable_add_attribute+0x4a0>
    11a8:	ldr	r3, [fp, #-16]
    11ac:	cmp	r3, #0
    11b0:	bge	11e0 <coda_cdf_variable_add_attribute+0x3f8>
    11b4:	mov	r3, #516	; 0x204
    11b8:	str	r3, [sp]
    11bc:	movw	r3, #0
    11c0:	movt	r3, #0
    11c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    11c8:	movw	r1, #0
    11cc:	movt	r1, #0
    11d0:	mvn	r0, #101	; 0x65
    11d4:	bl	0 <coda_set_error>
    11d8:	mvn	r3, #0
    11dc:	b	12a8 <coda_cdf_variable_add_attribute+0x4c0>
    11e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11e4:	ldr	r2, [r3, #20]
    11e8:	ldr	r3, [fp, #-16]
    11ec:	lsl	r3, r3, #2
    11f0:	add	r3, r2, r3
    11f4:	ldr	r3, [r3]
    11f8:	cmp	r3, #0
    11fc:	beq	122c <coda_cdf_variable_add_attribute+0x444>
    1200:	movw	r3, #522	; 0x20a
    1204:	str	r3, [sp]
    1208:	movw	r3, #0
    120c:	movt	r3, #0
    1210:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1214:	movw	r1, #0
    1218:	movt	r1, #0
    121c:	mvn	r0, #99	; 0x63
    1220:	bl	0 <coda_set_error>
    1224:	mvn	r3, #0
    1228:	b	12a8 <coda_cdf_variable_add_attribute+0x4c0>
    122c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1230:	ldr	r3, [r3, #4]
    1234:	ldr	r2, [r3, #52]	; 0x34
    1238:	ldr	r3, [fp, #-16]
    123c:	lsl	r3, r3, #2
    1240:	add	r3, r2, r3
    1244:	ldr	r3, [r3]
    1248:	ldr	r2, [r3, #8]
    124c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1250:	ldr	r3, [r3, #4]
    1254:	cmp	r2, r3
    1258:	beq	1288 <coda_cdf_variable_add_attribute+0x4a0>
    125c:	mov	r3, #528	; 0x210
    1260:	str	r3, [sp]
    1264:	movw	r3, #0
    1268:	movt	r3, #0
    126c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1270:	movw	r1, #0
    1274:	movt	r1, #0
    1278:	mvn	r0, #99	; 0x63
    127c:	bl	0 <coda_set_error>
    1280:	mvn	r3, #0
    1284:	b	12a8 <coda_cdf_variable_add_attribute+0x4c0>
    1288:	ldr	r3, [fp, #-24]	; 0xffffffe8
    128c:	ldr	r2, [r3, #20]
    1290:	ldr	r3, [fp, #-16]
    1294:	lsl	r3, r3, #2
    1298:	add	r3, r2, r3
    129c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    12a0:	str	r2, [r3]
    12a4:	mov	r3, #0
    12a8:	mov	r0, r3
    12ac:	sub	sp, fp, #8
    12b0:	ldr	r4, [sp]
    12b4:	ldr	fp, [sp, #4]
    12b8:	add	sp, sp, #8
    12bc:	pop	{pc}		; (ldr pc, [sp], #4)
