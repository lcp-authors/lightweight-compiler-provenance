
../compcert-repos/prog2/0.9:     file format elf32-littlearm


Disassembly of section .init:

00010664 <.init>:
   10664:	push	{r3, lr}
   10668:	bl	10720 <_start@@Base+0x3c>
   1066c:	pop	{r3, pc}

Disassembly of section .plt:

00010670 <strcmp@plt-0x14>:
   10670:	push	{lr}		; (str lr, [sp, #-4]!)
   10674:	ldr	lr, [pc, #4]	; 10680 <strcmp@plt-0x4>
   10678:	add	lr, pc, lr
   1067c:	ldr	pc, [lr, #8]!
   10680:	andeq	r0, r1, r0, lsl #19

00010684 <strcmp@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #16, 20	; 0x10000
   1068c:	ldr	pc, [ip, #2432]!	; 0x980

00010690 <printf@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #16, 20	; 0x10000
   10698:	ldr	pc, [ip, #2424]!	; 0x978

0001069c <strcat@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #16, 20	; 0x10000
   106a4:	ldr	pc, [ip, #2416]!	; 0x970

000106a8 <__libc_start_main@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #16, 20	; 0x10000
   106b0:	ldr	pc, [ip, #2408]!	; 0x968

000106b4 <__gmon_start__@plt>:
   106b4:	add	ip, pc, #0, 12
   106b8:	add	ip, ip, #16, 20	; 0x10000
   106bc:	ldr	pc, [ip, #2400]!	; 0x960

000106c0 <strlen@plt>:
   106c0:	add	ip, pc, #0, 12
   106c4:	add	ip, ip, #16, 20	; 0x10000
   106c8:	ldr	pc, [ip, #2392]!	; 0x958

000106cc <__isoc99_scanf@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2384]!	; 0x950

000106d8 <abort@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2376]!	; 0x948

Disassembly of section .text:

000106e4 <_start@@Base>:
   106e4:	mov	fp, #0
   106e8:	mov	lr, #0
   106ec:	pop	{r1}		; (ldr r1, [sp], #4)
   106f0:	mov	r2, sp
   106f4:	push	{r2}		; (str r2, [sp, #-4]!)
   106f8:	push	{r0}		; (str r0, [sp, #-4]!)
   106fc:	ldr	ip, [pc, #16]	; 10714 <_start@@Base+0x30>
   10700:	push	{ip}		; (str ip, [sp, #-4]!)
   10704:	ldr	r0, [pc, #12]	; 10718 <_start@@Base+0x34>
   10708:	ldr	r3, [pc, #12]	; 1071c <_start@@Base+0x38>
   1070c:	bl	106a8 <__libc_start_main@plt>
   10710:	bl	106d8 <abort@plt>
   10714:	andeq	r0, r1, r0, ror ip
   10718:	andeq	r0, r1, ip, asr #22
   1071c:	andeq	r0, r1, r0, lsl ip
   10720:	ldr	r3, [pc, #20]	; 1073c <_start@@Base+0x58>
   10724:	ldr	r2, [pc, #20]	; 10740 <_start@@Base+0x5c>
   10728:	add	r3, pc, r3
   1072c:	ldr	r2, [r3, r2]
   10730:	cmp	r2, #0
   10734:	bxeq	lr
   10738:	b	106b4 <__gmon_start__@plt>
   1073c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10740:	andeq	r0, r0, ip, lsr #32
   10744:	ldr	r3, [pc, #28]	; 10768 <_start@@Base+0x84>
   10748:	ldr	r0, [pc, #28]	; 1076c <_start@@Base+0x88>
   1074c:	sub	r3, r3, r0
   10750:	cmp	r3, #6
   10754:	bxls	lr
   10758:	ldr	r3, [pc, #16]	; 10770 <_start@@Base+0x8c>
   1075c:	cmp	r3, #0
   10760:	bxeq	lr
   10764:	bx	r3
   10768:	andeq	r1, r2, fp, lsr r0
   1076c:	andeq	r1, r2, r8, lsr r0
   10770:	andeq	r0, r0, r0
   10774:	ldr	r1, [pc, #36]	; 107a0 <_start@@Base+0xbc>
   10778:	ldr	r0, [pc, #36]	; 107a4 <_start@@Base+0xc0>
   1077c:	sub	r1, r1, r0
   10780:	asr	r1, r1, #2
   10784:	add	r1, r1, r1, lsr #31
   10788:	asrs	r1, r1, #1
   1078c:	bxeq	lr
   10790:	ldr	r3, [pc, #16]	; 107a8 <_start@@Base+0xc4>
   10794:	cmp	r3, #0
   10798:	bxeq	lr
   1079c:	bx	r3
   107a0:	andeq	r1, r2, r8, lsr r0
   107a4:	andeq	r1, r2, r8, lsr r0
   107a8:	andeq	r0, r0, r0
   107ac:	push	{r4, lr}
   107b0:	ldr	r4, [pc, #24]	; 107d0 <_start@@Base+0xec>
   107b4:	ldrb	r3, [r4]
   107b8:	cmp	r3, #0
   107bc:	popne	{r4, pc}
   107c0:	bl	10744 <_start@@Base+0x60>
   107c4:	mov	r3, #1
   107c8:	strb	r3, [r4]
   107cc:	pop	{r4, pc}
   107d0:	andeq	r1, r2, r8, lsr r0
   107d4:	ldr	r0, [pc, #40]	; 10804 <_start@@Base+0x120>
   107d8:	ldr	r3, [r0]
   107dc:	cmp	r3, #0
   107e0:	bne	107e8 <_start@@Base+0x104>
   107e4:	b	10774 <_start@@Base+0x90>
   107e8:	ldr	r3, [pc, #24]	; 10808 <_start@@Base+0x124>
   107ec:	cmp	r3, #0
   107f0:	beq	107e4 <_start@@Base+0x100>
   107f4:	push	{r4, lr}
   107f8:	blx	r3
   107fc:	pop	{r4, lr}
   10800:	b	10774 <_start@@Base+0x90>
   10804:	andeq	r0, r2, r4, lsl pc
   10808:	andeq	r0, r0, r0

0001080c <ler_albuns@@Base>:
   1080c:	push	{r4, fp, lr}
   10810:	add	fp, sp, #8
   10814:	sub	sp, sp, #44	; 0x2c
   10818:	str	r0, [fp, #-40]	; 0xffffffd8
   1081c:	mov	r3, #0
   10820:	str	r3, [fp, #-16]
   10824:	sub	r3, fp, #32
   10828:	mov	r2, #0
   1082c:	str	r2, [r3]
   10830:	str	r2, [r3, #4]
   10834:	str	r2, [r3, #8]
   10838:	str	r2, [r3, #11]
   1083c:	b	108b0 <ler_albuns@@Base+0xa4>
   10840:	ldr	r3, [fp, #-16]
   10844:	mov	r2, #208	; 0xd0
   10848:	mul	r3, r2, r3
   1084c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10850:	add	r3, r2, r3
   10854:	mov	r4, r3
   10858:	mov	r0, r4
   1085c:	bl	106c0 <strlen@plt>
   10860:	mov	r3, r0
   10864:	add	r3, r4, r3
   10868:	ldr	r1, [pc, #232]	; 10958 <ler_albuns@@Base+0x14c>
   1086c:	mov	r2, r3
   10870:	mov	r3, r1
   10874:	ldrh	r3, [r3]
   10878:	strh	r3, [r2]
   1087c:	ldr	r3, [fp, #-16]
   10880:	mov	r2, #208	; 0xd0
   10884:	mul	r3, r2, r3
   10888:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1088c:	add	r3, r2, r3
   10890:	mov	r2, r3
   10894:	sub	r3, fp, #32
   10898:	mov	r1, r3
   1089c:	mov	r0, r2
   108a0:	bl	1069c <strcat@plt>
   108a4:	ldr	r3, [fp, #-16]
   108a8:	add	r3, r3, #1
   108ac:	str	r3, [fp, #-16]
   108b0:	ldr	r3, [fp, #-16]
   108b4:	mov	r2, #208	; 0xd0
   108b8:	mul	r3, r2, r3
   108bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   108c0:	add	r3, r2, r3
   108c4:	mov	ip, r3
   108c8:	ldr	r3, [fp, #-16]
   108cc:	mov	r2, #208	; 0xd0
   108d0:	mul	r3, r2, r3
   108d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   108d8:	add	r3, r2, r3
   108dc:	add	r0, r3, #100	; 0x64
   108e0:	ldr	r3, [fp, #-16]
   108e4:	mov	r2, #208	; 0xd0
   108e8:	mul	r3, r2, r3
   108ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   108f0:	add	r3, r2, r3
   108f4:	add	r3, r3, #200	; 0xc8
   108f8:	ldr	r2, [fp, #-16]
   108fc:	mov	r1, #208	; 0xd0
   10900:	mul	r2, r1, r2
   10904:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10908:	add	r2, r1, r2
   1090c:	add	r2, r2, #204	; 0xcc
   10910:	sub	r1, fp, #32
   10914:	str	r2, [sp, #4]
   10918:	str	r3, [sp]
   1091c:	mov	r3, r0
   10920:	mov	r2, r1
   10924:	mov	r1, ip
   10928:	ldr	r0, [pc, #44]	; 1095c <ler_albuns@@Base+0x150>
   1092c:	bl	106cc <__isoc99_scanf@plt>
   10930:	mov	r3, r0
   10934:	cmp	r3, #5
   10938:	bne	10948 <ler_albuns@@Base+0x13c>
   1093c:	ldr	r3, [fp, #-16]
   10940:	cmp	r3, #99	; 0x63
   10944:	ble	10840 <ler_albuns@@Base+0x34>
   10948:	ldr	r3, [fp, #-16]
   1094c:	mov	r0, r3
   10950:	sub	sp, fp, #8
   10954:	pop	{r4, fp, pc}
   10958:	andeq	r0, r1, r0, lsl #25
   1095c:	andeq	r0, r1, r4, lsl #25

00010960 <lista_albuns@@Base>:
   10960:	push	{fp, lr}
   10964:	add	fp, sp, #4
   10968:	sub	sp, sp, #24
   1096c:	str	r0, [fp, #-16]
   10970:	str	r1, [fp, #-20]	; 0xffffffec
   10974:	mov	r3, #0
   10978:	str	r3, [fp, #-8]
   1097c:	b	10a04 <lista_albuns@@Base+0xa4>
   10980:	ldr	r3, [fp, #-8]
   10984:	mov	r2, #208	; 0xd0
   10988:	mul	r3, r2, r3
   1098c:	ldr	r2, [fp, #-16]
   10990:	add	r3, r2, r3
   10994:	mov	ip, r3
   10998:	ldr	r3, [fp, #-8]
   1099c:	mov	r2, #208	; 0xd0
   109a0:	mul	r3, r2, r3
   109a4:	ldr	r2, [fp, #-16]
   109a8:	add	r3, r2, r3
   109ac:	add	r1, r3, #100	; 0x64
   109b0:	ldr	r3, [fp, #-8]
   109b4:	mov	r2, #208	; 0xd0
   109b8:	mul	r3, r2, r3
   109bc:	ldr	r2, [fp, #-16]
   109c0:	add	r3, r2, r3
   109c4:	ldr	r0, [r3, #200]	; 0xc8
   109c8:	ldr	r3, [fp, #-8]
   109cc:	mov	r2, #208	; 0xd0
   109d0:	mul	r3, r2, r3
   109d4:	ldr	r2, [fp, #-16]
   109d8:	add	r3, r2, r3
   109dc:	ldr	r3, [r3, #204]	; 0xcc
   109e0:	str	r3, [sp]
   109e4:	mov	r3, r0
   109e8:	mov	r2, r1
   109ec:	mov	r1, ip
   109f0:	ldr	r0, [pc, #40]	; 10a20 <lista_albuns@@Base+0xc0>
   109f4:	bl	10690 <printf@plt>
   109f8:	ldr	r3, [fp, #-8]
   109fc:	add	r3, r3, #1
   10a00:	str	r3, [fp, #-8]
   10a04:	ldr	r2, [fp, #-8]
   10a08:	ldr	r3, [fp, #-20]	; 0xffffffec
   10a0c:	cmp	r2, r3
   10a10:	blt	10980 <lista_albuns@@Base+0x20>
   10a14:	nop			; (mov r0, r0)
   10a18:	sub	sp, fp, #4
   10a1c:	pop	{fp, pc}
   10a20:	muleq	r1, r4, ip

00010a24 <albuns_artista@@Base>:
   10a24:	push	{fp, lr}
   10a28:	add	fp, sp, #4
   10a2c:	sub	sp, sp, #24
   10a30:	str	r0, [fp, #-16]
   10a34:	str	r1, [fp, #-20]	; 0xffffffec
   10a38:	str	r2, [fp, #-24]	; 0xffffffe8
   10a3c:	str	r3, [fp, #-28]	; 0xffffffe4
   10a40:	mov	r3, #0
   10a44:	str	r3, [fp, #-12]
   10a48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10a4c:	cmp	r3, #0
   10a50:	bne	10ab8 <albuns_artista@@Base+0x94>
   10a54:	mov	r3, #0
   10a58:	str	r3, [fp, #-8]
   10a5c:	b	10aa4 <albuns_artista@@Base+0x80>
   10a60:	ldr	r3, [fp, #-8]
   10a64:	mov	r2, #208	; 0xd0
   10a68:	mul	r3, r2, r3
   10a6c:	ldr	r2, [fp, #-16]
   10a70:	add	r3, r2, r3
   10a74:	mov	r1, r3
   10a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10a7c:	bl	10684 <strcmp@plt>
   10a80:	mov	r3, r0
   10a84:	cmp	r3, #0
   10a88:	bne	10a98 <albuns_artista@@Base+0x74>
   10a8c:	ldr	r3, [fp, #-12]
   10a90:	add	r3, r3, #1
   10a94:	str	r3, [fp, #-12]
   10a98:	ldr	r3, [fp, #-8]
   10a9c:	add	r3, r3, #1
   10aa0:	str	r3, [fp, #-8]
   10aa4:	ldr	r2, [fp, #-8]
   10aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   10aac:	cmp	r2, r3
   10ab0:	blt	10a60 <albuns_artista@@Base+0x3c>
   10ab4:	b	10b3c <albuns_artista@@Base+0x118>
   10ab8:	mov	r3, #0
   10abc:	str	r3, [fp, #-8]
   10ac0:	b	10b2c <albuns_artista@@Base+0x108>
   10ac4:	ldr	r3, [fp, #-8]
   10ac8:	mov	r2, #208	; 0xd0
   10acc:	mul	r3, r2, r3
   10ad0:	ldr	r2, [fp, #-16]
   10ad4:	add	r3, r2, r3
   10ad8:	mov	r1, r3
   10adc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10ae0:	bl	10684 <strcmp@plt>
   10ae4:	mov	r3, r0
   10ae8:	cmp	r3, #0
   10aec:	bne	10b20 <albuns_artista@@Base+0xfc>
   10af0:	ldr	r3, [fp, #-8]
   10af4:	mov	r2, #208	; 0xd0
   10af8:	mul	r3, r2, r3
   10afc:	ldr	r2, [fp, #-16]
   10b00:	add	r3, r2, r3
   10b04:	ldr	r2, [r3, #204]	; 0xcc
   10b08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10b0c:	cmp	r2, r3
   10b10:	bne	10b20 <albuns_artista@@Base+0xfc>
   10b14:	ldr	r3, [fp, #-12]
   10b18:	add	r3, r3, #1
   10b1c:	str	r3, [fp, #-12]
   10b20:	ldr	r3, [fp, #-8]
   10b24:	add	r3, r3, #1
   10b28:	str	r3, [fp, #-8]
   10b2c:	ldr	r2, [fp, #-8]
   10b30:	ldr	r3, [fp, #-20]	; 0xffffffec
   10b34:	cmp	r2, r3
   10b38:	blt	10ac4 <albuns_artista@@Base+0xa0>
   10b3c:	ldr	r3, [fp, #-12]
   10b40:	mov	r0, r3
   10b44:	sub	sp, fp, #4
   10b48:	pop	{fp, pc}

00010b4c <main@@Base>:
   10b4c:	push	{fp, lr}
   10b50:	add	fp, sp, #4
   10b54:	sub	sp, sp, #20736	; 0x5100
   10b58:	sub	sp, sp, #72	; 0x48
   10b5c:	sub	r3, fp, #20736	; 0x5100
   10b60:	sub	r3, r3, #4
   10b64:	sub	r3, r3, #68	; 0x44
   10b68:	mov	r0, r3
   10b6c:	bl	1080c <ler_albuns@@Base>
   10b70:	str	r0, [fp, #-8]
   10b74:	sub	r3, fp, #20736	; 0x5100
   10b78:	sub	r3, r3, #4
   10b7c:	sub	r3, r3, #68	; 0x44
   10b80:	ldr	r1, [fp, #-8]
   10b84:	mov	r0, r3
   10b88:	bl	10960 <lista_albuns@@Base>
   10b8c:	ldr	r1, [fp, #-8]
   10b90:	ldr	r0, [pc, #104]	; 10c00 <main@@Base+0xb4>
   10b94:	bl	10690 <printf@plt>
   10b98:	sub	r0, fp, #20736	; 0x5100
   10b9c:	sub	r0, r0, #4
   10ba0:	sub	r0, r0, #68	; 0x44
   10ba4:	mov	r3, #1
   10ba8:	ldr	r2, [pc, #84]	; 10c04 <main@@Base+0xb8>
   10bac:	ldr	r1, [fp, #-8]
   10bb0:	bl	10a24 <albuns_artista@@Base>
   10bb4:	mov	r3, r0
   10bb8:	mov	r1, r3
   10bbc:	ldr	r0, [pc, #68]	; 10c08 <main@@Base+0xbc>
   10bc0:	bl	10690 <printf@plt>
   10bc4:	sub	r0, fp, #20736	; 0x5100
   10bc8:	sub	r0, r0, #4
   10bcc:	sub	r0, r0, #68	; 0x44
   10bd0:	mov	r3, #0
   10bd4:	ldr	r2, [pc, #40]	; 10c04 <main@@Base+0xb8>
   10bd8:	ldr	r1, [fp, #-8]
   10bdc:	bl	10a24 <albuns_artista@@Base>
   10be0:	mov	r3, r0
   10be4:	mov	r1, r3
   10be8:	ldr	r0, [pc, #28]	; 10c0c <main@@Base+0xc0>
   10bec:	bl	10690 <printf@plt>
   10bf0:	mov	r3, #0
   10bf4:	mov	r0, r3
   10bf8:	sub	sp, fp, #4
   10bfc:	pop	{fp, pc}
   10c00:	andeq	r0, r1, r4, lsr #25
   10c04:	andeq	r0, r1, r4, asr #25
   10c08:	ldrdeq	r0, [r1], -r4
   10c0c:	andeq	r0, r1, ip, lsl #26

00010c10 <__libc_csu_init@@Base>:
   10c10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c14:	mov	r7, r0
   10c18:	ldr	r6, [pc, #72]	; 10c68 <__libc_csu_init@@Base+0x58>
   10c1c:	ldr	r5, [pc, #72]	; 10c6c <__libc_csu_init@@Base+0x5c>
   10c20:	add	r6, pc, r6
   10c24:	add	r5, pc, r5
   10c28:	sub	r6, r6, r5
   10c2c:	mov	r8, r1
   10c30:	mov	r9, r2
   10c34:	bl	10664 <strcmp@plt-0x20>
   10c38:	asrs	r6, r6, #2
   10c3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c40:	mov	r4, #0
   10c44:	add	r4, r4, #1
   10c48:	ldr	r3, [r5], #4
   10c4c:	mov	r2, r9
   10c50:	mov	r1, r8
   10c54:	mov	r0, r7
   10c58:	blx	r3
   10c5c:	cmp	r6, r4
   10c60:	bne	10c44 <__libc_csu_init@@Base+0x34>
   10c64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c68:	andeq	r0, r1, r8, ror #5
   10c6c:	andeq	r0, r1, r0, ror #5

00010c70 <__libc_csu_fini@@Base>:
   10c70:	bx	lr

Disassembly of section .fini:

00010c74 <.fini>:
   10c74:	push	{r3, lr}
   10c78:	pop	{r3, pc}
