
../repos/stcorp-coda-3a25f25/CMakeFiles/codafind.dir/tools/codafind/codafind.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_help>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	ldr	r0, [pc, #252]	; 114 <print_help+0x114>
  14:	bl	0 <printf>
  18:	ldr	r0, [pc, #320]	; 160 <print_help+0x160>
  1c:	bl	0 <printf>
  20:	ldr	r0, [pc, #288]	; 148 <print_help+0x148>
  24:	bl	0 <printf>
  28:	ldr	r0, [pc, #220]	; 10c <print_help+0x10c>
  2c:	bl	0 <printf>
  30:	ldr	r0, [pc, #224]	; 118 <print_help+0x118>
  34:	bl	0 <printf>
  38:	ldr	r0, [pc, #268]	; 14c <print_help+0x14c>
  3c:	bl	0 <printf>
  40:	ldr	r0, [pc, #228]	; 12c <print_help+0x12c>
  44:	bl	0 <printf>
  48:	ldr	r0, [pc, #276]	; 164 <print_help+0x164>
  4c:	bl	0 <printf>
  50:	ldr	r0, [pc, #236]	; 144 <print_help+0x144>
  54:	bl	0 <printf>
  58:	ldr	r0, [pc, #176]	; 110 <print_help+0x110>
  5c:	bl	0 <printf>
  60:	ldr	r0, [pc, #180]	; 11c <print_help+0x11c>
  64:	bl	0 <printf>
  68:	ldr	r0, [pc, #224]	; 150 <print_help+0x150>
  6c:	bl	0 <printf>
  70:	ldr	r0, [pc, #140]	; 104 <print_help+0x104>
  74:	bl	0 <printf>
  78:	ldr	r0, [pc, #212]	; 154 <print_help+0x154>
  7c:	bl	0 <printf>
  80:	ldr	r0, [pc, #144]	; 118 <print_help+0x118>
  84:	bl	0 <printf>
  88:	ldr	r0, [pc, #164]	; 134 <print_help+0x134>
  8c:	bl	0 <printf>
  90:	ldr	r0, [pc, #112]	; 108 <print_help+0x108>
  94:	bl	0 <printf>
  98:	ldr	r0, [pc, #120]	; 118 <print_help+0x118>
  9c:	bl	0 <printf>
  a0:	ldr	r0, [pc, #120]	; 120 <print_help+0x120>
  a4:	bl	0 <printf>
  a8:	ldr	r0, [pc, #120]	; 128 <print_help+0x128>
  ac:	bl	0 <printf>
  b0:	ldr	r0, [pc, #96]	; 118 <print_help+0x118>
  b4:	bl	0 <printf>
  b8:	ldr	r0, [pc, #100]	; 124 <print_help+0x124>
  bc:	bl	0 <printf>
  c0:	ldr	r0, [pc, #112]	; 138 <print_help+0x138>
  c4:	bl	0 <printf>
  c8:	ldr	r0, [pc, #136]	; 158 <print_help+0x158>
  cc:	bl	0 <printf>
  d0:	ldr	r0, [pc, #100]	; 13c <print_help+0x13c>
  d4:	bl	0 <printf>
  d8:	ldr	r0, [pc, #96]	; 140 <print_help+0x140>
  dc:	bl	0 <printf>
  e0:	ldr	r0, [pc, #116]	; 15c <print_help+0x15c>
  e4:	bl	0 <printf>
  e8:	ldr	r0, [pc, #64]	; 130 <print_help+0x130>
  ec:	bl	0 <printf>
  f0:	ldr	r0, [pc, #32]	; 118 <print_help+0x118>
  f4:	bl	0 <printf>
  f8:	ldr	lr, [sp, #4]
  fc:	add	sp, sp, #8
 100:	bx	lr
 104:	.word	0x000003d6
 108:	.word	0x0000059a
 10c:	.word	0x0000060e
 110:	.word	0x00000050
 114:	.word	0x00000162
 118:	.word	0x0000043a
 11c:	.word	0x00000626
 120:	.word	0x000004fe
 124:	.word	0x0000016a
 128:	.word	0x0000051a
 12c:	.word	0x000004d5
 130:	.word	0x0000043c
 134:	.word	0x000003f1
 138:	.word	0x000002a2
 13c:	.word	0x000000cf
 140:	.word	0x00000227
 144:	.word	0x0000040a
 148:	.word	0x00000000
 14c:	.word	0x00000341
 150:	.word	0x0000047d
 154:	.word	0x00000126
 158:	.word	0x00000399
 15c:	.word	0x000005ce
 160:	.word	0x00000554
 164:	.word	0x0000035e

00000168 <callback>:
 168:	mov	ip, sp
 16c:	sub	sp, sp, #16
 170:	str	ip, [sp]
 174:	str	lr, [sp, #4]
 178:	str	r4, [sp, #8]
 17c:	mov	r3, r2
 180:	mov	r4, r1
 184:	mov	r1, r0
 188:	cmp	r4, #0
 18c:	beq	268 <callback+0x100>
 190:	cmp	r4, #2
 194:	beq	248 <callback+0xe0>
 198:	cmp	r4, #1
 19c:	beq	228 <callback+0xc0>
 1a0:	ldr	ip, [pc, #264]	; 2b0 <callback+0x148>
 1a4:	ldr	ip, [ip]
 1a8:	cmp	ip, #0
 1ac:	beq	214 <callback+0xac>
 1b0:	ldr	r0, [pc, #256]	; 2b8 <callback+0x150>
 1b4:	bl	0 <printf>
 1b8:	cmp	r4, #3
 1bc:	bcs	1d8 <callback+0x70>
 1c0:	ldr	r0, [pc, #244]	; 2bc <callback+0x154>
 1c4:	ldr	r1, [pc, #248]	; 2c4 <callback+0x15c>
 1c8:	mov	r2, #110	; 0x6e
 1cc:	ldr	r3, [pc, #244]	; 2c8 <callback+0x160>
 1d0:	bl	0 <__assert_fail>
 1d4:	b	284 <callback+0x11c>
 1d8:	cmp	r4, #3
 1dc:	beq	208 <callback+0xa0>
 1e0:	cmp	r4, #4
 1e4:	beq	1fc <callback+0x94>
 1e8:	cmp	r4, #5
 1ec:	bne	284 <callback+0x11c>
 1f0:	ldr	r0, [pc, #168]	; 2a0 <callback+0x138>
 1f4:	bl	0 <printf>
 1f8:	b	284 <callback+0x11c>
 1fc:	ldr	r0, [pc, #176]	; 2b4 <callback+0x14c>
 200:	bl	0 <printf>
 204:	b	284 <callback+0x11c>
 208:	ldr	r0, [pc, #176]	; 2c0 <callback+0x158>
 20c:	bl	0 <printf>
 210:	b	284 <callback+0x11c>
 214:	cmp	r4, #4
 218:	bne	284 <callback+0x11c>
 21c:	ldr	r0, [pc, #116]	; 298 <callback+0x130>
 220:	bl	0 <printf>
 224:	b	284 <callback+0x11c>
 228:	ldr	ip, [pc, #120]	; 2a8 <callback+0x140>
 22c:	ldr	r0, [ip]
 230:	ldr	r2, [pc, #116]	; 2ac <callback+0x144>
 234:	mov	ip, r1
 238:	mov	r1, r2
 23c:	mov	r2, ip
 240:	bl	0 <fprintf>
 244:	b	284 <callback+0x11c>
 248:	ldr	r2, [pc, #88]	; 2a8 <callback+0x140>
 24c:	ldr	r0, [r2]
 250:	ldr	r2, [pc, #68]	; 29c <callback+0x134>
 254:	mov	r3, r1
 258:	mov	r1, r2
 25c:	mov	r2, r3
 260:	bl	0 <fprintf>
 264:	b	284 <callback+0x11c>
 268:	ldr	ip, [pc, #56]	; 2a8 <callback+0x140>
 26c:	ldr	r0, [ip]
 270:	ldr	r2, [pc, #44]	; 2a4 <callback+0x13c>
 274:	mov	ip, r1
 278:	mov	r1, r2
 27c:	mov	r2, ip
 280:	bl	0 <fprintf>
 284:	mov	r0, #0
 288:	ldr	r4, [sp, #8]
 28c:	ldr	lr, [sp, #4]
 290:	add	sp, sp, #16
 294:	bx	lr
 298:	.word	0x00000596
 29c:	.word	0x0000030e
 2a0:	.word	0x00000337
 2a4:	.word	0x000002ec
 2a8:	.word	0x00000000
 2ac:	.word	0x000004aa
 2b0:	.word	0x00000000
 2b4:	.word	0x0000054d
 2b8:	.word	0x0000011c
 2bc:	.word	0x000004fc
 2c0:	.word	0x000005b9
 2c4:	.word	0x000001c5
 2c8:	.word	0x00000676

000002cc <main>:
 2cc:	mov	ip, sp
 2d0:	sub	sp, sp, #40	; 0x28
 2d4:	str	ip, [sp, #4]
 2d8:	str	lr, [sp, #8]
 2dc:	str	r4, [sp, #16]
 2e0:	str	r5, [sp, #20]
 2e4:	str	r6, [sp, #24]
 2e8:	str	r7, [sp, #28]
 2ec:	str	r8, [sp, #32]
 2f0:	mov	r4, r1
 2f4:	mov	r6, r0
 2f8:	mov	r5, #0
 2fc:	ldr	r2, [pc, #820]	; 638 <main+0x36c>
 300:	mov	r1, #0
 304:	str	r1, [r2]
 308:	mov	r7, #1
 30c:	cmp	r6, #1
 310:	beq	33c <main+0x70>
 314:	ldr	r0, [r4, #4]
 318:	ldr	r1, [pc, #764]	; 61c <main+0x350>
 31c:	bl	0 <strcmp>
 320:	cmp	r0, #0
 324:	beq	33c <main+0x70>
 328:	ldr	r0, [r4, #4]
 32c:	ldr	r1, [pc, #756]	; 628 <main+0x35c>
 330:	bl	0 <strcmp>
 334:	cmp	r0, #0
 338:	bne	348 <main+0x7c>
 33c:	bl	0 <print_help>
 340:	mov	r0, #0
 344:	bl	0 <exit>
 348:	ldr	r0, [r4, #4]
 34c:	ldr	r1, [pc, #764]	; 650 <main+0x384>
 350:	bl	0 <strcmp>
 354:	cmp	r0, #0
 358:	beq	370 <main+0xa4>
 35c:	ldr	r0, [r4, #4]
 360:	ldr	r1, [pc, #736]	; 648 <main+0x37c>
 364:	bl	0 <strcmp>
 368:	cmp	r0, #0
 36c:	bne	3a0 <main+0xd4>
 370:	bl	0 <coda_get_libcoda_version>
 374:	ldr	r1, [pc, #656]	; 60c <main+0x340>
 378:	mov	ip, r0
 37c:	mov	r0, r1
 380:	mov	r1, ip
 384:	bl	0 <printf>
 388:	ldr	r0, [pc, #700]	; 64c <main+0x380>
 38c:	bl	0 <printf>
 390:	ldr	r0, [pc, #664]	; 630 <main+0x364>
 394:	bl	0 <printf>
 398:	mov	r0, #0
 39c:	bl	0 <exit>
 3a0:	mov	r8, #1
 3a4:	cmp	r6, #2
 3a8:	ble	3d0 <main+0x104>
 3ac:	ldr	r0, [r4, #4]
 3b0:	ldr	r1, [pc, #600]	; 610 <main+0x344>
 3b4:	bl	0 <strcmp>
 3b8:	cmp	r0, #0
 3bc:	bne	3d0 <main+0x104>
 3c0:	ldr	r0, [r4, #8]
 3c4:	bl	0 <coda_set_definition_path>
 3c8:	mov	r8, #3
 3cc:	b	410 <main+0x144>
 3d0:	ldr	r2, [pc, #572]	; 614 <main+0x348>
 3d4:	ldr	r0, [r4]
 3d8:	mov	r1, #0
 3dc:	bl	0 <coda_set_definition_path_conditional>
 3e0:	cmp	r0, #0
 3e4:	beq	410 <main+0x144>
 3e8:	bl	0 <coda_get_errno>
 3ec:	ldr	r0, [r0]
 3f0:	bl	0 <coda_errno_to_string>
 3f4:	mov	r2, r0
 3f8:	ldr	r3, [pc, #544]	; 620 <main+0x354>
 3fc:	ldr	r0, [r3]
 400:	ldr	r1, [pc, #588]	; 654 <main+0x388>
 404:	bl	0 <fprintf>
 408:	mov	r0, #1
 40c:	bl	0 <exit>
 410:	cmp	r8, r6
 414:	bge	534 <main+0x268>
 418:	ldr	r0, [r4, r8, lsl #2]
 41c:	ldr	r1, [pc, #512]	; 624 <main+0x358>
 420:	bl	0 <strcmp>
 424:	cmp	r0, #0
 428:	beq	528 <main+0x25c>
 42c:	ldr	r0, [r4, r8, lsl #2]
 430:	ldr	r1, [pc, #520]	; 640 <main+0x374>
 434:	bl	0 <strcmp>
 438:	cmp	r0, #0
 43c:	beq	528 <main+0x25c>
 440:	ldr	r0, [r4, r8, lsl #2]
 444:	ldr	r1, [pc, #444]	; 608 <main+0x33c>
 448:	bl	0 <strcmp>
 44c:	cmp	r0, #0
 450:	beq	470 <main+0x1a4>
 454:	ldr	r0, [r4, r8, lsl #2]
 458:	ldr	r1, [pc, #440]	; 618 <main+0x34c>
 45c:	bl	0 <strcmp>
 460:	cmp	r0, #0
 464:	moveq	r2, #1
 468:	movne	r2, #0
 46c:	b	474 <main+0x1a8>
 470:	mov	r2, #1
 474:	add	r1, r8, #1
 478:	cmp	r1, r6
 47c:	movlt	r0, #1
 480:	movge	r0, #0
 484:	mov	ip, #0
 488:	cmp	r2, #0
 48c:	movne	r2, r0
 490:	moveq	r2, ip
 494:	cmp	r2, #0
 498:	beq	4c0 <main+0x1f4>
 49c:	lsl	r3, r8, #2
 4a0:	add	r2, r4, r3
 4a4:	ldr	r2, [r2, #4]
 4a8:	ldrb	r0, [r2]
 4ac:	cmp	r0, #45	; 0x2d
 4b0:	beq	4c0 <main+0x1f4>
 4b4:	mov	r5, r2
 4b8:	mov	r8, r1
 4bc:	b	52c <main+0x260>
 4c0:	ldr	r0, [r4, r8, lsl #2]
 4c4:	ldr	r1, [pc, #368]	; 63c <main+0x370>
 4c8:	bl	0 <strcmp>
 4cc:	cmp	r0, #0
 4d0:	beq	518 <main+0x24c>
 4d4:	ldr	r0, [r4, r8, lsl #2]
 4d8:	ldr	r1, [pc, #340]	; 634 <main+0x368>
 4dc:	bl	0 <strcmp>
 4e0:	cmp	r0, #0
 4e4:	beq	518 <main+0x24c>
 4e8:	ldr	r1, [r4, r8, lsl #2]
 4ec:	ldrb	r1, [r1]
 4f0:	cmp	r1, #45	; 0x2d
 4f4:	bne	534 <main+0x268>
 4f8:	ldr	r1, [pc, #288]	; 620 <main+0x354>
 4fc:	ldr	r0, [r1]
 500:	ldr	r1, [pc, #316]	; 644 <main+0x378>
 504:	bl	0 <fprintf>
 508:	bl	0 <print_help>
 50c:	mov	r0, #1
 510:	bl	0 <exit>
 514:	b	52c <main+0x260>
 518:	ldr	r3, [pc, #280]	; 638 <main+0x36c>
 51c:	mov	r2, #1
 520:	str	r2, [r3]
 524:	b	52c <main+0x260>
 528:	mov	r7, #0
 52c:	add	r8, r8, #1
 530:	b	410 <main+0x144>
 534:	cmp	r8, r6
 538:	bne	558 <main+0x28c>
 53c:	ldr	ip, [pc, #220]	; 620 <main+0x354>
 540:	ldr	r0, [ip]
 544:	ldr	r1, [pc, #248]	; 644 <main+0x378>
 548:	bl	0 <fprintf>
 54c:	bl	0 <print_help>
 550:	mov	r0, #1
 554:	bl	0 <exit>
 558:	bl	0 <coda_init>
 55c:	cmp	r0, #0
 560:	beq	58c <main+0x2c0>
 564:	bl	0 <coda_get_errno>
 568:	ldr	r0, [r0]
 56c:	bl	0 <coda_errno_to_string>
 570:	mov	r2, r0
 574:	ldr	r0, [pc, #164]	; 620 <main+0x354>
 578:	ldr	r0, [r0]
 57c:	ldr	r1, [pc, #208]	; 654 <main+0x388>
 580:	bl	0 <fprintf>
 584:	mov	r0, #1
 588:	bl	0 <exit>
 58c:	mov	r0, r7
 590:	bl	0 <coda_set_option_perform_conversions>
 594:	sub	r1, r6, r8
 598:	add	r2, r4, r8, lsl #2
 59c:	ldr	r3, [pc, #136]	; 62c <main+0x360>
 5a0:	mov	r0, #0
 5a4:	str	r0, [sp]
 5a8:	mov	r0, r5
 5ac:	bl	0 <coda_match_filefilter>
 5b0:	cmp	r0, #0
 5b4:	beq	5e0 <main+0x314>
 5b8:	bl	0 <coda_get_errno>
 5bc:	ldr	r0, [r0]
 5c0:	bl	0 <coda_errno_to_string>
 5c4:	mov	r2, r0
 5c8:	ldr	r3, [pc, #80]	; 620 <main+0x354>
 5cc:	ldr	r0, [r3]
 5d0:	ldr	r1, [pc, #124]	; 654 <main+0x388>
 5d4:	bl	0 <fprintf>
 5d8:	mov	r0, #1
 5dc:	bl	0 <exit>
 5e0:	bl	0 <coda_done>
 5e4:	mov	r0, #0
 5e8:	ldr	r4, [sp, #16]
 5ec:	ldr	r5, [sp, #20]
 5f0:	ldr	r6, [sp, #24]
 5f4:	ldr	r7, [sp, #28]
 5f8:	ldr	r8, [sp, #32]
 5fc:	ldr	lr, [sp, #8]
 600:	add	sp, sp, #40	; 0x28
 604:	bx	lr
 608:	.word	0x0000015f
 60c:	.word	0x000004c8
 610:	.word	0x00000123
 614:	.word	0x00000099
 618:	.word	0x0000032e
 61c:	.word	0x000000cc
 620:	.word	0x00000000
 624:	.word	0x000000b3
 628:	.word	0x000003c5
 62c:	.word	0x00000000
 630:	.word	0x0000043a
 634:	.word	0x000001b9
 638:	.word	0x00000000
 63c:	.word	0x0000026e
 640:	.word	0x000000b6
 644:	.word	0x000002f4
 648:	.word	0x000003cc
 64c:	.word	0x00000271
 650:	.word	0x00000224
 654:	.word	0x00000353
