
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json_printer.dir/test_json_printer.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <test_print>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #104	; 0x68
       c:	movw	r0, #0
      10:	str	r0, [fp, #-8]
      14:	str	r0, [fp, #-12]
      18:	str	r0, [fp, #-16]
      1c:	str	r0, [fp, #-20]	; 0xffffffec
      20:	str	r0, [fp, #-24]	; 0xffffffe8
      24:	str	r0, [fp, #-28]	; 0xffffffe4
      28:	str	r0, [fp, #-32]	; 0xffffffe0
      2c:	str	r0, [sp, #16]
      30:	add	r0, sp, #24
      34:	str	r0, [sp, #20]
      38:	movw	r0, #0
      3c:	movt	r0, #0
      40:	ldr	r0, [r0]
      44:	movw	r1, #0
      48:	movt	r1, #0
      4c:	bl	0 <fopen>
      50:	str	r0, [sp, #16]
      54:	ldr	r0, [sp, #16]
      58:	movw	r1, #0
      5c:	cmp	r0, r1
      60:	bne	94 <test_print+0x94>
      64:	movw	r0, #0
      68:	movt	r0, #0
      6c:	ldr	r0, [r0]
      70:	movw	r1, #0
      74:	movt	r1, #0
      78:	ldr	r2, [r1]
      7c:	movw	r1, #0
      80:	movt	r1, #0
      84:	bl	0 <fprintf>
      88:	mvn	r1, #0
      8c:	str	r1, [fp, #-4]
      90:	b	35c <test_print+0x35c>
      94:	ldr	r0, [sp, #20]
      98:	ldr	r1, [sp, #16]
      9c:	bl	0 <flatcc_json_printer_init>
      a0:	ldr	r1, [sp, #20]
      a4:	str	r0, [sp, #12]
      a8:	mov	r0, r1
      ac:	bl	368 <flatcc_json_printer_set_nonstrict>
      b0:	movw	r0, #0
      b4:	movt	r0, #0
      b8:	ldr	r0, [r0]
      bc:	movw	r1, #0
      c0:	cmp	r0, r1
      c4:	beq	108 <test_print+0x108>
      c8:	movw	r0, #0
      cc:	movt	r0, #0
      d0:	ldr	r0, [r0]
      d4:	movw	r1, #0
      d8:	movt	r1, #0
      dc:	bl	0 <strcmp>
      e0:	cmp	r0, #0
      e4:	beq	108 <test_print+0x108>
      e8:	movw	r0, #0
      ec:	movt	r0, #0
      f0:	ldr	r0, [r0]
      f4:	movw	r1, #10240	; 0x2800
      f8:	sub	r2, fp, #24
      fc:	bl	3a8 <readfile>
     100:	str	r0, [fp, #-12]
     104:	b	11c <test_print+0x11c>
     108:	movw	r0, #0
     10c:	movt	r0, #0
     110:	str	r0, [fp, #-12]
     114:	movw	r0, #288	; 0x120
     118:	str	r0, [fp, #-24]	; 0xffffffe8
     11c:	ldr	r0, [fp, #-12]
     120:	movw	r1, #0
     124:	cmp	r0, r1
     128:	bne	154 <test_print+0x154>
     12c:	movw	r0, #0
     130:	movt	r0, #0
     134:	ldr	r0, [r0]
     138:	movw	r1, #0
     13c:	movt	r1, #0
     140:	ldr	r2, [r1]
     144:	movw	r1, #0
     148:	movt	r1, #0
     14c:	bl	0 <fprintf>
     150:	b	350 <test_print+0x350>
     154:	movw	r0, #0
     158:	movt	r0, #0
     15c:	ldr	r0, [r0]
     160:	movw	r1, #10240	; 0x2800
     164:	sub	r2, fp, #28
     168:	bl	3a8 <readfile>
     16c:	str	r0, [fp, #-16]
     170:	ldr	r0, [fp, #-16]
     174:	movw	r1, #0
     178:	cmp	r0, r1
     17c:	bne	1a8 <test_print+0x1a8>
     180:	movw	r0, #0
     184:	movt	r0, #0
     188:	ldr	r0, [r0]
     18c:	movw	r1, #0
     190:	movt	r1, #0
     194:	ldr	r2, [r1]
     198:	movw	r1, #0
     19c:	movt	r1, #0
     1a0:	bl	0 <fprintf>
     1a4:	b	350 <test_print+0x350>
     1a8:	ldr	r0, [sp, #20]
     1ac:	ldr	r1, [fp, #-12]
     1b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     1b4:	movw	r3, #0
     1b8:	movt	r3, #0
     1bc:	bl	58c <MyGame_Example_Monster_print_json_as_root>
     1c0:	ldr	r1, [sp, #20]
     1c4:	str	r0, [sp, #8]
     1c8:	mov	r0, r1
     1cc:	bl	5d0 <flatcc_json_printer_flush>
     1d0:	ldr	r1, [sp, #20]
     1d4:	str	r0, [sp, #4]
     1d8:	mov	r0, r1
     1dc:	bl	610 <flatcc_json_printer_get_error>
     1e0:	cmp	r0, #0
     1e4:	beq	1f4 <test_print+0x1f4>
     1e8:	movw	r0, #0
     1ec:	movt	r0, #0
     1f0:	bl	0 <printf>
     1f4:	ldr	r0, [sp, #16]
     1f8:	bl	0 <fclose>
     1fc:	movw	r1, #0
     200:	str	r1, [sp, #16]
     204:	movw	r1, #0
     208:	movt	r1, #0
     20c:	ldr	r1, [r1]
     210:	str	r0, [sp]
     214:	mov	r0, r1
     218:	movw	r1, #10240	; 0x2800
     21c:	sub	r2, fp, #32
     220:	bl	3a8 <readfile>
     224:	str	r0, [fp, #-20]	; 0xffffffec
     228:	ldr	r0, [fp, #-20]	; 0xffffffec
     22c:	movw	r1, #0
     230:	cmp	r0, r1
     234:	bne	260 <test_print+0x260>
     238:	movw	r0, #0
     23c:	movt	r0, #0
     240:	ldr	r0, [r0]
     244:	movw	r1, #0
     248:	movt	r1, #0
     24c:	ldr	r2, [r1]
     250:	movw	r1, #0
     254:	movt	r1, #0
     258:	bl	0 <fprintf>
     25c:	b	350 <test_print+0x350>
     260:	ldr	r0, [fp, #-32]	; 0xffffffe0
     264:	ldr	r1, [fp, #-28]	; 0xffffffe4
     268:	cmp	r0, r1
     26c:	bne	288 <test_print+0x288>
     270:	ldr	r0, [fp, #-20]	; 0xffffffec
     274:	ldr	r1, [fp, #-16]
     278:	ldr	r2, [fp, #-32]	; 0xffffffe0
     27c:	bl	0 <memcmp>
     280:	cmp	r0, #0
     284:	beq	2a4 <test_print+0x2a4>
     288:	movw	r0, #0
     28c:	movt	r0, #0
     290:	ldr	r0, [r0]
     294:	movw	r1, #0
     298:	movt	r1, #0
     29c:	bl	0 <fprintf>
     2a0:	b	350 <test_print+0x350>
     2a4:	movw	r0, #0
     2a8:	movt	r0, #0
     2ac:	ldr	r0, [r0]
     2b0:	movw	r1, #0
     2b4:	movt	r1, #0
     2b8:	bl	0 <fprintf>
     2bc:	ldr	r0, [sp, #20]
     2c0:	bl	0 <flatcc_json_printer_clear>
     2c4:	movw	r0, #0
     2c8:	movt	r0, #0
     2cc:	ldr	r0, [r0]
     2d0:	movw	r1, #0
     2d4:	cmp	r0, r1
     2d8:	bne	2e4 <test_print+0x2e4>
     2dc:	movw	r0, #0
     2e0:	str	r0, [fp, #-12]
     2e4:	ldr	r0, [fp, #-12]
     2e8:	movw	r1, #0
     2ec:	cmp	r0, r1
     2f0:	beq	2fc <test_print+0x2fc>
     2f4:	ldr	r0, [fp, #-12]
     2f8:	bl	0 <free>
     2fc:	ldr	r0, [fp, #-16]
     300:	movw	r1, #0
     304:	cmp	r0, r1
     308:	beq	314 <test_print+0x314>
     30c:	ldr	r0, [fp, #-16]
     310:	bl	0 <free>
     314:	ldr	r0, [fp, #-20]	; 0xffffffec
     318:	movw	r1, #0
     31c:	cmp	r0, r1
     320:	beq	32c <test_print+0x32c>
     324:	ldr	r0, [fp, #-20]	; 0xffffffec
     328:	bl	0 <free>
     32c:	ldr	r0, [sp, #16]
     330:	movw	r1, #0
     334:	cmp	r0, r1
     338:	beq	344 <test_print+0x344>
     33c:	ldr	r0, [sp, #16]
     340:	bl	0 <fclose>
     344:	ldr	r0, [fp, #-8]
     348:	str	r0, [fp, #-4]
     34c:	b	35c <test_print+0x35c>
     350:	mvn	r0, #0
     354:	str	r0, [fp, #-8]
     358:	b	2bc <test_print+0x2bc>
     35c:	ldr	r0, [fp, #-4]
     360:	mov	sp, fp
     364:	pop	{fp, pc}

00000368 <flatcc_json_printer_set_nonstrict>:
     368:	push	{fp, lr}
     36c:	mov	fp, sp
     370:	sub	sp, sp, #8
     374:	str	r0, [sp, #4]
     378:	ldr	r0, [sp, #4]
     37c:	movw	r1, #2
     380:	and	r1, r1, #255	; 0xff
     384:	bl	6f0 <flatcc_json_printer_set_indent>
     388:	ldr	r0, [sp, #4]
     38c:	movw	r1, #1
     390:	bl	710 <flatcc_json_printer_set_unquoted>
     394:	ldr	r0, [sp, #4]
     398:	movw	r1, #0
     39c:	bl	74c <flatcc_json_printer_set_noenum>
     3a0:	mov	sp, fp
     3a4:	pop	{fp, pc}

000003a8 <readfile>:
     3a8:	push	{fp, lr}
     3ac:	mov	fp, sp
     3b0:	sub	sp, sp, #56	; 0x38
     3b4:	str	r0, [fp, #-8]
     3b8:	str	r1, [fp, #-12]
     3bc:	str	r2, [fp, #-16]
     3c0:	ldr	r0, [fp, #-16]
     3c4:	movw	r1, #0
     3c8:	cmp	r0, r1
     3cc:	beq	3dc <readfile+0x34>
     3d0:	ldr	r0, [fp, #-16]
     3d4:	str	r0, [sp, #12]
     3d8:	b	3e8 <readfile+0x40>
     3dc:	add	r0, sp, #20
     3e0:	str	r0, [sp, #12]
     3e4:	b	3e8 <readfile+0x40>
     3e8:	ldr	r0, [sp, #12]
     3ec:	str	r0, [fp, #-16]
     3f0:	ldr	r0, [fp, #-8]
     3f4:	movw	r1, #0
     3f8:	movt	r1, #0
     3fc:	bl	0 <fopen>
     400:	str	r0, [fp, #-20]	; 0xffffffec
     404:	movw	r0, #0
     408:	str	r0, [fp, #-24]	; 0xffffffe8
     40c:	str	r0, [sp, #16]
     410:	ldr	r1, [fp, #-20]	; 0xffffffec
     414:	cmp	r1, r0
     418:	bne	420 <readfile+0x78>
     41c:	b	53c <readfile+0x194>
     420:	ldr	r0, [fp, #-20]	; 0xffffffec
     424:	movw	r1, #0
     428:	movw	r2, #2
     42c:	bl	0 <fseek>
     430:	ldr	r1, [fp, #-20]	; 0xffffffec
     434:	str	r0, [sp, #8]
     438:	mov	r0, r1
     43c:	bl	0 <ftell>
     440:	str	r0, [fp, #-24]	; 0xffffffe8
     444:	ldr	r0, [fp, #-24]	; 0xffffffe8
     448:	ldr	r1, [fp, #-16]
     44c:	str	r0, [r1]
     450:	ldr	r0, [fp, #-12]
     454:	cmp	r0, #0
     458:	bls	470 <readfile+0xc8>
     45c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     460:	ldr	r1, [fp, #-12]
     464:	cmp	r0, r1
     468:	bls	470 <readfile+0xc8>
     46c:	b	53c <readfile+0x194>
     470:	ldr	r0, [fp, #-20]	; 0xffffffec
     474:	bl	0 <rewind>
     478:	ldr	r0, [fp, #-24]	; 0xffffffe8
     47c:	cmp	r0, #0
     480:	beq	490 <readfile+0xe8>
     484:	ldr	r0, [fp, #-24]	; 0xffffffe8
     488:	str	r0, [sp, #4]
     48c:	b	49c <readfile+0xf4>
     490:	movw	r0, #1
     494:	str	r0, [sp, #4]
     498:	b	49c <readfile+0xf4>
     49c:	ldr	r0, [sp, #4]
     4a0:	bl	0 <malloc>
     4a4:	str	r0, [sp, #16]
     4a8:	ldr	r0, [sp, #16]
     4ac:	movw	r1, #0
     4b0:	cmp	r0, r1
     4b4:	bne	4bc <readfile+0x114>
     4b8:	b	53c <readfile+0x194>
     4bc:	movw	r0, #0
     4c0:	str	r0, [sp, #28]
     4c4:	ldr	r0, [sp, #16]
     4c8:	ldr	r1, [sp, #28]
     4cc:	add	r0, r0, r1
     4d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
     4d4:	ldr	r2, [sp, #28]
     4d8:	sub	r2, r1, r2
     4dc:	ldr	r3, [fp, #-20]	; 0xffffffec
     4e0:	movw	r1, #1
     4e4:	bl	0 <fread>
     4e8:	str	r0, [sp, #24]
     4ec:	cmp	r0, #0
     4f0:	beq	508 <readfile+0x160>
     4f4:	ldr	r0, [sp, #24]
     4f8:	ldr	r1, [sp, #28]
     4fc:	add	r0, r1, r0
     500:	str	r0, [sp, #28]
     504:	b	4c4 <readfile+0x11c>
     508:	ldr	r0, [sp, #28]
     50c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     510:	cmp	r0, r1
     514:	beq	51c <readfile+0x174>
     518:	b	53c <readfile+0x194>
     51c:	ldr	r0, [fp, #-20]	; 0xffffffec
     520:	bl	0 <fclose>
     524:	ldr	r1, [fp, #-24]	; 0xffffffe8
     528:	ldr	r2, [fp, #-16]
     52c:	str	r1, [r2]
     530:	ldr	r1, [sp, #16]
     534:	str	r1, [fp, #-4]
     538:	b	580 <readfile+0x1d8>
     53c:	ldr	r0, [fp, #-20]	; 0xffffffec
     540:	movw	r1, #0
     544:	cmp	r0, r1
     548:	beq	554 <readfile+0x1ac>
     54c:	ldr	r0, [fp, #-20]	; 0xffffffec
     550:	bl	0 <fclose>
     554:	ldr	r0, [sp, #16]
     558:	movw	r1, #0
     55c:	cmp	r0, r1
     560:	beq	56c <readfile+0x1c4>
     564:	ldr	r0, [sp, #16]
     568:	bl	0 <free>
     56c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     570:	ldr	r1, [fp, #-16]
     574:	str	r0, [r1]
     578:	movw	r0, #0
     57c:	str	r0, [fp, #-4]
     580:	ldr	r0, [fp, #-4]
     584:	mov	sp, fp
     588:	pop	{fp, pc}

0000058c <MyGame_Example_Monster_print_json_as_root>:
     58c:	push	{fp, lr}
     590:	mov	fp, sp
     594:	sub	sp, sp, #24
     598:	str	r0, [fp, #-4]
     59c:	str	r1, [fp, #-8]
     5a0:	str	r2, [sp, #12]
     5a4:	str	r3, [sp, #8]
     5a8:	ldr	r0, [fp, #-4]
     5ac:	ldr	r1, [fp, #-8]
     5b0:	ldr	r2, [sp, #12]
     5b4:	ldr	r3, [sp, #8]
     5b8:	movw	ip, #0
     5bc:	movt	ip, #0
     5c0:	str	ip, [sp]
     5c4:	bl	0 <flatcc_json_printer_table_as_root>
     5c8:	mov	sp, fp
     5cc:	pop	{fp, pc}

000005d0 <flatcc_json_printer_flush>:
     5d0:	push	{fp, lr}
     5d4:	mov	fp, sp
     5d8:	sub	sp, sp, #8
     5dc:	str	r0, [sp, #4]
     5e0:	ldr	r0, [sp, #4]
     5e4:	ldr	r0, [r0, #44]	; 0x2c
     5e8:	ldr	r1, [sp, #4]
     5ec:	str	r0, [sp]
     5f0:	mov	r0, r1
     5f4:	movw	r1, #1
     5f8:	ldr	r2, [sp]
     5fc:	blx	r2
     600:	ldr	r0, [sp, #4]
     604:	bl	1c54 <flatcc_json_printer_total>
     608:	mov	sp, fp
     60c:	pop	{fp, pc}

00000610 <flatcc_json_printer_get_error>:
     610:	sub	sp, sp, #4
     614:	str	r0, [sp]
     618:	ldr	r0, [sp]
     61c:	ldr	r0, [r0, #36]	; 0x24
     620:	add	sp, sp, #4
     624:	bx	lr

00000628 <main>:
     628:	push	{fp, lr}
     62c:	mov	fp, sp
     630:	sub	sp, sp, #16
     634:	movw	r2, #0
     638:	str	r2, [fp, #-4]
     63c:	str	r0, [sp, #8]
     640:	str	r1, [sp, #4]
     644:	movw	r0, #0
     648:	movt	r0, #0
     64c:	ldr	r0, [r0]
     650:	movw	r1, #0
     654:	movt	r1, #0
     658:	bl	0 <fprintf>
     65c:	ldr	r1, [sp, #8]
     660:	cmp	r1, #1
     664:	beq	69c <main+0x74>
     668:	ldr	r0, [sp, #8]
     66c:	cmp	r0, #4
     670:	beq	69c <main+0x74>
     674:	movw	r0, #0
     678:	movt	r0, #0
     67c:	ldr	r0, [r0]
     680:	movw	r1, #0
     684:	movt	r1, #0
     688:	bl	0 <fprintf>
     68c:	movw	r1, #1
     690:	str	r0, [sp]
     694:	mov	r0, r1
     698:	bl	0 <exit>
     69c:	ldr	r0, [sp, #8]
     6a0:	cmp	r0, #4
     6a4:	bne	6e4 <main+0xbc>
     6a8:	ldr	r0, [sp, #4]
     6ac:	ldr	r0, [r0, #4]
     6b0:	movw	r1, #0
     6b4:	movt	r1, #0
     6b8:	str	r0, [r1]
     6bc:	ldr	r0, [sp, #4]
     6c0:	ldr	r0, [r0, #8]
     6c4:	movw	r1, #0
     6c8:	movt	r1, #0
     6cc:	str	r0, [r1]
     6d0:	ldr	r0, [sp, #4]
     6d4:	ldr	r0, [r0, #12]
     6d8:	movw	r1, #0
     6dc:	movt	r1, #0
     6e0:	str	r0, [r1]
     6e4:	bl	0 <test_print>
     6e8:	mov	sp, fp
     6ec:	pop	{fp, pc}

000006f0 <flatcc_json_printer_set_indent>:
     6f0:	sub	sp, sp, #8
     6f4:	str	r0, [sp, #4]
     6f8:	strb	r1, [sp, #3]
     6fc:	ldrb	r0, [sp, #3]
     700:	ldr	r1, [sp, #4]
     704:	strb	r0, [r1, #25]
     708:	add	sp, sp, #8
     70c:	bx	lr

00000710 <flatcc_json_printer_set_unquoted>:
     710:	sub	sp, sp, #8
     714:	str	r0, [sp, #4]
     718:	str	r1, [sp]
     71c:	ldr	r0, [sp]
     720:	cmp	r0, #0
     724:	movw	r0, #0
     728:	movne	r0, #1
     72c:	mvn	r1, #0
     730:	eor	r0, r0, r1
     734:	eor	r0, r0, r1
     738:	and	r0, r0, #1
     73c:	ldr	r1, [sp, #4]
     740:	strb	r0, [r1, #26]
     744:	add	sp, sp, #8
     748:	bx	lr

0000074c <flatcc_json_printer_set_noenum>:
     74c:	sub	sp, sp, #8
     750:	str	r0, [sp, #4]
     754:	str	r1, [sp]
     758:	ldr	r0, [sp]
     75c:	cmp	r0, #0
     760:	movw	r0, #0
     764:	movne	r0, #1
     768:	mvn	r1, #0
     76c:	eor	r0, r0, r1
     770:	eor	r0, r0, r1
     774:	and	r0, r0, #1
     778:	ldr	r1, [sp, #4]
     77c:	strb	r0, [r1, #27]
     780:	add	sp, sp, #8
     784:	bx	lr

00000788 <MyGame_Example_Monster_print_json_table>:
     788:	push	{fp, lr}
     78c:	mov	fp, sp
     790:	sub	sp, sp, #32
     794:	str	r0, [fp, #-4]
     798:	str	r1, [fp, #-8]
     79c:	ldr	r0, [fp, #-4]
     7a0:	ldr	r1, [fp, #-8]
     7a4:	movw	r2, #0
     7a8:	movw	r3, #0
     7ac:	movt	r3, #0
     7b0:	movw	ip, #3
     7b4:	str	ip, [sp]
     7b8:	movw	ip, #0
     7bc:	movt	ip, #0
     7c0:	str	ip, [sp, #4]
     7c4:	bl	0 <flatcc_json_printer_struct_field>
     7c8:	ldr	r0, [fp, #-4]
     7cc:	ldr	r1, [fp, #-8]
     7d0:	movw	r2, #1
     7d4:	movw	r3, #0
     7d8:	movt	r3, #0
     7dc:	movw	ip, #4
     7e0:	str	ip, [sp]
     7e4:	movw	ip, #150	; 0x96
     7e8:	sxth	ip, ip
     7ec:	str	ip, [sp, #4]
     7f0:	bl	0 <flatcc_json_printer_int16_field>
     7f4:	ldr	r0, [fp, #-4]
     7f8:	ldr	r1, [fp, #-8]
     7fc:	movw	r2, #2
     800:	str	r2, [fp, #-12]
     804:	movw	r3, #0
     808:	movt	r3, #0
     80c:	ldr	ip, [fp, #-12]
     810:	str	ip, [sp]
     814:	movw	lr, #100	; 0x64
     818:	sxth	lr, lr
     81c:	str	lr, [sp, #4]
     820:	bl	0 <flatcc_json_printer_int16_field>
     824:	ldr	r0, [fp, #-4]
     828:	ldr	r1, [fp, #-8]
     82c:	movw	r2, #3
     830:	movw	r3, #0
     834:	movt	r3, #0
     838:	movw	ip, #4
     83c:	str	ip, [sp]
     840:	bl	0 <flatcc_json_printer_string_field>
     844:	ldr	r0, [fp, #-4]
     848:	ldr	r1, [fp, #-8]
     84c:	movw	r2, #5
     850:	movw	r3, #0
     854:	movt	r3, #0
     858:	movw	ip, #9
     85c:	str	ip, [sp]
     860:	bl	0 <flatcc_json_printer_uint8_vector_field>
     864:	ldr	r0, [fp, #-4]
     868:	ldr	r1, [fp, #-8]
     86c:	movw	r2, #6
     870:	movw	r3, #0
     874:	movt	r3, #0
     878:	movw	ip, #5
     87c:	str	ip, [sp]
     880:	movw	ip, #8
     884:	sxtb	ip, ip
     888:	str	ip, [sp, #4]
     88c:	movw	ip, #0
     890:	movt	ip, #0
     894:	str	ip, [sp, #8]
     898:	bl	0 <flatcc_json_printer_int8_enum_field>
     89c:	ldr	r0, [fp, #-4]
     8a0:	ldr	r1, [fp, #-8]
     8a4:	movw	r2, #8
     8a8:	movw	r3, #0
     8ac:	movt	r3, #0
     8b0:	movw	ip, #4
     8b4:	str	ip, [sp]
     8b8:	movw	ip, #0
     8bc:	movt	ip, #0
     8c0:	str	ip, [sp, #4]
     8c4:	movw	ip, #0
     8c8:	movt	ip, #0
     8cc:	str	ip, [sp, #8]
     8d0:	bl	0 <flatcc_json_printer_union_field>
     8d4:	ldr	r0, [fp, #-4]
     8d8:	ldr	r1, [fp, #-8]
     8dc:	movw	r2, #9
     8e0:	movw	r3, #0
     8e4:	movt	r3, #0
     8e8:	movw	ip, #5
     8ec:	str	ip, [sp]
     8f0:	movw	ip, #4
     8f4:	str	ip, [sp, #4]
     8f8:	movw	ip, #0
     8fc:	movt	ip, #0
     900:	str	ip, [sp, #8]
     904:	bl	0 <flatcc_json_printer_struct_vector_field>
     908:	ldr	r0, [fp, #-4]
     90c:	ldr	r1, [fp, #-8]
     910:	movw	r2, #10
     914:	movw	r3, #0
     918:	movt	r3, #0
     91c:	movw	ip, #17
     920:	str	ip, [sp]
     924:	bl	0 <flatcc_json_printer_string_vector_field>
     928:	ldr	r0, [fp, #-4]
     92c:	ldr	r1, [fp, #-8]
     930:	movw	r2, #11
     934:	movw	r3, #0
     938:	movt	r3, #0
     93c:	movw	ip, #17
     940:	str	ip, [sp]
     944:	movw	ip, #0
     948:	movt	ip, #0
     94c:	str	ip, [sp, #4]
     950:	bl	0 <flatcc_json_printer_table_vector_field>
     954:	ldr	r0, [fp, #-4]
     958:	ldr	r1, [fp, #-8]
     95c:	movw	r2, #12
     960:	movw	r3, #0
     964:	movt	r3, #0
     968:	movw	ip, #5
     96c:	str	ip, [sp]
     970:	movw	ip, #0
     974:	movt	ip, #0
     978:	str	ip, [sp, #4]
     97c:	bl	0 <flatcc_json_printer_table_field>
     980:	ldr	r0, [fp, #-4]
     984:	ldr	r1, [fp, #-8]
     988:	movw	r2, #13
     98c:	movw	r3, #0
     990:	movt	r3, #0
     994:	movw	ip, #20
     998:	str	ip, [sp]
     99c:	movw	ip, #0
     9a0:	str	ip, [sp, #4]
     9a4:	movw	ip, #0
     9a8:	movt	ip, #0
     9ac:	str	ip, [sp, #8]
     9b0:	bl	0 <flatcc_json_printer_table_as_nested_root>
     9b4:	ldr	r0, [fp, #-4]
     9b8:	ldr	r1, [fp, #-8]
     9bc:	movw	r2, #14
     9c0:	movw	r3, #0
     9c4:	movt	r3, #0
     9c8:	movw	ip, #9
     9cc:	str	ip, [sp]
     9d0:	movw	ip, #0
     9d4:	movt	ip, #0
     9d8:	str	ip, [sp, #4]
     9dc:	bl	0 <flatcc_json_printer_table_field>
     9e0:	ldr	r0, [fp, #-4]
     9e4:	ldr	r1, [fp, #-8]
     9e8:	movw	r2, #15
     9ec:	movw	r3, #0
     9f0:	movt	r3, #0
     9f4:	movw	ip, #8
     9f8:	str	ip, [sp]
     9fc:	movw	ip, #1
     a00:	and	ip, ip, #255	; 0xff
     a04:	str	ip, [sp, #4]
     a08:	bl	0 <flatcc_json_printer_bool_field>
     a0c:	ldr	r0, [fp, #-4]
     a10:	ldr	r1, [fp, #-8]
     a14:	movw	r2, #16
     a18:	str	r2, [sp, #16]
     a1c:	movw	r3, #0
     a20:	movt	r3, #0
     a24:	ldr	ip, [sp, #16]
     a28:	str	ip, [sp]
     a2c:	movw	lr, #0
     a30:	str	lr, [sp, #4]
     a34:	bl	0 <flatcc_json_printer_int32_field>
     a38:	ldr	r0, [fp, #-4]
     a3c:	ldr	r1, [fp, #-8]
     a40:	movw	r2, #17
     a44:	movw	r3, #0
     a48:	movt	r3, #0
     a4c:	movw	ip, #16
     a50:	str	ip, [sp]
     a54:	movw	ip, #0
     a58:	str	ip, [sp, #4]
     a5c:	bl	0 <flatcc_json_printer_uint32_field>
     a60:	ldr	r0, [fp, #-4]
     a64:	ldr	r1, [fp, #-8]
     a68:	mov	r2, sp
     a6c:	mov	r3, #0
     a70:	str	r3, [r2, #12]
     a74:	str	r3, [r2, #8]
     a78:	mov	r3, #16
     a7c:	str	r3, [r2]
     a80:	movw	r3, #0
     a84:	movt	r3, #0
     a88:	mov	r2, #18
     a8c:	bl	0 <flatcc_json_printer_int64_field>
     a90:	ldr	r0, [fp, #-4]
     a94:	ldr	r1, [fp, #-8]
     a98:	mov	r2, sp
     a9c:	mov	r3, #0
     aa0:	str	r3, [r2, #12]
     aa4:	str	r3, [r2, #8]
     aa8:	mov	r3, #16
     aac:	str	r3, [r2]
     ab0:	movw	r3, #0
     ab4:	movt	r3, #0
     ab8:	mov	r2, #19
     abc:	bl	0 <flatcc_json_printer_uint64_field>
     ac0:	ldr	r0, [fp, #-4]
     ac4:	ldr	r1, [fp, #-8]
     ac8:	movw	r2, #20
     acc:	movw	r3, #0
     ad0:	movt	r3, #0
     ad4:	movw	ip, #17
     ad8:	str	ip, [sp]
     adc:	movw	ip, #0
     ae0:	str	ip, [sp, #4]
     ae4:	bl	0 <flatcc_json_printer_int32_field>
     ae8:	ldr	r0, [fp, #-4]
     aec:	ldr	r1, [fp, #-8]
     af0:	movw	r2, #21
     af4:	movw	r3, #0
     af8:	movt	r3, #0
     afc:	movw	ip, #17
     b00:	str	ip, [sp]
     b04:	movw	ip, #0
     b08:	str	ip, [sp, #4]
     b0c:	bl	0 <flatcc_json_printer_uint32_field>
     b10:	ldr	r0, [fp, #-4]
     b14:	ldr	r1, [fp, #-8]
     b18:	mov	r2, sp
     b1c:	mov	r3, #0
     b20:	str	r3, [r2, #12]
     b24:	str	r3, [r2, #8]
     b28:	mov	r3, #17
     b2c:	str	r3, [r2]
     b30:	movw	r3, #0
     b34:	movt	r3, #0
     b38:	mov	r2, #22
     b3c:	bl	0 <flatcc_json_printer_int64_field>
     b40:	ldr	r0, [fp, #-4]
     b44:	ldr	r1, [fp, #-8]
     b48:	mov	r2, sp
     b4c:	mov	r3, #0
     b50:	str	r3, [r2, #12]
     b54:	str	r3, [r2, #8]
     b58:	mov	r3, #17
     b5c:	str	r3, [r2]
     b60:	movw	r3, #0
     b64:	movt	r3, #0
     b68:	mov	r2, #23
     b6c:	bl	0 <flatcc_json_printer_uint64_field>
     b70:	ldr	r0, [fp, #-4]
     b74:	ldr	r1, [fp, #-8]
     b78:	movw	r2, #24
     b7c:	movw	r3, #0
     b80:	movt	r3, #0
     b84:	movw	ip, #16
     b88:	str	ip, [sp]
     b8c:	bl	0 <flatcc_json_printer_bool_vector_field>
     b90:	vldr	s0, [pc, #432]	; d48 <MyGame_Example_Monster_print_json_table+0x5c0>
     b94:	ldr	r0, [fp, #-4]
     b98:	ldr	r1, [fp, #-8]
     b9c:	movw	r2, #25
     ba0:	movw	r3, #0
     ba4:	movt	r3, #0
     ba8:	movw	ip, #5
     bac:	str	ip, [sp]
     bb0:	bl	0 <flatcc_json_printer_float_field>
     bb4:	ldr	r0, [fp, #-4]
     bb8:	ldr	r1, [fp, #-8]
     bbc:	movw	r2, #26
     bc0:	movw	r3, #0
     bc4:	movt	r3, #0
     bc8:	movw	ip, #6
     bcc:	str	ip, [sp]
     bd0:	vmov.f32	s0, #8	; 0x40400000  3.0
     bd4:	bl	0 <flatcc_json_printer_float_field>
     bd8:	vldr	s0, [pc, #356]	; d44 <MyGame_Example_Monster_print_json_table+0x5bc>
     bdc:	ldr	r0, [fp, #-4]
     be0:	ldr	r1, [fp, #-8]
     be4:	movw	r2, #27
     be8:	movw	r3, #0
     bec:	movt	r3, #0
     bf0:	movw	ip, #6
     bf4:	str	ip, [sp]
     bf8:	bl	0 <flatcc_json_printer_float_field>
     bfc:	ldr	r0, [fp, #-4]
     c00:	ldr	r1, [fp, #-8]
     c04:	movw	r2, #28
     c08:	movw	r3, #0
     c0c:	movt	r3, #0
     c10:	movw	ip, #18
     c14:	str	ip, [sp]
     c18:	bl	0 <flatcc_json_printer_string_vector_field>
     c1c:	ldr	r0, [fp, #-4]
     c20:	ldr	r1, [fp, #-8]
     c24:	movw	r2, #29
     c28:	movw	r3, #0
     c2c:	movt	r3, #0
     c30:	movw	ip, #23
     c34:	str	ip, [sp]
     c38:	movw	ip, #8
     c3c:	str	ip, [sp, #4]
     c40:	movw	ip, #0
     c44:	movt	ip, #0
     c48:	str	ip, [sp, #8]
     c4c:	bl	0 <flatcc_json_printer_struct_vector_field>
     c50:	ldr	r0, [fp, #-4]
     c54:	ldr	r1, [fp, #-8]
     c58:	movw	r2, #30
     c5c:	movw	r3, #0
     c60:	movt	r3, #0
     c64:	movw	ip, #4
     c68:	str	ip, [sp]
     c6c:	bl	0 <flatcc_json_printer_uint8_vector_field>
     c70:	ldr	r0, [fp, #-4]
     c74:	ldr	r1, [fp, #-8]
     c78:	movw	r2, #31
     c7c:	movw	r3, #0
     c80:	movt	r3, #0
     c84:	movw	ip, #5
     c88:	str	ip, [sp]
     c8c:	movw	ip, #4
     c90:	str	ip, [sp, #4]
     c94:	movw	ip, #0
     c98:	movt	ip, #0
     c9c:	str	ip, [sp, #8]
     ca0:	bl	0 <flatcc_json_printer_struct_vector_field>
     ca4:	ldr	r0, [fp, #-4]
     ca8:	ldr	r1, [fp, #-8]
     cac:	movw	r2, #32
     cb0:	movw	r3, #0
     cb4:	movt	r3, #0
     cb8:	movw	ip, #15
     cbc:	str	ip, [sp]
     cc0:	bl	0 <flatcc_json_printer_int64_vector_field>
     cc4:	ldr	r0, [fp, #-4]
     cc8:	ldr	r1, [fp, #-8]
     ccc:	movw	r2, #33	; 0x21
     cd0:	movw	r3, #0
     cd4:	movt	r3, #0
     cd8:	movw	ip, #17
     cdc:	str	ip, [sp]
     ce0:	bl	0 <flatcc_json_printer_double_vector_field>
     ce4:	ldr	r0, [fp, #-4]
     ce8:	ldr	r1, [fp, #-8]
     cec:	movw	r2, #34	; 0x22
     cf0:	movw	r3, #0
     cf4:	movt	r3, #0
     cf8:	movw	ip, #21
     cfc:	str	ip, [sp]
     d00:	movw	ip, #0
     d04:	movt	ip, #0
     d08:	str	ip, [sp, #4]
     d0c:	bl	0 <flatcc_json_printer_table_field>
     d10:	ldr	r0, [fp, #-4]
     d14:	ldr	r1, [fp, #-8]
     d18:	movw	r2, #35	; 0x23
     d1c:	movw	r3, #0
     d20:	movt	r3, #0
     d24:	movw	ip, #10
     d28:	str	ip, [sp]
     d2c:	movw	ip, #0
     d30:	movt	ip, #0
     d34:	str	ip, [sp, #4]
     d38:	bl	0 <flatcc_json_printer_table_field>
     d3c:	mov	sp, fp
     d40:	pop	{fp, pc}
     d44:	.word	0x00000000
     d48:	.word	0x489965e0

00000d4c <MyGame_Example_Vec3_print_json_struct>:
     d4c:	push	{fp, lr}
     d50:	mov	fp, sp
     d54:	sub	sp, sp, #32
     d58:	str	r0, [fp, #-4]
     d5c:	str	r1, [fp, #-8]
     d60:	ldr	r0, [fp, #-4]
     d64:	ldr	r2, [fp, #-8]
     d68:	movw	r1, #0
     d6c:	str	r1, [fp, #-12]
     d70:	ldr	r3, [fp, #-12]
     d74:	movw	ip, #0
     d78:	movt	ip, #0
     d7c:	str	ip, [sp]
     d80:	movw	ip, #1
     d84:	str	ip, [sp, #4]
     d88:	bl	0 <flatcc_json_printer_float_struct_field>
     d8c:	ldr	r0, [fp, #-4]
     d90:	ldr	r2, [fp, #-8]
     d94:	movw	r1, #1
     d98:	str	r1, [sp, #16]
     d9c:	movw	r3, #4
     da0:	movw	ip, #0
     da4:	movt	ip, #0
     da8:	str	ip, [sp]
     dac:	ldr	ip, [sp, #16]
     db0:	str	ip, [sp, #4]
     db4:	bl	0 <flatcc_json_printer_float_struct_field>
     db8:	ldr	r0, [fp, #-4]
     dbc:	ldr	r2, [fp, #-8]
     dc0:	movw	r1, #2
     dc4:	movw	r3, #8
     dc8:	movw	ip, #0
     dcc:	movt	ip, #0
     dd0:	str	ip, [sp]
     dd4:	movw	ip, #1
     dd8:	str	ip, [sp, #4]
     ddc:	bl	0 <flatcc_json_printer_float_struct_field>
     de0:	ldr	r0, [fp, #-4]
     de4:	ldr	r2, [fp, #-8]
     de8:	movw	r1, #3
     dec:	movw	r3, #16
     df0:	movw	ip, #0
     df4:	movt	ip, #0
     df8:	str	ip, [sp]
     dfc:	movw	ip, #5
     e00:	str	ip, [sp, #4]
     e04:	bl	0 <flatcc_json_printer_double_struct_field>
     e08:	ldr	r0, [fp, #-4]
     e0c:	ldr	r2, [fp, #-8]
     e10:	movw	r1, #4
     e14:	movw	r3, #24
     e18:	movw	ip, #0
     e1c:	movt	ip, #0
     e20:	str	ip, [sp]
     e24:	movw	ip, #5
     e28:	str	ip, [sp, #4]
     e2c:	movw	ip, #0
     e30:	movt	ip, #0
     e34:	str	ip, [sp, #8]
     e38:	bl	0 <flatcc_json_printer_int8_enum_struct_field>
     e3c:	ldr	r0, [fp, #-4]
     e40:	ldr	r2, [fp, #-8]
     e44:	movw	r1, #5
     e48:	str	r1, [sp, #12]
     e4c:	movw	r3, #26
     e50:	movw	ip, #0
     e54:	movt	ip, #0
     e58:	str	ip, [sp]
     e5c:	ldr	ip, [sp, #12]
     e60:	str	ip, [sp, #4]
     e64:	movw	lr, #0
     e68:	movt	lr, #0
     e6c:	str	lr, [sp, #8]
     e70:	bl	0 <flatcc_json_printer_embedded_struct_field>
     e74:	mov	sp, fp
     e78:	pop	{fp, pc}

00000e7c <MyGame_Example_Color_print_json_enum>:
     e7c:	push	{fp, lr}
     e80:	mov	fp, sp
     e84:	sub	sp, sp, #16
     e88:	str	r0, [fp, #-4]
     e8c:	strb	r1, [fp, #-5]
     e90:	ldrb	r0, [fp, #-5]
     e94:	strb	r0, [fp, #-6]
     e98:	ldrb	r0, [fp, #-6]
     e9c:	ldrb	r1, [fp, #-6]
     ea0:	sub	r1, r1, #1
     ea4:	and	r0, r0, r1
     ea8:	movw	r1, #0
     eac:	cmp	r1, r0
     eb0:	movw	r0, #0
     eb4:	movne	r0, #1
     eb8:	and	r0, r0, #1
     ebc:	str	r0, [sp, #4]
     ec0:	str	r1, [sp]
     ec4:	ldrb	r0, [fp, #-6]
     ec8:	and	r0, r0, #244	; 0xf4
     ecc:	cmp	r0, #0
     ed0:	bne	ee0 <MyGame_Example_Color_print_json_enum+0x64>
     ed4:	ldrb	r0, [fp, #-6]
     ed8:	cmp	r0, #0
     edc:	bne	ef0 <MyGame_Example_Color_print_json_enum+0x74>
     ee0:	ldr	r0, [fp, #-4]
     ee4:	ldrsb	r1, [fp, #-5]
     ee8:	bl	0 <flatcc_json_printer_int8>
     eec:	b	f98 <MyGame_Example_Color_print_json_enum+0x11c>
     ef0:	ldr	r0, [fp, #-4]
     ef4:	ldr	r1, [sp, #4]
     ef8:	bl	0 <flatcc_json_printer_delimit_enum_flags>
     efc:	ldrb	r0, [fp, #-6]
     f00:	and	r0, r0, #1
     f04:	cmp	r0, #0
     f08:	beq	f2c <MyGame_Example_Color_print_json_enum+0xb0>
     f0c:	ldr	r0, [fp, #-4]
     f10:	ldr	r1, [sp]
     f14:	add	r2, r1, #1
     f18:	str	r2, [sp]
     f1c:	movw	r2, #0
     f20:	movt	r2, #0
     f24:	movw	r3, #3
     f28:	bl	0 <flatcc_json_printer_enum_flag>
     f2c:	ldrb	r0, [fp, #-6]
     f30:	and	r0, r0, #2
     f34:	cmp	r0, #0
     f38:	beq	f5c <MyGame_Example_Color_print_json_enum+0xe0>
     f3c:	ldr	r0, [fp, #-4]
     f40:	ldr	r1, [sp]
     f44:	add	r2, r1, #1
     f48:	str	r2, [sp]
     f4c:	movw	r2, #0
     f50:	movt	r2, #0
     f54:	movw	r3, #5
     f58:	bl	0 <flatcc_json_printer_enum_flag>
     f5c:	ldrb	r0, [fp, #-6]
     f60:	and	r0, r0, #8
     f64:	cmp	r0, #0
     f68:	beq	f8c <MyGame_Example_Color_print_json_enum+0x110>
     f6c:	ldr	r0, [fp, #-4]
     f70:	ldr	r1, [sp]
     f74:	add	r2, r1, #1
     f78:	str	r2, [sp]
     f7c:	movw	r2, #0
     f80:	movt	r2, #0
     f84:	movw	r3, #4
     f88:	bl	0 <flatcc_json_printer_enum_flag>
     f8c:	ldr	r0, [fp, #-4]
     f90:	ldr	r1, [sp, #4]
     f94:	bl	0 <flatcc_json_printer_delimit_enum_flags>
     f98:	mov	sp, fp
     f9c:	pop	{fp, pc}

00000fa0 <MyGame_Example_Any_print_json_union_type>:
     fa0:	push	{fp, lr}
     fa4:	mov	fp, sp
     fa8:	sub	sp, sp, #16
     fac:	str	r0, [fp, #-4]
     fb0:	strb	r1, [fp, #-5]
     fb4:	ldrb	r0, [fp, #-5]
     fb8:	sub	r0, r0, #1
     fbc:	cmp	r0, #3
     fc0:	str	r0, [sp, #4]
     fc4:	bhi	1048 <MyGame_Example_Any_print_json_union_type+0xa8>
     fc8:	add	r0, pc, #8
     fcc:	ldr	r1, [sp, #4]
     fd0:	ldr	r0, [r0, r1, lsl #2]
     fd4:	mov	pc, r0
     fd8:	.word	0x00000fe8
     fdc:	.word	0x00001000
     fe0:	.word	0x00001018
     fe4:	.word	0x00001030
     fe8:	ldr	r0, [fp, #-4]
     fec:	movw	r1, #0
     ff0:	movt	r1, #0
     ff4:	movw	r2, #7
     ff8:	bl	0 <flatcc_json_printer_enum>
     ffc:	b	105c <MyGame_Example_Any_print_json_union_type+0xbc>
    1000:	ldr	r0, [fp, #-4]
    1004:	movw	r1, #0
    1008:	movt	r1, #0
    100c:	movw	r2, #23
    1010:	bl	0 <flatcc_json_printer_enum>
    1014:	b	105c <MyGame_Example_Any_print_json_union_type+0xbc>
    1018:	ldr	r0, [fp, #-4]
    101c:	movw	r1, #0
    1020:	movt	r1, #0
    1024:	movw	r2, #8
    1028:	bl	0 <flatcc_json_printer_enum>
    102c:	b	105c <MyGame_Example_Any_print_json_union_type+0xbc>
    1030:	ldr	r0, [fp, #-4]
    1034:	movw	r1, #0
    1038:	movt	r1, #0
    103c:	movw	r2, #3
    1040:	bl	0 <flatcc_json_printer_enum>
    1044:	b	105c <MyGame_Example_Any_print_json_union_type+0xbc>
    1048:	ldr	r0, [fp, #-4]
    104c:	movw	r1, #0
    1050:	movt	r1, #0
    1054:	movw	r2, #4
    1058:	bl	0 <flatcc_json_printer_enum>
    105c:	mov	sp, fp
    1060:	pop	{fp, pc}

00001064 <MyGame_Example_Any_print_json_union>:
    1064:	push	{fp, lr}
    1068:	mov	fp, sp
    106c:	sub	sp, sp, #16
    1070:	str	r0, [fp, #-4]
    1074:	str	r1, [sp, #8]
    1078:	ldr	r0, [sp, #8]
    107c:	ldrb	r0, [r0, #8]
    1080:	sub	r0, r0, #1
    1084:	cmp	r0, #3
    1088:	str	r0, [sp, #4]
    108c:	bhi	1110 <MyGame_Example_Any_print_json_union+0xac>
    1090:	add	r0, pc, #8
    1094:	ldr	r1, [sp, #4]
    1098:	ldr	r0, [r0, r1, lsl #2]
    109c:	mov	pc, r0
    10a0:	.word	0x000010b0
    10a4:	.word	0x000010c8
    10a8:	.word	0x000010e0
    10ac:	.word	0x000010f8
    10b0:	ldr	r0, [fp, #-4]
    10b4:	ldr	r1, [sp, #8]
    10b8:	movw	r2, #0
    10bc:	movt	r2, #0
    10c0:	bl	0 <flatcc_json_printer_union_table>
    10c4:	b	1114 <MyGame_Example_Any_print_json_union+0xb0>
    10c8:	ldr	r0, [fp, #-4]
    10cc:	ldr	r1, [sp, #8]
    10d0:	movw	r2, #0
    10d4:	movt	r2, #0
    10d8:	bl	0 <flatcc_json_printer_union_table>
    10dc:	b	1114 <MyGame_Example_Any_print_json_union+0xb0>
    10e0:	ldr	r0, [fp, #-4]
    10e4:	ldr	r1, [sp, #8]
    10e8:	movw	r2, #0
    10ec:	movt	r2, #0
    10f0:	bl	0 <flatcc_json_printer_union_table>
    10f4:	b	1114 <MyGame_Example_Any_print_json_union+0xb0>
    10f8:	ldr	r0, [fp, #-4]
    10fc:	ldr	r1, [sp, #8]
    1100:	movw	r2, #0
    1104:	movt	r2, #0
    1108:	bl	0 <flatcc_json_printer_union_table>
    110c:	b	1114 <MyGame_Example_Any_print_json_union+0xb0>
    1110:	b	1114 <MyGame_Example_Any_print_json_union+0xb0>
    1114:	mov	sp, fp
    1118:	pop	{fp, pc}

0000111c <MyGame_Example_Test_print_json_struct>:
    111c:	push	{fp, lr}
    1120:	mov	fp, sp
    1124:	sub	sp, sp, #24
    1128:	str	r0, [fp, #-4]
    112c:	str	r1, [fp, #-8]
    1130:	ldr	r0, [fp, #-4]
    1134:	ldr	r2, [fp, #-8]
    1138:	movw	r1, #0
    113c:	str	r1, [sp, #12]
    1140:	ldr	r3, [sp, #12]
    1144:	movw	ip, #0
    1148:	movt	ip, #0
    114c:	str	ip, [sp]
    1150:	movw	ip, #1
    1154:	str	ip, [sp, #4]
    1158:	bl	0 <flatcc_json_printer_int16_struct_field>
    115c:	ldr	r0, [fp, #-4]
    1160:	ldr	r2, [fp, #-8]
    1164:	movw	r1, #1
    1168:	str	r1, [sp, #8]
    116c:	movw	r3, #2
    1170:	movw	ip, #0
    1174:	movt	ip, #0
    1178:	str	ip, [sp]
    117c:	ldr	ip, [sp, #8]
    1180:	str	ip, [sp, #4]
    1184:	bl	0 <flatcc_json_printer_int8_struct_field>
    1188:	mov	sp, fp
    118c:	pop	{fp, pc}

00001190 <MyGame_Example_Stat_print_json_table>:
    1190:	push	{fp, lr}
    1194:	mov	fp, sp
    1198:	sub	sp, sp, #24
    119c:	str	r0, [fp, #-4]
    11a0:	str	r1, [fp, #-8]
    11a4:	ldr	r0, [fp, #-4]
    11a8:	ldr	r1, [fp, #-8]
    11ac:	movw	r2, #0
    11b0:	movw	r3, #0
    11b4:	movt	r3, #0
    11b8:	movw	ip, #2
    11bc:	str	ip, [sp]
    11c0:	bl	0 <flatcc_json_printer_string_field>
    11c4:	ldr	r0, [fp, #-4]
    11c8:	ldr	r1, [fp, #-8]
    11cc:	mov	r2, sp
    11d0:	mov	r3, #0
    11d4:	str	r3, [r2, #12]
    11d8:	str	r3, [r2, #8]
    11dc:	mov	r3, #3
    11e0:	str	r3, [r2]
    11e4:	movw	r3, #0
    11e8:	movt	r3, #0
    11ec:	mov	r2, #1
    11f0:	bl	0 <flatcc_json_printer_int64_field>
    11f4:	ldr	r0, [fp, #-4]
    11f8:	ldr	r1, [fp, #-8]
    11fc:	movw	r2, #2
    1200:	movw	r3, #0
    1204:	movt	r3, #0
    1208:	movw	ip, #5
    120c:	str	ip, [sp]
    1210:	movw	ip, #0
    1214:	uxth	ip, ip
    1218:	str	ip, [sp, #4]
    121c:	bl	0 <flatcc_json_printer_uint16_field>
    1220:	mov	sp, fp
    1224:	pop	{fp, pc}

00001228 <MyGame_Example_Ability_print_json_struct>:
    1228:	push	{fp, lr}
    122c:	mov	fp, sp
    1230:	sub	sp, sp, #24
    1234:	str	r0, [fp, #-4]
    1238:	str	r1, [fp, #-8]
    123c:	ldr	r0, [fp, #-4]
    1240:	ldr	r2, [fp, #-8]
    1244:	movw	r1, #0
    1248:	str	r1, [sp, #12]
    124c:	ldr	r3, [sp, #12]
    1250:	movw	ip, #0
    1254:	movt	ip, #0
    1258:	str	ip, [sp]
    125c:	movw	ip, #2
    1260:	str	ip, [sp, #4]
    1264:	bl	0 <flatcc_json_printer_uint32_struct_field>
    1268:	ldr	r0, [fp, #-4]
    126c:	ldr	r2, [fp, #-8]
    1270:	movw	r1, #1
    1274:	movw	r3, #4
    1278:	movw	ip, #0
    127c:	movt	ip, #0
    1280:	str	ip, [sp]
    1284:	movw	ip, #8
    1288:	str	ip, [sp, #4]
    128c:	bl	0 <flatcc_json_printer_uint32_struct_field>
    1290:	mov	sp, fp
    1294:	pop	{fp, pc}

00001298 <MyGame_InParentNamespace_print_json_table>:
    1298:	sub	sp, sp, #8
    129c:	str	r0, [sp, #4]
    12a0:	str	r1, [sp]
    12a4:	add	sp, sp, #8
    12a8:	bx	lr

000012ac <MyGame_Example_TestBase64_print_json_table>:
    12ac:	push	{fp, lr}
    12b0:	mov	fp, sp
    12b4:	sub	sp, sp, #24
    12b8:	str	r0, [fp, #-4]
    12bc:	str	r1, [fp, #-8]
    12c0:	ldr	r0, [fp, #-4]
    12c4:	ldr	r1, [fp, #-8]
    12c8:	movw	r2, #0
    12cc:	str	r2, [sp, #12]
    12d0:	movw	r3, #0
    12d4:	movt	r3, #0
    12d8:	movw	ip, #4
    12dc:	str	ip, [sp]
    12e0:	ldr	ip, [sp, #12]
    12e4:	str	ip, [sp, #4]
    12e8:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
    12ec:	ldr	r0, [fp, #-4]
    12f0:	ldr	r1, [fp, #-8]
    12f4:	movw	r2, #1
    12f8:	str	r2, [sp, #8]
    12fc:	movw	r3, #0
    1300:	movt	r3, #0
    1304:	movw	ip, #7
    1308:	str	ip, [sp]
    130c:	ldr	ip, [sp, #8]
    1310:	str	ip, [sp, #4]
    1314:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
    1318:	ldr	r0, [fp, #-4]
    131c:	ldr	r1, [fp, #-8]
    1320:	movw	r2, #2
    1324:	movw	r3, #0
    1328:	movt	r3, #0
    132c:	movw	ip, #6
    1330:	str	ip, [sp]
    1334:	movw	ip, #0
    1338:	str	ip, [sp, #4]
    133c:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
    1340:	mov	sp, fp
    1344:	pop	{fp, pc}

00001348 <MyGame_Example_TestSimpleTableWithEnum_print_json_table>:
    1348:	push	{fp, lr}
    134c:	mov	fp, sp
    1350:	sub	sp, sp, #32
    1354:	str	r0, [fp, #-4]
    1358:	str	r1, [fp, #-8]
    135c:	ldr	r0, [fp, #-4]
    1360:	ldr	r1, [fp, #-8]
    1364:	movw	r2, #0
    1368:	movw	r3, #0
    136c:	movt	r3, #0
    1370:	movw	ip, #5
    1374:	str	ip, [sp]
    1378:	movw	ip, #2
    137c:	sxtb	ip, ip
    1380:	str	ip, [sp, #4]
    1384:	movw	ip, #0
    1388:	movt	ip, #0
    138c:	str	ip, [sp, #8]
    1390:	bl	0 <flatcc_json_printer_int8_enum_field>
    1394:	ldr	r0, [fp, #-4]
    1398:	ldr	r1, [fp, #-8]
    139c:	movw	r2, #1
    13a0:	movw	r3, #0
    13a4:	movt	r3, #0
    13a8:	movw	ip, #6
    13ac:	str	ip, [sp]
    13b0:	movw	ip, #2
    13b4:	sxtb	ip, ip
    13b8:	str	ip, [sp, #4]
    13bc:	movw	ip, #0
    13c0:	movt	ip, #0
    13c4:	str	ip, [sp, #8]
    13c8:	bl	0 <flatcc_json_printer_int8_enum_field>
    13cc:	ldr	r0, [fp, #-4]
    13d0:	ldr	r1, [fp, #-8]
    13d4:	movw	r2, #2
    13d8:	str	r2, [fp, #-12]
    13dc:	movw	r3, #0
    13e0:	movt	r3, #0
    13e4:	ldr	ip, [fp, #-12]
    13e8:	str	ip, [sp]
    13ec:	movw	lr, #2
    13f0:	and	lr, lr, #255	; 0xff
    13f4:	str	lr, [sp, #4]
    13f8:	bl	0 <flatcc_json_printer_uint8_field>
    13fc:	ldr	r0, [fp, #-4]
    1400:	ldr	r1, [fp, #-8]
    1404:	movw	r2, #3
    1408:	str	r2, [sp, #16]
    140c:	movw	r3, #0
    1410:	movt	r3, #0
    1414:	ldr	ip, [sp, #16]
    1418:	str	ip, [sp]
    141c:	movw	lr, #2
    1420:	and	lr, lr, #255	; 0xff
    1424:	str	lr, [sp, #4]
    1428:	bl	0 <flatcc_json_printer_uint8_field>
    142c:	mov	sp, fp
    1430:	pop	{fp, pc}

00001434 <MyGame_Example2_Monster_print_json_table>:
    1434:	sub	sp, sp, #8
    1438:	str	r0, [sp, #4]
    143c:	str	r1, [sp]
    1440:	add	sp, sp, #8
    1444:	bx	lr

00001448 <MyGame_Example_Alt_print_json_table>:
    1448:	push	{fp, lr}
    144c:	mov	fp, sp
    1450:	sub	sp, sp, #24
    1454:	str	r0, [fp, #-4]
    1458:	str	r1, [fp, #-8]
    145c:	ldr	r0, [fp, #-4]
    1460:	ldr	r1, [fp, #-8]
    1464:	movw	r2, #0
    1468:	movw	r3, #0
    146c:	movt	r3, #0
    1470:	movw	ip, #6
    1474:	str	ip, [sp]
    1478:	movw	ip, #0
    147c:	movt	ip, #0
    1480:	str	ip, [sp, #4]
    1484:	bl	0 <flatcc_json_printer_table_field>
    1488:	ldr	r0, [fp, #-4]
    148c:	ldr	r1, [fp, #-8]
    1490:	movw	r2, #1
    1494:	movw	r3, #0
    1498:	movt	r3, #0
    149c:	movw	ip, #5
    14a0:	str	ip, [sp]
    14a4:	movw	ip, #0
    14a8:	movt	ip, #0
    14ac:	str	ip, [sp, #4]
    14b0:	bl	0 <flatcc_json_printer_table_field>
    14b4:	ldr	r0, [fp, #-4]
    14b8:	ldr	r1, [fp, #-8]
    14bc:	movw	r2, #3
    14c0:	movw	r3, #0
    14c4:	movt	r3, #0
    14c8:	movw	ip, #7
    14cc:	str	ip, [sp]
    14d0:	movw	ip, #0
    14d4:	movt	ip, #0
    14d8:	str	ip, [sp, #4]
    14dc:	movw	ip, #0
    14e0:	movt	ip, #0
    14e4:	str	ip, [sp, #8]
    14e8:	bl	0 <flatcc_json_printer_union_vector_field>
    14ec:	mov	sp, fp
    14f0:	pop	{fp, pc}

000014f4 <MyGame_Example_TestJSONPrefix_print_json_table>:
    14f4:	push	{fp, lr}
    14f8:	mov	fp, sp
    14fc:	sub	sp, sp, #16
    1500:	str	r0, [fp, #-4]
    1504:	str	r1, [sp, #8]
    1508:	ldr	r0, [fp, #-4]
    150c:	ldr	r1, [sp, #8]
    1510:	movw	r2, #0
    1514:	movw	r3, #0
    1518:	movt	r3, #0
    151c:	movw	ip, #21
    1520:	str	ip, [sp]
    1524:	movw	ip, #0
    1528:	movt	ip, #0
    152c:	str	ip, [sp, #4]
    1530:	bl	0 <flatcc_json_printer_table_field>
    1534:	ldr	r0, [fp, #-4]
    1538:	ldr	r1, [sp, #8]
    153c:	movw	r2, #1
    1540:	movw	r3, #0
    1544:	movt	r3, #0
    1548:	movw	ip, #22
    154c:	str	ip, [sp]
    1550:	movw	ip, #0
    1554:	movt	ip, #0
    1558:	str	ip, [sp, #4]
    155c:	bl	0 <flatcc_json_printer_table_field>
    1560:	ldr	r0, [fp, #-4]
    1564:	ldr	r1, [sp, #8]
    1568:	movw	r2, #2
    156c:	movw	r3, #0
    1570:	movt	r3, #0
    1574:	movw	ip, #22
    1578:	str	ip, [sp]
    157c:	movw	ip, #0
    1580:	movt	ip, #0
    1584:	str	ip, [sp, #4]
    1588:	bl	0 <flatcc_json_printer_table_field>
    158c:	mov	sp, fp
    1590:	pop	{fp, pc}

00001594 <Fantasy_Movie_print_json_table>:
    1594:	push	{fp, lr}
    1598:	mov	fp, sp
    159c:	sub	sp, sp, #24
    15a0:	str	r0, [fp, #-4]
    15a4:	str	r1, [fp, #-8]
    15a8:	ldr	r0, [fp, #-4]
    15ac:	ldr	r1, [fp, #-8]
    15b0:	movw	r2, #1
    15b4:	movw	r3, #0
    15b8:	movt	r3, #0
    15bc:	movw	ip, #14
    15c0:	str	ip, [sp]
    15c4:	movw	ip, #0
    15c8:	movt	ip, #0
    15cc:	str	ip, [sp, #4]
    15d0:	movw	ip, #0
    15d4:	movt	ip, #0
    15d8:	str	ip, [sp, #8]
    15dc:	bl	0 <flatcc_json_printer_union_field>
    15e0:	ldr	r0, [fp, #-4]
    15e4:	ldr	r1, [fp, #-8]
    15e8:	movw	r2, #3
    15ec:	movw	r3, #0
    15f0:	movt	r3, #0
    15f4:	movw	ip, #10
    15f8:	str	ip, [sp]
    15fc:	movw	ip, #0
    1600:	movt	ip, #0
    1604:	str	ip, [sp, #4]
    1608:	movw	ip, #0
    160c:	movt	ip, #0
    1610:	str	ip, [sp, #8]
    1614:	bl	0 <flatcc_json_printer_union_field>
    1618:	ldr	r0, [fp, #-4]
    161c:	ldr	r1, [fp, #-8]
    1620:	movw	r2, #5
    1624:	movw	r3, #0
    1628:	movt	r3, #0
    162c:	movw	ip, #9
    1630:	str	ip, [sp]
    1634:	movw	ip, #0
    1638:	movt	ip, #0
    163c:	str	ip, [sp, #4]
    1640:	movw	ip, #0
    1644:	movt	ip, #0
    1648:	str	ip, [sp, #8]
    164c:	bl	0 <flatcc_json_printer_union_field>
    1650:	ldr	r0, [fp, #-4]
    1654:	ldr	r1, [fp, #-8]
    1658:	movw	r2, #7
    165c:	movw	r3, #0
    1660:	movt	r3, #0
    1664:	movw	ip, #5
    1668:	str	ip, [sp]
    166c:	movw	ip, #0
    1670:	movt	ip, #0
    1674:	str	ip, [sp, #4]
    1678:	movw	ip, #0
    167c:	movt	ip, #0
    1680:	str	ip, [sp, #8]
    1684:	bl	0 <flatcc_json_printer_union_field>
    1688:	ldr	r0, [fp, #-4]
    168c:	ldr	r1, [fp, #-8]
    1690:	movw	r2, #9
    1694:	movw	r3, #0
    1698:	movt	r3, #0
    169c:	movw	ip, #10
    16a0:	str	ip, [sp]
    16a4:	movw	ip, #0
    16a8:	movt	ip, #0
    16ac:	str	ip, [sp, #4]
    16b0:	movw	ip, #0
    16b4:	movt	ip, #0
    16b8:	str	ip, [sp, #8]
    16bc:	bl	0 <flatcc_json_printer_union_vector_field>
    16c0:	mov	sp, fp
    16c4:	pop	{fp, pc}

000016c8 <MyGame_Example_TestJSONPrefixParsing_print_json_table>:
    16c8:	push	{fp, lr}
    16cc:	mov	fp, sp
    16d0:	sub	sp, sp, #32
    16d4:	str	r0, [fp, #-4]
    16d8:	str	r1, [fp, #-8]
    16dc:	ldr	r0, [fp, #-4]
    16e0:	ldr	r1, [fp, #-8]
    16e4:	movw	r2, #0
    16e8:	movw	r3, #0
    16ec:	movt	r3, #0
    16f0:	movw	ip, #4
    16f4:	str	ip, [sp]
    16f8:	bl	0 <flatcc_json_printer_string_field>
    16fc:	ldr	r0, [fp, #-4]
    1700:	ldr	r1, [fp, #-8]
    1704:	movw	r2, #1
    1708:	movw	r3, #0
    170c:	movt	r3, #0
    1710:	movw	ip, #9
    1714:	str	ip, [sp]
    1718:	movw	ip, #0
    171c:	str	ip, [sp, #4]
    1720:	bl	0 <flatcc_json_printer_uint32_field>
    1724:	ldr	r0, [fp, #-4]
    1728:	ldr	r1, [fp, #-8]
    172c:	movw	r2, #2
    1730:	movw	r3, #0
    1734:	movt	r3, #0
    1738:	movw	ip, #4
    173c:	str	ip, [sp]
    1740:	bl	0 <flatcc_json_printer_string_field>
    1744:	ldr	r0, [fp, #-4]
    1748:	ldr	r1, [fp, #-8]
    174c:	mov	r2, sp
    1750:	mov	r3, #0
    1754:	str	r3, [r2, #12]
    1758:	str	r3, [r2, #8]
    175c:	mov	r3, #8
    1760:	str	r3, [r2]
    1764:	movw	r3, #0
    1768:	movt	r3, #0
    176c:	mov	r2, #3
    1770:	bl	0 <flatcc_json_printer_int64_field>
    1774:	ldr	r0, [fp, #-4]
    1778:	ldr	r1, [fp, #-8]
    177c:	movw	r2, #4
    1780:	str	r2, [fp, #-12]
    1784:	movw	r3, #0
    1788:	movt	r3, #0
    178c:	ldr	ip, [fp, #-12]
    1790:	str	ip, [sp]
    1794:	bl	0 <flatcc_json_printer_string_field>
    1798:	ldr	r0, [fp, #-4]
    179c:	ldr	r1, [fp, #-8]
    17a0:	mov	r2, sp
    17a4:	mov	r3, #0
    17a8:	str	r3, [r2, #12]
    17ac:	str	r3, [r2, #8]
    17b0:	mov	r3, #8
    17b4:	str	r3, [r2]
    17b8:	movw	r3, #0
    17bc:	movt	r3, #0
    17c0:	mov	r2, #5
    17c4:	bl	0 <flatcc_json_printer_int64_field>
    17c8:	ldr	r0, [fp, #-4]
    17cc:	ldr	r1, [fp, #-8]
    17d0:	movw	r2, #6
    17d4:	movw	r3, #0
    17d8:	movt	r3, #0
    17dc:	movw	ip, #9
    17e0:	str	ip, [sp]
    17e4:	movw	ip, #0
    17e8:	str	ip, [sp, #4]
    17ec:	bl	0 <flatcc_json_printer_uint32_field>
    17f0:	ldr	r0, [fp, #-4]
    17f4:	ldr	r1, [fp, #-8]
    17f8:	mov	r2, sp
    17fc:	mov	r3, #0
    1800:	str	r3, [r2, #12]
    1804:	str	r3, [r2, #8]
    1808:	mov	r3, #8
    180c:	str	r3, [r2]
    1810:	movw	r3, #0
    1814:	movt	r3, #0
    1818:	mov	r2, #7
    181c:	bl	0 <flatcc_json_printer_int64_field>
    1820:	ldr	r0, [fp, #-4]
    1824:	ldr	r1, [fp, #-8]
    1828:	movw	r2, #8
    182c:	movw	r3, #0
    1830:	movt	r3, #0
    1834:	movw	ip, #9
    1838:	str	ip, [sp]
    183c:	movw	ip, #0
    1840:	str	ip, [sp, #4]
    1844:	bl	0 <flatcc_json_printer_uint32_field>
    1848:	mov	sp, fp
    184c:	pop	{fp, pc}

00001850 <MyGame_Example_TestJSONPrefixParsing2_print_json_table>:
    1850:	push	{fp, lr}
    1854:	mov	fp, sp
    1858:	sub	sp, sp, #32
    185c:	str	r0, [fp, #-4]
    1860:	str	r1, [fp, #-8]
    1864:	ldr	r0, [fp, #-4]
    1868:	ldr	r1, [fp, #-8]
    186c:	mov	r2, sp
    1870:	mov	r3, #0
    1874:	str	r3, [r2, #12]
    1878:	str	r3, [r2, #8]
    187c:	mov	ip, #15
    1880:	str	ip, [r2]
    1884:	movw	r2, #0
    1888:	movt	r2, #0
    188c:	str	r2, [fp, #-12]
    1890:	mov	r2, r3
    1894:	ldr	r3, [fp, #-12]
    1898:	bl	0 <flatcc_json_printer_int64_field>
    189c:	ldr	r0, [fp, #-4]
    18a0:	ldr	r1, [fp, #-8]
    18a4:	movw	r2, #1
    18a8:	movw	r3, #0
    18ac:	movt	r3, #0
    18b0:	movw	ip, #16
    18b4:	str	ip, [sp]
    18b8:	movw	ip, #0
    18bc:	str	ip, [sp, #4]
    18c0:	bl	0 <flatcc_json_printer_uint32_field>
    18c4:	mov	sp, fp
    18c8:	pop	{fp, pc}

000018cc <MyGame_Example_TestJSONPrefixParsing3_print_json_table>:
    18cc:	push	{fp, lr}
    18d0:	mov	fp, sp
    18d4:	sub	sp, sp, #32
    18d8:	str	r0, [fp, #-4]
    18dc:	str	r1, [fp, #-8]
    18e0:	ldr	r0, [fp, #-4]
    18e4:	ldr	r1, [fp, #-8]
    18e8:	mov	r2, sp
    18ec:	mov	r3, #0
    18f0:	str	r3, [r2, #12]
    18f4:	str	r3, [r2, #8]
    18f8:	mov	ip, #15
    18fc:	str	ip, [r2]
    1900:	movw	r2, #0
    1904:	movt	r2, #0
    1908:	str	r2, [fp, #-12]
    190c:	mov	r2, r3
    1910:	ldr	r3, [fp, #-12]
    1914:	bl	0 <flatcc_json_printer_int64_field>
    1918:	ldr	r0, [fp, #-4]
    191c:	ldr	r1, [fp, #-8]
    1920:	movw	r2, #1
    1924:	movw	r3, #0
    1928:	movt	r3, #0
    192c:	movw	ip, #21
    1930:	str	ip, [sp]
    1934:	movw	ip, #0
    1938:	str	ip, [sp, #4]
    193c:	bl	0 <flatcc_json_printer_uint32_field>
    1940:	mov	sp, fp
    1944:	pop	{fp, pc}

00001948 <Fantasy_Character_print_json_union_type>:
    1948:	push	{fp, lr}
    194c:	mov	fp, sp
    1950:	sub	sp, sp, #16
    1954:	str	r0, [fp, #-4]
    1958:	strb	r1, [fp, #-5]
    195c:	ldrb	r0, [fp, #-5]
    1960:	mov	r1, r0
    1964:	cmp	r0, #2
    1968:	str	r1, [sp, #4]
    196c:	beq	19c4 <Fantasy_Character_print_json_union_type+0x7c>
    1970:	b	1974 <Fantasy_Character_print_json_union_type+0x2c>
    1974:	ldr	r0, [sp, #4]
    1978:	cmp	r0, #8
    197c:	beq	19dc <Fantasy_Character_print_json_union_type+0x94>
    1980:	b	1984 <Fantasy_Character_print_json_union_type+0x3c>
    1984:	ldr	r0, [sp, #4]
    1988:	cmp	r0, #9
    198c:	beq	19f4 <Fantasy_Character_print_json_union_type+0xac>
    1990:	b	1994 <Fantasy_Character_print_json_union_type+0x4c>
    1994:	ldr	r0, [sp, #4]
    1998:	cmp	r0, #10
    199c:	beq	1a0c <Fantasy_Character_print_json_union_type+0xc4>
    19a0:	b	19a4 <Fantasy_Character_print_json_union_type+0x5c>
    19a4:	ldr	r0, [sp, #4]
    19a8:	cmp	r0, #11
    19ac:	beq	1a24 <Fantasy_Character_print_json_union_type+0xdc>
    19b0:	b	19b4 <Fantasy_Character_print_json_union_type+0x6c>
    19b4:	ldr	r0, [sp, #4]
    19b8:	cmp	r0, #255	; 0xff
    19bc:	beq	1a3c <Fantasy_Character_print_json_union_type+0xf4>
    19c0:	b	1a54 <Fantasy_Character_print_json_union_type+0x10c>
    19c4:	ldr	r0, [fp, #-4]
    19c8:	movw	r1, #0
    19cc:	movt	r1, #0
    19d0:	movw	r2, #5
    19d4:	bl	0 <flatcc_json_printer_enum>
    19d8:	b	1a68 <Fantasy_Character_print_json_union_type+0x120>
    19dc:	ldr	r0, [fp, #-4]
    19e0:	movw	r1, #0
    19e4:	movt	r1, #0
    19e8:	movw	r2, #8
    19ec:	bl	0 <flatcc_json_printer_enum>
    19f0:	b	1a68 <Fantasy_Character_print_json_union_type+0x120>
    19f4:	ldr	r0, [fp, #-4]
    19f8:	movw	r1, #0
    19fc:	movt	r1, #0
    1a00:	movw	r2, #5
    1a04:	bl	0 <flatcc_json_printer_enum>
    1a08:	b	1a68 <Fantasy_Character_print_json_union_type+0x120>
    1a0c:	ldr	r0, [fp, #-4]
    1a10:	movw	r1, #0
    1a14:	movt	r1, #0
    1a18:	movw	r2, #7
    1a1c:	bl	0 <flatcc_json_printer_enum>
    1a20:	b	1a68 <Fantasy_Character_print_json_union_type+0x120>
    1a24:	ldr	r0, [fp, #-4]
    1a28:	movw	r1, #0
    1a2c:	movt	r1, #0
    1a30:	movw	r2, #5
    1a34:	bl	0 <flatcc_json_printer_enum>
    1a38:	b	1a68 <Fantasy_Character_print_json_union_type+0x120>
    1a3c:	ldr	r0, [fp, #-4]
    1a40:	movw	r1, #0
    1a44:	movt	r1, #0
    1a48:	movw	r2, #6
    1a4c:	bl	0 <flatcc_json_printer_enum>
    1a50:	b	1a68 <Fantasy_Character_print_json_union_type+0x120>
    1a54:	ldr	r0, [fp, #-4]
    1a58:	movw	r1, #0
    1a5c:	movt	r1, #0
    1a60:	movw	r2, #4
    1a64:	bl	0 <flatcc_json_printer_enum>
    1a68:	mov	sp, fp
    1a6c:	pop	{fp, pc}

00001a70 <Fantasy_Character_print_json_union>:
    1a70:	push	{fp, lr}
    1a74:	mov	fp, sp
    1a78:	sub	sp, sp, #16
    1a7c:	str	r0, [fp, #-4]
    1a80:	str	r1, [sp, #8]
    1a84:	ldr	r0, [sp, #8]
    1a88:	ldrb	r0, [r0, #8]
    1a8c:	mov	r1, r0
    1a90:	cmp	r0, #2
    1a94:	str	r1, [sp, #4]
    1a98:	beq	1af0 <Fantasy_Character_print_json_union+0x80>
    1a9c:	b	1aa0 <Fantasy_Character_print_json_union+0x30>
    1aa0:	ldr	r0, [sp, #4]
    1aa4:	cmp	r0, #8
    1aa8:	beq	1b08 <Fantasy_Character_print_json_union+0x98>
    1aac:	b	1ab0 <Fantasy_Character_print_json_union+0x40>
    1ab0:	ldr	r0, [sp, #4]
    1ab4:	cmp	r0, #9
    1ab8:	beq	1b20 <Fantasy_Character_print_json_union+0xb0>
    1abc:	b	1ac0 <Fantasy_Character_print_json_union+0x50>
    1ac0:	ldr	r0, [sp, #4]
    1ac4:	cmp	r0, #10
    1ac8:	beq	1b38 <Fantasy_Character_print_json_union+0xc8>
    1acc:	b	1ad0 <Fantasy_Character_print_json_union+0x60>
    1ad0:	ldr	r0, [sp, #4]
    1ad4:	cmp	r0, #11
    1ad8:	beq	1b50 <Fantasy_Character_print_json_union+0xe0>
    1adc:	b	1ae0 <Fantasy_Character_print_json_union+0x70>
    1ae0:	ldr	r0, [sp, #4]
    1ae4:	cmp	r0, #255	; 0xff
    1ae8:	beq	1b60 <Fantasy_Character_print_json_union+0xf0>
    1aec:	b	1b70 <Fantasy_Character_print_json_union+0x100>
    1af0:	ldr	r0, [fp, #-4]
    1af4:	ldr	r1, [sp, #8]
    1af8:	movw	r2, #0
    1afc:	movt	r2, #0
    1b00:	bl	0 <flatcc_json_printer_union_table>
    1b04:	b	1b74 <Fantasy_Character_print_json_union+0x104>
    1b08:	ldr	r0, [fp, #-4]
    1b0c:	ldr	r1, [sp, #8]
    1b10:	movw	r2, #0
    1b14:	movt	r2, #0
    1b18:	bl	0 <flatcc_json_printer_union_struct>
    1b1c:	b	1b74 <Fantasy_Character_print_json_union+0x104>
    1b20:	ldr	r0, [fp, #-4]
    1b24:	ldr	r1, [sp, #8]
    1b28:	movw	r2, #0
    1b2c:	movt	r2, #0
    1b30:	bl	0 <flatcc_json_printer_union_struct>
    1b34:	b	1b74 <Fantasy_Character_print_json_union+0x104>
    1b38:	ldr	r0, [fp, #-4]
    1b3c:	ldr	r1, [sp, #8]
    1b40:	movw	r2, #0
    1b44:	movt	r2, #0
    1b48:	bl	0 <flatcc_json_printer_union_struct>
    1b4c:	b	1b74 <Fantasy_Character_print_json_union+0x104>
    1b50:	ldr	r0, [fp, #-4]
    1b54:	ldr	r1, [sp, #8]
    1b58:	bl	0 <flatcc_json_printer_union_string>
    1b5c:	b	1b74 <Fantasy_Character_print_json_union+0x104>
    1b60:	ldr	r0, [fp, #-4]
    1b64:	ldr	r1, [sp, #8]
    1b68:	bl	0 <flatcc_json_printer_union_string>
    1b6c:	b	1b74 <Fantasy_Character_print_json_union+0x104>
    1b70:	b	1b74 <Fantasy_Character_print_json_union+0x104>
    1b74:	mov	sp, fp
    1b78:	pop	{fp, pc}

00001b7c <Fantasy_Attacker_print_json_table>:
    1b7c:	push	{fp, lr}
    1b80:	mov	fp, sp
    1b84:	sub	sp, sp, #24
    1b88:	str	r0, [fp, #-4]
    1b8c:	str	r1, [fp, #-8]
    1b90:	ldr	r0, [fp, #-4]
    1b94:	ldr	r1, [fp, #-8]
    1b98:	movw	r2, #0
    1b9c:	str	r2, [sp, #12]
    1ba0:	movw	r3, #0
    1ba4:	movt	r3, #0
    1ba8:	movw	ip, #19
    1bac:	str	ip, [sp]
    1bb0:	ldr	ip, [sp, #12]
    1bb4:	str	ip, [sp, #4]
    1bb8:	bl	0 <flatcc_json_printer_int32_field>
    1bbc:	mov	sp, fp
    1bc0:	pop	{fp, pc}

00001bc4 <Fantasy_Rapunzel_print_json_struct>:
    1bc4:	push	{fp, lr}
    1bc8:	mov	fp, sp
    1bcc:	sub	sp, sp, #24
    1bd0:	str	r0, [fp, #-4]
    1bd4:	str	r1, [fp, #-8]
    1bd8:	ldr	r0, [fp, #-4]
    1bdc:	ldr	r2, [fp, #-8]
    1be0:	movw	r1, #0
    1be4:	str	r1, [sp, #12]
    1be8:	ldr	r3, [sp, #12]
    1bec:	movw	ip, #0
    1bf0:	movt	ip, #0
    1bf4:	str	ip, [sp]
    1bf8:	movw	ip, #11
    1bfc:	str	ip, [sp, #4]
    1c00:	bl	0 <flatcc_json_printer_uint16_struct_field>
    1c04:	mov	sp, fp
    1c08:	pop	{fp, pc}

00001c0c <Fantasy_BookReader_print_json_struct>:
    1c0c:	push	{fp, lr}
    1c10:	mov	fp, sp
    1c14:	sub	sp, sp, #24
    1c18:	str	r0, [fp, #-4]
    1c1c:	str	r1, [fp, #-8]
    1c20:	ldr	r0, [fp, #-4]
    1c24:	ldr	r2, [fp, #-8]
    1c28:	movw	r1, #0
    1c2c:	str	r1, [sp, #12]
    1c30:	ldr	r3, [sp, #12]
    1c34:	movw	ip, #0
    1c38:	movt	ip, #0
    1c3c:	str	ip, [sp]
    1c40:	movw	ip, #10
    1c44:	str	ip, [sp, #4]
    1c48:	bl	0 <flatcc_json_printer_int32_struct_field>
    1c4c:	mov	sp, fp
    1c50:	pop	{fp, pc}

00001c54 <flatcc_json_printer_total>:
    1c54:	sub	sp, sp, #4
    1c58:	str	r0, [sp]
    1c5c:	ldr	r0, [sp]
    1c60:	ldr	r0, [r0, #12]
    1c64:	ldr	r1, [sp]
    1c68:	ldr	r1, [r1, #20]
    1c6c:	ldr	r2, [sp]
    1c70:	ldr	r2, [r2]
    1c74:	sub	r1, r1, r2
    1c78:	add	r0, r0, r1
    1c7c:	add	sp, sp, #4
    1c80:	bx	lr
