
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-filefilter.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <name_buffer_init>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #8
   c:	str	r0, [fp, #-8]
  10:	ldr	r3, [fp, #-8]
  14:	cmp	r3, #0
  18:	bne	30 <name_buffer_init+0x30>
  1c:	ldr	r3, [pc, #108]	; 90 <name_buffer_init+0x90>
  20:	mov	r2, #62	; 0x3e
  24:	ldr	r1, [pc, #104]	; 94 <name_buffer_init+0x94>
  28:	ldr	r0, [pc, #104]	; 98 <name_buffer_init+0x98>
  2c:	bl	0 <__assert_fail>
  30:	ldr	r3, [fp, #-8]
  34:	mov	r2, #0
  38:	str	r2, [r3]
  3c:	ldr	r3, [fp, #-8]
  40:	mov	r2, #1024	; 0x400
  44:	str	r2, [r3, #4]
  48:	mov	r0, #1024	; 0x400
  4c:	bl	0 <malloc>
  50:	mov	r3, r0
  54:	mov	r2, r3
  58:	ldr	r3, [fp, #-8]
  5c:	str	r2, [r3, #8]
  60:	ldr	r3, [fp, #-8]
  64:	ldr	r3, [r3, #8]
  68:	cmp	r3, #0
  6c:	bne	84 <name_buffer_init+0x84>
  70:	ldr	r3, [pc, #24]	; 90 <name_buffer_init+0x90>
  74:	mov	r2, #67	; 0x43
  78:	ldr	r1, [pc, #20]	; 94 <name_buffer_init+0x94>
  7c:	ldr	r0, [pc, #24]	; 9c <name_buffer_init+0x9c>
  80:	bl	0 <__assert_fail>
  84:	nop			; (mov r0, r0)
  88:	sub	sp, fp, #4
  8c:	pop	{fp, pc}
  90:	.word	0x00000158
  94:	.word	0x00000000
  98:	.word	0x00000050
  9c:	.word	0x00000060

000000a0 <name_buffer_done>:
  a0:	push	{fp, lr}
  a4:	add	fp, sp, #4
  a8:	sub	sp, sp, #8
  ac:	str	r0, [fp, #-8]
  b0:	ldr	r3, [fp, #-8]
  b4:	cmp	r3, #0
  b8:	bne	d0 <name_buffer_done+0x30>
  bc:	ldr	r3, [pc, #76]	; 110 <name_buffer_done+0x70>
  c0:	mov	r2, #72	; 0x48
  c4:	ldr	r1, [pc, #72]	; 114 <name_buffer_done+0x74>
  c8:	ldr	r0, [pc, #72]	; 118 <name_buffer_done+0x78>
  cc:	bl	0 <__assert_fail>
  d0:	ldr	r3, [fp, #-8]
  d4:	mov	r2, #0
  d8:	str	r2, [r3]
  dc:	ldr	r3, [fp, #-8]
  e0:	mov	r2, #0
  e4:	str	r2, [r3, #4]
  e8:	ldr	r3, [fp, #-8]
  ec:	ldr	r3, [r3, #8]
  f0:	mov	r0, r3
  f4:	bl	0 <free>
  f8:	ldr	r3, [fp, #-8]
  fc:	mov	r2, #0
 100:	str	r2, [r3, #8]
 104:	nop			; (mov r0, r0)
 108:	sub	sp, fp, #4
 10c:	pop	{fp, pc}
 110:	.word	0x0000016c
 114:	.word	0x00000000
 118:	.word	0x00000050

0000011c <append_string_to_name_buffer>:
 11c:	push	{fp, lr}
 120:	add	fp, sp, #4
 124:	sub	sp, sp, #24
 128:	str	r0, [fp, #-24]	; 0xffffffe8
 12c:	str	r1, [fp, #-28]	; 0xffffffe4
 130:	ldr	r3, [fp, #-24]	; 0xffffffe8
 134:	cmp	r3, #0
 138:	bne	150 <append_string_to_name_buffer+0x34>
 13c:	ldr	r3, [pc, #328]	; 28c <append_string_to_name_buffer+0x170>
 140:	mov	r2, #84	; 0x54
 144:	ldr	r1, [pc, #324]	; 290 <append_string_to_name_buffer+0x174>
 148:	ldr	r0, [pc, #324]	; 294 <append_string_to_name_buffer+0x178>
 14c:	bl	0 <__assert_fail>
 150:	ldr	r3, [fp, #-28]	; 0xffffffe4
 154:	cmp	r3, #0
 158:	bne	170 <append_string_to_name_buffer+0x54>
 15c:	ldr	r3, [pc, #296]	; 28c <append_string_to_name_buffer+0x170>
 160:	mov	r2, #85	; 0x55
 164:	ldr	r1, [pc, #292]	; 290 <append_string_to_name_buffer+0x174>
 168:	ldr	r0, [pc, #296]	; 298 <append_string_to_name_buffer+0x17c>
 16c:	bl	0 <__assert_fail>
 170:	ldr	r0, [fp, #-28]	; 0xffffffe4
 174:	bl	0 <strlen>
 178:	mov	r3, r0
 17c:	str	r3, [fp, #-12]
 180:	ldr	r3, [fp, #-24]	; 0xffffffe8
 184:	ldr	r2, [r3]
 188:	ldr	r3, [fp, #-12]
 18c:	add	r2, r2, r3
 190:	ldr	r3, [fp, #-24]	; 0xffffffe8
 194:	ldr	r3, [r3, #4]
 198:	cmp	r2, r3
 19c:	blt	248 <append_string_to_name_buffer+0x12c>
 1a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1a4:	ldr	r3, [r3, #4]
 1a8:	str	r3, [fp, #-8]
 1ac:	b	1bc <append_string_to_name_buffer+0xa0>
 1b0:	ldr	r3, [fp, #-8]
 1b4:	add	r3, r3, #1024	; 0x400
 1b8:	str	r3, [fp, #-8]
 1bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1c0:	ldr	r2, [r3]
 1c4:	ldr	r3, [fp, #-12]
 1c8:	add	r2, r2, r3
 1cc:	ldr	r3, [fp, #-8]
 1d0:	cmp	r2, r3
 1d4:	bgt	1b0 <append_string_to_name_buffer+0x94>
 1d8:	ldr	r3, [fp, #-8]
 1dc:	mov	r0, r3
 1e0:	bl	0 <malloc>
 1e4:	mov	r3, r0
 1e8:	str	r3, [fp, #-16]
 1ec:	ldr	r3, [fp, #-16]
 1f0:	cmp	r3, #0
 1f4:	bne	20c <append_string_to_name_buffer+0xf0>
 1f8:	ldr	r3, [pc, #140]	; 28c <append_string_to_name_buffer+0x170>
 1fc:	mov	r2, #100	; 0x64
 200:	ldr	r1, [pc, #136]	; 290 <append_string_to_name_buffer+0x174>
 204:	ldr	r0, [pc, #144]	; 29c <append_string_to_name_buffer+0x180>
 208:	bl	0 <__assert_fail>
 20c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 210:	ldr	r3, [r3, #8]
 214:	mov	r1, r3
 218:	ldr	r0, [fp, #-16]
 21c:	bl	0 <strcpy>
 220:	ldr	r3, [fp, #-24]	; 0xffffffe8
 224:	ldr	r3, [r3, #8]
 228:	mov	r0, r3
 22c:	bl	0 <free>
 230:	ldr	r3, [fp, #-24]	; 0xffffffe8
 234:	ldr	r2, [fp, #-16]
 238:	str	r2, [r3, #8]
 23c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 240:	ldr	r2, [fp, #-8]
 244:	str	r2, [r3, #4]
 248:	ldr	r3, [fp, #-24]	; 0xffffffe8
 24c:	ldr	r3, [r3, #8]
 250:	ldr	r2, [fp, #-24]	; 0xffffffe8
 254:	ldr	r2, [r2]
 258:	add	r3, r3, r2
 25c:	ldr	r1, [fp, #-28]	; 0xffffffe4
 260:	mov	r0, r3
 264:	bl	0 <strcpy>
 268:	ldr	r3, [fp, #-24]	; 0xffffffe8
 26c:	ldr	r2, [r3]
 270:	ldr	r3, [fp, #-12]
 274:	add	r2, r2, r3
 278:	ldr	r3, [fp, #-24]	; 0xffffffe8
 27c:	str	r2, [r3]
 280:	nop			; (mov r0, r0)
 284:	sub	sp, fp, #4
 288:	pop	{fp, pc}
 28c:	.word	0x00000180
 290:	.word	0x00000000
 294:	.word	0x00000050
 298:	.word	0x00000078
 29c:	.word	0x00000084

000002a0 <coda_match_file>:
 2a0:	push	{r4, r5, fp, lr}
 2a4:	add	fp, sp, #12
 2a8:	sub	sp, sp, #552	; 0x228
 2ac:	str	r0, [fp, #-552]	; 0xfffffdd8
 2b0:	str	r1, [fp, #-556]	; 0xfffffdd4
 2b4:	str	r2, [fp, #-560]	; 0xfffffdd0
 2b8:	str	r3, [fp, #-564]	; 0xfffffdcc
 2bc:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 2c0:	ldr	r3, [r3, #8]
 2c4:	sub	r2, fp, #20
 2c8:	mov	r1, r2
 2cc:	mov	r0, r3
 2d0:	bl	0 <coda_open>
 2d4:	str	r0, [fp, #-16]
 2d8:	ldr	r3, [fp, #-16]
 2dc:	cmp	r3, #0
 2e0:	beq	32c <coda_match_file+0x8c>
 2e4:	ldr	r3, [pc, #496]	; 4dc <coda_match_file+0x23c>
 2e8:	ldr	r3, [pc, r3]
 2ec:	bl	0 <__aeabi_read_tp>
 2f0:	mov	r2, r0
 2f4:	ldr	r3, [r2, r3]
 2f8:	cmn	r3, #21
 2fc:	bne	32c <coda_match_file+0x8c>
 300:	mov	r0, #0
 304:	bl	0 <coda_set_option_use_mmap>
 308:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 30c:	ldr	r3, [r3, #8]
 310:	sub	r2, fp, #20
 314:	mov	r1, r2
 318:	mov	r0, r3
 31c:	bl	0 <coda_open>
 320:	str	r0, [fp, #-16]
 324:	mov	r0, #1
 328:	bl	0 <coda_set_option_use_mmap>
 32c:	ldr	r3, [fp, #-16]
 330:	cmp	r3, #0
 334:	beq	3bc <coda_match_file+0x11c>
 338:	ldr	r3, [pc, #416]	; 4e0 <coda_match_file+0x240>
 33c:	ldr	r3, [pc, r3]
 340:	bl	0 <__aeabi_read_tp>
 344:	mov	r2, r0
 348:	ldr	r3, [r2, r3]
 34c:	cmn	r3, #200	; 0xc8
 350:	bne	378 <coda_match_file+0xd8>
 354:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 358:	ldr	r0, [r3, #8]
 35c:	ldr	r4, [fp, #-560]	; 0xfffffdd0
 360:	ldr	r3, [fp, #-564]	; 0xfffffdcc
 364:	mov	r2, #0
 368:	mov	r1, #3
 36c:	blx	r4
 370:	mov	r3, r0
 374:	b	4d0 <coda_match_file+0x230>
 378:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 37c:	ldr	r5, [r3, #8]
 380:	ldr	r3, [pc, #348]	; 4e4 <coda_match_file+0x244>
 384:	ldr	r3, [pc, r3]
 388:	bl	0 <__aeabi_read_tp>
 38c:	mov	r2, r0
 390:	ldr	r3, [r2, r3]
 394:	mov	r0, r3
 398:	bl	0 <coda_errno_to_string>
 39c:	mov	r2, r0
 3a0:	ldr	r4, [fp, #-560]	; 0xfffffdd0
 3a4:	ldr	r3, [fp, #-564]	; 0xfffffdcc
 3a8:	mov	r1, #1
 3ac:	mov	r0, r5
 3b0:	blx	r4
 3b4:	mov	r3, r0
 3b8:	b	4d0 <coda_match_file+0x230>
 3bc:	ldr	r2, [fp, #-20]	; 0xffffffec
 3c0:	sub	r3, fp, #540	; 0x21c
 3c4:	mov	r1, r2
 3c8:	mov	r0, r3
 3cc:	bl	0 <coda_cursor_set_product>
 3d0:	mov	r3, r0
 3d4:	cmp	r3, #0
 3d8:	beq	42c <coda_match_file+0x18c>
 3dc:	ldr	r3, [fp, #-20]	; 0xffffffec
 3e0:	mov	r0, r3
 3e4:	bl	0 <coda_close>
 3e8:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 3ec:	ldr	r5, [r3, #8]
 3f0:	ldr	r3, [pc, #240]	; 4e8 <coda_match_file+0x248>
 3f4:	ldr	r3, [pc, r3]
 3f8:	bl	0 <__aeabi_read_tp>
 3fc:	mov	r2, r0
 400:	ldr	r3, [r2, r3]
 404:	mov	r0, r3
 408:	bl	0 <coda_errno_to_string>
 40c:	mov	r2, r0
 410:	ldr	r4, [fp, #-560]	; 0xfffffdd0
 414:	ldr	r3, [fp, #-564]	; 0xfffffdcc
 418:	mov	r1, #0
 41c:	mov	r0, r5
 420:	blx	r4
 424:	mov	r3, r0
 428:	b	4d0 <coda_match_file+0x230>
 42c:	sub	r2, fp, #544	; 0x220
 430:	sub	r3, fp, #540	; 0x21c
 434:	mov	r1, r3
 438:	ldr	r0, [fp, #-552]	; 0xfffffdd8
 43c:	bl	0 <coda_expression_eval_bool>
 440:	mov	r3, r0
 444:	cmp	r3, #0
 448:	beq	490 <coda_match_file+0x1f0>
 44c:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 450:	ldr	r5, [r3, #8]
 454:	ldr	r3, [pc, #144]	; 4ec <coda_match_file+0x24c>
 458:	ldr	r3, [pc, r3]
 45c:	bl	0 <__aeabi_read_tp>
 460:	mov	r2, r0
 464:	ldr	r3, [r2, r3]
 468:	mov	r0, r3
 46c:	bl	0 <coda_errno_to_string>
 470:	mov	r2, r0
 474:	ldr	r4, [fp, #-560]	; 0xfffffdd0
 478:	ldr	r3, [fp, #-564]	; 0xfffffdcc
 47c:	mov	r1, #0
 480:	mov	r0, r5
 484:	blx	r4
 488:	mov	r3, r0
 48c:	b	4d0 <coda_match_file+0x230>
 490:	ldr	r3, [fp, #-20]	; 0xffffffec
 494:	mov	r0, r3
 498:	bl	0 <coda_close>
 49c:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 4a0:	ldr	r0, [r3, #8]
 4a4:	ldr	r3, [fp, #-544]	; 0xfffffde0
 4a8:	cmp	r3, #0
 4ac:	beq	4b8 <coda_match_file+0x218>
 4b0:	mov	r1, #4
 4b4:	b	4bc <coda_match_file+0x21c>
 4b8:	mov	r1, #5
 4bc:	ldr	r4, [fp, #-560]	; 0xfffffdd0
 4c0:	ldr	r3, [fp, #-564]	; 0xfffffdcc
 4c4:	mov	r2, #0
 4c8:	blx	r4
 4cc:	mov	r3, r0
 4d0:	mov	r0, r3
 4d4:	sub	sp, fp, #12
 4d8:	pop	{r4, r5, fp, pc}
 4dc:	.word	0x000001ec
 4e0:	.word	0x0000019c
 4e4:	.word	0x00000158
 4e8:	.word	0x000000ec
 4ec:	.word	0x0000008c

000004f0 <coda_match_dir>:
 4f0:	push	{r4, fp, lr}
 4f4:	add	fp, sp, #8
 4f8:	sub	sp, sp, #44	; 0x2c
 4fc:	str	r0, [fp, #-32]	; 0xffffffe0
 500:	str	r1, [fp, #-36]	; 0xffffffdc
 504:	str	r2, [fp, #-40]	; 0xffffffd8
 508:	str	r3, [fp, #-44]	; 0xffffffd4
 50c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 510:	ldr	r3, [r3, #8]
 514:	mov	r0, r3
 518:	bl	0 <opendir>
 51c:	str	r0, [fp, #-16]
 520:	ldr	r3, [fp, #-16]
 524:	cmp	r3, #0
 528:	bne	550 <coda_match_dir+0x60>
 52c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 530:	ldr	r0, [r3, #8]
 534:	ldr	r4, [fp, #-40]	; 0xffffffd8
 538:	ldr	r3, [fp, #-44]	; 0xffffffd4
 53c:	ldr	r2, [pc, #272]	; 654 <coda_match_dir+0x164>
 540:	mov	r1, #2
 544:	blx	r4
 548:	mov	r3, r0
 54c:	b	648 <coda_match_dir+0x158>
 550:	ldr	r3, [fp, #-36]	; 0xffffffdc
 554:	ldr	r3, [r3]
 558:	str	r3, [fp, #-20]	; 0xffffffec
 55c:	b	624 <coda_match_dir+0x134>
 560:	ldr	r3, [fp, #-24]	; 0xffffffe8
 564:	add	r3, r3, #11
 568:	ldr	r1, [pc, #232]	; 658 <coda_match_dir+0x168>
 56c:	mov	r0, r3
 570:	bl	0 <strcmp>
 574:	mov	r3, r0
 578:	cmp	r3, #0
 57c:	beq	624 <coda_match_dir+0x134>
 580:	ldr	r3, [fp, #-24]	; 0xffffffe8
 584:	add	r3, r3, #11
 588:	ldr	r1, [pc, #204]	; 65c <coda_match_dir+0x16c>
 58c:	mov	r0, r3
 590:	bl	0 <strcmp>
 594:	mov	r3, r0
 598:	cmp	r3, #0
 59c:	bne	5a4 <coda_match_dir+0xb4>
 5a0:	b	624 <coda_match_dir+0x134>
 5a4:	ldr	r1, [pc, #180]	; 660 <coda_match_dir+0x170>
 5a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
 5ac:	bl	11c <append_string_to_name_buffer>
 5b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5b4:	add	r3, r3, #11
 5b8:	mov	r1, r3
 5bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
 5c0:	bl	11c <append_string_to_name_buffer>
 5c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
 5c8:	str	r3, [sp]
 5cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
 5d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
 5d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
 5d8:	mov	r0, #1
 5dc:	bl	664 <coda_match_filepath>
 5e0:	str	r0, [fp, #-28]	; 0xffffffe4
 5e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 5e8:	cmp	r3, #0
 5ec:	beq	600 <coda_match_dir+0x110>
 5f0:	ldr	r0, [fp, #-16]
 5f4:	bl	0 <closedir>
 5f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 5fc:	b	648 <coda_match_dir+0x158>
 600:	ldr	r3, [fp, #-36]	; 0xffffffdc
 604:	ldr	r2, [fp, #-20]	; 0xffffffec
 608:	str	r2, [r3]
 60c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 610:	ldr	r2, [r3, #8]
 614:	ldr	r3, [fp, #-20]	; 0xffffffec
 618:	add	r3, r2, r3
 61c:	mov	r2, #0
 620:	strb	r2, [r3]
 624:	ldr	r0, [fp, #-16]
 628:	bl	0 <readdir>
 62c:	str	r0, [fp, #-24]	; 0xffffffe8
 630:	ldr	r3, [fp, #-24]	; 0xffffffe8
 634:	cmp	r3, #0
 638:	bne	560 <coda_match_dir+0x70>
 63c:	ldr	r0, [fp, #-16]
 640:	bl	0 <closedir>
 644:	mov	r3, #0
 648:	mov	r0, r3
 64c:	sub	sp, fp, #8
 650:	pop	{r4, fp, pc}
 654:	.word	0x00000098
 658:	.word	0x000000bc
 65c:	.word	0x000000c0
 660:	.word	0x000000c4

00000664 <coda_match_filepath>:
 664:	push	{r4, r5, fp, lr}
 668:	add	fp, sp, #12
 66c:	sub	sp, sp, #104	; 0x68
 670:	str	r0, [fp, #-104]	; 0xffffff98
 674:	str	r1, [fp, #-108]	; 0xffffff94
 678:	str	r2, [fp, #-112]	; 0xffffff90
 67c:	str	r3, [fp, #-116]	; 0xffffff8c
 680:	ldr	r3, [fp, #-112]	; 0xffffff90
 684:	ldr	r3, [r3, #8]
 688:	sub	r2, fp, #100	; 0x64
 68c:	mov	r1, r2
 690:	mov	r0, r3
 694:	bl	0 <stat>
 698:	mov	r3, r0
 69c:	cmp	r3, #0
 6a0:	beq	72c <coda_match_filepath+0xc8>
 6a4:	bl	0 <__errno_location>
 6a8:	mov	r3, r0
 6ac:	ldr	r3, [r3]
 6b0:	cmp	r3, #2
 6b4:	beq	6cc <coda_match_filepath+0x68>
 6b8:	bl	0 <__errno_location>
 6bc:	mov	r3, r0
 6c0:	ldr	r3, [r3]
 6c4:	cmp	r3, #20
 6c8:	bne	6f0 <coda_match_filepath+0x8c>
 6cc:	ldr	r3, [fp, #-112]	; 0xffffff90
 6d0:	ldr	r0, [r3, #8]
 6d4:	ldr	r4, [fp, #-116]	; 0xffffff8c
 6d8:	ldr	r3, [fp, #4]
 6dc:	ldr	r2, [pc, #224]	; 7c4 <coda_match_filepath+0x160>
 6e0:	mov	r1, #0
 6e4:	blx	r4
 6e8:	mov	r3, r0
 6ec:	b	7b8 <coda_match_filepath+0x154>
 6f0:	ldr	r3, [fp, #-112]	; 0xffffff90
 6f4:	ldr	r5, [r3, #8]
 6f8:	bl	0 <__errno_location>
 6fc:	mov	r3, r0
 700:	ldr	r3, [r3]
 704:	mov	r0, r3
 708:	bl	0 <strerror>
 70c:	mov	r2, r0
 710:	ldr	r4, [fp, #-116]	; 0xffffff8c
 714:	ldr	r3, [fp, #4]
 718:	mov	r1, #0
 71c:	mov	r0, r5
 720:	blx	r4
 724:	mov	r3, r0
 728:	b	7b8 <coda_match_filepath+0x154>
 72c:	ldr	r3, [fp, #-84]	; 0xffffffac
 730:	and	r3, r3, #16384	; 0x4000
 734:	cmp	r3, #0
 738:	beq	758 <coda_match_filepath+0xf4>
 73c:	ldr	r3, [fp, #4]
 740:	ldr	r2, [fp, #-116]	; 0xffffff8c
 744:	ldr	r1, [fp, #-112]	; 0xffffff90
 748:	ldr	r0, [fp, #-108]	; 0xffffff94
 74c:	bl	4f0 <coda_match_dir>
 750:	mov	r3, r0
 754:	b	7b8 <coda_match_filepath+0x154>
 758:	ldr	r3, [fp, #-84]	; 0xffffffac
 75c:	and	r3, r3, #32768	; 0x8000
 760:	cmp	r3, #0
 764:	beq	784 <coda_match_filepath+0x120>
 768:	ldr	r3, [fp, #4]
 76c:	ldr	r2, [fp, #-116]	; 0xffffff8c
 770:	ldr	r1, [fp, #-112]	; 0xffffff90
 774:	ldr	r0, [fp, #-108]	; 0xffffff94
 778:	bl	2a0 <coda_match_file>
 77c:	mov	r3, r0
 780:	b	7b8 <coda_match_filepath+0x154>
 784:	ldr	r3, [fp, #-104]	; 0xffffff98
 788:	cmp	r3, #0
 78c:	bne	7b4 <coda_match_filepath+0x150>
 790:	ldr	r3, [fp, #-112]	; 0xffffff90
 794:	ldr	r0, [r3, #8]
 798:	ldr	r4, [fp, #-116]	; 0xffffff8c
 79c:	ldr	r3, [fp, #4]
 7a0:	ldr	r2, [pc, #32]	; 7c8 <coda_match_filepath+0x164>
 7a4:	mov	r1, #0
 7a8:	blx	r4
 7ac:	mov	r3, r0
 7b0:	b	7b8 <coda_match_filepath+0x154>
 7b4:	mov	r3, #0
 7b8:	mov	r0, r3
 7bc:	sub	sp, fp, #12
 7c0:	pop	{r4, r5, fp, pc}
 7c4:	.word	0x000000c8
 7c8:	.word	0x000000e4

000007cc <coda_match_filefilter>:
 7cc:	push	{fp, lr}
 7d0:	add	fp, sp, #4
 7d4:	sub	sp, sp, #56	; 0x38
 7d8:	str	r0, [fp, #-40]	; 0xffffffd8
 7dc:	str	r1, [fp, #-44]	; 0xffffffd4
 7e0:	str	r2, [fp, #-48]	; 0xffffffd0
 7e4:	str	r3, [fp, #-52]	; 0xffffffcc
 7e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
 7ec:	cmp	r3, #0
 7f0:	ble	80c <coda_match_filefilter+0x40>
 7f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
 7f8:	cmp	r3, #0
 7fc:	beq	80c <coda_match_filefilter+0x40>
 800:	ldr	r3, [fp, #-52]	; 0xffffffcc
 804:	cmp	r3, #0
 808:	bne	828 <coda_match_filefilter+0x5c>
 80c:	ldr	r3, [pc, #412]	; 9b0 <coda_match_filefilter+0x1e4>
 810:	ldr	r2, [pc, #412]	; 9b4 <coda_match_filefilter+0x1e8>
 814:	ldr	r1, [pc, #412]	; 9b8 <coda_match_filefilter+0x1ec>
 818:	mvn	r0, #99	; 0x63
 81c:	bl	0 <coda_set_error>
 820:	mvn	r3, #0
 824:	b	9a4 <coda_match_filefilter+0x1d8>
 828:	ldr	r3, [fp, #-40]	; 0xffffffd8
 82c:	cmp	r3, #0
 830:	beq	844 <coda_match_filefilter+0x78>
 834:	ldr	r3, [fp, #-40]	; 0xffffffd8
 838:	ldrb	r3, [r3]
 83c:	cmp	r3, #0
 840:	bne	84c <coda_match_filefilter+0x80>
 844:	ldr	r3, [pc, #368]	; 9bc <coda_match_filefilter+0x1f0>
 848:	str	r3, [fp, #-40]	; 0xffffffd8
 84c:	sub	r3, fp, #32
 850:	mov	r1, r3
 854:	ldr	r0, [fp, #-40]	; 0xffffffd8
 858:	bl	0 <coda_expression_from_string>
 85c:	mov	r3, r0
 860:	cmp	r3, #0
 864:	beq	870 <coda_match_filefilter+0xa4>
 868:	mvn	r3, #0
 86c:	b	9a4 <coda_match_filefilter+0x1d8>
 870:	ldr	r3, [fp, #-32]	; 0xffffffe0
 874:	sub	r2, fp, #28
 878:	mov	r1, r2
 87c:	mov	r0, r3
 880:	bl	0 <coda_expression_get_type>
 884:	mov	r3, r0
 888:	cmp	r3, #0
 88c:	beq	8a4 <coda_match_filefilter+0xd8>
 890:	ldr	r3, [fp, #-32]	; 0xffffffe0
 894:	mov	r0, r3
 898:	bl	0 <coda_expression_delete>
 89c:	mvn	r3, #0
 8a0:	b	9a4 <coda_match_filefilter+0x1d8>
 8a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 8a8:	cmp	r3, #0
 8ac:	beq	8d0 <coda_match_filefilter+0x104>
 8b0:	ldr	r1, [pc, #264]	; 9c0 <coda_match_filefilter+0x1f4>
 8b4:	mvn	r0, #400	; 0x190
 8b8:	bl	0 <coda_set_error>
 8bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
 8c0:	mov	r0, r3
 8c4:	bl	0 <coda_expression_delete>
 8c8:	mvn	r3, #0
 8cc:	b	9a4 <coda_match_filefilter+0x1d8>
 8d0:	sub	r3, fp, #24
 8d4:	mov	r0, r3
 8d8:	bl	0 <name_buffer_init>
 8dc:	mov	r3, #0
 8e0:	str	r3, [fp, #-8]
 8e4:	b	978 <coda_match_filefilter+0x1ac>
 8e8:	ldr	r3, [fp, #-8]
 8ec:	lsl	r3, r3, #2
 8f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
 8f4:	add	r3, r2, r3
 8f8:	ldr	r2, [r3]
 8fc:	sub	r3, fp, #24
 900:	mov	r1, r2
 904:	mov	r0, r3
 908:	bl	11c <append_string_to_name_buffer>
 90c:	ldr	r1, [fp, #-32]	; 0xffffffe0
 910:	sub	r2, fp, #24
 914:	ldr	r3, [fp, #4]
 918:	str	r3, [sp]
 91c:	ldr	r3, [fp, #-52]	; 0xffffffcc
 920:	mov	r0, #0
 924:	bl	664 <coda_match_filepath>
 928:	str	r0, [fp, #-12]
 92c:	ldr	r3, [fp, #-12]
 930:	cmp	r3, #0
 934:	beq	958 <coda_match_filefilter+0x18c>
 938:	sub	r3, fp, #24
 93c:	mov	r0, r3
 940:	bl	a0 <name_buffer_done>
 944:	ldr	r3, [fp, #-32]	; 0xffffffe0
 948:	mov	r0, r3
 94c:	bl	0 <coda_expression_delete>
 950:	ldr	r3, [fp, #-12]
 954:	b	9a4 <coda_match_filefilter+0x1d8>
 958:	mov	r3, #0
 95c:	str	r3, [fp, #-24]	; 0xffffffe8
 960:	ldr	r3, [fp, #-16]
 964:	mov	r2, #0
 968:	strb	r2, [r3]
 96c:	ldr	r3, [fp, #-8]
 970:	add	r3, r3, #1
 974:	str	r3, [fp, #-8]
 978:	ldr	r2, [fp, #-8]
 97c:	ldr	r3, [fp, #-44]	; 0xffffffd4
 980:	cmp	r2, r3
 984:	blt	8e8 <coda_match_filefilter+0x11c>
 988:	sub	r3, fp, #24
 98c:	mov	r0, r3
 990:	bl	a0 <name_buffer_done>
 994:	ldr	r3, [fp, #-32]	; 0xffffffe0
 998:	mov	r0, r3
 99c:	bl	0 <coda_expression_delete>
 9a0:	mov	r3, #0
 9a4:	mov	r0, r3
 9a8:	sub	sp, fp, #4
 9ac:	pop	{fp, pc}
 9b0:	.word	0x00000182
 9b4:	.word	0x00000000
 9b8:	.word	0x00000104
 9bc:	.word	0x00000120
 9c0:	.word	0x00000128
