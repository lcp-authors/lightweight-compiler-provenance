
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-mem-type.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_mem_type_delete>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #16
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	str	r4, [sp, #8]
      14:	str	r5, [sp, #12]
      18:	mov	r4, r0
      1c:	cmp	r4, #0
      20:	bne	38 <coda_mem_type_delete+0x38>
      24:	ldr	r0, [pc, #328]	; 174 <coda_mem_type_delete+0x174>
      28:	ldr	r1, [pc, #328]	; 178 <coda_mem_type_delete+0x178>
      2c:	mov	r2, #42	; 0x2a
      30:	ldr	r3, [pc, #308]	; 16c <coda_mem_type_delete+0x16c>
      34:	bl	0 <__assert_fail>
      38:	ldr	r0, [r4]
      3c:	cmp	r0, #100	; 0x64
      40:	beq	58 <coda_mem_type_delete+0x58>
      44:	ldr	r0, [pc, #292]	; 170 <coda_mem_type_delete+0x170>
      48:	ldr	r1, [pc, #296]	; 178 <coda_mem_type_delete+0x178>
      4c:	mov	r2, #43	; 0x2b
      50:	ldr	r3, [pc, #276]	; 16c <coda_mem_type_delete+0x16c>
      54:	bl	0 <__assert_fail>
      58:	ldr	r1, [r4, #8]
      5c:	cmp	r1, #2
      60:	bcs	104 <coda_mem_type_delete+0x104>
      64:	cmp	r1, #0
      68:	bne	b8 <coda_mem_type_delete+0xb8>
      6c:	ldr	r0, [r4, #20]
      70:	cmp	r0, #0
      74:	beq	128 <coda_mem_type_delete+0x128>
      78:	mov	r5, #0
      7c:	ldr	r0, [r4, #16]
      80:	cmp	r5, r0
      84:	bge	ac <coda_mem_type_delete+0xac>
      88:	ldr	ip, [r4, #20]
      8c:	ldr	r1, [ip, r5, lsl #2]
      90:	cmp	r1, #0
      94:	beq	a4 <coda_mem_type_delete+0xa4>
      98:	ldr	r2, [r4, #20]
      9c:	ldr	r0, [r2, r5, lsl #2]
      a0:	bl	0 <coda_dynamic_type_delete>
      a4:	add	r5, r5, #1
      a8:	b	7c <coda_mem_type_delete+0x7c>
      ac:	ldr	r0, [r4, #20]
      b0:	bl	0 <free>
      b4:	b	128 <coda_mem_type_delete+0x128>
      b8:	ldr	r3, [r4, #20]
      bc:	cmp	r3, #0
      c0:	beq	128 <coda_mem_type_delete+0x128>
      c4:	mov	r5, #0
      c8:	ldr	r1, [r4, #16]
      cc:	cmp	r5, r1
      d0:	bge	f8 <coda_mem_type_delete+0xf8>
      d4:	ldr	r2, [r4, #20]
      d8:	ldr	r2, [r2, r5, lsl #2]
      dc:	cmp	r2, #0
      e0:	beq	f0 <coda_mem_type_delete+0xf0>
      e4:	ldr	r3, [r4, #20]
      e8:	ldr	r0, [r3, r5, lsl #2]
      ec:	bl	0 <coda_dynamic_type_delete>
      f0:	add	r5, r5, #1
      f4:	b	c8 <coda_mem_type_delete+0xc8>
      f8:	ldr	r0, [r4, #20]
      fc:	bl	0 <free>
     100:	b	128 <coda_mem_type_delete+0x128>
     104:	cmp	r1, #2
     108:	beq	128 <coda_mem_type_delete+0x128>
     10c:	cmp	r1, #3
     110:	bne	128 <coda_mem_type_delete+0x128>
     114:	ldr	ip, [r4, #16]
     118:	cmp	ip, #0
     11c:	beq	128 <coda_mem_type_delete+0x128>
     120:	ldr	r0, [r4, #16]
     124:	bl	0 <coda_dynamic_type_delete>
     128:	ldr	r1, [r4, #12]
     12c:	cmp	r1, #0
     130:	beq	13c <coda_mem_type_delete+0x13c>
     134:	ldr	r0, [r4, #12]
     138:	bl	0 <coda_dynamic_type_delete>
     13c:	ldr	ip, [r4, #4]
     140:	cmp	ip, #0
     144:	beq	150 <coda_mem_type_delete+0x150>
     148:	ldr	r0, [r4, #4]
     14c:	bl	0 <coda_type_release>
     150:	mov	r0, r4
     154:	bl	0 <free>
     158:	ldr	r4, [sp, #8]
     15c:	ldr	r5, [sp, #12]
     160:	ldr	lr, [sp, #4]
     164:	add	sp, sp, #16
     168:	bx	lr
     16c:	.word	0x00000b25
     170:	.word	0x0000016b
     174:	.word	0x0000035b
     178:	.word	0x00000048

0000017c <coda_mem_type_update>:
     17c:	mov	ip, sp
     180:	sub	sp, sp, #32
     184:	str	ip, [sp, #4]
     188:	str	lr, [sp, #8]
     18c:	str	r4, [sp, #16]
     190:	str	r5, [sp, #20]
     194:	str	r6, [sp, #24]
     198:	mov	r5, r1
     19c:	mov	r4, r0
     1a0:	ldr	r0, [r4]
     1a4:	ldr	r2, [r0]
     1a8:	cmp	r2, #0
     1ac:	beq	1c8 <coda_mem_type_update+0x4c>
     1b0:	ldr	r3, [r4]
     1b4:	ldr	r0, [r3]
     1b8:	cmp	r0, #1
     1bc:	moveq	r3, #1
     1c0:	movne	r3, #0
     1c4:	b	1cc <coda_mem_type_update+0x50>
     1c8:	mov	r3, #1
     1cc:	cmp	r3, #0
     1d0:	beq	218 <coda_mem_type_update+0x9c>
     1d4:	ldr	r3, [r4]
     1d8:	ldr	r3, [r3]
     1dc:	cmp	r3, #100	; 0x64
     1e0:	blt	1f0 <coda_mem_type_update+0x74>
     1e4:	ldr	r2, [r4]
     1e8:	ldr	r1, [r2, #4]
     1ec:	b	1f4 <coda_mem_type_update+0x78>
     1f0:	ldr	r1, [r4]
     1f4:	cmp	r1, r5
     1f8:	beq	210 <coda_mem_type_update+0x94>
     1fc:	ldr	r0, [pc, #1084]	; 640 <coda_mem_type_update+0x4c4>
     200:	ldr	r1, [pc, #1104]	; 658 <coda_mem_type_update+0x4dc>
     204:	mov	r2, #104	; 0x68
     208:	ldr	r3, [pc, #1084]	; 64c <coda_mem_type_update+0x4d0>
     20c:	bl	0 <__assert_fail>
     210:	mov	r0, #0
     214:	b	620 <coda_mem_type_update+0x4a4>
     218:	ldr	r3, [r4]
     21c:	ldr	r2, [r3]
     220:	cmp	r2, #100	; 0x64
     224:	beq	23c <coda_mem_type_update+0xc0>
     228:	ldr	r0, [pc, #1036]	; 63c <coda_mem_type_update+0x4c0>
     22c:	ldr	r1, [pc, #1060]	; 658 <coda_mem_type_update+0x4dc>
     230:	mov	r2, #108	; 0x6c
     234:	ldr	r3, [pc, #1040]	; 64c <coda_mem_type_update+0x4d0>
     238:	bl	0 <__assert_fail>
     23c:	ldr	r2, [r4]
     240:	ldr	r1, [r2, #4]
     244:	cmp	r1, r5
     248:	beq	3fc <coda_mem_type_update+0x280>
     24c:	ldr	r2, [r5, #8]
     250:	cmp	r2, #1
     254:	bne	274 <coda_mem_type_update+0xf8>
     258:	ldr	r0, [r4]
     25c:	ldr	r0, [r0, #4]
     260:	ldr	r1, [r0, #8]
     264:	cmp	r1, #1
     268:	movne	r2, #1
     26c:	moveq	r2, #0
     270:	b	278 <coda_mem_type_update+0xfc>
     274:	mov	r2, #0
     278:	cmp	r2, #0
     27c:	beq	31c <coda_mem_type_update+0x1a0>
     280:	ldr	r3, [r5]
     284:	cmp	r3, #2
     288:	beq	2a0 <coda_mem_type_update+0x124>
     28c:	ldr	r0, [pc, #932]	; 638 <coda_mem_type_update+0x4bc>
     290:	ldr	r1, [pc, #960]	; 658 <coda_mem_type_update+0x4dc>
     294:	mov	r2, #114	; 0x72
     298:	ldr	r3, [pc, #940]	; 64c <coda_mem_type_update+0x4d0>
     29c:	bl	0 <__assert_fail>
     2a0:	mov	r1, #0
     2a4:	mov	r0, r5
     2a8:	bl	10d8 <coda_mem_array_new>
     2ac:	mov	r6, r0
     2b0:	cmp	r6, #0
     2b4:	bne	2c0 <coda_mem_type_update+0x144>
     2b8:	mvn	r0, #0
     2bc:	b	620 <coda_mem_type_update+0x4a4>
     2c0:	ldr	r1, [r5, #40]	; 0x28
     2c4:	mov	r0, r4
     2c8:	bl	17c <coda_mem_type_update>
     2cc:	cmp	r0, #0
     2d0:	beq	2e4 <coda_mem_type_update+0x168>
     2d4:	mov	r0, r6
     2d8:	bl	0 <coda_dynamic_type_delete>
     2dc:	mvn	r0, #0
     2e0:	b	620 <coda_mem_type_update+0x4a4>
     2e4:	ldr	r1, [r4]
     2e8:	mov	r0, r6
     2ec:	bl	13e0 <coda_mem_array_add_element>
     2f0:	cmp	r0, #0
     2f4:	beq	308 <coda_mem_type_update+0x18c>
     2f8:	mov	r0, r6
     2fc:	bl	0 <coda_dynamic_type_delete>
     300:	mvn	r0, #0
     304:	b	620 <coda_mem_type_update+0x4a4>
     308:	str	r6, [r4]
     30c:	mov	r1, r5
     310:	mov	r0, r4
     314:	bl	17c <coda_mem_type_update>
     318:	b	620 <coda_mem_type_update+0x4a4>
     31c:	ldr	r3, [r4]
     320:	ldr	r2, [r3, #4]
     324:	ldr	r1, [r2, #8]
     328:	cmp	r1, #0
     32c:	bne	344 <coda_mem_type_update+0x1c8>
     330:	ldr	r2, [r5, #8]
     334:	cmp	r2, #4
     338:	moveq	r3, #1
     33c:	movne	r3, #0
     340:	b	348 <coda_mem_type_update+0x1cc>
     344:	mov	r3, #0
     348:	cmp	r3, #0
     34c:	beq	3e0 <coda_mem_type_update+0x264>
     350:	ldr	r1, [r4]
     354:	ldr	r0, [r1, #4]
     358:	ldr	r1, [r0]
     35c:	cmp	r1, #2
     360:	beq	378 <coda_mem_type_update+0x1fc>
     364:	ldr	r0, [pc, #744]	; 654 <coda_mem_type_update+0x4d8>
     368:	ldr	r1, [pc, #744]	; 658 <coda_mem_type_update+0x4dc>
     36c:	mov	r2, #141	; 0x8d
     370:	ldr	r3, [pc, #724]	; 64c <coda_mem_type_update+0x4d0>
     374:	bl	0 <__assert_fail>
     378:	ldr	r1, [r4]
     37c:	ldr	r0, [r1, #4]
     380:	ldr	r0, [r0, #48]	; 0x30
     384:	cmp	r0, #0
     388:	beq	3a0 <coda_mem_type_update+0x224>
     38c:	ldr	r0, [pc, #692]	; 648 <coda_mem_type_update+0x4cc>
     390:	ldr	r1, [pc, #704]	; 658 <coda_mem_type_update+0x4dc>
     394:	mov	r2, #142	; 0x8e
     398:	ldr	r3, [pc, #684]	; 64c <coda_mem_type_update+0x4d0>
     39c:	bl	0 <__assert_fail>
     3a0:	mov	r1, #0
     3a4:	mov	r2, #0
     3a8:	mov	r3, #0
     3ac:	mov	r0, r5
     3b0:	bl	22f8 <coda_mem_string_new>
     3b4:	mov	r5, r0
     3b8:	ldr	r3, [r4]
     3bc:	ldr	r0, [r3, #12]
     3c0:	str	r0, [r5, #12]
     3c4:	ldr	r0, [r4]
     3c8:	mov	ip, #0
     3cc:	str	ip, [r0, #12]
     3d0:	ldr	r0, [r4]
     3d4:	bl	0 <coda_dynamic_type_delete>
     3d8:	str	r5, [r4]
     3dc:	b	3fc <coda_mem_type_update+0x280>
     3e0:	ldr	r0, [pc, #604]	; 644 <coda_mem_type_update+0x4c8>
     3e4:	ldr	r1, [pc, #620]	; 658 <coda_mem_type_update+0x4dc>
     3e8:	mov	r2, #153	; 0x99
     3ec:	ldr	r3, [pc, #600]	; 64c <coda_mem_type_update+0x4d0>
     3f0:	bl	0 <__assert_fail>
     3f4:	mov	r0, #1
     3f8:	bl	0 <exit>
     3fc:	ldr	r4, [r4]
     400:	ldr	ip, [r4, #8]
     404:	cmp	ip, #2
     408:	bcs	568 <coda_mem_type_update+0x3ec>
     40c:	cmp	ip, #0
     410:	bne	52c <coda_mem_type_update+0x3b0>
     414:	ldr	ip, [r4, #16]
     418:	ldr	r1, [r4, #4]
     41c:	ldr	r0, [r1, #48]	; 0x30
     420:	cmp	ip, r0
     424:	bge	4a8 <coda_mem_type_update+0x32c>
     428:	ldr	r0, [r4, #20]
     42c:	ldr	r3, [r4, #4]
     430:	ldr	r1, [r3, #48]	; 0x30
     434:	lsl	r1, r1, #2
     438:	bl	0 <realloc>
     43c:	cmp	r0, #0
     440:	bne	470 <coda_mem_type_update+0x2f4>
     444:	mvn	r0, #0
     448:	ldr	r1, [pc, #512]	; 650 <coda_mem_type_update+0x4d4>
     44c:	ldr	r2, [r4, #4]
     450:	ldr	r2, [r2, #48]	; 0x30
     454:	lsl	r2, r2, #2
     458:	ldr	r3, [pc, #504]	; 658 <coda_mem_type_update+0x4dc>
     45c:	mov	ip, #177	; 0xb1
     460:	str	ip, [sp]
     464:	bl	0 <coda_set_error>
     468:	mvn	r0, #0
     46c:	b	620 <coda_mem_type_update+0x4a4>
     470:	str	r0, [r4, #20]
     474:	ldr	r3, [r4, #16]
     478:	ldr	r0, [r4, #4]
     47c:	ldr	r1, [r0, #48]	; 0x30
     480:	cmp	r3, r1
     484:	bge	49c <coda_mem_type_update+0x320>
     488:	ldr	r2, [r4, #20]
     48c:	mov	r0, #0
     490:	str	r0, [r2, r3, lsl #2]
     494:	add	r3, r3, #1
     498:	b	478 <coda_mem_type_update+0x2fc>
     49c:	ldr	r0, [r4, #4]
     4a0:	ldr	ip, [r0, #48]	; 0x30
     4a4:	str	ip, [r4, #16]
     4a8:	mov	r5, #0
     4ac:	ldr	r0, [r4, #4]
     4b0:	ldr	r1, [r0, #48]	; 0x30
     4b4:	cmp	r5, r1
     4b8:	bge	598 <coda_mem_type_update+0x41c>
     4bc:	ldr	r2, [r4, #20]
     4c0:	ldr	r1, [r2, r5, lsl #2]
     4c4:	cmp	r1, #0
     4c8:	beq	4f8 <coda_mem_type_update+0x37c>
     4cc:	ldr	ip, [r4, #20]
     4d0:	add	r0, ip, r5, lsl #2
     4d4:	ldr	r1, [r4, #4]
     4d8:	ldr	ip, [r1, #52]	; 0x34
     4dc:	ldr	r3, [ip, r5, lsl #2]
     4e0:	ldr	r1, [r3, #8]
     4e4:	bl	17c <coda_mem_type_update>
     4e8:	cmp	r0, #0
     4ec:	beq	524 <coda_mem_type_update+0x3a8>
     4f0:	mvn	r0, #0
     4f4:	b	620 <coda_mem_type_update+0x4a4>
     4f8:	ldr	r3, [r4, #4]
     4fc:	ldr	ip, [r3, #52]	; 0x34
     500:	ldr	ip, [ip, r5, lsl #2]
     504:	ldrb	ip, [ip, #16]
     508:	cmp	ip, #0
     50c:	bne	524 <coda_mem_type_update+0x3a8>
     510:	ldr	r1, [r4, #4]
     514:	ldr	r3, [r1, #52]	; 0x34
     518:	ldr	r1, [r3, r5, lsl #2]
     51c:	mov	ip, #1
     520:	strb	ip, [r1, #16]
     524:	add	r5, r5, #1
     528:	b	4ac <coda_mem_type_update+0x330>
     52c:	mov	r5, #0
     530:	ldr	r2, [r4, #16]
     534:	cmp	r5, r2
     538:	bge	598 <coda_mem_type_update+0x41c>
     53c:	ldr	r1, [r4, #20]
     540:	add	r0, r1, r5, lsl #2
     544:	ldr	ip, [r4, #4]
     548:	ldr	r1, [ip, #40]	; 0x28
     54c:	bl	17c <coda_mem_type_update>
     550:	cmp	r0, #0
     554:	beq	560 <coda_mem_type_update+0x3e4>
     558:	mvn	r0, #0
     55c:	b	620 <coda_mem_type_update+0x4a4>
     560:	add	r5, r5, #1
     564:	b	530 <coda_mem_type_update+0x3b4>
     568:	cmp	ip, #2
     56c:	beq	598 <coda_mem_type_update+0x41c>
     570:	cmp	ip, #3
     574:	bne	598 <coda_mem_type_update+0x41c>
     578:	add	r0, r4, #16
     57c:	ldr	r3, [r4, #4]
     580:	ldr	r1, [r3, #44]	; 0x2c
     584:	bl	17c <coda_mem_type_update>
     588:	cmp	r0, #0
     58c:	beq	598 <coda_mem_type_update+0x41c>
     590:	mvn	r0, #0
     594:	b	620 <coda_mem_type_update+0x4a4>
     598:	ldr	ip, [r4, #12]
     59c:	cmp	ip, #0
     5a0:	bne	5bc <coda_mem_type_update+0x440>
     5a4:	ldr	r1, [r4, #4]
     5a8:	ldr	r2, [r1, #36]	; 0x24
     5ac:	cmp	r2, #0
     5b0:	movne	r3, #1
     5b4:	moveq	r3, #0
     5b8:	b	5c0 <coda_mem_type_update+0x444>
     5bc:	mov	r3, #0
     5c0:	cmp	r3, #0
     5c4:	beq	5f0 <coda_mem_type_update+0x474>
     5c8:	ldr	ip, [r4, #4]
     5cc:	ldr	r0, [ip, #36]	; 0x24
     5d0:	mov	r1, #0
     5d4:	bl	bc0 <coda_mem_record_new>
     5d8:	str	r0, [r4, #12]
     5dc:	ldr	r0, [r4, #12]
     5e0:	cmp	r0, #0
     5e4:	bne	5f0 <coda_mem_type_update+0x474>
     5e8:	mvn	r0, #0
     5ec:	b	620 <coda_mem_type_update+0x4a4>
     5f0:	ldr	ip, [r4, #12]
     5f4:	cmp	ip, #0
     5f8:	beq	61c <coda_mem_type_update+0x4a0>
     5fc:	add	r0, r4, #12
     600:	ldr	r3, [r4, #4]
     604:	ldr	r1, [r3, #36]	; 0x24
     608:	bl	17c <coda_mem_type_update>
     60c:	cmp	r0, #0
     610:	beq	61c <coda_mem_type_update+0x4a0>
     614:	mvn	r0, #0
     618:	b	620 <coda_mem_type_update+0x4a4>
     61c:	mov	r0, #0
     620:	ldr	r4, [sp, #16]
     624:	ldr	r5, [sp, #20]
     628:	ldr	r6, [sp, #24]
     62c:	ldr	lr, [sp, #8]
     630:	add	sp, sp, #32
     634:	bx	lr
     638:	.word	0x00000000
     63c:	.word	0x00000602
     640:	.word	0x00000541
     644:	.word	0x00000893
     648:	.word	0x000007e5
     64c:	.word	0x00000b3a
     650:	.word	0x00000916
     654:	.word	0x000006e1
     658:	.word	0x00000048

0000065c <create_attributes_record>:
     65c:	mov	ip, sp
     660:	sub	sp, sp, #16
     664:	str	ip, [sp]
     668:	str	lr, [sp, #4]
     66c:	str	r4, [sp, #8]
     670:	mov	r4, r0
     674:	ldr	r3, [r4, #4]
     678:	ldr	r2, [r3, #36]	; 0x24
     67c:	cmp	r2, #0
     680:	beq	6ac <create_attributes_record+0x50>
     684:	ldr	r0, [r4, #4]
     688:	ldr	r0, [r0, #36]	; 0x24
     68c:	mov	r1, #0
     690:	bl	bc0 <coda_mem_record_new>
     694:	str	r0, [r4, #12]
     698:	ldr	r0, [r4, #12]
     69c:	cmp	r0, #0
     6a0:	bne	6ac <create_attributes_record+0x50>
     6a4:	mvn	r0, #0
     6a8:	b	6b0 <create_attributes_record+0x54>
     6ac:	mov	r0, #0
     6b0:	ldr	r4, [sp, #8]
     6b4:	ldr	lr, [sp, #4]
     6b8:	add	sp, sp, #16
     6bc:	bx	lr

000006c0 <coda_mem_type_add_attribute>:
     6c0:	mov	ip, sp
     6c4:	sub	sp, sp, #40	; 0x28
     6c8:	str	ip, [sp, #4]
     6cc:	str	lr, [sp, #8]
     6d0:	str	r4, [sp, #16]
     6d4:	str	r5, [sp, #20]
     6d8:	str	r6, [sp, #24]
     6dc:	str	r7, [sp, #28]
     6e0:	str	r8, [sp, #32]
     6e4:	mov	r8, r3
     6e8:	mov	r7, r2
     6ec:	mov	r4, r1
     6f0:	mov	r5, r0
     6f4:	cmp	r5, #0
     6f8:	bne	718 <coda_mem_type_add_attribute+0x58>
     6fc:	mvn	r0, #99	; 0x63
     700:	ldr	r1, [pc, #868]	; a6c <coda_mem_type_add_attribute+0x3ac>
     704:	ldr	r2, [pc, #880]	; a7c <coda_mem_type_add_attribute+0x3bc>
     708:	mov	r3, #272	; 0x110
     70c:	bl	0 <coda_set_error>
     710:	mvn	r0, #0
     714:	b	a34 <coda_mem_type_add_attribute+0x374>
     718:	cmp	r4, #0
     71c:	bne	73c <coda_mem_type_add_attribute+0x7c>
     720:	mvn	r0, #99	; 0x63
     724:	ldr	r1, [pc, #836]	; a70 <coda_mem_type_add_attribute+0x3b0>
     728:	ldr	r2, [pc, #844]	; a7c <coda_mem_type_add_attribute+0x3bc>
     72c:	movw	r3, #277	; 0x115
     730:	bl	0 <coda_set_error>
     734:	mvn	r0, #0
     738:	b	a34 <coda_mem_type_add_attribute+0x374>
     73c:	cmp	r7, #0
     740:	bne	760 <coda_mem_type_add_attribute+0xa0>
     744:	mvn	r0, #99	; 0x63
     748:	ldr	r1, [pc, #804]	; a74 <coda_mem_type_add_attribute+0x3b4>
     74c:	ldr	r2, [pc, #808]	; a7c <coda_mem_type_add_attribute+0x3bc>
     750:	movw	r3, #282	; 0x11a
     754:	bl	0 <coda_set_error>
     758:	mvn	r0, #0
     75c:	b	a34 <coda_mem_type_add_attribute+0x374>
     760:	ldr	r2, [r5, #12]
     764:	cmp	r2, #0
     768:	beq	7c8 <coda_mem_type_add_attribute+0x108>
     76c:	ldr	ip, [r5, #12]
     770:	ldr	r1, [ip]
     774:	cmp	r1, #100	; 0x64
     778:	beq	798 <coda_mem_type_add_attribute+0xd8>
     77c:	mvn	r0, #99	; 0x63
     780:	ldr	r1, [pc, #736]	; a68 <coda_mem_type_add_attribute+0x3a8>
     784:	ldr	r2, [pc, #752]	; a7c <coda_mem_type_add_attribute+0x3bc>
     788:	movw	r3, #315	; 0x13b
     78c:	bl	0 <coda_set_error>
     790:	mvn	r0, #0
     794:	b	a34 <coda_mem_type_add_attribute+0x374>
     798:	ldr	ip, [r5, #4]
     79c:	ldr	r3, [ip, #36]	; 0x24
     7a0:	ldr	ip, [r5, #12]
     7a4:	ldr	r2, [ip, #4]
     7a8:	cmp	r3, r2
     7ac:	beq	834 <coda_mem_type_add_attribute+0x174>
     7b0:	ldr	r0, [pc, #672]	; a58 <coda_mem_type_add_attribute+0x398>
     7b4:	ldr	r1, [pc, #704]	; a7c <coda_mem_type_add_attribute+0x3bc>
     7b8:	movw	r2, #318	; 0x13e
     7bc:	ldr	r3, [pc, #668]	; a60 <coda_mem_type_add_attribute+0x3a0>
     7c0:	bl	0 <__assert_fail>
     7c4:	b	834 <coda_mem_type_add_attribute+0x174>
     7c8:	cmp	r8, #0
     7cc:	beq	a14 <coda_mem_type_add_attribute+0x354>
     7d0:	ldr	r1, [r5, #4]
     7d4:	ldr	ip, [r1, #36]	; 0x24
     7d8:	cmp	ip, #0
     7dc:	bne	80c <coda_mem_type_add_attribute+0x14c>
     7e0:	ldr	r2, [r5, #4]
     7e4:	ldr	r0, [r2]
     7e8:	bl	0 <coda_type_record_new>
     7ec:	ldr	r1, [r5, #4]
     7f0:	str	r0, [r1, #36]	; 0x24
     7f4:	ldr	r2, [r5, #4]
     7f8:	ldr	r3, [r2, #36]	; 0x24
     7fc:	cmp	r3, #0
     800:	bne	80c <coda_mem_type_add_attribute+0x14c>
     804:	mvn	r0, #0
     808:	b	a34 <coda_mem_type_add_attribute+0x374>
     80c:	ldr	r1, [r5, #4]
     810:	ldr	r0, [r1, #36]	; 0x24
     814:	mov	r1, #0
     818:	bl	bc0 <coda_mem_record_new>
     81c:	str	r0, [r5, #12]
     820:	ldr	r3, [r5, #12]
     824:	cmp	r3, #0
     828:	bne	834 <coda_mem_type_add_attribute+0x174>
     82c:	mvn	r0, #0
     830:	b	a34 <coda_mem_type_add_attribute+0x374>
     834:	ldr	r6, [r5, #12]
     838:	ldr	r0, [r6, #4]
     83c:	ldr	r0, [r0, #44]	; 0x2c
     840:	mov	r1, r4
     844:	bl	0 <coda_hashtable_get_index_from_name>
     848:	mov	r5, r0
     84c:	cmp	r8, #0
     850:	beq	964 <coda_mem_type_add_attribute+0x2a4>
     854:	cmp	r5, #0
     858:	blt	894 <coda_mem_type_add_attribute+0x1d4>
     85c:	ldr	r0, [r6, #16]
     860:	cmp	r5, r0
     864:	bge	88c <coda_mem_type_add_attribute+0x1cc>
     868:	ldr	r3, [r6, #20]
     86c:	ldr	r2, [r3, r5, lsl #2]
     870:	cmp	r2, #0
     874:	movne	r1, #1
     878:	moveq	r1, #0
     87c:	cmp	r1, #0
     880:	movne	r2, #1
     884:	moveq	r2, #0
     888:	b	898 <coda_mem_type_add_attribute+0x1d8>
     88c:	mov	r2, #0
     890:	b	898 <coda_mem_type_add_attribute+0x1d8>
     894:	mov	r2, #1
     898:	cmp	r2, #0
     89c:	beq	8cc <coda_mem_type_add_attribute+0x20c>
     8a0:	ldr	r0, [r6, #4]
     8a4:	ldr	r2, [r7, #4]
     8a8:	mov	r1, r4
     8ac:	bl	0 <coda_type_record_create_field>
     8b0:	cmp	r0, #0
     8b4:	beq	8c0 <coda_mem_type_add_attribute+0x200>
     8b8:	mvn	r0, #0
     8bc:	b	a34 <coda_mem_type_add_attribute+0x374>
     8c0:	ldr	r1, [r6, #4]
     8c4:	ldr	r2, [r1, #48]	; 0x30
     8c8:	sub	r5, r2, #1
     8cc:	ldr	r1, [r6, #16]
     8d0:	ldr	r2, [r6, #4]
     8d4:	ldr	r0, [r2, #48]	; 0x30
     8d8:	cmp	r1, r0
     8dc:	bge	a04 <coda_mem_type_add_attribute+0x344>
     8e0:	ldr	r0, [r6, #20]
     8e4:	ldr	ip, [r6, #4]
     8e8:	ldr	r1, [ip, #48]	; 0x30
     8ec:	lsl	r1, r1, #2
     8f0:	bl	0 <realloc>
     8f4:	cmp	r0, #0
     8f8:	bne	928 <coda_mem_type_add_attribute+0x268>
     8fc:	mvn	r0, #0
     900:	ldr	r1, [pc, #368]	; a78 <coda_mem_type_add_attribute+0x3b8>
     904:	ldr	r2, [r6, #4]
     908:	ldr	r2, [r2, #48]	; 0x30
     90c:	lsl	r2, r2, #2
     910:	ldr	r3, [pc, #356]	; a7c <coda_mem_type_add_attribute+0x3bc>
     914:	mov	ip, #344	; 0x158
     918:	str	ip, [sp]
     91c:	bl	0 <coda_set_error>
     920:	mvn	r0, #0
     924:	b	a34 <coda_mem_type_add_attribute+0x374>
     928:	str	r0, [r6, #20]
     92c:	ldr	r2, [r6, #16]
     930:	ldr	r0, [r6, #4]
     934:	ldr	ip, [r0, #48]	; 0x30
     938:	cmp	r2, ip
     93c:	bge	954 <coda_mem_type_add_attribute+0x294>
     940:	ldr	r1, [r6, #20]
     944:	mov	ip, #0
     948:	str	ip, [r1, r2, lsl #2]
     94c:	add	r2, r2, #1
     950:	b	930 <coda_mem_type_add_attribute+0x270>
     954:	ldr	r0, [r6, #4]
     958:	ldr	ip, [r0, #48]	; 0x30
     95c:	str	ip, [r6, #16]
     960:	b	a04 <coda_mem_type_add_attribute+0x344>
     964:	cmp	r5, #0
     968:	bge	990 <coda_mem_type_add_attribute+0x2d0>
     96c:	mvn	r0, #101	; 0x65
     970:	ldr	r1, [pc, #228]	; a5c <coda_mem_type_add_attribute+0x39c>
     974:	ldr	r3, [pc, #256]	; a7c <coda_mem_type_add_attribute+0x3bc>
     978:	movw	r2, #361	; 0x169
     97c:	str	r2, [sp]
     980:	mov	r2, r4
     984:	bl	0 <coda_set_error>
     988:	mvn	r0, #0
     98c:	b	a34 <coda_mem_type_add_attribute+0x374>
     990:	ldr	r3, [r6, #20]
     994:	ldr	r1, [r3, r5, lsl #2]
     998:	cmp	r1, #0
     99c:	beq	9c4 <coda_mem_type_add_attribute+0x304>
     9a0:	mvn	r0, #99	; 0x63
     9a4:	ldr	r1, [pc, #168]	; a54 <coda_mem_type_add_attribute+0x394>
     9a8:	ldr	r3, [pc, #204]	; a7c <coda_mem_type_add_attribute+0x3bc>
     9ac:	movw	r2, #367	; 0x16f
     9b0:	str	r2, [sp]
     9b4:	mov	r2, r4
     9b8:	bl	0 <coda_set_error>
     9bc:	mvn	r0, #0
     9c0:	b	a34 <coda_mem_type_add_attribute+0x374>
     9c4:	ldr	r3, [r6, #4]
     9c8:	ldr	ip, [r3, #52]	; 0x34
     9cc:	ldr	r1, [ip, r5, lsl #2]
     9d0:	ldr	r3, [r1, #8]
     9d4:	ldr	r2, [r7, #4]
     9d8:	cmp	r3, r2
     9dc:	beq	a04 <coda_mem_type_add_attribute+0x344>
     9e0:	mvn	r0, #99	; 0x63
     9e4:	ldr	r1, [pc, #120]	; a64 <coda_mem_type_add_attribute+0x3a4>
     9e8:	ldr	r3, [pc, #140]	; a7c <coda_mem_type_add_attribute+0x3bc>
     9ec:	movw	r2, #373	; 0x175
     9f0:	str	r2, [sp]
     9f4:	mov	r2, r4
     9f8:	bl	0 <coda_set_error>
     9fc:	mvn	r0, #0
     a00:	b	a34 <coda_mem_type_add_attribute+0x374>
     a04:	ldr	r0, [r6, #20]
     a08:	str	r7, [r0, r5, lsl #2]
     a0c:	mov	r0, #0
     a10:	b	a34 <coda_mem_type_add_attribute+0x374>
     a14:	mvn	r0, #101	; 0x65
     a18:	ldr	r1, [pc, #60]	; a5c <coda_mem_type_add_attribute+0x39c>
     a1c:	ldr	r3, [pc, #88]	; a7c <coda_mem_type_add_attribute+0x3bc>
     a20:	movw	ip, #307	; 0x133
     a24:	str	ip, [sp]
     a28:	mov	r2, r4
     a2c:	bl	0 <coda_set_error>
     a30:	mvn	r0, #0
     a34:	ldr	r4, [sp, #16]
     a38:	ldr	r5, [sp, #20]
     a3c:	ldr	r6, [sp, #24]
     a40:	ldr	r7, [sp, #28]
     a44:	ldr	r8, [sp, #32]
     a48:	ldr	lr, [sp, #8]
     a4c:	add	sp, sp, #40	; 0x28
     a50:	bx	lr
     a54:	.word	0x00000368
     a58:	.word	0x00000190
     a5c:	.word	0x00000767
     a60:	.word	0x00000b4f
     a64:	.word	0x00000a5a
     a68:	.word	0x000009b3
     a6c:	.word	0x0000094b
     a70:	.word	0x00000ae7
     a74:	.word	0x00000850
     a78:	.word	0x00000916
     a7c:	.word	0x00000048

00000a80 <coda_mem_type_set_attributes>:
     a80:	mov	ip, sp
     a84:	sub	sp, sp, #16
     a88:	str	ip, [sp]
     a8c:	str	lr, [sp, #4]
     a90:	str	r4, [sp, #8]
     a94:	str	r5, [sp, #12]
     a98:	mov	r4, r1
     a9c:	mov	r5, r0
     aa0:	cmp	r5, #0
     aa4:	bne	ac4 <coda_mem_type_set_attributes+0x44>
     aa8:	mvn	r0, #99	; 0x63
     aac:	ldr	r1, [pc, #252]	; bb0 <coda_mem_type_set_attributes+0x130>
     ab0:	ldr	r2, [pc, #260]	; bbc <coda_mem_type_set_attributes+0x13c>
     ab4:	movw	r3, #386	; 0x182
     ab8:	bl	0 <coda_set_error>
     abc:	mvn	r0, #0
     ac0:	b	b90 <coda_mem_type_set_attributes+0x110>
     ac4:	cmp	r4, #0
     ac8:	bne	ae8 <coda_mem_type_set_attributes+0x68>
     acc:	mvn	r0, #99	; 0x63
     ad0:	ldr	r1, [pc, #208]	; ba8 <coda_mem_type_set_attributes+0x128>
     ad4:	ldr	r2, [pc, #224]	; bbc <coda_mem_type_set_attributes+0x13c>
     ad8:	movw	r3, #391	; 0x187
     adc:	bl	0 <coda_set_error>
     ae0:	mvn	r0, #0
     ae4:	b	b90 <coda_mem_type_set_attributes+0x110>
     ae8:	ldr	r1, [r5, #12]
     aec:	cmp	r1, #0
     af0:	beq	b10 <coda_mem_type_set_attributes+0x90>
     af4:	mvn	r0, #99	; 0x63
     af8:	ldr	r1, [pc, #180]	; bb4 <coda_mem_type_set_attributes+0x134>
     afc:	ldr	r2, [pc, #184]	; bbc <coda_mem_type_set_attributes+0x13c>
     b00:	mov	r3, #396	; 0x18c
     b04:	bl	0 <coda_set_error>
     b08:	mvn	r0, #0
     b0c:	b	b90 <coda_mem_type_set_attributes+0x110>
     b10:	cmp	r2, #0
     b14:	beq	b58 <coda_mem_type_set_attributes+0xd8>
     b18:	ldr	r1, [r4, #4]
     b1c:	ldr	r2, [r1, #8]
     b20:	cmp	r2, #0
     b24:	beq	b3c <coda_mem_type_set_attributes+0xbc>
     b28:	ldr	r0, [pc, #124]	; bac <coda_mem_type_set_attributes+0x12c>
     b2c:	ldr	r1, [pc, #136]	; bbc <coda_mem_type_set_attributes+0x13c>
     b30:	movw	r2, #401	; 0x191
     b34:	ldr	r3, [pc, #124]	; bb8 <coda_mem_type_set_attributes+0x138>
     b38:	bl	0 <__assert_fail>
     b3c:	ldr	r0, [r5, #4]
     b40:	ldr	r1, [r4, #4]
     b44:	bl	0 <coda_type_set_attributes>
     b48:	cmp	r0, #0
     b4c:	beq	b88 <coda_mem_type_set_attributes+0x108>
     b50:	mvn	r0, #0
     b54:	b	b90 <coda_mem_type_set_attributes+0x110>
     b58:	ldr	ip, [r5, #4]
     b5c:	ldr	r2, [ip, #36]	; 0x24
     b60:	ldr	r0, [r4, #4]
     b64:	cmp	r2, r0
     b68:	beq	b88 <coda_mem_type_set_attributes+0x108>
     b6c:	mvn	r0, #99	; 0x63
     b70:	ldr	r1, [pc, #44]	; ba4 <coda_mem_type_set_attributes+0x124>
     b74:	ldr	r2, [pc, #64]	; bbc <coda_mem_type_set_attributes+0x13c>
     b78:	mov	r3, #412	; 0x19c
     b7c:	bl	0 <coda_set_error>
     b80:	mvn	r0, #0
     b84:	b	b90 <coda_mem_type_set_attributes+0x110>
     b88:	str	r4, [r5, #12]
     b8c:	mov	r0, #0
     b90:	ldr	r4, [sp, #8]
     b94:	ldr	r5, [sp, #12]
     b98:	ldr	lr, [sp, #4]
     b9c:	add	sp, sp, #16
     ba0:	bx	lr
     ba4:	.word	0x00000895
     ba8:	.word	0x0000079e
     bac:	.word	0x0000062a
     bb0:	.word	0x0000094b
     bb4:	.word	0x000007c2
     bb8:	.word	0x00000b6b
     bbc:	.word	0x00000048

00000bc0 <coda_mem_record_new>:
     bc0:	mov	ip, sp
     bc4:	sub	sp, sp, #32
     bc8:	str	ip, [sp, #4]
     bcc:	str	lr, [sp, #8]
     bd0:	str	r4, [sp, #16]
     bd4:	str	r5, [sp, #20]
     bd8:	str	r6, [sp, #24]
     bdc:	mov	r5, r1
     be0:	mov	r6, r0
     be4:	cmp	r6, #0
     be8:	bne	c08 <coda_mem_record_new+0x48>
     bec:	mvn	r0, #99	; 0x63
     bf0:	ldr	r1, [pc, #396]	; d84 <coda_mem_record_new+0x1c4>
     bf4:	ldr	r2, [pc, #400]	; d8c <coda_mem_record_new+0x1cc>
     bf8:	mov	r3, #428	; 0x1ac
     bfc:	bl	0 <coda_set_error>
     c00:	mov	r0, #0
     c04:	b	d68 <coda_mem_record_new+0x1a8>
     c08:	ldr	r3, [r6, #64]	; 0x40
     c0c:	cmp	r3, #0
     c10:	beq	c28 <coda_mem_record_new+0x68>
     c14:	ldr	r0, [r6, #68]	; 0x44
     c18:	cmp	r0, #0
     c1c:	movne	r1, #1
     c20:	moveq	r1, #0
     c24:	b	c2c <coda_mem_record_new+0x6c>
     c28:	mov	r1, #0
     c2c:	cmp	r1, #0
     c30:	beq	c48 <coda_mem_record_new+0x88>
     c34:	mvn	r0, #99	; 0x63
     c38:	ldr	r1, [pc, #320]	; d80 <coda_mem_record_new+0x1c0>
     c3c:	bl	0 <coda_set_error>
     c40:	mov	r0, #0
     c44:	b	d68 <coda_mem_record_new+0x1a8>
     c48:	mov	r0, #24
     c4c:	bl	0 <malloc>
     c50:	mov	r4, r0
     c54:	cmp	r4, #0
     c58:	bne	c80 <coda_mem_record_new+0xc0>
     c5c:	mvn	r0, #0
     c60:	ldr	r1, [pc, #288]	; d88 <coda_mem_record_new+0x1c8>
     c64:	mov	r2, #24
     c68:	ldr	r3, [pc, #284]	; d8c <coda_mem_record_new+0x1cc>
     c6c:	movw	r4, #442	; 0x1ba
     c70:	str	r4, [sp]
     c74:	bl	0 <coda_set_error>
     c78:	mov	r0, #0
     c7c:	b	d68 <coda_mem_record_new+0x1a8>
     c80:	mov	r2, #100	; 0x64
     c84:	str	r2, [r4]
     c88:	str	r6, [r4, #4]
     c8c:	ldr	r3, [r6, #4]
     c90:	add	r2, r3, #1
     c94:	str	r2, [r6, #4]
     c98:	mov	r2, #0
     c9c:	str	r2, [r4, #8]
     ca0:	str	r5, [r4, #12]
     ca4:	mov	ip, #0
     ca8:	str	ip, [r4, #16]
     cac:	mov	r1, #0
     cb0:	str	r1, [r4, #20]
     cb4:	ldr	r0, [r4, #12]
     cb8:	cmp	r0, #0
     cbc:	bne	ce0 <coda_mem_record_new+0x120>
     cc0:	mov	r0, r4
     cc4:	bl	65c <create_attributes_record>
     cc8:	cmp	r0, #0
     ccc:	beq	ce0 <coda_mem_record_new+0x120>
     cd0:	mov	r0, r4
     cd4:	bl	0 <coda_mem_type_delete>
     cd8:	mov	r0, #0
     cdc:	b	d68 <coda_mem_record_new+0x1a8>
     ce0:	ldr	r2, [r6, #48]	; 0x30
     ce4:	cmp	r2, #0
     ce8:	ble	d64 <coda_mem_record_new+0x1a4>
     cec:	ldr	r2, [r6, #48]	; 0x30
     cf0:	lsl	r0, r2, #2
     cf4:	bl	0 <malloc>
     cf8:	str	r0, [r4, #20]
     cfc:	ldr	r3, [r4, #20]
     d00:	cmp	r3, #0
     d04:	bne	d38 <coda_mem_record_new+0x178>
     d08:	mvn	r0, #0
     d0c:	ldr	r1, [pc, #116]	; d88 <coda_mem_record_new+0x1c8>
     d10:	ldr	r2, [r6, #48]	; 0x30
     d14:	lsl	r2, r2, #2
     d18:	ldr	r3, [pc, #108]	; d8c <coda_mem_record_new+0x1cc>
     d1c:	movw	r5, #469	; 0x1d5
     d20:	str	r5, [sp]
     d24:	bl	0 <coda_set_error>
     d28:	mov	r0, r4
     d2c:	bl	0 <coda_mem_type_delete>
     d30:	mov	r0, #0
     d34:	b	d68 <coda_mem_record_new+0x1a8>
     d38:	mov	r0, #0
     d3c:	ldr	r1, [r6, #48]	; 0x30
     d40:	cmp	r0, r1
     d44:	bge	d5c <coda_mem_record_new+0x19c>
     d48:	ldr	r2, [r4, #20]
     d4c:	mov	r1, #0
     d50:	str	r1, [r2, r0, lsl #2]
     d54:	add	r0, r0, #1
     d58:	b	d3c <coda_mem_record_new+0x17c>
     d5c:	ldr	ip, [r6, #48]	; 0x30
     d60:	str	ip, [r4, #16]
     d64:	mov	r0, r4
     d68:	ldr	r4, [sp, #16]
     d6c:	ldr	r5, [sp, #20]
     d70:	ldr	r6, [sp, #24]
     d74:	ldr	lr, [sp, #8]
     d78:	add	sp, sp, #32
     d7c:	bx	lr
     d80:	.word	0x000000a5
     d84:	.word	0x00000a06
     d88:	.word	0x00000916
     d8c:	.word	0x00000048

00000d90 <coda_mem_record_add_field>:
     d90:	mov	ip, sp
     d94:	sub	sp, sp, #32
     d98:	str	ip, [sp, #4]
     d9c:	str	lr, [sp, #8]
     da0:	str	r4, [sp, #16]
     da4:	str	r5, [sp, #20]
     da8:	str	r6, [sp, #24]
     dac:	str	r7, [sp, #28]
     db0:	mov	r7, r2
     db4:	mov	r4, r1
     db8:	mov	r6, r0
     dbc:	cmp	r6, #0
     dc0:	bne	de0 <coda_mem_record_add_field+0x50>
     dc4:	mvn	r0, #99	; 0x63
     dc8:	ldr	r1, [pc, #488]	; fb8 <coda_mem_record_add_field+0x228>
     dcc:	ldr	r2, [pc, #496]	; fc4 <coda_mem_record_add_field+0x234>
     dd0:	movw	r3, #491	; 0x1eb
     dd4:	bl	0 <coda_set_error>
     dd8:	mvn	r0, #0
     ddc:	b	f90 <coda_mem_record_add_field+0x200>
     de0:	cmp	r7, #0
     de4:	bne	e04 <coda_mem_record_add_field+0x74>
     de8:	mvn	r0, #99	; 0x63
     dec:	ldr	r1, [pc, #456]	; fbc <coda_mem_record_add_field+0x22c>
     df0:	ldr	r2, [pc, #460]	; fc4 <coda_mem_record_add_field+0x234>
     df4:	mov	r3, #496	; 0x1f0
     df8:	bl	0 <coda_set_error>
     dfc:	mvn	r0, #0
     e00:	b	f90 <coda_mem_record_add_field+0x200>
     e04:	cmp	r3, #0
     e08:	beq	ed0 <coda_mem_record_add_field+0x140>
     e0c:	ldr	r0, [r6, #4]
     e10:	ldr	r2, [r7, #4]
     e14:	mov	r1, r4
     e18:	bl	0 <coda_type_record_create_field>
     e1c:	cmp	r0, #0
     e20:	beq	e2c <coda_mem_record_add_field+0x9c>
     e24:	mvn	r0, #0
     e28:	b	f90 <coda_mem_record_add_field+0x200>
     e2c:	ldr	r2, [r6, #4]
     e30:	ldr	r1, [r2, #48]	; 0x30
     e34:	sub	r5, r1, #1
     e38:	ldr	r1, [r6, #16]
     e3c:	ldr	ip, [r6, #4]
     e40:	ldr	r0, [ip, #48]	; 0x30
     e44:	cmp	r1, r0
     e48:	bge	f84 <coda_mem_record_add_field+0x1f4>
     e4c:	ldr	r0, [r6, #20]
     e50:	ldr	r1, [r6, #4]
     e54:	ldr	r2, [r1, #48]	; 0x30
     e58:	lsl	r1, r2, #2
     e5c:	bl	0 <realloc>
     e60:	cmp	r0, #0
     e64:	bne	e94 <coda_mem_record_add_field+0x104>
     e68:	mvn	r0, #0
     e6c:	ldr	r1, [pc, #332]	; fc0 <coda_mem_record_add_field+0x230>
     e70:	ldr	r2, [r6, #4]
     e74:	ldr	r3, [r2, #48]	; 0x30
     e78:	lsl	r2, r3, #2
     e7c:	ldr	r3, [pc, #320]	; fc4 <coda_mem_record_add_field+0x234>
     e80:	mov	ip, #516	; 0x204
     e84:	str	ip, [sp]
     e88:	bl	0 <coda_set_error>
     e8c:	mvn	r0, #0
     e90:	b	f90 <coda_mem_record_add_field+0x200>
     e94:	str	r0, [r6, #20]
     e98:	ldr	r2, [r6, #16]
     e9c:	ldr	r3, [r6, #4]
     ea0:	ldr	r3, [r3, #48]	; 0x30
     ea4:	cmp	r2, r3
     ea8:	bge	ec0 <coda_mem_record_add_field+0x130>
     eac:	ldr	r0, [r6, #20]
     eb0:	mov	r3, #0
     eb4:	str	r3, [r0, r2, lsl #2]
     eb8:	add	r2, r2, #1
     ebc:	b	e9c <coda_mem_record_add_field+0x10c>
     ec0:	ldr	r3, [r6, #4]
     ec4:	ldr	ip, [r3, #48]	; 0x30
     ec8:	str	ip, [r6, #16]
     ecc:	b	f84 <coda_mem_record_add_field+0x1f4>
     ed0:	ldr	ip, [r6, #4]
     ed4:	ldr	r0, [ip, #44]	; 0x2c
     ed8:	mov	r1, r4
     edc:	bl	0 <coda_hashtable_get_index_from_name>
     ee0:	mov	r5, r0
     ee4:	cmp	r5, #0
     ee8:	bge	f10 <coda_mem_record_add_field+0x180>
     eec:	mvn	r0, #101	; 0x65
     ef0:	ldr	r1, [pc, #188]	; fb4 <coda_mem_record_add_field+0x224>
     ef4:	ldr	r3, [pc, #200]	; fc4 <coda_mem_record_add_field+0x234>
     ef8:	movw	r2, #534	; 0x216
     efc:	str	r2, [sp]
     f00:	mov	r2, r4
     f04:	bl	0 <coda_set_error>
     f08:	mvn	r0, #0
     f0c:	b	f90 <coda_mem_record_add_field+0x200>
     f10:	ldr	r0, [r6, #20]
     f14:	ldr	r1, [r0, r5, lsl #2]
     f18:	cmp	r1, #0
     f1c:	beq	f44 <coda_mem_record_add_field+0x1b4>
     f20:	mvn	r0, #99	; 0x63
     f24:	ldr	r1, [pc, #128]	; fac <coda_mem_record_add_field+0x21c>
     f28:	ldr	r3, [pc, #148]	; fc4 <coda_mem_record_add_field+0x234>
     f2c:	mov	r2, #540	; 0x21c
     f30:	str	r2, [sp]
     f34:	mov	r2, r4
     f38:	bl	0 <coda_set_error>
     f3c:	mvn	r0, #0
     f40:	b	f90 <coda_mem_record_add_field+0x200>
     f44:	ldr	ip, [r6, #4]
     f48:	ldr	r3, [ip, #52]	; 0x34
     f4c:	ldr	r0, [r3, r5, lsl #2]
     f50:	ldr	r1, [r0, #8]
     f54:	ldr	r0, [r7, #4]
     f58:	cmp	r1, r0
     f5c:	beq	f84 <coda_mem_record_add_field+0x1f4>
     f60:	mvn	r0, #99	; 0x63
     f64:	ldr	r1, [pc, #68]	; fb0 <coda_mem_record_add_field+0x220>
     f68:	ldr	r3, [pc, #84]	; fc4 <coda_mem_record_add_field+0x234>
     f6c:	movw	ip, #546	; 0x222
     f70:	str	ip, [sp]
     f74:	mov	r2, r4
     f78:	bl	0 <coda_set_error>
     f7c:	mvn	r0, #0
     f80:	b	f90 <coda_mem_record_add_field+0x200>
     f84:	ldr	r1, [r6, #20]
     f88:	str	r7, [r1, r5, lsl #2]
     f8c:	mov	r0, #0
     f90:	ldr	r4, [sp, #16]
     f94:	ldr	r5, [sp, #20]
     f98:	ldr	r6, [sp, #24]
     f9c:	ldr	r7, [sp, #28]
     fa0:	ldr	lr, [sp, #8]
     fa4:	add	sp, sp, #32
     fa8:	bx	lr
     fac:	.word	0x00000026
     fb0:	.word	0x00000710
     fb4:	.word	0x00000229
     fb8:	.word	0x0000094b
     fbc:	.word	0x00000205
     fc0:	.word	0x00000916
     fc4:	.word	0x00000048

00000fc8 <coda_mem_record_validate>:
     fc8:	mov	ip, sp
     fcc:	sub	sp, sp, #16
     fd0:	str	ip, [sp]
     fd4:	str	lr, [sp, #4]
     fd8:	str	r4, [sp, #8]
     fdc:	str	r5, [sp, #12]
     fe0:	mov	r4, r0
     fe4:	cmp	r4, #0
     fe8:	bne	1008 <coda_mem_record_validate+0x40>
     fec:	mvn	r0, #99	; 0x63
     ff0:	ldr	r1, [pc, #208]	; 10c8 <coda_mem_record_validate+0x100>
     ff4:	ldr	r2, [pc, #216]	; 10d4 <coda_mem_record_validate+0x10c>
     ff8:	movw	r3, #561	; 0x231
     ffc:	bl	0 <coda_set_error>
    1000:	mvn	r0, #0
    1004:	b	10b0 <coda_mem_record_validate+0xe8>
    1008:	ldr	r1, [r4, #16]
    100c:	ldr	r2, [r4, #4]
    1010:	ldr	ip, [r2, #48]	; 0x30
    1014:	cmp	r1, ip
    1018:	beq	1030 <coda_mem_record_validate+0x68>
    101c:	ldr	r0, [pc, #172]	; 10d0 <coda_mem_record_validate+0x108>
    1020:	ldr	r1, [pc, #172]	; 10d4 <coda_mem_record_validate+0x10c>
    1024:	mov	r2, #564	; 0x234
    1028:	ldr	r3, [pc, #156]	; 10cc <coda_mem_record_validate+0x104>
    102c:	bl	0 <__assert_fail>
    1030:	mov	r5, #0
    1034:	ldr	r0, [r4, #16]
    1038:	cmp	r5, r0
    103c:	bge	10ac <coda_mem_record_validate+0xe4>
    1040:	ldr	r3, [r4, #20]
    1044:	ldr	r0, [r3, r5, lsl #2]
    1048:	cmp	r0, #0
    104c:	bne	1070 <coda_mem_record_validate+0xa8>
    1050:	ldr	r1, [r4, #4]
    1054:	ldr	r0, [r1, #52]	; 0x34
    1058:	ldr	ip, [r0, r5, lsl #2]
    105c:	ldrb	ip, [ip, #16]
    1060:	cmp	ip, #0
    1064:	moveq	r1, #1
    1068:	movne	r1, #0
    106c:	b	1074 <coda_mem_record_validate+0xac>
    1070:	mov	r1, #0
    1074:	cmp	r1, #0
    1078:	beq	10a4 <coda_mem_record_validate+0xdc>
    107c:	movw	r0, #65136	; 0xfe70
    1080:	movt	r0, #65535	; 0xffff
    1084:	ldr	r1, [pc, #56]	; 10c4 <coda_mem_record_validate+0xfc>
    1088:	ldr	r2, [r4, #4]
    108c:	ldr	r3, [r2, #52]	; 0x34
    1090:	ldr	r3, [r3, r5, lsl #2]
    1094:	ldr	r2, [r3]
    1098:	bl	0 <coda_set_error>
    109c:	mvn	r0, #0
    10a0:	b	10b0 <coda_mem_record_validate+0xe8>
    10a4:	add	r5, r5, #1
    10a8:	b	1034 <coda_mem_record_validate+0x6c>
    10ac:	mov	r0, #0
    10b0:	ldr	r4, [sp, #8]
    10b4:	ldr	r5, [sp, #12]
    10b8:	ldr	lr, [sp, #4]
    10bc:	add	sp, sp, #16
    10c0:	bx	lr
    10c4:	.word	0x0000038e
    10c8:	.word	0x0000094b
    10cc:	.word	0x00000b88
    10d0:	.word	0x00000662
    10d4:	.word	0x00000048

000010d8 <coda_mem_array_new>:
    10d8:	mov	ip, sp
    10dc:	sub	sp, sp, #32
    10e0:	str	ip, [sp, #4]
    10e4:	str	lr, [sp, #8]
    10e8:	str	r4, [sp, #16]
    10ec:	str	r5, [sp, #20]
    10f0:	str	r6, [sp, #24]
    10f4:	mov	r5, r1
    10f8:	mov	r6, r0
    10fc:	cmp	r6, #0
    1100:	bne	1120 <coda_mem_array_new+0x48>
    1104:	mvn	r0, #99	; 0x63
    1108:	ldr	r1, [pc, #340]	; 1264 <coda_mem_array_new+0x18c>
    110c:	ldr	r2, [pc, #344]	; 126c <coda_mem_array_new+0x194>
    1110:	movw	r3, #583	; 0x247
    1114:	bl	0 <coda_set_error>
    1118:	mov	r0, #0
    111c:	b	124c <coda_mem_array_new+0x174>
    1120:	mov	r0, #24
    1124:	bl	0 <malloc>
    1128:	mov	r4, r0
    112c:	cmp	r4, #0
    1130:	bne	1158 <coda_mem_array_new+0x80>
    1134:	mvn	r0, #0
    1138:	ldr	r1, [pc, #296]	; 1268 <coda_mem_array_new+0x190>
    113c:	mov	r2, #24
    1140:	ldr	r3, [pc, #292]	; 126c <coda_mem_array_new+0x194>
    1144:	movw	r4, #590	; 0x24e
    1148:	str	r4, [sp]
    114c:	bl	0 <coda_set_error>
    1150:	mov	r0, #0
    1154:	b	124c <coda_mem_array_new+0x174>
    1158:	mov	r3, #100	; 0x64
    115c:	str	r3, [r4]
    1160:	str	r6, [r4, #4]
    1164:	ldr	r0, [r6, #4]
    1168:	add	r1, r0, #1
    116c:	str	r1, [r6, #4]
    1170:	mov	r2, #1
    1174:	str	r2, [r4, #8]
    1178:	str	r5, [r4, #12]
    117c:	mov	r1, #0
    1180:	str	r1, [r4, #16]
    1184:	mov	r3, #0
    1188:	str	r3, [r4, #20]
    118c:	cmp	r5, #0
    1190:	bne	11b4 <coda_mem_array_new+0xdc>
    1194:	mov	r0, r4
    1198:	bl	65c <create_attributes_record>
    119c:	cmp	r0, #0
    11a0:	beq	11b4 <coda_mem_array_new+0xdc>
    11a4:	mov	r0, r4
    11a8:	bl	0 <coda_mem_type_delete>
    11ac:	mov	r0, #0
    11b0:	b	124c <coda_mem_array_new+0x174>
    11b4:	ldr	r1, [r4, #4]
    11b8:	ldr	r3, [r1, #44]	; 0x2c
    11bc:	cmp	r3, #0
    11c0:	ble	1248 <coda_mem_array_new+0x170>
    11c4:	ldr	ip, [r4, #4]
    11c8:	ldr	ip, [ip, #44]	; 0x2c
    11cc:	lsl	r0, ip, #2
    11d0:	bl	0 <malloc>
    11d4:	str	r0, [r4, #20]
    11d8:	ldr	r2, [r4, #20]
    11dc:	cmp	r2, #0
    11e0:	bne	1218 <coda_mem_array_new+0x140>
    11e4:	mvn	r0, #0
    11e8:	ldr	r1, [pc, #120]	; 1268 <coda_mem_array_new+0x190>
    11ec:	ldr	r2, [r4, #4]
    11f0:	ldr	ip, [r2, #44]	; 0x2c
    11f4:	lsl	r2, ip, #2
    11f8:	ldr	r3, [pc, #108]	; 126c <coda_mem_array_new+0x194>
    11fc:	movw	ip, #617	; 0x269
    1200:	str	ip, [sp]
    1204:	bl	0 <coda_set_error>
    1208:	mov	r0, r4
    120c:	bl	0 <coda_mem_type_delete>
    1210:	mov	r0, #0
    1214:	b	124c <coda_mem_array_new+0x174>
    1218:	ldr	r1, [r4, #4]
    121c:	ldr	r3, [r1, #44]	; 0x2c
    1220:	str	r3, [r4, #16]
    1224:	mov	r2, #0
    1228:	ldr	r0, [r4, #16]
    122c:	cmp	r2, r0
    1230:	bge	1248 <coda_mem_array_new+0x170>
    1234:	ldr	r3, [r4, #20]
    1238:	mov	r0, #0
    123c:	str	r0, [r3, r2, lsl #2]
    1240:	add	r2, r2, #1
    1244:	b	1228 <coda_mem_array_new+0x150>
    1248:	mov	r0, r4
    124c:	ldr	r4, [sp, #16]
    1250:	ldr	r5, [sp, #20]
    1254:	ldr	r6, [sp, #24]
    1258:	ldr	lr, [sp, #8]
    125c:	add	sp, sp, #32
    1260:	bx	lr
    1264:	.word	0x00000a06
    1268:	.word	0x00000916
    126c:	.word	0x00000048

00001270 <coda_mem_array_set_element>:
    1270:	mov	ip, sp
    1274:	sub	sp, sp, #24
    1278:	str	ip, [sp, #8]
    127c:	str	lr, [sp, #12]
    1280:	str	r4, [sp, #16]
    1284:	str	r5, [sp, #20]
    1288:	cmp	r0, #0
    128c:	bne	12ac <coda_mem_array_set_element+0x3c>
    1290:	mvn	r0, #99	; 0x63
    1294:	ldr	r1, [pc, #316]	; 13d8 <coda_mem_array_set_element+0x168>
    1298:	ldr	r2, [pc, #316]	; 13dc <coda_mem_array_set_element+0x16c>
    129c:	movw	r3, #635	; 0x27b
    12a0:	bl	0 <coda_set_error>
    12a4:	mvn	r0, #0
    12a8:	b	13b4 <coda_mem_array_set_element+0x144>
    12ac:	cmp	r1, #0
    12b0:	blt	12c8 <coda_mem_array_set_element+0x58>
    12b4:	ldr	r3, [r0, #16]
    12b8:	cmp	r1, r3
    12bc:	movge	r3, #1
    12c0:	movlt	r3, #0
    12c4:	b	12cc <coda_mem_array_set_element+0x5c>
    12c8:	mov	r3, #1
    12cc:	cmp	r3, #0
    12d0:	beq	130c <coda_mem_array_set_element+0x9c>
    12d4:	mvn	ip, #100	; 0x64
    12d8:	ldr	r2, [pc, #232]	; 13c8 <coda_mem_array_set_element+0x158>
    12dc:	ldr	r3, [r0, #16]
    12e0:	ldr	r0, [pc, #244]	; 13dc <coda_mem_array_set_element+0x16c>
    12e4:	movw	r5, #641	; 0x281
    12e8:	str	r5, [sp, #4]
    12ec:	str	r0, [sp]
    12f0:	mov	r4, r1
    12f4:	mov	r1, r2
    12f8:	mov	r2, r4
    12fc:	mov	r0, ip
    1300:	bl	0 <coda_set_error>
    1304:	mvn	r0, #0
    1308:	b	13b4 <coda_mem_array_set_element+0x144>
    130c:	cmp	r2, #0
    1310:	bne	1330 <coda_mem_array_set_element+0xc0>
    1314:	mvn	r0, #99	; 0x63
    1318:	ldr	r1, [pc, #180]	; 13d4 <coda_mem_array_set_element+0x164>
    131c:	ldr	r2, [pc, #184]	; 13dc <coda_mem_array_set_element+0x16c>
    1320:	movw	r3, #646	; 0x286
    1324:	bl	0 <coda_set_error>
    1328:	mvn	r0, #0
    132c:	b	13b4 <coda_mem_array_set_element+0x144>
    1330:	ldr	r3, [r0, #20]
    1334:	ldr	ip, [r3, r1, lsl #2]
    1338:	cmp	ip, #0
    133c:	beq	1368 <coda_mem_array_set_element+0xf8>
    1340:	mvn	r0, #99	; 0x63
    1344:	ldr	ip, [pc, #132]	; 13d0 <coda_mem_array_set_element+0x160>
    1348:	ldr	r3, [pc, #140]	; 13dc <coda_mem_array_set_element+0x16c>
    134c:	mov	r2, #652	; 0x28c
    1350:	str	r2, [sp]
    1354:	mov	r2, r1
    1358:	mov	r1, ip
    135c:	bl	0 <coda_set_error>
    1360:	mvn	r0, #0
    1364:	b	13b4 <coda_mem_array_set_element+0x144>
    1368:	ldr	r3, [r0, #4]
    136c:	ldr	ip, [r3, #40]	; 0x28
    1370:	ldr	r3, [r2, #4]
    1374:	cmp	ip, r3
    1378:	beq	13a8 <coda_mem_array_set_element+0x138>
    137c:	movw	ip, #65136	; 0xfe70
    1380:	movt	ip, #65535	; 0xffff
    1384:	ldr	r1, [pc, #64]	; 13cc <coda_mem_array_set_element+0x15c>
    1388:	ldr	r2, [r0, #16]
    138c:	ldr	r3, [pc, #72]	; 13dc <coda_mem_array_set_element+0x16c>
    1390:	movw	r0, #658	; 0x292
    1394:	str	r0, [sp]
    1398:	mov	r0, ip
    139c:	bl	0 <coda_set_error>
    13a0:	mvn	r0, #0
    13a4:	b	13b4 <coda_mem_array_set_element+0x144>
    13a8:	ldr	r0, [r0, #20]
    13ac:	str	r2, [r0, r1, lsl #2]
    13b0:	mov	r0, #0
    13b4:	ldr	r4, [sp, #16]
    13b8:	ldr	r5, [sp, #20]
    13bc:	ldr	lr, [sp, #12]
    13c0:	add	sp, sp, #24
    13c4:	bx	lr
    13c8:	.word	0x000009d0
    13cc:	.word	0x000003ae
    13d0:	.word	0x000000ee
    13d4:	.word	0x00000746
    13d8:	.word	0x0000094b
    13dc:	.word	0x00000048

000013e0 <coda_mem_array_add_element>:
    13e0:	mov	ip, sp
    13e4:	sub	sp, sp, #24
    13e8:	str	ip, [sp, #8]
    13ec:	str	lr, [sp, #12]
    13f0:	str	r4, [sp, #16]
    13f4:	str	r5, [sp, #20]
    13f8:	mov	r4, r1
    13fc:	mov	r5, r0
    1400:	cmp	r5, #0
    1404:	bne	1424 <coda_mem_array_add_element+0x44>
    1408:	mvn	r0, #99	; 0x63
    140c:	ldr	r1, [pc, #432]	; 15c4 <coda_mem_array_add_element+0x1e4>
    1410:	ldr	r2, [pc, #436]	; 15cc <coda_mem_array_add_element+0x1ec>
    1414:	movw	r3, #670	; 0x29e
    1418:	bl	0 <coda_set_error>
    141c:	mvn	r0, #0
    1420:	b	15a4 <coda_mem_array_add_element+0x1c4>
    1424:	cmp	r4, #0
    1428:	bne	1448 <coda_mem_array_add_element+0x68>
    142c:	mvn	r0, #99	; 0x63
    1430:	ldr	r1, [pc, #392]	; 15c0 <coda_mem_array_add_element+0x1e0>
    1434:	ldr	r2, [pc, #400]	; 15cc <coda_mem_array_add_element+0x1ec>
    1438:	movw	r3, #675	; 0x2a3
    143c:	bl	0 <coda_set_error>
    1440:	mvn	r0, #0
    1444:	b	15a4 <coda_mem_array_add_element+0x1c4>
    1448:	ldr	r3, [r5, #4]
    144c:	ldr	r0, [r3, #40]	; 0x28
    1450:	ldr	r3, [r4, #4]
    1454:	cmp	r0, r3
    1458:	beq	1484 <coda_mem_array_add_element+0xa4>
    145c:	movw	r0, #65136	; 0xfe70
    1460:	movt	r0, #65535	; 0xffff
    1464:	ldr	r1, [pc, #332]	; 15b8 <coda_mem_array_add_element+0x1d8>
    1468:	ldr	r2, [r5, #16]
    146c:	ldr	r3, [pc, #344]	; 15cc <coda_mem_array_add_element+0x1ec>
    1470:	movw	r4, #681	; 0x2a9
    1474:	str	r4, [sp]
    1478:	bl	0 <coda_set_error>
    147c:	mvn	r0, #0
    1480:	b	15a4 <coda_mem_array_add_element+0x1c4>
    1484:	ldr	ip, [r5, #4]
    1488:	ldr	r0, [ip, #44]	; 0x2c
    148c:	cmp	r0, #0
    1490:	ble	1510 <coda_mem_array_add_element+0x130>
    1494:	mov	r2, #0
    1498:	ldr	r3, [r5, #16]
    149c:	cmp	r2, r3
    14a0:	bge	14bc <coda_mem_array_add_element+0xdc>
    14a4:	ldr	ip, [r5, #20]
    14a8:	ldr	r3, [ip, r2, lsl #2]
    14ac:	cmp	r3, #0
    14b0:	movne	r3, #1
    14b4:	moveq	r3, #0
    14b8:	b	14c0 <coda_mem_array_add_element+0xe0>
    14bc:	mov	r3, #0
    14c0:	cmp	r3, #0
    14c4:	beq	14d0 <coda_mem_array_add_element+0xf0>
    14c8:	add	r2, r2, #1
    14cc:	b	1498 <coda_mem_array_add_element+0xb8>
    14d0:	ldr	ip, [r5, #16]
    14d4:	cmp	r2, ip
    14d8:	blt	1504 <coda_mem_array_add_element+0x124>
    14dc:	mvn	r0, #100	; 0x64
    14e0:	ldr	r1, [pc, #212]	; 15bc <coda_mem_array_add_element+0x1dc>
    14e4:	ldr	r3, [r5, #16]
    14e8:	ldr	ip, [pc, #220]	; 15cc <coda_mem_array_add_element+0x1ec>
    14ec:	mov	r5, #696	; 0x2b8
    14f0:	str	r5, [sp, #4]
    14f4:	str	ip, [sp]
    14f8:	bl	0 <coda_set_error>
    14fc:	mvn	r0, #0
    1500:	b	15a4 <coda_mem_array_add_element+0x1c4>
    1504:	ldr	r3, [r5, #20]
    1508:	str	r4, [r3, r2, lsl #2]
    150c:	b	15a0 <coda_mem_array_add_element+0x1c0>
    1510:	ldr	ip, [r5, #16]
    1514:	asr	lr, ip, #31
    1518:	add	lr, ip, lr, lsr #28
    151c:	asr	r1, lr, #4
    1520:	lsl	r3, r1, #4
    1524:	sub	r1, ip, r3
    1528:	cmp	r1, #0
    152c:	bne	157c <coda_mem_array_add_element+0x19c>
    1530:	ldr	r0, [r5, #20]
    1534:	ldr	r1, [r5, #16]
    1538:	lsl	r3, r1, #2
    153c:	add	r1, r3, #64	; 0x40
    1540:	bl	0 <realloc>
    1544:	cmp	r0, #0
    1548:	bne	1578 <coda_mem_array_add_element+0x198>
    154c:	mvn	r0, #0
    1550:	ldr	r1, [pc, #112]	; 15c8 <coda_mem_array_add_element+0x1e8>
    1554:	ldr	r2, [r5, #16]
    1558:	lsl	r2, r2, #2
    155c:	add	r2, r2, #64	; 0x40
    1560:	ldr	r3, [pc, #100]	; 15cc <coda_mem_array_add_element+0x1ec>
    1564:	movw	r4, #711	; 0x2c7
    1568:	str	r4, [sp]
    156c:	bl	0 <coda_set_error>
    1570:	mvn	r0, #0
    1574:	b	15a4 <coda_mem_array_add_element+0x1c4>
    1578:	str	r0, [r5, #20]
    157c:	ldr	r0, [r5, #16]
    1580:	add	ip, r0, #1
    1584:	str	ip, [r5, #16]
    1588:	ldr	r2, [r5, #20]
    158c:	ldr	r3, [r5, #16]
    1590:	lsl	r0, r3, #2
    1594:	add	r1, r2, r0
    1598:	sub	lr, r1, #4096	; 0x1000
    159c:	str	r4, [lr, #4092]	; 0xffc
    15a0:	mov	r0, #0
    15a4:	ldr	r4, [sp, #16]
    15a8:	ldr	r5, [sp, #20]
    15ac:	ldr	lr, [sp, #12]
    15b0:	add	sp, sp, #24
    15b4:	bx	lr
    15b8:	.word	0x000004b3
    15bc:	.word	0x000009d0
    15c0:	.word	0x00000746
    15c4:	.word	0x0000094b
    15c8:	.word	0x00000916
    15cc:	.word	0x00000048

000015d0 <coda_mem_array_validate>:
    15d0:	mov	ip, sp
    15d4:	sub	sp, sp, #16
    15d8:	str	ip, [sp]
    15dc:	str	lr, [sp, #4]
    15e0:	str	r4, [sp, #8]
    15e4:	mov	r4, r0
    15e8:	cmp	r4, #0
    15ec:	bne	160c <coda_mem_array_validate+0x3c>
    15f0:	mvn	r0, #99	; 0x63
    15f4:	ldr	r1, [pc, #188]	; 16b8 <coda_mem_array_validate+0xe8>
    15f8:	ldr	r2, [pc, #192]	; 16c0 <coda_mem_array_validate+0xf0>
    15fc:	movw	r3, #729	; 0x2d9
    1600:	bl	0 <coda_set_error>
    1604:	mvn	r0, #0
    1608:	b	16a4 <coda_mem_array_validate+0xd4>
    160c:	ldr	ip, [r4, #4]
    1610:	ldr	ip, [ip, #44]	; 0x2c
    1614:	cmp	ip, #0
    1618:	blt	1638 <coda_mem_array_validate+0x68>
    161c:	ldr	r3, [r4, #16]
    1620:	ldr	r1, [r4, #4]
    1624:	ldr	r0, [r1, #44]	; 0x2c
    1628:	cmp	r3, r0
    162c:	movne	r0, #1
    1630:	moveq	r0, #0
    1634:	b	163c <coda_mem_array_validate+0x6c>
    1638:	mov	r0, #0
    163c:	cmp	r0, #0
    1640:	beq	1660 <coda_mem_array_validate+0x90>
    1644:	movw	r0, #65136	; 0xfe70
    1648:	movt	r0, #65535	; 0xffff
    164c:	ldr	r1, [pc, #96]	; 16b4 <coda_mem_array_validate+0xe4>
    1650:	ldr	r2, [r4, #16]
    1654:	ldr	r3, [r4, #4]
    1658:	ldr	r3, [r3, #44]	; 0x2c
    165c:	bl	0 <coda_set_error>
    1660:	mov	r2, #0
    1664:	ldr	r0, [r4, #16]
    1668:	cmp	r2, r0
    166c:	bge	16a0 <coda_mem_array_validate+0xd0>
    1670:	ldr	r3, [r4, #20]
    1674:	ldr	r1, [r3, r2, lsl #2]
    1678:	cmp	r1, #0
    167c:	bne	1698 <coda_mem_array_validate+0xc8>
    1680:	movw	r0, #65136	; 0xfe70
    1684:	movt	r0, #65535	; 0xffff
    1688:	ldr	r1, [pc, #44]	; 16bc <coda_mem_array_validate+0xec>
    168c:	bl	0 <coda_set_error>
    1690:	mvn	r0, #0
    1694:	b	16a4 <coda_mem_array_validate+0xd4>
    1698:	add	r2, r2, #1
    169c:	b	1664 <coda_mem_array_validate+0x94>
    16a0:	mov	r0, #0
    16a4:	ldr	r4, [sp, #8]
    16a8:	ldr	lr, [sp, #4]
    16ac:	add	sp, sp, #16
    16b0:	bx	lr
    16b4:	.word	0x00000575
    16b8:	.word	0x0000094b
    16bc:	.word	0x00000457
    16c0:	.word	0x00000048

000016c4 <coda_mem_data_new>:
    16c4:	mov	ip, sp
    16c8:	sub	sp, sp, #40	; 0x28
    16cc:	str	ip, [sp, #4]
    16d0:	str	lr, [sp, #8]
    16d4:	str	r4, [sp, #16]
    16d8:	str	r5, [sp, #20]
    16dc:	str	r6, [sp, #24]
    16e0:	str	r7, [sp, #28]
    16e4:	str	r8, [sp, #32]
    16e8:	str	r9, [sp, #36]	; 0x24
    16ec:	ldr	r6, [ip]
    16f0:	mov	r5, r3
    16f4:	mov	r4, r2
    16f8:	mov	r8, r1
    16fc:	mov	r9, r0
    1700:	cmp	r9, #0
    1704:	bne	1724 <coda_mem_data_new+0x60>
    1708:	mvn	r0, #99	; 0x63
    170c:	ldr	r1, [pc, #900]	; 1a98 <coda_mem_data_new+0x3d4>
    1710:	ldr	r2, [pc, #912]	; 1aa8 <coda_mem_data_new+0x3e4>
    1714:	movw	r3, #758	; 0x2f6
    1718:	bl	0 <coda_set_error>
    171c:	mov	r0, #0
    1720:	b	1a68 <coda_mem_data_new+0x3a4>
    1724:	cmp	r5, #0
    1728:	bge	1740 <coda_mem_data_new+0x7c>
    172c:	ldr	r0, [pc, #888]	; 1aac <coda_mem_data_new+0x3e8>
    1730:	ldr	r1, [pc, #880]	; 1aa8 <coda_mem_data_new+0x3e4>
    1734:	movw	r2, #761	; 0x2f9
    1738:	ldr	r3, [pc, #848]	; 1a90 <coda_mem_data_new+0x3cc>
    173c:	bl	0 <__assert_fail>
    1740:	cmp	r5, #0
    1744:	bgt	1750 <coda_mem_data_new+0x8c>
    1748:	mov	r1, #0
    174c:	b	175c <coda_mem_data_new+0x98>
    1750:	cmp	r6, #0
    1754:	moveq	r1, #1
    1758:	movne	r1, #0
    175c:	cmp	r1, #0
    1760:	beq	1780 <coda_mem_data_new+0xbc>
    1764:	mvn	r0, #99	; 0x63
    1768:	ldr	r1, [pc, #804]	; 1a94 <coda_mem_data_new+0x3d0>
    176c:	ldr	r2, [pc, #820]	; 1aa8 <coda_mem_data_new+0x3e4>
    1770:	mov	r3, #764	; 0x2fc
    1774:	bl	0 <coda_set_error>
    1778:	mov	r0, #0
    177c:	b	1a68 <coda_mem_data_new+0x3a4>
    1780:	ldr	ip, [r9, #28]
    1784:	cmp	ip, #0
    1788:	blt	17e8 <coda_mem_data_new+0x124>
    178c:	ldr	ip, [r9, #24]
    1790:	mov	r3, #0
    1794:	and	r2, ip, #7
    1798:	orr	ip, r3, r2
    179c:	cmp	ip, #0
    17a0:	bne	17ac <coda_mem_data_new+0xe8>
    17a4:	mov	r2, #0
    17a8:	b	17b0 <coda_mem_data_new+0xec>
    17ac:	mov	r2, #1
    17b0:	ldr	ip, [r9, #24]
    17b4:	ldr	r0, [r9, #28]
    17b8:	lsr	r3, ip, #3
    17bc:	orr	r0, r3, r0, lsl #29
    17c0:	add	r3, r0, r2
    17c4:	cmp	r3, r5
    17c8:	beq	17e8 <coda_mem_data_new+0x124>
    17cc:	movw	r0, #65236	; 0xfed4
    17d0:	movt	r0, #65535	; 0xffff
    17d4:	ldr	r1, [pc, #708]	; 1aa0 <coda_mem_data_new+0x3dc>
    17d8:	mov	r2, r5
    17dc:	bl	0 <coda_set_error>
    17e0:	mov	r0, #0
    17e4:	b	1a68 <coda_mem_data_new+0x3a4>
    17e8:	ldr	r0, [r9, #12]
    17ec:	cmp	r0, #10
    17f0:	beq	17fc <coda_mem_data_new+0x138>
    17f4:	mov	ip, #0
    17f8:	b	1808 <coda_mem_data_new+0x144>
    17fc:	cmp	r5, #1
    1800:	movne	ip, #1
    1804:	moveq	ip, #0
    1808:	cmp	ip, #0
    180c:	beq	1834 <coda_mem_data_new+0x170>
    1810:	mvn	r0, #99	; 0x63
    1814:	ldr	r1, [pc, #624]	; 1a8c <coda_mem_data_new+0x3c8>
    1818:	ldr	r3, [pc, #648]	; 1aa8 <coda_mem_data_new+0x3e4>
    181c:	movw	r2, #782	; 0x30e
    1820:	str	r2, [sp]
    1824:	mov	r2, r5
    1828:	bl	0 <coda_set_error>
    182c:	mov	r0, #0
    1830:	b	1a68 <coda_mem_data_new+0x3a4>
    1834:	mov	r0, #32
    1838:	bl	0 <malloc>
    183c:	mov	r7, r0
    1840:	cmp	r7, #0
    1844:	bne	186c <coda_mem_data_new+0x1a8>
    1848:	mvn	r0, #0
    184c:	ldr	r1, [pc, #592]	; 1aa4 <coda_mem_data_new+0x3e0>
    1850:	mov	r2, #32
    1854:	ldr	r3, [pc, #588]	; 1aa8 <coda_mem_data_new+0x3e4>
    1858:	movw	r4, #790	; 0x316
    185c:	str	r4, [sp]
    1860:	bl	0 <coda_set_error>
    1864:	mov	r0, #0
    1868:	b	1a68 <coda_mem_data_new+0x3a4>
    186c:	mov	r0, #100	; 0x64
    1870:	str	r0, [r7]
    1874:	str	r9, [r7, #4]
    1878:	ldr	r0, [r9, #4]
    187c:	add	r2, r0, #1
    1880:	str	r2, [r9, #4]
    1884:	mov	ip, #2
    1888:	str	ip, [r7, #8]
    188c:	str	r8, [r7, #12]
    1890:	str	r5, [r7, #16]
    1894:	mov	ip, #0
    1898:	mov	r3, #0
    189c:	str	r3, [r7, #24]
    18a0:	str	ip, [r7, #28]
    18a4:	cmp	r5, #0
    18a8:	ble	1a38 <coda_mem_data_new+0x374>
    18ac:	cmp	r4, #0
    18b0:	bne	18d8 <coda_mem_data_new+0x214>
    18b4:	mvn	r0, #99	; 0x63
    18b8:	ldr	r1, [pc, #476]	; 1a9c <coda_mem_data_new+0x3d8>
    18bc:	ldr	r2, [pc, #484]	; 1aa8 <coda_mem_data_new+0x3e4>
    18c0:	movw	r3, #805	; 0x325
    18c4:	bl	0 <coda_set_error>
    18c8:	mov	r0, r7
    18cc:	bl	0 <coda_mem_type_delete>
    18d0:	mov	r0, #0
    18d4:	b	1a68 <coda_mem_data_new+0x3a4>
    18d8:	ldr	r0, [r4, #40]	; 0x28
    18dc:	ldr	r1, [r4, #44]	; 0x2c
    18e0:	orr	r2, r1, r0
    18e4:	cmp	r2, #0
    18e8:	beq	1938 <coda_mem_data_new+0x274>
    18ec:	ldr	r3, [r4, #40]	; 0x28
    18f0:	ldr	ip, [r4, #44]	; 0x2c
    18f4:	mov	r2, #0
    18f8:	mov	r1, #1
    18fc:	subs	r3, r3, r1
    1900:	sbc	ip, ip, r2
    1904:	mov	r0, #0
    1908:	asr	r2, ip, #31
    190c:	lsr	r1, r2, #20
    1910:	adds	r1, r3, r1
    1914:	adc	r3, ip, r0
    1918:	asr	r2, r3, #12
    191c:	lsr	r1, r1, #12
    1920:	orr	r3, r1, r3, lsl #20
    1924:	mov	r1, #0
    1928:	mov	r0, #1
    192c:	adds	ip, r3, r0
    1930:	adc	r3, r2, r1
    1934:	b	193c <coda_mem_data_new+0x278>
    1938:	mov	ip, #0
    193c:	cmp	r5, #0
    1940:	beq	19a0 <coda_mem_data_new+0x2dc>
    1944:	ldr	r2, [r4, #40]	; 0x28
    1948:	ldr	r1, [r4, #44]	; 0x2c
    194c:	mov	r3, r5
    1950:	asr	r0, r3, #31
    1954:	adds	r3, r2, r3
    1958:	adc	r2, r1, r0
    195c:	mov	r1, #0
    1960:	mov	r0, #1
    1964:	subs	r3, r3, r0
    1968:	sbc	r8, r2, r1
    196c:	mov	r1, #0
    1970:	asr	r2, r8, #31
    1974:	lsr	r0, r2, #20
    1978:	adds	r0, r3, r0
    197c:	adc	r3, r8, r1
    1980:	asr	r2, r3, #12
    1984:	lsr	r0, r0, #12
    1988:	orr	r3, r0, r3, lsl #20
    198c:	mov	r1, #0
    1990:	mov	r0, #1
    1994:	adds	r8, r3, r0
    1998:	adc	r0, r2, r1
    199c:	b	19a4 <coda_mem_data_new+0x2e0>
    19a0:	mov	r8, ip
    19a4:	cmp	r8, ip
    19a8:	ble	19f0 <coda_mem_data_new+0x32c>
    19ac:	ldr	r0, [r4, #48]	; 0x30
    19b0:	lsl	r1, r8, #12
    19b4:	bl	0 <realloc>
    19b8:	cmp	r0, #0
    19bc:	bne	19ec <coda_mem_data_new+0x328>
    19c0:	mvn	r0, #0
    19c4:	ldr	r1, [pc, #228]	; 1ab0 <coda_mem_data_new+0x3ec>
    19c8:	lsl	r2, r8, #12
    19cc:	ldr	r3, [pc, #212]	; 1aa8 <coda_mem_data_new+0x3e4>
    19d0:	movw	r4, #821	; 0x335
    19d4:	str	r4, [sp]
    19d8:	bl	0 <coda_set_error>
    19dc:	mov	r0, r7
    19e0:	bl	0 <coda_mem_type_delete>
    19e4:	mov	r0, #0
    19e8:	b	1a68 <coda_mem_data_new+0x3a4>
    19ec:	str	r0, [r4, #48]	; 0x30
    19f0:	ldr	r1, [r4, #40]	; 0x28
    19f4:	ldr	r0, [r4, #44]	; 0x2c
    19f8:	str	r1, [r7, #24]
    19fc:	str	r0, [r7, #28]
    1a00:	ldr	r3, [r4, #48]	; 0x30
    1a04:	ldr	r2, [r4, #40]	; 0x28
    1a08:	add	r0, r3, r2
    1a0c:	mov	r2, r5
    1a10:	mov	r1, r6
    1a14:	bl	0 <memcpy>
    1a18:	ldr	r2, [r4, #40]	; 0x28
    1a1c:	ldr	r3, [r4, #44]	; 0x2c
    1a20:	asr	ip, r5, #31
    1a24:	adds	lr, r2, r5
    1a28:	adc	r0, r3, ip
    1a2c:	mov	r3, lr
    1a30:	str	r3, [r4, #40]	; 0x28
    1a34:	str	r0, [r4, #44]	; 0x2c
    1a38:	ldr	r3, [r7, #12]
    1a3c:	cmp	r3, #0
    1a40:	bne	1a64 <coda_mem_data_new+0x3a0>
    1a44:	mov	r0, r7
    1a48:	bl	65c <create_attributes_record>
    1a4c:	cmp	r0, #0
    1a50:	beq	1a64 <coda_mem_data_new+0x3a0>
    1a54:	mov	r0, r7
    1a58:	bl	0 <coda_mem_type_delete>
    1a5c:	mov	r0, #0
    1a60:	b	1a68 <coda_mem_data_new+0x3a4>
    1a64:	mov	r0, r7
    1a68:	ldr	r4, [sp, #16]
    1a6c:	ldr	r5, [sp, #20]
    1a70:	ldr	r6, [sp, #24]
    1a74:	ldr	r7, [sp, #28]
    1a78:	ldr	r8, [sp, #32]
    1a7c:	ldr	r9, [sp, #36]	; 0x24
    1a80:	ldr	lr, [sp, #8]
    1a84:	add	sp, sp, #40	; 0x28
    1a88:	bx	lr
    1a8c:	.word	0x000003ed
    1a90:	.word	0x00000ba1
    1a94:	.word	0x00000a94
    1a98:	.word	0x00000a06
    1a9c:	.word	0x0000014a
    1aa0:	.word	0x0000025d
    1aa4:	.word	0x00000916
    1aa8:	.word	0x00000048
    1aac:	.word	0x000004a7
    1ab0:	.word	0x00000ab2

00001ab4 <coda_mem_int8_new>:
    1ab4:	mov	ip, sp
    1ab8:	sub	sp, sp, #40	; 0x28
    1abc:	str	ip, [sp, #4]
    1ac0:	str	lr, [sp, #8]
    1ac4:	str	r4, [sp, #16]
    1ac8:	str	r5, [sp, #20]
    1acc:	str	r6, [sp, #24]
    1ad0:	mov	r5, r2
    1ad4:	mov	r4, r1
    1ad8:	mov	r6, r0
    1adc:	sbfx	r0, r3, #0, #8
    1ae0:	strb	r0, [sp, #32]
    1ae4:	ldr	r0, [r6, #24]
    1ae8:	ldr	r2, [r6, #28]
    1aec:	eor	r1, r0, #8
    1af0:	orr	ip, r2, r1
    1af4:	cmp	ip, #0
    1af8:	beq	1b10 <coda_mem_int8_new+0x5c>
    1afc:	ldr	r0, [pc, #100]	; 1b68 <coda_mem_int8_new+0xb4>
    1b00:	ldr	r1, [pc, #104]	; 1b70 <coda_mem_int8_new+0xbc>
    1b04:	movw	r2, #847	; 0x34f
    1b08:	ldr	r3, [pc, #84]	; 1b64 <coda_mem_int8_new+0xb0>
    1b0c:	bl	0 <__assert_fail>
    1b10:	ldr	r3, [r6, #12]
    1b14:	cmp	r3, #0
    1b18:	beq	1b30 <coda_mem_int8_new+0x7c>
    1b1c:	ldr	r0, [pc, #72]	; 1b6c <coda_mem_int8_new+0xb8>
    1b20:	ldr	r1, [pc, #72]	; 1b70 <coda_mem_int8_new+0xbc>
    1b24:	mov	r2, #848	; 0x350
    1b28:	ldr	r3, [pc, #52]	; 1b64 <coda_mem_int8_new+0xb0>
    1b2c:	bl	0 <__assert_fail>
    1b30:	mov	r3, #1
    1b34:	add	ip, sp, #32
    1b38:	str	ip, [sp]
    1b3c:	mov	r2, r5
    1b40:	mov	r1, r4
    1b44:	mov	r0, r6
    1b48:	bl	16c4 <coda_mem_data_new>
    1b4c:	ldr	r4, [sp, #16]
    1b50:	ldr	r5, [sp, #20]
    1b54:	ldr	r6, [sp, #24]
    1b58:	ldr	lr, [sp, #8]
    1b5c:	add	sp, sp, #40	; 0x28
    1b60:	bx	lr
    1b64:	.word	0x00000bb3
    1b68:	.word	0x00000969
    1b6c:	.word	0x000005d3
    1b70:	.word	0x00000048

00001b74 <coda_mem_uint8_new>:
    1b74:	mov	ip, sp
    1b78:	sub	sp, sp, #40	; 0x28
    1b7c:	str	ip, [sp, #4]
    1b80:	str	lr, [sp, #8]
    1b84:	str	r4, [sp, #16]
    1b88:	str	r5, [sp, #20]
    1b8c:	str	r6, [sp, #24]
    1b90:	mov	r5, r2
    1b94:	mov	r4, r1
    1b98:	mov	r6, r0
    1b9c:	and	r0, r3, #255	; 0xff
    1ba0:	strb	r0, [sp, #32]
    1ba4:	ldr	r0, [r6, #24]
    1ba8:	ldr	r2, [r6, #28]
    1bac:	eor	r1, r0, #8
    1bb0:	orr	ip, r2, r1
    1bb4:	cmp	ip, #0
    1bb8:	beq	1bd0 <coda_mem_uint8_new+0x5c>
    1bbc:	ldr	r0, [pc, #100]	; 1c28 <coda_mem_uint8_new+0xb4>
    1bc0:	ldr	r1, [pc, #104]	; 1c30 <coda_mem_uint8_new+0xbc>
    1bc4:	movw	r2, #855	; 0x357
    1bc8:	ldr	r3, [pc, #92]	; 1c2c <coda_mem_uint8_new+0xb8>
    1bcc:	bl	0 <__assert_fail>
    1bd0:	ldr	r3, [r6, #12]
    1bd4:	cmp	r3, #1
    1bd8:	beq	1bf0 <coda_mem_uint8_new+0x7c>
    1bdc:	ldr	r0, [pc, #64]	; 1c24 <coda_mem_uint8_new+0xb0>
    1be0:	ldr	r1, [pc, #72]	; 1c30 <coda_mem_uint8_new+0xbc>
    1be4:	mov	r2, #856	; 0x358
    1be8:	ldr	r3, [pc, #60]	; 1c2c <coda_mem_uint8_new+0xb8>
    1bec:	bl	0 <__assert_fail>
    1bf0:	mov	r3, #1
    1bf4:	add	ip, sp, #32
    1bf8:	str	ip, [sp]
    1bfc:	mov	r2, r5
    1c00:	mov	r1, r4
    1c04:	mov	r0, r6
    1c08:	bl	16c4 <coda_mem_data_new>
    1c0c:	ldr	r4, [sp, #16]
    1c10:	ldr	r5, [sp, #20]
    1c14:	ldr	r6, [sp, #24]
    1c18:	ldr	lr, [sp, #8]
    1c1c:	add	sp, sp, #40	; 0x28
    1c20:	bx	lr
    1c24:	.word	0x00000820
    1c28:	.word	0x00000969
    1c2c:	.word	0x00000bc5
    1c30:	.word	0x00000048

00001c34 <coda_mem_int16_new>:
    1c34:	mov	ip, sp
    1c38:	sub	sp, sp, #40	; 0x28
    1c3c:	str	ip, [sp, #4]
    1c40:	str	lr, [sp, #8]
    1c44:	str	r4, [sp, #16]
    1c48:	str	r5, [sp, #20]
    1c4c:	str	r6, [sp, #24]
    1c50:	mov	r5, r2
    1c54:	mov	r4, r1
    1c58:	mov	r6, r0
    1c5c:	sbfx	r0, r3, #0, #16
    1c60:	strh	r0, [sp, #32]
    1c64:	ldr	r0, [r6, #24]
    1c68:	ldr	r2, [r6, #28]
    1c6c:	eor	r1, r0, #16
    1c70:	orr	ip, r2, r1
    1c74:	cmp	ip, #0
    1c78:	beq	1c90 <coda_mem_int16_new+0x5c>
    1c7c:	ldr	r0, [pc, #100]	; 1ce8 <coda_mem_int16_new+0xb4>
    1c80:	ldr	r1, [pc, #104]	; 1cf0 <coda_mem_int16_new+0xbc>
    1c84:	movw	r2, #863	; 0x35f
    1c88:	ldr	r3, [pc, #92]	; 1cec <coda_mem_int16_new+0xb8>
    1c8c:	bl	0 <__assert_fail>
    1c90:	ldr	r3, [r6, #12]
    1c94:	cmp	r3, #2
    1c98:	beq	1cb0 <coda_mem_int16_new+0x7c>
    1c9c:	ldr	r0, [pc, #64]	; 1ce4 <coda_mem_int16_new+0xb0>
    1ca0:	ldr	r1, [pc, #72]	; 1cf0 <coda_mem_int16_new+0xbc>
    1ca4:	mov	r2, #864	; 0x360
    1ca8:	ldr	r3, [pc, #60]	; 1cec <coda_mem_int16_new+0xb8>
    1cac:	bl	0 <__assert_fail>
    1cb0:	mov	r3, #2
    1cb4:	add	ip, sp, #32
    1cb8:	str	ip, [sp]
    1cbc:	mov	r2, r5
    1cc0:	mov	r1, r4
    1cc4:	mov	r0, r6
    1cc8:	bl	16c4 <coda_mem_data_new>
    1ccc:	ldr	r4, [sp, #16]
    1cd0:	ldr	r5, [sp, #20]
    1cd4:	ldr	r6, [sp, #24]
    1cd8:	ldr	lr, [sp, #8]
    1cdc:	add	sp, sp, #40	; 0x28
    1ce0:	bx	lr
    1ce4:	.word	0x000008e6
    1ce8:	.word	0x00000b0a
    1cec:	.word	0x00000bd8
    1cf0:	.word	0x00000048

00001cf4 <coda_mem_uint16_new>:
    1cf4:	mov	ip, sp
    1cf8:	sub	sp, sp, #40	; 0x28
    1cfc:	str	ip, [sp, #4]
    1d00:	str	lr, [sp, #8]
    1d04:	str	r4, [sp, #16]
    1d08:	str	r5, [sp, #20]
    1d0c:	str	r6, [sp, #24]
    1d10:	mov	r5, r2
    1d14:	mov	r4, r1
    1d18:	mov	r6, r0
    1d1c:	bic	r0, r3, #16711680	; 0xff0000
    1d20:	bic	r0, r0, #-16777216	; 0xff000000
    1d24:	strh	r0, [sp, #32]
    1d28:	ldr	r0, [r6, #24]
    1d2c:	ldr	r2, [r6, #28]
    1d30:	eor	r1, r0, #16
    1d34:	orr	ip, r2, r1
    1d38:	cmp	ip, #0
    1d3c:	beq	1d54 <coda_mem_uint16_new+0x60>
    1d40:	ldr	r0, [pc, #104]	; 1db0 <coda_mem_uint16_new+0xbc>
    1d44:	ldr	r1, [pc, #104]	; 1db4 <coda_mem_uint16_new+0xc0>
    1d48:	movw	r2, #871	; 0x367
    1d4c:	ldr	r3, [pc, #84]	; 1da8 <coda_mem_uint16_new+0xb4>
    1d50:	bl	0 <__assert_fail>
    1d54:	ldr	r3, [r6, #12]
    1d58:	cmp	r3, #3
    1d5c:	beq	1d74 <coda_mem_uint16_new+0x80>
    1d60:	ldr	r0, [pc, #68]	; 1dac <coda_mem_uint16_new+0xb8>
    1d64:	ldr	r1, [pc, #72]	; 1db4 <coda_mem_uint16_new+0xc0>
    1d68:	mov	r2, #872	; 0x368
    1d6c:	ldr	r3, [pc, #52]	; 1da8 <coda_mem_uint16_new+0xb4>
    1d70:	bl	0 <__assert_fail>
    1d74:	mov	r3, #2
    1d78:	add	ip, sp, #32
    1d7c:	str	ip, [sp]
    1d80:	mov	r2, r5
    1d84:	mov	r1, r4
    1d88:	mov	r0, r6
    1d8c:	bl	16c4 <coda_mem_data_new>
    1d90:	ldr	r4, [sp, #16]
    1d94:	ldr	r5, [sp, #20]
    1d98:	ldr	r6, [sp, #24]
    1d9c:	ldr	lr, [sp, #8]
    1da0:	add	sp, sp, #40	; 0x28
    1da4:	bx	lr
    1da8:	.word	0x00000beb
    1dac:	.word	0x00000476
    1db0:	.word	0x00000b0a
    1db4:	.word	0x00000048

00001db8 <coda_mem_int32_new>:
    1db8:	mov	ip, sp
    1dbc:	sub	sp, sp, #40	; 0x28
    1dc0:	str	ip, [sp, #4]
    1dc4:	str	lr, [sp, #8]
    1dc8:	str	r4, [sp, #16]
    1dcc:	str	r5, [sp, #20]
    1dd0:	str	r6, [sp, #24]
    1dd4:	mov	r4, r2
    1dd8:	mov	r5, r1
    1ddc:	mov	r6, r0
    1de0:	str	r3, [sp, #32]
    1de4:	ldr	r0, [r6, #24]
    1de8:	ldr	r2, [r6, #28]
    1dec:	eor	r1, r0, #32
    1df0:	orr	ip, r2, r1
    1df4:	cmp	ip, #0
    1df8:	beq	1e10 <coda_mem_int32_new+0x58>
    1dfc:	ldr	r0, [pc, #100]	; 1e68 <coda_mem_int32_new+0xb0>
    1e00:	ldr	r1, [pc, #104]	; 1e70 <coda_mem_int32_new+0xb8>
    1e04:	movw	r2, #879	; 0x36f
    1e08:	ldr	r3, [pc, #92]	; 1e6c <coda_mem_int32_new+0xb4>
    1e0c:	bl	0 <__assert_fail>
    1e10:	ldr	r3, [r6, #12]
    1e14:	cmp	r3, #4
    1e18:	beq	1e30 <coda_mem_int32_new+0x78>
    1e1c:	ldr	r0, [pc, #64]	; 1e64 <coda_mem_int32_new+0xac>
    1e20:	ldr	r1, [pc, #72]	; 1e70 <coda_mem_int32_new+0xb8>
    1e24:	mov	r2, #880	; 0x370
    1e28:	ldr	r3, [pc, #60]	; 1e6c <coda_mem_int32_new+0xb4>
    1e2c:	bl	0 <__assert_fail>
    1e30:	mov	r3, #4
    1e34:	add	ip, sp, #32
    1e38:	str	ip, [sp]
    1e3c:	mov	r2, r4
    1e40:	mov	r1, r5
    1e44:	mov	r0, r6
    1e48:	bl	16c4 <coda_mem_data_new>
    1e4c:	ldr	r4, [sp, #16]
    1e50:	ldr	r5, [sp, #20]
    1e54:	ldr	r6, [sp, #24]
    1e58:	ldr	lr, [sp, #8]
    1e5c:	add	sp, sp, #40	; 0x28
    1e60:	bx	lr
    1e64:	.word	0x00000983
    1e68:	.word	0x000008cb
    1e6c:	.word	0x00000bff
    1e70:	.word	0x00000048

00001e74 <coda_mem_uint32_new>:
    1e74:	mov	ip, sp
    1e78:	sub	sp, sp, #40	; 0x28
    1e7c:	str	ip, [sp, #4]
    1e80:	str	lr, [sp, #8]
    1e84:	str	r4, [sp, #16]
    1e88:	str	r5, [sp, #20]
    1e8c:	str	r6, [sp, #24]
    1e90:	mov	r4, r2
    1e94:	mov	r5, r1
    1e98:	mov	r6, r0
    1e9c:	str	r3, [sp, #32]
    1ea0:	ldr	r0, [r6, #24]
    1ea4:	ldr	r2, [r6, #28]
    1ea8:	eor	r1, r0, #32
    1eac:	orr	ip, r2, r1
    1eb0:	cmp	ip, #0
    1eb4:	beq	1ecc <coda_mem_uint32_new+0x58>
    1eb8:	ldr	r0, [pc, #96]	; 1f20 <coda_mem_uint32_new+0xac>
    1ebc:	ldr	r1, [pc, #104]	; 1f2c <coda_mem_uint32_new+0xb8>
    1ec0:	movw	r2, #887	; 0x377
    1ec4:	ldr	r3, [pc, #88]	; 1f24 <coda_mem_uint32_new+0xb0>
    1ec8:	bl	0 <__assert_fail>
    1ecc:	ldr	r3, [r6, #12]
    1ed0:	cmp	r3, #5
    1ed4:	beq	1eec <coda_mem_uint32_new+0x78>
    1ed8:	ldr	r0, [pc, #72]	; 1f28 <coda_mem_uint32_new+0xb4>
    1edc:	ldr	r1, [pc, #72]	; 1f2c <coda_mem_uint32_new+0xb8>
    1ee0:	mov	r2, #888	; 0x378
    1ee4:	ldr	r3, [pc, #56]	; 1f24 <coda_mem_uint32_new+0xb0>
    1ee8:	bl	0 <__assert_fail>
    1eec:	mov	r3, #4
    1ef0:	add	ip, sp, #32
    1ef4:	str	ip, [sp]
    1ef8:	mov	r2, r4
    1efc:	mov	r1, r5
    1f00:	mov	r0, r6
    1f04:	bl	16c4 <coda_mem_data_new>
    1f08:	ldr	r4, [sp, #16]
    1f0c:	ldr	r5, [sp, #20]
    1f10:	ldr	r6, [sp, #24]
    1f14:	ldr	lr, [sp, #8]
    1f18:	add	sp, sp, #40	; 0x28
    1f1c:	bx	lr
    1f20:	.word	0x000008cb
    1f24:	.word	0x00000c12
    1f28:	.word	0x00000119
    1f2c:	.word	0x00000048

00001f30 <coda_mem_int64_new>:
    1f30:	mov	ip, sp
    1f34:	sub	sp, sp, #40	; 0x28
    1f38:	str	ip, [sp, #4]
    1f3c:	str	lr, [sp, #8]
    1f40:	str	r4, [sp, #16]
    1f44:	str	r5, [sp, #20]
    1f48:	str	r6, [sp, #24]
    1f4c:	mov	r6, r0
    1f50:	ldr	r0, [ip, #4]
    1f54:	mov	r5, r1
    1f58:	ldr	r1, [ip]
    1f5c:	mov	r4, r2
    1f60:	str	r1, [sp, #32]
    1f64:	str	r0, [sp, #36]	; 0x24
    1f68:	ldr	r0, [r6, #24]
    1f6c:	ldr	r2, [r6, #28]
    1f70:	eor	r1, r0, #64	; 0x40
    1f74:	orr	ip, r2, r1
    1f78:	cmp	ip, #0
    1f7c:	beq	1f94 <coda_mem_int64_new+0x64>
    1f80:	ldr	r0, [pc, #96]	; 1fe8 <coda_mem_int64_new+0xb8>
    1f84:	ldr	r1, [pc, #104]	; 1ff4 <coda_mem_int64_new+0xc4>
    1f88:	movw	r2, #895	; 0x37f
    1f8c:	ldr	r3, [pc, #92]	; 1ff0 <coda_mem_int64_new+0xc0>
    1f90:	bl	0 <__assert_fail>
    1f94:	ldr	ip, [r6, #12]
    1f98:	cmp	ip, #6
    1f9c:	beq	1fb4 <coda_mem_int64_new+0x84>
    1fa0:	ldr	r0, [pc, #68]	; 1fec <coda_mem_int64_new+0xbc>
    1fa4:	ldr	r1, [pc, #72]	; 1ff4 <coda_mem_int64_new+0xc4>
    1fa8:	mov	r2, #896	; 0x380
    1fac:	ldr	r3, [pc, #60]	; 1ff0 <coda_mem_int64_new+0xc0>
    1fb0:	bl	0 <__assert_fail>
    1fb4:	mov	r3, #8
    1fb8:	add	ip, sp, #32
    1fbc:	str	ip, [sp]
    1fc0:	mov	r2, r4
    1fc4:	mov	r1, r5
    1fc8:	mov	r0, r6
    1fcc:	bl	16c4 <coda_mem_data_new>
    1fd0:	ldr	r4, [sp, #16]
    1fd4:	ldr	r5, [sp, #20]
    1fd8:	ldr	r6, [sp, #24]
    1fdc:	ldr	lr, [sp, #8]
    1fe0:	add	sp, sp, #40	; 0x28
    1fe4:	bx	lr
    1fe8:	.word	0x00000878
    1fec:	.word	0x000002fa
    1ff0:	.word	0x00000c26
    1ff4:	.word	0x00000048

00001ff8 <coda_mem_uint64_new>:
    1ff8:	mov	ip, sp
    1ffc:	sub	sp, sp, #40	; 0x28
    2000:	str	ip, [sp, #4]
    2004:	str	lr, [sp, #8]
    2008:	str	r4, [sp, #16]
    200c:	str	r5, [sp, #20]
    2010:	str	r6, [sp, #24]
    2014:	mov	r6, r0
    2018:	ldr	r0, [ip, #4]
    201c:	mov	r5, r1
    2020:	ldr	r1, [ip]
    2024:	mov	r4, r2
    2028:	str	r1, [sp, #32]
    202c:	str	r0, [sp, #36]	; 0x24
    2030:	ldr	r0, [r6, #24]
    2034:	ldr	r2, [r6, #28]
    2038:	eor	r1, r0, #64	; 0x40
    203c:	orr	ip, r2, r1
    2040:	cmp	ip, #0
    2044:	beq	205c <coda_mem_uint64_new+0x64>
    2048:	ldr	r0, [pc, #96]	; 20b0 <coda_mem_uint64_new+0xb8>
    204c:	ldr	r1, [pc, #104]	; 20bc <coda_mem_uint64_new+0xc4>
    2050:	movw	r2, #903	; 0x387
    2054:	ldr	r3, [pc, #92]	; 20b8 <coda_mem_uint64_new+0xc0>
    2058:	bl	0 <__assert_fail>
    205c:	ldr	ip, [r6, #12]
    2060:	cmp	ip, #7
    2064:	beq	207c <coda_mem_uint64_new+0x84>
    2068:	ldr	r0, [pc, #68]	; 20b4 <coda_mem_uint64_new+0xbc>
    206c:	ldr	r1, [pc, #72]	; 20bc <coda_mem_uint64_new+0xc4>
    2070:	mov	r2, #904	; 0x388
    2074:	ldr	r3, [pc, #60]	; 20b8 <coda_mem_uint64_new+0xc0>
    2078:	bl	0 <__assert_fail>
    207c:	mov	r3, #8
    2080:	add	ip, sp, #32
    2084:	str	ip, [sp]
    2088:	mov	r2, r4
    208c:	mov	r1, r5
    2090:	mov	r0, r6
    2094:	bl	16c4 <coda_mem_data_new>
    2098:	ldr	r4, [sp, #16]
    209c:	ldr	r5, [sp, #20]
    20a0:	ldr	r6, [sp, #24]
    20a4:	ldr	lr, [sp, #8]
    20a8:	add	sp, sp, #40	; 0x28
    20ac:	bx	lr
    20b0:	.word	0x00000878
    20b4:	.word	0x0000032a
    20b8:	.word	0x00000c39
    20bc:	.word	0x00000048

000020c0 <coda_mem_float_new>:
    20c0:	mov	ip, sp
    20c4:	sub	sp, sp, #40	; 0x28
    20c8:	str	ip, [sp, #4]
    20cc:	str	lr, [sp, #8]
    20d0:	str	r4, [sp, #16]
    20d4:	str	r5, [sp, #20]
    20d8:	str	r6, [sp, #24]
    20dc:	mov	r4, r2
    20e0:	mov	r5, r1
    20e4:	mov	r6, r0
    20e8:	vstr	s0, [sp, #32]
    20ec:	ldr	r0, [r6, #24]
    20f0:	ldr	r2, [r6, #28]
    20f4:	eor	r1, r0, #32
    20f8:	orr	ip, r2, r1
    20fc:	cmp	ip, #0
    2100:	beq	2118 <coda_mem_float_new+0x58>
    2104:	ldr	r0, [pc, #100]	; 2170 <coda_mem_float_new+0xb0>
    2108:	ldr	r1, [pc, #104]	; 2178 <coda_mem_float_new+0xb8>
    210c:	movw	r2, #911	; 0x38f
    2110:	ldr	r3, [pc, #92]	; 2174 <coda_mem_float_new+0xb4>
    2114:	bl	0 <__assert_fail>
    2118:	ldr	r3, [r6, #12]
    211c:	cmp	r3, #8
    2120:	beq	2138 <coda_mem_float_new+0x78>
    2124:	ldr	r0, [pc, #64]	; 216c <coda_mem_float_new+0xac>
    2128:	ldr	r1, [pc, #72]	; 2178 <coda_mem_float_new+0xb8>
    212c:	mov	r2, #912	; 0x390
    2130:	ldr	r3, [pc, #60]	; 2174 <coda_mem_float_new+0xb4>
    2134:	bl	0 <__assert_fail>
    2138:	mov	r3, #4
    213c:	add	ip, sp, #32
    2140:	str	ip, [sp]
    2144:	mov	r2, r4
    2148:	mov	r1, r5
    214c:	mov	r0, r6
    2150:	bl	16c4 <coda_mem_data_new>
    2154:	ldr	r4, [sp, #16]
    2158:	ldr	r5, [sp, #20]
    215c:	ldr	r6, [sp, #24]
    2160:	ldr	lr, [sp, #8]
    2164:	add	sp, sp, #40	; 0x28
    2168:	bx	lr
    216c:	.word	0x00000a2a
    2170:	.word	0x000008cb
    2174:	.word	0x00000c4d
    2178:	.word	0x00000048

0000217c <coda_mem_double_new>:
    217c:	mov	ip, sp
    2180:	sub	sp, sp, #40	; 0x28
    2184:	str	ip, [sp, #4]
    2188:	str	lr, [sp, #8]
    218c:	str	r4, [sp, #16]
    2190:	str	r5, [sp, #20]
    2194:	str	r6, [sp, #24]
    2198:	mov	r4, r2
    219c:	mov	r5, r1
    21a0:	mov	r6, r0
    21a4:	vstr	d0, [sp, #32]
    21a8:	ldr	r0, [r6, #24]
    21ac:	ldr	r2, [r6, #28]
    21b0:	eor	r1, r0, #64	; 0x40
    21b4:	orr	ip, r2, r1
    21b8:	cmp	ip, #0
    21bc:	beq	21d4 <coda_mem_double_new+0x58>
    21c0:	ldr	r0, [pc, #96]	; 2228 <coda_mem_double_new+0xac>
    21c4:	ldr	r1, [pc, #104]	; 2234 <coda_mem_double_new+0xb8>
    21c8:	movw	r2, #919	; 0x397
    21cc:	ldr	r3, [pc, #92]	; 2230 <coda_mem_double_new+0xb4>
    21d0:	bl	0 <__assert_fail>
    21d4:	ldr	r3, [r6, #12]
    21d8:	cmp	r3, #9
    21dc:	beq	21f4 <coda_mem_double_new+0x78>
    21e0:	ldr	r0, [pc, #68]	; 222c <coda_mem_double_new+0xb0>
    21e4:	ldr	r1, [pc, #72]	; 2234 <coda_mem_double_new+0xb8>
    21e8:	mov	r2, #920	; 0x398
    21ec:	ldr	r3, [pc, #60]	; 2230 <coda_mem_double_new+0xb4>
    21f0:	bl	0 <__assert_fail>
    21f4:	mov	r3, #8
    21f8:	add	ip, sp, #32
    21fc:	str	ip, [sp]
    2200:	mov	r2, r4
    2204:	mov	r1, r5
    2208:	mov	r0, r6
    220c:	bl	16c4 <coda_mem_data_new>
    2210:	ldr	r4, [sp, #16]
    2214:	ldr	r5, [sp, #20]
    2218:	ldr	r6, [sp, #24]
    221c:	ldr	lr, [sp, #8]
    2220:	add	sp, sp, #40	; 0x28
    2224:	bx	lr
    2228:	.word	0x00000878
    222c:	.word	0x00000426
    2230:	.word	0x00000c60
    2234:	.word	0x00000048

00002238 <coda_mem_char_new>:
    2238:	mov	ip, sp
    223c:	sub	sp, sp, #40	; 0x28
    2240:	str	ip, [sp, #4]
    2244:	str	lr, [sp, #8]
    2248:	str	r4, [sp, #16]
    224c:	str	r5, [sp, #20]
    2250:	str	r6, [sp, #24]
    2254:	mov	r5, r2
    2258:	mov	r4, r1
    225c:	mov	r6, r0
    2260:	and	r0, r3, #255	; 0xff
    2264:	strb	r0, [sp, #32]
    2268:	ldr	r0, [r6, #24]
    226c:	ldr	r2, [r6, #28]
    2270:	eor	r1, r0, #8
    2274:	orr	ip, r2, r1
    2278:	cmp	ip, #0
    227c:	beq	2294 <coda_mem_char_new+0x5c>
    2280:	ldr	r0, [pc, #96]	; 22e8 <coda_mem_char_new+0xb0>
    2284:	ldr	r1, [pc, #104]	; 22f4 <coda_mem_char_new+0xbc>
    2288:	movw	r2, #927	; 0x39f
    228c:	ldr	r3, [pc, #92]	; 22f0 <coda_mem_char_new+0xb8>
    2290:	bl	0 <__assert_fail>
    2294:	ldr	r3, [r6, #12]
    2298:	cmp	r3, #10
    229c:	beq	22b4 <coda_mem_char_new+0x7c>
    22a0:	ldr	r0, [pc, #68]	; 22ec <coda_mem_char_new+0xb4>
    22a4:	ldr	r1, [pc, #72]	; 22f4 <coda_mem_char_new+0xbc>
    22a8:	mov	r2, #928	; 0x3a0
    22ac:	ldr	r3, [pc, #60]	; 22f0 <coda_mem_char_new+0xb8>
    22b0:	bl	0 <__assert_fail>
    22b4:	mov	r3, #1
    22b8:	add	ip, sp, #32
    22bc:	str	ip, [sp]
    22c0:	mov	r2, r5
    22c4:	mov	r1, r4
    22c8:	mov	r0, r6
    22cc:	bl	16c4 <coda_mem_data_new>
    22d0:	ldr	r4, [sp, #16]
    22d4:	ldr	r5, [sp, #20]
    22d8:	ldr	r6, [sp, #24]
    22dc:	ldr	lr, [sp, #8]
    22e0:	add	sp, sp, #40	; 0x28
    22e4:	bx	lr
    22e8:	.word	0x00000969
    22ec:	.word	0x0000029a
    22f0:	.word	0x00000c74
    22f4:	.word	0x00000048

000022f8 <coda_mem_string_new>:
    22f8:	mov	ip, sp
    22fc:	sub	sp, sp, #32
    2300:	str	ip, [sp, #4]
    2304:	str	lr, [sp, #8]
    2308:	str	r4, [sp, #16]
    230c:	str	r5, [sp, #20]
    2310:	str	r6, [sp, #24]
    2314:	str	r7, [sp, #28]
    2318:	mov	r4, r3
    231c:	mov	r6, r2
    2320:	mov	r7, r1
    2324:	mov	r5, r0
    2328:	ldr	r1, [r5, #12]
    232c:	cmp	r1, #11
    2330:	beq	2348 <coda_mem_string_new+0x50>
    2334:	ldr	r0, [pc, #92]	; 2398 <coda_mem_string_new+0xa0>
    2338:	ldr	r1, [pc, #92]	; 239c <coda_mem_string_new+0xa4>
    233c:	movw	r2, #935	; 0x3a7
    2340:	ldr	r3, [pc, #76]	; 2394 <coda_mem_string_new+0x9c>
    2344:	bl	0 <__assert_fail>
    2348:	cmp	r4, #0
    234c:	beq	2360 <coda_mem_string_new+0x68>
    2350:	mov	r0, r4
    2354:	bl	0 <strlen>
    2358:	mov	r3, r0
    235c:	b	2364 <coda_mem_string_new+0x6c>
    2360:	mov	r3, #0
    2364:	str	r4, [sp]
    2368:	mov	r2, r6
    236c:	mov	r1, r7
    2370:	mov	r0, r5
    2374:	bl	16c4 <coda_mem_data_new>
    2378:	ldr	r4, [sp, #16]
    237c:	ldr	r5, [sp, #20]
    2380:	ldr	r6, [sp, #24]
    2384:	ldr	r7, [sp, #28]
    2388:	ldr	lr, [sp, #8]
    238c:	add	sp, sp, #32
    2390:	bx	lr
    2394:	.word	0x00000c86
    2398:	.word	0x000002c9
    239c:	.word	0x00000048

000023a0 <coda_mem_raw_new>:
    23a0:	mov	ip, sp
    23a4:	sub	sp, sp, #40	; 0x28
    23a8:	str	ip, [sp, #4]
    23ac:	str	lr, [sp, #8]
    23b0:	str	r4, [sp, #16]
    23b4:	str	r5, [sp, #20]
    23b8:	str	r6, [sp, #24]
    23bc:	str	r7, [sp, #28]
    23c0:	str	r8, [sp, #32]
    23c4:	ldr	r7, [ip]
    23c8:	mov	r5, r3
    23cc:	mov	r6, r2
    23d0:	mov	r4, r1
    23d4:	mov	r8, r0
    23d8:	ldr	r1, [r8, #8]
    23dc:	cmp	r1, #5
    23e0:	beq	23f8 <coda_mem_raw_new+0x58>
    23e4:	ldr	r0, [pc, #68]	; 2430 <coda_mem_raw_new+0x90>
    23e8:	ldr	r1, [pc, #72]	; 2438 <coda_mem_raw_new+0x98>
    23ec:	movw	r2, #943	; 0x3af
    23f0:	ldr	r3, [pc, #60]	; 2434 <coda_mem_raw_new+0x94>
    23f4:	bl	0 <__assert_fail>
    23f8:	str	r7, [sp]
    23fc:	mov	r3, r5
    2400:	mov	r2, r6
    2404:	mov	r1, r4
    2408:	mov	r0, r8
    240c:	bl	16c4 <coda_mem_data_new>
    2410:	ldr	r4, [sp, #16]
    2414:	ldr	r5, [sp, #20]
    2418:	ldr	r6, [sp, #24]
    241c:	ldr	r7, [sp, #28]
    2420:	ldr	r8, [sp, #32]
    2424:	ldr	lr, [sp, #8]
    2428:	add	sp, sp, #40	; 0x28
    242c:	bx	lr
    2430:	.word	0x000001dc
    2434:	.word	0x00000c9a
    2438:	.word	0x00000048

0000243c <coda_mem_time_new>:
    243c:	mov	ip, sp
    2440:	sub	sp, sp, #32
    2444:	str	ip, [sp, #4]
    2448:	str	lr, [sp, #8]
    244c:	str	r4, [sp, #16]
    2450:	str	r5, [sp, #20]
    2454:	str	r6, [sp, #24]
    2458:	str	r7, [sp, #28]
    245c:	mov	r5, r2
    2460:	mov	r6, r1
    2464:	mov	r7, r0
    2468:	cmp	r7, #0
    246c:	bne	248c <coda_mem_time_new+0x50>
    2470:	mvn	r0, #99	; 0x63
    2474:	ldr	r1, [pc, #320]	; 25bc <coda_mem_time_new+0x180>
    2478:	ldr	r2, [pc, #324]	; 25c4 <coda_mem_time_new+0x188>
    247c:	movw	r3, #954	; 0x3ba
    2480:	bl	0 <coda_set_error>
    2484:	mov	r0, #0
    2488:	b	2598 <coda_mem_time_new+0x15c>
    248c:	ldr	r1, [r7, #8]
    2490:	cmp	r1, #6
    2494:	beq	24b4 <coda_mem_time_new+0x78>
    2498:	mvn	r0, #99	; 0x63
    249c:	ldr	r1, [pc, #292]	; 25c8 <coda_mem_time_new+0x18c>
    24a0:	ldr	r2, [pc, #284]	; 25c4 <coda_mem_time_new+0x188>
    24a4:	movw	r3, #959	; 0x3bf
    24a8:	bl	0 <coda_set_error>
    24ac:	mov	r0, #0
    24b0:	b	2598 <coda_mem_time_new+0x15c>
    24b4:	ldr	ip, [r7, #40]	; 0x28
    24b8:	cmp	ip, #2
    24bc:	beq	24dc <coda_mem_time_new+0xa0>
    24c0:	mvn	r0, #99	; 0x63
    24c4:	ldr	r1, [pc, #232]	; 25b4 <coda_mem_time_new+0x178>
    24c8:	ldr	r2, [pc, #244]	; 25c4 <coda_mem_time_new+0x188>
    24cc:	mov	r3, #964	; 0x3c4
    24d0:	bl	0 <coda_set_error>
    24d4:	mov	r0, #0
    24d8:	b	2598 <coda_mem_time_new+0x15c>
    24dc:	ldr	r1, [r7, #44]	; 0x2c
    24e0:	ldr	ip, [r5, #4]
    24e4:	cmp	r1, ip
    24e8:	beq	2508 <coda_mem_time_new+0xcc>
    24ec:	mvn	r0, #99	; 0x63
    24f0:	ldr	r1, [pc, #192]	; 25b8 <coda_mem_time_new+0x17c>
    24f4:	ldr	r2, [pc, #200]	; 25c4 <coda_mem_time_new+0x188>
    24f8:	movw	r3, #970	; 0x3ca
    24fc:	bl	0 <coda_set_error>
    2500:	mov	r0, #0
    2504:	b	2598 <coda_mem_time_new+0x15c>
    2508:	mov	r0, #20
    250c:	bl	0 <malloc>
    2510:	mov	r4, r0
    2514:	cmp	r4, #0
    2518:	bne	2540 <coda_mem_time_new+0x104>
    251c:	mvn	r0, #0
    2520:	ldr	r1, [pc, #152]	; 25c0 <coda_mem_time_new+0x184>
    2524:	mov	r2, #20
    2528:	ldr	r3, [pc, #148]	; 25c4 <coda_mem_time_new+0x188>
    252c:	movw	ip, #978	; 0x3d2
    2530:	str	ip, [sp]
    2534:	bl	0 <coda_set_error>
    2538:	mov	r0, #0
    253c:	b	2598 <coda_mem_time_new+0x15c>
    2540:	mov	r3, #100	; 0x64
    2544:	str	r3, [r4]
    2548:	str	r7, [r4, #4]
    254c:	ldr	r2, [r7, #4]
    2550:	add	ip, r2, #1
    2554:	str	ip, [r7, #4]
    2558:	mov	r0, #3
    255c:	str	r0, [r4, #8]
    2560:	str	r6, [r4, #12]
    2564:	str	r5, [r4, #16]
    2568:	ldr	r0, [r4, #12]
    256c:	cmp	r0, #0
    2570:	bne	2594 <coda_mem_time_new+0x158>
    2574:	mov	r0, r4
    2578:	bl	65c <create_attributes_record>
    257c:	cmp	r0, #0
    2580:	beq	2594 <coda_mem_time_new+0x158>
    2584:	mov	r0, r4
    2588:	bl	0 <coda_mem_type_delete>
    258c:	mov	r0, #0
    2590:	b	2598 <coda_mem_time_new+0x15c>
    2594:	mov	r0, r4
    2598:	ldr	r4, [sp, #16]
    259c:	ldr	r5, [sp, #20]
    25a0:	ldr	r6, [sp, #24]
    25a4:	ldr	r7, [sp, #28]
    25a8:	ldr	lr, [sp, #8]
    25ac:	add	sp, sp, #32
    25b0:	bx	lr
    25b4:	.word	0x000004f2
    25b8:	.word	0x00000693
    25bc:	.word	0x00000a06
    25c0:	.word	0x00000916
    25c4:	.word	0x00000048
    25c8:	.word	0x00000518

000025cc <coda_mem_no_data_new>:
    25cc:	mov	ip, sp
    25d0:	sub	sp, sp, #24
    25d4:	str	ip, [sp, #4]
    25d8:	str	lr, [sp, #8]
    25dc:	str	r4, [sp, #16]
    25e0:	str	r5, [sp, #20]
    25e4:	mov	r5, r0
    25e8:	mov	r0, #20
    25ec:	bl	0 <malloc>
    25f0:	mov	r4, r0
    25f4:	cmp	r4, #0
    25f8:	bne	2620 <coda_mem_no_data_new+0x54>
    25fc:	mvn	r0, #0
    2600:	ldr	r1, [pc, #244]	; 26fc <coda_mem_no_data_new+0x130>
    2604:	mov	r2, #20
    2608:	ldr	r3, [pc, #240]	; 2700 <coda_mem_no_data_new+0x134>
    260c:	movw	r4, #1009	; 0x3f1
    2610:	str	r4, [sp]
    2614:	bl	0 <coda_set_error>
    2618:	mov	r0, #0
    261c:	b	26e8 <coda_mem_no_data_new+0x11c>
    2620:	mov	ip, #100	; 0x64
    2624:	str	ip, [r4]
    2628:	mov	ip, #0
    262c:	str	ip, [r4, #4]
    2630:	mov	r0, #3
    2634:	str	r0, [r4, #8]
    2638:	mov	r3, #0
    263c:	str	r3, [r4, #12]
    2640:	mov	r1, #0
    2644:	str	r1, [r4, #16]
    2648:	mov	r0, r5
    264c:	bl	0 <coda_type_no_data_singleton>
    2650:	str	r0, [r4, #4]
    2654:	ldr	r3, [r4, #4]
    2658:	cmp	r3, #0
    265c:	bne	2670 <coda_mem_no_data_new+0xa4>
    2660:	mov	r0, r4
    2664:	bl	0 <coda_mem_type_delete>
    2668:	mov	r0, #0
    266c:	b	26e8 <coda_mem_no_data_new+0x11c>
    2670:	ldr	r0, [r4, #4]
    2674:	ldr	r1, [r4, #4]
    2678:	ldr	r2, [r1, #4]
    267c:	add	r2, r2, #1
    2680:	str	r2, [r0, #4]
    2684:	ldr	r3, [r4, #4]
    2688:	ldr	r0, [r3, #44]	; 0x2c
    268c:	mov	r1, #0
    2690:	mov	r2, #0
    2694:	mov	r3, #0
    2698:	mov	ip, #0
    269c:	str	ip, [sp]
    26a0:	bl	23a0 <coda_mem_raw_new>
    26a4:	str	r0, [r4, #16]
    26a8:	ldr	r0, [r4, #16]
    26ac:	cmp	r0, #0
    26b0:	bne	26c4 <coda_mem_no_data_new+0xf8>
    26b4:	mov	r0, r4
    26b8:	bl	0 <coda_mem_type_delete>
    26bc:	mov	r0, #0
    26c0:	b	26e8 <coda_mem_no_data_new+0x11c>
    26c4:	mov	r0, r4
    26c8:	bl	65c <create_attributes_record>
    26cc:	cmp	r0, #0
    26d0:	beq	26e4 <coda_mem_no_data_new+0x118>
    26d4:	mov	r0, r4
    26d8:	bl	0 <coda_mem_type_delete>
    26dc:	mov	r0, #0
    26e0:	b	26e8 <coda_mem_no_data_new+0x11c>
    26e4:	mov	r0, r4
    26e8:	ldr	r4, [sp, #16]
    26ec:	ldr	r5, [sp, #20]
    26f0:	ldr	lr, [sp, #8]
    26f4:	add	sp, sp, #24
    26f8:	bx	lr
    26fc:	.word	0x00000916
    2700:	.word	0x00000048
