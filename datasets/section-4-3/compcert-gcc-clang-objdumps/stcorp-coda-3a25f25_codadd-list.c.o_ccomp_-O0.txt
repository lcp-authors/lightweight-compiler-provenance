
../repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-list.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_path>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #64	; 0x40
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	str	r5, [sp, #12]
  18:	str	r6, [sp, #16]
  1c:	str	r7, [sp, #20]
  20:	mov	r4, r0
  24:	ldr	r0, [pc, #436]	; 1e0 <print_path+0x1e0>
  28:	bl	0 <printf>
  2c:	mov	r5, #0
  30:	cmp	r5, r4
  34:	bge	1c4 <print_path+0x1c4>
  38:	ldr	ip, [pc, #460]	; 20c <print_path+0x20c>
  3c:	lsl	r3, r5, #2
  40:	add	r3, ip, r3
  44:	ldr	r1, [r3, #4]
  48:	cmn	r1, #1
  4c:	beq	1b4 <print_path+0x1b4>
  50:	ldr	r2, [pc, #408]	; 1f0 <print_path+0x1f0>
  54:	ldr	r6, [r2, r5, lsl #2]
  58:	ldr	r2, [r6, #8]
  5c:	cmp	r2, #0
  60:	beq	154 <print_path+0x154>
  64:	cmp	r2, #1
  68:	bne	134 <print_path+0x134>
  6c:	add	r1, sp, #24
  70:	add	r2, sp, #32
  74:	mov	r0, r6
  78:	bl	0 <coda_type_get_array_dim>
  7c:	ldr	r0, [pc, #368]	; 1f4 <print_path+0x1f4>
  80:	bl	0 <printf>
  84:	mov	r7, #0
  88:	ldr	r0, [sp, #24]
  8c:	cmp	r7, r0
  90:	bge	128 <print_path+0x128>
  94:	cmp	r7, #0
  98:	ble	a4 <print_path+0xa4>
  9c:	ldr	r0, [pc, #364]	; 210 <print_path+0x210>
  a0:	bl	0 <printf>
  a4:	add	r2, sp, #32
  a8:	ldr	ip, [r2, r7, lsl #2]
  ac:	cmp	ip, #0
  b0:	bge	110 <print_path+0x110>
  b4:	ldr	r1, [pc, #344]	; 214 <print_path+0x214>
  b8:	ldr	r0, [r1]
  bc:	cmp	r0, #0
  c0:	beq	e0 <print_path+0xe0>
  c4:	lsl	ip, r7, #2
  c8:	add	ip, r6, ip
  cc:	ldr	r2, [ip, #84]	; 0x54
  d0:	cmp	r2, #0
  d4:	movne	r1, #1
  d8:	moveq	r1, #0
  dc:	b	e4 <print_path+0xe4>
  e0:	mov	r1, #0
  e4:	cmp	r1, #0
  e8:	beq	104 <print_path+0x104>
  ec:	lsl	r1, r7, #2
  f0:	add	r2, r6, r1
  f4:	ldr	r0, [r2, #84]	; 0x54
  f8:	ldr	r1, [pc, #228]	; 1e4 <print_path+0x1e4>
  fc:	bl	0 <coda_expression_print>
 100:	b	120 <print_path+0x120>
 104:	ldr	r0, [pc, #248]	; 204 <print_path+0x204>
 108:	bl	0 <printf>
 10c:	b	120 <print_path+0x120>
 110:	ldr	r0, [pc, #240]	; 208 <print_path+0x208>
 114:	add	ip, sp, #32
 118:	ldr	r1, [ip, r7, lsl #2]
 11c:	bl	0 <printf>
 120:	add	r7, r7, #1
 124:	b	88 <print_path+0x88>
 128:	ldr	r0, [pc, #232]	; 218 <print_path+0x218>
 12c:	bl	0 <printf>
 130:	b	1bc <print_path+0x1bc>
 134:	ldr	r0, [pc, #172]	; 1e8 <print_path+0x1e8>
 138:	ldr	r1, [pc, #172]	; 1ec <print_path+0x1ec>
 13c:	mov	r2, #125	; 0x7d
 140:	ldr	r3, [pc, #180]	; 1fc <print_path+0x1fc>
 144:	bl	0 <__assert_fail>
 148:	mov	r0, #1
 14c:	bl	0 <exit>
 150:	b	1bc <print_path+0x1bc>
 154:	ldr	r1, [pc, #176]	; 20c <print_path+0x20c>
 158:	lsl	r2, r5, #2
 15c:	add	r0, r1, r2
 160:	ldr	r1, [r0, #4]
 164:	add	r2, sp, #28
 168:	mov	r0, r6
 16c:	bl	0 <coda_type_get_record_field_name>
 170:	cmp	r5, #0
 174:	ble	190 <print_path+0x190>
 178:	ldr	ip, [pc, #140]	; 20c <print_path+0x20c>
 17c:	ldr	r3, [ip, r5, lsl #2]
 180:	cmn	r3, #1
 184:	movne	r3, #1
 188:	moveq	r3, #0
 18c:	b	194 <print_path+0x194>
 190:	mov	r3, #0
 194:	cmp	r3, #0
 198:	beq	1a4 <print_path+0x1a4>
 19c:	ldr	r0, [pc, #60]	; 1e0 <print_path+0x1e0>
 1a0:	bl	0 <printf>
 1a4:	ldr	r0, [pc, #76]	; 1f8 <print_path+0x1f8>
 1a8:	ldr	r1, [sp, #28]
 1ac:	bl	0 <printf>
 1b0:	b	1bc <print_path+0x1bc>
 1b4:	ldr	r0, [pc, #68]	; 200 <print_path+0x200>
 1b8:	bl	0 <printf>
 1bc:	add	r5, r5, #1
 1c0:	b	30 <print_path+0x30>
 1c4:	ldr	r4, [sp, #8]
 1c8:	ldr	r5, [sp, #12]
 1cc:	ldr	r6, [sp, #16]
 1d0:	ldr	r7, [sp, #20]
 1d4:	ldr	lr, [sp, #4]
 1d8:	add	sp, sp, #64	; 0x40
 1dc:	bx	lr
 1e0:	.word	0x000000c7
 1e4:	.word	0x00000000
 1e8:	.word	0x000000d4
 1ec:	.word	0x00000012
 1f0:	.word	0x00000000
 1f4:	.word	0x000000d2
 1f8:	.word	0x00000000
 1fc:	.word	0x000000dc
 200:	.word	0x000000ba
 204:	.word	0x000000c9
 208:	.word	0x000000d6
 20c:	.word	0x00000000
 210:	.word	0x000000da
 214:	.word	0x00000000
 218:	.word	0x00000010

0000021c <print_type>:
 21c:	mov	ip, sp
 220:	sub	sp, sp, #72	; 0x48
 224:	str	ip, [sp]
 228:	str	lr, [sp, #4]
 22c:	str	r4, [sp, #8]
 230:	str	r5, [sp, #12]
 234:	str	r6, [sp, #16]
 238:	mov	r4, r1
 23c:	mov	r5, r0
 240:	cmp	r4, #32
 244:	blt	270 <print_type+0x54>
 248:	ldr	r0, [pc, #928]	; 5f0 <print_type+0x3d4>
 24c:	bl	0 <printf>
 250:	ldr	r3, [pc, #876]	; 5c4 <print_type+0x3a8>
 254:	ldr	r0, [r3]
 258:	ldr	r1, [pc, #916]	; 5f4 <print_type+0x3d8>
 25c:	mov	r3, #32
 260:	mov	r2, r4
 264:	bl	0 <fprintf>
 268:	mov	r0, #1
 26c:	bl	0 <exit>
 270:	ldr	r0, [pc, #836]	; 5bc <print_type+0x3a0>
 274:	str	r5, [r0, r4, lsl #2]
 278:	add	r1, sp, #40	; 0x28
 27c:	mov	r0, r5
 280:	bl	0 <coda_type_get_class>
 284:	ldr	r0, [sp, #40]	; 0x28
 288:	cmp	r0, #0
 28c:	beq	2a4 <print_type+0x88>
 290:	ldr	r2, [sp, #40]	; 0x28
 294:	cmp	r2, #1
 298:	moveq	r1, #1
 29c:	movne	r1, #0
 2a0:	b	2a8 <print_type+0x8c>
 2a4:	mov	r1, #1
 2a8:	cmp	r1, #0
 2ac:	bne	2d0 <print_type+0xb4>
 2b0:	ldr	ip, [sp, #40]	; 0x28
 2b4:	cmp	ip, #6
 2b8:	bne	2c8 <print_type+0xac>
 2bc:	ldr	r2, [pc, #772]	; 5c8 <print_type+0x3ac>
 2c0:	ldr	r3, [r2]
 2c4:	b	2d8 <print_type+0xbc>
 2c8:	mov	r3, #1
 2cc:	b	2d8 <print_type+0xbc>
 2d0:	ldr	ip, [pc, #776]	; 5e0 <print_type+0x3c4>
 2d4:	ldr	r3, [ip]
 2d8:	cmp	r3, #0
 2dc:	beq	450 <print_type+0x234>
 2e0:	mov	r0, r4
 2e4:	bl	0 <print_path>
 2e8:	ldr	ip, [pc, #764]	; 5ec <print_type+0x3d0>
 2ec:	ldr	r3, [ip]
 2f0:	cmp	r3, #0
 2f4:	beq	320 <print_type+0x104>
 2f8:	add	r1, sp, #44	; 0x2c
 2fc:	mov	r0, r5
 300:	bl	0 <coda_type_get_read_type>
 304:	ldr	r0, [sp, #44]	; 0x2c
 308:	bl	0 <coda_type_get_native_type_name>
 30c:	mov	r2, r0
 310:	ldr	r0, [pc, #696]	; 5d0 <print_type+0x3b4>
 314:	ldr	r1, [pc, #660]	; 5b0 <print_type+0x394>
 318:	ldr	r1, [r1]
 31c:	bl	0 <printf>
 320:	ldr	r1, [pc, #700]	; 5e4 <print_type+0x3c8>
 324:	ldr	r1, [r1]
 328:	cmp	r1, #0
 32c:	beq	360 <print_type+0x144>
 330:	add	r1, sp, #48	; 0x30
 334:	mov	r0, r5
 338:	bl	0 <coda_type_get_format>
 33c:	ldr	r0, [sp, #48]	; 0x30
 340:	bl	0 <coda_type_get_format_name>
 344:	ldr	r2, [pc, #644]	; 5d0 <print_type+0x3b4>
 348:	ldr	r1, [pc, #608]	; 5b0 <print_type+0x394>
 34c:	ldr	r1, [r1]
 350:	mov	ip, r0
 354:	mov	r0, r2
 358:	mov	r2, ip
 35c:	bl	0 <printf>
 360:	ldr	r2, [pc, #592]	; 5b8 <print_type+0x39c>
 364:	ldr	r2, [r2]
 368:	cmp	r2, #0
 36c:	beq	3d4 <print_type+0x1b8>
 370:	ldr	r0, [pc, #584]	; 5c0 <print_type+0x3a4>
 374:	ldr	r2, [pc, #564]	; 5b0 <print_type+0x394>
 378:	ldr	r1, [r2]
 37c:	bl	0 <printf>
 380:	add	r1, sp, #52	; 0x34
 384:	mov	r0, r5
 388:	bl	0 <coda_type_get_unit>
 38c:	ldr	r2, [sp, #52]	; 0x34
 390:	cmp	r2, #0
 394:	beq	3d4 <print_type+0x1b8>
 398:	ldr	r0, [pc, #556]	; 5cc <print_type+0x3b0>
 39c:	ldr	r3, [r0]
 3a0:	cmp	r3, #0
 3a4:	beq	3b0 <print_type+0x194>
 3a8:	ldr	r0, [pc, #516]	; 5b4 <print_type+0x398>
 3ac:	bl	0 <printf>
 3b0:	ldr	r0, [pc, #520]	; 5c0 <print_type+0x3a4>
 3b4:	ldr	r1, [sp, #52]	; 0x34
 3b8:	bl	0 <printf>
 3bc:	ldr	r3, [pc, #520]	; 5cc <print_type+0x3b0>
 3c0:	ldr	r0, [r3]
 3c4:	cmp	r0, #0
 3c8:	beq	3d4 <print_type+0x1b8>
 3cc:	ldr	r0, [pc, #480]	; 5b4 <print_type+0x398>
 3d0:	bl	0 <printf>
 3d4:	ldr	r1, [pc, #508]	; 5d8 <print_type+0x3bc>
 3d8:	ldr	ip, [r1]
 3dc:	cmp	ip, #0
 3e0:	beq	448 <print_type+0x22c>
 3e4:	ldr	r0, [pc, #468]	; 5c0 <print_type+0x3a4>
 3e8:	ldr	ip, [pc, #448]	; 5b0 <print_type+0x394>
 3ec:	ldr	r1, [ip]
 3f0:	bl	0 <printf>
 3f4:	add	r1, sp, #56	; 0x38
 3f8:	mov	r0, r5
 3fc:	bl	0 <coda_type_get_description>
 400:	ldr	r1, [sp, #56]	; 0x38
 404:	cmp	r1, #0
 408:	beq	448 <print_type+0x22c>
 40c:	ldr	r0, [pc, #440]	; 5cc <print_type+0x3b0>
 410:	ldr	r1, [r0]
 414:	cmp	r1, #0
 418:	beq	424 <print_type+0x208>
 41c:	ldr	r0, [pc, #400]	; 5b4 <print_type+0x398>
 420:	bl	0 <printf>
 424:	ldr	r0, [pc, #404]	; 5c0 <print_type+0x3a4>
 428:	ldr	r1, [sp, #56]	; 0x38
 42c:	bl	0 <printf>
 430:	ldr	ip, [pc, #404]	; 5cc <print_type+0x3b0>
 434:	ldr	r3, [ip]
 438:	cmp	r3, #0
 43c:	beq	448 <print_type+0x22c>
 440:	ldr	r0, [pc, #364]	; 5b4 <print_type+0x398>
 444:	bl	0 <printf>
 448:	ldr	r0, [pc, #416]	; 5f0 <print_type+0x3d4>
 44c:	bl	0 <printf>
 450:	ldr	ip, [pc, #400]	; 5e8 <print_type+0x3cc>
 454:	ldr	r2, [ip]
 458:	cmp	r2, #0
 45c:	beq	4a4 <print_type+0x288>
 460:	add	r1, sp, #60	; 0x3c
 464:	mov	r0, r5
 468:	bl	0 <coda_type_has_attributes>
 46c:	ldr	r1, [sp, #60]	; 0x3c
 470:	cmp	r1, #0
 474:	beq	4a4 <print_type+0x288>
 478:	add	r1, sp, #64	; 0x40
 47c:	mov	r0, r5
 480:	bl	0 <coda_type_get_attributes>
 484:	ldr	r0, [pc, #336]	; 5dc <print_type+0x3c0>
 488:	lsl	r1, r4, #2
 48c:	add	r0, r0, r1
 490:	mvn	r3, #0
 494:	str	r3, [r0, #4]
 498:	ldr	r0, [sp, #64]	; 0x40
 49c:	add	r1, r4, #1
 4a0:	bl	21c <print_type>
 4a4:	ldr	r3, [sp, #40]	; 0x28
 4a8:	cmp	r3, #0
 4ac:	beq	51c <print_type+0x300>
 4b0:	cmp	r3, #1
 4b4:	beq	4ec <print_type+0x2d0>
 4b8:	cmp	r3, #6
 4bc:	bne	598 <print_type+0x37c>
 4c0:	ldr	r2, [pc, #256]	; 5c8 <print_type+0x3ac>
 4c4:	ldr	r1, [r2]
 4c8:	cmp	r1, #0
 4cc:	bne	598 <print_type+0x37c>
 4d0:	add	r1, sp, #36	; 0x24
 4d4:	mov	r0, r5
 4d8:	bl	0 <coda_type_get_special_base_type>
 4dc:	ldr	r0, [sp, #36]	; 0x24
 4e0:	mov	r1, r4
 4e4:	bl	21c <print_type>
 4e8:	b	598 <print_type+0x37c>
 4ec:	add	r1, sp, #32
 4f0:	mov	r0, r5
 4f4:	bl	0 <coda_type_get_array_base_type>
 4f8:	ldr	r1, [pc, #220]	; 5dc <print_type+0x3c0>
 4fc:	lsl	r3, r4, #2
 500:	add	r0, r1, r3
 504:	mov	ip, #0
 508:	str	ip, [r0, #4]
 50c:	ldr	r0, [sp, #32]
 510:	add	r1, r4, #1
 514:	bl	21c <print_type>
 518:	b	598 <print_type+0x37c>
 51c:	add	r1, sp, #68	; 0x44
 520:	mov	r0, r5
 524:	bl	0 <coda_type_get_num_record_fields>
 528:	mov	r6, #0
 52c:	ldr	r0, [sp, #68]	; 0x44
 530:	cmp	r6, r0
 534:	bge	598 <print_type+0x37c>
 538:	add	r2, sp, #24
 53c:	mov	r1, r6
 540:	mov	r0, r5
 544:	bl	0 <coda_type_get_record_field_type>
 548:	ldr	r2, [pc, #132]	; 5d4 <print_type+0x3b8>
 54c:	ldr	r1, [r2]
 550:	cmp	r1, #0
 554:	bne	574 <print_type+0x358>
 558:	add	r2, sp, #28
 55c:	mov	r1, r6
 560:	mov	r0, r5
 564:	bl	0 <coda_type_get_record_field_hidden_status>
 568:	ldr	r3, [sp, #28]
 56c:	cmp	r3, #0
 570:	bne	590 <print_type+0x374>
 574:	ldr	ip, [pc, #96]	; 5dc <print_type+0x3c0>
 578:	lsl	r0, r4, #2
 57c:	add	r3, ip, r0
 580:	str	r6, [r3, #4]
 584:	ldr	r0, [sp, #24]
 588:	add	r1, r4, #1
 58c:	bl	21c <print_type>
 590:	add	r6, r6, #1
 594:	b	52c <print_type+0x310>
 598:	ldr	r4, [sp, #8]
 59c:	ldr	r5, [sp, #12]
 5a0:	ldr	r6, [sp, #16]
 5a4:	ldr	lr, [sp, #4]
 5a8:	add	sp, sp, #72	; 0x48
 5ac:	bx	lr
 5b0:	.word	0x00000000
 5b4:	.word	0x0000000e
	...
 5d0:	.word	0x000000cd
	...
 5f0:	.word	0x000000cb
 5f4:	.word	0x00000072

000005f8 <generate_field_list>:
 5f8:	mov	ip, sp
 5fc:	sub	sp, sp, #24
 600:	str	ip, [sp]
 604:	str	lr, [sp, #4]
 608:	str	r4, [sp, #8]
 60c:	str	r5, [sp, #12]
 610:	str	r6, [sp, #16]
 614:	mov	r4, r2
 618:	mov	r6, r1
 61c:	bl	0 <coda_data_dictionary_get_product_class>
 620:	mov	r5, r0
 624:	cmp	r5, #0
 628:	bne	65c <generate_field_list+0x64>
 62c:	ldr	ip, [pc, #232]	; 71c <generate_field_list+0x124>
 630:	ldr	r0, [ip]
 634:	bl	0 <coda_errno_to_string>
 638:	ldr	r3, [pc, #216]	; 718 <generate_field_list+0x120>
 63c:	ldr	r2, [r3]
 640:	ldr	r1, [pc, #204]	; 714 <generate_field_list+0x11c>
 644:	mov	r3, r0
 648:	mov	r0, r2
 64c:	mov	r2, r3
 650:	bl	0 <fprintf>
 654:	mov	r0, #1
 658:	bl	0 <exit>
 65c:	mov	r1, r6
 660:	mov	r0, r5
 664:	bl	0 <coda_product_class_get_product_type>
 668:	mov	r5, r0
 66c:	cmp	r5, #0
 670:	bne	69c <generate_field_list+0xa4>
 674:	ldr	r2, [pc, #160]	; 71c <generate_field_list+0x124>
 678:	ldr	r0, [r2]
 67c:	bl	0 <coda_errno_to_string>
 680:	mov	r2, r0
 684:	ldr	r3, [pc, #140]	; 718 <generate_field_list+0x120>
 688:	ldr	r0, [r3]
 68c:	ldr	r1, [pc, #128]	; 714 <generate_field_list+0x11c>
 690:	bl	0 <fprintf>
 694:	mov	r0, #1
 698:	bl	0 <exit>
 69c:	mov	r1, r4
 6a0:	mov	r0, r5
 6a4:	bl	0 <coda_product_type_get_product_definition_by_version>
 6a8:	mov	r4, r0
 6ac:	cmp	r4, #0
 6b0:	bne	6e4 <generate_field_list+0xec>
 6b4:	ldr	r1, [pc, #96]	; 71c <generate_field_list+0x124>
 6b8:	ldr	r0, [r1]
 6bc:	bl	0 <coda_errno_to_string>
 6c0:	ldr	ip, [pc, #80]	; 718 <generate_field_list+0x120>
 6c4:	ldr	r2, [ip]
 6c8:	ldr	r1, [pc, #68]	; 714 <generate_field_list+0x11c>
 6cc:	mov	r3, r0
 6d0:	mov	r0, r2
 6d4:	mov	r2, r3
 6d8:	bl	0 <fprintf>
 6dc:	mov	r0, #1
 6e0:	bl	0 <exit>
 6e4:	ldr	r1, [r4, #28]
 6e8:	cmp	r1, #0
 6ec:	beq	6fc <generate_field_list+0x104>
 6f0:	ldr	r0, [r4, #28]
 6f4:	mov	r1, #0
 6f8:	bl	21c <print_type>
 6fc:	ldr	r4, [sp, #8]
 700:	ldr	r5, [sp, #12]
 704:	ldr	r6, [sp, #16]
 708:	ldr	lr, [sp, #4]
 70c:	add	sp, sp, #24
 710:	bx	lr
 714:	.word	0x000000bc
	...

00000720 <generate_product_list>:
 720:	mov	ip, sp
 724:	sub	sp, sp, #56	; 0x38
 728:	str	ip, [sp, #8]
 72c:	str	lr, [sp, #12]
 730:	str	r4, [sp, #24]
 734:	str	r5, [sp, #28]
 738:	str	r6, [sp, #32]
 73c:	str	r7, [sp, #36]	; 0x24
 740:	str	r8, [sp, #40]	; 0x28
 744:	str	r9, [sp, #44]	; 0x2c
 748:	str	sl, [sp, #48]	; 0x30
 74c:	str	fp, [sp, #52]	; 0x34
 750:	str	r1, [sp, #16]
 754:	str	r0, [sp, #20]
 758:	mov	r7, #0
 75c:	ldr	r1, [pc, #488]	; 94c <generate_product_list+0x22c>
 760:	ldr	r2, [r1]
 764:	ldr	r0, [r2]
 768:	cmp	r7, r0
 76c:	bge	908 <generate_product_list+0x1e8>
 770:	ldr	r1, [pc, #468]	; 94c <generate_product_list+0x22c>
 774:	ldr	ip, [r1]
 778:	ldr	r3, [ip, #4]
 77c:	ldr	r8, [r3, r7, lsl #2]
 780:	ldr	r2, [sp, #20]
 784:	cmp	r2, #0
 788:	beq	7a8 <generate_product_list+0x88>
 78c:	ldr	r0, [r8]
 790:	ldr	r1, [sp, #20]
 794:	bl	0 <strcmp>
 798:	cmp	r0, #0
 79c:	movne	r0, #1
 7a0:	moveq	r0, #0
 7a4:	b	7ac <generate_product_list+0x8c>
 7a8:	mov	r0, #0
 7ac:	cmp	r0, #0
 7b0:	bne	900 <generate_product_list+0x1e0>
 7b4:	mov	r4, #0
 7b8:	ldr	ip, [r8, #28]
 7bc:	cmp	r4, ip
 7c0:	bge	900 <generate_product_list+0x1e0>
 7c4:	ldr	r3, [r8, #32]
 7c8:	ldr	r6, [r3, r4, lsl #2]
 7cc:	ldr	r1, [sp, #16]
 7d0:	cmp	r1, #0
 7d4:	beq	7f4 <generate_product_list+0xd4>
 7d8:	ldr	r0, [r6]
 7dc:	ldr	r1, [sp, #16]
 7e0:	bl	0 <strcmp>
 7e4:	cmp	r0, #0
 7e8:	movne	r2, #1
 7ec:	moveq	r2, #0
 7f0:	b	7f8 <generate_product_list+0xd8>
 7f4:	mov	r2, #0
 7f8:	cmp	r2, #0
 7fc:	bne	8f8 <generate_product_list+0x1d8>
 800:	ldr	ip, [r6, #8]
 804:	cmp	ip, #0
 808:	ble	8f8 <generate_product_list+0x1d8>
 80c:	mov	r5, #0
 810:	ldr	r0, [r6, #8]
 814:	cmp	r5, r0
 818:	bge	8f8 <generate_product_list+0x1d8>
 81c:	ldr	r2, [r6, #12]
 820:	ldr	r9, [r2, r5, lsl #2]
 824:	ldr	r0, [pc, #268]	; 938 <generate_product_list+0x218>
 828:	ldr	r1, [r8]
 82c:	ldr	r2, [pc, #256]	; 934 <generate_product_list+0x214>
 830:	ldr	r2, [r2]
 834:	ldr	r3, [r6]
 838:	ldr	ip, [pc, #244]	; 934 <generate_product_list+0x214>
 83c:	ldr	sl, [ip]
 840:	ldr	fp, [r9, #4]
 844:	str	fp, [sp, #4]
 848:	str	sl, [sp]
 84c:	bl	0 <printf>
 850:	ldr	r3, [pc, #252]	; 954 <generate_product_list+0x234>
 854:	ldr	r2, [r3]
 858:	cmp	r2, #0
 85c:	beq	880 <generate_product_list+0x160>
 860:	ldr	r0, [r9]
 864:	bl	0 <coda_type_get_format_name>
 868:	ldr	ip, [pc, #216]	; 948 <generate_product_list+0x228>
 86c:	ldr	r1, [pc, #192]	; 934 <generate_product_list+0x214>
 870:	ldr	r1, [r1]
 874:	mov	r2, r0
 878:	mov	r0, ip
 87c:	bl	0 <printf>
 880:	ldr	ip, [pc, #200]	; 950 <generate_product_list+0x230>
 884:	ldr	r0, [ip]
 888:	cmp	r0, #0
 88c:	beq	8e8 <generate_product_list+0x1c8>
 890:	ldr	r0, [pc, #168]	; 940 <generate_product_list+0x220>
 894:	ldr	r2, [pc, #152]	; 934 <generate_product_list+0x214>
 898:	ldr	r1, [r2]
 89c:	bl	0 <printf>
 8a0:	ldr	r1, [r9, #12]
 8a4:	cmp	r1, #0
 8a8:	beq	8e8 <generate_product_list+0x1c8>
 8ac:	ldr	r1, [pc, #144]	; 944 <generate_product_list+0x224>
 8b0:	ldr	r3, [r1]
 8b4:	cmp	r3, #0
 8b8:	beq	8c4 <generate_product_list+0x1a4>
 8bc:	ldr	r0, [pc, #120]	; 93c <generate_product_list+0x21c>
 8c0:	bl	0 <printf>
 8c4:	ldr	r0, [pc, #116]	; 940 <generate_product_list+0x220>
 8c8:	ldr	r1, [r9, #12]
 8cc:	bl	0 <printf>
 8d0:	ldr	r0, [pc, #108]	; 944 <generate_product_list+0x224>
 8d4:	ldr	r0, [r0]
 8d8:	cmp	r0, #0
 8dc:	beq	8e8 <generate_product_list+0x1c8>
 8e0:	ldr	r0, [pc, #84]	; 93c <generate_product_list+0x21c>
 8e4:	bl	0 <printf>
 8e8:	ldr	r0, [pc, #104]	; 958 <generate_product_list+0x238>
 8ec:	bl	0 <printf>
 8f0:	add	r5, r5, #1
 8f4:	b	810 <generate_product_list+0xf0>
 8f8:	add	r4, r4, #1
 8fc:	b	7b8 <generate_product_list+0x98>
 900:	add	r7, r7, #1
 904:	b	75c <generate_product_list+0x3c>
 908:	ldr	r4, [sp, #24]
 90c:	ldr	r5, [sp, #28]
 910:	ldr	r6, [sp, #32]
 914:	ldr	r7, [sp, #36]	; 0x24
 918:	ldr	r8, [sp, #40]	; 0x28
 91c:	ldr	r9, [sp, #44]	; 0x2c
 920:	ldr	sl, [sp, #48]	; 0x30
 924:	ldr	fp, [sp, #52]	; 0x34
 928:	ldr	lr, [sp, #12]
 92c:	add	sp, sp, #56	; 0x38
 930:	bx	lr
 934:	.word	0x00000000
 938:	.word	0x00000003
 93c:	.word	0x0000000e
	...
 948:	.word	0x000000cd
	...
 958:	.word	0x000000cb

0000095c <generate_list>:
 95c:	mov	ip, sp
 960:	sub	sp, sp, #8
 964:	str	ip, [sp]
 968:	str	lr, [sp, #4]
 96c:	cmp	r2, #0
 970:	blt	97c <generate_list+0x20>
 974:	bl	5f8 <generate_field_list>
 978:	b	980 <generate_list+0x24>
 97c:	bl	720 <generate_product_list>
 980:	ldr	lr, [sp, #4]
 984:	add	sp, sp, #8
 988:	bx	lr
