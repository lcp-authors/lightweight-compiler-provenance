
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codacheck.dir/tools/codacheck/codacheck.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #1004	; 0x3ec
   c:	mov	r5, r1
  10:	movw	r1, #0
  14:	mov	r4, r0
  18:	mov	r0, #0
  1c:	movw	r9, #0
  20:	movt	r1, #0
  24:	movt	r9, #0
  28:	cmp	r4, #1
  2c:	str	r0, [r1]
  30:	movw	r1, #0
  34:	str	r0, [r9]
  38:	movt	r1, #0
  3c:	str	r0, [r1]
  40:	beq	3a4 <main+0x3a4>
  44:	ldr	r6, [r5, #4]
  48:	movw	r1, #0
  4c:	movt	r1, #0
  50:	mov	r0, r6
  54:	bl	0 <strcmp>
  58:	cmp	r0, #0
  5c:	beq	3a4 <main+0x3a4>
  60:	movw	r1, #0
  64:	mov	r0, r6
  68:	movt	r1, #0
  6c:	bl	0 <strcmp>
  70:	cmp	r0, #0
  74:	beq	3a4 <main+0x3a4>
  78:	movw	r1, #0
  7c:	mov	r0, r6
  80:	movt	r1, #0
  84:	bl	0 <strcmp>
  88:	cmp	r0, #0
  8c:	beq	3b0 <main+0x3b0>
  90:	movw	r1, #0
  94:	mov	r0, r6
  98:	movt	r1, #0
  9c:	bl	0 <strcmp>
  a0:	cmp	r0, #0
  a4:	beq	3b0 <main+0x3b0>
  a8:	cmp	r4, #3
  ac:	blt	c8 <main+0xc8>
  b0:	movw	r1, #0
  b4:	mov	r0, r6
  b8:	movt	r1, #0
  bc:	bl	0 <strcmp>
  c0:	cmp	r0, #0
  c4:	beq	32c <main+0x32c>
  c8:	ldr	r0, [r5]
  cc:	movw	r2, #0
  d0:	mov	r1, #0
  d4:	movt	r2, #0
  d8:	bl	0 <coda_set_definition_path_conditional>
  dc:	mov	r8, #1
  e0:	cmp	r0, #0
  e4:	bne	3bc <main+0x3bc>
  e8:	mov	sl, #0
  ec:	mov	r6, #1
  f0:	cmp	r8, r4
  f4:	bge	208 <main+0x208>
  f8:	movw	r7, #0
  fc:	rsb	r8, r8, #0
 100:	mov	r6, #1
 104:	movt	r7, #0
 108:	ldr	sl, [r5, -r8, lsl #2]
 10c:	mov	r1, r7
 110:	mov	r0, sl
 114:	bl	0 <strcmp>
 118:	cmp	r0, #0
 11c:	mov	r0, r9
 120:	beq	1e0 <main+0x1e0>
 124:	movw	r1, #0
 128:	mov	r0, sl
 12c:	movt	r1, #0
 130:	bl	0 <strcmp>
 134:	cmp	r0, #0
 138:	mov	r0, r9
 13c:	beq	1e0 <main+0x1e0>
 140:	movw	r1, #0
 144:	mov	r0, sl
 148:	movt	r1, #0
 14c:	bl	0 <strcmp>
 150:	cmp	r0, #0
 154:	movw	r0, #0
 158:	movt	r0, #0
 15c:	beq	1e0 <main+0x1e0>
 160:	movw	r1, #0
 164:	mov	r0, sl
 168:	movt	r1, #0
 16c:	bl	0 <strcmp>
 170:	cmp	r0, #0
 174:	movw	r0, #0
 178:	movt	r0, #0
 17c:	beq	1e0 <main+0x1e0>
 180:	movw	r1, #0
 184:	mov	r0, sl
 188:	movt	r1, #0
 18c:	bl	0 <strcmp>
 190:	cmp	r0, #0
 194:	movw	r0, #0
 198:	movt	r0, #0
 19c:	beq	1e0 <main+0x1e0>
 1a0:	movw	r1, #0
 1a4:	mov	r0, sl
 1a8:	movt	r1, #0
 1ac:	bl	0 <strcmp>
 1b0:	cmp	r0, #0
 1b4:	movw	r0, #0
 1b8:	movt	r0, #0
 1bc:	beq	1e0 <main+0x1e0>
 1c0:	movw	r1, #0
 1c4:	mov	r0, sl
 1c8:	movt	r1, #0
 1cc:	bl	0 <strcmp>
 1d0:	mov	r1, #0
 1d4:	cmp	r0, #0
 1d8:	beq	1ec <main+0x1ec>
 1dc:	b	33c <main+0x33c>
 1e0:	mov	r1, #1
 1e4:	str	r1, [r0]
 1e8:	mov	r1, r6
 1ec:	sub	r8, r8, #1
 1f0:	mov	r6, r1
 1f4:	adds	r0, r4, r8
 1f8:	bne	108 <main+0x108>
 1fc:	mov	r8, r4
 200:	mov	r6, r1
 204:	mov	sl, #0
 208:	bl	0 <coda_init>
 20c:	cmp	r0, #0
 210:	bne	3bc <main+0x3bc>
 214:	mov	r0, #0
 218:	mov	r7, #0
 21c:	bl	0 <coda_set_option_perform_boundary_checks>
 220:	mov	r0, #0
 224:	bl	0 <coda_set_option_perform_conversions>
 228:	mov	r0, r6
 22c:	bl	0 <coda_set_option_use_mmap>
 230:	cmp	sl, #0
 234:	beq	2dc <main+0x2dc>
 238:	movw	r5, #0
 23c:	mov	r4, sp
 240:	movt	r5, #0
 244:	b	258 <main+0x258>
 248:	strb	r0, [r4, r7]
 24c:	add	r7, r7, #1
 250:	cmp	r7, #1000	; 0x3e8
 254:	beq	2bc <main+0x2bc>
 258:	ldr	r0, [r5]
 25c:	bl	0 <getc>
 260:	uxtb	r1, r0
 264:	cmp	r1, #10
 268:	beq	290 <main+0x290>
 26c:	cmp	r1, #13
 270:	bne	248 <main+0x248>
 274:	ldr	r0, [r5]
 278:	bl	0 <getc>
 27c:	uxtb	r0, r0
 280:	cmp	r0, #10
 284:	beq	290 <main+0x290>
 288:	ldr	r1, [r5]
 28c:	bl	0 <ungetc>
 290:	mov	r0, #0
 294:	cmp	r7, #0
 298:	strb	r0, [r4, r7]
 29c:	mov	r7, #0
 2a0:	beq	258 <main+0x258>
 2a4:	mov	r0, r4
 2a8:	bl	3f0 <check_file>
 2ac:	mov	r0, #0
 2b0:	mov	r7, #0
 2b4:	bl	0 <fflush>
 2b8:	b	258 <main+0x258>
 2bc:	movw	r0, #0
 2c0:	movw	r1, #0
 2c4:	movw	r3, #0
 2c8:	mov	r2, #316	; 0x13c
 2cc:	movt	r0, #0
 2d0:	movt	r1, #0
 2d4:	movt	r3, #0
 2d8:	bl	0 <__assert_fail>
 2dc:	cmp	r8, r4
 2e0:	bge	304 <main+0x304>
 2e4:	add	r5, r5, r8, lsl #2
 2e8:	sub	r4, r4, r8
 2ec:	ldr	r0, [r5], #4
 2f0:	bl	3f0 <check_file>
 2f4:	mov	r0, #0
 2f8:	bl	0 <fflush>
 2fc:	subs	r4, r4, #1
 300:	bne	2ec <main+0x2ec>
 304:	bl	0 <coda_done>
 308:	movw	r0, #0
 30c:	movt	r0, #0
 310:	ldr	r0, [r0]
 314:	cmp	r0, #0
 318:	moveq	r0, #0
 31c:	subeq	sp, fp, #28
 320:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 324:	mov	r0, #1
 328:	bl	0 <exit>
 32c:	ldr	r0, [r5, #8]
 330:	bl	0 <coda_set_definition_path>
 334:	mov	r8, #3
 338:	b	e8 <main+0xe8>
 33c:	movw	r1, #0
 340:	mov	r0, sl
 344:	movt	r1, #0
 348:	bl	0 <strcmp>
 34c:	add	r1, r4, r8
 350:	rsb	r8, r8, #0
 354:	cmp	r1, #1
 358:	cmpeq	r0, #0
 35c:	beq	39c <main+0x39c>
 360:	ldrb	r0, [sl]
 364:	mov	sl, #0
 368:	cmp	r0, #45	; 0x2d
 36c:	bne	208 <main+0x208>
 370:	movw	r0, #0
 374:	mov	r1, #25
 378:	mov	r2, #1
 37c:	movt	r0, #0
 380:	ldr	r3, [r0]
 384:	movw	r0, #0
 388:	movt	r0, #0
 38c:	bl	0 <fwrite>
 390:	bl	614 <print_help>
 394:	mov	r0, #1
 398:	bl	0 <exit>
 39c:	mov	sl, #1
 3a0:	b	208 <main+0x208>
 3a4:	bl	614 <print_help>
 3a8:	mov	r0, #0
 3ac:	bl	0 <exit>
 3b0:	bl	798 <print_version>
 3b4:	mov	r0, #0
 3b8:	bl	0 <exit>
 3bc:	movw	r0, #0
 3c0:	movt	r0, #0
 3c4:	ldr	r4, [r0]
 3c8:	bl	0 <coda_get_errno>
 3cc:	ldr	r0, [r0]
 3d0:	bl	0 <coda_errno_to_string>
 3d4:	movw	r1, #0
 3d8:	mov	r2, r0
 3dc:	mov	r0, r4
 3e0:	movt	r1, #0
 3e4:	bl	0 <fprintf>
 3e8:	mov	r0, #1
 3ec:	bl	0 <exit>

000003f0 <check_file>:
 3f0:	push	{r4, sl, fp, lr}
 3f4:	add	fp, sp, #8
 3f8:	sub	sp, sp, #40	; 0x28
 3fc:	mov	r4, r0
 400:	bl	0 <puts>
 404:	add	r0, sp, #12
 408:	add	r1, sp, #16
 40c:	sub	r2, fp, #16
 410:	add	r3, sp, #20
 414:	str	r1, [sp]
 418:	str	r0, [sp, #4]
 41c:	add	r1, sp, #24
 420:	mov	r0, r4
 424:	bl	0 <coda_recognize_file>
 428:	cmp	r0, #0
 42c:	beq	45c <check_file+0x6c>
 430:	bl	0 <coda_get_errno>
 434:	ldr	r0, [r0]
 438:	bl	0 <coda_errno_to_string>
 43c:	mov	r1, r0
 440:	movw	r0, #0
 444:	movt	r0, #0
 448:	bl	0 <printf>
 44c:	mov	r0, #0
 450:	mov	r1, #0
 454:	bl	0 <coda_set_error>
 458:	b	554 <check_file+0x164>
 45c:	movw	r0, #0
 460:	movt	r0, #0
 464:	ldr	r0, [r0]
 468:	cmp	r0, #0
 46c:	beq	494 <check_file+0xa4>
 470:	ldr	r0, [sp, #20]
 474:	cmp	r0, #0
 478:	ldrne	r0, [sp, #16]
 47c:	cmpne	r0, #0
 480:	bne	494 <check_file+0xa4>
 484:	movw	r0, #0
 488:	movt	r0, #0
 48c:	bl	0 <puts>
 490:	b	554 <check_file+0x164>
 494:	movw	r0, #0
 498:	movt	r0, #0
 49c:	ldr	r0, [r0]
 4a0:	cmp	r0, #0
 4a4:	beq	4ec <check_file+0xfc>
 4a8:	ldr	r0, [fp, #-16]
 4ac:	bl	0 <coda_type_get_format_name>
 4b0:	mov	r1, r0
 4b4:	movw	r0, #0
 4b8:	movt	r0, #0
 4bc:	bl	0 <printf>
 4c0:	ldr	r1, [sp, #20]
 4c4:	cmp	r1, #0
 4c8:	ldrne	r2, [sp, #16]
 4cc:	cmpne	r2, #0
 4d0:	beq	4e4 <check_file+0xf4>
 4d4:	ldr	r3, [sp, #12]
 4d8:	movw	r0, #0
 4dc:	movt	r0, #0
 4e0:	bl	0 <printf>
 4e4:	mov	r0, #10
 4e8:	bl	0 <putchar>
 4ec:	sub	r1, fp, #12
 4f0:	mov	r0, r4
 4f4:	bl	0 <coda_open>
 4f8:	cmp	r0, #0
 4fc:	beq	56c <check_file+0x17c>
 500:	bl	0 <coda_get_errno>
 504:	ldr	r0, [r0]
 508:	cmn	r0, #21
 50c:	bne	538 <check_file+0x148>
 510:	mov	r0, #0
 514:	bl	0 <coda_set_option_use_mmap>
 518:	sub	r1, fp, #12
 51c:	mov	r0, r4
 520:	bl	0 <coda_open>
 524:	mov	r4, r0
 528:	mov	r0, #1
 52c:	bl	0 <coda_set_option_use_mmap>
 530:	cmp	r4, #0
 534:	beq	56c <check_file+0x17c>
 538:	bl	0 <coda_get_errno>
 53c:	ldr	r0, [r0]
 540:	bl	0 <coda_errno_to_string>
 544:	mov	r1, r0
 548:	movw	r0, #0
 54c:	movt	r0, #0
 550:	bl	0 <printf>
 554:	movw	r0, #0
 558:	mov	r1, #1
 55c:	movt	r0, #0
 560:	str	r1, [r0]
 564:	sub	sp, fp, #8
 568:	pop	{r4, sl, fp, pc}
 56c:	movw	r0, #0
 570:	movw	r2, #0
 574:	mov	r3, #0
 578:	movt	r0, #0
 57c:	movt	r2, #0
 580:	ldr	r1, [r0]
 584:	ldr	r0, [fp, #-12]
 588:	clz	r1, r1
 58c:	lsr	r1, r1, #5
 590:	bl	0 <coda_product_check>
 594:	cmp	r0, #0
 598:	beq	5d8 <check_file+0x1e8>
 59c:	bl	0 <coda_get_errno>
 5a0:	ldr	r0, [r0]
 5a4:	bl	0 <coda_errno_to_string>
 5a8:	mov	r1, r0
 5ac:	movw	r0, #0
 5b0:	movt	r0, #0
 5b4:	bl	0 <printf>
 5b8:	movw	r0, #0
 5bc:	mov	r1, #1
 5c0:	movt	r0, #0
 5c4:	str	r1, [r0]
 5c8:	ldr	r0, [fp, #-12]
 5cc:	bl	0 <coda_close>
 5d0:	sub	sp, fp, #8
 5d4:	pop	{r4, sl, fp, pc}
 5d8:	ldr	r0, [fp, #-12]
 5dc:	bl	0 <coda_close>
 5e0:	cmp	r0, #0
 5e4:	beq	604 <check_file+0x214>
 5e8:	bl	0 <coda_get_errno>
 5ec:	ldr	r0, [r0]
 5f0:	bl	0 <coda_errno_to_string>
 5f4:	mov	r1, r0
 5f8:	movw	r0, #0
 5fc:	movt	r0, #0
 600:	b	550 <check_file+0x160>
 604:	mov	r0, #10
 608:	bl	0 <putchar>
 60c:	sub	sp, fp, #8
 610:	pop	{r4, sl, fp, pc}

00000614 <print_help>:
 614:	push	{fp, lr}
 618:	mov	fp, sp
 61c:	movw	r0, #0
 620:	movt	r0, #0
 624:	bl	0 <puts>
 628:	movw	r0, #0
 62c:	movt	r0, #0
 630:	bl	0 <puts>
 634:	movw	r0, #0
 638:	movt	r0, #0
 63c:	bl	0 <puts>
 640:	movw	r0, #0
 644:	movt	r0, #0
 648:	bl	0 <puts>
 64c:	movw	r0, #0
 650:	movt	r0, #0
 654:	bl	0 <puts>
 658:	movw	r0, #0
 65c:	movt	r0, #0
 660:	bl	0 <puts>
 664:	movw	r0, #0
 668:	movt	r0, #0
 66c:	bl	0 <puts>
 670:	movw	r0, #0
 674:	movt	r0, #0
 678:	bl	0 <puts>
 67c:	movw	r0, #0
 680:	movt	r0, #0
 684:	bl	0 <puts>
 688:	movw	r0, #0
 68c:	movt	r0, #0
 690:	bl	0 <puts>
 694:	movw	r0, #0
 698:	movt	r0, #0
 69c:	bl	0 <puts>
 6a0:	movw	r0, #0
 6a4:	movt	r0, #0
 6a8:	bl	0 <puts>
 6ac:	movw	r0, #0
 6b0:	movt	r0, #0
 6b4:	bl	0 <puts>
 6b8:	movw	r0, #0
 6bc:	movt	r0, #0
 6c0:	bl	0 <puts>
 6c4:	movw	r0, #0
 6c8:	movt	r0, #0
 6cc:	bl	0 <puts>
 6d0:	mov	r0, #10
 6d4:	bl	0 <putchar>
 6d8:	movw	r0, #0
 6dc:	movt	r0, #0
 6e0:	bl	0 <puts>
 6e4:	movw	r0, #0
 6e8:	movt	r0, #0
 6ec:	bl	0 <puts>
 6f0:	mov	r0, #10
 6f4:	bl	0 <putchar>
 6f8:	movw	r0, #0
 6fc:	movt	r0, #0
 700:	bl	0 <puts>
 704:	movw	r0, #0
 708:	movt	r0, #0
 70c:	bl	0 <puts>
 710:	mov	r0, #10
 714:	bl	0 <putchar>
 718:	movw	r0, #0
 71c:	movt	r0, #0
 720:	bl	0 <puts>
 724:	movw	r0, #0
 728:	movt	r0, #0
 72c:	bl	0 <puts>
 730:	mov	r0, #10
 734:	bl	0 <putchar>
 738:	movw	r0, #0
 73c:	movt	r0, #0
 740:	bl	0 <puts>
 744:	movw	r0, #0
 748:	movt	r0, #0
 74c:	bl	0 <puts>
 750:	movw	r0, #0
 754:	movt	r0, #0
 758:	bl	0 <puts>
 75c:	movw	r0, #0
 760:	movt	r0, #0
 764:	bl	0 <puts>
 768:	movw	r0, #0
 76c:	movt	r0, #0
 770:	bl	0 <puts>
 774:	movw	r0, #0
 778:	movt	r0, #0
 77c:	bl	0 <puts>
 780:	movw	r0, #0
 784:	movt	r0, #0
 788:	bl	0 <puts>
 78c:	mov	r0, #10
 790:	pop	{fp, lr}
 794:	b	0 <putchar>

00000798 <print_version>:
 798:	push	{fp, lr}
 79c:	mov	fp, sp
 7a0:	bl	0 <coda_get_libcoda_version>
 7a4:	mov	r1, r0
 7a8:	movw	r0, #0
 7ac:	movt	r0, #0
 7b0:	bl	0 <printf>
 7b4:	movw	r0, #0
 7b8:	movt	r0, #0
 7bc:	bl	0 <puts>
 7c0:	mov	r0, #10
 7c4:	pop	{fp, lr}
 7c8:	b	0 <putchar>

000007cc <print_error>:
 7cc:	push	{r4, sl, fp, lr}
 7d0:	add	fp, sp, #8
 7d4:	mov	r4, r0
 7d8:	movw	r0, #0
 7dc:	movt	r0, #0
 7e0:	bl	0 <printf>
 7e4:	cmp	r4, #0
 7e8:	beq	808 <print_error+0x3c>
 7ec:	movw	r0, #0
 7f0:	movt	r0, #0
 7f4:	bl	0 <printf>
 7f8:	movw	r1, #0
 7fc:	mov	r0, r4
 800:	movt	r1, #0
 804:	bl	0 <coda_cursor_print_path>
 808:	mov	r0, #10
 80c:	bl	0 <putchar>
 810:	movw	r0, #0
 814:	mov	r1, #1
 818:	movt	r0, #0
 81c:	str	r1, [r0]
 820:	pop	{r4, sl, fp, pc}
