
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-sp3.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ingest_info_cleanup>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #16
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	str	r4, [sp, #8]
      14:	mov	r4, r0
      18:	ldr	r0, [r4]
      1c:	cmp	r0, #0
      20:	beq	2c <ingest_info_cleanup+0x2c>
      24:	ldr	r0, [r4]
      28:	bl	0 <fclose>
      2c:	ldr	r3, [r4, #8]
      30:	cmp	r3, #0
      34:	beq	40 <ingest_info_cleanup+0x40>
      38:	ldr	r0, [r4, #8]
      3c:	bl	0 <coda_dynamic_type_delete>
      40:	ldr	r3, [r4, #12]
      44:	cmp	r3, #0
      48:	beq	54 <ingest_info_cleanup+0x54>
      4c:	ldr	r0, [r4, #12]
      50:	bl	0 <coda_dynamic_type_delete>
      54:	ldr	r0, [r4, #16]
      58:	cmp	r0, #0
      5c:	beq	68 <ingest_info_cleanup+0x68>
      60:	ldr	r0, [r4, #16]
      64:	bl	0 <coda_dynamic_type_delete>
      68:	ldr	r2, [r4, #20]
      6c:	cmp	r2, #0
      70:	beq	7c <ingest_info_cleanup+0x7c>
      74:	ldr	r0, [r4, #20]
      78:	bl	0 <coda_dynamic_type_delete>
      7c:	ldr	r1, [r4, #24]
      80:	cmp	r1, #0
      84:	beq	90 <ingest_info_cleanup+0x90>
      88:	ldr	r0, [r4, #24]
      8c:	bl	0 <coda_dynamic_type_delete>
      90:	ldr	r2, [r4, #28]
      94:	cmp	r2, #0
      98:	beq	a4 <ingest_info_cleanup+0xa4>
      9c:	ldr	r0, [r4, #28]
      a0:	bl	0 <coda_dynamic_type_delete>
      a4:	ldr	ip, [r4, #32]
      a8:	cmp	ip, #0
      ac:	beq	b8 <ingest_info_cleanup+0xb8>
      b0:	ldr	r0, [r4, #32]
      b4:	bl	0 <coda_dynamic_type_delete>
      b8:	ldr	r1, [r4, #36]	; 0x24
      bc:	cmp	r1, #0
      c0:	beq	cc <ingest_info_cleanup+0xcc>
      c4:	ldr	r0, [r4, #36]	; 0x24
      c8:	bl	0 <coda_dynamic_type_delete>
      cc:	ldr	r4, [sp, #8]
      d0:	ldr	lr, [sp, #4]
      d4:	add	sp, sp, #16
      d8:	bx	lr

000000dc <ingest_info_init>:
      dc:	mov	ip, sp
      e0:	sub	sp, sp, #8
      e4:	str	ip, [sp]
      e8:	str	lr, [sp, #4]
      ec:	mov	ip, #0
      f0:	str	ip, [r0]
      f4:	mov	ip, #0
      f8:	str	ip, [r0, #8]
      fc:	mov	r2, #0
     100:	str	r2, [r0, #12]
     104:	mov	r3, #0
     108:	str	r3, [r0, #16]
     10c:	mov	r1, #0
     110:	str	r1, [r0, #20]
     114:	mov	r3, #0
     118:	str	r3, [r0, #24]
     11c:	mov	r1, #0
     120:	str	r1, [r0, #28]
     124:	mov	r2, #0
     128:	str	r2, [r0, #32]
     12c:	mov	r1, #0
     130:	str	r1, [r0, #36]	; 0x24
     134:	mov	r1, #0
     138:	str	r1, [r0, #40]	; 0x28
     13c:	mov	r1, #0
     140:	str	r1, [r0, #48]	; 0x30
     144:	mov	r1, #0
     148:	str	r1, [r0, #52]	; 0x34
     14c:	ldr	lr, [sp, #4]
     150:	add	sp, sp, #8
     154:	bx	lr

00000158 <sp3_init>:
     158:	mov	ip, sp
     15c:	sub	sp, sp, #32
     160:	str	ip, [sp, #4]
     164:	str	lr, [sp, #8]
     168:	str	r4, [sp, #16]
     16c:	ldr	r0, [pc, #3884]	; 10a0 <sp3_init+0xf48>
     170:	ldr	r0, [r0]
     174:	cmp	r0, #0
     178:	beq	184 <sp3_init+0x2c>
     17c:	mov	r0, #0
     180:	b	2b10 <sp3_init+0x29b8>
     184:	mov	r4, #1
     188:	mov	r0, #300	; 0x12c
     18c:	bl	0 <malloc>
     190:	ldr	r3, [pc, #3848]	; 10a0 <sp3_init+0xf48>
     194:	str	r0, [r3]
     198:	ldr	r3, [pc, #3840]	; 10a0 <sp3_init+0xf48>
     19c:	ldr	r2, [r3]
     1a0:	cmp	r2, #0
     1a4:	bne	1cc <sp3_init+0x74>
     1a8:	mvn	r0, #0
     1ac:	ldr	r1, [pc, #3912]	; 10fc <sp3_init+0xfa4>
     1b0:	mov	r2, #300	; 0x12c
     1b4:	ldr	r3, [pc, #3920]	; 110c <sp3_init+0xfb4>
     1b8:	mov	r4, #230	; 0xe6
     1bc:	str	r4, [sp]
     1c0:	bl	0 <coda_set_error>
     1c4:	mvn	r0, #0
     1c8:	b	2b10 <sp3_init+0x29b8>
     1cc:	mov	r1, #0
     1d0:	cmp	r1, #75	; 0x4b
     1d4:	bge	1f0 <sp3_init+0x98>
     1d8:	ldr	r0, [pc, #3776]	; 10a0 <sp3_init+0xf48>
     1dc:	ldr	r0, [r0]
     1e0:	mov	r3, #0
     1e4:	str	r3, [r0, r1, lsl #2]
     1e8:	add	r1, r1, #1
     1ec:	b	1d0 <sp3_init+0x78>
     1f0:	mov	r0, #9
     1f4:	bl	0 <coda_type_text_new>
     1f8:	ldr	r1, [pc, #3744]	; 10a0 <sp3_init+0xf48>
     1fc:	ldr	ip, [r1]
     200:	str	r0, [ip]
     204:	ldr	r2, [pc, #3732]	; 10a0 <sp3_init+0xf48>
     208:	ldr	r3, [r2]
     20c:	ldr	r0, [r3]
     210:	mov	r3, #0
     214:	mov	r2, #1
     218:	bl	0 <coda_type_set_byte_size>
     21c:	ldr	ip, [pc, #3708]	; 10a0 <sp3_init+0xf48>
     220:	ldr	r1, [ip]
     224:	ldr	r0, [r1]
     228:	ldr	r1, [pc, #3820]	; 111c <sp3_init+0xfc4>
     22c:	bl	0 <coda_type_set_description>
     230:	mov	r0, #9
     234:	bl	0 <coda_type_text_new>
     238:	ldr	ip, [pc, #3680]	; 10a0 <sp3_init+0xf48>
     23c:	ldr	ip, [ip]
     240:	str	r0, [ip, #4]
     244:	mov	ip, #0
     248:	str	ip, [sp, #24]
     24c:	ldr	r0, [pc, #3776]	; 1114 <sp3_init+0xfbc>
     250:	add	r1, sp, #24
     254:	bl	0 <coda_expression_from_string>
     258:	mov	r0, #9
     25c:	ldr	r1, [sp, #24]
     260:	bl	0 <coda_type_time_new>
     264:	ldr	r2, [pc, #3636]	; 10a0 <sp3_init+0xf48>
     268:	ldr	r1, [r2]
     26c:	str	r0, [r1, #8]
     270:	ldr	ip, [pc, #3624]	; 10a0 <sp3_init+0xf48>
     274:	ldr	r2, [ip]
     278:	ldr	r0, [r2, #8]
     27c:	ldr	r1, [pc, #3612]	; 10a0 <sp3_init+0xf48>
     280:	ldr	r1, [r1]
     284:	ldr	r1, [r1, #4]
     288:	bl	0 <coda_type_time_set_base_type>
     28c:	ldr	r3, [pc, #3596]	; 10a0 <sp3_init+0xf48>
     290:	ldr	r0, [r3]
     294:	ldr	r0, [r0, #8]
     298:	ldr	r1, [pc, #3656]	; 10e8 <sp3_init+0xf90>
     29c:	bl	0 <coda_type_set_description>
     2a0:	mov	r0, #9
     2a4:	mov	r1, #2
     2a8:	bl	0 <coda_type_number_new>
     2ac:	ldr	ip, [pc, #3564]	; 10a0 <sp3_init+0xf48>
     2b0:	ldr	ip, [ip]
     2b4:	str	r0, [ip, #12]
     2b8:	ldr	r2, [pc, #3552]	; 10a0 <sp3_init+0xf48>
     2bc:	ldr	r1, [r2]
     2c0:	ldr	r0, [r1, #12]
     2c4:	mov	r1, r4
     2c8:	bl	0 <coda_type_number_set_endianness>
     2cc:	ldr	r1, [pc, #3532]	; 10a0 <sp3_init+0xf48>
     2d0:	ldr	r3, [r1]
     2d4:	ldr	r0, [r3, #12]
     2d8:	mov	r1, #4
     2dc:	bl	0 <coda_type_set_read_type>
     2e0:	ldr	r2, [pc, #3512]	; 10a0 <sp3_init+0xf48>
     2e4:	ldr	r1, [r2]
     2e8:	ldr	r0, [r1, #12]
     2ec:	mov	r3, #0
     2f0:	mov	r2, #32
     2f4:	bl	0 <coda_type_set_bit_size>
     2f8:	ldr	r1, [pc, #3488]	; 10a0 <sp3_init+0xf48>
     2fc:	ldr	r0, [r1]
     300:	ldr	r0, [r0, #12]
     304:	ldr	r1, [pc, #3652]	; 1150 <sp3_init+0xff8>
     308:	bl	0 <coda_type_set_description>
     30c:	mov	r0, #9
     310:	bl	0 <coda_type_text_new>
     314:	ldr	ip, [pc, #3460]	; 10a0 <sp3_init+0xf48>
     318:	ldr	r1, [ip]
     31c:	str	r0, [r1, #16]
     320:	ldr	r0, [pc, #3448]	; 10a0 <sp3_init+0xf48>
     324:	ldr	r2, [r0]
     328:	ldr	r0, [r2, #16]
     32c:	mov	r3, #0
     330:	mov	r2, #5
     334:	bl	0 <coda_type_set_byte_size>
     338:	ldr	r0, [pc, #3424]	; 10a0 <sp3_init+0xf48>
     33c:	ldr	r3, [r0]
     340:	ldr	r0, [r3, #16]
     344:	ldr	r1, [pc, #3548]	; 1128 <sp3_init+0xfd0>
     348:	bl	0 <coda_type_set_description>
     34c:	mov	r0, #9
     350:	bl	0 <coda_type_text_new>
     354:	ldr	r1, [pc, #3396]	; 10a0 <sp3_init+0xf48>
     358:	ldr	r2, [r1]
     35c:	str	r0, [r2, #20]
     360:	ldr	r1, [pc, #3384]	; 10a0 <sp3_init+0xf48>
     364:	ldr	r3, [r1]
     368:	ldr	r0, [r3, #20]
     36c:	mov	r3, #0
     370:	mov	r2, #5
     374:	bl	0 <coda_type_set_byte_size>
     378:	ldr	r0, [pc, #3360]	; 10a0 <sp3_init+0xf48>
     37c:	ldr	r2, [r0]
     380:	ldr	r0, [r2, #20]
     384:	ldr	r1, [pc, #3496]	; 1134 <sp3_init+0xfdc>
     388:	bl	0 <coda_type_set_description>
     38c:	mov	r0, #9
     390:	bl	0 <coda_type_text_new>
     394:	ldr	r3, [pc, #3332]	; 10a0 <sp3_init+0xf48>
     398:	ldr	ip, [r3]
     39c:	str	r0, [ip, #24]
     3a0:	ldr	r3, [pc, #3320]	; 10a0 <sp3_init+0xf48>
     3a4:	ldr	ip, [r3]
     3a8:	ldr	r0, [ip, #24]
     3ac:	mov	r3, #0
     3b0:	mov	r2, #3
     3b4:	bl	0 <coda_type_set_byte_size>
     3b8:	ldr	r0, [pc, #3296]	; 10a0 <sp3_init+0xf48>
     3bc:	ldr	r3, [r0]
     3c0:	ldr	r0, [r3, #24]
     3c4:	ldr	r1, [pc, #3300]	; 10b0 <sp3_init+0xf58>
     3c8:	bl	0 <coda_type_set_description>
     3cc:	mov	r0, #9
     3d0:	bl	0 <coda_type_text_new>
     3d4:	ldr	r3, [pc, #3268]	; 10a0 <sp3_init+0xf48>
     3d8:	ldr	r1, [r3]
     3dc:	str	r0, [r1, #28]
     3e0:	ldr	r3, [pc, #3256]	; 10a0 <sp3_init+0xf48>
     3e4:	ldr	r3, [r3]
     3e8:	ldr	r0, [r3, #28]
     3ec:	mov	r3, #0
     3f0:	mov	r2, #4
     3f4:	bl	0 <coda_type_set_byte_size>
     3f8:	ldr	r2, [pc, #3232]	; 10a0 <sp3_init+0xf48>
     3fc:	ldr	r3, [r2]
     400:	ldr	r0, [r3, #28]
     404:	ldr	r1, [pc, #3332]	; 1110 <sp3_init+0xfb8>
     408:	bl	0 <coda_type_set_description>
     40c:	mov	r0, #9
     410:	mov	r1, #2
     414:	bl	0 <coda_type_number_new>
     418:	ldr	r1, [pc, #3200]	; 10a0 <sp3_init+0xf48>
     41c:	ldr	ip, [r1]
     420:	str	r0, [ip, #32]
     424:	ldr	ip, [pc, #3188]	; 10a0 <sp3_init+0xf48>
     428:	ldr	ip, [ip]
     42c:	ldr	r0, [ip, #32]
     430:	mov	r1, r4
     434:	bl	0 <coda_type_number_set_endianness>
     438:	ldr	r0, [pc, #3168]	; 10a0 <sp3_init+0xf48>
     43c:	ldr	ip, [r0]
     440:	ldr	r0, [ip, #32]
     444:	mov	r1, #2
     448:	bl	0 <coda_type_set_read_type>
     44c:	ldr	r0, [pc, #3148]	; 10a0 <sp3_init+0xf48>
     450:	ldr	r3, [r0]
     454:	ldr	r0, [r3, #32]
     458:	mov	r3, #0
     45c:	mov	r2, #16
     460:	bl	0 <coda_type_set_bit_size>
     464:	ldr	r0, [pc, #3124]	; 10a0 <sp3_init+0xf48>
     468:	ldr	r1, [r0]
     46c:	ldr	r0, [r1, #32]
     470:	ldr	r1, [pc, #3144]	; 10c0 <sp3_init+0xf68>
     474:	bl	0 <coda_type_set_description>
     478:	mov	r0, #9
     47c:	mov	r1, #3
     480:	bl	0 <coda_type_number_new>
     484:	ldr	ip, [pc, #3092]	; 10a0 <sp3_init+0xf48>
     488:	ldr	r1, [ip]
     48c:	str	r0, [r1, #36]	; 0x24
     490:	ldr	r1, [pc, #3080]	; 10a0 <sp3_init+0xf48>
     494:	ldr	r1, [r1]
     498:	ldr	r0, [r1, #36]	; 0x24
     49c:	mov	r1, r4
     4a0:	bl	0 <coda_type_number_set_endianness>
     4a4:	ldr	r2, [pc, #3060]	; 10a0 <sp3_init+0xf48>
     4a8:	ldr	r1, [r2]
     4ac:	ldr	r0, [r1, #36]	; 0x24
     4b0:	mov	r3, #0
     4b4:	mov	r2, #64	; 0x40
     4b8:	bl	0 <coda_type_set_bit_size>
     4bc:	ldr	r3, [pc, #3036]	; 10a0 <sp3_init+0xf48>
     4c0:	ldr	r1, [r3]
     4c4:	ldr	r0, [r1, #36]	; 0x24
     4c8:	ldr	r1, [pc, #3064]	; 10c8 <sp3_init+0xf70>
     4cc:	bl	0 <coda_type_set_description>
     4d0:	mov	r0, #9
     4d4:	mov	r1, #3
     4d8:	bl	0 <coda_type_number_new>
     4dc:	ldr	ip, [pc, #3004]	; 10a0 <sp3_init+0xf48>
     4e0:	ldr	r3, [ip]
     4e4:	str	r0, [r3, #40]	; 0x28
     4e8:	ldr	ip, [pc, #2992]	; 10a0 <sp3_init+0xf48>
     4ec:	ldr	r3, [ip]
     4f0:	ldr	r0, [r3, #40]	; 0x28
     4f4:	mov	r1, r4
     4f8:	bl	0 <coda_type_number_set_endianness>
     4fc:	ldr	r0, [pc, #2972]	; 10a0 <sp3_init+0xf48>
     500:	ldr	ip, [r0]
     504:	ldr	r0, [ip, #40]	; 0x28
     508:	mov	r3, #0
     50c:	mov	r2, #64	; 0x40
     510:	bl	0 <coda_type_set_bit_size>
     514:	ldr	ip, [pc, #2948]	; 10a0 <sp3_init+0xf48>
     518:	ldr	ip, [ip]
     51c:	ldr	r0, [ip, #40]	; 0x28
     520:	ldr	r1, [pc, #2984]	; 10d0 <sp3_init+0xf78>
     524:	bl	0 <coda_type_set_description>
     528:	mov	r0, #9
     52c:	mov	r1, #2
     530:	bl	0 <coda_type_number_new>
     534:	ldr	r3, [pc, #2916]	; 10a0 <sp3_init+0xf48>
     538:	ldr	ip, [r3]
     53c:	str	r0, [ip, #44]	; 0x2c
     540:	ldr	ip, [pc, #2904]	; 10a0 <sp3_init+0xf48>
     544:	ldr	r1, [ip]
     548:	ldr	r0, [r1, #44]	; 0x2c
     54c:	mov	r1, r4
     550:	bl	0 <coda_type_number_set_endianness>
     554:	ldr	r1, [pc, #2884]	; 10a0 <sp3_init+0xf48>
     558:	ldr	r3, [r1]
     55c:	ldr	r0, [r3, #44]	; 0x2c
     560:	mov	r1, #4
     564:	bl	0 <coda_type_set_read_type>
     568:	ldr	r1, [pc, #2864]	; 10a0 <sp3_init+0xf48>
     56c:	ldr	r2, [r1]
     570:	ldr	r0, [r2, #44]	; 0x2c
     574:	mov	r3, #0
     578:	mov	r2, #32
     57c:	bl	0 <coda_type_set_bit_size>
     580:	ldr	r1, [pc, #2840]	; 10a0 <sp3_init+0xf48>
     584:	ldr	r1, [r1]
     588:	ldr	r0, [r1, #44]	; 0x2c
     58c:	ldr	r1, [pc, #2984]	; 113c <sp3_init+0xfe4>
     590:	bl	0 <coda_type_set_description>
     594:	mov	r0, #9
     598:	mov	r1, #3
     59c:	bl	0 <coda_type_number_new>
     5a0:	ldr	r3, [pc, #2808]	; 10a0 <sp3_init+0xf48>
     5a4:	ldr	r1, [r3]
     5a8:	str	r0, [r1, #48]	; 0x30
     5ac:	ldr	ip, [pc, #2796]	; 10a0 <sp3_init+0xf48>
     5b0:	ldr	r3, [ip]
     5b4:	ldr	r0, [r3, #48]	; 0x30
     5b8:	mov	r1, r4
     5bc:	bl	0 <coda_type_number_set_endianness>
     5c0:	ldr	r2, [pc, #2776]	; 10a0 <sp3_init+0xf48>
     5c4:	ldr	r2, [r2]
     5c8:	ldr	r0, [r2, #48]	; 0x30
     5cc:	mov	r3, #0
     5d0:	mov	r2, #64	; 0x40
     5d4:	bl	0 <coda_type_set_bit_size>
     5d8:	ldr	r1, [pc, #2752]	; 10a0 <sp3_init+0xf48>
     5dc:	ldr	r2, [r1]
     5e0:	ldr	r0, [r2, #48]	; 0x30
     5e4:	ldr	r1, [pc, #2776]	; 10c4 <sp3_init+0xf6c>
     5e8:	bl	0 <coda_type_set_description>
     5ec:	mov	r0, #9
     5f0:	mov	r1, #2
     5f4:	bl	0 <coda_type_number_new>
     5f8:	ldr	r2, [pc, #2720]	; 10a0 <sp3_init+0xf48>
     5fc:	ldr	ip, [r2]
     600:	str	r0, [ip, #52]	; 0x34
     604:	ldr	r2, [pc, #2708]	; 10a0 <sp3_init+0xf48>
     608:	ldr	ip, [r2]
     60c:	ldr	r0, [ip, #52]	; 0x34
     610:	mov	r1, r4
     614:	bl	0 <coda_type_number_set_endianness>
     618:	ldr	r3, [pc, #2688]	; 10a0 <sp3_init+0xf48>
     61c:	ldr	r1, [r3]
     620:	ldr	r0, [r1, #52]	; 0x34
     624:	mov	r1, #1
     628:	bl	0 <coda_type_set_read_type>
     62c:	ldr	r1, [pc, #2668]	; 10a0 <sp3_init+0xf48>
     630:	ldr	r2, [r1]
     634:	ldr	r0, [r2, #52]	; 0x34
     638:	mov	r3, #0
     63c:	mov	r2, #8
     640:	bl	0 <coda_type_set_bit_size>
     644:	ldr	ip, [pc, #2644]	; 10a0 <sp3_init+0xf48>
     648:	ldr	r0, [ip]
     64c:	ldr	r0, [r0, #52]	; 0x34
     650:	ldr	r1, [pc, #2728]	; 1100 <sp3_init+0xfa8>
     654:	bl	0 <coda_type_set_description>
     658:	mov	r0, #9
     65c:	bl	0 <coda_type_text_new>
     660:	ldr	r2, [pc, #2616]	; 10a0 <sp3_init+0xf48>
     664:	ldr	r1, [r2]
     668:	str	r0, [r1, #56]	; 0x38
     66c:	ldr	r1, [pc, #2604]	; 10a0 <sp3_init+0xf48>
     670:	ldr	ip, [r1]
     674:	ldr	r0, [ip, #56]	; 0x38
     678:	mov	r3, #0
     67c:	mov	r2, #3
     680:	bl	0 <coda_type_set_byte_size>
     684:	ldr	r0, [pc, #2580]	; 10a0 <sp3_init+0xf48>
     688:	ldr	r3, [r0]
     68c:	ldr	r0, [r3, #56]	; 0x38
     690:	ldr	r1, [pc, #2736]	; 1148 <sp3_init+0xff0>
     694:	bl	0 <coda_type_set_description>
     698:	mov	r0, #9
     69c:	mov	r1, #2
     6a0:	bl	0 <coda_type_number_new>
     6a4:	ldr	r2, [pc, #2548]	; 10a0 <sp3_init+0xf48>
     6a8:	ldr	ip, [r2]
     6ac:	str	r0, [ip, #64]	; 0x40
     6b0:	ldr	r3, [pc, #2536]	; 10a0 <sp3_init+0xf48>
     6b4:	ldr	r3, [r3]
     6b8:	ldr	r0, [r3, #64]	; 0x40
     6bc:	mov	r1, r4
     6c0:	bl	0 <coda_type_number_set_endianness>
     6c4:	ldr	r0, [pc, #2516]	; 10a0 <sp3_init+0xf48>
     6c8:	ldr	ip, [r0]
     6cc:	ldr	r0, [ip, #64]	; 0x40
     6d0:	mov	r1, #2
     6d4:	bl	0 <coda_type_set_read_type>
     6d8:	ldr	r1, [pc, #2496]	; 10a0 <sp3_init+0xf48>
     6dc:	ldr	r3, [r1]
     6e0:	ldr	r0, [r3, #64]	; 0x40
     6e4:	mov	r3, #0
     6e8:	mov	r2, #16
     6ec:	bl	0 <coda_type_set_bit_size>
     6f0:	ldr	ip, [pc, #2472]	; 10a0 <sp3_init+0xf48>
     6f4:	ldr	ip, [ip]
     6f8:	ldr	r0, [ip, #64]	; 0x40
     6fc:	ldr	r1, [pc, #2528]	; 10e4 <sp3_init+0xf8c>
     700:	bl	0 <coda_type_set_description>
     704:	mov	r0, #9
     708:	bl	0 <coda_type_text_new>
     70c:	ldr	r2, [pc, #2444]	; 10a0 <sp3_init+0xf48>
     710:	ldr	ip, [r2]
     714:	str	r0, [ip, #72]	; 0x48
     718:	ldr	ip, [pc, #2432]	; 10a0 <sp3_init+0xf48>
     71c:	ldr	r1, [ip]
     720:	ldr	r0, [r1, #72]	; 0x48
     724:	mov	r3, #0
     728:	mov	r2, #2
     72c:	bl	0 <coda_type_set_byte_size>
     730:	ldr	r1, [pc, #2408]	; 10a0 <sp3_init+0xf48>
     734:	ldr	r2, [r1]
     738:	ldr	r0, [r2, #72]	; 0x48
     73c:	ldr	r1, [pc, #2448]	; 10d4 <sp3_init+0xf7c>
     740:	bl	0 <coda_type_set_description>
     744:	mov	r0, #9
     748:	bl	0 <coda_type_text_new>
     74c:	ldr	r2, [pc, #2380]	; 10a0 <sp3_init+0xf48>
     750:	ldr	r1, [r2]
     754:	str	r0, [r1, #76]	; 0x4c
     758:	ldr	ip, [pc, #2368]	; 10a0 <sp3_init+0xf48>
     75c:	ldr	r0, [ip]
     760:	ldr	r0, [r0, #76]	; 0x4c
     764:	mov	r3, #0
     768:	mov	r2, #3
     76c:	bl	0 <coda_type_set_byte_size>
     770:	ldr	r0, [pc, #2344]	; 10a0 <sp3_init+0xf48>
     774:	ldr	r2, [r0]
     778:	ldr	r0, [r2, #76]	; 0x4c
     77c:	ldr	r1, [pc, #2472]	; 112c <sp3_init+0xfd4>
     780:	bl	0 <coda_type_set_description>
     784:	mov	r0, #9
     788:	mov	r1, #3
     78c:	bl	0 <coda_type_number_new>
     790:	ldr	ip, [pc, #2312]	; 10a0 <sp3_init+0xf48>
     794:	ldr	r1, [ip]
     798:	str	r0, [r1, #80]	; 0x50
     79c:	ldr	r3, [pc, #2300]	; 10a0 <sp3_init+0xf48>
     7a0:	ldr	r0, [r3]
     7a4:	ldr	r0, [r0, #80]	; 0x50
     7a8:	mov	r1, r4
     7ac:	bl	0 <coda_type_number_set_endianness>
     7b0:	ldr	r0, [pc, #2280]	; 10a0 <sp3_init+0xf48>
     7b4:	ldr	r3, [r0]
     7b8:	ldr	r0, [r3, #80]	; 0x50
     7bc:	mov	r3, #0
     7c0:	mov	r2, #64	; 0x40
     7c4:	bl	0 <coda_type_set_bit_size>
     7c8:	ldr	r0, [pc, #2256]	; 10a0 <sp3_init+0xf48>
     7cc:	ldr	r1, [r0]
     7d0:	ldr	r0, [r1, #80]	; 0x50
     7d4:	ldr	r1, [pc, #2288]	; 10cc <sp3_init+0xf74>
     7d8:	bl	0 <coda_type_set_description>
     7dc:	mov	r0, #9
     7e0:	mov	r1, #3
     7e4:	bl	0 <coda_type_number_new>
     7e8:	ldr	r1, [pc, #2224]	; 10a0 <sp3_init+0xf48>
     7ec:	ldr	r3, [r1]
     7f0:	str	r0, [r3, #84]	; 0x54
     7f4:	ldr	r3, [pc, #2212]	; 10a0 <sp3_init+0xf48>
     7f8:	ldr	r2, [r3]
     7fc:	ldr	r0, [r2, #84]	; 0x54
     800:	mov	r1, r4
     804:	bl	0 <coda_type_number_set_endianness>
     808:	ldr	r2, [pc, #2192]	; 10a0 <sp3_init+0xf48>
     80c:	ldr	r3, [r2]
     810:	ldr	r0, [r3, #84]	; 0x54
     814:	mov	r3, #0
     818:	mov	r2, #64	; 0x40
     81c:	bl	0 <coda_type_set_bit_size>
     820:	ldr	r3, [pc, #2168]	; 10a0 <sp3_init+0xf48>
     824:	ldr	r0, [r3]
     828:	ldr	r0, [r0, #84]	; 0x54
     82c:	ldr	r1, [pc, #2212]	; 10d8 <sp3_init+0xf80>
     830:	bl	0 <coda_type_set_description>
     834:	mov	r0, #9
     838:	bl	0 <coda_type_text_new>
     83c:	ldr	r1, [pc, #2140]	; 10a0 <sp3_init+0xf48>
     840:	ldr	r3, [r1]
     844:	str	r0, [r3, #260]	; 0x104
     848:	mov	r0, #0
     84c:	str	r0, [sp, #24]
     850:	ldr	r0, [pc, #2236]	; 1114 <sp3_init+0xfbc>
     854:	add	r1, sp, #24
     858:	bl	0 <coda_expression_from_string>
     85c:	mov	r0, #9
     860:	ldr	r1, [sp, #24]
     864:	bl	0 <coda_type_time_new>
     868:	ldr	r1, [pc, #2096]	; 10a0 <sp3_init+0xf48>
     86c:	ldr	r1, [r1]
     870:	str	r0, [r1, #264]	; 0x108
     874:	ldr	r3, [pc, #2084]	; 10a0 <sp3_init+0xf48>
     878:	ldr	r1, [r3]
     87c:	ldr	r0, [r1, #264]	; 0x108
     880:	ldr	r1, [pc, #2072]	; 10a0 <sp3_init+0xf48>
     884:	ldr	r1, [r1]
     888:	ldr	r1, [r1, #260]	; 0x104
     88c:	bl	0 <coda_type_time_set_base_type>
     890:	ldr	r0, [pc, #2056]	; 10a0 <sp3_init+0xf48>
     894:	ldr	r0, [r0]
     898:	ldr	r0, [r0, #264]	; 0x108
     89c:	ldr	r1, [pc, #2216]	; 114c <sp3_init+0xff4>
     8a0:	bl	0 <coda_type_set_description>
     8a4:	mov	r0, #9
     8a8:	bl	0 <coda_type_text_new>
     8ac:	ldr	r2, [pc, #2028]	; 10a0 <sp3_init+0xf48>
     8b0:	ldr	r3, [r2]
     8b4:	str	r0, [r3, #88]	; 0x58
     8b8:	ldr	r2, [pc, #2016]	; 10a0 <sp3_init+0xf48>
     8bc:	ldr	ip, [r2]
     8c0:	ldr	r0, [ip, #88]	; 0x58
     8c4:	mov	r3, #0
     8c8:	mov	r2, #3
     8cc:	bl	0 <coda_type_set_byte_size>
     8d0:	ldr	r1, [pc, #1992]	; 10a0 <sp3_init+0xf48>
     8d4:	ldr	r0, [r1]
     8d8:	ldr	r0, [r0, #88]	; 0x58
     8dc:	ldr	r1, [pc, #2080]	; 1104 <sp3_init+0xfac>
     8e0:	bl	0 <coda_type_set_description>
     8e4:	mov	r0, #9
     8e8:	mov	r1, #3
     8ec:	bl	0 <coda_type_number_new>
     8f0:	ldr	r2, [pc, #1960]	; 10a0 <sp3_init+0xf48>
     8f4:	ldr	r1, [r2]
     8f8:	str	r0, [r1, #92]	; 0x5c
     8fc:	ldr	r3, [pc, #1948]	; 10a0 <sp3_init+0xf48>
     900:	ldr	r2, [r3]
     904:	ldr	r0, [r2, #92]	; 0x5c
     908:	mov	r1, r4
     90c:	bl	0 <coda_type_number_set_endianness>
     910:	ldr	r2, [pc, #1928]	; 10a0 <sp3_init+0xf48>
     914:	ldr	r0, [r2]
     918:	ldr	r0, [r0, #92]	; 0x5c
     91c:	mov	r3, #0
     920:	mov	r2, #64	; 0x40
     924:	bl	0 <coda_type_set_bit_size>
     928:	ldr	r1, [pc, #1904]	; 10a0 <sp3_init+0xf48>
     92c:	ldr	r2, [r1]
     930:	ldr	r0, [r2, #92]	; 0x5c
     934:	ldr	r1, [pc, #1916]	; 10b8 <sp3_init+0xf60>
     938:	bl	0 <coda_type_set_description>
     93c:	ldr	r0, [pc, #1884]	; 10a0 <sp3_init+0xf48>
     940:	ldr	r1, [r0]
     944:	ldr	r0, [r1, #92]	; 0x5c
     948:	ldr	r1, [pc, #1892]	; 10b4 <sp3_init+0xf5c>
     94c:	bl	0 <coda_type_number_set_unit>
     950:	mov	r0, #9
     954:	mov	r1, #3
     958:	bl	0 <coda_type_number_new>
     95c:	ldr	r1, [pc, #1852]	; 10a0 <sp3_init+0xf48>
     960:	ldr	r1, [r1]
     964:	str	r0, [r1, #96]	; 0x60
     968:	ldr	r2, [pc, #1840]	; 10a0 <sp3_init+0xf48>
     96c:	ldr	r2, [r2]
     970:	ldr	r0, [r2, #96]	; 0x60
     974:	mov	r1, r4
     978:	bl	0 <coda_type_number_set_endianness>
     97c:	ldr	r1, [pc, #1820]	; 10a0 <sp3_init+0xf48>
     980:	ldr	r0, [r1]
     984:	ldr	r0, [r0, #96]	; 0x60
     988:	mov	r3, #0
     98c:	mov	r2, #64	; 0x40
     990:	bl	0 <coda_type_set_bit_size>
     994:	ldr	r0, [pc, #1796]	; 10a0 <sp3_init+0xf48>
     998:	ldr	ip, [r0]
     99c:	ldr	r0, [ip, #96]	; 0x60
     9a0:	ldr	r1, [pc, #1860]	; 10ec <sp3_init+0xf94>
     9a4:	bl	0 <coda_type_set_description>
     9a8:	ldr	r2, [pc, #1776]	; 10a0 <sp3_init+0xf48>
     9ac:	ldr	r3, [r2]
     9b0:	ldr	r0, [r3, #96]	; 0x60
     9b4:	ldr	r1, [pc, #1784]	; 10b4 <sp3_init+0xf5c>
     9b8:	bl	0 <coda_type_number_set_unit>
     9bc:	mov	r0, #9
     9c0:	mov	r1, #3
     9c4:	bl	0 <coda_type_number_new>
     9c8:	ldr	r1, [pc, #1744]	; 10a0 <sp3_init+0xf48>
     9cc:	ldr	r2, [r1]
     9d0:	str	r0, [r2, #100]	; 0x64
     9d4:	ldr	r1, [pc, #1732]	; 10a0 <sp3_init+0xf48>
     9d8:	ldr	r0, [r1]
     9dc:	ldr	r0, [r0, #100]	; 0x64
     9e0:	mov	r1, r4
     9e4:	bl	0 <coda_type_number_set_endianness>
     9e8:	ldr	r3, [pc, #1712]	; 10a0 <sp3_init+0xf48>
     9ec:	ldr	ip, [r3]
     9f0:	ldr	r0, [ip, #100]	; 0x64
     9f4:	mov	r3, #0
     9f8:	mov	r2, #64	; 0x40
     9fc:	bl	0 <coda_type_set_bit_size>
     a00:	ldr	r1, [pc, #1688]	; 10a0 <sp3_init+0xf48>
     a04:	ldr	r1, [r1]
     a08:	ldr	r0, [r1, #100]	; 0x64
     a0c:	ldr	r1, [pc, #1836]	; 1140 <sp3_init+0xfe8>
     a10:	bl	0 <coda_type_set_description>
     a14:	ldr	r2, [pc, #1668]	; 10a0 <sp3_init+0xf48>
     a18:	ldr	r0, [r2]
     a1c:	ldr	r0, [r0, #100]	; 0x64
     a20:	ldr	r1, [pc, #1676]	; 10b4 <sp3_init+0xf5c>
     a24:	bl	0 <coda_type_number_set_unit>
     a28:	mov	r0, #9
     a2c:	mov	r1, #3
     a30:	bl	0 <coda_type_number_new>
     a34:	ldr	r3, [pc, #1636]	; 10a0 <sp3_init+0xf48>
     a38:	ldr	r1, [r3]
     a3c:	str	r0, [r1, #104]	; 0x68
     a40:	ldr	r0, [pc, #1624]	; 10a0 <sp3_init+0xf48>
     a44:	ldr	r3, [r0]
     a48:	ldr	r0, [r3, #104]	; 0x68
     a4c:	mov	r1, r4
     a50:	bl	0 <coda_type_number_set_endianness>
     a54:	ldr	r0, [pc, #1604]	; 10a0 <sp3_init+0xf48>
     a58:	ldr	r0, [r0]
     a5c:	ldr	r0, [r0, #104]	; 0x68
     a60:	mov	r3, #0
     a64:	mov	r2, #64	; 0x40
     a68:	bl	0 <coda_type_set_bit_size>
     a6c:	ldr	r2, [pc, #1580]	; 10a0 <sp3_init+0xf48>
     a70:	ldr	r0, [r2]
     a74:	ldr	r0, [r0, #104]	; 0x68
     a78:	ldr	r1, [pc, #1648]	; 10f0 <sp3_init+0xf98>
     a7c:	bl	0 <coda_type_set_description>
     a80:	ldr	r1, [pc, #1560]	; 10a0 <sp3_init+0xf48>
     a84:	ldr	r3, [r1]
     a88:	ldr	r0, [r3, #104]	; 0x68
     a8c:	ldr	r1, [pc, #1692]	; 1130 <sp3_init+0xfd8>
     a90:	bl	0 <coda_type_number_set_unit>
     a94:	mov	r0, #9
     a98:	mov	r1, #2
     a9c:	bl	0 <coda_type_number_new>
     aa0:	ldr	ip, [pc, #1528]	; 10a0 <sp3_init+0xf48>
     aa4:	ldr	ip, [ip]
     aa8:	str	r0, [ip, #108]	; 0x6c
     aac:	ldr	r2, [pc, #1516]	; 10a0 <sp3_init+0xf48>
     ab0:	ldr	ip, [r2]
     ab4:	ldr	r0, [ip, #108]	; 0x6c
     ab8:	mov	r1, r4
     abc:	bl	0 <coda_type_number_set_endianness>
     ac0:	ldr	r3, [pc, #1496]	; 10a0 <sp3_init+0xf48>
     ac4:	ldr	ip, [r3]
     ac8:	ldr	r0, [ip, #108]	; 0x6c
     acc:	mov	r1, #0
     ad0:	bl	0 <coda_type_set_read_type>
     ad4:	ldr	r2, [pc, #1476]	; 10a0 <sp3_init+0xf48>
     ad8:	ldr	r1, [r2]
     adc:	ldr	r0, [r1, #108]	; 0x6c
     ae0:	mov	r3, #0
     ae4:	mov	r2, #8
     ae8:	bl	0 <coda_type_set_bit_size>
     aec:	ldr	r1, [pc, #1452]	; 10a0 <sp3_init+0xf48>
     af0:	ldr	r3, [r1]
     af4:	ldr	r0, [r3, #108]	; 0x6c
     af8:	ldr	r1, [pc, #1628]	; 115c <sp3_init+0x1004>
     afc:	bl	0 <coda_type_set_description>
     b00:	mov	r0, #9
     b04:	mov	r1, #2
     b08:	bl	0 <coda_type_number_new>
     b0c:	ldr	r2, [pc, #1420]	; 10a0 <sp3_init+0xf48>
     b10:	ldr	r1, [r2]
     b14:	str	r0, [r1, #112]	; 0x70
     b18:	ldr	r3, [pc, #1408]	; 10a0 <sp3_init+0xf48>
     b1c:	ldr	r2, [r3]
     b20:	ldr	r0, [r2, #112]	; 0x70
     b24:	mov	r1, r4
     b28:	bl	0 <coda_type_number_set_endianness>
     b2c:	ldr	r1, [pc, #1388]	; 10a0 <sp3_init+0xf48>
     b30:	ldr	r3, [r1]
     b34:	ldr	r0, [r3, #112]	; 0x70
     b38:	mov	r1, #0
     b3c:	bl	0 <coda_type_set_read_type>
     b40:	ldr	r3, [pc, #1368]	; 10a0 <sp3_init+0xf48>
     b44:	ldr	r2, [r3]
     b48:	ldr	r0, [r2, #112]	; 0x70
     b4c:	mov	r3, #0
     b50:	mov	r2, #8
     b54:	bl	0 <coda_type_set_bit_size>
     b58:	ldr	r1, [pc, #1344]	; 10a0 <sp3_init+0xf48>
     b5c:	ldr	ip, [r1]
     b60:	ldr	r0, [ip, #112]	; 0x70
     b64:	ldr	r1, [pc, #1336]	; 10a4 <sp3_init+0xf4c>
     b68:	bl	0 <coda_type_set_description>
     b6c:	mov	r0, #9
     b70:	mov	r1, #2
     b74:	bl	0 <coda_type_number_new>
     b78:	ldr	ip, [pc, #1312]	; 10a0 <sp3_init+0xf48>
     b7c:	ldr	r1, [ip]
     b80:	str	r0, [r1, #116]	; 0x74
     b84:	ldr	r1, [pc, #1300]	; 10a0 <sp3_init+0xf48>
     b88:	ldr	r0, [r1]
     b8c:	ldr	r0, [r0, #116]	; 0x74
     b90:	mov	r1, r4
     b94:	bl	0 <coda_type_number_set_endianness>
     b98:	ldr	r1, [pc, #1280]	; 10a0 <sp3_init+0xf48>
     b9c:	ldr	r0, [r1]
     ba0:	ldr	r0, [r0, #116]	; 0x74
     ba4:	mov	r1, #0
     ba8:	bl	0 <coda_type_set_read_type>
     bac:	ldr	r2, [pc, #1260]	; 10a0 <sp3_init+0xf48>
     bb0:	ldr	ip, [r2]
     bb4:	ldr	r0, [ip, #116]	; 0x74
     bb8:	mov	r3, #0
     bbc:	mov	r2, #8
     bc0:	bl	0 <coda_type_set_bit_size>
     bc4:	ldr	r1, [pc, #1236]	; 10a0 <sp3_init+0xf48>
     bc8:	ldr	r3, [r1]
     bcc:	ldr	r0, [r3, #116]	; 0x74
     bd0:	ldr	r1, [pc, #1344]	; 1118 <sp3_init+0xfc0>
     bd4:	bl	0 <coda_type_set_description>
     bd8:	mov	r0, #9
     bdc:	mov	r1, #2
     be0:	bl	0 <coda_type_number_new>
     be4:	ldr	r1, [pc, #1204]	; 10a0 <sp3_init+0xf48>
     be8:	ldr	r1, [r1]
     bec:	str	r0, [r1, #120]	; 0x78
     bf0:	ldr	r3, [pc, #1192]	; 10a0 <sp3_init+0xf48>
     bf4:	ldr	r2, [r3]
     bf8:	ldr	r0, [r2, #120]	; 0x78
     bfc:	mov	r1, r4
     c00:	bl	0 <coda_type_number_set_endianness>
     c04:	ldr	r1, [pc, #1172]	; 10a0 <sp3_init+0xf48>
     c08:	ldr	r3, [r1]
     c0c:	ldr	r0, [r3, #120]	; 0x78
     c10:	mov	r1, #2
     c14:	bl	0 <coda_type_set_read_type>
     c18:	ldr	r3, [pc, #1152]	; 10a0 <sp3_init+0xf48>
     c1c:	ldr	ip, [r3]
     c20:	ldr	r0, [ip, #120]	; 0x78
     c24:	mov	r3, #0
     c28:	mov	r2, #16
     c2c:	bl	0 <coda_type_set_bit_size>
     c30:	ldr	r0, [pc, #1128]	; 10a0 <sp3_init+0xf48>
     c34:	ldr	r1, [r0]
     c38:	ldr	r0, [r1, #120]	; 0x78
     c3c:	ldr	r1, [pc, #1124]	; 10a8 <sp3_init+0xf50>
     c40:	bl	0 <coda_type_set_description>
     c44:	mov	r0, #9
     c48:	bl	0 <coda_type_text_new>
     c4c:	ldr	r3, [pc, #1100]	; 10a0 <sp3_init+0xf48>
     c50:	ldr	r1, [r3]
     c54:	str	r0, [r1, #124]	; 0x7c
     c58:	ldr	r1, [pc, #1088]	; 10a0 <sp3_init+0xf48>
     c5c:	ldr	r3, [r1]
     c60:	ldr	r0, [r3, #124]	; 0x7c
     c64:	mov	r3, #0
     c68:	mov	r2, #1
     c6c:	bl	0 <coda_type_set_byte_size>
     c70:	ldr	ip, [pc, #1064]	; 10a0 <sp3_init+0xf48>
     c74:	ldr	r1, [ip]
     c78:	ldr	r0, [r1, #124]	; 0x7c
     c7c:	ldr	r1, [pc, #1080]	; 10bc <sp3_init+0xf64>
     c80:	bl	0 <coda_type_set_description>
     c84:	mov	r0, #9
     c88:	bl	0 <coda_type_text_new>
     c8c:	ldr	r1, [pc, #1036]	; 10a0 <sp3_init+0xf48>
     c90:	ldr	ip, [r1]
     c94:	str	r0, [ip, #128]	; 0x80
     c98:	ldr	r1, [pc, #1024]	; 10a0 <sp3_init+0xf48>
     c9c:	ldr	r0, [r1]
     ca0:	ldr	r0, [r0, #128]	; 0x80
     ca4:	mov	r3, #0
     ca8:	mov	r2, #1
     cac:	bl	0 <coda_type_set_byte_size>
     cb0:	ldr	r2, [pc, #1000]	; 10a0 <sp3_init+0xf48>
     cb4:	ldr	r1, [r2]
     cb8:	ldr	r0, [r1, #128]	; 0x80
     cbc:	ldr	r1, [pc, #1172]	; 1158 <sp3_init+0x1000>
     cc0:	bl	0 <coda_type_set_description>
     cc4:	mov	r0, #9
     cc8:	bl	0 <coda_type_text_new>
     ccc:	ldr	r3, [pc, #972]	; 10a0 <sp3_init+0xf48>
     cd0:	ldr	r1, [r3]
     cd4:	str	r0, [r1, #132]	; 0x84
     cd8:	ldr	ip, [pc, #960]	; 10a0 <sp3_init+0xf48>
     cdc:	ldr	r0, [ip]
     ce0:	ldr	r0, [r0, #132]	; 0x84
     ce4:	mov	r3, #0
     ce8:	mov	r2, #1
     cec:	bl	0 <coda_type_set_byte_size>
     cf0:	ldr	r3, [pc, #936]	; 10a0 <sp3_init+0xf48>
     cf4:	ldr	r2, [r3]
     cf8:	ldr	r0, [r2, #132]	; 0x84
     cfc:	ldr	r1, [pc, #1056]	; 1124 <sp3_init+0xfcc>
     d00:	bl	0 <coda_type_set_description>
     d04:	mov	r0, #9
     d08:	bl	0 <coda_type_text_new>
     d0c:	ldr	r1, [pc, #908]	; 10a0 <sp3_init+0xf48>
     d10:	ldr	r1, [r1]
     d14:	str	r0, [r1, #136]	; 0x88
     d18:	ldr	r3, [pc, #896]	; 10a0 <sp3_init+0xf48>
     d1c:	ldr	ip, [r3]
     d20:	ldr	r0, [ip, #136]	; 0x88
     d24:	mov	r3, #0
     d28:	mov	r2, #1
     d2c:	bl	0 <coda_type_set_byte_size>
     d30:	ldr	r3, [pc, #872]	; 10a0 <sp3_init+0xf48>
     d34:	ldr	r3, [r3]
     d38:	ldr	r0, [r3, #136]	; 0x88
     d3c:	ldr	r1, [pc, #944]	; 10f4 <sp3_init+0xf9c>
     d40:	bl	0 <coda_type_set_description>
     d44:	mov	r0, #9
     d48:	mov	r1, #2
     d4c:	bl	0 <coda_type_number_new>
     d50:	ldr	r1, [pc, #840]	; 10a0 <sp3_init+0xf48>
     d54:	ldr	ip, [r1]
     d58:	str	r0, [ip, #144]	; 0x90
     d5c:	ldr	r2, [pc, #828]	; 10a0 <sp3_init+0xf48>
     d60:	ldr	r0, [r2]
     d64:	ldr	r0, [r0, #144]	; 0x90
     d68:	mov	r1, r4
     d6c:	bl	0 <coda_type_number_set_endianness>
     d70:	ldr	r2, [pc, #808]	; 10a0 <sp3_init+0xf48>
     d74:	ldr	r1, [r2]
     d78:	ldr	r0, [r1, #144]	; 0x90
     d7c:	mov	r1, #2
     d80:	bl	0 <coda_type_set_read_type>
     d84:	ldr	r1, [pc, #788]	; 10a0 <sp3_init+0xf48>
     d88:	ldr	r0, [r1]
     d8c:	ldr	r0, [r0, #144]	; 0x90
     d90:	mov	r3, #0
     d94:	mov	r2, #16
     d98:	bl	0 <coda_type_set_bit_size>
     d9c:	ldr	ip, [pc, #764]	; 10a0 <sp3_init+0xf48>
     da0:	ldr	r0, [ip]
     da4:	ldr	r0, [r0, #144]	; 0x90
     da8:	ldr	r1, [pc, #880]	; 1120 <sp3_init+0xfc8>
     dac:	bl	0 <coda_type_set_description>
     db0:	ldr	r0, [pc, #744]	; 10a0 <sp3_init+0xf48>
     db4:	ldr	r0, [r0]
     db8:	ldr	r0, [r0, #144]	; 0x90
     dbc:	ldr	r1, [pc, #884]	; 1138 <sp3_init+0xfe0>
     dc0:	bl	0 <coda_type_number_set_unit>
     dc4:	mov	r0, #9
     dc8:	mov	r1, #2
     dcc:	bl	0 <coda_type_number_new>
     dd0:	ldr	r1, [pc, #712]	; 10a0 <sp3_init+0xf48>
     dd4:	ldr	r2, [r1]
     dd8:	str	r0, [r2, #148]	; 0x94
     ddc:	ldr	r3, [pc, #700]	; 10a0 <sp3_init+0xf48>
     de0:	ldr	r2, [r3]
     de4:	ldr	r0, [r2, #148]	; 0x94
     de8:	mov	r1, r4
     dec:	bl	0 <coda_type_number_set_endianness>
     df0:	ldr	ip, [pc, #680]	; 10a0 <sp3_init+0xf48>
     df4:	ldr	r3, [ip]
     df8:	ldr	r0, [r3, #148]	; 0x94
     dfc:	mov	r1, #2
     e00:	bl	0 <coda_type_set_read_type>
     e04:	ldr	r0, [pc, #660]	; 10a0 <sp3_init+0xf48>
     e08:	ldr	r2, [r0]
     e0c:	ldr	r0, [r2, #148]	; 0x94
     e10:	mov	r3, #0
     e14:	mov	r2, #16
     e18:	bl	0 <coda_type_set_bit_size>
     e1c:	ldr	ip, [pc, #636]	; 10a0 <sp3_init+0xf48>
     e20:	ldr	r3, [ip]
     e24:	ldr	r0, [r3, #148]	; 0x94
     e28:	ldr	r1, [pc, #684]	; 10dc <sp3_init+0xf84>
     e2c:	bl	0 <coda_type_set_description>
     e30:	ldr	r3, [pc, #616]	; 10a0 <sp3_init+0xf48>
     e34:	ldr	ip, [r3]
     e38:	ldr	r0, [ip, #148]	; 0x94
     e3c:	ldr	r1, [pc, #756]	; 1138 <sp3_init+0xfe0>
     e40:	bl	0 <coda_type_number_set_unit>
     e44:	mov	r0, #9
     e48:	mov	r1, #2
     e4c:	bl	0 <coda_type_number_new>
     e50:	ldr	ip, [pc, #584]	; 10a0 <sp3_init+0xf48>
     e54:	ldr	r2, [ip]
     e58:	str	r0, [r2, #152]	; 0x98
     e5c:	ldr	r2, [pc, #572]	; 10a0 <sp3_init+0xf48>
     e60:	ldr	r3, [r2]
     e64:	ldr	r0, [r3, #152]	; 0x98
     e68:	mov	r1, r4
     e6c:	bl	0 <coda_type_number_set_endianness>
     e70:	ldr	r1, [pc, #552]	; 10a0 <sp3_init+0xf48>
     e74:	ldr	r0, [r1]
     e78:	ldr	r0, [r0, #152]	; 0x98
     e7c:	mov	r1, #2
     e80:	bl	0 <coda_type_set_read_type>
     e84:	ldr	r2, [pc, #532]	; 10a0 <sp3_init+0xf48>
     e88:	ldr	r0, [r2]
     e8c:	ldr	r0, [r0, #152]	; 0x98
     e90:	mov	r3, #0
     e94:	mov	r2, #16
     e98:	bl	0 <coda_type_set_bit_size>
     e9c:	ldr	r2, [pc, #508]	; 10a0 <sp3_init+0xf48>
     ea0:	ldr	r0, [r2]
     ea4:	ldr	r0, [r0, #152]	; 0x98
     ea8:	ldr	r1, [pc, #584]	; 10f8 <sp3_init+0xfa0>
     eac:	bl	0 <coda_type_set_description>
     eb0:	ldr	r3, [pc, #488]	; 10a0 <sp3_init+0xf48>
     eb4:	ldr	r3, [r3]
     eb8:	ldr	r0, [r3, #152]	; 0x98
     ebc:	ldr	r1, [pc, #628]	; 1138 <sp3_init+0xfe0>
     ec0:	bl	0 <coda_type_number_set_unit>
     ec4:	mov	r0, #9
     ec8:	mov	r1, #2
     ecc:	bl	0 <coda_type_number_new>
     ed0:	ldr	r1, [pc, #456]	; 10a0 <sp3_init+0xf48>
     ed4:	ldr	ip, [r1]
     ed8:	str	r0, [ip, #156]	; 0x9c
     edc:	ldr	r1, [pc, #444]	; 10a0 <sp3_init+0xf48>
     ee0:	ldr	ip, [r1]
     ee4:	ldr	r0, [ip, #156]	; 0x9c
     ee8:	mov	r1, r4
     eec:	bl	0 <coda_type_number_set_endianness>
     ef0:	ldr	r2, [pc, #424]	; 10a0 <sp3_init+0xf48>
     ef4:	ldr	r2, [r2]
     ef8:	ldr	r0, [r2, #156]	; 0x9c
     efc:	mov	r1, #4
     f00:	bl	0 <coda_type_set_read_type>
     f04:	ldr	r3, [pc, #404]	; 10a0 <sp3_init+0xf48>
     f08:	ldr	r1, [r3]
     f0c:	ldr	r0, [r1, #156]	; 0x9c
     f10:	mov	r3, #0
     f14:	mov	r2, #32
     f18:	bl	0 <coda_type_set_bit_size>
     f1c:	ldr	r1, [pc, #380]	; 10a0 <sp3_init+0xf48>
     f20:	ldr	ip, [r1]
     f24:	ldr	r0, [ip, #156]	; 0x9c
     f28:	ldr	r1, [pc, #472]	; 1108 <sp3_init+0xfb0>
     f2c:	bl	0 <coda_type_set_description>
     f30:	ldr	r1, [pc, #360]	; 10a0 <sp3_init+0xf48>
     f34:	ldr	ip, [r1]
     f38:	ldr	r0, [ip, #156]	; 0x9c
     f3c:	ldr	r1, [pc, #528]	; 1154 <sp3_init+0xffc>
     f40:	bl	0 <coda_type_number_set_unit>
     f44:	mov	r0, #9
     f48:	mov	r1, #2
     f4c:	bl	0 <coda_type_number_new>
     f50:	ldr	r2, [pc, #328]	; 10a0 <sp3_init+0xf48>
     f54:	ldr	r1, [r2]
     f58:	str	r0, [r1, #160]	; 0xa0
     f5c:	ldr	ip, [pc, #316]	; 10a0 <sp3_init+0xf48>
     f60:	ldr	ip, [ip]
     f64:	ldr	r0, [ip, #160]	; 0xa0
     f68:	mov	r1, r4
     f6c:	bl	0 <coda_type_number_set_endianness>
     f70:	ldr	r2, [pc, #296]	; 10a0 <sp3_init+0xf48>
     f74:	ldr	r1, [r2]
     f78:	ldr	r0, [r1, #160]	; 0xa0
     f7c:	mov	r1, #4
     f80:	bl	0 <coda_type_set_read_type>
     f84:	ldr	ip, [pc, #276]	; 10a0 <sp3_init+0xf48>
     f88:	ldr	r0, [ip]
     f8c:	ldr	r0, [r0, #160]	; 0xa0
     f90:	mov	r3, #0
     f94:	mov	r2, #32
     f98:	bl	0 <coda_type_set_bit_size>
     f9c:	ldr	r3, [pc, #252]	; 10a0 <sp3_init+0xf48>
     fa0:	ldr	r1, [r3]
     fa4:	ldr	r0, [r1, #160]	; 0xa0
     fa8:	ldr	r1, [pc, #404]	; 1144 <sp3_init+0xfec>
     fac:	bl	0 <coda_type_set_description>
     fb0:	mov	r0, #9
     fb4:	mov	r1, #2
     fb8:	bl	0 <coda_type_number_new>
     fbc:	ldr	ip, [pc, #220]	; 10a0 <sp3_init+0xf48>
     fc0:	ldr	r3, [ip]
     fc4:	str	r0, [r3, #164]	; 0xa4
     fc8:	ldr	r3, [pc, #208]	; 10a0 <sp3_init+0xf48>
     fcc:	ldr	ip, [r3]
     fd0:	ldr	r0, [ip, #164]	; 0xa4
     fd4:	mov	r1, r4
     fd8:	bl	0 <coda_type_number_set_endianness>
     fdc:	ldr	r0, [pc, #188]	; 10a0 <sp3_init+0xf48>
     fe0:	ldr	r0, [r0]
     fe4:	ldr	r0, [r0, #164]	; 0xa4
     fe8:	mov	r1, #4
     fec:	bl	0 <coda_type_set_read_type>
     ff0:	ldr	r0, [pc, #168]	; 10a0 <sp3_init+0xf48>
     ff4:	ldr	ip, [r0]
     ff8:	ldr	r0, [ip, #164]	; 0xa4
     ffc:	mov	r3, #0
    1000:	mov	r2, #32
    1004:	bl	0 <coda_type_set_bit_size>
    1008:	ldr	r1, [pc, #144]	; 10a0 <sp3_init+0xf48>
    100c:	ldr	r0, [r1]
    1010:	ldr	r0, [r0, #164]	; 0xa4
    1014:	ldr	r1, [pc, #144]	; 10ac <sp3_init+0xf54>
    1018:	bl	0 <coda_type_set_description>
    101c:	mov	r0, #9
    1020:	mov	r1, #2
    1024:	bl	0 <coda_type_number_new>
    1028:	ldr	r2, [pc, #112]	; 10a0 <sp3_init+0xf48>
    102c:	ldr	r1, [r2]
    1030:	str	r0, [r1, #168]	; 0xa8
    1034:	ldr	r2, [pc, #100]	; 10a0 <sp3_init+0xf48>
    1038:	ldr	r3, [r2]
    103c:	ldr	r0, [r3, #168]	; 0xa8
    1040:	mov	r1, r4
    1044:	bl	0 <coda_type_number_set_endianness>
    1048:	ldr	r1, [pc, #80]	; 10a0 <sp3_init+0xf48>
    104c:	ldr	r1, [r1]
    1050:	ldr	r0, [r1, #168]	; 0xa8
    1054:	mov	r1, #4
    1058:	bl	0 <coda_type_set_read_type>
    105c:	ldr	r2, [pc, #60]	; 10a0 <sp3_init+0xf48>
    1060:	ldr	r0, [r2]
    1064:	ldr	r0, [r0, #168]	; 0xa8
    1068:	mov	r3, #0
    106c:	mov	r2, #32
    1070:	bl	0 <coda_type_set_bit_size>
    1074:	ldr	r0, [pc, #36]	; 10a0 <sp3_init+0xf48>
    1078:	ldr	r3, [r0]
    107c:	ldr	r0, [r3, #168]	; 0xa8
    1080:	ldr	r1, [pc, #88]	; 10e0 <sp3_init+0xf88>
    1084:	bl	0 <coda_type_set_description>
    1088:	mov	r0, #9
    108c:	mov	r1, #2
    1090:	bl	0 <coda_type_number_new>
    1094:	ldr	r1, [pc, #4]	; 10a0 <sp3_init+0xf48>
    1098:	ldr	r1, [r1]
    109c:	b	1160 <sp3_init+0x1008>
    10a0:	.word	0x00000000
    10a4:	.word	0x0000033d
    10a8:	.word	0x00000637
    10ac:	.word	0x00000502
    10b0:	.word	0x0000003e
    10b4:	.word	0x000009ed
    10b8:	.word	0x0000078c
    10bc:	.word	0x00000690
    10c0:	.word	0x00000950
    10c4:	.word	0x00000a68
    10c8:	.word	0x0000084c
    10cc:	.word	0x000009c6
    10d0:	.word	0x00000820
    10d4:	.word	0x0000085c
    10d8:	.word	0x000002e9
    10dc:	.word	0x0000042f
    10e0:	.word	0x00000101
    10e4:	.word	0x000007c5
    10e8:	.word	0x000002ce
    10ec:	.word	0x000001db
    10f0:	.word	0x00000337
    10f4:	.word	0x000001e8
    10f8:	.word	0x00000030
    10fc:	.word	0x0000045c
    1100:	.word	0x00000397
    1104:	.word	0x000002c3
    1108:	.word	0x000004f7
    110c:	.word	0x00000595
    1110:	.word	0x00000717
    1114:	.word	0x0000073d
    1118:	.word	0x00000aa7
    111c:	.word	0x00000053
    1120:	.word	0x00000315
    1124:	.word	0x000003e0
    1128:	.word	0x00000383
    112c:	.word	0x00000178
    1130:	.word	0x000005fd
    1134:	.word	0x00000491
    1138:	.word	0x00000acf
    113c:	.word	0x0000055c
    1140:	.word	0x0000088f
    1144:	.word	0x0000015e
    1148:	.word	0x00000920
    114c:	.word	0x00000448
    1150:	.word	0x0000093f
    1154:	.word	0x0000000c
    1158:	.word	0x000006a1
    115c:	.word	0x0000067f
    1160:	str	r0, [r1, #172]	; 0xac
    1164:	ldr	r1, [pc, #3876]	; 2090 <sp3_init+0x1f38>
    1168:	ldr	r2, [r1]
    116c:	ldr	r0, [r2, #172]	; 0xac
    1170:	mov	r1, r4
    1174:	bl	0 <coda_type_number_set_endianness>
    1178:	ldr	ip, [pc, #3856]	; 2090 <sp3_init+0x1f38>
    117c:	ldr	r3, [ip]
    1180:	ldr	r0, [r3, #172]	; 0xac
    1184:	mov	r1, #4
    1188:	bl	0 <coda_type_set_read_type>
    118c:	ldr	r0, [pc, #3836]	; 2090 <sp3_init+0x1f38>
    1190:	ldr	r1, [r0]
    1194:	ldr	r0, [r1, #172]	; 0xac
    1198:	mov	r3, #0
    119c:	mov	r2, #32
    11a0:	bl	0 <coda_type_set_bit_size>
    11a4:	ldr	r2, [pc, #3812]	; 2090 <sp3_init+0x1f38>
    11a8:	ldr	r2, [r2]
    11ac:	ldr	r0, [r2, #172]	; 0xac
    11b0:	ldr	r1, [pc, #3920]	; 2108 <sp3_init+0x1fb0>
    11b4:	bl	0 <coda_type_set_description>
    11b8:	mov	r0, #9
    11bc:	mov	r1, #2
    11c0:	bl	0 <coda_type_number_new>
    11c4:	ldr	r1, [pc, #3780]	; 2090 <sp3_init+0x1f38>
    11c8:	ldr	r1, [r1]
    11cc:	str	r0, [r1, #176]	; 0xb0
    11d0:	ldr	r2, [pc, #3768]	; 2090 <sp3_init+0x1f38>
    11d4:	ldr	r1, [r2]
    11d8:	ldr	r0, [r1, #176]	; 0xb0
    11dc:	mov	r1, r4
    11e0:	bl	0 <coda_type_number_set_endianness>
    11e4:	ldr	r1, [pc, #3748]	; 2090 <sp3_init+0x1f38>
    11e8:	ldr	r0, [r1]
    11ec:	ldr	r0, [r0, #176]	; 0xb0
    11f0:	mov	r1, #4
    11f4:	bl	0 <coda_type_set_read_type>
    11f8:	ldr	r2, [pc, #3728]	; 2090 <sp3_init+0x1f38>
    11fc:	ldr	r2, [r2]
    1200:	ldr	r0, [r2, #176]	; 0xb0
    1204:	mov	r3, #0
    1208:	mov	r2, #32
    120c:	bl	0 <coda_type_set_bit_size>
    1210:	ldr	ip, [pc, #3704]	; 2090 <sp3_init+0x1f38>
    1214:	ldr	r0, [ip]
    1218:	ldr	r0, [r0, #176]	; 0xb0
    121c:	ldr	r1, [pc, #3720]	; 20ac <sp3_init+0x1f54>
    1220:	bl	0 <coda_type_set_description>
    1224:	mov	r0, #9
    1228:	mov	r1, #2
    122c:	bl	0 <coda_type_number_new>
    1230:	ldr	r3, [pc, #3672]	; 2090 <sp3_init+0x1f38>
    1234:	ldr	r2, [r3]
    1238:	str	r0, [r2, #180]	; 0xb4
    123c:	ldr	r0, [pc, #3660]	; 2090 <sp3_init+0x1f38>
    1240:	ldr	r2, [r0]
    1244:	ldr	r0, [r2, #180]	; 0xb4
    1248:	mov	r1, r4
    124c:	bl	0 <coda_type_number_set_endianness>
    1250:	ldr	ip, [pc, #3640]	; 2090 <sp3_init+0x1f38>
    1254:	ldr	r0, [ip]
    1258:	ldr	r0, [r0, #180]	; 0xb4
    125c:	mov	r1, #4
    1260:	bl	0 <coda_type_set_read_type>
    1264:	ldr	r2, [pc, #3620]	; 2090 <sp3_init+0x1f38>
    1268:	ldr	r1, [r2]
    126c:	ldr	r0, [r1, #180]	; 0xb4
    1270:	mov	r3, #0
    1274:	mov	r2, #32
    1278:	bl	0 <coda_type_set_bit_size>
    127c:	ldr	r2, [pc, #3596]	; 2090 <sp3_init+0x1f38>
    1280:	ldr	r0, [r2]
    1284:	ldr	r0, [r0, #180]	; 0xb4
    1288:	ldr	r1, [pc, #3720]	; 2118 <sp3_init+0x1fc0>
    128c:	bl	0 <coda_type_set_description>
    1290:	mov	r0, #9
    1294:	mov	r1, #3
    1298:	bl	0 <coda_type_number_new>
    129c:	ldr	r2, [pc, #3564]	; 2090 <sp3_init+0x1f38>
    12a0:	ldr	r3, [r2]
    12a4:	str	r0, [r3, #184]	; 0xb8
    12a8:	ldr	r2, [pc, #3552]	; 2090 <sp3_init+0x1f38>
    12ac:	ldr	r1, [r2]
    12b0:	ldr	r0, [r1, #184]	; 0xb8
    12b4:	mov	r1, r4
    12b8:	bl	0 <coda_type_number_set_endianness>
    12bc:	ldr	r2, [pc, #3532]	; 2090 <sp3_init+0x1f38>
    12c0:	ldr	r3, [r2]
    12c4:	ldr	r0, [r3, #184]	; 0xb8
    12c8:	mov	r3, #0
    12cc:	mov	r2, #64	; 0x40
    12d0:	bl	0 <coda_type_set_bit_size>
    12d4:	ldr	r1, [pc, #3508]	; 2090 <sp3_init+0x1f38>
    12d8:	ldr	r2, [r1]
    12dc:	ldr	r0, [r2, #184]	; 0xb8
    12e0:	ldr	r1, [pc, #3608]	; 2100 <sp3_init+0x1fa8>
    12e4:	bl	0 <coda_type_set_description>
    12e8:	ldr	r1, [pc, #3488]	; 2090 <sp3_init+0x1f38>
    12ec:	ldr	r3, [r1]
    12f0:	ldr	r0, [r3, #184]	; 0xb8
    12f4:	ldr	r1, [pc, #3480]	; 2094 <sp3_init+0x1f3c>
    12f8:	bl	0 <coda_type_number_set_unit>
    12fc:	mov	r0, #9
    1300:	mov	r1, #3
    1304:	bl	0 <coda_type_number_new>
    1308:	ldr	r3, [pc, #3456]	; 2090 <sp3_init+0x1f38>
    130c:	ldr	r1, [r3]
    1310:	str	r0, [r1, #188]	; 0xbc
    1314:	ldr	ip, [pc, #3444]	; 2090 <sp3_init+0x1f38>
    1318:	ldr	r2, [ip]
    131c:	ldr	r0, [r2, #188]	; 0xbc
    1320:	mov	r1, r4
    1324:	bl	0 <coda_type_number_set_endianness>
    1328:	ldr	r0, [pc, #3424]	; 2090 <sp3_init+0x1f38>
    132c:	ldr	r1, [r0]
    1330:	ldr	r0, [r1, #188]	; 0xbc
    1334:	mov	r3, #0
    1338:	mov	r2, #64	; 0x40
    133c:	bl	0 <coda_type_set_bit_size>
    1340:	ldr	r1, [pc, #3400]	; 2090 <sp3_init+0x1f38>
    1344:	ldr	ip, [r1]
    1348:	ldr	r0, [ip, #188]	; 0xbc
    134c:	ldr	r1, [pc, #3456]	; 20d4 <sp3_init+0x1f7c>
    1350:	bl	0 <coda_type_set_description>
    1354:	ldr	ip, [pc, #3380]	; 2090 <sp3_init+0x1f38>
    1358:	ldr	ip, [ip]
    135c:	ldr	r0, [ip, #188]	; 0xbc
    1360:	ldr	r1, [pc, #3372]	; 2094 <sp3_init+0x1f3c>
    1364:	bl	0 <coda_type_number_set_unit>
    1368:	mov	r0, #9
    136c:	mov	r1, #3
    1370:	bl	0 <coda_type_number_new>
    1374:	ldr	r3, [pc, #3348]	; 2090 <sp3_init+0x1f38>
    1378:	ldr	ip, [r3]
    137c:	str	r0, [ip, #192]	; 0xc0
    1380:	ldr	ip, [pc, #3336]	; 2090 <sp3_init+0x1f38>
    1384:	ldr	r2, [ip]
    1388:	ldr	r0, [r2, #192]	; 0xc0
    138c:	mov	r1, r4
    1390:	bl	0 <coda_type_number_set_endianness>
    1394:	ldr	r2, [pc, #3316]	; 2090 <sp3_init+0x1f38>
    1398:	ldr	r1, [r2]
    139c:	ldr	r0, [r1, #192]	; 0xc0
    13a0:	mov	r3, #0
    13a4:	mov	r2, #64	; 0x40
    13a8:	bl	0 <coda_type_set_bit_size>
    13ac:	ldr	r0, [pc, #3292]	; 2090 <sp3_init+0x1f38>
    13b0:	ldr	ip, [r0]
    13b4:	ldr	r0, [ip, #192]	; 0xc0
    13b8:	ldr	r1, [pc, #3340]	; 20cc <sp3_init+0x1f74>
    13bc:	bl	0 <coda_type_set_description>
    13c0:	ldr	ip, [pc, #3272]	; 2090 <sp3_init+0x1f38>
    13c4:	ldr	r0, [ip]
    13c8:	ldr	r0, [r0, #192]	; 0xc0
    13cc:	ldr	r1, [pc, #3264]	; 2094 <sp3_init+0x1f3c>
    13d0:	bl	0 <coda_type_number_set_unit>
    13d4:	mov	r0, #9
    13d8:	mov	r1, #3
    13dc:	bl	0 <coda_type_number_new>
    13e0:	ldr	r1, [pc, #3240]	; 2090 <sp3_init+0x1f38>
    13e4:	ldr	r1, [r1]
    13e8:	str	r0, [r1, #196]	; 0xc4
    13ec:	ldr	ip, [pc, #3228]	; 2090 <sp3_init+0x1f38>
    13f0:	ldr	r1, [ip]
    13f4:	ldr	r0, [r1, #196]	; 0xc4
    13f8:	mov	r1, r4
    13fc:	bl	0 <coda_type_number_set_endianness>
    1400:	ldr	r0, [pc, #3208]	; 2090 <sp3_init+0x1f38>
    1404:	ldr	ip, [r0]
    1408:	ldr	r0, [ip, #196]	; 0xc4
    140c:	mov	r3, #0
    1410:	mov	r2, #64	; 0x40
    1414:	bl	0 <coda_type_set_bit_size>
    1418:	ldr	r3, [pc, #3184]	; 2090 <sp3_init+0x1f38>
    141c:	ldr	ip, [r3]
    1420:	ldr	r0, [ip, #196]	; 0xc4
    1424:	ldr	r1, [pc, #3212]	; 20b8 <sp3_init+0x1f60>
    1428:	bl	0 <coda_type_set_description>
    142c:	ldr	r1, [pc, #3164]	; 2090 <sp3_init+0x1f38>
    1430:	ldr	r2, [r1]
    1434:	ldr	r0, [r2, #196]	; 0xc4
    1438:	ldr	r1, [pc, #3280]	; 2110 <sp3_init+0x1fb8>
    143c:	bl	0 <coda_type_number_set_unit>
    1440:	mov	r0, #9
    1444:	mov	r1, #2
    1448:	bl	0 <coda_type_number_new>
    144c:	ldr	r1, [pc, #3132]	; 2090 <sp3_init+0x1f38>
    1450:	ldr	r1, [r1]
    1454:	str	r0, [r1, #200]	; 0xc8
    1458:	ldr	r3, [pc, #3120]	; 2090 <sp3_init+0x1f38>
    145c:	ldr	r0, [r3]
    1460:	ldr	r0, [r0, #200]	; 0xc8
    1464:	mov	r1, r4
    1468:	bl	0 <coda_type_number_set_endianness>
    146c:	ldr	r2, [pc, #3100]	; 2090 <sp3_init+0x1f38>
    1470:	ldr	r3, [r2]
    1474:	ldr	r0, [r3, #200]	; 0xc8
    1478:	mov	r1, #0
    147c:	bl	0 <coda_type_set_read_type>
    1480:	ldr	r3, [pc, #3080]	; 2090 <sp3_init+0x1f38>
    1484:	ldr	r3, [r3]
    1488:	ldr	r0, [r3, #200]	; 0xc8
    148c:	mov	r3, #0
    1490:	mov	r2, #8
    1494:	bl	0 <coda_type_set_bit_size>
    1498:	ldr	r2, [pc, #3056]	; 2090 <sp3_init+0x1f38>
    149c:	ldr	r2, [r2]
    14a0:	ldr	r0, [r2, #200]	; 0xc8
    14a4:	ldr	r1, [pc, #3232]	; 214c <sp3_init+0x1ff4>
    14a8:	bl	0 <coda_type_set_description>
    14ac:	mov	r0, #9
    14b0:	mov	r1, #2
    14b4:	bl	0 <coda_type_number_new>
    14b8:	ldr	ip, [pc, #3024]	; 2090 <sp3_init+0x1f38>
    14bc:	ldr	r1, [ip]
    14c0:	str	r0, [r1, #204]	; 0xcc
    14c4:	ldr	r3, [pc, #3012]	; 2090 <sp3_init+0x1f38>
    14c8:	ldr	r1, [r3]
    14cc:	ldr	r0, [r1, #204]	; 0xcc
    14d0:	mov	r1, r4
    14d4:	bl	0 <coda_type_number_set_endianness>
    14d8:	ldr	r0, [pc, #2992]	; 2090 <sp3_init+0x1f38>
    14dc:	ldr	ip, [r0]
    14e0:	ldr	r0, [ip, #204]	; 0xcc
    14e4:	mov	r1, #0
    14e8:	bl	0 <coda_type_set_read_type>
    14ec:	ldr	ip, [pc, #2972]	; 2090 <sp3_init+0x1f38>
    14f0:	ldr	r3, [ip]
    14f4:	ldr	r0, [r3, #204]	; 0xcc
    14f8:	mov	r3, #0
    14fc:	mov	r2, #8
    1500:	bl	0 <coda_type_set_bit_size>
    1504:	ldr	r3, [pc, #2948]	; 2090 <sp3_init+0x1f38>
    1508:	ldr	ip, [r3]
    150c:	ldr	r0, [ip, #204]	; 0xcc
    1510:	ldr	r1, [pc, #3108]	; 213c <sp3_init+0x1fe4>
    1514:	bl	0 <coda_type_set_description>
    1518:	mov	r0, #9
    151c:	mov	r1, #2
    1520:	bl	0 <coda_type_number_new>
    1524:	ldr	ip, [pc, #2916]	; 2090 <sp3_init+0x1f38>
    1528:	ldr	r3, [ip]
    152c:	str	r0, [r3, #208]	; 0xd0
    1530:	ldr	r3, [pc, #2904]	; 2090 <sp3_init+0x1f38>
    1534:	ldr	r3, [r3]
    1538:	ldr	r0, [r3, #208]	; 0xd0
    153c:	mov	r1, r4
    1540:	bl	0 <coda_type_number_set_endianness>
    1544:	ldr	r1, [pc, #2884]	; 2090 <sp3_init+0x1f38>
    1548:	ldr	r1, [r1]
    154c:	ldr	r0, [r1, #208]	; 0xd0
    1550:	mov	r1, #0
    1554:	bl	0 <coda_type_set_read_type>
    1558:	ldr	ip, [pc, #2864]	; 2090 <sp3_init+0x1f38>
    155c:	ldr	r0, [ip]
    1560:	ldr	r0, [r0, #208]	; 0xd0
    1564:	mov	r3, #0
    1568:	mov	r2, #8
    156c:	bl	0 <coda_type_set_bit_size>
    1570:	ldr	ip, [pc, #2840]	; 2090 <sp3_init+0x1f38>
    1574:	ldr	r0, [ip]
    1578:	ldr	r0, [r0, #208]	; 0xd0
    157c:	ldr	r1, [pc, #2848]	; 20a4 <sp3_init+0x1f4c>
    1580:	bl	0 <coda_type_set_description>
    1584:	mov	r0, #9
    1588:	mov	r1, #2
    158c:	bl	0 <coda_type_number_new>
    1590:	ldr	r1, [pc, #2808]	; 2090 <sp3_init+0x1f38>
    1594:	ldr	r1, [r1]
    1598:	str	r0, [r1, #212]	; 0xd4
    159c:	ldr	r0, [pc, #2796]	; 2090 <sp3_init+0x1f38>
    15a0:	ldr	r2, [r0]
    15a4:	ldr	r0, [r2, #212]	; 0xd4
    15a8:	mov	r1, r4
    15ac:	bl	0 <coda_type_number_set_endianness>
    15b0:	ldr	r2, [pc, #2776]	; 2090 <sp3_init+0x1f38>
    15b4:	ldr	r2, [r2]
    15b8:	ldr	r0, [r2, #212]	; 0xd4
    15bc:	mov	r1, #2
    15c0:	bl	0 <coda_type_set_read_type>
    15c4:	ldr	r0, [pc, #2756]	; 2090 <sp3_init+0x1f38>
    15c8:	ldr	r1, [r0]
    15cc:	ldr	r0, [r1, #212]	; 0xd4
    15d0:	mov	r3, #0
    15d4:	mov	r2, #16
    15d8:	bl	0 <coda_type_set_bit_size>
    15dc:	ldr	ip, [pc, #2732]	; 2090 <sp3_init+0x1f38>
    15e0:	ldr	r0, [ip]
    15e4:	ldr	r0, [r0, #212]	; 0xd4
    15e8:	ldr	r1, [pc, #2728]	; 2098 <sp3_init+0x1f40>
    15ec:	bl	0 <coda_type_set_description>
    15f0:	mov	r0, #9
    15f4:	mov	r1, #2
    15f8:	bl	0 <coda_type_number_new>
    15fc:	ldr	r2, [pc, #2700]	; 2090 <sp3_init+0x1f38>
    1600:	ldr	r1, [r2]
    1604:	str	r0, [r1, #220]	; 0xdc
    1608:	ldr	r2, [pc, #2688]	; 2090 <sp3_init+0x1f38>
    160c:	ldr	r3, [r2]
    1610:	ldr	r0, [r3, #220]	; 0xdc
    1614:	mov	r1, r4
    1618:	bl	0 <coda_type_number_set_endianness>
    161c:	ldr	r1, [pc, #2668]	; 2090 <sp3_init+0x1f38>
    1620:	ldr	r1, [r1]
    1624:	ldr	r0, [r1, #220]	; 0xdc
    1628:	mov	r1, #2
    162c:	bl	0 <coda_type_set_read_type>
    1630:	ldr	r0, [pc, #2648]	; 2090 <sp3_init+0x1f38>
    1634:	ldr	r0, [r0]
    1638:	ldr	r0, [r0, #220]	; 0xdc
    163c:	mov	r3, #0
    1640:	mov	r2, #16
    1644:	bl	0 <coda_type_set_bit_size>
    1648:	ldr	ip, [pc, #2624]	; 2090 <sp3_init+0x1f38>
    164c:	ldr	r2, [ip]
    1650:	ldr	r0, [r2, #220]	; 0xdc
    1654:	ldr	r1, [pc, #2792]	; 2144 <sp3_init+0x1fec>
    1658:	bl	0 <coda_type_set_description>
    165c:	ldr	r1, [pc, #2604]	; 2090 <sp3_init+0x1f38>
    1660:	ldr	r3, [r1]
    1664:	ldr	r0, [r3, #220]	; 0xdc
    1668:	ldr	r1, [pc, #2776]	; 2148 <sp3_init+0x1ff0>
    166c:	bl	0 <coda_type_number_set_unit>
    1670:	mov	r0, #9
    1674:	mov	r1, #2
    1678:	bl	0 <coda_type_number_new>
    167c:	ldr	r2, [pc, #2572]	; 2090 <sp3_init+0x1f38>
    1680:	ldr	r3, [r2]
    1684:	str	r0, [r3, #224]	; 0xe0
    1688:	ldr	r1, [pc, #2560]	; 2090 <sp3_init+0x1f38>
    168c:	ldr	r3, [r1]
    1690:	ldr	r0, [r3, #224]	; 0xe0
    1694:	mov	r1, r4
    1698:	bl	0 <coda_type_number_set_endianness>
    169c:	ldr	r2, [pc, #2540]	; 2090 <sp3_init+0x1f38>
    16a0:	ldr	r1, [r2]
    16a4:	ldr	r0, [r1, #224]	; 0xe0
    16a8:	mov	r1, #2
    16ac:	bl	0 <coda_type_set_read_type>
    16b0:	ldr	r3, [pc, #2520]	; 2090 <sp3_init+0x1f38>
    16b4:	ldr	r1, [r3]
    16b8:	ldr	r0, [r1, #224]	; 0xe0
    16bc:	mov	r3, #0
    16c0:	mov	r2, #16
    16c4:	bl	0 <coda_type_set_bit_size>
    16c8:	ldr	r0, [pc, #2496]	; 2090 <sp3_init+0x1f38>
    16cc:	ldr	r2, [r0]
    16d0:	ldr	r0, [r2, #224]	; 0xe0
    16d4:	ldr	r1, [pc, #2676]	; 2150 <sp3_init+0x1ff8>
    16d8:	bl	0 <coda_type_set_description>
    16dc:	ldr	ip, [pc, #2476]	; 2090 <sp3_init+0x1f38>
    16e0:	ldr	r0, [ip]
    16e4:	ldr	r0, [r0, #224]	; 0xe0
    16e8:	ldr	r1, [pc, #2648]	; 2148 <sp3_init+0x1ff0>
    16ec:	bl	0 <coda_type_number_set_unit>
    16f0:	mov	r0, #9
    16f4:	mov	r1, #2
    16f8:	bl	0 <coda_type_number_new>
    16fc:	ldr	ip, [pc, #2444]	; 2090 <sp3_init+0x1f38>
    1700:	ldr	r1, [ip]
    1704:	str	r0, [r1, #228]	; 0xe4
    1708:	ldr	r2, [pc, #2432]	; 2090 <sp3_init+0x1f38>
    170c:	ldr	r0, [r2]
    1710:	ldr	r0, [r0, #228]	; 0xe4
    1714:	mov	r1, r4
    1718:	bl	0 <coda_type_number_set_endianness>
    171c:	ldr	r3, [pc, #2412]	; 2090 <sp3_init+0x1f38>
    1720:	ldr	ip, [r3]
    1724:	ldr	r0, [ip, #228]	; 0xe4
    1728:	mov	r1, #2
    172c:	bl	0 <coda_type_set_read_type>
    1730:	ldr	r0, [pc, #2392]	; 2090 <sp3_init+0x1f38>
    1734:	ldr	r0, [r0]
    1738:	ldr	r0, [r0, #228]	; 0xe4
    173c:	mov	r3, #0
    1740:	mov	r2, #16
    1744:	bl	0 <coda_type_set_bit_size>
    1748:	ldr	r3, [pc, #2368]	; 2090 <sp3_init+0x1f38>
    174c:	ldr	r1, [r3]
    1750:	ldr	r0, [r1, #228]	; 0xe4
    1754:	ldr	r1, [pc, #2380]	; 20a8 <sp3_init+0x1f50>
    1758:	bl	0 <coda_type_set_description>
    175c:	ldr	r1, [pc, #2348]	; 2090 <sp3_init+0x1f38>
    1760:	ldr	r1, [r1]
    1764:	ldr	r0, [r1, #228]	; 0xe4
    1768:	ldr	r1, [pc, #2520]	; 2148 <sp3_init+0x1ff0>
    176c:	bl	0 <coda_type_number_set_unit>
    1770:	mov	r0, #9
    1774:	mov	r1, #2
    1778:	bl	0 <coda_type_number_new>
    177c:	ldr	r1, [pc, #2316]	; 2090 <sp3_init+0x1f38>
    1780:	ldr	ip, [r1]
    1784:	str	r0, [ip, #232]	; 0xe8
    1788:	ldr	ip, [pc, #2304]	; 2090 <sp3_init+0x1f38>
    178c:	ldr	ip, [ip]
    1790:	ldr	r0, [ip, #232]	; 0xe8
    1794:	mov	r1, r4
    1798:	bl	0 <coda_type_number_set_endianness>
    179c:	ldr	r3, [pc, #2284]	; 2090 <sp3_init+0x1f38>
    17a0:	ldr	r3, [r3]
    17a4:	ldr	r0, [r3, #232]	; 0xe8
    17a8:	mov	r1, #2
    17ac:	bl	0 <coda_type_set_read_type>
    17b0:	ldr	r2, [pc, #2264]	; 2090 <sp3_init+0x1f38>
    17b4:	ldr	r3, [r2]
    17b8:	ldr	r0, [r3, #232]	; 0xe8
    17bc:	mov	r3, #0
    17c0:	mov	r2, #16
    17c4:	bl	0 <coda_type_set_bit_size>
    17c8:	ldr	r0, [pc, #2240]	; 2090 <sp3_init+0x1f38>
    17cc:	ldr	r0, [r0]
    17d0:	ldr	r0, [r0, #232]	; 0xe8
    17d4:	ldr	r1, [pc, #2304]	; 20dc <sp3_init+0x1f84>
    17d8:	bl	0 <coda_type_set_description>
    17dc:	ldr	r0, [pc, #2220]	; 2090 <sp3_init+0x1f38>
    17e0:	ldr	r0, [r0]
    17e4:	ldr	r0, [r0, #232]	; 0xe8
    17e8:	ldr	r1, [pc, #2300]	; 20ec <sp3_init+0x1f94>
    17ec:	bl	0 <coda_type_number_set_unit>
    17f0:	mov	r0, #9
    17f4:	mov	r1, #2
    17f8:	bl	0 <coda_type_number_new>
    17fc:	ldr	r1, [pc, #2188]	; 2090 <sp3_init+0x1f38>
    1800:	ldr	r1, [r1]
    1804:	str	r0, [r1, #236]	; 0xec
    1808:	ldr	ip, [pc, #2176]	; 2090 <sp3_init+0x1f38>
    180c:	ldr	r1, [ip]
    1810:	ldr	r0, [r1, #236]	; 0xec
    1814:	mov	r1, r4
    1818:	bl	0 <coda_type_number_set_endianness>
    181c:	ldr	r1, [pc, #2156]	; 2090 <sp3_init+0x1f38>
    1820:	ldr	r1, [r1]
    1824:	ldr	r0, [r1, #236]	; 0xec
    1828:	mov	r1, #4
    182c:	bl	0 <coda_type_set_read_type>
    1830:	ldr	r3, [pc, #2136]	; 2090 <sp3_init+0x1f38>
    1834:	ldr	r1, [r3]
    1838:	ldr	r0, [r1, #236]	; 0xec
    183c:	mov	r3, #0
    1840:	mov	r2, #32
    1844:	bl	0 <coda_type_set_bit_size>
    1848:	ldr	r0, [pc, #2112]	; 2090 <sp3_init+0x1f38>
    184c:	ldr	r2, [r0]
    1850:	ldr	r0, [r2, #236]	; 0xec
    1854:	ldr	r1, [pc, #2260]	; 2130 <sp3_init+0x1fd8>
    1858:	bl	0 <coda_type_set_description>
    185c:	mov	r0, #9
    1860:	mov	r1, #2
    1864:	bl	0 <coda_type_number_new>
    1868:	ldr	r1, [pc, #2080]	; 2090 <sp3_init+0x1f38>
    186c:	ldr	r3, [r1]
    1870:	str	r0, [r3, #240]	; 0xf0
    1874:	ldr	r1, [pc, #2068]	; 2090 <sp3_init+0x1f38>
    1878:	ldr	r1, [r1]
    187c:	ldr	r0, [r1, #240]	; 0xf0
    1880:	mov	r1, r4
    1884:	bl	0 <coda_type_number_set_endianness>
    1888:	ldr	ip, [pc, #2048]	; 2090 <sp3_init+0x1f38>
    188c:	ldr	r0, [ip]
    1890:	ldr	r0, [r0, #240]	; 0xf0
    1894:	mov	r1, #4
    1898:	bl	0 <coda_type_set_read_type>
    189c:	ldr	r1, [pc, #2028]	; 2090 <sp3_init+0x1f38>
    18a0:	ldr	r1, [r1]
    18a4:	ldr	r0, [r1, #240]	; 0xf0
    18a8:	mov	r3, #0
    18ac:	mov	r2, #32
    18b0:	bl	0 <coda_type_set_bit_size>
    18b4:	ldr	r1, [pc, #2004]	; 2090 <sp3_init+0x1f38>
    18b8:	ldr	ip, [r1]
    18bc:	ldr	r0, [ip, #240]	; 0xf0
    18c0:	ldr	r1, [pc, #2004]	; 209c <sp3_init+0x1f44>
    18c4:	bl	0 <coda_type_set_description>
    18c8:	mov	r0, #9
    18cc:	mov	r1, #2
    18d0:	bl	0 <coda_type_number_new>
    18d4:	ldr	ip, [pc, #1972]	; 2090 <sp3_init+0x1f38>
    18d8:	ldr	r1, [ip]
    18dc:	str	r0, [r1, #244]	; 0xf4
    18e0:	ldr	r3, [pc, #1960]	; 2090 <sp3_init+0x1f38>
    18e4:	ldr	r3, [r3]
    18e8:	ldr	r0, [r3, #244]	; 0xf4
    18ec:	mov	r1, r4
    18f0:	bl	0 <coda_type_number_set_endianness>
    18f4:	ldr	r0, [pc, #1940]	; 2090 <sp3_init+0x1f38>
    18f8:	ldr	r2, [r0]
    18fc:	ldr	r0, [r2, #244]	; 0xf4
    1900:	mov	r1, #4
    1904:	bl	0 <coda_type_set_read_type>
    1908:	ldr	r3, [pc, #1920]	; 2090 <sp3_init+0x1f38>
    190c:	ldr	r0, [r3]
    1910:	ldr	r0, [r0, #244]	; 0xf4
    1914:	mov	r3, #0
    1918:	mov	r2, #32
    191c:	bl	0 <coda_type_set_bit_size>
    1920:	ldr	r0, [pc, #1896]	; 2090 <sp3_init+0x1f38>
    1924:	ldr	r3, [r0]
    1928:	ldr	r0, [r3, #244]	; 0xf4
    192c:	ldr	r1, [pc, #2000]	; 2104 <sp3_init+0x1fac>
    1930:	bl	0 <coda_type_set_description>
    1934:	mov	r0, #9
    1938:	mov	r1, #2
    193c:	bl	0 <coda_type_number_new>
    1940:	ldr	r2, [pc, #1864]	; 2090 <sp3_init+0x1f38>
    1944:	ldr	r1, [r2]
    1948:	str	r0, [r1, #248]	; 0xf8
    194c:	ldr	r1, [pc, #1852]	; 2090 <sp3_init+0x1f38>
    1950:	ldr	r2, [r1]
    1954:	ldr	r0, [r2, #248]	; 0xf8
    1958:	mov	r1, r4
    195c:	bl	0 <coda_type_number_set_endianness>
    1960:	ldr	r1, [pc, #1832]	; 2090 <sp3_init+0x1f38>
    1964:	ldr	ip, [r1]
    1968:	ldr	r0, [ip, #248]	; 0xf8
    196c:	mov	r1, #4
    1970:	bl	0 <coda_type_set_read_type>
    1974:	ldr	r0, [pc, #1812]	; 2090 <sp3_init+0x1f38>
    1978:	ldr	r0, [r0]
    197c:	ldr	r0, [r0, #248]	; 0xf8
    1980:	mov	r3, #0
    1984:	mov	r2, #32
    1988:	bl	0 <coda_type_set_bit_size>
    198c:	ldr	r3, [pc, #1788]	; 2090 <sp3_init+0x1f38>
    1990:	ldr	r2, [r3]
    1994:	ldr	r0, [r2, #248]	; 0xf8
    1998:	ldr	r1, [pc, #1896]	; 2108 <sp3_init+0x1fb0>
    199c:	bl	0 <coda_type_set_description>
    19a0:	mov	r0, #9
    19a4:	mov	r1, #2
    19a8:	bl	0 <coda_type_number_new>
    19ac:	ldr	r1, [pc, #1756]	; 2090 <sp3_init+0x1f38>
    19b0:	ldr	r2, [r1]
    19b4:	str	r0, [r2, #252]	; 0xfc
    19b8:	ldr	r0, [pc, #1744]	; 2090 <sp3_init+0x1f38>
    19bc:	ldr	r1, [r0]
    19c0:	ldr	r0, [r1, #252]	; 0xfc
    19c4:	mov	r1, r4
    19c8:	bl	0 <coda_type_number_set_endianness>
    19cc:	ldr	r2, [pc, #1724]	; 2090 <sp3_init+0x1f38>
    19d0:	ldr	r0, [r2]
    19d4:	ldr	r0, [r0, #252]	; 0xfc
    19d8:	mov	r1, #4
    19dc:	bl	0 <coda_type_set_read_type>
    19e0:	ldr	r0, [pc, #1704]	; 2090 <sp3_init+0x1f38>
    19e4:	ldr	r3, [r0]
    19e8:	ldr	r0, [r3, #252]	; 0xfc
    19ec:	mov	r3, #0
    19f0:	mov	r2, #32
    19f4:	bl	0 <coda_type_set_bit_size>
    19f8:	ldr	r0, [pc, #1680]	; 2090 <sp3_init+0x1f38>
    19fc:	ldr	r3, [r0]
    1a00:	ldr	r0, [r3, #252]	; 0xfc
    1a04:	ldr	r1, [pc, #1696]	; 20ac <sp3_init+0x1f54>
    1a08:	bl	0 <coda_type_set_description>
    1a0c:	mov	r0, #9
    1a10:	mov	r1, #2
    1a14:	bl	0 <coda_type_number_new>
    1a18:	ldr	r3, [pc, #1648]	; 2090 <sp3_init+0x1f38>
    1a1c:	ldr	ip, [r3]
    1a20:	str	r0, [ip, #256]	; 0x100
    1a24:	ldr	r1, [pc, #1636]	; 2090 <sp3_init+0x1f38>
    1a28:	ldr	ip, [r1]
    1a2c:	ldr	r0, [ip, #256]	; 0x100
    1a30:	mov	r1, r4
    1a34:	bl	0 <coda_type_number_set_endianness>
    1a38:	ldr	r0, [pc, #1616]	; 2090 <sp3_init+0x1f38>
    1a3c:	ldr	r0, [r0]
    1a40:	ldr	r0, [r0, #256]	; 0x100
    1a44:	mov	r1, #4
    1a48:	bl	0 <coda_type_set_read_type>
    1a4c:	ldr	r0, [pc, #1596]	; 2090 <sp3_init+0x1f38>
    1a50:	ldr	r0, [r0]
    1a54:	ldr	r0, [r0, #256]	; 0x100
    1a58:	mov	r3, #0
    1a5c:	mov	r2, #32
    1a60:	bl	0 <coda_type_set_bit_size>
    1a64:	ldr	r0, [pc, #1572]	; 2090 <sp3_init+0x1f38>
    1a68:	ldr	r0, [r0]
    1a6c:	ldr	r0, [r0, #256]	; 0x100
    1a70:	ldr	r1, [pc, #1696]	; 2118 <sp3_init+0x1fc0>
    1a74:	bl	0 <coda_type_set_description>
    1a78:	mov	r0, #9
    1a7c:	bl	0 <coda_type_array_new>
    1a80:	ldr	ip, [pc, #1544]	; 2090 <sp3_init+0x1f38>
    1a84:	ldr	ip, [ip]
    1a88:	str	r0, [ip, #60]	; 0x3c
    1a8c:	ldr	r0, [pc, #1532]	; 2090 <sp3_init+0x1f38>
    1a90:	ldr	r0, [r0]
    1a94:	ldr	r0, [r0, #60]	; 0x3c
    1a98:	mov	r1, #0
    1a9c:	bl	0 <coda_type_array_add_variable_dimension>
    1aa0:	ldr	r0, [pc, #1512]	; 2090 <sp3_init+0x1f38>
    1aa4:	ldr	r0, [r0]
    1aa8:	ldr	r0, [r0, #60]	; 0x3c
    1aac:	ldr	r3, [pc, #1500]	; 2090 <sp3_init+0x1f38>
    1ab0:	ldr	r3, [r3]
    1ab4:	ldr	r1, [r3, #56]	; 0x38
    1ab8:	bl	0 <coda_type_array_set_base_type>
    1abc:	mov	r0, #9
    1ac0:	bl	0 <coda_type_array_new>
    1ac4:	ldr	r1, [pc, #1476]	; 2090 <sp3_init+0x1f38>
    1ac8:	ldr	r3, [r1]
    1acc:	str	r0, [r3, #68]	; 0x44
    1ad0:	ldr	r0, [pc, #1464]	; 2090 <sp3_init+0x1f38>
    1ad4:	ldr	r0, [r0]
    1ad8:	ldr	r0, [r0, #68]	; 0x44
    1adc:	mov	r1, #0
    1ae0:	bl	0 <coda_type_array_add_variable_dimension>
    1ae4:	ldr	r0, [pc, #1444]	; 2090 <sp3_init+0x1f38>
    1ae8:	ldr	r0, [r0]
    1aec:	ldr	r0, [r0, #68]	; 0x44
    1af0:	ldr	r2, [pc, #1432]	; 2090 <sp3_init+0x1f38>
    1af4:	ldr	r1, [r2]
    1af8:	ldr	r1, [r1, #64]	; 0x40
    1afc:	bl	0 <coda_type_array_set_base_type>
    1b00:	mov	r0, #9
    1b04:	bl	0 <coda_type_record_new>
    1b08:	ldr	r1, [pc, #1408]	; 2090 <sp3_init+0x1f38>
    1b0c:	ldr	r1, [r1]
    1b10:	str	r0, [r1, #284]	; 0x11c
    1b14:	ldr	r0, [pc, #1460]	; 20d0 <sp3_init+0x1f78>
    1b18:	bl	0 <coda_type_record_field_new>
    1b1c:	mov	r4, r0
    1b20:	ldr	ip, [pc, #1384]	; 2090 <sp3_init+0x1f38>
    1b24:	ldr	r0, [ip]
    1b28:	ldr	r1, [r0]
    1b2c:	mov	r0, r4
    1b30:	bl	0 <coda_type_record_field_set_type>
    1b34:	ldr	r2, [pc, #1364]	; 2090 <sp3_init+0x1f38>
    1b38:	ldr	r3, [r2]
    1b3c:	ldr	r0, [r3, #284]	; 0x11c
    1b40:	mov	r1, r4
    1b44:	bl	0 <coda_type_record_add_field>
    1b48:	ldr	r0, [pc, #1488]	; 2120 <sp3_init+0x1fc8>
    1b4c:	bl	0 <coda_type_record_field_new>
    1b50:	mov	r4, r0
    1b54:	ldr	r2, [pc, #1332]	; 2090 <sp3_init+0x1f38>
    1b58:	ldr	r0, [r2]
    1b5c:	ldr	r1, [r0, #8]
    1b60:	mov	r0, r4
    1b64:	bl	0 <coda_type_record_field_set_type>
    1b68:	ldr	r3, [pc, #1312]	; 2090 <sp3_init+0x1f38>
    1b6c:	ldr	r0, [r3]
    1b70:	ldr	r0, [r0, #284]	; 0x11c
    1b74:	mov	r1, r4
    1b78:	bl	0 <coda_type_record_add_field>
    1b7c:	ldr	r0, [pc, #1344]	; 20c4 <sp3_init+0x1f6c>
    1b80:	bl	0 <coda_type_record_field_new>
    1b84:	mov	r4, r0
    1b88:	ldr	r2, [pc, #1280]	; 2090 <sp3_init+0x1f38>
    1b8c:	ldr	r0, [r2]
    1b90:	ldr	r1, [r0, #12]
    1b94:	mov	r0, r4
    1b98:	bl	0 <coda_type_record_field_set_type>
    1b9c:	ldr	r2, [pc, #1260]	; 2090 <sp3_init+0x1f38>
    1ba0:	ldr	r0, [r2]
    1ba4:	ldr	r0, [r0, #284]	; 0x11c
    1ba8:	mov	r1, r4
    1bac:	bl	0 <coda_type_record_add_field>
    1bb0:	ldr	r0, [pc, #1404]	; 2134 <sp3_init+0x1fdc>
    1bb4:	bl	0 <coda_type_record_field_new>
    1bb8:	mov	r4, r0
    1bbc:	ldr	r2, [pc, #1228]	; 2090 <sp3_init+0x1f38>
    1bc0:	ldr	r0, [r2]
    1bc4:	ldr	r1, [r0, #16]
    1bc8:	mov	r0, r4
    1bcc:	bl	0 <coda_type_record_field_set_type>
    1bd0:	ldr	r1, [pc, #1208]	; 2090 <sp3_init+0x1f38>
    1bd4:	ldr	r2, [r1]
    1bd8:	ldr	r0, [r2, #284]	; 0x11c
    1bdc:	mov	r1, r4
    1be0:	bl	0 <coda_type_record_add_field>
    1be4:	ldr	r0, [pc, #1356]	; 2138 <sp3_init+0x1fe0>
    1be8:	bl	0 <coda_type_record_field_new>
    1bec:	mov	r4, r0
    1bf0:	ldr	r2, [pc, #1176]	; 2090 <sp3_init+0x1f38>
    1bf4:	ldr	r1, [r2]
    1bf8:	ldr	r1, [r1, #20]
    1bfc:	mov	r0, r4
    1c00:	bl	0 <coda_type_record_field_set_type>
    1c04:	ldr	ip, [pc, #1156]	; 2090 <sp3_init+0x1f38>
    1c08:	ldr	r2, [ip]
    1c0c:	ldr	r0, [r2, #284]	; 0x11c
    1c10:	mov	r1, r4
    1c14:	bl	0 <coda_type_record_add_field>
    1c18:	ldr	r0, [pc, #1232]	; 20f0 <sp3_init+0x1f98>
    1c1c:	bl	0 <coda_type_record_field_new>
    1c20:	mov	r4, r0
    1c24:	ldr	r1, [pc, #1124]	; 2090 <sp3_init+0x1f38>
    1c28:	ldr	r0, [r1]
    1c2c:	ldr	r1, [r0, #24]
    1c30:	mov	r0, r4
    1c34:	bl	0 <coda_type_record_field_set_type>
    1c38:	ldr	r0, [pc, #1104]	; 2090 <sp3_init+0x1f38>
    1c3c:	ldr	r2, [r0]
    1c40:	ldr	r0, [r2, #284]	; 0x11c
    1c44:	mov	r1, r4
    1c48:	bl	0 <coda_type_record_add_field>
    1c4c:	ldr	r0, [pc, #1156]	; 20d8 <sp3_init+0x1f80>
    1c50:	bl	0 <coda_type_record_field_new>
    1c54:	mov	r4, r0
    1c58:	ldr	ip, [pc, #1072]	; 2090 <sp3_init+0x1f38>
    1c5c:	ldr	r1, [ip]
    1c60:	ldr	r1, [r1, #28]
    1c64:	mov	r0, r4
    1c68:	bl	0 <coda_type_record_field_set_type>
    1c6c:	ldr	ip, [pc, #1052]	; 2090 <sp3_init+0x1f38>
    1c70:	ldr	r1, [ip]
    1c74:	ldr	r0, [r1, #284]	; 0x11c
    1c78:	mov	r1, r4
    1c7c:	bl	0 <coda_type_record_add_field>
    1c80:	ldr	r0, [pc, #1116]	; 20e4 <sp3_init+0x1f8c>
    1c84:	bl	0 <coda_type_record_field_new>
    1c88:	mov	r4, r0
    1c8c:	ldr	r3, [pc, #1020]	; 2090 <sp3_init+0x1f38>
    1c90:	ldr	r3, [r3]
    1c94:	ldr	r1, [r3, #32]
    1c98:	mov	r0, r4
    1c9c:	bl	0 <coda_type_record_field_set_type>
    1ca0:	ldr	ip, [pc, #1000]	; 2090 <sp3_init+0x1f38>
    1ca4:	ldr	ip, [ip]
    1ca8:	ldr	r0, [ip, #284]	; 0x11c
    1cac:	mov	r1, r4
    1cb0:	bl	0 <coda_type_record_add_field>
    1cb4:	ldr	r0, [pc, #1104]	; 210c <sp3_init+0x1fb4>
    1cb8:	bl	0 <coda_type_record_field_new>
    1cbc:	mov	r4, r0
    1cc0:	ldr	r1, [pc, #968]	; 2090 <sp3_init+0x1f38>
    1cc4:	ldr	r2, [r1]
    1cc8:	ldr	r1, [r2, #36]	; 0x24
    1ccc:	mov	r0, r4
    1cd0:	bl	0 <coda_type_record_field_set_type>
    1cd4:	ldr	ip, [pc, #948]	; 2090 <sp3_init+0x1f38>
    1cd8:	ldr	r3, [ip]
    1cdc:	ldr	r0, [r3, #284]	; 0x11c
    1ce0:	mov	r1, r4
    1ce4:	bl	0 <coda_type_record_add_field>
    1ce8:	ldr	r0, [pc, #1016]	; 20e8 <sp3_init+0x1f90>
    1cec:	bl	0 <coda_type_record_field_new>
    1cf0:	mov	r4, r0
    1cf4:	ldr	r3, [pc, #916]	; 2090 <sp3_init+0x1f38>
    1cf8:	ldr	r3, [r3]
    1cfc:	ldr	r1, [r3, #40]	; 0x28
    1d00:	mov	r0, r4
    1d04:	bl	0 <coda_type_record_field_set_type>
    1d08:	ldr	r3, [pc, #896]	; 2090 <sp3_init+0x1f38>
    1d0c:	ldr	r1, [r3]
    1d10:	ldr	r0, [r1, #284]	; 0x11c
    1d14:	mov	r1, r4
    1d18:	bl	0 <coda_type_record_add_field>
    1d1c:	ldr	r0, [pc, #908]	; 20b0 <sp3_init+0x1f58>
    1d20:	bl	0 <coda_type_record_field_new>
    1d24:	mov	r4, r0
    1d28:	ldr	r3, [pc, #864]	; 2090 <sp3_init+0x1f38>
    1d2c:	ldr	r3, [r3]
    1d30:	ldr	r1, [r3, #44]	; 0x2c
    1d34:	mov	r0, r4
    1d38:	bl	0 <coda_type_record_field_set_type>
    1d3c:	ldr	r0, [pc, #844]	; 2090 <sp3_init+0x1f38>
    1d40:	ldr	r1, [r0]
    1d44:	ldr	r0, [r1, #284]	; 0x11c
    1d48:	mov	r1, r4
    1d4c:	bl	0 <coda_type_record_add_field>
    1d50:	ldr	r0, [pc, #904]	; 20e0 <sp3_init+0x1f88>
    1d54:	bl	0 <coda_type_record_field_new>
    1d58:	mov	r4, r0
    1d5c:	ldr	r3, [pc, #812]	; 2090 <sp3_init+0x1f38>
    1d60:	ldr	r0, [r3]
    1d64:	ldr	r1, [r0, #48]	; 0x30
    1d68:	mov	r0, r4
    1d6c:	bl	0 <coda_type_record_field_set_type>
    1d70:	ldr	r3, [pc, #792]	; 2090 <sp3_init+0x1f38>
    1d74:	ldr	r1, [r3]
    1d78:	ldr	r0, [r1, #284]	; 0x11c
    1d7c:	mov	r1, r4
    1d80:	bl	0 <coda_type_record_add_field>
    1d84:	ldr	r0, [pc, #968]	; 2154 <sp3_init+0x1ffc>
    1d88:	bl	0 <coda_type_record_field_new>
    1d8c:	mov	r4, r0
    1d90:	ldr	r2, [pc, #760]	; 2090 <sp3_init+0x1f38>
    1d94:	ldr	ip, [r2]
    1d98:	ldr	r1, [ip, #52]	; 0x34
    1d9c:	mov	r0, r4
    1da0:	bl	0 <coda_type_record_field_set_type>
    1da4:	ldr	r2, [pc, #740]	; 2090 <sp3_init+0x1f38>
    1da8:	ldr	r3, [r2]
    1dac:	ldr	r0, [r3, #284]	; 0x11c
    1db0:	mov	r1, r4
    1db4:	bl	0 <coda_type_record_add_field>
    1db8:	ldr	r0, [pc, #868]	; 2124 <sp3_init+0x1fcc>
    1dbc:	bl	0 <coda_type_record_field_new>
    1dc0:	mov	r4, r0
    1dc4:	ldr	ip, [pc, #708]	; 2090 <sp3_init+0x1f38>
    1dc8:	ldr	r2, [ip]
    1dcc:	ldr	r1, [r2, #60]	; 0x3c
    1dd0:	mov	r0, r4
    1dd4:	bl	0 <coda_type_record_field_set_type>
    1dd8:	ldr	r0, [pc, #688]	; 2090 <sp3_init+0x1f38>
    1ddc:	ldr	r0, [r0]
    1de0:	ldr	r0, [r0, #284]	; 0x11c
    1de4:	mov	r1, r4
    1de8:	bl	0 <coda_type_record_add_field>
    1dec:	ldr	r0, [pc, #724]	; 20c8 <sp3_init+0x1f70>
    1df0:	bl	0 <coda_type_record_field_new>
    1df4:	mov	r4, r0
    1df8:	ldr	r3, [pc, #656]	; 2090 <sp3_init+0x1f38>
    1dfc:	ldr	r0, [r3]
    1e00:	ldr	r1, [r0, #68]	; 0x44
    1e04:	mov	r0, r4
    1e08:	bl	0 <coda_type_record_field_set_type>
    1e0c:	ldr	r3, [pc, #636]	; 2090 <sp3_init+0x1f38>
    1e10:	ldr	r2, [r3]
    1e14:	ldr	r0, [r2, #284]	; 0x11c
    1e18:	mov	r1, r4
    1e1c:	bl	0 <coda_type_record_add_field>
    1e20:	ldr	r0, [pc, #652]	; 20b4 <sp3_init+0x1f5c>
    1e24:	bl	0 <coda_type_record_field_new>
    1e28:	mov	r4, r0
    1e2c:	ldr	ip, [pc, #604]	; 2090 <sp3_init+0x1f38>
    1e30:	ldr	r0, [ip]
    1e34:	ldr	r1, [r0, #72]	; 0x48
    1e38:	mov	r0, r4
    1e3c:	bl	0 <coda_type_record_field_set_type>
    1e40:	ldr	ip, [pc, #584]	; 2090 <sp3_init+0x1f38>
    1e44:	ldr	r2, [ip]
    1e48:	ldr	r0, [r2, #284]	; 0x11c
    1e4c:	mov	r1, r4
    1e50:	bl	0 <coda_type_record_add_field>
    1e54:	ldr	r0, [pc, #696]	; 2114 <sp3_init+0x1fbc>
    1e58:	bl	0 <coda_type_record_field_new>
    1e5c:	mov	r4, r0
    1e60:	ldr	r2, [pc, #552]	; 2090 <sp3_init+0x1f38>
    1e64:	ldr	ip, [r2]
    1e68:	ldr	r1, [ip, #76]	; 0x4c
    1e6c:	mov	r0, r4
    1e70:	bl	0 <coda_type_record_field_set_type>
    1e74:	ldr	r0, [pc, #532]	; 2090 <sp3_init+0x1f38>
    1e78:	ldr	ip, [r0]
    1e7c:	ldr	r0, [ip, #284]	; 0x11c
    1e80:	mov	r1, r4
    1e84:	bl	0 <coda_type_record_add_field>
    1e88:	ldr	r0, [pc, #556]	; 20bc <sp3_init+0x1f64>
    1e8c:	bl	0 <coda_type_record_field_new>
    1e90:	mov	r4, r0
    1e94:	ldr	r3, [pc, #500]	; 2090 <sp3_init+0x1f38>
    1e98:	ldr	r3, [r3]
    1e9c:	ldr	r1, [r3, #80]	; 0x50
    1ea0:	mov	r0, r4
    1ea4:	bl	0 <coda_type_record_field_set_type>
    1ea8:	ldr	r0, [pc, #480]	; 2090 <sp3_init+0x1f38>
    1eac:	ldr	r3, [r0]
    1eb0:	ldr	r0, [r3, #284]	; 0x11c
    1eb4:	mov	r1, r4
    1eb8:	bl	0 <coda_type_record_add_field>
    1ebc:	ldr	r0, [pc, #616]	; 212c <sp3_init+0x1fd4>
    1ec0:	bl	0 <coda_type_record_field_new>
    1ec4:	mov	r4, r0
    1ec8:	ldr	r3, [pc, #448]	; 2090 <sp3_init+0x1f38>
    1ecc:	ldr	r3, [r3]
    1ed0:	ldr	r1, [r3, #84]	; 0x54
    1ed4:	mov	r0, r4
    1ed8:	bl	0 <coda_type_record_field_set_type>
    1edc:	ldr	r3, [pc, #428]	; 2090 <sp3_init+0x1f38>
    1ee0:	ldr	r0, [r3]
    1ee4:	ldr	r0, [r0, #284]	; 0x11c
    1ee8:	mov	r1, r4
    1eec:	bl	0 <coda_type_record_add_field>
    1ef0:	mov	r0, #9
    1ef4:	bl	0 <coda_type_record_new>
    1ef8:	ldr	ip, [pc, #400]	; 2090 <sp3_init+0x1f38>
    1efc:	ldr	r1, [ip]
    1f00:	str	r0, [r1, #140]	; 0x8c
    1f04:	ldr	r0, [pc, #436]	; 20c0 <sp3_init+0x1f68>
    1f08:	bl	0 <coda_type_record_field_new>
    1f0c:	mov	r4, r0
    1f10:	ldr	ip, [pc, #376]	; 2090 <sp3_init+0x1f38>
    1f14:	ldr	r3, [ip]
    1f18:	ldr	r1, [r3, #144]	; 0x90
    1f1c:	mov	r0, r4
    1f20:	bl	0 <coda_type_record_field_set_type>
    1f24:	ldr	r0, [pc, #356]	; 2090 <sp3_init+0x1f38>
    1f28:	ldr	r2, [r0]
    1f2c:	ldr	r0, [r2, #140]	; 0x8c
    1f30:	mov	r1, r4
    1f34:	bl	0 <coda_type_record_add_field>
    1f38:	ldr	r0, [pc, #512]	; 2140 <sp3_init+0x1fe8>
    1f3c:	bl	0 <coda_type_record_field_new>
    1f40:	mov	r4, r0
    1f44:	ldr	r2, [pc, #324]	; 2090 <sp3_init+0x1f38>
    1f48:	ldr	r3, [r2]
    1f4c:	ldr	r1, [r3, #148]	; 0x94
    1f50:	mov	r0, r4
    1f54:	bl	0 <coda_type_record_field_set_type>
    1f58:	ldr	ip, [pc, #304]	; 2090 <sp3_init+0x1f38>
    1f5c:	ldr	r3, [ip]
    1f60:	ldr	r0, [r3, #140]	; 0x8c
    1f64:	mov	r1, r4
    1f68:	bl	0 <coda_type_record_add_field>
    1f6c:	ldr	r0, [pc, #424]	; 211c <sp3_init+0x1fc4>
    1f70:	bl	0 <coda_type_record_field_new>
    1f74:	mov	r4, r0
    1f78:	ldr	ip, [pc, #272]	; 2090 <sp3_init+0x1f38>
    1f7c:	ldr	r2, [ip]
    1f80:	ldr	r1, [r2, #152]	; 0x98
    1f84:	mov	r0, r4
    1f88:	bl	0 <coda_type_record_field_set_type>
    1f8c:	ldr	r0, [pc, #252]	; 2090 <sp3_init+0x1f38>
    1f90:	ldr	r3, [r0]
    1f94:	ldr	r0, [r3, #140]	; 0x8c
    1f98:	mov	r1, r4
    1f9c:	bl	0 <coda_type_record_add_field>
    1fa0:	ldr	r0, [pc, #332]	; 20f4 <sp3_init+0x1f9c>
    1fa4:	bl	0 <coda_type_record_field_new>
    1fa8:	mov	r4, r0
    1fac:	ldr	r2, [pc, #220]	; 2090 <sp3_init+0x1f38>
    1fb0:	ldr	r2, [r2]
    1fb4:	ldr	r1, [r2, #156]	; 0x9c
    1fb8:	mov	r0, r4
    1fbc:	bl	0 <coda_type_record_field_set_type>
    1fc0:	ldr	ip, [pc, #200]	; 2090 <sp3_init+0x1f38>
    1fc4:	ldr	r2, [ip]
    1fc8:	ldr	r0, [r2, #140]	; 0x8c
    1fcc:	mov	r1, r4
    1fd0:	bl	0 <coda_type_record_add_field>
    1fd4:	ldr	r0, [pc, #284]	; 20f8 <sp3_init+0x1fa0>
    1fd8:	bl	0 <coda_type_record_field_new>
    1fdc:	mov	r4, r0
    1fe0:	ldr	r2, [pc, #168]	; 2090 <sp3_init+0x1f38>
    1fe4:	ldr	ip, [r2]
    1fe8:	ldr	r1, [ip, #160]	; 0xa0
    1fec:	mov	r0, r4
    1ff0:	bl	0 <coda_type_record_field_set_type>
    1ff4:	ldr	r0, [pc, #148]	; 2090 <sp3_init+0x1f38>
    1ff8:	ldr	r0, [r0]
    1ffc:	ldr	r0, [r0, #140]	; 0x8c
    2000:	mov	r1, r4
    2004:	bl	0 <coda_type_record_add_field>
    2008:	ldr	r0, [pc, #144]	; 20a0 <sp3_init+0x1f48>
    200c:	bl	0 <coda_type_record_field_new>
    2010:	mov	r4, r0
    2014:	ldr	r3, [pc, #116]	; 2090 <sp3_init+0x1f38>
    2018:	ldr	r3, [r3]
    201c:	ldr	r1, [r3, #164]	; 0xa4
    2020:	mov	r0, r4
    2024:	bl	0 <coda_type_record_field_set_type>
    2028:	ldr	ip, [pc, #96]	; 2090 <sp3_init+0x1f38>
    202c:	ldr	ip, [ip]
    2030:	ldr	r0, [ip, #140]	; 0x8c
    2034:	mov	r1, r4
    2038:	bl	0 <coda_type_record_add_field>
    203c:	ldr	r0, [pc, #184]	; 20fc <sp3_init+0x1fa4>
    2040:	bl	0 <coda_type_record_field_new>
    2044:	mov	r4, r0
    2048:	ldr	r2, [pc, #64]	; 2090 <sp3_init+0x1f38>
    204c:	ldr	r1, [r2]
    2050:	ldr	r1, [r1, #168]	; 0xa8
    2054:	mov	r0, r4
    2058:	bl	0 <coda_type_record_field_set_type>
    205c:	ldr	r1, [pc, #44]	; 2090 <sp3_init+0x1f38>
    2060:	ldr	r3, [r1]
    2064:	ldr	r0, [r3, #140]	; 0x8c
    2068:	mov	r1, r4
    206c:	bl	0 <coda_type_record_add_field>
    2070:	ldr	r0, [pc, #176]	; 2128 <sp3_init+0x1fd0>
    2074:	bl	0 <coda_type_record_field_new>
    2078:	mov	r4, r0
    207c:	ldr	r2, [pc, #12]	; 2090 <sp3_init+0x1f38>
    2080:	ldr	r1, [r2]
    2084:	ldr	r1, [r1, #172]	; 0xac
    2088:	mov	r0, r4
    208c:	b	2158 <sp3_init+0x2000>
    2090:	.word	0x00000000
    2094:	.word	0x00000986
    2098:	.word	0x00000276
    209c:	.word	0x00000502
    20a0:	.word	0x0000097e
    20a4:	.word	0x000007d8
    20a8:	.word	0x0000096d
    20ac:	.word	0x00000604
    20b0:	.word	0x00000184
    20b4:	.word	0x000003ac
    20b8:	.word	0x00000613
    20bc:	.word	0x000003c0
    20c0:	.word	0x00000a77
    20c4:	.word	0x000002b8
    20c8:	.word	0x00000110
    20cc:	.word	0x00000025
    20d0:	.word	0x000008a7
    20d4:	.word	0x00000866
    20d8:	.word	0x00000959
    20dc:	.word	0x000009f0
    20e0:	.word	0x0000001c
    20e4:	.word	0x0000035f
    20e8:	.word	0x000001f9
    20ec:	.word	0x0000099c
    20f0:	.word	0x0000089c
    20f4:	.word	0x000008af
    20f8:	.word	0x00000436
    20fc:	.word	0x0000062f
    2100:	.word	0x00000a7e
    2104:	.word	0x00000101
    2108:	.word	0x00000328
    210c:	.word	0x0000031c
    2110:	.word	0x00000049
    2114:	.word	0x00000000
    2118:	.word	0x00000799
    211c:	.word	0x00000977
    2120:	.word	0x00000a98
    2124:	.word	0x0000064e
    2128:	.word	0x000003cd
    212c:	.word	0x0000018e
    2130:	.word	0x0000015e
    2134:	.word	0x00000625
    2138:	.word	0x00000a89
    213c:	.word	0x0000029b
    2140:	.word	0x00000037
    2144:	.word	0x00000552
    2148:	.word	0x0000016d
    214c:	.word	0x00000662
    2150:	.word	0x0000043e
    2154:	.word	0x0000057b
    2158:	bl	0 <coda_type_record_field_set_type>
    215c:	ldr	r0, [pc, #2492]	; 2b20 <sp3_init+0x29c8>
    2160:	ldr	ip, [r0]
    2164:	ldr	r0, [ip, #140]	; 0x8c
    2168:	mov	r1, r4
    216c:	bl	0 <coda_type_record_add_field>
    2170:	ldr	r0, [pc, #2548]	; 2b6c <sp3_init+0x2a14>
    2174:	bl	0 <coda_type_record_field_new>
    2178:	mov	r4, r0
    217c:	ldr	r0, [pc, #2460]	; 2b20 <sp3_init+0x29c8>
    2180:	ldr	r3, [r0]
    2184:	ldr	r1, [r3, #176]	; 0xb0
    2188:	mov	r0, r4
    218c:	bl	0 <coda_type_record_field_set_type>
    2190:	ldr	ip, [pc, #2440]	; 2b20 <sp3_init+0x29c8>
    2194:	ldr	r1, [ip]
    2198:	ldr	r0, [r1, #140]	; 0x8c
    219c:	mov	r1, r4
    21a0:	bl	0 <coda_type_record_add_field>
    21a4:	ldr	r0, [pc, #2504]	; 2b74 <sp3_init+0x2a1c>
    21a8:	bl	0 <coda_type_record_field_new>
    21ac:	mov	r4, r0
    21b0:	ldr	r2, [pc, #2408]	; 2b20 <sp3_init+0x29c8>
    21b4:	ldr	r1, [r2]
    21b8:	ldr	r1, [r1, #180]	; 0xb4
    21bc:	mov	r0, r4
    21c0:	bl	0 <coda_type_record_field_set_type>
    21c4:	ldr	ip, [pc, #2388]	; 2b20 <sp3_init+0x29c8>
    21c8:	ldr	r0, [ip]
    21cc:	ldr	r0, [r0, #140]	; 0x8c
    21d0:	mov	r1, r4
    21d4:	bl	0 <coda_type_record_add_field>
    21d8:	mov	r0, #9
    21dc:	bl	0 <coda_type_record_new>
    21e0:	ldr	r1, [pc, #2360]	; 2b20 <sp3_init+0x29c8>
    21e4:	ldr	r3, [r1]
    21e8:	str	r0, [r3, #268]	; 0x10c
    21ec:	ldr	r0, [pc, #2436]	; 2b78 <sp3_init+0x2a20>
    21f0:	bl	0 <coda_type_record_field_new>
    21f4:	mov	r4, r0
    21f8:	ldr	r1, [pc, #2336]	; 2b20 <sp3_init+0x29c8>
    21fc:	ldr	r0, [r1]
    2200:	ldr	r1, [r0, #88]	; 0x58
    2204:	mov	r0, r4
    2208:	bl	0 <coda_type_record_field_set_type>
    220c:	ldr	r1, [pc, #2316]	; 2b20 <sp3_init+0x29c8>
    2210:	ldr	r2, [r1]
    2214:	ldr	r0, [r2, #268]	; 0x10c
    2218:	mov	r1, r4
    221c:	bl	0 <coda_type_record_add_field>
    2220:	ldr	r0, [pc, #2312]	; 2b30 <sp3_init+0x29d8>
    2224:	bl	0 <coda_type_record_field_new>
    2228:	mov	r4, r0
    222c:	ldr	r0, [pc, #2284]	; 2b20 <sp3_init+0x29c8>
    2230:	ldr	ip, [r0]
    2234:	ldr	r1, [ip, #92]	; 0x5c
    2238:	mov	r0, r4
    223c:	bl	0 <coda_type_record_field_set_type>
    2240:	ldr	r3, [pc, #2264]	; 2b20 <sp3_init+0x29c8>
    2244:	ldr	r3, [r3]
    2248:	ldr	r0, [r3, #268]	; 0x10c
    224c:	mov	r1, r4
    2250:	bl	0 <coda_type_record_add_field>
    2254:	ldr	r0, [pc, #2252]	; 2b28 <sp3_init+0x29d0>
    2258:	bl	0 <coda_type_record_field_new>
    225c:	mov	r4, r0
    2260:	ldr	r0, [pc, #2232]	; 2b20 <sp3_init+0x29c8>
    2264:	ldr	r3, [r0]
    2268:	ldr	r1, [r3, #96]	; 0x60
    226c:	mov	r0, r4
    2270:	bl	0 <coda_type_record_field_set_type>
    2274:	ldr	r2, [pc, #2212]	; 2b20 <sp3_init+0x29c8>
    2278:	ldr	ip, [r2]
    227c:	ldr	r0, [ip, #268]	; 0x10c
    2280:	mov	r1, r4
    2284:	bl	0 <coda_type_record_add_field>
    2288:	ldr	r0, [pc, #2272]	; 2b70 <sp3_init+0x2a18>
    228c:	bl	0 <coda_type_record_field_new>
    2290:	mov	r4, r0
    2294:	ldr	r1, [pc, #2180]	; 2b20 <sp3_init+0x29c8>
    2298:	ldr	r3, [r1]
    229c:	ldr	r1, [r3, #100]	; 0x64
    22a0:	mov	r0, r4
    22a4:	bl	0 <coda_type_record_field_set_type>
    22a8:	ldr	ip, [pc, #2160]	; 2b20 <sp3_init+0x29c8>
    22ac:	ldr	r3, [ip]
    22b0:	ldr	r0, [r3, #268]	; 0x10c
    22b4:	mov	r1, r4
    22b8:	bl	0 <coda_type_record_add_field>
    22bc:	ldr	r0, [pc, #2204]	; 2b60 <sp3_init+0x2a08>
    22c0:	bl	0 <coda_type_record_field_new>
    22c4:	mov	r4, r0
    22c8:	ldr	r2, [pc, #2128]	; 2b20 <sp3_init+0x29c8>
    22cc:	ldr	ip, [r2]
    22d0:	ldr	r1, [ip, #104]	; 0x68
    22d4:	mov	r0, r4
    22d8:	bl	0 <coda_type_record_field_set_type>
    22dc:	ldr	r3, [pc, #2108]	; 2b20 <sp3_init+0x29c8>
    22e0:	ldr	r1, [r3]
    22e4:	ldr	r0, [r1, #268]	; 0x10c
    22e8:	mov	r1, r4
    22ec:	bl	0 <coda_type_record_add_field>
    22f0:	ldr	r0, [pc, #2112]	; 2b38 <sp3_init+0x29e0>
    22f4:	bl	0 <coda_type_record_field_new>
    22f8:	mov	r4, r0
    22fc:	ldr	r3, [pc, #2076]	; 2b20 <sp3_init+0x29c8>
    2300:	ldr	r2, [r3]
    2304:	ldr	r1, [r2, #108]	; 0x6c
    2308:	mov	r0, r4
    230c:	bl	0 <coda_type_record_field_set_type>
    2310:	ldr	r1, [pc, #2056]	; 2b20 <sp3_init+0x29c8>
    2314:	ldr	r0, [r1]
    2318:	ldr	r0, [r0, #268]	; 0x10c
    231c:	mov	r1, r4
    2320:	bl	0 <coda_type_record_add_field>
    2324:	ldr	r0, [pc, #2156]	; 2b98 <sp3_init+0x2a40>
    2328:	bl	0 <coda_type_record_field_new>
    232c:	mov	r4, r0
    2330:	ldr	r0, [pc, #2024]	; 2b20 <sp3_init+0x29c8>
    2334:	ldr	r1, [r0]
    2338:	ldr	r1, [r1, #112]	; 0x70
    233c:	mov	r0, r4
    2340:	bl	0 <coda_type_record_field_set_type>
    2344:	ldr	ip, [pc, #2004]	; 2b20 <sp3_init+0x29c8>
    2348:	ldr	r1, [ip]
    234c:	ldr	r0, [r1, #268]	; 0x10c
    2350:	mov	r1, r4
    2354:	bl	0 <coda_type_record_add_field>
    2358:	ldr	r0, [pc, #2076]	; 2b7c <sp3_init+0x2a24>
    235c:	bl	0 <coda_type_record_field_new>
    2360:	mov	r4, r0
    2364:	ldr	r1, [pc, #1972]	; 2b20 <sp3_init+0x29c8>
    2368:	ldr	r1, [r1]
    236c:	ldr	r1, [r1, #116]	; 0x74
    2370:	mov	r0, r4
    2374:	bl	0 <coda_type_record_field_set_type>
    2378:	ldr	r3, [pc, #1952]	; 2b20 <sp3_init+0x29c8>
    237c:	ldr	r3, [r3]
    2380:	ldr	r0, [r3, #268]	; 0x10c
    2384:	mov	r1, r4
    2388:	bl	0 <coda_type_record_add_field>
    238c:	ldr	r0, [pc, #1976]	; 2b4c <sp3_init+0x29f4>
    2390:	bl	0 <coda_type_record_field_new>
    2394:	mov	r4, r0
    2398:	ldr	r1, [pc, #1920]	; 2b20 <sp3_init+0x29c8>
    239c:	ldr	r1, [r1]
    23a0:	ldr	r1, [r1, #120]	; 0x78
    23a4:	mov	r0, r4
    23a8:	bl	0 <coda_type_record_field_set_type>
    23ac:	ldr	r0, [pc, #1900]	; 2b20 <sp3_init+0x29c8>
    23b0:	ldr	r3, [r0]
    23b4:	ldr	r0, [r3, #268]	; 0x10c
    23b8:	mov	r1, r4
    23bc:	bl	0 <coda_type_record_add_field>
    23c0:	ldr	r0, [pc, #1952]	; 2b68 <sp3_init+0x2a10>
    23c4:	bl	0 <coda_type_record_field_new>
    23c8:	mov	r4, r0
    23cc:	ldr	r2, [pc, #1868]	; 2b20 <sp3_init+0x29c8>
    23d0:	ldr	r0, [r2]
    23d4:	ldr	r1, [r0, #124]	; 0x7c
    23d8:	mov	r0, r4
    23dc:	bl	0 <coda_type_record_field_set_type>
    23e0:	ldr	ip, [pc, #1848]	; 2b20 <sp3_init+0x29c8>
    23e4:	ldr	r1, [ip]
    23e8:	ldr	r0, [r1, #268]	; 0x10c
    23ec:	mov	r1, r4
    23f0:	bl	0 <coda_type_record_add_field>
    23f4:	ldr	r0, [pc, #1868]	; 2b48 <sp3_init+0x29f0>
    23f8:	bl	0 <coda_type_record_field_new>
    23fc:	mov	r4, r0
    2400:	ldr	ip, [pc, #1816]	; 2b20 <sp3_init+0x29c8>
    2404:	ldr	r2, [ip]
    2408:	ldr	r1, [r2, #128]	; 0x80
    240c:	mov	r0, r4
    2410:	bl	0 <coda_type_record_field_set_type>
    2414:	ldr	r0, [pc, #1796]	; 2b20 <sp3_init+0x29c8>
    2418:	ldr	r3, [r0]
    241c:	ldr	r0, [r3, #268]	; 0x10c
    2420:	mov	r1, r4
    2424:	bl	0 <coda_type_record_add_field>
    2428:	ldr	r0, [pc, #1908]	; 2ba4 <sp3_init+0x2a4c>
    242c:	bl	0 <coda_type_record_field_new>
    2430:	mov	r4, r0
    2434:	ldr	r2, [pc, #1764]	; 2b20 <sp3_init+0x29c8>
    2438:	ldr	r0, [r2]
    243c:	ldr	r1, [r0, #132]	; 0x84
    2440:	mov	r0, r4
    2444:	bl	0 <coda_type_record_field_set_type>
    2448:	ldr	r1, [pc, #1744]	; 2b20 <sp3_init+0x29c8>
    244c:	ldr	ip, [r1]
    2450:	ldr	r0, [ip, #268]	; 0x10c
    2454:	mov	r1, r4
    2458:	bl	0 <coda_type_record_add_field>
    245c:	ldr	r0, [pc, #1836]	; 2b90 <sp3_init+0x2a38>
    2460:	bl	0 <coda_type_record_field_new>
    2464:	mov	r4, r0
    2468:	ldr	ip, [pc, #1712]	; 2b20 <sp3_init+0x29c8>
    246c:	ldr	ip, [ip]
    2470:	ldr	r1, [ip, #136]	; 0x88
    2474:	mov	r0, r4
    2478:	bl	0 <coda_type_record_field_set_type>
    247c:	ldr	r1, [pc, #1692]	; 2b20 <sp3_init+0x29c8>
    2480:	ldr	r3, [r1]
    2484:	ldr	r0, [r3, #268]	; 0x10c
    2488:	mov	r1, r4
    248c:	bl	0 <coda_type_record_add_field>
    2490:	ldr	r0, [pc, #1708]	; 2b44 <sp3_init+0x29ec>
    2494:	bl	0 <coda_type_record_field_new>
    2498:	mov	r4, r0
    249c:	ldr	r2, [pc, #1660]	; 2b20 <sp3_init+0x29c8>
    24a0:	ldr	r2, [r2]
    24a4:	ldr	r1, [r2, #140]	; 0x8c
    24a8:	mov	r0, r4
    24ac:	bl	0 <coda_type_record_field_set_type>
    24b0:	mov	r0, r4
    24b4:	bl	0 <coda_type_record_field_set_optional>
    24b8:	ldr	r3, [pc, #1632]	; 2b20 <sp3_init+0x29c8>
    24bc:	ldr	r2, [r3]
    24c0:	ldr	r0, [r2, #268]	; 0x10c
    24c4:	mov	r1, r4
    24c8:	bl	0 <coda_type_record_add_field>
    24cc:	mov	r0, #9
    24d0:	bl	0 <coda_type_array_new>
    24d4:	ldr	r2, [pc, #1604]	; 2b20 <sp3_init+0x29c8>
    24d8:	ldr	r2, [r2]
    24dc:	str	r0, [r2, #272]	; 0x110
    24e0:	ldr	r0, [pc, #1592]	; 2b20 <sp3_init+0x29c8>
    24e4:	ldr	r0, [r0]
    24e8:	ldr	r0, [r0, #272]	; 0x110
    24ec:	mov	r1, #0
    24f0:	bl	0 <coda_type_array_add_variable_dimension>
    24f4:	ldr	r0, [pc, #1572]	; 2b20 <sp3_init+0x29c8>
    24f8:	ldr	r0, [r0]
    24fc:	ldr	r0, [r0, #272]	; 0x110
    2500:	ldr	ip, [pc, #1560]	; 2b20 <sp3_init+0x29c8>
    2504:	ldr	r1, [ip]
    2508:	ldr	r1, [r1, #268]	; 0x10c
    250c:	bl	0 <coda_type_array_set_base_type>
    2510:	mov	r0, #9
    2514:	bl	0 <coda_type_record_new>
    2518:	ldr	r3, [pc, #1536]	; 2b20 <sp3_init+0x29c8>
    251c:	ldr	ip, [r3]
    2520:	str	r0, [ip, #216]	; 0xd8
    2524:	ldr	r0, [pc, #1556]	; 2b40 <sp3_init+0x29e8>
    2528:	bl	0 <coda_type_record_field_new>
    252c:	mov	r4, r0
    2530:	ldr	r0, [pc, #1512]	; 2b20 <sp3_init+0x29c8>
    2534:	ldr	r3, [r0]
    2538:	ldr	r1, [r3, #220]	; 0xdc
    253c:	mov	r0, r4
    2540:	bl	0 <coda_type_record_field_set_type>
    2544:	ldr	r2, [pc, #1492]	; 2b20 <sp3_init+0x29c8>
    2548:	ldr	r3, [r2]
    254c:	ldr	r0, [r3, #216]	; 0xd8
    2550:	mov	r1, r4
    2554:	bl	0 <coda_type_record_add_field>
    2558:	ldr	r0, [pc, #1532]	; 2b5c <sp3_init+0x2a04>
    255c:	bl	0 <coda_type_record_field_new>
    2560:	mov	r4, r0
    2564:	ldr	r1, [pc, #1460]	; 2b20 <sp3_init+0x29c8>
    2568:	ldr	r3, [r1]
    256c:	ldr	r1, [r3, #224]	; 0xe0
    2570:	mov	r0, r4
    2574:	bl	0 <coda_type_record_field_set_type>
    2578:	ldr	r1, [pc, #1440]	; 2b20 <sp3_init+0x29c8>
    257c:	ldr	ip, [r1]
    2580:	ldr	r0, [ip, #216]	; 0xd8
    2584:	mov	r1, r4
    2588:	bl	0 <coda_type_record_add_field>
    258c:	ldr	r0, [pc, #1448]	; 2b3c <sp3_init+0x29e4>
    2590:	bl	0 <coda_type_record_field_new>
    2594:	mov	r4, r0
    2598:	ldr	r1, [pc, #1408]	; 2b20 <sp3_init+0x29c8>
    259c:	ldr	r1, [r1]
    25a0:	ldr	r1, [r1, #228]	; 0xe4
    25a4:	mov	r0, r4
    25a8:	bl	0 <coda_type_record_field_set_type>
    25ac:	ldr	r1, [pc, #1388]	; 2b20 <sp3_init+0x29c8>
    25b0:	ldr	r0, [r1]
    25b4:	ldr	r0, [r0, #216]	; 0xd8
    25b8:	mov	r1, r4
    25bc:	bl	0 <coda_type_record_add_field>
    25c0:	ldr	r0, [pc, #1476]	; 2b8c <sp3_init+0x2a34>
    25c4:	bl	0 <coda_type_record_field_new>
    25c8:	mov	r4, r0
    25cc:	ldr	r0, [pc, #1356]	; 2b20 <sp3_init+0x29c8>
    25d0:	ldr	r3, [r0]
    25d4:	ldr	r1, [r3, #232]	; 0xe8
    25d8:	mov	r0, r4
    25dc:	bl	0 <coda_type_record_field_set_type>
    25e0:	ldr	r3, [pc, #1336]	; 2b20 <sp3_init+0x29c8>
    25e4:	ldr	ip, [r3]
    25e8:	ldr	r0, [ip, #216]	; 0xd8
    25ec:	mov	r1, r4
    25f0:	bl	0 <coda_type_record_add_field>
    25f4:	ldr	r0, [pc, #1364]	; 2b50 <sp3_init+0x29f8>
    25f8:	bl	0 <coda_type_record_field_new>
    25fc:	mov	r4, r0
    2600:	ldr	ip, [pc, #1304]	; 2b20 <sp3_init+0x29c8>
    2604:	ldr	r0, [ip]
    2608:	ldr	r1, [r0, #236]	; 0xec
    260c:	mov	r0, r4
    2610:	bl	0 <coda_type_record_field_set_type>
    2614:	ldr	r2, [pc, #1284]	; 2b20 <sp3_init+0x29c8>
    2618:	ldr	r3, [r2]
    261c:	ldr	r0, [r3, #216]	; 0xd8
    2620:	mov	r1, r4
    2624:	bl	0 <coda_type_record_add_field>
    2628:	ldr	r0, [pc, #1268]	; 2b24 <sp3_init+0x29cc>
    262c:	bl	0 <coda_type_record_field_new>
    2630:	mov	r4, r0
    2634:	ldr	r0, [pc, #1252]	; 2b20 <sp3_init+0x29c8>
    2638:	ldr	r2, [r0]
    263c:	ldr	r1, [r2, #240]	; 0xf0
    2640:	mov	r0, r4
    2644:	bl	0 <coda_type_record_field_set_type>
    2648:	ldr	r1, [pc, #1232]	; 2b20 <sp3_init+0x29c8>
    264c:	ldr	r2, [r1]
    2650:	ldr	r0, [r2, #216]	; 0xd8
    2654:	mov	r1, r4
    2658:	bl	0 <coda_type_record_add_field>
    265c:	ldr	r0, [pc, #1264]	; 2b54 <sp3_init+0x29fc>
    2660:	bl	0 <coda_type_record_field_new>
    2664:	mov	r4, r0
    2668:	ldr	ip, [pc, #1200]	; 2b20 <sp3_init+0x29c8>
    266c:	ldr	r0, [ip]
    2670:	ldr	r1, [r0, #244]	; 0xf4
    2674:	mov	r0, r4
    2678:	bl	0 <coda_type_record_field_set_type>
    267c:	ldr	r0, [pc, #1180]	; 2b20 <sp3_init+0x29c8>
    2680:	ldr	r2, [r0]
    2684:	ldr	r0, [r2, #216]	; 0xd8
    2688:	mov	r1, r4
    268c:	bl	0 <coda_type_record_add_field>
    2690:	ldr	r0, [pc, #1260]	; 2b84 <sp3_init+0x2a2c>
    2694:	bl	0 <coda_type_record_field_new>
    2698:	mov	r4, r0
    269c:	ldr	ip, [pc, #1148]	; 2b20 <sp3_init+0x29c8>
    26a0:	ldr	r2, [ip]
    26a4:	ldr	r1, [r2, #248]	; 0xf8
    26a8:	mov	r0, r4
    26ac:	bl	0 <coda_type_record_field_set_type>
    26b0:	ldr	r3, [pc, #1128]	; 2b20 <sp3_init+0x29c8>
    26b4:	ldr	r0, [r3]
    26b8:	ldr	r0, [r0, #216]	; 0xd8
    26bc:	mov	r1, r4
    26c0:	bl	0 <coda_type_record_add_field>
    26c4:	ldr	r0, [pc, #1184]	; 2b6c <sp3_init+0x2a14>
    26c8:	bl	0 <coda_type_record_field_new>
    26cc:	mov	r4, r0
    26d0:	ldr	r2, [pc, #1096]	; 2b20 <sp3_init+0x29c8>
    26d4:	ldr	r0, [r2]
    26d8:	ldr	r1, [r0, #252]	; 0xfc
    26dc:	mov	r0, r4
    26e0:	bl	0 <coda_type_record_field_set_type>
    26e4:	ldr	r2, [pc, #1076]	; 2b20 <sp3_init+0x29c8>
    26e8:	ldr	r1, [r2]
    26ec:	ldr	r0, [r1, #216]	; 0xd8
    26f0:	mov	r1, r4
    26f4:	bl	0 <coda_type_record_add_field>
    26f8:	ldr	r0, [pc, #1140]	; 2b74 <sp3_init+0x2a1c>
    26fc:	bl	0 <coda_type_record_field_new>
    2700:	mov	r4, r0
    2704:	ldr	r1, [pc, #1044]	; 2b20 <sp3_init+0x29c8>
    2708:	ldr	r1, [r1]
    270c:	ldr	r1, [r1, #256]	; 0x100
    2710:	mov	r0, r4
    2714:	bl	0 <coda_type_record_field_set_type>
    2718:	ldr	r3, [pc, #1024]	; 2b20 <sp3_init+0x29c8>
    271c:	ldr	ip, [r3]
    2720:	ldr	r0, [ip, #216]	; 0xd8
    2724:	mov	r1, r4
    2728:	bl	0 <coda_type_record_add_field>
    272c:	mov	r0, #9
    2730:	bl	0 <coda_type_record_new>
    2734:	ldr	r2, [pc, #996]	; 2b20 <sp3_init+0x29c8>
    2738:	ldr	r1, [r2]
    273c:	str	r0, [r1, #276]	; 0x114
    2740:	ldr	r0, [pc, #1072]	; 2b78 <sp3_init+0x2a20>
    2744:	bl	0 <coda_type_record_field_new>
    2748:	mov	r4, r0
    274c:	ldr	r1, [pc, #972]	; 2b20 <sp3_init+0x29c8>
    2750:	ldr	r2, [r1]
    2754:	ldr	r1, [r2, #88]	; 0x58
    2758:	mov	r0, r4
    275c:	bl	0 <coda_type_record_field_set_type>
    2760:	ldr	r0, [pc, #952]	; 2b20 <sp3_init+0x29c8>
    2764:	ldr	r2, [r0]
    2768:	ldr	r0, [r2, #276]	; 0x114
    276c:	mov	r1, r4
    2770:	bl	0 <coda_type_record_add_field>
    2774:	ldr	r0, [pc, #944]	; 2b2c <sp3_init+0x29d4>
    2778:	bl	0 <coda_type_record_field_new>
    277c:	mov	r4, r0
    2780:	ldr	r3, [pc, #920]	; 2b20 <sp3_init+0x29c8>
    2784:	ldr	r3, [r3]
    2788:	ldr	r1, [r3, #184]	; 0xb8
    278c:	mov	r0, r4
    2790:	bl	0 <coda_type_record_field_set_type>
    2794:	ldr	r0, [pc, #900]	; 2b20 <sp3_init+0x29c8>
    2798:	ldr	r0, [r0]
    279c:	ldr	r0, [r0, #276]	; 0x114
    27a0:	mov	r1, r4
    27a4:	bl	0 <coda_type_record_add_field>
    27a8:	ldr	r0, [pc, #900]	; 2b34 <sp3_init+0x29dc>
    27ac:	bl	0 <coda_type_record_field_new>
    27b0:	mov	r4, r0
    27b4:	ldr	r1, [pc, #868]	; 2b20 <sp3_init+0x29c8>
    27b8:	ldr	r3, [r1]
    27bc:	ldr	r1, [r3, #188]	; 0xbc
    27c0:	mov	r0, r4
    27c4:	bl	0 <coda_type_record_field_set_type>
    27c8:	ldr	r3, [pc, #848]	; 2b20 <sp3_init+0x29c8>
    27cc:	ldr	r2, [r3]
    27d0:	ldr	r0, [r2, #276]	; 0x114
    27d4:	mov	r1, r4
    27d8:	bl	0 <coda_type_record_add_field>
    27dc:	ldr	r0, [pc, #896]	; 2b64 <sp3_init+0x2a0c>
    27e0:	bl	0 <coda_type_record_field_new>
    27e4:	mov	r4, r0
    27e8:	ldr	r1, [pc, #816]	; 2b20 <sp3_init+0x29c8>
    27ec:	ldr	ip, [r1]
    27f0:	ldr	r1, [ip, #192]	; 0xc0
    27f4:	mov	r0, r4
    27f8:	bl	0 <coda_type_record_field_set_type>
    27fc:	ldr	r2, [pc, #796]	; 2b20 <sp3_init+0x29c8>
    2800:	ldr	r3, [r2]
    2804:	ldr	r0, [r3, #276]	; 0x114
    2808:	mov	r1, r4
    280c:	bl	0 <coda_type_record_add_field>
    2810:	ldr	r0, [pc, #880]	; 2b88 <sp3_init+0x2a30>
    2814:	bl	0 <coda_type_record_field_new>
    2818:	mov	r4, r0
    281c:	ldr	r2, [pc, #764]	; 2b20 <sp3_init+0x29c8>
    2820:	ldr	r2, [r2]
    2824:	ldr	r1, [r2, #196]	; 0xc4
    2828:	mov	r0, r4
    282c:	bl	0 <coda_type_record_field_set_type>
    2830:	ldr	r1, [pc, #744]	; 2b20 <sp3_init+0x29c8>
    2834:	ldr	r3, [r1]
    2838:	ldr	r0, [r3, #276]	; 0x114
    283c:	mov	r1, r4
    2840:	bl	0 <coda_type_record_add_field>
    2844:	ldr	r0, [pc, #756]	; 2b40 <sp3_init+0x29e8>
    2848:	bl	0 <coda_type_record_field_new>
    284c:	mov	r4, r0
    2850:	ldr	r2, [pc, #712]	; 2b20 <sp3_init+0x29c8>
    2854:	ldr	r0, [r2]
    2858:	ldr	r1, [r0, #200]	; 0xc8
    285c:	mov	r0, r4
    2860:	bl	0 <coda_type_record_field_set_type>
    2864:	ldr	ip, [pc, #692]	; 2b20 <sp3_init+0x29c8>
    2868:	ldr	r1, [ip]
    286c:	ldr	r0, [r1, #276]	; 0x114
    2870:	mov	r1, r4
    2874:	bl	0 <coda_type_record_add_field>
    2878:	ldr	r0, [pc, #732]	; 2b5c <sp3_init+0x2a04>
    287c:	bl	0 <coda_type_record_field_new>
    2880:	mov	r4, r0
    2884:	ldr	r3, [pc, #660]	; 2b20 <sp3_init+0x29c8>
    2888:	ldr	r1, [r3]
    288c:	ldr	r1, [r1, #204]	; 0xcc
    2890:	mov	r0, r4
    2894:	bl	0 <coda_type_record_field_set_type>
    2898:	ldr	r3, [pc, #640]	; 2b20 <sp3_init+0x29c8>
    289c:	ldr	r2, [r3]
    28a0:	ldr	r0, [r2, #276]	; 0x114
    28a4:	mov	r1, r4
    28a8:	bl	0 <coda_type_record_add_field>
    28ac:	ldr	r0, [pc, #648]	; 2b3c <sp3_init+0x29e4>
    28b0:	bl	0 <coda_type_record_field_new>
    28b4:	mov	r4, r0
    28b8:	ldr	r0, [pc, #608]	; 2b20 <sp3_init+0x29c8>
    28bc:	ldr	r0, [r0]
    28c0:	ldr	r1, [r0, #208]	; 0xd0
    28c4:	mov	r0, r4
    28c8:	bl	0 <coda_type_record_field_set_type>
    28cc:	ldr	r0, [pc, #588]	; 2b20 <sp3_init+0x29c8>
    28d0:	ldr	r1, [r0]
    28d4:	ldr	r0, [r1, #276]	; 0x114
    28d8:	mov	r1, r4
    28dc:	bl	0 <coda_type_record_add_field>
    28e0:	ldr	r0, [pc, #676]	; 2b8c <sp3_init+0x2a34>
    28e4:	bl	0 <coda_type_record_field_new>
    28e8:	mov	r4, r0
    28ec:	ldr	r0, [pc, #556]	; 2b20 <sp3_init+0x29c8>
    28f0:	ldr	r3, [r0]
    28f4:	ldr	r1, [r3, #212]	; 0xd4
    28f8:	mov	r0, r4
    28fc:	bl	0 <coda_type_record_field_set_type>
    2900:	ldr	r0, [pc, #536]	; 2b20 <sp3_init+0x29c8>
    2904:	ldr	r0, [r0]
    2908:	ldr	r0, [r0, #276]	; 0x114
    290c:	mov	r1, r4
    2910:	bl	0 <coda_type_record_add_field>
    2914:	ldr	r0, [pc, #552]	; 2b44 <sp3_init+0x29ec>
    2918:	bl	0 <coda_type_record_field_new>
    291c:	mov	r4, r0
    2920:	ldr	r3, [pc, #504]	; 2b20 <sp3_init+0x29c8>
    2924:	ldr	ip, [r3]
    2928:	ldr	r1, [ip, #216]	; 0xd8
    292c:	mov	r0, r4
    2930:	bl	0 <coda_type_record_field_set_type>
    2934:	mov	r0, r4
    2938:	bl	0 <coda_type_record_field_set_optional>
    293c:	ldr	r1, [pc, #476]	; 2b20 <sp3_init+0x29c8>
    2940:	ldr	r2, [r1]
    2944:	ldr	r0, [r2, #276]	; 0x114
    2948:	mov	r1, r4
    294c:	bl	0 <coda_type_record_add_field>
    2950:	mov	r0, #9
    2954:	bl	0 <coda_type_array_new>
    2958:	ldr	r1, [pc, #448]	; 2b20 <sp3_init+0x29c8>
    295c:	ldr	r2, [r1]
    2960:	str	r0, [r2, #280]	; 0x118
    2964:	ldr	r0, [pc, #436]	; 2b20 <sp3_init+0x29c8>
    2968:	ldr	r0, [r0]
    296c:	ldr	r0, [r0, #280]	; 0x118
    2970:	mov	r1, #0
    2974:	bl	0 <coda_type_array_add_variable_dimension>
    2978:	ldr	r0, [pc, #416]	; 2b20 <sp3_init+0x29c8>
    297c:	ldr	r0, [r0]
    2980:	ldr	r0, [r0, #280]	; 0x118
    2984:	ldr	r1, [pc, #404]	; 2b20 <sp3_init+0x29c8>
    2988:	ldr	ip, [r1]
    298c:	ldr	r1, [ip, #276]	; 0x114
    2990:	bl	0 <coda_type_array_set_base_type>
    2994:	mov	r0, #9
    2998:	bl	0 <coda_type_record_new>
    299c:	ldr	r2, [pc, #380]	; 2b20 <sp3_init+0x29c8>
    29a0:	ldr	r1, [r2]
    29a4:	str	r0, [r1, #292]	; 0x124
    29a8:	ldr	r0, [pc, #484]	; 2b94 <sp3_init+0x2a3c>
    29ac:	bl	0 <coda_type_record_field_new>
    29b0:	mov	r4, r0
    29b4:	ldr	r2, [pc, #356]	; 2b20 <sp3_init+0x29c8>
    29b8:	ldr	r2, [r2]
    29bc:	ldr	r1, [r2, #264]	; 0x108
    29c0:	mov	r0, r4
    29c4:	bl	0 <coda_type_record_field_set_type>
    29c8:	ldr	ip, [pc, #336]	; 2b20 <sp3_init+0x29c8>
    29cc:	ldr	r2, [ip]
    29d0:	ldr	r0, [r2, #292]	; 0x124
    29d4:	mov	r1, r4
    29d8:	bl	0 <coda_type_record_add_field>
    29dc:	ldr	r0, [pc, #372]	; 2b58 <sp3_init+0x2a00>
    29e0:	bl	0 <coda_type_record_field_new>
    29e4:	mov	r4, r0
    29e8:	ldr	r0, [pc, #304]	; 2b20 <sp3_init+0x29c8>
    29ec:	ldr	r2, [r0]
    29f0:	ldr	r1, [r2, #272]	; 0x110
    29f4:	mov	r0, r4
    29f8:	bl	0 <coda_type_record_field_set_type>
    29fc:	ldr	r2, [pc, #284]	; 2b20 <sp3_init+0x29c8>
    2a00:	ldr	ip, [r2]
    2a04:	ldr	r0, [ip, #292]	; 0x124
    2a08:	mov	r1, r4
    2a0c:	bl	0 <coda_type_record_add_field>
    2a10:	ldr	r0, [pc, #360]	; 2b80 <sp3_init+0x2a28>
    2a14:	bl	0 <coda_type_record_field_new>
    2a18:	mov	r4, r0
    2a1c:	ldr	r0, [pc, #252]	; 2b20 <sp3_init+0x29c8>
    2a20:	ldr	ip, [r0]
    2a24:	ldr	r1, [ip, #280]	; 0x118
    2a28:	mov	r0, r4
    2a2c:	bl	0 <coda_type_record_field_set_type>
    2a30:	mov	r0, r4
    2a34:	bl	0 <coda_type_record_field_set_optional>
    2a38:	ldr	r1, [pc, #224]	; 2b20 <sp3_init+0x29c8>
    2a3c:	ldr	ip, [r1]
    2a40:	ldr	r0, [ip, #292]	; 0x124
    2a44:	mov	r1, r4
    2a48:	bl	0 <coda_type_record_add_field>
    2a4c:	mov	r0, #9
    2a50:	bl	0 <coda_type_array_new>
    2a54:	ldr	r3, [pc, #196]	; 2b20 <sp3_init+0x29c8>
    2a58:	ldr	ip, [r3]
    2a5c:	str	r0, [ip, #288]	; 0x120
    2a60:	ldr	r0, [pc, #184]	; 2b20 <sp3_init+0x29c8>
    2a64:	ldr	r0, [r0]
    2a68:	ldr	r0, [r0, #288]	; 0x120
    2a6c:	mov	r1, #0
    2a70:	bl	0 <coda_type_array_add_variable_dimension>
    2a74:	ldr	r0, [pc, #164]	; 2b20 <sp3_init+0x29c8>
    2a78:	ldr	r0, [r0]
    2a7c:	ldr	r0, [r0, #288]	; 0x120
    2a80:	ldr	r2, [pc, #152]	; 2b20 <sp3_init+0x29c8>
    2a84:	ldr	r2, [r2]
    2a88:	ldr	r1, [r2, #292]	; 0x124
    2a8c:	bl	0 <coda_type_array_set_base_type>
    2a90:	mov	r0, #9
    2a94:	bl	0 <coda_type_record_new>
    2a98:	ldr	r3, [pc, #128]	; 2b20 <sp3_init+0x29c8>
    2a9c:	ldr	r2, [r3]
    2aa0:	str	r0, [r2, #296]	; 0x128
    2aa4:	ldr	r0, [pc, #240]	; 2b9c <sp3_init+0x2a44>
    2aa8:	bl	0 <coda_type_record_field_new>
    2aac:	mov	r4, r0
    2ab0:	ldr	r2, [pc, #104]	; 2b20 <sp3_init+0x29c8>
    2ab4:	ldr	r3, [r2]
    2ab8:	ldr	r1, [r3, #284]	; 0x11c
    2abc:	mov	r0, r4
    2ac0:	bl	0 <coda_type_record_field_set_type>
    2ac4:	ldr	r2, [pc, #84]	; 2b20 <sp3_init+0x29c8>
    2ac8:	ldr	ip, [r2]
    2acc:	ldr	r0, [ip, #296]	; 0x128
    2ad0:	mov	r1, r4
    2ad4:	bl	0 <coda_type_record_add_field>
    2ad8:	ldr	r0, [pc, #192]	; 2ba0 <sp3_init+0x2a48>
    2adc:	bl	0 <coda_type_record_field_new>
    2ae0:	mov	r4, r0
    2ae4:	ldr	r1, [pc, #52]	; 2b20 <sp3_init+0x29c8>
    2ae8:	ldr	r2, [r1]
    2aec:	ldr	r1, [r2, #288]	; 0x120
    2af0:	mov	r0, r4
    2af4:	bl	0 <coda_type_record_field_set_type>
    2af8:	ldr	r1, [pc, #32]	; 2b20 <sp3_init+0x29c8>
    2afc:	ldr	r2, [r1]
    2b00:	ldr	r0, [r2, #296]	; 0x128
    2b04:	mov	r1, r4
    2b08:	bl	0 <coda_type_record_add_field>
    2b0c:	mov	r0, #0
    2b10:	ldr	r4, [sp, #16]
    2b14:	ldr	lr, [sp, #8]
    2b18:	add	sp, sp, #32
    2b1c:	bx	lr
    2b20:	.word	0x00000000
    2b24:	.word	0x0000097e
    2b28:	.word	0x0000000f
    2b2c:	.word	0x00000368
    2b30:	.word	0x0000082f
    2b34:	.word	0x000007ba
    2b38:	.word	0x00000a77
    2b3c:	.word	0x0000038d
    2b40:	.word	0x0000034e
    2b44:	.word	0x00000511
    2b48:	.word	0x000002d9
    2b4c:	.word	0x000008af
    2b50:	.word	0x00000436
    2b54:	.word	0x0000062f
    2b58:	.word	0x00000ad2
    2b5c:	.word	0x000006b2
    2b60:	.word	0x00000337
    2b64:	.word	0x0000058a
    2b68:	.word	0x0000098b
    2b6c:	.word	0x00000937
    2b70:	.word	0x00000960
    2b74:	.word	0x00000454
    2b78:	.word	0x000007af
    2b7c:	.word	0x00000977
    2b80:	.word	0x000009af
    2b84:	.word	0x000003cd
    2b88:	.word	0x000003d5
    2b8c:	.word	0x00000655
    2b90:	.word	0x0000083c
    2b94:	.word	0x000003b6
    2b98:	.word	0x00000037
    2b9c:	.word	0x00000358
    2ba0:	.word	0x000007a8
    2ba4:	.word	0x000009b8

00002ba8 <coda_sp3_done>:
    2ba8:	mov	ip, sp
    2bac:	sub	sp, sp, #16
    2bb0:	str	ip, [sp]
    2bb4:	str	lr, [sp, #4]
    2bb8:	str	r4, [sp, #8]
    2bbc:	ldr	r0, [pc, #120]	; 2c3c <coda_sp3_done+0x94>
    2bc0:	ldr	r0, [r0]
    2bc4:	cmp	r0, #0
    2bc8:	beq	2c2c <coda_sp3_done+0x84>
    2bcc:	mov	r4, #0
    2bd0:	cmp	r4, #75	; 0x4b
    2bd4:	bge	2c14 <coda_sp3_done+0x6c>
    2bd8:	ldr	r0, [pc, #92]	; 2c3c <coda_sp3_done+0x94>
    2bdc:	ldr	r3, [r0]
    2be0:	ldr	r2, [r3, r4, lsl #2]
    2be4:	cmp	r2, #0
    2be8:	beq	2c0c <coda_sp3_done+0x64>
    2bec:	ldr	r1, [pc, #72]	; 2c3c <coda_sp3_done+0x94>
    2bf0:	ldr	ip, [r1]
    2bf4:	ldr	r0, [ip, r4, lsl #2]
    2bf8:	bl	0 <coda_type_release>
    2bfc:	ldr	r3, [pc, #56]	; 2c3c <coda_sp3_done+0x94>
    2c00:	ldr	r1, [r3]
    2c04:	mov	ip, #0
    2c08:	str	ip, [r1, r4, lsl #2]
    2c0c:	add	r4, r4, #1
    2c10:	b	2bd0 <coda_sp3_done+0x28>
    2c14:	ldr	r0, [pc, #32]	; 2c3c <coda_sp3_done+0x94>
    2c18:	ldr	r0, [r0]
    2c1c:	bl	0 <free>
    2c20:	ldr	r2, [pc, #20]	; 2c3c <coda_sp3_done+0x94>
    2c24:	mov	r0, #0
    2c28:	str	r0, [r2]
    2c2c:	ldr	r4, [sp, #8]
    2c30:	ldr	lr, [sp, #4]
    2c34:	add	sp, sp, #16
    2c38:	bx	lr
    2c3c:	.word	0x00000000

00002c40 <get_line>:
    2c40:	mov	ip, sp
    2c44:	sub	sp, sp, #16
    2c48:	str	ip, [sp]
    2c4c:	str	lr, [sp, #4]
    2c50:	str	r4, [sp, #8]
    2c54:	str	r5, [sp, #12]
    2c58:	mov	r4, r1
    2c5c:	mov	r5, r0
    2c60:	mov	r1, #1000	; 0x3e8
    2c64:	mov	r2, r5
    2c68:	mov	r0, r4
    2c6c:	bl	0 <fgets>
    2c70:	cmp	r0, #0
    2c74:	bne	2cbc <get_line+0x7c>
    2c78:	mov	r0, r5
    2c7c:	bl	0 <ferror>
    2c80:	cmp	r0, #0
    2c84:	beq	2cac <get_line+0x6c>
    2c88:	bl	0 <__errno_location>
    2c8c:	ldr	r0, [r0]
    2c90:	bl	0 <strerror>
    2c94:	mov	r2, r0
    2c98:	mvn	r0, #21
    2c9c:	ldr	r1, [pc, #188]	; 2d60 <get_line+0x120>
    2ca0:	bl	0 <coda_set_error>
    2ca4:	mvn	r0, #0
    2ca8:	b	2d4c <get_line+0x10c>
    2cac:	mov	r2, #0
    2cb0:	strb	r2, [r4]
    2cb4:	mov	r0, #0
    2cb8:	b	2d4c <get_line+0x10c>
    2cbc:	mov	r0, r4
    2cc0:	bl	0 <strlen>
    2cc4:	cmp	r0, #0
    2cc8:	ble	2ce8 <get_line+0xa8>
    2ccc:	add	r1, r4, r0
    2cd0:	sub	lr, r1, #4096	; 0x1000
    2cd4:	ldrb	r1, [lr, #4095]	; 0xfff
    2cd8:	cmp	r1, #10
    2cdc:	moveq	ip, #1
    2ce0:	movne	ip, #0
    2ce4:	b	2cec <get_line+0xac>
    2ce8:	mov	ip, #0
    2cec:	cmp	ip, #0
    2cf0:	beq	2d08 <get_line+0xc8>
    2cf4:	add	r2, r4, r0
    2cf8:	mov	ip, #0
    2cfc:	sub	lr, r2, #4096	; 0x1000
    2d00:	strb	ip, [lr, #4095]	; 0xfff
    2d04:	sub	r0, r0, #1
    2d08:	cmp	r0, #0
    2d0c:	ble	2d2c <get_line+0xec>
    2d10:	add	r3, r4, r0
    2d14:	sub	lr, r3, #4096	; 0x1000
    2d18:	ldrb	r1, [lr, #4095]	; 0xfff
    2d1c:	cmp	r1, #13
    2d20:	moveq	r1, #1
    2d24:	movne	r1, #0
    2d28:	b	2d30 <get_line+0xf0>
    2d2c:	mov	r1, #0
    2d30:	cmp	r1, #0
    2d34:	beq	2d4c <get_line+0x10c>
    2d38:	add	r1, r4, r0
    2d3c:	mov	r3, #0
    2d40:	sub	lr, r1, #4096	; 0x1000
    2d44:	strb	r3, [lr, #4095]	; 0xfff
    2d48:	sub	r0, r0, #1
    2d4c:	ldr	r4, [sp, #8]
    2d50:	ldr	r5, [sp, #12]
    2d54:	ldr	lr, [sp, #4]
    2d58:	add	sp, sp, #16
    2d5c:	bx	lr
    2d60:	.word	0x00000871

00002d64 <read_header>:
    2d64:	mov	ip, sp
    2d68:	sub	sp, sp, #88	; 0x58
    2d6c:	sub	sp, sp, #1024	; 0x400
    2d70:	str	ip, [sp, #4]
    2d74:	str	lr, [sp, #8]
    2d78:	str	r4, [sp, #16]
    2d7c:	str	r5, [sp, #20]
    2d80:	str	r6, [sp, #24]
    2d84:	str	r7, [sp, #28]
    2d88:	mov	r4, r0
    2d8c:	ldr	r0, [r4]
    2d90:	bl	0 <ftell>
    2d94:	str	r0, [r4, #52]	; 0x34
    2d98:	ldr	r0, [r4, #48]	; 0x30
    2d9c:	add	r0, r0, #1
    2da0:	str	r0, [r4, #48]	; 0x30
    2da4:	ldr	r0, [r4]
    2da8:	add	r1, sp, #112	; 0x70
    2dac:	bl	2c40 <get_line>
    2db0:	cmp	r0, #0
    2db4:	bge	2dc0 <read_header+0x5c>
    2db8:	mvn	r0, #0
    2dbc:	b	3b0c <read_header+0xda8>
    2dc0:	cmp	r0, #60	; 0x3c
    2dc4:	bge	2df0 <read_header+0x8c>
    2dc8:	mvn	ip, #21
    2dcc:	ldr	r1, [pc, #3456]	; 3b54 <read_header+0xdf0>
    2dd0:	ldr	r3, [r4, #48]	; 0x30
    2dd4:	ldr	r2, [r4, #52]	; 0x34
    2dd8:	str	r2, [sp]
    2ddc:	mov	r2, r0
    2de0:	mov	r0, ip
    2de4:	bl	0 <coda_set_error>
    2de8:	mvn	r0, #0
    2dec:	b	3b0c <read_header+0xda8>
    2df0:	ldrb	r3, [sp, #114]	; 0x72
    2df4:	and	r1, r3, #255	; 0xff
    2df8:	strb	r1, [r4, #44]	; 0x2c
    2dfc:	ldrb	r2, [sp, #114]	; 0x72
    2e00:	and	r2, r2, #255	; 0xff
    2e04:	strb	r2, [sp, #48]	; 0x30
    2e08:	mov	r2, #0
    2e0c:	strb	r2, [sp, #49]	; 0x31
    2e10:	ldr	ip, [pc, #3344]	; 3b28 <read_header+0xdc4>
    2e14:	ldr	ip, [ip]
    2e18:	ldr	r0, [ip]
    2e1c:	mov	r1, #0
    2e20:	ldr	r2, [r4, #4]
    2e24:	add	r3, sp, #48	; 0x30
    2e28:	bl	0 <coda_mem_string_new>
    2e2c:	mov	r2, r0
    2e30:	ldr	r0, [r4, #8]
    2e34:	ldr	r1, [pc, #3344]	; 3b4c <read_header+0xde8>
    2e38:	mov	r3, #0
    2e3c:	bl	0 <coda_mem_record_add_field>
    2e40:	add	r0, sp, #48	; 0x30
    2e44:	add	r1, sp, #115	; 0x73
    2e48:	mov	r2, #28
    2e4c:	bl	0 <memcpy>
    2e50:	mov	r1, #0
    2e54:	strb	r1, [sp, #76]	; 0x4c
    2e58:	ldr	ip, [pc, #3272]	; 3b28 <read_header+0xdc4>
    2e5c:	ldr	r1, [ip]
    2e60:	ldr	r0, [r1, #4]
    2e64:	mov	r1, #0
    2e68:	ldr	r2, [r4, #4]
    2e6c:	add	r3, sp, #48	; 0x30
    2e70:	bl	0 <coda_mem_string_new>
    2e74:	ldr	ip, [pc, #3244]	; 3b28 <read_header+0xdc4>
    2e78:	ldr	ip, [ip]
    2e7c:	ldr	r3, [ip, #8]
    2e80:	mov	r1, #0
    2e84:	mov	r2, r0
    2e88:	mov	r0, r3
    2e8c:	bl	0 <coda_mem_time_new>
    2e90:	mov	r2, r0
    2e94:	ldr	r0, [r4, #8]
    2e98:	ldr	r1, [pc, #3292]	; 3b7c <read_header+0xe18>
    2e9c:	mov	r3, #0
    2ea0:	bl	0 <coda_mem_record_add_field>
    2ea4:	add	r0, sp, #144	; 0x90
    2ea8:	mov	r1, #7
    2eac:	add	r2, sp, #40	; 0x28
    2eb0:	mov	r3, #0
    2eb4:	bl	0 <coda_ascii_parse_int64>
    2eb8:	cmp	r0, #0
    2ebc:	bge	2edc <read_header+0x178>
    2ec0:	ldr	r0, [pc, #3172]	; 3b2c <read_header+0xdc8>
    2ec4:	ldr	r1, [r4, #48]	; 0x30
    2ec8:	ldr	r2, [r4, #52]	; 0x34
    2ecc:	add	r2, r2, #32
    2ed0:	bl	0 <coda_add_error_message>
    2ed4:	mvn	r0, #0
    2ed8:	b	3b0c <read_header+0xda8>
    2edc:	ldr	r3, [pc, #3140]	; 3b28 <read_header+0xdc4>
    2ee0:	ldr	r0, [r3]
    2ee4:	ldr	r0, [r0, #12]
    2ee8:	mov	r1, #0
    2eec:	ldr	r2, [r4, #4]
    2ef0:	ldr	r3, [sp, #40]	; 0x28
    2ef4:	bl	0 <coda_mem_int32_new>
    2ef8:	ldr	r2, [r4, #8]
    2efc:	ldr	r1, [pc, #3136]	; 3b44 <read_header+0xde0>
    2f00:	mov	r3, #0
    2f04:	mov	ip, r0
    2f08:	mov	r0, r2
    2f0c:	mov	r2, ip
    2f10:	bl	0 <coda_mem_record_add_field>
    2f14:	add	r0, sp, #48	; 0x30
    2f18:	add	r1, sp, #152	; 0x98
    2f1c:	mov	r2, #5
    2f20:	bl	0 <memcpy>
    2f24:	mov	r3, #0
    2f28:	strb	r3, [sp, #53]	; 0x35
    2f2c:	ldr	r1, [pc, #3060]	; 3b28 <read_header+0xdc4>
    2f30:	ldr	r2, [r1]
    2f34:	ldr	r0, [r2, #16]
    2f38:	mov	r1, #0
    2f3c:	ldr	r2, [r4, #4]
    2f40:	add	r3, sp, #48	; 0x30
    2f44:	bl	0 <coda_mem_string_new>
    2f48:	ldr	r2, [r4, #8]
    2f4c:	ldr	r1, [pc, #3124]	; 3b88 <read_header+0xe24>
    2f50:	mov	r3, #0
    2f54:	mov	ip, r0
    2f58:	mov	r0, r2
    2f5c:	mov	r2, ip
    2f60:	bl	0 <coda_mem_record_add_field>
    2f64:	add	r0, sp, #48	; 0x30
    2f68:	add	r1, sp, #158	; 0x9e
    2f6c:	mov	r2, #5
    2f70:	bl	0 <memcpy>
    2f74:	mov	r2, #0
    2f78:	strb	r2, [sp, #53]	; 0x35
    2f7c:	ldr	r3, [pc, #2980]	; 3b28 <read_header+0xdc4>
    2f80:	ldr	r0, [r3]
    2f84:	ldr	r0, [r0, #20]
    2f88:	mov	r1, #0
    2f8c:	ldr	r2, [r4, #4]
    2f90:	add	r3, sp, #48	; 0x30
    2f94:	bl	0 <coda_mem_string_new>
    2f98:	mov	r2, r0
    2f9c:	ldr	r0, [r4, #8]
    2fa0:	ldr	r1, [pc, #3044]	; 3b8c <read_header+0xe28>
    2fa4:	mov	r3, #0
    2fa8:	bl	0 <coda_mem_record_add_field>
    2fac:	add	r0, sp, #48	; 0x30
    2fb0:	add	r1, sp, #164	; 0xa4
    2fb4:	mov	r2, #3
    2fb8:	bl	0 <memcpy>
    2fbc:	mov	r3, #0
    2fc0:	strb	r3, [sp, #51]	; 0x33
    2fc4:	ldr	r1, [pc, #2908]	; 3b28 <read_header+0xdc4>
    2fc8:	ldr	r1, [r1]
    2fcc:	ldr	r0, [r1, #24]
    2fd0:	mov	r1, #0
    2fd4:	ldr	r2, [r4, #4]
    2fd8:	add	r3, sp, #48	; 0x30
    2fdc:	bl	0 <coda_mem_string_new>
    2fe0:	mov	r2, r0
    2fe4:	ldr	r0, [r4, #8]
    2fe8:	ldr	r1, [pc, #2936]	; 3b68 <read_header+0xe04>
    2fec:	mov	r3, #0
    2ff0:	bl	0 <coda_mem_record_add_field>
    2ff4:	add	r0, sp, #48	; 0x30
    2ff8:	add	r1, sp, #168	; 0xa8
    2ffc:	mov	r2, #4
    3000:	bl	0 <memcpy>
    3004:	mov	ip, #0
    3008:	strb	ip, [sp, #52]	; 0x34
    300c:	ldr	r2, [pc, #2836]	; 3b28 <read_header+0xdc4>
    3010:	ldr	r3, [r2]
    3014:	ldr	r0, [r3, #28]
    3018:	mov	r1, #0
    301c:	ldr	r2, [r4, #4]
    3020:	add	r3, sp, #48	; 0x30
    3024:	bl	0 <coda_mem_string_new>
    3028:	ldr	r2, [r4, #8]
    302c:	ldr	r1, [pc, #2844]	; 3b50 <read_header+0xdec>
    3030:	mov	r3, #0
    3034:	mov	ip, r0
    3038:	mov	r0, r2
    303c:	mov	r2, ip
    3040:	bl	0 <coda_mem_record_add_field>
    3044:	ldr	r0, [r4]
    3048:	bl	0 <ftell>
    304c:	str	r0, [r4, #52]	; 0x34
    3050:	ldr	r0, [r4, #48]	; 0x30
    3054:	add	r3, r0, #1
    3058:	str	r3, [r4, #48]	; 0x30
    305c:	ldr	r0, [r4]
    3060:	add	r1, sp, #112	; 0x70
    3064:	bl	2c40 <get_line>
    3068:	cmp	r0, #0
    306c:	bge	3078 <read_header+0x314>
    3070:	mvn	r0, #0
    3074:	b	3b0c <read_header+0xda8>
    3078:	cmp	r0, #60	; 0x3c
    307c:	bge	30ac <read_header+0x348>
    3080:	mvn	r2, #21
    3084:	ldr	r1, [pc, #2760]	; 3b54 <read_header+0xdf0>
    3088:	ldr	r3, [r4, #48]	; 0x30
    308c:	ldr	r4, [r4, #52]	; 0x34
    3090:	str	r4, [sp]
    3094:	mov	ip, r0
    3098:	mov	r0, r2
    309c:	mov	r2, ip
    30a0:	bl	0 <coda_set_error>
    30a4:	mvn	r0, #0
    30a8:	b	3b0c <read_header+0xda8>
    30ac:	add	r0, sp, #112	; 0x70
    30b0:	ldr	r1, [pc, #2692]	; 3b3c <read_header+0xdd8>
    30b4:	mov	r2, #3
    30b8:	bl	0 <memcmp>
    30bc:	cmp	r0, #0
    30c0:	beq	30e0 <read_header+0x37c>
    30c4:	mvn	r0, #21
    30c8:	ldr	r1, [pc, #2656]	; 3b30 <read_header+0xdcc>
    30cc:	ldr	r2, [r4, #48]	; 0x30
    30d0:	ldr	r3, [r4, #52]	; 0x34
    30d4:	bl	0 <coda_set_error>
    30d8:	mvn	r0, #0
    30dc:	b	3b0c <read_header+0xda8>
    30e0:	add	r0, sp, #115	; 0x73
    30e4:	mov	r1, #4
    30e8:	add	r2, sp, #40	; 0x28
    30ec:	mov	r3, #0
    30f0:	bl	0 <coda_ascii_parse_int64>
    30f4:	cmp	r0, #0
    30f8:	bge	3118 <read_header+0x3b4>
    30fc:	ldr	r0, [pc, #2600]	; 3b2c <read_header+0xdc8>
    3100:	ldr	r1, [r4, #48]	; 0x30
    3104:	ldr	ip, [r4, #52]	; 0x34
    3108:	add	r2, ip, #3
    310c:	bl	0 <coda_add_error_message>
    3110:	mvn	r0, #0
    3114:	b	3b0c <read_header+0xda8>
    3118:	ldr	ip, [pc, #2568]	; 3b28 <read_header+0xdc4>
    311c:	ldr	r1, [ip]
    3120:	ldr	r0, [r1, #32]
    3124:	mov	r1, #0
    3128:	ldr	r2, [r4, #4]
    312c:	ldr	r3, [sp, #40]	; 0x28
    3130:	sbfx	ip, r3, #0, #16
    3134:	sbfx	r3, ip, #0, #16
    3138:	bl	0 <coda_mem_int16_new>
    313c:	mov	r2, r0
    3140:	ldr	r0, [r4, #8]
    3144:	ldr	r1, [pc, #2580]	; 3b60 <read_header+0xdfc>
    3148:	mov	r3, #0
    314c:	bl	0 <coda_mem_record_add_field>
    3150:	add	r0, sp, #120	; 0x78
    3154:	mov	r1, #15
    3158:	add	r2, sp, #32
    315c:	mov	r3, #0
    3160:	bl	0 <coda_ascii_parse_double>
    3164:	cmp	r0, #0
    3168:	bge	3188 <read_header+0x424>
    316c:	ldr	r0, [pc, #2488]	; 3b2c <read_header+0xdc8>
    3170:	ldr	r1, [r4, #48]	; 0x30
    3174:	ldr	r2, [r4, #52]	; 0x34
    3178:	add	r2, r2, #8
    317c:	bl	0 <coda_add_error_message>
    3180:	mvn	r0, #0
    3184:	b	3b0c <read_header+0xda8>
    3188:	ldr	ip, [pc, #2456]	; 3b28 <read_header+0xdc4>
    318c:	ldr	r2, [ip]
    3190:	ldr	r0, [r2, #36]	; 0x24
    3194:	mov	r1, #0
    3198:	ldr	r2, [r4, #4]
    319c:	vldr	d0, [sp, #32]
    31a0:	bl	0 <coda_mem_double_new>
    31a4:	mov	r2, r0
    31a8:	ldr	r0, [r4, #8]
    31ac:	ldr	r1, [pc, #2488]	; 3b6c <read_header+0xe08>
    31b0:	mov	r3, #0
    31b4:	bl	0 <coda_mem_record_add_field>
    31b8:	add	r0, sp, #136	; 0x88
    31bc:	mov	r1, #14
    31c0:	add	r2, sp, #32
    31c4:	mov	r3, #0
    31c8:	bl	0 <coda_ascii_parse_double>
    31cc:	cmp	r0, #0
    31d0:	bge	31f0 <read_header+0x48c>
    31d4:	ldr	r0, [pc, #2384]	; 3b2c <read_header+0xdc8>
    31d8:	ldr	r1, [r4, #48]	; 0x30
    31dc:	ldr	r2, [r4, #52]	; 0x34
    31e0:	add	r2, r2, #24
    31e4:	bl	0 <coda_add_error_message>
    31e8:	mvn	r0, #0
    31ec:	b	3b0c <read_header+0xda8>
    31f0:	ldr	ip, [pc, #2352]	; 3b28 <read_header+0xdc4>
    31f4:	ldr	r0, [ip]
    31f8:	ldr	r0, [r0, #40]	; 0x28
    31fc:	mov	r1, #0
    3200:	ldr	r2, [r4, #4]
    3204:	vldr	d0, [sp, #32]
    3208:	bl	0 <coda_mem_double_new>
    320c:	mov	r2, r0
    3210:	ldr	r0, [r4, #8]
    3214:	ldr	r1, [pc, #2376]	; 3b64 <read_header+0xe00>
    3218:	mov	r3, #0
    321c:	bl	0 <coda_mem_record_add_field>
    3220:	add	r0, sp, #151	; 0x97
    3224:	mov	r1, #5
    3228:	add	r2, sp, #40	; 0x28
    322c:	mov	r3, #0
    3230:	bl	0 <coda_ascii_parse_int64>
    3234:	cmp	r0, #0
    3238:	bge	3258 <read_header+0x4f4>
    323c:	ldr	r0, [pc, #2280]	; 3b2c <read_header+0xdc8>
    3240:	ldr	r1, [r4, #48]	; 0x30
    3244:	ldr	r2, [r4, #52]	; 0x34
    3248:	add	r2, r2, #39	; 0x27
    324c:	bl	0 <coda_add_error_message>
    3250:	mvn	r0, #0
    3254:	b	3b0c <read_header+0xda8>
    3258:	ldr	r0, [pc, #2248]	; 3b28 <read_header+0xdc4>
    325c:	ldr	ip, [r0]
    3260:	ldr	r0, [ip, #44]	; 0x2c
    3264:	mov	r1, #0
    3268:	ldr	r2, [r4, #4]
    326c:	ldr	r3, [sp, #40]	; 0x28
    3270:	bl	0 <coda_mem_int32_new>
    3274:	ldr	r2, [r4, #8]
    3278:	ldr	r1, [pc, #2228]	; 3b34 <read_header+0xdd0>
    327c:	mov	r3, #0
    3280:	mov	ip, r0
    3284:	mov	r0, r2
    3288:	mov	r2, ip
    328c:	bl	0 <coda_mem_record_add_field>
    3290:	add	r0, sp, #157	; 0x9d
    3294:	mov	r1, #15
    3298:	add	r2, sp, #32
    329c:	mov	r3, #0
    32a0:	bl	0 <coda_ascii_parse_double>
    32a4:	cmp	r0, #0
    32a8:	bge	32c8 <read_header+0x564>
    32ac:	ldr	r0, [pc, #2168]	; 3b2c <read_header+0xdc8>
    32b0:	ldr	r1, [r4, #48]	; 0x30
    32b4:	ldr	r3, [r4, #52]	; 0x34
    32b8:	add	r2, r3, #45	; 0x2d
    32bc:	bl	0 <coda_add_error_message>
    32c0:	mvn	r0, #0
    32c4:	b	3b0c <read_header+0xda8>
    32c8:	ldr	r1, [pc, #2136]	; 3b28 <read_header+0xdc4>
    32cc:	ldr	r3, [r1]
    32d0:	ldr	r0, [r3, #48]	; 0x30
    32d4:	mov	r1, #0
    32d8:	ldr	r2, [r4, #4]
    32dc:	vldr	d0, [sp, #32]
    32e0:	bl	0 <coda_mem_double_new>
    32e4:	ldr	ip, [r4, #8]
    32e8:	ldr	r1, [pc, #2156]	; 3b5c <read_header+0xdf8>
    32ec:	mov	r3, #0
    32f0:	mov	r2, r0
    32f4:	mov	r0, ip
    32f8:	bl	0 <coda_mem_record_add_field>
    32fc:	ldr	r0, [r4]
    3300:	bl	0 <ftell>
    3304:	str	r0, [r4, #52]	; 0x34
    3308:	ldr	r1, [r4, #48]	; 0x30
    330c:	add	r1, r1, #1
    3310:	str	r1, [r4, #48]	; 0x30
    3314:	ldr	r0, [r4]
    3318:	add	r1, sp, #112	; 0x70
    331c:	bl	2c40 <get_line>
    3320:	cmp	r0, #0
    3324:	bge	3330 <read_header+0x5cc>
    3328:	mvn	r0, #0
    332c:	b	3b0c <read_header+0xda8>
    3330:	cmp	r0, #60	; 0x3c
    3334:	bge	3360 <read_header+0x5fc>
    3338:	mvn	ip, #21
    333c:	ldr	r1, [pc, #2064]	; 3b54 <read_header+0xdf0>
    3340:	ldr	r3, [r4, #48]	; 0x30
    3344:	ldr	r2, [r4, #52]	; 0x34
    3348:	str	r2, [sp]
    334c:	mov	r2, r0
    3350:	mov	r0, ip
    3354:	bl	0 <coda_set_error>
    3358:	mvn	r0, #0
    335c:	b	3b0c <read_header+0xda8>
    3360:	add	r0, sp, #112	; 0x70
    3364:	ldr	r1, [pc, #2084]	; 3b90 <read_header+0xe2c>
    3368:	mov	r2, #4
    336c:	bl	0 <memcmp>
    3370:	cmp	r0, #0
    3374:	beq	3394 <read_header+0x630>
    3378:	mvn	r0, #21
    337c:	ldr	r1, [pc, #1964]	; 3b30 <read_header+0xdcc>
    3380:	ldr	r2, [r4, #48]	; 0x30
    3384:	ldr	r3, [r4, #52]	; 0x34
    3388:	bl	0 <coda_set_error>
    338c:	mvn	r0, #0
    3390:	b	3b0c <read_header+0xda8>
    3394:	add	r0, sp, #116	; 0x74
    3398:	mov	r1, #2
    339c:	add	r2, sp, #40	; 0x28
    33a0:	mov	r3, #0
    33a4:	bl	0 <coda_ascii_parse_int64>
    33a8:	cmp	r0, #0
    33ac:	bge	33cc <read_header+0x668>
    33b0:	ldr	r0, [pc, #1908]	; 3b2c <read_header+0xdc8>
    33b4:	ldr	r1, [r4, #48]	; 0x30
    33b8:	ldr	r2, [r4, #52]	; 0x34
    33bc:	add	r2, r2, #4
    33c0:	bl	0 <coda_add_error_message>
    33c4:	mvn	r0, #0
    33c8:	b	3b0c <read_header+0xda8>
    33cc:	ldr	ip, [pc, #1876]	; 3b28 <read_header+0xdc4>
    33d0:	ldr	r2, [ip]
    33d4:	ldr	r0, [r2, #52]	; 0x34
    33d8:	mov	r1, #0
    33dc:	ldr	r2, [r4, #4]
    33e0:	ldr	r3, [sp, #40]	; 0x28
    33e4:	and	r3, r3, #255	; 0xff
    33e8:	bl	0 <coda_mem_uint8_new>
    33ec:	ldr	r2, [r4, #8]
    33f0:	ldr	r1, [pc, #1952]	; 3b98 <read_header+0xe34>
    33f4:	mov	r3, #0
    33f8:	mov	ip, r0
    33fc:	mov	r0, r2
    3400:	mov	r2, ip
    3404:	bl	0 <coda_mem_record_add_field>
    3408:	ldr	ip, [sp, #40]	; 0x28
    340c:	str	ip, [r4, #40]	; 0x28
    3410:	ldr	r1, [pc, #1808]	; 3b28 <read_header+0xdc4>
    3414:	ldr	r3, [r1]
    3418:	ldr	r0, [r3, #60]	; 0x3c
    341c:	mov	r1, #0
    3420:	bl	0 <coda_mem_array_new>
    3424:	mov	r6, r0
    3428:	mov	r7, #0
    342c:	cmp	r7, #85	; 0x55
    3430:	bge	35a0 <read_header+0x83c>
    3434:	lsr	r2, r7, #31
    3438:	movw	r3, #30841	; 0x7879
    343c:	movt	r3, #30840	; 0x7878
    3440:	smull	lr, r1, r7, r3
    3444:	add	ip, r2, r1, asr #3
    3448:	add	r1, ip, ip, lsl #4
    344c:	sub	r0, r7, r1
    3450:	cmp	r0, #0
    3454:	beq	3460 <read_header+0x6fc>
    3458:	mov	ip, #0
    345c:	b	346c <read_header+0x708>
    3460:	cmp	r7, #0
    3464:	movgt	ip, #1
    3468:	movle	ip, #0
    346c:	cmp	ip, #0
    3470:	beq	3524 <read_header+0x7c0>
    3474:	ldr	r0, [r4]
    3478:	bl	0 <ftell>
    347c:	str	r0, [r4, #52]	; 0x34
    3480:	ldr	ip, [r4, #48]	; 0x30
    3484:	add	r3, ip, #1
    3488:	str	r3, [r4, #48]	; 0x30
    348c:	ldr	r0, [r4]
    3490:	add	r1, sp, #112	; 0x70
    3494:	bl	2c40 <get_line>
    3498:	mov	r5, r0
    349c:	cmp	r5, #0
    34a0:	bge	34b4 <read_header+0x750>
    34a4:	mov	r0, r6
    34a8:	bl	0 <coda_dynamic_type_delete>
    34ac:	mvn	r0, #0
    34b0:	b	3b0c <read_header+0xda8>
    34b4:	cmp	r5, #60	; 0x3c
    34b8:	bge	34e8 <read_header+0x784>
    34bc:	mov	r0, r6
    34c0:	bl	0 <coda_dynamic_type_delete>
    34c4:	mvn	r0, #21
    34c8:	ldr	r1, [pc, #1668]	; 3b54 <read_header+0xdf0>
    34cc:	ldr	r3, [r4, #48]	; 0x30
    34d0:	ldr	r2, [r4, #52]	; 0x34
    34d4:	str	r2, [sp]
    34d8:	mov	r2, r5
    34dc:	bl	0 <coda_set_error>
    34e0:	mvn	r0, #0
    34e4:	b	3b0c <read_header+0xda8>
    34e8:	add	r0, sp, #112	; 0x70
    34ec:	ldr	r1, [pc, #1696]	; 3b94 <read_header+0xe30>
    34f0:	mov	r2, #9
    34f4:	bl	0 <memcmp>
    34f8:	cmp	r0, #0
    34fc:	beq	3524 <read_header+0x7c0>
    3500:	mov	r0, r6
    3504:	bl	0 <coda_dynamic_type_delete>
    3508:	mvn	r0, #21
    350c:	ldr	r1, [pc, #1564]	; 3b30 <read_header+0xdcc>
    3510:	ldr	r2, [r4, #48]	; 0x30
    3514:	ldr	r3, [r4, #52]	; 0x34
    3518:	bl	0 <coda_set_error>
    351c:	mvn	r0, #0
    3520:	b	3b0c <read_header+0xda8>
    3524:	ldr	r3, [r4, #40]	; 0x28
    3528:	cmp	r7, r3
    352c:	bge	3598 <read_header+0x834>
    3530:	add	r0, sp, #48	; 0x30
    3534:	add	ip, sp, #112	; 0x70
    3538:	lsr	r2, r7, #31
    353c:	movw	r1, #30841	; 0x7879
    3540:	movt	r1, #30840	; 0x7878
    3544:	smull	lr, r3, r7, r1
    3548:	add	r2, r2, r3, asr #3
    354c:	add	r2, r2, r2, lsl #4
    3550:	sub	r3, r7, r2
    3554:	add	r1, r3, r3, lsl #1
    3558:	add	r1, ip, r1
    355c:	add	r1, r1, #9
    3560:	mov	r2, #3
    3564:	bl	0 <memcpy>
    3568:	mov	r1, #0
    356c:	strb	r1, [sp, #51]	; 0x33
    3570:	ldr	r0, [pc, #1456]	; 3b28 <read_header+0xdc4>
    3574:	ldr	ip, [r0]
    3578:	ldr	r0, [ip, #56]	; 0x38
    357c:	mov	r1, #0
    3580:	ldr	r2, [r4, #4]
    3584:	add	r3, sp, #48	; 0x30
    3588:	bl	0 <coda_mem_string_new>
    358c:	mov	r1, r0
    3590:	mov	r0, r6
    3594:	bl	0 <coda_mem_array_add_element>
    3598:	add	r7, r7, #1
    359c:	b	342c <read_header+0x6c8>
    35a0:	ldr	r0, [r4, #8]
    35a4:	ldr	r1, [pc, #1492]	; 3b80 <read_header+0xe1c>
    35a8:	mov	r3, #0
    35ac:	mov	r2, r6
    35b0:	bl	0 <coda_mem_record_add_field>
    35b4:	ldr	r1, [pc, #1388]	; 3b28 <read_header+0xdc4>
    35b8:	ldr	r2, [r1]
    35bc:	ldr	r0, [r2, #68]	; 0x44
    35c0:	mov	r1, #0
    35c4:	bl	0 <coda_mem_array_new>
    35c8:	mov	r5, r0
    35cc:	mov	r6, #0
    35d0:	cmp	r6, #85	; 0x55
    35d4:	bge	3774 <read_header+0xa10>
    35d8:	lsr	r2, r6, #31
    35dc:	movw	ip, #30841	; 0x7879
    35e0:	movt	ip, #30840	; 0x7878
    35e4:	smull	lr, r3, r6, ip
    35e8:	add	ip, r2, r3, asr #3
    35ec:	add	r1, ip, ip, lsl #4
    35f0:	sub	r2, r6, r1
    35f4:	cmp	r2, #0
    35f8:	bne	36ac <read_header+0x948>
    35fc:	ldr	r0, [r4]
    3600:	bl	0 <ftell>
    3604:	str	r0, [r4, #52]	; 0x34
    3608:	ldr	r3, [r4, #48]	; 0x30
    360c:	add	ip, r3, #1
    3610:	str	ip, [r4, #48]	; 0x30
    3614:	ldr	r0, [r4]
    3618:	add	r1, sp, #112	; 0x70
    361c:	bl	2c40 <get_line>
    3620:	mov	r7, r0
    3624:	cmp	r7, #0
    3628:	bge	363c <read_header+0x8d8>
    362c:	mov	r0, r5
    3630:	bl	0 <coda_dynamic_type_delete>
    3634:	mvn	r0, #0
    3638:	b	3b0c <read_header+0xda8>
    363c:	cmp	r7, #60	; 0x3c
    3640:	bge	3670 <read_header+0x90c>
    3644:	mov	r0, r5
    3648:	bl	0 <coda_dynamic_type_delete>
    364c:	mvn	r0, #21
    3650:	ldr	r1, [pc, #1276]	; 3b54 <read_header+0xdf0>
    3654:	ldr	r3, [r4, #48]	; 0x30
    3658:	ldr	ip, [r4, #52]	; 0x34
    365c:	str	ip, [sp]
    3660:	mov	r2, r7
    3664:	bl	0 <coda_set_error>
    3668:	mvn	r0, #0
    366c:	b	3b0c <read_header+0xda8>
    3670:	add	r0, sp, #112	; 0x70
    3674:	ldr	r1, [pc, #1268]	; 3b70 <read_header+0xe0c>
    3678:	mov	r2, #9
    367c:	bl	0 <memcmp>
    3680:	cmp	r0, #0
    3684:	beq	36ac <read_header+0x948>
    3688:	mov	r0, r5
    368c:	bl	0 <coda_dynamic_type_delete>
    3690:	mvn	r0, #21
    3694:	ldr	r1, [pc, #1172]	; 3b30 <read_header+0xdcc>
    3698:	ldr	r2, [r4, #48]	; 0x30
    369c:	ldr	r3, [r4, #52]	; 0x34
    36a0:	bl	0 <coda_set_error>
    36a4:	mvn	r0, #0
    36a8:	b	3b0c <read_header+0xda8>
    36ac:	ldr	r0, [r4, #40]	; 0x28
    36b0:	cmp	r6, r0
    36b4:	bge	376c <read_header+0xa08>
    36b8:	add	r2, sp, #112	; 0x70
    36bc:	lsr	r1, r6, #31
    36c0:	movw	r3, #30841	; 0x7879
    36c4:	movt	r3, #30840	; 0x7878
    36c8:	smull	lr, r0, r6, r3
    36cc:	add	r1, r1, r0, asr #3
    36d0:	add	r1, r1, r1, lsl #4
    36d4:	sub	ip, r6, r1
    36d8:	add	r3, ip, ip, lsl #1
    36dc:	add	r3, r2, r3
    36e0:	add	r0, r3, #9
    36e4:	mov	r1, #3
    36e8:	add	r2, sp, #40	; 0x28
    36ec:	mov	r3, #0
    36f0:	bl	0 <coda_ascii_parse_int64>
    36f4:	cmp	r0, #0
    36f8:	bge	373c <read_header+0x9d8>
    36fc:	ldr	r0, [pc, #1064]	; 3b2c <read_header+0xdc8>
    3700:	ldr	r1, [r4, #48]	; 0x30
    3704:	ldr	r3, [r4, #52]	; 0x34
    3708:	lsr	r2, r6, #31
    370c:	movw	ip, #30841	; 0x7879
    3710:	movt	ip, #30840	; 0x7878
    3714:	smull	lr, ip, r6, ip
    3718:	add	ip, r2, ip, asr #3
    371c:	add	r2, ip, ip, lsl #4
    3720:	sub	r2, r6, r2
    3724:	add	r2, r2, r2, lsl #1
    3728:	add	r3, r3, r2
    372c:	add	r2, r3, #9
    3730:	bl	0 <coda_add_error_message>
    3734:	mvn	r0, #0
    3738:	b	3b0c <read_header+0xda8>
    373c:	ldr	r0, [pc, #996]	; 3b28 <read_header+0xdc4>
    3740:	ldr	r0, [r0]
    3744:	ldr	r0, [r0, #64]	; 0x40
    3748:	mov	r1, #0
    374c:	ldr	r2, [r4, #4]
    3750:	ldr	r3, [sp, #40]	; 0x28
    3754:	sbfx	r3, r3, #0, #16
    3758:	sbfx	r3, r3, #0, #16
    375c:	bl	0 <coda_mem_int16_new>
    3760:	mov	r1, r0
    3764:	mov	r0, r5
    3768:	bl	0 <coda_mem_array_add_element>
    376c:	add	r6, r6, #1
    3770:	b	35d0 <read_header+0x86c>
    3774:	ldr	r0, [r4, #8]
    3778:	ldr	r1, [pc, #968]	; 3b48 <read_header+0xde4>
    377c:	mov	r3, #0
    3780:	mov	r2, r5
    3784:	bl	0 <coda_mem_record_add_field>
    3788:	ldr	r0, [r4]
    378c:	bl	0 <ftell>
    3790:	str	r0, [r4, #52]	; 0x34
    3794:	ldr	r3, [r4, #48]	; 0x30
    3798:	add	ip, r3, #1
    379c:	str	ip, [r4, #48]	; 0x30
    37a0:	ldr	r0, [r4]
    37a4:	add	r1, sp, #112	; 0x70
    37a8:	bl	2c40 <get_line>
    37ac:	cmp	r0, #0
    37b0:	bge	37bc <read_header+0xa58>
    37b4:	mvn	r0, #0
    37b8:	b	3b0c <read_header+0xda8>
    37bc:	cmp	r0, #60	; 0x3c
    37c0:	bge	37f0 <read_header+0xa8c>
    37c4:	mvn	r2, #21
    37c8:	ldr	r1, [pc, #900]	; 3b54 <read_header+0xdf0>
    37cc:	ldr	r3, [r4, #48]	; 0x30
    37d0:	ldr	ip, [r4, #52]	; 0x34
    37d4:	str	ip, [sp]
    37d8:	mov	r4, r0
    37dc:	mov	r0, r2
    37e0:	mov	r2, r4
    37e4:	bl	0 <coda_set_error>
    37e8:	mvn	r0, #0
    37ec:	b	3b0c <read_header+0xda8>
    37f0:	add	r0, sp, #112	; 0x70
    37f4:	ldr	r1, [pc, #892]	; 3b78 <read_header+0xe14>
    37f8:	mov	r2, #3
    37fc:	bl	0 <memcmp>
    3800:	cmp	r0, #0
    3804:	beq	3824 <read_header+0xac0>
    3808:	mvn	r0, #21
    380c:	ldr	r1, [pc, #796]	; 3b30 <read_header+0xdcc>
    3810:	ldr	r2, [r4, #48]	; 0x30
    3814:	ldr	r3, [r4, #52]	; 0x34
    3818:	bl	0 <coda_set_error>
    381c:	mvn	r0, #0
    3820:	b	3b0c <read_header+0xda8>
    3824:	add	r0, sp, #48	; 0x30
    3828:	add	r1, sp, #115	; 0x73
    382c:	mov	r2, #2
    3830:	bl	0 <memcpy>
    3834:	mov	r1, #0
    3838:	strb	r1, [sp, #50]	; 0x32
    383c:	ldr	ip, [pc, #740]	; 3b28 <read_header+0xdc4>
    3840:	ldr	r0, [ip]
    3844:	ldr	r0, [r0, #72]	; 0x48
    3848:	mov	r1, #0
    384c:	ldr	r2, [r4, #4]
    3850:	add	r3, sp, #48	; 0x30
    3854:	bl	0 <coda_mem_string_new>
    3858:	ldr	r2, [r4, #8]
    385c:	ldr	r1, [pc, #724]	; 3b38 <read_header+0xdd4>
    3860:	mov	r3, #0
    3864:	mov	ip, r0
    3868:	mov	r0, r2
    386c:	mov	r2, ip
    3870:	bl	0 <coda_mem_record_add_field>
    3874:	add	r0, sp, #48	; 0x30
    3878:	add	r1, sp, #121	; 0x79
    387c:	mov	r2, #3
    3880:	bl	0 <memcpy>
    3884:	mov	r2, #0
    3888:	strb	r2, [sp, #51]	; 0x33
    388c:	ldr	r0, [pc, #660]	; 3b28 <read_header+0xdc4>
    3890:	ldr	r0, [r0]
    3894:	ldr	r0, [r0, #76]	; 0x4c
    3898:	mov	r1, #0
    389c:	ldr	r2, [r4, #4]
    38a0:	add	r3, sp, #48	; 0x30
    38a4:	bl	0 <coda_mem_string_new>
    38a8:	ldr	r2, [r4, #8]
    38ac:	ldr	r1, [pc, #704]	; 3b74 <read_header+0xe10>
    38b0:	mov	r3, #0
    38b4:	mov	ip, r0
    38b8:	mov	r0, r2
    38bc:	mov	r2, ip
    38c0:	bl	0 <coda_mem_record_add_field>
    38c4:	ldr	r0, [r4]
    38c8:	bl	0 <ftell>
    38cc:	str	r0, [r4, #52]	; 0x34
    38d0:	ldr	r0, [r4, #48]	; 0x30
    38d4:	add	r3, r0, #1
    38d8:	str	r3, [r4, #48]	; 0x30
    38dc:	ldr	r0, [r4]
    38e0:	add	r1, sp, #112	; 0x70
    38e4:	bl	2c40 <get_line>
    38e8:	mov	r2, r0
    38ec:	cmp	r2, #0
    38f0:	bge	38fc <read_header+0xb98>
    38f4:	mvn	r0, #0
    38f8:	b	3b0c <read_header+0xda8>
    38fc:	cmp	r2, #60	; 0x3c
    3900:	bge	3924 <read_header+0xbc0>
    3904:	mvn	r0, #21
    3908:	ldr	r1, [pc, #580]	; 3b54 <read_header+0xdf0>
    390c:	ldr	r3, [r4, #48]	; 0x30
    3910:	ldr	r4, [r4, #52]	; 0x34
    3914:	str	r4, [sp]
    3918:	bl	0 <coda_set_error>
    391c:	mvn	r0, #0
    3920:	b	3b0c <read_header+0xda8>
    3924:	add	r0, sp, #112	; 0x70
    3928:	ldr	r1, [pc, #584]	; 3b78 <read_header+0xe14>
    392c:	mov	r2, #3
    3930:	bl	0 <memcmp>
    3934:	cmp	r0, #0
    3938:	beq	3958 <read_header+0xbf4>
    393c:	mvn	r0, #21
    3940:	ldr	r1, [pc, #488]	; 3b30 <read_header+0xdcc>
    3944:	ldr	r2, [r4, #48]	; 0x30
    3948:	ldr	r3, [r4, #52]	; 0x34
    394c:	bl	0 <coda_set_error>
    3950:	mvn	r0, #0
    3954:	b	3b0c <read_header+0xda8>
    3958:	ldr	r0, [r4]
    395c:	bl	0 <ftell>
    3960:	str	r0, [r4, #52]	; 0x34
    3964:	ldr	ip, [r4, #48]	; 0x30
    3968:	add	r2, ip, #1
    396c:	str	r2, [r4, #48]	; 0x30
    3970:	ldr	r0, [r4]
    3974:	add	r1, sp, #112	; 0x70
    3978:	bl	2c40 <get_line>
    397c:	cmp	r0, #0
    3980:	bge	398c <read_header+0xc28>
    3984:	mvn	r0, #0
    3988:	b	3b0c <read_header+0xda8>
    398c:	cmp	r0, #60	; 0x3c
    3990:	bge	39bc <read_header+0xc58>
    3994:	mvn	ip, #21
    3998:	ldr	r1, [pc, #436]	; 3b54 <read_header+0xdf0>
    399c:	ldr	r3, [r4, #48]	; 0x30
    39a0:	ldr	r2, [r4, #52]	; 0x34
    39a4:	str	r2, [sp]
    39a8:	mov	r2, r0
    39ac:	mov	r0, ip
    39b0:	bl	0 <coda_set_error>
    39b4:	mvn	r0, #0
    39b8:	b	3b0c <read_header+0xda8>
    39bc:	add	r0, sp, #112	; 0x70
    39c0:	ldr	r1, [pc, #400]	; 3b58 <read_header+0xdf4>
    39c4:	mov	r2, #3
    39c8:	bl	0 <memcmp>
    39cc:	cmp	r0, #0
    39d0:	beq	39f0 <read_header+0xc8c>
    39d4:	mvn	r0, #21
    39d8:	ldr	r1, [pc, #336]	; 3b30 <read_header+0xdcc>
    39dc:	ldr	r2, [r4, #48]	; 0x30
    39e0:	ldr	r3, [r4, #52]	; 0x34
    39e4:	bl	0 <coda_set_error>
    39e8:	mvn	r0, #0
    39ec:	b	3b0c <read_header+0xda8>
    39f0:	add	r0, sp, #115	; 0x73
    39f4:	mov	r1, #10
    39f8:	add	r2, sp, #32
    39fc:	mov	r3, #0
    3a00:	bl	0 <coda_ascii_parse_double>
    3a04:	cmp	r0, #0
    3a08:	bge	3a28 <read_header+0xcc4>
    3a0c:	ldr	r0, [pc, #280]	; 3b2c <read_header+0xdc8>
    3a10:	ldr	r1, [r4, #48]	; 0x30
    3a14:	ldr	r2, [r4, #52]	; 0x34
    3a18:	add	r2, r2, #3
    3a1c:	bl	0 <coda_add_error_message>
    3a20:	mvn	r0, #0
    3a24:	b	3b0c <read_header+0xda8>
    3a28:	ldr	ip, [pc, #248]	; 3b28 <read_header+0xdc4>
    3a2c:	ldr	r3, [ip]
    3a30:	ldr	r0, [r3, #80]	; 0x50
    3a34:	mov	r1, #0
    3a38:	ldr	r2, [r4, #4]
    3a3c:	vldr	d0, [sp, #32]
    3a40:	bl	0 <coda_mem_double_new>
    3a44:	mov	r2, r0
    3a48:	ldr	r0, [r4, #8]
    3a4c:	ldr	r1, [pc, #236]	; 3b40 <read_header+0xddc>
    3a50:	mov	r3, #0
    3a54:	bl	0 <coda_mem_record_add_field>
    3a58:	add	r0, sp, #126	; 0x7e
    3a5c:	mov	r1, #12
    3a60:	add	r2, sp, #32
    3a64:	mov	r3, #0
    3a68:	bl	0 <coda_ascii_parse_double>
    3a6c:	cmp	r0, #0
    3a70:	bge	3a90 <read_header+0xd2c>
    3a74:	ldr	r0, [pc, #176]	; 3b2c <read_header+0xdc8>
    3a78:	ldr	r1, [r4, #48]	; 0x30
    3a7c:	ldr	r2, [r4, #52]	; 0x34
    3a80:	add	r2, r2, #14
    3a84:	bl	0 <coda_add_error_message>
    3a88:	mvn	r0, #0
    3a8c:	b	3b0c <read_header+0xda8>
    3a90:	ldr	ip, [pc, #144]	; 3b28 <read_header+0xdc4>
    3a94:	ldr	r3, [ip]
    3a98:	ldr	r0, [r3, #84]	; 0x54
    3a9c:	mov	r1, #0
    3aa0:	ldr	r2, [r4, #4]
    3aa4:	vldr	d0, [sp, #32]
    3aa8:	bl	0 <coda_mem_double_new>
    3aac:	mov	r2, r0
    3ab0:	ldr	r0, [r4, #8]
    3ab4:	ldr	r1, [pc, #200]	; 3b84 <read_header+0xe20>
    3ab8:	mov	r3, #0
    3abc:	bl	0 <coda_mem_record_add_field>
    3ac0:	mov	r5, #0
    3ac4:	cmp	r5, #7
    3ac8:	bge	3b08 <read_header+0xda4>
    3acc:	ldr	r0, [r4]
    3ad0:	bl	0 <ftell>
    3ad4:	str	r0, [r4, #52]	; 0x34
    3ad8:	ldr	ip, [r4, #48]	; 0x30
    3adc:	add	r3, ip, #1
    3ae0:	str	r3, [r4, #48]	; 0x30
    3ae4:	ldr	r0, [r4]
    3ae8:	add	r1, sp, #112	; 0x70
    3aec:	bl	2c40 <get_line>
    3af0:	cmp	r0, #0
    3af4:	bge	3b00 <read_header+0xd9c>
    3af8:	mvn	r0, #0
    3afc:	b	3b0c <read_header+0xda8>
    3b00:	add	r5, r5, #1
    3b04:	b	3ac4 <read_header+0xd60>
    3b08:	mov	r0, #0
    3b0c:	ldr	r4, [sp, #16]
    3b10:	ldr	r5, [sp, #20]
    3b14:	ldr	r6, [sp, #24]
    3b18:	ldr	r7, [sp, #28]
    3b1c:	ldr	lr, [sp, #8]
    3b20:	ldr	sp, [sp, #4]
    3b24:	bx	lr
    3b28:	.word	0x00000000
    3b2c:	.word	0x0000071e
    3b30:	.word	0x0000019c
    3b34:	.word	0x00000184
    3b38:	.word	0x000003ac
    3b3c:	.word	0x00000a00
    3b40:	.word	0x000003c0
    3b44:	.word	0x000002b8
    3b48:	.word	0x00000110
    3b4c:	.word	0x000008a7
    3b50:	.word	0x00000959
    3b54:	.word	0x0000011d
    3b58:	.word	0x000009ab
    3b5c:	.word	0x0000001c
    3b60:	.word	0x0000035f
    3b64:	.word	0x000001f9
    3b68:	.word	0x0000089c
    3b6c:	.word	0x0000031c
    3b70:	.word	0x000005ed
    3b74:	.word	0x00000000
    3b78:	.word	0x000003bc
    3b7c:	.word	0x00000a98
    3b80:	.word	0x0000064e
    3b84:	.word	0x0000018e
    3b88:	.word	0x00000625
    3b8c:	.word	0x00000a89
    3b90:	.word	0x000009a6
    3b94:	.word	0x0000092d
    3b98:	.word	0x0000057b

00003b9c <read_records>:
    3b9c:	mov	ip, sp
    3ba0:	sub	sp, sp, #1104	; 0x450
    3ba4:	str	ip, [sp, #4]
    3ba8:	str	lr, [sp, #8]
    3bac:	str	r4, [sp, #16]
    3bb0:	str	r5, [sp, #20]
    3bb4:	mov	r5, r0
    3bb8:	ldr	r0, [r5]
    3bbc:	bl	0 <ftell>
    3bc0:	str	r0, [r5, #52]	; 0x34
    3bc4:	ldr	r1, [r5, #48]	; 0x30
    3bc8:	add	r1, r1, #1
    3bcc:	str	r1, [r5, #48]	; 0x30
    3bd0:	ldr	r0, [r5]
    3bd4:	add	r1, sp, #104	; 0x68
    3bd8:	bl	2c40 <get_line>
    3bdc:	mov	r4, r0
    3be0:	cmp	r4, #0
    3be4:	bge	3bf0 <read_records+0x54>
    3be8:	mvn	r0, #0
    3bec:	b	59cc <read_records+0x1e30>
    3bf0:	add	r0, sp, #104	; 0x68
    3bf4:	ldr	r1, [pc, #3872]	; 4b1c <read_records+0xf80>
    3bf8:	mov	r2, #3
    3bfc:	bl	0 <memcmp>
    3c00:	cmp	r0, #0
    3c04:	beq	5970 <read_records+0x1dd4>
    3c08:	ldrb	ip, [sp, #104]	; 0x68
    3c0c:	cmp	ip, #42	; 0x2a
    3c10:	beq	4808 <read_records+0xc6c>
    3c14:	ldrb	ip, [sp, #104]	; 0x68
    3c18:	cmp	ip, #80	; 0x50
    3c1c:	bne	4290 <read_records+0x6f4>
    3c20:	ldr	r3, [r5, #20]
    3c24:	cmp	r3, #0
    3c28:	bne	3c48 <read_records+0xac>
    3c2c:	mvn	r0, #21
    3c30:	ldr	r1, [pc, #3748]	; 4adc <read_records+0xf40>
    3c34:	ldr	r2, [r5, #48]	; 0x30
    3c38:	ldr	r3, [r5, #52]	; 0x34
    3c3c:	bl	0 <coda_set_error>
    3c40:	mvn	r0, #0
    3c44:	b	59cc <read_records+0x1e30>
    3c48:	ldr	r0, [pc, #3648]	; 4a90 <read_records+0xef4>
    3c4c:	ldr	ip, [r0]
    3c50:	ldr	r0, [ip, #268]	; 0x10c
    3c54:	mov	r1, #0
    3c58:	bl	0 <coda_mem_record_new>
    3c5c:	str	r0, [r5, #24]
    3c60:	cmp	r4, #60	; 0x3c
    3c64:	bge	3c8c <read_records+0xf0>
    3c68:	mvn	r0, #21
    3c6c:	ldr	r1, [pc, #3704]	; 4aec <read_records+0xf50>
    3c70:	ldr	r3, [r5, #48]	; 0x30
    3c74:	ldr	r2, [r5, #52]	; 0x34
    3c78:	str	r2, [sp]
    3c7c:	mov	r2, r4
    3c80:	bl	0 <coda_set_error>
    3c84:	mvn	r0, #0
    3c88:	b	59cc <read_records+0x1e30>
    3c8c:	add	r0, sp, #40	; 0x28
    3c90:	add	r1, sp, #105	; 0x69
    3c94:	mov	r2, #3
    3c98:	bl	0 <memcpy>
    3c9c:	mov	ip, #0
    3ca0:	strb	ip, [sp, #43]	; 0x2b
    3ca4:	ldr	r3, [pc, #3556]	; 4a90 <read_records+0xef4>
    3ca8:	ldr	r2, [r3]
    3cac:	ldr	r0, [r2, #88]	; 0x58
    3cb0:	mov	r1, #0
    3cb4:	ldr	r2, [r5, #4]
    3cb8:	add	r3, sp, #40	; 0x28
    3cbc:	bl	0 <coda_mem_string_new>
    3cc0:	mov	r2, r0
    3cc4:	ldr	r0, [r5, #24]
    3cc8:	ldr	r1, [pc, #3616]	; 4af0 <read_records+0xf54>
    3ccc:	mov	r3, #0
    3cd0:	bl	0 <coda_mem_record_add_field>
    3cd4:	add	r0, sp, #108	; 0x6c
    3cd8:	mov	r1, #14
    3cdc:	add	r2, sp, #24
    3ce0:	mov	r3, #0
    3ce4:	bl	0 <coda_ascii_parse_double>
    3ce8:	cmp	r0, #0
    3cec:	bge	3d0c <read_records+0x170>
    3cf0:	ldr	r0, [pc, #3484]	; 4a94 <read_records+0xef8>
    3cf4:	ldr	r1, [r5, #48]	; 0x30
    3cf8:	ldr	r2, [r5, #52]	; 0x34
    3cfc:	add	r2, r2, #4
    3d00:	bl	0 <coda_add_error_message>
    3d04:	mvn	r0, #0
    3d08:	b	59cc <read_records+0x1e30>
    3d0c:	ldr	r0, [pc, #3452]	; 4a90 <read_records+0xef4>
    3d10:	ldr	r3, [r0]
    3d14:	ldr	r0, [r3, #92]	; 0x5c
    3d18:	mov	r1, #0
    3d1c:	ldr	r2, [r5, #4]
    3d20:	vldr	d0, [sp, #24]
    3d24:	bl	0 <coda_mem_double_new>
    3d28:	mov	r2, r0
    3d2c:	ldr	r0, [r5, #24]
    3d30:	ldr	r1, [pc, #3432]	; 4aa0 <read_records+0xf04>
    3d34:	mov	r3, #0
    3d38:	bl	0 <coda_mem_record_add_field>
    3d3c:	add	r0, sp, #122	; 0x7a
    3d40:	mov	r1, #14
    3d44:	add	r2, sp, #24
    3d48:	mov	r3, #0
    3d4c:	bl	0 <coda_ascii_parse_double>
    3d50:	cmp	r0, #0
    3d54:	bge	3d74 <read_records+0x1d8>
    3d58:	ldr	r0, [pc, #3380]	; 4a94 <read_records+0xef8>
    3d5c:	ldr	r1, [r5, #48]	; 0x30
    3d60:	ldr	ip, [r5, #52]	; 0x34
    3d64:	add	r2, ip, #18
    3d68:	bl	0 <coda_add_error_message>
    3d6c:	mvn	r0, #0
    3d70:	b	59cc <read_records+0x1e30>
    3d74:	ldr	r3, [pc, #3348]	; 4a90 <read_records+0xef4>
    3d78:	ldr	ip, [r3]
    3d7c:	ldr	r0, [ip, #96]	; 0x60
    3d80:	mov	r1, #0
    3d84:	ldr	r2, [r5, #4]
    3d88:	vldr	d0, [sp, #24]
    3d8c:	bl	0 <coda_mem_double_new>
    3d90:	mov	r2, r0
    3d94:	ldr	r0, [r5, #24]
    3d98:	ldr	r1, [pc, #3320]	; 4a98 <read_records+0xefc>
    3d9c:	mov	r3, #0
    3da0:	bl	0 <coda_mem_record_add_field>
    3da4:	add	r0, sp, #136	; 0x88
    3da8:	mov	r1, #14
    3dac:	add	r2, sp, #24
    3db0:	mov	r3, #0
    3db4:	bl	0 <coda_ascii_parse_double>
    3db8:	cmp	r0, #0
    3dbc:	bge	3ddc <read_records+0x240>
    3dc0:	ldr	r0, [pc, #3276]	; 4a94 <read_records+0xef8>
    3dc4:	ldr	r1, [r5, #48]	; 0x30
    3dc8:	ldr	r3, [r5, #52]	; 0x34
    3dcc:	add	r2, r3, #32
    3dd0:	bl	0 <coda_add_error_message>
    3dd4:	mvn	r0, #0
    3dd8:	b	59cc <read_records+0x1e30>
    3ddc:	ldr	r0, [pc, #3244]	; 4a90 <read_records+0xef4>
    3de0:	ldr	ip, [r0]
    3de4:	ldr	r0, [ip, #100]	; 0x64
    3de8:	mov	r1, #0
    3dec:	ldr	r2, [r5, #4]
    3df0:	vldr	d0, [sp, #24]
    3df4:	bl	0 <coda_mem_double_new>
    3df8:	mov	r2, r0
    3dfc:	ldr	r0, [r5, #24]
    3e00:	ldr	r1, [pc, #3292]	; 4ae4 <read_records+0xf48>
    3e04:	mov	r3, #0
    3e08:	bl	0 <coda_mem_record_add_field>
    3e0c:	add	r0, sp, #150	; 0x96
    3e10:	mov	r1, #14
    3e14:	add	r2, sp, #24
    3e18:	mov	r3, #0
    3e1c:	bl	0 <coda_ascii_parse_double>
    3e20:	cmp	r0, #0
    3e24:	bge	3e44 <read_records+0x2a8>
    3e28:	ldr	r0, [pc, #3172]	; 4a94 <read_records+0xef8>
    3e2c:	ldr	r1, [r5, #48]	; 0x30
    3e30:	ldr	ip, [r5, #52]	; 0x34
    3e34:	add	r2, ip, #46	; 0x2e
    3e38:	bl	0 <coda_add_error_message>
    3e3c:	mvn	r0, #0
    3e40:	b	59cc <read_records+0x1e30>
    3e44:	ldr	r1, [pc, #3140]	; 4a90 <read_records+0xef4>
    3e48:	ldr	r3, [r1]
    3e4c:	ldr	r0, [r3, #104]	; 0x68
    3e50:	mov	r1, #0
    3e54:	ldr	r2, [r5, #4]
    3e58:	vldr	d0, [sp, #24]
    3e5c:	bl	0 <coda_mem_double_new>
    3e60:	mov	r2, r0
    3e64:	ldr	r0, [r5, #24]
    3e68:	ldr	r1, [pc, #3172]	; 4ad4 <read_records+0xf38>
    3e6c:	mov	r3, #0
    3e70:	bl	0 <coda_mem_record_add_field>
    3e74:	cmp	r4, #64	; 0x40
    3e78:	blt	3e9c <read_records+0x300>
    3e7c:	add	r0, sp, #165	; 0xa5
    3e80:	ldr	r1, [pc, #3124]	; 4abc <read_records+0xf20>
    3e84:	mov	r2, #2
    3e88:	bl	0 <memcmp>
    3e8c:	cmp	r0, #0
    3e90:	moveq	r2, #1
    3e94:	movne	r2, #0
    3e98:	b	3ea0 <read_records+0x304>
    3e9c:	mov	r2, #1
    3ea0:	cmp	r2, #0
    3ea4:	bne	3ee0 <read_records+0x344>
    3ea8:	add	r0, sp, #165	; 0xa5
    3eac:	mov	r1, #2
    3eb0:	add	r2, sp, #32
    3eb4:	mov	r3, #0
    3eb8:	bl	0 <coda_ascii_parse_int64>
    3ebc:	cmp	r0, #0
    3ec0:	bge	3ef0 <read_records+0x354>
    3ec4:	ldr	r0, [pc, #3016]	; 4a94 <read_records+0xef8>
    3ec8:	ldr	r1, [r5, #48]	; 0x30
    3ecc:	ldr	r2, [r5, #52]	; 0x34
    3ed0:	add	r2, r2, #61	; 0x3d
    3ed4:	bl	0 <coda_add_error_message>
    3ed8:	mvn	r0, #0
    3edc:	b	59cc <read_records+0x1e30>
    3ee0:	mov	ip, #0
    3ee4:	mov	r3, #0
    3ee8:	str	r3, [sp, #32]
    3eec:	str	ip, [sp, #36]	; 0x24
    3ef0:	ldr	r1, [pc, #2968]	; 4a90 <read_records+0xef4>
    3ef4:	ldr	r0, [r1]
    3ef8:	ldr	r0, [r0, #108]	; 0x6c
    3efc:	mov	r1, #0
    3f00:	ldr	r2, [r5, #4]
    3f04:	ldr	r3, [sp, #32]
    3f08:	sbfx	r3, r3, #0, #8
    3f0c:	sbfx	r3, r3, #0, #8
    3f10:	bl	0 <coda_mem_int8_new>
    3f14:	mov	r2, r0
    3f18:	ldr	r0, [r5, #24]
    3f1c:	ldr	r1, [pc, #2948]	; 4aa8 <read_records+0xf0c>
    3f20:	mov	r3, #0
    3f24:	bl	0 <coda_mem_record_add_field>
    3f28:	cmp	r4, #66	; 0x42
    3f2c:	blt	3f50 <read_records+0x3b4>
    3f30:	add	r0, sp, #168	; 0xa8
    3f34:	ldr	r1, [pc, #2944]	; 4abc <read_records+0xf20>
    3f38:	mov	r2, #2
    3f3c:	bl	0 <memcmp>
    3f40:	cmp	r0, #0
    3f44:	moveq	ip, #1
    3f48:	movne	ip, #0
    3f4c:	b	3f54 <read_records+0x3b8>
    3f50:	mov	ip, #1
    3f54:	cmp	ip, #0
    3f58:	bne	3f94 <read_records+0x3f8>
    3f5c:	add	r0, sp, #168	; 0xa8
    3f60:	mov	r1, #2
    3f64:	add	r2, sp, #32
    3f68:	mov	r3, #0
    3f6c:	bl	0 <coda_ascii_parse_int64>
    3f70:	cmp	r0, #0
    3f74:	bge	3fa4 <read_records+0x408>
    3f78:	ldr	r0, [pc, #2836]	; 4a94 <read_records+0xef8>
    3f7c:	ldr	r1, [r5, #48]	; 0x30
    3f80:	ldr	ip, [r5, #52]	; 0x34
    3f84:	add	r2, ip, #64	; 0x40
    3f88:	bl	0 <coda_add_error_message>
    3f8c:	mvn	r0, #0
    3f90:	b	59cc <read_records+0x1e30>
    3f94:	mov	r3, #0
    3f98:	mov	r2, #0
    3f9c:	str	r2, [sp, #32]
    3fa0:	str	r3, [sp, #36]	; 0x24
    3fa4:	ldr	r3, [pc, #2788]	; 4a90 <read_records+0xef4>
    3fa8:	ldr	r1, [r3]
    3fac:	ldr	r0, [r1, #112]	; 0x70
    3fb0:	mov	r1, #0
    3fb4:	ldr	r2, [r5, #4]
    3fb8:	ldr	r3, [sp, #32]
    3fbc:	sbfx	ip, r3, #0, #8
    3fc0:	sbfx	r3, ip, #0, #8
    3fc4:	bl	0 <coda_mem_int8_new>
    3fc8:	ldr	r2, [r5, #24]
    3fcc:	ldr	r1, [pc, #2876]	; 4b10 <read_records+0xf74>
    3fd0:	mov	r3, #0
    3fd4:	mov	ip, r0
    3fd8:	mov	r0, r2
    3fdc:	mov	r2, ip
    3fe0:	bl	0 <coda_mem_record_add_field>
    3fe4:	cmp	r4, #69	; 0x45
    3fe8:	blt	400c <read_records+0x470>
    3fec:	add	r0, sp, #171	; 0xab
    3ff0:	ldr	r1, [pc, #2756]	; 4abc <read_records+0xf20>
    3ff4:	mov	r2, #2
    3ff8:	bl	0 <memcmp>
    3ffc:	cmp	r0, #0
    4000:	moveq	r0, #1
    4004:	movne	r0, #0
    4008:	b	4010 <read_records+0x474>
    400c:	mov	r0, #1
    4010:	cmp	r0, #0
    4014:	bne	4050 <read_records+0x4b4>
    4018:	add	r0, sp, #171	; 0xab
    401c:	mov	r1, #2
    4020:	add	r2, sp, #32
    4024:	mov	r3, #0
    4028:	bl	0 <coda_ascii_parse_int64>
    402c:	cmp	r0, #0
    4030:	bge	4060 <read_records+0x4c4>
    4034:	ldr	r0, [pc, #2648]	; 4a94 <read_records+0xef8>
    4038:	ldr	r1, [r5, #48]	; 0x30
    403c:	ldr	r2, [r5, #52]	; 0x34
    4040:	add	r2, r2, #67	; 0x43
    4044:	bl	0 <coda_add_error_message>
    4048:	mvn	r0, #0
    404c:	b	59cc <read_records+0x1e30>
    4050:	mov	r0, #0
    4054:	mov	ip, #0
    4058:	str	ip, [sp, #32]
    405c:	str	r0, [sp, #36]	; 0x24
    4060:	ldr	r0, [pc, #2600]	; 4a90 <read_records+0xef4>
    4064:	ldr	r2, [r0]
    4068:	ldr	r0, [r2, #116]	; 0x74
    406c:	mov	r1, #0
    4070:	ldr	r2, [r5, #4]
    4074:	ldr	r3, [sp, #32]
    4078:	sbfx	r3, r3, #0, #8
    407c:	sbfx	r3, r3, #0, #8
    4080:	bl	0 <coda_mem_int8_new>
    4084:	mov	r2, r0
    4088:	ldr	r0, [r5, #24]
    408c:	ldr	r1, [pc, #2656]	; 4af4 <read_records+0xf58>
    4090:	mov	r3, #0
    4094:	bl	0 <coda_mem_record_add_field>
    4098:	cmp	r4, #73	; 0x49
    409c:	blt	40c0 <read_records+0x524>
    40a0:	add	r0, sp, #174	; 0xae
    40a4:	ldr	r1, [pc, #2664]	; 4b14 <read_records+0xf78>
    40a8:	mov	r2, #3
    40ac:	bl	0 <memcmp>
    40b0:	cmp	r0, #0
    40b4:	moveq	r3, #1
    40b8:	movne	r3, #0
    40bc:	b	40c4 <read_records+0x528>
    40c0:	mov	r3, #1
    40c4:	cmp	r3, #0
    40c8:	bne	4104 <read_records+0x568>
    40cc:	add	r0, sp, #174	; 0xae
    40d0:	mov	r1, #3
    40d4:	add	r2, sp, #32
    40d8:	mov	r3, #0
    40dc:	bl	0 <coda_ascii_parse_int64>
    40e0:	cmp	r0, #0
    40e4:	bge	4114 <read_records+0x578>
    40e8:	ldr	r0, [pc, #2468]	; 4a94 <read_records+0xef8>
    40ec:	ldr	r1, [r5, #48]	; 0x30
    40f0:	ldr	ip, [r5, #52]	; 0x34
    40f4:	add	r2, ip, #70	; 0x46
    40f8:	bl	0 <coda_add_error_message>
    40fc:	mvn	r0, #0
    4100:	b	59cc <read_records+0x1e30>
    4104:	mov	r2, #0
    4108:	mov	r1, #0
    410c:	str	r1, [sp, #32]
    4110:	str	r2, [sp, #36]	; 0x24
    4114:	ldr	r3, [pc, #2420]	; 4a90 <read_records+0xef4>
    4118:	ldr	r2, [r3]
    411c:	ldr	r0, [r2, #120]	; 0x78
    4120:	mov	r1, #0
    4124:	ldr	r2, [r5, #4]
    4128:	ldr	r3, [sp, #32]
    412c:	sbfx	r3, r3, #0, #16
    4130:	sbfx	r3, r3, #0, #16
    4134:	bl	0 <coda_mem_int16_new>
    4138:	ldr	r2, [r5, #24]
    413c:	ldr	r1, [pc, #2432]	; 4ac4 <read_records+0xf28>
    4140:	mov	r3, #0
    4144:	mov	ip, r0
    4148:	mov	r0, r2
    414c:	mov	r2, ip
    4150:	bl	0 <coda_mem_record_add_field>
    4154:	cmp	r4, #75	; 0x4b
    4158:	blt	4164 <read_records+0x5c8>
    415c:	ldrb	r3, [sp, #178]	; 0xb2
    4160:	b	4168 <read_records+0x5cc>
    4164:	mov	r3, #32
    4168:	and	r3, r3, #255	; 0xff
    416c:	strb	r3, [sp, #40]	; 0x28
    4170:	mov	r0, #0
    4174:	strb	r0, [sp, #41]	; 0x29
    4178:	ldr	ip, [pc, #2320]	; 4a90 <read_records+0xef4>
    417c:	ldr	r1, [ip]
    4180:	ldr	r0, [r1, #124]	; 0x7c
    4184:	mov	r1, #0
    4188:	ldr	r2, [r5, #4]
    418c:	add	r3, sp, #40	; 0x28
    4190:	bl	0 <coda_mem_string_new>
    4194:	mov	r2, r0
    4198:	ldr	r0, [r5, #24]
    419c:	ldr	r1, [pc, #2364]	; 4ae0 <read_records+0xf44>
    41a0:	mov	r3, #0
    41a4:	bl	0 <coda_mem_record_add_field>
    41a8:	cmp	r4, #76	; 0x4c
    41ac:	blt	41b8 <read_records+0x61c>
    41b0:	ldrb	r3, [sp, #179]	; 0xb3
    41b4:	b	41bc <read_records+0x620>
    41b8:	mov	r3, #32
    41bc:	and	r1, r3, #255	; 0xff
    41c0:	strb	r1, [sp, #40]	; 0x28
    41c4:	ldr	r1, [pc, #2244]	; 4a90 <read_records+0xef4>
    41c8:	ldr	r2, [r1]
    41cc:	ldr	r0, [r2, #128]	; 0x80
    41d0:	mov	r1, #0
    41d4:	ldr	r2, [r5, #4]
    41d8:	add	r3, sp, #40	; 0x28
    41dc:	bl	0 <coda_mem_string_new>
    41e0:	mov	r2, r0
    41e4:	ldr	r0, [r5, #24]
    41e8:	ldr	r1, [pc, #2256]	; 4ac0 <read_records+0xf24>
    41ec:	mov	r3, #0
    41f0:	bl	0 <coda_mem_record_add_field>
    41f4:	cmp	r4, #79	; 0x4f
    41f8:	blt	4204 <read_records+0x668>
    41fc:	ldrb	r1, [sp, #182]	; 0xb6
    4200:	b	4208 <read_records+0x66c>
    4204:	mov	r1, #32
    4208:	and	r3, r1, #255	; 0xff
    420c:	strb	r3, [sp, #40]	; 0x28
    4210:	ldr	r1, [pc, #2168]	; 4a90 <read_records+0xef4>
    4214:	ldr	r3, [r1]
    4218:	ldr	r0, [r3, #132]	; 0x84
    421c:	mov	r1, #0
    4220:	ldr	r2, [r5, #4]
    4224:	add	r3, sp, #40	; 0x28
    4228:	bl	0 <coda_mem_string_new>
    422c:	mov	r2, r0
    4230:	ldr	r0, [r5, #24]
    4234:	ldr	r1, [pc, #2268]	; 4b18 <read_records+0xf7c>
    4238:	mov	r3, #0
    423c:	bl	0 <coda_mem_record_add_field>
    4240:	cmp	r4, #80	; 0x50
    4244:	blt	4250 <read_records+0x6b4>
    4248:	ldrb	r3, [sp, #183]	; 0xb7
    424c:	b	4254 <read_records+0x6b8>
    4250:	mov	r3, #32
    4254:	and	r2, r3, #255	; 0xff
    4258:	strb	r2, [sp, #40]	; 0x28
    425c:	ldr	r3, [pc, #2092]	; 4a90 <read_records+0xef4>
    4260:	ldr	ip, [r3]
    4264:	ldr	r0, [ip, #136]	; 0x88
    4268:	mov	r1, #0
    426c:	ldr	r2, [r5, #4]
    4270:	add	r3, sp, #40	; 0x28
    4274:	bl	0 <coda_mem_string_new>
    4278:	mov	r2, r0
    427c:	ldr	r0, [r5, #24]
    4280:	ldr	r1, [pc, #2176]	; 4b08 <read_records+0xf6c>
    4284:	mov	r3, #0
    4288:	bl	0 <coda_mem_record_add_field>
    428c:	b	4954 <read_records+0xdb8>
    4290:	ldrb	ip, [sp, #104]	; 0x68
    4294:	cmp	ip, #86	; 0x56
    4298:	bne	47ec <read_records+0xc50>
    429c:	ldrb	r1, [r5, #44]	; 0x2c
    42a0:	cmp	r1, #86	; 0x56
    42a4:	beq	42c4 <read_records+0x728>
    42a8:	mvn	r0, #21
    42ac:	ldr	r1, [pc, #2044]	; 4ab0 <read_records+0xf14>
    42b0:	ldr	r2, [r5, #48]	; 0x30
    42b4:	ldr	r3, [r5, #52]	; 0x34
    42b8:	bl	0 <coda_set_error>
    42bc:	mvn	r0, #0
    42c0:	b	59cc <read_records+0x1e30>
    42c4:	ldr	r1, [r5, #28]
    42c8:	cmp	r1, #0
    42cc:	bne	42ec <read_records+0x750>
    42d0:	mvn	r0, #21
    42d4:	ldr	r1, [pc, #2028]	; 4ac8 <read_records+0xf2c>
    42d8:	ldr	r2, [r5, #48]	; 0x30
    42dc:	ldr	r3, [r5, #52]	; 0x34
    42e0:	bl	0 <coda_set_error>
    42e4:	mvn	r0, #0
    42e8:	b	59cc <read_records+0x1e30>
    42ec:	ldr	r1, [pc, #1948]	; 4a90 <read_records+0xef4>
    42f0:	ldr	r0, [r1]
    42f4:	ldr	r0, [r0, #276]	; 0x114
    42f8:	mov	r1, #0
    42fc:	bl	0 <coda_mem_record_new>
    4300:	str	r0, [r5, #32]
    4304:	cmp	r4, #60	; 0x3c
    4308:	bge	4330 <read_records+0x794>
    430c:	mvn	r0, #21
    4310:	ldr	r1, [pc, #2004]	; 4aec <read_records+0xf50>
    4314:	ldr	r3, [r5, #48]	; 0x30
    4318:	ldr	r2, [r5, #52]	; 0x34
    431c:	str	r2, [sp]
    4320:	mov	r2, r4
    4324:	bl	0 <coda_set_error>
    4328:	mvn	r0, #0
    432c:	b	59cc <read_records+0x1e30>
    4330:	add	r0, sp, #40	; 0x28
    4334:	add	r1, sp, #105	; 0x69
    4338:	mov	r2, #3
    433c:	bl	0 <memcpy>
    4340:	mov	r2, #0
    4344:	strb	r2, [sp, #43]	; 0x2b
    4348:	ldr	r1, [pc, #1856]	; 4a90 <read_records+0xef4>
    434c:	ldr	r0, [r1]
    4350:	ldr	r0, [r0, #88]	; 0x58
    4354:	mov	r1, #0
    4358:	ldr	r2, [r5, #4]
    435c:	add	r3, sp, #40	; 0x28
    4360:	bl	0 <coda_mem_string_new>
    4364:	mov	r2, r0
    4368:	ldr	r0, [r5, #32]
    436c:	ldr	r1, [pc, #1916]	; 4af0 <read_records+0xf54>
    4370:	mov	r3, #0
    4374:	bl	0 <coda_mem_record_add_field>
    4378:	add	r0, sp, #108	; 0x6c
    437c:	mov	r1, #14
    4380:	add	r2, sp, #24
    4384:	mov	r3, #0
    4388:	bl	0 <coda_ascii_parse_double>
    438c:	cmp	r0, #0
    4390:	bge	43b0 <read_records+0x814>
    4394:	ldr	r0, [pc, #1784]	; 4a94 <read_records+0xef8>
    4398:	ldr	r1, [r5, #48]	; 0x30
    439c:	ldr	r2, [r5, #52]	; 0x34
    43a0:	add	r2, r2, #4
    43a4:	bl	0 <coda_add_error_message>
    43a8:	mvn	r0, #0
    43ac:	b	59cc <read_records+0x1e30>
    43b0:	ldr	r2, [pc, #1752]	; 4a90 <read_records+0xef4>
    43b4:	ldr	r1, [r2]
    43b8:	ldr	r0, [r1, #184]	; 0xb8
    43bc:	mov	r1, #0
    43c0:	ldr	r2, [r5, #4]
    43c4:	vldr	d0, [sp, #24]
    43c8:	bl	0 <coda_mem_double_new>
    43cc:	mov	r2, r0
    43d0:	ldr	r0, [r5, #32]
    43d4:	ldr	r1, [pc, #1728]	; 4a9c <read_records+0xf00>
    43d8:	mov	r3, #0
    43dc:	bl	0 <coda_mem_record_add_field>
    43e0:	add	r0, sp, #122	; 0x7a
    43e4:	mov	r1, #14
    43e8:	add	r2, sp, #24
    43ec:	mov	r3, #0
    43f0:	bl	0 <coda_ascii_parse_double>
    43f4:	cmp	r0, #0
    43f8:	bge	4418 <read_records+0x87c>
    43fc:	ldr	r0, [pc, #1680]	; 4a94 <read_records+0xef8>
    4400:	ldr	r1, [r5, #48]	; 0x30
    4404:	ldr	r2, [r5, #52]	; 0x34
    4408:	add	r2, r2, #18
    440c:	bl	0 <coda_add_error_message>
    4410:	mvn	r0, #0
    4414:	b	59cc <read_records+0x1e30>
    4418:	ldr	r1, [pc, #1648]	; 4a90 <read_records+0xef4>
    441c:	ldr	r2, [r1]
    4420:	ldr	r0, [r2, #188]	; 0xbc
    4424:	mov	r1, #0
    4428:	ldr	r2, [r5, #4]
    442c:	vldr	d0, [sp, #24]
    4430:	bl	0 <coda_mem_double_new>
    4434:	mov	r2, r0
    4438:	ldr	r0, [r5, #32]
    443c:	ldr	r1, [pc, #1632]	; 4aa4 <read_records+0xf08>
    4440:	mov	r3, #0
    4444:	bl	0 <coda_mem_record_add_field>
    4448:	add	r0, sp, #136	; 0x88
    444c:	mov	r1, #14
    4450:	add	r2, sp, #24
    4454:	mov	r3, #0
    4458:	bl	0 <coda_ascii_parse_double>
    445c:	cmp	r0, #0
    4460:	bge	4480 <read_records+0x8e4>
    4464:	ldr	r0, [pc, #1576]	; 4a94 <read_records+0xef8>
    4468:	ldr	r1, [r5, #48]	; 0x30
    446c:	ldr	r2, [r5, #52]	; 0x34
    4470:	add	r2, r2, #32
    4474:	bl	0 <coda_add_error_message>
    4478:	mvn	r0, #0
    447c:	b	59cc <read_records+0x1e30>
    4480:	ldr	r1, [pc, #1544]	; 4a90 <read_records+0xef4>
    4484:	ldr	r0, [r1]
    4488:	ldr	r0, [r0, #192]	; 0xc0
    448c:	mov	r1, #0
    4490:	ldr	r2, [r5, #4]
    4494:	vldr	d0, [sp, #24]
    4498:	bl	0 <coda_mem_double_new>
    449c:	mov	r2, r0
    44a0:	ldr	r0, [r5, #32]
    44a4:	ldr	r1, [pc, #1580]	; 4ad8 <read_records+0xf3c>
    44a8:	mov	r3, #0
    44ac:	bl	0 <coda_mem_record_add_field>
    44b0:	add	r0, sp, #150	; 0x96
    44b4:	mov	r1, #14
    44b8:	add	r2, sp, #24
    44bc:	mov	r3, #0
    44c0:	bl	0 <coda_ascii_parse_double>
    44c4:	cmp	r0, #0
    44c8:	bge	44e8 <read_records+0x94c>
    44cc:	ldr	r0, [pc, #1472]	; 4a94 <read_records+0xef8>
    44d0:	ldr	r1, [r5, #48]	; 0x30
    44d4:	ldr	ip, [r5, #52]	; 0x34
    44d8:	add	r2, ip, #46	; 0x2e
    44dc:	bl	0 <coda_add_error_message>
    44e0:	mvn	r0, #0
    44e4:	b	59cc <read_records+0x1e30>
    44e8:	ldr	ip, [pc, #1440]	; 4a90 <read_records+0xef4>
    44ec:	ldr	r3, [ip]
    44f0:	ldr	r0, [r3, #196]	; 0xc4
    44f4:	mov	r1, #0
    44f8:	ldr	r2, [r5, #4]
    44fc:	vldr	d0, [sp, #24]
    4500:	bl	0 <coda_mem_double_new>
    4504:	mov	r2, r0
    4508:	ldr	r0, [r5, #32]
    450c:	ldr	r1, [pc, #1516]	; 4b00 <read_records+0xf64>
    4510:	mov	r3, #0
    4514:	bl	0 <coda_mem_record_add_field>
    4518:	cmp	r4, #63	; 0x3f
    451c:	blt	4540 <read_records+0x9a4>
    4520:	add	r0, sp, #165	; 0xa5
    4524:	ldr	r1, [pc, #1424]	; 4abc <read_records+0xf20>
    4528:	mov	r2, #2
    452c:	bl	0 <memcmp>
    4530:	cmp	r0, #0
    4534:	moveq	r2, #1
    4538:	movne	r2, #0
    453c:	b	4544 <read_records+0x9a8>
    4540:	mov	r2, #1
    4544:	cmp	r2, #0
    4548:	bne	4584 <read_records+0x9e8>
    454c:	add	r0, sp, #165	; 0xa5
    4550:	mov	r1, #2
    4554:	add	r2, sp, #32
    4558:	mov	r3, #0
    455c:	bl	0 <coda_ascii_parse_int64>
    4560:	cmp	r0, #0
    4564:	bge	4594 <read_records+0x9f8>
    4568:	ldr	r0, [pc, #1316]	; 4a94 <read_records+0xef8>
    456c:	ldr	r1, [r5, #48]	; 0x30
    4570:	ldr	r2, [r5, #52]	; 0x34
    4574:	add	r2, r2, #61	; 0x3d
    4578:	bl	0 <coda_add_error_message>
    457c:	mvn	r0, #0
    4580:	b	59cc <read_records+0x1e30>
    4584:	mov	r1, #0
    4588:	mov	r0, #0
    458c:	str	r0, [sp, #32]
    4590:	str	r1, [sp, #36]	; 0x24
    4594:	ldr	r0, [pc, #1268]	; 4a90 <read_records+0xef4>
    4598:	ldr	r0, [r0]
    459c:	ldr	r0, [r0, #200]	; 0xc8
    45a0:	mov	r1, #0
    45a4:	ldr	r2, [r5, #4]
    45a8:	ldr	r3, [sp, #32]
    45ac:	sbfx	r3, r3, #0, #8
    45b0:	sbfx	r3, r3, #0, #8
    45b4:	bl	0 <coda_mem_int8_new>
    45b8:	mov	r2, r0
    45bc:	ldr	r0, [r5, #32]
    45c0:	ldr	r1, [pc, #1264]	; 4ab8 <read_records+0xf1c>
    45c4:	mov	r3, #0
    45c8:	bl	0 <coda_mem_record_add_field>
    45cc:	cmp	r4, #66	; 0x42
    45d0:	blt	45f4 <read_records+0xa58>
    45d4:	add	r0, sp, #168	; 0xa8
    45d8:	ldr	r1, [pc, #1244]	; 4abc <read_records+0xf20>
    45dc:	mov	r2, #2
    45e0:	bl	0 <memcmp>
    45e4:	cmp	r0, #0
    45e8:	moveq	r0, #1
    45ec:	movne	r0, #0
    45f0:	b	45f8 <read_records+0xa5c>
    45f4:	mov	r0, #1
    45f8:	cmp	r0, #0
    45fc:	bne	4638 <read_records+0xa9c>
    4600:	add	r0, sp, #168	; 0xa8
    4604:	mov	r1, #2
    4608:	add	r2, sp, #32
    460c:	mov	r3, #0
    4610:	bl	0 <coda_ascii_parse_int64>
    4614:	cmp	r0, #0
    4618:	bge	4648 <read_records+0xaac>
    461c:	ldr	r0, [pc, #1136]	; 4a94 <read_records+0xef8>
    4620:	ldr	r1, [r5, #48]	; 0x30
    4624:	ldr	r2, [r5, #52]	; 0x34
    4628:	add	r2, r2, #64	; 0x40
    462c:	bl	0 <coda_add_error_message>
    4630:	mvn	r0, #0
    4634:	b	59cc <read_records+0x1e30>
    4638:	mov	r1, #0
    463c:	mov	r0, #0
    4640:	str	r0, [sp, #32]
    4644:	str	r1, [sp, #36]	; 0x24
    4648:	ldr	r2, [pc, #1088]	; 4a90 <read_records+0xef4>
    464c:	ldr	r2, [r2]
    4650:	ldr	r0, [r2, #204]	; 0xcc
    4654:	mov	r1, #0
    4658:	ldr	r2, [r5, #4]
    465c:	ldr	r3, [sp, #32]
    4660:	sbfx	ip, r3, #0, #8
    4664:	sbfx	r3, ip, #0, #8
    4668:	bl	0 <coda_mem_int8_new>
    466c:	mov	r2, r0
    4670:	ldr	r0, [r5, #32]
    4674:	ldr	r1, [pc, #1108]	; 4ad0 <read_records+0xf34>
    4678:	mov	r3, #0
    467c:	bl	0 <coda_mem_record_add_field>
    4680:	cmp	r4, #69	; 0x45
    4684:	blt	46a8 <read_records+0xb0c>
    4688:	add	r0, sp, #171	; 0xab
    468c:	ldr	r1, [pc, #1064]	; 4abc <read_records+0xf20>
    4690:	mov	r2, #2
    4694:	bl	0 <memcmp>
    4698:	cmp	r0, #0
    469c:	moveq	ip, #1
    46a0:	movne	ip, #0
    46a4:	b	46ac <read_records+0xb10>
    46a8:	mov	ip, #1
    46ac:	cmp	ip, #0
    46b0:	bne	46ec <read_records+0xb50>
    46b4:	add	r0, sp, #171	; 0xab
    46b8:	mov	r1, #2
    46bc:	add	r2, sp, #32
    46c0:	mov	r3, #0
    46c4:	bl	0 <coda_ascii_parse_int64>
    46c8:	cmp	r0, #0
    46cc:	bge	46fc <read_records+0xb60>
    46d0:	ldr	r0, [pc, #956]	; 4a94 <read_records+0xef8>
    46d4:	ldr	r1, [r5, #48]	; 0x30
    46d8:	ldr	r2, [r5, #52]	; 0x34
    46dc:	add	r2, r2, #67	; 0x43
    46e0:	bl	0 <coda_add_error_message>
    46e4:	mvn	r0, #0
    46e8:	b	59cc <read_records+0x1e30>
    46ec:	mov	r1, #0
    46f0:	mov	r0, #0
    46f4:	str	r0, [sp, #32]
    46f8:	str	r1, [sp, #36]	; 0x24
    46fc:	ldr	r3, [pc, #908]	; 4a90 <read_records+0xef4>
    4700:	ldr	r0, [r3]
    4704:	ldr	r0, [r0, #208]	; 0xd0
    4708:	mov	r1, #0
    470c:	ldr	r2, [r5, #4]
    4710:	ldr	r3, [sp, #32]
    4714:	sbfx	r3, r3, #0, #8
    4718:	sbfx	r3, r3, #0, #8
    471c:	bl	0 <coda_mem_int8_new>
    4720:	mov	r2, r0
    4724:	ldr	r0, [r5, #32]
    4728:	ldr	r1, [pc, #900]	; 4ab4 <read_records+0xf18>
    472c:	mov	r3, #0
    4730:	bl	0 <coda_mem_record_add_field>
    4734:	cmp	r4, #73	; 0x49
    4738:	blt	475c <read_records+0xbc0>
    473c:	add	r0, sp, #174	; 0xae
    4740:	ldr	r1, [pc, #972]	; 4b14 <read_records+0xf78>
    4744:	mov	r2, #3
    4748:	bl	0 <memcmp>
    474c:	cmp	r0, #0
    4750:	moveq	r1, #1
    4754:	movne	r1, #0
    4758:	b	4760 <read_records+0xbc4>
    475c:	mov	r1, #1
    4760:	cmp	r1, #0
    4764:	bne	47a0 <read_records+0xc04>
    4768:	add	r0, sp, #174	; 0xae
    476c:	mov	r1, #3
    4770:	add	r2, sp, #32
    4774:	mov	r3, #0
    4778:	bl	0 <coda_ascii_parse_int64>
    477c:	cmp	r0, #0
    4780:	bge	47b0 <read_records+0xc14>
    4784:	ldr	r0, [pc, #776]	; 4a94 <read_records+0xef8>
    4788:	ldr	r1, [r5, #48]	; 0x30
    478c:	ldr	r2, [r5, #52]	; 0x34
    4790:	add	r2, r2, #70	; 0x46
    4794:	bl	0 <coda_add_error_message>
    4798:	mvn	r0, #0
    479c:	b	59cc <read_records+0x1e30>
    47a0:	mov	ip, #0
    47a4:	mov	r3, #0
    47a8:	str	r3, [sp, #32]
    47ac:	str	ip, [sp, #36]	; 0x24
    47b0:	ldr	ip, [pc, #728]	; 4a90 <read_records+0xef4>
    47b4:	ldr	r2, [ip]
    47b8:	ldr	r0, [r2, #212]	; 0xd4
    47bc:	mov	r1, #0
    47c0:	ldr	r2, [r5, #4]
    47c4:	ldr	r3, [sp, #32]
    47c8:	sbfx	r3, r3, #0, #16
    47cc:	sbfx	r3, r3, #0, #16
    47d0:	bl	0 <coda_mem_int16_new>
    47d4:	mov	r2, r0
    47d8:	ldr	r0, [r5, #32]
    47dc:	ldr	r1, [pc, #800]	; 4b04 <read_records+0xf68>
    47e0:	mov	r3, #0
    47e4:	bl	0 <coda_mem_record_add_field>
    47e8:	b	4954 <read_records+0xdb8>
    47ec:	mvn	r0, #21
    47f0:	ldr	r1, [pc, #752]	; 4ae8 <read_records+0xf4c>
    47f4:	ldr	r2, [r5, #48]	; 0x30
    47f8:	ldr	r3, [r5, #52]	; 0x34
    47fc:	bl	0 <coda_set_error>
    4800:	mvn	r0, #0
    4804:	b	59cc <read_records+0x1e30>
    4808:	ldr	ip, [r5, #16]
    480c:	cmp	ip, #0
    4810:	beq	486c <read_records+0xcd0>
    4814:	ldr	r0, [r5, #16]
    4818:	ldr	r1, [pc, #684]	; 4acc <read_records+0xf30>
    481c:	ldr	r2, [r5, #20]
    4820:	mov	r3, #0
    4824:	bl	0 <coda_mem_record_add_field>
    4828:	mov	ip, #0
    482c:	str	ip, [r5, #20]
    4830:	ldr	r2, [r5, #28]
    4834:	cmp	r2, #0
    4838:	beq	4858 <read_records+0xcbc>
    483c:	ldr	r0, [r5, #16]
    4840:	ldr	r1, [pc, #692]	; 4afc <read_records+0xf60>
    4844:	ldr	r2, [r5, #28]
    4848:	mov	r3, #0
    484c:	bl	0 <coda_mem_record_add_field>
    4850:	mov	r0, #0
    4854:	str	r0, [r5, #28]
    4858:	ldr	r0, [r5, #12]
    485c:	ldr	r1, [r5, #16]
    4860:	bl	0 <coda_mem_array_add_element>
    4864:	mov	r3, #0
    4868:	str	r3, [r5, #16]
    486c:	ldr	r3, [pc, #540]	; 4a90 <read_records+0xef4>
    4870:	ldr	r1, [r3]
    4874:	ldr	r0, [r1, #272]	; 0x110
    4878:	mov	r1, #0
    487c:	bl	0 <coda_mem_array_new>
    4880:	str	r0, [r5, #20]
    4884:	ldrb	r0, [r5, #44]	; 0x2c
    4888:	cmp	r0, #86	; 0x56
    488c:	bne	48a8 <read_records+0xd0c>
    4890:	ldr	r1, [pc, #504]	; 4a90 <read_records+0xef4>
    4894:	ldr	r1, [r1]
    4898:	ldr	r0, [r1, #280]	; 0x118
    489c:	mov	r1, #0
    48a0:	bl	0 <coda_mem_array_new>
    48a4:	str	r0, [r5, #28]
    48a8:	ldr	r3, [pc, #480]	; 4a90 <read_records+0xef4>
    48ac:	ldr	r2, [r3]
    48b0:	ldr	r0, [r2, #292]	; 0x124
    48b4:	mov	r1, #0
    48b8:	bl	0 <coda_mem_record_new>
    48bc:	str	r0, [r5, #16]
    48c0:	cmp	r4, #31
    48c4:	bge	48ec <read_records+0xd50>
    48c8:	mvn	r0, #21
    48cc:	ldr	r1, [pc, #536]	; 4aec <read_records+0xf50>
    48d0:	ldr	r3, [r5, #48]	; 0x30
    48d4:	ldr	r2, [r5, #52]	; 0x34
    48d8:	str	r2, [sp]
    48dc:	mov	r2, r4
    48e0:	bl	0 <coda_set_error>
    48e4:	mvn	r0, #0
    48e8:	b	59cc <read_records+0x1e30>
    48ec:	add	r0, sp, #40	; 0x28
    48f0:	add	r1, sp, #107	; 0x6b
    48f4:	mov	r2, #28
    48f8:	bl	0 <memcpy>
    48fc:	mov	r2, #0
    4900:	strb	r2, [sp, #68]	; 0x44
    4904:	ldr	r0, [pc, #388]	; 4a90 <read_records+0xef4>
    4908:	ldr	r1, [r0]
    490c:	ldr	r0, [r1, #260]	; 0x104
    4910:	mov	r1, #0
    4914:	ldr	r2, [r5, #4]
    4918:	add	r3, sp, #40	; 0x28
    491c:	bl	0 <coda_mem_string_new>
    4920:	ldr	r1, [pc, #360]	; 4a90 <read_records+0xef4>
    4924:	ldr	r1, [r1]
    4928:	ldr	r2, [r1, #264]	; 0x108
    492c:	mov	r1, #0
    4930:	mov	r3, r0
    4934:	mov	r0, r2
    4938:	mov	r2, r3
    493c:	bl	0 <coda_mem_time_new>
    4940:	mov	r2, r0
    4944:	ldr	r0, [r5, #16]
    4948:	ldr	r1, [pc, #444]	; 4b0c <read_records+0xf70>
    494c:	mov	r3, #0
    4950:	bl	0 <coda_mem_record_add_field>
    4954:	ldr	r0, [r5]
    4958:	bl	0 <ftell>
    495c:	str	r0, [r5, #52]	; 0x34
    4960:	ldr	r0, [r5, #48]	; 0x30
    4964:	add	r1, r0, #1
    4968:	str	r1, [r5, #48]	; 0x30
    496c:	ldr	r0, [r5]
    4970:	add	r1, sp, #104	; 0x68
    4974:	bl	2c40 <get_line>
    4978:	mov	r4, r0
    497c:	cmp	r4, #0
    4980:	bge	498c <read_records+0xdf0>
    4984:	mvn	r0, #0
    4988:	b	59cc <read_records+0x1e30>
    498c:	ldrb	r3, [sp, #104]	; 0x68
    4990:	cmp	r3, #69	; 0x45
    4994:	bne	49cc <read_records+0xe30>
    4998:	ldrb	r2, [sp, #105]	; 0x69
    499c:	cmp	r2, #80	; 0x50
    49a0:	beq	49c4 <read_records+0xe28>
    49a4:	ldrb	r2, [sp, #105]	; 0x69
    49a8:	cmp	r2, #86	; 0x56
    49ac:	moveq	r3, #1
    49b0:	movne	r3, #0
    49b4:	cmp	r3, #0
    49b8:	movne	ip, #1
    49bc:	moveq	ip, #0
    49c0:	b	49d0 <read_records+0xe34>
    49c4:	mov	ip, #1
    49c8:	b	49d0 <read_records+0xe34>
    49cc:	mov	ip, #0
    49d0:	cmp	ip, #0
    49d4:	beq	592c <read_records+0x1d90>
    49d8:	ldrb	r2, [sp, #105]	; 0x69
    49dc:	cmp	r2, #80	; 0x50
    49e0:	beq	51b8 <read_records+0x161c>
    49e4:	ldr	r0, [r5, #32]
    49e8:	cmp	r0, #0
    49ec:	bne	4a0c <read_records+0xe70>
    49f0:	mvn	r0, #21
    49f4:	ldr	r1, [pc, #176]	; 4aac <read_records+0xf10>
    49f8:	ldr	r2, [r5, #48]	; 0x30
    49fc:	ldr	r3, [r5, #52]	; 0x34
    4a00:	bl	0 <coda_set_error>
    4a04:	mvn	r0, #0
    4a08:	b	59cc <read_records+0x1e30>
    4a0c:	ldr	ip, [pc, #124]	; 4a90 <read_records+0xef4>
    4a10:	ldr	r0, [ip]
    4a14:	ldr	r0, [r0, #216]	; 0xd8
    4a18:	mov	r1, #0
    4a1c:	bl	0 <coda_mem_record_new>
    4a20:	str	r0, [r5, #36]	; 0x24
    4a24:	cmp	r4, #8
    4a28:	blt	4a4c <read_records+0xeb0>
    4a2c:	add	r0, sp, #108	; 0x6c
    4a30:	ldr	r1, [pc, #192]	; 4af8 <read_records+0xf5c>
    4a34:	mov	r2, #4
    4a38:	bl	0 <memcmp>
    4a3c:	cmp	r0, #0
    4a40:	moveq	ip, #1
    4a44:	movne	ip, #0
    4a48:	b	4a50 <read_records+0xeb4>
    4a4c:	mov	ip, #1
    4a50:	cmp	ip, #0
    4a54:	bne	4b20 <read_records+0xf84>
    4a58:	add	r0, sp, #108	; 0x6c
    4a5c:	mov	r1, #4
    4a60:	add	r2, sp, #32
    4a64:	mov	r3, #0
    4a68:	bl	0 <coda_ascii_parse_int64>
    4a6c:	cmp	r0, #0
    4a70:	bge	4b30 <read_records+0xf94>
    4a74:	ldr	r0, [pc, #24]	; 4a94 <read_records+0xef8>
    4a78:	ldr	r1, [r5, #48]	; 0x30
    4a7c:	ldr	r2, [r5, #52]	; 0x34
    4a80:	add	r2, r2, #4
    4a84:	bl	0 <coda_add_error_message>
    4a88:	mvn	r0, #0
    4a8c:	b	59cc <read_records+0x1e30>
    4a90:	.word	0x00000000
    4a94:	.word	0x0000071e
    4a98:	.word	0x0000000f
    4a9c:	.word	0x00000368
    4aa0:	.word	0x0000082f
    4aa4:	.word	0x000007ba
    4aa8:	.word	0x00000a77
    4aac:	.word	0x00000a04
    4ab0:	.word	0x00000208
    4ab4:	.word	0x0000038d
    4ab8:	.word	0x0000034e
    4abc:	.word	0x00000373
    4ac0:	.word	0x000002d9
    4ac4:	.word	0x000008af
    4ac8:	.word	0x000006bc
    4acc:	.word	0x00000ad2
    4ad0:	.word	0x000006b2
    4ad4:	.word	0x00000337
    4ad8:	.word	0x0000058a
    4adc:	.word	0x000004a3
    4ae0:	.word	0x0000098b
    4ae4:	.word	0x00000960
    4ae8:	.word	0x000007f5
    4aec:	.word	0x000003ee
    4af0:	.word	0x000007af
    4af4:	.word	0x00000977
    4af8:	.word	0x00000576
    4afc:	.word	0x000009af
    4b00:	.word	0x000003d5
    4b04:	.word	0x00000655
    4b08:	.word	0x0000083c
    4b0c:	.word	0x000003b6
    4b10:	.word	0x00000037
    4b14:	.word	0x000005f7
    4b18:	.word	0x000009b8
    4b1c:	.word	0x0000037f
    4b20:	mov	r3, #0
    4b24:	mov	r2, #0
    4b28:	str	r2, [sp, #32]
    4b2c:	str	r3, [sp, #36]	; 0x24
    4b30:	ldr	r1, [pc, #3752]	; 59e0 <read_records+0x1e44>
    4b34:	ldr	r3, [r1]
    4b38:	ldr	r0, [r3, #220]	; 0xdc
    4b3c:	mov	r1, #0
    4b40:	ldr	r2, [r5, #4]
    4b44:	ldr	r3, [sp, #32]
    4b48:	sbfx	r3, r3, #0, #16
    4b4c:	sbfx	r3, r3, #0, #16
    4b50:	bl	0 <coda_mem_int16_new>
    4b54:	ldr	ip, [r5, #36]	; 0x24
    4b58:	ldr	r1, [pc, #3736]	; 59f8 <read_records+0x1e5c>
    4b5c:	mov	r3, #0
    4b60:	mov	r2, r0
    4b64:	mov	r0, ip
    4b68:	bl	0 <coda_mem_record_add_field>
    4b6c:	cmp	r4, #13
    4b70:	blt	4b94 <read_records+0xff8>
    4b74:	add	r0, sp, #113	; 0x71
    4b78:	ldr	r1, [pc, #3748]	; 5a24 <read_records+0x1e88>
    4b7c:	mov	r2, #4
    4b80:	bl	0 <memcmp>
    4b84:	cmp	r0, #0
    4b88:	moveq	r2, #1
    4b8c:	movne	r2, #0
    4b90:	b	4b98 <read_records+0xffc>
    4b94:	mov	r2, #1
    4b98:	cmp	r2, #0
    4b9c:	bne	4bd8 <read_records+0x103c>
    4ba0:	add	r0, sp, #113	; 0x71
    4ba4:	mov	r1, #4
    4ba8:	add	r2, sp, #32
    4bac:	mov	r3, #0
    4bb0:	bl	0 <coda_ascii_parse_int64>
    4bb4:	cmp	r0, #0
    4bb8:	bge	4be8 <read_records+0x104c>
    4bbc:	ldr	r0, [pc, #3616]	; 59e4 <read_records+0x1e48>
    4bc0:	ldr	r1, [r5, #48]	; 0x30
    4bc4:	ldr	r3, [r5, #52]	; 0x34
    4bc8:	add	r2, r3, #9
    4bcc:	bl	0 <coda_add_error_message>
    4bd0:	mvn	r0, #0
    4bd4:	b	59cc <read_records+0x1e30>
    4bd8:	mov	r3, #0
    4bdc:	mov	r2, #0
    4be0:	str	r2, [sp, #32]
    4be4:	str	r3, [sp, #36]	; 0x24
    4be8:	ldr	r0, [pc, #3568]	; 59e0 <read_records+0x1e44>
    4bec:	ldr	r0, [r0]
    4bf0:	ldr	r0, [r0, #224]	; 0xe0
    4bf4:	mov	r1, #0
    4bf8:	ldr	r2, [r5, #4]
    4bfc:	ldr	r3, [sp, #32]
    4c00:	sbfx	ip, r3, #0, #16
    4c04:	sbfx	r3, ip, #0, #16
    4c08:	bl	0 <coda_mem_int16_new>
    4c0c:	mov	r2, r0
    4c10:	ldr	r0, [r5, #36]	; 0x24
    4c14:	ldr	r1, [pc, #3572]	; 5a10 <read_records+0x1e74>
    4c18:	mov	r3, #0
    4c1c:	bl	0 <coda_mem_record_add_field>
    4c20:	cmp	r4, #18
    4c24:	blt	4c48 <read_records+0x10ac>
    4c28:	add	r0, sp, #118	; 0x76
    4c2c:	ldr	r1, [pc, #3568]	; 5a24 <read_records+0x1e88>
    4c30:	mov	r2, #4
    4c34:	bl	0 <memcmp>
    4c38:	cmp	r0, #0
    4c3c:	moveq	r1, #1
    4c40:	movne	r1, #0
    4c44:	b	4c4c <read_records+0x10b0>
    4c48:	mov	r1, #1
    4c4c:	cmp	r1, #0
    4c50:	bne	4c8c <read_records+0x10f0>
    4c54:	add	r0, sp, #118	; 0x76
    4c58:	mov	r1, #4
    4c5c:	add	r2, sp, #32
    4c60:	mov	r3, #0
    4c64:	bl	0 <coda_ascii_parse_int64>
    4c68:	cmp	r0, #0
    4c6c:	bge	4c9c <read_records+0x1100>
    4c70:	ldr	r0, [pc, #3436]	; 59e4 <read_records+0x1e48>
    4c74:	ldr	r1, [r5, #48]	; 0x30
    4c78:	ldr	ip, [r5, #52]	; 0x34
    4c7c:	add	r2, ip, #14
    4c80:	bl	0 <coda_add_error_message>
    4c84:	mvn	r0, #0
    4c88:	b	59cc <read_records+0x1e30>
    4c8c:	mov	ip, #0
    4c90:	mov	r3, #0
    4c94:	str	r3, [sp, #32]
    4c98:	str	ip, [sp, #36]	; 0x24
    4c9c:	ldr	r0, [pc, #3388]	; 59e0 <read_records+0x1e44>
    4ca0:	ldr	ip, [r0]
    4ca4:	ldr	r0, [ip, #228]	; 0xe4
    4ca8:	mov	r1, #0
    4cac:	ldr	r2, [r5, #4]
    4cb0:	ldr	r3, [sp, #32]
    4cb4:	sbfx	ip, r3, #0, #16
    4cb8:	sbfx	r3, ip, #0, #16
    4cbc:	bl	0 <coda_mem_int16_new>
    4cc0:	mov	r2, r0
    4cc4:	ldr	r0, [r5, #36]	; 0x24
    4cc8:	ldr	r1, [pc, #3364]	; 59f4 <read_records+0x1e58>
    4ccc:	mov	r3, #0
    4cd0:	bl	0 <coda_mem_record_add_field>
    4cd4:	cmp	r4, #28
    4cd8:	blt	4cfc <read_records+0x1160>
    4cdc:	add	r0, sp, #123	; 0x7b
    4ce0:	ldr	r1, [pc, #3328]	; 59e8 <read_records+0x1e4c>
    4ce4:	mov	r2, #7
    4ce8:	bl	0 <memcmp>
    4cec:	cmp	r0, #0
    4cf0:	moveq	r3, #1
    4cf4:	movne	r3, #0
    4cf8:	b	4d00 <read_records+0x1164>
    4cfc:	mov	r3, #1
    4d00:	cmp	r3, #0
    4d04:	bne	4d40 <read_records+0x11a4>
    4d08:	add	r0, sp, #123	; 0x7b
    4d0c:	mov	r1, #7
    4d10:	add	r2, sp, #32
    4d14:	mov	r3, #0
    4d18:	bl	0 <coda_ascii_parse_int64>
    4d1c:	cmp	r0, #0
    4d20:	bge	4d50 <read_records+0x11b4>
    4d24:	ldr	r0, [pc, #3256]	; 59e4 <read_records+0x1e48>
    4d28:	ldr	r1, [r5, #48]	; 0x30
    4d2c:	ldr	ip, [r5, #52]	; 0x34
    4d30:	add	r2, ip, #19
    4d34:	bl	0 <coda_add_error_message>
    4d38:	mvn	r0, #0
    4d3c:	b	59cc <read_records+0x1e30>
    4d40:	mov	r0, #0
    4d44:	mov	ip, #0
    4d48:	str	ip, [sp, #32]
    4d4c:	str	r0, [sp, #36]	; 0x24
    4d50:	ldr	r0, [pc, #3208]	; 59e0 <read_records+0x1e44>
    4d54:	ldr	r2, [r0]
    4d58:	ldr	r0, [r2, #232]	; 0xe8
    4d5c:	mov	r1, #0
    4d60:	ldr	r2, [r5, #4]
    4d64:	ldr	ip, [sp, #32]
    4d68:	sbfx	r3, ip, #0, #16
    4d6c:	sbfx	r3, r3, #0, #16
    4d70:	bl	0 <coda_mem_int16_new>
    4d74:	mov	r2, r0
    4d78:	ldr	r0, [r5, #36]	; 0x24
    4d7c:	ldr	r1, [pc, #3244]	; 5a30 <read_records+0x1e94>
    4d80:	mov	r3, #0
    4d84:	bl	0 <coda_mem_record_add_field>
    4d88:	cmp	r4, #35	; 0x23
    4d8c:	blt	4db0 <read_records+0x1214>
    4d90:	add	r0, sp, #131	; 0x83
    4d94:	ldr	r1, [pc, #3200]	; 5a1c <read_records+0x1e80>
    4d98:	mov	r2, #8
    4d9c:	bl	0 <memcmp>
    4da0:	cmp	r0, #0
    4da4:	moveq	r0, #1
    4da8:	movne	r0, #0
    4dac:	b	4db4 <read_records+0x1218>
    4db0:	mov	r0, #1
    4db4:	cmp	r0, #0
    4db8:	bne	4df4 <read_records+0x1258>
    4dbc:	add	r0, sp, #131	; 0x83
    4dc0:	mov	r1, #8
    4dc4:	add	r2, sp, #32
    4dc8:	mov	r3, #0
    4dcc:	bl	0 <coda_ascii_parse_int64>
    4dd0:	cmp	r0, #0
    4dd4:	bge	4e04 <read_records+0x1268>
    4dd8:	ldr	r0, [pc, #3076]	; 59e4 <read_records+0x1e48>
    4ddc:	ldr	r1, [r5, #48]	; 0x30
    4de0:	ldr	ip, [r5, #52]	; 0x34
    4de4:	add	r2, ip, #27
    4de8:	bl	0 <coda_add_error_message>
    4dec:	mvn	r0, #0
    4df0:	b	59cc <read_records+0x1e30>
    4df4:	mov	ip, #0
    4df8:	mov	r3, #0
    4dfc:	str	r3, [sp, #32]
    4e00:	str	ip, [sp, #36]	; 0x24
    4e04:	ldr	r3, [pc, #3028]	; 59e0 <read_records+0x1e44>
    4e08:	ldr	ip, [r3]
    4e0c:	ldr	r0, [ip, #236]	; 0xec
    4e10:	mov	r1, #0
    4e14:	ldr	r2, [r5, #4]
    4e18:	ldr	r3, [sp, #32]
    4e1c:	bl	0 <coda_mem_int32_new>
    4e20:	ldr	r2, [r5, #36]	; 0x24
    4e24:	ldr	r1, [pc, #3028]	; 5a00 <read_records+0x1e64>
    4e28:	mov	r3, #0
    4e2c:	mov	ip, r0
    4e30:	mov	r0, r2
    4e34:	mov	r2, ip
    4e38:	bl	0 <coda_mem_record_add_field>
    4e3c:	cmp	r4, #44	; 0x2c
    4e40:	blt	4e64 <read_records+0x12c8>
    4e44:	add	r0, sp, #140	; 0x8c
    4e48:	ldr	r1, [pc, #3020]	; 5a1c <read_records+0x1e80>
    4e4c:	mov	r2, #8
    4e50:	bl	0 <memcmp>
    4e54:	cmp	r0, #0
    4e58:	moveq	r1, #1
    4e5c:	movne	r1, #0
    4e60:	b	4e68 <read_records+0x12cc>
    4e64:	mov	r1, #1
    4e68:	cmp	r1, #0
    4e6c:	bne	4ea8 <read_records+0x130c>
    4e70:	add	r0, sp, #140	; 0x8c
    4e74:	mov	r1, #8
    4e78:	add	r2, sp, #32
    4e7c:	mov	r3, #0
    4e80:	bl	0 <coda_ascii_parse_int64>
    4e84:	cmp	r0, #0
    4e88:	bge	4eb8 <read_records+0x131c>
    4e8c:	ldr	r0, [pc, #2896]	; 59e4 <read_records+0x1e48>
    4e90:	ldr	r1, [r5, #48]	; 0x30
    4e94:	ldr	r2, [r5, #52]	; 0x34
    4e98:	add	r2, r2, #36	; 0x24
    4e9c:	bl	0 <coda_add_error_message>
    4ea0:	mvn	r0, #0
    4ea4:	b	59cc <read_records+0x1e30>
    4ea8:	mov	r2, #0
    4eac:	mov	r1, #0
    4eb0:	str	r1, [sp, #32]
    4eb4:	str	r2, [sp, #36]	; 0x24
    4eb8:	ldr	ip, [pc, #2848]	; 59e0 <read_records+0x1e44>
    4ebc:	ldr	r0, [ip]
    4ec0:	ldr	r0, [r0, #240]	; 0xf0
    4ec4:	mov	r1, #0
    4ec8:	ldr	r2, [r5, #4]
    4ecc:	ldr	r3, [sp, #32]
    4ed0:	bl	0 <coda_mem_int32_new>
    4ed4:	mov	r2, r0
    4ed8:	ldr	r0, [r5, #36]	; 0x24
    4edc:	ldr	r1, [pc, #2824]	; 59ec <read_records+0x1e50>
    4ee0:	mov	r3, #0
    4ee4:	bl	0 <coda_mem_record_add_field>
    4ee8:	cmp	r4, #53	; 0x35
    4eec:	blt	4f10 <read_records+0x1374>
    4ef0:	add	r0, sp, #149	; 0x95
    4ef4:	ldr	r1, [pc, #2848]	; 5a1c <read_records+0x1e80>
    4ef8:	mov	r2, #8
    4efc:	bl	0 <memcmp>
    4f00:	cmp	r0, #0
    4f04:	moveq	ip, #1
    4f08:	movne	ip, #0
    4f0c:	b	4f14 <read_records+0x1378>
    4f10:	mov	ip, #1
    4f14:	cmp	ip, #0
    4f18:	bne	4f54 <read_records+0x13b8>
    4f1c:	add	r0, sp, #149	; 0x95
    4f20:	mov	r1, #8
    4f24:	add	r2, sp, #32
    4f28:	mov	r3, #0
    4f2c:	bl	0 <coda_ascii_parse_int64>
    4f30:	cmp	r0, #0
    4f34:	bge	4f64 <read_records+0x13c8>
    4f38:	ldr	r0, [pc, #2724]	; 59e4 <read_records+0x1e48>
    4f3c:	ldr	r1, [r5, #48]	; 0x30
    4f40:	ldr	r2, [r5, #52]	; 0x34
    4f44:	add	r2, r2, #45	; 0x2d
    4f48:	bl	0 <coda_add_error_message>
    4f4c:	mvn	r0, #0
    4f50:	b	59cc <read_records+0x1e30>
    4f54:	mov	ip, #0
    4f58:	mov	r3, #0
    4f5c:	str	r3, [sp, #32]
    4f60:	str	ip, [sp, #36]	; 0x24
    4f64:	ldr	r3, [pc, #2676]	; 59e0 <read_records+0x1e44>
    4f68:	ldr	ip, [r3]
    4f6c:	ldr	r0, [ip, #244]	; 0xf4
    4f70:	mov	r1, #0
    4f74:	ldr	r2, [r5, #4]
    4f78:	ldr	r3, [sp, #32]
    4f7c:	bl	0 <coda_mem_int32_new>
    4f80:	mov	r2, r0
    4f84:	ldr	r0, [r5, #36]	; 0x24
    4f88:	ldr	r1, [pc, #2676]	; 5a04 <read_records+0x1e68>
    4f8c:	mov	r3, #0
    4f90:	bl	0 <coda_mem_record_add_field>
    4f94:	cmp	r4, #62	; 0x3e
    4f98:	blt	4fbc <read_records+0x1420>
    4f9c:	add	r0, sp, #158	; 0x9e
    4fa0:	ldr	r1, [pc, #2676]	; 5a1c <read_records+0x1e80>
    4fa4:	mov	r2, #8
    4fa8:	bl	0 <memcmp>
    4fac:	cmp	r0, #0
    4fb0:	moveq	ip, #1
    4fb4:	movne	ip, #0
    4fb8:	b	4fc0 <read_records+0x1424>
    4fbc:	mov	ip, #1
    4fc0:	cmp	ip, #0
    4fc4:	bne	5000 <read_records+0x1464>
    4fc8:	add	r0, sp, #158	; 0x9e
    4fcc:	mov	r1, #8
    4fd0:	add	r2, sp, #32
    4fd4:	mov	r3, #0
    4fd8:	bl	0 <coda_ascii_parse_int64>
    4fdc:	cmp	r0, #0
    4fe0:	bge	5010 <read_records+0x1474>
    4fe4:	ldr	r0, [pc, #2552]	; 59e4 <read_records+0x1e48>
    4fe8:	ldr	r1, [r5, #48]	; 0x30
    4fec:	ldr	r2, [r5, #52]	; 0x34
    4ff0:	add	r2, r2, #54	; 0x36
    4ff4:	bl	0 <coda_add_error_message>
    4ff8:	mvn	r0, #0
    4ffc:	b	59cc <read_records+0x1e30>
    5000:	mov	r1, #0
    5004:	mov	r0, #0
    5008:	str	r0, [sp, #32]
    500c:	str	r1, [sp, #36]	; 0x24
    5010:	ldr	r2, [pc, #2504]	; 59e0 <read_records+0x1e44>
    5014:	ldr	r1, [r2]
    5018:	ldr	r0, [r1, #248]	; 0xf8
    501c:	mov	r1, #0
    5020:	ldr	r2, [r5, #4]
    5024:	ldr	r3, [sp, #32]
    5028:	bl	0 <coda_mem_int32_new>
    502c:	mov	r2, r0
    5030:	ldr	r0, [r5, #36]	; 0x24
    5034:	ldr	r1, [pc, #2544]	; 5a2c <read_records+0x1e90>
    5038:	mov	r3, #0
    503c:	bl	0 <coda_mem_record_add_field>
    5040:	cmp	r4, #71	; 0x47
    5044:	blt	5068 <read_records+0x14cc>
    5048:	add	r0, sp, #167	; 0xa7
    504c:	ldr	r1, [pc, #2504]	; 5a1c <read_records+0x1e80>
    5050:	mov	r2, #8
    5054:	bl	0 <memcmp>
    5058:	cmp	r0, #0
    505c:	moveq	r3, #1
    5060:	movne	r3, #0
    5064:	b	506c <read_records+0x14d0>
    5068:	mov	r3, #1
    506c:	cmp	r3, #0
    5070:	bne	50ac <read_records+0x1510>
    5074:	add	r0, sp, #167	; 0xa7
    5078:	mov	r1, #8
    507c:	add	r2, sp, #32
    5080:	mov	r3, #0
    5084:	bl	0 <coda_ascii_parse_int64>
    5088:	cmp	r0, #0
    508c:	bge	50bc <read_records+0x1520>
    5090:	ldr	r0, [pc, #2380]	; 59e4 <read_records+0x1e48>
    5094:	ldr	r1, [r5, #48]	; 0x30
    5098:	ldr	r2, [r5, #52]	; 0x34
    509c:	add	r2, r2, #63	; 0x3f
    50a0:	bl	0 <coda_add_error_message>
    50a4:	mvn	r0, #0
    50a8:	b	59cc <read_records+0x1e30>
    50ac:	mov	ip, #0
    50b0:	mov	r3, #0
    50b4:	str	r3, [sp, #32]
    50b8:	str	ip, [sp, #36]	; 0x24
    50bc:	ldr	ip, [pc, #2332]	; 59e0 <read_records+0x1e44>
    50c0:	ldr	r0, [ip]
    50c4:	ldr	r0, [r0, #252]	; 0xfc
    50c8:	mov	r1, #0
    50cc:	ldr	r2, [r5, #4]
    50d0:	ldr	r3, [sp, #32]
    50d4:	bl	0 <coda_mem_int32_new>
    50d8:	mov	r2, r0
    50dc:	ldr	r0, [r5, #36]	; 0x24
    50e0:	ldr	r1, [pc, #2348]	; 5a14 <read_records+0x1e78>
    50e4:	mov	r3, #0
    50e8:	bl	0 <coda_mem_record_add_field>
    50ec:	cmp	r4, #80	; 0x50
    50f0:	blt	5114 <read_records+0x1578>
    50f4:	add	r0, sp, #176	; 0xb0
    50f8:	ldr	r1, [pc, #2332]	; 5a1c <read_records+0x1e80>
    50fc:	mov	r2, #8
    5100:	bl	0 <memcmp>
    5104:	cmp	r0, #0
    5108:	moveq	r2, #1
    510c:	movne	r2, #0
    5110:	b	5118 <read_records+0x157c>
    5114:	mov	r2, #1
    5118:	cmp	r2, #0
    511c:	bne	5158 <read_records+0x15bc>
    5120:	add	r0, sp, #176	; 0xb0
    5124:	mov	r1, #8
    5128:	add	r2, sp, #32
    512c:	mov	r3, #0
    5130:	bl	0 <coda_ascii_parse_int64>
    5134:	cmp	r0, #0
    5138:	bge	5168 <read_records+0x15cc>
    513c:	ldr	r0, [pc, #2208]	; 59e4 <read_records+0x1e48>
    5140:	ldr	r1, [r5, #48]	; 0x30
    5144:	ldr	ip, [r5, #52]	; 0x34
    5148:	add	r2, ip, #72	; 0x48
    514c:	bl	0 <coda_add_error_message>
    5150:	mvn	r0, #0
    5154:	b	59cc <read_records+0x1e30>
    5158:	mov	r3, #0
    515c:	mov	r2, #0
    5160:	str	r2, [sp, #32]
    5164:	str	r3, [sp, #36]	; 0x24
    5168:	ldr	r1, [pc, #2160]	; 59e0 <read_records+0x1e44>
    516c:	ldr	r0, [r1]
    5170:	ldr	r0, [r0, #256]	; 0x100
    5174:	mov	r1, #0
    5178:	ldr	r2, [r5, #4]
    517c:	ldr	r3, [sp, #32]
    5180:	bl	0 <coda_mem_int32_new>
    5184:	mov	r2, r0
    5188:	ldr	r0, [r5, #36]	; 0x24
    518c:	ldr	r1, [pc, #2180]	; 5a18 <read_records+0x1e7c>
    5190:	mov	r3, #0
    5194:	bl	0 <coda_mem_record_add_field>
    5198:	ldr	r0, [r5, #32]
    519c:	ldr	r1, [pc, #2136]	; 59fc <read_records+0x1e60>
    51a0:	ldr	r2, [r5, #36]	; 0x24
    51a4:	mov	r3, #0
    51a8:	bl	0 <coda_mem_record_add_field>
    51ac:	mov	ip, #0
    51b0:	str	ip, [r5, #36]	; 0x24
    51b4:	b	58f4 <read_records+0x1d58>
    51b8:	ldr	r2, [r5, #24]
    51bc:	cmp	r2, #0
    51c0:	bne	51e0 <read_records+0x1644>
    51c4:	mvn	r0, #21
    51c8:	ldr	r1, [pc, #2152]	; 5a38 <read_records+0x1e9c>
    51cc:	ldr	r2, [r5, #48]	; 0x30
    51d0:	ldr	r3, [r5, #52]	; 0x34
    51d4:	bl	0 <coda_set_error>
    51d8:	mvn	r0, #0
    51dc:	b	59cc <read_records+0x1e30>
    51e0:	ldr	ip, [pc, #2040]	; 59e0 <read_records+0x1e44>
    51e4:	ldr	r2, [ip]
    51e8:	ldr	r0, [r2, #140]	; 0x8c
    51ec:	mov	r1, #0
    51f0:	bl	0 <coda_mem_record_new>
    51f4:	str	r0, [r5, #36]	; 0x24
    51f8:	cmp	r4, #8
    51fc:	blt	5220 <read_records+0x1684>
    5200:	add	r0, sp, #108	; 0x6c
    5204:	ldr	r1, [pc, #2072]	; 5a24 <read_records+0x1e88>
    5208:	mov	r2, #4
    520c:	bl	0 <memcmp>
    5210:	cmp	r0, #0
    5214:	moveq	r3, #1
    5218:	movne	r3, #0
    521c:	b	5224 <read_records+0x1688>
    5220:	mov	r3, #1
    5224:	cmp	r3, #0
    5228:	bne	5264 <read_records+0x16c8>
    522c:	add	r0, sp, #108	; 0x6c
    5230:	mov	r1, #4
    5234:	add	r2, sp, #32
    5238:	mov	r3, #0
    523c:	bl	0 <coda_ascii_parse_int64>
    5240:	cmp	r0, #0
    5244:	bge	5274 <read_records+0x16d8>
    5248:	ldr	r0, [pc, #1940]	; 59e4 <read_records+0x1e48>
    524c:	ldr	r1, [r5, #48]	; 0x30
    5250:	ldr	r2, [r5, #52]	; 0x34
    5254:	add	r2, r2, #4
    5258:	bl	0 <coda_add_error_message>
    525c:	mvn	r0, #0
    5260:	b	59cc <read_records+0x1e30>
    5264:	mov	r1, #0
    5268:	mov	r0, #0
    526c:	str	r0, [sp, #32]
    5270:	str	r1, [sp, #36]	; 0x24
    5274:	ldr	r2, [pc, #1892]	; 59e0 <read_records+0x1e44>
    5278:	ldr	r0, [r2]
    527c:	ldr	r0, [r0, #144]	; 0x90
    5280:	mov	r1, #0
    5284:	ldr	r2, [r5, #4]
    5288:	ldr	ip, [sp, #32]
    528c:	sbfx	r3, ip, #0, #16
    5290:	sbfx	r3, r3, #0, #16
    5294:	bl	0 <coda_mem_int16_new>
    5298:	mov	r2, r0
    529c:	ldr	r0, [r5, #36]	; 0x24
    52a0:	ldr	r1, [pc, #1864]	; 59f0 <read_records+0x1e54>
    52a4:	mov	r3, #0
    52a8:	bl	0 <coda_mem_record_add_field>
    52ac:	cmp	r4, #13
    52b0:	blt	52d4 <read_records+0x1738>
    52b4:	add	r0, sp, #113	; 0x71
    52b8:	ldr	r1, [pc, #1892]	; 5a24 <read_records+0x1e88>
    52bc:	mov	r2, #4
    52c0:	bl	0 <memcmp>
    52c4:	cmp	r0, #0
    52c8:	moveq	r1, #1
    52cc:	movne	r1, #0
    52d0:	b	52d8 <read_records+0x173c>
    52d4:	mov	r1, #1
    52d8:	cmp	r1, #0
    52dc:	bne	5318 <read_records+0x177c>
    52e0:	add	r0, sp, #113	; 0x71
    52e4:	mov	r1, #4
    52e8:	add	r2, sp, #32
    52ec:	mov	r3, #0
    52f0:	bl	0 <coda_ascii_parse_int64>
    52f4:	cmp	r0, #0
    52f8:	bge	5328 <read_records+0x178c>
    52fc:	ldr	r0, [pc, #1760]	; 59e4 <read_records+0x1e48>
    5300:	ldr	r1, [r5, #48]	; 0x30
    5304:	ldr	r2, [r5, #52]	; 0x34
    5308:	add	r2, r2, #9
    530c:	bl	0 <coda_add_error_message>
    5310:	mvn	r0, #0
    5314:	b	59cc <read_records+0x1e30>
    5318:	mov	r3, #0
    531c:	mov	r2, #0
    5320:	str	r2, [sp, #32]
    5324:	str	r3, [sp, #36]	; 0x24
    5328:	ldr	r1, [pc, #1712]	; 59e0 <read_records+0x1e44>
    532c:	ldr	r2, [r1]
    5330:	ldr	r0, [r2, #148]	; 0x94
    5334:	mov	r1, #0
    5338:	ldr	r2, [r5, #4]
    533c:	ldr	ip, [sp, #32]
    5340:	sbfx	r3, ip, #0, #16
    5344:	sbfx	r3, r3, #0, #16
    5348:	bl	0 <coda_mem_int16_new>
    534c:	mov	r2, r0
    5350:	ldr	r0, [r5, #36]	; 0x24
    5354:	ldr	r1, [pc, #1752]	; 5a34 <read_records+0x1e98>
    5358:	mov	r3, #0
    535c:	bl	0 <coda_mem_record_add_field>
    5360:	cmp	r4, #18
    5364:	blt	5388 <read_records+0x17ec>
    5368:	add	r0, sp, #118	; 0x76
    536c:	ldr	r1, [pc, #1712]	; 5a24 <read_records+0x1e88>
    5370:	mov	r2, #4
    5374:	bl	0 <memcmp>
    5378:	cmp	r0, #0
    537c:	moveq	r0, #1
    5380:	movne	r0, #0
    5384:	b	538c <read_records+0x17f0>
    5388:	mov	r0, #1
    538c:	cmp	r0, #0
    5390:	bne	53cc <read_records+0x1830>
    5394:	add	r0, sp, #118	; 0x76
    5398:	mov	r1, #4
    539c:	add	r2, sp, #32
    53a0:	mov	r3, #0
    53a4:	bl	0 <coda_ascii_parse_int64>
    53a8:	cmp	r0, #0
    53ac:	bge	53dc <read_records+0x1840>
    53b0:	ldr	r0, [pc, #1580]	; 59e4 <read_records+0x1e48>
    53b4:	ldr	r1, [r5, #48]	; 0x30
    53b8:	ldr	r2, [r5, #52]	; 0x34
    53bc:	add	r2, r2, #14
    53c0:	bl	0 <coda_add_error_message>
    53c4:	mvn	r0, #0
    53c8:	b	59cc <read_records+0x1e30>
    53cc:	mov	r3, #0
    53d0:	mov	r2, #0
    53d4:	str	r2, [sp, #32]
    53d8:	str	r3, [sp, #36]	; 0x24
    53dc:	ldr	r2, [pc, #1532]	; 59e0 <read_records+0x1e44>
    53e0:	ldr	r2, [r2]
    53e4:	ldr	r0, [r2, #152]	; 0x98
    53e8:	mov	r1, #0
    53ec:	ldr	r2, [r5, #4]
    53f0:	ldr	ip, [sp, #32]
    53f4:	sbfx	ip, ip, #0, #16
    53f8:	sbfx	r3, ip, #0, #16
    53fc:	bl	0 <coda_mem_int16_new>
    5400:	mov	r2, r0
    5404:	ldr	r0, [r5, #36]	; 0x24
    5408:	ldr	r1, [pc, #1552]	; 5a20 <read_records+0x1e84>
    540c:	mov	r3, #0
    5410:	bl	0 <coda_mem_record_add_field>
    5414:	cmp	r4, #26
    5418:	blt	543c <read_records+0x18a0>
    541c:	add	r0, sp, #123	; 0x7b
    5420:	ldr	r1, [pc, #1472]	; 59e8 <read_records+0x1e4c>
    5424:	mov	r2, #7
    5428:	bl	0 <memcmp>
    542c:	cmp	r0, #0
    5430:	moveq	r2, #1
    5434:	movne	r2, #0
    5438:	b	5440 <read_records+0x18a4>
    543c:	mov	r2, #1
    5440:	cmp	r2, #0
    5444:	bne	5480 <read_records+0x18e4>
    5448:	add	r0, sp, #123	; 0x7b
    544c:	mov	r1, #7
    5450:	add	r2, sp, #32
    5454:	mov	r3, #0
    5458:	bl	0 <coda_ascii_parse_int64>
    545c:	cmp	r0, #0
    5460:	bge	5490 <read_records+0x18f4>
    5464:	ldr	r0, [pc, #1400]	; 59e4 <read_records+0x1e48>
    5468:	ldr	r1, [r5, #48]	; 0x30
    546c:	ldr	ip, [r5, #52]	; 0x34
    5470:	add	r2, ip, #19
    5474:	bl	0 <coda_add_error_message>
    5478:	mvn	r0, #0
    547c:	b	59cc <read_records+0x1e30>
    5480:	mov	r1, #0
    5484:	mov	r0, #0
    5488:	str	r0, [sp, #32]
    548c:	str	r1, [sp, #36]	; 0x24
    5490:	ldr	r3, [pc, #1352]	; 59e0 <read_records+0x1e44>
    5494:	ldr	r1, [r3]
    5498:	ldr	r0, [r1, #156]	; 0x9c
    549c:	mov	r1, #0
    54a0:	ldr	r2, [r5, #4]
    54a4:	ldr	r3, [sp, #32]
    54a8:	bl	0 <coda_mem_int32_new>
    54ac:	ldr	r2, [r5, #36]	; 0x24
    54b0:	ldr	r1, [pc, #1360]	; 5a08 <read_records+0x1e6c>
    54b4:	mov	r3, #0
    54b8:	mov	ip, r0
    54bc:	mov	r0, r2
    54c0:	mov	r2, ip
    54c4:	bl	0 <coda_mem_record_add_field>
    54c8:	cmp	r4, #35	; 0x23
    54cc:	blt	54f0 <read_records+0x1954>
    54d0:	add	r0, sp, #131	; 0x83
    54d4:	ldr	r1, [pc, #1344]	; 5a1c <read_records+0x1e80>
    54d8:	mov	r2, #8
    54dc:	bl	0 <memcmp>
    54e0:	cmp	r0, #0
    54e4:	moveq	ip, #1
    54e8:	movne	ip, #0
    54ec:	b	54f4 <read_records+0x1958>
    54f0:	mov	ip, #1
    54f4:	cmp	ip, #0
    54f8:	bne	5534 <read_records+0x1998>
    54fc:	add	r0, sp, #131	; 0x83
    5500:	mov	r1, #8
    5504:	add	r2, sp, #32
    5508:	mov	r3, #0
    550c:	bl	0 <coda_ascii_parse_int64>
    5510:	cmp	r0, #0
    5514:	bge	5544 <read_records+0x19a8>
    5518:	ldr	r0, [pc, #1220]	; 59e4 <read_records+0x1e48>
    551c:	ldr	r1, [r5, #48]	; 0x30
    5520:	ldr	r2, [r5, #52]	; 0x34
    5524:	add	r2, r2, #27
    5528:	bl	0 <coda_add_error_message>
    552c:	mvn	r0, #0
    5530:	b	59cc <read_records+0x1e30>
    5534:	mov	r3, #0
    5538:	mov	r2, #0
    553c:	str	r2, [sp, #32]
    5540:	str	r3, [sp, #36]	; 0x24
    5544:	ldr	r2, [pc, #1172]	; 59e0 <read_records+0x1e44>
    5548:	ldr	r3, [r2]
    554c:	ldr	r0, [r3, #160]	; 0xa0
    5550:	mov	r1, #0
    5554:	ldr	r2, [r5, #4]
    5558:	ldr	r3, [sp, #32]
    555c:	bl	0 <coda_mem_int32_new>
    5560:	mov	r2, r0
    5564:	ldr	r0, [r5, #36]	; 0x24
    5568:	ldr	r1, [pc, #1168]	; 5a00 <read_records+0x1e64>
    556c:	mov	r3, #0
    5570:	bl	0 <coda_mem_record_add_field>
    5574:	cmp	r4, #44	; 0x2c
    5578:	blt	559c <read_records+0x1a00>
    557c:	add	r0, sp, #140	; 0x8c
    5580:	ldr	r1, [pc, #1172]	; 5a1c <read_records+0x1e80>
    5584:	mov	r2, #8
    5588:	bl	0 <memcmp>
    558c:	cmp	r0, #0
    5590:	moveq	r0, #1
    5594:	movne	r0, #0
    5598:	b	55a0 <read_records+0x1a04>
    559c:	mov	r0, #1
    55a0:	cmp	r0, #0
    55a4:	bne	55e0 <read_records+0x1a44>
    55a8:	add	r0, sp, #140	; 0x8c
    55ac:	mov	r1, #8
    55b0:	add	r2, sp, #32
    55b4:	mov	r3, #0
    55b8:	bl	0 <coda_ascii_parse_int64>
    55bc:	cmp	r0, #0
    55c0:	bge	55f0 <read_records+0x1a54>
    55c4:	ldr	r0, [pc, #1048]	; 59e4 <read_records+0x1e48>
    55c8:	ldr	r1, [r5, #48]	; 0x30
    55cc:	ldr	r3, [r5, #52]	; 0x34
    55d0:	add	r2, r3, #36	; 0x24
    55d4:	bl	0 <coda_add_error_message>
    55d8:	mvn	r0, #0
    55dc:	b	59cc <read_records+0x1e30>
    55e0:	mov	r2, #0
    55e4:	mov	r1, #0
    55e8:	str	r1, [sp, #32]
    55ec:	str	r2, [sp, #36]	; 0x24
    55f0:	ldr	r3, [pc, #1000]	; 59e0 <read_records+0x1e44>
    55f4:	ldr	r1, [r3]
    55f8:	ldr	r0, [r1, #164]	; 0xa4
    55fc:	mov	r1, #0
    5600:	ldr	r2, [r5, #4]
    5604:	ldr	r3, [sp, #32]
    5608:	bl	0 <coda_mem_int32_new>
    560c:	mov	r2, r0
    5610:	ldr	r0, [r5, #36]	; 0x24
    5614:	ldr	r1, [pc, #976]	; 59ec <read_records+0x1e50>
    5618:	mov	r3, #0
    561c:	bl	0 <coda_mem_record_add_field>
    5620:	cmp	r4, #53	; 0x35
    5624:	blt	5648 <read_records+0x1aac>
    5628:	add	r0, sp, #149	; 0x95
    562c:	ldr	r1, [pc, #1000]	; 5a1c <read_records+0x1e80>
    5630:	mov	r2, #8
    5634:	bl	0 <memcmp>
    5638:	cmp	r0, #0
    563c:	moveq	r2, #1
    5640:	movne	r2, #0
    5644:	b	564c <read_records+0x1ab0>
    5648:	mov	r2, #1
    564c:	cmp	r2, #0
    5650:	bne	568c <read_records+0x1af0>
    5654:	add	r0, sp, #149	; 0x95
    5658:	mov	r1, #8
    565c:	add	r2, sp, #32
    5660:	mov	r3, #0
    5664:	bl	0 <coda_ascii_parse_int64>
    5668:	cmp	r0, #0
    566c:	bge	569c <read_records+0x1b00>
    5670:	ldr	r0, [pc, #876]	; 59e4 <read_records+0x1e48>
    5674:	ldr	r1, [r5, #48]	; 0x30
    5678:	ldr	r3, [r5, #52]	; 0x34
    567c:	add	r2, r3, #45	; 0x2d
    5680:	bl	0 <coda_add_error_message>
    5684:	mvn	r0, #0
    5688:	b	59cc <read_records+0x1e30>
    568c:	mov	r2, #0
    5690:	mov	r1, #0
    5694:	str	r1, [sp, #32]
    5698:	str	r2, [sp, #36]	; 0x24
    569c:	ldr	r2, [pc, #828]	; 59e0 <read_records+0x1e44>
    56a0:	ldr	r1, [r2]
    56a4:	ldr	r0, [r1, #168]	; 0xa8
    56a8:	mov	r1, #0
    56ac:	ldr	r2, [r5, #4]
    56b0:	ldr	r3, [sp, #32]
    56b4:	bl	0 <coda_mem_int32_new>
    56b8:	mov	r2, r0
    56bc:	ldr	r0, [r5, #36]	; 0x24
    56c0:	ldr	r1, [pc, #828]	; 5a04 <read_records+0x1e68>
    56c4:	mov	r3, #0
    56c8:	bl	0 <coda_mem_record_add_field>
    56cc:	cmp	r4, #62	; 0x3e
    56d0:	blt	56f4 <read_records+0x1b58>
    56d4:	add	r0, sp, #158	; 0x9e
    56d8:	ldr	r1, [pc, #828]	; 5a1c <read_records+0x1e80>
    56dc:	mov	r2, #8
    56e0:	bl	0 <memcmp>
    56e4:	cmp	r0, #0
    56e8:	moveq	r3, #1
    56ec:	movne	r3, #0
    56f0:	b	56f8 <read_records+0x1b5c>
    56f4:	mov	r3, #1
    56f8:	cmp	r3, #0
    56fc:	bne	5738 <read_records+0x1b9c>
    5700:	add	r0, sp, #158	; 0x9e
    5704:	mov	r1, #8
    5708:	add	r2, sp, #32
    570c:	mov	r3, #0
    5710:	bl	0 <coda_ascii_parse_int64>
    5714:	cmp	r0, #0
    5718:	bge	5748 <read_records+0x1bac>
    571c:	ldr	r0, [pc, #704]	; 59e4 <read_records+0x1e48>
    5720:	ldr	r1, [r5, #48]	; 0x30
    5724:	ldr	r2, [r5, #52]	; 0x34
    5728:	add	r2, r2, #54	; 0x36
    572c:	bl	0 <coda_add_error_message>
    5730:	mvn	r0, #0
    5734:	b	59cc <read_records+0x1e30>
    5738:	mov	ip, #0
    573c:	mov	r3, #0
    5740:	str	r3, [sp, #32]
    5744:	str	ip, [sp, #36]	; 0x24
    5748:	ldr	r0, [pc, #656]	; 59e0 <read_records+0x1e44>
    574c:	ldr	r2, [r0]
    5750:	ldr	r0, [r2, #172]	; 0xac
    5754:	mov	r1, #0
    5758:	ldr	r2, [r5, #4]
    575c:	ldr	r3, [sp, #32]
    5760:	bl	0 <coda_mem_int32_new>
    5764:	mov	r2, r0
    5768:	ldr	r0, [r5, #36]	; 0x24
    576c:	ldr	r1, [pc, #696]	; 5a2c <read_records+0x1e90>
    5770:	mov	r3, #0
    5774:	bl	0 <coda_mem_record_add_field>
    5778:	cmp	r4, #71	; 0x47
    577c:	blt	57a0 <read_records+0x1c04>
    5780:	add	r0, sp, #167	; 0xa7
    5784:	ldr	r1, [pc, #656]	; 5a1c <read_records+0x1e80>
    5788:	mov	r2, #8
    578c:	bl	0 <memcmp>
    5790:	cmp	r0, #0
    5794:	moveq	r1, #1
    5798:	movne	r1, #0
    579c:	b	57a4 <read_records+0x1c08>
    57a0:	mov	r1, #1
    57a4:	cmp	r1, #0
    57a8:	bne	57e4 <read_records+0x1c48>
    57ac:	add	r0, sp, #167	; 0xa7
    57b0:	mov	r1, #8
    57b4:	add	r2, sp, #32
    57b8:	mov	r3, #0
    57bc:	bl	0 <coda_ascii_parse_int64>
    57c0:	cmp	r0, #0
    57c4:	bge	57f4 <read_records+0x1c58>
    57c8:	ldr	r0, [pc, #532]	; 59e4 <read_records+0x1e48>
    57cc:	ldr	r1, [r5, #48]	; 0x30
    57d0:	ldr	r3, [r5, #52]	; 0x34
    57d4:	add	r2, r3, #63	; 0x3f
    57d8:	bl	0 <coda_add_error_message>
    57dc:	mvn	r0, #0
    57e0:	b	59cc <read_records+0x1e30>
    57e4:	mov	r1, #0
    57e8:	mov	r0, #0
    57ec:	str	r0, [sp, #32]
    57f0:	str	r1, [sp, #36]	; 0x24
    57f4:	ldr	r1, [pc, #484]	; 59e0 <read_records+0x1e44>
    57f8:	ldr	ip, [r1]
    57fc:	ldr	r0, [ip, #176]	; 0xb0
    5800:	mov	r1, #0
    5804:	ldr	r2, [r5, #4]
    5808:	ldr	r3, [sp, #32]
    580c:	bl	0 <coda_mem_int32_new>
    5810:	mov	r2, r0
    5814:	ldr	r0, [r5, #36]	; 0x24
    5818:	ldr	r1, [pc, #500]	; 5a14 <read_records+0x1e78>
    581c:	mov	r3, #0
    5820:	bl	0 <coda_mem_record_add_field>
    5824:	cmp	r4, #80	; 0x50
    5828:	blt	584c <read_records+0x1cb0>
    582c:	add	r0, sp, #176	; 0xb0
    5830:	ldr	r1, [pc, #484]	; 5a1c <read_records+0x1e80>
    5834:	mov	r2, #8
    5838:	bl	0 <memcmp>
    583c:	cmp	r0, #0
    5840:	moveq	r1, #1
    5844:	movne	r1, #0
    5848:	b	5850 <read_records+0x1cb4>
    584c:	mov	r1, #1
    5850:	cmp	r1, #0
    5854:	bne	5890 <read_records+0x1cf4>
    5858:	add	r0, sp, #176	; 0xb0
    585c:	mov	r1, #8
    5860:	add	r2, sp, #32
    5864:	mov	r3, #0
    5868:	bl	0 <coda_ascii_parse_int64>
    586c:	cmp	r0, #0
    5870:	bge	58a0 <read_records+0x1d04>
    5874:	ldr	r0, [pc, #360]	; 59e4 <read_records+0x1e48>
    5878:	ldr	r1, [r5, #48]	; 0x30
    587c:	ldr	r2, [r5, #52]	; 0x34
    5880:	add	r2, r2, #72	; 0x48
    5884:	bl	0 <coda_add_error_message>
    5888:	mvn	r0, #0
    588c:	b	59cc <read_records+0x1e30>
    5890:	mov	r0, #0
    5894:	mov	ip, #0
    5898:	str	ip, [sp, #32]
    589c:	str	r0, [sp, #36]	; 0x24
    58a0:	ldr	r1, [pc, #312]	; 59e0 <read_records+0x1e44>
    58a4:	ldr	r1, [r1]
    58a8:	ldr	r0, [r1, #180]	; 0xb4
    58ac:	mov	r1, #0
    58b0:	ldr	r2, [r5, #4]
    58b4:	ldr	r3, [sp, #32]
    58b8:	bl	0 <coda_mem_int32_new>
    58bc:	ldr	r2, [r5, #36]	; 0x24
    58c0:	ldr	r1, [pc, #336]	; 5a18 <read_records+0x1e7c>
    58c4:	mov	r3, #0
    58c8:	mov	ip, r0
    58cc:	mov	r0, r2
    58d0:	mov	r2, ip
    58d4:	bl	0 <coda_mem_record_add_field>
    58d8:	ldr	r0, [r5, #24]
    58dc:	ldr	r1, [pc, #280]	; 59fc <read_records+0x1e60>
    58e0:	ldr	r2, [r5, #36]	; 0x24
    58e4:	mov	r3, #0
    58e8:	bl	0 <coda_mem_record_add_field>
    58ec:	mov	r1, #0
    58f0:	str	r1, [r5, #36]	; 0x24
    58f4:	ldr	r0, [r5]
    58f8:	bl	0 <ftell>
    58fc:	str	r0, [r5, #52]	; 0x34
    5900:	ldr	r3, [r5, #48]	; 0x30
    5904:	add	r1, r3, #1
    5908:	str	r1, [r5, #48]	; 0x30
    590c:	ldr	r0, [r5]
    5910:	add	r1, sp, #104	; 0x68
    5914:	bl	2c40 <get_line>
    5918:	mov	r4, r0
    591c:	cmp	r4, #0
    5920:	bge	592c <read_records+0x1d90>
    5924:	mvn	r0, #0
    5928:	b	59cc <read_records+0x1e30>
    592c:	ldr	r3, [r5, #24]
    5930:	cmp	r3, #0
    5934:	beq	594c <read_records+0x1db0>
    5938:	ldr	r0, [r5, #20]
    593c:	ldr	r1, [r5, #24]
    5940:	bl	0 <coda_mem_array_add_element>
    5944:	mov	r2, #0
    5948:	str	r2, [r5, #24]
    594c:	ldr	r2, [r5, #32]
    5950:	cmp	r2, #0
    5954:	beq	3bf0 <read_records+0x54>
    5958:	ldr	r0, [r5, #28]
    595c:	ldr	r1, [r5, #32]
    5960:	bl	0 <coda_mem_array_add_element>
    5964:	mov	ip, #0
    5968:	str	ip, [r5, #32]
    596c:	b	3bf0 <read_records+0x54>
    5970:	ldr	r2, [r5, #16]
    5974:	cmp	r2, #0
    5978:	beq	59c8 <read_records+0x1e2c>
    597c:	ldr	r0, [r5, #16]
    5980:	ldr	r1, [pc, #132]	; 5a0c <read_records+0x1e70>
    5984:	ldr	r2, [r5, #20]
    5988:	mov	r3, #0
    598c:	bl	0 <coda_mem_record_add_field>
    5990:	mov	r3, #0
    5994:	str	r3, [r5, #20]
    5998:	ldr	r0, [r5, #16]
    599c:	ldr	r1, [pc, #132]	; 5a28 <read_records+0x1e8c>
    59a0:	ldr	r2, [r5, #28]
    59a4:	mov	r3, #0
    59a8:	bl	0 <coda_mem_record_add_field>
    59ac:	mov	ip, #0
    59b0:	str	ip, [r5, #28]
    59b4:	ldr	r0, [r5, #12]
    59b8:	ldr	r1, [r5, #16]
    59bc:	bl	0 <coda_mem_array_add_element>
    59c0:	mov	r0, #0
    59c4:	str	r0, [r5, #16]
    59c8:	mov	r0, #0
    59cc:	ldr	r4, [sp, #16]
    59d0:	ldr	r5, [sp, #20]
    59d4:	ldr	lr, [sp, #8]
    59d8:	add	sp, sp, #1104	; 0x450
    59dc:	bx	lr
    59e0:	.word	0x00000000
    59e4:	.word	0x0000071e
    59e8:	.word	0x0000070f
    59ec:	.word	0x0000097e
    59f0:	.word	0x00000a77
    59f4:	.word	0x0000038d
    59f8:	.word	0x0000034e
    59fc:	.word	0x00000511
    5a00:	.word	0x00000436
    5a04:	.word	0x0000062f
    5a08:	.word	0x000008af
    5a0c:	.word	0x00000ad2
    5a10:	.word	0x000006b2
    5a14:	.word	0x00000937
    5a18:	.word	0x00000454
    5a1c:	.word	0x00000376
    5a20:	.word	0x00000977
    5a24:	.word	0x00000576
    5a28:	.word	0x000009af
    5a2c:	.word	0x000003cd
    5a30:	.word	0x00000655
    5a34:	.word	0x00000037
    5a38:	.word	0x000008ba

00005a3c <read_file>:
    5a3c:	mov	ip, sp
    5a40:	sub	sp, sp, #72	; 0x48
    5a44:	str	ip, [sp]
    5a48:	str	lr, [sp, #4]
    5a4c:	str	r4, [sp, #8]
    5a50:	str	r5, [sp, #12]
    5a54:	mov	r5, r0
    5a58:	add	r0, sp, #16
    5a5c:	bl	dc <ingest_info_init>
    5a60:	str	r5, [sp, #20]
    5a64:	ldr	r0, [r5]
    5a68:	ldr	r1, [pc, #272]	; 5b80 <read_file+0x144>
    5a6c:	bl	0 <fopen>
    5a70:	str	r0, [sp, #16]
    5a74:	ldr	ip, [sp, #16]
    5a78:	cmp	ip, #0
    5a7c:	bne	5a98 <read_file+0x5c>
    5a80:	mvn	r0, #20
    5a84:	ldr	r1, [pc, #248]	; 5b84 <read_file+0x148>
    5a88:	ldr	r2, [r5]
    5a8c:	bl	0 <coda_set_error>
    5a90:	mvn	r0, #0
    5a94:	b	5b68 <read_file+0x12c>
    5a98:	ldr	r0, [pc, #220]	; 5b7c <read_file+0x140>
    5a9c:	ldr	r0, [r0]
    5aa0:	ldr	r0, [r0, #284]	; 0x11c
    5aa4:	mov	r1, #0
    5aa8:	bl	0 <coda_mem_record_new>
    5aac:	str	r0, [sp, #24]
    5ab0:	ldr	r0, [pc, #196]	; 5b7c <read_file+0x140>
    5ab4:	ldr	ip, [r0]
    5ab8:	ldr	r0, [ip, #288]	; 0x120
    5abc:	mov	r1, #0
    5ac0:	bl	0 <coda_mem_array_new>
    5ac4:	str	r0, [sp, #28]
    5ac8:	add	r0, sp, #16
    5acc:	bl	2d64 <read_header>
    5ad0:	cmp	r0, #0
    5ad4:	beq	5ae8 <read_file+0xac>
    5ad8:	add	r0, sp, #16
    5adc:	bl	0 <ingest_info_cleanup>
    5ae0:	mvn	r0, #0
    5ae4:	b	5b68 <read_file+0x12c>
    5ae8:	add	r0, sp, #16
    5aec:	bl	3b9c <read_records>
    5af0:	cmp	r0, #0
    5af4:	beq	5b08 <read_file+0xcc>
    5af8:	add	r0, sp, #16
    5afc:	bl	0 <ingest_info_cleanup>
    5b00:	mvn	r0, #0
    5b04:	b	5b68 <read_file+0x12c>
    5b08:	ldr	r3, [pc, #108]	; 5b7c <read_file+0x140>
    5b0c:	ldr	r2, [r3]
    5b10:	ldr	r0, [r2, #296]	; 0x128
    5b14:	mov	r1, #0
    5b18:	bl	0 <coda_mem_record_new>
    5b1c:	mov	r4, r0
    5b20:	ldr	r1, [pc, #96]	; 5b88 <read_file+0x14c>
    5b24:	ldr	r2, [sp, #24]
    5b28:	mov	r3, #0
    5b2c:	mov	r0, r4
    5b30:	bl	0 <coda_mem_record_add_field>
    5b34:	mov	r1, #0
    5b38:	str	r1, [sp, #24]
    5b3c:	ldr	r1, [pc, #72]	; 5b8c <read_file+0x150>
    5b40:	ldr	r2, [sp, #28]
    5b44:	mov	r3, #0
    5b48:	mov	r0, r4
    5b4c:	bl	0 <coda_mem_record_add_field>
    5b50:	mov	r2, #0
    5b54:	str	r2, [sp, #28]
    5b58:	str	r4, [r5, #20]
    5b5c:	add	r0, sp, #16
    5b60:	bl	0 <ingest_info_cleanup>
    5b64:	mov	r0, #0
    5b68:	ldr	r4, [sp, #8]
    5b6c:	ldr	r5, [sp, #12]
    5b70:	ldr	lr, [sp, #4]
    5b74:	add	sp, sp, #72	; 0x48
    5b78:	bx	lr
    5b7c:	.word	0x00000000
    5b80:	.word	0x000005fb
    5b84:	.word	0x00000ab8
    5b88:	.word	0x00000358
    5b8c:	.word	0x000007a8

00005b90 <coda_sp3_reopen>:
    5b90:	mov	ip, sp
    5b94:	sub	sp, sp, #24
    5b98:	str	ip, [sp, #4]
    5b9c:	str	lr, [sp, #8]
    5ba0:	str	r4, [sp, #16]
    5ba4:	str	r5, [sp, #20]
    5ba8:	mov	r4, r0
    5bac:	bl	158 <sp3_init>
    5bb0:	cmp	r0, #0
    5bb4:	beq	5bc8 <coda_sp3_reopen+0x38>
    5bb8:	ldr	r0, [r4]
    5bbc:	bl	0 <coda_close>
    5bc0:	mvn	r0, #0
    5bc4:	b	5cdc <coda_sp3_reopen+0x14c>
    5bc8:	mov	r0, #56	; 0x38
    5bcc:	bl	0 <malloc>
    5bd0:	mov	r5, r0
    5bd4:	cmp	r5, #0
    5bd8:	bne	5c08 <coda_sp3_reopen+0x78>
    5bdc:	mvn	r0, #0
    5be0:	ldr	r1, [pc, #268]	; 5cf4 <coda_sp3_reopen+0x164>
    5be4:	mov	r2, #56	; 0x38
    5be8:	ldr	r3, [pc, #264]	; 5cf8 <coda_sp3_reopen+0x168>
    5bec:	movw	ip, #1946	; 0x79a
    5bf0:	str	ip, [sp]
    5bf4:	bl	0 <coda_set_error>
    5bf8:	ldr	r0, [r4]
    5bfc:	bl	0 <coda_close>
    5c00:	mvn	r0, #0
    5c04:	b	5cdc <coda_sp3_reopen+0x14c>
    5c08:	mov	r1, #0
    5c0c:	str	r1, [r5]
    5c10:	ldr	ip, [r4]
    5c14:	ldr	r0, [ip, #8]
    5c18:	ldr	r2, [ip, #12]
    5c1c:	str	r0, [r5, #8]
    5c20:	str	r2, [r5, #12]
    5c24:	mov	r2, #9
    5c28:	str	r2, [r5, #16]
    5c2c:	mov	r2, #0
    5c30:	str	r2, [r5, #20]
    5c34:	mov	ip, #0
    5c38:	str	ip, [r5, #24]
    5c3c:	mov	ip, #0
    5c40:	str	ip, [r5, #28]
    5c44:	mov	r3, #0
    5c48:	str	r3, [r5, #32]
    5c4c:	mov	r1, #0
    5c50:	mov	r0, #0
    5c54:	str	r0, [r5, #40]	; 0x28
    5c58:	str	r1, [r5, #44]	; 0x2c
    5c5c:	mov	r0, #0
    5c60:	str	r0, [r5, #48]	; 0x30
    5c64:	ldr	r0, [r4]
    5c68:	ldr	r0, [r0]
    5c6c:	bl	0 <strdup>
    5c70:	str	r0, [r5]
    5c74:	ldr	r1, [r5]
    5c78:	cmp	r1, #0
    5c7c:	bne	5cac <coda_sp3_reopen+0x11c>
    5c80:	mvn	r0, #0
    5c84:	ldr	r1, [pc, #100]	; 5cf0 <coda_sp3_reopen+0x160>
    5c88:	ldr	r2, [pc, #104]	; 5cf8 <coda_sp3_reopen+0x168>
    5c8c:	movw	r3, #1964	; 0x7ac
    5c90:	bl	0 <coda_set_error>
    5c94:	mov	r0, r5
    5c98:	bl	0 <coda_close>
    5c9c:	ldr	r0, [r4]
    5ca0:	bl	0 <coda_close>
    5ca4:	mvn	r0, #0
    5ca8:	b	5cdc <coda_sp3_reopen+0x14c>
    5cac:	ldr	r0, [r4]
    5cb0:	bl	0 <coda_close>
    5cb4:	mov	r0, r5
    5cb8:	bl	5a3c <read_file>
    5cbc:	cmp	r0, #0
    5cc0:	beq	5cd4 <coda_sp3_reopen+0x144>
    5cc4:	mov	r0, r5
    5cc8:	bl	0 <coda_close>
    5ccc:	mvn	r0, #0
    5cd0:	b	5cdc <coda_sp3_reopen+0x14c>
    5cd4:	str	r5, [r4]
    5cd8:	mov	r0, #0
    5cdc:	ldr	r4, [sp, #16]
    5ce0:	ldr	r5, [sp, #20]
    5ce4:	ldr	lr, [sp, #8]
    5ce8:	add	sp, sp, #24
    5cec:	bx	lr
    5cf0:	.word	0x00000516
    5cf4:	.word	0x0000045c
    5cf8:	.word	0x00000595

00005cfc <coda_sp3_close>:
    5cfc:	mov	ip, sp
    5d00:	sub	sp, sp, #16
    5d04:	str	ip, [sp]
    5d08:	str	lr, [sp, #4]
    5d0c:	str	r4, [sp, #8]
    5d10:	mov	r4, r0
    5d14:	ldr	r0, [r4, #20]
    5d18:	cmp	r0, #0
    5d1c:	beq	5d28 <coda_sp3_close+0x2c>
    5d20:	ldr	r0, [r4, #20]
    5d24:	bl	0 <coda_dynamic_type_delete>
    5d28:	ldr	r1, [r4]
    5d2c:	cmp	r1, #0
    5d30:	beq	5d3c <coda_sp3_close+0x40>
    5d34:	ldr	r0, [r4]
    5d38:	bl	0 <free>
    5d3c:	mov	r0, r4
    5d40:	bl	0 <free>
    5d44:	mov	r0, #0
    5d48:	ldr	r4, [sp, #8]
    5d4c:	ldr	lr, [sp, #4]
    5d50:	add	sp, sp, #16
    5d54:	bx	lr

00005d58 <coda_sp3_cursor_set_product>:
    5d58:	mov	ip, sp
    5d5c:	sub	sp, sp, #8
    5d60:	str	ip, [sp]
    5d64:	str	lr, [sp, #4]
    5d68:	str	r1, [r0]
    5d6c:	mov	r3, #1
    5d70:	str	r3, [r0, #4]
    5d74:	ldr	r2, [r1, #20]
    5d78:	str	r2, [r0, #8]
    5d7c:	mvn	ip, #0
    5d80:	str	ip, [r0, #12]
    5d84:	mvn	r2, #0
    5d88:	mvn	r1, #0
    5d8c:	str	r1, [r0, #16]
    5d90:	str	r2, [r0, #20]
    5d94:	mov	r0, #0
    5d98:	ldr	lr, [sp, #4]
    5d9c:	add	sp, sp, #8
    5da0:	bx	lr
