
../compcert-repos/prog2/CMakeFiles/5.1.dir/Aula05_Filas_e_Pilhas/1/pilha_contentores.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <pilha_novo_elemento>:
   0:	push	{r4, r5, r6, sl, fp, lr}
   4:	add	fp, sp, #16
   8:	mov	r6, r0
   c:	mov	r0, #8
  10:	bl	0 <malloc>
  14:	mov	r4, #0
  18:	cmp	r0, #0
  1c:	beq	48 <pilha_novo_elemento+0x48>
  20:	vldr	s0, [r6, #4]
  24:	mov	r5, r0
  28:	ldr	r0, [r6]
  2c:	bl	0 <contentor_novo>
  30:	cmp	r0, #0
  34:	str	r0, [r5]
  38:	beq	50 <pilha_novo_elemento+0x50>
  3c:	mov	r0, #0
  40:	mov	r4, r5
  44:	str	r0, [r5, #4]
  48:	mov	r0, r4
  4c:	pop	{r4, r5, r6, sl, fp, pc}
  50:	mov	r0, r5
  54:	bl	0 <free>
  58:	mov	r0, r4
  5c:	pop	{r4, r5, r6, sl, fp, pc}

00000060 <pilha_nova>:
  60:	push	{fp, lr}
  64:	mov	fp, sp
  68:	mov	r0, #8
  6c:	bl	0 <malloc>
  70:	cmp	r0, #0
  74:	moveq	r0, #0
  78:	movne	r1, #0
  7c:	strne	r1, [r0]
  80:	strne	r1, [r0, #4]
  84:	pop	{fp, pc}

00000088 <pilha_apaga>:
  88:	cmp	r0, #0
  8c:	bxeq	lr
  90:	push	{r4, r5, fp, lr}
  94:	add	fp, sp, #8
  98:	mov	r4, r0
  9c:	ldr	r5, [r4]
  a0:	cmp	r5, #0
  a4:	beq	c4 <pilha_apaga+0x3c>
  a8:	ldr	r0, [r5, #4]
  ac:	str	r0, [r4]
  b0:	ldr	r0, [r5]
  b4:	bl	0 <contentor_apaga>
  b8:	mov	r0, r5
  bc:	bl	0 <free>
  c0:	b	9c <pilha_apaga+0x14>
  c4:	mov	r0, r4
  c8:	pop	{r4, r5, fp, lr}
  cc:	b	0 <free>

000000d0 <pilha_tamanho>:
  d0:	cmp	r0, #0
  d4:	ldrne	r0, [r0, #4]
  d8:	mvneq	r0, #0
  dc:	bx	lr

000000e0 <pilha_top>:
  e0:	mov	r1, r0
  e4:	mov	r0, #0
  e8:	cmp	r1, #0
  ec:	beq	104 <pilha_top+0x24>
  f0:	ldr	r2, [r1, #4]
  f4:	cmp	r2, #0
  f8:	bxeq	lr
  fc:	ldr	r0, [r1]
 100:	ldr	r0, [r0]
 104:	bx	lr

00000108 <pilha_push>:
 108:	push	{r4, r5, r6, sl, fp, lr}
 10c:	add	fp, sp, #16
 110:	cmp	r0, #0
 114:	beq	16c <pilha_push+0x64>
 118:	mov	r4, r0
 11c:	mov	r0, #8
 120:	mov	r6, r1
 124:	bl	0 <malloc>
 128:	cmp	r0, #0
 12c:	beq	16c <pilha_push+0x64>
 130:	vldr	s0, [r6, #4]
 134:	mov	r5, r0
 138:	ldr	r0, [r6]
 13c:	bl	0 <contentor_novo>
 140:	cmp	r0, #0
 144:	str	r0, [r5]
 148:	beq	170 <pilha_push+0x68>
 14c:	mov	r0, #0
 150:	str	r0, [r5, #4]
 154:	ldm	r4, {r0, r1}
 158:	add	r1, r1, #1
 15c:	str	r1, [r4, #4]
 160:	cmp	r0, #0
 164:	strne	r0, [r5, #4]
 168:	str	r5, [r4]
 16c:	pop	{r4, r5, r6, sl, fp, pc}
 170:	mov	r0, r5
 174:	pop	{r4, r5, r6, sl, fp, lr}
 178:	b	0 <free>

0000017c <pilha_pop>:
 17c:	push	{r4, sl, fp, lr}
 180:	add	fp, sp, #8
 184:	cmp	r0, #0
 188:	popeq	{r4, sl, fp, pc}
 18c:	ldr	r1, [r0, #4]
 190:	cmp	r1, #0
 194:	beq	1c0 <pilha_pop+0x44>
 198:	ldr	r4, [r0]
 19c:	sub	r1, r1, #1
 1a0:	ldr	r2, [r4, #4]
 1a4:	str	r2, [r0]
 1a8:	str	r1, [r0, #4]
 1ac:	ldr	r0, [r4]
 1b0:	bl	0 <contentor_apaga>
 1b4:	mov	r0, r4
 1b8:	pop	{r4, sl, fp, lr}
 1bc:	b	0 <free>
 1c0:	pop	{r4, sl, fp, pc}
