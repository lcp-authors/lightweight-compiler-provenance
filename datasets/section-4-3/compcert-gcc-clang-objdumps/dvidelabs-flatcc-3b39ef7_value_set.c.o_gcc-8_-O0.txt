
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/hash_tables/value_set.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ht_int_hash_function>:
   0:	push	{fp}		; (str fp, [sp, #-4]!)
   4:	add	fp, sp, #0
   8:	sub	sp, sp, #12
   c:	str	r0, [fp, #-8]
  10:	str	r1, [fp, #-12]
  14:	ldr	r2, [fp, #-8]
  18:	movw	r3, #15186	; 0x3b52
  1c:	movt	r3, #12137	; 0x2f69
  20:	eor	r3, r3, r2
  24:	movw	r2, #31153	; 0x79b1
  28:	movt	r2, #40503	; 0x9e37
  2c:	mul	r3, r2, r3
  30:	mov	r0, r3
  34:	add	sp, fp, #0
  38:	pop	{fp}		; (ldr fp, [sp], #4)
  3c:	bx	lr

00000040 <value_hash_function>:
  40:	str	fp, [sp, #-8]!
  44:	str	lr, [sp, #4]
  48:	add	fp, sp, #4
  4c:	sub	sp, sp, #16
  50:	str	r0, [fp, #-16]
  54:	str	r1, [fp, #-20]	; 0xffffffec
  58:	ldr	r3, [fp, #-16]
  5c:	str	r3, [fp, #-8]
  60:	ldr	r3, [fp, #-8]
  64:	ldrh	r3, [r3, #8]
  68:	cmp	r3, #5
  6c:	beq	a8 <value_hash_function+0x68>
  70:	cmp	r3, #6
  74:	beq	d0 <value_hash_function+0x90>
  78:	cmp	r3, #4
  7c:	bne	fc <value_hash_function+0xbc>
  80:	ldr	r3, [fp, #-8]
  84:	ldrd	r2, [r3]
  88:	ldr	r3, [fp, #-8]
  8c:	ldrh	r3, [r3, #8]
  90:	eor	r3, r3, r2
  94:	mov	r1, #8
  98:	mov	r0, r3
  9c:	bl	0 <ht_int_hash_function>
  a0:	mov	r3, r0
  a4:	b	100 <value_hash_function+0xc0>
  a8:	ldr	r3, [fp, #-8]
  ac:	ldrd	r2, [r3]
  b0:	ldr	r3, [fp, #-8]
  b4:	ldrh	r3, [r3, #8]
  b8:	eor	r3, r3, r2
  bc:	mov	r1, #8
  c0:	mov	r0, r3
  c4:	bl	0 <ht_int_hash_function>
  c8:	mov	r3, r0
  cc:	b	100 <value_hash_function+0xc0>
  d0:	ldr	r3, [fp, #-8]
  d4:	ldrb	r3, [r3]
  d8:	mov	r2, r3
  dc:	ldr	r3, [fp, #-8]
  e0:	ldrh	r3, [r3, #8]
  e4:	eor	r3, r3, r2
  e8:	mov	r1, #1
  ec:	mov	r0, r3
  f0:	bl	0 <ht_int_hash_function>
  f4:	mov	r3, r0
  f8:	b	100 <value_hash_function+0xc0>
  fc:	mov	r3, #0
 100:	mov	r0, r3
 104:	sub	sp, fp, #4
 108:	ldr	fp, [sp]
 10c:	add	sp, sp, #4
 110:	pop	{pc}		; (ldr pc, [sp], #4)

00000114 <fb_value_set_clear>:
 114:	str	fp, [sp, #-8]!
 118:	str	lr, [sp, #4]
 11c:	add	fp, sp, #4
 120:	sub	sp, sp, #8
 124:	str	r0, [fp, #-8]
 128:	ldr	r0, [fp, #-8]
 12c:	bl	c68 <ht_clear>
 130:	nop	{0}
 134:	sub	sp, fp, #4
 138:	ldr	fp, [sp]
 13c:	add	sp, sp, #4
 140:	pop	{pc}		; (ldr pc, [sp], #4)

00000144 <fb_value_set_destroy>:
 144:	str	fp, [sp, #-8]!
 148:	str	lr, [sp, #4]
 14c:	add	fp, sp, #4
 150:	sub	sp, sp, #16
 154:	str	r0, [fp, #-8]
 158:	str	r1, [fp, #-12]
 15c:	str	r2, [fp, #-16]
 160:	ldr	r3, [fp, #-12]
 164:	cmp	r3, #0
 168:	beq	17c <fb_value_set_destroy+0x38>
 16c:	ldr	r2, [fp, #-16]
 170:	ldr	r1, [fp, #-12]
 174:	ldr	r0, [fp, #-8]
 178:	bl	bc0 <ht_visit>
 17c:	ldr	r0, [fp, #-8]
 180:	bl	c68 <ht_clear>
 184:	nop	{0}
 188:	sub	sp, fp, #4
 18c:	ldr	fp, [sp]
 190:	add	sp, sp, #4
 194:	pop	{pc}		; (ldr pc, [sp], #4)

00000198 <fb_value_set_init>:
 198:	str	fp, [sp, #-8]!
 19c:	str	lr, [sp, #4]
 1a0:	add	fp, sp, #4
 1a4:	sub	sp, sp, #8
 1a8:	str	r0, [fp, #-8]
 1ac:	str	r1, [fp, #-12]
 1b0:	ldr	r1, [fp, #-12]
 1b4:	ldr	r0, [fp, #-8]
 1b8:	bl	458 <ht_init>
 1bc:	mov	r3, r0
 1c0:	mov	r0, r3
 1c4:	sub	sp, fp, #4
 1c8:	ldr	fp, [sp]
 1cc:	add	sp, sp, #4
 1d0:	pop	{pc}		; (ldr pc, [sp], #4)

000001d4 <fb_value_set_resize>:
 1d4:	str	fp, [sp, #-8]!
 1d8:	str	lr, [sp, #4]
 1dc:	add	fp, sp, #4
 1e0:	sub	sp, sp, #8
 1e4:	str	r0, [fp, #-8]
 1e8:	str	r1, [fp, #-12]
 1ec:	ldr	r1, [fp, #-12]
 1f0:	ldr	r0, [fp, #-8]
 1f4:	bl	514 <ht_resize>
 1f8:	mov	r3, r0
 1fc:	mov	r0, r3
 200:	sub	sp, fp, #4
 204:	ldr	fp, [sp]
 208:	add	sp, sp, #4
 20c:	pop	{pc}		; (ldr pc, [sp], #4)

00000210 <fb_value_set_insert>:
 210:	str	fp, [sp, #-8]!
 214:	str	lr, [sp, #4]
 218:	add	fp, sp, #4
 21c:	sub	sp, sp, #24
 220:	str	r0, [fp, #-8]
 224:	str	r1, [fp, #-12]
 228:	str	r2, [fp, #-16]
 22c:	str	r3, [fp, #-20]	; 0xffffffec
 230:	ldr	r3, [fp, #4]
 234:	str	r3, [sp]
 238:	ldr	r3, [fp, #-20]	; 0xffffffec
 23c:	ldr	r2, [fp, #-16]
 240:	ldr	r1, [fp, #-12]
 244:	ldr	r0, [fp, #-8]
 248:	bl	644 <ht_insert>
 24c:	mov	r3, r0
 250:	mov	r0, r3
 254:	sub	sp, fp, #4
 258:	ldr	fp, [sp]
 25c:	add	sp, sp, #4
 260:	pop	{pc}		; (ldr pc, [sp], #4)

00000264 <fb_value_set_insert_item>:
 264:	str	r4, [sp, #-12]!
 268:	str	fp, [sp, #4]
 26c:	str	lr, [sp, #8]
 270:	add	fp, sp, #8
 274:	sub	sp, sp, #28
 278:	str	r0, [fp, #-16]
 27c:	str	r1, [fp, #-20]	; 0xffffffec
 280:	str	r2, [fp, #-24]	; 0xffffffe8
 284:	ldr	r0, [fp, #-20]	; 0xffffffec
 288:	bl	da8 <ht_key>
 28c:	mov	r4, r0
 290:	ldr	r0, [fp, #-20]	; 0xffffffec
 294:	bl	dcc <ht_key_len>
 298:	mov	r2, r0
 29c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2a0:	str	r3, [sp]
 2a4:	ldr	r3, [fp, #-20]	; 0xffffffec
 2a8:	mov	r1, r4
 2ac:	ldr	r0, [fp, #-16]
 2b0:	bl	644 <ht_insert>
 2b4:	mov	r3, r0
 2b8:	mov	r0, r3
 2bc:	sub	sp, fp, #8
 2c0:	ldr	r4, [sp]
 2c4:	ldr	fp, [sp, #4]
 2c8:	add	sp, sp, #8
 2cc:	pop	{pc}		; (ldr pc, [sp], #4)

000002d0 <fb_value_set_find>:
 2d0:	str	fp, [sp, #-8]!
 2d4:	str	lr, [sp, #4]
 2d8:	add	fp, sp, #4
 2dc:	sub	sp, sp, #16
 2e0:	str	r0, [fp, #-8]
 2e4:	str	r1, [fp, #-12]
 2e8:	str	r2, [fp, #-16]
 2ec:	ldr	r2, [fp, #-16]
 2f0:	ldr	r1, [fp, #-12]
 2f4:	ldr	r0, [fp, #-8]
 2f8:	bl	974 <ht_find>
 2fc:	mov	r3, r0
 300:	mov	r0, r3
 304:	sub	sp, fp, #4
 308:	ldr	fp, [sp]
 30c:	add	sp, sp, #4
 310:	pop	{pc}		; (ldr pc, [sp], #4)

00000314 <fb_value_set_find_item>:
 314:	str	r4, [sp, #-12]!
 318:	str	fp, [sp, #4]
 31c:	str	lr, [sp, #8]
 320:	add	fp, sp, #8
 324:	sub	sp, sp, #12
 328:	str	r0, [fp, #-16]
 32c:	str	r1, [fp, #-20]	; 0xffffffec
 330:	ldr	r0, [fp, #-20]	; 0xffffffec
 334:	bl	da8 <ht_key>
 338:	mov	r4, r0
 33c:	ldr	r0, [fp, #-20]	; 0xffffffec
 340:	bl	dcc <ht_key_len>
 344:	mov	r3, r0
 348:	mov	r2, r3
 34c:	mov	r1, r4
 350:	ldr	r0, [fp, #-16]
 354:	bl	974 <ht_find>
 358:	mov	r3, r0
 35c:	mov	r0, r3
 360:	sub	sp, fp, #8
 364:	ldr	r4, [sp]
 368:	ldr	fp, [sp, #4]
 36c:	add	sp, sp, #8
 370:	pop	{pc}		; (ldr pc, [sp], #4)

00000374 <fb_value_set_remove>:
 374:	str	fp, [sp, #-8]!
 378:	str	lr, [sp, #4]
 37c:	add	fp, sp, #4
 380:	sub	sp, sp, #16
 384:	str	r0, [fp, #-8]
 388:	str	r1, [fp, #-12]
 38c:	str	r2, [fp, #-16]
 390:	ldr	r2, [fp, #-16]
 394:	ldr	r1, [fp, #-12]
 398:	ldr	r0, [fp, #-8]
 39c:	bl	a84 <ht_remove>
 3a0:	mov	r3, r0
 3a4:	mov	r0, r3
 3a8:	sub	sp, fp, #4
 3ac:	ldr	fp, [sp]
 3b0:	add	sp, sp, #4
 3b4:	pop	{pc}		; (ldr pc, [sp], #4)

000003b8 <fb_value_set_remove_item>:
 3b8:	str	r4, [sp, #-12]!
 3bc:	str	fp, [sp, #4]
 3c0:	str	lr, [sp, #8]
 3c4:	add	fp, sp, #8
 3c8:	sub	sp, sp, #12
 3cc:	str	r0, [fp, #-16]
 3d0:	str	r1, [fp, #-20]	; 0xffffffec
 3d4:	ldr	r0, [fp, #-20]	; 0xffffffec
 3d8:	bl	da8 <ht_key>
 3dc:	mov	r4, r0
 3e0:	ldr	r0, [fp, #-20]	; 0xffffffec
 3e4:	bl	dcc <ht_key_len>
 3e8:	mov	r3, r0
 3ec:	mov	r2, r3
 3f0:	mov	r1, r4
 3f4:	ldr	r0, [fp, #-16]
 3f8:	bl	a84 <ht_remove>
 3fc:	mov	r3, r0
 400:	mov	r0, r3
 404:	sub	sp, fp, #8
 408:	ldr	r4, [sp]
 40c:	ldr	fp, [sp, #4]
 410:	add	sp, sp, #8
 414:	pop	{pc}		; (ldr pc, [sp], #4)

00000418 <fb_value_set_visit>:
 418:	str	fp, [sp, #-8]!
 41c:	str	lr, [sp, #4]
 420:	add	fp, sp, #4
 424:	sub	sp, sp, #16
 428:	str	r0, [fp, #-8]
 42c:	str	r1, [fp, #-12]
 430:	str	r2, [fp, #-16]
 434:	ldr	r2, [fp, #-16]
 438:	ldr	r1, [fp, #-12]
 43c:	ldr	r0, [fp, #-8]
 440:	bl	bc0 <ht_visit>
 444:	nop	{0}
 448:	sub	sp, fp, #4
 44c:	ldr	fp, [sp]
 450:	add	sp, sp, #4
 454:	pop	{pc}		; (ldr pc, [sp], #4)

00000458 <ht_init>:
 458:	str	fp, [sp, #-8]!
 45c:	str	lr, [sp, #4]
 460:	add	fp, sp, #4
 464:	sub	sp, sp, #16
 468:	str	r0, [fp, #-16]
 46c:	str	r1, [fp, #-20]	; 0xffffffec
 470:	mov	r3, #4
 474:	str	r3, [fp, #-8]
 478:	b	488 <ht_init+0x30>
 47c:	ldr	r3, [fp, #-8]
 480:	lsl	r3, r3, #1
 484:	str	r3, [fp, #-8]
 488:	ldr	r3, [fp, #-8]
 48c:	mov	r2, #179	; 0xb3
 490:	mul	r3, r2, r3
 494:	lsr	r3, r3, #8
 498:	ldr	r2, [fp, #-20]	; 0xffffffec
 49c:	cmp	r2, r3
 4a0:	bhi	47c <ht_init+0x24>
 4a4:	mov	r1, #4
 4a8:	ldr	r0, [fp, #-8]
 4ac:	bl	0 <calloc>
 4b0:	mov	r3, r0
 4b4:	mov	r2, r3
 4b8:	ldr	r3, [fp, #-16]
 4bc:	str	r2, [r3]
 4c0:	ldr	r3, [fp, #-16]
 4c4:	ldr	r3, [r3]
 4c8:	cmp	r3, #0
 4cc:	bne	4d8 <ht_init+0x80>
 4d0:	mvn	r3, #0
 4d4:	b	500 <ht_init+0xa8>
 4d8:	ldr	r3, [fp, #-16]
 4dc:	mov	r2, #0
 4e0:	str	r2, [r3, #4]
 4e4:	ldr	r3, [fp, #-16]
 4e8:	ldr	r2, [fp, #-8]
 4ec:	str	r2, [r3, #12]
 4f0:	ldr	r3, [fp, #-16]
 4f4:	mov	r2, #0
 4f8:	str	r2, [r3, #8]
 4fc:	mov	r3, #0
 500:	mov	r0, r3
 504:	sub	sp, fp, #4
 508:	ldr	fp, [sp]
 50c:	add	sp, sp, #4
 510:	pop	{pc}		; (ldr pc, [sp], #4)

00000514 <ht_resize>:
 514:	str	r4, [sp, #-12]!
 518:	str	fp, [sp, #4]
 51c:	str	lr, [sp, #8]
 520:	add	fp, sp, #8
 524:	sub	sp, sp, #52	; 0x34
 528:	str	r0, [fp, #-48]	; 0xffffffd0
 52c:	str	r1, [fp, #-52]	; 0xffffffcc
 530:	ldr	r3, [fp, #-48]	; 0xffffffd0
 534:	ldr	r3, [r3]
 538:	str	r3, [fp, #-20]	; 0xffffffec
 53c:	ldr	r3, [fp, #-48]	; 0xffffffd0
 540:	ldr	r3, [r3, #8]
 544:	ldr	r2, [fp, #-52]	; 0xffffffcc
 548:	cmp	r2, r3
 54c:	bcs	55c <ht_resize+0x48>
 550:	ldr	r3, [fp, #-48]	; 0xffffffd0
 554:	ldr	r3, [r3, #8]
 558:	str	r3, [fp, #-52]	; 0xffffffcc
 55c:	sub	r3, fp, #40	; 0x28
 560:	ldr	r1, [fp, #-52]	; 0xffffffcc
 564:	mov	r0, r3
 568:	bl	458 <ht_init>
 56c:	mov	r3, r0
 570:	cmp	r3, #0
 574:	beq	580 <ht_resize+0x6c>
 578:	mvn	r3, #0
 57c:	b	62c <ht_resize+0x118>
 580:	mov	r3, #0
 584:	str	r3, [fp, #-16]
 588:	b	5f8 <ht_resize+0xe4>
 58c:	ldr	r3, [fp, #-16]
 590:	lsl	r3, r3, #2
 594:	ldr	r2, [fp, #-20]	; 0xffffffec
 598:	add	r3, r2, r3
 59c:	ldr	r3, [r3]
 5a0:	str	r3, [fp, #-24]	; 0xffffffe8
 5a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5a8:	cmp	r3, #0
 5ac:	beq	5ec <ht_resize+0xd8>
 5b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5b4:	cmp	r3, #2
 5b8:	beq	5ec <ht_resize+0xd8>
 5bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
 5c0:	bl	da8 <ht_key>
 5c4:	mov	r4, r0
 5c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 5cc:	bl	dcc <ht_key_len>
 5d0:	mov	r2, r0
 5d4:	sub	r0, fp, #40	; 0x28
 5d8:	mov	r3, #3
 5dc:	str	r3, [sp]
 5e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5e4:	mov	r1, r4
 5e8:	bl	644 <ht_insert>
 5ec:	ldr	r3, [fp, #-16]
 5f0:	add	r3, r3, #1
 5f4:	str	r3, [fp, #-16]
 5f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
 5fc:	ldr	r3, [r3, #12]
 600:	ldr	r2, [fp, #-16]
 604:	cmp	r2, r3
 608:	bcc	58c <ht_resize+0x78>
 60c:	ldr	r0, [fp, #-48]	; 0xffffffd0
 610:	bl	c68 <ht_clear>
 614:	sub	r3, fp, #40	; 0x28
 618:	mov	r2, #16
 61c:	mov	r1, r3
 620:	ldr	r0, [fp, #-48]	; 0xffffffd0
 624:	bl	0 <memcpy>
 628:	mov	r3, #0
 62c:	mov	r0, r3
 630:	sub	sp, fp, #8
 634:	ldr	r4, [sp]
 638:	ldr	fp, [sp, #4]
 63c:	add	sp, sp, #8
 640:	pop	{pc}		; (ldr pc, [sp], #4)

00000644 <ht_insert>:
 644:	str	fp, [sp, #-8]!
 648:	str	lr, [sp, #4]
 64c:	add	fp, sp, #4
 650:	sub	sp, sp, #48	; 0x30
 654:	str	r0, [fp, #-40]	; 0xffffffd8
 658:	str	r1, [fp, #-44]	; 0xffffffd4
 65c:	str	r2, [fp, #-48]	; 0xffffffd0
 660:	str	r3, [fp, #-52]	; 0xffffffcc
 664:	mov	r3, #0
 668:	str	r3, [fp, #-16]
 66c:	ldr	r3, [fp, #-52]	; 0xffffffcc
 670:	cmp	r3, #0
 674:	bne	698 <ht_insert+0x54>
 678:	movw	r3, #0
 67c:	movt	r3, #0
 680:	mov	r2, #114	; 0x72
 684:	movw	r1, #0
 688:	movt	r1, #0
 68c:	movw	r0, #0
 690:	movt	r0, #0
 694:	bl	0 <__assert_fail>
 698:	ldr	r3, [fp, #-52]	; 0xffffffcc
 69c:	cmp	r3, #2
 6a0:	bne	6c4 <ht_insert+0x80>
 6a4:	movw	r3, #0
 6a8:	movt	r3, #0
 6ac:	mov	r2, #115	; 0x73
 6b0:	movw	r1, #0
 6b4:	movt	r1, #0
 6b8:	movw	r0, #0
 6bc:	movt	r0, #0
 6c0:	bl	0 <__assert_fail>
 6c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
 6c8:	cmp	r3, #1
 6cc:	bne	6f0 <ht_insert+0xac>
 6d0:	movw	r3, #0
 6d4:	movt	r3, #0
 6d8:	mov	r2, #116	; 0x74
 6dc:	movw	r1, #0
 6e0:	movt	r1, #0
 6e4:	movw	r0, #0
 6e8:	movt	r0, #0
 6ec:	bl	0 <__assert_fail>
 6f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
 6f4:	ldr	r2, [r3, #8]
 6f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 6fc:	ldr	r3, [r3, #12]
 700:	mov	r1, #179	; 0xb3
 704:	mul	r3, r1, r3
 708:	lsr	r3, r3, #8
 70c:	cmp	r2, r3
 710:	bcc	764 <ht_insert+0x120>
 714:	ldr	r3, [fp, #-40]	; 0xffffffd8
 718:	ldr	r3, [r3, #8]
 71c:	lsl	r3, r3, #1
 720:	mov	r1, r3
 724:	ldr	r0, [fp, #-40]	; 0xffffffd8
 728:	bl	514 <ht_resize>
 72c:	mov	r3, r0
 730:	cmp	r3, #0
 734:	beq	764 <ht_insert+0x120>
 738:	movw	r3, #0
 73c:	movt	r3, #0
 740:	ldr	r3, [r3]
 744:	movw	r2, #0
 748:	movt	r2, #0
 74c:	movw	r1, #0
 750:	movt	r1, #0
 754:	mov	r0, r3
 758:	bl	0 <fprintf>
 75c:	mov	r0, #1
 760:	bl	0 <exit>
 764:	ldr	r3, [fp, #-40]	; 0xffffffd8
 768:	ldr	r3, [r3]
 76c:	str	r3, [fp, #-20]	; 0xffffffec
 770:	ldr	r3, [fp, #-40]	; 0xffffffd8
 774:	ldr	r3, [r3, #12]
 778:	sub	r3, r3, #1
 77c:	str	r3, [fp, #-24]	; 0xffffffe8
 780:	ldr	r1, [fp, #-48]	; 0xffffffd0
 784:	ldr	r0, [fp, #-44]	; 0xffffffd4
 788:	bl	40 <value_hash_function>
 78c:	str	r0, [fp, #-28]	; 0xffffffe4
 790:	mov	r3, #0
 794:	str	r3, [fp, #-8]
 798:	ldr	r2, [fp, #-28]	; 0xffffffe4
 79c:	ldr	r3, [fp, #-8]
 7a0:	add	r3, r2, r3
 7a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
 7a8:	and	r3, r3, r2
 7ac:	str	r3, [fp, #-12]
 7b0:	ldr	r3, [fp, #4]
 7b4:	cmp	r3, #2
 7b8:	beq	7c8 <ht_insert+0x184>
 7bc:	ldr	r3, [fp, #4]
 7c0:	cmp	r3, #3
 7c4:	bne	8f8 <ht_insert+0x2b4>
 7c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 7cc:	ldr	r3, [r3, #8]
 7d0:	add	r2, r3, #1
 7d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
 7d8:	str	r2, [r3, #8]
 7dc:	b	804 <ht_insert+0x1c0>
 7e0:	ldr	r3, [fp, #-8]
 7e4:	add	r3, r3, #1
 7e8:	str	r3, [fp, #-8]
 7ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
 7f0:	ldr	r3, [fp, #-8]
 7f4:	add	r3, r2, r3
 7f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
 7fc:	and	r3, r3, r2
 800:	str	r3, [fp, #-12]
 804:	ldr	r3, [fp, #-12]
 808:	lsl	r3, r3, #2
 80c:	ldr	r2, [fp, #-20]	; 0xffffffec
 810:	add	r3, r2, r3
 814:	ldr	r3, [r3]
 818:	cmp	r3, #0
 81c:	beq	83c <ht_insert+0x1f8>
 820:	ldr	r3, [fp, #-12]
 824:	lsl	r3, r3, #2
 828:	ldr	r2, [fp, #-20]	; 0xffffffec
 82c:	add	r3, r2, r3
 830:	ldr	r3, [r3]
 834:	cmp	r3, #2
 838:	bne	7e0 <ht_insert+0x19c>
 83c:	ldr	r3, [fp, #-12]
 840:	lsl	r3, r3, #2
 844:	ldr	r2, [fp, #-20]	; 0xffffffec
 848:	add	r3, r2, r3
 84c:	ldr	r2, [fp, #-52]	; 0xffffffcc
 850:	str	r2, [r3]
 854:	mov	r3, #0
 858:	b	960 <ht_insert+0x31c>
 85c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 860:	cmp	r3, #2
 864:	bne	88c <ht_insert+0x248>
 868:	ldr	r3, [fp, #-16]
 86c:	cmp	r3, #0
 870:	bne	8d4 <ht_insert+0x290>
 874:	ldr	r3, [fp, #-12]
 878:	lsl	r3, r3, #2
 87c:	ldr	r2, [fp, #-20]	; 0xffffffec
 880:	add	r3, r2, r3
 884:	str	r3, [fp, #-16]
 888:	b	8d4 <ht_insert+0x290>
 88c:	ldr	r2, [fp, #-32]	; 0xffffffe0
 890:	ldr	r1, [fp, #-48]	; 0xffffffd0
 894:	ldr	r0, [fp, #-44]	; 0xffffffd4
 898:	bl	cc0 <ht_match>
 89c:	mov	r3, r0
 8a0:	cmp	r3, #0
 8a4:	beq	8d4 <ht_insert+0x290>
 8a8:	ldr	r3, [fp, #4]
 8ac:	cmp	r3, #0
 8b0:	bne	8cc <ht_insert+0x288>
 8b4:	ldr	r3, [fp, #-12]
 8b8:	lsl	r3, r3, #2
 8bc:	ldr	r2, [fp, #-20]	; 0xffffffec
 8c0:	add	r3, r2, r3
 8c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
 8c8:	str	r2, [r3]
 8cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
 8d0:	b	960 <ht_insert+0x31c>
 8d4:	ldr	r3, [fp, #-8]
 8d8:	add	r3, r3, #1
 8dc:	str	r3, [fp, #-8]
 8e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
 8e4:	ldr	r3, [fp, #-8]
 8e8:	add	r3, r2, r3
 8ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
 8f0:	and	r3, r3, r2
 8f4:	str	r3, [fp, #-12]
 8f8:	ldr	r3, [fp, #-12]
 8fc:	lsl	r3, r3, #2
 900:	ldr	r2, [fp, #-20]	; 0xffffffec
 904:	add	r3, r2, r3
 908:	ldr	r3, [r3]
 90c:	str	r3, [fp, #-32]	; 0xffffffe0
 910:	ldr	r3, [fp, #-32]	; 0xffffffe0
 914:	cmp	r3, #0
 918:	bne	85c <ht_insert+0x218>
 91c:	ldr	r3, [fp, #-16]
 920:	cmp	r3, #0
 924:	bne	93c <ht_insert+0x2f8>
 928:	ldr	r3, [fp, #-12]
 92c:	lsl	r3, r3, #2
 930:	ldr	r2, [fp, #-20]	; 0xffffffec
 934:	add	r3, r2, r3
 938:	str	r3, [fp, #-16]
 93c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 940:	ldr	r3, [r3, #8]
 944:	add	r2, r3, #1
 948:	ldr	r3, [fp, #-40]	; 0xffffffd8
 94c:	str	r2, [r3, #8]
 950:	ldr	r3, [fp, #-16]
 954:	ldr	r2, [fp, #-52]	; 0xffffffcc
 958:	str	r2, [r3]
 95c:	mov	r3, #0
 960:	mov	r0, r3
 964:	sub	sp, fp, #4
 968:	ldr	fp, [sp]
 96c:	add	sp, sp, #4
 970:	pop	{pc}		; (ldr pc, [sp], #4)

00000974 <ht_find>:
 974:	str	fp, [sp, #-8]!
 978:	str	lr, [sp, #4]
 97c:	add	fp, sp, #4
 980:	sub	sp, sp, #40	; 0x28
 984:	str	r0, [fp, #-32]	; 0xffffffe0
 988:	str	r1, [fp, #-36]	; 0xffffffdc
 98c:	str	r2, [fp, #-40]	; 0xffffffd8
 990:	ldr	r3, [fp, #-32]	; 0xffffffe0
 994:	ldr	r3, [r3]
 998:	str	r3, [fp, #-16]
 99c:	ldr	r3, [fp, #-16]
 9a0:	cmp	r3, #0
 9a4:	bne	9b0 <ht_find+0x3c>
 9a8:	mov	r3, #0
 9ac:	b	a70 <ht_find+0xfc>
 9b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9b4:	ldr	r3, [r3, #12]
 9b8:	sub	r3, r3, #1
 9bc:	str	r3, [fp, #-20]	; 0xffffffec
 9c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
 9c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
 9c8:	bl	40 <value_hash_function>
 9cc:	str	r0, [fp, #-24]	; 0xffffffe8
 9d0:	mov	r3, #0
 9d4:	str	r3, [fp, #-8]
 9d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
 9dc:	ldr	r3, [fp, #-8]
 9e0:	add	r3, r2, r3
 9e4:	ldr	r2, [fp, #-20]	; 0xffffffec
 9e8:	and	r3, r3, r2
 9ec:	str	r3, [fp, #-12]
 9f0:	b	a48 <ht_find+0xd4>
 9f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 9f8:	cmp	r3, #2
 9fc:	beq	a24 <ht_find+0xb0>
 a00:	ldr	r2, [fp, #-28]	; 0xffffffe4
 a04:	ldr	r1, [fp, #-40]	; 0xffffffd8
 a08:	ldr	r0, [fp, #-36]	; 0xffffffdc
 a0c:	bl	cc0 <ht_match>
 a10:	mov	r3, r0
 a14:	cmp	r3, #0
 a18:	beq	a24 <ht_find+0xb0>
 a1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a20:	b	a70 <ht_find+0xfc>
 a24:	ldr	r3, [fp, #-8]
 a28:	add	r3, r3, #1
 a2c:	str	r3, [fp, #-8]
 a30:	ldr	r2, [fp, #-24]	; 0xffffffe8
 a34:	ldr	r3, [fp, #-8]
 a38:	add	r3, r2, r3
 a3c:	ldr	r2, [fp, #-20]	; 0xffffffec
 a40:	and	r3, r3, r2
 a44:	str	r3, [fp, #-12]
 a48:	ldr	r3, [fp, #-12]
 a4c:	lsl	r3, r3, #2
 a50:	ldr	r2, [fp, #-16]
 a54:	add	r3, r2, r3
 a58:	ldr	r3, [r3]
 a5c:	str	r3, [fp, #-28]	; 0xffffffe4
 a60:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a64:	cmp	r3, #0
 a68:	bne	9f4 <ht_find+0x80>
 a6c:	mov	r3, #0
 a70:	mov	r0, r3
 a74:	sub	sp, fp, #4
 a78:	ldr	fp, [sp]
 a7c:	add	sp, sp, #4
 a80:	pop	{pc}		; (ldr pc, [sp], #4)

00000a84 <ht_remove>:
 a84:	str	fp, [sp, #-8]!
 a88:	str	lr, [sp, #4]
 a8c:	add	fp, sp, #4
 a90:	sub	sp, sp, #40	; 0x28
 a94:	str	r0, [fp, #-32]	; 0xffffffe0
 a98:	str	r1, [fp, #-36]	; 0xffffffdc
 a9c:	str	r2, [fp, #-40]	; 0xffffffd8
 aa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 aa4:	ldr	r3, [r3]
 aa8:	str	r3, [fp, #-16]
 aac:	ldr	r3, [fp, #-16]
 ab0:	cmp	r3, #0
 ab4:	bne	ac0 <ht_remove+0x3c>
 ab8:	mov	r3, #0
 abc:	b	bac <ht_remove+0x128>
 ac0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 ac4:	ldr	r3, [r3, #12]
 ac8:	sub	r3, r3, #1
 acc:	str	r3, [fp, #-20]	; 0xffffffec
 ad0:	ldr	r1, [fp, #-40]	; 0xffffffd8
 ad4:	ldr	r0, [fp, #-36]	; 0xffffffdc
 ad8:	bl	40 <value_hash_function>
 adc:	str	r0, [fp, #-24]	; 0xffffffe8
 ae0:	mov	r3, #0
 ae4:	str	r3, [fp, #-8]
 ae8:	ldr	r2, [fp, #-24]	; 0xffffffe8
 aec:	ldr	r3, [fp, #-8]
 af0:	add	r3, r2, r3
 af4:	ldr	r2, [fp, #-20]	; 0xffffffec
 af8:	and	r3, r3, r2
 afc:	str	r3, [fp, #-12]
 b00:	b	b84 <ht_remove+0x100>
 b04:	ldr	r3, [fp, #-28]	; 0xffffffe4
 b08:	cmp	r3, #2
 b0c:	beq	b60 <ht_remove+0xdc>
 b10:	ldr	r2, [fp, #-28]	; 0xffffffe4
 b14:	ldr	r1, [fp, #-40]	; 0xffffffd8
 b18:	ldr	r0, [fp, #-36]	; 0xffffffdc
 b1c:	bl	cc0 <ht_match>
 b20:	mov	r3, r0
 b24:	cmp	r3, #0
 b28:	beq	b60 <ht_remove+0xdc>
 b2c:	ldr	r3, [fp, #-12]
 b30:	lsl	r3, r3, #2
 b34:	ldr	r2, [fp, #-16]
 b38:	add	r3, r2, r3
 b3c:	mov	r2, #2
 b40:	str	r2, [r3]
 b44:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b48:	ldr	r3, [r3, #8]
 b4c:	sub	r2, r3, #1
 b50:	ldr	r3, [fp, #-32]	; 0xffffffe0
 b54:	str	r2, [r3, #8]
 b58:	ldr	r3, [fp, #-28]	; 0xffffffe4
 b5c:	b	bac <ht_remove+0x128>
 b60:	ldr	r3, [fp, #-8]
 b64:	add	r3, r3, #1
 b68:	str	r3, [fp, #-8]
 b6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 b70:	ldr	r3, [fp, #-8]
 b74:	add	r3, r2, r3
 b78:	ldr	r2, [fp, #-20]	; 0xffffffec
 b7c:	and	r3, r3, r2
 b80:	str	r3, [fp, #-12]
 b84:	ldr	r3, [fp, #-12]
 b88:	lsl	r3, r3, #2
 b8c:	ldr	r2, [fp, #-16]
 b90:	add	r3, r2, r3
 b94:	ldr	r3, [r3]
 b98:	str	r3, [fp, #-28]	; 0xffffffe4
 b9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 ba0:	cmp	r3, #0
 ba4:	bne	b04 <ht_remove+0x80>
 ba8:	mov	r3, #0
 bac:	mov	r0, r3
 bb0:	sub	sp, fp, #4
 bb4:	ldr	fp, [sp]
 bb8:	add	sp, sp, #4
 bbc:	pop	{pc}		; (ldr pc, [sp], #4)

00000bc0 <ht_visit>:
 bc0:	str	fp, [sp, #-8]!
 bc4:	str	lr, [sp, #4]
 bc8:	add	fp, sp, #4
 bcc:	sub	sp, sp, #32
 bd0:	str	r0, [fp, #-24]	; 0xffffffe8
 bd4:	str	r1, [fp, #-28]	; 0xffffffe4
 bd8:	str	r2, [fp, #-32]	; 0xffffffe0
 bdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 be0:	ldr	r3, [r3]
 be4:	str	r3, [fp, #-12]
 be8:	mov	r3, #0
 bec:	str	r3, [fp, #-8]
 bf0:	b	c40 <ht_visit+0x80>
 bf4:	ldr	r3, [fp, #-8]
 bf8:	lsl	r3, r3, #2
 bfc:	ldr	r2, [fp, #-12]
 c00:	add	r3, r2, r3
 c04:	ldr	r3, [r3]
 c08:	str	r3, [fp, #-16]
 c0c:	ldr	r3, [fp, #-16]
 c10:	cmp	r3, #0
 c14:	beq	c34 <ht_visit+0x74>
 c18:	ldr	r3, [fp, #-16]
 c1c:	cmp	r3, #2
 c20:	beq	c34 <ht_visit+0x74>
 c24:	ldr	r3, [fp, #-28]	; 0xffffffe4
 c28:	ldr	r1, [fp, #-16]
 c2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
 c30:	blx	r3
 c34:	ldr	r3, [fp, #-8]
 c38:	add	r3, r3, #1
 c3c:	str	r3, [fp, #-8]
 c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
 c44:	ldr	r3, [r3, #12]
 c48:	ldr	r2, [fp, #-8]
 c4c:	cmp	r2, r3
 c50:	bcc	bf4 <ht_visit+0x34>
 c54:	nop	{0}
 c58:	sub	sp, fp, #4
 c5c:	ldr	fp, [sp]
 c60:	add	sp, sp, #4
 c64:	pop	{pc}		; (ldr pc, [sp], #4)

00000c68 <ht_clear>:
 c68:	str	fp, [sp, #-8]!
 c6c:	str	lr, [sp, #4]
 c70:	add	fp, sp, #4
 c74:	sub	sp, sp, #8
 c78:	str	r0, [fp, #-8]
 c7c:	ldr	r3, [fp, #-8]
 c80:	ldr	r3, [r3]
 c84:	cmp	r3, #0
 c88:	beq	c9c <ht_clear+0x34>
 c8c:	ldr	r3, [fp, #-8]
 c90:	ldr	r3, [r3]
 c94:	mov	r0, r3
 c98:	bl	0 <free>
 c9c:	mov	r2, #16
 ca0:	mov	r1, #0
 ca4:	ldr	r0, [fp, #-8]
 ca8:	bl	0 <memset>
 cac:	nop	{0}
 cb0:	sub	sp, fp, #4
 cb4:	ldr	fp, [sp]
 cb8:	add	sp, sp, #4
 cbc:	pop	{pc}		; (ldr pc, [sp], #4)

00000cc0 <ht_match>:
 cc0:	push	{fp}		; (str fp, [sp, #-4]!)
 cc4:	add	fp, sp, #0
 cc8:	sub	sp, sp, #28
 ccc:	str	r0, [fp, #-16]
 cd0:	str	r1, [fp, #-20]	; 0xffffffec
 cd4:	str	r2, [fp, #-24]	; 0xffffffe8
 cd8:	ldr	r3, [fp, #-16]
 cdc:	str	r3, [fp, #-8]
 ce0:	ldr	r3, [fp, #-8]
 ce4:	ldrh	r2, [r3, #8]
 ce8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 cec:	ldrh	r3, [r3, #8]
 cf0:	cmp	r2, r3
 cf4:	beq	d00 <ht_match+0x40>
 cf8:	mov	r3, #0
 cfc:	b	d98 <ht_match+0xd8>
 d00:	ldr	r3, [fp, #-8]
 d04:	ldrh	r3, [r3, #8]
 d08:	cmp	r3, #5
 d0c:	beq	d48 <ht_match+0x88>
 d10:	cmp	r3, #6
 d14:	beq	d70 <ht_match+0xb0>
 d18:	cmp	r3, #4
 d1c:	bne	d94 <ht_match+0xd4>
 d20:	ldr	r3, [fp, #-8]
 d24:	ldrd	r0, [r3]
 d28:	ldr	r3, [fp, #-24]	; 0xffffffe8
 d2c:	ldrd	r2, [r3]
 d30:	cmp	r1, r3
 d34:	cmpeq	r0, r2
 d38:	moveq	r3, #1
 d3c:	movne	r3, #0
 d40:	uxtb	r3, r3
 d44:	b	d98 <ht_match+0xd8>
 d48:	ldr	r3, [fp, #-8]
 d4c:	ldrd	r0, [r3]
 d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
 d54:	ldrd	r2, [r3]
 d58:	cmp	r1, r3
 d5c:	cmpeq	r0, r2
 d60:	moveq	r3, #1
 d64:	movne	r3, #0
 d68:	uxtb	r3, r3
 d6c:	b	d98 <ht_match+0xd8>
 d70:	ldr	r3, [fp, #-8]
 d74:	ldrb	r2, [r3]
 d78:	ldr	r3, [fp, #-24]	; 0xffffffe8
 d7c:	ldrb	r3, [r3]
 d80:	cmp	r2, r3
 d84:	moveq	r3, #1
 d88:	movne	r3, #0
 d8c:	uxtb	r3, r3
 d90:	b	d98 <ht_match+0xd8>
 d94:	mov	r3, #0
 d98:	mov	r0, r3
 d9c:	add	sp, fp, #0
 da0:	pop	{fp}		; (ldr fp, [sp], #4)
 da4:	bx	lr

00000da8 <ht_key>:
 da8:	push	{fp}		; (str fp, [sp, #-4]!)
 dac:	add	fp, sp, #0
 db0:	sub	sp, sp, #12
 db4:	str	r0, [fp, #-8]
 db8:	ldr	r3, [fp, #-8]
 dbc:	mov	r0, r3
 dc0:	add	sp, fp, #0
 dc4:	pop	{fp}		; (ldr fp, [sp], #4)
 dc8:	bx	lr

00000dcc <ht_key_len>:
 dcc:	push	{fp}		; (str fp, [sp, #-4]!)
 dd0:	add	fp, sp, #0
 dd4:	sub	sp, sp, #12
 dd8:	str	r0, [fp, #-8]
 ddc:	mov	r3, #0
 de0:	mov	r0, r3
 de4:	add	sp, fp, #0
 de8:	pop	{fp}		; (ldr fp, [sp], #4)
 dec:	bx	lr
