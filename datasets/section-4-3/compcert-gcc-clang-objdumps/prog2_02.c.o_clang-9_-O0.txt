
../compcert-repos/prog2/CMakeFiles/2.2.dir/Aula02_Alocacao_dinamica_de_memoria_e_vetores/02.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #128	; 0x80
   c:	movw	r0, #0
  10:	str	r0, [fp, #-4]
  14:	movw	r0, #12
  18:	bl	0 <malloc>
  1c:	str	r0, [fp, #-8]
  20:	movw	r0, #0
  24:	str	r0, [sp, #36]	; 0x24
  28:	ldr	r0, [sp, #36]	; 0x24
  2c:	cmp	r0, #3
  30:	bge	58 <main+0x58>
  34:	ldr	r0, [fp, #-8]
  38:	ldr	r1, [sp, #36]	; 0x24
  3c:	add	r0, r0, r1, lsl #2
  40:	movw	r1, #0
  44:	str	r1, [r0]
  48:	ldr	r0, [sp, #36]	; 0x24
  4c:	add	r0, r0, #1
  50:	str	r0, [sp, #36]	; 0x24
  54:	b	28 <main+0x28>
  58:	b	5c <main+0x5c>
  5c:	movw	r0, #0
  60:	str	r0, [sp, #36]	; 0x24
  64:	ldr	r0, [sp, #36]	; 0x24
  68:	cmp	r0, #3
  6c:	bge	e0 <main+0xe0>
  70:	ldr	r0, [sp, #36]	; 0x24
  74:	add	r1, r0, #1
  78:	movw	r0, #0
  7c:	movt	r0, #0
  80:	bl	0 <printf>
  84:	ldr	r1, [fp, #-8]
  88:	ldr	r2, [sp, #36]	; 0x24
  8c:	add	r1, r1, r2, lsl #2
  90:	ldr	r1, [r1]
  94:	movw	r2, #0
  98:	cmp	r1, r2
  9c:	bne	b0 <main+0xb0>
  a0:	movw	r0, #0
  a4:	movt	r0, #0
  a8:	bl	0 <printf>
  ac:	b	cc <main+0xcc>
  b0:	ldr	r0, [fp, #-8]
  b4:	ldr	r1, [sp, #36]	; 0x24
  b8:	add	r0, r0, r1, lsl #2
  bc:	ldr	r1, [r0]
  c0:	movw	r0, #0
  c4:	movt	r0, #0
  c8:	bl	0 <printf>
  cc:	b	d0 <main+0xd0>
  d0:	ldr	r0, [sp, #36]	; 0x24
  d4:	add	r0, r0, #1
  d8:	str	r0, [sp, #36]	; 0x24
  dc:	b	64 <main+0x64>
  e0:	b	e4 <main+0xe4>
  e4:	movw	r0, #0
  e8:	movt	r0, #0
  ec:	movw	r1, #3
  f0:	bl	0 <printf>
  f4:	movw	r1, #0
  f8:	movt	r1, #0
  fc:	str	r0, [sp, #28]
 100:	mov	r0, r1
 104:	add	r1, sp, #32
 108:	bl	0 <__isoc99_scanf>
 10c:	str	r0, [sp, #24]
 110:	bl	0 <getchar>
 114:	ldr	r0, [sp, #32]
 118:	cmp	r0, #0
 11c:	movw	r0, #1
 120:	str	r0, [sp, #20]
 124:	blt	13c <main+0x13c>
 128:	ldr	r0, [sp, #32]
 12c:	cmp	r0, #3
 130:	movw	r0, #0
 134:	movgt	r0, #1
 138:	str	r0, [sp, #20]
 13c:	ldr	r0, [sp, #20]
 140:	tst	r0, #1
 144:	bne	e4 <main+0xe4>
 148:	ldr	r0, [sp, #32]
 14c:	cmp	r0, #0
 150:	bne	158 <main+0x158>
 154:	b	20c <main+0x20c>
 158:	add	r1, sp, #40	; 0x28
 15c:	movw	r0, #0
 160:	movt	r0, #0
 164:	str	r1, [sp, #16]
 168:	bl	0 <printf>
 16c:	movw	r1, #0
 170:	movt	r1, #0
 174:	ldr	r2, [r1]
 178:	add	r1, sp, #40	; 0x28
 17c:	mov	r3, #80	; 0x50
 180:	str	r0, [sp, #12]
 184:	mov	r0, r1
 188:	str	r1, [sp, #8]
 18c:	mov	r1, r3
 190:	bl	0 <fgets>
 194:	ldr	r1, [sp, #8]
 198:	str	r0, [sp, #4]
 19c:	mov	r0, r1
 1a0:	bl	0 <strlen>
 1a4:	ldr	r1, [sp, #8]
 1a8:	add	r0, r0, r1
 1ac:	mov	r2, #0
 1b0:	strb	r2, [r0, #-1]
 1b4:	ldr	r0, [fp, #-8]
 1b8:	ldr	r2, [sp, #32]
 1bc:	add	r0, r0, r2, lsl #2
 1c0:	ldr	r0, [r0, #-4]
 1c4:	str	r0, [sp]
 1c8:	mov	r0, r1
 1cc:	bl	0 <strlen>
 1d0:	add	r1, r0, #1
 1d4:	ldr	r0, [sp]
 1d8:	bl	0 <realloc>
 1dc:	ldr	r1, [fp, #-8]
 1e0:	ldr	r2, [sp, #32]
 1e4:	add	r1, r1, r2, lsl #2
 1e8:	str	r0, [r1, #-4]
 1ec:	ldr	r0, [fp, #-8]
 1f0:	ldr	r1, [sp, #32]
 1f4:	sub	r1, r1, #1
 1f8:	add	r0, r0, r1, lsl #2
 1fc:	ldr	r0, [r0]
 200:	ldr	r1, [sp, #16]
 204:	bl	0 <strcpy>
 208:	b	5c <main+0x5c>
 20c:	movw	r0, #0
 210:	str	r0, [sp, #36]	; 0x24
 214:	ldr	r0, [sp, #36]	; 0x24
 218:	cmp	r0, #3
 21c:	bge	244 <main+0x244>
 220:	ldr	r0, [fp, #-8]
 224:	ldr	r1, [sp, #36]	; 0x24
 228:	add	r0, r0, r1, lsl #2
 22c:	ldr	r0, [r0]
 230:	bl	0 <free>
 234:	ldr	r0, [sp, #36]	; 0x24
 238:	add	r0, r0, #1
 23c:	str	r0, [sp, #36]	; 0x24
 240:	b	214 <main+0x214>
 244:	ldr	r0, [fp, #-8]
 248:	bl	0 <free>
 24c:	movw	r0, #0
 250:	mov	sp, fp
 254:	pop	{fp, pc}
