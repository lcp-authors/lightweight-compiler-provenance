
../repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-xmlschema.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_attributes>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #40	; 0x28
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	str	r5, [sp, #12]
  18:	mov	r5, r0
  1c:	mov	r0, r1
  20:	add	r1, sp, #24
  24:	bl	0 <coda_type_get_attributes>
  28:	ldr	r0, [sp, #24]
  2c:	add	r1, sp, #28
  30:	bl	0 <coda_type_get_num_record_fields>
  34:	mov	r4, #0
  38:	ldr	ip, [sp, #28]
  3c:	cmp	r4, ip
  40:	bge	124 <print_attributes+0x124>
  44:	ldr	r0, [sp, #24]
  48:	add	r2, sp, #16
  4c:	mov	r1, r4
  50:	bl	0 <coda_type_get_record_field_real_name>
  54:	ldr	r0, [sp, #24]
  58:	add	r2, sp, #20
  5c:	mov	r1, r4
  60:	bl	0 <coda_type_get_record_field_available_status>
  64:	ldr	r0, [sp, #24]
  68:	add	r2, sp, #36	; 0x24
  6c:	mov	r1, r4
  70:	bl	0 <coda_type_get_record_field_type>
  74:	ldr	r0, [sp, #36]	; 0x24
  78:	add	r1, sp, #32
  7c:	bl	0 <coda_type_get_class>
  80:	ldr	r1, [pc, #184]	; 140 <print_attributes+0x140>
  84:	ldr	r2, [sp, #16]
  88:	mov	r0, r5
  8c:	bl	0 <fprintf>
  90:	ldr	r1, [sp, #20]
  94:	cmp	r1, #1
  98:	bne	a8 <print_attributes+0xa8>
  9c:	ldr	r1, [pc, #172]	; 150 <print_attributes+0x150>
  a0:	mov	r0, r5
  a4:	bl	0 <fprintf>
  a8:	ldr	r2, [sp, #32]
  ac:	cmp	r2, #2
  b0:	beq	104 <print_attributes+0x104>
  b4:	cmp	r2, #3
  b8:	beq	f4 <print_attributes+0xf4>
  bc:	cmp	r2, #4
  c0:	bne	d4 <print_attributes+0xd4>
  c4:	ldr	r1, [pc, #128]	; 14c <print_attributes+0x14c>
  c8:	mov	r0, r5
  cc:	bl	0 <fprintf>
  d0:	b	110 <print_attributes+0x110>
  d4:	ldr	r0, [pc, #124]	; 158 <print_attributes+0x158>
  d8:	ldr	r1, [pc, #116]	; 154 <print_attributes+0x154>
  dc:	mov	r2, #82	; 0x52
  e0:	ldr	r3, [pc, #84]	; 13c <print_attributes+0x13c>
  e4:	bl	0 <__assert_fail>
  e8:	mov	r0, #1
  ec:	bl	0 <exit>
  f0:	b	110 <print_attributes+0x110>
  f4:	ldr	r1, [pc, #72]	; 144 <print_attributes+0x144>
  f8:	mov	r0, r5
  fc:	bl	0 <fprintf>
 100:	b	110 <print_attributes+0x110>
 104:	ldr	r1, [pc, #60]	; 148 <print_attributes+0x148>
 108:	mov	r0, r5
 10c:	bl	0 <fprintf>
 110:	ldr	r1, [pc, #32]	; 138 <print_attributes+0x138>
 114:	mov	r0, r5
 118:	bl	0 <fprintf>
 11c:	add	r4, r4, #1
 120:	b	38 <print_attributes+0x38>
 124:	ldr	r4, [sp, #8]
 128:	ldr	r5, [sp, #12]
 12c:	ldr	lr, [sp, #4]
 130:	add	sp, sp, #40	; 0x28
 134:	bx	lr
 138:	.word	0x00000000
 13c:	.word	0x00000391
 140:	.word	0x00000368
 144:	.word	0x00000380
 148:	.word	0x0000001f
 14c:	.word	0x000000b4
 150:	.word	0x0000007c
 154:	.word	0x00000225
 158:	.word	0x0000030f

0000015c <print_xml_element>:
 15c:	mov	ip, sp
 160:	sub	sp, sp, #56	; 0x38
 164:	str	ip, [sp]
 168:	str	lr, [sp, #4]
 16c:	str	r4, [sp, #8]
 170:	str	r5, [sp, #12]
 174:	str	r6, [sp, #16]
 178:	str	r7, [sp, #20]
 17c:	mov	r7, r1
 180:	mov	r4, r0
 184:	add	r1, sp, #36	; 0x24
 188:	mov	r0, r7
 18c:	bl	0 <coda_type_get_class>
 190:	ldr	ip, [sp, #36]	; 0x24
 194:	cmp	ip, #0
 198:	beq	1b0 <print_xml_element+0x54>
 19c:	ldr	r0, [pc, #696]	; 45c <print_xml_element+0x300>
 1a0:	ldr	r1, [pc, #696]	; 460 <print_xml_element+0x304>
 1a4:	mov	r2, #96	; 0x60
 1a8:	ldr	r3, [pc, #668]	; 44c <print_xml_element+0x2f0>
 1ac:	bl	0 <__assert_fail>
 1b0:	ldr	r1, [pc, #636]	; 434 <print_xml_element+0x2d8>
 1b4:	mov	r0, r4
 1b8:	bl	0 <fprintf>
 1bc:	add	r1, sp, #40	; 0x28
 1c0:	mov	r0, r7
 1c4:	bl	0 <coda_type_get_num_record_fields>
 1c8:	mov	r5, #0
 1cc:	ldr	r1, [sp, #40]	; 0x28
 1d0:	cmp	r5, r1
 1d4:	bge	3e8 <print_xml_element+0x28c>
 1d8:	add	r2, sp, #28
 1dc:	mov	r1, r5
 1e0:	mov	r0, r7
 1e4:	bl	0 <coda_type_get_record_field_real_name>
 1e8:	add	r2, sp, #48	; 0x30
 1ec:	mov	r1, r5
 1f0:	mov	r0, r7
 1f4:	bl	0 <coda_type_get_record_field_type>
 1f8:	ldr	r0, [sp, #48]	; 0x30
 1fc:	add	r1, sp, #44	; 0x2c
 200:	bl	0 <coda_type_get_class>
 204:	ldr	r0, [sp, #48]	; 0x30
 208:	add	r1, sp, #32
 20c:	bl	0 <coda_type_get_format>
 210:	ldr	r1, [pc, #576]	; 458 <print_xml_element+0x2fc>
 214:	ldr	r2, [sp, #28]
 218:	mov	r0, r4
 21c:	bl	0 <fprintf>
 220:	ldr	r0, [sp, #44]	; 0x2c
 224:	cmp	r0, #1
 228:	bne	268 <print_xml_element+0x10c>
 22c:	ldr	r3, [sp, #32]
 230:	cmp	r3, #2
 234:	bne	268 <print_xml_element+0x10c>
 238:	ldr	r1, [pc, #488]	; 428 <print_xml_element+0x2cc>
 23c:	mov	r0, r4
 240:	bl	0 <fprintf>
 244:	ldr	r0, [sp, #48]	; 0x30
 248:	add	r1, sp, #48	; 0x30
 24c:	bl	0 <coda_type_get_array_base_type>
 250:	ldr	r0, [sp, #48]	; 0x30
 254:	add	r1, sp, #44	; 0x2c
 258:	bl	0 <coda_type_get_class>
 25c:	ldr	r0, [sp, #48]	; 0x30
 260:	add	r1, sp, #32
 264:	bl	0 <coda_type_get_format>
 268:	ldr	ip, [sp, #44]	; 0x2c
 26c:	cmp	ip, #6
 270:	bne	298 <print_xml_element+0x13c>
 274:	ldr	r0, [sp, #48]	; 0x30
 278:	add	r1, sp, #48	; 0x30
 27c:	bl	0 <coda_type_get_special_base_type>
 280:	ldr	r0, [sp, #48]	; 0x30
 284:	add	r1, sp, #44	; 0x2c
 288:	bl	0 <coda_type_get_class>
 28c:	ldr	r0, [sp, #48]	; 0x30
 290:	add	r1, sp, #32
 294:	bl	0 <coda_type_get_format>
 298:	ldr	r0, [sp, #44]	; 0x2c
 29c:	cmp	r0, #0
 2a0:	beq	3bc <print_xml_element+0x260>
 2a4:	cmp	r0, #3
 2a8:	bcs	2ec <print_xml_element+0x190>
 2ac:	cmp	r0, #1
 2b0:	beq	2c4 <print_xml_element+0x168>
 2b4:	cmp	r0, #2
 2b8:	bne	304 <print_xml_element+0x1a8>
 2bc:	ldr	r6, [pc, #424]	; 46c <print_xml_element+0x310>
 2c0:	b	328 <print_xml_element+0x1cc>
 2c4:	ldr	r2, [sp, #32]
 2c8:	cmp	r2, #2
 2cc:	bne	2e4 <print_xml_element+0x188>
 2d0:	ldr	r0, [pc, #380]	; 454 <print_xml_element+0x2f8>
 2d4:	ldr	r1, [pc, #388]	; 460 <print_xml_element+0x304>
 2d8:	mov	r2, #138	; 0x8a
 2dc:	ldr	r3, [pc, #360]	; 44c <print_xml_element+0x2f0>
 2e0:	bl	0 <__assert_fail>
 2e4:	ldr	r6, [pc, #396]	; 478 <print_xml_element+0x31c>
 2e8:	b	328 <print_xml_element+0x1cc>
 2ec:	cmp	r0, #3
 2f0:	beq	324 <print_xml_element+0x1c8>
 2f4:	cmp	r0, #4
 2f8:	bne	304 <print_xml_element+0x1a8>
 2fc:	ldr	r6, [pc, #372]	; 478 <print_xml_element+0x31c>
 300:	b	328 <print_xml_element+0x1cc>
 304:	ldr	r0, [pc, #348]	; 468 <print_xml_element+0x30c>
 308:	ldr	r1, [pc, #336]	; 460 <print_xml_element+0x304>
 30c:	mov	r2, #151	; 0x97
 310:	ldr	r3, [pc, #308]	; 44c <print_xml_element+0x2f0>
 314:	bl	0 <__assert_fail>
 318:	mov	r0, #1
 31c:	bl	0 <exit>
 320:	b	328 <print_xml_element+0x1cc>
 324:	ldr	r6, [pc, #260]	; 430 <print_xml_element+0x2d4>
 328:	ldr	r0, [sp, #48]	; 0x30
 32c:	add	r1, sp, #24
 330:	bl	0 <coda_type_has_attributes>
 334:	ldr	r1, [sp, #24]
 338:	cmp	r1, #0
 33c:	beq	3a8 <print_xml_element+0x24c>
 340:	ldr	r1, [pc, #264]	; 450 <print_xml_element+0x2f4>
 344:	mov	r0, r4
 348:	bl	0 <fprintf>
 34c:	ldr	r1, [pc, #284]	; 470 <print_xml_element+0x314>
 350:	mov	r0, r4
 354:	bl	0 <fprintf>
 358:	ldr	r1, [pc, #260]	; 464 <print_xml_element+0x308>
 35c:	mov	r0, r4
 360:	bl	0 <fprintf>
 364:	ldr	r1, [pc, #264]	; 474 <print_xml_element+0x318>
 368:	mov	r2, r6
 36c:	mov	r0, r4
 370:	bl	0 <fprintf>
 374:	ldr	r1, [sp, #48]	; 0x30
 378:	mov	r0, r4
 37c:	bl	0 <print_attributes>
 380:	ldr	r1, [pc, #188]	; 444 <print_xml_element+0x2e8>
 384:	mov	r0, r4
 388:	bl	0 <fprintf>
 38c:	ldr	r1, [pc, #172]	; 440 <print_xml_element+0x2e4>
 390:	mov	r0, r4
 394:	bl	0 <fprintf>
 398:	ldr	r1, [pc, #140]	; 42c <print_xml_element+0x2d0>
 39c:	mov	r0, r4
 3a0:	bl	0 <fprintf>
 3a4:	b	3d4 <print_xml_element+0x278>
 3a8:	ldr	r1, [pc, #152]	; 448 <print_xml_element+0x2ec>
 3ac:	mov	r2, r6
 3b0:	mov	r0, r4
 3b4:	bl	0 <fprintf>
 3b8:	b	3d4 <print_xml_element+0x278>
 3bc:	ldr	r1, [pc, #140]	; 450 <print_xml_element+0x2f4>
 3c0:	mov	r0, r4
 3c4:	bl	0 <fprintf>
 3c8:	ldr	r1, [sp, #48]	; 0x30
 3cc:	mov	r0, r4
 3d0:	bl	15c <print_xml_element>
 3d4:	ldr	r1, [pc, #96]	; 43c <print_xml_element+0x2e0>
 3d8:	mov	r0, r4
 3dc:	bl	0 <fprintf>
 3e0:	add	r5, r5, #1
 3e4:	b	1cc <print_xml_element+0x70>
 3e8:	ldr	r1, [pc, #72]	; 438 <print_xml_element+0x2dc>
 3ec:	mov	r0, r4
 3f0:	bl	0 <fprintf>
 3f4:	mov	r1, r7
 3f8:	mov	r0, r4
 3fc:	bl	0 <print_attributes>
 400:	ldr	r1, [pc, #36]	; 42c <print_xml_element+0x2d0>
 404:	mov	r0, r4
 408:	bl	0 <fprintf>
 40c:	ldr	r4, [sp, #8]
 410:	ldr	r5, [sp, #12]
 414:	ldr	r6, [sp, #16]
 418:	ldr	r7, [sp, #20]
 41c:	ldr	lr, [sp, #4]
 420:	add	sp, sp, #56	; 0x38
 424:	bx	lr
 428:	.word	0x000001df
 42c:	.word	0x00000204
 430:	.word	0x0000021f
 434:	.word	0x0000034a
 438:	.word	0x0000033b
 43c:	.word	0x0000028a
 440:	.word	0x0000014a
 444:	.word	0x000000ff
 448:	.word	0x000002a7
 44c:	.word	0x000003a2
 450:	.word	0x00000216
 454:	.word	0x000002f5
 458:	.word	0x000001c9
 45c:	.word	0x0000005c
 460:	.word	0x00000225
 464:	.word	0x00000190
 468:	.word	0x0000030f
 46c:	.word	0x0000010f
 470:	.word	0x00000311
 474:	.word	0x00000003
 478:	.word	0x00000218

0000047c <generate_xmlschema>:
 47c:	mov	ip, sp
 480:	sub	sp, sp, #32
 484:	str	ip, [sp]
 488:	str	lr, [sp, #4]
 48c:	str	r4, [sp, #8]
 490:	str	r5, [sp, #12]
 494:	str	r6, [sp, #16]
 498:	str	r7, [sp, #20]
 49c:	str	r8, [sp, #24]
 4a0:	mov	r7, r3
 4a4:	mov	r8, r2
 4a8:	mov	r5, r0
 4ac:	mov	r0, r1
 4b0:	ldr	r3, [pc, #584]	; 700 <generate_xmlschema+0x284>
 4b4:	ldr	r4, [r3]
 4b8:	bl	0 <coda_data_dictionary_get_product_class>
 4bc:	mov	r6, r0
 4c0:	cmp	r6, #0
 4c4:	bne	4f8 <generate_xmlschema+0x7c>
 4c8:	ldr	r0, [pc, #548]	; 6f4 <generate_xmlschema+0x278>
 4cc:	ldr	r0, [r0]
 4d0:	bl	0 <coda_errno_to_string>
 4d4:	ldr	r1, [pc, #556]	; 708 <generate_xmlschema+0x28c>
 4d8:	ldr	r2, [r1]
 4dc:	ldr	r1, [pc, #532]	; 6f8 <generate_xmlschema+0x27c>
 4e0:	mov	r3, r0
 4e4:	mov	r0, r2
 4e8:	mov	r2, r3
 4ec:	bl	0 <fprintf>
 4f0:	mov	r0, #1
 4f4:	bl	0 <exit>
 4f8:	mov	r1, r8
 4fc:	mov	r0, r6
 500:	bl	0 <coda_product_class_get_product_type>
 504:	mov	r6, r0
 508:	cmp	r6, #0
 50c:	bne	538 <generate_xmlschema+0xbc>
 510:	ldr	r1, [pc, #476]	; 6f4 <generate_xmlschema+0x278>
 514:	ldr	r0, [r1]
 518:	bl	0 <coda_errno_to_string>
 51c:	mov	r2, r0
 520:	ldr	r1, [pc, #480]	; 708 <generate_xmlschema+0x28c>
 524:	ldr	r0, [r1]
 528:	ldr	r1, [pc, #456]	; 6f8 <generate_xmlschema+0x27c>
 52c:	bl	0 <fprintf>
 530:	mov	r0, #1
 534:	bl	0 <exit>
 538:	mov	r1, r7
 53c:	mov	r0, r6
 540:	bl	0 <coda_product_type_get_product_definition_by_version>
 544:	mov	r6, r0
 548:	cmp	r6, #0
 54c:	bne	580 <generate_xmlschema+0x104>
 550:	ldr	r3, [pc, #412]	; 6f4 <generate_xmlschema+0x278>
 554:	ldr	r0, [r3]
 558:	bl	0 <coda_errno_to_string>
 55c:	ldr	r3, [pc, #420]	; 708 <generate_xmlschema+0x28c>
 560:	ldr	r2, [r3]
 564:	ldr	r1, [pc, #396]	; 6f8 <generate_xmlschema+0x27c>
 568:	mov	r3, r0
 56c:	mov	r0, r2
 570:	mov	r2, r3
 574:	bl	0 <fprintf>
 578:	mov	r0, #1
 57c:	bl	0 <exit>
 580:	ldr	r3, [r6]
 584:	cmp	r3, #2
 588:	beq	5a4 <generate_xmlschema+0x128>
 58c:	ldr	r1, [pc, #372]	; 708 <generate_xmlschema+0x28c>
 590:	ldr	r0, [r1]
 594:	ldr	r1, [pc, #336]	; 6ec <generate_xmlschema+0x270>
 598:	bl	0 <fprintf>
 59c:	mov	r0, #1
 5a0:	bl	0 <exit>
 5a4:	ldr	ip, [r6, #28]
 5a8:	cmp	ip, #0
 5ac:	bne	5c8 <generate_xmlschema+0x14c>
 5b0:	ldr	ip, [pc, #336]	; 708 <generate_xmlschema+0x28c>
 5b4:	ldr	r0, [ip]
 5b8:	ldr	r1, [pc, #336]	; 710 <generate_xmlschema+0x294>
 5bc:	bl	0 <fprintf>
 5c0:	mov	r0, #1
 5c4:	bl	0 <exit>
 5c8:	cmp	r5, #0
 5cc:	beq	604 <generate_xmlschema+0x188>
 5d0:	ldr	r1, [pc, #264]	; 6e0 <generate_xmlschema+0x264>
 5d4:	mov	r0, r5
 5d8:	bl	0 <fopen>
 5dc:	mov	r4, r0
 5e0:	cmp	r4, #0
 5e4:	bne	604 <generate_xmlschema+0x188>
 5e8:	ldr	r1, [pc, #280]	; 708 <generate_xmlschema+0x28c>
 5ec:	ldr	r0, [r1]
 5f0:	ldr	r1, [pc, #240]	; 6e8 <generate_xmlschema+0x26c>
 5f4:	mov	r2, r5
 5f8:	bl	0 <fprintf>
 5fc:	mov	r0, #1
 600:	bl	0 <exit>
 604:	ldr	r0, [r6, #28]
 608:	ldr	ip, [r0, #8]
 60c:	cmp	ip, #0
 610:	beq	628 <generate_xmlschema+0x1ac>
 614:	ldr	r0, [pc, #248]	; 714 <generate_xmlschema+0x298>
 618:	ldr	r1, [pc, #228]	; 704 <generate_xmlschema+0x288>
 61c:	mov	r2, #229	; 0xe5
 620:	ldr	r3, [pc, #176]	; 6d8 <generate_xmlschema+0x25c>
 624:	bl	0 <__assert_fail>
 628:	ldr	r6, [r6, #28]
 62c:	ldr	ip, [r6, #48]	; 0x30
 630:	cmp	ip, #1
 634:	beq	64c <generate_xmlschema+0x1d0>
 638:	ldr	r0, [pc, #188]	; 6fc <generate_xmlschema+0x280>
 63c:	ldr	r1, [pc, #192]	; 704 <generate_xmlschema+0x288>
 640:	mov	r2, #231	; 0xe7
 644:	ldr	r3, [pc, #140]	; 6d8 <generate_xmlschema+0x25c>
 648:	bl	0 <__assert_fail>
 64c:	ldr	r1, [pc, #136]	; 6dc <generate_xmlschema+0x260>
 650:	mov	r0, r4
 654:	bl	0 <fprintf>
 658:	ldr	r1, [pc, #184]	; 718 <generate_xmlschema+0x29c>
 65c:	mov	r0, r4
 660:	bl	0 <fprintf>
 664:	ldr	r1, [pc, #132]	; 6f0 <generate_xmlschema+0x274>
 668:	ldr	r2, [r6, #52]	; 0x34
 66c:	ldr	r2, [r2]
 670:	ldr	r2, [r2, #4]
 674:	mov	r0, r4
 678:	bl	0 <fprintf>
 67c:	ldr	r1, [r6, #52]	; 0x34
 680:	ldr	r0, [r1]
 684:	ldr	r1, [r0, #8]
 688:	mov	r0, r4
 68c:	bl	15c <print_xml_element>
 690:	ldr	r1, [pc, #116]	; 70c <generate_xmlschema+0x290>
 694:	mov	r0, r4
 698:	bl	0 <fprintf>
 69c:	ldr	r1, [pc, #64]	; 6e4 <generate_xmlschema+0x268>
 6a0:	mov	r0, r4
 6a4:	bl	0 <fprintf>
 6a8:	cmp	r5, #0
 6ac:	beq	6b8 <generate_xmlschema+0x23c>
 6b0:	mov	r0, r4
 6b4:	bl	0 <fclose>
 6b8:	ldr	r4, [sp, #8]
 6bc:	ldr	r5, [sp, #12]
 6c0:	ldr	r6, [sp, #16]
 6c4:	ldr	r7, [sp, #20]
 6c8:	ldr	r8, [sp, #24]
 6cc:	ldr	lr, [sp, #4]
 6d0:	add	sp, sp, #32
 6d4:	bx	lr
 6d8:	.word	0x000003b4
 6dc:	.word	0x0000008c
 6e0:	.word	0x00000339
 6e4:	.word	0x0000013c
 6e8:	.word	0x00000032
 6ec:	.word	0x00000117
 6f0:	.word	0x00000322
 6f4:	.word	0x00000000
 6f8:	.word	0x000001a3
 6fc:	.word	0x000001ae
 700:	.word	0x00000000
 704:	.word	0x00000225
 708:	.word	0x00000000
 70c:	.word	0x00000298
 710:	.word	0x0000015e
 714:	.word	0x000002b6
 718:	.word	0x000000c6
