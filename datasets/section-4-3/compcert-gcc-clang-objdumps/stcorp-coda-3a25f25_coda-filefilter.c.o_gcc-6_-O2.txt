
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-filefilter.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <append_string_to_name_buffer>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4:	subs	r4, r0, #0
   8:	beq	94 <append_string_to_name_buffer+0x94>
   c:	cmp	r1, #0
  10:	mov	r7, r1
  14:	beq	bc <append_string_to_name_buffer+0xbc>
  18:	mov	r0, r1
  1c:	bl	0 <strlen>
  20:	mov	r6, r0
  24:	ldm	r4, {r0, r5}
  28:	add	r2, r6, r0
  2c:	cmp	r2, r5
  30:	ldrlt	r8, [r4, #8]
  34:	blt	78 <append_string_to_name_buffer+0x78>
  38:	mvngt	r3, r5
  3c:	addgt	r3, r3, r2
  40:	addgt	r5, r5, #1024	; 0x400
  44:	lsrgt	r3, r3, #10
  48:	addgt	r5, r5, r3, lsl #10
  4c:	mov	r0, r5
  50:	bl	0 <malloc>
  54:	subs	r8, r0, #0
  58:	beq	a8 <append_string_to_name_buffer+0xa8>
  5c:	ldr	r9, [r4, #8]
  60:	mov	r1, r9
  64:	bl	0 <strcpy>
  68:	mov	r0, r9
  6c:	bl	0 <free>
  70:	ldr	r0, [r4]
  74:	stmib	r4, {r5, r8}
  78:	mov	r1, r7
  7c:	add	r0, r8, r0
  80:	bl	0 <strcpy>
  84:	ldr	r0, [r4]
  88:	add	r0, r0, r6
  8c:	str	r0, [r4]
  90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
  94:	ldr	r3, [pc, #52]	; d0 <append_string_to_name_buffer+0xd0>
  98:	mov	r2, #84	; 0x54
  9c:	ldr	r1, [pc, #48]	; d4 <append_string_to_name_buffer+0xd4>
  a0:	ldr	r0, [pc, #48]	; d8 <append_string_to_name_buffer+0xd8>
  a4:	bl	0 <__assert_fail>
  a8:	ldr	r3, [pc, #32]	; d0 <append_string_to_name_buffer+0xd0>
  ac:	mov	r2, #100	; 0x64
  b0:	ldr	r1, [pc, #28]	; d4 <append_string_to_name_buffer+0xd4>
  b4:	ldr	r0, [pc, #32]	; dc <append_string_to_name_buffer+0xdc>
  b8:	bl	0 <__assert_fail>
  bc:	ldr	r3, [pc, #12]	; d0 <append_string_to_name_buffer+0xd0>
  c0:	mov	r2, #85	; 0x55
  c4:	ldr	r1, [pc, #8]	; d4 <append_string_to_name_buffer+0xd4>
  c8:	ldr	r0, [pc, #16]	; e0 <append_string_to_name_buffer+0xe0>
  cc:	bl	0 <__assert_fail>
	...
  d8:	.word	0x00000050
  dc:	.word	0x0000006c
  e0:	.word	0x00000060

000000e4 <coda_match_filepath>:
  e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  e8:	mov	r5, r2
  ec:	sub	sp, sp, #636	; 0x27c
  f0:	mov	r4, r0
  f4:	mov	fp, r1
  f8:	add	r2, sp, #24
  fc:	ldr	r1, [r5, #8]
 100:	mov	r0, #3
 104:	mov	r9, r3
 108:	bl	0 <__xstat>
 10c:	subs	r6, r0, #0
 110:	beq	15c <coda_match_filepath+0x78>
 114:	bl	0 <__errno_location>
 118:	ldr	r0, [r0]
 11c:	cmp	r0, #20
 120:	cmpne	r0, #2
 124:	moveq	r4, #1
 128:	movne	r4, #0
 12c:	beq	19c <coda_match_filepath+0xb8>
 130:	ldr	r5, [r5, #8]
 134:	bl	0 <strerror>
 138:	mov	r2, r0
 13c:	ldr	r3, [sp, #672]	; 0x2a0
 140:	mov	r1, r4
 144:	mov	r0, r5
 148:	blx	r9
 14c:	mov	r6, r0
 150:	mov	r0, r6
 154:	add	sp, sp, #636	; 0x27c
 158:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 15c:	ldr	r3, [sp, #40]	; 0x28
 160:	ands	r7, r3, #16384	; 0x4000
 164:	bne	1c0 <coda_match_filepath+0xdc>
 168:	tst	r3, #32768	; 0x8000
 16c:	bne	278 <coda_match_filepath+0x194>
 170:	cmp	r4, #0
 174:	bne	150 <coda_match_filepath+0x6c>
 178:	mov	r1, r6
 17c:	ldr	r0, [r5, #8]
 180:	ldr	r3, [sp, #672]	; 0x2a0
 184:	ldr	r2, [pc, #640]	; 40c <coda_match_filepath+0x328>
 188:	blx	r9
 18c:	mov	r6, r0
 190:	mov	r0, r6
 194:	add	sp, sp, #636	; 0x27c
 198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 19c:	ldr	r0, [r5, #8]
 1a0:	ldr	r3, [sp, #672]	; 0x2a0
 1a4:	ldr	r2, [pc, #612]	; 410 <coda_match_filepath+0x32c>
 1a8:	mov	r1, #0
 1ac:	blx	r9
 1b0:	mov	r6, r0
 1b4:	mov	r0, r6
 1b8:	add	sp, sp, #636	; 0x27c
 1bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1c0:	ldr	r0, [r5, #8]
 1c4:	bl	0 <opendir>
 1c8:	subs	r7, r0, #0
 1cc:	beq	3f0 <coda_match_filepath+0x30c>
 1d0:	ldr	r8, [pc, #572]	; 414 <coda_match_filepath+0x330>
 1d4:	ldr	sl, [pc, #572]	; 418 <coda_match_filepath+0x334>
 1d8:	ldr	r3, [r5]
 1dc:	str	r3, [sp, #12]
 1e0:	mov	r0, r7
 1e4:	bl	0 <readdir>
 1e8:	mov	r1, r8
 1ec:	cmp	r0, #0
 1f0:	add	r4, r0, #11
 1f4:	mov	r0, r4
 1f8:	beq	26c <coda_match_filepath+0x188>
 1fc:	bl	0 <strcmp>
 200:	mov	r1, sl
 204:	cmp	r0, #0
 208:	mov	r0, r4
 20c:	beq	1e0 <coda_match_filepath+0xfc>
 210:	bl	0 <strcmp>
 214:	cmp	r0, #0
 218:	beq	1e0 <coda_match_filepath+0xfc>
 21c:	ldr	r1, [pc, #504]	; 41c <coda_match_filepath+0x338>
 220:	mov	r0, r5
 224:	bl	0 <append_string_to_name_buffer>
 228:	mov	r1, r4
 22c:	mov	r0, r5
 230:	bl	0 <append_string_to_name_buffer>
 234:	ldr	r3, [sp, #672]	; 0x2a0
 238:	mov	r2, r5
 23c:	str	r3, [sp]
 240:	mov	r1, fp
 244:	mov	r3, r9
 248:	mov	r0, #1
 24c:	bl	e4 <coda_match_filepath>
 250:	cmp	r0, #0
 254:	bne	34c <coda_match_filepath+0x268>
 258:	ldr	r2, [sp, #12]
 25c:	ldr	r3, [r5, #8]
 260:	str	r2, [r5]
 264:	strb	r0, [r3, r2]
 268:	b	1e0 <coda_match_filepath+0xfc>
 26c:	mov	r0, r7
 270:	bl	0 <closedir>
 274:	b	150 <coda_match_filepath+0x6c>
 278:	add	r1, sp, #16
 27c:	ldr	r0, [r5, #8]
 280:	bl	0 <coda_open>
 284:	cmp	r0, #0
 288:	beq	2d4 <coda_match_filepath+0x1f0>
 28c:	ldr	r3, [pc, #396]	; 420 <coda_match_filepath+0x33c>
 290:	bl	0 <__aeabi_read_tp>
 294:	mov	r4, r0
 298:	ldr	r3, [pc, r3]
 29c:	ldr	r0, [r0, r3]
 2a0:	cmn	r0, #21
 2a4:	beq	3b8 <coda_match_filepath+0x2d4>
 2a8:	cmn	r0, #200	; 0xc8
 2ac:	beq	330 <coda_match_filepath+0x24c>
 2b0:	ldr	r4, [r5, #8]
 2b4:	bl	0 <coda_errno_to_string>
 2b8:	ldr	r3, [sp, #672]	; 0x2a0
 2bc:	mov	r1, #1
 2c0:	mov	r2, r0
 2c4:	mov	r0, r4
 2c8:	blx	r9
 2cc:	mov	r6, r0
 2d0:	b	150 <coda_match_filepath+0x6c>
 2d4:	add	r0, sp, #112	; 0x70
 2d8:	ldr	r1, [sp, #16]
 2dc:	bl	0 <coda_cursor_set_product>
 2e0:	subs	r4, r0, #0
 2e4:	bne	360 <coda_match_filepath+0x27c>
 2e8:	add	r1, sp, #112	; 0x70
 2ec:	mov	r0, fp
 2f0:	add	r2, sp, #20
 2f4:	bl	0 <coda_expression_eval_bool>
 2f8:	subs	r6, r0, #0
 2fc:	bne	39c <coda_match_filepath+0x2b8>
 300:	ldr	r0, [sp, #16]
 304:	bl	0 <coda_close>
 308:	ldr	r1, [sp, #20]
 30c:	mov	r2, r6
 310:	cmp	r1, #0
 314:	ldr	r0, [r5, #8]
 318:	moveq	r1, #5
 31c:	movne	r1, #4
 320:	ldr	r3, [sp, #672]	; 0x2a0
 324:	blx	r9
 328:	mov	r6, r0
 32c:	b	150 <coda_match_filepath+0x6c>
 330:	ldr	r0, [r5, #8]
 334:	ldr	r3, [sp, #672]	; 0x2a0
 338:	mov	r2, #0
 33c:	mov	r1, #3
 340:	blx	r9
 344:	mov	r6, r0
 348:	b	150 <coda_match_filepath+0x6c>
 34c:	mov	r4, r0
 350:	mov	r0, r7
 354:	bl	0 <closedir>
 358:	mov	r6, r4
 35c:	b	150 <coda_match_filepath+0x6c>
 360:	ldr	r0, [sp, #16]
 364:	bl	0 <coda_close>
 368:	ldr	r3, [pc, #180]	; 424 <coda_match_filepath+0x340>
 36c:	bl	0 <__aeabi_read_tp>
 370:	ldr	r4, [r5, #8]
 374:	ldr	r3, [pc, r3]
 378:	ldr	r0, [r0, r3]
 37c:	bl	0 <coda_errno_to_string>
 380:	ldr	r3, [sp, #672]	; 0x2a0
 384:	mov	r1, #0
 388:	mov	r2, r0
 38c:	mov	r0, r4
 390:	blx	r9
 394:	mov	r6, r0
 398:	b	150 <coda_match_filepath+0x6c>
 39c:	ldr	r3, [pc, #132]	; 428 <coda_match_filepath+0x344>
 3a0:	bl	0 <__aeabi_read_tp>
 3a4:	ldr	r5, [r5, #8]
 3a8:	ldr	r3, [pc, r3]
 3ac:	ldr	r0, [r0, r3]
 3b0:	bl	0 <coda_errno_to_string>
 3b4:	b	138 <coda_match_filepath+0x54>
 3b8:	mov	r0, r7
 3bc:	bl	0 <coda_set_option_use_mmap>
 3c0:	add	r1, sp, #16
 3c4:	ldr	r0, [r5, #8]
 3c8:	bl	0 <coda_open>
 3cc:	mov	r6, r0
 3d0:	mov	r0, #1
 3d4:	bl	0 <coda_set_option_use_mmap>
 3d8:	cmp	r6, #0
 3dc:	beq	2d4 <coda_match_filepath+0x1f0>
 3e0:	ldr	r3, [pc, #68]	; 42c <coda_match_filepath+0x348>
 3e4:	ldr	r3, [pc, r3]
 3e8:	ldr	r0, [r4, r3]
 3ec:	b	2a8 <coda_match_filepath+0x1c4>
 3f0:	ldr	r0, [r5, #8]
 3f4:	ldr	r3, [sp, #672]	; 0x2a0
 3f8:	ldr	r2, [pc, #48]	; 430 <coda_match_filepath+0x34c>
 3fc:	mov	r1, #2
 400:	blx	r9
 404:	mov	r6, r0
 408:	b	150 <coda_match_filepath+0x6c>
 40c:	.word	0x000000cc
 410:	.word	0x00000080
 414:	.word	0x000000c0
 418:	.word	0x000000c4
 41c:	.word	0x000000c8
 420:	.word	0x00000180
 424:	.word	0x000000a8
 428:	.word	0x00000078
 42c:	.word	0x00000040
 430:	.word	0x0000009c

00000434 <coda_match_filefilter>:
 434:	cmp	r3, #0
 438:	cmpne	r2, #0
 43c:	moveq	ip, #1
 440:	movne	ip, #0
 444:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 448:	cmp	r1, #0
 44c:	orrle	ip, ip, #1
 450:	sub	sp, sp, #32
 454:	cmp	ip, #0
 458:	ldr	r8, [sp, #64]	; 0x40
 45c:	bne	5a0 <coda_match_filefilter+0x16c>
 460:	cmp	r0, #0
 464:	mov	r6, r2
 468:	mov	r7, r3
 46c:	mov	sl, r1
 470:	beq	574 <coda_match_filefilter+0x140>
 474:	ldrb	r2, [r0]
 478:	ldr	r3, [pc, #336]	; 5d0 <coda_match_filefilter+0x19c>
 47c:	cmp	r2, #0
 480:	moveq	r0, r3
 484:	add	r1, sp, #16
 488:	bl	0 <coda_expression_from_string>
 48c:	cmp	r0, #0
 490:	bne	57c <coda_match_filefilter+0x148>
 494:	add	r1, sp, #12
 498:	ldr	r0, [sp, #16]
 49c:	bl	0 <coda_expression_get_type>
 4a0:	subs	r5, r0, #0
 4a4:	bne	590 <coda_match_filefilter+0x15c>
 4a8:	ldr	r3, [sp, #12]
 4ac:	cmp	r3, #0
 4b0:	bne	584 <coda_match_filefilter+0x150>
 4b4:	mov	r2, #1024	; 0x400
 4b8:	mov	r0, r2
 4bc:	str	r3, [sp, #20]
 4c0:	str	r2, [sp, #24]
 4c4:	bl	0 <malloc>
 4c8:	cmp	r0, #0
 4cc:	str	r0, [sp, #28]
 4d0:	subne	r6, r6, #4
 4d4:	movne	r9, r5
 4d8:	beq	5bc <coda_match_filefilter+0x188>
 4dc:	ldr	r1, [r6, #4]!
 4e0:	add	r0, sp, #20
 4e4:	bl	0 <append_string_to_name_buffer>
 4e8:	ldr	r1, [sp, #16]
 4ec:	str	r8, [sp]
 4f0:	mov	r3, r7
 4f4:	add	r2, sp, #20
 4f8:	mov	r0, r9
 4fc:	bl	e4 <coda_match_filepath>
 500:	subs	r4, r0, #0
 504:	bne	548 <coda_match_filefilter+0x114>
 508:	ldr	r3, [sp, #28]
 50c:	add	r5, r5, #1
 510:	cmp	sl, r5
 514:	str	r4, [sp, #20]
 518:	strb	r4, [r3]
 51c:	bgt	4dc <coda_match_filefilter+0xa8>
 520:	ldr	r0, [sp, #28]
 524:	str	r4, [sp, #20]
 528:	str	r4, [sp, #24]
 52c:	bl	0 <free>
 530:	ldr	r0, [sp, #16]
 534:	str	r4, [sp, #28]
 538:	bl	0 <coda_expression_delete>
 53c:	mov	r0, r4
 540:	add	sp, sp, #32
 544:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 548:	mov	r5, #0
 54c:	ldr	r0, [sp, #28]
 550:	str	r5, [sp, #20]
 554:	str	r5, [sp, #24]
 558:	bl	0 <free>
 55c:	ldr	r0, [sp, #16]
 560:	str	r5, [sp, #28]
 564:	bl	0 <coda_expression_delete>
 568:	mov	r0, r4
 56c:	add	sp, sp, #32
 570:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 574:	ldr	r0, [pc, #84]	; 5d0 <coda_match_filefilter+0x19c>
 578:	b	484 <coda_match_filefilter+0x50>
 57c:	mvn	r4, #0
 580:	b	53c <coda_match_filefilter+0x108>
 584:	ldr	r1, [pc, #72]	; 5d4 <coda_match_filefilter+0x1a0>
 588:	mvn	r0, #400	; 0x190
 58c:	bl	0 <coda_set_error>
 590:	ldr	r0, [sp, #16]
 594:	bl	0 <coda_expression_delete>
 598:	mvn	r4, #0
 59c:	b	53c <coda_match_filefilter+0x108>
 5a0:	ldr	r3, [pc, #48]	; 5d8 <coda_match_filefilter+0x1a4>
 5a4:	ldr	r2, [pc, #48]	; 5dc <coda_match_filefilter+0x1a8>
 5a8:	ldr	r1, [pc, #48]	; 5e0 <coda_match_filefilter+0x1ac>
 5ac:	mvn	r0, #99	; 0x63
 5b0:	bl	0 <coda_set_error>
 5b4:	mvn	r4, #0
 5b8:	b	53c <coda_match_filefilter+0x108>
 5bc:	ldr	r3, [pc, #32]	; 5e4 <coda_match_filefilter+0x1b0>
 5c0:	mov	r2, #67	; 0x43
 5c4:	ldr	r1, [pc, #16]	; 5dc <coda_match_filefilter+0x1a8>
 5c8:	ldr	r0, [pc, #24]	; 5e8 <coda_match_filefilter+0x1b4>
 5cc:	bl	0 <__assert_fail>
 5d0:	.word	0x000000ec
 5d4:	.word	0x00000110
 5d8:	.word	0x00000182
 5dc:	.word	0x00000000
 5e0:	.word	0x000000f4
 5e4:	.word	0x00000020
 5e8:	.word	0x00000140
