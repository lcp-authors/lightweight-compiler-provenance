
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-errno.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_get_errno>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #4
   c:	ldr	r0, [pc, #20]	; 28 <coda_get_errno+0x28>
  10:	str	r0, [sp]
  14:	bl	0 <__aeabi_read_tp>
  18:	ldr	r1, [sp]
  1c:	add	r0, r0, r1
  20:	mov	sp, fp
  24:	pop	{fp, pc}
  28:	.word	0x00000000

0000002c <coda_add_error_message_vargs>:
  2c:	push	{r4, r5, fp, lr}
  30:	add	fp, sp, #8
  34:	sub	sp, sp, #56	; 0x38
  38:	sub	sp, sp, #4096	; 0x1000
  3c:	str	r1, [fp, #-12]
  40:	str	r0, [fp, #-16]
  44:	ldr	r0, [fp, #-16]
  48:	movw	r1, #0
  4c:	cmp	r0, r1
  50:	bne	58 <coda_add_error_message_vargs+0x2c>
  54:	b	13c <coda_add_error_message_vargs+0x110>
  58:	ldr	r0, [pc, #228]	; 144 <coda_add_error_message_vargs+0x118>
  5c:	str	r0, [sp, #36]	; 0x24
  60:	bl	0 <__aeabi_read_tp>
  64:	ldr	r1, [sp, #36]	; 0x24
  68:	add	r0, r0, r1
  6c:	bl	0 <strlen>
  70:	str	r0, [sp, #40]	; 0x28
  74:	ldr	r0, [sp, #40]	; 0x28
  78:	cmp	r0, #4096	; 0x1000
  7c:	blt	84 <coda_add_error_message_vargs+0x58>
  80:	b	13c <coda_add_error_message_vargs+0x110>
  84:	ldr	r0, [sp, #40]	; 0x28
  88:	cmp	r0, #0
  8c:	bne	e4 <coda_add_error_message_vargs+0xb8>
  90:	add	r0, sp, #47	; 0x2f
  94:	ldr	r1, [pc, #172]	; 148 <coda_add_error_message_vargs+0x11c>
  98:	str	r0, [sp, #32]
  9c:	str	r1, [sp, #28]
  a0:	bl	0 <__aeabi_read_tp>
  a4:	ldr	r1, [sp, #28]
  a8:	ldr	r0, [r0, r1]
  ac:	bl	14c <coda_errno_to_string>
  b0:	add	r1, sp, #47	; 0x2f
  b4:	ldr	r2, [sp, #32]
  b8:	str	r0, [sp, #24]
  bc:	mov	r0, r2
  c0:	ldr	r3, [sp, #24]
  c4:	str	r1, [sp, #20]
  c8:	mov	r1, r3
  cc:	bl	0 <strcpy>
  d0:	ldr	r1, [sp, #20]
  d4:	str	r0, [sp, #16]
  d8:	mov	r0, r1
  dc:	bl	0 <strlen>
  e0:	str	r0, [sp, #40]	; 0x28
  e4:	add	r0, sp, #47	; 0x2f
  e8:	ldr	r1, [sp, #40]	; 0x28
  ec:	rsb	r1, r1, #4096	; 0x1000
  f0:	ldr	r2, [fp, #-16]
  f4:	ldr	r3, [fp, #-12]
  f8:	bl	0 <vsnprintf>
  fc:	add	r1, sp, #47	; 0x2f
 100:	ldr	r2, [sp, #40]	; 0x28
 104:	movw	r3, #4096	; 0x1000
 108:	sub	r2, r3, r2
 10c:	add	r2, r1, r2
 110:	movw	r3, #0
 114:	strb	r3, [r2]
 118:	ldr	r2, [pc, #36]	; 144 <coda_add_error_message_vargs+0x118>
 11c:	str	r0, [sp, #12]
 120:	str	r1, [sp, #8]
 124:	str	r2, [sp, #4]
 128:	bl	0 <__aeabi_read_tp>
 12c:	ldr	r1, [sp, #4]
 130:	add	r0, r0, r1
 134:	ldr	r1, [sp, #8]
 138:	bl	0 <strcat>
 13c:	sub	sp, fp, #8
 140:	pop	{r4, r5, fp, pc}
	...

0000014c <coda_errno_to_string>:
 14c:	push	{fp, lr}
 150:	mov	fp, sp
 154:	sub	sp, sp, #40	; 0x28
 158:	str	r0, [fp, #-8]
 15c:	ldr	r0, [fp, #-8]
 160:	ldr	r1, [pc, #992]	; 548 <coda_errno_to_string+0x3fc>
 164:	str	r0, [fp, #-12]
 168:	str	r1, [fp, #-16]
 16c:	bl	0 <__aeabi_read_tp>
 170:	ldr	r1, [fp, #-16]
 174:	ldr	r0, [r0, r1]
 178:	ldr	r1, [fp, #-12]
 17c:	cmp	r1, r0
 180:	bne	1c0 <coda_errno_to_string+0x74>
 184:	ldr	r0, [pc, #960]	; 54c <coda_errno_to_string+0x400>
 188:	str	r0, [sp, #20]
 18c:	bl	0 <__aeabi_read_tp>
 190:	ldr	r1, [sp, #20]
 194:	ldrb	r0, [r0, r1]
 198:	and	r0, r0, #255	; 0xff
 19c:	cmp	r0, #0
 1a0:	beq	1c0 <coda_errno_to_string+0x74>
 1a4:	ldr	r0, [pc, #928]	; 54c <coda_errno_to_string+0x400>
 1a8:	str	r0, [sp, #16]
 1ac:	bl	0 <__aeabi_read_tp>
 1b0:	ldr	r1, [sp, #16]
 1b4:	add	r0, r0, r1
 1b8:	str	r0, [fp, #-4]
 1bc:	b	53c <coda_errno_to_string+0x3f0>
 1c0:	ldr	r0, [fp, #-8]
 1c4:	mvn	r1, #400	; 0x190
 1c8:	cmp	r0, r1
 1cc:	str	r0, [sp, #12]
 1d0:	beq	4dc <coda_errno_to_string+0x390>
 1d4:	b	1d8 <coda_errno_to_string+0x8c>
 1d8:	ldr	r0, [sp, #12]
 1dc:	cmn	r0, #400	; 0x190
 1e0:	beq	4cc <coda_errno_to_string+0x380>
 1e4:	b	1e8 <coda_errno_to_string+0x9c>
 1e8:	mvn	r0, #300	; 0x12c
 1ec:	ldr	r1, [sp, #12]
 1f0:	cmp	r1, r0
 1f4:	beq	4bc <coda_errno_to_string+0x370>
 1f8:	b	1fc <coda_errno_to_string+0xb0>
 1fc:	ldr	r0, [sp, #12]
 200:	cmn	r0, #300	; 0x12c
 204:	beq	4ac <coda_errno_to_string+0x360>
 208:	b	20c <coda_errno_to_string+0xc0>
 20c:	ldr	r0, [sp, #12]
 210:	cmn	r0, #200	; 0xc8
 214:	beq	49c <coda_errno_to_string+0x350>
 218:	b	21c <coda_errno_to_string+0xd0>
 21c:	ldr	r0, [sp, #12]
 220:	cmn	r0, #108	; 0x6c
 224:	beq	48c <coda_errno_to_string+0x340>
 228:	b	22c <coda_errno_to_string+0xe0>
 22c:	ldr	r0, [sp, #12]
 230:	cmn	r0, #107	; 0x6b
 234:	beq	47c <coda_errno_to_string+0x330>
 238:	b	23c <coda_errno_to_string+0xf0>
 23c:	ldr	r0, [sp, #12]
 240:	cmn	r0, #106	; 0x6a
 244:	beq	46c <coda_errno_to_string+0x320>
 248:	b	24c <coda_errno_to_string+0x100>
 24c:	ldr	r0, [sp, #12]
 250:	cmn	r0, #105	; 0x69
 254:	beq	45c <coda_errno_to_string+0x310>
 258:	b	25c <coda_errno_to_string+0x110>
 25c:	ldr	r0, [sp, #12]
 260:	cmn	r0, #104	; 0x68
 264:	beq	44c <coda_errno_to_string+0x300>
 268:	b	26c <coda_errno_to_string+0x120>
 26c:	ldr	r0, [sp, #12]
 270:	cmn	r0, #103	; 0x67
 274:	beq	43c <coda_errno_to_string+0x2f0>
 278:	b	27c <coda_errno_to_string+0x130>
 27c:	ldr	r0, [sp, #12]
 280:	cmn	r0, #102	; 0x66
 284:	beq	42c <coda_errno_to_string+0x2e0>
 288:	b	28c <coda_errno_to_string+0x140>
 28c:	ldr	r0, [sp, #12]
 290:	cmn	r0, #101	; 0x65
 294:	beq	41c <coda_errno_to_string+0x2d0>
 298:	b	29c <coda_errno_to_string+0x150>
 29c:	ldr	r0, [sp, #12]
 2a0:	cmn	r0, #100	; 0x64
 2a4:	beq	40c <coda_errno_to_string+0x2c0>
 2a8:	b	2ac <coda_errno_to_string+0x160>
 2ac:	ldr	r0, [sp, #12]
 2b0:	cmn	r0, #23
 2b4:	beq	3fc <coda_errno_to_string+0x2b0>
 2b8:	b	2bc <coda_errno_to_string+0x170>
 2bc:	ldr	r0, [sp, #12]
 2c0:	cmn	r0, #22
 2c4:	beq	3ec <coda_errno_to_string+0x2a0>
 2c8:	b	2cc <coda_errno_to_string+0x180>
 2cc:	ldr	r0, [sp, #12]
 2d0:	cmn	r0, #21
 2d4:	beq	3dc <coda_errno_to_string+0x290>
 2d8:	b	2dc <coda_errno_to_string+0x190>
 2dc:	ldr	r0, [sp, #12]
 2e0:	cmn	r0, #20
 2e4:	beq	3cc <coda_errno_to_string+0x280>
 2e8:	b	2ec <coda_errno_to_string+0x1a0>
 2ec:	ldr	r0, [sp, #12]
 2f0:	cmn	r0, #14
 2f4:	beq	3bc <coda_errno_to_string+0x270>
 2f8:	b	2fc <coda_errno_to_string+0x1b0>
 2fc:	ldr	r0, [sp, #12]
 300:	cmn	r0, #13
 304:	beq	3ac <coda_errno_to_string+0x260>
 308:	b	30c <coda_errno_to_string+0x1c0>
 30c:	ldr	r0, [sp, #12]
 310:	cmn	r0, #12
 314:	beq	39c <coda_errno_to_string+0x250>
 318:	b	31c <coda_errno_to_string+0x1d0>
 31c:	ldr	r0, [sp, #12]
 320:	cmn	r0, #11
 324:	beq	38c <coda_errno_to_string+0x240>
 328:	b	32c <coda_errno_to_string+0x1e0>
 32c:	ldr	r0, [sp, #12]
 330:	cmn	r0, #10
 334:	beq	37c <coda_errno_to_string+0x230>
 338:	b	33c <coda_errno_to_string+0x1f0>
 33c:	ldr	r0, [sp, #12]
 340:	cmn	r0, #1
 344:	beq	36c <coda_errno_to_string+0x220>
 348:	b	34c <coda_errno_to_string+0x200>
 34c:	ldr	r0, [sp, #12]
 350:	cmp	r0, #0
 354:	bne	4ec <coda_errno_to_string+0x3a0>
 358:	b	35c <coda_errno_to_string+0x210>
 35c:	movw	r0, #0
 360:	movt	r0, #0
 364:	str	r0, [fp, #-4]
 368:	b	53c <coda_errno_to_string+0x3f0>
 36c:	movw	r0, #0
 370:	movt	r0, #0
 374:	str	r0, [fp, #-4]
 378:	b	53c <coda_errno_to_string+0x3f0>
 37c:	movw	r0, #0
 380:	movt	r0, #0
 384:	str	r0, [fp, #-4]
 388:	b	53c <coda_errno_to_string+0x3f0>
 38c:	movw	r0, #0
 390:	movt	r0, #0
 394:	str	r0, [fp, #-4]
 398:	b	53c <coda_errno_to_string+0x3f0>
 39c:	movw	r0, #0
 3a0:	movt	r0, #0
 3a4:	str	r0, [fp, #-4]
 3a8:	b	53c <coda_errno_to_string+0x3f0>
 3ac:	movw	r0, #0
 3b0:	movt	r0, #0
 3b4:	str	r0, [fp, #-4]
 3b8:	b	53c <coda_errno_to_string+0x3f0>
 3bc:	movw	r0, #0
 3c0:	movt	r0, #0
 3c4:	str	r0, [fp, #-4]
 3c8:	b	53c <coda_errno_to_string+0x3f0>
 3cc:	movw	r0, #0
 3d0:	movt	r0, #0
 3d4:	str	r0, [fp, #-4]
 3d8:	b	53c <coda_errno_to_string+0x3f0>
 3dc:	movw	r0, #0
 3e0:	movt	r0, #0
 3e4:	str	r0, [fp, #-4]
 3e8:	b	53c <coda_errno_to_string+0x3f0>
 3ec:	movw	r0, #0
 3f0:	movt	r0, #0
 3f4:	str	r0, [fp, #-4]
 3f8:	b	53c <coda_errno_to_string+0x3f0>
 3fc:	movw	r0, #0
 400:	movt	r0, #0
 404:	str	r0, [fp, #-4]
 408:	b	53c <coda_errno_to_string+0x3f0>
 40c:	movw	r0, #0
 410:	movt	r0, #0
 414:	str	r0, [fp, #-4]
 418:	b	53c <coda_errno_to_string+0x3f0>
 41c:	movw	r0, #0
 420:	movt	r0, #0
 424:	str	r0, [fp, #-4]
 428:	b	53c <coda_errno_to_string+0x3f0>
 42c:	movw	r0, #0
 430:	movt	r0, #0
 434:	str	r0, [fp, #-4]
 438:	b	53c <coda_errno_to_string+0x3f0>
 43c:	movw	r0, #0
 440:	movt	r0, #0
 444:	str	r0, [fp, #-4]
 448:	b	53c <coda_errno_to_string+0x3f0>
 44c:	movw	r0, #0
 450:	movt	r0, #0
 454:	str	r0, [fp, #-4]
 458:	b	53c <coda_errno_to_string+0x3f0>
 45c:	movw	r0, #0
 460:	movt	r0, #0
 464:	str	r0, [fp, #-4]
 468:	b	53c <coda_errno_to_string+0x3f0>
 46c:	movw	r0, #0
 470:	movt	r0, #0
 474:	str	r0, [fp, #-4]
 478:	b	53c <coda_errno_to_string+0x3f0>
 47c:	movw	r0, #0
 480:	movt	r0, #0
 484:	str	r0, [fp, #-4]
 488:	b	53c <coda_errno_to_string+0x3f0>
 48c:	movw	r0, #0
 490:	movt	r0, #0
 494:	str	r0, [fp, #-4]
 498:	b	53c <coda_errno_to_string+0x3f0>
 49c:	movw	r0, #0
 4a0:	movt	r0, #0
 4a4:	str	r0, [fp, #-4]
 4a8:	b	53c <coda_errno_to_string+0x3f0>
 4ac:	movw	r0, #0
 4b0:	movt	r0, #0
 4b4:	str	r0, [fp, #-4]
 4b8:	b	53c <coda_errno_to_string+0x3f0>
 4bc:	movw	r0, #0
 4c0:	movt	r0, #0
 4c4:	str	r0, [fp, #-4]
 4c8:	b	53c <coda_errno_to_string+0x3f0>
 4cc:	movw	r0, #0
 4d0:	movt	r0, #0
 4d4:	str	r0, [fp, #-4]
 4d8:	b	53c <coda_errno_to_string+0x3f0>
 4dc:	movw	r0, #0
 4e0:	movt	r0, #0
 4e4:	str	r0, [fp, #-4]
 4e8:	b	53c <coda_errno_to_string+0x3f0>
 4ec:	ldr	r0, [fp, #-8]
 4f0:	ldr	r1, [pc, #80]	; 548 <coda_errno_to_string+0x3fc>
 4f4:	str	r0, [sp, #8]
 4f8:	str	r1, [sp, #4]
 4fc:	bl	0 <__aeabi_read_tp>
 500:	ldr	r1, [sp, #4]
 504:	ldr	r0, [r0, r1]
 508:	ldr	r1, [sp, #8]
 50c:	cmp	r1, r0
 510:	bne	530 <coda_errno_to_string+0x3e4>
 514:	ldr	r0, [pc, #48]	; 54c <coda_errno_to_string+0x400>
 518:	str	r0, [sp]
 51c:	bl	0 <__aeabi_read_tp>
 520:	ldr	r1, [sp]
 524:	add	r0, r0, r1
 528:	str	r0, [fp, #-4]
 52c:	b	53c <coda_errno_to_string+0x3f0>
 530:	movw	r0, #0
 534:	movt	r0, #0
 538:	str	r0, [fp, #-4]
 53c:	ldr	r0, [fp, #-4]
 540:	mov	sp, fp
 544:	pop	{fp, pc}
	...

00000550 <coda_add_error_message>:
 550:	sub	sp, sp, #12
 554:	push	{fp, lr}
 558:	mov	fp, sp
 55c:	sub	sp, sp, #12
 560:	str	r3, [fp, #16]
 564:	str	r2, [fp, #12]
 568:	str	r1, [fp, #8]
 56c:	str	r0, [fp, #-4]
 570:	add	r0, fp, #8
 574:	str	r0, [sp, #4]
 578:	ldr	r0, [fp, #-4]
 57c:	ldr	r1, [sp, #4]
 580:	bl	2c <coda_add_error_message_vargs>
 584:	add	r0, sp, #4
 588:	mov	sp, fp
 58c:	pop	{fp, lr}
 590:	add	sp, sp, #12
 594:	bx	lr

00000598 <coda_set_error_message_vargs>:
 598:	push	{r4, r5, fp, lr}
 59c:	add	fp, sp, #8
 5a0:	sub	sp, sp, #32
 5a4:	sub	sp, sp, #4096	; 0x1000
 5a8:	str	r1, [fp, #-12]
 5ac:	str	r0, [fp, #-16]
 5b0:	ldr	r0, [fp, #-16]
 5b4:	movw	r1, #0
 5b8:	cmp	r0, r1
 5bc:	bne	5dc <coda_set_error_message_vargs+0x44>
 5c0:	ldr	r0, [pc, #104]	; 630 <coda_set_error_message_vargs+0x98>
 5c4:	str	r0, [sp, #16]
 5c8:	bl	0 <__aeabi_read_tp>
 5cc:	mov	r1, #0
 5d0:	ldr	r2, [sp, #16]
 5d4:	strb	r1, [r0, r2]
 5d8:	b	628 <coda_set_error_message_vargs+0x90>
 5dc:	add	r0, sp, #23
 5e0:	ldr	r2, [fp, #-16]
 5e4:	ldr	r3, [fp, #-12]
 5e8:	mov	r1, #4096	; 0x1000
 5ec:	bl	0 <vsnprintf>
 5f0:	add	r1, sp, #23
 5f4:	add	r2, sp, #23
 5f8:	add	r2, r2, #4096	; 0x1000
 5fc:	movw	r3, #0
 600:	strb	r3, [r2]
 604:	ldr	r2, [pc, #36]	; 630 <coda_set_error_message_vargs+0x98>
 608:	str	r0, [sp, #12]
 60c:	str	r1, [sp, #8]
 610:	str	r2, [sp, #4]
 614:	bl	0 <__aeabi_read_tp>
 618:	ldr	r1, [sp, #4]
 61c:	add	r0, r0, r1
 620:	ldr	r1, [sp, #8]
 624:	bl	0 <strcpy>
 628:	sub	sp, fp, #8
 62c:	pop	{r4, r5, fp, pc}
 630:	.word	0x00000000

00000634 <coda_set_error_message>:
 634:	sub	sp, sp, #12
 638:	push	{fp, lr}
 63c:	mov	fp, sp
 640:	sub	sp, sp, #12
 644:	str	r3, [fp, #16]
 648:	str	r2, [fp, #12]
 64c:	str	r1, [fp, #8]
 650:	str	r0, [fp, #-4]
 654:	add	r0, fp, #8
 658:	str	r0, [sp, #4]
 65c:	ldr	r0, [fp, #-4]
 660:	ldr	r1, [sp, #4]
 664:	bl	598 <coda_set_error_message_vargs>
 668:	add	r0, sp, #4
 66c:	mov	sp, fp
 670:	pop	{fp, lr}
 674:	add	sp, sp, #12
 678:	bx	lr

0000067c <coda_cursor_add_to_error_message>:
 67c:	push	{fp, lr}
 680:	mov	fp, sp
 684:	sub	sp, sp, #8
 688:	str	r0, [sp, #4]
 68c:	movw	r0, #0
 690:	movt	r0, #0
 694:	bl	550 <coda_add_error_message>
 698:	ldr	r0, [sp, #4]
 69c:	movw	r1, #0
 6a0:	movt	r1, #0
 6a4:	bl	0 <coda_cursor_print_path>
 6a8:	mov	sp, fp
 6ac:	pop	{fp, pc}

000006b0 <add_error_message>:
 6b0:	sub	sp, sp, #12
 6b4:	push	{fp, lr}
 6b8:	mov	fp, sp
 6bc:	sub	sp, sp, #12
 6c0:	str	r3, [fp, #16]
 6c4:	str	r2, [fp, #12]
 6c8:	str	r1, [fp, #8]
 6cc:	str	r0, [fp, #-4]
 6d0:	add	r0, fp, #8
 6d4:	str	r0, [sp, #4]
 6d8:	ldr	r0, [fp, #-4]
 6dc:	ldr	r1, [sp, #4]
 6e0:	bl	2c <coda_add_error_message_vargs>
 6e4:	add	r0, sp, #4
 6e8:	movw	r1, #0
 6ec:	str	r0, [sp]
 6f0:	mov	r0, r1
 6f4:	mov	sp, fp
 6f8:	pop	{fp, lr}
 6fc:	add	sp, sp, #12
 700:	bx	lr

00000704 <coda_set_error>:
 704:	sub	sp, sp, #8
 708:	push	{fp, lr}
 70c:	mov	fp, sp
 710:	sub	sp, sp, #24
 714:	str	r3, [fp, #12]
 718:	str	r2, [fp, #8]
 71c:	str	r0, [fp, #-4]
 720:	str	r1, [fp, #-8]
 724:	ldr	r0, [fp, #-4]
 728:	ldr	r1, [pc, #60]	; 76c <coda_set_error+0x68>
 72c:	str	r0, [sp, #8]
 730:	str	r1, [sp, #4]
 734:	bl	0 <__aeabi_read_tp>
 738:	ldr	r1, [sp, #8]
 73c:	ldr	r2, [sp, #4]
 740:	str	r1, [r0, r2]
 744:	add	r0, fp, #8
 748:	str	r0, [sp, #12]
 74c:	ldr	r0, [fp, #-8]
 750:	ldr	r1, [sp, #12]
 754:	bl	598 <coda_set_error_message_vargs>
 758:	add	r0, sp, #12
 75c:	mov	sp, fp
 760:	pop	{fp, lr}
 764:	add	sp, sp, #8
 768:	bx	lr
 76c:	.word	0x00000000
