
../compcert-repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

00010b04 <.init>:
   10b04:	push	{r3, lr}
   10b08:	bl	10c38 <_start@@Base+0x3c>
   10b0c:	pop	{r3, pc}

Disassembly of section .plt:

00010b10 <calloc@plt-0x14>:
   10b10:	push	{lr}		; (str lr, [sp, #-4]!)
   10b14:	ldr	lr, [pc, #4]	; 10b20 <calloc@plt-0x4>
   10b18:	add	lr, pc, lr
   10b1c:	ldr	pc, [lr, #8]!
   10b20:	andeq	r2, r1, r0, ror #9

00010b24 <calloc@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #73728	; 0x12000
   10b2c:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b30 <strcmp@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #73728	; 0x12000
   10b38:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b3c <printf@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #73728	; 0x12000
   10b44:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b48 <__isoc99_fscanf@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #73728	; 0x12000
   10b50:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b54 <fopen@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #73728	; 0x12000
   10b5c:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b60 <fflush@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #73728	; 0x12000
   10b68:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b6c <free@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #73728	; 0x12000
   10b74:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b78 <fgets@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #73728	; 0x12000
   10b80:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b84 <strdup@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #73728	; 0x12000
   10b8c:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b90 <puts@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #73728	; 0x12000
   10b98:	ldr	pc, [ip, #1176]!	; 0x498

00010b9c <malloc@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #73728	; 0x12000
   10ba4:	ldr	pc, [ip, #1168]!	; 0x490

00010ba8 <__libc_start_main@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #73728	; 0x12000
   10bb0:	ldr	pc, [ip, #1160]!	; 0x488

00010bb4 <__gmon_start__@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #73728	; 0x12000
   10bbc:	ldr	pc, [ip, #1152]!	; 0x480

00010bc0 <feof@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #73728	; 0x12000
   10bc8:	ldr	pc, [ip, #1144]!	; 0x478

00010bcc <strlen@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #73728	; 0x12000
   10bd4:	ldr	pc, [ip, #1136]!	; 0x470

00010bd8 <putchar@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #73728	; 0x12000
   10be0:	ldr	pc, [ip, #1128]!	; 0x468

00010be4 <fclose@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #73728	; 0x12000
   10bec:	ldr	pc, [ip, #1120]!	; 0x460

00010bf0 <abort@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #73728	; 0x12000
   10bf8:	ldr	pc, [ip, #1112]!	; 0x458

Disassembly of section .text:

00010bfc <_start@@Base>:
   10bfc:	mov	fp, #0
   10c00:	mov	lr, #0
   10c04:	pop	{r1}		; (ldr r1, [sp], #4)
   10c08:	mov	r2, sp
   10c0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10c10:	push	{r0}		; (str r0, [sp, #-4]!)
   10c14:	ldr	ip, [pc, #16]	; 10c2c <_start@@Base+0x30>
   10c18:	push	{ip}		; (str ip, [sp, #-4]!)
   10c1c:	ldr	r0, [pc, #12]	; 10c30 <_start@@Base+0x34>
   10c20:	ldr	r3, [pc, #12]	; 10c34 <_start@@Base+0x38>
   10c24:	bl	10ba8 <__libc_start_main@plt>
   10c28:	bl	10bf0 <abort@plt>
   10c2c:	andeq	r1, r1, r0, asr #31
   10c30:	muleq	r1, ip, r1
   10c34:	andeq	r1, r1, r0, ror #30
   10c38:	ldr	r3, [pc, #20]	; 10c54 <_start@@Base+0x58>
   10c3c:	ldr	r2, [pc, #20]	; 10c58 <_start@@Base+0x5c>
   10c40:	add	r3, pc, r3
   10c44:	ldr	r2, [r3, r2]
   10c48:	cmp	r2, #0
   10c4c:	bxeq	lr
   10c50:	b	10bb4 <__gmon_start__@plt>
   10c54:			; <UNDEFINED> instruction: 0x000123b8
   10c58:	andeq	r0, r0, r4, asr r0
   10c5c:	ldr	r0, [pc, #24]	; 10c7c <_start@@Base+0x80>
   10c60:	ldr	r3, [pc, #24]	; 10c80 <_start@@Base+0x84>
   10c64:	cmp	r3, r0
   10c68:	bxeq	lr
   10c6c:	ldr	r3, [pc, #16]	; 10c84 <_start@@Base+0x88>
   10c70:	cmp	r3, #0
   10c74:	bxeq	lr
   10c78:	bx	r3
   10c7c:	andeq	r3, r2, r0, rrx
   10c80:	andeq	r3, r2, r0, rrx
   10c84:	andeq	r0, r0, r0
   10c88:	ldr	r0, [pc, #36]	; 10cb4 <_start@@Base+0xb8>
   10c8c:	ldr	r1, [pc, #36]	; 10cb8 <_start@@Base+0xbc>
   10c90:	sub	r1, r1, r0
   10c94:	asr	r1, r1, #2
   10c98:	add	r1, r1, r1, lsr #31
   10c9c:	asrs	r1, r1, #1
   10ca0:	bxeq	lr
   10ca4:	ldr	r3, [pc, #16]	; 10cbc <_start@@Base+0xc0>
   10ca8:	cmp	r3, #0
   10cac:	bxeq	lr
   10cb0:	bx	r3
   10cb4:	andeq	r3, r2, r0, rrx
   10cb8:	andeq	r3, r2, r0, rrx
   10cbc:	andeq	r0, r0, r0
   10cc0:	push	{r4, lr}
   10cc4:	ldr	r4, [pc, #24]	; 10ce4 <_start@@Base+0xe8>
   10cc8:	ldrb	r3, [r4]
   10ccc:	cmp	r3, #0
   10cd0:	popne	{r4, pc}
   10cd4:	bl	10c5c <_start@@Base+0x60>
   10cd8:	mov	r3, #1
   10cdc:	strb	r3, [r4]
   10ce0:	pop	{r4, pc}
   10ce4:	andeq	r3, r2, r4, rrx
   10ce8:	b	10c88 <_start@@Base+0x8c>

00010cec <fp_insere@@Base>:
   10cec:	push	{r4, r5, r6, sl, fp, lr}
   10cf0:	add	fp, sp, #16
   10cf4:	cmp	r0, #0
   10cf8:	mvneq	r0, #0
   10cfc:	popeq	{r4, r5, r6, sl, fp, pc}
   10d00:	ldm	r0, {r3, r6}
   10d04:	mov	r4, r0
   10d08:	mov	r0, #0
   10d0c:	cmp	r3, r6
   10d10:	popeq	{r4, r5, r6, sl, fp, pc}
   10d14:	mov	r0, r2
   10d18:	bl	11d28 <elemento_cria@@Base>
   10d1c:	mov	r5, r0
   10d20:	ldr	r0, [r4]
   10d24:	mov	r6, #0
   10d28:	cmp	r0, #1
   10d2c:	blt	10d60 <fp_insere@@Base+0x74>
   10d30:	ldr	r0, [r4, #8]
   10d34:	mov	r1, r5
   10d38:	ldr	r0, [r0, r6, lsl #2]
   10d3c:	bl	11d6c <maior_que@@Base>
   10d40:	cmp	r0, #0
   10d44:	beq	10d5c <fp_insere@@Base+0x70>
   10d48:	ldr	r0, [r4]
   10d4c:	add	r6, r6, #1
   10d50:	cmp	r6, r0
   10d54:	blt	10d30 <fp_insere@@Base+0x44>
   10d58:	b	10d60 <fp_insere@@Base+0x74>
   10d5c:	ldr	r0, [r4]
   10d60:	ldr	r1, [r4, #8]
   10d64:	cmp	r0, r6
   10d68:	blt	10d8c <fp_insere@@Base+0xa0>
   10d6c:	mov	r2, r0
   10d70:	ldr	r3, [r1, r2, lsl #2]!
   10d74:	cmp	r2, r6
   10d78:	str	r3, [r1, #4]
   10d7c:	sub	r3, r2, #1
   10d80:	ldr	r1, [r4, #8]
   10d84:	mov	r2, r3
   10d88:	bgt	10d70 <fp_insere@@Base+0x84>
   10d8c:	add	r0, r0, #1
   10d90:	str	r5, [r1, r6, lsl #2]
   10d94:	str	r0, [r4]
   10d98:	mov	r0, #1
   10d9c:	pop	{r4, r5, r6, sl, fp, pc}

00010da0 <fp_remove@@Base>:
   10da0:	push	{r4, sl, fp, lr}
   10da4:	add	fp, sp, #8
   10da8:	cmp	r0, #0
   10dac:	mov	r1, #0
   10db0:	ldrne	lr, [r0]
   10db4:	cmpne	lr, #0
   10db8:	bne	10dc4 <fp_remove@@Base+0x24>
   10dbc:	mov	r0, r1
   10dc0:	pop	{r4, sl, fp, pc}
   10dc4:	ldr	r1, [r0, #8]
   10dc8:	cmp	lr, #1
   10dcc:	ldr	ip, [r1]
   10dd0:	blt	10e04 <fp_remove@@Base+0x64>
   10dd4:	ldr	r3, [r1, #4]
   10dd8:	str	r3, [r1]
   10ddc:	beq	10e04 <fp_remove@@Base+0x64>
   10de0:	sub	r3, lr, #1
   10de4:	mov	r1, #0
   10de8:	ldr	r2, [r0, #8]
   10dec:	add	r2, r2, r1, lsl #2
   10df0:	add	r1, r1, #1
   10df4:	ldr	r4, [r2, #8]
   10df8:	cmp	r3, r1
   10dfc:	str	r4, [r2, #4]
   10e00:	bne	10de8 <fp_remove@@Base+0x48>
   10e04:	sub	r1, lr, #1
   10e08:	str	r1, [r0]
   10e0c:	ldr	r1, [ip, #4]
   10e10:	mov	r0, r1
   10e14:	pop	{r4, sl, fp, pc}

00010e18 <fp_carrega@@Base>:
   10e18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e1c:	add	fp, sp, #28
   10e20:	sub	sp, sp, #268	; 0x10c
   10e24:	mov	r2, r1
   10e28:	movw	r1, #8148	; 0x1fd4
   10e2c:	mov	r4, r0
   10e30:	movt	r1, #1
   10e34:	mov	r0, r2
   10e38:	bl	10b54 <fopen@plt>
   10e3c:	cmp	r0, #0
   10e40:	beq	10f60 <fp_carrega@@Base+0x148>
   10e44:	mov	r5, r0
   10e48:	bl	10bc0 <feof@plt>
   10e4c:	cmp	r0, #0
   10e50:	bne	10f50 <fp_carrega@@Base+0x138>
   10e54:	movw	r7, #8150	; 0x1fd6
   10e58:	add	r9, sp, #4
   10e5c:	add	r6, sp, #8
   10e60:	mov	sl, #0
   10e64:	movt	r7, #1
   10e68:	b	10f00 <fp_carrega@@Base+0xe8>
   10e6c:	ldr	r0, [sp, #4]
   10e70:	mov	r1, r6
   10e74:	bl	11d28 <elemento_cria@@Base>
   10e78:	mov	r7, r0
   10e7c:	ldr	r0, [r4]
   10e80:	mov	r8, #0
   10e84:	cmp	r0, #1
   10e88:	blt	10ebc <fp_carrega@@Base+0xa4>
   10e8c:	ldr	r0, [r4, #8]
   10e90:	mov	r1, r7
   10e94:	ldr	r0, [r0, r8, lsl #2]
   10e98:	bl	11d6c <maior_que@@Base>
   10e9c:	cmp	r0, #0
   10ea0:	beq	10eb8 <fp_carrega@@Base+0xa0>
   10ea4:	ldr	r0, [r4]
   10ea8:	add	r8, r8, #1
   10eac:	cmp	r8, r0
   10eb0:	blt	10e8c <fp_carrega@@Base+0x74>
   10eb4:	b	10ebc <fp_carrega@@Base+0xa4>
   10eb8:	ldr	r0, [r4]
   10ebc:	ldr	r1, [r4, #8]
   10ec0:	cmp	r0, r8
   10ec4:	blt	10ee8 <fp_carrega@@Base+0xd0>
   10ec8:	mov	r2, r0
   10ecc:	ldr	r3, [r1, r2, lsl #2]!
   10ed0:	cmp	r2, r8
   10ed4:	str	r3, [r1, #4]
   10ed8:	sub	r3, r2, #1
   10edc:	ldr	r1, [r4, #8]
   10ee0:	mov	r2, r3
   10ee4:	bgt	10ecc <fp_carrega@@Base+0xb4>
   10ee8:	str	r7, [r1, r8, lsl #2]
   10eec:	movw	r7, #8150	; 0x1fd6
   10ef0:	add	r0, r0, #1
   10ef4:	movt	r7, #1
   10ef8:	str	r0, [r4]
   10efc:	b	10f40 <fp_carrega@@Base+0x128>
   10f00:	mov	r0, r5
   10f04:	mov	r1, r7
   10f08:	mov	r2, r9
   10f0c:	bl	10b48 <__isoc99_fscanf@plt>
   10f10:	mov	r0, r6
   10f14:	mov	r1, #256	; 0x100
   10f18:	mov	r2, r5
   10f1c:	bl	10b78 <fgets@plt>
   10f20:	mov	r0, r6
   10f24:	bl	10bcc <strlen@plt>
   10f28:	add	r0, r6, r0
   10f2c:	cmp	r4, #0
   10f30:	strb	sl, [r0, #-1]
   10f34:	ldmne	r4, {r0, r1}
   10f38:	cmpne	r0, r1
   10f3c:	bne	10e6c <fp_carrega@@Base+0x54>
   10f40:	mov	r0, r5
   10f44:	bl	10bc0 <feof@plt>
   10f48:	cmp	r0, #0
   10f4c:	beq	10f00 <fp_carrega@@Base+0xe8>
   10f50:	mov	r0, r5
   10f54:	bl	10be4 <fclose@plt>
   10f58:	sub	sp, fp, #28
   10f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f60:	movw	r0, #8768	; 0x2240
   10f64:	movt	r0, #1
   10f68:	bl	10b90 <puts@plt>
   10f6c:	sub	sp, fp, #28
   10f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010f74 <heap_insere@@Base>:
   10f74:	push	{r4, r5, r6, r7, fp, lr}
   10f78:	add	fp, sp, #16
   10f7c:	mov	r4, r0
   10f80:	mov	r7, r1
   10f84:	ldr	r0, [r0]
   10f88:	mov	r5, #0
   10f8c:	ldr	r1, [r4, #4]
   10f90:	cmp	r0, r1
   10f94:	beq	11028 <heap_insere@@Base+0xb4>
   10f98:	mov	r0, r3
   10f9c:	mov	r1, r2
   10fa0:	bl	11d28 <elemento_cria@@Base>
   10fa4:	mov	r6, r0
   10fa8:	ldr	r0, [r4]
   10fac:	cmp	r0, #1
   10fb0:	blt	10fe8 <heap_insere@@Base+0x74>
   10fb4:	mov	r5, #0
   10fb8:	ldr	r0, [r4, #8]
   10fbc:	mov	r1, r6
   10fc0:	ldr	r0, [r0, r5, lsl #2]
   10fc4:	blx	r7
   10fc8:	cmp	r0, #1
   10fcc:	beq	10ff4 <heap_insere@@Base+0x80>
   10fd0:	ldr	r0, [r4]
   10fd4:	add	r5, r5, #1
   10fd8:	cmp	r5, r0
   10fdc:	blt	10fb8 <heap_insere@@Base+0x44>
   10fe0:	ldr	r0, [r4, #8]
   10fe4:	b	11000 <heap_insere@@Base+0x8c>
   10fe8:	ldr	r0, [r4, #8]
   10fec:	mov	r5, #0
   10ff0:	b	11018 <heap_insere@@Base+0xa4>
   10ff4:	ldr	r0, [r4, #8]
   10ff8:	cmp	r5, #0
   10ffc:	beq	11018 <heap_insere@@Base+0xa4>
   11000:	mov	r1, r5
   11004:	ldr	r2, [r0, r1, lsl #2]!
   11008:	subs	r1, r1, #1
   1100c:	str	r2, [r0, #4]
   11010:	ldr	r0, [r4, #8]
   11014:	bgt	11004 <heap_insere@@Base+0x90>
   11018:	str	r6, [r0, r5, lsl #2]
   1101c:	ldr	r0, [r4]
   11020:	add	r0, r0, #1
   11024:	str	r0, [r4]
   11028:	mov	r0, r5
   1102c:	pop	{r4, r5, r6, r7, fp, pc}

00011030 <heap_remove@@Base>:
   11030:	mov	r0, #0
   11034:	bx	lr

00011038 <heap_carrega@@Base>:
   11038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1103c:	add	fp, sp, #28
   11040:	sub	sp, sp, #268	; 0x10c
   11044:	mov	r4, r1
   11048:	movw	r1, #8148	; 0x1fd4
   1104c:	mov	r5, r0
   11050:	mov	r0, r2
   11054:	movt	r1, #1
   11058:	bl	10b54 <fopen@plt>
   1105c:	cmp	r0, #0
   11060:	beq	11188 <heap_carrega@@Base+0x150>
   11064:	mov	r8, r0
   11068:	bl	10bc0 <feof@plt>
   1106c:	cmp	r0, #0
   11070:	bne	11178 <heap_carrega@@Base+0x140>
   11074:	movw	r9, #8150	; 0x1fd6
   11078:	add	r6, sp, #4
   1107c:	add	sl, sp, #8
   11080:	mov	r7, #0
   11084:	movt	r9, #1
   11088:	mov	r0, r8
   1108c:	mov	r1, r9
   11090:	mov	r2, r6
   11094:	bl	10b48 <__isoc99_fscanf@plt>
   11098:	mov	r0, sl
   1109c:	mov	r1, #256	; 0x100
   110a0:	mov	r2, r8
   110a4:	bl	10b78 <fgets@plt>
   110a8:	mov	r0, sl
   110ac:	bl	10bcc <strlen@plt>
   110b0:	add	r0, sl, r0
   110b4:	strb	r7, [r0, #-1]
   110b8:	ldm	r5, {r0, r1}
   110bc:	cmp	r0, r1
   110c0:	beq	11168 <heap_carrega@@Base+0x130>
   110c4:	ldr	r0, [sp, #4]
   110c8:	mov	r1, sl
   110cc:	bl	11d28 <elemento_cria@@Base>
   110d0:	mov	r7, r0
   110d4:	ldr	r0, [r5]
   110d8:	cmp	r0, #1
   110dc:	blt	11114 <heap_carrega@@Base+0xdc>
   110e0:	mov	r9, #0
   110e4:	ldr	r0, [r5, #8]
   110e8:	mov	r1, r7
   110ec:	ldr	r0, [r0, r9, lsl #2]
   110f0:	blx	r4
   110f4:	cmp	r0, #1
   110f8:	beq	1111c <heap_carrega@@Base+0xe4>
   110fc:	ldr	r0, [r5]
   11100:	add	r9, r9, #1
   11104:	cmp	r9, r0
   11108:	blt	110e4 <heap_carrega@@Base+0xac>
   1110c:	ldr	r0, [r5, #8]
   11110:	b	11128 <heap_carrega@@Base+0xf0>
   11114:	ldr	r0, [r5, #8]
   11118:	b	11144 <heap_carrega@@Base+0x10c>
   1111c:	ldr	r0, [r5, #8]
   11120:	cmp	r9, #0
   11124:	beq	11144 <heap_carrega@@Base+0x10c>
   11128:	mov	r1, r9
   1112c:	ldr	r2, [r0, r1, lsl #2]!
   11130:	subs	r1, r1, #1
   11134:	str	r2, [r0, #4]
   11138:	ldr	r0, [r5, #8]
   1113c:	bgt	1112c <heap_carrega@@Base+0xf4>
   11140:	b	11148 <heap_carrega@@Base+0x110>
   11144:	mov	r9, #0
   11148:	str	r7, [r0, r9, lsl #2]
   1114c:	movw	r9, #8150	; 0x1fd6
   11150:	add	r6, sp, #4
   11154:	mov	r7, #0
   11158:	ldr	r0, [r5]
   1115c:	movt	r9, #1
   11160:	add	r0, r0, #1
   11164:	str	r0, [r5]
   11168:	mov	r0, r8
   1116c:	bl	10bc0 <feof@plt>
   11170:	cmp	r0, #0
   11174:	beq	11088 <heap_carrega@@Base+0x50>
   11178:	mov	r0, r8
   1117c:	bl	10be4 <fclose@plt>
   11180:	sub	sp, fp, #28
   11184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11188:	movw	r0, #8768	; 0x2240
   1118c:	movt	r0, #1
   11190:	bl	10b90 <puts@plt>
   11194:	sub	sp, fp, #28
   11198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001119c <main@@Base>:
   1119c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111a0:	add	fp, sp, #28
   111a4:	sub	sp, sp, #268	; 0x10c
   111a8:	mov	r0, #42	; 0x2a
   111ac:	bl	11c70 <vetor_cria@@Base>
   111b0:	mov	r4, r0
   111b4:	movw	r0, #8816	; 0x2270
   111b8:	movt	r0, #1
   111bc:	bl	10b90 <puts@plt>
   111c0:	movw	r1, #8154	; 0x1fda
   111c4:	mov	r0, r4
   111c8:	movt	r1, #1
   111cc:	bl	10e18 <fp_carrega@@Base>
   111d0:	movw	r8, #12392	; 0x3068
   111d4:	movw	r0, #8164	; 0x1fe4
   111d8:	movt	r8, #2
   111dc:	movt	r0, #1
   111e0:	ldr	r1, [r8]
   111e4:	bl	10b3c <printf@plt>
   111e8:	mov	r0, r4
   111ec:	bl	11e40 <vetor_imprime@@Base>
   111f0:	ldr	r0, [r4]
   111f4:	cmp	r0, #42	; 0x2a
   111f8:	bne	11240 <main@@Base+0xa4>
   111fc:	cmp	r4, #0
   11200:	beq	1124c <main@@Base+0xb0>
   11204:	ldr	r1, [r4, #8]
   11208:	ldm	r1, {r0, r2}
   1120c:	str	r2, [r1]
   11210:	mov	r1, #0
   11214:	ldr	r2, [r4, #8]
   11218:	sub	r2, r2, r1, lsl #2
   1121c:	sub	r1, r1, #1
   11220:	ldr	r3, [r2, #8]
   11224:	cmn	r1, #41	; 0x29
   11228:	str	r3, [r2, #4]
   1122c:	bne	11214 <main@@Base+0x78>
   11230:	mov	r1, #41	; 0x29
   11234:	str	r1, [r4]
   11238:	ldr	r1, [r0, #4]
   1123c:	b	11250 <main@@Base+0xb4>
   11240:	movw	r0, #9072	; 0x2370
   11244:	movt	r0, #1
   11248:	b	117c4 <main@@Base+0x628>
   1124c:	mov	r1, #0
   11250:	movw	r0, #8219	; 0x201b
   11254:	movt	r0, #1
   11258:	bl	10b30 <strcmp@plt>
   1125c:	cmp	r0, #0
   11260:	beq	11270 <main@@Base+0xd4>
   11264:	movw	r0, #8992	; 0x2320
   11268:	movt	r0, #1
   1126c:	b	117c4 <main@@Base+0x628>
   11270:	mov	r1, #0
   11274:	cmp	r4, #0
   11278:	str	r1, [r8]
   1127c:	beq	11330 <main@@Base+0x194>
   11280:	ldr	r0, [r4]
   11284:	cmp	r0, #0
   11288:	beq	112c0 <main@@Base+0x124>
   1128c:	cmp	r0, #1
   11290:	blt	112b4 <main@@Base+0x118>
   11294:	mov	r1, #0
   11298:	ldr	r2, [r4, #8]
   1129c:	add	r3, r2, r1, lsl #2
   112a0:	ldr	r3, [r3, #4]
   112a4:	str	r3, [r2, r1, lsl #2]
   112a8:	add	r1, r1, #1
   112ac:	cmp	r0, r1
   112b0:	bne	11298 <main@@Base+0xfc>
   112b4:	sub	r0, r0, #1
   112b8:	str	r0, [r4]
   112bc:	ldr	r1, [r8]
   112c0:	movw	r0, #8237	; 0x202d
   112c4:	movt	r0, #1
   112c8:	bl	10b3c <printf@plt>
   112cc:	mov	r1, #0
   112d0:	str	r1, [r8]
   112d4:	ldm	r4, {r0, r2}
   112d8:	cmp	r0, r2
   112dc:	beq	113b4 <main@@Base+0x218>
   112e0:	movw	r1, #8289	; 0x2061
   112e4:	mov	r0, #99	; 0x63
   112e8:	movt	r1, #1
   112ec:	bl	11d28 <elemento_cria@@Base>
   112f0:	mov	r5, r0
   112f4:	ldr	r0, [r4]
   112f8:	mov	r6, #0
   112fc:	cmp	r0, #1
   11300:	blt	11378 <main@@Base+0x1dc>
   11304:	ldr	r0, [r4, #8]
   11308:	mov	r1, r5
   1130c:	ldr	r0, [r0, r6, lsl #2]
   11310:	bl	11d6c <maior_que@@Base>
   11314:	cmp	r0, #0
   11318:	beq	11374 <main@@Base+0x1d8>
   1131c:	ldr	r0, [r4]
   11320:	add	r6, r6, #1
   11324:	cmp	r6, r0
   11328:	blt	11304 <main@@Base+0x168>
   1132c:	b	11378 <main@@Base+0x1dc>
   11330:	movw	r0, #8237	; 0x202d
   11334:	mov	r1, #0
   11338:	mov	r5, #0
   1133c:	movt	r0, #1
   11340:	bl	10b3c <printf@plt>
   11344:	movw	r0, #8303	; 0x206f
   11348:	mov	r1, #0
   1134c:	str	r5, [r8]
   11350:	movt	r0, #1
   11354:	bl	10b3c <printf@plt>
   11358:	movw	r0, #8374	; 0x20b6
   1135c:	mov	r1, #0
   11360:	str	r5, [r8]
   11364:	movt	r0, #1
   11368:	bl	10b3c <printf@plt>
   1136c:	str	r5, [r8]
   11370:	b	11590 <main@@Base+0x3f4>
   11374:	ldr	r0, [r4]
   11378:	ldr	r1, [r4, #8]
   1137c:	cmp	r0, r6
   11380:	blt	113a4 <main@@Base+0x208>
   11384:	mov	r2, r0
   11388:	ldr	r3, [r1, r2, lsl #2]!
   1138c:	cmp	r2, r6
   11390:	str	r3, [r1, #4]
   11394:	sub	r3, r2, #1
   11398:	ldr	r1, [r4, #8]
   1139c:	mov	r2, r3
   113a0:	bgt	11388 <main@@Base+0x1ec>
   113a4:	add	r0, r0, #1
   113a8:	str	r5, [r1, r6, lsl #2]
   113ac:	str	r0, [r4]
   113b0:	ldr	r1, [r8]
   113b4:	movw	r0, #8303	; 0x206f
   113b8:	movt	r0, #1
   113bc:	bl	10b3c <printf@plt>
   113c0:	ldr	r0, [r4]
   113c4:	cmp	r0, #0
   113c8:	beq	113fc <main@@Base+0x260>
   113cc:	cmp	r0, #1
   113d0:	blt	113f4 <main@@Base+0x258>
   113d4:	mov	r1, #0
   113d8:	ldr	r2, [r4, #8]
   113dc:	add	r3, r2, r1, lsl #2
   113e0:	ldr	r3, [r3, #4]
   113e4:	str	r3, [r2, r1, lsl #2]
   113e8:	add	r1, r1, #1
   113ec:	cmp	r0, r1
   113f0:	bne	113d8 <main@@Base+0x23c>
   113f4:	sub	r0, r0, #1
   113f8:	str	r0, [r4]
   113fc:	mov	r1, #0
   11400:	str	r1, [r8]
   11404:	ldm	r4, {r0, r2}
   11408:	cmp	r0, r2
   1140c:	beq	114a4 <main@@Base+0x308>
   11410:	movw	r1, #8289	; 0x2061
   11414:	mov	r0, #0
   11418:	mov	r6, #0
   1141c:	movt	r1, #1
   11420:	bl	11d28 <elemento_cria@@Base>
   11424:	mov	r5, r0
   11428:	ldr	r0, [r4]
   1142c:	cmp	r0, #1
   11430:	blt	11468 <main@@Base+0x2cc>
   11434:	mov	r6, #0
   11438:	ldr	r0, [r4, #8]
   1143c:	mov	r1, r5
   11440:	ldr	r0, [r0, r6, lsl #2]
   11444:	bl	11d6c <maior_que@@Base>
   11448:	cmp	r0, #0
   1144c:	beq	11464 <main@@Base+0x2c8>
   11450:	ldr	r0, [r4]
   11454:	add	r6, r6, #1
   11458:	cmp	r6, r0
   1145c:	blt	11438 <main@@Base+0x29c>
   11460:	b	11468 <main@@Base+0x2cc>
   11464:	ldr	r0, [r4]
   11468:	ldr	r1, [r4, #8]
   1146c:	cmp	r0, r6
   11470:	blt	11494 <main@@Base+0x2f8>
   11474:	mov	r2, r0
   11478:	ldr	r3, [r1, r2, lsl #2]!
   1147c:	cmp	r2, r6
   11480:	str	r3, [r1, #4]
   11484:	sub	r3, r2, #1
   11488:	ldr	r1, [r4, #8]
   1148c:	mov	r2, r3
   11490:	bgt	11478 <main@@Base+0x2dc>
   11494:	add	r0, r0, #1
   11498:	str	r5, [r1, r6, lsl #2]
   1149c:	str	r0, [r4]
   114a0:	ldr	r1, [r8]
   114a4:	movw	r0, #8374	; 0x20b6
   114a8:	movt	r0, #1
   114ac:	bl	10b3c <printf@plt>
   114b0:	ldr	r0, [r4]
   114b4:	cmp	r0, #0
   114b8:	beq	114ec <main@@Base+0x350>
   114bc:	cmp	r0, #1
   114c0:	blt	114e4 <main@@Base+0x348>
   114c4:	mov	r1, #0
   114c8:	ldr	r2, [r4, #8]
   114cc:	add	r3, r2, r1, lsl #2
   114d0:	ldr	r3, [r3, #4]
   114d4:	str	r3, [r2, r1, lsl #2]
   114d8:	add	r1, r1, #1
   114dc:	cmp	r0, r1
   114e0:	bne	114c8 <main@@Base+0x32c>
   114e4:	sub	r0, r0, #1
   114e8:	str	r0, [r4]
   114ec:	mov	r5, #0
   114f0:	str	r5, [r8]
   114f4:	ldm	r4, {r0, r1}
   114f8:	cmp	r0, r1
   114fc:	beq	11590 <main@@Base+0x3f4>
   11500:	movw	r1, #8289	; 0x2061
   11504:	mov	r0, #42	; 0x2a
   11508:	movt	r1, #1
   1150c:	bl	11d28 <elemento_cria@@Base>
   11510:	mov	r5, r0
   11514:	ldr	r0, [r4]
   11518:	mov	r6, #0
   1151c:	cmp	r0, #1
   11520:	blt	11554 <main@@Base+0x3b8>
   11524:	ldr	r0, [r4, #8]
   11528:	mov	r1, r5
   1152c:	ldr	r0, [r0, r6, lsl #2]
   11530:	bl	11d6c <maior_que@@Base>
   11534:	cmp	r0, #0
   11538:	beq	11550 <main@@Base+0x3b4>
   1153c:	ldr	r0, [r4]
   11540:	add	r6, r6, #1
   11544:	cmp	r6, r0
   11548:	blt	11524 <main@@Base+0x388>
   1154c:	b	11554 <main@@Base+0x3b8>
   11550:	ldr	r0, [r4]
   11554:	ldr	r1, [r4, #8]
   11558:	cmp	r0, r6
   1155c:	blt	11580 <main@@Base+0x3e4>
   11560:	mov	r2, r0
   11564:	ldr	r3, [r1, r2, lsl #2]!
   11568:	cmp	r2, r6
   1156c:	str	r3, [r1, #4]
   11570:	sub	r3, r2, #1
   11574:	ldr	r1, [r4, #8]
   11578:	mov	r2, r3
   1157c:	bgt	11564 <main@@Base+0x3c8>
   11580:	add	r0, r0, #1
   11584:	str	r5, [r1, r6, lsl #2]
   11588:	str	r0, [r4]
   1158c:	ldr	r5, [r8]
   11590:	movw	r0, #8445	; 0x20fd
   11594:	mov	r1, r5
   11598:	movt	r0, #1
   1159c:	bl	10b3c <printf@plt>
   115a0:	movw	r0, #8880	; 0x22b0
   115a4:	movt	r0, #1
   115a8:	bl	10b90 <puts@plt>
   115ac:	mov	r0, #42	; 0x2a
   115b0:	bl	11ccc <vetor_criaHeap@@Base>
   115b4:	movw	r1, #8148	; 0x1fd4
   115b8:	mov	r4, r0
   115bc:	movw	r0, #8154	; 0x1fda
   115c0:	movt	r0, #1
   115c4:	movt	r1, #1
   115c8:	bl	10b54 <fopen@plt>
   115cc:	cmp	r0, #0
   115d0:	beq	116f8 <main@@Base+0x55c>
   115d4:	mov	r9, r0
   115d8:	bl	10bc0 <feof@plt>
   115dc:	cmp	r0, #0
   115e0:	bne	116e4 <main@@Base+0x548>
   115e4:	movw	r7, #8150	; 0x1fd6
   115e8:	sub	r6, fp, #36	; 0x24
   115ec:	add	sl, sp, #4
   115f0:	mov	r5, #0
   115f4:	movt	r7, #1
   115f8:	mov	r0, r9
   115fc:	mov	r1, r7
   11600:	mov	r2, r6
   11604:	bl	10b48 <__isoc99_fscanf@plt>
   11608:	mov	r0, sl
   1160c:	mov	r1, #256	; 0x100
   11610:	mov	r2, r9
   11614:	bl	10b78 <fgets@plt>
   11618:	mov	r0, sl
   1161c:	bl	10bcc <strlen@plt>
   11620:	add	r0, sl, r0
   11624:	strb	r5, [r0, #-1]
   11628:	ldm	r4, {r0, r1}
   1162c:	cmp	r0, r1
   11630:	beq	116d4 <main@@Base+0x538>
   11634:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11638:	mov	r1, sl
   1163c:	mov	r5, r7
   11640:	bl	11d28 <elemento_cria@@Base>
   11644:	mov	r7, r0
   11648:	ldr	r0, [r4]
   1164c:	cmp	r0, #1
   11650:	blt	11688 <main@@Base+0x4ec>
   11654:	mov	r8, #0
   11658:	ldr	r0, [r4, #8]
   1165c:	mov	r1, r7
   11660:	ldr	r0, [r0, r8, lsl #2]
   11664:	bl	11d6c <maior_que@@Base>
   11668:	cmp	r0, #1
   1166c:	beq	11690 <main@@Base+0x4f4>
   11670:	ldr	r0, [r4]
   11674:	add	r8, r8, #1
   11678:	cmp	r8, r0
   1167c:	blt	11658 <main@@Base+0x4bc>
   11680:	ldr	r0, [r4, #8]
   11684:	b	1169c <main@@Base+0x500>
   11688:	ldr	r0, [r4, #8]
   1168c:	b	116b8 <main@@Base+0x51c>
   11690:	ldr	r0, [r4, #8]
   11694:	cmp	r8, #0
   11698:	beq	116b8 <main@@Base+0x51c>
   1169c:	mov	r1, r8
   116a0:	ldr	r2, [r0, r1, lsl #2]!
   116a4:	subs	r1, r1, #1
   116a8:	str	r2, [r0, #4]
   116ac:	ldr	r0, [r4, #8]
   116b0:	bgt	116a0 <main@@Base+0x504>
   116b4:	b	116bc <main@@Base+0x520>
   116b8:	mov	r8, #0
   116bc:	str	r7, [r0, r8, lsl #2]
   116c0:	mov	r7, r5
   116c4:	mov	r5, #0
   116c8:	ldr	r0, [r4]
   116cc:	add	r0, r0, #1
   116d0:	str	r0, [r4]
   116d4:	mov	r0, r9
   116d8:	bl	10bc0 <feof@plt>
   116dc:	cmp	r0, #0
   116e0:	beq	115f8 <main@@Base+0x45c>
   116e4:	mov	r0, r9
   116e8:	bl	10be4 <fclose@plt>
   116ec:	movw	r8, #12392	; 0x3068
   116f0:	movt	r8, #2
   116f4:	b	11704 <main@@Base+0x568>
   116f8:	movw	r0, #8768	; 0x2240
   116fc:	movt	r0, #1
   11700:	bl	10b90 <puts@plt>
   11704:	ldr	r1, [r8]
   11708:	movw	r0, #8515	; 0x2143
   1170c:	movt	r0, #1
   11710:	bl	10b3c <printf@plt>
   11714:	mov	r0, r4
   11718:	bl	11ed0 <vetor_imprimeHeap@@Base>
   1171c:	ldr	r0, [r4]
   11720:	cmp	r0, #42	; 0x2a
   11724:	bne	117bc <main@@Base+0x620>
   11728:	movw	r0, #8219	; 0x201b
   1172c:	mov	r1, #0
   11730:	mov	r5, #0
   11734:	movt	r0, #1
   11738:	bl	10b30 <strcmp@plt>
   1173c:	cmp	r0, #0
   11740:	bne	11264 <main@@Base+0xc8>
   11744:	movw	r0, #8570	; 0x217a
   11748:	mov	r1, #0
   1174c:	str	r5, [r8]
   11750:	movt	r0, #1
   11754:	bl	10b3c <printf@plt>
   11758:	str	r5, [r8]
   1175c:	ldm	r4, {r0, r1}
   11760:	cmp	r0, r1
   11764:	beq	11820 <main@@Base+0x684>
   11768:	movw	r1, #8289	; 0x2061
   1176c:	mov	r0, #99	; 0x63
   11770:	movt	r1, #1
   11774:	bl	11d28 <elemento_cria@@Base>
   11778:	mov	r5, r0
   1177c:	ldr	r0, [r4]
   11780:	cmp	r0, #1
   11784:	blt	117d8 <main@@Base+0x63c>
   11788:	mov	r6, #0
   1178c:	ldr	r0, [r4, #8]
   11790:	mov	r1, r5
   11794:	ldr	r0, [r0, r6, lsl #2]
   11798:	bl	11d6c <maior_que@@Base>
   1179c:	cmp	r0, #1
   117a0:	beq	117e0 <main@@Base+0x644>
   117a4:	ldr	r0, [r4]
   117a8:	add	r6, r6, #1
   117ac:	cmp	r6, r0
   117b0:	blt	1178c <main@@Base+0x5f0>
   117b4:	ldr	r0, [r4, #8]
   117b8:	b	117ec <main@@Base+0x650>
   117bc:	movw	r0, #8944	; 0x22f0
   117c0:	movt	r0, #1
   117c4:	bl	10b90 <puts@plt>
   117c8:	mov	r4, #1
   117cc:	mov	r0, r4
   117d0:	sub	sp, fp, #28
   117d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117d8:	ldr	r0, [r4, #8]
   117dc:	b	11808 <main@@Base+0x66c>
   117e0:	ldr	r0, [r4, #8]
   117e4:	cmp	r6, #0
   117e8:	beq	11808 <main@@Base+0x66c>
   117ec:	mov	r1, r6
   117f0:	ldr	r2, [r0, r1, lsl #2]!
   117f4:	subs	r1, r1, #1
   117f8:	str	r2, [r0, #4]
   117fc:	ldr	r0, [r4, #8]
   11800:	bgt	117f0 <main@@Base+0x654>
   11804:	b	1180c <main@@Base+0x670>
   11808:	mov	r6, #0
   1180c:	str	r5, [r0, r6, lsl #2]
   11810:	ldr	r0, [r4]
   11814:	add	r0, r0, #1
   11818:	str	r0, [r4]
   1181c:	ldr	r5, [r8]
   11820:	movw	r0, #8622	; 0x21ae
   11824:	mov	r1, r5
   11828:	movt	r0, #1
   1182c:	bl	10b3c <printf@plt>
   11830:	mov	r5, #0
   11834:	str	r5, [r8]
   11838:	ldm	r4, {r0, r1}
   1183c:	cmp	r0, r1
   11840:	mov	r1, #0
   11844:	beq	118e8 <main@@Base+0x74c>
   11848:	movw	r1, #8289	; 0x2061
   1184c:	mov	r0, #0
   11850:	mov	r7, #0
   11854:	movt	r1, #1
   11858:	bl	11d28 <elemento_cria@@Base>
   1185c:	mov	r6, r0
   11860:	ldr	r0, [r4]
   11864:	cmp	r0, #1
   11868:	blt	118a0 <main@@Base+0x704>
   1186c:	mov	r7, #0
   11870:	ldr	r0, [r4, #8]
   11874:	mov	r1, r6
   11878:	ldr	r0, [r0, r7, lsl #2]
   1187c:	bl	11d6c <maior_que@@Base>
   11880:	cmp	r0, #1
   11884:	beq	118a8 <main@@Base+0x70c>
   11888:	ldr	r0, [r4]
   1188c:	add	r7, r7, #1
   11890:	cmp	r7, r0
   11894:	blt	11870 <main@@Base+0x6d4>
   11898:	ldr	r0, [r4, #8]
   1189c:	b	118b4 <main@@Base+0x718>
   118a0:	ldr	r0, [r4, #8]
   118a4:	b	118d4 <main@@Base+0x738>
   118a8:	ldr	r0, [r4, #8]
   118ac:	cmp	r7, #0
   118b0:	beq	118d0 <main@@Base+0x734>
   118b4:	mov	r1, r7
   118b8:	ldr	r2, [r0, r1, lsl #2]!
   118bc:	subs	r1, r1, #1
   118c0:	str	r2, [r0, #4]
   118c4:	ldr	r0, [r4, #8]
   118c8:	bgt	118b8 <main@@Base+0x71c>
   118cc:	b	118d4 <main@@Base+0x738>
   118d0:	mov	r7, #0
   118d4:	str	r6, [r0, r7, lsl #2]
   118d8:	ldr	r0, [r4]
   118dc:	add	r0, r0, #1
   118e0:	str	r0, [r4]
   118e4:	ldr	r1, [r8]
   118e8:	movw	r0, #8693	; 0x21f5
   118ec:	movt	r0, #1
   118f0:	bl	10b3c <printf@plt>
   118f4:	str	r5, [r8]
   118f8:	ldm	r4, {r0, r1}
   118fc:	cmp	r0, r1
   11900:	beq	119a0 <main@@Base+0x804>
   11904:	movw	r1, #8289	; 0x2061
   11908:	mov	r0, #42	; 0x2a
   1190c:	movt	r1, #1
   11910:	bl	11d28 <elemento_cria@@Base>
   11914:	mov	r5, r0
   11918:	ldr	r0, [r4]
   1191c:	cmp	r0, #1
   11920:	blt	11958 <main@@Base+0x7bc>
   11924:	mov	r6, #0
   11928:	ldr	r0, [r4, #8]
   1192c:	mov	r1, r5
   11930:	ldr	r0, [r0, r6, lsl #2]
   11934:	bl	11d6c <maior_que@@Base>
   11938:	cmp	r0, #1
   1193c:	beq	11960 <main@@Base+0x7c4>
   11940:	ldr	r0, [r4]
   11944:	add	r6, r6, #1
   11948:	cmp	r6, r0
   1194c:	blt	11928 <main@@Base+0x78c>
   11950:	ldr	r0, [r4, #8]
   11954:	b	1196c <main@@Base+0x7d0>
   11958:	ldr	r0, [r4, #8]
   1195c:	b	11988 <main@@Base+0x7ec>
   11960:	ldr	r0, [r4, #8]
   11964:	cmp	r6, #0
   11968:	beq	11988 <main@@Base+0x7ec>
   1196c:	mov	r1, r6
   11970:	ldr	r2, [r0, r1, lsl #2]!
   11974:	subs	r1, r1, #1
   11978:	str	r2, [r0, #4]
   1197c:	ldr	r0, [r4, #8]
   11980:	bgt	11970 <main@@Base+0x7d4>
   11984:	b	1198c <main@@Base+0x7f0>
   11988:	mov	r6, #0
   1198c:	str	r5, [r0, r6, lsl #2]
   11990:	ldr	r0, [r4]
   11994:	add	r0, r0, #1
   11998:	str	r0, [r4]
   1199c:	ldr	r5, [r8]
   119a0:	movw	r0, #8445	; 0x20fd
   119a4:	mov	r1, r5
   119a8:	movt	r0, #1
   119ac:	bl	10b3c <printf@plt>
   119b0:	mov	r0, #42	; 0x2a
   119b4:	bl	11ccc <vetor_criaHeap@@Base>
   119b8:	movw	r1, #8148	; 0x1fd4
   119bc:	mov	r4, r0
   119c0:	movw	r0, #8154	; 0x1fda
   119c4:	movt	r0, #1
   119c8:	movt	r1, #1
   119cc:	bl	10b54 <fopen@plt>
   119d0:	cmp	r0, #0
   119d4:	beq	11afc <main@@Base+0x960>
   119d8:	mov	r9, r0
   119dc:	bl	10bc0 <feof@plt>
   119e0:	cmp	r0, #0
   119e4:	bne	11ae8 <main@@Base+0x94c>
   119e8:	movw	r7, #8150	; 0x1fd6
   119ec:	sub	r6, fp, #36	; 0x24
   119f0:	add	sl, sp, #4
   119f4:	mov	r5, #0
   119f8:	movt	r7, #1
   119fc:	mov	r0, r9
   11a00:	mov	r1, r7
   11a04:	mov	r2, r6
   11a08:	bl	10b48 <__isoc99_fscanf@plt>
   11a0c:	mov	r0, sl
   11a10:	mov	r1, #256	; 0x100
   11a14:	mov	r2, r9
   11a18:	bl	10b78 <fgets@plt>
   11a1c:	mov	r0, sl
   11a20:	bl	10bcc <strlen@plt>
   11a24:	add	r0, sl, r0
   11a28:	strb	r5, [r0, #-1]
   11a2c:	ldm	r4, {r0, r1}
   11a30:	cmp	r0, r1
   11a34:	beq	11ad8 <main@@Base+0x93c>
   11a38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a3c:	mov	r1, sl
   11a40:	mov	r5, r7
   11a44:	bl	11d28 <elemento_cria@@Base>
   11a48:	mov	r7, r0
   11a4c:	ldr	r0, [r4]
   11a50:	cmp	r0, #1
   11a54:	blt	11a8c <main@@Base+0x8f0>
   11a58:	mov	r8, #0
   11a5c:	ldr	r0, [r4, #8]
   11a60:	mov	r1, r7
   11a64:	ldr	r0, [r0, r8, lsl #2]
   11a68:	bl	11dd8 <maior_que_HeapSort@@Base>
   11a6c:	cmp	r0, #1
   11a70:	beq	11a94 <main@@Base+0x8f8>
   11a74:	ldr	r0, [r4]
   11a78:	add	r8, r8, #1
   11a7c:	cmp	r8, r0
   11a80:	blt	11a5c <main@@Base+0x8c0>
   11a84:	ldr	r0, [r4, #8]
   11a88:	b	11aa0 <main@@Base+0x904>
   11a8c:	ldr	r0, [r4, #8]
   11a90:	b	11abc <main@@Base+0x920>
   11a94:	ldr	r0, [r4, #8]
   11a98:	cmp	r8, #0
   11a9c:	beq	11abc <main@@Base+0x920>
   11aa0:	mov	r1, r8
   11aa4:	ldr	r2, [r0, r1, lsl #2]!
   11aa8:	subs	r1, r1, #1
   11aac:	str	r2, [r0, #4]
   11ab0:	ldr	r0, [r4, #8]
   11ab4:	bgt	11aa4 <main@@Base+0x908>
   11ab8:	b	11ac0 <main@@Base+0x924>
   11abc:	mov	r8, #0
   11ac0:	str	r7, [r0, r8, lsl #2]
   11ac4:	mov	r7, r5
   11ac8:	mov	r5, #0
   11acc:	ldr	r0, [r4]
   11ad0:	add	r0, r0, #1
   11ad4:	str	r0, [r4]
   11ad8:	mov	r0, r9
   11adc:	bl	10bc0 <feof@plt>
   11ae0:	cmp	r0, #0
   11ae4:	beq	119fc <main@@Base+0x860>
   11ae8:	mov	r0, r9
   11aec:	bl	10be4 <fclose@plt>
   11af0:	movw	r8, #12392	; 0x3068
   11af4:	movt	r8, #2
   11af8:	b	11b08 <main@@Base+0x96c>
   11afc:	movw	r0, #8768	; 0x2240
   11b00:	movt	r0, #1
   11b04:	bl	10b90 <puts@plt>
   11b08:	ldr	r1, [r8]
   11b0c:	movw	r0, #8515	; 0x2143
   11b10:	movt	r0, #1
   11b14:	bl	10b3c <printf@plt>
   11b18:	mov	r0, #0
   11b1c:	mov	r4, #0
   11b20:	bl	10b90 <puts@plt>
   11b24:	mov	r0, #0
   11b28:	bl	10b90 <puts@plt>
   11b2c:	mov	r0, #0
   11b30:	bl	10b90 <puts@plt>
   11b34:	mov	r0, #0
   11b38:	bl	10b90 <puts@plt>
   11b3c:	mov	r0, #0
   11b40:	bl	10b90 <puts@plt>
   11b44:	mov	r0, #0
   11b48:	bl	10b90 <puts@plt>
   11b4c:	mov	r0, #0
   11b50:	bl	10b90 <puts@plt>
   11b54:	mov	r0, #0
   11b58:	bl	10b90 <puts@plt>
   11b5c:	mov	r0, #0
   11b60:	bl	10b90 <puts@plt>
   11b64:	mov	r0, #0
   11b68:	bl	10b90 <puts@plt>
   11b6c:	mov	r0, #0
   11b70:	bl	10b90 <puts@plt>
   11b74:	mov	r0, #0
   11b78:	bl	10b90 <puts@plt>
   11b7c:	mov	r0, #0
   11b80:	bl	10b90 <puts@plt>
   11b84:	mov	r0, #0
   11b88:	bl	10b90 <puts@plt>
   11b8c:	mov	r0, #0
   11b90:	bl	10b90 <puts@plt>
   11b94:	mov	r0, #0
   11b98:	bl	10b90 <puts@plt>
   11b9c:	mov	r0, #0
   11ba0:	bl	10b90 <puts@plt>
   11ba4:	mov	r0, #0
   11ba8:	bl	10b90 <puts@plt>
   11bac:	mov	r0, #0
   11bb0:	bl	10b90 <puts@plt>
   11bb4:	mov	r0, #0
   11bb8:	bl	10b90 <puts@plt>
   11bbc:	mov	r0, #0
   11bc0:	bl	10b90 <puts@plt>
   11bc4:	mov	r0, #0
   11bc8:	bl	10b90 <puts@plt>
   11bcc:	mov	r0, #0
   11bd0:	bl	10b90 <puts@plt>
   11bd4:	mov	r0, #0
   11bd8:	bl	10b90 <puts@plt>
   11bdc:	mov	r0, #0
   11be0:	bl	10b90 <puts@plt>
   11be4:	mov	r0, #0
   11be8:	bl	10b90 <puts@plt>
   11bec:	mov	r0, #0
   11bf0:	bl	10b90 <puts@plt>
   11bf4:	mov	r0, #0
   11bf8:	bl	10b90 <puts@plt>
   11bfc:	mov	r0, #0
   11c00:	bl	10b90 <puts@plt>
   11c04:	mov	r0, #0
   11c08:	bl	10b90 <puts@plt>
   11c0c:	mov	r0, #0
   11c10:	bl	10b90 <puts@plt>
   11c14:	mov	r0, #0
   11c18:	bl	10b90 <puts@plt>
   11c1c:	mov	r0, #0
   11c20:	bl	10b90 <puts@plt>
   11c24:	mov	r0, #0
   11c28:	bl	10b90 <puts@plt>
   11c2c:	mov	r0, #0
   11c30:	bl	10b90 <puts@plt>
   11c34:	mov	r0, #0
   11c38:	bl	10b90 <puts@plt>
   11c3c:	mov	r0, #0
   11c40:	bl	10b90 <puts@plt>
   11c44:	mov	r0, #0
   11c48:	bl	10b90 <puts@plt>
   11c4c:	mov	r0, #0
   11c50:	bl	10b90 <puts@plt>
   11c54:	mov	r0, #0
   11c58:	bl	10b90 <puts@plt>
   11c5c:	mov	r0, #0
   11c60:	bl	10b90 <puts@plt>
   11c64:	mov	r0, #0
   11c68:	bl	10b90 <puts@plt>
   11c6c:	b	117cc <main@@Base+0x630>

00011c70 <vetor_cria@@Base>:
   11c70:	push	{r4, r5, fp, lr}
   11c74:	add	fp, sp, #8
   11c78:	mov	r5, r0
   11c7c:	mov	r0, #12
   11c80:	bl	10b9c <malloc@plt>
   11c84:	cmp	r0, #0
   11c88:	beq	11cc0 <vetor_cria@@Base+0x50>
   11c8c:	mov	r4, r0
   11c90:	mov	r0, #0
   11c94:	mov	r1, #4
   11c98:	stm	r4, {r0, r5}
   11c9c:	mov	r0, r5
   11ca0:	bl	10b24 <calloc@plt>
   11ca4:	cmp	r0, #0
   11ca8:	str	r0, [r4, #8]
   11cac:	beq	11cb8 <vetor_cria@@Base+0x48>
   11cb0:	mov	r0, r4
   11cb4:	pop	{r4, r5, fp, pc}
   11cb8:	mov	r0, r4
   11cbc:	bl	10b6c <free@plt>
   11cc0:	mov	r4, #0
   11cc4:	mov	r0, r4
   11cc8:	pop	{r4, r5, fp, pc}

00011ccc <vetor_criaHeap@@Base>:
   11ccc:	push	{r4, r5, fp, lr}
   11cd0:	add	fp, sp, #8
   11cd4:	mov	r5, r0
   11cd8:	mov	r0, #12
   11cdc:	bl	10b9c <malloc@plt>
   11ce0:	cmp	r0, #0
   11ce4:	beq	11d1c <vetor_criaHeap@@Base+0x50>
   11ce8:	mov	r4, r0
   11cec:	mov	r0, #0
   11cf0:	mov	r1, #4
   11cf4:	stm	r4, {r0, r5}
   11cf8:	add	r0, r5, #1
   11cfc:	bl	10b24 <calloc@plt>
   11d00:	cmp	r0, #0
   11d04:	str	r0, [r4, #8]
   11d08:	beq	11d14 <vetor_criaHeap@@Base+0x48>
   11d0c:	mov	r0, r4
   11d10:	pop	{r4, r5, fp, pc}
   11d14:	mov	r0, r4
   11d18:	bl	10b6c <free@plt>
   11d1c:	mov	r4, #0
   11d20:	mov	r0, r4
   11d24:	pop	{r4, r5, fp, pc}

00011d28 <elemento_cria@@Base>:
   11d28:	push	{r4, r5, r6, sl, fp, lr}
   11d2c:	add	fp, sp, #16
   11d30:	mov	r5, r0
   11d34:	mov	r0, #8
   11d38:	mov	r6, r1
   11d3c:	bl	10b9c <malloc@plt>
   11d40:	cmp	r0, #0
   11d44:	moveq	r4, #0
   11d48:	moveq	r0, r4
   11d4c:	popeq	{r4, r5, r6, sl, fp, pc}
   11d50:	mov	r4, r0
   11d54:	mov	r0, r6
   11d58:	bl	10b84 <strdup@plt>
   11d5c:	str	r5, [r4]
   11d60:	str	r0, [r4, #4]
   11d64:	mov	r0, r4
   11d68:	pop	{r4, r5, r6, sl, fp, pc}

00011d6c <maior_que@@Base>:
   11d6c:	push	{r4, r5, fp, lr}
   11d70:	add	fp, sp, #8
   11d74:	cmp	r0, #0
   11d78:	movne	r5, r1
   11d7c:	cmpne	r1, #0
   11d80:	bne	11d98 <maior_que@@Base+0x2c>
   11d84:	movw	r0, #9154	; 0x23c2
   11d88:	movt	r0, #1
   11d8c:	bl	10b90 <puts@plt>
   11d90:	mov	r0, #0
   11d94:	pop	{r4, r5, fp, pc}
   11d98:	mov	r4, r0
   11d9c:	movw	r0, #12384	; 0x3060
   11da0:	movt	r0, #2
   11da4:	ldr	r0, [r0]
   11da8:	bl	10b60 <fflush@plt>
   11dac:	movw	r0, #12392	; 0x3068
   11db0:	movt	r0, #2
   11db4:	ldr	r1, [r0]
   11db8:	add	r1, r1, #1
   11dbc:	str	r1, [r0]
   11dc0:	mov	r0, #0
   11dc4:	ldr	r1, [r5]
   11dc8:	ldr	r2, [r4]
   11dcc:	cmp	r2, r1
   11dd0:	movwgt	r0, #1
   11dd4:	pop	{r4, r5, fp, pc}

00011dd8 <maior_que_HeapSort@@Base>:
   11dd8:	push	{r4, r5, fp, lr}
   11ddc:	add	fp, sp, #8
   11de0:	cmp	r0, #0
   11de4:	movne	r5, r1
   11de8:	cmpne	r1, #0
   11dec:	bne	11e04 <maior_que_HeapSort@@Base+0x2c>
   11df0:	movw	r0, #9154	; 0x23c2
   11df4:	movt	r0, #1
   11df8:	bl	10b90 <puts@plt>
   11dfc:	mov	r0, #0
   11e00:	pop	{r4, r5, fp, pc}
   11e04:	mov	r4, r0
   11e08:	movw	r0, #12384	; 0x3060
   11e0c:	movt	r0, #2
   11e10:	ldr	r0, [r0]
   11e14:	bl	10b60 <fflush@plt>
   11e18:	movw	r0, #12392	; 0x3068
   11e1c:	movt	r0, #2
   11e20:	ldr	r1, [r0]
   11e24:	add	r1, r1, #1
   11e28:	str	r1, [r0]
   11e2c:	ldr	r1, [r5, #4]
   11e30:	ldr	r0, [r4, #4]
   11e34:	bl	10b30 <strcmp@plt>
   11e38:	lsr	r0, r0, #31
   11e3c:	pop	{r4, r5, fp, pc}

00011e40 <vetor_imprime@@Base>:
   11e40:	push	{r4, r5, r6, sl, fp, lr}
   11e44:	add	fp, sp, #16
   11e48:	mov	r4, r0
   11e4c:	ldr	r0, [r0]
   11e50:	cmp	r0, #1
   11e54:	blt	11ec0 <vetor_imprime@@Base+0x80>
   11e58:	ldr	r0, [r4, #8]
   11e5c:	ldr	r0, [r0]
   11e60:	ldr	r2, [r0]
   11e64:	ldr	r1, [r0, #4]
   11e68:	movw	r0, #9110	; 0x2396
   11e6c:	movt	r0, #1
   11e70:	bl	10b3c <printf@plt>
   11e74:	ldr	r0, [r4]
   11e78:	cmp	r0, #2
   11e7c:	blt	11eb4 <vetor_imprime@@Base+0x74>
   11e80:	movw	r5, #9139	; 0x23b3
   11e84:	mov	r6, #1
   11e88:	movt	r5, #1
   11e8c:	ldr	r0, [r4, #8]
   11e90:	ldr	r0, [r0, r6, lsl #2]
   11e94:	ldr	r2, [r0]
   11e98:	ldr	r1, [r0, #4]
   11e9c:	mov	r0, r5
   11ea0:	bl	10b3c <printf@plt>
   11ea4:	ldr	r0, [r4]
   11ea8:	add	r6, r6, #1
   11eac:	cmp	r6, r0
   11eb0:	blt	11e8c <vetor_imprime@@Base+0x4c>
   11eb4:	mov	r0, #10
   11eb8:	pop	{r4, r5, r6, sl, fp, lr}
   11ebc:	b	10bd8 <putchar@plt>
   11ec0:	movw	r0, #9168	; 0x23d0
   11ec4:	movt	r0, #1
   11ec8:	pop	{r4, r5, r6, sl, fp, lr}
   11ecc:	b	10b90 <puts@plt>

00011ed0 <vetor_imprimeHeap@@Base>:
   11ed0:	push	{r4, r5, r6, sl, fp, lr}
   11ed4:	add	fp, sp, #16
   11ed8:	mov	r4, r0
   11edc:	ldr	r0, [r0]
   11ee0:	cmp	r0, #1
   11ee4:	blt	11f50 <vetor_imprimeHeap@@Base+0x80>
   11ee8:	ldr	r0, [r4, #8]
   11eec:	ldr	r0, [r0, #4]
   11ef0:	ldr	r2, [r0]
   11ef4:	ldr	r1, [r0, #4]
   11ef8:	movw	r0, #9110	; 0x2396
   11efc:	movt	r0, #1
   11f00:	bl	10b3c <printf@plt>
   11f04:	ldr	r0, [r4]
   11f08:	cmp	r0, #3
   11f0c:	blt	11f44 <vetor_imprimeHeap@@Base+0x74>
   11f10:	movw	r5, #9139	; 0x23b3
   11f14:	mov	r6, #2
   11f18:	movt	r5, #1
   11f1c:	ldr	r0, [r4, #8]
   11f20:	ldr	r0, [r0, r6, lsl #2]
   11f24:	ldr	r2, [r0]
   11f28:	ldr	r1, [r0, #4]
   11f2c:	mov	r0, r5
   11f30:	bl	10b3c <printf@plt>
   11f34:	ldr	r0, [r4]
   11f38:	add	r6, r6, #1
   11f3c:	cmp	r6, r0
   11f40:	blt	11f1c <vetor_imprimeHeap@@Base+0x4c>
   11f44:	mov	r0, #10
   11f48:	pop	{r4, r5, r6, sl, fp, lr}
   11f4c:	b	10bd8 <putchar@plt>
   11f50:	movw	r0, #9168	; 0x23d0
   11f54:	movt	r0, #1
   11f58:	pop	{r4, r5, r6, sl, fp, lr}
   11f5c:	b	10b90 <puts@plt>

00011f60 <__libc_csu_init@@Base>:
   11f60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f64:	mov	r7, r0
   11f68:	ldr	r6, [pc, #72]	; 11fb8 <__libc_csu_init@@Base+0x58>
   11f6c:	ldr	r5, [pc, #72]	; 11fbc <__libc_csu_init@@Base+0x5c>
   11f70:	add	r6, pc, r6
   11f74:	add	r5, pc, r5
   11f78:	sub	r6, r6, r5
   11f7c:	mov	r8, r1
   11f80:	mov	r9, r2
   11f84:	bl	10b04 <calloc@plt-0x20>
   11f88:	asrs	r6, r6, #2
   11f8c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f90:	mov	r4, #0
   11f94:	add	r4, r4, #1
   11f98:	ldr	r3, [r5], #4
   11f9c:	mov	r2, r9
   11fa0:	mov	r1, r8
   11fa4:	mov	r0, r7
   11fa8:	blx	r3
   11fac:	cmp	r6, r4
   11fb0:	bne	11f94 <__libc_csu_init@@Base+0x34>
   11fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11fb8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   11fbc:	andeq	r0, r1, ip, lsl #31

00011fc0 <__libc_csu_fini@@Base>:
   11fc0:	bx	lr

Disassembly of section .fini:

00011fc4 <.fini>:
   11fc4:	push	{r3, lr}
   11fc8:	pop	{r3, pc}
