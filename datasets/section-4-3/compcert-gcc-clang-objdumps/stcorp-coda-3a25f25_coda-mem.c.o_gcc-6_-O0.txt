
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-mem.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_mem_empty_record>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #8
   c:	str	r0, [fp, #-8]
  10:	ldr	r3, [fp, #-8]
  14:	cmp	r3, #10
  18:	bls	30 <coda_mem_empty_record+0x30>
  1c:	ldr	r3, [pc, #212]	; f8 <coda_mem_empty_record+0xf8>
  20:	mov	r2, #49	; 0x31
  24:	ldr	r1, [pc, #208]	; fc <coda_mem_empty_record+0xfc>
  28:	ldr	r0, [pc, #208]	; 100 <coda_mem_empty_record+0x100>
  2c:	bl	0 <__assert_fail>
  30:	bl	0 <__aeabi_read_tp>
  34:	mov	r1, r0
  38:	ldr	r2, [pc, #196]	; 104 <coda_mem_empty_record+0x104>
  3c:	ldr	r3, [fp, #-8]
  40:	lsl	r3, r3, #2
  44:	add	r3, r3, r1
  48:	add	r3, r3, r2
  4c:	ldr	r3, [r3]
  50:	cmp	r3, #0
  54:	bne	cc <coda_mem_empty_record+0xcc>
  58:	ldr	r0, [fp, #-8]
  5c:	bl	0 <coda_type_empty_record>
  60:	mov	r3, r0
  64:	mov	r1, #0
  68:	mov	r0, r3
  6c:	bl	0 <coda_mem_record_new>
  70:	mov	r1, r0
  74:	bl	0 <__aeabi_read_tp>
  78:	ldr	r2, [pc, #132]	; 104 <coda_mem_empty_record+0x104>
  7c:	ldr	r3, [fp, #-8]
  80:	lsl	r3, r3, #2
  84:	add	r3, r3, r0
  88:	add	r3, r3, r2
  8c:	str	r1, [r3]
  90:	bl	0 <__aeabi_read_tp>
  94:	mov	r1, r0
  98:	ldr	r2, [pc, #100]	; 104 <coda_mem_empty_record+0x104>
  9c:	ldr	r3, [fp, #-8]
  a0:	lsl	r3, r3, #2
  a4:	add	r3, r3, r1
  a8:	add	r3, r3, r2
  ac:	ldr	r3, [r3]
  b0:	cmp	r3, #0
  b4:	bne	cc <coda_mem_empty_record+0xcc>
  b8:	ldr	r3, [pc, #56]	; f8 <coda_mem_empty_record+0xf8>
  bc:	mov	r2, #53	; 0x35
  c0:	ldr	r1, [pc, #52]	; fc <coda_mem_empty_record+0xfc>
  c4:	ldr	r0, [pc, #60]	; 108 <coda_mem_empty_record+0x108>
  c8:	bl	0 <__assert_fail>
  cc:	bl	0 <__aeabi_read_tp>
  d0:	mov	r1, r0
  d4:	ldr	r2, [pc, #40]	; 104 <coda_mem_empty_record+0x104>
  d8:	ldr	r3, [fp, #-8]
  dc:	lsl	r3, r3, #2
  e0:	add	r3, r3, r1
  e4:	add	r3, r3, r2
  e8:	ldr	r3, [r3]
  ec:	mov	r0, r3
  f0:	sub	sp, fp, #4
  f4:	pop	{fp, pc}
  f8:	.word	0x000000dc
  fc:	.word	0x00000000
 100:	.word	0x00000048
 104:	.word	0x00000000
 108:	.word	0x00000070

0000010c <coda_no_data_singleton>:
 10c:	push	{fp, lr}
 110:	add	fp, sp, #4
 114:	sub	sp, sp, #8
 118:	str	r0, [fp, #-8]
 11c:	ldr	r3, [fp, #-8]
 120:	cmp	r3, #10
 124:	bls	13c <coda_no_data_singleton+0x30>
 128:	ldr	r3, [pc, #196]	; 1f4 <coda_no_data_singleton+0xe8>
 12c:	mov	r2, #61	; 0x3d
 130:	ldr	r1, [pc, #192]	; 1f8 <coda_no_data_singleton+0xec>
 134:	ldr	r0, [pc, #192]	; 1fc <coda_no_data_singleton+0xf0>
 138:	bl	0 <__assert_fail>
 13c:	bl	0 <__aeabi_read_tp>
 140:	mov	r1, r0
 144:	ldr	r2, [pc, #180]	; 200 <coda_no_data_singleton+0xf4>
 148:	ldr	r3, [fp, #-8]
 14c:	lsl	r3, r3, #2
 150:	add	r3, r3, r1
 154:	add	r3, r3, r2
 158:	ldr	r3, [r3]
 15c:	cmp	r3, #0
 160:	bne	1c8 <coda_no_data_singleton+0xbc>
 164:	ldr	r0, [fp, #-8]
 168:	bl	0 <coda_mem_no_data_new>
 16c:	mov	r1, r0
 170:	bl	0 <__aeabi_read_tp>
 174:	ldr	r2, [pc, #132]	; 200 <coda_no_data_singleton+0xf4>
 178:	ldr	r3, [fp, #-8]
 17c:	lsl	r3, r3, #2
 180:	add	r3, r3, r0
 184:	add	r3, r3, r2
 188:	str	r1, [r3]
 18c:	bl	0 <__aeabi_read_tp>
 190:	mov	r1, r0
 194:	ldr	r2, [pc, #100]	; 200 <coda_no_data_singleton+0xf4>
 198:	ldr	r3, [fp, #-8]
 19c:	lsl	r3, r3, #2
 1a0:	add	r3, r3, r1
 1a4:	add	r3, r3, r2
 1a8:	ldr	r3, [r3]
 1ac:	cmp	r3, #0
 1b0:	bne	1c8 <coda_no_data_singleton+0xbc>
 1b4:	ldr	r3, [pc, #56]	; 1f4 <coda_no_data_singleton+0xe8>
 1b8:	mov	r2, #65	; 0x41
 1bc:	ldr	r1, [pc, #52]	; 1f8 <coda_no_data_singleton+0xec>
 1c0:	ldr	r0, [pc, #60]	; 204 <coda_no_data_singleton+0xf8>
 1c4:	bl	0 <__assert_fail>
 1c8:	bl	0 <__aeabi_read_tp>
 1cc:	mov	r1, r0
 1d0:	ldr	r2, [pc, #40]	; 200 <coda_no_data_singleton+0xf4>
 1d4:	ldr	r3, [fp, #-8]
 1d8:	lsl	r3, r3, #2
 1dc:	add	r3, r3, r1
 1e0:	add	r3, r3, r2
 1e4:	ldr	r3, [r3]
 1e8:	mov	r0, r3
 1ec:	sub	sp, fp, #4
 1f0:	pop	{fp, pc}
 1f4:	.word	0x000000f4
 1f8:	.word	0x00000000
 1fc:	.word	0x00000098
 200:	.word	0x00000000
 204:	.word	0x000000b8

00000208 <coda_mem_done>:
 208:	push	{fp, lr}
 20c:	add	fp, sp, #4
 210:	sub	sp, sp, #8
 214:	mov	r3, #0
 218:	str	r3, [fp, #-8]
 21c:	b	2a0 <coda_mem_done+0x98>
 220:	bl	0 <__aeabi_read_tp>
 224:	mov	r1, r0
 228:	ldr	r2, [pc, #288]	; 350 <coda_mem_done+0x148>
 22c:	ldr	r3, [fp, #-8]
 230:	lsl	r3, r3, #2
 234:	add	r3, r3, r1
 238:	add	r3, r3, r2
 23c:	ldr	r3, [r3]
 240:	cmp	r3, #0
 244:	beq	270 <coda_mem_done+0x68>
 248:	bl	0 <__aeabi_read_tp>
 24c:	mov	r1, r0
 250:	ldr	r2, [pc, #248]	; 350 <coda_mem_done+0x148>
 254:	ldr	r3, [fp, #-8]
 258:	lsl	r3, r3, #2
 25c:	add	r3, r3, r1
 260:	add	r3, r3, r2
 264:	ldr	r3, [r3]
 268:	mov	r0, r3
 26c:	bl	0 <coda_mem_type_delete>
 270:	bl	0 <__aeabi_read_tp>
 274:	mov	r1, r0
 278:	ldr	r2, [pc, #208]	; 350 <coda_mem_done+0x148>
 27c:	ldr	r3, [fp, #-8]
 280:	lsl	r3, r3, #2
 284:	add	r3, r3, r1
 288:	add	r3, r3, r2
 28c:	mov	r2, #0
 290:	str	r2, [r3]
 294:	ldr	r3, [fp, #-8]
 298:	add	r3, r3, #1
 29c:	str	r3, [fp, #-8]
 2a0:	ldr	r3, [fp, #-8]
 2a4:	cmp	r3, #10
 2a8:	ble	220 <coda_mem_done+0x18>
 2ac:	mov	r3, #0
 2b0:	str	r3, [fp, #-8]
 2b4:	b	338 <coda_mem_done+0x130>
 2b8:	bl	0 <__aeabi_read_tp>
 2bc:	mov	r1, r0
 2c0:	ldr	r2, [pc, #140]	; 354 <coda_mem_done+0x14c>
 2c4:	ldr	r3, [fp, #-8]
 2c8:	lsl	r3, r3, #2
 2cc:	add	r3, r3, r1
 2d0:	add	r3, r3, r2
 2d4:	ldr	r3, [r3]
 2d8:	cmp	r3, #0
 2dc:	beq	308 <coda_mem_done+0x100>
 2e0:	bl	0 <__aeabi_read_tp>
 2e4:	mov	r1, r0
 2e8:	ldr	r2, [pc, #100]	; 354 <coda_mem_done+0x14c>
 2ec:	ldr	r3, [fp, #-8]
 2f0:	lsl	r3, r3, #2
 2f4:	add	r3, r3, r1
 2f8:	add	r3, r3, r2
 2fc:	ldr	r3, [r3]
 300:	mov	r0, r3
 304:	bl	0 <coda_mem_type_delete>
 308:	bl	0 <__aeabi_read_tp>
 30c:	mov	r1, r0
 310:	ldr	r2, [pc, #60]	; 354 <coda_mem_done+0x14c>
 314:	ldr	r3, [fp, #-8]
 318:	lsl	r3, r3, #2
 31c:	add	r3, r3, r1
 320:	add	r3, r3, r2
 324:	mov	r2, #0
 328:	str	r2, [r3]
 32c:	ldr	r3, [fp, #-8]
 330:	add	r3, r3, #1
 334:	str	r3, [fp, #-8]
 338:	ldr	r3, [fp, #-8]
 33c:	cmp	r3, #10
 340:	ble	2b8 <coda_mem_done+0xb0>
 344:	nop			; (mov r0, r0)
 348:	sub	sp, fp, #4
 34c:	pop	{fp, pc}
	...
