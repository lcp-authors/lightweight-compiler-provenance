
../repos/prog2/CMakeFiles/4.dir/Aula04_Listas_T1/lista-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_l>:
       0:	mov	ip, sp
       4:	push	{r0, r1, r2, r3}
       8:	sub	sp, sp, #40	; 0x28
       c:	str	ip, [sp]
      10:	str	lr, [sp, #4]
      14:	str	r4, [sp, #8]
      18:	str	r5, [sp, #12]
      1c:	str	r6, [sp, #16]
      20:	str	r7, [sp, #20]
      24:	str	r8, [sp, #24]
      28:	mov	r7, r0
      2c:	mov	r0, #12
      30:	bl	0 <malloc>
      34:	mov	r5, r0
      38:	mov	r3, #0
      3c:	str	r3, [r5]
      40:	mov	r2, #0
      44:	str	r2, [r5, #4]
      48:	str	r7, [r5, #8]
      4c:	add	r0, sp, #32
      50:	add	lr, sp, #44	; 0x2c
      54:	str	lr, [r0]
      58:	mov	r6, #0
      5c:	cmp	r6, r7
      60:	bge	d4 <_l+0xd4>
      64:	add	r0, sp, #32
      68:	bl	0 <__compcert_va_int32>
      6c:	mov	r4, r0
      70:	cmp	r6, #0
      74:	beq	94 <_l+0x94>
      78:	mov	r0, #12
      7c:	bl	0 <malloc>
      80:	str	r0, [r8, #4]
      84:	ldr	r0, [r8, #4]
      88:	str	r8, [r0, #8]
      8c:	ldr	r8, [r8, #4]
      90:	b	ac <_l+0xac>
      94:	mov	r0, #12
      98:	bl	0 <malloc>
      9c:	str	r0, [r5]
      a0:	ldr	r8, [r5]
      a4:	mov	ip, #0
      a8:	str	ip, [r8, #8]
      ac:	mov	r0, r4
      b0:	bl	0 <strlen>
      b4:	add	r0, r0, #1
      b8:	bl	0 <malloc>
      bc:	str	r0, [r8]
      c0:	ldr	r0, [r8]
      c4:	mov	r1, r4
      c8:	bl	0 <strcpy>
      cc:	add	r6, r6, #1
      d0:	b	5c <_l+0x5c>
      d4:	mov	r1, #0
      d8:	str	r1, [r8, #4]
      dc:	str	r8, [r5, #4]
      e0:	mov	r0, r5
      e4:	ldr	r4, [sp, #8]
      e8:	ldr	r5, [sp, #12]
      ec:	ldr	r6, [sp, #16]
      f0:	ldr	r7, [sp, #20]
      f4:	ldr	r8, [sp, #24]
      f8:	ldr	lr, [sp, #4]
      fc:	add	sp, sp, #56	; 0x38
     100:	bx	lr

00000104 <_f>:
     104:	mov	ip, sp
     108:	sub	sp, sp, #8
     10c:	str	ip, [sp]
     110:	str	lr, [sp, #4]
     114:	cmp	r0, #0
     118:	bne	124 <_f+0x20>
     11c:	mov	r0, #0
     120:	b	170 <_f+0x6c>
     124:	ldr	r3, [r0]
     128:	mov	ip, #0
     12c:	cmp	ip, r1
     130:	blt	13c <_f+0x38>
     134:	mov	r2, #0
     138:	b	148 <_f+0x44>
     13c:	cmp	r3, #0
     140:	movne	r2, #1
     144:	moveq	r2, #0
     148:	cmp	r2, #0
     14c:	beq	15c <_f+0x58>
     150:	ldr	r3, [r3, #4]
     154:	add	ip, ip, #1
     158:	b	12c <_f+0x28>
     15c:	cmp	r1, ip
     160:	beq	16c <_f+0x68>
     164:	ldr	r0, [pc, #16]	; 17c <_f+0x78>
     168:	b	170 <_f+0x6c>
     16c:	ldr	r0, [r3]
     170:	ldr	lr, [sp, #4]
     174:	add	sp, sp, #8
     178:	bx	lr
     17c:	.word	0x000004aa

00000180 <teste_lista_nova>:
     180:	mov	ip, sp
     184:	sub	sp, sp, #16
     188:	str	ip, [sp]
     18c:	str	lr, [sp, #4]
     190:	str	r4, [sp, #8]
     194:	str	r5, [sp, #12]
     198:	mov	r5, #0
     19c:	ldr	r0, [pc, #152]	; 23c <teste_lista_nova+0xbc>
     1a0:	bl	0 <printf>
     1a4:	bl	0 <lista_nova>
     1a8:	mov	r4, r0
     1ac:	cmp	r4, #0
     1b0:	bne	1e4 <teste_lista_nova+0x64>
     1b4:	ldr	r0, [pc, #124]	; 238 <teste_lista_nova+0xb8>
     1b8:	bl	0 <printf>
     1bc:	add	r4, r5, #1
     1c0:	cmp	r4, #0
     1c4:	beq	1d4 <teste_lista_nova+0x54>
     1c8:	ldr	r0, [pc, #112]	; 240 <teste_lista_nova+0xc0>
     1cc:	bl	0 <printf>
     1d0:	b	1dc <teste_lista_nova+0x5c>
     1d4:	ldr	r0, [pc, #108]	; 248 <teste_lista_nova+0xc8>
     1d8:	bl	0 <printf>
     1dc:	mov	r0, r4
     1e0:	b	224 <teste_lista_nova+0xa4>
     1e4:	ldr	r0, [r4, #8]
     1e8:	cmp	r0, #0
     1ec:	beq	1fc <teste_lista_nova+0x7c>
     1f0:	ldr	r0, [pc, #76]	; 244 <teste_lista_nova+0xc4>
     1f4:	bl	0 <printf>
     1f8:	add	r5, r5, #1
     1fc:	mov	r0, r4
     200:	bl	0 <lista_apaga>
     204:	cmp	r5, #0
     208:	beq	218 <teste_lista_nova+0x98>
     20c:	ldr	r0, [pc, #44]	; 240 <teste_lista_nova+0xc0>
     210:	bl	0 <printf>
     214:	b	220 <teste_lista_nova+0xa0>
     218:	ldr	r0, [pc, #40]	; 248 <teste_lista_nova+0xc8>
     21c:	bl	0 <printf>
     220:	mov	r0, r5
     224:	ldr	r4, [sp, #8]
     228:	ldr	r5, [sp, #12]
     22c:	ldr	lr, [sp, #4]
     230:	add	sp, sp, #16
     234:	bx	lr
     238:	.word	0x00000000
     23c:	.word	0x000002fb
     240:	.word	0x000002bc
     244:	.word	0x00000321
     248:	.word	0x00000158

0000024c <teste_lista_insere>:
     24c:	mov	ip, sp
     250:	sub	sp, sp, #24
     254:	str	ip, [sp]
     258:	str	lr, [sp, #4]
     25c:	str	r4, [sp, #8]
     260:	str	r5, [sp, #12]
     264:	str	r6, [sp, #16]
     268:	str	r7, [sp, #20]
     26c:	mov	r4, #0
     270:	ldr	r7, [pc, #956]	; 634 <teste_lista_insere+0x3e8>
     274:	ldr	r6, [pc, #924]	; 618 <teste_lista_insere+0x3cc>
     278:	mov	r0, #2
     27c:	mov	r2, r7
     280:	mov	r1, r7
     284:	bl	0 <_l>
     288:	mov	r5, r0
     28c:	ldr	r0, [pc, #904]	; 61c <teste_lista_insere+0x3d0>
     290:	bl	0 <printf>
     294:	ldr	r1, [r5]
     298:	ldr	r2, [r1, #4]
     29c:	mov	r1, r6
     2a0:	mov	r0, r5
     2a4:	bl	0 <lista_insere>
     2a8:	cmp	r0, #0
     2ac:	bne	2bc <teste_lista_insere+0x70>
     2b0:	ldr	r0, [pc, #872]	; 620 <teste_lista_insere+0x3d4>
     2b4:	bl	0 <printf>
     2b8:	add	r4, r4, #1
     2bc:	ldr	ip, [r5, #8]
     2c0:	cmp	ip, #3
     2c4:	beq	2d4 <teste_lista_insere+0x88>
     2c8:	ldr	r0, [pc, #832]	; 610 <teste_lista_insere+0x3c4>
     2cc:	bl	0 <printf>
     2d0:	add	r4, r4, #1
     2d4:	ldr	r2, [r5, #8]
     2d8:	cmp	r2, #3
     2dc:	beq	300 <teste_lista_insere+0xb4>
     2e0:	cmp	r4, #0
     2e4:	beq	2f4 <teste_lista_insere+0xa8>
     2e8:	ldr	r0, [pc, #820]	; 624 <teste_lista_insere+0x3d8>
     2ec:	bl	0 <printf>
     2f0:	b	5ec <teste_lista_insere+0x3a0>
     2f4:	ldr	r0, [pc, #828]	; 638 <teste_lista_insere+0x3ec>
     2f8:	bl	0 <printf>
     2fc:	b	5ec <teste_lista_insere+0x3a0>
     300:	ldr	ip, [r5]
     304:	ldr	r0, [ip]
     308:	mov	r1, r7
     30c:	bl	0 <strcmp>
     310:	cmp	r0, #0
     314:	bne	33c <teste_lista_insere+0xf0>
     318:	ldr	r3, [r5]
     31c:	ldr	r2, [r3, #4]
     320:	ldr	r0, [r2]
     324:	mov	r1, r6
     328:	bl	0 <strcmp>
     32c:	cmp	r0, #0
     330:	movne	ip, #1
     334:	moveq	ip, #0
     338:	b	340 <teste_lista_insere+0xf4>
     33c:	mov	ip, #1
     340:	cmp	ip, #0
     344:	bne	370 <teste_lista_insere+0x124>
     348:	ldr	r0, [r5]
     34c:	ldr	r1, [r0, #4]
     350:	ldr	r0, [r1, #4]
     354:	ldr	r0, [r0]
     358:	mov	r1, r7
     35c:	bl	0 <strcmp>
     360:	cmp	r0, #0
     364:	movne	ip, #1
     368:	moveq	ip, #0
     36c:	b	374 <teste_lista_insere+0x128>
     370:	mov	ip, #1
     374:	cmp	ip, #0
     378:	beq	388 <teste_lista_insere+0x13c>
     37c:	ldr	r0, [pc, #648]	; 60c <teste_lista_insere+0x3c0>
     380:	bl	0 <printf>
     384:	add	r4, r4, #1
     388:	ldr	r2, [r5]
     38c:	mov	r1, r6
     390:	mov	r0, r5
     394:	bl	0 <lista_insere>
     398:	ldr	r2, [r5]
     39c:	cmp	r0, r2
     3a0:	beq	3b0 <teste_lista_insere+0x164>
     3a4:	ldr	r0, [pc, #640]	; 62c <teste_lista_insere+0x3e0>
     3a8:	bl	0 <printf>
     3ac:	add	r4, r4, #1
     3b0:	ldr	ip, [r5, #8]
     3b4:	cmp	ip, #4
     3b8:	beq	3c8 <teste_lista_insere+0x17c>
     3bc:	ldr	r0, [pc, #612]	; 628 <teste_lista_insere+0x3dc>
     3c0:	bl	0 <printf>
     3c4:	add	r4, r4, #1
     3c8:	ldr	r3, [r5, #8]
     3cc:	cmp	r3, #4
     3d0:	beq	3f4 <teste_lista_insere+0x1a8>
     3d4:	cmp	r4, #0
     3d8:	beq	3e8 <teste_lista_insere+0x19c>
     3dc:	ldr	r0, [pc, #576]	; 624 <teste_lista_insere+0x3d8>
     3e0:	bl	0 <printf>
     3e4:	b	5ec <teste_lista_insere+0x3a0>
     3e8:	ldr	r0, [pc, #584]	; 638 <teste_lista_insere+0x3ec>
     3ec:	bl	0 <printf>
     3f0:	b	5ec <teste_lista_insere+0x3a0>
     3f4:	ldr	r0, [r5]
     3f8:	ldr	r0, [r0]
     3fc:	mov	r1, r6
     400:	bl	0 <strcmp>
     404:	cmp	r0, #0
     408:	bne	430 <teste_lista_insere+0x1e4>
     40c:	ldr	ip, [r5]
     410:	ldr	ip, [ip, #4]
     414:	ldr	r0, [ip]
     418:	mov	r1, r7
     41c:	bl	0 <strcmp>
     420:	cmp	r0, #0
     424:	movne	ip, #1
     428:	moveq	ip, #0
     42c:	b	434 <teste_lista_insere+0x1e8>
     430:	mov	ip, #1
     434:	cmp	ip, #0
     438:	bne	464 <teste_lista_insere+0x218>
     43c:	ldr	r2, [r5]
     440:	ldr	r2, [r2, #4]
     444:	ldr	r1, [r2, #4]
     448:	ldr	r0, [r1]
     44c:	mov	r1, r6
     450:	bl	0 <strcmp>
     454:	cmp	r0, #0
     458:	movne	r3, #1
     45c:	moveq	r3, #0
     460:	b	468 <teste_lista_insere+0x21c>
     464:	mov	r3, #1
     468:	cmp	r3, #0
     46c:	bne	49c <teste_lista_insere+0x250>
     470:	ldr	r0, [r5]
     474:	ldr	r1, [r0, #4]
     478:	ldr	ip, [r1, #4]
     47c:	ldr	r1, [ip, #4]
     480:	ldr	r0, [r1]
     484:	mov	r1, r7
     488:	bl	0 <strcmp>
     48c:	cmp	r0, #0
     490:	movne	r3, #1
     494:	moveq	r3, #0
     498:	b	4a0 <teste_lista_insere+0x254>
     49c:	mov	r3, #1
     4a0:	cmp	r3, #0
     4a4:	beq	4b4 <teste_lista_insere+0x268>
     4a8:	ldr	r0, [pc, #348]	; 60c <teste_lista_insere+0x3c0>
     4ac:	bl	0 <printf>
     4b0:	add	r4, r4, #1
     4b4:	ldr	r1, [pc, #348]	; 618 <teste_lista_insere+0x3cc>
     4b8:	mov	r2, #0
     4bc:	mov	r0, r5
     4c0:	bl	0 <lista_insere>
     4c4:	ldr	r3, [r5, #8]
     4c8:	cmp	r3, #5
     4cc:	beq	4dc <teste_lista_insere+0x290>
     4d0:	ldr	r0, [pc, #316]	; 614 <teste_lista_insere+0x3c8>
     4d4:	bl	0 <printf>
     4d8:	add	r4, r4, #1
     4dc:	ldr	r1, [r5, #8]
     4e0:	cmp	r1, #5
     4e4:	beq	508 <teste_lista_insere+0x2bc>
     4e8:	cmp	r4, #0
     4ec:	beq	4fc <teste_lista_insere+0x2b0>
     4f0:	ldr	r0, [pc, #300]	; 624 <teste_lista_insere+0x3d8>
     4f4:	bl	0 <printf>
     4f8:	b	5ec <teste_lista_insere+0x3a0>
     4fc:	ldr	r0, [pc, #308]	; 638 <teste_lista_insere+0x3ec>
     500:	bl	0 <printf>
     504:	b	5ec <teste_lista_insere+0x3a0>
     508:	ldr	r3, [r5]
     50c:	ldr	r3, [r3, #4]
     510:	ldr	r2, [r3, #4]
     514:	ldr	r0, [r2, #4]
     518:	ldr	r3, [r0, #4]
     51c:	ldr	r0, [r3]
     520:	ldr	r1, [pc, #240]	; 618 <teste_lista_insere+0x3cc>
     524:	bl	0 <strcmp>
     528:	cmp	r0, #0
     52c:	beq	53c <teste_lista_insere+0x2f0>
     530:	ldr	r0, [pc, #212]	; 60c <teste_lista_insere+0x3c0>
     534:	bl	0 <printf>
     538:	add	r4, r4, #1
     53c:	mov	r0, r5
     540:	bl	0 <lista_apaga>
     544:	bl	0 <lista_nova>
     548:	mov	r5, r0
     54c:	ldr	r1, [pc, #196]	; 618 <teste_lista_insere+0x3cc>
     550:	mov	r2, #0
     554:	mov	r0, r5
     558:	bl	0 <lista_insere>
     55c:	ldr	r2, [r5, #8]
     560:	cmp	r2, #1
     564:	beq	574 <teste_lista_insere+0x328>
     568:	ldr	r0, [pc, #192]	; 630 <teste_lista_insere+0x3e4>
     56c:	bl	0 <printf>
     570:	add	r4, r4, #1
     574:	mov	r0, r5
     578:	bl	0 <lista_tamanho>
     57c:	cmp	r0, #1
     580:	beq	5a4 <teste_lista_insere+0x358>
     584:	cmp	r4, #0
     588:	beq	598 <teste_lista_insere+0x34c>
     58c:	ldr	r0, [pc, #144]	; 624 <teste_lista_insere+0x3d8>
     590:	bl	0 <printf>
     594:	b	5ec <teste_lista_insere+0x3a0>
     598:	ldr	r0, [pc, #152]	; 638 <teste_lista_insere+0x3ec>
     59c:	bl	0 <printf>
     5a0:	b	5ec <teste_lista_insere+0x3a0>
     5a4:	ldr	r0, [r5]
     5a8:	ldr	r0, [r0]
     5ac:	ldr	r1, [pc, #100]	; 618 <teste_lista_insere+0x3cc>
     5b0:	bl	0 <strcmp>
     5b4:	cmp	r0, #0
     5b8:	beq	5c8 <teste_lista_insere+0x37c>
     5bc:	ldr	r0, [pc, #72]	; 60c <teste_lista_insere+0x3c0>
     5c0:	bl	0 <printf>
     5c4:	add	r4, r4, #1
     5c8:	mov	r0, r5
     5cc:	bl	0 <lista_apaga>
     5d0:	cmp	r4, #0
     5d4:	beq	5e4 <teste_lista_insere+0x398>
     5d8:	ldr	r0, [pc, #68]	; 624 <teste_lista_insere+0x3d8>
     5dc:	bl	0 <printf>
     5e0:	b	5ec <teste_lista_insere+0x3a0>
     5e4:	ldr	r0, [pc, #76]	; 638 <teste_lista_insere+0x3ec>
     5e8:	bl	0 <printf>
     5ec:	mov	r0, r4
     5f0:	ldr	r4, [sp, #8]
     5f4:	ldr	r5, [sp, #12]
     5f8:	ldr	r6, [sp, #16]
     5fc:	ldr	r7, [sp, #20]
     600:	ldr	lr, [sp, #4]
     604:	add	sp, sp, #24
     608:	bx	lr
     60c:	.word	0x00000186
     610:	.word	0x000001cd
     614:	.word	0x000000b1
     618:	.word	0x00000016
     61c:	.word	0x00000037
     620:	.word	0x0000015c
     624:	.word	0x000002bc
     628:	.word	0x00000119
     62c:	.word	0x00000209
     630:	.word	0x0000004f
     634:	.word	0x00000048
     638:	.word	0x00000158

0000063c <teste_lista_remove>:
     63c:	mov	ip, sp
     640:	sub	sp, sp, #24
     644:	str	ip, [sp, #8]
     648:	str	lr, [sp, #12]
     64c:	str	r4, [sp, #16]
     650:	str	r5, [sp, #20]
     654:	mov	r5, #0
     658:	mov	r0, #5
     65c:	ldr	r1, [pc, #408]	; 7fc <teste_lista_remove+0x1c0>
     660:	ldr	r2, [pc, #396]	; 7f4 <teste_lista_remove+0x1b8>
     664:	ldr	r3, [pc, #384]	; 7ec <teste_lista_remove+0x1b0>
     668:	ldr	r4, [pc, #392]	; 7f8 <teste_lista_remove+0x1bc>
     66c:	ldr	ip, [pc, #408]	; 80c <teste_lista_remove+0x1d0>
     670:	str	ip, [sp, #4]
     674:	str	r4, [sp]
     678:	bl	0 <_l>
     67c:	mov	r4, r0
     680:	ldr	r0, [pc, #376]	; 800 <teste_lista_remove+0x1c4>
     684:	bl	0 <printf>
     688:	ldr	r3, [r4]
     68c:	ldr	r1, [r3, #4]
     690:	ldr	r0, [r1, #4]
     694:	ldr	r1, [r0, #4]
     698:	mov	r0, r4
     69c:	bl	0 <lista_remove>
     6a0:	ldr	r2, [r4, #4]
     6a4:	cmp	r0, r2
     6a8:	beq	6b8 <teste_lista_remove+0x7c>
     6ac:	ldr	r0, [pc, #336]	; 804 <teste_lista_remove+0x1c8>
     6b0:	bl	0 <printf>
     6b4:	add	r5, r5, #1
     6b8:	ldr	r2, [r4, #8]
     6bc:	cmp	r2, #4
     6c0:	beq	6d0 <teste_lista_remove+0x94>
     6c4:	ldr	r0, [pc, #324]	; 810 <teste_lista_remove+0x1d4>
     6c8:	bl	0 <printf>
     6cc:	add	r5, r5, #1
     6d0:	ldr	r3, [r4]
     6d4:	ldr	r0, [r3]
     6d8:	ldr	r1, [pc, #284]	; 7fc <teste_lista_remove+0x1c0>
     6dc:	bl	0 <strcmp>
     6e0:	cmp	r0, #0
     6e4:	bne	70c <teste_lista_remove+0xd0>
     6e8:	ldr	r0, [r4]
     6ec:	ldr	ip, [r0, #4]
     6f0:	ldr	r0, [ip]
     6f4:	ldr	r1, [pc, #248]	; 7f4 <teste_lista_remove+0x1b8>
     6f8:	bl	0 <strcmp>
     6fc:	cmp	r0, #0
     700:	movne	r2, #1
     704:	moveq	r2, #0
     708:	b	710 <teste_lista_remove+0xd4>
     70c:	mov	r2, #1
     710:	cmp	r2, #0
     714:	bne	740 <teste_lista_remove+0x104>
     718:	ldr	r0, [r4]
     71c:	ldr	r1, [r0, #4]
     720:	ldr	r3, [r1, #4]
     724:	ldr	r0, [r3]
     728:	ldr	r1, [pc, #188]	; 7ec <teste_lista_remove+0x1b0>
     72c:	bl	0 <strcmp>
     730:	cmp	r0, #0
     734:	movne	ip, #1
     738:	moveq	ip, #0
     73c:	b	744 <teste_lista_remove+0x108>
     740:	mov	ip, #1
     744:	cmp	ip, #0
     748:	bne	778 <teste_lista_remove+0x13c>
     74c:	ldr	ip, [r4]
     750:	ldr	r1, [ip, #4]
     754:	ldr	r1, [r1, #4]
     758:	ldr	r1, [r1, #4]
     75c:	ldr	r0, [r1]
     760:	ldr	r1, [pc, #164]	; 80c <teste_lista_remove+0x1d0>
     764:	bl	0 <strcmp>
     768:	cmp	r0, #0
     76c:	movne	ip, #1
     770:	moveq	ip, #0
     774:	b	77c <teste_lista_remove+0x140>
     778:	mov	ip, #1
     77c:	cmp	ip, #0
     780:	beq	790 <teste_lista_remove+0x154>
     784:	ldr	r0, [pc, #100]	; 7f0 <teste_lista_remove+0x1b4>
     788:	bl	0 <printf>
     78c:	add	r5, r5, #1
     790:	mov	r1, #0
     794:	mov	r0, r4
     798:	bl	0 <lista_remove>
     79c:	cmp	r0, #0
     7a0:	beq	7b0 <teste_lista_remove+0x174>
     7a4:	ldr	r0, [pc, #104]	; 814 <teste_lista_remove+0x1d8>
     7a8:	bl	0 <printf>
     7ac:	add	r5, r5, #1
     7b0:	mov	r0, r4
     7b4:	bl	0 <lista_apaga>
     7b8:	cmp	r5, #0
     7bc:	beq	7cc <teste_lista_remove+0x190>
     7c0:	ldr	r0, [pc, #64]	; 808 <teste_lista_remove+0x1cc>
     7c4:	bl	0 <printf>
     7c8:	b	7d4 <teste_lista_remove+0x198>
     7cc:	ldr	r0, [pc, #68]	; 818 <teste_lista_remove+0x1dc>
     7d0:	bl	0 <printf>
     7d4:	mov	r0, r5
     7d8:	ldr	r4, [sp, #16]
     7dc:	ldr	r5, [sp, #20]
     7e0:	ldr	lr, [sp, #12]
     7e4:	add	sp, sp, #24
     7e8:	bx	lr
     7ec:	.word	0x00000347
     7f0:	.word	0x000004ab
     7f4:	.word	0x00000155
     7f8:	.word	0x00000344
     7fc:	.word	0x000002b9
     800:	.word	0x0000030d
     804:	.word	0x00000239
     808:	.word	0x000002bc
     80c:	.word	0x0000001c
     810:	.word	0x0000034a
     814:	.word	0x00000475
     818:	.word	0x00000158

0000081c <teste_lista_pesquisa>:
     81c:	mov	ip, sp
     820:	sub	sp, sp, #40	; 0x28
     824:	str	ip, [sp, #16]
     828:	str	lr, [sp, #20]
     82c:	str	r4, [sp, #24]
     830:	str	r5, [sp, #28]
     834:	str	r6, [sp, #32]
     838:	str	r7, [sp, #36]	; 0x24
     83c:	mov	r5, #0
     840:	ldr	r6, [pc, #332]	; 994 <teste_lista_pesquisa+0x178>
     844:	ldr	r7, [pc, #312]	; 984 <teste_lista_pesquisa+0x168>
     848:	mov	r0, #7
     84c:	str	r6, [sp, #12]
     850:	str	r6, [sp, #8]
     854:	str	r7, [sp, #4]
     858:	str	r6, [sp]
     85c:	mov	r3, r6
     860:	mov	r2, r6
     864:	mov	r1, r6
     868:	bl	0 <_l>
     86c:	mov	r4, r0
     870:	ldr	r0, [pc, #264]	; 980 <teste_lista_pesquisa+0x164>
     874:	bl	0 <printf>
     878:	mov	r2, #0
     87c:	mov	r1, r7
     880:	mov	r0, r4
     884:	bl	0 <lista_pesquisa>
     888:	ldr	r1, [r4]
     88c:	ldr	r1, [r1, #4]
     890:	ldr	r1, [r1, #4]
     894:	ldr	r1, [r1, #4]
     898:	ldr	r3, [r1, #4]
     89c:	cmp	r0, r3
     8a0:	beq	8b0 <teste_lista_pesquisa+0x94>
     8a4:	ldr	r0, [pc, #224]	; 98c <teste_lista_pesquisa+0x170>
     8a8:	bl	0 <printf>
     8ac:	add	r5, r5, #1
     8b0:	ldr	r1, [pc, #216]	; 990 <teste_lista_pesquisa+0x174>
     8b4:	mov	r2, #0
     8b8:	mov	r0, r4
     8bc:	bl	0 <lista_pesquisa>
     8c0:	cmp	r0, #0
     8c4:	beq	8d4 <teste_lista_pesquisa+0xb8>
     8c8:	ldr	r0, [pc, #172]	; 97c <teste_lista_pesquisa+0x160>
     8cc:	bl	0 <printf>
     8d0:	add	r5, r5, #1
     8d4:	mov	r2, #1
     8d8:	mov	r1, r6
     8dc:	mov	r0, r4
     8e0:	bl	0 <lista_pesquisa>
     8e4:	ldr	r2, [r4]
     8e8:	ldr	ip, [r2, #4]
     8ec:	ldr	r3, [ip, #4]
     8f0:	ldr	r1, [r3, #4]
     8f4:	ldr	r1, [r1, #4]
     8f8:	ldr	ip, [r1, #4]
     8fc:	ldr	r1, [ip, #4]
     900:	cmp	r0, r1
     904:	beq	914 <teste_lista_pesquisa+0xf8>
     908:	ldr	r0, [pc, #124]	; 98c <teste_lista_pesquisa+0x170>
     90c:	bl	0 <printf>
     910:	add	r5, r5, #1
     914:	ldr	r1, [pc, #116]	; 990 <teste_lista_pesquisa+0x174>
     918:	mov	r2, #1
     91c:	mov	r0, r4
     920:	bl	0 <lista_pesquisa>
     924:	cmp	r0, #0
     928:	beq	938 <teste_lista_pesquisa+0x11c>
     92c:	ldr	r0, [pc, #72]	; 97c <teste_lista_pesquisa+0x160>
     930:	bl	0 <printf>
     934:	add	r5, r5, #1
     938:	mov	r0, r4
     93c:	bl	0 <lista_apaga>
     940:	cmp	r5, #0
     944:	beq	954 <teste_lista_pesquisa+0x138>
     948:	ldr	r0, [pc, #56]	; 988 <teste_lista_pesquisa+0x16c>
     94c:	bl	0 <printf>
     950:	b	95c <teste_lista_pesquisa+0x140>
     954:	ldr	r0, [pc, #60]	; 998 <teste_lista_pesquisa+0x17c>
     958:	bl	0 <printf>
     95c:	mov	r0, r5
     960:	ldr	r4, [sp, #24]
     964:	ldr	r5, [sp, #28]
     968:	ldr	r6, [sp, #32]
     96c:	ldr	r7, [sp, #36]	; 0x24
     970:	ldr	lr, [sp, #20]
     974:	add	sp, sp, #40	; 0x28
     978:	bx	lr
     97c:	.word	0x00000279
     980:	.word	0x000003c4
     984:	.word	0x00000034
     988:	.word	0x000002bc
     98c:	.word	0x000003f0
     990:	.word	0x00000272
     994:	.word	0x00000048
     998:	.word	0x00000158

0000099c <teste_lista_ordena>:
     99c:	mov	ip, sp
     9a0:	sub	sp, sp, #24
     9a4:	str	ip, [sp, #8]
     9a8:	str	lr, [sp, #12]
     9ac:	str	r4, [sp, #16]
     9b0:	str	r5, [sp, #20]
     9b4:	mov	r5, #0
     9b8:	mov	r0, #5
     9bc:	ldr	r1, [pc, #636]	; c40 <teste_lista_ordena+0x2a4>
     9c0:	ldr	r2, [pc, #636]	; c44 <teste_lista_ordena+0x2a8>
     9c4:	ldr	r3, [pc, #636]	; c48 <teste_lista_ordena+0x2ac>
     9c8:	ldr	r4, [pc, #644]	; c54 <teste_lista_ordena+0x2b8>
     9cc:	ldr	ip, [pc, #652]	; c60 <teste_lista_ordena+0x2c4>
     9d0:	str	ip, [sp, #4]
     9d4:	str	r4, [sp]
     9d8:	bl	0 <_l>
     9dc:	mov	r4, r0
     9e0:	ldr	r0, [pc, #612]	; c4c <teste_lista_ordena+0x2b0>
     9e4:	bl	0 <printf>
     9e8:	mov	r0, #0
     9ec:	bl	0 <lista_ordena>
     9f0:	cmn	r0, #1
     9f4:	beq	a04 <teste_lista_ordena+0x68>
     9f8:	ldr	r0, [pc, #592]	; c50 <teste_lista_ordena+0x2b4>
     9fc:	bl	0 <printf>
     a00:	add	r5, r5, #1
     a04:	mov	r0, r4
     a08:	bl	0 <lista_ordena>
     a0c:	ldr	r2, [r4]
     a10:	ldr	r0, [r2]
     a14:	ldr	r1, [pc, #548]	; c40 <teste_lista_ordena+0x2a4>
     a18:	bl	0 <strcmp>
     a1c:	cmp	r0, #0
     a20:	bne	a48 <teste_lista_ordena+0xac>
     a24:	ldr	r2, [r4]
     a28:	ldr	r2, [r2, #4]
     a2c:	ldr	r0, [r2]
     a30:	ldr	r1, [pc, #524]	; c44 <teste_lista_ordena+0x2a8>
     a34:	bl	0 <strcmp>
     a38:	cmp	r0, #0
     a3c:	movne	ip, #1
     a40:	moveq	ip, #0
     a44:	b	a4c <teste_lista_ordena+0xb0>
     a48:	mov	ip, #1
     a4c:	cmp	ip, #0
     a50:	bne	a7c <teste_lista_ordena+0xe0>
     a54:	ldr	ip, [r4]
     a58:	ldr	ip, [ip, #4]
     a5c:	ldr	ip, [ip, #4]
     a60:	ldr	r0, [ip]
     a64:	ldr	r1, [pc, #488]	; c54 <teste_lista_ordena+0x2b8>
     a68:	bl	0 <strcmp>
     a6c:	cmp	r0, #0
     a70:	movne	r3, #1
     a74:	moveq	r3, #0
     a78:	b	a80 <teste_lista_ordena+0xe4>
     a7c:	mov	r3, #1
     a80:	cmp	r3, #0
     a84:	bne	ab4 <teste_lista_ordena+0x118>
     a88:	ldr	r3, [r4]
     a8c:	ldr	r1, [r3, #4]
     a90:	ldr	r0, [r1, #4]
     a94:	ldr	ip, [r0, #4]
     a98:	ldr	r0, [ip]
     a9c:	ldr	r1, [pc, #444]	; c60 <teste_lista_ordena+0x2c4>
     aa0:	bl	0 <strcmp>
     aa4:	cmp	r0, #0
     aa8:	movne	r3, #1
     aac:	moveq	r3, #0
     ab0:	b	ab8 <teste_lista_ordena+0x11c>
     ab4:	mov	r3, #1
     ab8:	cmp	r3, #0
     abc:	bne	af0 <teste_lista_ordena+0x154>
     ac0:	ldr	r1, [r4]
     ac4:	ldr	r0, [r1, #4]
     ac8:	ldr	r3, [r0, #4]
     acc:	ldr	r3, [r3, #4]
     ad0:	ldr	r2, [r3, #4]
     ad4:	ldr	r0, [r2]
     ad8:	ldr	r1, [pc, #360]	; c48 <teste_lista_ordena+0x2ac>
     adc:	bl	0 <strcmp>
     ae0:	cmp	r0, #0
     ae4:	movne	r2, #1
     ae8:	moveq	r2, #0
     aec:	b	af4 <teste_lista_ordena+0x158>
     af0:	mov	r2, #1
     af4:	cmp	r2, #0
     af8:	beq	b08 <teste_lista_ordena+0x16c>
     afc:	ldr	r0, [pc, #340]	; c58 <teste_lista_ordena+0x2bc>
     b00:	bl	0 <printf>
     b04:	add	r5, r5, #1
     b08:	ldr	ip, [r4, #4]
     b0c:	ldr	r0, [ip]
     b10:	ldr	r1, [pc, #304]	; c48 <teste_lista_ordena+0x2ac>
     b14:	bl	0 <strcmp>
     b18:	cmp	r0, #0
     b1c:	bne	b44 <teste_lista_ordena+0x1a8>
     b20:	ldr	r1, [r4, #4]
     b24:	ldr	r2, [r1, #8]
     b28:	ldr	r0, [r2]
     b2c:	ldr	r1, [pc, #300]	; c60 <teste_lista_ordena+0x2c4>
     b30:	bl	0 <strcmp>
     b34:	cmp	r0, #0
     b38:	movne	r3, #1
     b3c:	moveq	r3, #0
     b40:	b	b48 <teste_lista_ordena+0x1ac>
     b44:	mov	r3, #1
     b48:	cmp	r3, #0
     b4c:	bne	b78 <teste_lista_ordena+0x1dc>
     b50:	ldr	r0, [r4, #4]
     b54:	ldr	r2, [r0, #8]
     b58:	ldr	r1, [r2, #8]
     b5c:	ldr	r0, [r1]
     b60:	ldr	r1, [pc, #236]	; c54 <teste_lista_ordena+0x2b8>
     b64:	bl	0 <strcmp>
     b68:	cmp	r0, #0
     b6c:	movne	r2, #1
     b70:	moveq	r2, #0
     b74:	b	b7c <teste_lista_ordena+0x1e0>
     b78:	mov	r2, #1
     b7c:	cmp	r2, #0
     b80:	bne	bb0 <teste_lista_ordena+0x214>
     b84:	ldr	r0, [r4, #4]
     b88:	ldr	r1, [r0, #8]
     b8c:	ldr	r1, [r1, #8]
     b90:	ldr	r3, [r1, #8]
     b94:	ldr	r0, [r3]
     b98:	ldr	r1, [pc, #164]	; c44 <teste_lista_ordena+0x2a8>
     b9c:	bl	0 <strcmp>
     ba0:	cmp	r0, #0
     ba4:	movne	ip, #1
     ba8:	moveq	ip, #0
     bac:	b	bb4 <teste_lista_ordena+0x218>
     bb0:	mov	ip, #1
     bb4:	cmp	ip, #0
     bb8:	bne	bec <teste_lista_ordena+0x250>
     bbc:	ldr	r3, [r4, #4]
     bc0:	ldr	r1, [r3, #8]
     bc4:	ldr	ip, [r1, #8]
     bc8:	ldr	ip, [ip, #8]
     bcc:	ldr	r0, [ip, #8]
     bd0:	ldr	r0, [r0]
     bd4:	ldr	r1, [pc, #100]	; c40 <teste_lista_ordena+0x2a4>
     bd8:	bl	0 <strcmp>
     bdc:	cmp	r0, #0
     be0:	movne	r1, #1
     be4:	moveq	r1, #0
     be8:	b	bf0 <teste_lista_ordena+0x254>
     bec:	mov	r1, #1
     bf0:	cmp	r1, #0
     bf4:	beq	c04 <teste_lista_ordena+0x268>
     bf8:	ldr	r0, [pc, #100]	; c64 <teste_lista_ordena+0x2c8>
     bfc:	bl	0 <printf>
     c00:	add	r5, r5, #1
     c04:	mov	r0, r4
     c08:	bl	0 <lista_apaga>
     c0c:	cmp	r5, #0
     c10:	beq	c20 <teste_lista_ordena+0x284>
     c14:	ldr	r0, [pc, #64]	; c5c <teste_lista_ordena+0x2c0>
     c18:	bl	0 <printf>
     c1c:	b	c28 <teste_lista_ordena+0x28c>
     c20:	ldr	r0, [pc, #64]	; c68 <teste_lista_ordena+0x2cc>
     c24:	bl	0 <printf>
     c28:	mov	r0, r5
     c2c:	ldr	r4, [sp, #16]
     c30:	ldr	r5, [sp, #20]
     c34:	ldr	lr, [sp, #12]
     c38:	add	sp, sp, #24
     c3c:	bx	lr
     c40:	.word	0x0000001f
     c44:	.word	0x0000031e
     c48:	.word	0x0000004c
     c4c:	.word	0x000001bc
     c50:	.word	0x000004e1
     c54:	.word	0x0000030a
     c58:	.word	0x000002be
     c5c:	.word	0x000002bc
     c60:	.word	0x000004a7
     c64:	.word	0x00000437
     c68:	.word	0x00000158

00000c6c <teste_lista_inverte>:
     c6c:	mov	ip, sp
     c70:	sub	sp, sp, #32
     c74:	str	ip, [sp, #8]
     c78:	str	lr, [sp, #12]
     c7c:	str	r4, [sp, #16]
     c80:	str	r5, [sp, #20]
     c84:	str	r6, [sp, #24]
     c88:	mov	r5, #0
     c8c:	mov	r0, #5
     c90:	ldr	r1, [pc, #664]	; f30 <teste_lista_inverte+0x2c4>
     c94:	ldr	r2, [pc, #668]	; f38 <teste_lista_inverte+0x2cc>
     c98:	ldr	r3, [pc, #668]	; f3c <teste_lista_inverte+0x2d0>
     c9c:	ldr	r6, [pc, #672]	; f44 <teste_lista_inverte+0x2d8>
     ca0:	ldr	ip, [pc, #680]	; f50 <teste_lista_inverte+0x2e4>
     ca4:	str	ip, [sp, #4]
     ca8:	str	r6, [sp]
     cac:	bl	0 <_l>
     cb0:	mov	r4, r0
     cb4:	ldr	r0, [pc, #632]	; f34 <teste_lista_inverte+0x2c8>
     cb8:	bl	0 <printf>
     cbc:	mov	r0, #0
     cc0:	bl	0 <lista_inverte>
     cc4:	cmn	r0, #1
     cc8:	beq	cd8 <teste_lista_inverte+0x6c>
     ccc:	ldr	r0, [pc, #620]	; f40 <teste_lista_inverte+0x2d4>
     cd0:	bl	0 <printf>
     cd4:	add	r5, r5, #1
     cd8:	mov	r0, r4
     cdc:	bl	0 <lista_inverte>
     ce0:	ldr	r0, [r4, #8]
     ce4:	cmp	r0, #5
     ce8:	beq	cf8 <teste_lista_inverte+0x8c>
     cec:	ldr	r0, [pc, #600]	; f4c <teste_lista_inverte+0x2e0>
     cf0:	bl	0 <printf>
     cf4:	add	r5, r5, #1
     cf8:	ldr	r1, [r4]
     cfc:	ldr	r0, [r1]
     d00:	ldr	r1, [pc, #584]	; f50 <teste_lista_inverte+0x2e4>
     d04:	bl	0 <strcmp>
     d08:	cmp	r0, #0
     d0c:	bne	d34 <teste_lista_inverte+0xc8>
     d10:	ldr	r3, [r4]
     d14:	ldr	r0, [r3, #4]
     d18:	ldr	r0, [r0]
     d1c:	ldr	r1, [pc, #544]	; f44 <teste_lista_inverte+0x2d8>
     d20:	bl	0 <strcmp>
     d24:	cmp	r0, #0
     d28:	movne	ip, #1
     d2c:	moveq	ip, #0
     d30:	b	d38 <teste_lista_inverte+0xcc>
     d34:	mov	ip, #1
     d38:	cmp	ip, #0
     d3c:	bne	d68 <teste_lista_inverte+0xfc>
     d40:	ldr	r1, [r4]
     d44:	ldr	ip, [r1, #4]
     d48:	ldr	r2, [ip, #4]
     d4c:	ldr	r0, [r2]
     d50:	ldr	r1, [pc, #484]	; f3c <teste_lista_inverte+0x2d0>
     d54:	bl	0 <strcmp>
     d58:	cmp	r0, #0
     d5c:	movne	r1, #1
     d60:	moveq	r1, #0
     d64:	b	d6c <teste_lista_inverte+0x100>
     d68:	mov	r1, #1
     d6c:	cmp	r1, #0
     d70:	bne	da0 <teste_lista_inverte+0x134>
     d74:	ldr	ip, [r4]
     d78:	ldr	r1, [ip, #4]
     d7c:	ldr	r3, [r1, #4]
     d80:	ldr	r2, [r3, #4]
     d84:	ldr	r0, [r2]
     d88:	ldr	r1, [pc, #424]	; f38 <teste_lista_inverte+0x2cc>
     d8c:	bl	0 <strcmp>
     d90:	cmp	r0, #0
     d94:	movne	r0, #1
     d98:	moveq	r0, #0
     d9c:	b	da4 <teste_lista_inverte+0x138>
     da0:	mov	r0, #1
     da4:	cmp	r0, #0
     da8:	bne	ddc <teste_lista_inverte+0x170>
     dac:	ldr	ip, [r4]
     db0:	ldr	r1, [ip, #4]
     db4:	ldr	r0, [r1, #4]
     db8:	ldr	r2, [r0, #4]
     dbc:	ldr	r0, [r2, #4]
     dc0:	ldr	r0, [r0]
     dc4:	ldr	r1, [pc, #356]	; f30 <teste_lista_inverte+0x2c4>
     dc8:	bl	0 <strcmp>
     dcc:	cmp	r0, #0
     dd0:	movne	r0, #1
     dd4:	moveq	r0, #0
     dd8:	b	de0 <teste_lista_inverte+0x174>
     ddc:	mov	r0, #1
     de0:	cmp	r0, #0
     de4:	beq	df4 <teste_lista_inverte+0x188>
     de8:	ldr	r0, [pc, #364]	; f5c <teste_lista_inverte+0x2f0>
     dec:	bl	0 <printf>
     df0:	add	r5, r5, #1
     df4:	ldr	ip, [r4, #4]
     df8:	ldr	r0, [ip]
     dfc:	ldr	r1, [pc, #300]	; f30 <teste_lista_inverte+0x2c4>
     e00:	bl	0 <strcmp>
     e04:	cmp	r0, #0
     e08:	bne	e30 <teste_lista_inverte+0x1c4>
     e0c:	ldr	r0, [r4, #4]
     e10:	ldr	r2, [r0, #8]
     e14:	ldr	r0, [r2]
     e18:	ldr	r1, [pc, #280]	; f38 <teste_lista_inverte+0x2cc>
     e1c:	bl	0 <strcmp>
     e20:	cmp	r0, #0
     e24:	movne	ip, #1
     e28:	moveq	ip, #0
     e2c:	b	e34 <teste_lista_inverte+0x1c8>
     e30:	mov	ip, #1
     e34:	cmp	ip, #0
     e38:	bne	e64 <teste_lista_inverte+0x1f8>
     e3c:	ldr	r1, [r4, #4]
     e40:	ldr	r0, [r1, #8]
     e44:	ldr	r2, [r0, #8]
     e48:	ldr	r0, [r2]
     e4c:	ldr	r1, [pc, #232]	; f3c <teste_lista_inverte+0x2d0>
     e50:	bl	0 <strcmp>
     e54:	cmp	r0, #0
     e58:	movne	ip, #1
     e5c:	moveq	ip, #0
     e60:	b	e68 <teste_lista_inverte+0x1fc>
     e64:	mov	ip, #1
     e68:	cmp	ip, #0
     e6c:	bne	e9c <teste_lista_inverte+0x230>
     e70:	ldr	r1, [r4, #4]
     e74:	ldr	ip, [r1, #8]
     e78:	ldr	r2, [ip, #8]
     e7c:	ldr	r1, [r2, #8]
     e80:	ldr	r0, [r1]
     e84:	ldr	r1, [pc, #184]	; f44 <teste_lista_inverte+0x2d8>
     e88:	bl	0 <strcmp>
     e8c:	cmp	r0, #0
     e90:	movne	r0, #1
     e94:	moveq	r0, #0
     e98:	b	ea0 <teste_lista_inverte+0x234>
     e9c:	mov	r0, #1
     ea0:	cmp	r0, #0
     ea4:	bne	ed8 <teste_lista_inverte+0x26c>
     ea8:	ldr	r3, [r4, #4]
     eac:	ldr	ip, [r3, #8]
     eb0:	ldr	ip, [ip, #8]
     eb4:	ldr	r3, [ip, #8]
     eb8:	ldr	r1, [r3, #8]
     ebc:	ldr	r0, [r1]
     ec0:	ldr	r1, [pc, #136]	; f50 <teste_lista_inverte+0x2e4>
     ec4:	bl	0 <strcmp>
     ec8:	cmp	r0, #0
     ecc:	movne	r3, #1
     ed0:	moveq	r3, #0
     ed4:	b	edc <teste_lista_inverte+0x270>
     ed8:	mov	r3, #1
     edc:	cmp	r3, #0
     ee0:	beq	ef0 <teste_lista_inverte+0x284>
     ee4:	ldr	r0, [pc, #104]	; f54 <teste_lista_inverte+0x2e8>
     ee8:	bl	0 <printf>
     eec:	add	r5, r5, #1
     ef0:	mov	r0, r4
     ef4:	bl	0 <lista_apaga>
     ef8:	cmp	r5, #0
     efc:	beq	f0c <teste_lista_inverte+0x2a0>
     f00:	ldr	r0, [pc, #64]	; f48 <teste_lista_inverte+0x2dc>
     f04:	bl	0 <printf>
     f08:	b	f14 <teste_lista_inverte+0x2a8>
     f0c:	ldr	r0, [pc, #68]	; f58 <teste_lista_inverte+0x2ec>
     f10:	bl	0 <printf>
     f14:	mov	r0, r5
     f18:	ldr	r4, [sp, #16]
     f1c:	ldr	r5, [sp, #20]
     f20:	ldr	r6, [sp, #24]
     f24:	ldr	lr, [sp, #12]
     f28:	add	sp, sp, #32
     f2c:	bx	lr
     f30:	.word	0x0000001f
     f34:	.word	0x00000022
     f38:	.word	0x0000031e
     f3c:	.word	0x0000004c
     f40:	.word	0x000004e1
     f44:	.word	0x0000030a
     f48:	.word	0x000002bc
     f4c:	.word	0x000000ed
     f50:	.word	0x000004a7
     f54:	.word	0x00000437
     f58:	.word	0x00000158
     f5c:	.word	0x00000386

00000f60 <main>:
     f60:	mov	ip, sp
     f64:	sub	sp, sp, #16
     f68:	str	ip, [sp]
     f6c:	str	lr, [sp, #4]
     f70:	str	r4, [sp, #8]
     f74:	ldr	r0, [pc, #140]	; 1008 <main+0xa8>
     f78:	ldr	r0, [r0]
     f7c:	mov	r1, #0
     f80:	mov	r2, #2
     f84:	mov	r3, #0
     f88:	bl	0 <setvbuf>
     f8c:	ldr	r0, [pc, #128]	; 1014 <main+0xb4>
     f90:	ldr	r0, [r0]
     f94:	mov	r1, #0
     f98:	mov	r2, #2
     f9c:	mov	r3, #0
     fa0:	bl	0 <setvbuf>
     fa4:	mov	r4, #0
     fa8:	bl	180 <teste_lista_nova>
     fac:	add	r4, r4, r0
     fb0:	bl	24c <teste_lista_insere>
     fb4:	add	r4, r4, r0
     fb8:	bl	63c <teste_lista_remove>
     fbc:	add	r4, r4, r0
     fc0:	bl	81c <teste_lista_pesquisa>
     fc4:	add	r4, r4, r0
     fc8:	bl	99c <teste_lista_ordena>
     fcc:	add	r4, r4, r0
     fd0:	bl	c6c <teste_lista_inverte>
     fd4:	add	r1, r4, r0
     fd8:	cmp	r1, #0
     fdc:	beq	fec <main+0x8c>
     fe0:	ldr	r0, [pc, #40]	; 1010 <main+0xb0>
     fe4:	bl	0 <printf>
     fe8:	b	ff4 <main+0x94>
     fec:	ldr	r0, [pc, #24]	; 100c <main+0xac>
     ff0:	bl	0 <printf>
     ff4:	mov	r0, #0
     ff8:	ldr	r4, [sp, #8]
     ffc:	ldr	lr, [sp, #4]
    1000:	add	sp, sp, #16
    1004:	bx	lr
    1008:	.word	0x00000000
    100c:	.word	0x000003d7
    1010:	.word	0x0000008b
    1014:	.word	0x00000000
