
../repos/CoolerVoid-raptor_waf-5d2cf7c/strsec.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <strlcpy>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #24
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	str	r5, [sp, #12]
  18:	str	r6, [sp, #16]
  1c:	mov	r3, r1
  20:	mov	ip, r2
  24:	cmp	ip, #0
  28:	beq	60 <strlcpy+0x60>
  2c:	sub	ip, ip, #1
  30:	cmp	ip, #0
  34:	beq	60 <strlcpy+0x60>
  38:	mov	r5, r0
  3c:	add	r0, r5, #1
  40:	mov	r4, r3
  44:	add	r3, r4, #1
  48:	ldrb	r4, [r4]
  4c:	and	r4, r4, #255	; 0xff
  50:	and	r6, r4, #255	; 0xff
  54:	strb	r6, [r5]
  58:	cmp	r4, #0
  5c:	bne	2c <strlcpy+0x2c>
  60:	cmp	ip, #0
  64:	bne	8c <strlcpy+0x8c>
  68:	cmp	r2, #0
  6c:	beq	78 <strlcpy+0x78>
  70:	mov	ip, #0
  74:	strb	ip, [r0]
  78:	mov	r2, r3
  7c:	add	r3, r2, #1
  80:	ldrb	ip, [r2]
  84:	cmp	ip, #0
  88:	bne	78 <strlcpy+0x78>
  8c:	sub	r0, r3, r1
  90:	sub	r0, r0, #1
  94:	ldr	r4, [sp, #8]
  98:	ldr	r5, [sp, #12]
  9c:	ldr	r6, [sp, #16]
  a0:	ldr	lr, [sp, #4]
  a4:	add	sp, sp, #24
  a8:	bx	lr

000000ac <strlcat>:
  ac:	mov	ip, sp
  b0:	sub	sp, sp, #16
  b4:	str	ip, [sp]
  b8:	str	lr, [sp, #4]
  bc:	str	r4, [sp, #8]
  c0:	str	r5, [sp, #12]
  c4:	mov	r3, r0
  c8:	mov	r4, r3
  cc:	mov	r0, r1
  d0:	mov	ip, r2
  d4:	mov	r5, ip
  d8:	sub	ip, r5, #1
  dc:	cmp	r5, #0
  e0:	beq	f8 <strlcat+0x4c>
  e4:	ldrb	r5, [r4]
  e8:	cmp	r5, #0
  ec:	movne	r5, #1
  f0:	moveq	r5, #0
  f4:	b	fc <strlcat+0x50>
  f8:	mov	r5, #0
  fc:	cmp	r5, #0
 100:	beq	10c <strlcat+0x60>
 104:	add	r4, r4, #1
 108:	b	d4 <strlcat+0x28>
 10c:	sub	r5, r4, r3
 110:	sub	r3, r2, r5
 114:	cmp	r3, #0
 118:	bne	128 <strlcat+0x7c>
 11c:	bl	0 <strlen>
 120:	add	r0, r5, r0
 124:	b	16c <strlcat+0xc0>
 128:	ldrb	r2, [r0]
 12c:	cmp	r2, #0
 130:	beq	15c <strlcat+0xb0>
 134:	cmp	r3, #1
 138:	beq	154 <strlcat+0xa8>
 13c:	mov	r2, r4
 140:	add	r4, r2, #1
 144:	ldrb	ip, [r0]
 148:	and	ip, ip, #255	; 0xff
 14c:	strb	ip, [r2]
 150:	sub	r3, r3, #1
 154:	add	r0, r0, #1
 158:	b	128 <strlcat+0x7c>
 15c:	mov	r3, #0
 160:	strb	r3, [r4]
 164:	sub	r1, r0, r1
 168:	add	r0, r5, r1
 16c:	ldr	r4, [sp, #8]
 170:	ldr	r5, [sp, #12]
 174:	ldr	lr, [sp, #4]
 178:	add	sp, sp, #16
 17c:	bx	lr

00000180 <strnstr>:
 180:	mov	ip, sp
 184:	sub	sp, sp, #32
 188:	str	ip, [sp]
 18c:	str	lr, [sp, #4]
 190:	str	r4, [sp, #8]
 194:	str	r5, [sp, #12]
 198:	str	r6, [sp, #16]
 19c:	str	r7, [sp, #20]
 1a0:	str	r8, [sp, #24]
 1a4:	str	r9, [sp, #28]
 1a8:	mov	r7, r2
 1ac:	mov	r4, r0
 1b0:	add	r6, r1, #1
 1b4:	ldrb	r2, [r1]
 1b8:	and	r3, r2, #255	; 0xff
 1bc:	and	r9, r3, #255	; 0xff
 1c0:	cmp	r3, #0
 1c4:	beq	250 <strnstr+0xd0>
 1c8:	mov	r0, r6
 1cc:	bl	0 <strlen>
 1d0:	mov	r5, r0
 1d4:	mov	r0, r7
 1d8:	sub	r7, r0, #1
 1dc:	cmp	r0, #1
 1e0:	bcc	208 <strnstr+0x88>
 1e4:	mov	r1, r4
 1e8:	add	r4, r1, #1
 1ec:	ldrb	r0, [r1]
 1f0:	and	r1, r0, #255	; 0xff
 1f4:	and	r8, r1, #255	; 0xff
 1f8:	cmp	r1, #0
 1fc:	moveq	r2, #1
 200:	movne	r2, #0
 204:	b	20c <strnstr+0x8c>
 208:	mov	r2, #1
 20c:	cmp	r2, #0
 210:	beq	21c <strnstr+0x9c>
 214:	mov	r0, #0
 218:	b	254 <strnstr+0xd4>
 21c:	cmp	r8, r9
 220:	bne	1d4 <strnstr+0x54>
 224:	cmp	r5, r7
 228:	bls	234 <strnstr+0xb4>
 22c:	mov	r0, #0
 230:	b	254 <strnstr+0xd4>
 234:	mov	r2, r5
 238:	mov	r1, r6
 23c:	mov	r0, r4
 240:	bl	0 <strncmp>
 244:	cmp	r0, #0
 248:	bne	1d4 <strnstr+0x54>
 24c:	sub	r4, r4, #1
 250:	mov	r0, r4
 254:	ldr	r4, [sp, #8]
 258:	ldr	r5, [sp, #12]
 25c:	ldr	r6, [sp, #16]
 260:	ldr	r7, [sp, #20]
 264:	ldr	r8, [sp, #24]
 268:	ldr	r9, [sp, #28]
 26c:	ldr	lr, [sp, #4]
 270:	add	sp, sp, #32
 274:	bx	lr
