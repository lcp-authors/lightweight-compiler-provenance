
../compcert-repos/prog2/CMakeFiles/0.4.dir/Aula00_Conceitos_base/04.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ordenado>:
   0:	mov	r2, r0
   4:	mov	r0, #1
   8:	cmp	r1, #2
   c:	blt	3c <ordenado+0x3c>
  10:	ldr	ip, [r2], #4
  14:	sub	r1, r1, #1
  18:	ldr	r3, [r2]
  1c:	cmp	r3, ip
  20:	blt	38 <ordenado+0x38>
  24:	subs	r1, r1, #1
  28:	add	r2, r2, #4
  2c:	mov	ip, r3
  30:	bxeq	lr
  34:	b	18 <ordenado+0x18>
  38:	mov	r0, #0
  3c:	bx	lr

00000040 <main>:
  40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
  44:	add	fp, sp, #24
  48:	sub	sp, sp, #8
  4c:	movw	r0, #0
  50:	movt	r0, #0
  54:	bl	0 <printf>
  58:	movw	r0, #0
  5c:	add	r1, sp, #4
  60:	movt	r0, #0
  64:	bl	0 <__isoc99_scanf>
  68:	ldr	r4, [sp, #4]
  6c:	cmp	r4, #101	; 0x65
  70:	blt	98 <main+0x58>
  74:	movw	r0, #0
  78:	movt	r0, #0
  7c:	bl	0 <printf>
  80:	mov	r0, #100	; 0x64
  84:	str	r0, [sp, #4]
  88:	mov	r0, #400	; 0x190
  8c:	bl	0 <malloc>
  90:	mov	r8, r0
  94:	b	ac <main+0x6c>
  98:	lsl	r0, r4, #2
  9c:	bl	0 <malloc>
  a0:	mov	r8, r0
  a4:	cmp	r4, #1
  a8:	blt	11c <main+0xdc>
  ac:	movw	r6, #0
  b0:	movw	r7, #0
  b4:	mov	r5, #0
  b8:	mov	r4, r8
  bc:	movt	r6, #0
  c0:	movt	r7, #0
  c4:	add	r5, r5, #1
  c8:	mov	r0, r6
  cc:	mov	r1, r5
  d0:	bl	0 <printf>
  d4:	mov	r0, r7
  d8:	mov	r1, r4
  dc:	bl	0 <__isoc99_scanf>
  e0:	ldr	r0, [sp, #4]
  e4:	add	r4, r4, #4
  e8:	cmp	r5, r0
  ec:	blt	c4 <main+0x84>
  f0:	cmp	r0, #2
  f4:	blt	11c <main+0xdc>
  f8:	ldr	r2, [r8]
  fc:	mov	r1, #1
 100:	ldr	r3, [r8, r1, lsl #2]
 104:	cmp	r3, r2
 108:	blt	17c <main+0x13c>
 10c:	add	r1, r1, #1
 110:	mov	r2, r3
 114:	cmp	r0, r1
 118:	bne	100 <main+0xc0>
 11c:	movw	r0, #0
 120:	movt	r0, #0
 124:	bl	0 <printf>
 128:	ldr	r0, [sp, #4]
 12c:	sub	r2, r0, #1
 130:	ldr	r1, [r8, r2, lsl #2]
 134:	cmp	r2, #1
 138:	blt	164 <main+0x124>
 13c:	movw	r4, #0
 140:	sub	r5, r0, #2
 144:	movt	r4, #0
 148:	mov	r0, r4
 14c:	bl	0 <printf>
 150:	ldr	r1, [r8, r5, lsl #2]
 154:	sub	r0, r5, #1
 158:	cmp	r5, #0
 15c:	mov	r5, r0
 160:	bgt	148 <main+0x108>
 164:	movw	r0, #0
 168:	movt	r0, #0
 16c:	bl	0 <printf>
 170:	mov	r0, #0
 174:	sub	sp, fp, #24
 178:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 17c:	movw	r0, #0
 180:	movt	r0, #0
 184:	bl	0 <puts>
 188:	b	170 <main+0x130>
