
../compcert-repos/prog2/CMakeFiles/8.dir/Aula08_Grafos_T2/grafo.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <v_sucessores.part.1>:
   0:	strd	r4, [sp, #-16]!
   4:	mov	r5, r0
   8:	mov	r4, r1
   c:	str	r6, [sp, #8]
  10:	str	lr, [sp, #12]
  14:	bl	0 <vetor_novo>
  18:	ldr	r3, [r5, #4]
  1c:	mov	r6, r0
  20:	add	r3, r3, r4, lsl #3
  24:	ldr	r4, [r3, #4]
  28:	cmp	r4, #0
  2c:	beq	54 <v_sucessores.part.1+0x54>
  30:	mov	r5, #0
  34:	mov	r2, r5
  38:	mov	r0, r6
  3c:	ldr	r1, [r4]
  40:	bl	0 <vetor_insere>
  44:	ldr	r4, [r4, #4]
  48:	add	r5, r5, #1
  4c:	cmp	r4, #0
  50:	bne	34 <v_sucessores.part.1+0x34>
  54:	mov	r0, r6
  58:	ldrd	r4, [sp]
  5c:	ldr	r6, [sp, #8]
  60:	add	sp, sp, #12
  64:	pop	{pc}		; (ldr pc, [sp], #4)

00000068 <v_antecessores.part.2>:
  68:	strd	r4, [sp, #-24]!	; 0xffffffe8
  6c:	mov	r4, r1
  70:	strd	r6, [sp, #8]
  74:	mov	r6, r0
  78:	str	r8, [sp, #16]
  7c:	str	lr, [sp, #20]
  80:	bl	0 <vetor_novo>
  84:	ldr	r1, [r6]
  88:	mov	r7, r0
  8c:	cmp	r1, #0
  90:	ble	e4 <v_antecessores.part.2+0x7c>
  94:	mov	r8, #0
  98:	mov	r5, r8
  9c:	ldr	r3, [r6, #4]
  a0:	add	r3, r3, r5, lsl #3
  a4:	ldr	r3, [r3, #4]
  a8:	cmp	r3, #0
  ac:	beq	d8 <v_antecessores.part.2+0x70>
  b0:	ldr	r2, [r3]
  b4:	cmp	r4, r2
  b8:	bne	cc <v_antecessores.part.2+0x64>
  bc:	b	fc <v_antecessores.part.2+0x94>
  c0:	ldr	r2, [r3]
  c4:	cmp	r2, r4
  c8:	beq	fc <v_antecessores.part.2+0x94>
  cc:	ldr	r3, [r3, #4]
  d0:	cmp	r3, #0
  d4:	bne	c0 <v_antecessores.part.2+0x58>
  d8:	add	r5, r5, #1
  dc:	cmp	r5, r1
  e0:	blt	9c <v_antecessores.part.2+0x34>
  e4:	mov	r0, r7
  e8:	ldrd	r4, [sp]
  ec:	ldrd	r6, [sp, #8]
  f0:	ldr	r8, [sp, #16]
  f4:	add	sp, sp, #20
  f8:	pop	{pc}		; (ldr pc, [sp], #4)
  fc:	mov	r1, r5
 100:	mov	r2, r8
 104:	mov	r0, r7
 108:	add	r5, r5, #1
 10c:	bl	0 <vetor_insere>
 110:	ldr	r1, [r6]
 114:	add	r8, r8, #1
 118:	cmp	r5, r1
 11c:	blt	9c <v_antecessores.part.2+0x34>
 120:	b	e4 <v_antecessores.part.2+0x7c>

00000124 <cria_elem>:
 124:	str	r4, [sp, #-8]!
 128:	mov	r4, r0
 12c:	mov	r0, #8
 130:	str	lr, [sp, #4]
 134:	bl	0 <malloc>
 138:	cmp	r0, #0
 13c:	beq	14c <cria_elem+0x28>
 140:	mov	r3, #0
 144:	str	r4, [r0]
 148:	str	r3, [r0, #4]
 14c:	ldr	r4, [sp]
 150:	add	sp, sp, #4
 154:	pop	{pc}		; (ldr pc, [sp], #4)

00000158 <grafo_novo>:
 158:	strd	r4, [sp, #-16]!
 15c:	subs	r5, r0, #0
 160:	str	r6, [sp, #8]
 164:	movle	r6, #0
 168:	str	lr, [sp, #12]
 16c:	ble	1b0 <grafo_novo+0x58>
 170:	mov	r0, #8
 174:	lsl	r4, r5, #3
 178:	bl	0 <malloc>
 17c:	mov	r6, r0
 180:	mov	r0, r4
 184:	str	r5, [r6]
 188:	bl	0 <malloc>
 18c:	mov	r3, r0
 190:	mov	r2, #0
 194:	str	r0, [r6, #4]
 198:	add	r1, r0, r4
 19c:	add	r3, r3, #8
 1a0:	str	r2, [r3, #-8]
 1a4:	str	r2, [r3, #-4]
 1a8:	cmp	r3, r1
 1ac:	bne	19c <grafo_novo+0x44>
 1b0:	mov	r0, r6
 1b4:	ldrd	r4, [sp]
 1b8:	ldr	r6, [sp, #8]
 1bc:	add	sp, sp, #12
 1c0:	pop	{pc}		; (ldr pc, [sp], #4)

000001c4 <grafo_apaga>:
 1c4:	strd	r4, [sp, #-16]!
 1c8:	str	r6, [sp, #8]
 1cc:	subs	r6, r0, #0
 1d0:	str	lr, [sp, #12]
 1d4:	beq	238 <grafo_apaga+0x74>
 1d8:	ldrd	r2, [r6]
 1dc:	cmp	r2, #0
 1e0:	ble	218 <grafo_apaga+0x54>
 1e4:	mov	r5, #0
 1e8:	add	r1, r3, r5, lsl #3
 1ec:	ldr	r0, [r1, #4]
 1f0:	cmp	r0, #0
 1f4:	beq	20c <grafo_apaga+0x48>
 1f8:	ldr	r4, [r0, #4]
 1fc:	bl	0 <free>
 200:	subs	r0, r4, #0
 204:	bne	1f8 <grafo_apaga+0x34>
 208:	ldrd	r2, [r6]
 20c:	add	r5, r5, #1
 210:	cmp	r2, r5
 214:	bgt	1e8 <grafo_apaga+0x24>
 218:	mov	r0, r3
 21c:	bl	0 <free>
 220:	mov	r0, r6
 224:	ldrd	r4, [sp]
 228:	ldr	r6, [sp, #8]
 22c:	ldr	lr, [sp, #12]
 230:	add	sp, sp, #16
 234:	b	0 <free>
 238:	ldrd	r4, [sp]
 23c:	ldr	r6, [sp, #8]
 240:	add	sp, sp, #12
 244:	pop	{pc}		; (ldr pc, [sp], #4)

00000248 <grafo_aresta>:
 248:	cmp	r0, #0
 24c:	beq	29c <grafo_aresta+0x54>
 250:	ldr	r3, [r0]
 254:	cmp	r3, r1
 258:	blt	29c <grafo_aresta+0x54>
 25c:	cmp	r3, r2
 260:	blt	2a4 <grafo_aresta+0x5c>
 264:	ldr	r3, [r0, #4]
 268:	add	r1, r3, r1, lsl #3
 26c:	ldr	r0, [r1, #4]
 270:	cmp	r0, #0
 274:	bne	288 <grafo_aresta+0x40>
 278:	b	298 <grafo_aresta+0x50>
 27c:	ldr	r0, [r0, #4]
 280:	cmp	r0, #0
 284:	beq	2ac <grafo_aresta+0x64>
 288:	ldr	r3, [r0]
 28c:	cmp	r2, r3
 290:	bne	27c <grafo_aresta+0x34>
 294:	mov	r0, #1
 298:	bx	lr
 29c:	mvn	r0, #0
 2a0:	bx	lr
 2a4:	mov	r0, #0
 2a8:	bx	lr
 2ac:	bx	lr

000002b0 <grafo_adiciona>:
 2b0:	cmp	r0, #0
 2b4:	beq	2c8 <grafo_adiciona+0x18>
 2b8:	ldr	r3, [r0]
 2bc:	cmp	r3, r2
 2c0:	cmpge	r3, r1
 2c4:	bge	2d0 <grafo_adiciona+0x20>
 2c8:	mvn	r0, #0
 2cc:	bx	lr
 2d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
 2d4:	strd	r6, [sp, #8]
 2d8:	ldr	r7, [r0, #4]
 2dc:	str	r8, [sp, #16]
 2e0:	str	lr, [sp, #20]
 2e4:	add	r5, r7, r1, lsl #3
 2e8:	ldr	r6, [r5, #4]
 2ec:	cmp	r6, #0
 2f0:	beq	320 <grafo_adiciona+0x70>
 2f4:	ldr	r1, [r6]
 2f8:	cmp	r1, r2
 2fc:	beq	364 <grafo_adiciona+0xb4>
 300:	mov	r3, r6
 304:	b	314 <grafo_adiciona+0x64>
 308:	ldr	r1, [r3]
 30c:	cmp	r2, r1
 310:	beq	364 <grafo_adiciona+0xb4>
 314:	ldr	r3, [r3, #4]
 318:	cmp	r3, #0
 31c:	bne	308 <grafo_adiciona+0x58>
 320:	mov	r0, #8
 324:	mov	r4, r2
 328:	bl	0 <malloc>
 32c:	subs	r3, r0, #0
 330:	beq	36c <grafo_adiciona+0xbc>
 334:	ldr	r2, [r7]
 338:	mov	r0, #1
 33c:	str	r4, [r3]
 340:	str	r3, [r5, #4]
 344:	str	r6, [r3, #4]
 348:	add	r2, r2, r0
 34c:	str	r2, [r7]
 350:	ldrd	r4, [sp]
 354:	ldrd	r6, [sp, #8]
 358:	ldr	r8, [sp, #16]
 35c:	add	sp, sp, #20
 360:	pop	{pc}		; (ldr pc, [sp], #4)
 364:	mov	r0, #0
 368:	b	350 <grafo_adiciona+0xa0>
 36c:	str	r3, [r5, #4]
 370:	str	r6, [r3, #4]
 374:	udf	#0

00000378 <grafo_remove>:
 378:	cmp	r0, #0
 37c:	beq	398 <grafo_remove+0x20>
 380:	ldr	ip, [r0]
 384:	cmp	r1, r2
 388:	movge	r3, r1
 38c:	movlt	r3, r2
 390:	cmp	ip, r3
 394:	bge	3a0 <grafo_remove+0x28>
 398:	mvn	r0, #0
 39c:	bx	lr
 3a0:	str	r4, [sp, #-8]!
 3a4:	ldr	r4, [r0, #4]
 3a8:	str	lr, [sp, #4]
 3ac:	add	r1, r4, r1, lsl #3
 3b0:	ldr	lr, [r1, #4]
 3b4:	cmp	lr, #0
 3b8:	moveq	r0, lr
 3bc:	beq	3f0 <grafo_remove+0x78>
 3c0:	ldm	lr, {r0, r3}
 3c4:	cmp	r0, r2
 3c8:	bne	3e4 <grafo_remove+0x6c>
 3cc:	b	41c <grafo_remove+0xa4>
 3d0:	ldm	r3, {r1, ip}
 3d4:	cmp	r1, r2
 3d8:	beq	3fc <grafo_remove+0x84>
 3dc:	mov	lr, r3
 3e0:	mov	r3, ip
 3e4:	cmp	r3, #0
 3e8:	bne	3d0 <grafo_remove+0x58>
 3ec:	mov	r0, r3
 3f0:	ldr	r4, [sp]
 3f4:	add	sp, sp, #4
 3f8:	pop	{pc}		; (ldr pc, [sp], #4)
 3fc:	ldr	r2, [r4]
 400:	mov	r0, r3
 404:	str	ip, [lr, #4]
 408:	sub	r3, r2, #1
 40c:	str	r3, [r4]
 410:	bl	0 <free>
 414:	mov	r0, #1
 418:	b	3f0 <grafo_remove+0x78>
 41c:	ldr	r2, [r4]
 420:	mov	r0, lr
 424:	str	r3, [r1, #4]
 428:	sub	r3, r2, #1
 42c:	str	r3, [r4]
 430:	bl	0 <free>
 434:	mov	r0, #1
 438:	b	3f0 <grafo_remove+0x78>

0000043c <v_sucessores>:
 43c:	subs	r2, r0, #0
 440:	beq	454 <v_sucessores+0x18>
 444:	ldr	r2, [r2]
 448:	cmp	r1, #0
 44c:	cmpge	r2, r1
 450:	bgt	45c <v_sucessores+0x20>
 454:	mov	r0, #0
 458:	bx	lr
 45c:	b	0 <v_sucessores.part.1>

00000460 <v_antecessores>:
 460:	subs	r2, r0, #0
 464:	beq	478 <v_antecessores+0x18>
 468:	ldr	r2, [r2]
 46c:	cmp	r1, #0
 470:	cmpge	r2, r1
 474:	bgt	480 <v_antecessores+0x20>
 478:	mov	r0, #0
 47c:	bx	lr
 480:	b	68 <v_antecessores.part.2>

00000484 <v_grau>:
 484:	strd	r4, [sp, #-16]!
 488:	subs	r5, r1, #0
 48c:	str	r6, [sp, #8]
 490:	str	lr, [sp, #12]
 494:	blt	520 <v_grau+0x9c>
 498:	cmp	r0, #0
 49c:	mov	r4, r0
 4a0:	moveq	r6, r0
 4a4:	beq	4d8 <v_grau+0x54>
 4a8:	ldr	r3, [r0]
 4ac:	cmp	r5, r3
 4b0:	bge	514 <v_grau+0x90>
 4b4:	bl	68 <v_antecessores.part.2>
 4b8:	ldr	r3, [r4]
 4bc:	mov	r6, r0
 4c0:	cmp	r5, r3
 4c4:	bge	528 <v_grau+0xa4>
 4c8:	mov	r0, r4
 4cc:	mov	r1, r5
 4d0:	bl	0 <v_sucessores.part.1>
 4d4:	mov	r4, r0
 4d8:	mov	r0, r6
 4dc:	bl	0 <vetor_tamanho>
 4e0:	mov	r5, r0
 4e4:	mov	r0, r4
 4e8:	bl	0 <vetor_tamanho>
 4ec:	add	r5, r5, r0
 4f0:	mov	r0, r6
 4f4:	bl	0 <vetor_apaga>
 4f8:	mov	r0, r4
 4fc:	bl	0 <vetor_apaga>
 500:	mov	r0, r5
 504:	ldrd	r4, [sp]
 508:	ldr	r6, [sp, #8]
 50c:	add	sp, sp, #12
 510:	pop	{pc}		; (ldr pc, [sp], #4)
 514:	mov	r6, #0
 518:	mov	r4, r6
 51c:	b	4d8 <v_grau+0x54>
 520:	mvn	r5, #0
 524:	b	500 <v_grau+0x7c>
 528:	mov	r4, #0
 52c:	b	4d8 <v_grau+0x54>

00000530 <v_celebridade>:
 530:	subs	r3, r0, #0
 534:	beq	5e0 <v_celebridade+0xb0>
 538:	ldr	r0, [r3, #4]
 53c:	ldr	ip, [r0, r1, lsl #3]
 540:	cmp	ip, #0
 544:	bne	5d0 <v_celebridade+0xa0>
 548:	str	r4, [sp, #-8]!
 54c:	ldr	r4, [r3]
 550:	str	lr, [sp, #4]
 554:	cmp	r4, #0
 558:	ble	5d8 <v_celebridade+0xa8>
 55c:	add	lr, r0, r4, lsl #3
 560:	ldr	r3, [r0, #4]
 564:	cmp	r3, #0
 568:	beq	594 <v_celebridade+0x64>
 56c:	ldr	r2, [r3]
 570:	cmp	r1, r2
 574:	bne	588 <v_celebridade+0x58>
 578:	b	5bc <v_celebridade+0x8c>
 57c:	ldr	r2, [r3]
 580:	cmp	r2, r1
 584:	beq	5bc <v_celebridade+0x8c>
 588:	ldr	r3, [r3, #4]
 58c:	cmp	r3, #0
 590:	bne	57c <v_celebridade+0x4c>
 594:	add	r0, r0, #8
 598:	cmp	lr, r0
 59c:	bne	560 <v_celebridade+0x30>
 5a0:	add	ip, ip, #1
 5a4:	sub	r0, r4, ip
 5a8:	ldr	r4, [sp]
 5ac:	add	sp, sp, #4
 5b0:	clz	r0, r0
 5b4:	lsr	r0, r0, #5
 5b8:	pop	{pc}		; (ldr pc, [sp], #4)
 5bc:	add	r0, r0, #8
 5c0:	add	ip, ip, #1
 5c4:	cmp	lr, r0
 5c8:	bne	560 <v_celebridade+0x30>
 5cc:	b	5a0 <v_celebridade+0x70>
 5d0:	mov	r0, #0
 5d4:	bx	lr
 5d8:	mov	ip, #1
 5dc:	b	5a4 <v_celebridade+0x74>
 5e0:	mvn	r0, #0
 5e4:	bx	lr
