
../compcert-repos/prog2/CMakeFiles/7.1.dir/Aula07_Arvores/arvores-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{r4, r5, fp, lr}
   4:	add	fp, sp, #8
   8:	sub	sp, sp, #240	; 0xf0
   c:	movw	r0, #0
  10:	str	r0, [fp, #-12]
  14:	movw	r0, #0
  18:	movt	r0, #0
  1c:	bl	0 <printf>
  20:	movw	lr, #0
  24:	movt	lr, #0
  28:	movw	r1, #0
  2c:	movt	r1, #0
  30:	sub	r2, fp, #52	; 0x34
  34:	str	r0, [sp, #72]	; 0x48
  38:	mov	r0, r2
  3c:	movw	r2, #40	; 0x28
  40:	str	lr, [sp, #68]	; 0x44
  44:	bl	0 <memcpy>
  48:	ldr	r0, [sp, #68]	; 0x44
  4c:	blx	r0
  50:	str	r0, [sp, #88]	; 0x58
  54:	movw	r0, #0
  58:	str	r0, [sp, #92]	; 0x5c
  5c:	ldr	r0, [sp, #92]	; 0x5c
  60:	cmp	r0, #10
  64:	bge	94 <main+0x94>
  68:	ldr	r0, [sp, #88]	; 0x58
  6c:	ldr	r1, [sp, #92]	; 0x5c
  70:	sub	r2, fp, #52	; 0x34
  74:	add	r1, r2, r1, lsl #2
  78:	ldr	r1, [r1]
  7c:	bl	0 <bst_insere>
  80:	str	r0, [sp, #64]	; 0x40
  84:	ldr	r0, [sp, #92]	; 0x5c
  88:	add	r0, r0, #1
  8c:	str	r0, [sp, #92]	; 0x5c
  90:	b	5c <main+0x5c>
  94:	ldr	r0, [sp, #88]	; 0x58
  98:	ldr	r0, [r0]
  9c:	bl	0 <bst_altura>
  a0:	movw	lr, #0
  a4:	movt	lr, #0
  a8:	str	r0, [sp, #60]	; 0x3c
  ac:	mov	r0, lr
  b0:	ldr	r1, [sp, #60]	; 0x3c
  b4:	bl	0 <printf>
  b8:	ldr	r1, [sp, #88]	; 0x58
  bc:	str	r0, [sp, #56]	; 0x38
  c0:	mov	r0, r1
  c4:	bl	0 <bst_imprime>
  c8:	movw	r0, #0
  cc:	movt	r0, #0
  d0:	bl	0 <printf>
  d4:	movw	r1, #0
  d8:	movt	r1, #0
  dc:	str	r0, [sp, #52]	; 0x34
  e0:	blx	r1
  e4:	str	r0, [sp, #84]	; 0x54
  e8:	movw	r0, #0
  ec:	movt	r0, #0
  f0:	movw	r1, #0
  f4:	movt	r1, #0
  f8:	bl	0 <fopen>
  fc:	str	r0, [sp, #80]	; 0x50
 100:	add	r0, sp, #96	; 0x60
 104:	ldr	r2, [sp, #80]	; 0x50
 108:	movw	r1, #100	; 0x64
 10c:	bl	0 <fgets>
 110:	movw	r1, #0
 114:	cmp	r0, r1
 118:	beq	1bc <main+0x1bc>
 11c:	add	r0, sp, #96	; 0x60
 120:	str	r0, [sp, #48]	; 0x30
 124:	movw	r1, #0
 128:	movt	r1, #0
 12c:	bl	0 <strtok>
 130:	add	r1, sp, #96	; 0x60
 134:	ldr	lr, [sp, #48]	; 0x30
 138:	str	r0, [sp, #44]	; 0x2c
 13c:	mov	r0, lr
 140:	ldr	r2, [sp, #44]	; 0x2c
 144:	str	r1, [sp, #40]	; 0x28
 148:	mov	r1, r2
 14c:	bl	0 <strcpy>
 150:	movw	r1, #0
 154:	str	r0, [sp, #36]	; 0x24
 158:	mov	r0, r1
 15c:	movw	r1, #0
 160:	movt	r1, #0
 164:	bl	0 <strtok>
 168:	add	r1, sp, #96	; 0x60
 16c:	ldr	r2, [sp, #40]	; 0x28
 170:	str	r0, [sp, #32]
 174:	mov	r0, r2
 178:	ldr	lr, [sp, #32]
 17c:	str	r1, [sp, #28]
 180:	mov	r1, lr
 184:	bl	0 <strcpy>
 188:	ldr	r1, [sp, #28]
 18c:	str	r0, [sp, #24]
 190:	mov	r0, r1
 194:	bl	0 <strlen>
 198:	sub	r0, r0, #1
 19c:	ldr	r1, [sp, #28]
 1a0:	add	r0, r1, r0
 1a4:	movw	r2, #0
 1a8:	strb	r2, [r0]
 1ac:	ldr	r0, [sp, #84]	; 0x54
 1b0:	bl	0 <avl_insere>
 1b4:	str	r0, [sp, #20]
 1b8:	b	100 <main+0x100>
 1bc:	ldr	r0, [sp, #80]	; 0x50
 1c0:	bl	0 <fclose>
 1c4:	ldr	lr, [sp, #84]	; 0x54
 1c8:	str	r0, [sp, #16]
 1cc:	mov	r0, lr
 1d0:	movw	r1, #0
 1d4:	movt	r1, #0
 1d8:	bl	0 <avl_pesquisa>
 1dc:	str	r0, [sp, #76]	; 0x4c
 1e0:	ldr	r0, [sp, #76]	; 0x4c
 1e4:	movw	r1, #0
 1e8:	cmp	r0, r1
 1ec:	beq	210 <main+0x210>
 1f0:	ldr	r0, [sp, #76]	; 0x4c
 1f4:	ldr	r1, [r0]
 1f8:	ldr	r0, [sp, #76]	; 0x4c
 1fc:	ldr	r2, [r0, #16]
 200:	movw	r0, #0
 204:	movt	r0, #0
 208:	bl	0 <printf>
 20c:	str	r0, [sp, #12]
 210:	ldr	r0, [sp, #84]	; 0x54
 214:	movw	r1, #0
 218:	movt	r1, #0
 21c:	bl	0 <avl_pesquisa>
 220:	str	r0, [sp, #76]	; 0x4c
 224:	ldr	r0, [sp, #76]	; 0x4c
 228:	movw	r1, #0
 22c:	cmp	r0, r1
 230:	beq	254 <main+0x254>
 234:	ldr	r0, [sp, #76]	; 0x4c
 238:	ldr	r1, [r0]
 23c:	ldr	r0, [sp, #76]	; 0x4c
 240:	ldr	r2, [r0, #16]
 244:	movw	r0, #0
 248:	movt	r0, #0
 24c:	bl	0 <printf>
 250:	str	r0, [sp, #8]
 254:	ldr	r0, [sp, #84]	; 0x54
 258:	movw	r1, #0
 25c:	movt	r1, #0
 260:	bl	0 <avl_pesquisa>
 264:	str	r0, [sp, #76]	; 0x4c
 268:	ldr	r0, [sp, #76]	; 0x4c
 26c:	movw	r1, #0
 270:	cmp	r0, r1
 274:	beq	298 <main+0x298>
 278:	ldr	r0, [sp, #76]	; 0x4c
 27c:	ldr	r1, [r0]
 280:	ldr	r0, [sp, #76]	; 0x4c
 284:	ldr	r2, [r0, #16]
 288:	movw	r0, #0
 28c:	movt	r0, #0
 290:	bl	0 <printf>
 294:	str	r0, [sp, #4]
 298:	movw	r0, #0
 29c:	sub	sp, fp, #8
 2a0:	pop	{r4, r5, fp, pc}
