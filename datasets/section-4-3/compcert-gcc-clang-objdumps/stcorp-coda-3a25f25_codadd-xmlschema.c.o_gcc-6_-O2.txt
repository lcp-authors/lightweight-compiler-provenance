
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-xmlschema.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_attributes>:
   0:	mov	r3, r1
   4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8:	sub	sp, sp, #28
   c:	mov	r1, sp
  10:	mov	r5, r0
  14:	mov	r0, r3
  18:	bl	0 <coda_type_get_attributes>
  1c:	add	r1, sp, #4
  20:	ldr	r0, [sp]
  24:	bl	0 <coda_type_get_num_record_fields>
  28:	ldr	r3, [sp, #4]
  2c:	cmp	r3, #0
  30:	ble	110 <print_attributes+0x110>
  34:	ldr	r6, [pc, #288]	; 15c <print_attributes+0x15c>
  38:	ldr	fp, [pc, #288]	; 160 <print_attributes+0x160>
  3c:	ldr	sl, [pc, #288]	; 164 <print_attributes+0x164>
  40:	ldr	r9, [pc, #288]	; 168 <print_attributes+0x168>
  44:	ldr	r8, [pc, #288]	; 16c <print_attributes+0x16c>
  48:	ldr	r7, [pc, #288]	; 170 <print_attributes+0x170>
  4c:	mov	r4, #0
  50:	add	r2, sp, #16
  54:	mov	r1, r4
  58:	ldr	r0, [sp]
  5c:	bl	0 <coda_type_get_record_field_real_name>
  60:	add	r2, sp, #20
  64:	mov	r1, r4
  68:	ldr	r0, [sp]
  6c:	bl	0 <coda_type_get_record_field_available_status>
  70:	add	r2, sp, #12
  74:	mov	r1, r4
  78:	ldr	r0, [sp]
  7c:	bl	0 <coda_type_get_record_field_type>
  80:	add	r1, sp, #8
  84:	ldr	r0, [sp, #12]
  88:	bl	0 <coda_type_get_class>
  8c:	mov	r1, r6
  90:	ldr	r2, [sp, #16]
  94:	mov	r0, r5
  98:	bl	0 <fprintf>
  9c:	ldr	r1, [sp, #20]
  a0:	cmp	r1, #1
  a4:	beq	148 <print_attributes+0x148>
  a8:	ldr	r3, [sp, #8]
  ac:	cmp	r3, #3
  b0:	beq	d8 <print_attributes+0xd8>
  b4:	cmp	r3, #4
  b8:	beq	130 <print_attributes+0x130>
  bc:	cmp	r3, #2
  c0:	beq	118 <print_attributes+0x118>
  c4:	ldr	r3, [pc, #168]	; 174 <print_attributes+0x174>
  c8:	mov	r2, #82	; 0x52
  cc:	ldr	r1, [pc, #164]	; 178 <print_attributes+0x178>
  d0:	ldr	r0, [pc, #164]	; 17c <print_attributes+0x17c>
  d4:	bl	0 <__assert_fail>
  d8:	mov	r3, r5
  dc:	mov	r2, #16
  e0:	mov	r1, #1
  e4:	mov	r0, sl
  e8:	bl	0 <fwrite>
  ec:	mov	r3, r5
  f0:	mov	r2, #2
  f4:	mov	r1, #1
  f8:	mov	r0, r7
  fc:	bl	0 <fwrite>
 100:	ldr	r3, [sp, #4]
 104:	add	r4, r4, #1
 108:	cmp	r3, r4
 10c:	bgt	50 <print_attributes+0x50>
 110:	add	sp, sp, #28
 114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 118:	mov	r3, r5
 11c:	mov	r2, #18
 120:	mov	r1, #1
 124:	mov	r0, r8
 128:	bl	0 <fwrite>
 12c:	b	ec <print_attributes+0xec>
 130:	mov	r3, r5
 134:	mov	r2, #17
 138:	mov	r1, #1
 13c:	mov	r0, r9
 140:	bl	0 <fwrite>
 144:	b	ec <print_attributes+0xec>
 148:	mov	r3, r5
 14c:	mov	r2, #15
 150:	mov	r0, fp
 154:	bl	0 <fwrite>
 158:	b	a8 <print_attributes+0xa8>
 15c:	.word	0x00000000
 160:	.word	0x00000018
 164:	.word	0x0000003c
 168:	.word	0x00000050
 16c:	.word	0x00000028
 170:	.word	0x000000bc
 174:	.word	0x00000000
 178:	.word	0x00000064
 17c:	.word	0x000000b8

00000180 <print_xml_element>:
 180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 184:	mov	r6, r1
 188:	sub	sp, sp, #36	; 0x24
 18c:	mov	r4, r0
 190:	add	r1, sp, #4
 194:	mov	r0, r6
 198:	bl	0 <coda_type_get_class>
 19c:	ldr	r5, [sp, #4]
 1a0:	cmp	r5, #0
 1a4:	bne	454 <print_xml_element+0x2d4>
 1a8:	mov	r3, r4
 1ac:	mov	r2, #29
 1b0:	mov	r1, #1
 1b4:	ldr	r0, [pc, #692]	; 470 <print_xml_element+0x2f0>
 1b8:	bl	0 <fwrite>
 1bc:	add	r1, sp, #8
 1c0:	mov	r0, r6
 1c4:	bl	0 <coda_type_get_num_record_fields>
 1c8:	ldr	r3, [sp, #8]
 1cc:	cmp	r3, #0
 1d0:	ble	348 <print_xml_element+0x1c8>
 1d4:	ldr	r7, [pc, #664]	; 474 <print_xml_element+0x2f4>
 1d8:	ldr	fp, [pc, #664]	; 478 <print_xml_element+0x2f8>
 1dc:	ldr	sl, [pc, #664]	; 47c <print_xml_element+0x2fc>
 1e0:	ldr	r9, [pc, #664]	; 480 <print_xml_element+0x300>
 1e4:	add	r2, sp, #20
 1e8:	mov	r1, r5
 1ec:	mov	r0, r6
 1f0:	bl	0 <coda_type_get_record_field_real_name>
 1f4:	add	r2, sp, #16
 1f8:	mov	r1, r5
 1fc:	mov	r0, r6
 200:	bl	0 <coda_type_get_record_field_type>
 204:	add	r1, sp, #12
 208:	ldr	r0, [sp, #16]
 20c:	bl	0 <coda_type_get_class>
 210:	add	r1, sp, #24
 214:	ldr	r0, [sp, #16]
 218:	bl	0 <coda_type_get_format>
 21c:	mov	r1, r7
 220:	ldr	r2, [sp, #20]
 224:	mov	r0, r4
 228:	bl	0 <fprintf>
 22c:	ldr	r1, [sp, #12]
 230:	cmp	r1, #1
 234:	beq	268 <print_xml_element+0xe8>
 238:	cmp	r1, #6
 23c:	beq	3d8 <print_xml_element+0x258>
 240:	cmp	r1, #0
 244:	beq	394 <print_xml_element+0x214>
 248:	sub	r1, r1, #1
 24c:	cmp	r1, #3
 250:	ldrls	pc, [pc, r1, lsl #2]
 254:	b	3c4 <print_xml_element+0x244>
 258:	.word	0x00000468
 25c:	.word	0x0000038c
 260:	.word	0x00000384
 264:	.word	0x0000027c
 268:	ldr	r3, [sp, #24]
 26c:	cmp	r3, #2
 270:	beq	404 <print_xml_element+0x284>
 274:	cmp	r3, #2
 278:	beq	440 <print_xml_element+0x2c0>
 27c:	ldr	r8, [pc, #512]	; 484 <print_xml_element+0x304>
 280:	add	r1, sp, #28
 284:	ldr	r0, [sp, #16]
 288:	bl	0 <coda_type_has_attributes>
 28c:	ldr	r3, [sp, #28]
 290:	cmp	r3, #0
 294:	beq	3b0 <print_xml_element+0x230>
 298:	mov	r1, r4
 29c:	mov	r0, #62	; 0x3e
 2a0:	bl	0 <fputc>
 2a4:	mov	r3, r4
 2a8:	mov	r2, #16
 2ac:	mov	r1, #1
 2b0:	mov	r0, sl
 2b4:	bl	0 <fwrite>
 2b8:	mov	r3, r4
 2bc:	mov	r2, #18
 2c0:	mov	r1, #1
 2c4:	mov	r0, r9
 2c8:	bl	0 <fwrite>
 2cc:	mov	r2, r8
 2d0:	ldr	r1, [pc, #432]	; 488 <print_xml_element+0x308>
 2d4:	mov	r0, r4
 2d8:	bl	0 <fprintf>
 2dc:	ldr	r1, [sp, #16]
 2e0:	mov	r0, r4
 2e4:	bl	0 <print_attributes>
 2e8:	mov	r3, r4
 2ec:	mov	r2, #15
 2f0:	mov	r1, #1
 2f4:	ldr	r0, [pc, #400]	; 48c <print_xml_element+0x30c>
 2f8:	bl	0 <fwrite>
 2fc:	mov	r3, r4
 300:	mov	r2, #19
 304:	mov	r1, #1
 308:	ldr	r0, [pc, #384]	; 490 <print_xml_element+0x310>
 30c:	bl	0 <fwrite>
 310:	mov	r3, r4
 314:	mov	r2, #17
 318:	mov	r1, #1
 31c:	ldr	r0, [pc, #368]	; 494 <print_xml_element+0x314>
 320:	bl	0 <fwrite>
 324:	mov	r3, r4
 328:	mov	r2, #13
 32c:	mov	r1, #1
 330:	ldr	r0, [pc, #352]	; 498 <print_xml_element+0x318>
 334:	bl	0 <fwrite>
 338:	ldr	r3, [sp, #8]
 33c:	add	r5, r5, #1
 340:	cmp	r3, r5
 344:	bgt	1e4 <print_xml_element+0x64>
 348:	mov	r3, r4
 34c:	mov	r2, #14
 350:	mov	r1, #1
 354:	ldr	r0, [pc, #320]	; 49c <print_xml_element+0x31c>
 358:	bl	0 <fwrite>
 35c:	mov	r1, r6
 360:	mov	r0, r4
 364:	bl	0 <print_attributes>
 368:	mov	r3, r4
 36c:	mov	r2, #17
 370:	mov	r1, #1
 374:	ldr	r0, [pc, #280]	; 494 <print_xml_element+0x314>
 378:	bl	0 <fwrite>
 37c:	add	sp, sp, #36	; 0x24
 380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 384:	ldr	r8, [pc, #276]	; 4a0 <print_xml_element+0x320>
 388:	b	280 <print_xml_element+0x100>
 38c:	ldr	r8, [pc, #272]	; 4a4 <print_xml_element+0x324>
 390:	b	280 <print_xml_element+0x100>
 394:	mov	r1, r4
 398:	mov	r0, #62	; 0x3e
 39c:	bl	0 <fputc>
 3a0:	ldr	r1, [sp, #16]
 3a4:	mov	r0, r4
 3a8:	bl	180 <print_xml_element>
 3ac:	b	324 <print_xml_element+0x1a4>
 3b0:	mov	r2, r8
 3b4:	mov	r1, fp
 3b8:	mov	r0, r4
 3bc:	bl	0 <fprintf>
 3c0:	b	324 <print_xml_element+0x1a4>
 3c4:	ldr	r3, [pc, #220]	; 4a8 <print_xml_element+0x328>
 3c8:	mov	r2, #151	; 0x97
 3cc:	ldr	r1, [pc, #216]	; 4ac <print_xml_element+0x32c>
 3d0:	ldr	r0, [pc, #216]	; 4b0 <print_xml_element+0x330>
 3d4:	bl	0 <__assert_fail>
 3d8:	add	r1, sp, #16
 3dc:	ldr	r0, [sp, #16]
 3e0:	bl	0 <coda_type_get_special_base_type>
 3e4:	add	r1, sp, #12
 3e8:	ldr	r0, [sp, #16]
 3ec:	bl	0 <coda_type_get_class>
 3f0:	add	r1, sp, #24
 3f4:	ldr	r0, [sp, #16]
 3f8:	bl	0 <coda_type_get_format>
 3fc:	ldr	r1, [sp, #12]
 400:	b	240 <print_xml_element+0xc0>
 404:	mov	r3, r4
 408:	mov	r2, #36	; 0x24
 40c:	ldr	r0, [pc, #160]	; 4b4 <print_xml_element+0x334>
 410:	bl	0 <fwrite>
 414:	add	r1, sp, #16
 418:	ldr	r0, [sp, #16]
 41c:	bl	0 <coda_type_get_array_base_type>
 420:	add	r1, sp, #12
 424:	ldr	r0, [sp, #16]
 428:	bl	0 <coda_type_get_class>
 42c:	add	r1, sp, #24
 430:	ldr	r0, [sp, #16]
 434:	bl	0 <coda_type_get_format>
 438:	ldr	r1, [sp, #12]
 43c:	b	238 <print_xml_element+0xb8>
 440:	ldr	r3, [pc, #96]	; 4a8 <print_xml_element+0x328>
 444:	mov	r2, #138	; 0x8a
 448:	ldr	r1, [pc, #92]	; 4ac <print_xml_element+0x32c>
 44c:	ldr	r0, [pc, #100]	; 4b8 <print_xml_element+0x338>
 450:	bl	0 <__assert_fail>
 454:	ldr	r3, [pc, #76]	; 4a8 <print_xml_element+0x328>
 458:	mov	r2, #96	; 0x60
 45c:	ldr	r1, [pc, #72]	; 4ac <print_xml_element+0x32c>
 460:	ldr	r0, [pc, #84]	; 4bc <print_xml_element+0x33c>
 464:	bl	0 <__assert_fail>
 468:	ldr	r3, [sp, #24]
 46c:	b	274 <print_xml_element+0xf4>
 470:	.word	0x000000f8
 474:	.word	0x0000013c
 478:	.word	0x00000200
 47c:	.word	0x00000198
 480:	.word	0x000001ac
 484:	.word	0x000000c0
 488:	.word	0x000001c0
 48c:	.word	0x000001dc
 490:	.word	0x000001ec
 494:	.word	0x00000128
 498:	.word	0x00000210
 49c:	.word	0x00000118
 4a0:	.word	0x000000d0
 4a4:	.word	0x000000c8
 4a8:	.word	0x00000014
 4ac:	.word	0x00000064
 4b0:	.word	0x000000b8
 4b4:	.word	0x00000154
 4b8:	.word	0x0000017c
 4bc:	.word	0x000000d8

000004c0 <generate_xmlschema>:
 4c0:	ldr	ip, [pc, #512]	; 6c8 <generate_xmlschema+0x208>
 4c4:	push	{r4, r5, r6, r7, r8, lr}
 4c8:	mov	r7, r0
 4cc:	mov	r0, r1
 4d0:	mov	r6, r2
 4d4:	mov	r5, r3
 4d8:	ldr	r4, [ip]
 4dc:	bl	0 <coda_data_dictionary_get_product_class>
 4e0:	cmp	r0, #0
 4e4:	beq	5e8 <generate_xmlschema+0x128>
 4e8:	mov	r1, r6
 4ec:	bl	0 <coda_product_class_get_product_type>
 4f0:	cmp	r0, #0
 4f4:	beq	698 <generate_xmlschema+0x1d8>
 4f8:	mov	r1, r5
 4fc:	bl	0 <coda_product_type_get_product_definition_by_version>
 500:	subs	r6, r0, #0
 504:	beq	684 <generate_xmlschema+0x1c4>
 508:	ldr	r3, [r6]
 50c:	cmp	r3, #2
 510:	bne	664 <generate_xmlschema+0x1a4>
 514:	ldr	r5, [r6, #28]
 518:	cmp	r5, #0
 51c:	beq	644 <generate_xmlschema+0x184>
 520:	cmp	r7, #0
 524:	beq	540 <generate_xmlschema+0x80>
 528:	ldr	r1, [pc, #412]	; 6cc <generate_xmlschema+0x20c>
 52c:	mov	r0, r7
 530:	bl	0 <fopen>
 534:	subs	r4, r0, #0
 538:	beq	6ac <generate_xmlschema+0x1ec>
 53c:	ldr	r5, [r6, #28]
 540:	ldr	r3, [r5, #8]
 544:	cmp	r3, #0
 548:	bne	630 <generate_xmlschema+0x170>
 54c:	ldr	r6, [r5, #48]	; 0x30
 550:	cmp	r6, #1
 554:	bne	61c <generate_xmlschema+0x15c>
 558:	mov	r3, r4
 55c:	mov	r2, #39	; 0x27
 560:	mov	r1, r6
 564:	ldr	r0, [pc, #356]	; 6d0 <generate_xmlschema+0x210>
 568:	bl	0 <fwrite>
 56c:	mov	r3, r4
 570:	mov	r2, #56	; 0x38
 574:	mov	r1, r6
 578:	ldr	r0, [pc, #340]	; 6d4 <generate_xmlschema+0x214>
 57c:	bl	0 <fwrite>
 580:	ldr	r3, [r5, #52]	; 0x34
 584:	ldr	r1, [pc, #332]	; 6d8 <generate_xmlschema+0x218>
 588:	mov	r0, r4
 58c:	ldr	r3, [r3]
 590:	ldr	r2, [r3, #4]
 594:	bl	0 <fprintf>
 598:	ldr	r3, [r5, #52]	; 0x34
 59c:	mov	r0, r4
 5a0:	ldr	r3, [r3]
 5a4:	ldr	r1, [r3, #8]
 5a8:	bl	180 <print_xml_element>
 5ac:	mov	r3, r4
 5b0:	mov	r2, #14
 5b4:	mov	r1, r6
 5b8:	ldr	r0, [pc, #284]	; 6dc <generate_xmlschema+0x21c>
 5bc:	bl	0 <fwrite>
 5c0:	mov	r3, r4
 5c4:	mov	r1, r6
 5c8:	mov	r2, #13
 5cc:	ldr	r0, [pc, #268]	; 6e0 <generate_xmlschema+0x220>
 5d0:	bl	0 <fwrite>
 5d4:	cmp	r7, #0
 5d8:	popeq	{r4, r5, r6, r7, r8, pc}
 5dc:	mov	r0, r4
 5e0:	pop	{r4, r5, r6, r7, r8, lr}
 5e4:	b	0 <fclose>
 5e8:	ldr	r3, [pc, #244]	; 6e4 <generate_xmlschema+0x224>
 5ec:	ldr	r2, [pc, #244]	; 6e8 <generate_xmlschema+0x228>
 5f0:	bl	0 <__aeabi_read_tp>
 5f4:	ldr	r3, [pc, r3]
 5f8:	ldr	r0, [r0, r3]
 5fc:	ldr	r4, [r2]
 600:	bl	0 <coda_errno_to_string>
 604:	ldr	r1, [pc, #224]	; 6ec <generate_xmlschema+0x22c>
 608:	mov	r2, r0
 60c:	mov	r0, r4
 610:	bl	0 <fprintf>
 614:	mov	r0, #1
 618:	bl	0 <exit>
 61c:	ldr	r3, [pc, #204]	; 6f0 <generate_xmlschema+0x230>
 620:	mov	r2, #231	; 0xe7
 624:	ldr	r1, [pc, #200]	; 6f4 <generate_xmlschema+0x234>
 628:	ldr	r0, [pc, #200]	; 6f8 <generate_xmlschema+0x238>
 62c:	bl	0 <__assert_fail>
 630:	ldr	r3, [pc, #184]	; 6f0 <generate_xmlschema+0x230>
 634:	mov	r2, #229	; 0xe5
 638:	ldr	r1, [pc, #180]	; 6f4 <generate_xmlschema+0x234>
 63c:	ldr	r0, [pc, #184]	; 6fc <generate_xmlschema+0x23c>
 640:	bl	0 <__assert_fail>
 644:	ldr	r3, [pc, #156]	; 6e8 <generate_xmlschema+0x228>
 648:	mov	r2, #49	; 0x31
 64c:	mov	r1, #1
 650:	ldr	r3, [r3]
 654:	ldr	r0, [pc, #164]	; 700 <generate_xmlschema+0x240>
 658:	bl	0 <fwrite>
 65c:	mov	r0, #1
 660:	bl	0 <exit>
 664:	ldr	r3, [pc, #124]	; 6e8 <generate_xmlschema+0x228>
 668:	mov	r2, #36	; 0x24
 66c:	mov	r1, #1
 670:	ldr	r3, [r3]
 674:	ldr	r0, [pc, #136]	; 704 <generate_xmlschema+0x244>
 678:	bl	0 <fwrite>
 67c:	mov	r0, #1
 680:	bl	0 <exit>
 684:	ldr	r3, [pc, #124]	; 708 <generate_xmlschema+0x248>
 688:	ldr	r2, [pc, #88]	; 6e8 <generate_xmlschema+0x228>
 68c:	bl	0 <__aeabi_read_tp>
 690:	ldr	r3, [pc, r3]
 694:	b	5f8 <generate_xmlschema+0x138>
 698:	ldr	r3, [pc, #108]	; 70c <generate_xmlschema+0x24c>
 69c:	ldr	r2, [pc, #68]	; 6e8 <generate_xmlschema+0x228>
 6a0:	bl	0 <__aeabi_read_tp>
 6a4:	ldr	r3, [pc, r3]
 6a8:	b	5f8 <generate_xmlschema+0x138>
 6ac:	ldr	r3, [pc, #52]	; 6e8 <generate_xmlschema+0x228>
 6b0:	mov	r2, r7
 6b4:	ldr	r1, [pc, #84]	; 710 <generate_xmlschema+0x250>
 6b8:	ldr	r0, [r3]
 6bc:	bl	0 <fprintf>
 6c0:	mov	r0, #1
 6c4:	bl	0 <exit>
 6c8:	.word	0x00000000
 6cc:	.word	0x00000288
 6d0:	.word	0x00000314
 6d4:	.word	0x0000033c
 6d8:	.word	0x00000378
 6dc:	.word	0x00000390
 6e0:	.word	0x000003a0
 6e4:	.word	0x000000e8
 6e8:	.word	0x00000000
 6ec:	.word	0x00000220
 6f0:	.word	0x00000028
 6f4:	.word	0x00000064
 6f8:	.word	0x000002f8
 6fc:	.word	0x000002b8
 700:	.word	0x00000254
 704:	.word	0x0000022c
 708:	.word	0x00000070
 70c:	.word	0x00000060
 710:	.word	0x0000028c
