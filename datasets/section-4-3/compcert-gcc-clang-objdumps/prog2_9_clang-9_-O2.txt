
../compcert-repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

00010b04 <.init>:
   10b04:	push	{r3, lr}
   10b08:	bl	10c38 <_start@@Base+0x3c>
   10b0c:	pop	{r3, pc}

Disassembly of section .plt:

00010b10 <calloc@plt-0x14>:
   10b10:	push	{lr}		; (str lr, [sp, #-4]!)
   10b14:	ldr	lr, [pc, #4]	; 10b20 <calloc@plt-0x4>
   10b18:	add	lr, pc, lr
   10b1c:	ldr	pc, [lr, #8]!
   10b20:	andeq	r2, r1, r0, ror #9

00010b24 <calloc@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #73728	; 0x12000
   10b2c:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b30 <strcmp@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #73728	; 0x12000
   10b38:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b3c <printf@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #73728	; 0x12000
   10b44:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b48 <__isoc99_fscanf@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #73728	; 0x12000
   10b50:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b54 <fopen@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #73728	; 0x12000
   10b5c:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b60 <fflush@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #73728	; 0x12000
   10b68:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b6c <free@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #73728	; 0x12000
   10b74:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b78 <fgets@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #73728	; 0x12000
   10b80:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b84 <strdup@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #73728	; 0x12000
   10b8c:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b90 <puts@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #73728	; 0x12000
   10b98:	ldr	pc, [ip, #1176]!	; 0x498

00010b9c <malloc@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #73728	; 0x12000
   10ba4:	ldr	pc, [ip, #1168]!	; 0x490

00010ba8 <__libc_start_main@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #73728	; 0x12000
   10bb0:	ldr	pc, [ip, #1160]!	; 0x488

00010bb4 <__gmon_start__@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #73728	; 0x12000
   10bbc:	ldr	pc, [ip, #1152]!	; 0x480

00010bc0 <feof@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #73728	; 0x12000
   10bc8:	ldr	pc, [ip, #1144]!	; 0x478

00010bcc <strlen@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #73728	; 0x12000
   10bd4:	ldr	pc, [ip, #1136]!	; 0x470

00010bd8 <putchar@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #73728	; 0x12000
   10be0:	ldr	pc, [ip, #1128]!	; 0x468

00010be4 <fclose@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #73728	; 0x12000
   10bec:	ldr	pc, [ip, #1120]!	; 0x460

00010bf0 <abort@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #73728	; 0x12000
   10bf8:	ldr	pc, [ip, #1112]!	; 0x458

Disassembly of section .text:

00010bfc <_start@@Base>:
   10bfc:	mov	fp, #0
   10c00:	mov	lr, #0
   10c04:	pop	{r1}		; (ldr r1, [sp], #4)
   10c08:	mov	r2, sp
   10c0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10c10:	push	{r0}		; (str r0, [sp, #-4]!)
   10c14:	ldr	ip, [pc, #16]	; 10c2c <_start@@Base+0x30>
   10c18:	push	{ip}		; (str ip, [sp, #-4]!)
   10c1c:	ldr	r0, [pc, #12]	; 10c30 <_start@@Base+0x34>
   10c20:	ldr	r3, [pc, #12]	; 10c34 <_start@@Base+0x38>
   10c24:	bl	10ba8 <__libc_start_main@plt>
   10c28:	bl	10bf0 <abort@plt>
   10c2c:	strdeq	r2, [r1], -r4
   10c30:	andeq	r1, r1, r4, ror #3
   10c34:	muleq	r1, r4, r0
   10c38:	ldr	r3, [pc, #20]	; 10c54 <_start@@Base+0x58>
   10c3c:	ldr	r2, [pc, #20]	; 10c58 <_start@@Base+0x5c>
   10c40:	add	r3, pc, r3
   10c44:	ldr	r2, [r3, r2]
   10c48:	cmp	r2, #0
   10c4c:	bxeq	lr
   10c50:	b	10bb4 <__gmon_start__@plt>
   10c54:			; <UNDEFINED> instruction: 0x000123b8
   10c58:	andeq	r0, r0, r4, asr r0
   10c5c:	ldr	r0, [pc, #24]	; 10c7c <_start@@Base+0x80>
   10c60:	ldr	r3, [pc, #24]	; 10c80 <_start@@Base+0x84>
   10c64:	cmp	r3, r0
   10c68:	bxeq	lr
   10c6c:	ldr	r3, [pc, #16]	; 10c84 <_start@@Base+0x88>
   10c70:	cmp	r3, #0
   10c74:	bxeq	lr
   10c78:	bx	r3
   10c7c:	andeq	r3, r2, r0, rrx
   10c80:	andeq	r3, r2, r0, rrx
   10c84:	andeq	r0, r0, r0
   10c88:	ldr	r0, [pc, #36]	; 10cb4 <_start@@Base+0xb8>
   10c8c:	ldr	r1, [pc, #36]	; 10cb8 <_start@@Base+0xbc>
   10c90:	sub	r1, r1, r0
   10c94:	asr	r1, r1, #2
   10c98:	add	r1, r1, r1, lsr #31
   10c9c:	asrs	r1, r1, #1
   10ca0:	bxeq	lr
   10ca4:	ldr	r3, [pc, #16]	; 10cbc <_start@@Base+0xc0>
   10ca8:	cmp	r3, #0
   10cac:	bxeq	lr
   10cb0:	bx	r3
   10cb4:	andeq	r3, r2, r0, rrx
   10cb8:	andeq	r3, r2, r0, rrx
   10cbc:	andeq	r0, r0, r0
   10cc0:	push	{r4, lr}
   10cc4:	ldr	r4, [pc, #24]	; 10ce4 <_start@@Base+0xe8>
   10cc8:	ldrb	r3, [r4]
   10ccc:	cmp	r3, #0
   10cd0:	popne	{r4, pc}
   10cd4:	bl	10c5c <_start@@Base+0x60>
   10cd8:	mov	r3, #1
   10cdc:	strb	r3, [r4]
   10ce0:	pop	{r4, pc}
   10ce4:	andeq	r3, r2, r4, rrx
   10ce8:	b	10c88 <_start@@Base+0x8c>

00010cec <fp_insere@@Base>:
   10cec:	push	{r4, r5, r6, sl, fp, lr}
   10cf0:	add	fp, sp, #16
   10cf4:	cmp	r0, #0
   10cf8:	beq	10d58 <fp_insere@@Base+0x6c>
   10cfc:	ldm	r0, {r3, r6}
   10d00:	mov	r4, r0
   10d04:	mov	r0, #0
   10d08:	cmp	r3, r6
   10d0c:	beq	10da0 <fp_insere@@Base+0xb4>
   10d10:	mov	r0, r2
   10d14:	bl	11e58 <elemento_cria@@Base>
   10d18:	mov	r5, r0
   10d1c:	ldr	r0, [r4]
   10d20:	mov	r6, #0
   10d24:	cmp	r0, #1
   10d28:	blt	10d64 <fp_insere@@Base+0x78>
   10d2c:	ldr	r0, [r4, #8]
   10d30:	mov	r1, r5
   10d34:	ldr	r0, [r0, r6, lsl #2]
   10d38:	bl	11ea0 <maior_que@@Base>
   10d3c:	cmp	r0, #0
   10d40:	beq	10d60 <fp_insere@@Base+0x74>
   10d44:	ldr	r0, [r4]
   10d48:	add	r6, r6, #1
   10d4c:	cmp	r6, r0
   10d50:	blt	10d2c <fp_insere@@Base+0x40>
   10d54:	b	10d64 <fp_insere@@Base+0x78>
   10d58:	mvn	r0, #0
   10d5c:	pop	{r4, r5, r6, sl, fp, pc}
   10d60:	ldr	r0, [r4]
   10d64:	ldr	r1, [r4, #8]
   10d68:	cmp	r0, r6
   10d6c:	blt	10d90 <fp_insere@@Base+0xa4>
   10d70:	mov	r2, r0
   10d74:	ldr	r3, [r1, r2, lsl #2]!
   10d78:	cmp	r2, r6
   10d7c:	str	r3, [r1, #4]
   10d80:	sub	r3, r2, #1
   10d84:	ldr	r1, [r4, #8]
   10d88:	mov	r2, r3
   10d8c:	bgt	10d74 <fp_insere@@Base+0x88>
   10d90:	add	r0, r0, #1
   10d94:	str	r5, [r1, r6, lsl #2]
   10d98:	str	r0, [r4]
   10d9c:	mov	r0, #1
   10da0:	pop	{r4, r5, r6, sl, fp, pc}

00010da4 <fp_remove@@Base>:
   10da4:	push	{r4, r5, fp, lr}
   10da8:	add	fp, sp, #8
   10dac:	mov	r1, #0
   10db0:	cmp	r0, #0
   10db4:	beq	10e50 <fp_remove@@Base+0xac>
   10db8:	ldr	r2, [r0]
   10dbc:	cmp	r2, #0
   10dc0:	beq	10e50 <fp_remove@@Base+0xac>
   10dc4:	ldr	r1, [r0, #8]
   10dc8:	cmp	r2, #1
   10dcc:	ldr	lr, [r1]
   10dd0:	blt	10e44 <fp_remove@@Base+0xa0>
   10dd4:	ldr	r3, [r1, #4]
   10dd8:	str	r3, [r1]
   10ddc:	beq	10e44 <fp_remove@@Base+0xa0>
   10de0:	sub	r3, r2, #1
   10de4:	mov	r1, #1
   10de8:	cmp	r2, #2
   10dec:	and	ip, r3, #1
   10df0:	beq	10e2c <fp_remove@@Base+0x88>
   10df4:	sub	r1, r3, ip
   10df8:	mov	r3, #0
   10dfc:	ldr	r4, [r0, #8]
   10e00:	add	r4, r4, r3, lsl #2
   10e04:	ldr	r5, [r4, #8]
   10e08:	str	r5, [r4, #4]
   10e0c:	ldr	r4, [r0, #8]
   10e10:	add	r4, r4, r3, lsl #2
   10e14:	add	r3, r3, #2
   10e18:	cmp	r1, r3
   10e1c:	ldr	r5, [r4, #12]
   10e20:	str	r5, [r4, #8]
   10e24:	bne	10dfc <fp_remove@@Base+0x58>
   10e28:	add	r1, r3, #1
   10e2c:	cmp	ip, #0
   10e30:	beq	10e44 <fp_remove@@Base+0xa0>
   10e34:	ldr	r3, [r0, #8]
   10e38:	add	r5, r3, r1, lsl #2
   10e3c:	ldr	r5, [r5, #4]
   10e40:	str	r5, [r3, r1, lsl #2]
   10e44:	sub	r1, r2, #1
   10e48:	str	r1, [r0]
   10e4c:	ldr	r1, [lr, #4]
   10e50:	mov	r0, r1
   10e54:	pop	{r4, r5, fp, pc}

00010e58 <fp_carrega@@Base>:
   10e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e5c:	add	fp, sp, #28
   10e60:	sub	sp, sp, #268	; 0x10c
   10e64:	mov	r2, r1
   10e68:	movw	r1, #9152	; 0x23c0
   10e6c:	mov	r4, r0
   10e70:	movt	r1, #1
   10e74:	mov	r0, r2
   10e78:	bl	10b54 <fopen@plt>
   10e7c:	cmp	r0, #0
   10e80:	beq	10fa0 <fp_carrega@@Base+0x148>
   10e84:	mov	r5, r0
   10e88:	bl	10bc0 <feof@plt>
   10e8c:	cmp	r0, #0
   10e90:	bne	10f90 <fp_carrega@@Base+0x138>
   10e94:	movw	r7, #8452	; 0x2104
   10e98:	add	r9, sp, #4
   10e9c:	add	r6, sp, #8
   10ea0:	mov	sl, #0
   10ea4:	movt	r7, #1
   10ea8:	b	10ed0 <fp_carrega@@Base+0x78>
   10eac:	str	r7, [r1, r8, lsl #2]
   10eb0:	movw	r7, #8452	; 0x2104
   10eb4:	add	r0, r0, #1
   10eb8:	movt	r7, #1
   10ebc:	str	r0, [r4]
   10ec0:	mov	r0, r5
   10ec4:	bl	10bc0 <feof@plt>
   10ec8:	cmp	r0, #0
   10ecc:	bne	10f90 <fp_carrega@@Base+0x138>
   10ed0:	mov	r0, r5
   10ed4:	mov	r1, r7
   10ed8:	mov	r2, r9
   10edc:	bl	10b48 <__isoc99_fscanf@plt>
   10ee0:	mov	r0, r6
   10ee4:	mov	r1, #256	; 0x100
   10ee8:	mov	r2, r5
   10eec:	bl	10b78 <fgets@plt>
   10ef0:	mov	r0, r6
   10ef4:	bl	10bcc <strlen@plt>
   10ef8:	add	r0, r0, r6
   10efc:	cmp	r4, #0
   10f00:	strb	sl, [r0, #-1]
   10f04:	ldmne	r4, {r0, r1}
   10f08:	cmpne	r0, r1
   10f0c:	beq	10ec0 <fp_carrega@@Base+0x68>
   10f10:	ldr	r0, [sp, #4]
   10f14:	mov	r1, r6
   10f18:	bl	11e58 <elemento_cria@@Base>
   10f1c:	mov	r7, r0
   10f20:	ldr	r0, [r4]
   10f24:	mov	r8, #0
   10f28:	cmp	r0, #1
   10f2c:	blt	10f60 <fp_carrega@@Base+0x108>
   10f30:	ldr	r0, [r4, #8]
   10f34:	mov	r1, r7
   10f38:	ldr	r0, [r0, r8, lsl #2]
   10f3c:	bl	11ea0 <maior_que@@Base>
   10f40:	cmp	r0, #0
   10f44:	beq	10f5c <fp_carrega@@Base+0x104>
   10f48:	ldr	r0, [r4]
   10f4c:	add	r8, r8, #1
   10f50:	cmp	r8, r0
   10f54:	blt	10f30 <fp_carrega@@Base+0xd8>
   10f58:	b	10f60 <fp_carrega@@Base+0x108>
   10f5c:	ldr	r0, [r4]
   10f60:	ldr	r1, [r4, #8]
   10f64:	cmp	r0, r8
   10f68:	blt	10eac <fp_carrega@@Base+0x54>
   10f6c:	mov	r2, r0
   10f70:	ldr	r3, [r1, r2, lsl #2]!
   10f74:	cmp	r2, r8
   10f78:	str	r3, [r1, #4]
   10f7c:	sub	r3, r2, #1
   10f80:	ldr	r1, [r4, #8]
   10f84:	mov	r2, r3
   10f88:	bgt	10f70 <fp_carrega@@Base+0x118>
   10f8c:	b	10eac <fp_carrega@@Base+0x54>
   10f90:	mov	r0, r5
   10f94:	bl	10be4 <fclose@plt>
   10f98:	sub	sp, fp, #28
   10f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10fa0:	movw	r0, #9066	; 0x236a
   10fa4:	movt	r0, #1
   10fa8:	bl	10b90 <puts@plt>
   10fac:	sub	sp, fp, #28
   10fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010fb4 <heap_insere@@Base>:
   10fb4:	push	{r4, r5, r6, r7, fp, lr}
   10fb8:	add	fp, sp, #16
   10fbc:	mov	r4, r0
   10fc0:	mov	r7, r1
   10fc4:	ldr	r0, [r0]
   10fc8:	mov	r5, #0
   10fcc:	ldr	r1, [r4, #4]
   10fd0:	cmp	r0, r1
   10fd4:	beq	1106c <heap_insere@@Base+0xb8>
   10fd8:	mov	r0, r3
   10fdc:	mov	r1, r2
   10fe0:	bl	11e58 <elemento_cria@@Base>
   10fe4:	mov	r6, r0
   10fe8:	ldr	r0, [r4]
   10fec:	cmp	r0, #1
   10ff0:	blt	11028 <heap_insere@@Base+0x74>
   10ff4:	mov	r5, #0
   10ff8:	ldr	r0, [r4, #8]
   10ffc:	mov	r1, r6
   11000:	ldr	r0, [r0, r5, lsl #2]
   11004:	blx	r7
   11008:	cmp	r0, #1
   1100c:	beq	11034 <heap_insere@@Base+0x80>
   11010:	ldr	r0, [r4]
   11014:	add	r5, r5, #1
   11018:	cmp	r5, r0
   1101c:	blt	10ff8 <heap_insere@@Base+0x44>
   11020:	ldr	r0, [r4, #8]
   11024:	b	11040 <heap_insere@@Base+0x8c>
   11028:	ldr	r0, [r4, #8]
   1102c:	mov	r5, #0
   11030:	b	1105c <heap_insere@@Base+0xa8>
   11034:	ldr	r0, [r4, #8]
   11038:	cmp	r5, #0
   1103c:	beq	1105c <heap_insere@@Base+0xa8>
   11040:	mov	r1, r5
   11044:	ldr	r2, [r0, r1, lsl #2]!
   11048:	sub	r1, r1, #1
   1104c:	cmp	r1, #0
   11050:	str	r2, [r0, #4]
   11054:	ldr	r0, [r4, #8]
   11058:	bgt	11044 <heap_insere@@Base+0x90>
   1105c:	str	r6, [r0, r5, lsl #2]
   11060:	ldr	r0, [r4]
   11064:	add	r0, r0, #1
   11068:	str	r0, [r4]
   1106c:	mov	r0, r5
   11070:	pop	{r4, r5, r6, r7, fp, pc}

00011074 <heap_remove@@Base>:
   11074:	mov	r0, #0
   11078:	bx	lr

0001107c <heap_carrega@@Base>:
   1107c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11080:	add	fp, sp, #28
   11084:	sub	sp, sp, #268	; 0x10c
   11088:	mov	r4, r1
   1108c:	movw	r1, #9152	; 0x23c0
   11090:	mov	r5, r0
   11094:	mov	r0, r2
   11098:	movt	r1, #1
   1109c:	bl	10b54 <fopen@plt>
   110a0:	cmp	r0, #0
   110a4:	beq	111d0 <heap_carrega@@Base+0x154>
   110a8:	mov	r8, r0
   110ac:	bl	10bc0 <feof@plt>
   110b0:	cmp	r0, #0
   110b4:	bne	111c0 <heap_carrega@@Base+0x144>
   110b8:	movw	r9, #8452	; 0x2104
   110bc:	add	r6, sp, #4
   110c0:	add	sl, sp, #8
   110c4:	mov	r7, #0
   110c8:	movt	r9, #1
   110cc:	b	11108 <heap_carrega@@Base+0x8c>
   110d0:	ldr	r0, [r5, #8]
   110d4:	mov	r9, #0
   110d8:	str	r7, [r0, r9, lsl #2]
   110dc:	movw	r9, #8452	; 0x2104
   110e0:	add	r6, sp, #4
   110e4:	mov	r7, #0
   110e8:	ldr	r0, [r5]
   110ec:	movt	r9, #1
   110f0:	add	r0, r0, #1
   110f4:	str	r0, [r5]
   110f8:	mov	r0, r8
   110fc:	bl	10bc0 <feof@plt>
   11100:	cmp	r0, #0
   11104:	bne	111c0 <heap_carrega@@Base+0x144>
   11108:	mov	r0, r8
   1110c:	mov	r1, r9
   11110:	mov	r2, r6
   11114:	bl	10b48 <__isoc99_fscanf@plt>
   11118:	mov	r0, sl
   1111c:	mov	r1, #256	; 0x100
   11120:	mov	r2, r8
   11124:	bl	10b78 <fgets@plt>
   11128:	mov	r0, sl
   1112c:	bl	10bcc <strlen@plt>
   11130:	add	r0, r0, sl
   11134:	strb	r7, [r0, #-1]
   11138:	ldm	r5, {r0, r1}
   1113c:	cmp	r0, r1
   11140:	beq	110f8 <heap_carrega@@Base+0x7c>
   11144:	ldr	r0, [sp, #4]
   11148:	mov	r1, sl
   1114c:	bl	11e58 <elemento_cria@@Base>
   11150:	mov	r7, r0
   11154:	ldr	r0, [r5]
   11158:	cmp	r0, #1
   1115c:	blt	110d0 <heap_carrega@@Base+0x54>
   11160:	mov	r9, #0
   11164:	ldr	r0, [r5, #8]
   11168:	mov	r1, r7
   1116c:	ldr	r0, [r0, r9, lsl #2]
   11170:	blx	r4
   11174:	cmp	r0, #1
   11178:	beq	11194 <heap_carrega@@Base+0x118>
   1117c:	ldr	r0, [r5]
   11180:	add	r9, r9, #1
   11184:	cmp	r9, r0
   11188:	blt	11164 <heap_carrega@@Base+0xe8>
   1118c:	ldr	r0, [r5, #8]
   11190:	b	111a0 <heap_carrega@@Base+0x124>
   11194:	ldr	r0, [r5, #8]
   11198:	cmp	r9, #0
   1119c:	beq	110d4 <heap_carrega@@Base+0x58>
   111a0:	mov	r1, r9
   111a4:	ldr	r2, [r0, r1, lsl #2]!
   111a8:	sub	r1, r1, #1
   111ac:	cmp	r1, #0
   111b0:	str	r2, [r0, #4]
   111b4:	ldr	r0, [r5, #8]
   111b8:	bgt	111a4 <heap_carrega@@Base+0x128>
   111bc:	b	110d8 <heap_carrega@@Base+0x5c>
   111c0:	mov	r0, r8
   111c4:	bl	10be4 <fclose@plt>
   111c8:	sub	sp, fp, #28
   111cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111d0:	movw	r0, #9066	; 0x236a
   111d4:	movt	r0, #1
   111d8:	bl	10b90 <puts@plt>
   111dc:	sub	sp, fp, #28
   111e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000111e4 <main@@Base>:
   111e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111e8:	add	fp, sp, #28
   111ec:	sub	sp, sp, #268	; 0x10c
   111f0:	mov	r0, #42	; 0x2a
   111f4:	bl	11da0 <vetor_cria@@Base>
   111f8:	mov	r4, r0
   111fc:	movw	r0, #9099	; 0x238b
   11200:	movt	r0, #1
   11204:	bl	10b90 <puts@plt>
   11208:	movw	r1, #8456	; 0x2108
   1120c:	mov	r0, r4
   11210:	movt	r1, #1
   11214:	bl	10e58 <fp_carrega@@Base>
   11218:	movw	r8, #12392	; 0x3068
   1121c:	movw	r0, #8466	; 0x2112
   11220:	movt	r8, #2
   11224:	movt	r0, #1
   11228:	ldr	r1, [r8]
   1122c:	bl	10b3c <printf@plt>
   11230:	mov	r0, r4
   11234:	bl	11f74 <vetor_imprime@@Base>
   11238:	ldr	r0, [r4]
   1123c:	cmp	r0, #42	; 0x2a
   11240:	bne	11298 <main@@Base+0xb4>
   11244:	cmp	r4, #0
   11248:	beq	112b4 <main@@Base+0xd0>
   1124c:	ldr	r3, [r4, #8]
   11250:	mov	r1, #1
   11254:	mov	r2, #0
   11258:	ldm	r3, {r0, r7}
   1125c:	str	r7, [r3]
   11260:	cmp	r2, #40	; 0x28
   11264:	ldr	r3, [r4, #8]
   11268:	add	r3, r3, r2, lsl #2
   1126c:	ldr	r7, [r3, #8]
   11270:	str	r7, [r3, #4]
   11274:	beq	112a4 <main@@Base+0xc0>
   11278:	ldr	r7, [r4, #8]
   1127c:	add	r3, r1, #1
   11280:	add	r1, r1, #2
   11284:	add	r3, r7, r3, lsl #2
   11288:	add	r7, r7, r2, lsl #2
   1128c:	add	r2, r2, #2
   11290:	ldr	r7, [r7, #12]
   11294:	b	1125c <main@@Base+0x78>
   11298:	movw	r0, #9317	; 0x2465
   1129c:	movt	r0, #1
   112a0:	b	118e4 <main@@Base+0x700>
   112a4:	mov	r1, #41	; 0x29
   112a8:	str	r1, [r4]
   112ac:	ldr	r1, [r0, #4]
   112b0:	b	112b8 <main@@Base+0xd4>
   112b4:	mov	r1, #0
   112b8:	movw	r0, #8521	; 0x2149
   112bc:	movt	r0, #1
   112c0:	bl	10b30 <strcmp@plt>
   112c4:	cmp	r0, #0
   112c8:	beq	112d8 <main@@Base+0xf4>
   112cc:	movw	r0, #9249	; 0x2421
   112d0:	movt	r0, #1
   112d4:	b	118e4 <main@@Base+0x700>
   112d8:	mov	r1, #0
   112dc:	cmp	r4, #0
   112e0:	str	r1, [r8]
   112e4:	beq	113d4 <main@@Base+0x1f0>
   112e8:	ldr	r0, [r4]
   112ec:	cmp	r0, #0
   112f0:	beq	11364 <main@@Base+0x180>
   112f4:	cmp	r0, #1
   112f8:	blt	11358 <main@@Base+0x174>
   112fc:	and	r2, r0, #1
   11300:	mov	r1, #0
   11304:	beq	11340 <main@@Base+0x15c>
   11308:	sub	r3, r0, r2
   1130c:	mov	r1, #0
   11310:	mov	r7, #4
   11314:	ldr	r6, [r4, #8]
   11318:	ldr	r5, [r6, r7]!
   1131c:	str	r5, [r6, #-4]
   11320:	ldr	r6, [r4, #8]
   11324:	add	r5, r6, r1, lsl #2
   11328:	add	r1, r1, #2
   1132c:	cmp	r3, r1
   11330:	ldr	r5, [r5, #8]
   11334:	str	r5, [r6, r7]
   11338:	add	r7, r7, #8
   1133c:	bne	11314 <main@@Base+0x130>
   11340:	cmp	r2, #0
   11344:	beq	11358 <main@@Base+0x174>
   11348:	ldr	r2, [r4, #8]
   1134c:	add	r3, r2, r1, lsl #2
   11350:	ldr	r3, [r3, #4]
   11354:	str	r3, [r2, r1, lsl #2]
   11358:	sub	r0, r0, #1
   1135c:	str	r0, [r4]
   11360:	ldr	r1, [r8]
   11364:	movw	r0, #8539	; 0x215b
   11368:	movt	r0, #1
   1136c:	bl	10b3c <printf@plt>
   11370:	mov	r1, #0
   11374:	str	r1, [r8]
   11378:	ldm	r4, {r0, r2}
   1137c:	cmp	r0, r2
   11380:	beq	11458 <main@@Base+0x274>
   11384:	movw	r1, #8591	; 0x218f
   11388:	mov	r0, #99	; 0x63
   1138c:	movt	r1, #1
   11390:	bl	11e58 <elemento_cria@@Base>
   11394:	mov	r5, r0
   11398:	ldr	r0, [r4]
   1139c:	mov	r6, #0
   113a0:	cmp	r0, #1
   113a4:	blt	1141c <main@@Base+0x238>
   113a8:	ldr	r0, [r4, #8]
   113ac:	mov	r1, r5
   113b0:	ldr	r0, [r0, r6, lsl #2]
   113b4:	bl	11ea0 <maior_que@@Base>
   113b8:	cmp	r0, #0
   113bc:	beq	11418 <main@@Base+0x234>
   113c0:	ldr	r0, [r4]
   113c4:	add	r6, r6, #1
   113c8:	cmp	r6, r0
   113cc:	blt	113a8 <main@@Base+0x1c4>
   113d0:	b	1141c <main@@Base+0x238>
   113d4:	movw	r0, #8539	; 0x215b
   113d8:	mov	r1, #0
   113dc:	mov	r5, #0
   113e0:	movt	r0, #1
   113e4:	bl	10b3c <printf@plt>
   113e8:	movw	r0, #8605	; 0x219d
   113ec:	mov	r1, #0
   113f0:	str	r5, [r8]
   113f4:	movt	r0, #1
   113f8:	bl	10b3c <printf@plt>
   113fc:	movw	r0, #8676	; 0x21e4
   11400:	mov	r1, #0
   11404:	str	r5, [r8]
   11408:	movt	r0, #1
   1140c:	bl	10b3c <printf@plt>
   11410:	str	r5, [r8]
   11414:	b	116ac <main@@Base+0x4c8>
   11418:	ldr	r0, [r4]
   1141c:	ldr	r1, [r4, #8]
   11420:	cmp	r0, r6
   11424:	blt	11448 <main@@Base+0x264>
   11428:	mov	r2, r0
   1142c:	ldr	r3, [r1, r2, lsl #2]!
   11430:	cmp	r2, r6
   11434:	str	r3, [r1, #4]
   11438:	sub	r3, r2, #1
   1143c:	ldr	r1, [r4, #8]
   11440:	mov	r2, r3
   11444:	bgt	1142c <main@@Base+0x248>
   11448:	add	r0, r0, #1
   1144c:	str	r5, [r1, r6, lsl #2]
   11450:	str	r0, [r4]
   11454:	ldr	r1, [r8]
   11458:	movw	r0, #8605	; 0x219d
   1145c:	movt	r0, #1
   11460:	bl	10b3c <printf@plt>
   11464:	ldr	r0, [r4]
   11468:	cmp	r0, #0
   1146c:	beq	114dc <main@@Base+0x2f8>
   11470:	cmp	r0, #1
   11474:	blt	114d4 <main@@Base+0x2f0>
   11478:	and	r2, r0, #1
   1147c:	mov	r1, #0
   11480:	beq	114bc <main@@Base+0x2d8>
   11484:	sub	r3, r0, r2
   11488:	mov	r1, #0
   1148c:	mov	r7, #4
   11490:	ldr	r6, [r4, #8]
   11494:	ldr	r5, [r6, r7]!
   11498:	str	r5, [r6, #-4]
   1149c:	ldr	r6, [r4, #8]
   114a0:	add	r5, r6, r1, lsl #2
   114a4:	add	r1, r1, #2
   114a8:	cmp	r3, r1
   114ac:	ldr	r5, [r5, #8]
   114b0:	str	r5, [r6, r7]
   114b4:	add	r7, r7, #8
   114b8:	bne	11490 <main@@Base+0x2ac>
   114bc:	cmp	r2, #0
   114c0:	beq	114d4 <main@@Base+0x2f0>
   114c4:	ldr	r2, [r4, #8]
   114c8:	add	r3, r2, r1, lsl #2
   114cc:	ldr	r3, [r3, #4]
   114d0:	str	r3, [r2, r1, lsl #2]
   114d4:	sub	r0, r0, #1
   114d8:	str	r0, [r4]
   114dc:	mov	r1, #0
   114e0:	str	r1, [r8]
   114e4:	ldm	r4, {r0, r2}
   114e8:	cmp	r0, r2
   114ec:	beq	11584 <main@@Base+0x3a0>
   114f0:	movw	r1, #8591	; 0x218f
   114f4:	mov	r0, #0
   114f8:	mov	r6, #0
   114fc:	movt	r1, #1
   11500:	bl	11e58 <elemento_cria@@Base>
   11504:	mov	r5, r0
   11508:	ldr	r0, [r4]
   1150c:	cmp	r0, #1
   11510:	blt	11548 <main@@Base+0x364>
   11514:	mov	r6, #0
   11518:	ldr	r0, [r4, #8]
   1151c:	mov	r1, r5
   11520:	ldr	r0, [r0, r6, lsl #2]
   11524:	bl	11ea0 <maior_que@@Base>
   11528:	cmp	r0, #0
   1152c:	beq	11544 <main@@Base+0x360>
   11530:	ldr	r0, [r4]
   11534:	add	r6, r6, #1
   11538:	cmp	r6, r0
   1153c:	blt	11518 <main@@Base+0x334>
   11540:	b	11548 <main@@Base+0x364>
   11544:	ldr	r0, [r4]
   11548:	ldr	r1, [r4, #8]
   1154c:	cmp	r0, r6
   11550:	blt	11574 <main@@Base+0x390>
   11554:	mov	r2, r0
   11558:	ldr	r3, [r1, r2, lsl #2]!
   1155c:	cmp	r2, r6
   11560:	str	r3, [r1, #4]
   11564:	sub	r3, r2, #1
   11568:	ldr	r1, [r4, #8]
   1156c:	mov	r2, r3
   11570:	bgt	11558 <main@@Base+0x374>
   11574:	add	r0, r0, #1
   11578:	str	r5, [r1, r6, lsl #2]
   1157c:	str	r0, [r4]
   11580:	ldr	r1, [r8]
   11584:	movw	r0, #8676	; 0x21e4
   11588:	movt	r0, #1
   1158c:	bl	10b3c <printf@plt>
   11590:	ldr	r0, [r4]
   11594:	cmp	r0, #0
   11598:	beq	11608 <main@@Base+0x424>
   1159c:	cmp	r0, #1
   115a0:	blt	11600 <main@@Base+0x41c>
   115a4:	and	r2, r0, #1
   115a8:	mov	r1, #0
   115ac:	beq	115e8 <main@@Base+0x404>
   115b0:	sub	r3, r0, r2
   115b4:	mov	r1, #0
   115b8:	mov	r7, #4
   115bc:	ldr	r6, [r4, #8]
   115c0:	ldr	r5, [r6, r7]!
   115c4:	str	r5, [r6, #-4]
   115c8:	ldr	r6, [r4, #8]
   115cc:	add	r5, r6, r1, lsl #2
   115d0:	add	r1, r1, #2
   115d4:	cmp	r3, r1
   115d8:	ldr	r5, [r5, #8]
   115dc:	str	r5, [r6, r7]
   115e0:	add	r7, r7, #8
   115e4:	bne	115bc <main@@Base+0x3d8>
   115e8:	cmp	r2, #0
   115ec:	beq	11600 <main@@Base+0x41c>
   115f0:	ldr	r2, [r4, #8]
   115f4:	add	r3, r2, r1, lsl #2
   115f8:	ldr	r3, [r3, #4]
   115fc:	str	r3, [r2, r1, lsl #2]
   11600:	sub	r0, r0, #1
   11604:	str	r0, [r4]
   11608:	mov	r5, #0
   1160c:	str	r5, [r8]
   11610:	ldm	r4, {r0, r1}
   11614:	cmp	r0, r1
   11618:	beq	116ac <main@@Base+0x4c8>
   1161c:	movw	r1, #8591	; 0x218f
   11620:	mov	r0, #42	; 0x2a
   11624:	movt	r1, #1
   11628:	bl	11e58 <elemento_cria@@Base>
   1162c:	mov	r5, r0
   11630:	ldr	r0, [r4]
   11634:	mov	r6, #0
   11638:	cmp	r0, #1
   1163c:	blt	11670 <main@@Base+0x48c>
   11640:	ldr	r0, [r4, #8]
   11644:	mov	r1, r5
   11648:	ldr	r0, [r0, r6, lsl #2]
   1164c:	bl	11ea0 <maior_que@@Base>
   11650:	cmp	r0, #0
   11654:	beq	1166c <main@@Base+0x488>
   11658:	ldr	r0, [r4]
   1165c:	add	r6, r6, #1
   11660:	cmp	r6, r0
   11664:	blt	11640 <main@@Base+0x45c>
   11668:	b	11670 <main@@Base+0x48c>
   1166c:	ldr	r0, [r4]
   11670:	ldr	r1, [r4, #8]
   11674:	cmp	r0, r6
   11678:	blt	1169c <main@@Base+0x4b8>
   1167c:	mov	r2, r0
   11680:	ldr	r3, [r1, r2, lsl #2]!
   11684:	cmp	r2, r6
   11688:	str	r3, [r1, #4]
   1168c:	sub	r3, r2, #1
   11690:	ldr	r1, [r4, #8]
   11694:	mov	r2, r3
   11698:	bgt	11680 <main@@Base+0x49c>
   1169c:	add	r0, r0, #1
   116a0:	str	r5, [r1, r6, lsl #2]
   116a4:	str	r0, [r4]
   116a8:	ldr	r5, [r8]
   116ac:	movw	r0, #8747	; 0x222b
   116b0:	mov	r1, r5
   116b4:	movt	r0, #1
   116b8:	bl	10b3c <printf@plt>
   116bc:	movw	r0, #9154	; 0x23c2
   116c0:	movt	r0, #1
   116c4:	bl	10b90 <puts@plt>
   116c8:	mov	r0, #42	; 0x2a
   116cc:	bl	11dfc <vetor_criaHeap@@Base>
   116d0:	movw	r1, #9152	; 0x23c0
   116d4:	mov	r4, r0
   116d8:	movw	r0, #8456	; 0x2108
   116dc:	movt	r0, #1
   116e0:	movt	r1, #1
   116e4:	bl	10b54 <fopen@plt>
   116e8:	cmp	r0, #0
   116ec:	beq	11818 <main@@Base+0x634>
   116f0:	mov	r9, r0
   116f4:	bl	10bc0 <feof@plt>
   116f8:	cmp	r0, #0
   116fc:	bne	11804 <main@@Base+0x620>
   11700:	movw	r7, #8452	; 0x2104
   11704:	sub	r6, fp, #36	; 0x24
   11708:	add	sl, sp, #4
   1170c:	mov	r5, #0
   11710:	movt	r7, #1
   11714:	b	11748 <main@@Base+0x564>
   11718:	ldr	r0, [r4, #8]
   1171c:	mov	r8, #0
   11720:	str	r7, [r0, r8, lsl #2]
   11724:	mov	r7, r5
   11728:	mov	r5, #0
   1172c:	ldr	r0, [r4]
   11730:	add	r0, r0, #1
   11734:	str	r0, [r4]
   11738:	mov	r0, r9
   1173c:	bl	10bc0 <feof@plt>
   11740:	cmp	r0, #0
   11744:	bne	11804 <main@@Base+0x620>
   11748:	mov	r0, r9
   1174c:	mov	r1, r7
   11750:	mov	r2, r6
   11754:	bl	10b48 <__isoc99_fscanf@plt>
   11758:	mov	r0, sl
   1175c:	mov	r1, #256	; 0x100
   11760:	mov	r2, r9
   11764:	bl	10b78 <fgets@plt>
   11768:	mov	r0, sl
   1176c:	bl	10bcc <strlen@plt>
   11770:	add	r0, r0, sl
   11774:	strb	r5, [r0, #-1]
   11778:	ldm	r4, {r0, r1}
   1177c:	cmp	r0, r1
   11780:	beq	11738 <main@@Base+0x554>
   11784:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11788:	mov	r1, sl
   1178c:	mov	r5, r7
   11790:	bl	11e58 <elemento_cria@@Base>
   11794:	mov	r7, r0
   11798:	ldr	r0, [r4]
   1179c:	cmp	r0, #1
   117a0:	blt	11718 <main@@Base+0x534>
   117a4:	mov	r8, #0
   117a8:	ldr	r0, [r4, #8]
   117ac:	mov	r1, r7
   117b0:	ldr	r0, [r0, r8, lsl #2]
   117b4:	bl	11ea0 <maior_que@@Base>
   117b8:	cmp	r0, #1
   117bc:	beq	117d8 <main@@Base+0x5f4>
   117c0:	ldr	r0, [r4]
   117c4:	add	r8, r8, #1
   117c8:	cmp	r8, r0
   117cc:	blt	117a8 <main@@Base+0x5c4>
   117d0:	ldr	r0, [r4, #8]
   117d4:	b	117e4 <main@@Base+0x600>
   117d8:	ldr	r0, [r4, #8]
   117dc:	cmp	r8, #0
   117e0:	beq	1171c <main@@Base+0x538>
   117e4:	mov	r1, r8
   117e8:	ldr	r2, [r0, r1, lsl #2]!
   117ec:	sub	r1, r1, #1
   117f0:	cmp	r1, #0
   117f4:	str	r2, [r0, #4]
   117f8:	ldr	r0, [r4, #8]
   117fc:	bgt	117e8 <main@@Base+0x604>
   11800:	b	11720 <main@@Base+0x53c>
   11804:	mov	r0, r9
   11808:	bl	10be4 <fclose@plt>
   1180c:	movw	r8, #12392	; 0x3068
   11810:	movt	r8, #2
   11814:	b	11824 <main@@Base+0x640>
   11818:	movw	r0, #9066	; 0x236a
   1181c:	movt	r0, #1
   11820:	bl	10b90 <puts@plt>
   11824:	ldr	r1, [r8]
   11828:	movw	r0, #8817	; 0x2271
   1182c:	movt	r0, #1
   11830:	bl	10b3c <printf@plt>
   11834:	mov	r0, r4
   11838:	bl	12004 <vetor_imprimeHeap@@Base>
   1183c:	ldr	r0, [r4]
   11840:	cmp	r0, #42	; 0x2a
   11844:	bne	118dc <main@@Base+0x6f8>
   11848:	movw	r0, #8521	; 0x2149
   1184c:	mov	r1, #0
   11850:	mov	r5, #0
   11854:	movt	r0, #1
   11858:	bl	10b30 <strcmp@plt>
   1185c:	cmp	r0, #0
   11860:	bne	112cc <main@@Base+0xe8>
   11864:	movw	r0, #8872	; 0x22a8
   11868:	mov	r1, #0
   1186c:	str	r5, [r8]
   11870:	movt	r0, #1
   11874:	bl	10b3c <printf@plt>
   11878:	str	r5, [r8]
   1187c:	ldm	r4, {r0, r1}
   11880:	cmp	r0, r1
   11884:	beq	11944 <main@@Base+0x760>
   11888:	movw	r1, #8591	; 0x218f
   1188c:	mov	r0, #99	; 0x63
   11890:	movt	r1, #1
   11894:	bl	11e58 <elemento_cria@@Base>
   11898:	mov	r5, r0
   1189c:	ldr	r0, [r4]
   118a0:	cmp	r0, #1
   118a4:	blt	118f8 <main@@Base+0x714>
   118a8:	mov	r6, #0
   118ac:	ldr	r0, [r4, #8]
   118b0:	mov	r1, r5
   118b4:	ldr	r0, [r0, r6, lsl #2]
   118b8:	bl	11ea0 <maior_que@@Base>
   118bc:	cmp	r0, #1
   118c0:	beq	11900 <main@@Base+0x71c>
   118c4:	ldr	r0, [r4]
   118c8:	add	r6, r6, #1
   118cc:	cmp	r6, r0
   118d0:	blt	118ac <main@@Base+0x6c8>
   118d4:	ldr	r0, [r4, #8]
   118d8:	b	1190c <main@@Base+0x728>
   118dc:	movw	r0, #9210	; 0x23fa
   118e0:	movt	r0, #1
   118e4:	bl	10b90 <puts@plt>
   118e8:	mov	r4, #1
   118ec:	mov	r0, r4
   118f0:	sub	sp, fp, #28
   118f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118f8:	ldr	r0, [r4, #8]
   118fc:	b	1192c <main@@Base+0x748>
   11900:	ldr	r0, [r4, #8]
   11904:	cmp	r6, #0
   11908:	beq	1192c <main@@Base+0x748>
   1190c:	mov	r1, r6
   11910:	ldr	r2, [r0, r1, lsl #2]!
   11914:	sub	r1, r1, #1
   11918:	cmp	r1, #0
   1191c:	str	r2, [r0, #4]
   11920:	ldr	r0, [r4, #8]
   11924:	bgt	11910 <main@@Base+0x72c>
   11928:	b	11930 <main@@Base+0x74c>
   1192c:	mov	r6, #0
   11930:	str	r5, [r0, r6, lsl #2]
   11934:	ldr	r0, [r4]
   11938:	add	r0, r0, #1
   1193c:	str	r0, [r4]
   11940:	ldr	r5, [r8]
   11944:	movw	r0, #8924	; 0x22dc
   11948:	mov	r1, r5
   1194c:	movt	r0, #1
   11950:	bl	10b3c <printf@plt>
   11954:	mov	r5, #0
   11958:	str	r5, [r8]
   1195c:	ldm	r4, {r0, r1}
   11960:	cmp	r0, r1
   11964:	mov	r1, #0
   11968:	beq	11a10 <main@@Base+0x82c>
   1196c:	movw	r1, #8591	; 0x218f
   11970:	mov	r0, #0
   11974:	mov	r7, #0
   11978:	movt	r1, #1
   1197c:	bl	11e58 <elemento_cria@@Base>
   11980:	mov	r6, r0
   11984:	ldr	r0, [r4]
   11988:	cmp	r0, #1
   1198c:	blt	119c4 <main@@Base+0x7e0>
   11990:	mov	r7, #0
   11994:	ldr	r0, [r4, #8]
   11998:	mov	r1, r6
   1199c:	ldr	r0, [r0, r7, lsl #2]
   119a0:	bl	11ea0 <maior_que@@Base>
   119a4:	cmp	r0, #1
   119a8:	beq	119cc <main@@Base+0x7e8>
   119ac:	ldr	r0, [r4]
   119b0:	add	r7, r7, #1
   119b4:	cmp	r7, r0
   119b8:	blt	11994 <main@@Base+0x7b0>
   119bc:	ldr	r0, [r4, #8]
   119c0:	b	119d8 <main@@Base+0x7f4>
   119c4:	ldr	r0, [r4, #8]
   119c8:	b	119fc <main@@Base+0x818>
   119cc:	ldr	r0, [r4, #8]
   119d0:	cmp	r7, #0
   119d4:	beq	119f8 <main@@Base+0x814>
   119d8:	mov	r1, r7
   119dc:	ldr	r2, [r0, r1, lsl #2]!
   119e0:	sub	r1, r1, #1
   119e4:	cmp	r1, #0
   119e8:	str	r2, [r0, #4]
   119ec:	ldr	r0, [r4, #8]
   119f0:	bgt	119dc <main@@Base+0x7f8>
   119f4:	b	119fc <main@@Base+0x818>
   119f8:	mov	r7, #0
   119fc:	str	r6, [r0, r7, lsl #2]
   11a00:	ldr	r0, [r4]
   11a04:	add	r0, r0, #1
   11a08:	str	r0, [r4]
   11a0c:	ldr	r1, [r8]
   11a10:	movw	r0, #8995	; 0x2323
   11a14:	movt	r0, #1
   11a18:	bl	10b3c <printf@plt>
   11a1c:	str	r5, [r8]
   11a20:	ldm	r4, {r0, r1}
   11a24:	cmp	r0, r1
   11a28:	beq	11acc <main@@Base+0x8e8>
   11a2c:	movw	r1, #8591	; 0x218f
   11a30:	mov	r0, #42	; 0x2a
   11a34:	movt	r1, #1
   11a38:	bl	11e58 <elemento_cria@@Base>
   11a3c:	mov	r5, r0
   11a40:	ldr	r0, [r4]
   11a44:	cmp	r0, #1
   11a48:	blt	11a80 <main@@Base+0x89c>
   11a4c:	mov	r6, #0
   11a50:	ldr	r0, [r4, #8]
   11a54:	mov	r1, r5
   11a58:	ldr	r0, [r0, r6, lsl #2]
   11a5c:	bl	11ea0 <maior_que@@Base>
   11a60:	cmp	r0, #1
   11a64:	beq	11a88 <main@@Base+0x8a4>
   11a68:	ldr	r0, [r4]
   11a6c:	add	r6, r6, #1
   11a70:	cmp	r6, r0
   11a74:	blt	11a50 <main@@Base+0x86c>
   11a78:	ldr	r0, [r4, #8]
   11a7c:	b	11a94 <main@@Base+0x8b0>
   11a80:	ldr	r0, [r4, #8]
   11a84:	b	11ab4 <main@@Base+0x8d0>
   11a88:	ldr	r0, [r4, #8]
   11a8c:	cmp	r6, #0
   11a90:	beq	11ab4 <main@@Base+0x8d0>
   11a94:	mov	r1, r6
   11a98:	ldr	r2, [r0, r1, lsl #2]!
   11a9c:	sub	r1, r1, #1
   11aa0:	cmp	r1, #0
   11aa4:	str	r2, [r0, #4]
   11aa8:	ldr	r0, [r4, #8]
   11aac:	bgt	11a98 <main@@Base+0x8b4>
   11ab0:	b	11ab8 <main@@Base+0x8d4>
   11ab4:	mov	r6, #0
   11ab8:	str	r5, [r0, r6, lsl #2]
   11abc:	ldr	r0, [r4]
   11ac0:	add	r0, r0, #1
   11ac4:	str	r0, [r4]
   11ac8:	ldr	r5, [r8]
   11acc:	movw	r0, #8747	; 0x222b
   11ad0:	mov	r1, r5
   11ad4:	movt	r0, #1
   11ad8:	bl	10b3c <printf@plt>
   11adc:	mov	r0, #42	; 0x2a
   11ae0:	bl	11dfc <vetor_criaHeap@@Base>
   11ae4:	movw	r1, #9152	; 0x23c0
   11ae8:	mov	r4, r0
   11aec:	movw	r0, #8456	; 0x2108
   11af0:	movt	r0, #1
   11af4:	movt	r1, #1
   11af8:	bl	10b54 <fopen@plt>
   11afc:	cmp	r0, #0
   11b00:	beq	11c2c <main@@Base+0xa48>
   11b04:	mov	r9, r0
   11b08:	bl	10bc0 <feof@plt>
   11b0c:	cmp	r0, #0
   11b10:	bne	11c18 <main@@Base+0xa34>
   11b14:	movw	r7, #8452	; 0x2104
   11b18:	sub	r6, fp, #36	; 0x24
   11b1c:	add	sl, sp, #4
   11b20:	mov	r5, #0
   11b24:	movt	r7, #1
   11b28:	b	11b5c <main@@Base+0x978>
   11b2c:	ldr	r0, [r4, #8]
   11b30:	mov	r8, #0
   11b34:	str	r7, [r0, r8, lsl #2]
   11b38:	mov	r7, r5
   11b3c:	mov	r5, #0
   11b40:	ldr	r0, [r4]
   11b44:	add	r0, r0, #1
   11b48:	str	r0, [r4]
   11b4c:	mov	r0, r9
   11b50:	bl	10bc0 <feof@plt>
   11b54:	cmp	r0, #0
   11b58:	bne	11c18 <main@@Base+0xa34>
   11b5c:	mov	r0, r9
   11b60:	mov	r1, r7
   11b64:	mov	r2, r6
   11b68:	bl	10b48 <__isoc99_fscanf@plt>
   11b6c:	mov	r0, sl
   11b70:	mov	r1, #256	; 0x100
   11b74:	mov	r2, r9
   11b78:	bl	10b78 <fgets@plt>
   11b7c:	mov	r0, sl
   11b80:	bl	10bcc <strlen@plt>
   11b84:	add	r0, r0, sl
   11b88:	strb	r5, [r0, #-1]
   11b8c:	ldm	r4, {r0, r1}
   11b90:	cmp	r0, r1
   11b94:	beq	11b4c <main@@Base+0x968>
   11b98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11b9c:	mov	r1, sl
   11ba0:	mov	r5, r7
   11ba4:	bl	11e58 <elemento_cria@@Base>
   11ba8:	mov	r7, r0
   11bac:	ldr	r0, [r4]
   11bb0:	cmp	r0, #1
   11bb4:	blt	11b2c <main@@Base+0x948>
   11bb8:	mov	r8, #0
   11bbc:	ldr	r0, [r4, #8]
   11bc0:	mov	r1, r7
   11bc4:	ldr	r0, [r0, r8, lsl #2]
   11bc8:	bl	11f0c <maior_que_HeapSort@@Base>
   11bcc:	cmp	r0, #1
   11bd0:	beq	11bec <main@@Base+0xa08>
   11bd4:	ldr	r0, [r4]
   11bd8:	add	r8, r8, #1
   11bdc:	cmp	r8, r0
   11be0:	blt	11bbc <main@@Base+0x9d8>
   11be4:	ldr	r0, [r4, #8]
   11be8:	b	11bf8 <main@@Base+0xa14>
   11bec:	ldr	r0, [r4, #8]
   11bf0:	cmp	r8, #0
   11bf4:	beq	11b30 <main@@Base+0x94c>
   11bf8:	mov	r1, r8
   11bfc:	ldr	r2, [r0, r1, lsl #2]!
   11c00:	sub	r1, r1, #1
   11c04:	cmp	r1, #0
   11c08:	str	r2, [r0, #4]
   11c0c:	ldr	r0, [r4, #8]
   11c10:	bgt	11bfc <main@@Base+0xa18>
   11c14:	b	11b34 <main@@Base+0x950>
   11c18:	mov	r0, r9
   11c1c:	bl	10be4 <fclose@plt>
   11c20:	movw	r8, #12392	; 0x3068
   11c24:	movt	r8, #2
   11c28:	b	11c38 <main@@Base+0xa54>
   11c2c:	movw	r0, #9066	; 0x236a
   11c30:	movt	r0, #1
   11c34:	bl	10b90 <puts@plt>
   11c38:	ldr	r1, [r8]
   11c3c:	movw	r0, #8817	; 0x2271
   11c40:	movt	r0, #1
   11c44:	bl	10b3c <printf@plt>
   11c48:	mov	r0, #0
   11c4c:	mov	r4, #0
   11c50:	bl	10b90 <puts@plt>
   11c54:	mov	r0, #0
   11c58:	bl	10b90 <puts@plt>
   11c5c:	mov	r0, #0
   11c60:	bl	10b90 <puts@plt>
   11c64:	mov	r0, #0
   11c68:	bl	10b90 <puts@plt>
   11c6c:	mov	r0, #0
   11c70:	bl	10b90 <puts@plt>
   11c74:	mov	r0, #0
   11c78:	bl	10b90 <puts@plt>
   11c7c:	mov	r0, #0
   11c80:	bl	10b90 <puts@plt>
   11c84:	mov	r0, #0
   11c88:	bl	10b90 <puts@plt>
   11c8c:	mov	r0, #0
   11c90:	bl	10b90 <puts@plt>
   11c94:	mov	r0, #0
   11c98:	bl	10b90 <puts@plt>
   11c9c:	mov	r0, #0
   11ca0:	bl	10b90 <puts@plt>
   11ca4:	mov	r0, #0
   11ca8:	bl	10b90 <puts@plt>
   11cac:	mov	r0, #0
   11cb0:	bl	10b90 <puts@plt>
   11cb4:	mov	r0, #0
   11cb8:	bl	10b90 <puts@plt>
   11cbc:	mov	r0, #0
   11cc0:	bl	10b90 <puts@plt>
   11cc4:	mov	r0, #0
   11cc8:	bl	10b90 <puts@plt>
   11ccc:	mov	r0, #0
   11cd0:	bl	10b90 <puts@plt>
   11cd4:	mov	r0, #0
   11cd8:	bl	10b90 <puts@plt>
   11cdc:	mov	r0, #0
   11ce0:	bl	10b90 <puts@plt>
   11ce4:	mov	r0, #0
   11ce8:	bl	10b90 <puts@plt>
   11cec:	mov	r0, #0
   11cf0:	bl	10b90 <puts@plt>
   11cf4:	mov	r0, #0
   11cf8:	bl	10b90 <puts@plt>
   11cfc:	mov	r0, #0
   11d00:	bl	10b90 <puts@plt>
   11d04:	mov	r0, #0
   11d08:	bl	10b90 <puts@plt>
   11d0c:	mov	r0, #0
   11d10:	bl	10b90 <puts@plt>
   11d14:	mov	r0, #0
   11d18:	bl	10b90 <puts@plt>
   11d1c:	mov	r0, #0
   11d20:	bl	10b90 <puts@plt>
   11d24:	mov	r0, #0
   11d28:	bl	10b90 <puts@plt>
   11d2c:	mov	r0, #0
   11d30:	bl	10b90 <puts@plt>
   11d34:	mov	r0, #0
   11d38:	bl	10b90 <puts@plt>
   11d3c:	mov	r0, #0
   11d40:	bl	10b90 <puts@plt>
   11d44:	mov	r0, #0
   11d48:	bl	10b90 <puts@plt>
   11d4c:	mov	r0, #0
   11d50:	bl	10b90 <puts@plt>
   11d54:	mov	r0, #0
   11d58:	bl	10b90 <puts@plt>
   11d5c:	mov	r0, #0
   11d60:	bl	10b90 <puts@plt>
   11d64:	mov	r0, #0
   11d68:	bl	10b90 <puts@plt>
   11d6c:	mov	r0, #0
   11d70:	bl	10b90 <puts@plt>
   11d74:	mov	r0, #0
   11d78:	bl	10b90 <puts@plt>
   11d7c:	mov	r0, #0
   11d80:	bl	10b90 <puts@plt>
   11d84:	mov	r0, #0
   11d88:	bl	10b90 <puts@plt>
   11d8c:	mov	r0, #0
   11d90:	bl	10b90 <puts@plt>
   11d94:	mov	r0, #0
   11d98:	bl	10b90 <puts@plt>
   11d9c:	b	118ec <main@@Base+0x708>

00011da0 <vetor_cria@@Base>:
   11da0:	push	{r4, r5, fp, lr}
   11da4:	add	fp, sp, #8
   11da8:	mov	r5, r0
   11dac:	mov	r0, #12
   11db0:	bl	10b9c <malloc@plt>
   11db4:	cmp	r0, #0
   11db8:	beq	11df0 <vetor_cria@@Base+0x50>
   11dbc:	mov	r4, r0
   11dc0:	mov	r0, #0
   11dc4:	mov	r1, #4
   11dc8:	stm	r4, {r0, r5}
   11dcc:	mov	r0, r5
   11dd0:	bl	10b24 <calloc@plt>
   11dd4:	cmp	r0, #0
   11dd8:	str	r0, [r4, #8]
   11ddc:	beq	11de8 <vetor_cria@@Base+0x48>
   11de0:	mov	r0, r4
   11de4:	pop	{r4, r5, fp, pc}
   11de8:	mov	r0, r4
   11dec:	bl	10b6c <free@plt>
   11df0:	mov	r4, #0
   11df4:	mov	r0, r4
   11df8:	pop	{r4, r5, fp, pc}

00011dfc <vetor_criaHeap@@Base>:
   11dfc:	push	{r4, r5, fp, lr}
   11e00:	add	fp, sp, #8
   11e04:	mov	r5, r0
   11e08:	mov	r0, #12
   11e0c:	bl	10b9c <malloc@plt>
   11e10:	cmp	r0, #0
   11e14:	beq	11e4c <vetor_criaHeap@@Base+0x50>
   11e18:	mov	r4, r0
   11e1c:	mov	r0, #0
   11e20:	mov	r1, #4
   11e24:	stm	r4, {r0, r5}
   11e28:	add	r0, r5, #1
   11e2c:	bl	10b24 <calloc@plt>
   11e30:	cmp	r0, #0
   11e34:	str	r0, [r4, #8]
   11e38:	beq	11e44 <vetor_criaHeap@@Base+0x48>
   11e3c:	mov	r0, r4
   11e40:	pop	{r4, r5, fp, pc}
   11e44:	mov	r0, r4
   11e48:	bl	10b6c <free@plt>
   11e4c:	mov	r4, #0
   11e50:	mov	r0, r4
   11e54:	pop	{r4, r5, fp, pc}

00011e58 <elemento_cria@@Base>:
   11e58:	push	{r4, r5, r6, sl, fp, lr}
   11e5c:	add	fp, sp, #16
   11e60:	mov	r5, r0
   11e64:	mov	r0, #8
   11e68:	mov	r6, r1
   11e6c:	bl	10b9c <malloc@plt>
   11e70:	cmp	r0, #0
   11e74:	beq	11e94 <elemento_cria@@Base+0x3c>
   11e78:	mov	r4, r0
   11e7c:	mov	r0, r6
   11e80:	bl	10b84 <strdup@plt>
   11e84:	str	r5, [r4]
   11e88:	str	r0, [r4, #4]
   11e8c:	mov	r0, r4
   11e90:	pop	{r4, r5, r6, sl, fp, pc}
   11e94:	mov	r4, #0
   11e98:	mov	r0, r4
   11e9c:	pop	{r4, r5, r6, sl, fp, pc}

00011ea0 <maior_que@@Base>:
   11ea0:	push	{r4, r5, fp, lr}
   11ea4:	add	fp, sp, #8
   11ea8:	cmp	r0, #0
   11eac:	movne	r5, r1
   11eb0:	cmpne	r1, #0
   11eb4:	bne	11ecc <maior_que@@Base+0x2c>
   11eb8:	movw	r0, #9399	; 0x24b7
   11ebc:	movt	r0, #1
   11ec0:	bl	10b90 <puts@plt>
   11ec4:	mov	r0, #0
   11ec8:	pop	{r4, r5, fp, pc}
   11ecc:	mov	r4, r0
   11ed0:	movw	r0, #12384	; 0x3060
   11ed4:	movt	r0, #2
   11ed8:	ldr	r0, [r0]
   11edc:	bl	10b60 <fflush@plt>
   11ee0:	movw	r0, #12392	; 0x3068
   11ee4:	movt	r0, #2
   11ee8:	ldr	r1, [r0]
   11eec:	add	r1, r1, #1
   11ef0:	str	r1, [r0]
   11ef4:	mov	r0, #0
   11ef8:	ldr	r1, [r5]
   11efc:	ldr	r2, [r4]
   11f00:	cmp	r2, r1
   11f04:	movwgt	r0, #1
   11f08:	pop	{r4, r5, fp, pc}

00011f0c <maior_que_HeapSort@@Base>:
   11f0c:	push	{r4, r5, fp, lr}
   11f10:	add	fp, sp, #8
   11f14:	cmp	r0, #0
   11f18:	movne	r5, r1
   11f1c:	cmpne	r1, #0
   11f20:	bne	11f38 <maior_que_HeapSort@@Base+0x2c>
   11f24:	movw	r0, #9399	; 0x24b7
   11f28:	movt	r0, #1
   11f2c:	bl	10b90 <puts@plt>
   11f30:	mov	r0, #0
   11f34:	pop	{r4, r5, fp, pc}
   11f38:	mov	r4, r0
   11f3c:	movw	r0, #12384	; 0x3060
   11f40:	movt	r0, #2
   11f44:	ldr	r0, [r0]
   11f48:	bl	10b60 <fflush@plt>
   11f4c:	movw	r0, #12392	; 0x3068
   11f50:	movt	r0, #2
   11f54:	ldr	r1, [r0]
   11f58:	add	r1, r1, #1
   11f5c:	str	r1, [r0]
   11f60:	ldr	r1, [r5, #4]
   11f64:	ldr	r0, [r4, #4]
   11f68:	bl	10b30 <strcmp@plt>
   11f6c:	lsr	r0, r0, #31
   11f70:	pop	{r4, r5, fp, pc}

00011f74 <vetor_imprime@@Base>:
   11f74:	push	{r4, r5, r6, sl, fp, lr}
   11f78:	add	fp, sp, #16
   11f7c:	mov	r4, r0
   11f80:	ldr	r0, [r0]
   11f84:	cmp	r0, #1
   11f88:	blt	11ff4 <vetor_imprime@@Base+0x80>
   11f8c:	ldr	r0, [r4, #8]
   11f90:	ldr	r0, [r0]
   11f94:	ldr	r2, [r0]
   11f98:	ldr	r1, [r0, #4]
   11f9c:	movw	r0, #9355	; 0x248b
   11fa0:	movt	r0, #1
   11fa4:	bl	10b3c <printf@plt>
   11fa8:	ldr	r0, [r4]
   11fac:	cmp	r0, #2
   11fb0:	blt	11fe8 <vetor_imprime@@Base+0x74>
   11fb4:	movw	r5, #9384	; 0x24a8
   11fb8:	mov	r6, #1
   11fbc:	movt	r5, #1
   11fc0:	ldr	r0, [r4, #8]
   11fc4:	ldr	r0, [r0, r6, lsl #2]
   11fc8:	ldr	r2, [r0]
   11fcc:	ldr	r1, [r0, #4]
   11fd0:	mov	r0, r5
   11fd4:	bl	10b3c <printf@plt>
   11fd8:	ldr	r0, [r4]
   11fdc:	add	r6, r6, #1
   11fe0:	cmp	r6, r0
   11fe4:	blt	11fc0 <vetor_imprime@@Base+0x4c>
   11fe8:	mov	r0, #10
   11fec:	pop	{r4, r5, r6, sl, fp, lr}
   11ff0:	b	10bd8 <putchar@plt>
   11ff4:	movw	r0, #9410	; 0x24c2
   11ff8:	movt	r0, #1
   11ffc:	pop	{r4, r5, r6, sl, fp, lr}
   12000:	b	10b90 <puts@plt>

00012004 <vetor_imprimeHeap@@Base>:
   12004:	push	{r4, r5, r6, sl, fp, lr}
   12008:	add	fp, sp, #16
   1200c:	mov	r4, r0
   12010:	ldr	r0, [r0]
   12014:	cmp	r0, #1
   12018:	blt	12084 <vetor_imprimeHeap@@Base+0x80>
   1201c:	ldr	r0, [r4, #8]
   12020:	ldr	r0, [r0, #4]
   12024:	ldr	r2, [r0]
   12028:	ldr	r1, [r0, #4]
   1202c:	movw	r0, #9355	; 0x248b
   12030:	movt	r0, #1
   12034:	bl	10b3c <printf@plt>
   12038:	ldr	r0, [r4]
   1203c:	cmp	r0, #3
   12040:	blt	12078 <vetor_imprimeHeap@@Base+0x74>
   12044:	movw	r5, #9384	; 0x24a8
   12048:	mov	r6, #2
   1204c:	movt	r5, #1
   12050:	ldr	r0, [r4, #8]
   12054:	ldr	r0, [r0, r6, lsl #2]
   12058:	ldr	r2, [r0]
   1205c:	ldr	r1, [r0, #4]
   12060:	mov	r0, r5
   12064:	bl	10b3c <printf@plt>
   12068:	ldr	r0, [r4]
   1206c:	add	r6, r6, #1
   12070:	cmp	r6, r0
   12074:	blt	12050 <vetor_imprimeHeap@@Base+0x4c>
   12078:	mov	r0, #10
   1207c:	pop	{r4, r5, r6, sl, fp, lr}
   12080:	b	10bd8 <putchar@plt>
   12084:	movw	r0, #9410	; 0x24c2
   12088:	movt	r0, #1
   1208c:	pop	{r4, r5, r6, sl, fp, lr}
   12090:	b	10b90 <puts@plt>

00012094 <__libc_csu_init@@Base>:
   12094:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12098:	mov	r7, r0
   1209c:	ldr	r6, [pc, #72]	; 120ec <__libc_csu_init@@Base+0x58>
   120a0:	ldr	r5, [pc, #72]	; 120f0 <__libc_csu_init@@Base+0x5c>
   120a4:	add	r6, pc, r6
   120a8:	add	r5, pc, r5
   120ac:	sub	r6, r6, r5
   120b0:	mov	r8, r1
   120b4:	mov	r9, r2
   120b8:	bl	10b04 <calloc@plt-0x20>
   120bc:	asrs	r6, r6, #2
   120c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   120c4:	mov	r4, #0
   120c8:	add	r4, r4, #1
   120cc:	ldr	r3, [r5], #4
   120d0:	mov	r2, r9
   120d4:	mov	r1, r8
   120d8:	mov	r0, r7
   120dc:	blx	r3
   120e0:	cmp	r6, r4
   120e4:	bne	120c8 <__libc_csu_init@@Base+0x34>
   120e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   120ec:	andeq	r0, r1, r0, ror #28
   120f0:	andeq	r0, r1, r8, asr lr

000120f4 <__libc_csu_fini@@Base>:
   120f4:	bx	lr

Disassembly of section .fini:

000120f8 <.fini>:
   120f8:	push	{r3, lr}
   120fc:	pop	{r3, pc}
