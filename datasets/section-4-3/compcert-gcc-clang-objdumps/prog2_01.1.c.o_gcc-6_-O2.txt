
../compcert-repos/prog2/CMakeFiles/1.1.1.dir/Aula01_Ficheiros_e_Formatos_de_dados/01.1.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <in_array>:
   0:	cmp	r2, #0
   4:	blt	34 <in_array+0x34>
   8:	ldr	r3, [r1]
   c:	cmp	r0, r3
  10:	beq	3c <in_array+0x3c>
  14:	mov	r3, #0
  18:	b	28 <in_array+0x28>
  1c:	ldr	ip, [r1, #4]!
  20:	cmp	ip, r0
  24:	beq	3c <in_array+0x3c>
  28:	add	r3, r3, #1
  2c:	cmp	r2, r3
  30:	bge	1c <in_array+0x1c>
  34:	mov	r0, #0
  38:	bx	lr
  3c:	mov	r0, #1
  40:	bx	lr

Disassembly of section .text.startup:

00000000 <main>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	vpush	{d8}
   8:	ldr	ip, [pc, #488]	; 1f8 <main+0x1f8>
   c:	mov	r4, #0
  10:	ldr	r7, [pc, #484]	; 1fc <main+0x1fc>
  14:	ldm	ip!, {r0, r1, r2, r3}
  18:	sub	sp, sp, #180	; 0xb4
  1c:	add	lr, sp, #40	; 0x28
  20:	add	r5, sp, #16
  24:	stmia	lr!, {r0, r1, r2, r3}
  28:	add	r8, ip, #16
  2c:	ldm	ip, {r0, r1, r2, r3}
  30:	add	ip, ip, #32
  34:	mov	r6, sp
  38:	mov	r9, #105	; 0x69
  3c:	stm	lr, {r0, r1, r2, r3}
  40:	ldm	r8, {r0, r1, r2, r3}
  44:	mov	r8, #111	; 0x6f
  48:	stm	sp, {r0, r1, r2, r3}
  4c:	ldm	ip!, {r0, r1, r2, r3}
  50:	stmia	r5!, {r0, r1, r2, r3}
  54:	ldm	ip, {r0, r1}
  58:	stm	r5, {r0, r1}
  5c:	ldr	r1, [pc, #412]	; 200 <main+0x200>
  60:	ldr	r0, [pc, #412]	; 204 <main+0x204>
  64:	bl	0 <fopen>
  68:	mov	r2, #104	; 0x68
  6c:	mov	r1, r4
  70:	mov	r5, r0
  74:	add	r0, sp, #72	; 0x48
  78:	bl	0 <memset>
  7c:	add	sl, sp, #76	; 0x4c
  80:	mov	r0, r5
  84:	bl	0 <getc>
  88:	cmn	r0, #1
  8c:	beq	158 <main+0x158>
  90:	add	r3, sp, #40	; 0x28
  94:	ldr	r1, [r3], #4
  98:	cmp	r0, r1
  9c:	beq	13c <main+0x13c>
  a0:	cmp	sl, r3
  a4:	bne	94 <main+0x94>
  a8:	mov	r3, r6
  ac:	add	ip, sp, #20
  b0:	ldr	r1, [r3], #4
  b4:	cmp	r0, r1
  b8:	beq	150 <main+0x150>
  bc:	cmp	ip, r3
  c0:	bne	b0 <main+0xb0>
  c4:	bic	lr, r0, #32
  c8:	cmp	lr, #205	; 0xcd
  cc:	beq	1dc <main+0x1dc>
  d0:	cmp	r0, #0
  d4:	beq	1dc <main+0x1dc>
  d8:	add	r3, sp, #16
  dc:	add	ip, sp, #44	; 0x2c
  e0:	ldr	r1, [r3], #4
  e4:	cmp	r0, r1
  e8:	beq	1d4 <main+0x1d4>
  ec:	cmp	r3, ip
  f0:	bne	e0 <main+0xe0>
  f4:	cmp	lr, #218	; 0xda
  f8:	beq	1e4 <main+0x1e4>
  fc:	cmp	lr, #199	; 0xc7
 100:	beq	1ec <main+0x1ec>
 104:	add	r3, r0, #128	; 0x80
 108:	cmp	r3, r7
 10c:	mov	fp, r0
 110:	bls	140 <main+0x140>
 114:	sub	r0, r0, #97	; 0x61
 118:	cmp	r0, #25
 11c:	bhi	80 <main+0x80>
 120:	add	r3, sp, #176	; 0xb0
 124:	add	r0, r3, r0, lsl #2
 128:	add	r4, r4, #1
 12c:	ldr	r3, [r0, #-104]	; 0xffffff98
 130:	add	r3, r3, #1
 134:	str	r3, [r0, #-104]	; 0xffffff98
 138:	b	7c <main+0x7c>
 13c:	mov	fp, #97	; 0x61
 140:	bl	0 <__ctype_tolower_loc>
 144:	ldr	r1, [r0]
 148:	ldr	r0, [r1, fp, lsl #2]
 14c:	b	114 <main+0x114>
 150:	mov	fp, #101	; 0x65
 154:	b	140 <main+0x140>
 158:	mov	r0, r5
 15c:	bl	0 <fclose>
 160:	ldr	r0, [pc, #160]	; 208 <main+0x208>
 164:	bl	0 <puts>
 168:	mov	r1, r4
 16c:	ldr	r0, [pc, #152]	; 20c <main+0x20c>
 170:	bl	0 <printf>
 174:	vmov	s15, r4
 178:	vldr	s17, [pc, #116]	; 1f4 <main+0x1f4>
 17c:	ldr	r7, [pc, #140]	; 210 <main+0x210>
 180:	add	r5, sp, #68	; 0x44
 184:	vcvt.f32.s32	s16, s15
 188:	add	r6, sp, #172	; 0xac
 18c:	mov	r4, #97	; 0x61
 190:	ldr	r3, [r5, #4]!
 194:	mov	r1, r4
 198:	mov	r0, r7
 19c:	vmov	s14, r3
 1a0:	add	r4, r4, #1
 1a4:	vcvt.f32.s32	s14, s14
 1a8:	vdiv.f32	s15, s14, s16
 1ac:	vmul.f32	s15, s15, s17
 1b0:	vcvt.f64.f32	d7, s15
 1b4:	vmov	r2, r3, d7
 1b8:	bl	0 <printf>
 1bc:	cmp	r6, r5
 1c0:	bne	190 <main+0x190>
 1c4:	mov	r0, #0
 1c8:	add	sp, sp, #180	; 0xb4
 1cc:	vpop	{d8}
 1d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1d4:	mov	fp, r8
 1d8:	b	140 <main+0x140>
 1dc:	mov	fp, r9
 1e0:	b	140 <main+0x140>
 1e4:	mov	fp, #117	; 0x75
 1e8:	b	140 <main+0x140>
 1ec:	mov	fp, #99	; 0x63
 1f0:	b	140 <main+0x140>
 1f4:	.word	0x42c80000
 1f8:	.word	0x00000000
 1fc:	.word	0x0000017f
 200:	.word	0x00000000
 204:	.word	0x00000004
 208:	.word	0x0000001c
 20c:	.word	0x00000020
 210:	.word	0x00000040
