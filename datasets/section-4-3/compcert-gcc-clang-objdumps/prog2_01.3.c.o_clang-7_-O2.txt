
../compcert-repos/prog2/CMakeFiles/1.1.3.dir/Aula01_Ficheiros_e_Formatos_de_dados/01.3.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <in_array>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	cmp	r2, #0
   c:	movlt	r0, #0
  10:	poplt	{fp, pc}
  14:	mov	lr, #0
  18:	ldr	r3, [r1, lr, lsl #2]
  1c:	cmp	r3, r0
  20:	moveq	r0, #1
  24:	popeq	{fp, pc}
  28:	cmp	lr, r2
  2c:	add	ip, lr, #1
  30:	movge	r0, #0
  34:	mov	lr, ip
  38:	popge	{fp, pc}
  3c:	b	18 <in_array+0x18>

00000040 <main>:
  40:	push	{r4, r5, fp, lr}
  44:	add	fp, sp, #8
  48:	movw	r0, #0
  4c:	movw	r1, #0
  50:	movt	r0, #0
  54:	movt	r1, #0
  58:	bl	0 <fopen>
  5c:	mov	r5, r0
  60:	mov	r4, #0
  64:	mov	r0, r5
  68:	bl	0 <getc>
  6c:	cmp	r0, #195	; 0xc3
  70:	bne	80 <main+0x40>
  74:	mov	r0, r5
  78:	bl	0 <getc>
  7c:	add	r4, r4, #1
  80:	cmn	r0, #1
  84:	bne	64 <main+0x24>
  88:	mov	r0, r5
  8c:	bl	0 <fclose>
  90:	movw	r5, #0
  94:	mov	r1, #65	; 0x41
  98:	mov	r2, r4
  9c:	movt	r5, #0
  a0:	mov	r0, r5
  a4:	bl	0 <printf>
  a8:	mov	r0, r5
  ac:	mov	r1, #79	; 0x4f
  b0:	mov	r2, #0
  b4:	bl	0 <printf>
  b8:	movw	r0, #0
  bc:	mov	r1, #67	; 0x43
  c0:	mov	r2, #0
  c4:	movt	r0, #0
  c8:	bl	0 <printf>
  cc:	mov	r0, #0
  d0:	pop	{r4, r5, fp, pc}
