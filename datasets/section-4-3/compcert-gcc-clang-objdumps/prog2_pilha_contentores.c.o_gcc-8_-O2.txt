
../compcert-repos/prog2/CMakeFiles/5.1.dir/Aula05_Filas_e_Pilhas/1/pilha_contentores.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <pilha_novo_elemento>:
   0:	strd	r4, [sp, #-16]!
   4:	mov	r5, r0
   8:	mov	r0, #8
   c:	str	r6, [sp, #8]
  10:	str	lr, [sp, #12]
  14:	bl	0 <malloc>
  18:	subs	r4, r0, #0
  1c:	beq	44 <pilha_novo_elemento+0x44>
  20:	ldr	r0, [r5]
  24:	vldr	s0, [r5, #4]
  28:	bl	0 <contentor_novo>
  2c:	cmp	r0, #0
  30:	mov	r3, r0
  34:	str	r0, [r4]
  38:	movne	r3, #0
  3c:	strne	r3, [r4, #4]
  40:	beq	58 <pilha_novo_elemento+0x58>
  44:	mov	r0, r4
  48:	ldrd	r4, [sp]
  4c:	ldr	r6, [sp, #8]
  50:	add	sp, sp, #12
  54:	pop	{pc}		; (ldr pc, [sp], #4)
  58:	mov	r0, r4
  5c:	mov	r4, r3
  60:	bl	0 <free>
  64:	b	44 <pilha_novo_elemento+0x44>

00000068 <pilha_nova>:
  68:	mov	r0, #8
  6c:	str	r4, [sp, #-8]!
  70:	str	lr, [sp, #4]
  74:	bl	0 <malloc>
  78:	cmp	r0, #0
  7c:	beq	8c <pilha_nova+0x24>
  80:	mov	r3, #0
  84:	str	r3, [r0]
  88:	str	r3, [r0, #4]
  8c:	ldr	r4, [sp]
  90:	add	sp, sp, #4
  94:	pop	{pc}		; (ldr pc, [sp], #4)

00000098 <pilha_apaga>:
  98:	strd	r4, [sp, #-16]!
  9c:	subs	r5, r0, #0
  a0:	str	r6, [sp, #8]
  a4:	str	lr, [sp, #12]
  a8:	bne	c4 <pilha_apaga+0x2c>
  ac:	b	e8 <pilha_apaga+0x50>
  b0:	ldm	r4, {r0, r3}
  b4:	str	r3, [r5]
  b8:	bl	0 <contentor_apaga>
  bc:	mov	r0, r4
  c0:	bl	0 <free>
  c4:	ldr	r4, [r5]
  c8:	cmp	r4, #0
  cc:	bne	b0 <pilha_apaga+0x18>
  d0:	mov	r0, r5
  d4:	ldrd	r4, [sp]
  d8:	ldr	r6, [sp, #8]
  dc:	ldr	lr, [sp, #12]
  e0:	add	sp, sp, #16
  e4:	b	0 <free>
  e8:	ldrd	r4, [sp]
  ec:	ldr	r6, [sp, #8]
  f0:	add	sp, sp, #12
  f4:	pop	{pc}		; (ldr pc, [sp], #4)

000000f8 <pilha_tamanho>:
  f8:	cmp	r0, #0
  fc:	ldrne	r0, [r0, #4]
 100:	mvneq	r0, #0
 104:	bx	lr

00000108 <pilha_top>:
 108:	subs	r3, r0, #0
 10c:	beq	128 <pilha_top+0x20>
 110:	ldr	r0, [r3, #4]
 114:	cmp	r0, #0
 118:	beq	12c <pilha_top+0x24>
 11c:	ldr	r3, [r3]
 120:	ldr	r0, [r3]
 124:	bx	lr
 128:	mov	r0, r3
 12c:	bx	lr

00000130 <pilha_push>:
 130:	str	r4, [sp, #-8]!
 134:	subs	r4, r0, #0
 138:	str	lr, [sp, #4]
 13c:	beq	168 <pilha_push+0x38>
 140:	mov	r0, r1
 144:	bl	0 <pilha_novo_elemento>
 148:	cmp	r0, #0
 14c:	beq	168 <pilha_push+0x38>
 150:	ldrd	r2, [r4]
 154:	add	r3, r3, #1
 158:	cmp	r2, #0
 15c:	str	r3, [r4, #4]
 160:	strne	r2, [r0, #4]
 164:	str	r0, [r4]
 168:	ldr	r4, [sp]
 16c:	add	sp, sp, #4
 170:	pop	{pc}		; (ldr pc, [sp], #4)

00000174 <pilha_pop>:
 174:	subs	r3, r0, #0
 178:	bxeq	lr
 17c:	ldr	r2, [r3, #4]
 180:	cmp	r2, #0
 184:	bxeq	lr
 188:	str	r4, [sp, #-8]!
 18c:	sub	r2, r2, #1
 190:	ldr	r4, [r3]
 194:	ldrd	r0, [r4]
 198:	str	lr, [sp, #4]
 19c:	stm	r3, {r1, r2}
 1a0:	bl	0 <contentor_apaga>
 1a4:	mov	r0, r4
 1a8:	ldr	r4, [sp]
 1ac:	ldr	lr, [sp, #4]
 1b0:	add	sp, sp, #8
 1b4:	b	0 <free>
