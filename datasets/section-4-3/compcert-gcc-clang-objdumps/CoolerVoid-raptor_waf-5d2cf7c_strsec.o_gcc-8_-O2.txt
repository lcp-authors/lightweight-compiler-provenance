
../compcert-repos/CoolerVoid-raptor_waf-5d2cf7c/strsec.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <strlcpy>:
   0:	cmp	r2, #0
   4:	beq	60 <strlcpy+0x60>
   8:	sub	r2, r2, #1
   c:	mov	ip, r1
  10:	push	{lr}		; (str lr, [sp, #-4]!)
  14:	add	lr, r0, r2
  18:	b	30 <strlcpy+0x30>
  1c:	ldrb	r2, [r3, #-1]
  20:	mov	ip, r3
  24:	cmp	r2, #0
  28:	strb	r2, [r0], #1
  2c:	beq	54 <strlcpy+0x54>
  30:	cmp	lr, r0
  34:	add	r3, ip, #1
  38:	bne	1c <strlcpy+0x1c>
  3c:	mov	r2, #0
  40:	mov	r3, ip
  44:	strb	r2, [lr]
  48:	ldrb	r2, [r3], #1
  4c:	cmp	r2, #0
  50:	bne	48 <strlcpy+0x48>
  54:	sub	r0, r3, r1
  58:	sub	r0, r0, #1
  5c:	pop	{pc}		; (ldr pc, [sp], #4)
  60:	mov	r3, r1
  64:	ldrb	r2, [r3], #1
  68:	cmp	r2, #0
  6c:	bne	64 <strlcpy+0x64>
  70:	sub	r0, r3, r1
  74:	sub	r0, r0, #1
  78:	bx	lr

0000007c <strlcat>:
  7c:	cmp	r2, #0
  80:	strd	r4, [sp, #-16]!
  84:	str	r6, [sp, #8]
  88:	str	lr, [sp, #12]
  8c:	beq	128 <strlcat+0xac>
  90:	ldrb	r5, [r0]
  94:	cmp	r5, #0
  98:	beq	13c <strlcat+0xc0>
  9c:	add	r3, r0, #1
  a0:	add	r5, r0, r2
  a4:	b	b8 <strlcat+0x3c>
  a8:	ldrb	lr, [r3]
  ac:	add	r3, r3, #1
  b0:	cmp	lr, #0
  b4:	beq	c4 <strlcat+0x48>
  b8:	cmp	r5, r3
  bc:	mov	ip, r3
  c0:	bne	a8 <strlcat+0x2c>
  c4:	sub	r5, ip, r0
  c8:	subs	r2, r2, r5
  cc:	beq	12c <strlcat+0xb0>
  d0:	ldrb	lr, [r1]
  d4:	cmp	lr, #0
  d8:	movne	r4, r1
  dc:	beq	10c <strlcat+0x90>
  e0:	cmp	r2, #1
  e4:	mov	r3, ip
  e8:	beq	f8 <strlcat+0x7c>
  ec:	sub	r2, r2, #1
  f0:	strb	lr, [r3], #1
  f4:	mov	ip, r3
  f8:	ldrb	lr, [r4, #1]!
  fc:	cmp	lr, #0
 100:	bne	e0 <strlcat+0x64>
 104:	sub	r4, r4, r1
 108:	add	r5, r5, r4
 10c:	mov	r3, #0
 110:	strb	r3, [ip]
 114:	mov	r0, r5
 118:	ldrd	r4, [sp]
 11c:	ldr	r6, [sp, #8]
 120:	add	sp, sp, #12
 124:	pop	{pc}		; (ldr pc, [sp], #4)
 128:	mov	r5, r2
 12c:	mov	r0, r1
 130:	bl	0 <strlen>
 134:	add	r5, r5, r0
 138:	b	114 <strlcat+0x98>
 13c:	mov	ip, r0
 140:	b	d0 <strlcat+0x54>

00000144 <strnstr>:
 144:	strd	r4, [sp, #-32]!	; 0xffffffe0
 148:	mov	r5, r0
 14c:	strd	r6, [sp, #8]
 150:	strd	r8, [sp, #16]
 154:	str	sl, [sp, #24]
 158:	str	lr, [sp, #28]
 15c:	ldrb	r7, [r1]
 160:	cmp	r7, #0
 164:	beq	1c8 <strnstr+0x84>
 168:	add	r8, r1, #1
 16c:	add	r6, r0, r2
 170:	mov	r0, r8
 174:	bl	0 <strlen>
 178:	mov	r9, r0
 17c:	b	184 <strnstr+0x40>
 180:	mov	r5, r4
 184:	cmp	r6, r5
 188:	mov	r4, r5
 18c:	beq	1e4 <strnstr+0xa0>
 190:	ldrb	r3, [r4], #1
 194:	cmp	r3, #0
 198:	beq	1e4 <strnstr+0xa0>
 19c:	cmp	r7, r3
 1a0:	bne	180 <strnstr+0x3c>
 1a4:	sub	r3, r6, r4
 1a8:	mov	r2, r9
 1ac:	cmp	r3, r9
 1b0:	mov	r1, r8
 1b4:	mov	r0, r4
 1b8:	bcc	1e4 <strnstr+0xa0>
 1bc:	bl	0 <strncmp>
 1c0:	cmp	r0, #0
 1c4:	bne	180 <strnstr+0x3c>
 1c8:	mov	r0, r5
 1cc:	ldrd	r4, [sp]
 1d0:	ldrd	r6, [sp, #8]
 1d4:	ldrd	r8, [sp, #16]
 1d8:	ldr	sl, [sp, #24]
 1dc:	add	sp, sp, #28
 1e0:	pop	{pc}		; (ldr pc, [sp], #4)
 1e4:	mov	r5, #0
 1e8:	b	1c8 <strnstr+0x84>
