
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json_printer.dir/test_json_printer.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <MyGame_Example_Color_print_json_enum>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #24
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	str	r4, [sp, #8]
      14:	str	r5, [sp, #12]
      18:	str	r6, [sp, #16]
      1c:	str	r7, [sp, #20]
      20:	mov	r4, r0
      24:	and	r7, r1, #255	; 0xff
      28:	sub	r2, r7, #1
      2c:	and	ip, r7, r2
      30:	cmp	ip, #0
      34:	movne	r6, #1
      38:	moveq	r6, #0
      3c:	mov	r5, #0
      40:	mov	r0, #1
      44:	cmp	r7, #0
      48:	moveq	r3, #1
      4c:	movne	r3, #0
      50:	and	ip, r1, #244	; 0xf4
      54:	cmp	ip, #0
      58:	movne	r0, r0
      5c:	moveq	r0, r3
      60:	cmp	r0, #0
      64:	beq	8c <MyGame_Example_Color_print_json_enum+0x8c>
      68:	sbfx	r1, r1, #0, #8
      6c:	mov	r0, r4
      70:	ldr	r4, [sp, #8]
      74:	ldr	r5, [sp, #12]
      78:	ldr	r6, [sp, #16]
      7c:	ldr	r7, [sp, #20]
      80:	ldr	lr, [sp, #4]
      84:	add	sp, sp, #24
      88:	b	0 <flatcc_json_printer_int8>
      8c:	mov	r1, r6
      90:	mov	r0, r4
      94:	bl	0 <flatcc_json_printer_delimit_enum_flags>
      98:	and	r1, r7, #1
      9c:	cmp	r1, #0
      a0:	beq	bc <MyGame_Example_Color_print_json_enum+0xbc>
      a4:	mov	r1, #0
      a8:	mov	r5, #1
      ac:	ldr	r2, [pc, #116]	; 128 <MyGame_Example_Color_print_json_enum+0x128>
      b0:	mov	r3, #3
      b4:	mov	r0, r4
      b8:	bl	0 <flatcc_json_printer_enum_flag>
      bc:	and	r2, r7, #2
      c0:	cmp	r2, #0
      c4:	beq	e0 <MyGame_Example_Color_print_json_enum+0xe0>
      c8:	mov	r1, r5
      cc:	add	r5, r1, #1
      d0:	ldr	r2, [pc, #84]	; 12c <MyGame_Example_Color_print_json_enum+0x12c>
      d4:	mov	r3, #5
      d8:	mov	r0, r4
      dc:	bl	0 <flatcc_json_printer_enum_flag>
      e0:	and	r2, r7, #8
      e4:	cmp	r2, #0
      e8:	beq	100 <MyGame_Example_Color_print_json_enum+0x100>
      ec:	ldr	r2, [pc, #48]	; 124 <MyGame_Example_Color_print_json_enum+0x124>
      f0:	mov	r3, #4
      f4:	mov	r1, r5
      f8:	mov	r0, r4
      fc:	bl	0 <flatcc_json_printer_enum_flag>
     100:	mov	r1, r6
     104:	mov	r0, r4
     108:	ldr	r4, [sp, #8]
     10c:	ldr	r5, [sp, #12]
     110:	ldr	r6, [sp, #16]
     114:	ldr	r7, [sp, #20]
     118:	ldr	lr, [sp, #4]
     11c:	add	sp, sp, #24
     120:	b	0 <flatcc_json_printer_delimit_enum_flags>
     124:	.word	0x00000064
     128:	.word	0x000003f1
     12c:	.word	0x0000005e

00000130 <MyGame_Example_Any_print_json_union_type>:
     130:	mov	ip, sp
     134:	sub	sp, sp, #8
     138:	str	ip, [sp]
     13c:	str	lr, [sp, #4]
     140:	cmp	r1, #3
     144:	bcs	180 <MyGame_Example_Any_print_json_union_type+0x50>
     148:	cmp	r1, #1
     14c:	beq	16c <MyGame_Example_Any_print_json_union_type+0x3c>
     150:	cmp	r1, #2
     154:	bne	1a4 <MyGame_Example_Any_print_json_union_type+0x74>
     158:	ldr	r1, [pc, #120]	; 1d8 <MyGame_Example_Any_print_json_union_type+0xa8>
     15c:	mov	r2, #23
     160:	ldr	lr, [sp, #4]
     164:	add	sp, sp, #8
     168:	b	0 <flatcc_json_printer_enum>
     16c:	ldr	r1, [pc, #88]	; 1cc <MyGame_Example_Any_print_json_union_type+0x9c>
     170:	mov	r2, #7
     174:	ldr	lr, [sp, #4]
     178:	add	sp, sp, #8
     17c:	b	0 <flatcc_json_printer_enum>
     180:	cmp	r1, #3
     184:	beq	1b8 <MyGame_Example_Any_print_json_union_type+0x88>
     188:	cmp	r1, #4
     18c:	bne	1a4 <MyGame_Example_Any_print_json_union_type+0x74>
     190:	ldr	r1, [pc, #68]	; 1dc <MyGame_Example_Any_print_json_union_type+0xac>
     194:	mov	r2, #3
     198:	ldr	lr, [sp, #4]
     19c:	add	sp, sp, #8
     1a0:	b	0 <flatcc_json_printer_enum>
     1a4:	ldr	r1, [pc, #40]	; 1d4 <MyGame_Example_Any_print_json_union_type+0xa4>
     1a8:	mov	r2, #4
     1ac:	ldr	lr, [sp, #4]
     1b0:	add	sp, sp, #8
     1b4:	b	0 <flatcc_json_printer_enum>
     1b8:	ldr	r1, [pc, #16]	; 1d0 <MyGame_Example_Any_print_json_union_type+0xa0>
     1bc:	mov	r2, #8
     1c0:	ldr	lr, [sp, #4]
     1c4:	add	sp, sp, #8
     1c8:	b	0 <flatcc_json_printer_enum>
     1cc:	.word	0x000003f5
     1d0:	.word	0x0000035c
     1d4:	.word	0x00000105
     1d8:	.word	0x000002ff
     1dc:	.word	0x00000193

000001e0 <MyGame_Example_Any_print_json_union>:
     1e0:	mov	ip, sp
     1e4:	sub	sp, sp, #8
     1e8:	str	ip, [sp]
     1ec:	str	lr, [sp, #4]
     1f0:	ldrb	r2, [r1, #8]
     1f4:	cmp	r2, #3
     1f8:	bcs	22c <MyGame_Example_Any_print_json_union+0x4c>
     1fc:	cmp	r2, #1
     200:	beq	21c <MyGame_Example_Any_print_json_union+0x3c>
     204:	cmp	r2, #2
     208:	bne	24c <MyGame_Example_Any_print_json_union+0x6c>
     20c:	ldr	r2, [pc, #92]	; 270 <MyGame_Example_Any_print_json_union+0x90>
     210:	ldr	lr, [sp, #4]
     214:	add	sp, sp, #8
     218:	b	0 <flatcc_json_printer_union_table>
     21c:	ldr	r2, [pc, #72]	; 26c <MyGame_Example_Any_print_json_union+0x8c>
     220:	ldr	lr, [sp, #4]
     224:	add	sp, sp, #8
     228:	b	0 <flatcc_json_printer_union_table>
     22c:	cmp	r2, #3
     230:	beq	258 <MyGame_Example_Any_print_json_union+0x78>
     234:	cmp	r2, #4
     238:	bne	24c <MyGame_Example_Any_print_json_union+0x6c>
     23c:	ldr	r2, [pc, #48]	; 274 <MyGame_Example_Any_print_json_union+0x94>
     240:	ldr	lr, [sp, #4]
     244:	add	sp, sp, #8
     248:	b	0 <flatcc_json_printer_union_table>
     24c:	ldr	lr, [sp, #4]
     250:	add	sp, sp, #8
     254:	bx	lr
     258:	ldr	r2, [pc, #8]	; 268 <MyGame_Example_Any_print_json_union+0x88>
     25c:	ldr	lr, [sp, #4]
     260:	add	sp, sp, #8
     264:	b	0 <flatcc_json_printer_union_table>
	...

00000278 <Fantasy_Character_print_json_union_type>:
     278:	mov	ip, sp
     27c:	sub	sp, sp, #8
     280:	str	ip, [sp]
     284:	str	lr, [sp, #4]
     288:	cmp	r1, #10
     28c:	bcs	2e4 <Fantasy_Character_print_json_union_type+0x6c>
     290:	cmp	r1, #2
     294:	beq	2d0 <Fantasy_Character_print_json_union_type+0x58>
     298:	cmp	r1, #8
     29c:	beq	2bc <Fantasy_Character_print_json_union_type+0x44>
     2a0:	cmp	r1, #9
     2a4:	bne	310 <Fantasy_Character_print_json_union_type+0x98>
     2a8:	ldr	r1, [pc, #176]	; 360 <Fantasy_Character_print_json_union_type+0xe8>
     2ac:	mov	r2, #5
     2b0:	ldr	lr, [sp, #4]
     2b4:	add	sp, sp, #8
     2b8:	b	0 <flatcc_json_printer_enum>
     2bc:	ldr	r1, [pc, #140]	; 350 <Fantasy_Character_print_json_union_type+0xd8>
     2c0:	mov	r2, #8
     2c4:	ldr	lr, [sp, #4]
     2c8:	add	sp, sp, #8
     2cc:	b	0 <flatcc_json_printer_enum>
     2d0:	ldr	r1, [pc, #116]	; 34c <Fantasy_Character_print_json_union_type+0xd4>
     2d4:	mov	r2, #5
     2d8:	ldr	lr, [sp, #4]
     2dc:	add	sp, sp, #8
     2e0:	b	0 <flatcc_json_printer_enum>
     2e4:	cmp	r1, #10
     2e8:	beq	338 <Fantasy_Character_print_json_union_type+0xc0>
     2ec:	cmp	r1, #11
     2f0:	beq	324 <Fantasy_Character_print_json_union_type+0xac>
     2f4:	cmp	r1, #255	; 0xff
     2f8:	bne	310 <Fantasy_Character_print_json_union_type+0x98>
     2fc:	ldr	r1, [pc, #84]	; 358 <Fantasy_Character_print_json_union_type+0xe0>
     300:	mov	r2, #6
     304:	ldr	lr, [sp, #4]
     308:	add	sp, sp, #8
     30c:	b	0 <flatcc_json_printer_enum>
     310:	ldr	r1, [pc, #60]	; 354 <Fantasy_Character_print_json_union_type+0xdc>
     314:	mov	r2, #4
     318:	ldr	lr, [sp, #4]
     31c:	add	sp, sp, #8
     320:	b	0 <flatcc_json_printer_enum>
     324:	ldr	r1, [pc, #56]	; 364 <Fantasy_Character_print_json_union_type+0xec>
     328:	mov	r2, #5
     32c:	ldr	lr, [sp, #4]
     330:	add	sp, sp, #8
     334:	b	0 <flatcc_json_printer_enum>
     338:	ldr	r1, [pc, #28]	; 35c <Fantasy_Character_print_json_union_type+0xe4>
     33c:	mov	r2, #7
     340:	ldr	lr, [sp, #4]
     344:	add	sp, sp, #8
     348:	b	0 <flatcc_json_printer_enum>
     34c:	.word	0x000004a8
     350:	.word	0x00000021
     354:	.word	0x00000105
     358:	.word	0x00000324
     35c:	.word	0x000005a1
     360:	.word	0x00000197
     364:	.word	0x00000572

00000368 <Fantasy_Character_print_json_union>:
     368:	mov	ip, sp
     36c:	sub	sp, sp, #8
     370:	str	ip, [sp]
     374:	str	lr, [sp, #4]
     378:	ldrb	r2, [r1, #8]
     37c:	cmp	r2, #10
     380:	bcs	3cc <Fantasy_Character_print_json_union+0x64>
     384:	cmp	r2, #2
     388:	beq	3bc <Fantasy_Character_print_json_union+0x54>
     38c:	cmp	r2, #8
     390:	beq	3ac <Fantasy_Character_print_json_union+0x44>
     394:	cmp	r2, #9
     398:	bne	3f0 <Fantasy_Character_print_json_union+0x88>
     39c:	ldr	r2, [pc, #124]	; 420 <Fantasy_Character_print_json_union+0xb8>
     3a0:	ldr	lr, [sp, #4]
     3a4:	add	sp, sp, #8
     3a8:	b	0 <flatcc_json_printer_union_struct>
     3ac:	ldr	r2, [pc, #104]	; 41c <Fantasy_Character_print_json_union+0xb4>
     3b0:	ldr	lr, [sp, #4]
     3b4:	add	sp, sp, #8
     3b8:	b	0 <flatcc_json_printer_union_struct>
     3bc:	ldr	r2, [pc, #84]	; 418 <Fantasy_Character_print_json_union+0xb0>
     3c0:	ldr	lr, [sp, #4]
     3c4:	add	sp, sp, #8
     3c8:	b	0 <flatcc_json_printer_union_table>
     3cc:	cmp	r2, #10
     3d0:	beq	408 <Fantasy_Character_print_json_union+0xa0>
     3d4:	cmp	r2, #11
     3d8:	beq	3fc <Fantasy_Character_print_json_union+0x94>
     3dc:	cmp	r2, #255	; 0xff
     3e0:	bne	3f0 <Fantasy_Character_print_json_union+0x88>
     3e4:	ldr	lr, [sp, #4]
     3e8:	add	sp, sp, #8
     3ec:	b	0 <flatcc_json_printer_union_string>
     3f0:	ldr	lr, [sp, #4]
     3f4:	add	sp, sp, #8
     3f8:	bx	lr
     3fc:	ldr	lr, [sp, #4]
     400:	add	sp, sp, #8
     404:	b	0 <flatcc_json_printer_union_string>
     408:	ldr	r2, [pc, #16]	; 420 <Fantasy_Character_print_json_union+0xb8>
     40c:	ldr	lr, [sp, #4]
     410:	add	sp, sp, #8
     414:	b	0 <flatcc_json_printer_union_struct>
	...

00000424 <MyGame_Example_Test_print_json_struct>:
     424:	mov	ip, sp
     428:	sub	sp, sp, #24
     42c:	str	ip, [sp, #8]
     430:	str	lr, [sp, #12]
     434:	str	r4, [sp, #16]
     438:	str	r5, [sp, #20]
     43c:	mov	r4, r1
     440:	mov	r5, r0
     444:	mov	r1, #0
     448:	mov	r3, #0
     44c:	ldr	r0, [pc, #80]	; 4a4 <MyGame_Example_Test_print_json_struct+0x80>
     450:	mov	r2, #1
     454:	str	r2, [sp, #4]
     458:	str	r0, [sp]
     45c:	mov	r2, r4
     460:	mov	r0, r5
     464:	bl	0 <flatcc_json_printer_int16_struct_field>
     468:	mov	r1, #1
     46c:	mov	r3, #2
     470:	ldr	r0, [pc, #40]	; 4a0 <MyGame_Example_Test_print_json_struct+0x7c>
     474:	mov	r2, #1
     478:	str	r2, [sp, #4]
     47c:	str	r0, [sp]
     480:	mov	r2, r4
     484:	mov	r0, r5
     488:	bl	0 <flatcc_json_printer_int8_struct_field>
     48c:	ldr	r4, [sp, #16]
     490:	ldr	r5, [sp, #20]
     494:	ldr	lr, [sp, #12]
     498:	add	sp, sp, #24
     49c:	bx	lr
     4a0:	.word	0x000001b8
     4a4:	.word	0x00000578

000004a8 <MyGame_Example_Vec3_print_json_struct>:
     4a8:	mov	ip, sp
     4ac:	sub	sp, sp, #40	; 0x28
     4b0:	str	ip, [sp, #12]
     4b4:	str	lr, [sp, #16]
     4b8:	str	r4, [sp, #24]
     4bc:	str	r5, [sp, #28]
     4c0:	str	r6, [sp, #32]
     4c4:	mov	r4, r1
     4c8:	mov	r5, r0
     4cc:	mov	r1, #0
     4d0:	mov	r3, #0
     4d4:	ldr	r0, [pc, #264]	; 5e4 <MyGame_Example_Vec3_print_json_struct+0x13c>
     4d8:	mov	r2, #1
     4dc:	str	r2, [sp, #4]
     4e0:	str	r0, [sp]
     4e4:	mov	r2, r4
     4e8:	mov	r0, r5
     4ec:	bl	0 <flatcc_json_printer_float_struct_field>
     4f0:	mov	r1, #1
     4f4:	mov	r3, #4
     4f8:	ldr	r0, [pc, #220]	; 5dc <MyGame_Example_Vec3_print_json_struct+0x134>
     4fc:	mov	r2, #1
     500:	str	r2, [sp, #4]
     504:	str	r0, [sp]
     508:	mov	r2, r4
     50c:	mov	r0, r5
     510:	bl	0 <flatcc_json_printer_float_struct_field>
     514:	mov	r1, #2
     518:	mov	r3, #8
     51c:	ldr	r0, [pc, #180]	; 5d8 <MyGame_Example_Vec3_print_json_struct+0x130>
     520:	mov	r2, #1
     524:	str	r2, [sp, #4]
     528:	str	r0, [sp]
     52c:	mov	r2, r4
     530:	mov	r0, r5
     534:	bl	0 <flatcc_json_printer_float_struct_field>
     538:	mov	r1, #3
     53c:	mov	r3, #16
     540:	ldr	r0, [pc, #160]	; 5e8 <MyGame_Example_Vec3_print_json_struct+0x140>
     544:	mov	r2, #5
     548:	str	r2, [sp, #4]
     54c:	str	r0, [sp]
     550:	mov	r2, r4
     554:	mov	r0, r5
     558:	bl	0 <flatcc_json_printer_double_struct_field>
     55c:	mov	r1, #4
     560:	mov	r3, #24
     564:	ldr	r6, [pc, #100]	; 5d0 <MyGame_Example_Vec3_print_json_struct+0x128>
     568:	mov	r0, #5
     56c:	ldr	r2, [pc, #108]	; 5e0 <MyGame_Example_Vec3_print_json_struct+0x138>
     570:	str	r2, [sp, #8]
     574:	str	r0, [sp, #4]
     578:	str	r6, [sp]
     57c:	mov	r2, r4
     580:	mov	r0, r5
     584:	bl	0 <flatcc_json_printer_int8_enum_struct_field>
     588:	mov	r1, #5
     58c:	mov	r3, #26
     590:	ldr	r2, [pc, #60]	; 5d4 <MyGame_Example_Vec3_print_json_struct+0x12c>
     594:	mov	r6, #5
     598:	ldr	r0, [pc, #44]	; 5cc <MyGame_Example_Vec3_print_json_struct+0x124>
     59c:	str	r0, [sp, #8]
     5a0:	str	r6, [sp, #4]
     5a4:	str	r2, [sp]
     5a8:	mov	r2, r4
     5ac:	mov	r0, r5
     5b0:	bl	0 <flatcc_json_printer_embedded_struct_field>
     5b4:	ldr	r4, [sp, #24]
     5b8:	ldr	r5, [sp, #28]
     5bc:	ldr	r6, [sp, #32]
     5c0:	ldr	lr, [sp, #16]
     5c4:	add	sp, sp, #40	; 0x28
     5c8:	bx	lr
     5cc:	.word	0x00000000
     5d0:	.word	0x0000057a
     5d4:	.word	0x000000ff
     5d8:	.word	0x000001f0
     5dc:	.word	0x0000009d
     5e0:	.word	0x00000000
     5e4:	.word	0x00000074
     5e8:	.word	0x000001b2

000005ec <MyGame_Example_Ability_print_json_struct>:
     5ec:	mov	ip, sp
     5f0:	sub	sp, sp, #24
     5f4:	str	ip, [sp, #8]
     5f8:	str	lr, [sp, #12]
     5fc:	str	r4, [sp, #16]
     600:	str	r5, [sp, #20]
     604:	mov	r4, r1
     608:	mov	r5, r0
     60c:	mov	r1, #0
     610:	mov	r3, #0
     614:	ldr	r0, [pc, #80]	; 66c <MyGame_Example_Ability_print_json_struct+0x80>
     618:	mov	r2, #2
     61c:	str	r2, [sp, #4]
     620:	str	r0, [sp]
     624:	mov	r2, r4
     628:	mov	r0, r5
     62c:	bl	0 <flatcc_json_printer_uint32_struct_field>
     630:	mov	r1, #1
     634:	mov	r3, #4
     638:	ldr	r0, [pc, #40]	; 668 <MyGame_Example_Ability_print_json_struct+0x7c>
     63c:	mov	r2, #8
     640:	str	r2, [sp, #4]
     644:	str	r0, [sp]
     648:	mov	r2, r4
     64c:	mov	r0, r5
     650:	bl	0 <flatcc_json_printer_uint32_struct_field>
     654:	ldr	r4, [sp, #16]
     658:	ldr	r5, [sp, #20]
     65c:	ldr	lr, [sp, #12]
     660:	add	sp, sp, #24
     664:	bx	lr
     668:	.word	0x0000013e
     66c:	.word	0x00000365

00000670 <Fantasy_Rapunzel_print_json_struct>:
     670:	mov	ip, sp
     674:	sub	sp, sp, #24
     678:	str	ip, [sp, #8]
     67c:	str	lr, [sp, #12]
     680:	str	r4, [sp, #16]
     684:	str	r5, [sp, #20]
     688:	mov	r2, #0
     68c:	mov	r3, #0
     690:	ldr	r4, [pc, #44]	; 6c4 <Fantasy_Rapunzel_print_json_struct+0x54>
     694:	mov	r5, #11
     698:	str	r5, [sp, #4]
     69c:	str	r4, [sp]
     6a0:	mov	ip, r1
     6a4:	mov	r1, r2
     6a8:	mov	r2, ip
     6ac:	bl	0 <flatcc_json_printer_uint16_struct_field>
     6b0:	ldr	r4, [sp, #16]
     6b4:	ldr	r5, [sp, #20]
     6b8:	ldr	lr, [sp, #12]
     6bc:	add	sp, sp, #24
     6c0:	bx	lr
     6c4:	.word	0x000001ba

000006c8 <Fantasy_BookReader_print_json_struct>:
     6c8:	mov	ip, sp
     6cc:	sub	sp, sp, #24
     6d0:	str	ip, [sp, #8]
     6d4:	str	lr, [sp, #12]
     6d8:	str	r4, [sp, #16]
     6dc:	str	r5, [sp, #20]
     6e0:	mov	r2, #0
     6e4:	mov	r3, #0
     6e8:	ldr	r4, [pc, #44]	; 71c <Fantasy_BookReader_print_json_struct+0x54>
     6ec:	mov	r5, #10
     6f0:	str	r5, [sp, #4]
     6f4:	str	r4, [sp]
     6f8:	mov	ip, r1
     6fc:	mov	r1, r2
     700:	mov	r2, ip
     704:	bl	0 <flatcc_json_printer_int32_struct_field>
     708:	ldr	r4, [sp, #16]
     70c:	ldr	r5, [sp, #20]
     710:	ldr	lr, [sp, #12]
     714:	add	sp, sp, #24
     718:	bx	lr
     71c:	.word	0x0000010a

00000720 <MyGame_InParentNamespace_print_json_table>:
     720:	mov	ip, sp
     724:	sub	sp, sp, #8
     728:	str	ip, [sp]
     72c:	str	lr, [sp, #4]
     730:	ldr	lr, [sp, #4]
     734:	add	sp, sp, #8
     738:	bx	lr

0000073c <MyGame_Example2_Monster_print_json_table>:
     73c:	mov	ip, sp
     740:	sub	sp, sp, #8
     744:	str	ip, [sp]
     748:	str	lr, [sp, #4]
     74c:	ldr	lr, [sp, #4]
     750:	add	sp, sp, #8
     754:	bx	lr

00000758 <MyGame_Example_TestSimpleTableWithEnum_print_json_table>:
     758:	mov	ip, sp
     75c:	sub	sp, sp, #32
     760:	str	ip, [sp, #12]
     764:	str	lr, [sp, #16]
     768:	str	r4, [sp, #24]
     76c:	str	r5, [sp, #28]
     770:	mov	r4, r1
     774:	mov	r5, r0
     778:	mov	r2, #0
     77c:	ldr	r3, [pc, #184]	; 83c <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xe4>
     780:	mov	ip, #5
     784:	mov	r1, #2
     788:	ldr	r0, [pc, #164]	; 834 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xdc>
     78c:	str	r0, [sp, #8]
     790:	str	r1, [sp, #4]
     794:	str	ip, [sp]
     798:	mov	r1, r4
     79c:	mov	r0, r5
     7a0:	bl	0 <flatcc_json_printer_int8_enum_field>
     7a4:	mov	r2, #1
     7a8:	ldr	r3, [pc, #128]	; 830 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xd8>
     7ac:	mov	r0, #6
     7b0:	mov	ip, #2
     7b4:	ldr	r1, [pc, #120]	; 834 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xdc>
     7b8:	str	r1, [sp, #8]
     7bc:	str	ip, [sp, #4]
     7c0:	str	r0, [sp]
     7c4:	mov	r1, r4
     7c8:	mov	r0, r5
     7cc:	bl	0 <flatcc_json_printer_int8_enum_field>
     7d0:	mov	r2, #2
     7d4:	ldr	r3, [pc, #80]	; 82c <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xd4>
     7d8:	mov	ip, #2
     7dc:	mov	r0, #2
     7e0:	str	r0, [sp, #4]
     7e4:	str	ip, [sp]
     7e8:	mov	r1, r4
     7ec:	mov	r0, r5
     7f0:	bl	0 <flatcc_json_printer_uint8_field>
     7f4:	mov	r2, #3
     7f8:	ldr	r3, [pc, #56]	; 838 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xe0>
     7fc:	mov	ip, #3
     800:	mov	r1, #2
     804:	str	r1, [sp, #4]
     808:	str	ip, [sp]
     80c:	mov	r1, r4
     810:	mov	r0, r5
     814:	bl	0 <flatcc_json_printer_uint8_field>
     818:	ldr	r4, [sp, #24]
     81c:	ldr	r5, [sp, #28]
     820:	ldr	lr, [sp, #16]
     824:	add	sp, sp, #32
     828:	bx	lr
     82c:	.word	0x00000054
     830:	.word	0x00000317
     834:	.word	0x00000000
     838:	.word	0x000002ab
     83c:	.word	0x00000356

00000840 <MyGame_Example_Stat_print_json_table>:
     840:	mov	ip, sp
     844:	sub	sp, sp, #32
     848:	str	ip, [sp, #16]
     84c:	str	lr, [sp, #20]
     850:	str	r4, [sp, #24]
     854:	str	r5, [sp, #28]
     858:	mov	r4, r1
     85c:	mov	r5, r0
     860:	mov	r2, #0
     864:	ldr	r3, [pc, #124]	; 8e8 <MyGame_Example_Stat_print_json_table+0xa8>
     868:	mov	r1, #2
     86c:	str	r1, [sp]
     870:	mov	r1, r4
     874:	mov	r0, r5
     878:	bl	0 <flatcc_json_printer_string_field>
     87c:	mov	r2, #1
     880:	ldr	r3, [pc, #88]	; 8e0 <MyGame_Example_Stat_print_json_table+0xa0>
     884:	mov	ip, #3
     888:	mov	r1, #0
     88c:	mov	r0, #0
     890:	str	r1, [sp, #12]
     894:	str	r0, [sp, #8]
     898:	str	ip, [sp]
     89c:	mov	r1, r4
     8a0:	mov	r0, r5
     8a4:	bl	0 <flatcc_json_printer_int64_field>
     8a8:	mov	r2, #2
     8ac:	ldr	r3, [pc, #48]	; 8e4 <MyGame_Example_Stat_print_json_table+0xa4>
     8b0:	mov	r1, #5
     8b4:	mov	r0, #0
     8b8:	str	r0, [sp, #4]
     8bc:	str	r1, [sp]
     8c0:	mov	r1, r4
     8c4:	mov	r0, r5
     8c8:	bl	0 <flatcc_json_printer_uint16_field>
     8cc:	ldr	r4, [sp, #24]
     8d0:	ldr	r5, [sp, #28]
     8d4:	ldr	lr, [sp, #20]
     8d8:	add	sp, sp, #32
     8dc:	bx	lr
     8e0:	.word	0x000004ae
     8e4:	.word	0x00000069
     8e8:	.word	0x00000365

000008ec <MyGame_Example_Alt_print_json_table>:
     8ec:	mov	ip, sp
     8f0:	sub	sp, sp, #40	; 0x28
     8f4:	str	ip, [sp, #12]
     8f8:	str	lr, [sp, #16]
     8fc:	str	r4, [sp, #24]
     900:	str	r5, [sp, #28]
     904:	str	r6, [sp, #32]
     908:	mov	r4, r1
     90c:	mov	r5, r0
     910:	mov	r2, #0
     914:	ldr	r3, [pc, #132]	; 9a0 <MyGame_Example_Alt_print_json_table+0xb4>
     918:	mov	r0, #6
     91c:	ldr	r1, [pc, #128]	; 9a4 <MyGame_Example_Alt_print_json_table+0xb8>
     920:	str	r1, [sp, #4]
     924:	str	r0, [sp]
     928:	mov	r1, r4
     92c:	mov	r0, r5
     930:	bl	0 <flatcc_json_printer_table_field>
     934:	mov	r2, #1
     938:	ldr	r3, [pc, #116]	; 9b4 <MyGame_Example_Alt_print_json_table+0xc8>
     93c:	mov	r0, #5
     940:	ldr	r1, [pc, #84]	; 99c <MyGame_Example_Alt_print_json_table+0xb0>
     944:	str	r1, [sp, #4]
     948:	str	r0, [sp]
     94c:	mov	r1, r4
     950:	mov	r0, r5
     954:	bl	0 <flatcc_json_printer_table_field>
     958:	mov	r2, #3
     95c:	ldr	r3, [pc, #76]	; 9b0 <MyGame_Example_Alt_print_json_table+0xc4>
     960:	mov	r0, #7
     964:	ldr	r1, [pc, #64]	; 9ac <MyGame_Example_Alt_print_json_table+0xc0>
     968:	ldr	r6, [pc, #56]	; 9a8 <MyGame_Example_Alt_print_json_table+0xbc>
     96c:	str	r6, [sp, #8]
     970:	str	r1, [sp, #4]
     974:	str	r0, [sp]
     978:	mov	r1, r4
     97c:	mov	r0, r5
     980:	bl	0 <flatcc_json_printer_union_vector_field>
     984:	ldr	r4, [sp, #24]
     988:	ldr	r5, [sp, #28]
     98c:	ldr	r6, [sp, #32]
     990:	ldr	lr, [sp, #16]
     994:	add	sp, sp, #40	; 0x28
     998:	bx	lr
     99c:	.word	0x00000000
     9a0:	.word	0x00000368
	...
     9b0:	.word	0x0000032b
     9b4:	.word	0x000005a9

000009b8 <MyGame_Example_TestJSONPrefix_print_json_table>:
     9b8:	mov	ip, sp
     9bc:	sub	sp, sp, #24
     9c0:	str	ip, [sp, #8]
     9c4:	str	lr, [sp, #12]
     9c8:	str	r4, [sp, #16]
     9cc:	str	r5, [sp, #20]
     9d0:	mov	r4, r1
     9d4:	mov	r5, r0
     9d8:	mov	r2, #0
     9dc:	ldr	r3, [pc, #136]	; a6c <MyGame_Example_TestJSONPrefix_print_json_table+0xb4>
     9e0:	mov	r1, #21
     9e4:	ldr	r0, [pc, #108]	; a58 <MyGame_Example_TestJSONPrefix_print_json_table+0xa0>
     9e8:	str	r0, [sp, #4]
     9ec:	str	r1, [sp]
     9f0:	mov	r1, r4
     9f4:	mov	r0, r5
     9f8:	bl	0 <flatcc_json_printer_table_field>
     9fc:	mov	r2, #1
     a00:	ldr	r3, [pc, #92]	; a64 <MyGame_Example_TestJSONPrefix_print_json_table+0xac>
     a04:	mov	ip, #22
     a08:	ldr	r0, [pc, #76]	; a5c <MyGame_Example_TestJSONPrefix_print_json_table+0xa4>
     a0c:	str	r0, [sp, #4]
     a10:	str	ip, [sp]
     a14:	mov	r1, r4
     a18:	mov	r0, r5
     a1c:	bl	0 <flatcc_json_printer_table_field>
     a20:	mov	r2, #2
     a24:	ldr	r3, [pc, #60]	; a68 <MyGame_Example_TestJSONPrefix_print_json_table+0xb0>
     a28:	mov	ip, #22
     a2c:	ldr	r1, [pc, #44]	; a60 <MyGame_Example_TestJSONPrefix_print_json_table+0xa8>
     a30:	str	r1, [sp, #4]
     a34:	str	ip, [sp]
     a38:	mov	r1, r4
     a3c:	mov	r0, r5
     a40:	bl	0 <flatcc_json_printer_table_field>
     a44:	ldr	r4, [sp, #16]
     a48:	ldr	r5, [sp, #20]
     a4c:	ldr	lr, [sp, #12]
     a50:	add	sp, sp, #24
     a54:	bx	lr
	...
     a64:	.word	0x000003da
     a68:	.word	0x0000009f
     a6c:	.word	0x000002cf

00000a70 <MyGame_Example_TestJSONPrefixParsing_print_json_table>:
     a70:	mov	ip, sp
     a74:	sub	sp, sp, #32
     a78:	str	ip, [sp, #16]
     a7c:	str	lr, [sp, #20]
     a80:	str	r4, [sp, #24]
     a84:	str	r5, [sp, #28]
     a88:	mov	r4, r1
     a8c:	mov	r5, r0
     a90:	mov	r2, #0
     a94:	ldr	r3, [pc, #352]	; bfc <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x18c>
     a98:	mov	r1, #4
     a9c:	str	r1, [sp]
     aa0:	mov	r1, r4
     aa4:	mov	r0, r5
     aa8:	bl	0 <flatcc_json_printer_string_field>
     aac:	mov	r2, #1
     ab0:	ldr	r3, [pc, #316]	; bf4 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x184>
     ab4:	mov	r0, #9
     ab8:	mov	r1, #0
     abc:	str	r1, [sp, #4]
     ac0:	str	r0, [sp]
     ac4:	mov	r1, r4
     ac8:	mov	r0, r5
     acc:	bl	0 <flatcc_json_printer_uint32_field>
     ad0:	mov	r2, #2
     ad4:	ldr	r3, [pc, #300]	; c08 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x198>
     ad8:	mov	r0, #4
     adc:	str	r0, [sp]
     ae0:	mov	r1, r4
     ae4:	mov	r0, r5
     ae8:	bl	0 <flatcc_json_printer_string_field>
     aec:	mov	r2, #3
     af0:	ldr	r3, [pc, #264]	; c00 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x190>
     af4:	mov	r1, #8
     af8:	mov	r0, #0
     afc:	mov	ip, #0
     b00:	str	r0, [sp, #12]
     b04:	str	ip, [sp, #8]
     b08:	str	r1, [sp]
     b0c:	mov	r1, r4
     b10:	mov	r0, r5
     b14:	bl	0 <flatcc_json_printer_int64_field>
     b18:	mov	r2, #4
     b1c:	ldr	r3, [pc, #224]	; c04 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x194>
     b20:	mov	r1, #4
     b24:	str	r1, [sp]
     b28:	mov	r1, r4
     b2c:	mov	r0, r5
     b30:	bl	0 <flatcc_json_printer_string_field>
     b34:	mov	r2, #5
     b38:	ldr	r3, [pc, #168]	; be8 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x178>
     b3c:	mov	r1, #8
     b40:	mov	r0, #0
     b44:	mov	ip, #0
     b48:	str	r0, [sp, #12]
     b4c:	str	ip, [sp, #8]
     b50:	str	r1, [sp]
     b54:	mov	r1, r4
     b58:	mov	r0, r5
     b5c:	bl	0 <flatcc_json_printer_int64_field>
     b60:	mov	r2, #6
     b64:	ldr	r3, [pc, #140]	; bf8 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x188>
     b68:	mov	r1, #9
     b6c:	mov	r0, #0
     b70:	str	r0, [sp, #4]
     b74:	str	r1, [sp]
     b78:	mov	r1, r4
     b7c:	mov	r0, r5
     b80:	bl	0 <flatcc_json_printer_uint32_field>
     b84:	mov	r2, #7
     b88:	ldr	r3, [pc, #92]	; bec <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x17c>
     b8c:	mov	ip, #8
     b90:	mov	r1, #0
     b94:	mov	r0, #0
     b98:	str	r1, [sp, #12]
     b9c:	str	r0, [sp, #8]
     ba0:	str	ip, [sp]
     ba4:	mov	r1, r4
     ba8:	mov	r0, r5
     bac:	bl	0 <flatcc_json_printer_int64_field>
     bb0:	mov	r2, #8
     bb4:	ldr	r3, [pc, #52]	; bf0 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x180>
     bb8:	mov	r1, #9
     bbc:	mov	r0, #0
     bc0:	str	r0, [sp, #4]
     bc4:	str	r1, [sp]
     bc8:	mov	r1, r4
     bcc:	mov	r0, r5
     bd0:	bl	0 <flatcc_json_printer_uint32_field>
     bd4:	ldr	r4, [sp, #24]
     bd8:	ldr	r5, [sp, #28]
     bdc:	ldr	lr, [sp, #20]
     be0:	add	sp, sp, #32
     be4:	bx	lr
     be8:	.word	0x000003fd
     bec:	.word	0x000001f2
     bf0:	.word	0x000002af
     bf4:	.word	0x0000033c
     bf8:	.word	0x00000411
     bfc:	.word	0x0000046e
     c00:	.word	0x00000333
     c04:	.word	0x00000098
     c08:	.word	0x00000115

00000c0c <MyGame_Example_TestJSONPrefixParsing2_print_json_table>:
     c0c:	mov	ip, sp
     c10:	sub	sp, sp, #40	; 0x28
     c14:	str	ip, [sp, #16]
     c18:	str	lr, [sp, #20]
     c1c:	str	r4, [sp, #24]
     c20:	str	r5, [sp, #28]
     c24:	str	r6, [sp, #32]
     c28:	mov	r4, r1
     c2c:	mov	r5, r0
     c30:	mov	r2, #0
     c34:	ldr	r3, [pc, #92]	; c98 <MyGame_Example_TestJSONPrefixParsing2_print_json_table+0x8c>
     c38:	mov	r6, #15
     c3c:	mov	r1, #0
     c40:	mov	r0, #0
     c44:	str	r1, [sp, #12]
     c48:	str	r0, [sp, #8]
     c4c:	str	r6, [sp]
     c50:	mov	r1, r4
     c54:	mov	r0, r5
     c58:	bl	0 <flatcc_json_printer_int64_field>
     c5c:	mov	r2, #1
     c60:	ldr	r3, [pc, #52]	; c9c <MyGame_Example_TestJSONPrefixParsing2_print_json_table+0x90>
     c64:	mov	ip, #16
     c68:	mov	r0, #0
     c6c:	str	r0, [sp, #4]
     c70:	str	ip, [sp]
     c74:	mov	r1, r4
     c78:	mov	r0, r5
     c7c:	bl	0 <flatcc_json_printer_uint32_field>
     c80:	ldr	r4, [sp, #24]
     c84:	ldr	r5, [sp, #28]
     c88:	ldr	r6, [sp, #32]
     c8c:	ldr	lr, [sp, #20]
     c90:	add	sp, sp, #40	; 0x28
     c94:	bx	lr
     c98:	.word	0x00000221
     c9c:	.word	0x000000b6

00000ca0 <MyGame_Example_TestJSONPrefixParsing3_print_json_table>:
     ca0:	mov	ip, sp
     ca4:	sub	sp, sp, #40	; 0x28
     ca8:	str	ip, [sp, #16]
     cac:	str	lr, [sp, #20]
     cb0:	str	r4, [sp, #24]
     cb4:	str	r5, [sp, #28]
     cb8:	str	r6, [sp, #32]
     cbc:	mov	r4, r1
     cc0:	mov	r5, r0
     cc4:	mov	r2, #0
     cc8:	ldr	r3, [pc, #96]	; d30 <MyGame_Example_TestJSONPrefixParsing3_print_json_table+0x90>
     ccc:	mov	r6, #15
     cd0:	mov	r1, #0
     cd4:	mov	r0, #0
     cd8:	str	r1, [sp, #12]
     cdc:	str	r0, [sp, #8]
     ce0:	str	r6, [sp]
     ce4:	mov	r1, r4
     ce8:	mov	r0, r5
     cec:	bl	0 <flatcc_json_printer_int64_field>
     cf0:	mov	r2, #1
     cf4:	ldr	r3, [pc, #48]	; d2c <MyGame_Example_TestJSONPrefixParsing3_print_json_table+0x8c>
     cf8:	mov	ip, #21
     cfc:	mov	r0, #0
     d00:	str	r0, [sp, #4]
     d04:	str	ip, [sp]
     d08:	mov	r1, r4
     d0c:	mov	r0, r5
     d10:	bl	0 <flatcc_json_printer_uint32_field>
     d14:	ldr	r4, [sp, #24]
     d18:	ldr	r5, [sp, #28]
     d1c:	ldr	r6, [sp, #32]
     d20:	ldr	lr, [sp, #20]
     d24:	add	sp, sp, #40	; 0x28
     d28:	bx	lr
     d2c:	.word	0x000002b9
     d30:	.word	0x00000221

00000d34 <MyGame_Example_TestBase64_print_json_table>:
     d34:	mov	ip, sp
     d38:	sub	sp, sp, #24
     d3c:	str	ip, [sp, #8]
     d40:	str	lr, [sp, #12]
     d44:	str	r4, [sp, #16]
     d48:	str	r5, [sp, #20]
     d4c:	mov	r4, r1
     d50:	mov	r5, r0
     d54:	mov	r2, #0
     d58:	ldr	r3, [pc, #120]	; dd8 <MyGame_Example_TestBase64_print_json_table+0xa4>
     d5c:	mov	r1, #4
     d60:	mov	r0, #0
     d64:	str	r0, [sp, #4]
     d68:	str	r1, [sp]
     d6c:	mov	r1, r4
     d70:	mov	r0, r5
     d74:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     d78:	mov	r2, #1
     d7c:	ldr	r3, [pc, #88]	; ddc <MyGame_Example_TestBase64_print_json_table+0xa8>
     d80:	mov	ip, #7
     d84:	mov	r0, #1
     d88:	str	r0, [sp, #4]
     d8c:	str	ip, [sp]
     d90:	mov	r1, r4
     d94:	mov	r0, r5
     d98:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     d9c:	mov	r2, #2
     da0:	ldr	r3, [pc, #44]	; dd4 <MyGame_Example_TestBase64_print_json_table+0xa0>
     da4:	mov	ip, #6
     da8:	mov	r1, #0
     dac:	str	r1, [sp, #4]
     db0:	str	ip, [sp]
     db4:	mov	r1, r4
     db8:	mov	r0, r5
     dbc:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     dc0:	ldr	r4, [sp, #16]
     dc4:	ldr	r5, [sp, #20]
     dc8:	ldr	lr, [sp, #12]
     dcc:	add	sp, sp, #24
     dd0:	bx	lr
     dd4:	.word	0x00000231
     dd8:	.word	0x00000346
     ddc:	.word	0x000001c6

00000de0 <MyGame_Example_Monster_print_json_table>:
     de0:	mov	ip, sp
     de4:	sub	sp, sp, #32
     de8:	str	ip, [sp, #16]
     dec:	str	lr, [sp, #20]
     df0:	str	r4, [sp, #24]
     df4:	str	r5, [sp, #28]
     df8:	mov	r4, r1
     dfc:	mov	r5, r0
     e00:	mov	r2, #0
     e04:	ldr	r3, [pc, #1372]	; 1368 <MyGame_Example_Monster_print_json_table+0x588>
     e08:	mov	r0, #3
     e0c:	ldr	r1, [pc, #1392]	; 1384 <MyGame_Example_Monster_print_json_table+0x5a4>
     e10:	str	r1, [sp, #4]
     e14:	str	r0, [sp]
     e18:	mov	r1, r4
     e1c:	mov	r0, r5
     e20:	bl	0 <flatcc_json_printer_struct_field>
     e24:	mov	r2, #1
     e28:	ldr	r3, [pc, #1252]	; 1314 <MyGame_Example_Monster_print_json_table+0x534>
     e2c:	mov	r1, #4
     e30:	mov	r0, #150	; 0x96
     e34:	str	r0, [sp, #4]
     e38:	str	r1, [sp]
     e3c:	mov	r1, r4
     e40:	mov	r0, r5
     e44:	bl	0 <flatcc_json_printer_int16_field>
     e48:	mov	r2, #2
     e4c:	ldr	r3, [pc, #1228]	; 1320 <MyGame_Example_Monster_print_json_table+0x540>
     e50:	mov	ip, #2
     e54:	mov	r0, #100	; 0x64
     e58:	str	r0, [sp, #4]
     e5c:	str	ip, [sp]
     e60:	mov	r1, r4
     e64:	mov	r0, r5
     e68:	bl	0 <flatcc_json_printer_int16_field>
     e6c:	mov	r2, #3
     e70:	ldr	r3, [pc, #1288]	; 1380 <MyGame_Example_Monster_print_json_table+0x5a0>
     e74:	mov	r0, #4
     e78:	str	r0, [sp]
     e7c:	mov	r1, r4
     e80:	mov	r0, r5
     e84:	bl	0 <flatcc_json_printer_string_field>
     e88:	mov	r2, #5
     e8c:	ldr	r3, [pc, #1208]	; 134c <MyGame_Example_Monster_print_json_table+0x56c>
     e90:	mov	r1, #9
     e94:	str	r1, [sp]
     e98:	mov	r1, r4
     e9c:	mov	r0, r5
     ea0:	bl	0 <flatcc_json_printer_uint8_vector_field>
     ea4:	mov	r2, #6
     ea8:	ldr	r3, [pc, #1256]	; 1398 <MyGame_Example_Monster_print_json_table+0x5b8>
     eac:	mov	ip, #5
     eb0:	mov	r1, #8
     eb4:	ldr	r0, [pc, #1148]	; 1338 <MyGame_Example_Monster_print_json_table+0x558>
     eb8:	str	r0, [sp, #8]
     ebc:	str	r1, [sp, #4]
     ec0:	str	ip, [sp]
     ec4:	mov	r1, r4
     ec8:	mov	r0, r5
     ecc:	bl	0 <flatcc_json_printer_int8_enum_field>
     ed0:	mov	r2, #8
     ed4:	ldr	r3, [pc, #1068]	; 1308 <MyGame_Example_Monster_print_json_table+0x528>
     ed8:	mov	ip, #4
     edc:	ldr	r0, [pc, #1136]	; 1354 <MyGame_Example_Monster_print_json_table+0x574>
     ee0:	ldr	r1, [pc, #1072]	; 1318 <MyGame_Example_Monster_print_json_table+0x538>
     ee4:	str	r1, [sp, #8]
     ee8:	str	r0, [sp, #4]
     eec:	str	ip, [sp]
     ef0:	mov	r1, r4
     ef4:	mov	r0, r5
     ef8:	bl	0 <flatcc_json_printer_union_field>
     efc:	mov	r2, #9
     f00:	ldr	r3, [pc, #1020]	; 1304 <MyGame_Example_Monster_print_json_table+0x524>
     f04:	mov	r1, #5
     f08:	mov	r0, #4
     f0c:	ldr	ip, [pc, #1004]	; 1300 <MyGame_Example_Monster_print_json_table+0x520>
     f10:	str	ip, [sp, #8]
     f14:	str	r0, [sp, #4]
     f18:	str	r1, [sp]
     f1c:	mov	r1, r4
     f20:	mov	r0, r5
     f24:	bl	0 <flatcc_json_printer_struct_vector_field>
     f28:	mov	r2, #10
     f2c:	ldr	r3, [pc, #1032]	; 133c <MyGame_Example_Monster_print_json_table+0x55c>
     f30:	mov	r0, #17
     f34:	str	r0, [sp]
     f38:	mov	r1, r4
     f3c:	mov	r0, r5
     f40:	bl	0 <flatcc_json_printer_string_vector_field>
     f44:	mov	r2, #11
     f48:	ldr	r3, [pc, #1064]	; 1378 <MyGame_Example_Monster_print_json_table+0x598>
     f4c:	mov	r0, #17
     f50:	ldr	r1, [pc, #984]	; 1330 <MyGame_Example_Monster_print_json_table+0x550>
     f54:	str	r1, [sp, #4]
     f58:	str	r0, [sp]
     f5c:	mov	r1, r4
     f60:	mov	r0, r5
     f64:	bl	0 <flatcc_json_printer_table_vector_field>
     f68:	mov	r2, #12
     f6c:	ldr	r3, [pc, #972]	; 1340 <MyGame_Example_Monster_print_json_table+0x560>
     f70:	mov	r1, #5
     f74:	ldr	r0, [pc, #948]	; 1330 <MyGame_Example_Monster_print_json_table+0x550>
     f78:	str	r0, [sp, #4]
     f7c:	str	r1, [sp]
     f80:	mov	r1, r4
     f84:	mov	r0, r5
     f88:	bl	0 <flatcc_json_printer_table_field>
     f8c:	mov	r2, #13
     f90:	ldr	r3, [pc, #980]	; 136c <MyGame_Example_Monster_print_json_table+0x58c>
     f94:	mov	ip, #20
     f98:	mov	r1, #0
     f9c:	ldr	r0, [pc, #908]	; 1330 <MyGame_Example_Monster_print_json_table+0x550>
     fa0:	str	r0, [sp, #8]
     fa4:	str	r1, [sp, #4]
     fa8:	str	ip, [sp]
     fac:	mov	r1, r4
     fb0:	mov	r0, r5
     fb4:	bl	0 <flatcc_json_printer_table_as_nested_root>
     fb8:	mov	r2, #14
     fbc:	ldr	r3, [pc, #972]	; 1390 <MyGame_Example_Monster_print_json_table+0x5b0>
     fc0:	mov	r1, #9
     fc4:	ldr	r0, [pc, #800]	; 12ec <MyGame_Example_Monster_print_json_table+0x50c>
     fc8:	str	r0, [sp, #4]
     fcc:	str	r1, [sp]
     fd0:	mov	r1, r4
     fd4:	mov	r0, r5
     fd8:	bl	0 <flatcc_json_printer_table_field>
     fdc:	mov	r2, #15
     fe0:	ldr	r3, [pc, #776]	; 12f0 <MyGame_Example_Monster_print_json_table+0x510>
     fe4:	mov	ip, #8
     fe8:	mov	r0, #1
     fec:	str	r0, [sp, #4]
     ff0:	str	ip, [sp]
     ff4:	mov	r1, r4
     ff8:	mov	r0, r5
     ffc:	bl	0 <flatcc_json_printer_bool_field>
    1000:	mov	r2, #16
    1004:	ldr	r3, [pc, #844]	; 1358 <MyGame_Example_Monster_print_json_table+0x578>
    1008:	mov	r0, #16
    100c:	mov	r1, #0
    1010:	str	r1, [sp, #4]
    1014:	str	r0, [sp]
    1018:	mov	r1, r4
    101c:	mov	r0, r5
    1020:	bl	0 <flatcc_json_printer_int32_field>
    1024:	mov	r2, #17
    1028:	ldr	r3, [pc, #712]	; 12f8 <MyGame_Example_Monster_print_json_table+0x518>
    102c:	mov	r0, #16
    1030:	mov	r1, #0
    1034:	str	r1, [sp, #4]
    1038:	str	r0, [sp]
    103c:	mov	r1, r4
    1040:	mov	r0, r5
    1044:	bl	0 <flatcc_json_printer_uint32_field>
    1048:	mov	r2, #18
    104c:	ldr	r3, [pc, #700]	; 1310 <MyGame_Example_Monster_print_json_table+0x530>
    1050:	mov	r1, #16
    1054:	mov	r0, #0
    1058:	mov	ip, #0
    105c:	str	r0, [sp, #12]
    1060:	str	ip, [sp, #8]
    1064:	str	r1, [sp]
    1068:	mov	r1, r4
    106c:	mov	r0, r5
    1070:	bl	0 <flatcc_json_printer_int64_field>
    1074:	mov	r2, #19
    1078:	ldr	r3, [pc, #780]	; 138c <MyGame_Example_Monster_print_json_table+0x5ac>
    107c:	mov	r1, #16
    1080:	mov	r0, #0
    1084:	mov	ip, #0
    1088:	str	r0, [sp, #12]
    108c:	str	ip, [sp, #8]
    1090:	str	r1, [sp]
    1094:	mov	r1, r4
    1098:	mov	r0, r5
    109c:	bl	0 <flatcc_json_printer_uint64_field>
    10a0:	mov	r2, #20
    10a4:	ldr	r3, [pc, #696]	; 1364 <MyGame_Example_Monster_print_json_table+0x584>
    10a8:	mov	r1, #17
    10ac:	mov	r0, #0
    10b0:	str	r0, [sp, #4]
    10b4:	str	r1, [sp]
    10b8:	mov	r1, r4
    10bc:	mov	r0, r5
    10c0:	bl	0 <flatcc_json_printer_int32_field>
    10c4:	mov	r2, #21
    10c8:	ldr	r3, [pc, #628]	; 1344 <MyGame_Example_Monster_print_json_table+0x564>
    10cc:	mov	r1, #17
    10d0:	mov	r0, #0
    10d4:	str	r0, [sp, #4]
    10d8:	str	r1, [sp]
    10dc:	mov	r1, r4
    10e0:	mov	r0, r5
    10e4:	bl	0 <flatcc_json_printer_uint32_field>
    10e8:	mov	r2, #22
    10ec:	ldr	r3, [pc, #620]	; 1360 <MyGame_Example_Monster_print_json_table+0x580>
    10f0:	mov	ip, #17
    10f4:	mov	r1, #0
    10f8:	mov	r0, #0
    10fc:	str	r1, [sp, #12]
    1100:	str	r0, [sp, #8]
    1104:	str	ip, [sp]
    1108:	mov	r1, r4
    110c:	mov	r0, r5
    1110:	bl	0 <flatcc_json_printer_int64_field>
    1114:	mov	r2, #23
    1118:	ldr	r3, [pc, #592]	; 1370 <MyGame_Example_Monster_print_json_table+0x590>
    111c:	mov	r0, #17
    1120:	mov	ip, #0
    1124:	mov	r1, #0
    1128:	str	ip, [sp, #12]
    112c:	str	r1, [sp, #8]
    1130:	str	r0, [sp]
    1134:	mov	r1, r4
    1138:	mov	r0, r5
    113c:	bl	0 <flatcc_json_printer_uint64_field>
    1140:	mov	r2, #24
    1144:	ldr	r3, [pc, #476]	; 1328 <MyGame_Example_Monster_print_json_table+0x548>
    1148:	mov	r1, #16
    114c:	str	r1, [sp]
    1150:	mov	r1, r4
    1154:	mov	r0, r5
    1158:	bl	0 <flatcc_json_printer_bool_vector_field>
    115c:	mov	r2, #25
    1160:	ldr	r3, [pc, #480]	; 1348 <MyGame_Example_Monster_print_json_table+0x568>
    1164:	mov	ip, #5
    1168:	vldr	s0, [pc, #556]	; 139c <MyGame_Example_Monster_print_json_table+0x5bc>
    116c:	str	ip, [sp]
    1170:	mov	r1, r4
    1174:	mov	r0, r5
    1178:	vmov.f32	s0, s0
    117c:	bl	0 <flatcc_json_printer_float_field>
    1180:	mov	r2, #26
    1184:	ldr	r3, [pc, #452]	; 1350 <MyGame_Example_Monster_print_json_table+0x570>
    1188:	mov	r1, #6
    118c:	vmov.f32	s0, #8	; 0x40400000  3.0
    1190:	str	r1, [sp]
    1194:	mov	r1, r4
    1198:	mov	r0, r5
    119c:	vmov.f32	s0, s0
    11a0:	bl	0 <flatcc_json_printer_float_field>
    11a4:	mov	r2, #27
    11a8:	ldr	r3, [pc, #472]	; 1388 <MyGame_Example_Monster_print_json_table+0x5a8>
    11ac:	mov	r0, #6
    11b0:	vldr	s0, [pc, #488]	; 13a0 <MyGame_Example_Monster_print_json_table+0x5c0>
    11b4:	str	r0, [sp]
    11b8:	mov	r1, r4
    11bc:	mov	r0, r5
    11c0:	vmov.f32	s0, s0
    11c4:	bl	0 <flatcc_json_printer_float_field>
    11c8:	mov	r2, #28
    11cc:	ldr	r3, [pc, #424]	; 137c <MyGame_Example_Monster_print_json_table+0x59c>
    11d0:	mov	ip, #18
    11d4:	str	ip, [sp]
    11d8:	mov	r1, r4
    11dc:	mov	r0, r5
    11e0:	bl	0 <flatcc_json_printer_string_vector_field>
    11e4:	mov	r2, #29
    11e8:	ldr	r3, [pc, #268]	; 12fc <MyGame_Example_Monster_print_json_table+0x51c>
    11ec:	mov	r1, #23
    11f0:	mov	r0, #8
    11f4:	ldr	ip, [pc, #408]	; 1394 <MyGame_Example_Monster_print_json_table+0x5b4>
    11f8:	str	ip, [sp, #8]
    11fc:	str	r0, [sp, #4]
    1200:	str	r1, [sp]
    1204:	mov	r1, r4
    1208:	mov	r0, r5
    120c:	bl	0 <flatcc_json_printer_struct_vector_field>
    1210:	mov	r2, #30
    1214:	ldr	r3, [pc, #272]	; 132c <MyGame_Example_Monster_print_json_table+0x54c>
    1218:	mov	ip, #4
    121c:	str	ip, [sp]
    1220:	mov	r1, r4
    1224:	mov	r0, r5
    1228:	bl	0 <flatcc_json_printer_uint8_vector_field>
    122c:	mov	r2, #31
    1230:	ldr	r3, [pc, #252]	; 1334 <MyGame_Example_Monster_print_json_table+0x554>
    1234:	mov	ip, #5
    1238:	mov	r0, #4
    123c:	ldr	r1, [pc, #188]	; 1300 <MyGame_Example_Monster_print_json_table+0x520>
    1240:	str	r1, [sp, #8]
    1244:	str	r0, [sp, #4]
    1248:	str	ip, [sp]
    124c:	mov	r1, r4
    1250:	mov	r0, r5
    1254:	bl	0 <flatcc_json_printer_struct_vector_field>
    1258:	mov	r2, #32
    125c:	ldr	r3, [pc, #168]	; 130c <MyGame_Example_Monster_print_json_table+0x52c>
    1260:	mov	r0, #15
    1264:	str	r0, [sp]
    1268:	mov	r1, r4
    126c:	mov	r0, r5
    1270:	bl	0 <flatcc_json_printer_int64_vector_field>
    1274:	mov	r2, #33	; 0x21
    1278:	ldr	r3, [pc, #220]	; 135c <MyGame_Example_Monster_print_json_table+0x57c>
    127c:	mov	r0, #17
    1280:	str	r0, [sp]
    1284:	mov	r1, r4
    1288:	mov	r0, r5
    128c:	bl	0 <flatcc_json_printer_double_vector_field>
    1290:	mov	r2, #34	; 0x22
    1294:	ldr	r3, [pc, #136]	; 1324 <MyGame_Example_Monster_print_json_table+0x544>
    1298:	mov	r1, #21
    129c:	ldr	r0, [pc, #208]	; 1374 <MyGame_Example_Monster_print_json_table+0x594>
    12a0:	str	r0, [sp, #4]
    12a4:	str	r1, [sp]
    12a8:	mov	r1, r4
    12ac:	mov	r0, r5
    12b0:	bl	0 <flatcc_json_printer_table_field>
    12b4:	mov	r2, #35	; 0x23
    12b8:	ldr	r3, [pc, #52]	; 12f4 <MyGame_Example_Monster_print_json_table+0x514>
    12bc:	mov	r0, #10
    12c0:	ldr	r1, [pc, #84]	; 131c <MyGame_Example_Monster_print_json_table+0x53c>
    12c4:	str	r1, [sp, #4]
    12c8:	str	r0, [sp]
    12cc:	mov	r1, r4
    12d0:	mov	r0, r5
    12d4:	bl	0 <flatcc_json_printer_table_field>
    12d8:	ldr	r4, [sp, #24]
    12dc:	ldr	r5, [sp, #28]
    12e0:	ldr	lr, [sp, #20]
    12e4:	add	sp, sp, #32
    12e8:	bx	lr
    12ec:	.word	0x00000000
    12f0:	.word	0x00000076
    12f4:	.word	0x000000cf
    12f8:	.word	0x00000580
    12fc:	.word	0x00000456
    1300:	.word	0x00000000
    1304:	.word	0x00000350
    1308:	.word	0x0000034b
    130c:	.word	0x00000591
    1310:	.word	0x00000473
    1314:	.word	0x00000262
	...
    1320:	.word	0x0000011a
    1324:	.word	0x00000381
    1328:	.word	0x0000042d
	...
    1334:	.word	0x0000031e
    1338:	.word	0x00000000
    133c:	.word	0x0000041b
    1340:	.word	0x00000450
    1344:	.word	0x000005af
    1348:	.word	0x000001fb
    134c:	.word	0x000003b5
    1350:	.word	0x00000057
    1354:	.word	0x00000000
    1358:	.word	0x000001ce
    135c:	.word	0x0000036f
    1360:	.word	0x0000043e
    1364:	.word	0x00000267
    1368:	.word	0x00000005
    136c:	.word	0x0000019d
    1370:	.word	0x0000011d
    1374:	.word	0x00000000
    1378:	.word	0x00000147
    137c:	.word	0x00000495
    1380:	.word	0x000000ca
    1384:	.word	0x00000000
    1388:	.word	0x00000279
    138c:	.word	0x00000484
    1390:	.word	0x00000201
    1394:	.word	0x00000000
    1398:	.word	0x00000356
    139c:	.word	0x489965e0
    13a0:	.word	0x00000000

000013a4 <Fantasy_Attacker_print_json_table>:
    13a4:	mov	ip, sp
    13a8:	sub	sp, sp, #24
    13ac:	str	ip, [sp, #8]
    13b0:	str	lr, [sp, #12]
    13b4:	str	r4, [sp, #16]
    13b8:	str	r5, [sp, #20]
    13bc:	mov	r2, #0
    13c0:	ldr	r3, [pc, #36]	; 13ec <Fantasy_Attacker_print_json_table+0x48>
    13c4:	mov	r4, #19
    13c8:	mov	r5, #0
    13cc:	str	r5, [sp, #4]
    13d0:	str	r4, [sp]
    13d4:	bl	0 <flatcc_json_printer_int32_field>
    13d8:	ldr	r4, [sp, #16]
    13dc:	ldr	r5, [sp, #20]
    13e0:	ldr	lr, [sp, #12]
    13e4:	add	sp, sp, #24
    13e8:	bx	lr
    13ec:	.word	0x0000020b

000013f0 <Fantasy_Movie_print_json_table>:
    13f0:	mov	ip, sp
    13f4:	sub	sp, sp, #40	; 0x28
    13f8:	str	ip, [sp, #12]
    13fc:	str	lr, [sp, #16]
    1400:	str	r4, [sp, #24]
    1404:	str	r5, [sp, #28]
    1408:	str	r6, [sp, #32]
    140c:	mov	r4, r1
    1410:	mov	r5, r0
    1414:	mov	r2, #1
    1418:	ldr	r3, [pc, #256]	; 1520 <Fantasy_Movie_print_json_table+0x130>
    141c:	mov	r1, #14
    1420:	ldr	r0, [pc, #228]	; 150c <Fantasy_Movie_print_json_table+0x11c>
    1424:	ldr	r6, [pc, #220]	; 1508 <Fantasy_Movie_print_json_table+0x118>
    1428:	str	r6, [sp, #8]
    142c:	str	r0, [sp, #4]
    1430:	str	r1, [sp]
    1434:	mov	r1, r4
    1438:	mov	r0, r5
    143c:	bl	0 <flatcc_json_printer_union_field>
    1440:	mov	r2, #3
    1444:	ldr	r3, [pc, #204]	; 1518 <Fantasy_Movie_print_json_table+0x128>
    1448:	mov	r0, #10
    144c:	ldr	ip, [pc, #184]	; 150c <Fantasy_Movie_print_json_table+0x11c>
    1450:	ldr	r1, [pc, #176]	; 1508 <Fantasy_Movie_print_json_table+0x118>
    1454:	str	r1, [sp, #8]
    1458:	str	ip, [sp, #4]
    145c:	str	r0, [sp]
    1460:	mov	r1, r4
    1464:	mov	r0, r5
    1468:	bl	0 <flatcc_json_printer_union_field>
    146c:	mov	r2, #5
    1470:	ldr	r3, [pc, #156]	; 1514 <Fantasy_Movie_print_json_table+0x124>
    1474:	mov	ip, #9
    1478:	ldr	r1, [pc, #140]	; 150c <Fantasy_Movie_print_json_table+0x11c>
    147c:	ldr	r0, [pc, #132]	; 1508 <Fantasy_Movie_print_json_table+0x118>
    1480:	str	r0, [sp, #8]
    1484:	str	r1, [sp, #4]
    1488:	str	ip, [sp]
    148c:	mov	r1, r4
    1490:	mov	r0, r5
    1494:	bl	0 <flatcc_json_printer_union_field>
    1498:	mov	r2, #7
    149c:	ldr	r3, [pc, #108]	; 1510 <Fantasy_Movie_print_json_table+0x120>
    14a0:	mov	r1, #5
    14a4:	ldr	r0, [pc, #96]	; 150c <Fantasy_Movie_print_json_table+0x11c>
    14a8:	ldr	ip, [pc, #88]	; 1508 <Fantasy_Movie_print_json_table+0x118>
    14ac:	str	ip, [sp, #8]
    14b0:	str	r0, [sp, #4]
    14b4:	str	r1, [sp]
    14b8:	mov	r1, r4
    14bc:	mov	r0, r5
    14c0:	bl	0 <flatcc_json_printer_union_field>
    14c4:	mov	r2, #9
    14c8:	ldr	r3, [pc, #76]	; 151c <Fantasy_Movie_print_json_table+0x12c>
    14cc:	mov	r0, #10
    14d0:	ldr	r1, [pc, #52]	; 150c <Fantasy_Movie_print_json_table+0x11c>
    14d4:	ldr	ip, [pc, #44]	; 1508 <Fantasy_Movie_print_json_table+0x118>
    14d8:	str	ip, [sp, #8]
    14dc:	str	r1, [sp, #4]
    14e0:	str	r0, [sp]
    14e4:	mov	r1, r4
    14e8:	mov	r0, r5
    14ec:	bl	0 <flatcc_json_printer_union_vector_field>
    14f0:	ldr	r4, [sp, #24]
    14f4:	ldr	r5, [sp, #28]
    14f8:	ldr	r6, [sp, #32]
    14fc:	ldr	lr, [sp, #16]
    1500:	add	sp, sp, #40	; 0x28
    1504:	bx	lr
	...
    1510:	.word	0x000001df
    1514:	.word	0x0000002a
    1518:	.word	0x00000406
    151c:	.word	0x000001e5
    1520:	.word	0x0000012f

00001524 <readfile>:
    1524:	mov	ip, sp
    1528:	sub	sp, sp, #40	; 0x28
    152c:	str	ip, [sp]
    1530:	str	lr, [sp, #4]
    1534:	str	r4, [sp, #8]
    1538:	str	r5, [sp, #12]
    153c:	str	r6, [sp, #16]
    1540:	str	r7, [sp, #20]
    1544:	str	r8, [sp, #24]
    1548:	mov	r8, r1
    154c:	add	r1, sp, #32
    1550:	cmp	r2, #0
    1554:	movne	r5, r2
    1558:	moveq	r5, r1
    155c:	ldr	r1, [pc, #268]	; 1670 <readfile+0x14c>
    1560:	bl	0 <fopen>
    1564:	mov	r7, r0
    1568:	mov	r6, #0
    156c:	mov	r4, #0
    1570:	cmp	r7, #0
    1574:	beq	1624 <readfile+0x100>
    1578:	mov	r1, #0
    157c:	mov	r2, #2
    1580:	mov	r0, r7
    1584:	bl	0 <fseek>
    1588:	mov	r0, r7
    158c:	bl	0 <ftell>
    1590:	mov	r6, r0
    1594:	str	r6, [r5]
    1598:	cmp	r6, r8
    159c:	movhi	r1, #1
    15a0:	movls	r1, #0
    15a4:	mov	r0, #0
    15a8:	cmp	r8, #0
    15ac:	movhi	ip, r1
    15b0:	movls	ip, r0
    15b4:	cmp	ip, #0
    15b8:	bne	1624 <readfile+0x100>
    15bc:	mov	r0, r7
    15c0:	bl	0 <rewind>
    15c4:	mov	r3, #1
    15c8:	cmp	r6, #0
    15cc:	movne	r0, r6
    15d0:	moveq	r0, r3
    15d4:	bl	0 <malloc>
    15d8:	mov	r4, r0
    15dc:	cmp	r4, #0
    15e0:	beq	1624 <readfile+0x100>
    15e4:	mov	r8, #0
    15e8:	add	r0, r4, r8
    15ec:	mov	r1, #1
    15f0:	sub	r2, r6, r8
    15f4:	mov	r3, r7
    15f8:	bl	0 <fread>
    15fc:	cmp	r0, #0
    1600:	beq	160c <readfile+0xe8>
    1604:	add	r8, r8, r0
    1608:	b	15e8 <readfile+0xc4>
    160c:	cmp	r8, r6
    1610:	bne	1624 <readfile+0x100>
    1614:	mov	r0, r7
    1618:	bl	0 <fclose>
    161c:	str	r6, [r5]
    1620:	b	164c <readfile+0x128>
    1624:	cmp	r7, #0
    1628:	beq	1634 <readfile+0x110>
    162c:	mov	r0, r7
    1630:	bl	0 <fclose>
    1634:	cmp	r4, #0
    1638:	beq	1644 <readfile+0x120>
    163c:	mov	r0, r4
    1640:	bl	0 <free>
    1644:	str	r6, [r5]
    1648:	mov	r4, #0
    164c:	mov	r0, r4
    1650:	ldr	r4, [sp, #8]
    1654:	ldr	r5, [sp, #12]
    1658:	ldr	r6, [sp, #16]
    165c:	ldr	r7, [sp, #20]
    1660:	ldr	r8, [sp, #24]
    1664:	ldr	lr, [sp, #4]
    1668:	add	sp, sp, #40	; 0x28
    166c:	bx	lr
    1670:	.word	0x000000c7

00001674 <test_print>:
    1674:	mov	ip, sp
    1678:	sub	sp, sp, #104	; 0x68
    167c:	str	ip, [sp, #4]
    1680:	str	lr, [sp, #8]
    1684:	str	r4, [sp, #16]
    1688:	str	r5, [sp, #20]
    168c:	str	r6, [sp, #24]
    1690:	str	r7, [sp, #28]
    1694:	str	r8, [sp, #32]
    1698:	str	r9, [sp, #36]	; 0x24
    169c:	mov	r7, #0
    16a0:	mov	r6, #0
    16a4:	mov	r9, #0
    16a8:	mov	r0, #0
    16ac:	str	r0, [sp, #40]	; 0x28
    16b0:	mov	r1, #0
    16b4:	str	r1, [sp, #44]	; 0x2c
    16b8:	mov	ip, #0
    16bc:	str	ip, [sp, #48]	; 0x30
    16c0:	add	r8, sp, #56	; 0x38
    16c4:	ldr	r1, [pc, #636]	; 1948 <test_print+0x2d4>
    16c8:	ldr	r0, [r1]
    16cc:	ldr	r1, [pc, #632]	; 194c <test_print+0x2d8>
    16d0:	bl	0 <fopen>
    16d4:	mov	r4, r0
    16d8:	cmp	r4, #0
    16dc:	bne	1700 <test_print+0x8c>
    16e0:	ldr	r0, [pc, #632]	; 1960 <test_print+0x2ec>
    16e4:	ldr	r0, [r0]
    16e8:	ldr	r1, [pc, #568]	; 1928 <test_print+0x2b4>
    16ec:	ldr	r3, [pc, #596]	; 1948 <test_print+0x2d4>
    16f0:	ldr	r2, [r3]
    16f4:	bl	0 <fprintf>
    16f8:	mvn	r0, #0
    16fc:	b	1900 <test_print+0x28c>
    1700:	mov	r1, r4
    1704:	mov	r0, r8
    1708:	bl	0 <flatcc_json_printer_init>
    170c:	mov	r0, #2
    1710:	strb	r0, [sp, #81]	; 0x51
    1714:	mov	r2, #1
    1718:	strb	r2, [sp, #82]	; 0x52
    171c:	mov	r3, #0
    1720:	strb	r3, [sp, #83]	; 0x53
    1724:	ldr	r2, [pc, #520]	; 1934 <test_print+0x2c0>
    1728:	ldr	r0, [r2]
    172c:	cmp	r0, #0
    1730:	beq	1760 <test_print+0xec>
    1734:	ldr	r1, [pc, #536]	; 1954 <test_print+0x2e0>
    1738:	bl	0 <strcmp>
    173c:	cmp	r0, #0
    1740:	beq	1760 <test_print+0xec>
    1744:	ldr	r3, [pc, #488]	; 1934 <test_print+0x2c0>
    1748:	ldr	r0, [r3]
    174c:	mov	r1, #10240	; 0x2800
    1750:	add	r2, sp, #40	; 0x28
    1754:	bl	1524 <readfile>
    1758:	mov	r5, r0
    175c:	b	176c <test_print+0xf8>
    1760:	ldr	r5, [pc, #496]	; 1958 <test_print+0x2e4>
    1764:	mov	r2, #288	; 0x120
    1768:	str	r2, [sp, #40]	; 0x28
    176c:	cmp	r5, #0
    1770:	bne	1790 <test_print+0x11c>
    1774:	ldr	ip, [pc, #484]	; 1960 <test_print+0x2ec>
    1778:	ldr	r0, [ip]
    177c:	ldr	r1, [pc, #424]	; 192c <test_print+0x2b8>
    1780:	ldr	r2, [pc, #428]	; 1934 <test_print+0x2c0>
    1784:	ldr	r2, [r2]
    1788:	bl	0 <fprintf>
    178c:	b	189c <test_print+0x228>
    1790:	ldr	r3, [pc, #408]	; 1930 <test_print+0x2bc>
    1794:	ldr	r0, [r3]
    1798:	mov	r1, #10240	; 0x2800
    179c:	add	r2, sp, #44	; 0x2c
    17a0:	bl	1524 <readfile>
    17a4:	mov	r6, r0
    17a8:	cmp	r6, #0
    17ac:	bne	17cc <test_print+0x158>
    17b0:	ldr	ip, [pc, #424]	; 1960 <test_print+0x2ec>
    17b4:	ldr	r0, [ip]
    17b8:	ldr	r1, [pc, #412]	; 195c <test_print+0x2e8>
    17bc:	ldr	r2, [pc, #364]	; 1930 <test_print+0x2bc>
    17c0:	ldr	r2, [r2]
    17c4:	bl	0 <fprintf>
    17c8:	b	189c <test_print+0x228>
    17cc:	ldr	r2, [sp, #40]	; 0x28
    17d0:	ldr	r3, [pc, #376]	; 1950 <test_print+0x2dc>
    17d4:	mov	r1, r5
    17d8:	add	r0, sp, #56	; 0x38
    17dc:	ldr	r9, [pc, #352]	; 1944 <test_print+0x2d0>
    17e0:	str	r9, [sp]
    17e4:	bl	0 <flatcc_json_printer_table_as_root>
    17e8:	add	r0, sp, #56	; 0x38
    17ec:	ldr	ip, [sp, #100]	; 0x64
    17f0:	mov	r1, #1
    17f4:	blx	ip
    17f8:	ldr	r0, [sp, #92]	; 0x5c
    17fc:	cmp	r0, #0
    1800:	beq	180c <test_print+0x198>
    1804:	ldr	r0, [pc, #300]	; 1938 <test_print+0x2c4>
    1808:	bl	0 <printf>
    180c:	mov	r0, r4
    1810:	bl	0 <fclose>
    1814:	mov	r4, #0
    1818:	ldr	r1, [pc, #296]	; 1948 <test_print+0x2d4>
    181c:	ldr	r0, [r1]
    1820:	mov	r1, #10240	; 0x2800
    1824:	add	r2, sp, #48	; 0x30
    1828:	bl	1524 <readfile>
    182c:	mov	r9, r0
    1830:	cmp	r9, #0
    1834:	bne	1854 <test_print+0x1e0>
    1838:	ldr	r3, [pc, #288]	; 1960 <test_print+0x2ec>
    183c:	ldr	r0, [r3]
    1840:	ldr	r1, [pc, #244]	; 193c <test_print+0x2c8>
    1844:	ldr	r2, [pc, #252]	; 1948 <test_print+0x2d4>
    1848:	ldr	r2, [r2]
    184c:	bl	0 <fprintf>
    1850:	b	189c <test_print+0x228>
    1854:	ldr	r2, [sp, #48]	; 0x30
    1858:	ldr	r0, [sp, #44]	; 0x2c
    185c:	cmp	r2, r0
    1860:	bne	188c <test_print+0x218>
    1864:	mov	r1, r6
    1868:	mov	r0, r9
    186c:	bl	0 <memcmp>
    1870:	cmp	r0, #0
    1874:	bne	188c <test_print+0x218>
    1878:	ldr	r1, [pc, #224]	; 1960 <test_print+0x2ec>
    187c:	ldr	r0, [r1]
    1880:	ldr	r1, [pc, #184]	; 1940 <test_print+0x2cc>
    1884:	bl	0 <fprintf>
    1888:	b	18a0 <test_print+0x22c>
    188c:	ldr	ip, [pc, #204]	; 1960 <test_print+0x2ec>
    1890:	ldr	r0, [ip]
    1894:	ldr	r1, [pc, #136]	; 1924 <test_print+0x2b0>
    1898:	bl	0 <fprintf>
    189c:	mvn	r7, #0
    18a0:	mov	r0, r8
    18a4:	bl	0 <flatcc_json_printer_clear>
    18a8:	mov	r1, #0
    18ac:	ldr	ip, [pc, #128]	; 1934 <test_print+0x2c0>
    18b0:	ldr	r0, [ip]
    18b4:	cmp	r0, #0
    18b8:	moveq	r0, r1
    18bc:	movne	r0, r5
    18c0:	cmp	r0, #0
    18c4:	beq	18cc <test_print+0x258>
    18c8:	bl	0 <free>
    18cc:	cmp	r6, #0
    18d0:	beq	18dc <test_print+0x268>
    18d4:	mov	r0, r6
    18d8:	bl	0 <free>
    18dc:	cmp	r9, #0
    18e0:	beq	18ec <test_print+0x278>
    18e4:	mov	r0, r9
    18e8:	bl	0 <free>
    18ec:	cmp	r4, #0
    18f0:	beq	18fc <test_print+0x288>
    18f4:	mov	r0, r4
    18f8:	bl	0 <fclose>
    18fc:	mov	r0, r7
    1900:	ldr	r4, [sp, #16]
    1904:	ldr	r5, [sp, #20]
    1908:	ldr	r6, [sp, #24]
    190c:	ldr	r7, [sp, #28]
    1910:	ldr	r8, [sp, #32]
    1914:	ldr	r9, [sp, #36]	; 0x24
    1918:	ldr	lr, [sp, #8]
    191c:	add	sp, sp, #104	; 0x68
    1920:	bx	lr
    1924:	.word	0x0000015c
    1928:	.word	0x00000034
    192c:	.word	0x00000238
	...
    1938:	.word	0x00000397
    193c:	.word	0x000000da
    1940:	.word	0x000003bf
	...
    194c:	.word	0x00000159
    1950:	.word	0x0000006f
    1954:	.word	0x0000021f
    1958:	.word	0x000005c1
    195c:	.word	0x00000280
    1960:	.word	0x00000000

00001964 <main>:
    1964:	mov	ip, sp
    1968:	sub	sp, sp, #16
    196c:	str	ip, [sp]
    1970:	str	lr, [sp, #4]
    1974:	str	r4, [sp, #8]
    1978:	str	r5, [sp, #12]
    197c:	mov	r4, r1
    1980:	mov	r5, r0
    1984:	ldr	ip, [pc, #152]	; 1a24 <main+0xc0>
    1988:	ldr	r0, [ip]
    198c:	ldr	r1, [pc, #128]	; 1a14 <main+0xb0>
    1990:	bl	0 <fprintf>
    1994:	cmp	r5, #4
    1998:	movne	r0, #1
    199c:	moveq	r0, #0
    19a0:	mov	r3, #0
    19a4:	cmp	r5, #1
    19a8:	movne	r1, r0
    19ac:	moveq	r1, r3
    19b0:	cmp	r1, #0
    19b4:	beq	19d0 <main+0x6c>
    19b8:	ldr	r1, [pc, #100]	; 1a24 <main+0xc0>
    19bc:	ldr	r0, [r1]
    19c0:	ldr	r1, [pc, #72]	; 1a10 <main+0xac>
    19c4:	bl	0 <fprintf>
    19c8:	mov	r0, #1
    19cc:	bl	0 <exit>
    19d0:	cmp	r5, #4
    19d4:	bne	19fc <main+0x98>
    19d8:	ldr	r1, [pc, #60]	; 1a1c <main+0xb8>
    19dc:	ldr	ip, [r4, #4]
    19e0:	str	ip, [r1]
    19e4:	ldr	r3, [pc, #44]	; 1a18 <main+0xb4>
    19e8:	ldr	r2, [r4, #8]
    19ec:	str	r2, [r3]
    19f0:	ldr	r2, [pc, #40]	; 1a20 <main+0xbc>
    19f4:	ldr	r0, [r4, #12]
    19f8:	str	r0, [r2]
    19fc:	ldr	r4, [sp, #8]
    1a00:	ldr	r5, [sp, #12]
    1a04:	ldr	lr, [sp, #4]
    1a08:	add	sp, sp, #16
    1a0c:	b	1674 <test_print>
    1a10:	.word	0x000004b2
    1a14:	.word	0x0000007f
	...
