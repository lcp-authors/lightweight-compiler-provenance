
../compcert-repos/prog2/CMakeFiles/8.dir/Aula08_Grafos_T2/grafo-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_g>:
       0:	sub	sp, sp, #8
       4:	push	{fp, lr}
       8:	mov	fp, sp
       c:	sub	sp, sp, #40	; 0x28
      10:	str	r3, [fp, #12]
      14:	str	r2, [fp, #8]
      18:	str	r0, [fp, #-4]
      1c:	str	r1, [fp, #-8]
      20:	movw	r0, #8
      24:	bl	0 <malloc>
      28:	str	r0, [fp, #-16]
      2c:	sub	r0, fp, #12
      30:	add	r1, fp, #8
      34:	str	r1, [r0]
      38:	ldr	r0, [fp, #-4]
      3c:	movw	r1, #8
      40:	bl	0 <calloc>
      44:	ldr	r1, [fp, #-16]
      48:	str	r0, [r1, #4]
      4c:	movw	r0, #0
      50:	str	r0, [sp, #20]
      54:	ldr	r0, [sp, #20]
      58:	ldr	r1, [fp, #-8]
      5c:	cmp	r0, r1
      60:	bge	108 <_g+0x108>
      64:	ldr	r0, [fp, #-12]
      68:	add	r1, r0, #4
      6c:	str	r1, [fp, #-12]
      70:	ldr	r0, [r0]
      74:	str	r0, [sp, #16]
      78:	ldr	r0, [fp, #-12]
      7c:	add	r1, r0, #4
      80:	str	r1, [fp, #-12]
      84:	ldr	r0, [r0]
      88:	str	r0, [sp, #12]
      8c:	mov	r0, #1
      90:	mov	r1, #8
      94:	bl	0 <calloc>
      98:	str	r0, [sp, #8]
      9c:	ldr	r0, [sp, #12]
      a0:	ldr	r1, [sp, #8]
      a4:	str	r0, [r1]
      a8:	ldr	r0, [fp, #-16]
      ac:	ldr	r0, [r0, #4]
      b0:	ldr	r1, [sp, #16]
      b4:	add	r0, r0, r1, lsl #3
      b8:	ldr	r0, [r0, #4]
      bc:	ldr	r1, [sp, #8]
      c0:	str	r0, [r1, #4]
      c4:	ldr	r0, [sp, #8]
      c8:	ldr	r1, [fp, #-16]
      cc:	ldr	r1, [r1, #4]
      d0:	ldr	lr, [sp, #16]
      d4:	add	r1, r1, lr, lsl #3
      d8:	str	r0, [r1, #4]
      dc:	ldr	r0, [fp, #-16]
      e0:	ldr	r0, [r0, #4]
      e4:	ldr	r1, [sp, #16]
      e8:	add	r0, r0, r1, lsl #3
      ec:	ldr	r1, [r0]
      f0:	add	r1, r1, #1
      f4:	str	r1, [r0]
      f8:	ldr	r0, [sp, #20]
      fc:	add	r0, r0, #2
     100:	str	r0, [sp, #20]
     104:	b	54 <_g+0x54>
     108:	sub	r0, fp, #12
     10c:	ldr	r1, [fp, #-4]
     110:	ldr	r2, [fp, #-16]
     114:	str	r1, [r2]
     118:	ldr	r1, [fp, #-16]
     11c:	str	r0, [sp, #4]
     120:	mov	r0, r1
     124:	mov	sp, fp
     128:	pop	{fp, lr}
     12c:	add	sp, sp, #8
     130:	bx	lr

00000134 <_f>:
     134:	push	{fp, lr}
     138:	mov	fp, sp
     13c:	sub	sp, sp, #16
     140:	str	r0, [sp, #8]
     144:	str	r1, [sp, #4]
     148:	ldr	r0, [sp, #8]
     14c:	movw	r1, #0
     150:	cmp	r0, r1
     154:	bne	164 <_f+0x30>
     158:	movw	r0, #0
     15c:	str	r0, [fp, #-4]
     160:	b	1c0 <_f+0x8c>
     164:	movw	r0, #0
     168:	str	r0, [sp]
     16c:	ldr	r0, [sp]
     170:	ldr	r1, [sp, #8]
     174:	ldr	r1, [r1]
     178:	cmp	r0, r1
     17c:	bge	1b8 <_f+0x84>
     180:	ldr	r0, [sp, #8]
     184:	ldr	r1, [sp]
     188:	bl	0 <vetor_elemento>
     18c:	ldr	r1, [sp, #4]
     190:	cmp	r0, r1
     194:	bne	1a4 <_f+0x70>
     198:	movw	r0, #1
     19c:	str	r0, [fp, #-4]
     1a0:	b	1c0 <_f+0x8c>
     1a4:	b	1a8 <_f+0x74>
     1a8:	ldr	r0, [sp]
     1ac:	add	r0, r0, #1
     1b0:	str	r0, [sp]
     1b4:	b	16c <_f+0x38>
     1b8:	movw	r0, #0
     1bc:	str	r0, [fp, #-4]
     1c0:	ldr	r0, [fp, #-4]
     1c4:	mov	sp, fp
     1c8:	pop	{fp, pc}

000001cc <teste_grafo_novo>:
     1cc:	push	{fp, lr}
     1d0:	mov	fp, sp
     1d4:	sub	sp, sp, #56	; 0x38
     1d8:	movw	r0, #0
     1dc:	str	r0, [fp, #-8]
     1e0:	movw	r0, #0
     1e4:	movt	r0, #0
     1e8:	bl	0 <printf>
     1ec:	movw	lr, #10
     1f0:	str	r0, [fp, #-16]
     1f4:	mov	r0, lr
     1f8:	bl	0 <grafo_novo>
     1fc:	str	r0, [fp, #-12]
     200:	ldr	r0, [fp, #-12]
     204:	movw	lr, #0
     208:	cmp	r0, lr
     20c:	bne	268 <teste_grafo_novo+0x9c>
     210:	movw	r0, #0
     214:	movt	r0, #0
     218:	bl	0 <printf>
     21c:	ldr	lr, [fp, #-8]
     220:	add	lr, lr, #1
     224:	str	lr, [fp, #-8]
     228:	ldr	lr, [fp, #-8]
     22c:	cmp	lr, #0
     230:	str	r0, [fp, #-20]	; 0xffffffec
     234:	bne	24c <teste_grafo_novo+0x80>
     238:	movw	r0, #0
     23c:	movt	r0, #0
     240:	bl	0 <printf>
     244:	str	r0, [fp, #-24]	; 0xffffffe8
     248:	b	25c <teste_grafo_novo+0x90>
     24c:	movw	r0, #0
     250:	movt	r0, #0
     254:	bl	0 <printf>
     258:	str	r0, [sp, #28]
     25c:	ldr	r0, [fp, #-8]
     260:	str	r0, [fp, #-4]
     264:	b	37c <teste_grafo_novo+0x1b0>
     268:	ldr	r0, [fp, #-12]
     26c:	ldr	r0, [r0]
     270:	cmp	r0, #10
     274:	beq	294 <teste_grafo_novo+0xc8>
     278:	movw	r0, #0
     27c:	movt	r0, #0
     280:	bl	0 <printf>
     284:	ldr	lr, [fp, #-8]
     288:	add	lr, lr, #1
     28c:	str	lr, [fp, #-8]
     290:	str	r0, [sp, #24]
     294:	ldr	r0, [fp, #-12]
     298:	bl	0 <grafo_apaga>
     29c:	movw	r0, #1
     2a0:	bl	0 <grafo_novo>
     2a4:	str	r0, [fp, #-12]
     2a8:	ldr	r0, [fp, #-12]
     2ac:	movw	lr, #0
     2b0:	cmp	r0, lr
     2b4:	bne	310 <teste_grafo_novo+0x144>
     2b8:	movw	r0, #0
     2bc:	movt	r0, #0
     2c0:	bl	0 <printf>
     2c4:	ldr	lr, [fp, #-8]
     2c8:	add	lr, lr, #1
     2cc:	str	lr, [fp, #-8]
     2d0:	ldr	lr, [fp, #-8]
     2d4:	cmp	lr, #0
     2d8:	str	r0, [sp, #20]
     2dc:	bne	2f4 <teste_grafo_novo+0x128>
     2e0:	movw	r0, #0
     2e4:	movt	r0, #0
     2e8:	bl	0 <printf>
     2ec:	str	r0, [sp, #16]
     2f0:	b	304 <teste_grafo_novo+0x138>
     2f4:	movw	r0, #0
     2f8:	movt	r0, #0
     2fc:	bl	0 <printf>
     300:	str	r0, [sp, #12]
     304:	ldr	r0, [fp, #-8]
     308:	str	r0, [fp, #-4]
     30c:	b	37c <teste_grafo_novo+0x1b0>
     310:	ldr	r0, [fp, #-12]
     314:	ldr	r0, [r0]
     318:	cmp	r0, #1
     31c:	beq	33c <teste_grafo_novo+0x170>
     320:	movw	r0, #0
     324:	movt	r0, #0
     328:	bl	0 <printf>
     32c:	ldr	lr, [fp, #-8]
     330:	add	lr, lr, #1
     334:	str	lr, [fp, #-8]
     338:	str	r0, [sp, #8]
     33c:	ldr	r0, [fp, #-12]
     340:	bl	0 <grafo_apaga>
     344:	ldr	r0, [fp, #-8]
     348:	cmp	r0, #0
     34c:	bne	364 <teste_grafo_novo+0x198>
     350:	movw	r0, #0
     354:	movt	r0, #0
     358:	bl	0 <printf>
     35c:	str	r0, [sp, #4]
     360:	b	374 <teste_grafo_novo+0x1a8>
     364:	movw	r0, #0
     368:	movt	r0, #0
     36c:	bl	0 <printf>
     370:	str	r0, [sp]
     374:	ldr	r0, [fp, #-8]
     378:	str	r0, [fp, #-4]
     37c:	ldr	r0, [fp, #-4]
     380:	mov	sp, fp
     384:	pop	{fp, pc}

00000388 <teste_grafo_aresta>:
     388:	push	{r4, r5, r6, sl, fp, lr}
     38c:	add	fp, sp, #16
     390:	sub	sp, sp, #128	; 0x80
     394:	movw	r0, #0
     398:	str	r0, [fp, #-20]	; 0xffffffec
     39c:	movw	r1, #8
     3a0:	str	r0, [fp, #-28]	; 0xffffffe4
     3a4:	mov	r0, r1
     3a8:	movw	r1, #22
     3ac:	movw	r2, #3
     3b0:	str	r2, [fp, #-32]	; 0xffffffe0
     3b4:	movw	r3, #2
     3b8:	str	r3, [fp, #-36]	; 0xffffffdc
     3bc:	movw	ip, #7
     3c0:	str	ip, [sp]
     3c4:	ldr	lr, [fp, #-36]	; 0xffffffdc
     3c8:	str	lr, [sp, #4]
     3cc:	ldr	r4, [fp, #-28]	; 0xffffffe4
     3d0:	str	r4, [sp, #8]
     3d4:	str	lr, [sp, #12]
     3d8:	str	ip, [sp, #16]
     3dc:	movw	r5, #5
     3e0:	str	r5, [sp, #20]
     3e4:	str	r5, [sp, #24]
     3e8:	movw	r5, #4
     3ec:	str	r5, [sp, #28]
     3f0:	str	r5, [sp, #32]
     3f4:	str	r4, [sp, #36]	; 0x24
     3f8:	str	r5, [sp, #40]	; 0x28
     3fc:	movw	r5, #6
     400:	str	r5, [sp, #44]	; 0x2c
     404:	movw	r6, #1
     408:	str	r6, [sp, #48]	; 0x30
     40c:	str	r6, [sp, #52]	; 0x34
     410:	str	ip, [sp, #56]	; 0x38
     414:	str	r5, [sp, #60]	; 0x3c
     418:	str	r5, [sp, #64]	; 0x40
     41c:	ldr	ip, [fp, #-32]	; 0xffffffe0
     420:	str	ip, [sp, #68]	; 0x44
     424:	str	r4, [sp, #72]	; 0x48
     428:	str	r6, [sp, #76]	; 0x4c
     42c:	bl	0 <_g>
     430:	str	r0, [fp, #-24]	; 0xffffffe8
     434:	movw	r0, #0
     438:	movt	r0, #0
     43c:	bl	0 <printf>
     440:	ldr	r1, [fp, #-24]	; 0xffffffe8
     444:	str	r0, [fp, #-40]	; 0xffffffd8
     448:	mov	r0, r1
     44c:	movw	r1, #5
     450:	movw	r2, #4
     454:	bl	0 <grafo_aresta>
     458:	cmp	r0, #1
     45c:	beq	47c <teste_grafo_aresta+0xf4>
     460:	movw	r0, #0
     464:	movt	r0, #0
     468:	bl	0 <printf>
     46c:	ldr	lr, [fp, #-20]	; 0xffffffec
     470:	add	lr, lr, #1
     474:	str	lr, [fp, #-20]	; 0xffffffec
     478:	str	r0, [fp, #-44]	; 0xffffffd4
     47c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     480:	movw	r1, #7
     484:	movw	r2, #6
     488:	bl	0 <grafo_aresta>
     48c:	cmp	r0, #1
     490:	beq	4b0 <teste_grafo_aresta+0x128>
     494:	movw	r0, #0
     498:	movt	r0, #0
     49c:	bl	0 <printf>
     4a0:	ldr	lr, [fp, #-20]	; 0xffffffec
     4a4:	add	lr, lr, #1
     4a8:	str	lr, [fp, #-20]	; 0xffffffec
     4ac:	str	r0, [fp, #-48]	; 0xffffffd0
     4b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     4b4:	movw	r1, #7
     4b8:	movw	r2, #1
     4bc:	bl	0 <grafo_aresta>
     4c0:	cmp	r0, #0
     4c4:	beq	4e4 <teste_grafo_aresta+0x15c>
     4c8:	movw	r0, #0
     4cc:	movt	r0, #0
     4d0:	bl	0 <printf>
     4d4:	ldr	lr, [fp, #-20]	; 0xffffffec
     4d8:	add	lr, lr, #1
     4dc:	str	lr, [fp, #-20]	; 0xffffffec
     4e0:	str	r0, [fp, #-52]	; 0xffffffcc
     4e4:	movw	r0, #0
     4e8:	movw	r1, #2
     4ec:	movw	r2, #7
     4f0:	bl	0 <grafo_aresta>
     4f4:	cmn	r0, #1
     4f8:	beq	518 <teste_grafo_aresta+0x190>
     4fc:	movw	r0, #0
     500:	movt	r0, #0
     504:	bl	0 <printf>
     508:	ldr	lr, [fp, #-20]	; 0xffffffec
     50c:	add	lr, lr, #1
     510:	str	lr, [fp, #-20]	; 0xffffffec
     514:	str	r0, [fp, #-56]	; 0xffffffc8
     518:	ldr	r0, [fp, #-24]	; 0xffffffe8
     51c:	bl	0 <grafo_apaga>
     520:	ldr	r0, [fp, #-20]	; 0xffffffec
     524:	cmp	r0, #0
     528:	bne	540 <teste_grafo_aresta+0x1b8>
     52c:	movw	r0, #0
     530:	movt	r0, #0
     534:	bl	0 <printf>
     538:	str	r0, [fp, #-60]	; 0xffffffc4
     53c:	b	550 <teste_grafo_aresta+0x1c8>
     540:	movw	r0, #0
     544:	movt	r0, #0
     548:	bl	0 <printf>
     54c:	str	r0, [fp, #-64]	; 0xffffffc0
     550:	ldr	r0, [fp, #-20]	; 0xffffffec
     554:	sub	sp, fp, #16
     558:	pop	{r4, r5, r6, sl, fp, pc}

0000055c <teste_grafo_adiciona>:
     55c:	push	{fp, lr}
     560:	mov	fp, sp
     564:	sub	sp, sp, #64	; 0x40
     568:	movw	r0, #0
     56c:	str	r0, [fp, #-4]
     570:	movw	r0, #9
     574:	movw	r1, #4
     578:	movw	r2, #3
     57c:	movw	r3, #2
     580:	str	r3, [fp, #-12]
     584:	movw	ip, #7
     588:	str	ip, [sp]
     58c:	ldr	ip, [fp, #-12]
     590:	str	ip, [sp, #4]
     594:	bl	0 <_g>
     598:	str	r0, [fp, #-8]
     59c:	movw	r0, #0
     5a0:	movt	r0, #0
     5a4:	bl	0 <printf>
     5a8:	ldr	r1, [fp, #-8]
     5ac:	str	r0, [fp, #-16]
     5b0:	mov	r0, r1
     5b4:	movw	r1, #2
     5b8:	movw	r2, #7
     5bc:	bl	0 <grafo_adiciona>
     5c0:	cmp	r0, #1
     5c4:	beq	5e4 <teste_grafo_adiciona+0x88>
     5c8:	movw	r0, #0
     5cc:	movt	r0, #0
     5d0:	bl	0 <printf>
     5d4:	ldr	lr, [fp, #-4]
     5d8:	add	lr, lr, #1
     5dc:	str	lr, [fp, #-4]
     5e0:	str	r0, [fp, #-20]	; 0xffffffec
     5e4:	ldr	r0, [fp, #-8]
     5e8:	ldr	r0, [r0, #4]
     5ec:	ldr	r0, [r0, #20]
     5f0:	movw	r1, #0
     5f4:	cmp	r0, r1
     5f8:	beq	614 <teste_grafo_adiciona+0xb8>
     5fc:	ldr	r0, [fp, #-8]
     600:	ldr	r0, [r0, #4]
     604:	ldr	r0, [r0, #20]
     608:	ldr	r0, [r0]
     60c:	cmp	r0, #7
     610:	beq	630 <teste_grafo_adiciona+0xd4>
     614:	movw	r0, #0
     618:	movt	r0, #0
     61c:	bl	0 <printf>
     620:	ldr	lr, [fp, #-4]
     624:	add	lr, lr, #1
     628:	str	lr, [fp, #-4]
     62c:	str	r0, [fp, #-24]	; 0xffffffe8
     630:	ldr	r0, [fp, #-8]
     634:	movw	r1, #3
     638:	movw	r2, #8
     63c:	bl	0 <grafo_adiciona>
     640:	cmp	r0, #1
     644:	beq	664 <teste_grafo_adiciona+0x108>
     648:	movw	r0, #0
     64c:	movt	r0, #0
     650:	bl	0 <printf>
     654:	ldr	lr, [fp, #-4]
     658:	add	lr, lr, #1
     65c:	str	lr, [fp, #-4]
     660:	str	r0, [fp, #-28]	; 0xffffffe4
     664:	ldr	r0, [fp, #-8]
     668:	ldr	r0, [r0, #4]
     66c:	ldr	r0, [r0, #28]
     670:	movw	r1, #0
     674:	cmp	r0, r1
     678:	beq	720 <teste_grafo_adiciona+0x1c4>
     67c:	ldr	r0, [fp, #-8]
     680:	ldr	r0, [r0, #4]
     684:	ldr	r0, [r0, #28]
     688:	ldr	r0, [r0, #4]
     68c:	movw	r1, #0
     690:	cmp	r0, r1
     694:	beq	720 <teste_grafo_adiciona+0x1c4>
     698:	ldr	r0, [fp, #-8]
     69c:	ldr	r0, [r0, #4]
     6a0:	ldr	r0, [r0, #28]
     6a4:	ldr	r0, [r0, #4]
     6a8:	ldr	r0, [r0, #4]
     6ac:	movw	r1, #0
     6b0:	cmp	r0, r1
     6b4:	bne	720 <teste_grafo_adiciona+0x1c4>
     6b8:	ldr	r0, [fp, #-8]
     6bc:	ldr	r0, [r0, #4]
     6c0:	ldr	r0, [r0, #28]
     6c4:	ldr	r0, [r0]
     6c8:	cmp	r0, #2
     6cc:	bne	6ec <teste_grafo_adiciona+0x190>
     6d0:	ldr	r0, [fp, #-8]
     6d4:	ldr	r0, [r0, #4]
     6d8:	ldr	r0, [r0, #28]
     6dc:	ldr	r0, [r0, #4]
     6e0:	ldr	r0, [r0]
     6e4:	cmp	r0, #8
     6e8:	beq	73c <teste_grafo_adiciona+0x1e0>
     6ec:	ldr	r0, [fp, #-8]
     6f0:	ldr	r0, [r0, #4]
     6f4:	ldr	r0, [r0, #28]
     6f8:	ldr	r0, [r0]
     6fc:	cmp	r0, #8
     700:	bne	720 <teste_grafo_adiciona+0x1c4>
     704:	ldr	r0, [fp, #-8]
     708:	ldr	r0, [r0, #4]
     70c:	ldr	r0, [r0, #28]
     710:	ldr	r0, [r0, #4]
     714:	ldr	r0, [r0]
     718:	cmp	r0, #2
     71c:	beq	73c <teste_grafo_adiciona+0x1e0>
     720:	movw	r0, #0
     724:	movt	r0, #0
     728:	bl	0 <printf>
     72c:	ldr	lr, [fp, #-4]
     730:	add	lr, lr, #1
     734:	str	lr, [fp, #-4]
     738:	str	r0, [sp, #32]
     73c:	ldr	r0, [fp, #-8]
     740:	movw	r1, #2
     744:	movw	r2, #7
     748:	bl	0 <grafo_adiciona>
     74c:	cmp	r0, #0
     750:	beq	770 <teste_grafo_adiciona+0x214>
     754:	movw	r0, #0
     758:	movt	r0, #0
     75c:	bl	0 <printf>
     760:	ldr	lr, [fp, #-4]
     764:	add	lr, lr, #1
     768:	str	lr, [fp, #-4]
     76c:	str	r0, [sp, #28]
     770:	ldr	r0, [fp, #-8]
     774:	movw	r1, #22
     778:	movw	r2, #7
     77c:	bl	0 <grafo_adiciona>
     780:	cmn	r0, #1
     784:	beq	7a4 <teste_grafo_adiciona+0x248>
     788:	movw	r0, #0
     78c:	movt	r0, #0
     790:	bl	0 <printf>
     794:	ldr	lr, [fp, #-4]
     798:	add	lr, lr, #1
     79c:	str	lr, [fp, #-4]
     7a0:	str	r0, [sp, #24]
     7a4:	movw	r0, #0
     7a8:	movw	r1, #2
     7ac:	movw	r2, #7
     7b0:	bl	0 <grafo_adiciona>
     7b4:	cmn	r0, #1
     7b8:	beq	7d8 <teste_grafo_adiciona+0x27c>
     7bc:	movw	r0, #0
     7c0:	movt	r0, #0
     7c4:	bl	0 <printf>
     7c8:	ldr	lr, [fp, #-4]
     7cc:	add	lr, lr, #1
     7d0:	str	lr, [fp, #-4]
     7d4:	str	r0, [sp, #20]
     7d8:	ldr	r0, [fp, #-8]
     7dc:	bl	0 <grafo_apaga>
     7e0:	ldr	r0, [fp, #-4]
     7e4:	cmp	r0, #0
     7e8:	bne	800 <teste_grafo_adiciona+0x2a4>
     7ec:	movw	r0, #0
     7f0:	movt	r0, #0
     7f4:	bl	0 <printf>
     7f8:	str	r0, [sp, #16]
     7fc:	b	810 <teste_grafo_adiciona+0x2b4>
     800:	movw	r0, #0
     804:	movt	r0, #0
     808:	bl	0 <printf>
     80c:	str	r0, [sp, #12]
     810:	ldr	r0, [fp, #-4]
     814:	mov	sp, fp
     818:	pop	{fp, pc}

0000081c <teste_grafo_remove>:
     81c:	push	{fp, lr}
     820:	mov	fp, sp
     824:	sub	sp, sp, #64	; 0x40
     828:	movw	r0, #0
     82c:	str	r0, [fp, #-4]
     830:	movw	r0, #9
     834:	movw	r1, #6
     838:	movw	r2, #3
     83c:	movw	r3, #2
     840:	str	r3, [fp, #-12]
     844:	movw	ip, #7
     848:	str	ip, [sp]
     84c:	ldr	lr, [fp, #-12]
     850:	str	lr, [sp, #4]
     854:	str	ip, [sp, #8]
     858:	movw	ip, #1
     85c:	str	ip, [sp, #12]
     860:	bl	0 <_g>
     864:	str	r0, [fp, #-8]
     868:	movw	r0, #0
     86c:	movt	r0, #0
     870:	bl	0 <printf>
     874:	ldr	r1, [fp, #-8]
     878:	str	r0, [fp, #-16]
     87c:	mov	r0, r1
     880:	movw	r1, #7
     884:	movw	r2, #1
     888:	bl	0 <grafo_remove>
     88c:	cmp	r0, #1
     890:	beq	8b0 <teste_grafo_remove+0x94>
     894:	movw	r0, #0
     898:	movt	r0, #0
     89c:	bl	0 <printf>
     8a0:	ldr	lr, [fp, #-4]
     8a4:	add	lr, lr, #1
     8a8:	str	lr, [fp, #-4]
     8ac:	str	r0, [fp, #-20]	; 0xffffffec
     8b0:	ldr	r0, [fp, #-8]
     8b4:	ldr	r0, [r0, #4]
     8b8:	ldr	r0, [r0, #60]	; 0x3c
     8bc:	movw	r1, #0
     8c0:	cmp	r0, r1
     8c4:	beq	8fc <teste_grafo_remove+0xe0>
     8c8:	ldr	r0, [fp, #-8]
     8cc:	ldr	r0, [r0, #4]
     8d0:	ldr	r0, [r0, #60]	; 0x3c
     8d4:	ldr	r0, [r0, #4]
     8d8:	movw	r1, #0
     8dc:	cmp	r0, r1
     8e0:	bne	8fc <teste_grafo_remove+0xe0>
     8e4:	ldr	r0, [fp, #-8]
     8e8:	ldr	r0, [r0, #4]
     8ec:	ldr	r0, [r0, #60]	; 0x3c
     8f0:	ldr	r0, [r0]
     8f4:	cmp	r0, #2
     8f8:	beq	918 <teste_grafo_remove+0xfc>
     8fc:	movw	r0, #0
     900:	movt	r0, #0
     904:	bl	0 <printf>
     908:	ldr	lr, [fp, #-4]
     90c:	add	lr, lr, #1
     910:	str	lr, [fp, #-4]
     914:	str	r0, [fp, #-24]	; 0xffffffe8
     918:	ldr	r0, [fp, #-8]
     91c:	movw	r1, #7
     920:	movw	r2, #2
     924:	bl	0 <grafo_remove>
     928:	cmp	r0, #1
     92c:	beq	94c <teste_grafo_remove+0x130>
     930:	movw	r0, #0
     934:	movt	r0, #0
     938:	bl	0 <printf>
     93c:	ldr	lr, [fp, #-4]
     940:	add	lr, lr, #1
     944:	str	lr, [fp, #-4]
     948:	str	r0, [fp, #-28]	; 0xffffffe4
     94c:	ldr	r0, [fp, #-8]
     950:	ldr	r0, [r0, #4]
     954:	ldr	r0, [r0, #60]	; 0x3c
     958:	movw	r1, #0
     95c:	cmp	r0, r1
     960:	beq	980 <teste_grafo_remove+0x164>
     964:	movw	r0, #0
     968:	movt	r0, #0
     96c:	bl	0 <printf>
     970:	ldr	lr, [fp, #-4]
     974:	add	lr, lr, #1
     978:	str	lr, [fp, #-4]
     97c:	str	r0, [sp, #32]
     980:	ldr	r0, [fp, #-8]
     984:	movw	r1, #4
     988:	movw	r2, #0
     98c:	bl	0 <grafo_remove>
     990:	cmp	r0, #0
     994:	beq	9b4 <teste_grafo_remove+0x198>
     998:	movw	r0, #0
     99c:	movt	r0, #0
     9a0:	bl	0 <printf>
     9a4:	ldr	lr, [fp, #-4]
     9a8:	add	lr, lr, #1
     9ac:	str	lr, [fp, #-4]
     9b0:	str	r0, [sp, #28]
     9b4:	ldr	r0, [fp, #-8]
     9b8:	movw	r1, #7
     9bc:	movw	r2, #22
     9c0:	bl	0 <grafo_remove>
     9c4:	cmn	r0, #1
     9c8:	beq	9e8 <teste_grafo_remove+0x1cc>
     9cc:	movw	r0, #0
     9d0:	movt	r0, #0
     9d4:	bl	0 <printf>
     9d8:	ldr	lr, [fp, #-4]
     9dc:	add	lr, lr, #1
     9e0:	str	lr, [fp, #-4]
     9e4:	str	r0, [sp, #24]
     9e8:	ldr	r0, [fp, #-8]
     9ec:	bl	0 <grafo_apaga>
     9f0:	ldr	r0, [fp, #-4]
     9f4:	cmp	r0, #0
     9f8:	bne	a10 <teste_grafo_remove+0x1f4>
     9fc:	movw	r0, #0
     a00:	movt	r0, #0
     a04:	bl	0 <printf>
     a08:	str	r0, [sp, #20]
     a0c:	b	a20 <teste_grafo_remove+0x204>
     a10:	movw	r0, #0
     a14:	movt	r0, #0
     a18:	bl	0 <printf>
     a1c:	str	r0, [sp, #16]
     a20:	ldr	r0, [fp, #-4]
     a24:	mov	sp, fp
     a28:	pop	{fp, pc}

00000a2c <teste_v_sucessores>:
     a2c:	push	{r4, r5, r6, sl, fp, lr}
     a30:	add	fp, sp, #16
     a34:	sub	sp, sp, #160	; 0xa0
     a38:	movw	r0, #0
     a3c:	str	r0, [fp, #-24]	; 0xffffffe8
     a40:	movw	r1, #8
     a44:	str	r0, [fp, #-36]	; 0xffffffdc
     a48:	mov	r0, r1
     a4c:	movw	r1, #22
     a50:	movw	r2, #3
     a54:	str	r2, [fp, #-40]	; 0xffffffd8
     a58:	movw	r3, #2
     a5c:	str	r3, [fp, #-44]	; 0xffffffd4
     a60:	movw	ip, #7
     a64:	str	ip, [sp]
     a68:	ldr	lr, [fp, #-44]	; 0xffffffd4
     a6c:	str	lr, [sp, #4]
     a70:	ldr	r4, [fp, #-36]	; 0xffffffdc
     a74:	str	r4, [sp, #8]
     a78:	str	lr, [sp, #12]
     a7c:	str	ip, [sp, #16]
     a80:	movw	r5, #5
     a84:	str	r5, [sp, #20]
     a88:	str	r5, [sp, #24]
     a8c:	movw	r5, #4
     a90:	str	r5, [sp, #28]
     a94:	str	r5, [sp, #32]
     a98:	str	r4, [sp, #36]	; 0x24
     a9c:	str	r5, [sp, #40]	; 0x28
     aa0:	movw	r5, #6
     aa4:	str	r5, [sp, #44]	; 0x2c
     aa8:	movw	r6, #1
     aac:	str	r6, [sp, #48]	; 0x30
     ab0:	str	r6, [sp, #52]	; 0x34
     ab4:	str	ip, [sp, #56]	; 0x38
     ab8:	str	r5, [sp, #60]	; 0x3c
     abc:	str	r5, [sp, #64]	; 0x40
     ac0:	ldr	ip, [fp, #-40]	; 0xffffffd8
     ac4:	str	ip, [sp, #68]	; 0x44
     ac8:	str	r4, [sp, #72]	; 0x48
     acc:	str	r6, [sp, #76]	; 0x4c
     ad0:	bl	0 <_g>
     ad4:	str	r0, [fp, #-28]	; 0xffffffe4
     ad8:	movw	r0, #0
     adc:	movt	r0, #0
     ae0:	bl	0 <printf>
     ae4:	ldr	r1, [fp, #-28]	; 0xffffffe4
     ae8:	str	r0, [fp, #-48]	; 0xffffffd0
     aec:	mov	r0, r1
     af0:	movw	r1, #7
     af4:	bl	0 <v_sucessores>
     af8:	str	r0, [fp, #-32]	; 0xffffffe0
     afc:	movw	r1, #0
     b00:	cmp	r0, r1
     b04:	bne	b24 <teste_v_sucessores+0xf8>
     b08:	movw	r0, #0
     b0c:	movt	r0, #0
     b10:	bl	0 <printf>
     b14:	ldr	lr, [fp, #-24]	; 0xffffffe8
     b18:	add	lr, lr, #1
     b1c:	str	lr, [fp, #-24]	; 0xffffffe8
     b20:	str	r0, [fp, #-52]	; 0xffffffcc
     b24:	ldr	r0, [fp, #-32]	; 0xffffffe0
     b28:	movw	r1, #0
     b2c:	cmp	r0, r1
     b30:	bne	b70 <teste_v_sucessores+0x144>
     b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b38:	cmp	r0, #0
     b3c:	bne	b54 <teste_v_sucessores+0x128>
     b40:	movw	r0, #0
     b44:	movt	r0, #0
     b48:	bl	0 <printf>
     b4c:	str	r0, [fp, #-56]	; 0xffffffc8
     b50:	b	b64 <teste_v_sucessores+0x138>
     b54:	movw	r0, #0
     b58:	movt	r0, #0
     b5c:	bl	0 <printf>
     b60:	str	r0, [fp, #-60]	; 0xffffffc4
     b64:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b68:	str	r0, [fp, #-20]	; 0xffffffec
     b6c:	b	cf4 <teste_v_sucessores+0x2c8>
     b70:	ldr	r0, [fp, #-32]	; 0xffffffe0
     b74:	ldr	r0, [r0]
     b78:	cmp	r0, #3
     b7c:	beq	b9c <teste_v_sucessores+0x170>
     b80:	movw	r0, #0
     b84:	movt	r0, #0
     b88:	bl	0 <printf>
     b8c:	ldr	lr, [fp, #-24]	; 0xffffffe8
     b90:	add	lr, lr, #1
     b94:	str	lr, [fp, #-24]	; 0xffffffe8
     b98:	str	r0, [fp, #-64]	; 0xffffffc0
     b9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ba0:	movw	r1, #2
     ba4:	bl	134 <_f>
     ba8:	cmp	r0, #0
     bac:	beq	bd8 <teste_v_sucessores+0x1ac>
     bb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     bb4:	movw	r1, #5
     bb8:	bl	134 <_f>
     bbc:	cmp	r0, #0
     bc0:	beq	bd8 <teste_v_sucessores+0x1ac>
     bc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     bc8:	movw	r1, #6
     bcc:	bl	134 <_f>
     bd0:	cmp	r0, #0
     bd4:	bne	bf4 <teste_v_sucessores+0x1c8>
     bd8:	movw	r0, #0
     bdc:	movt	r0, #0
     be0:	bl	0 <printf>
     be4:	ldr	lr, [fp, #-24]	; 0xffffffe8
     be8:	add	lr, lr, #1
     bec:	str	lr, [fp, #-24]	; 0xffffffe8
     bf0:	str	r0, [fp, #-68]	; 0xffffffbc
     bf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     bf8:	bl	0 <vetor_apaga>
     bfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
     c00:	movw	r1, #2
     c04:	bl	0 <v_sucessores>
     c08:	str	r0, [fp, #-32]	; 0xffffffe0
     c0c:	movw	r1, #0
     c10:	cmp	r0, r1
     c14:	bne	c34 <teste_v_sucessores+0x208>
     c18:	movw	r0, #0
     c1c:	movt	r0, #0
     c20:	bl	0 <printf>
     c24:	ldr	lr, [fp, #-24]	; 0xffffffe8
     c28:	add	lr, lr, #1
     c2c:	str	lr, [fp, #-24]	; 0xffffffe8
     c30:	str	r0, [fp, #-72]	; 0xffffffb8
     c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
     c38:	movw	r1, #0
     c3c:	cmp	r0, r1
     c40:	bne	c80 <teste_v_sucessores+0x254>
     c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
     c48:	cmp	r0, #0
     c4c:	bne	c64 <teste_v_sucessores+0x238>
     c50:	movw	r0, #0
     c54:	movt	r0, #0
     c58:	bl	0 <printf>
     c5c:	str	r0, [fp, #-76]	; 0xffffffb4
     c60:	b	c74 <teste_v_sucessores+0x248>
     c64:	movw	r0, #0
     c68:	movt	r0, #0
     c6c:	bl	0 <printf>
     c70:	str	r0, [fp, #-80]	; 0xffffffb0
     c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
     c78:	str	r0, [fp, #-20]	; 0xffffffec
     c7c:	b	cf4 <teste_v_sucessores+0x2c8>
     c80:	ldr	r0, [fp, #-32]	; 0xffffffe0
     c84:	ldr	r0, [r0]
     c88:	cmp	r0, #0
     c8c:	beq	cac <teste_v_sucessores+0x280>
     c90:	movw	r0, #0
     c94:	movt	r0, #0
     c98:	bl	0 <printf>
     c9c:	ldr	lr, [fp, #-24]	; 0xffffffe8
     ca0:	add	lr, lr, #1
     ca4:	str	lr, [fp, #-24]	; 0xffffffe8
     ca8:	str	r0, [fp, #-84]	; 0xffffffac
     cac:	ldr	r0, [fp, #-32]	; 0xffffffe0
     cb0:	bl	0 <vetor_apaga>
     cb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     cb8:	bl	0 <grafo_apaga>
     cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     cc0:	cmp	r0, #0
     cc4:	bne	cdc <teste_v_sucessores+0x2b0>
     cc8:	movw	r0, #0
     ccc:	movt	r0, #0
     cd0:	bl	0 <printf>
     cd4:	str	r0, [sp, #88]	; 0x58
     cd8:	b	cec <teste_v_sucessores+0x2c0>
     cdc:	movw	r0, #0
     ce0:	movt	r0, #0
     ce4:	bl	0 <printf>
     ce8:	str	r0, [sp, #84]	; 0x54
     cec:	ldr	r0, [fp, #-24]	; 0xffffffe8
     cf0:	str	r0, [fp, #-20]	; 0xffffffec
     cf4:	ldr	r0, [fp, #-20]	; 0xffffffec
     cf8:	sub	sp, fp, #16
     cfc:	pop	{r4, r5, r6, sl, fp, pc}

00000d00 <teste_v_antecessores>:
     d00:	push	{r4, r5, r6, sl, fp, lr}
     d04:	add	fp, sp, #16
     d08:	sub	sp, sp, #160	; 0xa0
     d0c:	movw	r0, #0
     d10:	str	r0, [fp, #-24]	; 0xffffffe8
     d14:	movw	r1, #8
     d18:	str	r0, [fp, #-36]	; 0xffffffdc
     d1c:	mov	r0, r1
     d20:	movw	r1, #22
     d24:	movw	r2, #3
     d28:	str	r2, [fp, #-40]	; 0xffffffd8
     d2c:	movw	r3, #2
     d30:	str	r3, [fp, #-44]	; 0xffffffd4
     d34:	movw	ip, #7
     d38:	str	ip, [sp]
     d3c:	ldr	lr, [fp, #-44]	; 0xffffffd4
     d40:	str	lr, [sp, #4]
     d44:	ldr	r4, [fp, #-36]	; 0xffffffdc
     d48:	str	r4, [sp, #8]
     d4c:	str	lr, [sp, #12]
     d50:	str	ip, [sp, #16]
     d54:	movw	r5, #5
     d58:	str	r5, [sp, #20]
     d5c:	str	r5, [sp, #24]
     d60:	movw	r5, #4
     d64:	str	r5, [sp, #28]
     d68:	str	r5, [sp, #32]
     d6c:	str	r4, [sp, #36]	; 0x24
     d70:	str	r5, [sp, #40]	; 0x28
     d74:	movw	r5, #6
     d78:	str	r5, [sp, #44]	; 0x2c
     d7c:	movw	r6, #1
     d80:	str	r6, [sp, #48]	; 0x30
     d84:	str	r6, [sp, #52]	; 0x34
     d88:	str	ip, [sp, #56]	; 0x38
     d8c:	str	r5, [sp, #60]	; 0x3c
     d90:	str	r5, [sp, #64]	; 0x40
     d94:	ldr	ip, [fp, #-40]	; 0xffffffd8
     d98:	str	ip, [sp, #68]	; 0x44
     d9c:	str	r4, [sp, #72]	; 0x48
     da0:	str	r6, [sp, #76]	; 0x4c
     da4:	bl	0 <_g>
     da8:	str	r0, [fp, #-28]	; 0xffffffe4
     dac:	movw	r0, #0
     db0:	movt	r0, #0
     db4:	bl	0 <printf>
     db8:	ldr	r1, [fp, #-28]	; 0xffffffe4
     dbc:	str	r0, [fp, #-48]	; 0xffffffd0
     dc0:	mov	r0, r1
     dc4:	movw	r1, #2
     dc8:	bl	0 <v_antecessores>
     dcc:	str	r0, [fp, #-32]	; 0xffffffe0
     dd0:	movw	r1, #0
     dd4:	cmp	r0, r1
     dd8:	bne	df8 <teste_v_antecessores+0xf8>
     ddc:	movw	r0, #0
     de0:	movt	r0, #0
     de4:	bl	0 <printf>
     de8:	ldr	lr, [fp, #-24]	; 0xffffffe8
     dec:	add	lr, lr, #1
     df0:	str	lr, [fp, #-24]	; 0xffffffe8
     df4:	str	r0, [fp, #-52]	; 0xffffffcc
     df8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     dfc:	movw	r1, #0
     e00:	cmp	r0, r1
     e04:	bne	e44 <teste_v_antecessores+0x144>
     e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e0c:	cmp	r0, #0
     e10:	bne	e28 <teste_v_antecessores+0x128>
     e14:	movw	r0, #0
     e18:	movt	r0, #0
     e1c:	bl	0 <printf>
     e20:	str	r0, [fp, #-56]	; 0xffffffc8
     e24:	b	e38 <teste_v_antecessores+0x138>
     e28:	movw	r0, #0
     e2c:	movt	r0, #0
     e30:	bl	0 <printf>
     e34:	str	r0, [fp, #-60]	; 0xffffffc4
     e38:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e3c:	str	r0, [fp, #-20]	; 0xffffffec
     e40:	b	fc8 <teste_v_antecessores+0x2c8>
     e44:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e48:	ldr	r0, [r0]
     e4c:	cmp	r0, #3
     e50:	beq	e70 <teste_v_antecessores+0x170>
     e54:	movw	r0, #0
     e58:	movt	r0, #0
     e5c:	bl	0 <printf>
     e60:	ldr	lr, [fp, #-24]	; 0xffffffe8
     e64:	add	lr, lr, #1
     e68:	str	lr, [fp, #-24]	; 0xffffffe8
     e6c:	str	r0, [fp, #-64]	; 0xffffffc0
     e70:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e74:	movw	r1, #0
     e78:	bl	134 <_f>
     e7c:	cmp	r0, #0
     e80:	beq	eac <teste_v_antecessores+0x1ac>
     e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e88:	movw	r1, #3
     e8c:	bl	134 <_f>
     e90:	cmp	r0, #0
     e94:	beq	eac <teste_v_antecessores+0x1ac>
     e98:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e9c:	movw	r1, #7
     ea0:	bl	134 <_f>
     ea4:	cmp	r0, #0
     ea8:	bne	ec8 <teste_v_antecessores+0x1c8>
     eac:	movw	r0, #0
     eb0:	movt	r0, #0
     eb4:	bl	0 <printf>
     eb8:	ldr	lr, [fp, #-24]	; 0xffffffe8
     ebc:	add	lr, lr, #1
     ec0:	str	lr, [fp, #-24]	; 0xffffffe8
     ec4:	str	r0, [fp, #-68]	; 0xffffffbc
     ec8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ecc:	bl	0 <vetor_apaga>
     ed0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     ed4:	movw	r1, #7
     ed8:	bl	0 <v_antecessores>
     edc:	str	r0, [fp, #-32]	; 0xffffffe0
     ee0:	movw	r1, #0
     ee4:	cmp	r0, r1
     ee8:	bne	f08 <teste_v_antecessores+0x208>
     eec:	movw	r0, #0
     ef0:	movt	r0, #0
     ef4:	bl	0 <printf>
     ef8:	ldr	lr, [fp, #-24]	; 0xffffffe8
     efc:	add	lr, lr, #1
     f00:	str	lr, [fp, #-24]	; 0xffffffe8
     f04:	str	r0, [fp, #-72]	; 0xffffffb8
     f08:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f0c:	movw	r1, #0
     f10:	cmp	r0, r1
     f14:	bne	f54 <teste_v_antecessores+0x254>
     f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f1c:	cmp	r0, #0
     f20:	bne	f38 <teste_v_antecessores+0x238>
     f24:	movw	r0, #0
     f28:	movt	r0, #0
     f2c:	bl	0 <printf>
     f30:	str	r0, [fp, #-76]	; 0xffffffb4
     f34:	b	f48 <teste_v_antecessores+0x248>
     f38:	movw	r0, #0
     f3c:	movt	r0, #0
     f40:	bl	0 <printf>
     f44:	str	r0, [fp, #-80]	; 0xffffffb0
     f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f4c:	str	r0, [fp, #-20]	; 0xffffffec
     f50:	b	fc8 <teste_v_antecessores+0x2c8>
     f54:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f58:	ldr	r0, [r0]
     f5c:	cmp	r0, #0
     f60:	beq	f80 <teste_v_antecessores+0x280>
     f64:	movw	r0, #0
     f68:	movt	r0, #0
     f6c:	bl	0 <printf>
     f70:	ldr	lr, [fp, #-24]	; 0xffffffe8
     f74:	add	lr, lr, #1
     f78:	str	lr, [fp, #-24]	; 0xffffffe8
     f7c:	str	r0, [fp, #-84]	; 0xffffffac
     f80:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f84:	bl	0 <vetor_apaga>
     f88:	ldr	r0, [fp, #-28]	; 0xffffffe4
     f8c:	bl	0 <grafo_apaga>
     f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f94:	cmp	r0, #0
     f98:	bne	fb0 <teste_v_antecessores+0x2b0>
     f9c:	movw	r0, #0
     fa0:	movt	r0, #0
     fa4:	bl	0 <printf>
     fa8:	str	r0, [sp, #88]	; 0x58
     fac:	b	fc0 <teste_v_antecessores+0x2c0>
     fb0:	movw	r0, #0
     fb4:	movt	r0, #0
     fb8:	bl	0 <printf>
     fbc:	str	r0, [sp, #84]	; 0x54
     fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     fc4:	str	r0, [fp, #-20]	; 0xffffffec
     fc8:	ldr	r0, [fp, #-20]	; 0xffffffec
     fcc:	sub	sp, fp, #16
     fd0:	pop	{r4, r5, r6, sl, fp, pc}

00000fd4 <teste_v_grau>:
     fd4:	push	{r4, r5, r6, sl, fp, lr}
     fd8:	add	fp, sp, #16
     fdc:	sub	sp, sp, #128	; 0x80
     fe0:	movw	r0, #0
     fe4:	str	r0, [fp, #-20]	; 0xffffffec
     fe8:	movw	r1, #8
     fec:	str	r0, [fp, #-28]	; 0xffffffe4
     ff0:	mov	r0, r1
     ff4:	movw	r1, #22
     ff8:	movw	r2, #3
     ffc:	str	r2, [fp, #-32]	; 0xffffffe0
    1000:	movw	r3, #2
    1004:	str	r3, [fp, #-36]	; 0xffffffdc
    1008:	movw	ip, #7
    100c:	str	ip, [sp]
    1010:	ldr	lr, [fp, #-36]	; 0xffffffdc
    1014:	str	lr, [sp, #4]
    1018:	ldr	r4, [fp, #-28]	; 0xffffffe4
    101c:	str	r4, [sp, #8]
    1020:	str	lr, [sp, #12]
    1024:	str	ip, [sp, #16]
    1028:	movw	r5, #5
    102c:	str	r5, [sp, #20]
    1030:	str	r5, [sp, #24]
    1034:	movw	r5, #4
    1038:	str	r5, [sp, #28]
    103c:	str	r5, [sp, #32]
    1040:	str	r4, [sp, #36]	; 0x24
    1044:	str	r5, [sp, #40]	; 0x28
    1048:	movw	r5, #6
    104c:	str	r5, [sp, #44]	; 0x2c
    1050:	movw	r6, #1
    1054:	str	r6, [sp, #48]	; 0x30
    1058:	str	r6, [sp, #52]	; 0x34
    105c:	str	ip, [sp, #56]	; 0x38
    1060:	str	r5, [sp, #60]	; 0x3c
    1064:	str	r5, [sp, #64]	; 0x40
    1068:	ldr	ip, [fp, #-32]	; 0xffffffe0
    106c:	str	ip, [sp, #68]	; 0x44
    1070:	str	r4, [sp, #72]	; 0x48
    1074:	str	r6, [sp, #76]	; 0x4c
    1078:	bl	0 <_g>
    107c:	str	r0, [fp, #-24]	; 0xffffffe8
    1080:	movw	r0, #0
    1084:	movt	r0, #0
    1088:	bl	0 <printf>
    108c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1090:	str	r0, [fp, #-40]	; 0xffffffd8
    1094:	mov	r0, r1
    1098:	mvn	r1, #3
    109c:	bl	0 <v_grau>
    10a0:	cmn	r0, #1
    10a4:	beq	10c4 <teste_v_grau+0xf0>
    10a8:	movw	r0, #0
    10ac:	movt	r0, #0
    10b0:	bl	0 <printf>
    10b4:	ldr	lr, [fp, #-20]	; 0xffffffec
    10b8:	add	lr, lr, #1
    10bc:	str	lr, [fp, #-20]	; 0xffffffec
    10c0:	str	r0, [fp, #-44]	; 0xffffffd4
    10c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    10c8:	movw	r1, #7
    10cc:	bl	0 <v_grau>
    10d0:	cmp	r0, #3
    10d4:	beq	10f4 <teste_v_grau+0x120>
    10d8:	movw	r0, #0
    10dc:	movt	r0, #0
    10e0:	bl	0 <printf>
    10e4:	ldr	lr, [fp, #-20]	; 0xffffffec
    10e8:	add	lr, lr, #1
    10ec:	str	lr, [fp, #-20]	; 0xffffffec
    10f0:	str	r0, [fp, #-48]	; 0xffffffd0
    10f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    10f8:	movw	r1, #5
    10fc:	bl	0 <v_grau>
    1100:	cmp	r0, #2
    1104:	beq	1124 <teste_v_grau+0x150>
    1108:	movw	r0, #0
    110c:	movt	r0, #0
    1110:	bl	0 <printf>
    1114:	ldr	lr, [fp, #-20]	; 0xffffffec
    1118:	add	lr, lr, #1
    111c:	str	lr, [fp, #-20]	; 0xffffffec
    1120:	str	r0, [fp, #-52]	; 0xffffffcc
    1124:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1128:	bl	0 <grafo_apaga>
    112c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1130:	cmp	r0, #0
    1134:	bne	114c <teste_v_grau+0x178>
    1138:	movw	r0, #0
    113c:	movt	r0, #0
    1140:	bl	0 <printf>
    1144:	str	r0, [fp, #-56]	; 0xffffffc8
    1148:	b	115c <teste_v_grau+0x188>
    114c:	movw	r0, #0
    1150:	movt	r0, #0
    1154:	bl	0 <printf>
    1158:	str	r0, [fp, #-60]	; 0xffffffc4
    115c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1160:	sub	sp, fp, #16
    1164:	pop	{r4, r5, r6, sl, fp, pc}

00001168 <teste_v_celebridade>:
    1168:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    116c:	add	fp, sp, #24
    1170:	sub	sp, sp, #152	; 0x98
    1174:	movw	r0, #0
    1178:	str	r0, [fp, #-28]	; 0xffffffe4
    117c:	movw	r1, #8
    1180:	str	r0, [fp, #-36]	; 0xffffffdc
    1184:	mov	r0, r1
    1188:	movw	r1, #30
    118c:	movw	r2, #3
    1190:	str	r2, [fp, #-40]	; 0xffffffd8
    1194:	movw	r3, #2
    1198:	str	r3, [fp, #-44]	; 0xffffffd4
    119c:	movw	ip, #7
    11a0:	str	ip, [sp]
    11a4:	ldr	lr, [fp, #-44]	; 0xffffffd4
    11a8:	str	lr, [sp, #4]
    11ac:	ldr	r4, [fp, #-36]	; 0xffffffdc
    11b0:	str	r4, [sp, #8]
    11b4:	str	lr, [sp, #12]
    11b8:	str	ip, [sp, #16]
    11bc:	movw	r5, #5
    11c0:	str	r5, [sp, #20]
    11c4:	str	r5, [sp, #24]
    11c8:	movw	r6, #4
    11cc:	str	r6, [sp, #28]
    11d0:	str	r6, [sp, #32]
    11d4:	str	r4, [sp, #36]	; 0x24
    11d8:	str	r6, [sp, #40]	; 0x28
    11dc:	movw	r7, #6
    11e0:	str	r7, [sp, #44]	; 0x2c
    11e4:	movw	r8, #1
    11e8:	str	r8, [sp, #48]	; 0x30
    11ec:	str	r8, [sp, #52]	; 0x34
    11f0:	str	ip, [sp, #56]	; 0x38
    11f4:	str	r7, [sp, #60]	; 0x3c
    11f8:	str	r7, [sp, #64]	; 0x40
    11fc:	ldr	ip, [fp, #-40]	; 0xffffffd8
    1200:	str	ip, [sp, #68]	; 0x44
    1204:	str	r4, [sp, #72]	; 0x48
    1208:	str	r8, [sp, #76]	; 0x4c
    120c:	str	r8, [sp, #80]	; 0x50
    1210:	str	lr, [sp, #84]	; 0x54
    1214:	str	r7, [sp, #88]	; 0x58
    1218:	str	lr, [sp, #92]	; 0x5c
    121c:	str	r6, [sp, #96]	; 0x60
    1220:	str	lr, [sp, #100]	; 0x64
    1224:	str	r5, [sp, #104]	; 0x68
    1228:	str	lr, [sp, #108]	; 0x6c
    122c:	bl	0 <_g>
    1230:	str	r0, [fp, #-32]	; 0xffffffe0
    1234:	movw	r0, #0
    1238:	movt	r0, #0
    123c:	bl	0 <printf>
    1240:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1244:	str	r0, [fp, #-48]	; 0xffffffd0
    1248:	mov	r0, r1
    124c:	movw	r1, #7
    1250:	bl	0 <v_celebridade>
    1254:	cmp	r0, #0
    1258:	beq	1278 <teste_v_celebridade+0x110>
    125c:	movw	r0, #0
    1260:	movt	r0, #0
    1264:	bl	0 <printf>
    1268:	ldr	lr, [fp, #-28]	; 0xffffffe4
    126c:	add	lr, lr, #1
    1270:	str	lr, [fp, #-28]	; 0xffffffe4
    1274:	str	r0, [fp, #-52]	; 0xffffffcc
    1278:	ldr	r0, [fp, #-32]	; 0xffffffe0
    127c:	movw	r1, #2
    1280:	bl	0 <v_celebridade>
    1284:	cmp	r0, #1
    1288:	beq	12a8 <teste_v_celebridade+0x140>
    128c:	movw	r0, #0
    1290:	movt	r0, #0
    1294:	bl	0 <printf>
    1298:	ldr	lr, [fp, #-28]	; 0xffffffe4
    129c:	add	lr, lr, #1
    12a0:	str	lr, [fp, #-28]	; 0xffffffe4
    12a4:	str	r0, [fp, #-56]	; 0xffffffc8
    12a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    12ac:	bl	0 <grafo_apaga>
    12b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    12b4:	cmp	r0, #0
    12b8:	bne	12d0 <teste_v_celebridade+0x168>
    12bc:	movw	r0, #0
    12c0:	movt	r0, #0
    12c4:	bl	0 <printf>
    12c8:	str	r0, [fp, #-60]	; 0xffffffc4
    12cc:	b	12e0 <teste_v_celebridade+0x178>
    12d0:	movw	r0, #0
    12d4:	movt	r0, #0
    12d8:	bl	0 <printf>
    12dc:	str	r0, [fp, #-64]	; 0xffffffc0
    12e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    12e4:	sub	sp, fp, #24
    12e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000012ec <main>:
    12ec:	push	{fp, lr}
    12f0:	mov	fp, sp
    12f4:	sub	sp, sp, #32
    12f8:	movw	r0, #0
    12fc:	str	r0, [fp, #-4]
    1300:	movw	r1, #0
    1304:	movt	r1, #0
    1308:	ldr	r1, [r1]
    130c:	str	r0, [fp, #-12]
    1310:	mov	r0, r1
    1314:	ldr	r1, [fp, #-12]
    1318:	movw	r2, #2
    131c:	ldr	r3, [fp, #-12]
    1320:	bl	0 <setvbuf>
    1324:	movw	r1, #0
    1328:	movt	r1, #0
    132c:	ldr	r1, [r1]
    1330:	str	r0, [sp, #16]
    1334:	mov	r0, r1
    1338:	movw	r1, #0
    133c:	str	r1, [sp, #12]
    1340:	movw	r2, #2
    1344:	ldr	r3, [sp, #12]
    1348:	bl	0 <setvbuf>
    134c:	movw	r1, #0
    1350:	str	r1, [fp, #-8]
    1354:	str	r0, [sp, #8]
    1358:	bl	1cc <teste_grafo_novo>
    135c:	ldr	r1, [fp, #-8]
    1360:	add	r0, r1, r0
    1364:	str	r0, [fp, #-8]
    1368:	bl	388 <teste_grafo_aresta>
    136c:	ldr	r1, [fp, #-8]
    1370:	add	r0, r1, r0
    1374:	str	r0, [fp, #-8]
    1378:	bl	55c <teste_grafo_adiciona>
    137c:	ldr	r1, [fp, #-8]
    1380:	add	r0, r1, r0
    1384:	str	r0, [fp, #-8]
    1388:	bl	81c <teste_grafo_remove>
    138c:	ldr	r1, [fp, #-8]
    1390:	add	r0, r1, r0
    1394:	str	r0, [fp, #-8]
    1398:	bl	a2c <teste_v_sucessores>
    139c:	ldr	r1, [fp, #-8]
    13a0:	add	r0, r1, r0
    13a4:	str	r0, [fp, #-8]
    13a8:	bl	d00 <teste_v_antecessores>
    13ac:	ldr	r1, [fp, #-8]
    13b0:	add	r0, r1, r0
    13b4:	str	r0, [fp, #-8]
    13b8:	bl	fd4 <teste_v_grau>
    13bc:	ldr	r1, [fp, #-8]
    13c0:	add	r0, r1, r0
    13c4:	str	r0, [fp, #-8]
    13c8:	bl	1168 <teste_v_celebridade>
    13cc:	ldr	r1, [fp, #-8]
    13d0:	add	r0, r1, r0
    13d4:	str	r0, [fp, #-8]
    13d8:	ldr	r0, [fp, #-8]
    13dc:	cmp	r0, #0
    13e0:	bne	13f8 <main+0x10c>
    13e4:	movw	r0, #0
    13e8:	movt	r0, #0
    13ec:	bl	0 <printf>
    13f0:	str	r0, [sp, #4]
    13f4:	b	140c <main+0x120>
    13f8:	ldr	r1, [fp, #-8]
    13fc:	movw	r0, #0
    1400:	movt	r0, #0
    1404:	bl	0 <printf>
    1408:	str	r0, [sp]
    140c:	movw	r0, #0
    1410:	mov	sp, fp
    1414:	pop	{fp, pc}
