
../repos/prog2/CMakeFiles/MT2E2-1.dir/Extras/Miniteste2-Exemplo2/prob1/avl.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <avl_nova>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	mov	r0, #4
  14:	bl	0 <malloc>
  18:	cmp	r0, #0
  1c:	bne	28 <avl_nova+0x28>
  20:	mov	r0, #0
  24:	b	30 <avl_nova+0x30>
  28:	mov	r1, #0
  2c:	str	r1, [r0]
  30:	ldr	lr, [sp, #4]
  34:	add	sp, sp, #8
  38:	bx	lr

0000003c <avl_apaga>:
  3c:	mov	ip, sp
  40:	sub	sp, sp, #16
  44:	str	ip, [sp]
  48:	str	lr, [sp, #4]
  4c:	str	r4, [sp, #8]
  50:	mov	r4, r0
  54:	cmp	r4, #0
  58:	beq	8c <avl_apaga+0x50>
  5c:	ldr	r0, [r4]
  60:	cmp	r0, #0
  64:	beq	78 <avl_apaga+0x3c>
  68:	ldr	r1, [r0]
  6c:	bl	738 <avl_remove_impl>
  70:	str	r0, [r4]
  74:	b	5c <avl_apaga+0x20>
  78:	mov	r0, r4
  7c:	ldr	r4, [sp, #8]
  80:	ldr	lr, [sp, #4]
  84:	add	sp, sp, #16
  88:	b	0 <free>
  8c:	ldr	r4, [sp, #8]
  90:	ldr	lr, [sp, #4]
  94:	add	sp, sp, #16
  98:	bx	lr

0000009c <avl_pesquisa>:
  9c:	mov	ip, sp
  a0:	sub	sp, sp, #8
  a4:	str	ip, [sp]
  a8:	str	lr, [sp, #4]
  ac:	mov	ip, #1
  b0:	cmp	r1, #0
  b4:	moveq	r3, #1
  b8:	movne	r3, #0
  bc:	cmp	r0, #0
  c0:	moveq	r2, ip
  c4:	movne	r2, r3
  c8:	cmp	r2, #0
  cc:	beq	e0 <avl_pesquisa+0x44>
  d0:	mov	r0, #0
  d4:	ldr	lr, [sp, #4]
  d8:	add	sp, sp, #8
  dc:	bx	lr
  e0:	ldr	r0, [r0]
  e4:	ldr	lr, [sp, #4]
  e8:	add	sp, sp, #8
  ec:	b	4ac <avl_pesquisa_impl>

000000f0 <avl_insere>:
  f0:	mov	ip, sp
  f4:	sub	sp, sp, #16
  f8:	str	ip, [sp]
  fc:	str	lr, [sp, #4]
 100:	str	r4, [sp, #8]
 104:	mov	r4, r0
 108:	mov	r0, #1
 10c:	cmp	r1, #0
 110:	moveq	r2, #1
 114:	movne	r2, #0
 118:	cmp	r4, #0
 11c:	moveq	r3, r0
 120:	movne	r3, r2
 124:	cmp	r3, #0
 128:	beq	134 <avl_insere+0x44>
 12c:	mvn	r0, #0
 130:	b	144 <avl_insere+0x54>
 134:	ldr	r0, [r4]
 138:	bl	554 <avl_insere_impl>
 13c:	str	r0, [r4]
 140:	mov	r0, #0
 144:	ldr	r4, [sp, #8]
 148:	ldr	lr, [sp, #4]
 14c:	add	sp, sp, #16
 150:	bx	lr

00000154 <avl_remove>:
 154:	mov	ip, sp
 158:	sub	sp, sp, #16
 15c:	str	ip, [sp]
 160:	str	lr, [sp, #4]
 164:	str	r4, [sp, #8]
 168:	mov	r4, r0
 16c:	mov	r0, #1
 170:	cmp	r1, #0
 174:	moveq	r2, #1
 178:	movne	r2, #0
 17c:	cmp	r4, #0
 180:	moveq	r3, r0
 184:	movne	r3, r2
 188:	cmp	r3, #0
 18c:	beq	198 <avl_remove+0x44>
 190:	mvn	r0, #0
 194:	b	1a8 <avl_remove+0x54>
 198:	ldr	r0, [r4]
 19c:	bl	738 <avl_remove_impl>
 1a0:	str	r0, [r4]
 1a4:	mov	r0, #0
 1a8:	ldr	r4, [sp, #8]
 1ac:	ldr	lr, [sp, #4]
 1b0:	add	sp, sp, #16
 1b4:	bx	lr

000001b8 <avl_min>:
 1b8:	mov	ip, sp
 1bc:	sub	sp, sp, #8
 1c0:	str	ip, [sp]
 1c4:	str	lr, [sp, #4]
 1c8:	cmp	r0, #0
 1cc:	bne	1d8 <avl_min+0x20>
 1d0:	mov	r0, #0
 1d4:	b	1e0 <avl_min+0x28>
 1d8:	bl	6d8 <avl_no_valormin>
 1dc:	ldr	r0, [r0]
 1e0:	ldr	lr, [sp, #4]
 1e4:	add	sp, sp, #8
 1e8:	bx	lr

000001ec <avl_max>:
 1ec:	mov	ip, sp
 1f0:	sub	sp, sp, #8
 1f4:	str	ip, [sp]
 1f8:	str	lr, [sp, #4]
 1fc:	cmp	r0, #0
 200:	bne	20c <avl_max+0x20>
 204:	mov	r0, #0
 208:	b	214 <avl_max+0x28>
 20c:	bl	708 <avl_no_valormax>
 210:	ldr	r0, [r0]
 214:	ldr	lr, [sp, #4]
 218:	add	sp, sp, #8
 21c:	bx	lr

00000220 <avl_imprime>:
 220:	mov	ip, sp
 224:	sub	sp, sp, #8
 228:	str	ip, [sp]
 22c:	str	lr, [sp, #4]
 230:	cmp	r0, #0
 234:	beq	244 <avl_imprime+0x24>
 238:	bl	980 <avl_preordem_impl>
 23c:	ldr	r0, [pc, #12]	; 250 <avl_imprime+0x30>
 240:	bl	0 <printf>
 244:	ldr	lr, [sp, #4]
 248:	add	sp, sp, #8
 24c:	bx	lr
 250:	.word	0x00000000

00000254 <avl_altura>:
 254:	mov	ip, sp
 258:	sub	sp, sp, #8
 25c:	str	ip, [sp]
 260:	str	lr, [sp, #4]
 264:	cmp	r0, #0
 268:	bne	274 <avl_altura+0x20>
 26c:	mvn	r0, #0
 270:	b	278 <avl_altura+0x24>
 274:	ldr	r0, [r0, #12]
 278:	ldr	lr, [sp, #4]
 27c:	add	sp, sp, #8
 280:	bx	lr

00000284 <max>:
 284:	mov	ip, sp
 288:	sub	sp, sp, #8
 28c:	str	ip, [sp]
 290:	str	lr, [sp, #4]
 294:	cmp	r0, r1
 298:	movgt	r0, r0
 29c:	movle	r0, r1
 2a0:	ldr	lr, [sp, #4]
 2a4:	add	sp, sp, #8
 2a8:	bx	lr

000002ac <avl_novo_no>:
 2ac:	mov	ip, sp
 2b0:	sub	sp, sp, #16
 2b4:	str	ip, [sp]
 2b8:	str	lr, [sp, #4]
 2bc:	str	r4, [sp, #8]
 2c0:	str	r5, [sp, #12]
 2c4:	mov	r5, r0
 2c8:	mov	r0, #16
 2cc:	bl	0 <malloc>
 2d0:	mov	r4, r0
 2d4:	mov	r0, r5
 2d8:	bl	0 <strlen>
 2dc:	add	r0, r0, #1
 2e0:	bl	0 <malloc>
 2e4:	str	r0, [r4]
 2e8:	mov	r1, r5
 2ec:	bl	0 <strcpy>
 2f0:	mov	r3, #0
 2f4:	str	r3, [r4, #4]
 2f8:	mov	r1, #0
 2fc:	str	r1, [r4, #8]
 300:	mov	r2, #0
 304:	str	r2, [r4, #12]
 308:	mov	r0, r4
 30c:	ldr	r4, [sp, #8]
 310:	ldr	r5, [sp, #12]
 314:	ldr	lr, [sp, #4]
 318:	add	sp, sp, #16
 31c:	bx	lr

00000320 <roda_direita>:
 320:	mov	ip, sp
 324:	sub	sp, sp, #24
 328:	str	ip, [sp]
 32c:	str	lr, [sp, #4]
 330:	str	r4, [sp, #8]
 334:	str	r5, [sp, #12]
 338:	str	r6, [sp, #16]
 33c:	mov	r6, r0
 340:	ldr	r5, [r6, #4]
 344:	ldr	r0, [r5, #8]
 348:	str	r6, [r5, #8]
 34c:	str	r0, [r6, #4]
 350:	bl	254 <avl_altura>
 354:	mov	r4, r0
 358:	ldr	r0, [r6, #8]
 35c:	bl	254 <avl_altura>
 360:	mov	r1, r0
 364:	mov	r0, r4
 368:	bl	284 <max>
 36c:	add	r2, r0, #1
 370:	str	r2, [r6, #12]
 374:	ldr	r0, [r5, #4]
 378:	bl	254 <avl_altura>
 37c:	mov	r4, r0
 380:	ldr	r0, [r5, #8]
 384:	bl	254 <avl_altura>
 388:	mov	r1, r0
 38c:	mov	r0, r4
 390:	bl	284 <max>
 394:	add	r1, r0, #1
 398:	str	r1, [r5, #12]
 39c:	mov	r0, r5
 3a0:	ldr	r4, [sp, #8]
 3a4:	ldr	r5, [sp, #12]
 3a8:	ldr	r6, [sp, #16]
 3ac:	ldr	lr, [sp, #4]
 3b0:	add	sp, sp, #24
 3b4:	bx	lr

000003b8 <roda_esquerda>:
 3b8:	mov	ip, sp
 3bc:	sub	sp, sp, #24
 3c0:	str	ip, [sp]
 3c4:	str	lr, [sp, #4]
 3c8:	str	r4, [sp, #8]
 3cc:	str	r5, [sp, #12]
 3d0:	str	r6, [sp, #16]
 3d4:	mov	r6, r0
 3d8:	ldr	r5, [r6, #8]
 3dc:	ldr	r1, [r5, #4]
 3e0:	str	r6, [r5, #4]
 3e4:	str	r1, [r6, #8]
 3e8:	ldr	r0, [r6, #4]
 3ec:	bl	254 <avl_altura>
 3f0:	mov	r4, r0
 3f4:	ldr	r0, [r6, #8]
 3f8:	bl	254 <avl_altura>
 3fc:	mov	r1, r0
 400:	mov	r0, r4
 404:	bl	284 <max>
 408:	add	r3, r0, #1
 40c:	str	r3, [r6, #12]
 410:	ldr	r0, [r5, #4]
 414:	bl	254 <avl_altura>
 418:	mov	r4, r0
 41c:	ldr	r0, [r5, #8]
 420:	bl	254 <avl_altura>
 424:	mov	r1, r0
 428:	mov	r0, r4
 42c:	bl	284 <max>
 430:	add	r2, r0, #1
 434:	str	r2, [r5, #12]
 438:	mov	r0, r5
 43c:	ldr	r4, [sp, #8]
 440:	ldr	r5, [sp, #12]
 444:	ldr	r6, [sp, #16]
 448:	ldr	lr, [sp, #4]
 44c:	add	sp, sp, #24
 450:	bx	lr

00000454 <calc_balanceamento>:
 454:	mov	ip, sp
 458:	sub	sp, sp, #16
 45c:	str	ip, [sp]
 460:	str	lr, [sp, #4]
 464:	str	r4, [sp, #8]
 468:	str	r5, [sp, #12]
 46c:	mov	r4, r0
 470:	cmp	r4, #0
 474:	bne	480 <calc_balanceamento+0x2c>
 478:	mov	r0, #0
 47c:	b	498 <calc_balanceamento+0x44>
 480:	ldr	r0, [r4, #8]
 484:	bl	254 <avl_altura>
 488:	mov	r5, r0
 48c:	ldr	r0, [r4, #4]
 490:	bl	254 <avl_altura>
 494:	sub	r0, r5, r0
 498:	ldr	r4, [sp, #8]
 49c:	ldr	r5, [sp, #12]
 4a0:	ldr	lr, [sp, #4]
 4a4:	add	sp, sp, #16
 4a8:	bx	lr

000004ac <avl_pesquisa_impl>:
 4ac:	mov	ip, sp
 4b0:	sub	sp, sp, #16
 4b4:	str	ip, [sp]
 4b8:	str	lr, [sp, #4]
 4bc:	str	r4, [sp, #8]
 4c0:	str	r5, [sp, #12]
 4c4:	mov	r4, r1
 4c8:	mov	r5, r0
 4cc:	cmp	r5, #0
 4d0:	bne	4dc <avl_pesquisa_impl+0x30>
 4d4:	mov	r0, #0
 4d8:	b	524 <avl_pesquisa_impl+0x78>
 4dc:	ldr	r1, [r5]
 4e0:	mov	r0, r4
 4e4:	bl	0 <strcmp>
 4e8:	cmp	r0, #0
 4ec:	blt	538 <avl_pesquisa_impl+0x8c>
 4f0:	ldr	r1, [r5]
 4f4:	mov	r0, r4
 4f8:	bl	0 <strcmp>
 4fc:	cmp	r0, #0
 500:	ble	520 <avl_pesquisa_impl+0x74>
 504:	ldr	r0, [r5, #8]
 508:	mov	r1, r4
 50c:	ldr	r4, [sp, #8]
 510:	ldr	r5, [sp, #12]
 514:	ldr	lr, [sp, #4]
 518:	add	sp, sp, #16
 51c:	b	4ac <avl_pesquisa_impl>
 520:	mov	r0, r5
 524:	ldr	r4, [sp, #8]
 528:	ldr	r5, [sp, #12]
 52c:	ldr	lr, [sp, #4]
 530:	add	sp, sp, #16
 534:	bx	lr
 538:	ldr	r0, [r5, #4]
 53c:	mov	r1, r4
 540:	ldr	r4, [sp, #8]
 544:	ldr	r5, [sp, #12]
 548:	ldr	lr, [sp, #4]
 54c:	add	sp, sp, #16
 550:	b	4ac <avl_pesquisa_impl>

00000554 <avl_insere_impl>:
 554:	mov	ip, sp
 558:	sub	sp, sp, #16
 55c:	str	ip, [sp]
 560:	str	lr, [sp, #4]
 564:	str	r4, [sp, #8]
 568:	str	r5, [sp, #12]
 56c:	mov	r5, r1
 570:	mov	r4, r0
 574:	cmp	r4, #0
 578:	bne	594 <avl_insere_impl+0x40>
 57c:	mov	r0, r5
 580:	ldr	r4, [sp, #8]
 584:	ldr	r5, [sp, #12]
 588:	ldr	lr, [sp, #4]
 58c:	add	sp, sp, #16
 590:	b	2ac <avl_novo_no>
 594:	ldr	r1, [r4]
 598:	mov	r0, r5
 59c:	bl	0 <strcmp>
 5a0:	cmp	r0, #0
 5a4:	blt	5d8 <avl_insere_impl+0x84>
 5a8:	ldr	r1, [r4]
 5ac:	mov	r0, r5
 5b0:	bl	0 <strcmp>
 5b4:	cmp	r0, #0
 5b8:	ble	5d0 <avl_insere_impl+0x7c>
 5bc:	ldr	r0, [r4, #8]
 5c0:	mov	r1, r5
 5c4:	bl	554 <avl_insere_impl>
 5c8:	str	r0, [r4, #8]
 5cc:	b	5e8 <avl_insere_impl+0x94>
 5d0:	mov	r0, r4
 5d4:	b	678 <avl_insere_impl+0x124>
 5d8:	ldr	r0, [r4, #4]
 5dc:	mov	r1, r5
 5e0:	bl	554 <avl_insere_impl>
 5e4:	str	r0, [r4, #4]
 5e8:	ldr	r0, [r4, #4]
 5ec:	bl	254 <avl_altura>
 5f0:	mov	r5, r0
 5f4:	ldr	r0, [r4, #8]
 5f8:	bl	254 <avl_altura>
 5fc:	mov	r1, r0
 600:	mov	r0, r5
 604:	bl	284 <max>
 608:	add	r0, r0, #1
 60c:	str	r0, [r4, #12]
 610:	mov	r0, r4
 614:	bl	454 <calc_balanceamento>
 618:	cmp	r0, #1
 61c:	bgt	68c <avl_insere_impl+0x138>
 620:	cmn	r0, #1
 624:	bge	674 <avl_insere_impl+0x120>
 628:	ldr	r0, [r4, #4]
 62c:	bl	454 <calc_balanceamento>
 630:	cmp	r0, #0
 634:	ble	65c <avl_insere_impl+0x108>
 638:	ldr	r0, [r4, #4]
 63c:	bl	3b8 <roda_esquerda>
 640:	str	r0, [r4, #4]
 644:	mov	r0, r4
 648:	ldr	r4, [sp, #8]
 64c:	ldr	r5, [sp, #12]
 650:	ldr	lr, [sp, #4]
 654:	add	sp, sp, #16
 658:	b	320 <roda_direita>
 65c:	mov	r0, r4
 660:	ldr	r4, [sp, #8]
 664:	ldr	r5, [sp, #12]
 668:	ldr	lr, [sp, #4]
 66c:	add	sp, sp, #16
 670:	b	320 <roda_direita>
 674:	mov	r0, r4
 678:	ldr	r4, [sp, #8]
 67c:	ldr	r5, [sp, #12]
 680:	ldr	lr, [sp, #4]
 684:	add	sp, sp, #16
 688:	bx	lr
 68c:	ldr	r0, [r4, #8]
 690:	bl	454 <calc_balanceamento>
 694:	cmp	r0, #0
 698:	bge	6c0 <avl_insere_impl+0x16c>
 69c:	ldr	r0, [r4, #8]
 6a0:	bl	320 <roda_direita>
 6a4:	str	r0, [r4, #8]
 6a8:	mov	r0, r4
 6ac:	ldr	r4, [sp, #8]
 6b0:	ldr	r5, [sp, #12]
 6b4:	ldr	lr, [sp, #4]
 6b8:	add	sp, sp, #16
 6bc:	b	3b8 <roda_esquerda>
 6c0:	mov	r0, r4
 6c4:	ldr	r4, [sp, #8]
 6c8:	ldr	r5, [sp, #12]
 6cc:	ldr	lr, [sp, #4]
 6d0:	add	sp, sp, #16
 6d4:	b	3b8 <roda_esquerda>

000006d8 <avl_no_valormin>:
 6d8:	mov	ip, sp
 6dc:	sub	sp, sp, #8
 6e0:	str	ip, [sp]
 6e4:	str	lr, [sp, #4]
 6e8:	ldr	r1, [r0, #4]
 6ec:	cmp	r1, #0
 6f0:	beq	6fc <avl_no_valormin+0x24>
 6f4:	mov	r0, r1
 6f8:	b	6e8 <avl_no_valormin+0x10>
 6fc:	ldr	lr, [sp, #4]
 700:	add	sp, sp, #8
 704:	bx	lr

00000708 <avl_no_valormax>:
 708:	mov	ip, sp
 70c:	sub	sp, sp, #8
 710:	str	ip, [sp]
 714:	str	lr, [sp, #4]
 718:	ldr	r1, [r0, #8]
 71c:	cmp	r1, #0
 720:	beq	72c <avl_no_valormax+0x24>
 724:	mov	r0, r1
 728:	b	718 <avl_no_valormax+0x10>
 72c:	ldr	lr, [sp, #4]
 730:	add	sp, sp, #8
 734:	bx	lr

00000738 <avl_remove_impl>:
 738:	mov	ip, sp
 73c:	sub	sp, sp, #16
 740:	str	ip, [sp]
 744:	str	lr, [sp, #4]
 748:	str	r4, [sp, #8]
 74c:	str	r5, [sp, #12]
 750:	mov	r4, r1
 754:	mov	r5, r0
 758:	cmp	r5, #0
 75c:	bne	768 <avl_remove_impl+0x30>
 760:	mov	r0, r5
 764:	b	920 <avl_remove_impl+0x1e8>
 768:	ldr	r1, [r5]
 76c:	mov	r0, r4
 770:	bl	0 <strcmp>
 774:	cmp	r0, #0
 778:	blt	870 <avl_remove_impl+0x138>
 77c:	ldr	r1, [r5]
 780:	mov	r0, r4
 784:	bl	0 <strcmp>
 788:	cmp	r0, #0
 78c:	bgt	85c <avl_remove_impl+0x124>
 790:	ldr	ip, [r5, #4]
 794:	cmp	ip, #0
 798:	beq	7e8 <avl_remove_impl+0xb0>
 79c:	ldr	r0, [r5, #8]
 7a0:	cmp	r0, #0
 7a4:	beq	7e8 <avl_remove_impl+0xb0>
 7a8:	bl	6d8 <avl_no_valormin>
 7ac:	mov	r4, r0
 7b0:	ldr	r0, [r4]
 7b4:	bl	0 <strlen>
 7b8:	mov	r1, r0
 7bc:	ldr	r0, [r5]
 7c0:	add	r1, r1, #1
 7c4:	bl	0 <realloc>
 7c8:	str	r0, [r5]
 7cc:	ldr	r1, [r4]
 7d0:	bl	0 <strcpy>
 7d4:	ldr	r0, [r5, #8]
 7d8:	ldr	r1, [r4]
 7dc:	bl	738 <avl_remove_impl>
 7e0:	str	r0, [r5, #8]
 7e4:	b	880 <avl_remove_impl+0x148>
 7e8:	ldr	r4, [r5, #4]
 7ec:	cmp	r4, #0
 7f0:	bne	7f8 <avl_remove_impl+0xc0>
 7f4:	ldr	r4, [r5, #8]
 7f8:	cmp	r4, #0
 7fc:	beq	840 <avl_remove_impl+0x108>
 800:	ldr	r0, [r4]
 804:	bl	0 <strlen>
 808:	mov	r1, r0
 80c:	ldr	r0, [r5]
 810:	add	r1, r1, #1
 814:	bl	0 <realloc>
 818:	str	r0, [r5]
 81c:	ldr	r1, [r4]
 820:	bl	0 <strcpy>
 824:	ldr	r3, [r4, #4]
 828:	str	r3, [r5, #4]
 82c:	ldr	r0, [r4, #8]
 830:	str	r0, [r5, #8]
 834:	ldr	r3, [r4, #12]
 838:	str	r3, [r5, #12]
 83c:	b	848 <avl_remove_impl+0x110>
 840:	mov	r4, r5
 844:	mov	r5, #0
 848:	ldr	r0, [r4]
 84c:	bl	0 <free>
 850:	mov	r0, r4
 854:	bl	0 <free>
 858:	b	880 <avl_remove_impl+0x148>
 85c:	ldr	r0, [r5, #8]
 860:	mov	r1, r4
 864:	bl	738 <avl_remove_impl>
 868:	str	r0, [r5, #8]
 86c:	b	880 <avl_remove_impl+0x148>
 870:	ldr	r0, [r5, #4]
 874:	mov	r1, r4
 878:	bl	738 <avl_remove_impl>
 87c:	str	r0, [r5, #4]
 880:	cmp	r5, #0
 884:	bne	890 <avl_remove_impl+0x158>
 888:	mov	r0, r5
 88c:	b	920 <avl_remove_impl+0x1e8>
 890:	ldr	r0, [r5, #4]
 894:	bl	254 <avl_altura>
 898:	mov	r4, r0
 89c:	ldr	r0, [r5, #8]
 8a0:	bl	254 <avl_altura>
 8a4:	mov	r1, r0
 8a8:	mov	r0, r4
 8ac:	bl	284 <max>
 8b0:	add	r0, r0, #1
 8b4:	str	r0, [r5, #12]
 8b8:	mov	r0, r5
 8bc:	bl	454 <calc_balanceamento>
 8c0:	cmp	r0, #1
 8c4:	bgt	934 <avl_remove_impl+0x1fc>
 8c8:	cmn	r0, #1
 8cc:	bge	91c <avl_remove_impl+0x1e4>
 8d0:	ldr	r0, [r5, #4]
 8d4:	bl	454 <calc_balanceamento>
 8d8:	cmp	r0, #0
 8dc:	ble	904 <avl_remove_impl+0x1cc>
 8e0:	ldr	r0, [r5, #4]
 8e4:	bl	3b8 <roda_esquerda>
 8e8:	str	r0, [r5, #4]
 8ec:	mov	r0, r5
 8f0:	ldr	r4, [sp, #8]
 8f4:	ldr	r5, [sp, #12]
 8f8:	ldr	lr, [sp, #4]
 8fc:	add	sp, sp, #16
 900:	b	320 <roda_direita>
 904:	mov	r0, r5
 908:	ldr	r4, [sp, #8]
 90c:	ldr	r5, [sp, #12]
 910:	ldr	lr, [sp, #4]
 914:	add	sp, sp, #16
 918:	b	320 <roda_direita>
 91c:	mov	r0, r5
 920:	ldr	r4, [sp, #8]
 924:	ldr	r5, [sp, #12]
 928:	ldr	lr, [sp, #4]
 92c:	add	sp, sp, #16
 930:	bx	lr
 934:	ldr	r0, [r5, #8]
 938:	bl	454 <calc_balanceamento>
 93c:	cmp	r0, #0
 940:	bge	968 <avl_remove_impl+0x230>
 944:	ldr	r0, [r5, #8]
 948:	bl	320 <roda_direita>
 94c:	str	r0, [r5, #8]
 950:	mov	r0, r5
 954:	ldr	r4, [sp, #8]
 958:	ldr	r5, [sp, #12]
 95c:	ldr	lr, [sp, #4]
 960:	add	sp, sp, #16
 964:	b	3b8 <roda_esquerda>
 968:	mov	r0, r5
 96c:	ldr	r4, [sp, #8]
 970:	ldr	r5, [sp, #12]
 974:	ldr	lr, [sp, #4]
 978:	add	sp, sp, #16
 97c:	b	3b8 <roda_esquerda>

00000980 <avl_preordem_impl>:
 980:	mov	ip, sp
 984:	sub	sp, sp, #16
 988:	str	ip, [sp]
 98c:	str	lr, [sp, #4]
 990:	str	r4, [sp, #8]
 994:	mov	r4, r0
 998:	cmp	r4, #0
 99c:	beq	9c8 <avl_preordem_impl+0x48>
 9a0:	ldr	r0, [pc, #48]	; 9d8 <avl_preordem_impl+0x58>
 9a4:	ldr	r1, [r4]
 9a8:	bl	0 <printf>
 9ac:	ldr	r0, [r4, #4]
 9b0:	bl	980 <avl_preordem_impl>
 9b4:	ldr	r0, [r4, #8]
 9b8:	ldr	r4, [sp, #8]
 9bc:	ldr	lr, [sp, #4]
 9c0:	add	sp, sp, #16
 9c4:	b	980 <avl_preordem_impl>
 9c8:	ldr	r4, [sp, #8]
 9cc:	ldr	lr, [sp, #4]
 9d0:	add	sp, sp, #16
 9d4:	bx	lr
 9d8:	.word	0x00000002
