
../compcert-repos/prog2/CMakeFiles/0.11.1.dir/Aula00_Conceitos_base/11_ADDREV.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <invert>:
   0:	subs	r2, r0, #0
   4:	beq	3c <invert+0x3c>
   8:	movw	ip, #26215	; 0x6667
   c:	movt	ip, #26214	; 0x6666
  10:	mov	r0, #0
  14:	smull	r3, r1, ip, r2
  18:	asr	r3, r2, #31
  1c:	add	r0, r0, r0, lsl #2
  20:	rsb	r3, r3, r1, asr #2
  24:	add	r1, r3, r3, lsl #2
  28:	sub	r1, r2, r1, lsl #1
  2c:	subs	r2, r3, #0
  30:	add	r0, r1, r0, lsl #1
  34:	bne	14 <invert+0x14>
  38:	bx	lr
  3c:	mov	r0, r2
  40:	bx	lr

Disassembly of section .text.startup:

00000000 <main>:
   0:	strd	r4, [sp, #-20]!	; 0xffffffec
   4:	movw	r0, #0
   8:	movt	r0, #0
   c:	strd	r6, [sp, #8]
  10:	str	lr, [sp, #16]
  14:	sub	sp, sp, #20
  18:	add	r1, sp, #4
  1c:	bl	0 <__isoc99_scanf>
  20:	ldr	r3, [sp, #4]
  24:	cmp	r3, #0
  28:	ble	10c <main+0x10c>
  2c:	movw	r6, #0
  30:	movt	r6, #0
  34:	movw	r7, #26215	; 0x6667
  38:	movt	r7, #26214	; 0x6666
  3c:	movw	r5, #0
  40:	movt	r5, #0
  44:	mov	r4, #0
  48:	add	r2, sp, #12
  4c:	add	r1, sp, #8
  50:	mov	r0, r6
  54:	bl	0 <__isoc99_scanf>
  58:	ldr	r0, [sp, #8]
  5c:	cmp	r0, #0
  60:	beq	124 <main+0x124>
  64:	mov	r3, #0
  68:	smull	r2, r1, r7, r0
  6c:	asr	r2, r0, #31
  70:	add	r3, r3, r3, lsl #2
  74:	rsb	r2, r2, r1, asr #2
  78:	add	r1, r2, r2, lsl #2
  7c:	sub	r1, r0, r1, lsl #1
  80:	subs	r0, r2, #0
  84:	add	r3, r1, r3, lsl #1
  88:	bne	68 <main+0x68>
  8c:	ldr	r1, [sp, #12]
  90:	cmp	r1, #0
  94:	beq	c4 <main+0xc4>
  98:	mov	r0, #0
  9c:	smull	r2, ip, r7, r1
  a0:	asr	r2, r1, #31
  a4:	add	r0, r0, r0, lsl #2
  a8:	rsb	r2, r2, ip, asr #2
  ac:	add	ip, r2, r2, lsl #2
  b0:	sub	ip, r1, ip, lsl #1
  b4:	subs	r1, r2, #0
  b8:	add	r0, ip, r0, lsl #1
  bc:	bne	9c <main+0x9c>
  c0:	add	r3, r3, r0
  c4:	cmp	r3, #0
  c8:	beq	138 <main+0x138>
  cc:	mov	r1, #0
  d0:	smull	r2, r0, r7, r3
  d4:	asr	r2, r3, #31
  d8:	add	r1, r1, r1, lsl #2
  dc:	rsb	r2, r2, r0, asr #2
  e0:	add	r0, r2, r2, lsl #2
  e4:	sub	r0, r3, r0, lsl #1
  e8:	subs	r3, r2, #0
  ec:	add	r1, r0, r1, lsl #1
  f0:	bne	d0 <main+0xd0>
  f4:	mov	r0, r5
  f8:	add	r4, r4, #1
  fc:	bl	0 <printf>
 100:	ldr	r3, [sp, #4]
 104:	cmp	r3, r4
 108:	bgt	48 <main+0x48>
 10c:	mov	r0, #0
 110:	add	sp, sp, #20
 114:	ldrd	r4, [sp]
 118:	ldrd	r6, [sp, #8]
 11c:	add	sp, sp, #16
 120:	pop	{pc}		; (ldr pc, [sp], #4)
 124:	ldr	r1, [sp, #12]
 128:	cmp	r1, #0
 12c:	movne	r3, r0
 130:	bne	98 <main+0x98>
 134:	b	f4 <main+0xf4>
 138:	mov	r1, r3
 13c:	b	f4 <main+0xf4>
