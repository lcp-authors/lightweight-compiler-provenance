
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <read_bytes>:
       0:	strd	r4, [sp, #-24]!	; 0xffffffe8
       4:	strd	r6, [sp, #8]
       8:	str	fp, [sp, #16]
       c:	str	lr, [sp, #20]
      10:	add	fp, sp, #20
      14:	sub	sp, sp, #96	; 0x60
      18:	str	r0, [fp, #-96]	; 0xffffffa0
      1c:	strd	r2, [fp, #-108]	; 0xffffff94
      20:	ldr	r3, [fp, #-96]	; 0xffffffa0
      24:	ldr	r3, [r3, #48]	; 0x30
      28:	cmp	r3, #0
      2c:	beq	110 <read_bytes+0x110>
      30:	ldrd	r0, [fp, #-108]	; 0xffffff94
      34:	ldrd	r2, [fp, #4]
      38:	adds	r6, r0, r2
      3c:	adc	r7, r1, r3
      40:	ldr	r3, [fp, #-96]	; 0xffffffa0
      44:	ldrd	r2, [r3, #40]	; 0x28
      48:	cmp	r7, r3
      4c:	cmpeq	r6, r2
      50:	bls	ec <read_bytes+0xec>
      54:	ldr	r3, [fp, #-96]	; 0xffffffa0
      58:	ldr	r3, [r3, #16]
      5c:	cmp	r3, #0
      60:	beq	74 <read_bytes+0x74>
      64:	ldr	r3, [fp, #-96]	; 0xffffffa0
      68:	ldr	r3, [r3, #16]
      6c:	cmp	r3, #1
      70:	bne	8c <read_bytes+0x8c>
      74:	movw	r1, #0
      78:	movt	r1, #0
      7c:	mvn	r0, #300	; 0x12c
      80:	bl	0 <coda_set_error>
      84:	mvn	r3, #0
      88:	b	1e8 <read_bytes+0x1e8>
      8c:	sub	r3, fp, #44	; 0x2c
      90:	mov	r2, r3
      94:	ldrd	r0, [fp, #4]
      98:	bl	0 <coda_str64>
      9c:	sub	r3, fp, #68	; 0x44
      a0:	mov	r2, r3
      a4:	ldrd	r0, [fp, #-108]	; 0xffffff94
      a8:	bl	0 <coda_str64>
      ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
      b0:	ldrd	r0, [r3, #40]	; 0x28
      b4:	sub	r3, fp, #92	; 0x5c
      b8:	mov	r2, r3
      bc:	bl	0 <coda_str64>
      c0:	sub	r1, fp, #68	; 0x44
      c4:	sub	r2, fp, #44	; 0x2c
      c8:	sub	r3, fp, #92	; 0x5c
      cc:	str	r3, [sp]
      d0:	mov	r3, r1
      d4:	movw	r1, #0
      d8:	movt	r1, #0
      dc:	mvn	r0, #300	; 0x12c
      e0:	bl	0 <coda_set_error>
      e4:	mvn	r3, #0
      e8:	b	1e8 <read_bytes+0x1e8>
      ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
      f0:	ldr	r2, [r3, #48]	; 0x30
      f4:	ldr	r3, [fp, #-108]	; 0xffffff94
      f8:	add	r3, r2, r3
      fc:	ldr	r2, [fp, #4]
     100:	mov	r1, r3
     104:	ldr	r0, [fp, #12]
     108:	bl	0 <memcpy>
     10c:	b	1e4 <read_bytes+0x1e4>
     110:	ldr	r3, [fp, #-96]	; 0xffffffa0
     114:	ldr	r3, [r3, #16]
     118:	cmp	r3, #0
     11c:	beq	150 <read_bytes+0x150>
     120:	ldr	r3, [fp, #-96]	; 0xffffffa0
     124:	ldr	r3, [r3, #16]
     128:	cmp	r3, #1
     12c:	beq	150 <read_bytes+0x150>
     130:	movw	r3, #0
     134:	movt	r3, #0
     138:	mov	r2, #83	; 0x53
     13c:	movw	r1, #0
     140:	movt	r1, #0
     144:	movw	r0, #0
     148:	movt	r0, #0
     14c:	bl	0 <__assert_fail>
     150:	ldrd	r0, [fp, #-108]	; 0xffffff94
     154:	ldrd	r2, [fp, #4]
     158:	adds	r4, r0, r2
     15c:	adc	r5, r1, r3
     160:	ldr	r3, [fp, #-96]	; 0xffffffa0
     164:	ldrd	r2, [r3, #8]
     168:	cmp	r5, r3
     16c:	cmpeq	r4, r2
     170:	bls	18c <read_bytes+0x18c>
     174:	movw	r1, #0
     178:	movt	r1, #0
     17c:	mvn	r0, #300	; 0x12c
     180:	bl	0 <coda_set_error>
     184:	mvn	r3, #0
     188:	b	1e8 <read_bytes+0x1e8>
     18c:	ldr	r3, [fp, #-96]	; 0xffffffa0
     190:	ldr	r0, [r3, #56]	; 0x38
     194:	ldr	r2, [fp, #4]
     198:	ldr	r3, [fp, #-108]	; 0xffffff94
     19c:	ldr	r1, [fp, #12]
     1a0:	bl	0 <pread>
     1a4:	mov	r3, r0
     1a8:	cmp	r3, #0
     1ac:	bge	1e4 <read_bytes+0x1e4>
     1b0:	bl	0 <__errno_location>
     1b4:	mov	r3, r0
     1b8:	ldr	r3, [r3]
     1bc:	mov	r0, r3
     1c0:	bl	0 <strerror>
     1c4:	mov	r3, r0
     1c8:	mov	r2, r3
     1cc:	movw	r1, #0
     1d0:	movt	r1, #0
     1d4:	mvn	r0, #21
     1d8:	bl	0 <coda_set_error>
     1dc:	mvn	r3, #0
     1e0:	b	1e8 <read_bytes+0x1e8>
     1e4:	mov	r3, #0
     1e8:	mov	r0, r3
     1ec:	sub	sp, fp, #20
     1f0:	ldrd	r4, [sp]
     1f4:	ldrd	r6, [sp, #8]
     1f8:	ldr	fp, [sp, #16]
     1fc:	add	sp, sp, #20
     200:	pop	{pc}		; (ldr pc, [sp], #4)

00000204 <swap2>:
     204:	push	{fp}		; (str fp, [sp, #-4]!)
     208:	add	fp, sp, #0
     20c:	sub	sp, sp, #20
     210:	str	r0, [fp, #-16]
     214:	ldr	r3, [fp, #-16]
     218:	str	r3, [fp, #-8]
     21c:	ldr	r3, [fp, #-8]
     220:	ldrb	r2, [r3]
     224:	ldr	r3, [fp, #-8]
     228:	add	r3, r3, #1
     22c:	ldrb	r3, [r3]
     230:	eor	r3, r3, r2
     234:	uxtb	r2, r3
     238:	ldr	r3, [fp, #-8]
     23c:	strb	r2, [r3]
     240:	ldr	r3, [fp, #-8]
     244:	ldrb	r1, [r3]
     248:	ldr	r3, [fp, #-8]
     24c:	add	r3, r3, #1
     250:	ldrb	r2, [r3]
     254:	ldr	r3, [fp, #-8]
     258:	add	r3, r3, #1
     25c:	eor	r2, r2, r1
     260:	uxtb	r2, r2
     264:	strb	r2, [r3]
     268:	ldr	r3, [fp, #-8]
     26c:	ldrb	r2, [r3]
     270:	ldr	r3, [fp, #-8]
     274:	add	r3, r3, #1
     278:	ldrb	r3, [r3]
     27c:	eor	r3, r3, r2
     280:	uxtb	r2, r3
     284:	ldr	r3, [fp, #-8]
     288:	strb	r2, [r3]
     28c:	nop	{0}
     290:	add	sp, fp, #0
     294:	pop	{fp}		; (ldr fp, [sp], #4)
     298:	bx	lr

0000029c <swap4>:
     29c:	push	{fp}		; (str fp, [sp, #-4]!)
     2a0:	add	fp, sp, #0
     2a4:	sub	sp, sp, #20
     2a8:	str	r0, [fp, #-16]
     2ac:	ldr	r3, [fp, #-16]
     2b0:	str	r3, [fp, #-8]
     2b4:	ldr	r3, [fp, #-8]
     2b8:	ldrb	r2, [r3]
     2bc:	ldr	r3, [fp, #-8]
     2c0:	add	r3, r3, #3
     2c4:	ldrb	r3, [r3]
     2c8:	eor	r3, r3, r2
     2cc:	uxtb	r2, r3
     2d0:	ldr	r3, [fp, #-8]
     2d4:	strb	r2, [r3]
     2d8:	ldr	r3, [fp, #-8]
     2dc:	ldrb	r1, [r3]
     2e0:	ldr	r3, [fp, #-8]
     2e4:	add	r3, r3, #3
     2e8:	ldrb	r2, [r3]
     2ec:	ldr	r3, [fp, #-8]
     2f0:	add	r3, r3, #3
     2f4:	eor	r2, r2, r1
     2f8:	uxtb	r2, r2
     2fc:	strb	r2, [r3]
     300:	ldr	r3, [fp, #-8]
     304:	ldrb	r2, [r3]
     308:	ldr	r3, [fp, #-8]
     30c:	add	r3, r3, #3
     310:	ldrb	r3, [r3]
     314:	eor	r3, r3, r2
     318:	uxtb	r2, r3
     31c:	ldr	r3, [fp, #-8]
     320:	strb	r2, [r3]
     324:	ldr	r3, [fp, #-8]
     328:	add	r3, r3, #1
     32c:	ldrb	r1, [r3]
     330:	ldr	r3, [fp, #-8]
     334:	add	r3, r3, #2
     338:	ldrb	r2, [r3]
     33c:	ldr	r3, [fp, #-8]
     340:	add	r3, r3, #1
     344:	eor	r2, r2, r1
     348:	uxtb	r2, r2
     34c:	strb	r2, [r3]
     350:	ldr	r3, [fp, #-8]
     354:	add	r3, r3, #1
     358:	ldrb	r1, [r3]
     35c:	ldr	r3, [fp, #-8]
     360:	add	r3, r3, #2
     364:	ldrb	r2, [r3]
     368:	ldr	r3, [fp, #-8]
     36c:	add	r3, r3, #2
     370:	eor	r2, r2, r1
     374:	uxtb	r2, r2
     378:	strb	r2, [r3]
     37c:	ldr	r3, [fp, #-8]
     380:	add	r3, r3, #1
     384:	ldrb	r1, [r3]
     388:	ldr	r3, [fp, #-8]
     38c:	add	r3, r3, #2
     390:	ldrb	r2, [r3]
     394:	ldr	r3, [fp, #-8]
     398:	add	r3, r3, #1
     39c:	eor	r2, r2, r1
     3a0:	uxtb	r2, r2
     3a4:	strb	r2, [r3]
     3a8:	nop	{0}
     3ac:	add	sp, fp, #0
     3b0:	pop	{fp}		; (ldr fp, [sp], #4)
     3b4:	bx	lr

000003b8 <swap8>:
     3b8:	push	{fp}		; (str fp, [sp, #-4]!)
     3bc:	add	fp, sp, #0
     3c0:	sub	sp, sp, #20
     3c4:	str	r0, [fp, #-16]
     3c8:	ldr	r3, [fp, #-16]
     3cc:	str	r3, [fp, #-8]
     3d0:	ldr	r3, [fp, #-8]
     3d4:	ldrb	r2, [r3]
     3d8:	ldr	r3, [fp, #-8]
     3dc:	add	r3, r3, #7
     3e0:	ldrb	r3, [r3]
     3e4:	eor	r3, r3, r2
     3e8:	uxtb	r2, r3
     3ec:	ldr	r3, [fp, #-8]
     3f0:	strb	r2, [r3]
     3f4:	ldr	r3, [fp, #-8]
     3f8:	ldrb	r1, [r3]
     3fc:	ldr	r3, [fp, #-8]
     400:	add	r3, r3, #7
     404:	ldrb	r2, [r3]
     408:	ldr	r3, [fp, #-8]
     40c:	add	r3, r3, #7
     410:	eor	r2, r2, r1
     414:	uxtb	r2, r2
     418:	strb	r2, [r3]
     41c:	ldr	r3, [fp, #-8]
     420:	ldrb	r2, [r3]
     424:	ldr	r3, [fp, #-8]
     428:	add	r3, r3, #7
     42c:	ldrb	r3, [r3]
     430:	eor	r3, r3, r2
     434:	uxtb	r2, r3
     438:	ldr	r3, [fp, #-8]
     43c:	strb	r2, [r3]
     440:	ldr	r3, [fp, #-8]
     444:	add	r3, r3, #1
     448:	ldrb	r1, [r3]
     44c:	ldr	r3, [fp, #-8]
     450:	add	r3, r3, #6
     454:	ldrb	r2, [r3]
     458:	ldr	r3, [fp, #-8]
     45c:	add	r3, r3, #1
     460:	eor	r2, r2, r1
     464:	uxtb	r2, r2
     468:	strb	r2, [r3]
     46c:	ldr	r3, [fp, #-8]
     470:	add	r3, r3, #1
     474:	ldrb	r1, [r3]
     478:	ldr	r3, [fp, #-8]
     47c:	add	r3, r3, #6
     480:	ldrb	r2, [r3]
     484:	ldr	r3, [fp, #-8]
     488:	add	r3, r3, #6
     48c:	eor	r2, r2, r1
     490:	uxtb	r2, r2
     494:	strb	r2, [r3]
     498:	ldr	r3, [fp, #-8]
     49c:	add	r3, r3, #1
     4a0:	ldrb	r1, [r3]
     4a4:	ldr	r3, [fp, #-8]
     4a8:	add	r3, r3, #6
     4ac:	ldrb	r2, [r3]
     4b0:	ldr	r3, [fp, #-8]
     4b4:	add	r3, r3, #1
     4b8:	eor	r2, r2, r1
     4bc:	uxtb	r2, r2
     4c0:	strb	r2, [r3]
     4c4:	ldr	r3, [fp, #-8]
     4c8:	add	r3, r3, #2
     4cc:	ldrb	r1, [r3]
     4d0:	ldr	r3, [fp, #-8]
     4d4:	add	r3, r3, #5
     4d8:	ldrb	r2, [r3]
     4dc:	ldr	r3, [fp, #-8]
     4e0:	add	r3, r3, #2
     4e4:	eor	r2, r2, r1
     4e8:	uxtb	r2, r2
     4ec:	strb	r2, [r3]
     4f0:	ldr	r3, [fp, #-8]
     4f4:	add	r3, r3, #2
     4f8:	ldrb	r1, [r3]
     4fc:	ldr	r3, [fp, #-8]
     500:	add	r3, r3, #5
     504:	ldrb	r2, [r3]
     508:	ldr	r3, [fp, #-8]
     50c:	add	r3, r3, #5
     510:	eor	r2, r2, r1
     514:	uxtb	r2, r2
     518:	strb	r2, [r3]
     51c:	ldr	r3, [fp, #-8]
     520:	add	r3, r3, #2
     524:	ldrb	r1, [r3]
     528:	ldr	r3, [fp, #-8]
     52c:	add	r3, r3, #5
     530:	ldrb	r2, [r3]
     534:	ldr	r3, [fp, #-8]
     538:	add	r3, r3, #2
     53c:	eor	r2, r2, r1
     540:	uxtb	r2, r2
     544:	strb	r2, [r3]
     548:	ldr	r3, [fp, #-8]
     54c:	add	r3, r3, #3
     550:	ldrb	r1, [r3]
     554:	ldr	r3, [fp, #-8]
     558:	add	r3, r3, #4
     55c:	ldrb	r2, [r3]
     560:	ldr	r3, [fp, #-8]
     564:	add	r3, r3, #3
     568:	eor	r2, r2, r1
     56c:	uxtb	r2, r2
     570:	strb	r2, [r3]
     574:	ldr	r3, [fp, #-8]
     578:	add	r3, r3, #3
     57c:	ldrb	r1, [r3]
     580:	ldr	r3, [fp, #-8]
     584:	add	r3, r3, #4
     588:	ldrb	r2, [r3]
     58c:	ldr	r3, [fp, #-8]
     590:	add	r3, r3, #4
     594:	eor	r2, r2, r1
     598:	uxtb	r2, r2
     59c:	strb	r2, [r3]
     5a0:	ldr	r3, [fp, #-8]
     5a4:	add	r3, r3, #3
     5a8:	ldrb	r1, [r3]
     5ac:	ldr	r3, [fp, #-8]
     5b0:	add	r3, r3, #4
     5b4:	ldrb	r2, [r3]
     5b8:	ldr	r3, [fp, #-8]
     5bc:	add	r3, r3, #3
     5c0:	eor	r2, r2, r1
     5c4:	uxtb	r2, r2
     5c8:	strb	r2, [r3]
     5cc:	nop	{0}
     5d0:	add	sp, fp, #0
     5d4:	pop	{fp}		; (ldr fp, [sp], #4)
     5d8:	bx	lr

000005dc <rtrim>:
     5dc:	str	fp, [sp, #-8]!
     5e0:	str	lr, [sp, #4]
     5e4:	add	fp, sp, #4
     5e8:	sub	sp, sp, #16
     5ec:	str	r0, [fp, #-16]
     5f0:	ldr	r0, [fp, #-16]
     5f4:	bl	0 <strlen>
     5f8:	mov	r3, r0
     5fc:	str	r3, [fp, #-8]
     600:	b	628 <rtrim+0x4c>
     604:	ldr	r3, [fp, #-8]
     608:	sub	r3, r3, #1
     60c:	ldr	r2, [fp, #-16]
     610:	add	r3, r2, r3
     614:	mov	r2, #0
     618:	strb	r2, [r3]
     61c:	ldr	r3, [fp, #-8]
     620:	sub	r3, r3, #1
     624:	str	r3, [fp, #-8]
     628:	ldr	r3, [fp, #-8]
     62c:	cmp	r3, #0
     630:	ble	650 <rtrim+0x74>
     634:	ldr	r3, [fp, #-8]
     638:	sub	r3, r3, #1
     63c:	ldr	r2, [fp, #-16]
     640:	add	r3, r2, r3
     644:	ldrb	r3, [r3]
     648:	cmp	r3, #32
     64c:	beq	604 <rtrim+0x28>
     650:	nop	{0}
     654:	sub	sp, fp, #4
     658:	ldr	fp, [sp]
     65c:	add	sp, sp, #4
     660:	pop	{pc}		; (ldr pc, [sp], #4)

00000664 <read_attribute_sub>:
     664:	str	fp, [sp, #-8]!
     668:	str	lr, [sp, #4]
     66c:	add	fp, sp, #4
     670:	sub	sp, sp, #48	; 0x30
     674:	str	r0, [fp, #-24]	; 0xffffffe8
     678:	strd	r2, [fp, #-36]	; 0xffffffdc
     67c:	ldr	r3, [fp, #8]
     680:	ldr	r3, [r3, #8]
     684:	cmp	r3, #4
     688:	bne	764 <read_attribute_sub+0x100>
     68c:	ldr	r3, [fp, #4]
     690:	add	r3, r3, #1
     694:	mov	r0, r3
     698:	bl	0 <malloc>
     69c:	mov	r3, r0
     6a0:	str	r3, [fp, #-8]
     6a4:	ldr	r3, [fp, #-8]
     6a8:	cmp	r3, #0
     6ac:	bne	6e0 <read_attribute_sub+0x7c>
     6b0:	ldr	r3, [fp, #4]
     6b4:	add	r2, r3, #1
     6b8:	mov	r3, #76	; 0x4c
     6bc:	str	r3, [sp]
     6c0:	movw	r3, #0
     6c4:	movt	r3, #0
     6c8:	movw	r1, #0
     6cc:	movt	r1, #0
     6d0:	mvn	r0, #0
     6d4:	bl	0 <coda_set_error>
     6d8:	mvn	r3, #0
     6dc:	b	a14 <read_attribute_sub+0x3b0>
     6e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     6e4:	ldr	r0, [r3, #52]	; 0x34
     6e8:	ldr	r3, [fp, #4]
     6ec:	mov	r2, r3
     6f0:	asr	r3, r2, #31
     6f4:	ldr	r1, [fp, #-8]
     6f8:	str	r1, [sp, #8]
     6fc:	strd	r2, [sp]
     700:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     704:	bl	0 <read_bytes>
     708:	mov	r3, r0
     70c:	cmp	r3, #0
     710:	beq	724 <read_attribute_sub+0xc0>
     714:	ldr	r0, [fp, #-8]
     718:	bl	0 <free>
     71c:	mvn	r3, #0
     720:	b	a14 <read_attribute_sub+0x3b0>
     724:	ldr	r3, [fp, #4]
     728:	ldr	r2, [fp, #-8]
     72c:	add	r3, r2, r3
     730:	mov	r2, #0
     734:	strb	r2, [r3]
     738:	ldr	r3, [fp, #-8]
     73c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     740:	mov	r1, #0
     744:	ldr	r0, [fp, #8]
     748:	bl	0 <coda_mem_string_new>
     74c:	mov	r2, r0
     750:	ldr	r3, [fp, #12]
     754:	str	r2, [r3]
     758:	ldr	r0, [fp, #-8]
     75c:	bl	0 <free>
     760:	b	9f8 <read_attribute_sub+0x394>
     764:	mov	r3, #0
     768:	str	r3, [fp, #-12]
     76c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     770:	ldr	r0, [r3, #52]	; 0x34
     774:	ldr	r3, [fp, #4]
     778:	mov	r2, r3
     77c:	asr	r3, r2, #31
     780:	sub	r1, fp, #20
     784:	str	r1, [sp, #8]
     788:	strd	r2, [sp]
     78c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     790:	bl	0 <read_bytes>
     794:	mov	r3, r0
     798:	cmp	r3, #0
     79c:	beq	7a8 <read_attribute_sub+0x144>
     7a0:	mvn	r3, #0
     7a4:	b	a14 <read_attribute_sub+0x3b0>
     7a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7ac:	ldr	r3, [r3, #68]	; 0x44
     7b0:	ldr	r2, [fp, #-12]
     7b4:	cmp	r2, r3
     7b8:	bne	840 <read_attribute_sub+0x1dc>
     7bc:	ldr	r3, [fp, #4]
     7c0:	sub	r3, r3, #1
     7c4:	cmp	r3, #7
     7c8:	ldrls	pc, [pc, r3, lsl #2]
     7cc:	b	820 <read_attribute_sub+0x1bc>
     7d0:	.word	0x00000848
     7d4:	.word	0x000007f0
     7d8:	.word	0x00000820
     7dc:	.word	0x00000800
     7e0:	.word	0x00000820
     7e4:	.word	0x00000820
     7e8:	.word	0x00000820
     7ec:	.word	0x00000810
     7f0:	sub	r3, fp, #20
     7f4:	mov	r0, r3
     7f8:	bl	204 <swap2>
     7fc:	b	84c <read_attribute_sub+0x1e8>
     800:	sub	r3, fp, #20
     804:	mov	r0, r3
     808:	bl	29c <swap4>
     80c:	b	84c <read_attribute_sub+0x1e8>
     810:	sub	r3, fp, #20
     814:	mov	r0, r3
     818:	bl	3b8 <swap8>
     81c:	b	84c <read_attribute_sub+0x1e8>
     820:	movw	r3, #0
     824:	movt	r3, #0
     828:	mov	r2, #129	; 0x81
     82c:	movw	r1, #0
     830:	movt	r1, #0
     834:	movw	r0, #0
     838:	movt	r0, #0
     83c:	bl	0 <__assert_fail>
     840:	nop	{0}
     844:	b	84c <read_attribute_sub+0x1e8>
     848:	nop	{0}
     84c:	ldr	r3, [fp, #8]
     850:	ldr	r3, [r3, #12]
     854:	cmp	r3, #9
     858:	ldrls	pc, [pc, r3, lsl #2]
     85c:	b	9d8 <read_attribute_sub+0x374>
     860:	.word	0x00000888
     864:	.word	0x000008ac
     868:	.word	0x000008d0
     86c:	.word	0x000008f4
     870:	.word	0x00000918
     874:	.word	0x0000093c
     878:	.word	0x00000960
     87c:	.word	0x000009d8
     880:	.word	0x00000988
     884:	.word	0x000009b0
     888:	ldrsb	r3, [fp, #-20]	; 0xffffffec
     88c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     890:	mov	r1, #0
     894:	ldr	r0, [fp, #8]
     898:	bl	0 <coda_mem_int8_new>
     89c:	mov	r2, r0
     8a0:	ldr	r3, [fp, #12]
     8a4:	str	r2, [r3]
     8a8:	b	9f8 <read_attribute_sub+0x394>
     8ac:	ldrb	r3, [fp, #-20]	; 0xffffffec
     8b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     8b4:	mov	r1, #0
     8b8:	ldr	r0, [fp, #8]
     8bc:	bl	0 <coda_mem_uint8_new>
     8c0:	mov	r2, r0
     8c4:	ldr	r3, [fp, #12]
     8c8:	str	r2, [r3]
     8cc:	b	9f8 <read_attribute_sub+0x394>
     8d0:	ldrsh	r3, [fp, #-20]	; 0xffffffec
     8d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
     8d8:	mov	r1, #0
     8dc:	ldr	r0, [fp, #8]
     8e0:	bl	0 <coda_mem_int16_new>
     8e4:	mov	r2, r0
     8e8:	ldr	r3, [fp, #12]
     8ec:	str	r2, [r3]
     8f0:	b	9f8 <read_attribute_sub+0x394>
     8f4:	ldrh	r3, [fp, #-20]	; 0xffffffec
     8f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     8fc:	mov	r1, #0
     900:	ldr	r0, [fp, #8]
     904:	bl	0 <coda_mem_uint16_new>
     908:	mov	r2, r0
     90c:	ldr	r3, [fp, #12]
     910:	str	r2, [r3]
     914:	b	9f8 <read_attribute_sub+0x394>
     918:	ldr	r3, [fp, #-20]	; 0xffffffec
     91c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     920:	mov	r1, #0
     924:	ldr	r0, [fp, #8]
     928:	bl	0 <coda_mem_int32_new>
     92c:	mov	r2, r0
     930:	ldr	r3, [fp, #12]
     934:	str	r2, [r3]
     938:	b	9f8 <read_attribute_sub+0x394>
     93c:	ldr	r3, [fp, #-20]	; 0xffffffec
     940:	ldr	r2, [fp, #-24]	; 0xffffffe8
     944:	mov	r1, #0
     948:	ldr	r0, [fp, #8]
     94c:	bl	0 <coda_mem_uint32_new>
     950:	mov	r2, r0
     954:	ldr	r3, [fp, #12]
     958:	str	r2, [r3]
     95c:	b	9f8 <read_attribute_sub+0x394>
     960:	ldrd	r2, [fp, #-20]	; 0xffffffec
     964:	strd	r2, [sp]
     968:	ldr	r2, [fp, #-24]	; 0xffffffe8
     96c:	mov	r1, #0
     970:	ldr	r0, [fp, #8]
     974:	bl	0 <coda_mem_int64_new>
     978:	mov	r2, r0
     97c:	ldr	r3, [fp, #12]
     980:	str	r2, [r3]
     984:	b	9f8 <read_attribute_sub+0x394>
     988:	vldr	s15, [fp, #-20]	; 0xffffffec
     98c:	vmov.f32	s0, s15
     990:	ldr	r2, [fp, #-24]	; 0xffffffe8
     994:	mov	r1, #0
     998:	ldr	r0, [fp, #8]
     99c:	bl	0 <coda_mem_float_new>
     9a0:	mov	r2, r0
     9a4:	ldr	r3, [fp, #12]
     9a8:	str	r2, [r3]
     9ac:	b	9f8 <read_attribute_sub+0x394>
     9b0:	vldr	d7, [fp, #-20]	; 0xffffffec
     9b4:	vmov.f64	d0, d7
     9b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     9bc:	mov	r1, #0
     9c0:	ldr	r0, [fp, #8]
     9c4:	bl	0 <coda_mem_double_new>
     9c8:	mov	r2, r0
     9cc:	ldr	r3, [fp, #12]
     9d0:	str	r2, [r3]
     9d4:	b	9f8 <read_attribute_sub+0x394>
     9d8:	movw	r3, #0
     9dc:	movt	r3, #0
     9e0:	mov	r2, #175	; 0xaf
     9e4:	movw	r1, #0
     9e8:	movt	r1, #0
     9ec:	movw	r0, #0
     9f0:	movt	r0, #0
     9f4:	bl	0 <__assert_fail>
     9f8:	ldr	r3, [fp, #12]
     9fc:	ldr	r3, [r3]
     a00:	cmp	r3, #0
     a04:	bne	a10 <read_attribute_sub+0x3ac>
     a08:	mvn	r3, #0
     a0c:	b	a14 <read_attribute_sub+0x3b0>
     a10:	mov	r3, #0
     a14:	mov	r0, r3
     a18:	sub	sp, fp, #4
     a1c:	ldr	fp, [sp]
     a20:	add	sp, sp, #4
     a24:	pop	{pc}		; (ldr pc, [sp], #4)

00000a28 <read_attribute>:
     a28:	strd	r4, [sp, #-16]!
     a2c:	str	fp, [sp, #8]
     a30:	str	lr, [sp, #12]
     a34:	add	fp, sp, #12
     a38:	sub	sp, sp, #64	; 0x40
     a3c:	str	r0, [fp, #-48]	; 0xffffffd0
     a40:	strd	r2, [fp, #-60]	; 0xffffffc4
     a44:	ldr	r3, [fp, #4]
     a48:	sub	r3, r3, #1
     a4c:	cmp	r3, #51	; 0x33
     a50:	ldrls	pc, [pc, r3, lsl #2]
     a54:	b	c40 <read_attribute+0x218>
     a58:	.word	0x00000b28
     a5c:	.word	0x00000b44
     a60:	.word	0x00000c40
     a64:	.word	0x00000b60
     a68:	.word	0x00000c40
     a6c:	.word	0x00000c40
     a70:	.word	0x00000c40
     a74:	.word	0x00000b7c
     a78:	.word	0x00000c40
     a7c:	.word	0x00000c40
     a80:	.word	0x00000b98
     a84:	.word	0x00000bb4
     a88:	.word	0x00000c40
     a8c:	.word	0x00000bd0
     a90:	.word	0x00000c40
     a94:	.word	0x00000c40
     a98:	.word	0x00000c40
     a9c:	.word	0x00000c40
     aa0:	.word	0x00000c40
     aa4:	.word	0x00000c40
     aa8:	.word	0x00000bec
     aac:	.word	0x00000c08
     ab0:	.word	0x00000c40
     ab4:	.word	0x00000c40
     ab8:	.word	0x00000c40
     abc:	.word	0x00000c40
     ac0:	.word	0x00000c40
     ac4:	.word	0x00000c40
     ac8:	.word	0x00000c40
     acc:	.word	0x00000c40
     ad0:	.word	0x00000c08
     ad4:	.word	0x00000c40
     ad8:	.word	0x00000b7c
     adc:	.word	0x00000c40
     ae0:	.word	0x00000c40
     ae4:	.word	0x00000c40
     ae8:	.word	0x00000c40
     aec:	.word	0x00000c40
     af0:	.word	0x00000c40
     af4:	.word	0x00000c40
     af8:	.word	0x00000b28
     afc:	.word	0x00000c40
     b00:	.word	0x00000c40
     b04:	.word	0x00000bec
     b08:	.word	0x00000c08
     b0c:	.word	0x00000c40
     b10:	.word	0x00000c40
     b14:	.word	0x00000c40
     b18:	.word	0x00000c40
     b1c:	.word	0x00000c40
     b20:	.word	0x00000c24
     b24:	.word	0x00000c24
     b28:	mov	r3, #2
     b2c:	str	r3, [fp, #-16]
     b30:	mov	r3, #0
     b34:	str	r3, [fp, #-20]	; 0xffffffec
     b38:	mov	r3, #1
     b3c:	str	r3, [fp, #-28]	; 0xffffffe4
     b40:	b	c5c <read_attribute+0x234>
     b44:	mov	r3, #2
     b48:	str	r3, [fp, #-16]
     b4c:	mov	r3, #2
     b50:	str	r3, [fp, #-20]	; 0xffffffec
     b54:	mov	r3, #2
     b58:	str	r3, [fp, #-28]	; 0xffffffe4
     b5c:	b	c5c <read_attribute+0x234>
     b60:	mov	r3, #2
     b64:	str	r3, [fp, #-16]
     b68:	mov	r3, #4
     b6c:	str	r3, [fp, #-20]	; 0xffffffec
     b70:	mov	r3, #4
     b74:	str	r3, [fp, #-28]	; 0xffffffe4
     b78:	b	c5c <read_attribute+0x234>
     b7c:	mov	r3, #2
     b80:	str	r3, [fp, #-16]
     b84:	mov	r3, #6
     b88:	str	r3, [fp, #-20]	; 0xffffffec
     b8c:	mov	r3, #8
     b90:	str	r3, [fp, #-28]	; 0xffffffe4
     b94:	b	c5c <read_attribute+0x234>
     b98:	mov	r3, #2
     b9c:	str	r3, [fp, #-16]
     ba0:	mov	r3, #1
     ba4:	str	r3, [fp, #-20]	; 0xffffffec
     ba8:	mov	r3, #1
     bac:	str	r3, [fp, #-28]	; 0xffffffe4
     bb0:	b	c5c <read_attribute+0x234>
     bb4:	mov	r3, #2
     bb8:	str	r3, [fp, #-16]
     bbc:	mov	r3, #3
     bc0:	str	r3, [fp, #-20]	; 0xffffffec
     bc4:	mov	r3, #2
     bc8:	str	r3, [fp, #-28]	; 0xffffffe4
     bcc:	b	c5c <read_attribute+0x234>
     bd0:	mov	r3, #2
     bd4:	str	r3, [fp, #-16]
     bd8:	mov	r3, #5
     bdc:	str	r3, [fp, #-20]	; 0xffffffec
     be0:	mov	r3, #4
     be4:	str	r3, [fp, #-28]	; 0xffffffe4
     be8:	b	c5c <read_attribute+0x234>
     bec:	mov	r3, #3
     bf0:	str	r3, [fp, #-16]
     bf4:	mov	r3, #8
     bf8:	str	r3, [fp, #-20]	; 0xffffffec
     bfc:	mov	r3, #4
     c00:	str	r3, [fp, #-28]	; 0xffffffe4
     c04:	b	c5c <read_attribute+0x234>
     c08:	mov	r3, #3
     c0c:	str	r3, [fp, #-16]
     c10:	mov	r3, #9
     c14:	str	r3, [fp, #-20]	; 0xffffffec
     c18:	mov	r3, #8
     c1c:	str	r3, [fp, #-28]	; 0xffffffe4
     c20:	b	c5c <read_attribute+0x234>
     c24:	mov	r3, #4
     c28:	str	r3, [fp, #-16]
     c2c:	mov	r3, #11
     c30:	str	r3, [fp, #-20]	; 0xffffffec
     c34:	ldr	r3, [fp, #8]
     c38:	str	r3, [fp, #-28]	; 0xffffffe4
     c3c:	b	c5c <read_attribute+0x234>
     c40:	ldr	r2, [fp, #4]
     c44:	movw	r1, #0
     c48:	movt	r1, #0
     c4c:	mvn	r0, #99	; 0x63
     c50:	bl	0 <coda_set_error>
     c54:	mvn	r3, #0
     c58:	b	f6c <read_attribute+0x544>
     c5c:	ldr	r3, [fp, #-16]
     c60:	cmp	r3, #2
     c64:	bcc	ca8 <read_attribute+0x280>
     c68:	ldr	r3, [fp, #-16]
     c6c:	cmp	r3, #3
     c70:	bls	c84 <read_attribute+0x25c>
     c74:	ldr	r3, [fp, #-16]
     c78:	cmp	r3, #4
     c7c:	beq	c98 <read_attribute+0x270>
     c80:	b	ca8 <read_attribute+0x280>
     c84:	ldr	r1, [fp, #-16]
     c88:	mov	r0, #5
     c8c:	bl	0 <coda_type_number_new>
     c90:	str	r0, [fp, #-24]	; 0xffffffe8
     c94:	b	cc8 <read_attribute+0x2a0>
     c98:	mov	r0, #5
     c9c:	bl	0 <coda_type_text_new>
     ca0:	str	r0, [fp, #-24]	; 0xffffffe8
     ca4:	b	cc8 <read_attribute+0x2a0>
     ca8:	movw	r3, #0
     cac:	movt	r3, #0
     cb0:	movw	r2, #266	; 0x10a
     cb4:	movw	r1, #0
     cb8:	movt	r1, #0
     cbc:	movw	r0, #0
     cc0:	movt	r0, #0
     cc4:	bl	0 <__assert_fail>
     cc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ccc:	cmp	r3, #0
     cd0:	bne	cdc <read_attribute+0x2b4>
     cd4:	mvn	r3, #0
     cd8:	b	f6c <read_attribute+0x544>
     cdc:	ldr	r1, [fp, #-20]	; 0xffffffec
     ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ce4:	bl	0 <coda_type_set_read_type>
     ce8:	mov	r3, r0
     cec:	cmp	r3, #0
     cf0:	beq	d04 <read_attribute+0x2dc>
     cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     cf8:	bl	0 <coda_type_release>
     cfc:	mvn	r3, #0
     d00:	b	f6c <read_attribute+0x544>
     d04:	ldr	r3, [fp, #-16]
     d08:	cmp	r3, #4
     d0c:	beq	d68 <read_attribute+0x340>
     d10:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d14:	mov	r2, r3
     d18:	asr	r3, r2, #31
     d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d20:	bl	0 <coda_type_set_byte_size>
     d24:	mov	r3, r0
     d28:	cmp	r3, #0
     d2c:	beq	d40 <read_attribute+0x318>
     d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d34:	bl	0 <coda_type_release>
     d38:	mvn	r3, #0
     d3c:	b	f6c <read_attribute+0x544>
     d40:	mov	r1, #1
     d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d48:	bl	0 <coda_type_number_set_endianness>
     d4c:	mov	r3, r0
     d50:	cmp	r3, #0
     d54:	beq	d68 <read_attribute+0x340>
     d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d5c:	bl	0 <coda_type_release>
     d60:	mvn	r3, #0
     d64:	b	f6c <read_attribute+0x544>
     d68:	ldr	r3, [fp, #8]
     d6c:	cmp	r3, #1
     d70:	beq	f20 <read_attribute+0x4f8>
     d74:	ldr	r3, [fp, #4]
     d78:	cmp	r3, #51	; 0x33
     d7c:	beq	f20 <read_attribute+0x4f8>
     d80:	ldr	r3, [fp, #4]
     d84:	cmp	r3, #52	; 0x34
     d88:	beq	f20 <read_attribute+0x4f8>
     d8c:	mov	r3, #0
     d90:	str	r3, [fp, #-36]	; 0xffffffdc
     d94:	mov	r0, #5
     d98:	bl	0 <coda_type_array_new>
     d9c:	str	r0, [fp, #-40]	; 0xffffffd8
     da0:	ldr	r3, [fp, #-40]	; 0xffffffd8
     da4:	cmp	r3, #0
     da8:	bne	dbc <read_attribute+0x394>
     dac:	ldr	r0, [fp, #-24]	; 0xffffffe8
     db0:	bl	0 <coda_type_release>
     db4:	mvn	r3, #0
     db8:	b	f6c <read_attribute+0x544>
     dbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
     dc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     dc4:	bl	0 <coda_type_array_set_base_type>
     dc8:	mov	r3, r0
     dcc:	cmp	r3, #0
     dd0:	beq	dec <read_attribute+0x3c4>
     dd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     dd8:	bl	0 <coda_type_release>
     ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     de0:	bl	0 <coda_type_release>
     de4:	mvn	r3, #0
     de8:	b	f6c <read_attribute+0x544>
     dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
     df0:	bl	0 <coda_type_release>
     df4:	mov	r1, #0
     df8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     dfc:	bl	0 <coda_type_array_add_variable_dimension>
     e00:	mov	r3, r0
     e04:	cmp	r3, #0
     e08:	beq	e1c <read_attribute+0x3f4>
     e0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
     e10:	bl	0 <coda_type_release>
     e14:	mvn	r3, #0
     e18:	b	f6c <read_attribute+0x544>
     e1c:	mov	r1, #0
     e20:	ldr	r0, [fp, #-40]	; 0xffffffd8
     e24:	bl	0 <coda_mem_array_new>
     e28:	str	r0, [fp, #-36]	; 0xffffffdc
     e2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
     e30:	cmp	r3, #0
     e34:	bne	e48 <read_attribute+0x420>
     e38:	ldr	r0, [fp, #-40]	; 0xffffffd8
     e3c:	bl	0 <coda_type_release>
     e40:	mvn	r3, #0
     e44:	b	f6c <read_attribute+0x544>
     e48:	ldr	r0, [fp, #-40]	; 0xffffffd8
     e4c:	bl	0 <coda_type_release>
     e50:	mov	r3, #0
     e54:	str	r3, [fp, #-32]	; 0xffffffe0
     e58:	b	f0c <read_attribute+0x4e4>
     e5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e60:	ldr	r2, [fp, #-28]	; 0xffffffe4
     e64:	mul	r3, r2, r3
     e68:	mov	r0, r3
     e6c:	asr	r1, r0, #31
     e70:	ldrd	r2, [fp, #-60]	; 0xffffffc4
     e74:	adds	r4, r0, r2
     e78:	adc	r5, r1, r3
     e7c:	ldr	r3, [fp, #12]
     e80:	str	r3, [sp, #8]
     e84:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e88:	str	r3, [sp, #4]
     e8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e90:	str	r3, [sp]
     e94:	mov	r2, r4
     e98:	mov	r3, r5
     e9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     ea0:	bl	664 <read_attribute_sub>
     ea4:	mov	r3, r0
     ea8:	cmp	r3, #0
     eac:	beq	ec0 <read_attribute+0x498>
     eb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
     eb4:	bl	0 <coda_dynamic_type_delete>
     eb8:	mvn	r3, #0
     ebc:	b	f6c <read_attribute+0x544>
     ec0:	ldr	r3, [fp, #12]
     ec4:	ldr	r3, [r3]
     ec8:	mov	r1, r3
     ecc:	ldr	r0, [fp, #-36]	; 0xffffffdc
     ed0:	bl	0 <coda_mem_array_add_element>
     ed4:	mov	r3, r0
     ed8:	cmp	r3, #0
     edc:	beq	f00 <read_attribute+0x4d8>
     ee0:	ldr	r0, [fp, #-36]	; 0xffffffdc
     ee4:	bl	0 <coda_dynamic_type_delete>
     ee8:	ldr	r3, [fp, #12]
     eec:	ldr	r3, [r3]
     ef0:	mov	r0, r3
     ef4:	bl	0 <coda_dynamic_type_delete>
     ef8:	mvn	r3, #0
     efc:	b	f6c <read_attribute+0x544>
     f00:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f04:	add	r3, r3, #1
     f08:	str	r3, [fp, #-32]	; 0xffffffe0
     f0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     f10:	ldr	r3, [fp, #8]
     f14:	cmp	r2, r3
     f18:	blt	e5c <read_attribute+0x434>
     f1c:	b	f68 <read_attribute+0x540>
     f20:	ldr	r3, [fp, #12]
     f24:	str	r3, [sp, #8]
     f28:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f2c:	str	r3, [sp, #4]
     f30:	ldr	r3, [fp, #-28]	; 0xffffffe4
     f34:	str	r3, [sp]
     f38:	ldrd	r2, [fp, #-60]	; 0xffffffc4
     f3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     f40:	bl	664 <read_attribute_sub>
     f44:	mov	r3, r0
     f48:	cmp	r3, #0
     f4c:	beq	f60 <read_attribute+0x538>
     f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f54:	bl	0 <coda_type_release>
     f58:	mvn	r3, #0
     f5c:	b	f6c <read_attribute+0x544>
     f60:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f64:	bl	0 <coda_type_release>
     f68:	mov	r3, #0
     f6c:	mov	r0, r3
     f70:	sub	sp, fp, #12
     f74:	ldrd	r4, [sp]
     f78:	ldr	fp, [sp, #8]
     f7c:	add	sp, sp, #12
     f80:	pop	{pc}		; (ldr pc, [sp], #4)

00000f84 <read_AEDR>:
     f84:	strd	r4, [sp, #-32]!	; 0xffffffe0
     f88:	strd	r6, [sp, #8]
     f8c:	strd	r8, [sp, #16]
     f90:	str	fp, [sp, #24]
     f94:	str	lr, [sp, #28]
     f98:	add	fp, sp, #28
     f9c:	sub	sp, sp, #96	; 0x60
     fa0:	str	r0, [fp, #-64]	; 0xffffffc0
     fa4:	strd	r2, [fp, #-76]	; 0xffffffb4
     fa8:	ldrd	r2, [fp, #-76]	; 0xffffffb4
     fac:	orrs	r3, r2, r3
     fb0:	bne	fbc <read_AEDR+0x38>
     fb4:	mov	r3, #0
     fb8:	b	13f4 <read_AEDR+0x470>
     fbc:	ldr	r3, [fp, #-64]	; 0xffffffc0
     fc0:	ldr	r1, [r3, #52]	; 0x34
     fc4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
     fc8:	adds	r6, r2, #8
     fcc:	adc	r7, r3, #0
     fd0:	sub	r3, fp, #36	; 0x24
     fd4:	str	r3, [sp, #8]
     fd8:	mov	r2, #4
     fdc:	mov	r3, #0
     fe0:	strd	r2, [sp]
     fe4:	mov	r2, r6
     fe8:	mov	r3, r7
     fec:	mov	r0, r1
     ff0:	bl	0 <read_bytes>
     ff4:	mov	r3, r0
     ff8:	cmp	r3, #0
     ffc:	bge	1008 <read_AEDR+0x84>
    1000:	mvn	r3, #0
    1004:	b	13f4 <read_AEDR+0x470>
    1008:	sub	r3, fp, #36	; 0x24
    100c:	mov	r0, r3
    1010:	bl	29c <swap4>
    1014:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1018:	cmp	r3, #5
    101c:	beq	1050 <read_AEDR+0xcc>
    1020:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1024:	cmp	r3, #9
    1028:	beq	1050 <read_AEDR+0xcc>
    102c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1030:	mov	r2, r3
    1034:	movw	r1, #0
    1038:	movt	r1, #0
    103c:	movw	r0, #65236	; 0xfed4
    1040:	movt	r0, #65535	; 0xffff
    1044:	bl	0 <coda_set_error>
    1048:	mvn	r3, #0
    104c:	b	13f4 <read_AEDR+0x470>
    1050:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1054:	ldr	r1, [r3, #52]	; 0x34
    1058:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    105c:	adds	r8, r2, #12
    1060:	adc	r9, r3, #0
    1064:	sub	r3, fp, #44	; 0x2c
    1068:	str	r3, [sp, #8]
    106c:	mov	r2, #8
    1070:	mov	r3, #0
    1074:	strd	r2, [sp]
    1078:	mov	r2, r8
    107c:	mov	r3, r9
    1080:	mov	r0, r1
    1084:	bl	0 <read_bytes>
    1088:	mov	r3, r0
    108c:	cmp	r3, #0
    1090:	bge	109c <read_AEDR+0x118>
    1094:	mvn	r3, #0
    1098:	b	13f4 <read_AEDR+0x470>
    109c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    10a0:	ldr	r1, [r3, #52]	; 0x34
    10a4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    10a8:	adds	r0, r2, #20
    10ac:	str	r0, [fp, #-84]	; 0xffffffac
    10b0:	adc	r3, r3, #0
    10b4:	str	r3, [fp, #-80]	; 0xffffffb0
    10b8:	sub	r3, fp, #48	; 0x30
    10bc:	str	r3, [sp, #8]
    10c0:	mov	r2, #4
    10c4:	mov	r3, #0
    10c8:	strd	r2, [sp]
    10cc:	ldrd	r2, [fp, #-84]	; 0xffffffac
    10d0:	mov	r0, r1
    10d4:	bl	0 <read_bytes>
    10d8:	mov	r3, r0
    10dc:	cmp	r3, #0
    10e0:	bge	10ec <read_AEDR+0x168>
    10e4:	mvn	r3, #0
    10e8:	b	13f4 <read_AEDR+0x470>
    10ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
    10f0:	ldr	r1, [r3, #52]	; 0x34
    10f4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    10f8:	adds	r0, r2, #24
    10fc:	str	r0, [fp, #-92]	; 0xffffffa4
    1100:	adc	r3, r3, #0
    1104:	str	r3, [fp, #-88]	; 0xffffffa8
    1108:	sub	r3, fp, #52	; 0x34
    110c:	str	r3, [sp, #8]
    1110:	mov	r2, #4
    1114:	mov	r3, #0
    1118:	strd	r2, [sp]
    111c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    1120:	mov	r0, r1
    1124:	bl	0 <read_bytes>
    1128:	mov	r3, r0
    112c:	cmp	r3, #0
    1130:	bge	113c <read_AEDR+0x1b8>
    1134:	mvn	r3, #0
    1138:	b	13f4 <read_AEDR+0x470>
    113c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1140:	ldr	r1, [r3, #52]	; 0x34
    1144:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    1148:	adds	r0, r2, #28
    114c:	str	r0, [fp, #-100]	; 0xffffff9c
    1150:	adc	r3, r3, #0
    1154:	str	r3, [fp, #-96]	; 0xffffffa0
    1158:	sub	r3, fp, #56	; 0x38
    115c:	str	r3, [sp, #8]
    1160:	mov	r2, #4
    1164:	mov	r3, #0
    1168:	strd	r2, [sp]
    116c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    1170:	mov	r0, r1
    1174:	bl	0 <read_bytes>
    1178:	mov	r3, r0
    117c:	cmp	r3, #0
    1180:	bge	118c <read_AEDR+0x208>
    1184:	mvn	r3, #0
    1188:	b	13f4 <read_AEDR+0x470>
    118c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1190:	ldr	r1, [r3, #52]	; 0x34
    1194:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    1198:	adds	r0, r2, #32
    119c:	str	r0, [fp, #-108]	; 0xffffff94
    11a0:	adc	r3, r3, #0
    11a4:	str	r3, [fp, #-104]	; 0xffffff98
    11a8:	sub	r3, fp, #60	; 0x3c
    11ac:	str	r3, [sp, #8]
    11b0:	mov	r2, #4
    11b4:	mov	r3, #0
    11b8:	strd	r2, [sp]
    11bc:	ldrd	r2, [fp, #-108]	; 0xffffff94
    11c0:	mov	r0, r1
    11c4:	bl	0 <read_bytes>
    11c8:	mov	r3, r0
    11cc:	cmp	r3, #0
    11d0:	bge	11dc <read_AEDR+0x258>
    11d4:	mvn	r3, #0
    11d8:	b	13f4 <read_AEDR+0x470>
    11dc:	sub	r3, fp, #44	; 0x2c
    11e0:	mov	r0, r3
    11e4:	bl	3b8 <swap8>
    11e8:	sub	r3, fp, #48	; 0x30
    11ec:	mov	r0, r3
    11f0:	bl	29c <swap4>
    11f4:	sub	r3, fp, #52	; 0x34
    11f8:	mov	r0, r3
    11fc:	bl	29c <swap4>
    1200:	sub	r3, fp, #56	; 0x38
    1204:	mov	r0, r3
    1208:	bl	29c <swap4>
    120c:	sub	r3, fp, #60	; 0x3c
    1210:	mov	r0, r3
    1214:	bl	29c <swap4>
    1218:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    121c:	adds	r4, r2, #56	; 0x38
    1220:	adc	r5, r3, #0
    1224:	strd	r4, [fp, #-76]	; 0xffffffb4
    1228:	ldr	r3, [fp, #-52]	; 0xffffffcc
    122c:	cmp	r3, #32
    1230:	bne	124c <read_AEDR+0x2c8>
    1234:	movw	r1, #0
    1238:	movt	r1, #0
    123c:	mvn	r0, #199	; 0xc7
    1240:	bl	0 <coda_set_error>
    1244:	mvn	r3, #0
    1248:	b	13f4 <read_AEDR+0x470>
    124c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1250:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1254:	sub	r1, fp, #32
    1258:	str	r1, [sp, #8]
    125c:	str	r2, [sp, #4]
    1260:	str	r3, [sp]
    1264:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    1268:	ldr	r0, [fp, #-64]	; 0xffffffc0
    126c:	bl	a28 <read_attribute>
    1270:	mov	r3, r0
    1274:	cmp	r3, #0
    1278:	beq	1284 <read_AEDR+0x300>
    127c:	mvn	r3, #0
    1280:	b	13f4 <read_AEDR+0x470>
    1284:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1288:	cmp	r3, #5
    128c:	bne	12d8 <read_AEDR+0x354>
    1290:	ldr	r3, [fp, #8]
    1294:	and	r3, r3, #1
    1298:	cmp	r3, #0
    129c:	beq	12d8 <read_AEDR+0x354>
    12a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    12a4:	ldr	r0, [r3, #20]
    12a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    12ac:	mov	r3, #1
    12b0:	ldr	r1, [fp, #4]
    12b4:	bl	0 <coda_mem_type_add_attribute>
    12b8:	mov	r3, r0
    12bc:	cmp	r3, #0
    12c0:	beq	13c0 <read_AEDR+0x43c>
    12c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    12c8:	mov	r0, r3
    12cc:	bl	0 <coda_dynamic_type_delete>
    12d0:	mvn	r3, #0
    12d4:	b	13f4 <read_AEDR+0x470>
    12d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    12dc:	cmp	r3, #0
    12e0:	blt	12fc <read_AEDR+0x378>
    12e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    12e8:	ldr	r3, [r3, #20]
    12ec:	ldr	r2, [r3, #16]
    12f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    12f4:	cmp	r2, r3
    12f8:	bgt	132c <read_AEDR+0x3a8>
    12fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1300:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1304:	ldr	r3, [r3, #20]
    1308:	ldr	r3, [r3, #16]
    130c:	sub	r3, r3, #1
    1310:	movw	r1, #0
    1314:	movt	r1, #0
    1318:	movw	r0, #65236	; 0xfed4
    131c:	movt	r0, #65535	; 0xffff
    1320:	bl	0 <coda_set_error>
    1324:	mvn	r3, #0
    1328:	b	13f4 <read_AEDR+0x470>
    132c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1330:	ldr	r3, [r3, #20]
    1334:	ldr	r2, [r3, #20]
    1338:	ldr	r3, [fp, #-56]	; 0xffffffc8
    133c:	lsl	r3, r3, #2
    1340:	add	r3, r2, r3
    1344:	ldr	r3, [r3]
    1348:	ldr	r3, [r3]
    134c:	cmp	r3, #103	; 0x67
    1350:	beq	1374 <read_AEDR+0x3f0>
    1354:	movw	r3, #0
    1358:	movt	r3, #0
    135c:	movw	r2, #439	; 0x1b7
    1360:	movw	r1, #0
    1364:	movt	r1, #0
    1368:	movw	r0, #0
    136c:	movt	r0, #0
    1370:	bl	0 <__assert_fail>
    1374:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1378:	ldr	r3, [r3, #20]
    137c:	ldr	r2, [r3, #20]
    1380:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1384:	lsl	r3, r3, #2
    1388:	add	r3, r2, r3
    138c:	ldr	r0, [r3]
    1390:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1394:	mov	r3, #1
    1398:	ldr	r1, [fp, #4]
    139c:	bl	0 <coda_cdf_variable_add_attribute>
    13a0:	mov	r3, r0
    13a4:	cmp	r3, #0
    13a8:	beq	13c0 <read_AEDR+0x43c>
    13ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    13b0:	mov	r0, r3
    13b4:	bl	0 <coda_dynamic_type_delete>
    13b8:	mvn	r3, #0
    13bc:	b	13f4 <read_AEDR+0x470>
    13c0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    13c4:	ldr	r1, [fp, #8]
    13c8:	str	r1, [sp, #4]
    13cc:	ldr	r1, [fp, #4]
    13d0:	str	r1, [sp]
    13d4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    13d8:	bl	f84 <read_AEDR>
    13dc:	mov	r3, r0
    13e0:	cmp	r3, #0
    13e4:	beq	13f0 <read_AEDR+0x46c>
    13e8:	mvn	r3, #0
    13ec:	b	13f4 <read_AEDR+0x470>
    13f0:	mov	r3, #0
    13f4:	mov	r0, r3
    13f8:	sub	sp, fp, #28
    13fc:	ldrd	r4, [sp]
    1400:	ldrd	r6, [sp, #8]
    1404:	ldrd	r8, [sp, #16]
    1408:	ldr	fp, [sp, #24]
    140c:	add	sp, sp, #28
    1410:	pop	{pc}		; (ldr pc, [sp], #4)

00001414 <read_ADR>:
    1414:	strd	r4, [sp, #-32]!	; 0xffffffe0
    1418:	strd	r6, [sp, #8]
    141c:	strd	r8, [sp, #16]
    1420:	str	fp, [sp, #24]
    1424:	str	lr, [sp, #28]
    1428:	add	fp, sp, #28
    142c:	sub	sp, sp, #424	; 0x1a8
    1430:	str	r0, [fp, #-360]	; 0xfffffe98
    1434:	sub	r1, fp, #364	; 0x16c
    1438:	strd	r2, [r1, #-8]
    143c:	sub	r3, fp, #364	; 0x16c
    1440:	ldrd	r2, [r3, #-8]
    1444:	orrs	r3, r2, r3
    1448:	bne	1454 <read_ADR+0x40>
    144c:	mov	r3, #0
    1450:	b	1970 <read_ADR+0x55c>
    1454:	ldr	r3, [fp, #-360]	; 0xfffffe98
    1458:	ldr	r1, [r3, #52]	; 0x34
    145c:	sub	r3, fp, #364	; 0x16c
    1460:	ldrd	r2, [r3, #-8]
    1464:	adds	r4, r2, #8
    1468:	adc	r5, r3, #0
    146c:	sub	r3, fp, #40	; 0x28
    1470:	str	r3, [sp, #8]
    1474:	mov	r2, #4
    1478:	mov	r3, #0
    147c:	strd	r2, [sp]
    1480:	mov	r2, r4
    1484:	mov	r3, r5
    1488:	mov	r0, r1
    148c:	bl	0 <read_bytes>
    1490:	mov	r3, r0
    1494:	cmp	r3, #0
    1498:	bge	14a4 <read_ADR+0x90>
    149c:	mvn	r3, #0
    14a0:	b	1970 <read_ADR+0x55c>
    14a4:	sub	r3, fp, #40	; 0x28
    14a8:	mov	r0, r3
    14ac:	bl	29c <swap4>
    14b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    14b4:	cmp	r3, #4
    14b8:	beq	14e0 <read_ADR+0xcc>
    14bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    14c0:	mov	r2, r3
    14c4:	movw	r1, #0
    14c8:	movt	r1, #0
    14cc:	movw	r0, #65236	; 0xfed4
    14d0:	movt	r0, #65535	; 0xffff
    14d4:	bl	0 <coda_set_error>
    14d8:	mvn	r3, #0
    14dc:	b	1970 <read_ADR+0x55c>
    14e0:	ldr	r3, [fp, #-360]	; 0xfffffe98
    14e4:	ldr	r1, [r3, #52]	; 0x34
    14e8:	sub	r3, fp, #364	; 0x16c
    14ec:	ldrd	r2, [r3, #-8]
    14f0:	adds	r6, r2, #12
    14f4:	adc	r7, r3, #0
    14f8:	sub	r3, fp, #52	; 0x34
    14fc:	str	r3, [sp, #8]
    1500:	mov	r2, #8
    1504:	mov	r3, #0
    1508:	strd	r2, [sp]
    150c:	mov	r2, r6
    1510:	mov	r3, r7
    1514:	mov	r0, r1
    1518:	bl	0 <read_bytes>
    151c:	mov	r3, r0
    1520:	cmp	r3, #0
    1524:	bge	1530 <read_ADR+0x11c>
    1528:	mvn	r3, #0
    152c:	b	1970 <read_ADR+0x55c>
    1530:	ldr	r3, [fp, #-360]	; 0xfffffe98
    1534:	ldr	r1, [r3, #52]	; 0x34
    1538:	sub	r3, fp, #364	; 0x16c
    153c:	ldrd	r2, [r3, #-8]
    1540:	adds	r8, r2, #20
    1544:	adc	r9, r3, #0
    1548:	sub	r3, fp, #60	; 0x3c
    154c:	str	r3, [sp, #8]
    1550:	mov	r2, #8
    1554:	mov	r3, #0
    1558:	strd	r2, [sp]
    155c:	mov	r2, r8
    1560:	mov	r3, r9
    1564:	mov	r0, r1
    1568:	bl	0 <read_bytes>
    156c:	mov	r3, r0
    1570:	cmp	r3, #0
    1574:	bge	1580 <read_ADR+0x16c>
    1578:	mvn	r3, #0
    157c:	b	1970 <read_ADR+0x55c>
    1580:	ldr	r3, [fp, #-360]	; 0xfffffe98
    1584:	ldr	r1, [r3, #52]	; 0x34
    1588:	sub	r3, fp, #364	; 0x16c
    158c:	ldrd	r2, [r3, #-8]
    1590:	adds	r0, r2, #28
    1594:	str	r0, [fp, #-380]	; 0xfffffe84
    1598:	adc	r3, r3, #0
    159c:	str	r3, [fp, #-376]	; 0xfffffe88
    15a0:	sub	r3, fp, #64	; 0x40
    15a4:	str	r3, [sp, #8]
    15a8:	mov	r2, #4
    15ac:	mov	r3, #0
    15b0:	strd	r2, [sp]
    15b4:	sub	r3, fp, #380	; 0x17c
    15b8:	ldrd	r2, [r3]
    15bc:	mov	r0, r1
    15c0:	bl	0 <read_bytes>
    15c4:	mov	r3, r0
    15c8:	cmp	r3, #0
    15cc:	bge	15d8 <read_ADR+0x1c4>
    15d0:	mvn	r3, #0
    15d4:	b	1970 <read_ADR+0x55c>
    15d8:	ldr	r3, [fp, #-360]	; 0xfffffe98
    15dc:	ldr	r1, [r3, #52]	; 0x34
    15e0:	sub	r3, fp, #364	; 0x16c
    15e4:	ldrd	r2, [r3, #-8]
    15e8:	adds	r0, r2, #32
    15ec:	str	r0, [fp, #-388]	; 0xfffffe7c
    15f0:	adc	r3, r3, #0
    15f4:	str	r3, [fp, #-384]	; 0xfffffe80
    15f8:	sub	r3, fp, #68	; 0x44
    15fc:	str	r3, [sp, #8]
    1600:	mov	r2, #4
    1604:	mov	r3, #0
    1608:	strd	r2, [sp]
    160c:	sub	r3, fp, #388	; 0x184
    1610:	ldrd	r2, [r3]
    1614:	mov	r0, r1
    1618:	bl	0 <read_bytes>
    161c:	mov	r3, r0
    1620:	cmp	r3, #0
    1624:	bge	1630 <read_ADR+0x21c>
    1628:	mvn	r3, #0
    162c:	b	1970 <read_ADR+0x55c>
    1630:	ldr	r3, [fp, #-360]	; 0xfffffe98
    1634:	ldr	r1, [r3, #52]	; 0x34
    1638:	sub	r3, fp, #364	; 0x16c
    163c:	ldrd	r2, [r3, #-8]
    1640:	adds	r0, r2, #36	; 0x24
    1644:	str	r0, [fp, #-396]	; 0xfffffe74
    1648:	adc	r3, r3, #0
    164c:	str	r3, [fp, #-392]	; 0xfffffe78
    1650:	sub	r3, fp, #72	; 0x48
    1654:	str	r3, [sp, #8]
    1658:	mov	r2, #4
    165c:	mov	r3, #0
    1660:	strd	r2, [sp]
    1664:	sub	r3, fp, #396	; 0x18c
    1668:	ldrd	r2, [r3]
    166c:	mov	r0, r1
    1670:	bl	0 <read_bytes>
    1674:	mov	r3, r0
    1678:	cmp	r3, #0
    167c:	bge	1688 <read_ADR+0x274>
    1680:	mvn	r3, #0
    1684:	b	1970 <read_ADR+0x55c>
    1688:	ldr	r3, [fp, #-360]	; 0xfffffe98
    168c:	ldr	r1, [r3, #52]	; 0x34
    1690:	sub	r3, fp, #364	; 0x16c
    1694:	ldrd	r2, [r3, #-8]
    1698:	adds	r0, r2, #40	; 0x28
    169c:	str	r0, [fp, #-404]	; 0xfffffe6c
    16a0:	adc	r3, r3, #0
    16a4:	str	r3, [fp, #-400]	; 0xfffffe70
    16a8:	sub	r3, fp, #76	; 0x4c
    16ac:	str	r3, [sp, #8]
    16b0:	mov	r2, #4
    16b4:	mov	r3, #0
    16b8:	strd	r2, [sp]
    16bc:	sub	r3, fp, #404	; 0x194
    16c0:	ldrd	r2, [r3]
    16c4:	mov	r0, r1
    16c8:	bl	0 <read_bytes>
    16cc:	mov	r3, r0
    16d0:	cmp	r3, #0
    16d4:	bge	16e0 <read_ADR+0x2cc>
    16d8:	mvn	r3, #0
    16dc:	b	1970 <read_ADR+0x55c>
    16e0:	ldr	r3, [fp, #-360]	; 0xfffffe98
    16e4:	ldr	r1, [r3, #52]	; 0x34
    16e8:	sub	r3, fp, #364	; 0x16c
    16ec:	ldrd	r2, [r3, #-8]
    16f0:	adds	r0, r2, #48	; 0x30
    16f4:	str	r0, [fp, #-412]	; 0xfffffe64
    16f8:	adc	r3, r3, #0
    16fc:	str	r3, [fp, #-408]	; 0xfffffe68
    1700:	sub	r3, fp, #84	; 0x54
    1704:	str	r3, [sp, #8]
    1708:	mov	r2, #8
    170c:	mov	r3, #0
    1710:	strd	r2, [sp]
    1714:	sub	r3, fp, #412	; 0x19c
    1718:	ldrd	r2, [r3]
    171c:	mov	r0, r1
    1720:	bl	0 <read_bytes>
    1724:	mov	r3, r0
    1728:	cmp	r3, #0
    172c:	bge	1738 <read_ADR+0x324>
    1730:	mvn	r3, #0
    1734:	b	1970 <read_ADR+0x55c>
    1738:	ldr	r3, [fp, #-360]	; 0xfffffe98
    173c:	ldr	r1, [r3, #52]	; 0x34
    1740:	sub	r3, fp, #364	; 0x16c
    1744:	ldrd	r2, [r3, #-8]
    1748:	adds	r0, r2, #56	; 0x38
    174c:	str	r0, [fp, #-420]	; 0xfffffe5c
    1750:	adc	r3, r3, #0
    1754:	str	r3, [fp, #-416]	; 0xfffffe60
    1758:	sub	r3, fp, #88	; 0x58
    175c:	str	r3, [sp, #8]
    1760:	mov	r2, #4
    1764:	mov	r3, #0
    1768:	strd	r2, [sp]
    176c:	sub	r3, fp, #420	; 0x1a4
    1770:	ldrd	r2, [r3]
    1774:	mov	r0, r1
    1778:	bl	0 <read_bytes>
    177c:	mov	r3, r0
    1780:	cmp	r3, #0
    1784:	bge	1790 <read_ADR+0x37c>
    1788:	mvn	r3, #0
    178c:	b	1970 <read_ADR+0x55c>
    1790:	ldr	r3, [fp, #-360]	; 0xfffffe98
    1794:	ldr	r1, [r3, #52]	; 0x34
    1798:	sub	r3, fp, #364	; 0x16c
    179c:	ldrd	r2, [r3, #-8]
    17a0:	adds	r0, r2, #60	; 0x3c
    17a4:	str	r0, [fp, #-428]	; 0xfffffe54
    17a8:	adc	r3, r3, #0
    17ac:	str	r3, [fp, #-424]	; 0xfffffe58
    17b0:	sub	r3, fp, #92	; 0x5c
    17b4:	str	r3, [sp, #8]
    17b8:	mov	r2, #4
    17bc:	mov	r3, #0
    17c0:	strd	r2, [sp]
    17c4:	sub	r3, fp, #428	; 0x1ac
    17c8:	ldrd	r2, [r3]
    17cc:	mov	r0, r1
    17d0:	bl	0 <read_bytes>
    17d4:	mov	r3, r0
    17d8:	cmp	r3, #0
    17dc:	bge	17e8 <read_ADR+0x3d4>
    17e0:	mvn	r3, #0
    17e4:	b	1970 <read_ADR+0x55c>
    17e8:	ldr	r3, [fp, #-360]	; 0xfffffe98
    17ec:	ldr	r1, [r3, #52]	; 0x34
    17f0:	sub	r3, fp, #364	; 0x16c
    17f4:	ldrd	r2, [r3, #-8]
    17f8:	adds	r0, r2, #68	; 0x44
    17fc:	str	r0, [fp, #-436]	; 0xfffffe4c
    1800:	adc	r3, r3, #0
    1804:	str	r3, [fp, #-432]	; 0xfffffe50
    1808:	sub	r3, fp, #352	; 0x160
    180c:	str	r3, [sp, #8]
    1810:	mov	r2, #256	; 0x100
    1814:	mov	r3, #0
    1818:	strd	r2, [sp]
    181c:	sub	r3, fp, #436	; 0x1b4
    1820:	ldrd	r2, [r3]
    1824:	mov	r0, r1
    1828:	bl	0 <read_bytes>
    182c:	mov	r3, r0
    1830:	cmp	r3, #0
    1834:	bge	1840 <read_ADR+0x42c>
    1838:	mvn	r3, #0
    183c:	b	1970 <read_ADR+0x55c>
    1840:	mov	r3, #0
    1844:	strb	r3, [fp, #-96]	; 0xffffffa0
    1848:	sub	r3, fp, #352	; 0x160
    184c:	mov	r0, r3
    1850:	bl	5dc <rtrim>
    1854:	sub	r3, fp, #52	; 0x34
    1858:	mov	r0, r3
    185c:	bl	3b8 <swap8>
    1860:	sub	r3, fp, #60	; 0x3c
    1864:	mov	r0, r3
    1868:	bl	3b8 <swap8>
    186c:	sub	r3, fp, #64	; 0x40
    1870:	mov	r0, r3
    1874:	bl	29c <swap4>
    1878:	sub	r3, fp, #68	; 0x44
    187c:	mov	r0, r3
    1880:	bl	29c <swap4>
    1884:	sub	r3, fp, #72	; 0x48
    1888:	mov	r0, r3
    188c:	bl	29c <swap4>
    1890:	sub	r3, fp, #76	; 0x4c
    1894:	mov	r0, r3
    1898:	bl	29c <swap4>
    189c:	sub	r3, fp, #84	; 0x54
    18a0:	mov	r0, r3
    18a4:	bl	3b8 <swap8>
    18a8:	sub	r3, fp, #88	; 0x58
    18ac:	mov	r0, r3
    18b0:	bl	29c <swap4>
    18b4:	sub	r3, fp, #92	; 0x5c
    18b8:	mov	r0, r3
    18bc:	bl	29c <swap4>
    18c0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    18c4:	strd	r2, [fp, #-36]	; 0xffffffdc
    18c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    18cc:	and	r3, r3, #1
    18d0:	cmp	r3, #0
    18d4:	beq	1908 <read_ADR+0x4f4>
    18d8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    18dc:	cmp	r3, #0
    18e0:	beq	191c <read_ADR+0x508>
    18e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    18e8:	mov	r2, r3
    18ec:	movw	r1, #0
    18f0:	movt	r1, #0
    18f4:	movw	r0, #65236	; 0xfed4
    18f8:	movt	r0, #65535	; 0xffff
    18fc:	bl	0 <coda_set_error>
    1900:	mvn	r3, #0
    1904:	b	1970 <read_ADR+0x55c>
    1908:	ldr	r3, [fp, #-72]	; 0xffffffb8
    190c:	cmp	r3, #0
    1910:	bne	191c <read_ADR+0x508>
    1914:	ldrd	r2, [fp, #-84]	; 0xffffffac
    1918:	strd	r2, [fp, #-36]	; 0xffffffdc
    191c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1920:	str	r3, [sp, #4]
    1924:	sub	r3, fp, #352	; 0x160
    1928:	str	r3, [sp]
    192c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1930:	ldr	r0, [fp, #-360]	; 0xfffffe98
    1934:	bl	f84 <read_AEDR>
    1938:	mov	r3, r0
    193c:	cmp	r3, #0
    1940:	beq	194c <read_ADR+0x538>
    1944:	mvn	r3, #0
    1948:	b	1970 <read_ADR+0x55c>
    194c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    1950:	ldr	r0, [fp, #-360]	; 0xfffffe98
    1954:	bl	1414 <read_ADR>
    1958:	mov	r3, r0
    195c:	cmp	r3, #0
    1960:	beq	196c <read_ADR+0x558>
    1964:	mvn	r3, #0
    1968:	b	1970 <read_ADR+0x55c>
    196c:	mov	r3, #0
    1970:	mov	r0, r3
    1974:	sub	sp, fp, #28
    1978:	ldrd	r4, [sp]
    197c:	ldrd	r6, [sp, #8]
    1980:	ldrd	r8, [sp, #16]
    1984:	ldr	fp, [sp, #24]
    1988:	add	sp, sp, #28
    198c:	pop	{pc}		; (ldr pc, [sp], #4)

00001990 <read_VR>:
    1990:	strd	r4, [sp, #-32]!	; 0xffffffe0
    1994:	strd	r6, [sp, #8]
    1998:	strd	r8, [sp, #16]
    199c:	str	fp, [sp, #24]
    19a0:	str	lr, [sp, #28]
    19a4:	add	fp, sp, #28
    19a8:	sub	sp, sp, #136	; 0x88
    19ac:	str	r0, [fp, #-120]	; 0xffffff88
    19b0:	str	r1, [fp, #-124]	; 0xffffff84
    19b4:	strd	r2, [fp, #-132]	; 0xffffff7c
    19b8:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    19bc:	orrs	r3, r2, r3
    19c0:	bne	19cc <read_VR+0x3c>
    19c4:	mov	r3, #0
    19c8:	b	203c <read_VR+0x6ac>
    19cc:	ldr	r3, [fp, #-120]	; 0xffffff88
    19d0:	ldr	r1, [r3, #52]	; 0x34
    19d4:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    19d8:	adds	r0, r2, #8
    19dc:	str	r0, [fp, #-140]	; 0xffffff74
    19e0:	adc	r3, r3, #0
    19e4:	str	r3, [fp, #-136]	; 0xffffff78
    19e8:	sub	r3, fp, #52	; 0x34
    19ec:	str	r3, [sp, #8]
    19f0:	mov	r2, #4
    19f4:	mov	r3, #0
    19f8:	strd	r2, [sp]
    19fc:	ldrd	r2, [fp, #-140]	; 0xffffff74
    1a00:	mov	r0, r1
    1a04:	bl	0 <read_bytes>
    1a08:	mov	r3, r0
    1a0c:	cmp	r3, #0
    1a10:	bge	1a1c <read_VR+0x8c>
    1a14:	mvn	r3, #0
    1a18:	b	203c <read_VR+0x6ac>
    1a1c:	sub	r3, fp, #52	; 0x34
    1a20:	mov	r0, r3
    1a24:	bl	29c <swap4>
    1a28:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1a2c:	cmp	r3, #6
    1a30:	bne	1a5c <read_VR+0xcc>
    1a34:	ldr	r3, [fp, #8]
    1a38:	str	r3, [sp, #4]
    1a3c:	ldr	r3, [fp, #4]
    1a40:	str	r3, [sp]
    1a44:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    1a48:	ldr	r1, [fp, #-124]	; 0xffffff84
    1a4c:	ldr	r0, [fp, #-120]	; 0xffffff88
    1a50:	bl	205c <read_VXR>
    1a54:	mov	r3, r0
    1a58:	b	203c <read_VR+0x6ac>
    1a5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1a60:	cmp	r3, #7
    1a64:	bne	1b10 <read_VR+0x180>
    1a68:	ldr	r3, [fp, #-124]	; 0xffffff84
    1a6c:	ldr	r3, [r3, #20]
    1a70:	ldr	r2, [fp, #8]
    1a74:	cmp	r2, r3
    1a78:	blt	1a8c <read_VR+0xfc>
    1a7c:	ldr	r3, [fp, #-124]	; 0xffffff84
    1a80:	ldr	r3, [r3, #20]
    1a84:	sub	r3, r3, #1
    1a88:	str	r3, [fp, #8]
    1a8c:	ldr	r3, [fp, #4]
    1a90:	str	r3, [fp, #-32]	; 0xffffffe0
    1a94:	b	1afc <read_VR+0x16c>
    1a98:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    1a9c:	adds	r4, r2, #12
    1aa0:	adc	r5, r3, #0
    1aa4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1aa8:	ldr	r3, [fp, #4]
    1aac:	sub	r3, r2, r3
    1ab0:	ldr	r2, [fp, #-124]	; 0xffffff84
    1ab4:	ldr	r2, [r2, #24]
    1ab8:	mul	r3, r2, r3
    1abc:	ldr	r2, [fp, #-124]	; 0xffffff84
    1ac0:	ldr	r2, [r2, #28]
    1ac4:	mul	r3, r2, r3
    1ac8:	mov	r2, r3
    1acc:	asr	r3, r2, #31
    1ad0:	ldr	r1, [fp, #-124]	; 0xffffff84
    1ad4:	ldr	r0, [r1, #36]	; 0x24
    1ad8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1adc:	lsl	r1, r1, #3
    1ae0:	add	r1, r0, r1
    1ae4:	adds	r8, r4, r2
    1ae8:	adc	r9, r5, r3
    1aec:	strd	r8, [r1]
    1af0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1af4:	add	r3, r3, #1
    1af8:	str	r3, [fp, #-32]	; 0xffffffe0
    1afc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1b00:	ldr	r3, [fp, #8]
    1b04:	cmp	r2, r3
    1b08:	ble	1a98 <read_VR+0x108>
    1b0c:	b	2038 <read_VR+0x6a8>
    1b10:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1b14:	cmp	r3, #13
    1b18:	bne	2014 <read_VR+0x684>
    1b1c:	mov	r3, #0
    1b20:	str	r3, [fp, #-36]	; 0xffffffdc
    1b24:	ldr	r3, [fp, #-124]	; 0xffffff84
    1b28:	ldr	r3, [r3, #20]
    1b2c:	ldr	r2, [fp, #4]
    1b30:	cmp	r2, r3
    1b34:	blt	1b40 <read_VR+0x1b0>
    1b38:	mov	r3, #0
    1b3c:	b	203c <read_VR+0x6ac>
    1b40:	ldr	r3, [fp, #-124]	; 0xffffff84
    1b44:	ldr	r3, [r3, #40]	; 0x28
    1b48:	cmp	r3, #0
    1b4c:	bne	1be0 <read_VR+0x250>
    1b50:	ldr	r3, [fp, #-124]	; 0xffffff84
    1b54:	ldr	r3, [r3, #20]
    1b58:	ldr	r2, [fp, #-124]	; 0xffffff84
    1b5c:	ldr	r2, [r2, #24]
    1b60:	mul	r3, r2, r3
    1b64:	ldr	r2, [fp, #-124]	; 0xffffff84
    1b68:	ldr	r2, [r2, #28]
    1b6c:	mul	r3, r2, r3
    1b70:	mov	r0, r3
    1b74:	bl	0 <malloc>
    1b78:	mov	r3, r0
    1b7c:	mov	r2, r3
    1b80:	ldr	r3, [fp, #-124]	; 0xffffff84
    1b84:	str	r2, [r3, #40]	; 0x28
    1b88:	ldr	r3, [fp, #-124]	; 0xffffff84
    1b8c:	ldr	r3, [r3, #40]	; 0x28
    1b90:	cmp	r3, #0
    1b94:	bne	1be0 <read_VR+0x250>
    1b98:	ldr	r3, [fp, #-124]	; 0xffffff84
    1b9c:	ldr	r3, [r3, #20]
    1ba0:	ldr	r2, [fp, #-124]	; 0xffffff84
    1ba4:	ldr	r2, [r2, #24]
    1ba8:	mul	r3, r2, r3
    1bac:	ldr	r2, [fp, #-124]	; 0xffffff84
    1bb0:	ldr	r2, [r2, #28]
    1bb4:	mul	r2, r2, r3
    1bb8:	movw	r3, #629	; 0x275
    1bbc:	str	r3, [sp]
    1bc0:	movw	r3, #0
    1bc4:	movt	r3, #0
    1bc8:	movw	r1, #0
    1bcc:	movt	r1, #0
    1bd0:	mvn	r0, #0
    1bd4:	bl	0 <coda_set_error>
    1bd8:	mvn	r3, #0
    1bdc:	b	203c <read_VR+0x6ac>
    1be0:	ldr	r3, [fp, #-120]	; 0xffffff88
    1be4:	ldr	r1, [r3, #52]	; 0x34
    1be8:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    1bec:	adds	r0, r2, #16
    1bf0:	str	r0, [fp, #-148]	; 0xffffff6c
    1bf4:	adc	r3, r3, #0
    1bf8:	str	r3, [fp, #-144]	; 0xffffff70
    1bfc:	sub	r3, fp, #60	; 0x3c
    1c00:	str	r3, [sp, #8]
    1c04:	mov	r2, #8
    1c08:	mov	r3, #0
    1c0c:	strd	r2, [sp]
    1c10:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    1c14:	mov	r0, r1
    1c18:	bl	0 <read_bytes>
    1c1c:	mov	r3, r0
    1c20:	cmp	r3, #0
    1c24:	bge	1c30 <read_VR+0x2a0>
    1c28:	mvn	r3, #0
    1c2c:	b	203c <read_VR+0x6ac>
    1c30:	sub	r3, fp, #60	; 0x3c
    1c34:	mov	r0, r3
    1c38:	bl	3b8 <swap8>
    1c3c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    1c40:	adds	r6, r2, #24
    1c44:	adc	r7, r3, #0
    1c48:	strd	r6, [fp, #-132]	; 0xffffff7c
    1c4c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    1c50:	cmp	r2, #20
    1c54:	sbcs	r3, r3, #0
    1c58:	bge	1c78 <read_VR+0x2e8>
    1c5c:	movw	r1, #0
    1c60:	movt	r1, #0
    1c64:	movw	r0, #65236	; 0xfed4
    1c68:	movt	r0, #65535	; 0xffff
    1c6c:	bl	0 <coda_set_error>
    1c70:	mvn	r3, #0
    1c74:	b	203c <read_VR+0x6ac>
    1c78:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    1c7c:	mov	r3, r2
    1c80:	mov	r0, r3
    1c84:	bl	0 <malloc>
    1c88:	mov	r3, r0
    1c8c:	str	r3, [fp, #-44]	; 0xffffffd4
    1c90:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1c94:	cmp	r3, #0
    1c98:	bne	1cc8 <read_VR+0x338>
    1c9c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    1ca0:	mov	r3, #652	; 0x28c
    1ca4:	str	r3, [sp]
    1ca8:	movw	r3, #0
    1cac:	movt	r3, #0
    1cb0:	movw	r1, #0
    1cb4:	movt	r1, #0
    1cb8:	mvn	r0, #0
    1cbc:	bl	0 <coda_set_error>
    1cc0:	mvn	r3, #0
    1cc4:	b	203c <read_VR+0x6ac>
    1cc8:	ldr	r3, [fp, #-120]	; 0xffffff88
    1ccc:	ldr	r0, [r3, #52]	; 0x34
    1cd0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    1cd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1cd8:	str	r1, [sp, #8]
    1cdc:	strd	r2, [sp]
    1ce0:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    1ce4:	bl	0 <read_bytes>
    1ce8:	mov	r3, r0
    1cec:	cmp	r3, #0
    1cf0:	bge	1d04 <read_VR+0x374>
    1cf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1cf8:	bl	0 <free>
    1cfc:	mvn	r3, #0
    1d00:	b	203c <read_VR+0x6ac>
    1d04:	mov	r3, #0
    1d08:	str	r3, [fp, #-116]	; 0xffffff8c
    1d0c:	mov	r3, #0
    1d10:	str	r3, [fp, #-112]	; 0xffffff90
    1d14:	mov	r3, #0
    1d18:	str	r3, [fp, #-84]	; 0xffffffac
    1d1c:	mov	r3, #0
    1d20:	str	r3, [fp, #-80]	; 0xffffffb0
    1d24:	mov	r3, #0
    1d28:	str	r3, [fp, #-76]	; 0xffffffb4
    1d2c:	mov	r3, #0
    1d30:	str	r3, [fp, #-92]	; 0xffffffa4
    1d34:	sub	r0, fp, #116	; 0x74
    1d38:	mov	r3, #56	; 0x38
    1d3c:	movw	r2, #0
    1d40:	movt	r2, #0
    1d44:	mov	r1, #31
    1d48:	bl	0 <coda_inflateInit2_>
    1d4c:	mov	r3, r0
    1d50:	cmp	r3, #0
    1d54:	beq	1d98 <read_VR+0x408>
    1d58:	movw	r1, #0
    1d5c:	movt	r1, #0
    1d60:	mvn	r0, #21
    1d64:	bl	0 <coda_set_error>
    1d68:	ldr	r3, [fp, #-92]	; 0xffffffa4
    1d6c:	cmp	r3, #0
    1d70:	beq	1d88 <read_VR+0x3f8>
    1d74:	ldr	r3, [fp, #-92]	; 0xffffffa4
    1d78:	mov	r1, r3
    1d7c:	movw	r0, #0
    1d80:	movt	r0, #0
    1d84:	bl	0 <coda_add_error_message>
    1d88:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1d8c:	bl	0 <free>
    1d90:	mvn	r3, #0
    1d94:	b	203c <read_VR+0x6ac>
    1d98:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1d9c:	str	r3, [fp, #-116]	; 0xffffff8c
    1da0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    1da4:	mov	r3, r2
    1da8:	str	r3, [fp, #-112]	; 0xffffff90
    1dac:	ldr	r3, [fp, #-124]	; 0xffffff84
    1db0:	ldr	r3, [r3, #20]
    1db4:	ldr	r2, [fp, #8]
    1db8:	cmp	r2, r3
    1dbc:	blt	1dd8 <read_VR+0x448>
    1dc0:	ldr	r3, [fp, #-124]	; 0xffffff84
    1dc4:	ldr	r3, [r3, #20]
    1dc8:	sub	r3, r3, #1
    1dcc:	str	r3, [fp, #8]
    1dd0:	mov	r3, #1
    1dd4:	str	r3, [fp, #-36]	; 0xffffffdc
    1dd8:	ldr	r3, [fp, #-124]	; 0xffffff84
    1ddc:	ldr	r3, [r3, #40]	; 0x28
    1de0:	ldr	r2, [fp, #-124]	; 0xffffff84
    1de4:	ldr	r2, [r2, #24]
    1de8:	ldr	r1, [fp, #4]
    1dec:	mul	r2, r1, r2
    1df0:	ldr	r1, [fp, #-124]	; 0xffffff84
    1df4:	ldr	r1, [r1, #28]
    1df8:	mul	r2, r1, r2
    1dfc:	add	r3, r3, r2
    1e00:	str	r3, [fp, #-104]	; 0xffffff98
    1e04:	ldr	r2, [fp, #8]
    1e08:	ldr	r3, [fp, #4]
    1e0c:	sub	r3, r2, r3
    1e10:	add	r3, r3, #1
    1e14:	ldr	r2, [fp, #-124]	; 0xffffff84
    1e18:	ldr	r2, [r2, #24]
    1e1c:	mul	r3, r2, r3
    1e20:	ldr	r2, [fp, #-124]	; 0xffffff84
    1e24:	ldr	r2, [r2, #28]
    1e28:	mul	r3, r2, r3
    1e2c:	str	r3, [fp, #-100]	; 0xffffff9c
    1e30:	sub	r3, fp, #116	; 0x74
    1e34:	mov	r1, #4
    1e38:	mov	r0, r3
    1e3c:	bl	0 <coda_inflate>
    1e40:	str	r0, [fp, #-48]	; 0xffffffd0
    1e44:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1e48:	cmn	r3, #2
    1e4c:	bne	1e70 <read_VR+0x4e0>
    1e50:	movw	r3, #0
    1e54:	movt	r3, #0
    1e58:	movw	r2, #687	; 0x2af
    1e5c:	movw	r1, #0
    1e60:	movt	r1, #0
    1e64:	movw	r0, #0
    1e68:	movt	r0, #0
    1e6c:	bl	0 <__assert_fail>
    1e70:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1e74:	cmp	r3, #0
    1e78:	bge	1f54 <read_VR+0x5c4>
    1e7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1e80:	cmn	r3, #5
    1e84:	bne	1e94 <read_VR+0x504>
    1e88:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1e8c:	cmp	r3, #0
    1e90:	bne	1f54 <read_VR+0x5c4>
    1e94:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1e98:	cmn	r3, #3
    1e9c:	beq	1ebc <read_VR+0x52c>
    1ea0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1ea4:	cmp	r3, #2
    1ea8:	beq	1ebc <read_VR+0x52c>
    1eac:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1eb0:	cmn	r3, #4
    1eb4:	beq	1ef0 <read_VR+0x560>
    1eb8:	b	1f00 <read_VR+0x570>
    1ebc:	movw	r1, #0
    1ec0:	movt	r1, #0
    1ec4:	mvn	r0, #21
    1ec8:	bl	0 <coda_set_error>
    1ecc:	ldr	r3, [fp, #-92]	; 0xffffffa4
    1ed0:	cmp	r3, #0
    1ed4:	beq	1f34 <read_VR+0x5a4>
    1ed8:	ldr	r3, [fp, #-92]	; 0xffffffa4
    1edc:	mov	r1, r3
    1ee0:	movw	r0, #0
    1ee4:	movt	r0, #0
    1ee8:	bl	0 <coda_add_error_message>
    1eec:	b	1f34 <read_VR+0x5a4>
    1ef0:	mov	r1, #0
    1ef4:	mvn	r0, #0
    1ef8:	bl	0 <coda_set_error>
    1efc:	b	1f38 <read_VR+0x5a8>
    1f00:	movw	r1, #0
    1f04:	movt	r1, #0
    1f08:	mvn	r0, #21
    1f0c:	bl	0 <coda_set_error>
    1f10:	ldr	r3, [fp, #-92]	; 0xffffffa4
    1f14:	cmp	r3, #0
    1f18:	beq	1f38 <read_VR+0x5a8>
    1f1c:	ldr	r3, [fp, #-92]	; 0xffffffa4
    1f20:	mov	r1, r3
    1f24:	movw	r0, #0
    1f28:	movt	r0, #0
    1f2c:	bl	0 <coda_add_error_message>
    1f30:	b	1f38 <read_VR+0x5a8>
    1f34:	nop	{0}
    1f38:	sub	r3, fp, #116	; 0x74
    1f3c:	mov	r0, r3
    1f40:	bl	0 <coda_inflateEnd>
    1f44:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1f48:	bl	0 <free>
    1f4c:	mvn	r3, #0
    1f50:	b	203c <read_VR+0x6ac>
    1f54:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1f58:	bl	0 <free>
    1f5c:	sub	r3, fp, #116	; 0x74
    1f60:	mov	r0, r3
    1f64:	bl	0 <coda_inflateEnd>
    1f68:	mov	r3, r0
    1f6c:	cmp	r3, #0
    1f70:	beq	1fac <read_VR+0x61c>
    1f74:	movw	r1, #0
    1f78:	movt	r1, #0
    1f7c:	mvn	r0, #21
    1f80:	bl	0 <coda_set_error>
    1f84:	ldr	r3, [fp, #-92]	; 0xffffffa4
    1f88:	cmp	r3, #0
    1f8c:	beq	1fa4 <read_VR+0x614>
    1f90:	ldr	r3, [fp, #-92]	; 0xffffffa4
    1f94:	mov	r1, r3
    1f98:	movw	r0, #0
    1f9c:	movt	r0, #0
    1fa0:	bl	0 <coda_add_error_message>
    1fa4:	mvn	r3, #0
    1fa8:	b	203c <read_VR+0x6ac>
    1fac:	ldr	r3, [fp, #4]
    1fb0:	str	r3, [fp, #-40]	; 0xffffffd8
    1fb4:	b	2000 <read_VR+0x670>
    1fb8:	ldr	r3, [fp, #-124]	; 0xffffff84
    1fbc:	ldr	r3, [r3, #24]
    1fc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1fc4:	mul	r3, r2, r3
    1fc8:	ldr	r2, [fp, #-124]	; 0xffffff84
    1fcc:	ldr	r2, [r2, #28]
    1fd0:	mul	r3, r2, r3
    1fd4:	ldr	r2, [fp, #-124]	; 0xffffff84
    1fd8:	ldr	r1, [r2, #36]	; 0x24
    1fdc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1fe0:	lsl	r2, r2, #3
    1fe4:	add	r1, r1, r2
    1fe8:	mov	r2, r3
    1fec:	asr	r3, r2, #31
    1ff0:	strd	r2, [r1]
    1ff4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1ff8:	add	r3, r3, #1
    1ffc:	str	r3, [fp, #-40]	; 0xffffffd8
    2000:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2004:	ldr	r3, [fp, #8]
    2008:	cmp	r2, r3
    200c:	ble	1fb8 <read_VR+0x628>
    2010:	b	2038 <read_VR+0x6a8>
    2014:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2018:	mov	r2, r3
    201c:	movw	r1, #0
    2020:	movt	r1, #0
    2024:	movw	r0, #65236	; 0xfed4
    2028:	movt	r0, #65535	; 0xffff
    202c:	bl	0 <coda_set_error>
    2030:	mvn	r3, #0
    2034:	b	203c <read_VR+0x6ac>
    2038:	mov	r3, #0
    203c:	mov	r0, r3
    2040:	sub	sp, fp, #28
    2044:	ldrd	r4, [sp]
    2048:	ldrd	r6, [sp, #8]
    204c:	ldrd	r8, [sp, #16]
    2050:	ldr	fp, [sp, #24]
    2054:	add	sp, sp, #28
    2058:	pop	{pc}		; (ldr pc, [sp], #4)

0000205c <read_VXR>:
    205c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    2060:	strd	r6, [sp, #8]
    2064:	strd	r8, [sp, #16]
    2068:	str	fp, [sp, #24]
    206c:	str	lr, [sp, #28]
    2070:	add	fp, sp, #28
    2074:	sub	sp, sp, #112	; 0x70
    2078:	str	r0, [fp, #-72]	; 0xffffffb8
    207c:	str	r1, [fp, #-76]	; 0xffffffb4
    2080:	strd	r2, [fp, #-84]	; 0xffffffac
    2084:	ldrd	r2, [fp, #-84]	; 0xffffffac
    2088:	orrs	r3, r2, r3
    208c:	bne	2098 <read_VXR+0x3c>
    2090:	mov	r3, #0
    2094:	b	2428 <read_VXR+0x3cc>
    2098:	ldr	r3, [fp, #-72]	; 0xffffffb8
    209c:	ldr	r1, [r3, #52]	; 0x34
    20a0:	ldrd	r2, [fp, #-84]	; 0xffffffac
    20a4:	adds	r4, r2, #8
    20a8:	adc	r5, r3, #0
    20ac:	sub	r3, fp, #36	; 0x24
    20b0:	str	r3, [sp, #8]
    20b4:	mov	r2, #4
    20b8:	mov	r3, #0
    20bc:	strd	r2, [sp]
    20c0:	mov	r2, r4
    20c4:	mov	r3, r5
    20c8:	mov	r0, r1
    20cc:	bl	0 <read_bytes>
    20d0:	mov	r3, r0
    20d4:	cmp	r3, #0
    20d8:	bge	20e4 <read_VXR+0x88>
    20dc:	mvn	r3, #0
    20e0:	b	2428 <read_VXR+0x3cc>
    20e4:	sub	r3, fp, #36	; 0x24
    20e8:	mov	r0, r3
    20ec:	bl	29c <swap4>
    20f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    20f4:	cmp	r3, #6
    20f8:	beq	2120 <read_VXR+0xc4>
    20fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2100:	mov	r2, r3
    2104:	movw	r1, #0
    2108:	movt	r1, #0
    210c:	movw	r0, #65236	; 0xfed4
    2110:	movt	r0, #65535	; 0xffff
    2114:	bl	0 <coda_set_error>
    2118:	mvn	r3, #0
    211c:	b	2428 <read_VXR+0x3cc>
    2120:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2124:	ldr	r1, [r3, #52]	; 0x34
    2128:	ldrd	r2, [fp, #-84]	; 0xffffffac
    212c:	adds	r8, r2, #12
    2130:	adc	r9, r3, #0
    2134:	sub	r3, fp, #44	; 0x2c
    2138:	str	r3, [sp, #8]
    213c:	mov	r2, #8
    2140:	mov	r3, #0
    2144:	strd	r2, [sp]
    2148:	mov	r2, r8
    214c:	mov	r3, r9
    2150:	mov	r0, r1
    2154:	bl	0 <read_bytes>
    2158:	mov	r3, r0
    215c:	cmp	r3, #0
    2160:	bge	216c <read_VXR+0x110>
    2164:	mvn	r3, #0
    2168:	b	2428 <read_VXR+0x3cc>
    216c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2170:	ldr	r1, [r3, #52]	; 0x34
    2174:	ldrd	r2, [fp, #-84]	; 0xffffffac
    2178:	adds	r0, r2, #20
    217c:	str	r0, [fp, #-92]	; 0xffffffa4
    2180:	adc	r3, r3, #0
    2184:	str	r3, [fp, #-88]	; 0xffffffa8
    2188:	sub	r3, fp, #48	; 0x30
    218c:	str	r3, [sp, #8]
    2190:	mov	r2, #4
    2194:	mov	r3, #0
    2198:	strd	r2, [sp]
    219c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    21a0:	mov	r0, r1
    21a4:	bl	0 <read_bytes>
    21a8:	mov	r3, r0
    21ac:	cmp	r3, #0
    21b0:	bge	21bc <read_VXR+0x160>
    21b4:	mvn	r3, #0
    21b8:	b	2428 <read_VXR+0x3cc>
    21bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    21c0:	ldr	r1, [r3, #52]	; 0x34
    21c4:	ldrd	r2, [fp, #-84]	; 0xffffffac
    21c8:	adds	r0, r2, #24
    21cc:	str	r0, [fp, #-100]	; 0xffffff9c
    21d0:	adc	r3, r3, #0
    21d4:	str	r3, [fp, #-96]	; 0xffffffa0
    21d8:	sub	r3, fp, #52	; 0x34
    21dc:	str	r3, [sp, #8]
    21e0:	mov	r2, #4
    21e4:	mov	r3, #0
    21e8:	strd	r2, [sp]
    21ec:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    21f0:	mov	r0, r1
    21f4:	bl	0 <read_bytes>
    21f8:	mov	r3, r0
    21fc:	cmp	r3, #0
    2200:	bge	220c <read_VXR+0x1b0>
    2204:	mvn	r3, #0
    2208:	b	2428 <read_VXR+0x3cc>
    220c:	sub	r3, fp, #44	; 0x2c
    2210:	mov	r0, r3
    2214:	bl	3b8 <swap8>
    2218:	sub	r3, fp, #48	; 0x30
    221c:	mov	r0, r3
    2220:	bl	29c <swap4>
    2224:	sub	r3, fp, #52	; 0x34
    2228:	mov	r0, r3
    222c:	bl	29c <swap4>
    2230:	ldrd	r2, [fp, #-84]	; 0xffffffac
    2234:	adds	r6, r2, #28
    2238:	adc	r7, r3, #0
    223c:	strd	r6, [fp, #-84]	; 0xffffffac
    2240:	mov	r3, #0
    2244:	str	r3, [fp, #-32]	; 0xffffffe0
    2248:	b	23e0 <read_VXR+0x384>
    224c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2250:	ldr	ip, [r3, #52]	; 0x34
    2254:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2258:	lsl	r3, r3, #2
    225c:	mov	r0, r3
    2260:	asr	r1, r0, #31
    2264:	ldrd	r2, [fp, #-84]	; 0xffffffac
    2268:	adds	lr, r0, r2
    226c:	str	lr, [fp, #-108]	; 0xffffff94
    2270:	adc	r3, r1, r3
    2274:	str	r3, [fp, #-104]	; 0xffffff98
    2278:	sub	r3, fp, #56	; 0x38
    227c:	str	r3, [sp, #8]
    2280:	mov	r2, #4
    2284:	mov	r3, #0
    2288:	strd	r2, [sp]
    228c:	ldrd	r2, [fp, #-108]	; 0xffffff94
    2290:	mov	r0, ip
    2294:	bl	0 <read_bytes>
    2298:	mov	r3, r0
    229c:	cmp	r3, #0
    22a0:	bge	22ac <read_VXR+0x250>
    22a4:	mvn	r3, #0
    22a8:	b	2428 <read_VXR+0x3cc>
    22ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
    22b0:	ldr	ip, [r3, #52]	; 0x34
    22b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    22b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    22bc:	add	r3, r2, r3
    22c0:	lsl	r3, r3, #2
    22c4:	mov	r0, r3
    22c8:	asr	r1, r0, #31
    22cc:	ldrd	r2, [fp, #-84]	; 0xffffffac
    22d0:	adds	lr, r0, r2
    22d4:	str	lr, [fp, #-116]	; 0xffffff8c
    22d8:	adc	r3, r1, r3
    22dc:	str	r3, [fp, #-112]	; 0xffffff90
    22e0:	sub	r3, fp, #60	; 0x3c
    22e4:	str	r3, [sp, #8]
    22e8:	mov	r2, #4
    22ec:	mov	r3, #0
    22f0:	strd	r2, [sp]
    22f4:	ldrd	r2, [fp, #-116]	; 0xffffff8c
    22f8:	mov	r0, ip
    22fc:	bl	0 <read_bytes>
    2300:	mov	r3, r0
    2304:	cmp	r3, #0
    2308:	bge	2314 <read_VXR+0x2b8>
    230c:	mvn	r3, #0
    2310:	b	2428 <read_VXR+0x3cc>
    2314:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2318:	ldr	ip, [r3, #52]	; 0x34
    231c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    2320:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2324:	add	r3, r2, r3
    2328:	lsl	r3, r3, #3
    232c:	mov	r0, r3
    2330:	asr	r1, r0, #31
    2334:	ldrd	r2, [fp, #-84]	; 0xffffffac
    2338:	adds	lr, r0, r2
    233c:	str	lr, [fp, #-124]	; 0xffffff84
    2340:	adc	r3, r1, r3
    2344:	str	r3, [fp, #-120]	; 0xffffff88
    2348:	sub	r3, fp, #68	; 0x44
    234c:	str	r3, [sp, #8]
    2350:	mov	r2, #8
    2354:	mov	r3, #0
    2358:	strd	r2, [sp]
    235c:	ldrd	r2, [fp, #-124]	; 0xffffff84
    2360:	mov	r0, ip
    2364:	bl	0 <read_bytes>
    2368:	mov	r3, r0
    236c:	cmp	r3, #0
    2370:	bge	237c <read_VXR+0x320>
    2374:	mvn	r3, #0
    2378:	b	2428 <read_VXR+0x3cc>
    237c:	sub	r3, fp, #56	; 0x38
    2380:	mov	r0, r3
    2384:	bl	29c <swap4>
    2388:	sub	r3, fp, #60	; 0x3c
    238c:	mov	r0, r3
    2390:	bl	29c <swap4>
    2394:	sub	r3, fp, #68	; 0x44
    2398:	mov	r0, r3
    239c:	bl	3b8 <swap8>
    23a0:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    23a4:	ldr	r1, [fp, #-56]	; 0xffffffc8
    23a8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    23ac:	str	r0, [sp, #4]
    23b0:	str	r1, [sp]
    23b4:	ldr	r1, [fp, #-76]	; 0xffffffb4
    23b8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    23bc:	bl	1990 <read_VR>
    23c0:	mov	r3, r0
    23c4:	cmp	r3, #0
    23c8:	beq	23d4 <read_VXR+0x378>
    23cc:	mvn	r3, #0
    23d0:	b	2428 <read_VXR+0x3cc>
    23d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23d8:	add	r3, r3, #1
    23dc:	str	r3, [fp, #-32]	; 0xffffffe0
    23e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    23e8:	cmp	r2, r3
    23ec:	blt	224c <read_VXR+0x1f0>
    23f0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    23f4:	ldr	r1, [fp, #8]
    23f8:	str	r1, [sp, #4]
    23fc:	ldr	r1, [fp, #4]
    2400:	str	r1, [sp]
    2404:	ldr	r1, [fp, #-76]	; 0xffffffb4
    2408:	ldr	r0, [fp, #-72]	; 0xffffffb8
    240c:	bl	205c <read_VXR>
    2410:	mov	r3, r0
    2414:	cmp	r3, #0
    2418:	beq	2424 <read_VXR+0x3c8>
    241c:	mvn	r3, #0
    2420:	b	2428 <read_VXR+0x3cc>
    2424:	mov	r3, #0
    2428:	mov	r0, r3
    242c:	sub	sp, fp, #28
    2430:	ldrd	r4, [sp]
    2434:	ldrd	r6, [sp, #8]
    2438:	ldrd	r8, [sp, #16]
    243c:	ldr	fp, [sp, #24]
    2440:	add	sp, sp, #28
    2444:	pop	{pc}		; (ldr pc, [sp], #4)

00002448 <read_CPR>:
    2448:	strd	r4, [sp, #-24]!	; 0xffffffe8
    244c:	strd	r6, [sp, #8]
    2450:	str	fp, [sp, #16]
    2454:	str	lr, [sp, #20]
    2458:	add	fp, sp, #20
    245c:	sub	sp, sp, #40	; 0x28
    2460:	str	r0, [fp, #-32]	; 0xffffffe0
    2464:	strd	r2, [fp, #-44]	; 0xffffffd4
    2468:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    246c:	orrs	r3, r2, r3
    2470:	bne	247c <read_CPR+0x34>
    2474:	mov	r3, #0
    2478:	b	258c <read_CPR+0x144>
    247c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2480:	ldr	r1, [r3, #52]	; 0x34
    2484:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    2488:	adds	r6, r2, #8
    248c:	adc	r7, r3, #0
    2490:	sub	r3, fp, #24
    2494:	str	r3, [sp, #8]
    2498:	mov	r2, #4
    249c:	mov	r3, #0
    24a0:	strd	r2, [sp]
    24a4:	mov	r2, r6
    24a8:	mov	r3, r7
    24ac:	mov	r0, r1
    24b0:	bl	0 <read_bytes>
    24b4:	mov	r3, r0
    24b8:	cmp	r3, #0
    24bc:	bge	24c8 <read_CPR+0x80>
    24c0:	mvn	r3, #0
    24c4:	b	258c <read_CPR+0x144>
    24c8:	sub	r3, fp, #24
    24cc:	mov	r0, r3
    24d0:	bl	29c <swap4>
    24d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    24d8:	cmp	r3, #11
    24dc:	beq	2504 <read_CPR+0xbc>
    24e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    24e4:	mov	r2, r3
    24e8:	movw	r1, #0
    24ec:	movt	r1, #0
    24f0:	movw	r0, #65236	; 0xfed4
    24f4:	movt	r0, #65535	; 0xffff
    24f8:	bl	0 <coda_set_error>
    24fc:	mvn	r3, #0
    2500:	b	258c <read_CPR+0x144>
    2504:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2508:	ldr	r1, [r3, #52]	; 0x34
    250c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    2510:	adds	r4, r2, #12
    2514:	adc	r5, r3, #0
    2518:	sub	r3, fp, #28
    251c:	str	r3, [sp, #8]
    2520:	mov	r2, #4
    2524:	mov	r3, #0
    2528:	strd	r2, [sp]
    252c:	mov	r2, r4
    2530:	mov	r3, r5
    2534:	mov	r0, r1
    2538:	bl	0 <read_bytes>
    253c:	mov	r3, r0
    2540:	cmp	r3, #0
    2544:	bge	2550 <read_CPR+0x108>
    2548:	mvn	r3, #0
    254c:	b	258c <read_CPR+0x144>
    2550:	sub	r3, fp, #28
    2554:	mov	r0, r3
    2558:	bl	29c <swap4>
    255c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2560:	cmp	r3, #5
    2564:	beq	2588 <read_CPR+0x140>
    2568:	ldr	r3, [fp, #-28]	; 0xffffffe4
    256c:	mov	r2, r3
    2570:	movw	r1, #0
    2574:	movt	r1, #0
    2578:	mvn	r0, #199	; 0xc7
    257c:	bl	0 <coda_set_error>
    2580:	mvn	r3, #0
    2584:	b	258c <read_CPR+0x144>
    2588:	mov	r3, #0
    258c:	mov	r0, r3
    2590:	sub	sp, fp, #20
    2594:	ldrd	r4, [sp]
    2598:	ldrd	r6, [sp, #8]
    259c:	ldr	fp, [sp, #16]
    25a0:	add	sp, sp, #20
    25a4:	pop	{pc}		; (ldr pc, [sp], #4)

000025a8 <read_VDR>:
    25a8:	strd	r4, [sp, #-32]!	; 0xffffffe0
    25ac:	strd	r6, [sp, #8]
    25b0:	strd	r8, [sp, #16]
    25b4:	str	fp, [sp, #24]
    25b8:	str	lr, [sp, #28]
    25bc:	add	fp, sp, #28
    25c0:	sub	sp, sp, #584	; 0x248
    25c4:	str	r0, [fp, #-448]	; 0xfffffe40
    25c8:	sub	r1, fp, #460	; 0x1cc
    25cc:	strd	r2, [r1]
    25d0:	sub	r3, fp, #460	; 0x1cc
    25d4:	ldrd	r2, [r3]
    25d8:	orrs	r3, r2, r3
    25dc:	bne	25e8 <read_VDR+0x40>
    25e0:	mov	r3, #0
    25e4:	b	30d0 <read_VDR+0xb28>
    25e8:	ldr	r3, [fp, #-448]	; 0xfffffe40
    25ec:	ldr	r1, [r3, #52]	; 0x34
    25f0:	sub	r3, fp, #460	; 0x1cc
    25f4:	ldrd	r2, [r3]
    25f8:	adds	r4, r2, #8
    25fc:	adc	r5, r3, #0
    2600:	sub	r3, fp, #52	; 0x34
    2604:	str	r3, [sp, #8]
    2608:	mov	r2, #4
    260c:	mov	r3, #0
    2610:	strd	r2, [sp]
    2614:	mov	r2, r4
    2618:	mov	r3, r5
    261c:	mov	r0, r1
    2620:	bl	0 <read_bytes>
    2624:	mov	r3, r0
    2628:	cmp	r3, #0
    262c:	bge	2638 <read_VDR+0x90>
    2630:	mvn	r3, #0
    2634:	b	30d0 <read_VDR+0xb28>
    2638:	sub	r3, fp, #52	; 0x34
    263c:	mov	r0, r3
    2640:	bl	29c <swap4>
    2644:	ldr	r3, [fp, #4]
    2648:	cmp	r3, #0
    264c:	beq	2680 <read_VDR+0xd8>
    2650:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2654:	cmp	r3, #8
    2658:	beq	26b0 <read_VDR+0x108>
    265c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2660:	mov	r2, r3
    2664:	movw	r1, #0
    2668:	movt	r1, #0
    266c:	movw	r0, #65236	; 0xfed4
    2670:	movt	r0, #65535	; 0xffff
    2674:	bl	0 <coda_set_error>
    2678:	mvn	r3, #0
    267c:	b	30d0 <read_VDR+0xb28>
    2680:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2684:	cmp	r3, #3
    2688:	beq	26b0 <read_VDR+0x108>
    268c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2690:	mov	r2, r3
    2694:	movw	r1, #0
    2698:	movt	r1, #0
    269c:	movw	r0, #65236	; 0xfed4
    26a0:	movt	r0, #65535	; 0xffff
    26a4:	bl	0 <coda_set_error>
    26a8:	mvn	r3, #0
    26ac:	b	30d0 <read_VDR+0xb28>
    26b0:	ldr	r3, [fp, #-448]	; 0xfffffe40
    26b4:	ldr	r1, [r3, #52]	; 0x34
    26b8:	sub	r3, fp, #460	; 0x1cc
    26bc:	ldrd	r2, [r3]
    26c0:	adds	r6, r2, #12
    26c4:	adc	r7, r3, #0
    26c8:	sub	r3, fp, #60	; 0x3c
    26cc:	str	r3, [sp, #8]
    26d0:	mov	r2, #8
    26d4:	mov	r3, #0
    26d8:	strd	r2, [sp]
    26dc:	mov	r2, r6
    26e0:	mov	r3, r7
    26e4:	mov	r0, r1
    26e8:	bl	0 <read_bytes>
    26ec:	mov	r3, r0
    26f0:	cmp	r3, #0
    26f4:	bge	2700 <read_VDR+0x158>
    26f8:	mvn	r3, #0
    26fc:	b	30d0 <read_VDR+0xb28>
    2700:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2704:	ldr	r1, [r3, #52]	; 0x34
    2708:	sub	r3, fp, #460	; 0x1cc
    270c:	ldrd	r2, [r3]
    2710:	adds	r8, r2, #20
    2714:	adc	r9, r3, #0
    2718:	sub	r3, fp, #64	; 0x40
    271c:	str	r3, [sp, #8]
    2720:	mov	r2, #4
    2724:	mov	r3, #0
    2728:	strd	r2, [sp]
    272c:	mov	r2, r8
    2730:	mov	r3, r9
    2734:	mov	r0, r1
    2738:	bl	0 <read_bytes>
    273c:	mov	r3, r0
    2740:	cmp	r3, #0
    2744:	bge	2750 <read_VDR+0x1a8>
    2748:	mvn	r3, #0
    274c:	b	30d0 <read_VDR+0xb28>
    2750:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2754:	ldr	r1, [r3, #52]	; 0x34
    2758:	sub	r3, fp, #460	; 0x1cc
    275c:	ldrd	r2, [r3]
    2760:	adds	r0, r2, #24
    2764:	str	r0, [fp, #-468]	; 0xfffffe2c
    2768:	adc	r3, r3, #0
    276c:	str	r3, [fp, #-464]	; 0xfffffe30
    2770:	sub	r3, fp, #68	; 0x44
    2774:	str	r3, [sp, #8]
    2778:	mov	r2, #4
    277c:	mov	r3, #0
    2780:	strd	r2, [sp]
    2784:	sub	r3, fp, #468	; 0x1d4
    2788:	ldrd	r2, [r3]
    278c:	mov	r0, r1
    2790:	bl	0 <read_bytes>
    2794:	mov	r3, r0
    2798:	cmp	r3, #0
    279c:	bge	27a8 <read_VDR+0x200>
    27a0:	mvn	r3, #0
    27a4:	b	30d0 <read_VDR+0xb28>
    27a8:	ldr	r3, [fp, #-448]	; 0xfffffe40
    27ac:	ldr	r1, [r3, #52]	; 0x34
    27b0:	sub	r3, fp, #460	; 0x1cc
    27b4:	ldrd	r2, [r3]
    27b8:	adds	r0, r2, #28
    27bc:	str	r0, [fp, #-476]	; 0xfffffe24
    27c0:	adc	r3, r3, #0
    27c4:	str	r3, [fp, #-472]	; 0xfffffe28
    27c8:	sub	r3, fp, #76	; 0x4c
    27cc:	str	r3, [sp, #8]
    27d0:	mov	r2, #8
    27d4:	mov	r3, #0
    27d8:	strd	r2, [sp]
    27dc:	sub	r3, fp, #476	; 0x1dc
    27e0:	ldrd	r2, [r3]
    27e4:	mov	r0, r1
    27e8:	bl	0 <read_bytes>
    27ec:	mov	r3, r0
    27f0:	cmp	r3, #0
    27f4:	bge	2800 <read_VDR+0x258>
    27f8:	mvn	r3, #0
    27fc:	b	30d0 <read_VDR+0xb28>
    2800:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2804:	ldr	r1, [r3, #52]	; 0x34
    2808:	sub	r3, fp, #460	; 0x1cc
    280c:	ldrd	r2, [r3]
    2810:	adds	r0, r2, #36	; 0x24
    2814:	str	r0, [fp, #-484]	; 0xfffffe1c
    2818:	adc	r3, r3, #0
    281c:	str	r3, [fp, #-480]	; 0xfffffe20
    2820:	sub	r3, fp, #84	; 0x54
    2824:	str	r3, [sp, #8]
    2828:	mov	r2, #8
    282c:	mov	r3, #0
    2830:	strd	r2, [sp]
    2834:	sub	r3, fp, #484	; 0x1e4
    2838:	ldrd	r2, [r3]
    283c:	mov	r0, r1
    2840:	bl	0 <read_bytes>
    2844:	mov	r3, r0
    2848:	cmp	r3, #0
    284c:	bge	2858 <read_VDR+0x2b0>
    2850:	mvn	r3, #0
    2854:	b	30d0 <read_VDR+0xb28>
    2858:	ldr	r3, [fp, #-448]	; 0xfffffe40
    285c:	ldr	r1, [r3, #52]	; 0x34
    2860:	sub	r3, fp, #460	; 0x1cc
    2864:	ldrd	r2, [r3]
    2868:	adds	r0, r2, #44	; 0x2c
    286c:	str	r0, [fp, #-492]	; 0xfffffe14
    2870:	adc	r3, r3, #0
    2874:	str	r3, [fp, #-488]	; 0xfffffe18
    2878:	sub	r3, fp, #88	; 0x58
    287c:	str	r3, [sp, #8]
    2880:	mov	r2, #4
    2884:	mov	r3, #0
    2888:	strd	r2, [sp]
    288c:	sub	r3, fp, #492	; 0x1ec
    2890:	ldrd	r2, [r3]
    2894:	mov	r0, r1
    2898:	bl	0 <read_bytes>
    289c:	mov	r3, r0
    28a0:	cmp	r3, #0
    28a4:	bge	28b0 <read_VDR+0x308>
    28a8:	mvn	r3, #0
    28ac:	b	30d0 <read_VDR+0xb28>
    28b0:	ldr	r3, [fp, #-448]	; 0xfffffe40
    28b4:	ldr	r1, [r3, #52]	; 0x34
    28b8:	sub	r3, fp, #460	; 0x1cc
    28bc:	ldrd	r2, [r3]
    28c0:	adds	r0, r2, #48	; 0x30
    28c4:	str	r0, [fp, #-500]	; 0xfffffe0c
    28c8:	adc	r3, r3, #0
    28cc:	str	r3, [fp, #-496]	; 0xfffffe10
    28d0:	sub	r3, fp, #92	; 0x5c
    28d4:	str	r3, [sp, #8]
    28d8:	mov	r2, #4
    28dc:	mov	r3, #0
    28e0:	strd	r2, [sp]
    28e4:	sub	r3, fp, #500	; 0x1f4
    28e8:	ldrd	r2, [r3]
    28ec:	mov	r0, r1
    28f0:	bl	0 <read_bytes>
    28f4:	mov	r3, r0
    28f8:	cmp	r3, #0
    28fc:	bge	2908 <read_VDR+0x360>
    2900:	mvn	r3, #0
    2904:	b	30d0 <read_VDR+0xb28>
    2908:	ldr	r3, [fp, #-448]	; 0xfffffe40
    290c:	ldr	r1, [r3, #52]	; 0x34
    2910:	sub	r3, fp, #460	; 0x1cc
    2914:	ldrd	r2, [r3]
    2918:	adds	r0, r2, #64	; 0x40
    291c:	str	r0, [fp, #-508]	; 0xfffffe04
    2920:	adc	r3, r3, #0
    2924:	str	r3, [fp, #-504]	; 0xfffffe08
    2928:	sub	r3, fp, #96	; 0x60
    292c:	str	r3, [sp, #8]
    2930:	mov	r2, #4
    2934:	mov	r3, #0
    2938:	strd	r2, [sp]
    293c:	sub	r3, fp, #508	; 0x1fc
    2940:	ldrd	r2, [r3]
    2944:	mov	r0, r1
    2948:	bl	0 <read_bytes>
    294c:	mov	r3, r0
    2950:	cmp	r3, #0
    2954:	bge	2960 <read_VDR+0x3b8>
    2958:	mvn	r3, #0
    295c:	b	30d0 <read_VDR+0xb28>
    2960:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2964:	ldr	r1, [r3, #52]	; 0x34
    2968:	sub	r3, fp, #460	; 0x1cc
    296c:	ldrd	r2, [r3]
    2970:	adds	r0, r2, #68	; 0x44
    2974:	str	r0, [fp, #-516]	; 0xfffffdfc
    2978:	adc	r3, r3, #0
    297c:	str	r3, [fp, #-512]	; 0xfffffe00
    2980:	sub	r3, fp, #100	; 0x64
    2984:	str	r3, [sp, #8]
    2988:	mov	r2, #4
    298c:	mov	r3, #0
    2990:	strd	r2, [sp]
    2994:	sub	r3, fp, #516	; 0x204
    2998:	ldrd	r2, [r3]
    299c:	mov	r0, r1
    29a0:	bl	0 <read_bytes>
    29a4:	mov	r3, r0
    29a8:	cmp	r3, #0
    29ac:	bge	29b8 <read_VDR+0x410>
    29b0:	mvn	r3, #0
    29b4:	b	30d0 <read_VDR+0xb28>
    29b8:	ldr	r3, [fp, #-448]	; 0xfffffe40
    29bc:	ldr	r1, [r3, #52]	; 0x34
    29c0:	sub	r3, fp, #460	; 0x1cc
    29c4:	ldrd	r2, [r3]
    29c8:	adds	r0, r2, #72	; 0x48
    29cc:	str	r0, [fp, #-524]	; 0xfffffdf4
    29d0:	adc	r3, r3, #0
    29d4:	str	r3, [fp, #-520]	; 0xfffffdf8
    29d8:	sub	r3, fp, #108	; 0x6c
    29dc:	str	r3, [sp, #8]
    29e0:	mov	r2, #8
    29e4:	mov	r3, #0
    29e8:	strd	r2, [sp]
    29ec:	sub	r3, fp, #524	; 0x20c
    29f0:	ldrd	r2, [r3]
    29f4:	mov	r0, r1
    29f8:	bl	0 <read_bytes>
    29fc:	mov	r3, r0
    2a00:	cmp	r3, #0
    2a04:	bge	2a10 <read_VDR+0x468>
    2a08:	mvn	r3, #0
    2a0c:	b	30d0 <read_VDR+0xb28>
    2a10:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2a14:	ldr	r1, [r3, #52]	; 0x34
    2a18:	sub	r3, fp, #460	; 0x1cc
    2a1c:	ldrd	r2, [r3]
    2a20:	adds	r0, r2, #80	; 0x50
    2a24:	str	r0, [fp, #-532]	; 0xfffffdec
    2a28:	adc	r3, r3, #0
    2a2c:	str	r3, [fp, #-528]	; 0xfffffdf0
    2a30:	sub	r3, fp, #112	; 0x70
    2a34:	str	r3, [sp, #8]
    2a38:	mov	r2, #4
    2a3c:	mov	r3, #0
    2a40:	strd	r2, [sp]
    2a44:	sub	r3, fp, #532	; 0x214
    2a48:	ldrd	r2, [r3]
    2a4c:	mov	r0, r1
    2a50:	bl	0 <read_bytes>
    2a54:	mov	r3, r0
    2a58:	cmp	r3, #0
    2a5c:	bge	2a68 <read_VDR+0x4c0>
    2a60:	mvn	r3, #0
    2a64:	b	30d0 <read_VDR+0xb28>
    2a68:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2a6c:	ldr	r1, [r3, #52]	; 0x34
    2a70:	sub	r3, fp, #460	; 0x1cc
    2a74:	ldrd	r2, [r3]
    2a78:	adds	r0, r2, #84	; 0x54
    2a7c:	str	r0, [fp, #-540]	; 0xfffffde4
    2a80:	adc	r3, r3, #0
    2a84:	str	r3, [fp, #-536]	; 0xfffffde8
    2a88:	sub	r3, fp, #372	; 0x174
    2a8c:	str	r3, [sp, #8]
    2a90:	mov	r2, #256	; 0x100
    2a94:	mov	r3, #0
    2a98:	strd	r2, [sp]
    2a9c:	sub	r3, fp, #540	; 0x21c
    2aa0:	ldrd	r2, [r3]
    2aa4:	mov	r0, r1
    2aa8:	bl	0 <read_bytes>
    2aac:	mov	r3, r0
    2ab0:	cmp	r3, #0
    2ab4:	bge	2ac0 <read_VDR+0x518>
    2ab8:	mvn	r3, #0
    2abc:	b	30d0 <read_VDR+0xb28>
    2ac0:	mov	r3, #0
    2ac4:	strb	r3, [fp, #-116]	; 0xffffff8c
    2ac8:	sub	r3, fp, #372	; 0x174
    2acc:	mov	r0, r3
    2ad0:	bl	5dc <rtrim>
    2ad4:	sub	r3, fp, #60	; 0x3c
    2ad8:	mov	r0, r3
    2adc:	bl	3b8 <swap8>
    2ae0:	sub	r3, fp, #64	; 0x40
    2ae4:	mov	r0, r3
    2ae8:	bl	29c <swap4>
    2aec:	sub	r3, fp, #68	; 0x44
    2af0:	mov	r0, r3
    2af4:	bl	29c <swap4>
    2af8:	sub	r3, fp, #76	; 0x4c
    2afc:	mov	r0, r3
    2b00:	bl	3b8 <swap8>
    2b04:	sub	r3, fp, #84	; 0x54
    2b08:	mov	r0, r3
    2b0c:	bl	3b8 <swap8>
    2b10:	sub	r3, fp, #88	; 0x58
    2b14:	mov	r0, r3
    2b18:	bl	29c <swap4>
    2b1c:	sub	r3, fp, #92	; 0x5c
    2b20:	mov	r0, r3
    2b24:	bl	29c <swap4>
    2b28:	sub	r3, fp, #96	; 0x60
    2b2c:	mov	r0, r3
    2b30:	bl	29c <swap4>
    2b34:	sub	r3, fp, #100	; 0x64
    2b38:	mov	r0, r3
    2b3c:	bl	29c <swap4>
    2b40:	sub	r3, fp, #108	; 0x6c
    2b44:	mov	r0, r3
    2b48:	bl	3b8 <swap8>
    2b4c:	sub	r3, fp, #112	; 0x70
    2b50:	mov	r0, r3
    2b54:	bl	29c <swap4>
    2b58:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2b5c:	cmp	r3, #32
    2b60:	bne	2b7c <read_VDR+0x5d4>
    2b64:	movw	r1, #0
    2b68:	movt	r1, #0
    2b6c:	mvn	r0, #199	; 0xc7
    2b70:	bl	0 <coda_set_error>
    2b74:	mvn	r3, #0
    2b78:	b	30d0 <read_VDR+0xb28>
    2b7c:	ldr	r3, [fp, #4]
    2b80:	cmp	r3, #0
    2b84:	beq	2d78 <read_VDR+0x7d0>
    2b88:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2b8c:	ldr	r1, [r3, #52]	; 0x34
    2b90:	sub	r3, fp, #460	; 0x1cc
    2b94:	ldrd	r2, [r3]
    2b98:	adds	r0, r2, #340	; 0x154
    2b9c:	str	r0, [fp, #-548]	; 0xfffffddc
    2ba0:	adc	r3, r3, #0
    2ba4:	str	r3, [fp, #-544]	; 0xfffffde0
    2ba8:	sub	r3, fp, #376	; 0x178
    2bac:	str	r3, [sp, #8]
    2bb0:	mov	r2, #4
    2bb4:	mov	r3, #0
    2bb8:	strd	r2, [sp]
    2bbc:	sub	r3, fp, #548	; 0x224
    2bc0:	ldrd	r2, [r3]
    2bc4:	mov	r0, r1
    2bc8:	bl	0 <read_bytes>
    2bcc:	mov	r3, r0
    2bd0:	cmp	r3, #0
    2bd4:	bge	2be0 <read_VDR+0x638>
    2bd8:	mvn	r3, #0
    2bdc:	b	30d0 <read_VDR+0xb28>
    2be0:	sub	r3, fp, #376	; 0x178
    2be4:	mov	r0, r3
    2be8:	bl	29c <swap4>
    2bec:	ldr	r3, [fp, #-376]	; 0xfffffe88
    2bf0:	cmp	r3, #0
    2bf4:	bge	2c1c <read_VDR+0x674>
    2bf8:	ldr	r3, [fp, #-376]	; 0xfffffe88
    2bfc:	sub	r2, fp, #372	; 0x174
    2c00:	movw	r1, #0
    2c04:	movt	r1, #0
    2c08:	movw	r0, #65236	; 0xfed4
    2c0c:	movt	r0, #65535	; 0xffff
    2c10:	bl	0 <coda_set_error>
    2c14:	mvn	r3, #0
    2c18:	b	30d0 <read_VDR+0xb28>
    2c1c:	ldr	r3, [fp, #-376]	; 0xfffffe88
    2c20:	cmp	r3, #8
    2c24:	ble	2c4c <read_VDR+0x6a4>
    2c28:	ldr	r3, [fp, #-376]	; 0xfffffe88
    2c2c:	sub	r2, fp, #372	; 0x174
    2c30:	movw	r1, #0
    2c34:	movt	r1, #0
    2c38:	movw	r0, #65236	; 0xfed4
    2c3c:	movt	r0, #65535	; 0xffff
    2c40:	bl	0 <coda_set_error>
    2c44:	mvn	r3, #0
    2c48:	b	30d0 <read_VDR+0xb28>
    2c4c:	sub	r3, fp, #460	; 0x1cc
    2c50:	mov	r1, r3
    2c54:	sub	r3, fp, #460	; 0x1cc
    2c58:	ldrd	r2, [r3]
    2c5c:	adds	r0, r2, #344	; 0x158
    2c60:	str	r0, [fp, #-572]	; 0xfffffdc4
    2c64:	adc	r3, r3, #0
    2c68:	str	r3, [fp, #-568]	; 0xfffffdc8
    2c6c:	sub	r3, fp, #572	; 0x23c
    2c70:	ldrd	r2, [r3]
    2c74:	strd	r2, [r1]
    2c78:	ldr	r3, [fp, #-376]	; 0xfffffe88
    2c7c:	cmp	r3, #0
    2c80:	ble	2d84 <read_VDR+0x7dc>
    2c84:	mov	r3, #0
    2c88:	str	r3, [fp, #-36]	; 0xffffffdc
    2c8c:	b	2d28 <read_VDR+0x780>
    2c90:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2c94:	ldr	ip, [r3, #52]	; 0x34
    2c98:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2c9c:	lsl	r3, r3, #2
    2ca0:	mov	r0, r3
    2ca4:	asr	r1, r0, #31
    2ca8:	sub	r3, fp, #460	; 0x1cc
    2cac:	ldrd	r2, [r3]
    2cb0:	adds	lr, r0, r2
    2cb4:	str	lr, [fp, #-556]	; 0xfffffdd4
    2cb8:	adc	r3, r1, r3
    2cbc:	str	r3, [fp, #-552]	; 0xfffffdd8
    2cc0:	sub	r2, fp, #408	; 0x198
    2cc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2cc8:	lsl	r3, r3, #2
    2ccc:	add	r3, r2, r3
    2cd0:	str	r3, [sp, #8]
    2cd4:	mov	r2, #4
    2cd8:	mov	r3, #0
    2cdc:	strd	r2, [sp]
    2ce0:	sub	r3, fp, #556	; 0x22c
    2ce4:	ldrd	r2, [r3]
    2ce8:	mov	r0, ip
    2cec:	bl	0 <read_bytes>
    2cf0:	mov	r3, r0
    2cf4:	cmp	r3, #0
    2cf8:	bge	2d04 <read_VDR+0x75c>
    2cfc:	mvn	r3, #0
    2d00:	b	30d0 <read_VDR+0xb28>
    2d04:	sub	r2, fp, #408	; 0x198
    2d08:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2d0c:	lsl	r3, r3, #2
    2d10:	add	r3, r2, r3
    2d14:	mov	r0, r3
    2d18:	bl	29c <swap4>
    2d1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2d20:	add	r3, r3, #1
    2d24:	str	r3, [fp, #-36]	; 0xffffffdc
    2d28:	ldr	r3, [fp, #-376]	; 0xfffffe88
    2d2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2d30:	cmp	r2, r3
    2d34:	blt	2c90 <read_VDR+0x6e8>
    2d38:	ldr	r3, [fp, #-376]	; 0xfffffe88
    2d3c:	lsl	r3, r3, #2
    2d40:	mov	r2, r3
    2d44:	asr	r3, r2, #31
    2d48:	sub	r1, fp, #460	; 0x1cc
    2d4c:	mov	ip, r1
    2d50:	sub	r1, fp, #460	; 0x1cc
    2d54:	ldrd	r0, [r1]
    2d58:	adds	lr, r0, r2
    2d5c:	str	lr, [fp, #-580]	; 0xfffffdbc
    2d60:	adc	r3, r1, r3
    2d64:	str	r3, [fp, #-576]	; 0xfffffdc0
    2d68:	sub	r3, fp, #580	; 0x244
    2d6c:	ldrd	r2, [r3]
    2d70:	strd	r2, [ip]
    2d74:	b	2d84 <read_VDR+0x7dc>
    2d78:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2d7c:	ldr	r3, [r3, #80]	; 0x50
    2d80:	str	r3, [fp, #-376]	; 0xfffffe88
    2d84:	ldr	r3, [fp, #-376]	; 0xfffffe88
    2d88:	cmp	r3, #0
    2d8c:	ble	2e80 <read_VDR+0x8d8>
    2d90:	mov	r3, #0
    2d94:	str	r3, [fp, #-36]	; 0xffffffdc
    2d98:	b	2e34 <read_VDR+0x88c>
    2d9c:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2da0:	ldr	ip, [r3, #52]	; 0x34
    2da4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2da8:	lsl	r3, r3, #2
    2dac:	mov	r0, r3
    2db0:	asr	r1, r0, #31
    2db4:	sub	r3, fp, #460	; 0x1cc
    2db8:	ldrd	r2, [r3]
    2dbc:	adds	lr, r0, r2
    2dc0:	str	lr, [fp, #-564]	; 0xfffffdcc
    2dc4:	adc	r3, r1, r3
    2dc8:	str	r3, [fp, #-560]	; 0xfffffdd0
    2dcc:	sub	r2, fp, #440	; 0x1b8
    2dd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2dd4:	lsl	r3, r3, #2
    2dd8:	add	r3, r2, r3
    2ddc:	str	r3, [sp, #8]
    2de0:	mov	r2, #4
    2de4:	mov	r3, #0
    2de8:	strd	r2, [sp]
    2dec:	sub	r3, fp, #564	; 0x234
    2df0:	ldrd	r2, [r3]
    2df4:	mov	r0, ip
    2df8:	bl	0 <read_bytes>
    2dfc:	mov	r3, r0
    2e00:	cmp	r3, #0
    2e04:	bge	2e10 <read_VDR+0x868>
    2e08:	mvn	r3, #0
    2e0c:	b	30d0 <read_VDR+0xb28>
    2e10:	sub	r2, fp, #440	; 0x1b8
    2e14:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2e18:	lsl	r3, r3, #2
    2e1c:	add	r3, r2, r3
    2e20:	mov	r0, r3
    2e24:	bl	29c <swap4>
    2e28:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2e2c:	add	r3, r3, #1
    2e30:	str	r3, [fp, #-36]	; 0xffffffdc
    2e34:	ldr	r3, [fp, #-376]	; 0xfffffe88
    2e38:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2e3c:	cmp	r2, r3
    2e40:	blt	2d9c <read_VDR+0x7f4>
    2e44:	ldr	r3, [fp, #-376]	; 0xfffffe88
    2e48:	lsl	r3, r3, #2
    2e4c:	mov	r2, r3
    2e50:	asr	r3, r2, #31
    2e54:	sub	r1, fp, #460	; 0x1cc
    2e58:	mov	ip, r1
    2e5c:	sub	r1, fp, #460	; 0x1cc
    2e60:	ldrd	r0, [r1]
    2e64:	adds	lr, r0, r2
    2e68:	str	lr, [fp, #-588]	; 0xfffffdb4
    2e6c:	adc	r3, r1, r3
    2e70:	str	r3, [fp, #-584]	; 0xfffffdb8
    2e74:	sub	r3, fp, #588	; 0x24c
    2e78:	ldrd	r2, [r3]
    2e7c:	strd	r2, [ip]
    2e80:	ldr	r3, [fp, #-88]	; 0xffffffa8
    2e84:	and	r3, r3, #1
    2e88:	str	r3, [fp, #-40]	; 0xffffffd8
    2e8c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    2e90:	and	r3, r3, #4
    2e94:	str	r3, [fp, #-44]	; 0xffffffd4
    2e98:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2e9c:	cmp	r3, #0
    2ea0:	bne	2ed8 <read_VDR+0x930>
    2ea4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2ea8:	cmp	r3, #0
    2eac:	beq	2ed8 <read_VDR+0x930>
    2eb0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2eb4:	add	r3, r3, #1
    2eb8:	sub	r2, fp, #372	; 0x174
    2ebc:	movw	r1, #0
    2ec0:	movt	r1, #0
    2ec4:	movw	r0, #65236	; 0xfed4
    2ec8:	movt	r0, #65535	; 0xffff
    2ecc:	bl	0 <coda_set_error>
    2ed0:	mvn	r3, #0
    2ed4:	b	30d0 <read_VDR+0xb28>
    2ed8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2edc:	cmp	r3, #0
    2ee0:	beq	2f1c <read_VDR+0x974>
    2ee4:	ldrd	r2, [fp, #-108]	; 0xffffff94
    2ee8:	mvn	r0, #0
    2eec:	mvn	r1, #0
    2ef0:	cmp	r3, r1
    2ef4:	cmpeq	r2, r0
    2ef8:	beq	2f1c <read_VDR+0x974>
    2efc:	ldrd	r2, [fp, #-108]	; 0xffffff94
    2f00:	ldr	r0, [fp, #-448]	; 0xfffffe40
    2f04:	bl	2448 <read_CPR>
    2f08:	mov	r3, r0
    2f0c:	cmp	r3, #0
    2f10:	beq	2f1c <read_VDR+0x974>
    2f14:	mvn	r3, #0
    2f18:	b	30d0 <read_VDR+0xb28>
    2f1c:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2f20:	ldr	r3, [r3, #20]
    2f24:	ldr	r2, [r3, #16]
    2f28:	ldr	r3, [fp, #-100]	; 0xffffff9c
    2f2c:	cmp	r2, r3
    2f30:	beq	2f60 <read_VDR+0x9b8>
    2f34:	ldr	r2, [fp, #-100]	; 0xffffff9c
    2f38:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2f3c:	ldr	r3, [r3, #20]
    2f40:	ldr	r3, [r3, #16]
    2f44:	movw	r1, #0
    2f48:	movt	r1, #0
    2f4c:	movw	r0, #65236	; 0xfed4
    2f50:	movt	r0, #65535	; 0xffff
    2f54:	bl	0 <coda_set_error>
    2f58:	mvn	r3, #0
    2f5c:	b	30d0 <read_VDR+0xb28>
    2f60:	ldr	r3, [fp, #4]
    2f64:	cmp	r3, #0
    2f68:	beq	2fc8 <read_VDR+0xa20>
    2f6c:	ldr	ip, [fp, #-64]	; 0xffffffc0
    2f70:	ldr	lr, [fp, #-68]	; 0xffffffbc
    2f74:	ldr	r4, [fp, #-376]	; 0xfffffe88
    2f78:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2f7c:	ldr	r3, [r3, #72]	; 0x48
    2f80:	ldr	r2, [fp, #-96]	; 0xffffffa0
    2f84:	ldr	r1, [fp, #-92]	; 0xffffffa4
    2f88:	sub	r0, fp, #48	; 0x30
    2f8c:	str	r0, [sp, #20]
    2f90:	str	r1, [sp, #16]
    2f94:	str	r2, [sp, #12]
    2f98:	str	r3, [sp, #8]
    2f9c:	sub	r3, fp, #440	; 0x1b8
    2fa0:	str	r3, [sp, #4]
    2fa4:	sub	r3, fp, #408	; 0x198
    2fa8:	str	r3, [sp]
    2fac:	mov	r3, r4
    2fb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2fb4:	mov	r1, lr
    2fb8:	mov	r0, ip
    2fbc:	bl	0 <coda_cdf_variable_new>
    2fc0:	str	r0, [fp, #-32]	; 0xffffffe0
    2fc4:	b	3024 <read_VDR+0xa7c>
    2fc8:	ldr	lr, [fp, #-64]	; 0xffffffc0
    2fcc:	ldr	r4, [fp, #-68]	; 0xffffffbc
    2fd0:	ldr	r5, [fp, #-376]	; 0xfffffe88
    2fd4:	ldr	r3, [fp, #-448]	; 0xfffffe40
    2fd8:	add	r3, r3, #84	; 0x54
    2fdc:	ldr	r2, [fp, #-448]	; 0xfffffe40
    2fe0:	ldr	r2, [r2, #72]	; 0x48
    2fe4:	ldr	r1, [fp, #-96]	; 0xffffffa0
    2fe8:	ldr	r0, [fp, #-92]	; 0xffffffa4
    2fec:	sub	ip, fp, #48	; 0x30
    2ff0:	str	ip, [sp, #20]
    2ff4:	str	r0, [sp, #16]
    2ff8:	str	r1, [sp, #12]
    2ffc:	str	r2, [sp, #8]
    3000:	sub	r2, fp, #440	; 0x1b8
    3004:	str	r2, [sp, #4]
    3008:	str	r3, [sp]
    300c:	mov	r3, r5
    3010:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3014:	mov	r1, r4
    3018:	mov	r0, lr
    301c:	bl	0 <coda_cdf_variable_new>
    3020:	str	r0, [fp, #-32]	; 0xffffffe0
    3024:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3028:	cmp	r3, #0
    302c:	bne	3038 <read_VDR+0xa90>
    3030:	mvn	r3, #0
    3034:	b	30d0 <read_VDR+0xb28>
    3038:	ldr	r3, [fp, #-448]	; 0xfffffe40
    303c:	ldr	r0, [r3, #20]
    3040:	sub	r1, fp, #372	; 0x174
    3044:	mov	r3, #1
    3048:	ldr	r2, [fp, #-32]	; 0xffffffe0
    304c:	bl	0 <coda_mem_record_add_field>
    3050:	mov	r3, r0
    3054:	cmp	r3, #0
    3058:	beq	306c <read_VDR+0xac4>
    305c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3060:	bl	0 <coda_cdf_type_delete>
    3064:	mvn	r3, #0
    3068:	b	30d0 <read_VDR+0xb28>
    306c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3070:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    3074:	mvn	r1, #0
    3078:	str	r1, [sp, #4]
    307c:	mov	r1, #0
    3080:	str	r1, [sp]
    3084:	mov	r1, r0
    3088:	ldr	r0, [fp, #-448]	; 0xfffffe40
    308c:	bl	205c <read_VXR>
    3090:	mov	r3, r0
    3094:	cmp	r3, #0
    3098:	beq	30a4 <read_VDR+0xafc>
    309c:	mvn	r3, #0
    30a0:	b	30d0 <read_VDR+0xb28>
    30a4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    30a8:	ldr	r1, [fp, #4]
    30ac:	str	r1, [sp]
    30b0:	ldr	r0, [fp, #-448]	; 0xfffffe40
    30b4:	bl	25a8 <read_VDR>
    30b8:	mov	r3, r0
    30bc:	cmp	r3, #0
    30c0:	beq	30cc <read_VDR+0xb24>
    30c4:	mvn	r3, #0
    30c8:	b	30d0 <read_VDR+0xb28>
    30cc:	mov	r3, #0
    30d0:	mov	r0, r3
    30d4:	sub	sp, fp, #28
    30d8:	ldrd	r4, [sp]
    30dc:	ldrd	r6, [sp, #8]
    30e0:	ldrd	r8, [sp, #16]
    30e4:	ldr	fp, [sp, #24]
    30e8:	add	sp, sp, #28
    30ec:	pop	{pc}		; (ldr pc, [sp], #4)

000030f0 <read_GDR>:
    30f0:	strd	r4, [sp, #-32]!	; 0xffffffe0
    30f4:	strd	r6, [sp, #8]
    30f8:	strd	r8, [sp, #16]
    30fc:	str	fp, [sp, #24]
    3100:	str	lr, [sp, #28]
    3104:	add	fp, sp, #28
    3108:	sub	sp, sp, #184	; 0xb8
    310c:	str	r0, [fp, #-136]	; 0xffffff78
    3110:	strd	r2, [fp, #-148]	; 0xffffff6c
    3114:	ldr	r3, [fp, #-136]	; 0xffffff78
    3118:	ldr	r1, [r3, #52]	; 0x34
    311c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    3120:	adds	r4, r2, #8
    3124:	adc	r5, r3, #0
    3128:	sub	r3, fp, #32
    312c:	str	r3, [sp, #8]
    3130:	mov	r2, #4
    3134:	mov	r3, #0
    3138:	strd	r2, [sp]
    313c:	mov	r2, r4
    3140:	mov	r3, r5
    3144:	mov	r0, r1
    3148:	bl	0 <read_bytes>
    314c:	mov	r3, r0
    3150:	cmp	r3, #0
    3154:	bge	3160 <read_GDR+0x70>
    3158:	mvn	r3, #0
    315c:	b	3568 <read_GDR+0x478>
    3160:	sub	r3, fp, #32
    3164:	mov	r0, r3
    3168:	bl	29c <swap4>
    316c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3170:	cmp	r3, #2
    3174:	beq	319c <read_GDR+0xac>
    3178:	ldr	r3, [fp, #-32]	; 0xffffffe0
    317c:	mov	r2, r3
    3180:	movw	r1, #0
    3184:	movt	r1, #0
    3188:	movw	r0, #65236	; 0xfed4
    318c:	movt	r0, #65535	; 0xffff
    3190:	bl	0 <coda_set_error>
    3194:	mvn	r3, #0
    3198:	b	3568 <read_GDR+0x478>
    319c:	ldr	r3, [fp, #-136]	; 0xffffff78
    31a0:	ldr	r1, [r3, #52]	; 0x34
    31a4:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    31a8:	adds	r6, r2, #12
    31ac:	adc	r7, r3, #0
    31b0:	sub	r3, fp, #44	; 0x2c
    31b4:	str	r3, [sp, #8]
    31b8:	mov	r2, #8
    31bc:	mov	r3, #0
    31c0:	strd	r2, [sp]
    31c4:	mov	r2, r6
    31c8:	mov	r3, r7
    31cc:	mov	r0, r1
    31d0:	bl	0 <read_bytes>
    31d4:	mov	r3, r0
    31d8:	cmp	r3, #0
    31dc:	bge	31e8 <read_GDR+0xf8>
    31e0:	mvn	r3, #0
    31e4:	b	3568 <read_GDR+0x478>
    31e8:	ldr	r3, [fp, #-136]	; 0xffffff78
    31ec:	ldr	r1, [r3, #52]	; 0x34
    31f0:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    31f4:	adds	r8, r2, #20
    31f8:	adc	r9, r3, #0
    31fc:	sub	r3, fp, #52	; 0x34
    3200:	str	r3, [sp, #8]
    3204:	mov	r2, #8
    3208:	mov	r3, #0
    320c:	strd	r2, [sp]
    3210:	mov	r2, r8
    3214:	mov	r3, r9
    3218:	mov	r0, r1
    321c:	bl	0 <read_bytes>
    3220:	mov	r3, r0
    3224:	cmp	r3, #0
    3228:	bge	3234 <read_GDR+0x144>
    322c:	mvn	r3, #0
    3230:	b	3568 <read_GDR+0x478>
    3234:	ldr	r3, [fp, #-136]	; 0xffffff78
    3238:	ldr	r1, [r3, #52]	; 0x34
    323c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    3240:	adds	r0, r2, #28
    3244:	str	r0, [fp, #-156]	; 0xffffff64
    3248:	adc	r3, r3, #0
    324c:	str	r3, [fp, #-152]	; 0xffffff68
    3250:	sub	r3, fp, #60	; 0x3c
    3254:	str	r3, [sp, #8]
    3258:	mov	r2, #8
    325c:	mov	r3, #0
    3260:	strd	r2, [sp]
    3264:	ldrd	r2, [fp, #-156]	; 0xffffff64
    3268:	mov	r0, r1
    326c:	bl	0 <read_bytes>
    3270:	mov	r3, r0
    3274:	cmp	r3, #0
    3278:	bge	3284 <read_GDR+0x194>
    327c:	mvn	r3, #0
    3280:	b	3568 <read_GDR+0x478>
    3284:	ldr	r3, [fp, #-136]	; 0xffffff78
    3288:	ldr	r1, [r3, #52]	; 0x34
    328c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    3290:	adds	r0, r2, #36	; 0x24
    3294:	str	r0, [fp, #-164]	; 0xffffff5c
    3298:	adc	r3, r3, #0
    329c:	str	r3, [fp, #-160]	; 0xffffff60
    32a0:	sub	r3, fp, #68	; 0x44
    32a4:	str	r3, [sp, #8]
    32a8:	mov	r2, #8
    32ac:	mov	r3, #0
    32b0:	strd	r2, [sp]
    32b4:	ldrd	r2, [fp, #-164]	; 0xffffff5c
    32b8:	mov	r0, r1
    32bc:	bl	0 <read_bytes>
    32c0:	mov	r3, r0
    32c4:	cmp	r3, #0
    32c8:	bge	32d4 <read_GDR+0x1e4>
    32cc:	mvn	r3, #0
    32d0:	b	3568 <read_GDR+0x478>
    32d4:	ldr	r3, [fp, #-136]	; 0xffffff78
    32d8:	ldr	r1, [r3, #52]	; 0x34
    32dc:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    32e0:	adds	r0, r2, #44	; 0x2c
    32e4:	str	r0, [fp, #-172]	; 0xffffff54
    32e8:	adc	r3, r3, #0
    32ec:	str	r3, [fp, #-168]	; 0xffffff58
    32f0:	sub	r3, fp, #72	; 0x48
    32f4:	str	r3, [sp, #8]
    32f8:	mov	r2, #4
    32fc:	mov	r3, #0
    3300:	strd	r2, [sp]
    3304:	ldrd	r2, [fp, #-172]	; 0xffffff54
    3308:	mov	r0, r1
    330c:	bl	0 <read_bytes>
    3310:	mov	r3, r0
    3314:	cmp	r3, #0
    3318:	bge	3324 <read_GDR+0x234>
    331c:	mvn	r3, #0
    3320:	b	3568 <read_GDR+0x478>
    3324:	ldr	r3, [fp, #-136]	; 0xffffff78
    3328:	ldr	r1, [r3, #52]	; 0x34
    332c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    3330:	adds	r0, r2, #48	; 0x30
    3334:	str	r0, [fp, #-180]	; 0xffffff4c
    3338:	adc	r3, r3, #0
    333c:	str	r3, [fp, #-176]	; 0xffffff50
    3340:	sub	r3, fp, #76	; 0x4c
    3344:	str	r3, [sp, #8]
    3348:	mov	r2, #4
    334c:	mov	r3, #0
    3350:	strd	r2, [sp]
    3354:	ldrd	r2, [fp, #-180]	; 0xffffff4c
    3358:	mov	r0, r1
    335c:	bl	0 <read_bytes>
    3360:	mov	r3, r0
    3364:	cmp	r3, #0
    3368:	bge	3374 <read_GDR+0x284>
    336c:	mvn	r3, #0
    3370:	b	3568 <read_GDR+0x478>
    3374:	ldr	r3, [fp, #-136]	; 0xffffff78
    3378:	ldr	r1, [r3, #52]	; 0x34
    337c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    3380:	adds	r0, r2, #56	; 0x38
    3384:	str	r0, [fp, #-188]	; 0xffffff44
    3388:	adc	r3, r3, #0
    338c:	str	r3, [fp, #-184]	; 0xffffff48
    3390:	ldr	r3, [fp, #-136]	; 0xffffff78
    3394:	add	r3, r3, #80	; 0x50
    3398:	str	r3, [sp, #8]
    339c:	mov	r2, #4
    33a0:	mov	r3, #0
    33a4:	strd	r2, [sp]
    33a8:	ldrd	r2, [fp, #-188]	; 0xffffff44
    33ac:	mov	r0, r1
    33b0:	bl	0 <read_bytes>
    33b4:	mov	r3, r0
    33b8:	cmp	r3, #0
    33bc:	bge	33c8 <read_GDR+0x2d8>
    33c0:	mvn	r3, #0
    33c4:	b	3568 <read_GDR+0x478>
    33c8:	ldr	r3, [fp, #-136]	; 0xffffff78
    33cc:	ldr	r1, [r3, #52]	; 0x34
    33d0:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    33d4:	adds	r0, r2, #60	; 0x3c
    33d8:	str	r0, [fp, #-196]	; 0xffffff3c
    33dc:	adc	r3, r3, #0
    33e0:	str	r3, [fp, #-192]	; 0xffffff40
    33e4:	sub	r3, fp, #80	; 0x50
    33e8:	str	r3, [sp, #8]
    33ec:	mov	r2, #4
    33f0:	mov	r3, #0
    33f4:	strd	r2, [sp]
    33f8:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    33fc:	mov	r0, r1
    3400:	bl	0 <read_bytes>
    3404:	mov	r3, r0
    3408:	cmp	r3, #0
    340c:	bge	3418 <read_GDR+0x328>
    3410:	mvn	r3, #0
    3414:	b	3568 <read_GDR+0x478>
    3418:	sub	r3, fp, #44	; 0x2c
    341c:	mov	r0, r3
    3420:	bl	3b8 <swap8>
    3424:	sub	r3, fp, #52	; 0x34
    3428:	mov	r0, r3
    342c:	bl	3b8 <swap8>
    3430:	sub	r3, fp, #60	; 0x3c
    3434:	mov	r0, r3
    3438:	bl	3b8 <swap8>
    343c:	sub	r3, fp, #68	; 0x44
    3440:	mov	r0, r3
    3444:	bl	3b8 <swap8>
    3448:	sub	r3, fp, #72	; 0x48
    344c:	mov	r0, r3
    3450:	bl	29c <swap4>
    3454:	sub	r3, fp, #76	; 0x4c
    3458:	mov	r0, r3
    345c:	bl	29c <swap4>
    3460:	ldr	r3, [fp, #-136]	; 0xffffff78
    3464:	add	r3, r3, #80	; 0x50
    3468:	mov	r0, r3
    346c:	bl	29c <swap4>
    3470:	sub	r3, fp, #80	; 0x50
    3474:	mov	r0, r3
    3478:	bl	29c <swap4>
    347c:	ldr	r3, [fp, #-136]	; 0xffffff78
    3480:	ldrd	r0, [r3, #8]
    3484:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    3488:	cmp	r1, r3
    348c:	cmpeq	r0, r2
    3490:	beq	34dc <read_GDR+0x3ec>
    3494:	ldrd	r0, [fp, #-68]	; 0xffffffbc
    3498:	sub	r3, fp, #104	; 0x68
    349c:	mov	r2, r3
    34a0:	bl	0 <coda_str64>
    34a4:	ldr	r3, [fp, #-136]	; 0xffffff78
    34a8:	ldrd	r0, [r3, #8]
    34ac:	sub	r3, fp, #128	; 0x80
    34b0:	mov	r2, r3
    34b4:	bl	0 <coda_str64>
    34b8:	sub	r3, fp, #128	; 0x80
    34bc:	sub	r2, fp, #104	; 0x68
    34c0:	movw	r1, #0
    34c4:	movt	r1, #0
    34c8:	movw	r0, #65236	; 0xfed4
    34cc:	movt	r0, #65535	; 0xffff
    34d0:	bl	0 <coda_set_error>
    34d4:	mvn	r3, #0
    34d8:	b	3568 <read_GDR+0x478>
    34dc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    34e0:	orrs	r3, r2, r3
    34e4:	beq	3510 <read_GDR+0x420>
    34e8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    34ec:	mov	r1, #0
    34f0:	str	r1, [sp]
    34f4:	ldr	r0, [fp, #-136]	; 0xffffff78
    34f8:	bl	25a8 <read_VDR>
    34fc:	mov	r3, r0
    3500:	cmp	r3, #0
    3504:	beq	3510 <read_GDR+0x420>
    3508:	mvn	r3, #0
    350c:	b	3568 <read_GDR+0x478>
    3510:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    3514:	orrs	r3, r2, r3
    3518:	beq	3544 <read_GDR+0x454>
    351c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    3520:	mov	r1, #1
    3524:	str	r1, [sp]
    3528:	ldr	r0, [fp, #-136]	; 0xffffff78
    352c:	bl	25a8 <read_VDR>
    3530:	mov	r3, r0
    3534:	cmp	r3, #0
    3538:	beq	3544 <read_GDR+0x454>
    353c:	mvn	r3, #0
    3540:	b	3568 <read_GDR+0x478>
    3544:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    3548:	ldr	r0, [fp, #-136]	; 0xffffff78
    354c:	bl	1414 <read_ADR>
    3550:	mov	r3, r0
    3554:	cmp	r3, #0
    3558:	beq	3564 <read_GDR+0x474>
    355c:	mvn	r3, #0
    3560:	b	3568 <read_GDR+0x478>
    3564:	mov	r3, #0
    3568:	mov	r0, r3
    356c:	sub	sp, fp, #28
    3570:	ldrd	r4, [sp]
    3574:	ldrd	r6, [sp, #8]
    3578:	ldrd	r8, [sp, #16]
    357c:	ldr	fp, [sp, #24]
    3580:	add	sp, sp, #28
    3584:	pop	{pc}		; (ldr pc, [sp], #4)

00003588 <read_file>:
    3588:	str	fp, [sp, #-8]!
    358c:	str	lr, [sp, #4]
    3590:	add	fp, sp, #4
    3594:	sub	sp, sp, #48	; 0x30
    3598:	str	r0, [fp, #-32]	; 0xffffffe0
    359c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    35a0:	ldr	r1, [r3, #52]	; 0x34
    35a4:	sub	r3, fp, #8
    35a8:	str	r3, [sp, #8]
    35ac:	mov	r2, #4
    35b0:	mov	r3, #0
    35b4:	strd	r2, [sp]
    35b8:	mov	r2, #16
    35bc:	mov	r3, #0
    35c0:	mov	r0, r1
    35c4:	bl	0 <read_bytes>
    35c8:	mov	r3, r0
    35cc:	cmp	r3, #0
    35d0:	bge	35dc <read_file+0x54>
    35d4:	mvn	r3, #0
    35d8:	b	3950 <read_file+0x3c8>
    35dc:	sub	r3, fp, #8
    35e0:	mov	r0, r3
    35e4:	bl	29c <swap4>
    35e8:	ldr	r3, [fp, #-8]
    35ec:	cmp	r3, #1
    35f0:	beq	3618 <read_file+0x90>
    35f4:	ldr	r3, [fp, #-8]
    35f8:	mov	r2, r3
    35fc:	movw	r1, #0
    3600:	movt	r1, #0
    3604:	movw	r0, #65236	; 0xfed4
    3608:	movt	r0, #65535	; 0xffff
    360c:	bl	0 <coda_set_error>
    3610:	mvn	r3, #0
    3614:	b	3950 <read_file+0x3c8>
    3618:	ldr	r3, [fp, #-32]	; 0xffffffe0
    361c:	ldr	r1, [r3, #52]	; 0x34
    3620:	sub	r3, fp, #20
    3624:	str	r3, [sp, #8]
    3628:	mov	r2, #8
    362c:	mov	r3, #0
    3630:	strd	r2, [sp]
    3634:	mov	r2, #20
    3638:	mov	r3, #0
    363c:	mov	r0, r1
    3640:	bl	0 <read_bytes>
    3644:	mov	r3, r0
    3648:	cmp	r3, #0
    364c:	bge	3658 <read_file+0xd0>
    3650:	mvn	r3, #0
    3654:	b	3950 <read_file+0x3c8>
    3658:	ldr	r3, [fp, #-32]	; 0xffffffe0
    365c:	ldr	r1, [r3, #52]	; 0x34
    3660:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3664:	add	r3, r3, #56	; 0x38
    3668:	str	r3, [sp, #8]
    366c:	mov	r2, #4
    3670:	mov	r3, #0
    3674:	strd	r2, [sp]
    3678:	mov	r2, #28
    367c:	mov	r3, #0
    3680:	mov	r0, r1
    3684:	bl	0 <read_bytes>
    3688:	mov	r3, r0
    368c:	cmp	r3, #0
    3690:	bge	369c <read_file+0x114>
    3694:	mvn	r3, #0
    3698:	b	3950 <read_file+0x3c8>
    369c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    36a0:	ldr	r1, [r3, #52]	; 0x34
    36a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    36a8:	add	r3, r3, #60	; 0x3c
    36ac:	str	r3, [sp, #8]
    36b0:	mov	r2, #4
    36b4:	mov	r3, #0
    36b8:	strd	r2, [sp]
    36bc:	mov	r2, #32
    36c0:	mov	r3, #0
    36c4:	mov	r0, r1
    36c8:	bl	0 <read_bytes>
    36cc:	mov	r3, r0
    36d0:	cmp	r3, #0
    36d4:	bge	36e0 <read_file+0x158>
    36d8:	mvn	r3, #0
    36dc:	b	3950 <read_file+0x3c8>
    36e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    36e4:	ldr	r1, [r3, #52]	; 0x34
    36e8:	sub	r3, fp, #24
    36ec:	str	r3, [sp, #8]
    36f0:	mov	r2, #4
    36f4:	mov	r3, #0
    36f8:	strd	r2, [sp]
    36fc:	mov	r2, #36	; 0x24
    3700:	mov	r3, #0
    3704:	mov	r0, r1
    3708:	bl	0 <read_bytes>
    370c:	mov	r3, r0
    3710:	cmp	r3, #0
    3714:	bge	3720 <read_file+0x198>
    3718:	mvn	r3, #0
    371c:	b	3950 <read_file+0x3c8>
    3720:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3724:	ldr	r1, [r3, #52]	; 0x34
    3728:	sub	r3, fp, #28
    372c:	str	r3, [sp, #8]
    3730:	mov	r2, #4
    3734:	mov	r3, #0
    3738:	strd	r2, [sp]
    373c:	mov	r2, #40	; 0x28
    3740:	mov	r3, #0
    3744:	mov	r0, r1
    3748:	bl	0 <read_bytes>
    374c:	mov	r3, r0
    3750:	cmp	r3, #0
    3754:	bge	3760 <read_file+0x1d8>
    3758:	mvn	r3, #0
    375c:	b	3950 <read_file+0x3c8>
    3760:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3764:	ldr	r1, [r3, #52]	; 0x34
    3768:	ldr	r3, [fp, #-32]	; 0xffffffe0
    376c:	add	r3, r3, #64	; 0x40
    3770:	str	r3, [sp, #8]
    3774:	mov	r2, #4
    3778:	mov	r3, #0
    377c:	strd	r2, [sp]
    3780:	mov	r2, #52	; 0x34
    3784:	mov	r3, #0
    3788:	mov	r0, r1
    378c:	bl	0 <read_bytes>
    3790:	mov	r3, r0
    3794:	cmp	r3, #0
    3798:	bge	37a4 <read_file+0x21c>
    379c:	mvn	r3, #0
    37a0:	b	3950 <read_file+0x3c8>
    37a4:	sub	r3, fp, #20
    37a8:	mov	r0, r3
    37ac:	bl	3b8 <swap8>
    37b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    37b4:	add	r3, r3, #56	; 0x38
    37b8:	mov	r0, r3
    37bc:	bl	29c <swap4>
    37c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    37c4:	add	r3, r3, #60	; 0x3c
    37c8:	mov	r0, r3
    37cc:	bl	29c <swap4>
    37d0:	sub	r3, fp, #24
    37d4:	mov	r0, r3
    37d8:	bl	29c <swap4>
    37dc:	sub	r3, fp, #28
    37e0:	mov	r0, r3
    37e4:	bl	29c <swap4>
    37e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    37ec:	add	r3, r3, #64	; 0x40
    37f0:	mov	r0, r3
    37f4:	bl	29c <swap4>
    37f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    37fc:	sub	r3, r3, #1
    3800:	cmp	r3, #15
    3804:	ldrls	pc, [pc, r3, lsl #2]
    3808:	b	3884 <read_file+0x2fc>
    380c:	.word	0x0000384c
    3810:	.word	0x0000384c
    3814:	.word	0x0000386c
    3818:	.word	0x0000385c
    381c:	.word	0x0000384c
    3820:	.word	0x0000385c
    3824:	.word	0x0000384c
    3828:	.word	0x00003884
    382c:	.word	0x0000384c
    3830:	.word	0x00003884
    3834:	.word	0x0000384c
    3838:	.word	0x0000384c
    383c:	.word	0x0000385c
    3840:	.word	0x0000386c
    3844:	.word	0x0000386c
    3848:	.word	0x0000385c
    384c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3850:	mov	r2, #0
    3854:	str	r2, [r3, #68]	; 0x44
    3858:	b	38a4 <read_file+0x31c>
    385c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3860:	mov	r2, #1
    3864:	str	r2, [r3, #68]	; 0x44
    3868:	b	38a4 <read_file+0x31c>
    386c:	movw	r1, #0
    3870:	movt	r1, #0
    3874:	mvn	r0, #199	; 0xc7
    3878:	bl	0 <coda_set_error>
    387c:	mvn	r3, #0
    3880:	b	3950 <read_file+0x3c8>
    3884:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3888:	mov	r2, r3
    388c:	movw	r1, #0
    3890:	movt	r1, #0
    3894:	mvn	r0, #199	; 0xc7
    3898:	bl	0 <coda_set_error>
    389c:	mvn	r3, #0
    38a0:	b	3950 <read_file+0x3c8>
    38a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    38a8:	and	r3, r3, #1
    38ac:	cmp	r3, #0
    38b0:	beq	38c4 <read_file+0x33c>
    38b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    38b8:	mov	r2, #0
    38bc:	str	r2, [r3, #72]	; 0x48
    38c0:	b	38d0 <read_file+0x348>
    38c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    38c8:	mov	r2, #1
    38cc:	str	r2, [r3, #72]	; 0x48
    38d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    38d4:	and	r3, r3, #2
    38d8:	cmp	r3, #0
    38dc:	bne	38f8 <read_file+0x370>
    38e0:	movw	r1, #0
    38e4:	movt	r1, #0
    38e8:	mvn	r0, #199	; 0xc7
    38ec:	bl	0 <coda_set_error>
    38f0:	mvn	r3, #0
    38f4:	b	3950 <read_file+0x3c8>
    38f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    38fc:	and	r3, r3, #4
    3900:	cmp	r3, #0
    3904:	beq	3920 <read_file+0x398>
    3908:	ldr	r3, [fp, #-28]	; 0xffffffe4
    390c:	and	r3, r3, #8
    3910:	cmp	r3, #0
    3914:	beq	3920 <read_file+0x398>
    3918:	mov	r2, #1
    391c:	b	3924 <read_file+0x39c>
    3920:	mov	r2, #0
    3924:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3928:	str	r2, [r3, #76]	; 0x4c
    392c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3930:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3934:	bl	30f0 <read_GDR>
    3938:	mov	r3, r0
    393c:	cmp	r3, #0
    3940:	beq	394c <read_file+0x3c4>
    3944:	mvn	r3, #0
    3948:	b	3950 <read_file+0x3c8>
    394c:	mov	r3, #0
    3950:	mov	r0, r3
    3954:	sub	sp, fp, #4
    3958:	ldr	fp, [sp]
    395c:	add	sp, sp, #4
    3960:	pop	{pc}		; (ldr pc, [sp], #4)

00003964 <coda_cdf_reopen>:
    3964:	str	fp, [sp, #-8]!
    3968:	str	lr, [sp, #4]
    396c:	add	fp, sp, #4
    3970:	sub	sp, sp, #40	; 0x28
    3974:	str	r0, [fp, #-24]	; 0xffffffe8
    3978:	mov	r0, #120	; 0x78
    397c:	bl	0 <malloc>
    3980:	mov	r3, r0
    3984:	str	r3, [fp, #-8]
    3988:	ldr	r3, [fp, #-8]
    398c:	cmp	r3, #0
    3990:	bne	39d0 <coda_cdf_reopen+0x6c>
    3994:	movw	r3, #1315	; 0x523
    3998:	str	r3, [sp]
    399c:	movw	r3, #0
    39a0:	movt	r3, #0
    39a4:	mov	r2, #120	; 0x78
    39a8:	movw	r1, #0
    39ac:	movt	r1, #0
    39b0:	mvn	r0, #0
    39b4:	bl	0 <coda_set_error>
    39b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    39bc:	ldr	r3, [r3]
    39c0:	mov	r0, r3
    39c4:	bl	0 <coda_close>
    39c8:	mvn	r3, #0
    39cc:	b	3c7c <coda_cdf_reopen+0x318>
    39d0:	ldr	r3, [fp, #-8]
    39d4:	mov	r2, #0
    39d8:	str	r2, [r3]
    39dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    39e0:	ldr	r3, [r3]
    39e4:	ldrd	r2, [r3, #8]
    39e8:	ldr	r1, [fp, #-8]
    39ec:	strd	r2, [r1, #8]
    39f0:	ldr	r3, [fp, #-8]
    39f4:	mov	r2, #5
    39f8:	str	r2, [r3, #16]
    39fc:	ldr	r3, [fp, #-8]
    3a00:	mov	r2, #0
    3a04:	str	r2, [r3, #20]
    3a08:	ldr	r3, [fp, #-8]
    3a0c:	mov	r2, #0
    3a10:	str	r2, [r3, #24]
    3a14:	ldr	r3, [fp, #-8]
    3a18:	mov	r2, #0
    3a1c:	str	r2, [r3, #28]
    3a20:	ldr	r3, [fp, #-8]
    3a24:	mov	r2, #0
    3a28:	str	r2, [r3, #32]
    3a2c:	ldr	r1, [fp, #-8]
    3a30:	mov	r2, #0
    3a34:	mov	r3, #0
    3a38:	strd	r2, [r1, #40]	; 0x28
    3a3c:	ldr	r3, [fp, #-8]
    3a40:	mov	r2, #0
    3a44:	str	r2, [r3, #48]	; 0x30
    3a48:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a4c:	ldr	r2, [r3]
    3a50:	ldr	r3, [fp, #-8]
    3a54:	str	r2, [r3, #52]	; 0x34
    3a58:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a5c:	ldr	r3, [r3]
    3a60:	ldr	r3, [r3]
    3a64:	mov	r0, r3
    3a68:	bl	0 <strdup>
    3a6c:	mov	r3, r0
    3a70:	mov	r2, r3
    3a74:	ldr	r3, [fp, #-8]
    3a78:	str	r2, [r3]
    3a7c:	ldr	r3, [fp, #-8]
    3a80:	ldr	r3, [r3]
    3a84:	cmp	r3, #0
    3a88:	bne	3ab8 <coda_cdf_reopen+0x154>
    3a8c:	movw	r3, #1335	; 0x537
    3a90:	movw	r2, #0
    3a94:	movt	r2, #0
    3a98:	movw	r1, #0
    3a9c:	movt	r1, #0
    3aa0:	mvn	r0, #0
    3aa4:	bl	0 <coda_set_error>
    3aa8:	ldr	r0, [fp, #-8]
    3aac:	bl	3c90 <coda_cdf_close>
    3ab0:	mvn	r3, #0
    3ab4:	b	3c7c <coda_cdf_reopen+0x318>
    3ab8:	ldr	r3, [fp, #-8]
    3abc:	ldr	r1, [r3, #52]	; 0x34
    3ac0:	sub	r3, fp, #20
    3ac4:	str	r3, [sp, #8]
    3ac8:	mov	r2, #8
    3acc:	mov	r3, #0
    3ad0:	strd	r2, [sp]
    3ad4:	mov	r2, #0
    3ad8:	mov	r3, #0
    3adc:	mov	r0, r1
    3ae0:	bl	0 <read_bytes>
    3ae4:	mov	r3, r0
    3ae8:	cmp	r3, #0
    3aec:	bge	3b00 <coda_cdf_reopen+0x19c>
    3af0:	ldr	r0, [fp, #-8]
    3af4:	bl	3c90 <coda_cdf_close>
    3af8:	mvn	r3, #0
    3afc:	b	3c7c <coda_cdf_reopen+0x318>
    3b00:	sub	r3, fp, #20
    3b04:	mov	r0, r3
    3b08:	bl	29c <swap4>
    3b0c:	sub	r3, fp, #20
    3b10:	add	r3, r3, #4
    3b14:	mov	r0, r3
    3b18:	bl	29c <swap4>
    3b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
    3b20:	movw	r2, #65535	; 0xffff
    3b24:	cmp	r3, r2
    3b28:	beq	3b40 <coda_cdf_reopen+0x1dc>
    3b2c:	ldr	r2, [fp, #-20]	; 0xffffffec
    3b30:	movw	r3, #24578	; 0x6002
    3b34:	movt	r3, #52722	; 0xcdf2
    3b38:	cmp	r2, r3
    3b3c:	bne	3b60 <coda_cdf_reopen+0x1fc>
    3b40:	movw	r1, #0
    3b44:	movt	r1, #0
    3b48:	mvn	r0, #199	; 0xc7
    3b4c:	bl	0 <coda_set_error>
    3b50:	ldr	r0, [fp, #-8]
    3b54:	bl	3c90 <coda_cdf_close>
    3b58:	mvn	r3, #0
    3b5c:	b	3c7c <coda_cdf_reopen+0x318>
    3b60:	ldr	r2, [fp, #-16]
    3b64:	mov	r3, #1
    3b68:	movt	r3, #52428	; 0xcccc
    3b6c:	cmp	r2, r3
    3b70:	bne	3b94 <coda_cdf_reopen+0x230>
    3b74:	movw	r1, #0
    3b78:	movt	r1, #0
    3b7c:	mvn	r0, #199	; 0xc7
    3b80:	bl	0 <coda_set_error>
    3b84:	ldr	r0, [fp, #-8]
    3b88:	bl	3c90 <coda_cdf_close>
    3b8c:	mvn	r3, #0
    3b90:	b	3c7c <coda_cdf_reopen+0x318>
    3b94:	ldr	r2, [fp, #-20]	; 0xffffffec
    3b98:	mov	r3, #1
    3b9c:	movt	r3, #52723	; 0xcdf3
    3ba0:	cmp	r2, r3
    3ba4:	bne	3bb8 <coda_cdf_reopen+0x254>
    3ba8:	ldr	r3, [fp, #-16]
    3bac:	movw	r2, #65535	; 0xffff
    3bb0:	cmp	r3, r2
    3bb4:	beq	3bd8 <coda_cdf_reopen+0x274>
    3bb8:	movw	r3, #0
    3bbc:	movt	r3, #0
    3bc0:	movw	r2, #1362	; 0x552
    3bc4:	movw	r1, #0
    3bc8:	movt	r1, #0
    3bcc:	movw	r0, #0
    3bd0:	movt	r0, #0
    3bd4:	bl	0 <__assert_fail>
    3bd8:	mov	r0, #5
    3bdc:	bl	0 <coda_type_record_new>
    3be0:	str	r0, [fp, #-12]
    3be4:	ldr	r3, [fp, #-12]
    3be8:	cmp	r3, #0
    3bec:	bne	3c00 <coda_cdf_reopen+0x29c>
    3bf0:	ldr	r0, [fp, #-8]
    3bf4:	bl	3c90 <coda_cdf_close>
    3bf8:	mvn	r3, #0
    3bfc:	b	3c7c <coda_cdf_reopen+0x318>
    3c00:	mov	r1, #0
    3c04:	ldr	r0, [fp, #-12]
    3c08:	bl	0 <coda_mem_record_new>
    3c0c:	mov	r2, r0
    3c10:	ldr	r3, [fp, #-8]
    3c14:	str	r2, [r3, #20]
    3c18:	ldr	r3, [fp, #-8]
    3c1c:	ldr	r3, [r3, #20]
    3c20:	cmp	r3, #0
    3c24:	bne	3c40 <coda_cdf_reopen+0x2dc>
    3c28:	ldr	r0, [fp, #-8]
    3c2c:	bl	3c90 <coda_cdf_close>
    3c30:	ldr	r0, [fp, #-12]
    3c34:	bl	0 <coda_type_release>
    3c38:	mvn	r3, #0
    3c3c:	b	3c7c <coda_cdf_reopen+0x318>
    3c40:	ldr	r0, [fp, #-12]
    3c44:	bl	0 <coda_type_release>
    3c48:	ldr	r0, [fp, #-8]
    3c4c:	bl	3588 <read_file>
    3c50:	mov	r3, r0
    3c54:	cmp	r3, #0
    3c58:	beq	3c6c <coda_cdf_reopen+0x308>
    3c5c:	ldr	r0, [fp, #-8]
    3c60:	bl	3c90 <coda_cdf_close>
    3c64:	mvn	r3, #0
    3c68:	b	3c7c <coda_cdf_reopen+0x318>
    3c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3c70:	ldr	r2, [fp, #-8]
    3c74:	str	r2, [r3]
    3c78:	mov	r3, #0
    3c7c:	mov	r0, r3
    3c80:	sub	sp, fp, #4
    3c84:	ldr	fp, [sp]
    3c88:	add	sp, sp, #4
    3c8c:	pop	{pc}		; (ldr pc, [sp], #4)

00003c90 <coda_cdf_close>:
    3c90:	str	fp, [sp, #-8]!
    3c94:	str	lr, [sp, #4]
    3c98:	add	fp, sp, #4
    3c9c:	sub	sp, sp, #16
    3ca0:	str	r0, [fp, #-16]
    3ca4:	ldr	r3, [fp, #-16]
    3ca8:	str	r3, [fp, #-8]
    3cac:	ldr	r3, [fp, #-8]
    3cb0:	ldr	r3, [r3]
    3cb4:	cmp	r3, #0
    3cb8:	beq	3ccc <coda_cdf_close+0x3c>
    3cbc:	ldr	r3, [fp, #-8]
    3cc0:	ldr	r3, [r3]
    3cc4:	mov	r0, r3
    3cc8:	bl	0 <free>
    3ccc:	ldr	r3, [fp, #-8]
    3cd0:	ldr	r3, [r3, #20]
    3cd4:	cmp	r3, #0
    3cd8:	beq	3cec <coda_cdf_close+0x5c>
    3cdc:	ldr	r3, [fp, #-8]
    3ce0:	ldr	r3, [r3, #20]
    3ce4:	mov	r0, r3
    3ce8:	bl	0 <coda_dynamic_type_delete>
    3cec:	ldr	r3, [fp, #-8]
    3cf0:	ldr	r3, [r3, #48]	; 0x30
    3cf4:	cmp	r3, #0
    3cf8:	beq	3d0c <coda_cdf_close+0x7c>
    3cfc:	ldr	r3, [fp, #-8]
    3d00:	ldr	r3, [r3, #48]	; 0x30
    3d04:	mov	r0, r3
    3d08:	bl	0 <free>
    3d0c:	ldr	r3, [fp, #-8]
    3d10:	ldr	r3, [r3, #52]	; 0x34
    3d14:	cmp	r3, #0
    3d18:	beq	3d2c <coda_cdf_close+0x9c>
    3d1c:	ldr	r3, [fp, #-8]
    3d20:	ldr	r3, [r3, #52]	; 0x34
    3d24:	mov	r0, r3
    3d28:	bl	0 <coda_bin_close>
    3d2c:	ldr	r0, [fp, #-8]
    3d30:	bl	0 <free>
    3d34:	mov	r3, #0
    3d38:	mov	r0, r3
    3d3c:	sub	sp, fp, #4
    3d40:	ldr	fp, [sp]
    3d44:	add	sp, sp, #4
    3d48:	pop	{pc}		; (ldr pc, [sp], #4)
