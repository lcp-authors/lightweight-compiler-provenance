
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/hash_tables/value_set.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ht_int_hash_function>:
   0:	push	{fp}		; (str fp, [sp, #-4]!)
   4:	add	fp, sp, #0
   8:	sub	sp, sp, #12
   c:	str	r0, [fp, #-8]
  10:	str	r1, [fp, #-12]
  14:	ldr	r2, [fp, #-8]
  18:	ldr	r3, [pc, #24]	; 38 <ht_int_hash_function+0x38>
  1c:	eor	r3, r3, r2
  20:	ldr	r2, [pc, #20]	; 3c <ht_int_hash_function+0x3c>
  24:	mul	r3, r2, r3
  28:	mov	r0, r3
  2c:	add	sp, fp, #0
  30:	pop	{fp}		; (ldr fp, [sp], #4)
  34:	bx	lr
  38:	.word	0x2f693b52
  3c:	.word	0x9e3779b1

00000040 <value_hash_function>:
  40:	push	{fp, lr}
  44:	add	fp, sp, #4
  48:	sub	sp, sp, #16
  4c:	str	r0, [fp, #-16]
  50:	str	r1, [fp, #-20]	; 0xffffffec
  54:	ldr	r3, [fp, #-16]
  58:	str	r3, [fp, #-8]
  5c:	ldr	r3, [fp, #-8]
  60:	ldrh	r3, [r3, #8]
  64:	cmp	r3, #5
  68:	beq	a4 <value_hash_function+0x64>
  6c:	cmp	r3, #6
  70:	beq	cc <value_hash_function+0x8c>
  74:	cmp	r3, #4
  78:	bne	f8 <value_hash_function+0xb8>
  7c:	ldr	r3, [fp, #-8]
  80:	ldrd	r2, [r3]
  84:	ldr	r3, [fp, #-8]
  88:	ldrh	r3, [r3, #8]
  8c:	eor	r3, r3, r2
  90:	mov	r1, #8
  94:	mov	r0, r3
  98:	bl	0 <ht_int_hash_function>
  9c:	mov	r3, r0
  a0:	b	fc <value_hash_function+0xbc>
  a4:	ldr	r3, [fp, #-8]
  a8:	ldrd	r2, [r3]
  ac:	ldr	r3, [fp, #-8]
  b0:	ldrh	r3, [r3, #8]
  b4:	eor	r3, r3, r2
  b8:	mov	r1, #8
  bc:	mov	r0, r3
  c0:	bl	0 <ht_int_hash_function>
  c4:	mov	r3, r0
  c8:	b	fc <value_hash_function+0xbc>
  cc:	ldr	r3, [fp, #-8]
  d0:	ldrb	r3, [r3]
  d4:	mov	r2, r3
  d8:	ldr	r3, [fp, #-8]
  dc:	ldrh	r3, [r3, #8]
  e0:	eor	r3, r3, r2
  e4:	mov	r1, #1
  e8:	mov	r0, r3
  ec:	bl	0 <ht_int_hash_function>
  f0:	mov	r3, r0
  f4:	b	fc <value_hash_function+0xbc>
  f8:	mov	r3, #0
  fc:	mov	r0, r3
 100:	sub	sp, fp, #4
 104:	pop	{fp, pc}

00000108 <fb_value_set_clear>:
 108:	push	{fp, lr}
 10c:	add	fp, sp, #4
 110:	sub	sp, sp, #8
 114:	str	r0, [fp, #-8]
 118:	ldr	r0, [fp, #-8]
 11c:	bl	b60 <ht_clear>
 120:	nop			; (mov r0, r0)
 124:	sub	sp, fp, #4
 128:	pop	{fp, pc}

0000012c <fb_value_set_destroy>:
 12c:	push	{fp, lr}
 130:	add	fp, sp, #4
 134:	sub	sp, sp, #16
 138:	str	r0, [fp, #-8]
 13c:	str	r1, [fp, #-12]
 140:	str	r2, [fp, #-16]
 144:	ldr	r3, [fp, #-12]
 148:	cmp	r3, #0
 14c:	beq	160 <fb_value_set_destroy+0x34>
 150:	ldr	r2, [fp, #-16]
 154:	ldr	r1, [fp, #-12]
 158:	ldr	r0, [fp, #-8]
 15c:	bl	ac4 <ht_visit>
 160:	ldr	r0, [fp, #-8]
 164:	bl	b60 <ht_clear>
 168:	nop			; (mov r0, r0)
 16c:	sub	sp, fp, #4
 170:	pop	{fp, pc}

00000174 <fb_value_set_init>:
 174:	push	{fp, lr}
 178:	add	fp, sp, #4
 17c:	sub	sp, sp, #8
 180:	str	r0, [fp, #-8]
 184:	str	r1, [fp, #-12]
 188:	ldr	r1, [fp, #-12]
 18c:	ldr	r0, [fp, #-8]
 190:	bl	3b0 <ht_init>
 194:	mov	r3, r0
 198:	mov	r0, r3
 19c:	sub	sp, fp, #4
 1a0:	pop	{fp, pc}

000001a4 <fb_value_set_resize>:
 1a4:	push	{fp, lr}
 1a8:	add	fp, sp, #4
 1ac:	sub	sp, sp, #8
 1b0:	str	r0, [fp, #-8]
 1b4:	str	r1, [fp, #-12]
 1b8:	ldr	r1, [fp, #-12]
 1bc:	ldr	r0, [fp, #-8]
 1c0:	bl	460 <ht_resize>
 1c4:	mov	r3, r0
 1c8:	mov	r0, r3
 1cc:	sub	sp, fp, #4
 1d0:	pop	{fp, pc}

000001d4 <fb_value_set_insert>:
 1d4:	push	{fp, lr}
 1d8:	add	fp, sp, #4
 1dc:	sub	sp, sp, #24
 1e0:	str	r0, [fp, #-8]
 1e4:	str	r1, [fp, #-12]
 1e8:	str	r2, [fp, #-16]
 1ec:	str	r3, [fp, #-20]	; 0xffffffec
 1f0:	ldr	r3, [fp, #4]
 1f4:	str	r3, [sp]
 1f8:	ldr	r3, [fp, #-20]	; 0xffffffec
 1fc:	ldr	r2, [fp, #-16]
 200:	ldr	r1, [fp, #-12]
 204:	ldr	r0, [fp, #-8]
 208:	bl	57c <ht_insert>
 20c:	mov	r3, r0
 210:	mov	r0, r3
 214:	sub	sp, fp, #4
 218:	pop	{fp, pc}

0000021c <fb_value_set_insert_item>:
 21c:	push	{r4, fp, lr}
 220:	add	fp, sp, #8
 224:	sub	sp, sp, #28
 228:	str	r0, [fp, #-16]
 22c:	str	r1, [fp, #-20]	; 0xffffffec
 230:	str	r2, [fp, #-24]	; 0xffffffe8
 234:	ldr	r0, [fp, #-20]	; 0xffffffec
 238:	bl	c94 <ht_key>
 23c:	mov	r4, r0
 240:	ldr	r0, [fp, #-20]	; 0xffffffec
 244:	bl	cb8 <ht_key_len>
 248:	mov	r2, r0
 24c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 250:	str	r3, [sp]
 254:	ldr	r3, [fp, #-20]	; 0xffffffec
 258:	mov	r1, r4
 25c:	ldr	r0, [fp, #-16]
 260:	bl	57c <ht_insert>
 264:	mov	r3, r0
 268:	mov	r0, r3
 26c:	sub	sp, fp, #8
 270:	pop	{r4, fp, pc}

00000274 <fb_value_set_find>:
 274:	push	{fp, lr}
 278:	add	fp, sp, #4
 27c:	sub	sp, sp, #16
 280:	str	r0, [fp, #-8]
 284:	str	r1, [fp, #-12]
 288:	str	r2, [fp, #-16]
 28c:	ldr	r2, [fp, #-16]
 290:	ldr	r1, [fp, #-12]
 294:	ldr	r0, [fp, #-8]
 298:	bl	890 <ht_find>
 29c:	mov	r3, r0
 2a0:	mov	r0, r3
 2a4:	sub	sp, fp, #4
 2a8:	pop	{fp, pc}

000002ac <fb_value_set_find_item>:
 2ac:	push	{r4, fp, lr}
 2b0:	add	fp, sp, #8
 2b4:	sub	sp, sp, #12
 2b8:	str	r0, [fp, #-16]
 2bc:	str	r1, [fp, #-20]	; 0xffffffec
 2c0:	ldr	r0, [fp, #-20]	; 0xffffffec
 2c4:	bl	c94 <ht_key>
 2c8:	mov	r4, r0
 2cc:	ldr	r0, [fp, #-20]	; 0xffffffec
 2d0:	bl	cb8 <ht_key_len>
 2d4:	mov	r3, r0
 2d8:	mov	r2, r3
 2dc:	mov	r1, r4
 2e0:	ldr	r0, [fp, #-16]
 2e4:	bl	890 <ht_find>
 2e8:	mov	r3, r0
 2ec:	mov	r0, r3
 2f0:	sub	sp, fp, #8
 2f4:	pop	{r4, fp, pc}

000002f8 <fb_value_set_remove>:
 2f8:	push	{fp, lr}
 2fc:	add	fp, sp, #4
 300:	sub	sp, sp, #16
 304:	str	r0, [fp, #-8]
 308:	str	r1, [fp, #-12]
 30c:	str	r2, [fp, #-16]
 310:	ldr	r2, [fp, #-16]
 314:	ldr	r1, [fp, #-12]
 318:	ldr	r0, [fp, #-8]
 31c:	bl	994 <ht_remove>
 320:	mov	r3, r0
 324:	mov	r0, r3
 328:	sub	sp, fp, #4
 32c:	pop	{fp, pc}

00000330 <fb_value_set_remove_item>:
 330:	push	{r4, fp, lr}
 334:	add	fp, sp, #8
 338:	sub	sp, sp, #12
 33c:	str	r0, [fp, #-16]
 340:	str	r1, [fp, #-20]	; 0xffffffec
 344:	ldr	r0, [fp, #-20]	; 0xffffffec
 348:	bl	c94 <ht_key>
 34c:	mov	r4, r0
 350:	ldr	r0, [fp, #-20]	; 0xffffffec
 354:	bl	cb8 <ht_key_len>
 358:	mov	r3, r0
 35c:	mov	r2, r3
 360:	mov	r1, r4
 364:	ldr	r0, [fp, #-16]
 368:	bl	994 <ht_remove>
 36c:	mov	r3, r0
 370:	mov	r0, r3
 374:	sub	sp, fp, #8
 378:	pop	{r4, fp, pc}

0000037c <fb_value_set_visit>:
 37c:	push	{fp, lr}
 380:	add	fp, sp, #4
 384:	sub	sp, sp, #16
 388:	str	r0, [fp, #-8]
 38c:	str	r1, [fp, #-12]
 390:	str	r2, [fp, #-16]
 394:	ldr	r2, [fp, #-16]
 398:	ldr	r1, [fp, #-12]
 39c:	ldr	r0, [fp, #-8]
 3a0:	bl	ac4 <ht_visit>
 3a4:	nop			; (mov r0, r0)
 3a8:	sub	sp, fp, #4
 3ac:	pop	{fp, pc}

000003b0 <ht_init>:
 3b0:	push	{fp, lr}
 3b4:	add	fp, sp, #4
 3b8:	sub	sp, sp, #16
 3bc:	str	r0, [fp, #-16]
 3c0:	str	r1, [fp, #-20]	; 0xffffffec
 3c4:	mov	r3, #4
 3c8:	str	r3, [fp, #-8]
 3cc:	b	3dc <ht_init+0x2c>
 3d0:	ldr	r3, [fp, #-8]
 3d4:	lsl	r3, r3, #1
 3d8:	str	r3, [fp, #-8]
 3dc:	ldr	r3, [fp, #-8]
 3e0:	mov	r2, #179	; 0xb3
 3e4:	mul	r3, r2, r3
 3e8:	lsr	r2, r3, #8
 3ec:	ldr	r3, [fp, #-20]	; 0xffffffec
 3f0:	cmp	r2, r3
 3f4:	bcc	3d0 <ht_init+0x20>
 3f8:	mov	r1, #4
 3fc:	ldr	r0, [fp, #-8]
 400:	bl	0 <calloc>
 404:	mov	r3, r0
 408:	mov	r2, r3
 40c:	ldr	r3, [fp, #-16]
 410:	str	r2, [r3]
 414:	ldr	r3, [fp, #-16]
 418:	ldr	r3, [r3]
 41c:	cmp	r3, #0
 420:	bne	42c <ht_init+0x7c>
 424:	mvn	r3, #0
 428:	b	454 <ht_init+0xa4>
 42c:	ldr	r3, [fp, #-16]
 430:	mov	r2, #0
 434:	str	r2, [r3, #4]
 438:	ldr	r3, [fp, #-16]
 43c:	ldr	r2, [fp, #-8]
 440:	str	r2, [r3, #12]
 444:	ldr	r3, [fp, #-16]
 448:	mov	r2, #0
 44c:	str	r2, [r3, #8]
 450:	mov	r3, #0
 454:	mov	r0, r3
 458:	sub	sp, fp, #4
 45c:	pop	{fp, pc}

00000460 <ht_resize>:
 460:	push	{r4, fp, lr}
 464:	add	fp, sp, #8
 468:	sub	sp, sp, #52	; 0x34
 46c:	str	r0, [fp, #-48]	; 0xffffffd0
 470:	str	r1, [fp, #-52]	; 0xffffffcc
 474:	ldr	r3, [fp, #-48]	; 0xffffffd0
 478:	ldr	r3, [r3]
 47c:	str	r3, [fp, #-20]	; 0xffffffec
 480:	ldr	r3, [fp, #-48]	; 0xffffffd0
 484:	ldr	r2, [r3, #8]
 488:	ldr	r3, [fp, #-52]	; 0xffffffcc
 48c:	cmp	r2, r3
 490:	bls	4a0 <ht_resize+0x40>
 494:	ldr	r3, [fp, #-48]	; 0xffffffd0
 498:	ldr	r3, [r3, #8]
 49c:	str	r3, [fp, #-52]	; 0xffffffcc
 4a0:	sub	r3, fp, #40	; 0x28
 4a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
 4a8:	mov	r0, r3
 4ac:	bl	3b0 <ht_init>
 4b0:	mov	r3, r0
 4b4:	cmp	r3, #0
 4b8:	beq	4c4 <ht_resize+0x64>
 4bc:	mvn	r3, #0
 4c0:	b	570 <ht_resize+0x110>
 4c4:	mov	r3, #0
 4c8:	str	r3, [fp, #-16]
 4cc:	b	53c <ht_resize+0xdc>
 4d0:	ldr	r3, [fp, #-16]
 4d4:	lsl	r3, r3, #2
 4d8:	ldr	r2, [fp, #-20]	; 0xffffffec
 4dc:	add	r3, r2, r3
 4e0:	ldr	r3, [r3]
 4e4:	str	r3, [fp, #-24]	; 0xffffffe8
 4e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 4ec:	cmp	r3, #0
 4f0:	beq	530 <ht_resize+0xd0>
 4f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 4f8:	cmp	r3, #2
 4fc:	beq	530 <ht_resize+0xd0>
 500:	ldr	r0, [fp, #-24]	; 0xffffffe8
 504:	bl	c94 <ht_key>
 508:	mov	r4, r0
 50c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 510:	bl	cb8 <ht_key_len>
 514:	mov	r2, r0
 518:	sub	r0, fp, #40	; 0x28
 51c:	mov	r3, #3
 520:	str	r3, [sp]
 524:	ldr	r3, [fp, #-24]	; 0xffffffe8
 528:	mov	r1, r4
 52c:	bl	57c <ht_insert>
 530:	ldr	r3, [fp, #-16]
 534:	add	r3, r3, #1
 538:	str	r3, [fp, #-16]
 53c:	ldr	r3, [fp, #-48]	; 0xffffffd0
 540:	ldr	r2, [r3, #12]
 544:	ldr	r3, [fp, #-16]
 548:	cmp	r2, r3
 54c:	bhi	4d0 <ht_resize+0x70>
 550:	ldr	r0, [fp, #-48]	; 0xffffffd0
 554:	bl	b60 <ht_clear>
 558:	sub	r3, fp, #40	; 0x28
 55c:	mov	r2, #16
 560:	mov	r1, r3
 564:	ldr	r0, [fp, #-48]	; 0xffffffd0
 568:	bl	0 <memcpy>
 56c:	mov	r3, #0
 570:	mov	r0, r3
 574:	sub	sp, fp, #8
 578:	pop	{r4, fp, pc}

0000057c <ht_insert>:
 57c:	push	{fp, lr}
 580:	add	fp, sp, #4
 584:	sub	sp, sp, #48	; 0x30
 588:	str	r0, [fp, #-40]	; 0xffffffd8
 58c:	str	r1, [fp, #-44]	; 0xffffffd4
 590:	str	r2, [fp, #-48]	; 0xffffffd0
 594:	str	r3, [fp, #-52]	; 0xffffffcc
 598:	mov	r3, #0
 59c:	str	r3, [fp, #-16]
 5a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
 5a4:	cmp	r3, #0
 5a8:	bne	5c0 <ht_insert+0x44>
 5ac:	ldr	r3, [pc, #700]	; 870 <ht_insert+0x2f4>
 5b0:	mov	r2, #114	; 0x72
 5b4:	ldr	r1, [pc, #696]	; 874 <ht_insert+0x2f8>
 5b8:	ldr	r0, [pc, #696]	; 878 <ht_insert+0x2fc>
 5bc:	bl	0 <__assert_fail>
 5c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
 5c4:	cmp	r3, #2
 5c8:	bne	5e0 <ht_insert+0x64>
 5cc:	ldr	r3, [pc, #668]	; 870 <ht_insert+0x2f4>
 5d0:	mov	r2, #115	; 0x73
 5d4:	ldr	r1, [pc, #664]	; 874 <ht_insert+0x2f8>
 5d8:	ldr	r0, [pc, #668]	; 87c <ht_insert+0x300>
 5dc:	bl	0 <__assert_fail>
 5e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
 5e4:	cmp	r3, #1
 5e8:	bne	600 <ht_insert+0x84>
 5ec:	ldr	r3, [pc, #636]	; 870 <ht_insert+0x2f4>
 5f0:	mov	r2, #116	; 0x74
 5f4:	ldr	r1, [pc, #632]	; 874 <ht_insert+0x2f8>
 5f8:	ldr	r0, [pc, #640]	; 880 <ht_insert+0x304>
 5fc:	bl	0 <__assert_fail>
 600:	ldr	r3, [fp, #-40]	; 0xffffffd8
 604:	ldr	r2, [r3, #8]
 608:	ldr	r3, [fp, #-40]	; 0xffffffd8
 60c:	ldr	r3, [r3, #12]
 610:	mov	r1, #179	; 0xb3
 614:	mul	r3, r1, r3
 618:	lsr	r3, r3, #8
 61c:	cmp	r2, r3
 620:	bcc	668 <ht_insert+0xec>
 624:	ldr	r3, [fp, #-40]	; 0xffffffd8
 628:	ldr	r3, [r3, #8]
 62c:	lsl	r3, r3, #1
 630:	mov	r1, r3
 634:	ldr	r0, [fp, #-40]	; 0xffffffd8
 638:	bl	460 <ht_resize>
 63c:	mov	r3, r0
 640:	cmp	r3, #0
 644:	beq	668 <ht_insert+0xec>
 648:	ldr	r3, [pc, #564]	; 884 <ht_insert+0x308>
 64c:	ldr	r3, [r3]
 650:	ldr	r2, [pc, #560]	; 888 <ht_insert+0x30c>
 654:	ldr	r1, [pc, #560]	; 88c <ht_insert+0x310>
 658:	mov	r0, r3
 65c:	bl	0 <fprintf>
 660:	mov	r0, #1
 664:	bl	0 <exit>
 668:	ldr	r3, [fp, #-40]	; 0xffffffd8
 66c:	ldr	r3, [r3]
 670:	str	r3, [fp, #-20]	; 0xffffffec
 674:	ldr	r3, [fp, #-40]	; 0xffffffd8
 678:	ldr	r3, [r3, #12]
 67c:	sub	r3, r3, #1
 680:	str	r3, [fp, #-24]	; 0xffffffe8
 684:	ldr	r1, [fp, #-48]	; 0xffffffd0
 688:	ldr	r0, [fp, #-44]	; 0xffffffd4
 68c:	bl	40 <value_hash_function>
 690:	str	r0, [fp, #-28]	; 0xffffffe4
 694:	mov	r3, #0
 698:	str	r3, [fp, #-8]
 69c:	ldr	r2, [fp, #-28]	; 0xffffffe4
 6a0:	ldr	r3, [fp, #-8]
 6a4:	add	r2, r2, r3
 6a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6ac:	and	r3, r3, r2
 6b0:	str	r3, [fp, #-12]
 6b4:	ldr	r3, [fp, #4]
 6b8:	cmp	r3, #2
 6bc:	beq	6cc <ht_insert+0x150>
 6c0:	ldr	r3, [fp, #4]
 6c4:	cmp	r3, #3
 6c8:	bne	7fc <ht_insert+0x280>
 6cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
 6d0:	ldr	r3, [r3, #8]
 6d4:	add	r2, r3, #1
 6d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 6dc:	str	r2, [r3, #8]
 6e0:	b	708 <ht_insert+0x18c>
 6e4:	ldr	r3, [fp, #-8]
 6e8:	add	r3, r3, #1
 6ec:	str	r3, [fp, #-8]
 6f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
 6f4:	ldr	r3, [fp, #-8]
 6f8:	add	r2, r2, r3
 6fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 700:	and	r3, r3, r2
 704:	str	r3, [fp, #-12]
 708:	ldr	r3, [fp, #-12]
 70c:	lsl	r3, r3, #2
 710:	ldr	r2, [fp, #-20]	; 0xffffffec
 714:	add	r3, r2, r3
 718:	ldr	r3, [r3]
 71c:	cmp	r3, #0
 720:	beq	740 <ht_insert+0x1c4>
 724:	ldr	r3, [fp, #-12]
 728:	lsl	r3, r3, #2
 72c:	ldr	r2, [fp, #-20]	; 0xffffffec
 730:	add	r3, r2, r3
 734:	ldr	r3, [r3]
 738:	cmp	r3, #2
 73c:	bne	6e4 <ht_insert+0x168>
 740:	ldr	r3, [fp, #-12]
 744:	lsl	r3, r3, #2
 748:	ldr	r2, [fp, #-20]	; 0xffffffec
 74c:	add	r3, r2, r3
 750:	ldr	r2, [fp, #-52]	; 0xffffffcc
 754:	str	r2, [r3]
 758:	mov	r3, #0
 75c:	b	864 <ht_insert+0x2e8>
 760:	ldr	r3, [fp, #-32]	; 0xffffffe0
 764:	cmp	r3, #2
 768:	bne	790 <ht_insert+0x214>
 76c:	ldr	r3, [fp, #-16]
 770:	cmp	r3, #0
 774:	bne	7d8 <ht_insert+0x25c>
 778:	ldr	r3, [fp, #-12]
 77c:	lsl	r3, r3, #2
 780:	ldr	r2, [fp, #-20]	; 0xffffffec
 784:	add	r3, r2, r3
 788:	str	r3, [fp, #-16]
 78c:	b	7d8 <ht_insert+0x25c>
 790:	ldr	r2, [fp, #-32]	; 0xffffffe0
 794:	ldr	r1, [fp, #-48]	; 0xffffffd0
 798:	ldr	r0, [fp, #-44]	; 0xffffffd4
 79c:	bl	bac <ht_match>
 7a0:	mov	r3, r0
 7a4:	cmp	r3, #0
 7a8:	beq	7d8 <ht_insert+0x25c>
 7ac:	ldr	r3, [fp, #4]
 7b0:	cmp	r3, #0
 7b4:	bne	7d0 <ht_insert+0x254>
 7b8:	ldr	r3, [fp, #-12]
 7bc:	lsl	r3, r3, #2
 7c0:	ldr	r2, [fp, #-20]	; 0xffffffec
 7c4:	add	r3, r2, r3
 7c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
 7cc:	str	r2, [r3]
 7d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 7d4:	b	864 <ht_insert+0x2e8>
 7d8:	ldr	r3, [fp, #-8]
 7dc:	add	r3, r3, #1
 7e0:	str	r3, [fp, #-8]
 7e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
 7e8:	ldr	r3, [fp, #-8]
 7ec:	add	r2, r2, r3
 7f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7f4:	and	r3, r3, r2
 7f8:	str	r3, [fp, #-12]
 7fc:	ldr	r3, [fp, #-12]
 800:	lsl	r3, r3, #2
 804:	ldr	r2, [fp, #-20]	; 0xffffffec
 808:	add	r3, r2, r3
 80c:	ldr	r3, [r3]
 810:	str	r3, [fp, #-32]	; 0xffffffe0
 814:	ldr	r3, [fp, #-32]	; 0xffffffe0
 818:	cmp	r3, #0
 81c:	bne	760 <ht_insert+0x1e4>
 820:	ldr	r3, [fp, #-16]
 824:	cmp	r3, #0
 828:	bne	840 <ht_insert+0x2c4>
 82c:	ldr	r3, [fp, #-12]
 830:	lsl	r3, r3, #2
 834:	ldr	r2, [fp, #-20]	; 0xffffffec
 838:	add	r3, r2, r3
 83c:	str	r3, [fp, #-16]
 840:	ldr	r3, [fp, #-40]	; 0xffffffd8
 844:	ldr	r3, [r3, #8]
 848:	add	r2, r3, #1
 84c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 850:	str	r2, [r3, #8]
 854:	ldr	r3, [fp, #-16]
 858:	ldr	r2, [fp, #-52]	; 0xffffffcc
 85c:	str	r2, [r3]
 860:	mov	r3, #0
 864:	mov	r0, r3
 868:	sub	sp, fp, #4
 86c:	pop	{fp, pc}
 870:	.word	0x000000fc
 874:	.word	0x0000000c
 878:	.word	0x00000068
 87c:	.word	0x00000080
 880:	.word	0x00000098
 884:	.word	0x00000000
 888:	.word	0x000000b0
 88c:	.word	0x000000e4

00000890 <ht_find>:
 890:	push	{fp, lr}
 894:	add	fp, sp, #4
 898:	sub	sp, sp, #40	; 0x28
 89c:	str	r0, [fp, #-32]	; 0xffffffe0
 8a0:	str	r1, [fp, #-36]	; 0xffffffdc
 8a4:	str	r2, [fp, #-40]	; 0xffffffd8
 8a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
 8ac:	ldr	r3, [r3]
 8b0:	str	r3, [fp, #-16]
 8b4:	ldr	r3, [fp, #-16]
 8b8:	cmp	r3, #0
 8bc:	bne	8c8 <ht_find+0x38>
 8c0:	mov	r3, #0
 8c4:	b	988 <ht_find+0xf8>
 8c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
 8cc:	ldr	r3, [r3, #12]
 8d0:	sub	r3, r3, #1
 8d4:	str	r3, [fp, #-20]	; 0xffffffec
 8d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
 8dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
 8e0:	bl	40 <value_hash_function>
 8e4:	str	r0, [fp, #-24]	; 0xffffffe8
 8e8:	mov	r3, #0
 8ec:	str	r3, [fp, #-8]
 8f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
 8f4:	ldr	r3, [fp, #-8]
 8f8:	add	r2, r2, r3
 8fc:	ldr	r3, [fp, #-20]	; 0xffffffec
 900:	and	r3, r3, r2
 904:	str	r3, [fp, #-12]
 908:	b	960 <ht_find+0xd0>
 90c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 910:	cmp	r3, #2
 914:	beq	93c <ht_find+0xac>
 918:	ldr	r2, [fp, #-28]	; 0xffffffe4
 91c:	ldr	r1, [fp, #-40]	; 0xffffffd8
 920:	ldr	r0, [fp, #-36]	; 0xffffffdc
 924:	bl	bac <ht_match>
 928:	mov	r3, r0
 92c:	cmp	r3, #0
 930:	beq	93c <ht_find+0xac>
 934:	ldr	r3, [fp, #-28]	; 0xffffffe4
 938:	b	988 <ht_find+0xf8>
 93c:	ldr	r3, [fp, #-8]
 940:	add	r3, r3, #1
 944:	str	r3, [fp, #-8]
 948:	ldr	r2, [fp, #-24]	; 0xffffffe8
 94c:	ldr	r3, [fp, #-8]
 950:	add	r2, r2, r3
 954:	ldr	r3, [fp, #-20]	; 0xffffffec
 958:	and	r3, r3, r2
 95c:	str	r3, [fp, #-12]
 960:	ldr	r3, [fp, #-12]
 964:	lsl	r3, r3, #2
 968:	ldr	r2, [fp, #-16]
 96c:	add	r3, r2, r3
 970:	ldr	r3, [r3]
 974:	str	r3, [fp, #-28]	; 0xffffffe4
 978:	ldr	r3, [fp, #-28]	; 0xffffffe4
 97c:	cmp	r3, #0
 980:	bne	90c <ht_find+0x7c>
 984:	mov	r3, #0
 988:	mov	r0, r3
 98c:	sub	sp, fp, #4
 990:	pop	{fp, pc}

00000994 <ht_remove>:
 994:	push	{fp, lr}
 998:	add	fp, sp, #4
 99c:	sub	sp, sp, #40	; 0x28
 9a0:	str	r0, [fp, #-32]	; 0xffffffe0
 9a4:	str	r1, [fp, #-36]	; 0xffffffdc
 9a8:	str	r2, [fp, #-40]	; 0xffffffd8
 9ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9b0:	ldr	r3, [r3]
 9b4:	str	r3, [fp, #-16]
 9b8:	ldr	r3, [fp, #-16]
 9bc:	cmp	r3, #0
 9c0:	bne	9cc <ht_remove+0x38>
 9c4:	mov	r3, #0
 9c8:	b	ab8 <ht_remove+0x124>
 9cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9d0:	ldr	r3, [r3, #12]
 9d4:	sub	r3, r3, #1
 9d8:	str	r3, [fp, #-20]	; 0xffffffec
 9dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
 9e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
 9e4:	bl	40 <value_hash_function>
 9e8:	str	r0, [fp, #-24]	; 0xffffffe8
 9ec:	mov	r3, #0
 9f0:	str	r3, [fp, #-8]
 9f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
 9f8:	ldr	r3, [fp, #-8]
 9fc:	add	r2, r2, r3
 a00:	ldr	r3, [fp, #-20]	; 0xffffffec
 a04:	and	r3, r3, r2
 a08:	str	r3, [fp, #-12]
 a0c:	b	a90 <ht_remove+0xfc>
 a10:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a14:	cmp	r3, #2
 a18:	beq	a6c <ht_remove+0xd8>
 a1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
 a20:	ldr	r1, [fp, #-40]	; 0xffffffd8
 a24:	ldr	r0, [fp, #-36]	; 0xffffffdc
 a28:	bl	bac <ht_match>
 a2c:	mov	r3, r0
 a30:	cmp	r3, #0
 a34:	beq	a6c <ht_remove+0xd8>
 a38:	ldr	r3, [fp, #-12]
 a3c:	lsl	r3, r3, #2
 a40:	ldr	r2, [fp, #-16]
 a44:	add	r3, r2, r3
 a48:	mov	r2, #2
 a4c:	str	r2, [r3]
 a50:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a54:	ldr	r3, [r3, #8]
 a58:	sub	r2, r3, #1
 a5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a60:	str	r2, [r3, #8]
 a64:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a68:	b	ab8 <ht_remove+0x124>
 a6c:	ldr	r3, [fp, #-8]
 a70:	add	r3, r3, #1
 a74:	str	r3, [fp, #-8]
 a78:	ldr	r2, [fp, #-24]	; 0xffffffe8
 a7c:	ldr	r3, [fp, #-8]
 a80:	add	r2, r2, r3
 a84:	ldr	r3, [fp, #-20]	; 0xffffffec
 a88:	and	r3, r3, r2
 a8c:	str	r3, [fp, #-12]
 a90:	ldr	r3, [fp, #-12]
 a94:	lsl	r3, r3, #2
 a98:	ldr	r2, [fp, #-16]
 a9c:	add	r3, r2, r3
 aa0:	ldr	r3, [r3]
 aa4:	str	r3, [fp, #-28]	; 0xffffffe4
 aa8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 aac:	cmp	r3, #0
 ab0:	bne	a10 <ht_remove+0x7c>
 ab4:	mov	r3, #0
 ab8:	mov	r0, r3
 abc:	sub	sp, fp, #4
 ac0:	pop	{fp, pc}

00000ac4 <ht_visit>:
 ac4:	push	{fp, lr}
 ac8:	add	fp, sp, #4
 acc:	sub	sp, sp, #32
 ad0:	str	r0, [fp, #-24]	; 0xffffffe8
 ad4:	str	r1, [fp, #-28]	; 0xffffffe4
 ad8:	str	r2, [fp, #-32]	; 0xffffffe0
 adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 ae0:	ldr	r3, [r3]
 ae4:	str	r3, [fp, #-12]
 ae8:	mov	r3, #0
 aec:	str	r3, [fp, #-8]
 af0:	b	b40 <ht_visit+0x7c>
 af4:	ldr	r3, [fp, #-8]
 af8:	lsl	r3, r3, #2
 afc:	ldr	r2, [fp, #-12]
 b00:	add	r3, r2, r3
 b04:	ldr	r3, [r3]
 b08:	str	r3, [fp, #-16]
 b0c:	ldr	r3, [fp, #-16]
 b10:	cmp	r3, #0
 b14:	beq	b34 <ht_visit+0x70>
 b18:	ldr	r3, [fp, #-16]
 b1c:	cmp	r3, #2
 b20:	beq	b34 <ht_visit+0x70>
 b24:	ldr	r3, [fp, #-28]	; 0xffffffe4
 b28:	ldr	r1, [fp, #-16]
 b2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
 b30:	blx	r3
 b34:	ldr	r3, [fp, #-8]
 b38:	add	r3, r3, #1
 b3c:	str	r3, [fp, #-8]
 b40:	ldr	r3, [fp, #-24]	; 0xffffffe8
 b44:	ldr	r2, [r3, #12]
 b48:	ldr	r3, [fp, #-8]
 b4c:	cmp	r2, r3
 b50:	bhi	af4 <ht_visit+0x30>
 b54:	nop			; (mov r0, r0)
 b58:	sub	sp, fp, #4
 b5c:	pop	{fp, pc}

00000b60 <ht_clear>:
 b60:	push	{fp, lr}
 b64:	add	fp, sp, #4
 b68:	sub	sp, sp, #8
 b6c:	str	r0, [fp, #-8]
 b70:	ldr	r3, [fp, #-8]
 b74:	ldr	r3, [r3]
 b78:	cmp	r3, #0
 b7c:	beq	b90 <ht_clear+0x30>
 b80:	ldr	r3, [fp, #-8]
 b84:	ldr	r3, [r3]
 b88:	mov	r0, r3
 b8c:	bl	0 <free>
 b90:	mov	r2, #16
 b94:	mov	r1, #0
 b98:	ldr	r0, [fp, #-8]
 b9c:	bl	0 <memset>
 ba0:	nop			; (mov r0, r0)
 ba4:	sub	sp, fp, #4
 ba8:	pop	{fp, pc}

00000bac <ht_match>:
 bac:	push	{fp}		; (str fp, [sp, #-4]!)
 bb0:	add	fp, sp, #0
 bb4:	sub	sp, sp, #28
 bb8:	str	r0, [fp, #-16]
 bbc:	str	r1, [fp, #-20]	; 0xffffffec
 bc0:	str	r2, [fp, #-24]	; 0xffffffe8
 bc4:	ldr	r3, [fp, #-16]
 bc8:	str	r3, [fp, #-8]
 bcc:	ldr	r3, [fp, #-8]
 bd0:	ldrh	r2, [r3, #8]
 bd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 bd8:	ldrh	r3, [r3, #8]
 bdc:	cmp	r2, r3
 be0:	beq	bec <ht_match+0x40>
 be4:	mov	r3, #0
 be8:	b	c84 <ht_match+0xd8>
 bec:	ldr	r3, [fp, #-8]
 bf0:	ldrh	r3, [r3, #8]
 bf4:	cmp	r3, #5
 bf8:	beq	c34 <ht_match+0x88>
 bfc:	cmp	r3, #6
 c00:	beq	c5c <ht_match+0xb0>
 c04:	cmp	r3, #4
 c08:	bne	c80 <ht_match+0xd4>
 c0c:	ldr	r3, [fp, #-8]
 c10:	ldrd	r0, [r3]
 c14:	ldr	r3, [fp, #-24]	; 0xffffffe8
 c18:	ldrd	r2, [r3]
 c1c:	cmp	r1, r3
 c20:	cmpeq	r0, r2
 c24:	moveq	r3, #1
 c28:	movne	r3, #0
 c2c:	uxtb	r3, r3
 c30:	b	c84 <ht_match+0xd8>
 c34:	ldr	r3, [fp, #-8]
 c38:	ldrd	r0, [r3]
 c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 c40:	ldrd	r2, [r3]
 c44:	cmp	r1, r3
 c48:	cmpeq	r0, r2
 c4c:	moveq	r3, #1
 c50:	movne	r3, #0
 c54:	uxtb	r3, r3
 c58:	b	c84 <ht_match+0xd8>
 c5c:	ldr	r3, [fp, #-8]
 c60:	ldrb	r2, [r3]
 c64:	ldr	r3, [fp, #-24]	; 0xffffffe8
 c68:	ldrb	r3, [r3]
 c6c:	cmp	r2, r3
 c70:	moveq	r3, #1
 c74:	movne	r3, #0
 c78:	uxtb	r3, r3
 c7c:	b	c84 <ht_match+0xd8>
 c80:	mov	r3, #0
 c84:	mov	r0, r3
 c88:	add	sp, fp, #0
 c8c:	pop	{fp}		; (ldr fp, [sp], #4)
 c90:	bx	lr

00000c94 <ht_key>:
 c94:	push	{fp}		; (str fp, [sp, #-4]!)
 c98:	add	fp, sp, #0
 c9c:	sub	sp, sp, #12
 ca0:	str	r0, [fp, #-8]
 ca4:	ldr	r3, [fp, #-8]
 ca8:	mov	r0, r3
 cac:	add	sp, fp, #0
 cb0:	pop	{fp}		; (ldr fp, [sp], #4)
 cb4:	bx	lr

00000cb8 <ht_key_len>:
 cb8:	push	{fp}		; (str fp, [sp, #-4]!)
 cbc:	add	fp, sp, #0
 cc0:	sub	sp, sp, #12
 cc4:	str	r0, [fp, #-8]
 cc8:	mov	r3, #0
 ccc:	mov	r0, r3
 cd0:	add	sp, fp, #0
 cd4:	pop	{fp}		; (ldr fp, [sp], #4)
 cd8:	bx	lr
