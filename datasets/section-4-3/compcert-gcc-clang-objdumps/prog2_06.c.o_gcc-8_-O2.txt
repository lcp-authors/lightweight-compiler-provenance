
../compcert-repos/prog2/CMakeFiles/0.6.dir/Aula00_Conceitos_base/06.c.o:     file format elf32-littlearm


Disassembly of section .text.startup:

00000000 <main>:
   0:	movw	r0, #0
   4:	movt	r0, #0
   8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   c:	strd	r6, [sp, #8]
  10:	mov	r6, #0
  14:	strd	r8, [sp, #16]
  18:	mov	r7, r6
  1c:	movw	r8, #0
  20:	movt	r8, #0
  24:	strd	sl, [sp, #24]
  28:	mov	sl, r6
  2c:	str	lr, [sp, #32]
  30:	sub	sp, sp, #12
  34:	bl	0 <printf>
  38:	mov	r0, #1
  3c:	bl	0 <malloc>
  40:	mov	r9, r0
  44:	mov	r0, #1
  48:	bl	0 <malloc>
  4c:	mov	r5, r0
  50:	add	r1, sp, #7
  54:	mov	r0, r8
  58:	bl	0 <__isoc99_scanf>
  5c:	cmp	r0, #1
  60:	mov	r0, r5
  64:	bne	a0 <main+0xa0>
  68:	ldrb	r4, [sp, #7]
  6c:	cmp	r4, #10
  70:	cmpne	r4, #32
  74:	bne	108 <main+0x108>
  78:	bl	0 <strlen>
  7c:	mov	r6, r0
  80:	mov	r0, r9
  84:	bl	0 <strlen>
  88:	cmp	r6, r0
  8c:	add	r7, r7, #1
  90:	bhi	12c <main+0x12c>
  94:	cmp	r4, #10
  98:	mov	r6, #0
  9c:	bne	50 <main+0x50>
  a0:	mov	r1, r7
  a4:	movw	r0, #0
  a8:	movt	r0, #0
  ac:	bl	0 <printf>
  b0:	mov	r1, r9
  b4:	movw	r0, #0
  b8:	movt	r0, #0
  bc:	bl	0 <printf>
  c0:	vmov	s15, sl
  c4:	movw	r0, #0
  c8:	movt	r0, #0
  cc:	vcvt.f32.s32	s14, s15
  d0:	vmov	s15, r7
  d4:	vcvt.f32.s32	s15, s15
  d8:	vdiv.f32	s13, s14, s15
  dc:	vcvt.f64.f32	d7, s13
  e0:	vmov	r2, r3, d7
  e4:	bl	0 <printf>
  e8:	mov	r0, #0
  ec:	add	sp, sp, #12
  f0:	ldrd	r4, [sp]
  f4:	ldrd	r6, [sp, #8]
  f8:	ldrd	r8, [sp, #16]
  fc:	ldrd	sl, [sp, #24]
 100:	add	sp, sp, #32
 104:	pop	{pc}		; (ldr pc, [sp], #4)
 108:	add	fp, r6, #1
 10c:	mov	r0, r5
 110:	mov	r1, fp
 114:	add	sl, sl, #1
 118:	bl	0 <realloc>
 11c:	mov	r5, r0
 120:	strb	r4, [r0, r6]
 124:	mov	r6, fp
 128:	b	50 <main+0x50>
 12c:	mov	r1, r6
 130:	mov	r0, r9
 134:	bl	0 <realloc>
 138:	add	r2, r6, #1
 13c:	mov	r1, r5
 140:	mov	r9, r0
 144:	bl	0 <memcpy>
 148:	b	94 <main+0x94>
