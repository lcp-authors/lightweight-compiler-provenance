
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c_sort.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <error_tok_2>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #24
  10:	str	r0, [fp, #-8]
  14:	str	r1, [fp, #-12]
  18:	str	r2, [fp, #-16]
  1c:	str	r3, [fp, #-20]	; 0xffffffec
  20:	mov	r3, #0
  24:	str	r3, [sp, #4]
  28:	mov	r3, #0
  2c:	str	r3, [sp]
  30:	ldr	r3, [fp, #-20]	; 0xffffffec
  34:	ldr	r2, [fp, #-16]
  38:	ldr	r1, [fp, #-12]
  3c:	ldr	r0, [fp, #-8]
  40:	bl	0 <__flatcc_error_report>
  44:	nop	{0}
  48:	sub	sp, fp, #4
  4c:	ldr	fp, [sp]
  50:	add	sp, sp, #4
  54:	pop	{pc}		; (ldr pc, [sp], #4)

00000058 <__flatcc_gen_sort>:
  58:	strd	r4, [sp, #-16]!
  5c:	str	fp, [sp, #8]
  60:	str	lr, [sp, #12]
  64:	add	fp, sp, #12
  68:	sub	sp, sp, #32
  6c:	str	r0, [fp, #-16]
  70:	ldr	r3, [fp, #-16]
  74:	ldr	r3, [r3, #204]	; 0xcc
  78:	ldr	r2, [fp, #-16]
  7c:	movw	r1, #0
  80:	movt	r1, #0
  84:	mov	r0, r3
  88:	bl	0 <fprintf>
  8c:	ldr	r3, [fp, #-16]
  90:	ldr	r0, [r3, #204]	; 0xcc
  94:	ldr	r2, [fp, #-16]
  98:	ldr	r3, [fp, #-16]
  9c:	movw	r1, #0
  a0:	movt	r1, #0
  a4:	bl	0 <fprintf>
  a8:	ldr	r3, [fp, #-16]
  ac:	ldr	r0, [r3, #204]	; 0xcc
  b0:	ldr	r2, [fp, #-16]
  b4:	ldr	r1, [fp, #-16]
  b8:	ldr	r3, [fp, #-16]
  bc:	str	r3, [sp]
  c0:	mov	r3, r1
  c4:	movw	r1, #0
  c8:	movt	r1, #0
  cc:	bl	0 <fprintf>
  d0:	ldr	r3, [fp, #-16]
  d4:	ldr	r0, [r3, #204]	; 0xcc
  d8:	ldr	r1, [fp, #-16]
  dc:	ldr	ip, [fp, #-16]
  e0:	ldr	r3, [fp, #-16]
  e4:	ldr	r2, [fp, #-16]
  e8:	str	r2, [sp, #4]
  ec:	str	r3, [sp]
  f0:	mov	r3, ip
  f4:	mov	r2, r1
  f8:	movw	r1, #0
  fc:	movt	r1, #0
 100:	bl	0 <fprintf>
 104:	ldr	r3, [fp, #-16]
 108:	ldr	r0, [r3, #204]	; 0xcc
 10c:	ldr	r2, [fp, #-16]
 110:	ldr	r3, [fp, #-16]
 114:	movw	r1, #0
 118:	movt	r1, #0
 11c:	bl	0 <fprintf>
 120:	ldr	r3, [fp, #-16]
 124:	ldr	r0, [r3, #204]	; 0xcc
 128:	ldr	r1, [fp, #-16]
 12c:	ldr	ip, [fp, #-16]
 130:	ldr	r3, [fp, #-16]
 134:	ldr	r2, [fp, #-16]
 138:	str	r2, [sp, #4]
 13c:	str	r3, [sp]
 140:	mov	r3, ip
 144:	mov	r2, r1
 148:	movw	r1, #0
 14c:	movt	r1, #0
 150:	bl	0 <fprintf>
 154:	ldr	r3, [fp, #-16]
 158:	ldr	ip, [r3, #204]	; 0xcc
 15c:	ldr	lr, [fp, #-16]
 160:	ldr	r4, [fp, #-16]
 164:	ldr	r3, [fp, #-16]
 168:	ldr	r2, [fp, #-16]
 16c:	ldr	r1, [fp, #-16]
 170:	ldr	r0, [fp, #-16]
 174:	str	r0, [sp, #12]
 178:	str	r1, [sp, #8]
 17c:	str	r2, [sp, #4]
 180:	str	r3, [sp]
 184:	mov	r3, r4
 188:	mov	r2, lr
 18c:	movw	r1, #0
 190:	movt	r1, #0
 194:	mov	r0, ip
 198:	bl	0 <fprintf>
 19c:	ldr	r3, [fp, #-16]
 1a0:	ldr	r0, [r3, #204]	; 0xcc
 1a4:	ldr	r1, [fp, #-16]
 1a8:	ldr	ip, [fp, #-16]
 1ac:	ldr	r3, [fp, #-16]
 1b0:	ldr	r2, [fp, #-16]
 1b4:	str	r2, [sp, #4]
 1b8:	str	r3, [sp]
 1bc:	mov	r3, ip
 1c0:	mov	r2, r1
 1c4:	movw	r1, #0
 1c8:	movt	r1, #0
 1cc:	bl	0 <fprintf>
 1d0:	ldr	r3, [fp, #-16]
 1d4:	ldr	lr, [r3, #204]	; 0xcc
 1d8:	ldr	r4, [fp, #-16]
 1dc:	ldr	r5, [fp, #-16]
 1e0:	ldr	r3, [fp, #-16]
 1e4:	ldr	r2, [fp, #-16]
 1e8:	ldr	r1, [fp, #-16]
 1ec:	ldr	r0, [fp, #-16]
 1f0:	ldr	ip, [fp, #-16]
 1f4:	str	ip, [sp, #16]
 1f8:	str	r0, [sp, #12]
 1fc:	str	r1, [sp, #8]
 200:	str	r2, [sp, #4]
 204:	str	r3, [sp]
 208:	mov	r3, r5
 20c:	mov	r2, r4
 210:	movw	r1, #0
 214:	movt	r1, #0
 218:	mov	r0, lr
 21c:	bl	0 <fprintf>
 220:	mov	r3, #0
 224:	mov	r0, r3
 228:	sub	sp, fp, #12
 22c:	ldrd	r4, [sp]
 230:	ldr	fp, [sp, #8]
 234:	add	sp, sp, #12
 238:	pop	{pc}		; (ldr pc, [sp], #4)
