
../compcert-repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010c34 <.init>:
   10c34:	push	{r3, lr}
   10c38:	bl	10d20 <_start@@Base+0x3c>
   10c3c:	pop	{r3, pc}

Disassembly of section .plt:

00010c40 <calloc@plt-0x14>:
   10c40:	push	{lr}		; (str lr, [sp, #-4]!)
   10c44:	ldr	lr, [pc, #4]	; 10c50 <calloc@plt-0x4>
   10c48:	add	lr, pc, lr
   10c4c:	ldr	pc, [lr, #8]!
   10c50:			; <UNDEFINED> instruction: 0x000123b0

00010c54 <calloc@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #73728	; 0x12000
   10c5c:	ldr	pc, [ip, #944]!	; 0x3b0

00010c60 <printf@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #73728	; 0x12000
   10c68:	ldr	pc, [ip, #936]!	; 0x3a8

00010c6c <free@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #73728	; 0x12000
   10c74:	ldr	pc, [ip, #928]!	; 0x3a0

00010c78 <realloc@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #73728	; 0x12000
   10c80:	ldr	pc, [ip, #920]!	; 0x398

00010c84 <puts@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #73728	; 0x12000
   10c8c:	ldr	pc, [ip, #912]!	; 0x390

00010c90 <malloc@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #904]!	; 0x388

00010c9c <__libc_start_main@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #896]!	; 0x380

00010ca8 <__gmon_start__@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #888]!	; 0x378

00010cb4 <setvbuf@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #880]!	; 0x370

00010cc0 <memset@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #872]!	; 0x368

00010ccc <putchar@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #864]!	; 0x360

00010cd8 <abort@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #856]!	; 0x358

Disassembly of section .text:

00010ce4 <_start@@Base>:
   10ce4:	mov	fp, #0
   10ce8:	mov	lr, #0
   10cec:	pop	{r1}		; (ldr r1, [sp], #4)
   10cf0:	mov	r2, sp
   10cf4:	push	{r2}		; (str r2, [sp, #-4]!)
   10cf8:	push	{r0}		; (str r0, [sp, #-4]!)
   10cfc:	ldr	ip, [pc, #16]	; 10d14 <_start@@Base+0x30>
   10d00:	push	{ip}		; (str ip, [sp, #-4]!)
   10d04:	ldr	r0, [pc, #12]	; 10d18 <_start@@Base+0x34>
   10d08:	ldr	r3, [pc, #12]	; 10d1c <_start@@Base+0x38>
   10d0c:	bl	10c9c <__libc_start_main@plt>
   10d10:	bl	10cd8 <abort@plt>
   10d14:	andeq	r2, r1, r8, lsl #12
   10d18:			; <UNDEFINED> instruction: 0x00011bb4
   10d1c:	andeq	r2, r1, r8, lsr #11
   10d20:	ldr	r3, [pc, #20]	; 10d3c <_start@@Base+0x58>
   10d24:	ldr	r2, [pc, #20]	; 10d40 <_start@@Base+0x5c>
   10d28:	add	r3, pc, r3
   10d2c:	ldr	r2, [r3, r2]
   10d30:	cmp	r2, #0
   10d34:	bxeq	lr
   10d38:	b	10ca8 <__gmon_start__@plt>
   10d3c:	ldrdeq	r2, [r1], -r0
   10d40:	andeq	r0, r0, ip, lsr r0
   10d44:	ldr	r0, [pc, #24]	; 10d64 <_start@@Base+0x80>
   10d48:	ldr	r3, [pc, #24]	; 10d68 <_start@@Base+0x84>
   10d4c:	cmp	r3, r0
   10d50:	bxeq	lr
   10d54:	ldr	r3, [pc, #16]	; 10d6c <_start@@Base+0x88>
   10d58:	cmp	r3, #0
   10d5c:	bxeq	lr
   10d60:	bx	r3
   10d64:	andeq	r3, r2, r8, asr #32
   10d68:	andeq	r3, r2, r8, asr #32
   10d6c:	andeq	r0, r0, r0
   10d70:	ldr	r0, [pc, #36]	; 10d9c <_start@@Base+0xb8>
   10d74:	ldr	r1, [pc, #36]	; 10da0 <_start@@Base+0xbc>
   10d78:	sub	r1, r1, r0
   10d7c:	asr	r1, r1, #2
   10d80:	add	r1, r1, r1, lsr #31
   10d84:	asrs	r1, r1, #1
   10d88:	bxeq	lr
   10d8c:	ldr	r3, [pc, #16]	; 10da4 <_start@@Base+0xc0>
   10d90:	cmp	r3, #0
   10d94:	bxeq	lr
   10d98:	bx	r3
   10d9c:	andeq	r3, r2, r8, asr #32
   10da0:	andeq	r3, r2, r8, asr #32
   10da4:	andeq	r0, r0, r0
   10da8:	push	{r4, lr}
   10dac:	ldr	r4, [pc, #24]	; 10dcc <_start@@Base+0xe8>
   10db0:	ldrb	r3, [r4]
   10db4:	cmp	r3, #0
   10db8:	popne	{r4, pc}
   10dbc:	bl	10d44 <_start@@Base+0x60>
   10dc0:	mov	r3, #1
   10dc4:	strb	r3, [r4]
   10dc8:	pop	{r4, pc}
   10dcc:	andeq	r3, r2, r0, asr r0
   10dd0:	b	10d70 <_start@@Base+0x8c>

00010dd4 <_g@@Base>:
   10dd4:	sub	sp, sp, #8
   10dd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ddc:	add	fp, sp, #28
   10de0:	sub	sp, sp, #4
   10de4:	mov	r8, r0
   10de8:	mov	r0, #8
   10dec:	mov	sl, r1
   10df0:	str	r2, [fp, #8]
   10df4:	str	r3, [fp, #12]
   10df8:	bl	10c90 <malloc@plt>
   10dfc:	mov	r9, r0
   10e00:	add	r0, fp, #8
   10e04:	mov	r1, #8
   10e08:	str	r0, [sp]
   10e0c:	mov	r0, r8
   10e10:	bl	10c54 <calloc@plt>
   10e14:	cmp	sl, #1
   10e18:	str	r0, [r9, #4]
   10e1c:	blt	10e7c <_g@@Base+0xa8>
   10e20:	mov	r7, r0
   10e24:	mov	r4, #0
   10e28:	ldr	r0, [sp]
   10e2c:	add	r1, r0, #4
   10e30:	str	r1, [sp]
   10e34:	mov	r1, r0
   10e38:	ldr	r6, [r1], #8
   10e3c:	str	r1, [sp]
   10e40:	mov	r1, #8
   10e44:	ldr	r5, [r0, #4]
   10e48:	mov	r0, #1
   10e4c:	bl	10c54 <calloc@plt>
   10e50:	add	r1, r7, r6, lsl #3
   10e54:	str	r5, [r0]
   10e58:	add	r4, r4, #2
   10e5c:	cmp	r4, sl
   10e60:	ldr	r2, [r1, #4]
   10e64:	str	r2, [r0, #4]
   10e68:	ldr	r2, [r7, r6, lsl #3]
   10e6c:	add	r2, r2, #1
   10e70:	str	r2, [r7, r6, lsl #3]
   10e74:	str	r0, [r1, #4]
   10e78:	blt	10e28 <_g@@Base+0x54>
   10e7c:	str	r8, [r9]
   10e80:	mov	r0, r9
   10e84:	sub	sp, fp, #28
   10e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e8c:	add	sp, sp, #8
   10e90:	bx	lr

00010e94 <_f@@Base>:
   10e94:	push	{r4, r5, r6, sl, fp, lr}
   10e98:	add	fp, sp, #16
   10e9c:	mov	r5, r0
   10ea0:	mov	r0, #0
   10ea4:	cmp	r5, #0
   10ea8:	beq	10ef0 <_f@@Base+0x5c>
   10eac:	mov	r4, r1
   10eb0:	ldr	r1, [r5]
   10eb4:	cmp	r1, #1
   10eb8:	blt	10ef0 <_f@@Base+0x5c>
   10ebc:	mov	r6, #0
   10ec0:	mov	r0, r5
   10ec4:	mov	r1, r6
   10ec8:	bl	12278 <vetor_elemento@@Base>
   10ecc:	cmp	r0, r4
   10ed0:	beq	10eec <_f@@Base+0x58>
   10ed4:	ldr	r0, [r5]
   10ed8:	add	r6, r6, #1
   10edc:	cmp	r6, r0
   10ee0:	blt	10ec0 <_f@@Base+0x2c>
   10ee4:	mov	r0, #0
   10ee8:	pop	{r4, r5, r6, sl, fp, pc}
   10eec:	mov	r0, #1
   10ef0:	pop	{r4, r5, r6, sl, fp, pc}

00010ef4 <teste_grafo_novo@@Base>:
   10ef4:	push	{r4, r5, fp, lr}
   10ef8:	add	fp, sp, #8
   10efc:	movw	r0, #9752	; 0x2618
   10f00:	movt	r0, #1
   10f04:	bl	10c60 <printf@plt>
   10f08:	mov	r0, #10
   10f0c:	bl	11c8c <grafo_novo@@Base>
   10f10:	cmp	r0, #0
   10f14:	beq	10f90 <teste_grafo_novo@@Base+0x9c>
   10f18:	mov	r4, r0
   10f1c:	ldr	r0, [r0]
   10f20:	mov	r5, #0
   10f24:	cmp	r0, #10
   10f28:	beq	10f3c <teste_grafo_novo@@Base+0x48>
   10f2c:	movw	r0, #9791	; 0x263f
   10f30:	movt	r0, #1
   10f34:	bl	10c60 <printf@plt>
   10f38:	mov	r5, #1
   10f3c:	mov	r0, r4
   10f40:	bl	11ce0 <grafo_apaga@@Base>
   10f44:	mov	r0, #1
   10f48:	bl	11c8c <grafo_novo@@Base>
   10f4c:	cmp	r0, #0
   10f50:	beq	10fb0 <teste_grafo_novo@@Base+0xbc>
   10f54:	mov	r4, r0
   10f58:	ldr	r0, [r0]
   10f5c:	cmp	r0, #1
   10f60:	bne	10fd0 <teste_grafo_novo@@Base+0xdc>
   10f64:	mov	r0, r4
   10f68:	bl	11ce0 <grafo_apaga@@Base>
   10f6c:	mov	r4, #1
   10f70:	cmp	r5, #0
   10f74:	bne	10fe8 <teste_grafo_novo@@Base+0xf4>
   10f78:	movw	r0, #11486	; 0x2cde
   10f7c:	movt	r0, #1
   10f80:	bl	10c84 <puts@plt>
   10f84:	mov	r4, #0
   10f88:	mov	r0, r4
   10f8c:	pop	{r4, r5, fp, pc}
   10f90:	movw	r0, #9767	; 0x2627
   10f94:	movt	r0, #1
   10f98:	bl	10c60 <printf@plt>
   10f9c:	mov	r0, #10
   10fa0:	bl	10ccc <putchar@plt>
   10fa4:	mov	r4, #1
   10fa8:	mov	r0, r4
   10fac:	pop	{r4, r5, fp, pc}
   10fb0:	movw	r0, #9767	; 0x2627
   10fb4:	movt	r0, #1
   10fb8:	bl	10c60 <printf@plt>
   10fbc:	mov	r0, #10
   10fc0:	bl	10ccc <putchar@plt>
   10fc4:	add	r4, r5, #1
   10fc8:	mov	r0, r4
   10fcc:	pop	{r4, r5, fp, pc}
   10fd0:	movw	r0, #9827	; 0x2663
   10fd4:	movt	r0, #1
   10fd8:	bl	10c60 <printf@plt>
   10fdc:	mov	r0, r4
   10fe0:	bl	11ce0 <grafo_apaga@@Base>
   10fe4:	add	r4, r5, #1
   10fe8:	mov	r0, #10
   10fec:	bl	10ccc <putchar@plt>
   10ff0:	mov	r0, r4
   10ff4:	pop	{r4, r5, fp, pc}

00010ff8 <teste_grafo_aresta@@Base>:
   10ff8:	push	{r4, r5, fp, lr}
   10ffc:	add	fp, sp, #8
   11000:	sub	sp, sp, #80	; 0x50
   11004:	mov	r0, #1
   11008:	mov	r4, #0
   1100c:	mov	r2, #6
   11010:	mov	r3, #4
   11014:	mov	r1, #3
   11018:	add	ip, sp, #52	; 0x34
   1101c:	str	r1, [sp, #68]	; 0x44
   11020:	str	r2, [sp, #64]	; 0x40
   11024:	str	r4, [sp, #72]	; 0x48
   11028:	str	r0, [sp, #76]	; 0x4c
   1102c:	mov	r1, #7
   11030:	str	r3, [sp, #32]
   11034:	str	r4, [sp, #36]	; 0x24
   11038:	str	r3, [sp, #40]	; 0x28
   1103c:	str	r2, [sp, #44]	; 0x2c
   11040:	str	r0, [sp, #48]	; 0x30
   11044:	stm	ip, {r0, r1, r2}
   11048:	mov	r2, #2
   1104c:	mov	r0, #5
   11050:	stm	sp, {r1, r2, r4}
   11054:	str	r2, [sp, #12]
   11058:	str	r1, [sp, #16]
   1105c:	str	r3, [sp, #28]
   11060:	str	r0, [sp, #20]
   11064:	str	r0, [sp, #24]
   11068:	mov	r0, #8
   1106c:	mov	r1, #22
   11070:	mov	r2, #3
   11074:	mov	r3, #2
   11078:	bl	10dd4 <_g@@Base>
   1107c:	mov	r5, r0
   11080:	movw	r0, #9862	; 0x2686
   11084:	movt	r0, #1
   11088:	bl	10c60 <printf@plt>
   1108c:	mov	r0, r5
   11090:	mov	r1, #5
   11094:	mov	r2, #4
   11098:	bl	11d58 <grafo_aresta@@Base>
   1109c:	cmp	r0, #1
   110a0:	beq	110b4 <teste_grafo_aresta@@Base+0xbc>
   110a4:	movw	r0, #9879	; 0x2697
   110a8:	movt	r0, #1
   110ac:	bl	10c60 <printf@plt>
   110b0:	mov	r4, #1
   110b4:	mov	r0, r5
   110b8:	mov	r1, #7
   110bc:	mov	r2, #6
   110c0:	bl	11d58 <grafo_aresta@@Base>
   110c4:	cmp	r0, #1
   110c8:	beq	110dc <teste_grafo_aresta@@Base+0xe4>
   110cc:	movw	r0, #9879	; 0x2697
   110d0:	movt	r0, #1
   110d4:	bl	10c60 <printf@plt>
   110d8:	add	r4, r4, #1
   110dc:	mov	r0, r5
   110e0:	mov	r1, #7
   110e4:	mov	r2, #1
   110e8:	bl	11d58 <grafo_aresta@@Base>
   110ec:	cmp	r0, #0
   110f0:	beq	11104 <teste_grafo_aresta@@Base+0x10c>
   110f4:	movw	r0, #9935	; 0x26cf
   110f8:	movt	r0, #1
   110fc:	bl	10c60 <printf@plt>
   11100:	add	r4, r4, #1
   11104:	mov	r0, #0
   11108:	mov	r1, #2
   1110c:	mov	r2, #7
   11110:	bl	11d58 <grafo_aresta@@Base>
   11114:	cmn	r0, #1
   11118:	beq	11138 <teste_grafo_aresta@@Base+0x140>
   1111c:	movw	r0, #9995	; 0x270b
   11120:	movt	r0, #1
   11124:	bl	10c60 <printf@plt>
   11128:	mov	r0, r5
   1112c:	bl	11ce0 <grafo_apaga@@Base>
   11130:	add	r4, r4, #1
   11134:	b	11148 <teste_grafo_aresta@@Base+0x150>
   11138:	mov	r0, r5
   1113c:	bl	11ce0 <grafo_apaga@@Base>
   11140:	cmp	r4, #0
   11144:	beq	1115c <teste_grafo_aresta@@Base+0x164>
   11148:	mov	r0, #10
   1114c:	bl	10ccc <putchar@plt>
   11150:	mov	r0, r4
   11154:	sub	sp, fp, #8
   11158:	pop	{r4, r5, fp, pc}
   1115c:	movw	r0, #11486	; 0x2cde
   11160:	movt	r0, #1
   11164:	bl	10c84 <puts@plt>
   11168:	mov	r4, #0
   1116c:	b	11150 <teste_grafo_aresta@@Base+0x158>

00011170 <teste_grafo_adiciona@@Base>:
   11170:	push	{r4, r5, fp, lr}
   11174:	add	fp, sp, #8
   11178:	sub	sp, sp, #8
   1117c:	mov	r0, #2
   11180:	mov	r1, #7
   11184:	mov	r2, #3
   11188:	mov	r3, #2
   1118c:	str	r1, [sp]
   11190:	str	r0, [sp, #4]
   11194:	mov	r0, #9
   11198:	mov	r1, #4
   1119c:	bl	10dd4 <_g@@Base>
   111a0:	mov	r5, r0
   111a4:	movw	r0, #10049	; 0x2741
   111a8:	movt	r0, #1
   111ac:	bl	10c60 <printf@plt>
   111b0:	mov	r0, r5
   111b4:	mov	r1, #2
   111b8:	mov	r2, #7
   111bc:	bl	11da8 <grafo_adiciona@@Base>
   111c0:	mov	r4, #0
   111c4:	cmp	r0, #1
   111c8:	beq	111dc <teste_grafo_adiciona@@Base+0x6c>
   111cc:	movw	r0, #10068	; 0x2754
   111d0:	movt	r0, #1
   111d4:	bl	10c60 <printf@plt>
   111d8:	mov	r4, #1
   111dc:	ldr	r0, [r5, #4]
   111e0:	ldr	r0, [r0, #20]
   111e4:	cmp	r0, #0
   111e8:	beq	111f8 <teste_grafo_adiciona@@Base+0x88>
   111ec:	ldr	r0, [r0]
   111f0:	cmp	r0, #7
   111f4:	beq	11208 <teste_grafo_adiciona@@Base+0x98>
   111f8:	movw	r0, #10126	; 0x278e
   111fc:	movt	r0, #1
   11200:	bl	10c60 <printf@plt>
   11204:	add	r4, r4, #1
   11208:	mov	r0, r5
   1120c:	mov	r1, #3
   11210:	mov	r2, #8
   11214:	bl	11da8 <grafo_adiciona@@Base>
   11218:	cmp	r0, #1
   1121c:	beq	11230 <teste_grafo_adiciona@@Base+0xc0>
   11220:	movw	r0, #10068	; 0x2754
   11224:	movt	r0, #1
   11228:	bl	10c60 <printf@plt>
   1122c:	add	r4, r4, #1
   11230:	ldr	r0, [r5, #4]
   11234:	ldr	r1, [r0, #28]
   11238:	cmp	r1, #0
   1123c:	beq	11258 <teste_grafo_adiciona@@Base+0xe8>
   11240:	ldr	r0, [r1, #4]
   11244:	cmp	r0, #0
   11248:	beq	11258 <teste_grafo_adiciona@@Base+0xe8>
   1124c:	ldr	r2, [r0, #4]
   11250:	cmp	r2, #0
   11254:	beq	11310 <teste_grafo_adiciona@@Base+0x1a0>
   11258:	movw	r0, #10172	; 0x27bc
   1125c:	movt	r0, #1
   11260:	bl	10c60 <printf@plt>
   11264:	add	r4, r4, #1
   11268:	mov	r0, r5
   1126c:	mov	r1, #2
   11270:	mov	r2, #7
   11274:	bl	11da8 <grafo_adiciona@@Base>
   11278:	cmp	r0, #0
   1127c:	beq	11290 <teste_grafo_adiciona@@Base+0x120>
   11280:	movw	r0, #10231	; 0x27f7
   11284:	movt	r0, #1
   11288:	bl	10c60 <printf@plt>
   1128c:	add	r4, r4, #1
   11290:	mov	r0, r5
   11294:	mov	r1, #22
   11298:	mov	r2, #7
   1129c:	bl	11da8 <grafo_adiciona@@Base>
   112a0:	cmn	r0, #1
   112a4:	beq	112b8 <teste_grafo_adiciona@@Base+0x148>
   112a8:	movw	r0, #10287	; 0x282f
   112ac:	movt	r0, #1
   112b0:	bl	10c60 <printf@plt>
   112b4:	add	r4, r4, #1
   112b8:	mov	r0, #0
   112bc:	mov	r1, #2
   112c0:	mov	r2, #7
   112c4:	bl	11da8 <grafo_adiciona@@Base>
   112c8:	cmn	r0, #1
   112cc:	beq	112ec <teste_grafo_adiciona@@Base+0x17c>
   112d0:	movw	r0, #10342	; 0x2866
   112d4:	movt	r0, #1
   112d8:	bl	10c60 <printf@plt>
   112dc:	mov	r0, r5
   112e0:	bl	11ce0 <grafo_apaga@@Base>
   112e4:	add	r4, r4, #1
   112e8:	b	112fc <teste_grafo_adiciona@@Base+0x18c>
   112ec:	mov	r0, r5
   112f0:	bl	11ce0 <grafo_apaga@@Base>
   112f4:	cmp	r4, #0
   112f8:	beq	11334 <teste_grafo_adiciona@@Base+0x1c4>
   112fc:	mov	r0, #10
   11300:	bl	10ccc <putchar@plt>
   11304:	mov	r0, r4
   11308:	sub	sp, fp, #8
   1130c:	pop	{r4, r5, fp, pc}
   11310:	ldr	r1, [r1]
   11314:	cmp	r1, #8
   11318:	beq	11348 <teste_grafo_adiciona@@Base+0x1d8>
   1131c:	cmp	r1, #2
   11320:	bne	11258 <teste_grafo_adiciona@@Base+0xe8>
   11324:	ldr	r0, [r0]
   11328:	cmp	r0, #8
   1132c:	bne	11258 <teste_grafo_adiciona@@Base+0xe8>
   11330:	b	11268 <teste_grafo_adiciona@@Base+0xf8>
   11334:	movw	r0, #11486	; 0x2cde
   11338:	movt	r0, #1
   1133c:	bl	10c84 <puts@plt>
   11340:	mov	r4, #0
   11344:	b	11304 <teste_grafo_adiciona@@Base+0x194>
   11348:	ldr	r0, [r0]
   1134c:	cmp	r0, #2
   11350:	bne	11258 <teste_grafo_adiciona@@Base+0xe8>
   11354:	b	11268 <teste_grafo_adiciona@@Base+0xf8>

00011358 <teste_grafo_remove@@Base>:
   11358:	push	{r4, r5, fp, lr}
   1135c:	add	fp, sp, #8
   11360:	sub	sp, sp, #16
   11364:	mov	r0, #1
   11368:	mov	r1, #7
   1136c:	mov	r2, #2
   11370:	mov	r3, #2
   11374:	stm	sp, {r1, r2}
   11378:	str	r1, [sp, #8]
   1137c:	str	r0, [sp, #12]
   11380:	mov	r0, #9
   11384:	mov	r1, #6
   11388:	mov	r2, #3
   1138c:	bl	10dd4 <_g@@Base>
   11390:	mov	r5, r0
   11394:	movw	r0, #10395	; 0x289b
   11398:	movt	r0, #1
   1139c:	bl	10c60 <printf@plt>
   113a0:	mov	r0, r5
   113a4:	mov	r1, #7
   113a8:	mov	r2, #1
   113ac:	bl	11e58 <grafo_remove@@Base>
   113b0:	mov	r4, #0
   113b4:	cmp	r0, #1
   113b8:	beq	113cc <teste_grafo_remove@@Base+0x74>
   113bc:	movw	r0, #10412	; 0x28ac
   113c0:	movt	r0, #1
   113c4:	bl	10c60 <printf@plt>
   113c8:	mov	r4, #1
   113cc:	ldr	r0, [r5, #4]
   113d0:	ldr	r0, [r0, #60]	; 0x3c
   113d4:	cmp	r0, #0
   113d8:	beq	113f4 <teste_grafo_remove@@Base+0x9c>
   113dc:	ldr	r1, [r0, #4]
   113e0:	cmp	r1, #0
   113e4:	bne	113f4 <teste_grafo_remove@@Base+0x9c>
   113e8:	ldr	r0, [r0]
   113ec:	cmp	r0, #2
   113f0:	beq	11404 <teste_grafo_remove@@Base+0xac>
   113f4:	movw	r0, #10470	; 0x28e6
   113f8:	movt	r0, #1
   113fc:	bl	10c60 <printf@plt>
   11400:	add	r4, r4, #1
   11404:	mov	r0, r5
   11408:	mov	r1, #7
   1140c:	mov	r2, #2
   11410:	bl	11e58 <grafo_remove@@Base>
   11414:	cmp	r0, #1
   11418:	beq	1142c <teste_grafo_remove@@Base+0xd4>
   1141c:	movw	r0, #10412	; 0x28ac
   11420:	movt	r0, #1
   11424:	bl	10c60 <printf@plt>
   11428:	add	r4, r4, #1
   1142c:	ldr	r0, [r5, #4]
   11430:	ldr	r0, [r0, #60]	; 0x3c
   11434:	cmp	r0, #0
   11438:	beq	1144c <teste_grafo_remove@@Base+0xf4>
   1143c:	movw	r0, #10470	; 0x28e6
   11440:	movt	r0, #1
   11444:	bl	10c60 <printf@plt>
   11448:	add	r4, r4, #1
   1144c:	mov	r0, r5
   11450:	mov	r1, #4
   11454:	mov	r2, #0
   11458:	bl	11e58 <grafo_remove@@Base>
   1145c:	cmp	r0, #0
   11460:	beq	11474 <teste_grafo_remove@@Base+0x11c>
   11464:	movw	r0, #10527	; 0x291f
   11468:	movt	r0, #1
   1146c:	bl	10c60 <printf@plt>
   11470:	add	r4, r4, #1
   11474:	mov	r0, r5
   11478:	mov	r1, #7
   1147c:	mov	r2, #22
   11480:	bl	11e58 <grafo_remove@@Base>
   11484:	cmn	r0, #1
   11488:	beq	114a8 <teste_grafo_remove@@Base+0x150>
   1148c:	movw	r0, #10587	; 0x295b
   11490:	movt	r0, #1
   11494:	bl	10c60 <printf@plt>
   11498:	mov	r0, r5
   1149c:	bl	11ce0 <grafo_apaga@@Base>
   114a0:	add	r4, r4, #1
   114a4:	b	114b8 <teste_grafo_remove@@Base+0x160>
   114a8:	mov	r0, r5
   114ac:	bl	11ce0 <grafo_apaga@@Base>
   114b0:	cmp	r4, #0
   114b4:	beq	114cc <teste_grafo_remove@@Base+0x174>
   114b8:	mov	r0, #10
   114bc:	bl	10ccc <putchar@plt>
   114c0:	mov	r0, r4
   114c4:	sub	sp, fp, #8
   114c8:	pop	{r4, r5, fp, pc}
   114cc:	movw	r0, #11486	; 0x2cde
   114d0:	movt	r0, #1
   114d4:	bl	10c84 <puts@plt>
   114d8:	mov	r4, #0
   114dc:	b	114c0 <teste_grafo_remove@@Base+0x168>

000114e0 <teste_v_sucessores@@Base>:
   114e0:	push	{r4, r5, r6, r7, fp, lr}
   114e4:	add	fp, sp, #16
   114e8:	sub	sp, sp, #80	; 0x50
   114ec:	mov	r1, #6
   114f0:	mov	r0, #3
   114f4:	mov	r6, #1
   114f8:	mov	r7, #0
   114fc:	mov	r2, #4
   11500:	mov	r3, #2
   11504:	str	r0, [sp, #68]	; 0x44
   11508:	mov	r0, #7
   1150c:	str	r1, [sp, #64]	; 0x40
   11510:	str	r1, [sp, #44]	; 0x2c
   11514:	str	r1, [sp, #60]	; 0x3c
   11518:	mov	r1, #5
   1151c:	str	r7, [sp, #72]	; 0x48
   11520:	str	r6, [sp, #76]	; 0x4c
   11524:	str	r2, [sp, #32]
   11528:	str	r7, [sp, #36]	; 0x24
   1152c:	str	r2, [sp, #40]	; 0x28
   11530:	str	r6, [sp, #48]	; 0x30
   11534:	str	r6, [sp, #52]	; 0x34
   11538:	str	r0, [sp, #56]	; 0x38
   1153c:	stm	sp, {r0, r3, r7}
   11540:	str	r3, [sp, #12]
   11544:	str	r0, [sp, #16]
   11548:	str	r2, [sp, #28]
   1154c:	str	r1, [sp, #20]
   11550:	str	r1, [sp, #24]
   11554:	mov	r0, #8
   11558:	mov	r1, #22
   1155c:	mov	r2, #3
   11560:	mov	r3, #2
   11564:	bl	10dd4 <_g@@Base>
   11568:	mov	r4, r0
   1156c:	movw	r0, #10643	; 0x2993
   11570:	movt	r0, #1
   11574:	bl	10c60 <printf@plt>
   11578:	mov	r0, r4
   1157c:	mov	r1, #7
   11580:	bl	11f04 <v_sucessores@@Base>
   11584:	cmp	r0, #0
   11588:	beq	115e4 <teste_v_sucessores@@Base+0x104>
   1158c:	mov	r5, r0
   11590:	ldr	r0, [r0]
   11594:	cmp	r0, #3
   11598:	beq	115b8 <teste_v_sucessores@@Base+0xd8>
   1159c:	movw	r0, #10705	; 0x29d1
   115a0:	movt	r0, #1
   115a4:	bl	10c60 <printf@plt>
   115a8:	ldr	r0, [r5]
   115ac:	mov	r7, #1
   115b0:	cmp	r0, #1
   115b4:	blt	11658 <teste_v_sucessores@@Base+0x178>
   115b8:	mov	r6, #0
   115bc:	mov	r0, r5
   115c0:	mov	r1, r6
   115c4:	bl	12278 <vetor_elemento@@Base>
   115c8:	ldr	r1, [r5]
   115cc:	cmp	r0, #2
   115d0:	beq	115f4 <teste_v_sucessores@@Base+0x114>
   115d4:	add	r6, r6, #1
   115d8:	cmp	r6, r1
   115dc:	blt	115bc <teste_v_sucessores@@Base+0xdc>
   115e0:	b	11658 <teste_v_sucessores@@Base+0x178>
   115e4:	movw	r0, #10660	; 0x29a4
   115e8:	movt	r0, #1
   115ec:	bl	10c60 <printf@plt>
   115f0:	b	116e4 <teste_v_sucessores@@Base+0x204>
   115f4:	cmp	r1, #1
   115f8:	blt	11658 <teste_v_sucessores@@Base+0x178>
   115fc:	mov	r6, #0
   11600:	mov	r0, r5
   11604:	mov	r1, r6
   11608:	bl	12278 <vetor_elemento@@Base>
   1160c:	ldr	r1, [r5]
   11610:	cmp	r0, #5
   11614:	beq	11628 <teste_v_sucessores@@Base+0x148>
   11618:	add	r6, r6, #1
   1161c:	cmp	r6, r1
   11620:	blt	11600 <teste_v_sucessores@@Base+0x120>
   11624:	b	11658 <teste_v_sucessores@@Base+0x178>
   11628:	cmp	r1, #1
   1162c:	blt	11658 <teste_v_sucessores@@Base+0x178>
   11630:	mov	r6, #0
   11634:	mov	r0, r5
   11638:	mov	r1, r6
   1163c:	bl	12278 <vetor_elemento@@Base>
   11640:	cmp	r0, #6
   11644:	beq	11668 <teste_v_sucessores@@Base+0x188>
   11648:	ldr	r0, [r5]
   1164c:	add	r6, r6, #1
   11650:	cmp	r6, r0
   11654:	blt	11634 <teste_v_sucessores@@Base+0x154>
   11658:	movw	r0, #10748	; 0x29fc
   1165c:	movt	r0, #1
   11660:	bl	10c60 <printf@plt>
   11664:	add	r7, r7, #1
   11668:	mov	r0, r5
   1166c:	bl	1220c <vetor_apaga@@Base>
   11670:	mov	r0, r4
   11674:	mov	r1, #2
   11678:	bl	11f04 <v_sucessores@@Base>
   1167c:	cmp	r0, #0
   11680:	beq	116a8 <teste_v_sucessores@@Base+0x1c8>
   11684:	mov	r5, r0
   11688:	ldr	r0, [r0]
   1168c:	cmp	r0, #0
   11690:	beq	116c8 <teste_v_sucessores@@Base+0x1e8>
   11694:	movw	r0, #10854	; 0x2a66
   11698:	movt	r0, #1
   1169c:	bl	10c60 <printf@plt>
   116a0:	add	r6, r7, #1
   116a4:	b	116cc <teste_v_sucessores@@Base+0x1ec>
   116a8:	movw	r0, #10792	; 0x2a28
   116ac:	movt	r0, #1
   116b0:	bl	10c60 <printf@plt>
   116b4:	mov	r0, #1
   116b8:	cmp	r0, #0
   116bc:	beq	116f0 <teste_v_sucessores@@Base+0x210>
   116c0:	add	r6, r7, #1
   116c4:	b	116e4 <teste_v_sucessores@@Base+0x204>
   116c8:	mov	r6, r7
   116cc:	mov	r0, r5
   116d0:	bl	1220c <vetor_apaga@@Base>
   116d4:	mov	r0, r4
   116d8:	bl	11ce0 <grafo_apaga@@Base>
   116dc:	cmp	r6, #0
   116e0:	beq	116f0 <teste_v_sucessores@@Base+0x210>
   116e4:	mov	r0, #10
   116e8:	bl	10ccc <putchar@plt>
   116ec:	b	11700 <teste_v_sucessores@@Base+0x220>
   116f0:	movw	r0, #11486	; 0x2cde
   116f4:	movt	r0, #1
   116f8:	bl	10c84 <puts@plt>
   116fc:	mov	r6, #0
   11700:	mov	r0, r6
   11704:	sub	sp, fp, #16
   11708:	pop	{r4, r5, r6, r7, fp, pc}

0001170c <teste_v_antecessores@@Base>:
   1170c:	push	{r4, r5, r6, r7, fp, lr}
   11710:	add	fp, sp, #16
   11714:	sub	sp, sp, #80	; 0x50
   11718:	mov	r1, #6
   1171c:	mov	r0, #3
   11720:	mov	r6, #1
   11724:	mov	r7, #0
   11728:	mov	r2, #4
   1172c:	mov	r3, #2
   11730:	str	r0, [sp, #68]	; 0x44
   11734:	mov	r0, #7
   11738:	str	r1, [sp, #64]	; 0x40
   1173c:	str	r1, [sp, #44]	; 0x2c
   11740:	str	r1, [sp, #60]	; 0x3c
   11744:	mov	r1, #5
   11748:	str	r7, [sp, #72]	; 0x48
   1174c:	str	r6, [sp, #76]	; 0x4c
   11750:	str	r2, [sp, #32]
   11754:	str	r7, [sp, #36]	; 0x24
   11758:	str	r2, [sp, #40]	; 0x28
   1175c:	str	r6, [sp, #48]	; 0x30
   11760:	str	r6, [sp, #52]	; 0x34
   11764:	str	r0, [sp, #56]	; 0x38
   11768:	stm	sp, {r0, r3, r7}
   1176c:	str	r3, [sp, #12]
   11770:	str	r0, [sp, #16]
   11774:	str	r2, [sp, #28]
   11778:	str	r1, [sp, #20]
   1177c:	str	r1, [sp, #24]
   11780:	mov	r0, #8
   11784:	mov	r1, #22
   11788:	mov	r2, #3
   1178c:	mov	r3, #2
   11790:	bl	10dd4 <_g@@Base>
   11794:	mov	r4, r0
   11798:	movw	r0, #10900	; 0x2a94
   1179c:	movt	r0, #1
   117a0:	bl	10c60 <printf@plt>
   117a4:	mov	r0, r4
   117a8:	mov	r1, #2
   117ac:	bl	11f7c <v_antecessores@@Base>
   117b0:	cmp	r0, #0
   117b4:	beq	11810 <teste_v_antecessores@@Base+0x104>
   117b8:	mov	r5, r0
   117bc:	ldr	r0, [r0]
   117c0:	cmp	r0, #3
   117c4:	beq	117e4 <teste_v_antecessores@@Base+0xd8>
   117c8:	movw	r0, #10966	; 0x2ad6
   117cc:	movt	r0, #1
   117d0:	bl	10c60 <printf@plt>
   117d4:	ldr	r0, [r5]
   117d8:	mov	r7, #1
   117dc:	cmp	r0, #1
   117e0:	blt	11884 <teste_v_antecessores@@Base+0x178>
   117e4:	mov	r6, #0
   117e8:	mov	r0, r5
   117ec:	mov	r1, r6
   117f0:	bl	12278 <vetor_elemento@@Base>
   117f4:	ldr	r1, [r5]
   117f8:	cmp	r0, #0
   117fc:	beq	11820 <teste_v_antecessores@@Base+0x114>
   11800:	add	r6, r6, #1
   11804:	cmp	r6, r1
   11808:	blt	117e8 <teste_v_antecessores@@Base+0xdc>
   1180c:	b	11884 <teste_v_antecessores@@Base+0x178>
   11810:	movw	r0, #10919	; 0x2aa7
   11814:	movt	r0, #1
   11818:	bl	10c60 <printf@plt>
   1181c:	b	11910 <teste_v_antecessores@@Base+0x204>
   11820:	cmp	r1, #1
   11824:	blt	11884 <teste_v_antecessores@@Base+0x178>
   11828:	mov	r6, #0
   1182c:	mov	r0, r5
   11830:	mov	r1, r6
   11834:	bl	12278 <vetor_elemento@@Base>
   11838:	ldr	r1, [r5]
   1183c:	cmp	r0, #3
   11840:	beq	11854 <teste_v_antecessores@@Base+0x148>
   11844:	add	r6, r6, #1
   11848:	cmp	r6, r1
   1184c:	blt	1182c <teste_v_antecessores@@Base+0x120>
   11850:	b	11884 <teste_v_antecessores@@Base+0x178>
   11854:	cmp	r1, #1
   11858:	blt	11884 <teste_v_antecessores@@Base+0x178>
   1185c:	mov	r6, #0
   11860:	mov	r0, r5
   11864:	mov	r1, r6
   11868:	bl	12278 <vetor_elemento@@Base>
   1186c:	cmp	r0, #7
   11870:	beq	11894 <teste_v_antecessores@@Base+0x188>
   11874:	ldr	r0, [r5]
   11878:	add	r6, r6, #1
   1187c:	cmp	r6, r0
   11880:	blt	11860 <teste_v_antecessores@@Base+0x154>
   11884:	movw	r0, #11011	; 0x2b03
   11888:	movt	r0, #1
   1188c:	bl	10c60 <printf@plt>
   11890:	add	r7, r7, #1
   11894:	mov	r0, r5
   11898:	bl	1220c <vetor_apaga@@Base>
   1189c:	mov	r0, r4
   118a0:	mov	r1, #7
   118a4:	bl	11f7c <v_antecessores@@Base>
   118a8:	cmp	r0, #0
   118ac:	beq	118d4 <teste_v_antecessores@@Base+0x1c8>
   118b0:	mov	r5, r0
   118b4:	ldr	r0, [r0]
   118b8:	cmp	r0, #0
   118bc:	beq	118f4 <teste_v_antecessores@@Base+0x1e8>
   118c0:	movw	r0, #11121	; 0x2b71
   118c4:	movt	r0, #1
   118c8:	bl	10c60 <printf@plt>
   118cc:	add	r6, r7, #1
   118d0:	b	118f8 <teste_v_antecessores@@Base+0x1ec>
   118d4:	movw	r0, #11057	; 0x2b31
   118d8:	movt	r0, #1
   118dc:	bl	10c60 <printf@plt>
   118e0:	mov	r0, #1
   118e4:	cmp	r0, #0
   118e8:	beq	1191c <teste_v_antecessores@@Base+0x210>
   118ec:	add	r6, r7, #1
   118f0:	b	11910 <teste_v_antecessores@@Base+0x204>
   118f4:	mov	r6, r7
   118f8:	mov	r0, r5
   118fc:	bl	1220c <vetor_apaga@@Base>
   11900:	mov	r0, r4
   11904:	bl	11ce0 <grafo_apaga@@Base>
   11908:	cmp	r6, #0
   1190c:	beq	1191c <teste_v_antecessores@@Base+0x210>
   11910:	mov	r0, #10
   11914:	bl	10ccc <putchar@plt>
   11918:	b	1192c <teste_v_antecessores@@Base+0x220>
   1191c:	movw	r0, #11486	; 0x2cde
   11920:	movt	r0, #1
   11924:	bl	10c84 <puts@plt>
   11928:	mov	r6, #0
   1192c:	mov	r0, r6
   11930:	sub	sp, fp, #16
   11934:	pop	{r4, r5, r6, r7, fp, pc}

00011938 <teste_v_grau@@Base>:
   11938:	push	{r4, r5, fp, lr}
   1193c:	add	fp, sp, #8
   11940:	sub	sp, sp, #80	; 0x50
   11944:	mov	r0, #1
   11948:	mov	r4, #0
   1194c:	mov	r2, #6
   11950:	mov	r3, #4
   11954:	mov	r1, #3
   11958:	add	ip, sp, #52	; 0x34
   1195c:	str	r1, [sp, #68]	; 0x44
   11960:	str	r2, [sp, #64]	; 0x40
   11964:	str	r4, [sp, #72]	; 0x48
   11968:	str	r0, [sp, #76]	; 0x4c
   1196c:	mov	r1, #7
   11970:	str	r3, [sp, #32]
   11974:	str	r4, [sp, #36]	; 0x24
   11978:	str	r3, [sp, #40]	; 0x28
   1197c:	str	r2, [sp, #44]	; 0x2c
   11980:	str	r0, [sp, #48]	; 0x30
   11984:	stm	ip, {r0, r1, r2}
   11988:	mov	r2, #2
   1198c:	mov	r0, #5
   11990:	stm	sp, {r1, r2, r4}
   11994:	str	r2, [sp, #12]
   11998:	str	r1, [sp, #16]
   1199c:	str	r3, [sp, #28]
   119a0:	str	r0, [sp, #20]
   119a4:	str	r0, [sp, #24]
   119a8:	mov	r0, #8
   119ac:	mov	r1, #22
   119b0:	mov	r2, #3
   119b4:	mov	r3, #2
   119b8:	bl	10dd4 <_g@@Base>
   119bc:	mov	r5, r0
   119c0:	movw	r0, #11169	; 0x2ba1
   119c4:	movt	r0, #1
   119c8:	bl	10c60 <printf@plt>
   119cc:	mov	r0, r5
   119d0:	mvn	r1, #3
   119d4:	bl	1201c <v_grau@@Base>
   119d8:	cmn	r0, #1
   119dc:	beq	119f0 <teste_v_grau@@Base+0xb8>
   119e0:	movw	r0, #11180	; 0x2bac
   119e4:	movt	r0, #1
   119e8:	bl	10c60 <printf@plt>
   119ec:	mov	r4, #1
   119f0:	mov	r0, r5
   119f4:	mov	r1, #7
   119f8:	bl	1201c <v_grau@@Base>
   119fc:	cmp	r0, #3
   11a00:	beq	11a14 <teste_v_grau@@Base+0xdc>
   11a04:	movw	r0, #11228	; 0x2bdc
   11a08:	movt	r0, #1
   11a0c:	bl	10c60 <printf@plt>
   11a10:	add	r4, r4, #1
   11a14:	mov	r0, r5
   11a18:	mov	r1, #5
   11a1c:	bl	1201c <v_grau@@Base>
   11a20:	cmp	r0, #2
   11a24:	bne	11a4c <teste_v_grau@@Base+0x114>
   11a28:	mov	r0, r5
   11a2c:	bl	11ce0 <grafo_apaga@@Base>
   11a30:	cmp	r4, #0
   11a34:	bne	11a64 <teste_v_grau@@Base+0x12c>
   11a38:	movw	r0, #11486	; 0x2cde
   11a3c:	movt	r0, #1
   11a40:	bl	10c84 <puts@plt>
   11a44:	mov	r4, #0
   11a48:	b	11a6c <teste_v_grau@@Base+0x134>
   11a4c:	movw	r0, #11275	; 0x2c0b
   11a50:	movt	r0, #1
   11a54:	bl	10c60 <printf@plt>
   11a58:	mov	r0, r5
   11a5c:	bl	11ce0 <grafo_apaga@@Base>
   11a60:	add	r4, r4, #1
   11a64:	mov	r0, #10
   11a68:	bl	10ccc <putchar@plt>
   11a6c:	mov	r0, r4
   11a70:	sub	sp, fp, #8
   11a74:	pop	{r4, r5, fp, pc}

00011a78 <teste_v_celebridade@@Base>:
   11a78:	push	{r4, r5, fp, lr}
   11a7c:	add	fp, sp, #8
   11a80:	sub	sp, sp, #112	; 0x70
   11a84:	mov	r1, #4
   11a88:	add	r0, sp, #96	; 0x60
   11a8c:	mov	r2, #2
   11a90:	mov	ip, #5
   11a94:	mov	r3, #6
   11a98:	mov	r4, #1
   11a9c:	mov	r5, #0
   11aa0:	add	lr, sp, #40	; 0x28
   11aa4:	stm	r0, {r1, r2, ip}
   11aa8:	mov	r0, #3
   11aac:	str	r2, [sp, #108]	; 0x6c
   11ab0:	str	r3, [sp, #64]	; 0x40
   11ab4:	str	r5, [sp, #72]	; 0x48
   11ab8:	str	r4, [sp, #76]	; 0x4c
   11abc:	str	r4, [sp, #80]	; 0x50
   11ac0:	str	r2, [sp, #84]	; 0x54
   11ac4:	str	r3, [sp, #88]	; 0x58
   11ac8:	str	r2, [sp, #92]	; 0x5c
   11acc:	str	r1, [sp, #32]
   11ad0:	str	r5, [sp, #36]	; 0x24
   11ad4:	str	r0, [sp, #68]	; 0x44
   11ad8:	mov	r0, #7
   11adc:	stm	lr, {r1, r3, r4}
   11ae0:	str	r3, [sp, #60]	; 0x3c
   11ae4:	str	r4, [sp, #52]	; 0x34
   11ae8:	mov	r3, #2
   11aec:	str	r0, [sp, #56]	; 0x38
   11af0:	stm	sp, {r0, r2, r5}
   11af4:	str	r2, [sp, #12]
   11af8:	str	r0, [sp, #16]
   11afc:	str	r1, [sp, #28]
   11b00:	mov	r0, #8
   11b04:	mov	r1, #30
   11b08:	mov	r2, #3
   11b0c:	str	ip, [sp, #20]
   11b10:	str	ip, [sp, #24]
   11b14:	bl	10dd4 <_g@@Base>
   11b18:	mov	r4, r0
   11b1c:	movw	r0, #11322	; 0x2c3a
   11b20:	movt	r0, #1
   11b24:	bl	10c60 <printf@plt>
   11b28:	mov	r0, r4
   11b2c:	mov	r1, #7
   11b30:	bl	12148 <v_celebridade@@Base>
   11b34:	cmp	r0, #0
   11b38:	beq	11b4c <teste_v_celebridade@@Base+0xd4>
   11b3c:	movw	r0, #11340	; 0x2c4c
   11b40:	movt	r0, #1
   11b44:	bl	10c60 <printf@plt>
   11b48:	mov	r5, #1
   11b4c:	mov	r0, r4
   11b50:	mov	r1, #2
   11b54:	bl	12148 <v_celebridade@@Base>
   11b58:	cmp	r0, #1
   11b5c:	bne	11b88 <teste_v_celebridade@@Base+0x110>
   11b60:	mov	r0, r4
   11b64:	bl	11ce0 <grafo_apaga@@Base>
   11b68:	mov	r4, #1
   11b6c:	cmp	r5, #0
   11b70:	bne	11ba0 <teste_v_celebridade@@Base+0x128>
   11b74:	movw	r0, #11486	; 0x2cde
   11b78:	movt	r0, #1
   11b7c:	bl	10c84 <puts@plt>
   11b80:	mov	r4, #0
   11b84:	b	11ba8 <teste_v_celebridade@@Base+0x130>
   11b88:	movw	r0, #11396	; 0x2c84
   11b8c:	movt	r0, #1
   11b90:	bl	10c60 <printf@plt>
   11b94:	mov	r0, r4
   11b98:	bl	11ce0 <grafo_apaga@@Base>
   11b9c:	add	r4, r5, #1
   11ba0:	mov	r0, #10
   11ba4:	bl	10ccc <putchar@plt>
   11ba8:	mov	r0, r4
   11bac:	sub	sp, fp, #8
   11bb0:	pop	{r4, r5, fp, pc}

00011bb4 <main@@Base>:
   11bb4:	push	{r4, sl, fp, lr}
   11bb8:	add	fp, sp, #8
   11bbc:	movw	r0, #12364	; 0x304c
   11bc0:	mov	r1, #0
   11bc4:	mov	r2, #2
   11bc8:	mov	r3, #0
   11bcc:	movt	r0, #2
   11bd0:	ldr	r0, [r0]
   11bd4:	bl	10cb4 <setvbuf@plt>
   11bd8:	movw	r0, #12360	; 0x3048
   11bdc:	mov	r1, #0
   11be0:	mov	r2, #2
   11be4:	mov	r3, #0
   11be8:	movt	r0, #2
   11bec:	ldr	r0, [r0]
   11bf0:	bl	10cb4 <setvbuf@plt>
   11bf4:	bl	10ef4 <teste_grafo_novo@@Base>
   11bf8:	mov	r4, r0
   11bfc:	bl	10ff8 <teste_grafo_aresta@@Base>
   11c00:	add	r4, r0, r4
   11c04:	bl	11170 <teste_grafo_adiciona@@Base>
   11c08:	add	r4, r4, r0
   11c0c:	bl	11358 <teste_grafo_remove@@Base>
   11c10:	add	r4, r4, r0
   11c14:	bl	114e0 <teste_v_sucessores@@Base>
   11c18:	add	r4, r4, r0
   11c1c:	bl	1170c <teste_v_antecessores@@Base>
   11c20:	add	r4, r4, r0
   11c24:	bl	11938 <teste_v_grau@@Base>
   11c28:	add	r4, r4, r0
   11c2c:	bl	11a78 <teste_v_celebridade@@Base>
   11c30:	adds	r1, r4, r0
   11c34:	beq	11c4c <main@@Base+0x98>
   11c38:	movw	r0, #11448	; 0x2cb8
   11c3c:	movt	r0, #1
   11c40:	bl	10c60 <printf@plt>
   11c44:	mov	r0, #0
   11c48:	pop	{r4, sl, fp, pc}
   11c4c:	movw	r0, #11489	; 0x2ce1
   11c50:	movt	r0, #1
   11c54:	bl	10c84 <puts@plt>
   11c58:	mov	r0, #0
   11c5c:	pop	{r4, sl, fp, pc}

00011c60 <cria_elem@@Base>:
   11c60:	push	{r4, sl, fp, lr}
   11c64:	add	fp, sp, #8
   11c68:	mov	r4, r0
   11c6c:	mov	r0, #8
   11c70:	bl	10c90 <malloc@plt>
   11c74:	cmp	r0, #0
   11c78:	moveq	r0, #0
   11c7c:	movne	r1, #0
   11c80:	strne	r4, [r0]
   11c84:	strne	r1, [r0, #4]
   11c88:	pop	{r4, sl, fp, pc}

00011c8c <grafo_novo@@Base>:
   11c8c:	push	{r4, r5, fp, lr}
   11c90:	add	fp, sp, #8
   11c94:	cmp	r0, #1
   11c98:	blt	11cd4 <grafo_novo@@Base+0x48>
   11c9c:	mov	r5, r0
   11ca0:	mov	r0, #8
   11ca4:	bl	10c90 <malloc@plt>
   11ca8:	str	r5, [r0]
   11cac:	lsl	r5, r5, #3
   11cb0:	mov	r4, r0
   11cb4:	mov	r0, r5
   11cb8:	bl	10c90 <malloc@plt>
   11cbc:	mov	r1, #0
   11cc0:	mov	r2, r5
   11cc4:	str	r0, [r4, #4]
   11cc8:	bl	10cc0 <memset@plt>
   11ccc:	mov	r0, r4
   11cd0:	pop	{r4, r5, fp, pc}
   11cd4:	mov	r4, #0
   11cd8:	mov	r0, r4
   11cdc:	pop	{r4, r5, fp, pc}

00011ce0 <grafo_apaga@@Base>:
   11ce0:	cmp	r0, #0
   11ce4:	bxeq	lr
   11ce8:	push	{r4, r5, r6, sl, fp, lr}
   11cec:	add	fp, sp, #16
   11cf0:	ldr	r1, [r0]
   11cf4:	mov	r4, r0
   11cf8:	cmp	r1, #1
   11cfc:	blt	11d44 <grafo_apaga@@Base+0x64>
   11d00:	mov	r5, #0
   11d04:	b	11d14 <grafo_apaga@@Base+0x34>
   11d08:	add	r5, r5, #1
   11d0c:	cmp	r5, r1
   11d10:	bge	11d44 <grafo_apaga@@Base+0x64>
   11d14:	ldr	r0, [r4, #4]
   11d18:	add	r0, r0, r5, lsl #3
   11d1c:	ldr	r0, [r0, #4]
   11d20:	cmp	r0, #0
   11d24:	beq	11d08 <grafo_apaga@@Base+0x28>
   11d28:	ldr	r6, [r0, #4]
   11d2c:	bl	10c6c <free@plt>
   11d30:	cmp	r6, #0
   11d34:	mov	r0, r6
   11d38:	bne	11d28 <grafo_apaga@@Base+0x48>
   11d3c:	ldr	r1, [r4]
   11d40:	b	11d08 <grafo_apaga@@Base+0x28>
   11d44:	ldr	r0, [r4, #4]
   11d48:	bl	10c6c <free@plt>
   11d4c:	mov	r0, r4
   11d50:	pop	{r4, r5, r6, sl, fp, lr}
   11d54:	b	10c6c <free@plt>

00011d58 <grafo_aresta@@Base>:
   11d58:	mov	r3, r0
   11d5c:	mvn	r0, #0
   11d60:	cmp	r3, #0
   11d64:	beq	11d7c <grafo_aresta@@Base+0x24>
   11d68:	ldr	ip, [r3]
   11d6c:	cmp	ip, r1
   11d70:	movge	r0, #0
   11d74:	cmpge	ip, r2
   11d78:	bge	11d80 <grafo_aresta@@Base+0x28>
   11d7c:	bx	lr
   11d80:	ldr	r3, [r3, #4]
   11d84:	add	r1, r3, r1, lsl #3
   11d88:	ldr	r1, [r1, #4]
   11d8c:	cmp	r1, #0
   11d90:	bxeq	lr
   11d94:	ldr	r3, [r1]
   11d98:	cmp	r3, r2
   11d9c:	bne	11d88 <grafo_aresta@@Base+0x30>
   11da0:	mov	r0, #1
   11da4:	bx	lr

00011da8 <grafo_adiciona@@Base>:
   11da8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11dac:	add	fp, sp, #24
   11db0:	mov	r5, r0
   11db4:	mvn	r0, #0
   11db8:	cmp	r5, #0
   11dbc:	beq	11dd8 <grafo_adiciona@@Base+0x30>
   11dc0:	mov	r4, r1
   11dc4:	ldr	r1, [r5]
   11dc8:	cmp	r1, r4
   11dcc:	movge	r6, r2
   11dd0:	cmpge	r1, r2
   11dd4:	bge	11ddc <grafo_adiciona@@Base+0x34>
   11dd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11ddc:	ldr	r0, [r5, #4]
   11de0:	add	r7, r0, r4, lsl #3
   11de4:	ldr	r8, [r7, #4]!
   11de8:	cmp	r8, #0
   11dec:	beq	11e0c <grafo_adiciona@@Base+0x64>
   11df0:	mov	r0, r8
   11df4:	ldr	r1, [r0]
   11df8:	cmp	r1, r6
   11dfc:	beq	11e50 <grafo_adiciona@@Base+0xa8>
   11e00:	ldr	r0, [r0, #4]
   11e04:	cmp	r0, #0
   11e08:	bne	11df4 <grafo_adiciona@@Base+0x4c>
   11e0c:	mov	r0, #8
   11e10:	bl	10c90 <malloc@plt>
   11e14:	cmp	r0, #0
   11e18:	moveq	r0, #0
   11e1c:	movne	r1, #0
   11e20:	strne	r6, [r0]
   11e24:	strne	r1, [r0, #4]
   11e28:	str	r0, [r7]
   11e2c:	ldr	r0, [r5, #4]
   11e30:	add	r1, r0, r4, lsl #3
   11e34:	ldr	r1, [r1, #4]
   11e38:	str	r8, [r1, #4]
   11e3c:	ldr	r1, [r0]
   11e40:	add	r1, r1, #1
   11e44:	str	r1, [r0]
   11e48:	mov	r0, #1
   11e4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11e50:	mov	r0, #0
   11e54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011e58 <grafo_remove@@Base>:
   11e58:	push	{r4, sl, fp, lr}
   11e5c:	add	fp, sp, #8
   11e60:	mov	r4, r0
   11e64:	mvn	r0, #0
   11e68:	cmp	r4, #0
   11e6c:	beq	11e80 <grafo_remove@@Base+0x28>
   11e70:	ldr	r3, [r4]
   11e74:	cmp	r3, r1
   11e78:	cmpge	r3, r2
   11e7c:	bge	11e84 <grafo_remove@@Base+0x2c>
   11e80:	pop	{r4, sl, fp, pc}
   11e84:	ldr	ip, [r4, #4]
   11e88:	mov	r0, #0
   11e8c:	add	lr, ip, r1, lsl #3
   11e90:	ldr	r1, [lr, #4]!
   11e94:	cmp	r1, #0
   11e98:	beq	11e80 <grafo_remove@@Base+0x28>
   11e9c:	ldr	r3, [r1]
   11ea0:	cmp	r3, r2
   11ea4:	bne	11ec4 <grafo_remove@@Base+0x6c>
   11ea8:	ldr	r0, [r1, #4]
   11eac:	str	r0, [lr]
   11eb0:	ldr	r0, [r4, #4]
   11eb4:	ldr	r2, [r0]
   11eb8:	sub	r2, r2, #1
   11ebc:	str	r2, [r0]
   11ec0:	b	11ef4 <grafo_remove@@Base+0x9c>
   11ec4:	mov	r3, r1
   11ec8:	ldr	r1, [r1, #4]
   11ecc:	cmp	r1, #0
   11ed0:	beq	11e80 <grafo_remove@@Base+0x28>
   11ed4:	ldr	r4, [r1]
   11ed8:	cmp	r4, r2
   11edc:	bne	11ec4 <grafo_remove@@Base+0x6c>
   11ee0:	ldr	r0, [r1, #4]
   11ee4:	str	r0, [r3, #4]
   11ee8:	ldr	r0, [ip]
   11eec:	sub	r0, r0, #1
   11ef0:	str	r0, [ip]
   11ef4:	mov	r0, r1
   11ef8:	bl	10c6c <free@plt>
   11efc:	mov	r0, #1
   11f00:	pop	{r4, sl, fp, pc}

00011f04 <v_sucessores@@Base>:
   11f04:	push	{r4, r5, r6, sl, fp, lr}
   11f08:	add	fp, sp, #16
   11f0c:	mov	r4, #0
   11f10:	cmp	r0, #0
   11f14:	beq	11f74 <v_sucessores@@Base+0x70>
   11f18:	mov	r5, r1
   11f1c:	cmp	r1, #0
   11f20:	bmi	11f74 <v_sucessores@@Base+0x70>
   11f24:	mov	r6, r0
   11f28:	ldr	r0, [r0]
   11f2c:	cmp	r0, r5
   11f30:	ble	11f74 <v_sucessores@@Base+0x70>
   11f34:	bl	121e0 <vetor_novo@@Base>
   11f38:	mov	r4, r0
   11f3c:	ldr	r0, [r6, #4]
   11f40:	add	r0, r0, r5, lsl #3
   11f44:	ldr	r6, [r0, #4]
   11f48:	cmp	r6, #0
   11f4c:	beq	11f74 <v_sucessores@@Base+0x70>
   11f50:	mov	r5, #0
   11f54:	ldr	r1, [r6]
   11f58:	mov	r0, r4
   11f5c:	mov	r2, r5
   11f60:	bl	122a8 <vetor_insere@@Base>
   11f64:	ldr	r6, [r6, #4]
   11f68:	add	r5, r5, #1
   11f6c:	cmp	r6, #0
   11f70:	bne	11f54 <v_sucessores@@Base+0x50>
   11f74:	mov	r0, r4
   11f78:	pop	{r4, r5, r6, sl, fp, pc}

00011f7c <v_antecessores@@Base>:
   11f7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11f80:	add	fp, sp, #24
   11f84:	mov	r8, #0
   11f88:	cmp	r0, #0
   11f8c:	beq	12014 <v_antecessores@@Base+0x98>
   11f90:	mov	r5, r1
   11f94:	cmp	r1, #0
   11f98:	bmi	12014 <v_antecessores@@Base+0x98>
   11f9c:	mov	r6, r0
   11fa0:	ldr	r0, [r0]
   11fa4:	cmp	r0, r5
   11fa8:	ble	12014 <v_antecessores@@Base+0x98>
   11fac:	bl	121e0 <vetor_novo@@Base>
   11fb0:	mov	r8, r0
   11fb4:	ldr	r0, [r6]
   11fb8:	cmp	r0, #1
   11fbc:	blt	12014 <v_antecessores@@Base+0x98>
   11fc0:	mov	r7, #0
   11fc4:	mov	r4, #0
   11fc8:	b	11fd8 <v_antecessores@@Base+0x5c>
   11fcc:	add	r4, r4, #1
   11fd0:	cmp	r4, r0
   11fd4:	bge	12014 <v_antecessores@@Base+0x98>
   11fd8:	ldr	r1, [r6, #4]
   11fdc:	add	r1, r1, r4, lsl #3
   11fe0:	ldr	r1, [r1, #4]
   11fe4:	cmp	r1, #0
   11fe8:	beq	11fcc <v_antecessores@@Base+0x50>
   11fec:	ldr	r2, [r1]
   11ff0:	cmp	r2, r5
   11ff4:	bne	11fe0 <v_antecessores@@Base+0x64>
   11ff8:	mov	r0, r8
   11ffc:	mov	r1, r4
   12000:	mov	r2, r7
   12004:	bl	122a8 <vetor_insere@@Base>
   12008:	ldr	r0, [r6]
   1200c:	add	r7, r7, #1
   12010:	b	11fcc <v_antecessores@@Base+0x50>
   12014:	mov	r0, r8
   12018:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001201c <v_grau@@Base>:
   1201c:	cmp	r1, #0
   12020:	mvnmi	r0, #0
   12024:	bxmi	lr
   12028:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1202c:	add	fp, sp, #24
   12030:	mov	r7, r0
   12034:	cmp	r0, #0
   12038:	beq	12110 <v_grau@@Base+0xf4>
   1203c:	ldr	r0, [r7]
   12040:	mov	r6, r1
   12044:	mov	r9, #0
   12048:	mov	r8, #0
   1204c:	cmp	r0, r1
   12050:	ble	120bc <v_grau@@Base+0xa0>
   12054:	bl	121e0 <vetor_novo@@Base>
   12058:	mov	r8, r0
   1205c:	ldr	r0, [r7]
   12060:	cmp	r0, #1
   12064:	blt	120bc <v_grau@@Base+0xa0>
   12068:	mov	r5, #0
   1206c:	mov	r4, #0
   12070:	b	12080 <v_grau@@Base+0x64>
   12074:	add	r4, r4, #1
   12078:	cmp	r4, r0
   1207c:	bge	120bc <v_grau@@Base+0xa0>
   12080:	ldr	r1, [r7, #4]
   12084:	add	r1, r1, r4, lsl #3
   12088:	ldr	r1, [r1, #4]
   1208c:	cmp	r1, #0
   12090:	beq	12074 <v_grau@@Base+0x58>
   12094:	ldr	r2, [r1]
   12098:	cmp	r2, r6
   1209c:	bne	12088 <v_grau@@Base+0x6c>
   120a0:	mov	r0, r8
   120a4:	mov	r1, r4
   120a8:	mov	r2, r5
   120ac:	bl	122a8 <vetor_insere@@Base>
   120b0:	ldr	r0, [r7]
   120b4:	add	r5, r5, #1
   120b8:	b	12074 <v_grau@@Base+0x58>
   120bc:	cmp	r6, #0
   120c0:	bmi	12118 <v_grau@@Base+0xfc>
   120c4:	cmp	r0, r6
   120c8:	ble	12118 <v_grau@@Base+0xfc>
   120cc:	bl	121e0 <vetor_novo@@Base>
   120d0:	mov	r9, r0
   120d4:	ldr	r0, [r7, #4]
   120d8:	add	r0, r0, r6, lsl #3
   120dc:	ldr	r5, [r0, #4]
   120e0:	cmp	r5, #0
   120e4:	beq	12118 <v_grau@@Base+0xfc>
   120e8:	mov	r4, #0
   120ec:	ldr	r1, [r5]
   120f0:	mov	r0, r9
   120f4:	mov	r2, r4
   120f8:	bl	122a8 <vetor_insere@@Base>
   120fc:	ldr	r5, [r5, #4]
   12100:	add	r4, r4, #1
   12104:	cmp	r5, #0
   12108:	bne	120ec <v_grau@@Base+0xd0>
   1210c:	b	12118 <v_grau@@Base+0xfc>
   12110:	mov	r8, #0
   12114:	mov	r9, #0
   12118:	mov	r0, r8
   1211c:	bl	12268 <vetor_tamanho@@Base>
   12120:	mov	r4, r0
   12124:	mov	r0, r9
   12128:	bl	12268 <vetor_tamanho@@Base>
   1212c:	mov	r5, r0
   12130:	mov	r0, r8
   12134:	bl	1220c <vetor_apaga@@Base>
   12138:	mov	r0, r9
   1213c:	bl	1220c <vetor_apaga@@Base>
   12140:	add	r0, r5, r4
   12144:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012148 <v_celebridade@@Base>:
   12148:	push	{r4, sl, fp, lr}
   1214c:	add	fp, sp, #8
   12150:	cmp	r0, #0
   12154:	beq	12174 <v_celebridade@@Base+0x2c>
   12158:	ldr	r3, [r0, #4]
   1215c:	mov	r2, #0
   12160:	ldr	ip, [r3, r1, lsl #3]
   12164:	cmp	ip, #0
   12168:	beq	12180 <v_celebridade@@Base+0x38>
   1216c:	mov	r0, r2
   12170:	pop	{r4, sl, fp, pc}
   12174:	mvn	r2, #0
   12178:	mov	r0, r2
   1217c:	pop	{r4, sl, fp, pc}
   12180:	ldr	lr, [r0]
   12184:	mov	ip, #0
   12188:	cmp	lr, #1
   1218c:	blt	121c8 <v_celebridade@@Base+0x80>
   12190:	mov	r2, #0
   12194:	b	121a4 <v_celebridade@@Base+0x5c>
   12198:	add	r2, r2, #1
   1219c:	cmp	r2, lr
   121a0:	bge	121c8 <v_celebridade@@Base+0x80>
   121a4:	add	r0, r3, r2, lsl #3
   121a8:	ldr	r0, [r0, #4]
   121ac:	cmp	r0, #0
   121b0:	beq	12198 <v_celebridade@@Base+0x50>
   121b4:	ldr	r4, [r0]
   121b8:	cmp	r4, r1
   121bc:	bne	121a8 <v_celebridade@@Base+0x60>
   121c0:	add	ip, ip, #1
   121c4:	b	12198 <v_celebridade@@Base+0x50>
   121c8:	sub	r0, ip, lr
   121cc:	add	r0, r0, #1
   121d0:	clz	r0, r0
   121d4:	lsr	r2, r0, #5
   121d8:	mov	r0, r2
   121dc:	pop	{r4, sl, fp, pc}

000121e0 <vetor_novo@@Base>:
   121e0:	push	{fp, lr}
   121e4:	mov	fp, sp
   121e8:	mov	r0, #12
   121ec:	bl	10c90 <malloc@plt>
   121f0:	cmp	r0, #0
   121f4:	moveq	r0, #0
   121f8:	movne	r1, #0
   121fc:	strne	r1, [r0]
   12200:	strne	r1, [r0, #4]
   12204:	strne	r1, [r0, #8]
   12208:	pop	{fp, pc}

0001220c <vetor_apaga@@Base>:
   1220c:	cmp	r0, #0
   12210:	bxeq	lr
   12214:	push	{r4, sl, fp, lr}
   12218:	add	fp, sp, #8
   1221c:	mov	r4, r0
   12220:	ldr	r0, [r0, #8]
   12224:	bl	10c6c <free@plt>
   12228:	mov	r0, r4
   1222c:	pop	{r4, sl, fp, lr}
   12230:	b	10c6c <free@plt>

00012234 <vetor_atribui@@Base>:
   12234:	mov	ip, r0
   12238:	mvn	r0, #0
   1223c:	cmp	ip, #0
   12240:	beq	12264 <vetor_atribui@@Base+0x30>
   12244:	cmp	r1, #0
   12248:	bmi	12264 <vetor_atribui@@Base+0x30>
   1224c:	ldr	r3, [ip]
   12250:	cmp	r3, r1
   12254:	bxle	lr
   12258:	ldr	r0, [ip, #8]
   1225c:	str	r2, [r0, r1, lsl #2]
   12260:	mov	r0, r1
   12264:	bx	lr

00012268 <vetor_tamanho@@Base>:
   12268:	cmp	r0, #0
   1226c:	ldrne	r0, [r0]
   12270:	mvneq	r0, #0
   12274:	bx	lr

00012278 <vetor_elemento@@Base>:
   12278:	mov	r2, r0
   1227c:	mov	r0, #-2147483648	; 0x80000000
   12280:	cmp	r2, #0
   12284:	beq	122a4 <vetor_elemento@@Base+0x2c>
   12288:	cmp	r1, #0
   1228c:	bmi	122a4 <vetor_elemento@@Base+0x2c>
   12290:	ldr	r3, [r2]
   12294:	cmp	r3, r1
   12298:	bxle	lr
   1229c:	ldr	r0, [r2, #8]
   122a0:	ldr	r0, [r0, r1, lsl #2]
   122a4:	bx	lr

000122a8 <vetor_insere@@Base>:
   122a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   122ac:	add	fp, sp, #24
   122b0:	mvn	r7, #0
   122b4:	cmp	r0, #0
   122b8:	beq	123b8 <vetor_insere@@Base+0x110>
   122bc:	mov	r4, r2
   122c0:	cmn	r2, #1
   122c4:	blt	123b8 <vetor_insere@@Base+0x110>
   122c8:	ldr	lr, [r0]
   122cc:	mov	r9, r0
   122d0:	cmp	lr, r4
   122d4:	blt	123b8 <vetor_insere@@Base+0x110>
   122d8:	ldr	r0, [r9, #4]
   122dc:	cmn	r4, #1
   122e0:	mov	r8, r1
   122e4:	moveq	r4, lr
   122e8:	cmp	lr, r0
   122ec:	bne	12328 <vetor_insere@@Base+0x80>
   122f0:	cmp	lr, #0
   122f4:	lsl	r0, lr, #1
   122f8:	movweq	r0, #1
   122fc:	str	r0, [r9, #4]
   12300:	lsl	r1, r0, #2
   12304:	ldr	r0, [r9, #8]
   12308:	bl	10c78 <realloc@plt>
   1230c:	cmp	r0, #0
   12310:	str	r0, [r9, #8]
   12314:	beq	123b8 <vetor_insere@@Base+0x110>
   12318:	ldr	lr, [r9]
   1231c:	cmp	lr, r4
   12320:	bgt	12334 <vetor_insere@@Base+0x8c>
   12324:	b	123a8 <vetor_insere@@Base+0x100>
   12328:	ldr	r0, [r9, #8]
   1232c:	cmp	lr, r4
   12330:	ble	123a8 <vetor_insere@@Base+0x100>
   12334:	mvn	r2, r4
   12338:	add	ip, lr, r2
   1233c:	sub	r2, lr, r4
   12340:	ands	r7, r2, #3
   12344:	mov	r2, lr
   12348:	beq	12370 <vetor_insere@@Base+0xc8>
   1234c:	add	r6, r0, lr, lsl #2
   12350:	mov	r2, lr
   12354:	mov	r3, r6
   12358:	ldr	r1, [r3, #-4]!
   1235c:	subs	r7, r7, #1
   12360:	sub	r2, r2, #1
   12364:	str	r1, [r6]
   12368:	mov	r6, r3
   1236c:	bne	12358 <vetor_insere@@Base+0xb0>
   12370:	cmp	ip, #3
   12374:	bcc	123a8 <vetor_insere@@Base+0x100>
   12378:	add	r1, r0, r2, lsl #2
   1237c:	sub	r3, r1, #8
   12380:	ldr	r6, [r3]
   12384:	ldr	r5, [r3, #4]
   12388:	ldmdb	r3, {r1, r7}
   1238c:	sub	r2, r2, #4
   12390:	cmp	r2, r4
   12394:	stmda	r3, {r1, r7}
   12398:	str	r6, [r3, #4]
   1239c:	str	r5, [r3, #8]
   123a0:	sub	r3, r3, #16
   123a4:	bgt	12380 <vetor_insere@@Base+0xd8>
   123a8:	str	r8, [r0, r4, lsl #2]
   123ac:	add	r0, lr, #1
   123b0:	mov	r7, r4
   123b4:	str	r0, [r9]
   123b8:	mov	r0, r7
   123bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000123c0 <vetor_remove@@Base>:
   123c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123c4:	add	fp, sp, #28
   123c8:	mvn	r2, #0
   123cc:	cmp	r0, #0
   123d0:	beq	124b4 <vetor_remove@@Base+0xf4>
   123d4:	cmp	r1, #0
   123d8:	bmi	124b4 <vetor_remove@@Base+0xf4>
   123dc:	ldr	ip, [r0]
   123e0:	cmp	ip, r1
   123e4:	ble	124b4 <vetor_remove@@Base+0xf4>
   123e8:	add	r8, r1, #1
   123ec:	cmp	r8, ip
   123f0:	bge	124a8 <vetor_remove@@Base+0xe8>
   123f4:	mvn	r3, r1
   123f8:	add	lr, ip, r3
   123fc:	ldr	r3, [r0, #8]
   12400:	cmp	lr, #4
   12404:	bcc	1248c <vetor_remove@@Base+0xcc>
   12408:	bic	r9, lr, #3
   1240c:	mov	r5, #1
   12410:	subs	r4, r9, #4
   12414:	add	r4, r5, r4, lsr #2
   12418:	and	r2, r4, #1
   1241c:	beq	124bc <vetor_remove@@Base+0xfc>
   12420:	add	r6, r3, r1, lsl #2
   12424:	sub	r7, r2, r4
   12428:	mov	r5, #0
   1242c:	mov	sl, #20
   12430:	add	r4, r6, #4
   12434:	adds	r7, r7, #2
   12438:	add	r5, r5, #8
   1243c:	vld1.32	{d16-d17}, [r4]
   12440:	mov	r4, r6
   12444:	vst1.32	{d16-d17}, [r4], sl
   12448:	vld1.32	{d16-d17}, [r4]
   1244c:	add	r4, r6, #16
   12450:	add	r6, r6, #32
   12454:	vst1.32	{d16-d17}, [r4]
   12458:	bne	12430 <vetor_remove@@Base+0x70>
   1245c:	cmp	r2, #0
   12460:	beq	1247c <vetor_remove@@Base+0xbc>
   12464:	add	r4, r8, r5
   12468:	add	r4, r3, r4, lsl #2
   1246c:	vld1.32	{d16-d17}, [r4]
   12470:	add	r4, r5, r1
   12474:	add	r4, r3, r4, lsl #2
   12478:	vst1.32	{d16-d17}, [r4]
   1247c:	cmp	lr, r9
   12480:	beq	124a8 <vetor_remove@@Base+0xe8>
   12484:	add	r1, r9, r1
   12488:	add	r8, r8, r9
   1248c:	ldr	r7, [r3, r8, lsl #2]
   12490:	mov	r2, r8
   12494:	add	r8, r8, #1
   12498:	cmp	ip, r8
   1249c:	str	r7, [r3, r1, lsl #2]
   124a0:	mov	r1, r2
   124a4:	bne	1248c <vetor_remove@@Base+0xcc>
   124a8:	sub	r1, ip, #1
   124ac:	mov	r2, #0
   124b0:	str	r1, [r0]
   124b4:	mov	r0, r2
   124b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124bc:	mov	r5, #0
   124c0:	cmp	r2, #0
   124c4:	bne	12464 <vetor_remove@@Base+0xa4>
   124c8:	b	1247c <vetor_remove@@Base+0xbc>

000124cc <vetor_pesquisa@@Base>:
   124cc:	push	{fp, lr}
   124d0:	mov	fp, sp
   124d4:	mov	r2, r0
   124d8:	mvn	r0, #0
   124dc:	cmp	r2, #0
   124e0:	beq	12510 <vetor_pesquisa@@Base+0x44>
   124e4:	ldr	ip, [r2]
   124e8:	cmp	ip, #1
   124ec:	poplt	{fp, pc}
   124f0:	ldr	lr, [r2, #8]
   124f4:	mov	r2, #0
   124f8:	ldr	r3, [lr, r2, lsl #2]
   124fc:	cmp	r3, r1
   12500:	beq	12514 <vetor_pesquisa@@Base+0x48>
   12504:	add	r2, r2, #1
   12508:	cmp	r2, ip
   1250c:	blt	124f8 <vetor_pesquisa@@Base+0x2c>
   12510:	pop	{fp, pc}
   12514:	mov	r0, r2
   12518:	pop	{fp, pc}

0001251c <vetor_ordena@@Base>:
   1251c:	push	{r4, r5, fp, lr}
   12520:	add	fp, sp, #8
   12524:	cmp	r0, #0
   12528:	beq	125a0 <vetor_ordena@@Base+0x84>
   1252c:	ldr	ip, [r0]
   12530:	mov	r1, r0
   12534:	mov	r0, #0
   12538:	cmp	ip, #2
   1253c:	poplt	{r4, r5, fp, pc}
   12540:	ldr	lr, [r1, #8]
   12544:	mov	r1, #1
   12548:	mov	r3, lr
   1254c:	b	12568 <vetor_ordena@@Base+0x4c>
   12550:	add	r4, r1, r0
   12554:	add	r1, r1, #1
   12558:	add	r3, r3, #4
   1255c:	str	r2, [lr, r4, lsl #2]
   12560:	cmp	r1, ip
   12564:	bge	12598 <vetor_ordena@@Base+0x7c>
   12568:	ldr	r2, [lr, r1, lsl #2]
   1256c:	mov	r0, #0
   12570:	ldr	r4, [r3, r0, lsl #2]
   12574:	cmp	r2, r4
   12578:	bge	12550 <vetor_ordena@@Base+0x34>
   1257c:	add	r5, r3, r0, lsl #2
   12580:	sub	r0, r0, #1
   12584:	str	r4, [r5, #4]
   12588:	add	r4, r1, r0
   1258c:	cmp	r4, #0
   12590:	bgt	12570 <vetor_ordena@@Base+0x54>
   12594:	b	12554 <vetor_ordena@@Base+0x38>
   12598:	mov	r0, #0
   1259c:	pop	{r4, r5, fp, pc}
   125a0:	mvn	r0, #0
   125a4:	pop	{r4, r5, fp, pc}

000125a8 <__libc_csu_init@@Base>:
   125a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   125ac:	mov	r7, r0
   125b0:	ldr	r6, [pc, #72]	; 12600 <__libc_csu_init@@Base+0x58>
   125b4:	ldr	r5, [pc, #72]	; 12604 <__libc_csu_init@@Base+0x5c>
   125b8:	add	r6, pc, r6
   125bc:	add	r5, pc, r5
   125c0:	sub	r6, r6, r5
   125c4:	mov	r8, r1
   125c8:	mov	r9, r2
   125cc:	bl	10c34 <calloc@plt-0x20>
   125d0:	asrs	r6, r6, #2
   125d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   125d8:	mov	r4, #0
   125dc:	add	r4, r4, #1
   125e0:	ldr	r3, [r5], #4
   125e4:	mov	r2, r9
   125e8:	mov	r1, r8
   125ec:	mov	r0, r7
   125f0:	blx	r3
   125f4:	cmp	r6, r4
   125f8:	bne	125dc <__libc_csu_init@@Base+0x34>
   125fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12600:	andeq	r0, r1, ip, asr #18
   12604:	andeq	r0, r1, r4, asr #18

00012608 <__libc_csu_fini@@Base>:
   12608:	bx	lr

Disassembly of section .fini:

0001260c <.fini>:
   1260c:	push	{r3, lr}
   12610:	pop	{r3, pc}
