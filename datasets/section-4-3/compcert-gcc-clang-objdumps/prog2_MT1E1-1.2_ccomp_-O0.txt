
../repos/prog2/MT1E1-1.2:     file format elf32-littlearm


Disassembly of section .init:

00010454 <.init>:
   10454:	push	{r3, lr}
   10458:	bl	1054c <abort@plt+0x3c>
   1045c:	pop	{r3, pc}

Disassembly of section .plt:

00010460 <strcmp@plt-0x14>:
   10460:	push	{lr}		; (str lr, [sp, #-4]!)
   10464:	ldr	lr, [pc, #4]	; 10470 <strcmp@plt-0x4>
   10468:	add	lr, pc, lr
   1046c:	ldr	pc, [lr, #8]!
   10470:	muleq	r1, r0, fp

00010474 <strcmp@plt>:
   10474:	add	ip, pc, #0, 12
   10478:	add	ip, ip, #16, 20	; 0x10000
   1047c:	ldr	pc, [ip, #2960]!	; 0xb90

00010480 <printf@plt>:
   10480:	add	ip, pc, #0, 12
   10484:	add	ip, ip, #16, 20	; 0x10000
   10488:	ldr	pc, [ip, #2952]!	; 0xb88

0001048c <fopen@plt>:
   1048c:	add	ip, pc, #0, 12
   10490:	add	ip, ip, #16, 20	; 0x10000
   10494:	ldr	pc, [ip, #2944]!	; 0xb80

00010498 <free@plt>:
   10498:	add	ip, pc, #0, 12
   1049c:	add	ip, ip, #16, 20	; 0x10000
   104a0:	ldr	pc, [ip, #2936]!	; 0xb78

000104a4 <realloc@plt>:
   104a4:	add	ip, pc, #0, 12
   104a8:	add	ip, ip, #16, 20	; 0x10000
   104ac:	ldr	pc, [ip, #2928]!	; 0xb70

000104b0 <strcpy@plt>:
   104b0:	add	ip, pc, #0, 12
   104b4:	add	ip, ip, #16, 20	; 0x10000
   104b8:	ldr	pc, [ip, #2920]!	; 0xb68

000104bc <malloc@plt>:
   104bc:	add	ip, pc, #0, 12
   104c0:	add	ip, ip, #16, 20	; 0x10000
   104c4:	ldr	pc, [ip, #2912]!	; 0xb60

000104c8 <__libc_start_main@plt>:
   104c8:	add	ip, pc, #0, 12
   104cc:	add	ip, ip, #16, 20	; 0x10000
   104d0:	ldr	pc, [ip, #2904]!	; 0xb58

000104d4 <scanf@plt>:
   104d4:	add	ip, pc, #0, 12
   104d8:	add	ip, ip, #16, 20	; 0x10000
   104dc:	ldr	pc, [ip, #2896]!	; 0xb50

000104e0 <__gmon_start__@plt>:
   104e0:	add	ip, pc, #0, 12
   104e4:	add	ip, ip, #16, 20	; 0x10000
   104e8:	ldr	pc, [ip, #2888]!	; 0xb48

000104ec <fprintf@plt>:
   104ec:	add	ip, pc, #0, 12
   104f0:	add	ip, ip, #16, 20	; 0x10000
   104f4:	ldr	pc, [ip, #2880]!	; 0xb40

000104f8 <fscanf@plt>:
   104f8:	add	ip, pc, #0, 12
   104fc:	add	ip, ip, #16, 20	; 0x10000
   10500:	ldr	pc, [ip, #2872]!	; 0xb38

00010504 <fclose@plt>:
   10504:	add	ip, pc, #0, 12
   10508:	add	ip, ip, #16, 20	; 0x10000
   1050c:	ldr	pc, [ip, #2864]!	; 0xb30

00010510 <abort@plt>:
   10510:	add	ip, pc, #0, 12
   10514:	add	ip, ip, #16, 20	; 0x10000
   10518:	ldr	pc, [ip, #2856]!	; 0xb28

Disassembly of section .text:

0001051c <.text>:
   1051c:	bleq	4c660 <abort@plt+0x3c150>
   10520:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   10524:	strbtmi	fp, [sl], -r2, lsl #24
   10528:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   1052c:			; <UNDEFINED> instruction: 0xc010f8df
   10530:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   10534:	blmi	122548 <abort@plt+0x112038>
   10538:	svc	0x00c6f7ff
   1053c:	svc	0x00e8f7ff
   10540:			; <UNDEFINED> instruction: 0x000108b5
   10544:	andeq	r0, r1, r8, lsl #15
   10548:	andeq	r0, r1, r5, ror r8
   1054c:	ldr	r3, [pc, #20]	; 10568 <abort@plt+0x58>
   10550:	ldr	r2, [pc, #20]	; 1056c <abort@plt+0x5c>
   10554:	add	r3, pc, r3
   10558:	ldr	r2, [r3, r2]
   1055c:	cmp	r2, #0
   10560:	bxeq	lr
   10564:	b	104e0 <__gmon_start__@plt>
   10568:	andeq	r0, r1, r4, lsr #21
   1056c:	andeq	r0, r0, r4, asr #32
   10570:	subseq	pc, r0, r1, asr #4
   10574:	andeq	pc, r2, r0, asr #5
   10578:	cmpeq	r0, #268435460	; 0x10000004	; <UNPREDICTABLE>
   1057c:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   10580:	andle	r4, r5, r3, lsl #5
   10584:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10588:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   1058c:	ldrmi	fp, [r8, -r3, lsl #2]
   10590:	svclt	0x00004770
   10594:	subseq	pc, r0, r1, asr #4
   10598:	andeq	pc, r2, r0, asr #5
   1059c:	cmpeq	r0, r1, asr #4	; <UNPREDICTABLE>
   105a0:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   105a4:	svceq	0x00d91a0b
   105a8:			; <UNDEFINED> instruction: 0x01a3eb01
   105ac:	andle	r1, r5, r9, asr #32
   105b0:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   105b4:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   105b8:	ldrmi	fp, [r8, -r3, lsl #2]
   105bc:	svclt	0x00004770
   105c0:	vqrshl.s8	d27, d0, d1
   105c4:	vmov.i32	q8, #0	; 0x00000000
   105c8:	stmdavc	r3!, {r1, sl}
   105cc:			; <UNDEFINED> instruction: 0xf7ffb91b
   105d0:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   105d4:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   105d8:	svclt	0x0000e7dc
   105dc:	mov	ip, sp
   105e0:	sub	sp, sp, #88	; 0x58
   105e4:	str	ip, [sp]
   105e8:	str	lr, [sp, #4]
   105ec:	str	r4, [sp, #8]
   105f0:	str	r5, [sp, #12]
   105f4:	str	r6, [sp, #16]
   105f8:	str	r7, [sp, #20]
   105fc:	str	r8, [sp, #24]
   10600:	mov	r5, r1
   10604:	mov	r6, r0
   10608:	mov	r0, #104	; 0x68
   1060c:	bl	104bc <malloc@plt>
   10610:	mov	r4, r0
   10614:	mov	r7, #0
   10618:	ldr	r1, [pc, #204]	; 106ec <abort@plt+0x1dc>
   1061c:	add	r2, sp, #32
   10620:	mov	r0, r6
   10624:	bl	104f8 <fscanf@plt>
   10628:	cmn	r0, #1
   1062c:	beq	106c4 <abort@plt+0x1b4>
   10630:	mov	r8, #0
   10634:	cmp	r8, r7
   10638:	bgt	10618 <abort@plt+0x108>
   1063c:	add	r0, sp, #32
   10640:	mov	ip, #104	; 0x68
   10644:	mla	r1, ip, r8, r4
   10648:	bl	10474 <strcmp@plt>
   1064c:	cmp	r0, #0
   10650:	bne	10674 <abort@plt+0x164>
   10654:	mov	r1, #104	; 0x68
   10658:	mla	ip, r1, r8, r4
   1065c:	mov	r2, #104	; 0x68
   10660:	mla	r1, r2, r8, r4
   10664:	ldr	r3, [r1, #100]	; 0x64
   10668:	add	r0, r3, #1
   1066c:	str	r0, [ip, #100]	; 0x64
   10670:	b	10618 <abort@plt+0x108>
   10674:	cmp	r8, r7
   10678:	bne	106bc <abort@plt+0x1ac>
   1067c:	mov	r1, #104	; 0x68
   10680:	mul	r0, r1, r7
   10684:	add	r1, r0, #104	; 0x68
   10688:	mov	r0, r4
   1068c:	bl	104a4 <realloc@plt>
   10690:	mov	r4, r0
   10694:	mov	r3, #104	; 0x68
   10698:	mla	r0, r3, r7, r4
   1069c:	add	r1, sp, #32
   106a0:	bl	104b0 <strcpy@plt>
   106a4:	mov	r0, #104	; 0x68
   106a8:	mla	ip, r0, r7, r4
   106ac:	mov	r1, #1
   106b0:	str	r1, [ip, #100]	; 0x64
   106b4:	add	r7, r7, #1
   106b8:	b	10618 <abort@plt+0x108>
   106bc:	add	r8, r8, #1
   106c0:	b	10634 <abort@plt+0x124>
   106c4:	str	r7, [r5]
   106c8:	mov	r0, r4
   106cc:	ldr	r4, [sp, #8]
   106d0:	ldr	r5, [sp, #12]
   106d4:	ldr	r6, [sp, #16]
   106d8:	ldr	r7, [sp, #20]
   106dc:	ldr	r8, [sp, #24]
   106e0:	ldr	lr, [sp, #4]
   106e4:	add	sp, sp, #88	; 0x58
   106e8:	bx	lr
   106ec:	andeq	r0, r1, r4, asr r9
   106f0:	mov	ip, sp
   106f4:	sub	sp, sp, #32
   106f8:	str	ip, [sp, #4]
   106fc:	str	lr, [sp, #8]
   10700:	str	r4, [sp, #16]
   10704:	str	r5, [sp, #20]
   10708:	str	r6, [sp, #24]
   1070c:	str	r7, [sp, #28]
   10710:	mov	r5, r2
   10714:	mov	r6, r1
   10718:	mov	r4, r0
   1071c:	ldr	r1, [pc, #92]	; 10780 <abort@plt+0x270>
   10720:	mov	r0, r4
   10724:	bl	104ec <fprintf@plt>
   10728:	mov	r7, #0
   1072c:	cmp	r7, r5
   10730:	bge	10764 <abort@plt+0x254>
   10734:	ldr	r1, [pc, #72]	; 10784 <abort@plt+0x274>
   10738:	add	r2, r7, #1
   1073c:	mov	r0, #104	; 0x68
   10740:	mla	r3, r0, r7, r6
   10744:	mov	r0, #104	; 0x68
   10748:	mla	ip, r0, r7, r6
   1074c:	ldr	ip, [ip, #100]	; 0x64
   10750:	str	ip, [sp]
   10754:	mov	r0, r4
   10758:	bl	104ec <fprintf@plt>
   1075c:	add	r7, r7, #1
   10760:	b	1072c <abort@plt+0x21c>
   10764:	ldr	r4, [sp, #16]
   10768:	ldr	r5, [sp, #20]
   1076c:	ldr	r6, [sp, #24]
   10770:	ldr	r7, [sp, #28]
   10774:	ldr	lr, [sp, #8]
   10778:	add	sp, sp, #32
   1077c:	bx	lr
   10780:	muleq	r1, r0, r9
   10784:	andeq	r0, r1, pc, ror #18
   10788:	mov	ip, sp
   1078c:	sub	sp, sp, #144	; 0x90
   10790:	str	ip, [sp]
   10794:	str	lr, [sp, #4]
   10798:	str	r4, [sp, #8]
   1079c:	str	r5, [sp, #12]
   107a0:	str	r6, [sp, #16]
   107a4:	ldr	r0, [pc, #192]	; 1086c <abort@plt+0x35c>
   107a8:	bl	10480 <printf@plt>
   107ac:	ldr	r0, [pc, #176]	; 10864 <abort@plt+0x354>
   107b0:	add	r1, sp, #32
   107b4:	bl	104d4 <scanf@plt>
   107b8:	ldr	r0, [pc, #160]	; 10860 <abort@plt+0x350>
   107bc:	bl	10480 <printf@plt>
   107c0:	ldr	r0, [pc, #156]	; 10864 <abort@plt+0x354>
   107c4:	add	r1, sp, #88	; 0x58
   107c8:	bl	104d4 <scanf@plt>
   107cc:	add	r0, sp, #32
   107d0:	ldr	r1, [pc, #152]	; 10870 <abort@plt+0x360>
   107d4:	bl	1048c <fopen@plt>
   107d8:	mov	r6, r0
   107dc:	cmp	r6, #0
   107e0:	bne	107ec <abort@plt+0x2dc>
   107e4:	mov	r0, #1
   107e8:	b	10848 <abort@plt+0x338>
   107ec:	add	r0, sp, #88	; 0x58
   107f0:	ldr	r1, [pc, #112]	; 10868 <abort@plt+0x358>
   107f4:	bl	1048c <fopen@plt>
   107f8:	mov	r5, r0
   107fc:	cmp	r5, #0
   10800:	bne	1080c <abort@plt+0x2fc>
   10804:	mov	r0, #1
   10808:	b	10848 <abort@plt+0x338>
   1080c:	add	r1, sp, #24
   10810:	mov	r0, r6
   10814:	bl	105dc <abort@plt+0xcc>
   10818:	mov	r4, r0
   1081c:	ldr	r2, [sp, #24]
   10820:	mov	r1, r4
   10824:	mov	r0, r5
   10828:	bl	106f0 <abort@plt+0x1e0>
   1082c:	mov	r0, r6
   10830:	bl	10504 <fclose@plt>
   10834:	mov	r0, r5
   10838:	bl	10504 <fclose@plt>
   1083c:	mov	r0, r4
   10840:	bl	10498 <free@plt>
   10844:	mov	r0, #0
   10848:	ldr	r4, [sp, #8]
   1084c:	ldr	r5, [sp, #12]
   10850:	ldr	r6, [sp, #16]
   10854:	ldr	lr, [sp, #4]
   10858:	add	sp, sp, #144	; 0x90
   1085c:	bx	lr
   10860:	andeq	r0, r1, ip, ror r9
   10864:	andeq	r0, r1, r4, asr r9
   10868:	andeq	r0, r1, r6, asr #19
   1086c:	andeq	r0, r1, r9, asr r9
   10870:	andeq	r0, r1, r7, asr r9
   10874:	mvnsmi	lr, #737280	; 0xb4000
   10878:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   1087c:	strmi	r4, [r8], ip, lsl #26
   10880:			; <UNDEFINED> instruction: 0x4691447e
   10884:			; <UNDEFINED> instruction: 0xf7ff447d
   10888:	blne	1dcc028 <abort@plt+0x1dbbb18>
   1088c:	strhle	r1, [sl], -r6
   10890:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   10894:	svccc	0x0004f855
   10898:	strbmi	r4, [r1], -sl, asr #12
   1089c:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   108a0:	adcmi	r4, r6, #152, 14	; 0x2600000
   108a4:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   108a8:	svclt	0x000083f8
   108ac:	muleq	r1, r0, r6
   108b0:	andeq	r0, r1, r8, lsl #13
   108b4:	svclt	0x00004770

Disassembly of section .fini:

000108b8 <.fini>:
   108b8:	push	{r3, lr}
   108bc:	pop	{r3, pc}
