
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/zlib/inflate.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_inflateResetKeep>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	cmp	r0, #0
      14:	beq	bc <coda_inflateResetKeep+0xbc>
      18:	ldr	r1, [r0, #28]
      1c:	cmp	r1, #0
      20:	beq	bc <coda_inflateResetKeep+0xbc>
      24:	mov	r3, #0
      28:	str	r3, [r1, #28]
      2c:	mov	r2, #0
      30:	str	r2, [r0, #20]
      34:	str	r2, [r0, #8]
      38:	mov	ip, #0
      3c:	str	ip, [r0, #24]
      40:	ldr	r2, [r1, #8]
      44:	cmp	r2, #0
      48:	beq	54 <coda_inflateResetKeep+0x54>
      4c:	and	r3, r2, #1
      50:	str	r3, [r0, #48]	; 0x30
      54:	mov	r0, #0
      58:	str	r0, [r1]
      5c:	mov	r2, #0
      60:	str	r2, [r1, #4]
      64:	mov	ip, #0
      68:	str	ip, [r1, #12]
      6c:	mov	r2, #32768	; 0x8000
      70:	str	r2, [r1, #20]
      74:	mov	ip, #0
      78:	str	ip, [r1, #32]
      7c:	mov	r0, #0
      80:	str	r0, [r1, #56]	; 0x38
      84:	mov	r3, #0
      88:	str	r3, [r1, #60]	; 0x3c
      8c:	add	r2, r1, #1328	; 0x530
      90:	str	r2, [r1, #108]	; 0x6c
      94:	str	r2, [r1, #80]	; 0x50
      98:	str	r2, [r1, #76]	; 0x4c
      9c:	mov	r2, #1
      a0:	add	lr, r1, #4096	; 0x1000
      a4:	str	r2, [lr, #3008]	; 0xbc0
      a8:	mvn	r0, #0
      ac:	add	lr, r1, #4096	; 0x1000
      b0:	str	r0, [lr, #3012]	; 0xbc4
      b4:	mov	r0, #0
      b8:	b	c0 <coda_inflateResetKeep+0xc0>
      bc:	mvn	r0, #1
      c0:	ldr	lr, [sp, #4]
      c4:	add	sp, sp, #8
      c8:	bx	lr

000000cc <coda_inflateReset>:
      cc:	mov	ip, sp
      d0:	sub	sp, sp, #8
      d4:	str	ip, [sp]
      d8:	str	lr, [sp, #4]
      dc:	cmp	r0, #0
      e0:	beq	114 <coda_inflateReset+0x48>
      e4:	ldr	r1, [r0, #28]
      e8:	cmp	r1, #0
      ec:	beq	114 <coda_inflateReset+0x48>
      f0:	mov	r3, #0
      f4:	str	r3, [r1, #40]	; 0x28
      f8:	mov	r2, #0
      fc:	str	r2, [r1, #44]	; 0x2c
     100:	mov	r2, #0
     104:	str	r2, [r1, #48]	; 0x30
     108:	ldr	lr, [sp, #4]
     10c:	add	sp, sp, #8
     110:	b	0 <coda_inflateResetKeep>
     114:	mvn	r0, #1
     118:	ldr	lr, [sp, #4]
     11c:	add	sp, sp, #8
     120:	bx	lr

00000124 <coda_inflateReset2>:
     124:	mov	ip, sp
     128:	sub	sp, sp, #24
     12c:	str	ip, [sp]
     130:	str	lr, [sp, #4]
     134:	str	r4, [sp, #8]
     138:	str	r5, [sp, #12]
     13c:	str	r6, [sp, #16]
     140:	str	r7, [sp, #20]
     144:	mov	r4, r0
     148:	cmp	r4, #0
     14c:	beq	1fc <coda_inflateReset2+0xd8>
     150:	ldr	r5, [r4, #28]
     154:	cmp	r5, #0
     158:	beq	1fc <coda_inflateReset2+0xd8>
     15c:	cmp	r1, #0
     160:	blt	180 <coda_inflateReset2+0x5c>
     164:	asr	ip, r1, #4
     168:	add	r6, ip, #1
     16c:	and	r3, r1, #15
     170:	cmp	r1, #48	; 0x30
     174:	movlt	r7, r3
     178:	movge	r7, r1
     17c:	b	188 <coda_inflateReset2+0x64>
     180:	mov	r6, #0
     184:	rsb	r7, r1, #0
     188:	cmp	r7, #0
     18c:	beq	1a8 <coda_inflateReset2+0x84>
     190:	cmp	r7, #8
     194:	blt	1a0 <coda_inflateReset2+0x7c>
     198:	cmp	r7, #15
     19c:	ble	1a8 <coda_inflateReset2+0x84>
     1a0:	mvn	r0, #1
     1a4:	b	200 <coda_inflateReset2+0xdc>
     1a8:	ldr	r1, [r5, #52]	; 0x34
     1ac:	cmp	r1, #0
     1b0:	beq	1d4 <coda_inflateReset2+0xb0>
     1b4:	ldr	r2, [r5, #36]	; 0x24
     1b8:	cmp	r2, r7
     1bc:	beq	1d4 <coda_inflateReset2+0xb0>
     1c0:	ldr	ip, [r4, #36]	; 0x24
     1c4:	ldr	r0, [r4, #40]	; 0x28
     1c8:	blx	ip
     1cc:	mov	r1, #0
     1d0:	str	r1, [r5, #52]	; 0x34
     1d4:	str	r6, [r5, #8]
     1d8:	str	r7, [r5, #36]	; 0x24
     1dc:	mov	r0, r4
     1e0:	ldr	r4, [sp, #8]
     1e4:	ldr	r5, [sp, #12]
     1e8:	ldr	r6, [sp, #16]
     1ec:	ldr	r7, [sp, #20]
     1f0:	ldr	lr, [sp, #4]
     1f4:	add	sp, sp, #24
     1f8:	b	cc <coda_inflateReset>
     1fc:	mvn	r0, #1
     200:	ldr	r4, [sp, #8]
     204:	ldr	r5, [sp, #12]
     208:	ldr	r6, [sp, #16]
     20c:	ldr	r7, [sp, #20]
     210:	ldr	lr, [sp, #4]
     214:	add	sp, sp, #24
     218:	bx	lr

0000021c <coda_inflateInit2_>:
     21c:	mov	ip, sp
     220:	sub	sp, sp, #24
     224:	str	ip, [sp]
     228:	str	lr, [sp, #4]
     22c:	str	r4, [sp, #8]
     230:	str	r5, [sp, #12]
     234:	str	r6, [sp, #16]
     238:	mov	r5, r1
     23c:	mov	r6, r0
     240:	cmp	r2, #0
     244:	beq	25c <coda_inflateInit2_+0x40>
     248:	ldrb	r0, [r2]
     24c:	cmp	r0, #49	; 0x31
     250:	movne	r2, #1
     254:	moveq	r2, #0
     258:	b	260 <coda_inflateInit2_+0x44>
     25c:	mov	r2, #1
     260:	mov	r1, #1
     264:	cmp	r3, #56	; 0x38
     268:	movne	r3, #1
     26c:	moveq	r3, #0
     270:	cmp	r2, #0
     274:	movne	r1, r1
     278:	moveq	r1, r3
     27c:	cmp	r1, #0
     280:	beq	28c <coda_inflateInit2_+0x70>
     284:	mvn	r0, #5
     288:	b	33c <coda_inflateInit2_+0x120>
     28c:	cmp	r6, #0
     290:	bne	29c <coda_inflateInit2_+0x80>
     294:	mvn	r0, #1
     298:	b	33c <coda_inflateInit2_+0x120>
     29c:	mov	r2, #0
     2a0:	str	r2, [r6, #24]
     2a4:	ldr	r3, [r6, #32]
     2a8:	cmp	r3, #0
     2ac:	bne	2c0 <coda_inflateInit2_+0xa4>
     2b0:	ldr	r0, [pc, #156]	; 354 <coda_inflateInit2_+0x138>
     2b4:	str	r0, [r6, #32]
     2b8:	mov	r1, #0
     2bc:	str	r1, [r6, #40]	; 0x28
     2c0:	ldr	r2, [r6, #36]	; 0x24
     2c4:	cmp	r2, #0
     2c8:	bne	2d4 <coda_inflateInit2_+0xb8>
     2cc:	ldr	r2, [pc, #132]	; 358 <coda_inflateInit2_+0x13c>
     2d0:	str	r2, [r6, #36]	; 0x24
     2d4:	ldr	ip, [r6, #32]
     2d8:	ldr	r0, [r6, #40]	; 0x28
     2dc:	mov	r1, #1
     2e0:	movw	r2, #7116	; 0x1bcc
     2e4:	blx	ip
     2e8:	mov	r4, r0
     2ec:	cmp	r4, #0
     2f0:	bne	2fc <coda_inflateInit2_+0xe0>
     2f4:	mvn	r0, #3
     2f8:	b	33c <coda_inflateInit2_+0x120>
     2fc:	str	r4, [r6, #28]
     300:	mov	r0, #0
     304:	str	r0, [r4, #52]	; 0x34
     308:	mov	r1, r5
     30c:	mov	r0, r6
     310:	bl	124 <coda_inflateReset2>
     314:	mov	r5, r0
     318:	cmp	r5, #0
     31c:	beq	338 <coda_inflateInit2_+0x11c>
     320:	ldr	ip, [r6, #36]	; 0x24
     324:	ldr	r0, [r6, #40]	; 0x28
     328:	mov	r1, r4
     32c:	blx	ip
     330:	mov	r0, #0
     334:	str	r0, [r6, #28]
     338:	mov	r0, r5
     33c:	ldr	r4, [sp, #8]
     340:	ldr	r5, [sp, #12]
     344:	ldr	r6, [sp, #16]
     348:	ldr	lr, [sp, #4]
     34c:	add	sp, sp, #24
     350:	bx	lr
	...

0000035c <coda_inflateInit_>:
     35c:	mov	ip, sp
     360:	sub	sp, sp, #8
     364:	str	ip, [sp]
     368:	str	lr, [sp, #4]
     36c:	mov	r3, #15
     370:	mov	ip, r2
     374:	mov	r2, r1
     378:	mov	r1, r3
     37c:	mov	r3, ip
     380:	ldr	lr, [sp, #4]
     384:	add	sp, sp, #8
     388:	b	21c <coda_inflateInit2_>

0000038c <coda_inflatePrime>:
     38c:	mov	ip, sp
     390:	sub	sp, sp, #8
     394:	str	ip, [sp]
     398:	str	lr, [sp, #4]
     39c:	cmp	r0, #0
     3a0:	beq	424 <coda_inflatePrime+0x98>
     3a4:	ldr	r0, [r0, #28]
     3a8:	cmp	r0, #0
     3ac:	beq	424 <coda_inflatePrime+0x98>
     3b0:	cmp	r1, #0
     3b4:	bge	3d0 <coda_inflatePrime+0x44>
     3b8:	mov	ip, #0
     3bc:	str	ip, [r0, #56]	; 0x38
     3c0:	mov	r3, #0
     3c4:	str	r3, [r0, #60]	; 0x3c
     3c8:	mov	r0, #0
     3cc:	b	428 <coda_inflatePrime+0x9c>
     3d0:	cmp	r1, #16
     3d4:	bgt	41c <coda_inflatePrime+0x90>
     3d8:	ldr	r3, [r0, #60]	; 0x3c
     3dc:	add	ip, r3, r1
     3e0:	cmp	ip, #32
     3e4:	bhi	41c <coda_inflatePrime+0x90>
     3e8:	mov	ip, #1
     3ec:	lsl	ip, ip, r1
     3f0:	sub	ip, ip, #1
     3f4:	and	r2, r2, ip
     3f8:	ldr	ip, [r0, #56]	; 0x38
     3fc:	lsl	r2, r2, r3
     400:	add	r2, ip, r2
     404:	str	r2, [r0, #56]	; 0x38
     408:	ldr	ip, [r0, #60]	; 0x3c
     40c:	add	ip, ip, r1
     410:	str	ip, [r0, #60]	; 0x3c
     414:	mov	r0, #0
     418:	b	428 <coda_inflatePrime+0x9c>
     41c:	mvn	r0, #1
     420:	b	428 <coda_inflatePrime+0x9c>
     424:	mvn	r0, #1
     428:	ldr	lr, [sp, #4]
     42c:	add	sp, sp, #8
     430:	bx	lr

00000434 <updatewindow>:
     434:	mov	ip, sp
     438:	sub	sp, sp, #24
     43c:	str	ip, [sp]
     440:	str	lr, [sp, #4]
     444:	str	r4, [sp, #8]
     448:	str	r5, [sp, #12]
     44c:	str	r6, [sp, #16]
     450:	str	r7, [sp, #20]
     454:	mov	r7, r2
     458:	mov	r6, r1
     45c:	ldr	r5, [r0, #28]
     460:	ldr	r1, [r5, #52]	; 0x34
     464:	cmp	r1, #0
     468:	bne	49c <updatewindow+0x68>
     46c:	ldr	ip, [r0, #32]
     470:	ldr	r0, [r0, #40]	; 0x28
     474:	mov	r2, #1
     478:	ldr	r1, [r5, #36]	; 0x24
     47c:	lsl	r1, r2, r1
     480:	mov	r2, #1
     484:	blx	ip
     488:	str	r0, [r5, #52]	; 0x34
     48c:	cmp	r0, #0
     490:	bne	49c <updatewindow+0x68>
     494:	mov	r0, #1
     498:	b	584 <updatewindow+0x150>
     49c:	ldr	r0, [r5, #40]	; 0x28
     4a0:	cmp	r0, #0
     4a4:	bne	4c8 <updatewindow+0x94>
     4a8:	mov	r2, #1
     4ac:	ldr	r3, [r5, #36]	; 0x24
     4b0:	lsl	r3, r2, r3
     4b4:	str	r3, [r5, #40]	; 0x28
     4b8:	mov	r1, #0
     4bc:	str	r1, [r5, #48]	; 0x30
     4c0:	mov	ip, #0
     4c4:	str	ip, [r5, #44]	; 0x2c
     4c8:	ldr	r2, [r5, #40]	; 0x28
     4cc:	cmp	r7, r2
     4d0:	bcs	564 <updatewindow+0x130>
     4d4:	ldr	r3, [r5, #48]	; 0x30
     4d8:	sub	ip, r2, r3
     4dc:	cmp	ip, r7
     4e0:	movhi	r4, r7
     4e4:	movls	r4, ip
     4e8:	ldr	ip, [r5, #52]	; 0x34
     4ec:	add	r0, ip, r3
     4f0:	sub	r1, r6, r7
     4f4:	mov	r2, r4
     4f8:	bl	0 <memcpy>
     4fc:	sub	r7, r7, r4
     500:	cmp	r7, #0
     504:	bne	544 <updatewindow+0x110>
     508:	ldr	r2, [r5, #48]	; 0x30
     50c:	add	r1, r2, r4
     510:	str	r1, [r5, #48]	; 0x30
     514:	ldr	ip, [r5, #40]	; 0x28
     518:	cmp	r1, ip
     51c:	bne	528 <updatewindow+0xf4>
     520:	mov	r2, #0
     524:	str	r2, [r5, #48]	; 0x30
     528:	ldr	r0, [r5, #44]	; 0x2c
     52c:	ldr	r1, [r5, #40]	; 0x28
     530:	cmp	r0, r1
     534:	bcs	580 <updatewindow+0x14c>
     538:	add	r1, r0, r4
     53c:	str	r1, [r5, #44]	; 0x2c
     540:	b	580 <updatewindow+0x14c>
     544:	ldr	r0, [r5, #52]	; 0x34
     548:	sub	r1, r6, r7
     54c:	mov	r2, r7
     550:	bl	0 <memcpy>
     554:	str	r7, [r5, #48]	; 0x30
     558:	ldr	r2, [r5, #40]	; 0x28
     55c:	str	r2, [r5, #44]	; 0x2c
     560:	b	580 <updatewindow+0x14c>
     564:	ldr	r0, [r5, #52]	; 0x34
     568:	sub	r1, r6, r2
     56c:	bl	0 <memcpy>
     570:	mov	r0, #0
     574:	str	r0, [r5, #48]	; 0x30
     578:	ldr	r3, [r5, #40]	; 0x28
     57c:	str	r3, [r5, #44]	; 0x2c
     580:	mov	r0, #0
     584:	ldr	r4, [sp, #8]
     588:	ldr	r5, [sp, #12]
     58c:	ldr	r6, [sp, #16]
     590:	ldr	r7, [sp, #20]
     594:	ldr	lr, [sp, #4]
     598:	add	sp, sp, #24
     59c:	bx	lr

000005a0 <coda_inflate>:
     5a0:	mov	ip, sp
     5a4:	sub	sp, sp, #88	; 0x58
     5a8:	str	ip, [sp, #8]
     5ac:	str	lr, [sp, #12]
     5b0:	str	r4, [sp, #40]	; 0x28
     5b4:	str	r5, [sp, #44]	; 0x2c
     5b8:	str	r6, [sp, #48]	; 0x30
     5bc:	str	r7, [sp, #52]	; 0x34
     5c0:	str	r8, [sp, #56]	; 0x38
     5c4:	str	r9, [sp, #60]	; 0x3c
     5c8:	str	sl, [sp, #64]	; 0x40
     5cc:	str	fp, [sp, #68]	; 0x44
     5d0:	str	r1, [sp, #32]
     5d4:	mov	r5, r0
     5d8:	cmp	r5, #0
     5dc:	beq	20e4 <coda_inflate+0x1b44>
     5e0:	ldr	r0, [r5, #28]
     5e4:	cmp	r0, #0
     5e8:	beq	20e4 <coda_inflate+0x1b44>
     5ec:	ldr	r1, [r5, #12]
     5f0:	cmp	r1, #0
     5f4:	beq	20e4 <coda_inflate+0x1b44>
     5f8:	ldr	r1, [r5]
     5fc:	cmp	r1, #0
     600:	bne	610 <coda_inflate+0x70>
     604:	ldr	r1, [r5, #4]
     608:	cmp	r1, #0
     60c:	bne	20e4 <coda_inflate+0x1b44>
     610:	ldr	r7, [r5, #28]
     614:	ldr	ip, [r7]
     618:	cmp	ip, #11
     61c:	bne	628 <coda_inflate+0x88>
     620:	mov	ip, #12
     624:	str	ip, [r7]
     628:	ldr	r0, [r5, #12]
     62c:	str	r0, [sp, #24]
     630:	ldr	sl, [r5, #16]
     634:	ldr	r8, [r5]
     638:	ldr	r6, [r5, #4]
     63c:	ldr	r9, [r7, #56]	; 0x38
     640:	ldr	fp, [r7, #60]	; 0x3c
     644:	str	r6, [sp, #36]	; 0x24
     648:	str	sl, [sp, #28]
     64c:	mov	r4, #0
     650:	ldr	r1, [r7]
     654:	cmp	r1, #32
     658:	bcs	20dc <coda_inflate+0x1b3c>
     65c:	add	pc, pc, r1, lsl #2
     660:	nop	{0}
     664:	b	6e4 <coda_inflate+0x144>
     668:	b	8c4 <coda_inflate+0x324>
     66c:	b	994 <coda_inflate+0x3f4>
     670:	b	a24 <coda_inflate+0x484>
     674:	b	ab4 <coda_inflate+0x514>
     678:	b	b60 <coda_inflate+0x5c0>
     67c:	b	c40 <coda_inflate+0x6a0>
     680:	b	d44 <coda_inflate+0x7a4>
     684:	b	e44 <coda_inflate+0x8a4>
     688:	b	f00 <coda_inflate+0x960>
     68c:	b	f68 <coda_inflate+0x9c8>
     690:	b	fb8 <coda_inflate+0xa18>
     694:	b	fe0 <coda_inflate+0xa40>
     698:	b	10e0 <coda_inflate+0xb40>
     69c:	b	116c <coda_inflate+0xbcc>
     6a0:	b	1174 <coda_inflate+0xbd4>
     6a4:	b	11f0 <coda_inflate+0xc50>
     6a8:	b	12a4 <coda_inflate+0xd04>
     6ac:	b	13bc <coda_inflate+0xe1c>
     6b0:	b	1748 <coda_inflate+0x11a8>
     6b4:	b	1750 <coda_inflate+0x11b0>
     6b8:	b	1994 <coda_inflate+0x13f4>
     6bc:	b	1a24 <coda_inflate+0x1484>
     6c0:	b	1b94 <coda_inflate+0x15f4>
     6c4:	b	1c18 <coda_inflate+0x1678>
     6c8:	b	1d14 <coda_inflate+0x1774>
     6cc:	b	1d40 <coda_inflate+0x17a0>
     6d0:	b	1e44 <coda_inflate+0x18a4>
     6d4:	b	1ebc <coda_inflate+0x191c>
     6d8:	b	1ec4 <coda_inflate+0x1924>
     6dc:	b	20d4 <coda_inflate+0x1b34>
     6e0:	b	20dc <coda_inflate+0x1b3c>
     6e4:	ldr	r3, [r7, #8]
     6e8:	cmp	r3, #0
     6ec:	bne	6fc <coda_inflate+0x15c>
     6f0:	mov	r0, #12
     6f4:	str	r0, [r7]
     6f8:	b	650 <coda_inflate+0xb0>
     6fc:	cmp	fp, #16
     700:	bcs	72c <coda_inflate+0x18c>
     704:	cmp	r6, #0
     708:	beq	1ec8 <coda_inflate+0x1928>
     70c:	sub	r6, r6, #1
     710:	mov	r1, r8
     714:	add	r8, r1, #1
     718:	ldrb	r3, [r1]
     71c:	lsl	r0, r3, fp
     720:	add	r9, r9, r0
     724:	add	fp, fp, #8
     728:	b	6fc <coda_inflate+0x15c>
     72c:	movw	lr, #35615	; 0x8b1f
     730:	cmp	r9, lr
     734:	moveq	r0, #1
     738:	movne	r0, #0
     73c:	mov	r1, #0
     740:	ldr	r2, [r7, #8]
     744:	and	r3, r2, #2
     748:	cmp	r3, #0
     74c:	movne	r1, r0
     750:	moveq	r1, r1
     754:	cmp	r1, #0
     758:	beq	7a0 <coda_inflate+0x200>
     75c:	mov	r0, #0
     760:	mov	r1, #0
     764:	mov	r2, #0
     768:	bl	0 <coda_crc32>
     76c:	str	r0, [r7, #24]
     770:	strb	r9, [sp, #72]	; 0x48
     774:	lsr	r3, r9, #8
     778:	strb	r3, [sp, #73]	; 0x49
     77c:	add	r1, sp, #72	; 0x48
     780:	mov	r2, #2
     784:	bl	0 <coda_crc32>
     788:	str	r0, [r7, #24]
     78c:	mov	r9, #0
     790:	mov	fp, #0
     794:	mov	r0, #1
     798:	str	r0, [r7]
     79c:	b	650 <coda_inflate+0xb0>
     7a0:	mov	r3, #0
     7a4:	str	r3, [r7, #16]
     7a8:	ldr	r2, [r7, #32]
     7ac:	cmp	r2, #0
     7b0:	beq	7bc <coda_inflate+0x21c>
     7b4:	mvn	r3, #0
     7b8:	str	r3, [r2, #48]	; 0x30
     7bc:	ldr	r2, [r7, #8]
     7c0:	and	r0, r2, #1
     7c4:	cmp	r0, #0
     7c8:	beq	8b0 <coda_inflate+0x310>
     7cc:	lsr	r3, r9, #8
     7d0:	and	ip, r9, #255	; 0xff
     7d4:	add	r0, r3, ip, lsl #8
     7d8:	str	r0, [sp, #20]
     7dc:	mov	r0, #31
     7e0:	str	r0, [sp, #16]
     7e4:	ldr	r0, [sp, #20]
     7e8:	ldr	r1, [sp, #16]
     7ec:	bl	0 <__aeabi_uidiv>
     7f0:	ldr	r1, [sp, #16]
     7f4:	mul	r3, r0, r1
     7f8:	ldr	ip, [sp, #20]
     7fc:	sub	r2, ip, r3
     800:	cmp	r2, #0
     804:	bne	8b0 <coda_inflate+0x310>
     808:	and	r2, r9, #15
     80c:	cmp	r2, #8
     810:	beq	828 <coda_inflate+0x288>
     814:	ldr	r1, [pc, #3860]	; 1730 <coda_inflate+0x1190>
     818:	str	r1, [r5, #24]
     81c:	mov	r2, #29
     820:	str	r2, [r7]
     824:	b	650 <coda_inflate+0xb0>
     828:	lsr	r9, r9, #4
     82c:	sub	fp, fp, #4
     830:	and	r0, r9, #15
     834:	add	r2, r0, #8
     838:	ldr	r3, [r7, #36]	; 0x24
     83c:	cmp	r3, #0
     840:	beq	860 <coda_inflate+0x2c0>
     844:	cmp	r2, r3
     848:	bls	864 <coda_inflate+0x2c4>
     84c:	ldr	r1, [pc, #3800]	; 172c <coda_inflate+0x118c>
     850:	str	r1, [r5, #24]
     854:	mov	r1, #29
     858:	str	r1, [r7]
     85c:	b	650 <coda_inflate+0xb0>
     860:	str	r2, [r7, #36]	; 0x24
     864:	mov	r3, #1
     868:	lsl	r0, r3, r2
     86c:	str	r0, [r7, #20]
     870:	mov	r0, #0
     874:	mov	r1, #0
     878:	mov	r2, #0
     87c:	bl	0 <coda_adler32>
     880:	str	r0, [r7, #24]
     884:	str	r0, [r5, #48]	; 0x30
     888:	mov	r2, #9
     88c:	mov	r3, #11
     890:	and	ip, r9, #512	; 0x200
     894:	cmp	ip, #0
     898:	movne	ip, r2
     89c:	moveq	ip, r3
     8a0:	str	ip, [r7]
     8a4:	mov	r9, #0
     8a8:	mov	fp, #0
     8ac:	b	650 <coda_inflate+0xb0>
     8b0:	ldr	r2, [pc, #3652]	; 16fc <coda_inflate+0x115c>
     8b4:	str	r2, [r5, #24]
     8b8:	mov	r1, #29
     8bc:	str	r1, [r7]
     8c0:	b	650 <coda_inflate+0xb0>
     8c4:	cmp	fp, #16
     8c8:	bcs	8f4 <coda_inflate+0x354>
     8cc:	cmp	r6, #0
     8d0:	beq	1ec8 <coda_inflate+0x1928>
     8d4:	sub	r6, r6, #1
     8d8:	mov	ip, r8
     8dc:	add	r8, ip, #1
     8e0:	ldrb	r2, [ip]
     8e4:	lsl	r3, r2, fp
     8e8:	add	r9, r9, r3
     8ec:	add	fp, fp, #8
     8f0:	b	8c4 <coda_inflate+0x324>
     8f4:	str	r9, [r7, #16]
     8f8:	and	r0, r9, #255	; 0xff
     8fc:	cmp	r0, #8
     900:	beq	918 <coda_inflate+0x378>
     904:	ldr	r2, [pc, #3620]	; 1730 <coda_inflate+0x1190>
     908:	str	r2, [r5, #24]
     90c:	mov	ip, #29
     910:	str	ip, [r7]
     914:	b	650 <coda_inflate+0xb0>
     918:	mov	ip, r9
     91c:	and	r1, ip, #57344	; 0xe000
     920:	cmp	r1, #0
     924:	beq	93c <coda_inflate+0x39c>
     928:	ldr	r3, [pc, #3536]	; 1700 <coda_inflate+0x1160>
     92c:	str	r3, [r5, #24]
     930:	mov	r3, #29
     934:	str	r3, [r7]
     938:	b	650 <coda_inflate+0xb0>
     93c:	ldr	r2, [r7, #32]
     940:	cmp	r2, #0
     944:	beq	954 <coda_inflate+0x3b4>
     948:	lsr	r3, r9, #8
     94c:	and	r0, r3, #1
     950:	str	r0, [r2]
     954:	ldr	r3, [r7, #16]
     958:	and	r3, r3, #512	; 0x200
     95c:	cmp	r3, #0
     960:	beq	984 <coda_inflate+0x3e4>
     964:	strb	r9, [sp, #72]	; 0x48
     968:	lsr	r2, r9, #8
     96c:	strb	r2, [sp, #73]	; 0x49
     970:	ldr	r0, [r7, #24]
     974:	add	r1, sp, #72	; 0x48
     978:	mov	r2, #2
     97c:	bl	0 <coda_crc32>
     980:	str	r0, [r7, #24]
     984:	mov	r9, #0
     988:	mov	fp, #0
     98c:	mov	r0, #2
     990:	str	r0, [r7]
     994:	cmp	fp, #32
     998:	bcs	9c4 <coda_inflate+0x424>
     99c:	cmp	r6, #0
     9a0:	beq	1ec8 <coda_inflate+0x1928>
     9a4:	sub	r6, r6, #1
     9a8:	mov	r1, r8
     9ac:	add	r8, r1, #1
     9b0:	ldrb	r3, [r1]
     9b4:	lsl	ip, r3, fp
     9b8:	add	r9, r9, ip
     9bc:	add	fp, fp, #8
     9c0:	b	994 <coda_inflate+0x3f4>
     9c4:	ldr	r0, [r7, #32]
     9c8:	cmp	r0, #0
     9cc:	beq	9d4 <coda_inflate+0x434>
     9d0:	str	r9, [r0, #4]
     9d4:	ldr	r2, [r7, #16]
     9d8:	and	r1, r2, #512	; 0x200
     9dc:	cmp	r1, #0
     9e0:	beq	a14 <coda_inflate+0x474>
     9e4:	strb	r9, [sp, #72]	; 0x48
     9e8:	lsr	ip, r9, #8
     9ec:	strb	ip, [sp, #73]	; 0x49
     9f0:	lsr	r1, r9, #16
     9f4:	strb	r1, [sp, #74]	; 0x4a
     9f8:	lsr	r1, r9, #24
     9fc:	strb	r1, [sp, #75]	; 0x4b
     a00:	ldr	r0, [r7, #24]
     a04:	add	r1, sp, #72	; 0x48
     a08:	mov	r2, #4
     a0c:	bl	0 <coda_crc32>
     a10:	str	r0, [r7, #24]
     a14:	mov	r9, #0
     a18:	mov	fp, #0
     a1c:	mov	r3, #3
     a20:	str	r3, [r7]
     a24:	cmp	fp, #16
     a28:	bcs	a54 <coda_inflate+0x4b4>
     a2c:	cmp	r6, #0
     a30:	beq	1ec8 <coda_inflate+0x1928>
     a34:	sub	r6, r6, #1
     a38:	mov	r2, r8
     a3c:	add	r8, r2, #1
     a40:	ldrb	r3, [r2]
     a44:	lsl	r2, r3, fp
     a48:	add	r9, r9, r2
     a4c:	add	fp, fp, #8
     a50:	b	a24 <coda_inflate+0x484>
     a54:	ldr	r0, [r7, #32]
     a58:	cmp	r0, #0
     a5c:	beq	a74 <coda_inflate+0x4d4>
     a60:	and	r3, r9, #255	; 0xff
     a64:	str	r3, [r0, #8]
     a68:	ldr	ip, [r7, #32]
     a6c:	lsr	r0, r9, #8
     a70:	str	r0, [ip, #12]
     a74:	ldr	r1, [r7, #16]
     a78:	and	r3, r1, #512	; 0x200
     a7c:	cmp	r3, #0
     a80:	beq	aa4 <coda_inflate+0x504>
     a84:	strb	r9, [sp, #72]	; 0x48
     a88:	lsr	r0, r9, #8
     a8c:	strb	r0, [sp, #73]	; 0x49
     a90:	ldr	r0, [r7, #24]
     a94:	add	r1, sp, #72	; 0x48
     a98:	mov	r2, #2
     a9c:	bl	0 <coda_crc32>
     aa0:	str	r0, [r7, #24]
     aa4:	mov	r9, #0
     aa8:	mov	fp, #0
     aac:	mov	r1, #4
     ab0:	str	r1, [r7]
     ab4:	ldr	r2, [r7, #16]
     ab8:	and	r1, r2, #1024	; 0x400
     abc:	cmp	r1, #0
     ac0:	beq	b44 <coda_inflate+0x5a4>
     ac4:	cmp	fp, #16
     ac8:	bcs	af4 <coda_inflate+0x554>
     acc:	cmp	r6, #0
     ad0:	beq	1ec8 <coda_inflate+0x1928>
     ad4:	sub	r6, r6, #1
     ad8:	mov	r1, r8
     adc:	add	r8, r1, #1
     ae0:	ldrb	r1, [r1]
     ae4:	lsl	ip, r1, fp
     ae8:	add	r9, r9, ip
     aec:	add	fp, fp, #8
     af0:	b	ac4 <coda_inflate+0x524>
     af4:	str	r9, [r7, #64]	; 0x40
     af8:	ldr	r2, [r7, #32]
     afc:	cmp	r2, #0
     b00:	beq	b08 <coda_inflate+0x568>
     b04:	str	r9, [r2, #20]
     b08:	ldr	ip, [r7, #16]
     b0c:	and	r2, ip, #512	; 0x200
     b10:	cmp	r2, #0
     b14:	beq	b38 <coda_inflate+0x598>
     b18:	strb	r9, [sp, #72]	; 0x48
     b1c:	lsr	ip, r9, #8
     b20:	strb	ip, [sp, #73]	; 0x49
     b24:	ldr	r0, [r7, #24]
     b28:	add	r1, sp, #72	; 0x48
     b2c:	mov	r2, #2
     b30:	bl	0 <coda_crc32>
     b34:	str	r0, [r7, #24]
     b38:	mov	r9, #0
     b3c:	mov	fp, #0
     b40:	b	b58 <coda_inflate+0x5b8>
     b44:	ldr	r0, [r7, #32]
     b48:	cmp	r0, #0
     b4c:	beq	b58 <coda_inflate+0x5b8>
     b50:	mov	r1, #0
     b54:	str	r1, [r0, #16]
     b58:	mov	r2, #5
     b5c:	str	r2, [r7]
     b60:	ldr	r0, [r7, #16]
     b64:	and	ip, r0, #1024	; 0x400
     b68:	cmp	ip, #0
     b6c:	beq	c30 <coda_inflate+0x690>
     b70:	ldr	r2, [r7, #64]	; 0x40
     b74:	cmp	r2, r6
     b78:	movhi	r3, r6
     b7c:	movls	r3, r2
     b80:	str	r3, [sp, #16]
     b84:	cmp	r3, #0
     b88:	beq	c24 <coda_inflate+0x684>
     b8c:	ldr	r3, [r7, #32]
     b90:	cmp	r3, #0
     b94:	beq	be4 <coda_inflate+0x644>
     b98:	ldr	ip, [r3, #16]
     b9c:	cmp	ip, #0
     ba0:	beq	be4 <coda_inflate+0x644>
     ba4:	ldr	ip, [r3, #20]
     ba8:	ldr	r2, [r7, #64]	; 0x40
     bac:	sub	ip, ip, r2
     bb0:	ldr	r0, [sp, #16]
     bb4:	add	r0, ip, r0
     bb8:	ldr	r1, [r3, #24]
     bbc:	cmp	r0, r1
     bc0:	bls	bcc <coda_inflate+0x62c>
     bc4:	sub	r2, r1, ip
     bc8:	b	bd0 <coda_inflate+0x630>
     bcc:	ldr	r2, [sp, #16]
     bd0:	ldr	r3, [r7, #32]
     bd4:	ldr	r0, [r3, #16]
     bd8:	add	r0, r0, ip
     bdc:	mov	r1, r8
     be0:	bl	0 <memcpy>
     be4:	ldr	r0, [r7, #16]
     be8:	and	r2, r0, #512	; 0x200
     bec:	cmp	r2, #0
     bf0:	beq	c08 <coda_inflate+0x668>
     bf4:	ldr	r0, [r7, #24]
     bf8:	ldr	r2, [sp, #16]
     bfc:	mov	r1, r8
     c00:	bl	0 <coda_crc32>
     c04:	str	r0, [r7, #24]
     c08:	ldr	ip, [sp, #16]
     c0c:	sub	r6, r6, ip
     c10:	add	r8, r8, ip
     c14:	ldr	r1, [r7, #64]	; 0x40
     c18:	ldr	r2, [sp, #16]
     c1c:	sub	r1, r1, r2
     c20:	str	r1, [r7, #64]	; 0x40
     c24:	ldr	r0, [r7, #64]	; 0x40
     c28:	cmp	r0, #0
     c2c:	bne	1ec8 <coda_inflate+0x1928>
     c30:	mov	r1, #0
     c34:	str	r1, [r7, #64]	; 0x40
     c38:	mov	r0, #6
     c3c:	str	r0, [r7]
     c40:	ldr	r0, [r7, #16]
     c44:	and	r1, r0, #2048	; 0x800
     c48:	cmp	r1, #0
     c4c:	beq	d20 <coda_inflate+0x780>
     c50:	cmp	r6, #0
     c54:	beq	1ec8 <coda_inflate+0x1928>
     c58:	mov	r3, #0
     c5c:	str	r3, [sp, #16]
     c60:	ldr	r3, [sp, #16]
     c64:	add	ip, r3, #1
     c68:	str	ip, [sp, #16]
     c6c:	ldrb	ip, [r8, r3]
     c70:	str	ip, [sp, #20]
     c74:	ldr	r2, [r7, #32]
     c78:	cmp	r2, #0
     c7c:	beq	cb4 <coda_inflate+0x714>
     c80:	ldr	r3, [r2, #28]
     c84:	cmp	r3, #0
     c88:	beq	cb4 <coda_inflate+0x714>
     c8c:	ldr	r1, [r7, #64]	; 0x40
     c90:	ldr	r3, [r2, #32]
     c94:	cmp	r1, r3
     c98:	bcs	cb4 <coda_inflate+0x714>
     c9c:	add	r2, r1, #1
     ca0:	str	r2, [r7, #64]	; 0x40
     ca4:	ldr	ip, [r7, #32]
     ca8:	ldr	r2, [ip, #28]
     cac:	ldr	r0, [sp, #20]
     cb0:	strb	r0, [r2, r1]
     cb4:	ldr	r0, [sp, #16]
     cb8:	cmp	r0, r6
     cbc:	movcc	r1, #1
     cc0:	movcs	r1, #0
     cc4:	mov	r2, #0
     cc8:	ldr	r3, [sp, #20]
     ccc:	cmp	r3, #0
     cd0:	movne	r1, r1
     cd4:	moveq	r1, r2
     cd8:	cmp	r1, #0
     cdc:	bne	c60 <coda_inflate+0x6c0>
     ce0:	ldr	r3, [r7, #16]
     ce4:	and	ip, r3, #512	; 0x200
     ce8:	cmp	ip, #0
     cec:	beq	d04 <coda_inflate+0x764>
     cf0:	ldr	r0, [r7, #24]
     cf4:	ldr	r2, [sp, #16]
     cf8:	mov	r1, r8
     cfc:	bl	0 <coda_crc32>
     d00:	str	r0, [r7, #24]
     d04:	ldr	r0, [sp, #16]
     d08:	sub	r6, r6, r0
     d0c:	add	r8, r8, r0
     d10:	ldr	r1, [sp, #20]
     d14:	cmp	r1, #0
     d18:	bne	1ec8 <coda_inflate+0x1928>
     d1c:	b	d34 <coda_inflate+0x794>
     d20:	ldr	r1, [r7, #32]
     d24:	cmp	r1, #0
     d28:	beq	d34 <coda_inflate+0x794>
     d2c:	mov	r2, #0
     d30:	str	r2, [r1, #28]
     d34:	mov	ip, #0
     d38:	str	ip, [r7, #64]	; 0x40
     d3c:	mov	ip, #7
     d40:	str	ip, [r7]
     d44:	ldr	r2, [r7, #16]
     d48:	and	ip, r2, #4096	; 0x1000
     d4c:	cmp	ip, #0
     d50:	beq	e28 <coda_inflate+0x888>
     d54:	cmp	r6, #0
     d58:	beq	1ec8 <coda_inflate+0x1928>
     d5c:	mov	r0, #0
     d60:	str	r0, [sp, #16]
     d64:	ldr	r1, [sp, #16]
     d68:	add	r2, r1, #1
     d6c:	str	r2, [sp, #16]
     d70:	ldrb	r2, [r8, r1]
     d74:	str	r2, [sp, #20]
     d78:	ldr	r1, [r7, #32]
     d7c:	cmp	r1, #0
     d80:	beq	dbc <coda_inflate+0x81c>
     d84:	ldr	r2, [r1, #36]	; 0x24
     d88:	cmp	r2, #0
     d8c:	beq	dbc <coda_inflate+0x81c>
     d90:	ldr	r0, [r7, #64]	; 0x40
     d94:	ldr	r2, [r1, #40]	; 0x28
     d98:	cmp	r0, r2
     d9c:	bcs	dbc <coda_inflate+0x81c>
     da0:	add	r1, r0, #1
     da4:	str	r1, [r7, #64]	; 0x40
     da8:	ldr	ip, [r7, #32]
     dac:	ldr	ip, [ip, #36]	; 0x24
     db0:	ldr	r3, [sp, #20]
     db4:	mov	r1, r3
     db8:	strb	r3, [ip, r0]
     dbc:	ldr	r1, [sp, #16]
     dc0:	cmp	r1, r6
     dc4:	movcc	ip, #1
     dc8:	movcs	ip, #0
     dcc:	mov	r0, #0
     dd0:	ldr	r1, [sp, #20]
     dd4:	cmp	r1, #0
     dd8:	movne	ip, ip
     ddc:	moveq	ip, r0
     de0:	cmp	ip, #0
     de4:	bne	d64 <coda_inflate+0x7c4>
     de8:	ldr	r2, [r7, #16]
     dec:	and	r1, r2, #512	; 0x200
     df0:	cmp	r1, #0
     df4:	beq	e0c <coda_inflate+0x86c>
     df8:	ldr	r0, [r7, #24]
     dfc:	ldr	r2, [sp, #16]
     e00:	mov	r1, r8
     e04:	bl	0 <coda_crc32>
     e08:	str	r0, [r7, #24]
     e0c:	ldr	r1, [sp, #16]
     e10:	sub	r6, r6, r1
     e14:	add	r8, r8, r1
     e18:	ldr	r1, [sp, #20]
     e1c:	cmp	r1, #0
     e20:	bne	1ec8 <coda_inflate+0x1928>
     e24:	b	e3c <coda_inflate+0x89c>
     e28:	ldr	ip, [r7, #32]
     e2c:	cmp	ip, #0
     e30:	beq	e3c <coda_inflate+0x89c>
     e34:	mov	r1, #0
     e38:	str	r1, [ip, #36]	; 0x24
     e3c:	mov	r1, #8
     e40:	str	r1, [r7]
     e44:	ldr	r1, [r7, #16]
     e48:	and	r2, r1, #512	; 0x200
     e4c:	cmp	r2, #0
     e50:	beq	eb4 <coda_inflate+0x914>
     e54:	cmp	fp, #16
     e58:	bcs	e84 <coda_inflate+0x8e4>
     e5c:	cmp	r6, #0
     e60:	beq	1ec8 <coda_inflate+0x1928>
     e64:	sub	r6, r6, #1
     e68:	mov	r3, r8
     e6c:	add	r8, r3, #1
     e70:	ldrb	ip, [r3]
     e74:	lsl	r0, ip, fp
     e78:	add	r9, r9, r0
     e7c:	add	fp, fp, #8
     e80:	b	e54 <coda_inflate+0x8b4>
     e84:	ldr	r3, [r7, #24]
     e88:	bic	r3, r3, #16711680	; 0xff0000
     e8c:	bic	r3, r3, #-16777216	; 0xff000000
     e90:	cmp	r9, r3
     e94:	beq	eac <coda_inflate+0x90c>
     e98:	ldr	ip, [pc, #2184]	; 1728 <coda_inflate+0x1188>
     e9c:	str	ip, [r5, #24]
     ea0:	mov	r2, #29
     ea4:	str	r2, [r7]
     ea8:	b	650 <coda_inflate+0xb0>
     eac:	mov	r9, #0
     eb0:	mov	fp, #0
     eb4:	ldr	r0, [r7, #32]
     eb8:	cmp	r0, #0
     ebc:	beq	edc <coda_inflate+0x93c>
     ec0:	ldr	r2, [r7, #16]
     ec4:	asr	r1, r2, #9
     ec8:	and	r1, r1, #1
     ecc:	str	r1, [r0, #44]	; 0x2c
     ed0:	ldr	r3, [r7, #32]
     ed4:	mov	r1, #1
     ed8:	str	r1, [r3, #48]	; 0x30
     edc:	mov	r0, #0
     ee0:	mov	r1, #0
     ee4:	mov	r2, #0
     ee8:	bl	0 <coda_crc32>
     eec:	str	r0, [r7, #24]
     ef0:	str	r0, [r5, #48]	; 0x30
     ef4:	mov	r3, #11
     ef8:	str	r3, [r7]
     efc:	b	650 <coda_inflate+0xb0>
     f00:	cmp	fp, #32
     f04:	bcs	f30 <coda_inflate+0x990>
     f08:	cmp	r6, #0
     f0c:	beq	1ec8 <coda_inflate+0x1928>
     f10:	sub	r6, r6, #1
     f14:	mov	r2, r8
     f18:	add	r8, r2, #1
     f1c:	ldrb	ip, [r2]
     f20:	lsl	r0, ip, fp
     f24:	add	r9, r9, r0
     f28:	add	fp, fp, #8
     f2c:	b	f00 <coda_inflate+0x960>
     f30:	lsr	ip, r9, #24
     f34:	and	r2, ip, #255	; 0xff
     f38:	lsr	r0, r9, #8
     f3c:	and	r3, r0, #65280	; 0xff00
     f40:	add	r3, r2, r3
     f44:	and	r1, r9, #65280	; 0xff00
     f48:	add	r0, r3, r1, lsl #8
     f4c:	add	ip, r0, r9, lsl #24
     f50:	str	ip, [r7, #24]
     f54:	str	ip, [r5, #48]	; 0x30
     f58:	mov	r9, #0
     f5c:	mov	fp, #0
     f60:	mov	r2, #10
     f64:	str	r2, [r7]
     f68:	ldr	r2, [r7, #12]
     f6c:	cmp	r2, #0
     f70:	bne	f98 <coda_inflate+0x9f8>
     f74:	ldr	ip, [sp, #24]
     f78:	str	ip, [r5, #12]
     f7c:	str	sl, [r5, #16]
     f80:	str	r8, [r5]
     f84:	str	r6, [r5, #4]
     f88:	str	r9, [r7, #56]	; 0x38
     f8c:	str	fp, [r7, #60]	; 0x3c
     f90:	mov	r0, #2
     f94:	b	20e8 <coda_inflate+0x1b48>
     f98:	mov	r0, #0
     f9c:	mov	r1, #0
     fa0:	mov	r2, #0
     fa4:	bl	0 <coda_adler32>
     fa8:	str	r0, [r7, #24]
     fac:	str	r0, [r5, #48]	; 0x30
     fb0:	mov	r1, #11
     fb4:	str	r1, [r7]
     fb8:	mov	r2, #1
     fbc:	ldr	ip, [sp, #32]
     fc0:	cmp	ip, #6
     fc4:	moveq	r3, #1
     fc8:	movne	r3, #0
     fcc:	cmp	ip, #5
     fd0:	moveq	r1, r2
     fd4:	movne	r1, r3
     fd8:	cmp	r1, #0
     fdc:	bne	1ec8 <coda_inflate+0x1928>
     fe0:	ldr	r3, [r7, #4]
     fe4:	cmp	r3, #0
     fe8:	beq	1004 <coda_inflate+0xa64>
     fec:	and	r0, fp, #7
     ff0:	lsr	r9, r9, r0
     ff4:	sub	fp, fp, r0
     ff8:	mov	r1, #26
     ffc:	str	r1, [r7]
    1000:	b	650 <coda_inflate+0xb0>
    1004:	cmp	fp, #3
    1008:	bcs	1034 <coda_inflate+0xa94>
    100c:	cmp	r6, #0
    1010:	beq	1ec8 <coda_inflate+0x1928>
    1014:	sub	r6, r6, #1
    1018:	mov	r3, r8
    101c:	add	r8, r3, #1
    1020:	ldrb	r1, [r3]
    1024:	lsl	r1, r1, fp
    1028:	add	r9, r9, r1
    102c:	add	fp, fp, #8
    1030:	b	1004 <coda_inflate+0xa64>
    1034:	and	r1, r9, #1
    1038:	str	r1, [r7, #4]
    103c:	lsr	r0, r9, #1
    1040:	sub	ip, fp, #1
    1044:	and	r1, r0, #3
    1048:	cmp	r1, #2
    104c:	bcs	10a8 <coda_inflate+0xb08>
    1050:	cmp	r1, #0
    1054:	bne	1064 <coda_inflate+0xac4>
    1058:	mov	r1, #13
    105c:	str	r1, [r7]
    1060:	b	10d4 <coda_inflate+0xb34>
    1064:	mov	r3, r7
    1068:	ldr	r1, [pc, #1704]	; 1718 <coda_inflate+0x1178>
    106c:	str	r1, [r3, #76]	; 0x4c
    1070:	mov	r1, #9
    1074:	str	r1, [r3, #84]	; 0x54
    1078:	ldr	r1, [pc, #1692]	; 171c <coda_inflate+0x117c>
    107c:	str	r1, [r3, #80]	; 0x50
    1080:	mov	r2, #5
    1084:	str	r2, [r3, #88]	; 0x58
    1088:	mov	r2, #19
    108c:	str	r2, [r7]
    1090:	ldr	r1, [sp, #32]
    1094:	cmp	r1, #6
    1098:	bne	10d4 <coda_inflate+0xb34>
    109c:	lsr	r9, r0, #2
    10a0:	sub	fp, ip, #2
    10a4:	b	1ec8 <coda_inflate+0x1928>
    10a8:	cmp	r1, #2
    10ac:	beq	10cc <coda_inflate+0xb2c>
    10b0:	cmp	r1, #3
    10b4:	bne	10d4 <coda_inflate+0xb34>
    10b8:	ldr	r1, [pc, #1632]	; 1720 <coda_inflate+0x1180>
    10bc:	str	r1, [r5, #24]
    10c0:	mov	r1, #29
    10c4:	str	r1, [r7]
    10c8:	b	10d4 <coda_inflate+0xb34>
    10cc:	mov	r3, #16
    10d0:	str	r3, [r7]
    10d4:	lsr	r9, r0, #2
    10d8:	sub	fp, ip, #2
    10dc:	b	650 <coda_inflate+0xb0>
    10e0:	and	r0, fp, #7
    10e4:	lsr	r9, r9, r0
    10e8:	sub	fp, fp, r0
    10ec:	cmp	fp, #32
    10f0:	bcs	111c <coda_inflate+0xb7c>
    10f4:	cmp	r6, #0
    10f8:	beq	1ec8 <coda_inflate+0x1928>
    10fc:	sub	r6, r6, #1
    1100:	mov	r3, r8
    1104:	add	r8, r3, #1
    1108:	ldrb	r3, [r3]
    110c:	lsl	r1, r3, fp
    1110:	add	r9, r9, r1
    1114:	add	fp, fp, #8
    1118:	b	10ec <coda_inflate+0xb4c>
    111c:	bic	r1, r9, #16711680	; 0xff0000
    1120:	bic	r1, r1, #-16777216	; 0xff000000
    1124:	lsr	r0, r9, #16
    1128:	eor	r2, r0, #255	; 0xff
    112c:	eor	r2, r2, #65280	; 0xff00
    1130:	cmp	r1, r2
    1134:	beq	114c <coda_inflate+0xbac>
    1138:	ldr	r0, [pc, #1464]	; 16f8 <coda_inflate+0x1158>
    113c:	str	r0, [r5, #24]
    1140:	mov	r0, #29
    1144:	str	r0, [r7]
    1148:	b	650 <coda_inflate+0xb0>
    114c:	str	r1, [r7, #64]	; 0x40
    1150:	mov	r9, #0
    1154:	mov	fp, #0
    1158:	mov	ip, #14
    115c:	str	ip, [r7]
    1160:	ldr	ip, [sp, #32]
    1164:	cmp	ip, #6
    1168:	beq	1ec8 <coda_inflate+0x1928>
    116c:	mov	r3, #15
    1170:	str	r3, [r7]
    1174:	ldr	r2, [r7, #64]	; 0x40
    1178:	cmp	r2, #0
    117c:	beq	11e4 <coda_inflate+0xc44>
    1180:	cmp	r2, r6
    1184:	movhi	r2, r6
    1188:	movls	r2, r2
    118c:	cmp	r2, sl
    1190:	movhi	r2, sl
    1194:	movls	r2, r2
    1198:	str	r2, [sp, #16]
    119c:	cmp	r2, #0
    11a0:	beq	1ec8 <coda_inflate+0x1928>
    11a4:	ldr	r2, [sp, #16]
    11a8:	mov	r1, r8
    11ac:	ldr	r0, [sp, #24]
    11b0:	bl	0 <memcpy>
    11b4:	ldr	r1, [sp, #16]
    11b8:	sub	r6, r6, r1
    11bc:	add	r8, r8, r1
    11c0:	sub	sl, sl, r1
    11c4:	ldr	r0, [sp, #24]
    11c8:	ldr	r2, [sp, #16]
    11cc:	add	ip, r0, r2
    11d0:	str	ip, [sp, #24]
    11d4:	ldr	r3, [r7, #64]	; 0x40
    11d8:	sub	ip, r3, r2
    11dc:	str	ip, [r7, #64]	; 0x40
    11e0:	b	650 <coda_inflate+0xb0>
    11e4:	mov	ip, #11
    11e8:	str	ip, [r7]
    11ec:	b	650 <coda_inflate+0xb0>
    11f0:	cmp	fp, #14
    11f4:	bcs	1220 <coda_inflate+0xc80>
    11f8:	cmp	r6, #0
    11fc:	beq	1ec8 <coda_inflate+0x1928>
    1200:	sub	r6, r6, #1
    1204:	mov	r3, r8
    1208:	add	r8, r3, #1
    120c:	ldrb	r0, [r3]
    1210:	lsl	ip, r0, fp
    1214:	add	r9, r9, ip
    1218:	add	fp, fp, #8
    121c:	b	11f0 <coda_inflate+0xc50>
    1220:	and	r1, r9, #31
    1224:	add	r3, r1, #1
    1228:	add	r3, r3, #256	; 0x100
    122c:	str	r3, [r7, #96]	; 0x60
    1230:	lsr	ip, r9, #5
    1234:	sub	r1, fp, #5
    1238:	and	r2, ip, #31
    123c:	add	r0, r2, #1
    1240:	str	r0, [r7, #100]	; 0x64
    1244:	lsr	ip, ip, #5
    1248:	sub	r3, r1, #5
    124c:	and	r0, ip, #15
    1250:	add	r0, r0, #4
    1254:	str	r0, [r7, #92]	; 0x5c
    1258:	lsr	r9, ip, #4
    125c:	sub	fp, r3, #4
    1260:	ldr	ip, [r7, #96]	; 0x60
    1264:	movw	lr, #286	; 0x11e
    1268:	cmp	ip, lr
    126c:	bhi	1290 <coda_inflate+0xcf0>
    1270:	ldr	r2, [r7, #100]	; 0x64
    1274:	cmp	r2, #30
    1278:	bhi	1290 <coda_inflate+0xcf0>
    127c:	mov	r0, #0
    1280:	str	r0, [r7, #104]	; 0x68
    1284:	mov	ip, #17
    1288:	str	ip, [r7]
    128c:	b	12a4 <coda_inflate+0xd04>
    1290:	ldr	r1, [pc, #1148]	; 1714 <coda_inflate+0x1174>
    1294:	str	r1, [r5, #24]
    1298:	mov	r3, #29
    129c:	str	r3, [r7]
    12a0:	b	650 <coda_inflate+0xb0>
    12a4:	ldr	r1, [r7, #104]	; 0x68
    12a8:	ldr	r2, [r7, #92]	; 0x5c
    12ac:	cmp	r1, r2
    12b0:	bcs	1318 <coda_inflate+0xd78>
    12b4:	cmp	fp, #3
    12b8:	bcs	12e4 <coda_inflate+0xd44>
    12bc:	cmp	r6, #0
    12c0:	beq	1ec8 <coda_inflate+0x1928>
    12c4:	sub	r6, r6, #1
    12c8:	mov	r1, r8
    12cc:	add	r8, r1, #1
    12d0:	ldrb	ip, [r1]
    12d4:	lsl	r3, ip, fp
    12d8:	add	r9, r9, r3
    12dc:	add	fp, fp, #8
    12e0:	b	12b4 <coda_inflate+0xd14>
    12e4:	ldr	r3, [r7, #104]	; 0x68
    12e8:	add	ip, r3, #1
    12ec:	str	ip, [r7, #104]	; 0x68
    12f0:	ldr	r2, [pc, #1040]	; 1708 <coda_inflate+0x1168>
    12f4:	add	r2, r2, r3, lsl #1
    12f8:	ldrh	r1, [r2]
    12fc:	lsl	ip, r1, #1
    1300:	add	r3, r7, ip
    1304:	and	r2, r9, #7
    1308:	strh	r2, [r3, #112]	; 0x70
    130c:	lsr	r9, r9, #3
    1310:	sub	fp, fp, #3
    1314:	b	12a4 <coda_inflate+0xd04>
    1318:	ldr	ip, [r7, #104]	; 0x68
    131c:	cmp	ip, #19
    1320:	bcs	134c <coda_inflate+0xdac>
    1324:	add	r1, ip, #1
    1328:	str	r1, [r7, #104]	; 0x68
    132c:	ldr	r3, [pc, #980]	; 1708 <coda_inflate+0x1168>
    1330:	add	r0, r3, ip, lsl #1
    1334:	ldrh	r0, [r0]
    1338:	lsl	r3, r0, #1
    133c:	add	r0, r7, r3
    1340:	mov	ip, #0
    1344:	strh	ip, [r0, #112]	; 0x70
    1348:	b	1318 <coda_inflate+0xd78>
    134c:	add	ip, r7, #1328	; 0x530
    1350:	str	ip, [r7, #108]	; 0x6c
    1354:	str	ip, [r7, #76]	; 0x4c
    1358:	mov	r3, #7
    135c:	str	r3, [r7, #84]	; 0x54
    1360:	mov	r0, #0
    1364:	add	r1, r7, #112	; 0x70
    1368:	mov	r2, #19
    136c:	add	r3, r7, #108	; 0x6c
    1370:	add	r4, r7, #84	; 0x54
    1374:	add	ip, r7, #752	; 0x2f0
    1378:	str	ip, [sp, #16]
    137c:	ldr	ip, [sp, #16]
    1380:	str	ip, [sp, #4]
    1384:	str	r4, [sp]
    1388:	bl	0 <coda_inflate_table>
    138c:	mov	r4, r0
    1390:	cmp	r4, #0
    1394:	beq	13ac <coda_inflate+0xe0c>
    1398:	ldr	r3, [pc, #900]	; 1724 <coda_inflate+0x1184>
    139c:	str	r3, [r5, #24]
    13a0:	mov	r2, #29
    13a4:	str	r2, [r7]
    13a8:	b	650 <coda_inflate+0xb0>
    13ac:	mov	r3, #0
    13b0:	str	r3, [r7, #104]	; 0x68
    13b4:	mov	r3, #18
    13b8:	str	r3, [r7]
    13bc:	ldr	ip, [r7, #104]	; 0x68
    13c0:	ldr	r3, [r7, #96]	; 0x60
    13c4:	ldr	r0, [r7, #100]	; 0x64
    13c8:	add	r0, r3, r0
    13cc:	cmp	ip, r0
    13d0:	bcs	15fc <coda_inflate+0x105c>
    13d4:	ldr	r2, [r7, #76]	; 0x4c
    13d8:	mov	r1, #1
    13dc:	ldr	r3, [r7, #84]	; 0x54
    13e0:	lsl	r0, r1, r3
    13e4:	sub	r3, r0, #1
    13e8:	and	r3, r9, r3
    13ec:	add	r0, r2, r3, lsl #2
    13f0:	ldrh	lr, [r0]
    13f4:	strh	lr, [sp, #76]	; 0x4c
    13f8:	ldrh	lr, [r0, #2]
    13fc:	strh	lr, [sp, #78]	; 0x4e
    1400:	ldrb	r2, [sp, #77]	; 0x4d
    1404:	cmp	r2, fp
    1408:	bls	1434 <coda_inflate+0xe94>
    140c:	cmp	r6, #0
    1410:	beq	1ec8 <coda_inflate+0x1928>
    1414:	sub	r6, r6, #1
    1418:	mov	r2, r8
    141c:	add	r8, r2, #1
    1420:	ldrb	ip, [r2]
    1424:	lsl	r0, ip, fp
    1428:	add	r9, r9, r0
    142c:	add	fp, fp, #8
    1430:	b	13d4 <coda_inflate+0xe34>
    1434:	ldrh	r1, [sp, #78]	; 0x4e
    1438:	cmp	r1, #16
    143c:	blt	15d8 <coda_inflate+0x1038>
    1440:	cmp	r1, #16
    1444:	bne	14c8 <coda_inflate+0xf28>
    1448:	ldrb	r3, [sp, #77]	; 0x4d
    144c:	add	r0, r3, #2
    1450:	cmp	fp, r0
    1454:	bcs	1480 <coda_inflate+0xee0>
    1458:	cmp	r6, #0
    145c:	beq	1ec8 <coda_inflate+0x1928>
    1460:	sub	r6, r6, #1
    1464:	mov	r0, r8
    1468:	add	r8, r0, #1
    146c:	ldrb	r3, [r0]
    1470:	lsl	r0, r3, fp
    1474:	add	r9, r9, r0
    1478:	add	fp, fp, #8
    147c:	b	1448 <coda_inflate+0xea8>
    1480:	lsr	r9, r9, r3
    1484:	sub	fp, fp, r3
    1488:	ldr	r3, [r7, #104]	; 0x68
    148c:	cmp	r3, #0
    1490:	bne	14a8 <coda_inflate+0xf08>
    1494:	ldr	r1, [pc, #600]	; 16f4 <coda_inflate+0x1154>
    1498:	str	r1, [r5, #24]
    149c:	mov	r2, #29
    14a0:	str	r2, [r7]
    14a4:	b	15fc <coda_inflate+0x105c>
    14a8:	lsl	r2, r3, #1
    14ac:	add	r2, r7, r2
    14b0:	ldrh	r3, [r2, #110]	; 0x6e
    14b4:	and	r0, r9, #3
    14b8:	add	r1, r0, #3
    14bc:	lsr	r9, r9, #2
    14c0:	sub	fp, fp, #2
    14c4:	b	157c <coda_inflate+0xfdc>
    14c8:	cmp	r1, #17
    14cc:	beq	1528 <coda_inflate+0xf88>
    14d0:	ldrb	r0, [sp, #77]	; 0x4d
    14d4:	add	r1, r0, #7
    14d8:	cmp	fp, r1
    14dc:	bcs	1508 <coda_inflate+0xf68>
    14e0:	cmp	r6, #0
    14e4:	beq	1ec8 <coda_inflate+0x1928>
    14e8:	sub	r6, r6, #1
    14ec:	mov	r1, r8
    14f0:	add	r8, r1, #1
    14f4:	ldrb	r3, [r1]
    14f8:	lsl	r1, r3, fp
    14fc:	add	r9, r9, r1
    1500:	add	fp, fp, #8
    1504:	b	14d0 <coda_inflate+0xf30>
    1508:	lsr	ip, r9, r0
    150c:	sub	r0, fp, r0
    1510:	mov	r3, #0
    1514:	and	r1, ip, #127	; 0x7f
    1518:	add	r1, r1, #11
    151c:	lsr	r9, ip, #7
    1520:	sub	fp, r0, #7
    1524:	b	157c <coda_inflate+0xfdc>
    1528:	ldrb	r0, [sp, #77]	; 0x4d
    152c:	add	r2, r0, #3
    1530:	cmp	fp, r2
    1534:	bcs	1560 <coda_inflate+0xfc0>
    1538:	cmp	r6, #0
    153c:	beq	1ec8 <coda_inflate+0x1928>
    1540:	sub	r6, r6, #1
    1544:	mov	r2, r8
    1548:	add	r8, r2, #1
    154c:	ldrb	r0, [r2]
    1550:	lsl	r3, r0, fp
    1554:	add	r9, r9, r3
    1558:	add	fp, fp, #8
    155c:	b	1528 <coda_inflate+0xf88>
    1560:	lsr	r2, r9, r0
    1564:	sub	r0, fp, r0
    1568:	mov	r3, #0
    156c:	and	r1, r2, #7
    1570:	add	r1, r1, #3
    1574:	lsr	r9, r2, #3
    1578:	sub	fp, r0, #3
    157c:	ldr	r2, [r7, #104]	; 0x68
    1580:	add	r0, r2, r1
    1584:	ldr	r2, [r7, #96]	; 0x60
    1588:	ldr	ip, [r7, #100]	; 0x64
    158c:	add	ip, r2, ip
    1590:	cmp	r0, ip
    1594:	bls	15ac <coda_inflate+0x100c>
    1598:	ldr	r3, [pc, #340]	; 16f4 <coda_inflate+0x1154>
    159c:	str	r3, [r5, #24]
    15a0:	mov	r0, #29
    15a4:	str	r0, [r7]
    15a8:	b	15fc <coda_inflate+0x105c>
    15ac:	mov	r0, r1
    15b0:	sub	r1, r0, #1
    15b4:	cmp	r0, #0
    15b8:	beq	13bc <coda_inflate+0xe1c>
    15bc:	ldr	r0, [r7, #104]	; 0x68
    15c0:	add	r2, r0, #1
    15c4:	str	r2, [r7, #104]	; 0x68
    15c8:	lsl	r0, r0, #1
    15cc:	add	r0, r7, r0
    15d0:	strh	r3, [r0, #112]	; 0x70
    15d4:	b	15ac <coda_inflate+0x100c>
    15d8:	lsr	r9, r9, r2
    15dc:	sub	fp, fp, r2
    15e0:	ldr	r3, [r7, #104]	; 0x68
    15e4:	add	ip, r3, #1
    15e8:	str	ip, [r7, #104]	; 0x68
    15ec:	lsl	r2, r3, #1
    15f0:	add	r0, r7, r2
    15f4:	strh	r1, [r0, #112]	; 0x70
    15f8:	b	13bc <coda_inflate+0xe1c>
    15fc:	ldr	r0, [r7]
    1600:	cmp	r0, #29
    1604:	beq	650 <coda_inflate+0xb0>
    1608:	add	lr, r7, #512	; 0x200
    160c:	ldrh	r2, [lr, #112]	; 0x70
    1610:	cmp	r2, #0
    1614:	bne	162c <coda_inflate+0x108c>
    1618:	ldr	r2, [pc, #228]	; 1704 <coda_inflate+0x1164>
    161c:	str	r2, [r5, #24]
    1620:	mov	ip, #29
    1624:	str	ip, [r7]
    1628:	b	650 <coda_inflate+0xb0>
    162c:	add	r0, r7, #1328	; 0x530
    1630:	str	r0, [r7, #108]	; 0x6c
    1634:	str	r0, [r7, #76]	; 0x4c
    1638:	mov	ip, #9
    163c:	str	ip, [r7, #84]	; 0x54
    1640:	mov	r0, #1
    1644:	add	r1, r7, #112	; 0x70
    1648:	ldr	r2, [r7, #96]	; 0x60
    164c:	add	r3, r7, #108	; 0x6c
    1650:	add	ip, r7, #84	; 0x54
    1654:	str	ip, [sp, #16]
    1658:	add	r4, r7, #752	; 0x2f0
    165c:	str	r4, [sp, #4]
    1660:	ldr	ip, [sp, #16]
    1664:	str	ip, [sp]
    1668:	bl	0 <coda_inflate_table>
    166c:	mov	r4, r0
    1670:	cmp	r4, #0
    1674:	beq	168c <coda_inflate+0x10ec>
    1678:	ldr	ip, [pc, #140]	; 170c <coda_inflate+0x116c>
    167c:	str	ip, [r5, #24]
    1680:	mov	r0, #29
    1684:	str	r0, [r7]
    1688:	b	650 <coda_inflate+0xb0>
    168c:	ldr	ip, [r7, #108]	; 0x6c
    1690:	str	ip, [r7, #80]	; 0x50
    1694:	mov	r3, #6
    1698:	str	r3, [r7, #88]	; 0x58
    169c:	mov	r0, #2
    16a0:	ldr	r2, [r7, #96]	; 0x60
    16a4:	lsl	r1, r2, #1
    16a8:	add	ip, r7, r1
    16ac:	add	r1, ip, #112	; 0x70
    16b0:	ldr	r3, [r7, #100]	; 0x64
    16b4:	str	r3, [sp, #16]
    16b8:	add	r3, r7, #108	; 0x6c
    16bc:	add	r4, r7, #88	; 0x58
    16c0:	add	r2, r7, #752	; 0x2f0
    16c4:	str	r2, [sp, #4]
    16c8:	str	r4, [sp]
    16cc:	ldr	r2, [sp, #16]
    16d0:	bl	0 <coda_inflate_table>
    16d4:	mov	r4, r0
    16d8:	cmp	r4, #0
    16dc:	beq	1734 <coda_inflate+0x1194>
    16e0:	ldr	r2, [pc, #40]	; 1710 <coda_inflate+0x1170>
    16e4:	str	r2, [r5, #24]
    16e8:	mov	r0, #29
    16ec:	str	r0, [r7]
    16f0:	b	650 <coda_inflate+0xb0>
    16f4:	.word	0x00000040
    16f8:	.word	0x000000c5
    16fc:	.word	0x0000011f
    1700:	.word	0x000000e2
    1704:	.word	0x00000089
    1708:	.word	0x00000a4e
    170c:	.word	0x0000014b
    1710:	.word	0x00000016
    1714:	.word	0x000000fb
    1718:	.word	0x000001ce
    171c:	.word	0x000009ce
    1720:	.word	0x0000005a
    1724:	.word	0x000001b4
    1728:	.word	0x0000002c
    172c:	.word	0x000001a0
    1730:	.word	0x00000167
    1734:	mov	r0, #19
    1738:	str	r0, [r7]
    173c:	ldr	r2, [sp, #32]
    1740:	cmp	r2, #6
    1744:	beq	1ec8 <coda_inflate+0x1928>
    1748:	mov	r0, #20
    174c:	str	r0, [r7]
    1750:	movw	lr, #258	; 0x102
    1754:	cmp	sl, lr
    1758:	movcs	r2, #1
    175c:	movcc	r2, #0
    1760:	mov	r3, #0
    1764:	cmp	r6, #6
    1768:	movcs	r1, r2
    176c:	movcc	r1, r3
    1770:	cmp	r1, #0
    1774:	beq	17d8 <coda_inflate+0x1238>
    1778:	ldr	r0, [sp, #24]
    177c:	str	r0, [r5, #12]
    1780:	str	sl, [r5, #16]
    1784:	str	r8, [r5]
    1788:	str	r6, [r5, #4]
    178c:	str	r9, [r7, #56]	; 0x38
    1790:	str	fp, [r7, #60]	; 0x3c
    1794:	ldr	r1, [sp, #28]
    1798:	mov	r0, r5
    179c:	bl	0 <coda_inflate_fast>
    17a0:	ldr	r1, [r5, #12]
    17a4:	str	r1, [sp, #24]
    17a8:	ldr	sl, [r5, #16]
    17ac:	ldr	r8, [r5]
    17b0:	ldr	r6, [r5, #4]
    17b4:	ldr	r9, [r7, #56]	; 0x38
    17b8:	ldr	fp, [r7, #60]	; 0x3c
    17bc:	ldr	ip, [r7]
    17c0:	cmp	ip, #11
    17c4:	bne	650 <coda_inflate+0xb0>
    17c8:	mvn	r3, #0
    17cc:	add	lr, r7, #4096	; 0x1000
    17d0:	str	r3, [lr, #3012]	; 0xbc4
    17d4:	b	650 <coda_inflate+0xb0>
    17d8:	mov	r1, #0
    17dc:	add	lr, r7, #4096	; 0x1000
    17e0:	str	r1, [lr, #3012]	; 0xbc4
    17e4:	ldr	r1, [r7, #76]	; 0x4c
    17e8:	mov	r0, #1
    17ec:	ldr	r2, [r7, #84]	; 0x54
    17f0:	lsl	r2, r0, r2
    17f4:	sub	r3, r2, #1
    17f8:	and	ip, r9, r3
    17fc:	add	r3, r1, ip, lsl #2
    1800:	ldrh	lr, [r3]
    1804:	strh	lr, [sp, #76]	; 0x4c
    1808:	ldrh	lr, [r3, #2]
    180c:	strh	lr, [sp, #78]	; 0x4e
    1810:	ldrb	r0, [sp, #77]	; 0x4d
    1814:	cmp	r0, fp
    1818:	bls	1844 <coda_inflate+0x12a4>
    181c:	cmp	r6, #0
    1820:	beq	1ec8 <coda_inflate+0x1928>
    1824:	sub	r6, r6, #1
    1828:	mov	r2, r8
    182c:	add	r8, r2, #1
    1830:	ldrb	r2, [r2]
    1834:	lsl	ip, r2, fp
    1838:	add	r9, r9, ip
    183c:	add	fp, fp, #8
    1840:	b	17e4 <coda_inflate+0x1244>
    1844:	ldrb	ip, [sp, #76]	; 0x4c
    1848:	cmp	ip, #0
    184c:	beq	1900 <coda_inflate+0x1360>
    1850:	and	r3, ip, #240	; 0xf0
    1854:	cmp	r3, #0
    1858:	bne	1900 <coda_inflate+0x1360>
    185c:	ldrh	lr, [sp, #76]	; 0x4c
    1860:	strh	lr, [sp, #80]	; 0x50
    1864:	ldrh	lr, [sp, #78]	; 0x4e
    1868:	strh	lr, [sp, #82]	; 0x52
    186c:	ldr	r3, [r7, #76]	; 0x4c
    1870:	ldrh	r1, [sp, #82]	; 0x52
    1874:	mov	r2, #1
    1878:	ldrb	r0, [sp, #81]	; 0x51
    187c:	ldrb	ip, [sp, #80]	; 0x50
    1880:	add	ip, r0, ip
    1884:	lsl	r2, r2, ip
    1888:	sub	r2, r2, #1
    188c:	and	r2, r9, r2
    1890:	lsr	r2, r2, r0
    1894:	add	r2, r1, r2
    1898:	add	ip, r3, r2, lsl #2
    189c:	ldrh	lr, [ip]
    18a0:	strh	lr, [sp, #76]	; 0x4c
    18a4:	ldrh	lr, [ip, #2]
    18a8:	strh	lr, [sp, #78]	; 0x4e
    18ac:	ldrb	r1, [sp, #77]	; 0x4d
    18b0:	add	ip, r0, r1
    18b4:	cmp	ip, fp
    18b8:	bls	18e4 <coda_inflate+0x1344>
    18bc:	cmp	r6, #0
    18c0:	beq	1ec8 <coda_inflate+0x1928>
    18c4:	sub	r6, r6, #1
    18c8:	mov	r2, r8
    18cc:	add	r8, r2, #1
    18d0:	ldrb	r2, [r2]
    18d4:	lsl	r2, r2, fp
    18d8:	add	r9, r9, r2
    18dc:	add	fp, fp, #8
    18e0:	b	186c <coda_inflate+0x12cc>
    18e4:	lsr	r9, r9, r0
    18e8:	sub	fp, fp, r0
    18ec:	add	lr, r7, #4096	; 0x1000
    18f0:	ldr	r3, [lr, #3012]	; 0xbc4
    18f4:	add	r2, r3, r0
    18f8:	add	lr, r7, #4096	; 0x1000
    18fc:	str	r2, [lr, #3012]	; 0xbc4
    1900:	ldrb	r3, [sp, #77]	; 0x4d
    1904:	lsr	r9, r9, r3
    1908:	sub	fp, fp, r3
    190c:	add	lr, r7, #4096	; 0x1000
    1910:	ldr	r0, [lr, #3012]	; 0xbc4
    1914:	add	r3, r0, r3
    1918:	add	lr, r7, #4096	; 0x1000
    191c:	str	r3, [lr, #3012]	; 0xbc4
    1920:	ldrh	r0, [sp, #78]	; 0x4e
    1924:	str	r0, [r7, #64]	; 0x40
    1928:	ldrb	r0, [sp, #76]	; 0x4c
    192c:	cmp	r0, #0
    1930:	bne	1940 <coda_inflate+0x13a0>
    1934:	mov	r1, #25
    1938:	str	r1, [r7]
    193c:	b	650 <coda_inflate+0xb0>
    1940:	and	r3, r0, #32
    1944:	cmp	r3, #0
    1948:	beq	1964 <coda_inflate+0x13c4>
    194c:	mvn	ip, #0
    1950:	add	lr, r7, #4096	; 0x1000
    1954:	str	ip, [lr, #3012]	; 0xbc4
    1958:	mov	ip, #11
    195c:	str	ip, [r7]
    1960:	b	650 <coda_inflate+0xb0>
    1964:	and	ip, r0, #64	; 0x40
    1968:	cmp	ip, #0
    196c:	beq	1984 <coda_inflate+0x13e4>
    1970:	ldr	r1, [pc, #1952]	; 2118 <coda_inflate+0x1b78>
    1974:	str	r1, [r5, #24]
    1978:	mov	r1, #29
    197c:	str	r1, [r7]
    1980:	b	650 <coda_inflate+0xb0>
    1984:	and	r2, r0, #15
    1988:	str	r2, [r7, #72]	; 0x48
    198c:	mov	r2, #21
    1990:	str	r2, [r7]
    1994:	ldr	ip, [r7, #72]	; 0x48
    1998:	cmp	ip, #0
    199c:	beq	1a10 <coda_inflate+0x1470>
    19a0:	ldr	ip, [r7, #72]	; 0x48
    19a4:	cmp	fp, ip
    19a8:	bcs	19d4 <coda_inflate+0x1434>
    19ac:	cmp	r6, #0
    19b0:	beq	1ec8 <coda_inflate+0x1928>
    19b4:	sub	r6, r6, #1
    19b8:	mov	r1, r8
    19bc:	add	r8, r1, #1
    19c0:	ldrb	ip, [r1]
    19c4:	lsl	r0, ip, fp
    19c8:	add	r9, r9, r0
    19cc:	add	fp, fp, #8
    19d0:	b	19a0 <coda_inflate+0x1400>
    19d4:	ldr	r1, [r7, #64]	; 0x40
    19d8:	mov	r0, #1
    19dc:	lsl	r3, r0, ip
    19e0:	sub	r3, r3, #1
    19e4:	and	r3, r9, r3
    19e8:	add	ip, r1, r3
    19ec:	str	ip, [r7, #64]	; 0x40
    19f0:	ldr	r0, [r7, #72]	; 0x48
    19f4:	lsr	r9, r9, r0
    19f8:	sub	fp, fp, r0
    19fc:	add	lr, r7, #4096	; 0x1000
    1a00:	ldr	r1, [lr, #3012]	; 0xbc4
    1a04:	add	r0, r1, r0
    1a08:	add	lr, r7, #4096	; 0x1000
    1a0c:	str	r0, [lr, #3012]	; 0xbc4
    1a10:	ldr	ip, [r7, #64]	; 0x40
    1a14:	add	lr, r7, #4096	; 0x1000
    1a18:	str	ip, [lr, #3016]	; 0xbc8
    1a1c:	mov	r2, #22
    1a20:	str	r2, [r7]
    1a24:	ldr	r0, [r7, #80]	; 0x50
    1a28:	mov	ip, #1
    1a2c:	ldr	r2, [r7, #88]	; 0x58
    1a30:	lsl	ip, ip, r2
    1a34:	sub	r3, ip, #1
    1a38:	and	ip, r9, r3
    1a3c:	add	ip, r0, ip, lsl #2
    1a40:	ldrh	lr, [ip]
    1a44:	strh	lr, [sp, #76]	; 0x4c
    1a48:	ldrh	lr, [ip, #2]
    1a4c:	strh	lr, [sp, #78]	; 0x4e
    1a50:	ldrb	r1, [sp, #77]	; 0x4d
    1a54:	cmp	r1, fp
    1a58:	bls	1a84 <coda_inflate+0x14e4>
    1a5c:	cmp	r6, #0
    1a60:	beq	1ec8 <coda_inflate+0x1928>
    1a64:	sub	r6, r6, #1
    1a68:	mov	ip, r8
    1a6c:	add	r8, ip, #1
    1a70:	ldrb	r2, [ip]
    1a74:	lsl	ip, r2, fp
    1a78:	add	r9, r9, ip
    1a7c:	add	fp, fp, #8
    1a80:	b	1a24 <coda_inflate+0x1484>
    1a84:	ldrb	r2, [sp, #76]	; 0x4c
    1a88:	and	r0, r2, #240	; 0xf0
    1a8c:	cmp	r0, #0
    1a90:	bne	1b38 <coda_inflate+0x1598>
    1a94:	ldrh	lr, [sp, #76]	; 0x4c
    1a98:	strh	lr, [sp, #80]	; 0x50
    1a9c:	ldrh	lr, [sp, #78]	; 0x4e
    1aa0:	strh	lr, [sp, #82]	; 0x52
    1aa4:	ldr	r2, [r7, #80]	; 0x50
    1aa8:	ldrh	r1, [sp, #82]	; 0x52
    1aac:	mov	ip, #1
    1ab0:	ldrb	r0, [sp, #81]	; 0x51
    1ab4:	ldrb	r3, [sp, #80]	; 0x50
    1ab8:	add	r3, r0, r3
    1abc:	lsl	r3, ip, r3
    1ac0:	sub	r3, r3, #1
    1ac4:	and	r3, r9, r3
    1ac8:	lsr	ip, r3, r0
    1acc:	add	r3, r1, ip
    1ad0:	add	r1, r2, r3, lsl #2
    1ad4:	ldrh	lr, [r1]
    1ad8:	strh	lr, [sp, #76]	; 0x4c
    1adc:	ldrh	lr, [r1, #2]
    1ae0:	strh	lr, [sp, #78]	; 0x4e
    1ae4:	ldrb	r1, [sp, #77]	; 0x4d
    1ae8:	add	r2, r0, r1
    1aec:	cmp	r2, fp
    1af0:	bls	1b1c <coda_inflate+0x157c>
    1af4:	cmp	r6, #0
    1af8:	beq	1ec8 <coda_inflate+0x1928>
    1afc:	sub	r6, r6, #1
    1b00:	mov	r2, r8
    1b04:	add	r8, r2, #1
    1b08:	ldrb	r2, [r2]
    1b0c:	lsl	r2, r2, fp
    1b10:	add	r9, r9, r2
    1b14:	add	fp, fp, #8
    1b18:	b	1aa4 <coda_inflate+0x1504>
    1b1c:	lsr	r9, r9, r0
    1b20:	sub	fp, fp, r0
    1b24:	add	lr, r7, #4096	; 0x1000
    1b28:	ldr	ip, [lr, #3012]	; 0xbc4
    1b2c:	add	r1, ip, r0
    1b30:	add	lr, r7, #4096	; 0x1000
    1b34:	str	r1, [lr, #3012]	; 0xbc4
    1b38:	ldrb	r0, [sp, #77]	; 0x4d
    1b3c:	lsr	r9, r9, r0
    1b40:	sub	fp, fp, r0
    1b44:	add	lr, r7, #4096	; 0x1000
    1b48:	ldr	r2, [lr, #3012]	; 0xbc4
    1b4c:	add	r1, r2, r0
    1b50:	add	lr, r7, #4096	; 0x1000
    1b54:	str	r1, [lr, #3012]	; 0xbc4
    1b58:	ldrb	r0, [sp, #76]	; 0x4c
    1b5c:	and	ip, r0, #64	; 0x40
    1b60:	cmp	ip, #0
    1b64:	beq	1b7c <coda_inflate+0x15dc>
    1b68:	ldr	r2, [pc, #1452]	; 211c <coda_inflate+0x1b7c>
    1b6c:	str	r2, [r5, #24]
    1b70:	mov	r1, #29
    1b74:	str	r1, [r7]
    1b78:	b	650 <coda_inflate+0xb0>
    1b7c:	ldrh	r1, [sp, #78]	; 0x4e
    1b80:	str	r1, [r7, #68]	; 0x44
    1b84:	and	r0, r0, #15
    1b88:	str	r0, [r7, #72]	; 0x48
    1b8c:	mov	r3, #23
    1b90:	str	r3, [r7]
    1b94:	ldr	r1, [r7, #72]	; 0x48
    1b98:	cmp	r1, #0
    1b9c:	beq	1c10 <coda_inflate+0x1670>
    1ba0:	ldr	r1, [r7, #72]	; 0x48
    1ba4:	cmp	fp, r1
    1ba8:	bcs	1bd4 <coda_inflate+0x1634>
    1bac:	cmp	r6, #0
    1bb0:	beq	1ec8 <coda_inflate+0x1928>
    1bb4:	sub	r6, r6, #1
    1bb8:	mov	ip, r8
    1bbc:	add	r8, ip, #1
    1bc0:	ldrb	r1, [ip]
    1bc4:	lsl	r1, r1, fp
    1bc8:	add	r9, r9, r1
    1bcc:	add	fp, fp, #8
    1bd0:	b	1ba0 <coda_inflate+0x1600>
    1bd4:	ldr	ip, [r7, #68]	; 0x44
    1bd8:	mov	r0, #1
    1bdc:	lsl	r0, r0, r1
    1be0:	sub	r1, r0, #1
    1be4:	and	r3, r9, r1
    1be8:	add	r1, ip, r3
    1bec:	str	r1, [r7, #68]	; 0x44
    1bf0:	ldr	r3, [r7, #72]	; 0x48
    1bf4:	lsr	r9, r9, r3
    1bf8:	sub	fp, fp, r3
    1bfc:	add	lr, r7, #4096	; 0x1000
    1c00:	ldr	ip, [lr, #3012]	; 0xbc4
    1c04:	add	r2, ip, r3
    1c08:	add	lr, r7, #4096	; 0x1000
    1c0c:	str	r2, [lr, #3012]	; 0xbc4
    1c10:	mov	ip, #24
    1c14:	str	ip, [r7]
    1c18:	cmp	sl, #0
    1c1c:	beq	1ec8 <coda_inflate+0x1928>
    1c20:	ldr	r3, [sp, #28]
    1c24:	sub	ip, r3, sl
    1c28:	ldr	r2, [r7, #68]	; 0x44
    1c2c:	cmp	r2, ip
    1c30:	bls	1cac <coda_inflate+0x170c>
    1c34:	sub	r1, r2, ip
    1c38:	ldr	r2, [r7, #44]	; 0x2c
    1c3c:	cmp	r1, r2
    1c40:	bls	1c68 <coda_inflate+0x16c8>
    1c44:	add	lr, r7, #4096	; 0x1000
    1c48:	ldr	ip, [lr, #3008]	; 0xbc0
    1c4c:	cmp	ip, #0
    1c50:	beq	1c68 <coda_inflate+0x16c8>
    1c54:	ldr	r2, [pc, #1220]	; 2120 <coda_inflate+0x1b80>
    1c58:	str	r2, [r5, #24]
    1c5c:	mov	r3, #29
    1c60:	str	r3, [r7]
    1c64:	b	650 <coda_inflate+0xb0>
    1c68:	ldr	r2, [r7, #48]	; 0x30
    1c6c:	cmp	r1, r2
    1c70:	bls	1c8c <coda_inflate+0x16ec>
    1c74:	sub	r1, r1, r2
    1c78:	ldr	r3, [r7, #52]	; 0x34
    1c7c:	ldr	r2, [r7, #40]	; 0x28
    1c80:	sub	r2, r2, r1
    1c84:	add	ip, r3, r2
    1c88:	b	1c98 <coda_inflate+0x16f8>
    1c8c:	ldr	r3, [r7, #52]	; 0x34
    1c90:	sub	ip, r2, r1
    1c94:	add	ip, r3, ip
    1c98:	ldr	r0, [r7, #64]	; 0x40
    1c9c:	cmp	r1, r0
    1ca0:	bls	1cb8 <coda_inflate+0x1718>
    1ca4:	mov	r1, r0
    1ca8:	b	1cb8 <coda_inflate+0x1718>
    1cac:	ldr	r3, [sp, #24]
    1cb0:	sub	ip, r3, r2
    1cb4:	ldr	r1, [r7, #64]	; 0x40
    1cb8:	cmp	r1, sl
    1cbc:	movhi	r3, sl
    1cc0:	movls	r3, r1
    1cc4:	sub	sl, sl, r3
    1cc8:	ldr	r0, [r7, #64]	; 0x40
    1ccc:	sub	r0, r0, r3
    1cd0:	str	r0, [r7, #64]	; 0x40
    1cd4:	ldr	r1, [sp, #24]
    1cd8:	add	r0, r1, #1
    1cdc:	str	r0, [sp, #24]
    1ce0:	mov	r2, ip
    1ce4:	add	ip, r2, #1
    1ce8:	ldrb	r0, [r2]
    1cec:	strb	r0, [r1]
    1cf0:	sub	r3, r3, #1
    1cf4:	cmp	r3, #0
    1cf8:	bne	1cd4 <coda_inflate+0x1734>
    1cfc:	ldr	ip, [r7, #64]	; 0x40
    1d00:	cmp	ip, #0
    1d04:	bne	650 <coda_inflate+0xb0>
    1d08:	mov	r3, #20
    1d0c:	str	r3, [r7]
    1d10:	b	650 <coda_inflate+0xb0>
    1d14:	cmp	sl, #0
    1d18:	beq	1ec8 <coda_inflate+0x1928>
    1d1c:	ldr	r0, [sp, #24]
    1d20:	add	r1, r0, #1
    1d24:	str	r1, [sp, #24]
    1d28:	ldr	r2, [r7, #64]	; 0x40
    1d2c:	strb	r2, [r0]
    1d30:	sub	sl, sl, #1
    1d34:	mov	r3, #20
    1d38:	str	r3, [r7]
    1d3c:	b	650 <coda_inflate+0xb0>
    1d40:	ldr	ip, [r7, #8]
    1d44:	cmp	ip, #0
    1d48:	beq	1e3c <coda_inflate+0x189c>
    1d4c:	cmp	fp, #32
    1d50:	bcs	1d7c <coda_inflate+0x17dc>
    1d54:	cmp	r6, #0
    1d58:	beq	1ec8 <coda_inflate+0x1928>
    1d5c:	sub	r6, r6, #1
    1d60:	mov	r3, r8
    1d64:	add	r8, r3, #1
    1d68:	ldrb	r0, [r3]
    1d6c:	lsl	r0, r0, fp
    1d70:	add	r9, r9, r0
    1d74:	add	fp, fp, #8
    1d78:	b	1d4c <coda_inflate+0x17ac>
    1d7c:	ldr	r1, [sp, #28]
    1d80:	sub	r2, r1, sl
    1d84:	ldr	r0, [r5, #20]
    1d88:	add	r1, r0, r2
    1d8c:	str	r1, [r5, #20]
    1d90:	ldr	r0, [r7, #28]
    1d94:	add	r0, r0, r2
    1d98:	str	r0, [r7, #28]
    1d9c:	cmp	r2, #0
    1da0:	beq	1ddc <coda_inflate+0x183c>
    1da4:	ldr	r1, [r7, #16]
    1da8:	cmp	r1, #0
    1dac:	bne	1dc4 <coda_inflate+0x1824>
    1db0:	ldr	r0, [r7, #24]
    1db4:	ldr	r3, [sp, #24]
    1db8:	sub	r1, r3, r2
    1dbc:	bl	0 <coda_adler32>
    1dc0:	b	1dd4 <coda_inflate+0x1834>
    1dc4:	ldr	r0, [r7, #24]
    1dc8:	ldr	r1, [sp, #24]
    1dcc:	sub	r1, r1, r2
    1dd0:	bl	0 <coda_crc32>
    1dd4:	str	r0, [r7, #24]
    1dd8:	str	r0, [r5, #48]	; 0x30
    1ddc:	str	sl, [sp, #28]
    1de0:	ldr	r0, [r7, #16]
    1de4:	cmp	r0, #0
    1de8:	bne	1e10 <coda_inflate+0x1870>
    1dec:	lsr	ip, r9, #24
    1df0:	and	r3, ip, #255	; 0xff
    1df4:	lsr	ip, r9, #8
    1df8:	and	ip, ip, #65280	; 0xff00
    1dfc:	add	r1, r3, ip
    1e00:	and	r2, r9, #65280	; 0xff00
    1e04:	add	r3, r1, r2, lsl #8
    1e08:	add	r0, r3, r9, lsl #24
    1e0c:	b	1e14 <coda_inflate+0x1874>
    1e10:	mov	r0, r9
    1e14:	ldr	ip, [r7, #24]
    1e18:	cmp	r0, ip
    1e1c:	beq	1e34 <coda_inflate+0x1894>
    1e20:	ldr	r0, [pc, #764]	; 2124 <coda_inflate+0x1b84>
    1e24:	str	r0, [r5, #24]
    1e28:	mov	r0, #29
    1e2c:	str	r0, [r7]
    1e30:	b	650 <coda_inflate+0xb0>
    1e34:	mov	r9, #0
    1e38:	mov	fp, #0
    1e3c:	mov	r3, #27
    1e40:	str	r3, [r7]
    1e44:	ldr	r3, [r7, #8]
    1e48:	cmp	r3, #0
    1e4c:	beq	1eb4 <coda_inflate+0x1914>
    1e50:	ldr	r1, [r7, #16]
    1e54:	cmp	r1, #0
    1e58:	beq	1eb4 <coda_inflate+0x1914>
    1e5c:	cmp	fp, #32
    1e60:	bcs	1e8c <coda_inflate+0x18ec>
    1e64:	cmp	r6, #0
    1e68:	beq	1ec8 <coda_inflate+0x1928>
    1e6c:	sub	r6, r6, #1
    1e70:	mov	r1, r8
    1e74:	add	r8, r1, #1
    1e78:	ldrb	r0, [r1]
    1e7c:	lsl	r2, r0, fp
    1e80:	add	r9, r9, r2
    1e84:	add	fp, fp, #8
    1e88:	b	1e5c <coda_inflate+0x18bc>
    1e8c:	ldr	ip, [r7, #28]
    1e90:	cmp	r9, ip
    1e94:	beq	1eac <coda_inflate+0x190c>
    1e98:	ldr	r2, [pc, #628]	; 2114 <coda_inflate+0x1b74>
    1e9c:	str	r2, [r5, #24]
    1ea0:	mov	r3, #29
    1ea4:	str	r3, [r7]
    1ea8:	b	650 <coda_inflate+0xb0>
    1eac:	mov	r9, #0
    1eb0:	mov	fp, #0
    1eb4:	mov	r1, #28
    1eb8:	str	r1, [r7]
    1ebc:	mov	r4, #1
    1ec0:	b	1ec8 <coda_inflate+0x1928>
    1ec4:	mvn	r4, #2
    1ec8:	ldr	r2, [sp, #24]
    1ecc:	str	r2, [r5, #12]
    1ed0:	str	sl, [r5, #16]
    1ed4:	str	r8, [r5]
    1ed8:	str	r6, [r5, #4]
    1edc:	str	r9, [r7, #56]	; 0x38
    1ee0:	str	fp, [r7, #60]	; 0x3c
    1ee4:	ldr	r1, [r7, #40]	; 0x28
    1ee8:	cmp	r1, #0
    1eec:	bne	1f20 <coda_inflate+0x1980>
    1ef0:	ldr	r0, [r5, #16]
    1ef4:	ldr	r3, [sp, #28]
    1ef8:	cmp	r3, r0
    1efc:	beq	1f50 <coda_inflate+0x19b0>
    1f00:	ldr	r0, [r7]
    1f04:	cmp	r0, #29
    1f08:	bge	1f50 <coda_inflate+0x19b0>
    1f0c:	cmp	r0, #26
    1f10:	blt	1f20 <coda_inflate+0x1980>
    1f14:	ldr	r1, [sp, #32]
    1f18:	cmp	r1, #4
    1f1c:	beq	1f50 <coda_inflate+0x19b0>
    1f20:	ldr	r1, [r5, #12]
    1f24:	ldr	r2, [r5, #16]
    1f28:	ldr	ip, [sp, #28]
    1f2c:	sub	r2, ip, r2
    1f30:	mov	r0, r5
    1f34:	bl	434 <updatewindow>
    1f38:	cmp	r0, #0
    1f3c:	beq	1f50 <coda_inflate+0x19b0>
    1f40:	mov	r3, #30
    1f44:	str	r3, [r7]
    1f48:	mvn	r0, #3
    1f4c:	b	20e8 <coda_inflate+0x1b48>
    1f50:	ldr	ip, [r5, #4]
    1f54:	ldr	r3, [sp, #36]	; 0x24
    1f58:	sub	r6, r3, ip
    1f5c:	ldr	r1, [r5, #16]
    1f60:	ldr	r2, [sp, #28]
    1f64:	sub	r8, r2, r1
    1f68:	ldr	r2, [r5, #8]
    1f6c:	add	r0, r2, r6
    1f70:	str	r0, [r5, #8]
    1f74:	ldr	r3, [r5, #20]
    1f78:	add	r1, r3, r8
    1f7c:	str	r1, [r5, #20]
    1f80:	ldr	r0, [r7, #28]
    1f84:	add	r0, r0, r8
    1f88:	str	r0, [r7, #28]
    1f8c:	cmp	r8, #0
    1f90:	movne	r2, #1
    1f94:	moveq	r2, #0
    1f98:	mov	r3, #0
    1f9c:	ldr	ip, [r7, #8]
    1fa0:	cmp	ip, #0
    1fa4:	movne	ip, r2
    1fa8:	moveq	ip, r3
    1fac:	cmp	ip, #0
    1fb0:	beq	1ff4 <coda_inflate+0x1a54>
    1fb4:	ldr	r3, [r7, #16]
    1fb8:	cmp	r3, #0
    1fbc:	bne	1fd8 <coda_inflate+0x1a38>
    1fc0:	ldr	r0, [r7, #24]
    1fc4:	ldr	r2, [r5, #12]
    1fc8:	sub	r1, r2, r8
    1fcc:	mov	r2, r8
    1fd0:	bl	0 <coda_adler32>
    1fd4:	b	1fec <coda_inflate+0x1a4c>
    1fd8:	ldr	r0, [r7, #24]
    1fdc:	ldr	r1, [r5, #12]
    1fe0:	sub	r1, r1, r8
    1fe4:	mov	r2, r8
    1fe8:	bl	0 <coda_crc32>
    1fec:	str	r0, [r7, #24]
    1ff0:	str	r0, [r5, #48]	; 0x30
    1ff4:	mov	r3, #64	; 0x40
    1ff8:	mov	r1, #0
    1ffc:	ldr	ip, [r7, #4]
    2000:	cmp	ip, #0
    2004:	movne	ip, r3
    2008:	moveq	ip, r1
    200c:	mov	r1, #128	; 0x80
    2010:	mov	r0, #0
    2014:	ldr	r3, [r7]
    2018:	cmp	r3, #11
    201c:	moveq	r0, r1
    2020:	movne	r0, r0
    2024:	cmp	r3, #19
    2028:	beq	203c <coda_inflate+0x1a9c>
    202c:	cmp	r3, #14
    2030:	moveq	r2, #1
    2034:	movne	r2, #0
    2038:	b	2040 <coda_inflate+0x1aa0>
    203c:	mov	r2, #1
    2040:	mov	r3, #256	; 0x100
    2044:	mov	r1, #0
    2048:	cmp	r2, #0
    204c:	movne	r2, r3
    2050:	moveq	r2, r1
    2054:	ldr	r1, [r7, #60]	; 0x3c
    2058:	add	r3, r1, ip
    205c:	add	r3, r3, r0
    2060:	add	ip, r3, r2
    2064:	str	ip, [r5, #44]	; 0x2c
    2068:	cmp	r8, #0
    206c:	moveq	r3, #1
    2070:	movne	r3, #0
    2074:	mov	r0, #0
    2078:	cmp	r6, #0
    207c:	moveq	r2, r3
    2080:	movne	r2, r0
    2084:	mov	ip, #1
    2088:	ldr	r3, [sp, #32]
    208c:	cmp	r3, #4
    2090:	moveq	r1, #1
    2094:	movne	r1, #0
    2098:	cmp	r2, #0
    209c:	movne	ip, ip
    20a0:	moveq	ip, r1
    20a4:	cmp	r4, #0
    20a8:	moveq	r3, #1
    20ac:	movne	r3, #0
    20b0:	mov	r2, #0
    20b4:	cmp	ip, #0
    20b8:	movne	r2, r3
    20bc:	moveq	r2, r2
    20c0:	mvn	r0, #4
    20c4:	cmp	r2, #0
    20c8:	movne	r0, r0
    20cc:	moveq	r0, r4
    20d0:	b	20e8 <coda_inflate+0x1b48>
    20d4:	mvn	r0, #3
    20d8:	b	20e8 <coda_inflate+0x1b48>
    20dc:	mvn	r0, #1
    20e0:	b	20e8 <coda_inflate+0x1b48>
    20e4:	mvn	r0, #1
    20e8:	ldr	r4, [sp, #40]	; 0x28
    20ec:	ldr	r5, [sp, #44]	; 0x2c
    20f0:	ldr	r6, [sp, #48]	; 0x30
    20f4:	ldr	r7, [sp, #52]	; 0x34
    20f8:	ldr	r8, [sp, #56]	; 0x38
    20fc:	ldr	r9, [sp, #60]	; 0x3c
    2100:	ldr	sl, [sp, #64]	; 0x40
    2104:	ldr	fp, [sp, #68]	; 0x44
    2108:	ldr	lr, [sp, #12]
    210c:	add	sp, sp, #88	; 0x58
    2110:	bx	lr
    2114:	.word	0x000000ae
    2118:	.word	0x0000006d
    211c:	.word	0x00000000
    2120:	.word	0x00000182
    2124:	.word	0x00000136

00002128 <coda_inflateEnd>:
    2128:	mov	ip, sp
    212c:	sub	sp, sp, #16
    2130:	str	ip, [sp]
    2134:	str	lr, [sp, #4]
    2138:	str	r4, [sp, #8]
    213c:	mov	r4, r0
    2140:	cmp	r4, #0
    2144:	beq	2194 <coda_inflateEnd+0x6c>
    2148:	ldr	r0, [r4, #28]
    214c:	cmp	r0, #0
    2150:	beq	2194 <coda_inflateEnd+0x6c>
    2154:	ldr	ip, [r4, #36]	; 0x24
    2158:	cmp	ip, #0
    215c:	beq	2194 <coda_inflateEnd+0x6c>
    2160:	ldr	r1, [r0, #52]	; 0x34
    2164:	cmp	r1, #0
    2168:	beq	2174 <coda_inflateEnd+0x4c>
    216c:	ldr	r0, [r4, #40]	; 0x28
    2170:	blx	ip
    2174:	ldr	ip, [r4, #36]	; 0x24
    2178:	ldr	r0, [r4, #40]	; 0x28
    217c:	ldr	r1, [r4, #28]
    2180:	blx	ip
    2184:	mov	r2, #0
    2188:	str	r2, [r4, #28]
    218c:	mov	r0, #0
    2190:	b	2198 <coda_inflateEnd+0x70>
    2194:	mvn	r0, #1
    2198:	ldr	r4, [sp, #8]
    219c:	ldr	lr, [sp, #4]
    21a0:	add	sp, sp, #16
    21a4:	bx	lr

000021a8 <coda_inflateGetDictionary>:
    21a8:	mov	ip, sp
    21ac:	sub	sp, sp, #24
    21b0:	str	ip, [sp]
    21b4:	str	lr, [sp, #4]
    21b8:	str	r4, [sp, #8]
    21bc:	str	r5, [sp, #12]
    21c0:	str	r6, [sp, #16]
    21c4:	mov	r4, r2
    21c8:	mov	r5, r1
    21cc:	cmp	r0, #0
    21d0:	beq	2250 <coda_inflateGetDictionary+0xa8>
    21d4:	ldr	r6, [r0, #28]
    21d8:	cmp	r6, #0
    21dc:	beq	2250 <coda_inflateGetDictionary+0xa8>
    21e0:	cmp	r5, #0
    21e4:	movne	r3, #1
    21e8:	moveq	r3, #0
    21ec:	mov	ip, #0
    21f0:	ldr	r0, [r6, #44]	; 0x2c
    21f4:	cmp	r0, #0
    21f8:	movne	ip, r3
    21fc:	moveq	ip, ip
    2200:	cmp	ip, #0
    2204:	beq	2238 <coda_inflateGetDictionary+0x90>
    2208:	ldr	r1, [r6, #52]	; 0x34
    220c:	ldr	r2, [r6, #48]	; 0x30
    2210:	add	r1, r1, r2
    2214:	sub	r2, r0, r2
    2218:	mov	r0, r5
    221c:	bl	0 <memcpy>
    2220:	ldr	r2, [r6, #44]	; 0x2c
    2224:	add	r3, r5, r2
    2228:	ldr	r2, [r6, #48]	; 0x30
    222c:	sub	r0, r3, r2
    2230:	ldr	r1, [r6, #52]	; 0x34
    2234:	bl	0 <memcpy>
    2238:	cmp	r4, #0
    223c:	beq	2248 <coda_inflateGetDictionary+0xa0>
    2240:	ldr	r0, [r6, #44]	; 0x2c
    2244:	str	r0, [r4]
    2248:	mov	r0, #0
    224c:	b	2254 <coda_inflateGetDictionary+0xac>
    2250:	mvn	r0, #1
    2254:	ldr	r4, [sp, #8]
    2258:	ldr	r5, [sp, #12]
    225c:	ldr	r6, [sp, #16]
    2260:	ldr	lr, [sp, #4]
    2264:	add	sp, sp, #24
    2268:	bx	lr

0000226c <coda_inflateSetDictionary>:
    226c:	mov	ip, sp
    2270:	sub	sp, sp, #24
    2274:	str	ip, [sp]
    2278:	str	lr, [sp, #4]
    227c:	str	r4, [sp, #8]
    2280:	str	r5, [sp, #12]
    2284:	str	r6, [sp, #16]
    2288:	str	r7, [sp, #20]
    228c:	mov	r4, r2
    2290:	mov	r7, r1
    2294:	mov	r5, r0
    2298:	cmp	r5, #0
    229c:	beq	2340 <coda_inflateSetDictionary+0xd4>
    22a0:	ldr	r6, [r5, #28]
    22a4:	cmp	r6, #0
    22a8:	beq	2340 <coda_inflateSetDictionary+0xd4>
    22ac:	ldr	r2, [r6, #8]
    22b0:	cmp	r2, #0
    22b4:	beq	22cc <coda_inflateSetDictionary+0x60>
    22b8:	ldr	r1, [r6]
    22bc:	cmp	r1, #10
    22c0:	beq	22cc <coda_inflateSetDictionary+0x60>
    22c4:	mvn	r0, #1
    22c8:	b	2344 <coda_inflateSetDictionary+0xd8>
    22cc:	ldr	r0, [r6]
    22d0:	cmp	r0, #10
    22d4:	bne	2308 <coda_inflateSetDictionary+0x9c>
    22d8:	mov	r0, #0
    22dc:	mov	r1, #0
    22e0:	mov	r2, #0
    22e4:	bl	0 <coda_adler32>
    22e8:	mov	r2, r4
    22ec:	mov	r1, r7
    22f0:	bl	0 <coda_adler32>
    22f4:	ldr	ip, [r6, #24]
    22f8:	cmp	r0, ip
    22fc:	beq	2308 <coda_inflateSetDictionary+0x9c>
    2300:	mvn	r0, #2
    2304:	b	2344 <coda_inflateSetDictionary+0xd8>
    2308:	add	r1, r7, r4
    230c:	mov	r2, r4
    2310:	mov	r0, r5
    2314:	bl	434 <updatewindow>
    2318:	cmp	r0, #0
    231c:	beq	2330 <coda_inflateSetDictionary+0xc4>
    2320:	mov	r1, #30
    2324:	str	r1, [r6]
    2328:	mvn	r0, #3
    232c:	b	2344 <coda_inflateSetDictionary+0xd8>
    2330:	mov	r0, #1
    2334:	str	r0, [r6, #12]
    2338:	mov	r0, #0
    233c:	b	2344 <coda_inflateSetDictionary+0xd8>
    2340:	mvn	r0, #1
    2344:	ldr	r4, [sp, #8]
    2348:	ldr	r5, [sp, #12]
    234c:	ldr	r6, [sp, #16]
    2350:	ldr	r7, [sp, #20]
    2354:	ldr	lr, [sp, #4]
    2358:	add	sp, sp, #24
    235c:	bx	lr

00002360 <coda_inflateGetHeader>:
    2360:	mov	ip, sp
    2364:	sub	sp, sp, #8
    2368:	str	ip, [sp]
    236c:	str	lr, [sp, #4]
    2370:	cmp	r0, #0
    2374:	beq	23b0 <coda_inflateGetHeader+0x50>
    2378:	ldr	r0, [r0, #28]
    237c:	cmp	r0, #0
    2380:	beq	23b0 <coda_inflateGetHeader+0x50>
    2384:	ldr	r2, [r0, #8]
    2388:	and	r2, r2, #2
    238c:	cmp	r2, #0
    2390:	bne	239c <coda_inflateGetHeader+0x3c>
    2394:	mvn	r0, #1
    2398:	b	23b4 <coda_inflateGetHeader+0x54>
    239c:	str	r1, [r0, #32]
    23a0:	mov	ip, #0
    23a4:	str	ip, [r1, #48]	; 0x30
    23a8:	mov	r0, #0
    23ac:	b	23b4 <coda_inflateGetHeader+0x54>
    23b0:	mvn	r0, #1
    23b4:	ldr	lr, [sp, #4]
    23b8:	add	sp, sp, #8
    23bc:	bx	lr

000023c0 <syncsearch>:
    23c0:	mov	ip, sp
    23c4:	sub	sp, sp, #16
    23c8:	str	ip, [sp]
    23cc:	str	lr, [sp, #4]
    23d0:	str	r4, [sp, #8]
    23d4:	str	r5, [sp, #12]
    23d8:	ldr	r5, [r0]
    23dc:	mov	r3, #0
    23e0:	cmp	r5, #4
    23e4:	movcc	ip, #1
    23e8:	movcs	ip, #0
    23ec:	mov	r4, #0
    23f0:	cmp	r3, r2
    23f4:	movcc	ip, ip
    23f8:	movcs	ip, r4
    23fc:	cmp	ip, #0
    2400:	beq	2448 <syncsearch+0x88>
    2404:	mov	r4, #0
    2408:	mov	ip, #255	; 0xff
    240c:	cmp	r5, #2
    2410:	movcc	r4, r4
    2414:	movcs	r4, ip
    2418:	ldrb	ip, [r1, r3]
    241c:	cmp	ip, r4
    2420:	beq	243c <syncsearch+0x7c>
    2424:	mov	r4, #0
    2428:	rsb	r5, r5, #4
    242c:	cmp	ip, #0
    2430:	movne	r5, r4
    2434:	moveq	r5, r5
    2438:	b	2440 <syncsearch+0x80>
    243c:	add	r5, r5, #1
    2440:	add	r3, r3, #1
    2444:	b	23e0 <syncsearch+0x20>
    2448:	str	r5, [r0]
    244c:	mov	r0, r3
    2450:	ldr	r4, [sp, #8]
    2454:	ldr	r5, [sp, #12]
    2458:	ldr	lr, [sp, #4]
    245c:	add	sp, sp, #16
    2460:	bx	lr

00002464 <coda_inflateSync>:
    2464:	mov	ip, sp
    2468:	sub	sp, sp, #32
    246c:	str	ip, [sp]
    2470:	str	lr, [sp, #4]
    2474:	str	r4, [sp, #8]
    2478:	str	r5, [sp, #12]
    247c:	str	r6, [sp, #16]
    2480:	str	r7, [sp, #20]
    2484:	mov	r4, r0
    2488:	cmp	r4, #0
    248c:	beq	25b0 <coda_inflateSync+0x14c>
    2490:	ldr	r5, [r4, #28]
    2494:	cmp	r5, #0
    2498:	beq	25b0 <coda_inflateSync+0x14c>
    249c:	ldr	r2, [r4, #4]
    24a0:	cmp	r2, #0
    24a4:	bne	24bc <coda_inflateSync+0x58>
    24a8:	ldr	r0, [r5, #60]	; 0x3c
    24ac:	cmp	r0, #8
    24b0:	bcs	24bc <coda_inflateSync+0x58>
    24b4:	mvn	r0, #4
    24b8:	b	25b4 <coda_inflateSync+0x150>
    24bc:	ldr	r0, [r5]
    24c0:	cmp	r0, #31
    24c4:	beq	2544 <coda_inflateSync+0xe0>
    24c8:	mov	ip, #31
    24cc:	str	ip, [r5]
    24d0:	ldr	ip, [r5, #56]	; 0x38
    24d4:	ldr	r0, [r5, #60]	; 0x3c
    24d8:	and	r2, r0, #7
    24dc:	lsl	r1, ip, r2
    24e0:	str	r1, [r5, #56]	; 0x38
    24e4:	ldr	r2, [r5, #60]	; 0x3c
    24e8:	and	ip, r2, #7
    24ec:	sub	r1, r2, ip
    24f0:	str	r1, [r5, #60]	; 0x3c
    24f4:	mov	r2, #0
    24f8:	ldr	ip, [r5, #60]	; 0x3c
    24fc:	cmp	ip, #8
    2500:	bcc	2530 <coda_inflateSync+0xcc>
    2504:	mov	r1, r2
    2508:	add	r2, r1, #1
    250c:	add	r3, sp, #24
    2510:	ldr	r0, [r5, #56]	; 0x38
    2514:	strb	r0, [r3, r1]
    2518:	lsr	r3, r0, #8
    251c:	str	r3, [r5, #56]	; 0x38
    2520:	ldr	r3, [r5, #60]	; 0x3c
    2524:	sub	r0, r3, #8
    2528:	str	r0, [r5, #60]	; 0x3c
    252c:	b	24f8 <coda_inflateSync+0x94>
    2530:	mov	r3, #0
    2534:	str	r3, [r5, #104]	; 0x68
    2538:	add	r0, r5, #104	; 0x68
    253c:	add	r1, sp, #24
    2540:	bl	23c0 <syncsearch>
    2544:	add	r0, r5, #104	; 0x68
    2548:	ldr	r1, [r4]
    254c:	ldr	r2, [r4, #4]
    2550:	bl	23c0 <syncsearch>
    2554:	ldr	r1, [r4, #4]
    2558:	sub	r1, r1, r0
    255c:	str	r1, [r4, #4]
    2560:	ldr	r1, [r4]
    2564:	add	ip, r1, r0
    2568:	str	ip, [r4]
    256c:	ldr	r3, [r4, #8]
    2570:	add	r6, r3, r0
    2574:	str	r6, [r4, #8]
    2578:	ldr	r3, [r5, #104]	; 0x68
    257c:	cmp	r3, #4
    2580:	beq	258c <coda_inflateSync+0x128>
    2584:	mvn	r0, #2
    2588:	b	25b4 <coda_inflateSync+0x150>
    258c:	ldr	r7, [r4, #20]
    2590:	mov	r0, r4
    2594:	bl	cc <coda_inflateReset>
    2598:	str	r6, [r4, #8]
    259c:	str	r7, [r4, #20]
    25a0:	mov	r2, #11
    25a4:	str	r2, [r5]
    25a8:	mov	r0, #0
    25ac:	b	25b4 <coda_inflateSync+0x150>
    25b0:	mvn	r0, #1
    25b4:	ldr	r4, [sp, #8]
    25b8:	ldr	r5, [sp, #12]
    25bc:	ldr	r6, [sp, #16]
    25c0:	ldr	r7, [sp, #20]
    25c4:	ldr	lr, [sp, #4]
    25c8:	add	sp, sp, #32
    25cc:	bx	lr

000025d0 <coda_inflateSyncPoint>:
    25d0:	mov	ip, sp
    25d4:	sub	sp, sp, #8
    25d8:	str	ip, [sp]
    25dc:	str	lr, [sp, #4]
    25e0:	cmp	r0, #0
    25e4:	beq	261c <coda_inflateSyncPoint+0x4c>
    25e8:	ldr	r0, [r0, #28]
    25ec:	cmp	r0, #0
    25f0:	beq	261c <coda_inflateSyncPoint+0x4c>
    25f4:	ldr	r1, [r0]
    25f8:	cmp	r1, #13
    25fc:	bne	2614 <coda_inflateSyncPoint+0x44>
    2600:	ldr	r0, [r0, #60]	; 0x3c
    2604:	cmp	r0, #0
    2608:	moveq	r0, #1
    260c:	movne	r0, #0
    2610:	b	2620 <coda_inflateSyncPoint+0x50>
    2614:	mov	r0, #0
    2618:	b	2620 <coda_inflateSyncPoint+0x50>
    261c:	mvn	r0, #1
    2620:	ldr	lr, [sp, #4]
    2624:	add	sp, sp, #8
    2628:	bx	lr

0000262c <coda_inflateCopy>:
    262c:	mov	ip, sp
    2630:	sub	sp, sp, #32
    2634:	str	ip, [sp]
    2638:	str	lr, [sp, #4]
    263c:	str	r4, [sp, #8]
    2640:	str	r5, [sp, #12]
    2644:	str	r6, [sp, #16]
    2648:	str	r7, [sp, #20]
    264c:	str	r8, [sp, #24]
    2650:	mov	r7, r1
    2654:	mov	r8, r0
    2658:	mov	r1, #1
    265c:	cmp	r7, #0
    2660:	moveq	r3, #1
    2664:	movne	r3, #0
    2668:	cmp	r8, #0
    266c:	moveq	r1, r1
    2670:	movne	r1, r3
    2674:	cmp	r1, #0
    2678:	bne	27f8 <coda_inflateCopy+0x1cc>
    267c:	ldr	r6, [r7, #28]
    2680:	cmp	r6, #0
    2684:	beq	27f8 <coda_inflateCopy+0x1cc>
    2688:	ldr	ip, [r7, #32]
    268c:	cmp	ip, #0
    2690:	beq	27f8 <coda_inflateCopy+0x1cc>
    2694:	ldr	r3, [r7, #36]	; 0x24
    2698:	cmp	r3, #0
    269c:	beq	27f8 <coda_inflateCopy+0x1cc>
    26a0:	ldr	r0, [r7, #40]	; 0x28
    26a4:	mov	r1, #1
    26a8:	movw	r2, #7116	; 0x1bcc
    26ac:	blx	ip
    26b0:	mov	r5, r0
    26b4:	cmp	r5, #0
    26b8:	bne	26c4 <coda_inflateCopy+0x98>
    26bc:	mvn	r0, #3
    26c0:	b	27fc <coda_inflateCopy+0x1d0>
    26c4:	mov	r4, #0
    26c8:	ldr	r2, [r6, #52]	; 0x34
    26cc:	cmp	r2, #0
    26d0:	beq	2714 <coda_inflateCopy+0xe8>
    26d4:	ldr	ip, [r7, #32]
    26d8:	ldr	r0, [r7, #40]	; 0x28
    26dc:	mov	r1, #1
    26e0:	ldr	r2, [r6, #36]	; 0x24
    26e4:	lsl	r1, r1, r2
    26e8:	mov	r2, #1
    26ec:	blx	ip
    26f0:	mov	r4, r0
    26f4:	cmp	r4, #0
    26f8:	bne	2714 <coda_inflateCopy+0xe8>
    26fc:	ldr	ip, [r7, #36]	; 0x24
    2700:	ldr	r0, [r7, #40]	; 0x28
    2704:	mov	r1, r5
    2708:	blx	ip
    270c:	mvn	r0, #3
    2710:	b	27fc <coda_inflateCopy+0x1d0>
    2714:	mov	r2, #56	; 0x38
    2718:	mov	r1, r7
    271c:	mov	r0, r8
    2720:	bl	0 <memcpy>
    2724:	movw	r2, #7116	; 0x1bcc
    2728:	mov	r1, r6
    272c:	mov	r0, r5
    2730:	bl	0 <memcpy>
    2734:	ldr	r1, [r6, #76]	; 0x4c
    2738:	add	r2, r6, #1328	; 0x530
    273c:	cmp	r1, r2
    2740:	bcc	27a0 <coda_inflateCopy+0x174>
    2744:	add	r3, r6, #956	; 0x3bc
    2748:	add	r3, r3, #6144	; 0x1800
    274c:	cmp	r1, r3
    2750:	bhi	27a0 <coda_inflateCopy+0x174>
    2754:	sub	r0, r1, r6
    2758:	sub	r0, r0, #1328	; 0x530
    275c:	asr	lr, r0, #31
    2760:	add	lr, r0, lr, lsr #30
    2764:	asr	r0, lr, #2
    2768:	lsl	r2, r0, #2
    276c:	add	r1, r5, r2
    2770:	add	r3, r1, #1328	; 0x530
    2774:	str	r3, [r5, #76]	; 0x4c
    2778:	ldr	ip, [r6, #80]	; 0x50
    277c:	sub	r1, ip, r6
    2780:	sub	r0, r1, #1328	; 0x530
    2784:	asr	lr, r0, #31
    2788:	add	lr, r0, lr, lsr #30
    278c:	asr	r0, lr, #2
    2790:	lsl	r1, r0, #2
    2794:	add	ip, r5, r1
    2798:	add	r2, ip, #1328	; 0x530
    279c:	str	r2, [r5, #80]	; 0x50
    27a0:	ldr	ip, [r6, #108]	; 0x6c
    27a4:	sub	r1, ip, r6
    27a8:	sub	r0, r1, #1328	; 0x530
    27ac:	asr	lr, r0, #31
    27b0:	add	lr, r0, lr, lsr #30
    27b4:	asr	ip, lr, #2
    27b8:	lsl	r3, ip, #2
    27bc:	add	r2, r5, r3
    27c0:	add	ip, r2, #1328	; 0x530
    27c4:	str	ip, [r5, #108]	; 0x6c
    27c8:	cmp	r4, #0
    27cc:	beq	27e8 <coda_inflateCopy+0x1bc>
    27d0:	mov	r1, #1
    27d4:	ldr	r2, [r6, #36]	; 0x24
    27d8:	lsl	r2, r1, r2
    27dc:	ldr	r1, [r6, #52]	; 0x34
    27e0:	mov	r0, r4
    27e4:	bl	0 <memcpy>
    27e8:	str	r4, [r5, #52]	; 0x34
    27ec:	str	r5, [r8, #28]
    27f0:	mov	r0, #0
    27f4:	b	27fc <coda_inflateCopy+0x1d0>
    27f8:	mvn	r0, #1
    27fc:	ldr	r4, [sp, #8]
    2800:	ldr	r5, [sp, #12]
    2804:	ldr	r6, [sp, #16]
    2808:	ldr	r7, [sp, #20]
    280c:	ldr	r8, [sp, #24]
    2810:	ldr	lr, [sp, #4]
    2814:	add	sp, sp, #32
    2818:	bx	lr

0000281c <coda_inflateUndermine>:
    281c:	mov	ip, sp
    2820:	sub	sp, sp, #8
    2824:	str	ip, [sp]
    2828:	str	lr, [sp, #4]
    282c:	cmp	r0, #0
    2830:	beq	2868 <coda_inflateUndermine+0x4c>
    2834:	ldr	r0, [r0, #28]
    2838:	cmp	r0, #0
    283c:	beq	2868 <coda_inflateUndermine+0x4c>
    2840:	cmp	r1, #0
    2844:	moveq	r3, #1
    2848:	movne	r3, #0
    284c:	add	lr, r0, #4096	; 0x1000
    2850:	str	r3, [lr, #3008]	; 0xbc0
    2854:	mov	r2, #1
    2858:	add	lr, r0, #4096	; 0x1000
    285c:	str	r2, [lr, #3008]	; 0xbc0
    2860:	mvn	r0, #2
    2864:	b	286c <coda_inflateUndermine+0x50>
    2868:	mvn	r0, #1
    286c:	ldr	lr, [sp, #4]
    2870:	add	sp, sp, #8
    2874:	bx	lr

00002878 <coda_inflateMark>:
    2878:	mov	ip, sp
    287c:	sub	sp, sp, #8
    2880:	str	ip, [sp]
    2884:	str	lr, [sp, #4]
    2888:	cmp	r0, #0
    288c:	beq	28e0 <coda_inflateMark+0x68>
    2890:	ldr	r1, [r0, #28]
    2894:	cmp	r1, #0
    2898:	beq	28e0 <coda_inflateMark+0x68>
    289c:	ldr	r0, [r1]
    28a0:	cmp	r0, #15
    28a4:	beq	28cc <coda_inflateMark+0x54>
    28a8:	cmp	r0, #24
    28ac:	bne	28c4 <coda_inflateMark+0x4c>
    28b0:	add	lr, r1, #4096	; 0x1000
    28b4:	ldr	ip, [lr, #3016]	; 0xbc8
    28b8:	ldr	r0, [r1, #64]	; 0x40
    28bc:	sub	r2, ip, r0
    28c0:	b	28d0 <coda_inflateMark+0x58>
    28c4:	mov	r2, #0
    28c8:	b	28d0 <coda_inflateMark+0x58>
    28cc:	ldr	r2, [r1, #64]	; 0x40
    28d0:	add	lr, r1, #4096	; 0x1000
    28d4:	ldr	r3, [lr, #3012]	; 0xbc4
    28d8:	add	r0, r2, r3, lsl #16
    28dc:	b	28e8 <coda_inflateMark+0x70>
    28e0:	movw	r0, #0
    28e4:	movt	r0, #65535	; 0xffff
    28e8:	ldr	lr, [sp, #4]
    28ec:	add	sp, sp, #8
    28f0:	bx	lr
