
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codacmp.dir/tools/codacmp/codacmp.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #80	; 0x50
       c:	movw	r2, #0
      10:	str	r2, [fp, #-4]
      14:	str	r0, [fp, #-8]
      18:	str	r1, [fp, #-12]
      1c:	movw	r0, #0
      20:	movt	r0, #0
      24:	str	r2, [r0]
      28:	movw	r0, #1
      2c:	str	r0, [fp, #-16]
      30:	str	r2, [fp, #-20]	; 0xffffffec
      34:	ldr	r0, [fp, #-8]
      38:	cmp	r0, #1
      3c:	beq	78 <main+0x78>
      40:	ldr	r0, [fp, #-12]
      44:	ldr	r0, [r0, #4]
      48:	movw	r1, #0
      4c:	movt	r1, #0
      50:	bl	0 <strcmp>
      54:	cmp	r0, #0
      58:	beq	78 <main+0x78>
      5c:	ldr	r0, [fp, #-12]
      60:	ldr	r0, [r0, #4]
      64:	movw	r1, #0
      68:	movt	r1, #0
      6c:	bl	0 <strcmp>
      70:	cmp	r0, #0
      74:	bne	84 <main+0x84>
      78:	bl	c0c <print_help>
      7c:	movw	r0, #0
      80:	bl	0 <exit>
      84:	ldr	r0, [fp, #-12]
      88:	ldr	r0, [r0, #4]
      8c:	movw	r1, #0
      90:	movt	r1, #0
      94:	bl	0 <strcmp>
      98:	cmp	r0, #0
      9c:	beq	bc <main+0xbc>
      a0:	ldr	r0, [fp, #-12]
      a4:	ldr	r0, [r0, #4]
      a8:	movw	r1, #0
      ac:	movt	r1, #0
      b0:	bl	0 <strcmp>
      b4:	cmp	r0, #0
      b8:	bne	c8 <main+0xc8>
      bc:	bl	ed8 <print_version>
      c0:	movw	r0, #0
      c4:	bl	0 <exit>
      c8:	bl	528 <array_key_info_init>
      cc:	movw	lr, #1
      d0:	str	lr, [fp, #-28]	; 0xffffffe4
      d4:	ldr	lr, [fp, #-28]	; 0xffffffe4
      d8:	add	lr, lr, #1
      dc:	ldr	r0, [fp, #-8]
      e0:	cmp	lr, r0
      e4:	bge	138 <main+0x138>
      e8:	ldr	r0, [fp, #-12]
      ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
      f0:	add	r0, r0, r1, lsl #2
      f4:	ldr	r0, [r0]
      f8:	movw	r1, #0
      fc:	movt	r1, #0
     100:	bl	0 <strcmp>
     104:	cmp	r0, #0
     108:	bne	138 <main+0x138>
     10c:	ldr	r0, [fp, #-12]
     110:	ldr	r1, [fp, #-28]	; 0xffffffe4
     114:	add	r1, r1, #1
     118:	add	r0, r0, r1, lsl #2
     11c:	ldr	r0, [r0]
     120:	bl	0 <coda_set_definition_path>
     124:	ldr	r1, [fp, #-28]	; 0xffffffe4
     128:	add	r1, r1, #2
     12c:	str	r1, [fp, #-28]	; 0xffffffe4
     130:	str	r0, [fp, #-36]	; 0xffffffdc
     134:	b	1ac <main+0x1ac>
     138:	movw	r0, #0
     13c:	movt	r0, #0
     140:	str	r0, [fp, #-32]	; 0xffffffe0
     144:	ldr	r0, [fp, #-12]
     148:	ldr	r0, [r0]
     14c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     150:	movw	r1, #0
     154:	bl	0 <coda_set_definition_path_conditional>
     158:	cmp	r0, #0
     15c:	beq	1a8 <main+0x1a8>
     160:	movw	r0, #0
     164:	movt	r0, #0
     168:	ldr	r0, [r0]
     16c:	str	r0, [sp, #40]	; 0x28
     170:	bl	0 <coda_get_errno>
     174:	ldr	r0, [r0]
     178:	bl	0 <coda_errno_to_string>
     17c:	ldr	lr, [sp, #40]	; 0x28
     180:	str	r0, [sp, #36]	; 0x24
     184:	mov	r0, lr
     188:	movw	r1, #0
     18c:	movt	r1, #0
     190:	ldr	r2, [sp, #36]	; 0x24
     194:	bl	0 <fprintf>
     198:	movw	r1, #1
     19c:	str	r0, [sp, #32]
     1a0:	mov	r0, r1
     1a4:	bl	0 <exit>
     1a8:	b	1ac <main+0x1ac>
     1ac:	b	1b0 <main+0x1b0>
     1b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     1b4:	ldr	r1, [fp, #-8]
     1b8:	cmp	r0, r1
     1bc:	bge	41c <main+0x41c>
     1c0:	ldr	r0, [fp, #-12]
     1c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
     1c8:	add	r0, r0, r1, lsl #2
     1cc:	ldr	r0, [r0]
     1d0:	movw	r1, #0
     1d4:	movt	r1, #0
     1d8:	bl	0 <strcmp>
     1dc:	cmp	r0, #0
     1e0:	beq	208 <main+0x208>
     1e4:	ldr	r0, [fp, #-12]
     1e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
     1ec:	add	r0, r0, r1, lsl #2
     1f0:	ldr	r0, [r0]
     1f4:	movw	r1, #0
     1f8:	movt	r1, #0
     1fc:	bl	0 <strcmp>
     200:	cmp	r0, #0
     204:	bne	21c <main+0x21c>
     208:	movw	r0, #0
     20c:	movt	r0, #0
     210:	movw	r1, #1
     214:	str	r1, [r0]
     218:	b	40c <main+0x40c>
     21c:	ldr	r0, [fp, #-12]
     220:	ldr	r1, [fp, #-28]	; 0xffffffe4
     224:	add	r0, r0, r1, lsl #2
     228:	ldr	r0, [r0]
     22c:	movw	r1, #0
     230:	movt	r1, #0
     234:	bl	0 <strcmp>
     238:	cmp	r0, #0
     23c:	beq	264 <main+0x264>
     240:	ldr	r0, [fp, #-12]
     244:	ldr	r1, [fp, #-28]	; 0xffffffe4
     248:	add	r0, r0, r1, lsl #2
     24c:	ldr	r0, [r0]
     250:	movw	r1, #0
     254:	movt	r1, #0
     258:	bl	0 <strcmp>
     25c:	cmp	r0, #0
     260:	bne	270 <main+0x270>
     264:	movw	r0, #0
     268:	str	r0, [fp, #-16]
     26c:	b	408 <main+0x408>
     270:	ldr	r0, [fp, #-12]
     274:	ldr	r1, [fp, #-28]	; 0xffffffe4
     278:	add	r0, r0, r1, lsl #2
     27c:	ldr	r0, [r0]
     280:	movw	r1, #0
     284:	movt	r1, #0
     288:	bl	0 <strcmp>
     28c:	cmp	r0, #0
     290:	beq	2b8 <main+0x2b8>
     294:	ldr	r0, [fp, #-12]
     298:	ldr	r1, [fp, #-28]	; 0xffffffe4
     29c:	add	r0, r0, r1, lsl #2
     2a0:	ldr	r0, [r0]
     2a4:	movw	r1, #0
     2a8:	movt	r1, #0
     2ac:	bl	0 <strcmp>
     2b0:	cmp	r0, #0
     2b4:	bne	314 <main+0x314>
     2b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     2bc:	add	r0, r0, #1
     2c0:	ldr	r1, [fp, #-8]
     2c4:	cmp	r0, r1
     2c8:	bge	314 <main+0x314>
     2cc:	ldr	r0, [fp, #-12]
     2d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     2d4:	add	r1, r1, #1
     2d8:	add	r0, r0, r1, lsl #2
     2dc:	ldr	r0, [r0]
     2e0:	ldrb	r0, [r0]
     2e4:	cmp	r0, #45	; 0x2d
     2e8:	beq	314 <main+0x314>
     2ec:	ldr	r0, [fp, #-12]
     2f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     2f4:	add	r1, r1, #1
     2f8:	add	r0, r0, r1, lsl #2
     2fc:	ldr	r0, [r0]
     300:	str	r0, [fp, #-20]	; 0xffffffec
     304:	ldr	r0, [fp, #-28]	; 0xffffffe4
     308:	add	r0, r0, #1
     30c:	str	r0, [fp, #-28]	; 0xffffffe4
     310:	b	404 <main+0x404>
     314:	ldr	r0, [fp, #-12]
     318:	ldr	r1, [fp, #-28]	; 0xffffffe4
     31c:	add	r0, r0, r1, lsl #2
     320:	ldr	r0, [r0]
     324:	movw	r1, #0
     328:	movt	r1, #0
     32c:	bl	0 <strcmp>
     330:	cmp	r0, #0
     334:	beq	35c <main+0x35c>
     338:	ldr	r0, [fp, #-12]
     33c:	ldr	r1, [fp, #-28]	; 0xffffffe4
     340:	add	r0, r0, r1, lsl #2
     344:	ldr	r0, [r0]
     348:	movw	r1, #0
     34c:	movt	r1, #0
     350:	bl	0 <strcmp>
     354:	cmp	r0, #0
     358:	bne	3b8 <main+0x3b8>
     35c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     360:	add	r0, r0, #2
     364:	ldr	r1, [fp, #-8]
     368:	cmp	r0, r1
     36c:	bge	3b8 <main+0x3b8>
     370:	ldr	r0, [fp, #-12]
     374:	ldr	r1, [fp, #-28]	; 0xffffffe4
     378:	add	r2, r0, r1, lsl #2
     37c:	ldr	r2, [r2, #4]
     380:	add	r1, r1, #2
     384:	add	r0, r0, r1, lsl #2
     388:	ldr	r1, [r0]
     38c:	mov	r0, r2
     390:	bl	548 <array_key_info_add_key>
     394:	cmp	r0, #0
     398:	beq	3a8 <main+0x3a8>
     39c:	mvn	r0, #0
     3a0:	str	r0, [fp, #-4]
     3a4:	b	51c <main+0x51c>
     3a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     3ac:	add	r0, r0, #2
     3b0:	str	r0, [fp, #-28]	; 0xffffffe4
     3b4:	b	400 <main+0x400>
     3b8:	ldr	r0, [fp, #-12]
     3bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
     3c0:	add	r0, r0, r1, lsl #2
     3c4:	ldr	r0, [r0]
     3c8:	ldrb	r0, [r0]
     3cc:	cmp	r0, #45	; 0x2d
     3d0:	beq	3d8 <main+0x3d8>
     3d4:	b	41c <main+0x41c>
     3d8:	movw	r0, #0
     3dc:	movt	r0, #0
     3e0:	ldr	r0, [r0]
     3e4:	movw	r1, #0
     3e8:	movt	r1, #0
     3ec:	bl	0 <fprintf>
     3f0:	str	r0, [sp, #28]
     3f4:	bl	c0c <print_help>
     3f8:	movw	r0, #1
     3fc:	bl	0 <exit>
     400:	b	404 <main+0x404>
     404:	b	408 <main+0x408>
     408:	b	40c <main+0x40c>
     40c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     410:	add	r0, r0, #1
     414:	str	r0, [fp, #-28]	; 0xffffffe4
     418:	b	1b0 <main+0x1b0>
     41c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     420:	ldr	r1, [fp, #-8]
     424:	sub	r1, r1, #2
     428:	cmp	r0, r1
     42c:	beq	458 <main+0x458>
     430:	movw	r0, #0
     434:	movt	r0, #0
     438:	ldr	r0, [r0]
     43c:	movw	r1, #0
     440:	movt	r1, #0
     444:	bl	0 <fprintf>
     448:	str	r0, [sp, #24]
     44c:	bl	c0c <print_help>
     450:	movw	r0, #1
     454:	bl	0 <exit>
     458:	bl	0 <coda_init>
     45c:	cmp	r0, #0
     460:	beq	4ac <main+0x4ac>
     464:	movw	r0, #0
     468:	movt	r0, #0
     46c:	ldr	r0, [r0]
     470:	str	r0, [sp, #20]
     474:	bl	0 <coda_get_errno>
     478:	ldr	r0, [r0]
     47c:	bl	0 <coda_errno_to_string>
     480:	ldr	lr, [sp, #20]
     484:	str	r0, [sp, #16]
     488:	mov	r0, lr
     48c:	movw	r1, #0
     490:	movt	r1, #0
     494:	ldr	r2, [sp, #16]
     498:	bl	0 <fprintf>
     49c:	movw	r1, #1
     4a0:	str	r0, [sp, #12]
     4a4:	mov	r0, r1
     4a8:	bl	0 <exit>
     4ac:	mov	r0, #0
     4b0:	bl	0 <coda_set_option_perform_boundary_checks>
     4b4:	ldr	lr, [fp, #-16]
     4b8:	str	r0, [sp, #8]
     4bc:	mov	r0, lr
     4c0:	bl	0 <coda_set_option_perform_conversions>
     4c4:	ldr	lr, [fp, #-12]
     4c8:	ldr	r1, [fp, #-8]
     4cc:	add	r2, lr, r1, lsl #2
     4d0:	ldr	r2, [r2, #-8]
     4d4:	sub	r1, r1, #1
     4d8:	add	r1, lr, r1, lsl #2
     4dc:	ldr	r1, [r1]
     4e0:	ldr	lr, [fp, #-20]	; 0xffffffec
     4e4:	str	r0, [sp, #4]
     4e8:	mov	r0, r2
     4ec:	mov	r2, lr
     4f0:	bl	6d8 <compare_files>
     4f4:	str	r0, [fp, #-24]	; 0xffffffe8
     4f8:	bl	0 <coda_done>
     4fc:	bl	b84 <array_key_info_done>
     500:	ldr	r0, [fp, #-24]	; 0xffffffe8
     504:	cmp	r0, #0
     508:	beq	514 <main+0x514>
     50c:	movw	r0, #1
     510:	bl	0 <exit>
     514:	movw	r0, #0
     518:	str	r0, [fp, #-4]
     51c:	ldr	r0, [fp, #-4]
     520:	mov	sp, fp
     524:	pop	{fp, pc}

00000528 <array_key_info_init>:
     528:	movw	r0, #0
     52c:	movt	r0, #0
     530:	movw	r1, #0
     534:	str	r1, [r0]
     538:	str	r1, [r0, #4]
     53c:	str	r1, [r0, #8]
     540:	str	r1, [r0, #12]
     544:	bx	lr

00000548 <array_key_info_add_key>:
     548:	push	{fp, lr}
     54c:	mov	fp, sp
     550:	sub	sp, sp, #32
     554:	str	r0, [fp, #-8]
     558:	str	r1, [fp, #-12]
     55c:	movw	r0, #0
     560:	movt	r0, #0
     564:	ldr	r0, [r0]
     568:	asr	r1, r0, #31
     56c:	add	r1, r0, r1, lsr #28
     570:	bic	r1, r1, #15
     574:	sub	r0, r0, r1
     578:	cmp	r0, #0
     57c:	bne	684 <array_key_info_add_key+0x13c>
     580:	movw	r0, #0
     584:	movt	r0, #0
     588:	ldr	r1, [r0]
     58c:	ldr	r0, [r0, #4]
     590:	add	r1, r1, #16
     594:	lsl	r1, r1, #2
     598:	bl	0 <realloc>
     59c:	str	r0, [sp, #16]
     5a0:	ldr	r0, [sp, #16]
     5a4:	movw	r1, #0
     5a8:	cmp	r0, r1
     5ac:	bne	5f0 <array_key_info_add_key+0xa8>
     5b0:	movw	r0, #0
     5b4:	movt	r0, #0
     5b8:	ldr	r0, [r0]
     5bc:	add	r0, r0, #16
     5c0:	lsl	r2, r0, #2
     5c4:	mvn	r0, #0
     5c8:	movw	r1, #0
     5cc:	movt	r1, #0
     5d0:	movw	r3, #0
     5d4:	movt	r3, #0
     5d8:	movw	ip, #198	; 0xc6
     5dc:	str	ip, [sp]
     5e0:	bl	0 <coda_set_error>
     5e4:	mvn	r0, #0
     5e8:	str	r0, [fp, #-4]
     5ec:	b	6cc <array_key_info_add_key+0x184>
     5f0:	ldr	r0, [sp, #16]
     5f4:	movw	r1, #0
     5f8:	movt	r1, #0
     5fc:	str	r0, [r1, #4]
     600:	ldr	r0, [r1]
     604:	ldr	r1, [r1, #8]
     608:	add	r0, r0, #16
     60c:	lsl	r0, r0, #2
     610:	str	r0, [sp, #8]
     614:	mov	r0, r1
     618:	ldr	r1, [sp, #8]
     61c:	bl	0 <realloc>
     620:	str	r0, [sp, #12]
     624:	ldr	r0, [sp, #12]
     628:	movw	r1, #0
     62c:	cmp	r0, r1
     630:	bne	674 <array_key_info_add_key+0x12c>
     634:	movw	r0, #0
     638:	movt	r0, #0
     63c:	ldr	r0, [r0]
     640:	add	r0, r0, #16
     644:	lsl	r2, r0, #2
     648:	mvn	r0, #0
     64c:	movw	r1, #0
     650:	movt	r1, #0
     654:	movw	r3, #0
     658:	movt	r3, #0
     65c:	movw	ip, #207	; 0xcf
     660:	str	ip, [sp]
     664:	bl	0 <coda_set_error>
     668:	mvn	r0, #0
     66c:	str	r0, [fp, #-4]
     670:	b	6cc <array_key_info_add_key+0x184>
     674:	ldr	r0, [sp, #12]
     678:	movw	r1, #0
     67c:	movt	r1, #0
     680:	str	r0, [r1, #8]
     684:	ldr	r0, [fp, #-8]
     688:	movw	r1, #0
     68c:	movt	r1, #0
     690:	ldr	r2, [r1]
     694:	ldr	r3, [r1, #4]
     698:	str	r0, [r3, r2, lsl #2]
     69c:	ldr	r0, [fp, #-12]
     6a0:	ldr	r2, [r1]
     6a4:	ldr	r1, [r1, #8]
     6a8:	add	r1, r1, r2, lsl #2
     6ac:	str	r0, [r1]
     6b0:	movw	r0, #0
     6b4:	movt	r0, #0
     6b8:	ldr	r1, [r0]
     6bc:	add	r1, r1, #1
     6c0:	str	r1, [r0]
     6c4:	movw	r0, #0
     6c8:	str	r0, [fp, #-4]
     6cc:	ldr	r0, [fp, #-4]
     6d0:	mov	sp, fp
     6d4:	pop	{fp, pc}

000006d8 <compare_files>:
     6d8:	push	{r4, r5, fp, lr}
     6dc:	add	fp, sp, #8
     6e0:	sub	sp, sp, #216	; 0xd8
     6e4:	sub	sp, sp, #1024	; 0x400
     6e8:	str	r0, [fp, #-16]
     6ec:	str	r1, [fp, #-20]	; 0xffffffec
     6f0:	str	r2, [fp, #-24]	; 0xffffffe8
     6f4:	ldr	r0, [fp, #-16]
     6f8:	sub	r1, fp, #28
     6fc:	bl	0 <coda_open>
     700:	str	r0, [sp, #172]	; 0xac
     704:	ldr	r0, [sp, #172]	; 0xac
     708:	cmp	r0, #0
     70c:	beq	74c <compare_files+0x74>
     710:	bl	0 <coda_get_errno>
     714:	ldr	r0, [r0]
     718:	cmn	r0, #21
     71c:	bne	74c <compare_files+0x74>
     720:	movw	r0, #0
     724:	bl	0 <coda_set_option_use_mmap>
     728:	ldr	lr, [fp, #-16]
     72c:	str	r0, [sp, #168]	; 0xa8
     730:	mov	r0, lr
     734:	sub	r1, fp, #28
     738:	bl	0 <coda_open>
     73c:	str	r0, [sp, #172]	; 0xac
     740:	movw	r0, #1
     744:	bl	0 <coda_set_option_use_mmap>
     748:	str	r0, [sp, #164]	; 0xa4
     74c:	ldr	r0, [sp, #172]	; 0xac
     750:	cmp	r0, #0
     754:	beq	7b4 <compare_files+0xdc>
     758:	movw	r0, #0
     75c:	movt	r0, #0
     760:	ldr	r0, [r0]
     764:	movw	r1, #0
     768:	movt	r1, #0
     76c:	ldr	r2, [r1]
     770:	str	r0, [sp, #160]	; 0xa0
     774:	str	r2, [sp, #156]	; 0x9c
     778:	bl	0 <coda_get_errno>
     77c:	ldr	r0, [r0]
     780:	bl	0 <coda_errno_to_string>
     784:	ldr	r1, [sp, #160]	; 0xa0
     788:	str	r0, [sp, #152]	; 0x98
     78c:	mov	r0, r1
     790:	movw	r1, #0
     794:	movt	r1, #0
     798:	ldr	r2, [sp, #156]	; 0x9c
     79c:	ldr	r3, [sp, #152]	; 0x98
     7a0:	bl	0 <fprintf>
     7a4:	mvn	r1, #0
     7a8:	str	r1, [fp, #-12]
     7ac:	str	r0, [sp, #148]	; 0x94
     7b0:	b	b78 <compare_files+0x4a0>
     7b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     7b8:	bl	f34 <array_key_info_set_product>
     7bc:	cmp	r0, #0
     7c0:	beq	820 <compare_files+0x148>
     7c4:	movw	r0, #0
     7c8:	movt	r0, #0
     7cc:	ldr	r0, [r0]
     7d0:	movw	r1, #0
     7d4:	movt	r1, #0
     7d8:	ldr	r2, [r1]
     7dc:	str	r0, [sp, #144]	; 0x90
     7e0:	str	r2, [sp, #140]	; 0x8c
     7e4:	bl	0 <coda_get_errno>
     7e8:	ldr	r0, [r0]
     7ec:	bl	0 <coda_errno_to_string>
     7f0:	ldr	r1, [sp, #144]	; 0x90
     7f4:	str	r0, [sp, #136]	; 0x88
     7f8:	mov	r0, r1
     7fc:	movw	r1, #0
     800:	movt	r1, #0
     804:	ldr	r2, [sp, #140]	; 0x8c
     808:	ldr	r3, [sp, #136]	; 0x88
     80c:	bl	0 <fprintf>
     810:	mvn	r1, #0
     814:	str	r1, [fp, #-12]
     818:	str	r0, [sp, #132]	; 0x84
     81c:	b	b78 <compare_files+0x4a0>
     820:	ldr	r0, [fp, #-20]	; 0xffffffec
     824:	sub	r1, fp, #32
     828:	bl	0 <coda_open>
     82c:	str	r0, [sp, #172]	; 0xac
     830:	ldr	r0, [sp, #172]	; 0xac
     834:	cmp	r0, #0
     838:	beq	878 <compare_files+0x1a0>
     83c:	bl	0 <coda_get_errno>
     840:	ldr	r0, [r0]
     844:	cmn	r0, #21
     848:	bne	878 <compare_files+0x1a0>
     84c:	movw	r0, #0
     850:	bl	0 <coda_set_option_use_mmap>
     854:	ldr	lr, [fp, #-20]	; 0xffffffec
     858:	str	r0, [sp, #128]	; 0x80
     85c:	mov	r0, lr
     860:	sub	r1, fp, #32
     864:	bl	0 <coda_open>
     868:	str	r0, [sp, #172]	; 0xac
     86c:	movw	r0, #1
     870:	bl	0 <coda_set_option_use_mmap>
     874:	str	r0, [sp, #124]	; 0x7c
     878:	ldr	r0, [sp, #172]	; 0xac
     87c:	cmp	r0, #0
     880:	beq	8f0 <compare_files+0x218>
     884:	movw	r0, #0
     888:	movt	r0, #0
     88c:	ldr	r0, [r0]
     890:	movw	r1, #0
     894:	movt	r1, #0
     898:	ldr	r2, [r1, #4]
     89c:	str	r0, [sp, #120]	; 0x78
     8a0:	str	r2, [sp, #116]	; 0x74
     8a4:	bl	0 <coda_get_errno>
     8a8:	ldr	r0, [r0]
     8ac:	bl	0 <coda_errno_to_string>
     8b0:	ldr	r1, [sp, #120]	; 0x78
     8b4:	str	r0, [sp, #112]	; 0x70
     8b8:	mov	r0, r1
     8bc:	movw	r1, #0
     8c0:	movt	r1, #0
     8c4:	ldr	r2, [sp, #116]	; 0x74
     8c8:	ldr	r3, [sp, #112]	; 0x70
     8cc:	bl	0 <fprintf>
     8d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     8d4:	str	r0, [sp, #108]	; 0x6c
     8d8:	mov	r0, r1
     8dc:	bl	0 <coda_close>
     8e0:	mvn	r1, #0
     8e4:	str	r1, [fp, #-12]
     8e8:	str	r0, [sp, #104]	; 0x68
     8ec:	b	b78 <compare_files+0x4a0>
     8f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     8f4:	sub	r0, fp, #552	; 0x228
     8f8:	bl	0 <coda_cursor_set_product>
     8fc:	cmp	r0, #0
     900:	beq	980 <compare_files+0x2a8>
     904:	movw	r0, #0
     908:	movt	r0, #0
     90c:	ldr	r0, [r0]
     910:	movw	r1, #0
     914:	movt	r1, #0
     918:	ldr	r2, [r1]
     91c:	str	r0, [sp, #100]	; 0x64
     920:	str	r2, [sp, #96]	; 0x60
     924:	bl	0 <coda_get_errno>
     928:	ldr	r0, [r0]
     92c:	bl	0 <coda_errno_to_string>
     930:	ldr	r1, [sp, #100]	; 0x64
     934:	str	r0, [sp, #92]	; 0x5c
     938:	mov	r0, r1
     93c:	movw	r1, #0
     940:	movt	r1, #0
     944:	ldr	r2, [sp, #96]	; 0x60
     948:	ldr	r3, [sp, #92]	; 0x5c
     94c:	bl	0 <fprintf>
     950:	ldr	r1, [fp, #-28]	; 0xffffffe4
     954:	str	r0, [sp, #88]	; 0x58
     958:	mov	r0, r1
     95c:	bl	0 <coda_close>
     960:	ldr	r1, [fp, #-32]	; 0xffffffe0
     964:	str	r0, [sp, #84]	; 0x54
     968:	mov	r0, r1
     96c:	bl	0 <coda_close>
     970:	mvn	r1, #0
     974:	str	r1, [fp, #-12]
     978:	str	r0, [sp, #80]	; 0x50
     97c:	b	b78 <compare_files+0x4a0>
     980:	ldr	r1, [fp, #-32]	; 0xffffffe0
     984:	add	r0, sp, #176	; 0xb0
     988:	bl	0 <coda_cursor_set_product>
     98c:	cmp	r0, #0
     990:	beq	a10 <compare_files+0x338>
     994:	movw	r0, #0
     998:	movt	r0, #0
     99c:	ldr	r0, [r0]
     9a0:	movw	r1, #0
     9a4:	movt	r1, #0
     9a8:	ldr	r2, [r1, #4]
     9ac:	str	r0, [sp, #76]	; 0x4c
     9b0:	str	r2, [sp, #72]	; 0x48
     9b4:	bl	0 <coda_get_errno>
     9b8:	ldr	r0, [r0]
     9bc:	bl	0 <coda_errno_to_string>
     9c0:	ldr	r1, [sp, #76]	; 0x4c
     9c4:	str	r0, [sp, #68]	; 0x44
     9c8:	mov	r0, r1
     9cc:	movw	r1, #0
     9d0:	movt	r1, #0
     9d4:	ldr	r2, [sp, #72]	; 0x48
     9d8:	ldr	r3, [sp, #68]	; 0x44
     9dc:	bl	0 <fprintf>
     9e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     9e4:	str	r0, [sp, #64]	; 0x40
     9e8:	mov	r0, r1
     9ec:	bl	0 <coda_close>
     9f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
     9f4:	str	r0, [sp, #60]	; 0x3c
     9f8:	mov	r0, r1
     9fc:	bl	0 <coda_close>
     a00:	mvn	r1, #0
     a04:	str	r1, [fp, #-12]
     a08:	str	r0, [sp, #56]	; 0x38
     a0c:	b	b78 <compare_files+0x4a0>
     a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
     a14:	movw	r1, #0
     a18:	cmp	r0, r1
     a1c:	beq	b44 <compare_files+0x46c>
     a20:	ldr	r1, [fp, #-24]	; 0xffffffe8
     a24:	sub	r0, fp, #552	; 0x228
     a28:	bl	0 <coda_cursor_goto>
     a2c:	cmp	r0, #0
     a30:	beq	ab0 <compare_files+0x3d8>
     a34:	movw	r0, #0
     a38:	movt	r0, #0
     a3c:	ldr	r0, [r0]
     a40:	movw	r1, #0
     a44:	movt	r1, #0
     a48:	ldr	r2, [r1]
     a4c:	str	r0, [sp, #52]	; 0x34
     a50:	str	r2, [sp, #48]	; 0x30
     a54:	bl	0 <coda_get_errno>
     a58:	ldr	r0, [r0]
     a5c:	bl	0 <coda_errno_to_string>
     a60:	ldr	r1, [sp, #52]	; 0x34
     a64:	str	r0, [sp, #44]	; 0x2c
     a68:	mov	r0, r1
     a6c:	movw	r1, #0
     a70:	movt	r1, #0
     a74:	ldr	r2, [sp, #48]	; 0x30
     a78:	ldr	r3, [sp, #44]	; 0x2c
     a7c:	bl	0 <fprintf>
     a80:	ldr	r1, [fp, #-28]	; 0xffffffe4
     a84:	str	r0, [sp, #40]	; 0x28
     a88:	mov	r0, r1
     a8c:	bl	0 <coda_close>
     a90:	ldr	r1, [fp, #-32]	; 0xffffffe0
     a94:	str	r0, [sp, #36]	; 0x24
     a98:	mov	r0, r1
     a9c:	bl	0 <coda_close>
     aa0:	mvn	r1, #0
     aa4:	str	r1, [fp, #-12]
     aa8:	str	r0, [sp, #32]
     aac:	b	b78 <compare_files+0x4a0>
     ab0:	ldr	r1, [fp, #-24]	; 0xffffffe8
     ab4:	add	r0, sp, #176	; 0xb0
     ab8:	bl	0 <coda_cursor_goto>
     abc:	cmp	r0, #0
     ac0:	beq	b40 <compare_files+0x468>
     ac4:	movw	r0, #0
     ac8:	movt	r0, #0
     acc:	ldr	r0, [r0]
     ad0:	movw	r1, #0
     ad4:	movt	r1, #0
     ad8:	ldr	r2, [r1, #4]
     adc:	str	r0, [sp, #28]
     ae0:	str	r2, [sp, #24]
     ae4:	bl	0 <coda_get_errno>
     ae8:	ldr	r0, [r0]
     aec:	bl	0 <coda_errno_to_string>
     af0:	ldr	r1, [sp, #28]
     af4:	str	r0, [sp, #20]
     af8:	mov	r0, r1
     afc:	movw	r1, #0
     b00:	movt	r1, #0
     b04:	ldr	r2, [sp, #24]
     b08:	ldr	r3, [sp, #20]
     b0c:	bl	0 <fprintf>
     b10:	ldr	r1, [fp, #-28]	; 0xffffffe4
     b14:	str	r0, [sp, #16]
     b18:	mov	r0, r1
     b1c:	bl	0 <coda_close>
     b20:	ldr	r1, [fp, #-32]	; 0xffffffe0
     b24:	str	r0, [sp, #12]
     b28:	mov	r0, r1
     b2c:	bl	0 <coda_close>
     b30:	mvn	r1, #0
     b34:	str	r1, [fp, #-12]
     b38:	str	r0, [sp, #8]
     b3c:	b	b78 <compare_files+0x4a0>
     b40:	b	b44 <compare_files+0x46c>
     b44:	sub	r0, fp, #552	; 0x228
     b48:	add	r1, sp, #176	; 0xb0
     b4c:	bl	103c <compare_data>
     b50:	str	r0, [sp, #172]	; 0xac
     b54:	ldr	r0, [fp, #-28]	; 0xffffffe4
     b58:	bl	0 <coda_close>
     b5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
     b60:	str	r0, [sp, #4]
     b64:	mov	r0, r1
     b68:	bl	0 <coda_close>
     b6c:	ldr	r1, [sp, #172]	; 0xac
     b70:	str	r1, [fp, #-12]
     b74:	str	r0, [sp]
     b78:	ldr	r0, [fp, #-12]
     b7c:	sub	sp, fp, #8
     b80:	pop	{r4, r5, fp, pc}

00000b84 <array_key_info_done>:
     b84:	push	{fp, lr}
     b88:	mov	fp, sp
     b8c:	movw	r0, #0
     b90:	movt	r0, #0
     b94:	ldr	r0, [r0, #4]
     b98:	movw	r1, #0
     b9c:	cmp	r0, r1
     ba0:	beq	bb4 <array_key_info_done+0x30>
     ba4:	movw	r0, #0
     ba8:	movt	r0, #0
     bac:	ldr	r0, [r0, #4]
     bb0:	bl	0 <free>
     bb4:	movw	r0, #0
     bb8:	movt	r0, #0
     bbc:	ldr	r0, [r0, #8]
     bc0:	movw	r1, #0
     bc4:	cmp	r0, r1
     bc8:	beq	bdc <array_key_info_done+0x58>
     bcc:	movw	r0, #0
     bd0:	movt	r0, #0
     bd4:	ldr	r0, [r0, #8]
     bd8:	bl	0 <free>
     bdc:	movw	r0, #0
     be0:	movt	r0, #0
     be4:	ldr	r0, [r0, #12]
     be8:	movw	r1, #0
     bec:	cmp	r0, r1
     bf0:	beq	c08 <array_key_info_done+0x84>
     bf4:	movw	r0, #0
     bf8:	movt	r0, #0
     bfc:	ldr	r0, [r0, #12]
     c00:	movw	r1, #0
     c04:	bl	0 <coda_tree_node_delete>
     c08:	pop	{fp, pc}

00000c0c <print_help>:
     c0c:	push	{fp, lr}
     c10:	mov	fp, sp
     c14:	sub	sp, sp, #144	; 0x90
     c18:	movw	r0, #0
     c1c:	movt	r0, #0
     c20:	bl	0 <printf>
     c24:	movw	lr, #0
     c28:	movt	lr, #0
     c2c:	str	r0, [fp, #-4]
     c30:	mov	r0, lr
     c34:	bl	0 <printf>
     c38:	movw	lr, #0
     c3c:	movt	lr, #0
     c40:	str	r0, [fp, #-8]
     c44:	mov	r0, lr
     c48:	bl	0 <printf>
     c4c:	movw	lr, #0
     c50:	movt	lr, #0
     c54:	str	r0, [fp, #-12]
     c58:	mov	r0, lr
     c5c:	bl	0 <printf>
     c60:	movw	lr, #0
     c64:	movt	lr, #0
     c68:	str	r0, [fp, #-16]
     c6c:	mov	r0, lr
     c70:	bl	0 <printf>
     c74:	movw	lr, #0
     c78:	movt	lr, #0
     c7c:	str	r0, [fp, #-20]	; 0xffffffec
     c80:	mov	r0, lr
     c84:	bl	0 <printf>
     c88:	movw	lr, #0
     c8c:	movt	lr, #0
     c90:	str	r0, [fp, #-24]	; 0xffffffe8
     c94:	mov	r0, lr
     c98:	bl	0 <printf>
     c9c:	movw	lr, #0
     ca0:	movt	lr, #0
     ca4:	str	r0, [fp, #-28]	; 0xffffffe4
     ca8:	mov	r0, lr
     cac:	bl	0 <printf>
     cb0:	movw	lr, #0
     cb4:	movt	lr, #0
     cb8:	str	r0, [fp, #-32]	; 0xffffffe0
     cbc:	mov	r0, lr
     cc0:	bl	0 <printf>
     cc4:	movw	lr, #0
     cc8:	movt	lr, #0
     ccc:	str	r0, [fp, #-36]	; 0xffffffdc
     cd0:	mov	r0, lr
     cd4:	bl	0 <printf>
     cd8:	movw	lr, #0
     cdc:	movt	lr, #0
     ce0:	str	r0, [fp, #-40]	; 0xffffffd8
     ce4:	mov	r0, lr
     ce8:	bl	0 <printf>
     cec:	movw	lr, #0
     cf0:	movt	lr, #0
     cf4:	str	r0, [fp, #-44]	; 0xffffffd4
     cf8:	mov	r0, lr
     cfc:	bl	0 <printf>
     d00:	movw	lr, #0
     d04:	movt	lr, #0
     d08:	str	r0, [fp, #-48]	; 0xffffffd0
     d0c:	mov	r0, lr
     d10:	bl	0 <printf>
     d14:	movw	lr, #0
     d18:	movt	lr, #0
     d1c:	str	r0, [fp, #-52]	; 0xffffffcc
     d20:	mov	r0, lr
     d24:	bl	0 <printf>
     d28:	movw	lr, #0
     d2c:	movt	lr, #0
     d30:	str	r0, [fp, #-56]	; 0xffffffc8
     d34:	mov	r0, lr
     d38:	bl	0 <printf>
     d3c:	movw	lr, #0
     d40:	movt	lr, #0
     d44:	str	r0, [fp, #-60]	; 0xffffffc4
     d48:	mov	r0, lr
     d4c:	bl	0 <printf>
     d50:	movw	lr, #0
     d54:	movt	lr, #0
     d58:	str	r0, [fp, #-64]	; 0xffffffc0
     d5c:	mov	r0, lr
     d60:	bl	0 <printf>
     d64:	movw	lr, #0
     d68:	movt	lr, #0
     d6c:	str	r0, [fp, #-68]	; 0xffffffbc
     d70:	mov	r0, lr
     d74:	bl	0 <printf>
     d78:	movw	lr, #0
     d7c:	movt	lr, #0
     d80:	str	r0, [sp, #72]	; 0x48
     d84:	mov	r0, lr
     d88:	bl	0 <printf>
     d8c:	movw	lr, #0
     d90:	movt	lr, #0
     d94:	str	r0, [sp, #68]	; 0x44
     d98:	mov	r0, lr
     d9c:	bl	0 <printf>
     da0:	movw	lr, #0
     da4:	movt	lr, #0
     da8:	str	r0, [sp, #64]	; 0x40
     dac:	mov	r0, lr
     db0:	bl	0 <printf>
     db4:	movw	lr, #0
     db8:	movt	lr, #0
     dbc:	str	r0, [sp, #60]	; 0x3c
     dc0:	mov	r0, lr
     dc4:	bl	0 <printf>
     dc8:	movw	lr, #0
     dcc:	movt	lr, #0
     dd0:	str	r0, [sp, #56]	; 0x38
     dd4:	mov	r0, lr
     dd8:	bl	0 <printf>
     ddc:	movw	lr, #0
     de0:	movt	lr, #0
     de4:	str	r0, [sp, #52]	; 0x34
     de8:	mov	r0, lr
     dec:	bl	0 <printf>
     df0:	movw	lr, #0
     df4:	movt	lr, #0
     df8:	str	r0, [sp, #48]	; 0x30
     dfc:	mov	r0, lr
     e00:	bl	0 <printf>
     e04:	movw	lr, #0
     e08:	movt	lr, #0
     e0c:	str	r0, [sp, #44]	; 0x2c
     e10:	mov	r0, lr
     e14:	bl	0 <printf>
     e18:	movw	lr, #0
     e1c:	movt	lr, #0
     e20:	str	r0, [sp, #40]	; 0x28
     e24:	mov	r0, lr
     e28:	bl	0 <printf>
     e2c:	movw	lr, #0
     e30:	movt	lr, #0
     e34:	str	r0, [sp, #36]	; 0x24
     e38:	mov	r0, lr
     e3c:	bl	0 <printf>
     e40:	movw	lr, #0
     e44:	movt	lr, #0
     e48:	str	r0, [sp, #32]
     e4c:	mov	r0, lr
     e50:	bl	0 <printf>
     e54:	movw	lr, #0
     e58:	movt	lr, #0
     e5c:	str	r0, [sp, #28]
     e60:	mov	r0, lr
     e64:	bl	0 <printf>
     e68:	movw	lr, #0
     e6c:	movt	lr, #0
     e70:	str	r0, [sp, #24]
     e74:	mov	r0, lr
     e78:	bl	0 <printf>
     e7c:	movw	lr, #0
     e80:	movt	lr, #0
     e84:	str	r0, [sp, #20]
     e88:	mov	r0, lr
     e8c:	bl	0 <printf>
     e90:	movw	lr, #0
     e94:	movt	lr, #0
     e98:	str	r0, [sp, #16]
     e9c:	mov	r0, lr
     ea0:	bl	0 <printf>
     ea4:	movw	lr, #0
     ea8:	movt	lr, #0
     eac:	str	r0, [sp, #12]
     eb0:	mov	r0, lr
     eb4:	bl	0 <printf>
     eb8:	movw	lr, #0
     ebc:	movt	lr, #0
     ec0:	str	r0, [sp, #8]
     ec4:	mov	r0, lr
     ec8:	bl	0 <printf>
     ecc:	str	r0, [sp, #4]
     ed0:	mov	sp, fp
     ed4:	pop	{fp, pc}

00000ed8 <print_version>:
     ed8:	push	{fp, lr}
     edc:	mov	fp, sp
     ee0:	sub	sp, sp, #16
     ee4:	bl	0 <coda_get_libcoda_version>
     ee8:	movw	lr, #0
     eec:	movt	lr, #0
     ef0:	str	r0, [fp, #-4]
     ef4:	mov	r0, lr
     ef8:	ldr	r1, [fp, #-4]
     efc:	bl	0 <printf>
     f00:	movw	r1, #0
     f04:	movt	r1, #0
     f08:	str	r0, [sp, #8]
     f0c:	mov	r0, r1
     f10:	bl	0 <printf>
     f14:	movw	r1, #0
     f18:	movt	r1, #0
     f1c:	str	r0, [sp, #4]
     f20:	mov	r0, r1
     f24:	bl	0 <printf>
     f28:	str	r0, [sp]
     f2c:	mov	sp, fp
     f30:	pop	{fp, pc}

00000f34 <array_key_info_set_product>:
     f34:	push	{fp, lr}
     f38:	mov	fp, sp
     f3c:	sub	sp, sp, #16
     f40:	str	r0, [sp, #8]
     f44:	movw	r0, #0
     f48:	movt	r0, #0
     f4c:	ldr	r0, [r0]
     f50:	cmp	r0, #0
     f54:	bne	f64 <array_key_info_set_product+0x30>
     f58:	movw	r0, #0
     f5c:	str	r0, [fp, #-4]
     f60:	b	1030 <array_key_info_set_product+0xfc>
     f64:	ldr	r0, [sp, #8]
     f68:	add	r1, sp, #4
     f6c:	bl	0 <coda_get_product_root_type>
     f70:	cmp	r0, #0
     f74:	beq	f84 <array_key_info_set_product+0x50>
     f78:	mvn	r0, #0
     f7c:	str	r0, [fp, #-4]
     f80:	b	1030 <array_key_info_set_product+0xfc>
     f84:	ldr	r0, [sp, #4]
     f88:	bl	0 <coda_tree_node_new>
     f8c:	movw	lr, #0
     f90:	movt	lr, #0
     f94:	str	r0, [lr, #12]
     f98:	ldr	r0, [lr, #12]
     f9c:	movw	lr, #0
     fa0:	cmp	r0, lr
     fa4:	bne	fb4 <array_key_info_set_product+0x80>
     fa8:	mvn	r0, #0
     fac:	str	r0, [fp, #-4]
     fb0:	b	1030 <array_key_info_set_product+0xfc>
     fb4:	movw	r0, #0
     fb8:	str	r0, [sp]
     fbc:	ldr	r0, [sp]
     fc0:	movw	r1, #0
     fc4:	movt	r1, #0
     fc8:	ldr	r1, [r1]
     fcc:	cmp	r0, r1
     fd0:	bge	1028 <array_key_info_set_product+0xf4>
     fd4:	movw	r0, #0
     fd8:	movt	r0, #0
     fdc:	ldr	r1, [r0, #4]
     fe0:	ldr	r2, [r0, #8]
     fe4:	ldr	r0, [r0, #12]
     fe8:	ldr	r3, [sp]
     fec:	ldr	r1, [r1, r3, lsl #2]
     ff0:	add	r2, r2, r3, lsl #2
     ff4:	ldr	r2, [r2]
     ff8:	movw	r3, #0
     ffc:	bl	0 <coda_tree_node_add_item_for_path>
    1000:	cmp	r0, #0
    1004:	beq	1014 <array_key_info_set_product+0xe0>
    1008:	mvn	r0, #0
    100c:	str	r0, [fp, #-4]
    1010:	b	1030 <array_key_info_set_product+0xfc>
    1014:	b	1018 <array_key_info_set_product+0xe4>
    1018:	ldr	r0, [sp]
    101c:	add	r0, r0, #1
    1020:	str	r0, [sp]
    1024:	b	fbc <array_key_info_set_product+0x88>
    1028:	movw	r0, #0
    102c:	str	r0, [fp, #-4]
    1030:	ldr	r0, [fp, #-4]
    1034:	mov	sp, fp
    1038:	pop	{fp, pc}

0000103c <compare_data>:
    103c:	push	{fp, lr}
    1040:	mov	fp, sp
    1044:	sub	sp, sp, #104	; 0x68
    1048:	str	r0, [fp, #-8]
    104c:	str	r1, [fp, #-12]
    1050:	ldr	r0, [fp, #-8]
    1054:	sub	r1, fp, #16
    1058:	bl	0 <coda_cursor_get_type_class>
    105c:	cmp	r0, #0
    1060:	beq	107c <compare_data+0x40>
    1064:	ldr	r0, [fp, #-8]
    1068:	movw	r1, #1
    106c:	bl	1458 <print_error_with_cursor>
    1070:	mvn	r0, #0
    1074:	str	r0, [fp, #-4]
    1078:	b	144c <compare_data+0x410>
    107c:	ldr	r0, [fp, #-12]
    1080:	sub	r1, fp, #20
    1084:	bl	0 <coda_cursor_get_type_class>
    1088:	cmp	r0, #0
    108c:	beq	10a8 <compare_data+0x6c>
    1090:	ldr	r0, [fp, #-12]
    1094:	movw	r1, #2
    1098:	bl	1458 <print_error_with_cursor>
    109c:	mvn	r0, #0
    10a0:	str	r0, [fp, #-4]
    10a4:	b	144c <compare_data+0x410>
    10a8:	ldr	r0, [fp, #-16]
    10ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    10b0:	cmp	r0, r1
    10b4:	beq	1188 <compare_data+0x14c>
    10b8:	movw	r0, #0
    10bc:	movt	r0, #0
    10c0:	bl	0 <printf>
    10c4:	ldr	lr, [fp, #-8]
    10c8:	str	r0, [fp, #-32]	; 0xffffffe0
    10cc:	mov	r0, lr
    10d0:	movw	r1, #0
    10d4:	movt	r1, #0
    10d8:	bl	0 <coda_cursor_print_path>
    10dc:	movw	r1, #0
    10e0:	movt	r1, #0
    10e4:	str	r0, [fp, #-36]	; 0xffffffdc
    10e8:	mov	r0, r1
    10ec:	bl	0 <printf>
    10f0:	movw	r1, #0
    10f4:	movt	r1, #0
    10f8:	ldr	r1, [r1]
    10fc:	cmp	r1, #0
    1100:	str	r0, [fp, #-40]	; 0xffffffd8
    1104:	beq	117c <compare_data+0x140>
    1108:	movw	r0, #0
    110c:	movt	r0, #0
    1110:	ldr	r1, [r0]
    1114:	ldr	r0, [fp, #-16]
    1118:	str	r1, [fp, #-44]	; 0xffffffd4
    111c:	bl	0 <coda_type_get_class_name>
    1120:	movw	r1, #0
    1124:	movt	r1, #0
    1128:	str	r0, [fp, #-48]	; 0xffffffd0
    112c:	mov	r0, r1
    1130:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1134:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1138:	bl	0 <printf>
    113c:	movw	r1, #0
    1140:	movt	r1, #0
    1144:	ldr	r1, [r1, #4]
    1148:	ldr	r2, [fp, #-20]	; 0xffffffec
    114c:	str	r0, [sp, #52]	; 0x34
    1150:	mov	r0, r2
    1154:	str	r1, [sp, #48]	; 0x30
    1158:	bl	0 <coda_type_get_class_name>
    115c:	movw	r1, #0
    1160:	movt	r1, #0
    1164:	str	r0, [sp, #44]	; 0x2c
    1168:	mov	r0, r1
    116c:	ldr	r1, [sp, #48]	; 0x30
    1170:	ldr	r2, [sp, #44]	; 0x2c
    1174:	bl	0 <printf>
    1178:	str	r0, [sp, #40]	; 0x28
    117c:	movw	r0, #0
    1180:	str	r0, [fp, #-4]
    1184:	b	144c <compare_data+0x410>
    1188:	ldr	r0, [fp, #-16]
    118c:	cmp	r0, #6
    1190:	str	r0, [sp, #36]	; 0x24
    1194:	bhi	1424 <compare_data+0x3e8>
    1198:	add	r0, pc, #8
    119c:	ldr	r1, [sp, #36]	; 0x24
    11a0:	ldr	r0, [r0, r1, lsl #2]
    11a4:	mov	pc, r0
    11a8:	.word	0x000011e8
    11ac:	.word	0x000011c4
    11b0:	.word	0x0000120c
    11b4:	.word	0x0000120c
    11b8:	.word	0x00001230
    11bc:	.word	0x00001254
    11c0:	.word	0x00001278
    11c4:	ldr	r0, [fp, #-8]
    11c8:	ldr	r1, [fp, #-12]
    11cc:	bl	14d8 <compare_arrays>
    11d0:	cmp	r0, #0
    11d4:	beq	11e4 <compare_data+0x1a8>
    11d8:	mvn	r0, #0
    11dc:	str	r0, [fp, #-4]
    11e0:	b	144c <compare_data+0x410>
    11e4:	b	1424 <compare_data+0x3e8>
    11e8:	ldr	r0, [fp, #-8]
    11ec:	ldr	r1, [fp, #-12]
    11f0:	bl	1794 <compare_records>
    11f4:	cmp	r0, #0
    11f8:	beq	1208 <compare_data+0x1cc>
    11fc:	mvn	r0, #0
    1200:	str	r0, [fp, #-4]
    1204:	b	144c <compare_data+0x410>
    1208:	b	1424 <compare_data+0x3e8>
    120c:	ldr	r0, [fp, #-8]
    1210:	ldr	r1, [fp, #-12]
    1214:	bl	1da8 <compare_numbers>
    1218:	cmp	r0, #0
    121c:	beq	122c <compare_data+0x1f0>
    1220:	mvn	r0, #0
    1224:	str	r0, [fp, #-4]
    1228:	b	144c <compare_data+0x410>
    122c:	b	1424 <compare_data+0x3e8>
    1230:	ldr	r0, [fp, #-8]
    1234:	ldr	r1, [fp, #-12]
    1238:	bl	2498 <compare_strings>
    123c:	cmp	r0, #0
    1240:	beq	1250 <compare_data+0x214>
    1244:	mvn	r0, #0
    1248:	str	r0, [fp, #-4]
    124c:	b	144c <compare_data+0x410>
    1250:	b	1424 <compare_data+0x3e8>
    1254:	ldr	r0, [fp, #-8]
    1258:	ldr	r1, [fp, #-12]
    125c:	bl	2780 <compare_bytes>
    1260:	cmp	r0, #0
    1264:	beq	1274 <compare_data+0x238>
    1268:	mvn	r0, #0
    126c:	str	r0, [fp, #-4]
    1270:	b	144c <compare_data+0x410>
    1274:	b	1424 <compare_data+0x3e8>
    1278:	ldr	r0, [fp, #-8]
    127c:	sub	r1, fp, #24
    1280:	bl	0 <coda_cursor_get_special_type>
    1284:	cmp	r0, #0
    1288:	beq	12a4 <compare_data+0x268>
    128c:	ldr	r0, [fp, #-8]
    1290:	movw	r1, #1
    1294:	bl	1458 <print_error_with_cursor>
    1298:	mvn	r0, #0
    129c:	str	r0, [fp, #-4]
    12a0:	b	144c <compare_data+0x410>
    12a4:	ldr	r0, [fp, #-12]
    12a8:	sub	r1, fp, #28
    12ac:	bl	0 <coda_cursor_get_special_type>
    12b0:	cmp	r0, #0
    12b4:	beq	12d0 <compare_data+0x294>
    12b8:	ldr	r0, [fp, #-12]
    12bc:	movw	r1, #2
    12c0:	bl	1458 <print_error_with_cursor>
    12c4:	mvn	r0, #0
    12c8:	str	r0, [fp, #-4]
    12cc:	b	144c <compare_data+0x410>
    12d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    12d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    12d8:	cmp	r0, r1
    12dc:	beq	13b0 <compare_data+0x374>
    12e0:	movw	r0, #0
    12e4:	movt	r0, #0
    12e8:	bl	0 <printf>
    12ec:	ldr	lr, [fp, #-8]
    12f0:	str	r0, [sp, #32]
    12f4:	mov	r0, lr
    12f8:	movw	r1, #0
    12fc:	movt	r1, #0
    1300:	bl	0 <coda_cursor_print_path>
    1304:	movw	r1, #0
    1308:	movt	r1, #0
    130c:	str	r0, [sp, #28]
    1310:	mov	r0, r1
    1314:	bl	0 <printf>
    1318:	movw	r1, #0
    131c:	movt	r1, #0
    1320:	ldr	r1, [r1]
    1324:	cmp	r1, #0
    1328:	str	r0, [sp, #24]
    132c:	beq	13a4 <compare_data+0x368>
    1330:	movw	r0, #0
    1334:	movt	r0, #0
    1338:	ldr	r1, [r0]
    133c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1340:	str	r1, [sp, #20]
    1344:	bl	0 <coda_type_get_special_type_name>
    1348:	movw	r1, #0
    134c:	movt	r1, #0
    1350:	str	r0, [sp, #16]
    1354:	mov	r0, r1
    1358:	ldr	r1, [sp, #20]
    135c:	ldr	r2, [sp, #16]
    1360:	bl	0 <printf>
    1364:	movw	r1, #0
    1368:	movt	r1, #0
    136c:	ldr	r1, [r1, #4]
    1370:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1374:	str	r0, [sp, #12]
    1378:	mov	r0, r2
    137c:	str	r1, [sp, #8]
    1380:	bl	0 <coda_type_get_special_type_name>
    1384:	movw	r1, #0
    1388:	movt	r1, #0
    138c:	str	r0, [sp, #4]
    1390:	mov	r0, r1
    1394:	ldr	r1, [sp, #8]
    1398:	ldr	r2, [sp, #4]
    139c:	bl	0 <printf>
    13a0:	str	r0, [sp]
    13a4:	movw	r0, #0
    13a8:	str	r0, [fp, #-4]
    13ac:	b	144c <compare_data+0x410>
    13b0:	ldr	r0, [fp, #-8]
    13b4:	bl	0 <coda_cursor_use_base_type_of_special_type>
    13b8:	cmp	r0, #0
    13bc:	beq	13d8 <compare_data+0x39c>
    13c0:	ldr	r0, [fp, #-8]
    13c4:	movw	r1, #1
    13c8:	bl	1458 <print_error_with_cursor>
    13cc:	mvn	r0, #0
    13d0:	str	r0, [fp, #-4]
    13d4:	b	144c <compare_data+0x410>
    13d8:	ldr	r0, [fp, #-12]
    13dc:	bl	0 <coda_cursor_use_base_type_of_special_type>
    13e0:	cmp	r0, #0
    13e4:	beq	1400 <compare_data+0x3c4>
    13e8:	ldr	r0, [fp, #-12]
    13ec:	movw	r1, #2
    13f0:	bl	1458 <print_error_with_cursor>
    13f4:	mvn	r0, #0
    13f8:	str	r0, [fp, #-4]
    13fc:	b	144c <compare_data+0x410>
    1400:	ldr	r0, [fp, #-8]
    1404:	ldr	r1, [fp, #-12]
    1408:	bl	103c <compare_data>
    140c:	cmp	r0, #0
    1410:	beq	1420 <compare_data+0x3e4>
    1414:	mvn	r0, #0
    1418:	str	r0, [fp, #-4]
    141c:	b	144c <compare_data+0x410>
    1420:	b	1424 <compare_data+0x3e8>
    1424:	ldr	r0, [fp, #-8]
    1428:	ldr	r1, [fp, #-12]
    142c:	bl	2c70 <compare_attributes>
    1430:	cmp	r0, #0
    1434:	beq	1444 <compare_data+0x408>
    1438:	mvn	r0, #0
    143c:	str	r0, [fp, #-4]
    1440:	b	144c <compare_data+0x410>
    1444:	movw	r0, #0
    1448:	str	r0, [fp, #-4]
    144c:	ldr	r0, [fp, #-4]
    1450:	mov	sp, fp
    1454:	pop	{fp, pc}

00001458 <print_error_with_cursor>:
    1458:	push	{fp, lr}
    145c:	mov	fp, sp
    1460:	sub	sp, sp, #24
    1464:	str	r0, [fp, #-4]
    1468:	str	r1, [fp, #-8]
    146c:	ldr	r0, [fp, #-4]
    1470:	bl	0 <coda_cursor_add_to_error_message>
    1474:	movw	r0, #0
    1478:	movt	r0, #0
    147c:	ldr	r0, [r0]
    1480:	ldr	r1, [fp, #-8]
    1484:	sub	r1, r1, #1
    1488:	movw	lr, #0
    148c:	movt	lr, #0
    1490:	add	r1, lr, r1, lsl #2
    1494:	ldr	r2, [r1]
    1498:	str	r0, [sp, #12]
    149c:	str	r2, [sp, #8]
    14a0:	bl	0 <coda_get_errno>
    14a4:	ldr	r0, [r0]
    14a8:	bl	0 <coda_errno_to_string>
    14ac:	ldr	r1, [sp, #12]
    14b0:	str	r0, [sp, #4]
    14b4:	mov	r0, r1
    14b8:	movw	r1, #0
    14bc:	movt	r1, #0
    14c0:	ldr	r2, [sp, #8]
    14c4:	ldr	r3, [sp, #4]
    14c8:	bl	0 <fprintf>
    14cc:	str	r0, [sp]
    14d0:	mov	sp, fp
    14d4:	pop	{fp, pc}

000014d8 <compare_arrays>:
    14d8:	push	{fp, lr}
    14dc:	mov	fp, sp
    14e0:	sub	sp, sp, #56	; 0x38
    14e4:	str	r0, [fp, #-8]
    14e8:	str	r1, [fp, #-12]
    14ec:	movw	r0, #0
    14f0:	movt	r0, #0
    14f4:	ldr	r0, [r0, #12]
    14f8:	ldr	r1, [fp, #-8]
    14fc:	sub	r2, fp, #16
    1500:	bl	0 <coda_tree_node_get_item_for_cursor>
    1504:	cmp	r0, #0
    1508:	beq	1524 <compare_arrays+0x4c>
    150c:	ldr	r0, [fp, #-8]
    1510:	movw	r1, #1
    1514:	bl	1458 <print_error_with_cursor>
    1518:	mvn	r0, #0
    151c:	str	r0, [fp, #-4]
    1520:	b	1788 <compare_arrays+0x2b0>
    1524:	ldr	r0, [fp, #-16]
    1528:	movw	r1, #0
    152c:	cmp	r0, r1
    1530:	beq	154c <compare_arrays+0x74>
    1534:	ldr	r0, [fp, #-8]
    1538:	ldr	r1, [fp, #-12]
    153c:	ldr	r2, [fp, #-16]
    1540:	bl	2d94 <compare_arrays_as_records>
    1544:	str	r0, [fp, #-4]
    1548:	b	1788 <compare_arrays+0x2b0>
    154c:	ldr	r0, [fp, #-8]
    1550:	sub	r1, fp, #20
    1554:	bl	0 <coda_cursor_get_num_elements>
    1558:	cmp	r0, #0
    155c:	beq	1578 <compare_arrays+0xa0>
    1560:	ldr	r0, [fp, #-8]
    1564:	movw	r1, #1
    1568:	bl	1458 <print_error_with_cursor>
    156c:	mvn	r0, #0
    1570:	str	r0, [fp, #-4]
    1574:	b	1788 <compare_arrays+0x2b0>
    1578:	ldr	r0, [fp, #-12]
    157c:	sub	r1, fp, #24
    1580:	bl	0 <coda_cursor_get_num_elements>
    1584:	cmp	r0, #0
    1588:	beq	15a4 <compare_arrays+0xcc>
    158c:	ldr	r0, [fp, #-12]
    1590:	movw	r1, #2
    1594:	bl	1458 <print_error_with_cursor>
    1598:	mvn	r0, #0
    159c:	str	r0, [fp, #-4]
    15a0:	b	1788 <compare_arrays+0x2b0>
    15a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    15a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    15ac:	cmp	r0, r1
    15b0:	beq	1654 <compare_arrays+0x17c>
    15b4:	movw	r0, #0
    15b8:	movt	r0, #0
    15bc:	bl	0 <printf>
    15c0:	ldr	lr, [fp, #-8]
    15c4:	str	r0, [sp, #24]
    15c8:	mov	r0, lr
    15cc:	movw	r1, #0
    15d0:	movt	r1, #0
    15d4:	bl	0 <coda_cursor_print_path>
    15d8:	movw	r1, #0
    15dc:	movt	r1, #0
    15e0:	str	r0, [sp, #20]
    15e4:	mov	r0, r1
    15e8:	bl	0 <printf>
    15ec:	movw	r1, #0
    15f0:	movt	r1, #0
    15f4:	ldr	r1, [r1]
    15f8:	cmp	r1, #0
    15fc:	str	r0, [sp, #16]
    1600:	beq	1648 <compare_arrays+0x170>
    1604:	movw	r0, #0
    1608:	movt	r0, #0
    160c:	ldr	r1, [r0]
    1610:	ldr	r2, [fp, #-20]	; 0xffffffec
    1614:	movw	r0, #0
    1618:	movt	r0, #0
    161c:	bl	0 <printf>
    1620:	movw	r1, #0
    1624:	movt	r1, #0
    1628:	ldr	r1, [r1, #4]
    162c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1630:	movw	lr, #0
    1634:	movt	lr, #0
    1638:	str	r0, [sp, #12]
    163c:	mov	r0, lr
    1640:	bl	0 <printf>
    1644:	str	r0, [sp, #8]
    1648:	movw	r0, #0
    164c:	str	r0, [fp, #-4]
    1650:	b	1788 <compare_arrays+0x2b0>
    1654:	ldr	r0, [fp, #-20]	; 0xffffffec
    1658:	cmp	r0, #0
    165c:	ble	1780 <compare_arrays+0x2a8>
    1660:	ldr	r0, [fp, #-8]
    1664:	bl	0 <coda_cursor_goto_first_array_element>
    1668:	cmp	r0, #0
    166c:	beq	1688 <compare_arrays+0x1b0>
    1670:	ldr	r0, [fp, #-8]
    1674:	movw	r1, #1
    1678:	bl	1458 <print_error_with_cursor>
    167c:	mvn	r0, #0
    1680:	str	r0, [fp, #-4]
    1684:	b	1788 <compare_arrays+0x2b0>
    1688:	ldr	r0, [fp, #-12]
    168c:	bl	0 <coda_cursor_goto_first_array_element>
    1690:	cmp	r0, #0
    1694:	beq	16b0 <compare_arrays+0x1d8>
    1698:	ldr	r0, [fp, #-12]
    169c:	movw	r1, #1
    16a0:	bl	1458 <print_error_with_cursor>
    16a4:	mvn	r0, #0
    16a8:	str	r0, [fp, #-4]
    16ac:	b	1788 <compare_arrays+0x2b0>
    16b0:	movw	r0, #0
    16b4:	str	r0, [sp, #28]
    16b8:	ldr	r0, [sp, #28]
    16bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    16c0:	cmp	r0, r1
    16c4:	bge	1764 <compare_arrays+0x28c>
    16c8:	ldr	r0, [fp, #-8]
    16cc:	ldr	r1, [fp, #-12]
    16d0:	bl	103c <compare_data>
    16d4:	cmp	r0, #0
    16d8:	beq	16e8 <compare_arrays+0x210>
    16dc:	mvn	r0, #0
    16e0:	str	r0, [fp, #-4]
    16e4:	b	1788 <compare_arrays+0x2b0>
    16e8:	ldr	r0, [sp, #28]
    16ec:	ldr	r1, [fp, #-20]	; 0xffffffec
    16f0:	sub	r1, r1, #1
    16f4:	cmp	r0, r1
    16f8:	bge	1750 <compare_arrays+0x278>
    16fc:	ldr	r0, [fp, #-8]
    1700:	bl	0 <coda_cursor_goto_next_array_element>
    1704:	cmp	r0, #0
    1708:	beq	1724 <compare_arrays+0x24c>
    170c:	ldr	r0, [fp, #-8]
    1710:	movw	r1, #1
    1714:	bl	1458 <print_error_with_cursor>
    1718:	mvn	r0, #0
    171c:	str	r0, [fp, #-4]
    1720:	b	1788 <compare_arrays+0x2b0>
    1724:	ldr	r0, [fp, #-12]
    1728:	bl	0 <coda_cursor_goto_next_array_element>
    172c:	cmp	r0, #0
    1730:	beq	174c <compare_arrays+0x274>
    1734:	ldr	r0, [fp, #-12]
    1738:	movw	r1, #2
    173c:	bl	1458 <print_error_with_cursor>
    1740:	mvn	r0, #0
    1744:	str	r0, [fp, #-4]
    1748:	b	1788 <compare_arrays+0x2b0>
    174c:	b	1750 <compare_arrays+0x278>
    1750:	b	1754 <compare_arrays+0x27c>
    1754:	ldr	r0, [sp, #28]
    1758:	add	r0, r0, #1
    175c:	str	r0, [sp, #28]
    1760:	b	16b8 <compare_arrays+0x1e0>
    1764:	ldr	r0, [fp, #-8]
    1768:	bl	0 <coda_cursor_goto_parent>
    176c:	ldr	lr, [fp, #-12]
    1770:	str	r0, [sp, #4]
    1774:	mov	r0, lr
    1778:	bl	0 <coda_cursor_goto_parent>
    177c:	str	r0, [sp]
    1780:	movw	r0, #0
    1784:	str	r0, [fp, #-4]
    1788:	ldr	r0, [fp, #-4]
    178c:	mov	sp, fp
    1790:	pop	{fp, pc}

00001794 <compare_records>:
    1794:	push	{r4, r5, fp, lr}
    1798:	add	fp, sp, #8
    179c:	sub	sp, sp, #664	; 0x298
    17a0:	str	r0, [fp, #-16]
    17a4:	str	r1, [fp, #-20]	; 0xffffffec
    17a8:	ldr	r0, [fp, #-16]
    17ac:	sub	r1, fp, #24
    17b0:	bl	0 <coda_cursor_get_type>
    17b4:	cmp	r0, #0
    17b8:	beq	17d4 <compare_records+0x40>
    17bc:	ldr	r0, [fp, #-16]
    17c0:	movw	r1, #1
    17c4:	bl	1458 <print_error_with_cursor>
    17c8:	mvn	r0, #0
    17cc:	str	r0, [fp, #-12]
    17d0:	b	1d9c <compare_records+0x608>
    17d4:	ldr	r0, [fp, #-20]	; 0xffffffec
    17d8:	sub	r1, fp, #28
    17dc:	bl	0 <coda_cursor_get_type>
    17e0:	cmp	r0, #0
    17e4:	beq	1800 <compare_records+0x6c>
    17e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    17ec:	movw	r1, #2
    17f0:	bl	1458 <print_error_with_cursor>
    17f4:	mvn	r0, #0
    17f8:	str	r0, [fp, #-12]
    17fc:	b	1d9c <compare_records+0x608>
    1800:	ldr	r0, [fp, #-16]
    1804:	sub	r1, fp, #36	; 0x24
    1808:	bl	0 <coda_cursor_get_num_elements>
    180c:	cmp	r0, #0
    1810:	beq	182c <compare_records+0x98>
    1814:	ldr	r0, [fp, #-16]
    1818:	movw	r1, #1
    181c:	bl	1458 <print_error_with_cursor>
    1820:	mvn	r0, #0
    1824:	str	r0, [fp, #-12]
    1828:	b	1d9c <compare_records+0x608>
    182c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1830:	sub	r1, fp, #40	; 0x28
    1834:	bl	0 <coda_cursor_get_num_elements>
    1838:	cmp	r0, #0
    183c:	beq	1858 <compare_records+0xc4>
    1840:	ldr	r0, [fp, #-20]	; 0xffffffec
    1844:	movw	r1, #2
    1848:	bl	1458 <print_error_with_cursor>
    184c:	mvn	r0, #0
    1850:	str	r0, [fp, #-12]
    1854:	b	1d9c <compare_records+0x608>
    1858:	movw	r0, #1
    185c:	str	r0, [fp, #-32]	; 0xffffffe0
    1860:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1864:	cmp	r0, #0
    1868:	ble	196c <compare_records+0x1d8>
    186c:	movw	r0, #0
    1870:	str	r0, [fp, #-44]	; 0xffffffd4
    1874:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1878:	ldr	r1, [fp, #-36]	; 0xffffffdc
    187c:	cmp	r0, r1
    1880:	bge	1968 <compare_records+0x1d4>
    1884:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1888:	ldr	r1, [fp, #-44]	; 0xffffffd4
    188c:	sub	r2, fp, #52	; 0x34
    1890:	bl	0 <coda_type_get_record_field_name>
    1894:	cmp	r0, #0
    1898:	beq	18b4 <compare_records+0x120>
    189c:	ldr	r0, [fp, #-16]
    18a0:	movw	r1, #1
    18a4:	bl	1458 <print_error_with_cursor>
    18a8:	mvn	r0, #0
    18ac:	str	r0, [fp, #-12]
    18b0:	b	1d9c <compare_records+0x608>
    18b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    18b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    18bc:	sub	r2, fp, #48	; 0x30
    18c0:	bl	0 <coda_type_get_record_field_index_from_name>
    18c4:	cmp	r0, #0
    18c8:	beq	1954 <compare_records+0x1c0>
    18cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    18d0:	cmp	r0, #0
    18d4:	beq	191c <compare_records+0x188>
    18d8:	movw	r0, #0
    18dc:	movt	r0, #0
    18e0:	bl	0 <printf>
    18e4:	ldr	lr, [fp, #-16]
    18e8:	str	r0, [sp, #80]	; 0x50
    18ec:	mov	r0, lr
    18f0:	movw	r1, #0
    18f4:	movt	r1, #0
    18f8:	bl	0 <coda_cursor_print_path>
    18fc:	movw	r1, #0
    1900:	movt	r1, #0
    1904:	str	r0, [sp, #76]	; 0x4c
    1908:	mov	r0, r1
    190c:	bl	0 <printf>
    1910:	movw	r1, #0
    1914:	str	r1, [fp, #-32]	; 0xffffffe0
    1918:	str	r0, [sp, #72]	; 0x48
    191c:	movw	r0, #0
    1920:	movt	r0, #0
    1924:	ldr	r0, [r0]
    1928:	cmp	r0, #0
    192c:	beq	1950 <compare_records+0x1bc>
    1930:	movw	r0, #0
    1934:	movt	r0, #0
    1938:	ldr	r1, [r0]
    193c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1940:	movw	r0, #0
    1944:	movt	r0, #0
    1948:	bl	0 <printf>
    194c:	str	r0, [sp, #68]	; 0x44
    1950:	b	1954 <compare_records+0x1c0>
    1954:	b	1958 <compare_records+0x1c4>
    1958:	ldr	r0, [fp, #-44]	; 0xffffffd4
    195c:	add	r0, r0, #1
    1960:	str	r0, [fp, #-44]	; 0xffffffd4
    1964:	b	1874 <compare_records+0xe0>
    1968:	b	196c <compare_records+0x1d8>
    196c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1970:	cmp	r0, #0
    1974:	ble	1a78 <compare_records+0x2e4>
    1978:	movw	r0, #0
    197c:	str	r0, [fp, #-48]	; 0xffffffd0
    1980:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1984:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1988:	cmp	r0, r1
    198c:	bge	1a74 <compare_records+0x2e0>
    1990:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1994:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1998:	sub	r2, fp, #56	; 0x38
    199c:	bl	0 <coda_type_get_record_field_name>
    19a0:	cmp	r0, #0
    19a4:	beq	19c0 <compare_records+0x22c>
    19a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    19ac:	movw	r1, #2
    19b0:	bl	1458 <print_error_with_cursor>
    19b4:	mvn	r0, #0
    19b8:	str	r0, [fp, #-12]
    19bc:	b	1d9c <compare_records+0x608>
    19c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    19c4:	ldr	r1, [fp, #-56]	; 0xffffffc8
    19c8:	sub	r2, fp, #44	; 0x2c
    19cc:	bl	0 <coda_type_get_record_field_index_from_name>
    19d0:	cmp	r0, #0
    19d4:	beq	1a60 <compare_records+0x2cc>
    19d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    19dc:	cmp	r0, #0
    19e0:	beq	1a28 <compare_records+0x294>
    19e4:	movw	r0, #0
    19e8:	movt	r0, #0
    19ec:	bl	0 <printf>
    19f0:	ldr	lr, [fp, #-16]
    19f4:	str	r0, [sp, #64]	; 0x40
    19f8:	mov	r0, lr
    19fc:	movw	r1, #0
    1a00:	movt	r1, #0
    1a04:	bl	0 <coda_cursor_print_path>
    1a08:	movw	r1, #0
    1a0c:	movt	r1, #0
    1a10:	str	r0, [sp, #60]	; 0x3c
    1a14:	mov	r0, r1
    1a18:	bl	0 <printf>
    1a1c:	movw	r1, #0
    1a20:	str	r1, [fp, #-32]	; 0xffffffe0
    1a24:	str	r0, [sp, #56]	; 0x38
    1a28:	movw	r0, #0
    1a2c:	movt	r0, #0
    1a30:	ldr	r0, [r0]
    1a34:	cmp	r0, #0
    1a38:	beq	1a5c <compare_records+0x2c8>
    1a3c:	movw	r0, #0
    1a40:	movt	r0, #0
    1a44:	ldr	r1, [r0, #4]
    1a48:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1a4c:	movw	r0, #0
    1a50:	movt	r0, #0
    1a54:	bl	0 <printf>
    1a58:	str	r0, [sp, #52]	; 0x34
    1a5c:	b	1a60 <compare_records+0x2cc>
    1a60:	b	1a64 <compare_records+0x2d0>
    1a64:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1a68:	add	r0, r0, #1
    1a6c:	str	r0, [fp, #-48]	; 0xffffffd0
    1a70:	b	1980 <compare_records+0x1ec>
    1a74:	b	1a78 <compare_records+0x2e4>
    1a78:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1a7c:	cmp	r0, #0
    1a80:	ble	1d94 <compare_records+0x600>
    1a84:	ldr	r0, [fp, #-16]
    1a88:	add	r1, sp, #96	; 0x60
    1a8c:	str	r0, [sp, #48]	; 0x30
    1a90:	mov	r0, r1
    1a94:	ldr	r1, [sp, #48]	; 0x30
    1a98:	movw	r2, #520	; 0x208
    1a9c:	bl	0 <memcpy>
    1aa0:	ldr	r0, [fp, #-16]
    1aa4:	bl	0 <coda_cursor_goto_first_record_field>
    1aa8:	cmp	r0, #0
    1aac:	beq	1ac8 <compare_records+0x334>
    1ab0:	ldr	r0, [fp, #-16]
    1ab4:	movw	r1, #1
    1ab8:	bl	1458 <print_error_with_cursor>
    1abc:	mvn	r0, #0
    1ac0:	str	r0, [fp, #-12]
    1ac4:	b	1d9c <compare_records+0x608>
    1ac8:	movw	r0, #0
    1acc:	str	r0, [fp, #-44]	; 0xffffffd4
    1ad0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1ad4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1ad8:	cmp	r0, r1
    1adc:	bge	1d88 <compare_records+0x5f4>
    1ae0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1ae4:	add	r0, sp, #96	; 0x60
    1ae8:	add	r2, sp, #88	; 0x58
    1aec:	bl	0 <coda_cursor_get_record_field_available_status>
    1af0:	cmp	r0, #0
    1af4:	beq	1b10 <compare_records+0x37c>
    1af8:	add	r0, sp, #96	; 0x60
    1afc:	movw	r1, #1
    1b00:	bl	1458 <print_error_with_cursor>
    1b04:	mvn	r0, #0
    1b08:	str	r0, [fp, #-12]
    1b0c:	b	1d9c <compare_records+0x608>
    1b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1b14:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1b18:	add	r2, sp, #92	; 0x5c
    1b1c:	bl	0 <coda_type_get_record_field_name>
    1b20:	cmp	r0, #0
    1b24:	beq	1b40 <compare_records+0x3ac>
    1b28:	ldr	r0, [fp, #-16]
    1b2c:	movw	r1, #1
    1b30:	bl	1458 <print_error_with_cursor>
    1b34:	mvn	r0, #0
    1b38:	str	r0, [fp, #-12]
    1b3c:	b	1d9c <compare_records+0x608>
    1b40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1b44:	ldr	r1, [sp, #92]	; 0x5c
    1b48:	sub	r2, fp, #48	; 0x30
    1b4c:	bl	0 <coda_type_get_record_field_index_from_name>
    1b50:	cmp	r0, #0
    1b54:	bne	1d34 <compare_records+0x5a0>
    1b58:	ldr	r0, [fp, #-20]	; 0xffffffec
    1b5c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1b60:	add	r2, sp, #84	; 0x54
    1b64:	bl	0 <coda_cursor_get_record_field_available_status>
    1b68:	cmp	r0, #0
    1b6c:	beq	1b88 <compare_records+0x3f4>
    1b70:	ldr	r0, [fp, #-20]	; 0xffffffec
    1b74:	movw	r1, #2
    1b78:	bl	1458 <print_error_with_cursor>
    1b7c:	mvn	r0, #0
    1b80:	str	r0, [fp, #-12]
    1b84:	b	1d9c <compare_records+0x608>
    1b88:	ldr	r0, [sp, #88]	; 0x58
    1b8c:	cmp	r0, #0
    1b90:	beq	1c90 <compare_records+0x4fc>
    1b94:	ldr	r0, [sp, #84]	; 0x54
    1b98:	cmp	r0, #0
    1b9c:	beq	1bfc <compare_records+0x468>
    1ba0:	ldr	r0, [fp, #-20]	; 0xffffffec
    1ba4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1ba8:	bl	0 <coda_cursor_goto_record_field_by_index>
    1bac:	cmp	r0, #0
    1bb0:	beq	1bcc <compare_records+0x438>
    1bb4:	ldr	r0, [fp, #-20]	; 0xffffffec
    1bb8:	movw	r1, #2
    1bbc:	bl	1458 <print_error_with_cursor>
    1bc0:	mvn	r0, #0
    1bc4:	str	r0, [fp, #-12]
    1bc8:	b	1d9c <compare_records+0x608>
    1bcc:	ldr	r0, [fp, #-16]
    1bd0:	ldr	r1, [fp, #-20]	; 0xffffffec
    1bd4:	bl	103c <compare_data>
    1bd8:	cmp	r0, #0
    1bdc:	beq	1bec <compare_records+0x458>
    1be0:	mvn	r0, #0
    1be4:	str	r0, [fp, #-12]
    1be8:	b	1d9c <compare_records+0x608>
    1bec:	ldr	r0, [fp, #-20]	; 0xffffffec
    1bf0:	bl	0 <coda_cursor_goto_parent>
    1bf4:	str	r0, [sp, #44]	; 0x2c
    1bf8:	b	1c8c <compare_records+0x4f8>
    1bfc:	movw	r0, #0
    1c00:	movt	r0, #0
    1c04:	bl	0 <printf>
    1c08:	ldr	lr, [fp, #-16]
    1c0c:	str	r0, [sp, #40]	; 0x28
    1c10:	mov	r0, lr
    1c14:	movw	r1, #0
    1c18:	movt	r1, #0
    1c1c:	bl	0 <coda_cursor_print_path>
    1c20:	movw	r1, #0
    1c24:	movt	r1, #0
    1c28:	str	r0, [sp, #36]	; 0x24
    1c2c:	mov	r0, r1
    1c30:	bl	0 <printf>
    1c34:	movw	r1, #0
    1c38:	movt	r1, #0
    1c3c:	ldr	r1, [r1]
    1c40:	cmp	r1, #0
    1c44:	str	r0, [sp, #32]
    1c48:	beq	1c88 <compare_records+0x4f4>
    1c4c:	movw	r0, #0
    1c50:	movt	r0, #0
    1c54:	ldr	r1, [r0]
    1c58:	movw	r0, #0
    1c5c:	movt	r0, #0
    1c60:	bl	0 <printf>
    1c64:	movw	r1, #0
    1c68:	movt	r1, #0
    1c6c:	ldr	r1, [r1, #4]
    1c70:	movw	lr, #0
    1c74:	movt	lr, #0
    1c78:	str	r0, [sp, #28]
    1c7c:	mov	r0, lr
    1c80:	bl	0 <printf>
    1c84:	str	r0, [sp, #24]
    1c88:	b	1c8c <compare_records+0x4f8>
    1c8c:	b	1d30 <compare_records+0x59c>
    1c90:	ldr	r0, [sp, #84]	; 0x54
    1c94:	cmp	r0, #0
    1c98:	beq	1d2c <compare_records+0x598>
    1c9c:	movw	r0, #0
    1ca0:	movt	r0, #0
    1ca4:	bl	0 <printf>
    1ca8:	ldr	lr, [fp, #-16]
    1cac:	str	r0, [sp, #20]
    1cb0:	mov	r0, lr
    1cb4:	movw	r1, #0
    1cb8:	movt	r1, #0
    1cbc:	bl	0 <coda_cursor_print_path>
    1cc0:	movw	r1, #0
    1cc4:	movt	r1, #0
    1cc8:	str	r0, [sp, #16]
    1ccc:	mov	r0, r1
    1cd0:	bl	0 <printf>
    1cd4:	movw	r1, #0
    1cd8:	movt	r1, #0
    1cdc:	ldr	r1, [r1]
    1ce0:	cmp	r1, #0
    1ce4:	str	r0, [sp, #12]
    1ce8:	beq	1d28 <compare_records+0x594>
    1cec:	movw	r0, #0
    1cf0:	movt	r0, #0
    1cf4:	ldr	r1, [r0]
    1cf8:	movw	r0, #0
    1cfc:	movt	r0, #0
    1d00:	bl	0 <printf>
    1d04:	movw	r1, #0
    1d08:	movt	r1, #0
    1d0c:	ldr	r1, [r1, #4]
    1d10:	movw	lr, #0
    1d14:	movt	lr, #0
    1d18:	str	r0, [sp, #8]
    1d1c:	mov	r0, lr
    1d20:	bl	0 <printf>
    1d24:	str	r0, [sp, #4]
    1d28:	b	1d2c <compare_records+0x598>
    1d2c:	b	1d30 <compare_records+0x59c>
    1d30:	b	1d34 <compare_records+0x5a0>
    1d34:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1d38:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1d3c:	sub	r1, r1, #1
    1d40:	cmp	r0, r1
    1d44:	bge	1d74 <compare_records+0x5e0>
    1d48:	ldr	r0, [fp, #-16]
    1d4c:	bl	0 <coda_cursor_goto_next_record_field>
    1d50:	cmp	r0, #0
    1d54:	beq	1d70 <compare_records+0x5dc>
    1d58:	ldr	r0, [fp, #-16]
    1d5c:	movw	r1, #1
    1d60:	bl	1458 <print_error_with_cursor>
    1d64:	mvn	r0, #0
    1d68:	str	r0, [fp, #-12]
    1d6c:	b	1d9c <compare_records+0x608>
    1d70:	b	1d74 <compare_records+0x5e0>
    1d74:	b	1d78 <compare_records+0x5e4>
    1d78:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1d7c:	add	r0, r0, #1
    1d80:	str	r0, [fp, #-44]	; 0xffffffd4
    1d84:	b	1ad0 <compare_records+0x33c>
    1d88:	ldr	r0, [fp, #-16]
    1d8c:	bl	0 <coda_cursor_goto_parent>
    1d90:	str	r0, [sp]
    1d94:	movw	r0, #0
    1d98:	str	r0, [fp, #-12]
    1d9c:	ldr	r0, [fp, #-12]
    1da0:	sub	sp, fp, #8
    1da4:	pop	{r4, r5, fp, pc}

00001da8 <compare_numbers>:
    1da8:	push	{r4, r5, fp, lr}
    1dac:	add	fp, sp, #8
    1db0:	sub	sp, sp, #240	; 0xf0
    1db4:	str	r0, [fp, #-16]
    1db8:	str	r1, [fp, #-20]	; 0xffffffec
    1dbc:	ldr	r0, [fp, #-16]
    1dc0:	sub	r1, fp, #24
    1dc4:	bl	0 <coda_cursor_get_read_type>
    1dc8:	cmp	r0, #0
    1dcc:	beq	1de8 <compare_numbers+0x40>
    1dd0:	ldr	r0, [fp, #-16]
    1dd4:	movw	r1, #1
    1dd8:	bl	1458 <print_error_with_cursor>
    1ddc:	mvn	r0, #0
    1de0:	str	r0, [fp, #-12]
    1de4:	b	248c <compare_numbers+0x6e4>
    1de8:	ldr	r0, [fp, #-20]	; 0xffffffec
    1dec:	sub	r1, fp, #28
    1df0:	bl	0 <coda_cursor_get_read_type>
    1df4:	cmp	r0, #0
    1df8:	beq	1e14 <compare_numbers+0x6c>
    1dfc:	ldr	r0, [fp, #-20]	; 0xffffffec
    1e00:	movw	r1, #2
    1e04:	bl	1458 <print_error_with_cursor>
    1e08:	mvn	r0, #0
    1e0c:	str	r0, [fp, #-12]
    1e10:	b	248c <compare_numbers+0x6e4>
    1e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1e18:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1e1c:	cmp	r0, r1
    1e20:	beq	1ef4 <compare_numbers+0x14c>
    1e24:	movw	r0, #0
    1e28:	movt	r0, #0
    1e2c:	bl	0 <printf>
    1e30:	ldr	lr, [fp, #-16]
    1e34:	str	r0, [sp, #116]	; 0x74
    1e38:	mov	r0, lr
    1e3c:	movw	r1, #0
    1e40:	movt	r1, #0
    1e44:	bl	0 <coda_cursor_print_path>
    1e48:	movw	r1, #0
    1e4c:	movt	r1, #0
    1e50:	str	r0, [sp, #112]	; 0x70
    1e54:	mov	r0, r1
    1e58:	bl	0 <printf>
    1e5c:	movw	r1, #0
    1e60:	movt	r1, #0
    1e64:	ldr	r1, [r1]
    1e68:	cmp	r1, #0
    1e6c:	str	r0, [sp, #108]	; 0x6c
    1e70:	beq	1ee8 <compare_numbers+0x140>
    1e74:	movw	r0, #0
    1e78:	movt	r0, #0
    1e7c:	ldr	r1, [r0]
    1e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1e84:	str	r1, [sp, #104]	; 0x68
    1e88:	bl	0 <coda_type_get_native_type_name>
    1e8c:	movw	r1, #0
    1e90:	movt	r1, #0
    1e94:	str	r0, [sp, #100]	; 0x64
    1e98:	mov	r0, r1
    1e9c:	ldr	r1, [sp, #104]	; 0x68
    1ea0:	ldr	r2, [sp, #100]	; 0x64
    1ea4:	bl	0 <printf>
    1ea8:	movw	r1, #0
    1eac:	movt	r1, #0
    1eb0:	ldr	r1, [r1, #4]
    1eb4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1eb8:	str	r0, [sp, #96]	; 0x60
    1ebc:	mov	r0, r2
    1ec0:	str	r1, [sp, #92]	; 0x5c
    1ec4:	bl	0 <coda_type_get_native_type_name>
    1ec8:	movw	r1, #0
    1ecc:	movt	r1, #0
    1ed0:	str	r0, [sp, #88]	; 0x58
    1ed4:	mov	r0, r1
    1ed8:	ldr	r1, [sp, #92]	; 0x5c
    1edc:	ldr	r2, [sp, #88]	; 0x58
    1ee0:	bl	0 <printf>
    1ee4:	str	r0, [sp, #84]	; 0x54
    1ee8:	movw	r0, #0
    1eec:	str	r0, [fp, #-12]
    1ef0:	b	248c <compare_numbers+0x6e4>
    1ef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ef8:	cmp	r0, #0
    1efc:	str	r0, [sp, #80]	; 0x50
    1f00:	beq	1f8c <compare_numbers+0x1e4>
    1f04:	b	1f08 <compare_numbers+0x160>
    1f08:	ldr	r0, [sp, #80]	; 0x50
    1f0c:	cmp	r0, #1
    1f10:	beq	2134 <compare_numbers+0x38c>
    1f14:	b	1f18 <compare_numbers+0x170>
    1f18:	ldr	r0, [sp, #80]	; 0x50
    1f1c:	cmp	r0, #2
    1f20:	beq	1f8c <compare_numbers+0x1e4>
    1f24:	b	1f28 <compare_numbers+0x180>
    1f28:	ldr	r0, [sp, #80]	; 0x50
    1f2c:	cmp	r0, #3
    1f30:	beq	2134 <compare_numbers+0x38c>
    1f34:	b	1f38 <compare_numbers+0x190>
    1f38:	ldr	r0, [sp, #80]	; 0x50
    1f3c:	cmp	r0, #4
    1f40:	beq	1f8c <compare_numbers+0x1e4>
    1f44:	b	1f48 <compare_numbers+0x1a0>
    1f48:	ldr	r0, [sp, #80]	; 0x50
    1f4c:	cmp	r0, #5
    1f50:	beq	2134 <compare_numbers+0x38c>
    1f54:	b	1f58 <compare_numbers+0x1b0>
    1f58:	ldr	r0, [sp, #80]	; 0x50
    1f5c:	cmp	r0, #6
    1f60:	beq	1f8c <compare_numbers+0x1e4>
    1f64:	b	1f68 <compare_numbers+0x1c0>
    1f68:	ldr	r0, [sp, #80]	; 0x50
    1f6c:	cmp	r0, #7
    1f70:	beq	2134 <compare_numbers+0x38c>
    1f74:	b	1f78 <compare_numbers+0x1d0>
    1f78:	ldr	r0, [sp, #80]	; 0x50
    1f7c:	sub	r1, r0, #8
    1f80:	cmp	r1, #2
    1f84:	bcc	22dc <compare_numbers+0x534>
    1f88:	b	2464 <compare_numbers+0x6bc>
    1f8c:	ldr	r0, [fp, #-16]
    1f90:	sub	r1, fp, #40	; 0x28
    1f94:	bl	0 <coda_cursor_read_int64>
    1f98:	cmp	r0, #0
    1f9c:	beq	1fdc <compare_numbers+0x234>
    1fa0:	ldr	r0, [fp, #-16]
    1fa4:	movw	r1, #1
    1fa8:	bl	1458 <print_error_with_cursor>
    1fac:	bl	0 <coda_get_errno>
    1fb0:	ldr	r0, [r0]
    1fb4:	cmn	r0, #300	; 0x12c
    1fb8:	beq	1fd8 <compare_numbers+0x230>
    1fbc:	bl	0 <coda_get_errno>
    1fc0:	ldr	r0, [r0]
    1fc4:	cmn	r0, #103	; 0x67
    1fc8:	beq	1fd8 <compare_numbers+0x230>
    1fcc:	mvn	r0, #0
    1fd0:	str	r0, [fp, #-12]
    1fd4:	b	248c <compare_numbers+0x6e4>
    1fd8:	b	2130 <compare_numbers+0x388>
    1fdc:	ldr	r0, [fp, #-20]	; 0xffffffec
    1fe0:	sub	r1, fp, #48	; 0x30
    1fe4:	bl	0 <coda_cursor_read_int64>
    1fe8:	cmp	r0, #0
    1fec:	beq	202c <compare_numbers+0x284>
    1ff0:	ldr	r0, [fp, #-20]	; 0xffffffec
    1ff4:	movw	r1, #2
    1ff8:	bl	1458 <print_error_with_cursor>
    1ffc:	bl	0 <coda_get_errno>
    2000:	ldr	r0, [r0]
    2004:	cmn	r0, #300	; 0x12c
    2008:	beq	2028 <compare_numbers+0x280>
    200c:	bl	0 <coda_get_errno>
    2010:	ldr	r0, [r0]
    2014:	cmn	r0, #103	; 0x67
    2018:	beq	2028 <compare_numbers+0x280>
    201c:	mvn	r0, #0
    2020:	str	r0, [fp, #-12]
    2024:	b	248c <compare_numbers+0x6e4>
    2028:	b	212c <compare_numbers+0x384>
    202c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2030:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2034:	ldr	r2, [fp, #-48]	; 0xffffffd0
    2038:	ldr	r3, [fp, #-44]	; 0xffffffd4
    203c:	eor	r1, r1, r3
    2040:	eor	r0, r0, r2
    2044:	orr	r0, r0, r1
    2048:	cmp	r0, #0
    204c:	beq	2128 <compare_numbers+0x380>
    2050:	b	2054 <compare_numbers+0x2ac>
    2054:	movw	r0, #0
    2058:	movt	r0, #0
    205c:	bl	0 <printf>
    2060:	ldr	lr, [fp, #-16]
    2064:	str	r0, [sp, #76]	; 0x4c
    2068:	mov	r0, lr
    206c:	movw	r1, #0
    2070:	movt	r1, #0
    2074:	bl	0 <coda_cursor_print_path>
    2078:	movw	r1, #0
    207c:	movt	r1, #0
    2080:	str	r0, [sp, #72]	; 0x48
    2084:	mov	r0, r1
    2088:	bl	0 <printf>
    208c:	movw	r1, #0
    2090:	movt	r1, #0
    2094:	ldr	r1, [r1]
    2098:	cmp	r1, #0
    209c:	str	r0, [sp, #68]	; 0x44
    20a0:	beq	211c <compare_numbers+0x374>
    20a4:	sub	r2, fp, #69	; 0x45
    20a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    20ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
    20b0:	sub	r3, fp, #69	; 0x45
    20b4:	str	r2, [sp, #64]	; 0x40
    20b8:	mov	r2, r3
    20bc:	str	r3, [sp, #60]	; 0x3c
    20c0:	bl	0 <coda_str64>
    20c4:	movw	r0, #0
    20c8:	movt	r0, #0
    20cc:	ldr	r1, [r0]
    20d0:	movw	r0, #0
    20d4:	movt	r0, #0
    20d8:	ldr	r2, [sp, #60]	; 0x3c
    20dc:	bl	0 <printf>
    20e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    20e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    20e8:	str	r0, [sp, #56]	; 0x38
    20ec:	mov	r0, r1
    20f0:	mov	r1, r2
    20f4:	ldr	r2, [sp, #64]	; 0x40
    20f8:	bl	0 <coda_str64>
    20fc:	sub	r2, fp, #69	; 0x45
    2100:	movw	r0, #0
    2104:	movt	r0, #0
    2108:	ldr	r1, [r0, #4]
    210c:	movw	r0, #0
    2110:	movt	r0, #0
    2114:	bl	0 <printf>
    2118:	str	r0, [sp, #52]	; 0x34
    211c:	movw	r0, #0
    2120:	str	r0, [fp, #-12]
    2124:	b	248c <compare_numbers+0x6e4>
    2128:	b	212c <compare_numbers+0x384>
    212c:	b	2130 <compare_numbers+0x388>
    2130:	b	2484 <compare_numbers+0x6dc>
    2134:	ldr	r0, [fp, #-16]
    2138:	sub	r1, fp, #80	; 0x50
    213c:	bl	0 <coda_cursor_read_uint64>
    2140:	cmp	r0, #0
    2144:	beq	2184 <compare_numbers+0x3dc>
    2148:	ldr	r0, [fp, #-16]
    214c:	movw	r1, #1
    2150:	bl	1458 <print_error_with_cursor>
    2154:	bl	0 <coda_get_errno>
    2158:	ldr	r0, [r0]
    215c:	cmn	r0, #300	; 0x12c
    2160:	beq	2180 <compare_numbers+0x3d8>
    2164:	bl	0 <coda_get_errno>
    2168:	ldr	r0, [r0]
    216c:	cmn	r0, #103	; 0x67
    2170:	beq	2180 <compare_numbers+0x3d8>
    2174:	mvn	r0, #0
    2178:	str	r0, [fp, #-12]
    217c:	b	248c <compare_numbers+0x6e4>
    2180:	b	22d8 <compare_numbers+0x530>
    2184:	ldr	r0, [fp, #-20]	; 0xffffffec
    2188:	sub	r1, fp, #88	; 0x58
    218c:	bl	0 <coda_cursor_read_uint64>
    2190:	cmp	r0, #0
    2194:	beq	21d4 <compare_numbers+0x42c>
    2198:	ldr	r0, [fp, #-20]	; 0xffffffec
    219c:	movw	r1, #2
    21a0:	bl	1458 <print_error_with_cursor>
    21a4:	bl	0 <coda_get_errno>
    21a8:	ldr	r0, [r0]
    21ac:	cmn	r0, #300	; 0x12c
    21b0:	beq	21d0 <compare_numbers+0x428>
    21b4:	bl	0 <coda_get_errno>
    21b8:	ldr	r0, [r0]
    21bc:	cmn	r0, #103	; 0x67
    21c0:	beq	21d0 <compare_numbers+0x428>
    21c4:	mvn	r0, #0
    21c8:	str	r0, [fp, #-12]
    21cc:	b	248c <compare_numbers+0x6e4>
    21d0:	b	22d4 <compare_numbers+0x52c>
    21d4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    21d8:	ldr	r1, [fp, #-76]	; 0xffffffb4
    21dc:	ldr	r2, [fp, #-88]	; 0xffffffa8
    21e0:	ldr	r3, [fp, #-84]	; 0xffffffac
    21e4:	eor	r1, r1, r3
    21e8:	eor	r0, r0, r2
    21ec:	orr	r0, r0, r1
    21f0:	cmp	r0, #0
    21f4:	beq	22d0 <compare_numbers+0x528>
    21f8:	b	21fc <compare_numbers+0x454>
    21fc:	movw	r0, #0
    2200:	movt	r0, #0
    2204:	bl	0 <printf>
    2208:	ldr	lr, [fp, #-16]
    220c:	str	r0, [sp, #48]	; 0x30
    2210:	mov	r0, lr
    2214:	movw	r1, #0
    2218:	movt	r1, #0
    221c:	bl	0 <coda_cursor_print_path>
    2220:	movw	r1, #0
    2224:	movt	r1, #0
    2228:	str	r0, [sp, #44]	; 0x2c
    222c:	mov	r0, r1
    2230:	bl	0 <printf>
    2234:	movw	r1, #0
    2238:	movt	r1, #0
    223c:	ldr	r1, [r1]
    2240:	cmp	r1, #0
    2244:	str	r0, [sp, #40]	; 0x28
    2248:	beq	22c4 <compare_numbers+0x51c>
    224c:	sub	r2, fp, #109	; 0x6d
    2250:	ldr	r0, [fp, #-80]	; 0xffffffb0
    2254:	ldr	r1, [fp, #-76]	; 0xffffffb4
    2258:	sub	r3, fp, #109	; 0x6d
    225c:	str	r2, [sp, #36]	; 0x24
    2260:	mov	r2, r3
    2264:	str	r3, [sp, #32]
    2268:	bl	0 <coda_str64u>
    226c:	movw	r0, #0
    2270:	movt	r0, #0
    2274:	ldr	r1, [r0]
    2278:	movw	r0, #0
    227c:	movt	r0, #0
    2280:	ldr	r2, [sp, #32]
    2284:	bl	0 <printf>
    2288:	ldr	r1, [fp, #-88]	; 0xffffffa8
    228c:	ldr	r2, [fp, #-84]	; 0xffffffac
    2290:	str	r0, [sp, #28]
    2294:	mov	r0, r1
    2298:	mov	r1, r2
    229c:	ldr	r2, [sp, #36]	; 0x24
    22a0:	bl	0 <coda_str64u>
    22a4:	sub	r2, fp, #109	; 0x6d
    22a8:	movw	r0, #0
    22ac:	movt	r0, #0
    22b0:	ldr	r1, [r0, #4]
    22b4:	movw	r0, #0
    22b8:	movt	r0, #0
    22bc:	bl	0 <printf>
    22c0:	str	r0, [sp, #24]
    22c4:	movw	r0, #0
    22c8:	str	r0, [fp, #-12]
    22cc:	b	248c <compare_numbers+0x6e4>
    22d0:	b	22d4 <compare_numbers+0x52c>
    22d4:	b	22d8 <compare_numbers+0x530>
    22d8:	b	2484 <compare_numbers+0x6dc>
    22dc:	ldr	r0, [fp, #-16]
    22e0:	sub	r1, fp, #120	; 0x78
    22e4:	bl	0 <coda_cursor_read_double>
    22e8:	cmp	r0, #0
    22ec:	beq	232c <compare_numbers+0x584>
    22f0:	ldr	r0, [fp, #-16]
    22f4:	movw	r1, #1
    22f8:	bl	1458 <print_error_with_cursor>
    22fc:	bl	0 <coda_get_errno>
    2300:	ldr	r0, [r0]
    2304:	cmn	r0, #300	; 0x12c
    2308:	beq	2328 <compare_numbers+0x580>
    230c:	bl	0 <coda_get_errno>
    2310:	ldr	r0, [r0]
    2314:	cmn	r0, #103	; 0x67
    2318:	beq	2328 <compare_numbers+0x580>
    231c:	mvn	r0, #0
    2320:	str	r0, [fp, #-12]
    2324:	b	248c <compare_numbers+0x6e4>
    2328:	b	2460 <compare_numbers+0x6b8>
    232c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2330:	add	r1, sp, #120	; 0x78
    2334:	bl	0 <coda_cursor_read_double>
    2338:	cmp	r0, #0
    233c:	beq	237c <compare_numbers+0x5d4>
    2340:	ldr	r0, [fp, #-20]	; 0xffffffec
    2344:	movw	r1, #2
    2348:	bl	1458 <print_error_with_cursor>
    234c:	bl	0 <coda_get_errno>
    2350:	ldr	r0, [r0]
    2354:	cmn	r0, #300	; 0x12c
    2358:	beq	2378 <compare_numbers+0x5d0>
    235c:	bl	0 <coda_get_errno>
    2360:	ldr	r0, [r0]
    2364:	cmn	r0, #103	; 0x67
    2368:	beq	2378 <compare_numbers+0x5d0>
    236c:	mvn	r0, #0
    2370:	str	r0, [fp, #-12]
    2374:	b	248c <compare_numbers+0x6e4>
    2378:	b	245c <compare_numbers+0x6b4>
    237c:	vldr	d16, [fp, #-120]	; 0xffffff88
    2380:	vldr	d17, [sp, #120]	; 0x78
    2384:	vcmp.f64	d16, d17
    2388:	vmrs	APSR_nzcv, fpscr
    238c:	beq	2458 <compare_numbers+0x6b0>
    2390:	vldr	d0, [fp, #-120]	; 0xffffff88
    2394:	bl	0 <coda_isNaN>
    2398:	cmp	r0, #0
    239c:	beq	23b0 <compare_numbers+0x608>
    23a0:	vldr	d0, [sp, #120]	; 0x78
    23a4:	bl	0 <coda_isNaN>
    23a8:	cmp	r0, #0
    23ac:	bne	2458 <compare_numbers+0x6b0>
    23b0:	movw	r0, #0
    23b4:	movt	r0, #0
    23b8:	bl	0 <printf>
    23bc:	ldr	lr, [fp, #-16]
    23c0:	str	r0, [sp, #20]
    23c4:	mov	r0, lr
    23c8:	movw	r1, #0
    23cc:	movt	r1, #0
    23d0:	bl	0 <coda_cursor_print_path>
    23d4:	movw	r1, #0
    23d8:	movt	r1, #0
    23dc:	str	r0, [sp, #16]
    23e0:	mov	r0, r1
    23e4:	bl	0 <printf>
    23e8:	movw	r1, #0
    23ec:	movt	r1, #0
    23f0:	ldr	r1, [r1]
    23f4:	cmp	r1, #0
    23f8:	str	r0, [sp, #12]
    23fc:	beq	244c <compare_numbers+0x6a4>
    2400:	movw	r0, #0
    2404:	movt	r0, #0
    2408:	ldr	r1, [r0]
    240c:	vldr	d16, [fp, #-120]	; 0xffffff88
    2410:	movw	r0, #0
    2414:	movt	r0, #0
    2418:	vmov	r2, r3, d16
    241c:	bl	0 <printf>
    2420:	movw	r1, #0
    2424:	movt	r1, #0
    2428:	ldr	r1, [r1, #4]
    242c:	vldr	d16, [sp, #120]	; 0x78
    2430:	movw	r2, #0
    2434:	movt	r2, #0
    2438:	str	r0, [sp, #8]
    243c:	mov	r0, r2
    2440:	vmov	r2, r3, d16
    2444:	bl	0 <printf>
    2448:	str	r0, [sp, #4]
    244c:	movw	r0, #0
    2450:	str	r0, [fp, #-12]
    2454:	b	248c <compare_numbers+0x6e4>
    2458:	b	245c <compare_numbers+0x6b4>
    245c:	b	2460 <compare_numbers+0x6b8>
    2460:	b	2484 <compare_numbers+0x6dc>
    2464:	movw	r0, #0
    2468:	movt	r0, #0
    246c:	movw	r1, #0
    2470:	movt	r1, #0
    2474:	movw	r2, #950	; 0x3b6
    2478:	movw	r3, #0
    247c:	movt	r3, #0
    2480:	bl	0 <__assert_fail>
    2484:	movw	r0, #0
    2488:	str	r0, [fp, #-12]
    248c:	ldr	r0, [fp, #-12]
    2490:	sub	sp, fp, #8
    2494:	pop	{r4, r5, fp, pc}

00002498 <compare_strings>:
    2498:	push	{fp, lr}
    249c:	mov	fp, sp
    24a0:	sub	sp, sp, #56	; 0x38
    24a4:	str	r0, [fp, #-8]
    24a8:	str	r1, [fp, #-12]
    24ac:	ldr	r0, [fp, #-8]
    24b0:	sub	r1, fp, #24
    24b4:	bl	0 <coda_cursor_get_string_length>
    24b8:	cmp	r0, #0
    24bc:	beq	24d8 <compare_strings+0x40>
    24c0:	ldr	r0, [fp, #-8]
    24c4:	movw	r1, #1
    24c8:	bl	1458 <print_error_with_cursor>
    24cc:	mvn	r0, #0
    24d0:	str	r0, [fp, #-4]
    24d4:	b	2774 <compare_strings+0x2dc>
    24d8:	ldr	r0, [fp, #-12]
    24dc:	add	r1, sp, #28
    24e0:	bl	0 <coda_cursor_get_string_length>
    24e4:	cmp	r0, #0
    24e8:	beq	2504 <compare_strings+0x6c>
    24ec:	ldr	r0, [fp, #-12]
    24f0:	movw	r1, #2
    24f4:	bl	1458 <print_error_with_cursor>
    24f8:	mvn	r0, #0
    24fc:	str	r0, [fp, #-4]
    2500:	b	2774 <compare_strings+0x2dc>
    2504:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2508:	add	r0, r0, #1
    250c:	bl	0 <malloc>
    2510:	str	r0, [fp, #-16]
    2514:	ldr	r0, [fp, #-16]
    2518:	movw	lr, #0
    251c:	cmp	r0, lr
    2520:	bne	2560 <compare_strings+0xc8>
    2524:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2528:	mvn	r0, #0
    252c:	movw	r1, #0
    2530:	movt	r1, #0
    2534:	movw	r3, #0
    2538:	movt	r3, #0
    253c:	movw	ip, #978	; 0x3d2
    2540:	str	ip, [sp]
    2544:	bl	0 <coda_set_error>
    2548:	ldr	r0, [fp, #-8]
    254c:	movw	r1, #1
    2550:	bl	1458 <print_error_with_cursor>
    2554:	mvn	r0, #0
    2558:	str	r0, [fp, #-4]
    255c:	b	2774 <compare_strings+0x2dc>
    2560:	ldr	r0, [sp, #28]
    2564:	add	r0, r0, #1
    2568:	bl	0 <malloc>
    256c:	str	r0, [fp, #-20]	; 0xffffffec
    2570:	ldr	r0, [fp, #-20]	; 0xffffffec
    2574:	movw	lr, #0
    2578:	cmp	r0, lr
    257c:	bne	25c4 <compare_strings+0x12c>
    2580:	ldr	r2, [sp, #28]
    2584:	mvn	r0, #0
    2588:	movw	r1, #0
    258c:	movt	r1, #0
    2590:	movw	r3, #0
    2594:	movt	r3, #0
    2598:	movw	ip, #986	; 0x3da
    259c:	str	ip, [sp]
    25a0:	bl	0 <coda_set_error>
    25a4:	ldr	r0, [fp, #-12]
    25a8:	movw	r1, #2
    25ac:	bl	1458 <print_error_with_cursor>
    25b0:	ldr	r0, [fp, #-16]
    25b4:	bl	0 <free>
    25b8:	mvn	r0, #0
    25bc:	str	r0, [fp, #-4]
    25c0:	b	2774 <compare_strings+0x2dc>
    25c4:	ldr	r0, [fp, #-8]
    25c8:	ldr	r1, [fp, #-16]
    25cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    25d0:	add	r2, r2, #1
    25d4:	bl	0 <coda_cursor_read_string>
    25d8:	cmp	r0, #0
    25dc:	beq	262c <compare_strings+0x194>
    25e0:	ldr	r0, [fp, #-8]
    25e4:	movw	r1, #1
    25e8:	bl	1458 <print_error_with_cursor>
    25ec:	bl	0 <coda_get_errno>
    25f0:	ldr	r0, [r0]
    25f4:	cmn	r0, #300	; 0x12c
    25f8:	beq	2628 <compare_strings+0x190>
    25fc:	bl	0 <coda_get_errno>
    2600:	ldr	r0, [r0]
    2604:	cmn	r0, #103	; 0x67
    2608:	beq	2628 <compare_strings+0x190>
    260c:	ldr	r0, [fp, #-16]
    2610:	bl	0 <free>
    2614:	ldr	r0, [fp, #-20]	; 0xffffffec
    2618:	bl	0 <free>
    261c:	mvn	r0, #0
    2620:	str	r0, [fp, #-4]
    2624:	b	2774 <compare_strings+0x2dc>
    2628:	b	275c <compare_strings+0x2c4>
    262c:	ldr	r0, [fp, #-12]
    2630:	ldr	r1, [fp, #-20]	; 0xffffffec
    2634:	ldr	r2, [sp, #28]
    2638:	add	r2, r2, #1
    263c:	bl	0 <coda_cursor_read_string>
    2640:	cmp	r0, #0
    2644:	beq	2694 <compare_strings+0x1fc>
    2648:	ldr	r0, [fp, #-12]
    264c:	movw	r1, #2
    2650:	bl	1458 <print_error_with_cursor>
    2654:	bl	0 <coda_get_errno>
    2658:	ldr	r0, [r0]
    265c:	cmn	r0, #300	; 0x12c
    2660:	beq	2690 <compare_strings+0x1f8>
    2664:	bl	0 <coda_get_errno>
    2668:	ldr	r0, [r0]
    266c:	cmn	r0, #103	; 0x67
    2670:	beq	2690 <compare_strings+0x1f8>
    2674:	ldr	r0, [fp, #-16]
    2678:	bl	0 <free>
    267c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2680:	bl	0 <free>
    2684:	mvn	r0, #0
    2688:	str	r0, [fp, #-4]
    268c:	b	2774 <compare_strings+0x2dc>
    2690:	b	2758 <compare_strings+0x2c0>
    2694:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2698:	ldr	r1, [sp, #28]
    269c:	cmp	r0, r1
    26a0:	bne	26bc <compare_strings+0x224>
    26a4:	ldr	r0, [fp, #-16]
    26a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    26ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    26b0:	bl	0 <memcmp>
    26b4:	cmp	r0, #0
    26b8:	beq	2754 <compare_strings+0x2bc>
    26bc:	movw	r0, #0
    26c0:	movt	r0, #0
    26c4:	bl	0 <printf>
    26c8:	ldr	lr, [fp, #-8]
    26cc:	str	r0, [sp, #24]
    26d0:	mov	r0, lr
    26d4:	movw	r1, #0
    26d8:	movt	r1, #0
    26dc:	bl	0 <coda_cursor_print_path>
    26e0:	movw	r1, #0
    26e4:	movt	r1, #0
    26e8:	str	r0, [sp, #20]
    26ec:	mov	r0, r1
    26f0:	bl	0 <printf>
    26f4:	movw	r1, #0
    26f8:	movt	r1, #0
    26fc:	ldr	r1, [r1]
    2700:	cmp	r1, #0
    2704:	str	r0, [sp, #16]
    2708:	beq	2750 <compare_strings+0x2b8>
    270c:	movw	r0, #0
    2710:	movt	r0, #0
    2714:	ldr	r1, [r0]
    2718:	ldr	r2, [fp, #-16]
    271c:	movw	r0, #0
    2720:	movt	r0, #0
    2724:	bl	0 <printf>
    2728:	movw	r1, #0
    272c:	movt	r1, #0
    2730:	ldr	r1, [r1, #4]
    2734:	ldr	r2, [fp, #-20]	; 0xffffffec
    2738:	movw	lr, #0
    273c:	movt	lr, #0
    2740:	str	r0, [sp, #12]
    2744:	mov	r0, lr
    2748:	bl	0 <printf>
    274c:	str	r0, [sp, #8]
    2750:	b	2754 <compare_strings+0x2bc>
    2754:	b	2758 <compare_strings+0x2c0>
    2758:	b	275c <compare_strings+0x2c4>
    275c:	ldr	r0, [fp, #-16]
    2760:	bl	0 <free>
    2764:	ldr	r0, [fp, #-20]	; 0xffffffec
    2768:	bl	0 <free>
    276c:	movw	r0, #0
    2770:	str	r0, [fp, #-4]
    2774:	ldr	r0, [fp, #-4]
    2778:	mov	sp, fp
    277c:	pop	{fp, pc}

00002780 <compare_bytes>:
    2780:	push	{fp, lr}
    2784:	mov	fp, sp
    2788:	sub	sp, sp, #176	; 0xb0
    278c:	str	r0, [fp, #-8]
    2790:	str	r1, [fp, #-12]
    2794:	ldr	r0, [fp, #-8]
    2798:	sub	r1, fp, #40	; 0x28
    279c:	bl	0 <coda_cursor_get_bit_size>
    27a0:	cmp	r0, #0
    27a4:	beq	27c0 <compare_bytes+0x40>
    27a8:	ldr	r0, [fp, #-8]
    27ac:	movw	r1, #1
    27b0:	bl	1458 <print_error_with_cursor>
    27b4:	mvn	r0, #0
    27b8:	str	r0, [fp, #-4]
    27bc:	b	2c64 <compare_bytes+0x4e4>
    27c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    27c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    27c8:	lsr	r2, r0, #3
    27cc:	orr	r2, r2, r1, lsl #29
    27d0:	asr	r1, r1, #3
    27d4:	and	r0, r0, #7
    27d8:	adds	r3, r2, #1
    27dc:	adc	ip, r1, #0
    27e0:	cmp	r0, #0
    27e4:	movne	r2, r3
    27e8:	cmp	r0, #0
    27ec:	movne	r1, ip
    27f0:	str	r2, [fp, #-24]	; 0xffffffe8
    27f4:	str	r1, [fp, #-20]	; 0xffffffec
    27f8:	ldr	r0, [fp, #-12]
    27fc:	sub	r1, fp, #48	; 0x30
    2800:	bl	0 <coda_cursor_get_bit_size>
    2804:	cmp	r0, #0
    2808:	beq	2824 <compare_bytes+0xa4>
    280c:	ldr	r0, [fp, #-12]
    2810:	movw	r1, #2
    2814:	bl	1458 <print_error_with_cursor>
    2818:	mvn	r0, #0
    281c:	str	r0, [fp, #-4]
    2820:	b	2c64 <compare_bytes+0x4e4>
    2824:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2828:	ldr	r1, [fp, #-44]	; 0xffffffd4
    282c:	lsr	r2, r0, #3
    2830:	orr	r2, r2, r1, lsl #29
    2834:	asr	r1, r1, #3
    2838:	and	r0, r0, #7
    283c:	adds	r3, r2, #1
    2840:	adc	ip, r1, #0
    2844:	cmp	r0, #0
    2848:	movne	r2, r3
    284c:	cmp	r0, #0
    2850:	movne	r1, ip
    2854:	str	r2, [fp, #-32]	; 0xffffffe0
    2858:	str	r1, [fp, #-28]	; 0xffffffe4
    285c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2860:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2864:	ldr	r2, [fp, #-48]	; 0xffffffd0
    2868:	ldr	r3, [fp, #-44]	; 0xffffffd4
    286c:	eor	r1, r1, r3
    2870:	eor	r0, r0, r2
    2874:	orr	r0, r0, r1
    2878:	cmp	r0, #0
    287c:	beq	2958 <compare_bytes+0x1d8>
    2880:	b	2884 <compare_bytes+0x104>
    2884:	movw	r0, #0
    2888:	movt	r0, #0
    288c:	bl	0 <printf>
    2890:	ldr	lr, [fp, #-8]
    2894:	str	r0, [fp, #-84]	; 0xffffffac
    2898:	mov	r0, lr
    289c:	movw	r1, #0
    28a0:	movt	r1, #0
    28a4:	bl	0 <coda_cursor_print_path>
    28a8:	movw	r1, #0
    28ac:	movt	r1, #0
    28b0:	str	r0, [sp, #88]	; 0x58
    28b4:	mov	r0, r1
    28b8:	bl	0 <printf>
    28bc:	movw	r1, #0
    28c0:	movt	r1, #0
    28c4:	ldr	r1, [r1]
    28c8:	cmp	r1, #0
    28cc:	str	r0, [sp, #84]	; 0x54
    28d0:	beq	294c <compare_bytes+0x1cc>
    28d4:	sub	r2, fp, #69	; 0x45
    28d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    28dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    28e0:	sub	r3, fp, #69	; 0x45
    28e4:	str	r2, [sp, #80]	; 0x50
    28e8:	mov	r2, r3
    28ec:	str	r3, [sp, #76]	; 0x4c
    28f0:	bl	0 <coda_str64>
    28f4:	movw	r0, #0
    28f8:	movt	r0, #0
    28fc:	ldr	r1, [r0]
    2900:	movw	r0, #0
    2904:	movt	r0, #0
    2908:	ldr	r2, [sp, #76]	; 0x4c
    290c:	bl	0 <printf>
    2910:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2914:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2918:	str	r0, [sp, #72]	; 0x48
    291c:	mov	r0, r1
    2920:	mov	r1, r2
    2924:	ldr	r2, [sp, #80]	; 0x50
    2928:	bl	0 <coda_str64>
    292c:	sub	r2, fp, #69	; 0x45
    2930:	movw	r0, #0
    2934:	movt	r0, #0
    2938:	ldr	r1, [r0, #4]
    293c:	movw	r0, #0
    2940:	movt	r0, #0
    2944:	bl	0 <printf>
    2948:	str	r0, [sp, #68]	; 0x44
    294c:	movw	r0, #0
    2950:	str	r0, [fp, #-4]
    2954:	b	2c64 <compare_bytes+0x4e4>
    2958:	ldr	r0, [fp, #-40]	; 0xffffffd8
    295c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2960:	subs	r0, r0, #1
    2964:	sbcs	r1, r1, #0
    2968:	str	r0, [sp, #64]	; 0x40
    296c:	str	r1, [sp, #60]	; 0x3c
    2970:	blt	2c5c <compare_bytes+0x4dc>
    2974:	b	2978 <compare_bytes+0x1f8>
    2978:	ldr	r0, [fp, #-24]	; 0xffffffe8
    297c:	bl	0 <malloc>
    2980:	str	r0, [fp, #-76]	; 0xffffffb4
    2984:	ldr	r0, [fp, #-76]	; 0xffffffb4
    2988:	movw	lr, #0
    298c:	cmp	r0, lr
    2990:	bne	29d0 <compare_bytes+0x250>
    2994:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2998:	mvn	r0, #0
    299c:	movw	r1, #0
    29a0:	movt	r1, #0
    29a4:	movw	r3, #0
    29a8:	movt	r3, #0
    29ac:	movw	ip, #1072	; 0x430
    29b0:	str	ip, [sp]
    29b4:	bl	0 <coda_set_error>
    29b8:	ldr	r0, [fp, #-8]
    29bc:	movw	r1, #1
    29c0:	bl	1458 <print_error_with_cursor>
    29c4:	mvn	r0, #0
    29c8:	str	r0, [fp, #-4]
    29cc:	b	2c64 <compare_bytes+0x4e4>
    29d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    29d4:	bl	0 <malloc>
    29d8:	str	r0, [fp, #-80]	; 0xffffffb0
    29dc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    29e0:	movw	lr, #0
    29e4:	cmp	r0, lr
    29e8:	bne	2a30 <compare_bytes+0x2b0>
    29ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
    29f0:	mvn	r0, #0
    29f4:	movw	r1, #0
    29f8:	movt	r1, #0
    29fc:	movw	r3, #0
    2a00:	movt	r3, #0
    2a04:	movw	ip, #1080	; 0x438
    2a08:	str	ip, [sp]
    2a0c:	bl	0 <coda_set_error>
    2a10:	ldr	r0, [fp, #-12]
    2a14:	movw	r1, #2
    2a18:	bl	1458 <print_error_with_cursor>
    2a1c:	ldr	r0, [fp, #-76]	; 0xffffffb4
    2a20:	bl	0 <free>
    2a24:	mvn	r0, #0
    2a28:	str	r0, [fp, #-4]
    2a2c:	b	2c64 <compare_bytes+0x4e4>
    2a30:	ldr	r0, [fp, #-8]
    2a34:	ldr	r1, [fp, #-76]	; 0xffffffb4
    2a38:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2a3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2a40:	mov	ip, sp
    2a44:	str	r3, [ip, #4]
    2a48:	str	r2, [ip]
    2a4c:	mov	r2, #0
    2a50:	str	r2, [sp, #56]	; 0x38
    2a54:	ldr	r3, [sp, #56]	; 0x38
    2a58:	bl	0 <coda_cursor_read_bits>
    2a5c:	cmp	r0, #0
    2a60:	beq	2ab0 <compare_bytes+0x330>
    2a64:	ldr	r0, [fp, #-8]
    2a68:	movw	r1, #1
    2a6c:	bl	1458 <print_error_with_cursor>
    2a70:	bl	0 <coda_get_errno>
    2a74:	ldr	r0, [r0]
    2a78:	cmn	r0, #300	; 0x12c
    2a7c:	beq	2aac <compare_bytes+0x32c>
    2a80:	bl	0 <coda_get_errno>
    2a84:	ldr	r0, [r0]
    2a88:	cmn	r0, #103	; 0x67
    2a8c:	beq	2aac <compare_bytes+0x32c>
    2a90:	ldr	r0, [fp, #-76]	; 0xffffffb4
    2a94:	bl	0 <free>
    2a98:	ldr	r0, [fp, #-80]	; 0xffffffb0
    2a9c:	bl	0 <free>
    2aa0:	mvn	r0, #0
    2aa4:	str	r0, [fp, #-4]
    2aa8:	b	2c64 <compare_bytes+0x4e4>
    2aac:	b	2c4c <compare_bytes+0x4cc>
    2ab0:	ldr	r0, [fp, #-12]
    2ab4:	ldr	r1, [fp, #-80]	; 0xffffffb0
    2ab8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    2abc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2ac0:	mov	ip, sp
    2ac4:	str	r3, [ip, #4]
    2ac8:	str	r2, [ip]
    2acc:	mov	r2, #0
    2ad0:	str	r2, [sp, #52]	; 0x34
    2ad4:	ldr	r3, [sp, #52]	; 0x34
    2ad8:	bl	0 <coda_cursor_read_bits>
    2adc:	cmp	r0, #0
    2ae0:	beq	2b30 <compare_bytes+0x3b0>
    2ae4:	ldr	r0, [fp, #-12]
    2ae8:	movw	r1, #2
    2aec:	bl	1458 <print_error_with_cursor>
    2af0:	bl	0 <coda_get_errno>
    2af4:	ldr	r0, [r0]
    2af8:	cmn	r0, #300	; 0x12c
    2afc:	beq	2b2c <compare_bytes+0x3ac>
    2b00:	bl	0 <coda_get_errno>
    2b04:	ldr	r0, [r0]
    2b08:	cmn	r0, #103	; 0x67
    2b0c:	beq	2b2c <compare_bytes+0x3ac>
    2b10:	ldr	r0, [fp, #-76]	; 0xffffffb4
    2b14:	bl	0 <free>
    2b18:	ldr	r0, [fp, #-80]	; 0xffffffb0
    2b1c:	bl	0 <free>
    2b20:	mvn	r0, #0
    2b24:	str	r0, [fp, #-4]
    2b28:	b	2c64 <compare_bytes+0x4e4>
    2b2c:	b	2c48 <compare_bytes+0x4c8>
    2b30:	ldr	r0, [fp, #-76]	; 0xffffffb4
    2b34:	ldr	r1, [fp, #-80]	; 0xffffffb0
    2b38:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2b3c:	bl	0 <memcmp>
    2b40:	cmp	r0, #0
    2b44:	beq	2c44 <compare_bytes+0x4c4>
    2b48:	movw	r0, #0
    2b4c:	movt	r0, #0
    2b50:	bl	0 <printf>
    2b54:	ldr	lr, [fp, #-8]
    2b58:	str	r0, [sp, #48]	; 0x30
    2b5c:	mov	r0, lr
    2b60:	movw	r1, #0
    2b64:	movt	r1, #0
    2b68:	bl	0 <coda_cursor_print_path>
    2b6c:	movw	r1, #0
    2b70:	movt	r1, #0
    2b74:	str	r0, [sp, #44]	; 0x2c
    2b78:	mov	r0, r1
    2b7c:	bl	0 <printf>
    2b80:	movw	r1, #0
    2b84:	movt	r1, #0
    2b88:	ldr	r1, [r1]
    2b8c:	cmp	r1, #0
    2b90:	str	r0, [sp, #40]	; 0x28
    2b94:	beq	2c40 <compare_bytes+0x4c0>
    2b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2b9c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ba0:	rsbs	r0, r0, #256	; 0x100
    2ba4:	rscs	r1, r1, #0
    2ba8:	str	r0, [sp, #36]	; 0x24
    2bac:	str	r1, [sp, #32]
    2bb0:	blt	2c40 <compare_bytes+0x4c0>
    2bb4:	b	2bb8 <compare_bytes+0x438>
    2bb8:	movw	r0, #0
    2bbc:	movt	r0, #0
    2bc0:	ldr	r1, [r0]
    2bc4:	movw	r2, #0
    2bc8:	movt	r2, #0
    2bcc:	str	r0, [sp, #28]
    2bd0:	mov	r0, r2
    2bd4:	str	r2, [sp, #24]
    2bd8:	bl	0 <printf>
    2bdc:	ldr	r1, [fp, #-76]	; 0xffffffb4
    2be0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2be4:	str	r0, [sp, #20]
    2be8:	mov	r0, r1
    2bec:	mov	r1, r2
    2bf0:	bl	3978 <print_escaped>
    2bf4:	movw	r0, #0
    2bf8:	movt	r0, #0
    2bfc:	bl	0 <printf>
    2c00:	ldr	r1, [sp, #28]
    2c04:	ldr	r1, [r1, #4]
    2c08:	ldr	r2, [sp, #24]
    2c0c:	str	r0, [sp, #16]
    2c10:	mov	r0, r2
    2c14:	bl	0 <printf>
    2c18:	ldr	r1, [fp, #-80]	; 0xffffffb0
    2c1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2c20:	str	r0, [sp, #12]
    2c24:	mov	r0, r1
    2c28:	mov	r1, r2
    2c2c:	bl	3978 <print_escaped>
    2c30:	movw	r0, #0
    2c34:	movt	r0, #0
    2c38:	bl	0 <printf>
    2c3c:	str	r0, [sp, #8]
    2c40:	b	2c44 <compare_bytes+0x4c4>
    2c44:	b	2c48 <compare_bytes+0x4c8>
    2c48:	b	2c4c <compare_bytes+0x4cc>
    2c4c:	ldr	r0, [fp, #-76]	; 0xffffffb4
    2c50:	bl	0 <free>
    2c54:	ldr	r0, [fp, #-80]	; 0xffffffb0
    2c58:	bl	0 <free>
    2c5c:	movw	r0, #0
    2c60:	str	r0, [fp, #-4]
    2c64:	ldr	r0, [fp, #-4]
    2c68:	mov	sp, fp
    2c6c:	pop	{fp, pc}

00002c70 <compare_attributes>:
    2c70:	push	{fp, lr}
    2c74:	mov	fp, sp
    2c78:	sub	sp, sp, #32
    2c7c:	str	r0, [fp, #-8]
    2c80:	str	r1, [fp, #-12]
    2c84:	ldr	r0, [fp, #-8]
    2c88:	add	r1, sp, #16
    2c8c:	bl	0 <coda_cursor_has_attributes>
    2c90:	cmp	r0, #0
    2c94:	beq	2cb0 <compare_attributes+0x40>
    2c98:	ldr	r0, [fp, #-8]
    2c9c:	movw	r1, #1
    2ca0:	bl	1458 <print_error_with_cursor>
    2ca4:	mvn	r0, #0
    2ca8:	str	r0, [fp, #-4]
    2cac:	b	2d88 <compare_attributes+0x118>
    2cb0:	ldr	r0, [fp, #-12]
    2cb4:	add	r1, sp, #12
    2cb8:	bl	0 <coda_cursor_has_attributes>
    2cbc:	cmp	r0, #0
    2cc0:	beq	2cdc <compare_attributes+0x6c>
    2cc4:	ldr	r0, [fp, #-12]
    2cc8:	movw	r1, #2
    2ccc:	bl	1458 <print_error_with_cursor>
    2cd0:	mvn	r0, #0
    2cd4:	str	r0, [fp, #-4]
    2cd8:	b	2d88 <compare_attributes+0x118>
    2cdc:	ldr	r0, [sp, #16]
    2ce0:	cmp	r0, #0
    2ce4:	bne	2cf4 <compare_attributes+0x84>
    2ce8:	ldr	r0, [sp, #12]
    2cec:	cmp	r0, #0
    2cf0:	beq	2d80 <compare_attributes+0x110>
    2cf4:	ldr	r0, [fp, #-8]
    2cf8:	bl	0 <coda_cursor_goto_attributes>
    2cfc:	cmp	r0, #0
    2d00:	beq	2d1c <compare_attributes+0xac>
    2d04:	ldr	r0, [fp, #-8]
    2d08:	movw	r1, #1
    2d0c:	bl	1458 <print_error_with_cursor>
    2d10:	mvn	r0, #0
    2d14:	str	r0, [fp, #-4]
    2d18:	b	2d88 <compare_attributes+0x118>
    2d1c:	ldr	r0, [fp, #-12]
    2d20:	bl	0 <coda_cursor_goto_attributes>
    2d24:	cmp	r0, #0
    2d28:	beq	2d44 <compare_attributes+0xd4>
    2d2c:	ldr	r0, [fp, #-12]
    2d30:	movw	r1, #2
    2d34:	bl	1458 <print_error_with_cursor>
    2d38:	mvn	r0, #0
    2d3c:	str	r0, [fp, #-4]
    2d40:	b	2d88 <compare_attributes+0x118>
    2d44:	ldr	r0, [fp, #-8]
    2d48:	ldr	r1, [fp, #-12]
    2d4c:	bl	103c <compare_data>
    2d50:	cmp	r0, #0
    2d54:	beq	2d64 <compare_attributes+0xf4>
    2d58:	mvn	r0, #0
    2d5c:	str	r0, [fp, #-4]
    2d60:	b	2d88 <compare_attributes+0x118>
    2d64:	ldr	r0, [fp, #-8]
    2d68:	bl	0 <coda_cursor_goto_parent>
    2d6c:	ldr	lr, [fp, #-12]
    2d70:	str	r0, [sp, #8]
    2d74:	mov	r0, lr
    2d78:	bl	0 <coda_cursor_goto_parent>
    2d7c:	str	r0, [sp, #4]
    2d80:	movw	r0, #0
    2d84:	str	r0, [fp, #-4]
    2d88:	ldr	r0, [fp, #-4]
    2d8c:	mov	sp, fp
    2d90:	pop	{fp, pc}

00002d94 <compare_arrays_as_records>:
    2d94:	push	{r4, r5, r6, sl, fp, lr}
    2d98:	add	fp, sp, #16
    2d9c:	sub	sp, sp, #88	; 0x58
    2da0:	str	r0, [fp, #-24]	; 0xffffffe8
    2da4:	str	r1, [fp, #-28]	; 0xffffffe4
    2da8:	str	r2, [fp, #-32]	; 0xffffffe0
    2dac:	movw	r0, #0
    2db0:	str	r0, [fp, #-36]	; 0xffffffdc
    2db4:	str	r0, [fp, #-40]	; 0xffffffd8
    2db8:	str	r0, [fp, #-44]	; 0xffffffd4
    2dbc:	str	r0, [fp, #-48]	; 0xffffffd0
    2dc0:	str	r0, [sp, #52]	; 0x34
    2dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2dc8:	add	r1, sp, #48	; 0x30
    2dcc:	bl	0 <coda_cursor_get_num_elements>
    2dd0:	cmp	r0, #0
    2dd4:	beq	2df0 <compare_arrays_as_records+0x5c>
    2dd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2ddc:	movw	r1, #1
    2de0:	bl	1458 <print_error_with_cursor>
    2de4:	mvn	r0, #0
    2de8:	str	r0, [fp, #-20]	; 0xffffffec
    2dec:	b	31c8 <compare_arrays_as_records+0x434>
    2df0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2df4:	add	r1, sp, #44	; 0x2c
    2df8:	bl	0 <coda_cursor_get_num_elements>
    2dfc:	cmp	r0, #0
    2e00:	beq	2e1c <compare_arrays_as_records+0x88>
    2e04:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2e08:	movw	r1, #2
    2e0c:	bl	1458 <print_error_with_cursor>
    2e10:	mvn	r0, #0
    2e14:	str	r0, [fp, #-20]	; 0xffffffec
    2e18:	b	31c8 <compare_arrays_as_records+0x434>
    2e1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2e20:	sub	r1, fp, #36	; 0x24
    2e24:	bl	0 <coda_expression_from_string>
    2e28:	cmp	r0, #0
    2e2c:	beq	2e78 <compare_arrays_as_records+0xe4>
    2e30:	movw	r0, #0
    2e34:	movt	r0, #0
    2e38:	ldr	r0, [r0]
    2e3c:	str	r0, [sp, #32]
    2e40:	bl	0 <coda_get_errno>
    2e44:	ldr	r0, [r0]
    2e48:	bl	0 <coda_errno_to_string>
    2e4c:	ldr	lr, [sp, #32]
    2e50:	str	r0, [sp, #28]
    2e54:	mov	r0, lr
    2e58:	movw	r1, #0
    2e5c:	movt	r1, #0
    2e60:	ldr	r2, [sp, #28]
    2e64:	bl	0 <fprintf>
    2e68:	mvn	r1, #0
    2e6c:	str	r1, [fp, #-20]	; 0xffffffec
    2e70:	str	r0, [sp, #24]
    2e74:	b	31c8 <compare_arrays_as_records+0x434>
    2e78:	ldr	r0, [sp, #48]	; 0x30
    2e7c:	lsl	r0, r0, #2
    2e80:	bl	0 <malloc>
    2e84:	str	r0, [fp, #-48]	; 0xffffffd0
    2e88:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2e8c:	movw	lr, #0
    2e90:	cmp	r0, lr
    2e94:	bne	2ee0 <compare_arrays_as_records+0x14c>
    2e98:	ldr	r0, [sp, #48]	; 0x30
    2e9c:	lsl	r2, r0, #2
    2ea0:	mvn	r0, #0
    2ea4:	movw	r1, #0
    2ea8:	movt	r1, #0
    2eac:	movw	r3, #0
    2eb0:	movt	r3, #0
    2eb4:	movw	ip, #461	; 0x1cd
    2eb8:	str	ip, [sp]
    2ebc:	bl	0 <coda_set_error>
    2ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2ec4:	movw	r1, #1
    2ec8:	bl	1458 <print_error_with_cursor>
    2ecc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2ed0:	bl	0 <coda_expression_delete>
    2ed4:	mvn	r0, #0
    2ed8:	str	r0, [fp, #-20]	; 0xffffffec
    2edc:	b	31c8 <compare_arrays_as_records+0x434>
    2ee0:	movw	r0, #0
    2ee4:	str	r0, [sp, #40]	; 0x28
    2ee8:	ldr	r0, [sp, #40]	; 0x28
    2eec:	ldr	r1, [sp, #48]	; 0x30
    2ef0:	cmp	r0, r1
    2ef4:	bge	2f1c <compare_arrays_as_records+0x188>
    2ef8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2efc:	ldr	r1, [sp, #40]	; 0x28
    2f00:	add	r0, r0, r1, lsl #2
    2f04:	movw	r1, #0
    2f08:	str	r1, [r0]
    2f0c:	ldr	r0, [sp, #40]	; 0x28
    2f10:	add	r0, r0, #1
    2f14:	str	r0, [sp, #40]	; 0x28
    2f18:	b	2ee8 <compare_arrays_as_records+0x154>
    2f1c:	ldr	r0, [sp, #44]	; 0x2c
    2f20:	lsl	r0, r0, #2
    2f24:	bl	0 <malloc>
    2f28:	str	r0, [sp, #52]	; 0x34
    2f2c:	ldr	r0, [sp, #52]	; 0x34
    2f30:	movw	lr, #0
    2f34:	cmp	r0, lr
    2f38:	bne	2f8c <compare_arrays_as_records+0x1f8>
    2f3c:	ldr	r0, [sp, #44]	; 0x2c
    2f40:	lsl	r2, r0, #2
    2f44:	mvn	r0, #0
    2f48:	movw	r1, #0
    2f4c:	movt	r1, #0
    2f50:	movw	r3, #0
    2f54:	movt	r3, #0
    2f58:	movw	ip, #475	; 0x1db
    2f5c:	str	ip, [sp]
    2f60:	bl	0 <coda_set_error>
    2f64:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2f68:	movw	r1, #2
    2f6c:	bl	1458 <print_error_with_cursor>
    2f70:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2f74:	bl	0 <coda_expression_delete>
    2f78:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2f7c:	bl	0 <free>
    2f80:	mvn	r0, #0
    2f84:	str	r0, [fp, #-20]	; 0xffffffec
    2f88:	b	31c8 <compare_arrays_as_records+0x434>
    2f8c:	movw	r0, #0
    2f90:	str	r0, [sp, #40]	; 0x28
    2f94:	ldr	r0, [sp, #40]	; 0x28
    2f98:	ldr	r1, [sp, #44]	; 0x2c
    2f9c:	cmp	r0, r1
    2fa0:	bge	2fc8 <compare_arrays_as_records+0x234>
    2fa4:	ldr	r0, [sp, #52]	; 0x34
    2fa8:	ldr	r1, [sp, #40]	; 0x28
    2fac:	add	r0, r0, r1, lsl #2
    2fb0:	movw	r1, #0
    2fb4:	str	r1, [r0]
    2fb8:	ldr	r0, [sp, #40]	; 0x28
    2fbc:	add	r0, r0, #1
    2fc0:	str	r0, [sp, #40]	; 0x28
    2fc4:	b	2f94 <compare_arrays_as_records+0x200>
    2fc8:	movw	r0, #1
    2fcc:	bl	0 <coda_hashtable_new>
    2fd0:	str	r0, [fp, #-40]	; 0xffffffd8
    2fd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2fd8:	movw	lr, #0
    2fdc:	cmp	r0, lr
    2fe0:	bne	3030 <compare_arrays_as_records+0x29c>
    2fe4:	mvn	r0, #0
    2fe8:	movw	r1, #0
    2fec:	movt	r1, #0
    2ff0:	movw	r2, #0
    2ff4:	movt	r2, #0
    2ff8:	movw	r3, #489	; 0x1e9
    2ffc:	bl	0 <coda_set_error>
    3000:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3004:	movw	r1, #1
    3008:	bl	1458 <print_error_with_cursor>
    300c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3010:	bl	0 <coda_expression_delete>
    3014:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3018:	bl	0 <free>
    301c:	ldr	r0, [sp, #52]	; 0x34
    3020:	bl	0 <free>
    3024:	mvn	r0, #0
    3028:	str	r0, [fp, #-20]	; 0xffffffec
    302c:	b	31c8 <compare_arrays_as_records+0x434>
    3030:	movw	r0, #1
    3034:	bl	0 <coda_hashtable_new>
    3038:	str	r0, [fp, #-44]	; 0xffffffd4
    303c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3040:	movw	lr, #0
    3044:	cmp	r0, lr
    3048:	bne	30a0 <compare_arrays_as_records+0x30c>
    304c:	mvn	r0, #0
    3050:	movw	r1, #0
    3054:	movt	r1, #0
    3058:	movw	r2, #0
    305c:	movt	r2, #0
    3060:	movw	r3, #500	; 0x1f4
    3064:	bl	0 <coda_set_error>
    3068:	ldr	r0, [fp, #-28]	; 0xffffffe4
    306c:	movw	r1, #2
    3070:	bl	1458 <print_error_with_cursor>
    3074:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3078:	bl	0 <coda_expression_delete>
    307c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3080:	bl	0 <coda_hashtable_delete>
    3084:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3088:	bl	0 <free>
    308c:	ldr	r0, [sp, #52]	; 0x34
    3090:	bl	0 <free>
    3094:	mvn	r0, #0
    3098:	str	r0, [fp, #-20]	; 0xffffffec
    309c:	b	31c8 <compare_arrays_as_records+0x434>
    30a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    30a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    30a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    30ac:	ldr	r3, [sp, #48]	; 0x30
    30b0:	ldr	ip, [sp, #44]	; 0x2c
    30b4:	ldr	lr, [fp, #-48]	; 0xffffffd0
    30b8:	ldr	r4, [sp, #52]	; 0x34
    30bc:	ldr	r5, [fp, #-40]	; 0xffffffd8
    30c0:	ldr	r6, [fp, #-44]	; 0xffffffd4
    30c4:	str	ip, [sp]
    30c8:	str	lr, [sp, #4]
    30cc:	str	r4, [sp, #8]
    30d0:	str	r5, [sp, #12]
    30d4:	str	r6, [sp, #16]
    30d8:	bl	31d4 <compare_arrays_as_records_sub>
    30dc:	str	r0, [sp, #36]	; 0x24
    30e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    30e4:	bl	0 <coda_expression_delete>
    30e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    30ec:	bl	0 <coda_hashtable_delete>
    30f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    30f4:	bl	0 <coda_hashtable_delete>
    30f8:	movw	r0, #0
    30fc:	str	r0, [sp, #40]	; 0x28
    3100:	ldr	r0, [sp, #40]	; 0x28
    3104:	ldr	r1, [sp, #48]	; 0x30
    3108:	cmp	r0, r1
    310c:	bge	3154 <compare_arrays_as_records+0x3c0>
    3110:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3114:	ldr	r1, [sp, #40]	; 0x28
    3118:	add	r0, r0, r1, lsl #2
    311c:	ldr	r0, [r0]
    3120:	movw	r1, #0
    3124:	cmp	r0, r1
    3128:	beq	3140 <compare_arrays_as_records+0x3ac>
    312c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3130:	ldr	r1, [sp, #40]	; 0x28
    3134:	add	r0, r0, r1, lsl #2
    3138:	ldr	r0, [r0]
    313c:	bl	0 <coda_free>
    3140:	b	3144 <compare_arrays_as_records+0x3b0>
    3144:	ldr	r0, [sp, #40]	; 0x28
    3148:	add	r0, r0, #1
    314c:	str	r0, [sp, #40]	; 0x28
    3150:	b	3100 <compare_arrays_as_records+0x36c>
    3154:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3158:	bl	0 <free>
    315c:	movw	r0, #0
    3160:	str	r0, [sp, #40]	; 0x28
    3164:	ldr	r0, [sp, #40]	; 0x28
    3168:	ldr	r1, [sp, #44]	; 0x2c
    316c:	cmp	r0, r1
    3170:	bge	31b8 <compare_arrays_as_records+0x424>
    3174:	ldr	r0, [sp, #52]	; 0x34
    3178:	ldr	r1, [sp, #40]	; 0x28
    317c:	add	r0, r0, r1, lsl #2
    3180:	ldr	r0, [r0]
    3184:	movw	r1, #0
    3188:	cmp	r0, r1
    318c:	beq	31a4 <compare_arrays_as_records+0x410>
    3190:	ldr	r0, [sp, #52]	; 0x34
    3194:	ldr	r1, [sp, #40]	; 0x28
    3198:	add	r0, r0, r1, lsl #2
    319c:	ldr	r0, [r0]
    31a0:	bl	0 <coda_free>
    31a4:	b	31a8 <compare_arrays_as_records+0x414>
    31a8:	ldr	r0, [sp, #40]	; 0x28
    31ac:	add	r0, r0, #1
    31b0:	str	r0, [sp, #40]	; 0x28
    31b4:	b	3164 <compare_arrays_as_records+0x3d0>
    31b8:	ldr	r0, [sp, #52]	; 0x34
    31bc:	bl	0 <free>
    31c0:	ldr	r0, [sp, #36]	; 0x24
    31c4:	str	r0, [fp, #-20]	; 0xffffffec
    31c8:	ldr	r0, [fp, #-20]	; 0xffffffec
    31cc:	sub	sp, fp, #16
    31d0:	pop	{r4, r5, r6, sl, fp, pc}

000031d4 <compare_arrays_as_records_sub>:
    31d4:	push	{r4, r5, r6, sl, fp, lr}
    31d8:	add	fp, sp, #16
    31dc:	sub	sp, sp, #192	; 0xc0
    31e0:	ldr	ip, [fp, #24]
    31e4:	ldr	lr, [fp, #20]
    31e8:	ldr	r4, [fp, #16]
    31ec:	ldr	r5, [fp, #12]
    31f0:	ldr	r6, [fp, #8]
    31f4:	str	r0, [fp, #-24]	; 0xffffffe8
    31f8:	str	r1, [fp, #-28]	; 0xffffffe4
    31fc:	str	r2, [fp, #-32]	; 0xffffffe0
    3200:	str	r3, [fp, #-36]	; 0xffffffdc
    3204:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3208:	cmp	r0, #0
    320c:	str	r6, [fp, #-60]	; 0xffffffc4
    3210:	str	lr, [fp, #-64]	; 0xffffffc0
    3214:	str	r4, [fp, #-68]	; 0xffffffbc
    3218:	str	r5, [fp, #-72]	; 0xffffffb8
    321c:	str	ip, [fp, #-76]	; 0xffffffb4
    3220:	ble	33e0 <compare_arrays_as_records_sub+0x20c>
    3224:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3228:	bl	0 <coda_cursor_goto_first_array_element>
    322c:	cmp	r0, #0
    3230:	beq	324c <compare_arrays_as_records_sub+0x78>
    3234:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3238:	movw	r1, #1
    323c:	bl	1458 <print_error_with_cursor>
    3240:	mvn	r0, #0
    3244:	str	r0, [fp, #-20]	; 0xffffffec
    3248:	b	396c <compare_arrays_as_records_sub+0x798>
    324c:	movw	r0, #0
    3250:	str	r0, [fp, #-44]	; 0xffffffd4
    3254:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3258:	ldr	r1, [fp, #-36]	; 0xffffffdc
    325c:	cmp	r0, r1
    3260:	bge	33d4 <compare_arrays_as_records_sub+0x200>
    3264:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3268:	ldr	r1, [fp, #-24]	; 0xffffffe8
    326c:	ldr	r2, [fp, #12]
    3270:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3274:	add	r2, r2, r3, lsl #2
    3278:	sub	r3, fp, #52	; 0x34
    327c:	bl	0 <coda_expression_eval_string>
    3280:	cmp	r0, #0
    3284:	beq	32e4 <compare_arrays_as_records_sub+0x110>
    3288:	movw	r0, #0
    328c:	movt	r0, #0
    3290:	ldr	r0, [r0]
    3294:	movw	r1, #0
    3298:	movt	r1, #0
    329c:	ldr	r2, [r1]
    32a0:	str	r0, [fp, #-80]	; 0xffffffb0
    32a4:	str	r2, [fp, #-84]	; 0xffffffac
    32a8:	bl	0 <coda_get_errno>
    32ac:	ldr	r0, [r0]
    32b0:	bl	0 <coda_errno_to_string>
    32b4:	ldr	r1, [fp, #-80]	; 0xffffffb0
    32b8:	str	r0, [fp, #-88]	; 0xffffffa8
    32bc:	mov	r0, r1
    32c0:	movw	r1, #0
    32c4:	movt	r1, #0
    32c8:	ldr	r2, [fp, #-84]	; 0xffffffac
    32cc:	ldr	r3, [fp, #-88]	; 0xffffffa8
    32d0:	bl	0 <fprintf>
    32d4:	mvn	r1, #0
    32d8:	str	r1, [fp, #-20]	; 0xffffffec
    32dc:	str	r0, [fp, #-92]	; 0xffffffa4
    32e0:	b	396c <compare_arrays_as_records_sub+0x798>
    32e4:	ldr	r0, [fp, #20]
    32e8:	ldr	r1, [fp, #12]
    32ec:	ldr	r2, [fp, #-44]	; 0xffffffd4
    32f0:	add	r1, r1, r2, lsl #2
    32f4:	ldr	r1, [r1]
    32f8:	bl	0 <coda_hashtable_add_name>
    32fc:	cmp	r0, #0
    3300:	beq	3380 <compare_arrays_as_records_sub+0x1ac>
    3304:	ldr	r0, [fp, #12]
    3308:	ldr	r1, [fp, #-44]	; 0xffffffd4
    330c:	add	r0, r0, r1, lsl #2
    3310:	ldr	r2, [r0]
    3314:	mvn	r0, #99	; 0x63
    3318:	movw	r1, #0
    331c:	movt	r1, #0
    3320:	bl	0 <coda_set_error>
    3324:	movw	r0, #0
    3328:	movt	r0, #0
    332c:	ldr	r0, [r0]
    3330:	movw	r1, #0
    3334:	movt	r1, #0
    3338:	ldr	r2, [r1]
    333c:	str	r0, [fp, #-96]	; 0xffffffa0
    3340:	str	r2, [fp, #-100]	; 0xffffff9c
    3344:	bl	0 <coda_get_errno>
    3348:	ldr	r0, [r0]
    334c:	bl	0 <coda_errno_to_string>
    3350:	ldr	r1, [fp, #-96]	; 0xffffffa0
    3354:	str	r0, [sp, #104]	; 0x68
    3358:	mov	r0, r1
    335c:	movw	r1, #0
    3360:	movt	r1, #0
    3364:	ldr	r2, [fp, #-100]	; 0xffffff9c
    3368:	ldr	r3, [sp, #104]	; 0x68
    336c:	bl	0 <fprintf>
    3370:	mvn	r1, #0
    3374:	str	r1, [fp, #-20]	; 0xffffffec
    3378:	str	r0, [sp, #100]	; 0x64
    337c:	b	396c <compare_arrays_as_records_sub+0x798>
    3380:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3384:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3388:	sub	r1, r1, #1
    338c:	cmp	r0, r1
    3390:	bge	33c0 <compare_arrays_as_records_sub+0x1ec>
    3394:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3398:	bl	0 <coda_cursor_goto_next_array_element>
    339c:	cmp	r0, #0
    33a0:	beq	33bc <compare_arrays_as_records_sub+0x1e8>
    33a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    33a8:	movw	r1, #1
    33ac:	bl	1458 <print_error_with_cursor>
    33b0:	mvn	r0, #0
    33b4:	str	r0, [fp, #-20]	; 0xffffffec
    33b8:	b	396c <compare_arrays_as_records_sub+0x798>
    33bc:	b	33c0 <compare_arrays_as_records_sub+0x1ec>
    33c0:	b	33c4 <compare_arrays_as_records_sub+0x1f0>
    33c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    33c8:	add	r0, r0, #1
    33cc:	str	r0, [fp, #-44]	; 0xffffffd4
    33d0:	b	3254 <compare_arrays_as_records_sub+0x80>
    33d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    33d8:	bl	0 <coda_cursor_goto_parent>
    33dc:	str	r0, [sp, #96]	; 0x60
    33e0:	ldr	r0, [fp, #8]
    33e4:	cmp	r0, #0
    33e8:	ble	35a8 <compare_arrays_as_records_sub+0x3d4>
    33ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    33f0:	bl	0 <coda_cursor_goto_first_array_element>
    33f4:	cmp	r0, #0
    33f8:	beq	3414 <compare_arrays_as_records_sub+0x240>
    33fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3400:	movw	r1, #2
    3404:	bl	1458 <print_error_with_cursor>
    3408:	mvn	r0, #0
    340c:	str	r0, [fp, #-20]	; 0xffffffec
    3410:	b	396c <compare_arrays_as_records_sub+0x798>
    3414:	movw	r0, #0
    3418:	str	r0, [fp, #-48]	; 0xffffffd0
    341c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3420:	ldr	r1, [fp, #8]
    3424:	cmp	r0, r1
    3428:	bge	359c <compare_arrays_as_records_sub+0x3c8>
    342c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3430:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3434:	ldr	r2, [fp, #16]
    3438:	ldr	r3, [fp, #-48]	; 0xffffffd0
    343c:	add	r2, r2, r3, lsl #2
    3440:	sub	r3, fp, #56	; 0x38
    3444:	bl	0 <coda_expression_eval_string>
    3448:	cmp	r0, #0
    344c:	beq	34ac <compare_arrays_as_records_sub+0x2d8>
    3450:	movw	r0, #0
    3454:	movt	r0, #0
    3458:	ldr	r0, [r0]
    345c:	movw	r1, #0
    3460:	movt	r1, #0
    3464:	ldr	r2, [r1, #4]
    3468:	str	r0, [sp, #92]	; 0x5c
    346c:	str	r2, [sp, #88]	; 0x58
    3470:	bl	0 <coda_get_errno>
    3474:	ldr	r0, [r0]
    3478:	bl	0 <coda_errno_to_string>
    347c:	ldr	r1, [sp, #92]	; 0x5c
    3480:	str	r0, [sp, #84]	; 0x54
    3484:	mov	r0, r1
    3488:	movw	r1, #0
    348c:	movt	r1, #0
    3490:	ldr	r2, [sp, #88]	; 0x58
    3494:	ldr	r3, [sp, #84]	; 0x54
    3498:	bl	0 <fprintf>
    349c:	mvn	r1, #0
    34a0:	str	r1, [fp, #-20]	; 0xffffffec
    34a4:	str	r0, [sp, #80]	; 0x50
    34a8:	b	396c <compare_arrays_as_records_sub+0x798>
    34ac:	ldr	r0, [fp, #24]
    34b0:	ldr	r1, [fp, #16]
    34b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    34b8:	add	r1, r1, r2, lsl #2
    34bc:	ldr	r1, [r1]
    34c0:	bl	0 <coda_hashtable_add_name>
    34c4:	cmp	r0, #0
    34c8:	beq	3548 <compare_arrays_as_records_sub+0x374>
    34cc:	ldr	r0, [fp, #16]
    34d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    34d4:	add	r0, r0, r1, lsl #2
    34d8:	ldr	r2, [r0]
    34dc:	mvn	r0, #99	; 0x63
    34e0:	movw	r1, #0
    34e4:	movt	r1, #0
    34e8:	bl	0 <coda_set_error>
    34ec:	movw	r0, #0
    34f0:	movt	r0, #0
    34f4:	ldr	r0, [r0]
    34f8:	movw	r1, #0
    34fc:	movt	r1, #0
    3500:	ldr	r2, [r1, #4]
    3504:	str	r0, [sp, #76]	; 0x4c
    3508:	str	r2, [sp, #72]	; 0x48
    350c:	bl	0 <coda_get_errno>
    3510:	ldr	r0, [r0]
    3514:	bl	0 <coda_errno_to_string>
    3518:	ldr	r1, [sp, #76]	; 0x4c
    351c:	str	r0, [sp, #68]	; 0x44
    3520:	mov	r0, r1
    3524:	movw	r1, #0
    3528:	movt	r1, #0
    352c:	ldr	r2, [sp, #72]	; 0x48
    3530:	ldr	r3, [sp, #68]	; 0x44
    3534:	bl	0 <fprintf>
    3538:	mvn	r1, #0
    353c:	str	r1, [fp, #-20]	; 0xffffffec
    3540:	str	r0, [sp, #64]	; 0x40
    3544:	b	396c <compare_arrays_as_records_sub+0x798>
    3548:	ldr	r0, [fp, #-48]	; 0xffffffd0
    354c:	ldr	r1, [fp, #8]
    3550:	sub	r1, r1, #1
    3554:	cmp	r0, r1
    3558:	bge	3588 <compare_arrays_as_records_sub+0x3b4>
    355c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3560:	bl	0 <coda_cursor_goto_next_array_element>
    3564:	cmp	r0, #0
    3568:	beq	3584 <compare_arrays_as_records_sub+0x3b0>
    356c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3570:	movw	r1, #2
    3574:	bl	1458 <print_error_with_cursor>
    3578:	mvn	r0, #0
    357c:	str	r0, [fp, #-20]	; 0xffffffec
    3580:	b	396c <compare_arrays_as_records_sub+0x798>
    3584:	b	3588 <compare_arrays_as_records_sub+0x3b4>
    3588:	b	358c <compare_arrays_as_records_sub+0x3b8>
    358c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3590:	add	r0, r0, #1
    3594:	str	r0, [fp, #-48]	; 0xffffffd0
    3598:	b	341c <compare_arrays_as_records_sub+0x248>
    359c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    35a0:	bl	0 <coda_cursor_goto_parent>
    35a4:	str	r0, [sp, #60]	; 0x3c
    35a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    35ac:	ldr	r1, [fp, #8]
    35b0:	cmp	r0, r1
    35b4:	beq	3650 <compare_arrays_as_records_sub+0x47c>
    35b8:	movw	r0, #0
    35bc:	movt	r0, #0
    35c0:	bl	0 <printf>
    35c4:	ldr	lr, [fp, #-24]	; 0xffffffe8
    35c8:	str	r0, [sp, #56]	; 0x38
    35cc:	mov	r0, lr
    35d0:	movw	r1, #0
    35d4:	movt	r1, #0
    35d8:	bl	0 <coda_cursor_print_path>
    35dc:	movw	r1, #0
    35e0:	movt	r1, #0
    35e4:	str	r0, [sp, #52]	; 0x34
    35e8:	mov	r0, r1
    35ec:	bl	0 <printf>
    35f0:	movw	r1, #0
    35f4:	movt	r1, #0
    35f8:	ldr	r1, [r1]
    35fc:	cmp	r1, #0
    3600:	str	r0, [sp, #48]	; 0x30
    3604:	beq	364c <compare_arrays_as_records_sub+0x478>
    3608:	movw	r0, #0
    360c:	movt	r0, #0
    3610:	ldr	r1, [r0]
    3614:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3618:	movw	r0, #0
    361c:	movt	r0, #0
    3620:	bl	0 <printf>
    3624:	movw	r1, #0
    3628:	movt	r1, #0
    362c:	ldr	r1, [r1, #4]
    3630:	ldr	r2, [fp, #8]
    3634:	movw	lr, #0
    3638:	movt	lr, #0
    363c:	str	r0, [sp, #44]	; 0x2c
    3640:	mov	r0, lr
    3644:	bl	0 <printf>
    3648:	str	r0, [sp, #40]	; 0x28
    364c:	b	3650 <compare_arrays_as_records_sub+0x47c>
    3650:	movw	r0, #1
    3654:	str	r0, [fp, #-40]	; 0xffffffd8
    3658:	ldr	r0, [fp, #-36]	; 0xffffffdc
    365c:	cmp	r0, #0
    3660:	ble	3748 <compare_arrays_as_records_sub+0x574>
    3664:	movw	r0, #0
    3668:	str	r0, [fp, #-44]	; 0xffffffd4
    366c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3670:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3674:	cmp	r0, r1
    3678:	bge	3744 <compare_arrays_as_records_sub+0x570>
    367c:	ldr	r0, [fp, #24]
    3680:	ldr	r1, [fp, #12]
    3684:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3688:	add	r1, r1, r2, lsl #2
    368c:	ldr	r1, [r1]
    3690:	bl	0 <coda_hashtable_get_index_from_name>
    3694:	cmp	r0, #0
    3698:	bge	3730 <compare_arrays_as_records_sub+0x55c>
    369c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    36a0:	cmp	r0, #0
    36a4:	beq	36ec <compare_arrays_as_records_sub+0x518>
    36a8:	movw	r0, #0
    36ac:	movt	r0, #0
    36b0:	bl	0 <printf>
    36b4:	ldr	lr, [fp, #-24]	; 0xffffffe8
    36b8:	str	r0, [sp, #36]	; 0x24
    36bc:	mov	r0, lr
    36c0:	movw	r1, #0
    36c4:	movt	r1, #0
    36c8:	bl	0 <coda_cursor_print_path>
    36cc:	movw	r1, #0
    36d0:	movt	r1, #0
    36d4:	str	r0, [sp, #32]
    36d8:	mov	r0, r1
    36dc:	bl	0 <printf>
    36e0:	movw	r1, #0
    36e4:	str	r1, [fp, #-40]	; 0xffffffd8
    36e8:	str	r0, [sp, #28]
    36ec:	movw	r0, #0
    36f0:	movt	r0, #0
    36f4:	ldr	r0, [r0]
    36f8:	cmp	r0, #0
    36fc:	beq	372c <compare_arrays_as_records_sub+0x558>
    3700:	movw	r0, #0
    3704:	movt	r0, #0
    3708:	ldr	r1, [r0]
    370c:	ldr	r0, [fp, #12]
    3710:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3714:	add	r0, r0, r2, lsl #2
    3718:	ldr	r2, [r0]
    371c:	movw	r0, #0
    3720:	movt	r0, #0
    3724:	bl	0 <printf>
    3728:	str	r0, [sp, #24]
    372c:	b	3730 <compare_arrays_as_records_sub+0x55c>
    3730:	b	3734 <compare_arrays_as_records_sub+0x560>
    3734:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3738:	add	r0, r0, #1
    373c:	str	r0, [fp, #-44]	; 0xffffffd4
    3740:	b	366c <compare_arrays_as_records_sub+0x498>
    3744:	b	3748 <compare_arrays_as_records_sub+0x574>
    3748:	ldr	r0, [fp, #8]
    374c:	cmp	r0, #0
    3750:	ble	3838 <compare_arrays_as_records_sub+0x664>
    3754:	movw	r0, #0
    3758:	str	r0, [fp, #-48]	; 0xffffffd0
    375c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3760:	ldr	r1, [fp, #8]
    3764:	cmp	r0, r1
    3768:	bge	3834 <compare_arrays_as_records_sub+0x660>
    376c:	ldr	r0, [fp, #20]
    3770:	ldr	r1, [fp, #16]
    3774:	ldr	r2, [fp, #-48]	; 0xffffffd0
    3778:	add	r1, r1, r2, lsl #2
    377c:	ldr	r1, [r1]
    3780:	bl	0 <coda_hashtable_get_index_from_name>
    3784:	cmp	r0, #0
    3788:	bge	3820 <compare_arrays_as_records_sub+0x64c>
    378c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3790:	cmp	r0, #0
    3794:	beq	37dc <compare_arrays_as_records_sub+0x608>
    3798:	movw	r0, #0
    379c:	movt	r0, #0
    37a0:	bl	0 <printf>
    37a4:	ldr	lr, [fp, #-24]	; 0xffffffe8
    37a8:	str	r0, [sp, #20]
    37ac:	mov	r0, lr
    37b0:	movw	r1, #0
    37b4:	movt	r1, #0
    37b8:	bl	0 <coda_cursor_print_path>
    37bc:	movw	r1, #0
    37c0:	movt	r1, #0
    37c4:	str	r0, [sp, #16]
    37c8:	mov	r0, r1
    37cc:	bl	0 <printf>
    37d0:	movw	r1, #0
    37d4:	str	r1, [fp, #-40]	; 0xffffffd8
    37d8:	str	r0, [sp, #12]
    37dc:	movw	r0, #0
    37e0:	movt	r0, #0
    37e4:	ldr	r0, [r0]
    37e8:	cmp	r0, #0
    37ec:	beq	381c <compare_arrays_as_records_sub+0x648>
    37f0:	movw	r0, #0
    37f4:	movt	r0, #0
    37f8:	ldr	r1, [r0, #4]
    37fc:	ldr	r0, [fp, #16]
    3800:	ldr	r2, [fp, #-48]	; 0xffffffd0
    3804:	add	r0, r0, r2, lsl #2
    3808:	ldr	r2, [r0]
    380c:	movw	r0, #0
    3810:	movt	r0, #0
    3814:	bl	0 <printf>
    3818:	str	r0, [sp, #8]
    381c:	b	3820 <compare_arrays_as_records_sub+0x64c>
    3820:	b	3824 <compare_arrays_as_records_sub+0x650>
    3824:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3828:	add	r0, r0, #1
    382c:	str	r0, [fp, #-48]	; 0xffffffd0
    3830:	b	375c <compare_arrays_as_records_sub+0x588>
    3834:	b	3838 <compare_arrays_as_records_sub+0x664>
    3838:	ldr	r0, [fp, #-36]	; 0xffffffdc
    383c:	cmp	r0, #0
    3840:	ble	3964 <compare_arrays_as_records_sub+0x790>
    3844:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3848:	bl	0 <coda_cursor_goto_first_array_element>
    384c:	cmp	r0, #0
    3850:	beq	386c <compare_arrays_as_records_sub+0x698>
    3854:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3858:	movw	r1, #1
    385c:	bl	1458 <print_error_with_cursor>
    3860:	mvn	r0, #0
    3864:	str	r0, [fp, #-20]	; 0xffffffec
    3868:	b	396c <compare_arrays_as_records_sub+0x798>
    386c:	movw	r0, #0
    3870:	str	r0, [fp, #-44]	; 0xffffffd4
    3874:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3878:	ldr	r1, [fp, #-36]	; 0xffffffdc
    387c:	cmp	r0, r1
    3880:	bge	3958 <compare_arrays_as_records_sub+0x784>
    3884:	ldr	r0, [fp, #24]
    3888:	ldr	r1, [fp, #12]
    388c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3890:	add	r1, r1, r2, lsl #2
    3894:	ldr	r1, [r1]
    3898:	bl	0 <coda_hashtable_get_index_from_name>
    389c:	str	r0, [fp, #-48]	; 0xffffffd0
    38a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    38a4:	cmp	r0, #0
    38a8:	blt	3904 <compare_arrays_as_records_sub+0x730>
    38ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    38b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    38b4:	bl	0 <coda_cursor_goto_array_element_by_index>
    38b8:	cmp	r0, #0
    38bc:	beq	38d8 <compare_arrays_as_records_sub+0x704>
    38c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    38c4:	movw	r1, #2
    38c8:	bl	1458 <print_error_with_cursor>
    38cc:	mvn	r0, #0
    38d0:	str	r0, [fp, #-20]	; 0xffffffec
    38d4:	b	396c <compare_arrays_as_records_sub+0x798>
    38d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    38dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    38e0:	bl	103c <compare_data>
    38e4:	cmp	r0, #0
    38e8:	beq	38f8 <compare_arrays_as_records_sub+0x724>
    38ec:	mvn	r0, #0
    38f0:	str	r0, [fp, #-20]	; 0xffffffec
    38f4:	b	396c <compare_arrays_as_records_sub+0x798>
    38f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    38fc:	bl	0 <coda_cursor_goto_parent>
    3900:	str	r0, [sp, #4]
    3904:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3908:	ldr	r1, [fp, #-36]	; 0xffffffdc
    390c:	sub	r1, r1, #1
    3910:	cmp	r0, r1
    3914:	bge	3944 <compare_arrays_as_records_sub+0x770>
    3918:	ldr	r0, [fp, #-24]	; 0xffffffe8
    391c:	bl	0 <coda_cursor_goto_next_array_element>
    3920:	cmp	r0, #0
    3924:	beq	3940 <compare_arrays_as_records_sub+0x76c>
    3928:	ldr	r0, [fp, #-24]	; 0xffffffe8
    392c:	movw	r1, #1
    3930:	bl	1458 <print_error_with_cursor>
    3934:	mvn	r0, #0
    3938:	str	r0, [fp, #-20]	; 0xffffffec
    393c:	b	396c <compare_arrays_as_records_sub+0x798>
    3940:	b	3944 <compare_arrays_as_records_sub+0x770>
    3944:	b	3948 <compare_arrays_as_records_sub+0x774>
    3948:	ldr	r0, [fp, #-44]	; 0xffffffd4
    394c:	add	r0, r0, #1
    3950:	str	r0, [fp, #-44]	; 0xffffffd4
    3954:	b	3874 <compare_arrays_as_records_sub+0x6a0>
    3958:	ldr	r0, [fp, #-24]	; 0xffffffe8
    395c:	bl	0 <coda_cursor_goto_parent>
    3960:	str	r0, [sp]
    3964:	movw	r0, #0
    3968:	str	r0, [fp, #-20]	; 0xffffffec
    396c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3970:	sub	sp, fp, #16
    3974:	pop	{r4, r5, r6, sl, fp, pc}

00003978 <print_escaped>:
    3978:	push	{fp, lr}
    397c:	mov	fp, sp
    3980:	sub	sp, sp, #64	; 0x40
    3984:	str	r0, [fp, #-4]
    3988:	str	r1, [fp, #-8]
    398c:	movw	r0, #0
    3990:	str	r0, [fp, #-12]
    3994:	ldr	r0, [fp, #-12]
    3998:	ldr	r1, [fp, #-8]
    399c:	cmp	r0, r1
    39a0:	bge	3b38 <print_escaped+0x1c0>
    39a4:	ldr	r0, [fp, #-4]
    39a8:	ldr	r1, [fp, #-12]
    39ac:	ldrb	r0, [r0, r1]
    39b0:	strb	r0, [fp, #-13]
    39b4:	ldrb	r0, [fp, #-13]
    39b8:	mov	r1, r0
    39bc:	cmp	r0, #7
    39c0:	str	r1, [fp, #-20]	; 0xffffffec
    39c4:	beq	3a3c <print_escaped+0xc4>
    39c8:	b	39cc <print_escaped+0x54>
    39cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    39d0:	cmp	r0, #8
    39d4:	beq	3a50 <print_escaped+0xd8>
    39d8:	b	39dc <print_escaped+0x64>
    39dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    39e0:	cmp	r0, #9
    39e4:	beq	3a64 <print_escaped+0xec>
    39e8:	b	39ec <print_escaped+0x74>
    39ec:	ldr	r0, [fp, #-20]	; 0xffffffec
    39f0:	cmp	r0, #10
    39f4:	beq	3a78 <print_escaped+0x100>
    39f8:	b	39fc <print_escaped+0x84>
    39fc:	ldr	r0, [fp, #-20]	; 0xffffffec
    3a00:	cmp	r0, #11
    3a04:	beq	3a8c <print_escaped+0x114>
    3a08:	b	3a0c <print_escaped+0x94>
    3a0c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3a10:	cmp	r0, #12
    3a14:	beq	3aa0 <print_escaped+0x128>
    3a18:	b	3a1c <print_escaped+0xa4>
    3a1c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3a20:	cmp	r0, #13
    3a24:	beq	3ab4 <print_escaped+0x13c>
    3a28:	b	3a2c <print_escaped+0xb4>
    3a2c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3a30:	cmp	r0, #92	; 0x5c
    3a34:	beq	3ac8 <print_escaped+0x150>
    3a38:	b	3adc <print_escaped+0x164>
    3a3c:	movw	r0, #0
    3a40:	movt	r0, #0
    3a44:	bl	0 <printf>
    3a48:	str	r0, [fp, #-24]	; 0xffffffe8
    3a4c:	b	3b24 <print_escaped+0x1ac>
    3a50:	movw	r0, #0
    3a54:	movt	r0, #0
    3a58:	bl	0 <printf>
    3a5c:	str	r0, [fp, #-28]	; 0xffffffe4
    3a60:	b	3b24 <print_escaped+0x1ac>
    3a64:	movw	r0, #0
    3a68:	movt	r0, #0
    3a6c:	bl	0 <printf>
    3a70:	str	r0, [sp, #32]
    3a74:	b	3b24 <print_escaped+0x1ac>
    3a78:	movw	r0, #0
    3a7c:	movt	r0, #0
    3a80:	bl	0 <printf>
    3a84:	str	r0, [sp, #28]
    3a88:	b	3b24 <print_escaped+0x1ac>
    3a8c:	movw	r0, #0
    3a90:	movt	r0, #0
    3a94:	bl	0 <printf>
    3a98:	str	r0, [sp, #24]
    3a9c:	b	3b24 <print_escaped+0x1ac>
    3aa0:	movw	r0, #0
    3aa4:	movt	r0, #0
    3aa8:	bl	0 <printf>
    3aac:	str	r0, [sp, #20]
    3ab0:	b	3b24 <print_escaped+0x1ac>
    3ab4:	movw	r0, #0
    3ab8:	movt	r0, #0
    3abc:	bl	0 <printf>
    3ac0:	str	r0, [sp, #16]
    3ac4:	b	3b24 <print_escaped+0x1ac>
    3ac8:	movw	r0, #0
    3acc:	movt	r0, #0
    3ad0:	bl	0 <printf>
    3ad4:	str	r0, [sp, #12]
    3ad8:	b	3b24 <print_escaped+0x1ac>
    3adc:	ldrb	r0, [fp, #-13]
    3ae0:	cmp	r0, #32
    3ae4:	blt	3b0c <print_escaped+0x194>
    3ae8:	ldrb	r0, [fp, #-13]
    3aec:	cmp	r0, #126	; 0x7e
    3af0:	bgt	3b0c <print_escaped+0x194>
    3af4:	ldrb	r1, [fp, #-13]
    3af8:	movw	r0, #0
    3afc:	movt	r0, #0
    3b00:	bl	0 <printf>
    3b04:	str	r0, [sp, #8]
    3b08:	b	3b20 <print_escaped+0x1a8>
    3b0c:	ldrb	r1, [fp, #-13]
    3b10:	movw	r0, #0
    3b14:	movt	r0, #0
    3b18:	bl	0 <printf>
    3b1c:	str	r0, [sp, #4]
    3b20:	b	3b24 <print_escaped+0x1ac>
    3b24:	b	3b28 <print_escaped+0x1b0>
    3b28:	ldr	r0, [fp, #-12]
    3b2c:	add	r0, r0, #1
    3b30:	str	r0, [fp, #-12]
    3b34:	b	3994 <print_escaped+0x1c>
    3b38:	mov	sp, fp
    3b3c:	pop	{fp, pc}
