
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-netcdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <read_bytes>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #96	; 0x60
       c:	str	r0, [fp, #-80]	; 0xffffffb0
      10:	strd	r2, [fp, #-92]	; 0xffffffa4
      14:	ldr	r3, [fp, #-80]	; 0xffffffb0
      18:	ldr	r3, [r3, #48]	; 0x30
      1c:	cmp	r3, #0
      20:	beq	fc <read_bytes+0xfc>
      24:	ldrd	r0, [fp, #-92]	; 0xffffffa4
      28:	ldrd	r2, [fp, #4]
      2c:	adds	r2, r2, r0
      30:	adc	r3, r3, r1
      34:	ldr	r1, [fp, #-80]	; 0xffffffb0
      38:	ldrd	r0, [r1, #40]	; 0x28
      3c:	cmp	r3, r1
      40:	cmpeq	r2, r0
      44:	bls	d8 <read_bytes+0xd8>
      48:	ldr	r3, [fp, #-80]	; 0xffffffb0
      4c:	ldr	r3, [r3, #16]
      50:	cmp	r3, #0
      54:	beq	68 <read_bytes+0x68>
      58:	ldr	r3, [fp, #-80]	; 0xffffffb0
      5c:	ldr	r3, [r3, #16]
      60:	cmp	r3, #1
      64:	bne	7c <read_bytes+0x7c>
      68:	ldr	r1, [pc, #348]	; 1cc <read_bytes+0x1cc>
      6c:	mvn	r0, #300	; 0x12c
      70:	bl	0 <coda_set_error>
      74:	mvn	r3, #0
      78:	b	1c0 <read_bytes+0x1c0>
      7c:	sub	r3, fp, #28
      80:	mov	r2, r3
      84:	ldrd	r0, [fp, #4]
      88:	bl	0 <coda_str64>
      8c:	sub	r3, fp, #52	; 0x34
      90:	mov	r2, r3
      94:	ldrd	r0, [fp, #-92]	; 0xffffffa4
      98:	bl	0 <coda_str64>
      9c:	ldr	r3, [fp, #-80]	; 0xffffffb0
      a0:	ldrd	r0, [r3, #40]	; 0x28
      a4:	sub	r3, fp, #76	; 0x4c
      a8:	mov	r2, r3
      ac:	bl	0 <coda_str64>
      b0:	sub	r1, fp, #52	; 0x34
      b4:	sub	r2, fp, #28
      b8:	sub	r3, fp, #76	; 0x4c
      bc:	str	r3, [sp]
      c0:	mov	r3, r1
      c4:	ldr	r1, [pc, #260]	; 1d0 <read_bytes+0x1d0>
      c8:	mvn	r0, #300	; 0x12c
      cc:	bl	0 <coda_set_error>
      d0:	mvn	r3, #0
      d4:	b	1c0 <read_bytes+0x1c0>
      d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
      dc:	ldr	r2, [r3, #48]	; 0x30
      e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
      e4:	add	r3, r2, r3
      e8:	ldr	r2, [fp, #4]
      ec:	mov	r1, r3
      f0:	ldr	r0, [fp, #12]
      f4:	bl	0 <memcpy>
      f8:	b	1bc <read_bytes+0x1bc>
      fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
     100:	ldr	r3, [r3, #16]
     104:	cmp	r3, #0
     108:	beq	130 <read_bytes+0x130>
     10c:	ldr	r3, [fp, #-80]	; 0xffffffb0
     110:	ldr	r3, [r3, #16]
     114:	cmp	r3, #1
     118:	beq	130 <read_bytes+0x130>
     11c:	ldr	r3, [pc, #176]	; 1d4 <read_bytes+0x1d4>
     120:	mov	r2, #83	; 0x53
     124:	ldr	r1, [pc, #172]	; 1d8 <read_bytes+0x1d8>
     128:	ldr	r0, [pc, #172]	; 1dc <read_bytes+0x1dc>
     12c:	bl	0 <__assert_fail>
     130:	ldrd	r0, [fp, #-92]	; 0xffffffa4
     134:	ldrd	r2, [fp, #4]
     138:	adds	r2, r2, r0
     13c:	adc	r3, r3, r1
     140:	ldr	r1, [fp, #-80]	; 0xffffffb0
     144:	ldrd	r0, [r1, #8]
     148:	cmp	r3, r1
     14c:	cmpeq	r2, r0
     150:	bls	168 <read_bytes+0x168>
     154:	ldr	r1, [pc, #112]	; 1cc <read_bytes+0x1cc>
     158:	mvn	r0, #300	; 0x12c
     15c:	bl	0 <coda_set_error>
     160:	mvn	r3, #0
     164:	b	1c0 <read_bytes+0x1c0>
     168:	ldr	r3, [fp, #-80]	; 0xffffffb0
     16c:	ldr	r0, [r3, #56]	; 0x38
     170:	ldr	r2, [fp, #4]
     174:	ldr	r3, [fp, #-92]	; 0xffffffa4
     178:	ldr	r1, [fp, #12]
     17c:	bl	0 <pread>
     180:	mov	r3, r0
     184:	cmp	r3, #0
     188:	bge	1bc <read_bytes+0x1bc>
     18c:	bl	0 <__errno_location>
     190:	mov	r3, r0
     194:	ldr	r3, [r3]
     198:	mov	r0, r3
     19c:	bl	0 <strerror>
     1a0:	mov	r3, r0
     1a4:	mov	r2, r3
     1a8:	ldr	r1, [pc, #48]	; 1e0 <read_bytes+0x1e0>
     1ac:	mvn	r0, #21
     1b0:	bl	0 <coda_set_error>
     1b4:	mvn	r3, #0
     1b8:	b	1c0 <read_bytes+0x1c0>
     1bc:	mov	r3, #0
     1c0:	mov	r0, r3
     1c4:	sub	sp, fp, #4
     1c8:	pop	{fp, pc}
     1cc:	.word	0x00000000
     1d0:	.word	0x0000002c
     1d4:	.word	0x00000478
     1d8:	.word	0x00000068
     1dc:	.word	0x000000b8
     1e0:	.word	0x00000108

000001e4 <swap2>:
     1e4:	push	{fp}		; (str fp, [sp, #-4]!)
     1e8:	add	fp, sp, #0
     1ec:	sub	sp, sp, #20
     1f0:	str	r0, [fp, #-16]
     1f4:	ldr	r3, [fp, #-16]
     1f8:	str	r3, [fp, #-8]
     1fc:	ldr	r3, [fp, #-8]
     200:	ldrb	r2, [r3]
     204:	ldr	r3, [fp, #-8]
     208:	add	r3, r3, #1
     20c:	ldrb	r3, [r3]
     210:	eor	r3, r3, r2
     214:	uxtb	r2, r3
     218:	ldr	r3, [fp, #-8]
     21c:	strb	r2, [r3]
     220:	ldr	r3, [fp, #-8]
     224:	add	r3, r3, #1
     228:	ldr	r2, [fp, #-8]
     22c:	ldrb	r1, [r2]
     230:	ldr	r2, [fp, #-8]
     234:	add	r2, r2, #1
     238:	ldrb	r2, [r2]
     23c:	eor	r2, r2, r1
     240:	uxtb	r2, r2
     244:	strb	r2, [r3]
     248:	ldr	r3, [fp, #-8]
     24c:	ldrb	r2, [r3]
     250:	ldr	r3, [fp, #-8]
     254:	add	r3, r3, #1
     258:	ldrb	r3, [r3]
     25c:	eor	r3, r3, r2
     260:	uxtb	r2, r3
     264:	ldr	r3, [fp, #-8]
     268:	strb	r2, [r3]
     26c:	nop			; (mov r0, r0)
     270:	add	sp, fp, #0
     274:	pop	{fp}		; (ldr fp, [sp], #4)
     278:	bx	lr

0000027c <swap4>:
     27c:	push	{fp}		; (str fp, [sp, #-4]!)
     280:	add	fp, sp, #0
     284:	sub	sp, sp, #20
     288:	str	r0, [fp, #-16]
     28c:	ldr	r3, [fp, #-16]
     290:	str	r3, [fp, #-8]
     294:	ldr	r3, [fp, #-8]
     298:	ldrb	r2, [r3]
     29c:	ldr	r3, [fp, #-8]
     2a0:	add	r3, r3, #3
     2a4:	ldrb	r3, [r3]
     2a8:	eor	r3, r3, r2
     2ac:	uxtb	r2, r3
     2b0:	ldr	r3, [fp, #-8]
     2b4:	strb	r2, [r3]
     2b8:	ldr	r3, [fp, #-8]
     2bc:	add	r3, r3, #3
     2c0:	ldr	r2, [fp, #-8]
     2c4:	ldrb	r1, [r2]
     2c8:	ldr	r2, [fp, #-8]
     2cc:	add	r2, r2, #3
     2d0:	ldrb	r2, [r2]
     2d4:	eor	r2, r2, r1
     2d8:	uxtb	r2, r2
     2dc:	strb	r2, [r3]
     2e0:	ldr	r3, [fp, #-8]
     2e4:	ldrb	r2, [r3]
     2e8:	ldr	r3, [fp, #-8]
     2ec:	add	r3, r3, #3
     2f0:	ldrb	r3, [r3]
     2f4:	eor	r3, r3, r2
     2f8:	uxtb	r2, r3
     2fc:	ldr	r3, [fp, #-8]
     300:	strb	r2, [r3]
     304:	ldr	r3, [fp, #-8]
     308:	add	r3, r3, #1
     30c:	ldr	r2, [fp, #-8]
     310:	add	r2, r2, #1
     314:	ldrb	r1, [r2]
     318:	ldr	r2, [fp, #-8]
     31c:	add	r2, r2, #2
     320:	ldrb	r2, [r2]
     324:	eor	r2, r2, r1
     328:	uxtb	r2, r2
     32c:	strb	r2, [r3]
     330:	ldr	r3, [fp, #-8]
     334:	add	r3, r3, #2
     338:	ldr	r2, [fp, #-8]
     33c:	add	r2, r2, #1
     340:	ldrb	r1, [r2]
     344:	ldr	r2, [fp, #-8]
     348:	add	r2, r2, #2
     34c:	ldrb	r2, [r2]
     350:	eor	r2, r2, r1
     354:	uxtb	r2, r2
     358:	strb	r2, [r3]
     35c:	ldr	r3, [fp, #-8]
     360:	add	r3, r3, #1
     364:	ldr	r2, [fp, #-8]
     368:	add	r2, r2, #1
     36c:	ldrb	r1, [r2]
     370:	ldr	r2, [fp, #-8]
     374:	add	r2, r2, #2
     378:	ldrb	r2, [r2]
     37c:	eor	r2, r2, r1
     380:	uxtb	r2, r2
     384:	strb	r2, [r3]
     388:	nop			; (mov r0, r0)
     38c:	add	sp, fp, #0
     390:	pop	{fp}		; (ldr fp, [sp], #4)
     394:	bx	lr

00000398 <swap8>:
     398:	push	{fp}		; (str fp, [sp, #-4]!)
     39c:	add	fp, sp, #0
     3a0:	sub	sp, sp, #20
     3a4:	str	r0, [fp, #-16]
     3a8:	ldr	r3, [fp, #-16]
     3ac:	str	r3, [fp, #-8]
     3b0:	ldr	r3, [fp, #-8]
     3b4:	ldrb	r2, [r3]
     3b8:	ldr	r3, [fp, #-8]
     3bc:	add	r3, r3, #7
     3c0:	ldrb	r3, [r3]
     3c4:	eor	r3, r3, r2
     3c8:	uxtb	r2, r3
     3cc:	ldr	r3, [fp, #-8]
     3d0:	strb	r2, [r3]
     3d4:	ldr	r3, [fp, #-8]
     3d8:	add	r3, r3, #7
     3dc:	ldr	r2, [fp, #-8]
     3e0:	ldrb	r1, [r2]
     3e4:	ldr	r2, [fp, #-8]
     3e8:	add	r2, r2, #7
     3ec:	ldrb	r2, [r2]
     3f0:	eor	r2, r2, r1
     3f4:	uxtb	r2, r2
     3f8:	strb	r2, [r3]
     3fc:	ldr	r3, [fp, #-8]
     400:	ldrb	r2, [r3]
     404:	ldr	r3, [fp, #-8]
     408:	add	r3, r3, #7
     40c:	ldrb	r3, [r3]
     410:	eor	r3, r3, r2
     414:	uxtb	r2, r3
     418:	ldr	r3, [fp, #-8]
     41c:	strb	r2, [r3]
     420:	ldr	r3, [fp, #-8]
     424:	add	r3, r3, #1
     428:	ldr	r2, [fp, #-8]
     42c:	add	r2, r2, #1
     430:	ldrb	r1, [r2]
     434:	ldr	r2, [fp, #-8]
     438:	add	r2, r2, #6
     43c:	ldrb	r2, [r2]
     440:	eor	r2, r2, r1
     444:	uxtb	r2, r2
     448:	strb	r2, [r3]
     44c:	ldr	r3, [fp, #-8]
     450:	add	r3, r3, #6
     454:	ldr	r2, [fp, #-8]
     458:	add	r2, r2, #1
     45c:	ldrb	r1, [r2]
     460:	ldr	r2, [fp, #-8]
     464:	add	r2, r2, #6
     468:	ldrb	r2, [r2]
     46c:	eor	r2, r2, r1
     470:	uxtb	r2, r2
     474:	strb	r2, [r3]
     478:	ldr	r3, [fp, #-8]
     47c:	add	r3, r3, #1
     480:	ldr	r2, [fp, #-8]
     484:	add	r2, r2, #1
     488:	ldrb	r1, [r2]
     48c:	ldr	r2, [fp, #-8]
     490:	add	r2, r2, #6
     494:	ldrb	r2, [r2]
     498:	eor	r2, r2, r1
     49c:	uxtb	r2, r2
     4a0:	strb	r2, [r3]
     4a4:	ldr	r3, [fp, #-8]
     4a8:	add	r3, r3, #2
     4ac:	ldr	r2, [fp, #-8]
     4b0:	add	r2, r2, #2
     4b4:	ldrb	r1, [r2]
     4b8:	ldr	r2, [fp, #-8]
     4bc:	add	r2, r2, #5
     4c0:	ldrb	r2, [r2]
     4c4:	eor	r2, r2, r1
     4c8:	uxtb	r2, r2
     4cc:	strb	r2, [r3]
     4d0:	ldr	r3, [fp, #-8]
     4d4:	add	r3, r3, #5
     4d8:	ldr	r2, [fp, #-8]
     4dc:	add	r2, r2, #2
     4e0:	ldrb	r1, [r2]
     4e4:	ldr	r2, [fp, #-8]
     4e8:	add	r2, r2, #5
     4ec:	ldrb	r2, [r2]
     4f0:	eor	r2, r2, r1
     4f4:	uxtb	r2, r2
     4f8:	strb	r2, [r3]
     4fc:	ldr	r3, [fp, #-8]
     500:	add	r3, r3, #2
     504:	ldr	r2, [fp, #-8]
     508:	add	r2, r2, #2
     50c:	ldrb	r1, [r2]
     510:	ldr	r2, [fp, #-8]
     514:	add	r2, r2, #5
     518:	ldrb	r2, [r2]
     51c:	eor	r2, r2, r1
     520:	uxtb	r2, r2
     524:	strb	r2, [r3]
     528:	ldr	r3, [fp, #-8]
     52c:	add	r3, r3, #3
     530:	ldr	r2, [fp, #-8]
     534:	add	r2, r2, #3
     538:	ldrb	r1, [r2]
     53c:	ldr	r2, [fp, #-8]
     540:	add	r2, r2, #4
     544:	ldrb	r2, [r2]
     548:	eor	r2, r2, r1
     54c:	uxtb	r2, r2
     550:	strb	r2, [r3]
     554:	ldr	r3, [fp, #-8]
     558:	add	r3, r3, #4
     55c:	ldr	r2, [fp, #-8]
     560:	add	r2, r2, #3
     564:	ldrb	r1, [r2]
     568:	ldr	r2, [fp, #-8]
     56c:	add	r2, r2, #4
     570:	ldrb	r2, [r2]
     574:	eor	r2, r2, r1
     578:	uxtb	r2, r2
     57c:	strb	r2, [r3]
     580:	ldr	r3, [fp, #-8]
     584:	add	r3, r3, #3
     588:	ldr	r2, [fp, #-8]
     58c:	add	r2, r2, #3
     590:	ldrb	r1, [r2]
     594:	ldr	r2, [fp, #-8]
     598:	add	r2, r2, #4
     59c:	ldrb	r2, [r2]
     5a0:	eor	r2, r2, r1
     5a4:	uxtb	r2, r2
     5a8:	strb	r2, [r3]
     5ac:	nop			; (mov r0, r0)
     5b0:	add	sp, fp, #0
     5b4:	pop	{fp}		; (ldr fp, [sp], #4)
     5b8:	bx	lr

000005bc <read_length_value>:
     5bc:	push	{fp, lr}
     5c0:	add	fp, sp, #4
     5c4:	sub	sp, sp, #40	; 0x28
     5c8:	str	r0, [fp, #-16]
     5cc:	str	r1, [fp, #-20]	; 0xffffffec
     5d0:	str	r2, [fp, #-24]	; 0xffffffe8
     5d4:	ldr	r3, [fp, #-16]
     5d8:	ldr	r3, [r3, #56]	; 0x38
     5dc:	cmp	r3, #5
     5e0:	beq	668 <read_length_value+0xac>
     5e4:	ldr	r3, [fp, #-16]
     5e8:	ldr	ip, [r3, #52]	; 0x34
     5ec:	ldr	r3, [fp, #-20]	; 0xffffffec
     5f0:	ldrd	r0, [r3]
     5f4:	sub	r3, fp, #8
     5f8:	str	r3, [sp, #8]
     5fc:	mov	r2, #4
     600:	mov	r3, #0
     604:	strd	r2, [sp]
     608:	mov	r2, r0
     60c:	mov	r3, r1
     610:	mov	r0, ip
     614:	bl	0 <read_bytes>
     618:	mov	r3, r0
     61c:	cmp	r3, #0
     620:	bge	62c <read_length_value+0x70>
     624:	mvn	r3, #0
     628:	b	6d4 <read_length_value+0x118>
     62c:	sub	r3, fp, #8
     630:	mov	r0, r3
     634:	bl	27c <swap4>
     638:	ldr	r3, [fp, #-8]
     63c:	mov	r2, r3
     640:	asr	r3, r2, #31
     644:	ldr	r1, [fp, #-24]	; 0xffffffe8
     648:	strd	r2, [r1]
     64c:	ldr	r3, [fp, #-20]	; 0xffffffec
     650:	ldrd	r2, [r3]
     654:	adds	r2, r2, #4
     658:	adc	r3, r3, #0
     65c:	ldr	r1, [fp, #-20]	; 0xffffffec
     660:	strd	r2, [r1]
     664:	b	6d0 <read_length_value+0x114>
     668:	ldr	r3, [fp, #-16]
     66c:	ldr	ip, [r3, #52]	; 0x34
     670:	ldr	r3, [fp, #-20]	; 0xffffffec
     674:	ldrd	r0, [r3]
     678:	ldr	r3, [fp, #-24]	; 0xffffffe8
     67c:	str	r3, [sp, #8]
     680:	mov	r2, #8
     684:	mov	r3, #0
     688:	strd	r2, [sp]
     68c:	mov	r2, r0
     690:	mov	r3, r1
     694:	mov	r0, ip
     698:	bl	0 <read_bytes>
     69c:	mov	r3, r0
     6a0:	cmp	r3, #0
     6a4:	bge	6b0 <read_length_value+0xf4>
     6a8:	mvn	r3, #0
     6ac:	b	6d4 <read_length_value+0x118>
     6b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     6b4:	bl	398 <swap8>
     6b8:	ldr	r3, [fp, #-20]	; 0xffffffec
     6bc:	ldrd	r2, [r3]
     6c0:	adds	r2, r2, #8
     6c4:	adc	r3, r3, #0
     6c8:	ldr	r1, [fp, #-20]	; 0xffffffec
     6cc:	strd	r2, [r1]
     6d0:	mov	r3, #0
     6d4:	mov	r0, r3
     6d8:	sub	sp, fp, #4
     6dc:	pop	{fp, pc}

000006e0 <read_dim_array>:
     6e0:	push	{r4, r5, fp, lr}
     6e4:	add	fp, sp, #12
     6e8:	sub	sp, sp, #48	; 0x30
     6ec:	str	r0, [fp, #-32]	; 0xffffffe0
     6f0:	str	r1, [fp, #-36]	; 0xffffffdc
     6f4:	strd	r2, [fp, #-44]	; 0xffffffd4
     6f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     6fc:	ldr	ip, [r3, #52]	; 0x34
     700:	ldr	r3, [fp, #-36]	; 0xffffffdc
     704:	ldrd	r0, [r3]
     708:	sub	r3, fp, #20
     70c:	str	r3, [sp, #8]
     710:	mov	r2, #4
     714:	mov	r3, #0
     718:	strd	r2, [sp]
     71c:	mov	r2, r0
     720:	mov	r3, r1
     724:	mov	r0, ip
     728:	bl	0 <read_bytes>
     72c:	mov	r3, r0
     730:	cmp	r3, #0
     734:	bge	740 <read_dim_array+0x60>
     738:	mvn	r3, #0
     73c:	b	9d0 <read_dim_array+0x2f0>
     740:	sub	r3, fp, #20
     744:	mov	r0, r3
     748:	bl	27c <swap4>
     74c:	ldr	r3, [fp, #-36]	; 0xffffffdc
     750:	ldrd	r2, [r3]
     754:	adds	r2, r2, #4
     758:	adc	r3, r3, #0
     75c:	ldr	r1, [fp, #-36]	; 0xffffffdc
     760:	strd	r2, [r1]
     764:	ldr	r2, [fp, #4]
     768:	ldr	r1, [fp, #-36]	; 0xffffffdc
     76c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     770:	bl	5bc <read_length_value>
     774:	mov	r3, r0
     778:	cmp	r3, #0
     77c:	beq	788 <read_dim_array+0xa8>
     780:	mvn	r3, #0
     784:	b	9d0 <read_dim_array+0x2f0>
     788:	ldr	r3, [fp, #-20]	; 0xffffffec
     78c:	cmp	r3, #0
     790:	bne	7c0 <read_dim_array+0xe0>
     794:	ldr	r3, [fp, #4]
     798:	ldrd	r2, [r3]
     79c:	orrs	r3, r2, r3
     7a0:	beq	7b8 <read_dim_array+0xd8>
     7a4:	ldr	r1, [pc, #560]	; 9dc <read_dim_array+0x2fc>
     7a8:	ldr	r0, [pc, #560]	; 9e0 <read_dim_array+0x300>
     7ac:	bl	0 <coda_set_error>
     7b0:	mvn	r3, #0
     7b4:	b	9d0 <read_dim_array+0x2f0>
     7b8:	mov	r3, #0
     7bc:	b	9d0 <read_dim_array+0x2f0>
     7c0:	ldr	r3, [fp, #-20]	; 0xffffffec
     7c4:	cmp	r3, #10
     7c8:	beq	7e0 <read_dim_array+0x100>
     7cc:	ldr	r1, [pc, #528]	; 9e4 <read_dim_array+0x304>
     7d0:	ldr	r0, [pc, #520]	; 9e0 <read_dim_array+0x300>
     7d4:	bl	0 <coda_set_error>
     7d8:	mvn	r3, #0
     7dc:	b	9d0 <read_dim_array+0x2f0>
     7e0:	ldr	r3, [fp, #4]
     7e4:	ldrd	r2, [r3]
     7e8:	mov	r3, r2
     7ec:	lsl	r3, r3, #3
     7f0:	mov	r0, r3
     7f4:	bl	0 <malloc>
     7f8:	mov	r3, r0
     7fc:	mov	r2, r3
     800:	ldr	r3, [fp, #8]
     804:	str	r2, [r3]
     808:	ldr	r3, [fp, #8]
     80c:	ldr	r3, [r3]
     810:	cmp	r3, #0
     814:	bne	858 <read_dim_array+0x178>
     818:	ldr	r3, [fp, #4]
     81c:	ldrd	r2, [r3]
     820:	lsl	r5, r3, #3
     824:	orr	r5, r5, r2, lsr #29
     828:	lsl	r4, r2, #3
     82c:	mov	r3, #124	; 0x7c
     830:	str	r3, [sp, #4]
     834:	ldr	r3, [pc, #428]	; 9e8 <read_dim_array+0x308>
     838:	str	r3, [sp]
     83c:	mov	r2, r4
     840:	mov	r3, r5
     844:	ldr	r1, [pc, #416]	; 9ec <read_dim_array+0x30c>
     848:	mvn	r0, #0
     84c:	bl	0 <coda_set_error>
     850:	mvn	r3, #0
     854:	b	9d0 <read_dim_array+0x2f0>
     858:	mov	r3, #0
     85c:	str	r3, [fp, #-16]
     860:	b	9ac <read_dim_array+0x2cc>
     864:	sub	r3, fp, #28
     868:	mov	r2, r3
     86c:	ldr	r1, [fp, #-36]	; 0xffffffdc
     870:	ldr	r0, [fp, #-32]	; 0xffffffe0
     874:	bl	5bc <read_length_value>
     878:	mov	r3, r0
     87c:	cmp	r3, #0
     880:	beq	89c <read_dim_array+0x1bc>
     884:	ldr	r3, [fp, #8]
     888:	ldr	r3, [r3]
     88c:	mov	r0, r3
     890:	bl	0 <free>
     894:	mvn	r3, #0
     898:	b	9d0 <read_dim_array+0x2f0>
     89c:	ldr	r3, [fp, #-36]	; 0xffffffdc
     8a0:	ldrd	r0, [r3]
     8a4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
     8a8:	adds	r2, r2, r0
     8ac:	adc	r3, r3, r1
     8b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
     8b4:	strd	r2, [r1]
     8b8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
     8bc:	mov	r0, #3
     8c0:	mov	r1, #0
     8c4:	and	r2, r2, r0
     8c8:	and	r3, r3, r1
     8cc:	orrs	r3, r2, r3
     8d0:	beq	910 <read_dim_array+0x230>
     8d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
     8d8:	ldrd	r0, [r3]
     8dc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
     8e0:	mov	r4, #3
     8e4:	mov	r5, #0
     8e8:	and	r2, r2, r4
     8ec:	and	r3, r3, r5
     8f0:	mov	r4, #4
     8f4:	mov	r5, #0
     8f8:	subs	r2, r4, r2
     8fc:	sbc	r3, r5, r3
     900:	adds	r2, r2, r0
     904:	adc	r3, r3, r1
     908:	ldr	r1, [fp, #-36]	; 0xffffffdc
     90c:	strd	r2, [r1]
     910:	ldr	r3, [fp, #8]
     914:	ldr	r2, [r3]
     918:	ldr	r3, [fp, #-16]
     91c:	lsl	r3, r3, #3
     920:	add	r3, r2, r3
     924:	mov	r2, r3
     928:	ldr	r1, [fp, #-36]	; 0xffffffdc
     92c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     930:	bl	5bc <read_length_value>
     934:	mov	r3, r0
     938:	cmp	r3, #0
     93c:	beq	958 <read_dim_array+0x278>
     940:	ldr	r3, [fp, #8]
     944:	ldr	r3, [r3]
     948:	mov	r0, r3
     94c:	bl	0 <free>
     950:	mvn	r3, #0
     954:	b	9d0 <read_dim_array+0x2f0>
     958:	ldr	r3, [fp, #8]
     95c:	ldr	r2, [r3]
     960:	ldr	r3, [fp, #-16]
     964:	lsl	r3, r3, #3
     968:	add	r3, r2, r3
     96c:	ldrd	r2, [r3]
     970:	orrs	r3, r2, r3
     974:	bne	9a0 <read_dim_array+0x2c0>
     978:	ldr	r3, [fp, #8]
     97c:	ldr	r2, [r3]
     980:	ldr	r3, [fp, #-16]
     984:	lsl	r3, r3, #3
     988:	add	r1, r2, r3
     98c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
     990:	strd	r2, [r1]
     994:	ldr	r3, [fp, #12]
     998:	ldr	r2, [fp, #-16]
     99c:	str	r2, [r3]
     9a0:	ldr	r3, [fp, #-16]
     9a4:	add	r3, r3, #1
     9a8:	str	r3, [fp, #-16]
     9ac:	ldr	r3, [fp, #-16]
     9b0:	mov	r0, r3
     9b4:	asr	r1, r0, #31
     9b8:	ldr	r3, [fp, #4]
     9bc:	ldrd	r2, [r3]
     9c0:	cmp	r0, r2
     9c4:	sbcs	r3, r1, r3
     9c8:	blt	864 <read_dim_array+0x184>
     9cc:	mov	r3, #0
     9d0:	mov	r0, r3
     9d4:	sub	sp, fp, #12
     9d8:	pop	{r4, r5, fp, pc}
     9dc:	.word	0x00000128
     9e0:	.word	0xfffffed4
     9e4:	.word	0x0000016c
     9e8:	.word	0x000001e0
     9ec:	.word	0x000001a8

000009f0 <read_att_array>:
     9f0:	push	{r4, r5, fp, lr}
     9f4:	add	fp, sp, #12
     9f8:	sub	sp, sp, #128	; 0x80
     9fc:	str	r0, [fp, #-112]	; 0xffffff90
     a00:	str	r1, [fp, #-116]	; 0xffffff8c
     a04:	str	r2, [fp, #-120]	; 0xffffff88
     a08:	str	r3, [fp, #-124]	; 0xffffff84
     a0c:	ldr	r3, [fp, #-112]	; 0xffffff90
     a10:	ldr	ip, [r3, #52]	; 0x34
     a14:	ldr	r3, [fp, #-116]	; 0xffffff8c
     a18:	ldrd	r0, [r3]
     a1c:	sub	r3, fp, #40	; 0x28
     a20:	str	r3, [sp, #8]
     a24:	mov	r2, #4
     a28:	mov	r3, #0
     a2c:	strd	r2, [sp]
     a30:	mov	r2, r0
     a34:	mov	r3, r1
     a38:	mov	r0, ip
     a3c:	bl	0 <read_bytes>
     a40:	mov	r3, r0
     a44:	cmp	r3, #0
     a48:	bge	a54 <read_att_array+0x64>
     a4c:	mvn	r3, #0
     a50:	b	1480 <read_att_array+0xa90>
     a54:	sub	r3, fp, #40	; 0x28
     a58:	mov	r0, r3
     a5c:	bl	27c <swap4>
     a60:	ldr	r3, [fp, #-116]	; 0xffffff8c
     a64:	ldrd	r2, [r3]
     a68:	adds	r2, r2, #4
     a6c:	adc	r3, r3, #0
     a70:	ldr	r1, [fp, #-116]	; 0xffffff8c
     a74:	strd	r2, [r1]
     a78:	sub	r3, fp, #52	; 0x34
     a7c:	mov	r2, r3
     a80:	ldr	r1, [fp, #-116]	; 0xffffff8c
     a84:	ldr	r0, [fp, #-112]	; 0xffffff90
     a88:	bl	5bc <read_length_value>
     a8c:	mov	r3, r0
     a90:	cmp	r3, #0
     a94:	beq	aa0 <read_att_array+0xb0>
     a98:	mvn	r3, #0
     a9c:	b	1480 <read_att_array+0xa90>
     aa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
     aa4:	cmp	r3, #0
     aa8:	bne	ae0 <read_att_array+0xf0>
     aac:	ldr	r3, [fp, #-120]	; 0xffffff88
     ab0:	mov	r2, #0
     ab4:	str	r2, [r3]
     ab8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
     abc:	orrs	r3, r2, r3
     ac0:	beq	ad8 <read_att_array+0xe8>
     ac4:	ldr	r1, [pc, #2496]	; 148c <read_att_array+0xa9c>
     ac8:	ldr	r0, [pc, #2496]	; 1490 <read_att_array+0xaa0>
     acc:	bl	0 <coda_set_error>
     ad0:	mvn	r3, #0
     ad4:	b	1480 <read_att_array+0xa90>
     ad8:	mov	r3, #0
     adc:	b	1480 <read_att_array+0xa90>
     ae0:	ldr	r3, [fp, #-40]	; 0xffffffd8
     ae4:	cmp	r3, #12
     ae8:	beq	b00 <read_att_array+0x110>
     aec:	ldr	r1, [pc, #2464]	; 1494 <read_att_array+0xaa4>
     af0:	ldr	r0, [pc, #2456]	; 1490 <read_att_array+0xaa0>
     af4:	bl	0 <coda_set_error>
     af8:	mvn	r3, #0
     afc:	b	1480 <read_att_array+0xa90>
     b00:	mov	r0, #6
     b04:	bl	0 <coda_type_record_new>
     b08:	str	r0, [fp, #-28]	; 0xffffffe4
     b0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b10:	cmp	r3, #0
     b14:	bne	b20 <read_att_array+0x130>
     b18:	mvn	r3, #0
     b1c:	b	1480 <read_att_array+0xa90>
     b20:	mov	r1, #0
     b24:	ldr	r0, [fp, #-28]	; 0xffffffe4
     b28:	bl	0 <coda_mem_record_new>
     b2c:	mov	r2, r0
     b30:	ldr	r3, [fp, #-120]	; 0xffffff88
     b34:	str	r2, [r3]
     b38:	ldr	r0, [fp, #-28]	; 0xffffffe4
     b3c:	bl	0 <coda_type_release>
     b40:	ldr	r3, [fp, #-120]	; 0xffffff88
     b44:	ldr	r3, [r3]
     b48:	cmp	r3, #0
     b4c:	bne	b58 <read_att_array+0x168>
     b50:	mvn	r3, #0
     b54:	b	1480 <read_att_array+0xa90>
     b58:	mov	r3, #0
     b5c:	str	r3, [fp, #-16]
     b60:	b	1460 <read_att_array+0xa70>
     b64:	sub	r3, fp, #60	; 0x3c
     b68:	mov	r2, r3
     b6c:	ldr	r1, [fp, #-116]	; 0xffffff8c
     b70:	ldr	r0, [fp, #-112]	; 0xffffff90
     b74:	bl	5bc <read_length_value>
     b78:	mov	r3, r0
     b7c:	cmp	r3, #0
     b80:	beq	b8c <read_att_array+0x19c>
     b84:	mvn	r3, #0
     b88:	b	1480 <read_att_array+0xa90>
     b8c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
     b90:	mov	r3, r2
     b94:	add	r3, r3, #1
     b98:	mov	r0, r3
     b9c:	bl	0 <malloc>
     ba0:	mov	r3, r0
     ba4:	str	r3, [fp, #-32]	; 0xffffffe0
     ba8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     bac:	cmp	r3, #0
     bb0:	bne	bf4 <read_att_array+0x204>
     bb4:	ldr	r3, [fp, #-120]	; 0xffffff88
     bb8:	ldr	r3, [r3]
     bbc:	mov	r0, r3
     bc0:	bl	0 <coda_dynamic_type_delete>
     bc4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
     bc8:	mov	r3, r2
     bcc:	add	r3, r3, #1
     bd0:	mov	r2, r3
     bd4:	mov	r3, #230	; 0xe6
     bd8:	str	r3, [sp]
     bdc:	ldr	r3, [pc, #2228]	; 1498 <read_att_array+0xaa8>
     be0:	ldr	r1, [pc, #2228]	; 149c <read_att_array+0xaac>
     be4:	mvn	r0, #0
     be8:	bl	0 <coda_set_error>
     bec:	mvn	r3, #0
     bf0:	b	1480 <read_att_array+0xa90>
     bf4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
     bf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     bfc:	add	r3, r3, r2
     c00:	mov	r2, #0
     c04:	strb	r2, [r3]
     c08:	ldr	r3, [fp, #-112]	; 0xffffff90
     c0c:	ldr	lr, [r3, #52]	; 0x34
     c10:	ldr	r3, [fp, #-116]	; 0xffffff8c
     c14:	ldrd	r0, [r3]
     c18:	ldrd	r2, [fp, #-60]	; 0xffffffc4
     c1c:	ldr	ip, [fp, #-32]	; 0xffffffe0
     c20:	str	ip, [sp, #8]
     c24:	strd	r2, [sp]
     c28:	mov	r2, r0
     c2c:	mov	r3, r1
     c30:	mov	r0, lr
     c34:	bl	0 <read_bytes>
     c38:	mov	r3, r0
     c3c:	cmp	r3, #0
     c40:	bge	c64 <read_att_array+0x274>
     c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
     c48:	bl	0 <free>
     c4c:	ldr	r3, [fp, #-120]	; 0xffffff88
     c50:	ldr	r3, [r3]
     c54:	mov	r0, r3
     c58:	bl	0 <coda_dynamic_type_delete>
     c5c:	mvn	r3, #0
     c60:	b	1480 <read_att_array+0xa90>
     c64:	ldr	r3, [fp, #-116]	; 0xffffff8c
     c68:	ldrd	r0, [r3]
     c6c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
     c70:	adds	r2, r2, r0
     c74:	adc	r3, r3, r1
     c78:	ldr	r1, [fp, #-116]	; 0xffffff8c
     c7c:	strd	r2, [r1]
     c80:	ldrd	r2, [fp, #-60]	; 0xffffffc4
     c84:	mov	r0, #3
     c88:	mov	r1, #0
     c8c:	and	r2, r2, r0
     c90:	and	r3, r3, r1
     c94:	orrs	r3, r2, r3
     c98:	beq	cd8 <read_att_array+0x2e8>
     c9c:	ldr	r3, [fp, #-116]	; 0xffffff8c
     ca0:	ldrd	r0, [r3]
     ca4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
     ca8:	mov	r4, #3
     cac:	mov	r5, #0
     cb0:	and	r2, r2, r4
     cb4:	and	r3, r3, r5
     cb8:	mov	r4, #4
     cbc:	mov	r5, #0
     cc0:	subs	r2, r4, r2
     cc4:	sbc	r3, r5, r3
     cc8:	adds	r2, r2, r0
     ccc:	adc	r3, r3, r1
     cd0:	ldr	r1, [fp, #-116]	; 0xffffff8c
     cd4:	strd	r2, [r1]
     cd8:	ldr	r3, [fp, #-112]	; 0xffffff90
     cdc:	ldr	ip, [r3, #52]	; 0x34
     ce0:	ldr	r3, [fp, #-116]	; 0xffffff8c
     ce4:	ldrd	r0, [r3]
     ce8:	sub	r3, fp, #64	; 0x40
     cec:	str	r3, [sp, #8]
     cf0:	mov	r2, #4
     cf4:	mov	r3, #0
     cf8:	strd	r2, [sp]
     cfc:	mov	r2, r0
     d00:	mov	r3, r1
     d04:	mov	r0, ip
     d08:	bl	0 <read_bytes>
     d0c:	mov	r3, r0
     d10:	cmp	r3, #0
     d14:	bge	d38 <read_att_array+0x348>
     d18:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d1c:	bl	0 <free>
     d20:	ldr	r3, [fp, #-120]	; 0xffffff88
     d24:	ldr	r3, [r3]
     d28:	mov	r0, r3
     d2c:	bl	0 <coda_dynamic_type_delete>
     d30:	mvn	r3, #0
     d34:	b	1480 <read_att_array+0xa90>
     d38:	sub	r3, fp, #64	; 0x40
     d3c:	mov	r0, r3
     d40:	bl	27c <swap4>
     d44:	ldr	r3, [fp, #-116]	; 0xffffff8c
     d48:	ldrd	r2, [r3]
     d4c:	adds	r2, r2, #4
     d50:	adc	r3, r3, #0
     d54:	ldr	r1, [fp, #-116]	; 0xffffff8c
     d58:	strd	r2, [r1]
     d5c:	sub	r3, fp, #76	; 0x4c
     d60:	mov	r2, r3
     d64:	ldr	r1, [fp, #-116]	; 0xffffff8c
     d68:	ldr	r0, [fp, #-112]	; 0xffffff90
     d6c:	bl	5bc <read_length_value>
     d70:	mov	r3, r0
     d74:	cmp	r3, #0
     d78:	beq	d84 <read_att_array+0x394>
     d7c:	mvn	r3, #0
     d80:	b	1480 <read_att_array+0xa90>
     d84:	ldrd	r2, [fp, #-76]	; 0xffffffb4
     d88:	mov	r3, r2
     d8c:	str	r3, [fp, #-24]	; 0xffffffe8
     d90:	ldr	r3, [fp, #-64]	; 0xffffffc0
     d94:	sub	r3, r3, #1
     d98:	cmp	r3, #5
     d9c:	ldrls	pc, [pc, r3, lsl #2]
     da0:	b	dec <read_att_array+0x3fc>
     da4:	.word	0x00000e20
     da8:	.word	0x00000e20
     dac:	.word	0x00000dbc
     db0:	.word	0x00000dcc
     db4:	.word	0x00000dcc
     db8:	.word	0x00000ddc
     dbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     dc0:	lsl	r3, r3, #1
     dc4:	str	r3, [fp, #-24]	; 0xffffffe8
     dc8:	b	e24 <read_att_array+0x434>
     dcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     dd0:	lsl	r3, r3, #2
     dd4:	str	r3, [fp, #-24]	; 0xffffffe8
     dd8:	b	e24 <read_att_array+0x434>
     ddc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     de0:	lsl	r3, r3, #3
     de4:	str	r3, [fp, #-24]	; 0xffffffe8
     de8:	b	e24 <read_att_array+0x434>
     dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
     df0:	bl	0 <free>
     df4:	ldr	r3, [fp, #-120]	; 0xffffff88
     df8:	ldr	r3, [r3]
     dfc:	mov	r0, r3
     e00:	bl	0 <coda_dynamic_type_delete>
     e04:	ldr	r3, [fp, #-64]	; 0xffffffc0
     e08:	mov	r2, r3
     e0c:	ldr	r1, [pc, #1676]	; 14a0 <read_att_array+0xab0>
     e10:	ldr	r0, [pc, #1656]	; 1490 <read_att_array+0xaa0>
     e14:	bl	0 <coda_set_error>
     e18:	mvn	r3, #0
     e1c:	b	1480 <read_att_array+0xa90>
     e20:	nop			; (mov r0, r0)
     e24:	ldr	r3, [fp, #-124]	; 0xffffff84
     e28:	cmp	r3, #0
     e2c:	beq	1240 <read_att_array+0x850>
     e30:	ldrd	r2, [fp, #-76]	; 0xffffffb4
     e34:	cmp	r3, #0
     e38:	cmpeq	r2, #1
     e3c:	bne	fc4 <read_att_array+0x5d4>
     e40:	ldr	r1, [pc, #1628]	; 14a4 <read_att_array+0xab4>
     e44:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e48:	bl	0 <strcmp>
     e4c:	mov	r3, r0
     e50:	cmp	r3, #0
     e54:	beq	e70 <read_att_array+0x480>
     e58:	ldr	r1, [pc, #1608]	; 14a8 <read_att_array+0xab8>
     e5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e60:	bl	0 <strcmp>
     e64:	mov	r3, r0
     e68:	cmp	r3, #0
     e6c:	bne	fc4 <read_att_array+0x5d4>
     e70:	ldr	r3, [fp, #-64]	; 0xffffffc0
     e74:	cmp	r3, #5
     e78:	bne	f20 <read_att_array+0x530>
     e7c:	ldr	r3, [fp, #-112]	; 0xffffff90
     e80:	ldr	ip, [r3, #52]	; 0x34
     e84:	ldr	r3, [fp, #-116]	; 0xffffff8c
     e88:	ldrd	r0, [r3]
     e8c:	sub	r3, fp, #80	; 0x50
     e90:	str	r3, [sp, #8]
     e94:	mov	r2, #4
     e98:	mov	r3, #0
     e9c:	strd	r2, [sp]
     ea0:	mov	r2, r0
     ea4:	mov	r3, r1
     ea8:	mov	r0, ip
     eac:	bl	0 <read_bytes>
     eb0:	mov	r3, r0
     eb4:	cmp	r3, #0
     eb8:	bge	edc <read_att_array+0x4ec>
     ebc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ec0:	bl	0 <free>
     ec4:	ldr	r3, [fp, #-120]	; 0xffffff88
     ec8:	ldr	r3, [r3]
     ecc:	mov	r0, r3
     ed0:	bl	0 <coda_dynamic_type_delete>
     ed4:	mvn	r3, #0
     ed8:	b	1480 <read_att_array+0xa90>
     edc:	sub	r3, fp, #80	; 0x50
     ee0:	mov	r0, r3
     ee4:	bl	27c <swap4>
     ee8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     eec:	ldrb	r3, [r3]
     ef0:	cmp	r3, #115	; 0x73
     ef4:	bne	f0c <read_att_array+0x51c>
     ef8:	vldr	s15, [fp, #-80]	; 0xffffffb0
     efc:	vcvt.f64.f32	d7, s15
     f00:	ldr	r3, [fp, #-124]	; 0xffffff84
     f04:	vstr	d7, [r3]
     f08:	b	fc4 <read_att_array+0x5d4>
     f0c:	vldr	s15, [fp, #-80]	; 0xffffffb0
     f10:	vcvt.f64.f32	d7, s15
     f14:	ldr	r3, [fp, #-124]	; 0xffffff84
     f18:	vstr	d7, [r3, #16]
     f1c:	b	fc4 <read_att_array+0x5d4>
     f20:	ldr	r3, [fp, #-64]	; 0xffffffc0
     f24:	cmp	r3, #6
     f28:	bne	fc4 <read_att_array+0x5d4>
     f2c:	ldr	r3, [fp, #-112]	; 0xffffff90
     f30:	ldr	ip, [r3, #52]	; 0x34
     f34:	ldr	r3, [fp, #-116]	; 0xffffff8c
     f38:	ldrd	r0, [r3]
     f3c:	sub	r3, fp, #92	; 0x5c
     f40:	str	r3, [sp, #8]
     f44:	mov	r2, #8
     f48:	mov	r3, #0
     f4c:	strd	r2, [sp]
     f50:	mov	r2, r0
     f54:	mov	r3, r1
     f58:	mov	r0, ip
     f5c:	bl	0 <read_bytes>
     f60:	mov	r3, r0
     f64:	cmp	r3, #0
     f68:	bge	f8c <read_att_array+0x59c>
     f6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f70:	bl	0 <free>
     f74:	ldr	r3, [fp, #-120]	; 0xffffff88
     f78:	ldr	r3, [r3]
     f7c:	mov	r0, r3
     f80:	bl	0 <coda_dynamic_type_delete>
     f84:	mvn	r3, #0
     f88:	b	1480 <read_att_array+0xa90>
     f8c:	sub	r3, fp, #92	; 0x5c
     f90:	mov	r0, r3
     f94:	bl	398 <swap8>
     f98:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f9c:	ldrb	r3, [r3]
     fa0:	cmp	r3, #115	; 0x73
     fa4:	bne	fb8 <read_att_array+0x5c8>
     fa8:	ldrd	r2, [fp, #-92]	; 0xffffffa4
     fac:	ldr	r1, [fp, #-124]	; 0xffffff84
     fb0:	strd	r2, [r1]
     fb4:	b	fc4 <read_att_array+0x5d4>
     fb8:	ldrd	r2, [fp, #-92]	; 0xffffffa4
     fbc:	ldr	r1, [fp, #-124]	; 0xffffff84
     fc0:	strd	r2, [r1, #16]
     fc4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
     fc8:	cmp	r3, #0
     fcc:	cmpeq	r2, #1
     fd0:	bne	1240 <read_att_array+0x850>
     fd4:	ldr	r3, [fp, #-64]	; 0xffffffc0
     fd8:	cmp	r3, #2
     fdc:	beq	1240 <read_att_array+0x850>
     fe0:	ldr	r1, [pc, #1220]	; 14ac <read_att_array+0xabc>
     fe4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     fe8:	bl	0 <strcmp>
     fec:	mov	r3, r0
     ff0:	cmp	r3, #0
     ff4:	beq	102c <read_att_array+0x63c>
     ff8:	ldr	r1, [pc, #1200]	; 14b0 <read_att_array+0xac0>
     ffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1000:	bl	0 <strcmp>
    1004:	mov	r3, r0
    1008:	cmp	r3, #0
    100c:	bne	1240 <read_att_array+0x850>
    1010:	ldr	r3, [fp, #-124]	; 0xffffff84
    1014:	vldr	d7, [r3, #24]
    1018:	vmov.f64	d0, d7
    101c:	bl	0 <coda_isNaN>
    1020:	mov	r3, r0
    1024:	cmp	r3, #0
    1028:	beq	1240 <read_att_array+0x850>
    102c:	ldr	r3, [fp, #-112]	; 0xffffff90
    1030:	ldr	lr, [r3, #52]	; 0x34
    1034:	ldr	r3, [fp, #-116]	; 0xffffff8c
    1038:	ldrd	r0, [r3]
    103c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1040:	mov	r2, r3
    1044:	asr	r3, r2, #31
    1048:	sub	ip, fp, #100	; 0x64
    104c:	str	ip, [sp, #8]
    1050:	strd	r2, [sp]
    1054:	mov	r2, r0
    1058:	mov	r3, r1
    105c:	mov	r0, lr
    1060:	bl	0 <read_bytes>
    1064:	mov	r3, r0
    1068:	cmp	r3, #0
    106c:	bge	1090 <read_att_array+0x6a0>
    1070:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1074:	bl	0 <free>
    1078:	ldr	r3, [fp, #-120]	; 0xffffff88
    107c:	ldr	r3, [r3]
    1080:	mov	r0, r3
    1084:	bl	0 <coda_dynamic_type_delete>
    1088:	mvn	r3, #0
    108c:	b	1480 <read_att_array+0xa90>
    1090:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1094:	sub	r3, r3, #1
    1098:	cmp	r3, #10
    109c:	ldrls	pc, [pc, r3, lsl #2]
    10a0:	b	122c <read_att_array+0x83c>
    10a4:	.word	0x000010d0
    10a8:	.word	0x0000122c
    10ac:	.word	0x000010e8
    10b0:	.word	0x0000110c
    10b4:	.word	0x00001130
    10b8:	.word	0x00001150
    10bc:	.word	0x0000116c
    10c0:	.word	0x00001184
    10c4:	.word	0x000011a8
    10c8:	.word	0x000011cc
    10cc:	.word	0x000011fc
    10d0:	ldrsb	r3, [fp, #-100]	; 0xffffff9c
    10d4:	vmov	s15, r3
    10d8:	vcvt.f64.s32	d7, s15
    10dc:	ldr	r3, [fp, #-124]	; 0xffffff84
    10e0:	vstr	d7, [r3, #24]
    10e4:	b	1240 <read_att_array+0x850>
    10e8:	sub	r3, fp, #100	; 0x64
    10ec:	mov	r0, r3
    10f0:	bl	1e4 <swap2>
    10f4:	ldrsh	r3, [fp, #-100]	; 0xffffff9c
    10f8:	vmov	s15, r3
    10fc:	vcvt.f64.s32	d7, s15
    1100:	ldr	r3, [fp, #-124]	; 0xffffff84
    1104:	vstr	d7, [r3, #24]
    1108:	b	1240 <read_att_array+0x850>
    110c:	sub	r3, fp, #100	; 0x64
    1110:	mov	r0, r3
    1114:	bl	27c <swap4>
    1118:	ldr	r3, [fp, #-100]	; 0xffffff9c
    111c:	vmov	s15, r3
    1120:	vcvt.f64.s32	d7, s15
    1124:	ldr	r3, [fp, #-124]	; 0xffffff84
    1128:	vstr	d7, [r3, #24]
    112c:	b	1240 <read_att_array+0x850>
    1130:	sub	r3, fp, #100	; 0x64
    1134:	mov	r0, r3
    1138:	bl	27c <swap4>
    113c:	vldr	s15, [fp, #-100]	; 0xffffff9c
    1140:	vcvt.f64.f32	d7, s15
    1144:	ldr	r3, [fp, #-124]	; 0xffffff84
    1148:	vstr	d7, [r3, #24]
    114c:	b	1240 <read_att_array+0x850>
    1150:	sub	r3, fp, #100	; 0x64
    1154:	mov	r0, r3
    1158:	bl	398 <swap8>
    115c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    1160:	ldr	r1, [fp, #-124]	; 0xffffff84
    1164:	strd	r2, [r1, #24]
    1168:	b	1240 <read_att_array+0x850>
    116c:	ldrb	r3, [fp, #-100]	; 0xffffff9c
    1170:	vmov	s15, r3
    1174:	vcvt.f64.u32	d7, s15
    1178:	ldr	r3, [fp, #-124]	; 0xffffff84
    117c:	vstr	d7, [r3, #24]
    1180:	b	1240 <read_att_array+0x850>
    1184:	sub	r3, fp, #100	; 0x64
    1188:	mov	r0, r3
    118c:	bl	1e4 <swap2>
    1190:	ldrh	r3, [fp, #-100]	; 0xffffff9c
    1194:	vmov	s15, r3
    1198:	vcvt.f64.u32	d7, s15
    119c:	ldr	r3, [fp, #-124]	; 0xffffff84
    11a0:	vstr	d7, [r3, #24]
    11a4:	b	1240 <read_att_array+0x850>
    11a8:	sub	r3, fp, #100	; 0x64
    11ac:	mov	r0, r3
    11b0:	bl	27c <swap4>
    11b4:	ldr	r3, [fp, #-100]	; 0xffffff9c
    11b8:	vmov	s15, r3
    11bc:	vcvt.f64.u32	d7, s15
    11c0:	ldr	r3, [fp, #-124]	; 0xffffff84
    11c4:	vstr	d7, [r3, #24]
    11c8:	b	1240 <read_att_array+0x850>
    11cc:	sub	r3, fp, #100	; 0x64
    11d0:	mov	r0, r3
    11d4:	bl	398 <swap8>
    11d8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    11dc:	mov	r0, r2
    11e0:	mov	r1, r3
    11e4:	bl	0 <__aeabi_l2d>
    11e8:	mov	r2, r0
    11ec:	mov	r3, r1
    11f0:	ldr	r1, [fp, #-124]	; 0xffffff84
    11f4:	strd	r2, [r1, #24]
    11f8:	b	1240 <read_att_array+0x850>
    11fc:	sub	r3, fp, #100	; 0x64
    1200:	mov	r0, r3
    1204:	bl	398 <swap8>
    1208:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    120c:	mov	r0, r2
    1210:	mov	r1, r3
    1214:	bl	0 <__aeabi_ul2d>
    1218:	mov	r2, r0
    121c:	mov	r3, r1
    1220:	ldr	r1, [fp, #-124]	; 0xffffff84
    1224:	strd	r2, [r1, #24]
    1228:	b	1240 <read_att_array+0x850>
    122c:	ldr	r3, [pc, #640]	; 14b4 <read_att_array+0xac4>
    1230:	ldr	r2, [pc, #640]	; 14b8 <read_att_array+0xac8>
    1234:	ldr	r1, [pc, #604]	; 1498 <read_att_array+0xaa8>
    1238:	ldr	r0, [pc, #636]	; 14bc <read_att_array+0xacc>
    123c:	bl	0 <__assert_fail>
    1240:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1244:	cmp	r3, #2
    1248:	bne	1280 <read_att_array+0x890>
    124c:	ldr	ip, [fp, #-64]	; 0xffffffc0
    1250:	ldr	r3, [fp, #-116]	; 0xffffff8c
    1254:	ldrd	r0, [r3]
    1258:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    125c:	strd	r2, [sp, #8]
    1260:	mov	r3, #0
    1264:	str	r3, [sp]
    1268:	mov	r2, r0
    126c:	mov	r3, r1
    1270:	mov	r0, ip
    1274:	bl	0 <coda_netcdf_basic_type_new>
    1278:	str	r0, [fp, #-20]	; 0xffffffec
    127c:	b	12b4 <read_att_array+0x8c4>
    1280:	ldr	ip, [fp, #-64]	; 0xffffffc0
    1284:	ldr	r3, [fp, #-116]	; 0xffffff8c
    1288:	ldrd	r0, [r3]
    128c:	mov	r2, #1
    1290:	mov	r3, #0
    1294:	strd	r2, [sp, #8]
    1298:	mov	r3, #0
    129c:	str	r3, [sp]
    12a0:	mov	r2, r0
    12a4:	mov	r3, r1
    12a8:	mov	r0, ip
    12ac:	bl	0 <coda_netcdf_basic_type_new>
    12b0:	str	r0, [fp, #-20]	; 0xffffffec
    12b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    12b8:	cmp	r3, #0
    12bc:	bne	12e0 <read_att_array+0x8f0>
    12c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    12c4:	bl	0 <free>
    12c8:	ldr	r3, [fp, #-120]	; 0xffffff88
    12cc:	ldr	r3, [r3]
    12d0:	mov	r0, r3
    12d4:	bl	0 <coda_dynamic_type_delete>
    12d8:	mvn	r3, #0
    12dc:	b	1480 <read_att_array+0xa90>
    12e0:	ldr	r3, [fp, #-116]	; 0xffffff8c
    12e4:	ldrd	r0, [r3]
    12e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12ec:	mov	r2, r3
    12f0:	asr	r3, r2, #31
    12f4:	adds	r2, r2, r0
    12f8:	adc	r3, r3, r1
    12fc:	ldr	r1, [fp, #-116]	; 0xffffff8c
    1300:	strd	r2, [r1]
    1304:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1308:	and	r3, r3, #3
    130c:	cmp	r3, #0
    1310:	beq	1340 <read_att_array+0x950>
    1314:	ldr	r3, [fp, #-116]	; 0xffffff8c
    1318:	ldrd	r0, [r3]
    131c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1320:	and	r3, r3, #3
    1324:	rsb	r3, r3, #4
    1328:	mov	r2, r3
    132c:	asr	r3, r2, #31
    1330:	adds	r2, r2, r0
    1334:	adc	r3, r3, r1
    1338:	ldr	r1, [fp, #-116]	; 0xffffff8c
    133c:	strd	r2, [r1]
    1340:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1344:	cmp	r3, #2
    1348:	beq	135c <read_att_array+0x96c>
    134c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    1350:	cmp	r3, #0
    1354:	cmpeq	r2, #1
    1358:	bne	13a8 <read_att_array+0x9b8>
    135c:	ldr	r3, [fp, #-120]	; 0xffffff88
    1360:	ldr	r0, [r3]
    1364:	mov	r3, #1
    1368:	ldr	r2, [fp, #-20]	; 0xffffffec
    136c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1370:	bl	0 <coda_mem_record_add_field>
    1374:	mov	r3, r0
    1378:	cmp	r3, #0
    137c:	beq	144c <read_att_array+0xa5c>
    1380:	ldr	r0, [fp, #-20]	; 0xffffffec
    1384:	bl	0 <coda_dynamic_type_delete>
    1388:	ldr	r0, [fp, #-32]	; 0xffffffe0
    138c:	bl	0 <free>
    1390:	ldr	r3, [fp, #-120]	; 0xffffff88
    1394:	ldr	r3, [r3]
    1398:	mov	r0, r3
    139c:	bl	0 <coda_dynamic_type_delete>
    13a0:	mvn	r3, #0
    13a4:	b	1480 <read_att_array+0xa90>
    13a8:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    13ac:	mov	r3, r2
    13b0:	str	r3, [fp, #-104]	; 0xffffff98
    13b4:	sub	r3, fp, #104	; 0x68
    13b8:	ldr	r2, [fp, #-20]	; 0xffffffec
    13bc:	mov	r1, r3
    13c0:	mov	r0, #1
    13c4:	bl	0 <coda_netcdf_array_new>
    13c8:	str	r0, [fp, #-36]	; 0xffffffdc
    13cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    13d0:	cmp	r3, #0
    13d4:	bne	1400 <read_att_array+0xa10>
    13d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    13dc:	bl	0 <coda_dynamic_type_delete>
    13e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    13e4:	bl	0 <free>
    13e8:	ldr	r3, [fp, #-120]	; 0xffffff88
    13ec:	ldr	r3, [r3]
    13f0:	mov	r0, r3
    13f4:	bl	0 <coda_dynamic_type_delete>
    13f8:	mvn	r3, #0
    13fc:	b	1480 <read_att_array+0xa90>
    1400:	ldr	r3, [fp, #-120]	; 0xffffff88
    1404:	ldr	r0, [r3]
    1408:	mov	r3, #1
    140c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1410:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1414:	bl	0 <coda_mem_record_add_field>
    1418:	mov	r3, r0
    141c:	cmp	r3, #0
    1420:	beq	144c <read_att_array+0xa5c>
    1424:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1428:	bl	0 <coda_dynamic_type_delete>
    142c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1430:	bl	0 <free>
    1434:	ldr	r3, [fp, #-120]	; 0xffffff88
    1438:	ldr	r3, [r3]
    143c:	mov	r0, r3
    1440:	bl	0 <coda_dynamic_type_delete>
    1444:	mvn	r3, #0
    1448:	b	1480 <read_att_array+0xa90>
    144c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1450:	bl	0 <free>
    1454:	ldr	r3, [fp, #-16]
    1458:	add	r3, r3, #1
    145c:	str	r3, [fp, #-16]
    1460:	ldr	r3, [fp, #-16]
    1464:	mov	r0, r3
    1468:	asr	r1, r0, #31
    146c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    1470:	cmp	r0, r2
    1474:	sbcs	r3, r1, r3
    1478:	blt	b64 <read_att_array+0x174>
    147c:	mov	r3, #0
    1480:	mov	r0, r3
    1484:	sub	sp, fp, #12
    1488:	pop	{r4, r5, fp, pc}
    148c:	.word	0x0000022c
    1490:	.word	0xfffffed4
    1494:	.word	0x00000270
    1498:	.word	0x000001e0
    149c:	.word	0x000001a8
    14a0:	.word	0x000002ac
    14a4:	.word	0x000002dc
    14a8:	.word	0x000002ec
    14ac:	.word	0x000002f8
    14b0:	.word	0x00000308
    14b4:	.word	0x00000484
    14b8:	.word	0x000001a1
    14bc:	.word	0x00000314

000014c0 <read_var_array>:
    14c0:	push	{r4, r5, fp, lr}
    14c4:	add	fp, sp, #12
    14c8:	sub	sp, sp, #184	; 0xb8
    14cc:	str	r0, [fp, #-168]	; 0xffffff58
    14d0:	str	r1, [fp, #-172]	; 0xffffff54
    14d4:	strd	r2, [fp, #-180]	; 0xffffff4c
    14d8:	ldr	r3, [fp, #-168]	; 0xffffff58
    14dc:	ldr	ip, [r3, #52]	; 0x34
    14e0:	ldr	r3, [fp, #-172]	; 0xffffff54
    14e4:	ldrd	r0, [r3]
    14e8:	sub	r3, fp, #56	; 0x38
    14ec:	str	r3, [sp, #8]
    14f0:	mov	r2, #4
    14f4:	mov	r3, #0
    14f8:	strd	r2, [sp]
    14fc:	mov	r2, r0
    1500:	mov	r3, r1
    1504:	mov	r0, ip
    1508:	bl	0 <read_bytes>
    150c:	mov	r3, r0
    1510:	cmp	r3, #0
    1514:	bge	1548 <read_var_array+0x88>
    1518:	bl	0 <__errno_location>
    151c:	mov	r3, r0
    1520:	ldr	r3, [r3]
    1524:	mov	r0, r3
    1528:	bl	0 <strerror>
    152c:	mov	r3, r0
    1530:	mov	r2, r3
    1534:	ldr	r1, [pc, #1908]	; 1cb0 <read_var_array+0x7f0>
    1538:	mvn	r0, #21
    153c:	bl	0 <coda_set_error>
    1540:	mvn	r3, #0
    1544:	b	1f80 <read_var_array+0xac0>
    1548:	sub	r3, fp, #56	; 0x38
    154c:	mov	r0, r3
    1550:	bl	27c <swap4>
    1554:	ldr	r3, [fp, #-172]	; 0xffffff54
    1558:	ldrd	r2, [r3]
    155c:	adds	r2, r2, #4
    1560:	adc	r3, r3, #0
    1564:	ldr	r1, [fp, #-172]	; 0xffffff54
    1568:	strd	r2, [r1]
    156c:	sub	r3, fp, #68	; 0x44
    1570:	mov	r2, r3
    1574:	ldr	r1, [fp, #-172]	; 0xffffff54
    1578:	ldr	r0, [fp, #-168]	; 0xffffff58
    157c:	bl	5bc <read_length_value>
    1580:	mov	r3, r0
    1584:	cmp	r3, #0
    1588:	beq	1594 <read_var_array+0xd4>
    158c:	mvn	r3, #0
    1590:	b	1f80 <read_var_array+0xac0>
    1594:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1598:	cmp	r3, #0
    159c:	bne	15c8 <read_var_array+0x108>
    15a0:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    15a4:	orrs	r3, r2, r3
    15a8:	beq	15c0 <read_var_array+0x100>
    15ac:	ldr	r1, [pc, #1792]	; 1cb4 <read_var_array+0x7f4>
    15b0:	ldr	r0, [pc, #1792]	; 1cb8 <read_var_array+0x7f8>
    15b4:	bl	0 <coda_set_error>
    15b8:	mvn	r3, #0
    15bc:	b	1f80 <read_var_array+0xac0>
    15c0:	mov	r3, #0
    15c4:	b	1f80 <read_var_array+0xac0>
    15c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    15cc:	cmp	r3, #11
    15d0:	beq	15e8 <read_var_array+0x128>
    15d4:	ldr	r1, [pc, #1760]	; 1cbc <read_var_array+0x7fc>
    15d8:	ldr	r0, [pc, #1752]	; 1cb8 <read_var_array+0x7f8>
    15dc:	bl	0 <coda_set_error>
    15e0:	mvn	r3, #0
    15e4:	b	1f80 <read_var_array+0xac0>
    15e8:	mov	r3, #0
    15ec:	str	r3, [fp, #-16]
    15f0:	b	1f60 <read_var_array+0xaa0>
    15f4:	mov	r3, #0
    15f8:	str	r3, [fp, #-72]	; 0xffffffb8
    15fc:	mov	r3, #0
    1600:	str	r3, [fp, #-28]	; 0xffffffe4
    1604:	mov	r3, #0
    1608:	str	r3, [fp, #-32]	; 0xffffffe0
    160c:	mov	r3, #0
    1610:	str	r3, [fp, #-36]	; 0xffffffdc
    1614:	sub	r3, fp, #92	; 0x5c
    1618:	mov	r2, r3
    161c:	ldr	r1, [fp, #-172]	; 0xffffff54
    1620:	ldr	r0, [fp, #-168]	; 0xffffff58
    1624:	bl	5bc <read_length_value>
    1628:	mov	r3, r0
    162c:	cmp	r3, #0
    1630:	beq	163c <read_var_array+0x17c>
    1634:	mvn	r3, #0
    1638:	b	1f80 <read_var_array+0xac0>
    163c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    1640:	mov	r3, r2
    1644:	add	r3, r3, #1
    1648:	mov	r0, r3
    164c:	bl	0 <malloc>
    1650:	mov	r3, r0
    1654:	str	r3, [fp, #-48]	; 0xffffffd0
    1658:	ldr	r3, [fp, #-48]	; 0xffffffd0
    165c:	cmp	r3, #0
    1660:	bne	1694 <read_var_array+0x1d4>
    1664:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    1668:	mov	r3, r2
    166c:	add	r3, r3, #1
    1670:	mov	r2, r3
    1674:	ldr	r3, [pc, #1604]	; 1cc0 <read_var_array+0x800>
    1678:	str	r3, [sp]
    167c:	ldr	r3, [pc, #1600]	; 1cc4 <read_var_array+0x804>
    1680:	ldr	r1, [pc, #1600]	; 1cc8 <read_var_array+0x808>
    1684:	mvn	r0, #0
    1688:	bl	0 <coda_set_error>
    168c:	mvn	r3, #0
    1690:	b	1f80 <read_var_array+0xac0>
    1694:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    1698:	ldr	r3, [fp, #-48]	; 0xffffffd0
    169c:	add	r3, r3, r2
    16a0:	mov	r2, #0
    16a4:	strb	r2, [r3]
    16a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    16ac:	ldr	lr, [r3, #52]	; 0x34
    16b0:	ldr	r3, [fp, #-172]	; 0xffffff54
    16b4:	ldrd	r0, [r3]
    16b8:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    16bc:	ldr	ip, [fp, #-48]	; 0xffffffd0
    16c0:	str	ip, [sp, #8]
    16c4:	strd	r2, [sp]
    16c8:	mov	r2, r0
    16cc:	mov	r3, r1
    16d0:	mov	r0, lr
    16d4:	bl	0 <read_bytes>
    16d8:	mov	r3, r0
    16dc:	cmp	r3, #0
    16e0:	bge	16f4 <read_var_array+0x234>
    16e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    16e8:	bl	0 <free>
    16ec:	mvn	r3, #0
    16f0:	b	1f80 <read_var_array+0xac0>
    16f4:	ldr	r3, [fp, #-172]	; 0xffffff54
    16f8:	ldrd	r0, [r3]
    16fc:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    1700:	adds	r2, r2, r0
    1704:	adc	r3, r3, r1
    1708:	ldr	r1, [fp, #-172]	; 0xffffff54
    170c:	strd	r2, [r1]
    1710:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    1714:	mov	r0, #3
    1718:	mov	r1, #0
    171c:	and	r2, r2, r0
    1720:	and	r3, r3, r1
    1724:	orrs	r3, r2, r3
    1728:	beq	1768 <read_var_array+0x2a8>
    172c:	ldr	r3, [fp, #-172]	; 0xffffff54
    1730:	ldrd	r0, [r3]
    1734:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    1738:	mov	r4, #3
    173c:	mov	r5, #0
    1740:	and	r2, r2, r4
    1744:	and	r3, r3, r5
    1748:	mov	r4, #4
    174c:	mov	r5, #0
    1750:	subs	r2, r4, r2
    1754:	sbc	r3, r5, r3
    1758:	adds	r2, r2, r0
    175c:	adc	r3, r3, r1
    1760:	ldr	r1, [fp, #-172]	; 0xffffff54
    1764:	strd	r2, [r1]
    1768:	sub	r3, fp, #108	; 0x6c
    176c:	mov	r2, r3
    1770:	ldr	r1, [fp, #-172]	; 0xffffff54
    1774:	ldr	r0, [fp, #-168]	; 0xffffff58
    1778:	bl	5bc <read_length_value>
    177c:	mov	r3, r0
    1780:	cmp	r3, #0
    1784:	beq	1790 <read_var_array+0x2d0>
    1788:	mvn	r3, #0
    178c:	b	1f80 <read_var_array+0xac0>
    1790:	mov	r3, #0
    1794:	str	r3, [fp, #-40]	; 0xffffffd8
    1798:	mov	r3, #0
    179c:	str	r3, [fp, #-44]	; 0xffffffd4
    17a0:	b	1910 <read_var_array+0x450>
    17a4:	sub	r3, fp, #124	; 0x7c
    17a8:	mov	r2, r3
    17ac:	ldr	r1, [fp, #-172]	; 0xffffff54
    17b0:	ldr	r0, [fp, #-168]	; 0xffffff58
    17b4:	bl	5bc <read_length_value>
    17b8:	mov	r3, r0
    17bc:	cmp	r3, #0
    17c0:	beq	17cc <read_var_array+0x30c>
    17c4:	mvn	r3, #0
    17c8:	b	1f80 <read_var_array+0xac0>
    17cc:	ldrd	r2, [fp, #-124]	; 0xffffff84
    17d0:	cmp	r2, #0
    17d4:	sbcs	r3, r3, #0
    17d8:	blt	17f0 <read_var_array+0x330>
    17dc:	ldrd	r0, [fp, #-124]	; 0xffffff84
    17e0:	ldrd	r2, [fp, #-180]	; 0xffffff4c
    17e4:	cmp	r0, r2
    17e8:	sbcs	r3, r1, r3
    17ec:	blt	1810 <read_var_array+0x350>
    17f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    17f4:	bl	0 <free>
    17f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    17fc:	ldr	r1, [pc, #1224]	; 1ccc <read_var_array+0x80c>
    1800:	ldr	r0, [pc, #1200]	; 1cb8 <read_var_array+0x7f8>
    1804:	bl	0 <coda_set_error>
    1808:	mvn	r3, #0
    180c:	b	1f80 <read_var_array+0xac0>
    1810:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1814:	mov	r0, r3
    1818:	asr	r1, r0, #31
    181c:	ldrd	r2, [fp, #-108]	; 0xffffff94
    1820:	subs	r2, r2, #1
    1824:	sbc	r3, r3, #0
    1828:	cmp	r1, r3
    182c:	cmpeq	r0, r2
    1830:	bne	1860 <read_var_array+0x3a0>
    1834:	ldrd	r2, [fp, #-124]	; 0xffffff84
    1838:	mov	r3, r2
    183c:	lsl	r3, r3, #3
    1840:	ldr	r2, [fp, #4]
    1844:	add	r3, r2, r3
    1848:	ldrd	r2, [r3]
    184c:	mov	r3, r2
    1850:	str	r3, [fp, #-28]	; 0xffffffe4
    1854:	mov	r3, #1
    1858:	str	r3, [fp, #-32]	; 0xffffffe0
    185c:	b	18d0 <read_var_array+0x410>
    1860:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1864:	cmp	r3, #7
    1868:	bgt	18a8 <read_var_array+0x3e8>
    186c:	ldrd	r2, [fp, #-124]	; 0xffffff84
    1870:	mov	r3, r2
    1874:	lsl	r3, r3, #3
    1878:	ldr	r2, [fp, #4]
    187c:	add	r3, r2, r3
    1880:	ldrd	r2, [r3]
    1884:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1888:	lsl	r3, r3, #2
    188c:	sub	r1, fp, #12
    1890:	add	r3, r1, r3
    1894:	str	r2, [r3, #-148]	; 0xffffff6c
    1898:	ldr	r3, [fp, #-40]	; 0xffffffd8
    189c:	add	r3, r3, #1
    18a0:	str	r3, [fp, #-40]	; 0xffffffd8
    18a4:	b	18d0 <read_var_array+0x410>
    18a8:	ldr	r1, [fp, #-132]	; 0xffffff7c
    18ac:	ldrd	r2, [fp, #-124]	; 0xffffff84
    18b0:	mov	r3, r2
    18b4:	lsl	r3, r3, #3
    18b8:	ldr	r2, [fp, #4]
    18bc:	add	r3, r2, r3
    18c0:	ldrd	r2, [r3]
    18c4:	mov	r3, r2
    18c8:	mul	r3, r3, r1
    18cc:	str	r3, [fp, #-132]	; 0xffffff7c
    18d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    18d4:	cmp	r3, #0
    18d8:	bne	1904 <read_var_array+0x444>
    18dc:	ldr	r3, [fp, #8]
    18e0:	mov	r0, r3
    18e4:	asr	r1, r0, #31
    18e8:	ldrd	r2, [fp, #-124]	; 0xffffff84
    18ec:	cmp	r1, r3
    18f0:	cmpeq	r0, r2
    18f4:	moveq	r3, #1
    18f8:	movne	r3, #0
    18fc:	uxtb	r3, r3
    1900:	str	r3, [fp, #-36]	; 0xffffffdc
    1904:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1908:	add	r3, r3, #1
    190c:	str	r3, [fp, #-44]	; 0xffffffd4
    1910:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1914:	mov	r0, r3
    1918:	asr	r1, r0, #31
    191c:	ldrd	r2, [fp, #-108]	; 0xffffff94
    1920:	cmp	r0, r2
    1924:	sbcs	r3, r1, r3
    1928:	blt	17a4 <read_var_array+0x2e4>
    192c:	bl	0 <coda_NaN>
    1930:	vmov.f64	d7, d0
    1934:	vmov.f64	d3, d7
    1938:	vldr	d2, [pc, #864]	; 1ca0 <read_var_array+0x7e0>
    193c:	vldr	d1, [pc, #868]	; 1ca8 <read_var_array+0x7e8>
    1940:	vldr	d0, [pc, #864]	; 1ca8 <read_var_array+0x7e8>
    1944:	bl	0 <coda_conversion_new>
    1948:	str	r0, [fp, #-24]	; 0xffffffe8
    194c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1950:	cmp	r3, #0
    1954:	bne	1968 <read_var_array+0x4a8>
    1958:	ldr	r0, [fp, #-48]	; 0xffffffd0
    195c:	bl	0 <free>
    1960:	mvn	r3, #0
    1964:	b	1f80 <read_var_array+0xac0>
    1968:	sub	r2, fp, #72	; 0x48
    196c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1970:	ldr	r1, [fp, #-172]	; 0xffffff54
    1974:	ldr	r0, [fp, #-168]	; 0xffffff58
    1978:	bl	9f0 <read_att_array>
    197c:	mov	r3, r0
    1980:	cmp	r3, #0
    1984:	beq	19a0 <read_var_array+0x4e0>
    1988:	ldr	r0, [fp, #-24]	; 0xffffffe8
    198c:	bl	0 <coda_conversion_delete>
    1990:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1994:	bl	0 <free>
    1998:	mvn	r3, #0
    199c:	b	1f80 <read_var_array+0xac0>
    19a0:	ldr	r3, [fp, #-168]	; 0xffffff58
    19a4:	ldr	ip, [r3, #52]	; 0x34
    19a8:	ldr	r3, [fp, #-172]	; 0xffffff54
    19ac:	ldrd	r0, [r3]
    19b0:	sub	r3, fp, #96	; 0x60
    19b4:	str	r3, [sp, #8]
    19b8:	mov	r2, #4
    19bc:	mov	r3, #0
    19c0:	strd	r2, [sp]
    19c4:	mov	r2, r0
    19c8:	mov	r3, r1
    19cc:	mov	r0, ip
    19d0:	bl	0 <read_bytes>
    19d4:	mov	r3, r0
    19d8:	cmp	r3, #0
    19dc:	bge	1a04 <read_var_array+0x544>
    19e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    19e4:	mov	r0, r3
    19e8:	bl	0 <coda_dynamic_type_delete>
    19ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    19f0:	bl	0 <coda_conversion_delete>
    19f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    19f8:	bl	0 <free>
    19fc:	mvn	r3, #0
    1a00:	b	1f80 <read_var_array+0xac0>
    1a04:	sub	r3, fp, #96	; 0x60
    1a08:	mov	r0, r3
    1a0c:	bl	27c <swap4>
    1a10:	ldr	r3, [fp, #-172]	; 0xffffff54
    1a14:	ldrd	r2, [r3]
    1a18:	adds	r2, r2, #4
    1a1c:	adc	r3, r3, #0
    1a20:	ldr	r1, [fp, #-172]	; 0xffffff54
    1a24:	strd	r2, [r1]
    1a28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a2c:	vldr	d7, [r3]
    1a30:	vldr	d6, [pc, #624]	; 1ca8 <read_var_array+0x7e8>
    1a34:	vcmp.f64	d7, d6
    1a38:	vmrs	APSR_nzcv, fpscr
    1a3c:	bne	1a98 <read_var_array+0x5d8>
    1a40:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a44:	vldr	d7, [r3, #16]
    1a48:	vcmp.f64	d7, #0.0
    1a4c:	vmrs	APSR_nzcv, fpscr
    1a50:	bne	1a98 <read_var_array+0x5d8>
    1a54:	ldr	r3, [fp, #-96]	; 0xffffffa0
    1a58:	cmp	r3, #5
    1a5c:	beq	1a6c <read_var_array+0x5ac>
    1a60:	ldr	r3, [fp, #-96]	; 0xffffffa0
    1a64:	cmp	r3, #6
    1a68:	bne	1a88 <read_var_array+0x5c8>
    1a6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a70:	vldr	d7, [r3, #24]
    1a74:	vmov.f64	d0, d7
    1a78:	bl	0 <coda_isNaN>
    1a7c:	mov	r3, r0
    1a80:	cmp	r3, #0
    1a84:	beq	1a98 <read_var_array+0x5d8>
    1a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1a8c:	bl	0 <coda_conversion_delete>
    1a90:	mov	r3, #0
    1a94:	str	r3, [fp, #-24]	; 0xffffffe8
    1a98:	sub	r3, fp, #116	; 0x74
    1a9c:	mov	r2, r3
    1aa0:	ldr	r1, [fp, #-172]	; 0xffffff54
    1aa4:	ldr	r0, [fp, #-168]	; 0xffffff58
    1aa8:	bl	5bc <read_length_value>
    1aac:	mov	r3, r0
    1ab0:	cmp	r3, #0
    1ab4:	beq	1adc <read_var_array+0x61c>
    1ab8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1abc:	mov	r0, r3
    1ac0:	bl	0 <coda_dynamic_type_delete>
    1ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ac8:	bl	0 <coda_conversion_delete>
    1acc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1ad0:	bl	0 <free>
    1ad4:	mvn	r3, #0
    1ad8:	b	1f80 <read_var_array+0xac0>
    1adc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1ae0:	cmp	r3, #0
    1ae4:	beq	1b04 <read_var_array+0x644>
    1ae8:	ldr	r3, [fp, #-168]	; 0xffffff58
    1aec:	ldr	r1, [r3, #60]	; 0x3c
    1af0:	ldrd	r2, [fp, #-116]	; 0xffffff8c
    1af4:	mov	r3, r2
    1af8:	add	r2, r1, r3
    1afc:	ldr	r3, [fp, #-168]	; 0xffffff58
    1b00:	str	r2, [r3, #60]	; 0x3c
    1b04:	ldr	r3, [fp, #-168]	; 0xffffff58
    1b08:	ldr	r3, [r3, #56]	; 0x38
    1b0c:	cmp	r3, #1
    1b10:	bne	1bb0 <read_var_array+0x6f0>
    1b14:	ldr	r3, [fp, #-168]	; 0xffffff58
    1b18:	ldr	ip, [r3, #52]	; 0x34
    1b1c:	ldr	r3, [fp, #-172]	; 0xffffff54
    1b20:	ldrd	r0, [r3]
    1b24:	sub	r3, fp, #128	; 0x80
    1b28:	str	r3, [sp, #8]
    1b2c:	mov	r2, #4
    1b30:	mov	r3, #0
    1b34:	strd	r2, [sp]
    1b38:	mov	r2, r0
    1b3c:	mov	r3, r1
    1b40:	mov	r0, ip
    1b44:	bl	0 <read_bytes>
    1b48:	mov	r3, r0
    1b4c:	cmp	r3, #0
    1b50:	bge	1b78 <read_var_array+0x6b8>
    1b54:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1b58:	mov	r0, r3
    1b5c:	bl	0 <coda_dynamic_type_delete>
    1b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1b64:	bl	0 <coda_conversion_delete>
    1b68:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1b6c:	bl	0 <free>
    1b70:	mvn	r3, #0
    1b74:	b	1f80 <read_var_array+0xac0>
    1b78:	sub	r3, fp, #128	; 0x80
    1b7c:	mov	r0, r3
    1b80:	bl	27c <swap4>
    1b84:	ldr	r3, [fp, #-128]	; 0xffffff80
    1b88:	mov	r2, r3
    1b8c:	asr	r3, r2, #31
    1b90:	strd	r2, [fp, #-84]	; 0xffffffac
    1b94:	ldr	r3, [fp, #-172]	; 0xffffff54
    1b98:	ldrd	r2, [r3]
    1b9c:	adds	r2, r2, #4
    1ba0:	adc	r3, r3, #0
    1ba4:	ldr	r1, [fp, #-172]	; 0xffffff54
    1ba8:	strd	r2, [r1]
    1bac:	b	1c38 <read_var_array+0x778>
    1bb0:	ldr	r3, [fp, #-168]	; 0xffffff58
    1bb4:	ldr	ip, [r3, #52]	; 0x34
    1bb8:	ldr	r3, [fp, #-172]	; 0xffffff54
    1bbc:	ldrd	r0, [r3]
    1bc0:	sub	r3, fp, #84	; 0x54
    1bc4:	str	r3, [sp, #8]
    1bc8:	mov	r2, #8
    1bcc:	mov	r3, #0
    1bd0:	strd	r2, [sp]
    1bd4:	mov	r2, r0
    1bd8:	mov	r3, r1
    1bdc:	mov	r0, ip
    1be0:	bl	0 <read_bytes>
    1be4:	mov	r3, r0
    1be8:	cmp	r3, #0
    1bec:	bge	1c14 <read_var_array+0x754>
    1bf0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1bf4:	mov	r0, r3
    1bf8:	bl	0 <coda_dynamic_type_delete>
    1bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c00:	bl	0 <coda_conversion_delete>
    1c04:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1c08:	bl	0 <free>
    1c0c:	mvn	r3, #0
    1c10:	b	1f80 <read_var_array+0xac0>
    1c14:	sub	r3, fp, #84	; 0x54
    1c18:	mov	r0, r3
    1c1c:	bl	398 <swap8>
    1c20:	ldr	r3, [fp, #-172]	; 0xffffff54
    1c24:	ldrd	r2, [r3]
    1c28:	adds	r2, r2, #8
    1c2c:	adc	r3, r3, #0
    1c30:	ldr	r1, [fp, #-172]	; 0xffffff54
    1c34:	strd	r2, [r1]
    1c38:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1c3c:	cmp	r3, #0
    1c40:	beq	1d48 <read_var_array+0x888>
    1c44:	ldr	r3, [fp, #-96]	; 0xffffffa0
    1c48:	cmp	r3, #2
    1c4c:	bne	1cd0 <read_var_array+0x810>
    1c50:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1c54:	cmp	r3, #0
    1c58:	bne	1c68 <read_var_array+0x7a8>
    1c5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1c60:	cmp	r3, #0
    1c64:	bne	1cd0 <read_var_array+0x810>
    1c68:	ldr	ip, [fp, #-96]	; 0xffffffa0
    1c6c:	ldrd	r0, [fp, #-84]	; 0xffffffac
    1c70:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c74:	mov	r2, r3
    1c78:	asr	r3, r2, #31
    1c7c:	strd	r2, [sp, #8]
    1c80:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1c84:	str	r3, [sp]
    1c88:	mov	r2, r0
    1c8c:	mov	r3, r1
    1c90:	mov	r0, ip
    1c94:	bl	0 <coda_netcdf_basic_type_new>
    1c98:	str	r0, [fp, #-20]	; 0xffffffec
    1c9c:	b	1d78 <read_var_array+0x8b8>
	...
    1cac:	.word	0x3ff00000
    1cb0:	.word	0x00000108
    1cb4:	.word	0x00000318
    1cb8:	.word	0xfffffed4
    1cbc:	.word	0x0000035c
    1cc0:	.word	0x00000222
    1cc4:	.word	0x000001e0
    1cc8:	.word	0x000001a8
    1ccc:	.word	0x00000394
    1cd0:	ldr	ip, [fp, #-96]	; 0xffffffa0
    1cd4:	ldrd	r0, [fp, #-84]	; 0xffffffac
    1cd8:	mov	r2, #1
    1cdc:	mov	r3, #0
    1ce0:	strd	r2, [sp, #8]
    1ce4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1ce8:	str	r3, [sp]
    1cec:	mov	r2, r0
    1cf0:	mov	r3, r1
    1cf4:	mov	r0, ip
    1cf8:	bl	0 <coda_netcdf_basic_type_new>
    1cfc:	str	r0, [fp, #-20]	; 0xffffffec
    1d00:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1d04:	cmp	r3, #7
    1d08:	bgt	1d34 <read_var_array+0x874>
    1d0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1d10:	lsl	r3, r3, #2
    1d14:	sub	r2, fp, #12
    1d18:	add	r3, r2, r3
    1d1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1d20:	str	r2, [r3, #-148]	; 0xffffff6c
    1d24:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1d28:	add	r3, r3, #1
    1d2c:	str	r3, [fp, #-40]	; 0xffffffd8
    1d30:	b	1d78 <read_var_array+0x8b8>
    1d34:	ldr	r3, [fp, #-132]	; 0xffffff7c
    1d38:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1d3c:	mul	r3, r2, r3
    1d40:	str	r3, [fp, #-132]	; 0xffffff7c
    1d44:	b	1d78 <read_var_array+0x8b8>
    1d48:	ldr	ip, [fp, #-96]	; 0xffffffa0
    1d4c:	ldrd	r0, [fp, #-84]	; 0xffffffac
    1d50:	mov	r2, #1
    1d54:	mov	r3, #0
    1d58:	strd	r2, [sp, #8]
    1d5c:	mov	r3, #0
    1d60:	str	r3, [sp]
    1d64:	mov	r2, r0
    1d68:	mov	r3, r1
    1d6c:	mov	r0, ip
    1d70:	bl	0 <coda_netcdf_basic_type_new>
    1d74:	str	r0, [fp, #-20]	; 0xffffffec
    1d78:	ldr	r3, [fp, #-20]	; 0xffffffec
    1d7c:	cmp	r3, #0
    1d80:	bne	1da8 <read_var_array+0x8e8>
    1d84:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1d88:	mov	r0, r3
    1d8c:	bl	0 <coda_dynamic_type_delete>
    1d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d94:	bl	0 <coda_conversion_delete>
    1d98:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1d9c:	bl	0 <free>
    1da0:	mvn	r3, #0
    1da4:	b	1f80 <read_var_array+0xac0>
    1da8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1dac:	cmp	r3, #0
    1db0:	beq	1df0 <read_var_array+0x930>
    1db4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1db8:	ldr	r0, [fp, #-20]	; 0xffffffec
    1dbc:	bl	0 <coda_netcdf_basic_type_set_conversion>
    1dc0:	mov	r3, r0
    1dc4:	cmp	r3, #0
    1dc8:	beq	1df0 <read_var_array+0x930>
    1dcc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1dd0:	mov	r0, r3
    1dd4:	bl	0 <coda_dynamic_type_delete>
    1dd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ddc:	bl	0 <coda_conversion_delete>
    1de0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1de4:	bl	0 <free>
    1de8:	mvn	r3, #0
    1dec:	b	1f80 <read_var_array+0xac0>
    1df0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1df4:	cmp	r3, #0
    1df8:	bne	1e80 <read_var_array+0x9c0>
    1dfc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1e00:	cmp	r3, #0
    1e04:	beq	1e48 <read_var_array+0x988>
    1e08:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1e0c:	mov	r1, r3
    1e10:	ldr	r0, [fp, #-20]	; 0xffffffec
    1e14:	bl	0 <coda_netcdf_basic_type_set_attributes>
    1e18:	mov	r3, r0
    1e1c:	cmp	r3, #0
    1e20:	beq	1e48 <read_var_array+0x988>
    1e24:	ldr	r0, [fp, #-20]	; 0xffffffec
    1e28:	bl	0 <coda_dynamic_type_delete>
    1e2c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1e30:	mov	r0, r3
    1e34:	bl	0 <coda_dynamic_type_delete>
    1e38:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1e3c:	bl	0 <free>
    1e40:	mvn	r3, #0
    1e44:	b	1f80 <read_var_array+0xac0>
    1e48:	mov	r3, #1
    1e4c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1e50:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1e54:	ldr	r0, [fp, #12]
    1e58:	bl	0 <coda_mem_record_add_field>
    1e5c:	mov	r3, r0
    1e60:	cmp	r3, #0
    1e64:	beq	1f4c <read_var_array+0xa8c>
    1e68:	ldr	r0, [fp, #-20]	; 0xffffffec
    1e6c:	bl	0 <coda_dynamic_type_delete>
    1e70:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1e74:	bl	0 <free>
    1e78:	mvn	r3, #0
    1e7c:	b	1f80 <read_var_array+0xac0>
    1e80:	sub	r3, fp, #160	; 0xa0
    1e84:	ldr	r2, [fp, #-20]	; 0xffffffec
    1e88:	mov	r1, r3
    1e8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1e90:	bl	0 <coda_netcdf_array_new>
    1e94:	str	r0, [fp, #-52]	; 0xffffffcc
    1e98:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e9c:	cmp	r3, #0
    1ea0:	bne	1ec8 <read_var_array+0xa08>
    1ea4:	ldr	r0, [fp, #-20]	; 0xffffffec
    1ea8:	bl	0 <coda_dynamic_type_delete>
    1eac:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1eb0:	mov	r0, r3
    1eb4:	bl	0 <coda_dynamic_type_delete>
    1eb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1ebc:	bl	0 <free>
    1ec0:	mvn	r3, #0
    1ec4:	b	1f80 <read_var_array+0xac0>
    1ec8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1ecc:	cmp	r3, #0
    1ed0:	beq	1f14 <read_var_array+0xa54>
    1ed4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1ed8:	mov	r1, r3
    1edc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1ee0:	bl	0 <coda_netcdf_array_set_attributes>
    1ee4:	mov	r3, r0
    1ee8:	cmp	r3, #0
    1eec:	beq	1f14 <read_var_array+0xa54>
    1ef0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1ef4:	bl	0 <coda_dynamic_type_delete>
    1ef8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1efc:	mov	r0, r3
    1f00:	bl	0 <coda_dynamic_type_delete>
    1f04:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f08:	bl	0 <free>
    1f0c:	mvn	r3, #0
    1f10:	b	1f80 <read_var_array+0xac0>
    1f14:	mov	r3, #1
    1f18:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1f1c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f20:	ldr	r0, [fp, #12]
    1f24:	bl	0 <coda_mem_record_add_field>
    1f28:	mov	r3, r0
    1f2c:	cmp	r3, #0
    1f30:	beq	1f4c <read_var_array+0xa8c>
    1f34:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1f38:	bl	0 <coda_dynamic_type_delete>
    1f3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f40:	bl	0 <free>
    1f44:	mvn	r3, #0
    1f48:	b	1f80 <read_var_array+0xac0>
    1f4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f50:	bl	0 <free>
    1f54:	ldr	r3, [fp, #-16]
    1f58:	add	r3, r3, #1
    1f5c:	str	r3, [fp, #-16]
    1f60:	ldr	r3, [fp, #-16]
    1f64:	mov	r0, r3
    1f68:	asr	r1, r0, #31
    1f6c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    1f70:	cmp	r0, r2
    1f74:	sbcs	r3, r1, r3
    1f78:	blt	15f4 <read_var_array+0x134>
    1f7c:	mov	r3, #0
    1f80:	mov	r0, r3
    1f84:	sub	sp, fp, #12
    1f88:	pop	{r4, r5, fp, pc}

00001f8c <coda_netcdf_reopen>:
    1f8c:	push	{fp, lr}
    1f90:	add	fp, sp, #4
    1f94:	sub	sp, sp, #88	; 0x58
    1f98:	str	r0, [fp, #-72]	; 0xffffffb8
    1f9c:	mov	r3, #0
    1fa0:	str	r3, [fp, #-48]	; 0xffffffd0
    1fa4:	mov	r2, #0
    1fa8:	mov	r3, #0
    1fac:	strd	r2, [fp, #-60]	; 0xffffffc4
    1fb0:	mvn	r3, #0
    1fb4:	str	r3, [fp, #-64]	; 0xffffffc0
    1fb8:	mov	r0, #64	; 0x40
    1fbc:	bl	0 <malloc>
    1fc0:	mov	r3, r0
    1fc4:	str	r3, [fp, #-8]
    1fc8:	ldr	r3, [fp, #-8]
    1fcc:	cmp	r3, #0
    1fd0:	bne	2008 <coda_netcdf_reopen+0x7c>
    1fd4:	ldr	r3, [pc, #1152]	; 245c <coda_netcdf_reopen+0x4d0>
    1fd8:	str	r3, [sp]
    1fdc:	ldr	r3, [pc, #1148]	; 2460 <coda_netcdf_reopen+0x4d4>
    1fe0:	mov	r2, #64	; 0x40
    1fe4:	ldr	r1, [pc, #1144]	; 2464 <coda_netcdf_reopen+0x4d8>
    1fe8:	mvn	r0, #0
    1fec:	bl	0 <coda_set_error>
    1ff0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1ff4:	ldr	r3, [r3]
    1ff8:	mov	r0, r3
    1ffc:	bl	0 <coda_close>
    2000:	mvn	r3, #0
    2004:	b	2450 <coda_netcdf_reopen+0x4c4>
    2008:	ldr	r3, [fp, #-8]
    200c:	mov	r2, #0
    2010:	str	r2, [r3]
    2014:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2018:	ldr	r3, [r3]
    201c:	ldrd	r2, [r3, #8]
    2020:	ldr	r1, [fp, #-8]
    2024:	strd	r2, [r1, #8]
    2028:	ldr	r3, [fp, #-8]
    202c:	mov	r2, #6
    2030:	str	r2, [r3, #16]
    2034:	ldr	r3, [fp, #-8]
    2038:	mov	r2, #0
    203c:	str	r2, [r3, #20]
    2040:	ldr	r3, [fp, #-8]
    2044:	mov	r2, #0
    2048:	str	r2, [r3, #24]
    204c:	ldr	r3, [fp, #-8]
    2050:	mov	r2, #0
    2054:	str	r2, [r3, #28]
    2058:	ldr	r3, [fp, #-8]
    205c:	mov	r2, #0
    2060:	str	r2, [r3, #32]
    2064:	ldr	r1, [fp, #-8]
    2068:	mov	r2, #0
    206c:	mov	r3, #0
    2070:	strd	r2, [r1, #40]	; 0x28
    2074:	ldr	r3, [fp, #-8]
    2078:	mov	r2, #0
    207c:	str	r2, [r3, #48]	; 0x30
    2080:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2084:	ldr	r2, [r3]
    2088:	ldr	r3, [fp, #-8]
    208c:	str	r2, [r3, #52]	; 0x34
    2090:	ldr	r3, [fp, #-8]
    2094:	mov	r2, #1
    2098:	str	r2, [r3, #56]	; 0x38
    209c:	ldr	r3, [fp, #-8]
    20a0:	mov	r2, #0
    20a4:	str	r2, [r3, #60]	; 0x3c
    20a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    20ac:	ldr	r3, [r3]
    20b0:	ldr	r3, [r3]
    20b4:	mov	r0, r3
    20b8:	bl	0 <strdup>
    20bc:	mov	r3, r0
    20c0:	mov	r2, r3
    20c4:	ldr	r3, [fp, #-8]
    20c8:	str	r2, [r3]
    20cc:	ldr	r3, [fp, #-8]
    20d0:	ldr	r3, [r3]
    20d4:	cmp	r3, #0
    20d8:	bne	2100 <coda_netcdf_reopen+0x174>
    20dc:	ldr	r3, [pc, #900]	; 2468 <coda_netcdf_reopen+0x4dc>
    20e0:	ldr	r2, [pc, #888]	; 2460 <coda_netcdf_reopen+0x4d4>
    20e4:	ldr	r1, [pc, #896]	; 246c <coda_netcdf_reopen+0x4e0>
    20e8:	mvn	r0, #0
    20ec:	bl	0 <coda_set_error>
    20f0:	ldr	r0, [fp, #-8]
    20f4:	bl	2484 <coda_netcdf_close>
    20f8:	mvn	r3, #0
    20fc:	b	2450 <coda_netcdf_reopen+0x4c4>
    2100:	mov	r0, #6
    2104:	bl	0 <coda_type_record_new>
    2108:	str	r0, [fp, #-12]
    210c:	ldr	r3, [fp, #-12]
    2110:	cmp	r3, #0
    2114:	bne	2128 <coda_netcdf_reopen+0x19c>
    2118:	ldr	r0, [fp, #-8]
    211c:	bl	2484 <coda_netcdf_close>
    2120:	mvn	r3, #0
    2124:	b	2450 <coda_netcdf_reopen+0x4c4>
    2128:	mov	r1, #0
    212c:	ldr	r0, [fp, #-12]
    2130:	bl	0 <coda_mem_record_new>
    2134:	str	r0, [fp, #-16]
    2138:	ldr	r0, [fp, #-12]
    213c:	bl	0 <coda_type_release>
    2140:	ldr	r3, [fp, #-16]
    2144:	cmp	r3, #0
    2148:	bne	215c <coda_netcdf_reopen+0x1d0>
    214c:	ldr	r0, [fp, #-8]
    2150:	bl	2484 <coda_netcdf_close>
    2154:	mvn	r3, #0
    2158:	b	2450 <coda_netcdf_reopen+0x4c4>
    215c:	ldr	r3, [fp, #-8]
    2160:	ldr	r2, [fp, #-16]
    2164:	str	r2, [r3, #20]
    2168:	ldr	r3, [fp, #-8]
    216c:	ldr	ip, [r3, #52]	; 0x34
    2170:	ldrd	r0, [fp, #-60]	; 0xffffffc4
    2174:	sub	r3, fp, #24
    2178:	str	r3, [sp, #8]
    217c:	mov	r2, #4
    2180:	mov	r3, #0
    2184:	strd	r2, [sp]
    2188:	mov	r2, r0
    218c:	mov	r3, r1
    2190:	mov	r0, ip
    2194:	bl	0 <read_bytes>
    2198:	mov	r3, r0
    219c:	cmp	r3, #0
    21a0:	bge	21dc <coda_netcdf_reopen+0x250>
    21a4:	bl	0 <__errno_location>
    21a8:	mov	r3, r0
    21ac:	ldr	r3, [r3]
    21b0:	mov	r0, r3
    21b4:	bl	0 <strerror>
    21b8:	mov	r3, r0
    21bc:	mov	r2, r3
    21c0:	ldr	r1, [pc, #680]	; 2470 <coda_netcdf_reopen+0x4e4>
    21c4:	mvn	r0, #21
    21c8:	bl	0 <coda_set_error>
    21cc:	ldr	r0, [fp, #-8]
    21d0:	bl	2484 <coda_netcdf_close>
    21d4:	mvn	r3, #0
    21d8:	b	2450 <coda_netcdf_reopen+0x4c4>
    21dc:	ldrb	r3, [fp, #-24]	; 0xffffffe8
    21e0:	cmp	r3, #67	; 0x43
    21e4:	bne	2200 <coda_netcdf_reopen+0x274>
    21e8:	ldrb	r3, [fp, #-23]	; 0xffffffe9
    21ec:	cmp	r3, #68	; 0x44
    21f0:	bne	2200 <coda_netcdf_reopen+0x274>
    21f4:	ldrb	r3, [fp, #-22]	; 0xffffffea
    21f8:	cmp	r3, #70	; 0x46
    21fc:	beq	2214 <coda_netcdf_reopen+0x288>
    2200:	ldr	r3, [pc, #620]	; 2474 <coda_netcdf_reopen+0x4e8>
    2204:	ldr	r2, [pc, #620]	; 2478 <coda_netcdf_reopen+0x4ec>
    2208:	ldr	r1, [pc, #592]	; 2460 <coda_netcdf_reopen+0x4d4>
    220c:	ldr	r0, [pc, #616]	; 247c <coda_netcdf_reopen+0x4f0>
    2210:	bl	0 <__assert_fail>
    2214:	ldrb	r3, [fp, #-21]	; 0xffffffeb
    2218:	mov	r2, r3
    221c:	ldr	r3, [fp, #-8]
    2220:	str	r2, [r3, #56]	; 0x38
    2224:	ldr	r3, [fp, #-8]
    2228:	ldr	r3, [r3, #56]	; 0x38
    222c:	cmp	r3, #1
    2230:	beq	227c <coda_netcdf_reopen+0x2f0>
    2234:	ldr	r3, [fp, #-8]
    2238:	ldr	r3, [r3, #56]	; 0x38
    223c:	cmp	r3, #2
    2240:	beq	227c <coda_netcdf_reopen+0x2f0>
    2244:	ldr	r3, [fp, #-8]
    2248:	ldr	r3, [r3, #56]	; 0x38
    224c:	cmp	r3, #5
    2250:	beq	227c <coda_netcdf_reopen+0x2f0>
    2254:	ldr	r3, [fp, #-8]
    2258:	ldr	r3, [r3, #56]	; 0x38
    225c:	mov	r2, r3
    2260:	ldr	r1, [pc, #536]	; 2480 <coda_netcdf_reopen+0x4f4>
    2264:	mvn	r0, #199	; 0xc7
    2268:	bl	0 <coda_set_error>
    226c:	ldr	r0, [fp, #-8]
    2270:	bl	2484 <coda_netcdf_close>
    2274:	mvn	r3, #0
    2278:	b	2450 <coda_netcdf_reopen+0x4c4>
    227c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    2280:	adds	r2, r2, #4
    2284:	adc	r3, r3, #0
    2288:	strd	r2, [fp, #-60]	; 0xffffffc4
    228c:	sub	r2, fp, #36	; 0x24
    2290:	sub	r3, fp, #60	; 0x3c
    2294:	mov	r1, r3
    2298:	ldr	r0, [fp, #-8]
    229c:	bl	5bc <read_length_value>
    22a0:	mov	r3, r0
    22a4:	cmp	r3, #0
    22a8:	beq	22e4 <coda_netcdf_reopen+0x358>
    22ac:	bl	0 <__errno_location>
    22b0:	mov	r3, r0
    22b4:	ldr	r3, [r3]
    22b8:	mov	r0, r3
    22bc:	bl	0 <strerror>
    22c0:	mov	r3, r0
    22c4:	mov	r2, r3
    22c8:	ldr	r1, [pc, #416]	; 2470 <coda_netcdf_reopen+0x4e4>
    22cc:	mvn	r0, #21
    22d0:	bl	0 <coda_set_error>
    22d4:	ldr	r0, [fp, #-8]
    22d8:	bl	2484 <coda_netcdf_close>
    22dc:	mvn	r3, #0
    22e0:	b	2450 <coda_netcdf_reopen+0x4c4>
    22e4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    22e8:	sub	r0, fp, #60	; 0x3c
    22ec:	sub	r1, fp, #64	; 0x40
    22f0:	str	r1, [sp, #8]
    22f4:	sub	r1, fp, #48	; 0x30
    22f8:	str	r1, [sp, #4]
    22fc:	sub	r1, fp, #44	; 0x2c
    2300:	str	r1, [sp]
    2304:	mov	r1, r0
    2308:	ldr	r0, [fp, #-8]
    230c:	bl	6e0 <read_dim_array>
    2310:	mov	r3, r0
    2314:	cmp	r3, #0
    2318:	beq	232c <coda_netcdf_reopen+0x3a0>
    231c:	ldr	r0, [fp, #-8]
    2320:	bl	2484 <coda_netcdf_close>
    2324:	mvn	r3, #0
    2328:	b	2450 <coda_netcdf_reopen+0x4c4>
    232c:	sub	r2, fp, #20
    2330:	sub	r1, fp, #60	; 0x3c
    2334:	mov	r3, #0
    2338:	ldr	r0, [fp, #-8]
    233c:	bl	9f0 <read_att_array>
    2340:	mov	r3, r0
    2344:	cmp	r3, #0
    2348:	beq	2374 <coda_netcdf_reopen+0x3e8>
    234c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2350:	cmp	r3, #0
    2354:	beq	2364 <coda_netcdf_reopen+0x3d8>
    2358:	ldr	r3, [fp, #-48]	; 0xffffffd0
    235c:	mov	r0, r3
    2360:	bl	0 <free>
    2364:	ldr	r0, [fp, #-8]
    2368:	bl	2484 <coda_netcdf_close>
    236c:	mvn	r3, #0
    2370:	b	2450 <coda_netcdf_reopen+0x4c4>
    2374:	ldr	r3, [fp, #-20]	; 0xffffffec
    2378:	cmp	r3, #0
    237c:	beq	23c8 <coda_netcdf_reopen+0x43c>
    2380:	ldr	r3, [fp, #-20]	; 0xffffffec
    2384:	mov	r2, #1
    2388:	mov	r1, r3
    238c:	ldr	r0, [fp, #-16]
    2390:	bl	0 <coda_mem_type_set_attributes>
    2394:	mov	r3, r0
    2398:	cmp	r3, #0
    239c:	beq	23c8 <coda_netcdf_reopen+0x43c>
    23a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    23a4:	cmp	r3, #0
    23a8:	beq	23b8 <coda_netcdf_reopen+0x42c>
    23ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
    23b0:	mov	r0, r3
    23b4:	bl	0 <free>
    23b8:	ldr	r0, [fp, #-8]
    23bc:	bl	2484 <coda_netcdf_close>
    23c0:	mvn	r3, #0
    23c4:	b	2450 <coda_netcdf_reopen+0x4c4>
    23c8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    23cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    23d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    23d4:	sub	lr, fp, #60	; 0x3c
    23d8:	ldr	ip, [fp, #-16]
    23dc:	str	ip, [sp, #8]
    23e0:	str	r0, [sp, #4]
    23e4:	str	r1, [sp]
    23e8:	mov	r1, lr
    23ec:	ldr	r0, [fp, #-8]
    23f0:	bl	14c0 <read_var_array>
    23f4:	mov	r3, r0
    23f8:	cmp	r3, #0
    23fc:	beq	2428 <coda_netcdf_reopen+0x49c>
    2400:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2404:	cmp	r3, #0
    2408:	beq	2418 <coda_netcdf_reopen+0x48c>
    240c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2410:	mov	r0, r3
    2414:	bl	0 <free>
    2418:	ldr	r0, [fp, #-8]
    241c:	bl	2484 <coda_netcdf_close>
    2420:	mvn	r3, #0
    2424:	b	2450 <coda_netcdf_reopen+0x4c4>
    2428:	ldr	r3, [fp, #-48]	; 0xffffffd0
    242c:	cmp	r3, #0
    2430:	beq	2440 <coda_netcdf_reopen+0x4b4>
    2434:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2438:	mov	r0, r3
    243c:	bl	0 <free>
    2440:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2444:	ldr	r2, [fp, #-8]
    2448:	str	r2, [r3]
    244c:	mov	r3, #0
    2450:	mov	r0, r3
    2454:	sub	sp, fp, #4
    2458:	pop	{fp, pc}
    245c:	.word	0x00000321
    2460:	.word	0x000001e0
    2464:	.word	0x000001a8
    2468:	.word	0x00000337
    246c:	.word	0x000003c8
    2470:	.word	0x00000108
    2474:	.word	0x00000494
    2478:	.word	0x00000353
    247c:	.word	0x00000404
    2480:	.word	0x0000043c

00002484 <coda_netcdf_close>:
    2484:	push	{fp, lr}
    2488:	add	fp, sp, #4
    248c:	sub	sp, sp, #16
    2490:	str	r0, [fp, #-16]
    2494:	ldr	r3, [fp, #-16]
    2498:	str	r3, [fp, #-8]
    249c:	ldr	r3, [fp, #-8]
    24a0:	ldr	r3, [r3]
    24a4:	cmp	r3, #0
    24a8:	beq	24bc <coda_netcdf_close+0x38>
    24ac:	ldr	r3, [fp, #-8]
    24b0:	ldr	r3, [r3]
    24b4:	mov	r0, r3
    24b8:	bl	0 <free>
    24bc:	ldr	r3, [fp, #-8]
    24c0:	ldr	r3, [r3, #20]
    24c4:	cmp	r3, #0
    24c8:	beq	24dc <coda_netcdf_close+0x58>
    24cc:	ldr	r3, [fp, #-8]
    24d0:	ldr	r3, [r3, #20]
    24d4:	mov	r0, r3
    24d8:	bl	0 <coda_dynamic_type_delete>
    24dc:	ldr	r3, [fp, #-8]
    24e0:	ldr	r3, [r3, #48]	; 0x30
    24e4:	cmp	r3, #0
    24e8:	beq	24fc <coda_netcdf_close+0x78>
    24ec:	ldr	r3, [fp, #-8]
    24f0:	ldr	r3, [r3, #48]	; 0x30
    24f4:	mov	r0, r3
    24f8:	bl	0 <free>
    24fc:	ldr	r3, [fp, #-8]
    2500:	ldr	r3, [r3, #52]	; 0x34
    2504:	cmp	r3, #0
    2508:	beq	251c <coda_netcdf_close+0x98>
    250c:	ldr	r3, [fp, #-8]
    2510:	ldr	r3, [r3, #52]	; 0x34
    2514:	mov	r0, r3
    2518:	bl	0 <coda_bin_close>
    251c:	ldr	r0, [fp, #-8]
    2520:	bl	0 <free>
    2524:	mov	r3, #0
    2528:	mov	r0, r3
    252c:	sub	sp, fp, #4
    2530:	pop	{fp, pc}
