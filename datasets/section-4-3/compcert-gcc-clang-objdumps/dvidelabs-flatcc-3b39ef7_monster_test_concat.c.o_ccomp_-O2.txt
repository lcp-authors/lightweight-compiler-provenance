
../repos/dvidelabs-flatcc-3b39ef7/test/monster_test_concat/CMakeFiles/monster_test_concat.dir/monster_test_concat.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <MyGame_Example_Any_union_verifier>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	ldrb	ip, [r0, #12]
  14:	cmp	ip, #3
  18:	bcs	4c <MyGame_Example_Any_union_verifier+0x4c>
  1c:	cmp	ip, #1
  20:	beq	3c <MyGame_Example_Any_union_verifier+0x3c>
  24:	cmp	ip, #2
  28:	bne	6c <MyGame_Example_Any_union_verifier+0x6c>
  2c:	ldr	r1, [pc, #96]	; 94 <MyGame_Example_Any_union_verifier+0x94>
  30:	ldr	lr, [sp, #4]
  34:	add	sp, sp, #8
  38:	b	0 <flatcc_verify_union_table>
  3c:	ldr	r1, [pc, #72]	; 8c <MyGame_Example_Any_union_verifier+0x8c>
  40:	ldr	lr, [sp, #4]
  44:	add	sp, sp, #8
  48:	b	0 <flatcc_verify_union_table>
  4c:	cmp	ip, #3
  50:	beq	7c <MyGame_Example_Any_union_verifier+0x7c>
  54:	cmp	ip, #4
  58:	bne	6c <MyGame_Example_Any_union_verifier+0x6c>
  5c:	ldr	r1, [pc, #52]	; 98 <MyGame_Example_Any_union_verifier+0x98>
  60:	ldr	lr, [sp, #4]
  64:	add	sp, sp, #8
  68:	b	0 <flatcc_verify_union_table>
  6c:	mov	r0, #0
  70:	ldr	lr, [sp, #4]
  74:	add	sp, sp, #8
  78:	bx	lr
  7c:	ldr	r1, [pc, #12]	; 90 <MyGame_Example_Any_union_verifier+0x90>
  80:	ldr	lr, [sp, #4]
  84:	add	sp, sp, #8
  88:	b	0 <flatcc_verify_union_table>
	...

0000009c <Fantasy_Character_union_verifier>:
  9c:	mov	ip, sp
  a0:	sub	sp, sp, #8
  a4:	str	ip, [sp]
  a8:	str	lr, [sp, #4]
  ac:	ldrb	r1, [r0, #12]
  b0:	cmp	r1, #10
  b4:	bcs	108 <Fantasy_Character_union_verifier+0x6c>
  b8:	cmp	r1, #2
  bc:	beq	f8 <Fantasy_Character_union_verifier+0x5c>
  c0:	cmp	r1, #8
  c4:	beq	e4 <Fantasy_Character_union_verifier+0x48>
  c8:	cmp	r1, #9
  cc:	bne	12c <Fantasy_Character_union_verifier+0x90>
  d0:	mov	r1, #4
  d4:	mov	r2, #4
  d8:	ldr	lr, [sp, #4]
  dc:	add	sp, sp, #8
  e0:	b	0 <flatcc_verify_union_struct>
  e4:	mov	r1, #2
  e8:	mov	r2, #2
  ec:	ldr	lr, [sp, #4]
  f0:	add	sp, sp, #8
  f4:	b	0 <flatcc_verify_union_struct>
  f8:	ldr	r1, [pc, #92]	; 15c <Fantasy_Character_union_verifier+0xc0>
  fc:	ldr	lr, [sp, #4]
 100:	add	sp, sp, #8
 104:	b	0 <flatcc_verify_union_table>
 108:	cmp	r1, #10
 10c:	beq	148 <Fantasy_Character_union_verifier+0xac>
 110:	cmp	r1, #11
 114:	beq	13c <Fantasy_Character_union_verifier+0xa0>
 118:	cmp	r1, #255	; 0xff
 11c:	bne	12c <Fantasy_Character_union_verifier+0x90>
 120:	ldr	lr, [sp, #4]
 124:	add	sp, sp, #8
 128:	b	0 <flatcc_verify_union_string>
 12c:	mov	r0, #0
 130:	ldr	lr, [sp, #4]
 134:	add	sp, sp, #8
 138:	bx	lr
 13c:	ldr	lr, [sp, #4]
 140:	add	sp, sp, #8
 144:	b	0 <flatcc_verify_union_string>
 148:	mov	r1, #4
 14c:	mov	r2, #4
 150:	ldr	lr, [sp, #4]
 154:	add	sp, sp, #8
 158:	b	0 <flatcc_verify_union_struct>
 15c:	.word	0x00000000

00000160 <MyGame_InParentNamespace_verify_table>:
 160:	mov	ip, sp
 164:	sub	sp, sp, #8
 168:	str	ip, [sp]
 16c:	str	lr, [sp, #4]
 170:	mov	r0, #0
 174:	ldr	lr, [sp, #4]
 178:	add	sp, sp, #8
 17c:	bx	lr

00000180 <MyGame_Example2_Monster_verify_table>:
 180:	mov	ip, sp
 184:	sub	sp, sp, #8
 188:	str	ip, [sp]
 18c:	str	lr, [sp, #4]
 190:	mov	r0, #0
 194:	ldr	lr, [sp, #4]
 198:	add	sp, sp, #8
 19c:	bx	lr

000001a0 <MyGame_Example_TestSimpleTableWithEnum_verify_table>:
 1a0:	mov	ip, sp
 1a4:	sub	sp, sp, #16
 1a8:	str	ip, [sp]
 1ac:	str	lr, [sp, #4]
 1b0:	str	r4, [sp, #8]
 1b4:	mov	r4, r0
 1b8:	mov	r1, #0
 1bc:	mov	r2, #1
 1c0:	mov	r3, #1
 1c4:	mov	r0, r4
 1c8:	bl	0 <flatcc_verify_field>
 1cc:	cmp	r0, #0
 1d0:	bne	22c <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x8c>
 1d4:	mov	r1, #1
 1d8:	mov	r2, #1
 1dc:	mov	r3, #1
 1e0:	mov	r0, r4
 1e4:	bl	0 <flatcc_verify_field>
 1e8:	cmp	r0, #0
 1ec:	bne	22c <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x8c>
 1f0:	mov	r1, #2
 1f4:	mov	r2, #1
 1f8:	mov	r3, #1
 1fc:	mov	r0, r4
 200:	bl	0 <flatcc_verify_field>
 204:	cmp	r0, #0
 208:	bne	22c <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x8c>
 20c:	mov	r1, #3
 210:	mov	r2, #1
 214:	mov	r3, #1
 218:	mov	r0, r4
 21c:	bl	0 <flatcc_verify_field>
 220:	cmp	r0, #0
 224:	bne	22c <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x8c>
 228:	mov	r0, #0
 22c:	ldr	r4, [sp, #8]
 230:	ldr	lr, [sp, #4]
 234:	add	sp, sp, #16
 238:	bx	lr

0000023c <MyGame_Example_Stat_verify_table>:
 23c:	mov	ip, sp
 240:	sub	sp, sp, #16
 244:	str	ip, [sp]
 248:	str	lr, [sp, #4]
 24c:	str	r4, [sp, #8]
 250:	mov	r4, r0
 254:	mov	r1, #0
 258:	mov	r2, #0
 25c:	mov	r0, r4
 260:	bl	0 <flatcc_verify_string_field>
 264:	cmp	r0, #0
 268:	bne	2a8 <MyGame_Example_Stat_verify_table+0x6c>
 26c:	mov	r1, #1
 270:	mov	r2, #8
 274:	mov	r3, #8
 278:	mov	r0, r4
 27c:	bl	0 <flatcc_verify_field>
 280:	cmp	r0, #0
 284:	bne	2a8 <MyGame_Example_Stat_verify_table+0x6c>
 288:	mov	r1, #2
 28c:	mov	r2, #2
 290:	mov	r3, #2
 294:	mov	r0, r4
 298:	bl	0 <flatcc_verify_field>
 29c:	cmp	r0, #0
 2a0:	bne	2a8 <MyGame_Example_Stat_verify_table+0x6c>
 2a4:	mov	r0, #0
 2a8:	ldr	r4, [sp, #8]
 2ac:	ldr	lr, [sp, #4]
 2b0:	add	sp, sp, #16
 2b4:	bx	lr

000002b8 <MyGame_Example_Alt_verify_table>:
 2b8:	mov	ip, sp
 2bc:	sub	sp, sp, #16
 2c0:	str	ip, [sp]
 2c4:	str	lr, [sp, #4]
 2c8:	str	r4, [sp, #8]
 2cc:	mov	r4, r0
 2d0:	mov	r1, #0
 2d4:	mov	r2, #0
 2d8:	ldr	r3, [pc, #88]	; 338 <MyGame_Example_Alt_verify_table+0x80>
 2dc:	mov	r0, r4
 2e0:	bl	0 <flatcc_verify_table_field>
 2e4:	cmp	r0, #0
 2e8:	bne	328 <MyGame_Example_Alt_verify_table+0x70>
 2ec:	mov	r1, #1
 2f0:	mov	r2, #0
 2f4:	ldr	r3, [pc, #68]	; 340 <MyGame_Example_Alt_verify_table+0x88>
 2f8:	mov	r0, r4
 2fc:	bl	0 <flatcc_verify_table_field>
 300:	cmp	r0, #0
 304:	bne	328 <MyGame_Example_Alt_verify_table+0x70>
 308:	mov	r1, #3
 30c:	mov	r2, #0
 310:	ldr	r3, [pc, #36]	; 33c <MyGame_Example_Alt_verify_table+0x84>
 314:	mov	r0, r4
 318:	bl	0 <flatcc_verify_union_vector_field>
 31c:	cmp	r0, #0
 320:	bne	328 <MyGame_Example_Alt_verify_table+0x70>
 324:	mov	r0, #0
 328:	ldr	r4, [sp, #8]
 32c:	ldr	lr, [sp, #4]
 330:	add	sp, sp, #16
 334:	bx	lr
	...

00000344 <MyGame_Example_TestJSONPrefix_verify_table>:
 344:	mov	ip, sp
 348:	sub	sp, sp, #16
 34c:	str	ip, [sp]
 350:	str	lr, [sp, #4]
 354:	str	r4, [sp, #8]
 358:	mov	r4, r0
 35c:	mov	r1, #0
 360:	mov	r2, #0
 364:	ldr	r3, [pc, #88]	; 3c4 <MyGame_Example_TestJSONPrefix_verify_table+0x80>
 368:	mov	r0, r4
 36c:	bl	0 <flatcc_verify_table_field>
 370:	cmp	r0, #0
 374:	bne	3b4 <MyGame_Example_TestJSONPrefix_verify_table+0x70>
 378:	mov	r1, #1
 37c:	mov	r2, #0
 380:	ldr	r3, [pc, #68]	; 3cc <MyGame_Example_TestJSONPrefix_verify_table+0x88>
 384:	mov	r0, r4
 388:	bl	0 <flatcc_verify_table_field>
 38c:	cmp	r0, #0
 390:	bne	3b4 <MyGame_Example_TestJSONPrefix_verify_table+0x70>
 394:	mov	r1, #2
 398:	mov	r2, #0
 39c:	ldr	r3, [pc, #36]	; 3c8 <MyGame_Example_TestJSONPrefix_verify_table+0x84>
 3a0:	mov	r0, r4
 3a4:	bl	0 <flatcc_verify_table_field>
 3a8:	cmp	r0, #0
 3ac:	bne	3b4 <MyGame_Example_TestJSONPrefix_verify_table+0x70>
 3b0:	mov	r0, #0
 3b4:	ldr	r4, [sp, #8]
 3b8:	ldr	lr, [sp, #4]
 3bc:	add	sp, sp, #16
 3c0:	bx	lr
	...

000003d0 <MyGame_Example_TestJSONPrefixParsing_verify_table>:
 3d0:	mov	ip, sp
 3d4:	sub	sp, sp, #16
 3d8:	str	ip, [sp]
 3dc:	str	lr, [sp, #4]
 3e0:	str	r4, [sp, #8]
 3e4:	mov	r4, r0
 3e8:	mov	r1, #0
 3ec:	mov	r2, #0
 3f0:	mov	r0, r4
 3f4:	bl	0 <flatcc_verify_string_field>
 3f8:	cmp	r0, #0
 3fc:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
 400:	mov	r1, #1
 404:	mov	r2, #4
 408:	mov	r3, #4
 40c:	mov	r0, r4
 410:	bl	0 <flatcc_verify_field>
 414:	cmp	r0, #0
 418:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
 41c:	mov	r1, #2
 420:	mov	r2, #0
 424:	mov	r0, r4
 428:	bl	0 <flatcc_verify_string_field>
 42c:	cmp	r0, #0
 430:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
 434:	mov	r1, #3
 438:	mov	r2, #8
 43c:	mov	r3, #8
 440:	mov	r0, r4
 444:	bl	0 <flatcc_verify_field>
 448:	cmp	r0, #0
 44c:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
 450:	mov	r1, #4
 454:	mov	r2, #0
 458:	mov	r0, r4
 45c:	bl	0 <flatcc_verify_string_field>
 460:	cmp	r0, #0
 464:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
 468:	mov	r1, #5
 46c:	mov	r2, #8
 470:	mov	r3, #8
 474:	mov	r0, r4
 478:	bl	0 <flatcc_verify_field>
 47c:	cmp	r0, #0
 480:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
 484:	mov	r1, #6
 488:	mov	r2, #4
 48c:	mov	r3, #4
 490:	mov	r0, r4
 494:	bl	0 <flatcc_verify_field>
 498:	cmp	r0, #0
 49c:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
 4a0:	mov	r1, #7
 4a4:	mov	r2, #8
 4a8:	mov	r3, #8
 4ac:	mov	r0, r4
 4b0:	bl	0 <flatcc_verify_field>
 4b4:	cmp	r0, #0
 4b8:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
 4bc:	mov	r1, #8
 4c0:	mov	r2, #4
 4c4:	mov	r3, #4
 4c8:	mov	r0, r4
 4cc:	bl	0 <flatcc_verify_field>
 4d0:	cmp	r0, #0
 4d4:	bne	4dc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
 4d8:	mov	r0, #0
 4dc:	ldr	r4, [sp, #8]
 4e0:	ldr	lr, [sp, #4]
 4e4:	add	sp, sp, #16
 4e8:	bx	lr

000004ec <MyGame_Example_TestJSONPrefixParsing2_verify_table>:
 4ec:	mov	ip, sp
 4f0:	sub	sp, sp, #16
 4f4:	str	ip, [sp]
 4f8:	str	lr, [sp, #4]
 4fc:	str	r4, [sp, #8]
 500:	mov	r4, r0
 504:	mov	r1, #0
 508:	mov	r2, #8
 50c:	mov	r3, #8
 510:	mov	r0, r4
 514:	bl	0 <flatcc_verify_field>
 518:	cmp	r0, #0
 51c:	bne	540 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x54>
 520:	mov	r1, #1
 524:	mov	r2, #4
 528:	mov	r3, #4
 52c:	mov	r0, r4
 530:	bl	0 <flatcc_verify_field>
 534:	cmp	r0, #0
 538:	bne	540 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x54>
 53c:	mov	r0, #0
 540:	ldr	r4, [sp, #8]
 544:	ldr	lr, [sp, #4]
 548:	add	sp, sp, #16
 54c:	bx	lr

00000550 <MyGame_Example_TestJSONPrefixParsing3_verify_table>:
 550:	mov	ip, sp
 554:	sub	sp, sp, #16
 558:	str	ip, [sp]
 55c:	str	lr, [sp, #4]
 560:	str	r4, [sp, #8]
 564:	mov	r4, r0
 568:	mov	r1, #0
 56c:	mov	r2, #8
 570:	mov	r3, #8
 574:	mov	r0, r4
 578:	bl	0 <flatcc_verify_field>
 57c:	cmp	r0, #0
 580:	bne	5a4 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x54>
 584:	mov	r1, #1
 588:	mov	r2, #4
 58c:	mov	r3, #4
 590:	mov	r0, r4
 594:	bl	0 <flatcc_verify_field>
 598:	cmp	r0, #0
 59c:	bne	5a4 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x54>
 5a0:	mov	r0, #0
 5a4:	ldr	r4, [sp, #8]
 5a8:	ldr	lr, [sp, #4]
 5ac:	add	sp, sp, #16
 5b0:	bx	lr

000005b4 <MyGame_Example_TestBase64_verify_table>:
 5b4:	mov	ip, sp
 5b8:	sub	sp, sp, #24
 5bc:	str	ip, [sp, #8]
 5c0:	str	lr, [sp, #12]
 5c4:	str	r4, [sp, #16]
 5c8:	str	r5, [sp, #20]
 5cc:	mov	r4, r0
 5d0:	mov	r1, #0
 5d4:	mov	r2, #0
 5d8:	mov	r3, #1
 5dc:	mov	r0, #1
 5e0:	mvn	ip, #0
 5e4:	str	ip, [sp, #4]
 5e8:	str	r0, [sp]
 5ec:	mov	r0, r4
 5f0:	bl	0 <flatcc_verify_vector_field>
 5f4:	cmp	r0, #0
 5f8:	bne	658 <MyGame_Example_TestBase64_verify_table+0xa4>
 5fc:	mov	r1, #1
 600:	mov	r2, #0
 604:	mov	r3, #1
 608:	mov	r5, #1
 60c:	mvn	r0, #0
 610:	str	r0, [sp, #4]
 614:	str	r5, [sp]
 618:	mov	r0, r4
 61c:	bl	0 <flatcc_verify_vector_field>
 620:	cmp	r0, #0
 624:	bne	658 <MyGame_Example_TestBase64_verify_table+0xa4>
 628:	mov	r1, #2
 62c:	mov	r2, #0
 630:	mov	r3, #0
 634:	mov	ip, #1
 638:	ldr	r0, [pc, #44]	; 66c <MyGame_Example_TestBase64_verify_table+0xb8>
 63c:	str	r0, [sp, #4]
 640:	str	ip, [sp]
 644:	mov	r0, r4
 648:	bl	0 <flatcc_verify_table_as_nested_root>
 64c:	cmp	r0, #0
 650:	bne	658 <MyGame_Example_TestBase64_verify_table+0xa4>
 654:	mov	r0, #0
 658:	ldr	r4, [sp, #16]
 65c:	ldr	r5, [sp, #20]
 660:	ldr	lr, [sp, #12]
 664:	add	sp, sp, #24
 668:	bx	lr
 66c:	.word	0x00000000

00000670 <MyGame_Example_Monster_verify_table>:
 670:	mov	ip, sp
 674:	sub	sp, sp, #24
 678:	str	ip, [sp, #8]
 67c:	str	lr, [sp, #12]
 680:	str	r4, [sp, #16]
 684:	str	r5, [sp, #20]
 688:	mov	r4, r0
 68c:	mov	r1, #0
 690:	mov	r2, #32
 694:	mov	r3, #16
 698:	mov	r0, r4
 69c:	bl	0 <flatcc_verify_field>
 6a0:	cmp	r0, #0
 6a4:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 6a8:	mov	r1, #2
 6ac:	mov	r2, #2
 6b0:	mov	r3, #2
 6b4:	mov	r0, r4
 6b8:	bl	0 <flatcc_verify_field>
 6bc:	cmp	r0, #0
 6c0:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 6c4:	mov	r1, #1
 6c8:	mov	r2, #2
 6cc:	mov	r3, #2
 6d0:	mov	r0, r4
 6d4:	bl	0 <flatcc_verify_field>
 6d8:	cmp	r0, #0
 6dc:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 6e0:	mov	r1, #3
 6e4:	mov	r2, #1
 6e8:	mov	r0, r4
 6ec:	bl	0 <flatcc_verify_string_field>
 6f0:	cmp	r0, #0
 6f4:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 6f8:	mov	r1, #6
 6fc:	mov	r2, #1
 700:	mov	r3, #1
 704:	mov	r0, r4
 708:	bl	0 <flatcc_verify_field>
 70c:	cmp	r0, #0
 710:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 714:	mov	r1, #5
 718:	mov	r2, #0
 71c:	mov	r3, #1
 720:	mov	r0, #1
 724:	mvn	r5, #0
 728:	str	r5, [sp, #4]
 72c:	str	r0, [sp]
 730:	mov	r0, r4
 734:	bl	0 <flatcc_verify_vector_field>
 738:	cmp	r0, #0
 73c:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 740:	mov	r1, #11
 744:	mov	r2, #0
 748:	ldr	r3, [pc, #912]	; ae0 <MyGame_Example_Monster_verify_table+0x470>
 74c:	mov	r0, r4
 750:	bl	0 <flatcc_verify_table_vector_field>
 754:	cmp	r0, #0
 758:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 75c:	mov	r1, #10
 760:	mov	r2, #0
 764:	mov	r0, r4
 768:	bl	0 <flatcc_verify_string_vector_field>
 76c:	cmp	r0, #0
 770:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 774:	mov	r1, #28
 778:	mov	r2, #0
 77c:	mov	r0, r4
 780:	bl	0 <flatcc_verify_string_vector_field>
 784:	cmp	r0, #0
 788:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 78c:	mov	r1, #24
 790:	mov	r2, #0
 794:	mov	r3, #1
 798:	mov	r5, #1
 79c:	mvn	r0, #0
 7a0:	str	r0, [sp, #4]
 7a4:	str	r5, [sp]
 7a8:	mov	r0, r4
 7ac:	bl	0 <flatcc_verify_vector_field>
 7b0:	cmp	r0, #0
 7b4:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 7b8:	mov	r1, #29
 7bc:	mov	r2, #0
 7c0:	mov	r3, #8
 7c4:	mov	r0, #4
 7c8:	mvn	ip, #-536870912	; 0xe0000000
 7cc:	str	ip, [sp, #4]
 7d0:	str	r0, [sp]
 7d4:	mov	r0, r4
 7d8:	bl	0 <flatcc_verify_vector_field>
 7dc:	cmp	r0, #0
 7e0:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 7e4:	mov	r1, #12
 7e8:	mov	r2, #0
 7ec:	ldr	r3, [pc, #748]	; ae0 <MyGame_Example_Monster_verify_table+0x470>
 7f0:	mov	r0, r4
 7f4:	bl	0 <flatcc_verify_table_field>
 7f8:	cmp	r0, #0
 7fc:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 800:	mov	r1, #8
 804:	mov	r2, #0
 808:	ldr	r3, [pc, #728]	; ae8 <MyGame_Example_Monster_verify_table+0x478>
 80c:	mov	r0, r4
 810:	bl	0 <flatcc_verify_union_field>
 814:	cmp	r0, #0
 818:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 81c:	mov	r1, #9
 820:	mov	r2, #0
 824:	mov	r3, #4
 828:	mov	r0, #2
 82c:	mvn	ip, #-1073741824	; 0xc0000000
 830:	str	ip, [sp, #4]
 834:	str	r0, [sp]
 838:	mov	r0, r4
 83c:	bl	0 <flatcc_verify_vector_field>
 840:	cmp	r0, #0
 844:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 848:	mov	r1, #31
 84c:	mov	r2, #0
 850:	mov	r3, #4
 854:	mov	r0, #2
 858:	mvn	r5, #-1073741824	; 0xc0000000
 85c:	str	r5, [sp, #4]
 860:	str	r0, [sp]
 864:	mov	r0, r4
 868:	bl	0 <flatcc_verify_vector_field>
 86c:	cmp	r0, #0
 870:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 874:	mov	r1, #13
 878:	mov	r2, #0
 87c:	mov	r3, #0
 880:	mov	ip, #1
 884:	ldr	r0, [pc, #596]	; ae0 <MyGame_Example_Monster_verify_table+0x470>
 888:	str	r0, [sp, #4]
 88c:	str	ip, [sp]
 890:	mov	r0, r4
 894:	bl	0 <flatcc_verify_table_as_nested_root>
 898:	cmp	r0, #0
 89c:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 8a0:	mov	r1, #14
 8a4:	mov	r2, #0
 8a8:	ldr	r3, [pc, #572]	; aec <MyGame_Example_Monster_verify_table+0x47c>
 8ac:	mov	r0, r4
 8b0:	bl	0 <flatcc_verify_table_field>
 8b4:	cmp	r0, #0
 8b8:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 8bc:	mov	r1, #15
 8c0:	mov	r2, #1
 8c4:	mov	r3, #1
 8c8:	mov	r0, r4
 8cc:	bl	0 <flatcc_verify_field>
 8d0:	cmp	r0, #0
 8d4:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 8d8:	mov	r1, #16
 8dc:	mov	r2, #4
 8e0:	mov	r3, #4
 8e4:	mov	r0, r4
 8e8:	bl	0 <flatcc_verify_field>
 8ec:	cmp	r0, #0
 8f0:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 8f4:	mov	r1, #17
 8f8:	mov	r2, #4
 8fc:	mov	r3, #4
 900:	mov	r0, r4
 904:	bl	0 <flatcc_verify_field>
 908:	cmp	r0, #0
 90c:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 910:	mov	r1, #18
 914:	mov	r2, #8
 918:	mov	r3, #8
 91c:	mov	r0, r4
 920:	bl	0 <flatcc_verify_field>
 924:	cmp	r0, #0
 928:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 92c:	mov	r1, #19
 930:	mov	r2, #8
 934:	mov	r3, #8
 938:	mov	r0, r4
 93c:	bl	0 <flatcc_verify_field>
 940:	cmp	r0, #0
 944:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 948:	mov	r1, #20
 94c:	mov	r2, #4
 950:	mov	r3, #4
 954:	mov	r0, r4
 958:	bl	0 <flatcc_verify_field>
 95c:	cmp	r0, #0
 960:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 964:	mov	r1, #21
 968:	mov	r2, #4
 96c:	mov	r3, #4
 970:	mov	r0, r4
 974:	bl	0 <flatcc_verify_field>
 978:	cmp	r0, #0
 97c:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 980:	mov	r1, #22
 984:	mov	r2, #8
 988:	mov	r3, #8
 98c:	mov	r0, r4
 990:	bl	0 <flatcc_verify_field>
 994:	cmp	r0, #0
 998:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 99c:	mov	r1, #23
 9a0:	mov	r2, #8
 9a4:	mov	r3, #8
 9a8:	mov	r0, r4
 9ac:	bl	0 <flatcc_verify_field>
 9b0:	cmp	r0, #0
 9b4:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 9b8:	mov	r1, #25
 9bc:	mov	r2, #4
 9c0:	mov	r3, #4
 9c4:	mov	r0, r4
 9c8:	bl	0 <flatcc_verify_field>
 9cc:	cmp	r0, #0
 9d0:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 9d4:	mov	r1, #26
 9d8:	mov	r2, #4
 9dc:	mov	r3, #4
 9e0:	mov	r0, r4
 9e4:	bl	0 <flatcc_verify_field>
 9e8:	cmp	r0, #0
 9ec:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 9f0:	mov	r1, #27
 9f4:	mov	r2, #4
 9f8:	mov	r3, #4
 9fc:	mov	r0, r4
 a00:	bl	0 <flatcc_verify_field>
 a04:	cmp	r0, #0
 a08:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 a0c:	mov	r1, #30
 a10:	mov	r2, #0
 a14:	mov	r3, #1
 a18:	mov	r0, #1
 a1c:	mvn	ip, #0
 a20:	str	ip, [sp, #4]
 a24:	str	r0, [sp]
 a28:	mov	r0, r4
 a2c:	bl	0 <flatcc_verify_vector_field>
 a30:	cmp	r0, #0
 a34:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 a38:	mov	r1, #32
 a3c:	mov	r2, #0
 a40:	mov	r3, #8
 a44:	mov	r0, #8
 a48:	mvn	ip, #-536870912	; 0xe0000000
 a4c:	str	ip, [sp, #4]
 a50:	str	r0, [sp]
 a54:	mov	r0, r4
 a58:	bl	0 <flatcc_verify_vector_field>
 a5c:	cmp	r0, #0
 a60:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 a64:	mov	r1, #33	; 0x21
 a68:	mov	r2, #0
 a6c:	mov	r3, #8
 a70:	mov	r5, #8
 a74:	mvn	r0, #-536870912	; 0xe0000000
 a78:	str	r0, [sp, #4]
 a7c:	str	r5, [sp]
 a80:	mov	r0, r4
 a84:	bl	0 <flatcc_verify_vector_field>
 a88:	cmp	r0, #0
 a8c:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 a90:	mov	r1, #34	; 0x22
 a94:	mov	r2, #0
 a98:	ldr	r3, [pc, #80]	; af0 <MyGame_Example_Monster_verify_table+0x480>
 a9c:	mov	r0, r4
 aa0:	bl	0 <flatcc_verify_table_field>
 aa4:	cmp	r0, #0
 aa8:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 aac:	mov	r1, #35	; 0x23
 ab0:	mov	r2, #0
 ab4:	ldr	r3, [pc, #40]	; ae4 <MyGame_Example_Monster_verify_table+0x474>
 ab8:	mov	r0, r4
 abc:	bl	0 <flatcc_verify_table_field>
 ac0:	cmp	r0, #0
 ac4:	bne	acc <MyGame_Example_Monster_verify_table+0x45c>
 ac8:	mov	r0, #0
 acc:	ldr	r4, [sp, #16]
 ad0:	ldr	r5, [sp, #20]
 ad4:	ldr	lr, [sp, #12]
 ad8:	add	sp, sp, #24
 adc:	bx	lr
	...

00000af4 <Fantasy_Attacker_verify_table>:
 af4:	mov	ip, sp
 af8:	sub	sp, sp, #8
 afc:	str	ip, [sp]
 b00:	str	lr, [sp, #4]
 b04:	mov	r1, #0
 b08:	mov	r2, #4
 b0c:	mov	r3, #4
 b10:	bl	0 <flatcc_verify_field>
 b14:	cmp	r0, #0
 b18:	bne	b20 <Fantasy_Attacker_verify_table+0x2c>
 b1c:	mov	r0, #0
 b20:	ldr	lr, [sp, #4]
 b24:	add	sp, sp, #8
 b28:	bx	lr

00000b2c <Fantasy_Movie_verify_table>:
 b2c:	mov	ip, sp
 b30:	sub	sp, sp, #16
 b34:	str	ip, [sp]
 b38:	str	lr, [sp, #4]
 b3c:	str	r4, [sp, #8]
 b40:	mov	r4, r0
 b44:	mov	r1, #1
 b48:	mov	r2, #0
 b4c:	ldr	r3, [pc, #144]	; be4 <Fantasy_Movie_verify_table+0xb8>
 b50:	mov	r0, r4
 b54:	bl	0 <flatcc_verify_union_field>
 b58:	cmp	r0, #0
 b5c:	bne	bd4 <Fantasy_Movie_verify_table+0xa8>
 b60:	mov	r1, #3
 b64:	mov	r2, #0
 b68:	ldr	r3, [pc, #116]	; be4 <Fantasy_Movie_verify_table+0xb8>
 b6c:	mov	r0, r4
 b70:	bl	0 <flatcc_verify_union_field>
 b74:	cmp	r0, #0
 b78:	bne	bd4 <Fantasy_Movie_verify_table+0xa8>
 b7c:	mov	r1, #5
 b80:	mov	r2, #0
 b84:	ldr	r3, [pc, #88]	; be4 <Fantasy_Movie_verify_table+0xb8>
 b88:	mov	r0, r4
 b8c:	bl	0 <flatcc_verify_union_field>
 b90:	cmp	r0, #0
 b94:	bne	bd4 <Fantasy_Movie_verify_table+0xa8>
 b98:	mov	r1, #7
 b9c:	mov	r2, #0
 ba0:	ldr	r3, [pc, #60]	; be4 <Fantasy_Movie_verify_table+0xb8>
 ba4:	mov	r0, r4
 ba8:	bl	0 <flatcc_verify_union_field>
 bac:	cmp	r0, #0
 bb0:	bne	bd4 <Fantasy_Movie_verify_table+0xa8>
 bb4:	mov	r1, #9
 bb8:	mov	r2, #0
 bbc:	ldr	r3, [pc, #32]	; be4 <Fantasy_Movie_verify_table+0xb8>
 bc0:	mov	r0, r4
 bc4:	bl	0 <flatcc_verify_union_vector_field>
 bc8:	cmp	r0, #0
 bcc:	bne	bd4 <Fantasy_Movie_verify_table+0xa8>
 bd0:	mov	r0, #0
 bd4:	ldr	r4, [sp, #8]
 bd8:	ldr	lr, [sp, #4]
 bdc:	add	sp, sp, #16
 be0:	bx	lr
 be4:	.word	0x00000000

00000be8 <main>:
 be8:	mov	ip, sp
 bec:	sub	sp, sp, #256	; 0x100
 bf0:	str	ip, [sp]
 bf4:	str	lr, [sp, #4]
 bf8:	str	r4, [sp, #8]
 bfc:	str	r5, [sp, #12]
 c00:	add	r5, sp, #24
 c04:	mov	r0, r5
 c08:	bl	0 <flatcc_builder_init>
 c0c:	ldr	r1, [pc, #224]	; cf4 <main+0x10c>
 c10:	add	r0, sp, #24
 c14:	mov	r2, #0
 c18:	mov	r3, #0
 c1c:	bl	0 <flatcc_builder_start_buffer>
 c20:	cmp	r0, #0
 c24:	bne	c34 <main+0x4c>
 c28:	add	r0, sp, #24
 c2c:	mov	r1, #36	; 0x24
 c30:	bl	0 <flatcc_builder_start_table>
 c34:	ldr	r1, [pc, #172]	; ce8 <main+0x100>
 c38:	add	r0, sp, #24
 c3c:	bl	0 <flatcc_builder_create_string_str>
 c40:	mov	r4, r0
 c44:	add	r0, sp, #24
 c48:	cmp	r4, #0
 c4c:	beq	c64 <main+0x7c>
 c50:	mov	r1, #3
 c54:	bl	0 <flatcc_builder_table_add_offset>
 c58:	cmp	r0, #0
 c5c:	beq	c64 <main+0x7c>
 c60:	str	r4, [r0]
 c64:	add	r4, sp, #24
 c68:	ldr	r1, [pc, #136]	; cf8 <main+0x110>
 c6c:	mov	r2, #1
 c70:	mov	r0, r4
 c74:	bl	0 <flatcc_builder_check_required>
 c78:	cmp	r0, #0
 c7c:	bne	c94 <main+0xac>
 c80:	ldr	r0, [pc, #104]	; cf0 <main+0x108>
 c84:	ldr	r1, [pc, #112]	; cfc <main+0x114>
 c88:	movw	r2, #2398	; 0x95e
 c8c:	ldr	r3, [pc, #108]	; d00 <main+0x118>
 c90:	bl	0 <__assert_fail>
 c94:	mov	r0, r4
 c98:	bl	0 <flatcc_builder_end_table>
 c9c:	mov	r1, r0
 ca0:	add	r0, sp, #24
 ca4:	bl	0 <flatcc_builder_end_buffer>
 ca8:	add	r1, sp, #16
 cac:	mov	r0, r5
 cb0:	bl	0 <flatcc_builder_get_direct_buffer>
 cb4:	ldr	r1, [sp, #16]
 cb8:	ldr	r2, [pc, #52]	; cf4 <main+0x10c>
 cbc:	ldr	r3, [pc, #40]	; cec <main+0x104>
 cc0:	bl	0 <flatcc_verify_table_as_root>
 cc4:	mov	r4, r0
 cc8:	mov	r0, r5
 ccc:	bl	0 <flatcc_builder_clear>
 cd0:	mov	r0, r4
 cd4:	ldr	r4, [sp, #8]
 cd8:	ldr	r5, [sp, #12]
 cdc:	ldr	lr, [sp, #4]
 ce0:	add	sp, sp, #256	; 0x100
 ce4:	bx	lr
 ce8:	.word	0x000000a7
 cec:	.word	0x00000000
 cf0:	.word	0x00000005
 cf4:	.word	0x00000000
 cf8:	.word	0x0000012e
 cfc:	.word	0x000000b1
 d00:	.word	0x00000132
