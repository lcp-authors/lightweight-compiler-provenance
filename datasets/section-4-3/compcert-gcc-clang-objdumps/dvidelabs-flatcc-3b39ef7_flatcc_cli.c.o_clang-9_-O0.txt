
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/cli/CMakeFiles/flatcc_cli.dir/flatcc_cli.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <usage>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #16
       c:	str	r0, [fp, #-4]
      10:	ldr	r0, [fp, #-4]
      14:	movw	r1, #0
      18:	movt	r1, #0
      1c:	movw	r2, #0
      20:	movt	r2, #0
      24:	bl	0 <fprintf>
      28:	ldr	r1, [fp, #-4]
      2c:	str	r0, [sp, #8]
      30:	mov	r0, r1
      34:	movw	r1, #0
      38:	movt	r1, #0
      3c:	movw	r2, #0
      40:	movt	r2, #0
      44:	bl	0 <fprintf>
      48:	ldr	r1, [fp, #-4]
      4c:	str	r0, [sp, #4]
      50:	mov	r0, r1
      54:	movw	r1, #0
      58:	movt	r1, #0
      5c:	bl	0 <fprintf>
      60:	ldr	r1, [fp, #-4]
      64:	str	r0, [sp]
      68:	mov	r0, r1
      6c:	movw	r1, #0
      70:	movt	r1, #0
      74:	bl	0 <fprintf>
      78:	mov	sp, fp
      7c:	pop	{fp, pc}

00000080 <help>:
      80:	push	{fp, lr}
      84:	mov	fp, sp
      88:	sub	sp, sp, #8
      8c:	str	r0, [sp, #4]
      90:	ldr	r0, [sp, #4]
      94:	bl	0 <usage>
      98:	ldr	r0, [sp, #4]
      9c:	movw	r1, #0
      a0:	movt	r1, #0
      a4:	bl	0 <fprintf>
      a8:	mov	sp, fp
      ac:	pop	{fp, pc}

000000b0 <parse_bool_arg>:
      b0:	push	{fp, lr}
      b4:	mov	fp, sp
      b8:	sub	sp, sp, #8
      bc:	str	r0, [sp]
      c0:	ldr	r0, [sp]
      c4:	movw	r1, #0
      c8:	movt	r1, #0
      cc:	bl	0 <strcmp>
      d0:	cmp	r0, #0
      d4:	beq	f0 <parse_bool_arg+0x40>
      d8:	ldr	r0, [sp]
      dc:	movw	r1, #0
      e0:	movt	r1, #0
      e4:	bl	0 <strcmp>
      e8:	cmp	r0, #0
      ec:	bne	fc <parse_bool_arg+0x4c>
      f0:	movw	r0, #0
      f4:	str	r0, [sp, #4]
      f8:	b	15c <parse_bool_arg+0xac>
      fc:	ldr	r0, [sp]
     100:	movw	r1, #0
     104:	movt	r1, #0
     108:	bl	0 <strcmp>
     10c:	cmp	r0, #0
     110:	beq	12c <parse_bool_arg+0x7c>
     114:	ldr	r0, [sp]
     118:	movw	r1, #0
     11c:	movt	r1, #0
     120:	bl	0 <strcmp>
     124:	cmp	r0, #0
     128:	bne	138 <parse_bool_arg+0x88>
     12c:	movw	r0, #1
     130:	str	r0, [sp, #4]
     134:	b	15c <parse_bool_arg+0xac>
     138:	movw	r0, #0
     13c:	movt	r0, #0
     140:	ldr	r0, [r0]
     144:	ldr	r2, [sp]
     148:	movw	r1, #0
     14c:	movt	r1, #0
     150:	bl	0 <fprintf>
     154:	mvn	r1, #0
     158:	str	r1, [sp, #4]
     15c:	ldr	r0, [sp, #4]
     160:	mov	sp, fp
     164:	pop	{fp, pc}

00000168 <match_long_arg>:
     168:	push	{fp, lr}
     16c:	mov	fp, sp
     170:	sub	sp, sp, #16
     174:	str	r0, [fp, #-4]
     178:	str	r1, [sp, #8]
     17c:	str	r2, [sp, #4]
     180:	ldr	r0, [fp, #-4]
     184:	ldr	r1, [sp, #8]
     188:	ldr	r2, [sp, #4]
     18c:	bl	0 <strncmp>
     190:	cmp	r0, #0
     194:	movw	r0, #0
     198:	str	r0, [sp]
     19c:	bne	1bc <match_long_arg+0x54>
     1a0:	ldr	r0, [fp, #-4]
     1a4:	bl	0 <strlen>
     1a8:	ldr	r1, [sp, #4]
     1ac:	cmp	r0, r1
     1b0:	movw	r0, #0
     1b4:	moveq	r0, #1
     1b8:	str	r0, [sp]
     1bc:	ldr	r0, [sp]
     1c0:	and	r0, r0, #1
     1c4:	mov	sp, fp
     1c8:	pop	{fp, pc}

000001cc <set_opt>:
     1cc:	push	{fp, lr}
     1d0:	mov	fp, sp
     1d4:	sub	sp, sp, #88	; 0x58
     1d8:	str	r0, [fp, #-8]
     1dc:	str	r1, [fp, #-12]
     1e0:	str	r2, [fp, #-16]
     1e4:	movw	r0, #0
     1e8:	str	r0, [fp, #-20]	; 0xffffffec
     1ec:	ldr	r0, [fp, #-12]
     1f0:	bl	0 <strlen>
     1f4:	str	r0, [fp, #-24]	; 0xffffffe8
     1f8:	ldr	r0, [fp, #-12]
     1fc:	movw	r1, #61	; 0x3d
     200:	bl	0 <strchr>
     204:	str	r0, [fp, #-28]	; 0xffffffe4
     208:	ldr	r0, [fp, #-28]	; 0xffffffe4
     20c:	movw	r1, #0
     210:	cmp	r0, r1
     214:	beq	234 <set_opt+0x68>
     218:	ldr	r0, [fp, #-28]	; 0xffffffe4
     21c:	add	r0, r0, #1
     220:	str	r0, [fp, #-16]
     224:	ldr	r0, [fp, #-28]	; 0xffffffe4
     228:	ldr	r1, [fp, #-12]
     22c:	sub	r0, r0, r1
     230:	str	r0, [fp, #-24]	; 0xffffffe8
     234:	ldr	r0, [fp, #-12]
     238:	ldrb	r0, [r0]
     23c:	cmp	r0, #104	; 0x68
     240:	beq	260 <set_opt+0x94>
     244:	ldr	r1, [fp, #-12]
     248:	movw	r0, #0
     24c:	movt	r0, #0
     250:	bl	0 <strcmp>
     254:	movw	r1, #0
     258:	cmp	r1, r0
     25c:	bne	278 <set_opt+0xac>
     260:	movw	r0, #0
     264:	movt	r0, #0
     268:	ldr	r0, [r0]
     26c:	bl	80 <help>
     270:	movw	r0, #0
     274:	bl	0 <exit>
     278:	ldr	r1, [fp, #-12]
     27c:	movw	r0, #0
     280:	movt	r0, #0
     284:	bl	0 <strcmp>
     288:	movw	r1, #0
     28c:	cmp	r1, r0
     290:	bne	2ec <set_opt+0x120>
     294:	movw	r0, #0
     298:	movt	r0, #0
     29c:	ldr	r0, [r0]
     2a0:	movw	r1, #0
     2a4:	movt	r1, #0
     2a8:	movw	r2, #0
     2ac:	movt	r2, #0
     2b0:	bl	0 <fprintf>
     2b4:	movw	r1, #0
     2b8:	movt	r1, #0
     2bc:	ldr	r1, [r1]
     2c0:	str	r0, [fp, #-32]	; 0xffffffe0
     2c4:	mov	r0, r1
     2c8:	movw	r1, #0
     2cc:	movt	r1, #0
     2d0:	movw	r2, #0
     2d4:	movt	r2, #0
     2d8:	bl	0 <fprintf>
     2dc:	movw	r1, #0
     2e0:	str	r0, [fp, #-36]	; 0xffffffdc
     2e4:	mov	r0, r1
     2e8:	bl	0 <exit>
     2ec:	ldr	r1, [fp, #-12]
     2f0:	movw	r0, #0
     2f4:	movt	r0, #0
     2f8:	bl	0 <strcmp>
     2fc:	movw	r1, #0
     300:	cmp	r1, r0
     304:	bne	320 <set_opt+0x154>
     308:	ldr	r0, [fp, #-8]
     30c:	movw	r1, #1
     310:	str	r1, [r0, #108]	; 0x6c
     314:	movw	r0, #0
     318:	str	r0, [fp, #-4]
     31c:	b	ba8 <set_opt+0x9dc>
     320:	ldr	r1, [fp, #-12]
     324:	movw	r0, #0
     328:	movt	r0, #0
     32c:	bl	0 <strcmp>
     330:	movw	r1, #0
     334:	cmp	r1, r0
     338:	bne	354 <set_opt+0x188>
     33c:	ldr	r0, [fp, #-8]
     340:	movw	r1, #1
     344:	str	r1, [r0, #180]	; 0xb4
     348:	movw	r0, #0
     34c:	str	r0, [fp, #-4]
     350:	b	ba8 <set_opt+0x9dc>
     354:	ldr	r1, [fp, #-12]
     358:	movw	r0, #0
     35c:	movt	r0, #0
     360:	bl	0 <strcmp>
     364:	movw	r1, #0
     368:	cmp	r1, r0
     36c:	bne	388 <set_opt+0x1bc>
     370:	ldr	r0, [fp, #-8]
     374:	movw	r1, #1
     378:	str	r1, [r0, #164]	; 0xa4
     37c:	movw	r0, #0
     380:	str	r0, [fp, #-4]
     384:	b	ba8 <set_opt+0x9dc>
     388:	ldr	r1, [fp, #-12]
     38c:	movw	r0, #0
     390:	movt	r0, #0
     394:	bl	0 <strcmp>
     398:	movw	r1, #0
     39c:	cmp	r1, r0
     3a0:	bne	3bc <set_opt+0x1f0>
     3a4:	ldr	r0, [fp, #-8]
     3a8:	movw	r1, #1
     3ac:	str	r1, [r0, #168]	; 0xa8
     3b0:	movw	r0, #0
     3b4:	str	r0, [fp, #-4]
     3b8:	b	ba8 <set_opt+0x9dc>
     3bc:	ldr	r1, [fp, #-12]
     3c0:	movw	r0, #0
     3c4:	movt	r0, #0
     3c8:	bl	0 <strcmp>
     3cc:	movw	r1, #0
     3d0:	cmp	r1, r0
     3d4:	bne	3f8 <set_opt+0x22c>
     3d8:	ldr	r0, [fp, #-8]
     3dc:	movw	r1, #1
     3e0:	str	r1, [r0, #164]	; 0xa4
     3e4:	ldr	r0, [fp, #-8]
     3e8:	str	r1, [r0, #168]	; 0xa8
     3ec:	movw	r0, #0
     3f0:	str	r0, [fp, #-4]
     3f4:	b	ba8 <set_opt+0x9dc>
     3f8:	ldr	r1, [fp, #-12]
     3fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
     400:	movw	r0, #0
     404:	movt	r0, #0
     408:	bl	168 <match_long_arg>
     40c:	cmp	r0, #0
     410:	beq	4ac <set_opt+0x2e0>
     414:	movw	r0, #0
     418:	movt	r0, #0
     41c:	ldr	r0, [r0]
     420:	movw	r1, #0
     424:	movt	r1, #0
     428:	bl	0 <fprintf>
     42c:	ldr	r1, [fp, #-16]
     430:	movw	r2, #0
     434:	cmp	r1, r2
     438:	bne	464 <set_opt+0x298>
     43c:	movw	r0, #0
     440:	movt	r0, #0
     444:	ldr	r0, [r0]
     448:	movw	r1, #0
     44c:	movt	r1, #0
     450:	bl	0 <fprintf>
     454:	mvn	r1, #0
     458:	str	r0, [fp, #-40]	; 0xffffffd8
     45c:	mov	r0, r1
     460:	bl	0 <exit>
     464:	ldr	r0, [fp, #-16]
     468:	bl	b0 <parse_bool_arg>
     46c:	ldr	r1, [fp, #-8]
     470:	str	r0, [r1, #184]	; 0xb8
     474:	movw	r1, #0
     478:	cmp	r1, r0
     47c:	ble	488 <set_opt+0x2bc>
     480:	mvn	r0, #0
     484:	bl	0 <exit>
     488:	ldr	r0, [fp, #-28]	; 0xffffffe4
     48c:	movw	r1, #0
     490:	cmp	r0, r1
     494:	movw	r0, #0
     498:	movne	r0, #1
     49c:	tst	r0, #1
     4a0:	moveq	r1, #2
     4a4:	str	r1, [fp, #-4]
     4a8:	b	ba8 <set_opt+0x9dc>
     4ac:	ldr	r1, [fp, #-12]
     4b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     4b4:	movw	r0, #0
     4b8:	movt	r0, #0
     4bc:	bl	168 <match_long_arg>
     4c0:	cmp	r0, #0
     4c4:	beq	548 <set_opt+0x37c>
     4c8:	ldr	r0, [fp, #-16]
     4cc:	movw	r1, #0
     4d0:	cmp	r0, r1
     4d4:	bne	500 <set_opt+0x334>
     4d8:	movw	r0, #0
     4dc:	movt	r0, #0
     4e0:	ldr	r0, [r0]
     4e4:	movw	r1, #0
     4e8:	movt	r1, #0
     4ec:	bl	0 <fprintf>
     4f0:	mvn	r1, #0
     4f4:	str	r0, [sp, #44]	; 0x2c
     4f8:	mov	r0, r1
     4fc:	bl	0 <exit>
     500:	ldr	r0, [fp, #-16]
     504:	bl	b0 <parse_bool_arg>
     508:	ldr	r1, [fp, #-8]
     50c:	str	r0, [r1, #188]	; 0xbc
     510:	movw	r1, #0
     514:	cmp	r1, r0
     518:	ble	524 <set_opt+0x358>
     51c:	mvn	r0, #0
     520:	bl	0 <exit>
     524:	ldr	r0, [fp, #-28]	; 0xffffffe4
     528:	movw	r1, #0
     52c:	cmp	r0, r1
     530:	movw	r0, #0
     534:	movne	r0, #1
     538:	tst	r0, #1
     53c:	moveq	r1, #2
     540:	str	r1, [fp, #-4]
     544:	b	ba8 <set_opt+0x9dc>
     548:	ldr	r1, [fp, #-12]
     54c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     550:	movw	r0, #0
     554:	movt	r0, #0
     558:	bl	168 <match_long_arg>
     55c:	cmp	r0, #0
     560:	beq	5d8 <set_opt+0x40c>
     564:	ldr	r0, [fp, #-16]
     568:	movw	r1, #0
     56c:	cmp	r0, r1
     570:	bne	59c <set_opt+0x3d0>
     574:	movw	r0, #0
     578:	movt	r0, #0
     57c:	ldr	r0, [r0]
     580:	movw	r1, #0
     584:	movt	r1, #0
     588:	bl	0 <fprintf>
     58c:	mvn	r1, #0
     590:	str	r0, [sp, #40]	; 0x28
     594:	mov	r0, r1
     598:	bl	0 <exit>
     59c:	ldr	r0, [fp, #-16]
     5a0:	ldr	r1, [fp, #-8]
     5a4:	str	r0, [r1, #116]	; 0x74
     5a8:	ldr	r0, [fp, #-8]
     5ac:	movw	r1, #1
     5b0:	str	r1, [r0, #112]	; 0x70
     5b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     5b8:	movw	r1, #0
     5bc:	cmp	r0, r1
     5c0:	movw	r0, #0
     5c4:	movne	r0, #1
     5c8:	tst	r0, #1
     5cc:	moveq	r1, #2
     5d0:	str	r1, [fp, #-4]
     5d4:	b	ba8 <set_opt+0x9dc>
     5d8:	ldr	r1, [fp, #-12]
     5dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
     5e0:	movw	r0, #0
     5e4:	movt	r0, #0
     5e8:	bl	168 <match_long_arg>
     5ec:	cmp	r0, #0
     5f0:	beq	65c <set_opt+0x490>
     5f4:	ldr	r0, [fp, #-16]
     5f8:	movw	r1, #0
     5fc:	cmp	r0, r1
     600:	bne	62c <set_opt+0x460>
     604:	movw	r0, #0
     608:	movt	r0, #0
     60c:	ldr	r0, [r0]
     610:	movw	r1, #0
     614:	movt	r1, #0
     618:	bl	0 <fprintf>
     61c:	mvn	r1, #0
     620:	str	r0, [sp, #36]	; 0x24
     624:	mov	r0, r1
     628:	bl	0 <exit>
     62c:	ldr	r0, [fp, #-16]
     630:	ldr	r1, [fp, #-8]
     634:	str	r0, [r1, #120]	; 0x78
     638:	ldr	r0, [fp, #-28]	; 0xffffffe4
     63c:	movw	r1, #0
     640:	cmp	r0, r1
     644:	movw	r0, #0
     648:	movne	r0, #1
     64c:	tst	r0, #1
     650:	moveq	r1, #2
     654:	str	r1, [fp, #-4]
     658:	b	ba8 <set_opt+0x9dc>
     65c:	ldr	r1, [fp, #-12]
     660:	ldr	r2, [fp, #-24]	; 0xffffffe8
     664:	movw	r0, #0
     668:	movt	r0, #0
     66c:	bl	168 <match_long_arg>
     670:	cmp	r0, #0
     674:	beq	6e0 <set_opt+0x514>
     678:	ldr	r0, [fp, #-16]
     67c:	movw	r1, #0
     680:	cmp	r0, r1
     684:	bne	6b0 <set_opt+0x4e4>
     688:	movw	r0, #0
     68c:	movt	r0, #0
     690:	ldr	r0, [r0]
     694:	movw	r1, #0
     698:	movt	r1, #0
     69c:	bl	0 <fprintf>
     6a0:	mvn	r1, #0
     6a4:	str	r0, [sp, #32]
     6a8:	mov	r0, r1
     6ac:	bl	0 <exit>
     6b0:	ldr	r0, [fp, #-16]
     6b4:	ldr	r1, [fp, #-8]
     6b8:	str	r0, [r1, #124]	; 0x7c
     6bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
     6c0:	movw	r1, #0
     6c4:	cmp	r0, r1
     6c8:	movw	r0, #0
     6cc:	movne	r0, #1
     6d0:	tst	r0, #1
     6d4:	moveq	r1, #2
     6d8:	str	r1, [fp, #-4]
     6dc:	b	ba8 <set_opt+0x9dc>
     6e0:	ldr	r1, [fp, #-12]
     6e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
     6e8:	movw	r0, #0
     6ec:	movt	r0, #0
     6f0:	bl	168 <match_long_arg>
     6f4:	cmp	r0, #0
     6f8:	beq	764 <set_opt+0x598>
     6fc:	ldr	r0, [fp, #-16]
     700:	movw	r1, #0
     704:	cmp	r0, r1
     708:	bne	734 <set_opt+0x568>
     70c:	movw	r0, #0
     710:	movt	r0, #0
     714:	ldr	r0, [r0]
     718:	movw	r1, #0
     71c:	movt	r1, #0
     720:	bl	0 <fprintf>
     724:	mvn	r1, #0
     728:	str	r0, [sp, #28]
     72c:	mov	r0, r1
     730:	bl	0 <exit>
     734:	ldr	r0, [fp, #-16]
     738:	ldr	r1, [fp, #-8]
     73c:	str	r0, [r1, #196]	; 0xc4
     740:	ldr	r0, [fp, #-28]	; 0xffffffe4
     744:	movw	r1, #0
     748:	cmp	r0, r1
     74c:	movw	r0, #0
     750:	movne	r0, #1
     754:	tst	r0, #1
     758:	moveq	r1, #2
     75c:	str	r1, [fp, #-4]
     760:	b	ba8 <set_opt+0x9dc>
     764:	ldr	r1, [fp, #-12]
     768:	ldr	r2, [fp, #-24]	; 0xffffffe8
     76c:	movw	r0, #0
     770:	movt	r0, #0
     774:	bl	168 <match_long_arg>
     778:	cmp	r0, #0
     77c:	beq	7e8 <set_opt+0x61c>
     780:	ldr	r0, [fp, #-16]
     784:	movw	r1, #0
     788:	cmp	r0, r1
     78c:	bne	7b8 <set_opt+0x5ec>
     790:	movw	r0, #0
     794:	movt	r0, #0
     798:	ldr	r0, [r0]
     79c:	movw	r1, #0
     7a0:	movt	r1, #0
     7a4:	bl	0 <fprintf>
     7a8:	mvn	r1, #0
     7ac:	str	r0, [sp, #24]
     7b0:	mov	r0, r1
     7b4:	bl	0 <exit>
     7b8:	ldr	r0, [fp, #-16]
     7bc:	ldr	r1, [fp, #-8]
     7c0:	str	r0, [r1, #192]	; 0xc0
     7c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     7c8:	movw	r1, #0
     7cc:	cmp	r0, r1
     7d0:	movw	r0, #0
     7d4:	movne	r0, #1
     7d8:	tst	r0, #1
     7dc:	moveq	r1, #2
     7e0:	str	r1, [fp, #-4]
     7e4:	b	ba8 <set_opt+0x9dc>
     7e8:	ldr	r0, [fp, #-12]
     7ec:	ldrb	r0, [r0]
     7f0:	sub	r0, r0, #45	; 0x2d
     7f4:	cmp	r0, #74	; 0x4a
     7f8:	str	r0, [sp, #20]
     7fc:	bhi	b78 <set_opt+0x9ac>
     800:	add	r0, pc, #8
     804:	ldr	r1, [sp, #20]
     808:	ldr	r0, [r0, r1, lsl #2]
     80c:	mov	pc, r0
     810:	.word	0x0000093c
     814:	.word	0x00000b78
     818:	.word	0x00000b78
     81c:	.word	0x00000b78
     820:	.word	0x00000b78
     824:	.word	0x00000b78
     828:	.word	0x00000b78
     82c:	.word	0x00000b78
     830:	.word	0x00000b78
     834:	.word	0x00000b78
     838:	.word	0x00000b78
     83c:	.word	0x00000b78
     840:	.word	0x00000b78
     844:	.word	0x00000b78
     848:	.word	0x00000b78
     84c:	.word	0x00000b78
     850:	.word	0x00000b78
     854:	.word	0x00000b78
     858:	.word	0x00000b78
     85c:	.word	0x00000b78
     860:	.word	0x00000b78
     864:	.word	0x00000b78
     868:	.word	0x00000b78
     86c:	.word	0x00000b78
     870:	.word	0x00000b78
     874:	.word	0x00000b78
     878:	.word	0x00000b78
     87c:	.word	0x00000b78
     880:	.word	0x00000968
     884:	.word	0x00000b78
     888:	.word	0x00000b78
     88c:	.word	0x00000b78
     890:	.word	0x00000b78
     894:	.word	0x00000b78
     898:	.word	0x00000b78
     89c:	.word	0x00000b78
     8a0:	.word	0x00000b78
     8a4:	.word	0x00000b78
     8a8:	.word	0x00000b78
     8ac:	.word	0x00000b78
     8b0:	.word	0x00000b78
     8b4:	.word	0x00000b78
     8b8:	.word	0x00000b78
     8bc:	.word	0x00000b78
     8c0:	.word	0x00000b78
     8c4:	.word	0x00000b78
     8c8:	.word	0x00000b78
     8cc:	.word	0x00000b78
     8d0:	.word	0x00000b78
     8d4:	.word	0x00000b78
     8d8:	.word	0x00000b78
     8dc:	.word	0x00000b78
     8e0:	.word	0x00000b38
     8e4:	.word	0x00000b78
     8e8:	.word	0x00000af0
     8ec:	.word	0x00000b20
     8f0:	.word	0x00000b78
     8f4:	.word	0x00000b78
     8f8:	.word	0x00000b78
     8fc:	.word	0x00000b78
     900:	.word	0x00000b78
     904:	.word	0x00000b78
     908:	.word	0x00000b78
     90c:	.word	0x00000b78
     910:	.word	0x00000b78
     914:	.word	0x00000b78
     918:	.word	0x00000a00
     91c:	.word	0x00000b78
     920:	.word	0x00000b78
     924:	.word	0x00000b08
     928:	.word	0x00000b78
     92c:	.word	0x00000b78
     930:	.word	0x00000b78
     934:	.word	0x00000ad8
     938:	.word	0x00000ac0
     93c:	movw	r0, #0
     940:	movt	r0, #0
     944:	ldr	r0, [r0]
     948:	ldr	r2, [fp, #-12]
     94c:	movw	r1, #0
     950:	movt	r1, #0
     954:	bl	0 <fprintf>
     958:	mvn	r1, #0
     95c:	str	r0, [sp, #16]
     960:	mov	r0, r1
     964:	bl	0 <exit>
     968:	ldr	r0, [fp, #-12]
     96c:	ldrsb	r0, [r0, #1]
     970:	cmp	r0, #0
     974:	beq	990 <set_opt+0x7c4>
     978:	movw	r0, #1
     97c:	str	r0, [fp, #-20]	; 0xffffffec
     980:	ldr	r0, [fp, #-12]
     984:	add	r0, r0, #1
     988:	str	r0, [fp, #-16]
     98c:	b	9d4 <set_opt+0x808>
     990:	ldr	r0, [fp, #-16]
     994:	movw	r1, #0
     998:	cmp	r0, r1
     99c:	bne	9c8 <set_opt+0x7fc>
     9a0:	movw	r0, #0
     9a4:	movt	r0, #0
     9a8:	ldr	r0, [r0]
     9ac:	movw	r1, #0
     9b0:	movt	r1, #0
     9b4:	bl	0 <fprintf>
     9b8:	mvn	r1, #0
     9bc:	str	r0, [sp, #12]
     9c0:	mov	r0, r1
     9c4:	bl	0 <exit>
     9c8:	movw	r0, #2
     9cc:	str	r0, [fp, #-20]	; 0xffffffec
     9d0:	b	9d4 <set_opt+0x808>
     9d4:	ldr	r0, [fp, #-16]
     9d8:	ldr	r1, [fp, #-8]
     9dc:	ldr	r2, [r1, #200]	; 0xc8
     9e0:	ldr	r3, [r1, #208]	; 0xd0
     9e4:	add	ip, r3, #1
     9e8:	str	ip, [r1, #208]	; 0xd0
     9ec:	add	r1, r2, r3, lsl #2
     9f0:	str	r0, [r1]
     9f4:	ldr	r0, [fp, #-20]	; 0xffffffec
     9f8:	str	r0, [fp, #-4]
     9fc:	b	ba8 <set_opt+0x9dc>
     a00:	ldr	r0, [fp, #-8]
     a04:	ldr	r0, [r0, #216]	; 0xd8
     a08:	movw	r1, #0
     a0c:	cmp	r0, r1
     a10:	beq	a3c <set_opt+0x870>
     a14:	movw	r0, #0
     a18:	movt	r0, #0
     a1c:	ldr	r0, [r0]
     a20:	movw	r1, #0
     a24:	movt	r1, #0
     a28:	bl	0 <fprintf>
     a2c:	mvn	r1, #0
     a30:	str	r0, [sp, #8]
     a34:	mov	r0, r1
     a38:	bl	0 <exit>
     a3c:	ldr	r0, [fp, #-12]
     a40:	ldrsb	r0, [r0, #1]
     a44:	cmp	r0, #0
     a48:	beq	a64 <set_opt+0x898>
     a4c:	movw	r0, #1
     a50:	str	r0, [fp, #-20]	; 0xffffffec
     a54:	ldr	r0, [fp, #-12]
     a58:	add	r0, r0, #1
     a5c:	str	r0, [fp, #-16]
     a60:	b	aa8 <set_opt+0x8dc>
     a64:	ldr	r0, [fp, #-16]
     a68:	movw	r1, #0
     a6c:	cmp	r0, r1
     a70:	bne	a9c <set_opt+0x8d0>
     a74:	movw	r0, #0
     a78:	movt	r0, #0
     a7c:	ldr	r0, [r0]
     a80:	movw	r1, #0
     a84:	movt	r1, #0
     a88:	bl	0 <fprintf>
     a8c:	mvn	r1, #0
     a90:	str	r0, [sp, #4]
     a94:	mov	r0, r1
     a98:	bl	0 <exit>
     a9c:	movw	r0, #2
     aa0:	str	r0, [fp, #-20]	; 0xffffffec
     aa4:	b	aa8 <set_opt+0x8dc>
     aa8:	ldr	r0, [fp, #-16]
     aac:	ldr	r1, [fp, #-8]
     ab0:	str	r0, [r1, #216]	; 0xd8
     ab4:	ldr	r0, [fp, #-20]	; 0xffffffec
     ab8:	str	r0, [fp, #-4]
     abc:	b	ba8 <set_opt+0x9dc>
     ac0:	ldr	r0, [fp, #-8]
     ac4:	movw	r1, #1
     ac8:	str	r1, [r0, #156]	; 0x9c
     acc:	movw	r0, #0
     ad0:	str	r0, [fp, #-4]
     ad4:	b	ba8 <set_opt+0x9dc>
     ad8:	ldr	r0, [fp, #-8]
     adc:	movw	r1, #1
     ae0:	str	r1, [r0, #160]	; 0xa0
     ae4:	movw	r0, #0
     ae8:	str	r0, [fp, #-4]
     aec:	b	ba8 <set_opt+0x9dc>
     af0:	ldr	r0, [fp, #-8]
     af4:	movw	r1, #1
     af8:	str	r1, [r0, #144]	; 0x90
     afc:	movw	r0, #0
     b00:	str	r0, [fp, #-4]
     b04:	b	ba8 <set_opt+0x9dc>
     b08:	ldr	r0, [fp, #-8]
     b0c:	movw	r1, #1
     b10:	str	r1, [r0, #172]	; 0xac
     b14:	movw	r0, #0
     b18:	str	r0, [fp, #-4]
     b1c:	b	ba8 <set_opt+0x9dc>
     b20:	ldr	r0, [fp, #-8]
     b24:	movw	r1, #1
     b28:	str	r1, [r0, #112]	; 0x70
     b2c:	movw	r0, #0
     b30:	str	r0, [fp, #-4]
     b34:	b	ba8 <set_opt+0x9dc>
     b38:	ldr	r0, [fp, #-8]
     b3c:	movw	r1, #1
     b40:	str	r1, [r0, #152]	; 0x98
     b44:	ldr	r0, [fp, #-8]
     b48:	str	r1, [r0, #156]	; 0x9c
     b4c:	ldr	r0, [fp, #-8]
     b50:	str	r1, [r0, #160]	; 0xa0
     b54:	ldr	r0, [fp, #-8]
     b58:	str	r1, [r0, #144]	; 0x90
     b5c:	ldr	r0, [fp, #-8]
     b60:	str	r1, [r0, #148]	; 0x94
     b64:	ldr	r0, [fp, #-8]
     b68:	str	r1, [r0, #172]	; 0xac
     b6c:	movw	r0, #0
     b70:	str	r0, [fp, #-4]
     b74:	b	ba8 <set_opt+0x9dc>
     b78:	movw	r0, #0
     b7c:	movt	r0, #0
     b80:	ldr	r0, [r0]
     b84:	ldr	r1, [fp, #-12]
     b88:	ldrb	r2, [r1]
     b8c:	movw	r1, #0
     b90:	movt	r1, #0
     b94:	bl	0 <fprintf>
     b98:	mvn	r1, #0
     b9c:	str	r0, [sp]
     ba0:	mov	r0, r1
     ba4:	bl	0 <exit>
     ba8:	ldr	r0, [fp, #-4]
     bac:	mov	sp, fp
     bb0:	pop	{fp, pc}

00000bb4 <get_opt>:
     bb4:	push	{fp, lr}
     bb8:	mov	fp, sp
     bbc:	sub	sp, sp, #24
     bc0:	str	r0, [fp, #-8]
     bc4:	str	r1, [sp, #12]
     bc8:	str	r2, [sp, #8]
     bcc:	ldr	r0, [sp, #12]
     bd0:	ldrb	r0, [r0, #1]
     bd4:	cmp	r0, #45	; 0x2d
     bd8:	bne	c0c <get_opt+0x58>
     bdc:	ldr	r0, [fp, #-8]
     be0:	ldr	r1, [sp, #12]
     be4:	add	r1, r1, #1
     be8:	ldr	r2, [sp, #8]
     bec:	bl	1cc <set_opt>
     bf0:	movw	r1, #2
     bf4:	cmp	r1, r0
     bf8:	movw	r0, #0
     bfc:	moveq	r0, #1
     c00:	and	r0, r0, #1
     c04:	str	r0, [fp, #-4]
     c08:	b	cdc <get_opt+0x128>
     c0c:	ldr	r0, [sp, #12]
     c10:	add	r0, r0, #1
     c14:	str	r0, [sp, #12]
     c18:	ldr	r0, [sp, #12]
     c1c:	ldrb	r0, [r0]
     c20:	cmp	r0, #0
     c24:	bne	c50 <get_opt+0x9c>
     c28:	movw	r0, #0
     c2c:	movt	r0, #0
     c30:	ldr	r0, [r0]
     c34:	movw	r1, #0
     c38:	movt	r1, #0
     c3c:	bl	0 <fprintf>
     c40:	mvn	r1, #0
     c44:	str	r0, [sp, #4]
     c48:	mov	r0, r1
     c4c:	bl	0 <exit>
     c50:	b	c54 <get_opt+0xa0>
     c54:	ldr	r0, [sp, #12]
     c58:	ldrsb	r0, [r0]
     c5c:	cmp	r0, #0
     c60:	beq	cd4 <get_opt+0x120>
     c64:	ldr	r0, [fp, #-8]
     c68:	ldr	r1, [sp, #12]
     c6c:	ldr	r2, [sp, #8]
     c70:	bl	1cc <set_opt>
     c74:	mov	r1, r0
     c78:	cmp	r0, #0
     c7c:	str	r1, [sp]
     c80:	beq	ca8 <get_opt+0xf4>
     c84:	b	c88 <get_opt+0xd4>
     c88:	ldr	r0, [sp]
     c8c:	cmp	r0, #1
     c90:	beq	cb8 <get_opt+0x104>
     c94:	b	c98 <get_opt+0xe4>
     c98:	ldr	r0, [sp]
     c9c:	cmp	r0, #2
     ca0:	beq	cc4 <get_opt+0x110>
     ca4:	b	cd0 <get_opt+0x11c>
     ca8:	ldr	r0, [sp, #12]
     cac:	add	r0, r0, #1
     cb0:	str	r0, [sp, #12]
     cb4:	b	c54 <get_opt+0xa0>
     cb8:	movw	r0, #0
     cbc:	str	r0, [fp, #-4]
     cc0:	b	cdc <get_opt+0x128>
     cc4:	movw	r0, #1
     cc8:	str	r0, [fp, #-4]
     ccc:	b	cdc <get_opt+0x128>
     cd0:	b	c54 <get_opt+0xa0>
     cd4:	movw	r0, #0
     cd8:	str	r0, [fp, #-4]
     cdc:	ldr	r0, [fp, #-4]
     ce0:	mov	sp, fp
     ce4:	pop	{fp, pc}

00000ce8 <parse_opts>:
     ce8:	push	{fp, lr}
     cec:	mov	fp, sp
     cf0:	sub	sp, sp, #32
     cf4:	str	r0, [fp, #-4]
     cf8:	str	r1, [fp, #-8]
     cfc:	str	r2, [fp, #-12]
     d00:	movw	r0, #1
     d04:	str	r0, [sp, #16]
     d08:	ldr	r0, [sp, #16]
     d0c:	ldr	r1, [fp, #-4]
     d10:	cmp	r0, r1
     d14:	bge	de8 <parse_opts+0x100>
     d18:	ldr	r0, [fp, #-8]
     d1c:	ldr	r1, [sp, #16]
     d20:	add	r0, r0, r1, lsl #2
     d24:	ldr	r0, [r0]
     d28:	ldrb	r0, [r0]
     d2c:	cmp	r0, #45	; 0x2d
     d30:	bne	dac <parse_opts+0xc4>
     d34:	ldr	r0, [fp, #-8]
     d38:	ldr	r1, [sp, #16]
     d3c:	add	r0, r0, r1, lsl #2
     d40:	ldr	r0, [r0]
     d44:	str	r0, [sp, #12]
     d48:	ldr	r0, [sp, #16]
     d4c:	add	r0, r0, #1
     d50:	ldr	r1, [fp, #-4]
     d54:	cmp	r0, r1
     d58:	bge	d78 <parse_opts+0x90>
     d5c:	ldr	r0, [fp, #-8]
     d60:	ldr	r1, [sp, #16]
     d64:	add	r1, r1, #1
     d68:	add	r0, r0, r1, lsl #2
     d6c:	ldr	r0, [r0]
     d70:	str	r0, [sp, #4]
     d74:	b	d84 <parse_opts+0x9c>
     d78:	movw	r0, #0
     d7c:	str	r0, [sp, #4]
     d80:	b	d84 <parse_opts+0x9c>
     d84:	ldr	r0, [sp, #4]
     d88:	str	r0, [sp, #8]
     d8c:	ldr	r0, [fp, #-12]
     d90:	ldr	r1, [sp, #12]
     d94:	ldr	r2, [sp, #8]
     d98:	bl	bb4 <get_opt>
     d9c:	ldr	r1, [sp, #16]
     da0:	add	r0, r1, r0
     da4:	str	r0, [sp, #16]
     da8:	b	dd4 <parse_opts+0xec>
     dac:	ldr	r0, [fp, #-8]
     db0:	ldr	r1, [sp, #16]
     db4:	ldr	r0, [r0, r1, lsl #2]
     db8:	ldr	r1, [fp, #-12]
     dbc:	ldr	r2, [r1, #204]	; 0xcc
     dc0:	ldr	r3, [r1, #212]	; 0xd4
     dc4:	add	ip, r3, #1
     dc8:	str	ip, [r1, #212]	; 0xd4
     dcc:	add	r1, r2, r3, lsl #2
     dd0:	str	r0, [r1]
     dd4:	b	dd8 <parse_opts+0xf0>
     dd8:	ldr	r0, [sp, #16]
     ddc:	add	r0, r0, #1
     de0:	str	r0, [sp, #16]
     de4:	b	d08 <parse_opts+0x20>
     de8:	mov	sp, fp
     dec:	pop	{fp, pc}

00000df0 <main>:
     df0:	push	{r4, r5, fp, lr}
     df4:	add	fp, sp, #8
     df8:	sub	sp, sp, #288	; 0x120
     dfc:	movw	r2, #0
     e00:	str	r2, [fp, #-12]
     e04:	str	r0, [fp, #-16]
     e08:	str	r1, [fp, #-20]	; 0xffffffec
     e0c:	str	r2, [sp, #44]	; 0x2c
     e10:	str	r2, [sp, #44]	; 0x2c
     e14:	str	r2, [sp, #36]	; 0x24
     e18:	ldr	r0, [fp, #-16]
     e1c:	cmp	r0, #2
     e20:	bge	e3c <main+0x4c>
     e24:	movw	r0, #0
     e28:	movt	r0, #0
     e2c:	ldr	r0, [r0]
     e30:	bl	0 <usage>
     e34:	mvn	r0, #0
     e38:	bl	0 <exit>
     e3c:	add	r0, sp, #48	; 0x30
     e40:	bl	0 <flatcc_init_options>
     e44:	ldr	r0, [fp, #-16]
     e48:	lsl	r0, r0, #2
     e4c:	bl	0 <malloc>
     e50:	str	r0, [sp, #248]	; 0xf8
     e54:	movw	r1, #0
     e58:	cmp	r0, r1
     e5c:	bne	e88 <main+0x98>
     e60:	movw	r0, #0
     e64:	movt	r0, #0
     e68:	ldr	r0, [r0]
     e6c:	movw	r1, #0
     e70:	movt	r1, #0
     e74:	bl	0 <fprintf>
     e78:	mvn	r1, #0
     e7c:	str	r0, [sp, #24]
     e80:	mov	r0, r1
     e84:	bl	0 <exit>
     e88:	ldr	r0, [fp, #-16]
     e8c:	lsl	r0, r0, #2
     e90:	bl	0 <malloc>
     e94:	str	r0, [sp, #252]	; 0xfc
     e98:	movw	r1, #0
     e9c:	cmp	r0, r1
     ea0:	bne	ed4 <main+0xe4>
     ea4:	movw	r0, #0
     ea8:	movt	r0, #0
     eac:	ldr	r0, [r0]
     eb0:	movw	r1, #0
     eb4:	movt	r1, #0
     eb8:	bl	0 <fprintf>
     ebc:	ldr	r1, [sp, #248]	; 0xf8
     ec0:	str	r0, [sp, #20]
     ec4:	mov	r0, r1
     ec8:	bl	0 <free>
     ecc:	mvn	r0, #0
     ed0:	bl	0 <exit>
     ed4:	ldr	r0, [fp, #-16]
     ed8:	ldr	r1, [fp, #-20]	; 0xffffffec
     edc:	add	r2, sp, #48	; 0x30
     ee0:	bl	ce8 <parse_opts>
     ee4:	ldr	r0, [sp, #204]	; 0xcc
     ee8:	cmp	r0, #0
     eec:	movw	r0, #0
     ef0:	str	r0, [sp, #16]
     ef4:	beq	f0c <main+0x11c>
     ef8:	ldr	r0, [sp, #192]	; 0xc0
     efc:	cmp	r0, #0
     f00:	movw	r0, #0
     f04:	movne	r0, #1
     f08:	str	r0, [sp, #16]
     f0c:	ldr	r0, [sp, #16]
     f10:	and	r0, r0, #1
     f14:	str	r0, [sp, #196]	; 0xc4
     f18:	ldr	r0, [sp, #260]	; 0x104
     f1c:	cmp	r0, #0
     f20:	bne	fc4 <main+0x1d4>
     f24:	ldr	r0, [sp, #192]	; 0xc0
     f28:	cmp	r0, #0
     f2c:	beq	f3c <main+0x14c>
     f30:	ldr	r0, [sp, #228]	; 0xe4
     f34:	cmp	r0, #0
     f38:	beq	f58 <main+0x168>
     f3c:	movw	r0, #0
     f40:	movt	r0, #0
     f44:	ldr	r0, [r0]
     f48:	movw	r1, #0
     f4c:	movt	r1, #0
     f50:	bl	0 <fprintf>
     f54:	b	1248 <main+0x458>
     f58:	add	r0, sp, #48	; 0x30
     f5c:	movw	r1, #0
     f60:	str	r1, [sp, #12]
     f64:	ldr	r2, [sp, #12]
     f68:	ldr	r3, [sp, #12]
     f6c:	bl	0 <flatcc_create_context>
     f70:	str	r0, [sp, #44]	; 0x2c
     f74:	movw	r1, #0
     f78:	cmp	r0, r1
     f7c:	bne	f9c <main+0x1ac>
     f80:	movw	r0, #0
     f84:	movt	r0, #0
     f88:	ldr	r0, [r0]
     f8c:	movw	r1, #0
     f90:	movt	r1, #0
     f94:	bl	0 <fprintf>
     f98:	b	1248 <main+0x458>
     f9c:	ldr	r0, [sp, #44]	; 0x2c
     fa0:	bl	0 <flatcc_generate_files>
     fa4:	cmp	r0, #0
     fa8:	beq	fb0 <main+0x1c0>
     fac:	b	1248 <main+0x458>
     fb0:	ldr	r0, [sp, #44]	; 0x2c
     fb4:	bl	0 <flatcc_destroy_context>
     fb8:	movw	r0, #0
     fbc:	str	r0, [sp, #44]	; 0x2c
     fc0:	b	1250 <main+0x460>
     fc4:	ldr	r0, [sp, #200]	; 0xc8
     fc8:	cmp	r0, #0
     fcc:	movw	r0, #1
     fd0:	str	r0, [sp, #8]
     fd4:	bne	1050 <main+0x260>
     fd8:	ldr	r0, [sp, #204]	; 0xcc
     fdc:	cmp	r0, #0
     fe0:	movw	r0, #1
     fe4:	str	r0, [sp, #8]
     fe8:	bne	1050 <main+0x260>
     fec:	ldr	r0, [sp, #208]	; 0xd0
     ff0:	cmp	r0, #0
     ff4:	movw	r0, #1
     ff8:	str	r0, [sp, #8]
     ffc:	bne	1050 <main+0x260>
    1000:	ldr	r0, [sp, #192]	; 0xc0
    1004:	cmp	r0, #0
    1008:	movw	r0, #1
    100c:	str	r0, [sp, #8]
    1010:	bne	1050 <main+0x260>
    1014:	ldr	r0, [sp, #196]	; 0xc4
    1018:	cmp	r0, #0
    101c:	movw	r0, #1
    1020:	str	r0, [sp, #8]
    1024:	bne	1050 <main+0x260>
    1028:	ldr	r0, [sp, #212]	; 0xd4
    102c:	cmp	r0, #0
    1030:	movw	r0, #1
    1034:	str	r0, [sp, #8]
    1038:	bne	1050 <main+0x260>
    103c:	ldr	r0, [sp, #216]	; 0xd8
    1040:	cmp	r0, #0
    1044:	movw	r0, #0
    1048:	movne	r0, #1
    104c:	str	r0, [sp, #8]
    1050:	ldr	r0, [sp, #8]
    1054:	and	r0, r0, #1
    1058:	str	r0, [sp, #32]
    105c:	ldr	r0, [sp, #228]	; 0xe4
    1060:	cmp	r0, #0
    1064:	bne	1094 <main+0x2a4>
    1068:	ldr	r0, [sp, #32]
    106c:	cmp	r0, #0
    1070:	beq	108c <main+0x29c>
    1074:	ldr	r0, [sp, #204]	; 0xcc
    1078:	cmp	r0, #0
    107c:	bne	108c <main+0x29c>
    1080:	ldr	r0, [sp, #208]	; 0xd0
    1084:	cmp	r0, #0
    1088:	beq	1094 <main+0x2a4>
    108c:	movw	r0, #1
    1090:	str	r0, [sp, #200]	; 0xc8
    1094:	ldr	r0, [sp, #228]	; 0xe4
    1098:	cmp	r0, #0
    109c:	beq	1104 <main+0x314>
    10a0:	ldr	r0, [sp, #32]
    10a4:	cmp	r0, #0
    10a8:	beq	1104 <main+0x314>
    10ac:	ldr	r0, [sp, #156]	; 0x9c
    10b0:	cmp	r0, #0
    10b4:	beq	10d4 <main+0x2e4>
    10b8:	movw	r0, #0
    10bc:	movt	r0, #0
    10c0:	ldr	r0, [r0]
    10c4:	movw	r1, #0
    10c8:	movt	r1, #0
    10cc:	bl	0 <fprintf>
    10d0:	b	1248 <main+0x458>
    10d4:	ldr	r0, [sp, #172]	; 0xac
    10d8:	movw	r1, #0
    10dc:	cmp	r0, r1
    10e0:	beq	1100 <main+0x310>
    10e4:	movw	r0, #0
    10e8:	movt	r0, #0
    10ec:	ldr	r0, [r0]
    10f0:	movw	r1, #0
    10f4:	movt	r1, #0
    10f8:	bl	0 <fprintf>
    10fc:	b	1248 <main+0x458>
    1100:	b	1104 <main+0x314>
    1104:	ldr	r0, [sp, #168]	; 0xa8
    1108:	movw	r1, #0
    110c:	cmp	r0, r1
    1110:	beq	1140 <main+0x350>
    1114:	ldr	r0, [sp, #164]	; 0xa4
    1118:	movw	r1, #0
    111c:	cmp	r0, r1
    1120:	bne	1140 <main+0x350>
    1124:	movw	r0, #0
    1128:	movt	r0, #0
    112c:	ldr	r0, [r0]
    1130:	movw	r1, #0
    1134:	movt	r1, #0
    1138:	bl	0 <fprintf>
    113c:	b	1248 <main+0x458>
    1140:	ldr	r0, [sp, #156]	; 0x9c
    1144:	cmp	r0, #0
    1148:	beq	1178 <main+0x388>
    114c:	ldr	r0, [sp, #172]	; 0xac
    1150:	movw	r1, #0
    1154:	cmp	r0, r1
    1158:	beq	1178 <main+0x388>
    115c:	movw	r0, #0
    1160:	movt	r0, #0
    1164:	ldr	r0, [r0]
    1168:	movw	r1, #0
    116c:	movt	r1, #0
    1170:	bl	0 <fprintf>
    1174:	b	1248 <main+0x458>
    1178:	movw	r0, #0
    117c:	str	r0, [sp, #40]	; 0x28
    1180:	ldr	r0, [sp, #252]	; 0xfc
    1184:	str	r0, [sp, #28]
    1188:	ldr	r0, [sp, #40]	; 0x28
    118c:	ldr	r1, [sp, #260]	; 0x104
    1190:	cmp	r0, r1
    1194:	bge	1244 <main+0x454>
    1198:	ldr	r0, [sp, #28]
    119c:	ldr	r1, [r0]
    11a0:	add	r0, sp, #48	; 0x30
    11a4:	movw	r2, #0
    11a8:	str	r2, [sp, #4]
    11ac:	ldr	r3, [sp, #4]
    11b0:	bl	0 <flatcc_create_context>
    11b4:	str	r0, [sp, #44]	; 0x2c
    11b8:	movw	r1, #0
    11bc:	cmp	r0, r1
    11c0:	bne	11e0 <main+0x3f0>
    11c4:	movw	r0, #0
    11c8:	movt	r0, #0
    11cc:	ldr	r0, [r0]
    11d0:	movw	r1, #0
    11d4:	movt	r1, #0
    11d8:	bl	0 <fprintf>
    11dc:	b	1248 <main+0x458>
    11e0:	ldr	r0, [sp, #44]	; 0x2c
    11e4:	ldr	r1, [sp, #28]
    11e8:	ldr	r1, [r1]
    11ec:	bl	0 <flatcc_parse_file>
    11f0:	cmp	r0, #0
    11f4:	beq	11fc <main+0x40c>
    11f8:	b	1248 <main+0x458>
    11fc:	ldr	r0, [sp, #44]	; 0x2c
    1200:	bl	0 <flatcc_generate_files>
    1204:	cmp	r0, #0
    1208:	beq	1210 <main+0x420>
    120c:	b	1248 <main+0x458>
    1210:	ldr	r0, [sp, #44]	; 0x2c
    1214:	bl	0 <flatcc_destroy_context>
    1218:	movw	r0, #0
    121c:	str	r0, [sp, #44]	; 0x2c
    1220:	movw	r0, #1
    1224:	str	r0, [sp, #176]	; 0xb0
    1228:	ldr	r0, [sp, #40]	; 0x28
    122c:	add	r0, r0, #1
    1230:	str	r0, [sp, #40]	; 0x28
    1234:	ldr	r0, [sp, #28]
    1238:	add	r0, r0, #4
    123c:	str	r0, [sp, #28]
    1240:	b	1188 <main+0x398>
    1244:	b	1250 <main+0x460>
    1248:	mvn	r0, #0
    124c:	str	r0, [sp, #36]	; 0x24
    1250:	ldr	r0, [sp, #44]	; 0x2c
    1254:	movw	r1, #0
    1258:	cmp	r0, r1
    125c:	beq	1270 <main+0x480>
    1260:	ldr	r0, [sp, #44]	; 0x2c
    1264:	bl	0 <flatcc_destroy_context>
    1268:	movw	r0, #0
    126c:	str	r0, [sp, #44]	; 0x2c
    1270:	ldr	r0, [sp, #36]	; 0x24
    1274:	cmp	r0, #0
    1278:	beq	1294 <main+0x4a4>
    127c:	movw	r0, #0
    1280:	movt	r0, #0
    1284:	ldr	r0, [r0]
    1288:	movw	r1, #0
    128c:	movt	r1, #0
    1290:	bl	0 <fprintf>
    1294:	ldr	r0, [sp, #248]	; 0xf8
    1298:	bl	0 <free>
    129c:	ldr	r0, [sp, #252]	; 0xfc
    12a0:	bl	0 <free>
    12a4:	ldr	r0, [sp, #36]	; 0x24
    12a8:	sub	sp, fp, #8
    12ac:	pop	{r4, r5, fp, pc}
