
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-xmlschema.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <generate_xmlschema>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #112	; 0x70
   c:	str	r0, [fp, #-4]
  10:	str	r1, [fp, #-8]
  14:	str	r2, [fp, #-12]
  18:	str	r3, [fp, #-16]
  1c:	movw	r0, #0
  20:	movt	r0, #0
  24:	ldr	r0, [r0]
  28:	str	r0, [fp, #-20]	; 0xffffffec
  2c:	ldr	r0, [fp, #-8]
  30:	bl	0 <coda_data_dictionary_get_product_class>
  34:	str	r0, [fp, #-24]	; 0xffffffe8
  38:	ldr	r0, [fp, #-24]	; 0xffffffe8
  3c:	movw	r1, #0
  40:	cmp	r0, r1
  44:	bne	a0 <generate_xmlschema+0xa0>
  48:	movw	r0, #0
  4c:	movt	r0, #0
  50:	ldr	r0, [r0]
  54:	ldr	r1, [pc, #840]	; 3a4 <generate_xmlschema+0x3a4>
  58:	ldr	r1, [pc, r1]
  5c:	str	r0, [fp, #-40]	; 0xffffffd8
  60:	str	r1, [fp, #-44]	; 0xffffffd4
  64:	bl	0 <__aeabi_read_tp>
  68:	ldr	r1, [fp, #-44]	; 0xffffffd4
  6c:	ldr	r0, [r0, r1]
  70:	bl	0 <coda_errno_to_string>
  74:	ldr	r1, [fp, #-40]	; 0xffffffd8
  78:	str	r0, [fp, #-48]	; 0xffffffd0
  7c:	mov	r0, r1
  80:	movw	r1, #0
  84:	movt	r1, #0
  88:	ldr	r2, [fp, #-48]	; 0xffffffd0
  8c:	bl	0 <fprintf>
  90:	movw	r1, #1
  94:	str	r0, [fp, #-52]	; 0xffffffcc
  98:	mov	r0, r1
  9c:	bl	0 <exit>
  a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
  a4:	ldr	r1, [fp, #-12]
  a8:	bl	0 <coda_product_class_get_product_type>
  ac:	str	r0, [fp, #-28]	; 0xffffffe4
  b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
  b4:	movw	r1, #0
  b8:	cmp	r0, r1
  bc:	bne	118 <generate_xmlschema+0x118>
  c0:	movw	r0, #0
  c4:	movt	r0, #0
  c8:	ldr	r0, [r0]
  cc:	ldr	r1, [pc, #716]	; 3a0 <generate_xmlschema+0x3a0>
  d0:	ldr	r1, [pc, r1]
  d4:	str	r0, [sp, #56]	; 0x38
  d8:	str	r1, [sp, #52]	; 0x34
  dc:	bl	0 <__aeabi_read_tp>
  e0:	ldr	r1, [sp, #52]	; 0x34
  e4:	ldr	r0, [r0, r1]
  e8:	bl	0 <coda_errno_to_string>
  ec:	ldr	r1, [sp, #56]	; 0x38
  f0:	str	r0, [sp, #48]	; 0x30
  f4:	mov	r0, r1
  f8:	movw	r1, #0
  fc:	movt	r1, #0
 100:	ldr	r2, [sp, #48]	; 0x30
 104:	bl	0 <fprintf>
 108:	movw	r1, #1
 10c:	str	r0, [sp, #44]	; 0x2c
 110:	mov	r0, r1
 114:	bl	0 <exit>
 118:	ldr	r0, [fp, #-28]	; 0xffffffe4
 11c:	ldr	r1, [fp, #-16]
 120:	bl	0 <coda_product_type_get_product_definition_by_version>
 124:	str	r0, [fp, #-32]	; 0xffffffe0
 128:	ldr	r0, [fp, #-32]	; 0xffffffe0
 12c:	movw	r1, #0
 130:	cmp	r0, r1
 134:	bne	190 <generate_xmlschema+0x190>
 138:	movw	r0, #0
 13c:	movt	r0, #0
 140:	ldr	r0, [r0]
 144:	ldr	r1, [pc, #592]	; 39c <generate_xmlschema+0x39c>
 148:	ldr	r1, [pc, r1]
 14c:	str	r0, [sp, #40]	; 0x28
 150:	str	r1, [sp, #36]	; 0x24
 154:	bl	0 <__aeabi_read_tp>
 158:	ldr	r1, [sp, #36]	; 0x24
 15c:	ldr	r0, [r0, r1]
 160:	bl	0 <coda_errno_to_string>
 164:	ldr	r1, [sp, #40]	; 0x28
 168:	str	r0, [sp, #32]
 16c:	mov	r0, r1
 170:	movw	r1, #0
 174:	movt	r1, #0
 178:	ldr	r2, [sp, #32]
 17c:	bl	0 <fprintf>
 180:	movw	r1, #1
 184:	str	r0, [sp, #28]
 188:	mov	r0, r1
 18c:	bl	0 <exit>
 190:	ldr	r0, [fp, #-32]	; 0xffffffe0
 194:	ldr	r0, [r0]
 198:	cmp	r0, #2
 19c:	beq	1c8 <generate_xmlschema+0x1c8>
 1a0:	movw	r0, #0
 1a4:	movt	r0, #0
 1a8:	ldr	r0, [r0]
 1ac:	movw	r1, #0
 1b0:	movt	r1, #0
 1b4:	bl	0 <fprintf>
 1b8:	movw	r1, #1
 1bc:	str	r0, [sp, #24]
 1c0:	mov	r0, r1
 1c4:	bl	0 <exit>
 1c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
 1cc:	ldr	r0, [r0, #28]
 1d0:	movw	r1, #0
 1d4:	cmp	r0, r1
 1d8:	bne	204 <generate_xmlschema+0x204>
 1dc:	movw	r0, #0
 1e0:	movt	r0, #0
 1e4:	ldr	r0, [r0]
 1e8:	movw	r1, #0
 1ec:	movt	r1, #0
 1f0:	bl	0 <fprintf>
 1f4:	movw	r1, #1
 1f8:	str	r0, [sp, #20]
 1fc:	mov	r0, r1
 200:	bl	0 <exit>
 204:	ldr	r0, [fp, #-4]
 208:	movw	r1, #0
 20c:	cmp	r0, r1
 210:	beq	268 <generate_xmlschema+0x268>
 214:	ldr	r0, [fp, #-4]
 218:	movw	r1, #0
 21c:	movt	r1, #0
 220:	bl	0 <fopen>
 224:	str	r0, [fp, #-20]	; 0xffffffec
 228:	ldr	r0, [fp, #-20]	; 0xffffffec
 22c:	movw	r1, #0
 230:	cmp	r0, r1
 234:	bne	264 <generate_xmlschema+0x264>
 238:	movw	r0, #0
 23c:	movt	r0, #0
 240:	ldr	r0, [r0]
 244:	ldr	r2, [fp, #-4]
 248:	movw	r1, #0
 24c:	movt	r1, #0
 250:	bl	0 <fprintf>
 254:	movw	r1, #1
 258:	str	r0, [sp, #16]
 25c:	mov	r0, r1
 260:	bl	0 <exit>
 264:	b	268 <generate_xmlschema+0x268>
 268:	ldr	r0, [fp, #-32]	; 0xffffffe0
 26c:	ldr	r0, [r0, #28]
 270:	ldr	r0, [r0, #8]
 274:	cmp	r0, #0
 278:	bne	280 <generate_xmlschema+0x280>
 27c:	b	2a0 <generate_xmlschema+0x2a0>
 280:	movw	r0, #0
 284:	movt	r0, #0
 288:	movw	r1, #0
 28c:	movt	r1, #0
 290:	movw	r2, #229	; 0xe5
 294:	movw	r3, #0
 298:	movt	r3, #0
 29c:	bl	0 <__assert_fail>
 2a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
 2a4:	ldr	r0, [r0, #28]
 2a8:	str	r0, [fp, #-36]	; 0xffffffdc
 2ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
 2b0:	ldr	r0, [r0, #48]	; 0x30
 2b4:	cmp	r0, #1
 2b8:	bne	2c0 <generate_xmlschema+0x2c0>
 2bc:	b	2e0 <generate_xmlschema+0x2e0>
 2c0:	movw	r0, #0
 2c4:	movt	r0, #0
 2c8:	movw	r1, #0
 2cc:	movt	r1, #0
 2d0:	movw	r2, #231	; 0xe7
 2d4:	movw	r3, #0
 2d8:	movt	r3, #0
 2dc:	bl	0 <__assert_fail>
 2e0:	ldr	r0, [fp, #-20]	; 0xffffffec
 2e4:	movw	r1, #0
 2e8:	movt	r1, #0
 2ec:	bl	0 <fprintf>
 2f0:	ldr	r1, [fp, #-20]	; 0xffffffec
 2f4:	str	r0, [sp, #12]
 2f8:	mov	r0, r1
 2fc:	movw	r1, #0
 300:	movt	r1, #0
 304:	bl	0 <fprintf>
 308:	ldr	r1, [fp, #-20]	; 0xffffffec
 30c:	ldr	r2, [fp, #-36]	; 0xffffffdc
 310:	ldr	r2, [r2, #52]	; 0x34
 314:	ldr	r2, [r2]
 318:	ldr	r2, [r2, #4]
 31c:	str	r0, [sp, #8]
 320:	mov	r0, r1
 324:	movw	r1, #0
 328:	movt	r1, #0
 32c:	bl	0 <fprintf>
 330:	ldr	r1, [fp, #-20]	; 0xffffffec
 334:	ldr	r2, [fp, #-36]	; 0xffffffdc
 338:	ldr	r2, [r2, #52]	; 0x34
 33c:	ldr	r2, [r2]
 340:	ldr	r2, [r2, #8]
 344:	str	r0, [sp, #4]
 348:	mov	r0, r1
 34c:	mov	r1, r2
 350:	bl	3a8 <print_xml_element>
 354:	ldr	r0, [fp, #-20]	; 0xffffffec
 358:	movw	r1, #0
 35c:	movt	r1, #0
 360:	bl	0 <fprintf>
 364:	ldr	r1, [fp, #-20]	; 0xffffffec
 368:	str	r0, [sp]
 36c:	mov	r0, r1
 370:	movw	r1, #0
 374:	movt	r1, #0
 378:	bl	0 <fprintf>
 37c:	ldr	r1, [fp, #-4]
 380:	movw	r2, #0
 384:	cmp	r1, r2
 388:	beq	394 <generate_xmlschema+0x394>
 38c:	ldr	r0, [fp, #-20]	; 0xffffffec
 390:	bl	0 <fclose>
 394:	mov	sp, fp
 398:	pop	{fp, pc}
 39c:	.word	0x0000024c
 3a0:	.word	0x000002c8
 3a4:	.word	0x00000344

000003a8 <print_xml_element>:
 3a8:	push	{fp, lr}
 3ac:	mov	fp, sp
 3b0:	sub	sp, sp, #120	; 0x78
 3b4:	str	r0, [fp, #-4]
 3b8:	str	r1, [fp, #-8]
 3bc:	ldr	r0, [fp, #-8]
 3c0:	sub	r1, fp, #12
 3c4:	bl	0 <coda_type_get_class>
 3c8:	ldr	r1, [fp, #-12]
 3cc:	cmp	r1, #0
 3d0:	bne	3d8 <print_xml_element+0x30>
 3d4:	b	3f8 <print_xml_element+0x50>
 3d8:	movw	r0, #0
 3dc:	movt	r0, #0
 3e0:	movw	r1, #0
 3e4:	movt	r1, #0
 3e8:	movw	r2, #96	; 0x60
 3ec:	movw	r3, #0
 3f0:	movt	r3, #0
 3f4:	bl	0 <__assert_fail>
 3f8:	ldr	r0, [fp, #-4]
 3fc:	movw	r1, #0
 400:	movt	r1, #0
 404:	bl	0 <fprintf>
 408:	ldr	r1, [fp, #-8]
 40c:	str	r0, [fp, #-48]	; 0xffffffd0
 410:	mov	r0, r1
 414:	sub	r1, fp, #16
 418:	bl	0 <coda_type_get_num_record_fields>
 41c:	movw	r1, #0
 420:	str	r1, [fp, #-20]	; 0xffffffec
 424:	ldr	r0, [fp, #-20]	; 0xffffffec
 428:	ldr	r1, [fp, #-16]
 42c:	cmp	r0, r1
 430:	bge	74c <print_xml_element+0x3a4>
 434:	ldr	r0, [fp, #-8]
 438:	ldr	r1, [fp, #-20]	; 0xffffffec
 43c:	sub	r2, fp, #32
 440:	bl	0 <coda_type_get_record_field_real_name>
 444:	ldr	r1, [fp, #-8]
 448:	ldr	r2, [fp, #-20]	; 0xffffffec
 44c:	str	r0, [fp, #-52]	; 0xffffffcc
 450:	mov	r0, r1
 454:	mov	r1, r2
 458:	sub	r2, fp, #28
 45c:	bl	0 <coda_type_get_record_field_type>
 460:	ldr	r1, [fp, #-28]	; 0xffffffe4
 464:	str	r0, [fp, #-56]	; 0xffffffc8
 468:	mov	r0, r1
 46c:	sub	r1, fp, #24
 470:	bl	0 <coda_type_get_class>
 474:	ldr	r1, [fp, #-28]	; 0xffffffe4
 478:	str	r0, [sp, #60]	; 0x3c
 47c:	mov	r0, r1
 480:	sub	r1, fp, #36	; 0x24
 484:	bl	0 <coda_type_get_format>
 488:	ldr	r1, [fp, #-4]
 48c:	ldr	r2, [fp, #-32]	; 0xffffffe0
 490:	str	r0, [sp, #56]	; 0x38
 494:	mov	r0, r1
 498:	movw	r1, #0
 49c:	movt	r1, #0
 4a0:	bl	0 <fprintf>
 4a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
 4a8:	cmp	r1, #1
 4ac:	bne	508 <print_xml_element+0x160>
 4b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
 4b4:	cmp	r0, #2
 4b8:	bne	508 <print_xml_element+0x160>
 4bc:	ldr	r0, [fp, #-4]
 4c0:	movw	r1, #0
 4c4:	movt	r1, #0
 4c8:	bl	0 <fprintf>
 4cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
 4d0:	str	r0, [sp, #52]	; 0x34
 4d4:	mov	r0, r1
 4d8:	sub	r1, fp, #28
 4dc:	bl	0 <coda_type_get_array_base_type>
 4e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
 4e4:	str	r0, [sp, #48]	; 0x30
 4e8:	mov	r0, r1
 4ec:	sub	r1, fp, #24
 4f0:	bl	0 <coda_type_get_class>
 4f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
 4f8:	str	r0, [sp, #44]	; 0x2c
 4fc:	mov	r0, r1
 500:	sub	r1, fp, #36	; 0x24
 504:	bl	0 <coda_type_get_format>
 508:	ldr	r0, [fp, #-24]	; 0xffffffe8
 50c:	cmp	r0, #6
 510:	bne	548 <print_xml_element+0x1a0>
 514:	ldr	r0, [fp, #-28]	; 0xffffffe4
 518:	sub	r1, fp, #28
 51c:	bl	0 <coda_type_get_special_base_type>
 520:	ldr	r1, [fp, #-28]	; 0xffffffe4
 524:	str	r0, [sp, #40]	; 0x28
 528:	mov	r0, r1
 52c:	sub	r1, fp, #24
 530:	bl	0 <coda_type_get_class>
 534:	ldr	r1, [fp, #-28]	; 0xffffffe4
 538:	str	r0, [sp, #36]	; 0x24
 53c:	mov	r0, r1
 540:	sub	r1, fp, #36	; 0x24
 544:	bl	0 <coda_type_get_format>
 548:	ldr	r0, [fp, #-24]	; 0xffffffe8
 54c:	cmp	r0, #0
 550:	bne	580 <print_xml_element+0x1d8>
 554:	ldr	r0, [fp, #-4]
 558:	movw	r1, #0
 55c:	movt	r1, #0
 560:	bl	0 <fprintf>
 564:	ldr	r1, [fp, #-4]
 568:	ldr	r2, [fp, #-28]	; 0xffffffe4
 56c:	str	r0, [sp, #32]
 570:	mov	r0, r1
 574:	mov	r1, r2
 578:	bl	3a8 <print_xml_element>
 57c:	b	72c <print_xml_element+0x384>
 580:	ldr	r0, [fp, #-24]	; 0xffffffe8
 584:	sub	r0, r0, #1
 588:	cmp	r0, #3
 58c:	str	r0, [sp, #28]
 590:	bhi	624 <print_xml_element+0x27c>
 594:	add	r0, pc, #8
 598:	ldr	r1, [sp, #28]
 59c:	ldr	r0, [r0, r1, lsl #2]
 5a0:	mov	pc, r0
 5a4:	.word	0x000005b4
 5a8:	.word	0x000005f4
 5ac:	.word	0x00000604
 5b0:	.word	0x00000614
 5b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
 5b8:	cmp	r0, #2
 5bc:	beq	5c4 <print_xml_element+0x21c>
 5c0:	b	5e4 <print_xml_element+0x23c>
 5c4:	movw	r0, #0
 5c8:	movt	r0, #0
 5cc:	movw	r1, #0
 5d0:	movt	r1, #0
 5d4:	movw	r2, #138	; 0x8a
 5d8:	movw	r3, #0
 5dc:	movt	r3, #0
 5e0:	bl	0 <__assert_fail>
 5e4:	movw	r0, #0
 5e8:	movt	r0, #0
 5ec:	str	r0, [fp, #-40]	; 0xffffffd8
 5f0:	b	644 <print_xml_element+0x29c>
 5f4:	movw	r0, #0
 5f8:	movt	r0, #0
 5fc:	str	r0, [fp, #-40]	; 0xffffffd8
 600:	b	644 <print_xml_element+0x29c>
 604:	movw	r0, #0
 608:	movt	r0, #0
 60c:	str	r0, [fp, #-40]	; 0xffffffd8
 610:	b	644 <print_xml_element+0x29c>
 614:	movw	r0, #0
 618:	movt	r0, #0
 61c:	str	r0, [fp, #-40]	; 0xffffffd8
 620:	b	644 <print_xml_element+0x29c>
 624:	movw	r0, #0
 628:	movt	r0, #0
 62c:	movw	r1, #0
 630:	movt	r1, #0
 634:	movw	r2, #151	; 0x97
 638:	movw	r3, #0
 63c:	movt	r3, #0
 640:	bl	0 <__assert_fail>
 644:	ldr	r0, [fp, #-28]	; 0xffffffe4
 648:	sub	r1, fp, #44	; 0x2c
 64c:	bl	0 <coda_type_has_attributes>
 650:	ldr	r1, [fp, #-44]	; 0xffffffd4
 654:	cmp	r1, #0
 658:	beq	714 <print_xml_element+0x36c>
 65c:	ldr	r0, [fp, #-4]
 660:	movw	r1, #0
 664:	movt	r1, #0
 668:	bl	0 <fprintf>
 66c:	ldr	r1, [fp, #-4]
 670:	str	r0, [sp, #24]
 674:	mov	r0, r1
 678:	movw	r1, #0
 67c:	movt	r1, #0
 680:	bl	0 <fprintf>
 684:	ldr	r1, [fp, #-4]
 688:	str	r0, [sp, #20]
 68c:	mov	r0, r1
 690:	movw	r1, #0
 694:	movt	r1, #0
 698:	bl	0 <fprintf>
 69c:	ldr	r1, [fp, #-4]
 6a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
 6a4:	str	r0, [sp, #16]
 6a8:	mov	r0, r1
 6ac:	movw	r1, #0
 6b0:	movt	r1, #0
 6b4:	bl	0 <fprintf>
 6b8:	ldr	r1, [fp, #-4]
 6bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
 6c0:	str	r0, [sp, #12]
 6c4:	mov	r0, r1
 6c8:	mov	r1, r2
 6cc:	bl	78c <print_attributes>
 6d0:	ldr	r0, [fp, #-4]
 6d4:	movw	r1, #0
 6d8:	movt	r1, #0
 6dc:	bl	0 <fprintf>
 6e0:	ldr	r1, [fp, #-4]
 6e4:	str	r0, [sp, #8]
 6e8:	mov	r0, r1
 6ec:	movw	r1, #0
 6f0:	movt	r1, #0
 6f4:	bl	0 <fprintf>
 6f8:	ldr	r1, [fp, #-4]
 6fc:	str	r0, [sp, #4]
 700:	mov	r0, r1
 704:	movw	r1, #0
 708:	movt	r1, #0
 70c:	bl	0 <fprintf>
 710:	b	728 <print_xml_element+0x380>
 714:	ldr	r0, [fp, #-4]
 718:	ldr	r2, [fp, #-40]	; 0xffffffd8
 71c:	movw	r1, #0
 720:	movt	r1, #0
 724:	bl	0 <fprintf>
 728:	b	72c <print_xml_element+0x384>
 72c:	ldr	r0, [fp, #-4]
 730:	movw	r1, #0
 734:	movt	r1, #0
 738:	bl	0 <fprintf>
 73c:	ldr	r0, [fp, #-20]	; 0xffffffec
 740:	add	r0, r0, #1
 744:	str	r0, [fp, #-20]	; 0xffffffec
 748:	b	424 <print_xml_element+0x7c>
 74c:	ldr	r0, [fp, #-4]
 750:	movw	r1, #0
 754:	movt	r1, #0
 758:	bl	0 <fprintf>
 75c:	ldr	r1, [fp, #-4]
 760:	ldr	r2, [fp, #-8]
 764:	str	r0, [sp]
 768:	mov	r0, r1
 76c:	mov	r1, r2
 770:	bl	78c <print_attributes>
 774:	ldr	r0, [fp, #-4]
 778:	movw	r1, #0
 77c:	movt	r1, #0
 780:	bl	0 <fprintf>
 784:	mov	sp, fp
 788:	pop	{fp, pc}

0000078c <print_attributes>:
 78c:	push	{fp, lr}
 790:	mov	fp, sp
 794:	sub	sp, sp, #64	; 0x40
 798:	str	r0, [fp, #-4]
 79c:	str	r1, [fp, #-8]
 7a0:	ldr	r0, [fp, #-8]
 7a4:	sub	r1, fp, #12
 7a8:	bl	0 <coda_type_get_attributes>
 7ac:	ldr	r1, [fp, #-12]
 7b0:	str	r0, [sp, #24]
 7b4:	mov	r0, r1
 7b8:	sub	r1, fp, #16
 7bc:	bl	0 <coda_type_get_num_record_fields>
 7c0:	movw	r1, #0
 7c4:	str	r1, [fp, #-20]	; 0xffffffec
 7c8:	ldr	r0, [fp, #-20]	; 0xffffffec
 7cc:	ldr	r1, [fp, #-16]
 7d0:	cmp	r0, r1
 7d4:	bge	91c <print_attributes+0x190>
 7d8:	ldr	r0, [fp, #-12]
 7dc:	ldr	r1, [fp, #-20]	; 0xffffffec
 7e0:	add	r2, sp, #32
 7e4:	bl	0 <coda_type_get_record_field_real_name>
 7e8:	ldr	r1, [fp, #-12]
 7ec:	ldr	r2, [fp, #-20]	; 0xffffffec
 7f0:	str	r0, [sp, #20]
 7f4:	mov	r0, r1
 7f8:	mov	r1, r2
 7fc:	add	r2, sp, #28
 800:	bl	0 <coda_type_get_record_field_available_status>
 804:	ldr	r1, [fp, #-12]
 808:	ldr	r2, [fp, #-20]	; 0xffffffec
 80c:	str	r0, [sp, #16]
 810:	mov	r0, r1
 814:	mov	r1, r2
 818:	sub	r2, fp, #28
 81c:	bl	0 <coda_type_get_record_field_type>
 820:	ldr	r1, [fp, #-28]	; 0xffffffe4
 824:	str	r0, [sp, #12]
 828:	mov	r0, r1
 82c:	sub	r1, fp, #24
 830:	bl	0 <coda_type_get_class>
 834:	ldr	r1, [fp, #-4]
 838:	ldr	r2, [sp, #32]
 83c:	str	r0, [sp, #8]
 840:	mov	r0, r1
 844:	movw	r1, #0
 848:	movt	r1, #0
 84c:	bl	0 <fprintf>
 850:	ldr	r1, [sp, #28]
 854:	cmp	r1, #1
 858:	bne	86c <print_attributes+0xe0>
 85c:	ldr	r0, [fp, #-4]
 860:	movw	r1, #0
 864:	movt	r1, #0
 868:	bl	0 <fprintf>
 86c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 870:	cmp	r0, #2
 874:	str	r0, [sp, #4]
 878:	beq	8a0 <print_attributes+0x114>
 87c:	b	880 <print_attributes+0xf4>
 880:	ldr	r0, [sp, #4]
 884:	cmp	r0, #3
 888:	beq	8b4 <print_attributes+0x128>
 88c:	b	890 <print_attributes+0x104>
 890:	ldr	r0, [sp, #4]
 894:	cmp	r0, #4
 898:	beq	8c8 <print_attributes+0x13c>
 89c:	b	8dc <print_attributes+0x150>
 8a0:	ldr	r0, [fp, #-4]
 8a4:	movw	r1, #0
 8a8:	movt	r1, #0
 8ac:	bl	0 <fprintf>
 8b0:	b	8fc <print_attributes+0x170>
 8b4:	ldr	r0, [fp, #-4]
 8b8:	movw	r1, #0
 8bc:	movt	r1, #0
 8c0:	bl	0 <fprintf>
 8c4:	b	8fc <print_attributes+0x170>
 8c8:	ldr	r0, [fp, #-4]
 8cc:	movw	r1, #0
 8d0:	movt	r1, #0
 8d4:	bl	0 <fprintf>
 8d8:	b	8fc <print_attributes+0x170>
 8dc:	movw	r0, #0
 8e0:	movt	r0, #0
 8e4:	movw	r1, #0
 8e8:	movt	r1, #0
 8ec:	movw	r2, #82	; 0x52
 8f0:	movw	r3, #0
 8f4:	movt	r3, #0
 8f8:	bl	0 <__assert_fail>
 8fc:	ldr	r0, [fp, #-4]
 900:	movw	r1, #0
 904:	movt	r1, #0
 908:	bl	0 <fprintf>
 90c:	ldr	r0, [fp, #-20]	; 0xffffffec
 910:	add	r0, r0, #1
 914:	str	r0, [fp, #-20]	; 0xffffffec
 918:	b	7c8 <print_attributes+0x3c>
 91c:	mov	sp, fp
 920:	pop	{fp, pc}
