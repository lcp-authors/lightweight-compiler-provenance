
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_help>:
   0:	push	{r4, r5, r6, lr}
   4:	ldr	r0, [pc, #588]	; 258 <print_help+0x258>
   8:	bl	0 <puts>
   c:	ldr	r0, [pc, #584]	; 25c <print_help+0x25c>
  10:	bl	0 <puts>
  14:	ldr	r0, [pc, #580]	; 260 <print_help+0x260>
  18:	bl	0 <puts>
  1c:	mov	r0, #10
  20:	bl	0 <putchar>
  24:	ldr	r0, [pc, #568]	; 264 <print_help+0x264>
  28:	bl	0 <puts>
  2c:	ldr	r0, [pc, #564]	; 268 <print_help+0x268>
  30:	bl	0 <puts>
  34:	mov	r0, #10
  38:	bl	0 <putchar>
  3c:	ldr	r0, [pc, #552]	; 26c <print_help+0x26c>
  40:	bl	0 <puts>
  44:	ldr	r0, [pc, #548]	; 270 <print_help+0x270>
  48:	bl	0 <puts>
  4c:	ldr	r0, [pc, #544]	; 274 <print_help+0x274>
  50:	bl	0 <puts>
  54:	ldr	r0, [pc, #540]	; 278 <print_help+0x278>
  58:	bl	0 <puts>
  5c:	ldr	r0, [pc, #536]	; 27c <print_help+0x27c>
  60:	bl	0 <puts>
  64:	ldr	r0, [pc, #532]	; 280 <print_help+0x280>
  68:	bl	0 <puts>
  6c:	ldr	r0, [pc, #528]	; 284 <print_help+0x284>
  70:	bl	0 <puts>
  74:	ldr	r0, [pc, #524]	; 288 <print_help+0x288>
  78:	bl	0 <puts>
  7c:	ldr	r0, [pc, #520]	; 28c <print_help+0x28c>
  80:	bl	0 <puts>
  84:	ldr	r0, [pc, #516]	; 290 <print_help+0x290>
  88:	bl	0 <puts>
  8c:	ldr	r0, [pc, #512]	; 294 <print_help+0x294>
  90:	bl	0 <puts>
  94:	ldr	r0, [pc, #508]	; 298 <print_help+0x298>
  98:	bl	0 <puts>
  9c:	ldr	r0, [pc, #504]	; 29c <print_help+0x29c>
  a0:	bl	0 <puts>
  a4:	ldr	r0, [pc, #500]	; 2a0 <print_help+0x2a0>
  a8:	bl	0 <puts>
  ac:	ldr	r0, [pc, #496]	; 2a4 <print_help+0x2a4>
  b0:	bl	0 <puts>
  b4:	ldr	r0, [pc, #492]	; 2a8 <print_help+0x2a8>
  b8:	bl	0 <puts>
  bc:	ldr	r0, [pc, #488]	; 2ac <print_help+0x2ac>
  c0:	bl	0 <puts>
  c4:	ldr	r0, [pc, #484]	; 2b0 <print_help+0x2b0>
  c8:	bl	0 <puts>
  cc:	ldr	r0, [pc, #480]	; 2b4 <print_help+0x2b4>
  d0:	bl	0 <puts>
  d4:	ldr	r0, [pc, #476]	; 2b8 <print_help+0x2b8>
  d8:	bl	0 <puts>
  dc:	ldr	r0, [pc, #472]	; 2bc <print_help+0x2bc>
  e0:	bl	0 <puts>
  e4:	ldr	r0, [pc, #468]	; 2c0 <print_help+0x2c0>
  e8:	bl	0 <puts>
  ec:	ldr	r0, [pc, #464]	; 2c4 <print_help+0x2c4>
  f0:	bl	0 <puts>
  f4:	ldr	r0, [pc, #460]	; 2c8 <print_help+0x2c8>
  f8:	bl	0 <puts>
  fc:	ldr	r0, [pc, #456]	; 2cc <print_help+0x2cc>
 100:	bl	0 <puts>
 104:	ldr	r0, [pc, #452]	; 2d0 <print_help+0x2d0>
 108:	bl	0 <puts>
 10c:	ldr	r0, [pc, #448]	; 2d4 <print_help+0x2d4>
 110:	bl	0 <puts>
 114:	ldr	r0, [pc, #444]	; 2d8 <print_help+0x2d8>
 118:	bl	0 <puts>
 11c:	ldr	r0, [pc, #440]	; 2dc <print_help+0x2dc>
 120:	bl	0 <puts>
 124:	mov	r0, #10
 128:	bl	0 <putchar>
 12c:	ldr	r0, [pc, #428]	; 2e0 <print_help+0x2e0>
 130:	bl	0 <puts>
 134:	ldr	r0, [pc, #424]	; 2e4 <print_help+0x2e4>
 138:	bl	0 <puts>
 13c:	ldr	r0, [pc, #420]	; 2e8 <print_help+0x2e8>
 140:	bl	0 <puts>
 144:	ldr	r0, [pc, #416]	; 2ec <print_help+0x2ec>
 148:	bl	0 <puts>
 14c:	ldr	r5, [pc, #412]	; 2f0 <print_help+0x2f0>
 150:	ldr	r0, [pc, #412]	; 2f4 <print_help+0x2f4>
 154:	bl	0 <puts>
 158:	ldr	r4, [pc, #408]	; 2f8 <print_help+0x2f8>
 15c:	ldr	r0, [pc, #408]	; 2fc <print_help+0x2fc>
 160:	bl	0 <puts>
 164:	mov	r0, r5
 168:	bl	0 <puts>
 16c:	mov	r0, r4
 170:	bl	0 <puts>
 174:	mov	r0, #10
 178:	bl	0 <putchar>
 17c:	ldr	r0, [pc, #380]	; 300 <print_help+0x300>
 180:	bl	0 <puts>
 184:	ldr	r0, [pc, #376]	; 304 <print_help+0x304>
 188:	bl	0 <puts>
 18c:	ldr	r0, [pc, #372]	; 308 <print_help+0x308>
 190:	bl	0 <puts>
 194:	ldr	r0, [pc, #368]	; 30c <print_help+0x30c>
 198:	bl	0 <puts>
 19c:	ldr	r0, [pc, #364]	; 310 <print_help+0x310>
 1a0:	bl	0 <puts>
 1a4:	mov	r0, r5
 1a8:	bl	0 <puts>
 1ac:	mov	r0, r4
 1b0:	bl	0 <puts>
 1b4:	mov	r0, #10
 1b8:	bl	0 <putchar>
 1bc:	ldr	r0, [pc, #336]	; 314 <print_help+0x314>
 1c0:	bl	0 <puts>
 1c4:	ldr	r0, [pc, #332]	; 318 <print_help+0x318>
 1c8:	bl	0 <puts>
 1cc:	ldr	r0, [pc, #328]	; 31c <print_help+0x31c>
 1d0:	bl	0 <puts>
 1d4:	ldr	r0, [pc, #324]	; 320 <print_help+0x320>
 1d8:	bl	0 <puts>
 1dc:	mov	r0, #10
 1e0:	bl	0 <putchar>
 1e4:	ldr	r0, [pc, #312]	; 324 <print_help+0x324>
 1e8:	bl	0 <puts>
 1ec:	ldr	r0, [pc, #308]	; 328 <print_help+0x328>
 1f0:	bl	0 <puts>
 1f4:	mov	r0, #10
 1f8:	bl	0 <putchar>
 1fc:	ldr	r0, [pc, #296]	; 32c <print_help+0x32c>
 200:	bl	0 <puts>
 204:	ldr	r0, [pc, #292]	; 330 <print_help+0x330>
 208:	bl	0 <puts>
 20c:	mov	r0, #10
 210:	bl	0 <putchar>
 214:	ldr	r0, [pc, #280]	; 334 <print_help+0x334>
 218:	bl	0 <puts>
 21c:	ldr	r0, [pc, #276]	; 338 <print_help+0x338>
 220:	bl	0 <puts>
 224:	ldr	r0, [pc, #272]	; 33c <print_help+0x33c>
 228:	bl	0 <puts>
 22c:	ldr	r0, [pc, #268]	; 340 <print_help+0x340>
 230:	bl	0 <puts>
 234:	ldr	r0, [pc, #264]	; 344 <print_help+0x344>
 238:	bl	0 <puts>
 23c:	ldr	r0, [pc, #260]	; 348 <print_help+0x348>
 240:	bl	0 <puts>
 244:	ldr	r0, [pc, #256]	; 34c <print_help+0x34c>
 248:	bl	0 <puts>
 24c:	mov	r0, #10
 250:	pop	{r4, r5, r6, lr}
 254:	b	0 <putchar>
 258:	.word	0x00000000
 25c:	.word	0x00000008
 260:	.word	0x00000028
 264:	.word	0x00000074
 268:	.word	0x000000a4
 26c:	.word	0x000000f4
 270:	.word	0x0000012c
 274:	.word	0x0000017c
 278:	.word	0x000001c0
 27c:	.word	0x00000214
 280:	.word	0x00000260
 284:	.word	0x0000027c
 288:	.word	0x00000294
 28c:	.word	0x000002ac
 290:	.word	0x000002ec
 294:	.word	0x0000030c
 298:	.word	0x00000358
 29c:	.word	0x00000390
 2a0:	.word	0x000003dc
 2a4:	.word	0x000003f4
 2a8:	.word	0x00000420
 2ac:	.word	0x00000438
 2b0:	.word	0x00000464
 2b4:	.word	0x00000480
 2b8:	.word	0x000004b4
 2bc:	.word	0x000004cc
 2c0:	.word	0x0000050c
 2c4:	.word	0x00000528
 2c8:	.word	0x0000056c
 2cc:	.word	0x00000588
 2d0:	.word	0x000005c4
 2d4:	.word	0x000005e4
 2d8:	.word	0x00000634
 2dc:	.word	0x00000684
 2e0:	.word	0x000006a4
 2e4:	.word	0x000006e4
 2e8:	.word	0x0000072c
 2ec:	.word	0x00000770
 2f0:	.word	0x0000080c
 2f4:	.word	0x000007c0
 2f8:	.word	0x00000830
 2fc:	.word	0x000007f0
 300:	.word	0x00000864
 304:	.word	0x000008b4
 308:	.word	0x00000900
 30c:	.word	0x00000950
 310:	.word	0x00000974
 314:	.word	0x00000990
 318:	.word	0x000009c0
 31c:	.word	0x00000a10
 320:	.word	0x00000a60
 324:	.word	0x00000a70
 328:	.word	0x00000a88
 32c:	.word	0x00000aa8
 330:	.word	0x00000ac4
 334:	.word	0x00000af8
 338:	.word	0x00000b48
 33c:	.word	0x00000b94
 340:	.word	0x00000bc0
 344:	.word	0x00000c0c
 348:	.word	0x00000c54
 34c:	.word	0x00000c94

Disassembly of section .text.startup:

00000000 <main>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	mov	r6, r1
   8:	ldr	r1, [pc, #1884]	; 76c <main+0x76c>
   c:	ldr	r3, [pc, #1884]	; 770 <main+0x770>
  10:	ldr	r2, [pc, #1884]	; 774 <main+0x774>
  14:	str	r3, [r1]
  18:	ldr	r1, [pc, #1880]	; 778 <main+0x778>
  1c:	mov	r3, #0
  20:	ldr	r9, [pc, #1876]	; 77c <main+0x77c>
  24:	str	r3, [r1]
  28:	ldr	r1, [pc, #1872]	; 780 <main+0x780>
  2c:	str	r3, [r2]
  30:	str	r3, [r9]
  34:	str	r3, [r1]
  38:	ldr	r1, [pc, #1860]	; 784 <main+0x784>
  3c:	mov	r2, #1
  40:	cmp	r0, #1
  44:	str	r3, [r1]
  48:	ldr	r1, [pc, #1848]	; 788 <main+0x788>
  4c:	sub	sp, sp, #20
  50:	mov	r5, r0
  54:	str	r3, [r1]
  58:	ldr	r1, [pc, #1836]	; 78c <main+0x78c>
  5c:	str	r3, [r1]
  60:	ldr	r1, [pc, #1832]	; 790 <main+0x790>
  64:	str	r3, [r1]
  68:	ldr	r1, [pc, #1828]	; 794 <main+0x794>
  6c:	str	r3, [r1]
  70:	ldr	r3, [pc, #1824]	; 798 <main+0x798>
  74:	str	r2, [r3]
  78:	ble	ec <main+0xec>
  7c:	ldr	r4, [r6, #4]
  80:	ldr	r1, [pc, #1812]	; 79c <main+0x79c>
  84:	mov	r0, r4
  88:	bl	0 <strcmp>
  8c:	cmp	r0, #0
  90:	beq	5b8 <main+0x5b8>
  94:	ldr	r1, [pc, #1796]	; 7a0 <main+0x7a0>
  98:	mov	r0, r4
  9c:	bl	0 <strcmp>
  a0:	cmp	r0, #0
  a4:	beq	5b8 <main+0x5b8>
  a8:	ldr	r1, [pc, #1780]	; 7a4 <main+0x7a4>
  ac:	mov	r0, r4
  b0:	bl	0 <strcmp>
  b4:	cmp	r0, #0
  b8:	beq	5c4 <main+0x5c4>
  bc:	ldr	r1, [pc, #1764]	; 7a8 <main+0x7a8>
  c0:	mov	r0, r4
  c4:	bl	0 <strcmp>
  c8:	cmp	r0, #0
  cc:	beq	5c4 <main+0x5c4>
  d0:	cmp	r5, #2
  d4:	beq	ec <main+0xec>
  d8:	mov	r0, r4
  dc:	ldr	r1, [pc, #1736]	; 7ac <main+0x7ac>
  e0:	bl	0 <strcmp>
  e4:	cmp	r0, #0
  e8:	beq	37c <main+0x37c>
  ec:	ldr	r2, [pc, #1724]	; 7b0 <main+0x7b0>
  f0:	mov	r1, #0
  f4:	ldr	r0, [r6]
  f8:	bl	0 <coda_set_definition_path_conditional>
  fc:	cmp	r0, #0
 100:	moveq	r4, #1
 104:	bne	720 <main+0x720>
 108:	ldr	r3, [pc, #1700]	; 7b4 <main+0x7b4>
 10c:	mov	sl, #1
 110:	bl	0 <__aeabi_read_tp>
 114:	ldr	r3, [pc, r3]
 118:	mov	r7, r0
 11c:	str	sl, [r0, r3]
 120:	bl	0 <coda_init>
 124:	subs	r8, r0, #0
 128:	bne	6f0 <main+0x6f0>
 12c:	cmp	r4, r5
 130:	beq	73c <main+0x73c>
 134:	bl	0 <coda_set_option_perform_conversions>
 138:	ldr	r8, [r6, r4, lsl #2]
 13c:	ldr	r1, [pc, #1652]	; 7b8 <main+0x7b8>
 140:	mov	r0, r8
 144:	bl	0 <strcmp>
 148:	add	r7, r6, r4, lsl #2
 14c:	cmp	r0, #0
 150:	beq	234 <main+0x234>
 154:	ldr	r1, [pc, #1632]	; 7bc <main+0x7bc>
 158:	mov	r0, r8
 15c:	bl	0 <strcmp>
 160:	cmp	r0, #0
 164:	bne	278 <main+0x278>
 168:	add	fp, r4, #1
 16c:	mvn	r2, #0
 170:	cmp	r5, fp
 174:	str	r2, [sp, #12]
 178:	ble	21c <main+0x21c>
 17c:	ldr	r7, [pc, #1596]	; 7c0 <main+0x7c0>
 180:	ldr	sl, [pc, #1596]	; 7c4 <main+0x7c4>
 184:	ldr	r4, [r6, fp, lsl #2]
 188:	mov	r1, r7
 18c:	mov	r0, r4
 190:	bl	0 <strcmp>
 194:	lsl	r8, fp, #2
 198:	cmp	r0, #0
 19c:	beq	25c <main+0x25c>
 1a0:	mov	r1, sl
 1a4:	mov	r0, r4
 1a8:	bl	0 <strcmp>
 1ac:	cmp	r0, #0
 1b0:	beq	25c <main+0x25c>
 1b4:	ldr	r1, [pc, #1548]	; 7c8 <main+0x7c8>
 1b8:	mov	r0, r4
 1bc:	bl	0 <strcmp>
 1c0:	cmp	r0, #0
 1c4:	beq	268 <main+0x268>
 1c8:	ldr	r1, [pc, #1532]	; 7cc <main+0x7cc>
 1cc:	mov	r0, r4
 1d0:	bl	0 <strcmp>
 1d4:	cmp	r0, #0
 1d8:	beq	268 <main+0x268>
 1dc:	ldr	r1, [pc, #1516]	; 7d0 <main+0x7d0>
 1e0:	mov	r0, r4
 1e4:	bl	0 <strcmp>
 1e8:	cmp	r0, #0
 1ec:	beq	204 <main+0x204>
 1f0:	ldr	r1, [pc, #1500]	; 7d4 <main+0x7d4>
 1f4:	mov	r0, r4
 1f8:	bl	0 <strcmp>
 1fc:	cmp	r0, #0
 200:	bne	38c <main+0x38c>
 204:	ldr	r2, [pc, #1388]	; 778 <main+0x778>
 208:	mov	r3, #1
 20c:	str	r3, [r2]
 210:	add	fp, fp, #1
 214:	cmp	r5, fp
 218:	bgt	184 <main+0x184>
 21c:	mov	r7, #0
 220:	mov	r0, r7
 224:	mov	r1, r7
 228:	ldr	r2, [sp, #12]
 22c:	bl	0 <generate_list>
 230:	b	24c <main+0x24c>
 234:	add	r4, r4, #1
 238:	sub	r5, r5, #1
 23c:	cmp	r4, r5
 240:	bne	4e4 <main+0x4e4>
 244:	ldr	r0, [r7, #4]
 248:	bl	0 <generate_html>
 24c:	bl	0 <coda_done>
 250:	mov	r0, #0
 254:	add	sp, sp, #20
 258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 25c:	mov	r3, #1
 260:	str	r3, [r9]
 264:	b	210 <main+0x210>
 268:	ldr	r2, [pc, #1304]	; 788 <main+0x788>
 26c:	mov	r3, #1
 270:	str	r3, [r2]
 274:	b	210 <main+0x210>
 278:	ldr	r1, [pc, #1368]	; 7d8 <main+0x7d8>
 27c:	mov	r0, r8
 280:	bl	0 <strcmp>
 284:	cmp	r0, #0
 288:	bne	3d8 <main+0x3d8>
 28c:	add	fp, r4, #1
 290:	mvn	r2, #0
 294:	cmp	r5, fp
 298:	str	r2, [sp, #12]
 29c:	ble	590 <main+0x590>
 2a0:	sub	r9, r5, #2
 2a4:	add	r8, r5, r2
 2a8:	sub	r9, r9, r4
 2ac:	sub	r8, r8, r4
 2b0:	bic	r9, r9, #1
 2b4:	add	r4, r4, #3
 2b8:	bic	r8, r8, #1
 2bc:	mov	sl, r7
 2c0:	add	r9, r9, r4
 2c4:	mov	r7, r0
 2c8:	add	r8, r8, fp
 2cc:	b	2f4 <main+0x2f4>
 2d0:	ldr	r3, [sl, #8]
 2d4:	ldrb	r2, [r3]
 2d8:	cmp	r2, #45	; 0x2d
 2dc:	beq	328 <main+0x328>
 2e0:	add	fp, fp, #2
 2e4:	cmp	fp, r9
 2e8:	add	sl, sl, #8
 2ec:	mov	r7, r3
 2f0:	beq	334 <main+0x334>
 2f4:	ldr	r4, [sl, #4]
 2f8:	ldr	r1, [pc, #1244]	; 7dc <main+0x7dc>
 2fc:	mov	r0, r4
 300:	bl	0 <strcmp>
 304:	cmp	r0, #0
 308:	beq	320 <main+0x320>
 30c:	ldr	r1, [pc, #1228]	; 7e0 <main+0x7e0>
 310:	mov	r0, r4
 314:	bl	0 <strcmp>
 318:	cmp	r0, #0
 31c:	bne	328 <main+0x328>
 320:	cmp	fp, r8
 324:	bne	2d0 <main+0x2d0>
 328:	ldrb	r2, [r4]
 32c:	cmp	r2, #45	; 0x2d
 330:	beq	4e4 <main+0x4e4>
 334:	sub	r5, r5, #3
 338:	cmp	r5, fp
 33c:	bne	4e4 <main+0x4e4>
 340:	add	ip, r6, fp, lsl #2
 344:	add	r2, sp, #12
 348:	ldr	r0, [ip, #8]
 34c:	ldr	r1, [pc, #1168]	; 7e4 <main+0x7e4>
 350:	ldr	r4, [r6, fp, lsl #2]
 354:	ldr	r5, [ip, #4]
 358:	bl	0 <__isoc99_sscanf>
 35c:	cmp	r0, #1
 360:	bne	64c <main+0x64c>
 364:	mov	r2, r5
 368:	mov	r1, r4
 36c:	mov	r0, r7
 370:	ldr	r3, [sp, #12]
 374:	bl	0 <generate_xmlschema>
 378:	b	24c <main+0x24c>
 37c:	ldr	r0, [r6, #8]
 380:	bl	0 <coda_set_definition_path>
 384:	mov	r4, #3
 388:	b	108 <main+0x108>
 38c:	ldr	r1, [pc, #1108]	; 7e8 <main+0x7e8>
 390:	mov	r0, r4
 394:	bl	0 <strcmp>
 398:	cmp	r0, #0
 39c:	beq	41c <main+0x41c>
 3a0:	ldr	r1, [pc, #1092]	; 7ec <main+0x7ec>
 3a4:	mov	r0, r4
 3a8:	bl	0 <strcmp>
 3ac:	cmp	r0, #0
 3b0:	beq	41c <main+0x41c>
 3b4:	ldr	r1, [pc, #1076]	; 7f0 <main+0x7f0>
 3b8:	mov	r0, r4
 3bc:	bl	0 <strcmp>
 3c0:	cmp	r0, #0
 3c4:	bne	52c <main+0x52c>
 3c8:	ldr	r2, [pc, #948]	; 784 <main+0x784>
 3cc:	mov	r3, #1
 3d0:	str	r3, [r2]
 3d4:	b	210 <main+0x210>
 3d8:	ldr	r1, [pc, #1044]	; 7f4 <main+0x7f4>
 3dc:	mov	r0, r8
 3e0:	bl	0 <strcmp>
 3e4:	cmp	r0, #0
 3e8:	bne	42c <main+0x42c>
 3ec:	add	r4, r4, #1
 3f0:	sub	r5, r5, #1
 3f4:	cmp	r4, r5
 3f8:	bne	4e4 <main+0x4e4>
 3fc:	ldr	r0, [r7, #4]
 400:	add	r1, sp, #12
 404:	bl	0 <coda_format_from_string>
 408:	cmp	r0, #0
 40c:	bne	748 <main+0x748>
 410:	ldr	r0, [sp, #12]
 414:	bl	0 <generate_detection_tree>
 418:	b	24c <main+0x24c>
 41c:	ldr	r2, [pc, #860]	; 780 <main+0x780>
 420:	mov	r3, #1
 424:	str	r3, [r2]
 428:	b	210 <main+0x210>
 42c:	mov	r0, r8
 430:	ldr	r1, [pc, #960]	; 7f8 <main+0x7f8>
 434:	bl	0 <strcmp>
 438:	subs	r9, r0, #0
 43c:	bne	4e4 <main+0x4e4>
 440:	add	fp, r4, #1
 444:	cmp	r5, fp
 448:	ble	508 <main+0x508>
 44c:	sub	r3, r5, #1
 450:	sub	r8, r5, #2
 454:	sub	r8, r8, r4
 458:	sub	r1, r3, r4
 45c:	bic	r8, r8, #1
 460:	add	r4, r4, #3
 464:	bic	r1, r1, #1
 468:	mov	r5, r7
 46c:	str	r3, [sp, #4]
 470:	ldr	sl, [pc, #868]	; 7dc <main+0x7dc>
 474:	add	r8, r8, r4
 478:	add	r7, r1, fp
 47c:	b	4a4 <main+0x4a4>
 480:	ldr	r3, [r5, #8]
 484:	ldrb	r2, [r3]
 488:	cmp	r2, #45	; 0x2d
 48c:	beq	4d8 <main+0x4d8>
 490:	add	fp, fp, #2
 494:	cmp	fp, r8
 498:	add	r5, r5, #8
 49c:	mov	r9, r3
 4a0:	beq	510 <main+0x510>
 4a4:	ldr	r4, [r5, #4]
 4a8:	mov	r1, sl
 4ac:	mov	r0, r4
 4b0:	bl	0 <strcmp>
 4b4:	cmp	r0, #0
 4b8:	beq	4d0 <main+0x4d0>
 4bc:	ldr	r1, [pc, #796]	; 7e0 <main+0x7e0>
 4c0:	mov	r0, r4
 4c4:	bl	0 <strcmp>
 4c8:	cmp	r0, #0
 4cc:	bne	4d8 <main+0x4d8>
 4d0:	cmp	fp, r7
 4d4:	bne	480 <main+0x480>
 4d8:	ldrb	r2, [r4]
 4dc:	cmp	r2, #45	; 0x2d
 4e0:	bne	510 <main+0x510>
 4e4:	ldr	r3, [pc, #784]	; 7fc <main+0x7fc>
 4e8:	mov	r2, #25
 4ec:	mov	r1, #1
 4f0:	ldr	r3, [r3]
 4f4:	ldr	r0, [pc, #772]	; 800 <main+0x800>
 4f8:	bl	0 <fwrite>
 4fc:	bl	0 <main>
 500:	mov	r0, #1
 504:	bl	0 <exit>
 508:	sub	r3, r5, #1
 50c:	str	r3, [sp, #4]
 510:	ldr	r3, [sp, #4]
 514:	cmp	r3, fp
 518:	bne	4e4 <main+0x4e4>
 51c:	ldr	r1, [r6, r3, lsl #2]
 520:	mov	r0, r9
 524:	bl	0 <generate_definition>
 528:	b	24c <main+0x24c>
 52c:	ldr	r1, [pc, #720]	; 804 <main+0x804>
 530:	mov	r0, r4
 534:	bl	0 <strcmp>
 538:	cmp	r0, #0
 53c:	ldreq	r2, [pc, #584]	; 78c <main+0x78c>
 540:	moveq	r3, #1
 544:	streq	r3, [r2]
 548:	beq	210 <main+0x210>
 54c:	ldr	r1, [pc, #692]	; 808 <main+0x808>
 550:	mov	r0, r4
 554:	bl	0 <strcmp>
 558:	cmp	r0, #0
 55c:	ldreq	r2, [pc, #556]	; 790 <main+0x790>
 560:	moveq	r3, #1
 564:	streq	r3, [r2]
 568:	beq	210 <main+0x210>
 56c:	ldr	r1, [pc, #664]	; 80c <main+0x80c>
 570:	mov	r0, r4
 574:	bl	0 <strcmp>
 578:	cmp	r0, #0
 57c:	bne	598 <main+0x598>
 580:	ldr	r2, [pc, #524]	; 794 <main+0x794>
 584:	mov	r3, #1
 588:	str	r3, [r2]
 58c:	b	210 <main+0x210>
 590:	mov	r7, r0
 594:	b	334 <main+0x334>
 598:	ldr	r1, [pc, #624]	; 810 <main+0x810>
 59c:	mov	r0, r4
 5a0:	bl	0 <strcmp>
 5a4:	cmp	r0, #0
 5a8:	bne	5f4 <main+0x5f4>
 5ac:	ldr	r3, [pc, #484]	; 798 <main+0x798>
 5b0:	str	r0, [r3]
 5b4:	b	210 <main+0x210>
 5b8:	bl	0 <main>
 5bc:	mov	r0, #0
 5c0:	bl	0 <exit>
 5c4:	ldr	r3, [pc, #584]	; 814 <main+0x814>
 5c8:	bl	0 <__aeabi_read_tp>
 5cc:	ldr	r3, [pc, r3]
 5d0:	ldr	r1, [r0, r3]
 5d4:	ldr	r0, [pc, #572]	; 818 <main+0x818>
 5d8:	bl	0 <printf>
 5dc:	ldr	r0, [pc, #568]	; 81c <main+0x81c>
 5e0:	bl	0 <puts>
 5e4:	mov	r0, #10
 5e8:	bl	0 <putchar>
 5ec:	mov	r0, #0
 5f0:	bl	0 <exit>
 5f4:	ldr	r1, [pc, #548]	; 820 <main+0x820>
 5f8:	mov	r0, r4
 5fc:	bl	0 <strcmp>
 600:	cmp	r0, #0
 604:	beq	61c <main+0x61c>
 608:	ldr	r1, [pc, #532]	; 824 <main+0x824>
 60c:	mov	r0, r4
 610:	bl	0 <strcmp>
 614:	cmp	r0, #0
 618:	bne	670 <main+0x670>
 61c:	add	r2, fp, #1
 620:	cmp	r5, r2
 624:	ble	6a0 <main+0x6a0>
 628:	add	r8, r6, r8
 62c:	ldr	r3, [r8, #4]
 630:	ldrb	r1, [r3]
 634:	cmp	r1, #45	; 0x2d
 638:	beq	6e0 <main+0x6e0>
 63c:	ldr	r1, [pc, #296]	; 76c <main+0x76c>
 640:	mov	fp, r2
 644:	str	r3, [r1]
 648:	b	210 <main+0x210>
 64c:	ldr	r3, [pc, #424]	; 7fc <main+0x7fc>
 650:	mov	r2, #40	; 0x28
 654:	mov	r1, #1
 658:	ldr	r3, [r3]
 65c:	ldr	r0, [pc, #452]	; 828 <main+0x828>
 660:	bl	0 <fwrite>
 664:	bl	0 <main>
 668:	mov	r0, #1
 66c:	bl	0 <exit>
 670:	ldrb	r2, [r4]
 674:	cmp	r2, #45	; 0x2d
 678:	beq	4e4 <main+0x4e4>
 67c:	add	r2, fp, #1
 680:	cmp	r5, r2
 684:	ble	6ac <main+0x6ac>
 688:	add	r1, fp, #2
 68c:	cmp	r5, r1
 690:	ldr	r7, [r6, r2, lsl #2]
 694:	bgt	6b8 <main+0x6b8>
 698:	mov	r0, r4
 69c:	b	224 <main+0x224>
 6a0:	ldrb	r3, [r4]
 6a4:	cmp	r3, #45	; 0x2d
 6a8:	beq	4e4 <main+0x4e4>
 6ac:	mov	r0, r4
 6b0:	mov	r7, #0
 6b4:	b	224 <main+0x224>
 6b8:	ldr	r0, [r6, r1, lsl #2]
 6bc:	add	r2, sp, #12
 6c0:	ldr	r1, [pc, #284]	; 7e4 <main+0x7e4>
 6c4:	bl	0 <__isoc99_sscanf>
 6c8:	cmp	r0, #1
 6cc:	bne	64c <main+0x64c>
 6d0:	add	r3, fp, #3
 6d4:	cmp	r5, r3
 6d8:	ble	698 <main+0x698>
 6dc:	b	4e4 <main+0x4e4>
 6e0:	ldrb	r1, [r4]
 6e4:	cmp	r1, #45	; 0x2d
 6e8:	bne	688 <main+0x688>
 6ec:	b	4e4 <main+0x4e4>
 6f0:	ldr	r3, [pc, #308]	; 82c <main+0x82c>
 6f4:	ldr	r2, [pc, #256]	; 7fc <main+0x7fc>
 6f8:	ldr	r3, [pc, r3]
 6fc:	ldr	r4, [r2]
 700:	ldr	r0, [r7, r3]
 704:	bl	0 <coda_errno_to_string>
 708:	ldr	r1, [pc, #288]	; 830 <main+0x830>
 70c:	mov	r2, r0
 710:	mov	r0, r4
 714:	bl	0 <fprintf>
 718:	mov	r0, #1
 71c:	bl	0 <exit>
 720:	ldr	r3, [pc, #268]	; 834 <main+0x834>
 724:	ldr	r2, [pc, #208]	; 7fc <main+0x7fc>
 728:	bl	0 <__aeabi_read_tp>
 72c:	ldr	r3, [pc, r3]
 730:	ldr	r4, [r2]
 734:	ldr	r0, [r0, r3]
 738:	b	704 <main+0x704>
 73c:	bl	0 <coda_done>
 740:	mov	r0, r8
 744:	bl	0 <exit>
 748:	ldr	r3, [pc, #172]	; 7fc <main+0x7fc>
 74c:	mov	r2, #25
 750:	mov	r1, sl
 754:	ldr	r3, [r3]
 758:	ldr	r0, [pc, #160]	; 800 <main+0x800>
 75c:	bl	0 <fwrite>
 760:	bl	0 <main>
 764:	mov	r0, sl
 768:	bl	0 <exit>
 76c:	.word	0x00000000
 770:	.word	0x00000cd4
	...
 79c:	.word	0x00000cd8
 7a0:	.word	0x00000cdc
 7a4:	.word	0x00000ce4
 7a8:	.word	0x00000ce8
 7ac:	.word	0x00000d30
 7b0:	.word	0x00000d34
 7b4:	.word	0x00000698
 7b8:	.word	0x00000d5c
 7bc:	.word	0x00000d7c
 7c0:	.word	0x00000d84
 7c4:	.word	0x00000d88
 7c8:	.word	0x00000d90
 7cc:	.word	0x00000d94
 7d0:	.word	0x00000da4
 7d4:	.word	0x00000da8
 7d8:	.word	0x00000e54
 7dc:	.word	0x00000e60
 7e0:	.word	0x00000e64
 7e4:	.word	0x00000e24
 7e8:	.word	0x00000db0
 7ec:	.word	0x00000db4
 7f0:	.word	0x00000dbc
 7f4:	.word	0x00000e70
 7f8:	.word	0x00000e78
 7fc:	.word	0x00000000
 800:	.word	0x00000d60
 804:	.word	0x00000dcc
 808:	.word	0x00000dd8
 80c:	.word	0x00000de8
 810:	.word	0x00000df8
 814:	.word	0x00000240
 818:	.word	0x00000cf4
 81c:	.word	0x00000d00
 820:	.word	0x00000e0c
 824:	.word	0x00000e10
 828:	.word	0x00000e28
 82c:	.word	0x0000012c
 830:	.word	0x00000d50
 834:	.word	0x00000100
