
../compcert-repos/prog2/CMakeFiles/1.1.1.dir/Aula01_Ficheiros_e_Formatos_de_dados/01.1.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <in_array>:
   0:	push	{fp}		; (str fp, [sp, #-4]!)
   4:	add	fp, sp, #0
   8:	sub	sp, sp, #28
   c:	str	r0, [fp, #-16]
  10:	str	r1, [fp, #-20]	; 0xffffffec
  14:	str	r2, [fp, #-24]	; 0xffffffe8
  18:	mov	r3, #0
  1c:	str	r3, [fp, #-8]
  20:	mov	r3, #0
  24:	str	r3, [fp, #-8]
  28:	b	60 <in_array+0x60>
  2c:	ldr	r3, [fp, #-8]
  30:	lsl	r3, r3, #2
  34:	ldr	r2, [fp, #-20]	; 0xffffffec
  38:	add	r3, r2, r3
  3c:	ldr	r2, [r3]
  40:	ldr	r3, [fp, #-16]
  44:	cmp	r2, r3
  48:	bne	54 <in_array+0x54>
  4c:	mov	r3, #1
  50:	b	74 <in_array+0x74>
  54:	ldr	r3, [fp, #-8]
  58:	add	r3, r3, #1
  5c:	str	r3, [fp, #-8]
  60:	ldr	r2, [fp, #-8]
  64:	ldr	r3, [fp, #-24]	; 0xffffffe8
  68:	cmp	r2, r3
  6c:	ble	2c <in_array+0x2c>
  70:	mov	r3, #0
  74:	mov	r0, r3
  78:	add	sp, fp, #0
  7c:	pop	{fp}		; (ldr fp, [sp], #4)
  80:	bx	lr

00000084 <main>:
  84:	push	{fp, lr}
  88:	add	fp, sp, #4
  8c:	sub	sp, sp, #216	; 0xd8
  90:	ldr	r3, [pc, #720]	; 368 <main+0x2e4>
  94:	sub	ip, fp, #52	; 0x34
  98:	mov	lr, r3
  9c:	ldm	lr!, {r0, r1, r2, r3}
  a0:	stmia	ip!, {r0, r1, r2, r3}
  a4:	ldm	lr, {r0, r1, r2, r3}
  a8:	stm	ip, {r0, r1, r2, r3}
  ac:	ldr	r3, [pc, #696]	; 36c <main+0x2e8>
  b0:	sub	ip, fp, #68	; 0x44
  b4:	ldm	r3, {r0, r1, r2, r3}
  b8:	stm	ip, {r0, r1, r2, r3}
  bc:	ldr	r2, [pc, #684]	; 370 <main+0x2ec>
  c0:	sub	r3, fp, #76	; 0x4c
  c4:	ldm	r2, {r0, r1}
  c8:	stm	r3, {r0, r1}
  cc:	ldr	r3, [pc, #672]	; 374 <main+0x2f0>
  d0:	sub	ip, fp, #100	; 0x64
  d4:	mov	lr, r3
  d8:	ldm	lr!, {r0, r1, r2, r3}
  dc:	stmia	ip!, {r0, r1, r2, r3}
  e0:	ldm	lr, {r0, r1}
  e4:	stm	ip, {r0, r1}
  e8:	ldr	r2, [pc, #648]	; 378 <main+0x2f4>
  ec:	sub	r3, fp, #108	; 0x6c
  f0:	ldm	r2, {r0, r1}
  f4:	stm	r3, {r0, r1}
  f8:	ldr	r2, [pc, #636]	; 37c <main+0x2f8>
  fc:	sub	r3, fp, #116	; 0x74
 100:	ldm	r2, {r0, r1}
 104:	stm	r3, {r0, r1}
 108:	ldr	r1, [pc, #624]	; 380 <main+0x2fc>
 10c:	ldr	r0, [pc, #624]	; 384 <main+0x300>
 110:	bl	0 <fopen>
 114:	str	r0, [fp, #-16]
 118:	mov	r3, #0
 11c:	str	r3, [fp, #-12]
 120:	sub	r3, fp, #220	; 0xdc
 124:	mov	r2, #104	; 0x68
 128:	mov	r1, #0
 12c:	mov	r0, r3
 130:	bl	0 <memset>
 134:	ldr	r0, [fp, #-16]
 138:	bl	0 <getc>
 13c:	str	r0, [fp, #-8]
 140:	ldr	r3, [fp, #-8]
 144:	cmn	r3, #1
 148:	beq	2bc <main+0x238>
 14c:	sub	r3, fp, #52	; 0x34
 150:	mov	r2, #8
 154:	mov	r1, r3
 158:	ldr	r0, [fp, #-8]
 15c:	bl	0 <in_array>
 160:	mov	r3, r0
 164:	cmp	r3, #0
 168:	beq	178 <main+0xf4>
 16c:	mov	r3, #97	; 0x61
 170:	str	r3, [fp, #-8]
 174:	b	250 <main+0x1cc>
 178:	sub	r3, fp, #68	; 0x44
 17c:	mov	r2, #4
 180:	mov	r1, r3
 184:	ldr	r0, [fp, #-8]
 188:	bl	0 <in_array>
 18c:	mov	r3, r0
 190:	cmp	r3, #0
 194:	beq	1a4 <main+0x120>
 198:	mov	r3, #101	; 0x65
 19c:	str	r3, [fp, #-8]
 1a0:	b	250 <main+0x1cc>
 1a4:	sub	r3, fp, #76	; 0x4c
 1a8:	mov	r2, #2
 1ac:	mov	r1, r3
 1b0:	ldr	r0, [fp, #-8]
 1b4:	bl	0 <in_array>
 1b8:	mov	r3, r0
 1bc:	cmp	r3, #0
 1c0:	beq	1d0 <main+0x14c>
 1c4:	mov	r3, #105	; 0x69
 1c8:	str	r3, [fp, #-8]
 1cc:	b	250 <main+0x1cc>
 1d0:	sub	r3, fp, #100	; 0x64
 1d4:	mov	r2, #6
 1d8:	mov	r1, r3
 1dc:	ldr	r0, [fp, #-8]
 1e0:	bl	0 <in_array>
 1e4:	mov	r3, r0
 1e8:	cmp	r3, #0
 1ec:	beq	1fc <main+0x178>
 1f0:	mov	r3, #111	; 0x6f
 1f4:	str	r3, [fp, #-8]
 1f8:	b	250 <main+0x1cc>
 1fc:	sub	r3, fp, #108	; 0x6c
 200:	mov	r2, #2
 204:	mov	r1, r3
 208:	ldr	r0, [fp, #-8]
 20c:	bl	0 <in_array>
 210:	mov	r3, r0
 214:	cmp	r3, #0
 218:	beq	228 <main+0x1a4>
 21c:	mov	r3, #117	; 0x75
 220:	str	r3, [fp, #-8]
 224:	b	250 <main+0x1cc>
 228:	sub	r3, fp, #116	; 0x74
 22c:	mov	r2, #2
 230:	mov	r1, r3
 234:	ldr	r0, [fp, #-8]
 238:	bl	0 <in_array>
 23c:	mov	r3, r0
 240:	cmp	r3, #0
 244:	beq	250 <main+0x1cc>
 248:	mov	r3, #99	; 0x63
 24c:	str	r3, [fp, #-8]
 250:	ldr	r0, [fp, #-8]
 254:	bl	0 <tolower>
 258:	str	r0, [fp, #-8]
 25c:	ldr	r3, [fp, #-8]
 260:	sub	r3, r3, #97	; 0x61
 264:	str	r3, [fp, #-8]
 268:	ldr	r3, [fp, #-8]
 26c:	cmp	r3, #25
 270:	bgt	134 <main+0xb0>
 274:	ldr	r3, [fp, #-8]
 278:	cmp	r3, #0
 27c:	blt	134 <main+0xb0>
 280:	ldr	r3, [fp, #-8]
 284:	lsl	r3, r3, #2
 288:	sub	r2, fp, #4
 28c:	add	r3, r2, r3
 290:	ldr	r3, [r3, #-216]	; 0xffffff28
 294:	add	r2, r3, #1
 298:	ldr	r3, [fp, #-8]
 29c:	lsl	r3, r3, #2
 2a0:	sub	r1, fp, #4
 2a4:	add	r3, r1, r3
 2a8:	str	r2, [r3, #-216]	; 0xffffff28
 2ac:	ldr	r3, [fp, #-12]
 2b0:	add	r3, r3, #1
 2b4:	str	r3, [fp, #-12]
 2b8:	b	134 <main+0xb0>
 2bc:	nop			; (mov r0, r0)
 2c0:	ldr	r3, [fp, #-12]
 2c4:	str	r3, [fp, #-20]	; 0xffffffec
 2c8:	ldr	r0, [fp, #-16]
 2cc:	bl	0 <fclose>
 2d0:	ldr	r0, [pc, #176]	; 388 <main+0x304>
 2d4:	bl	0 <puts>
 2d8:	ldr	r1, [fp, #-12]
 2dc:	ldr	r0, [pc, #168]	; 38c <main+0x308>
 2e0:	bl	0 <printf>
 2e4:	mov	r3, #0
 2e8:	str	r3, [fp, #-12]
 2ec:	b	348 <main+0x2c4>
 2f0:	ldr	r3, [fp, #-12]
 2f4:	add	r1, r3, #97	; 0x61
 2f8:	ldr	r3, [fp, #-12]
 2fc:	lsl	r3, r3, #2
 300:	sub	r2, fp, #4
 304:	add	r3, r2, r3
 308:	ldr	r3, [r3, #-216]	; 0xffffff28
 30c:	vmov	s15, r3
 310:	vcvt.f32.s32	s13, s15
 314:	ldr	r3, [fp, #-20]	; 0xffffffec
 318:	vmov	s15, r3
 31c:	vcvt.f32.s32	s14, s15
 320:	vdiv.f32	s15, s13, s14
 324:	vldr	s14, [pc, #56]	; 364 <main+0x2e0>
 328:	vmul.f32	s15, s15, s14
 32c:	vcvt.f64.f32	d7, s15
 330:	vmov	r2, r3, d7
 334:	ldr	r0, [pc, #84]	; 390 <main+0x30c>
 338:	bl	0 <printf>
 33c:	ldr	r3, [fp, #-12]
 340:	add	r3, r3, #1
 344:	str	r3, [fp, #-12]
 348:	ldr	r3, [fp, #-12]
 34c:	cmp	r3, #25
 350:	ble	2f0 <main+0x26c>
 354:	mov	r3, #0
 358:	mov	r0, r3
 35c:	sub	sp, fp, #4
 360:	pop	{fp, pc}
 364:	.word	0x42c80000
 368:	.word	0x00000058
 36c:	.word	0x00000078
 370:	.word	0x00000088
 374:	.word	0x00000090
 378:	.word	0x000000a8
 37c:	.word	0x000000b0
 380:	.word	0x00000000
 384:	.word	0x00000004
 388:	.word	0x0000001c
 38c:	.word	0x00000020
 390:	.word	0x00000040
