
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/cli/CMakeFiles/flatcc_cli.dir/flatcc_cli.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <usage>:
   0:	movw	r2, #0
   4:	movt	r2, #0
   8:	str	r4, [sp, #-8]!
   c:	movw	r1, #0
  10:	movt	r1, #0
  14:	str	lr, [sp, #4]
  18:	mov	r4, r0
  1c:	bl	0 <fprintf>
  20:	mov	r0, r4
  24:	movw	r2, #0
  28:	movt	r2, #0
  2c:	movw	r1, #0
  30:	movt	r1, #0
  34:	bl	0 <fprintf>
  38:	mov	r3, r4
  3c:	mov	r2, #35	; 0x23
  40:	mov	r1, #1
  44:	movw	r0, #0
  48:	movt	r0, #0
  4c:	bl	0 <fwrite>
  50:	mov	r3, r4
  54:	movw	r0, #0
  58:	movt	r0, #0
  5c:	movw	r2, #1409	; 0x581
  60:	ldr	r4, [sp]
  64:	mov	r1, #1
  68:	ldr	lr, [sp, #4]
  6c:	add	sp, sp, #8
  70:	b	0 <fwrite>

00000074 <help>:
  74:	str	r4, [sp, #-8]!
  78:	mov	r4, r0
  7c:	str	lr, [sp, #4]
  80:	bl	0 <usage>
  84:	mov	r3, r4
  88:	movw	r0, #0
  8c:	movt	r0, #0
  90:	movw	r2, #3140	; 0xc44
  94:	ldr	r4, [sp]
  98:	mov	r1, #1
  9c:	ldr	lr, [sp, #4]
  a0:	add	sp, sp, #8
  a4:	b	0 <fwrite>

000000a8 <parse_bool_arg>:
  a8:	movw	r1, #0
  ac:	movt	r1, #0
  b0:	str	r4, [sp, #-8]!
  b4:	mov	r4, r0
  b8:	str	lr, [sp, #4]
  bc:	bl	0 <strcmp>
  c0:	cmp	r0, #0
  c4:	beq	114 <parse_bool_arg+0x6c>
  c8:	movw	r1, #0
  cc:	movt	r1, #0
  d0:	mov	r0, r4
  d4:	bl	0 <strcmp>
  d8:	cmp	r0, #0
  dc:	beq	114 <parse_bool_arg+0x6c>
  e0:	movw	r1, #0
  e4:	movt	r1, #0
  e8:	mov	r0, r4
  ec:	bl	0 <strcmp>
  f0:	cmp	r0, #0
  f4:	beq	110 <parse_bool_arg+0x68>
  f8:	movw	r1, #0
  fc:	movt	r1, #0
 100:	mov	r0, r4
 104:	bl	0 <strcmp>
 108:	cmp	r0, #0
 10c:	bne	120 <parse_bool_arg+0x78>
 110:	mov	r0, #1
 114:	ldr	r4, [sp]
 118:	add	sp, sp, #4
 11c:	pop	{pc}		; (ldr pc, [sp], #4)
 120:	movw	r3, #0
 124:	movt	r3, #0
 128:	mov	r2, r4
 12c:	movw	r1, #0
 130:	movt	r1, #0
 134:	ldr	r0, [r3]
 138:	bl	0 <fprintf>
 13c:	ldr	r4, [sp]
 140:	add	sp, sp, #4
 144:	mvn	r0, #0
 148:	pop	{pc}		; (ldr pc, [sp], #4)

0000014c <match_long_arg>:
 14c:	strd	r4, [sp, #-16]!
 150:	mov	r5, r0
 154:	mov	r4, r2
 158:	str	r6, [sp, #8]
 15c:	str	lr, [sp, #12]
 160:	bl	0 <strncmp>
 164:	cmp	r0, #0
 168:	movne	r0, #0
 16c:	bne	184 <match_long_arg+0x38>
 170:	mov	r0, r5
 174:	bl	0 <strlen>
 178:	sub	r0, r0, r4
 17c:	clz	r0, r0
 180:	lsr	r0, r0, #5
 184:	ldrd	r4, [sp]
 188:	ldr	r6, [sp, #8]
 18c:	add	sp, sp, #12
 190:	pop	{pc}		; (ldr pc, [sp], #4)

00000194 <set_opt>:
 194:	strd	r4, [sp, #-32]!	; 0xffffffe0
 198:	mov	r4, r1
 19c:	strd	r6, [sp, #8]
 1a0:	strd	r8, [sp, #16]
 1a4:	mov	r9, r0
 1a8:	mov	r0, r1
 1ac:	mov	r8, r2
 1b0:	str	sl, [sp, #24]
 1b4:	str	lr, [sp, #28]
 1b8:	bl	0 <strlen>
 1bc:	mov	r7, r0
 1c0:	mov	r1, #61	; 0x3d
 1c4:	mov	r0, r4
 1c8:	bl	0 <strchr>
 1cc:	ldrb	r6, [r4]
 1d0:	subs	r5, r0, #0
 1d4:	addne	r8, r5, #1
 1d8:	subne	r7, r5, r4
 1dc:	cmp	r6, #104	; 0x68
 1e0:	beq	330 <set_opt+0x19c>
 1e4:	movw	r0, #0
 1e8:	movt	r0, #0
 1ec:	mov	r1, r4
 1f0:	bl	0 <strcmp>
 1f4:	cmp	r0, #0
 1f8:	beq	330 <set_opt+0x19c>
 1fc:	movw	r0, #0
 200:	movt	r0, #0
 204:	mov	r1, r4
 208:	bl	0 <strcmp>
 20c:	subs	sl, r0, #0
 210:	beq	348 <set_opt+0x1b4>
 214:	movw	r0, #0
 218:	movt	r0, #0
 21c:	mov	r1, r4
 220:	bl	0 <strcmp>
 224:	cmp	r0, #0
 228:	moveq	r3, #1
 22c:	streq	r3, [r9, #108]	; 0x6c
 230:	beq	318 <set_opt+0x184>
 234:	movw	r0, #0
 238:	movt	r0, #0
 23c:	mov	r1, r4
 240:	bl	0 <strcmp>
 244:	cmp	r0, #0
 248:	moveq	r3, #1
 24c:	streq	r3, [r9, #180]	; 0xb4
 250:	beq	318 <set_opt+0x184>
 254:	movw	r0, #0
 258:	movt	r0, #0
 25c:	mov	r1, r4
 260:	bl	0 <strcmp>
 264:	cmp	r0, #0
 268:	moveq	r3, #1
 26c:	streq	r3, [r9, #164]	; 0xa4
 270:	beq	318 <set_opt+0x184>
 274:	movw	r0, #0
 278:	movt	r0, #0
 27c:	mov	r1, r4
 280:	bl	0 <strcmp>
 284:	cmp	r0, #0
 288:	moveq	r3, #1
 28c:	streq	r3, [r9, #168]	; 0xa8
 290:	beq	318 <set_opt+0x184>
 294:	movw	r0, #0
 298:	movt	r0, #0
 29c:	mov	r1, r4
 2a0:	bl	0 <strcmp>
 2a4:	cmp	r0, #0
 2a8:	moveq	r3, #1
 2ac:	streq	r3, [r9, #164]	; 0xa4
 2b0:	streq	r3, [r9, #168]	; 0xa8
 2b4:	beq	318 <set_opt+0x184>
 2b8:	movw	r0, #0
 2bc:	movt	r0, #0
 2c0:	mov	r2, r7
 2c4:	mov	r1, r4
 2c8:	bl	14c <match_long_arg>
 2cc:	cmp	r0, #0
 2d0:	bne	3c8 <set_opt+0x234>
 2d4:	movw	r0, #0
 2d8:	movt	r0, #0
 2dc:	mov	r2, r7
 2e0:	mov	r1, r4
 2e4:	bl	14c <match_long_arg>
 2e8:	cmp	r0, #0
 2ec:	beq	388 <set_opt+0x1f4>
 2f0:	cmp	r8, #0
 2f4:	beq	80c <set_opt+0x678>
 2f8:	mov	r0, r8
 2fc:	bl	a8 <parse_bool_arg>
 300:	cmp	r0, #0
 304:	str	r0, [r9, #188]	; 0xbc
 308:	blt	404 <set_opt+0x270>
 30c:	cmp	r5, #0
 310:	beq	3c0 <set_opt+0x22c>
 314:	mov	r0, #0
 318:	ldrd	r4, [sp]
 31c:	ldrd	r6, [sp, #8]
 320:	ldrd	r8, [sp, #16]
 324:	ldr	sl, [sp, #24]
 328:	add	sp, sp, #28
 32c:	pop	{pc}		; (ldr pc, [sp], #4)
 330:	movw	r3, #0
 334:	movt	r3, #0
 338:	ldr	r0, [r3]
 33c:	bl	74 <help>
 340:	mov	r0, #0
 344:	bl	0 <exit>
 348:	movw	r4, #0
 34c:	movt	r4, #0
 350:	movw	r2, #0
 354:	movt	r2, #0
 358:	ldr	r0, [r4]
 35c:	movw	r1, #0
 360:	movt	r1, #0
 364:	bl	0 <fprintf>
 368:	movw	r2, #0
 36c:	movt	r2, #0
 370:	ldr	r0, [r4]
 374:	movw	r1, #0
 378:	movt	r1, #0
 37c:	bl	0 <fprintf>
 380:	mov	r0, sl
 384:	bl	0 <exit>
 388:	movw	r0, #0
 38c:	movt	r0, #0
 390:	mov	r2, r7
 394:	mov	r1, r4
 398:	bl	14c <match_long_arg>
 39c:	cmp	r0, #0
 3a0:	beq	40c <set_opt+0x278>
 3a4:	cmp	r8, #0
 3a8:	beq	820 <set_opt+0x68c>
 3ac:	mov	r3, #1
 3b0:	cmp	r5, #0
 3b4:	str	r3, [r9, #112]	; 0x70
 3b8:	str	r8, [r9, #116]	; 0x74
 3bc:	bne	314 <set_opt+0x180>
 3c0:	mov	r0, #2
 3c4:	b	318 <set_opt+0x184>
 3c8:	movw	r4, #0
 3cc:	movt	r4, #0
 3d0:	movw	r0, #0
 3d4:	movt	r0, #0
 3d8:	ldr	r3, [r4]
 3dc:	mov	r2, #112	; 0x70
 3e0:	mov	r1, #1
 3e4:	bl	0 <fwrite>
 3e8:	cmp	r8, #0
 3ec:	beq	7ec <set_opt+0x658>
 3f0:	mov	r0, r8
 3f4:	bl	a8 <parse_bool_arg>
 3f8:	cmp	r0, #0
 3fc:	str	r0, [r9, #184]	; 0xb8
 400:	bge	30c <set_opt+0x178>
 404:	mvn	r0, #0
 408:	bl	0 <exit>
 40c:	movw	r0, #0
 410:	movt	r0, #0
 414:	mov	r2, r7
 418:	mov	r1, r4
 41c:	bl	14c <match_long_arg>
 420:	cmp	r0, #0
 424:	beq	440 <set_opt+0x2ac>
 428:	cmp	r8, #0
 42c:	beq	834 <set_opt+0x6a0>
 430:	cmp	r5, #0
 434:	str	r8, [r9, #120]	; 0x78
 438:	bne	314 <set_opt+0x180>
 43c:	b	3c0 <set_opt+0x22c>
 440:	movw	r0, #0
 444:	movt	r0, #0
 448:	mov	r2, r7
 44c:	mov	r1, r4
 450:	bl	14c <match_long_arg>
 454:	cmp	r0, #0
 458:	beq	474 <set_opt+0x2e0>
 45c:	cmp	r8, #0
 460:	beq	7a0 <set_opt+0x60c>
 464:	cmp	r5, #0
 468:	str	r8, [r9, #124]	; 0x7c
 46c:	bne	314 <set_opt+0x180>
 470:	b	3c0 <set_opt+0x22c>
 474:	movw	r0, #0
 478:	movt	r0, #0
 47c:	mov	r2, r7
 480:	mov	r1, r4
 484:	bl	14c <match_long_arg>
 488:	cmp	r0, #0
 48c:	beq	4a8 <set_opt+0x314>
 490:	cmp	r8, #0
 494:	beq	7c8 <set_opt+0x634>
 498:	cmp	r5, #0
 49c:	str	r8, [r9, #196]	; 0xc4
 4a0:	bne	314 <set_opt+0x180>
 4a4:	b	3c0 <set_opt+0x22c>
 4a8:	mov	r2, r7
 4ac:	movw	r0, #0
 4b0:	movt	r0, #0
 4b4:	mov	r1, r4
 4b8:	bl	14c <match_long_arg>
 4bc:	cmp	r0, #0
 4c0:	beq	4dc <set_opt+0x348>
 4c4:	cmp	r8, #0
 4c8:	beq	618 <set_opt+0x484>
 4cc:	cmp	r5, #0
 4d0:	str	r8, [r9, #192]	; 0xc0
 4d4:	bne	314 <set_opt+0x180>
 4d8:	b	3c0 <set_opt+0x22c>
 4dc:	sub	r3, r6, #45	; 0x2d
 4e0:	cmp	r3, #74	; 0x4a
 4e4:	ldrls	pc, [pc, r3, lsl #2]
 4e8:	b	77c <set_opt+0x5e8>
 4ec:	.word	0x00000758
 4f0:	.word	0x0000077c
 4f4:	.word	0x0000077c
 4f8:	.word	0x0000077c
 4fc:	.word	0x0000077c
 500:	.word	0x0000077c
 504:	.word	0x0000077c
 508:	.word	0x0000077c
 50c:	.word	0x0000077c
 510:	.word	0x0000077c
 514:	.word	0x0000077c
 518:	.word	0x0000077c
 51c:	.word	0x0000077c
 520:	.word	0x0000077c
 524:	.word	0x0000077c
 528:	.word	0x0000077c
 52c:	.word	0x0000077c
 530:	.word	0x0000077c
 534:	.word	0x0000077c
 538:	.word	0x0000077c
 53c:	.word	0x0000077c
 540:	.word	0x0000077c
 544:	.word	0x0000077c
 548:	.word	0x0000077c
 54c:	.word	0x0000077c
 550:	.word	0x0000077c
 554:	.word	0x0000077c
 558:	.word	0x0000077c
 55c:	.word	0x0000070c
 560:	.word	0x0000077c
 564:	.word	0x0000077c
 568:	.word	0x0000077c
 56c:	.word	0x0000077c
 570:	.word	0x0000077c
 574:	.word	0x0000077c
 578:	.word	0x0000077c
 57c:	.word	0x0000077c
 580:	.word	0x0000077c
 584:	.word	0x0000077c
 588:	.word	0x0000077c
 58c:	.word	0x0000077c
 590:	.word	0x0000077c
 594:	.word	0x0000077c
 598:	.word	0x0000077c
 59c:	.word	0x0000077c
 5a0:	.word	0x0000077c
 5a4:	.word	0x0000077c
 5a8:	.word	0x0000077c
 5ac:	.word	0x0000077c
 5b0:	.word	0x0000077c
 5b4:	.word	0x0000077c
 5b8:	.word	0x0000077c
 5bc:	.word	0x000006ec
 5c0:	.word	0x0000077c
 5c4:	.word	0x000006e0
 5c8:	.word	0x000006d4
 5cc:	.word	0x0000077c
 5d0:	.word	0x0000077c
 5d4:	.word	0x0000077c
 5d8:	.word	0x0000077c
 5dc:	.word	0x0000077c
 5e0:	.word	0x0000077c
 5e4:	.word	0x0000077c
 5e8:	.word	0x0000077c
 5ec:	.word	0x0000077c
 5f0:	.word	0x0000077c
 5f4:	.word	0x00000664
 5f8:	.word	0x0000077c
 5fc:	.word	0x0000077c
 600:	.word	0x00000658
 604:	.word	0x0000077c
 608:	.word	0x0000077c
 60c:	.word	0x0000077c
 610:	.word	0x0000064c
 614:	.word	0x00000640
 618:	movw	r3, #0
 61c:	movt	r3, #0
 620:	movw	r0, #0
 624:	movt	r0, #0
 628:	mov	r2, #28
 62c:	mov	r1, #1
 630:	ldr	r3, [r3]
 634:	bl	0 <fwrite>
 638:	mvn	r0, #0
 63c:	bl	0 <exit>
 640:	mov	r3, #1
 644:	str	r3, [r9, #156]	; 0x9c
 648:	b	318 <set_opt+0x184>
 64c:	mov	r3, #1
 650:	str	r3, [r9, #160]	; 0xa0
 654:	b	318 <set_opt+0x184>
 658:	mov	r3, #1
 65c:	str	r3, [r9, #172]	; 0xac
 660:	b	318 <set_opt+0x184>
 664:	ldr	r3, [r9, #216]	; 0xd8
 668:	cmp	r3, #0
 66c:	bne	698 <set_opt+0x504>
 670:	ldrb	r3, [r4, #1]
 674:	cmp	r3, #0
 678:	addne	r8, r4, #1
 67c:	movne	r0, #1
 680:	bne	690 <set_opt+0x4fc>
 684:	cmp	r8, #0
 688:	movne	r0, #2
 68c:	beq	6c0 <set_opt+0x52c>
 690:	str	r8, [r9, #216]	; 0xd8
 694:	b	318 <set_opt+0x184>
 698:	movw	r3, #0
 69c:	movt	r3, #0
 6a0:	movw	r0, #0
 6a4:	movt	r0, #0
 6a8:	mov	r2, #37	; 0x25
 6ac:	mov	r1, #1
 6b0:	ldr	r3, [r3]
 6b4:	bl	0 <fwrite>
 6b8:	mvn	r0, #0
 6bc:	bl	0 <exit>
 6c0:	movw	r3, #0
 6c4:	movt	r3, #0
 6c8:	movw	r0, #0
 6cc:	movt	r0, #0
 6d0:	b	628 <set_opt+0x494>
 6d4:	mov	r3, #1
 6d8:	str	r3, [r9, #112]	; 0x70
 6dc:	b	318 <set_opt+0x184>
 6e0:	mov	r3, #1
 6e4:	str	r3, [r9, #144]	; 0x90
 6e8:	b	318 <set_opt+0x184>
 6ec:	mov	r3, #1
 6f0:	str	r3, [r9, #144]	; 0x90
 6f4:	str	r3, [r9, #148]	; 0x94
 6f8:	str	r3, [r9, #152]	; 0x98
 6fc:	str	r3, [r9, #156]	; 0x9c
 700:	str	r3, [r9, #160]	; 0xa0
 704:	str	r3, [r9, #172]	; 0xac
 708:	b	318 <set_opt+0x184>
 70c:	ldrb	r3, [r4, #1]
 710:	cmp	r3, #0
 714:	addne	r8, r4, #1
 718:	movne	r0, #1
 71c:	bne	72c <set_opt+0x598>
 720:	cmp	r8, #0
 724:	movne	r0, #2
 728:	beq	744 <set_opt+0x5b0>
 72c:	ldr	r2, [r9, #200]	; 0xc8
 730:	ldr	r3, [r9, #208]	; 0xd0
 734:	add	r1, r3, #1
 738:	str	r1, [r9, #208]	; 0xd0
 73c:	str	r8, [r2, r3, lsl #2]
 740:	b	318 <set_opt+0x184>
 744:	movw	r3, #0
 748:	movt	r3, #0
 74c:	movw	r0, #0
 750:	movt	r0, #0
 754:	b	628 <set_opt+0x494>
 758:	movw	r3, #0
 75c:	movt	r3, #0
 760:	mov	r2, r4
 764:	movw	r1, #0
 768:	movt	r1, #0
 76c:	ldr	r0, [r3]
 770:	bl	0 <fprintf>
 774:	mvn	r0, #0
 778:	bl	0 <exit>
 77c:	movw	r3, #0
 780:	movt	r3, #0
 784:	mov	r2, r6
 788:	movw	r1, #0
 78c:	movt	r1, #0
 790:	ldr	r0, [r3]
 794:	bl	0 <fprintf>
 798:	mvn	r0, #0
 79c:	bl	0 <exit>
 7a0:	movw	r3, #0
 7a4:	movt	r3, #0
 7a8:	movw	r0, #0
 7ac:	movt	r0, #0
 7b0:	mov	r2, #35	; 0x23
 7b4:	mov	r1, #1
 7b8:	ldr	r3, [r3]
 7bc:	bl	0 <fwrite>
 7c0:	mvn	r0, #0
 7c4:	bl	0 <exit>
 7c8:	movw	r3, #0
 7cc:	movt	r3, #0
 7d0:	movw	r0, #0
 7d4:	movt	r0, #0
 7d8:	mov	r2, #41	; 0x29
 7dc:	mov	r1, #1
 7e0:	ldr	r3, [r3]
 7e4:	bl	0 <fwrite>
 7e8:	b	404 <set_opt+0x270>
 7ec:	movw	r0, #0
 7f0:	movt	r0, #0
 7f4:	ldr	r3, [r4]
 7f8:	mov	r2, #44	; 0x2c
 7fc:	mov	r1, #1
 800:	bl	0 <fwrite>
 804:	mvn	r0, #0
 808:	bl	0 <exit>
 80c:	movw	r3, #0
 810:	movt	r3, #0
 814:	movw	r0, #0
 818:	movt	r0, #0
 81c:	b	7d8 <set_opt+0x644>
 820:	movw	r3, #0
 824:	movt	r3, #0
 828:	movw	r0, #0
 82c:	movt	r0, #0
 830:	b	7b0 <set_opt+0x61c>
 834:	movw	r3, #0
 838:	movt	r3, #0
 83c:	movw	r0, #0
 840:	movt	r0, #0
 844:	b	6a8 <set_opt+0x514>

00000848 <get_opt>:
 848:	strd	r4, [sp, #-16]!
 84c:	mov	r4, r1
 850:	str	r6, [sp, #8]
 854:	str	lr, [sp, #12]
 858:	ldrb	r3, [r4, #1]!
 85c:	cmp	r3, #45	; 0x2d
 860:	beq	8d4 <get_opt+0x8c>
 864:	cmp	r3, #0
 868:	mov	r5, r0
 86c:	mov	r6, r2
 870:	bne	88c <get_opt+0x44>
 874:	b	8f8 <get_opt+0xb0>
 878:	cmp	r0, #0
 87c:	addeq	r4, r4, #1
 880:	ldrb	r0, [r4]
 884:	cmp	r0, #0
 888:	beq	8b0 <get_opt+0x68>
 88c:	mov	r2, r6
 890:	mov	r1, r4
 894:	mov	r0, r5
 898:	bl	194 <set_opt>
 89c:	cmp	r0, #1
 8a0:	beq	8c0 <get_opt+0x78>
 8a4:	cmp	r0, #2
 8a8:	bne	878 <get_opt+0x30>
 8ac:	mov	r0, #1
 8b0:	ldrd	r4, [sp]
 8b4:	ldr	r6, [sp, #8]
 8b8:	add	sp, sp, #12
 8bc:	pop	{pc}		; (ldr pc, [sp], #4)
 8c0:	ldrd	r4, [sp]
 8c4:	mov	r0, #0
 8c8:	ldr	r6, [sp, #8]
 8cc:	add	sp, sp, #12
 8d0:	pop	{pc}		; (ldr pc, [sp], #4)
 8d4:	mov	r1, r4
 8d8:	bl	194 <set_opt>
 8dc:	sub	r0, r0, #2
 8e0:	ldrd	r4, [sp]
 8e4:	clz	r0, r0
 8e8:	ldr	r6, [sp, #8]
 8ec:	add	sp, sp, #12
 8f0:	lsr	r0, r0, #5
 8f4:	pop	{pc}		; (ldr pc, [sp], #4)
 8f8:	movw	r3, #0
 8fc:	movt	r3, #0
 900:	movw	r0, #0
 904:	movt	r0, #0
 908:	ldr	r3, [r3]
 90c:	mov	r2, #24
 910:	mov	r1, #1
 914:	bl	0 <fwrite>
 918:	mvn	r0, #0
 91c:	bl	0 <exit>

00000920 <parse_opts>:
 920:	cmp	r0, #1
 924:	bxle	lr
 928:	strd	r4, [sp, #-24]!	; 0xffffffe8
 92c:	mov	r5, r2
 930:	mov	r4, #1
 934:	strd	r6, [sp, #8]
 938:	mov	r7, r1
 93c:	mov	r6, r0
 940:	str	r8, [sp, #16]
 944:	str	lr, [sp, #20]
 948:	b	96c <parse_opts+0x4c>
 94c:	ldr	r2, [r5, #204]	; 0xcc
 950:	mov	r4, ip
 954:	cmp	r6, r4
 958:	ldr	r3, [r5, #212]	; 0xd4
 95c:	add	r0, r3, #1
 960:	str	r0, [r5, #212]	; 0xd4
 964:	str	r1, [r2, r3, lsl #2]
 968:	ble	9ac <parse_opts+0x8c>
 96c:	ldr	r1, [r7, r4, lsl #2]
 970:	lsl	lr, r4, #2
 974:	add	ip, r4, #1
 978:	ldrb	r3, [r1]
 97c:	cmp	r3, #45	; 0x2d
 980:	bne	94c <parse_opts+0x2c>
 984:	cmp	r6, ip
 988:	add	lr, r7, lr
 98c:	mov	r2, #0
 990:	mov	r0, r5
 994:	ldrgt	r2, [lr, #4]
 998:	bl	848 <get_opt>
 99c:	add	r4, r0, r4
 9a0:	add	r4, r4, #1
 9a4:	cmp	r6, r4
 9a8:	bgt	96c <parse_opts+0x4c>
 9ac:	ldrd	r4, [sp]
 9b0:	ldrd	r6, [sp, #8]
 9b4:	ldr	r8, [sp, #16]
 9b8:	add	sp, sp, #20
 9bc:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .text.startup:

00000000 <main>:
   0:	cmp	r0, #1
   4:	strd	r4, [sp, #-20]!	; 0xffffffec
   8:	strd	r6, [sp, #8]
   c:	str	lr, [sp, #16]
  10:	sub	sp, sp, #228	; 0xe4
  14:	ble	358 <main+0x358>
  18:	lsl	r5, r0, #2
  1c:	mov	r4, r0
  20:	mov	r0, sp
  24:	mov	r6, r1
  28:	bl	0 <flatcc_init_options>
  2c:	mov	r0, r5
  30:	bl	0 <malloc>
  34:	cmp	r0, #0
  38:	str	r0, [sp, #200]	; 0xc8
  3c:	beq	3a0 <main+0x3a0>
  40:	mov	r0, r5
  44:	bl	0 <malloc>
  48:	cmp	r0, #0
  4c:	str	r0, [sp, #204]	; 0xcc
  50:	beq	370 <main+0x370>
  54:	mov	r1, r6
  58:	mov	r0, r4
  5c:	mov	r2, sp
  60:	bl	920 <parse_opts>
  64:	ldr	r3, [sp, #156]	; 0x9c
  68:	cmp	r3, #0
  6c:	bne	110 <main+0x110>
  70:	ldr	r2, [sp, #212]	; 0xd4
  74:	str	r3, [sp, #148]	; 0x94
  78:	cmp	r2, #0
  7c:	bne	2a4 <main+0x2a4>
  80:	ldr	r3, [sp, #144]	; 0x90
  84:	cmp	r3, #0
  88:	beq	310 <main+0x310>
  8c:	ldr	r3, [sp, #180]	; 0xb4
  90:	cmp	r3, #0
  94:	bne	310 <main+0x310>
  98:	mov	r0, sp
  9c:	mov	r2, r3
  a0:	mov	r1, r3
  a4:	bl	0 <flatcc_create_context>
  a8:	subs	r5, r0, #0
  ac:	beq	1e0 <main+0x1e0>
  b0:	bl	0 <flatcc_generate_files>
  b4:	subs	r4, r0, #0
  b8:	beq	290 <main+0x290>
  bc:	mov	r0, r5
  c0:	movw	r4, #0
  c4:	movt	r4, #0
  c8:	bl	0 <flatcc_destroy_context>
  cc:	movw	r0, #0
  d0:	movt	r0, #0
  d4:	ldr	r3, [r4]
  d8:	mov	r2, #14
  dc:	mov	r1, #1
  e0:	mvn	r4, #0
  e4:	bl	0 <fwrite>
  e8:	ldr	r0, [sp, #200]	; 0xc8
  ec:	bl	0 <free>
  f0:	ldr	r0, [sp, #204]	; 0xcc
  f4:	bl	0 <free>
  f8:	mov	r0, r4
  fc:	add	sp, sp, #228	; 0xe4
 100:	ldrd	r4, [sp]
 104:	ldrd	r6, [sp, #8]
 108:	add	sp, sp, #16
 10c:	pop	{pc}		; (ldr pc, [sp], #4)
 110:	ldr	r1, [sp, #144]	; 0x90
 114:	cmp	r1, #0
 118:	beq	204 <main+0x204>
 11c:	ldr	r2, [sp, #212]	; 0xd4
 120:	mov	r3, #1
 124:	str	r3, [sp, #148]	; 0x94
 128:	cmp	r2, #0
 12c:	beq	8c <main+0x8c>
 130:	ldr	r3, [sp, #180]	; 0xb4
 134:	cmp	r3, #0
 138:	beq	234 <main+0x234>
 13c:	ldr	r3, [sp, #108]	; 0x6c
 140:	cmp	r3, #0
 144:	bne	3c8 <main+0x3c8>
 148:	ldr	r3, [sp, #124]	; 0x7c
 14c:	cmp	r3, #0
 150:	bne	2ec <main+0x2ec>
 154:	ldr	r3, [sp, #120]	; 0x78
 158:	cmp	r3, #0
 15c:	beq	16c <main+0x16c>
 160:	ldr	r3, [sp, #116]	; 0x74
 164:	cmp	r3, #0
 168:	beq	334 <main+0x334>
 16c:	ldr	r4, [sp, #204]	; 0xcc
 170:	cmp	r2, #0
 174:	movgt	r6, #0
 178:	movgt	r7, #1
 17c:	subgt	r4, r4, #4
 180:	bgt	1c4 <main+0x1c4>
 184:	b	29c <main+0x29c>
 188:	ldr	r1, [r4]
 18c:	bl	0 <flatcc_parse_file>
 190:	cmp	r0, #0
 194:	bne	bc <main+0xbc>
 198:	mov	r0, r5
 19c:	bl	0 <flatcc_generate_files>
 1a0:	cmp	r0, #0
 1a4:	bne	bc <main+0xbc>
 1a8:	mov	r0, r5
 1ac:	add	r6, r6, #1
 1b0:	bl	0 <flatcc_destroy_context>
 1b4:	ldr	r3, [sp, #212]	; 0xd4
 1b8:	str	r7, [sp, #128]	; 0x80
 1bc:	cmp	r3, r6
 1c0:	ble	29c <main+0x29c>
 1c4:	mov	r3, #0
 1c8:	mov	r0, sp
 1cc:	ldr	r1, [r4, #4]!
 1d0:	mov	r2, r3
 1d4:	bl	0 <flatcc_create_context>
 1d8:	subs	r5, r0, #0
 1dc:	bne	188 <main+0x188>
 1e0:	movw	r4, #0
 1e4:	movt	r4, #0
 1e8:	movw	r0, #0
 1ec:	movt	r0, #0
 1f0:	ldr	r3, [r4]
 1f4:	mov	r2, #49	; 0x31
 1f8:	mov	r1, #1
 1fc:	bl	0 <fwrite>
 200:	b	cc <main+0xcc>
 204:	ldr	r2, [sp, #212]	; 0xd4
 208:	str	r1, [sp, #148]	; 0x94
 20c:	cmp	r2, #0
 210:	beq	310 <main+0x310>
 214:	ldr	r1, [sp, #180]	; 0xb4
 218:	cmp	r1, #0
 21c:	bne	13c <main+0x13c>
 220:	cmp	r3, #0
 224:	bne	234 <main+0x234>
 228:	ldr	r0, [sp, #160]	; 0xa0
 22c:	cmp	r0, #0
 230:	beq	23c <main+0x23c>
 234:	mov	r3, #1
 238:	str	r3, [sp, #152]	; 0x98
 23c:	ldr	r3, [sp, #120]	; 0x78
 240:	cmp	r3, #0
 244:	beq	254 <main+0x254>
 248:	ldr	r3, [sp, #116]	; 0x74
 24c:	cmp	r3, #0
 250:	beq	334 <main+0x334>
 254:	ldr	r3, [sp, #108]	; 0x6c
 258:	cmp	r3, #0
 25c:	beq	16c <main+0x16c>
 260:	ldr	r3, [sp, #124]	; 0x7c
 264:	cmp	r3, #0
 268:	beq	16c <main+0x16c>
 26c:	movw	r4, #0
 270:	movt	r4, #0
 274:	movw	r0, #0
 278:	movt	r0, #0
 27c:	ldr	r3, [r4]
 280:	mov	r2, #38	; 0x26
 284:	mov	r1, #1
 288:	bl	0 <fwrite>
 28c:	b	cc <main+0xcc>
 290:	mov	r0, r5
 294:	bl	0 <flatcc_destroy_context>
 298:	b	e8 <main+0xe8>
 29c:	mov	r4, #0
 2a0:	b	e8 <main+0xe8>
 2a4:	ldr	r0, [sp, #152]	; 0x98
 2a8:	ldr	r1, [sp, #180]	; 0xb4
 2ac:	cmp	r0, #0
 2b0:	bne	218 <main+0x218>
 2b4:	ldr	r3, [sp, #144]	; 0x90
 2b8:	ldr	r0, [sp, #160]	; 0xa0
 2bc:	ldr	lr, [sp, #164]	; 0xa4
 2c0:	ldr	ip, [sp, #168]	; 0xa8
 2c4:	orr	r3, r0, r3
 2c8:	orr	r3, r3, lr
 2cc:	orrs	r3, r3, ip
 2d0:	bne	2e0 <main+0x2e0>
 2d4:	cmp	r1, #0
 2d8:	beq	234 <main+0x234>
 2dc:	b	23c <main+0x23c>
 2e0:	cmp	r1, #0
 2e4:	bne	13c <main+0x13c>
 2e8:	b	22c <main+0x22c>
 2ec:	movw	r4, #0
 2f0:	movt	r4, #0
 2f4:	movw	r0, #0
 2f8:	movt	r0, #0
 2fc:	ldr	r3, [r4]
 300:	mov	r2, #58	; 0x3a
 304:	mov	r1, #1
 308:	bl	0 <fwrite>
 30c:	b	cc <main+0xcc>
 310:	movw	r4, #0
 314:	movt	r4, #0
 318:	movw	r0, #0
 31c:	movt	r0, #0
 320:	ldr	r3, [r4]
 324:	mov	r2, #17
 328:	mov	r1, #1
 32c:	bl	0 <fwrite>
 330:	b	cc <main+0xcc>
 334:	movw	r4, #0
 338:	movt	r4, #0
 33c:	movw	r0, #0
 340:	movt	r0, #0
 344:	ldr	r3, [r4]
 348:	mov	r2, #44	; 0x2c
 34c:	mov	r1, #1
 350:	bl	0 <fwrite>
 354:	b	cc <main+0xcc>
 358:	movw	r3, #0
 35c:	movt	r3, #0
 360:	ldr	r0, [r3]
 364:	bl	0 <main>
 368:	mvn	r0, #0
 36c:	bl	0 <exit>
 370:	movw	r3, #0
 374:	movt	r3, #0
 378:	mov	r2, #26
 37c:	mov	r1, #1
 380:	ldr	r3, [r3]
 384:	movw	r0, #0
 388:	movt	r0, #0
 38c:	bl	0 <fwrite>
 390:	ldr	r0, [sp, #200]	; 0xc8
 394:	bl	0 <free>
 398:	mvn	r0, #0
 39c:	bl	0 <exit>
 3a0:	movw	r3, #0
 3a4:	movt	r3, #0
 3a8:	movw	r0, #0
 3ac:	movt	r0, #0
 3b0:	ldr	r3, [r3]
 3b4:	mov	r2, #26
 3b8:	mov	r1, #1
 3bc:	bl	0 <fwrite>
 3c0:	mvn	r0, #0
 3c4:	bl	0 <exit>
 3c8:	movw	r4, #0
 3cc:	movt	r4, #0
 3d0:	movw	r0, #0
 3d4:	movt	r0, #0
 3d8:	ldr	r3, [r4]
 3dc:	mov	r2, #57	; 0x39
 3e0:	mov	r1, #1
 3e4:	bl	0 <fwrite>
 3e8:	b	cc <main+0xcc>
