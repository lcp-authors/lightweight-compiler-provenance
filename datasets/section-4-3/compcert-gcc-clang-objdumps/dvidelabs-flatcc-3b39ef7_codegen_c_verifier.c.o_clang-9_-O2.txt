
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c_verifier.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_fb_gen_c_verifier>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #492	; 0x1ec
   c:	mov	r4, r0
  10:	mov	r8, r0
  14:	ldr	r1, [r4, #208]	; 0xd0
  18:	ldr	r0, [r8, #204]!	; 0xcc
  1c:	ldr	r2, [r1, #164]	; 0xa4
  20:	movw	r1, #0
  24:	movt	r1, #0
  28:	mov	r3, r2
  2c:	bl	0 <fprintf>
  30:	ldr	r3, [r8]
  34:	movw	r0, #0
  38:	mov	r1, #81	; 0x51
  3c:	mov	r2, #1
  40:	movt	r0, #0
  44:	bl	0 <fwrite>
  48:	ldr	r1, [r4, #208]	; 0xd0
  4c:	ldr	r0, [r8]
  50:	ldr	r2, [r1, #164]	; 0xa4
  54:	movw	r1, #0
  58:	movt	r1, #0
  5c:	bl	0 <fprintf>
  60:	ldr	r1, [r4, #208]	; 0xd0
  64:	ldr	r0, [r8]
  68:	ldr	r2, [r1, #160]	; 0xa0
  6c:	movw	r1, #0
  70:	movt	r1, #0
  74:	bl	0 <fprintf>
  78:	ldr	r3, [r8]
  7c:	movw	r0, #0
  80:	mov	r1, #7
  84:	mov	r2, #1
  88:	movt	r0, #0
  8c:	bl	0 <fwrite>
  90:	ldr	r3, [r8]
  94:	movw	r0, #0
  98:	mov	r1, #36	; 0x24
  9c:	mov	r2, #1
  a0:	movt	r0, #0
  a4:	bl	0 <fwrite>
  a8:	movw	r1, #0
  ac:	movw	r2, #0
  b0:	mov	r0, r4
  b4:	movt	r1, #0
  b8:	movt	r2, #0
  bc:	bl	0 <__flatcc_fb_gen_c_includes>
  c0:	ldr	r0, [r4, #212]	; 0xd4
  c4:	str	r4, [sp, #36]	; 0x24
  c8:	ldr	r0, [r0, #140]	; 0x8c
  cc:	cmp	r0, #0
  d0:	beq	ec <__flatcc_fb_gen_c_verifier+0xec>
  d4:	ldr	r3, [r8]
  d8:	movw	r0, #0
  dc:	mov	r1, #36	; 0x24
  e0:	mov	r2, #1
  e4:	movt	r0, #0
  e8:	bl	0 <fwrite>
  ec:	ldr	r4, [sp, #36]	; 0x24
  f0:	mov	r0, #10
  f4:	ldr	r1, [r4, #204]	; 0xcc
  f8:	bl	0 <fputc>
  fc:	sub	r0, fp, #256	; 0x100
 100:	mov	r1, #0
 104:	mov	r2, #220	; 0xdc
 108:	bl	0 <memset>
 10c:	ldr	r0, [r4, #208]	; 0xd0
 110:	ldr	r4, [r0, #40]	; 0x28
 114:	cmp	r4, #0
 118:	beq	168 <__flatcc_fb_gen_c_verifier+0x168>
 11c:	movw	r6, #0
 120:	sub	r5, fp, #256	; 0x100
 124:	movt	r6, #0
 128:	b	138 <__flatcc_fb_gen_c_verifier+0x138>
 12c:	ldr	r4, [r4]
 130:	cmp	r4, #0
 134:	beq	168 <__flatcc_fb_gen_c_verifier+0x168>
 138:	ldrh	r0, [r4, #8]
 13c:	cmp	r0, #0
 140:	bne	12c <__flatcc_fb_gen_c_verifier+0x12c>
 144:	ldr	r0, [r4, #12]
 148:	mov	r1, r4
 14c:	mov	r2, r5
 150:	bl	0 <__flatcc_fb_scoped_symbol_name>
 154:	ldr	r0, [r8]
 158:	mov	r1, r6
 15c:	mov	r2, r5
 160:	bl	0 <fprintf>
 164:	b	12c <__flatcc_fb_gen_c_verifier+0x12c>
 168:	ldr	r4, [sp, #36]	; 0x24
 16c:	mov	r0, #10
 170:	ldr	r1, [r4, #204]	; 0xcc
 174:	bl	0 <fputc>
 178:	ldr	r0, [r4, #208]	; 0xd0
 17c:	ldr	r6, [r0, #40]	; 0x28
 180:	cmp	r6, #0
 184:	beq	8a4 <__flatcc_fb_gen_c_verifier+0x8a4>
 188:	movw	r9, #0
 18c:	add	r4, sp, #40	; 0x28
 190:	movt	r9, #0
 194:	b	1bc <__flatcc_fb_gen_c_verifier+0x1bc>
 198:	ldr	r3, [r8]
 19c:	movw	r0, #0
 1a0:	mov	r1, #47	; 0x2f
 1a4:	mov	r2, #1
 1a8:	movt	r0, #0
 1ac:	bl	0 <fwrite>
 1b0:	ldr	r6, [r6]
 1b4:	cmp	r6, #0
 1b8:	beq	2f4 <__flatcc_fb_gen_c_verifier+0x2f4>
 1bc:	ldrh	r0, [r6, #8]
 1c0:	cmp	r0, #4
 1c4:	bne	1b0 <__flatcc_fb_gen_c_verifier+0x1b0>
 1c8:	sub	r5, fp, #256	; 0x100
 1cc:	mov	r1, #0
 1d0:	mov	r2, #220	; 0xdc
 1d4:	mov	r0, r5
 1d8:	bl	0 <memset>
 1dc:	mov	r0, r4
 1e0:	mov	r1, #0
 1e4:	mov	r2, #220	; 0xdc
 1e8:	bl	0 <memset>
 1ec:	ldr	r0, [r6, #12]
 1f0:	mov	r1, r6
 1f4:	mov	r2, r5
 1f8:	bl	0 <__flatcc_fb_scoped_symbol_name>
 1fc:	ldr	r0, [r8]
 200:	movw	r1, #0
 204:	mov	r2, r5
 208:	movt	r1, #0
 20c:	bl	0 <fprintf>
 210:	ldr	r7, [r6, #20]
 214:	cmp	r7, #0
 218:	bne	260 <__flatcc_fb_gen_c_verifier+0x260>
 21c:	b	198 <__flatcc_fb_gen_c_verifier+0x198>
 220:	ldr	r3, [r1, #112]	; 0x70
 224:	ldr	r4, [r1, #116]	; 0x74
 228:	ldrh	r1, [r1, #104]	; 0x68
 22c:	ldr	r2, [r7, #48]	; 0x30
 230:	ldr	r0, [r8]
 234:	stm	sp, {r3, r4}
 238:	str	r1, [sp, #8]
 23c:	movw	r1, #0
 240:	add	r4, sp, #40	; 0x28
 244:	str	sl, [sp, #12]
 248:	str	r5, [sp, #16]
 24c:	movt	r1, #0
 250:	bl	0 <fprintf>
 254:	ldr	r7, [r7]
 258:	cmp	r7, #0
 25c:	beq	198 <__flatcc_fb_gen_c_verifier+0x198>
 260:	ldrh	r0, [r7, #24]
 264:	cmp	r0, #0
 268:	beq	254 <__flatcc_fb_gen_c_verifier+0x254>
 26c:	ldr	r1, [r7, #4]
 270:	cmp	r0, #10
 274:	ldm	r1, {r5, sl}
 278:	beq	2cc <__flatcc_fb_gen_c_verifier+0x2cc>
 27c:	cmp	r0, #14
 280:	bne	8f8 <__flatcc_fb_gen_c_verifier+0x8f8>
 284:	ldr	r1, [r7, #16]
 288:	mov	r2, r4
 28c:	ldr	r0, [r1, #12]
 290:	bl	0 <__flatcc_fb_scoped_symbol_name>
 294:	ldr	r1, [r7, #16]
 298:	ldrh	r0, [r1, #8]
 29c:	cmp	r0, #1
 2a0:	beq	220 <__flatcc_fb_gen_c_verifier+0x220>
 2a4:	cmp	r0, #0
 2a8:	bne	940 <__flatcc_fb_gen_c_verifier+0x940>
 2ac:	ldr	r2, [r7, #48]	; 0x30
 2b0:	ldr	r0, [r8]
 2b4:	movw	r1, #0
 2b8:	str	sl, [sp]
 2bc:	str	r5, [sp, #4]
 2c0:	mov	r3, r4
 2c4:	movt	r1, #0
 2c8:	b	2e0 <__flatcc_fb_gen_c_verifier+0x2e0>
 2cc:	ldr	r2, [r7, #48]	; 0x30
 2d0:	ldr	r0, [r8]
 2d4:	mov	r1, r9
 2d8:	mov	r3, sl
 2dc:	str	r5, [sp]
 2e0:	bl	0 <fprintf>
 2e4:	ldr	r7, [r7]
 2e8:	cmp	r7, #0
 2ec:	bne	260 <__flatcc_fb_gen_c_verifier+0x260>
 2f0:	b	198 <__flatcc_fb_gen_c_verifier+0x198>
 2f4:	ldr	r0, [sp, #36]	; 0x24
 2f8:	ldr	r0, [r0, #208]	; 0xd0
 2fc:	ldr	r4, [r0, #40]	; 0x28
 300:	cmp	r4, #0
 304:	beq	8a4 <__flatcc_fb_gen_c_verifier+0x8a4>
 308:	ldr	r6, [sp, #36]	; 0x24
 30c:	movw	r9, #0
 310:	movw	sl, #0
 314:	movw	r5, #0
 318:	movt	r9, #0
 31c:	movt	sl, #0
 320:	movt	r5, #0
 324:	b	334 <__flatcc_fb_gen_c_verifier+0x334>
 328:	ldr	r4, [r4]
 32c:	cmp	r4, #0
 330:	beq	3f8 <__flatcc_fb_gen_c_verifier+0x3f8>
 334:	ldrh	r0, [r4, #8]
 338:	cmp	r0, #1
 33c:	bne	328 <__flatcc_fb_gen_c_verifier+0x328>
 340:	sub	r7, fp, #256	; 0x100
 344:	mov	r1, #0
 348:	mov	r2, #220	; 0xdc
 34c:	mov	r0, r7
 350:	bl	0 <memset>
 354:	ldr	r0, [r4, #12]
 358:	mov	r1, r4
 35c:	mov	r2, r7
 360:	bl	0 <__flatcc_fb_scoped_symbol_name>
 364:	ldrd	r2, [r4, #112]	; 0x70
 368:	ldrh	r1, [r4, #104]	; 0x68
 36c:	ldr	r0, [r6, #204]	; 0xcc
 370:	stm	sp, {r2, r3}
 374:	str	r1, [sp, #8]
 378:	movw	r1, #0
 37c:	mov	r2, r7
 380:	mov	r3, r7
 384:	movt	r1, #0
 388:	bl	0 <fprintf>
 38c:	ldrd	r2, [r4, #112]	; 0x70
 390:	ldrh	r1, [r4, #104]	; 0x68
 394:	ldr	r0, [r6, #204]	; 0xcc
 398:	stm	sp, {r2, r3}
 39c:	str	r1, [sp, #8]
 3a0:	mov	r1, r9
 3a4:	mov	r2, r7
 3a8:	mov	r3, r7
 3ac:	bl	0 <fprintf>
 3b0:	ldrd	r2, [r4, #112]	; 0x70
 3b4:	ldrh	r1, [r4, #104]	; 0x68
 3b8:	ldr	r0, [r6, #204]	; 0xcc
 3bc:	stm	sp, {r2, r3}
 3c0:	str	r1, [sp, #8]
 3c4:	mov	r1, sl
 3c8:	mov	r2, r7
 3cc:	mov	r3, r6
 3d0:	bl	0 <fprintf>
 3d4:	ldrd	r2, [r4, #112]	; 0x70
 3d8:	ldrh	r1, [r4, #104]	; 0x68
 3dc:	ldr	r0, [r6, #204]	; 0xcc
 3e0:	stm	sp, {r2, r3}
 3e4:	str	r1, [sp, #8]
 3e8:	mov	r1, r5
 3ec:	mov	r2, r7
 3f0:	bl	0 <fprintf>
 3f4:	b	328 <__flatcc_fb_gen_c_verifier+0x328>
 3f8:	ldr	r0, [sp, #36]	; 0x24
 3fc:	ldr	r0, [r0, #208]	; 0xd0
 400:	ldr	r7, [r0, #40]	; 0x28
 404:	cmp	r7, #0
 408:	beq	8a4 <__flatcc_fb_gen_c_verifier+0x8a4>
 40c:	movw	r6, #0
 410:	movt	r6, #0
 414:	b	4d0 <__flatcc_fb_gen_c_verifier+0x4d0>
 418:	cmp	r0, #0
 41c:	beq	888 <__flatcc_fb_gen_c_verifier+0x888>
 420:	ldr	r4, [sp, #36]	; 0x24
 424:	movw	r0, #0
 428:	mov	r1, #29
 42c:	mov	r2, #1
 430:	movt	r0, #0
 434:	ldr	r3, [r4, #204]	; 0xcc
 438:	bl	0 <fwrite>
 43c:	ldr	r3, [r4, #204]	; 0xcc
 440:	movw	r0, #0
 444:	mov	r1, #3
 448:	mov	r2, #1
 44c:	movt	r0, #0
 450:	bl	0 <fwrite>
 454:	ldr	r0, [r4, #204]	; 0xcc
 458:	movw	r1, #0
 45c:	sub	r5, fp, #256	; 0x100
 460:	movt	r1, #0
 464:	mov	r2, r5
 468:	mov	r3, r5
 46c:	str	r5, [sp]
 470:	bl	0 <fprintf>
 474:	ldr	r0, [r4, #204]	; 0xcc
 478:	movw	r1, #0
 47c:	mov	r2, r5
 480:	mov	r3, r5
 484:	str	r5, [sp]
 488:	movt	r1, #0
 48c:	bl	0 <fprintf>
 490:	ldr	r0, [r4, #204]	; 0xcc
 494:	movw	r1, #0
 498:	mov	r2, r5
 49c:	mov	r3, r5
 4a0:	movt	r1, #0
 4a4:	bl	0 <fprintf>
 4a8:	ldr	r0, [r4, #204]	; 0xcc
 4ac:	movw	r1, #0
 4b0:	mov	r2, r5
 4b4:	mov	r3, r4
 4b8:	str	r5, [sp]
 4bc:	movt	r1, #0
 4c0:	bl	0 <fprintf>
 4c4:	ldr	r7, [r7]
 4c8:	cmp	r7, #0
 4cc:	beq	8a4 <__flatcc_fb_gen_c_verifier+0x8a4>
 4d0:	ldrh	r0, [r7, #8]
 4d4:	cmp	r0, #0
 4d8:	bne	4c4 <__flatcc_fb_gen_c_verifier+0x4c4>
 4dc:	sub	r4, fp, #256	; 0x100
 4e0:	mov	r1, #0
 4e4:	mov	r2, #220	; 0xdc
 4e8:	mov	r0, r4
 4ec:	bl	0 <memset>
 4f0:	add	r0, sp, #40	; 0x28
 4f4:	mov	r1, #0
 4f8:	mov	r2, #220	; 0xdc
 4fc:	bl	0 <memset>
 500:	ldr	r0, [r7, #12]
 504:	mov	r1, r7
 508:	mov	r2, r4
 50c:	bl	0 <__flatcc_fb_scoped_symbol_name>
 510:	ldr	r0, [r8]
 514:	movw	r1, #0
 518:	mov	r2, r4
 51c:	movt	r1, #0
 520:	bl	0 <fprintf>
 524:	ldr	r5, [r7, #20]
 528:	cmp	r5, #0
 52c:	beq	420 <__flatcc_fb_gen_c_verifier+0x420>
 530:	mov	r0, #1
 534:	b	590 <__flatcc_fb_gen_c_verifier+0x590>
 538:	ldr	r1, [r4, #4]
 53c:	ldr	r4, [r4]
 540:	ldrd	r2, [sl]
 544:	ldr	r0, [r8]
 548:	ldrh	r6, [r5, #74]	; 0x4a
 54c:	str	r4, [sp]
 550:	stmib	sp, {r1, r6}
 554:	movw	r6, #0
 558:	movw	r1, #0
 55c:	movt	r6, #0
 560:	movt	r1, #0
 564:	bl	0 <fprintf>
 568:	ldr	r1, [r5, #4]
 56c:	ldr	r0, [r8]
 570:	ldr	r3, [r1]
 574:	ldr	r2, [r1, #4]
 578:	mov	r1, r6
 57c:	bl	0 <fprintf>
 580:	mov	r0, #0
 584:	ldr	r5, [r5]
 588:	cmp	r5, #0
 58c:	beq	418 <__flatcc_fb_gen_c_verifier+0x418>
 590:	ldrb	r1, [r5, #72]	; 0x48
 594:	tst	r1, #4
 598:	bne	584 <__flatcc_fb_gen_c_verifier+0x584>
 59c:	ldr	r3, [r8]
 5a0:	cmp	r0, #0
 5a4:	beq	5b8 <__flatcc_fb_gen_c_verifier+0x5b8>
 5a8:	movw	r0, #0
 5ac:	mov	r1, #28
 5b0:	movt	r0, #0
 5b4:	b	5c4 <__flatcc_fb_gen_c_verifier+0x5c4>
 5b8:	movw	r0, #0
 5bc:	mov	r1, #30
 5c0:	movt	r0, #0
 5c4:	mov	r2, #1
 5c8:	bl	0 <fwrite>
 5cc:	ldrh	r0, [r5, #72]	; 0x48
 5d0:	ubfx	r9, r0, #8, #1
 5d4:	ldrh	r0, [r5, #24]
 5d8:	sub	r0, r0, #7
 5dc:	cmp	r0, #8
 5e0:	bhi	568 <__flatcc_fb_gen_c_verifier+0x568>
 5e4:	add	r1, pc, #8
 5e8:	add	r4, r5, #88	; 0x58
 5ec:	add	sl, r5, #96	; 0x60
 5f0:	ldr	pc, [r1, r0, lsl #2]
 5f4:	.word	0x00000618
 5f8:	.word	0x00000538
 5fc:	.word	0x00000674
 600:	.word	0x00000730
 604:	.word	0x00000568
 608:	.word	0x00000568
 60c:	.word	0x00000568
 610:	.word	0x00000748
 614:	.word	0x0000068c
 618:	ldr	r1, [r5, #104]	; 0x68
 61c:	cmp	r1, #0
 620:	beq	7a4 <__flatcc_fb_gen_c_verifier+0x7a4>
 624:	ldr	r0, [r1, #12]
 628:	add	r6, sp, #40	; 0x28
 62c:	mov	r2, r6
 630:	bl	0 <__flatcc_fb_scoped_symbol_name>
 634:	ldr	r1, [r5, #104]	; 0x68
 638:	ldrd	r2, [sl]
 63c:	ldr	r0, [r8]
 640:	ldrh	r1, [r1, #8]
 644:	cmp	r1, #0
 648:	beq	864 <__flatcc_fb_gen_c_verifier+0x864>
 64c:	ldr	r1, [r4, #4]
 650:	ldr	r4, [r4]
 654:	ldrh	r6, [r5, #74]	; 0x4a
 658:	str	r9, [sp]
 65c:	str	r1, [sp, #12]
 660:	movw	r1, #0
 664:	str	r4, [sp, #8]
 668:	str	r6, [sp, #16]
 66c:	movt	r1, #0
 670:	b	878 <__flatcc_fb_gen_c_verifier+0x878>
 674:	ldrd	r2, [sl]
 678:	ldr	r0, [r8]
 67c:	movw	r1, #0
 680:	str	r9, [sp]
 684:	movt	r1, #0
 688:	b	564 <__flatcc_fb_gen_c_verifier+0x564>
 68c:	ldr	r1, [r5, #16]
 690:	add	r2, sp, #40	; 0x28
 694:	ldr	r0, [r1, #12]
 698:	bl	0 <__flatcc_fb_scoped_symbol_name>
 69c:	ldr	r0, [r5, #16]
 6a0:	ldrh	r0, [r0, #8]
 6a4:	cmp	r0, #4
 6a8:	bhi	990 <__flatcc_fb_gen_c_verifier+0x990>
 6ac:	add	r1, pc, #0
 6b0:	ldr	pc, [r1, r0, lsl #2]
 6b4:	.word	0x00000804
 6b8:	.word	0x000006c8
 6bc:	.word	0x00000990
 6c0:	.word	0x000006c8
 6c4:	.word	0x00000824
 6c8:	ldm	r4, {r4, r6}
 6cc:	mvn	r0, #0
 6d0:	mov	r1, #0
 6d4:	orrs	r3, r4, r6
 6d8:	mov	r2, r4
 6dc:	movweq	r2, #1
 6e0:	movne	r3, r6
 6e4:	bl	0 <__aeabi_uldivmod>
 6e8:	ldr	lr, [sl]
 6ec:	ldr	ip, [sl, #4]
 6f0:	ldr	r2, [r8]
 6f4:	ldrh	r3, [r5, #74]	; 0x4a
 6f8:	str	r6, [sp, #12]
 6fc:	movw	r6, #0
 700:	str	r1, [sp, #28]
 704:	movw	r1, #0
 708:	str	r0, [sp, #24]
 70c:	str	r4, [sp, #8]
 710:	str	r9, [sp]
 714:	movt	r6, #0
 718:	movt	r1, #0
 71c:	str	r3, [sp, #16]
 720:	mov	r0, r2
 724:	mov	r2, lr
 728:	mov	r3, ip
 72c:	b	564 <__flatcc_fb_gen_c_verifier+0x564>
 730:	ldrd	r2, [sl]
 734:	ldr	r0, [r8]
 738:	movw	r1, #0
 73c:	str	r9, [sp]
 740:	movt	r1, #0
 744:	b	564 <__flatcc_fb_gen_c_verifier+0x564>
 748:	ldr	r1, [r5, #16]
 74c:	add	r2, sp, #40	; 0x28
 750:	ldr	r0, [r1, #12]
 754:	bl	0 <__flatcc_fb_scoped_symbol_name>
 758:	ldr	r0, [r5, #16]
 75c:	ldrh	r0, [r0, #8]
 760:	cmp	r0, #4
 764:	bhi	9d8 <__flatcc_fb_gen_c_verifier+0x9d8>
 768:	add	r1, pc, #0
 76c:	ldr	pc, [r1, r0, lsl #2]
 770:	.word	0x00000784
 774:	.word	0x00000538
 778:	.word	0x000009d8
 77c:	.word	0x00000538
 780:	.word	0x00000844
 784:	ldrd	r2, [sl]
 788:	ldr	r0, [r8]
 78c:	add	r1, sp, #40	; 0x28
 790:	str	r9, [sp]
 794:	str	r1, [sp, #4]
 798:	movw	r1, #0
 79c:	movt	r1, #0
 7a0:	b	564 <__flatcc_fb_gen_c_verifier+0x564>
 7a4:	ldm	r4, {r4, r6}
 7a8:	mvn	r0, #0
 7ac:	mov	r1, #0
 7b0:	orrs	r3, r4, r6
 7b4:	mov	r2, r4
 7b8:	movweq	r2, #1
 7bc:	movne	r3, r6
 7c0:	bl	0 <__aeabi_uldivmod>
 7c4:	ldr	lr, [sl]
 7c8:	ldr	ip, [sl, #4]
 7cc:	ldr	r2, [r8]
 7d0:	ldrh	r3, [r5, #74]	; 0x4a
 7d4:	str	r1, [sp, #28]
 7d8:	movw	r1, #0
 7dc:	str	r0, [sp, #24]
 7e0:	str	r4, [sp, #8]
 7e4:	str	r6, [sp, #12]
 7e8:	str	r9, [sp]
 7ec:	movt	r1, #0
 7f0:	str	r3, [sp, #16]
 7f4:	mov	r0, r2
 7f8:	mov	r2, lr
 7fc:	mov	r3, ip
 800:	b	878 <__flatcc_fb_gen_c_verifier+0x878>
 804:	ldrd	r2, [sl]
 808:	ldr	r0, [r8]
 80c:	add	r1, sp, #40	; 0x28
 810:	str	r9, [sp]
 814:	str	r1, [sp, #4]
 818:	movw	r1, #0
 81c:	movt	r1, #0
 820:	b	564 <__flatcc_fb_gen_c_verifier+0x564>
 824:	ldrd	r2, [sl]
 828:	ldr	r0, [r8]
 82c:	add	r1, sp, #40	; 0x28
 830:	str	r9, [sp]
 834:	str	r1, [sp, #4]
 838:	movw	r1, #0
 83c:	movt	r1, #0
 840:	b	564 <__flatcc_fb_gen_c_verifier+0x564>
 844:	ldrd	r2, [sl]
 848:	ldr	r0, [r8]
 84c:	add	r1, sp, #40	; 0x28
 850:	str	r9, [sp]
 854:	str	r1, [sp, #4]
 858:	movw	r1, #0
 85c:	movt	r1, #0
 860:	b	564 <__flatcc_fb_gen_c_verifier+0x564>
 864:	ldrh	r1, [r5, #74]	; 0x4a
 868:	str	r9, [sp]
 86c:	stmib	sp, {r1, r6}
 870:	movw	r1, #0
 874:	movt	r1, #0
 878:	bl	0 <fprintf>
 87c:	movw	r6, #0
 880:	movt	r6, #0
 884:	b	568 <__flatcc_fb_gen_c_verifier+0x568>
 888:	ldr	r3, [r8]
 88c:	movw	r0, #0
 890:	mov	r1, #15
 894:	mov	r2, #1
 898:	movt	r0, #0
 89c:	bl	0 <fwrite>
 8a0:	b	420 <__flatcc_fb_gen_c_verifier+0x420>
 8a4:	ldr	r0, [sp, #36]	; 0x24
 8a8:	ldr	r0, [r0, #212]	; 0xd4
 8ac:	ldr	r0, [r0, #140]	; 0x8c
 8b0:	cmp	r0, #0
 8b4:	beq	8d0 <__flatcc_fb_gen_c_verifier+0x8d0>
 8b8:	ldr	r3, [r8]
 8bc:	movw	r0, #0
 8c0:	mov	r1, #36	; 0x24
 8c4:	mov	r2, #1
 8c8:	movt	r0, #0
 8cc:	bl	0 <fwrite>
 8d0:	ldr	r1, [sp, #36]	; 0x24
 8d4:	ldr	r0, [r1, #204]	; 0xcc
 8d8:	ldr	r1, [r1, #208]	; 0xd0
 8dc:	ldr	r2, [r1, #164]	; 0xa4
 8e0:	movw	r1, #0
 8e4:	movt	r1, #0
 8e8:	bl	0 <fprintf>
 8ec:	mov	r0, #0
 8f0:	sub	sp, fp, #28
 8f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8f8:	movw	r0, #0
 8fc:	movw	r1, #0
 900:	movw	r4, #0
 904:	mov	r3, #83	; 0x53
 908:	movt	r0, #0
 90c:	movt	r1, #0
 910:	movt	r4, #0
 914:	ldr	r0, [r0]
 918:	str	r1, [sp]
 91c:	movw	r1, #0
 920:	mov	r2, r4
 924:	movt	r1, #0
 928:	bl	0 <fprintf>
 92c:	movw	r0, #0
 930:	movw	r3, #0
 934:	mov	r1, r4
 938:	mov	r2, #83	; 0x53
 93c:	b	984 <__flatcc_fb_gen_c_verifier+0x984>
 940:	movw	r0, #0
 944:	movw	r1, #0
 948:	movw	r4, #0
 94c:	mov	r3, #74	; 0x4a
 950:	movt	r0, #0
 954:	movt	r1, #0
 958:	movt	r4, #0
 95c:	ldr	r0, [r0]
 960:	str	r1, [sp]
 964:	movw	r1, #0
 968:	mov	r2, r4
 96c:	movt	r1, #0
 970:	bl	0 <fprintf>
 974:	movw	r0, #0
 978:	movw	r3, #0
 97c:	mov	r1, r4
 980:	mov	r2, #74	; 0x4a
 984:	movt	r0, #0
 988:	movt	r3, #0
 98c:	bl	0 <__assert_fail>
 990:	movw	r0, #0
 994:	movw	r1, #0
 998:	movw	r4, #0
 99c:	mov	r3, #202	; 0xca
 9a0:	movt	r0, #0
 9a4:	movt	r1, #0
 9a8:	movt	r4, #0
 9ac:	ldr	r0, [r0]
 9b0:	str	r1, [sp]
 9b4:	movw	r1, #0
 9b8:	mov	r2, r4
 9bc:	movt	r1, #0
 9c0:	bl	0 <fprintf>
 9c4:	movw	r0, #0
 9c8:	movw	r3, #0
 9cc:	mov	r1, r4
 9d0:	mov	r2, #202	; 0xca
 9d4:	b	a1c <__flatcc_fb_gen_c_verifier+0xa1c>
 9d8:	movw	r0, #0
 9dc:	movw	r1, #0
 9e0:	movw	r4, #0
 9e4:	mov	r3, #178	; 0xb2
 9e8:	movt	r0, #0
 9ec:	movt	r1, #0
 9f0:	movt	r4, #0
 9f4:	ldr	r0, [r0]
 9f8:	str	r1, [sp]
 9fc:	movw	r1, #0
 a00:	mov	r2, r4
 a04:	movt	r1, #0
 a08:	bl	0 <fprintf>
 a0c:	movw	r0, #0
 a10:	movw	r3, #0
 a14:	mov	r1, r4
 a18:	mov	r2, #178	; 0xb2
 a1c:	movt	r0, #0
 a20:	movt	r3, #0
 a24:	bl	0 <__assert_fail>
