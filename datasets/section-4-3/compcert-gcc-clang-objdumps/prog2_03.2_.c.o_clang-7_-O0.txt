
../compcert-repos/prog2/CMakeFiles/2.3.2.dir/Aula02_Alocacao_dinamica_de_memoria_e_vetores/03.2_.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <imprime>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #24
   c:	str	r0, [fp, #-4]
  10:	movw	r0, #0
  14:	str	r0, [fp, #-8]
  18:	ldr	r0, [fp, #-8]
  1c:	cmp	r0, #5
  20:	bge	70 <imprime+0x70>
  24:	ldr	r0, [fp, #-8]
  28:	add	r1, r0, #1
  2c:	ldr	r0, [fp, #-4]
  30:	ldr	r2, [fp, #-8]
  34:	str	r1, [sp, #12]
  38:	mov	r1, r2
  3c:	bl	0 <vetor_elemento>
  40:	movw	r1, #0
  44:	movt	r1, #0
  48:	str	r0, [sp, #8]
  4c:	mov	r0, r1
  50:	ldr	r1, [sp, #12]
  54:	ldr	r2, [sp, #8]
  58:	bl	0 <printf>
  5c:	str	r0, [sp, #4]
  60:	ldr	r0, [fp, #-8]
  64:	add	r0, r0, #1
  68:	str	r0, [fp, #-8]
  6c:	b	18 <imprime+0x18>
  70:	mov	sp, fp
  74:	pop	{fp, pc}

00000078 <main>:
  78:	push	{fp, lr}
  7c:	mov	fp, sp
  80:	sub	sp, sp, #160	; 0xa0
  84:	movw	r0, #0
  88:	movt	r0, #0
  8c:	movw	r1, #0
  90:	str	r1, [fp, #-4]
  94:	blx	r0
  98:	str	r0, [sp, #48]	; 0x30
  9c:	movw	r0, #0
  a0:	str	r0, [fp, #-8]
  a4:	ldr	r0, [fp, #-8]
  a8:	cmp	r0, #5
  ac:	bge	12c <main+0xb4>
  b0:	ldr	r0, [fp, #-8]
  b4:	add	r1, r0, #1
  b8:	movw	r0, #0
  bc:	movt	r0, #0
  c0:	bl	0 <printf>
  c4:	add	r1, sp, #52	; 0x34
  c8:	movw	lr, #0
  cc:	movt	lr, #0
  d0:	ldr	r2, [lr]
  d4:	str	r0, [sp, #44]	; 0x2c
  d8:	mov	r0, r1
  dc:	movw	r1, #100	; 0x64
  e0:	bl	0 <fgets>
  e4:	add	r1, sp, #52	; 0x34
  e8:	str	r0, [sp, #40]	; 0x28
  ec:	mov	r0, r1
  f0:	str	r1, [sp, #36]	; 0x24
  f4:	bl	0 <strlen>
  f8:	sub	r0, r0, #1
  fc:	ldr	r1, [sp, #36]	; 0x24
 100:	add	r0, r1, r0
 104:	movw	r2, #0
 108:	strb	r2, [r0]
 10c:	ldr	r0, [sp, #48]	; 0x30
 110:	ldr	r2, [fp, #-8]
 114:	bl	0 <vetor_insere>
 118:	str	r0, [sp, #32]
 11c:	ldr	r0, [fp, #-8]
 120:	add	r0, r0, #1
 124:	str	r0, [fp, #-8]
 128:	b	a4 <main+0x2c>
 12c:	ldr	r0, [sp, #48]	; 0x30
 130:	bl	0 <imprime>
 134:	movw	r0, #0
 138:	movt	r0, #0
 13c:	bl	0 <printf>
 140:	add	r1, sp, #52	; 0x34
 144:	movw	lr, #0
 148:	movt	lr, #0
 14c:	str	r0, [sp, #28]
 150:	mov	r0, lr
 154:	bl	0 <__isoc99_scanf>
 158:	add	r1, sp, #52	; 0x34
 15c:	ldr	lr, [sp, #48]	; 0x30
 160:	ldr	r2, [sp, #48]	; 0x30
 164:	str	r0, [sp, #24]
 168:	mov	r0, r2
 16c:	str	lr, [sp, #20]
 170:	bl	0 <vetor_pesquisa>
 174:	ldr	r1, [sp, #20]
 178:	str	r0, [sp, #16]
 17c:	mov	r0, r1
 180:	ldr	r1, [sp, #16]
 184:	bl	0 <vetor_remove>
 188:	cmp	r0, #0
 18c:	beq	1a4 <main+0x12c>
 190:	movw	r0, #0
 194:	movt	r0, #0
 198:	bl	0 <printf>
 19c:	str	r0, [sp, #12]
 1a0:	b	1ac <main+0x134>
 1a4:	ldr	r0, [sp, #48]	; 0x30
 1a8:	bl	0 <imprime>
 1ac:	ldr	r0, [sp, #48]	; 0x30
 1b0:	bl	0 <vetor_ordena>
 1b4:	cmp	r0, #0
 1b8:	beq	1cc <main+0x154>
 1bc:	movw	r0, #0
 1c0:	movt	r0, #0
 1c4:	bl	0 <printf>
 1c8:	str	r0, [sp, #8]
 1cc:	movw	r0, #0
 1d0:	movt	r0, #0
 1d4:	bl	0 <printf>
 1d8:	ldr	lr, [sp, #48]	; 0x30
 1dc:	str	r0, [sp, #4]
 1e0:	mov	r0, lr
 1e4:	bl	0 <imprime>
 1e8:	ldr	r0, [sp, #48]	; 0x30
 1ec:	bl	0 <vetor_apaga>
 1f0:	movw	r0, #0
 1f4:	mov	sp, fp
 1f8:	pop	{fp, pc}
