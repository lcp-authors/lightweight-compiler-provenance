
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-definition.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ff_printf>:
       0:	push	{r0, r1, r2, r3}
       4:	ldr	r1, [pc, #44]	; 38 <ff_printf+0x38>
       8:	push	{lr}		; (str lr, [sp, #-4]!)
       c:	sub	sp, sp, #12
      10:	add	r3, sp, #20
      14:	mov	r2, r3
      18:	ldr	r0, [r1]
      1c:	ldr	r1, [sp, #16]
      20:	str	r3, [sp, #4]
      24:	bl	0 <vfprintf>
      28:	add	sp, sp, #12
      2c:	pop	{lr}		; (ldr lr, [sp], #4)
      30:	add	sp, sp, #16
      34:	bx	lr
      38:	.word	0x00000000

0000003c <indent>:
      3c:	push	{r4, r5, r6, r7, r8, lr}
      40:	ldr	r5, [pc, #80]	; 98 <indent+0x5c>
      44:	ldr	r4, [r5, #4]
      48:	cmp	r4, #0
      4c:	blt	84 <indent+0x48>
      50:	beq	80 <indent+0x44>
      54:	ldr	r8, [pc, #64]	; 9c <indent+0x60>
      58:	mov	r7, #2
      5c:	mov	r6, #1
      60:	ldr	r3, [r5]
      64:	mov	r2, r7
      68:	mov	r1, r6
      6c:	mov	r0, r8
      70:	bl	0 <fwrite>
      74:	subs	r4, r4, #1
      78:	bne	60 <indent+0x24>
      7c:	pop	{r4, r5, r6, r7, r8, pc}
      80:	pop	{r4, r5, r6, r7, r8, pc}
      84:	ldr	r3, [pc, #20]	; a0 <indent+0x64>
      88:	mov	r2, #68	; 0x44
      8c:	ldr	r1, [pc, #16]	; a4 <indent+0x68>
      90:	ldr	r0, [pc, #16]	; a8 <indent+0x6c>
      94:	bl	0 <__assert_fail>
      98:	.word	0x00000000
      9c:	.word	0x00000064
	...
      a8:	.word	0x00000058

000000ac <fic_printf>:
      ac:	push	{r1, r2, r3}
      b0:	ldr	r3, [r0]
      b4:	push	{r4, r5, lr}
      b8:	cmp	r3, #0
      bc:	sub	sp, sp, #8
      c0:	beq	f4 <fic_printf+0x48>
      c4:	ldr	r4, [pc, #80]	; 11c <fic_printf+0x70>
      c8:	bl	3c <indent>
      cc:	add	r3, sp, #24
      d0:	ldr	r0, [r4]
      d4:	mov	r2, r3
      d8:	ldr	r1, [sp, #20]
      dc:	str	r3, [sp, #4]
      e0:	bl	0 <vfprintf>
      e4:	add	sp, sp, #8
      e8:	pop	{r4, r5, lr}
      ec:	add	sp, sp, #12
      f0:	bx	lr
      f4:	ldr	r4, [pc, #32]	; 11c <fic_printf+0x70>
      f8:	mov	r5, r0
      fc:	ldr	r0, [pc, #28]	; 120 <fic_printf+0x74>
     100:	bl	0 <ff_printf>
     104:	ldr	r3, [r4, #4]
     108:	mov	r2, #1
     10c:	add	r3, r3, r2
     110:	str	r3, [r4, #4]
     114:	str	r2, [r5]
     118:	b	c8 <fic_printf+0x1c>
     11c:	.word	0x00000000
     120:	.word	0x00000068

00000124 <fi_printf>:
     124:	push	{r0, r1, r2, r3}
     128:	push	{lr}		; (str lr, [sp, #-4]!)
     12c:	sub	sp, sp, #12
     130:	bl	3c <indent>
     134:	ldr	r2, [pc, #36]	; 160 <fi_printf+0x3c>
     138:	add	r3, sp, #20
     13c:	ldr	r1, [sp, #16]
     140:	ldr	r0, [r2]
     144:	mov	r2, r3
     148:	str	r3, [sp, #4]
     14c:	bl	0 <vfprintf>
     150:	add	sp, sp, #12
     154:	pop	{lr}		; (ldr lr, [sp], #4)
     158:	add	sp, sp, #16
     15c:	bx	lr
     160:	.word	0x00000000

00000164 <generate_escaped_string.part.2>:
     164:	cmp	r1, #0
     168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     16c:	mov	r4, r0
     170:	sub	sp, sp, #12
     174:	blt	3e8 <generate_escaped_string.part.2+0x284>
     178:	cmp	r1, #0
     17c:	ble	318 <generate_escaped_string.part.2+0x1b4>
     180:	ldr	fp, [pc, #620]	; 3f4 <generate_escaped_string.part.2+0x290>
     184:	ldr	sl, [pc, #620]	; 3f8 <generate_escaped_string.part.2+0x294>
     188:	ldr	r9, [pc, #620]	; 3fc <generate_escaped_string.part.2+0x298>
     18c:	ldr	r8, [pc, #620]	; 400 <generate_escaped_string.part.2+0x29c>
     190:	ldr	r7, [pc, #620]	; 404 <generate_escaped_string.part.2+0x2a0>
     194:	ldr	r6, [pc, #620]	; 408 <generate_escaped_string.part.2+0x2a4>
     198:	add	r5, r4, r1
     19c:	ldrb	r1, [r4], #1
     1a0:	sub	r3, r1, #7
     1a4:	cmp	r3, #85	; 0x55
     1a8:	ldrls	pc, [pc, r3, lsl #2]
     1ac:	b	3bc <generate_escaped_string.part.2+0x258>
     1b0:	.word	0x000003b0
     1b4:	.word	0x000003a4
     1b8:	.word	0x00000398
     1bc:	.word	0x0000038c
     1c0:	.word	0x00000380
     1c4:	.word	0x00000374
     1c8:	.word	0x00000368
     1cc:	.word	0x000003bc
     1d0:	.word	0x000003bc
     1d4:	.word	0x000003bc
     1d8:	.word	0x000003bc
     1dc:	.word	0x000003bc
     1e0:	.word	0x000003bc
     1e4:	.word	0x000003bc
     1e8:	.word	0x000003bc
     1ec:	.word	0x000003bc
     1f0:	.word	0x000003bc
     1f4:	.word	0x000003bc
     1f8:	.word	0x000003bc
     1fc:	.word	0x000003bc
     200:	.word	0x0000035c
     204:	.word	0x000003bc
     208:	.word	0x000003bc
     20c:	.word	0x000003bc
     210:	.word	0x000003bc
     214:	.word	0x00000350
     218:	.word	0x000003bc
     21c:	.word	0x00000344
     220:	.word	0x000003bc
     224:	.word	0x000003bc
     228:	.word	0x000003bc
     22c:	.word	0x00000338
     230:	.word	0x000003bc
     234:	.word	0x000003bc
     238:	.word	0x000003bc
     23c:	.word	0x000003bc
     240:	.word	0x000003bc
     244:	.word	0x000003bc
     248:	.word	0x000003bc
     24c:	.word	0x000003bc
     250:	.word	0x000003bc
     254:	.word	0x000003bc
     258:	.word	0x000003bc
     25c:	.word	0x000003bc
     260:	.word	0x000003bc
     264:	.word	0x000003bc
     268:	.word	0x000003bc
     26c:	.word	0x000003bc
     270:	.word	0x000003bc
     274:	.word	0x000003bc
     278:	.word	0x000003bc
     27c:	.word	0x000003bc
     280:	.word	0x000003bc
     284:	.word	0x0000032c
     288:	.word	0x000003bc
     28c:	.word	0x00000320
     290:	.word	0x000003bc
     294:	.word	0x000003bc
     298:	.word	0x000003bc
     29c:	.word	0x000003bc
     2a0:	.word	0x000003bc
     2a4:	.word	0x000003bc
     2a8:	.word	0x000003bc
     2ac:	.word	0x000003bc
     2b0:	.word	0x000003bc
     2b4:	.word	0x000003bc
     2b8:	.word	0x000003bc
     2bc:	.word	0x000003bc
     2c0:	.word	0x000003bc
     2c4:	.word	0x000003bc
     2c8:	.word	0x000003bc
     2cc:	.word	0x000003bc
     2d0:	.word	0x000003bc
     2d4:	.word	0x000003bc
     2d8:	.word	0x000003bc
     2dc:	.word	0x000003bc
     2e0:	.word	0x000003bc
     2e4:	.word	0x000003bc
     2e8:	.word	0x000003bc
     2ec:	.word	0x000003bc
     2f0:	.word	0x000003bc
     2f4:	.word	0x000003bc
     2f8:	.word	0x000003bc
     2fc:	.word	0x000003bc
     300:	.word	0x000003bc
     304:	.word	0x00000308
     308:	ldr	r0, [pc, #252]	; 40c <generate_escaped_string.part.2+0x2a8>
     30c:	bl	0 <ff_printf>
     310:	cmp	r5, r4
     314:	bne	19c <generate_escaped_string.part.2+0x38>
     318:	add	sp, sp, #12
     31c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     320:	mov	r0, r7
     324:	bl	0 <ff_printf>
     328:	b	310 <generate_escaped_string.part.2+0x1ac>
     32c:	mov	r0, r6
     330:	bl	0 <ff_printf>
     334:	b	310 <generate_escaped_string.part.2+0x1ac>
     338:	mov	r0, r8
     33c:	bl	0 <ff_printf>
     340:	b	310 <generate_escaped_string.part.2+0x1ac>
     344:	ldr	r0, [pc, #196]	; 410 <generate_escaped_string.part.2+0x2ac>
     348:	bl	0 <ff_printf>
     34c:	b	310 <generate_escaped_string.part.2+0x1ac>
     350:	mov	r0, r9
     354:	bl	0 <ff_printf>
     358:	b	310 <generate_escaped_string.part.2+0x1ac>
     35c:	ldr	r0, [pc, #176]	; 414 <generate_escaped_string.part.2+0x2b0>
     360:	bl	0 <ff_printf>
     364:	b	310 <generate_escaped_string.part.2+0x1ac>
     368:	ldr	r0, [pc, #168]	; 418 <generate_escaped_string.part.2+0x2b4>
     36c:	bl	0 <ff_printf>
     370:	b	310 <generate_escaped_string.part.2+0x1ac>
     374:	ldr	r0, [pc, #160]	; 41c <generate_escaped_string.part.2+0x2b8>
     378:	bl	0 <ff_printf>
     37c:	b	310 <generate_escaped_string.part.2+0x1ac>
     380:	ldr	r0, [pc, #152]	; 420 <generate_escaped_string.part.2+0x2bc>
     384:	bl	0 <ff_printf>
     388:	b	310 <generate_escaped_string.part.2+0x1ac>
     38c:	ldr	r0, [pc, #144]	; 424 <generate_escaped_string.part.2+0x2c0>
     390:	bl	0 <ff_printf>
     394:	b	310 <generate_escaped_string.part.2+0x1ac>
     398:	ldr	r0, [pc, #136]	; 428 <generate_escaped_string.part.2+0x2c4>
     39c:	bl	0 <ff_printf>
     3a0:	b	310 <generate_escaped_string.part.2+0x1ac>
     3a4:	ldr	r0, [pc, #128]	; 42c <generate_escaped_string.part.2+0x2c8>
     3a8:	bl	0 <ff_printf>
     3ac:	b	310 <generate_escaped_string.part.2+0x1ac>
     3b0:	ldr	r0, [pc, #120]	; 430 <generate_escaped_string.part.2+0x2cc>
     3b4:	bl	0 <ff_printf>
     3b8:	b	310 <generate_escaped_string.part.2+0x1ac>
     3bc:	str	r1, [sp, #4]
     3c0:	bl	0 <__ctype_b_loc>
     3c4:	ldr	r1, [sp, #4]
     3c8:	lsl	r3, r1, #1
     3cc:	ldr	r2, [r0]
     3d0:	ldrh	r3, [r2, r3]
     3d4:	tst	r3, #16384	; 0x4000
     3d8:	moveq	r0, sl
     3dc:	movne	r0, fp
     3e0:	bl	0 <ff_printf>
     3e4:	b	310 <generate_escaped_string.part.2+0x1ac>
     3e8:	bl	0 <strlen>
     3ec:	mov	r1, r0
     3f0:	b	178 <generate_escaped_string.part.2+0x14>
     3f4:	.word	0x000000bc
     3f8:	.word	0x000000b4
     3fc:	.word	0x000000ac
     400:	.word	0x000000a4
     404:	.word	0x0000009c
     408:	.word	0x00000094
     40c:	.word	0x0000008c
     410:	.word	0x00000090
     414:	.word	0x0000006c
     418:	.word	0x00000080
     41c:	.word	0x00000078
     420:	.word	0x00000088
     424:	.word	0x0000007c
     428:	.word	0x00000084
     42c:	.word	0x00000074
     430:	.word	0x00000070

00000434 <generate_xml_string.part.1.constprop.3>:
     434:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     438:	mov	r4, r0
     43c:	bl	0 <strlen>
     440:	cmp	r0, #0
     444:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
     448:	ldr	r9, [pc, #108]	; 4bc <generate_xml_string.part.1.constprop.3+0x88>
     44c:	ldr	r8, [pc, #108]	; 4c0 <generate_xml_string.part.1.constprop.3+0x8c>
     450:	ldr	r6, [pc, #108]	; 4c4 <generate_xml_string.part.1.constprop.3+0x90>
     454:	ldr	r7, [pc, #108]	; 4c8 <generate_xml_string.part.1.constprop.3+0x94>
     458:	add	r5, r4, r0
     45c:	b	484 <generate_xml_string.part.1.constprop.3+0x50>
     460:	cmp	r3, #62	; 0x3e
     464:	mov	r1, r3
     468:	mov	r0, r6
     46c:	beq	4b0 <generate_xml_string.part.1.constprop.3+0x7c>
     470:	cmp	r3, #38	; 0x26
     474:	beq	4a4 <generate_xml_string.part.1.constprop.3+0x70>
     478:	bl	0 <ff_printf>
     47c:	cmp	r4, r5
     480:	beq	4a0 <generate_xml_string.part.1.constprop.3+0x6c>
     484:	ldrb	r3, [r4], #1
     488:	cmp	r3, #60	; 0x3c
     48c:	bne	460 <generate_xml_string.part.1.constprop.3+0x2c>
     490:	mov	r0, r9
     494:	bl	0 <ff_printf>
     498:	cmp	r4, r5
     49c:	bne	484 <generate_xml_string.part.1.constprop.3+0x50>
     4a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
     4a4:	mov	r0, r7
     4a8:	bl	0 <ff_printf>
     4ac:	b	47c <generate_xml_string.part.1.constprop.3+0x48>
     4b0:	mov	r0, r8
     4b4:	bl	0 <ff_printf>
     4b8:	b	47c <generate_xml_string.part.1.constprop.3+0x48>
     4bc:	.word	0x00000094
     4c0:	.word	0x0000009c
     4c4:	.word	0x000000bc
     4c8:	.word	0x000000a4

000004cc <generate_type>:
     4cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     4d0:	sub	sp, sp, #76	; 0x4c
     4d4:	mov	r3, #0
     4d8:	mov	r7, r0
     4dc:	mov	r4, r1
     4e0:	add	r1, sp, #16
     4e4:	str	r3, [sp, #20]
     4e8:	str	r3, [sp, #36]	; 0x24
     4ec:	str	r3, [sp, #40]	; 0x28
     4f0:	bl	0 <coda_type_get_class>
     4f4:	add	r1, sp, #24
     4f8:	mov	r0, r7
     4fc:	bl	0 <coda_type_get_format>
     500:	add	r1, sp, #28
     504:	mov	r0, r7
     508:	bl	0 <coda_type_get_description>
     50c:	mov	r0, r7
     510:	add	r1, sp, #32
     514:	bl	0 <coda_type_get_attributes>
     518:	ldr	r3, [sp, #16]
     51c:	cmp	r3, #6
     520:	ldrls	pc, [pc, r3, lsl #2]
     524:	b	da4 <generate_type+0x8d8>
     528:	.word	0x0000077c
     52c:	.word	0x00000544
     530:	.word	0x00000708
     534:	.word	0x00000714
     538:	.word	0x00000720
     53c:	.word	0x00000744
     540:	.word	0x00000750
     544:	ldr	r3, [pc, #2644]	; fa0 <generate_type+0xad4>
     548:	str	r3, [sp, #12]
     54c:	ldr	r1, [sp, #12]
     550:	ldr	r0, [pc, #2636]	; fa4 <generate_type+0xad8>
     554:	bl	124 <fi_printf>
     558:	ldr	r0, [sp, #24]
     55c:	cmp	r0, r4
     560:	beq	574 <generate_type+0xa8>
     564:	bl	0 <coda_type_get_format_name>
     568:	mov	r1, r0
     56c:	ldr	r0, [pc, #2612]	; fa8 <generate_type+0xadc>
     570:	bl	0 <ff_printf>
     574:	ldr	r3, [sp, #16]
     578:	cmp	r3, #6
     57c:	beq	d20 <generate_type+0x854>
     580:	ldr	r3, [sp, #28]
     584:	cmp	r3, #0
     588:	beq	5b0 <generate_type+0xe4>
     58c:	ldr	r1, [pc, #2584]	; fac <generate_type+0xae0>
     590:	add	r0, sp, #36	; 0x24
     594:	bl	ac <fic_printf>
     598:	ldr	r0, [sp, #28]
     59c:	cmp	r0, #0
     5a0:	beq	5a8 <generate_type+0xdc>
     5a4:	bl	434 <generate_xml_string.part.1.constprop.3>
     5a8:	ldr	r0, [pc, #2560]	; fb0 <generate_type+0xae4>
     5ac:	bl	0 <ff_printf>
     5b0:	ldr	r3, [sp, #24]
     5b4:	cmp	r3, #1
     5b8:	ldr	r3, [sp, #16]
     5bc:	bls	d4c <generate_type+0x880>
     5c0:	cmp	r3, #0
     5c4:	bne	60c <generate_type+0x140>
     5c8:	ldr	r3, [r7, #32]
     5cc:	cmp	r3, #0
     5d0:	beq	b48 <generate_type+0x67c>
     5d4:	ldrd	r2, [r7, #24]
     5d8:	mvn	r1, #0
     5dc:	mvn	r0, #7
     5e0:	cmp	r3, r1
     5e4:	cmpeq	r2, r0
     5e8:	beq	f8c <generate_type+0xac0>
     5ec:	ldr	r1, [pc, #2496]	; fb4 <generate_type+0xae8>
     5f0:	add	r0, sp, #36	; 0x24
     5f4:	bl	ac <fic_printf>
     5f8:	ldr	r1, [pc, #2488]	; fb8 <generate_type+0xaec>
     5fc:	ldr	r0, [r7, #32]
     600:	bl	0 <coda_expression_print_xml>
     604:	ldr	r0, [pc, #2480]	; fbc <generate_type+0xaf0>
     608:	bl	0 <ff_printf>
     60c:	ldr	r3, [r7, #36]	; 0x24
     610:	cmp	r3, #0
     614:	beq	7c8 <generate_type+0x2fc>
     618:	ldr	r2, [r3, #48]	; 0x30
     61c:	cmp	r2, #0
     620:	ble	7c8 <generate_type+0x2fc>
     624:	ldr	r5, [pc, #2452]	; fc0 <generate_type+0xaf4>
     628:	ldr	sl, [pc, #2452]	; fc4 <generate_type+0xaf8>
     62c:	ldr	r9, [pc, #2452]	; fc8 <generate_type+0xafc>
     630:	ldr	fp, [pc, #2452]	; fcc <generate_type+0xb00>
     634:	mov	r6, #0
     638:	add	r8, sp, #36	; 0x24
     63c:	b	69c <generate_type+0x1d0>
     640:	ldrb	r3, [r4, #16]
     644:	cmp	r3, #0
     648:	beq	674 <generate_type+0x1a8>
     64c:	ldr	r3, [r4, #20]
     650:	cmp	r3, #0
     654:	beq	cc8 <generate_type+0x7fc>
     658:	ldr	r0, [pc, #2416]	; fd0 <generate_type+0xb04>
     65c:	bl	124 <fi_printf>
     660:	ldr	r0, [r4, #20]
     664:	ldr	r1, [pc, #2380]	; fb8 <generate_type+0xaec>
     668:	bl	0 <coda_expression_print_xml>
     66c:	ldr	r0, [pc, #2400]	; fd4 <generate_type+0xb08>
     670:	bl	0 <ff_printf>
     674:	ldr	r3, [r5, #4]
     678:	ldr	r0, [pc, #2392]	; fd8 <generate_type+0xb0c>
     67c:	sub	r3, r3, #1
     680:	str	r3, [r5, #4]
     684:	bl	124 <fi_printf>
     688:	ldr	r3, [r7, #36]	; 0x24
     68c:	add	r6, r6, #1
     690:	ldr	r2, [r3, #48]	; 0x30
     694:	cmp	r2, r6
     698:	ble	7c8 <generate_type+0x2fc>
     69c:	ldr	r3, [r3, #52]	; 0x34
     6a0:	mov	r1, sl
     6a4:	mov	r0, r8
     6a8:	ldr	r4, [r3, r6, lsl #2]
     6ac:	ldr	r2, [r4]
     6b0:	bl	ac <fic_printf>
     6b4:	ldr	r0, [r4, #4]
     6b8:	cmp	r0, #0
     6bc:	beq	6d0 <generate_type+0x204>
     6c0:	ldr	r1, [r4]
     6c4:	bl	0 <strcmp>
     6c8:	cmp	r0, #0
     6cc:	bne	7a4 <generate_type+0x2d8>
     6d0:	mov	r0, r9
     6d4:	bl	0 <ff_printf>
     6d8:	ldr	r3, [r5, #4]
     6dc:	ldr	r1, [sp, #24]
     6e0:	add	r3, r3, #1
     6e4:	ldr	r0, [r4, #8]
     6e8:	str	r3, [r5, #4]
     6ec:	bl	4cc <generate_type>
     6f0:	ldr	r3, [r4, #12]
     6f4:	cmp	r3, #0
     6f8:	beq	640 <generate_type+0x174>
     6fc:	mov	r0, fp
     700:	bl	124 <fi_printf>
     704:	b	640 <generate_type+0x174>
     708:	ldr	r3, [pc, #2252]	; fdc <generate_type+0xb10>
     70c:	str	r3, [sp, #12]
     710:	b	54c <generate_type+0x80>
     714:	ldr	r3, [pc, #2244]	; fe0 <generate_type+0xb14>
     718:	str	r3, [sp, #12]
     71c:	b	54c <generate_type+0x80>
     720:	ldr	r3, [r7, #44]	; 0x2c
     724:	cmp	r3, #4
     728:	ldrls	pc, [pc, r3, lsl #2]
     72c:	b	da4 <generate_type+0x8d8>
     730:	.word	0x00000e2c
     734:	.word	0x00000e38
     738:	.word	0x00000e5c
     73c:	.word	0x00000e50
     740:	.word	0x00000e44
     744:	ldr	r3, [pc, #2200]	; fe4 <generate_type+0xb18>
     748:	str	r3, [sp, #12]
     74c:	b	54c <generate_type+0x80>
     750:	add	r1, sp, #20
     754:	mov	r0, r7
     758:	bl	0 <coda_type_get_special_type>
     75c:	ldr	r3, [sp, #20]
     760:	cmp	r3, #3
     764:	ldrls	pc, [pc, r3, lsl #2]
     768:	b	da4 <generate_type+0x8d8>
     76c:	.word	0x00000e18
     770:	.word	0x00000df4
     774:	.word	0x00000e00
     778:	.word	0x00000e0c
     77c:	add	r1, sp, #40	; 0x28
     780:	mov	r0, r7
     784:	bl	0 <coda_type_get_record_union_status>
     788:	ldr	r1, [sp, #40]	; 0x28
     78c:	ldr	r3, [pc, #2132]	; fe8 <generate_type+0xb1c>
     790:	ldr	r2, [pc, #2132]	; fec <generate_type+0xb20>
     794:	cmp	r1, #0
     798:	movne	r2, r3
     79c:	str	r2, [sp, #12]
     7a0:	b	54c <generate_type+0x80>
     7a4:	ldr	r0, [pc, #2116]	; ff0 <generate_type+0xb24>
     7a8:	bl	0 <ff_printf>
     7ac:	ldr	r0, [r4, #4]
     7b0:	cmp	r0, #0
     7b4:	beq	7bc <generate_type+0x2f0>
     7b8:	bl	434 <generate_xml_string.part.1.constprop.3>
     7bc:	ldr	r0, [pc, #2096]	; ff4 <generate_type+0xb28>
     7c0:	bl	0 <ff_printf>
     7c4:	b	6d0 <generate_type+0x204>
     7c8:	ldr	r3, [sp, #16]
     7cc:	cmp	r3, #6
     7d0:	ldrls	pc, [pc, r3, lsl #2]
     7d4:	b	818 <generate_type+0x34c>
     7d8:	.word	0x00000b54
     7dc:	.word	0x00000834
     7e0:	.word	0x000009a4
     7e4:	.word	0x000009a4
     7e8:	.word	0x0000091c
     7ec:	.word	0x00000974
     7f0:	.word	0x000007f4
     7f4:	ldr	r3, [sp, #20]
     7f8:	cmp	r3, #1
     7fc:	beq	eb8 <generate_type+0x9ec>
     800:	ldr	r3, [sp, #36]	; 0x24
     804:	cmp	r3, #0
     808:	beq	e94 <generate_type+0x9c8>
     80c:	ldr	r0, [r7, #44]	; 0x2c
     810:	ldr	r1, [sp, #24]
     814:	bl	4cc <generate_type>
     818:	ldr	r3, [sp, #36]	; 0x24
     81c:	cmp	r3, #0
     820:	bne	8f8 <generate_type+0x42c>
     824:	ldr	r0, [pc, #1996]	; ff8 <generate_type+0xb2c>
     828:	bl	0 <ff_printf>
     82c:	add	sp, sp, #76	; 0x4c
     830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     834:	ldr	r3, [r7, #48]	; 0x30
     838:	cmp	r3, #0
     83c:	ble	8d4 <generate_type+0x408>
     840:	ldr	sl, [pc, #1972]	; ffc <generate_type+0xb30>
     844:	ldr	r9, [pc, #1900]	; fb8 <generate_type+0xaec>
     848:	ldr	r6, [pc, #1968]	; 1000 <generate_type+0xb34>
     84c:	ldr	r5, [pc, #1968]	; 1004 <generate_type+0xb38>
     850:	add	fp, r7, #52	; 0x34
     854:	mov	r4, #0
     858:	add	r8, sp, #36	; 0x24
     85c:	b	88c <generate_type+0x3c0>
     860:	asr	r1, r0, #31
     864:	add	r2, sp, #48	; 0x30
     868:	bl	0 <coda_str64>
     86c:	add	r2, sp, #48	; 0x30
     870:	mov	r1, r5
     874:	mov	r0, r8
     878:	bl	ac <fic_printf>
     87c:	ldr	r3, [r7, #48]	; 0x30
     880:	add	r4, r4, #1
     884:	cmp	r3, r4
     888:	ble	8d4 <generate_type+0x408>
     88c:	ldr	r0, [fp], #4
     890:	cmp	r0, #0
     894:	bge	860 <generate_type+0x394>
     898:	ldr	r3, [fp, #28]
     89c:	cmp	r3, #0
     8a0:	beq	dbc <generate_type+0x8f0>
     8a4:	mov	r1, sl
     8a8:	mov	r0, r8
     8ac:	bl	ac <fic_printf>
     8b0:	mov	r1, r9
     8b4:	ldr	r0, [fp, #28]
     8b8:	bl	0 <coda_expression_print_xml>
     8bc:	mov	r0, r6
     8c0:	bl	0 <ff_printf>
     8c4:	ldr	r3, [r7, #48]	; 0x30
     8c8:	add	r4, r4, #1
     8cc:	cmp	r3, r4
     8d0:	bgt	88c <generate_type+0x3c0>
     8d4:	ldr	r3, [sp, #36]	; 0x24
     8d8:	cmp	r3, #0
     8dc:	beq	e70 <generate_type+0x9a4>
     8e0:	ldr	r0, [r7, #40]	; 0x28
     8e4:	ldr	r1, [sp, #24]
     8e8:	bl	4cc <generate_type>
     8ec:	ldr	r3, [sp, #36]	; 0x24
     8f0:	cmp	r3, #0
     8f4:	beq	824 <generate_type+0x358>
     8f8:	ldr	r2, [pc, #1728]	; fc0 <generate_type+0xaf4>
     8fc:	ldr	r1, [sp, #12]
     900:	ldr	r0, [pc, #1792]	; 1008 <generate_type+0xb3c>
     904:	ldr	r3, [r2, #4]
     908:	sub	r3, r3, #1
     90c:	str	r3, [r2, #4]
     910:	bl	124 <fi_printf>
     914:	add	sp, sp, #76	; 0x4c
     918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     91c:	ldr	r0, [r7, #12]
     920:	cmp	r0, #11
     924:	beq	93c <generate_type+0x470>
     928:	bl	0 <coda_type_get_native_type_name>
     92c:	ldr	r1, [pc, #1752]	; 100c <generate_type+0xb40>
     930:	mov	r2, r0
     934:	add	r0, sp, #36	; 0x24
     938:	bl	ac <fic_printf>
     93c:	ldr	r3, [r7, #40]	; 0x28
     940:	cmp	r3, #0
     944:	beq	818 <generate_type+0x34c>
     948:	ldr	r1, [pc, #1728]	; 1010 <generate_type+0xb44>
     94c:	add	r0, sp, #36	; 0x24
     950:	bl	ac <fic_printf>
     954:	ldr	r0, [r7, #40]	; 0x28
     958:	cmp	r0, #0
     95c:	beq	968 <generate_type+0x49c>
     960:	mvn	r1, #0
     964:	bl	164 <generate_escaped_string.part.2>
     968:	ldr	r0, [pc, #1700]	; 1014 <generate_type+0xb48>
     96c:	bl	0 <ff_printf>
     970:	b	818 <generate_type+0x34c>
     974:	ldr	r3, [r7, #44]	; 0x2c
     978:	cmp	r3, #0
     97c:	beq	818 <generate_type+0x34c>
     980:	ldr	r1, [pc, #1672]	; 1010 <generate_type+0xb44>
     984:	add	r0, sp, #36	; 0x24
     988:	bl	ac <fic_printf>
     98c:	ldr	r0, [r7, #44]	; 0x2c
     990:	ldr	r1, [r7, #40]	; 0x28
     994:	cmp	r0, #0
     998:	cmpne	r1, #0
     99c:	beq	968 <generate_type+0x49c>
     9a0:	b	964 <generate_type+0x498>
     9a4:	ldr	r0, [r7, #12]
     9a8:	bl	0 <coda_type_get_native_type_name>
     9ac:	ldr	r1, [pc, #1624]	; 100c <generate_type+0xb40>
     9b0:	mov	r2, r0
     9b4:	add	r0, sp, #36	; 0x24
     9b8:	bl	ac <fic_printf>
     9bc:	ldr	r3, [r7, #40]	; 0x28
     9c0:	cmp	r3, #0
     9c4:	beq	9e8 <generate_type+0x51c>
     9c8:	ldr	r0, [pc, #1608]	; 1018 <generate_type+0xb4c>
     9cc:	bl	124 <fi_printf>
     9d0:	ldr	r0, [r7, #40]	; 0x28
     9d4:	cmp	r0, #0
     9d8:	beq	9e0 <generate_type+0x514>
     9dc:	bl	434 <generate_xml_string.part.1.constprop.3>
     9e0:	ldr	r0, [pc, #1588]	; 101c <generate_type+0xb50>
     9e4:	bl	0 <ff_printf>
     9e8:	ldr	r3, [r7, #44]	; 0x2c
     9ec:	cmp	r3, #1
     9f0:	beq	f74 <generate_type+0xaa8>
     9f4:	ldr	r3, [r7, #48]	; 0x30
     9f8:	cmp	r3, #0
     9fc:	beq	aa0 <generate_type+0x5d4>
     a00:	ldrd	r8, [r3]
     a04:	ldrd	r4, [r3, #8]
     a08:	ldr	r0, [pc, #1552]	; 1020 <generate_type+0xb54>
     a0c:	mov	r3, r9
     a10:	mov	r2, r8
     a14:	strd	r4, [sp]
     a18:	bl	124 <fi_printf>
     a1c:	ldr	r3, [r7, #48]	; 0x30
     a20:	vldr	d7, [r3, #16]
     a24:	vcmp.f64	d7, #0.0
     a28:	vmrs	APSR_nzcv, fpscr
     a2c:	bne	f60 <generate_type+0xa94>
     a30:	vldr	d0, [r3, #24]
     a34:	bl	0 <coda_isNaN>
     a38:	cmp	r0, #0
     a3c:	beq	f4c <generate_type+0xa80>
     a40:	ldr	r3, [r7, #48]	; 0x30
     a44:	ldr	r3, [r3, #32]
     a48:	cmp	r3, #0
     a4c:	beq	f80 <generate_type+0xab4>
     a50:	ldr	r5, [pc, #1384]	; fc0 <generate_type+0xaf4>
     a54:	ldr	r0, [pc, #1388]	; fc8 <generate_type+0xafc>
     a58:	bl	0 <ff_printf>
     a5c:	ldr	r3, [r5, #4]
     a60:	ldr	r0, [pc, #1456]	; 1018 <generate_type+0xb4c>
     a64:	add	r3, r3, #1
     a68:	str	r3, [r5, #4]
     a6c:	bl	124 <fi_printf>
     a70:	ldr	r3, [r7, #48]	; 0x30
     a74:	ldr	r0, [r3, #32]
     a78:	cmp	r0, #0
     a7c:	beq	a84 <generate_type+0x5b8>
     a80:	bl	434 <generate_xml_string.part.1.constprop.3>
     a84:	ldr	r0, [pc, #1424]	; 101c <generate_type+0xb50>
     a88:	bl	0 <ff_printf>
     a8c:	ldr	r3, [r5, #4]
     a90:	ldr	r0, [pc, #1420]	; 1024 <generate_type+0xb58>
     a94:	sub	r3, r3, #1
     a98:	str	r3, [r5, #4]
     a9c:	bl	124 <fi_printf>
     aa0:	ldr	r3, [r7, #52]	; 0x34
     aa4:	cmp	r3, #0
     aa8:	beq	818 <generate_type+0x34c>
     aac:	ldr	r2, [r3, #8]
     ab0:	cmp	r2, #0
     ab4:	ble	818 <generate_type+0x34c>
     ab8:	ldr	sl, [pc, #1384]	; 1028 <generate_type+0xb5c>
     abc:	ldr	r9, [pc, #1384]	; 102c <generate_type+0xb60>
     ac0:	ldr	fp, [pc, #1384]	; 1030 <generate_type+0xb64>
     ac4:	ldr	r8, [pc, #1384]	; 1034 <generate_type+0xb68>
     ac8:	mov	r4, #0
     acc:	add	r6, sp, #48	; 0x30
     ad0:	b	b1c <generate_type+0x650>
     ad4:	mov	r0, r9
     ad8:	bl	0 <ff_printf>
     adc:	ldr	r3, [sp, #16]
     ae0:	cmp	r3, #2
     ae4:	beq	d04 <generate_type+0x838>
     ae8:	mov	r0, r6
     aec:	vldr	d0, [r5, #8]
     af0:	bl	0 <coda_strfl>
     af4:	mov	r1, r6
     af8:	mov	r0, fp
     afc:	bl	0 <ff_printf>
     b00:	mov	r0, r8
     b04:	bl	0 <ff_printf>
     b08:	ldr	r3, [r7, #52]	; 0x34
     b0c:	add	r4, r4, #1
     b10:	ldr	r2, [r3, #8]
     b14:	cmp	r2, r4
     b18:	ble	818 <generate_type+0x34c>
     b1c:	ldr	r3, [r3, #12]
     b20:	mov	r0, sl
     b24:	ldr	r5, [r3, r4, lsl #2]
     b28:	bl	124 <fi_printf>
     b2c:	ldr	r0, [r5, #4]
     b30:	ldr	r1, [r5]
     b34:	cmp	r0, #0
     b38:	cmpne	r1, #0
     b3c:	beq	ad4 <generate_type+0x608>
     b40:	bl	164 <generate_escaped_string.part.2>
     b44:	b	ad4 <generate_type+0x608>
     b48:	ldr	r3, [r7, #36]	; 0x24
     b4c:	cmp	r3, #0
     b50:	bne	618 <generate_type+0x14c>
     b54:	ldr	r3, [sp, #40]	; 0x28
     b58:	cmp	r3, #0
     b5c:	beq	b8c <generate_type+0x6c0>
     b60:	ldr	r3, [r7, #68]	; 0x44
     b64:	cmp	r3, #0
     b68:	beq	b8c <generate_type+0x6c0>
     b6c:	ldr	r1, [pc, #1220]	; 1038 <generate_type+0xb6c>
     b70:	add	r0, sp, #36	; 0x24
     b74:	bl	ac <fic_printf>
     b78:	ldr	r1, [pc, #1080]	; fb8 <generate_type+0xaec>
     b7c:	ldr	r0, [r7, #68]	; 0x44
     b80:	bl	0 <coda_expression_print_xml>
     b84:	ldr	r0, [pc, #1200]	; 103c <generate_type+0xb70>
     b88:	bl	0 <ff_printf>
     b8c:	add	r1, sp, #44	; 0x2c
     b90:	mov	r0, r7
     b94:	bl	0 <coda_type_get_num_record_fields>
     b98:	ldr	r3, [sp, #44]	; 0x2c
     b9c:	cmp	r3, #0
     ba0:	ble	818 <generate_type+0x34c>
     ba4:	ldr	r5, [pc, #1044]	; fc0 <generate_type+0xaf4>
     ba8:	ldr	sl, [pc, #1168]	; 1040 <generate_type+0xb74>
     bac:	ldr	r9, [pc, #1044]	; fc8 <generate_type+0xafc>
     bb0:	ldr	fp, [pc, #1044]	; fcc <generate_type+0xb00>
     bb4:	mov	r6, #0
     bb8:	add	r8, sp, #36	; 0x24
     bbc:	b	bf8 <generate_type+0x72c>
     bc0:	add	r2, sp, #48	; 0x30
     bc4:	bl	0 <coda_str64>
     bc8:	add	r1, sp, #48	; 0x30
     bcc:	ldr	r0, [pc, #1136]	; 1044 <generate_type+0xb78>
     bd0:	bl	124 <fi_printf>
     bd4:	ldr	r3, [r5, #4]
     bd8:	ldr	r0, [pc, #1128]	; 1048 <generate_type+0xb7c>
     bdc:	sub	r3, r3, #1
     be0:	str	r3, [r5, #4]
     be4:	bl	124 <fi_printf>
     be8:	ldr	r3, [sp, #44]	; 0x2c
     bec:	add	r6, r6, #1
     bf0:	cmp	r3, r6
     bf4:	ble	818 <generate_type+0x34c>
     bf8:	ldr	r3, [r7, #52]	; 0x34
     bfc:	mov	r1, sl
     c00:	mov	r0, r8
     c04:	ldr	r4, [r3, r6, lsl #2]
     c08:	ldr	r2, [r4]
     c0c:	bl	ac <fic_printf>
     c10:	ldr	r0, [r4, #4]
     c14:	cmp	r0, #0
     c18:	beq	c2c <generate_type+0x760>
     c1c:	ldr	r1, [r4]
     c20:	bl	0 <strcmp>
     c24:	cmp	r0, #0
     c28:	bne	ce0 <generate_type+0x814>
     c2c:	mov	r0, r9
     c30:	bl	0 <ff_printf>
     c34:	ldr	r3, [r5, #4]
     c38:	ldr	r1, [sp, #24]
     c3c:	add	r3, r3, #1
     c40:	ldr	r0, [r4, #8]
     c44:	str	r3, [r5, #4]
     c48:	bl	4cc <generate_type>
     c4c:	ldr	r3, [r4, #12]
     c50:	cmp	r3, #0
     c54:	bne	cd4 <generate_type+0x808>
     c58:	ldrb	r3, [r4, #16]
     c5c:	cmp	r3, #0
     c60:	beq	c8c <generate_type+0x7c0>
     c64:	ldr	r3, [r4, #20]
     c68:	cmp	r3, #0
     c6c:	beq	db0 <generate_type+0x8e4>
     c70:	ldr	r0, [pc, #856]	; fd0 <generate_type+0xb04>
     c74:	bl	124 <fi_printf>
     c78:	ldr	r1, [pc, #824]	; fb8 <generate_type+0xaec>
     c7c:	ldr	r0, [r4, #20]
     c80:	bl	0 <coda_expression_print_xml>
     c84:	ldr	r0, [pc, #840]	; fd4 <generate_type+0xb08>
     c88:	bl	0 <ff_printf>
     c8c:	ldrd	r0, [r4, #24]
     c90:	cmp	r0, #0
     c94:	sbcs	r3, r1, #0
     c98:	bge	bc0 <generate_type+0x6f4>
     c9c:	ldr	r3, [r4, #32]
     ca0:	cmp	r3, #0
     ca4:	beq	bd4 <generate_type+0x708>
     ca8:	ldr	r0, [pc, #924]	; 104c <generate_type+0xb80>
     cac:	bl	124 <fi_printf>
     cb0:	ldr	r0, [r4, #32]
     cb4:	ldr	r1, [pc, #764]	; fb8 <generate_type+0xaec>
     cb8:	bl	0 <coda_expression_print_xml>
     cbc:	ldr	r0, [pc, #908]	; 1050 <generate_type+0xb84>
     cc0:	bl	0 <ff_printf>
     cc4:	b	bd4 <generate_type+0x708>
     cc8:	ldr	r0, [pc, #900]	; 1054 <generate_type+0xb88>
     ccc:	bl	124 <fi_printf>
     cd0:	b	674 <generate_type+0x1a8>
     cd4:	mov	r0, fp
     cd8:	bl	124 <fi_printf>
     cdc:	b	c58 <generate_type+0x78c>
     ce0:	ldr	r0, [pc, #776]	; ff0 <generate_type+0xb24>
     ce4:	bl	0 <ff_printf>
     ce8:	ldr	r0, [r4, #4]
     cec:	cmp	r0, #0
     cf0:	beq	cf8 <generate_type+0x82c>
     cf4:	bl	434 <generate_xml_string.part.1.constprop.3>
     cf8:	ldr	r0, [pc, #756]	; ff4 <generate_type+0xb28>
     cfc:	bl	0 <ff_printf>
     d00:	b	c2c <generate_type+0x760>
     d04:	ldrd	r0, [r5, #8]
     d08:	mov	r2, r6
     d0c:	bl	0 <coda_str64>
     d10:	mov	r1, r6
     d14:	mov	r0, fp
     d18:	bl	0 <ff_printf>
     d1c:	b	b00 <generate_type+0x634>
     d20:	ldr	r3, [sp, #20]
     d24:	cmp	r3, #2
     d28:	bne	580 <generate_type+0xb4>
     d2c:	ldr	r0, [pc, #804]	; 1058 <generate_type+0xb8c>
     d30:	bl	0 <ff_printf>
     d34:	ldr	r1, [pc, #636]	; fb8 <generate_type+0xaec>
     d38:	ldr	r0, [r7, #52]	; 0x34
     d3c:	bl	0 <coda_expression_print_xml>
     d40:	ldr	r0, [pc, #684]	; ff4 <generate_type+0xb28>
     d44:	bl	0 <ff_printf>
     d48:	b	580 <generate_type+0xb4>
     d4c:	sub	r2, r3, #2
     d50:	cmp	r2, #3
     d54:	bhi	5c0 <generate_type+0xf4>
     d58:	ldrd	r4, [r7, #24]
     d5c:	cmp	r4, #0
     d60:	sbcs	r3, r5, #0
     d64:	blt	ee8 <generate_type+0xa1c>
     d68:	and	r2, r4, #7
     d6c:	mov	r3, #0
     d70:	orrs	r3, r2, r3
     d74:	add	r6, sp, #48	; 0x30
     d78:	beq	dcc <generate_type+0x900>
     d7c:	mov	r0, r4
     d80:	mov	r1, r5
     d84:	mov	r2, r6
     d88:	bl	0 <coda_str64>
     d8c:	mov	r2, r6
     d90:	ldr	r1, [pc, #708]	; 105c <generate_type+0xb90>
     d94:	add	r0, sp, #36	; 0x24
     d98:	bl	ac <fic_printf>
     d9c:	ldr	r3, [sp, #16]
     da0:	b	5c0 <generate_type+0xf4>
     da4:	ldr	r3, [pc, #692]	; 1060 <generate_type+0xb94>
     da8:	str	r3, [sp, #12]
     dac:	b	54c <generate_type+0x80>
     db0:	ldr	r0, [pc, #668]	; 1054 <generate_type+0xb88>
     db4:	bl	124 <fi_printf>
     db8:	b	c8c <generate_type+0x7c0>
     dbc:	ldr	r1, [pc, #672]	; 1064 <generate_type+0xb98>
     dc0:	mov	r0, r8
     dc4:	bl	ac <fic_printf>
     dc8:	b	87c <generate_type+0x3b0>
     dcc:	lsr	r0, r4, #3
     dd0:	mov	r2, r6
     dd4:	orr	r0, r0, r5, lsl #29
     dd8:	asr	r1, r5, #3
     ddc:	bl	0 <coda_str64>
     de0:	mov	r2, r6
     de4:	ldr	r1, [pc, #636]	; 1068 <generate_type+0xb9c>
     de8:	add	r0, sp, #36	; 0x24
     dec:	bl	ac <fic_printf>
     df0:	b	d9c <generate_type+0x8d0>
     df4:	ldr	r3, [pc, #624]	; 106c <generate_type+0xba0>
     df8:	str	r3, [sp, #12]
     dfc:	b	54c <generate_type+0x80>
     e00:	ldr	r3, [pc, #616]	; 1070 <generate_type+0xba4>
     e04:	str	r3, [sp, #12]
     e08:	b	54c <generate_type+0x80>
     e0c:	ldr	r3, [pc, #608]	; 1074 <generate_type+0xba8>
     e10:	str	r3, [sp, #12]
     e14:	b	54c <generate_type+0x80>
     e18:	ldr	r3, [pc, #600]	; 1078 <generate_type+0xbac>
     e1c:	ldr	r2, [pc, #600]	; 107c <generate_type+0xbb0>
     e20:	ldr	r1, [pc, #600]	; 1080 <generate_type+0xbb4>
     e24:	ldr	r0, [pc, #600]	; 1084 <generate_type+0xbb8>
     e28:	bl	0 <__assert_fail>
     e2c:	ldr	r3, [pc, #596]	; 1088 <generate_type+0xbbc>
     e30:	str	r3, [sp, #12]
     e34:	b	54c <generate_type+0x80>
     e38:	ldr	r3, [pc, #588]	; 108c <generate_type+0xbc0>
     e3c:	str	r3, [sp, #12]
     e40:	b	54c <generate_type+0x80>
     e44:	ldr	r3, [pc, #580]	; 1090 <generate_type+0xbc4>
     e48:	str	r3, [sp, #12]
     e4c:	b	54c <generate_type+0x80>
     e50:	ldr	r3, [pc, #572]	; 1094 <generate_type+0xbc8>
     e54:	str	r3, [sp, #12]
     e58:	b	54c <generate_type+0x80>
     e5c:	ldr	r3, [pc, #532]	; 1078 <generate_type+0xbac>
     e60:	ldr	r2, [pc, #560]	; 1098 <generate_type+0xbcc>
     e64:	ldr	r1, [pc, #532]	; 1080 <generate_type+0xbb4>
     e68:	ldr	r0, [pc, #532]	; 1084 <generate_type+0xbb8>
     e6c:	bl	0 <__assert_fail>
     e70:	ldr	r0, [pc, #336]	; fc8 <generate_type+0xafc>
     e74:	bl	0 <ff_printf>
     e78:	ldr	r2, [pc, #320]	; fc0 <generate_type+0xaf4>
     e7c:	mov	r3, #1
     e80:	str	r3, [sp, #36]	; 0x24
     e84:	ldr	r3, [r2, #4]
     e88:	add	r3, r3, #1
     e8c:	str	r3, [r2, #4]
     e90:	b	8e0 <generate_type+0x414>
     e94:	ldr	r0, [pc, #300]	; fc8 <generate_type+0xafc>
     e98:	bl	0 <ff_printf>
     e9c:	ldr	r2, [pc, #284]	; fc0 <generate_type+0xaf4>
     ea0:	mov	r3, #1
     ea4:	str	r3, [sp, #36]	; 0x24
     ea8:	ldr	r3, [r2, #4]
     eac:	add	r3, r3, #1
     eb0:	str	r3, [r2, #4]
     eb4:	b	80c <generate_type+0x340>
     eb8:	ldr	r3, [r7, #48]	; 0x30
     ebc:	cmp	r3, #0
     ec0:	beq	800 <generate_type+0x334>
     ec4:	ldr	r0, [pc, #332]	; 1018 <generate_type+0xb4c>
     ec8:	bl	124 <fi_printf>
     ecc:	ldr	r0, [r7, #48]	; 0x30
     ed0:	cmp	r0, #0
     ed4:	beq	edc <generate_type+0xa10>
     ed8:	bl	434 <generate_xml_string.part.1.constprop.3>
     edc:	ldr	r0, [pc, #312]	; 101c <generate_type+0xb50>
     ee0:	bl	0 <ff_printf>
     ee4:	b	800 <generate_type+0x334>
     ee8:	ldr	r3, [r7, #32]
     eec:	cmp	r3, #0
     ef0:	beq	60c <generate_type+0x140>
     ef4:	mvn	r9, #0
     ef8:	cmp	r5, r9
     efc:	mvn	r8, #7
     f00:	ldr	sl, [pc, #404]	; 109c <generate_type+0xbd0>
     f04:	ldr	r6, [pc, #404]	; 10a0 <generate_type+0xbd4>
     f08:	cmpeq	r4, r8
     f0c:	movne	r2, sl
     f10:	moveq	r2, r6
     f14:	ldr	r1, [pc, #392]	; 10a4 <generate_type+0xbd8>
     f18:	add	r0, sp, #36	; 0x24
     f1c:	bl	ac <fic_printf>
     f20:	ldr	r1, [pc, #144]	; fb8 <generate_type+0xaec>
     f24:	ldr	r0, [r7, #32]
     f28:	bl	0 <coda_expression_print_xml>
     f2c:	ldrd	r2, [r7, #24]
     f30:	ldr	r0, [pc, #208]	; 1008 <generate_type+0xb3c>
     f34:	cmp	r3, r9
     f38:	cmpeq	r2, r8
     f3c:	movne	r1, sl
     f40:	moveq	r1, r6
     f44:	bl	0 <ff_printf>
     f48:	b	d9c <generate_type+0x8d0>
     f4c:	ldr	r3, [r7, #48]	; 0x30
     f50:	ldr	r0, [pc, #336]	; 10a8 <generate_type+0xbdc>
     f54:	ldrd	r2, [r3, #24]
     f58:	bl	0 <ff_printf>
     f5c:	b	a40 <generate_type+0x574>
     f60:	vmov	r2, r3, d7
     f64:	ldr	r0, [pc, #320]	; 10ac <generate_type+0xbe0>
     f68:	bl	0 <ff_printf>
     f6c:	ldr	r3, [r7, #48]	; 0x30
     f70:	b	a30 <generate_type+0x564>
     f74:	ldr	r0, [pc, #308]	; 10b0 <generate_type+0xbe4>
     f78:	bl	124 <fi_printf>
     f7c:	b	9f4 <generate_type+0x528>
     f80:	ldr	r0, [pc, #112]	; ff8 <generate_type+0xb2c>
     f84:	bl	0 <ff_printf>
     f88:	b	aa0 <generate_type+0x5d4>
     f8c:	ldr	r3, [pc, #228]	; 1078 <generate_type+0xbac>
     f90:	mov	r2, #352	; 0x160
     f94:	ldr	r1, [pc, #228]	; 1080 <generate_type+0xbb4>
     f98:	ldr	r0, [pc, #276]	; 10b4 <generate_type+0xbe8>
     f9c:	bl	0 <__assert_fail>
     fa0:	.word	0x000000cc
     fa4:	.word	0x0000015c
     fa8:	.word	0x00000164
     fac:	.word	0x00000188
     fb0:	.word	0x0000019c
     fb4:	.word	0x0000021c
     fb8:	.word	0x00000000
     fbc:	.word	0x0000022c
     fc0:	.word	0x00000000
     fc4:	.word	0x0000023c
     fc8:	.word	0x00000068
     fcc:	.word	0x00000264
     fd0:	.word	0x00000274
     fd4:	.word	0x00000284
     fd8:	.word	0x000002a8
     fdc:	.word	0x000000d4
     fe0:	.word	0x000000dc
     fe4:	.word	0x000000ec
     fe8:	.word	0x0000013c
     fec:	.word	0x000000c4
     ff0:	.word	0x00000254
     ff4:	.word	0x00000184
     ff8:	.word	0x00000468
     ffc:	.word	0x0000037c
    1000:	.word	0x0000038c
    1004:	.word	0x00000358
    1008:	.word	0x000001f8
    100c:	.word	0x000003b4
    1010:	.word	0x00000498
    1014:	.word	0x000004a8
    1018:	.word	0x000003d8
    101c:	.word	0x000003e4
    1020:	.word	0x00000404
    1024:	.word	0x00000454
    1028:	.word	0x0000046c
    102c:	.word	0x00000484
    1030:	.word	0x00000490
    1034:	.word	0x00000494
    1038:	.word	0x000002bc
    103c:	.word	0x000002d4
    1040:	.word	0x000002ec
    1044:	.word	0x00000300
    1048:	.word	0x00000348
    104c:	.word	0x00000324
    1050:	.word	0x00000334
    1054:	.word	0x00000298
    1058:	.word	0x00000174
    105c:	.word	0x000001d0
    1060:	.word	0x000000c0
    1064:	.word	0x000003a0
    1068:	.word	0x000001b0
    106c:	.word	0x000000f0
    1070:	.word	0x00000134
    1074:	.word	0x0000012c
    1078:	.word	0x00000008
    107c:	.word	0x0000012d
    1080:	.word	0x00000000
    1084:	.word	0x00000158
    1088:	.word	0x000000e4
    108c:	.word	0x00000118
    1090:	.word	0x000000fc
    1094:	.word	0x0000010c
    1098:	.word	0x00000111
    109c:	.word	0x00000150
    10a0:	.word	0x00000144
    10a4:	.word	0x000001f0
    10a8:	.word	0x00000444
    10ac:	.word	0x00000434
    10b0:	.word	0x000003f0
    10b4:	.word	0x00000204

000010b8 <generate_definition>:
    10b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    10bc:	mov	r5, r1
    10c0:	sub	sp, sp, #36	; 0x24
    10c4:	mov	r4, r0
    10c8:	add	r1, sp, #8
    10cc:	mov	r0, r5
    10d0:	bl	0 <coda_open>
    10d4:	cmp	r0, #0
    10d8:	beq	114c <generate_definition+0x94>
    10dc:	ldr	r3, [pc, #644]	; 1368 <generate_definition+0x2b0>
    10e0:	bl	0 <__aeabi_read_tp>
    10e4:	mov	r6, r0
    10e8:	ldr	r3, [pc, r3]
    10ec:	ldr	r0, [r0, r3]
    10f0:	cmn	r0, #21
    10f4:	beq	1124 <generate_definition+0x6c>
    10f8:	ldr	r4, [pc, #620]	; 136c <generate_definition+0x2b4>
    10fc:	ldr	r5, [r4]
    1100:	bl	0 <coda_errno_to_string>
    1104:	ldr	r1, [pc, #612]	; 1370 <generate_definition+0x2b8>
    1108:	mov	r2, r0
    110c:	mov	r0, r5
    1110:	bl	0 <fprintf>
    1114:	ldr	r0, [r4]
    1118:	bl	0 <fflush>
    111c:	mov	r0, #1
    1120:	bl	0 <exit>
    1124:	mov	r0, #0
    1128:	bl	0 <coda_set_option_use_mmap>
    112c:	add	r1, sp, #8
    1130:	mov	r0, r5
    1134:	bl	0 <coda_open>
    1138:	mov	r5, r0
    113c:	mov	r0, #1
    1140:	bl	0 <coda_set_option_use_mmap>
    1144:	cmp	r5, #0
    1148:	bne	1358 <generate_definition+0x2a0>
    114c:	ldr	r3, [pc, #544]	; 1374 <generate_definition+0x2bc>
    1150:	ldr	r5, [pc, #544]	; 1378 <generate_definition+0x2c0>
    1154:	cmp	r4, #0
    1158:	ldr	r3, [r3]
    115c:	str	r3, [r5]
    1160:	beq	117c <generate_definition+0xc4>
    1164:	ldr	r1, [pc, #528]	; 137c <generate_definition+0x2c4>
    1168:	mov	r0, r4
    116c:	bl	0 <fopen>
    1170:	cmp	r0, #0
    1174:	str	r0, [r5]
    1178:	beq	1334 <generate_definition+0x27c>
    117c:	ldr	r0, [pc, #508]	; 1380 <generate_definition+0x2c8>
    1180:	bl	0 <ff_printf>
    1184:	ldr	r4, [sp, #8]
    1188:	mov	r0, #0
    118c:	ldr	r2, [r4, #20]
    1190:	ldr	r7, [r4, #24]
    1194:	ldr	r1, [r4, #16]
    1198:	ldr	r3, [r2]
    119c:	cmp	r3, #99	; 0x63
    11a0:	movls	r6, r2
    11a4:	ldrhi	r6, [r2, #4]
    11a8:	cmp	r7, #0
    11ac:	mov	r3, #0
    11b0:	ldrne	r6, [r7, #28]
    11b4:	str	r3, [sp, #24]
    11b8:	str	r3, [sp, #16]
    11bc:	str	r3, [sp, #20]
    11c0:	str	r3, [sp, #27]
    11c4:	moveq	r8, r1
    11c8:	ldrne	r9, [r7, #8]
    11cc:	ldrne	r8, [r7]
    11d0:	ldreq	r9, [pc, #428]	; 1384 <generate_definition+0x2cc>
    11d4:	cmp	r6, #0
    11d8:	moveq	r8, r1
    11dc:	ldreq	r6, [r2, #4]
    11e0:	bl	0 <time>
    11e4:	add	r3, sp, #32
    11e8:	str	r0, [r3, #-20]!	; 0xffffffec
    11ec:	mov	r0, r3
    11f0:	bl	0 <localtime>
    11f4:	cmp	r0, #0
    11f8:	addeq	sl, sp, #16
    11fc:	beq	122c <generate_definition+0x174>
    1200:	ldr	r2, [r0, #20]
    1204:	ldr	r3, [r0, #16]
    1208:	ldr	r1, [r0, #12]
    120c:	add	r2, r2, #1888	; 0x760
    1210:	add	sl, sp, #16
    1214:	str	r1, [sp]
    1218:	add	r2, r2, #12
    121c:	add	r3, r3, #1
    1220:	mov	r0, sl
    1224:	ldr	r1, [pc, #348]	; 1388 <generate_definition+0x2d0>
    1228:	bl	0 <sprintf>
    122c:	ldr	r0, [r4, #16]
    1230:	bl	0 <coda_type_get_format_name>
    1234:	mov	r3, sl
    1238:	mov	r1, r9
    123c:	mov	r2, r0
    1240:	ldr	r0, [pc, #324]	; 138c <generate_definition+0x2d4>
    1244:	bl	124 <fi_printf>
    1248:	ldr	r3, [r5, #4]
    124c:	mov	r1, r8
    1250:	add	r3, r3, #1
    1254:	mov	r0, r6
    1258:	str	r3, [r5, #4]
    125c:	bl	4cc <generate_type>
    1260:	cmp	r7, #0
    1264:	beq	1310 <generate_definition+0x258>
    1268:	ldr	r3, [r7, #32]
    126c:	cmp	r3, #0
    1270:	ble	1310 <generate_definition+0x258>
    1274:	ldr	fp, [pc, #276]	; 1390 <generate_definition+0x2d8>
    1278:	ldr	r8, [pc, #276]	; 1394 <generate_definition+0x2dc>
    127c:	ldr	sl, [pc, #276]	; 1398 <generate_definition+0x2e0>
    1280:	ldr	r9, [pc, #276]	; 139c <generate_definition+0x2e4>
    1284:	mov	r6, #0
    1288:	ldr	r3, [r7, #36]	; 0x24
    128c:	mov	r0, fp
    1290:	ldr	r4, [r3, r6, lsl #2]
    1294:	ldr	r1, [r4]
    1298:	bl	124 <fi_printf>
    129c:	ldr	r3, [r5, #4]
    12a0:	ldr	r2, [r4, #4]
    12a4:	add	r3, r3, #1
    12a8:	cmp	r2, #0
    12ac:	str	r3, [r5, #4]
    12b0:	beq	12d0 <generate_definition+0x218>
    12b4:	ldr	r0, [pc, #228]	; 13a0 <generate_definition+0x2e8>
    12b8:	bl	124 <fi_printf>
    12bc:	mov	r1, r8
    12c0:	ldr	r0, [r4, #4]
    12c4:	bl	0 <coda_expression_print_xml>
    12c8:	ldr	r0, [pc, #212]	; 13a4 <generate_definition+0x2ec>
    12cc:	bl	0 <ff_printf>
    12d0:	mov	r0, sl
    12d4:	bl	124 <fi_printf>
    12d8:	mov	r1, r8
    12dc:	ldr	r0, [r4, #8]
    12e0:	bl	0 <coda_expression_print_xml>
    12e4:	mov	r0, r9
    12e8:	bl	0 <ff_printf>
    12ec:	ldr	r3, [r5, #4]
    12f0:	ldr	r0, [pc, #176]	; 13a8 <generate_definition+0x2f0>
    12f4:	sub	r3, r3, #1
    12f8:	str	r3, [r5, #4]
    12fc:	bl	124 <fi_printf>
    1300:	ldr	r3, [r7, #32]
    1304:	add	r6, r6, #1
    1308:	cmp	r6, r3
    130c:	blt	1288 <generate_definition+0x1d0>
    1310:	ldr	r3, [r5, #4]
    1314:	ldr	r0, [pc, #144]	; 13ac <generate_definition+0x2f4>
    1318:	sub	r3, r3, #1
    131c:	str	r3, [r5, #4]
    1320:	bl	124 <fi_printf>
    1324:	ldr	r0, [sp, #8]
    1328:	bl	0 <coda_close>
    132c:	add	sp, sp, #36	; 0x24
    1330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1334:	ldr	r5, [pc, #48]	; 136c <generate_definition+0x2b4>
    1338:	mov	r2, r4
    133c:	ldr	r1, [pc, #108]	; 13b0 <generate_definition+0x2f8>
    1340:	ldr	r0, [r5]
    1344:	bl	0 <fprintf>
    1348:	ldr	r0, [r5]
    134c:	bl	0 <fflush>
    1350:	mov	r0, #1
    1354:	bl	0 <exit>
    1358:	ldr	r3, [pc, #84]	; 13b4 <generate_definition+0x2fc>
    135c:	ldr	r3, [pc, r3]
    1360:	ldr	r0, [r6, r3]
    1364:	b	10f8 <generate_definition+0x40>
    1368:	.word	0x00000278
    136c:	.word	0x00000000
    1370:	.word	0x000004c8
	...
    137c:	.word	0x000004d4
    1380:	.word	0x00000504
    1384:	.word	0x000004bc
    1388:	.word	0x0000051c
    138c:	.word	0x0000052c
    1390:	.word	0x000005c0
    1394:	.word	0x00000000
    1398:	.word	0x000005e0
    139c:	.word	0x000005ec
    13a0:	.word	0x0000037c
    13a4:	.word	0x0000038c
    13a8:	.word	0x000005f8
    13ac:	.word	0x000005a4
    13b0:	.word	0x000004d8
    13b4:	.word	0x00000050
