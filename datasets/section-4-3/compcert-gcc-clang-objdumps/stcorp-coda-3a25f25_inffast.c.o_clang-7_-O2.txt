
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/zlib/inffast.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_inflate_fast>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #124	; 0x7c
   c:	ldr	r3, [r0, #12]
  10:	ldr	r7, [r0, #16]
  14:	ldr	r8, [r0, #28]
  18:	movw	r6, #257	; 0x101
  1c:	ldr	lr, [r0]
  20:	ldr	ip, [r0, #4]
  24:	str	r0, [fp, #-36]	; 0xffffffdc
  28:	sub	r9, r3, #1
  2c:	sub	r1, r7, r1
  30:	ldr	r5, [r8, #48]	; 0x30
  34:	ldr	r2, [r8, #52]	; 0x34
  38:	add	r3, r9, r7
  3c:	add	r4, r9, r1
  40:	ldr	r1, [r8, #44]	; 0x2c
  44:	sub	r7, lr, #1
  48:	ldr	lr, [r8, #76]	; 0x4c
  4c:	sub	sl, r3, r6
  50:	ldr	r3, [r8, #88]	; 0x58
  54:	mvn	r6, #0
  58:	add	r0, r7, ip
  5c:	str	r4, [fp, #-52]	; 0xffffffcc
  60:	sub	ip, r0, #5
  64:	add	r0, r8, #7104	; 0x1bc0
  68:	str	r0, [sp, #76]	; 0x4c
  6c:	ldr	r0, [r8, #80]	; 0x50
  70:	str	r5, [fp, #-64]	; 0xffffffc0
  74:	str	r2, [sp, #32]
  78:	str	r1, [fp, #-72]	; 0xffffffb8
  7c:	sub	r1, r5, r4
  80:	mvn	r3, r6, lsl r3
  84:	add	r1, r2, r1
  88:	str	r3, [fp, #-44]	; 0xffffffd4
  8c:	ldr	r3, [r8, #84]	; 0x54
  90:	str	r1, [sp, #40]	; 0x28
  94:	str	r0, [fp, #-48]	; 0xffffffd0
  98:	add	r0, r4, #1
  9c:	str	r0, [sp, #60]	; 0x3c
  a0:	sub	r0, r0, r5
  a4:	str	r0, [sp, #48]	; 0x30
  a8:	sub	r0, r4, r5
  ac:	mvn	r3, r6, lsl r3
  b0:	ldr	r6, [r8, #40]	; 0x28
  b4:	str	r0, [sp, #56]	; 0x38
  b8:	bic	r0, r5, #15
  bc:	str	r3, [fp, #-32]	; 0xffffffe0
  c0:	ldr	r3, [r8, #56]	; 0x38
  c4:	str	r0, [sp, #28]
  c8:	sub	r1, r6, r4
  cc:	str	r6, [sp, #72]	; 0x48
  d0:	add	r1, r2, r1
  d4:	str	r1, [sp, #44]	; 0x2c
  d8:	add	r1, r5, r6
  dc:	add	r6, r2, r6
  e0:	str	r1, [sp, #68]	; 0x44
  e4:	sub	r1, r1, r4
  e8:	sub	r4, r5, r0
  ec:	add	r5, r2, r5
  f0:	str	r6, [sp, #64]	; 0x40
  f4:	mvn	r6, #0
  f8:	add	r1, r2, r1
  fc:	sub	r2, r2, #1
 100:	str	r5, [sp, #52]	; 0x34
 104:	mov	r5, ip
 108:	str	r4, [sp, #24]
 10c:	str	r1, [sp, #36]	; 0x24
 110:	ldr	r1, [r8, #60]	; 0x3c
 114:	add	r0, r2, r0
 118:	str	r2, [fp, #-68]	; 0xffffffbc
 11c:	str	r0, [sp, #20]
 120:	cmp	r1, #14
 124:	bhi	148 <coda_inflate_fast+0x148>
 128:	ldrb	r0, [r7, #2]!
 12c:	ldrb	r2, [r7, #-1]
 130:	mov	ip, r7
 134:	add	r2, r3, r2, lsl r1
 138:	add	r3, r1, #8
 13c:	add	r1, r1, #16
 140:	add	r3, r2, r0, lsl r3
 144:	b	14c <coda_inflate_fast+0x14c>
 148:	mov	ip, r7
 14c:	ldr	r0, [fp, #-32]	; 0xffffffe0
 150:	and	r0, r3, r0
 154:	b	160 <coda_inflate_fast+0x160>
 158:	bic	r0, r3, r6, lsl r2
 15c:	uxtah	r0, r0, r7
 160:	mov	r2, lr
 164:	ldrb	r4, [r2, r0, lsl #2]!
 168:	ldrb	r0, [r2, #1]
 16c:	ldrh	r7, [r2, #2]
 170:	cmp	r4, #0
 174:	sub	r1, r1, r0
 178:	lsr	r3, r3, r0
 17c:	beq	198 <coda_inflate_fast+0x198>
 180:	uxtb	r2, r4
 184:	tst	r4, #16
 188:	bne	1b4 <coda_inflate_fast+0x1b4>
 18c:	tst	r2, #64	; 0x40
 190:	beq	158 <coda_inflate_fast+0x158>
 194:	b	868 <coda_inflate_fast+0x868>
 198:	strb	r7, [r9, #1]!
 19c:	mov	r7, ip
 1a0:	cmp	r9, sl
 1a4:	bcs	8b8 <coda_inflate_fast+0x8b8>
 1a8:	cmp	r7, r5
 1ac:	bcc	120 <coda_inflate_fast+0x120>
 1b0:	b	8b8 <coda_inflate_fast+0x8b8>
 1b4:	ands	r0, r2, #15
 1b8:	uxth	r2, r7
 1bc:	mov	r4, ip
 1c0:	str	sl, [fp, #-60]	; 0xffffffc4
 1c4:	str	r2, [fp, #-40]	; 0xffffffd8
 1c8:	beq	1f4 <coda_inflate_fast+0x1f4>
 1cc:	cmp	r1, r0
 1d0:	ldr	r7, [fp, #-40]	; 0xffffffd8
 1d4:	ldrbcc	r2, [r4, #1]!
 1d8:	addcc	r3, r3, r2, lsl r1
 1dc:	addcc	r1, r1, #8
 1e0:	bic	r2, r3, r6, lsl r0
 1e4:	sub	r1, r1, r0
 1e8:	lsr	r3, r3, r0
 1ec:	add	r7, r2, r7
 1f0:	str	r7, [fp, #-40]	; 0xffffffd8
 1f4:	cmp	r1, #14
 1f8:	str	r5, [fp, #-56]	; 0xffffffc8
 1fc:	bhi	220 <coda_inflate_fast+0x220>
 200:	ldrb	r0, [r4, #2]!
 204:	ldrb	r2, [r4, #-1]
 208:	mov	ip, r4
 20c:	add	r2, r3, r2, lsl r1
 210:	add	r3, r1, #8
 214:	add	r1, r1, #16
 218:	add	r3, r2, r0, lsl r3
 21c:	b	224 <coda_inflate_fast+0x224>
 220:	mov	ip, r4
 224:	ldr	r0, [fp, #-44]	; 0xffffffd4
 228:	ldr	r4, [fp, #-48]	; 0xffffffd0
 22c:	and	r0, r3, r0
 230:	b	23c <coda_inflate_fast+0x23c>
 234:	bic	r0, r3, r6, lsl r7
 238:	uxtah	r0, r0, sl
 23c:	mov	r2, r4
 240:	ldrb	r7, [r2, r0, lsl #2]!
 244:	ldrb	r0, [r2, #1]
 248:	ldrh	sl, [r2, #2]
 24c:	tst	r7, #16
 250:	sub	r1, r1, r0
 254:	lsr	r3, r3, r0
 258:	bne	268 <coda_inflate_fast+0x268>
 25c:	tst	r7, #64	; 0x40
 260:	beq	234 <coda_inflate_fast+0x234>
 264:	b	890 <coda_inflate_fast+0x890>
 268:	and	r4, r7, #15
 26c:	cmp	r1, r4
 270:	bcs	2a0 <coda_inflate_fast+0x2a0>
 274:	mov	r0, ip
 278:	ldrb	r2, [r0, #1]!
 27c:	add	r3, r3, r2, lsl r1
 280:	add	r2, r1, #8
 284:	cmp	r2, r4
 288:	bcs	2a8 <coda_inflate_fast+0x2a8>
 28c:	mov	r7, ip
 290:	add	r1, r1, #16
 294:	ldrb	r0, [r7, #2]!
 298:	add	r3, r3, r0, lsl r2
 29c:	b	2b0 <coda_inflate_fast+0x2b0>
 2a0:	mov	r7, ip
 2a4:	b	2b0 <coda_inflate_fast+0x2b0>
 2a8:	mov	r1, r2
 2ac:	mov	r7, r0
 2b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
 2b4:	bic	r0, r3, r6, lsl r4
 2b8:	sub	r1, r1, r4
 2bc:	lsr	r3, r3, r4
 2c0:	add	ip, r0, sl
 2c4:	sub	r2, r9, r2
 2c8:	cmp	ip, r2
 2cc:	bls	34c <coda_inflate_fast+0x34c>
 2d0:	sub	r5, ip, r2
 2d4:	ldr	r2, [fp, #-72]	; 0xffffffb8
 2d8:	cmp	r5, r2
 2dc:	bls	2f0 <coda_inflate_fast+0x2f0>
 2e0:	ldr	r2, [sp, #76]	; 0x4c
 2e4:	ldr	r2, [r2]
 2e8:	cmp	r2, #0
 2ec:	bne	908 <coda_inflate_fast+0x908>
 2f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
 2f4:	str	r7, [sp, #12]
 2f8:	cmp	r2, #0
 2fc:	beq	3d4 <coda_inflate_fast+0x3d4>
 300:	cmp	r2, r5
 304:	bcs	410 <coda_inflate_fast+0x410>
 308:	sub	r4, r5, r2
 30c:	ldr	r2, [sp, #68]	; 0x44
 310:	ldr	r7, [fp, #-68]	; 0xffffffbc
 314:	sub	r2, r2, r5
 318:	ldr	r5, [fp, #-40]	; 0xffffffd8
 31c:	add	r7, r7, r2
 320:	cmp	r5, r4
 324:	bls	7c0 <coda_inflate_fast+0x7c0>
 328:	sub	r2, ip, r9
 32c:	sub	r5, r5, r4
 330:	cmp	r4, #16
 334:	str	r2, [sp, #8]
 338:	str	r5, [fp, #-40]	; 0xffffffd8
 33c:	bcs	4c4 <coda_inflate_fast+0x4c4>
 340:	mov	r2, r9
 344:	mov	sl, r7
 348:	b	628 <coda_inflate_fast+0x628>
 34c:	ldr	r5, [fp, #-40]	; 0xffffffd8
 350:	rsb	r0, r0, #0
 354:	mov	ip, r7
 358:	str	r8, [sp, #16]
 35c:	sub	r0, r0, sl
 360:	add	r7, r9, r0
 364:	mov	r0, #0
 368:	sub	r6, r7, r0
 36c:	sub	r2, r9, r0
 370:	sub	r0, r0, #3
 374:	ldrb	r4, [r6, #1]
 378:	strb	r4, [r2, #1]
 37c:	ldrb	r4, [r6, #2]
 380:	strb	r4, [r2, #2]
 384:	ldrb	r6, [r6, #3]
 388:	strb	r6, [r2, #3]
 38c:	add	r2, r5, r0
 390:	cmp	r2, #2
 394:	bhi	368 <coda_inflate_fast+0x368>
 398:	ldr	r5, [fp, #-56]	; 0xffffffc8
 39c:	cmp	r2, #0
 3a0:	beq	3cc <coda_inflate_fast+0x3cc>
 3a4:	subs	r2, r2, #1
 3a8:	sub	r9, r9, r0
 3ac:	sub	r2, r7, r0
 3b0:	mov	r0, r9
 3b4:	ldrb	r7, [r2, #1]
 3b8:	strb	r7, [r0, #1]!
 3bc:	beq	448 <coda_inflate_fast+0x448>
 3c0:	ldrb	r0, [r2, #2]
 3c4:	strb	r0, [r9, #2]!
 3c8:	b	44c <coda_inflate_fast+0x44c>
 3cc:	sub	r9, r9, r0
 3d0:	b	44c <coda_inflate_fast+0x44c>
 3d4:	ldr	r2, [sp, #72]	; 0x48
 3d8:	ldr	r7, [fp, #-68]	; 0xffffffbc
 3dc:	sub	r2, r2, r5
 3e0:	add	r7, r7, r2
 3e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
 3e8:	cmp	r2, r5
 3ec:	bls	6f4 <coda_inflate_fast+0x6f4>
 3f0:	sub	r2, ip, r9
 3f4:	cmp	r5, #16
 3f8:	str	r2, [sp, #8]
 3fc:	bcs	468 <coda_inflate_fast+0x468>
 400:	mov	r2, r9
 404:	mov	sl, r5
 408:	mov	r4, r5
 40c:	b	5c4 <coda_inflate_fast+0x5c4>
 410:	ldr	r7, [fp, #-68]	; 0xffffffbc
 414:	sub	r2, r2, r5
 418:	add	r7, r7, r2
 41c:	ldr	r2, [fp, #-40]	; 0xffffffd8
 420:	cmp	r2, r5
 424:	bls	6f4 <coda_inflate_fast+0x6f4>
 428:	sub	r2, ip, r9
 42c:	cmp	r5, #16
 430:	str	r2, [sp, #8]
 434:	bcs	524 <coda_inflate_fast+0x524>
 438:	mov	r2, r9
 43c:	mov	sl, r5
 440:	mov	r4, r5
 444:	b	78c <coda_inflate_fast+0x78c>
 448:	mov	r9, r0
 44c:	ldr	r8, [sp, #16]
 450:	ldr	sl, [fp, #-60]	; 0xffffffc4
 454:	mov	r7, ip
 458:	mvn	r6, #0
 45c:	cmp	r9, sl
 460:	bcc	1a8 <coda_inflate_fast+0x1a8>
 464:	b	8b8 <coda_inflate_fast+0x8b8>
 468:	ldr	r2, [sp, #64]	; 0x40
 46c:	str	ip, [sp, #4]
 470:	add	ip, r9, #1
 474:	str	r8, [sp, #16]
 478:	cmp	ip, r2
 47c:	bcs	580 <coda_inflate_fast+0x580>
 480:	ldr	r2, [sp, #60]	; 0x3c
 484:	ldr	r4, [sp, #8]
 488:	sub	r0, r9, r0
 48c:	sub	r0, r0, sl
 490:	add	r2, r9, r2
 494:	add	r2, r2, r4
 498:	ldr	r4, [sp, #44]	; 0x2c
 49c:	add	r0, r4, r0
 4a0:	cmp	r0, r2
 4a4:	bcs	580 <coda_inflate_fast+0x580>
 4a8:	ldr	r8, [sp, #16]
 4ac:	ldr	ip, [sp, #4]
 4b0:	mov	r2, r9
 4b4:	mov	sl, r5
 4b8:	mov	r4, r5
 4bc:	mvn	r6, #0
 4c0:	b	5c4 <coda_inflate_fast+0x5c4>
 4c4:	ldr	r2, [sp, #64]	; 0x40
 4c8:	mov	r5, ip
 4cc:	add	ip, r9, #1
 4d0:	str	r8, [sp, #16]
 4d4:	cmp	ip, r2
 4d8:	bcs	5e0 <coda_inflate_fast+0x5e0>
 4dc:	ldr	r2, [sp, #48]	; 0x30
 4e0:	mov	r6, r4
 4e4:	ldr	r4, [sp, #8]
 4e8:	sub	r0, r9, r0
 4ec:	sub	r0, r0, sl
 4f0:	add	r2, r9, r2
 4f4:	add	r2, r2, r4
 4f8:	ldr	r4, [sp, #36]	; 0x24
 4fc:	add	r0, r4, r0
 500:	mov	r4, r6
 504:	cmp	r0, r2
 508:	bcs	5e0 <coda_inflate_fast+0x5e0>
 50c:	ldr	r8, [sp, #16]
 510:	mov	r2, r9
 514:	mov	sl, r7
 518:	mvn	r6, #0
 51c:	mov	ip, r5
 520:	b	628 <coda_inflate_fast+0x628>
 524:	ldr	r2, [sp, #52]	; 0x34
 528:	str	ip, [sp, #4]
 52c:	add	ip, r9, #1
 530:	str	r8, [sp, #16]
 534:	cmp	ip, r2
 538:	bcs	748 <coda_inflate_fast+0x748>
 53c:	ldr	r2, [sp, #60]	; 0x3c
 540:	ldr	r4, [sp, #8]
 544:	sub	r0, r9, r0
 548:	sub	r0, r0, sl
 54c:	add	r2, r9, r2
 550:	add	r2, r2, r4
 554:	ldr	r4, [sp, #40]	; 0x28
 558:	add	r0, r4, r0
 55c:	cmp	r0, r2
 560:	bcs	748 <coda_inflate_fast+0x748>
 564:	ldr	r8, [sp, #16]
 568:	ldr	ip, [sp, #4]
 56c:	mov	r2, r9
 570:	mov	sl, r5
 574:	mov	r4, r5
 578:	mvn	r6, #0
 57c:	b	78c <coda_inflate_fast+0x78c>
 580:	bic	r6, r5, #15
 584:	add	r0, r7, r6
 588:	sub	r4, r5, r6
 58c:	add	r2, r9, r6
 590:	add	r7, r7, #1
 594:	str	r0, [sp]
 598:	mov	r0, r6
 59c:	vld1.8	{d16-d17}, [r7]!
 5a0:	subs	r0, r0, #16
 5a4:	vst1.8	{d16-d17}, [ip]!
 5a8:	bne	59c <coda_inflate_fast+0x59c>
 5ac:	ldr	r8, [sp, #16]
 5b0:	ldm	sp, {r7, ip}
 5b4:	cmp	r5, r6
 5b8:	mov	sl, r5
 5bc:	mvn	r6, #0
 5c0:	beq	7a4 <coda_inflate_fast+0x7a4>
 5c4:	add	r0, r7, #1
 5c8:	add	r7, r2, #1
 5cc:	ldrb	r2, [r0], #1
 5d0:	subs	r4, r4, #1
 5d4:	strb	r2, [r7], #1
 5d8:	bne	5cc <coda_inflate_fast+0x5cc>
 5dc:	b	7a4 <coda_inflate_fast+0x7a4>
 5e0:	bic	r6, r4, #15
 5e4:	mov	r2, r4
 5e8:	add	r0, r9, r6
 5ec:	add	sl, r7, r6
 5f0:	sub	r4, r4, r6
 5f4:	add	r7, r7, #1
 5f8:	str	r0, [sp, #4]
 5fc:	mov	r0, r6
 600:	vld1.8	{d16-d17}, [r7]!
 604:	subs	r0, r0, #16
 608:	vst1.8	{d16-d17}, [ip]!
 60c:	bne	600 <coda_inflate_fast+0x600>
 610:	cmp	r2, r6
 614:	ldr	r8, [sp, #16]
 618:	ldr	r2, [sp, #4]
 61c:	mvn	r6, #0
 620:	mov	ip, r5
 624:	beq	640 <coda_inflate_fast+0x640>
 628:	add	r0, sl, #1
 62c:	add	r7, r2, #1
 630:	ldrb	r2, [r0], #1
 634:	subs	r4, r4, #1
 638:	strb	r2, [r7], #1
 63c:	bne	630 <coda_inflate_fast+0x630>
 640:	ldr	r0, [sp, #56]	; 0x38
 644:	ldr	sl, [sp, #8]
 648:	ldr	r7, [fp, #-64]	; 0xffffffc0
 64c:	ldr	r2, [fp, #-40]	; 0xffffffd8
 650:	add	r0, r9, r0
 654:	cmp	r2, r7
 658:	add	r0, r0, sl
 65c:	bls	6ec <coda_inflate_fast+0x6ec>
 660:	ldr	r2, [fp, #-52]	; 0xffffffcc
 664:	mov	r6, ip
 668:	cmp	r7, #16
 66c:	add	ip, r9, r2
 670:	bcc	6a4 <coda_inflate_fast+0x6a4>
 674:	ldr	r2, [sp, #48]	; 0x30
 678:	ldr	r4, [sp, #52]	; 0x34
 67c:	add	r2, r9, r2
 680:	add	r2, r2, sl
 684:	cmp	r2, r4
 688:	bcs	82c <coda_inflate_fast+0x82c>
 68c:	ldr	r2, [sp, #60]	; 0x3c
 690:	ldr	r4, [sp, #32]
 694:	add	r2, r9, r2
 698:	add	r2, r2, sl
 69c:	cmp	r4, r2
 6a0:	bcs	82c <coda_inflate_fast+0x82c>
 6a4:	ldr	r2, [fp, #-68]	; 0xffffffbc
 6a8:	mov	r5, r0
 6ac:	mov	r0, r7
 6b0:	add	r4, r2, #1
 6b4:	add	r5, r5, #1
 6b8:	ldrb	r2, [r4], #1
 6bc:	subs	r0, r0, #1
 6c0:	strb	r2, [r5], #1
 6c4:	bne	6b8 <coda_inflate_fast+0x6b8>
 6c8:	ldr	r5, [fp, #-40]	; 0xffffffd8
 6cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
 6d0:	add	r9, ip, sl
 6d4:	sub	r5, r5, r7
 6d8:	sub	r7, r9, r6
 6dc:	mvn	r6, #0
 6e0:	cmp	r5, #3
 6e4:	bcc	704 <coda_inflate_fast+0x704>
 6e8:	b	7cc <coda_inflate_fast+0x7cc>
 6ec:	ldr	r7, [fp, #-68]	; 0xffffffbc
 6f0:	mov	r9, r0
 6f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
 6f8:	ldr	r5, [fp, #-40]	; 0xffffffd8
 6fc:	cmp	r5, #3
 700:	bcs	7cc <coda_inflate_fast+0x7cc>
 704:	ldr	sl, [fp, #-60]	; 0xffffffc4
 708:	mov	r0, r5
 70c:	mov	r5, r2
 710:	cmp	r0, #0
 714:	beq	81c <coda_inflate_fast+0x81c>
 718:	ldrb	r6, [r7, #1]
 71c:	mov	r2, r9
 720:	cmp	r0, #1
 724:	strb	r6, [r2, #1]!
 728:	mvn	r6, #0
 72c:	ldrbne	r0, [r7, #2]
 730:	ldr	r7, [sp, #12]
 734:	moveq	r9, r2
 738:	strbne	r0, [r9, #2]!
 73c:	cmp	r9, sl
 740:	bcc	1a8 <coda_inflate_fast+0x1a8>
 744:	b	8b8 <coda_inflate_fast+0x8b8>
 748:	bic	r6, r5, #15
 74c:	add	r0, r7, r6
 750:	sub	r4, r5, r6
 754:	add	r2, r9, r6
 758:	add	r7, r7, #1
 75c:	str	r0, [sp]
 760:	mov	r0, r6
 764:	vld1.8	{d16-d17}, [r7]!
 768:	subs	r0, r0, #16
 76c:	vst1.8	{d16-d17}, [ip]!
 770:	bne	764 <coda_inflate_fast+0x764>
 774:	ldr	r8, [sp, #16]
 778:	ldm	sp, {r7, ip}
 77c:	cmp	r5, r6
 780:	mov	sl, r5
 784:	mvn	r6, #0
 788:	beq	7a4 <coda_inflate_fast+0x7a4>
 78c:	add	r0, r7, #1
 790:	add	r7, r2, #1
 794:	ldrb	r2, [r0], #1
 798:	subs	r4, r4, #1
 79c:	strb	r2, [r7], #1
 7a0:	bne	794 <coda_inflate_fast+0x794>
 7a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
 7a8:	ldr	r2, [sp, #8]
 7ac:	ldr	r5, [fp, #-40]	; 0xffffffd8
 7b0:	add	r0, r9, r0
 7b4:	sub	r5, r5, sl
 7b8:	add	r9, r0, r2
 7bc:	sub	r7, r9, ip
 7c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
 7c4:	cmp	r5, #3
 7c8:	bcc	704 <coda_inflate_fast+0x704>
 7cc:	mov	r4, #0
 7d0:	sub	r2, r7, r4
 7d4:	sub	r0, r9, r4
 7d8:	sub	r4, r4, #3
 7dc:	ldrb	r6, [r2, #1]
 7e0:	strb	r6, [r0, #1]
 7e4:	ldrb	r6, [r2, #2]
 7e8:	strb	r6, [r0, #2]
 7ec:	ldrb	r2, [r2, #3]
 7f0:	strb	r2, [r0, #3]
 7f4:	add	r0, r5, r4
 7f8:	cmp	r0, #2
 7fc:	bhi	7d0 <coda_inflate_fast+0x7d0>
 800:	ldr	sl, [fp, #-60]	; 0xffffffc4
 804:	ldr	r5, [fp, #-56]	; 0xffffffc8
 808:	sub	r9, r9, r4
 80c:	sub	r7, r7, r4
 810:	mvn	r6, #0
 814:	cmp	r0, #0
 818:	bne	718 <coda_inflate_fast+0x718>
 81c:	ldr	r7, [sp, #12]
 820:	cmp	r9, sl
 824:	bcc	1a8 <coda_inflate_fast+0x1a8>
 828:	b	8b8 <coda_inflate_fast+0x8b8>
 82c:	ldr	r4, [sp, #28]
 830:	ldr	r7, [sp, #32]
 834:	add	r5, r0, r4
 838:	add	r0, r0, #1
 83c:	vld1.8	{d16-d17}, [r7]!
 840:	subs	r4, r4, #16
 844:	vst1.8	{d16-d17}, [r0]!
 848:	bne	83c <coda_inflate_fast+0x83c>
 84c:	ldr	r7, [fp, #-64]	; 0xffffffc0
 850:	ldr	r0, [sp, #28]
 854:	ldr	r2, [sp, #20]
 858:	cmp	r7, r0
 85c:	ldr	r0, [sp, #24]
 860:	bne	6b0 <coda_inflate_fast+0x6b0>
 864:	b	6c8 <coda_inflate_fast+0x6c8>
 868:	mov	r0, #11
 86c:	tst	r2, #32
 870:	bne	888 <coda_inflate_fast+0x888>
 874:	mov	r2, r5
 878:	movw	r5, #0
 87c:	mov	r7, ip
 880:	movt	r5, #0
 884:	b	8a4 <coda_inflate_fast+0x8a4>
 888:	mov	r7, ip
 88c:	b	8b4 <coda_inflate_fast+0x8b4>
 890:	ldr	sl, [fp, #-60]	; 0xffffffc4
 894:	ldr	r2, [fp, #-56]	; 0xffffffc8
 898:	movw	r5, #0
 89c:	mov	r7, ip
 8a0:	movt	r5, #0
 8a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
 8a8:	str	r5, [r0, #24]
 8ac:	mov	r0, #29
 8b0:	mov	r5, r2
 8b4:	str	r0, [r8]
 8b8:	ldr	r6, [fp, #-36]	; 0xffffffdc
 8bc:	add	r0, r9, #1
 8c0:	str	r0, [r6, #12]
 8c4:	sub	r0, r7, r1, lsr #3
 8c8:	add	r7, r5, #5
 8cc:	add	r2, r0, #1
 8d0:	sub	r0, r7, r0
 8d4:	str	r2, [r6]
 8d8:	str	r0, [r6, #4]
 8dc:	movw	r0, #257	; 0x101
 8e0:	add	r0, sl, r0
 8e4:	sub	r0, r0, r9
 8e8:	str	r0, [r6, #16]
 8ec:	and	r0, r1, #7
 8f0:	mvn	r1, #0
 8f4:	bic	r1, r3, r1, lsl r0
 8f8:	str	r1, [r8, #56]	; 0x38
 8fc:	str	r0, [r8, #60]	; 0x3c
 900:	sub	sp, fp, #28
 904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 908:	ldr	sl, [fp, #-60]	; 0xffffffc4
 90c:	ldr	r2, [fp, #-56]	; 0xffffffc8
 910:	movw	r5, #0
 914:	movt	r5, #0
 918:	b	8a4 <coda_inflate_fast+0x8a4>
