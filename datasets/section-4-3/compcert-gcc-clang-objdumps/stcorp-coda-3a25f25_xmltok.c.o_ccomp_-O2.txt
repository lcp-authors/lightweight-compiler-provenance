
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/expat/xmltok.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <isNever>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	mov	r0, #0
      14:	ldr	lr, [sp, #4]
      18:	add	sp, sp, #8
      1c:	bx	lr

00000020 <utf8_isName2>:
      20:	mov	ip, sp
      24:	sub	sp, sp, #16
      28:	str	ip, [sp]
      2c:	str	lr, [sp, #4]
      30:	str	r4, [sp, #8]
      34:	ldr	r4, [pc, #80]	; 8c <utf8_isName2+0x6c>
      38:	ldrb	r0, [r1]
      3c:	and	r2, r0, #3
      40:	lsl	ip, r2, #1
      44:	ldr	r2, [pc, #68]	; 90 <utf8_isName2+0x70>
      48:	asr	r3, r0, #2
      4c:	and	r3, r3, #7
      50:	ldrb	r0, [r2, r3]
      54:	add	r2, ip, r0, lsl #3
      58:	ldrb	r1, [r1, #1]
      5c:	asr	r3, r1, #5
      60:	and	r3, r3, #1
      64:	add	r3, r2, r3
      68:	ldr	r0, [r4, r3, lsl #2]
      6c:	mov	ip, #1
      70:	and	r1, r1, #31
      74:	lsl	ip, ip, r1
      78:	and	r0, r0, ip
      7c:	ldr	r4, [sp, #8]
      80:	ldr	lr, [sp, #4]
      84:	add	sp, sp, #16
      88:	bx	lr
      8c:	.word	0x00000000
      90:	.word	0x00000600

00000094 <utf8_isName3>:
      94:	mov	ip, sp
      98:	sub	sp, sp, #16
      9c:	str	ip, [sp]
      a0:	str	lr, [sp, #4]
      a4:	str	r4, [sp, #8]
      a8:	str	r5, [sp, #12]
      ac:	ldr	r4, [pc, #96]	; 114 <utf8_isName3+0x80>
      b0:	ldrb	r2, [r1, #1]
      b4:	and	r3, r2, #3
      b8:	lsl	r5, r3, #1
      bc:	ldr	r3, [pc, #84]	; 118 <utf8_isName3+0x84>
      c0:	asr	ip, r2, #2
      c4:	and	r2, ip, #15
      c8:	ldrb	r0, [r1]
      cc:	and	ip, r0, #15
      d0:	add	ip, r2, ip, lsl #4
      d4:	ldrb	r2, [r3, ip]
      d8:	add	r2, r5, r2, lsl #3
      dc:	ldrb	r0, [r1, #2]
      e0:	asr	ip, r0, #5
      e4:	and	r3, ip, #1
      e8:	add	r1, r2, r3
      ec:	ldr	ip, [r4, r1, lsl #2]
      f0:	mov	r1, #1
      f4:	and	r2, r0, #31
      f8:	lsl	r0, r1, r2
      fc:	and	r0, ip, r0
     100:	ldr	r4, [sp, #8]
     104:	ldr	r5, [sp, #12]
     108:	ldr	lr, [sp, #4]
     10c:	add	sp, sp, #16
     110:	bx	lr
     114:	.word	0x00000000
     118:	.word	0x00000600

0000011c <utf8_isNmstrt2>:
     11c:	mov	ip, sp
     120:	sub	sp, sp, #16
     124:	str	ip, [sp]
     128:	str	lr, [sp, #4]
     12c:	str	r4, [sp, #8]
     130:	ldr	r4, [pc, #80]	; 188 <utf8_isNmstrt2+0x6c>
     134:	ldrb	r0, [r1]
     138:	and	r2, r0, #3
     13c:	lsl	ip, r2, #1
     140:	ldr	r2, [pc, #68]	; 18c <utf8_isNmstrt2+0x70>
     144:	asr	r3, r0, #2
     148:	and	r3, r3, #7
     14c:	ldrb	r0, [r2, r3]
     150:	add	r2, ip, r0, lsl #3
     154:	ldrb	r1, [r1, #1]
     158:	asr	r3, r1, #5
     15c:	and	r3, r3, #1
     160:	add	r3, r2, r3
     164:	ldr	r0, [r4, r3, lsl #2]
     168:	mov	ip, #1
     16c:	and	r1, r1, #31
     170:	lsl	ip, ip, r1
     174:	and	r0, r0, ip
     178:	ldr	r4, [sp, #8]
     17c:	ldr	lr, [sp, #4]
     180:	add	sp, sp, #16
     184:	bx	lr
     188:	.word	0x00000000
     18c:	.word	0x00000500

00000190 <utf8_isNmstrt3>:
     190:	mov	ip, sp
     194:	sub	sp, sp, #16
     198:	str	ip, [sp]
     19c:	str	lr, [sp, #4]
     1a0:	str	r4, [sp, #8]
     1a4:	str	r5, [sp, #12]
     1a8:	ldr	r4, [pc, #96]	; 210 <utf8_isNmstrt3+0x80>
     1ac:	ldrb	r2, [r1, #1]
     1b0:	and	r3, r2, #3
     1b4:	lsl	r5, r3, #1
     1b8:	ldr	r3, [pc, #84]	; 214 <utf8_isNmstrt3+0x84>
     1bc:	asr	ip, r2, #2
     1c0:	and	r2, ip, #15
     1c4:	ldrb	r0, [r1]
     1c8:	and	ip, r0, #15
     1cc:	add	ip, r2, ip, lsl #4
     1d0:	ldrb	r2, [r3, ip]
     1d4:	add	r2, r5, r2, lsl #3
     1d8:	ldrb	r0, [r1, #2]
     1dc:	asr	ip, r0, #5
     1e0:	and	r3, ip, #1
     1e4:	add	r1, r2, r3
     1e8:	ldr	ip, [r4, r1, lsl #2]
     1ec:	mov	r1, #1
     1f0:	and	r2, r0, #31
     1f4:	lsl	r0, r1, r2
     1f8:	and	r0, ip, r0
     1fc:	ldr	r4, [sp, #8]
     200:	ldr	r5, [sp, #12]
     204:	ldr	lr, [sp, #4]
     208:	add	sp, sp, #16
     20c:	bx	lr
     210:	.word	0x00000000
     214:	.word	0x00000500

00000218 <utf8_isInvalid2>:
     218:	mov	ip, sp
     21c:	sub	sp, sp, #8
     220:	str	ip, [sp]
     224:	str	lr, [sp, #4]
     228:	ldrb	r2, [r1]
     22c:	cmp	r2, #194	; 0xc2
     230:	blt	258 <utf8_isInvalid2+0x40>
     234:	ldrb	r0, [r1, #1]
     238:	and	r1, r0, #128	; 0x80
     23c:	cmp	r1, #0
     240:	beq	258 <utf8_isInvalid2+0x40>
     244:	and	r0, r0, #192	; 0xc0
     248:	cmp	r0, #192	; 0xc0
     24c:	moveq	r0, #1
     250:	movne	r0, #0
     254:	b	25c <utf8_isInvalid2+0x44>
     258:	mov	r0, #1
     25c:	ldr	lr, [sp, #4]
     260:	add	sp, sp, #8
     264:	bx	lr

00000268 <utf8_isInvalid3>:
     268:	mov	ip, sp
     26c:	sub	sp, sp, #8
     270:	str	ip, [sp]
     274:	str	lr, [sp, #4]
     278:	ldrb	ip, [r1, #2]
     27c:	and	r3, ip, #128	; 0x80
     280:	cmp	r3, #0
     284:	beq	344 <utf8_isInvalid3+0xdc>
     288:	ldrb	r2, [r1]
     28c:	cmp	r2, #239	; 0xef
     290:	bne	2b0 <utf8_isInvalid3+0x48>
     294:	ldrb	r0, [r1, #1]
     298:	cmp	r0, #191	; 0xbf
     29c:	bne	2b0 <utf8_isInvalid3+0x48>
     2a0:	cmp	ip, #189	; 0xbd
     2a4:	movgt	r0, #1
     2a8:	movle	r0, #0
     2ac:	b	2c4 <utf8_isInvalid3+0x5c>
     2b0:	ldrb	r0, [r1, #2]
     2b4:	and	r2, r0, #192	; 0xc0
     2b8:	cmp	r2, #192	; 0xc0
     2bc:	moveq	r0, #1
     2c0:	movne	r0, #0
     2c4:	cmp	r0, #0
     2c8:	bne	344 <utf8_isInvalid3+0xdc>
     2cc:	ldrb	r3, [r1]
     2d0:	cmp	r3, #224	; 0xe0
     2d4:	beq	31c <utf8_isInvalid3+0xb4>
     2d8:	ldrb	r1, [r1, #1]
     2dc:	and	ip, r1, #128	; 0x80
     2e0:	cmp	ip, #0
     2e4:	beq	314 <utf8_isInvalid3+0xac>
     2e8:	cmp	r3, #237	; 0xed
     2ec:	beq	304 <utf8_isInvalid3+0x9c>
     2f0:	and	r0, r1, #192	; 0xc0
     2f4:	cmp	r0, #192	; 0xc0
     2f8:	moveq	r0, #1
     2fc:	movne	r0, #0
     300:	b	348 <utf8_isInvalid3+0xe0>
     304:	cmp	r1, #159	; 0x9f
     308:	movgt	r0, #1
     30c:	movle	r0, #0
     310:	b	348 <utf8_isInvalid3+0xe0>
     314:	mov	r0, #1
     318:	b	348 <utf8_isInvalid3+0xe0>
     31c:	ldrb	r2, [r1, #1]
     320:	cmp	r2, #160	; 0xa0
     324:	blt	33c <utf8_isInvalid3+0xd4>
     328:	and	r0, r2, #192	; 0xc0
     32c:	cmp	r0, #192	; 0xc0
     330:	moveq	r0, #1
     334:	movne	r0, #0
     338:	b	348 <utf8_isInvalid3+0xe0>
     33c:	mov	r0, #1
     340:	b	348 <utf8_isInvalid3+0xe0>
     344:	mov	r0, #1
     348:	ldr	lr, [sp, #4]
     34c:	add	sp, sp, #8
     350:	bx	lr

00000354 <utf8_isInvalid4>:
     354:	mov	ip, sp
     358:	sub	sp, sp, #8
     35c:	str	ip, [sp]
     360:	str	lr, [sp, #4]
     364:	ldrb	r3, [r1, #3]
     368:	and	r0, r3, #128	; 0x80
     36c:	cmp	r0, #0
     370:	beq	414 <utf8_isInvalid4+0xc0>
     374:	and	ip, r3, #192	; 0xc0
     378:	cmp	ip, #192	; 0xc0
     37c:	beq	414 <utf8_isInvalid4+0xc0>
     380:	ldrb	r0, [r1, #2]
     384:	and	r2, r0, #128	; 0x80
     388:	cmp	r2, #0
     38c:	beq	414 <utf8_isInvalid4+0xc0>
     390:	and	r2, r0, #192	; 0xc0
     394:	cmp	r2, #192	; 0xc0
     398:	beq	414 <utf8_isInvalid4+0xc0>
     39c:	ldrb	ip, [r1]
     3a0:	cmp	ip, #240	; 0xf0
     3a4:	beq	3ec <utf8_isInvalid4+0x98>
     3a8:	ldrb	r1, [r1, #1]
     3ac:	and	r3, r1, #128	; 0x80
     3b0:	cmp	r3, #0
     3b4:	beq	3e4 <utf8_isInvalid4+0x90>
     3b8:	cmp	ip, #244	; 0xf4
     3bc:	beq	3d4 <utf8_isInvalid4+0x80>
     3c0:	and	r0, r1, #192	; 0xc0
     3c4:	cmp	r0, #192	; 0xc0
     3c8:	moveq	r0, #1
     3cc:	movne	r0, #0
     3d0:	b	418 <utf8_isInvalid4+0xc4>
     3d4:	cmp	r1, #143	; 0x8f
     3d8:	movgt	r0, #1
     3dc:	movle	r0, #0
     3e0:	b	418 <utf8_isInvalid4+0xc4>
     3e4:	mov	r0, #1
     3e8:	b	418 <utf8_isInvalid4+0xc4>
     3ec:	ldrb	r2, [r1, #1]
     3f0:	cmp	r2, #144	; 0x90
     3f4:	blt	40c <utf8_isInvalid4+0xb8>
     3f8:	and	r0, r2, #192	; 0xc0
     3fc:	cmp	r0, #192	; 0xc0
     400:	moveq	r0, #1
     404:	movne	r0, #0
     408:	b	418 <utf8_isInvalid4+0xc4>
     40c:	mov	r0, #1
     410:	b	418 <utf8_isInvalid4+0xc4>
     414:	mov	r0, #1
     418:	ldr	lr, [sp, #4]
     41c:	add	sp, sp, #8
     420:	bx	lr

00000424 <normal_scanComment>:
     424:	mov	ip, sp
     428:	sub	sp, sp, #24
     42c:	str	ip, [sp]
     430:	str	lr, [sp, #4]
     434:	str	r4, [sp, #8]
     438:	str	r5, [sp, #12]
     43c:	str	r6, [sp, #16]
     440:	str	r7, [sp, #20]
     444:	mov	r6, r3
     448:	mov	r7, r2
     44c:	mov	r5, r0
     450:	cmp	r1, r7
     454:	beq	5fc <normal_scanComment+0x1d8>
     458:	ldrb	r0, [r1]
     45c:	cmp	r0, #45	; 0x2d
     460:	beq	470 <normal_scanComment+0x4c>
     464:	str	r1, [r6]
     468:	mov	r0, #0
     46c:	b	600 <normal_scanComment+0x1dc>
     470:	add	r4, r1, #1
     474:	cmp	r4, r7
     478:	beq	5fc <normal_scanComment+0x1d8>
     47c:	ldrb	r2, [r4]
     480:	and	r3, r2, #255	; 0xff
     484:	add	r2, r5, r3
     488:	ldrb	r2, [r2, #76]	; 0x4c
     48c:	cmp	r2, #6
     490:	bcs	4ec <normal_scanComment+0xc8>
     494:	cmp	r2, #0
     498:	beq	5f0 <normal_scanComment+0x1cc>
     49c:	cmp	r2, #1
     4a0:	beq	5f0 <normal_scanComment+0x1cc>
     4a4:	cmp	r2, #5
     4a8:	bne	5e8 <normal_scanComment+0x1c4>
     4ac:	sub	ip, r7, r4
     4b0:	cmp	ip, #2
     4b4:	bge	4c0 <normal_scanComment+0x9c>
     4b8:	mvn	r0, #1
     4bc:	b	600 <normal_scanComment+0x1dc>
     4c0:	ldr	ip, [r5, #356]	; 0x164
     4c4:	mov	r1, r4
     4c8:	mov	r0, r5
     4cc:	blx	ip
     4d0:	cmp	r0, #0
     4d4:	beq	4e4 <normal_scanComment+0xc0>
     4d8:	str	r4, [r6]
     4dc:	mov	r0, #0
     4e0:	b	600 <normal_scanComment+0x1dc>
     4e4:	add	r4, r4, #2
     4e8:	b	474 <normal_scanComment+0x50>
     4ec:	cmp	r2, #8
     4f0:	bcs	57c <normal_scanComment+0x158>
     4f4:	cmp	r2, #6
     4f8:	bne	53c <normal_scanComment+0x118>
     4fc:	sub	r0, r7, r4
     500:	cmp	r0, #3
     504:	bge	510 <normal_scanComment+0xec>
     508:	mvn	r0, #1
     50c:	b	600 <normal_scanComment+0x1dc>
     510:	ldr	ip, [r5, #360]	; 0x168
     514:	mov	r1, r4
     518:	mov	r0, r5
     51c:	blx	ip
     520:	cmp	r0, #0
     524:	beq	534 <normal_scanComment+0x110>
     528:	str	r4, [r6]
     52c:	mov	r0, #0
     530:	b	600 <normal_scanComment+0x1dc>
     534:	add	r4, r4, #3
     538:	b	474 <normal_scanComment+0x50>
     53c:	sub	r0, r7, r4
     540:	cmp	r0, #4
     544:	bge	550 <normal_scanComment+0x12c>
     548:	mvn	r0, #1
     54c:	b	600 <normal_scanComment+0x1dc>
     550:	ldr	ip, [r5, #364]	; 0x16c
     554:	mov	r1, r4
     558:	mov	r0, r5
     55c:	blx	ip
     560:	cmp	r0, #0
     564:	beq	574 <normal_scanComment+0x150>
     568:	str	r4, [r6]
     56c:	mov	r0, #0
     570:	b	600 <normal_scanComment+0x1dc>
     574:	add	r4, r4, #4
     578:	b	474 <normal_scanComment+0x50>
     57c:	cmp	r2, #8
     580:	beq	5f0 <normal_scanComment+0x1cc>
     584:	cmp	r2, #27
     588:	bne	5e8 <normal_scanComment+0x1c4>
     58c:	add	r4, r4, #1
     590:	cmp	r4, r7
     594:	bne	5a0 <normal_scanComment+0x17c>
     598:	mvn	r0, #0
     59c:	b	600 <normal_scanComment+0x1dc>
     5a0:	ldrb	r1, [r4]
     5a4:	cmp	r1, #45	; 0x2d
     5a8:	bne	474 <normal_scanComment+0x50>
     5ac:	add	r0, r4, #1
     5b0:	cmp	r0, r7
     5b4:	bne	5c0 <normal_scanComment+0x19c>
     5b8:	mvn	r0, #0
     5bc:	b	600 <normal_scanComment+0x1dc>
     5c0:	ldrb	r3, [r4, #1]
     5c4:	cmp	r3, #62	; 0x3e
     5c8:	beq	5d8 <normal_scanComment+0x1b4>
     5cc:	str	r0, [r6]
     5d0:	mov	r0, #0
     5d4:	b	600 <normal_scanComment+0x1dc>
     5d8:	add	r3, r4, #2
     5dc:	str	r3, [r6]
     5e0:	mov	r0, #13
     5e4:	b	600 <normal_scanComment+0x1dc>
     5e8:	add	r4, r4, #1
     5ec:	b	474 <normal_scanComment+0x50>
     5f0:	str	r4, [r6]
     5f4:	mov	r0, #0
     5f8:	b	600 <normal_scanComment+0x1dc>
     5fc:	mvn	r0, #0
     600:	ldr	r4, [sp, #8]
     604:	ldr	r5, [sp, #12]
     608:	ldr	r6, [sp, #16]
     60c:	ldr	r7, [sp, #20]
     610:	ldr	lr, [sp, #4]
     614:	add	sp, sp, #24
     618:	bx	lr

0000061c <normal_checkPiTarget>:
     61c:	mov	ip, sp
     620:	sub	sp, sp, #16
     624:	str	ip, [sp]
     628:	str	lr, [sp, #4]
     62c:	str	r4, [sp, #8]
     630:	mov	r4, #0
     634:	mov	ip, #11
     638:	str	ip, [r3]
     63c:	sub	ip, r2, r1
     640:	cmp	ip, #3
     644:	beq	650 <normal_checkPiTarget+0x34>
     648:	mov	r0, #1
     64c:	b	6d0 <normal_checkPiTarget+0xb4>
     650:	ldrb	ip, [r1]
     654:	cmp	ip, #88	; 0x58
     658:	beq	66c <normal_checkPiTarget+0x50>
     65c:	cmp	ip, #120	; 0x78
     660:	beq	670 <normal_checkPiTarget+0x54>
     664:	mov	r0, #1
     668:	b	6d0 <normal_checkPiTarget+0xb4>
     66c:	mov	r4, #1
     670:	add	r0, r1, #1
     674:	ldrb	r2, [r0]
     678:	cmp	r2, #77	; 0x4d
     67c:	beq	690 <normal_checkPiTarget+0x74>
     680:	cmp	r2, #109	; 0x6d
     684:	beq	694 <normal_checkPiTarget+0x78>
     688:	mov	r0, #1
     68c:	b	6d0 <normal_checkPiTarget+0xb4>
     690:	mov	r4, #1
     694:	add	r2, r0, #1
     698:	ldrb	r1, [r2]
     69c:	cmp	r1, #76	; 0x4c
     6a0:	beq	6cc <normal_checkPiTarget+0xb0>
     6a4:	cmp	r1, #108	; 0x6c
     6a8:	beq	6b4 <normal_checkPiTarget+0x98>
     6ac:	mov	r0, #1
     6b0:	b	6d0 <normal_checkPiTarget+0xb4>
     6b4:	cmp	r4, #0
     6b8:	bne	6cc <normal_checkPiTarget+0xb0>
     6bc:	mov	r0, #12
     6c0:	str	r0, [r3]
     6c4:	mov	r0, #1
     6c8:	b	6d0 <normal_checkPiTarget+0xb4>
     6cc:	mov	r0, #0
     6d0:	ldr	r4, [sp, #8]
     6d4:	ldr	lr, [sp, #4]
     6d8:	add	sp, sp, #16
     6dc:	bx	lr

000006e0 <normal_scanPi>:
     6e0:	mov	ip, sp
     6e4:	sub	sp, sp, #40	; 0x28
     6e8:	str	ip, [sp]
     6ec:	str	lr, [sp, #4]
     6f0:	str	r4, [sp, #8]
     6f4:	str	r5, [sp, #12]
     6f8:	str	r6, [sp, #16]
     6fc:	str	r7, [sp, #20]
     700:	str	r8, [sp, #24]
     704:	str	r9, [sp, #28]
     708:	mov	r7, r3
     70c:	mov	r8, r2
     710:	mov	r5, r1
     714:	mov	r6, r0
     718:	cmp	r5, r8
     71c:	bne	728 <normal_scanPi+0x48>
     720:	mvn	r0, #0
     724:	b	bb8 <normal_scanPi+0x4d8>
     728:	ldrb	r2, [r5]
     72c:	and	r0, r2, #255	; 0xff
     730:	add	r0, r6, r0
     734:	ldrb	r1, [r0, #76]	; 0x4c
     738:	cmp	r1, #22
     73c:	bcs	818 <normal_scanPi+0x138>
     740:	cmp	r1, #5
     744:	beq	7d8 <normal_scanPi+0xf8>
     748:	cmp	r1, #6
     74c:	beq	798 <normal_scanPi+0xb8>
     750:	cmp	r1, #7
     754:	bne	83c <normal_scanPi+0x15c>
     758:	sub	r1, r8, r5
     75c:	cmp	r1, #4
     760:	bge	76c <normal_scanPi+0x8c>
     764:	mvn	r0, #1
     768:	b	bb8 <normal_scanPi+0x4d8>
     76c:	ldr	ip, [r6, #352]	; 0x160
     770:	mov	r1, r5
     774:	mov	r0, r6
     778:	blx	ip
     77c:	cmp	r0, #0
     780:	bne	790 <normal_scanPi+0xb0>
     784:	str	r5, [r7]
     788:	mov	r0, #0
     78c:	b	bb8 <normal_scanPi+0x4d8>
     790:	add	r4, r5, #4
     794:	b	84c <normal_scanPi+0x16c>
     798:	sub	r3, r8, r5
     79c:	cmp	r3, #3
     7a0:	bge	7ac <normal_scanPi+0xcc>
     7a4:	mvn	r0, #1
     7a8:	b	bb8 <normal_scanPi+0x4d8>
     7ac:	ldr	ip, [r6, #348]	; 0x15c
     7b0:	mov	r1, r5
     7b4:	mov	r0, r6
     7b8:	blx	ip
     7bc:	cmp	r0, #0
     7c0:	bne	7d0 <normal_scanPi+0xf0>
     7c4:	str	r5, [r7]
     7c8:	mov	r0, #0
     7cc:	b	bb8 <normal_scanPi+0x4d8>
     7d0:	add	r4, r5, #3
     7d4:	b	84c <normal_scanPi+0x16c>
     7d8:	sub	r3, r8, r5
     7dc:	cmp	r3, #2
     7e0:	bge	7ec <normal_scanPi+0x10c>
     7e4:	mvn	r0, #1
     7e8:	b	bb8 <normal_scanPi+0x4d8>
     7ec:	ldr	ip, [r6, #344]	; 0x158
     7f0:	mov	r1, r5
     7f4:	mov	r0, r6
     7f8:	blx	ip
     7fc:	cmp	r0, #0
     800:	bne	810 <normal_scanPi+0x130>
     804:	str	r5, [r7]
     808:	mov	r0, #0
     80c:	b	bb8 <normal_scanPi+0x4d8>
     810:	add	r4, r5, #2
     814:	b	84c <normal_scanPi+0x16c>
     818:	cmp	r1, #22
     81c:	beq	848 <normal_scanPi+0x168>
     820:	cmp	r1, #24
     824:	beq	848 <normal_scanPi+0x168>
     828:	cmp	r1, #29
     82c:	bne	83c <normal_scanPi+0x15c>
     830:	str	r5, [r7]
     834:	mov	r0, #0
     838:	b	bb8 <normal_scanPi+0x4d8>
     83c:	str	r5, [r7]
     840:	mov	r0, #0
     844:	b	bb8 <normal_scanPi+0x4d8>
     848:	add	r4, r5, #1
     84c:	cmp	r4, r8
     850:	beq	bb4 <normal_scanPi+0x4d4>
     854:	ldrb	r2, [r4]
     858:	and	r2, r2, #255	; 0xff
     85c:	add	r3, r6, r2
     860:	ldrb	r1, [r3, #76]	; 0x4c
     864:	sub	r3, r1, #5
     868:	cmp	r3, #25
     86c:	bcs	ba8 <normal_scanPi+0x4c8>
     870:	add	pc, pc, r3, lsl #2
     874:	nop	{0}
     878:	b	8f0 <normal_scanPi+0x210>
     87c:	b	930 <normal_scanPi+0x250>
     880:	b	970 <normal_scanPi+0x290>
     884:	b	ba8 <normal_scanPi+0x4c8>
     888:	b	9b0 <normal_scanPi+0x2d0>
     88c:	b	9b0 <normal_scanPi+0x2d0>
     890:	b	ba8 <normal_scanPi+0x4c8>
     894:	b	ba8 <normal_scanPi+0x4c8>
     898:	b	ba8 <normal_scanPi+0x4c8>
     89c:	b	ba8 <normal_scanPi+0x4c8>
     8a0:	b	b50 <normal_scanPi+0x470>
     8a4:	b	ba8 <normal_scanPi+0x4c8>
     8a8:	b	ba8 <normal_scanPi+0x4c8>
     8ac:	b	ba8 <normal_scanPi+0x4c8>
     8b0:	b	ba8 <normal_scanPi+0x4c8>
     8b4:	b	ba8 <normal_scanPi+0x4c8>
     8b8:	b	9b0 <normal_scanPi+0x2d0>
     8bc:	b	8e8 <normal_scanPi+0x208>
     8c0:	b	ba8 <normal_scanPi+0x4c8>
     8c4:	b	8e8 <normal_scanPi+0x208>
     8c8:	b	8e8 <normal_scanPi+0x208>
     8cc:	b	8e8 <normal_scanPi+0x208>
     8d0:	b	8e8 <normal_scanPi+0x208>
     8d4:	b	ba8 <normal_scanPi+0x4c8>
     8d8:	b	8dc <normal_scanPi+0x1fc>
     8dc:	str	r4, [r7]
     8e0:	mov	r0, #0
     8e4:	b	bb8 <normal_scanPi+0x4d8>
     8e8:	add	r4, r4, #1
     8ec:	b	84c <normal_scanPi+0x16c>
     8f0:	sub	r3, r8, r4
     8f4:	cmp	r3, #2
     8f8:	bge	904 <normal_scanPi+0x224>
     8fc:	mvn	r0, #1
     900:	b	bb8 <normal_scanPi+0x4d8>
     904:	ldr	r9, [r6, #332]	; 0x14c
     908:	mov	r1, r4
     90c:	mov	r0, r6
     910:	blx	r9
     914:	cmp	r0, #0
     918:	bne	928 <normal_scanPi+0x248>
     91c:	str	r4, [r7]
     920:	mov	r0, #0
     924:	b	bb8 <normal_scanPi+0x4d8>
     928:	add	r4, r4, #2
     92c:	b	84c <normal_scanPi+0x16c>
     930:	sub	r3, r8, r4
     934:	cmp	r3, #3
     938:	bge	944 <normal_scanPi+0x264>
     93c:	mvn	r0, #1
     940:	b	bb8 <normal_scanPi+0x4d8>
     944:	ldr	ip, [r6, #336]	; 0x150
     948:	mov	r1, r4
     94c:	mov	r0, r6
     950:	blx	ip
     954:	cmp	r0, #0
     958:	bne	968 <normal_scanPi+0x288>
     95c:	str	r4, [r7]
     960:	mov	r0, #0
     964:	b	bb8 <normal_scanPi+0x4d8>
     968:	add	r4, r4, #3
     96c:	b	84c <normal_scanPi+0x16c>
     970:	sub	r2, r8, r4
     974:	cmp	r2, #4
     978:	bge	984 <normal_scanPi+0x2a4>
     97c:	mvn	r0, #1
     980:	b	bb8 <normal_scanPi+0x4d8>
     984:	ldr	ip, [r6, #340]	; 0x154
     988:	mov	r1, r4
     98c:	mov	r0, r6
     990:	blx	ip
     994:	cmp	r0, #0
     998:	bne	9a8 <normal_scanPi+0x2c8>
     99c:	str	r4, [r7]
     9a0:	mov	r0, #0
     9a4:	b	bb8 <normal_scanPi+0x4d8>
     9a8:	add	r4, r4, #4
     9ac:	b	84c <normal_scanPi+0x16c>
     9b0:	add	r3, sp, #32
     9b4:	mov	r2, r4
     9b8:	mov	r1, r5
     9bc:	mov	r0, r6
     9c0:	bl	61c <normal_checkPiTarget>
     9c4:	cmp	r0, #0
     9c8:	bne	9d8 <normal_scanPi+0x2f8>
     9cc:	str	r4, [r7]
     9d0:	mov	r0, #0
     9d4:	b	bb8 <normal_scanPi+0x4d8>
     9d8:	add	r4, r4, #1
     9dc:	cmp	r4, r8
     9e0:	beq	b48 <normal_scanPi+0x468>
     9e4:	ldrb	r0, [r4]
     9e8:	and	r1, r0, #255	; 0xff
     9ec:	add	r0, r6, r1
     9f0:	ldrb	r0, [r0, #76]	; 0x4c
     9f4:	cmp	r0, #16
     9f8:	bcs	b40 <normal_scanPi+0x460>
     9fc:	add	pc, pc, r0, lsl #2
     a00:	nop	{0}
     a04:	b	b04 <normal_scanPi+0x424>
     a08:	b	b04 <normal_scanPi+0x424>
     a0c:	b	b40 <normal_scanPi+0x460>
     a10:	b	b40 <normal_scanPi+0x460>
     a14:	b	b40 <normal_scanPi+0x460>
     a18:	b	a44 <normal_scanPi+0x364>
     a1c:	b	a84 <normal_scanPi+0x3a4>
     a20:	b	ac4 <normal_scanPi+0x3e4>
     a24:	b	b04 <normal_scanPi+0x424>
     a28:	b	b40 <normal_scanPi+0x460>
     a2c:	b	b40 <normal_scanPi+0x460>
     a30:	b	b40 <normal_scanPi+0x460>
     a34:	b	b40 <normal_scanPi+0x460>
     a38:	b	b40 <normal_scanPi+0x460>
     a3c:	b	b40 <normal_scanPi+0x460>
     a40:	b	b10 <normal_scanPi+0x430>
     a44:	sub	r0, r8, r4
     a48:	cmp	r0, #2
     a4c:	bge	a58 <normal_scanPi+0x378>
     a50:	mvn	r0, #1
     a54:	b	bb8 <normal_scanPi+0x4d8>
     a58:	ldr	r5, [r6, #356]	; 0x164
     a5c:	mov	r1, r4
     a60:	mov	r0, r6
     a64:	blx	r5
     a68:	cmp	r0, #0
     a6c:	beq	a7c <normal_scanPi+0x39c>
     a70:	str	r4, [r7]
     a74:	mov	r0, #0
     a78:	b	bb8 <normal_scanPi+0x4d8>
     a7c:	add	r4, r4, #2
     a80:	b	9dc <normal_scanPi+0x2fc>
     a84:	sub	ip, r8, r4
     a88:	cmp	ip, #3
     a8c:	bge	a98 <normal_scanPi+0x3b8>
     a90:	mvn	r0, #1
     a94:	b	bb8 <normal_scanPi+0x4d8>
     a98:	ldr	ip, [r6, #360]	; 0x168
     a9c:	mov	r1, r4
     aa0:	mov	r0, r6
     aa4:	blx	ip
     aa8:	cmp	r0, #0
     aac:	beq	abc <normal_scanPi+0x3dc>
     ab0:	str	r4, [r7]
     ab4:	mov	r0, #0
     ab8:	b	bb8 <normal_scanPi+0x4d8>
     abc:	add	r4, r4, #3
     ac0:	b	9dc <normal_scanPi+0x2fc>
     ac4:	sub	r1, r8, r4
     ac8:	cmp	r1, #4
     acc:	bge	ad8 <normal_scanPi+0x3f8>
     ad0:	mvn	r0, #1
     ad4:	b	bb8 <normal_scanPi+0x4d8>
     ad8:	ldr	ip, [r6, #364]	; 0x16c
     adc:	mov	r1, r4
     ae0:	mov	r0, r6
     ae4:	blx	ip
     ae8:	cmp	r0, #0
     aec:	beq	afc <normal_scanPi+0x41c>
     af0:	str	r4, [r7]
     af4:	mov	r0, #0
     af8:	b	bb8 <normal_scanPi+0x4d8>
     afc:	add	r4, r4, #4
     b00:	b	9dc <normal_scanPi+0x2fc>
     b04:	str	r4, [r7]
     b08:	mov	r0, #0
     b0c:	b	bb8 <normal_scanPi+0x4d8>
     b10:	add	r4, r4, #1
     b14:	cmp	r4, r8
     b18:	bne	b24 <normal_scanPi+0x444>
     b1c:	mvn	r0, #0
     b20:	b	bb8 <normal_scanPi+0x4d8>
     b24:	ldrb	r0, [r4]
     b28:	cmp	r0, #62	; 0x3e
     b2c:	bne	9dc <normal_scanPi+0x2fc>
     b30:	add	ip, r4, #1
     b34:	str	ip, [r7]
     b38:	ldr	r0, [sp, #32]
     b3c:	b	bb8 <normal_scanPi+0x4d8>
     b40:	add	r4, r4, #1
     b44:	b	9dc <normal_scanPi+0x2fc>
     b48:	mvn	r0, #0
     b4c:	b	bb8 <normal_scanPi+0x4d8>
     b50:	add	r3, sp, #32
     b54:	mov	r2, r4
     b58:	mov	r1, r5
     b5c:	mov	r0, r6
     b60:	bl	61c <normal_checkPiTarget>
     b64:	cmp	r0, #0
     b68:	bne	b78 <normal_scanPi+0x498>
     b6c:	str	r4, [r7]
     b70:	mov	r0, #0
     b74:	b	bb8 <normal_scanPi+0x4d8>
     b78:	add	r4, r4, #1
     b7c:	cmp	r4, r8
     b80:	bne	b8c <normal_scanPi+0x4ac>
     b84:	mvn	r0, #0
     b88:	b	bb8 <normal_scanPi+0x4d8>
     b8c:	ldrb	r0, [r4]
     b90:	cmp	r0, #62	; 0x3e
     b94:	bne	ba8 <normal_scanPi+0x4c8>
     b98:	add	r2, r4, #1
     b9c:	str	r2, [r7]
     ba0:	ldr	r0, [sp, #32]
     ba4:	b	bb8 <normal_scanPi+0x4d8>
     ba8:	str	r4, [r7]
     bac:	mov	r0, #0
     bb0:	b	bb8 <normal_scanPi+0x4d8>
     bb4:	mvn	r0, #0
     bb8:	ldr	r4, [sp, #8]
     bbc:	ldr	r5, [sp, #12]
     bc0:	ldr	r6, [sp, #16]
     bc4:	ldr	r7, [sp, #20]
     bc8:	ldr	r8, [sp, #24]
     bcc:	ldr	r9, [sp, #28]
     bd0:	ldr	lr, [sp, #4]
     bd4:	add	sp, sp, #40	; 0x28
     bd8:	bx	lr

00000bdc <normal_cdataSectionTok>:
     bdc:	mov	ip, sp
     be0:	sub	sp, sp, #24
     be4:	str	ip, [sp]
     be8:	str	lr, [sp, #4]
     bec:	str	r4, [sp, #8]
     bf0:	str	r5, [sp, #12]
     bf4:	str	r6, [sp, #16]
     bf8:	str	r7, [sp, #20]
     bfc:	mov	r6, r3
     c00:	mov	r7, r2
     c04:	mov	r4, r1
     c08:	mov	r5, r0
     c0c:	cmp	r4, r7
     c10:	bne	c1c <normal_cdataSectionTok+0x40>
     c14:	mvn	r0, #3
     c18:	b	ef8 <normal_cdataSectionTok+0x31c>
     c1c:	ldrb	ip, [r4]
     c20:	and	r2, ip, #255	; 0xff
     c24:	add	r1, r5, r2
     c28:	ldrb	r0, [r1, #76]	; 0x4c
     c2c:	cmp	r0, #11
     c30:	bcs	ddc <normal_cdataSectionTok+0x200>
     c34:	add	pc, pc, r0, lsl #2
     c38:	nop	{0}
     c3c:	b	dd0 <normal_cdataSectionTok+0x1f4>
     c40:	b	dd0 <normal_cdataSectionTok+0x1f4>
     c44:	b	ddc <normal_cdataSectionTok+0x200>
     c48:	b	ddc <normal_cdataSectionTok+0x200>
     c4c:	b	c68 <normal_cdataSectionTok+0x8c>
     c50:	b	d10 <normal_cdataSectionTok+0x134>
     c54:	b	d50 <normal_cdataSectionTok+0x174>
     c58:	b	d90 <normal_cdataSectionTok+0x1b4>
     c5c:	b	dd0 <normal_cdataSectionTok+0x1f4>
     c60:	b	cc0 <normal_cdataSectionTok+0xe4>
     c64:	b	d00 <normal_cdataSectionTok+0x124>
     c68:	add	r4, r4, #1
     c6c:	cmp	r4, r7
     c70:	bne	c7c <normal_cdataSectionTok+0xa0>
     c74:	mvn	r0, #0
     c78:	b	ef8 <normal_cdataSectionTok+0x31c>
     c7c:	ldrb	r1, [r4]
     c80:	cmp	r1, #93	; 0x5d
     c84:	bne	de0 <normal_cdataSectionTok+0x204>
     c88:	add	r3, r4, #1
     c8c:	cmp	r3, r7
     c90:	bne	c9c <normal_cdataSectionTok+0xc0>
     c94:	mvn	r0, #0
     c98:	b	ef8 <normal_cdataSectionTok+0x31c>
     c9c:	ldrb	r0, [r3]
     ca0:	cmp	r0, #62	; 0x3e
     ca4:	beq	cb0 <normal_cdataSectionTok+0xd4>
     ca8:	sub	r4, r3, #1
     cac:	b	de0 <normal_cdataSectionTok+0x204>
     cb0:	add	r3, r3, #1
     cb4:	str	r3, [r6]
     cb8:	mov	r0, #40	; 0x28
     cbc:	b	ef8 <normal_cdataSectionTok+0x31c>
     cc0:	add	r3, r4, #1
     cc4:	cmp	r3, r7
     cc8:	bne	cd4 <normal_cdataSectionTok+0xf8>
     ccc:	mvn	r0, #0
     cd0:	b	ef8 <normal_cdataSectionTok+0x31c>
     cd4:	add	r0, r3, #1
     cd8:	ldrb	ip, [r3]
     cdc:	and	r2, ip, #255	; 0xff
     ce0:	add	r1, r5, r2
     ce4:	ldrb	ip, [r1, #76]	; 0x4c
     ce8:	cmp	ip, #10
     cec:	moveq	r1, r0
     cf0:	movne	r1, r3
     cf4:	str	r1, [r6]
     cf8:	mov	r0, #7
     cfc:	b	ef8 <normal_cdataSectionTok+0x31c>
     d00:	add	r3, r4, #1
     d04:	str	r3, [r6]
     d08:	mov	r0, #7
     d0c:	b	ef8 <normal_cdataSectionTok+0x31c>
     d10:	sub	ip, r7, r4
     d14:	cmp	ip, #2
     d18:	bge	d24 <normal_cdataSectionTok+0x148>
     d1c:	mvn	r0, #1
     d20:	b	ef8 <normal_cdataSectionTok+0x31c>
     d24:	ldr	ip, [r5, #356]	; 0x164
     d28:	mov	r1, r4
     d2c:	mov	r0, r5
     d30:	blx	ip
     d34:	cmp	r0, #0
     d38:	beq	d48 <normal_cdataSectionTok+0x16c>
     d3c:	str	r4, [r6]
     d40:	mov	r0, #0
     d44:	b	ef8 <normal_cdataSectionTok+0x31c>
     d48:	add	r4, r4, #2
     d4c:	b	de0 <normal_cdataSectionTok+0x204>
     d50:	sub	r1, r7, r4
     d54:	cmp	r1, #3
     d58:	bge	d64 <normal_cdataSectionTok+0x188>
     d5c:	mvn	r0, #1
     d60:	b	ef8 <normal_cdataSectionTok+0x31c>
     d64:	ldr	ip, [r5, #360]	; 0x168
     d68:	mov	r1, r4
     d6c:	mov	r0, r5
     d70:	blx	ip
     d74:	cmp	r0, #0
     d78:	beq	d88 <normal_cdataSectionTok+0x1ac>
     d7c:	str	r4, [r6]
     d80:	mov	r0, #0
     d84:	b	ef8 <normal_cdataSectionTok+0x31c>
     d88:	add	r4, r4, #3
     d8c:	b	de0 <normal_cdataSectionTok+0x204>
     d90:	sub	r3, r7, r4
     d94:	cmp	r3, #4
     d98:	bge	da4 <normal_cdataSectionTok+0x1c8>
     d9c:	mvn	r0, #1
     da0:	b	ef8 <normal_cdataSectionTok+0x31c>
     da4:	ldr	ip, [r5, #364]	; 0x16c
     da8:	mov	r1, r4
     dac:	mov	r0, r5
     db0:	blx	ip
     db4:	cmp	r0, #0
     db8:	beq	dc8 <normal_cdataSectionTok+0x1ec>
     dbc:	str	r4, [r6]
     dc0:	mov	r0, #0
     dc4:	b	ef8 <normal_cdataSectionTok+0x31c>
     dc8:	add	r4, r4, #4
     dcc:	b	de0 <normal_cdataSectionTok+0x204>
     dd0:	str	r4, [r6]
     dd4:	mov	r0, #0
     dd8:	b	ef8 <normal_cdataSectionTok+0x31c>
     ddc:	add	r4, r4, #1
     de0:	cmp	r4, r7
     de4:	beq	ef0 <normal_cdataSectionTok+0x314>
     de8:	ldrb	r3, [r4]
     dec:	and	ip, r3, #255	; 0xff
     df0:	add	ip, r5, ip
     df4:	ldrb	r1, [ip, #76]	; 0x4c
     df8:	cmp	r1, #11
     dfc:	bcs	ee8 <normal_cdataSectionTok+0x30c>
     e00:	add	pc, pc, r1, lsl #2
     e04:	nop	{0}
     e08:	b	edc <normal_cdataSectionTok+0x300>
     e0c:	b	edc <normal_cdataSectionTok+0x300>
     e10:	b	ee8 <normal_cdataSectionTok+0x30c>
     e14:	b	ee8 <normal_cdataSectionTok+0x30c>
     e18:	b	edc <normal_cdataSectionTok+0x300>
     e1c:	b	e34 <normal_cdataSectionTok+0x258>
     e20:	b	e6c <normal_cdataSectionTok+0x290>
     e24:	b	ea4 <normal_cdataSectionTok+0x2c8>
     e28:	b	edc <normal_cdataSectionTok+0x300>
     e2c:	b	edc <normal_cdataSectionTok+0x300>
     e30:	b	edc <normal_cdataSectionTok+0x300>
     e34:	sub	r2, r7, r4
     e38:	cmp	r2, #2
     e3c:	blt	e60 <normal_cdataSectionTok+0x284>
     e40:	ldr	ip, [r5, #356]	; 0x164
     e44:	mov	r1, r4
     e48:	mov	r0, r5
     e4c:	blx	ip
     e50:	cmp	r0, #0
     e54:	bne	e60 <normal_cdataSectionTok+0x284>
     e58:	add	r4, r4, #2
     e5c:	b	de0 <normal_cdataSectionTok+0x204>
     e60:	str	r4, [r6]
     e64:	mov	r0, #6
     e68:	b	ef8 <normal_cdataSectionTok+0x31c>
     e6c:	sub	r0, r7, r4
     e70:	cmp	r0, #3
     e74:	blt	e98 <normal_cdataSectionTok+0x2bc>
     e78:	ldr	ip, [r5, #360]	; 0x168
     e7c:	mov	r1, r4
     e80:	mov	r0, r5
     e84:	blx	ip
     e88:	cmp	r0, #0
     e8c:	bne	e98 <normal_cdataSectionTok+0x2bc>
     e90:	add	r4, r4, #3
     e94:	b	de0 <normal_cdataSectionTok+0x204>
     e98:	str	r4, [r6]
     e9c:	mov	r0, #6
     ea0:	b	ef8 <normal_cdataSectionTok+0x31c>
     ea4:	sub	r2, r7, r4
     ea8:	cmp	r2, #4
     eac:	blt	ed0 <normal_cdataSectionTok+0x2f4>
     eb0:	ldr	ip, [r5, #364]	; 0x16c
     eb4:	mov	r1, r4
     eb8:	mov	r0, r5
     ebc:	blx	ip
     ec0:	cmp	r0, #0
     ec4:	bne	ed0 <normal_cdataSectionTok+0x2f4>
     ec8:	add	r4, r4, #4
     ecc:	b	de0 <normal_cdataSectionTok+0x204>
     ed0:	str	r4, [r6]
     ed4:	mov	r0, #6
     ed8:	b	ef8 <normal_cdataSectionTok+0x31c>
     edc:	str	r4, [r6]
     ee0:	mov	r0, #6
     ee4:	b	ef8 <normal_cdataSectionTok+0x31c>
     ee8:	add	r4, r4, #1
     eec:	b	de0 <normal_cdataSectionTok+0x204>
     ef0:	str	r4, [r6]
     ef4:	mov	r0, #6
     ef8:	ldr	r4, [sp, #8]
     efc:	ldr	r5, [sp, #12]
     f00:	ldr	r6, [sp, #16]
     f04:	ldr	r7, [sp, #20]
     f08:	ldr	lr, [sp, #4]
     f0c:	add	sp, sp, #24
     f10:	bx	lr

00000f14 <normal_scanRef>:
     f14:	mov	ip, sp
     f18:	sub	sp, sp, #32
     f1c:	str	ip, [sp]
     f20:	str	lr, [sp, #4]
     f24:	str	r4, [sp, #8]
     f28:	str	r5, [sp, #12]
     f2c:	str	r6, [sp, #16]
     f30:	str	r7, [sp, #20]
     f34:	str	r8, [sp, #24]
     f38:	mov	r7, r3
     f3c:	mov	r6, r2
     f40:	mov	r5, r1
     f44:	mov	r4, r0
     f48:	cmp	r5, r6
     f4c:	bne	f58 <normal_scanRef+0x44>
     f50:	mvn	r0, #0
     f54:	b	1374 <normal_scanRef+0x460>
     f58:	ldrb	r2, [r5]
     f5c:	and	r0, r2, #255	; 0xff
     f60:	add	r2, r4, r0
     f64:	ldrb	ip, [r2, #76]	; 0x4c
     f68:	cmp	ip, #19
     f6c:	bcs	1048 <normal_scanRef+0x134>
     f70:	cmp	ip, #5
     f74:	beq	1008 <normal_scanRef+0xf4>
     f78:	cmp	ip, #6
     f7c:	beq	fc8 <normal_scanRef+0xb4>
     f80:	cmp	ip, #7
     f84:	bne	11e0 <normal_scanRef+0x2cc>
     f88:	sub	r2, r6, r5
     f8c:	cmp	r2, #4
     f90:	bge	f9c <normal_scanRef+0x88>
     f94:	mvn	r0, #1
     f98:	b	1374 <normal_scanRef+0x460>
     f9c:	ldr	ip, [r4, #352]	; 0x160
     fa0:	mov	r1, r5
     fa4:	mov	r0, r4
     fa8:	blx	ip
     fac:	cmp	r0, #0
     fb0:	bne	fc0 <normal_scanRef+0xac>
     fb4:	str	r5, [r7]
     fb8:	mov	r0, #0
     fbc:	b	1374 <normal_scanRef+0x460>
     fc0:	add	r5, r5, #4
     fc4:	b	11f0 <normal_scanRef+0x2dc>
     fc8:	sub	r3, r6, r5
     fcc:	cmp	r3, #3
     fd0:	bge	fdc <normal_scanRef+0xc8>
     fd4:	mvn	r0, #1
     fd8:	b	1374 <normal_scanRef+0x460>
     fdc:	ldr	ip, [r4, #348]	; 0x15c
     fe0:	mov	r1, r5
     fe4:	mov	r0, r4
     fe8:	blx	ip
     fec:	cmp	r0, #0
     ff0:	bne	1000 <normal_scanRef+0xec>
     ff4:	str	r5, [r7]
     ff8:	mov	r0, #0
     ffc:	b	1374 <normal_scanRef+0x460>
    1000:	add	r5, r5, #3
    1004:	b	11f0 <normal_scanRef+0x2dc>
    1008:	sub	r3, r6, r5
    100c:	cmp	r3, #2
    1010:	bge	101c <normal_scanRef+0x108>
    1014:	mvn	r0, #1
    1018:	b	1374 <normal_scanRef+0x460>
    101c:	ldr	ip, [r4, #344]	; 0x158
    1020:	mov	r1, r5
    1024:	mov	r0, r4
    1028:	blx	ip
    102c:	cmp	r0, #0
    1030:	bne	1040 <normal_scanRef+0x12c>
    1034:	str	r5, [r7]
    1038:	mov	r0, #0
    103c:	b	1374 <normal_scanRef+0x460>
    1040:	add	r5, r5, #2
    1044:	b	11f0 <normal_scanRef+0x2dc>
    1048:	cmp	ip, #24
    104c:	bcs	11c4 <normal_scanRef+0x2b0>
    1050:	cmp	ip, #19
    1054:	beq	1064 <normal_scanRef+0x150>
    1058:	cmp	ip, #22
    105c:	beq	11ec <normal_scanRef+0x2d8>
    1060:	b	11e0 <normal_scanRef+0x2cc>
    1064:	add	r0, r5, #1
    1068:	cmp	r0, r6
    106c:	beq	11a0 <normal_scanRef+0x28c>
    1070:	ldrb	r2, [r5, #1]
    1074:	cmp	r2, #120	; 0x78
    1078:	bne	1130 <normal_scanRef+0x21c>
    107c:	add	r1, r5, #2
    1080:	cmp	r1, r6
    1084:	beq	110c <normal_scanRef+0x1f8>
    1088:	ldrb	r2, [r5, #2]
    108c:	and	r2, r2, #255	; 0xff
    1090:	add	ip, r4, r2
    1094:	ldrb	r0, [ip, #76]	; 0x4c
    1098:	cmp	r0, #24
    109c:	beq	10b4 <normal_scanRef+0x1a0>
    10a0:	cmp	r0, #25
    10a4:	beq	10b4 <normal_scanRef+0x1a0>
    10a8:	str	r1, [r7]
    10ac:	mov	r0, #0
    10b0:	b	1110 <normal_scanRef+0x1fc>
    10b4:	add	r2, r1, #1
    10b8:	cmp	r2, r6
    10bc:	beq	110c <normal_scanRef+0x1f8>
    10c0:	ldrb	ip, [r2]
    10c4:	and	r0, ip, #255	; 0xff
    10c8:	add	r0, r4, r0
    10cc:	ldrb	r1, [r0, #76]	; 0x4c
    10d0:	cmp	r1, #18
    10d4:	beq	10fc <normal_scanRef+0x1e8>
    10d8:	cmp	r1, #24
    10dc:	beq	10f4 <normal_scanRef+0x1e0>
    10e0:	cmp	r1, #25
    10e4:	beq	10f4 <normal_scanRef+0x1e0>
    10e8:	str	r2, [r7]
    10ec:	mov	r0, #0
    10f0:	b	1110 <normal_scanRef+0x1fc>
    10f4:	add	r2, r2, #1
    10f8:	b	10b8 <normal_scanRef+0x1a4>
    10fc:	add	r3, r2, #1
    1100:	str	r3, [r7]
    1104:	mov	r0, #10
    1108:	b	1110 <normal_scanRef+0x1fc>
    110c:	mvn	r0, #0
    1110:	ldr	r4, [sp, #8]
    1114:	ldr	r5, [sp, #12]
    1118:	ldr	r6, [sp, #16]
    111c:	ldr	r7, [sp, #20]
    1120:	ldr	r8, [sp, #24]
    1124:	ldr	lr, [sp, #4]
    1128:	add	sp, sp, #32
    112c:	bx	lr
    1130:	and	r1, r2, #255	; 0xff
    1134:	add	r3, r4, r1
    1138:	ldrb	ip, [r3, #76]	; 0x4c
    113c:	cmp	ip, #25
    1140:	beq	1150 <normal_scanRef+0x23c>
    1144:	str	r0, [r7]
    1148:	mov	r0, #0
    114c:	b	11a4 <normal_scanRef+0x290>
    1150:	add	r0, r5, #2
    1154:	cmp	r0, r6
    1158:	beq	11a0 <normal_scanRef+0x28c>
    115c:	ldrb	r1, [r0]
    1160:	and	ip, r1, #255	; 0xff
    1164:	add	r1, r4, ip
    1168:	ldrb	r1, [r1, #76]	; 0x4c
    116c:	cmp	r1, #18
    1170:	beq	1190 <normal_scanRef+0x27c>
    1174:	cmp	r1, #25
    1178:	beq	1188 <normal_scanRef+0x274>
    117c:	str	r0, [r7]
    1180:	mov	r0, #0
    1184:	b	11a4 <normal_scanRef+0x290>
    1188:	add	r0, r0, #1
    118c:	b	1154 <normal_scanRef+0x240>
    1190:	add	ip, r0, #1
    1194:	str	ip, [r7]
    1198:	mov	r0, #10
    119c:	b	11a4 <normal_scanRef+0x290>
    11a0:	mvn	r0, #0
    11a4:	ldr	r4, [sp, #8]
    11a8:	ldr	r5, [sp, #12]
    11ac:	ldr	r6, [sp, #16]
    11b0:	ldr	r7, [sp, #20]
    11b4:	ldr	r8, [sp, #24]
    11b8:	ldr	lr, [sp, #4]
    11bc:	add	sp, sp, #32
    11c0:	bx	lr
    11c4:	cmp	ip, #24
    11c8:	beq	11ec <normal_scanRef+0x2d8>
    11cc:	cmp	ip, #29
    11d0:	bne	11e0 <normal_scanRef+0x2cc>
    11d4:	str	r5, [r7]
    11d8:	mov	r0, #0
    11dc:	b	1374 <normal_scanRef+0x460>
    11e0:	str	r5, [r7]
    11e4:	mov	r0, #0
    11e8:	b	1374 <normal_scanRef+0x460>
    11ec:	add	r5, r5, #1
    11f0:	cmp	r5, r6
    11f4:	beq	1370 <normal_scanRef+0x45c>
    11f8:	ldrb	r0, [r5]
    11fc:	and	r1, r0, #255	; 0xff
    1200:	add	r2, r4, r1
    1204:	ldrb	r2, [r2, #76]	; 0x4c
    1208:	sub	r3, r2, #5
    120c:	cmp	r3, #25
    1210:	bcs	1364 <normal_scanRef+0x450>
    1214:	add	pc, pc, r3, lsl #2
    1218:	nop	{0}
    121c:	b	1294 <normal_scanRef+0x380>
    1220:	b	12d4 <normal_scanRef+0x3c0>
    1224:	b	1314 <normal_scanRef+0x400>
    1228:	b	1364 <normal_scanRef+0x450>
    122c:	b	1364 <normal_scanRef+0x450>
    1230:	b	1364 <normal_scanRef+0x450>
    1234:	b	1364 <normal_scanRef+0x450>
    1238:	b	1364 <normal_scanRef+0x450>
    123c:	b	1364 <normal_scanRef+0x450>
    1240:	b	1364 <normal_scanRef+0x450>
    1244:	b	1364 <normal_scanRef+0x450>
    1248:	b	1364 <normal_scanRef+0x450>
    124c:	b	1364 <normal_scanRef+0x450>
    1250:	b	1354 <normal_scanRef+0x440>
    1254:	b	1364 <normal_scanRef+0x450>
    1258:	b	1364 <normal_scanRef+0x450>
    125c:	b	1364 <normal_scanRef+0x450>
    1260:	b	128c <normal_scanRef+0x378>
    1264:	b	1364 <normal_scanRef+0x450>
    1268:	b	128c <normal_scanRef+0x378>
    126c:	b	128c <normal_scanRef+0x378>
    1270:	b	128c <normal_scanRef+0x378>
    1274:	b	128c <normal_scanRef+0x378>
    1278:	b	1364 <normal_scanRef+0x450>
    127c:	b	1280 <normal_scanRef+0x36c>
    1280:	str	r5, [r7]
    1284:	mov	r0, #0
    1288:	b	1374 <normal_scanRef+0x460>
    128c:	add	r5, r5, #1
    1290:	b	11f0 <normal_scanRef+0x2dc>
    1294:	sub	r3, r6, r5
    1298:	cmp	r3, #2
    129c:	bge	12a8 <normal_scanRef+0x394>
    12a0:	mvn	r0, #1
    12a4:	b	1374 <normal_scanRef+0x460>
    12a8:	ldr	r8, [r4, #332]	; 0x14c
    12ac:	mov	r1, r5
    12b0:	mov	r0, r4
    12b4:	blx	r8
    12b8:	cmp	r0, #0
    12bc:	bne	12cc <normal_scanRef+0x3b8>
    12c0:	str	r5, [r7]
    12c4:	mov	r0, #0
    12c8:	b	1374 <normal_scanRef+0x460>
    12cc:	add	r5, r5, #2
    12d0:	b	11f0 <normal_scanRef+0x2dc>
    12d4:	sub	r2, r6, r5
    12d8:	cmp	r2, #3
    12dc:	bge	12e8 <normal_scanRef+0x3d4>
    12e0:	mvn	r0, #1
    12e4:	b	1374 <normal_scanRef+0x460>
    12e8:	ldr	ip, [r4, #336]	; 0x150
    12ec:	mov	r1, r5
    12f0:	mov	r0, r4
    12f4:	blx	ip
    12f8:	cmp	r0, #0
    12fc:	bne	130c <normal_scanRef+0x3f8>
    1300:	str	r5, [r7]
    1304:	mov	r0, #0
    1308:	b	1374 <normal_scanRef+0x460>
    130c:	add	r5, r5, #3
    1310:	b	11f0 <normal_scanRef+0x2dc>
    1314:	sub	r1, r6, r5
    1318:	cmp	r1, #4
    131c:	bge	1328 <normal_scanRef+0x414>
    1320:	mvn	r0, #1
    1324:	b	1374 <normal_scanRef+0x460>
    1328:	ldr	ip, [r4, #340]	; 0x154
    132c:	mov	r1, r5
    1330:	mov	r0, r4
    1334:	blx	ip
    1338:	cmp	r0, #0
    133c:	bne	134c <normal_scanRef+0x438>
    1340:	str	r5, [r7]
    1344:	mov	r0, #0
    1348:	b	1374 <normal_scanRef+0x460>
    134c:	add	r5, r5, #4
    1350:	b	11f0 <normal_scanRef+0x2dc>
    1354:	add	ip, r5, #1
    1358:	str	ip, [r7]
    135c:	mov	r0, #9
    1360:	b	1374 <normal_scanRef+0x460>
    1364:	str	r5, [r7]
    1368:	mov	r0, #0
    136c:	b	1374 <normal_scanRef+0x460>
    1370:	mvn	r0, #0
    1374:	ldr	r4, [sp, #8]
    1378:	ldr	r5, [sp, #12]
    137c:	ldr	r6, [sp, #16]
    1380:	ldr	r7, [sp, #20]
    1384:	ldr	r8, [sp, #24]
    1388:	ldr	lr, [sp, #4]
    138c:	add	sp, sp, #32
    1390:	bx	lr

00001394 <normal_contentTok>:
    1394:	mov	ip, sp
    1398:	sub	sp, sp, #40	; 0x28
    139c:	str	ip, [sp]
    13a0:	str	lr, [sp, #4]
    13a4:	str	r4, [sp, #8]
    13a8:	str	r5, [sp, #12]
    13ac:	str	r6, [sp, #16]
    13b0:	str	r7, [sp, #20]
    13b4:	str	r8, [sp, #24]
    13b8:	str	r9, [sp, #28]
    13bc:	mov	r6, r3
    13c0:	mov	r7, r2
    13c4:	mov	r8, r1
    13c8:	mov	r5, r0
    13cc:	cmp	r8, r7
    13d0:	bne	13dc <normal_contentTok+0x48>
    13d4:	mvn	r0, #3
    13d8:	b	2a00 <normal_contentTok+0x166c>
    13dc:	ldrb	ip, [r8]
    13e0:	and	ip, ip, #255	; 0xff
    13e4:	add	r3, r5, ip
    13e8:	ldrb	r0, [r3, #76]	; 0x4c
    13ec:	cmp	r0, #11
    13f0:	bcs	2898 <normal_contentTok+0x1504>
    13f4:	add	pc, pc, r0, lsl #2
    13f8:	nop	{0}
    13fc:	b	288c <normal_contentTok+0x14f8>
    1400:	b	288c <normal_contentTok+0x14f8>
    1404:	b	1428 <normal_contentTok+0x94>
    1408:	b	26f4 <normal_contentTok+0x1360>
    140c:	b	2778 <normal_contentTok+0x13e4>
    1410:	b	27cc <normal_contentTok+0x1438>
    1414:	b	280c <normal_contentTok+0x1478>
    1418:	b	284c <normal_contentTok+0x14b8>
    141c:	b	288c <normal_contentTok+0x14f8>
    1420:	b	2728 <normal_contentTok+0x1394>
    1424:	b	2768 <normal_contentTok+0x13d4>
    1428:	add	r4, r8, #1
    142c:	cmp	r4, r7
    1430:	bne	143c <normal_contentTok+0xa8>
    1434:	mvn	r0, #0
    1438:	b	26d0 <normal_contentTok+0x133c>
    143c:	ldrb	ip, [r8, #1]
    1440:	and	r1, ip, #255	; 0xff
    1444:	add	ip, r5, r1
    1448:	ldrb	r2, [ip, #76]	; 0x4c
    144c:	sub	r3, r2, #5
    1450:	cmp	r3, #25
    1454:	bcs	26c8 <normal_contentTok+0x1334>
    1458:	add	pc, pc, r3, lsl #2
    145c:	nop	{0}
    1460:	b	14d8 <normal_contentTok+0x144>
    1464:	b	1518 <normal_contentTok+0x184>
    1468:	b	1558 <normal_contentTok+0x1c4>
    146c:	b	26c8 <normal_contentTok+0x1334>
    1470:	b	26c8 <normal_contentTok+0x1334>
    1474:	b	26c8 <normal_contentTok+0x1334>
    1478:	b	26c8 <normal_contentTok+0x1334>
    147c:	b	26c8 <normal_contentTok+0x1334>
    1480:	b	26c8 <normal_contentTok+0x1334>
    1484:	b	26c8 <normal_contentTok+0x1334>
    1488:	b	2338 <normal_contentTok+0xfa4>
    148c:	b	224c <normal_contentTok+0xeb8>
    1490:	b	236c <normal_contentTok+0xfd8>
    1494:	b	26c8 <normal_contentTok+0x1334>
    1498:	b	26c8 <normal_contentTok+0x1334>
    149c:	b	26c8 <normal_contentTok+0x1334>
    14a0:	b	26c8 <normal_contentTok+0x1334>
    14a4:	b	14d0 <normal_contentTok+0x13c>
    14a8:	b	26c8 <normal_contentTok+0x1334>
    14ac:	b	14d0 <normal_contentTok+0x13c>
    14b0:	b	26c8 <normal_contentTok+0x1334>
    14b4:	b	26c8 <normal_contentTok+0x1334>
    14b8:	b	26c8 <normal_contentTok+0x1334>
    14bc:	b	26c8 <normal_contentTok+0x1334>
    14c0:	b	14c4 <normal_contentTok+0x130>
    14c4:	str	r4, [r6]
    14c8:	mov	r0, #0
    14cc:	b	26d0 <normal_contentTok+0x133c>
    14d0:	add	r4, r4, #1
    14d4:	b	1594 <normal_contentTok+0x200>
    14d8:	sub	r1, r7, r4
    14dc:	cmp	r1, #2
    14e0:	bge	14ec <normal_contentTok+0x158>
    14e4:	mvn	r0, #1
    14e8:	b	26d0 <normal_contentTok+0x133c>
    14ec:	ldr	ip, [r5, #344]	; 0x158
    14f0:	mov	r1, r4
    14f4:	mov	r0, r5
    14f8:	blx	ip
    14fc:	cmp	r0, #0
    1500:	bne	1510 <normal_contentTok+0x17c>
    1504:	str	r4, [r6]
    1508:	mov	r0, #0
    150c:	b	26d0 <normal_contentTok+0x133c>
    1510:	add	r4, r4, #2
    1514:	b	1594 <normal_contentTok+0x200>
    1518:	sub	r3, r7, r4
    151c:	cmp	r3, #3
    1520:	bge	152c <normal_contentTok+0x198>
    1524:	mvn	r0, #1
    1528:	b	26d0 <normal_contentTok+0x133c>
    152c:	ldr	ip, [r5, #348]	; 0x15c
    1530:	mov	r1, r4
    1534:	mov	r0, r5
    1538:	blx	ip
    153c:	cmp	r0, #0
    1540:	bne	1550 <normal_contentTok+0x1bc>
    1544:	str	r4, [r6]
    1548:	mov	r0, #0
    154c:	b	26d0 <normal_contentTok+0x133c>
    1550:	add	r4, r4, #3
    1554:	b	1594 <normal_contentTok+0x200>
    1558:	sub	ip, r7, r4
    155c:	cmp	ip, #4
    1560:	bge	156c <normal_contentTok+0x1d8>
    1564:	mvn	r0, #1
    1568:	b	26d0 <normal_contentTok+0x133c>
    156c:	ldr	r8, [r5, #352]	; 0x160
    1570:	mov	r1, r4
    1574:	mov	r0, r5
    1578:	blx	r8
    157c:	cmp	r0, #0
    1580:	bne	1590 <normal_contentTok+0x1fc>
    1584:	str	r4, [r6]
    1588:	mov	r0, #0
    158c:	b	26d0 <normal_contentTok+0x133c>
    1590:	add	r4, r4, #4
    1594:	mov	r8, #0
    1598:	cmp	r4, r7
    159c:	beq	2244 <normal_contentTok+0xeb0>
    15a0:	ldrb	r3, [r4]
    15a4:	and	r1, r3, #255	; 0xff
    15a8:	add	r3, r5, r1
    15ac:	ldrb	ip, [r3, #76]	; 0x4c
    15b0:	sub	r0, ip, #5
    15b4:	cmp	r0, #25
    15b8:	bcs	2238 <normal_contentTok+0xea4>
    15bc:	add	pc, pc, r0, lsl #2
    15c0:	nop	{0}
    15c4:	b	163c <normal_contentTok+0x2a8>
    15c8:	b	167c <normal_contentTok+0x2e8>
    15cc:	b	16bc <normal_contentTok+0x328>
    15d0:	b	2238 <normal_contentTok+0xea4>
    15d4:	b	1850 <normal_contentTok+0x4bc>
    15d8:	b	1850 <normal_contentTok+0x4bc>
    15dc:	b	21ec <normal_contentTok+0xe58>
    15e0:	b	2238 <normal_contentTok+0xea4>
    15e4:	b	2238 <normal_contentTok+0xea4>
    15e8:	b	2238 <normal_contentTok+0xea4>
    15ec:	b	2238 <normal_contentTok+0xea4>
    15f0:	b	2238 <normal_contentTok+0xea4>
    15f4:	b	21fc <normal_contentTok+0xe68>
    15f8:	b	2238 <normal_contentTok+0xea4>
    15fc:	b	2238 <normal_contentTok+0xea4>
    1600:	b	2238 <normal_contentTok+0xea4>
    1604:	b	1850 <normal_contentTok+0x4bc>
    1608:	b	1634 <normal_contentTok+0x2a0>
    160c:	b	16fc <normal_contentTok+0x368>
    1610:	b	1634 <normal_contentTok+0x2a0>
    1614:	b	1634 <normal_contentTok+0x2a0>
    1618:	b	1634 <normal_contentTok+0x2a0>
    161c:	b	1634 <normal_contentTok+0x2a0>
    1620:	b	2238 <normal_contentTok+0xea4>
    1624:	b	1628 <normal_contentTok+0x294>
    1628:	str	r4, [r6]
    162c:	mov	r0, #0
    1630:	b	26d0 <normal_contentTok+0x133c>
    1634:	add	r4, r4, #1
    1638:	b	1598 <normal_contentTok+0x204>
    163c:	sub	r3, r7, r4
    1640:	cmp	r3, #2
    1644:	bge	1650 <normal_contentTok+0x2bc>
    1648:	mvn	r0, #1
    164c:	b	26d0 <normal_contentTok+0x133c>
    1650:	ldr	ip, [r5, #332]	; 0x14c
    1654:	mov	r1, r4
    1658:	mov	r0, r5
    165c:	blx	ip
    1660:	cmp	r0, #0
    1664:	bne	1674 <normal_contentTok+0x2e0>
    1668:	str	r4, [r6]
    166c:	mov	r0, #0
    1670:	b	26d0 <normal_contentTok+0x133c>
    1674:	add	r4, r4, #2
    1678:	b	1598 <normal_contentTok+0x204>
    167c:	sub	r2, r7, r4
    1680:	cmp	r2, #3
    1684:	bge	1690 <normal_contentTok+0x2fc>
    1688:	mvn	r0, #1
    168c:	b	26d0 <normal_contentTok+0x133c>
    1690:	ldr	ip, [r5, #336]	; 0x150
    1694:	mov	r1, r4
    1698:	mov	r0, r5
    169c:	blx	ip
    16a0:	cmp	r0, #0
    16a4:	bne	16b4 <normal_contentTok+0x320>
    16a8:	str	r4, [r6]
    16ac:	mov	r0, #0
    16b0:	b	26d0 <normal_contentTok+0x133c>
    16b4:	add	r4, r4, #3
    16b8:	b	1598 <normal_contentTok+0x204>
    16bc:	sub	r0, r7, r4
    16c0:	cmp	r0, #4
    16c4:	bge	16d0 <normal_contentTok+0x33c>
    16c8:	mvn	r0, #1
    16cc:	b	26d0 <normal_contentTok+0x133c>
    16d0:	ldr	ip, [r5, #340]	; 0x154
    16d4:	mov	r1, r4
    16d8:	mov	r0, r5
    16dc:	blx	ip
    16e0:	cmp	r0, #0
    16e4:	bne	16f4 <normal_contentTok+0x360>
    16e8:	str	r4, [r6]
    16ec:	mov	r0, #0
    16f0:	b	26d0 <normal_contentTok+0x133c>
    16f4:	add	r4, r4, #4
    16f8:	b	1598 <normal_contentTok+0x204>
    16fc:	cmp	r8, #0
    1700:	beq	1710 <normal_contentTok+0x37c>
    1704:	str	r4, [r6]
    1708:	mov	r0, #0
    170c:	b	26d0 <normal_contentTok+0x133c>
    1710:	mov	r8, #1
    1714:	add	r4, r4, #1
    1718:	cmp	r4, r7
    171c:	bne	1728 <normal_contentTok+0x394>
    1720:	mvn	r0, #0
    1724:	b	26d0 <normal_contentTok+0x133c>
    1728:	ldrb	r3, [r4]
    172c:	and	r3, r3, #255	; 0xff
    1730:	add	r0, r5, r3
    1734:	ldrb	r3, [r0, #76]	; 0x4c
    1738:	cmp	r3, #22
    173c:	bcs	1818 <normal_contentTok+0x484>
    1740:	cmp	r3, #5
    1744:	beq	17d8 <normal_contentTok+0x444>
    1748:	cmp	r3, #6
    174c:	beq	1798 <normal_contentTok+0x404>
    1750:	cmp	r3, #7
    1754:	bne	183c <normal_contentTok+0x4a8>
    1758:	sub	ip, r7, r4
    175c:	cmp	ip, #4
    1760:	bge	176c <normal_contentTok+0x3d8>
    1764:	mvn	r0, #1
    1768:	b	26d0 <normal_contentTok+0x133c>
    176c:	ldr	ip, [r5, #352]	; 0x160
    1770:	mov	r1, r4
    1774:	mov	r0, r5
    1778:	blx	ip
    177c:	cmp	r0, #0
    1780:	bne	1790 <normal_contentTok+0x3fc>
    1784:	str	r4, [r6]
    1788:	mov	r0, #0
    178c:	b	26d0 <normal_contentTok+0x133c>
    1790:	add	r4, r4, #4
    1794:	b	1598 <normal_contentTok+0x204>
    1798:	sub	r1, r7, r4
    179c:	cmp	r1, #3
    17a0:	bge	17ac <normal_contentTok+0x418>
    17a4:	mvn	r0, #1
    17a8:	b	26d0 <normal_contentTok+0x133c>
    17ac:	ldr	ip, [r5, #348]	; 0x15c
    17b0:	mov	r1, r4
    17b4:	mov	r0, r5
    17b8:	blx	ip
    17bc:	cmp	r0, #0
    17c0:	bne	17d0 <normal_contentTok+0x43c>
    17c4:	str	r4, [r6]
    17c8:	mov	r0, #0
    17cc:	b	26d0 <normal_contentTok+0x133c>
    17d0:	add	r4, r4, #3
    17d4:	b	1598 <normal_contentTok+0x204>
    17d8:	sub	r2, r7, r4
    17dc:	cmp	r2, #2
    17e0:	bge	17ec <normal_contentTok+0x458>
    17e4:	mvn	r0, #1
    17e8:	b	26d0 <normal_contentTok+0x133c>
    17ec:	ldr	ip, [r5, #344]	; 0x158
    17f0:	mov	r1, r4
    17f4:	mov	r0, r5
    17f8:	blx	ip
    17fc:	cmp	r0, #0
    1800:	bne	1810 <normal_contentTok+0x47c>
    1804:	str	r4, [r6]
    1808:	mov	r0, #0
    180c:	b	26d0 <normal_contentTok+0x133c>
    1810:	add	r4, r4, #2
    1814:	b	1598 <normal_contentTok+0x204>
    1818:	cmp	r3, #22
    181c:	beq	1848 <normal_contentTok+0x4b4>
    1820:	cmp	r3, #24
    1824:	beq	1848 <normal_contentTok+0x4b4>
    1828:	cmp	r3, #29
    182c:	bne	183c <normal_contentTok+0x4a8>
    1830:	str	r4, [r6]
    1834:	mov	r0, #0
    1838:	b	26d0 <normal_contentTok+0x133c>
    183c:	str	r4, [r6]
    1840:	mov	r0, #0
    1844:	b	26d0 <normal_contentTok+0x133c>
    1848:	add	r4, r4, #1
    184c:	b	1598 <normal_contentTok+0x204>
    1850:	add	r4, r4, #1
    1854:	cmp	r4, r7
    1858:	beq	21e4 <normal_contentTok+0xe50>
    185c:	ldrb	r1, [r4]
    1860:	and	r2, r1, #255	; 0xff
    1864:	add	r1, r5, r2
    1868:	ldrb	r2, [r1, #76]	; 0x4c
    186c:	sub	r3, r2, #5
    1870:	cmp	r3, #25
    1874:	bcs	21d8 <normal_contentTok+0xe44>
    1878:	add	pc, pc, r3, lsl #2
    187c:	nop	{0}
    1880:	b	18f8 <normal_contentTok+0x564>
    1884:	b	1938 <normal_contentTok+0x5a4>
    1888:	b	1978 <normal_contentTok+0x5e4>
    188c:	b	21d8 <normal_contentTok+0xe44>
    1890:	b	21d0 <normal_contentTok+0xe3c>
    1894:	b	21d0 <normal_contentTok+0xe3c>
    1898:	b	21ec <normal_contentTok+0xe58>
    189c:	b	21d8 <normal_contentTok+0xe44>
    18a0:	b	21d8 <normal_contentTok+0xe44>
    18a4:	b	21d8 <normal_contentTok+0xe44>
    18a8:	b	21d8 <normal_contentTok+0xe44>
    18ac:	b	21d8 <normal_contentTok+0xe44>
    18b0:	b	21fc <normal_contentTok+0xe68>
    18b4:	b	21d8 <normal_contentTok+0xe44>
    18b8:	b	21d8 <normal_contentTok+0xe44>
    18bc:	b	21d8 <normal_contentTok+0xe44>
    18c0:	b	21d0 <normal_contentTok+0xe3c>
    18c4:	b	18f0 <normal_contentTok+0x55c>
    18c8:	b	21d8 <normal_contentTok+0xe44>
    18cc:	b	18f0 <normal_contentTok+0x55c>
    18d0:	b	21d8 <normal_contentTok+0xe44>
    18d4:	b	21d8 <normal_contentTok+0xe44>
    18d8:	b	21d8 <normal_contentTok+0xe44>
    18dc:	b	21d8 <normal_contentTok+0xe44>
    18e0:	b	18e4 <normal_contentTok+0x550>
    18e4:	str	r4, [r6]
    18e8:	mov	r0, #0
    18ec:	b	26d0 <normal_contentTok+0x133c>
    18f0:	add	r1, r4, #1
    18f4:	b	19b4 <normal_contentTok+0x620>
    18f8:	sub	r3, r7, r4
    18fc:	cmp	r3, #2
    1900:	bge	190c <normal_contentTok+0x578>
    1904:	mvn	r0, #1
    1908:	b	26d0 <normal_contentTok+0x133c>
    190c:	ldr	ip, [r5, #344]	; 0x158
    1910:	mov	r1, r4
    1914:	mov	r0, r5
    1918:	blx	ip
    191c:	cmp	r0, #0
    1920:	bne	1930 <normal_contentTok+0x59c>
    1924:	str	r4, [r6]
    1928:	mov	r0, #0
    192c:	b	26d0 <normal_contentTok+0x133c>
    1930:	add	r1, r4, #2
    1934:	b	19b4 <normal_contentTok+0x620>
    1938:	sub	ip, r7, r4
    193c:	cmp	ip, #3
    1940:	bge	194c <normal_contentTok+0x5b8>
    1944:	mvn	r0, #1
    1948:	b	26d0 <normal_contentTok+0x133c>
    194c:	ldr	r8, [r5, #348]	; 0x15c
    1950:	mov	r1, r4
    1954:	mov	r0, r5
    1958:	blx	r8
    195c:	cmp	r0, #0
    1960:	bne	1970 <normal_contentTok+0x5dc>
    1964:	str	r4, [r6]
    1968:	mov	r0, #0
    196c:	b	26d0 <normal_contentTok+0x133c>
    1970:	add	r1, r4, #3
    1974:	b	19b4 <normal_contentTok+0x620>
    1978:	sub	r3, r7, r4
    197c:	cmp	r3, #4
    1980:	bge	198c <normal_contentTok+0x5f8>
    1984:	mvn	r0, #1
    1988:	b	26d0 <normal_contentTok+0x133c>
    198c:	ldr	ip, [r5, #352]	; 0x160
    1990:	mov	r1, r4
    1994:	mov	r0, r5
    1998:	blx	ip
    199c:	cmp	r0, #0
    19a0:	bne	19b0 <normal_contentTok+0x61c>
    19a4:	str	r4, [r6]
    19a8:	mov	r0, #0
    19ac:	b	26d0 <normal_contentTok+0x133c>
    19b0:	add	r1, r4, #4
    19b4:	str	r1, [sp, #32]
    19b8:	mov	r4, #0
    19bc:	ldr	r1, [sp, #32]
    19c0:	cmp	r1, r7
    19c4:	beq	21a8 <normal_contentTok+0xe14>
    19c8:	ldrb	r3, [r1]
    19cc:	and	ip, r3, #255	; 0xff
    19d0:	add	ip, r5, ip
    19d4:	ldrb	r2, [ip, #76]	; 0x4c
    19d8:	sub	ip, r2, #5
    19dc:	cmp	ip, #25
    19e0:	bcs	2198 <normal_contentTok+0xe04>
    19e4:	add	pc, pc, ip, lsl #2
    19e8:	nop	{0}
    19ec:	b	1a6c <normal_contentTok+0x6d8>
    19f0:	b	1ab4 <normal_contentTok+0x720>
    19f4:	b	1afc <normal_contentTok+0x768>
    19f8:	b	2198 <normal_contentTok+0xe04>
    19fc:	b	1cc0 <normal_contentTok+0x92c>
    1a00:	b	1cc0 <normal_contentTok+0x92c>
    1a04:	b	2198 <normal_contentTok+0xe04>
    1a08:	b	2198 <normal_contentTok+0xe04>
    1a0c:	b	2198 <normal_contentTok+0xe04>
    1a10:	b	1d18 <normal_contentTok+0x984>
    1a14:	b	2198 <normal_contentTok+0xe04>
    1a18:	b	2198 <normal_contentTok+0xe04>
    1a1c:	b	2198 <normal_contentTok+0xe04>
    1a20:	b	2198 <normal_contentTok+0xe04>
    1a24:	b	2198 <normal_contentTok+0xe04>
    1a28:	b	2198 <normal_contentTok+0xe04>
    1a2c:	b	1cc0 <normal_contentTok+0x92c>
    1a30:	b	1a5c <normal_contentTok+0x6c8>
    1a34:	b	1b44 <normal_contentTok+0x7b0>
    1a38:	b	1a5c <normal_contentTok+0x6c8>
    1a3c:	b	1a5c <normal_contentTok+0x6c8>
    1a40:	b	1a5c <normal_contentTok+0x6c8>
    1a44:	b	1a5c <normal_contentTok+0x6c8>
    1a48:	b	2198 <normal_contentTok+0xe04>
    1a4c:	b	1a50 <normal_contentTok+0x6bc>
    1a50:	str	r1, [r6]
    1a54:	mov	r0, #0
    1a58:	b	21ac <normal_contentTok+0xe18>
    1a5c:	ldr	r1, [sp, #32]
    1a60:	add	r1, r1, #1
    1a64:	str	r1, [sp, #32]
    1a68:	b	19bc <normal_contentTok+0x628>
    1a6c:	sub	r0, r7, r1
    1a70:	cmp	r0, #2
    1a74:	bge	1a80 <normal_contentTok+0x6ec>
    1a78:	mvn	r0, #1
    1a7c:	b	21ac <normal_contentTok+0xe18>
    1a80:	ldr	ip, [r5, #332]	; 0x14c
    1a84:	mov	r0, r5
    1a88:	blx	ip
    1a8c:	cmp	r0, #0
    1a90:	bne	1aa4 <normal_contentTok+0x710>
    1a94:	ldr	r0, [sp, #32]
    1a98:	str	r0, [r6]
    1a9c:	mov	r0, #0
    1aa0:	b	21ac <normal_contentTok+0xe18>
    1aa4:	ldr	r2, [sp, #32]
    1aa8:	add	r1, r2, #2
    1aac:	str	r1, [sp, #32]
    1ab0:	b	19bc <normal_contentTok+0x628>
    1ab4:	sub	r2, r7, r1
    1ab8:	cmp	r2, #3
    1abc:	bge	1ac8 <normal_contentTok+0x734>
    1ac0:	mvn	r0, #1
    1ac4:	b	21ac <normal_contentTok+0xe18>
    1ac8:	ldr	ip, [r5, #336]	; 0x150
    1acc:	mov	r0, r5
    1ad0:	blx	ip
    1ad4:	cmp	r0, #0
    1ad8:	bne	1aec <normal_contentTok+0x758>
    1adc:	ldr	r3, [sp, #32]
    1ae0:	str	r3, [r6]
    1ae4:	mov	r0, #0
    1ae8:	b	21ac <normal_contentTok+0xe18>
    1aec:	ldr	r1, [sp, #32]
    1af0:	add	r3, r1, #3
    1af4:	str	r3, [sp, #32]
    1af8:	b	19bc <normal_contentTok+0x628>
    1afc:	sub	r3, r7, r1
    1b00:	cmp	r3, #4
    1b04:	bge	1b10 <normal_contentTok+0x77c>
    1b08:	mvn	r0, #1
    1b0c:	b	21ac <normal_contentTok+0xe18>
    1b10:	ldr	ip, [r5, #340]	; 0x154
    1b14:	mov	r0, r5
    1b18:	blx	ip
    1b1c:	cmp	r0, #0
    1b20:	bne	1b34 <normal_contentTok+0x7a0>
    1b24:	ldr	r1, [sp, #32]
    1b28:	str	r1, [r6]
    1b2c:	mov	r0, #0
    1b30:	b	21ac <normal_contentTok+0xe18>
    1b34:	ldr	r3, [sp, #32]
    1b38:	add	ip, r3, #4
    1b3c:	str	ip, [sp, #32]
    1b40:	b	19bc <normal_contentTok+0x628>
    1b44:	cmp	r4, #0
    1b48:	beq	1b58 <normal_contentTok+0x7c4>
    1b4c:	str	r1, [r6]
    1b50:	mov	r0, #0
    1b54:	b	21ac <normal_contentTok+0xe18>
    1b58:	mov	r4, #1
    1b5c:	add	r1, r1, #1
    1b60:	str	r1, [sp, #32]
    1b64:	cmp	r1, r7
    1b68:	bne	1b74 <normal_contentTok+0x7e0>
    1b6c:	mvn	r0, #0
    1b70:	b	21ac <normal_contentTok+0xe18>
    1b74:	ldrb	r0, [r1]
    1b78:	and	r3, r0, #255	; 0xff
    1b7c:	add	r0, r5, r3
    1b80:	ldrb	ip, [r0, #76]	; 0x4c
    1b84:	cmp	ip, #22
    1b88:	bcs	1c7c <normal_contentTok+0x8e8>
    1b8c:	cmp	ip, #5
    1b90:	beq	1c34 <normal_contentTok+0x8a0>
    1b94:	cmp	ip, #6
    1b98:	beq	1bec <normal_contentTok+0x858>
    1b9c:	cmp	ip, #7
    1ba0:	bne	1ca0 <normal_contentTok+0x90c>
    1ba4:	sub	ip, r7, r1
    1ba8:	cmp	ip, #4
    1bac:	bge	1bb8 <normal_contentTok+0x824>
    1bb0:	mvn	r0, #1
    1bb4:	b	21ac <normal_contentTok+0xe18>
    1bb8:	ldr	ip, [r5, #352]	; 0x160
    1bbc:	mov	r0, r5
    1bc0:	blx	ip
    1bc4:	cmp	r0, #0
    1bc8:	bne	1bdc <normal_contentTok+0x848>
    1bcc:	ldr	r1, [sp, #32]
    1bd0:	str	r1, [r6]
    1bd4:	mov	r0, #0
    1bd8:	b	21ac <normal_contentTok+0xe18>
    1bdc:	ldr	r1, [sp, #32]
    1be0:	add	r1, r1, #4
    1be4:	str	r1, [sp, #32]
    1be8:	b	19bc <normal_contentTok+0x628>
    1bec:	sub	r3, r7, r1
    1bf0:	cmp	r3, #3
    1bf4:	bge	1c00 <normal_contentTok+0x86c>
    1bf8:	mvn	r0, #1
    1bfc:	b	21ac <normal_contentTok+0xe18>
    1c00:	ldr	ip, [r5, #348]	; 0x15c
    1c04:	mov	r0, r5
    1c08:	blx	ip
    1c0c:	cmp	r0, #0
    1c10:	bne	1c24 <normal_contentTok+0x890>
    1c14:	ldr	r3, [sp, #32]
    1c18:	str	r3, [r6]
    1c1c:	mov	r0, #0
    1c20:	b	21ac <normal_contentTok+0xe18>
    1c24:	ldr	ip, [sp, #32]
    1c28:	add	r1, ip, #3
    1c2c:	str	r1, [sp, #32]
    1c30:	b	19bc <normal_contentTok+0x628>
    1c34:	sub	r0, r7, r1
    1c38:	cmp	r0, #2
    1c3c:	bge	1c48 <normal_contentTok+0x8b4>
    1c40:	mvn	r0, #1
    1c44:	b	21ac <normal_contentTok+0xe18>
    1c48:	ldr	ip, [r5, #344]	; 0x158
    1c4c:	mov	r0, r5
    1c50:	blx	ip
    1c54:	cmp	r0, #0
    1c58:	bne	1c6c <normal_contentTok+0x8d8>
    1c5c:	ldr	r3, [sp, #32]
    1c60:	str	r3, [r6]
    1c64:	mov	r0, #0
    1c68:	b	21ac <normal_contentTok+0xe18>
    1c6c:	ldr	r0, [sp, #32]
    1c70:	add	r0, r0, #2
    1c74:	str	r0, [sp, #32]
    1c78:	b	19bc <normal_contentTok+0x628>
    1c7c:	cmp	ip, #22
    1c80:	beq	1cb0 <normal_contentTok+0x91c>
    1c84:	cmp	ip, #24
    1c88:	beq	1cb0 <normal_contentTok+0x91c>
    1c8c:	cmp	ip, #29
    1c90:	bne	1ca0 <normal_contentTok+0x90c>
    1c94:	str	r1, [r6]
    1c98:	mov	r0, #0
    1c9c:	b	21ac <normal_contentTok+0xe18>
    1ca0:	ldr	r3, [sp, #32]
    1ca4:	str	r3, [r6]
    1ca8:	mov	r0, #0
    1cac:	b	21ac <normal_contentTok+0xe18>
    1cb0:	ldr	r2, [sp, #32]
    1cb4:	add	r2, r2, #1
    1cb8:	str	r2, [sp, #32]
    1cbc:	b	19bc <normal_contentTok+0x628>
    1cc0:	ldr	r2, [sp, #32]
    1cc4:	add	r1, r2, #1
    1cc8:	str	r1, [sp, #32]
    1ccc:	cmp	r1, r7
    1cd0:	bne	1cdc <normal_contentTok+0x948>
    1cd4:	mvn	r0, #0
    1cd8:	b	21ac <normal_contentTok+0xe18>
    1cdc:	ldrb	r2, [r1]
    1ce0:	and	r2, r2, #255	; 0xff
    1ce4:	add	r2, r5, r2
    1ce8:	ldrb	r3, [r2, #76]	; 0x4c
    1cec:	cmp	r3, #14
    1cf0:	beq	1d18 <normal_contentTok+0x984>
    1cf4:	cmp	r3, #9
    1cf8:	beq	1cc0 <normal_contentTok+0x92c>
    1cfc:	cmp	r3, #10
    1d00:	beq	1cc0 <normal_contentTok+0x92c>
    1d04:	cmp	r3, #21
    1d08:	beq	1cc0 <normal_contentTok+0x92c>
    1d0c:	str	r1, [r6]
    1d10:	mov	r0, #0
    1d14:	b	21ac <normal_contentTok+0xe18>
    1d18:	mov	r4, #0
    1d1c:	ldr	r0, [sp, #32]
    1d20:	add	ip, r0, #1
    1d24:	str	ip, [sp, #32]
    1d28:	cmp	ip, r7
    1d2c:	bne	1d38 <normal_contentTok+0x9a4>
    1d30:	mvn	r0, #0
    1d34:	b	21ac <normal_contentTok+0xe18>
    1d38:	ldrb	r1, [ip]
    1d3c:	and	r1, r1, #255	; 0xff
    1d40:	add	r0, r5, r1
    1d44:	ldrb	r8, [r0, #76]	; 0x4c
    1d48:	mov	r1, #1
    1d4c:	cmp	r8, #13
    1d50:	moveq	r0, #1
    1d54:	movne	r0, #0
    1d58:	cmp	r8, #12
    1d5c:	moveq	r3, r1
    1d60:	movne	r3, r0
    1d64:	cmp	r3, #0
    1d68:	bne	1d90 <normal_contentTok+0x9fc>
    1d6c:	cmp	r8, #9
    1d70:	beq	1d1c <normal_contentTok+0x988>
    1d74:	cmp	r8, #10
    1d78:	beq	1d1c <normal_contentTok+0x988>
    1d7c:	cmp	r8, #21
    1d80:	beq	1d1c <normal_contentTok+0x988>
    1d84:	str	ip, [r6]
    1d88:	mov	r0, #0
    1d8c:	b	21ac <normal_contentTok+0xe18>
    1d90:	add	ip, ip, #1
    1d94:	str	ip, [sp, #32]
    1d98:	ldr	r1, [sp, #32]
    1d9c:	cmp	r1, r7
    1da0:	bne	1dac <normal_contentTok+0xa18>
    1da4:	mvn	r0, #0
    1da8:	b	21ac <normal_contentTok+0xe18>
    1dac:	ldrb	r0, [r1]
    1db0:	and	r2, r0, #255	; 0xff
    1db4:	add	r3, r5, r2
    1db8:	ldrb	r2, [r3, #76]	; 0x4c
    1dbc:	cmp	r2, r8
    1dc0:	beq	1f2c <normal_contentTok+0xb98>
    1dc4:	cmp	r2, #9
    1dc8:	bcs	1f1c <normal_contentTok+0xb88>
    1dcc:	add	pc, pc, r2, lsl #2
    1dd0:	nop	{0}
    1dd4:	b	1ed0 <normal_contentTok+0xb3c>
    1dd8:	b	1ed0 <normal_contentTok+0xb3c>
    1ddc:	b	1f10 <normal_contentTok+0xb7c>
    1de0:	b	1ee0 <normal_contentTok+0xb4c>
    1de4:	b	1f1c <normal_contentTok+0xb88>
    1de8:	b	1df8 <normal_contentTok+0xa64>
    1dec:	b	1e40 <normal_contentTok+0xaac>
    1df0:	b	1e88 <normal_contentTok+0xaf4>
    1df4:	b	1ed0 <normal_contentTok+0xb3c>
    1df8:	sub	r0, r7, r1
    1dfc:	cmp	r0, #2
    1e00:	bge	1e0c <normal_contentTok+0xa78>
    1e04:	mvn	r0, #1
    1e08:	b	21ac <normal_contentTok+0xe18>
    1e0c:	ldr	ip, [r5, #356]	; 0x164
    1e10:	mov	r0, r5
    1e14:	blx	ip
    1e18:	cmp	r0, #0
    1e1c:	beq	1e30 <normal_contentTok+0xa9c>
    1e20:	ldr	r1, [sp, #32]
    1e24:	str	r1, [r6]
    1e28:	mov	r0, #0
    1e2c:	b	21ac <normal_contentTok+0xe18>
    1e30:	ldr	r2, [sp, #32]
    1e34:	add	r2, r2, #2
    1e38:	str	r2, [sp, #32]
    1e3c:	b	1d98 <normal_contentTok+0xa04>
    1e40:	sub	r2, r7, r1
    1e44:	cmp	r2, #3
    1e48:	bge	1e54 <normal_contentTok+0xac0>
    1e4c:	mvn	r0, #1
    1e50:	b	21ac <normal_contentTok+0xe18>
    1e54:	ldr	r9, [r5, #360]	; 0x168
    1e58:	mov	r0, r5
    1e5c:	blx	r9
    1e60:	cmp	r0, #0
    1e64:	beq	1e78 <normal_contentTok+0xae4>
    1e68:	ldr	r2, [sp, #32]
    1e6c:	str	r2, [r6]
    1e70:	mov	r0, #0
    1e74:	b	21ac <normal_contentTok+0xe18>
    1e78:	ldr	r1, [sp, #32]
    1e7c:	add	r3, r1, #3
    1e80:	str	r3, [sp, #32]
    1e84:	b	1d98 <normal_contentTok+0xa04>
    1e88:	sub	ip, r7, r1
    1e8c:	cmp	ip, #4
    1e90:	bge	1e9c <normal_contentTok+0xb08>
    1e94:	mvn	r0, #1
    1e98:	b	21ac <normal_contentTok+0xe18>
    1e9c:	ldr	ip, [r5, #364]	; 0x16c
    1ea0:	mov	r0, r5
    1ea4:	blx	ip
    1ea8:	cmp	r0, #0
    1eac:	beq	1ec0 <normal_contentTok+0xb2c>
    1eb0:	ldr	r1, [sp, #32]
    1eb4:	str	r1, [r6]
    1eb8:	mov	r0, #0
    1ebc:	b	21ac <normal_contentTok+0xe18>
    1ec0:	ldr	r2, [sp, #32]
    1ec4:	add	r0, r2, #4
    1ec8:	str	r0, [sp, #32]
    1ecc:	b	1d98 <normal_contentTok+0xa04>
    1ed0:	ldr	ip, [sp, #32]
    1ed4:	str	ip, [r6]
    1ed8:	mov	r0, #0
    1edc:	b	21ac <normal_contentTok+0xe18>
    1ee0:	add	r1, r1, #1
    1ee4:	add	r3, sp, #32
    1ee8:	mov	r2, r7
    1eec:	mov	r0, r5
    1ef0:	bl	f14 <normal_scanRef>
    1ef4:	cmp	r0, #0
    1ef8:	bgt	1d98 <normal_contentTok+0xa04>
    1efc:	cmp	r0, #0
    1f00:	bne	21ac <normal_contentTok+0xe18>
    1f04:	ldr	r1, [sp, #32]
    1f08:	str	r1, [r6]
    1f0c:	b	21ac <normal_contentTok+0xe18>
    1f10:	str	r1, [r6]
    1f14:	mov	r0, #0
    1f18:	b	21ac <normal_contentTok+0xe18>
    1f1c:	ldr	r2, [sp, #32]
    1f20:	add	r2, r2, #1
    1f24:	str	r2, [sp, #32]
    1f28:	b	1d98 <normal_contentTok+0xa04>
    1f2c:	add	r3, r1, #1
    1f30:	str	r3, [sp, #32]
    1f34:	cmp	r3, r7
    1f38:	bne	1f44 <normal_contentTok+0xbb0>
    1f3c:	mvn	r0, #0
    1f40:	b	21ac <normal_contentTok+0xe18>
    1f44:	ldrb	r2, [r3]
    1f48:	and	r1, r2, #255	; 0xff
    1f4c:	add	ip, r5, r1
    1f50:	ldrb	ip, [ip, #76]	; 0x4c
    1f54:	cmp	ip, #11
    1f58:	bcs	1f70 <normal_contentTok+0xbdc>
    1f5c:	cmp	ip, #9
    1f60:	beq	1f98 <normal_contentTok+0xc04>
    1f64:	cmp	ip, #10
    1f68:	beq	1f98 <normal_contentTok+0xc04>
    1f6c:	b	1f88 <normal_contentTok+0xbf4>
    1f70:	cmp	ip, #11
    1f74:	beq	2184 <normal_contentTok+0xdf0>
    1f78:	cmp	ip, #17
    1f7c:	beq	2140 <normal_contentTok+0xdac>
    1f80:	cmp	ip, #21
    1f84:	beq	1f98 <normal_contentTok+0xc04>
    1f88:	ldr	r3, [sp, #32]
    1f8c:	str	r3, [r6]
    1f90:	mov	r0, #0
    1f94:	b	21ac <normal_contentTok+0xe18>
    1f98:	ldr	ip, [sp, #32]
    1f9c:	add	r1, ip, #1
    1fa0:	str	r1, [sp, #32]
    1fa4:	cmp	r1, r7
    1fa8:	bne	1fb4 <normal_contentTok+0xc20>
    1fac:	mvn	r0, #0
    1fb0:	b	21ac <normal_contentTok+0xe18>
    1fb4:	ldrb	ip, [r1]
    1fb8:	and	ip, ip, #255	; 0xff
    1fbc:	add	ip, r5, ip
    1fc0:	ldrb	r2, [ip, #76]	; 0x4c
    1fc4:	sub	r3, r2, #5
    1fc8:	cmp	r3, #25
    1fcc:	bcs	2130 <normal_contentTok+0xd9c>
    1fd0:	add	pc, pc, r3, lsl #2
    1fd4:	nop	{0}
    1fd8:	b	2058 <normal_contentTok+0xcc4>
    1fdc:	b	20a0 <normal_contentTok+0xd0c>
    1fe0:	b	20e8 <normal_contentTok+0xd54>
    1fe4:	b	2130 <normal_contentTok+0xd9c>
    1fe8:	b	1f98 <normal_contentTok+0xc04>
    1fec:	b	1f98 <normal_contentTok+0xc04>
    1ff0:	b	2184 <normal_contentTok+0xdf0>
    1ff4:	b	2130 <normal_contentTok+0xd9c>
    1ff8:	b	2130 <normal_contentTok+0xd9c>
    1ffc:	b	2130 <normal_contentTok+0xd9c>
    2000:	b	2130 <normal_contentTok+0xd9c>
    2004:	b	2130 <normal_contentTok+0xd9c>
    2008:	b	2140 <normal_contentTok+0xdac>
    200c:	b	2130 <normal_contentTok+0xd9c>
    2010:	b	2130 <normal_contentTok+0xd9c>
    2014:	b	2130 <normal_contentTok+0xd9c>
    2018:	b	1f98 <normal_contentTok+0xc04>
    201c:	b	2048 <normal_contentTok+0xcb4>
    2020:	b	2130 <normal_contentTok+0xd9c>
    2024:	b	2048 <normal_contentTok+0xcb4>
    2028:	b	2130 <normal_contentTok+0xd9c>
    202c:	b	2130 <normal_contentTok+0xd9c>
    2030:	b	2130 <normal_contentTok+0xd9c>
    2034:	b	2130 <normal_contentTok+0xd9c>
    2038:	b	203c <normal_contentTok+0xca8>
    203c:	str	r1, [r6]
    2040:	mov	r0, #0
    2044:	b	21ac <normal_contentTok+0xe18>
    2048:	ldr	r3, [sp, #32]
    204c:	add	r3, r3, #1
    2050:	str	r3, [sp, #32]
    2054:	b	19bc <normal_contentTok+0x628>
    2058:	sub	r0, r7, r1
    205c:	cmp	r0, #2
    2060:	bge	206c <normal_contentTok+0xcd8>
    2064:	mvn	r0, #1
    2068:	b	21ac <normal_contentTok+0xe18>
    206c:	ldr	ip, [r5, #344]	; 0x158
    2070:	mov	r0, r5
    2074:	blx	ip
    2078:	cmp	r0, #0
    207c:	bne	2090 <normal_contentTok+0xcfc>
    2080:	ldr	ip, [sp, #32]
    2084:	str	ip, [r6]
    2088:	mov	r0, #0
    208c:	b	21ac <normal_contentTok+0xe18>
    2090:	ldr	r2, [sp, #32]
    2094:	add	r2, r2, #2
    2098:	str	r2, [sp, #32]
    209c:	b	19bc <normal_contentTok+0x628>
    20a0:	sub	r0, r7, r1
    20a4:	cmp	r0, #3
    20a8:	bge	20b4 <normal_contentTok+0xd20>
    20ac:	mvn	r0, #1
    20b0:	b	21ac <normal_contentTok+0xe18>
    20b4:	ldr	ip, [r5, #348]	; 0x15c
    20b8:	mov	r0, r5
    20bc:	blx	ip
    20c0:	cmp	r0, #0
    20c4:	bne	20d8 <normal_contentTok+0xd44>
    20c8:	ldr	ip, [sp, #32]
    20cc:	str	ip, [r6]
    20d0:	mov	r0, #0
    20d4:	b	21ac <normal_contentTok+0xe18>
    20d8:	ldr	r0, [sp, #32]
    20dc:	add	r0, r0, #3
    20e0:	str	r0, [sp, #32]
    20e4:	b	19bc <normal_contentTok+0x628>
    20e8:	sub	r0, r7, r1
    20ec:	cmp	r0, #4
    20f0:	bge	20fc <normal_contentTok+0xd68>
    20f4:	mvn	r0, #1
    20f8:	b	21ac <normal_contentTok+0xe18>
    20fc:	ldr	ip, [r5, #352]	; 0x160
    2100:	mov	r0, r5
    2104:	blx	ip
    2108:	cmp	r0, #0
    210c:	bne	2120 <normal_contentTok+0xd8c>
    2110:	ldr	r3, [sp, #32]
    2114:	str	r3, [r6]
    2118:	mov	r0, #0
    211c:	b	21ac <normal_contentTok+0xe18>
    2120:	ldr	r0, [sp, #32]
    2124:	add	ip, r0, #4
    2128:	str	ip, [sp, #32]
    212c:	b	19bc <normal_contentTok+0x628>
    2130:	ldr	r0, [sp, #32]
    2134:	str	r0, [r6]
    2138:	mov	r0, #0
    213c:	b	21ac <normal_contentTok+0xe18>
    2140:	ldr	r0, [sp, #32]
    2144:	add	ip, r0, #1
    2148:	str	ip, [sp, #32]
    214c:	cmp	ip, r7
    2150:	bne	215c <normal_contentTok+0xdc8>
    2154:	mvn	r0, #0
    2158:	b	21ac <normal_contentTok+0xe18>
    215c:	ldrb	r0, [ip]
    2160:	cmp	r0, #62	; 0x3e
    2164:	beq	2174 <normal_contentTok+0xde0>
    2168:	str	ip, [r6]
    216c:	mov	r0, #0
    2170:	b	21ac <normal_contentTok+0xe18>
    2174:	add	r1, ip, #1
    2178:	str	r1, [r6]
    217c:	mov	r0, #3
    2180:	b	21ac <normal_contentTok+0xe18>
    2184:	ldr	r0, [sp, #32]
    2188:	add	ip, r0, #1
    218c:	str	ip, [r6]
    2190:	mov	r0, #1
    2194:	b	21ac <normal_contentTok+0xe18>
    2198:	ldr	r3, [sp, #32]
    219c:	str	r3, [r6]
    21a0:	mov	r0, #0
    21a4:	b	21ac <normal_contentTok+0xe18>
    21a8:	mvn	r0, #0
    21ac:	ldr	r4, [sp, #8]
    21b0:	ldr	r5, [sp, #12]
    21b4:	ldr	r6, [sp, #16]
    21b8:	ldr	r7, [sp, #20]
    21bc:	ldr	r8, [sp, #24]
    21c0:	ldr	r9, [sp, #28]
    21c4:	ldr	lr, [sp, #4]
    21c8:	add	sp, sp, #40	; 0x28
    21cc:	bx	lr
    21d0:	add	r4, r4, #1
    21d4:	b	1854 <normal_contentTok+0x4c0>
    21d8:	str	r4, [r6]
    21dc:	mov	r0, #0
    21e0:	b	26d0 <normal_contentTok+0x133c>
    21e4:	mvn	r0, #0
    21e8:	b	26d0 <normal_contentTok+0x133c>
    21ec:	add	r0, r4, #1
    21f0:	str	r0, [r6]
    21f4:	mov	r0, #2
    21f8:	b	26d0 <normal_contentTok+0x133c>
    21fc:	add	r1, r4, #1
    2200:	cmp	r1, r7
    2204:	bne	2210 <normal_contentTok+0xe7c>
    2208:	mvn	r0, #0
    220c:	b	26d0 <normal_contentTok+0x133c>
    2210:	ldrb	r3, [r1]
    2214:	cmp	r3, #62	; 0x3e
    2218:	beq	2228 <normal_contentTok+0xe94>
    221c:	str	r1, [r6]
    2220:	mov	r0, #0
    2224:	b	26d0 <normal_contentTok+0x133c>
    2228:	add	r2, r1, #1
    222c:	str	r2, [r6]
    2230:	mov	r0, #4
    2234:	b	26d0 <normal_contentTok+0x133c>
    2238:	str	r4, [r6]
    223c:	mov	r0, #0
    2240:	b	26d0 <normal_contentTok+0x133c>
    2244:	mvn	r0, #0
    2248:	b	26d0 <normal_contentTok+0x133c>
    224c:	add	r2, r8, #2
    2250:	cmp	r2, r7
    2254:	bne	2260 <normal_contentTok+0xecc>
    2258:	mvn	r0, #0
    225c:	b	26d0 <normal_contentTok+0x133c>
    2260:	ldrb	r3, [r8, #2]
    2264:	and	ip, r3, #255	; 0xff
    2268:	add	ip, r5, ip
    226c:	ldrb	r3, [ip, #76]	; 0x4c
    2270:	cmp	r3, #20
    2274:	beq	22c0 <normal_contentTok+0xf2c>
    2278:	cmp	r3, #27
    227c:	bne	22b4 <normal_contentTok+0xf20>
    2280:	add	r1, r8, #3
    2284:	mov	r3, r6
    2288:	mov	r2, r7
    228c:	mov	r0, r5
    2290:	ldr	r4, [sp, #8]
    2294:	ldr	r5, [sp, #12]
    2298:	ldr	r6, [sp, #16]
    229c:	ldr	r7, [sp, #20]
    22a0:	ldr	r8, [sp, #24]
    22a4:	ldr	r9, [sp, #28]
    22a8:	ldr	lr, [sp, #4]
    22ac:	add	sp, sp, #40	; 0x28
    22b0:	b	424 <normal_scanComment>
    22b4:	str	r2, [r6]
    22b8:	mov	r0, #0
    22bc:	b	26d0 <normal_contentTok+0x133c>
    22c0:	add	r0, r8, #3
    22c4:	sub	r1, r7, r0
    22c8:	cmp	r1, #6
    22cc:	bge	22d8 <normal_contentTok+0xf44>
    22d0:	mvn	r0, #0
    22d4:	b	2314 <normal_contentTok+0xf80>
    22d8:	mov	r1, #0
    22dc:	ldrb	ip, [r0]
    22e0:	ldr	r2, [pc, #1852]	; 2a24 <normal_contentTok+0x1690>
    22e4:	ldrb	r2, [r2, r1]
    22e8:	cmp	ip, r2
    22ec:	beq	22fc <normal_contentTok+0xf68>
    22f0:	str	r0, [r6]
    22f4:	mov	r0, #0
    22f8:	b	2314 <normal_contentTok+0xf80>
    22fc:	add	r1, r1, #1
    2300:	add	r0, r0, #1
    2304:	cmp	r1, #6
    2308:	blt	22dc <normal_contentTok+0xf48>
    230c:	str	r0, [r6]
    2310:	mov	r0, #8
    2314:	ldr	r4, [sp, #8]
    2318:	ldr	r5, [sp, #12]
    231c:	ldr	r6, [sp, #16]
    2320:	ldr	r7, [sp, #20]
    2324:	ldr	r8, [sp, #24]
    2328:	ldr	r9, [sp, #28]
    232c:	ldr	lr, [sp, #4]
    2330:	add	sp, sp, #40	; 0x28
    2334:	bx	lr
    2338:	add	r1, r8, #2
    233c:	mov	r3, r6
    2340:	mov	r2, r7
    2344:	mov	r0, r5
    2348:	ldr	r4, [sp, #8]
    234c:	ldr	r5, [sp, #12]
    2350:	ldr	r6, [sp, #16]
    2354:	ldr	r7, [sp, #20]
    2358:	ldr	r8, [sp, #24]
    235c:	ldr	r9, [sp, #28]
    2360:	ldr	lr, [sp, #4]
    2364:	add	sp, sp, #40	; 0x28
    2368:	b	6e0 <normal_scanPi>
    236c:	add	r4, r8, #2
    2370:	cmp	r4, r7
    2374:	bne	2380 <normal_contentTok+0xfec>
    2378:	mvn	r0, #0
    237c:	b	26a4 <normal_contentTok+0x1310>
    2380:	ldrb	r0, [r8, #2]
    2384:	and	r0, r0, #255	; 0xff
    2388:	add	r1, r5, r0
    238c:	ldrb	r1, [r1, #76]	; 0x4c
    2390:	cmp	r1, #22
    2394:	bcs	2470 <normal_contentTok+0x10dc>
    2398:	cmp	r1, #5
    239c:	beq	2430 <normal_contentTok+0x109c>
    23a0:	cmp	r1, #6
    23a4:	beq	23f0 <normal_contentTok+0x105c>
    23a8:	cmp	r1, #7
    23ac:	bne	2494 <normal_contentTok+0x1100>
    23b0:	sub	r0, r7, r4
    23b4:	cmp	r0, #4
    23b8:	bge	23c4 <normal_contentTok+0x1030>
    23bc:	mvn	r0, #1
    23c0:	b	26a4 <normal_contentTok+0x1310>
    23c4:	ldr	ip, [r5, #352]	; 0x160
    23c8:	mov	r1, r4
    23cc:	mov	r0, r5
    23d0:	blx	ip
    23d4:	cmp	r0, #0
    23d8:	bne	23e8 <normal_contentTok+0x1054>
    23dc:	str	r4, [r6]
    23e0:	mov	r0, #0
    23e4:	b	26a4 <normal_contentTok+0x1310>
    23e8:	add	r4, r4, #4
    23ec:	b	24a4 <normal_contentTok+0x1110>
    23f0:	sub	r2, r7, r4
    23f4:	cmp	r2, #3
    23f8:	bge	2404 <normal_contentTok+0x1070>
    23fc:	mvn	r0, #1
    2400:	b	26a4 <normal_contentTok+0x1310>
    2404:	ldr	ip, [r5, #348]	; 0x15c
    2408:	mov	r1, r4
    240c:	mov	r0, r5
    2410:	blx	ip
    2414:	cmp	r0, #0
    2418:	bne	2428 <normal_contentTok+0x1094>
    241c:	str	r4, [r6]
    2420:	mov	r0, #0
    2424:	b	26a4 <normal_contentTok+0x1310>
    2428:	add	r4, r4, #3
    242c:	b	24a4 <normal_contentTok+0x1110>
    2430:	sub	r1, r7, r4
    2434:	cmp	r1, #2
    2438:	bge	2444 <normal_contentTok+0x10b0>
    243c:	mvn	r0, #1
    2440:	b	26a4 <normal_contentTok+0x1310>
    2444:	ldr	ip, [r5, #344]	; 0x158
    2448:	mov	r1, r4
    244c:	mov	r0, r5
    2450:	blx	ip
    2454:	cmp	r0, #0
    2458:	bne	2468 <normal_contentTok+0x10d4>
    245c:	str	r4, [r6]
    2460:	mov	r0, #0
    2464:	b	26a4 <normal_contentTok+0x1310>
    2468:	add	r4, r4, #2
    246c:	b	24a4 <normal_contentTok+0x1110>
    2470:	cmp	r1, #22
    2474:	beq	24a0 <normal_contentTok+0x110c>
    2478:	cmp	r1, #24
    247c:	beq	24a0 <normal_contentTok+0x110c>
    2480:	cmp	r1, #29
    2484:	bne	2494 <normal_contentTok+0x1100>
    2488:	str	r4, [r6]
    248c:	mov	r0, #0
    2490:	b	26a4 <normal_contentTok+0x1310>
    2494:	str	r4, [r6]
    2498:	mov	r0, #0
    249c:	b	26a4 <normal_contentTok+0x1310>
    24a0:	add	r4, r4, #1
    24a4:	cmp	r4, r7
    24a8:	beq	26a0 <normal_contentTok+0x130c>
    24ac:	ldrb	r1, [r4]
    24b0:	and	r1, r1, #255	; 0xff
    24b4:	add	r0, r5, r1
    24b8:	ldrb	r1, [r0, #76]	; 0x4c
    24bc:	sub	ip, r1, #5
    24c0:	cmp	ip, #25
    24c4:	bcs	2694 <normal_contentTok+0x1300>
    24c8:	add	pc, pc, ip, lsl #2
    24cc:	nop	{0}
    24d0:	b	2548 <normal_contentTok+0x11b4>
    24d4:	b	2588 <normal_contentTok+0x11f4>
    24d8:	b	25c8 <normal_contentTok+0x1234>
    24dc:	b	2694 <normal_contentTok+0x1300>
    24e0:	b	2608 <normal_contentTok+0x1274>
    24e4:	b	2608 <normal_contentTok+0x1274>
    24e8:	b	2684 <normal_contentTok+0x12f0>
    24ec:	b	2694 <normal_contentTok+0x1300>
    24f0:	b	2694 <normal_contentTok+0x1300>
    24f4:	b	2694 <normal_contentTok+0x1300>
    24f8:	b	2694 <normal_contentTok+0x1300>
    24fc:	b	2694 <normal_contentTok+0x1300>
    2500:	b	2694 <normal_contentTok+0x1300>
    2504:	b	2694 <normal_contentTok+0x1300>
    2508:	b	2694 <normal_contentTok+0x1300>
    250c:	b	2694 <normal_contentTok+0x1300>
    2510:	b	2608 <normal_contentTok+0x1274>
    2514:	b	2540 <normal_contentTok+0x11ac>
    2518:	b	267c <normal_contentTok+0x12e8>
    251c:	b	2540 <normal_contentTok+0x11ac>
    2520:	b	2540 <normal_contentTok+0x11ac>
    2524:	b	2540 <normal_contentTok+0x11ac>
    2528:	b	2540 <normal_contentTok+0x11ac>
    252c:	b	2694 <normal_contentTok+0x1300>
    2530:	b	2534 <normal_contentTok+0x11a0>
    2534:	str	r4, [r6]
    2538:	mov	r0, #0
    253c:	b	26a4 <normal_contentTok+0x1310>
    2540:	add	r4, r4, #1
    2544:	b	24a4 <normal_contentTok+0x1110>
    2548:	sub	r2, r7, r4
    254c:	cmp	r2, #2
    2550:	bge	255c <normal_contentTok+0x11c8>
    2554:	mvn	r0, #1
    2558:	b	26a4 <normal_contentTok+0x1310>
    255c:	ldr	ip, [r5, #332]	; 0x14c
    2560:	mov	r1, r4
    2564:	mov	r0, r5
    2568:	blx	ip
    256c:	cmp	r0, #0
    2570:	bne	2580 <normal_contentTok+0x11ec>
    2574:	str	r4, [r6]
    2578:	mov	r0, #0
    257c:	b	26a4 <normal_contentTok+0x1310>
    2580:	add	r4, r4, #2
    2584:	b	24a4 <normal_contentTok+0x1110>
    2588:	sub	r0, r7, r4
    258c:	cmp	r0, #3
    2590:	bge	259c <normal_contentTok+0x1208>
    2594:	mvn	r0, #1
    2598:	b	26a4 <normal_contentTok+0x1310>
    259c:	ldr	r8, [r5, #336]	; 0x150
    25a0:	mov	r1, r4
    25a4:	mov	r0, r5
    25a8:	blx	r8
    25ac:	cmp	r0, #0
    25b0:	bne	25c0 <normal_contentTok+0x122c>
    25b4:	str	r4, [r6]
    25b8:	mov	r0, #0
    25bc:	b	26a4 <normal_contentTok+0x1310>
    25c0:	add	r4, r4, #3
    25c4:	b	24a4 <normal_contentTok+0x1110>
    25c8:	sub	r0, r7, r4
    25cc:	cmp	r0, #4
    25d0:	bge	25dc <normal_contentTok+0x1248>
    25d4:	mvn	r0, #1
    25d8:	b	26a4 <normal_contentTok+0x1310>
    25dc:	ldr	ip, [r5, #340]	; 0x154
    25e0:	mov	r1, r4
    25e4:	mov	r0, r5
    25e8:	blx	ip
    25ec:	cmp	r0, #0
    25f0:	bne	2600 <normal_contentTok+0x126c>
    25f4:	str	r4, [r6]
    25f8:	mov	r0, #0
    25fc:	b	26a4 <normal_contentTok+0x1310>
    2600:	add	r4, r4, #4
    2604:	b	24a4 <normal_contentTok+0x1110>
    2608:	add	ip, r4, #1
    260c:	cmp	ip, r7
    2610:	beq	2674 <normal_contentTok+0x12e0>
    2614:	ldrb	r0, [ip]
    2618:	and	r0, r0, #255	; 0xff
    261c:	add	r1, r5, r0
    2620:	ldrb	r2, [r1, #76]	; 0x4c
    2624:	cmp	r2, #11
    2628:	bcs	2640 <normal_contentTok+0x12ac>
    262c:	cmp	r2, #9
    2630:	beq	265c <normal_contentTok+0x12c8>
    2634:	cmp	r2, #10
    2638:	beq	265c <normal_contentTok+0x12c8>
    263c:	b	2650 <normal_contentTok+0x12bc>
    2640:	cmp	r2, #11
    2644:	beq	2664 <normal_contentTok+0x12d0>
    2648:	cmp	r2, #21
    264c:	beq	265c <normal_contentTok+0x12c8>
    2650:	str	ip, [r6]
    2654:	mov	r0, #0
    2658:	b	26a4 <normal_contentTok+0x1310>
    265c:	add	ip, ip, #1
    2660:	b	260c <normal_contentTok+0x1278>
    2664:	add	r1, ip, #1
    2668:	str	r1, [r6]
    266c:	mov	r0, #5
    2670:	b	26a4 <normal_contentTok+0x1310>
    2674:	mvn	r0, #0
    2678:	b	26a4 <normal_contentTok+0x1310>
    267c:	add	r4, r4, #1
    2680:	b	24a4 <normal_contentTok+0x1110>
    2684:	add	r1, r4, #1
    2688:	str	r1, [r6]
    268c:	mov	r0, #5
    2690:	b	26a4 <normal_contentTok+0x1310>
    2694:	str	r4, [r6]
    2698:	mov	r0, #0
    269c:	b	26a4 <normal_contentTok+0x1310>
    26a0:	mvn	r0, #0
    26a4:	ldr	r4, [sp, #8]
    26a8:	ldr	r5, [sp, #12]
    26ac:	ldr	r6, [sp, #16]
    26b0:	ldr	r7, [sp, #20]
    26b4:	ldr	r8, [sp, #24]
    26b8:	ldr	r9, [sp, #28]
    26bc:	ldr	lr, [sp, #4]
    26c0:	add	sp, sp, #40	; 0x28
    26c4:	bx	lr
    26c8:	str	r4, [r6]
    26cc:	mov	r0, #0
    26d0:	ldr	r4, [sp, #8]
    26d4:	ldr	r5, [sp, #12]
    26d8:	ldr	r6, [sp, #16]
    26dc:	ldr	r7, [sp, #20]
    26e0:	ldr	r8, [sp, #24]
    26e4:	ldr	r9, [sp, #28]
    26e8:	ldr	lr, [sp, #4]
    26ec:	add	sp, sp, #40	; 0x28
    26f0:	bx	lr
    26f4:	add	r1, r8, #1
    26f8:	mov	r3, r6
    26fc:	mov	r2, r7
    2700:	mov	r0, r5
    2704:	ldr	r4, [sp, #8]
    2708:	ldr	r5, [sp, #12]
    270c:	ldr	r6, [sp, #16]
    2710:	ldr	r7, [sp, #20]
    2714:	ldr	r8, [sp, #24]
    2718:	ldr	r9, [sp, #28]
    271c:	ldr	lr, [sp, #4]
    2720:	add	sp, sp, #40	; 0x28
    2724:	b	f14 <normal_scanRef>
    2728:	add	r2, r8, #1
    272c:	cmp	r2, r7
    2730:	bne	273c <normal_contentTok+0x13a8>
    2734:	mvn	r0, #2
    2738:	b	2a00 <normal_contentTok+0x166c>
    273c:	add	r1, r2, #1
    2740:	ldrb	r0, [r2]
    2744:	and	r0, r0, #255	; 0xff
    2748:	add	r3, r5, r0
    274c:	ldrb	r3, [r3, #76]	; 0x4c
    2750:	cmp	r3, #10
    2754:	moveq	r1, r1
    2758:	movne	r1, r2
    275c:	str	r1, [r6]
    2760:	mov	r0, #7
    2764:	b	2a00 <normal_contentTok+0x166c>
    2768:	add	ip, r8, #1
    276c:	str	ip, [r6]
    2770:	mov	r0, #7
    2774:	b	2a00 <normal_contentTok+0x166c>
    2778:	add	r4, r8, #1
    277c:	cmp	r4, r7
    2780:	bne	278c <normal_contentTok+0x13f8>
    2784:	mvn	r0, #4
    2788:	b	2a00 <normal_contentTok+0x166c>
    278c:	ldrb	r3, [r4]
    2790:	cmp	r3, #93	; 0x5d
    2794:	bne	289c <normal_contentTok+0x1508>
    2798:	add	r1, r4, #1
    279c:	cmp	r1, r7
    27a0:	bne	27ac <normal_contentTok+0x1418>
    27a4:	mvn	r0, #4
    27a8:	b	2a00 <normal_contentTok+0x166c>
    27ac:	ldrb	r2, [r1]
    27b0:	cmp	r2, #62	; 0x3e
    27b4:	beq	27c0 <normal_contentTok+0x142c>
    27b8:	sub	r4, r1, #1
    27bc:	b	289c <normal_contentTok+0x1508>
    27c0:	str	r1, [r6]
    27c4:	mov	r0, #0
    27c8:	b	2a00 <normal_contentTok+0x166c>
    27cc:	sub	r3, r7, r8
    27d0:	cmp	r3, #2
    27d4:	bge	27e0 <normal_contentTok+0x144c>
    27d8:	mvn	r0, #1
    27dc:	b	2a00 <normal_contentTok+0x166c>
    27e0:	ldr	ip, [r5, #356]	; 0x164
    27e4:	mov	r1, r8
    27e8:	mov	r0, r5
    27ec:	blx	ip
    27f0:	cmp	r0, #0
    27f4:	beq	2804 <normal_contentTok+0x1470>
    27f8:	str	r8, [r6]
    27fc:	mov	r0, #0
    2800:	b	2a00 <normal_contentTok+0x166c>
    2804:	add	r4, r8, #2
    2808:	b	289c <normal_contentTok+0x1508>
    280c:	sub	r2, r7, r8
    2810:	cmp	r2, #3
    2814:	bge	2820 <normal_contentTok+0x148c>
    2818:	mvn	r0, #1
    281c:	b	2a00 <normal_contentTok+0x166c>
    2820:	ldr	r4, [r5, #360]	; 0x168
    2824:	mov	r1, r8
    2828:	mov	r0, r5
    282c:	blx	r4
    2830:	cmp	r0, #0
    2834:	beq	2844 <normal_contentTok+0x14b0>
    2838:	str	r8, [r6]
    283c:	mov	r0, #0
    2840:	b	2a00 <normal_contentTok+0x166c>
    2844:	add	r4, r8, #3
    2848:	b	289c <normal_contentTok+0x1508>
    284c:	sub	r3, r7, r8
    2850:	cmp	r3, #4
    2854:	bge	2860 <normal_contentTok+0x14cc>
    2858:	mvn	r0, #1
    285c:	b	2a00 <normal_contentTok+0x166c>
    2860:	ldr	ip, [r5, #364]	; 0x16c
    2864:	mov	r1, r8
    2868:	mov	r0, r5
    286c:	blx	ip
    2870:	cmp	r0, #0
    2874:	beq	2884 <normal_contentTok+0x14f0>
    2878:	str	r8, [r6]
    287c:	mov	r0, #0
    2880:	b	2a00 <normal_contentTok+0x166c>
    2884:	add	r4, r8, #4
    2888:	b	289c <normal_contentTok+0x1508>
    288c:	str	r8, [r6]
    2890:	mov	r0, #0
    2894:	b	2a00 <normal_contentTok+0x166c>
    2898:	add	r4, r8, #1
    289c:	cmp	r4, r7
    28a0:	beq	29f8 <normal_contentTok+0x1664>
    28a4:	ldrb	r1, [r4]
    28a8:	and	r2, r1, #255	; 0xff
    28ac:	add	r3, r5, r2
    28b0:	ldrb	r0, [r3, #76]	; 0x4c
    28b4:	cmp	r0, #11
    28b8:	bcs	29f0 <normal_contentTok+0x165c>
    28bc:	add	pc, pc, r0, lsl #2
    28c0:	nop	{0}
    28c4:	b	29e4 <normal_contentTok+0x1650>
    28c8:	b	29e4 <normal_contentTok+0x1650>
    28cc:	b	29e4 <normal_contentTok+0x1650>
    28d0:	b	29e4 <normal_contentTok+0x1650>
    28d4:	b	2998 <normal_contentTok+0x1604>
    28d8:	b	28f0 <normal_contentTok+0x155c>
    28dc:	b	2928 <normal_contentTok+0x1594>
    28e0:	b	2960 <normal_contentTok+0x15cc>
    28e4:	b	29e4 <normal_contentTok+0x1650>
    28e8:	b	29e4 <normal_contentTok+0x1650>
    28ec:	b	29e4 <normal_contentTok+0x1650>
    28f0:	sub	r2, r7, r4
    28f4:	cmp	r2, #2
    28f8:	blt	291c <normal_contentTok+0x1588>
    28fc:	ldr	ip, [r5, #356]	; 0x164
    2900:	mov	r1, r4
    2904:	mov	r0, r5
    2908:	blx	ip
    290c:	cmp	r0, #0
    2910:	bne	291c <normal_contentTok+0x1588>
    2914:	add	r4, r4, #2
    2918:	b	289c <normal_contentTok+0x1508>
    291c:	str	r4, [r6]
    2920:	mov	r0, #6
    2924:	b	2a00 <normal_contentTok+0x166c>
    2928:	sub	r2, r7, r4
    292c:	cmp	r2, #3
    2930:	blt	2954 <normal_contentTok+0x15c0>
    2934:	ldr	ip, [r5, #360]	; 0x168
    2938:	mov	r1, r4
    293c:	mov	r0, r5
    2940:	blx	ip
    2944:	cmp	r0, #0
    2948:	bne	2954 <normal_contentTok+0x15c0>
    294c:	add	r4, r4, #3
    2950:	b	289c <normal_contentTok+0x1508>
    2954:	str	r4, [r6]
    2958:	mov	r0, #6
    295c:	b	2a00 <normal_contentTok+0x166c>
    2960:	sub	ip, r7, r4
    2964:	cmp	ip, #4
    2968:	blt	298c <normal_contentTok+0x15f8>
    296c:	ldr	r8, [r5, #364]	; 0x16c
    2970:	mov	r1, r4
    2974:	mov	r0, r5
    2978:	blx	r8
    297c:	cmp	r0, #0
    2980:	bne	298c <normal_contentTok+0x15f8>
    2984:	add	r4, r4, #4
    2988:	b	289c <normal_contentTok+0x1508>
    298c:	str	r4, [r6]
    2990:	mov	r0, #6
    2994:	b	2a00 <normal_contentTok+0x166c>
    2998:	add	r2, r4, #1
    299c:	cmp	r2, r7
    29a0:	beq	29e4 <normal_contentTok+0x1650>
    29a4:	ldrb	r3, [r4, #1]
    29a8:	cmp	r3, #93	; 0x5d
    29ac:	beq	29b8 <normal_contentTok+0x1624>
    29b0:	mov	r4, r2
    29b4:	b	289c <normal_contentTok+0x1508>
    29b8:	add	r3, r4, #2
    29bc:	cmp	r3, r7
    29c0:	beq	29e4 <normal_contentTok+0x1650>
    29c4:	ldrb	ip, [r4, #2]
    29c8:	cmp	ip, #62	; 0x3e
    29cc:	beq	29d8 <normal_contentTok+0x1644>
    29d0:	mov	r4, r2
    29d4:	b	289c <normal_contentTok+0x1508>
    29d8:	str	r3, [r6]
    29dc:	mov	r0, #0
    29e0:	b	2a00 <normal_contentTok+0x166c>
    29e4:	str	r4, [r6]
    29e8:	mov	r0, #6
    29ec:	b	2a00 <normal_contentTok+0x166c>
    29f0:	add	r4, r4, #1
    29f4:	b	289c <normal_contentTok+0x1508>
    29f8:	str	r4, [r6]
    29fc:	mov	r0, #6
    2a00:	ldr	r4, [sp, #8]
    2a04:	ldr	r5, [sp, #12]
    2a08:	ldr	r6, [sp, #16]
    2a0c:	ldr	r7, [sp, #20]
    2a10:	ldr	r8, [sp, #24]
    2a14:	ldr	r9, [sp, #28]
    2a18:	ldr	lr, [sp, #4]
    2a1c:	add	sp, sp, #40	; 0x28
    2a20:	bx	lr
    2a24:	.word	0x00000700

00002a28 <normal_scanPercent>:
    2a28:	mov	ip, sp
    2a2c:	sub	sp, sp, #32
    2a30:	str	ip, [sp]
    2a34:	str	lr, [sp, #4]
    2a38:	str	r4, [sp, #8]
    2a3c:	str	r5, [sp, #12]
    2a40:	str	r6, [sp, #16]
    2a44:	str	r7, [sp, #20]
    2a48:	str	r8, [sp, #24]
    2a4c:	mov	r6, r3
    2a50:	mov	r7, r2
    2a54:	mov	r4, r1
    2a58:	mov	r5, r0
    2a5c:	cmp	r4, r7
    2a60:	bne	2a6c <normal_scanPercent+0x44>
    2a64:	mvn	r0, #0
    2a68:	b	2d64 <normal_scanPercent+0x33c>
    2a6c:	ldrb	r2, [r4]
    2a70:	and	r2, r2, #255	; 0xff
    2a74:	add	r2, r5, r2
    2a78:	ldrb	r0, [r2, #76]	; 0x4c
    2a7c:	sub	r1, r0, #5
    2a80:	cmp	r1, #26
    2a84:	bcs	2d5c <normal_scanPercent+0x334>
    2a88:	add	pc, pc, r1, lsl #2
    2a8c:	nop	{0}
    2a90:	b	2b0c <normal_scanPercent+0xe4>
    2a94:	b	2b4c <normal_scanPercent+0x124>
    2a98:	b	2b8c <normal_scanPercent+0x164>
    2a9c:	b	2d5c <normal_scanPercent+0x334>
    2aa0:	b	2d50 <normal_scanPercent+0x328>
    2aa4:	b	2d50 <normal_scanPercent+0x328>
    2aa8:	b	2d5c <normal_scanPercent+0x334>
    2aac:	b	2d5c <normal_scanPercent+0x334>
    2ab0:	b	2d5c <normal_scanPercent+0x334>
    2ab4:	b	2d5c <normal_scanPercent+0x334>
    2ab8:	b	2d5c <normal_scanPercent+0x334>
    2abc:	b	2d5c <normal_scanPercent+0x334>
    2ac0:	b	2d5c <normal_scanPercent+0x334>
    2ac4:	b	2d5c <normal_scanPercent+0x334>
    2ac8:	b	2d5c <normal_scanPercent+0x334>
    2acc:	b	2d5c <normal_scanPercent+0x334>
    2ad0:	b	2d50 <normal_scanPercent+0x328>
    2ad4:	b	2b04 <normal_scanPercent+0xdc>
    2ad8:	b	2d5c <normal_scanPercent+0x334>
    2adc:	b	2b04 <normal_scanPercent+0xdc>
    2ae0:	b	2d5c <normal_scanPercent+0x334>
    2ae4:	b	2d5c <normal_scanPercent+0x334>
    2ae8:	b	2d5c <normal_scanPercent+0x334>
    2aec:	b	2d5c <normal_scanPercent+0x334>
    2af0:	b	2af8 <normal_scanPercent+0xd0>
    2af4:	b	2d50 <normal_scanPercent+0x328>
    2af8:	str	r4, [r6]
    2afc:	mov	r0, #0
    2b00:	b	2d64 <normal_scanPercent+0x33c>
    2b04:	add	r4, r4, #1
    2b08:	b	2bc8 <normal_scanPercent+0x1a0>
    2b0c:	sub	ip, r7, r4
    2b10:	cmp	ip, #2
    2b14:	bge	2b20 <normal_scanPercent+0xf8>
    2b18:	mvn	r0, #1
    2b1c:	b	2d64 <normal_scanPercent+0x33c>
    2b20:	ldr	ip, [r5, #344]	; 0x158
    2b24:	mov	r1, r4
    2b28:	mov	r0, r5
    2b2c:	blx	ip
    2b30:	cmp	r0, #0
    2b34:	bne	2b44 <normal_scanPercent+0x11c>
    2b38:	str	r4, [r6]
    2b3c:	mov	r0, #0
    2b40:	b	2d64 <normal_scanPercent+0x33c>
    2b44:	add	r4, r4, #2
    2b48:	b	2bc8 <normal_scanPercent+0x1a0>
    2b4c:	sub	r0, r7, r4
    2b50:	cmp	r0, #3
    2b54:	bge	2b60 <normal_scanPercent+0x138>
    2b58:	mvn	r0, #1
    2b5c:	b	2d64 <normal_scanPercent+0x33c>
    2b60:	ldr	r8, [r5, #348]	; 0x15c
    2b64:	mov	r1, r4
    2b68:	mov	r0, r5
    2b6c:	blx	r8
    2b70:	cmp	r0, #0
    2b74:	bne	2b84 <normal_scanPercent+0x15c>
    2b78:	str	r4, [r6]
    2b7c:	mov	r0, #0
    2b80:	b	2d64 <normal_scanPercent+0x33c>
    2b84:	add	r4, r4, #3
    2b88:	b	2bc8 <normal_scanPercent+0x1a0>
    2b8c:	sub	r2, r7, r4
    2b90:	cmp	r2, #4
    2b94:	bge	2ba0 <normal_scanPercent+0x178>
    2b98:	mvn	r0, #1
    2b9c:	b	2d64 <normal_scanPercent+0x33c>
    2ba0:	ldr	ip, [r5, #352]	; 0x160
    2ba4:	mov	r1, r4
    2ba8:	mov	r0, r5
    2bac:	blx	ip
    2bb0:	cmp	r0, #0
    2bb4:	bne	2bc4 <normal_scanPercent+0x19c>
    2bb8:	str	r4, [r6]
    2bbc:	mov	r0, #0
    2bc0:	b	2d64 <normal_scanPercent+0x33c>
    2bc4:	add	r4, r4, #4
    2bc8:	cmp	r4, r7
    2bcc:	beq	2d48 <normal_scanPercent+0x320>
    2bd0:	ldrb	r3, [r4]
    2bd4:	and	r3, r3, #255	; 0xff
    2bd8:	add	r0, r5, r3
    2bdc:	ldrb	r1, [r0, #76]	; 0x4c
    2be0:	sub	r2, r1, #5
    2be4:	cmp	r2, #25
    2be8:	bcs	2d3c <normal_scanPercent+0x314>
    2bec:	add	pc, pc, r2, lsl #2
    2bf0:	nop	{0}
    2bf4:	b	2c6c <normal_scanPercent+0x244>
    2bf8:	b	2cac <normal_scanPercent+0x284>
    2bfc:	b	2cec <normal_scanPercent+0x2c4>
    2c00:	b	2d3c <normal_scanPercent+0x314>
    2c04:	b	2d3c <normal_scanPercent+0x314>
    2c08:	b	2d3c <normal_scanPercent+0x314>
    2c0c:	b	2d3c <normal_scanPercent+0x314>
    2c10:	b	2d3c <normal_scanPercent+0x314>
    2c14:	b	2d3c <normal_scanPercent+0x314>
    2c18:	b	2d3c <normal_scanPercent+0x314>
    2c1c:	b	2d3c <normal_scanPercent+0x314>
    2c20:	b	2d3c <normal_scanPercent+0x314>
    2c24:	b	2d3c <normal_scanPercent+0x314>
    2c28:	b	2d2c <normal_scanPercent+0x304>
    2c2c:	b	2d3c <normal_scanPercent+0x314>
    2c30:	b	2d3c <normal_scanPercent+0x314>
    2c34:	b	2d3c <normal_scanPercent+0x314>
    2c38:	b	2c64 <normal_scanPercent+0x23c>
    2c3c:	b	2d3c <normal_scanPercent+0x314>
    2c40:	b	2c64 <normal_scanPercent+0x23c>
    2c44:	b	2c64 <normal_scanPercent+0x23c>
    2c48:	b	2c64 <normal_scanPercent+0x23c>
    2c4c:	b	2c64 <normal_scanPercent+0x23c>
    2c50:	b	2d3c <normal_scanPercent+0x314>
    2c54:	b	2c58 <normal_scanPercent+0x230>
    2c58:	str	r4, [r6]
    2c5c:	mov	r0, #0
    2c60:	b	2d64 <normal_scanPercent+0x33c>
    2c64:	add	r4, r4, #1
    2c68:	b	2bc8 <normal_scanPercent+0x1a0>
    2c6c:	sub	r2, r7, r4
    2c70:	cmp	r2, #2
    2c74:	bge	2c80 <normal_scanPercent+0x258>
    2c78:	mvn	r0, #1
    2c7c:	b	2d64 <normal_scanPercent+0x33c>
    2c80:	ldr	ip, [r5, #332]	; 0x14c
    2c84:	mov	r1, r4
    2c88:	mov	r0, r5
    2c8c:	blx	ip
    2c90:	cmp	r0, #0
    2c94:	bne	2ca4 <normal_scanPercent+0x27c>
    2c98:	str	r4, [r6]
    2c9c:	mov	r0, #0
    2ca0:	b	2d64 <normal_scanPercent+0x33c>
    2ca4:	add	r4, r4, #2
    2ca8:	b	2bc8 <normal_scanPercent+0x1a0>
    2cac:	sub	r1, r7, r4
    2cb0:	cmp	r1, #3
    2cb4:	bge	2cc0 <normal_scanPercent+0x298>
    2cb8:	mvn	r0, #1
    2cbc:	b	2d64 <normal_scanPercent+0x33c>
    2cc0:	ldr	ip, [r5, #336]	; 0x150
    2cc4:	mov	r1, r4
    2cc8:	mov	r0, r5
    2ccc:	blx	ip
    2cd0:	cmp	r0, #0
    2cd4:	bne	2ce4 <normal_scanPercent+0x2bc>
    2cd8:	str	r4, [r6]
    2cdc:	mov	r0, #0
    2ce0:	b	2d64 <normal_scanPercent+0x33c>
    2ce4:	add	r4, r4, #3
    2ce8:	b	2bc8 <normal_scanPercent+0x1a0>
    2cec:	sub	r0, r7, r4
    2cf0:	cmp	r0, #4
    2cf4:	bge	2d00 <normal_scanPercent+0x2d8>
    2cf8:	mvn	r0, #1
    2cfc:	b	2d64 <normal_scanPercent+0x33c>
    2d00:	ldr	r8, [r5, #340]	; 0x154
    2d04:	mov	r1, r4
    2d08:	mov	r0, r5
    2d0c:	blx	r8
    2d10:	cmp	r0, #0
    2d14:	bne	2d24 <normal_scanPercent+0x2fc>
    2d18:	str	r4, [r6]
    2d1c:	mov	r0, #0
    2d20:	b	2d64 <normal_scanPercent+0x33c>
    2d24:	add	r4, r4, #4
    2d28:	b	2bc8 <normal_scanPercent+0x1a0>
    2d2c:	add	r1, r4, #1
    2d30:	str	r1, [r6]
    2d34:	mov	r0, #28
    2d38:	b	2d64 <normal_scanPercent+0x33c>
    2d3c:	str	r4, [r6]
    2d40:	mov	r0, #0
    2d44:	b	2d64 <normal_scanPercent+0x33c>
    2d48:	mvn	r0, #0
    2d4c:	b	2d64 <normal_scanPercent+0x33c>
    2d50:	str	r4, [r6]
    2d54:	mov	r0, #22
    2d58:	b	2d64 <normal_scanPercent+0x33c>
    2d5c:	str	r4, [r6]
    2d60:	mov	r0, #0
    2d64:	ldr	r4, [sp, #8]
    2d68:	ldr	r5, [sp, #12]
    2d6c:	ldr	r6, [sp, #16]
    2d70:	ldr	r7, [sp, #20]
    2d74:	ldr	r8, [sp, #24]
    2d78:	ldr	lr, [sp, #4]
    2d7c:	add	sp, sp, #32
    2d80:	bx	lr

00002d84 <normal_scanLit>:
    2d84:	mov	ip, sp
    2d88:	sub	sp, sp, #32
    2d8c:	str	ip, [sp]
    2d90:	str	lr, [sp, #4]
    2d94:	str	r4, [sp, #8]
    2d98:	str	r5, [sp, #12]
    2d9c:	str	r6, [sp, #16]
    2da0:	str	r7, [sp, #20]
    2da4:	str	r8, [sp, #24]
    2da8:	ldr	r8, [ip]
    2dac:	mov	r6, r3
    2db0:	mov	r4, r2
    2db4:	mov	r5, r1
    2db8:	mov	r7, r0
    2dbc:	cmp	r4, r6
    2dc0:	beq	2f70 <normal_scanLit+0x1ec>
    2dc4:	ldrb	ip, [r4]
    2dc8:	and	r2, ip, #255	; 0xff
    2dcc:	add	r1, r5, r2
    2dd0:	ldrb	r0, [r1, #76]	; 0x4c
    2dd4:	mov	r1, r0
    2dd8:	cmp	r1, #14
    2ddc:	bcs	2f68 <normal_scanLit+0x1e4>
    2de0:	add	pc, pc, r1, lsl #2
    2de4:	nop	{0}
    2de8:	b	2ee0 <normal_scanLit+0x15c>
    2dec:	b	2ee0 <normal_scanLit+0x15c>
    2df0:	b	2f68 <normal_scanLit+0x1e4>
    2df4:	b	2f68 <normal_scanLit+0x1e4>
    2df8:	b	2f68 <normal_scanLit+0x1e4>
    2dfc:	b	2e20 <normal_scanLit+0x9c>
    2e00:	b	2e60 <normal_scanLit+0xdc>
    2e04:	b	2ea0 <normal_scanLit+0x11c>
    2e08:	b	2ee0 <normal_scanLit+0x15c>
    2e0c:	b	2f68 <normal_scanLit+0x1e4>
    2e10:	b	2f68 <normal_scanLit+0x1e4>
    2e14:	b	2f68 <normal_scanLit+0x1e4>
    2e18:	b	2eec <normal_scanLit+0x168>
    2e1c:	b	2eec <normal_scanLit+0x168>
    2e20:	sub	r3, r6, r4
    2e24:	cmp	r3, #2
    2e28:	bge	2e34 <normal_scanLit+0xb0>
    2e2c:	mvn	r0, #1
    2e30:	b	2f74 <normal_scanLit+0x1f0>
    2e34:	ldr	ip, [r5, #356]	; 0x164
    2e38:	mov	r1, r4
    2e3c:	mov	r0, r5
    2e40:	blx	ip
    2e44:	cmp	r0, #0
    2e48:	beq	2e58 <normal_scanLit+0xd4>
    2e4c:	str	r4, [r8]
    2e50:	mov	r0, #0
    2e54:	b	2f74 <normal_scanLit+0x1f0>
    2e58:	add	r4, r4, #2
    2e5c:	b	2dbc <normal_scanLit+0x38>
    2e60:	sub	r0, r6, r4
    2e64:	cmp	r0, #3
    2e68:	bge	2e74 <normal_scanLit+0xf0>
    2e6c:	mvn	r0, #1
    2e70:	b	2f74 <normal_scanLit+0x1f0>
    2e74:	ldr	ip, [r5, #360]	; 0x168
    2e78:	mov	r1, r4
    2e7c:	mov	r0, r5
    2e80:	blx	ip
    2e84:	cmp	r0, #0
    2e88:	beq	2e98 <normal_scanLit+0x114>
    2e8c:	str	r4, [r8]
    2e90:	mov	r0, #0
    2e94:	b	2f74 <normal_scanLit+0x1f0>
    2e98:	add	r4, r4, #3
    2e9c:	b	2dbc <normal_scanLit+0x38>
    2ea0:	sub	r2, r6, r4
    2ea4:	cmp	r2, #4
    2ea8:	bge	2eb4 <normal_scanLit+0x130>
    2eac:	mvn	r0, #1
    2eb0:	b	2f74 <normal_scanLit+0x1f0>
    2eb4:	ldr	ip, [r5, #364]	; 0x16c
    2eb8:	mov	r1, r4
    2ebc:	mov	r0, r5
    2ec0:	blx	ip
    2ec4:	cmp	r0, #0
    2ec8:	beq	2ed8 <normal_scanLit+0x154>
    2ecc:	str	r4, [r8]
    2ed0:	mov	r0, #0
    2ed4:	b	2f74 <normal_scanLit+0x1f0>
    2ed8:	add	r4, r4, #4
    2edc:	b	2dbc <normal_scanLit+0x38>
    2ee0:	str	r4, [r8]
    2ee4:	mov	r0, #0
    2ee8:	b	2f74 <normal_scanLit+0x1f0>
    2eec:	add	r4, r4, #1
    2ef0:	cmp	r0, r7
    2ef4:	bne	2dbc <normal_scanLit+0x38>
    2ef8:	cmp	r4, r6
    2efc:	bne	2f08 <normal_scanLit+0x184>
    2f00:	mvn	r0, #26
    2f04:	b	2f74 <normal_scanLit+0x1f0>
    2f08:	str	r4, [r8]
    2f0c:	ldrb	ip, [r4]
    2f10:	and	ip, ip, #255	; 0xff
    2f14:	add	r0, r5, ip
    2f18:	ldrb	r0, [r0, #76]	; 0x4c
    2f1c:	cmp	r0, #20
    2f20:	bcs	2f40 <normal_scanLit+0x1bc>
    2f24:	cmp	r0, #9
    2f28:	beq	2f60 <normal_scanLit+0x1dc>
    2f2c:	cmp	r0, #10
    2f30:	beq	2f60 <normal_scanLit+0x1dc>
    2f34:	cmp	r0, #11
    2f38:	beq	2f60 <normal_scanLit+0x1dc>
    2f3c:	b	2f58 <normal_scanLit+0x1d4>
    2f40:	cmp	r0, #20
    2f44:	beq	2f60 <normal_scanLit+0x1dc>
    2f48:	cmp	r0, #21
    2f4c:	beq	2f60 <normal_scanLit+0x1dc>
    2f50:	cmp	r0, #30
    2f54:	beq	2f60 <normal_scanLit+0x1dc>
    2f58:	mov	r0, #0
    2f5c:	b	2f74 <normal_scanLit+0x1f0>
    2f60:	mov	r0, #27
    2f64:	b	2f74 <normal_scanLit+0x1f0>
    2f68:	add	r4, r4, #1
    2f6c:	b	2dbc <normal_scanLit+0x38>
    2f70:	mvn	r0, #0
    2f74:	ldr	r4, [sp, #8]
    2f78:	ldr	r5, [sp, #12]
    2f7c:	ldr	r6, [sp, #16]
    2f80:	ldr	r7, [sp, #20]
    2f84:	ldr	r8, [sp, #24]
    2f88:	ldr	lr, [sp, #4]
    2f8c:	add	sp, sp, #32
    2f90:	bx	lr

00002f94 <normal_prologTok>:
    2f94:	mov	ip, sp
    2f98:	sub	sp, sp, #40	; 0x28
    2f9c:	str	ip, [sp, #4]
    2fa0:	str	lr, [sp, #8]
    2fa4:	str	r4, [sp, #16]
    2fa8:	str	r5, [sp, #20]
    2fac:	str	r6, [sp, #24]
    2fb0:	str	r7, [sp, #28]
    2fb4:	str	r8, [sp, #32]
    2fb8:	str	r9, [sp, #36]	; 0x24
    2fbc:	mov	r7, r3
    2fc0:	mov	r6, r2
    2fc4:	mov	r5, r1
    2fc8:	mov	r4, r0
    2fcc:	cmp	r5, r6
    2fd0:	bne	2fdc <normal_prologTok+0x48>
    2fd4:	mvn	r8, #3
    2fd8:	b	3d80 <normal_prologTok+0xdec>
    2fdc:	ldrb	r2, [r5]
    2fe0:	and	r1, r2, #255	; 0xff
    2fe4:	add	r1, r4, r1
    2fe8:	ldrb	r1, [r1, #76]	; 0x4c
    2fec:	sub	r3, r1, #2
    2ff0:	cmp	r3, #35	; 0x23
    2ff4:	bcs	3d78 <normal_prologTok+0xde4>
    2ff8:	add	pc, pc, r3, lsl #2
    2ffc:	nop	{0}
    3000:	b	30cc <normal_prologTok+0x138>
    3004:	b	3d78 <normal_prologTok+0xde4>
    3008:	b	341c <normal_prologTok+0x488>
    300c:	b	3890 <normal_prologTok+0x8fc>
    3010:	b	38f8 <normal_prologTok+0x964>
    3014:	b	3960 <normal_prologTok+0x9cc>
    3018:	b	3d78 <normal_prologTok+0xde4>
    301c:	b	3354 <normal_prologTok+0x3c0>
    3020:	b	336c <normal_prologTok+0x3d8>
    3024:	b	3588 <normal_prologTok+0x5f4>
    3028:	b	308c <normal_prologTok+0xf8>
    302c:	b	30ac <normal_prologTok+0x118>
    3030:	b	3d78 <normal_prologTok+0xde4>
    3034:	b	3d78 <normal_prologTok+0xde4>
    3038:	b	3d78 <normal_prologTok+0xde4>
    303c:	b	3d78 <normal_prologTok+0xde4>
    3040:	b	3d78 <normal_prologTok+0xde4>
    3044:	b	3598 <normal_prologTok+0x604>
    3048:	b	340c <normal_prologTok+0x478>
    304c:	b	336c <normal_prologTok+0x3d8>
    3050:	b	39c8 <normal_prologTok+0xa34>
    3054:	b	39d4 <normal_prologTok+0xa40>
    3058:	b	39c8 <normal_prologTok+0xa34>
    305c:	b	39d4 <normal_prologTok+0xa40>
    3060:	b	39d4 <normal_prologTok+0xa40>
    3064:	b	39d4 <normal_prologTok+0xa40>
    3068:	b	3d78 <normal_prologTok+0xde4>
    306c:	b	3d78 <normal_prologTok+0xde4>
    3070:	b	33c8 <normal_prologTok+0x434>
    3074:	b	3478 <normal_prologTok+0x4e4>
    3078:	b	3488 <normal_prologTok+0x4f4>
    307c:	b	3d78 <normal_prologTok+0xde4>
    3080:	b	3d78 <normal_prologTok+0xde4>
    3084:	b	33fc <normal_prologTok+0x468>
    3088:	b	3578 <normal_prologTok+0x5e4>
    308c:	mov	r0, #12
    3090:	add	r2, r5, #1
    3094:	str	r7, [sp]
    3098:	mov	r3, r6
    309c:	mov	r1, r4
    30a0:	bl	2d84 <normal_scanLit>
    30a4:	mov	r8, r0
    30a8:	b	3d80 <normal_prologTok+0xdec>
    30ac:	mov	r0, #13
    30b0:	add	r2, r5, #1
    30b4:	str	r7, [sp]
    30b8:	mov	r3, r6
    30bc:	mov	r1, r4
    30c0:	bl	2d84 <normal_scanLit>
    30c4:	mov	r8, r0
    30c8:	b	3d80 <normal_prologTok+0xdec>
    30cc:	add	r5, r5, #1
    30d0:	cmp	r5, r6
    30d4:	bne	30e0 <normal_prologTok+0x14c>
    30d8:	mvn	r8, #0
    30dc:	b	3d80 <normal_prologTok+0xdec>
    30e0:	ldrb	r1, [r5]
    30e4:	and	ip, r1, #255	; 0xff
    30e8:	add	r2, r4, ip
    30ec:	ldrb	ip, [r2, #76]	; 0x4c
    30f0:	sub	r3, ip, #5
    30f4:	cmp	r3, #25
    30f8:	bcs	3348 <normal_prologTok+0x3b4>
    30fc:	add	pc, pc, r3, lsl #2
    3100:	nop	{0}
    3104:	b	3338 <normal_prologTok+0x3a4>
    3108:	b	3338 <normal_prologTok+0x3a4>
    310c:	b	3338 <normal_prologTok+0x3a4>
    3110:	b	3348 <normal_prologTok+0x3b4>
    3114:	b	3348 <normal_prologTok+0x3b4>
    3118:	b	3348 <normal_prologTok+0x3b4>
    311c:	b	3348 <normal_prologTok+0x3b4>
    3120:	b	3348 <normal_prologTok+0x3b4>
    3124:	b	3348 <normal_prologTok+0x3b4>
    3128:	b	3348 <normal_prologTok+0x3b4>
    312c:	b	3304 <normal_prologTok+0x370>
    3130:	b	3168 <normal_prologTok+0x1d4>
    3134:	b	3348 <normal_prologTok+0x3b4>
    3138:	b	3348 <normal_prologTok+0x3b4>
    313c:	b	3348 <normal_prologTok+0x3b4>
    3140:	b	3348 <normal_prologTok+0x3b4>
    3144:	b	3348 <normal_prologTok+0x3b4>
    3148:	b	3338 <normal_prologTok+0x3a4>
    314c:	b	3348 <normal_prologTok+0x3b4>
    3150:	b	3338 <normal_prologTok+0x3a4>
    3154:	b	3348 <normal_prologTok+0x3b4>
    3158:	b	3348 <normal_prologTok+0x3b4>
    315c:	b	3348 <normal_prologTok+0x3b4>
    3160:	b	3348 <normal_prologTok+0x3b4>
    3164:	b	3338 <normal_prologTok+0x3a4>
    3168:	add	r1, r5, #1
    316c:	mov	r0, r4
    3170:	cmp	r1, r6
    3174:	bne	3180 <normal_prologTok+0x1ec>
    3178:	mvn	r0, #0
    317c:	b	32e0 <normal_prologTok+0x34c>
    3180:	ldrb	ip, [r5, #1]
    3184:	and	r2, ip, #255	; 0xff
    3188:	add	r2, r0, r2
    318c:	ldrb	r2, [r2, #76]	; 0x4c
    3190:	cmp	r2, #24
    3194:	bcs	31bc <normal_prologTok+0x228>
    3198:	cmp	r2, #20
    319c:	beq	31ac <normal_prologTok+0x218>
    31a0:	cmp	r2, #22
    31a4:	beq	3208 <normal_prologTok+0x274>
    31a8:	b	31fc <normal_prologTok+0x268>
    31ac:	add	r2, r5, #2
    31b0:	str	r2, [r7]
    31b4:	mov	r0, #33	; 0x21
    31b8:	b	32e0 <normal_prologTok+0x34c>
    31bc:	cmp	r2, #24
    31c0:	beq	3208 <normal_prologTok+0x274>
    31c4:	cmp	r2, #27
    31c8:	bne	31fc <normal_prologTok+0x268>
    31cc:	add	r1, r5, #2
    31d0:	mov	r3, r7
    31d4:	mov	r2, r6
    31d8:	ldr	r4, [sp, #16]
    31dc:	ldr	r5, [sp, #20]
    31e0:	ldr	r6, [sp, #24]
    31e4:	ldr	r7, [sp, #28]
    31e8:	ldr	r8, [sp, #32]
    31ec:	ldr	r9, [sp, #36]	; 0x24
    31f0:	ldr	lr, [sp, #8]
    31f4:	add	sp, sp, #40	; 0x28
    31f8:	b	424 <normal_scanComment>
    31fc:	str	r1, [r7]
    3200:	mov	r0, #0
    3204:	b	32e0 <normal_prologTok+0x34c>
    3208:	add	r3, r1, #1
    320c:	cmp	r3, r6
    3210:	beq	32dc <normal_prologTok+0x348>
    3214:	ldrb	r2, [r3]
    3218:	and	r1, r2, #255	; 0xff
    321c:	add	r2, r0, r1
    3220:	ldrb	ip, [r2, #76]	; 0x4c
    3224:	cmp	ip, #22
    3228:	bcs	3248 <normal_prologTok+0x2b4>
    322c:	cmp	ip, #9
    3230:	beq	32b0 <normal_prologTok+0x31c>
    3234:	cmp	ip, #10
    3238:	beq	32b0 <normal_prologTok+0x31c>
    323c:	cmp	ip, #21
    3240:	beq	32b0 <normal_prologTok+0x31c>
    3244:	b	32c8 <normal_prologTok+0x334>
    3248:	cmp	ip, #22
    324c:	beq	32d4 <normal_prologTok+0x340>
    3250:	cmp	ip, #24
    3254:	beq	32d4 <normal_prologTok+0x340>
    3258:	cmp	ip, #30
    325c:	bne	32c8 <normal_prologTok+0x334>
    3260:	add	r1, r3, #1
    3264:	cmp	r1, r6
    3268:	bne	3274 <normal_prologTok+0x2e0>
    326c:	mvn	r0, #0
    3270:	b	32e0 <normal_prologTok+0x34c>
    3274:	ldrb	ip, [r3, #1]
    3278:	and	r1, ip, #255	; 0xff
    327c:	add	ip, r0, r1
    3280:	ldrb	ip, [ip, #76]	; 0x4c
    3284:	cmp	ip, #21
    3288:	bcs	32a0 <normal_prologTok+0x30c>
    328c:	cmp	ip, #9
    3290:	beq	32bc <normal_prologTok+0x328>
    3294:	cmp	ip, #10
    3298:	beq	32bc <normal_prologTok+0x328>
    329c:	b	32b0 <normal_prologTok+0x31c>
    32a0:	cmp	ip, #21
    32a4:	beq	32bc <normal_prologTok+0x328>
    32a8:	cmp	ip, #30
    32ac:	beq	32bc <normal_prologTok+0x328>
    32b0:	str	r3, [r7]
    32b4:	mov	r0, #16
    32b8:	b	32e0 <normal_prologTok+0x34c>
    32bc:	str	r3, [r7]
    32c0:	mov	r0, #0
    32c4:	b	32e0 <normal_prologTok+0x34c>
    32c8:	str	r3, [r7]
    32cc:	mov	r0, #0
    32d0:	b	32e0 <normal_prologTok+0x34c>
    32d4:	add	r3, r3, #1
    32d8:	b	320c <normal_prologTok+0x278>
    32dc:	mvn	r0, #0
    32e0:	ldr	r4, [sp, #16]
    32e4:	ldr	r5, [sp, #20]
    32e8:	ldr	r6, [sp, #24]
    32ec:	ldr	r7, [sp, #28]
    32f0:	ldr	r8, [sp, #32]
    32f4:	ldr	r9, [sp, #36]	; 0x24
    32f8:	ldr	lr, [sp, #8]
    32fc:	add	sp, sp, #40	; 0x28
    3300:	bx	lr
    3304:	add	r1, r5, #1
    3308:	mov	r3, r7
    330c:	mov	r2, r6
    3310:	mov	r0, r4
    3314:	ldr	r4, [sp, #16]
    3318:	ldr	r5, [sp, #20]
    331c:	ldr	r6, [sp, #24]
    3320:	ldr	r7, [sp, #28]
    3324:	ldr	r8, [sp, #32]
    3328:	ldr	r9, [sp, #36]	; 0x24
    332c:	ldr	lr, [sp, #8]
    3330:	add	sp, sp, #40	; 0x28
    3334:	b	6e0 <normal_scanPi>
    3338:	sub	r1, r5, #1
    333c:	str	r1, [r7]
    3340:	mov	r8, #29
    3344:	b	3d80 <normal_prologTok+0xdec>
    3348:	str	r5, [r7]
    334c:	mov	r8, #0
    3350:	b	3d80 <normal_prologTok+0xdec>
    3354:	add	r1, r5, #1
    3358:	cmp	r1, r6
    335c:	bne	336c <normal_prologTok+0x3d8>
    3360:	str	r6, [r7]
    3364:	mvn	r8, #14
    3368:	b	3d80 <normal_prologTok+0xdec>
    336c:	add	r5, r5, #1
    3370:	cmp	r5, r6
    3374:	beq	33bc <normal_prologTok+0x428>
    3378:	ldrb	ip, [r5]
    337c:	and	r3, ip, #255	; 0xff
    3380:	add	r2, r4, r3
    3384:	ldrb	ip, [r2, #76]	; 0x4c
    3388:	cmp	ip, #9
    338c:	beq	33a4 <normal_prologTok+0x410>
    3390:	cmp	ip, #10
    3394:	beq	336c <normal_prologTok+0x3d8>
    3398:	cmp	ip, #21
    339c:	beq	336c <normal_prologTok+0x3d8>
    33a0:	b	33b0 <normal_prologTok+0x41c>
    33a4:	add	ip, r5, #1
    33a8:	cmp	ip, r6
    33ac:	bne	336c <normal_prologTok+0x3d8>
    33b0:	str	r5, [r7]
    33b4:	mov	r8, #15
    33b8:	b	3d80 <normal_prologTok+0xdec>
    33bc:	str	r5, [r7]
    33c0:	mov	r8, #15
    33c4:	b	3d80 <normal_prologTok+0xdec>
    33c8:	add	r1, r5, #1
    33cc:	mov	r3, r7
    33d0:	mov	r2, r6
    33d4:	mov	r0, r4
    33d8:	ldr	r4, [sp, #16]
    33dc:	ldr	r5, [sp, #20]
    33e0:	ldr	r6, [sp, #24]
    33e4:	ldr	r7, [sp, #28]
    33e8:	ldr	r8, [sp, #32]
    33ec:	ldr	r9, [sp, #36]	; 0x24
    33f0:	ldr	lr, [sp, #8]
    33f4:	add	sp, sp, #40	; 0x28
    33f8:	b	2a28 <normal_scanPercent>
    33fc:	add	r3, r5, #1
    3400:	str	r3, [r7]
    3404:	mov	r8, #38	; 0x26
    3408:	b	3d80 <normal_prologTok+0xdec>
    340c:	add	r2, r5, #1
    3410:	str	r2, [r7]
    3414:	mov	r8, #25
    3418:	b	3d80 <normal_prologTok+0xdec>
    341c:	add	r2, r5, #1
    3420:	cmp	r2, r6
    3424:	bne	3430 <normal_prologTok+0x49c>
    3428:	mvn	r8, #25
    342c:	b	3d80 <normal_prologTok+0xdec>
    3430:	ldrb	ip, [r2]
    3434:	cmp	ip, #93	; 0x5d
    3438:	bne	346c <normal_prologTok+0x4d8>
    343c:	add	r3, r2, #1
    3440:	cmp	r3, r6
    3444:	bne	3450 <normal_prologTok+0x4bc>
    3448:	mvn	r8, #0
    344c:	b	3d80 <normal_prologTok+0xdec>
    3450:	ldrb	r1, [r2, #1]
    3454:	cmp	r1, #62	; 0x3e
    3458:	bne	346c <normal_prologTok+0x4d8>
    345c:	add	r1, r2, #2
    3460:	str	r1, [r7]
    3464:	mov	r8, #34	; 0x22
    3468:	b	3d80 <normal_prologTok+0xdec>
    346c:	str	r2, [r7]
    3470:	mov	r8, #26
    3474:	b	3d80 <normal_prologTok+0xdec>
    3478:	add	r2, r5, #1
    347c:	str	r2, [r7]
    3480:	mov	r8, #23
    3484:	b	3d80 <normal_prologTok+0xdec>
    3488:	add	r3, r5, #1
    348c:	cmp	r3, r6
    3490:	bne	349c <normal_prologTok+0x508>
    3494:	mvn	r8, #23
    3498:	b	3d80 <normal_prologTok+0xdec>
    349c:	ldrb	r2, [r3]
    34a0:	and	ip, r2, #255	; 0xff
    34a4:	add	ip, r4, ip
    34a8:	ldrb	r1, [ip, #76]	; 0x4c
    34ac:	sub	r2, r1, #9
    34b0:	cmp	r2, #28
    34b4:	bcs	356c <normal_prologTok+0x5d8>
    34b8:	add	pc, pc, r2, lsl #2
    34bc:	nop	{0}
    34c0:	b	3560 <normal_prologTok+0x5cc>
    34c4:	b	3560 <normal_prologTok+0x5cc>
    34c8:	b	3560 <normal_prologTok+0x5cc>
    34cc:	b	356c <normal_prologTok+0x5d8>
    34d0:	b	356c <normal_prologTok+0x5d8>
    34d4:	b	356c <normal_prologTok+0x5d8>
    34d8:	b	3540 <normal_prologTok+0x5ac>
    34dc:	b	356c <normal_prologTok+0x5d8>
    34e0:	b	356c <normal_prologTok+0x5d8>
    34e4:	b	356c <normal_prologTok+0x5d8>
    34e8:	b	356c <normal_prologTok+0x5d8>
    34ec:	b	356c <normal_prologTok+0x5d8>
    34f0:	b	3560 <normal_prologTok+0x5cc>
    34f4:	b	356c <normal_prologTok+0x5d8>
    34f8:	b	356c <normal_prologTok+0x5d8>
    34fc:	b	356c <normal_prologTok+0x5d8>
    3500:	b	356c <normal_prologTok+0x5d8>
    3504:	b	356c <normal_prologTok+0x5d8>
    3508:	b	356c <normal_prologTok+0x5d8>
    350c:	b	356c <normal_prologTok+0x5d8>
    3510:	b	356c <normal_prologTok+0x5d8>
    3514:	b	356c <normal_prologTok+0x5d8>
    3518:	b	356c <normal_prologTok+0x5d8>
    351c:	b	3560 <normal_prologTok+0x5cc>
    3520:	b	3530 <normal_prologTok+0x59c>
    3524:	b	3550 <normal_prologTok+0x5bc>
    3528:	b	3560 <normal_prologTok+0x5cc>
    352c:	b	3560 <normal_prologTok+0x5cc>
    3530:	add	r1, r3, #1
    3534:	str	r1, [r7]
    3538:	mov	r8, #36	; 0x24
    353c:	b	3d80 <normal_prologTok+0xdec>
    3540:	add	ip, r3, #1
    3544:	str	ip, [r7]
    3548:	mov	r8, #35	; 0x23
    354c:	b	3d80 <normal_prologTok+0xdec>
    3550:	add	r1, r3, #1
    3554:	str	r1, [r7]
    3558:	mov	r8, #37	; 0x25
    355c:	b	3d80 <normal_prologTok+0xdec>
    3560:	str	r3, [r7]
    3564:	mov	r8, #24
    3568:	b	3d80 <normal_prologTok+0xdec>
    356c:	str	r3, [r7]
    3570:	mov	r8, #0
    3574:	b	3d80 <normal_prologTok+0xdec>
    3578:	add	r3, r5, #1
    357c:	str	r3, [r7]
    3580:	mov	r8, #21
    3584:	b	3d80 <normal_prologTok+0xdec>
    3588:	add	r3, r5, #1
    358c:	str	r3, [r7]
    3590:	mov	r8, #17
    3594:	b	3d80 <normal_prologTok+0xdec>
    3598:	add	r8, r5, #1
    359c:	cmp	r8, r6
    35a0:	bne	35ac <normal_prologTok+0x618>
    35a4:	mvn	r0, #0
    35a8:	b	386c <normal_prologTok+0x8d8>
    35ac:	ldrb	r2, [r5, #1]
    35b0:	and	r1, r2, #255	; 0xff
    35b4:	add	ip, r4, r1
    35b8:	ldrb	r0, [ip, #76]	; 0x4c
    35bc:	cmp	r0, #22
    35c0:	bcs	369c <normal_prologTok+0x708>
    35c4:	cmp	r0, #5
    35c8:	beq	365c <normal_prologTok+0x6c8>
    35cc:	cmp	r0, #6
    35d0:	beq	361c <normal_prologTok+0x688>
    35d4:	cmp	r0, #7
    35d8:	bne	36c0 <normal_prologTok+0x72c>
    35dc:	sub	ip, r6, r8
    35e0:	cmp	ip, #4
    35e4:	bge	35f0 <normal_prologTok+0x65c>
    35e8:	mvn	r0, #1
    35ec:	b	386c <normal_prologTok+0x8d8>
    35f0:	ldr	ip, [r4, #352]	; 0x160
    35f4:	mov	r1, r8
    35f8:	mov	r0, r4
    35fc:	blx	ip
    3600:	cmp	r0, #0
    3604:	bne	3614 <normal_prologTok+0x680>
    3608:	str	r8, [r7]
    360c:	mov	r0, #0
    3610:	b	386c <normal_prologTok+0x8d8>
    3614:	add	r5, r8, #4
    3618:	b	36d0 <normal_prologTok+0x73c>
    361c:	sub	r2, r6, r8
    3620:	cmp	r2, #3
    3624:	bge	3630 <normal_prologTok+0x69c>
    3628:	mvn	r0, #1
    362c:	b	386c <normal_prologTok+0x8d8>
    3630:	ldr	r5, [r4, #348]	; 0x15c
    3634:	mov	r1, r8
    3638:	mov	r0, r4
    363c:	blx	r5
    3640:	cmp	r0, #0
    3644:	bne	3654 <normal_prologTok+0x6c0>
    3648:	str	r8, [r7]
    364c:	mov	r0, #0
    3650:	b	386c <normal_prologTok+0x8d8>
    3654:	add	r5, r8, #3
    3658:	b	36d0 <normal_prologTok+0x73c>
    365c:	sub	r0, r6, r8
    3660:	cmp	r0, #2
    3664:	bge	3670 <normal_prologTok+0x6dc>
    3668:	mvn	r0, #1
    366c:	b	386c <normal_prologTok+0x8d8>
    3670:	ldr	ip, [r4, #344]	; 0x158
    3674:	mov	r1, r8
    3678:	mov	r0, r4
    367c:	blx	ip
    3680:	cmp	r0, #0
    3684:	bne	3694 <normal_prologTok+0x700>
    3688:	str	r8, [r7]
    368c:	mov	r0, #0
    3690:	b	386c <normal_prologTok+0x8d8>
    3694:	add	r5, r8, #2
    3698:	b	36d0 <normal_prologTok+0x73c>
    369c:	cmp	r0, #22
    36a0:	beq	36cc <normal_prologTok+0x738>
    36a4:	cmp	r0, #24
    36a8:	beq	36cc <normal_prologTok+0x738>
    36ac:	cmp	r0, #29
    36b0:	bne	36c0 <normal_prologTok+0x72c>
    36b4:	str	r8, [r7]
    36b8:	mov	r0, #0
    36bc:	b	386c <normal_prologTok+0x8d8>
    36c0:	str	r8, [r7]
    36c4:	mov	r0, #0
    36c8:	b	386c <normal_prologTok+0x8d8>
    36cc:	add	r5, r8, #1
    36d0:	cmp	r5, r6
    36d4:	beq	3868 <normal_prologTok+0x8d4>
    36d8:	ldrb	r1, [r5]
    36dc:	and	r3, r1, #255	; 0xff
    36e0:	add	r0, r4, r3
    36e4:	ldrb	r1, [r0, #76]	; 0x4c
    36e8:	sub	r3, r1, #5
    36ec:	cmp	r3, #32
    36f0:	bcs	385c <normal_prologTok+0x8c8>
    36f4:	add	pc, pc, r3, lsl #2
    36f8:	nop	{0}
    36fc:	b	3790 <normal_prologTok+0x7fc>
    3700:	b	37d0 <normal_prologTok+0x83c>
    3704:	b	3810 <normal_prologTok+0x87c>
    3708:	b	385c <normal_prologTok+0x8c8>
    370c:	b	3850 <normal_prologTok+0x8bc>
    3710:	b	3850 <normal_prologTok+0x8bc>
    3714:	b	3850 <normal_prologTok+0x8bc>
    3718:	b	385c <normal_prologTok+0x8c8>
    371c:	b	385c <normal_prologTok+0x8c8>
    3720:	b	385c <normal_prologTok+0x8c8>
    3724:	b	385c <normal_prologTok+0x8c8>
    3728:	b	385c <normal_prologTok+0x8c8>
    372c:	b	385c <normal_prologTok+0x8c8>
    3730:	b	385c <normal_prologTok+0x8c8>
    3734:	b	385c <normal_prologTok+0x8c8>
    3738:	b	385c <normal_prologTok+0x8c8>
    373c:	b	3850 <normal_prologTok+0x8bc>
    3740:	b	3788 <normal_prologTok+0x7f4>
    3744:	b	385c <normal_prologTok+0x8c8>
    3748:	b	3788 <normal_prologTok+0x7f4>
    374c:	b	3788 <normal_prologTok+0x7f4>
    3750:	b	3788 <normal_prologTok+0x7f4>
    3754:	b	3788 <normal_prologTok+0x7f4>
    3758:	b	385c <normal_prologTok+0x8c8>
    375c:	b	377c <normal_prologTok+0x7e8>
    3760:	b	3850 <normal_prologTok+0x8bc>
    3764:	b	385c <normal_prologTok+0x8c8>
    3768:	b	3850 <normal_prologTok+0x8bc>
    376c:	b	385c <normal_prologTok+0x8c8>
    3770:	b	385c <normal_prologTok+0x8c8>
    3774:	b	385c <normal_prologTok+0x8c8>
    3778:	b	3850 <normal_prologTok+0x8bc>
    377c:	str	r5, [r7]
    3780:	mov	r0, #0
    3784:	b	386c <normal_prologTok+0x8d8>
    3788:	add	r5, r5, #1
    378c:	b	36d0 <normal_prologTok+0x73c>
    3790:	sub	r3, r6, r5
    3794:	cmp	r3, #2
    3798:	bge	37a4 <normal_prologTok+0x810>
    379c:	mvn	r0, #1
    37a0:	b	386c <normal_prologTok+0x8d8>
    37a4:	ldr	ip, [r4, #332]	; 0x14c
    37a8:	mov	r1, r5
    37ac:	mov	r0, r4
    37b0:	blx	ip
    37b4:	cmp	r0, #0
    37b8:	bne	37c8 <normal_prologTok+0x834>
    37bc:	str	r5, [r7]
    37c0:	mov	r0, #0
    37c4:	b	386c <normal_prologTok+0x8d8>
    37c8:	add	r5, r5, #2
    37cc:	b	36d0 <normal_prologTok+0x73c>
    37d0:	sub	r2, r6, r5
    37d4:	cmp	r2, #3
    37d8:	bge	37e4 <normal_prologTok+0x850>
    37dc:	mvn	r0, #1
    37e0:	b	386c <normal_prologTok+0x8d8>
    37e4:	ldr	ip, [r4, #336]	; 0x150
    37e8:	mov	r1, r5
    37ec:	mov	r0, r4
    37f0:	blx	ip
    37f4:	cmp	r0, #0
    37f8:	bne	3808 <normal_prologTok+0x874>
    37fc:	str	r5, [r7]
    3800:	mov	r0, #0
    3804:	b	386c <normal_prologTok+0x8d8>
    3808:	add	r5, r5, #3
    380c:	b	36d0 <normal_prologTok+0x73c>
    3810:	sub	r0, r6, r5
    3814:	cmp	r0, #4
    3818:	bge	3824 <normal_prologTok+0x890>
    381c:	mvn	r0, #1
    3820:	b	386c <normal_prologTok+0x8d8>
    3824:	ldr	ip, [r4, #340]	; 0x154
    3828:	mov	r1, r5
    382c:	mov	r0, r4
    3830:	blx	ip
    3834:	cmp	r0, #0
    3838:	bne	3848 <normal_prologTok+0x8b4>
    383c:	str	r5, [r7]
    3840:	mov	r0, #0
    3844:	b	386c <normal_prologTok+0x8d8>
    3848:	add	r5, r5, #4
    384c:	b	36d0 <normal_prologTok+0x73c>
    3850:	str	r5, [r7]
    3854:	mov	r0, #20
    3858:	b	386c <normal_prologTok+0x8d8>
    385c:	str	r5, [r7]
    3860:	mov	r0, #0
    3864:	b	386c <normal_prologTok+0x8d8>
    3868:	mvn	r0, #19
    386c:	ldr	r4, [sp, #16]
    3870:	ldr	r5, [sp, #20]
    3874:	ldr	r6, [sp, #24]
    3878:	ldr	r7, [sp, #28]
    387c:	ldr	r8, [sp, #32]
    3880:	ldr	r9, [sp, #36]	; 0x24
    3884:	ldr	lr, [sp, #8]
    3888:	add	sp, sp, #40	; 0x28
    388c:	bx	lr
    3890:	sub	r2, r6, r5
    3894:	cmp	r2, #2
    3898:	bge	38a4 <normal_prologTok+0x910>
    389c:	mvn	r8, #1
    38a0:	b	3d80 <normal_prologTok+0xdec>
    38a4:	ldr	ip, [r4, #344]	; 0x158
    38a8:	mov	r1, r5
    38ac:	mov	r0, r4
    38b0:	blx	ip
    38b4:	cmp	r0, #0
    38b8:	beq	38c8 <normal_prologTok+0x934>
    38bc:	add	r5, r5, #2
    38c0:	mov	r8, #18
    38c4:	b	39dc <normal_prologTok+0xa48>
    38c8:	ldr	ip, [r4, #332]	; 0x14c
    38cc:	mov	r1, r5
    38d0:	mov	r0, r4
    38d4:	blx	ip
    38d8:	cmp	r0, #0
    38dc:	beq	38ec <normal_prologTok+0x958>
    38e0:	add	r5, r5, #2
    38e4:	mov	r8, #19
    38e8:	b	39dc <normal_prologTok+0xa48>
    38ec:	str	r5, [r7]
    38f0:	mov	r8, #0
    38f4:	b	3d80 <normal_prologTok+0xdec>
    38f8:	sub	r1, r6, r5
    38fc:	cmp	r1, #3
    3900:	bge	390c <normal_prologTok+0x978>
    3904:	mvn	r8, #1
    3908:	b	3d80 <normal_prologTok+0xdec>
    390c:	ldr	ip, [r4, #348]	; 0x15c
    3910:	mov	r1, r5
    3914:	mov	r0, r4
    3918:	blx	ip
    391c:	cmp	r0, #0
    3920:	beq	3930 <normal_prologTok+0x99c>
    3924:	add	r5, r5, #3
    3928:	mov	r8, #18
    392c:	b	39dc <normal_prologTok+0xa48>
    3930:	ldr	ip, [r4, #336]	; 0x150
    3934:	mov	r1, r5
    3938:	mov	r0, r4
    393c:	blx	ip
    3940:	cmp	r0, #0
    3944:	beq	3954 <normal_prologTok+0x9c0>
    3948:	add	r5, r5, #3
    394c:	mov	r8, #19
    3950:	b	39dc <normal_prologTok+0xa48>
    3954:	str	r5, [r7]
    3958:	mov	r8, #0
    395c:	b	3d80 <normal_prologTok+0xdec>
    3960:	sub	r2, r6, r5
    3964:	cmp	r2, #4
    3968:	bge	3974 <normal_prologTok+0x9e0>
    396c:	mvn	r8, #1
    3970:	b	3d80 <normal_prologTok+0xdec>
    3974:	ldr	ip, [r4, #352]	; 0x160
    3978:	mov	r1, r5
    397c:	mov	r0, r4
    3980:	blx	ip
    3984:	cmp	r0, #0
    3988:	beq	3998 <normal_prologTok+0xa04>
    398c:	add	r5, r5, #4
    3990:	mov	r8, #18
    3994:	b	39dc <normal_prologTok+0xa48>
    3998:	ldr	ip, [r4, #340]	; 0x154
    399c:	mov	r1, r5
    39a0:	mov	r0, r4
    39a4:	blx	ip
    39a8:	cmp	r0, #0
    39ac:	beq	39bc <normal_prologTok+0xa28>
    39b0:	add	r5, r5, #4
    39b4:	mov	r8, #19
    39b8:	b	39dc <normal_prologTok+0xa48>
    39bc:	str	r5, [r7]
    39c0:	mov	r8, #0
    39c4:	b	3d80 <normal_prologTok+0xdec>
    39c8:	mov	r8, #18
    39cc:	add	r5, r5, #1
    39d0:	b	39dc <normal_prologTok+0xa48>
    39d4:	mov	r8, #19
    39d8:	add	r5, r5, #1
    39dc:	cmp	r5, r6
    39e0:	beq	3d70 <normal_prologTok+0xddc>
    39e4:	ldrb	r0, [r5]
    39e8:	and	ip, r0, #255	; 0xff
    39ec:	add	ip, r4, ip
    39f0:	ldrb	r3, [ip, #76]	; 0x4c
    39f4:	sub	r1, r3, #5
    39f8:	cmp	r1, #32
    39fc:	bcs	3d64 <normal_prologTok+0xdd0>
    3a00:	add	pc, pc, r1, lsl #2
    3a04:	nop	{0}
    3a08:	b	3a9c <normal_prologTok+0xb08>
    3a0c:	b	3adc <normal_prologTok+0xb48>
    3a10:	b	3b1c <normal_prologTok+0xb88>
    3a14:	b	3d64 <normal_prologTok+0xdd0>
    3a18:	b	3b5c <normal_prologTok+0xbc8>
    3a1c:	b	3b5c <normal_prologTok+0xbc8>
    3a20:	b	3b5c <normal_prologTok+0xbc8>
    3a24:	b	3d64 <normal_prologTok+0xdd0>
    3a28:	b	3d64 <normal_prologTok+0xdd0>
    3a2c:	b	3d64 <normal_prologTok+0xdd0>
    3a30:	b	3d40 <normal_prologTok+0xdac>
    3a34:	b	3d64 <normal_prologTok+0xdd0>
    3a38:	b	3d64 <normal_prologTok+0xdd0>
    3a3c:	b	3d64 <normal_prologTok+0xdd0>
    3a40:	b	3d64 <normal_prologTok+0xdd0>
    3a44:	b	3b5c <normal_prologTok+0xbc8>
    3a48:	b	3b5c <normal_prologTok+0xbc8>
    3a4c:	b	3a94 <normal_prologTok+0xb00>
    3a50:	b	3b64 <normal_prologTok+0xbd0>
    3a54:	b	3a94 <normal_prologTok+0xb00>
    3a58:	b	3a94 <normal_prologTok+0xb00>
    3a5c:	b	3a94 <normal_prologTok+0xb00>
    3a60:	b	3a94 <normal_prologTok+0xb00>
    3a64:	b	3d64 <normal_prologTok+0xdd0>
    3a68:	b	3a88 <normal_prologTok+0xaf4>
    3a6c:	b	3b5c <normal_prologTok+0xbc8>
    3a70:	b	3d64 <normal_prologTok+0xdd0>
    3a74:	b	3b5c <normal_prologTok+0xbc8>
    3a78:	b	3d1c <normal_prologTok+0xd88>
    3a7c:	b	3cf8 <normal_prologTok+0xd64>
    3a80:	b	3b5c <normal_prologTok+0xbc8>
    3a84:	b	3b5c <normal_prologTok+0xbc8>
    3a88:	str	r5, [r7]
    3a8c:	mov	r8, #0
    3a90:	b	3d80 <normal_prologTok+0xdec>
    3a94:	add	r5, r5, #1
    3a98:	b	39dc <normal_prologTok+0xa48>
    3a9c:	sub	r0, r6, r5
    3aa0:	cmp	r0, #2
    3aa4:	bge	3ab0 <normal_prologTok+0xb1c>
    3aa8:	mvn	r8, #1
    3aac:	b	3d80 <normal_prologTok+0xdec>
    3ab0:	ldr	ip, [r4, #332]	; 0x14c
    3ab4:	mov	r1, r5
    3ab8:	mov	r0, r4
    3abc:	blx	ip
    3ac0:	cmp	r0, #0
    3ac4:	bne	3ad4 <normal_prologTok+0xb40>
    3ac8:	str	r5, [r7]
    3acc:	mov	r8, #0
    3ad0:	b	3d80 <normal_prologTok+0xdec>
    3ad4:	add	r5, r5, #2
    3ad8:	b	39dc <normal_prologTok+0xa48>
    3adc:	sub	ip, r6, r5
    3ae0:	cmp	ip, #3
    3ae4:	bge	3af0 <normal_prologTok+0xb5c>
    3ae8:	mvn	r8, #1
    3aec:	b	3d80 <normal_prologTok+0xdec>
    3af0:	ldr	ip, [r4, #336]	; 0x150
    3af4:	mov	r1, r5
    3af8:	mov	r0, r4
    3afc:	blx	ip
    3b00:	cmp	r0, #0
    3b04:	bne	3b14 <normal_prologTok+0xb80>
    3b08:	str	r5, [r7]
    3b0c:	mov	r8, #0
    3b10:	b	3d80 <normal_prologTok+0xdec>
    3b14:	add	r5, r5, #3
    3b18:	b	39dc <normal_prologTok+0xa48>
    3b1c:	sub	r3, r6, r5
    3b20:	cmp	r3, #4
    3b24:	bge	3b30 <normal_prologTok+0xb9c>
    3b28:	mvn	r8, #1
    3b2c:	b	3d80 <normal_prologTok+0xdec>
    3b30:	ldr	r9, [r4, #340]	; 0x154
    3b34:	mov	r1, r5
    3b38:	mov	r0, r4
    3b3c:	blx	r9
    3b40:	cmp	r0, #0
    3b44:	bne	3b54 <normal_prologTok+0xbc0>
    3b48:	str	r5, [r7]
    3b4c:	mov	r8, #0
    3b50:	b	3d80 <normal_prologTok+0xdec>
    3b54:	add	r5, r5, #4
    3b58:	b	39dc <normal_prologTok+0xa48>
    3b5c:	str	r5, [r7]
    3b60:	b	3d80 <normal_prologTok+0xdec>
    3b64:	add	r5, r5, #1
    3b68:	cmp	r8, #18
    3b6c:	beq	3b80 <normal_prologTok+0xbec>
    3b70:	cmp	r8, #41	; 0x29
    3b74:	bne	39dc <normal_prologTok+0xa48>
    3b78:	mov	r8, #19
    3b7c:	b	39dc <normal_prologTok+0xa48>
    3b80:	cmp	r5, r6
    3b84:	bne	3b90 <normal_prologTok+0xbfc>
    3b88:	mvn	r8, #0
    3b8c:	b	3d80 <normal_prologTok+0xdec>
    3b90:	mov	r8, #41	; 0x29
    3b94:	ldrb	r0, [r5]
    3b98:	and	r3, r0, #255	; 0xff
    3b9c:	add	r3, r4, r3
    3ba0:	ldrb	ip, [r3, #76]	; 0x4c
    3ba4:	sub	r0, ip, #5
    3ba8:	cmp	r0, #25
    3bac:	bcs	3cf0 <normal_prologTok+0xd5c>
    3bb0:	add	pc, pc, r0, lsl #2
    3bb4:	nop	{0}
    3bb8:	b	3c30 <normal_prologTok+0xc9c>
    3bbc:	b	3c70 <normal_prologTok+0xcdc>
    3bc0:	b	3cb0 <normal_prologTok+0xd1c>
    3bc4:	b	3cf0 <normal_prologTok+0xd5c>
    3bc8:	b	3cf0 <normal_prologTok+0xd5c>
    3bcc:	b	3cf0 <normal_prologTok+0xd5c>
    3bd0:	b	3cf0 <normal_prologTok+0xd5c>
    3bd4:	b	3cf0 <normal_prologTok+0xd5c>
    3bd8:	b	3cf0 <normal_prologTok+0xd5c>
    3bdc:	b	3cf0 <normal_prologTok+0xd5c>
    3be0:	b	3cf0 <normal_prologTok+0xd5c>
    3be4:	b	3cf0 <normal_prologTok+0xd5c>
    3be8:	b	3cf0 <normal_prologTok+0xd5c>
    3bec:	b	3cf0 <normal_prologTok+0xd5c>
    3bf0:	b	3cf0 <normal_prologTok+0xd5c>
    3bf4:	b	3cf0 <normal_prologTok+0xd5c>
    3bf8:	b	3cf0 <normal_prologTok+0xd5c>
    3bfc:	b	3c28 <normal_prologTok+0xc94>
    3c00:	b	3cf0 <normal_prologTok+0xd5c>
    3c04:	b	3c28 <normal_prologTok+0xc94>
    3c08:	b	3c28 <normal_prologTok+0xc94>
    3c0c:	b	3c28 <normal_prologTok+0xc94>
    3c10:	b	3c28 <normal_prologTok+0xc94>
    3c14:	b	3cf0 <normal_prologTok+0xd5c>
    3c18:	b	3c1c <normal_prologTok+0xc88>
    3c1c:	str	r5, [r7]
    3c20:	mov	r8, #0
    3c24:	b	3d80 <normal_prologTok+0xdec>
    3c28:	add	r5, r5, #1
    3c2c:	b	39dc <normal_prologTok+0xa48>
    3c30:	sub	r3, r6, r5
    3c34:	cmp	r3, #2
    3c38:	bge	3c44 <normal_prologTok+0xcb0>
    3c3c:	mvn	r8, #1
    3c40:	b	3d80 <normal_prologTok+0xdec>
    3c44:	ldr	ip, [r4, #332]	; 0x14c
    3c48:	mov	r1, r5
    3c4c:	mov	r0, r4
    3c50:	blx	ip
    3c54:	cmp	r0, #0
    3c58:	bne	3c68 <normal_prologTok+0xcd4>
    3c5c:	str	r5, [r7]
    3c60:	mov	r8, #0
    3c64:	b	3d80 <normal_prologTok+0xdec>
    3c68:	add	r5, r5, #2
    3c6c:	b	39dc <normal_prologTok+0xa48>
    3c70:	sub	r0, r6, r5
    3c74:	cmp	r0, #3
    3c78:	bge	3c84 <normal_prologTok+0xcf0>
    3c7c:	mvn	r8, #1
    3c80:	b	3d80 <normal_prologTok+0xdec>
    3c84:	ldr	ip, [r4, #336]	; 0x150
    3c88:	mov	r1, r5
    3c8c:	mov	r0, r4
    3c90:	blx	ip
    3c94:	cmp	r0, #0
    3c98:	bne	3ca8 <normal_prologTok+0xd14>
    3c9c:	str	r5, [r7]
    3ca0:	mov	r8, #0
    3ca4:	b	3d80 <normal_prologTok+0xdec>
    3ca8:	add	r5, r5, #3
    3cac:	b	39dc <normal_prologTok+0xa48>
    3cb0:	sub	r3, r6, r5
    3cb4:	cmp	r3, #4
    3cb8:	bge	3cc4 <normal_prologTok+0xd30>
    3cbc:	mvn	r8, #1
    3cc0:	b	3d80 <normal_prologTok+0xdec>
    3cc4:	ldr	ip, [r4, #340]	; 0x154
    3cc8:	mov	r1, r5
    3ccc:	mov	r0, r4
    3cd0:	blx	ip
    3cd4:	cmp	r0, #0
    3cd8:	bne	3ce8 <normal_prologTok+0xd54>
    3cdc:	str	r5, [r7]
    3ce0:	mov	r8, #0
    3ce4:	b	3d80 <normal_prologTok+0xdec>
    3ce8:	add	r5, r5, #4
    3cec:	b	39dc <normal_prologTok+0xa48>
    3cf0:	mov	r8, #19
    3cf4:	b	39dc <normal_prologTok+0xa48>
    3cf8:	cmp	r8, #19
    3cfc:	bne	3d0c <normal_prologTok+0xd78>
    3d00:	str	r5, [r7]
    3d04:	mov	r8, #0
    3d08:	b	3d80 <normal_prologTok+0xdec>
    3d0c:	add	ip, r5, #1
    3d10:	str	ip, [r7]
    3d14:	mov	r8, #32
    3d18:	b	3d80 <normal_prologTok+0xdec>
    3d1c:	cmp	r8, #19
    3d20:	bne	3d30 <normal_prologTok+0xd9c>
    3d24:	str	r5, [r7]
    3d28:	mov	r8, #0
    3d2c:	b	3d80 <normal_prologTok+0xdec>
    3d30:	add	r3, r5, #1
    3d34:	str	r3, [r7]
    3d38:	mov	r8, #31
    3d3c:	b	3d80 <normal_prologTok+0xdec>
    3d40:	cmp	r8, #19
    3d44:	bne	3d54 <normal_prologTok+0xdc0>
    3d48:	str	r5, [r7]
    3d4c:	mov	r8, #0
    3d50:	b	3d80 <normal_prologTok+0xdec>
    3d54:	add	r1, r5, #1
    3d58:	str	r1, [r7]
    3d5c:	mov	r8, #30
    3d60:	b	3d80 <normal_prologTok+0xdec>
    3d64:	str	r5, [r7]
    3d68:	mov	r8, #0
    3d6c:	b	3d80 <normal_prologTok+0xdec>
    3d70:	rsb	r8, r8, #0
    3d74:	b	3d80 <normal_prologTok+0xdec>
    3d78:	str	r5, [r7]
    3d7c:	mov	r8, #0
    3d80:	mov	r0, r8
    3d84:	ldr	r4, [sp, #16]
    3d88:	ldr	r5, [sp, #20]
    3d8c:	ldr	r6, [sp, #24]
    3d90:	ldr	r7, [sp, #28]
    3d94:	ldr	r8, [sp, #32]
    3d98:	ldr	r9, [sp, #36]	; 0x24
    3d9c:	ldr	lr, [sp, #8]
    3da0:	add	sp, sp, #40	; 0x28
    3da4:	bx	lr

00003da8 <normal_attributeValueTok>:
    3da8:	mov	ip, sp
    3dac:	sub	sp, sp, #16
    3db0:	str	ip, [sp]
    3db4:	str	lr, [sp, #4]
    3db8:	str	r4, [sp, #8]
    3dbc:	cmp	r1, r2
    3dc0:	bne	3dcc <normal_attributeValueTok+0x24>
    3dc4:	mvn	r0, #3
    3dc8:	b	3f44 <normal_attributeValueTok+0x19c>
    3dcc:	mov	ip, r1
    3dd0:	cmp	r1, r2
    3dd4:	beq	3f3c <normal_attributeValueTok+0x194>
    3dd8:	ldrb	r4, [r1]
    3ddc:	and	r4, r4, #255	; 0xff
    3de0:	add	r4, r0, r4
    3de4:	ldrb	r4, [r4, #76]	; 0x4c
    3de8:	sub	r4, r4, #2
    3dec:	cmp	r4, #20
    3df0:	bcs	3f34 <normal_attributeValueTok+0x18c>
    3df4:	add	pc, pc, r4, lsl #2
    3df8:	nop	{0}
    3dfc:	b	3e8c <normal_attributeValueTok+0xe4>
    3e00:	b	3e64 <normal_attributeValueTok+0xbc>
    3e04:	b	3f34 <normal_attributeValueTok+0x18c>
    3e08:	b	3e4c <normal_attributeValueTok+0xa4>
    3e0c:	b	3e54 <normal_attributeValueTok+0xac>
    3e10:	b	3e5c <normal_attributeValueTok+0xb4>
    3e14:	b	3f34 <normal_attributeValueTok+0x18c>
    3e18:	b	3ebc <normal_attributeValueTok+0x114>
    3e1c:	b	3e98 <normal_attributeValueTok+0xf0>
    3e20:	b	3f34 <normal_attributeValueTok+0x18c>
    3e24:	b	3f34 <normal_attributeValueTok+0x18c>
    3e28:	b	3f34 <normal_attributeValueTok+0x18c>
    3e2c:	b	3f34 <normal_attributeValueTok+0x18c>
    3e30:	b	3f34 <normal_attributeValueTok+0x18c>
    3e34:	b	3f34 <normal_attributeValueTok+0x18c>
    3e38:	b	3f34 <normal_attributeValueTok+0x18c>
    3e3c:	b	3f34 <normal_attributeValueTok+0x18c>
    3e40:	b	3f34 <normal_attributeValueTok+0x18c>
    3e44:	b	3f34 <normal_attributeValueTok+0x18c>
    3e48:	b	3f10 <normal_attributeValueTok+0x168>
    3e4c:	add	r1, r1, #2
    3e50:	b	3dd0 <normal_attributeValueTok+0x28>
    3e54:	add	r1, r1, #3
    3e58:	b	3dd0 <normal_attributeValueTok+0x28>
    3e5c:	add	r1, r1, #4
    3e60:	b	3dd0 <normal_attributeValueTok+0x28>
    3e64:	cmp	r1, ip
    3e68:	bne	3e80 <normal_attributeValueTok+0xd8>
    3e6c:	add	r1, r1, #1
    3e70:	ldr	r4, [sp, #8]
    3e74:	ldr	lr, [sp, #4]
    3e78:	add	sp, sp, #16
    3e7c:	b	f14 <normal_scanRef>
    3e80:	str	r1, [r3]
    3e84:	mov	r0, #6
    3e88:	b	3f44 <normal_attributeValueTok+0x19c>
    3e8c:	str	r1, [r3]
    3e90:	mov	r0, #0
    3e94:	b	3f44 <normal_attributeValueTok+0x19c>
    3e98:	cmp	r1, ip
    3e9c:	bne	3eb0 <normal_attributeValueTok+0x108>
    3ea0:	add	r2, r1, #1
    3ea4:	str	r2, [r3]
    3ea8:	mov	r0, #7
    3eac:	b	3f44 <normal_attributeValueTok+0x19c>
    3eb0:	str	r1, [r3]
    3eb4:	mov	r0, #6
    3eb8:	b	3f44 <normal_attributeValueTok+0x19c>
    3ebc:	cmp	r1, ip
    3ec0:	bne	3f04 <normal_attributeValueTok+0x15c>
    3ec4:	add	r4, r1, #1
    3ec8:	cmp	r4, r2
    3ecc:	bne	3ed8 <normal_attributeValueTok+0x130>
    3ed0:	mvn	r0, #2
    3ed4:	b	3f44 <normal_attributeValueTok+0x19c>
    3ed8:	add	r2, r4, #1
    3edc:	ldrb	ip, [r4]
    3ee0:	and	r1, ip, #255	; 0xff
    3ee4:	add	ip, r0, r1
    3ee8:	ldrb	ip, [ip, #76]	; 0x4c
    3eec:	cmp	ip, #10
    3ef0:	moveq	ip, r2
    3ef4:	movne	ip, r4
    3ef8:	str	ip, [r3]
    3efc:	mov	r0, #7
    3f00:	b	3f44 <normal_attributeValueTok+0x19c>
    3f04:	str	r1, [r3]
    3f08:	mov	r0, #6
    3f0c:	b	3f44 <normal_attributeValueTok+0x19c>
    3f10:	cmp	r1, ip
    3f14:	bne	3f28 <normal_attributeValueTok+0x180>
    3f18:	add	ip, r1, #1
    3f1c:	str	ip, [r3]
    3f20:	mov	r0, #39	; 0x27
    3f24:	b	3f44 <normal_attributeValueTok+0x19c>
    3f28:	str	r1, [r3]
    3f2c:	mov	r0, #6
    3f30:	b	3f44 <normal_attributeValueTok+0x19c>
    3f34:	add	r1, r1, #1
    3f38:	b	3dd0 <normal_attributeValueTok+0x28>
    3f3c:	str	r1, [r3]
    3f40:	mov	r0, #6
    3f44:	ldr	r4, [sp, #8]
    3f48:	ldr	lr, [sp, #4]
    3f4c:	add	sp, sp, #16
    3f50:	bx	lr

00003f54 <normal_entityValueTok>:
    3f54:	mov	ip, sp
    3f58:	sub	sp, sp, #16
    3f5c:	str	ip, [sp]
    3f60:	str	lr, [sp, #4]
    3f64:	str	r4, [sp, #8]
    3f68:	cmp	r1, r2
    3f6c:	bne	3f78 <normal_entityValueTok+0x24>
    3f70:	mvn	r0, #3
    3f74:	b	40d4 <normal_entityValueTok+0x180>
    3f78:	mov	ip, r1
    3f7c:	cmp	r1, r2
    3f80:	beq	40cc <normal_entityValueTok+0x178>
    3f84:	ldrb	r4, [r1]
    3f88:	and	r4, r4, #255	; 0xff
    3f8c:	add	r4, r0, r4
    3f90:	ldrb	r4, [r4, #76]	; 0x4c
    3f94:	cmp	r4, #7
    3f98:	bcs	3fec <normal_entityValueTok+0x98>
    3f9c:	cmp	r4, #3
    3fa0:	beq	3fc4 <normal_entityValueTok+0x70>
    3fa4:	cmp	r4, #5
    3fa8:	beq	3fbc <normal_entityValueTok+0x68>
    3fac:	cmp	r4, #6
    3fb0:	bne	40a0 <normal_entityValueTok+0x14c>
    3fb4:	add	r1, r1, #3
    3fb8:	b	3f7c <normal_entityValueTok+0x28>
    3fbc:	add	r1, r1, #2
    3fc0:	b	3f7c <normal_entityValueTok+0x28>
    3fc4:	cmp	r1, ip
    3fc8:	bne	3fe0 <normal_entityValueTok+0x8c>
    3fcc:	add	r1, r1, #1
    3fd0:	ldr	r4, [sp, #8]
    3fd4:	ldr	lr, [sp, #4]
    3fd8:	add	sp, sp, #16
    3fdc:	b	f14 <normal_scanRef>
    3fe0:	str	r1, [r3]
    3fe4:	mov	r0, #6
    3fe8:	b	40d4 <normal_entityValueTok+0x180>
    3fec:	cmp	r4, #10
    3ff0:	bcs	4060 <normal_entityValueTok+0x10c>
    3ff4:	cmp	r4, #7
    3ff8:	beq	4058 <normal_entityValueTok+0x104>
    3ffc:	cmp	r4, #9
    4000:	bne	40a0 <normal_entityValueTok+0x14c>
    4004:	cmp	r1, ip
    4008:	bne	404c <normal_entityValueTok+0xf8>
    400c:	add	ip, r1, #1
    4010:	cmp	ip, r2
    4014:	bne	4020 <normal_entityValueTok+0xcc>
    4018:	mvn	r0, #2
    401c:	b	40d4 <normal_entityValueTok+0x180>
    4020:	add	r1, ip, #1
    4024:	ldrb	r2, [ip]
    4028:	and	r2, r2, #255	; 0xff
    402c:	add	r0, r0, r2
    4030:	ldrb	r0, [r0, #76]	; 0x4c
    4034:	cmp	r0, #10
    4038:	moveq	ip, r1
    403c:	movne	ip, ip
    4040:	str	ip, [r3]
    4044:	mov	r0, #7
    4048:	b	40d4 <normal_entityValueTok+0x180>
    404c:	str	r1, [r3]
    4050:	mov	r0, #6
    4054:	b	40d4 <normal_entityValueTok+0x180>
    4058:	add	r1, r1, #4
    405c:	b	3f7c <normal_entityValueTok+0x28>
    4060:	cmp	r4, #10
    4064:	beq	40a8 <normal_entityValueTok+0x154>
    4068:	cmp	r4, #30
    406c:	bne	40a0 <normal_entityValueTok+0x14c>
    4070:	cmp	r1, ip
    4074:	bne	4094 <normal_entityValueTok+0x140>
    4078:	add	r1, r1, #1
    407c:	bl	2a28 <normal_scanPercent>
    4080:	mov	r2, #0
    4084:	cmp	r0, #22
    4088:	moveq	r0, r2
    408c:	movne	r0, r0
    4090:	b	40d4 <normal_entityValueTok+0x180>
    4094:	str	r1, [r3]
    4098:	mov	r0, #6
    409c:	b	40d4 <normal_entityValueTok+0x180>
    40a0:	add	r1, r1, #1
    40a4:	b	3f7c <normal_entityValueTok+0x28>
    40a8:	cmp	r1, ip
    40ac:	bne	40c0 <normal_entityValueTok+0x16c>
    40b0:	add	r1, r1, #1
    40b4:	str	r1, [r3]
    40b8:	mov	r0, #7
    40bc:	b	40d4 <normal_entityValueTok+0x180>
    40c0:	str	r1, [r3]
    40c4:	mov	r0, #6
    40c8:	b	40d4 <normal_entityValueTok+0x180>
    40cc:	str	r1, [r3]
    40d0:	mov	r0, #6
    40d4:	ldr	r4, [sp, #8]
    40d8:	ldr	lr, [sp, #4]
    40dc:	add	sp, sp, #16
    40e0:	bx	lr

000040e4 <normal_ignoreSectionTok>:
    40e4:	mov	ip, sp
    40e8:	sub	sp, sp, #32
    40ec:	str	ip, [sp]
    40f0:	str	lr, [sp, #4]
    40f4:	str	r4, [sp, #8]
    40f8:	str	r5, [sp, #12]
    40fc:	str	r6, [sp, #16]
    4100:	str	r7, [sp, #20]
    4104:	str	r8, [sp, #24]
    4108:	mov	r6, r3
    410c:	mov	r7, r2
    4110:	mov	r4, r1
    4114:	mov	r5, r0
    4118:	mov	r8, #0
    411c:	cmp	r4, r7
    4120:	beq	42f0 <normal_ignoreSectionTok+0x20c>
    4124:	ldrb	ip, [r4]
    4128:	and	r3, ip, #255	; 0xff
    412c:	add	r3, r5, r3
    4130:	ldrb	r2, [r3, #76]	; 0x4c
    4134:	cmp	r2, #9
    4138:	bcs	42e8 <normal_ignoreSectionTok+0x204>
    413c:	add	pc, pc, r2, lsl #2
    4140:	nop	{0}
    4144:	b	4228 <normal_ignoreSectionTok+0x144>
    4148:	b	4228 <normal_ignoreSectionTok+0x144>
    414c:	b	4234 <normal_ignoreSectionTok+0x150>
    4150:	b	42e8 <normal_ignoreSectionTok+0x204>
    4154:	b	4284 <normal_ignoreSectionTok+0x1a0>
    4158:	b	4168 <normal_ignoreSectionTok+0x84>
    415c:	b	41a8 <normal_ignoreSectionTok+0xc4>
    4160:	b	41e8 <normal_ignoreSectionTok+0x104>
    4164:	b	4228 <normal_ignoreSectionTok+0x144>
    4168:	sub	r1, r7, r4
    416c:	cmp	r1, #2
    4170:	bge	417c <normal_ignoreSectionTok+0x98>
    4174:	mvn	r0, #1
    4178:	b	42f4 <normal_ignoreSectionTok+0x210>
    417c:	ldr	ip, [r5, #356]	; 0x164
    4180:	mov	r1, r4
    4184:	mov	r0, r5
    4188:	blx	ip
    418c:	cmp	r0, #0
    4190:	beq	41a0 <normal_ignoreSectionTok+0xbc>
    4194:	str	r4, [r6]
    4198:	mov	r0, #0
    419c:	b	42f4 <normal_ignoreSectionTok+0x210>
    41a0:	add	r4, r4, #2
    41a4:	b	411c <normal_ignoreSectionTok+0x38>
    41a8:	sub	r0, r7, r4
    41ac:	cmp	r0, #3
    41b0:	bge	41bc <normal_ignoreSectionTok+0xd8>
    41b4:	mvn	r0, #1
    41b8:	b	42f4 <normal_ignoreSectionTok+0x210>
    41bc:	ldr	ip, [r5, #360]	; 0x168
    41c0:	mov	r1, r4
    41c4:	mov	r0, r5
    41c8:	blx	ip
    41cc:	cmp	r0, #0
    41d0:	beq	41e0 <normal_ignoreSectionTok+0xfc>
    41d4:	str	r4, [r6]
    41d8:	mov	r0, #0
    41dc:	b	42f4 <normal_ignoreSectionTok+0x210>
    41e0:	add	r4, r4, #3
    41e4:	b	411c <normal_ignoreSectionTok+0x38>
    41e8:	sub	r3, r7, r4
    41ec:	cmp	r3, #4
    41f0:	bge	41fc <normal_ignoreSectionTok+0x118>
    41f4:	mvn	r0, #1
    41f8:	b	42f4 <normal_ignoreSectionTok+0x210>
    41fc:	ldr	ip, [r5, #364]	; 0x16c
    4200:	mov	r1, r4
    4204:	mov	r0, r5
    4208:	blx	ip
    420c:	cmp	r0, #0
    4210:	beq	4220 <normal_ignoreSectionTok+0x13c>
    4214:	str	r4, [r6]
    4218:	mov	r0, #0
    421c:	b	42f4 <normal_ignoreSectionTok+0x210>
    4220:	add	r4, r4, #4
    4224:	b	411c <normal_ignoreSectionTok+0x38>
    4228:	str	r4, [r6]
    422c:	mov	r0, #0
    4230:	b	42f4 <normal_ignoreSectionTok+0x210>
    4234:	add	r1, r4, #1
    4238:	mov	r4, r1
    423c:	cmp	r1, r7
    4240:	bne	424c <normal_ignoreSectionTok+0x168>
    4244:	mvn	r0, #0
    4248:	b	42f4 <normal_ignoreSectionTok+0x210>
    424c:	ldrb	r2, [r4]
    4250:	cmp	r2, #33	; 0x21
    4254:	bne	411c <normal_ignoreSectionTok+0x38>
    4258:	add	r4, r4, #1
    425c:	cmp	r4, r7
    4260:	bne	426c <normal_ignoreSectionTok+0x188>
    4264:	mvn	r0, #0
    4268:	b	42f4 <normal_ignoreSectionTok+0x210>
    426c:	ldrb	ip, [r1, #1]
    4270:	cmp	ip, #91	; 0x5b
    4274:	bne	411c <normal_ignoreSectionTok+0x38>
    4278:	add	r8, r8, #1
    427c:	add	r4, r1, #2
    4280:	b	411c <normal_ignoreSectionTok+0x38>
    4284:	add	r0, r4, #1
    4288:	mov	r4, r0
    428c:	cmp	r0, r7
    4290:	bne	429c <normal_ignoreSectionTok+0x1b8>
    4294:	mvn	r0, #0
    4298:	b	42f4 <normal_ignoreSectionTok+0x210>
    429c:	ldrb	r2, [r4]
    42a0:	cmp	r2, #93	; 0x5d
    42a4:	bne	411c <normal_ignoreSectionTok+0x38>
    42a8:	add	r4, r4, #1
    42ac:	cmp	r4, r7
    42b0:	bne	42bc <normal_ignoreSectionTok+0x1d8>
    42b4:	mvn	r0, #0
    42b8:	b	42f4 <normal_ignoreSectionTok+0x210>
    42bc:	ldrb	r1, [r0, #1]
    42c0:	cmp	r1, #62	; 0x3e
    42c4:	bne	411c <normal_ignoreSectionTok+0x38>
    42c8:	add	r4, r0, #2
    42cc:	cmp	r8, #0
    42d0:	bne	42e0 <normal_ignoreSectionTok+0x1fc>
    42d4:	str	r4, [r6]
    42d8:	mov	r0, #42	; 0x2a
    42dc:	b	42f4 <normal_ignoreSectionTok+0x210>
    42e0:	sub	r8, r8, #1
    42e4:	b	411c <normal_ignoreSectionTok+0x38>
    42e8:	add	r4, r4, #1
    42ec:	b	411c <normal_ignoreSectionTok+0x38>
    42f0:	mvn	r0, #0
    42f4:	ldr	r4, [sp, #8]
    42f8:	ldr	r5, [sp, #12]
    42fc:	ldr	r6, [sp, #16]
    4300:	ldr	r7, [sp, #20]
    4304:	ldr	r8, [sp, #24]
    4308:	ldr	lr, [sp, #4]
    430c:	add	sp, sp, #32
    4310:	bx	lr

00004314 <normal_isPublicId>:
    4314:	mov	ip, sp
    4318:	sub	sp, sp, #16
    431c:	str	ip, [sp]
    4320:	str	lr, [sp, #4]
    4324:	str	r4, [sp, #8]
    4328:	str	r5, [sp, #12]
    432c:	add	r5, r1, #1
    4330:	sub	r4, r2, #1
    4334:	cmp	r5, r4
    4338:	beq	4418 <normal_isPublicId+0x104>
    433c:	ldrb	r1, [r5]
    4340:	and	r2, r1, #255	; 0xff
    4344:	add	ip, r0, r2
    4348:	ldrb	r2, [ip, #76]	; 0x4c
    434c:	sub	r2, r2, #9
    4350:	cmp	r2, #27
    4354:	bcs	43f0 <normal_isPublicId+0xdc>
    4358:	add	pc, pc, r2, lsl #2
    435c:	nop	{0}
    4360:	b	4410 <normal_isPublicId+0xfc>
    4364:	b	4410 <normal_isPublicId+0xfc>
    4368:	b	43f0 <normal_isPublicId+0xdc>
    436c:	b	43f0 <normal_isPublicId+0xdc>
    4370:	b	4410 <normal_isPublicId+0xfc>
    4374:	b	4410 <normal_isPublicId+0xfc>
    4378:	b	4410 <normal_isPublicId+0xfc>
    437c:	b	4410 <normal_isPublicId+0xfc>
    4380:	b	4410 <normal_isPublicId+0xfc>
    4384:	b	4410 <normal_isPublicId+0xfc>
    4388:	b	4410 <normal_isPublicId+0xfc>
    438c:	b	43f0 <normal_isPublicId+0xdc>
    4390:	b	43cc <normal_isPublicId+0xb8>
    4394:	b	43e0 <normal_isPublicId+0xcc>
    4398:	b	4410 <normal_isPublicId+0xfc>
    439c:	b	4410 <normal_isPublicId+0xfc>
    43a0:	b	4410 <normal_isPublicId+0xfc>
    43a4:	b	43e0 <normal_isPublicId+0xcc>
    43a8:	b	4410 <normal_isPublicId+0xfc>
    43ac:	b	43f0 <normal_isPublicId+0xdc>
    43b0:	b	43f0 <normal_isPublicId+0xdc>
    43b4:	b	4410 <normal_isPublicId+0xfc>
    43b8:	b	4410 <normal_isPublicId+0xfc>
    43bc:	b	4410 <normal_isPublicId+0xfc>
    43c0:	b	4410 <normal_isPublicId+0xfc>
    43c4:	b	4410 <normal_isPublicId+0xfc>
    43c8:	b	4410 <normal_isPublicId+0xfc>
    43cc:	cmp	r1, #9
    43d0:	bne	4410 <normal_isPublicId+0xfc>
    43d4:	str	r5, [r3]
    43d8:	mov	r0, #0
    43dc:	b	441c <normal_isPublicId+0x108>
    43e0:	ldrb	ip, [r5]
    43e4:	bic	r2, ip, #127	; 0x7f
    43e8:	cmp	r2, #0
    43ec:	beq	4410 <normal_isPublicId+0xfc>
    43f0:	ldrb	ip, [r5]
    43f4:	cmp	ip, #36	; 0x24
    43f8:	beq	4410 <normal_isPublicId+0xfc>
    43fc:	cmp	ip, #64	; 0x40
    4400:	beq	4410 <normal_isPublicId+0xfc>
    4404:	str	r5, [r3]
    4408:	mov	r0, #0
    440c:	b	441c <normal_isPublicId+0x108>
    4410:	add	r5, r5, #1
    4414:	b	4334 <normal_isPublicId+0x20>
    4418:	mov	r0, #1
    441c:	ldr	r4, [sp, #8]
    4420:	ldr	r5, [sp, #12]
    4424:	ldr	lr, [sp, #4]
    4428:	add	sp, sp, #16
    442c:	bx	lr

00004430 <normal_getAtts>:
    4430:	mov	ip, sp
    4434:	sub	sp, sp, #32
    4438:	str	ip, [sp]
    443c:	str	lr, [sp, #4]
    4440:	str	r4, [sp, #8]
    4444:	str	r5, [sp, #12]
    4448:	str	r6, [sp, #16]
    444c:	str	r7, [sp, #20]
    4450:	str	r8, [sp, #24]
    4454:	mov	ip, r0
    4458:	mov	r6, #1
    445c:	mov	r0, #0
    4460:	mov	r5, #0
    4464:	add	r7, r1, #1
    4468:	ldrb	r4, [r7]
    446c:	and	r1, r4, #255	; 0xff
    4470:	add	r1, ip, r1
    4474:	ldrb	r1, [r1, #76]	; 0x4c
    4478:	sub	r1, r1, #3
    447c:	cmp	r1, #27
    4480:	bcs	4748 <normal_getAtts+0x318>
    4484:	add	pc, pc, r1, lsl #2
    4488:	nop	{0}
    448c:	b	463c <normal_getAtts+0x20c>
    4490:	b	4748 <normal_getAtts+0x318>
    4494:	b	44f8 <normal_getAtts+0xc8>
    4498:	b	4524 <normal_getAtts+0xf4>
    449c:	b	4550 <normal_getAtts+0x120>
    44a0:	b	4748 <normal_getAtts+0x318>
    44a4:	b	46dc <normal_getAtts+0x2ac>
    44a8:	b	46dc <normal_getAtts+0x2ac>
    44ac:	b	4720 <normal_getAtts+0x2f0>
    44b0:	b	45a4 <normal_getAtts+0x174>
    44b4:	b	45f0 <normal_getAtts+0x1c0>
    44b8:	b	4748 <normal_getAtts+0x318>
    44bc:	b	4748 <normal_getAtts+0x318>
    44c0:	b	4748 <normal_getAtts+0x318>
    44c4:	b	4720 <normal_getAtts+0x2f0>
    44c8:	b	4748 <normal_getAtts+0x318>
    44cc:	b	4748 <normal_getAtts+0x318>
    44d0:	b	4748 <normal_getAtts+0x318>
    44d4:	b	4654 <normal_getAtts+0x224>
    44d8:	b	457c <normal_getAtts+0x14c>
    44dc:	b	4748 <normal_getAtts+0x318>
    44e0:	b	457c <normal_getAtts+0x14c>
    44e4:	b	4748 <normal_getAtts+0x318>
    44e8:	b	4748 <normal_getAtts+0x318>
    44ec:	b	4748 <normal_getAtts+0x318>
    44f0:	b	4748 <normal_getAtts+0x318>
    44f4:	b	457c <normal_getAtts+0x14c>
    44f8:	cmp	r6, #0
    44fc:	bne	451c <normal_getAtts+0xec>
    4500:	cmp	r0, r2
    4504:	bge	4518 <normal_getAtts+0xe8>
    4508:	str	r7, [r3, r0, lsl #4]
    450c:	add	r4, r3, r0, lsl #4
    4510:	mov	r1, #1
    4514:	strb	r1, [r4, #12]
    4518:	mov	r6, #1
    451c:	add	r7, r7, #1
    4520:	b	4748 <normal_getAtts+0x318>
    4524:	cmp	r6, #0
    4528:	bne	4548 <normal_getAtts+0x118>
    452c:	cmp	r0, r2
    4530:	bge	4544 <normal_getAtts+0x114>
    4534:	str	r7, [r3, r0, lsl #4]
    4538:	add	r4, r3, r0, lsl #4
    453c:	mov	r1, #1
    4540:	strb	r1, [r4, #12]
    4544:	mov	r6, #1
    4548:	add	r7, r7, #2
    454c:	b	4748 <normal_getAtts+0x318>
    4550:	cmp	r6, #0
    4554:	bne	4574 <normal_getAtts+0x144>
    4558:	cmp	r0, r2
    455c:	bge	4570 <normal_getAtts+0x140>
    4560:	str	r7, [r3, r0, lsl #4]
    4564:	add	r1, r3, r0, lsl #4
    4568:	mov	r4, #1
    456c:	strb	r4, [r1, #12]
    4570:	mov	r6, #1
    4574:	add	r7, r7, #3
    4578:	b	4748 <normal_getAtts+0x318>
    457c:	cmp	r6, #0
    4580:	bne	4748 <normal_getAtts+0x318>
    4584:	cmp	r0, r2
    4588:	bge	459c <normal_getAtts+0x16c>
    458c:	str	r7, [r3, r0, lsl #4]
    4590:	add	r1, r3, r0, lsl #4
    4594:	mov	r4, #1
    4598:	strb	r4, [r1, #12]
    459c:	mov	r6, #1
    45a0:	b	4748 <normal_getAtts+0x318>
    45a4:	cmp	r6, #2
    45a8:	beq	45cc <normal_getAtts+0x19c>
    45ac:	cmp	r0, r2
    45b0:	bge	45c0 <normal_getAtts+0x190>
    45b4:	add	r1, r3, r0, lsl #4
    45b8:	add	r4, r7, #1
    45bc:	str	r4, [r1, #4]
    45c0:	mov	r6, #2
    45c4:	mov	r5, #12
    45c8:	b	4748 <normal_getAtts+0x318>
    45cc:	cmp	r5, #12
    45d0:	bne	4748 <normal_getAtts+0x318>
    45d4:	mov	r6, #0
    45d8:	cmp	r0, r2
    45dc:	bge	45e8 <normal_getAtts+0x1b8>
    45e0:	add	r1, r3, r0, lsl #4
    45e4:	str	r7, [r1, #8]
    45e8:	add	r0, r0, #1
    45ec:	b	4748 <normal_getAtts+0x318>
    45f0:	cmp	r6, #2
    45f4:	beq	4618 <normal_getAtts+0x1e8>
    45f8:	cmp	r0, r2
    45fc:	bge	460c <normal_getAtts+0x1dc>
    4600:	add	r1, r3, r0, lsl #4
    4604:	add	r4, r7, #1
    4608:	str	r4, [r1, #4]
    460c:	mov	r6, #2
    4610:	mov	r5, #13
    4614:	b	4748 <normal_getAtts+0x318>
    4618:	cmp	r5, #13
    461c:	bne	4748 <normal_getAtts+0x318>
    4620:	mov	r6, #0
    4624:	cmp	r0, r2
    4628:	bge	4634 <normal_getAtts+0x204>
    462c:	add	r1, r3, r0, lsl #4
    4630:	str	r7, [r1, #8]
    4634:	add	r0, r0, #1
    4638:	b	4748 <normal_getAtts+0x318>
    463c:	cmp	r0, r2
    4640:	bge	4748 <normal_getAtts+0x318>
    4644:	add	r4, r3, r0, lsl #4
    4648:	mov	r1, #0
    464c:	strb	r1, [r4, #12]
    4650:	b	4748 <normal_getAtts+0x318>
    4654:	cmp	r6, #1
    4658:	beq	46d4 <normal_getAtts+0x2a4>
    465c:	cmp	r0, r2
    4660:	movlt	r8, #1
    4664:	movge	r8, #0
    4668:	mov	r1, #0
    466c:	cmp	r6, #2
    4670:	moveq	r1, r8
    4674:	movne	r1, r1
    4678:	cmp	r1, #0
    467c:	beq	4748 <normal_getAtts+0x318>
    4680:	add	r1, r3, r0, lsl #4
    4684:	ldrb	r8, [r1, #12]
    4688:	cmp	r8, #0
    468c:	beq	4748 <normal_getAtts+0x318>
    4690:	ldr	r1, [r1, #4]
    4694:	cmp	r7, r1
    4698:	beq	46c4 <normal_getAtts+0x294>
    469c:	cmp	r4, #32
    46a0:	bne	46c4 <normal_getAtts+0x294>
    46a4:	ldrb	r1, [r7, #1]
    46a8:	cmp	r1, #32
    46ac:	beq	46c4 <normal_getAtts+0x294>
    46b0:	and	r1, r1, #255	; 0xff
    46b4:	add	r1, ip, r1
    46b8:	ldrb	r1, [r1, #76]	; 0x4c
    46bc:	cmp	r1, r5
    46c0:	bne	4748 <normal_getAtts+0x318>
    46c4:	add	r4, r3, r0, lsl #4
    46c8:	mov	r1, #0
    46cc:	strb	r1, [r4, #12]
    46d0:	b	4748 <normal_getAtts+0x318>
    46d4:	mov	r6, #0
    46d8:	b	4748 <normal_getAtts+0x318>
    46dc:	cmp	r6, #1
    46e0:	beq	4718 <normal_getAtts+0x2e8>
    46e4:	cmp	r0, r2
    46e8:	movlt	r4, #1
    46ec:	movge	r4, #0
    46f0:	mov	r1, #0
    46f4:	cmp	r6, #2
    46f8:	moveq	r1, r4
    46fc:	movne	r1, r1
    4700:	cmp	r1, #0
    4704:	beq	4748 <normal_getAtts+0x318>
    4708:	add	r4, r3, r0, lsl #4
    470c:	mov	r1, #0
    4710:	strb	r1, [r4, #12]
    4714:	b	4748 <normal_getAtts+0x318>
    4718:	mov	r6, #0
    471c:	b	4748 <normal_getAtts+0x318>
    4720:	cmp	r6, #2
    4724:	beq	4748 <normal_getAtts+0x318>
    4728:	ldr	r4, [sp, #8]
    472c:	ldr	r5, [sp, #12]
    4730:	ldr	r6, [sp, #16]
    4734:	ldr	r7, [sp, #20]
    4738:	ldr	r8, [sp, #24]
    473c:	ldr	lr, [sp, #4]
    4740:	add	sp, sp, #32
    4744:	bx	lr
    4748:	add	r7, r7, #1
    474c:	b	4468 <normal_getAtts+0x38>

00004750 <normal_charRefNumber>:
    4750:	mov	ip, sp
    4754:	sub	sp, sp, #8
    4758:	str	ip, [sp]
    475c:	str	lr, [sp, #4]
    4760:	mov	r0, #0
    4764:	add	r2, r1, #2
    4768:	ldrb	r1, [r2]
    476c:	cmp	r1, #120	; 0x78
    4770:	bne	48b8 <normal_charRefNumber+0x168>
    4774:	add	r3, r2, #1
    4778:	ldrb	r1, [r3]
    477c:	cmp	r1, #59	; 0x3b
    4780:	beq	48f4 <normal_charRefNumber+0x1a4>
    4784:	sub	r2, r1, #48	; 0x30
    4788:	cmp	r2, #55	; 0x37
    478c:	bcs	48a0 <normal_charRefNumber+0x150>
    4790:	add	pc, pc, r2, lsl #2
    4794:	nop	{0}
    4798:	b	4874 <normal_charRefNumber+0x124>
    479c:	b	4874 <normal_charRefNumber+0x124>
    47a0:	b	4874 <normal_charRefNumber+0x124>
    47a4:	b	4874 <normal_charRefNumber+0x124>
    47a8:	b	4874 <normal_charRefNumber+0x124>
    47ac:	b	4874 <normal_charRefNumber+0x124>
    47b0:	b	4874 <normal_charRefNumber+0x124>
    47b4:	b	4874 <normal_charRefNumber+0x124>
    47b8:	b	4874 <normal_charRefNumber+0x124>
    47bc:	b	4874 <normal_charRefNumber+0x124>
    47c0:	b	48a0 <normal_charRefNumber+0x150>
    47c4:	b	48a0 <normal_charRefNumber+0x150>
    47c8:	b	48a0 <normal_charRefNumber+0x150>
    47cc:	b	48a0 <normal_charRefNumber+0x150>
    47d0:	b	48a0 <normal_charRefNumber+0x150>
    47d4:	b	48a0 <normal_charRefNumber+0x150>
    47d8:	b	48a0 <normal_charRefNumber+0x150>
    47dc:	b	4884 <normal_charRefNumber+0x134>
    47e0:	b	4884 <normal_charRefNumber+0x134>
    47e4:	b	4884 <normal_charRefNumber+0x134>
    47e8:	b	4884 <normal_charRefNumber+0x134>
    47ec:	b	4884 <normal_charRefNumber+0x134>
    47f0:	b	4884 <normal_charRefNumber+0x134>
    47f4:	b	48a0 <normal_charRefNumber+0x150>
    47f8:	b	48a0 <normal_charRefNumber+0x150>
    47fc:	b	48a0 <normal_charRefNumber+0x150>
    4800:	b	48a0 <normal_charRefNumber+0x150>
    4804:	b	48a0 <normal_charRefNumber+0x150>
    4808:	b	48a0 <normal_charRefNumber+0x150>
    480c:	b	48a0 <normal_charRefNumber+0x150>
    4810:	b	48a0 <normal_charRefNumber+0x150>
    4814:	b	48a0 <normal_charRefNumber+0x150>
    4818:	b	48a0 <normal_charRefNumber+0x150>
    481c:	b	48a0 <normal_charRefNumber+0x150>
    4820:	b	48a0 <normal_charRefNumber+0x150>
    4824:	b	48a0 <normal_charRefNumber+0x150>
    4828:	b	48a0 <normal_charRefNumber+0x150>
    482c:	b	48a0 <normal_charRefNumber+0x150>
    4830:	b	48a0 <normal_charRefNumber+0x150>
    4834:	b	48a0 <normal_charRefNumber+0x150>
    4838:	b	48a0 <normal_charRefNumber+0x150>
    483c:	b	48a0 <normal_charRefNumber+0x150>
    4840:	b	48a0 <normal_charRefNumber+0x150>
    4844:	b	48a0 <normal_charRefNumber+0x150>
    4848:	b	48a0 <normal_charRefNumber+0x150>
    484c:	b	48a0 <normal_charRefNumber+0x150>
    4850:	b	48a0 <normal_charRefNumber+0x150>
    4854:	b	48a0 <normal_charRefNumber+0x150>
    4858:	b	48a0 <normal_charRefNumber+0x150>
    485c:	b	4894 <normal_charRefNumber+0x144>
    4860:	b	4894 <normal_charRefNumber+0x144>
    4864:	b	4894 <normal_charRefNumber+0x144>
    4868:	b	4894 <normal_charRefNumber+0x144>
    486c:	b	4894 <normal_charRefNumber+0x144>
    4870:	b	4894 <normal_charRefNumber+0x144>
    4874:	lsl	r2, r0, #4
    4878:	sub	ip, r1, #48	; 0x30
    487c:	orr	r0, r2, ip
    4880:	b	48a0 <normal_charRefNumber+0x150>
    4884:	lsl	r2, r0, #4
    4888:	add	ip, r2, r1
    488c:	sub	r0, ip, #55	; 0x37
    4890:	b	48a0 <normal_charRefNumber+0x150>
    4894:	lsl	r2, r0, #4
    4898:	add	r2, r2, r1
    489c:	sub	r0, r2, #87	; 0x57
    48a0:	cmp	r0, #1114112	; 0x110000
    48a4:	blt	48b0 <normal_charRefNumber+0x160>
    48a8:	mvn	r0, #0
    48ac:	b	48e0 <normal_charRefNumber+0x190>
    48b0:	add	r3, r3, #1
    48b4:	b	4778 <normal_charRefNumber+0x28>
    48b8:	ldrb	r1, [r2]
    48bc:	cmp	r1, #59	; 0x3b
    48c0:	beq	48f4 <normal_charRefNumber+0x1a4>
    48c4:	lsl	r3, r0, #3
    48c8:	add	ip, r3, r0, lsl #1
    48cc:	add	r3, ip, r1
    48d0:	sub	r0, r3, #48	; 0x30
    48d4:	cmp	r0, #1114112	; 0x110000
    48d8:	blt	48ec <normal_charRefNumber+0x19c>
    48dc:	mvn	r0, #0
    48e0:	ldr	lr, [sp, #4]
    48e4:	add	sp, sp, #8
    48e8:	bx	lr
    48ec:	add	r2, r2, #1
    48f0:	b	48b8 <normal_charRefNumber+0x168>
    48f4:	ldr	lr, [sp, #4]
    48f8:	add	sp, sp, #8
    48fc:	b	105e8 <checkCharRefNumber>

00004900 <normal_predefinedEntityName>:
    4900:	mov	ip, sp
    4904:	sub	sp, sp, #8
    4908:	str	ip, [sp]
    490c:	str	lr, [sp, #4]
    4910:	sub	r2, r2, r1
    4914:	cmp	r2, #2
    4918:	beq	49e4 <normal_predefinedEntityName+0xe4>
    491c:	cmp	r2, #3
    4920:	beq	49b0 <normal_predefinedEntityName+0xb0>
    4924:	cmp	r2, #4
    4928:	bne	4a14 <normal_predefinedEntityName+0x114>
    492c:	ldrb	r2, [r1]
    4930:	cmp	r2, #97	; 0x61
    4934:	beq	4978 <normal_predefinedEntityName+0x78>
    4938:	cmp	r2, #113	; 0x71
    493c:	bne	4a14 <normal_predefinedEntityName+0x114>
    4940:	add	r2, r1, #1
    4944:	ldrb	r3, [r2]
    4948:	cmp	r3, #117	; 0x75
    494c:	bne	4a14 <normal_predefinedEntityName+0x114>
    4950:	add	r1, r2, #1
    4954:	ldrb	r3, [r1]
    4958:	cmp	r3, #111	; 0x6f
    495c:	bne	4a14 <normal_predefinedEntityName+0x114>
    4960:	add	r0, r1, #1
    4964:	ldrb	r0, [r0]
    4968:	cmp	r0, #116	; 0x74
    496c:	bne	4a14 <normal_predefinedEntityName+0x114>
    4970:	mov	r0, #34	; 0x22
    4974:	b	4a18 <normal_predefinedEntityName+0x118>
    4978:	add	r1, r1, #1
    497c:	ldrb	r0, [r1]
    4980:	cmp	r0, #112	; 0x70
    4984:	bne	4a14 <normal_predefinedEntityName+0x114>
    4988:	add	ip, r1, #1
    498c:	ldrb	r1, [ip]
    4990:	cmp	r1, #111	; 0x6f
    4994:	bne	4a14 <normal_predefinedEntityName+0x114>
    4998:	add	r0, ip, #1
    499c:	ldrb	r0, [r0]
    49a0:	cmp	r0, #115	; 0x73
    49a4:	bne	4a14 <normal_predefinedEntityName+0x114>
    49a8:	mov	r0, #39	; 0x27
    49ac:	b	4a18 <normal_predefinedEntityName+0x118>
    49b0:	ldrb	r3, [r1]
    49b4:	cmp	r3, #97	; 0x61
    49b8:	bne	4a14 <normal_predefinedEntityName+0x114>
    49bc:	add	r0, r1, #1
    49c0:	ldrb	ip, [r0]
    49c4:	cmp	ip, #109	; 0x6d
    49c8:	bne	4a14 <normal_predefinedEntityName+0x114>
    49cc:	add	r0, r0, #1
    49d0:	ldrb	r0, [r0]
    49d4:	cmp	r0, #112	; 0x70
    49d8:	bne	4a14 <normal_predefinedEntityName+0x114>
    49dc:	mov	r0, #38	; 0x26
    49e0:	b	4a18 <normal_predefinedEntityName+0x118>
    49e4:	ldrb	r0, [r1, #1]
    49e8:	cmp	r0, #116	; 0x74
    49ec:	bne	4a14 <normal_predefinedEntityName+0x114>
    49f0:	ldrb	r0, [r1]
    49f4:	cmp	r0, #103	; 0x67
    49f8:	beq	4a0c <normal_predefinedEntityName+0x10c>
    49fc:	cmp	r0, #108	; 0x6c
    4a00:	bne	4a14 <normal_predefinedEntityName+0x114>
    4a04:	mov	r0, #60	; 0x3c
    4a08:	b	4a18 <normal_predefinedEntityName+0x118>
    4a0c:	mov	r0, #62	; 0x3e
    4a10:	b	4a18 <normal_predefinedEntityName+0x118>
    4a14:	mov	r0, #0
    4a18:	ldr	lr, [sp, #4]
    4a1c:	add	sp, sp, #8
    4a20:	bx	lr

00004a24 <normal_sameName>:
    4a24:	mov	ip, sp
    4a28:	sub	sp, sp, #8
    4a2c:	str	ip, [sp]
    4a30:	str	lr, [sp, #4]
    4a34:	ldrb	ip, [r1]
    4a38:	and	r3, ip, #255	; 0xff
    4a3c:	add	r3, r0, r3
    4a40:	ldrb	r3, [r3, #76]	; 0x4c
    4a44:	sub	r3, r3, #5
    4a48:	cmp	r3, #25
    4a4c:	bcs	4b6c <normal_sameName+0x148>
    4a50:	add	pc, pc, r3, lsl #2
    4a54:	nop	{0}
    4a58:	b	4b04 <normal_sameName+0xe0>
    4a5c:	b	4adc <normal_sameName+0xb8>
    4a60:	b	4abc <normal_sameName+0x98>
    4a64:	b	4b6c <normal_sameName+0x148>
    4a68:	b	4b6c <normal_sameName+0x148>
    4a6c:	b	4b6c <normal_sameName+0x148>
    4a70:	b	4b6c <normal_sameName+0x148>
    4a74:	b	4b6c <normal_sameName+0x148>
    4a78:	b	4b6c <normal_sameName+0x148>
    4a7c:	b	4b6c <normal_sameName+0x148>
    4a80:	b	4b6c <normal_sameName+0x148>
    4a84:	b	4b6c <normal_sameName+0x148>
    4a88:	b	4b6c <normal_sameName+0x148>
    4a8c:	b	4b6c <normal_sameName+0x148>
    4a90:	b	4b6c <normal_sameName+0x148>
    4a94:	b	4b6c <normal_sameName+0x148>
    4a98:	b	4b6c <normal_sameName+0x148>
    4a9c:	b	4b44 <normal_sameName+0x120>
    4aa0:	b	4b44 <normal_sameName+0x120>
    4aa4:	b	4b44 <normal_sameName+0x120>
    4aa8:	b	4b44 <normal_sameName+0x120>
    4aac:	b	4b44 <normal_sameName+0x120>
    4ab0:	b	4b44 <normal_sameName+0x120>
    4ab4:	b	4b6c <normal_sameName+0x148>
    4ab8:	b	4b44 <normal_sameName+0x120>
    4abc:	add	r1, r1, #1
    4ac0:	mov	r3, r2
    4ac4:	add	r2, r3, #1
    4ac8:	ldrb	r3, [r3]
    4acc:	cmp	ip, r3
    4ad0:	beq	4adc <normal_sameName+0xb8>
    4ad4:	mov	r0, #0
    4ad8:	b	4c14 <normal_sameName+0x1f0>
    4adc:	mov	ip, r1
    4ae0:	add	r1, ip, #1
    4ae4:	mov	r3, r2
    4ae8:	add	r2, r3, #1
    4aec:	ldrb	ip, [ip]
    4af0:	ldrb	r3, [r3]
    4af4:	cmp	ip, r3
    4af8:	beq	4b04 <normal_sameName+0xe0>
    4afc:	mov	r0, #0
    4b00:	b	4c14 <normal_sameName+0x1f0>
    4b04:	mov	ip, r1
    4b08:	mov	r3, r2
    4b0c:	ldrb	r2, [ip]
    4b10:	ldrb	r1, [r3]
    4b14:	cmp	r2, r1
    4b18:	beq	4b24 <normal_sameName+0x100>
    4b1c:	mov	r0, #0
    4b20:	b	4c14 <normal_sameName+0x1f0>
    4b24:	add	r1, ip, #2
    4b28:	add	r2, r3, #2
    4b2c:	ldrb	ip, [ip, #1]
    4b30:	ldrb	r3, [r3, #1]
    4b34:	cmp	ip, r3
    4b38:	beq	4a34 <normal_sameName+0x10>
    4b3c:	mov	r0, #0
    4b40:	b	4c14 <normal_sameName+0x1f0>
    4b44:	mov	r3, r2
    4b48:	add	r2, r3, #1
    4b4c:	mov	ip, r1
    4b50:	add	r1, ip, #1
    4b54:	ldrb	r3, [r3]
    4b58:	ldrb	ip, [ip]
    4b5c:	cmp	r3, ip
    4b60:	beq	4a34 <normal_sameName+0x10>
    4b64:	mov	r0, #0
    4b68:	b	4c14 <normal_sameName+0x1f0>
    4b6c:	ldrb	r3, [r1]
    4b70:	ldrb	ip, [r2]
    4b74:	cmp	r3, ip
    4b78:	bne	4b84 <normal_sameName+0x160>
    4b7c:	mov	r0, #1
    4b80:	b	4c14 <normal_sameName+0x1f0>
    4b84:	and	ip, ip, #255	; 0xff
    4b88:	add	r0, r0, ip
    4b8c:	ldrb	r0, [r0, #76]	; 0x4c
    4b90:	sub	r0, r0, #5
    4b94:	cmp	r0, #25
    4b98:	bcs	4c10 <normal_sameName+0x1ec>
    4b9c:	add	pc, pc, r0, lsl #2
    4ba0:	nop	{0}
    4ba4:	b	4c08 <normal_sameName+0x1e4>
    4ba8:	b	4c08 <normal_sameName+0x1e4>
    4bac:	b	4c08 <normal_sameName+0x1e4>
    4bb0:	b	4c10 <normal_sameName+0x1ec>
    4bb4:	b	4c10 <normal_sameName+0x1ec>
    4bb8:	b	4c10 <normal_sameName+0x1ec>
    4bbc:	b	4c10 <normal_sameName+0x1ec>
    4bc0:	b	4c10 <normal_sameName+0x1ec>
    4bc4:	b	4c10 <normal_sameName+0x1ec>
    4bc8:	b	4c10 <normal_sameName+0x1ec>
    4bcc:	b	4c10 <normal_sameName+0x1ec>
    4bd0:	b	4c10 <normal_sameName+0x1ec>
    4bd4:	b	4c10 <normal_sameName+0x1ec>
    4bd8:	b	4c10 <normal_sameName+0x1ec>
    4bdc:	b	4c10 <normal_sameName+0x1ec>
    4be0:	b	4c10 <normal_sameName+0x1ec>
    4be4:	b	4c10 <normal_sameName+0x1ec>
    4be8:	b	4c08 <normal_sameName+0x1e4>
    4bec:	b	4c08 <normal_sameName+0x1e4>
    4bf0:	b	4c08 <normal_sameName+0x1e4>
    4bf4:	b	4c08 <normal_sameName+0x1e4>
    4bf8:	b	4c08 <normal_sameName+0x1e4>
    4bfc:	b	4c08 <normal_sameName+0x1e4>
    4c00:	b	4c10 <normal_sameName+0x1ec>
    4c04:	b	4c08 <normal_sameName+0x1e4>
    4c08:	mov	r0, #0
    4c0c:	b	4c14 <normal_sameName+0x1f0>
    4c10:	mov	r0, #1
    4c14:	ldr	lr, [sp, #4]
    4c18:	add	sp, sp, #8
    4c1c:	bx	lr

00004c20 <normal_nameMatchesAscii>:
    4c20:	mov	ip, sp
    4c24:	sub	sp, sp, #8
    4c28:	str	ip, [sp]
    4c2c:	str	lr, [sp, #4]
    4c30:	ldrb	r0, [r3]
    4c34:	cmp	r0, #0
    4c38:	beq	4c6c <normal_nameMatchesAscii+0x4c>
    4c3c:	cmp	r1, r2
    4c40:	bne	4c4c <normal_nameMatchesAscii+0x2c>
    4c44:	mov	r0, #0
    4c48:	b	4c78 <normal_nameMatchesAscii+0x58>
    4c4c:	ldrb	ip, [r1]
    4c50:	cmp	ip, r0
    4c54:	beq	4c60 <normal_nameMatchesAscii+0x40>
    4c58:	mov	r0, #0
    4c5c:	b	4c78 <normal_nameMatchesAscii+0x58>
    4c60:	add	r1, r1, #1
    4c64:	add	r3, r3, #1
    4c68:	b	4c30 <normal_nameMatchesAscii+0x10>
    4c6c:	cmp	r1, r2
    4c70:	moveq	r0, #1
    4c74:	movne	r0, #0
    4c78:	ldr	lr, [sp, #4]
    4c7c:	add	sp, sp, #8
    4c80:	bx	lr

00004c84 <normal_nameLength>:
    4c84:	mov	ip, sp
    4c88:	sub	sp, sp, #8
    4c8c:	str	ip, [sp]
    4c90:	str	lr, [sp, #4]
    4c94:	mov	r2, r1
    4c98:	ldrb	r3, [r1]
    4c9c:	and	ip, r3, #255	; 0xff
    4ca0:	add	r3, r0, ip
    4ca4:	ldrb	r3, [r3, #76]	; 0x4c
    4ca8:	sub	r3, r3, #5
    4cac:	cmp	r3, #25
    4cb0:	bcs	4d40 <normal_nameLength+0xbc>
    4cb4:	add	pc, pc, r3, lsl #2
    4cb8:	nop	{0}
    4cbc:	b	4d20 <normal_nameLength+0x9c>
    4cc0:	b	4d28 <normal_nameLength+0xa4>
    4cc4:	b	4d30 <normal_nameLength+0xac>
    4cc8:	b	4d40 <normal_nameLength+0xbc>
    4ccc:	b	4d40 <normal_nameLength+0xbc>
    4cd0:	b	4d40 <normal_nameLength+0xbc>
    4cd4:	b	4d40 <normal_nameLength+0xbc>
    4cd8:	b	4d40 <normal_nameLength+0xbc>
    4cdc:	b	4d40 <normal_nameLength+0xbc>
    4ce0:	b	4d40 <normal_nameLength+0xbc>
    4ce4:	b	4d40 <normal_nameLength+0xbc>
    4ce8:	b	4d40 <normal_nameLength+0xbc>
    4cec:	b	4d40 <normal_nameLength+0xbc>
    4cf0:	b	4d40 <normal_nameLength+0xbc>
    4cf4:	b	4d40 <normal_nameLength+0xbc>
    4cf8:	b	4d40 <normal_nameLength+0xbc>
    4cfc:	b	4d40 <normal_nameLength+0xbc>
    4d00:	b	4d38 <normal_nameLength+0xb4>
    4d04:	b	4d38 <normal_nameLength+0xb4>
    4d08:	b	4d38 <normal_nameLength+0xb4>
    4d0c:	b	4d38 <normal_nameLength+0xb4>
    4d10:	b	4d38 <normal_nameLength+0xb4>
    4d14:	b	4d38 <normal_nameLength+0xb4>
    4d18:	b	4d40 <normal_nameLength+0xbc>
    4d1c:	b	4d38 <normal_nameLength+0xb4>
    4d20:	add	r1, r1, #2
    4d24:	b	4c98 <normal_nameLength+0x14>
    4d28:	add	r1, r1, #3
    4d2c:	b	4c98 <normal_nameLength+0x14>
    4d30:	add	r1, r1, #4
    4d34:	b	4c98 <normal_nameLength+0x14>
    4d38:	add	r1, r1, #1
    4d3c:	b	4c98 <normal_nameLength+0x14>
    4d40:	sub	r0, r1, r2
    4d44:	ldr	lr, [sp, #4]
    4d48:	add	sp, sp, #8
    4d4c:	bx	lr

00004d50 <normal_skipS>:
    4d50:	mov	ip, sp
    4d54:	sub	sp, sp, #8
    4d58:	str	ip, [sp]
    4d5c:	str	lr, [sp, #4]
    4d60:	mov	r2, r1
    4d64:	mov	r1, r0
    4d68:	mov	r0, r2
    4d6c:	ldrb	r2, [r0]
    4d70:	and	r2, r2, #255	; 0xff
    4d74:	add	r3, r1, r2
    4d78:	ldrb	ip, [r3, #76]	; 0x4c
    4d7c:	cmp	ip, #9
    4d80:	beq	4da0 <normal_skipS+0x50>
    4d84:	cmp	ip, #10
    4d88:	beq	4da0 <normal_skipS+0x50>
    4d8c:	cmp	ip, #21
    4d90:	beq	4da0 <normal_skipS+0x50>
    4d94:	ldr	lr, [sp, #4]
    4d98:	add	sp, sp, #8
    4d9c:	bx	lr
    4da0:	add	r0, r0, #1
    4da4:	b	4d6c <normal_skipS+0x1c>

00004da8 <normal_updatePosition>:
    4da8:	mov	ip, sp
    4dac:	sub	sp, sp, #24
    4db0:	str	ip, [sp]
    4db4:	str	lr, [sp, #4]
    4db8:	str	r4, [sp, #8]
    4dbc:	str	r5, [sp, #12]
    4dc0:	str	r6, [sp, #16]
    4dc4:	cmp	r1, r2
    4dc8:	bcs	4ef8 <normal_updatePosition+0x150>
    4dcc:	ldrb	ip, [r1]
    4dd0:	and	ip, ip, #255	; 0xff
    4dd4:	add	ip, r0, ip
    4dd8:	ldrb	ip, [ip, #76]	; 0x4c
    4ddc:	cmp	ip, #7
    4de0:	bcs	4e04 <normal_updatePosition+0x5c>
    4de4:	cmp	ip, #5
    4de8:	beq	4dfc <normal_updatePosition+0x54>
    4dec:	cmp	ip, #6
    4df0:	bne	4e54 <normal_updatePosition+0xac>
    4df4:	add	r1, r1, #3
    4df8:	b	4ed4 <normal_updatePosition+0x12c>
    4dfc:	add	r1, r1, #2
    4e00:	b	4ed4 <normal_updatePosition+0x12c>
    4e04:	cmp	ip, #7
    4e08:	beq	4ed0 <normal_updatePosition+0x128>
    4e0c:	cmp	ip, #9
    4e10:	beq	4e5c <normal_updatePosition+0xb4>
    4e14:	cmp	ip, #10
    4e18:	bne	4e54 <normal_updatePosition+0xac>
    4e1c:	mvn	r4, #0
    4e20:	mvn	ip, #0
    4e24:	str	ip, [r3, #8]
    4e28:	str	r4, [r3, #12]
    4e2c:	ldr	r6, [r3]
    4e30:	ldr	r5, [r3, #4]
    4e34:	mov	r4, #0
    4e38:	mov	ip, #1
    4e3c:	adds	ip, r6, ip
    4e40:	adc	r4, r5, r4
    4e44:	str	ip, [r3]
    4e48:	str	r4, [r3, #4]
    4e4c:	add	r1, r1, #1
    4e50:	b	4ed4 <normal_updatePosition+0x12c>
    4e54:	add	r1, r1, #1
    4e58:	b	4ed4 <normal_updatePosition+0x12c>
    4e5c:	ldr	r6, [r3]
    4e60:	ldr	r5, [r3, #4]
    4e64:	mov	r4, #0
    4e68:	mov	ip, #1
    4e6c:	adds	ip, r6, ip
    4e70:	adc	r4, r5, r4
    4e74:	str	ip, [r3]
    4e78:	str	r4, [r3, #4]
    4e7c:	add	r4, r1, #1
    4e80:	cmp	r4, r2
    4e84:	beq	4ea8 <normal_updatePosition+0x100>
    4e88:	ldrb	ip, [r4]
    4e8c:	and	ip, ip, #255	; 0xff
    4e90:	add	r1, r0, ip
    4e94:	ldrb	ip, [r1, #76]	; 0x4c
    4e98:	cmp	ip, #10
    4e9c:	moveq	r1, #1
    4ea0:	movne	r1, #0
    4ea4:	b	4eac <normal_updatePosition+0x104>
    4ea8:	mov	r1, #0
    4eac:	add	ip, r4, #1
    4eb0:	cmp	r1, #0
    4eb4:	movne	r1, ip
    4eb8:	moveq	r1, r4
    4ebc:	mvn	r4, #0
    4ec0:	mvn	ip, #0
    4ec4:	str	ip, [r3, #8]
    4ec8:	str	r4, [r3, #12]
    4ecc:	b	4ed4 <normal_updatePosition+0x12c>
    4ed0:	add	r1, r1, #4
    4ed4:	ldr	r6, [r3, #8]
    4ed8:	ldr	r5, [r3, #12]
    4edc:	mov	r4, #0
    4ee0:	mov	ip, #1
    4ee4:	adds	ip, r6, ip
    4ee8:	adc	r4, r5, r4
    4eec:	str	ip, [r3, #8]
    4ef0:	str	r4, [r3, #12]
    4ef4:	b	4dc4 <normal_updatePosition+0x1c>
    4ef8:	ldr	r4, [sp, #8]
    4efc:	ldr	r5, [sp, #12]
    4f00:	ldr	r6, [sp, #16]
    4f04:	ldr	lr, [sp, #4]
    4f08:	add	sp, sp, #24
    4f0c:	bx	lr

00004f10 <utf8_toUtf8>:
    4f10:	mov	ip, sp
    4f14:	sub	sp, sp, #16
    4f18:	str	ip, [sp]
    4f1c:	str	lr, [sp, #4]
    4f20:	str	r4, [sp, #8]
    4f24:	str	r5, [sp, #12]
    4f28:	ldr	r5, [ip]
    4f2c:	ldr	ip, [r1]
    4f30:	sub	r4, r2, ip
    4f34:	ldr	r0, [r3]
    4f38:	sub	r0, r5, r0
    4f3c:	cmp	r4, r0
    4f40:	ble	4f70 <utf8_toUtf8+0x60>
    4f44:	add	r2, ip, r0
    4f48:	ldr	ip, [r1]
    4f4c:	cmp	r2, ip
    4f50:	bls	4f70 <utf8_toUtf8+0x60>
    4f54:	sub	lr, r2, #4096	; 0x1000
    4f58:	ldrb	ip, [lr, #4095]	; 0xfff
    4f5c:	and	ip, ip, #192	; 0xc0
    4f60:	cmp	ip, #128	; 0x80
    4f64:	bne	4f70 <utf8_toUtf8+0x60>
    4f68:	sub	r2, r2, #1
    4f6c:	b	4f48 <utf8_toUtf8+0x38>
    4f70:	ldr	r4, [r3]
    4f74:	ldr	r0, [r1]
    4f78:	cmp	r0, r2
    4f7c:	beq	4f94 <utf8_toUtf8+0x84>
    4f80:	ldrb	ip, [r0]
    4f84:	strb	ip, [r4]
    4f88:	add	r0, r0, #1
    4f8c:	add	r4, r4, #1
    4f90:	b	4f78 <utf8_toUtf8+0x68>
    4f94:	str	r0, [r1]
    4f98:	str	r4, [r3]
    4f9c:	ldr	r4, [sp, #8]
    4fa0:	ldr	r5, [sp, #12]
    4fa4:	ldr	lr, [sp, #4]
    4fa8:	add	sp, sp, #16
    4fac:	bx	lr

00004fb0 <utf8_toUtf16>:
    4fb0:	mov	ip, sp
    4fb4:	sub	sp, sp, #32
    4fb8:	str	ip, [sp]
    4fbc:	str	lr, [sp, #4]
    4fc0:	str	r4, [sp, #8]
    4fc4:	str	r5, [sp, #12]
    4fc8:	str	r6, [sp, #16]
    4fcc:	str	r7, [sp, #20]
    4fd0:	str	r8, [sp, #24]
    4fd4:	ldr	r5, [ip]
    4fd8:	ldr	r4, [r3]
    4fdc:	ldr	r6, [r1]
    4fe0:	cmp	r4, r5
    4fe4:	movne	ip, #1
    4fe8:	moveq	ip, #0
    4fec:	mov	r7, #0
    4ff0:	cmp	r6, r2
    4ff4:	movne	ip, ip
    4ff8:	moveq	ip, r7
    4ffc:	cmp	ip, #0
    5000:	beq	50fc <utf8_toUtf16+0x14c>
    5004:	ldrb	ip, [r6]
    5008:	and	r7, ip, #255	; 0xff
    500c:	add	r7, r0, r7
    5010:	ldrb	r7, [r7, #76]	; 0x4c
    5014:	cmp	r7, #5
    5018:	beq	50d8 <utf8_toUtf16+0x128>
    501c:	cmp	r7, #6
    5020:	beq	50a8 <utf8_toUtf16+0xf8>
    5024:	cmp	r7, #7
    5028:	bne	5094 <utf8_toUtf16+0xe4>
    502c:	add	r7, r4, #2
    5030:	cmp	r7, r5
    5034:	beq	50fc <utf8_toUtf16+0x14c>
    5038:	ldrb	r7, [r6, #1]
    503c:	and	r7, r7, #63	; 0x3f
    5040:	lsl	r7, r7, #12
    5044:	and	ip, ip, #7
    5048:	orr	r7, r7, ip, lsl #18
    504c:	ldrb	ip, [r6, #2]
    5050:	and	ip, ip, #63	; 0x3f
    5054:	orr	r7, r7, ip, lsl #6
    5058:	ldrb	ip, [r6, #3]
    505c:	and	ip, ip, #63	; 0x3f
    5060:	orr	ip, r7, ip
    5064:	sub	r7, ip, #65536	; 0x10000
    5068:	lsr	ip, r7, #10
    506c:	orr	ip, ip, #55296	; 0xd800
    5070:	strh	ip, [r4]
    5074:	bic	ip, r7, #261120	; 0x3fc00
    5078:	bic	ip, ip, #66846720	; 0x3fc0000
    507c:	bic	ip, ip, #-67108864	; 0xfc000000
    5080:	orr	ip, ip, #56320	; 0xdc00
    5084:	strh	ip, [r4, #2]
    5088:	add	r4, r4, #4
    508c:	add	r6, r6, #4
    5090:	b	4fe0 <utf8_toUtf16+0x30>
    5094:	mov	r7, r4
    5098:	add	r4, r7, #2
    509c:	add	r6, r6, #1
    50a0:	strh	ip, [r7]
    50a4:	b	4fe0 <utf8_toUtf16+0x30>
    50a8:	mov	r7, r4
    50ac:	add	r4, r7, #2
    50b0:	ldrb	r8, [r6, #1]
    50b4:	and	r8, r8, #63	; 0x3f
    50b8:	lsl	r8, r8, #6
    50bc:	orr	r8, r8, ip, lsl #12
    50c0:	ldrb	ip, [r6, #2]
    50c4:	and	ip, ip, #63	; 0x3f
    50c8:	orr	ip, r8, ip
    50cc:	strh	ip, [r7]
    50d0:	add	r6, r6, #3
    50d4:	b	4fe0 <utf8_toUtf16+0x30>
    50d8:	mov	r7, r4
    50dc:	add	r4, r7, #2
    50e0:	ldrb	r8, [r6, #1]
    50e4:	and	r8, r8, #63	; 0x3f
    50e8:	and	ip, ip, #31
    50ec:	orr	ip, r8, ip, lsl #6
    50f0:	strh	ip, [r7]
    50f4:	add	r6, r6, #2
    50f8:	b	4fe0 <utf8_toUtf16+0x30>
    50fc:	str	r6, [r1]
    5100:	str	r4, [r3]
    5104:	ldr	r4, [sp, #8]
    5108:	ldr	r5, [sp, #12]
    510c:	ldr	r6, [sp, #16]
    5110:	ldr	r7, [sp, #20]
    5114:	ldr	r8, [sp, #24]
    5118:	ldr	lr, [sp, #4]
    511c:	add	sp, sp, #32
    5120:	bx	lr

00005124 <latin1_toUtf8>:
    5124:	mov	ip, sp
    5128:	sub	sp, sp, #24
    512c:	str	ip, [sp]
    5130:	str	lr, [sp, #4]
    5134:	str	r4, [sp, #8]
    5138:	str	r5, [sp, #12]
    513c:	str	r6, [sp, #16]
    5140:	ldr	r4, [ip]
    5144:	ldr	ip, [r1]
    5148:	cmp	ip, r2
    514c:	beq	51dc <latin1_toUtf8+0xb8>
    5150:	ldrb	r5, [ip]
    5154:	and	r0, r5, #255	; 0xff
    5158:	and	ip, r5, #128	; 0x80
    515c:	cmp	ip, #0
    5160:	beq	51b0 <latin1_toUtf8+0x8c>
    5164:	ldr	ip, [r3]
    5168:	sub	r6, r4, ip
    516c:	cmp	r6, #2
    5170:	blt	51dc <latin1_toUtf8+0xb8>
    5174:	add	r6, ip, #1
    5178:	str	r6, [r3]
    517c:	asr	r0, r0, #6
    5180:	orr	r0, r0, #192	; 0xc0
    5184:	strb	r0, [ip]
    5188:	ldr	r0, [r3]
    518c:	add	ip, r0, #1
    5190:	str	ip, [r3]
    5194:	and	ip, r5, #63	; 0x3f
    5198:	orr	ip, ip, #128	; 0x80
    519c:	strb	ip, [r0]
    51a0:	ldr	ip, [r1]
    51a4:	add	ip, ip, #1
    51a8:	str	ip, [r1]
    51ac:	b	5144 <latin1_toUtf8+0x20>
    51b0:	ldr	ip, [r3]
    51b4:	cmp	ip, r4
    51b8:	beq	51dc <latin1_toUtf8+0xb8>
    51bc:	add	r0, ip, #1
    51c0:	str	r0, [r3]
    51c4:	ldr	r0, [r1]
    51c8:	add	r5, r0, #1
    51cc:	str	r5, [r1]
    51d0:	ldrb	r0, [r0]
    51d4:	strb	r0, [ip]
    51d8:	b	5144 <latin1_toUtf8+0x20>
    51dc:	ldr	r4, [sp, #8]
    51e0:	ldr	r5, [sp, #12]
    51e4:	ldr	r6, [sp, #16]
    51e8:	ldr	lr, [sp, #4]
    51ec:	add	sp, sp, #24
    51f0:	bx	lr

000051f4 <latin1_toUtf16>:
    51f4:	mov	ip, sp
    51f8:	sub	sp, sp, #16
    51fc:	str	ip, [sp]
    5200:	str	lr, [sp, #4]
    5204:	str	r4, [sp, #8]
    5208:	str	r5, [sp, #12]
    520c:	ldr	r4, [ip]
    5210:	ldr	r0, [r1]
    5214:	cmp	r0, r2
    5218:	beq	524c <latin1_toUtf16+0x58>
    521c:	ldr	r0, [r3]
    5220:	cmp	r0, r4
    5224:	beq	524c <latin1_toUtf16+0x58>
    5228:	add	ip, r0, #2
    522c:	str	ip, [r3]
    5230:	ldr	r5, [r1]
    5234:	add	ip, r5, #1
    5238:	str	ip, [r1]
    523c:	ldrb	ip, [r5]
    5240:	and	ip, ip, #255	; 0xff
    5244:	strh	ip, [r0]
    5248:	b	5210 <latin1_toUtf16+0x1c>
    524c:	ldr	r4, [sp, #8]
    5250:	ldr	r5, [sp, #12]
    5254:	ldr	lr, [sp, #4]
    5258:	add	sp, sp, #16
    525c:	bx	lr

00005260 <ascii_toUtf8>:
    5260:	mov	ip, sp
    5264:	sub	sp, sp, #16
    5268:	str	ip, [sp]
    526c:	str	lr, [sp, #4]
    5270:	str	r4, [sp, #8]
    5274:	str	r5, [sp, #12]
    5278:	ldr	r4, [ip]
    527c:	ldr	ip, [r1]
    5280:	cmp	ip, r2
    5284:	beq	52b4 <ascii_toUtf8+0x54>
    5288:	ldr	r0, [r3]
    528c:	cmp	r0, r4
    5290:	beq	52b4 <ascii_toUtf8+0x54>
    5294:	add	ip, r0, #1
    5298:	str	ip, [r3]
    529c:	ldr	r5, [r1]
    52a0:	add	ip, r5, #1
    52a4:	str	ip, [r1]
    52a8:	ldrb	ip, [r5]
    52ac:	strb	ip, [r0]
    52b0:	b	527c <ascii_toUtf8+0x1c>
    52b4:	ldr	r4, [sp, #8]
    52b8:	ldr	r5, [sp, #12]
    52bc:	ldr	lr, [sp, #4]
    52c0:	add	sp, sp, #16
    52c4:	bx	lr

000052c8 <unicode_byte_type>:
    52c8:	mov	ip, sp
    52cc:	sub	sp, sp, #8
    52d0:	str	ip, [sp]
    52d4:	str	lr, [sp, #4]
    52d8:	and	r2, r0, #255	; 0xff
    52dc:	cmp	r2, #220	; 0xdc
    52e0:	bcs	5304 <unicode_byte_type+0x3c>
    52e4:	cmp	r2, #218	; 0xda
    52e8:	bcs	52fc <unicode_byte_type+0x34>
    52ec:	cmp	r2, #216	; 0xd8
    52f0:	beq	52fc <unicode_byte_type+0x34>
    52f4:	cmp	r2, #217	; 0xd9
    52f8:	bne	5340 <unicode_byte_type+0x78>
    52fc:	mov	r0, #7
    5300:	b	534c <unicode_byte_type+0x84>
    5304:	cmp	r2, #222	; 0xde
    5308:	bcc	5348 <unicode_byte_type+0x80>
    530c:	cmp	r2, #222	; 0xde
    5310:	beq	5348 <unicode_byte_type+0x80>
    5314:	cmp	r2, #223	; 0xdf
    5318:	beq	5348 <unicode_byte_type+0x80>
    531c:	cmp	r2, #255	; 0xff
    5320:	bne	5340 <unicode_byte_type+0x78>
    5324:	and	r0, r1, #255	; 0xff
    5328:	cmp	r0, #254	; 0xfe
    532c:	beq	5338 <unicode_byte_type+0x70>
    5330:	cmp	r0, #255	; 0xff
    5334:	bne	5340 <unicode_byte_type+0x78>
    5338:	mov	r0, #0
    533c:	b	534c <unicode_byte_type+0x84>
    5340:	mov	r0, #29
    5344:	b	534c <unicode_byte_type+0x84>
    5348:	mov	r0, #8
    534c:	ldr	lr, [sp, #4]
    5350:	add	sp, sp, #8
    5354:	bx	lr

00005358 <little2_toUtf8>:
    5358:	mov	ip, sp
    535c:	sub	sp, sp, #32
    5360:	str	ip, [sp]
    5364:	str	lr, [sp, #4]
    5368:	str	r4, [sp, #8]
    536c:	str	r5, [sp, #12]
    5370:	str	r6, [sp, #16]
    5374:	str	r7, [sp, #20]
    5378:	str	r8, [sp, #24]
    537c:	str	r9, [sp, #28]
    5380:	ldr	r5, [ip]
    5384:	ldr	r6, [r1]
    5388:	cmp	r6, r2
    538c:	beq	5590 <little2_toUtf8+0x238>
    5390:	ldrb	ip, [r6]
    5394:	and	r4, ip, #255	; 0xff
    5398:	ldrb	ip, [r6, #1]
    539c:	and	ip, ip, #255	; 0xff
    53a0:	cmp	ip, #6
    53a4:	bcs	53e4 <little2_toUtf8+0x8c>
    53a8:	cmp	ip, #3
    53ac:	bcs	5408 <little2_toUtf8+0xb0>
    53b0:	cmp	ip, #0
    53b4:	bne	5408 <little2_toUtf8+0xb0>
    53b8:	cmp	r4, #128	; 0x80
    53bc:	bge	5408 <little2_toUtf8+0xb0>
    53c0:	ldr	ip, [r3]
    53c4:	cmp	ip, r5
    53c8:	bne	53d4 <little2_toUtf8+0x7c>
    53cc:	str	r6, [r1]
    53d0:	b	5594 <little2_toUtf8+0x23c>
    53d4:	add	r0, ip, #1
    53d8:	str	r0, [r3]
    53dc:	strb	r4, [ip]
    53e0:	b	5588 <little2_toUtf8+0x230>
    53e4:	cmp	ip, #217	; 0xd9
    53e8:	bcs	5454 <little2_toUtf8+0xfc>
    53ec:	cmp	ip, #6
    53f0:	beq	5408 <little2_toUtf8+0xb0>
    53f4:	cmp	ip, #7
    53f8:	beq	5408 <little2_toUtf8+0xb0>
    53fc:	cmp	ip, #216	; 0xd8
    5400:	beq	54d4 <little2_toUtf8+0x17c>
    5404:	b	546c <little2_toUtf8+0x114>
    5408:	ldr	r0, [r3]
    540c:	sub	r7, r5, r0
    5410:	cmp	r7, #2
    5414:	bge	5420 <little2_toUtf8+0xc8>
    5418:	str	r6, [r1]
    541c:	b	5594 <little2_toUtf8+0x23c>
    5420:	add	r7, r0, #1
    5424:	str	r7, [r3]
    5428:	lsl	ip, ip, #2
    542c:	orr	ip, ip, r4, asr #6
    5430:	orr	ip, ip, #192	; 0xc0
    5434:	strb	ip, [r0]
    5438:	ldr	r7, [r3]
    543c:	add	ip, r7, #1
    5440:	str	ip, [r3]
    5444:	and	r0, r4, #63	; 0x3f
    5448:	orr	r0, r0, #128	; 0x80
    544c:	strb	r0, [r7]
    5450:	b	5588 <little2_toUtf8+0x230>
    5454:	cmp	ip, #217	; 0xd9
    5458:	beq	54d4 <little2_toUtf8+0x17c>
    545c:	cmp	ip, #218	; 0xda
    5460:	beq	54d4 <little2_toUtf8+0x17c>
    5464:	cmp	ip, #219	; 0xdb
    5468:	beq	54d4 <little2_toUtf8+0x17c>
    546c:	ldr	r0, [r3]
    5470:	sub	r7, r5, r0
    5474:	cmp	r7, #3
    5478:	bge	5484 <little2_toUtf8+0x12c>
    547c:	str	r6, [r1]
    5480:	b	5594 <little2_toUtf8+0x23c>
    5484:	add	r7, r0, #1
    5488:	str	r7, [r3]
    548c:	asr	r7, ip, #4
    5490:	orr	r7, r7, #224	; 0xe0
    5494:	strb	r7, [r0]
    5498:	ldr	r7, [r3]
    549c:	add	r0, r7, #1
    54a0:	str	r0, [r3]
    54a4:	asr	r0, r4, #6
    54a8:	and	ip, ip, #15
    54ac:	orr	r0, r0, ip, lsl #2
    54b0:	orr	ip, r0, #128	; 0x80
    54b4:	strb	ip, [r7]
    54b8:	ldr	r0, [r3]
    54bc:	add	ip, r0, #1
    54c0:	str	ip, [r3]
    54c4:	and	ip, r4, #63	; 0x3f
    54c8:	orr	ip, ip, #128	; 0x80
    54cc:	strb	ip, [r0]
    54d0:	b	5588 <little2_toUtf8+0x230>
    54d4:	ldr	r0, [r3]
    54d8:	sub	r7, r5, r0
    54dc:	cmp	r7, #4
    54e0:	bge	54ec <little2_toUtf8+0x194>
    54e4:	str	r6, [r1]
    54e8:	b	5594 <little2_toUtf8+0x23c>
    54ec:	asr	r7, r4, #6
    54f0:	and	r7, r7, #3
    54f4:	and	ip, ip, #3
    54f8:	orr	ip, r7, ip, lsl #2
    54fc:	add	r7, ip, #1
    5500:	add	ip, r0, #1
    5504:	str	ip, [r3]
    5508:	asr	ip, r7, #2
    550c:	orr	ip, ip, #240	; 0xf0
    5510:	strb	ip, [r0]
    5514:	ldr	r8, [r3]
    5518:	add	ip, r8, #1
    551c:	str	ip, [r3]
    5520:	asr	ip, r4, #2
    5524:	and	ip, ip, #15
    5528:	and	r0, r7, #3
    552c:	orr	ip, ip, r0, lsl #4
    5530:	orr	ip, ip, #128	; 0x80
    5534:	strb	ip, [r8]
    5538:	add	r6, r6, #2
    553c:	ldrb	r7, [r6]
    5540:	and	r9, r7, #255	; 0xff
    5544:	ldr	r8, [r3]
    5548:	add	r0, r8, #1
    554c:	str	r0, [r3]
    5550:	ldrb	ip, [r6, #1]
    5554:	and	ip, ip, #3
    5558:	lsl	ip, ip, #2
    555c:	and	r0, r4, #3
    5560:	orr	r0, ip, r0, lsl #4
    5564:	orr	ip, r0, r9, asr #6
    5568:	orr	ip, ip, #128	; 0x80
    556c:	strb	ip, [r8]
    5570:	ldr	r0, [r3]
    5574:	add	ip, r0, #1
    5578:	str	ip, [r3]
    557c:	and	ip, r7, #63	; 0x3f
    5580:	orr	ip, ip, #128	; 0x80
    5584:	strb	ip, [r0]
    5588:	add	r6, r6, #2
    558c:	b	5388 <little2_toUtf8+0x30>
    5590:	str	r6, [r1]
    5594:	ldr	r4, [sp, #8]
    5598:	ldr	r5, [sp, #12]
    559c:	ldr	r6, [sp, #16]
    55a0:	ldr	r7, [sp, #20]
    55a4:	ldr	r8, [sp, #24]
    55a8:	ldr	r9, [sp, #28]
    55ac:	ldr	lr, [sp, #4]
    55b0:	add	sp, sp, #32
    55b4:	bx	lr

000055b8 <little2_toUtf16>:
    55b8:	mov	ip, sp
    55bc:	sub	sp, sp, #24
    55c0:	str	ip, [sp]
    55c4:	str	lr, [sp, #4]
    55c8:	str	r4, [sp, #8]
    55cc:	str	r5, [sp, #12]
    55d0:	str	r6, [sp, #16]
    55d4:	ldr	r4, [ip]
    55d8:	ldr	ip, [r1]
    55dc:	sub	r0, r2, ip
    55e0:	ldr	ip, [r3]
    55e4:	sub	ip, r4, ip
    55e8:	asr	lr, ip, #31
    55ec:	add	lr, ip, lr, lsr #31
    55f0:	asr	ip, lr, #1
    55f4:	lsl	ip, ip, #1
    55f8:	cmp	r0, ip
    55fc:	ble	561c <little2_toUtf16+0x64>
    5600:	sub	lr, r2, #4096	; 0x1000
    5604:	ldrb	ip, [lr, #4095]	; 0xfff
    5608:	and	ip, ip, #248	; 0xf8
    560c:	cmp	ip, #216	; 0xd8
    5610:	moveq	ip, #1
    5614:	movne	ip, #0
    5618:	b	5620 <little2_toUtf16+0x68>
    561c:	mov	ip, #0
    5620:	sub	r0, r2, #2
    5624:	cmp	ip, #0
    5628:	movne	r5, r0
    562c:	moveq	r5, r2
    5630:	ldr	r0, [r1]
    5634:	cmp	r0, r5
    5638:	beq	5678 <little2_toUtf16+0xc0>
    563c:	ldr	ip, [r3]
    5640:	cmp	ip, r4
    5644:	beq	5678 <little2_toUtf16+0xc0>
    5648:	add	r0, ip, #2
    564c:	str	r0, [r3]
    5650:	ldr	r2, [r1]
    5654:	ldrb	r0, [r2]
    5658:	and	r6, r0, #255	; 0xff
    565c:	ldrb	r0, [r2, #1]
    5660:	orr	r0, r6, r0, lsl #8
    5664:	strh	r0, [ip]
    5668:	ldr	ip, [r1]
    566c:	add	r2, ip, #2
    5670:	str	r2, [r1]
    5674:	b	5630 <little2_toUtf16+0x78>
    5678:	ldr	r4, [sp, #8]
    567c:	ldr	r5, [sp, #12]
    5680:	ldr	r6, [sp, #16]
    5684:	ldr	lr, [sp, #4]
    5688:	add	sp, sp, #24
    568c:	bx	lr

00005690 <big2_toUtf8>:
    5690:	mov	ip, sp
    5694:	sub	sp, sp, #32
    5698:	str	ip, [sp]
    569c:	str	lr, [sp, #4]
    56a0:	str	r4, [sp, #8]
    56a4:	str	r5, [sp, #12]
    56a8:	str	r6, [sp, #16]
    56ac:	str	r7, [sp, #20]
    56b0:	str	r8, [sp, #24]
    56b4:	str	r9, [sp, #28]
    56b8:	ldr	r5, [ip]
    56bc:	ldr	r6, [r1]
    56c0:	cmp	r6, r2
    56c4:	beq	58c8 <big2_toUtf8+0x238>
    56c8:	ldrb	ip, [r6, #1]
    56cc:	and	r4, ip, #255	; 0xff
    56d0:	ldrb	ip, [r6]
    56d4:	and	ip, ip, #255	; 0xff
    56d8:	cmp	ip, #6
    56dc:	bcs	571c <big2_toUtf8+0x8c>
    56e0:	cmp	ip, #3
    56e4:	bcs	5740 <big2_toUtf8+0xb0>
    56e8:	cmp	ip, #0
    56ec:	bne	5740 <big2_toUtf8+0xb0>
    56f0:	cmp	r4, #128	; 0x80
    56f4:	bge	5740 <big2_toUtf8+0xb0>
    56f8:	ldr	ip, [r3]
    56fc:	cmp	ip, r5
    5700:	bne	570c <big2_toUtf8+0x7c>
    5704:	str	r6, [r1]
    5708:	b	58cc <big2_toUtf8+0x23c>
    570c:	add	r0, ip, #1
    5710:	str	r0, [r3]
    5714:	strb	r4, [ip]
    5718:	b	58c0 <big2_toUtf8+0x230>
    571c:	cmp	ip, #217	; 0xd9
    5720:	bcs	578c <big2_toUtf8+0xfc>
    5724:	cmp	ip, #6
    5728:	beq	5740 <big2_toUtf8+0xb0>
    572c:	cmp	ip, #7
    5730:	beq	5740 <big2_toUtf8+0xb0>
    5734:	cmp	ip, #216	; 0xd8
    5738:	beq	580c <big2_toUtf8+0x17c>
    573c:	b	57a4 <big2_toUtf8+0x114>
    5740:	ldr	r0, [r3]
    5744:	sub	r7, r5, r0
    5748:	cmp	r7, #2
    574c:	bge	5758 <big2_toUtf8+0xc8>
    5750:	str	r6, [r1]
    5754:	b	58cc <big2_toUtf8+0x23c>
    5758:	add	r7, r0, #1
    575c:	str	r7, [r3]
    5760:	lsl	ip, ip, #2
    5764:	orr	ip, ip, r4, asr #6
    5768:	orr	ip, ip, #192	; 0xc0
    576c:	strb	ip, [r0]
    5770:	ldr	r7, [r3]
    5774:	add	ip, r7, #1
    5778:	str	ip, [r3]
    577c:	and	r0, r4, #63	; 0x3f
    5780:	orr	r0, r0, #128	; 0x80
    5784:	strb	r0, [r7]
    5788:	b	58c0 <big2_toUtf8+0x230>
    578c:	cmp	ip, #217	; 0xd9
    5790:	beq	580c <big2_toUtf8+0x17c>
    5794:	cmp	ip, #218	; 0xda
    5798:	beq	580c <big2_toUtf8+0x17c>
    579c:	cmp	ip, #219	; 0xdb
    57a0:	beq	580c <big2_toUtf8+0x17c>
    57a4:	ldr	r0, [r3]
    57a8:	sub	r7, r5, r0
    57ac:	cmp	r7, #3
    57b0:	bge	57bc <big2_toUtf8+0x12c>
    57b4:	str	r6, [r1]
    57b8:	b	58cc <big2_toUtf8+0x23c>
    57bc:	add	r7, r0, #1
    57c0:	str	r7, [r3]
    57c4:	asr	r7, ip, #4
    57c8:	orr	r7, r7, #224	; 0xe0
    57cc:	strb	r7, [r0]
    57d0:	ldr	r7, [r3]
    57d4:	add	r0, r7, #1
    57d8:	str	r0, [r3]
    57dc:	asr	r0, r4, #6
    57e0:	and	ip, ip, #15
    57e4:	orr	r0, r0, ip, lsl #2
    57e8:	orr	ip, r0, #128	; 0x80
    57ec:	strb	ip, [r7]
    57f0:	ldr	r0, [r3]
    57f4:	add	ip, r0, #1
    57f8:	str	ip, [r3]
    57fc:	and	ip, r4, #63	; 0x3f
    5800:	orr	ip, ip, #128	; 0x80
    5804:	strb	ip, [r0]
    5808:	b	58c0 <big2_toUtf8+0x230>
    580c:	ldr	r0, [r3]
    5810:	sub	r7, r5, r0
    5814:	cmp	r7, #4
    5818:	bge	5824 <big2_toUtf8+0x194>
    581c:	str	r6, [r1]
    5820:	b	58cc <big2_toUtf8+0x23c>
    5824:	asr	r7, r4, #6
    5828:	and	r7, r7, #3
    582c:	and	ip, ip, #3
    5830:	orr	ip, r7, ip, lsl #2
    5834:	add	r7, ip, #1
    5838:	add	ip, r0, #1
    583c:	str	ip, [r3]
    5840:	asr	ip, r7, #2
    5844:	orr	ip, ip, #240	; 0xf0
    5848:	strb	ip, [r0]
    584c:	ldr	r8, [r3]
    5850:	add	ip, r8, #1
    5854:	str	ip, [r3]
    5858:	asr	ip, r4, #2
    585c:	and	ip, ip, #15
    5860:	and	r0, r7, #3
    5864:	orr	ip, ip, r0, lsl #4
    5868:	orr	ip, ip, #128	; 0x80
    586c:	strb	ip, [r8]
    5870:	add	r6, r6, #2
    5874:	ldrb	r7, [r6, #1]
    5878:	and	r9, r7, #255	; 0xff
    587c:	ldr	r8, [r3]
    5880:	add	r0, r8, #1
    5884:	str	r0, [r3]
    5888:	ldrb	ip, [r6]
    588c:	and	ip, ip, #3
    5890:	lsl	ip, ip, #2
    5894:	and	r0, r4, #3
    5898:	orr	r0, ip, r0, lsl #4
    589c:	orr	ip, r0, r9, asr #6
    58a0:	orr	ip, ip, #128	; 0x80
    58a4:	strb	ip, [r8]
    58a8:	ldr	r0, [r3]
    58ac:	add	ip, r0, #1
    58b0:	str	ip, [r3]
    58b4:	and	ip, r7, #63	; 0x3f
    58b8:	orr	ip, ip, #128	; 0x80
    58bc:	strb	ip, [r0]
    58c0:	add	r6, r6, #2
    58c4:	b	56c0 <big2_toUtf8+0x30>
    58c8:	str	r6, [r1]
    58cc:	ldr	r4, [sp, #8]
    58d0:	ldr	r5, [sp, #12]
    58d4:	ldr	r6, [sp, #16]
    58d8:	ldr	r7, [sp, #20]
    58dc:	ldr	r8, [sp, #24]
    58e0:	ldr	r9, [sp, #28]
    58e4:	ldr	lr, [sp, #4]
    58e8:	add	sp, sp, #32
    58ec:	bx	lr

000058f0 <big2_toUtf16>:
    58f0:	mov	ip, sp
    58f4:	sub	sp, sp, #24
    58f8:	str	ip, [sp]
    58fc:	str	lr, [sp, #4]
    5900:	str	r4, [sp, #8]
    5904:	str	r5, [sp, #12]
    5908:	str	r6, [sp, #16]
    590c:	ldr	r4, [ip]
    5910:	ldr	ip, [r1]
    5914:	sub	r0, r2, ip
    5918:	ldr	ip, [r3]
    591c:	sub	ip, r4, ip
    5920:	asr	lr, ip, #31
    5924:	add	lr, ip, lr, lsr #31
    5928:	asr	ip, lr, #1
    592c:	lsl	ip, ip, #1
    5930:	cmp	r0, ip
    5934:	ble	5954 <big2_toUtf16+0x64>
    5938:	sub	lr, r2, #4096	; 0x1000
    593c:	ldrb	ip, [lr, #4094]	; 0xffe
    5940:	and	ip, ip, #248	; 0xf8
    5944:	cmp	ip, #216	; 0xd8
    5948:	moveq	ip, #1
    594c:	movne	ip, #0
    5950:	b	5958 <big2_toUtf16+0x68>
    5954:	mov	ip, #0
    5958:	sub	r0, r2, #2
    595c:	cmp	ip, #0
    5960:	movne	r5, r0
    5964:	moveq	r5, r2
    5968:	ldr	r0, [r1]
    596c:	cmp	r0, r5
    5970:	beq	59b0 <big2_toUtf16+0xc0>
    5974:	ldr	ip, [r3]
    5978:	cmp	ip, r4
    597c:	beq	59b0 <big2_toUtf16+0xc0>
    5980:	add	r0, ip, #2
    5984:	str	r0, [r3]
    5988:	ldr	r2, [r1]
    598c:	ldrb	r0, [r2, #1]
    5990:	and	r6, r0, #255	; 0xff
    5994:	ldrb	r0, [r2]
    5998:	orr	r0, r6, r0, lsl #8
    599c:	strh	r0, [ip]
    59a0:	ldr	ip, [r1]
    59a4:	add	r2, ip, #2
    59a8:	str	r2, [r1]
    59ac:	b	5968 <big2_toUtf16+0x78>
    59b0:	ldr	r4, [sp, #8]
    59b4:	ldr	r5, [sp, #12]
    59b8:	ldr	r6, [sp, #16]
    59bc:	ldr	lr, [sp, #4]
    59c0:	add	sp, sp, #24
    59c4:	bx	lr

000059c8 <little2_scanComment>:
    59c8:	mov	ip, sp
    59cc:	sub	sp, sp, #24
    59d0:	str	ip, [sp]
    59d4:	str	lr, [sp, #4]
    59d8:	str	r4, [sp, #8]
    59dc:	str	r5, [sp, #12]
    59e0:	str	r6, [sp, #16]
    59e4:	str	r7, [sp, #20]
    59e8:	mov	r5, r3
    59ec:	mov	r4, r2
    59f0:	mov	r7, r0
    59f4:	cmp	r1, r4
    59f8:	beq	5b78 <little2_scanComment+0x1b0>
    59fc:	ldrb	r0, [r1, #1]
    5a00:	cmp	r0, #0
    5a04:	bne	5b6c <little2_scanComment+0x1a4>
    5a08:	ldrb	ip, [r1]
    5a0c:	cmp	ip, #45	; 0x2d
    5a10:	bne	5b6c <little2_scanComment+0x1a4>
    5a14:	add	r6, r1, #2
    5a18:	cmp	r6, r4
    5a1c:	beq	5b78 <little2_scanComment+0x1b0>
    5a20:	ldrb	r1, [r6, #1]
    5a24:	cmp	r1, #0
    5a28:	beq	5a40 <little2_scanComment+0x78>
    5a2c:	and	r0, r1, #255	; 0xff
    5a30:	ldrb	r2, [r6]
    5a34:	and	r1, r2, #255	; 0xff
    5a38:	bl	52c8 <unicode_byte_type>
    5a3c:	b	5a50 <little2_scanComment+0x88>
    5a40:	ldrb	r2, [r6]
    5a44:	and	r0, r2, #255	; 0xff
    5a48:	add	r3, r7, r0
    5a4c:	ldrb	r0, [r3, #76]	; 0x4c
    5a50:	cmp	r0, #6
    5a54:	bcs	5a8c <little2_scanComment+0xc4>
    5a58:	cmp	r0, #0
    5a5c:	beq	5b60 <little2_scanComment+0x198>
    5a60:	cmp	r0, #1
    5a64:	beq	5b60 <little2_scanComment+0x198>
    5a68:	cmp	r0, #5
    5a6c:	bne	5b58 <little2_scanComment+0x190>
    5a70:	sub	r1, r4, r6
    5a74:	cmp	r1, #2
    5a78:	bge	5a84 <little2_scanComment+0xbc>
    5a7c:	mvn	r0, #1
    5a80:	b	5b7c <little2_scanComment+0x1b4>
    5a84:	add	r6, r6, #2
    5a88:	b	5a18 <little2_scanComment+0x50>
    5a8c:	cmp	r0, #8
    5a90:	bcs	5ad4 <little2_scanComment+0x10c>
    5a94:	cmp	r0, #6
    5a98:	bne	5ab8 <little2_scanComment+0xf0>
    5a9c:	sub	r3, r4, r6
    5aa0:	cmp	r3, #3
    5aa4:	bge	5ab0 <little2_scanComment+0xe8>
    5aa8:	mvn	r0, #1
    5aac:	b	5b7c <little2_scanComment+0x1b4>
    5ab0:	add	r6, r6, #3
    5ab4:	b	5a18 <little2_scanComment+0x50>
    5ab8:	sub	r2, r4, r6
    5abc:	cmp	r2, #4
    5ac0:	bge	5acc <little2_scanComment+0x104>
    5ac4:	mvn	r0, #1
    5ac8:	b	5b7c <little2_scanComment+0x1b4>
    5acc:	add	r6, r6, #4
    5ad0:	b	5a18 <little2_scanComment+0x50>
    5ad4:	cmp	r0, #8
    5ad8:	beq	5b60 <little2_scanComment+0x198>
    5adc:	cmp	r0, #27
    5ae0:	bne	5b58 <little2_scanComment+0x190>
    5ae4:	add	r6, r6, #2
    5ae8:	cmp	r6, r4
    5aec:	bne	5af8 <little2_scanComment+0x130>
    5af0:	mvn	r0, #0
    5af4:	b	5b7c <little2_scanComment+0x1b4>
    5af8:	ldrb	r0, [r6, #1]
    5afc:	cmp	r0, #0
    5b00:	bne	5a18 <little2_scanComment+0x50>
    5b04:	ldrb	ip, [r6]
    5b08:	cmp	ip, #45	; 0x2d
    5b0c:	bne	5a18 <little2_scanComment+0x50>
    5b10:	add	r0, r6, #2
    5b14:	cmp	r0, r4
    5b18:	bne	5b24 <little2_scanComment+0x15c>
    5b1c:	mvn	r0, #0
    5b20:	b	5b7c <little2_scanComment+0x1b4>
    5b24:	ldrb	r1, [r6, #3]
    5b28:	cmp	r1, #0
    5b2c:	bne	5b4c <little2_scanComment+0x184>
    5b30:	ldrb	ip, [r6, #2]
    5b34:	cmp	ip, #62	; 0x3e
    5b38:	bne	5b4c <little2_scanComment+0x184>
    5b3c:	add	r2, r6, #4
    5b40:	str	r2, [r5]
    5b44:	mov	r0, #13
    5b48:	b	5b7c <little2_scanComment+0x1b4>
    5b4c:	str	r0, [r5]
    5b50:	mov	r0, #0
    5b54:	b	5b7c <little2_scanComment+0x1b4>
    5b58:	add	r6, r6, #2
    5b5c:	b	5a18 <little2_scanComment+0x50>
    5b60:	str	r6, [r5]
    5b64:	mov	r0, #0
    5b68:	b	5b7c <little2_scanComment+0x1b4>
    5b6c:	str	r1, [r5]
    5b70:	mov	r0, #0
    5b74:	b	5b7c <little2_scanComment+0x1b4>
    5b78:	mvn	r0, #0
    5b7c:	ldr	r4, [sp, #8]
    5b80:	ldr	r5, [sp, #12]
    5b84:	ldr	r6, [sp, #16]
    5b88:	ldr	r7, [sp, #20]
    5b8c:	ldr	lr, [sp, #4]
    5b90:	add	sp, sp, #24
    5b94:	bx	lr

00005b98 <little2_checkPiTarget>:
    5b98:	mov	ip, sp
    5b9c:	sub	sp, sp, #16
    5ba0:	str	ip, [sp]
    5ba4:	str	lr, [sp, #4]
    5ba8:	str	r4, [sp, #8]
    5bac:	mov	r4, #0
    5bb0:	mov	ip, #11
    5bb4:	str	ip, [r3]
    5bb8:	sub	ip, r2, r1
    5bbc:	cmp	ip, #6
    5bc0:	beq	5bcc <little2_checkPiTarget+0x34>
    5bc4:	mov	r0, #1
    5bc8:	b	5c88 <little2_checkPiTarget+0xf0>
    5bcc:	ldrb	r0, [r1, #1]
    5bd0:	cmp	r0, #0
    5bd4:	beq	5be0 <little2_checkPiTarget+0x48>
    5bd8:	mvn	r2, #0
    5bdc:	b	5be4 <little2_checkPiTarget+0x4c>
    5be0:	ldrb	r2, [r1]
    5be4:	cmp	r2, #88	; 0x58
    5be8:	beq	5bfc <little2_checkPiTarget+0x64>
    5bec:	cmp	r2, #120	; 0x78
    5bf0:	beq	5c00 <little2_checkPiTarget+0x68>
    5bf4:	mov	r0, #1
    5bf8:	b	5c88 <little2_checkPiTarget+0xf0>
    5bfc:	mov	r4, #1
    5c00:	add	r2, r1, #2
    5c04:	ldrb	ip, [r2, #1]
    5c08:	cmp	ip, #0
    5c0c:	beq	5c18 <little2_checkPiTarget+0x80>
    5c10:	mvn	r0, #0
    5c14:	b	5c1c <little2_checkPiTarget+0x84>
    5c18:	ldrb	r0, [r2]
    5c1c:	cmp	r0, #77	; 0x4d
    5c20:	beq	5c34 <little2_checkPiTarget+0x9c>
    5c24:	cmp	r0, #109	; 0x6d
    5c28:	beq	5c38 <little2_checkPiTarget+0xa0>
    5c2c:	mov	r0, #1
    5c30:	b	5c88 <little2_checkPiTarget+0xf0>
    5c34:	mov	r4, #1
    5c38:	add	ip, r2, #2
    5c3c:	ldrb	r1, [ip, #1]
    5c40:	cmp	r1, #0
    5c44:	beq	5c50 <little2_checkPiTarget+0xb8>
    5c48:	mvn	r1, #0
    5c4c:	b	5c54 <little2_checkPiTarget+0xbc>
    5c50:	ldrb	r1, [ip]
    5c54:	cmp	r1, #76	; 0x4c
    5c58:	beq	5c84 <little2_checkPiTarget+0xec>
    5c5c:	cmp	r1, #108	; 0x6c
    5c60:	beq	5c6c <little2_checkPiTarget+0xd4>
    5c64:	mov	r0, #1
    5c68:	b	5c88 <little2_checkPiTarget+0xf0>
    5c6c:	cmp	r4, #0
    5c70:	bne	5c84 <little2_checkPiTarget+0xec>
    5c74:	mov	ip, #12
    5c78:	str	ip, [r3]
    5c7c:	mov	r0, #1
    5c80:	b	5c88 <little2_checkPiTarget+0xf0>
    5c84:	mov	r0, #0
    5c88:	ldr	r4, [sp, #8]
    5c8c:	ldr	lr, [sp, #4]
    5c90:	add	sp, sp, #16
    5c94:	bx	lr

00005c98 <little2_scanPi>:
    5c98:	mov	ip, sp
    5c9c:	sub	sp, sp, #40	; 0x28
    5ca0:	str	ip, [sp]
    5ca4:	str	lr, [sp, #4]
    5ca8:	str	r4, [sp, #8]
    5cac:	str	r5, [sp, #12]
    5cb0:	str	r6, [sp, #16]
    5cb4:	str	r7, [sp, #20]
    5cb8:	str	r8, [sp, #24]
    5cbc:	str	r9, [sp, #28]
    5cc0:	mov	r7, r3
    5cc4:	mov	r6, r2
    5cc8:	mov	r4, r1
    5ccc:	mov	r8, r0
    5cd0:	cmp	r4, r6
    5cd4:	bne	5ce0 <little2_scanPi+0x48>
    5cd8:	mvn	r0, #0
    5cdc:	b	613c <little2_scanPi+0x4a4>
    5ce0:	ldrb	r3, [r4, #1]
    5ce4:	cmp	r3, #0
    5ce8:	beq	5d00 <little2_scanPi+0x68>
    5cec:	and	r0, r3, #255	; 0xff
    5cf0:	ldrb	r3, [r4]
    5cf4:	and	r1, r3, #255	; 0xff
    5cf8:	bl	52c8 <unicode_byte_type>
    5cfc:	b	5d10 <little2_scanPi+0x78>
    5d00:	ldrb	r1, [r4]
    5d04:	and	ip, r1, #255	; 0xff
    5d08:	add	r1, r8, ip
    5d0c:	ldrb	r0, [r1, #76]	; 0x4c
    5d10:	cmp	r0, #22
    5d14:	bcs	5d90 <little2_scanPi+0xf8>
    5d18:	cmp	r0, #5
    5d1c:	beq	5d70 <little2_scanPi+0xd8>
    5d20:	cmp	r0, #6
    5d24:	beq	5d50 <little2_scanPi+0xb8>
    5d28:	cmp	r0, #7
    5d2c:	bne	5df4 <little2_scanPi+0x15c>
    5d30:	sub	r3, r6, r4
    5d34:	cmp	r3, #4
    5d38:	bge	5d44 <little2_scanPi+0xac>
    5d3c:	mvn	r0, #1
    5d40:	b	613c <little2_scanPi+0x4a4>
    5d44:	str	r4, [r7]
    5d48:	mov	r0, #0
    5d4c:	b	613c <little2_scanPi+0x4a4>
    5d50:	sub	r0, r6, r4
    5d54:	cmp	r0, #3
    5d58:	bge	5d64 <little2_scanPi+0xcc>
    5d5c:	mvn	r0, #1
    5d60:	b	613c <little2_scanPi+0x4a4>
    5d64:	str	r4, [r7]
    5d68:	mov	r0, #0
    5d6c:	b	613c <little2_scanPi+0x4a4>
    5d70:	sub	r2, r6, r4
    5d74:	cmp	r2, #2
    5d78:	bge	5d84 <little2_scanPi+0xec>
    5d7c:	mvn	r0, #1
    5d80:	b	613c <little2_scanPi+0x4a4>
    5d84:	str	r4, [r7]
    5d88:	mov	r0, #0
    5d8c:	b	613c <little2_scanPi+0x4a4>
    5d90:	cmp	r0, #22
    5d94:	beq	5e00 <little2_scanPi+0x168>
    5d98:	cmp	r0, #24
    5d9c:	beq	5e00 <little2_scanPi+0x168>
    5da0:	cmp	r0, #29
    5da4:	bne	5df4 <little2_scanPi+0x15c>
    5da8:	ldr	r5, [pc, #944]	; 6160 <little2_scanPi+0x4c8>
    5dac:	ldrb	r0, [r4]
    5db0:	and	r2, r0, #255	; 0xff
    5db4:	asr	ip, r2, #5
    5db8:	ldr	r1, [pc, #932]	; 6164 <little2_scanPi+0x4cc>
    5dbc:	ldrb	r3, [r4, #1]
    5dc0:	and	r2, r3, #255	; 0xff
    5dc4:	ldrb	r3, [r1, r2]
    5dc8:	add	r3, ip, r3, lsl #3
    5dcc:	ldr	r2, [r5, r3, lsl #2]
    5dd0:	mov	r1, #1
    5dd4:	and	r3, r0, #31
    5dd8:	lsl	r0, r1, r3
    5ddc:	and	r3, r2, r0
    5de0:	cmp	r3, #0
    5de4:	bne	5e00 <little2_scanPi+0x168>
    5de8:	str	r4, [r7]
    5dec:	mov	r0, #0
    5df0:	b	613c <little2_scanPi+0x4a4>
    5df4:	str	r4, [r7]
    5df8:	mov	r0, #0
    5dfc:	b	613c <little2_scanPi+0x4a4>
    5e00:	add	r5, r4, #2
    5e04:	cmp	r5, r6
    5e08:	beq	6138 <little2_scanPi+0x4a0>
    5e0c:	ldrb	ip, [r5, #1]
    5e10:	cmp	ip, #0
    5e14:	beq	5e2c <little2_scanPi+0x194>
    5e18:	and	r0, ip, #255	; 0xff
    5e1c:	ldrb	r3, [r5]
    5e20:	and	r1, r3, #255	; 0xff
    5e24:	bl	52c8 <unicode_byte_type>
    5e28:	b	5e3c <little2_scanPi+0x1a4>
    5e2c:	ldrb	r2, [r5]
    5e30:	and	ip, r2, #255	; 0xff
    5e34:	add	r2, r8, ip
    5e38:	ldrb	r0, [r2, #76]	; 0x4c
    5e3c:	sub	r0, r0, #5
    5e40:	cmp	r0, #25
    5e44:	bcs	612c <little2_scanPi+0x494>
    5e48:	add	pc, pc, r0, lsl #2
    5e4c:	nop	{0}
    5e50:	b	5f08 <little2_scanPi+0x270>
    5e54:	b	5f28 <little2_scanPi+0x290>
    5e58:	b	5f48 <little2_scanPi+0x2b0>
    5e5c:	b	612c <little2_scanPi+0x494>
    5e60:	b	5f68 <little2_scanPi+0x2d0>
    5e64:	b	5f68 <little2_scanPi+0x2d0>
    5e68:	b	612c <little2_scanPi+0x494>
    5e6c:	b	612c <little2_scanPi+0x494>
    5e70:	b	612c <little2_scanPi+0x494>
    5e74:	b	612c <little2_scanPi+0x494>
    5e78:	b	60c8 <little2_scanPi+0x430>
    5e7c:	b	612c <little2_scanPi+0x494>
    5e80:	b	612c <little2_scanPi+0x494>
    5e84:	b	612c <little2_scanPi+0x494>
    5e88:	b	612c <little2_scanPi+0x494>
    5e8c:	b	612c <little2_scanPi+0x494>
    5e90:	b	5f68 <little2_scanPi+0x2d0>
    5e94:	b	5f00 <little2_scanPi+0x268>
    5e98:	b	612c <little2_scanPi+0x494>
    5e9c:	b	5f00 <little2_scanPi+0x268>
    5ea0:	b	5f00 <little2_scanPi+0x268>
    5ea4:	b	5f00 <little2_scanPi+0x268>
    5ea8:	b	5f00 <little2_scanPi+0x268>
    5eac:	b	612c <little2_scanPi+0x494>
    5eb0:	b	5eb4 <little2_scanPi+0x21c>
    5eb4:	ldr	r9, [pc, #676]	; 6160 <little2_scanPi+0x4c8>
    5eb8:	ldrb	r1, [r5]
    5ebc:	and	r2, r1, #255	; 0xff
    5ec0:	asr	r3, r2, #5
    5ec4:	ldr	ip, [pc, #668]	; 6168 <little2_scanPi+0x4d0>
    5ec8:	ldrb	r0, [r5, #1]
    5ecc:	and	r0, r0, #255	; 0xff
    5ed0:	ldrb	r2, [ip, r0]
    5ed4:	add	r2, r3, r2, lsl #3
    5ed8:	ldr	ip, [r9, r2, lsl #2]
    5edc:	mov	r2, #1
    5ee0:	and	r0, r1, #31
    5ee4:	lsl	r1, r2, r0
    5ee8:	and	r1, ip, r1
    5eec:	cmp	r1, #0
    5ef0:	bne	5f00 <little2_scanPi+0x268>
    5ef4:	str	r5, [r7]
    5ef8:	mov	r0, #0
    5efc:	b	613c <little2_scanPi+0x4a4>
    5f00:	add	r5, r5, #2
    5f04:	b	5e04 <little2_scanPi+0x16c>
    5f08:	sub	r0, r6, r5
    5f0c:	cmp	r0, #2
    5f10:	bge	5f1c <little2_scanPi+0x284>
    5f14:	mvn	r0, #1
    5f18:	b	613c <little2_scanPi+0x4a4>
    5f1c:	str	r5, [r7]
    5f20:	mov	r0, #0
    5f24:	b	613c <little2_scanPi+0x4a4>
    5f28:	sub	r3, r6, r5
    5f2c:	cmp	r3, #3
    5f30:	bge	5f3c <little2_scanPi+0x2a4>
    5f34:	mvn	r0, #1
    5f38:	b	613c <little2_scanPi+0x4a4>
    5f3c:	str	r5, [r7]
    5f40:	mov	r0, #0
    5f44:	b	613c <little2_scanPi+0x4a4>
    5f48:	sub	r0, r6, r5
    5f4c:	cmp	r0, #4
    5f50:	bge	5f5c <little2_scanPi+0x2c4>
    5f54:	mvn	r0, #1
    5f58:	b	613c <little2_scanPi+0x4a4>
    5f5c:	str	r5, [r7]
    5f60:	mov	r0, #0
    5f64:	b	613c <little2_scanPi+0x4a4>
    5f68:	add	r3, sp, #32
    5f6c:	mov	r2, r5
    5f70:	mov	r1, r4
    5f74:	mov	r0, r8
    5f78:	bl	5b98 <little2_checkPiTarget>
    5f7c:	cmp	r0, #0
    5f80:	bne	5f90 <little2_scanPi+0x2f8>
    5f84:	str	r5, [r7]
    5f88:	mov	r0, #0
    5f8c:	b	613c <little2_scanPi+0x4a4>
    5f90:	add	r4, r5, #2
    5f94:	cmp	r4, r6
    5f98:	beq	60c0 <little2_scanPi+0x428>
    5f9c:	ldrb	r2, [r4, #1]
    5fa0:	cmp	r2, #0
    5fa4:	beq	5fbc <little2_scanPi+0x324>
    5fa8:	and	r0, r2, #255	; 0xff
    5fac:	ldrb	ip, [r4]
    5fb0:	and	r1, ip, #255	; 0xff
    5fb4:	bl	52c8 <unicode_byte_type>
    5fb8:	b	5fcc <little2_scanPi+0x334>
    5fbc:	ldrb	r1, [r4]
    5fc0:	and	r0, r1, #255	; 0xff
    5fc4:	add	ip, r8, r0
    5fc8:	ldrb	r0, [ip, #76]	; 0x4c
    5fcc:	cmp	r0, #16
    5fd0:	bcs	60b8 <little2_scanPi+0x420>
    5fd4:	add	pc, pc, r0, lsl #2
    5fd8:	nop	{0}
    5fdc:	b	6070 <little2_scanPi+0x3d8>
    5fe0:	b	6070 <little2_scanPi+0x3d8>
    5fe4:	b	60b8 <little2_scanPi+0x420>
    5fe8:	b	60b8 <little2_scanPi+0x420>
    5fec:	b	60b8 <little2_scanPi+0x420>
    5ff0:	b	601c <little2_scanPi+0x384>
    5ff4:	b	6038 <little2_scanPi+0x3a0>
    5ff8:	b	6054 <little2_scanPi+0x3bc>
    5ffc:	b	6070 <little2_scanPi+0x3d8>
    6000:	b	60b8 <little2_scanPi+0x420>
    6004:	b	60b8 <little2_scanPi+0x420>
    6008:	b	60b8 <little2_scanPi+0x420>
    600c:	b	60b8 <little2_scanPi+0x420>
    6010:	b	60b8 <little2_scanPi+0x420>
    6014:	b	60b8 <little2_scanPi+0x420>
    6018:	b	607c <little2_scanPi+0x3e4>
    601c:	sub	r2, r6, r4
    6020:	cmp	r2, #2
    6024:	bge	6030 <little2_scanPi+0x398>
    6028:	mvn	r0, #1
    602c:	b	613c <little2_scanPi+0x4a4>
    6030:	add	r4, r4, #2
    6034:	b	5f94 <little2_scanPi+0x2fc>
    6038:	sub	r0, r6, r4
    603c:	cmp	r0, #3
    6040:	bge	604c <little2_scanPi+0x3b4>
    6044:	mvn	r0, #1
    6048:	b	613c <little2_scanPi+0x4a4>
    604c:	add	r4, r4, #3
    6050:	b	5f94 <little2_scanPi+0x2fc>
    6054:	sub	ip, r6, r4
    6058:	cmp	ip, #4
    605c:	bge	6068 <little2_scanPi+0x3d0>
    6060:	mvn	r0, #1
    6064:	b	613c <little2_scanPi+0x4a4>
    6068:	add	r4, r4, #4
    606c:	b	5f94 <little2_scanPi+0x2fc>
    6070:	str	r4, [r7]
    6074:	mov	r0, #0
    6078:	b	613c <little2_scanPi+0x4a4>
    607c:	add	r4, r4, #2
    6080:	cmp	r4, r6
    6084:	bne	6090 <little2_scanPi+0x3f8>
    6088:	mvn	r0, #0
    608c:	b	613c <little2_scanPi+0x4a4>
    6090:	ldrb	ip, [r4, #1]
    6094:	cmp	ip, #0
    6098:	bne	5f94 <little2_scanPi+0x2fc>
    609c:	ldrb	ip, [r4]
    60a0:	cmp	ip, #62	; 0x3e
    60a4:	bne	5f94 <little2_scanPi+0x2fc>
    60a8:	add	r0, r4, #2
    60ac:	str	r0, [r7]
    60b0:	ldr	r0, [sp, #32]
    60b4:	b	613c <little2_scanPi+0x4a4>
    60b8:	add	r4, r4, #2
    60bc:	b	5f94 <little2_scanPi+0x2fc>
    60c0:	mvn	r0, #0
    60c4:	b	613c <little2_scanPi+0x4a4>
    60c8:	add	r3, sp, #32
    60cc:	mov	r2, r5
    60d0:	mov	r1, r4
    60d4:	mov	r0, r8
    60d8:	bl	5b98 <little2_checkPiTarget>
    60dc:	cmp	r0, #0
    60e0:	bne	60f0 <little2_scanPi+0x458>
    60e4:	str	r5, [r7]
    60e8:	mov	r0, #0
    60ec:	b	613c <little2_scanPi+0x4a4>
    60f0:	add	r5, r5, #2
    60f4:	cmp	r5, r6
    60f8:	bne	6104 <little2_scanPi+0x46c>
    60fc:	mvn	r0, #0
    6100:	b	613c <little2_scanPi+0x4a4>
    6104:	ldrb	r1, [r5, #1]
    6108:	cmp	r1, #0
    610c:	bne	612c <little2_scanPi+0x494>
    6110:	ldrb	r3, [r5]
    6114:	cmp	r3, #62	; 0x3e
    6118:	bne	612c <little2_scanPi+0x494>
    611c:	add	r0, r5, #2
    6120:	str	r0, [r7]
    6124:	ldr	r0, [sp, #32]
    6128:	b	613c <little2_scanPi+0x4a4>
    612c:	str	r5, [r7]
    6130:	mov	r0, #0
    6134:	b	613c <little2_scanPi+0x4a4>
    6138:	mvn	r0, #0
    613c:	ldr	r4, [sp, #8]
    6140:	ldr	r5, [sp, #12]
    6144:	ldr	r6, [sp, #16]
    6148:	ldr	r7, [sp, #20]
    614c:	ldr	r8, [sp, #24]
    6150:	ldr	r9, [sp, #28]
    6154:	ldr	lr, [sp, #4]
    6158:	add	sp, sp, #40	; 0x28
    615c:	bx	lr
    6160:	.word	0x00000000
    6164:	.word	0x00000500
    6168:	.word	0x00000600

0000616c <little2_cdataSectionTok>:
    616c:	mov	ip, sp
    6170:	sub	sp, sp, #24
    6174:	str	ip, [sp]
    6178:	str	lr, [sp, #4]
    617c:	str	r4, [sp, #8]
    6180:	str	r5, [sp, #12]
    6184:	str	r6, [sp, #16]
    6188:	str	r7, [sp, #20]
    618c:	mov	r5, r3
    6190:	mov	r6, r2
    6194:	mov	r7, r1
    6198:	mov	r4, r0
    619c:	cmp	r7, r6
    61a0:	bne	61ac <little2_cdataSectionTok+0x40>
    61a4:	mvn	r0, #3
    61a8:	b	64b0 <little2_cdataSectionTok+0x344>
    61ac:	sub	r0, r6, r7
    61b0:	and	r3, r0, #1
    61b4:	cmp	r3, #0
    61b8:	beq	61d4 <little2_cdataSectionTok+0x68>
    61bc:	bic	r0, r0, #1
    61c0:	cmp	r0, #0
    61c4:	bne	61d0 <little2_cdataSectionTok+0x64>
    61c8:	mvn	r0, #0
    61cc:	b	64b0 <little2_cdataSectionTok+0x344>
    61d0:	add	r6, r7, r0
    61d4:	ldrb	r1, [r7, #1]
    61d8:	cmp	r1, #0
    61dc:	beq	61f4 <little2_cdataSectionTok+0x88>
    61e0:	and	r0, r1, #255	; 0xff
    61e4:	ldrb	ip, [r7]
    61e8:	and	r1, ip, #255	; 0xff
    61ec:	bl	52c8 <unicode_byte_type>
    61f0:	b	6204 <little2_cdataSectionTok+0x98>
    61f4:	ldrb	r3, [r7]
    61f8:	and	ip, r3, #255	; 0xff
    61fc:	add	r1, r4, ip
    6200:	ldrb	r0, [r1, #76]	; 0x4c
    6204:	cmp	r0, #11
    6208:	bcs	6380 <little2_cdataSectionTok+0x214>
    620c:	add	pc, pc, r0, lsl #2
    6210:	nop	{0}
    6214:	b	6374 <little2_cdataSectionTok+0x208>
    6218:	b	6374 <little2_cdataSectionTok+0x208>
    621c:	b	6380 <little2_cdataSectionTok+0x214>
    6220:	b	6380 <little2_cdataSectionTok+0x214>
    6224:	b	6240 <little2_cdataSectionTok+0xd4>
    6228:	b	6320 <little2_cdataSectionTok+0x1b4>
    622c:	b	633c <little2_cdataSectionTok+0x1d0>
    6230:	b	6358 <little2_cdataSectionTok+0x1ec>
    6234:	b	6374 <little2_cdataSectionTok+0x208>
    6238:	b	62b0 <little2_cdataSectionTok+0x144>
    623c:	b	6310 <little2_cdataSectionTok+0x1a4>
    6240:	add	r7, r7, #2
    6244:	cmp	r7, r6
    6248:	bne	6254 <little2_cdataSectionTok+0xe8>
    624c:	mvn	r0, #0
    6250:	b	64b0 <little2_cdataSectionTok+0x344>
    6254:	ldrb	r3, [r7, #1]
    6258:	cmp	r3, #0
    625c:	bne	6384 <little2_cdataSectionTok+0x218>
    6260:	ldrb	r0, [r7]
    6264:	cmp	r0, #93	; 0x5d
    6268:	bne	6384 <little2_cdataSectionTok+0x218>
    626c:	add	r2, r7, #2
    6270:	cmp	r2, r6
    6274:	bne	6280 <little2_cdataSectionTok+0x114>
    6278:	mvn	r0, #0
    627c:	b	64b0 <little2_cdataSectionTok+0x344>
    6280:	ldrb	r0, [r2, #1]
    6284:	cmp	r0, #0
    6288:	bne	62a8 <little2_cdataSectionTok+0x13c>
    628c:	ldrb	r3, [r2]
    6290:	cmp	r3, #62	; 0x3e
    6294:	bne	62a8 <little2_cdataSectionTok+0x13c>
    6298:	add	r2, r2, #2
    629c:	str	r2, [r5]
    62a0:	mov	r0, #40	; 0x28
    62a4:	b	64b0 <little2_cdataSectionTok+0x344>
    62a8:	sub	r7, r2, #2
    62ac:	b	6384 <little2_cdataSectionTok+0x218>
    62b0:	add	r7, r7, #2
    62b4:	cmp	r7, r6
    62b8:	bne	62c4 <little2_cdataSectionTok+0x158>
    62bc:	mvn	r0, #0
    62c0:	b	64b0 <little2_cdataSectionTok+0x344>
    62c4:	ldrb	r2, [r7, #1]
    62c8:	cmp	r2, #0
    62cc:	beq	62e4 <little2_cdataSectionTok+0x178>
    62d0:	and	r0, r2, #255	; 0xff
    62d4:	ldrb	r3, [r7]
    62d8:	and	r1, r3, #255	; 0xff
    62dc:	bl	52c8 <unicode_byte_type>
    62e0:	b	62f4 <little2_cdataSectionTok+0x188>
    62e4:	ldrb	r1, [r7]
    62e8:	and	ip, r1, #255	; 0xff
    62ec:	add	ip, r4, ip
    62f0:	ldrb	r0, [ip, #76]	; 0x4c
    62f4:	add	ip, r7, #2
    62f8:	cmp	r0, #10
    62fc:	moveq	r2, ip
    6300:	movne	r2, r7
    6304:	str	r2, [r5]
    6308:	mov	r0, #7
    630c:	b	64b0 <little2_cdataSectionTok+0x344>
    6310:	add	r3, r7, #2
    6314:	str	r3, [r5]
    6318:	mov	r0, #7
    631c:	b	64b0 <little2_cdataSectionTok+0x344>
    6320:	sub	r1, r6, r7
    6324:	cmp	r1, #2
    6328:	bge	6334 <little2_cdataSectionTok+0x1c8>
    632c:	mvn	r0, #1
    6330:	b	64b0 <little2_cdataSectionTok+0x344>
    6334:	add	r7, r7, #2
    6338:	b	6384 <little2_cdataSectionTok+0x218>
    633c:	sub	r0, r6, r7
    6340:	cmp	r0, #3
    6344:	bge	6350 <little2_cdataSectionTok+0x1e4>
    6348:	mvn	r0, #1
    634c:	b	64b0 <little2_cdataSectionTok+0x344>
    6350:	add	r7, r7, #3
    6354:	b	6384 <little2_cdataSectionTok+0x218>
    6358:	sub	r3, r6, r7
    635c:	cmp	r3, #4
    6360:	bge	636c <little2_cdataSectionTok+0x200>
    6364:	mvn	r0, #1
    6368:	b	64b0 <little2_cdataSectionTok+0x344>
    636c:	add	r7, r7, #4
    6370:	b	6384 <little2_cdataSectionTok+0x218>
    6374:	str	r7, [r5]
    6378:	mov	r0, #0
    637c:	b	64b0 <little2_cdataSectionTok+0x344>
    6380:	add	r7, r7, #2
    6384:	cmp	r7, r6
    6388:	beq	64a8 <little2_cdataSectionTok+0x33c>
    638c:	ldrb	r0, [r7, #1]
    6390:	cmp	r0, #0
    6394:	beq	63ac <little2_cdataSectionTok+0x240>
    6398:	and	r0, r0, #255	; 0xff
    639c:	ldrb	r2, [r7]
    63a0:	and	r1, r2, #255	; 0xff
    63a4:	bl	52c8 <unicode_byte_type>
    63a8:	b	63bc <little2_cdataSectionTok+0x250>
    63ac:	ldrb	ip, [r7]
    63b0:	and	ip, ip, #255	; 0xff
    63b4:	add	r3, r4, ip
    63b8:	ldrb	r0, [r3, #76]	; 0x4c
    63bc:	cmp	r0, #11
    63c0:	bcs	64a0 <little2_cdataSectionTok+0x334>
    63c4:	add	pc, pc, r0, lsl #2
    63c8:	nop	{0}
    63cc:	b	6494 <little2_cdataSectionTok+0x328>
    63d0:	b	6494 <little2_cdataSectionTok+0x328>
    63d4:	b	64a0 <little2_cdataSectionTok+0x334>
    63d8:	b	64a0 <little2_cdataSectionTok+0x334>
    63dc:	b	6494 <little2_cdataSectionTok+0x328>
    63e0:	b	63f8 <little2_cdataSectionTok+0x28c>
    63e4:	b	642c <little2_cdataSectionTok+0x2c0>
    63e8:	b	6460 <little2_cdataSectionTok+0x2f4>
    63ec:	b	6494 <little2_cdataSectionTok+0x328>
    63f0:	b	6494 <little2_cdataSectionTok+0x328>
    63f4:	b	6494 <little2_cdataSectionTok+0x328>
    63f8:	mov	r3, #1
    63fc:	mov	r2, #0
    6400:	sub	ip, r6, r7
    6404:	cmp	ip, #2
    6408:	movlt	r2, r3
    640c:	movge	r2, r2
    6410:	cmp	r2, #0
    6414:	beq	6424 <little2_cdataSectionTok+0x2b8>
    6418:	str	r7, [r5]
    641c:	mov	r0, #6
    6420:	b	64b0 <little2_cdataSectionTok+0x344>
    6424:	add	r7, r7, #2
    6428:	b	6384 <little2_cdataSectionTok+0x218>
    642c:	mov	r2, #1
    6430:	mov	r0, #0
    6434:	sub	r1, r6, r7
    6438:	cmp	r1, #3
    643c:	movlt	r2, r2
    6440:	movge	r2, r0
    6444:	cmp	r2, #0
    6448:	beq	6458 <little2_cdataSectionTok+0x2ec>
    644c:	str	r7, [r5]
    6450:	mov	r0, #6
    6454:	b	64b0 <little2_cdataSectionTok+0x344>
    6458:	add	r7, r7, #3
    645c:	b	6384 <little2_cdataSectionTok+0x218>
    6460:	mov	r0, #1
    6464:	mov	r2, #0
    6468:	sub	r1, r6, r7
    646c:	cmp	r1, #4
    6470:	movlt	r0, r0
    6474:	movge	r0, r2
    6478:	cmp	r0, #0
    647c:	beq	648c <little2_cdataSectionTok+0x320>
    6480:	str	r7, [r5]
    6484:	mov	r0, #6
    6488:	b	64b0 <little2_cdataSectionTok+0x344>
    648c:	add	r7, r7, #4
    6490:	b	6384 <little2_cdataSectionTok+0x218>
    6494:	str	r7, [r5]
    6498:	mov	r0, #6
    649c:	b	64b0 <little2_cdataSectionTok+0x344>
    64a0:	add	r7, r7, #2
    64a4:	b	6384 <little2_cdataSectionTok+0x218>
    64a8:	str	r7, [r5]
    64ac:	mov	r0, #6
    64b0:	ldr	r4, [sp, #8]
    64b4:	ldr	r5, [sp, #12]
    64b8:	ldr	r6, [sp, #16]
    64bc:	ldr	r7, [sp, #20]
    64c0:	ldr	lr, [sp, #4]
    64c4:	add	sp, sp, #24
    64c8:	bx	lr

000064cc <little2_scanRef>:
    64cc:	mov	ip, sp
    64d0:	sub	sp, sp, #32
    64d4:	str	ip, [sp]
    64d8:	str	lr, [sp, #4]
    64dc:	str	r4, [sp, #8]
    64e0:	str	r5, [sp, #12]
    64e4:	str	r6, [sp, #16]
    64e8:	str	r7, [sp, #20]
    64ec:	str	r8, [sp, #24]
    64f0:	mov	r6, r3
    64f4:	mov	r4, r2
    64f8:	mov	r8, r1
    64fc:	mov	r5, r0
    6500:	cmp	r8, r4
    6504:	bne	6510 <little2_scanRef+0x44>
    6508:	mvn	r0, #0
    650c:	b	69bc <little2_scanRef+0x4f0>
    6510:	ldrb	r2, [r8, #1]
    6514:	cmp	r2, #0
    6518:	beq	6530 <little2_scanRef+0x64>
    651c:	and	r0, r2, #255	; 0xff
    6520:	ldrb	r3, [r8]
    6524:	and	r1, r3, #255	; 0xff
    6528:	bl	52c8 <unicode_byte_type>
    652c:	b	6540 <little2_scanRef+0x74>
    6530:	ldrb	ip, [r8]
    6534:	and	r0, ip, #255	; 0xff
    6538:	add	r0, r5, r0
    653c:	ldrb	r0, [r0, #76]	; 0x4c
    6540:	cmp	r0, #19
    6544:	bcs	65c0 <little2_scanRef+0xf4>
    6548:	cmp	r0, #5
    654c:	beq	65a0 <little2_scanRef+0xd4>
    6550:	cmp	r0, #6
    6554:	beq	6580 <little2_scanRef+0xb4>
    6558:	cmp	r0, #7
    655c:	bne	6828 <little2_scanRef+0x35c>
    6560:	sub	ip, r4, r8
    6564:	cmp	ip, #4
    6568:	bge	6574 <little2_scanRef+0xa8>
    656c:	mvn	r0, #1
    6570:	b	69bc <little2_scanRef+0x4f0>
    6574:	str	r8, [r6]
    6578:	mov	r0, #0
    657c:	b	69bc <little2_scanRef+0x4f0>
    6580:	sub	r2, r4, r8
    6584:	cmp	r2, #3
    6588:	bge	6594 <little2_scanRef+0xc8>
    658c:	mvn	r0, #1
    6590:	b	69bc <little2_scanRef+0x4f0>
    6594:	str	r8, [r6]
    6598:	mov	r0, #0
    659c:	b	69bc <little2_scanRef+0x4f0>
    65a0:	sub	r3, r4, r8
    65a4:	cmp	r3, #2
    65a8:	bge	65b4 <little2_scanRef+0xe8>
    65ac:	mvn	r0, #1
    65b0:	b	69bc <little2_scanRef+0x4f0>
    65b4:	str	r8, [r6]
    65b8:	mov	r0, #0
    65bc:	b	69bc <little2_scanRef+0x4f0>
    65c0:	cmp	r0, #24
    65c4:	bcs	67cc <little2_scanRef+0x300>
    65c8:	cmp	r0, #19
    65cc:	beq	65dc <little2_scanRef+0x110>
    65d0:	cmp	r0, #22
    65d4:	beq	6834 <little2_scanRef+0x368>
    65d8:	b	6828 <little2_scanRef+0x35c>
    65dc:	add	r7, r8, #2
    65e0:	cmp	r7, r4
    65e4:	beq	67a8 <little2_scanRef+0x2dc>
    65e8:	ldrb	r2, [r8, #3]
    65ec:	cmp	r2, #0
    65f0:	bne	66f4 <little2_scanRef+0x228>
    65f4:	ldrb	r3, [r8, #2]
    65f8:	cmp	r3, #120	; 0x78
    65fc:	bne	66f4 <little2_scanRef+0x228>
    6600:	add	r7, r8, #4
    6604:	cmp	r7, r4
    6608:	beq	66d0 <little2_scanRef+0x204>
    660c:	ldrb	r2, [r8, #5]
    6610:	cmp	r2, #0
    6614:	beq	662c <little2_scanRef+0x160>
    6618:	and	r0, r2, #255	; 0xff
    661c:	ldrb	r1, [r8, #4]
    6620:	and	r1, r1, #255	; 0xff
    6624:	bl	52c8 <unicode_byte_type>
    6628:	b	663c <little2_scanRef+0x170>
    662c:	ldrb	r3, [r8, #4]
    6630:	and	ip, r3, #255	; 0xff
    6634:	add	ip, r5, ip
    6638:	ldrb	r0, [ip, #76]	; 0x4c
    663c:	cmp	r0, #24
    6640:	beq	6658 <little2_scanRef+0x18c>
    6644:	cmp	r0, #25
    6648:	beq	6658 <little2_scanRef+0x18c>
    664c:	str	r7, [r6]
    6650:	mov	r0, #0
    6654:	b	66d4 <little2_scanRef+0x208>
    6658:	add	r7, r7, #2
    665c:	cmp	r7, r4
    6660:	beq	66d0 <little2_scanRef+0x204>
    6664:	ldrb	r0, [r7, #1]
    6668:	cmp	r0, #0
    666c:	beq	6684 <little2_scanRef+0x1b8>
    6670:	and	r0, r0, #255	; 0xff
    6674:	ldrb	ip, [r7]
    6678:	and	r1, ip, #255	; 0xff
    667c:	bl	52c8 <unicode_byte_type>
    6680:	b	6694 <little2_scanRef+0x1c8>
    6684:	ldrb	ip, [r7]
    6688:	and	ip, ip, #255	; 0xff
    668c:	add	r1, r5, ip
    6690:	ldrb	r0, [r1, #76]	; 0x4c
    6694:	cmp	r0, #18
    6698:	beq	66c0 <little2_scanRef+0x1f4>
    669c:	cmp	r0, #24
    66a0:	beq	66b8 <little2_scanRef+0x1ec>
    66a4:	cmp	r0, #25
    66a8:	beq	66b8 <little2_scanRef+0x1ec>
    66ac:	str	r7, [r6]
    66b0:	mov	r0, #0
    66b4:	b	66d4 <little2_scanRef+0x208>
    66b8:	add	r7, r7, #2
    66bc:	b	665c <little2_scanRef+0x190>
    66c0:	add	ip, r7, #2
    66c4:	str	ip, [r6]
    66c8:	mov	r0, #10
    66cc:	b	66d4 <little2_scanRef+0x208>
    66d0:	mvn	r0, #0
    66d4:	ldr	r4, [sp, #8]
    66d8:	ldr	r5, [sp, #12]
    66dc:	ldr	r6, [sp, #16]
    66e0:	ldr	r7, [sp, #20]
    66e4:	ldr	r8, [sp, #24]
    66e8:	ldr	lr, [sp, #4]
    66ec:	add	sp, sp, #32
    66f0:	bx	lr
    66f4:	ldrb	r0, [r7, #1]
    66f8:	cmp	r0, #0
    66fc:	beq	6714 <little2_scanRef+0x248>
    6700:	and	r0, r0, #255	; 0xff
    6704:	ldrb	r2, [r7]
    6708:	and	r1, r2, #255	; 0xff
    670c:	bl	52c8 <unicode_byte_type>
    6710:	b	6724 <little2_scanRef+0x258>
    6714:	ldrb	r3, [r7]
    6718:	and	r2, r3, #255	; 0xff
    671c:	add	ip, r5, r2
    6720:	ldrb	r0, [ip, #76]	; 0x4c
    6724:	cmp	r0, #25
    6728:	beq	6738 <little2_scanRef+0x26c>
    672c:	str	r7, [r6]
    6730:	mov	r0, #0
    6734:	b	67ac <little2_scanRef+0x2e0>
    6738:	add	r7, r7, #2
    673c:	cmp	r7, r4
    6740:	beq	67a8 <little2_scanRef+0x2dc>
    6744:	ldrb	ip, [r7, #1]
    6748:	cmp	ip, #0
    674c:	beq	6764 <little2_scanRef+0x298>
    6750:	and	r0, ip, #255	; 0xff
    6754:	ldrb	r2, [r7]
    6758:	and	r1, r2, #255	; 0xff
    675c:	bl	52c8 <unicode_byte_type>
    6760:	b	6774 <little2_scanRef+0x2a8>
    6764:	ldrb	r0, [r7]
    6768:	and	r2, r0, #255	; 0xff
    676c:	add	r0, r5, r2
    6770:	ldrb	r0, [r0, #76]	; 0x4c
    6774:	cmp	r0, #18
    6778:	beq	6798 <little2_scanRef+0x2cc>
    677c:	cmp	r0, #25
    6780:	beq	6790 <little2_scanRef+0x2c4>
    6784:	str	r7, [r6]
    6788:	mov	r0, #0
    678c:	b	67ac <little2_scanRef+0x2e0>
    6790:	add	r7, r7, #2
    6794:	b	673c <little2_scanRef+0x270>
    6798:	add	r3, r7, #2
    679c:	str	r3, [r6]
    67a0:	mov	r0, #10
    67a4:	b	67ac <little2_scanRef+0x2e0>
    67a8:	mvn	r0, #0
    67ac:	ldr	r4, [sp, #8]
    67b0:	ldr	r5, [sp, #12]
    67b4:	ldr	r6, [sp, #16]
    67b8:	ldr	r7, [sp, #20]
    67bc:	ldr	r8, [sp, #24]
    67c0:	ldr	lr, [sp, #4]
    67c4:	add	sp, sp, #32
    67c8:	bx	lr
    67cc:	cmp	r0, #24
    67d0:	beq	6834 <little2_scanRef+0x368>
    67d4:	cmp	r0, #29
    67d8:	bne	6828 <little2_scanRef+0x35c>
    67dc:	ldr	r0, [pc, #504]	; 69dc <little2_scanRef+0x510>
    67e0:	ldrb	r1, [r8]
    67e4:	and	r2, r1, #255	; 0xff
    67e8:	asr	r2, r2, #5
    67ec:	ldr	r3, [pc, #492]	; 69e0 <little2_scanRef+0x514>
    67f0:	ldrb	ip, [r8, #1]
    67f4:	and	ip, ip, #255	; 0xff
    67f8:	ldrb	r3, [r3, ip]
    67fc:	add	r2, r2, r3, lsl #3
    6800:	ldr	r0, [r0, r2, lsl #2]
    6804:	mov	r2, #1
    6808:	and	r1, r1, #31
    680c:	lsl	ip, r2, r1
    6810:	and	r1, r0, ip
    6814:	cmp	r1, #0
    6818:	bne	6834 <little2_scanRef+0x368>
    681c:	str	r8, [r6]
    6820:	mov	r0, #0
    6824:	b	69bc <little2_scanRef+0x4f0>
    6828:	str	r8, [r6]
    682c:	mov	r0, #0
    6830:	b	69bc <little2_scanRef+0x4f0>
    6834:	add	r7, r8, #2
    6838:	cmp	r7, r4
    683c:	beq	69b8 <little2_scanRef+0x4ec>
    6840:	ldrb	r1, [r7, #1]
    6844:	cmp	r1, #0
    6848:	beq	6860 <little2_scanRef+0x394>
    684c:	and	r0, r1, #255	; 0xff
    6850:	ldrb	r1, [r7]
    6854:	and	r1, r1, #255	; 0xff
    6858:	bl	52c8 <unicode_byte_type>
    685c:	b	6870 <little2_scanRef+0x3a4>
    6860:	ldrb	r1, [r7]
    6864:	and	r2, r1, #255	; 0xff
    6868:	add	r0, r5, r2
    686c:	ldrb	r0, [r0, #76]	; 0x4c
    6870:	sub	r0, r0, #5
    6874:	cmp	r0, #25
    6878:	bcs	69ac <little2_scanRef+0x4e0>
    687c:	add	pc, pc, r0, lsl #2
    6880:	nop	{0}
    6884:	b	693c <little2_scanRef+0x470>
    6888:	b	695c <little2_scanRef+0x490>
    688c:	b	697c <little2_scanRef+0x4b0>
    6890:	b	69ac <little2_scanRef+0x4e0>
    6894:	b	69ac <little2_scanRef+0x4e0>
    6898:	b	69ac <little2_scanRef+0x4e0>
    689c:	b	69ac <little2_scanRef+0x4e0>
    68a0:	b	69ac <little2_scanRef+0x4e0>
    68a4:	b	69ac <little2_scanRef+0x4e0>
    68a8:	b	69ac <little2_scanRef+0x4e0>
    68ac:	b	69ac <little2_scanRef+0x4e0>
    68b0:	b	69ac <little2_scanRef+0x4e0>
    68b4:	b	69ac <little2_scanRef+0x4e0>
    68b8:	b	699c <little2_scanRef+0x4d0>
    68bc:	b	69ac <little2_scanRef+0x4e0>
    68c0:	b	69ac <little2_scanRef+0x4e0>
    68c4:	b	69ac <little2_scanRef+0x4e0>
    68c8:	b	6934 <little2_scanRef+0x468>
    68cc:	b	69ac <little2_scanRef+0x4e0>
    68d0:	b	6934 <little2_scanRef+0x468>
    68d4:	b	6934 <little2_scanRef+0x468>
    68d8:	b	6934 <little2_scanRef+0x468>
    68dc:	b	6934 <little2_scanRef+0x468>
    68e0:	b	69ac <little2_scanRef+0x4e0>
    68e4:	b	68e8 <little2_scanRef+0x41c>
    68e8:	ldr	ip, [pc, #236]	; 69dc <little2_scanRef+0x510>
    68ec:	ldrb	r3, [r7]
    68f0:	and	r1, r3, #255	; 0xff
    68f4:	asr	r8, r1, #5
    68f8:	ldr	r1, [pc, #228]	; 69e4 <little2_scanRef+0x518>
    68fc:	ldrb	r0, [r7, #1]
    6900:	and	r0, r0, #255	; 0xff
    6904:	ldrb	r2, [r1, r0]
    6908:	add	r1, r8, r2, lsl #3
    690c:	ldr	r2, [ip, r1, lsl #2]
    6910:	mov	r0, #1
    6914:	and	r1, r3, #31
    6918:	lsl	r3, r0, r1
    691c:	and	r3, r2, r3
    6920:	cmp	r3, #0
    6924:	bne	6934 <little2_scanRef+0x468>
    6928:	str	r7, [r6]
    692c:	mov	r0, #0
    6930:	b	69bc <little2_scanRef+0x4f0>
    6934:	add	r7, r7, #2
    6938:	b	6838 <little2_scanRef+0x36c>
    693c:	sub	r3, r4, r7
    6940:	cmp	r3, #2
    6944:	bge	6950 <little2_scanRef+0x484>
    6948:	mvn	r0, #1
    694c:	b	69bc <little2_scanRef+0x4f0>
    6950:	str	r7, [r6]
    6954:	mov	r0, #0
    6958:	b	69bc <little2_scanRef+0x4f0>
    695c:	sub	r3, r4, r7
    6960:	cmp	r3, #3
    6964:	bge	6970 <little2_scanRef+0x4a4>
    6968:	mvn	r0, #1
    696c:	b	69bc <little2_scanRef+0x4f0>
    6970:	str	r7, [r6]
    6974:	mov	r0, #0
    6978:	b	69bc <little2_scanRef+0x4f0>
    697c:	sub	r0, r4, r7
    6980:	cmp	r0, #4
    6984:	bge	6990 <little2_scanRef+0x4c4>
    6988:	mvn	r0, #1
    698c:	b	69bc <little2_scanRef+0x4f0>
    6990:	str	r7, [r6]
    6994:	mov	r0, #0
    6998:	b	69bc <little2_scanRef+0x4f0>
    699c:	add	r3, r7, #2
    69a0:	str	r3, [r6]
    69a4:	mov	r0, #9
    69a8:	b	69bc <little2_scanRef+0x4f0>
    69ac:	str	r7, [r6]
    69b0:	mov	r0, #0
    69b4:	b	69bc <little2_scanRef+0x4f0>
    69b8:	mvn	r0, #0
    69bc:	ldr	r4, [sp, #8]
    69c0:	ldr	r5, [sp, #12]
    69c4:	ldr	r6, [sp, #16]
    69c8:	ldr	r7, [sp, #20]
    69cc:	ldr	r8, [sp, #24]
    69d0:	ldr	lr, [sp, #4]
    69d4:	add	sp, sp, #32
    69d8:	bx	lr
    69dc:	.word	0x00000000
    69e0:	.word	0x00000500
    69e4:	.word	0x00000600

000069e8 <little2_contentTok>:
    69e8:	mov	ip, sp
    69ec:	sub	sp, sp, #40	; 0x28
    69f0:	str	ip, [sp]
    69f4:	str	lr, [sp, #4]
    69f8:	str	r4, [sp, #8]
    69fc:	str	r5, [sp, #12]
    6a00:	str	r6, [sp, #16]
    6a04:	str	r7, [sp, #20]
    6a08:	str	r8, [sp, #24]
    6a0c:	str	r9, [sp, #28]
    6a10:	mov	r6, r3
    6a14:	mov	r5, r2
    6a18:	mov	r8, r1
    6a1c:	mov	r7, r0
    6a20:	cmp	r8, r5
    6a24:	bne	6a30 <little2_contentTok+0x48>
    6a28:	mvn	r0, #3
    6a2c:	b	812c <little2_contentTok+0x1744>
    6a30:	sub	r1, r5, r8
    6a34:	and	r2, r1, #1
    6a38:	cmp	r2, #0
    6a3c:	beq	6a58 <little2_contentTok+0x70>
    6a40:	bic	r1, r1, #1
    6a44:	cmp	r1, #0
    6a48:	bne	6a54 <little2_contentTok+0x6c>
    6a4c:	mvn	r0, #0
    6a50:	b	812c <little2_contentTok+0x1744>
    6a54:	add	r5, r8, r1
    6a58:	ldrb	r1, [r8, #1]
    6a5c:	cmp	r1, #0
    6a60:	beq	6a78 <little2_contentTok+0x90>
    6a64:	and	r0, r1, #255	; 0xff
    6a68:	ldrb	r1, [r8]
    6a6c:	and	r1, r1, #255	; 0xff
    6a70:	bl	52c8 <unicode_byte_type>
    6a74:	b	6a88 <little2_contentTok+0xa0>
    6a78:	ldrb	r1, [r8]
    6a7c:	and	r3, r1, #255	; 0xff
    6a80:	add	r3, r7, r3
    6a84:	ldrb	r0, [r3, #76]	; 0x4c
    6a88:	cmp	r0, #11
    6a8c:	bcs	7f98 <little2_contentTok+0x15b0>
    6a90:	add	pc, pc, r0, lsl #2
    6a94:	nop	{0}
    6a98:	b	7f8c <little2_contentTok+0x15a4>
    6a9c:	b	7f8c <little2_contentTok+0x15a4>
    6aa0:	b	6ac4 <little2_contentTok+0xdc>
    6aa4:	b	7e28 <little2_contentTok+0x1440>
    6aa8:	b	7ecc <little2_contentTok+0x14e4>
    6aac:	b	7f38 <little2_contentTok+0x1550>
    6ab0:	b	7f54 <little2_contentTok+0x156c>
    6ab4:	b	7f70 <little2_contentTok+0x1588>
    6ab8:	b	7f8c <little2_contentTok+0x15a4>
    6abc:	b	7e5c <little2_contentTok+0x1474>
    6ac0:	b	7ebc <little2_contentTok+0x14d4>
    6ac4:	add	r4, r8, #2
    6ac8:	cmp	r4, r5
    6acc:	bne	6ad8 <little2_contentTok+0xf0>
    6ad0:	mvn	r0, #0
    6ad4:	b	7e04 <little2_contentTok+0x141c>
    6ad8:	ldrb	r3, [r8, #3]
    6adc:	cmp	r3, #0
    6ae0:	beq	6af8 <little2_contentTok+0x110>
    6ae4:	and	r0, r3, #255	; 0xff
    6ae8:	ldrb	r2, [r8, #2]
    6aec:	and	r1, r2, #255	; 0xff
    6af0:	bl	52c8 <unicode_byte_type>
    6af4:	b	6b08 <little2_contentTok+0x120>
    6af8:	ldrb	r0, [r8, #2]
    6afc:	and	r2, r0, #255	; 0xff
    6b00:	add	r0, r7, r2
    6b04:	ldrb	r0, [r0, #76]	; 0x4c
    6b08:	sub	r1, r0, #5
    6b0c:	cmp	r1, #25
    6b10:	bcs	7dfc <little2_contentTok+0x1414>
    6b14:	add	pc, pc, r1, lsl #2
    6b18:	nop	{0}
    6b1c:	b	78c4 <little2_contentTok+0xedc>
    6b20:	b	78e4 <little2_contentTok+0xefc>
    6b24:	b	7904 <little2_contentTok+0xf1c>
    6b28:	b	7dfc <little2_contentTok+0x1414>
    6b2c:	b	7dfc <little2_contentTok+0x1414>
    6b30:	b	7dfc <little2_contentTok+0x1414>
    6b34:	b	7dfc <little2_contentTok+0x1414>
    6b38:	b	7dfc <little2_contentTok+0x1414>
    6b3c:	b	7dfc <little2_contentTok+0x1414>
    6b40:	b	7dfc <little2_contentTok+0x1414>
    6b44:	b	7a3c <little2_contentTok+0x1054>
    6b48:	b	7924 <little2_contentTok+0xf3c>
    6b4c:	b	7a70 <little2_contentTok+0x1088>
    6b50:	b	7dfc <little2_contentTok+0x1414>
    6b54:	b	7dfc <little2_contentTok+0x1414>
    6b58:	b	7dfc <little2_contentTok+0x1414>
    6b5c:	b	7dfc <little2_contentTok+0x1414>
    6b60:	b	6bcc <little2_contentTok+0x1e4>
    6b64:	b	7dfc <little2_contentTok+0x1414>
    6b68:	b	6bcc <little2_contentTok+0x1e4>
    6b6c:	b	7dfc <little2_contentTok+0x1414>
    6b70:	b	7dfc <little2_contentTok+0x1414>
    6b74:	b	7dfc <little2_contentTok+0x1414>
    6b78:	b	7dfc <little2_contentTok+0x1414>
    6b7c:	b	6b80 <little2_contentTok+0x198>
    6b80:	ldr	r8, [pc, #3836]	; 7a84 <little2_contentTok+0x109c>
    6b84:	ldrb	r0, [r4]
    6b88:	and	ip, r0, #255	; 0xff
    6b8c:	asr	r1, ip, #5
    6b90:	ldr	r3, [pc, #3824]	; 7a88 <little2_contentTok+0x10a0>
    6b94:	ldrb	ip, [r4, #1]
    6b98:	and	r2, ip, #255	; 0xff
    6b9c:	ldrb	r2, [r3, r2]
    6ba0:	add	r1, r1, r2, lsl #3
    6ba4:	ldr	r2, [r8, r1, lsl #2]
    6ba8:	mov	ip, #1
    6bac:	and	r0, r0, #31
    6bb0:	lsl	r3, ip, r0
    6bb4:	and	r3, r2, r3
    6bb8:	cmp	r3, #0
    6bbc:	bne	6bcc <little2_contentTok+0x1e4>
    6bc0:	str	r4, [r6]
    6bc4:	mov	r0, #0
    6bc8:	b	7e04 <little2_contentTok+0x141c>
    6bcc:	add	r4, r4, #2
    6bd0:	mov	r8, #0
    6bd4:	cmp	r4, r5
    6bd8:	beq	78bc <little2_contentTok+0xed4>
    6bdc:	ldrb	r1, [r4, #1]
    6be0:	cmp	r1, #0
    6be4:	beq	6bfc <little2_contentTok+0x214>
    6be8:	and	r0, r1, #255	; 0xff
    6bec:	ldrb	r3, [r4]
    6bf0:	and	r1, r3, #255	; 0xff
    6bf4:	bl	52c8 <unicode_byte_type>
    6bf8:	b	6c0c <little2_contentTok+0x224>
    6bfc:	ldrb	r1, [r4]
    6c00:	and	r2, r1, #255	; 0xff
    6c04:	add	r0, r7, r2
    6c08:	ldrb	r0, [r0, #76]	; 0x4c
    6c0c:	sub	ip, r0, #5
    6c10:	cmp	ip, #25
    6c14:	bcs	78b0 <little2_contentTok+0xec8>
    6c18:	add	pc, pc, ip, lsl #2
    6c1c:	nop	{0}
    6c20:	b	6cd8 <little2_contentTok+0x2f0>
    6c24:	b	6cf8 <little2_contentTok+0x310>
    6c28:	b	6d18 <little2_contentTok+0x330>
    6c2c:	b	78b0 <little2_contentTok+0xec8>
    6c30:	b	6e8c <little2_contentTok+0x4a4>
    6c34:	b	6e8c <little2_contentTok+0x4a4>
    6c38:	b	7858 <little2_contentTok+0xe70>
    6c3c:	b	78b0 <little2_contentTok+0xec8>
    6c40:	b	78b0 <little2_contentTok+0xec8>
    6c44:	b	78b0 <little2_contentTok+0xec8>
    6c48:	b	78b0 <little2_contentTok+0xec8>
    6c4c:	b	78b0 <little2_contentTok+0xec8>
    6c50:	b	7868 <little2_contentTok+0xe80>
    6c54:	b	78b0 <little2_contentTok+0xec8>
    6c58:	b	78b0 <little2_contentTok+0xec8>
    6c5c:	b	78b0 <little2_contentTok+0xec8>
    6c60:	b	6e8c <little2_contentTok+0x4a4>
    6c64:	b	6cd0 <little2_contentTok+0x2e8>
    6c68:	b	6d38 <little2_contentTok+0x350>
    6c6c:	b	6cd0 <little2_contentTok+0x2e8>
    6c70:	b	6cd0 <little2_contentTok+0x2e8>
    6c74:	b	6cd0 <little2_contentTok+0x2e8>
    6c78:	b	6cd0 <little2_contentTok+0x2e8>
    6c7c:	b	78b0 <little2_contentTok+0xec8>
    6c80:	b	6c84 <little2_contentTok+0x29c>
    6c84:	ldr	r9, [pc, #3576]	; 7a84 <little2_contentTok+0x109c>
    6c88:	ldrb	r3, [r4]
    6c8c:	and	ip, r3, #255	; 0xff
    6c90:	asr	ip, ip, #5
    6c94:	ldr	r0, [pc, #3572]	; 7a90 <little2_contentTok+0x10a8>
    6c98:	ldrb	r1, [r4, #1]
    6c9c:	and	r2, r1, #255	; 0xff
    6ca0:	ldrb	r1, [r0, r2]
    6ca4:	add	ip, ip, r1, lsl #3
    6ca8:	ldr	r2, [r9, ip, lsl #2]
    6cac:	mov	r1, #1
    6cb0:	and	r3, r3, #31
    6cb4:	lsl	r1, r1, r3
    6cb8:	and	r1, r2, r1
    6cbc:	cmp	r1, #0
    6cc0:	bne	6cd0 <little2_contentTok+0x2e8>
    6cc4:	str	r4, [r6]
    6cc8:	mov	r0, #0
    6ccc:	b	7e04 <little2_contentTok+0x141c>
    6cd0:	add	r4, r4, #2
    6cd4:	b	6bd4 <little2_contentTok+0x1ec>
    6cd8:	sub	r0, r5, r4
    6cdc:	cmp	r0, #2
    6ce0:	bge	6cec <little2_contentTok+0x304>
    6ce4:	mvn	r0, #1
    6ce8:	b	7e04 <little2_contentTok+0x141c>
    6cec:	str	r4, [r6]
    6cf0:	mov	r0, #0
    6cf4:	b	7e04 <little2_contentTok+0x141c>
    6cf8:	sub	r0, r5, r4
    6cfc:	cmp	r0, #3
    6d00:	bge	6d0c <little2_contentTok+0x324>
    6d04:	mvn	r0, #1
    6d08:	b	7e04 <little2_contentTok+0x141c>
    6d0c:	str	r4, [r6]
    6d10:	mov	r0, #0
    6d14:	b	7e04 <little2_contentTok+0x141c>
    6d18:	sub	r2, r5, r4
    6d1c:	cmp	r2, #4
    6d20:	bge	6d2c <little2_contentTok+0x344>
    6d24:	mvn	r0, #1
    6d28:	b	7e04 <little2_contentTok+0x141c>
    6d2c:	str	r4, [r6]
    6d30:	mov	r0, #0
    6d34:	b	7e04 <little2_contentTok+0x141c>
    6d38:	cmp	r8, #0
    6d3c:	beq	6d4c <little2_contentTok+0x364>
    6d40:	str	r4, [r6]
    6d44:	mov	r0, #0
    6d48:	b	7e04 <little2_contentTok+0x141c>
    6d4c:	mov	r8, #1
    6d50:	add	r4, r4, #2
    6d54:	cmp	r4, r5
    6d58:	bne	6d64 <little2_contentTok+0x37c>
    6d5c:	mvn	r0, #0
    6d60:	b	7e04 <little2_contentTok+0x141c>
    6d64:	ldrb	ip, [r4, #1]
    6d68:	cmp	ip, #0
    6d6c:	beq	6d84 <little2_contentTok+0x39c>
    6d70:	and	r0, ip, #255	; 0xff
    6d74:	ldrb	r1, [r4]
    6d78:	and	r1, r1, #255	; 0xff
    6d7c:	bl	52c8 <unicode_byte_type>
    6d80:	b	6d94 <little2_contentTok+0x3ac>
    6d84:	ldrb	r2, [r4]
    6d88:	and	r1, r2, #255	; 0xff
    6d8c:	add	r2, r7, r1
    6d90:	ldrb	r0, [r2, #76]	; 0x4c
    6d94:	cmp	r0, #22
    6d98:	bcs	6e14 <little2_contentTok+0x42c>
    6d9c:	cmp	r0, #5
    6da0:	beq	6df4 <little2_contentTok+0x40c>
    6da4:	cmp	r0, #6
    6da8:	beq	6dd4 <little2_contentTok+0x3ec>
    6dac:	cmp	r0, #7
    6db0:	bne	6e78 <little2_contentTok+0x490>
    6db4:	sub	r0, r5, r4
    6db8:	cmp	r0, #4
    6dbc:	bge	6dc8 <little2_contentTok+0x3e0>
    6dc0:	mvn	r0, #1
    6dc4:	b	7e04 <little2_contentTok+0x141c>
    6dc8:	str	r4, [r6]
    6dcc:	mov	r0, #0
    6dd0:	b	7e04 <little2_contentTok+0x141c>
    6dd4:	sub	r2, r5, r4
    6dd8:	cmp	r2, #3
    6ddc:	bge	6de8 <little2_contentTok+0x400>
    6de0:	mvn	r0, #1
    6de4:	b	7e04 <little2_contentTok+0x141c>
    6de8:	str	r4, [r6]
    6dec:	mov	r0, #0
    6df0:	b	7e04 <little2_contentTok+0x141c>
    6df4:	sub	r2, r5, r4
    6df8:	cmp	r2, #2
    6dfc:	bge	6e08 <little2_contentTok+0x420>
    6e00:	mvn	r0, #1
    6e04:	b	7e04 <little2_contentTok+0x141c>
    6e08:	str	r4, [r6]
    6e0c:	mov	r0, #0
    6e10:	b	7e04 <little2_contentTok+0x141c>
    6e14:	cmp	r0, #22
    6e18:	beq	6e84 <little2_contentTok+0x49c>
    6e1c:	cmp	r0, #24
    6e20:	beq	6e84 <little2_contentTok+0x49c>
    6e24:	cmp	r0, #29
    6e28:	bne	6e78 <little2_contentTok+0x490>
    6e2c:	ldr	r3, [pc, #3152]	; 7a84 <little2_contentTok+0x109c>
    6e30:	ldrb	r0, [r4]
    6e34:	and	r1, r0, #255	; 0xff
    6e38:	asr	r2, r1, #5
    6e3c:	ldr	ip, [pc, #3140]	; 7a88 <little2_contentTok+0x10a0>
    6e40:	ldrb	r1, [r4, #1]
    6e44:	and	r1, r1, #255	; 0xff
    6e48:	ldrb	r1, [ip, r1]
    6e4c:	add	r1, r2, r1, lsl #3
    6e50:	ldr	r1, [r3, r1, lsl #2]
    6e54:	mov	ip, #1
    6e58:	and	r0, r0, #31
    6e5c:	lsl	r3, ip, r0
    6e60:	and	ip, r1, r3
    6e64:	cmp	ip, #0
    6e68:	bne	6e84 <little2_contentTok+0x49c>
    6e6c:	str	r4, [r6]
    6e70:	mov	r0, #0
    6e74:	b	7e04 <little2_contentTok+0x141c>
    6e78:	str	r4, [r6]
    6e7c:	mov	r0, #0
    6e80:	b	7e04 <little2_contentTok+0x141c>
    6e84:	add	r4, r4, #2
    6e88:	b	6bd4 <little2_contentTok+0x1ec>
    6e8c:	add	r4, r4, #2
    6e90:	cmp	r4, r5
    6e94:	beq	7850 <little2_contentTok+0xe68>
    6e98:	ldrb	ip, [r4, #1]
    6e9c:	cmp	ip, #0
    6ea0:	beq	6eb8 <little2_contentTok+0x4d0>
    6ea4:	and	r0, ip, #255	; 0xff
    6ea8:	ldrb	ip, [r4]
    6eac:	and	r1, ip, #255	; 0xff
    6eb0:	bl	52c8 <unicode_byte_type>
    6eb4:	b	6ec8 <little2_contentTok+0x4e0>
    6eb8:	ldrb	r3, [r4]
    6ebc:	and	r1, r3, #255	; 0xff
    6ec0:	add	r0, r7, r1
    6ec4:	ldrb	r0, [r0, #76]	; 0x4c
    6ec8:	sub	r1, r0, #5
    6ecc:	cmp	r1, #25
    6ed0:	bcs	7844 <little2_contentTok+0xe5c>
    6ed4:	add	pc, pc, r1, lsl #2
    6ed8:	nop	{0}
    6edc:	b	77dc <little2_contentTok+0xdf4>
    6ee0:	b	77fc <little2_contentTok+0xe14>
    6ee4:	b	781c <little2_contentTok+0xe34>
    6ee8:	b	7844 <little2_contentTok+0xe5c>
    6eec:	b	783c <little2_contentTok+0xe54>
    6ef0:	b	783c <little2_contentTok+0xe54>
    6ef4:	b	7858 <little2_contentTok+0xe70>
    6ef8:	b	7844 <little2_contentTok+0xe5c>
    6efc:	b	7844 <little2_contentTok+0xe5c>
    6f00:	b	7844 <little2_contentTok+0xe5c>
    6f04:	b	7844 <little2_contentTok+0xe5c>
    6f08:	b	7844 <little2_contentTok+0xe5c>
    6f0c:	b	7868 <little2_contentTok+0xe80>
    6f10:	b	7844 <little2_contentTok+0xe5c>
    6f14:	b	7844 <little2_contentTok+0xe5c>
    6f18:	b	7844 <little2_contentTok+0xe5c>
    6f1c:	b	783c <little2_contentTok+0xe54>
    6f20:	b	6f8c <little2_contentTok+0x5a4>
    6f24:	b	7844 <little2_contentTok+0xe5c>
    6f28:	b	6f8c <little2_contentTok+0x5a4>
    6f2c:	b	7844 <little2_contentTok+0xe5c>
    6f30:	b	7844 <little2_contentTok+0xe5c>
    6f34:	b	7844 <little2_contentTok+0xe5c>
    6f38:	b	7844 <little2_contentTok+0xe5c>
    6f3c:	b	6f40 <little2_contentTok+0x558>
    6f40:	ldr	ip, [pc, #2876]	; 7a84 <little2_contentTok+0x109c>
    6f44:	ldrb	r2, [r4]
    6f48:	and	r3, r2, #255	; 0xff
    6f4c:	asr	r1, r3, #5
    6f50:	ldr	r3, [pc, #2864]	; 7a88 <little2_contentTok+0x10a0>
    6f54:	ldrb	r0, [r4, #1]
    6f58:	and	r0, r0, #255	; 0xff
    6f5c:	ldrb	r3, [r3, r0]
    6f60:	add	r0, r1, r3, lsl #3
    6f64:	ldr	ip, [ip, r0, lsl #2]
    6f68:	mov	r3, #1
    6f6c:	and	r0, r2, #31
    6f70:	lsl	r0, r3, r0
    6f74:	and	r0, ip, r0
    6f78:	cmp	r0, #0
    6f7c:	bne	6f8c <little2_contentTok+0x5a4>
    6f80:	str	r4, [r6]
    6f84:	mov	r0, #0
    6f88:	b	7e04 <little2_contentTok+0x141c>
    6f8c:	add	r2, r4, #2
    6f90:	str	r2, [sp, #32]
    6f94:	mov	r8, #0
    6f98:	ldr	r3, [sp, #32]
    6f9c:	cmp	r3, r5
    6fa0:	beq	77b4 <little2_contentTok+0xdcc>
    6fa4:	ldrb	ip, [r3, #1]
    6fa8:	cmp	ip, #0
    6fac:	beq	6fc4 <little2_contentTok+0x5dc>
    6fb0:	and	r0, ip, #255	; 0xff
    6fb4:	ldrb	ip, [r3]
    6fb8:	and	r1, ip, #255	; 0xff
    6fbc:	bl	52c8 <unicode_byte_type>
    6fc0:	b	6fd4 <little2_contentTok+0x5ec>
    6fc4:	ldrb	r3, [r3]
    6fc8:	and	ip, r3, #255	; 0xff
    6fcc:	add	r1, r7, ip
    6fd0:	ldrb	r0, [r1, #76]	; 0x4c
    6fd4:	sub	r3, r0, #5
    6fd8:	cmp	r3, #25
    6fdc:	bcs	77a4 <little2_contentTok+0xdbc>
    6fe0:	add	pc, pc, r3, lsl #2
    6fe4:	nop	{0}
    6fe8:	b	70ac <little2_contentTok+0x6c4>
    6fec:	b	70d0 <little2_contentTok+0x6e8>
    6ff0:	b	70f4 <little2_contentTok+0x70c>
    6ff4:	b	77a4 <little2_contentTok+0xdbc>
    6ff8:	b	7294 <little2_contentTok+0x8ac>
    6ffc:	b	7294 <little2_contentTok+0x8ac>
    7000:	b	77a4 <little2_contentTok+0xdbc>
    7004:	b	77a4 <little2_contentTok+0xdbc>
    7008:	b	77a4 <little2_contentTok+0xdbc>
    700c:	b	7310 <little2_contentTok+0x928>
    7010:	b	77a4 <little2_contentTok+0xdbc>
    7014:	b	77a4 <little2_contentTok+0xdbc>
    7018:	b	77a4 <little2_contentTok+0xdbc>
    701c:	b	77a4 <little2_contentTok+0xdbc>
    7020:	b	77a4 <little2_contentTok+0xdbc>
    7024:	b	77a4 <little2_contentTok+0xdbc>
    7028:	b	7294 <little2_contentTok+0x8ac>
    702c:	b	709c <little2_contentTok+0x6b4>
    7030:	b	7118 <little2_contentTok+0x730>
    7034:	b	709c <little2_contentTok+0x6b4>
    7038:	b	709c <little2_contentTok+0x6b4>
    703c:	b	709c <little2_contentTok+0x6b4>
    7040:	b	709c <little2_contentTok+0x6b4>
    7044:	b	77a4 <little2_contentTok+0xdbc>
    7048:	b	704c <little2_contentTok+0x664>
    704c:	ldr	r4, [pc, #2608]	; 7a84 <little2_contentTok+0x109c>
    7050:	ldr	r0, [sp, #32]
    7054:	ldrb	r2, [r0]
    7058:	and	ip, r2, #255	; 0xff
    705c:	asr	r9, ip, #5
    7060:	ldr	ip, [pc, #2600]	; 7a90 <little2_contentTok+0x10a8>
    7064:	ldrb	r3, [r0, #1]
    7068:	and	r1, r3, #255	; 0xff
    706c:	ldrb	r3, [ip, r1]
    7070:	add	r1, r9, r3, lsl #3
    7074:	ldr	ip, [r4, r1, lsl #2]
    7078:	mov	r3, #1
    707c:	and	r1, r2, #31
    7080:	lsl	r3, r3, r1
    7084:	and	r1, ip, r3
    7088:	cmp	r1, #0
    708c:	bne	709c <little2_contentTok+0x6b4>
    7090:	str	r0, [r6]
    7094:	mov	r0, #0
    7098:	b	77b8 <little2_contentTok+0xdd0>
    709c:	ldr	r0, [sp, #32]
    70a0:	add	r2, r0, #2
    70a4:	str	r2, [sp, #32]
    70a8:	b	6f98 <little2_contentTok+0x5b0>
    70ac:	ldr	r3, [sp, #32]
    70b0:	sub	r2, r5, r3
    70b4:	cmp	r2, #2
    70b8:	bge	70c4 <little2_contentTok+0x6dc>
    70bc:	mvn	r0, #1
    70c0:	b	77b8 <little2_contentTok+0xdd0>
    70c4:	str	r3, [r6]
    70c8:	mov	r0, #0
    70cc:	b	77b8 <little2_contentTok+0xdd0>
    70d0:	ldr	r1, [sp, #32]
    70d4:	sub	r0, r5, r1
    70d8:	cmp	r0, #3
    70dc:	bge	70e8 <little2_contentTok+0x700>
    70e0:	mvn	r0, #1
    70e4:	b	77b8 <little2_contentTok+0xdd0>
    70e8:	str	r1, [r6]
    70ec:	mov	r0, #0
    70f0:	b	77b8 <little2_contentTok+0xdd0>
    70f4:	ldr	r0, [sp, #32]
    70f8:	sub	r2, r5, r0
    70fc:	cmp	r2, #4
    7100:	bge	710c <little2_contentTok+0x724>
    7104:	mvn	r0, #1
    7108:	b	77b8 <little2_contentTok+0xdd0>
    710c:	str	r0, [r6]
    7110:	mov	r0, #0
    7114:	b	77b8 <little2_contentTok+0xdd0>
    7118:	cmp	r8, #0
    711c:	beq	7130 <little2_contentTok+0x748>
    7120:	ldr	r3, [sp, #32]
    7124:	str	r3, [r6]
    7128:	mov	r0, #0
    712c:	b	77b8 <little2_contentTok+0xdd0>
    7130:	mov	r8, #1
    7134:	ldr	r1, [sp, #32]
    7138:	add	r1, r1, #2
    713c:	str	r1, [sp, #32]
    7140:	cmp	r1, r5
    7144:	bne	7150 <little2_contentTok+0x768>
    7148:	mvn	r0, #0
    714c:	b	77b8 <little2_contentTok+0xdd0>
    7150:	ldrb	ip, [r1, #1]
    7154:	cmp	ip, #0
    7158:	beq	7170 <little2_contentTok+0x788>
    715c:	and	r0, ip, #255	; 0xff
    7160:	ldrb	ip, [r1]
    7164:	and	r1, ip, #255	; 0xff
    7168:	bl	52c8 <unicode_byte_type>
    716c:	b	7180 <little2_contentTok+0x798>
    7170:	ldrb	r3, [r1]
    7174:	and	r1, r3, #255	; 0xff
    7178:	add	r1, r7, r1
    717c:	ldrb	r0, [r1, #76]	; 0x4c
    7180:	cmp	r0, #22
    7184:	bcs	720c <little2_contentTok+0x824>
    7188:	cmp	r0, #5
    718c:	beq	71e8 <little2_contentTok+0x800>
    7190:	cmp	r0, #6
    7194:	beq	71c4 <little2_contentTok+0x7dc>
    7198:	cmp	r0, #7
    719c:	bne	7274 <little2_contentTok+0x88c>
    71a0:	ldr	r0, [sp, #32]
    71a4:	sub	r1, r5, r0
    71a8:	cmp	r1, #4
    71ac:	bge	71b8 <little2_contentTok+0x7d0>
    71b0:	mvn	r0, #1
    71b4:	b	77b8 <little2_contentTok+0xdd0>
    71b8:	str	r0, [r6]
    71bc:	mov	r0, #0
    71c0:	b	77b8 <little2_contentTok+0xdd0>
    71c4:	ldr	ip, [sp, #32]
    71c8:	sub	r0, r5, ip
    71cc:	cmp	r0, #3
    71d0:	bge	71dc <little2_contentTok+0x7f4>
    71d4:	mvn	r0, #1
    71d8:	b	77b8 <little2_contentTok+0xdd0>
    71dc:	str	ip, [r6]
    71e0:	mov	r0, #0
    71e4:	b	77b8 <little2_contentTok+0xdd0>
    71e8:	ldr	r3, [sp, #32]
    71ec:	sub	ip, r5, r3
    71f0:	cmp	ip, #2
    71f4:	bge	7200 <little2_contentTok+0x818>
    71f8:	mvn	r0, #1
    71fc:	b	77b8 <little2_contentTok+0xdd0>
    7200:	str	r3, [r6]
    7204:	mov	r0, #0
    7208:	b	77b8 <little2_contentTok+0xdd0>
    720c:	cmp	r0, #22
    7210:	beq	7284 <little2_contentTok+0x89c>
    7214:	cmp	r0, #24
    7218:	beq	7284 <little2_contentTok+0x89c>
    721c:	cmp	r0, #29
    7220:	bne	7274 <little2_contentTok+0x88c>
    7224:	ldr	r4, [pc, #2136]	; 7a84 <little2_contentTok+0x109c>
    7228:	ldr	r1, [sp, #32]
    722c:	ldrb	r2, [r1]
    7230:	and	r3, r2, #255	; 0xff
    7234:	asr	ip, r3, #5
    7238:	ldr	r3, [pc, #2120]	; 7a88 <little2_contentTok+0x10a0>
    723c:	ldrb	r0, [r1, #1]
    7240:	and	r0, r0, #255	; 0xff
    7244:	ldrb	r0, [r3, r0]
    7248:	add	r0, ip, r0, lsl #3
    724c:	ldr	r3, [r4, r0, lsl #2]
    7250:	mov	r0, #1
    7254:	and	r2, r2, #31
    7258:	lsl	ip, r0, r2
    725c:	and	r2, r3, ip
    7260:	cmp	r2, #0
    7264:	bne	7284 <little2_contentTok+0x89c>
    7268:	str	r1, [r6]
    726c:	mov	r0, #0
    7270:	b	77b8 <little2_contentTok+0xdd0>
    7274:	ldr	ip, [sp, #32]
    7278:	str	ip, [r6]
    727c:	mov	r0, #0
    7280:	b	77b8 <little2_contentTok+0xdd0>
    7284:	ldr	r0, [sp, #32]
    7288:	add	r2, r0, #2
    728c:	str	r2, [sp, #32]
    7290:	b	6f98 <little2_contentTok+0x5b0>
    7294:	ldr	r0, [sp, #32]
    7298:	add	r2, r0, #2
    729c:	str	r2, [sp, #32]
    72a0:	cmp	r2, r5
    72a4:	bne	72b0 <little2_contentTok+0x8c8>
    72a8:	mvn	r0, #0
    72ac:	b	77b8 <little2_contentTok+0xdd0>
    72b0:	ldrb	r3, [r2, #1]
    72b4:	cmp	r3, #0
    72b8:	beq	72d0 <little2_contentTok+0x8e8>
    72bc:	and	r0, r3, #255	; 0xff
    72c0:	ldrb	r3, [r2]
    72c4:	and	r1, r3, #255	; 0xff
    72c8:	bl	52c8 <unicode_byte_type>
    72cc:	b	72e0 <little2_contentTok+0x8f8>
    72d0:	ldrb	r0, [r2]
    72d4:	and	r0, r0, #255	; 0xff
    72d8:	add	ip, r7, r0
    72dc:	ldrb	r0, [ip, #76]	; 0x4c
    72e0:	cmp	r0, #14
    72e4:	beq	7310 <little2_contentTok+0x928>
    72e8:	cmp	r0, #9
    72ec:	beq	7294 <little2_contentTok+0x8ac>
    72f0:	cmp	r0, #10
    72f4:	beq	7294 <little2_contentTok+0x8ac>
    72f8:	cmp	r0, #21
    72fc:	beq	7294 <little2_contentTok+0x8ac>
    7300:	ldr	r1, [sp, #32]
    7304:	str	r1, [r6]
    7308:	mov	r0, #0
    730c:	b	77b8 <little2_contentTok+0xdd0>
    7310:	mov	r8, #0
    7314:	ldr	r0, [sp, #32]
    7318:	add	ip, r0, #2
    731c:	str	ip, [sp, #32]
    7320:	cmp	ip, r5
    7324:	bne	7330 <little2_contentTok+0x948>
    7328:	mvn	r0, #0
    732c:	b	77b8 <little2_contentTok+0xdd0>
    7330:	ldrb	r0, [ip, #1]
    7334:	cmp	r0, #0
    7338:	beq	7354 <little2_contentTok+0x96c>
    733c:	and	r0, r0, #255	; 0xff
    7340:	ldrb	r1, [ip]
    7344:	and	r1, r1, #255	; 0xff
    7348:	bl	52c8 <unicode_byte_type>
    734c:	mov	r4, r0
    7350:	b	7364 <little2_contentTok+0x97c>
    7354:	ldrb	r2, [ip]
    7358:	and	ip, r2, #255	; 0xff
    735c:	add	r2, r7, ip
    7360:	ldrb	r4, [r2, #76]	; 0x4c
    7364:	mov	ip, #1
    7368:	cmp	r4, #13
    736c:	moveq	r0, #1
    7370:	movne	r0, #0
    7374:	cmp	r4, #12
    7378:	moveq	r2, ip
    737c:	movne	r2, r0
    7380:	cmp	r2, #0
    7384:	bne	73b0 <little2_contentTok+0x9c8>
    7388:	cmp	r4, #9
    738c:	beq	7314 <little2_contentTok+0x92c>
    7390:	cmp	r4, #10
    7394:	beq	7314 <little2_contentTok+0x92c>
    7398:	cmp	r4, #21
    739c:	beq	7314 <little2_contentTok+0x92c>
    73a0:	ldr	ip, [sp, #32]
    73a4:	str	ip, [r6]
    73a8:	mov	r0, #0
    73ac:	b	77b8 <little2_contentTok+0xdd0>
    73b0:	ldr	r1, [sp, #32]
    73b4:	add	ip, r1, #2
    73b8:	str	ip, [sp, #32]
    73bc:	ldr	ip, [sp, #32]
    73c0:	cmp	ip, r5
    73c4:	bne	73d0 <little2_contentTok+0x9e8>
    73c8:	mvn	r0, #0
    73cc:	b	77b8 <little2_contentTok+0xdd0>
    73d0:	ldrb	r3, [ip, #1]
    73d4:	cmp	r3, #0
    73d8:	beq	73f0 <little2_contentTok+0xa08>
    73dc:	and	r0, r3, #255	; 0xff
    73e0:	ldrb	r3, [ip]
    73e4:	and	r1, r3, #255	; 0xff
    73e8:	bl	52c8 <unicode_byte_type>
    73ec:	b	7400 <little2_contentTok+0xa18>
    73f0:	ldrb	r2, [ip]
    73f4:	and	r0, r2, #255	; 0xff
    73f8:	add	ip, r7, r0
    73fc:	ldrb	r0, [ip, #76]	; 0x4c
    7400:	cmp	r0, r4
    7404:	beq	750c <little2_contentTok+0xb24>
    7408:	cmp	r0, #9
    740c:	bcs	74fc <little2_contentTok+0xb14>
    7410:	add	pc, pc, r0, lsl #2
    7414:	nop	{0}
    7418:	b	74a8 <little2_contentTok+0xac0>
    741c:	b	74a8 <little2_contentTok+0xac0>
    7420:	b	74ec <little2_contentTok+0xb04>
    7424:	b	74b8 <little2_contentTok+0xad0>
    7428:	b	74fc <little2_contentTok+0xb14>
    742c:	b	743c <little2_contentTok+0xa54>
    7430:	b	7460 <little2_contentTok+0xa78>
    7434:	b	7484 <little2_contentTok+0xa9c>
    7438:	b	74a8 <little2_contentTok+0xac0>
    743c:	ldr	r1, [sp, #32]
    7440:	sub	r3, r5, r1
    7444:	cmp	r3, #2
    7448:	bge	7454 <little2_contentTok+0xa6c>
    744c:	mvn	r0, #1
    7450:	b	77b8 <little2_contentTok+0xdd0>
    7454:	add	r0, r1, #2
    7458:	str	r0, [sp, #32]
    745c:	b	73bc <little2_contentTok+0x9d4>
    7460:	ldr	r2, [sp, #32]
    7464:	sub	r1, r5, r2
    7468:	cmp	r1, #3
    746c:	bge	7478 <little2_contentTok+0xa90>
    7470:	mvn	r0, #1
    7474:	b	77b8 <little2_contentTok+0xdd0>
    7478:	add	r1, r2, #3
    747c:	str	r1, [sp, #32]
    7480:	b	73bc <little2_contentTok+0x9d4>
    7484:	ldr	ip, [sp, #32]
    7488:	sub	r0, r5, ip
    748c:	cmp	r0, #4
    7490:	bge	749c <little2_contentTok+0xab4>
    7494:	mvn	r0, #1
    7498:	b	77b8 <little2_contentTok+0xdd0>
    749c:	add	r2, ip, #4
    74a0:	str	r2, [sp, #32]
    74a4:	b	73bc <little2_contentTok+0x9d4>
    74a8:	ldr	r2, [sp, #32]
    74ac:	str	r2, [r6]
    74b0:	mov	r0, #0
    74b4:	b	77b8 <little2_contentTok+0xdd0>
    74b8:	ldr	r2, [sp, #32]
    74bc:	add	r1, r2, #2
    74c0:	add	r3, sp, #32
    74c4:	mov	r2, r5
    74c8:	mov	r0, r7
    74cc:	bl	64cc <little2_scanRef>
    74d0:	cmp	r0, #0
    74d4:	bgt	73bc <little2_contentTok+0x9d4>
    74d8:	cmp	r0, #0
    74dc:	bne	77b8 <little2_contentTok+0xdd0>
    74e0:	ldr	r3, [sp, #32]
    74e4:	str	r3, [r6]
    74e8:	b	77b8 <little2_contentTok+0xdd0>
    74ec:	ldr	r0, [sp, #32]
    74f0:	str	r0, [r6]
    74f4:	mov	r0, #0
    74f8:	b	77b8 <little2_contentTok+0xdd0>
    74fc:	ldr	r2, [sp, #32]
    7500:	add	r2, r2, #2
    7504:	str	r2, [sp, #32]
    7508:	b	73bc <little2_contentTok+0x9d4>
    750c:	ldr	r0, [sp, #32]
    7510:	add	r2, r0, #2
    7514:	str	r2, [sp, #32]
    7518:	cmp	r2, r5
    751c:	bne	7528 <little2_contentTok+0xb40>
    7520:	mvn	r0, #0
    7524:	b	77b8 <little2_contentTok+0xdd0>
    7528:	ldrb	r1, [r2, #1]
    752c:	cmp	r1, #0
    7530:	beq	7548 <little2_contentTok+0xb60>
    7534:	and	r0, r1, #255	; 0xff
    7538:	ldrb	r2, [r2]
    753c:	and	r1, r2, #255	; 0xff
    7540:	bl	52c8 <unicode_byte_type>
    7544:	b	7558 <little2_contentTok+0xb70>
    7548:	ldrb	r1, [r2]
    754c:	and	r0, r1, #255	; 0xff
    7550:	add	ip, r7, r0
    7554:	ldrb	r0, [ip, #76]	; 0x4c
    7558:	cmp	r0, #11
    755c:	bcs	7574 <little2_contentTok+0xb8c>
    7560:	cmp	r0, #9
    7564:	beq	759c <little2_contentTok+0xbb4>
    7568:	cmp	r0, #10
    756c:	beq	759c <little2_contentTok+0xbb4>
    7570:	b	758c <little2_contentTok+0xba4>
    7574:	cmp	r0, #11
    7578:	beq	7790 <little2_contentTok+0xda8>
    757c:	cmp	r0, #17
    7580:	beq	773c <little2_contentTok+0xd54>
    7584:	cmp	r0, #21
    7588:	beq	759c <little2_contentTok+0xbb4>
    758c:	ldr	r3, [sp, #32]
    7590:	str	r3, [r6]
    7594:	mov	r0, #0
    7598:	b	77b8 <little2_contentTok+0xdd0>
    759c:	ldr	ip, [sp, #32]
    75a0:	add	r1, ip, #2
    75a4:	str	r1, [sp, #32]
    75a8:	cmp	r1, r5
    75ac:	bne	75b8 <little2_contentTok+0xbd0>
    75b0:	mvn	r0, #0
    75b4:	b	77b8 <little2_contentTok+0xdd0>
    75b8:	ldrb	ip, [r1, #1]
    75bc:	cmp	ip, #0
    75c0:	beq	75d8 <little2_contentTok+0xbf0>
    75c4:	and	r0, ip, #255	; 0xff
    75c8:	ldrb	ip, [r1]
    75cc:	and	r1, ip, #255	; 0xff
    75d0:	bl	52c8 <unicode_byte_type>
    75d4:	b	75e8 <little2_contentTok+0xc00>
    75d8:	ldrb	ip, [r1]
    75dc:	and	ip, ip, #255	; 0xff
    75e0:	add	ip, r7, ip
    75e4:	ldrb	r0, [ip, #76]	; 0x4c
    75e8:	sub	r3, r0, #5
    75ec:	cmp	r3, #25
    75f0:	bcs	772c <little2_contentTok+0xd44>
    75f4:	add	pc, pc, r3, lsl #2
    75f8:	nop	{0}
    75fc:	b	76c0 <little2_contentTok+0xcd8>
    7600:	b	76e4 <little2_contentTok+0xcfc>
    7604:	b	7708 <little2_contentTok+0xd20>
    7608:	b	772c <little2_contentTok+0xd44>
    760c:	b	759c <little2_contentTok+0xbb4>
    7610:	b	759c <little2_contentTok+0xbb4>
    7614:	b	7790 <little2_contentTok+0xda8>
    7618:	b	772c <little2_contentTok+0xd44>
    761c:	b	772c <little2_contentTok+0xd44>
    7620:	b	772c <little2_contentTok+0xd44>
    7624:	b	772c <little2_contentTok+0xd44>
    7628:	b	772c <little2_contentTok+0xd44>
    762c:	b	773c <little2_contentTok+0xd54>
    7630:	b	772c <little2_contentTok+0xd44>
    7634:	b	772c <little2_contentTok+0xd44>
    7638:	b	772c <little2_contentTok+0xd44>
    763c:	b	759c <little2_contentTok+0xbb4>
    7640:	b	76b0 <little2_contentTok+0xcc8>
    7644:	b	772c <little2_contentTok+0xd44>
    7648:	b	76b0 <little2_contentTok+0xcc8>
    764c:	b	772c <little2_contentTok+0xd44>
    7650:	b	772c <little2_contentTok+0xd44>
    7654:	b	772c <little2_contentTok+0xd44>
    7658:	b	772c <little2_contentTok+0xd44>
    765c:	b	7660 <little2_contentTok+0xc78>
    7660:	ldr	r4, [pc, #1052]	; 7a84 <little2_contentTok+0x109c>
    7664:	ldr	r0, [sp, #32]
    7668:	ldrb	r3, [r0]
    766c:	and	r2, r3, #255	; 0xff
    7670:	asr	r2, r2, #5
    7674:	ldr	ip, [pc, #1036]	; 7a88 <little2_contentTok+0x10a0>
    7678:	ldrb	r1, [r0, #1]
    767c:	and	r1, r1, #255	; 0xff
    7680:	ldrb	r1, [ip, r1]
    7684:	add	ip, r2, r1, lsl #3
    7688:	ldr	r1, [r4, ip, lsl #2]
    768c:	mov	r2, #1
    7690:	and	r3, r3, #31
    7694:	lsl	r2, r2, r3
    7698:	and	r3, r1, r2
    769c:	cmp	r3, #0
    76a0:	bne	76b0 <little2_contentTok+0xcc8>
    76a4:	str	r0, [r6]
    76a8:	mov	r0, #0
    76ac:	b	77b8 <little2_contentTok+0xdd0>
    76b0:	ldr	r2, [sp, #32]
    76b4:	add	r3, r2, #2
    76b8:	str	r3, [sp, #32]
    76bc:	b	6f98 <little2_contentTok+0x5b0>
    76c0:	ldr	r0, [sp, #32]
    76c4:	sub	r3, r5, r0
    76c8:	cmp	r3, #2
    76cc:	bge	76d8 <little2_contentTok+0xcf0>
    76d0:	mvn	r0, #1
    76d4:	b	77b8 <little2_contentTok+0xdd0>
    76d8:	str	r0, [r6]
    76dc:	mov	r0, #0
    76e0:	b	77b8 <little2_contentTok+0xdd0>
    76e4:	ldr	r2, [sp, #32]
    76e8:	sub	r1, r5, r2
    76ec:	cmp	r1, #3
    76f0:	bge	76fc <little2_contentTok+0xd14>
    76f4:	mvn	r0, #1
    76f8:	b	77b8 <little2_contentTok+0xdd0>
    76fc:	str	r2, [r6]
    7700:	mov	r0, #0
    7704:	b	77b8 <little2_contentTok+0xdd0>
    7708:	ldr	r3, [sp, #32]
    770c:	sub	r0, r5, r3
    7710:	cmp	r0, #4
    7714:	bge	7720 <little2_contentTok+0xd38>
    7718:	mvn	r0, #1
    771c:	b	77b8 <little2_contentTok+0xdd0>
    7720:	str	r3, [r6]
    7724:	mov	r0, #0
    7728:	b	77b8 <little2_contentTok+0xdd0>
    772c:	ldr	ip, [sp, #32]
    7730:	str	ip, [r6]
    7734:	mov	r0, #0
    7738:	b	77b8 <little2_contentTok+0xdd0>
    773c:	ldr	r3, [sp, #32]
    7740:	add	r3, r3, #2
    7744:	str	r3, [sp, #32]
    7748:	cmp	r3, r5
    774c:	bne	7758 <little2_contentTok+0xd70>
    7750:	mvn	r0, #0
    7754:	b	77b8 <little2_contentTok+0xdd0>
    7758:	ldrb	r1, [r3, #1]
    775c:	cmp	r1, #0
    7760:	bne	7780 <little2_contentTok+0xd98>
    7764:	ldrb	r2, [r3]
    7768:	cmp	r2, #62	; 0x3e
    776c:	bne	7780 <little2_contentTok+0xd98>
    7770:	add	ip, r3, #2
    7774:	str	ip, [r6]
    7778:	mov	r0, #3
    777c:	b	77b8 <little2_contentTok+0xdd0>
    7780:	ldr	r2, [sp, #32]
    7784:	str	r2, [r6]
    7788:	mov	r0, #0
    778c:	b	77b8 <little2_contentTok+0xdd0>
    7790:	ldr	r1, [sp, #32]
    7794:	add	r0, r1, #2
    7798:	str	r0, [r6]
    779c:	mov	r0, #1
    77a0:	b	77b8 <little2_contentTok+0xdd0>
    77a4:	ldr	r2, [sp, #32]
    77a8:	str	r2, [r6]
    77ac:	mov	r0, #0
    77b0:	b	77b8 <little2_contentTok+0xdd0>
    77b4:	mvn	r0, #0
    77b8:	ldr	r4, [sp, #8]
    77bc:	ldr	r5, [sp, #12]
    77c0:	ldr	r6, [sp, #16]
    77c4:	ldr	r7, [sp, #20]
    77c8:	ldr	r8, [sp, #24]
    77cc:	ldr	r9, [sp, #28]
    77d0:	ldr	lr, [sp, #4]
    77d4:	add	sp, sp, #40	; 0x28
    77d8:	bx	lr
    77dc:	sub	r1, r5, r4
    77e0:	cmp	r1, #2
    77e4:	bge	77f0 <little2_contentTok+0xe08>
    77e8:	mvn	r0, #1
    77ec:	b	7e04 <little2_contentTok+0x141c>
    77f0:	str	r4, [r6]
    77f4:	mov	r0, #0
    77f8:	b	7e04 <little2_contentTok+0x141c>
    77fc:	sub	r0, r5, r4
    7800:	cmp	r0, #3
    7804:	bge	7810 <little2_contentTok+0xe28>
    7808:	mvn	r0, #1
    780c:	b	7e04 <little2_contentTok+0x141c>
    7810:	str	r4, [r6]
    7814:	mov	r0, #0
    7818:	b	7e04 <little2_contentTok+0x141c>
    781c:	sub	r1, r5, r4
    7820:	cmp	r1, #4
    7824:	bge	7830 <little2_contentTok+0xe48>
    7828:	mvn	r0, #1
    782c:	b	7e04 <little2_contentTok+0x141c>
    7830:	str	r4, [r6]
    7834:	mov	r0, #0
    7838:	b	7e04 <little2_contentTok+0x141c>
    783c:	add	r4, r4, #2
    7840:	b	6e90 <little2_contentTok+0x4a8>
    7844:	str	r4, [r6]
    7848:	mov	r0, #0
    784c:	b	7e04 <little2_contentTok+0x141c>
    7850:	mvn	r0, #0
    7854:	b	7e04 <little2_contentTok+0x141c>
    7858:	add	r3, r4, #2
    785c:	str	r3, [r6]
    7860:	mov	r0, #2
    7864:	b	7e04 <little2_contentTok+0x141c>
    7868:	add	r0, r4, #2
    786c:	cmp	r0, r5
    7870:	bne	787c <little2_contentTok+0xe94>
    7874:	mvn	r0, #0
    7878:	b	7e04 <little2_contentTok+0x141c>
    787c:	ldrb	r1, [r0, #1]
    7880:	cmp	r1, #0
    7884:	bne	78a4 <little2_contentTok+0xebc>
    7888:	ldrb	r2, [r0]
    788c:	cmp	r2, #62	; 0x3e
    7890:	bne	78a4 <little2_contentTok+0xebc>
    7894:	add	r1, r0, #2
    7898:	str	r1, [r6]
    789c:	mov	r0, #4
    78a0:	b	7e04 <little2_contentTok+0x141c>
    78a4:	str	r0, [r6]
    78a8:	mov	r0, #0
    78ac:	b	7e04 <little2_contentTok+0x141c>
    78b0:	str	r4, [r6]
    78b4:	mov	r0, #0
    78b8:	b	7e04 <little2_contentTok+0x141c>
    78bc:	mvn	r0, #0
    78c0:	b	7e04 <little2_contentTok+0x141c>
    78c4:	sub	ip, r5, r4
    78c8:	cmp	ip, #2
    78cc:	bge	78d8 <little2_contentTok+0xef0>
    78d0:	mvn	r0, #1
    78d4:	b	7e04 <little2_contentTok+0x141c>
    78d8:	str	r4, [r6]
    78dc:	mov	r0, #0
    78e0:	b	7e04 <little2_contentTok+0x141c>
    78e4:	sub	r2, r5, r4
    78e8:	cmp	r2, #3
    78ec:	bge	78f8 <little2_contentTok+0xf10>
    78f0:	mvn	r0, #1
    78f4:	b	7e04 <little2_contentTok+0x141c>
    78f8:	str	r4, [r6]
    78fc:	mov	r0, #0
    7900:	b	7e04 <little2_contentTok+0x141c>
    7904:	sub	r0, r5, r4
    7908:	cmp	r0, #4
    790c:	bge	7918 <little2_contentTok+0xf30>
    7910:	mvn	r0, #1
    7914:	b	7e04 <little2_contentTok+0x141c>
    7918:	str	r4, [r6]
    791c:	mov	r0, #0
    7920:	b	7e04 <little2_contentTok+0x141c>
    7924:	add	r4, r4, #2
    7928:	cmp	r4, r5
    792c:	bne	7938 <little2_contentTok+0xf50>
    7930:	mvn	r0, #0
    7934:	b	7e04 <little2_contentTok+0x141c>
    7938:	ldrb	r0, [r4, #1]
    793c:	cmp	r0, #0
    7940:	beq	7958 <little2_contentTok+0xf70>
    7944:	and	r0, r0, #255	; 0xff
    7948:	ldrb	r3, [r4]
    794c:	and	r1, r3, #255	; 0xff
    7950:	bl	52c8 <unicode_byte_type>
    7954:	b	7968 <little2_contentTok+0xf80>
    7958:	ldrb	r3, [r4]
    795c:	and	r2, r3, #255	; 0xff
    7960:	add	r2, r7, r2
    7964:	ldrb	r0, [r2, #76]	; 0x4c
    7968:	cmp	r0, #20
    796c:	beq	79b8 <little2_contentTok+0xfd0>
    7970:	cmp	r0, #27
    7974:	bne	79ac <little2_contentTok+0xfc4>
    7978:	add	r1, r4, #2
    797c:	mov	r3, r6
    7980:	mov	r2, r5
    7984:	mov	r0, r7
    7988:	ldr	r4, [sp, #8]
    798c:	ldr	r5, [sp, #12]
    7990:	ldr	r6, [sp, #16]
    7994:	ldr	r7, [sp, #20]
    7998:	ldr	r8, [sp, #24]
    799c:	ldr	r9, [sp, #28]
    79a0:	ldr	lr, [sp, #4]
    79a4:	add	sp, sp, #40	; 0x28
    79a8:	b	59c8 <little2_scanComment>
    79ac:	str	r4, [r6]
    79b0:	mov	r0, #0
    79b4:	b	7e04 <little2_contentTok+0x141c>
    79b8:	add	r0, r4, #2
    79bc:	sub	r1, r5, r0
    79c0:	cmp	r1, #12
    79c4:	bge	79d0 <little2_contentTok+0xfe8>
    79c8:	mvn	r0, #0
    79cc:	b	7a18 <little2_contentTok+0x1030>
    79d0:	mov	r2, #0
    79d4:	ldrb	r3, [r0, #1]
    79d8:	cmp	r3, #0
    79dc:	bne	7a10 <little2_contentTok+0x1028>
    79e0:	ldrb	r1, [r0]
    79e4:	ldr	ip, [pc, #160]	; 7a8c <little2_contentTok+0x10a4>
    79e8:	ldrb	r3, [ip, r2]
    79ec:	cmp	r1, r3
    79f0:	bne	7a10 <little2_contentTok+0x1028>
    79f4:	add	r2, r2, #1
    79f8:	add	r0, r0, #2
    79fc:	cmp	r2, #6
    7a00:	blt	79d4 <little2_contentTok+0xfec>
    7a04:	str	r0, [r6]
    7a08:	mov	r0, #8
    7a0c:	b	7a18 <little2_contentTok+0x1030>
    7a10:	str	r0, [r6]
    7a14:	mov	r0, #0
    7a18:	ldr	r4, [sp, #8]
    7a1c:	ldr	r5, [sp, #12]
    7a20:	ldr	r6, [sp, #16]
    7a24:	ldr	r7, [sp, #20]
    7a28:	ldr	r8, [sp, #24]
    7a2c:	ldr	r9, [sp, #28]
    7a30:	ldr	lr, [sp, #4]
    7a34:	add	sp, sp, #40	; 0x28
    7a38:	bx	lr
    7a3c:	add	r1, r4, #2
    7a40:	mov	r3, r6
    7a44:	mov	r2, r5
    7a48:	mov	r0, r7
    7a4c:	ldr	r4, [sp, #8]
    7a50:	ldr	r5, [sp, #12]
    7a54:	ldr	r6, [sp, #16]
    7a58:	ldr	r7, [sp, #20]
    7a5c:	ldr	r8, [sp, #24]
    7a60:	ldr	r9, [sp, #28]
    7a64:	ldr	lr, [sp, #4]
    7a68:	add	sp, sp, #40	; 0x28
    7a6c:	b	5c98 <little2_scanPi>
    7a70:	add	r8, r4, #2
    7a74:	cmp	r8, r5
    7a78:	bne	7a94 <little2_contentTok+0x10ac>
    7a7c:	mvn	r0, #0
    7a80:	b	7dd8 <little2_contentTok+0x13f0>
    7a84:	.word	0x00000000
    7a88:	.word	0x00000500
    7a8c:	.word	0x00001288
    7a90:	.word	0x00000600
    7a94:	ldrb	r2, [r4, #3]
    7a98:	cmp	r2, #0
    7a9c:	beq	7ab4 <little2_contentTok+0x10cc>
    7aa0:	and	r0, r2, #255	; 0xff
    7aa4:	ldrb	r3, [r4, #2]
    7aa8:	and	r1, r3, #255	; 0xff
    7aac:	bl	52c8 <unicode_byte_type>
    7ab0:	b	7ac4 <little2_contentTok+0x10dc>
    7ab4:	ldrb	ip, [r4, #2]
    7ab8:	and	r3, ip, #255	; 0xff
    7abc:	add	r0, r7, r3
    7ac0:	ldrb	r0, [r0, #76]	; 0x4c
    7ac4:	cmp	r0, #22
    7ac8:	bcs	7b44 <little2_contentTok+0x115c>
    7acc:	cmp	r0, #5
    7ad0:	beq	7b24 <little2_contentTok+0x113c>
    7ad4:	cmp	r0, #6
    7ad8:	beq	7b04 <little2_contentTok+0x111c>
    7adc:	cmp	r0, #7
    7ae0:	bne	7ba8 <little2_contentTok+0x11c0>
    7ae4:	sub	r3, r5, r8
    7ae8:	cmp	r3, #4
    7aec:	bge	7af8 <little2_contentTok+0x1110>
    7af0:	mvn	r0, #1
    7af4:	b	7dd8 <little2_contentTok+0x13f0>
    7af8:	str	r8, [r6]
    7afc:	mov	r0, #0
    7b00:	b	7dd8 <little2_contentTok+0x13f0>
    7b04:	sub	r1, r5, r8
    7b08:	cmp	r1, #3
    7b0c:	bge	7b18 <little2_contentTok+0x1130>
    7b10:	mvn	r0, #1
    7b14:	b	7dd8 <little2_contentTok+0x13f0>
    7b18:	str	r8, [r6]
    7b1c:	mov	r0, #0
    7b20:	b	7dd8 <little2_contentTok+0x13f0>
    7b24:	sub	r0, r5, r8
    7b28:	cmp	r0, #2
    7b2c:	bge	7b38 <little2_contentTok+0x1150>
    7b30:	mvn	r0, #1
    7b34:	b	7dd8 <little2_contentTok+0x13f0>
    7b38:	str	r8, [r6]
    7b3c:	mov	r0, #0
    7b40:	b	7dd8 <little2_contentTok+0x13f0>
    7b44:	cmp	r0, #22
    7b48:	beq	7bb4 <little2_contentTok+0x11cc>
    7b4c:	cmp	r0, #24
    7b50:	beq	7bb4 <little2_contentTok+0x11cc>
    7b54:	cmp	r0, #29
    7b58:	bne	7ba8 <little2_contentTok+0x11c0>
    7b5c:	ldr	r0, [pc, #1516]	; 8150 <little2_contentTok+0x1768>
    7b60:	ldrb	r2, [r8]
    7b64:	and	ip, r2, #255	; 0xff
    7b68:	asr	r4, ip, #5
    7b6c:	ldr	ip, [pc, #1504]	; 8154 <little2_contentTok+0x176c>
    7b70:	ldrb	r1, [r8, #1]
    7b74:	and	r3, r1, #255	; 0xff
    7b78:	ldrb	ip, [ip, r3]
    7b7c:	add	r3, r4, ip, lsl #3
    7b80:	ldr	ip, [r0, r3, lsl #2]
    7b84:	mov	r1, #1
    7b88:	and	r0, r2, #31
    7b8c:	lsl	r3, r1, r0
    7b90:	and	r0, ip, r3
    7b94:	cmp	r0, #0
    7b98:	bne	7bb4 <little2_contentTok+0x11cc>
    7b9c:	str	r8, [r6]
    7ba0:	mov	r0, #0
    7ba4:	b	7dd8 <little2_contentTok+0x13f0>
    7ba8:	str	r8, [r6]
    7bac:	mov	r0, #0
    7bb0:	b	7dd8 <little2_contentTok+0x13f0>
    7bb4:	add	r4, r8, #2
    7bb8:	cmp	r4, r5
    7bbc:	beq	7dd4 <little2_contentTok+0x13ec>
    7bc0:	ldrb	r3, [r4, #1]
    7bc4:	cmp	r3, #0
    7bc8:	beq	7be0 <little2_contentTok+0x11f8>
    7bcc:	and	r0, r3, #255	; 0xff
    7bd0:	ldrb	r2, [r4]
    7bd4:	and	r1, r2, #255	; 0xff
    7bd8:	bl	52c8 <unicode_byte_type>
    7bdc:	b	7bf0 <little2_contentTok+0x1208>
    7be0:	ldrb	r1, [r4]
    7be4:	and	r3, r1, #255	; 0xff
    7be8:	add	r2, r7, r3
    7bec:	ldrb	r0, [r2, #76]	; 0x4c
    7bf0:	sub	r2, r0, #5
    7bf4:	cmp	r2, #25
    7bf8:	bcs	7dc8 <little2_contentTok+0x13e0>
    7bfc:	add	pc, pc, r2, lsl #2
    7c00:	nop	{0}
    7c04:	b	7cbc <little2_contentTok+0x12d4>
    7c08:	b	7cdc <little2_contentTok+0x12f4>
    7c0c:	b	7cfc <little2_contentTok+0x1314>
    7c10:	b	7dc8 <little2_contentTok+0x13e0>
    7c14:	b	7d1c <little2_contentTok+0x1334>
    7c18:	b	7d1c <little2_contentTok+0x1334>
    7c1c:	b	7db8 <little2_contentTok+0x13d0>
    7c20:	b	7dc8 <little2_contentTok+0x13e0>
    7c24:	b	7dc8 <little2_contentTok+0x13e0>
    7c28:	b	7dc8 <little2_contentTok+0x13e0>
    7c2c:	b	7dc8 <little2_contentTok+0x13e0>
    7c30:	b	7dc8 <little2_contentTok+0x13e0>
    7c34:	b	7dc8 <little2_contentTok+0x13e0>
    7c38:	b	7dc8 <little2_contentTok+0x13e0>
    7c3c:	b	7dc8 <little2_contentTok+0x13e0>
    7c40:	b	7dc8 <little2_contentTok+0x13e0>
    7c44:	b	7d1c <little2_contentTok+0x1334>
    7c48:	b	7cb4 <little2_contentTok+0x12cc>
    7c4c:	b	7db0 <little2_contentTok+0x13c8>
    7c50:	b	7cb4 <little2_contentTok+0x12cc>
    7c54:	b	7cb4 <little2_contentTok+0x12cc>
    7c58:	b	7cb4 <little2_contentTok+0x12cc>
    7c5c:	b	7cb4 <little2_contentTok+0x12cc>
    7c60:	b	7dc8 <little2_contentTok+0x13e0>
    7c64:	b	7c68 <little2_contentTok+0x1280>
    7c68:	ldr	r0, [pc, #1248]	; 8150 <little2_contentTok+0x1768>
    7c6c:	ldrb	r1, [r4]
    7c70:	and	ip, r1, #255	; 0xff
    7c74:	asr	r8, ip, #5
    7c78:	ldr	ip, [pc, #1240]	; 8158 <little2_contentTok+0x1770>
    7c7c:	ldrb	r3, [r4, #1]
    7c80:	and	r2, r3, #255	; 0xff
    7c84:	ldrb	ip, [ip, r2]
    7c88:	add	ip, r8, ip, lsl #3
    7c8c:	ldr	r0, [r0, ip, lsl #2]
    7c90:	mov	r3, #1
    7c94:	and	r2, r1, #31
    7c98:	lsl	r1, r3, r2
    7c9c:	and	r2, r0, r1
    7ca0:	cmp	r2, #0
    7ca4:	bne	7cb4 <little2_contentTok+0x12cc>
    7ca8:	str	r4, [r6]
    7cac:	mov	r0, #0
    7cb0:	b	7dd8 <little2_contentTok+0x13f0>
    7cb4:	add	r4, r4, #2
    7cb8:	b	7bb8 <little2_contentTok+0x11d0>
    7cbc:	sub	r3, r5, r4
    7cc0:	cmp	r3, #2
    7cc4:	bge	7cd0 <little2_contentTok+0x12e8>
    7cc8:	mvn	r0, #1
    7ccc:	b	7dd8 <little2_contentTok+0x13f0>
    7cd0:	str	r4, [r6]
    7cd4:	mov	r0, #0
    7cd8:	b	7dd8 <little2_contentTok+0x13f0>
    7cdc:	sub	r0, r5, r4
    7ce0:	cmp	r0, #3
    7ce4:	bge	7cf0 <little2_contentTok+0x1308>
    7ce8:	mvn	r0, #1
    7cec:	b	7dd8 <little2_contentTok+0x13f0>
    7cf0:	str	r4, [r6]
    7cf4:	mov	r0, #0
    7cf8:	b	7dd8 <little2_contentTok+0x13f0>
    7cfc:	sub	r1, r5, r4
    7d00:	cmp	r1, #4
    7d04:	bge	7d10 <little2_contentTok+0x1328>
    7d08:	mvn	r0, #1
    7d0c:	b	7dd8 <little2_contentTok+0x13f0>
    7d10:	str	r4, [r6]
    7d14:	mov	r0, #0
    7d18:	b	7dd8 <little2_contentTok+0x13f0>
    7d1c:	add	r4, r4, #2
    7d20:	cmp	r4, r5
    7d24:	beq	7da8 <little2_contentTok+0x13c0>
    7d28:	ldrb	r1, [r4, #1]
    7d2c:	cmp	r1, #0
    7d30:	beq	7d48 <little2_contentTok+0x1360>
    7d34:	and	r0, r1, #255	; 0xff
    7d38:	ldrb	r1, [r4]
    7d3c:	and	r1, r1, #255	; 0xff
    7d40:	bl	52c8 <unicode_byte_type>
    7d44:	b	7d58 <little2_contentTok+0x1370>
    7d48:	ldrb	ip, [r4]
    7d4c:	and	r2, ip, #255	; 0xff
    7d50:	add	ip, r7, r2
    7d54:	ldrb	r0, [ip, #76]	; 0x4c
    7d58:	cmp	r0, #11
    7d5c:	bcs	7d74 <little2_contentTok+0x138c>
    7d60:	cmp	r0, #9
    7d64:	beq	7d90 <little2_contentTok+0x13a8>
    7d68:	cmp	r0, #10
    7d6c:	beq	7d90 <little2_contentTok+0x13a8>
    7d70:	b	7d84 <little2_contentTok+0x139c>
    7d74:	cmp	r0, #11
    7d78:	beq	7d98 <little2_contentTok+0x13b0>
    7d7c:	cmp	r0, #21
    7d80:	beq	7d90 <little2_contentTok+0x13a8>
    7d84:	str	r4, [r6]
    7d88:	mov	r0, #0
    7d8c:	b	7dd8 <little2_contentTok+0x13f0>
    7d90:	add	r4, r4, #2
    7d94:	b	7d20 <little2_contentTok+0x1338>
    7d98:	add	r0, r4, #2
    7d9c:	str	r0, [r6]
    7da0:	mov	r0, #5
    7da4:	b	7dd8 <little2_contentTok+0x13f0>
    7da8:	mvn	r0, #0
    7dac:	b	7dd8 <little2_contentTok+0x13f0>
    7db0:	add	r4, r4, #2
    7db4:	b	7bb8 <little2_contentTok+0x11d0>
    7db8:	add	r1, r4, #2
    7dbc:	str	r1, [r6]
    7dc0:	mov	r0, #5
    7dc4:	b	7dd8 <little2_contentTok+0x13f0>
    7dc8:	str	r4, [r6]
    7dcc:	mov	r0, #0
    7dd0:	b	7dd8 <little2_contentTok+0x13f0>
    7dd4:	mvn	r0, #0
    7dd8:	ldr	r4, [sp, #8]
    7ddc:	ldr	r5, [sp, #12]
    7de0:	ldr	r6, [sp, #16]
    7de4:	ldr	r7, [sp, #20]
    7de8:	ldr	r8, [sp, #24]
    7dec:	ldr	r9, [sp, #28]
    7df0:	ldr	lr, [sp, #4]
    7df4:	add	sp, sp, #40	; 0x28
    7df8:	bx	lr
    7dfc:	str	r4, [r6]
    7e00:	mov	r0, #0
    7e04:	ldr	r4, [sp, #8]
    7e08:	ldr	r5, [sp, #12]
    7e0c:	ldr	r6, [sp, #16]
    7e10:	ldr	r7, [sp, #20]
    7e14:	ldr	r8, [sp, #24]
    7e18:	ldr	r9, [sp, #28]
    7e1c:	ldr	lr, [sp, #4]
    7e20:	add	sp, sp, #40	; 0x28
    7e24:	bx	lr
    7e28:	add	r1, r8, #2
    7e2c:	mov	r3, r6
    7e30:	mov	r2, r5
    7e34:	mov	r0, r7
    7e38:	ldr	r4, [sp, #8]
    7e3c:	ldr	r5, [sp, #12]
    7e40:	ldr	r6, [sp, #16]
    7e44:	ldr	r7, [sp, #20]
    7e48:	ldr	r8, [sp, #24]
    7e4c:	ldr	r9, [sp, #28]
    7e50:	ldr	lr, [sp, #4]
    7e54:	add	sp, sp, #40	; 0x28
    7e58:	b	64cc <little2_scanRef>
    7e5c:	add	r4, r8, #2
    7e60:	cmp	r4, r5
    7e64:	bne	7e70 <little2_contentTok+0x1488>
    7e68:	mvn	r0, #2
    7e6c:	b	812c <little2_contentTok+0x1744>
    7e70:	ldrb	ip, [r4, #1]
    7e74:	cmp	ip, #0
    7e78:	beq	7e90 <little2_contentTok+0x14a8>
    7e7c:	and	r0, ip, #255	; 0xff
    7e80:	ldrb	ip, [r4]
    7e84:	and	r1, ip, #255	; 0xff
    7e88:	bl	52c8 <unicode_byte_type>
    7e8c:	b	7ea0 <little2_contentTok+0x14b8>
    7e90:	ldrb	r0, [r4]
    7e94:	and	r2, r0, #255	; 0xff
    7e98:	add	r3, r7, r2
    7e9c:	ldrb	r0, [r3, #76]	; 0x4c
    7ea0:	add	r3, r4, #2
    7ea4:	cmp	r0, #10
    7ea8:	moveq	r3, r3
    7eac:	movne	r3, r4
    7eb0:	str	r3, [r6]
    7eb4:	mov	r0, #7
    7eb8:	b	812c <little2_contentTok+0x1744>
    7ebc:	add	r2, r8, #2
    7ec0:	str	r2, [r6]
    7ec4:	mov	r0, #7
    7ec8:	b	812c <little2_contentTok+0x1744>
    7ecc:	add	r4, r8, #2
    7ed0:	cmp	r4, r5
    7ed4:	bne	7ee0 <little2_contentTok+0x14f8>
    7ed8:	mvn	r0, #4
    7edc:	b	812c <little2_contentTok+0x1744>
    7ee0:	ldrb	ip, [r4, #1]
    7ee4:	cmp	ip, #0
    7ee8:	bne	7f9c <little2_contentTok+0x15b4>
    7eec:	ldrb	r0, [r4]
    7ef0:	cmp	r0, #93	; 0x5d
    7ef4:	bne	7f9c <little2_contentTok+0x15b4>
    7ef8:	add	r3, r4, #2
    7efc:	cmp	r3, r5
    7f00:	bne	7f0c <little2_contentTok+0x1524>
    7f04:	mvn	r0, #4
    7f08:	b	812c <little2_contentTok+0x1744>
    7f0c:	ldrb	r2, [r3, #1]
    7f10:	cmp	r2, #0
    7f14:	bne	7f30 <little2_contentTok+0x1548>
    7f18:	ldrb	ip, [r3]
    7f1c:	cmp	ip, #62	; 0x3e
    7f20:	bne	7f30 <little2_contentTok+0x1548>
    7f24:	str	r3, [r6]
    7f28:	mov	r0, #0
    7f2c:	b	812c <little2_contentTok+0x1744>
    7f30:	sub	r4, r3, #2
    7f34:	b	7f9c <little2_contentTok+0x15b4>
    7f38:	sub	ip, r5, r8
    7f3c:	cmp	ip, #2
    7f40:	bge	7f4c <little2_contentTok+0x1564>
    7f44:	mvn	r0, #1
    7f48:	b	812c <little2_contentTok+0x1744>
    7f4c:	add	r4, r8, #2
    7f50:	b	7f9c <little2_contentTok+0x15b4>
    7f54:	sub	r3, r5, r8
    7f58:	cmp	r3, #3
    7f5c:	bge	7f68 <little2_contentTok+0x1580>
    7f60:	mvn	r0, #1
    7f64:	b	812c <little2_contentTok+0x1744>
    7f68:	add	r4, r8, #3
    7f6c:	b	7f9c <little2_contentTok+0x15b4>
    7f70:	sub	r2, r5, r8
    7f74:	cmp	r2, #4
    7f78:	bge	7f84 <little2_contentTok+0x159c>
    7f7c:	mvn	r0, #1
    7f80:	b	812c <little2_contentTok+0x1744>
    7f84:	add	r4, r8, #4
    7f88:	b	7f9c <little2_contentTok+0x15b4>
    7f8c:	str	r8, [r6]
    7f90:	mov	r0, #0
    7f94:	b	812c <little2_contentTok+0x1744>
    7f98:	add	r4, r8, #2
    7f9c:	cmp	r4, r5
    7fa0:	beq	8124 <little2_contentTok+0x173c>
    7fa4:	ldrb	r1, [r4, #1]
    7fa8:	cmp	r1, #0
    7fac:	beq	7fc4 <little2_contentTok+0x15dc>
    7fb0:	and	r0, r1, #255	; 0xff
    7fb4:	ldrb	r2, [r4]
    7fb8:	and	r1, r2, #255	; 0xff
    7fbc:	bl	52c8 <unicode_byte_type>
    7fc0:	b	7fd4 <little2_contentTok+0x15ec>
    7fc4:	ldrb	ip, [r4]
    7fc8:	and	ip, ip, #255	; 0xff
    7fcc:	add	ip, r7, ip
    7fd0:	ldrb	r0, [ip, #76]	; 0x4c
    7fd4:	cmp	r0, #11
    7fd8:	bcs	811c <little2_contentTok+0x1734>
    7fdc:	add	pc, pc, r0, lsl #2
    7fe0:	nop	{0}
    7fe4:	b	8110 <little2_contentTok+0x1728>
    7fe8:	b	8110 <little2_contentTok+0x1728>
    7fec:	b	8110 <little2_contentTok+0x1728>
    7ff0:	b	8110 <little2_contentTok+0x1728>
    7ff4:	b	80ac <little2_contentTok+0x16c4>
    7ff8:	b	8010 <little2_contentTok+0x1628>
    7ffc:	b	8044 <little2_contentTok+0x165c>
    8000:	b	8078 <little2_contentTok+0x1690>
    8004:	b	8110 <little2_contentTok+0x1728>
    8008:	b	8110 <little2_contentTok+0x1728>
    800c:	b	8110 <little2_contentTok+0x1728>
    8010:	mov	ip, #1
    8014:	mov	r1, #0
    8018:	sub	r2, r5, r4
    801c:	cmp	r2, #2
    8020:	movlt	r3, ip
    8024:	movge	r3, r1
    8028:	cmp	r3, #0
    802c:	beq	803c <little2_contentTok+0x1654>
    8030:	str	r4, [r6]
    8034:	mov	r0, #6
    8038:	b	812c <little2_contentTok+0x1744>
    803c:	add	r4, r4, #2
    8040:	b	7f9c <little2_contentTok+0x15b4>
    8044:	mov	r3, #1
    8048:	mov	r2, #0
    804c:	sub	r0, r5, r4
    8050:	cmp	r0, #3
    8054:	movlt	ip, r3
    8058:	movge	ip, r2
    805c:	cmp	ip, #0
    8060:	beq	8070 <little2_contentTok+0x1688>
    8064:	str	r4, [r6]
    8068:	mov	r0, #6
    806c:	b	812c <little2_contentTok+0x1744>
    8070:	add	r4, r4, #3
    8074:	b	7f9c <little2_contentTok+0x15b4>
    8078:	mov	r1, #1
    807c:	mov	r2, #0
    8080:	sub	r3, r5, r4
    8084:	cmp	r3, #4
    8088:	movlt	r2, r1
    808c:	movge	r2, r2
    8090:	cmp	r2, #0
    8094:	beq	80a4 <little2_contentTok+0x16bc>
    8098:	str	r4, [r6]
    809c:	mov	r0, #6
    80a0:	b	812c <little2_contentTok+0x1744>
    80a4:	add	r4, r4, #4
    80a8:	b	7f9c <little2_contentTok+0x15b4>
    80ac:	add	r3, r4, #2
    80b0:	cmp	r3, r5
    80b4:	beq	8110 <little2_contentTok+0x1728>
    80b8:	ldrb	ip, [r4, #3]
    80bc:	cmp	ip, #0
    80c0:	bne	8108 <little2_contentTok+0x1720>
    80c4:	ldrb	r1, [r4, #2]
    80c8:	cmp	r1, #93	; 0x5d
    80cc:	bne	8108 <little2_contentTok+0x1720>
    80d0:	add	r1, r4, #4
    80d4:	cmp	r1, r5
    80d8:	beq	8110 <little2_contentTok+0x1728>
    80dc:	ldrb	r2, [r4, #5]
    80e0:	cmp	r2, #0
    80e4:	bne	8100 <little2_contentTok+0x1718>
    80e8:	ldrb	r3, [r4, #4]
    80ec:	cmp	r3, #62	; 0x3e
    80f0:	bne	8100 <little2_contentTok+0x1718>
    80f4:	str	r1, [r6]
    80f8:	mov	r0, #0
    80fc:	b	812c <little2_contentTok+0x1744>
    8100:	add	r4, r4, #2
    8104:	b	7f9c <little2_contentTok+0x15b4>
    8108:	add	r4, r4, #2
    810c:	b	7f9c <little2_contentTok+0x15b4>
    8110:	str	r4, [r6]
    8114:	mov	r0, #6
    8118:	b	812c <little2_contentTok+0x1744>
    811c:	add	r4, r4, #2
    8120:	b	7f9c <little2_contentTok+0x15b4>
    8124:	str	r4, [r6]
    8128:	mov	r0, #6
    812c:	ldr	r4, [sp, #8]
    8130:	ldr	r5, [sp, #12]
    8134:	ldr	r6, [sp, #16]
    8138:	ldr	r7, [sp, #20]
    813c:	ldr	r8, [sp, #24]
    8140:	ldr	r9, [sp, #28]
    8144:	ldr	lr, [sp, #4]
    8148:	add	sp, sp, #40	; 0x28
    814c:	bx	lr
    8150:	.word	0x00000000
    8154:	.word	0x00000500
    8158:	.word	0x00000600

0000815c <little2_scanPercent>:
    815c:	mov	ip, sp
    8160:	sub	sp, sp, #32
    8164:	str	ip, [sp]
    8168:	str	lr, [sp, #4]
    816c:	str	r4, [sp, #8]
    8170:	str	r5, [sp, #12]
    8174:	str	r6, [sp, #16]
    8178:	str	r7, [sp, #20]
    817c:	str	r8, [sp, #24]
    8180:	mov	r6, r3
    8184:	mov	r5, r2
    8188:	mov	r7, r1
    818c:	mov	r4, r0
    8190:	cmp	r7, r5
    8194:	bne	81a0 <little2_scanPercent+0x44>
    8198:	mvn	r0, #0
    819c:	b	8498 <little2_scanPercent+0x33c>
    81a0:	ldrb	r1, [r7, #1]
    81a4:	cmp	r1, #0
    81a8:	beq	81c0 <little2_scanPercent+0x64>
    81ac:	and	r0, r1, #255	; 0xff
    81b0:	ldrb	r2, [r7]
    81b4:	and	r1, r2, #255	; 0xff
    81b8:	bl	52c8 <unicode_byte_type>
    81bc:	b	81d0 <little2_scanPercent+0x74>
    81c0:	ldrb	r2, [r7]
    81c4:	and	r0, r2, #255	; 0xff
    81c8:	add	r3, r4, r0
    81cc:	ldrb	r0, [r3, #76]	; 0x4c
    81d0:	sub	r2, r0, #5
    81d4:	cmp	r2, #26
    81d8:	bcs	8490 <little2_scanPercent+0x334>
    81dc:	add	pc, pc, r2, lsl #2
    81e0:	nop	{0}
    81e4:	b	8424 <little2_scanPercent+0x2c8>
    81e8:	b	8444 <little2_scanPercent+0x2e8>
    81ec:	b	8464 <little2_scanPercent+0x308>
    81f0:	b	8490 <little2_scanPercent+0x334>
    81f4:	b	8484 <little2_scanPercent+0x328>
    81f8:	b	8484 <little2_scanPercent+0x328>
    81fc:	b	8490 <little2_scanPercent+0x334>
    8200:	b	8490 <little2_scanPercent+0x334>
    8204:	b	8490 <little2_scanPercent+0x334>
    8208:	b	8490 <little2_scanPercent+0x334>
    820c:	b	8490 <little2_scanPercent+0x334>
    8210:	b	8490 <little2_scanPercent+0x334>
    8214:	b	8490 <little2_scanPercent+0x334>
    8218:	b	8490 <little2_scanPercent+0x334>
    821c:	b	8490 <little2_scanPercent+0x334>
    8220:	b	8490 <little2_scanPercent+0x334>
    8224:	b	8484 <little2_scanPercent+0x328>
    8228:	b	8298 <little2_scanPercent+0x13c>
    822c:	b	8490 <little2_scanPercent+0x334>
    8230:	b	8298 <little2_scanPercent+0x13c>
    8234:	b	8490 <little2_scanPercent+0x334>
    8238:	b	8490 <little2_scanPercent+0x334>
    823c:	b	8490 <little2_scanPercent+0x334>
    8240:	b	8490 <little2_scanPercent+0x334>
    8244:	b	824c <little2_scanPercent+0xf0>
    8248:	b	8484 <little2_scanPercent+0x328>
    824c:	ldr	r8, [pc, #612]	; 84b8 <little2_scanPercent+0x35c>
    8250:	ldrb	r2, [r7]
    8254:	and	r3, r2, #255	; 0xff
    8258:	asr	ip, r3, #5
    825c:	ldr	r3, [pc, #600]	; 84bc <little2_scanPercent+0x360>
    8260:	ldrb	r0, [r7, #1]
    8264:	and	r1, r0, #255	; 0xff
    8268:	ldrb	r3, [r3, r1]
    826c:	add	r0, ip, r3, lsl #3
    8270:	ldr	ip, [r8, r0, lsl #2]
    8274:	mov	r1, #1
    8278:	and	r3, r2, #31
    827c:	lsl	r3, r1, r3
    8280:	and	r0, ip, r3
    8284:	cmp	r0, #0
    8288:	bne	8298 <little2_scanPercent+0x13c>
    828c:	str	r7, [r6]
    8290:	mov	r0, #0
    8294:	b	8498 <little2_scanPercent+0x33c>
    8298:	add	r7, r7, #2
    829c:	cmp	r7, r5
    82a0:	beq	841c <little2_scanPercent+0x2c0>
    82a4:	ldrb	r0, [r7, #1]
    82a8:	cmp	r0, #0
    82ac:	beq	82c4 <little2_scanPercent+0x168>
    82b0:	and	r0, r0, #255	; 0xff
    82b4:	ldrb	r1, [r7]
    82b8:	and	r1, r1, #255	; 0xff
    82bc:	bl	52c8 <unicode_byte_type>
    82c0:	b	82d4 <little2_scanPercent+0x178>
    82c4:	ldrb	ip, [r7]
    82c8:	and	ip, ip, #255	; 0xff
    82cc:	add	ip, r4, ip
    82d0:	ldrb	r0, [ip, #76]	; 0x4c
    82d4:	sub	r0, r0, #5
    82d8:	cmp	r0, #25
    82dc:	bcs	8410 <little2_scanPercent+0x2b4>
    82e0:	add	pc, pc, r0, lsl #2
    82e4:	nop	{0}
    82e8:	b	83a0 <little2_scanPercent+0x244>
    82ec:	b	83c0 <little2_scanPercent+0x264>
    82f0:	b	83e0 <little2_scanPercent+0x284>
    82f4:	b	8410 <little2_scanPercent+0x2b4>
    82f8:	b	8410 <little2_scanPercent+0x2b4>
    82fc:	b	8410 <little2_scanPercent+0x2b4>
    8300:	b	8410 <little2_scanPercent+0x2b4>
    8304:	b	8410 <little2_scanPercent+0x2b4>
    8308:	b	8410 <little2_scanPercent+0x2b4>
    830c:	b	8410 <little2_scanPercent+0x2b4>
    8310:	b	8410 <little2_scanPercent+0x2b4>
    8314:	b	8410 <little2_scanPercent+0x2b4>
    8318:	b	8410 <little2_scanPercent+0x2b4>
    831c:	b	8400 <little2_scanPercent+0x2a4>
    8320:	b	8410 <little2_scanPercent+0x2b4>
    8324:	b	8410 <little2_scanPercent+0x2b4>
    8328:	b	8410 <little2_scanPercent+0x2b4>
    832c:	b	8398 <little2_scanPercent+0x23c>
    8330:	b	8410 <little2_scanPercent+0x2b4>
    8334:	b	8398 <little2_scanPercent+0x23c>
    8338:	b	8398 <little2_scanPercent+0x23c>
    833c:	b	8398 <little2_scanPercent+0x23c>
    8340:	b	8398 <little2_scanPercent+0x23c>
    8344:	b	8410 <little2_scanPercent+0x2b4>
    8348:	b	834c <little2_scanPercent+0x1f0>
    834c:	ldr	r0, [pc, #356]	; 84b8 <little2_scanPercent+0x35c>
    8350:	ldrb	r3, [r7]
    8354:	and	r2, r3, #255	; 0xff
    8358:	asr	r2, r2, #5
    835c:	ldr	r1, [pc, #348]	; 84c0 <little2_scanPercent+0x364>
    8360:	ldrb	ip, [r7, #1]
    8364:	and	ip, ip, #255	; 0xff
    8368:	ldrb	ip, [r1, ip]
    836c:	add	r1, r2, ip, lsl #3
    8370:	ldr	r2, [r0, r1, lsl #2]
    8374:	mov	r1, #1
    8378:	and	r3, r3, #31
    837c:	lsl	r1, r1, r3
    8380:	and	r0, r2, r1
    8384:	cmp	r0, #0
    8388:	bne	8398 <little2_scanPercent+0x23c>
    838c:	str	r7, [r6]
    8390:	mov	r0, #0
    8394:	b	8498 <little2_scanPercent+0x33c>
    8398:	add	r7, r7, #2
    839c:	b	829c <little2_scanPercent+0x140>
    83a0:	sub	r3, r5, r7
    83a4:	cmp	r3, #2
    83a8:	bge	83b4 <little2_scanPercent+0x258>
    83ac:	mvn	r0, #1
    83b0:	b	8498 <little2_scanPercent+0x33c>
    83b4:	str	r7, [r6]
    83b8:	mov	r0, #0
    83bc:	b	8498 <little2_scanPercent+0x33c>
    83c0:	sub	r3, r5, r7
    83c4:	cmp	r3, #3
    83c8:	bge	83d4 <little2_scanPercent+0x278>
    83cc:	mvn	r0, #1
    83d0:	b	8498 <little2_scanPercent+0x33c>
    83d4:	str	r7, [r6]
    83d8:	mov	r0, #0
    83dc:	b	8498 <little2_scanPercent+0x33c>
    83e0:	sub	r3, r5, r7
    83e4:	cmp	r3, #4
    83e8:	bge	83f4 <little2_scanPercent+0x298>
    83ec:	mvn	r0, #1
    83f0:	b	8498 <little2_scanPercent+0x33c>
    83f4:	str	r7, [r6]
    83f8:	mov	r0, #0
    83fc:	b	8498 <little2_scanPercent+0x33c>
    8400:	add	r1, r7, #2
    8404:	str	r1, [r6]
    8408:	mov	r0, #28
    840c:	b	8498 <little2_scanPercent+0x33c>
    8410:	str	r7, [r6]
    8414:	mov	r0, #0
    8418:	b	8498 <little2_scanPercent+0x33c>
    841c:	mvn	r0, #0
    8420:	b	8498 <little2_scanPercent+0x33c>
    8424:	sub	r1, r5, r7
    8428:	cmp	r1, #2
    842c:	bge	8438 <little2_scanPercent+0x2dc>
    8430:	mvn	r0, #1
    8434:	b	8498 <little2_scanPercent+0x33c>
    8438:	str	r7, [r6]
    843c:	mov	r0, #0
    8440:	b	8498 <little2_scanPercent+0x33c>
    8444:	sub	r1, r5, r7
    8448:	cmp	r1, #3
    844c:	bge	8458 <little2_scanPercent+0x2fc>
    8450:	mvn	r0, #1
    8454:	b	8498 <little2_scanPercent+0x33c>
    8458:	str	r7, [r6]
    845c:	mov	r0, #0
    8460:	b	8498 <little2_scanPercent+0x33c>
    8464:	sub	r2, r5, r7
    8468:	cmp	r2, #4
    846c:	bge	8478 <little2_scanPercent+0x31c>
    8470:	mvn	r0, #1
    8474:	b	8498 <little2_scanPercent+0x33c>
    8478:	str	r7, [r6]
    847c:	mov	r0, #0
    8480:	b	8498 <little2_scanPercent+0x33c>
    8484:	str	r7, [r6]
    8488:	mov	r0, #22
    848c:	b	8498 <little2_scanPercent+0x33c>
    8490:	str	r7, [r6]
    8494:	mov	r0, #0
    8498:	ldr	r4, [sp, #8]
    849c:	ldr	r5, [sp, #12]
    84a0:	ldr	r6, [sp, #16]
    84a4:	ldr	r7, [sp, #20]
    84a8:	ldr	r8, [sp, #24]
    84ac:	ldr	lr, [sp, #4]
    84b0:	add	sp, sp, #32
    84b4:	bx	lr
    84b8:	.word	0x00000000
    84bc:	.word	0x00000500
    84c0:	.word	0x00000600

000084c4 <little2_scanLit>:
    84c4:	mov	ip, sp
    84c8:	sub	sp, sp, #32
    84cc:	str	ip, [sp]
    84d0:	str	lr, [sp, #4]
    84d4:	str	r4, [sp, #8]
    84d8:	str	r5, [sp, #12]
    84dc:	str	r6, [sp, #16]
    84e0:	str	r7, [sp, #20]
    84e4:	str	r8, [sp, #24]
    84e8:	ldr	r8, [ip]
    84ec:	mov	r4, r3
    84f0:	mov	r5, r2
    84f4:	mov	r6, r1
    84f8:	mov	r7, r0
    84fc:	cmp	r5, r4
    8500:	beq	8684 <little2_scanLit+0x1c0>
    8504:	ldrb	r2, [r5, #1]
    8508:	cmp	r2, #0
    850c:	beq	8524 <little2_scanLit+0x60>
    8510:	and	r0, r2, #255	; 0xff
    8514:	ldrb	r1, [r5]
    8518:	and	r1, r1, #255	; 0xff
    851c:	bl	52c8 <unicode_byte_type>
    8520:	b	8534 <little2_scanLit+0x70>
    8524:	ldrb	r1, [r5]
    8528:	and	r3, r1, #255	; 0xff
    852c:	add	ip, r6, r3
    8530:	ldrb	r0, [ip, #76]	; 0x4c
    8534:	mov	r1, r0
    8538:	cmp	r1, #14
    853c:	bcs	867c <little2_scanLit+0x1b8>
    8540:	add	pc, pc, r1, lsl #2
    8544:	nop	{0}
    8548:	b	85d4 <little2_scanLit+0x110>
    854c:	b	85d4 <little2_scanLit+0x110>
    8550:	b	867c <little2_scanLit+0x1b8>
    8554:	b	867c <little2_scanLit+0x1b8>
    8558:	b	867c <little2_scanLit+0x1b8>
    855c:	b	8580 <little2_scanLit+0xbc>
    8560:	b	859c <little2_scanLit+0xd8>
    8564:	b	85b8 <little2_scanLit+0xf4>
    8568:	b	85d4 <little2_scanLit+0x110>
    856c:	b	867c <little2_scanLit+0x1b8>
    8570:	b	867c <little2_scanLit+0x1b8>
    8574:	b	867c <little2_scanLit+0x1b8>
    8578:	b	85e0 <little2_scanLit+0x11c>
    857c:	b	85e0 <little2_scanLit+0x11c>
    8580:	sub	r2, r4, r5
    8584:	cmp	r2, #2
    8588:	bge	8594 <little2_scanLit+0xd0>
    858c:	mvn	r0, #1
    8590:	b	8688 <little2_scanLit+0x1c4>
    8594:	add	r5, r5, #2
    8598:	b	84fc <little2_scanLit+0x38>
    859c:	sub	ip, r4, r5
    85a0:	cmp	ip, #3
    85a4:	bge	85b0 <little2_scanLit+0xec>
    85a8:	mvn	r0, #1
    85ac:	b	8688 <little2_scanLit+0x1c4>
    85b0:	add	r5, r5, #3
    85b4:	b	84fc <little2_scanLit+0x38>
    85b8:	sub	ip, r4, r5
    85bc:	cmp	ip, #4
    85c0:	bge	85cc <little2_scanLit+0x108>
    85c4:	mvn	r0, #1
    85c8:	b	8688 <little2_scanLit+0x1c4>
    85cc:	add	r5, r5, #4
    85d0:	b	84fc <little2_scanLit+0x38>
    85d4:	str	r5, [r8]
    85d8:	mov	r0, #0
    85dc:	b	8688 <little2_scanLit+0x1c4>
    85e0:	add	r5, r5, #2
    85e4:	cmp	r0, r7
    85e8:	bne	84fc <little2_scanLit+0x38>
    85ec:	cmp	r5, r4
    85f0:	bne	85fc <little2_scanLit+0x138>
    85f4:	mvn	r0, #26
    85f8:	b	8688 <little2_scanLit+0x1c4>
    85fc:	str	r5, [r8]
    8600:	ldrb	r0, [r5, #1]
    8604:	cmp	r0, #0
    8608:	beq	8620 <little2_scanLit+0x15c>
    860c:	and	r0, r0, #255	; 0xff
    8610:	ldrb	r1, [r5]
    8614:	and	r1, r1, #255	; 0xff
    8618:	bl	52c8 <unicode_byte_type>
    861c:	b	8630 <little2_scanLit+0x16c>
    8620:	ldrb	r0, [r5]
    8624:	and	r3, r0, #255	; 0xff
    8628:	add	r0, r6, r3
    862c:	ldrb	r0, [r0, #76]	; 0x4c
    8630:	cmp	r0, #20
    8634:	bcs	8654 <little2_scanLit+0x190>
    8638:	cmp	r0, #9
    863c:	beq	8674 <little2_scanLit+0x1b0>
    8640:	cmp	r0, #10
    8644:	beq	8674 <little2_scanLit+0x1b0>
    8648:	cmp	r0, #11
    864c:	beq	8674 <little2_scanLit+0x1b0>
    8650:	b	866c <little2_scanLit+0x1a8>
    8654:	cmp	r0, #20
    8658:	beq	8674 <little2_scanLit+0x1b0>
    865c:	cmp	r0, #21
    8660:	beq	8674 <little2_scanLit+0x1b0>
    8664:	cmp	r0, #30
    8668:	beq	8674 <little2_scanLit+0x1b0>
    866c:	mov	r0, #0
    8670:	b	8688 <little2_scanLit+0x1c4>
    8674:	mov	r0, #27
    8678:	b	8688 <little2_scanLit+0x1c4>
    867c:	add	r5, r5, #2
    8680:	b	84fc <little2_scanLit+0x38>
    8684:	mvn	r0, #0
    8688:	ldr	r4, [sp, #8]
    868c:	ldr	r5, [sp, #12]
    8690:	ldr	r6, [sp, #16]
    8694:	ldr	r7, [sp, #20]
    8698:	ldr	r8, [sp, #24]
    869c:	ldr	lr, [sp, #4]
    86a0:	add	sp, sp, #32
    86a4:	bx	lr

000086a8 <little2_prologTok>:
    86a8:	mov	ip, sp
    86ac:	sub	sp, sp, #40	; 0x28
    86b0:	str	ip, [sp, #4]
    86b4:	str	lr, [sp, #8]
    86b8:	str	r4, [sp, #16]
    86bc:	str	r5, [sp, #20]
    86c0:	str	r6, [sp, #24]
    86c4:	str	r7, [sp, #28]
    86c8:	str	r8, [sp, #32]
    86cc:	str	r9, [sp, #36]	; 0x24
    86d0:	mov	r6, r3
    86d4:	mov	r4, r2
    86d8:	mov	r7, r1
    86dc:	mov	r5, r0
    86e0:	cmp	r7, r4
    86e4:	bne	86f0 <little2_prologTok+0x48>
    86e8:	mvn	r0, #3
    86ec:	b	954c <little2_prologTok+0xea4>
    86f0:	sub	r3, r4, r7
    86f4:	and	r2, r3, #1
    86f8:	cmp	r2, #0
    86fc:	beq	8718 <little2_prologTok+0x70>
    8700:	bic	r2, r3, #1
    8704:	cmp	r2, #0
    8708:	bne	8714 <little2_prologTok+0x6c>
    870c:	mvn	r0, #0
    8710:	b	954c <little2_prologTok+0xea4>
    8714:	add	r4, r7, r2
    8718:	ldrb	r3, [r7, #1]
    871c:	cmp	r3, #0
    8720:	beq	8738 <little2_prologTok+0x90>
    8724:	and	r0, r3, #255	; 0xff
    8728:	ldrb	r1, [r7]
    872c:	and	r1, r1, #255	; 0xff
    8730:	bl	52c8 <unicode_byte_type>
    8734:	b	8748 <little2_prologTok+0xa0>
    8738:	ldrb	r2, [r7]
    873c:	and	r1, r2, #255	; 0xff
    8740:	add	ip, r5, r1
    8744:	ldrb	r0, [ip, #76]	; 0x4c
    8748:	sub	r0, r0, #2
    874c:	cmp	r0, #35	; 0x23
    8750:	bcs	9544 <little2_prologTok+0xe9c>
    8754:	add	pc, pc, r0, lsl #2
    8758:	nop	{0}
    875c:	b	8820 <little2_prologTok+0x178>
    8760:	b	9544 <little2_prologTok+0xe9c>
    8764:	b	8c10 <little2_prologTok+0x568>
    8768:	b	90bc <little2_prologTok+0xa14>
    876c:	b	90dc <little2_prologTok+0xa34>
    8770:	b	90fc <little2_prologTok+0xa54>
    8774:	b	9544 <little2_prologTok+0xe9c>
    8778:	b	8b28 <little2_prologTok+0x480>
    877c:	b	8b40 <little2_prologTok+0x498>
    8780:	b	8db4 <little2_prologTok+0x70c>
    8784:	b	87e8 <little2_prologTok+0x140>
    8788:	b	8804 <little2_prologTok+0x15c>
    878c:	b	9544 <little2_prologTok+0xe9c>
    8790:	b	9544 <little2_prologTok+0xe9c>
    8794:	b	9544 <little2_prologTok+0xe9c>
    8798:	b	9544 <little2_prologTok+0xe9c>
    879c:	b	9544 <little2_prologTok+0xe9c>
    87a0:	b	8dc4 <little2_prologTok+0x71c>
    87a4:	b	8c00 <little2_prologTok+0x558>
    87a8:	b	8b40 <little2_prologTok+0x498>
    87ac:	b	911c <little2_prologTok+0xa74>
    87b0:	b	9128 <little2_prologTok+0xa80>
    87b4:	b	911c <little2_prologTok+0xa74>
    87b8:	b	9128 <little2_prologTok+0xa80>
    87bc:	b	9128 <little2_prologTok+0xa80>
    87c0:	b	9128 <little2_prologTok+0xa80>
    87c4:	b	9544 <little2_prologTok+0xe9c>
    87c8:	b	9134 <little2_prologTok+0xa8c>
    87cc:	b	8bbc <little2_prologTok+0x514>
    87d0:	b	8c84 <little2_prologTok+0x5dc>
    87d4:	b	8c94 <little2_prologTok+0x5ec>
    87d8:	b	9544 <little2_prologTok+0xe9c>
    87dc:	b	9544 <little2_prologTok+0xe9c>
    87e0:	b	8bf0 <little2_prologTok+0x548>
    87e4:	b	8da4 <little2_prologTok+0x6fc>
    87e8:	mov	r0, #12
    87ec:	add	r2, r7, #2
    87f0:	str	r6, [sp]
    87f4:	mov	r3, r4
    87f8:	mov	r1, r5
    87fc:	bl	84c4 <little2_scanLit>
    8800:	b	954c <little2_prologTok+0xea4>
    8804:	mov	r0, #13
    8808:	add	r2, r7, #2
    880c:	str	r6, [sp]
    8810:	mov	r3, r4
    8814:	mov	r1, r5
    8818:	bl	84c4 <little2_scanLit>
    881c:	b	954c <little2_prologTok+0xea4>
    8820:	add	r8, r7, #2
    8824:	cmp	r8, r4
    8828:	bne	8834 <little2_prologTok+0x18c>
    882c:	mvn	r0, #0
    8830:	b	954c <little2_prologTok+0xea4>
    8834:	ldrb	r2, [r8, #1]
    8838:	cmp	r2, #0
    883c:	beq	8854 <little2_prologTok+0x1ac>
    8840:	and	r0, r2, #255	; 0xff
    8844:	ldrb	r3, [r8]
    8848:	and	r1, r3, #255	; 0xff
    884c:	bl	52c8 <unicode_byte_type>
    8850:	b	8864 <little2_prologTok+0x1bc>
    8854:	ldrb	r0, [r8]
    8858:	and	r1, r0, #255	; 0xff
    885c:	add	r3, r5, r1
    8860:	ldrb	r0, [r3, #76]	; 0x4c
    8864:	sub	ip, r0, #5
    8868:	cmp	ip, #25
    886c:	bcs	8b1c <little2_prologTok+0x474>
    8870:	add	pc, pc, ip, lsl #2
    8874:	nop	{0}
    8878:	b	8b0c <little2_prologTok+0x464>
    887c:	b	8b0c <little2_prologTok+0x464>
    8880:	b	8b0c <little2_prologTok+0x464>
    8884:	b	8b1c <little2_prologTok+0x474>
    8888:	b	8b1c <little2_prologTok+0x474>
    888c:	b	8b1c <little2_prologTok+0x474>
    8890:	b	8b1c <little2_prologTok+0x474>
    8894:	b	8b1c <little2_prologTok+0x474>
    8898:	b	8b1c <little2_prologTok+0x474>
    889c:	b	8b1c <little2_prologTok+0x474>
    88a0:	b	8ad8 <little2_prologTok+0x430>
    88a4:	b	88dc <little2_prologTok+0x234>
    88a8:	b	8b1c <little2_prologTok+0x474>
    88ac:	b	8b1c <little2_prologTok+0x474>
    88b0:	b	8b1c <little2_prologTok+0x474>
    88b4:	b	8b1c <little2_prologTok+0x474>
    88b8:	b	8b1c <little2_prologTok+0x474>
    88bc:	b	8b0c <little2_prologTok+0x464>
    88c0:	b	8b1c <little2_prologTok+0x474>
    88c4:	b	8b0c <little2_prologTok+0x464>
    88c8:	b	8b1c <little2_prologTok+0x474>
    88cc:	b	8b1c <little2_prologTok+0x474>
    88d0:	b	8b1c <little2_prologTok+0x474>
    88d4:	b	8b1c <little2_prologTok+0x474>
    88d8:	b	8b0c <little2_prologTok+0x464>
    88dc:	add	r7, r8, #2
    88e0:	cmp	r7, r4
    88e4:	bne	88f0 <little2_prologTok+0x248>
    88e8:	mvn	r0, #0
    88ec:	b	8ab4 <little2_prologTok+0x40c>
    88f0:	ldrb	r2, [r8, #3]
    88f4:	cmp	r2, #0
    88f8:	beq	8910 <little2_prologTok+0x268>
    88fc:	and	r0, r2, #255	; 0xff
    8900:	ldrb	r2, [r8, #2]
    8904:	and	r1, r2, #255	; 0xff
    8908:	bl	52c8 <unicode_byte_type>
    890c:	b	8920 <little2_prologTok+0x278>
    8910:	ldrb	ip, [r8, #2]
    8914:	and	r1, ip, #255	; 0xff
    8918:	add	r0, r5, r1
    891c:	ldrb	r0, [r0, #76]	; 0x4c
    8920:	cmp	r0, #24
    8924:	bcs	894c <little2_prologTok+0x2a4>
    8928:	cmp	r0, #20
    892c:	beq	893c <little2_prologTok+0x294>
    8930:	cmp	r0, #22
    8934:	beq	899c <little2_prologTok+0x2f4>
    8938:	b	8990 <little2_prologTok+0x2e8>
    893c:	add	r1, r7, #2
    8940:	str	r1, [r6]
    8944:	mov	r0, #33	; 0x21
    8948:	b	8ab4 <little2_prologTok+0x40c>
    894c:	cmp	r0, #24
    8950:	beq	899c <little2_prologTok+0x2f4>
    8954:	cmp	r0, #27
    8958:	bne	8990 <little2_prologTok+0x2e8>
    895c:	add	r1, r7, #2
    8960:	mov	r3, r6
    8964:	mov	r2, r4
    8968:	mov	r0, r5
    896c:	ldr	r4, [sp, #16]
    8970:	ldr	r5, [sp, #20]
    8974:	ldr	r6, [sp, #24]
    8978:	ldr	r7, [sp, #28]
    897c:	ldr	r8, [sp, #32]
    8980:	ldr	r9, [sp, #36]	; 0x24
    8984:	ldr	lr, [sp, #8]
    8988:	add	sp, sp, #40	; 0x28
    898c:	b	59c8 <little2_scanComment>
    8990:	str	r7, [r6]
    8994:	mov	r0, #0
    8998:	b	8ab4 <little2_prologTok+0x40c>
    899c:	add	r7, r7, #2
    89a0:	cmp	r7, r4
    89a4:	beq	8ab0 <little2_prologTok+0x408>
    89a8:	ldrb	ip, [r7, #1]
    89ac:	cmp	ip, #0
    89b0:	beq	89c8 <little2_prologTok+0x320>
    89b4:	and	r0, ip, #255	; 0xff
    89b8:	ldrb	r1, [r7]
    89bc:	and	r1, r1, #255	; 0xff
    89c0:	bl	52c8 <unicode_byte_type>
    89c4:	b	89d8 <little2_prologTok+0x330>
    89c8:	ldrb	r0, [r7]
    89cc:	and	r3, r0, #255	; 0xff
    89d0:	add	r2, r5, r3
    89d4:	ldrb	r0, [r2, #76]	; 0x4c
    89d8:	cmp	r0, #22
    89dc:	bcs	89fc <little2_prologTok+0x354>
    89e0:	cmp	r0, #9
    89e4:	beq	8a84 <little2_prologTok+0x3dc>
    89e8:	cmp	r0, #10
    89ec:	beq	8a84 <little2_prologTok+0x3dc>
    89f0:	cmp	r0, #21
    89f4:	beq	8a84 <little2_prologTok+0x3dc>
    89f8:	b	8a9c <little2_prologTok+0x3f4>
    89fc:	cmp	r0, #22
    8a00:	beq	8aa8 <little2_prologTok+0x400>
    8a04:	cmp	r0, #24
    8a08:	beq	8aa8 <little2_prologTok+0x400>
    8a0c:	cmp	r0, #30
    8a10:	bne	8a9c <little2_prologTok+0x3f4>
    8a14:	add	r1, r7, #2
    8a18:	cmp	r1, r4
    8a1c:	bne	8a28 <little2_prologTok+0x380>
    8a20:	mvn	r0, #0
    8a24:	b	8ab4 <little2_prologTok+0x40c>
    8a28:	ldrb	r0, [r7, #3]
    8a2c:	cmp	r0, #0
    8a30:	beq	8a48 <little2_prologTok+0x3a0>
    8a34:	and	r0, r0, #255	; 0xff
    8a38:	ldrb	r2, [r7, #2]
    8a3c:	and	r1, r2, #255	; 0xff
    8a40:	bl	52c8 <unicode_byte_type>
    8a44:	b	8a58 <little2_prologTok+0x3b0>
    8a48:	ldrb	r3, [r7, #2]
    8a4c:	and	r3, r3, #255	; 0xff
    8a50:	add	r1, r5, r3
    8a54:	ldrb	r0, [r1, #76]	; 0x4c
    8a58:	cmp	r0, #21
    8a5c:	bcs	8a74 <little2_prologTok+0x3cc>
    8a60:	cmp	r0, #9
    8a64:	beq	8a90 <little2_prologTok+0x3e8>
    8a68:	cmp	r0, #10
    8a6c:	beq	8a90 <little2_prologTok+0x3e8>
    8a70:	b	8a84 <little2_prologTok+0x3dc>
    8a74:	cmp	r0, #21
    8a78:	beq	8a90 <little2_prologTok+0x3e8>
    8a7c:	cmp	r0, #30
    8a80:	beq	8a90 <little2_prologTok+0x3e8>
    8a84:	str	r7, [r6]
    8a88:	mov	r0, #16
    8a8c:	b	8ab4 <little2_prologTok+0x40c>
    8a90:	str	r7, [r6]
    8a94:	mov	r0, #0
    8a98:	b	8ab4 <little2_prologTok+0x40c>
    8a9c:	str	r7, [r6]
    8aa0:	mov	r0, #0
    8aa4:	b	8ab4 <little2_prologTok+0x40c>
    8aa8:	add	r7, r7, #2
    8aac:	b	89a0 <little2_prologTok+0x2f8>
    8ab0:	mvn	r0, #0
    8ab4:	ldr	r4, [sp, #16]
    8ab8:	ldr	r5, [sp, #20]
    8abc:	ldr	r6, [sp, #24]
    8ac0:	ldr	r7, [sp, #28]
    8ac4:	ldr	r8, [sp, #32]
    8ac8:	ldr	r9, [sp, #36]	; 0x24
    8acc:	ldr	lr, [sp, #8]
    8ad0:	add	sp, sp, #40	; 0x28
    8ad4:	bx	lr
    8ad8:	add	r1, r8, #2
    8adc:	mov	r3, r6
    8ae0:	mov	r2, r4
    8ae4:	mov	r0, r5
    8ae8:	ldr	r4, [sp, #16]
    8aec:	ldr	r5, [sp, #20]
    8af0:	ldr	r6, [sp, #24]
    8af4:	ldr	r7, [sp, #28]
    8af8:	ldr	r8, [sp, #32]
    8afc:	ldr	r9, [sp, #36]	; 0x24
    8b00:	ldr	lr, [sp, #8]
    8b04:	add	sp, sp, #40	; 0x28
    8b08:	b	5c98 <little2_scanPi>
    8b0c:	sub	r0, r8, #2
    8b10:	str	r0, [r6]
    8b14:	mov	r0, #29
    8b18:	b	954c <little2_prologTok+0xea4>
    8b1c:	str	r8, [r6]
    8b20:	mov	r0, #0
    8b24:	b	954c <little2_prologTok+0xea4>
    8b28:	add	ip, r7, #2
    8b2c:	cmp	ip, r4
    8b30:	bne	8b40 <little2_prologTok+0x498>
    8b34:	str	r4, [r6]
    8b38:	mvn	r0, #14
    8b3c:	b	954c <little2_prologTok+0xea4>
    8b40:	add	r7, r7, #2
    8b44:	cmp	r7, r4
    8b48:	beq	8bb0 <little2_prologTok+0x508>
    8b4c:	ldrb	r3, [r7, #1]
    8b50:	cmp	r3, #0
    8b54:	beq	8b6c <little2_prologTok+0x4c4>
    8b58:	and	r0, r3, #255	; 0xff
    8b5c:	ldrb	r3, [r7]
    8b60:	and	r1, r3, #255	; 0xff
    8b64:	bl	52c8 <unicode_byte_type>
    8b68:	b	8b7c <little2_prologTok+0x4d4>
    8b6c:	ldrb	r1, [r7]
    8b70:	and	ip, r1, #255	; 0xff
    8b74:	add	r3, r5, ip
    8b78:	ldrb	r0, [r3, #76]	; 0x4c
    8b7c:	cmp	r0, #9
    8b80:	beq	8b98 <little2_prologTok+0x4f0>
    8b84:	cmp	r0, #10
    8b88:	beq	8b40 <little2_prologTok+0x498>
    8b8c:	cmp	r0, #21
    8b90:	beq	8b40 <little2_prologTok+0x498>
    8b94:	b	8ba4 <little2_prologTok+0x4fc>
    8b98:	add	ip, r7, #2
    8b9c:	cmp	ip, r4
    8ba0:	bne	8b40 <little2_prologTok+0x498>
    8ba4:	str	r7, [r6]
    8ba8:	mov	r0, #15
    8bac:	b	954c <little2_prologTok+0xea4>
    8bb0:	str	r7, [r6]
    8bb4:	mov	r0, #15
    8bb8:	b	954c <little2_prologTok+0xea4>
    8bbc:	add	r1, r7, #2
    8bc0:	mov	r3, r6
    8bc4:	mov	r2, r4
    8bc8:	mov	r0, r5
    8bcc:	ldr	r4, [sp, #16]
    8bd0:	ldr	r5, [sp, #20]
    8bd4:	ldr	r6, [sp, #24]
    8bd8:	ldr	r7, [sp, #28]
    8bdc:	ldr	r8, [sp, #32]
    8be0:	ldr	r9, [sp, #36]	; 0x24
    8be4:	ldr	lr, [sp, #8]
    8be8:	add	sp, sp, #40	; 0x28
    8bec:	b	815c <little2_scanPercent>
    8bf0:	add	r1, r7, #2
    8bf4:	str	r1, [r6]
    8bf8:	mov	r0, #38	; 0x26
    8bfc:	b	954c <little2_prologTok+0xea4>
    8c00:	add	r3, r7, #2
    8c04:	str	r3, [r6]
    8c08:	mov	r0, #25
    8c0c:	b	954c <little2_prologTok+0xea4>
    8c10:	add	r3, r7, #2
    8c14:	cmp	r3, r4
    8c18:	bne	8c24 <little2_prologTok+0x57c>
    8c1c:	mvn	r0, #25
    8c20:	b	954c <little2_prologTok+0xea4>
    8c24:	ldrb	r1, [r3, #1]
    8c28:	cmp	r1, #0
    8c2c:	bne	8c78 <little2_prologTok+0x5d0>
    8c30:	ldrb	r0, [r3]
    8c34:	cmp	r0, #93	; 0x5d
    8c38:	bne	8c78 <little2_prologTok+0x5d0>
    8c3c:	add	r2, r3, #2
    8c40:	cmp	r2, r4
    8c44:	bne	8c50 <little2_prologTok+0x5a8>
    8c48:	mvn	r0, #0
    8c4c:	b	954c <little2_prologTok+0xea4>
    8c50:	ldrb	ip, [r3, #3]
    8c54:	cmp	ip, #0
    8c58:	bne	8c78 <little2_prologTok+0x5d0>
    8c5c:	ldrb	r2, [r3, #2]
    8c60:	cmp	r2, #62	; 0x3e
    8c64:	bne	8c78 <little2_prologTok+0x5d0>
    8c68:	add	ip, r3, #4
    8c6c:	str	ip, [r6]
    8c70:	mov	r0, #34	; 0x22
    8c74:	b	954c <little2_prologTok+0xea4>
    8c78:	str	r3, [r6]
    8c7c:	mov	r0, #26
    8c80:	b	954c <little2_prologTok+0xea4>
    8c84:	add	r3, r7, #2
    8c88:	str	r3, [r6]
    8c8c:	mov	r0, #23
    8c90:	b	954c <little2_prologTok+0xea4>
    8c94:	add	r7, r7, #2
    8c98:	cmp	r7, r4
    8c9c:	bne	8ca8 <little2_prologTok+0x600>
    8ca0:	mvn	r0, #23
    8ca4:	b	954c <little2_prologTok+0xea4>
    8ca8:	ldrb	r1, [r7, #1]
    8cac:	cmp	r1, #0
    8cb0:	beq	8cc8 <little2_prologTok+0x620>
    8cb4:	and	r0, r1, #255	; 0xff
    8cb8:	ldrb	r3, [r7]
    8cbc:	and	r1, r3, #255	; 0xff
    8cc0:	bl	52c8 <unicode_byte_type>
    8cc4:	b	8cd8 <little2_prologTok+0x630>
    8cc8:	ldrb	r2, [r7]
    8ccc:	and	r1, r2, #255	; 0xff
    8cd0:	add	r2, r5, r1
    8cd4:	ldrb	r0, [r2, #76]	; 0x4c
    8cd8:	sub	r0, r0, #9
    8cdc:	cmp	r0, #28
    8ce0:	bcs	8d98 <little2_prologTok+0x6f0>
    8ce4:	add	pc, pc, r0, lsl #2
    8ce8:	nop	{0}
    8cec:	b	8d8c <little2_prologTok+0x6e4>
    8cf0:	b	8d8c <little2_prologTok+0x6e4>
    8cf4:	b	8d8c <little2_prologTok+0x6e4>
    8cf8:	b	8d98 <little2_prologTok+0x6f0>
    8cfc:	b	8d98 <little2_prologTok+0x6f0>
    8d00:	b	8d98 <little2_prologTok+0x6f0>
    8d04:	b	8d6c <little2_prologTok+0x6c4>
    8d08:	b	8d98 <little2_prologTok+0x6f0>
    8d0c:	b	8d98 <little2_prologTok+0x6f0>
    8d10:	b	8d98 <little2_prologTok+0x6f0>
    8d14:	b	8d98 <little2_prologTok+0x6f0>
    8d18:	b	8d98 <little2_prologTok+0x6f0>
    8d1c:	b	8d8c <little2_prologTok+0x6e4>
    8d20:	b	8d98 <little2_prologTok+0x6f0>
    8d24:	b	8d98 <little2_prologTok+0x6f0>
    8d28:	b	8d98 <little2_prologTok+0x6f0>
    8d2c:	b	8d98 <little2_prologTok+0x6f0>
    8d30:	b	8d98 <little2_prologTok+0x6f0>
    8d34:	b	8d98 <little2_prologTok+0x6f0>
    8d38:	b	8d98 <little2_prologTok+0x6f0>
    8d3c:	b	8d98 <little2_prologTok+0x6f0>
    8d40:	b	8d98 <little2_prologTok+0x6f0>
    8d44:	b	8d98 <little2_prologTok+0x6f0>
    8d48:	b	8d8c <little2_prologTok+0x6e4>
    8d4c:	b	8d5c <little2_prologTok+0x6b4>
    8d50:	b	8d7c <little2_prologTok+0x6d4>
    8d54:	b	8d8c <little2_prologTok+0x6e4>
    8d58:	b	8d8c <little2_prologTok+0x6e4>
    8d5c:	add	r2, r7, #2
    8d60:	str	r2, [r6]
    8d64:	mov	r0, #36	; 0x24
    8d68:	b	954c <little2_prologTok+0xea4>
    8d6c:	add	r3, r7, #2
    8d70:	str	r3, [r6]
    8d74:	mov	r0, #35	; 0x23
    8d78:	b	954c <little2_prologTok+0xea4>
    8d7c:	add	r1, r7, #2
    8d80:	str	r1, [r6]
    8d84:	mov	r0, #37	; 0x25
    8d88:	b	954c <little2_prologTok+0xea4>
    8d8c:	str	r7, [r6]
    8d90:	mov	r0, #24
    8d94:	b	954c <little2_prologTok+0xea4>
    8d98:	str	r7, [r6]
    8d9c:	mov	r0, #0
    8da0:	b	954c <little2_prologTok+0xea4>
    8da4:	add	r1, r7, #2
    8da8:	str	r1, [r6]
    8dac:	mov	r0, #21
    8db0:	b	954c <little2_prologTok+0xea4>
    8db4:	add	ip, r7, #2
    8db8:	str	ip, [r6]
    8dbc:	mov	r0, #17
    8dc0:	b	954c <little2_prologTok+0xea4>
    8dc4:	add	r8, r7, #2
    8dc8:	cmp	r8, r4
    8dcc:	bne	8dd8 <little2_prologTok+0x730>
    8dd0:	mvn	r0, #0
    8dd4:	b	9098 <little2_prologTok+0x9f0>
    8dd8:	ldrb	r0, [r7, #3]
    8ddc:	cmp	r0, #0
    8de0:	beq	8df8 <little2_prologTok+0x750>
    8de4:	and	r0, r0, #255	; 0xff
    8de8:	ldrb	r1, [r7, #2]
    8dec:	and	r1, r1, #255	; 0xff
    8df0:	bl	52c8 <unicode_byte_type>
    8df4:	b	8e08 <little2_prologTok+0x760>
    8df8:	ldrb	ip, [r7, #2]
    8dfc:	and	r1, ip, #255	; 0xff
    8e00:	add	r0, r5, r1
    8e04:	ldrb	r0, [r0, #76]	; 0x4c
    8e08:	cmp	r0, #22
    8e0c:	bcs	8e88 <little2_prologTok+0x7e0>
    8e10:	cmp	r0, #5
    8e14:	beq	8e68 <little2_prologTok+0x7c0>
    8e18:	cmp	r0, #6
    8e1c:	beq	8e48 <little2_prologTok+0x7a0>
    8e20:	cmp	r0, #7
    8e24:	bne	8eec <little2_prologTok+0x844>
    8e28:	sub	r3, r4, r8
    8e2c:	cmp	r3, #4
    8e30:	bge	8e3c <little2_prologTok+0x794>
    8e34:	mvn	r0, #1
    8e38:	b	9098 <little2_prologTok+0x9f0>
    8e3c:	str	r8, [r6]
    8e40:	mov	r0, #0
    8e44:	b	9098 <little2_prologTok+0x9f0>
    8e48:	sub	ip, r4, r8
    8e4c:	cmp	ip, #3
    8e50:	bge	8e5c <little2_prologTok+0x7b4>
    8e54:	mvn	r0, #1
    8e58:	b	9098 <little2_prologTok+0x9f0>
    8e5c:	str	r8, [r6]
    8e60:	mov	r0, #0
    8e64:	b	9098 <little2_prologTok+0x9f0>
    8e68:	sub	r1, r4, r8
    8e6c:	cmp	r1, #2
    8e70:	bge	8e7c <little2_prologTok+0x7d4>
    8e74:	mvn	r0, #1
    8e78:	b	9098 <little2_prologTok+0x9f0>
    8e7c:	str	r8, [r6]
    8e80:	mov	r0, #0
    8e84:	b	9098 <little2_prologTok+0x9f0>
    8e88:	cmp	r0, #22
    8e8c:	beq	8ef8 <little2_prologTok+0x850>
    8e90:	cmp	r0, #24
    8e94:	beq	8ef8 <little2_prologTok+0x850>
    8e98:	cmp	r0, #29
    8e9c:	bne	8eec <little2_prologTok+0x844>
    8ea0:	ldr	r2, [pc, #1736]	; 9570 <little2_prologTok+0xec8>
    8ea4:	ldrb	r3, [r8]
    8ea8:	and	ip, r3, #255	; 0xff
    8eac:	asr	r0, ip, #5
    8eb0:	ldr	ip, [pc, #1724]	; 9574 <little2_prologTok+0xecc>
    8eb4:	ldrb	r1, [r8, #1]
    8eb8:	and	r1, r1, #255	; 0xff
    8ebc:	ldrb	r1, [ip, r1]
    8ec0:	add	ip, r0, r1, lsl #3
    8ec4:	ldr	r1, [r2, ip, lsl #2]
    8ec8:	mov	r0, #1
    8ecc:	and	ip, r3, #31
    8ed0:	lsl	ip, r0, ip
    8ed4:	and	r3, r1, ip
    8ed8:	cmp	r3, #0
    8edc:	bne	8ef8 <little2_prologTok+0x850>
    8ee0:	str	r8, [r6]
    8ee4:	mov	r0, #0
    8ee8:	b	9098 <little2_prologTok+0x9f0>
    8eec:	str	r8, [r6]
    8ef0:	mov	r0, #0
    8ef4:	b	9098 <little2_prologTok+0x9f0>
    8ef8:	add	r7, r8, #2
    8efc:	cmp	r7, r4
    8f00:	beq	9094 <little2_prologTok+0x9ec>
    8f04:	ldrb	r3, [r7, #1]
    8f08:	cmp	r3, #0
    8f0c:	beq	8f24 <little2_prologTok+0x87c>
    8f10:	and	r0, r3, #255	; 0xff
    8f14:	ldrb	ip, [r7]
    8f18:	and	r1, ip, #255	; 0xff
    8f1c:	bl	52c8 <unicode_byte_type>
    8f20:	b	8f34 <little2_prologTok+0x88c>
    8f24:	ldrb	ip, [r7]
    8f28:	and	r0, ip, #255	; 0xff
    8f2c:	add	r2, r5, r0
    8f30:	ldrb	r0, [r2, #76]	; 0x4c
    8f34:	sub	r2, r0, #5
    8f38:	cmp	r2, #32
    8f3c:	bcs	9088 <little2_prologTok+0x9e0>
    8f40:	add	pc, pc, r2, lsl #2
    8f44:	nop	{0}
    8f48:	b	901c <little2_prologTok+0x974>
    8f4c:	b	903c <little2_prologTok+0x994>
    8f50:	b	905c <little2_prologTok+0x9b4>
    8f54:	b	9088 <little2_prologTok+0x9e0>
    8f58:	b	907c <little2_prologTok+0x9d4>
    8f5c:	b	907c <little2_prologTok+0x9d4>
    8f60:	b	907c <little2_prologTok+0x9d4>
    8f64:	b	9088 <little2_prologTok+0x9e0>
    8f68:	b	9088 <little2_prologTok+0x9e0>
    8f6c:	b	9088 <little2_prologTok+0x9e0>
    8f70:	b	9088 <little2_prologTok+0x9e0>
    8f74:	b	9088 <little2_prologTok+0x9e0>
    8f78:	b	9088 <little2_prologTok+0x9e0>
    8f7c:	b	9088 <little2_prologTok+0x9e0>
    8f80:	b	9088 <little2_prologTok+0x9e0>
    8f84:	b	9088 <little2_prologTok+0x9e0>
    8f88:	b	907c <little2_prologTok+0x9d4>
    8f8c:	b	9014 <little2_prologTok+0x96c>
    8f90:	b	9088 <little2_prologTok+0x9e0>
    8f94:	b	9014 <little2_prologTok+0x96c>
    8f98:	b	9014 <little2_prologTok+0x96c>
    8f9c:	b	9014 <little2_prologTok+0x96c>
    8fa0:	b	9014 <little2_prologTok+0x96c>
    8fa4:	b	9088 <little2_prologTok+0x9e0>
    8fa8:	b	8fc8 <little2_prologTok+0x920>
    8fac:	b	907c <little2_prologTok+0x9d4>
    8fb0:	b	9088 <little2_prologTok+0x9e0>
    8fb4:	b	907c <little2_prologTok+0x9d4>
    8fb8:	b	9088 <little2_prologTok+0x9e0>
    8fbc:	b	9088 <little2_prologTok+0x9e0>
    8fc0:	b	9088 <little2_prologTok+0x9e0>
    8fc4:	b	907c <little2_prologTok+0x9d4>
    8fc8:	ldr	r8, [pc, #1440]	; 9570 <little2_prologTok+0xec8>
    8fcc:	ldrb	r1, [r7]
    8fd0:	and	r2, r1, #255	; 0xff
    8fd4:	asr	r3, r2, #5
    8fd8:	ldr	r0, [pc, #1432]	; 9578 <little2_prologTok+0xed0>
    8fdc:	ldrb	r2, [r7, #1]
    8fe0:	and	ip, r2, #255	; 0xff
    8fe4:	ldrb	ip, [r0, ip]
    8fe8:	add	r3, r3, ip, lsl #3
    8fec:	ldr	r0, [r8, r3, lsl #2]
    8ff0:	mov	r2, #1
    8ff4:	and	ip, r1, #31
    8ff8:	lsl	r2, r2, ip
    8ffc:	and	r2, r0, r2
    9000:	cmp	r2, #0
    9004:	bne	9014 <little2_prologTok+0x96c>
    9008:	str	r7, [r6]
    900c:	mov	r0, #0
    9010:	b	9098 <little2_prologTok+0x9f0>
    9014:	add	r7, r7, #2
    9018:	b	8efc <little2_prologTok+0x854>
    901c:	sub	r1, r4, r7
    9020:	cmp	r1, #2
    9024:	bge	9030 <little2_prologTok+0x988>
    9028:	mvn	r0, #1
    902c:	b	9098 <little2_prologTok+0x9f0>
    9030:	str	r7, [r6]
    9034:	mov	r0, #0
    9038:	b	9098 <little2_prologTok+0x9f0>
    903c:	sub	r1, r4, r7
    9040:	cmp	r1, #3
    9044:	bge	9050 <little2_prologTok+0x9a8>
    9048:	mvn	r0, #1
    904c:	b	9098 <little2_prologTok+0x9f0>
    9050:	str	r7, [r6]
    9054:	mov	r0, #0
    9058:	b	9098 <little2_prologTok+0x9f0>
    905c:	sub	ip, r4, r7
    9060:	cmp	ip, #4
    9064:	bge	9070 <little2_prologTok+0x9c8>
    9068:	mvn	r0, #1
    906c:	b	9098 <little2_prologTok+0x9f0>
    9070:	str	r7, [r6]
    9074:	mov	r0, #0
    9078:	b	9098 <little2_prologTok+0x9f0>
    907c:	str	r7, [r6]
    9080:	mov	r0, #20
    9084:	b	9098 <little2_prologTok+0x9f0>
    9088:	str	r7, [r6]
    908c:	mov	r0, #0
    9090:	b	9098 <little2_prologTok+0x9f0>
    9094:	mvn	r0, #19
    9098:	ldr	r4, [sp, #16]
    909c:	ldr	r5, [sp, #20]
    90a0:	ldr	r6, [sp, #24]
    90a4:	ldr	r7, [sp, #28]
    90a8:	ldr	r8, [sp, #32]
    90ac:	ldr	r9, [sp, #36]	; 0x24
    90b0:	ldr	lr, [sp, #8]
    90b4:	add	sp, sp, #40	; 0x28
    90b8:	bx	lr
    90bc:	sub	ip, r4, r7
    90c0:	cmp	ip, #2
    90c4:	bge	90d0 <little2_prologTok+0xa28>
    90c8:	mvn	r0, #1
    90cc:	b	954c <little2_prologTok+0xea4>
    90d0:	str	r7, [r6]
    90d4:	mov	r0, #0
    90d8:	b	954c <little2_prologTok+0xea4>
    90dc:	sub	r3, r4, r7
    90e0:	cmp	r3, #3
    90e4:	bge	90f0 <little2_prologTok+0xa48>
    90e8:	mvn	r0, #1
    90ec:	b	954c <little2_prologTok+0xea4>
    90f0:	str	r7, [r6]
    90f4:	mov	r0, #0
    90f8:	b	954c <little2_prologTok+0xea4>
    90fc:	sub	r2, r4, r7
    9100:	cmp	r2, #4
    9104:	bge	9110 <little2_prologTok+0xa68>
    9108:	mvn	r0, #1
    910c:	b	954c <little2_prologTok+0xea4>
    9110:	str	r7, [r6]
    9114:	mov	r0, #0
    9118:	b	954c <little2_prologTok+0xea4>
    911c:	mov	r8, #18
    9120:	add	r7, r7, #2
    9124:	b	91a4 <little2_prologTok+0xafc>
    9128:	mov	r8, #19
    912c:	add	r7, r7, #2
    9130:	b	91a4 <little2_prologTok+0xafc>
    9134:	ldr	r3, [pc, #1076]	; 9570 <little2_prologTok+0xec8>
    9138:	ldrb	r1, [r7]
    913c:	and	r2, r1, #255	; 0xff
    9140:	asr	ip, r2, #5
    9144:	ldr	r8, [pc, #1064]	; 9574 <little2_prologTok+0xecc>
    9148:	ldrb	r2, [r7, #1]
    914c:	and	r0, r2, #255	; 0xff
    9150:	ldrb	r2, [r8, r0]
    9154:	add	r2, ip, r2, lsl #3
    9158:	ldr	r8, [r3, r2, lsl #2]
    915c:	mov	r2, #1
    9160:	and	r1, r1, #31
    9164:	lsl	r2, r2, r1
    9168:	and	r1, r8, r2
    916c:	cmp	r1, #0
    9170:	beq	9180 <little2_prologTok+0xad8>
    9174:	add	r7, r7, #2
    9178:	mov	r8, #18
    917c:	b	91a4 <little2_prologTok+0xafc>
    9180:	ldr	r1, [pc, #1008]	; 9578 <little2_prologTok+0xed0>
    9184:	ldrb	r1, [r1, r0]
    9188:	add	r0, ip, r1, lsl #3
    918c:	ldr	r1, [r3, r0, lsl #2]
    9190:	and	r3, r1, r2
    9194:	cmp	r3, #0
    9198:	beq	9544 <little2_prologTok+0xe9c>
    919c:	add	r7, r7, #2
    91a0:	mov	r8, #19
    91a4:	cmp	r7, r4
    91a8:	beq	953c <little2_prologTok+0xe94>
    91ac:	ldrb	ip, [r7, #1]
    91b0:	cmp	ip, #0
    91b4:	beq	91cc <little2_prologTok+0xb24>
    91b8:	and	r0, ip, #255	; 0xff
    91bc:	ldrb	r2, [r7]
    91c0:	and	r1, r2, #255	; 0xff
    91c4:	bl	52c8 <unicode_byte_type>
    91c8:	b	91dc <little2_prologTok+0xb34>
    91cc:	ldrb	ip, [r7]
    91d0:	and	r1, ip, #255	; 0xff
    91d4:	add	r2, r5, r1
    91d8:	ldrb	r0, [r2, #76]	; 0x4c
    91dc:	sub	r2, r0, #5
    91e0:	cmp	r2, #32
    91e4:	bcs	9530 <little2_prologTok+0xe88>
    91e8:	add	pc, pc, r2, lsl #2
    91ec:	nop	{0}
    91f0:	b	92c4 <little2_prologTok+0xc1c>
    91f4:	b	92e4 <little2_prologTok+0xc3c>
    91f8:	b	9304 <little2_prologTok+0xc5c>
    91fc:	b	9530 <little2_prologTok+0xe88>
    9200:	b	9324 <little2_prologTok+0xc7c>
    9204:	b	9324 <little2_prologTok+0xc7c>
    9208:	b	9324 <little2_prologTok+0xc7c>
    920c:	b	9530 <little2_prologTok+0xe88>
    9210:	b	9530 <little2_prologTok+0xe88>
    9214:	b	9530 <little2_prologTok+0xe88>
    9218:	b	950c <little2_prologTok+0xe64>
    921c:	b	9530 <little2_prologTok+0xe88>
    9220:	b	9530 <little2_prologTok+0xe88>
    9224:	b	9530 <little2_prologTok+0xe88>
    9228:	b	9530 <little2_prologTok+0xe88>
    922c:	b	9324 <little2_prologTok+0xc7c>
    9230:	b	9324 <little2_prologTok+0xc7c>
    9234:	b	92bc <little2_prologTok+0xc14>
    9238:	b	9330 <little2_prologTok+0xc88>
    923c:	b	92bc <little2_prologTok+0xc14>
    9240:	b	92bc <little2_prologTok+0xc14>
    9244:	b	92bc <little2_prologTok+0xc14>
    9248:	b	92bc <little2_prologTok+0xc14>
    924c:	b	9530 <little2_prologTok+0xe88>
    9250:	b	9270 <little2_prologTok+0xbc8>
    9254:	b	9324 <little2_prologTok+0xc7c>
    9258:	b	9530 <little2_prologTok+0xe88>
    925c:	b	9324 <little2_prologTok+0xc7c>
    9260:	b	94e8 <little2_prologTok+0xe40>
    9264:	b	94c4 <little2_prologTok+0xe1c>
    9268:	b	9324 <little2_prologTok+0xc7c>
    926c:	b	9324 <little2_prologTok+0xc7c>
    9270:	ldr	r9, [pc, #760]	; 9570 <little2_prologTok+0xec8>
    9274:	ldrb	r0, [r7]
    9278:	and	r3, r0, #255	; 0xff
    927c:	asr	r1, r3, #5
    9280:	ldr	r3, [pc, #752]	; 9578 <little2_prologTok+0xed0>
    9284:	ldrb	r2, [r7, #1]
    9288:	and	ip, r2, #255	; 0xff
    928c:	ldrb	ip, [r3, ip]
    9290:	add	r1, r1, ip, lsl #3
    9294:	ldr	r1, [r9, r1, lsl #2]
    9298:	mov	r2, #1
    929c:	and	r0, r0, #31
    92a0:	lsl	r3, r2, r0
    92a4:	and	r3, r1, r3
    92a8:	cmp	r3, #0
    92ac:	bne	92bc <little2_prologTok+0xc14>
    92b0:	str	r7, [r6]
    92b4:	mov	r0, #0
    92b8:	b	954c <little2_prologTok+0xea4>
    92bc:	add	r7, r7, #2
    92c0:	b	91a4 <little2_prologTok+0xafc>
    92c4:	sub	r1, r4, r7
    92c8:	cmp	r1, #2
    92cc:	bge	92d8 <little2_prologTok+0xc30>
    92d0:	mvn	r0, #1
    92d4:	b	954c <little2_prologTok+0xea4>
    92d8:	str	r7, [r6]
    92dc:	mov	r0, #0
    92e0:	b	954c <little2_prologTok+0xea4>
    92e4:	sub	r2, r4, r7
    92e8:	cmp	r2, #3
    92ec:	bge	92f8 <little2_prologTok+0xc50>
    92f0:	mvn	r0, #1
    92f4:	b	954c <little2_prologTok+0xea4>
    92f8:	str	r7, [r6]
    92fc:	mov	r0, #0
    9300:	b	954c <little2_prologTok+0xea4>
    9304:	sub	r1, r4, r7
    9308:	cmp	r1, #4
    930c:	bge	9318 <little2_prologTok+0xc70>
    9310:	mvn	r0, #1
    9314:	b	954c <little2_prologTok+0xea4>
    9318:	str	r7, [r6]
    931c:	mov	r0, #0
    9320:	b	954c <little2_prologTok+0xea4>
    9324:	str	r7, [r6]
    9328:	mov	r0, r8
    932c:	b	954c <little2_prologTok+0xea4>
    9330:	add	r7, r7, #2
    9334:	cmp	r8, #18
    9338:	beq	934c <little2_prologTok+0xca4>
    933c:	cmp	r8, #41	; 0x29
    9340:	bne	91a4 <little2_prologTok+0xafc>
    9344:	mov	r8, #19
    9348:	b	91a4 <little2_prologTok+0xafc>
    934c:	cmp	r7, r4
    9350:	bne	935c <little2_prologTok+0xcb4>
    9354:	mvn	r0, #0
    9358:	b	954c <little2_prologTok+0xea4>
    935c:	mov	r8, #41	; 0x29
    9360:	ldrb	r0, [r7, #1]
    9364:	cmp	r0, #0
    9368:	beq	9380 <little2_prologTok+0xcd8>
    936c:	and	r0, r0, #255	; 0xff
    9370:	ldrb	r1, [r7]
    9374:	and	r1, r1, #255	; 0xff
    9378:	bl	52c8 <unicode_byte_type>
    937c:	b	9390 <little2_prologTok+0xce8>
    9380:	ldrb	r1, [r7]
    9384:	and	ip, r1, #255	; 0xff
    9388:	add	r0, r5, ip
    938c:	ldrb	r0, [r0, #76]	; 0x4c
    9390:	sub	r0, r0, #5
    9394:	cmp	r0, #25
    9398:	bcs	94bc <little2_prologTok+0xe14>
    939c:	add	pc, pc, r0, lsl #2
    93a0:	nop	{0}
    93a4:	b	945c <little2_prologTok+0xdb4>
    93a8:	b	947c <little2_prologTok+0xdd4>
    93ac:	b	949c <little2_prologTok+0xdf4>
    93b0:	b	94bc <little2_prologTok+0xe14>
    93b4:	b	94bc <little2_prologTok+0xe14>
    93b8:	b	94bc <little2_prologTok+0xe14>
    93bc:	b	94bc <little2_prologTok+0xe14>
    93c0:	b	94bc <little2_prologTok+0xe14>
    93c4:	b	94bc <little2_prologTok+0xe14>
    93c8:	b	94bc <little2_prologTok+0xe14>
    93cc:	b	94bc <little2_prologTok+0xe14>
    93d0:	b	94bc <little2_prologTok+0xe14>
    93d4:	b	94bc <little2_prologTok+0xe14>
    93d8:	b	94bc <little2_prologTok+0xe14>
    93dc:	b	94bc <little2_prologTok+0xe14>
    93e0:	b	94bc <little2_prologTok+0xe14>
    93e4:	b	94bc <little2_prologTok+0xe14>
    93e8:	b	9454 <little2_prologTok+0xdac>
    93ec:	b	94bc <little2_prologTok+0xe14>
    93f0:	b	9454 <little2_prologTok+0xdac>
    93f4:	b	9454 <little2_prologTok+0xdac>
    93f8:	b	9454 <little2_prologTok+0xdac>
    93fc:	b	9454 <little2_prologTok+0xdac>
    9400:	b	94bc <little2_prologTok+0xe14>
    9404:	b	9408 <little2_prologTok+0xd60>
    9408:	ldr	r3, [pc, #352]	; 9570 <little2_prologTok+0xec8>
    940c:	ldrb	ip, [r7]
    9410:	and	r0, ip, #255	; 0xff
    9414:	asr	r2, r0, #5
    9418:	ldr	r0, [pc, #344]	; 9578 <little2_prologTok+0xed0>
    941c:	ldrb	r1, [r7, #1]
    9420:	and	r1, r1, #255	; 0xff
    9424:	ldrb	r0, [r0, r1]
    9428:	add	r0, r2, r0, lsl #3
    942c:	ldr	r0, [r3, r0, lsl #2]
    9430:	mov	r2, #1
    9434:	and	r1, ip, #31
    9438:	lsl	r3, r2, r1
    943c:	and	r1, r0, r3
    9440:	cmp	r1, #0
    9444:	bne	9454 <little2_prologTok+0xdac>
    9448:	str	r7, [r6]
    944c:	mov	r0, #0
    9450:	b	954c <little2_prologTok+0xea4>
    9454:	add	r7, r7, #2
    9458:	b	91a4 <little2_prologTok+0xafc>
    945c:	sub	r3, r4, r7
    9460:	cmp	r3, #2
    9464:	bge	9470 <little2_prologTok+0xdc8>
    9468:	mvn	r0, #1
    946c:	b	954c <little2_prologTok+0xea4>
    9470:	str	r7, [r6]
    9474:	mov	r0, #0
    9478:	b	954c <little2_prologTok+0xea4>
    947c:	sub	ip, r4, r7
    9480:	cmp	ip, #3
    9484:	bge	9490 <little2_prologTok+0xde8>
    9488:	mvn	r0, #1
    948c:	b	954c <little2_prologTok+0xea4>
    9490:	str	r7, [r6]
    9494:	mov	r0, #0
    9498:	b	954c <little2_prologTok+0xea4>
    949c:	sub	r3, r4, r7
    94a0:	cmp	r3, #4
    94a4:	bge	94b0 <little2_prologTok+0xe08>
    94a8:	mvn	r0, #1
    94ac:	b	954c <little2_prologTok+0xea4>
    94b0:	str	r7, [r6]
    94b4:	mov	r0, #0
    94b8:	b	954c <little2_prologTok+0xea4>
    94bc:	mov	r8, #19
    94c0:	b	91a4 <little2_prologTok+0xafc>
    94c4:	cmp	r8, #19
    94c8:	bne	94d8 <little2_prologTok+0xe30>
    94cc:	str	r7, [r6]
    94d0:	mov	r0, #0
    94d4:	b	954c <little2_prologTok+0xea4>
    94d8:	add	r3, r7, #2
    94dc:	str	r3, [r6]
    94e0:	mov	r0, #32
    94e4:	b	954c <little2_prologTok+0xea4>
    94e8:	cmp	r8, #19
    94ec:	bne	94fc <little2_prologTok+0xe54>
    94f0:	str	r7, [r6]
    94f4:	mov	r0, #0
    94f8:	b	954c <little2_prologTok+0xea4>
    94fc:	add	r3, r7, #2
    9500:	str	r3, [r6]
    9504:	mov	r0, #31
    9508:	b	954c <little2_prologTok+0xea4>
    950c:	cmp	r8, #19
    9510:	bne	9520 <little2_prologTok+0xe78>
    9514:	str	r7, [r6]
    9518:	mov	r0, #0
    951c:	b	954c <little2_prologTok+0xea4>
    9520:	add	ip, r7, #2
    9524:	str	ip, [r6]
    9528:	mov	r0, #30
    952c:	b	954c <little2_prologTok+0xea4>
    9530:	str	r7, [r6]
    9534:	mov	r0, #0
    9538:	b	954c <little2_prologTok+0xea4>
    953c:	rsb	r0, r8, #0
    9540:	b	954c <little2_prologTok+0xea4>
    9544:	str	r7, [r6]
    9548:	mov	r0, #0
    954c:	ldr	r4, [sp, #16]
    9550:	ldr	r5, [sp, #20]
    9554:	ldr	r6, [sp, #24]
    9558:	ldr	r7, [sp, #28]
    955c:	ldr	r8, [sp, #32]
    9560:	ldr	r9, [sp, #36]	; 0x24
    9564:	ldr	lr, [sp, #8]
    9568:	add	sp, sp, #40	; 0x28
    956c:	bx	lr
    9570:	.word	0x00000000
    9574:	.word	0x00000500
    9578:	.word	0x00000600

0000957c <little2_attributeValueTok>:
    957c:	mov	ip, sp
    9580:	sub	sp, sp, #32
    9584:	str	ip, [sp]
    9588:	str	lr, [sp, #4]
    958c:	str	r4, [sp, #8]
    9590:	str	r5, [sp, #12]
    9594:	str	r6, [sp, #16]
    9598:	str	r7, [sp, #20]
    959c:	str	r8, [sp, #24]
    95a0:	mov	r6, r3
    95a4:	mov	r8, r2
    95a8:	mov	r4, r1
    95ac:	mov	r7, r0
    95b0:	cmp	r4, r8
    95b4:	bne	95c0 <little2_attributeValueTok+0x44>
    95b8:	mvn	r0, #3
    95bc:	b	9794 <little2_attributeValueTok+0x218>
    95c0:	mov	r5, r4
    95c4:	cmp	r4, r8
    95c8:	beq	978c <little2_attributeValueTok+0x210>
    95cc:	ldrb	r1, [r4, #1]
    95d0:	cmp	r1, #0
    95d4:	beq	95ec <little2_attributeValueTok+0x70>
    95d8:	and	r0, r1, #255	; 0xff
    95dc:	ldrb	r2, [r4]
    95e0:	and	r1, r2, #255	; 0xff
    95e4:	bl	52c8 <unicode_byte_type>
    95e8:	b	95fc <little2_attributeValueTok+0x80>
    95ec:	ldrb	r3, [r4]
    95f0:	and	r3, r3, #255	; 0xff
    95f4:	add	r3, r7, r3
    95f8:	ldrb	r0, [r3, #76]	; 0x4c
    95fc:	sub	r1, r0, #2
    9600:	cmp	r1, #20
    9604:	bcs	9784 <little2_attributeValueTok+0x208>
    9608:	add	pc, pc, r1, lsl #2
    960c:	nop	{0}
    9610:	b	96bc <little2_attributeValueTok+0x140>
    9614:	b	9678 <little2_attributeValueTok+0xfc>
    9618:	b	9784 <little2_attributeValueTok+0x208>
    961c:	b	9660 <little2_attributeValueTok+0xe4>
    9620:	b	9668 <little2_attributeValueTok+0xec>
    9624:	b	9670 <little2_attributeValueTok+0xf4>
    9628:	b	9784 <little2_attributeValueTok+0x208>
    962c:	b	96ec <little2_attributeValueTok+0x170>
    9630:	b	96c8 <little2_attributeValueTok+0x14c>
    9634:	b	9784 <little2_attributeValueTok+0x208>
    9638:	b	9784 <little2_attributeValueTok+0x208>
    963c:	b	9784 <little2_attributeValueTok+0x208>
    9640:	b	9784 <little2_attributeValueTok+0x208>
    9644:	b	9784 <little2_attributeValueTok+0x208>
    9648:	b	9784 <little2_attributeValueTok+0x208>
    964c:	b	9784 <little2_attributeValueTok+0x208>
    9650:	b	9784 <little2_attributeValueTok+0x208>
    9654:	b	9784 <little2_attributeValueTok+0x208>
    9658:	b	9784 <little2_attributeValueTok+0x208>
    965c:	b	9760 <little2_attributeValueTok+0x1e4>
    9660:	add	r4, r4, #2
    9664:	b	95c4 <little2_attributeValueTok+0x48>
    9668:	add	r4, r4, #3
    966c:	b	95c4 <little2_attributeValueTok+0x48>
    9670:	add	r4, r4, #4
    9674:	b	95c4 <little2_attributeValueTok+0x48>
    9678:	cmp	r4, r5
    967c:	bne	96b0 <little2_attributeValueTok+0x134>
    9680:	add	r1, r4, #2
    9684:	mov	r3, r6
    9688:	mov	r2, r8
    968c:	mov	r0, r7
    9690:	ldr	r4, [sp, #8]
    9694:	ldr	r5, [sp, #12]
    9698:	ldr	r6, [sp, #16]
    969c:	ldr	r7, [sp, #20]
    96a0:	ldr	r8, [sp, #24]
    96a4:	ldr	lr, [sp, #4]
    96a8:	add	sp, sp, #32
    96ac:	b	64cc <little2_scanRef>
    96b0:	str	r4, [r6]
    96b4:	mov	r0, #6
    96b8:	b	9794 <little2_attributeValueTok+0x218>
    96bc:	str	r4, [r6]
    96c0:	mov	r0, #0
    96c4:	b	9794 <little2_attributeValueTok+0x218>
    96c8:	cmp	r4, r5
    96cc:	bne	96e0 <little2_attributeValueTok+0x164>
    96d0:	add	r3, r4, #2
    96d4:	str	r3, [r6]
    96d8:	mov	r0, #7
    96dc:	b	9794 <little2_attributeValueTok+0x218>
    96e0:	str	r4, [r6]
    96e4:	mov	r0, #6
    96e8:	b	9794 <little2_attributeValueTok+0x218>
    96ec:	cmp	r4, r5
    96f0:	bne	9754 <little2_attributeValueTok+0x1d8>
    96f4:	add	r4, r4, #2
    96f8:	cmp	r4, r8
    96fc:	bne	9708 <little2_attributeValueTok+0x18c>
    9700:	mvn	r0, #2
    9704:	b	9794 <little2_attributeValueTok+0x218>
    9708:	ldrb	r0, [r4, #1]
    970c:	cmp	r0, #0
    9710:	beq	9728 <little2_attributeValueTok+0x1ac>
    9714:	and	r0, r0, #255	; 0xff
    9718:	ldrb	r1, [r4]
    971c:	and	r1, r1, #255	; 0xff
    9720:	bl	52c8 <unicode_byte_type>
    9724:	b	9738 <little2_attributeValueTok+0x1bc>
    9728:	ldrb	ip, [r4]
    972c:	and	r1, ip, #255	; 0xff
    9730:	add	r1, r7, r1
    9734:	ldrb	r0, [r1, #76]	; 0x4c
    9738:	add	r1, r4, #2
    973c:	cmp	r0, #10
    9740:	moveq	ip, r1
    9744:	movne	ip, r4
    9748:	str	ip, [r6]
    974c:	mov	r0, #7
    9750:	b	9794 <little2_attributeValueTok+0x218>
    9754:	str	r4, [r6]
    9758:	mov	r0, #6
    975c:	b	9794 <little2_attributeValueTok+0x218>
    9760:	cmp	r4, r5
    9764:	bne	9778 <little2_attributeValueTok+0x1fc>
    9768:	add	ip, r4, #2
    976c:	str	ip, [r6]
    9770:	mov	r0, #39	; 0x27
    9774:	b	9794 <little2_attributeValueTok+0x218>
    9778:	str	r4, [r6]
    977c:	mov	r0, #6
    9780:	b	9794 <little2_attributeValueTok+0x218>
    9784:	add	r4, r4, #2
    9788:	b	95c4 <little2_attributeValueTok+0x48>
    978c:	str	r4, [r6]
    9790:	mov	r0, #6
    9794:	ldr	r4, [sp, #8]
    9798:	ldr	r5, [sp, #12]
    979c:	ldr	r6, [sp, #16]
    97a0:	ldr	r7, [sp, #20]
    97a4:	ldr	r8, [sp, #24]
    97a8:	ldr	lr, [sp, #4]
    97ac:	add	sp, sp, #32
    97b0:	bx	lr

000097b4 <little2_entityValueTok>:
    97b4:	mov	ip, sp
    97b8:	sub	sp, sp, #32
    97bc:	str	ip, [sp]
    97c0:	str	lr, [sp, #4]
    97c4:	str	r4, [sp, #8]
    97c8:	str	r5, [sp, #12]
    97cc:	str	r6, [sp, #16]
    97d0:	str	r7, [sp, #20]
    97d4:	str	r8, [sp, #24]
    97d8:	mov	r4, r3
    97dc:	mov	r5, r2
    97e0:	mov	r6, r1
    97e4:	mov	r7, r0
    97e8:	cmp	r6, r5
    97ec:	bne	97f8 <little2_entityValueTok+0x44>
    97f0:	mvn	r0, #3
    97f4:	b	99bc <little2_entityValueTok+0x208>
    97f8:	mov	r8, r6
    97fc:	cmp	r6, r5
    9800:	beq	99b4 <little2_entityValueTok+0x200>
    9804:	ldrb	r1, [r6, #1]
    9808:	cmp	r1, #0
    980c:	beq	9824 <little2_entityValueTok+0x70>
    9810:	and	r0, r1, #255	; 0xff
    9814:	ldrb	r2, [r6]
    9818:	and	r1, r2, #255	; 0xff
    981c:	bl	52c8 <unicode_byte_type>
    9820:	b	9834 <little2_entityValueTok+0x80>
    9824:	ldrb	ip, [r6]
    9828:	and	r2, ip, #255	; 0xff
    982c:	add	r3, r7, r2
    9830:	ldrb	r0, [r3, #76]	; 0x4c
    9834:	cmp	r0, #7
    9838:	bcs	98a8 <little2_entityValueTok+0xf4>
    983c:	cmp	r0, #3
    9840:	beq	9864 <little2_entityValueTok+0xb0>
    9844:	cmp	r0, #5
    9848:	beq	985c <little2_entityValueTok+0xa8>
    984c:	cmp	r0, #6
    9850:	bne	9988 <little2_entityValueTok+0x1d4>
    9854:	add	r6, r6, #3
    9858:	b	97fc <little2_entityValueTok+0x48>
    985c:	add	r6, r6, #2
    9860:	b	97fc <little2_entityValueTok+0x48>
    9864:	cmp	r6, r8
    9868:	bne	989c <little2_entityValueTok+0xe8>
    986c:	add	r1, r6, #2
    9870:	mov	r3, r4
    9874:	mov	r2, r5
    9878:	mov	r0, r7
    987c:	ldr	r4, [sp, #8]
    9880:	ldr	r5, [sp, #12]
    9884:	ldr	r6, [sp, #16]
    9888:	ldr	r7, [sp, #20]
    988c:	ldr	r8, [sp, #24]
    9890:	ldr	lr, [sp, #4]
    9894:	add	sp, sp, #32
    9898:	b	64cc <little2_scanRef>
    989c:	str	r6, [r4]
    98a0:	mov	r0, #6
    98a4:	b	99bc <little2_entityValueTok+0x208>
    98a8:	cmp	r0, #10
    98ac:	bcs	993c <little2_entityValueTok+0x188>
    98b0:	cmp	r0, #7
    98b4:	beq	9934 <little2_entityValueTok+0x180>
    98b8:	cmp	r0, #9
    98bc:	bne	9988 <little2_entityValueTok+0x1d4>
    98c0:	cmp	r6, r8
    98c4:	bne	9928 <little2_entityValueTok+0x174>
    98c8:	add	r6, r6, #2
    98cc:	cmp	r6, r5
    98d0:	bne	98dc <little2_entityValueTok+0x128>
    98d4:	mvn	r0, #2
    98d8:	b	99bc <little2_entityValueTok+0x208>
    98dc:	ldrb	r0, [r6, #1]
    98e0:	cmp	r0, #0
    98e4:	beq	98fc <little2_entityValueTok+0x148>
    98e8:	and	r0, r0, #255	; 0xff
    98ec:	ldrb	r1, [r6]
    98f0:	and	r1, r1, #255	; 0xff
    98f4:	bl	52c8 <unicode_byte_type>
    98f8:	b	990c <little2_entityValueTok+0x158>
    98fc:	ldrb	r3, [r6]
    9900:	and	r1, r3, #255	; 0xff
    9904:	add	r3, r7, r1
    9908:	ldrb	r0, [r3, #76]	; 0x4c
    990c:	add	r3, r6, #2
    9910:	cmp	r0, #10
    9914:	moveq	r0, r3
    9918:	movne	r0, r6
    991c:	str	r0, [r4]
    9920:	mov	r0, #7
    9924:	b	99bc <little2_entityValueTok+0x208>
    9928:	str	r6, [r4]
    992c:	mov	r0, #6
    9930:	b	99bc <little2_entityValueTok+0x208>
    9934:	add	r6, r6, #4
    9938:	b	97fc <little2_entityValueTok+0x48>
    993c:	cmp	r0, #10
    9940:	beq	9990 <little2_entityValueTok+0x1dc>
    9944:	cmp	r0, #30
    9948:	bne	9988 <little2_entityValueTok+0x1d4>
    994c:	cmp	r6, r8
    9950:	bne	997c <little2_entityValueTok+0x1c8>
    9954:	add	r1, r6, #2
    9958:	mov	r3, r4
    995c:	mov	r2, r5
    9960:	mov	r0, r7
    9964:	bl	815c <little2_scanPercent>
    9968:	mov	r2, #0
    996c:	cmp	r0, #22
    9970:	moveq	r0, r2
    9974:	movne	r0, r0
    9978:	b	99bc <little2_entityValueTok+0x208>
    997c:	str	r6, [r4]
    9980:	mov	r0, #6
    9984:	b	99bc <little2_entityValueTok+0x208>
    9988:	add	r6, r6, #2
    998c:	b	97fc <little2_entityValueTok+0x48>
    9990:	cmp	r6, r8
    9994:	bne	99a8 <little2_entityValueTok+0x1f4>
    9998:	add	r0, r6, #2
    999c:	str	r0, [r4]
    99a0:	mov	r0, #7
    99a4:	b	99bc <little2_entityValueTok+0x208>
    99a8:	str	r6, [r4]
    99ac:	mov	r0, #6
    99b0:	b	99bc <little2_entityValueTok+0x208>
    99b4:	str	r6, [r4]
    99b8:	mov	r0, #6
    99bc:	ldr	r4, [sp, #8]
    99c0:	ldr	r5, [sp, #12]
    99c4:	ldr	r6, [sp, #16]
    99c8:	ldr	r7, [sp, #20]
    99cc:	ldr	r8, [sp, #24]
    99d0:	ldr	lr, [sp, #4]
    99d4:	add	sp, sp, #32
    99d8:	bx	lr

000099dc <little2_ignoreSectionTok>:
    99dc:	mov	ip, sp
    99e0:	sub	sp, sp, #32
    99e4:	str	ip, [sp]
    99e8:	str	lr, [sp, #4]
    99ec:	str	r4, [sp, #8]
    99f0:	str	r5, [sp, #12]
    99f4:	str	r6, [sp, #16]
    99f8:	str	r7, [sp, #20]
    99fc:	str	r8, [sp, #24]
    9a00:	mov	r6, r3
    9a04:	mov	r5, r2
    9a08:	mov	r4, r1
    9a0c:	mov	r8, r0
    9a10:	mov	r7, #0
    9a14:	sub	ip, r5, r4
    9a18:	and	r0, ip, #1
    9a1c:	cmp	r0, #0
    9a20:	beq	9a2c <little2_ignoreSectionTok+0x50>
    9a24:	bic	r2, ip, #1
    9a28:	add	r5, r4, r2
    9a2c:	cmp	r4, r5
    9a30:	beq	9be4 <little2_ignoreSectionTok+0x208>
    9a34:	ldrb	r1, [r4, #1]
    9a38:	cmp	r1, #0
    9a3c:	beq	9a54 <little2_ignoreSectionTok+0x78>
    9a40:	and	r0, r1, #255	; 0xff
    9a44:	ldrb	r1, [r4]
    9a48:	and	r1, r1, #255	; 0xff
    9a4c:	bl	52c8 <unicode_byte_type>
    9a50:	b	9a64 <little2_ignoreSectionTok+0x88>
    9a54:	ldrb	r0, [r4]
    9a58:	and	r2, r0, #255	; 0xff
    9a5c:	add	r3, r8, r2
    9a60:	ldrb	r0, [r3, #76]	; 0x4c
    9a64:	cmp	r0, #9
    9a68:	bcs	9bdc <little2_ignoreSectionTok+0x200>
    9a6c:	add	pc, pc, r0, lsl #2
    9a70:	nop	{0}
    9a74:	b	9aec <little2_ignoreSectionTok+0x110>
    9a78:	b	9aec <little2_ignoreSectionTok+0x110>
    9a7c:	b	9af8 <little2_ignoreSectionTok+0x11c>
    9a80:	b	9bdc <little2_ignoreSectionTok+0x200>
    9a84:	b	9b60 <little2_ignoreSectionTok+0x184>
    9a88:	b	9a98 <little2_ignoreSectionTok+0xbc>
    9a8c:	b	9ab4 <little2_ignoreSectionTok+0xd8>
    9a90:	b	9ad0 <little2_ignoreSectionTok+0xf4>
    9a94:	b	9aec <little2_ignoreSectionTok+0x110>
    9a98:	sub	r3, r5, r4
    9a9c:	cmp	r3, #2
    9aa0:	bge	9aac <little2_ignoreSectionTok+0xd0>
    9aa4:	mvn	r0, #1
    9aa8:	b	9be8 <little2_ignoreSectionTok+0x20c>
    9aac:	add	r4, r4, #2
    9ab0:	b	9a2c <little2_ignoreSectionTok+0x50>
    9ab4:	sub	r2, r5, r4
    9ab8:	cmp	r2, #3
    9abc:	bge	9ac8 <little2_ignoreSectionTok+0xec>
    9ac0:	mvn	r0, #1
    9ac4:	b	9be8 <little2_ignoreSectionTok+0x20c>
    9ac8:	add	r4, r4, #3
    9acc:	b	9a2c <little2_ignoreSectionTok+0x50>
    9ad0:	sub	r2, r5, r4
    9ad4:	cmp	r2, #4
    9ad8:	bge	9ae4 <little2_ignoreSectionTok+0x108>
    9adc:	mvn	r0, #1
    9ae0:	b	9be8 <little2_ignoreSectionTok+0x20c>
    9ae4:	add	r4, r4, #4
    9ae8:	b	9a2c <little2_ignoreSectionTok+0x50>
    9aec:	str	r4, [r6]
    9af0:	mov	r0, #0
    9af4:	b	9be8 <little2_ignoreSectionTok+0x20c>
    9af8:	add	r2, r4, #2
    9afc:	mov	r4, r2
    9b00:	cmp	r2, r5
    9b04:	bne	9b10 <little2_ignoreSectionTok+0x134>
    9b08:	mvn	r0, #0
    9b0c:	b	9be8 <little2_ignoreSectionTok+0x20c>
    9b10:	ldrb	r1, [r4, #1]
    9b14:	cmp	r1, #0
    9b18:	bne	9a2c <little2_ignoreSectionTok+0x50>
    9b1c:	ldrb	r3, [r4]
    9b20:	cmp	r3, #33	; 0x21
    9b24:	bne	9a2c <little2_ignoreSectionTok+0x50>
    9b28:	add	r4, r4, #2
    9b2c:	cmp	r4, r5
    9b30:	bne	9b3c <little2_ignoreSectionTok+0x160>
    9b34:	mvn	r0, #0
    9b38:	b	9be8 <little2_ignoreSectionTok+0x20c>
    9b3c:	ldrb	ip, [r2, #3]
    9b40:	cmp	ip, #0
    9b44:	bne	9a2c <little2_ignoreSectionTok+0x50>
    9b48:	ldrb	r0, [r2, #2]
    9b4c:	cmp	r0, #91	; 0x5b
    9b50:	bne	9a2c <little2_ignoreSectionTok+0x50>
    9b54:	add	r7, r7, #1
    9b58:	add	r4, r2, #4
    9b5c:	b	9a2c <little2_ignoreSectionTok+0x50>
    9b60:	add	r0, r4, #2
    9b64:	mov	r4, r0
    9b68:	cmp	r0, r5
    9b6c:	bne	9b78 <little2_ignoreSectionTok+0x19c>
    9b70:	mvn	r0, #0
    9b74:	b	9be8 <little2_ignoreSectionTok+0x20c>
    9b78:	ldrb	ip, [r4, #1]
    9b7c:	cmp	ip, #0
    9b80:	bne	9a2c <little2_ignoreSectionTok+0x50>
    9b84:	ldrb	r3, [r4]
    9b88:	cmp	r3, #93	; 0x5d
    9b8c:	bne	9a2c <little2_ignoreSectionTok+0x50>
    9b90:	add	r4, r4, #2
    9b94:	cmp	r4, r5
    9b98:	bne	9ba4 <little2_ignoreSectionTok+0x1c8>
    9b9c:	mvn	r0, #0
    9ba0:	b	9be8 <little2_ignoreSectionTok+0x20c>
    9ba4:	ldrb	r1, [r0, #3]
    9ba8:	cmp	r1, #0
    9bac:	bne	9a2c <little2_ignoreSectionTok+0x50>
    9bb0:	ldrb	r1, [r0, #2]
    9bb4:	cmp	r1, #62	; 0x3e
    9bb8:	bne	9a2c <little2_ignoreSectionTok+0x50>
    9bbc:	add	r4, r0, #4
    9bc0:	cmp	r7, #0
    9bc4:	bne	9bd4 <little2_ignoreSectionTok+0x1f8>
    9bc8:	str	r4, [r6]
    9bcc:	mov	r0, #42	; 0x2a
    9bd0:	b	9be8 <little2_ignoreSectionTok+0x20c>
    9bd4:	sub	r7, r7, #1
    9bd8:	b	9a2c <little2_ignoreSectionTok+0x50>
    9bdc:	add	r4, r4, #2
    9be0:	b	9a2c <little2_ignoreSectionTok+0x50>
    9be4:	mvn	r0, #0
    9be8:	ldr	r4, [sp, #8]
    9bec:	ldr	r5, [sp, #12]
    9bf0:	ldr	r6, [sp, #16]
    9bf4:	ldr	r7, [sp, #20]
    9bf8:	ldr	r8, [sp, #24]
    9bfc:	ldr	lr, [sp, #4]
    9c00:	add	sp, sp, #32
    9c04:	bx	lr

00009c08 <little2_isPublicId>:
    9c08:	mov	ip, sp
    9c0c:	sub	sp, sp, #24
    9c10:	str	ip, [sp]
    9c14:	str	lr, [sp, #4]
    9c18:	str	r4, [sp, #8]
    9c1c:	str	r5, [sp, #12]
    9c20:	str	r6, [sp, #16]
    9c24:	str	r7, [sp, #20]
    9c28:	mov	r7, r3
    9c2c:	mov	r6, r0
    9c30:	add	r4, r1, #2
    9c34:	sub	r5, r2, #2
    9c38:	cmp	r4, r5
    9c3c:	beq	9d74 <little2_isPublicId+0x16c>
    9c40:	ldrb	r1, [r4, #1]
    9c44:	cmp	r1, #0
    9c48:	beq	9c60 <little2_isPublicId+0x58>
    9c4c:	and	r0, r1, #255	; 0xff
    9c50:	ldrb	ip, [r4]
    9c54:	and	r1, ip, #255	; 0xff
    9c58:	bl	52c8 <unicode_byte_type>
    9c5c:	b	9c70 <little2_isPublicId+0x68>
    9c60:	ldrb	ip, [r4]
    9c64:	and	r1, ip, #255	; 0xff
    9c68:	add	r2, r6, r1
    9c6c:	ldrb	r0, [r2, #76]	; 0x4c
    9c70:	sub	r0, r0, #9
    9c74:	cmp	r0, #27
    9c78:	bcs	9d38 <little2_isPublicId+0x130>
    9c7c:	add	pc, pc, r0, lsl #2
    9c80:	nop	{0}
    9c84:	b	9d6c <little2_isPublicId+0x164>
    9c88:	b	9d6c <little2_isPublicId+0x164>
    9c8c:	b	9d38 <little2_isPublicId+0x130>
    9c90:	b	9d38 <little2_isPublicId+0x130>
    9c94:	b	9d6c <little2_isPublicId+0x164>
    9c98:	b	9d6c <little2_isPublicId+0x164>
    9c9c:	b	9d6c <little2_isPublicId+0x164>
    9ca0:	b	9d6c <little2_isPublicId+0x164>
    9ca4:	b	9d6c <little2_isPublicId+0x164>
    9ca8:	b	9d6c <little2_isPublicId+0x164>
    9cac:	b	9d6c <little2_isPublicId+0x164>
    9cb0:	b	9d38 <little2_isPublicId+0x130>
    9cb4:	b	9cf0 <little2_isPublicId+0xe8>
    9cb8:	b	9d14 <little2_isPublicId+0x10c>
    9cbc:	b	9d6c <little2_isPublicId+0x164>
    9cc0:	b	9d6c <little2_isPublicId+0x164>
    9cc4:	b	9d6c <little2_isPublicId+0x164>
    9cc8:	b	9d14 <little2_isPublicId+0x10c>
    9ccc:	b	9d6c <little2_isPublicId+0x164>
    9cd0:	b	9d38 <little2_isPublicId+0x130>
    9cd4:	b	9d38 <little2_isPublicId+0x130>
    9cd8:	b	9d6c <little2_isPublicId+0x164>
    9cdc:	b	9d6c <little2_isPublicId+0x164>
    9ce0:	b	9d6c <little2_isPublicId+0x164>
    9ce4:	b	9d6c <little2_isPublicId+0x164>
    9ce8:	b	9d6c <little2_isPublicId+0x164>
    9cec:	b	9d6c <little2_isPublicId+0x164>
    9cf0:	ldrb	r1, [r4, #1]
    9cf4:	cmp	r1, #0
    9cf8:	bne	9d6c <little2_isPublicId+0x164>
    9cfc:	ldrb	r2, [r4]
    9d00:	cmp	r2, #9
    9d04:	bne	9d6c <little2_isPublicId+0x164>
    9d08:	str	r4, [r7]
    9d0c:	mov	r0, #0
    9d10:	b	9d78 <little2_isPublicId+0x170>
    9d14:	ldrb	ip, [r4, #1]
    9d18:	cmp	ip, #0
    9d1c:	beq	9d28 <little2_isPublicId+0x120>
    9d20:	mvn	r3, #0
    9d24:	b	9d2c <little2_isPublicId+0x124>
    9d28:	ldrb	r3, [r4]
    9d2c:	bic	r3, r3, #127	; 0x7f
    9d30:	cmp	r3, #0
    9d34:	beq	9d6c <little2_isPublicId+0x164>
    9d38:	ldrb	r2, [r4, #1]
    9d3c:	cmp	r2, #0
    9d40:	beq	9d4c <little2_isPublicId+0x144>
    9d44:	mvn	r0, #0
    9d48:	b	9d50 <little2_isPublicId+0x148>
    9d4c:	ldrb	r0, [r4]
    9d50:	cmp	r0, #36	; 0x24
    9d54:	beq	9d6c <little2_isPublicId+0x164>
    9d58:	cmp	r0, #64	; 0x40
    9d5c:	beq	9d6c <little2_isPublicId+0x164>
    9d60:	str	r4, [r7]
    9d64:	mov	r0, #0
    9d68:	b	9d78 <little2_isPublicId+0x170>
    9d6c:	add	r4, r4, #2
    9d70:	b	9c38 <little2_isPublicId+0x30>
    9d74:	mov	r0, #1
    9d78:	ldr	r4, [sp, #8]
    9d7c:	ldr	r5, [sp, #12]
    9d80:	ldr	r6, [sp, #16]
    9d84:	ldr	r7, [sp, #20]
    9d88:	ldr	lr, [sp, #4]
    9d8c:	add	sp, sp, #24
    9d90:	bx	lr

00009d94 <little2_getAtts>:
    9d94:	mov	ip, sp
    9d98:	sub	sp, sp, #40	; 0x28
    9d9c:	str	ip, [sp]
    9da0:	str	lr, [sp, #4]
    9da4:	str	r4, [sp, #8]
    9da8:	str	r5, [sp, #12]
    9dac:	str	r6, [sp, #16]
    9db0:	str	r7, [sp, #20]
    9db4:	str	r8, [sp, #24]
    9db8:	str	r9, [sp, #28]
    9dbc:	str	sl, [sp, #32]
    9dc0:	mov	r5, r3
    9dc4:	mov	r9, r2
    9dc8:	mov	r6, r0
    9dcc:	mov	r4, #1
    9dd0:	mov	sl, #0
    9dd4:	mov	r8, #0
    9dd8:	add	r7, r1, #2
    9ddc:	ldrb	r2, [r7, #1]
    9de0:	cmp	r2, #0
    9de4:	beq	9dfc <little2_getAtts+0x68>
    9de8:	and	r0, r2, #255	; 0xff
    9dec:	ldrb	r1, [r7]
    9df0:	and	r1, r1, #255	; 0xff
    9df4:	bl	52c8 <unicode_byte_type>
    9df8:	b	9e0c <little2_getAtts+0x78>
    9dfc:	ldrb	r2, [r7]
    9e00:	and	r3, r2, #255	; 0xff
    9e04:	add	r0, r6, r3
    9e08:	ldrb	r0, [r0, #76]	; 0x4c
    9e0c:	sub	r0, r0, #3
    9e10:	cmp	r0, #27
    9e14:	bcs	a134 <little2_getAtts+0x3a0>
    9e18:	add	pc, pc, r0, lsl #2
    9e1c:	nop	{0}
    9e20:	b	9fcc <little2_getAtts+0x238>
    9e24:	b	a134 <little2_getAtts+0x3a0>
    9e28:	b	9e8c <little2_getAtts+0xf8>
    9e2c:	b	9eb4 <little2_getAtts+0x120>
    9e30:	b	9ee0 <little2_getAtts+0x14c>
    9e34:	b	a134 <little2_getAtts+0x3a0>
    9e38:	b	a0bc <little2_getAtts+0x328>
    9e3c:	b	a0bc <little2_getAtts+0x328>
    9e40:	b	a100 <little2_getAtts+0x36c>
    9e44:	b	9f34 <little2_getAtts+0x1a0>
    9e48:	b	9f80 <little2_getAtts+0x1ec>
    9e4c:	b	a134 <little2_getAtts+0x3a0>
    9e50:	b	a134 <little2_getAtts+0x3a0>
    9e54:	b	a134 <little2_getAtts+0x3a0>
    9e58:	b	a100 <little2_getAtts+0x36c>
    9e5c:	b	a134 <little2_getAtts+0x3a0>
    9e60:	b	a134 <little2_getAtts+0x3a0>
    9e64:	b	a134 <little2_getAtts+0x3a0>
    9e68:	b	9fe4 <little2_getAtts+0x250>
    9e6c:	b	9f0c <little2_getAtts+0x178>
    9e70:	b	a134 <little2_getAtts+0x3a0>
    9e74:	b	9f0c <little2_getAtts+0x178>
    9e78:	b	a134 <little2_getAtts+0x3a0>
    9e7c:	b	a134 <little2_getAtts+0x3a0>
    9e80:	b	a134 <little2_getAtts+0x3a0>
    9e84:	b	a134 <little2_getAtts+0x3a0>
    9e88:	b	9f0c <little2_getAtts+0x178>
    9e8c:	cmp	r4, #0
    9e90:	bne	a134 <little2_getAtts+0x3a0>
    9e94:	cmp	sl, r9
    9e98:	bge	9eac <little2_getAtts+0x118>
    9e9c:	str	r7, [r5, sl, lsl #4]
    9ea0:	add	r1, r5, sl, lsl #4
    9ea4:	mov	ip, #1
    9ea8:	strb	ip, [r1, #12]
    9eac:	mov	r4, #1
    9eb0:	b	a134 <little2_getAtts+0x3a0>
    9eb4:	cmp	r4, #0
    9eb8:	bne	9ed8 <little2_getAtts+0x144>
    9ebc:	cmp	sl, r9
    9ec0:	bge	9ed4 <little2_getAtts+0x140>
    9ec4:	str	r7, [r5, sl, lsl #4]
    9ec8:	add	r2, r5, sl, lsl #4
    9ecc:	mov	r1, #1
    9ed0:	strb	r1, [r2, #12]
    9ed4:	mov	r4, #1
    9ed8:	add	r7, r7, #1
    9edc:	b	a134 <little2_getAtts+0x3a0>
    9ee0:	cmp	r4, #0
    9ee4:	bne	9f04 <little2_getAtts+0x170>
    9ee8:	cmp	sl, r9
    9eec:	bge	9f00 <little2_getAtts+0x16c>
    9ef0:	str	r7, [r5, sl, lsl #4]
    9ef4:	add	r2, r5, sl, lsl #4
    9ef8:	mov	r3, #1
    9efc:	strb	r3, [r2, #12]
    9f00:	mov	r4, #1
    9f04:	add	r7, r7, #2
    9f08:	b	a134 <little2_getAtts+0x3a0>
    9f0c:	cmp	r4, #0
    9f10:	bne	a134 <little2_getAtts+0x3a0>
    9f14:	cmp	sl, r9
    9f18:	bge	9f2c <little2_getAtts+0x198>
    9f1c:	str	r7, [r5, sl, lsl #4]
    9f20:	add	r1, r5, sl, lsl #4
    9f24:	mov	r0, #1
    9f28:	strb	r0, [r1, #12]
    9f2c:	mov	r4, #1
    9f30:	b	a134 <little2_getAtts+0x3a0>
    9f34:	cmp	r4, #2
    9f38:	beq	9f5c <little2_getAtts+0x1c8>
    9f3c:	cmp	sl, r9
    9f40:	bge	9f50 <little2_getAtts+0x1bc>
    9f44:	add	r0, r5, sl, lsl #4
    9f48:	add	r1, r7, #2
    9f4c:	str	r1, [r0, #4]
    9f50:	mov	r4, #2
    9f54:	mov	r8, #12
    9f58:	b	a134 <little2_getAtts+0x3a0>
    9f5c:	cmp	r8, #12
    9f60:	bne	a134 <little2_getAtts+0x3a0>
    9f64:	mov	r4, #0
    9f68:	cmp	sl, r9
    9f6c:	bge	9f78 <little2_getAtts+0x1e4>
    9f70:	add	r0, r5, sl, lsl #4
    9f74:	str	r7, [r0, #8]
    9f78:	add	sl, sl, #1
    9f7c:	b	a134 <little2_getAtts+0x3a0>
    9f80:	cmp	r4, #2
    9f84:	beq	9fa8 <little2_getAtts+0x214>
    9f88:	cmp	sl, r9
    9f8c:	bge	9f9c <little2_getAtts+0x208>
    9f90:	add	ip, r5, sl, lsl #4
    9f94:	add	r1, r7, #2
    9f98:	str	r1, [ip, #4]
    9f9c:	mov	r4, #2
    9fa0:	mov	r8, #13
    9fa4:	b	a134 <little2_getAtts+0x3a0>
    9fa8:	cmp	r8, #13
    9fac:	bne	a134 <little2_getAtts+0x3a0>
    9fb0:	mov	r4, #0
    9fb4:	cmp	sl, r9
    9fb8:	bge	9fc4 <little2_getAtts+0x230>
    9fbc:	add	r3, r5, sl, lsl #4
    9fc0:	str	r7, [r3, #8]
    9fc4:	add	sl, sl, #1
    9fc8:	b	a134 <little2_getAtts+0x3a0>
    9fcc:	cmp	sl, r9
    9fd0:	bge	a134 <little2_getAtts+0x3a0>
    9fd4:	add	r1, r5, sl, lsl #4
    9fd8:	mov	ip, #0
    9fdc:	strb	ip, [r1, #12]
    9fe0:	b	a134 <little2_getAtts+0x3a0>
    9fe4:	cmp	r4, #1
    9fe8:	beq	a0b4 <little2_getAtts+0x320>
    9fec:	cmp	sl, r9
    9ff0:	movlt	r1, #1
    9ff4:	movge	r1, #0
    9ff8:	mov	r3, #0
    9ffc:	cmp	r4, #2
    a000:	moveq	r3, r1
    a004:	movne	r3, r3
    a008:	cmp	r3, #0
    a00c:	beq	a134 <little2_getAtts+0x3a0>
    a010:	add	r0, r5, sl, lsl #4
    a014:	ldrb	r1, [r0, #12]
    a018:	cmp	r1, #0
    a01c:	beq	a134 <little2_getAtts+0x3a0>
    a020:	ldr	r2, [r0, #4]
    a024:	cmp	r7, r2
    a028:	beq	a0a4 <little2_getAtts+0x310>
    a02c:	ldrb	ip, [r7, #1]
    a030:	cmp	ip, #0
    a034:	beq	a040 <little2_getAtts+0x2ac>
    a038:	mvn	ip, #0
    a03c:	b	a044 <little2_getAtts+0x2b0>
    a040:	ldrb	ip, [r7]
    a044:	cmp	ip, #32
    a048:	bne	a0a4 <little2_getAtts+0x310>
    a04c:	ldrb	r3, [r7, #3]
    a050:	cmp	r3, #0
    a054:	beq	a060 <little2_getAtts+0x2cc>
    a058:	mvn	r0, #0
    a05c:	b	a064 <little2_getAtts+0x2d0>
    a060:	ldrb	r0, [r7, #2]
    a064:	cmp	r0, #32
    a068:	beq	a0a4 <little2_getAtts+0x310>
    a06c:	ldrb	r1, [r7, #3]
    a070:	cmp	r1, #0
    a074:	beq	a08c <little2_getAtts+0x2f8>
    a078:	and	r0, r1, #255	; 0xff
    a07c:	ldrb	r2, [r7, #2]
    a080:	and	r1, r2, #255	; 0xff
    a084:	bl	52c8 <unicode_byte_type>
    a088:	b	a09c <little2_getAtts+0x308>
    a08c:	ldrb	ip, [r7, #2]
    a090:	and	r2, ip, #255	; 0xff
    a094:	add	r0, r6, r2
    a098:	ldrb	r0, [r0, #76]	; 0x4c
    a09c:	cmp	r0, r8
    a0a0:	bne	a134 <little2_getAtts+0x3a0>
    a0a4:	add	r2, r5, sl, lsl #4
    a0a8:	mov	r3, #0
    a0ac:	strb	r3, [r2, #12]
    a0b0:	b	a134 <little2_getAtts+0x3a0>
    a0b4:	mov	r4, #0
    a0b8:	b	a134 <little2_getAtts+0x3a0>
    a0bc:	cmp	r4, #1
    a0c0:	beq	a0f8 <little2_getAtts+0x364>
    a0c4:	cmp	sl, r9
    a0c8:	movlt	r1, #1
    a0cc:	movge	r1, #0
    a0d0:	mov	r2, #0
    a0d4:	cmp	r4, #2
    a0d8:	moveq	ip, r1
    a0dc:	movne	ip, r2
    a0e0:	cmp	ip, #0
    a0e4:	beq	a134 <little2_getAtts+0x3a0>
    a0e8:	add	r3, r5, sl, lsl #4
    a0ec:	mov	ip, #0
    a0f0:	strb	ip, [r3, #12]
    a0f4:	b	a134 <little2_getAtts+0x3a0>
    a0f8:	mov	r4, #0
    a0fc:	b	a134 <little2_getAtts+0x3a0>
    a100:	cmp	r4, #2
    a104:	beq	a134 <little2_getAtts+0x3a0>
    a108:	mov	r0, sl
    a10c:	ldr	r4, [sp, #8]
    a110:	ldr	r5, [sp, #12]
    a114:	ldr	r6, [sp, #16]
    a118:	ldr	r7, [sp, #20]
    a11c:	ldr	r8, [sp, #24]
    a120:	ldr	r9, [sp, #28]
    a124:	ldr	sl, [sp, #32]
    a128:	ldr	lr, [sp, #4]
    a12c:	add	sp, sp, #40	; 0x28
    a130:	bx	lr
    a134:	add	r7, r7, #2
    a138:	b	9ddc <little2_getAtts+0x48>

0000a13c <little2_charRefNumber>:
    a13c:	mov	ip, sp
    a140:	sub	sp, sp, #16
    a144:	str	ip, [sp]
    a148:	str	lr, [sp, #4]
    a14c:	str	r4, [sp, #8]
    a150:	mov	r0, #0
    a154:	add	r4, r1, #4
    a158:	ldrb	r3, [r4, #1]
    a15c:	cmp	r3, #0
    a160:	bne	a2d8 <little2_charRefNumber+0x19c>
    a164:	ldrb	r1, [r4]
    a168:	cmp	r1, #120	; 0x78
    a16c:	bne	a2d8 <little2_charRefNumber+0x19c>
    a170:	add	r4, r4, #2
    a174:	ldrb	r2, [r4, #1]
    a178:	cmp	r2, #0
    a17c:	bne	a18c <little2_charRefNumber+0x50>
    a180:	ldrb	ip, [r4]
    a184:	cmp	ip, #59	; 0x3b
    a188:	beq	a2f0 <little2_charRefNumber+0x1b4>
    a18c:	ldrb	r1, [r4, #1]
    a190:	cmp	r1, #0
    a194:	beq	a1a0 <little2_charRefNumber+0x64>
    a198:	mvn	r1, #0
    a19c:	b	a1a4 <little2_charRefNumber+0x68>
    a1a0:	ldrb	r1, [r4]
    a1a4:	sub	r2, r1, #48	; 0x30
    a1a8:	cmp	r2, #55	; 0x37
    a1ac:	bcs	a2c0 <little2_charRefNumber+0x184>
    a1b0:	add	pc, pc, r2, lsl #2
    a1b4:	nop	{0}
    a1b8:	b	a294 <little2_charRefNumber+0x158>
    a1bc:	b	a294 <little2_charRefNumber+0x158>
    a1c0:	b	a294 <little2_charRefNumber+0x158>
    a1c4:	b	a294 <little2_charRefNumber+0x158>
    a1c8:	b	a294 <little2_charRefNumber+0x158>
    a1cc:	b	a294 <little2_charRefNumber+0x158>
    a1d0:	b	a294 <little2_charRefNumber+0x158>
    a1d4:	b	a294 <little2_charRefNumber+0x158>
    a1d8:	b	a294 <little2_charRefNumber+0x158>
    a1dc:	b	a294 <little2_charRefNumber+0x158>
    a1e0:	b	a2c0 <little2_charRefNumber+0x184>
    a1e4:	b	a2c0 <little2_charRefNumber+0x184>
    a1e8:	b	a2c0 <little2_charRefNumber+0x184>
    a1ec:	b	a2c0 <little2_charRefNumber+0x184>
    a1f0:	b	a2c0 <little2_charRefNumber+0x184>
    a1f4:	b	a2c0 <little2_charRefNumber+0x184>
    a1f8:	b	a2c0 <little2_charRefNumber+0x184>
    a1fc:	b	a2a4 <little2_charRefNumber+0x168>
    a200:	b	a2a4 <little2_charRefNumber+0x168>
    a204:	b	a2a4 <little2_charRefNumber+0x168>
    a208:	b	a2a4 <little2_charRefNumber+0x168>
    a20c:	b	a2a4 <little2_charRefNumber+0x168>
    a210:	b	a2a4 <little2_charRefNumber+0x168>
    a214:	b	a2c0 <little2_charRefNumber+0x184>
    a218:	b	a2c0 <little2_charRefNumber+0x184>
    a21c:	b	a2c0 <little2_charRefNumber+0x184>
    a220:	b	a2c0 <little2_charRefNumber+0x184>
    a224:	b	a2c0 <little2_charRefNumber+0x184>
    a228:	b	a2c0 <little2_charRefNumber+0x184>
    a22c:	b	a2c0 <little2_charRefNumber+0x184>
    a230:	b	a2c0 <little2_charRefNumber+0x184>
    a234:	b	a2c0 <little2_charRefNumber+0x184>
    a238:	b	a2c0 <little2_charRefNumber+0x184>
    a23c:	b	a2c0 <little2_charRefNumber+0x184>
    a240:	b	a2c0 <little2_charRefNumber+0x184>
    a244:	b	a2c0 <little2_charRefNumber+0x184>
    a248:	b	a2c0 <little2_charRefNumber+0x184>
    a24c:	b	a2c0 <little2_charRefNumber+0x184>
    a250:	b	a2c0 <little2_charRefNumber+0x184>
    a254:	b	a2c0 <little2_charRefNumber+0x184>
    a258:	b	a2c0 <little2_charRefNumber+0x184>
    a25c:	b	a2c0 <little2_charRefNumber+0x184>
    a260:	b	a2c0 <little2_charRefNumber+0x184>
    a264:	b	a2c0 <little2_charRefNumber+0x184>
    a268:	b	a2c0 <little2_charRefNumber+0x184>
    a26c:	b	a2c0 <little2_charRefNumber+0x184>
    a270:	b	a2c0 <little2_charRefNumber+0x184>
    a274:	b	a2c0 <little2_charRefNumber+0x184>
    a278:	b	a2c0 <little2_charRefNumber+0x184>
    a27c:	b	a2b4 <little2_charRefNumber+0x178>
    a280:	b	a2b4 <little2_charRefNumber+0x178>
    a284:	b	a2b4 <little2_charRefNumber+0x178>
    a288:	b	a2b4 <little2_charRefNumber+0x178>
    a28c:	b	a2b4 <little2_charRefNumber+0x178>
    a290:	b	a2b4 <little2_charRefNumber+0x178>
    a294:	lsl	r2, r0, #4
    a298:	sub	r3, r1, #48	; 0x30
    a29c:	orr	r0, r2, r3
    a2a0:	b	a2c0 <little2_charRefNumber+0x184>
    a2a4:	lsl	ip, r0, #4
    a2a8:	add	ip, ip, r1
    a2ac:	sub	r0, ip, #55	; 0x37
    a2b0:	b	a2c0 <little2_charRefNumber+0x184>
    a2b4:	lsl	r2, r0, #4
    a2b8:	add	r0, r2, r1
    a2bc:	sub	r0, r0, #87	; 0x57
    a2c0:	cmp	r0, #1114112	; 0x110000
    a2c4:	blt	a2d0 <little2_charRefNumber+0x194>
    a2c8:	mvn	r0, #0
    a2cc:	b	a334 <little2_charRefNumber+0x1f8>
    a2d0:	add	r4, r4, #2
    a2d4:	b	a174 <little2_charRefNumber+0x38>
    a2d8:	ldrb	ip, [r4, #1]
    a2dc:	cmp	ip, #0
    a2e0:	bne	a300 <little2_charRefNumber+0x1c4>
    a2e4:	ldrb	r3, [r4]
    a2e8:	cmp	r3, #59	; 0x3b
    a2ec:	bne	a300 <little2_charRefNumber+0x1c4>
    a2f0:	ldr	r4, [sp, #8]
    a2f4:	ldr	lr, [sp, #4]
    a2f8:	add	sp, sp, #16
    a2fc:	b	105e8 <checkCharRefNumber>
    a300:	ldrb	r3, [r4, #1]
    a304:	cmp	r3, #0
    a308:	beq	a314 <little2_charRefNumber+0x1d8>
    a30c:	mvn	r1, #0
    a310:	b	a318 <little2_charRefNumber+0x1dc>
    a314:	ldrb	r1, [r4]
    a318:	lsl	r2, r0, #3
    a31c:	add	r2, r2, r0, lsl #1
    a320:	add	r2, r2, r1
    a324:	sub	r0, r2, #48	; 0x30
    a328:	cmp	r0, #1114112	; 0x110000
    a32c:	blt	a344 <little2_charRefNumber+0x208>
    a330:	mvn	r0, #0
    a334:	ldr	r4, [sp, #8]
    a338:	ldr	lr, [sp, #4]
    a33c:	add	sp, sp, #16
    a340:	bx	lr
    a344:	add	r4, r4, #2
    a348:	b	a2d8 <little2_charRefNumber+0x19c>

0000a34c <little2_predefinedEntityName>:
    a34c:	mov	ip, sp
    a350:	sub	sp, sp, #8
    a354:	str	ip, [sp]
    a358:	str	lr, [sp, #4]
    a35c:	sub	r2, r2, r1
    a360:	asr	lr, r2, #31
    a364:	add	lr, r2, lr, lsr #31
    a368:	asr	r3, lr, #1
    a36c:	cmp	r3, #2
    a370:	beq	a4bc <little2_predefinedEntityName+0x170>
    a374:	cmp	r3, #3
    a378:	beq	a464 <little2_predefinedEntityName+0x118>
    a37c:	cmp	r3, #4
    a380:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a384:	ldrb	r0, [r1, #1]
    a388:	cmp	r0, #0
    a38c:	beq	a398 <little2_predefinedEntityName+0x4c>
    a390:	mvn	r2, #0
    a394:	b	a39c <little2_predefinedEntityName+0x50>
    a398:	ldrb	r2, [r1]
    a39c:	cmp	r2, #97	; 0x61
    a3a0:	beq	a408 <little2_predefinedEntityName+0xbc>
    a3a4:	cmp	r2, #113	; 0x71
    a3a8:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a3ac:	add	r2, r1, #2
    a3b0:	ldrb	ip, [r2, #1]
    a3b4:	cmp	ip, #0
    a3b8:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a3bc:	ldrb	r3, [r2]
    a3c0:	cmp	r3, #117	; 0x75
    a3c4:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a3c8:	add	ip, r2, #2
    a3cc:	ldrb	r1, [ip, #1]
    a3d0:	cmp	r1, #0
    a3d4:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a3d8:	ldrb	r3, [ip]
    a3dc:	cmp	r3, #111	; 0x6f
    a3e0:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a3e4:	add	r2, ip, #2
    a3e8:	ldrb	r0, [r2, #1]
    a3ec:	cmp	r0, #0
    a3f0:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a3f4:	ldrb	r0, [r2]
    a3f8:	cmp	r0, #116	; 0x74
    a3fc:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a400:	mov	r0, #34	; 0x22
    a404:	b	a510 <little2_predefinedEntityName+0x1c4>
    a408:	add	r3, r1, #2
    a40c:	ldrb	r1, [r3, #1]
    a410:	cmp	r1, #0
    a414:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a418:	ldrb	ip, [r3]
    a41c:	cmp	ip, #112	; 0x70
    a420:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a424:	add	r0, r3, #2
    a428:	ldrb	ip, [r0, #1]
    a42c:	cmp	ip, #0
    a430:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a434:	ldrb	r2, [r0]
    a438:	cmp	r2, #111	; 0x6f
    a43c:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a440:	add	r2, r0, #2
    a444:	ldrb	r3, [r2, #1]
    a448:	cmp	r3, #0
    a44c:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a450:	ldrb	r0, [r2]
    a454:	cmp	r0, #115	; 0x73
    a458:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a45c:	mov	r0, #39	; 0x27
    a460:	b	a510 <little2_predefinedEntityName+0x1c4>
    a464:	ldrb	r0, [r1, #1]
    a468:	cmp	r0, #0
    a46c:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a470:	ldrb	r2, [r1]
    a474:	cmp	r2, #97	; 0x61
    a478:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a47c:	add	r3, r1, #2
    a480:	ldrb	ip, [r3, #1]
    a484:	cmp	ip, #0
    a488:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a48c:	ldrb	r0, [r3]
    a490:	cmp	r0, #109	; 0x6d
    a494:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a498:	add	ip, r3, #2
    a49c:	ldrb	r0, [ip, #1]
    a4a0:	cmp	r0, #0
    a4a4:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a4a8:	ldrb	r0, [ip]
    a4ac:	cmp	r0, #112	; 0x70
    a4b0:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a4b4:	mov	r0, #38	; 0x26
    a4b8:	b	a510 <little2_predefinedEntityName+0x1c4>
    a4bc:	ldrb	r2, [r1, #3]
    a4c0:	cmp	r2, #0
    a4c4:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a4c8:	ldrb	r2, [r1, #2]
    a4cc:	cmp	r2, #116	; 0x74
    a4d0:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a4d4:	ldrb	r0, [r1, #1]
    a4d8:	cmp	r0, #0
    a4dc:	beq	a4e8 <little2_predefinedEntityName+0x19c>
    a4e0:	mvn	r0, #0
    a4e4:	b	a4ec <little2_predefinedEntityName+0x1a0>
    a4e8:	ldrb	r0, [r1]
    a4ec:	cmp	r0, #103	; 0x67
    a4f0:	beq	a504 <little2_predefinedEntityName+0x1b8>
    a4f4:	cmp	r0, #108	; 0x6c
    a4f8:	bne	a50c <little2_predefinedEntityName+0x1c0>
    a4fc:	mov	r0, #60	; 0x3c
    a500:	b	a510 <little2_predefinedEntityName+0x1c4>
    a504:	mov	r0, #62	; 0x3e
    a508:	b	a510 <little2_predefinedEntityName+0x1c4>
    a50c:	mov	r0, #0
    a510:	ldr	lr, [sp, #4]
    a514:	add	sp, sp, #8
    a518:	bx	lr

0000a51c <little2_sameName>:
    a51c:	mov	ip, sp
    a520:	sub	sp, sp, #24
    a524:	str	ip, [sp]
    a528:	str	lr, [sp, #4]
    a52c:	str	r4, [sp, #8]
    a530:	str	r5, [sp, #12]
    a534:	str	r6, [sp, #16]
    a538:	mov	r6, r2
    a53c:	mov	r4, r1
    a540:	mov	r5, r0
    a544:	ldrb	ip, [r4, #1]
    a548:	cmp	ip, #0
    a54c:	beq	a564 <little2_sameName+0x48>
    a550:	and	r0, ip, #255	; 0xff
    a554:	ldrb	r1, [r4]
    a558:	and	r1, r1, #255	; 0xff
    a55c:	bl	52c8 <unicode_byte_type>
    a560:	b	a574 <little2_sameName+0x58>
    a564:	ldrb	r1, [r4]
    a568:	and	ip, r1, #255	; 0xff
    a56c:	add	r2, r5, ip
    a570:	ldrb	r0, [r2, #76]	; 0x4c
    a574:	sub	r3, r0, #5
    a578:	cmp	r3, #25
    a57c:	bcs	a6bc <little2_sameName+0x1a0>
    a580:	add	pc, pc, r3, lsl #2
    a584:	nop	{0}
    a588:	b	a63c <little2_sameName+0x120>
    a58c:	b	a614 <little2_sameName+0xf8>
    a590:	b	a5ec <little2_sameName+0xd0>
    a594:	b	a6bc <little2_sameName+0x1a0>
    a598:	b	a6bc <little2_sameName+0x1a0>
    a59c:	b	a6bc <little2_sameName+0x1a0>
    a5a0:	b	a6bc <little2_sameName+0x1a0>
    a5a4:	b	a6bc <little2_sameName+0x1a0>
    a5a8:	b	a6bc <little2_sameName+0x1a0>
    a5ac:	b	a6bc <little2_sameName+0x1a0>
    a5b0:	b	a6bc <little2_sameName+0x1a0>
    a5b4:	b	a6bc <little2_sameName+0x1a0>
    a5b8:	b	a6bc <little2_sameName+0x1a0>
    a5bc:	b	a6bc <little2_sameName+0x1a0>
    a5c0:	b	a6bc <little2_sameName+0x1a0>
    a5c4:	b	a6bc <little2_sameName+0x1a0>
    a5c8:	b	a6bc <little2_sameName+0x1a0>
    a5cc:	b	a67c <little2_sameName+0x160>
    a5d0:	b	a67c <little2_sameName+0x160>
    a5d4:	b	a67c <little2_sameName+0x160>
    a5d8:	b	a67c <little2_sameName+0x160>
    a5dc:	b	a67c <little2_sameName+0x160>
    a5e0:	b	a67c <little2_sameName+0x160>
    a5e4:	b	a6bc <little2_sameName+0x1a0>
    a5e8:	b	a67c <little2_sameName+0x160>
    a5ec:	mov	r1, r4
    a5f0:	add	r4, r1, #1
    a5f4:	mov	r3, r6
    a5f8:	add	r6, r3, #1
    a5fc:	ldrb	r0, [r1]
    a600:	ldrb	r1, [r3]
    a604:	cmp	r0, r1
    a608:	beq	a614 <little2_sameName+0xf8>
    a60c:	mov	r0, #0
    a610:	b	a770 <little2_sameName+0x254>
    a614:	mov	r0, r4
    a618:	add	r4, r0, #1
    a61c:	mov	r1, r6
    a620:	add	r6, r1, #1
    a624:	ldrb	r2, [r0]
    a628:	ldrb	r0, [r1]
    a62c:	cmp	r2, r0
    a630:	beq	a63c <little2_sameName+0x120>
    a634:	mov	r0, #0
    a638:	b	a770 <little2_sameName+0x254>
    a63c:	mov	r2, r4
    a640:	mov	r0, r6
    a644:	ldrb	r3, [r2]
    a648:	ldrb	ip, [r0]
    a64c:	cmp	r3, ip
    a650:	beq	a65c <little2_sameName+0x140>
    a654:	mov	r0, #0
    a658:	b	a770 <little2_sameName+0x254>
    a65c:	add	r4, r2, #2
    a660:	add	r6, r0, #2
    a664:	ldrb	r1, [r2, #1]
    a668:	ldrb	r2, [r0, #1]
    a66c:	cmp	r1, r2
    a670:	beq	a544 <little2_sameName+0x28>
    a674:	mov	r0, #0
    a678:	b	a770 <little2_sameName+0x254>
    a67c:	mov	ip, r6
    a680:	mov	r3, r4
    a684:	ldrb	r0, [ip]
    a688:	ldrb	r1, [r3]
    a68c:	cmp	r0, r1
    a690:	beq	a69c <little2_sameName+0x180>
    a694:	mov	r0, #0
    a698:	b	a770 <little2_sameName+0x254>
    a69c:	add	r6, ip, #2
    a6a0:	add	r4, r3, #2
    a6a4:	ldrb	r1, [ip, #1]
    a6a8:	ldrb	r2, [r3, #1]
    a6ac:	cmp	r1, r2
    a6b0:	beq	a544 <little2_sameName+0x28>
    a6b4:	mov	r0, #0
    a6b8:	b	a770 <little2_sameName+0x254>
    a6bc:	ldrb	r2, [r6, #1]
    a6c0:	cmp	r2, #0
    a6c4:	beq	a6dc <little2_sameName+0x1c0>
    a6c8:	and	r0, r2, #255	; 0xff
    a6cc:	ldrb	r2, [r6]
    a6d0:	and	r1, r2, #255	; 0xff
    a6d4:	bl	52c8 <unicode_byte_type>
    a6d8:	b	a6ec <little2_sameName+0x1d0>
    a6dc:	ldrb	r3, [r6]
    a6e0:	and	ip, r3, #255	; 0xff
    a6e4:	add	r0, r5, ip
    a6e8:	ldrb	r0, [r0, #76]	; 0x4c
    a6ec:	sub	r0, r0, #5
    a6f0:	cmp	r0, #25
    a6f4:	bcs	a76c <little2_sameName+0x250>
    a6f8:	add	pc, pc, r0, lsl #2
    a6fc:	nop	{0}
    a700:	b	a764 <little2_sameName+0x248>
    a704:	b	a764 <little2_sameName+0x248>
    a708:	b	a764 <little2_sameName+0x248>
    a70c:	b	a76c <little2_sameName+0x250>
    a710:	b	a76c <little2_sameName+0x250>
    a714:	b	a76c <little2_sameName+0x250>
    a718:	b	a76c <little2_sameName+0x250>
    a71c:	b	a76c <little2_sameName+0x250>
    a720:	b	a76c <little2_sameName+0x250>
    a724:	b	a76c <little2_sameName+0x250>
    a728:	b	a76c <little2_sameName+0x250>
    a72c:	b	a76c <little2_sameName+0x250>
    a730:	b	a76c <little2_sameName+0x250>
    a734:	b	a76c <little2_sameName+0x250>
    a738:	b	a76c <little2_sameName+0x250>
    a73c:	b	a76c <little2_sameName+0x250>
    a740:	b	a76c <little2_sameName+0x250>
    a744:	b	a764 <little2_sameName+0x248>
    a748:	b	a764 <little2_sameName+0x248>
    a74c:	b	a764 <little2_sameName+0x248>
    a750:	b	a764 <little2_sameName+0x248>
    a754:	b	a764 <little2_sameName+0x248>
    a758:	b	a764 <little2_sameName+0x248>
    a75c:	b	a76c <little2_sameName+0x250>
    a760:	b	a764 <little2_sameName+0x248>
    a764:	mov	r0, #0
    a768:	b	a770 <little2_sameName+0x254>
    a76c:	mov	r0, #1
    a770:	ldr	r4, [sp, #8]
    a774:	ldr	r5, [sp, #12]
    a778:	ldr	r6, [sp, #16]
    a77c:	ldr	lr, [sp, #4]
    a780:	add	sp, sp, #24
    a784:	bx	lr

0000a788 <little2_nameMatchesAscii>:
    a788:	mov	ip, sp
    a78c:	sub	sp, sp, #8
    a790:	str	ip, [sp]
    a794:	str	lr, [sp, #4]
    a798:	ldrb	r0, [r3]
    a79c:	cmp	r0, #0
    a7a0:	beq	a7e0 <little2_nameMatchesAscii+0x58>
    a7a4:	cmp	r1, r2
    a7a8:	bne	a7b4 <little2_nameMatchesAscii+0x2c>
    a7ac:	mov	r0, #0
    a7b0:	b	a7ec <little2_nameMatchesAscii+0x64>
    a7b4:	ldrb	ip, [r1, #1]
    a7b8:	cmp	ip, #0
    a7bc:	bne	a7d8 <little2_nameMatchesAscii+0x50>
    a7c0:	ldrb	ip, [r1]
    a7c4:	cmp	ip, r0
    a7c8:	bne	a7d8 <little2_nameMatchesAscii+0x50>
    a7cc:	add	r1, r1, #2
    a7d0:	add	r3, r3, #1
    a7d4:	b	a798 <little2_nameMatchesAscii+0x10>
    a7d8:	mov	r0, #0
    a7dc:	b	a7ec <little2_nameMatchesAscii+0x64>
    a7e0:	cmp	r1, r2
    a7e4:	moveq	r0, #1
    a7e8:	movne	r0, #0
    a7ec:	ldr	lr, [sp, #4]
    a7f0:	add	sp, sp, #8
    a7f4:	bx	lr

0000a7f8 <little2_nameLength>:
    a7f8:	mov	ip, sp
    a7fc:	sub	sp, sp, #24
    a800:	str	ip, [sp]
    a804:	str	lr, [sp, #4]
    a808:	str	r4, [sp, #8]
    a80c:	str	r5, [sp, #12]
    a810:	str	r6, [sp, #16]
    a814:	mov	r4, r1
    a818:	mov	r5, r0
    a81c:	mov	r6, r4
    a820:	ldrb	r0, [r4, #1]
    a824:	cmp	r0, #0
    a828:	beq	a840 <little2_nameLength+0x48>
    a82c:	and	r0, r0, #255	; 0xff
    a830:	ldrb	r2, [r4]
    a834:	and	r1, r2, #255	; 0xff
    a838:	bl	52c8 <unicode_byte_type>
    a83c:	b	a850 <little2_nameLength+0x58>
    a840:	ldrb	r1, [r4]
    a844:	and	r1, r1, #255	; 0xff
    a848:	add	r2, r5, r1
    a84c:	ldrb	r0, [r2, #76]	; 0x4c
    a850:	sub	ip, r0, #5
    a854:	cmp	ip, #25
    a858:	bcs	a8e8 <little2_nameLength+0xf0>
    a85c:	add	pc, pc, ip, lsl #2
    a860:	nop	{0}
    a864:	b	a8c8 <little2_nameLength+0xd0>
    a868:	b	a8d0 <little2_nameLength+0xd8>
    a86c:	b	a8d8 <little2_nameLength+0xe0>
    a870:	b	a8e8 <little2_nameLength+0xf0>
    a874:	b	a8e8 <little2_nameLength+0xf0>
    a878:	b	a8e8 <little2_nameLength+0xf0>
    a87c:	b	a8e8 <little2_nameLength+0xf0>
    a880:	b	a8e8 <little2_nameLength+0xf0>
    a884:	b	a8e8 <little2_nameLength+0xf0>
    a888:	b	a8e8 <little2_nameLength+0xf0>
    a88c:	b	a8e8 <little2_nameLength+0xf0>
    a890:	b	a8e8 <little2_nameLength+0xf0>
    a894:	b	a8e8 <little2_nameLength+0xf0>
    a898:	b	a8e8 <little2_nameLength+0xf0>
    a89c:	b	a8e8 <little2_nameLength+0xf0>
    a8a0:	b	a8e8 <little2_nameLength+0xf0>
    a8a4:	b	a8e8 <little2_nameLength+0xf0>
    a8a8:	b	a8e0 <little2_nameLength+0xe8>
    a8ac:	b	a8e0 <little2_nameLength+0xe8>
    a8b0:	b	a8e0 <little2_nameLength+0xe8>
    a8b4:	b	a8e0 <little2_nameLength+0xe8>
    a8b8:	b	a8e0 <little2_nameLength+0xe8>
    a8bc:	b	a8e0 <little2_nameLength+0xe8>
    a8c0:	b	a8e8 <little2_nameLength+0xf0>
    a8c4:	b	a8e0 <little2_nameLength+0xe8>
    a8c8:	add	r4, r4, #2
    a8cc:	b	a820 <little2_nameLength+0x28>
    a8d0:	add	r4, r4, #3
    a8d4:	b	a820 <little2_nameLength+0x28>
    a8d8:	add	r4, r4, #4
    a8dc:	b	a820 <little2_nameLength+0x28>
    a8e0:	add	r4, r4, #2
    a8e4:	b	a820 <little2_nameLength+0x28>
    a8e8:	sub	r0, r4, r6
    a8ec:	ldr	r4, [sp, #8]
    a8f0:	ldr	r5, [sp, #12]
    a8f4:	ldr	r6, [sp, #16]
    a8f8:	ldr	lr, [sp, #4]
    a8fc:	add	sp, sp, #24
    a900:	bx	lr

0000a904 <little2_skipS>:
    a904:	mov	ip, sp
    a908:	sub	sp, sp, #16
    a90c:	str	ip, [sp]
    a910:	str	lr, [sp, #4]
    a914:	str	r4, [sp, #8]
    a918:	str	r5, [sp, #12]
    a91c:	mov	r4, r1
    a920:	mov	r5, r0
    a924:	ldrb	r0, [r4, #1]
    a928:	cmp	r0, #0
    a92c:	beq	a944 <little2_skipS+0x40>
    a930:	and	r0, r0, #255	; 0xff
    a934:	ldrb	r1, [r4]
    a938:	and	r1, r1, #255	; 0xff
    a93c:	bl	52c8 <unicode_byte_type>
    a940:	b	a954 <little2_skipS+0x50>
    a944:	ldrb	r2, [r4]
    a948:	and	r1, r2, #255	; 0xff
    a94c:	add	r3, r5, r1
    a950:	ldrb	r0, [r3, #76]	; 0x4c
    a954:	cmp	r0, #9
    a958:	beq	a984 <little2_skipS+0x80>
    a95c:	cmp	r0, #10
    a960:	beq	a984 <little2_skipS+0x80>
    a964:	cmp	r0, #21
    a968:	beq	a984 <little2_skipS+0x80>
    a96c:	mov	r0, r4
    a970:	ldr	r4, [sp, #8]
    a974:	ldr	r5, [sp, #12]
    a978:	ldr	lr, [sp, #4]
    a97c:	add	sp, sp, #16
    a980:	bx	lr
    a984:	add	r4, r4, #2
    a988:	b	a924 <little2_skipS+0x20>

0000a98c <little2_updatePosition>:
    a98c:	mov	ip, sp
    a990:	sub	sp, sp, #24
    a994:	str	ip, [sp]
    a998:	str	lr, [sp, #4]
    a99c:	str	r4, [sp, #8]
    a9a0:	str	r5, [sp, #12]
    a9a4:	str	r6, [sp, #16]
    a9a8:	str	r7, [sp, #20]
    a9ac:	mov	r5, r3
    a9b0:	mov	r6, r2
    a9b4:	mov	r4, r1
    a9b8:	mov	r7, r0
    a9bc:	cmp	r4, r6
    a9c0:	bcs	ab34 <little2_updatePosition+0x1a8>
    a9c4:	ldrb	r0, [r4, #1]
    a9c8:	cmp	r0, #0
    a9cc:	beq	a9e4 <little2_updatePosition+0x58>
    a9d0:	and	r0, r0, #255	; 0xff
    a9d4:	ldrb	r3, [r4]
    a9d8:	and	r1, r3, #255	; 0xff
    a9dc:	bl	52c8 <unicode_byte_type>
    a9e0:	b	a9f4 <little2_updatePosition+0x68>
    a9e4:	ldrb	r1, [r4]
    a9e8:	and	r1, r1, #255	; 0xff
    a9ec:	add	r2, r7, r1
    a9f0:	ldrb	r0, [r2, #76]	; 0x4c
    a9f4:	cmp	r0, #7
    a9f8:	bcs	aa1c <little2_updatePosition+0x90>
    a9fc:	cmp	r0, #5
    aa00:	beq	aa14 <little2_updatePosition+0x88>
    aa04:	cmp	r0, #6
    aa08:	bne	aa70 <little2_updatePosition+0xe4>
    aa0c:	add	r4, r4, #3
    aa10:	b	ab10 <little2_updatePosition+0x184>
    aa14:	add	r4, r4, #2
    aa18:	b	ab10 <little2_updatePosition+0x184>
    aa1c:	cmp	r0, #7
    aa20:	beq	ab0c <little2_updatePosition+0x180>
    aa24:	cmp	r0, #9
    aa28:	beq	aa78 <little2_updatePosition+0xec>
    aa2c:	cmp	r0, #10
    aa30:	bne	aa70 <little2_updatePosition+0xe4>
    aa34:	mvn	r1, #0
    aa38:	mvn	r0, #0
    aa3c:	str	r0, [r5, #8]
    aa40:	str	r1, [r5, #12]
    aa44:	ldr	r0, [r5]
    aa48:	ldr	r1, [r5, #4]
    aa4c:	mov	ip, #0
    aa50:	mov	r3, #1
    aa54:	adds	lr, r0, r3
    aa58:	adc	r1, r1, ip
    aa5c:	mov	ip, lr
    aa60:	str	ip, [r5]
    aa64:	str	r1, [r5, #4]
    aa68:	add	r4, r4, #2
    aa6c:	b	ab10 <little2_updatePosition+0x184>
    aa70:	add	r4, r4, #2
    aa74:	b	ab10 <little2_updatePosition+0x184>
    aa78:	ldr	ip, [r5]
    aa7c:	ldr	r0, [r5, #4]
    aa80:	mov	r2, #0
    aa84:	mov	r1, #1
    aa88:	adds	ip, ip, r1
    aa8c:	adc	r0, r0, r2
    aa90:	str	ip, [r5]
    aa94:	str	r0, [r5, #4]
    aa98:	add	r4, r4, #2
    aa9c:	cmp	r4, r6
    aaa0:	beq	aae4 <little2_updatePosition+0x158>
    aaa4:	ldrb	ip, [r4, #1]
    aaa8:	cmp	ip, #0
    aaac:	beq	aac4 <little2_updatePosition+0x138>
    aab0:	and	r0, ip, #255	; 0xff
    aab4:	ldrb	r1, [r4]
    aab8:	and	r1, r1, #255	; 0xff
    aabc:	bl	52c8 <unicode_byte_type>
    aac0:	b	aad4 <little2_updatePosition+0x148>
    aac4:	ldrb	r0, [r4]
    aac8:	and	r2, r0, #255	; 0xff
    aacc:	add	r3, r7, r2
    aad0:	ldrb	r0, [r3, #76]	; 0x4c
    aad4:	cmp	r0, #10
    aad8:	moveq	r3, #1
    aadc:	movne	r3, #0
    aae0:	b	aae8 <little2_updatePosition+0x15c>
    aae4:	mov	r3, #0
    aae8:	add	r2, r4, #2
    aaec:	cmp	r3, #0
    aaf0:	movne	r4, r2
    aaf4:	moveq	r4, r4
    aaf8:	mvn	r3, #0
    aafc:	mvn	r2, #0
    ab00:	str	r2, [r5, #8]
    ab04:	str	r3, [r5, #12]
    ab08:	b	ab10 <little2_updatePosition+0x184>
    ab0c:	add	r4, r4, #4
    ab10:	ldr	r2, [r5, #8]
    ab14:	ldr	r3, [r5, #12]
    ab18:	mov	r1, #0
    ab1c:	mov	r0, #1
    ab20:	adds	r2, r2, r0
    ab24:	adc	ip, r3, r1
    ab28:	str	r2, [r5, #8]
    ab2c:	str	ip, [r5, #12]
    ab30:	b	a9bc <little2_updatePosition+0x30>
    ab34:	ldr	r4, [sp, #8]
    ab38:	ldr	r5, [sp, #12]
    ab3c:	ldr	r6, [sp, #16]
    ab40:	ldr	r7, [sp, #20]
    ab44:	ldr	lr, [sp, #4]
    ab48:	add	sp, sp, #24
    ab4c:	bx	lr

0000ab50 <big2_scanComment>:
    ab50:	mov	ip, sp
    ab54:	sub	sp, sp, #24
    ab58:	str	ip, [sp]
    ab5c:	str	lr, [sp, #4]
    ab60:	str	r4, [sp, #8]
    ab64:	str	r5, [sp, #12]
    ab68:	str	r6, [sp, #16]
    ab6c:	str	r7, [sp, #20]
    ab70:	mov	r5, r3
    ab74:	mov	r4, r2
    ab78:	mov	r7, r0
    ab7c:	cmp	r1, r4
    ab80:	beq	ad00 <big2_scanComment+0x1b0>
    ab84:	ldrb	r0, [r1]
    ab88:	cmp	r0, #0
    ab8c:	bne	acf4 <big2_scanComment+0x1a4>
    ab90:	ldrb	ip, [r1, #1]
    ab94:	cmp	ip, #45	; 0x2d
    ab98:	bne	acf4 <big2_scanComment+0x1a4>
    ab9c:	add	r6, r1, #2
    aba0:	cmp	r6, r4
    aba4:	beq	ad00 <big2_scanComment+0x1b0>
    aba8:	ldrb	r1, [r6]
    abac:	cmp	r1, #0
    abb0:	beq	abc8 <big2_scanComment+0x78>
    abb4:	and	r0, r1, #255	; 0xff
    abb8:	ldrb	r2, [r6, #1]
    abbc:	and	r1, r2, #255	; 0xff
    abc0:	bl	52c8 <unicode_byte_type>
    abc4:	b	abd8 <big2_scanComment+0x88>
    abc8:	ldrb	r2, [r6, #1]
    abcc:	and	r0, r2, #255	; 0xff
    abd0:	add	r3, r7, r0
    abd4:	ldrb	r0, [r3, #76]	; 0x4c
    abd8:	cmp	r0, #6
    abdc:	bcs	ac14 <big2_scanComment+0xc4>
    abe0:	cmp	r0, #0
    abe4:	beq	ace8 <big2_scanComment+0x198>
    abe8:	cmp	r0, #1
    abec:	beq	ace8 <big2_scanComment+0x198>
    abf0:	cmp	r0, #5
    abf4:	bne	ace0 <big2_scanComment+0x190>
    abf8:	sub	r1, r4, r6
    abfc:	cmp	r1, #2
    ac00:	bge	ac0c <big2_scanComment+0xbc>
    ac04:	mvn	r0, #1
    ac08:	b	ad04 <big2_scanComment+0x1b4>
    ac0c:	add	r6, r6, #2
    ac10:	b	aba0 <big2_scanComment+0x50>
    ac14:	cmp	r0, #8
    ac18:	bcs	ac5c <big2_scanComment+0x10c>
    ac1c:	cmp	r0, #6
    ac20:	bne	ac40 <big2_scanComment+0xf0>
    ac24:	sub	r3, r4, r6
    ac28:	cmp	r3, #3
    ac2c:	bge	ac38 <big2_scanComment+0xe8>
    ac30:	mvn	r0, #1
    ac34:	b	ad04 <big2_scanComment+0x1b4>
    ac38:	add	r6, r6, #3
    ac3c:	b	aba0 <big2_scanComment+0x50>
    ac40:	sub	r2, r4, r6
    ac44:	cmp	r2, #4
    ac48:	bge	ac54 <big2_scanComment+0x104>
    ac4c:	mvn	r0, #1
    ac50:	b	ad04 <big2_scanComment+0x1b4>
    ac54:	add	r6, r6, #4
    ac58:	b	aba0 <big2_scanComment+0x50>
    ac5c:	cmp	r0, #8
    ac60:	beq	ace8 <big2_scanComment+0x198>
    ac64:	cmp	r0, #27
    ac68:	bne	ace0 <big2_scanComment+0x190>
    ac6c:	add	r6, r6, #2
    ac70:	cmp	r6, r4
    ac74:	bne	ac80 <big2_scanComment+0x130>
    ac78:	mvn	r0, #0
    ac7c:	b	ad04 <big2_scanComment+0x1b4>
    ac80:	ldrb	r0, [r6]
    ac84:	cmp	r0, #0
    ac88:	bne	aba0 <big2_scanComment+0x50>
    ac8c:	ldrb	ip, [r6, #1]
    ac90:	cmp	ip, #45	; 0x2d
    ac94:	bne	aba0 <big2_scanComment+0x50>
    ac98:	add	r0, r6, #2
    ac9c:	cmp	r0, r4
    aca0:	bne	acac <big2_scanComment+0x15c>
    aca4:	mvn	r0, #0
    aca8:	b	ad04 <big2_scanComment+0x1b4>
    acac:	ldrb	r1, [r6, #2]
    acb0:	cmp	r1, #0
    acb4:	bne	acd4 <big2_scanComment+0x184>
    acb8:	ldrb	ip, [r6, #3]
    acbc:	cmp	ip, #62	; 0x3e
    acc0:	bne	acd4 <big2_scanComment+0x184>
    acc4:	add	r2, r6, #4
    acc8:	str	r2, [r5]
    accc:	mov	r0, #13
    acd0:	b	ad04 <big2_scanComment+0x1b4>
    acd4:	str	r0, [r5]
    acd8:	mov	r0, #0
    acdc:	b	ad04 <big2_scanComment+0x1b4>
    ace0:	add	r6, r6, #2
    ace4:	b	aba0 <big2_scanComment+0x50>
    ace8:	str	r6, [r5]
    acec:	mov	r0, #0
    acf0:	b	ad04 <big2_scanComment+0x1b4>
    acf4:	str	r1, [r5]
    acf8:	mov	r0, #0
    acfc:	b	ad04 <big2_scanComment+0x1b4>
    ad00:	mvn	r0, #0
    ad04:	ldr	r4, [sp, #8]
    ad08:	ldr	r5, [sp, #12]
    ad0c:	ldr	r6, [sp, #16]
    ad10:	ldr	r7, [sp, #20]
    ad14:	ldr	lr, [sp, #4]
    ad18:	add	sp, sp, #24
    ad1c:	bx	lr

0000ad20 <big2_checkPiTarget>:
    ad20:	mov	ip, sp
    ad24:	sub	sp, sp, #16
    ad28:	str	ip, [sp]
    ad2c:	str	lr, [sp, #4]
    ad30:	str	r4, [sp, #8]
    ad34:	mov	r4, #0
    ad38:	mov	ip, #11
    ad3c:	str	ip, [r3]
    ad40:	sub	ip, r2, r1
    ad44:	cmp	ip, #6
    ad48:	beq	ad54 <big2_checkPiTarget+0x34>
    ad4c:	mov	r0, #1
    ad50:	b	ae10 <big2_checkPiTarget+0xf0>
    ad54:	ldrb	r0, [r1]
    ad58:	cmp	r0, #0
    ad5c:	beq	ad68 <big2_checkPiTarget+0x48>
    ad60:	mvn	r2, #0
    ad64:	b	ad6c <big2_checkPiTarget+0x4c>
    ad68:	ldrb	r2, [r1, #1]
    ad6c:	cmp	r2, #88	; 0x58
    ad70:	beq	ad84 <big2_checkPiTarget+0x64>
    ad74:	cmp	r2, #120	; 0x78
    ad78:	beq	ad88 <big2_checkPiTarget+0x68>
    ad7c:	mov	r0, #1
    ad80:	b	ae10 <big2_checkPiTarget+0xf0>
    ad84:	mov	r4, #1
    ad88:	add	r2, r1, #2
    ad8c:	ldrb	ip, [r2]
    ad90:	cmp	ip, #0
    ad94:	beq	ada0 <big2_checkPiTarget+0x80>
    ad98:	mvn	r0, #0
    ad9c:	b	ada4 <big2_checkPiTarget+0x84>
    ada0:	ldrb	r0, [r2, #1]
    ada4:	cmp	r0, #77	; 0x4d
    ada8:	beq	adbc <big2_checkPiTarget+0x9c>
    adac:	cmp	r0, #109	; 0x6d
    adb0:	beq	adc0 <big2_checkPiTarget+0xa0>
    adb4:	mov	r0, #1
    adb8:	b	ae10 <big2_checkPiTarget+0xf0>
    adbc:	mov	r4, #1
    adc0:	add	ip, r2, #2
    adc4:	ldrb	r1, [ip]
    adc8:	cmp	r1, #0
    adcc:	beq	add8 <big2_checkPiTarget+0xb8>
    add0:	mvn	r1, #0
    add4:	b	addc <big2_checkPiTarget+0xbc>
    add8:	ldrb	r1, [ip, #1]
    addc:	cmp	r1, #76	; 0x4c
    ade0:	beq	ae0c <big2_checkPiTarget+0xec>
    ade4:	cmp	r1, #108	; 0x6c
    ade8:	beq	adf4 <big2_checkPiTarget+0xd4>
    adec:	mov	r0, #1
    adf0:	b	ae10 <big2_checkPiTarget+0xf0>
    adf4:	cmp	r4, #0
    adf8:	bne	ae0c <big2_checkPiTarget+0xec>
    adfc:	mov	ip, #12
    ae00:	str	ip, [r3]
    ae04:	mov	r0, #1
    ae08:	b	ae10 <big2_checkPiTarget+0xf0>
    ae0c:	mov	r0, #0
    ae10:	ldr	r4, [sp, #8]
    ae14:	ldr	lr, [sp, #4]
    ae18:	add	sp, sp, #16
    ae1c:	bx	lr

0000ae20 <big2_scanPi>:
    ae20:	mov	ip, sp
    ae24:	sub	sp, sp, #40	; 0x28
    ae28:	str	ip, [sp]
    ae2c:	str	lr, [sp, #4]
    ae30:	str	r4, [sp, #8]
    ae34:	str	r5, [sp, #12]
    ae38:	str	r6, [sp, #16]
    ae3c:	str	r7, [sp, #20]
    ae40:	str	r8, [sp, #24]
    ae44:	str	r9, [sp, #28]
    ae48:	mov	r7, r3
    ae4c:	mov	r6, r2
    ae50:	mov	r4, r1
    ae54:	mov	r8, r0
    ae58:	cmp	r4, r6
    ae5c:	bne	ae68 <big2_scanPi+0x48>
    ae60:	mvn	r0, #0
    ae64:	b	b2c4 <big2_scanPi+0x4a4>
    ae68:	ldrb	r3, [r4]
    ae6c:	cmp	r3, #0
    ae70:	beq	ae88 <big2_scanPi+0x68>
    ae74:	and	r0, r3, #255	; 0xff
    ae78:	ldrb	r3, [r4, #1]
    ae7c:	and	r1, r3, #255	; 0xff
    ae80:	bl	52c8 <unicode_byte_type>
    ae84:	b	ae98 <big2_scanPi+0x78>
    ae88:	ldrb	r1, [r4, #1]
    ae8c:	and	ip, r1, #255	; 0xff
    ae90:	add	r1, r8, ip
    ae94:	ldrb	r0, [r1, #76]	; 0x4c
    ae98:	cmp	r0, #22
    ae9c:	bcs	af18 <big2_scanPi+0xf8>
    aea0:	cmp	r0, #5
    aea4:	beq	aef8 <big2_scanPi+0xd8>
    aea8:	cmp	r0, #6
    aeac:	beq	aed8 <big2_scanPi+0xb8>
    aeb0:	cmp	r0, #7
    aeb4:	bne	af7c <big2_scanPi+0x15c>
    aeb8:	sub	r3, r6, r4
    aebc:	cmp	r3, #4
    aec0:	bge	aecc <big2_scanPi+0xac>
    aec4:	mvn	r0, #1
    aec8:	b	b2c4 <big2_scanPi+0x4a4>
    aecc:	str	r4, [r7]
    aed0:	mov	r0, #0
    aed4:	b	b2c4 <big2_scanPi+0x4a4>
    aed8:	sub	r0, r6, r4
    aedc:	cmp	r0, #3
    aee0:	bge	aeec <big2_scanPi+0xcc>
    aee4:	mvn	r0, #1
    aee8:	b	b2c4 <big2_scanPi+0x4a4>
    aeec:	str	r4, [r7]
    aef0:	mov	r0, #0
    aef4:	b	b2c4 <big2_scanPi+0x4a4>
    aef8:	sub	r2, r6, r4
    aefc:	cmp	r2, #2
    af00:	bge	af0c <big2_scanPi+0xec>
    af04:	mvn	r0, #1
    af08:	b	b2c4 <big2_scanPi+0x4a4>
    af0c:	str	r4, [r7]
    af10:	mov	r0, #0
    af14:	b	b2c4 <big2_scanPi+0x4a4>
    af18:	cmp	r0, #22
    af1c:	beq	af88 <big2_scanPi+0x168>
    af20:	cmp	r0, #24
    af24:	beq	af88 <big2_scanPi+0x168>
    af28:	cmp	r0, #29
    af2c:	bne	af7c <big2_scanPi+0x15c>
    af30:	ldr	r5, [pc, #944]	; b2e8 <big2_scanPi+0x4c8>
    af34:	ldrb	r0, [r4, #1]
    af38:	and	r2, r0, #255	; 0xff
    af3c:	asr	ip, r2, #5
    af40:	ldr	r1, [pc, #932]	; b2ec <big2_scanPi+0x4cc>
    af44:	ldrb	r3, [r4]
    af48:	and	r2, r3, #255	; 0xff
    af4c:	ldrb	r3, [r1, r2]
    af50:	add	r3, ip, r3, lsl #3
    af54:	ldr	r2, [r5, r3, lsl #2]
    af58:	mov	r1, #1
    af5c:	and	r3, r0, #31
    af60:	lsl	r0, r1, r3
    af64:	and	r3, r2, r0
    af68:	cmp	r3, #0
    af6c:	bne	af88 <big2_scanPi+0x168>
    af70:	str	r4, [r7]
    af74:	mov	r0, #0
    af78:	b	b2c4 <big2_scanPi+0x4a4>
    af7c:	str	r4, [r7]
    af80:	mov	r0, #0
    af84:	b	b2c4 <big2_scanPi+0x4a4>
    af88:	add	r5, r4, #2
    af8c:	cmp	r5, r6
    af90:	beq	b2c0 <big2_scanPi+0x4a0>
    af94:	ldrb	ip, [r5]
    af98:	cmp	ip, #0
    af9c:	beq	afb4 <big2_scanPi+0x194>
    afa0:	and	r0, ip, #255	; 0xff
    afa4:	ldrb	r3, [r5, #1]
    afa8:	and	r1, r3, #255	; 0xff
    afac:	bl	52c8 <unicode_byte_type>
    afb0:	b	afc4 <big2_scanPi+0x1a4>
    afb4:	ldrb	r2, [r5, #1]
    afb8:	and	ip, r2, #255	; 0xff
    afbc:	add	r2, r8, ip
    afc0:	ldrb	r0, [r2, #76]	; 0x4c
    afc4:	sub	r0, r0, #5
    afc8:	cmp	r0, #25
    afcc:	bcs	b2b4 <big2_scanPi+0x494>
    afd0:	add	pc, pc, r0, lsl #2
    afd4:	nop	{0}
    afd8:	b	b090 <big2_scanPi+0x270>
    afdc:	b	b0b0 <big2_scanPi+0x290>
    afe0:	b	b0d0 <big2_scanPi+0x2b0>
    afe4:	b	b2b4 <big2_scanPi+0x494>
    afe8:	b	b0f0 <big2_scanPi+0x2d0>
    afec:	b	b0f0 <big2_scanPi+0x2d0>
    aff0:	b	b2b4 <big2_scanPi+0x494>
    aff4:	b	b2b4 <big2_scanPi+0x494>
    aff8:	b	b2b4 <big2_scanPi+0x494>
    affc:	b	b2b4 <big2_scanPi+0x494>
    b000:	b	b250 <big2_scanPi+0x430>
    b004:	b	b2b4 <big2_scanPi+0x494>
    b008:	b	b2b4 <big2_scanPi+0x494>
    b00c:	b	b2b4 <big2_scanPi+0x494>
    b010:	b	b2b4 <big2_scanPi+0x494>
    b014:	b	b2b4 <big2_scanPi+0x494>
    b018:	b	b0f0 <big2_scanPi+0x2d0>
    b01c:	b	b088 <big2_scanPi+0x268>
    b020:	b	b2b4 <big2_scanPi+0x494>
    b024:	b	b088 <big2_scanPi+0x268>
    b028:	b	b088 <big2_scanPi+0x268>
    b02c:	b	b088 <big2_scanPi+0x268>
    b030:	b	b088 <big2_scanPi+0x268>
    b034:	b	b2b4 <big2_scanPi+0x494>
    b038:	b	b03c <big2_scanPi+0x21c>
    b03c:	ldr	r9, [pc, #676]	; b2e8 <big2_scanPi+0x4c8>
    b040:	ldrb	r1, [r5, #1]
    b044:	and	r2, r1, #255	; 0xff
    b048:	asr	r3, r2, #5
    b04c:	ldr	ip, [pc, #668]	; b2f0 <big2_scanPi+0x4d0>
    b050:	ldrb	r0, [r5]
    b054:	and	r0, r0, #255	; 0xff
    b058:	ldrb	r2, [ip, r0]
    b05c:	add	r2, r3, r2, lsl #3
    b060:	ldr	ip, [r9, r2, lsl #2]
    b064:	mov	r2, #1
    b068:	and	r0, r1, #31
    b06c:	lsl	r1, r2, r0
    b070:	and	r1, ip, r1
    b074:	cmp	r1, #0
    b078:	bne	b088 <big2_scanPi+0x268>
    b07c:	str	r5, [r7]
    b080:	mov	r0, #0
    b084:	b	b2c4 <big2_scanPi+0x4a4>
    b088:	add	r5, r5, #2
    b08c:	b	af8c <big2_scanPi+0x16c>
    b090:	sub	r0, r6, r5
    b094:	cmp	r0, #2
    b098:	bge	b0a4 <big2_scanPi+0x284>
    b09c:	mvn	r0, #1
    b0a0:	b	b2c4 <big2_scanPi+0x4a4>
    b0a4:	str	r5, [r7]
    b0a8:	mov	r0, #0
    b0ac:	b	b2c4 <big2_scanPi+0x4a4>
    b0b0:	sub	r3, r6, r5
    b0b4:	cmp	r3, #3
    b0b8:	bge	b0c4 <big2_scanPi+0x2a4>
    b0bc:	mvn	r0, #1
    b0c0:	b	b2c4 <big2_scanPi+0x4a4>
    b0c4:	str	r5, [r7]
    b0c8:	mov	r0, #0
    b0cc:	b	b2c4 <big2_scanPi+0x4a4>
    b0d0:	sub	r0, r6, r5
    b0d4:	cmp	r0, #4
    b0d8:	bge	b0e4 <big2_scanPi+0x2c4>
    b0dc:	mvn	r0, #1
    b0e0:	b	b2c4 <big2_scanPi+0x4a4>
    b0e4:	str	r5, [r7]
    b0e8:	mov	r0, #0
    b0ec:	b	b2c4 <big2_scanPi+0x4a4>
    b0f0:	add	r3, sp, #32
    b0f4:	mov	r2, r5
    b0f8:	mov	r1, r4
    b0fc:	mov	r0, r8
    b100:	bl	ad20 <big2_checkPiTarget>
    b104:	cmp	r0, #0
    b108:	bne	b118 <big2_scanPi+0x2f8>
    b10c:	str	r5, [r7]
    b110:	mov	r0, #0
    b114:	b	b2c4 <big2_scanPi+0x4a4>
    b118:	add	r4, r5, #2
    b11c:	cmp	r4, r6
    b120:	beq	b248 <big2_scanPi+0x428>
    b124:	ldrb	r2, [r4]
    b128:	cmp	r2, #0
    b12c:	beq	b144 <big2_scanPi+0x324>
    b130:	and	r0, r2, #255	; 0xff
    b134:	ldrb	ip, [r4, #1]
    b138:	and	r1, ip, #255	; 0xff
    b13c:	bl	52c8 <unicode_byte_type>
    b140:	b	b154 <big2_scanPi+0x334>
    b144:	ldrb	r1, [r4, #1]
    b148:	and	r0, r1, #255	; 0xff
    b14c:	add	ip, r8, r0
    b150:	ldrb	r0, [ip, #76]	; 0x4c
    b154:	cmp	r0, #16
    b158:	bcs	b240 <big2_scanPi+0x420>
    b15c:	add	pc, pc, r0, lsl #2
    b160:	nop	{0}
    b164:	b	b1f8 <big2_scanPi+0x3d8>
    b168:	b	b1f8 <big2_scanPi+0x3d8>
    b16c:	b	b240 <big2_scanPi+0x420>
    b170:	b	b240 <big2_scanPi+0x420>
    b174:	b	b240 <big2_scanPi+0x420>
    b178:	b	b1a4 <big2_scanPi+0x384>
    b17c:	b	b1c0 <big2_scanPi+0x3a0>
    b180:	b	b1dc <big2_scanPi+0x3bc>
    b184:	b	b1f8 <big2_scanPi+0x3d8>
    b188:	b	b240 <big2_scanPi+0x420>
    b18c:	b	b240 <big2_scanPi+0x420>
    b190:	b	b240 <big2_scanPi+0x420>
    b194:	b	b240 <big2_scanPi+0x420>
    b198:	b	b240 <big2_scanPi+0x420>
    b19c:	b	b240 <big2_scanPi+0x420>
    b1a0:	b	b204 <big2_scanPi+0x3e4>
    b1a4:	sub	r2, r6, r4
    b1a8:	cmp	r2, #2
    b1ac:	bge	b1b8 <big2_scanPi+0x398>
    b1b0:	mvn	r0, #1
    b1b4:	b	b2c4 <big2_scanPi+0x4a4>
    b1b8:	add	r4, r4, #2
    b1bc:	b	b11c <big2_scanPi+0x2fc>
    b1c0:	sub	r0, r6, r4
    b1c4:	cmp	r0, #3
    b1c8:	bge	b1d4 <big2_scanPi+0x3b4>
    b1cc:	mvn	r0, #1
    b1d0:	b	b2c4 <big2_scanPi+0x4a4>
    b1d4:	add	r4, r4, #3
    b1d8:	b	b11c <big2_scanPi+0x2fc>
    b1dc:	sub	ip, r6, r4
    b1e0:	cmp	ip, #4
    b1e4:	bge	b1f0 <big2_scanPi+0x3d0>
    b1e8:	mvn	r0, #1
    b1ec:	b	b2c4 <big2_scanPi+0x4a4>
    b1f0:	add	r4, r4, #4
    b1f4:	b	b11c <big2_scanPi+0x2fc>
    b1f8:	str	r4, [r7]
    b1fc:	mov	r0, #0
    b200:	b	b2c4 <big2_scanPi+0x4a4>
    b204:	add	r4, r4, #2
    b208:	cmp	r4, r6
    b20c:	bne	b218 <big2_scanPi+0x3f8>
    b210:	mvn	r0, #0
    b214:	b	b2c4 <big2_scanPi+0x4a4>
    b218:	ldrb	ip, [r4]
    b21c:	cmp	ip, #0
    b220:	bne	b11c <big2_scanPi+0x2fc>
    b224:	ldrb	ip, [r4, #1]
    b228:	cmp	ip, #62	; 0x3e
    b22c:	bne	b11c <big2_scanPi+0x2fc>
    b230:	add	r0, r4, #2
    b234:	str	r0, [r7]
    b238:	ldr	r0, [sp, #32]
    b23c:	b	b2c4 <big2_scanPi+0x4a4>
    b240:	add	r4, r4, #2
    b244:	b	b11c <big2_scanPi+0x2fc>
    b248:	mvn	r0, #0
    b24c:	b	b2c4 <big2_scanPi+0x4a4>
    b250:	add	r3, sp, #32
    b254:	mov	r2, r5
    b258:	mov	r1, r4
    b25c:	mov	r0, r8
    b260:	bl	ad20 <big2_checkPiTarget>
    b264:	cmp	r0, #0
    b268:	bne	b278 <big2_scanPi+0x458>
    b26c:	str	r5, [r7]
    b270:	mov	r0, #0
    b274:	b	b2c4 <big2_scanPi+0x4a4>
    b278:	add	r5, r5, #2
    b27c:	cmp	r5, r6
    b280:	bne	b28c <big2_scanPi+0x46c>
    b284:	mvn	r0, #0
    b288:	b	b2c4 <big2_scanPi+0x4a4>
    b28c:	ldrb	r1, [r5]
    b290:	cmp	r1, #0
    b294:	bne	b2b4 <big2_scanPi+0x494>
    b298:	ldrb	r3, [r5, #1]
    b29c:	cmp	r3, #62	; 0x3e
    b2a0:	bne	b2b4 <big2_scanPi+0x494>
    b2a4:	add	r0, r5, #2
    b2a8:	str	r0, [r7]
    b2ac:	ldr	r0, [sp, #32]
    b2b0:	b	b2c4 <big2_scanPi+0x4a4>
    b2b4:	str	r5, [r7]
    b2b8:	mov	r0, #0
    b2bc:	b	b2c4 <big2_scanPi+0x4a4>
    b2c0:	mvn	r0, #0
    b2c4:	ldr	r4, [sp, #8]
    b2c8:	ldr	r5, [sp, #12]
    b2cc:	ldr	r6, [sp, #16]
    b2d0:	ldr	r7, [sp, #20]
    b2d4:	ldr	r8, [sp, #24]
    b2d8:	ldr	r9, [sp, #28]
    b2dc:	ldr	lr, [sp, #4]
    b2e0:	add	sp, sp, #40	; 0x28
    b2e4:	bx	lr
    b2e8:	.word	0x00000000
    b2ec:	.word	0x00000500
    b2f0:	.word	0x00000600

0000b2f4 <big2_cdataSectionTok>:
    b2f4:	mov	ip, sp
    b2f8:	sub	sp, sp, #24
    b2fc:	str	ip, [sp]
    b300:	str	lr, [sp, #4]
    b304:	str	r4, [sp, #8]
    b308:	str	r5, [sp, #12]
    b30c:	str	r6, [sp, #16]
    b310:	str	r7, [sp, #20]
    b314:	mov	r5, r3
    b318:	mov	r6, r2
    b31c:	mov	r7, r1
    b320:	mov	r4, r0
    b324:	cmp	r7, r6
    b328:	bne	b334 <big2_cdataSectionTok+0x40>
    b32c:	mvn	r0, #3
    b330:	b	b638 <big2_cdataSectionTok+0x344>
    b334:	sub	r0, r6, r7
    b338:	and	r3, r0, #1
    b33c:	cmp	r3, #0
    b340:	beq	b35c <big2_cdataSectionTok+0x68>
    b344:	bic	r0, r0, #1
    b348:	cmp	r0, #0
    b34c:	bne	b358 <big2_cdataSectionTok+0x64>
    b350:	mvn	r0, #0
    b354:	b	b638 <big2_cdataSectionTok+0x344>
    b358:	add	r6, r7, r0
    b35c:	ldrb	r1, [r7]
    b360:	cmp	r1, #0
    b364:	beq	b37c <big2_cdataSectionTok+0x88>
    b368:	and	r0, r1, #255	; 0xff
    b36c:	ldrb	ip, [r7, #1]
    b370:	and	r1, ip, #255	; 0xff
    b374:	bl	52c8 <unicode_byte_type>
    b378:	b	b38c <big2_cdataSectionTok+0x98>
    b37c:	ldrb	r3, [r7, #1]
    b380:	and	ip, r3, #255	; 0xff
    b384:	add	r1, r4, ip
    b388:	ldrb	r0, [r1, #76]	; 0x4c
    b38c:	cmp	r0, #11
    b390:	bcs	b508 <big2_cdataSectionTok+0x214>
    b394:	add	pc, pc, r0, lsl #2
    b398:	nop	{0}
    b39c:	b	b4fc <big2_cdataSectionTok+0x208>
    b3a0:	b	b4fc <big2_cdataSectionTok+0x208>
    b3a4:	b	b508 <big2_cdataSectionTok+0x214>
    b3a8:	b	b508 <big2_cdataSectionTok+0x214>
    b3ac:	b	b3c8 <big2_cdataSectionTok+0xd4>
    b3b0:	b	b4a8 <big2_cdataSectionTok+0x1b4>
    b3b4:	b	b4c4 <big2_cdataSectionTok+0x1d0>
    b3b8:	b	b4e0 <big2_cdataSectionTok+0x1ec>
    b3bc:	b	b4fc <big2_cdataSectionTok+0x208>
    b3c0:	b	b438 <big2_cdataSectionTok+0x144>
    b3c4:	b	b498 <big2_cdataSectionTok+0x1a4>
    b3c8:	add	r7, r7, #2
    b3cc:	cmp	r7, r6
    b3d0:	bne	b3dc <big2_cdataSectionTok+0xe8>
    b3d4:	mvn	r0, #0
    b3d8:	b	b638 <big2_cdataSectionTok+0x344>
    b3dc:	ldrb	r3, [r7]
    b3e0:	cmp	r3, #0
    b3e4:	bne	b50c <big2_cdataSectionTok+0x218>
    b3e8:	ldrb	r0, [r7, #1]
    b3ec:	cmp	r0, #93	; 0x5d
    b3f0:	bne	b50c <big2_cdataSectionTok+0x218>
    b3f4:	add	r2, r7, #2
    b3f8:	cmp	r2, r6
    b3fc:	bne	b408 <big2_cdataSectionTok+0x114>
    b400:	mvn	r0, #0
    b404:	b	b638 <big2_cdataSectionTok+0x344>
    b408:	ldrb	r0, [r2]
    b40c:	cmp	r0, #0
    b410:	bne	b430 <big2_cdataSectionTok+0x13c>
    b414:	ldrb	r3, [r2, #1]
    b418:	cmp	r3, #62	; 0x3e
    b41c:	bne	b430 <big2_cdataSectionTok+0x13c>
    b420:	add	r2, r2, #2
    b424:	str	r2, [r5]
    b428:	mov	r0, #40	; 0x28
    b42c:	b	b638 <big2_cdataSectionTok+0x344>
    b430:	sub	r7, r2, #2
    b434:	b	b50c <big2_cdataSectionTok+0x218>
    b438:	add	r7, r7, #2
    b43c:	cmp	r7, r6
    b440:	bne	b44c <big2_cdataSectionTok+0x158>
    b444:	mvn	r0, #0
    b448:	b	b638 <big2_cdataSectionTok+0x344>
    b44c:	ldrb	r2, [r7]
    b450:	cmp	r2, #0
    b454:	beq	b46c <big2_cdataSectionTok+0x178>
    b458:	and	r0, r2, #255	; 0xff
    b45c:	ldrb	r3, [r7, #1]
    b460:	and	r1, r3, #255	; 0xff
    b464:	bl	52c8 <unicode_byte_type>
    b468:	b	b47c <big2_cdataSectionTok+0x188>
    b46c:	ldrb	r1, [r7, #1]
    b470:	and	ip, r1, #255	; 0xff
    b474:	add	ip, r4, ip
    b478:	ldrb	r0, [ip, #76]	; 0x4c
    b47c:	add	ip, r7, #2
    b480:	cmp	r0, #10
    b484:	moveq	r2, ip
    b488:	movne	r2, r7
    b48c:	str	r2, [r5]
    b490:	mov	r0, #7
    b494:	b	b638 <big2_cdataSectionTok+0x344>
    b498:	add	r3, r7, #2
    b49c:	str	r3, [r5]
    b4a0:	mov	r0, #7
    b4a4:	b	b638 <big2_cdataSectionTok+0x344>
    b4a8:	sub	r1, r6, r7
    b4ac:	cmp	r1, #2
    b4b0:	bge	b4bc <big2_cdataSectionTok+0x1c8>
    b4b4:	mvn	r0, #1
    b4b8:	b	b638 <big2_cdataSectionTok+0x344>
    b4bc:	add	r7, r7, #2
    b4c0:	b	b50c <big2_cdataSectionTok+0x218>
    b4c4:	sub	r0, r6, r7
    b4c8:	cmp	r0, #3
    b4cc:	bge	b4d8 <big2_cdataSectionTok+0x1e4>
    b4d0:	mvn	r0, #1
    b4d4:	b	b638 <big2_cdataSectionTok+0x344>
    b4d8:	add	r7, r7, #3
    b4dc:	b	b50c <big2_cdataSectionTok+0x218>
    b4e0:	sub	r3, r6, r7
    b4e4:	cmp	r3, #4
    b4e8:	bge	b4f4 <big2_cdataSectionTok+0x200>
    b4ec:	mvn	r0, #1
    b4f0:	b	b638 <big2_cdataSectionTok+0x344>
    b4f4:	add	r7, r7, #4
    b4f8:	b	b50c <big2_cdataSectionTok+0x218>
    b4fc:	str	r7, [r5]
    b500:	mov	r0, #0
    b504:	b	b638 <big2_cdataSectionTok+0x344>
    b508:	add	r7, r7, #2
    b50c:	cmp	r7, r6
    b510:	beq	b630 <big2_cdataSectionTok+0x33c>
    b514:	ldrb	r0, [r7]
    b518:	cmp	r0, #0
    b51c:	beq	b534 <big2_cdataSectionTok+0x240>
    b520:	and	r0, r0, #255	; 0xff
    b524:	ldrb	r2, [r7, #1]
    b528:	and	r1, r2, #255	; 0xff
    b52c:	bl	52c8 <unicode_byte_type>
    b530:	b	b544 <big2_cdataSectionTok+0x250>
    b534:	ldrb	ip, [r7, #1]
    b538:	and	ip, ip, #255	; 0xff
    b53c:	add	r3, r4, ip
    b540:	ldrb	r0, [r3, #76]	; 0x4c
    b544:	cmp	r0, #11
    b548:	bcs	b628 <big2_cdataSectionTok+0x334>
    b54c:	add	pc, pc, r0, lsl #2
    b550:	nop	{0}
    b554:	b	b61c <big2_cdataSectionTok+0x328>
    b558:	b	b61c <big2_cdataSectionTok+0x328>
    b55c:	b	b628 <big2_cdataSectionTok+0x334>
    b560:	b	b628 <big2_cdataSectionTok+0x334>
    b564:	b	b61c <big2_cdataSectionTok+0x328>
    b568:	b	b580 <big2_cdataSectionTok+0x28c>
    b56c:	b	b5b4 <big2_cdataSectionTok+0x2c0>
    b570:	b	b5e8 <big2_cdataSectionTok+0x2f4>
    b574:	b	b61c <big2_cdataSectionTok+0x328>
    b578:	b	b61c <big2_cdataSectionTok+0x328>
    b57c:	b	b61c <big2_cdataSectionTok+0x328>
    b580:	mov	r3, #1
    b584:	mov	r2, #0
    b588:	sub	ip, r6, r7
    b58c:	cmp	ip, #2
    b590:	movlt	r2, r3
    b594:	movge	r2, r2
    b598:	cmp	r2, #0
    b59c:	beq	b5ac <big2_cdataSectionTok+0x2b8>
    b5a0:	str	r7, [r5]
    b5a4:	mov	r0, #6
    b5a8:	b	b638 <big2_cdataSectionTok+0x344>
    b5ac:	add	r7, r7, #2
    b5b0:	b	b50c <big2_cdataSectionTok+0x218>
    b5b4:	mov	r2, #1
    b5b8:	mov	r0, #0
    b5bc:	sub	r1, r6, r7
    b5c0:	cmp	r1, #3
    b5c4:	movlt	r2, r2
    b5c8:	movge	r2, r0
    b5cc:	cmp	r2, #0
    b5d0:	beq	b5e0 <big2_cdataSectionTok+0x2ec>
    b5d4:	str	r7, [r5]
    b5d8:	mov	r0, #6
    b5dc:	b	b638 <big2_cdataSectionTok+0x344>
    b5e0:	add	r7, r7, #3
    b5e4:	b	b50c <big2_cdataSectionTok+0x218>
    b5e8:	mov	r0, #1
    b5ec:	mov	r2, #0
    b5f0:	sub	r1, r6, r7
    b5f4:	cmp	r1, #4
    b5f8:	movlt	r0, r0
    b5fc:	movge	r0, r2
    b600:	cmp	r0, #0
    b604:	beq	b614 <big2_cdataSectionTok+0x320>
    b608:	str	r7, [r5]
    b60c:	mov	r0, #6
    b610:	b	b638 <big2_cdataSectionTok+0x344>
    b614:	add	r7, r7, #4
    b618:	b	b50c <big2_cdataSectionTok+0x218>
    b61c:	str	r7, [r5]
    b620:	mov	r0, #6
    b624:	b	b638 <big2_cdataSectionTok+0x344>
    b628:	add	r7, r7, #2
    b62c:	b	b50c <big2_cdataSectionTok+0x218>
    b630:	str	r7, [r5]
    b634:	mov	r0, #6
    b638:	ldr	r4, [sp, #8]
    b63c:	ldr	r5, [sp, #12]
    b640:	ldr	r6, [sp, #16]
    b644:	ldr	r7, [sp, #20]
    b648:	ldr	lr, [sp, #4]
    b64c:	add	sp, sp, #24
    b650:	bx	lr

0000b654 <big2_scanRef>:
    b654:	mov	ip, sp
    b658:	sub	sp, sp, #32
    b65c:	str	ip, [sp]
    b660:	str	lr, [sp, #4]
    b664:	str	r4, [sp, #8]
    b668:	str	r5, [sp, #12]
    b66c:	str	r6, [sp, #16]
    b670:	str	r7, [sp, #20]
    b674:	str	r8, [sp, #24]
    b678:	mov	r6, r3
    b67c:	mov	r4, r2
    b680:	mov	r8, r1
    b684:	mov	r5, r0
    b688:	cmp	r8, r4
    b68c:	bne	b698 <big2_scanRef+0x44>
    b690:	mvn	r0, #0
    b694:	b	bb44 <big2_scanRef+0x4f0>
    b698:	ldrb	r2, [r8]
    b69c:	cmp	r2, #0
    b6a0:	beq	b6b8 <big2_scanRef+0x64>
    b6a4:	and	r0, r2, #255	; 0xff
    b6a8:	ldrb	r3, [r8, #1]
    b6ac:	and	r1, r3, #255	; 0xff
    b6b0:	bl	52c8 <unicode_byte_type>
    b6b4:	b	b6c8 <big2_scanRef+0x74>
    b6b8:	ldrb	ip, [r8, #1]
    b6bc:	and	r0, ip, #255	; 0xff
    b6c0:	add	r0, r5, r0
    b6c4:	ldrb	r0, [r0, #76]	; 0x4c
    b6c8:	cmp	r0, #19
    b6cc:	bcs	b748 <big2_scanRef+0xf4>
    b6d0:	cmp	r0, #5
    b6d4:	beq	b728 <big2_scanRef+0xd4>
    b6d8:	cmp	r0, #6
    b6dc:	beq	b708 <big2_scanRef+0xb4>
    b6e0:	cmp	r0, #7
    b6e4:	bne	b9b0 <big2_scanRef+0x35c>
    b6e8:	sub	ip, r4, r8
    b6ec:	cmp	ip, #4
    b6f0:	bge	b6fc <big2_scanRef+0xa8>
    b6f4:	mvn	r0, #1
    b6f8:	b	bb44 <big2_scanRef+0x4f0>
    b6fc:	str	r8, [r6]
    b700:	mov	r0, #0
    b704:	b	bb44 <big2_scanRef+0x4f0>
    b708:	sub	r2, r4, r8
    b70c:	cmp	r2, #3
    b710:	bge	b71c <big2_scanRef+0xc8>
    b714:	mvn	r0, #1
    b718:	b	bb44 <big2_scanRef+0x4f0>
    b71c:	str	r8, [r6]
    b720:	mov	r0, #0
    b724:	b	bb44 <big2_scanRef+0x4f0>
    b728:	sub	r3, r4, r8
    b72c:	cmp	r3, #2
    b730:	bge	b73c <big2_scanRef+0xe8>
    b734:	mvn	r0, #1
    b738:	b	bb44 <big2_scanRef+0x4f0>
    b73c:	str	r8, [r6]
    b740:	mov	r0, #0
    b744:	b	bb44 <big2_scanRef+0x4f0>
    b748:	cmp	r0, #24
    b74c:	bcs	b954 <big2_scanRef+0x300>
    b750:	cmp	r0, #19
    b754:	beq	b764 <big2_scanRef+0x110>
    b758:	cmp	r0, #22
    b75c:	beq	b9bc <big2_scanRef+0x368>
    b760:	b	b9b0 <big2_scanRef+0x35c>
    b764:	add	r7, r8, #2
    b768:	cmp	r7, r4
    b76c:	beq	b930 <big2_scanRef+0x2dc>
    b770:	ldrb	r2, [r8, #2]
    b774:	cmp	r2, #0
    b778:	bne	b87c <big2_scanRef+0x228>
    b77c:	ldrb	r3, [r8, #3]
    b780:	cmp	r3, #120	; 0x78
    b784:	bne	b87c <big2_scanRef+0x228>
    b788:	add	r7, r8, #4
    b78c:	cmp	r7, r4
    b790:	beq	b858 <big2_scanRef+0x204>
    b794:	ldrb	r2, [r8, #4]
    b798:	cmp	r2, #0
    b79c:	beq	b7b4 <big2_scanRef+0x160>
    b7a0:	and	r0, r2, #255	; 0xff
    b7a4:	ldrb	r1, [r8, #5]
    b7a8:	and	r1, r1, #255	; 0xff
    b7ac:	bl	52c8 <unicode_byte_type>
    b7b0:	b	b7c4 <big2_scanRef+0x170>
    b7b4:	ldrb	r3, [r8, #5]
    b7b8:	and	ip, r3, #255	; 0xff
    b7bc:	add	ip, r5, ip
    b7c0:	ldrb	r0, [ip, #76]	; 0x4c
    b7c4:	cmp	r0, #24
    b7c8:	beq	b7e0 <big2_scanRef+0x18c>
    b7cc:	cmp	r0, #25
    b7d0:	beq	b7e0 <big2_scanRef+0x18c>
    b7d4:	str	r7, [r6]
    b7d8:	mov	r0, #0
    b7dc:	b	b85c <big2_scanRef+0x208>
    b7e0:	add	r7, r7, #2
    b7e4:	cmp	r7, r4
    b7e8:	beq	b858 <big2_scanRef+0x204>
    b7ec:	ldrb	r0, [r7]
    b7f0:	cmp	r0, #0
    b7f4:	beq	b80c <big2_scanRef+0x1b8>
    b7f8:	and	r0, r0, #255	; 0xff
    b7fc:	ldrb	ip, [r7, #1]
    b800:	and	r1, ip, #255	; 0xff
    b804:	bl	52c8 <unicode_byte_type>
    b808:	b	b81c <big2_scanRef+0x1c8>
    b80c:	ldrb	ip, [r7, #1]
    b810:	and	ip, ip, #255	; 0xff
    b814:	add	r1, r5, ip
    b818:	ldrb	r0, [r1, #76]	; 0x4c
    b81c:	cmp	r0, #18
    b820:	beq	b848 <big2_scanRef+0x1f4>
    b824:	cmp	r0, #24
    b828:	beq	b840 <big2_scanRef+0x1ec>
    b82c:	cmp	r0, #25
    b830:	beq	b840 <big2_scanRef+0x1ec>
    b834:	str	r7, [r6]
    b838:	mov	r0, #0
    b83c:	b	b85c <big2_scanRef+0x208>
    b840:	add	r7, r7, #2
    b844:	b	b7e4 <big2_scanRef+0x190>
    b848:	add	ip, r7, #2
    b84c:	str	ip, [r6]
    b850:	mov	r0, #10
    b854:	b	b85c <big2_scanRef+0x208>
    b858:	mvn	r0, #0
    b85c:	ldr	r4, [sp, #8]
    b860:	ldr	r5, [sp, #12]
    b864:	ldr	r6, [sp, #16]
    b868:	ldr	r7, [sp, #20]
    b86c:	ldr	r8, [sp, #24]
    b870:	ldr	lr, [sp, #4]
    b874:	add	sp, sp, #32
    b878:	bx	lr
    b87c:	ldrb	r0, [r7]
    b880:	cmp	r0, #0
    b884:	beq	b89c <big2_scanRef+0x248>
    b888:	and	r0, r0, #255	; 0xff
    b88c:	ldrb	r2, [r7, #1]
    b890:	and	r1, r2, #255	; 0xff
    b894:	bl	52c8 <unicode_byte_type>
    b898:	b	b8ac <big2_scanRef+0x258>
    b89c:	ldrb	r3, [r7, #1]
    b8a0:	and	r2, r3, #255	; 0xff
    b8a4:	add	ip, r5, r2
    b8a8:	ldrb	r0, [ip, #76]	; 0x4c
    b8ac:	cmp	r0, #25
    b8b0:	beq	b8c0 <big2_scanRef+0x26c>
    b8b4:	str	r7, [r6]
    b8b8:	mov	r0, #0
    b8bc:	b	b934 <big2_scanRef+0x2e0>
    b8c0:	add	r7, r7, #2
    b8c4:	cmp	r7, r4
    b8c8:	beq	b930 <big2_scanRef+0x2dc>
    b8cc:	ldrb	ip, [r7]
    b8d0:	cmp	ip, #0
    b8d4:	beq	b8ec <big2_scanRef+0x298>
    b8d8:	and	r0, ip, #255	; 0xff
    b8dc:	ldrb	r2, [r7, #1]
    b8e0:	and	r1, r2, #255	; 0xff
    b8e4:	bl	52c8 <unicode_byte_type>
    b8e8:	b	b8fc <big2_scanRef+0x2a8>
    b8ec:	ldrb	r0, [r7, #1]
    b8f0:	and	r2, r0, #255	; 0xff
    b8f4:	add	r0, r5, r2
    b8f8:	ldrb	r0, [r0, #76]	; 0x4c
    b8fc:	cmp	r0, #18
    b900:	beq	b920 <big2_scanRef+0x2cc>
    b904:	cmp	r0, #25
    b908:	beq	b918 <big2_scanRef+0x2c4>
    b90c:	str	r7, [r6]
    b910:	mov	r0, #0
    b914:	b	b934 <big2_scanRef+0x2e0>
    b918:	add	r7, r7, #2
    b91c:	b	b8c4 <big2_scanRef+0x270>
    b920:	add	r3, r7, #2
    b924:	str	r3, [r6]
    b928:	mov	r0, #10
    b92c:	b	b934 <big2_scanRef+0x2e0>
    b930:	mvn	r0, #0
    b934:	ldr	r4, [sp, #8]
    b938:	ldr	r5, [sp, #12]
    b93c:	ldr	r6, [sp, #16]
    b940:	ldr	r7, [sp, #20]
    b944:	ldr	r8, [sp, #24]
    b948:	ldr	lr, [sp, #4]
    b94c:	add	sp, sp, #32
    b950:	bx	lr
    b954:	cmp	r0, #24
    b958:	beq	b9bc <big2_scanRef+0x368>
    b95c:	cmp	r0, #29
    b960:	bne	b9b0 <big2_scanRef+0x35c>
    b964:	ldr	r0, [pc, #504]	; bb64 <big2_scanRef+0x510>
    b968:	ldrb	r1, [r8, #1]
    b96c:	and	r2, r1, #255	; 0xff
    b970:	asr	r2, r2, #5
    b974:	ldr	r3, [pc, #492]	; bb68 <big2_scanRef+0x514>
    b978:	ldrb	ip, [r8]
    b97c:	and	ip, ip, #255	; 0xff
    b980:	ldrb	r3, [r3, ip]
    b984:	add	r2, r2, r3, lsl #3
    b988:	ldr	r0, [r0, r2, lsl #2]
    b98c:	mov	r2, #1
    b990:	and	r1, r1, #31
    b994:	lsl	ip, r2, r1
    b998:	and	r1, r0, ip
    b99c:	cmp	r1, #0
    b9a0:	bne	b9bc <big2_scanRef+0x368>
    b9a4:	str	r8, [r6]
    b9a8:	mov	r0, #0
    b9ac:	b	bb44 <big2_scanRef+0x4f0>
    b9b0:	str	r8, [r6]
    b9b4:	mov	r0, #0
    b9b8:	b	bb44 <big2_scanRef+0x4f0>
    b9bc:	add	r7, r8, #2
    b9c0:	cmp	r7, r4
    b9c4:	beq	bb40 <big2_scanRef+0x4ec>
    b9c8:	ldrb	r1, [r7]
    b9cc:	cmp	r1, #0
    b9d0:	beq	b9e8 <big2_scanRef+0x394>
    b9d4:	and	r0, r1, #255	; 0xff
    b9d8:	ldrb	r1, [r7, #1]
    b9dc:	and	r1, r1, #255	; 0xff
    b9e0:	bl	52c8 <unicode_byte_type>
    b9e4:	b	b9f8 <big2_scanRef+0x3a4>
    b9e8:	ldrb	r1, [r7, #1]
    b9ec:	and	r2, r1, #255	; 0xff
    b9f0:	add	r0, r5, r2
    b9f4:	ldrb	r0, [r0, #76]	; 0x4c
    b9f8:	sub	r0, r0, #5
    b9fc:	cmp	r0, #25
    ba00:	bcs	bb34 <big2_scanRef+0x4e0>
    ba04:	add	pc, pc, r0, lsl #2
    ba08:	nop	{0}
    ba0c:	b	bac4 <big2_scanRef+0x470>
    ba10:	b	bae4 <big2_scanRef+0x490>
    ba14:	b	bb04 <big2_scanRef+0x4b0>
    ba18:	b	bb34 <big2_scanRef+0x4e0>
    ba1c:	b	bb34 <big2_scanRef+0x4e0>
    ba20:	b	bb34 <big2_scanRef+0x4e0>
    ba24:	b	bb34 <big2_scanRef+0x4e0>
    ba28:	b	bb34 <big2_scanRef+0x4e0>
    ba2c:	b	bb34 <big2_scanRef+0x4e0>
    ba30:	b	bb34 <big2_scanRef+0x4e0>
    ba34:	b	bb34 <big2_scanRef+0x4e0>
    ba38:	b	bb34 <big2_scanRef+0x4e0>
    ba3c:	b	bb34 <big2_scanRef+0x4e0>
    ba40:	b	bb24 <big2_scanRef+0x4d0>
    ba44:	b	bb34 <big2_scanRef+0x4e0>
    ba48:	b	bb34 <big2_scanRef+0x4e0>
    ba4c:	b	bb34 <big2_scanRef+0x4e0>
    ba50:	b	babc <big2_scanRef+0x468>
    ba54:	b	bb34 <big2_scanRef+0x4e0>
    ba58:	b	babc <big2_scanRef+0x468>
    ba5c:	b	babc <big2_scanRef+0x468>
    ba60:	b	babc <big2_scanRef+0x468>
    ba64:	b	babc <big2_scanRef+0x468>
    ba68:	b	bb34 <big2_scanRef+0x4e0>
    ba6c:	b	ba70 <big2_scanRef+0x41c>
    ba70:	ldr	ip, [pc, #236]	; bb64 <big2_scanRef+0x510>
    ba74:	ldrb	r3, [r7, #1]
    ba78:	and	r1, r3, #255	; 0xff
    ba7c:	asr	r8, r1, #5
    ba80:	ldr	r1, [pc, #228]	; bb6c <big2_scanRef+0x518>
    ba84:	ldrb	r0, [r7]
    ba88:	and	r0, r0, #255	; 0xff
    ba8c:	ldrb	r2, [r1, r0]
    ba90:	add	r1, r8, r2, lsl #3
    ba94:	ldr	r2, [ip, r1, lsl #2]
    ba98:	mov	r0, #1
    ba9c:	and	r1, r3, #31
    baa0:	lsl	r3, r0, r1
    baa4:	and	r3, r2, r3
    baa8:	cmp	r3, #0
    baac:	bne	babc <big2_scanRef+0x468>
    bab0:	str	r7, [r6]
    bab4:	mov	r0, #0
    bab8:	b	bb44 <big2_scanRef+0x4f0>
    babc:	add	r7, r7, #2
    bac0:	b	b9c0 <big2_scanRef+0x36c>
    bac4:	sub	r3, r4, r7
    bac8:	cmp	r3, #2
    bacc:	bge	bad8 <big2_scanRef+0x484>
    bad0:	mvn	r0, #1
    bad4:	b	bb44 <big2_scanRef+0x4f0>
    bad8:	str	r7, [r6]
    badc:	mov	r0, #0
    bae0:	b	bb44 <big2_scanRef+0x4f0>
    bae4:	sub	r3, r4, r7
    bae8:	cmp	r3, #3
    baec:	bge	baf8 <big2_scanRef+0x4a4>
    baf0:	mvn	r0, #1
    baf4:	b	bb44 <big2_scanRef+0x4f0>
    baf8:	str	r7, [r6]
    bafc:	mov	r0, #0
    bb00:	b	bb44 <big2_scanRef+0x4f0>
    bb04:	sub	r0, r4, r7
    bb08:	cmp	r0, #4
    bb0c:	bge	bb18 <big2_scanRef+0x4c4>
    bb10:	mvn	r0, #1
    bb14:	b	bb44 <big2_scanRef+0x4f0>
    bb18:	str	r7, [r6]
    bb1c:	mov	r0, #0
    bb20:	b	bb44 <big2_scanRef+0x4f0>
    bb24:	add	r3, r7, #2
    bb28:	str	r3, [r6]
    bb2c:	mov	r0, #9
    bb30:	b	bb44 <big2_scanRef+0x4f0>
    bb34:	str	r7, [r6]
    bb38:	mov	r0, #0
    bb3c:	b	bb44 <big2_scanRef+0x4f0>
    bb40:	mvn	r0, #0
    bb44:	ldr	r4, [sp, #8]
    bb48:	ldr	r5, [sp, #12]
    bb4c:	ldr	r6, [sp, #16]
    bb50:	ldr	r7, [sp, #20]
    bb54:	ldr	r8, [sp, #24]
    bb58:	ldr	lr, [sp, #4]
    bb5c:	add	sp, sp, #32
    bb60:	bx	lr
    bb64:	.word	0x00000000
    bb68:	.word	0x00000500
    bb6c:	.word	0x00000600

0000bb70 <big2_contentTok>:
    bb70:	mov	ip, sp
    bb74:	sub	sp, sp, #40	; 0x28
    bb78:	str	ip, [sp]
    bb7c:	str	lr, [sp, #4]
    bb80:	str	r4, [sp, #8]
    bb84:	str	r5, [sp, #12]
    bb88:	str	r6, [sp, #16]
    bb8c:	str	r7, [sp, #20]
    bb90:	str	r8, [sp, #24]
    bb94:	str	r9, [sp, #28]
    bb98:	mov	r6, r3
    bb9c:	mov	r5, r2
    bba0:	mov	r8, r1
    bba4:	mov	r7, r0
    bba8:	cmp	r8, r5
    bbac:	bne	bbb8 <big2_contentTok+0x48>
    bbb0:	mvn	r0, #3
    bbb4:	b	d2b4 <big2_contentTok+0x1744>
    bbb8:	sub	r1, r5, r8
    bbbc:	and	r2, r1, #1
    bbc0:	cmp	r2, #0
    bbc4:	beq	bbe0 <big2_contentTok+0x70>
    bbc8:	bic	r1, r1, #1
    bbcc:	cmp	r1, #0
    bbd0:	bne	bbdc <big2_contentTok+0x6c>
    bbd4:	mvn	r0, #0
    bbd8:	b	d2b4 <big2_contentTok+0x1744>
    bbdc:	add	r5, r8, r1
    bbe0:	ldrb	r1, [r8]
    bbe4:	cmp	r1, #0
    bbe8:	beq	bc00 <big2_contentTok+0x90>
    bbec:	and	r0, r1, #255	; 0xff
    bbf0:	ldrb	r1, [r8, #1]
    bbf4:	and	r1, r1, #255	; 0xff
    bbf8:	bl	52c8 <unicode_byte_type>
    bbfc:	b	bc10 <big2_contentTok+0xa0>
    bc00:	ldrb	r1, [r8, #1]
    bc04:	and	r3, r1, #255	; 0xff
    bc08:	add	r3, r7, r3
    bc0c:	ldrb	r0, [r3, #76]	; 0x4c
    bc10:	cmp	r0, #11
    bc14:	bcs	d120 <big2_contentTok+0x15b0>
    bc18:	add	pc, pc, r0, lsl #2
    bc1c:	nop	{0}
    bc20:	b	d114 <big2_contentTok+0x15a4>
    bc24:	b	d114 <big2_contentTok+0x15a4>
    bc28:	b	bc4c <big2_contentTok+0xdc>
    bc2c:	b	cfb0 <big2_contentTok+0x1440>
    bc30:	b	d054 <big2_contentTok+0x14e4>
    bc34:	b	d0c0 <big2_contentTok+0x1550>
    bc38:	b	d0dc <big2_contentTok+0x156c>
    bc3c:	b	d0f8 <big2_contentTok+0x1588>
    bc40:	b	d114 <big2_contentTok+0x15a4>
    bc44:	b	cfe4 <big2_contentTok+0x1474>
    bc48:	b	d044 <big2_contentTok+0x14d4>
    bc4c:	add	r4, r8, #2
    bc50:	cmp	r4, r5
    bc54:	bne	bc60 <big2_contentTok+0xf0>
    bc58:	mvn	r0, #0
    bc5c:	b	cf8c <big2_contentTok+0x141c>
    bc60:	ldrb	r3, [r8, #2]
    bc64:	cmp	r3, #0
    bc68:	beq	bc80 <big2_contentTok+0x110>
    bc6c:	and	r0, r3, #255	; 0xff
    bc70:	ldrb	r2, [r8, #3]
    bc74:	and	r1, r2, #255	; 0xff
    bc78:	bl	52c8 <unicode_byte_type>
    bc7c:	b	bc90 <big2_contentTok+0x120>
    bc80:	ldrb	r0, [r8, #3]
    bc84:	and	r2, r0, #255	; 0xff
    bc88:	add	r0, r7, r2
    bc8c:	ldrb	r0, [r0, #76]	; 0x4c
    bc90:	sub	r1, r0, #5
    bc94:	cmp	r1, #25
    bc98:	bcs	cf84 <big2_contentTok+0x1414>
    bc9c:	add	pc, pc, r1, lsl #2
    bca0:	nop	{0}
    bca4:	b	ca4c <big2_contentTok+0xedc>
    bca8:	b	ca6c <big2_contentTok+0xefc>
    bcac:	b	ca8c <big2_contentTok+0xf1c>
    bcb0:	b	cf84 <big2_contentTok+0x1414>
    bcb4:	b	cf84 <big2_contentTok+0x1414>
    bcb8:	b	cf84 <big2_contentTok+0x1414>
    bcbc:	b	cf84 <big2_contentTok+0x1414>
    bcc0:	b	cf84 <big2_contentTok+0x1414>
    bcc4:	b	cf84 <big2_contentTok+0x1414>
    bcc8:	b	cf84 <big2_contentTok+0x1414>
    bccc:	b	cbc4 <big2_contentTok+0x1054>
    bcd0:	b	caac <big2_contentTok+0xf3c>
    bcd4:	b	cbf8 <big2_contentTok+0x1088>
    bcd8:	b	cf84 <big2_contentTok+0x1414>
    bcdc:	b	cf84 <big2_contentTok+0x1414>
    bce0:	b	cf84 <big2_contentTok+0x1414>
    bce4:	b	cf84 <big2_contentTok+0x1414>
    bce8:	b	bd54 <big2_contentTok+0x1e4>
    bcec:	b	cf84 <big2_contentTok+0x1414>
    bcf0:	b	bd54 <big2_contentTok+0x1e4>
    bcf4:	b	cf84 <big2_contentTok+0x1414>
    bcf8:	b	cf84 <big2_contentTok+0x1414>
    bcfc:	b	cf84 <big2_contentTok+0x1414>
    bd00:	b	cf84 <big2_contentTok+0x1414>
    bd04:	b	bd08 <big2_contentTok+0x198>
    bd08:	ldr	r8, [pc, #3836]	; cc0c <big2_contentTok+0x109c>
    bd0c:	ldrb	r0, [r4, #1]
    bd10:	and	ip, r0, #255	; 0xff
    bd14:	asr	r1, ip, #5
    bd18:	ldr	r3, [pc, #3824]	; cc10 <big2_contentTok+0x10a0>
    bd1c:	ldrb	ip, [r4]
    bd20:	and	r2, ip, #255	; 0xff
    bd24:	ldrb	r2, [r3, r2]
    bd28:	add	r1, r1, r2, lsl #3
    bd2c:	ldr	r2, [r8, r1, lsl #2]
    bd30:	mov	ip, #1
    bd34:	and	r0, r0, #31
    bd38:	lsl	r3, ip, r0
    bd3c:	and	r3, r2, r3
    bd40:	cmp	r3, #0
    bd44:	bne	bd54 <big2_contentTok+0x1e4>
    bd48:	str	r4, [r6]
    bd4c:	mov	r0, #0
    bd50:	b	cf8c <big2_contentTok+0x141c>
    bd54:	add	r4, r4, #2
    bd58:	mov	r8, #0
    bd5c:	cmp	r4, r5
    bd60:	beq	ca44 <big2_contentTok+0xed4>
    bd64:	ldrb	r1, [r4]
    bd68:	cmp	r1, #0
    bd6c:	beq	bd84 <big2_contentTok+0x214>
    bd70:	and	r0, r1, #255	; 0xff
    bd74:	ldrb	r3, [r4, #1]
    bd78:	and	r1, r3, #255	; 0xff
    bd7c:	bl	52c8 <unicode_byte_type>
    bd80:	b	bd94 <big2_contentTok+0x224>
    bd84:	ldrb	r1, [r4, #1]
    bd88:	and	r2, r1, #255	; 0xff
    bd8c:	add	r0, r7, r2
    bd90:	ldrb	r0, [r0, #76]	; 0x4c
    bd94:	sub	ip, r0, #5
    bd98:	cmp	ip, #25
    bd9c:	bcs	ca38 <big2_contentTok+0xec8>
    bda0:	add	pc, pc, ip, lsl #2
    bda4:	nop	{0}
    bda8:	b	be60 <big2_contentTok+0x2f0>
    bdac:	b	be80 <big2_contentTok+0x310>
    bdb0:	b	bea0 <big2_contentTok+0x330>
    bdb4:	b	ca38 <big2_contentTok+0xec8>
    bdb8:	b	c014 <big2_contentTok+0x4a4>
    bdbc:	b	c014 <big2_contentTok+0x4a4>
    bdc0:	b	c9e0 <big2_contentTok+0xe70>
    bdc4:	b	ca38 <big2_contentTok+0xec8>
    bdc8:	b	ca38 <big2_contentTok+0xec8>
    bdcc:	b	ca38 <big2_contentTok+0xec8>
    bdd0:	b	ca38 <big2_contentTok+0xec8>
    bdd4:	b	ca38 <big2_contentTok+0xec8>
    bdd8:	b	c9f0 <big2_contentTok+0xe80>
    bddc:	b	ca38 <big2_contentTok+0xec8>
    bde0:	b	ca38 <big2_contentTok+0xec8>
    bde4:	b	ca38 <big2_contentTok+0xec8>
    bde8:	b	c014 <big2_contentTok+0x4a4>
    bdec:	b	be58 <big2_contentTok+0x2e8>
    bdf0:	b	bec0 <big2_contentTok+0x350>
    bdf4:	b	be58 <big2_contentTok+0x2e8>
    bdf8:	b	be58 <big2_contentTok+0x2e8>
    bdfc:	b	be58 <big2_contentTok+0x2e8>
    be00:	b	be58 <big2_contentTok+0x2e8>
    be04:	b	ca38 <big2_contentTok+0xec8>
    be08:	b	be0c <big2_contentTok+0x29c>
    be0c:	ldr	r9, [pc, #3576]	; cc0c <big2_contentTok+0x109c>
    be10:	ldrb	r3, [r4, #1]
    be14:	and	ip, r3, #255	; 0xff
    be18:	asr	ip, ip, #5
    be1c:	ldr	r0, [pc, #3568]	; cc14 <big2_contentTok+0x10a4>
    be20:	ldrb	r1, [r4]
    be24:	and	r2, r1, #255	; 0xff
    be28:	ldrb	r1, [r0, r2]
    be2c:	add	ip, ip, r1, lsl #3
    be30:	ldr	r2, [r9, ip, lsl #2]
    be34:	mov	r1, #1
    be38:	and	r3, r3, #31
    be3c:	lsl	r1, r1, r3
    be40:	and	r1, r2, r1
    be44:	cmp	r1, #0
    be48:	bne	be58 <big2_contentTok+0x2e8>
    be4c:	str	r4, [r6]
    be50:	mov	r0, #0
    be54:	b	cf8c <big2_contentTok+0x141c>
    be58:	add	r4, r4, #2
    be5c:	b	bd5c <big2_contentTok+0x1ec>
    be60:	sub	r0, r5, r4
    be64:	cmp	r0, #2
    be68:	bge	be74 <big2_contentTok+0x304>
    be6c:	mvn	r0, #1
    be70:	b	cf8c <big2_contentTok+0x141c>
    be74:	str	r4, [r6]
    be78:	mov	r0, #0
    be7c:	b	cf8c <big2_contentTok+0x141c>
    be80:	sub	r0, r5, r4
    be84:	cmp	r0, #3
    be88:	bge	be94 <big2_contentTok+0x324>
    be8c:	mvn	r0, #1
    be90:	b	cf8c <big2_contentTok+0x141c>
    be94:	str	r4, [r6]
    be98:	mov	r0, #0
    be9c:	b	cf8c <big2_contentTok+0x141c>
    bea0:	sub	r2, r5, r4
    bea4:	cmp	r2, #4
    bea8:	bge	beb4 <big2_contentTok+0x344>
    beac:	mvn	r0, #1
    beb0:	b	cf8c <big2_contentTok+0x141c>
    beb4:	str	r4, [r6]
    beb8:	mov	r0, #0
    bebc:	b	cf8c <big2_contentTok+0x141c>
    bec0:	cmp	r8, #0
    bec4:	beq	bed4 <big2_contentTok+0x364>
    bec8:	str	r4, [r6]
    becc:	mov	r0, #0
    bed0:	b	cf8c <big2_contentTok+0x141c>
    bed4:	mov	r8, #1
    bed8:	add	r4, r4, #2
    bedc:	cmp	r4, r5
    bee0:	bne	beec <big2_contentTok+0x37c>
    bee4:	mvn	r0, #0
    bee8:	b	cf8c <big2_contentTok+0x141c>
    beec:	ldrb	ip, [r4]
    bef0:	cmp	ip, #0
    bef4:	beq	bf0c <big2_contentTok+0x39c>
    bef8:	and	r0, ip, #255	; 0xff
    befc:	ldrb	r1, [r4, #1]
    bf00:	and	r1, r1, #255	; 0xff
    bf04:	bl	52c8 <unicode_byte_type>
    bf08:	b	bf1c <big2_contentTok+0x3ac>
    bf0c:	ldrb	r2, [r4, #1]
    bf10:	and	r1, r2, #255	; 0xff
    bf14:	add	r2, r7, r1
    bf18:	ldrb	r0, [r2, #76]	; 0x4c
    bf1c:	cmp	r0, #22
    bf20:	bcs	bf9c <big2_contentTok+0x42c>
    bf24:	cmp	r0, #5
    bf28:	beq	bf7c <big2_contentTok+0x40c>
    bf2c:	cmp	r0, #6
    bf30:	beq	bf5c <big2_contentTok+0x3ec>
    bf34:	cmp	r0, #7
    bf38:	bne	c000 <big2_contentTok+0x490>
    bf3c:	sub	r0, r5, r4
    bf40:	cmp	r0, #4
    bf44:	bge	bf50 <big2_contentTok+0x3e0>
    bf48:	mvn	r0, #1
    bf4c:	b	cf8c <big2_contentTok+0x141c>
    bf50:	str	r4, [r6]
    bf54:	mov	r0, #0
    bf58:	b	cf8c <big2_contentTok+0x141c>
    bf5c:	sub	r2, r5, r4
    bf60:	cmp	r2, #3
    bf64:	bge	bf70 <big2_contentTok+0x400>
    bf68:	mvn	r0, #1
    bf6c:	b	cf8c <big2_contentTok+0x141c>
    bf70:	str	r4, [r6]
    bf74:	mov	r0, #0
    bf78:	b	cf8c <big2_contentTok+0x141c>
    bf7c:	sub	r2, r5, r4
    bf80:	cmp	r2, #2
    bf84:	bge	bf90 <big2_contentTok+0x420>
    bf88:	mvn	r0, #1
    bf8c:	b	cf8c <big2_contentTok+0x141c>
    bf90:	str	r4, [r6]
    bf94:	mov	r0, #0
    bf98:	b	cf8c <big2_contentTok+0x141c>
    bf9c:	cmp	r0, #22
    bfa0:	beq	c00c <big2_contentTok+0x49c>
    bfa4:	cmp	r0, #24
    bfa8:	beq	c00c <big2_contentTok+0x49c>
    bfac:	cmp	r0, #29
    bfb0:	bne	c000 <big2_contentTok+0x490>
    bfb4:	ldr	r3, [pc, #3152]	; cc0c <big2_contentTok+0x109c>
    bfb8:	ldrb	r0, [r4, #1]
    bfbc:	and	r1, r0, #255	; 0xff
    bfc0:	asr	r2, r1, #5
    bfc4:	ldr	ip, [pc, #3140]	; cc10 <big2_contentTok+0x10a0>
    bfc8:	ldrb	r1, [r4]
    bfcc:	and	r1, r1, #255	; 0xff
    bfd0:	ldrb	r1, [ip, r1]
    bfd4:	add	r1, r2, r1, lsl #3
    bfd8:	ldr	r1, [r3, r1, lsl #2]
    bfdc:	mov	ip, #1
    bfe0:	and	r0, r0, #31
    bfe4:	lsl	r3, ip, r0
    bfe8:	and	ip, r1, r3
    bfec:	cmp	ip, #0
    bff0:	bne	c00c <big2_contentTok+0x49c>
    bff4:	str	r4, [r6]
    bff8:	mov	r0, #0
    bffc:	b	cf8c <big2_contentTok+0x141c>
    c000:	str	r4, [r6]
    c004:	mov	r0, #0
    c008:	b	cf8c <big2_contentTok+0x141c>
    c00c:	add	r4, r4, #2
    c010:	b	bd5c <big2_contentTok+0x1ec>
    c014:	add	r4, r4, #2
    c018:	cmp	r4, r5
    c01c:	beq	c9d8 <big2_contentTok+0xe68>
    c020:	ldrb	ip, [r4]
    c024:	cmp	ip, #0
    c028:	beq	c040 <big2_contentTok+0x4d0>
    c02c:	and	r0, ip, #255	; 0xff
    c030:	ldrb	ip, [r4, #1]
    c034:	and	r1, ip, #255	; 0xff
    c038:	bl	52c8 <unicode_byte_type>
    c03c:	b	c050 <big2_contentTok+0x4e0>
    c040:	ldrb	r3, [r4, #1]
    c044:	and	r1, r3, #255	; 0xff
    c048:	add	r0, r7, r1
    c04c:	ldrb	r0, [r0, #76]	; 0x4c
    c050:	sub	r1, r0, #5
    c054:	cmp	r1, #25
    c058:	bcs	c9cc <big2_contentTok+0xe5c>
    c05c:	add	pc, pc, r1, lsl #2
    c060:	nop	{0}
    c064:	b	c964 <big2_contentTok+0xdf4>
    c068:	b	c984 <big2_contentTok+0xe14>
    c06c:	b	c9a4 <big2_contentTok+0xe34>
    c070:	b	c9cc <big2_contentTok+0xe5c>
    c074:	b	c9c4 <big2_contentTok+0xe54>
    c078:	b	c9c4 <big2_contentTok+0xe54>
    c07c:	b	c9e0 <big2_contentTok+0xe70>
    c080:	b	c9cc <big2_contentTok+0xe5c>
    c084:	b	c9cc <big2_contentTok+0xe5c>
    c088:	b	c9cc <big2_contentTok+0xe5c>
    c08c:	b	c9cc <big2_contentTok+0xe5c>
    c090:	b	c9cc <big2_contentTok+0xe5c>
    c094:	b	c9f0 <big2_contentTok+0xe80>
    c098:	b	c9cc <big2_contentTok+0xe5c>
    c09c:	b	c9cc <big2_contentTok+0xe5c>
    c0a0:	b	c9cc <big2_contentTok+0xe5c>
    c0a4:	b	c9c4 <big2_contentTok+0xe54>
    c0a8:	b	c114 <big2_contentTok+0x5a4>
    c0ac:	b	c9cc <big2_contentTok+0xe5c>
    c0b0:	b	c114 <big2_contentTok+0x5a4>
    c0b4:	b	c9cc <big2_contentTok+0xe5c>
    c0b8:	b	c9cc <big2_contentTok+0xe5c>
    c0bc:	b	c9cc <big2_contentTok+0xe5c>
    c0c0:	b	c9cc <big2_contentTok+0xe5c>
    c0c4:	b	c0c8 <big2_contentTok+0x558>
    c0c8:	ldr	ip, [pc, #2876]	; cc0c <big2_contentTok+0x109c>
    c0cc:	ldrb	r2, [r4, #1]
    c0d0:	and	r3, r2, #255	; 0xff
    c0d4:	asr	r1, r3, #5
    c0d8:	ldr	r3, [pc, #2864]	; cc10 <big2_contentTok+0x10a0>
    c0dc:	ldrb	r0, [r4]
    c0e0:	and	r0, r0, #255	; 0xff
    c0e4:	ldrb	r3, [r3, r0]
    c0e8:	add	r0, r1, r3, lsl #3
    c0ec:	ldr	ip, [ip, r0, lsl #2]
    c0f0:	mov	r3, #1
    c0f4:	and	r0, r2, #31
    c0f8:	lsl	r0, r3, r0
    c0fc:	and	r0, ip, r0
    c100:	cmp	r0, #0
    c104:	bne	c114 <big2_contentTok+0x5a4>
    c108:	str	r4, [r6]
    c10c:	mov	r0, #0
    c110:	b	cf8c <big2_contentTok+0x141c>
    c114:	add	r2, r4, #2
    c118:	str	r2, [sp, #32]
    c11c:	mov	r8, #0
    c120:	ldr	r3, [sp, #32]
    c124:	cmp	r3, r5
    c128:	beq	c93c <big2_contentTok+0xdcc>
    c12c:	ldrb	ip, [r3]
    c130:	cmp	ip, #0
    c134:	beq	c14c <big2_contentTok+0x5dc>
    c138:	and	r0, ip, #255	; 0xff
    c13c:	ldrb	ip, [r3, #1]
    c140:	and	r1, ip, #255	; 0xff
    c144:	bl	52c8 <unicode_byte_type>
    c148:	b	c15c <big2_contentTok+0x5ec>
    c14c:	ldrb	r3, [r3, #1]
    c150:	and	ip, r3, #255	; 0xff
    c154:	add	r1, r7, ip
    c158:	ldrb	r0, [r1, #76]	; 0x4c
    c15c:	sub	r3, r0, #5
    c160:	cmp	r3, #25
    c164:	bcs	c92c <big2_contentTok+0xdbc>
    c168:	add	pc, pc, r3, lsl #2
    c16c:	nop	{0}
    c170:	b	c234 <big2_contentTok+0x6c4>
    c174:	b	c258 <big2_contentTok+0x6e8>
    c178:	b	c27c <big2_contentTok+0x70c>
    c17c:	b	c92c <big2_contentTok+0xdbc>
    c180:	b	c41c <big2_contentTok+0x8ac>
    c184:	b	c41c <big2_contentTok+0x8ac>
    c188:	b	c92c <big2_contentTok+0xdbc>
    c18c:	b	c92c <big2_contentTok+0xdbc>
    c190:	b	c92c <big2_contentTok+0xdbc>
    c194:	b	c498 <big2_contentTok+0x928>
    c198:	b	c92c <big2_contentTok+0xdbc>
    c19c:	b	c92c <big2_contentTok+0xdbc>
    c1a0:	b	c92c <big2_contentTok+0xdbc>
    c1a4:	b	c92c <big2_contentTok+0xdbc>
    c1a8:	b	c92c <big2_contentTok+0xdbc>
    c1ac:	b	c92c <big2_contentTok+0xdbc>
    c1b0:	b	c41c <big2_contentTok+0x8ac>
    c1b4:	b	c224 <big2_contentTok+0x6b4>
    c1b8:	b	c2a0 <big2_contentTok+0x730>
    c1bc:	b	c224 <big2_contentTok+0x6b4>
    c1c0:	b	c224 <big2_contentTok+0x6b4>
    c1c4:	b	c224 <big2_contentTok+0x6b4>
    c1c8:	b	c224 <big2_contentTok+0x6b4>
    c1cc:	b	c92c <big2_contentTok+0xdbc>
    c1d0:	b	c1d4 <big2_contentTok+0x664>
    c1d4:	ldr	r4, [pc, #2608]	; cc0c <big2_contentTok+0x109c>
    c1d8:	ldr	r0, [sp, #32]
    c1dc:	ldrb	r2, [r0, #1]
    c1e0:	and	ip, r2, #255	; 0xff
    c1e4:	asr	r9, ip, #5
    c1e8:	ldr	ip, [pc, #2596]	; cc14 <big2_contentTok+0x10a4>
    c1ec:	ldrb	r3, [r0]
    c1f0:	and	r1, r3, #255	; 0xff
    c1f4:	ldrb	r3, [ip, r1]
    c1f8:	add	r1, r9, r3, lsl #3
    c1fc:	ldr	ip, [r4, r1, lsl #2]
    c200:	mov	r3, #1
    c204:	and	r1, r2, #31
    c208:	lsl	r3, r3, r1
    c20c:	and	r1, ip, r3
    c210:	cmp	r1, #0
    c214:	bne	c224 <big2_contentTok+0x6b4>
    c218:	str	r0, [r6]
    c21c:	mov	r0, #0
    c220:	b	c940 <big2_contentTok+0xdd0>
    c224:	ldr	r0, [sp, #32]
    c228:	add	r2, r0, #2
    c22c:	str	r2, [sp, #32]
    c230:	b	c120 <big2_contentTok+0x5b0>
    c234:	ldr	r3, [sp, #32]
    c238:	sub	r2, r5, r3
    c23c:	cmp	r2, #2
    c240:	bge	c24c <big2_contentTok+0x6dc>
    c244:	mvn	r0, #1
    c248:	b	c940 <big2_contentTok+0xdd0>
    c24c:	str	r3, [r6]
    c250:	mov	r0, #0
    c254:	b	c940 <big2_contentTok+0xdd0>
    c258:	ldr	r1, [sp, #32]
    c25c:	sub	r0, r5, r1
    c260:	cmp	r0, #3
    c264:	bge	c270 <big2_contentTok+0x700>
    c268:	mvn	r0, #1
    c26c:	b	c940 <big2_contentTok+0xdd0>
    c270:	str	r1, [r6]
    c274:	mov	r0, #0
    c278:	b	c940 <big2_contentTok+0xdd0>
    c27c:	ldr	r0, [sp, #32]
    c280:	sub	r2, r5, r0
    c284:	cmp	r2, #4
    c288:	bge	c294 <big2_contentTok+0x724>
    c28c:	mvn	r0, #1
    c290:	b	c940 <big2_contentTok+0xdd0>
    c294:	str	r0, [r6]
    c298:	mov	r0, #0
    c29c:	b	c940 <big2_contentTok+0xdd0>
    c2a0:	cmp	r8, #0
    c2a4:	beq	c2b8 <big2_contentTok+0x748>
    c2a8:	ldr	r3, [sp, #32]
    c2ac:	str	r3, [r6]
    c2b0:	mov	r0, #0
    c2b4:	b	c940 <big2_contentTok+0xdd0>
    c2b8:	mov	r8, #1
    c2bc:	ldr	r1, [sp, #32]
    c2c0:	add	r1, r1, #2
    c2c4:	str	r1, [sp, #32]
    c2c8:	cmp	r1, r5
    c2cc:	bne	c2d8 <big2_contentTok+0x768>
    c2d0:	mvn	r0, #0
    c2d4:	b	c940 <big2_contentTok+0xdd0>
    c2d8:	ldrb	ip, [r1]
    c2dc:	cmp	ip, #0
    c2e0:	beq	c2f8 <big2_contentTok+0x788>
    c2e4:	and	r0, ip, #255	; 0xff
    c2e8:	ldrb	ip, [r1, #1]
    c2ec:	and	r1, ip, #255	; 0xff
    c2f0:	bl	52c8 <unicode_byte_type>
    c2f4:	b	c308 <big2_contentTok+0x798>
    c2f8:	ldrb	r3, [r1, #1]
    c2fc:	and	r1, r3, #255	; 0xff
    c300:	add	r1, r7, r1
    c304:	ldrb	r0, [r1, #76]	; 0x4c
    c308:	cmp	r0, #22
    c30c:	bcs	c394 <big2_contentTok+0x824>
    c310:	cmp	r0, #5
    c314:	beq	c370 <big2_contentTok+0x800>
    c318:	cmp	r0, #6
    c31c:	beq	c34c <big2_contentTok+0x7dc>
    c320:	cmp	r0, #7
    c324:	bne	c3fc <big2_contentTok+0x88c>
    c328:	ldr	r0, [sp, #32]
    c32c:	sub	r1, r5, r0
    c330:	cmp	r1, #4
    c334:	bge	c340 <big2_contentTok+0x7d0>
    c338:	mvn	r0, #1
    c33c:	b	c940 <big2_contentTok+0xdd0>
    c340:	str	r0, [r6]
    c344:	mov	r0, #0
    c348:	b	c940 <big2_contentTok+0xdd0>
    c34c:	ldr	ip, [sp, #32]
    c350:	sub	r0, r5, ip
    c354:	cmp	r0, #3
    c358:	bge	c364 <big2_contentTok+0x7f4>
    c35c:	mvn	r0, #1
    c360:	b	c940 <big2_contentTok+0xdd0>
    c364:	str	ip, [r6]
    c368:	mov	r0, #0
    c36c:	b	c940 <big2_contentTok+0xdd0>
    c370:	ldr	r3, [sp, #32]
    c374:	sub	ip, r5, r3
    c378:	cmp	ip, #2
    c37c:	bge	c388 <big2_contentTok+0x818>
    c380:	mvn	r0, #1
    c384:	b	c940 <big2_contentTok+0xdd0>
    c388:	str	r3, [r6]
    c38c:	mov	r0, #0
    c390:	b	c940 <big2_contentTok+0xdd0>
    c394:	cmp	r0, #22
    c398:	beq	c40c <big2_contentTok+0x89c>
    c39c:	cmp	r0, #24
    c3a0:	beq	c40c <big2_contentTok+0x89c>
    c3a4:	cmp	r0, #29
    c3a8:	bne	c3fc <big2_contentTok+0x88c>
    c3ac:	ldr	r4, [pc, #2136]	; cc0c <big2_contentTok+0x109c>
    c3b0:	ldr	r1, [sp, #32]
    c3b4:	ldrb	r2, [r1, #1]
    c3b8:	and	r3, r2, #255	; 0xff
    c3bc:	asr	ip, r3, #5
    c3c0:	ldr	r3, [pc, #2120]	; cc10 <big2_contentTok+0x10a0>
    c3c4:	ldrb	r0, [r1]
    c3c8:	and	r0, r0, #255	; 0xff
    c3cc:	ldrb	r0, [r3, r0]
    c3d0:	add	r0, ip, r0, lsl #3
    c3d4:	ldr	r3, [r4, r0, lsl #2]
    c3d8:	mov	r0, #1
    c3dc:	and	r2, r2, #31
    c3e0:	lsl	ip, r0, r2
    c3e4:	and	r2, r3, ip
    c3e8:	cmp	r2, #0
    c3ec:	bne	c40c <big2_contentTok+0x89c>
    c3f0:	str	r1, [r6]
    c3f4:	mov	r0, #0
    c3f8:	b	c940 <big2_contentTok+0xdd0>
    c3fc:	ldr	ip, [sp, #32]
    c400:	str	ip, [r6]
    c404:	mov	r0, #0
    c408:	b	c940 <big2_contentTok+0xdd0>
    c40c:	ldr	r0, [sp, #32]
    c410:	add	r2, r0, #2
    c414:	str	r2, [sp, #32]
    c418:	b	c120 <big2_contentTok+0x5b0>
    c41c:	ldr	r0, [sp, #32]
    c420:	add	r2, r0, #2
    c424:	str	r2, [sp, #32]
    c428:	cmp	r2, r5
    c42c:	bne	c438 <big2_contentTok+0x8c8>
    c430:	mvn	r0, #0
    c434:	b	c940 <big2_contentTok+0xdd0>
    c438:	ldrb	r3, [r2]
    c43c:	cmp	r3, #0
    c440:	beq	c458 <big2_contentTok+0x8e8>
    c444:	and	r0, r3, #255	; 0xff
    c448:	ldrb	r3, [r2, #1]
    c44c:	and	r1, r3, #255	; 0xff
    c450:	bl	52c8 <unicode_byte_type>
    c454:	b	c468 <big2_contentTok+0x8f8>
    c458:	ldrb	r0, [r2, #1]
    c45c:	and	r0, r0, #255	; 0xff
    c460:	add	ip, r7, r0
    c464:	ldrb	r0, [ip, #76]	; 0x4c
    c468:	cmp	r0, #14
    c46c:	beq	c498 <big2_contentTok+0x928>
    c470:	cmp	r0, #9
    c474:	beq	c41c <big2_contentTok+0x8ac>
    c478:	cmp	r0, #10
    c47c:	beq	c41c <big2_contentTok+0x8ac>
    c480:	cmp	r0, #21
    c484:	beq	c41c <big2_contentTok+0x8ac>
    c488:	ldr	r1, [sp, #32]
    c48c:	str	r1, [r6]
    c490:	mov	r0, #0
    c494:	b	c940 <big2_contentTok+0xdd0>
    c498:	mov	r8, #0
    c49c:	ldr	r0, [sp, #32]
    c4a0:	add	ip, r0, #2
    c4a4:	str	ip, [sp, #32]
    c4a8:	cmp	ip, r5
    c4ac:	bne	c4b8 <big2_contentTok+0x948>
    c4b0:	mvn	r0, #0
    c4b4:	b	c940 <big2_contentTok+0xdd0>
    c4b8:	ldrb	r0, [ip]
    c4bc:	cmp	r0, #0
    c4c0:	beq	c4dc <big2_contentTok+0x96c>
    c4c4:	and	r0, r0, #255	; 0xff
    c4c8:	ldrb	r1, [ip, #1]
    c4cc:	and	r1, r1, #255	; 0xff
    c4d0:	bl	52c8 <unicode_byte_type>
    c4d4:	mov	r4, r0
    c4d8:	b	c4ec <big2_contentTok+0x97c>
    c4dc:	ldrb	r2, [ip, #1]
    c4e0:	and	ip, r2, #255	; 0xff
    c4e4:	add	r2, r7, ip
    c4e8:	ldrb	r4, [r2, #76]	; 0x4c
    c4ec:	mov	ip, #1
    c4f0:	cmp	r4, #13
    c4f4:	moveq	r0, #1
    c4f8:	movne	r0, #0
    c4fc:	cmp	r4, #12
    c500:	moveq	r2, ip
    c504:	movne	r2, r0
    c508:	cmp	r2, #0
    c50c:	bne	c538 <big2_contentTok+0x9c8>
    c510:	cmp	r4, #9
    c514:	beq	c49c <big2_contentTok+0x92c>
    c518:	cmp	r4, #10
    c51c:	beq	c49c <big2_contentTok+0x92c>
    c520:	cmp	r4, #21
    c524:	beq	c49c <big2_contentTok+0x92c>
    c528:	ldr	ip, [sp, #32]
    c52c:	str	ip, [r6]
    c530:	mov	r0, #0
    c534:	b	c940 <big2_contentTok+0xdd0>
    c538:	ldr	r1, [sp, #32]
    c53c:	add	ip, r1, #2
    c540:	str	ip, [sp, #32]
    c544:	ldr	ip, [sp, #32]
    c548:	cmp	ip, r5
    c54c:	bne	c558 <big2_contentTok+0x9e8>
    c550:	mvn	r0, #0
    c554:	b	c940 <big2_contentTok+0xdd0>
    c558:	ldrb	r3, [ip]
    c55c:	cmp	r3, #0
    c560:	beq	c578 <big2_contentTok+0xa08>
    c564:	and	r0, r3, #255	; 0xff
    c568:	ldrb	r3, [ip, #1]
    c56c:	and	r1, r3, #255	; 0xff
    c570:	bl	52c8 <unicode_byte_type>
    c574:	b	c588 <big2_contentTok+0xa18>
    c578:	ldrb	r2, [ip, #1]
    c57c:	and	r0, r2, #255	; 0xff
    c580:	add	ip, r7, r0
    c584:	ldrb	r0, [ip, #76]	; 0x4c
    c588:	cmp	r0, r4
    c58c:	beq	c694 <big2_contentTok+0xb24>
    c590:	cmp	r0, #9
    c594:	bcs	c684 <big2_contentTok+0xb14>
    c598:	add	pc, pc, r0, lsl #2
    c59c:	nop	{0}
    c5a0:	b	c630 <big2_contentTok+0xac0>
    c5a4:	b	c630 <big2_contentTok+0xac0>
    c5a8:	b	c674 <big2_contentTok+0xb04>
    c5ac:	b	c640 <big2_contentTok+0xad0>
    c5b0:	b	c684 <big2_contentTok+0xb14>
    c5b4:	b	c5c4 <big2_contentTok+0xa54>
    c5b8:	b	c5e8 <big2_contentTok+0xa78>
    c5bc:	b	c60c <big2_contentTok+0xa9c>
    c5c0:	b	c630 <big2_contentTok+0xac0>
    c5c4:	ldr	r1, [sp, #32]
    c5c8:	sub	r3, r5, r1
    c5cc:	cmp	r3, #2
    c5d0:	bge	c5dc <big2_contentTok+0xa6c>
    c5d4:	mvn	r0, #1
    c5d8:	b	c940 <big2_contentTok+0xdd0>
    c5dc:	add	r0, r1, #2
    c5e0:	str	r0, [sp, #32]
    c5e4:	b	c544 <big2_contentTok+0x9d4>
    c5e8:	ldr	r2, [sp, #32]
    c5ec:	sub	r1, r5, r2
    c5f0:	cmp	r1, #3
    c5f4:	bge	c600 <big2_contentTok+0xa90>
    c5f8:	mvn	r0, #1
    c5fc:	b	c940 <big2_contentTok+0xdd0>
    c600:	add	r1, r2, #3
    c604:	str	r1, [sp, #32]
    c608:	b	c544 <big2_contentTok+0x9d4>
    c60c:	ldr	ip, [sp, #32]
    c610:	sub	r0, r5, ip
    c614:	cmp	r0, #4
    c618:	bge	c624 <big2_contentTok+0xab4>
    c61c:	mvn	r0, #1
    c620:	b	c940 <big2_contentTok+0xdd0>
    c624:	add	r2, ip, #4
    c628:	str	r2, [sp, #32]
    c62c:	b	c544 <big2_contentTok+0x9d4>
    c630:	ldr	r2, [sp, #32]
    c634:	str	r2, [r6]
    c638:	mov	r0, #0
    c63c:	b	c940 <big2_contentTok+0xdd0>
    c640:	ldr	r2, [sp, #32]
    c644:	add	r1, r2, #2
    c648:	add	r3, sp, #32
    c64c:	mov	r2, r5
    c650:	mov	r0, r7
    c654:	bl	b654 <big2_scanRef>
    c658:	cmp	r0, #0
    c65c:	bgt	c544 <big2_contentTok+0x9d4>
    c660:	cmp	r0, #0
    c664:	bne	c940 <big2_contentTok+0xdd0>
    c668:	ldr	r3, [sp, #32]
    c66c:	str	r3, [r6]
    c670:	b	c940 <big2_contentTok+0xdd0>
    c674:	ldr	r0, [sp, #32]
    c678:	str	r0, [r6]
    c67c:	mov	r0, #0
    c680:	b	c940 <big2_contentTok+0xdd0>
    c684:	ldr	r2, [sp, #32]
    c688:	add	r2, r2, #2
    c68c:	str	r2, [sp, #32]
    c690:	b	c544 <big2_contentTok+0x9d4>
    c694:	ldr	r0, [sp, #32]
    c698:	add	r2, r0, #2
    c69c:	str	r2, [sp, #32]
    c6a0:	cmp	r2, r5
    c6a4:	bne	c6b0 <big2_contentTok+0xb40>
    c6a8:	mvn	r0, #0
    c6ac:	b	c940 <big2_contentTok+0xdd0>
    c6b0:	ldrb	r1, [r2]
    c6b4:	cmp	r1, #0
    c6b8:	beq	c6d0 <big2_contentTok+0xb60>
    c6bc:	and	r0, r1, #255	; 0xff
    c6c0:	ldrb	r2, [r2, #1]
    c6c4:	and	r1, r2, #255	; 0xff
    c6c8:	bl	52c8 <unicode_byte_type>
    c6cc:	b	c6e0 <big2_contentTok+0xb70>
    c6d0:	ldrb	r1, [r2, #1]
    c6d4:	and	r0, r1, #255	; 0xff
    c6d8:	add	ip, r7, r0
    c6dc:	ldrb	r0, [ip, #76]	; 0x4c
    c6e0:	cmp	r0, #11
    c6e4:	bcs	c6fc <big2_contentTok+0xb8c>
    c6e8:	cmp	r0, #9
    c6ec:	beq	c724 <big2_contentTok+0xbb4>
    c6f0:	cmp	r0, #10
    c6f4:	beq	c724 <big2_contentTok+0xbb4>
    c6f8:	b	c714 <big2_contentTok+0xba4>
    c6fc:	cmp	r0, #11
    c700:	beq	c918 <big2_contentTok+0xda8>
    c704:	cmp	r0, #17
    c708:	beq	c8c4 <big2_contentTok+0xd54>
    c70c:	cmp	r0, #21
    c710:	beq	c724 <big2_contentTok+0xbb4>
    c714:	ldr	r3, [sp, #32]
    c718:	str	r3, [r6]
    c71c:	mov	r0, #0
    c720:	b	c940 <big2_contentTok+0xdd0>
    c724:	ldr	ip, [sp, #32]
    c728:	add	r1, ip, #2
    c72c:	str	r1, [sp, #32]
    c730:	cmp	r1, r5
    c734:	bne	c740 <big2_contentTok+0xbd0>
    c738:	mvn	r0, #0
    c73c:	b	c940 <big2_contentTok+0xdd0>
    c740:	ldrb	ip, [r1]
    c744:	cmp	ip, #0
    c748:	beq	c760 <big2_contentTok+0xbf0>
    c74c:	and	r0, ip, #255	; 0xff
    c750:	ldrb	ip, [r1, #1]
    c754:	and	r1, ip, #255	; 0xff
    c758:	bl	52c8 <unicode_byte_type>
    c75c:	b	c770 <big2_contentTok+0xc00>
    c760:	ldrb	ip, [r1, #1]
    c764:	and	ip, ip, #255	; 0xff
    c768:	add	ip, r7, ip
    c76c:	ldrb	r0, [ip, #76]	; 0x4c
    c770:	sub	r3, r0, #5
    c774:	cmp	r3, #25
    c778:	bcs	c8b4 <big2_contentTok+0xd44>
    c77c:	add	pc, pc, r3, lsl #2
    c780:	nop	{0}
    c784:	b	c848 <big2_contentTok+0xcd8>
    c788:	b	c86c <big2_contentTok+0xcfc>
    c78c:	b	c890 <big2_contentTok+0xd20>
    c790:	b	c8b4 <big2_contentTok+0xd44>
    c794:	b	c724 <big2_contentTok+0xbb4>
    c798:	b	c724 <big2_contentTok+0xbb4>
    c79c:	b	c918 <big2_contentTok+0xda8>
    c7a0:	b	c8b4 <big2_contentTok+0xd44>
    c7a4:	b	c8b4 <big2_contentTok+0xd44>
    c7a8:	b	c8b4 <big2_contentTok+0xd44>
    c7ac:	b	c8b4 <big2_contentTok+0xd44>
    c7b0:	b	c8b4 <big2_contentTok+0xd44>
    c7b4:	b	c8c4 <big2_contentTok+0xd54>
    c7b8:	b	c8b4 <big2_contentTok+0xd44>
    c7bc:	b	c8b4 <big2_contentTok+0xd44>
    c7c0:	b	c8b4 <big2_contentTok+0xd44>
    c7c4:	b	c724 <big2_contentTok+0xbb4>
    c7c8:	b	c838 <big2_contentTok+0xcc8>
    c7cc:	b	c8b4 <big2_contentTok+0xd44>
    c7d0:	b	c838 <big2_contentTok+0xcc8>
    c7d4:	b	c8b4 <big2_contentTok+0xd44>
    c7d8:	b	c8b4 <big2_contentTok+0xd44>
    c7dc:	b	c8b4 <big2_contentTok+0xd44>
    c7e0:	b	c8b4 <big2_contentTok+0xd44>
    c7e4:	b	c7e8 <big2_contentTok+0xc78>
    c7e8:	ldr	r4, [pc, #1052]	; cc0c <big2_contentTok+0x109c>
    c7ec:	ldr	r0, [sp, #32]
    c7f0:	ldrb	r3, [r0, #1]
    c7f4:	and	r2, r3, #255	; 0xff
    c7f8:	asr	r2, r2, #5
    c7fc:	ldr	ip, [pc, #1036]	; cc10 <big2_contentTok+0x10a0>
    c800:	ldrb	r1, [r0]
    c804:	and	r1, r1, #255	; 0xff
    c808:	ldrb	r1, [ip, r1]
    c80c:	add	ip, r2, r1, lsl #3
    c810:	ldr	r1, [r4, ip, lsl #2]
    c814:	mov	r2, #1
    c818:	and	r3, r3, #31
    c81c:	lsl	r2, r2, r3
    c820:	and	r3, r1, r2
    c824:	cmp	r3, #0
    c828:	bne	c838 <big2_contentTok+0xcc8>
    c82c:	str	r0, [r6]
    c830:	mov	r0, #0
    c834:	b	c940 <big2_contentTok+0xdd0>
    c838:	ldr	r2, [sp, #32]
    c83c:	add	r3, r2, #2
    c840:	str	r3, [sp, #32]
    c844:	b	c120 <big2_contentTok+0x5b0>
    c848:	ldr	r0, [sp, #32]
    c84c:	sub	r3, r5, r0
    c850:	cmp	r3, #2
    c854:	bge	c860 <big2_contentTok+0xcf0>
    c858:	mvn	r0, #1
    c85c:	b	c940 <big2_contentTok+0xdd0>
    c860:	str	r0, [r6]
    c864:	mov	r0, #0
    c868:	b	c940 <big2_contentTok+0xdd0>
    c86c:	ldr	r2, [sp, #32]
    c870:	sub	r1, r5, r2
    c874:	cmp	r1, #3
    c878:	bge	c884 <big2_contentTok+0xd14>
    c87c:	mvn	r0, #1
    c880:	b	c940 <big2_contentTok+0xdd0>
    c884:	str	r2, [r6]
    c888:	mov	r0, #0
    c88c:	b	c940 <big2_contentTok+0xdd0>
    c890:	ldr	r3, [sp, #32]
    c894:	sub	r0, r5, r3
    c898:	cmp	r0, #4
    c89c:	bge	c8a8 <big2_contentTok+0xd38>
    c8a0:	mvn	r0, #1
    c8a4:	b	c940 <big2_contentTok+0xdd0>
    c8a8:	str	r3, [r6]
    c8ac:	mov	r0, #0
    c8b0:	b	c940 <big2_contentTok+0xdd0>
    c8b4:	ldr	ip, [sp, #32]
    c8b8:	str	ip, [r6]
    c8bc:	mov	r0, #0
    c8c0:	b	c940 <big2_contentTok+0xdd0>
    c8c4:	ldr	r3, [sp, #32]
    c8c8:	add	r3, r3, #2
    c8cc:	str	r3, [sp, #32]
    c8d0:	cmp	r3, r5
    c8d4:	bne	c8e0 <big2_contentTok+0xd70>
    c8d8:	mvn	r0, #0
    c8dc:	b	c940 <big2_contentTok+0xdd0>
    c8e0:	ldrb	r1, [r3]
    c8e4:	cmp	r1, #0
    c8e8:	bne	c908 <big2_contentTok+0xd98>
    c8ec:	ldrb	r2, [r3, #1]
    c8f0:	cmp	r2, #62	; 0x3e
    c8f4:	bne	c908 <big2_contentTok+0xd98>
    c8f8:	add	ip, r3, #2
    c8fc:	str	ip, [r6]
    c900:	mov	r0, #3
    c904:	b	c940 <big2_contentTok+0xdd0>
    c908:	ldr	r2, [sp, #32]
    c90c:	str	r2, [r6]
    c910:	mov	r0, #0
    c914:	b	c940 <big2_contentTok+0xdd0>
    c918:	ldr	r1, [sp, #32]
    c91c:	add	r0, r1, #2
    c920:	str	r0, [r6]
    c924:	mov	r0, #1
    c928:	b	c940 <big2_contentTok+0xdd0>
    c92c:	ldr	r2, [sp, #32]
    c930:	str	r2, [r6]
    c934:	mov	r0, #0
    c938:	b	c940 <big2_contentTok+0xdd0>
    c93c:	mvn	r0, #0
    c940:	ldr	r4, [sp, #8]
    c944:	ldr	r5, [sp, #12]
    c948:	ldr	r6, [sp, #16]
    c94c:	ldr	r7, [sp, #20]
    c950:	ldr	r8, [sp, #24]
    c954:	ldr	r9, [sp, #28]
    c958:	ldr	lr, [sp, #4]
    c95c:	add	sp, sp, #40	; 0x28
    c960:	bx	lr
    c964:	sub	r1, r5, r4
    c968:	cmp	r1, #2
    c96c:	bge	c978 <big2_contentTok+0xe08>
    c970:	mvn	r0, #1
    c974:	b	cf8c <big2_contentTok+0x141c>
    c978:	str	r4, [r6]
    c97c:	mov	r0, #0
    c980:	b	cf8c <big2_contentTok+0x141c>
    c984:	sub	r0, r5, r4
    c988:	cmp	r0, #3
    c98c:	bge	c998 <big2_contentTok+0xe28>
    c990:	mvn	r0, #1
    c994:	b	cf8c <big2_contentTok+0x141c>
    c998:	str	r4, [r6]
    c99c:	mov	r0, #0
    c9a0:	b	cf8c <big2_contentTok+0x141c>
    c9a4:	sub	r1, r5, r4
    c9a8:	cmp	r1, #4
    c9ac:	bge	c9b8 <big2_contentTok+0xe48>
    c9b0:	mvn	r0, #1
    c9b4:	b	cf8c <big2_contentTok+0x141c>
    c9b8:	str	r4, [r6]
    c9bc:	mov	r0, #0
    c9c0:	b	cf8c <big2_contentTok+0x141c>
    c9c4:	add	r4, r4, #2
    c9c8:	b	c018 <big2_contentTok+0x4a8>
    c9cc:	str	r4, [r6]
    c9d0:	mov	r0, #0
    c9d4:	b	cf8c <big2_contentTok+0x141c>
    c9d8:	mvn	r0, #0
    c9dc:	b	cf8c <big2_contentTok+0x141c>
    c9e0:	add	r3, r4, #2
    c9e4:	str	r3, [r6]
    c9e8:	mov	r0, #2
    c9ec:	b	cf8c <big2_contentTok+0x141c>
    c9f0:	add	r0, r4, #2
    c9f4:	cmp	r0, r5
    c9f8:	bne	ca04 <big2_contentTok+0xe94>
    c9fc:	mvn	r0, #0
    ca00:	b	cf8c <big2_contentTok+0x141c>
    ca04:	ldrb	r1, [r0]
    ca08:	cmp	r1, #0
    ca0c:	bne	ca2c <big2_contentTok+0xebc>
    ca10:	ldrb	r2, [r0, #1]
    ca14:	cmp	r2, #62	; 0x3e
    ca18:	bne	ca2c <big2_contentTok+0xebc>
    ca1c:	add	r1, r0, #2
    ca20:	str	r1, [r6]
    ca24:	mov	r0, #4
    ca28:	b	cf8c <big2_contentTok+0x141c>
    ca2c:	str	r0, [r6]
    ca30:	mov	r0, #0
    ca34:	b	cf8c <big2_contentTok+0x141c>
    ca38:	str	r4, [r6]
    ca3c:	mov	r0, #0
    ca40:	b	cf8c <big2_contentTok+0x141c>
    ca44:	mvn	r0, #0
    ca48:	b	cf8c <big2_contentTok+0x141c>
    ca4c:	sub	ip, r5, r4
    ca50:	cmp	ip, #2
    ca54:	bge	ca60 <big2_contentTok+0xef0>
    ca58:	mvn	r0, #1
    ca5c:	b	cf8c <big2_contentTok+0x141c>
    ca60:	str	r4, [r6]
    ca64:	mov	r0, #0
    ca68:	b	cf8c <big2_contentTok+0x141c>
    ca6c:	sub	r2, r5, r4
    ca70:	cmp	r2, #3
    ca74:	bge	ca80 <big2_contentTok+0xf10>
    ca78:	mvn	r0, #1
    ca7c:	b	cf8c <big2_contentTok+0x141c>
    ca80:	str	r4, [r6]
    ca84:	mov	r0, #0
    ca88:	b	cf8c <big2_contentTok+0x141c>
    ca8c:	sub	r0, r5, r4
    ca90:	cmp	r0, #4
    ca94:	bge	caa0 <big2_contentTok+0xf30>
    ca98:	mvn	r0, #1
    ca9c:	b	cf8c <big2_contentTok+0x141c>
    caa0:	str	r4, [r6]
    caa4:	mov	r0, #0
    caa8:	b	cf8c <big2_contentTok+0x141c>
    caac:	add	r4, r4, #2
    cab0:	cmp	r4, r5
    cab4:	bne	cac0 <big2_contentTok+0xf50>
    cab8:	mvn	r0, #0
    cabc:	b	cf8c <big2_contentTok+0x141c>
    cac0:	ldrb	r0, [r4]
    cac4:	cmp	r0, #0
    cac8:	beq	cae0 <big2_contentTok+0xf70>
    cacc:	and	r0, r0, #255	; 0xff
    cad0:	ldrb	r3, [r4, #1]
    cad4:	and	r1, r3, #255	; 0xff
    cad8:	bl	52c8 <unicode_byte_type>
    cadc:	b	caf0 <big2_contentTok+0xf80>
    cae0:	ldrb	r3, [r4, #1]
    cae4:	and	r2, r3, #255	; 0xff
    cae8:	add	r2, r7, r2
    caec:	ldrb	r0, [r2, #76]	; 0x4c
    caf0:	cmp	r0, #20
    caf4:	beq	cb40 <big2_contentTok+0xfd0>
    caf8:	cmp	r0, #27
    cafc:	bne	cb34 <big2_contentTok+0xfc4>
    cb00:	add	r1, r4, #2
    cb04:	mov	r3, r6
    cb08:	mov	r2, r5
    cb0c:	mov	r0, r7
    cb10:	ldr	r4, [sp, #8]
    cb14:	ldr	r5, [sp, #12]
    cb18:	ldr	r6, [sp, #16]
    cb1c:	ldr	r7, [sp, #20]
    cb20:	ldr	r8, [sp, #24]
    cb24:	ldr	r9, [sp, #28]
    cb28:	ldr	lr, [sp, #4]
    cb2c:	add	sp, sp, #40	; 0x28
    cb30:	b	ab50 <big2_scanComment>
    cb34:	str	r4, [r6]
    cb38:	mov	r0, #0
    cb3c:	b	cf8c <big2_contentTok+0x141c>
    cb40:	add	r0, r4, #2
    cb44:	sub	r1, r5, r0
    cb48:	cmp	r1, #12
    cb4c:	bge	cb58 <big2_contentTok+0xfe8>
    cb50:	mvn	r0, #0
    cb54:	b	cba0 <big2_contentTok+0x1030>
    cb58:	mov	r2, #0
    cb5c:	ldrb	r3, [r0]
    cb60:	cmp	r3, #0
    cb64:	bne	cb98 <big2_contentTok+0x1028>
    cb68:	ldrb	r1, [r0, #1]
    cb6c:	ldr	ip, [pc, #164]	; cc18 <big2_contentTok+0x10a8>
    cb70:	ldrb	r3, [ip, r2]
    cb74:	cmp	r1, r3
    cb78:	bne	cb98 <big2_contentTok+0x1028>
    cb7c:	add	r2, r2, #1
    cb80:	add	r0, r0, #2
    cb84:	cmp	r2, #6
    cb88:	blt	cb5c <big2_contentTok+0xfec>
    cb8c:	str	r0, [r6]
    cb90:	mov	r0, #8
    cb94:	b	cba0 <big2_contentTok+0x1030>
    cb98:	str	r0, [r6]
    cb9c:	mov	r0, #0
    cba0:	ldr	r4, [sp, #8]
    cba4:	ldr	r5, [sp, #12]
    cba8:	ldr	r6, [sp, #16]
    cbac:	ldr	r7, [sp, #20]
    cbb0:	ldr	r8, [sp, #24]
    cbb4:	ldr	r9, [sp, #28]
    cbb8:	ldr	lr, [sp, #4]
    cbbc:	add	sp, sp, #40	; 0x28
    cbc0:	bx	lr
    cbc4:	add	r1, r4, #2
    cbc8:	mov	r3, r6
    cbcc:	mov	r2, r5
    cbd0:	mov	r0, r7
    cbd4:	ldr	r4, [sp, #8]
    cbd8:	ldr	r5, [sp, #12]
    cbdc:	ldr	r6, [sp, #16]
    cbe0:	ldr	r7, [sp, #20]
    cbe4:	ldr	r8, [sp, #24]
    cbe8:	ldr	r9, [sp, #28]
    cbec:	ldr	lr, [sp, #4]
    cbf0:	add	sp, sp, #40	; 0x28
    cbf4:	b	ae20 <big2_scanPi>
    cbf8:	add	r8, r4, #2
    cbfc:	cmp	r8, r5
    cc00:	bne	cc1c <big2_contentTok+0x10ac>
    cc04:	mvn	r0, #0
    cc08:	b	cf60 <big2_contentTok+0x13f0>
    cc0c:	.word	0x00000000
    cc10:	.word	0x00000500
    cc14:	.word	0x00000600
    cc18:	.word	0x00001850
    cc1c:	ldrb	r2, [r4, #2]
    cc20:	cmp	r2, #0
    cc24:	beq	cc3c <big2_contentTok+0x10cc>
    cc28:	and	r0, r2, #255	; 0xff
    cc2c:	ldrb	r3, [r4, #3]
    cc30:	and	r1, r3, #255	; 0xff
    cc34:	bl	52c8 <unicode_byte_type>
    cc38:	b	cc4c <big2_contentTok+0x10dc>
    cc3c:	ldrb	ip, [r4, #3]
    cc40:	and	r3, ip, #255	; 0xff
    cc44:	add	r0, r7, r3
    cc48:	ldrb	r0, [r0, #76]	; 0x4c
    cc4c:	cmp	r0, #22
    cc50:	bcs	cccc <big2_contentTok+0x115c>
    cc54:	cmp	r0, #5
    cc58:	beq	ccac <big2_contentTok+0x113c>
    cc5c:	cmp	r0, #6
    cc60:	beq	cc8c <big2_contentTok+0x111c>
    cc64:	cmp	r0, #7
    cc68:	bne	cd30 <big2_contentTok+0x11c0>
    cc6c:	sub	r3, r5, r8
    cc70:	cmp	r3, #4
    cc74:	bge	cc80 <big2_contentTok+0x1110>
    cc78:	mvn	r0, #1
    cc7c:	b	cf60 <big2_contentTok+0x13f0>
    cc80:	str	r8, [r6]
    cc84:	mov	r0, #0
    cc88:	b	cf60 <big2_contentTok+0x13f0>
    cc8c:	sub	r1, r5, r8
    cc90:	cmp	r1, #3
    cc94:	bge	cca0 <big2_contentTok+0x1130>
    cc98:	mvn	r0, #1
    cc9c:	b	cf60 <big2_contentTok+0x13f0>
    cca0:	str	r8, [r6]
    cca4:	mov	r0, #0
    cca8:	b	cf60 <big2_contentTok+0x13f0>
    ccac:	sub	r0, r5, r8
    ccb0:	cmp	r0, #2
    ccb4:	bge	ccc0 <big2_contentTok+0x1150>
    ccb8:	mvn	r0, #1
    ccbc:	b	cf60 <big2_contentTok+0x13f0>
    ccc0:	str	r8, [r6]
    ccc4:	mov	r0, #0
    ccc8:	b	cf60 <big2_contentTok+0x13f0>
    cccc:	cmp	r0, #22
    ccd0:	beq	cd3c <big2_contentTok+0x11cc>
    ccd4:	cmp	r0, #24
    ccd8:	beq	cd3c <big2_contentTok+0x11cc>
    ccdc:	cmp	r0, #29
    cce0:	bne	cd30 <big2_contentTok+0x11c0>
    cce4:	ldr	r0, [pc, #1516]	; d2d8 <big2_contentTok+0x1768>
    cce8:	ldrb	r2, [r8, #1]
    ccec:	and	ip, r2, #255	; 0xff
    ccf0:	asr	r4, ip, #5
    ccf4:	ldr	ip, [pc, #1504]	; d2dc <big2_contentTok+0x176c>
    ccf8:	ldrb	r1, [r8]
    ccfc:	and	r3, r1, #255	; 0xff
    cd00:	ldrb	ip, [ip, r3]
    cd04:	add	r3, r4, ip, lsl #3
    cd08:	ldr	ip, [r0, r3, lsl #2]
    cd0c:	mov	r1, #1
    cd10:	and	r0, r2, #31
    cd14:	lsl	r3, r1, r0
    cd18:	and	r0, ip, r3
    cd1c:	cmp	r0, #0
    cd20:	bne	cd3c <big2_contentTok+0x11cc>
    cd24:	str	r8, [r6]
    cd28:	mov	r0, #0
    cd2c:	b	cf60 <big2_contentTok+0x13f0>
    cd30:	str	r8, [r6]
    cd34:	mov	r0, #0
    cd38:	b	cf60 <big2_contentTok+0x13f0>
    cd3c:	add	r4, r8, #2
    cd40:	cmp	r4, r5
    cd44:	beq	cf5c <big2_contentTok+0x13ec>
    cd48:	ldrb	r3, [r4]
    cd4c:	cmp	r3, #0
    cd50:	beq	cd68 <big2_contentTok+0x11f8>
    cd54:	and	r0, r3, #255	; 0xff
    cd58:	ldrb	r2, [r4, #1]
    cd5c:	and	r1, r2, #255	; 0xff
    cd60:	bl	52c8 <unicode_byte_type>
    cd64:	b	cd78 <big2_contentTok+0x1208>
    cd68:	ldrb	r1, [r4, #1]
    cd6c:	and	r3, r1, #255	; 0xff
    cd70:	add	r2, r7, r3
    cd74:	ldrb	r0, [r2, #76]	; 0x4c
    cd78:	sub	r2, r0, #5
    cd7c:	cmp	r2, #25
    cd80:	bcs	cf50 <big2_contentTok+0x13e0>
    cd84:	add	pc, pc, r2, lsl #2
    cd88:	nop	{0}
    cd8c:	b	ce44 <big2_contentTok+0x12d4>
    cd90:	b	ce64 <big2_contentTok+0x12f4>
    cd94:	b	ce84 <big2_contentTok+0x1314>
    cd98:	b	cf50 <big2_contentTok+0x13e0>
    cd9c:	b	cea4 <big2_contentTok+0x1334>
    cda0:	b	cea4 <big2_contentTok+0x1334>
    cda4:	b	cf40 <big2_contentTok+0x13d0>
    cda8:	b	cf50 <big2_contentTok+0x13e0>
    cdac:	b	cf50 <big2_contentTok+0x13e0>
    cdb0:	b	cf50 <big2_contentTok+0x13e0>
    cdb4:	b	cf50 <big2_contentTok+0x13e0>
    cdb8:	b	cf50 <big2_contentTok+0x13e0>
    cdbc:	b	cf50 <big2_contentTok+0x13e0>
    cdc0:	b	cf50 <big2_contentTok+0x13e0>
    cdc4:	b	cf50 <big2_contentTok+0x13e0>
    cdc8:	b	cf50 <big2_contentTok+0x13e0>
    cdcc:	b	cea4 <big2_contentTok+0x1334>
    cdd0:	b	ce3c <big2_contentTok+0x12cc>
    cdd4:	b	cf38 <big2_contentTok+0x13c8>
    cdd8:	b	ce3c <big2_contentTok+0x12cc>
    cddc:	b	ce3c <big2_contentTok+0x12cc>
    cde0:	b	ce3c <big2_contentTok+0x12cc>
    cde4:	b	ce3c <big2_contentTok+0x12cc>
    cde8:	b	cf50 <big2_contentTok+0x13e0>
    cdec:	b	cdf0 <big2_contentTok+0x1280>
    cdf0:	ldr	r0, [pc, #1248]	; d2d8 <big2_contentTok+0x1768>
    cdf4:	ldrb	r1, [r4, #1]
    cdf8:	and	ip, r1, #255	; 0xff
    cdfc:	asr	r8, ip, #5
    ce00:	ldr	ip, [pc, #1240]	; d2e0 <big2_contentTok+0x1770>
    ce04:	ldrb	r3, [r4]
    ce08:	and	r2, r3, #255	; 0xff
    ce0c:	ldrb	ip, [ip, r2]
    ce10:	add	ip, r8, ip, lsl #3
    ce14:	ldr	r0, [r0, ip, lsl #2]
    ce18:	mov	r3, #1
    ce1c:	and	r2, r1, #31
    ce20:	lsl	r1, r3, r2
    ce24:	and	r2, r0, r1
    ce28:	cmp	r2, #0
    ce2c:	bne	ce3c <big2_contentTok+0x12cc>
    ce30:	str	r4, [r6]
    ce34:	mov	r0, #0
    ce38:	b	cf60 <big2_contentTok+0x13f0>
    ce3c:	add	r4, r4, #2
    ce40:	b	cd40 <big2_contentTok+0x11d0>
    ce44:	sub	r3, r5, r4
    ce48:	cmp	r3, #2
    ce4c:	bge	ce58 <big2_contentTok+0x12e8>
    ce50:	mvn	r0, #1
    ce54:	b	cf60 <big2_contentTok+0x13f0>
    ce58:	str	r4, [r6]
    ce5c:	mov	r0, #0
    ce60:	b	cf60 <big2_contentTok+0x13f0>
    ce64:	sub	r0, r5, r4
    ce68:	cmp	r0, #3
    ce6c:	bge	ce78 <big2_contentTok+0x1308>
    ce70:	mvn	r0, #1
    ce74:	b	cf60 <big2_contentTok+0x13f0>
    ce78:	str	r4, [r6]
    ce7c:	mov	r0, #0
    ce80:	b	cf60 <big2_contentTok+0x13f0>
    ce84:	sub	r1, r5, r4
    ce88:	cmp	r1, #4
    ce8c:	bge	ce98 <big2_contentTok+0x1328>
    ce90:	mvn	r0, #1
    ce94:	b	cf60 <big2_contentTok+0x13f0>
    ce98:	str	r4, [r6]
    ce9c:	mov	r0, #0
    cea0:	b	cf60 <big2_contentTok+0x13f0>
    cea4:	add	r4, r4, #2
    cea8:	cmp	r4, r5
    ceac:	beq	cf30 <big2_contentTok+0x13c0>
    ceb0:	ldrb	r1, [r4]
    ceb4:	cmp	r1, #0
    ceb8:	beq	ced0 <big2_contentTok+0x1360>
    cebc:	and	r0, r1, #255	; 0xff
    cec0:	ldrb	r1, [r4, #1]
    cec4:	and	r1, r1, #255	; 0xff
    cec8:	bl	52c8 <unicode_byte_type>
    cecc:	b	cee0 <big2_contentTok+0x1370>
    ced0:	ldrb	ip, [r4, #1]
    ced4:	and	r2, ip, #255	; 0xff
    ced8:	add	ip, r7, r2
    cedc:	ldrb	r0, [ip, #76]	; 0x4c
    cee0:	cmp	r0, #11
    cee4:	bcs	cefc <big2_contentTok+0x138c>
    cee8:	cmp	r0, #9
    ceec:	beq	cf18 <big2_contentTok+0x13a8>
    cef0:	cmp	r0, #10
    cef4:	beq	cf18 <big2_contentTok+0x13a8>
    cef8:	b	cf0c <big2_contentTok+0x139c>
    cefc:	cmp	r0, #11
    cf00:	beq	cf20 <big2_contentTok+0x13b0>
    cf04:	cmp	r0, #21
    cf08:	beq	cf18 <big2_contentTok+0x13a8>
    cf0c:	str	r4, [r6]
    cf10:	mov	r0, #0
    cf14:	b	cf60 <big2_contentTok+0x13f0>
    cf18:	add	r4, r4, #2
    cf1c:	b	cea8 <big2_contentTok+0x1338>
    cf20:	add	r0, r4, #2
    cf24:	str	r0, [r6]
    cf28:	mov	r0, #5
    cf2c:	b	cf60 <big2_contentTok+0x13f0>
    cf30:	mvn	r0, #0
    cf34:	b	cf60 <big2_contentTok+0x13f0>
    cf38:	add	r4, r4, #2
    cf3c:	b	cd40 <big2_contentTok+0x11d0>
    cf40:	add	r1, r4, #2
    cf44:	str	r1, [r6]
    cf48:	mov	r0, #5
    cf4c:	b	cf60 <big2_contentTok+0x13f0>
    cf50:	str	r4, [r6]
    cf54:	mov	r0, #0
    cf58:	b	cf60 <big2_contentTok+0x13f0>
    cf5c:	mvn	r0, #0
    cf60:	ldr	r4, [sp, #8]
    cf64:	ldr	r5, [sp, #12]
    cf68:	ldr	r6, [sp, #16]
    cf6c:	ldr	r7, [sp, #20]
    cf70:	ldr	r8, [sp, #24]
    cf74:	ldr	r9, [sp, #28]
    cf78:	ldr	lr, [sp, #4]
    cf7c:	add	sp, sp, #40	; 0x28
    cf80:	bx	lr
    cf84:	str	r4, [r6]
    cf88:	mov	r0, #0
    cf8c:	ldr	r4, [sp, #8]
    cf90:	ldr	r5, [sp, #12]
    cf94:	ldr	r6, [sp, #16]
    cf98:	ldr	r7, [sp, #20]
    cf9c:	ldr	r8, [sp, #24]
    cfa0:	ldr	r9, [sp, #28]
    cfa4:	ldr	lr, [sp, #4]
    cfa8:	add	sp, sp, #40	; 0x28
    cfac:	bx	lr
    cfb0:	add	r1, r8, #2
    cfb4:	mov	r3, r6
    cfb8:	mov	r2, r5
    cfbc:	mov	r0, r7
    cfc0:	ldr	r4, [sp, #8]
    cfc4:	ldr	r5, [sp, #12]
    cfc8:	ldr	r6, [sp, #16]
    cfcc:	ldr	r7, [sp, #20]
    cfd0:	ldr	r8, [sp, #24]
    cfd4:	ldr	r9, [sp, #28]
    cfd8:	ldr	lr, [sp, #4]
    cfdc:	add	sp, sp, #40	; 0x28
    cfe0:	b	b654 <big2_scanRef>
    cfe4:	add	r4, r8, #2
    cfe8:	cmp	r4, r5
    cfec:	bne	cff8 <big2_contentTok+0x1488>
    cff0:	mvn	r0, #2
    cff4:	b	d2b4 <big2_contentTok+0x1744>
    cff8:	ldrb	ip, [r4]
    cffc:	cmp	ip, #0
    d000:	beq	d018 <big2_contentTok+0x14a8>
    d004:	and	r0, ip, #255	; 0xff
    d008:	ldrb	ip, [r4, #1]
    d00c:	and	r1, ip, #255	; 0xff
    d010:	bl	52c8 <unicode_byte_type>
    d014:	b	d028 <big2_contentTok+0x14b8>
    d018:	ldrb	r0, [r4, #1]
    d01c:	and	r2, r0, #255	; 0xff
    d020:	add	r3, r7, r2
    d024:	ldrb	r0, [r3, #76]	; 0x4c
    d028:	add	r3, r4, #2
    d02c:	cmp	r0, #10
    d030:	moveq	r3, r3
    d034:	movne	r3, r4
    d038:	str	r3, [r6]
    d03c:	mov	r0, #7
    d040:	b	d2b4 <big2_contentTok+0x1744>
    d044:	add	r2, r8, #2
    d048:	str	r2, [r6]
    d04c:	mov	r0, #7
    d050:	b	d2b4 <big2_contentTok+0x1744>
    d054:	add	r4, r8, #2
    d058:	cmp	r4, r5
    d05c:	bne	d068 <big2_contentTok+0x14f8>
    d060:	mvn	r0, #4
    d064:	b	d2b4 <big2_contentTok+0x1744>
    d068:	ldrb	ip, [r4]
    d06c:	cmp	ip, #0
    d070:	bne	d124 <big2_contentTok+0x15b4>
    d074:	ldrb	r0, [r4, #1]
    d078:	cmp	r0, #93	; 0x5d
    d07c:	bne	d124 <big2_contentTok+0x15b4>
    d080:	add	r3, r4, #2
    d084:	cmp	r3, r5
    d088:	bne	d094 <big2_contentTok+0x1524>
    d08c:	mvn	r0, #4
    d090:	b	d2b4 <big2_contentTok+0x1744>
    d094:	ldrb	r2, [r3]
    d098:	cmp	r2, #0
    d09c:	bne	d0b8 <big2_contentTok+0x1548>
    d0a0:	ldrb	ip, [r3, #1]
    d0a4:	cmp	ip, #62	; 0x3e
    d0a8:	bne	d0b8 <big2_contentTok+0x1548>
    d0ac:	str	r3, [r6]
    d0b0:	mov	r0, #0
    d0b4:	b	d2b4 <big2_contentTok+0x1744>
    d0b8:	sub	r4, r3, #2
    d0bc:	b	d124 <big2_contentTok+0x15b4>
    d0c0:	sub	ip, r5, r8
    d0c4:	cmp	ip, #2
    d0c8:	bge	d0d4 <big2_contentTok+0x1564>
    d0cc:	mvn	r0, #1
    d0d0:	b	d2b4 <big2_contentTok+0x1744>
    d0d4:	add	r4, r8, #2
    d0d8:	b	d124 <big2_contentTok+0x15b4>
    d0dc:	sub	r3, r5, r8
    d0e0:	cmp	r3, #3
    d0e4:	bge	d0f0 <big2_contentTok+0x1580>
    d0e8:	mvn	r0, #1
    d0ec:	b	d2b4 <big2_contentTok+0x1744>
    d0f0:	add	r4, r8, #3
    d0f4:	b	d124 <big2_contentTok+0x15b4>
    d0f8:	sub	r2, r5, r8
    d0fc:	cmp	r2, #4
    d100:	bge	d10c <big2_contentTok+0x159c>
    d104:	mvn	r0, #1
    d108:	b	d2b4 <big2_contentTok+0x1744>
    d10c:	add	r4, r8, #4
    d110:	b	d124 <big2_contentTok+0x15b4>
    d114:	str	r8, [r6]
    d118:	mov	r0, #0
    d11c:	b	d2b4 <big2_contentTok+0x1744>
    d120:	add	r4, r8, #2
    d124:	cmp	r4, r5
    d128:	beq	d2ac <big2_contentTok+0x173c>
    d12c:	ldrb	r1, [r4]
    d130:	cmp	r1, #0
    d134:	beq	d14c <big2_contentTok+0x15dc>
    d138:	and	r0, r1, #255	; 0xff
    d13c:	ldrb	r2, [r4, #1]
    d140:	and	r1, r2, #255	; 0xff
    d144:	bl	52c8 <unicode_byte_type>
    d148:	b	d15c <big2_contentTok+0x15ec>
    d14c:	ldrb	ip, [r4, #1]
    d150:	and	ip, ip, #255	; 0xff
    d154:	add	ip, r7, ip
    d158:	ldrb	r0, [ip, #76]	; 0x4c
    d15c:	cmp	r0, #11
    d160:	bcs	d2a4 <big2_contentTok+0x1734>
    d164:	add	pc, pc, r0, lsl #2
    d168:	nop	{0}
    d16c:	b	d298 <big2_contentTok+0x1728>
    d170:	b	d298 <big2_contentTok+0x1728>
    d174:	b	d298 <big2_contentTok+0x1728>
    d178:	b	d298 <big2_contentTok+0x1728>
    d17c:	b	d234 <big2_contentTok+0x16c4>
    d180:	b	d198 <big2_contentTok+0x1628>
    d184:	b	d1cc <big2_contentTok+0x165c>
    d188:	b	d200 <big2_contentTok+0x1690>
    d18c:	b	d298 <big2_contentTok+0x1728>
    d190:	b	d298 <big2_contentTok+0x1728>
    d194:	b	d298 <big2_contentTok+0x1728>
    d198:	mov	ip, #1
    d19c:	mov	r1, #0
    d1a0:	sub	r2, r5, r4
    d1a4:	cmp	r2, #2
    d1a8:	movlt	r3, ip
    d1ac:	movge	r3, r1
    d1b0:	cmp	r3, #0
    d1b4:	beq	d1c4 <big2_contentTok+0x1654>
    d1b8:	str	r4, [r6]
    d1bc:	mov	r0, #6
    d1c0:	b	d2b4 <big2_contentTok+0x1744>
    d1c4:	add	r4, r4, #2
    d1c8:	b	d124 <big2_contentTok+0x15b4>
    d1cc:	mov	r3, #1
    d1d0:	mov	r2, #0
    d1d4:	sub	r0, r5, r4
    d1d8:	cmp	r0, #3
    d1dc:	movlt	ip, r3
    d1e0:	movge	ip, r2
    d1e4:	cmp	ip, #0
    d1e8:	beq	d1f8 <big2_contentTok+0x1688>
    d1ec:	str	r4, [r6]
    d1f0:	mov	r0, #6
    d1f4:	b	d2b4 <big2_contentTok+0x1744>
    d1f8:	add	r4, r4, #3
    d1fc:	b	d124 <big2_contentTok+0x15b4>
    d200:	mov	r1, #1
    d204:	mov	r2, #0
    d208:	sub	r3, r5, r4
    d20c:	cmp	r3, #4
    d210:	movlt	r2, r1
    d214:	movge	r2, r2
    d218:	cmp	r2, #0
    d21c:	beq	d22c <big2_contentTok+0x16bc>
    d220:	str	r4, [r6]
    d224:	mov	r0, #6
    d228:	b	d2b4 <big2_contentTok+0x1744>
    d22c:	add	r4, r4, #4
    d230:	b	d124 <big2_contentTok+0x15b4>
    d234:	add	r3, r4, #2
    d238:	cmp	r3, r5
    d23c:	beq	d298 <big2_contentTok+0x1728>
    d240:	ldrb	ip, [r4, #2]
    d244:	cmp	ip, #0
    d248:	bne	d290 <big2_contentTok+0x1720>
    d24c:	ldrb	r1, [r4, #3]
    d250:	cmp	r1, #93	; 0x5d
    d254:	bne	d290 <big2_contentTok+0x1720>
    d258:	add	r1, r4, #4
    d25c:	cmp	r1, r5
    d260:	beq	d298 <big2_contentTok+0x1728>
    d264:	ldrb	r2, [r4, #4]
    d268:	cmp	r2, #0
    d26c:	bne	d288 <big2_contentTok+0x1718>
    d270:	ldrb	r3, [r4, #5]
    d274:	cmp	r3, #62	; 0x3e
    d278:	bne	d288 <big2_contentTok+0x1718>
    d27c:	str	r1, [r6]
    d280:	mov	r0, #0
    d284:	b	d2b4 <big2_contentTok+0x1744>
    d288:	add	r4, r4, #2
    d28c:	b	d124 <big2_contentTok+0x15b4>
    d290:	add	r4, r4, #2
    d294:	b	d124 <big2_contentTok+0x15b4>
    d298:	str	r4, [r6]
    d29c:	mov	r0, #6
    d2a0:	b	d2b4 <big2_contentTok+0x1744>
    d2a4:	add	r4, r4, #2
    d2a8:	b	d124 <big2_contentTok+0x15b4>
    d2ac:	str	r4, [r6]
    d2b0:	mov	r0, #6
    d2b4:	ldr	r4, [sp, #8]
    d2b8:	ldr	r5, [sp, #12]
    d2bc:	ldr	r6, [sp, #16]
    d2c0:	ldr	r7, [sp, #20]
    d2c4:	ldr	r8, [sp, #24]
    d2c8:	ldr	r9, [sp, #28]
    d2cc:	ldr	lr, [sp, #4]
    d2d0:	add	sp, sp, #40	; 0x28
    d2d4:	bx	lr
    d2d8:	.word	0x00000000
    d2dc:	.word	0x00000500
    d2e0:	.word	0x00000600

0000d2e4 <big2_scanPercent>:
    d2e4:	mov	ip, sp
    d2e8:	sub	sp, sp, #32
    d2ec:	str	ip, [sp]
    d2f0:	str	lr, [sp, #4]
    d2f4:	str	r4, [sp, #8]
    d2f8:	str	r5, [sp, #12]
    d2fc:	str	r6, [sp, #16]
    d300:	str	r7, [sp, #20]
    d304:	str	r8, [sp, #24]
    d308:	mov	r6, r3
    d30c:	mov	r5, r2
    d310:	mov	r7, r1
    d314:	mov	r4, r0
    d318:	cmp	r7, r5
    d31c:	bne	d328 <big2_scanPercent+0x44>
    d320:	mvn	r0, #0
    d324:	b	d620 <big2_scanPercent+0x33c>
    d328:	ldrb	r1, [r7]
    d32c:	cmp	r1, #0
    d330:	beq	d348 <big2_scanPercent+0x64>
    d334:	and	r0, r1, #255	; 0xff
    d338:	ldrb	r2, [r7, #1]
    d33c:	and	r1, r2, #255	; 0xff
    d340:	bl	52c8 <unicode_byte_type>
    d344:	b	d358 <big2_scanPercent+0x74>
    d348:	ldrb	r2, [r7, #1]
    d34c:	and	r0, r2, #255	; 0xff
    d350:	add	r3, r4, r0
    d354:	ldrb	r0, [r3, #76]	; 0x4c
    d358:	sub	r2, r0, #5
    d35c:	cmp	r2, #26
    d360:	bcs	d618 <big2_scanPercent+0x334>
    d364:	add	pc, pc, r2, lsl #2
    d368:	nop	{0}
    d36c:	b	d5ac <big2_scanPercent+0x2c8>
    d370:	b	d5cc <big2_scanPercent+0x2e8>
    d374:	b	d5ec <big2_scanPercent+0x308>
    d378:	b	d618 <big2_scanPercent+0x334>
    d37c:	b	d60c <big2_scanPercent+0x328>
    d380:	b	d60c <big2_scanPercent+0x328>
    d384:	b	d618 <big2_scanPercent+0x334>
    d388:	b	d618 <big2_scanPercent+0x334>
    d38c:	b	d618 <big2_scanPercent+0x334>
    d390:	b	d618 <big2_scanPercent+0x334>
    d394:	b	d618 <big2_scanPercent+0x334>
    d398:	b	d618 <big2_scanPercent+0x334>
    d39c:	b	d618 <big2_scanPercent+0x334>
    d3a0:	b	d618 <big2_scanPercent+0x334>
    d3a4:	b	d618 <big2_scanPercent+0x334>
    d3a8:	b	d618 <big2_scanPercent+0x334>
    d3ac:	b	d60c <big2_scanPercent+0x328>
    d3b0:	b	d420 <big2_scanPercent+0x13c>
    d3b4:	b	d618 <big2_scanPercent+0x334>
    d3b8:	b	d420 <big2_scanPercent+0x13c>
    d3bc:	b	d618 <big2_scanPercent+0x334>
    d3c0:	b	d618 <big2_scanPercent+0x334>
    d3c4:	b	d618 <big2_scanPercent+0x334>
    d3c8:	b	d618 <big2_scanPercent+0x334>
    d3cc:	b	d3d4 <big2_scanPercent+0xf0>
    d3d0:	b	d60c <big2_scanPercent+0x328>
    d3d4:	ldr	r8, [pc, #612]	; d640 <big2_scanPercent+0x35c>
    d3d8:	ldrb	r2, [r7, #1]
    d3dc:	and	r3, r2, #255	; 0xff
    d3e0:	asr	ip, r3, #5
    d3e4:	ldr	r3, [pc, #600]	; d644 <big2_scanPercent+0x360>
    d3e8:	ldrb	r0, [r7]
    d3ec:	and	r1, r0, #255	; 0xff
    d3f0:	ldrb	r3, [r3, r1]
    d3f4:	add	r0, ip, r3, lsl #3
    d3f8:	ldr	ip, [r8, r0, lsl #2]
    d3fc:	mov	r1, #1
    d400:	and	r3, r2, #31
    d404:	lsl	r3, r1, r3
    d408:	and	r0, ip, r3
    d40c:	cmp	r0, #0
    d410:	bne	d420 <big2_scanPercent+0x13c>
    d414:	str	r7, [r6]
    d418:	mov	r0, #0
    d41c:	b	d620 <big2_scanPercent+0x33c>
    d420:	add	r7, r7, #2
    d424:	cmp	r7, r5
    d428:	beq	d5a4 <big2_scanPercent+0x2c0>
    d42c:	ldrb	r0, [r7]
    d430:	cmp	r0, #0
    d434:	beq	d44c <big2_scanPercent+0x168>
    d438:	and	r0, r0, #255	; 0xff
    d43c:	ldrb	r1, [r7, #1]
    d440:	and	r1, r1, #255	; 0xff
    d444:	bl	52c8 <unicode_byte_type>
    d448:	b	d45c <big2_scanPercent+0x178>
    d44c:	ldrb	ip, [r7, #1]
    d450:	and	ip, ip, #255	; 0xff
    d454:	add	ip, r4, ip
    d458:	ldrb	r0, [ip, #76]	; 0x4c
    d45c:	sub	r0, r0, #5
    d460:	cmp	r0, #25
    d464:	bcs	d598 <big2_scanPercent+0x2b4>
    d468:	add	pc, pc, r0, lsl #2
    d46c:	nop	{0}
    d470:	b	d528 <big2_scanPercent+0x244>
    d474:	b	d548 <big2_scanPercent+0x264>
    d478:	b	d568 <big2_scanPercent+0x284>
    d47c:	b	d598 <big2_scanPercent+0x2b4>
    d480:	b	d598 <big2_scanPercent+0x2b4>
    d484:	b	d598 <big2_scanPercent+0x2b4>
    d488:	b	d598 <big2_scanPercent+0x2b4>
    d48c:	b	d598 <big2_scanPercent+0x2b4>
    d490:	b	d598 <big2_scanPercent+0x2b4>
    d494:	b	d598 <big2_scanPercent+0x2b4>
    d498:	b	d598 <big2_scanPercent+0x2b4>
    d49c:	b	d598 <big2_scanPercent+0x2b4>
    d4a0:	b	d598 <big2_scanPercent+0x2b4>
    d4a4:	b	d588 <big2_scanPercent+0x2a4>
    d4a8:	b	d598 <big2_scanPercent+0x2b4>
    d4ac:	b	d598 <big2_scanPercent+0x2b4>
    d4b0:	b	d598 <big2_scanPercent+0x2b4>
    d4b4:	b	d520 <big2_scanPercent+0x23c>
    d4b8:	b	d598 <big2_scanPercent+0x2b4>
    d4bc:	b	d520 <big2_scanPercent+0x23c>
    d4c0:	b	d520 <big2_scanPercent+0x23c>
    d4c4:	b	d520 <big2_scanPercent+0x23c>
    d4c8:	b	d520 <big2_scanPercent+0x23c>
    d4cc:	b	d598 <big2_scanPercent+0x2b4>
    d4d0:	b	d4d4 <big2_scanPercent+0x1f0>
    d4d4:	ldr	r0, [pc, #356]	; d640 <big2_scanPercent+0x35c>
    d4d8:	ldrb	r3, [r7, #1]
    d4dc:	and	r2, r3, #255	; 0xff
    d4e0:	asr	r2, r2, #5
    d4e4:	ldr	r1, [pc, #348]	; d648 <big2_scanPercent+0x364>
    d4e8:	ldrb	ip, [r7]
    d4ec:	and	ip, ip, #255	; 0xff
    d4f0:	ldrb	ip, [r1, ip]
    d4f4:	add	r1, r2, ip, lsl #3
    d4f8:	ldr	r2, [r0, r1, lsl #2]
    d4fc:	mov	r1, #1
    d500:	and	r3, r3, #31
    d504:	lsl	r1, r1, r3
    d508:	and	r0, r2, r1
    d50c:	cmp	r0, #0
    d510:	bne	d520 <big2_scanPercent+0x23c>
    d514:	str	r7, [r6]
    d518:	mov	r0, #0
    d51c:	b	d620 <big2_scanPercent+0x33c>
    d520:	add	r7, r7, #2
    d524:	b	d424 <big2_scanPercent+0x140>
    d528:	sub	r3, r5, r7
    d52c:	cmp	r3, #2
    d530:	bge	d53c <big2_scanPercent+0x258>
    d534:	mvn	r0, #1
    d538:	b	d620 <big2_scanPercent+0x33c>
    d53c:	str	r7, [r6]
    d540:	mov	r0, #0
    d544:	b	d620 <big2_scanPercent+0x33c>
    d548:	sub	r3, r5, r7
    d54c:	cmp	r3, #3
    d550:	bge	d55c <big2_scanPercent+0x278>
    d554:	mvn	r0, #1
    d558:	b	d620 <big2_scanPercent+0x33c>
    d55c:	str	r7, [r6]
    d560:	mov	r0, #0
    d564:	b	d620 <big2_scanPercent+0x33c>
    d568:	sub	r3, r5, r7
    d56c:	cmp	r3, #4
    d570:	bge	d57c <big2_scanPercent+0x298>
    d574:	mvn	r0, #1
    d578:	b	d620 <big2_scanPercent+0x33c>
    d57c:	str	r7, [r6]
    d580:	mov	r0, #0
    d584:	b	d620 <big2_scanPercent+0x33c>
    d588:	add	r1, r7, #2
    d58c:	str	r1, [r6]
    d590:	mov	r0, #28
    d594:	b	d620 <big2_scanPercent+0x33c>
    d598:	str	r7, [r6]
    d59c:	mov	r0, #0
    d5a0:	b	d620 <big2_scanPercent+0x33c>
    d5a4:	mvn	r0, #0
    d5a8:	b	d620 <big2_scanPercent+0x33c>
    d5ac:	sub	r1, r5, r7
    d5b0:	cmp	r1, #2
    d5b4:	bge	d5c0 <big2_scanPercent+0x2dc>
    d5b8:	mvn	r0, #1
    d5bc:	b	d620 <big2_scanPercent+0x33c>
    d5c0:	str	r7, [r6]
    d5c4:	mov	r0, #0
    d5c8:	b	d620 <big2_scanPercent+0x33c>
    d5cc:	sub	r1, r5, r7
    d5d0:	cmp	r1, #3
    d5d4:	bge	d5e0 <big2_scanPercent+0x2fc>
    d5d8:	mvn	r0, #1
    d5dc:	b	d620 <big2_scanPercent+0x33c>
    d5e0:	str	r7, [r6]
    d5e4:	mov	r0, #0
    d5e8:	b	d620 <big2_scanPercent+0x33c>
    d5ec:	sub	r2, r5, r7
    d5f0:	cmp	r2, #4
    d5f4:	bge	d600 <big2_scanPercent+0x31c>
    d5f8:	mvn	r0, #1
    d5fc:	b	d620 <big2_scanPercent+0x33c>
    d600:	str	r7, [r6]
    d604:	mov	r0, #0
    d608:	b	d620 <big2_scanPercent+0x33c>
    d60c:	str	r7, [r6]
    d610:	mov	r0, #22
    d614:	b	d620 <big2_scanPercent+0x33c>
    d618:	str	r7, [r6]
    d61c:	mov	r0, #0
    d620:	ldr	r4, [sp, #8]
    d624:	ldr	r5, [sp, #12]
    d628:	ldr	r6, [sp, #16]
    d62c:	ldr	r7, [sp, #20]
    d630:	ldr	r8, [sp, #24]
    d634:	ldr	lr, [sp, #4]
    d638:	add	sp, sp, #32
    d63c:	bx	lr
    d640:	.word	0x00000000
    d644:	.word	0x00000500
    d648:	.word	0x00000600

0000d64c <big2_scanLit>:
    d64c:	mov	ip, sp
    d650:	sub	sp, sp, #32
    d654:	str	ip, [sp]
    d658:	str	lr, [sp, #4]
    d65c:	str	r4, [sp, #8]
    d660:	str	r5, [sp, #12]
    d664:	str	r6, [sp, #16]
    d668:	str	r7, [sp, #20]
    d66c:	str	r8, [sp, #24]
    d670:	ldr	r8, [ip]
    d674:	mov	r4, r3
    d678:	mov	r5, r2
    d67c:	mov	r6, r1
    d680:	mov	r7, r0
    d684:	cmp	r5, r4
    d688:	beq	d80c <big2_scanLit+0x1c0>
    d68c:	ldrb	r2, [r5]
    d690:	cmp	r2, #0
    d694:	beq	d6ac <big2_scanLit+0x60>
    d698:	and	r0, r2, #255	; 0xff
    d69c:	ldrb	r1, [r5, #1]
    d6a0:	and	r1, r1, #255	; 0xff
    d6a4:	bl	52c8 <unicode_byte_type>
    d6a8:	b	d6bc <big2_scanLit+0x70>
    d6ac:	ldrb	r1, [r5, #1]
    d6b0:	and	r3, r1, #255	; 0xff
    d6b4:	add	ip, r6, r3
    d6b8:	ldrb	r0, [ip, #76]	; 0x4c
    d6bc:	mov	r1, r0
    d6c0:	cmp	r1, #14
    d6c4:	bcs	d804 <big2_scanLit+0x1b8>
    d6c8:	add	pc, pc, r1, lsl #2
    d6cc:	nop	{0}
    d6d0:	b	d75c <big2_scanLit+0x110>
    d6d4:	b	d75c <big2_scanLit+0x110>
    d6d8:	b	d804 <big2_scanLit+0x1b8>
    d6dc:	b	d804 <big2_scanLit+0x1b8>
    d6e0:	b	d804 <big2_scanLit+0x1b8>
    d6e4:	b	d708 <big2_scanLit+0xbc>
    d6e8:	b	d724 <big2_scanLit+0xd8>
    d6ec:	b	d740 <big2_scanLit+0xf4>
    d6f0:	b	d75c <big2_scanLit+0x110>
    d6f4:	b	d804 <big2_scanLit+0x1b8>
    d6f8:	b	d804 <big2_scanLit+0x1b8>
    d6fc:	b	d804 <big2_scanLit+0x1b8>
    d700:	b	d768 <big2_scanLit+0x11c>
    d704:	b	d768 <big2_scanLit+0x11c>
    d708:	sub	r2, r4, r5
    d70c:	cmp	r2, #2
    d710:	bge	d71c <big2_scanLit+0xd0>
    d714:	mvn	r0, #1
    d718:	b	d810 <big2_scanLit+0x1c4>
    d71c:	add	r5, r5, #2
    d720:	b	d684 <big2_scanLit+0x38>
    d724:	sub	ip, r4, r5
    d728:	cmp	ip, #3
    d72c:	bge	d738 <big2_scanLit+0xec>
    d730:	mvn	r0, #1
    d734:	b	d810 <big2_scanLit+0x1c4>
    d738:	add	r5, r5, #3
    d73c:	b	d684 <big2_scanLit+0x38>
    d740:	sub	ip, r4, r5
    d744:	cmp	ip, #4
    d748:	bge	d754 <big2_scanLit+0x108>
    d74c:	mvn	r0, #1
    d750:	b	d810 <big2_scanLit+0x1c4>
    d754:	add	r5, r5, #4
    d758:	b	d684 <big2_scanLit+0x38>
    d75c:	str	r5, [r8]
    d760:	mov	r0, #0
    d764:	b	d810 <big2_scanLit+0x1c4>
    d768:	add	r5, r5, #2
    d76c:	cmp	r0, r7
    d770:	bne	d684 <big2_scanLit+0x38>
    d774:	cmp	r5, r4
    d778:	bne	d784 <big2_scanLit+0x138>
    d77c:	mvn	r0, #26
    d780:	b	d810 <big2_scanLit+0x1c4>
    d784:	str	r5, [r8]
    d788:	ldrb	r0, [r5]
    d78c:	cmp	r0, #0
    d790:	beq	d7a8 <big2_scanLit+0x15c>
    d794:	and	r0, r0, #255	; 0xff
    d798:	ldrb	r1, [r5, #1]
    d79c:	and	r1, r1, #255	; 0xff
    d7a0:	bl	52c8 <unicode_byte_type>
    d7a4:	b	d7b8 <big2_scanLit+0x16c>
    d7a8:	ldrb	r0, [r5, #1]
    d7ac:	and	r3, r0, #255	; 0xff
    d7b0:	add	r0, r6, r3
    d7b4:	ldrb	r0, [r0, #76]	; 0x4c
    d7b8:	cmp	r0, #20
    d7bc:	bcs	d7dc <big2_scanLit+0x190>
    d7c0:	cmp	r0, #9
    d7c4:	beq	d7fc <big2_scanLit+0x1b0>
    d7c8:	cmp	r0, #10
    d7cc:	beq	d7fc <big2_scanLit+0x1b0>
    d7d0:	cmp	r0, #11
    d7d4:	beq	d7fc <big2_scanLit+0x1b0>
    d7d8:	b	d7f4 <big2_scanLit+0x1a8>
    d7dc:	cmp	r0, #20
    d7e0:	beq	d7fc <big2_scanLit+0x1b0>
    d7e4:	cmp	r0, #21
    d7e8:	beq	d7fc <big2_scanLit+0x1b0>
    d7ec:	cmp	r0, #30
    d7f0:	beq	d7fc <big2_scanLit+0x1b0>
    d7f4:	mov	r0, #0
    d7f8:	b	d810 <big2_scanLit+0x1c4>
    d7fc:	mov	r0, #27
    d800:	b	d810 <big2_scanLit+0x1c4>
    d804:	add	r5, r5, #2
    d808:	b	d684 <big2_scanLit+0x38>
    d80c:	mvn	r0, #0
    d810:	ldr	r4, [sp, #8]
    d814:	ldr	r5, [sp, #12]
    d818:	ldr	r6, [sp, #16]
    d81c:	ldr	r7, [sp, #20]
    d820:	ldr	r8, [sp, #24]
    d824:	ldr	lr, [sp, #4]
    d828:	add	sp, sp, #32
    d82c:	bx	lr

0000d830 <big2_prologTok>:
    d830:	mov	ip, sp
    d834:	sub	sp, sp, #40	; 0x28
    d838:	str	ip, [sp, #4]
    d83c:	str	lr, [sp, #8]
    d840:	str	r4, [sp, #16]
    d844:	str	r5, [sp, #20]
    d848:	str	r6, [sp, #24]
    d84c:	str	r7, [sp, #28]
    d850:	str	r8, [sp, #32]
    d854:	str	r9, [sp, #36]	; 0x24
    d858:	mov	r6, r3
    d85c:	mov	r4, r2
    d860:	mov	r7, r1
    d864:	mov	r5, r0
    d868:	cmp	r7, r4
    d86c:	bne	d878 <big2_prologTok+0x48>
    d870:	mvn	r0, #3
    d874:	b	e6d4 <big2_prologTok+0xea4>
    d878:	sub	r3, r4, r7
    d87c:	and	r2, r3, #1
    d880:	cmp	r2, #0
    d884:	beq	d8a0 <big2_prologTok+0x70>
    d888:	bic	r2, r3, #1
    d88c:	cmp	r2, #0
    d890:	bne	d89c <big2_prologTok+0x6c>
    d894:	mvn	r0, #0
    d898:	b	e6d4 <big2_prologTok+0xea4>
    d89c:	add	r4, r7, r2
    d8a0:	ldrb	r3, [r7]
    d8a4:	cmp	r3, #0
    d8a8:	beq	d8c0 <big2_prologTok+0x90>
    d8ac:	and	r0, r3, #255	; 0xff
    d8b0:	ldrb	r1, [r7, #1]
    d8b4:	and	r1, r1, #255	; 0xff
    d8b8:	bl	52c8 <unicode_byte_type>
    d8bc:	b	d8d0 <big2_prologTok+0xa0>
    d8c0:	ldrb	r2, [r7, #1]
    d8c4:	and	r1, r2, #255	; 0xff
    d8c8:	add	ip, r5, r1
    d8cc:	ldrb	r0, [ip, #76]	; 0x4c
    d8d0:	sub	r0, r0, #2
    d8d4:	cmp	r0, #35	; 0x23
    d8d8:	bcs	e6cc <big2_prologTok+0xe9c>
    d8dc:	add	pc, pc, r0, lsl #2
    d8e0:	nop	{0}
    d8e4:	b	d9a8 <big2_prologTok+0x178>
    d8e8:	b	e6cc <big2_prologTok+0xe9c>
    d8ec:	b	dd98 <big2_prologTok+0x568>
    d8f0:	b	e244 <big2_prologTok+0xa14>
    d8f4:	b	e264 <big2_prologTok+0xa34>
    d8f8:	b	e284 <big2_prologTok+0xa54>
    d8fc:	b	e6cc <big2_prologTok+0xe9c>
    d900:	b	dcb0 <big2_prologTok+0x480>
    d904:	b	dcc8 <big2_prologTok+0x498>
    d908:	b	df3c <big2_prologTok+0x70c>
    d90c:	b	d970 <big2_prologTok+0x140>
    d910:	b	d98c <big2_prologTok+0x15c>
    d914:	b	e6cc <big2_prologTok+0xe9c>
    d918:	b	e6cc <big2_prologTok+0xe9c>
    d91c:	b	e6cc <big2_prologTok+0xe9c>
    d920:	b	e6cc <big2_prologTok+0xe9c>
    d924:	b	e6cc <big2_prologTok+0xe9c>
    d928:	b	df4c <big2_prologTok+0x71c>
    d92c:	b	dd88 <big2_prologTok+0x558>
    d930:	b	dcc8 <big2_prologTok+0x498>
    d934:	b	e2a4 <big2_prologTok+0xa74>
    d938:	b	e2b0 <big2_prologTok+0xa80>
    d93c:	b	e2a4 <big2_prologTok+0xa74>
    d940:	b	e2b0 <big2_prologTok+0xa80>
    d944:	b	e2b0 <big2_prologTok+0xa80>
    d948:	b	e2b0 <big2_prologTok+0xa80>
    d94c:	b	e6cc <big2_prologTok+0xe9c>
    d950:	b	e2bc <big2_prologTok+0xa8c>
    d954:	b	dd44 <big2_prologTok+0x514>
    d958:	b	de0c <big2_prologTok+0x5dc>
    d95c:	b	de1c <big2_prologTok+0x5ec>
    d960:	b	e6cc <big2_prologTok+0xe9c>
    d964:	b	e6cc <big2_prologTok+0xe9c>
    d968:	b	dd78 <big2_prologTok+0x548>
    d96c:	b	df2c <big2_prologTok+0x6fc>
    d970:	mov	r0, #12
    d974:	add	r2, r7, #2
    d978:	str	r6, [sp]
    d97c:	mov	r3, r4
    d980:	mov	r1, r5
    d984:	bl	d64c <big2_scanLit>
    d988:	b	e6d4 <big2_prologTok+0xea4>
    d98c:	mov	r0, #13
    d990:	add	r2, r7, #2
    d994:	str	r6, [sp]
    d998:	mov	r3, r4
    d99c:	mov	r1, r5
    d9a0:	bl	d64c <big2_scanLit>
    d9a4:	b	e6d4 <big2_prologTok+0xea4>
    d9a8:	add	r8, r7, #2
    d9ac:	cmp	r8, r4
    d9b0:	bne	d9bc <big2_prologTok+0x18c>
    d9b4:	mvn	r0, #0
    d9b8:	b	e6d4 <big2_prologTok+0xea4>
    d9bc:	ldrb	r2, [r8]
    d9c0:	cmp	r2, #0
    d9c4:	beq	d9dc <big2_prologTok+0x1ac>
    d9c8:	and	r0, r2, #255	; 0xff
    d9cc:	ldrb	r3, [r8, #1]
    d9d0:	and	r1, r3, #255	; 0xff
    d9d4:	bl	52c8 <unicode_byte_type>
    d9d8:	b	d9ec <big2_prologTok+0x1bc>
    d9dc:	ldrb	r0, [r8, #1]
    d9e0:	and	r1, r0, #255	; 0xff
    d9e4:	add	r3, r5, r1
    d9e8:	ldrb	r0, [r3, #76]	; 0x4c
    d9ec:	sub	ip, r0, #5
    d9f0:	cmp	ip, #25
    d9f4:	bcs	dca4 <big2_prologTok+0x474>
    d9f8:	add	pc, pc, ip, lsl #2
    d9fc:	nop	{0}
    da00:	b	dc94 <big2_prologTok+0x464>
    da04:	b	dc94 <big2_prologTok+0x464>
    da08:	b	dc94 <big2_prologTok+0x464>
    da0c:	b	dca4 <big2_prologTok+0x474>
    da10:	b	dca4 <big2_prologTok+0x474>
    da14:	b	dca4 <big2_prologTok+0x474>
    da18:	b	dca4 <big2_prologTok+0x474>
    da1c:	b	dca4 <big2_prologTok+0x474>
    da20:	b	dca4 <big2_prologTok+0x474>
    da24:	b	dca4 <big2_prologTok+0x474>
    da28:	b	dc60 <big2_prologTok+0x430>
    da2c:	b	da64 <big2_prologTok+0x234>
    da30:	b	dca4 <big2_prologTok+0x474>
    da34:	b	dca4 <big2_prologTok+0x474>
    da38:	b	dca4 <big2_prologTok+0x474>
    da3c:	b	dca4 <big2_prologTok+0x474>
    da40:	b	dca4 <big2_prologTok+0x474>
    da44:	b	dc94 <big2_prologTok+0x464>
    da48:	b	dca4 <big2_prologTok+0x474>
    da4c:	b	dc94 <big2_prologTok+0x464>
    da50:	b	dca4 <big2_prologTok+0x474>
    da54:	b	dca4 <big2_prologTok+0x474>
    da58:	b	dca4 <big2_prologTok+0x474>
    da5c:	b	dca4 <big2_prologTok+0x474>
    da60:	b	dc94 <big2_prologTok+0x464>
    da64:	add	r7, r8, #2
    da68:	cmp	r7, r4
    da6c:	bne	da78 <big2_prologTok+0x248>
    da70:	mvn	r0, #0
    da74:	b	dc3c <big2_prologTok+0x40c>
    da78:	ldrb	r2, [r8, #2]
    da7c:	cmp	r2, #0
    da80:	beq	da98 <big2_prologTok+0x268>
    da84:	and	r0, r2, #255	; 0xff
    da88:	ldrb	r2, [r8, #3]
    da8c:	and	r1, r2, #255	; 0xff
    da90:	bl	52c8 <unicode_byte_type>
    da94:	b	daa8 <big2_prologTok+0x278>
    da98:	ldrb	ip, [r8, #3]
    da9c:	and	r1, ip, #255	; 0xff
    daa0:	add	r0, r5, r1
    daa4:	ldrb	r0, [r0, #76]	; 0x4c
    daa8:	cmp	r0, #24
    daac:	bcs	dad4 <big2_prologTok+0x2a4>
    dab0:	cmp	r0, #20
    dab4:	beq	dac4 <big2_prologTok+0x294>
    dab8:	cmp	r0, #22
    dabc:	beq	db24 <big2_prologTok+0x2f4>
    dac0:	b	db18 <big2_prologTok+0x2e8>
    dac4:	add	r1, r7, #2
    dac8:	str	r1, [r6]
    dacc:	mov	r0, #33	; 0x21
    dad0:	b	dc3c <big2_prologTok+0x40c>
    dad4:	cmp	r0, #24
    dad8:	beq	db24 <big2_prologTok+0x2f4>
    dadc:	cmp	r0, #27
    dae0:	bne	db18 <big2_prologTok+0x2e8>
    dae4:	add	r1, r7, #2
    dae8:	mov	r3, r6
    daec:	mov	r2, r4
    daf0:	mov	r0, r5
    daf4:	ldr	r4, [sp, #16]
    daf8:	ldr	r5, [sp, #20]
    dafc:	ldr	r6, [sp, #24]
    db00:	ldr	r7, [sp, #28]
    db04:	ldr	r8, [sp, #32]
    db08:	ldr	r9, [sp, #36]	; 0x24
    db0c:	ldr	lr, [sp, #8]
    db10:	add	sp, sp, #40	; 0x28
    db14:	b	ab50 <big2_scanComment>
    db18:	str	r7, [r6]
    db1c:	mov	r0, #0
    db20:	b	dc3c <big2_prologTok+0x40c>
    db24:	add	r7, r7, #2
    db28:	cmp	r7, r4
    db2c:	beq	dc38 <big2_prologTok+0x408>
    db30:	ldrb	ip, [r7]
    db34:	cmp	ip, #0
    db38:	beq	db50 <big2_prologTok+0x320>
    db3c:	and	r0, ip, #255	; 0xff
    db40:	ldrb	r1, [r7, #1]
    db44:	and	r1, r1, #255	; 0xff
    db48:	bl	52c8 <unicode_byte_type>
    db4c:	b	db60 <big2_prologTok+0x330>
    db50:	ldrb	r0, [r7, #1]
    db54:	and	r3, r0, #255	; 0xff
    db58:	add	r2, r5, r3
    db5c:	ldrb	r0, [r2, #76]	; 0x4c
    db60:	cmp	r0, #22
    db64:	bcs	db84 <big2_prologTok+0x354>
    db68:	cmp	r0, #9
    db6c:	beq	dc0c <big2_prologTok+0x3dc>
    db70:	cmp	r0, #10
    db74:	beq	dc0c <big2_prologTok+0x3dc>
    db78:	cmp	r0, #21
    db7c:	beq	dc0c <big2_prologTok+0x3dc>
    db80:	b	dc24 <big2_prologTok+0x3f4>
    db84:	cmp	r0, #22
    db88:	beq	dc30 <big2_prologTok+0x400>
    db8c:	cmp	r0, #24
    db90:	beq	dc30 <big2_prologTok+0x400>
    db94:	cmp	r0, #30
    db98:	bne	dc24 <big2_prologTok+0x3f4>
    db9c:	add	r1, r7, #2
    dba0:	cmp	r1, r4
    dba4:	bne	dbb0 <big2_prologTok+0x380>
    dba8:	mvn	r0, #0
    dbac:	b	dc3c <big2_prologTok+0x40c>
    dbb0:	ldrb	r0, [r7, #2]
    dbb4:	cmp	r0, #0
    dbb8:	beq	dbd0 <big2_prologTok+0x3a0>
    dbbc:	and	r0, r0, #255	; 0xff
    dbc0:	ldrb	r2, [r7, #3]
    dbc4:	and	r1, r2, #255	; 0xff
    dbc8:	bl	52c8 <unicode_byte_type>
    dbcc:	b	dbe0 <big2_prologTok+0x3b0>
    dbd0:	ldrb	r3, [r7, #3]
    dbd4:	and	r3, r3, #255	; 0xff
    dbd8:	add	r1, r5, r3
    dbdc:	ldrb	r0, [r1, #76]	; 0x4c
    dbe0:	cmp	r0, #21
    dbe4:	bcs	dbfc <big2_prologTok+0x3cc>
    dbe8:	cmp	r0, #9
    dbec:	beq	dc18 <big2_prologTok+0x3e8>
    dbf0:	cmp	r0, #10
    dbf4:	beq	dc18 <big2_prologTok+0x3e8>
    dbf8:	b	dc0c <big2_prologTok+0x3dc>
    dbfc:	cmp	r0, #21
    dc00:	beq	dc18 <big2_prologTok+0x3e8>
    dc04:	cmp	r0, #30
    dc08:	beq	dc18 <big2_prologTok+0x3e8>
    dc0c:	str	r7, [r6]
    dc10:	mov	r0, #16
    dc14:	b	dc3c <big2_prologTok+0x40c>
    dc18:	str	r7, [r6]
    dc1c:	mov	r0, #0
    dc20:	b	dc3c <big2_prologTok+0x40c>
    dc24:	str	r7, [r6]
    dc28:	mov	r0, #0
    dc2c:	b	dc3c <big2_prologTok+0x40c>
    dc30:	add	r7, r7, #2
    dc34:	b	db28 <big2_prologTok+0x2f8>
    dc38:	mvn	r0, #0
    dc3c:	ldr	r4, [sp, #16]
    dc40:	ldr	r5, [sp, #20]
    dc44:	ldr	r6, [sp, #24]
    dc48:	ldr	r7, [sp, #28]
    dc4c:	ldr	r8, [sp, #32]
    dc50:	ldr	r9, [sp, #36]	; 0x24
    dc54:	ldr	lr, [sp, #8]
    dc58:	add	sp, sp, #40	; 0x28
    dc5c:	bx	lr
    dc60:	add	r1, r8, #2
    dc64:	mov	r3, r6
    dc68:	mov	r2, r4
    dc6c:	mov	r0, r5
    dc70:	ldr	r4, [sp, #16]
    dc74:	ldr	r5, [sp, #20]
    dc78:	ldr	r6, [sp, #24]
    dc7c:	ldr	r7, [sp, #28]
    dc80:	ldr	r8, [sp, #32]
    dc84:	ldr	r9, [sp, #36]	; 0x24
    dc88:	ldr	lr, [sp, #8]
    dc8c:	add	sp, sp, #40	; 0x28
    dc90:	b	ae20 <big2_scanPi>
    dc94:	sub	r0, r8, #2
    dc98:	str	r0, [r6]
    dc9c:	mov	r0, #29
    dca0:	b	e6d4 <big2_prologTok+0xea4>
    dca4:	str	r8, [r6]
    dca8:	mov	r0, #0
    dcac:	b	e6d4 <big2_prologTok+0xea4>
    dcb0:	add	ip, r7, #2
    dcb4:	cmp	ip, r4
    dcb8:	bne	dcc8 <big2_prologTok+0x498>
    dcbc:	str	r4, [r6]
    dcc0:	mvn	r0, #14
    dcc4:	b	e6d4 <big2_prologTok+0xea4>
    dcc8:	add	r7, r7, #2
    dccc:	cmp	r7, r4
    dcd0:	beq	dd38 <big2_prologTok+0x508>
    dcd4:	ldrb	r3, [r7]
    dcd8:	cmp	r3, #0
    dcdc:	beq	dcf4 <big2_prologTok+0x4c4>
    dce0:	and	r0, r3, #255	; 0xff
    dce4:	ldrb	r3, [r7, #1]
    dce8:	and	r1, r3, #255	; 0xff
    dcec:	bl	52c8 <unicode_byte_type>
    dcf0:	b	dd04 <big2_prologTok+0x4d4>
    dcf4:	ldrb	r1, [r7, #1]
    dcf8:	and	ip, r1, #255	; 0xff
    dcfc:	add	r3, r5, ip
    dd00:	ldrb	r0, [r3, #76]	; 0x4c
    dd04:	cmp	r0, #9
    dd08:	beq	dd20 <big2_prologTok+0x4f0>
    dd0c:	cmp	r0, #10
    dd10:	beq	dcc8 <big2_prologTok+0x498>
    dd14:	cmp	r0, #21
    dd18:	beq	dcc8 <big2_prologTok+0x498>
    dd1c:	b	dd2c <big2_prologTok+0x4fc>
    dd20:	add	ip, r7, #2
    dd24:	cmp	ip, r4
    dd28:	bne	dcc8 <big2_prologTok+0x498>
    dd2c:	str	r7, [r6]
    dd30:	mov	r0, #15
    dd34:	b	e6d4 <big2_prologTok+0xea4>
    dd38:	str	r7, [r6]
    dd3c:	mov	r0, #15
    dd40:	b	e6d4 <big2_prologTok+0xea4>
    dd44:	add	r1, r7, #2
    dd48:	mov	r3, r6
    dd4c:	mov	r2, r4
    dd50:	mov	r0, r5
    dd54:	ldr	r4, [sp, #16]
    dd58:	ldr	r5, [sp, #20]
    dd5c:	ldr	r6, [sp, #24]
    dd60:	ldr	r7, [sp, #28]
    dd64:	ldr	r8, [sp, #32]
    dd68:	ldr	r9, [sp, #36]	; 0x24
    dd6c:	ldr	lr, [sp, #8]
    dd70:	add	sp, sp, #40	; 0x28
    dd74:	b	d2e4 <big2_scanPercent>
    dd78:	add	r1, r7, #2
    dd7c:	str	r1, [r6]
    dd80:	mov	r0, #38	; 0x26
    dd84:	b	e6d4 <big2_prologTok+0xea4>
    dd88:	add	r3, r7, #2
    dd8c:	str	r3, [r6]
    dd90:	mov	r0, #25
    dd94:	b	e6d4 <big2_prologTok+0xea4>
    dd98:	add	r3, r7, #2
    dd9c:	cmp	r3, r4
    dda0:	bne	ddac <big2_prologTok+0x57c>
    dda4:	mvn	r0, #25
    dda8:	b	e6d4 <big2_prologTok+0xea4>
    ddac:	ldrb	r1, [r3]
    ddb0:	cmp	r1, #0
    ddb4:	bne	de00 <big2_prologTok+0x5d0>
    ddb8:	ldrb	r0, [r3, #1]
    ddbc:	cmp	r0, #93	; 0x5d
    ddc0:	bne	de00 <big2_prologTok+0x5d0>
    ddc4:	add	r2, r3, #2
    ddc8:	cmp	r2, r4
    ddcc:	bne	ddd8 <big2_prologTok+0x5a8>
    ddd0:	mvn	r0, #0
    ddd4:	b	e6d4 <big2_prologTok+0xea4>
    ddd8:	ldrb	ip, [r3, #2]
    dddc:	cmp	ip, #0
    dde0:	bne	de00 <big2_prologTok+0x5d0>
    dde4:	ldrb	r2, [r3, #3]
    dde8:	cmp	r2, #62	; 0x3e
    ddec:	bne	de00 <big2_prologTok+0x5d0>
    ddf0:	add	ip, r3, #4
    ddf4:	str	ip, [r6]
    ddf8:	mov	r0, #34	; 0x22
    ddfc:	b	e6d4 <big2_prologTok+0xea4>
    de00:	str	r3, [r6]
    de04:	mov	r0, #26
    de08:	b	e6d4 <big2_prologTok+0xea4>
    de0c:	add	r3, r7, #2
    de10:	str	r3, [r6]
    de14:	mov	r0, #23
    de18:	b	e6d4 <big2_prologTok+0xea4>
    de1c:	add	r7, r7, #2
    de20:	cmp	r7, r4
    de24:	bne	de30 <big2_prologTok+0x600>
    de28:	mvn	r0, #23
    de2c:	b	e6d4 <big2_prologTok+0xea4>
    de30:	ldrb	r1, [r7]
    de34:	cmp	r1, #0
    de38:	beq	de50 <big2_prologTok+0x620>
    de3c:	and	r0, r1, #255	; 0xff
    de40:	ldrb	r3, [r7, #1]
    de44:	and	r1, r3, #255	; 0xff
    de48:	bl	52c8 <unicode_byte_type>
    de4c:	b	de60 <big2_prologTok+0x630>
    de50:	ldrb	r2, [r7, #1]
    de54:	and	r1, r2, #255	; 0xff
    de58:	add	r2, r5, r1
    de5c:	ldrb	r0, [r2, #76]	; 0x4c
    de60:	sub	r0, r0, #9
    de64:	cmp	r0, #28
    de68:	bcs	df20 <big2_prologTok+0x6f0>
    de6c:	add	pc, pc, r0, lsl #2
    de70:	nop	{0}
    de74:	b	df14 <big2_prologTok+0x6e4>
    de78:	b	df14 <big2_prologTok+0x6e4>
    de7c:	b	df14 <big2_prologTok+0x6e4>
    de80:	b	df20 <big2_prologTok+0x6f0>
    de84:	b	df20 <big2_prologTok+0x6f0>
    de88:	b	df20 <big2_prologTok+0x6f0>
    de8c:	b	def4 <big2_prologTok+0x6c4>
    de90:	b	df20 <big2_prologTok+0x6f0>
    de94:	b	df20 <big2_prologTok+0x6f0>
    de98:	b	df20 <big2_prologTok+0x6f0>
    de9c:	b	df20 <big2_prologTok+0x6f0>
    dea0:	b	df20 <big2_prologTok+0x6f0>
    dea4:	b	df14 <big2_prologTok+0x6e4>
    dea8:	b	df20 <big2_prologTok+0x6f0>
    deac:	b	df20 <big2_prologTok+0x6f0>
    deb0:	b	df20 <big2_prologTok+0x6f0>
    deb4:	b	df20 <big2_prologTok+0x6f0>
    deb8:	b	df20 <big2_prologTok+0x6f0>
    debc:	b	df20 <big2_prologTok+0x6f0>
    dec0:	b	df20 <big2_prologTok+0x6f0>
    dec4:	b	df20 <big2_prologTok+0x6f0>
    dec8:	b	df20 <big2_prologTok+0x6f0>
    decc:	b	df20 <big2_prologTok+0x6f0>
    ded0:	b	df14 <big2_prologTok+0x6e4>
    ded4:	b	dee4 <big2_prologTok+0x6b4>
    ded8:	b	df04 <big2_prologTok+0x6d4>
    dedc:	b	df14 <big2_prologTok+0x6e4>
    dee0:	b	df14 <big2_prologTok+0x6e4>
    dee4:	add	r2, r7, #2
    dee8:	str	r2, [r6]
    deec:	mov	r0, #36	; 0x24
    def0:	b	e6d4 <big2_prologTok+0xea4>
    def4:	add	r3, r7, #2
    def8:	str	r3, [r6]
    defc:	mov	r0, #35	; 0x23
    df00:	b	e6d4 <big2_prologTok+0xea4>
    df04:	add	r1, r7, #2
    df08:	str	r1, [r6]
    df0c:	mov	r0, #37	; 0x25
    df10:	b	e6d4 <big2_prologTok+0xea4>
    df14:	str	r7, [r6]
    df18:	mov	r0, #24
    df1c:	b	e6d4 <big2_prologTok+0xea4>
    df20:	str	r7, [r6]
    df24:	mov	r0, #0
    df28:	b	e6d4 <big2_prologTok+0xea4>
    df2c:	add	r1, r7, #2
    df30:	str	r1, [r6]
    df34:	mov	r0, #21
    df38:	b	e6d4 <big2_prologTok+0xea4>
    df3c:	add	ip, r7, #2
    df40:	str	ip, [r6]
    df44:	mov	r0, #17
    df48:	b	e6d4 <big2_prologTok+0xea4>
    df4c:	add	r8, r7, #2
    df50:	cmp	r8, r4
    df54:	bne	df60 <big2_prologTok+0x730>
    df58:	mvn	r0, #0
    df5c:	b	e220 <big2_prologTok+0x9f0>
    df60:	ldrb	r0, [r7, #2]
    df64:	cmp	r0, #0
    df68:	beq	df80 <big2_prologTok+0x750>
    df6c:	and	r0, r0, #255	; 0xff
    df70:	ldrb	r1, [r7, #3]
    df74:	and	r1, r1, #255	; 0xff
    df78:	bl	52c8 <unicode_byte_type>
    df7c:	b	df90 <big2_prologTok+0x760>
    df80:	ldrb	ip, [r7, #3]
    df84:	and	r1, ip, #255	; 0xff
    df88:	add	r0, r5, r1
    df8c:	ldrb	r0, [r0, #76]	; 0x4c
    df90:	cmp	r0, #22
    df94:	bcs	e010 <big2_prologTok+0x7e0>
    df98:	cmp	r0, #5
    df9c:	beq	dff0 <big2_prologTok+0x7c0>
    dfa0:	cmp	r0, #6
    dfa4:	beq	dfd0 <big2_prologTok+0x7a0>
    dfa8:	cmp	r0, #7
    dfac:	bne	e074 <big2_prologTok+0x844>
    dfb0:	sub	r3, r4, r8
    dfb4:	cmp	r3, #4
    dfb8:	bge	dfc4 <big2_prologTok+0x794>
    dfbc:	mvn	r0, #1
    dfc0:	b	e220 <big2_prologTok+0x9f0>
    dfc4:	str	r8, [r6]
    dfc8:	mov	r0, #0
    dfcc:	b	e220 <big2_prologTok+0x9f0>
    dfd0:	sub	ip, r4, r8
    dfd4:	cmp	ip, #3
    dfd8:	bge	dfe4 <big2_prologTok+0x7b4>
    dfdc:	mvn	r0, #1
    dfe0:	b	e220 <big2_prologTok+0x9f0>
    dfe4:	str	r8, [r6]
    dfe8:	mov	r0, #0
    dfec:	b	e220 <big2_prologTok+0x9f0>
    dff0:	sub	r1, r4, r8
    dff4:	cmp	r1, #2
    dff8:	bge	e004 <big2_prologTok+0x7d4>
    dffc:	mvn	r0, #1
    e000:	b	e220 <big2_prologTok+0x9f0>
    e004:	str	r8, [r6]
    e008:	mov	r0, #0
    e00c:	b	e220 <big2_prologTok+0x9f0>
    e010:	cmp	r0, #22
    e014:	beq	e080 <big2_prologTok+0x850>
    e018:	cmp	r0, #24
    e01c:	beq	e080 <big2_prologTok+0x850>
    e020:	cmp	r0, #29
    e024:	bne	e074 <big2_prologTok+0x844>
    e028:	ldr	r2, [pc, #1736]	; e6f8 <big2_prologTok+0xec8>
    e02c:	ldrb	r3, [r8, #1]
    e030:	and	ip, r3, #255	; 0xff
    e034:	asr	r0, ip, #5
    e038:	ldr	ip, [pc, #1724]	; e6fc <big2_prologTok+0xecc>
    e03c:	ldrb	r1, [r8]
    e040:	and	r1, r1, #255	; 0xff
    e044:	ldrb	r1, [ip, r1]
    e048:	add	ip, r0, r1, lsl #3
    e04c:	ldr	r1, [r2, ip, lsl #2]
    e050:	mov	r0, #1
    e054:	and	ip, r3, #31
    e058:	lsl	ip, r0, ip
    e05c:	and	r3, r1, ip
    e060:	cmp	r3, #0
    e064:	bne	e080 <big2_prologTok+0x850>
    e068:	str	r8, [r6]
    e06c:	mov	r0, #0
    e070:	b	e220 <big2_prologTok+0x9f0>
    e074:	str	r8, [r6]
    e078:	mov	r0, #0
    e07c:	b	e220 <big2_prologTok+0x9f0>
    e080:	add	r7, r8, #2
    e084:	cmp	r7, r4
    e088:	beq	e21c <big2_prologTok+0x9ec>
    e08c:	ldrb	r3, [r7]
    e090:	cmp	r3, #0
    e094:	beq	e0ac <big2_prologTok+0x87c>
    e098:	and	r0, r3, #255	; 0xff
    e09c:	ldrb	ip, [r7, #1]
    e0a0:	and	r1, ip, #255	; 0xff
    e0a4:	bl	52c8 <unicode_byte_type>
    e0a8:	b	e0bc <big2_prologTok+0x88c>
    e0ac:	ldrb	ip, [r7, #1]
    e0b0:	and	r0, ip, #255	; 0xff
    e0b4:	add	r2, r5, r0
    e0b8:	ldrb	r0, [r2, #76]	; 0x4c
    e0bc:	sub	r2, r0, #5
    e0c0:	cmp	r2, #32
    e0c4:	bcs	e210 <big2_prologTok+0x9e0>
    e0c8:	add	pc, pc, r2, lsl #2
    e0cc:	nop	{0}
    e0d0:	b	e1a4 <big2_prologTok+0x974>
    e0d4:	b	e1c4 <big2_prologTok+0x994>
    e0d8:	b	e1e4 <big2_prologTok+0x9b4>
    e0dc:	b	e210 <big2_prologTok+0x9e0>
    e0e0:	b	e204 <big2_prologTok+0x9d4>
    e0e4:	b	e204 <big2_prologTok+0x9d4>
    e0e8:	b	e204 <big2_prologTok+0x9d4>
    e0ec:	b	e210 <big2_prologTok+0x9e0>
    e0f0:	b	e210 <big2_prologTok+0x9e0>
    e0f4:	b	e210 <big2_prologTok+0x9e0>
    e0f8:	b	e210 <big2_prologTok+0x9e0>
    e0fc:	b	e210 <big2_prologTok+0x9e0>
    e100:	b	e210 <big2_prologTok+0x9e0>
    e104:	b	e210 <big2_prologTok+0x9e0>
    e108:	b	e210 <big2_prologTok+0x9e0>
    e10c:	b	e210 <big2_prologTok+0x9e0>
    e110:	b	e204 <big2_prologTok+0x9d4>
    e114:	b	e19c <big2_prologTok+0x96c>
    e118:	b	e210 <big2_prologTok+0x9e0>
    e11c:	b	e19c <big2_prologTok+0x96c>
    e120:	b	e19c <big2_prologTok+0x96c>
    e124:	b	e19c <big2_prologTok+0x96c>
    e128:	b	e19c <big2_prologTok+0x96c>
    e12c:	b	e210 <big2_prologTok+0x9e0>
    e130:	b	e150 <big2_prologTok+0x920>
    e134:	b	e204 <big2_prologTok+0x9d4>
    e138:	b	e210 <big2_prologTok+0x9e0>
    e13c:	b	e204 <big2_prologTok+0x9d4>
    e140:	b	e210 <big2_prologTok+0x9e0>
    e144:	b	e210 <big2_prologTok+0x9e0>
    e148:	b	e210 <big2_prologTok+0x9e0>
    e14c:	b	e204 <big2_prologTok+0x9d4>
    e150:	ldr	r8, [pc, #1440]	; e6f8 <big2_prologTok+0xec8>
    e154:	ldrb	r1, [r7, #1]
    e158:	and	r2, r1, #255	; 0xff
    e15c:	asr	r3, r2, #5
    e160:	ldr	r0, [pc, #1432]	; e700 <big2_prologTok+0xed0>
    e164:	ldrb	r2, [r7]
    e168:	and	ip, r2, #255	; 0xff
    e16c:	ldrb	ip, [r0, ip]
    e170:	add	r3, r3, ip, lsl #3
    e174:	ldr	r0, [r8, r3, lsl #2]
    e178:	mov	r2, #1
    e17c:	and	ip, r1, #31
    e180:	lsl	r2, r2, ip
    e184:	and	r2, r0, r2
    e188:	cmp	r2, #0
    e18c:	bne	e19c <big2_prologTok+0x96c>
    e190:	str	r7, [r6]
    e194:	mov	r0, #0
    e198:	b	e220 <big2_prologTok+0x9f0>
    e19c:	add	r7, r7, #2
    e1a0:	b	e084 <big2_prologTok+0x854>
    e1a4:	sub	r1, r4, r7
    e1a8:	cmp	r1, #2
    e1ac:	bge	e1b8 <big2_prologTok+0x988>
    e1b0:	mvn	r0, #1
    e1b4:	b	e220 <big2_prologTok+0x9f0>
    e1b8:	str	r7, [r6]
    e1bc:	mov	r0, #0
    e1c0:	b	e220 <big2_prologTok+0x9f0>
    e1c4:	sub	r1, r4, r7
    e1c8:	cmp	r1, #3
    e1cc:	bge	e1d8 <big2_prologTok+0x9a8>
    e1d0:	mvn	r0, #1
    e1d4:	b	e220 <big2_prologTok+0x9f0>
    e1d8:	str	r7, [r6]
    e1dc:	mov	r0, #0
    e1e0:	b	e220 <big2_prologTok+0x9f0>
    e1e4:	sub	ip, r4, r7
    e1e8:	cmp	ip, #4
    e1ec:	bge	e1f8 <big2_prologTok+0x9c8>
    e1f0:	mvn	r0, #1
    e1f4:	b	e220 <big2_prologTok+0x9f0>
    e1f8:	str	r7, [r6]
    e1fc:	mov	r0, #0
    e200:	b	e220 <big2_prologTok+0x9f0>
    e204:	str	r7, [r6]
    e208:	mov	r0, #20
    e20c:	b	e220 <big2_prologTok+0x9f0>
    e210:	str	r7, [r6]
    e214:	mov	r0, #0
    e218:	b	e220 <big2_prologTok+0x9f0>
    e21c:	mvn	r0, #19
    e220:	ldr	r4, [sp, #16]
    e224:	ldr	r5, [sp, #20]
    e228:	ldr	r6, [sp, #24]
    e22c:	ldr	r7, [sp, #28]
    e230:	ldr	r8, [sp, #32]
    e234:	ldr	r9, [sp, #36]	; 0x24
    e238:	ldr	lr, [sp, #8]
    e23c:	add	sp, sp, #40	; 0x28
    e240:	bx	lr
    e244:	sub	ip, r4, r7
    e248:	cmp	ip, #2
    e24c:	bge	e258 <big2_prologTok+0xa28>
    e250:	mvn	r0, #1
    e254:	b	e6d4 <big2_prologTok+0xea4>
    e258:	str	r7, [r6]
    e25c:	mov	r0, #0
    e260:	b	e6d4 <big2_prologTok+0xea4>
    e264:	sub	r3, r4, r7
    e268:	cmp	r3, #3
    e26c:	bge	e278 <big2_prologTok+0xa48>
    e270:	mvn	r0, #1
    e274:	b	e6d4 <big2_prologTok+0xea4>
    e278:	str	r7, [r6]
    e27c:	mov	r0, #0
    e280:	b	e6d4 <big2_prologTok+0xea4>
    e284:	sub	r2, r4, r7
    e288:	cmp	r2, #4
    e28c:	bge	e298 <big2_prologTok+0xa68>
    e290:	mvn	r0, #1
    e294:	b	e6d4 <big2_prologTok+0xea4>
    e298:	str	r7, [r6]
    e29c:	mov	r0, #0
    e2a0:	b	e6d4 <big2_prologTok+0xea4>
    e2a4:	mov	r8, #18
    e2a8:	add	r7, r7, #2
    e2ac:	b	e32c <big2_prologTok+0xafc>
    e2b0:	mov	r8, #19
    e2b4:	add	r7, r7, #2
    e2b8:	b	e32c <big2_prologTok+0xafc>
    e2bc:	ldr	r3, [pc, #1076]	; e6f8 <big2_prologTok+0xec8>
    e2c0:	ldrb	r1, [r7, #1]
    e2c4:	and	r2, r1, #255	; 0xff
    e2c8:	asr	ip, r2, #5
    e2cc:	ldr	r8, [pc, #1064]	; e6fc <big2_prologTok+0xecc>
    e2d0:	ldrb	r2, [r7]
    e2d4:	and	r0, r2, #255	; 0xff
    e2d8:	ldrb	r2, [r8, r0]
    e2dc:	add	r2, ip, r2, lsl #3
    e2e0:	ldr	r8, [r3, r2, lsl #2]
    e2e4:	mov	r2, #1
    e2e8:	and	r1, r1, #31
    e2ec:	lsl	r2, r2, r1
    e2f0:	and	r1, r8, r2
    e2f4:	cmp	r1, #0
    e2f8:	beq	e308 <big2_prologTok+0xad8>
    e2fc:	add	r7, r7, #2
    e300:	mov	r8, #18
    e304:	b	e32c <big2_prologTok+0xafc>
    e308:	ldr	r1, [pc, #1008]	; e700 <big2_prologTok+0xed0>
    e30c:	ldrb	r1, [r1, r0]
    e310:	add	r0, ip, r1, lsl #3
    e314:	ldr	r1, [r3, r0, lsl #2]
    e318:	and	r3, r1, r2
    e31c:	cmp	r3, #0
    e320:	beq	e6cc <big2_prologTok+0xe9c>
    e324:	add	r7, r7, #2
    e328:	mov	r8, #19
    e32c:	cmp	r7, r4
    e330:	beq	e6c4 <big2_prologTok+0xe94>
    e334:	ldrb	ip, [r7]
    e338:	cmp	ip, #0
    e33c:	beq	e354 <big2_prologTok+0xb24>
    e340:	and	r0, ip, #255	; 0xff
    e344:	ldrb	r2, [r7, #1]
    e348:	and	r1, r2, #255	; 0xff
    e34c:	bl	52c8 <unicode_byte_type>
    e350:	b	e364 <big2_prologTok+0xb34>
    e354:	ldrb	ip, [r7, #1]
    e358:	and	r1, ip, #255	; 0xff
    e35c:	add	r2, r5, r1
    e360:	ldrb	r0, [r2, #76]	; 0x4c
    e364:	sub	r2, r0, #5
    e368:	cmp	r2, #32
    e36c:	bcs	e6b8 <big2_prologTok+0xe88>
    e370:	add	pc, pc, r2, lsl #2
    e374:	nop	{0}
    e378:	b	e44c <big2_prologTok+0xc1c>
    e37c:	b	e46c <big2_prologTok+0xc3c>
    e380:	b	e48c <big2_prologTok+0xc5c>
    e384:	b	e6b8 <big2_prologTok+0xe88>
    e388:	b	e4ac <big2_prologTok+0xc7c>
    e38c:	b	e4ac <big2_prologTok+0xc7c>
    e390:	b	e4ac <big2_prologTok+0xc7c>
    e394:	b	e6b8 <big2_prologTok+0xe88>
    e398:	b	e6b8 <big2_prologTok+0xe88>
    e39c:	b	e6b8 <big2_prologTok+0xe88>
    e3a0:	b	e694 <big2_prologTok+0xe64>
    e3a4:	b	e6b8 <big2_prologTok+0xe88>
    e3a8:	b	e6b8 <big2_prologTok+0xe88>
    e3ac:	b	e6b8 <big2_prologTok+0xe88>
    e3b0:	b	e6b8 <big2_prologTok+0xe88>
    e3b4:	b	e4ac <big2_prologTok+0xc7c>
    e3b8:	b	e4ac <big2_prologTok+0xc7c>
    e3bc:	b	e444 <big2_prologTok+0xc14>
    e3c0:	b	e4b8 <big2_prologTok+0xc88>
    e3c4:	b	e444 <big2_prologTok+0xc14>
    e3c8:	b	e444 <big2_prologTok+0xc14>
    e3cc:	b	e444 <big2_prologTok+0xc14>
    e3d0:	b	e444 <big2_prologTok+0xc14>
    e3d4:	b	e6b8 <big2_prologTok+0xe88>
    e3d8:	b	e3f8 <big2_prologTok+0xbc8>
    e3dc:	b	e4ac <big2_prologTok+0xc7c>
    e3e0:	b	e6b8 <big2_prologTok+0xe88>
    e3e4:	b	e4ac <big2_prologTok+0xc7c>
    e3e8:	b	e670 <big2_prologTok+0xe40>
    e3ec:	b	e64c <big2_prologTok+0xe1c>
    e3f0:	b	e4ac <big2_prologTok+0xc7c>
    e3f4:	b	e4ac <big2_prologTok+0xc7c>
    e3f8:	ldr	r9, [pc, #760]	; e6f8 <big2_prologTok+0xec8>
    e3fc:	ldrb	r0, [r7, #1]
    e400:	and	r3, r0, #255	; 0xff
    e404:	asr	r1, r3, #5
    e408:	ldr	r3, [pc, #752]	; e700 <big2_prologTok+0xed0>
    e40c:	ldrb	r2, [r7]
    e410:	and	ip, r2, #255	; 0xff
    e414:	ldrb	ip, [r3, ip]
    e418:	add	r1, r1, ip, lsl #3
    e41c:	ldr	r1, [r9, r1, lsl #2]
    e420:	mov	r2, #1
    e424:	and	r0, r0, #31
    e428:	lsl	r3, r2, r0
    e42c:	and	r3, r1, r3
    e430:	cmp	r3, #0
    e434:	bne	e444 <big2_prologTok+0xc14>
    e438:	str	r7, [r6]
    e43c:	mov	r0, #0
    e440:	b	e6d4 <big2_prologTok+0xea4>
    e444:	add	r7, r7, #2
    e448:	b	e32c <big2_prologTok+0xafc>
    e44c:	sub	r1, r4, r7
    e450:	cmp	r1, #2
    e454:	bge	e460 <big2_prologTok+0xc30>
    e458:	mvn	r0, #1
    e45c:	b	e6d4 <big2_prologTok+0xea4>
    e460:	str	r7, [r6]
    e464:	mov	r0, #0
    e468:	b	e6d4 <big2_prologTok+0xea4>
    e46c:	sub	r2, r4, r7
    e470:	cmp	r2, #3
    e474:	bge	e480 <big2_prologTok+0xc50>
    e478:	mvn	r0, #1
    e47c:	b	e6d4 <big2_prologTok+0xea4>
    e480:	str	r7, [r6]
    e484:	mov	r0, #0
    e488:	b	e6d4 <big2_prologTok+0xea4>
    e48c:	sub	r1, r4, r7
    e490:	cmp	r1, #4
    e494:	bge	e4a0 <big2_prologTok+0xc70>
    e498:	mvn	r0, #1
    e49c:	b	e6d4 <big2_prologTok+0xea4>
    e4a0:	str	r7, [r6]
    e4a4:	mov	r0, #0
    e4a8:	b	e6d4 <big2_prologTok+0xea4>
    e4ac:	str	r7, [r6]
    e4b0:	mov	r0, r8
    e4b4:	b	e6d4 <big2_prologTok+0xea4>
    e4b8:	add	r7, r7, #2
    e4bc:	cmp	r8, #18
    e4c0:	beq	e4d4 <big2_prologTok+0xca4>
    e4c4:	cmp	r8, #41	; 0x29
    e4c8:	bne	e32c <big2_prologTok+0xafc>
    e4cc:	mov	r8, #19
    e4d0:	b	e32c <big2_prologTok+0xafc>
    e4d4:	cmp	r7, r4
    e4d8:	bne	e4e4 <big2_prologTok+0xcb4>
    e4dc:	mvn	r0, #0
    e4e0:	b	e6d4 <big2_prologTok+0xea4>
    e4e4:	mov	r8, #41	; 0x29
    e4e8:	ldrb	r0, [r7]
    e4ec:	cmp	r0, #0
    e4f0:	beq	e508 <big2_prologTok+0xcd8>
    e4f4:	and	r0, r0, #255	; 0xff
    e4f8:	ldrb	r1, [r7, #1]
    e4fc:	and	r1, r1, #255	; 0xff
    e500:	bl	52c8 <unicode_byte_type>
    e504:	b	e518 <big2_prologTok+0xce8>
    e508:	ldrb	r1, [r7, #1]
    e50c:	and	ip, r1, #255	; 0xff
    e510:	add	r0, r5, ip
    e514:	ldrb	r0, [r0, #76]	; 0x4c
    e518:	sub	r0, r0, #5
    e51c:	cmp	r0, #25
    e520:	bcs	e644 <big2_prologTok+0xe14>
    e524:	add	pc, pc, r0, lsl #2
    e528:	nop	{0}
    e52c:	b	e5e4 <big2_prologTok+0xdb4>
    e530:	b	e604 <big2_prologTok+0xdd4>
    e534:	b	e624 <big2_prologTok+0xdf4>
    e538:	b	e644 <big2_prologTok+0xe14>
    e53c:	b	e644 <big2_prologTok+0xe14>
    e540:	b	e644 <big2_prologTok+0xe14>
    e544:	b	e644 <big2_prologTok+0xe14>
    e548:	b	e644 <big2_prologTok+0xe14>
    e54c:	b	e644 <big2_prologTok+0xe14>
    e550:	b	e644 <big2_prologTok+0xe14>
    e554:	b	e644 <big2_prologTok+0xe14>
    e558:	b	e644 <big2_prologTok+0xe14>
    e55c:	b	e644 <big2_prologTok+0xe14>
    e560:	b	e644 <big2_prologTok+0xe14>
    e564:	b	e644 <big2_prologTok+0xe14>
    e568:	b	e644 <big2_prologTok+0xe14>
    e56c:	b	e644 <big2_prologTok+0xe14>
    e570:	b	e5dc <big2_prologTok+0xdac>
    e574:	b	e644 <big2_prologTok+0xe14>
    e578:	b	e5dc <big2_prologTok+0xdac>
    e57c:	b	e5dc <big2_prologTok+0xdac>
    e580:	b	e5dc <big2_prologTok+0xdac>
    e584:	b	e5dc <big2_prologTok+0xdac>
    e588:	b	e644 <big2_prologTok+0xe14>
    e58c:	b	e590 <big2_prologTok+0xd60>
    e590:	ldr	r3, [pc, #352]	; e6f8 <big2_prologTok+0xec8>
    e594:	ldrb	ip, [r7, #1]
    e598:	and	r0, ip, #255	; 0xff
    e59c:	asr	r2, r0, #5
    e5a0:	ldr	r0, [pc, #344]	; e700 <big2_prologTok+0xed0>
    e5a4:	ldrb	r1, [r7]
    e5a8:	and	r1, r1, #255	; 0xff
    e5ac:	ldrb	r0, [r0, r1]
    e5b0:	add	r0, r2, r0, lsl #3
    e5b4:	ldr	r0, [r3, r0, lsl #2]
    e5b8:	mov	r2, #1
    e5bc:	and	r1, ip, #31
    e5c0:	lsl	r3, r2, r1
    e5c4:	and	r1, r0, r3
    e5c8:	cmp	r1, #0
    e5cc:	bne	e5dc <big2_prologTok+0xdac>
    e5d0:	str	r7, [r6]
    e5d4:	mov	r0, #0
    e5d8:	b	e6d4 <big2_prologTok+0xea4>
    e5dc:	add	r7, r7, #2
    e5e0:	b	e32c <big2_prologTok+0xafc>
    e5e4:	sub	r3, r4, r7
    e5e8:	cmp	r3, #2
    e5ec:	bge	e5f8 <big2_prologTok+0xdc8>
    e5f0:	mvn	r0, #1
    e5f4:	b	e6d4 <big2_prologTok+0xea4>
    e5f8:	str	r7, [r6]
    e5fc:	mov	r0, #0
    e600:	b	e6d4 <big2_prologTok+0xea4>
    e604:	sub	ip, r4, r7
    e608:	cmp	ip, #3
    e60c:	bge	e618 <big2_prologTok+0xde8>
    e610:	mvn	r0, #1
    e614:	b	e6d4 <big2_prologTok+0xea4>
    e618:	str	r7, [r6]
    e61c:	mov	r0, #0
    e620:	b	e6d4 <big2_prologTok+0xea4>
    e624:	sub	r3, r4, r7
    e628:	cmp	r3, #4
    e62c:	bge	e638 <big2_prologTok+0xe08>
    e630:	mvn	r0, #1
    e634:	b	e6d4 <big2_prologTok+0xea4>
    e638:	str	r7, [r6]
    e63c:	mov	r0, #0
    e640:	b	e6d4 <big2_prologTok+0xea4>
    e644:	mov	r8, #19
    e648:	b	e32c <big2_prologTok+0xafc>
    e64c:	cmp	r8, #19
    e650:	bne	e660 <big2_prologTok+0xe30>
    e654:	str	r7, [r6]
    e658:	mov	r0, #0
    e65c:	b	e6d4 <big2_prologTok+0xea4>
    e660:	add	r3, r7, #2
    e664:	str	r3, [r6]
    e668:	mov	r0, #32
    e66c:	b	e6d4 <big2_prologTok+0xea4>
    e670:	cmp	r8, #19
    e674:	bne	e684 <big2_prologTok+0xe54>
    e678:	str	r7, [r6]
    e67c:	mov	r0, #0
    e680:	b	e6d4 <big2_prologTok+0xea4>
    e684:	add	r3, r7, #2
    e688:	str	r3, [r6]
    e68c:	mov	r0, #31
    e690:	b	e6d4 <big2_prologTok+0xea4>
    e694:	cmp	r8, #19
    e698:	bne	e6a8 <big2_prologTok+0xe78>
    e69c:	str	r7, [r6]
    e6a0:	mov	r0, #0
    e6a4:	b	e6d4 <big2_prologTok+0xea4>
    e6a8:	add	ip, r7, #2
    e6ac:	str	ip, [r6]
    e6b0:	mov	r0, #30
    e6b4:	b	e6d4 <big2_prologTok+0xea4>
    e6b8:	str	r7, [r6]
    e6bc:	mov	r0, #0
    e6c0:	b	e6d4 <big2_prologTok+0xea4>
    e6c4:	rsb	r0, r8, #0
    e6c8:	b	e6d4 <big2_prologTok+0xea4>
    e6cc:	str	r7, [r6]
    e6d0:	mov	r0, #0
    e6d4:	ldr	r4, [sp, #16]
    e6d8:	ldr	r5, [sp, #20]
    e6dc:	ldr	r6, [sp, #24]
    e6e0:	ldr	r7, [sp, #28]
    e6e4:	ldr	r8, [sp, #32]
    e6e8:	ldr	r9, [sp, #36]	; 0x24
    e6ec:	ldr	lr, [sp, #8]
    e6f0:	add	sp, sp, #40	; 0x28
    e6f4:	bx	lr
    e6f8:	.word	0x00000000
    e6fc:	.word	0x00000500
    e700:	.word	0x00000600

0000e704 <big2_attributeValueTok>:
    e704:	mov	ip, sp
    e708:	sub	sp, sp, #32
    e70c:	str	ip, [sp]
    e710:	str	lr, [sp, #4]
    e714:	str	r4, [sp, #8]
    e718:	str	r5, [sp, #12]
    e71c:	str	r6, [sp, #16]
    e720:	str	r7, [sp, #20]
    e724:	str	r8, [sp, #24]
    e728:	mov	r6, r3
    e72c:	mov	r8, r2
    e730:	mov	r4, r1
    e734:	mov	r7, r0
    e738:	cmp	r4, r8
    e73c:	bne	e748 <big2_attributeValueTok+0x44>
    e740:	mvn	r0, #3
    e744:	b	e91c <big2_attributeValueTok+0x218>
    e748:	mov	r5, r4
    e74c:	cmp	r4, r8
    e750:	beq	e914 <big2_attributeValueTok+0x210>
    e754:	ldrb	r1, [r4]
    e758:	cmp	r1, #0
    e75c:	beq	e774 <big2_attributeValueTok+0x70>
    e760:	and	r0, r1, #255	; 0xff
    e764:	ldrb	r2, [r4, #1]
    e768:	and	r1, r2, #255	; 0xff
    e76c:	bl	52c8 <unicode_byte_type>
    e770:	b	e784 <big2_attributeValueTok+0x80>
    e774:	ldrb	r3, [r4, #1]
    e778:	and	r3, r3, #255	; 0xff
    e77c:	add	r3, r7, r3
    e780:	ldrb	r0, [r3, #76]	; 0x4c
    e784:	sub	r1, r0, #2
    e788:	cmp	r1, #20
    e78c:	bcs	e90c <big2_attributeValueTok+0x208>
    e790:	add	pc, pc, r1, lsl #2
    e794:	nop	{0}
    e798:	b	e844 <big2_attributeValueTok+0x140>
    e79c:	b	e800 <big2_attributeValueTok+0xfc>
    e7a0:	b	e90c <big2_attributeValueTok+0x208>
    e7a4:	b	e7e8 <big2_attributeValueTok+0xe4>
    e7a8:	b	e7f0 <big2_attributeValueTok+0xec>
    e7ac:	b	e7f8 <big2_attributeValueTok+0xf4>
    e7b0:	b	e90c <big2_attributeValueTok+0x208>
    e7b4:	b	e874 <big2_attributeValueTok+0x170>
    e7b8:	b	e850 <big2_attributeValueTok+0x14c>
    e7bc:	b	e90c <big2_attributeValueTok+0x208>
    e7c0:	b	e90c <big2_attributeValueTok+0x208>
    e7c4:	b	e90c <big2_attributeValueTok+0x208>
    e7c8:	b	e90c <big2_attributeValueTok+0x208>
    e7cc:	b	e90c <big2_attributeValueTok+0x208>
    e7d0:	b	e90c <big2_attributeValueTok+0x208>
    e7d4:	b	e90c <big2_attributeValueTok+0x208>
    e7d8:	b	e90c <big2_attributeValueTok+0x208>
    e7dc:	b	e90c <big2_attributeValueTok+0x208>
    e7e0:	b	e90c <big2_attributeValueTok+0x208>
    e7e4:	b	e8e8 <big2_attributeValueTok+0x1e4>
    e7e8:	add	r4, r4, #2
    e7ec:	b	e74c <big2_attributeValueTok+0x48>
    e7f0:	add	r4, r4, #3
    e7f4:	b	e74c <big2_attributeValueTok+0x48>
    e7f8:	add	r4, r4, #4
    e7fc:	b	e74c <big2_attributeValueTok+0x48>
    e800:	cmp	r4, r5
    e804:	bne	e838 <big2_attributeValueTok+0x134>
    e808:	add	r1, r4, #2
    e80c:	mov	r3, r6
    e810:	mov	r2, r8
    e814:	mov	r0, r7
    e818:	ldr	r4, [sp, #8]
    e81c:	ldr	r5, [sp, #12]
    e820:	ldr	r6, [sp, #16]
    e824:	ldr	r7, [sp, #20]
    e828:	ldr	r8, [sp, #24]
    e82c:	ldr	lr, [sp, #4]
    e830:	add	sp, sp, #32
    e834:	b	b654 <big2_scanRef>
    e838:	str	r4, [r6]
    e83c:	mov	r0, #6
    e840:	b	e91c <big2_attributeValueTok+0x218>
    e844:	str	r4, [r6]
    e848:	mov	r0, #0
    e84c:	b	e91c <big2_attributeValueTok+0x218>
    e850:	cmp	r4, r5
    e854:	bne	e868 <big2_attributeValueTok+0x164>
    e858:	add	r3, r4, #2
    e85c:	str	r3, [r6]
    e860:	mov	r0, #7
    e864:	b	e91c <big2_attributeValueTok+0x218>
    e868:	str	r4, [r6]
    e86c:	mov	r0, #6
    e870:	b	e91c <big2_attributeValueTok+0x218>
    e874:	cmp	r4, r5
    e878:	bne	e8dc <big2_attributeValueTok+0x1d8>
    e87c:	add	r4, r4, #2
    e880:	cmp	r4, r8
    e884:	bne	e890 <big2_attributeValueTok+0x18c>
    e888:	mvn	r0, #2
    e88c:	b	e91c <big2_attributeValueTok+0x218>
    e890:	ldrb	r0, [r4]
    e894:	cmp	r0, #0
    e898:	beq	e8b0 <big2_attributeValueTok+0x1ac>
    e89c:	and	r0, r0, #255	; 0xff
    e8a0:	ldrb	r1, [r4, #1]
    e8a4:	and	r1, r1, #255	; 0xff
    e8a8:	bl	52c8 <unicode_byte_type>
    e8ac:	b	e8c0 <big2_attributeValueTok+0x1bc>
    e8b0:	ldrb	ip, [r4, #1]
    e8b4:	and	r1, ip, #255	; 0xff
    e8b8:	add	r1, r7, r1
    e8bc:	ldrb	r0, [r1, #76]	; 0x4c
    e8c0:	add	r1, r4, #2
    e8c4:	cmp	r0, #10
    e8c8:	moveq	ip, r1
    e8cc:	movne	ip, r4
    e8d0:	str	ip, [r6]
    e8d4:	mov	r0, #7
    e8d8:	b	e91c <big2_attributeValueTok+0x218>
    e8dc:	str	r4, [r6]
    e8e0:	mov	r0, #6
    e8e4:	b	e91c <big2_attributeValueTok+0x218>
    e8e8:	cmp	r4, r5
    e8ec:	bne	e900 <big2_attributeValueTok+0x1fc>
    e8f0:	add	ip, r4, #2
    e8f4:	str	ip, [r6]
    e8f8:	mov	r0, #39	; 0x27
    e8fc:	b	e91c <big2_attributeValueTok+0x218>
    e900:	str	r4, [r6]
    e904:	mov	r0, #6
    e908:	b	e91c <big2_attributeValueTok+0x218>
    e90c:	add	r4, r4, #2
    e910:	b	e74c <big2_attributeValueTok+0x48>
    e914:	str	r4, [r6]
    e918:	mov	r0, #6
    e91c:	ldr	r4, [sp, #8]
    e920:	ldr	r5, [sp, #12]
    e924:	ldr	r6, [sp, #16]
    e928:	ldr	r7, [sp, #20]
    e92c:	ldr	r8, [sp, #24]
    e930:	ldr	lr, [sp, #4]
    e934:	add	sp, sp, #32
    e938:	bx	lr

0000e93c <big2_entityValueTok>:
    e93c:	mov	ip, sp
    e940:	sub	sp, sp, #32
    e944:	str	ip, [sp]
    e948:	str	lr, [sp, #4]
    e94c:	str	r4, [sp, #8]
    e950:	str	r5, [sp, #12]
    e954:	str	r6, [sp, #16]
    e958:	str	r7, [sp, #20]
    e95c:	str	r8, [sp, #24]
    e960:	mov	r4, r3
    e964:	mov	r5, r2
    e968:	mov	r6, r1
    e96c:	mov	r7, r0
    e970:	cmp	r6, r5
    e974:	bne	e980 <big2_entityValueTok+0x44>
    e978:	mvn	r0, #3
    e97c:	b	eb44 <big2_entityValueTok+0x208>
    e980:	mov	r8, r6
    e984:	cmp	r6, r5
    e988:	beq	eb3c <big2_entityValueTok+0x200>
    e98c:	ldrb	r1, [r6]
    e990:	cmp	r1, #0
    e994:	beq	e9ac <big2_entityValueTok+0x70>
    e998:	and	r0, r1, #255	; 0xff
    e99c:	ldrb	r2, [r6, #1]
    e9a0:	and	r1, r2, #255	; 0xff
    e9a4:	bl	52c8 <unicode_byte_type>
    e9a8:	b	e9bc <big2_entityValueTok+0x80>
    e9ac:	ldrb	ip, [r6, #1]
    e9b0:	and	r2, ip, #255	; 0xff
    e9b4:	add	r3, r7, r2
    e9b8:	ldrb	r0, [r3, #76]	; 0x4c
    e9bc:	cmp	r0, #7
    e9c0:	bcs	ea30 <big2_entityValueTok+0xf4>
    e9c4:	cmp	r0, #3
    e9c8:	beq	e9ec <big2_entityValueTok+0xb0>
    e9cc:	cmp	r0, #5
    e9d0:	beq	e9e4 <big2_entityValueTok+0xa8>
    e9d4:	cmp	r0, #6
    e9d8:	bne	eb10 <big2_entityValueTok+0x1d4>
    e9dc:	add	r6, r6, #3
    e9e0:	b	e984 <big2_entityValueTok+0x48>
    e9e4:	add	r6, r6, #2
    e9e8:	b	e984 <big2_entityValueTok+0x48>
    e9ec:	cmp	r6, r8
    e9f0:	bne	ea24 <big2_entityValueTok+0xe8>
    e9f4:	add	r1, r6, #2
    e9f8:	mov	r3, r4
    e9fc:	mov	r2, r5
    ea00:	mov	r0, r7
    ea04:	ldr	r4, [sp, #8]
    ea08:	ldr	r5, [sp, #12]
    ea0c:	ldr	r6, [sp, #16]
    ea10:	ldr	r7, [sp, #20]
    ea14:	ldr	r8, [sp, #24]
    ea18:	ldr	lr, [sp, #4]
    ea1c:	add	sp, sp, #32
    ea20:	b	b654 <big2_scanRef>
    ea24:	str	r6, [r4]
    ea28:	mov	r0, #6
    ea2c:	b	eb44 <big2_entityValueTok+0x208>
    ea30:	cmp	r0, #10
    ea34:	bcs	eac4 <big2_entityValueTok+0x188>
    ea38:	cmp	r0, #7
    ea3c:	beq	eabc <big2_entityValueTok+0x180>
    ea40:	cmp	r0, #9
    ea44:	bne	eb10 <big2_entityValueTok+0x1d4>
    ea48:	cmp	r6, r8
    ea4c:	bne	eab0 <big2_entityValueTok+0x174>
    ea50:	add	r6, r6, #2
    ea54:	cmp	r6, r5
    ea58:	bne	ea64 <big2_entityValueTok+0x128>
    ea5c:	mvn	r0, #2
    ea60:	b	eb44 <big2_entityValueTok+0x208>
    ea64:	ldrb	r0, [r6]
    ea68:	cmp	r0, #0
    ea6c:	beq	ea84 <big2_entityValueTok+0x148>
    ea70:	and	r0, r0, #255	; 0xff
    ea74:	ldrb	r1, [r6, #1]
    ea78:	and	r1, r1, #255	; 0xff
    ea7c:	bl	52c8 <unicode_byte_type>
    ea80:	b	ea94 <big2_entityValueTok+0x158>
    ea84:	ldrb	r3, [r6, #1]
    ea88:	and	r1, r3, #255	; 0xff
    ea8c:	add	r3, r7, r1
    ea90:	ldrb	r0, [r3, #76]	; 0x4c
    ea94:	add	r3, r6, #2
    ea98:	cmp	r0, #10
    ea9c:	moveq	r0, r3
    eaa0:	movne	r0, r6
    eaa4:	str	r0, [r4]
    eaa8:	mov	r0, #7
    eaac:	b	eb44 <big2_entityValueTok+0x208>
    eab0:	str	r6, [r4]
    eab4:	mov	r0, #6
    eab8:	b	eb44 <big2_entityValueTok+0x208>
    eabc:	add	r6, r6, #4
    eac0:	b	e984 <big2_entityValueTok+0x48>
    eac4:	cmp	r0, #10
    eac8:	beq	eb18 <big2_entityValueTok+0x1dc>
    eacc:	cmp	r0, #30
    ead0:	bne	eb10 <big2_entityValueTok+0x1d4>
    ead4:	cmp	r6, r8
    ead8:	bne	eb04 <big2_entityValueTok+0x1c8>
    eadc:	add	r1, r6, #2
    eae0:	mov	r3, r4
    eae4:	mov	r2, r5
    eae8:	mov	r0, r7
    eaec:	bl	d2e4 <big2_scanPercent>
    eaf0:	mov	r2, #0
    eaf4:	cmp	r0, #22
    eaf8:	moveq	r0, r2
    eafc:	movne	r0, r0
    eb00:	b	eb44 <big2_entityValueTok+0x208>
    eb04:	str	r6, [r4]
    eb08:	mov	r0, #6
    eb0c:	b	eb44 <big2_entityValueTok+0x208>
    eb10:	add	r6, r6, #2
    eb14:	b	e984 <big2_entityValueTok+0x48>
    eb18:	cmp	r6, r8
    eb1c:	bne	eb30 <big2_entityValueTok+0x1f4>
    eb20:	add	r0, r6, #2
    eb24:	str	r0, [r4]
    eb28:	mov	r0, #7
    eb2c:	b	eb44 <big2_entityValueTok+0x208>
    eb30:	str	r6, [r4]
    eb34:	mov	r0, #6
    eb38:	b	eb44 <big2_entityValueTok+0x208>
    eb3c:	str	r6, [r4]
    eb40:	mov	r0, #6
    eb44:	ldr	r4, [sp, #8]
    eb48:	ldr	r5, [sp, #12]
    eb4c:	ldr	r6, [sp, #16]
    eb50:	ldr	r7, [sp, #20]
    eb54:	ldr	r8, [sp, #24]
    eb58:	ldr	lr, [sp, #4]
    eb5c:	add	sp, sp, #32
    eb60:	bx	lr

0000eb64 <big2_ignoreSectionTok>:
    eb64:	mov	ip, sp
    eb68:	sub	sp, sp, #32
    eb6c:	str	ip, [sp]
    eb70:	str	lr, [sp, #4]
    eb74:	str	r4, [sp, #8]
    eb78:	str	r5, [sp, #12]
    eb7c:	str	r6, [sp, #16]
    eb80:	str	r7, [sp, #20]
    eb84:	str	r8, [sp, #24]
    eb88:	mov	r6, r3
    eb8c:	mov	r5, r2
    eb90:	mov	r4, r1
    eb94:	mov	r8, r0
    eb98:	mov	r7, #0
    eb9c:	sub	ip, r5, r4
    eba0:	and	r0, ip, #1
    eba4:	cmp	r0, #0
    eba8:	beq	ebb4 <big2_ignoreSectionTok+0x50>
    ebac:	bic	r2, ip, #1
    ebb0:	add	r5, r4, r2
    ebb4:	cmp	r4, r5
    ebb8:	beq	ed6c <big2_ignoreSectionTok+0x208>
    ebbc:	ldrb	r1, [r4]
    ebc0:	cmp	r1, #0
    ebc4:	beq	ebdc <big2_ignoreSectionTok+0x78>
    ebc8:	and	r0, r1, #255	; 0xff
    ebcc:	ldrb	r1, [r4, #1]
    ebd0:	and	r1, r1, #255	; 0xff
    ebd4:	bl	52c8 <unicode_byte_type>
    ebd8:	b	ebec <big2_ignoreSectionTok+0x88>
    ebdc:	ldrb	r0, [r4, #1]
    ebe0:	and	r2, r0, #255	; 0xff
    ebe4:	add	r3, r8, r2
    ebe8:	ldrb	r0, [r3, #76]	; 0x4c
    ebec:	cmp	r0, #9
    ebf0:	bcs	ed64 <big2_ignoreSectionTok+0x200>
    ebf4:	add	pc, pc, r0, lsl #2
    ebf8:	nop	{0}
    ebfc:	b	ec74 <big2_ignoreSectionTok+0x110>
    ec00:	b	ec74 <big2_ignoreSectionTok+0x110>
    ec04:	b	ec80 <big2_ignoreSectionTok+0x11c>
    ec08:	b	ed64 <big2_ignoreSectionTok+0x200>
    ec0c:	b	ece8 <big2_ignoreSectionTok+0x184>
    ec10:	b	ec20 <big2_ignoreSectionTok+0xbc>
    ec14:	b	ec3c <big2_ignoreSectionTok+0xd8>
    ec18:	b	ec58 <big2_ignoreSectionTok+0xf4>
    ec1c:	b	ec74 <big2_ignoreSectionTok+0x110>
    ec20:	sub	r3, r5, r4
    ec24:	cmp	r3, #2
    ec28:	bge	ec34 <big2_ignoreSectionTok+0xd0>
    ec2c:	mvn	r0, #1
    ec30:	b	ed70 <big2_ignoreSectionTok+0x20c>
    ec34:	add	r4, r4, #2
    ec38:	b	ebb4 <big2_ignoreSectionTok+0x50>
    ec3c:	sub	r2, r5, r4
    ec40:	cmp	r2, #3
    ec44:	bge	ec50 <big2_ignoreSectionTok+0xec>
    ec48:	mvn	r0, #1
    ec4c:	b	ed70 <big2_ignoreSectionTok+0x20c>
    ec50:	add	r4, r4, #3
    ec54:	b	ebb4 <big2_ignoreSectionTok+0x50>
    ec58:	sub	r2, r5, r4
    ec5c:	cmp	r2, #4
    ec60:	bge	ec6c <big2_ignoreSectionTok+0x108>
    ec64:	mvn	r0, #1
    ec68:	b	ed70 <big2_ignoreSectionTok+0x20c>
    ec6c:	add	r4, r4, #4
    ec70:	b	ebb4 <big2_ignoreSectionTok+0x50>
    ec74:	str	r4, [r6]
    ec78:	mov	r0, #0
    ec7c:	b	ed70 <big2_ignoreSectionTok+0x20c>
    ec80:	add	r2, r4, #2
    ec84:	mov	r4, r2
    ec88:	cmp	r2, r5
    ec8c:	bne	ec98 <big2_ignoreSectionTok+0x134>
    ec90:	mvn	r0, #0
    ec94:	b	ed70 <big2_ignoreSectionTok+0x20c>
    ec98:	ldrb	r1, [r4]
    ec9c:	cmp	r1, #0
    eca0:	bne	ebb4 <big2_ignoreSectionTok+0x50>
    eca4:	ldrb	r3, [r4, #1]
    eca8:	cmp	r3, #33	; 0x21
    ecac:	bne	ebb4 <big2_ignoreSectionTok+0x50>
    ecb0:	add	r4, r4, #2
    ecb4:	cmp	r4, r5
    ecb8:	bne	ecc4 <big2_ignoreSectionTok+0x160>
    ecbc:	mvn	r0, #0
    ecc0:	b	ed70 <big2_ignoreSectionTok+0x20c>
    ecc4:	ldrb	ip, [r2, #2]
    ecc8:	cmp	ip, #0
    eccc:	bne	ebb4 <big2_ignoreSectionTok+0x50>
    ecd0:	ldrb	r0, [r2, #3]
    ecd4:	cmp	r0, #91	; 0x5b
    ecd8:	bne	ebb4 <big2_ignoreSectionTok+0x50>
    ecdc:	add	r7, r7, #1
    ece0:	add	r4, r2, #4
    ece4:	b	ebb4 <big2_ignoreSectionTok+0x50>
    ece8:	add	r0, r4, #2
    ecec:	mov	r4, r0
    ecf0:	cmp	r0, r5
    ecf4:	bne	ed00 <big2_ignoreSectionTok+0x19c>
    ecf8:	mvn	r0, #0
    ecfc:	b	ed70 <big2_ignoreSectionTok+0x20c>
    ed00:	ldrb	ip, [r4]
    ed04:	cmp	ip, #0
    ed08:	bne	ebb4 <big2_ignoreSectionTok+0x50>
    ed0c:	ldrb	r3, [r4, #1]
    ed10:	cmp	r3, #93	; 0x5d
    ed14:	bne	ebb4 <big2_ignoreSectionTok+0x50>
    ed18:	add	r4, r4, #2
    ed1c:	cmp	r4, r5
    ed20:	bne	ed2c <big2_ignoreSectionTok+0x1c8>
    ed24:	mvn	r0, #0
    ed28:	b	ed70 <big2_ignoreSectionTok+0x20c>
    ed2c:	ldrb	r1, [r0, #2]
    ed30:	cmp	r1, #0
    ed34:	bne	ebb4 <big2_ignoreSectionTok+0x50>
    ed38:	ldrb	r1, [r0, #3]
    ed3c:	cmp	r1, #62	; 0x3e
    ed40:	bne	ebb4 <big2_ignoreSectionTok+0x50>
    ed44:	add	r4, r0, #4
    ed48:	cmp	r7, #0
    ed4c:	bne	ed5c <big2_ignoreSectionTok+0x1f8>
    ed50:	str	r4, [r6]
    ed54:	mov	r0, #42	; 0x2a
    ed58:	b	ed70 <big2_ignoreSectionTok+0x20c>
    ed5c:	sub	r7, r7, #1
    ed60:	b	ebb4 <big2_ignoreSectionTok+0x50>
    ed64:	add	r4, r4, #2
    ed68:	b	ebb4 <big2_ignoreSectionTok+0x50>
    ed6c:	mvn	r0, #0
    ed70:	ldr	r4, [sp, #8]
    ed74:	ldr	r5, [sp, #12]
    ed78:	ldr	r6, [sp, #16]
    ed7c:	ldr	r7, [sp, #20]
    ed80:	ldr	r8, [sp, #24]
    ed84:	ldr	lr, [sp, #4]
    ed88:	add	sp, sp, #32
    ed8c:	bx	lr

0000ed90 <big2_isPublicId>:
    ed90:	mov	ip, sp
    ed94:	sub	sp, sp, #24
    ed98:	str	ip, [sp]
    ed9c:	str	lr, [sp, #4]
    eda0:	str	r4, [sp, #8]
    eda4:	str	r5, [sp, #12]
    eda8:	str	r6, [sp, #16]
    edac:	str	r7, [sp, #20]
    edb0:	mov	r7, r3
    edb4:	mov	r6, r0
    edb8:	add	r4, r1, #2
    edbc:	sub	r5, r2, #2
    edc0:	cmp	r4, r5
    edc4:	beq	eefc <big2_isPublicId+0x16c>
    edc8:	ldrb	r1, [r4]
    edcc:	cmp	r1, #0
    edd0:	beq	ede8 <big2_isPublicId+0x58>
    edd4:	and	r0, r1, #255	; 0xff
    edd8:	ldrb	ip, [r4, #1]
    eddc:	and	r1, ip, #255	; 0xff
    ede0:	bl	52c8 <unicode_byte_type>
    ede4:	b	edf8 <big2_isPublicId+0x68>
    ede8:	ldrb	ip, [r4, #1]
    edec:	and	r1, ip, #255	; 0xff
    edf0:	add	r2, r6, r1
    edf4:	ldrb	r0, [r2, #76]	; 0x4c
    edf8:	sub	r0, r0, #9
    edfc:	cmp	r0, #27
    ee00:	bcs	eec0 <big2_isPublicId+0x130>
    ee04:	add	pc, pc, r0, lsl #2
    ee08:	nop	{0}
    ee0c:	b	eef4 <big2_isPublicId+0x164>
    ee10:	b	eef4 <big2_isPublicId+0x164>
    ee14:	b	eec0 <big2_isPublicId+0x130>
    ee18:	b	eec0 <big2_isPublicId+0x130>
    ee1c:	b	eef4 <big2_isPublicId+0x164>
    ee20:	b	eef4 <big2_isPublicId+0x164>
    ee24:	b	eef4 <big2_isPublicId+0x164>
    ee28:	b	eef4 <big2_isPublicId+0x164>
    ee2c:	b	eef4 <big2_isPublicId+0x164>
    ee30:	b	eef4 <big2_isPublicId+0x164>
    ee34:	b	eef4 <big2_isPublicId+0x164>
    ee38:	b	eec0 <big2_isPublicId+0x130>
    ee3c:	b	ee78 <big2_isPublicId+0xe8>
    ee40:	b	ee9c <big2_isPublicId+0x10c>
    ee44:	b	eef4 <big2_isPublicId+0x164>
    ee48:	b	eef4 <big2_isPublicId+0x164>
    ee4c:	b	eef4 <big2_isPublicId+0x164>
    ee50:	b	ee9c <big2_isPublicId+0x10c>
    ee54:	b	eef4 <big2_isPublicId+0x164>
    ee58:	b	eec0 <big2_isPublicId+0x130>
    ee5c:	b	eec0 <big2_isPublicId+0x130>
    ee60:	b	eef4 <big2_isPublicId+0x164>
    ee64:	b	eef4 <big2_isPublicId+0x164>
    ee68:	b	eef4 <big2_isPublicId+0x164>
    ee6c:	b	eef4 <big2_isPublicId+0x164>
    ee70:	b	eef4 <big2_isPublicId+0x164>
    ee74:	b	eef4 <big2_isPublicId+0x164>
    ee78:	ldrb	r1, [r4]
    ee7c:	cmp	r1, #0
    ee80:	bne	eef4 <big2_isPublicId+0x164>
    ee84:	ldrb	r2, [r4, #1]
    ee88:	cmp	r2, #9
    ee8c:	bne	eef4 <big2_isPublicId+0x164>
    ee90:	str	r4, [r7]
    ee94:	mov	r0, #0
    ee98:	b	ef00 <big2_isPublicId+0x170>
    ee9c:	ldrb	ip, [r4]
    eea0:	cmp	ip, #0
    eea4:	beq	eeb0 <big2_isPublicId+0x120>
    eea8:	mvn	r3, #0
    eeac:	b	eeb4 <big2_isPublicId+0x124>
    eeb0:	ldrb	r3, [r4, #1]
    eeb4:	bic	r3, r3, #127	; 0x7f
    eeb8:	cmp	r3, #0
    eebc:	beq	eef4 <big2_isPublicId+0x164>
    eec0:	ldrb	r2, [r4]
    eec4:	cmp	r2, #0
    eec8:	beq	eed4 <big2_isPublicId+0x144>
    eecc:	mvn	r0, #0
    eed0:	b	eed8 <big2_isPublicId+0x148>
    eed4:	ldrb	r0, [r4, #1]
    eed8:	cmp	r0, #36	; 0x24
    eedc:	beq	eef4 <big2_isPublicId+0x164>
    eee0:	cmp	r0, #64	; 0x40
    eee4:	beq	eef4 <big2_isPublicId+0x164>
    eee8:	str	r4, [r7]
    eeec:	mov	r0, #0
    eef0:	b	ef00 <big2_isPublicId+0x170>
    eef4:	add	r4, r4, #2
    eef8:	b	edc0 <big2_isPublicId+0x30>
    eefc:	mov	r0, #1
    ef00:	ldr	r4, [sp, #8]
    ef04:	ldr	r5, [sp, #12]
    ef08:	ldr	r6, [sp, #16]
    ef0c:	ldr	r7, [sp, #20]
    ef10:	ldr	lr, [sp, #4]
    ef14:	add	sp, sp, #24
    ef18:	bx	lr

0000ef1c <big2_getAtts>:
    ef1c:	mov	ip, sp
    ef20:	sub	sp, sp, #40	; 0x28
    ef24:	str	ip, [sp]
    ef28:	str	lr, [sp, #4]
    ef2c:	str	r4, [sp, #8]
    ef30:	str	r5, [sp, #12]
    ef34:	str	r6, [sp, #16]
    ef38:	str	r7, [sp, #20]
    ef3c:	str	r8, [sp, #24]
    ef40:	str	r9, [sp, #28]
    ef44:	str	sl, [sp, #32]
    ef48:	mov	r5, r3
    ef4c:	mov	r9, r2
    ef50:	mov	r6, r0
    ef54:	mov	r4, #1
    ef58:	mov	sl, #0
    ef5c:	mov	r8, #0
    ef60:	add	r7, r1, #2
    ef64:	ldrb	r2, [r7]
    ef68:	cmp	r2, #0
    ef6c:	beq	ef84 <big2_getAtts+0x68>
    ef70:	and	r0, r2, #255	; 0xff
    ef74:	ldrb	r1, [r7, #1]
    ef78:	and	r1, r1, #255	; 0xff
    ef7c:	bl	52c8 <unicode_byte_type>
    ef80:	b	ef94 <big2_getAtts+0x78>
    ef84:	ldrb	r2, [r7, #1]
    ef88:	and	r3, r2, #255	; 0xff
    ef8c:	add	r0, r6, r3
    ef90:	ldrb	r0, [r0, #76]	; 0x4c
    ef94:	sub	r0, r0, #3
    ef98:	cmp	r0, #27
    ef9c:	bcs	f2bc <big2_getAtts+0x3a0>
    efa0:	add	pc, pc, r0, lsl #2
    efa4:	nop	{0}
    efa8:	b	f154 <big2_getAtts+0x238>
    efac:	b	f2bc <big2_getAtts+0x3a0>
    efb0:	b	f014 <big2_getAtts+0xf8>
    efb4:	b	f03c <big2_getAtts+0x120>
    efb8:	b	f068 <big2_getAtts+0x14c>
    efbc:	b	f2bc <big2_getAtts+0x3a0>
    efc0:	b	f244 <big2_getAtts+0x328>
    efc4:	b	f244 <big2_getAtts+0x328>
    efc8:	b	f288 <big2_getAtts+0x36c>
    efcc:	b	f0bc <big2_getAtts+0x1a0>
    efd0:	b	f108 <big2_getAtts+0x1ec>
    efd4:	b	f2bc <big2_getAtts+0x3a0>
    efd8:	b	f2bc <big2_getAtts+0x3a0>
    efdc:	b	f2bc <big2_getAtts+0x3a0>
    efe0:	b	f288 <big2_getAtts+0x36c>
    efe4:	b	f2bc <big2_getAtts+0x3a0>
    efe8:	b	f2bc <big2_getAtts+0x3a0>
    efec:	b	f2bc <big2_getAtts+0x3a0>
    eff0:	b	f16c <big2_getAtts+0x250>
    eff4:	b	f094 <big2_getAtts+0x178>
    eff8:	b	f2bc <big2_getAtts+0x3a0>
    effc:	b	f094 <big2_getAtts+0x178>
    f000:	b	f2bc <big2_getAtts+0x3a0>
    f004:	b	f2bc <big2_getAtts+0x3a0>
    f008:	b	f2bc <big2_getAtts+0x3a0>
    f00c:	b	f2bc <big2_getAtts+0x3a0>
    f010:	b	f094 <big2_getAtts+0x178>
    f014:	cmp	r4, #0
    f018:	bne	f2bc <big2_getAtts+0x3a0>
    f01c:	cmp	sl, r9
    f020:	bge	f034 <big2_getAtts+0x118>
    f024:	str	r7, [r5, sl, lsl #4]
    f028:	add	r1, r5, sl, lsl #4
    f02c:	mov	ip, #1
    f030:	strb	ip, [r1, #12]
    f034:	mov	r4, #1
    f038:	b	f2bc <big2_getAtts+0x3a0>
    f03c:	cmp	r4, #0
    f040:	bne	f060 <big2_getAtts+0x144>
    f044:	cmp	sl, r9
    f048:	bge	f05c <big2_getAtts+0x140>
    f04c:	str	r7, [r5, sl, lsl #4]
    f050:	add	r2, r5, sl, lsl #4
    f054:	mov	r1, #1
    f058:	strb	r1, [r2, #12]
    f05c:	mov	r4, #1
    f060:	add	r7, r7, #1
    f064:	b	f2bc <big2_getAtts+0x3a0>
    f068:	cmp	r4, #0
    f06c:	bne	f08c <big2_getAtts+0x170>
    f070:	cmp	sl, r9
    f074:	bge	f088 <big2_getAtts+0x16c>
    f078:	str	r7, [r5, sl, lsl #4]
    f07c:	add	r2, r5, sl, lsl #4
    f080:	mov	r3, #1
    f084:	strb	r3, [r2, #12]
    f088:	mov	r4, #1
    f08c:	add	r7, r7, #2
    f090:	b	f2bc <big2_getAtts+0x3a0>
    f094:	cmp	r4, #0
    f098:	bne	f2bc <big2_getAtts+0x3a0>
    f09c:	cmp	sl, r9
    f0a0:	bge	f0b4 <big2_getAtts+0x198>
    f0a4:	str	r7, [r5, sl, lsl #4]
    f0a8:	add	r1, r5, sl, lsl #4
    f0ac:	mov	r0, #1
    f0b0:	strb	r0, [r1, #12]
    f0b4:	mov	r4, #1
    f0b8:	b	f2bc <big2_getAtts+0x3a0>
    f0bc:	cmp	r4, #2
    f0c0:	beq	f0e4 <big2_getAtts+0x1c8>
    f0c4:	cmp	sl, r9
    f0c8:	bge	f0d8 <big2_getAtts+0x1bc>
    f0cc:	add	r0, r5, sl, lsl #4
    f0d0:	add	r1, r7, #2
    f0d4:	str	r1, [r0, #4]
    f0d8:	mov	r4, #2
    f0dc:	mov	r8, #12
    f0e0:	b	f2bc <big2_getAtts+0x3a0>
    f0e4:	cmp	r8, #12
    f0e8:	bne	f2bc <big2_getAtts+0x3a0>
    f0ec:	mov	r4, #0
    f0f0:	cmp	sl, r9
    f0f4:	bge	f100 <big2_getAtts+0x1e4>
    f0f8:	add	r0, r5, sl, lsl #4
    f0fc:	str	r7, [r0, #8]
    f100:	add	sl, sl, #1
    f104:	b	f2bc <big2_getAtts+0x3a0>
    f108:	cmp	r4, #2
    f10c:	beq	f130 <big2_getAtts+0x214>
    f110:	cmp	sl, r9
    f114:	bge	f124 <big2_getAtts+0x208>
    f118:	add	ip, r5, sl, lsl #4
    f11c:	add	r1, r7, #2
    f120:	str	r1, [ip, #4]
    f124:	mov	r4, #2
    f128:	mov	r8, #13
    f12c:	b	f2bc <big2_getAtts+0x3a0>
    f130:	cmp	r8, #13
    f134:	bne	f2bc <big2_getAtts+0x3a0>
    f138:	mov	r4, #0
    f13c:	cmp	sl, r9
    f140:	bge	f14c <big2_getAtts+0x230>
    f144:	add	r3, r5, sl, lsl #4
    f148:	str	r7, [r3, #8]
    f14c:	add	sl, sl, #1
    f150:	b	f2bc <big2_getAtts+0x3a0>
    f154:	cmp	sl, r9
    f158:	bge	f2bc <big2_getAtts+0x3a0>
    f15c:	add	r1, r5, sl, lsl #4
    f160:	mov	ip, #0
    f164:	strb	ip, [r1, #12]
    f168:	b	f2bc <big2_getAtts+0x3a0>
    f16c:	cmp	r4, #1
    f170:	beq	f23c <big2_getAtts+0x320>
    f174:	cmp	sl, r9
    f178:	movlt	r1, #1
    f17c:	movge	r1, #0
    f180:	mov	r3, #0
    f184:	cmp	r4, #2
    f188:	moveq	r3, r1
    f18c:	movne	r3, r3
    f190:	cmp	r3, #0
    f194:	beq	f2bc <big2_getAtts+0x3a0>
    f198:	add	r0, r5, sl, lsl #4
    f19c:	ldrb	r1, [r0, #12]
    f1a0:	cmp	r1, #0
    f1a4:	beq	f2bc <big2_getAtts+0x3a0>
    f1a8:	ldr	r2, [r0, #4]
    f1ac:	cmp	r7, r2
    f1b0:	beq	f22c <big2_getAtts+0x310>
    f1b4:	ldrb	ip, [r7]
    f1b8:	cmp	ip, #0
    f1bc:	beq	f1c8 <big2_getAtts+0x2ac>
    f1c0:	mvn	ip, #0
    f1c4:	b	f1cc <big2_getAtts+0x2b0>
    f1c8:	ldrb	ip, [r7, #1]
    f1cc:	cmp	ip, #32
    f1d0:	bne	f22c <big2_getAtts+0x310>
    f1d4:	ldrb	r3, [r7, #2]
    f1d8:	cmp	r3, #0
    f1dc:	beq	f1e8 <big2_getAtts+0x2cc>
    f1e0:	mvn	r0, #0
    f1e4:	b	f1ec <big2_getAtts+0x2d0>
    f1e8:	ldrb	r0, [r7, #3]
    f1ec:	cmp	r0, #32
    f1f0:	beq	f22c <big2_getAtts+0x310>
    f1f4:	ldrb	r1, [r7, #2]
    f1f8:	cmp	r1, #0
    f1fc:	beq	f214 <big2_getAtts+0x2f8>
    f200:	and	r0, r1, #255	; 0xff
    f204:	ldrb	r2, [r7, #3]
    f208:	and	r1, r2, #255	; 0xff
    f20c:	bl	52c8 <unicode_byte_type>
    f210:	b	f224 <big2_getAtts+0x308>
    f214:	ldrb	ip, [r7, #3]
    f218:	and	r2, ip, #255	; 0xff
    f21c:	add	r0, r6, r2
    f220:	ldrb	r0, [r0, #76]	; 0x4c
    f224:	cmp	r0, r8
    f228:	bne	f2bc <big2_getAtts+0x3a0>
    f22c:	add	r2, r5, sl, lsl #4
    f230:	mov	r3, #0
    f234:	strb	r3, [r2, #12]
    f238:	b	f2bc <big2_getAtts+0x3a0>
    f23c:	mov	r4, #0
    f240:	b	f2bc <big2_getAtts+0x3a0>
    f244:	cmp	r4, #1
    f248:	beq	f280 <big2_getAtts+0x364>
    f24c:	cmp	sl, r9
    f250:	movlt	r1, #1
    f254:	movge	r1, #0
    f258:	mov	r2, #0
    f25c:	cmp	r4, #2
    f260:	moveq	ip, r1
    f264:	movne	ip, r2
    f268:	cmp	ip, #0
    f26c:	beq	f2bc <big2_getAtts+0x3a0>
    f270:	add	r3, r5, sl, lsl #4
    f274:	mov	ip, #0
    f278:	strb	ip, [r3, #12]
    f27c:	b	f2bc <big2_getAtts+0x3a0>
    f280:	mov	r4, #0
    f284:	b	f2bc <big2_getAtts+0x3a0>
    f288:	cmp	r4, #2
    f28c:	beq	f2bc <big2_getAtts+0x3a0>
    f290:	mov	r0, sl
    f294:	ldr	r4, [sp, #8]
    f298:	ldr	r5, [sp, #12]
    f29c:	ldr	r6, [sp, #16]
    f2a0:	ldr	r7, [sp, #20]
    f2a4:	ldr	r8, [sp, #24]
    f2a8:	ldr	r9, [sp, #28]
    f2ac:	ldr	sl, [sp, #32]
    f2b0:	ldr	lr, [sp, #4]
    f2b4:	add	sp, sp, #40	; 0x28
    f2b8:	bx	lr
    f2bc:	add	r7, r7, #2
    f2c0:	b	ef64 <big2_getAtts+0x48>

0000f2c4 <big2_charRefNumber>:
    f2c4:	mov	ip, sp
    f2c8:	sub	sp, sp, #16
    f2cc:	str	ip, [sp]
    f2d0:	str	lr, [sp, #4]
    f2d4:	str	r4, [sp, #8]
    f2d8:	mov	r0, #0
    f2dc:	add	r4, r1, #4
    f2e0:	ldrb	r3, [r4]
    f2e4:	cmp	r3, #0
    f2e8:	bne	f460 <big2_charRefNumber+0x19c>
    f2ec:	ldrb	r1, [r4, #1]
    f2f0:	cmp	r1, #120	; 0x78
    f2f4:	bne	f460 <big2_charRefNumber+0x19c>
    f2f8:	add	r4, r4, #2
    f2fc:	ldrb	r2, [r4]
    f300:	cmp	r2, #0
    f304:	bne	f314 <big2_charRefNumber+0x50>
    f308:	ldrb	ip, [r4, #1]
    f30c:	cmp	ip, #59	; 0x3b
    f310:	beq	f478 <big2_charRefNumber+0x1b4>
    f314:	ldrb	r1, [r4]
    f318:	cmp	r1, #0
    f31c:	beq	f328 <big2_charRefNumber+0x64>
    f320:	mvn	r1, #0
    f324:	b	f32c <big2_charRefNumber+0x68>
    f328:	ldrb	r1, [r4, #1]
    f32c:	sub	r2, r1, #48	; 0x30
    f330:	cmp	r2, #55	; 0x37
    f334:	bcs	f448 <big2_charRefNumber+0x184>
    f338:	add	pc, pc, r2, lsl #2
    f33c:	nop	{0}
    f340:	b	f41c <big2_charRefNumber+0x158>
    f344:	b	f41c <big2_charRefNumber+0x158>
    f348:	b	f41c <big2_charRefNumber+0x158>
    f34c:	b	f41c <big2_charRefNumber+0x158>
    f350:	b	f41c <big2_charRefNumber+0x158>
    f354:	b	f41c <big2_charRefNumber+0x158>
    f358:	b	f41c <big2_charRefNumber+0x158>
    f35c:	b	f41c <big2_charRefNumber+0x158>
    f360:	b	f41c <big2_charRefNumber+0x158>
    f364:	b	f41c <big2_charRefNumber+0x158>
    f368:	b	f448 <big2_charRefNumber+0x184>
    f36c:	b	f448 <big2_charRefNumber+0x184>
    f370:	b	f448 <big2_charRefNumber+0x184>
    f374:	b	f448 <big2_charRefNumber+0x184>
    f378:	b	f448 <big2_charRefNumber+0x184>
    f37c:	b	f448 <big2_charRefNumber+0x184>
    f380:	b	f448 <big2_charRefNumber+0x184>
    f384:	b	f42c <big2_charRefNumber+0x168>
    f388:	b	f42c <big2_charRefNumber+0x168>
    f38c:	b	f42c <big2_charRefNumber+0x168>
    f390:	b	f42c <big2_charRefNumber+0x168>
    f394:	b	f42c <big2_charRefNumber+0x168>
    f398:	b	f42c <big2_charRefNumber+0x168>
    f39c:	b	f448 <big2_charRefNumber+0x184>
    f3a0:	b	f448 <big2_charRefNumber+0x184>
    f3a4:	b	f448 <big2_charRefNumber+0x184>
    f3a8:	b	f448 <big2_charRefNumber+0x184>
    f3ac:	b	f448 <big2_charRefNumber+0x184>
    f3b0:	b	f448 <big2_charRefNumber+0x184>
    f3b4:	b	f448 <big2_charRefNumber+0x184>
    f3b8:	b	f448 <big2_charRefNumber+0x184>
    f3bc:	b	f448 <big2_charRefNumber+0x184>
    f3c0:	b	f448 <big2_charRefNumber+0x184>
    f3c4:	b	f448 <big2_charRefNumber+0x184>
    f3c8:	b	f448 <big2_charRefNumber+0x184>
    f3cc:	b	f448 <big2_charRefNumber+0x184>
    f3d0:	b	f448 <big2_charRefNumber+0x184>
    f3d4:	b	f448 <big2_charRefNumber+0x184>
    f3d8:	b	f448 <big2_charRefNumber+0x184>
    f3dc:	b	f448 <big2_charRefNumber+0x184>
    f3e0:	b	f448 <big2_charRefNumber+0x184>
    f3e4:	b	f448 <big2_charRefNumber+0x184>
    f3e8:	b	f448 <big2_charRefNumber+0x184>
    f3ec:	b	f448 <big2_charRefNumber+0x184>
    f3f0:	b	f448 <big2_charRefNumber+0x184>
    f3f4:	b	f448 <big2_charRefNumber+0x184>
    f3f8:	b	f448 <big2_charRefNumber+0x184>
    f3fc:	b	f448 <big2_charRefNumber+0x184>
    f400:	b	f448 <big2_charRefNumber+0x184>
    f404:	b	f43c <big2_charRefNumber+0x178>
    f408:	b	f43c <big2_charRefNumber+0x178>
    f40c:	b	f43c <big2_charRefNumber+0x178>
    f410:	b	f43c <big2_charRefNumber+0x178>
    f414:	b	f43c <big2_charRefNumber+0x178>
    f418:	b	f43c <big2_charRefNumber+0x178>
    f41c:	lsl	r2, r0, #4
    f420:	sub	r3, r1, #48	; 0x30
    f424:	orr	r0, r2, r3
    f428:	b	f448 <big2_charRefNumber+0x184>
    f42c:	lsl	ip, r0, #4
    f430:	add	ip, ip, r1
    f434:	sub	r0, ip, #55	; 0x37
    f438:	b	f448 <big2_charRefNumber+0x184>
    f43c:	lsl	r2, r0, #4
    f440:	add	r0, r2, r1
    f444:	sub	r0, r0, #87	; 0x57
    f448:	cmp	r0, #1114112	; 0x110000
    f44c:	blt	f458 <big2_charRefNumber+0x194>
    f450:	mvn	r0, #0
    f454:	b	f4bc <big2_charRefNumber+0x1f8>
    f458:	add	r4, r4, #2
    f45c:	b	f2fc <big2_charRefNumber+0x38>
    f460:	ldrb	ip, [r4]
    f464:	cmp	ip, #0
    f468:	bne	f488 <big2_charRefNumber+0x1c4>
    f46c:	ldrb	r3, [r4, #1]
    f470:	cmp	r3, #59	; 0x3b
    f474:	bne	f488 <big2_charRefNumber+0x1c4>
    f478:	ldr	r4, [sp, #8]
    f47c:	ldr	lr, [sp, #4]
    f480:	add	sp, sp, #16
    f484:	b	105e8 <checkCharRefNumber>
    f488:	ldrb	r3, [r4]
    f48c:	cmp	r3, #0
    f490:	beq	f49c <big2_charRefNumber+0x1d8>
    f494:	mvn	r1, #0
    f498:	b	f4a0 <big2_charRefNumber+0x1dc>
    f49c:	ldrb	r1, [r4, #1]
    f4a0:	lsl	r2, r0, #3
    f4a4:	add	r2, r2, r0, lsl #1
    f4a8:	add	r2, r2, r1
    f4ac:	sub	r0, r2, #48	; 0x30
    f4b0:	cmp	r0, #1114112	; 0x110000
    f4b4:	blt	f4cc <big2_charRefNumber+0x208>
    f4b8:	mvn	r0, #0
    f4bc:	ldr	r4, [sp, #8]
    f4c0:	ldr	lr, [sp, #4]
    f4c4:	add	sp, sp, #16
    f4c8:	bx	lr
    f4cc:	add	r4, r4, #2
    f4d0:	b	f460 <big2_charRefNumber+0x19c>

0000f4d4 <big2_predefinedEntityName>:
    f4d4:	mov	ip, sp
    f4d8:	sub	sp, sp, #8
    f4dc:	str	ip, [sp]
    f4e0:	str	lr, [sp, #4]
    f4e4:	sub	r2, r2, r1
    f4e8:	asr	lr, r2, #31
    f4ec:	add	lr, r2, lr, lsr #31
    f4f0:	asr	r3, lr, #1
    f4f4:	cmp	r3, #2
    f4f8:	beq	f644 <big2_predefinedEntityName+0x170>
    f4fc:	cmp	r3, #3
    f500:	beq	f5ec <big2_predefinedEntityName+0x118>
    f504:	cmp	r3, #4
    f508:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f50c:	ldrb	r0, [r1]
    f510:	cmp	r0, #0
    f514:	beq	f520 <big2_predefinedEntityName+0x4c>
    f518:	mvn	r2, #0
    f51c:	b	f524 <big2_predefinedEntityName+0x50>
    f520:	ldrb	r2, [r1, #1]
    f524:	cmp	r2, #97	; 0x61
    f528:	beq	f590 <big2_predefinedEntityName+0xbc>
    f52c:	cmp	r2, #113	; 0x71
    f530:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f534:	add	r2, r1, #2
    f538:	ldrb	ip, [r2]
    f53c:	cmp	ip, #0
    f540:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f544:	ldrb	r3, [r2, #1]
    f548:	cmp	r3, #117	; 0x75
    f54c:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f550:	add	ip, r2, #2
    f554:	ldrb	r1, [ip]
    f558:	cmp	r1, #0
    f55c:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f560:	ldrb	r3, [ip, #1]
    f564:	cmp	r3, #111	; 0x6f
    f568:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f56c:	add	r2, ip, #2
    f570:	ldrb	r0, [r2]
    f574:	cmp	r0, #0
    f578:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f57c:	ldrb	r0, [r2, #1]
    f580:	cmp	r0, #116	; 0x74
    f584:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f588:	mov	r0, #34	; 0x22
    f58c:	b	f698 <big2_predefinedEntityName+0x1c4>
    f590:	add	r3, r1, #2
    f594:	ldrb	r1, [r3]
    f598:	cmp	r1, #0
    f59c:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f5a0:	ldrb	ip, [r3, #1]
    f5a4:	cmp	ip, #112	; 0x70
    f5a8:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f5ac:	add	r0, r3, #2
    f5b0:	ldrb	ip, [r0]
    f5b4:	cmp	ip, #0
    f5b8:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f5bc:	ldrb	r2, [r0, #1]
    f5c0:	cmp	r2, #111	; 0x6f
    f5c4:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f5c8:	add	r2, r0, #2
    f5cc:	ldrb	r3, [r2]
    f5d0:	cmp	r3, #0
    f5d4:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f5d8:	ldrb	r0, [r2, #1]
    f5dc:	cmp	r0, #115	; 0x73
    f5e0:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f5e4:	mov	r0, #39	; 0x27
    f5e8:	b	f698 <big2_predefinedEntityName+0x1c4>
    f5ec:	ldrb	r0, [r1]
    f5f0:	cmp	r0, #0
    f5f4:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f5f8:	ldrb	r2, [r1, #1]
    f5fc:	cmp	r2, #97	; 0x61
    f600:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f604:	add	r3, r1, #2
    f608:	ldrb	ip, [r3]
    f60c:	cmp	ip, #0
    f610:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f614:	ldrb	r0, [r3, #1]
    f618:	cmp	r0, #109	; 0x6d
    f61c:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f620:	add	ip, r3, #2
    f624:	ldrb	r0, [ip]
    f628:	cmp	r0, #0
    f62c:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f630:	ldrb	r0, [ip, #1]
    f634:	cmp	r0, #112	; 0x70
    f638:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f63c:	mov	r0, #38	; 0x26
    f640:	b	f698 <big2_predefinedEntityName+0x1c4>
    f644:	ldrb	r2, [r1, #2]
    f648:	cmp	r2, #0
    f64c:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f650:	ldrb	r2, [r1, #3]
    f654:	cmp	r2, #116	; 0x74
    f658:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f65c:	ldrb	r0, [r1]
    f660:	cmp	r0, #0
    f664:	beq	f670 <big2_predefinedEntityName+0x19c>
    f668:	mvn	r0, #0
    f66c:	b	f674 <big2_predefinedEntityName+0x1a0>
    f670:	ldrb	r0, [r1, #1]
    f674:	cmp	r0, #103	; 0x67
    f678:	beq	f68c <big2_predefinedEntityName+0x1b8>
    f67c:	cmp	r0, #108	; 0x6c
    f680:	bne	f694 <big2_predefinedEntityName+0x1c0>
    f684:	mov	r0, #60	; 0x3c
    f688:	b	f698 <big2_predefinedEntityName+0x1c4>
    f68c:	mov	r0, #62	; 0x3e
    f690:	b	f698 <big2_predefinedEntityName+0x1c4>
    f694:	mov	r0, #0
    f698:	ldr	lr, [sp, #4]
    f69c:	add	sp, sp, #8
    f6a0:	bx	lr

0000f6a4 <big2_sameName>:
    f6a4:	mov	ip, sp
    f6a8:	sub	sp, sp, #24
    f6ac:	str	ip, [sp]
    f6b0:	str	lr, [sp, #4]
    f6b4:	str	r4, [sp, #8]
    f6b8:	str	r5, [sp, #12]
    f6bc:	str	r6, [sp, #16]
    f6c0:	mov	r6, r2
    f6c4:	mov	r4, r1
    f6c8:	mov	r5, r0
    f6cc:	ldrb	ip, [r4]
    f6d0:	cmp	ip, #0
    f6d4:	beq	f6ec <big2_sameName+0x48>
    f6d8:	and	r0, ip, #255	; 0xff
    f6dc:	ldrb	r1, [r4, #1]
    f6e0:	and	r1, r1, #255	; 0xff
    f6e4:	bl	52c8 <unicode_byte_type>
    f6e8:	b	f6fc <big2_sameName+0x58>
    f6ec:	ldrb	r1, [r4, #1]
    f6f0:	and	ip, r1, #255	; 0xff
    f6f4:	add	r2, r5, ip
    f6f8:	ldrb	r0, [r2, #76]	; 0x4c
    f6fc:	sub	r3, r0, #5
    f700:	cmp	r3, #25
    f704:	bcs	f844 <big2_sameName+0x1a0>
    f708:	add	pc, pc, r3, lsl #2
    f70c:	nop	{0}
    f710:	b	f7c4 <big2_sameName+0x120>
    f714:	b	f79c <big2_sameName+0xf8>
    f718:	b	f774 <big2_sameName+0xd0>
    f71c:	b	f844 <big2_sameName+0x1a0>
    f720:	b	f844 <big2_sameName+0x1a0>
    f724:	b	f844 <big2_sameName+0x1a0>
    f728:	b	f844 <big2_sameName+0x1a0>
    f72c:	b	f844 <big2_sameName+0x1a0>
    f730:	b	f844 <big2_sameName+0x1a0>
    f734:	b	f844 <big2_sameName+0x1a0>
    f738:	b	f844 <big2_sameName+0x1a0>
    f73c:	b	f844 <big2_sameName+0x1a0>
    f740:	b	f844 <big2_sameName+0x1a0>
    f744:	b	f844 <big2_sameName+0x1a0>
    f748:	b	f844 <big2_sameName+0x1a0>
    f74c:	b	f844 <big2_sameName+0x1a0>
    f750:	b	f844 <big2_sameName+0x1a0>
    f754:	b	f804 <big2_sameName+0x160>
    f758:	b	f804 <big2_sameName+0x160>
    f75c:	b	f804 <big2_sameName+0x160>
    f760:	b	f804 <big2_sameName+0x160>
    f764:	b	f804 <big2_sameName+0x160>
    f768:	b	f804 <big2_sameName+0x160>
    f76c:	b	f844 <big2_sameName+0x1a0>
    f770:	b	f804 <big2_sameName+0x160>
    f774:	mov	r1, r4
    f778:	add	r4, r1, #1
    f77c:	mov	r3, r6
    f780:	add	r6, r3, #1
    f784:	ldrb	r0, [r1]
    f788:	ldrb	r1, [r3]
    f78c:	cmp	r0, r1
    f790:	beq	f79c <big2_sameName+0xf8>
    f794:	mov	r0, #0
    f798:	b	f8f8 <big2_sameName+0x254>
    f79c:	mov	r0, r4
    f7a0:	add	r4, r0, #1
    f7a4:	mov	r1, r6
    f7a8:	add	r6, r1, #1
    f7ac:	ldrb	r2, [r0]
    f7b0:	ldrb	r0, [r1]
    f7b4:	cmp	r2, r0
    f7b8:	beq	f7c4 <big2_sameName+0x120>
    f7bc:	mov	r0, #0
    f7c0:	b	f8f8 <big2_sameName+0x254>
    f7c4:	mov	r2, r4
    f7c8:	mov	r0, r6
    f7cc:	ldrb	r3, [r2]
    f7d0:	ldrb	ip, [r0]
    f7d4:	cmp	r3, ip
    f7d8:	beq	f7e4 <big2_sameName+0x140>
    f7dc:	mov	r0, #0
    f7e0:	b	f8f8 <big2_sameName+0x254>
    f7e4:	add	r4, r2, #2
    f7e8:	add	r6, r0, #2
    f7ec:	ldrb	r1, [r2, #1]
    f7f0:	ldrb	r2, [r0, #1]
    f7f4:	cmp	r1, r2
    f7f8:	beq	f6cc <big2_sameName+0x28>
    f7fc:	mov	r0, #0
    f800:	b	f8f8 <big2_sameName+0x254>
    f804:	mov	ip, r6
    f808:	mov	r3, r4
    f80c:	ldrb	r0, [ip]
    f810:	ldrb	r1, [r3]
    f814:	cmp	r0, r1
    f818:	beq	f824 <big2_sameName+0x180>
    f81c:	mov	r0, #0
    f820:	b	f8f8 <big2_sameName+0x254>
    f824:	add	r6, ip, #2
    f828:	add	r4, r3, #2
    f82c:	ldrb	r1, [ip, #1]
    f830:	ldrb	r2, [r3, #1]
    f834:	cmp	r1, r2
    f838:	beq	f6cc <big2_sameName+0x28>
    f83c:	mov	r0, #0
    f840:	b	f8f8 <big2_sameName+0x254>
    f844:	ldrb	r2, [r6]
    f848:	cmp	r2, #0
    f84c:	beq	f864 <big2_sameName+0x1c0>
    f850:	and	r0, r2, #255	; 0xff
    f854:	ldrb	r2, [r6, #1]
    f858:	and	r1, r2, #255	; 0xff
    f85c:	bl	52c8 <unicode_byte_type>
    f860:	b	f874 <big2_sameName+0x1d0>
    f864:	ldrb	r3, [r6, #1]
    f868:	and	ip, r3, #255	; 0xff
    f86c:	add	r0, r5, ip
    f870:	ldrb	r0, [r0, #76]	; 0x4c
    f874:	sub	r0, r0, #5
    f878:	cmp	r0, #25
    f87c:	bcs	f8f4 <big2_sameName+0x250>
    f880:	add	pc, pc, r0, lsl #2
    f884:	nop	{0}
    f888:	b	f8ec <big2_sameName+0x248>
    f88c:	b	f8ec <big2_sameName+0x248>
    f890:	b	f8ec <big2_sameName+0x248>
    f894:	b	f8f4 <big2_sameName+0x250>
    f898:	b	f8f4 <big2_sameName+0x250>
    f89c:	b	f8f4 <big2_sameName+0x250>
    f8a0:	b	f8f4 <big2_sameName+0x250>
    f8a4:	b	f8f4 <big2_sameName+0x250>
    f8a8:	b	f8f4 <big2_sameName+0x250>
    f8ac:	b	f8f4 <big2_sameName+0x250>
    f8b0:	b	f8f4 <big2_sameName+0x250>
    f8b4:	b	f8f4 <big2_sameName+0x250>
    f8b8:	b	f8f4 <big2_sameName+0x250>
    f8bc:	b	f8f4 <big2_sameName+0x250>
    f8c0:	b	f8f4 <big2_sameName+0x250>
    f8c4:	b	f8f4 <big2_sameName+0x250>
    f8c8:	b	f8f4 <big2_sameName+0x250>
    f8cc:	b	f8ec <big2_sameName+0x248>
    f8d0:	b	f8ec <big2_sameName+0x248>
    f8d4:	b	f8ec <big2_sameName+0x248>
    f8d8:	b	f8ec <big2_sameName+0x248>
    f8dc:	b	f8ec <big2_sameName+0x248>
    f8e0:	b	f8ec <big2_sameName+0x248>
    f8e4:	b	f8f4 <big2_sameName+0x250>
    f8e8:	b	f8ec <big2_sameName+0x248>
    f8ec:	mov	r0, #0
    f8f0:	b	f8f8 <big2_sameName+0x254>
    f8f4:	mov	r0, #1
    f8f8:	ldr	r4, [sp, #8]
    f8fc:	ldr	r5, [sp, #12]
    f900:	ldr	r6, [sp, #16]
    f904:	ldr	lr, [sp, #4]
    f908:	add	sp, sp, #24
    f90c:	bx	lr

0000f910 <big2_nameMatchesAscii>:
    f910:	mov	ip, sp
    f914:	sub	sp, sp, #8
    f918:	str	ip, [sp]
    f91c:	str	lr, [sp, #4]
    f920:	ldrb	r0, [r3]
    f924:	cmp	r0, #0
    f928:	beq	f968 <big2_nameMatchesAscii+0x58>
    f92c:	cmp	r1, r2
    f930:	bne	f93c <big2_nameMatchesAscii+0x2c>
    f934:	mov	r0, #0
    f938:	b	f974 <big2_nameMatchesAscii+0x64>
    f93c:	ldrb	ip, [r1]
    f940:	cmp	ip, #0
    f944:	bne	f960 <big2_nameMatchesAscii+0x50>
    f948:	ldrb	ip, [r1, #1]
    f94c:	cmp	ip, r0
    f950:	bne	f960 <big2_nameMatchesAscii+0x50>
    f954:	add	r1, r1, #2
    f958:	add	r3, r3, #1
    f95c:	b	f920 <big2_nameMatchesAscii+0x10>
    f960:	mov	r0, #0
    f964:	b	f974 <big2_nameMatchesAscii+0x64>
    f968:	cmp	r1, r2
    f96c:	moveq	r0, #1
    f970:	movne	r0, #0
    f974:	ldr	lr, [sp, #4]
    f978:	add	sp, sp, #8
    f97c:	bx	lr

0000f980 <big2_nameLength>:
    f980:	mov	ip, sp
    f984:	sub	sp, sp, #24
    f988:	str	ip, [sp]
    f98c:	str	lr, [sp, #4]
    f990:	str	r4, [sp, #8]
    f994:	str	r5, [sp, #12]
    f998:	str	r6, [sp, #16]
    f99c:	mov	r4, r1
    f9a0:	mov	r5, r0
    f9a4:	mov	r6, r4
    f9a8:	ldrb	r0, [r4]
    f9ac:	cmp	r0, #0
    f9b0:	beq	f9c8 <big2_nameLength+0x48>
    f9b4:	and	r0, r0, #255	; 0xff
    f9b8:	ldrb	r2, [r4, #1]
    f9bc:	and	r1, r2, #255	; 0xff
    f9c0:	bl	52c8 <unicode_byte_type>
    f9c4:	b	f9d8 <big2_nameLength+0x58>
    f9c8:	ldrb	r1, [r4, #1]
    f9cc:	and	r1, r1, #255	; 0xff
    f9d0:	add	r2, r5, r1
    f9d4:	ldrb	r0, [r2, #76]	; 0x4c
    f9d8:	sub	ip, r0, #5
    f9dc:	cmp	ip, #25
    f9e0:	bcs	fa70 <big2_nameLength+0xf0>
    f9e4:	add	pc, pc, ip, lsl #2
    f9e8:	nop	{0}
    f9ec:	b	fa50 <big2_nameLength+0xd0>
    f9f0:	b	fa58 <big2_nameLength+0xd8>
    f9f4:	b	fa60 <big2_nameLength+0xe0>
    f9f8:	b	fa70 <big2_nameLength+0xf0>
    f9fc:	b	fa70 <big2_nameLength+0xf0>
    fa00:	b	fa70 <big2_nameLength+0xf0>
    fa04:	b	fa70 <big2_nameLength+0xf0>
    fa08:	b	fa70 <big2_nameLength+0xf0>
    fa0c:	b	fa70 <big2_nameLength+0xf0>
    fa10:	b	fa70 <big2_nameLength+0xf0>
    fa14:	b	fa70 <big2_nameLength+0xf0>
    fa18:	b	fa70 <big2_nameLength+0xf0>
    fa1c:	b	fa70 <big2_nameLength+0xf0>
    fa20:	b	fa70 <big2_nameLength+0xf0>
    fa24:	b	fa70 <big2_nameLength+0xf0>
    fa28:	b	fa70 <big2_nameLength+0xf0>
    fa2c:	b	fa70 <big2_nameLength+0xf0>
    fa30:	b	fa68 <big2_nameLength+0xe8>
    fa34:	b	fa68 <big2_nameLength+0xe8>
    fa38:	b	fa68 <big2_nameLength+0xe8>
    fa3c:	b	fa68 <big2_nameLength+0xe8>
    fa40:	b	fa68 <big2_nameLength+0xe8>
    fa44:	b	fa68 <big2_nameLength+0xe8>
    fa48:	b	fa70 <big2_nameLength+0xf0>
    fa4c:	b	fa68 <big2_nameLength+0xe8>
    fa50:	add	r4, r4, #2
    fa54:	b	f9a8 <big2_nameLength+0x28>
    fa58:	add	r4, r4, #3
    fa5c:	b	f9a8 <big2_nameLength+0x28>
    fa60:	add	r4, r4, #4
    fa64:	b	f9a8 <big2_nameLength+0x28>
    fa68:	add	r4, r4, #2
    fa6c:	b	f9a8 <big2_nameLength+0x28>
    fa70:	sub	r0, r4, r6
    fa74:	ldr	r4, [sp, #8]
    fa78:	ldr	r5, [sp, #12]
    fa7c:	ldr	r6, [sp, #16]
    fa80:	ldr	lr, [sp, #4]
    fa84:	add	sp, sp, #24
    fa88:	bx	lr

0000fa8c <big2_skipS>:
    fa8c:	mov	ip, sp
    fa90:	sub	sp, sp, #16
    fa94:	str	ip, [sp]
    fa98:	str	lr, [sp, #4]
    fa9c:	str	r4, [sp, #8]
    faa0:	str	r5, [sp, #12]
    faa4:	mov	r4, r1
    faa8:	mov	r5, r0
    faac:	ldrb	r0, [r4]
    fab0:	cmp	r0, #0
    fab4:	beq	facc <big2_skipS+0x40>
    fab8:	and	r0, r0, #255	; 0xff
    fabc:	ldrb	r1, [r4, #1]
    fac0:	and	r1, r1, #255	; 0xff
    fac4:	bl	52c8 <unicode_byte_type>
    fac8:	b	fadc <big2_skipS+0x50>
    facc:	ldrb	r2, [r4, #1]
    fad0:	and	r1, r2, #255	; 0xff
    fad4:	add	r3, r5, r1
    fad8:	ldrb	r0, [r3, #76]	; 0x4c
    fadc:	cmp	r0, #9
    fae0:	beq	fb0c <big2_skipS+0x80>
    fae4:	cmp	r0, #10
    fae8:	beq	fb0c <big2_skipS+0x80>
    faec:	cmp	r0, #21
    faf0:	beq	fb0c <big2_skipS+0x80>
    faf4:	mov	r0, r4
    faf8:	ldr	r4, [sp, #8]
    fafc:	ldr	r5, [sp, #12]
    fb00:	ldr	lr, [sp, #4]
    fb04:	add	sp, sp, #16
    fb08:	bx	lr
    fb0c:	add	r4, r4, #2
    fb10:	b	faac <big2_skipS+0x20>

0000fb14 <big2_updatePosition>:
    fb14:	mov	ip, sp
    fb18:	sub	sp, sp, #24
    fb1c:	str	ip, [sp]
    fb20:	str	lr, [sp, #4]
    fb24:	str	r4, [sp, #8]
    fb28:	str	r5, [sp, #12]
    fb2c:	str	r6, [sp, #16]
    fb30:	str	r7, [sp, #20]
    fb34:	mov	r5, r3
    fb38:	mov	r6, r2
    fb3c:	mov	r4, r1
    fb40:	mov	r7, r0
    fb44:	cmp	r4, r6
    fb48:	bcs	fcbc <big2_updatePosition+0x1a8>
    fb4c:	ldrb	r0, [r4]
    fb50:	cmp	r0, #0
    fb54:	beq	fb6c <big2_updatePosition+0x58>
    fb58:	and	r0, r0, #255	; 0xff
    fb5c:	ldrb	r3, [r4, #1]
    fb60:	and	r1, r3, #255	; 0xff
    fb64:	bl	52c8 <unicode_byte_type>
    fb68:	b	fb7c <big2_updatePosition+0x68>
    fb6c:	ldrb	r1, [r4, #1]
    fb70:	and	r1, r1, #255	; 0xff
    fb74:	add	r2, r7, r1
    fb78:	ldrb	r0, [r2, #76]	; 0x4c
    fb7c:	cmp	r0, #7
    fb80:	bcs	fba4 <big2_updatePosition+0x90>
    fb84:	cmp	r0, #5
    fb88:	beq	fb9c <big2_updatePosition+0x88>
    fb8c:	cmp	r0, #6
    fb90:	bne	fbf8 <big2_updatePosition+0xe4>
    fb94:	add	r4, r4, #3
    fb98:	b	fc98 <big2_updatePosition+0x184>
    fb9c:	add	r4, r4, #2
    fba0:	b	fc98 <big2_updatePosition+0x184>
    fba4:	cmp	r0, #7
    fba8:	beq	fc94 <big2_updatePosition+0x180>
    fbac:	cmp	r0, #9
    fbb0:	beq	fc00 <big2_updatePosition+0xec>
    fbb4:	cmp	r0, #10
    fbb8:	bne	fbf8 <big2_updatePosition+0xe4>
    fbbc:	mvn	r1, #0
    fbc0:	mvn	r0, #0
    fbc4:	str	r0, [r5, #8]
    fbc8:	str	r1, [r5, #12]
    fbcc:	ldr	r0, [r5]
    fbd0:	ldr	r1, [r5, #4]
    fbd4:	mov	ip, #0
    fbd8:	mov	r3, #1
    fbdc:	adds	lr, r0, r3
    fbe0:	adc	r1, r1, ip
    fbe4:	mov	ip, lr
    fbe8:	str	ip, [r5]
    fbec:	str	r1, [r5, #4]
    fbf0:	add	r4, r4, #2
    fbf4:	b	fc98 <big2_updatePosition+0x184>
    fbf8:	add	r4, r4, #2
    fbfc:	b	fc98 <big2_updatePosition+0x184>
    fc00:	ldr	ip, [r5]
    fc04:	ldr	r0, [r5, #4]
    fc08:	mov	r2, #0
    fc0c:	mov	r1, #1
    fc10:	adds	ip, ip, r1
    fc14:	adc	r0, r0, r2
    fc18:	str	ip, [r5]
    fc1c:	str	r0, [r5, #4]
    fc20:	add	r4, r4, #2
    fc24:	cmp	r4, r6
    fc28:	beq	fc6c <big2_updatePosition+0x158>
    fc2c:	ldrb	ip, [r4]
    fc30:	cmp	ip, #0
    fc34:	beq	fc4c <big2_updatePosition+0x138>
    fc38:	and	r0, ip, #255	; 0xff
    fc3c:	ldrb	r1, [r4, #1]
    fc40:	and	r1, r1, #255	; 0xff
    fc44:	bl	52c8 <unicode_byte_type>
    fc48:	b	fc5c <big2_updatePosition+0x148>
    fc4c:	ldrb	r0, [r4, #1]
    fc50:	and	r2, r0, #255	; 0xff
    fc54:	add	r3, r7, r2
    fc58:	ldrb	r0, [r3, #76]	; 0x4c
    fc5c:	cmp	r0, #10
    fc60:	moveq	r3, #1
    fc64:	movne	r3, #0
    fc68:	b	fc70 <big2_updatePosition+0x15c>
    fc6c:	mov	r3, #0
    fc70:	add	r2, r4, #2
    fc74:	cmp	r3, #0
    fc78:	movne	r4, r2
    fc7c:	moveq	r4, r4
    fc80:	mvn	r3, #0
    fc84:	mvn	r2, #0
    fc88:	str	r2, [r5, #8]
    fc8c:	str	r3, [r5, #12]
    fc90:	b	fc98 <big2_updatePosition+0x184>
    fc94:	add	r4, r4, #4
    fc98:	ldr	r2, [r5, #8]
    fc9c:	ldr	r3, [r5, #12]
    fca0:	mov	r1, #0
    fca4:	mov	r0, #1
    fca8:	adds	r2, r2, r0
    fcac:	adc	ip, r3, r1
    fcb0:	str	r2, [r5, #8]
    fcb4:	str	ip, [r5, #12]
    fcb8:	b	fb44 <big2_updatePosition+0x30>
    fcbc:	ldr	r4, [sp, #8]
    fcc0:	ldr	r5, [sp, #12]
    fcc4:	ldr	r6, [sp, #16]
    fcc8:	ldr	r7, [sp, #20]
    fccc:	ldr	lr, [sp, #4]
    fcd0:	add	sp, sp, #24
    fcd4:	bx	lr

0000fcd8 <streqci>:
    fcd8:	mov	ip, sp
    fcdc:	sub	sp, sp, #16
    fce0:	str	ip, [sp]
    fce4:	str	lr, [sp, #4]
    fce8:	str	r4, [sp, #8]
    fcec:	str	r5, [sp, #12]
    fcf0:	mov	r2, r0
    fcf4:	add	r0, r2, #1
    fcf8:	ldrb	r2, [r2]
    fcfc:	and	r3, r2, #255	; 0xff
    fd00:	mov	r2, r1
    fd04:	add	r1, r2, #1
    fd08:	ldrb	r2, [r2]
    fd0c:	and	r5, r2, #255	; 0xff
    fd10:	cmp	r3, #122	; 0x7a
    fd14:	movle	r2, #1
    fd18:	movgt	r2, #0
    fd1c:	mov	ip, #0
    fd20:	cmp	r3, #97	; 0x61
    fd24:	movge	r2, r2
    fd28:	movlt	r2, ip
    fd2c:	sub	ip, r3, #32
    fd30:	and	ip, ip, #255	; 0xff
    fd34:	cmp	r2, #0
    fd38:	movne	r4, ip
    fd3c:	moveq	r4, r3
    fd40:	cmp	r5, #122	; 0x7a
    fd44:	movle	r3, #1
    fd48:	movgt	r3, #0
    fd4c:	mov	r2, #0
    fd50:	cmp	r5, #97	; 0x61
    fd54:	movge	ip, r3
    fd58:	movlt	ip, r2
    fd5c:	sub	r2, r5, #32
    fd60:	and	r2, r2, #255	; 0xff
    fd64:	cmp	ip, #0
    fd68:	movne	r2, r2
    fd6c:	moveq	r2, r5
    fd70:	cmp	r4, r2
    fd74:	beq	fd80 <streqci+0xa8>
    fd78:	mov	r0, #0
    fd7c:	b	fd8c <streqci+0xb4>
    fd80:	cmp	r4, #0
    fd84:	bne	fcf0 <streqci+0x18>
    fd88:	mov	r0, #1
    fd8c:	ldr	r4, [sp, #8]
    fd90:	ldr	r5, [sp, #12]
    fd94:	ldr	lr, [sp, #4]
    fd98:	add	sp, sp, #16
    fd9c:	bx	lr

0000fda0 <initUpdatePosition>:
    fda0:	mov	ip, sp
    fda4:	sub	sp, sp, #8
    fda8:	str	ip, [sp]
    fdac:	str	lr, [sp, #4]
    fdb0:	ldr	r0, [pc, #8]	; fdc0 <initUpdatePosition+0x20>
    fdb4:	ldr	lr, [sp, #4]
    fdb8:	add	sp, sp, #8
    fdbc:	b	4da8 <normal_updatePosition>
    fdc0:	.word	0x00000878

0000fdc4 <toAscii>:
    fdc4:	mov	ip, sp
    fdc8:	sub	sp, sp, #40	; 0x28
    fdcc:	str	ip, [sp, #4]
    fdd0:	str	lr, [sp, #8]
    fdd4:	str	r4, [sp, #16]
    fdd8:	str	r5, [sp, #20]
    fddc:	str	r1, [sp, #32]
    fde0:	add	r3, sp, #24
    fde4:	str	r3, [sp, #28]
    fde8:	ldr	r5, [r0, #60]	; 0x3c
    fdec:	add	r1, sp, #32
    fdf0:	add	r3, sp, #28
    fdf4:	add	r4, sp, #25
    fdf8:	str	r4, [sp]
    fdfc:	blx	r5
    fe00:	ldr	ip, [sp, #28]
    fe04:	add	r1, sp, #24
    fe08:	cmp	ip, r1
    fe0c:	beq	fe18 <toAscii+0x54>
    fe10:	ldrb	r0, [sp, #24]
    fe14:	b	fe1c <toAscii+0x58>
    fe18:	mvn	r0, #0
    fe1c:	ldr	r4, [sp, #16]
    fe20:	ldr	r5, [sp, #20]
    fe24:	ldr	lr, [sp, #8]
    fe28:	add	sp, sp, #40	; 0x28
    fe2c:	bx	lr

0000fe30 <isSpace>:
    fe30:	mov	ip, sp
    fe34:	sub	sp, sp, #8
    fe38:	str	ip, [sp]
    fe3c:	str	lr, [sp, #4]
    fe40:	cmp	r0, #13
    fe44:	bcs	fe5c <isSpace+0x2c>
    fe48:	cmp	r0, #9
    fe4c:	beq	fe74 <isSpace+0x44>
    fe50:	cmp	r0, #10
    fe54:	beq	fe74 <isSpace+0x44>
    fe58:	b	fe6c <isSpace+0x3c>
    fe5c:	cmp	r0, #13
    fe60:	beq	fe74 <isSpace+0x44>
    fe64:	cmp	r0, #32
    fe68:	beq	fe74 <isSpace+0x44>
    fe6c:	mov	r0, #0
    fe70:	b	fe78 <isSpace+0x48>
    fe74:	mov	r0, #1
    fe78:	ldr	lr, [sp, #4]
    fe7c:	add	sp, sp, #8
    fe80:	bx	lr

0000fe84 <parsePseudoAttribute>:
    fe84:	mov	ip, sp
    fe88:	sub	sp, sp, #40	; 0x28
    fe8c:	str	ip, [sp]
    fe90:	str	lr, [sp, #4]
    fe94:	str	r4, [sp, #8]
    fe98:	str	r5, [sp, #12]
    fe9c:	str	r6, [sp, #16]
    fea0:	str	r7, [sp, #20]
    fea4:	str	r8, [sp, #24]
    fea8:	str	r9, [sp, #28]
    feac:	str	sl, [sp, #32]
    feb0:	ldr	r8, [ip, #8]
    feb4:	ldr	r9, [ip, #4]
    feb8:	ldr	r7, [ip]
    febc:	mov	sl, r3
    fec0:	mov	r4, r2
    fec4:	mov	r5, r1
    fec8:	mov	r6, r0
    fecc:	cmp	r5, r4
    fed0:	bne	fee4 <parsePseudoAttribute+0x60>
    fed4:	mov	r1, #0
    fed8:	str	r1, [sl]
    fedc:	mov	r0, #1
    fee0:	b	10184 <parsePseudoAttribute+0x300>
    fee4:	mov	r2, r4
    fee8:	mov	r1, r5
    feec:	mov	r0, r6
    fef0:	bl	fdc4 <toAscii>
    fef4:	bl	fe30 <isSpace>
    fef8:	cmp	r0, #0
    fefc:	bne	ff0c <parsePseudoAttribute+0x88>
    ff00:	str	r5, [r8]
    ff04:	mov	r0, #0
    ff08:	b	10184 <parsePseudoAttribute+0x300>
    ff0c:	ldr	ip, [r6, #68]	; 0x44
    ff10:	add	r5, r5, ip
    ff14:	mov	r2, r4
    ff18:	mov	r1, r5
    ff1c:	mov	r0, r6
    ff20:	bl	fdc4 <toAscii>
    ff24:	bl	fe30 <isSpace>
    ff28:	cmp	r0, #0
    ff2c:	bne	ff0c <parsePseudoAttribute+0x88>
    ff30:	cmp	r5, r4
    ff34:	bne	ff48 <parsePseudoAttribute+0xc4>
    ff38:	mov	ip, #0
    ff3c:	str	ip, [sl]
    ff40:	mov	r0, #1
    ff44:	b	10184 <parsePseudoAttribute+0x300>
    ff48:	str	r5, [sl]
    ff4c:	mov	r2, r4
    ff50:	mov	r1, r5
    ff54:	mov	r0, r6
    ff58:	bl	fdc4 <toAscii>
    ff5c:	cmn	r0, #1
    ff60:	bne	ff70 <parsePseudoAttribute+0xec>
    ff64:	str	r5, [r8]
    ff68:	mov	r0, #0
    ff6c:	b	10184 <parsePseudoAttribute+0x300>
    ff70:	cmp	r0, #61	; 0x3d
    ff74:	bne	ff80 <parsePseudoAttribute+0xfc>
    ff78:	str	r5, [r7]
    ff7c:	b	ffd0 <parsePseudoAttribute+0x14c>
    ff80:	bl	fe30 <isSpace>
    ff84:	cmp	r0, #0
    ff88:	beq	101ac <parsePseudoAttribute+0x328>
    ff8c:	str	r5, [r7]
    ff90:	ldr	r1, [r6, #68]	; 0x44
    ff94:	add	r5, r5, r1
    ff98:	mov	r2, r4
    ff9c:	mov	r1, r5
    ffa0:	mov	r0, r6
    ffa4:	bl	fdc4 <toAscii>
    ffa8:	mov	r7, r0
    ffac:	mov	r0, r7
    ffb0:	bl	fe30 <isSpace>
    ffb4:	cmp	r0, #0
    ffb8:	bne	ff90 <parsePseudoAttribute+0x10c>
    ffbc:	cmp	r7, #61	; 0x3d
    ffc0:	beq	ffd0 <parsePseudoAttribute+0x14c>
    ffc4:	str	r5, [r8]
    ffc8:	mov	r0, #0
    ffcc:	b	10184 <parsePseudoAttribute+0x300>
    ffd0:	ldr	r2, [sl]
    ffd4:	cmp	r5, r2
    ffd8:	bne	ffe8 <parsePseudoAttribute+0x164>
    ffdc:	str	r5, [r8]
    ffe0:	mov	r0, #0
    ffe4:	b	10184 <parsePseudoAttribute+0x300>
    ffe8:	ldr	r2, [r6, #68]	; 0x44
    ffec:	add	r7, r5, r2
    fff0:	mov	r2, r4
    fff4:	mov	r1, r7
    fff8:	mov	r0, r6
    fffc:	bl	fdc4 <toAscii>
   10000:	mov	r5, r0
   10004:	mov	r0, r5
   10008:	bl	fe30 <isSpace>
   1000c:	cmp	r0, #0
   10010:	beq	10034 <parsePseudoAttribute+0x1b0>
   10014:	ldr	ip, [r6, #68]	; 0x44
   10018:	add	r7, r7, ip
   1001c:	mov	r2, r4
   10020:	mov	r1, r7
   10024:	mov	r0, r6
   10028:	bl	fdc4 <toAscii>
   1002c:	mov	r5, r0
   10030:	b	10004 <parsePseudoAttribute+0x180>
   10034:	cmp	r5, #39	; 0x27
   10038:	movne	r2, #1
   1003c:	moveq	r2, #0
   10040:	mov	r3, #0
   10044:	cmp	r5, #34	; 0x22
   10048:	movne	r3, r2
   1004c:	moveq	r3, r3
   10050:	cmp	r3, #0
   10054:	beq	10064 <parsePseudoAttribute+0x1e0>
   10058:	str	r7, [r8]
   1005c:	mov	r0, #0
   10060:	b	10184 <parsePseudoAttribute+0x300>
   10064:	and	r5, r5, #255	; 0xff
   10068:	ldr	ip, [r6, #68]	; 0x44
   1006c:	add	r7, r7, ip
   10070:	str	r7, [r9]
   10074:	mov	r2, r4
   10078:	mov	r1, r7
   1007c:	mov	r0, r6
   10080:	bl	fdc4 <toAscii>
   10084:	cmp	r0, r5
   10088:	beq	10174 <parsePseudoAttribute+0x2f0>
   1008c:	cmp	r0, #122	; 0x7a
   10090:	movle	r1, #1
   10094:	movgt	r1, #0
   10098:	mov	r2, #0
   1009c:	cmp	r0, #97	; 0x61
   100a0:	movge	r1, r1
   100a4:	movlt	r1, r2
   100a8:	cmp	r1, #0
   100ac:	bne	100fc <parsePseudoAttribute+0x278>
   100b0:	cmp	r0, #90	; 0x5a
   100b4:	movle	r3, #1
   100b8:	movgt	r3, #0
   100bc:	mov	r1, #0
   100c0:	cmp	r0, #65	; 0x41
   100c4:	movge	r2, r3
   100c8:	movlt	r2, r1
   100cc:	eor	r1, r2, #1
   100d0:	cmp	r1, #0
   100d4:	beq	100fc <parsePseudoAttribute+0x278>
   100d8:	cmp	r0, #57	; 0x39
   100dc:	movle	r3, #1
   100e0:	movgt	r3, #0
   100e4:	mov	r2, #0
   100e8:	cmp	r0, #48	; 0x30
   100ec:	movge	r1, r3
   100f0:	movlt	r1, r2
   100f4:	eor	ip, r1, #1
   100f8:	b	10100 <parsePseudoAttribute+0x27c>
   100fc:	mov	ip, #0
   10100:	cmp	r0, #46	; 0x2e
   10104:	movne	r2, #1
   10108:	moveq	r2, #0
   1010c:	mov	r3, #0
   10110:	cmp	ip, #0
   10114:	movne	ip, r2
   10118:	moveq	ip, r3
   1011c:	cmp	r0, #45	; 0x2d
   10120:	movne	r1, #1
   10124:	moveq	r1, #0
   10128:	mov	r3, #0
   1012c:	cmp	ip, #0
   10130:	movne	ip, r1
   10134:	moveq	ip, r3
   10138:	cmp	r0, #95	; 0x5f
   1013c:	movne	r3, #1
   10140:	moveq	r3, #0
   10144:	mov	r1, #0
   10148:	cmp	ip, #0
   1014c:	movne	r0, r3
   10150:	moveq	r0, r1
   10154:	cmp	r0, #0
   10158:	beq	10168 <parsePseudoAttribute+0x2e4>
   1015c:	str	r7, [r8]
   10160:	mov	r0, #0
   10164:	b	10184 <parsePseudoAttribute+0x300>
   10168:	ldr	r2, [r6, #68]	; 0x44
   1016c:	add	r7, r7, r2
   10170:	b	10074 <parsePseudoAttribute+0x1f0>
   10174:	ldr	r0, [r6, #68]	; 0x44
   10178:	add	r3, r7, r0
   1017c:	str	r3, [r8]
   10180:	mov	r0, #1
   10184:	ldr	r4, [sp, #8]
   10188:	ldr	r5, [sp, #12]
   1018c:	ldr	r6, [sp, #16]
   10190:	ldr	r7, [sp, #20]
   10194:	ldr	r8, [sp, #24]
   10198:	ldr	r9, [sp, #28]
   1019c:	ldr	sl, [sp, #32]
   101a0:	ldr	lr, [sp, #4]
   101a4:	add	sp, sp, #40	; 0x28
   101a8:	bx	lr
   101ac:	ldr	r0, [r6, #68]	; 0x44
   101b0:	add	r5, r5, r0
   101b4:	b	ff4c <parsePseudoAttribute+0xc8>

000101b8 <doParseXmlDecl>:
   101b8:	mov	ip, sp
   101bc:	sub	sp, sp, #88	; 0x58
   101c0:	str	ip, [sp, #12]
   101c4:	str	lr, [sp, #16]
   101c8:	str	r4, [sp, #36]	; 0x24
   101cc:	str	r5, [sp, #40]	; 0x28
   101d0:	str	r6, [sp, #44]	; 0x2c
   101d4:	str	r7, [sp, #48]	; 0x30
   101d8:	str	r8, [sp, #52]	; 0x34
   101dc:	str	r9, [sp, #56]	; 0x38
   101e0:	str	sl, [sp, #60]	; 0x3c
   101e4:	str	fp, [sp, #64]	; 0x40
   101e8:	ldr	r8, [ip, #24]
   101ec:	ldr	ip, [ip, #20]
   101f0:	str	ip, [sp, #24]
   101f4:	ldr	ip, [sp, #12]
   101f8:	ldr	ip, [ip, #16]
   101fc:	str	ip, [sp, #32]
   10200:	ldr	ip, [sp, #12]
   10204:	ldr	sl, [ip, #12]
   10208:	ldr	r7, [ip, #8]
   1020c:	ldr	r9, [ip, #4]
   10210:	str	r0, [sp, #28]
   10214:	mov	r0, r3
   10218:	ldr	r3, [ip]
   1021c:	mov	r5, r2
   10220:	mov	r4, r1
   10224:	str	r0, [sp, #72]	; 0x48
   10228:	mov	r1, #0
   1022c:	str	r1, [sp, #76]	; 0x4c
   10230:	mov	ip, #0
   10234:	str	ip, [sp, #80]	; 0x50
   10238:	mov	r1, #0
   1023c:	str	r1, [sp, #84]	; 0x54
   10240:	ldr	r2, [r5, #68]	; 0x44
   10244:	add	ip, r2, r2, lsl #2
   10248:	add	r1, r0, ip
   1024c:	str	r1, [sp, #72]	; 0x48
   10250:	sub	r6, r3, r2, lsl #1
   10254:	add	r3, sp, #80	; 0x50
   10258:	add	fp, sp, #84	; 0x54
   1025c:	add	r2, sp, #76	; 0x4c
   10260:	add	r0, sp, #72	; 0x48
   10264:	str	r0, [sp, #8]
   10268:	str	r2, [sp, #4]
   1026c:	str	fp, [sp]
   10270:	mov	r2, r6
   10274:	mov	r0, r5
   10278:	bl	fe84 <parsePseudoAttribute>
   1027c:	cmp	r0, #0
   10280:	beq	1059c <doParseXmlDecl+0x3e4>
   10284:	ldr	r1, [sp, #80]	; 0x50
   10288:	cmp	r1, #0
   1028c:	beq	1059c <doParseXmlDecl+0x3e4>
   10290:	ldr	fp, [r5, #28]
   10294:	ldr	r2, [sp, #84]	; 0x54
   10298:	ldr	r3, [pc, #832]	; 105e0 <doParseXmlDecl+0x428>
   1029c:	mov	r0, r5
   102a0:	blx	fp
   102a4:	cmp	r0, #0
   102a8:	beq	1033c <doParseXmlDecl+0x184>
   102ac:	cmp	r7, #0
   102b0:	beq	102bc <doParseXmlDecl+0x104>
   102b4:	ldr	r1, [sp, #76]	; 0x4c
   102b8:	str	r1, [r7]
   102bc:	cmp	sl, #0
   102c0:	beq	102cc <doParseXmlDecl+0x114>
   102c4:	ldr	r3, [sp, #72]	; 0x48
   102c8:	str	r3, [sl]
   102cc:	ldr	r1, [sp, #72]	; 0x48
   102d0:	add	r3, sp, #80	; 0x50
   102d4:	add	r0, sp, #84	; 0x54
   102d8:	add	r2, sp, #76	; 0x4c
   102dc:	add	r7, sp, #72	; 0x48
   102e0:	str	r7, [sp, #8]
   102e4:	str	r2, [sp, #4]
   102e8:	str	r0, [sp]
   102ec:	mov	r2, r6
   102f0:	mov	r0, r5
   102f4:	bl	fe84 <parsePseudoAttribute>
   102f8:	cmp	r0, #0
   102fc:	bne	10310 <doParseXmlDecl+0x158>
   10300:	ldr	r0, [sp, #72]	; 0x48
   10304:	str	r0, [r9]
   10308:	mov	r0, #0
   1030c:	b	105a8 <doParseXmlDecl+0x3f0>
   10310:	ldr	r1, [sp, #80]	; 0x50
   10314:	cmp	r1, #0
   10318:	bne	10354 <doParseXmlDecl+0x19c>
   1031c:	cmp	r4, #0
   10320:	beq	10334 <doParseXmlDecl+0x17c>
   10324:	ldr	r3, [sp, #72]	; 0x48
   10328:	str	r3, [r9]
   1032c:	mov	r0, #0
   10330:	b	105a8 <doParseXmlDecl+0x3f0>
   10334:	mov	r0, #1
   10338:	b	105a8 <doParseXmlDecl+0x3f0>
   1033c:	cmp	r4, #0
   10340:	bne	10354 <doParseXmlDecl+0x19c>
   10344:	ldr	r0, [sp, #80]	; 0x50
   10348:	str	r0, [r9]
   1034c:	mov	r0, #0
   10350:	b	105a8 <doParseXmlDecl+0x3f0>
   10354:	ldr	ip, [r5, #28]
   10358:	ldr	r1, [sp, #80]	; 0x50
   1035c:	ldr	r2, [sp, #84]	; 0x54
   10360:	ldr	r3, [pc, #620]	; 105d4 <doParseXmlDecl+0x41c>
   10364:	mov	r0, r5
   10368:	blx	ip
   1036c:	cmp	r0, #0
   10370:	beq	1047c <doParseXmlDecl+0x2c4>
   10374:	ldr	r1, [sp, #76]	; 0x4c
   10378:	mov	r2, r6
   1037c:	mov	r0, r5
   10380:	bl	fdc4 <toAscii>
   10384:	cmp	r0, #122	; 0x7a
   10388:	movle	r2, #1
   1038c:	movgt	r2, #0
   10390:	mov	r3, #0
   10394:	cmp	r0, #97	; 0x61
   10398:	movge	ip, r2
   1039c:	movlt	ip, r3
   103a0:	cmp	ip, #0
   103a4:	bne	103e0 <doParseXmlDecl+0x228>
   103a8:	cmp	r0, #90	; 0x5a
   103ac:	movle	r1, #1
   103b0:	movgt	r1, #0
   103b4:	mov	r2, #0
   103b8:	cmp	r0, #65	; 0x41
   103bc:	movge	ip, r1
   103c0:	movlt	ip, r2
   103c4:	eor	r3, ip, #1
   103c8:	cmp	r3, #0
   103cc:	beq	103e0 <doParseXmlDecl+0x228>
   103d0:	ldr	r3, [sp, #76]	; 0x4c
   103d4:	str	r3, [r9]
   103d8:	mov	r0, #0
   103dc:	b	105a8 <doParseXmlDecl+0x3f0>
   103e0:	ldr	ip, [sp, #32]
   103e4:	cmp	ip, #0
   103e8:	beq	103f4 <doParseXmlDecl+0x23c>
   103ec:	ldr	r1, [sp, #76]	; 0x4c
   103f0:	str	r1, [ip]
   103f4:	ldr	r1, [sp, #24]
   103f8:	cmp	r1, #0
   103fc:	beq	10424 <doParseXmlDecl+0x26c>
   10400:	ldr	r1, [sp, #76]	; 0x4c
   10404:	ldr	r3, [sp, #72]	; 0x48
   10408:	ldr	r2, [r5, #68]	; 0x44
   1040c:	sub	r2, r3, r2
   10410:	mov	r0, r5
   10414:	ldr	ip, [sp, #28]
   10418:	blx	ip
   1041c:	ldr	r1, [sp, #24]
   10420:	str	r0, [r1]
   10424:	ldr	r1, [sp, #72]	; 0x48
   10428:	add	r3, sp, #80	; 0x50
   1042c:	add	r2, sp, #84	; 0x54
   10430:	add	r0, sp, #76	; 0x4c
   10434:	add	ip, sp, #72	; 0x48
   10438:	str	ip, [sp, #8]
   1043c:	str	r0, [sp, #4]
   10440:	str	r2, [sp]
   10444:	mov	r2, r6
   10448:	mov	r0, r5
   1044c:	bl	fe84 <parsePseudoAttribute>
   10450:	cmp	r0, #0
   10454:	bne	10468 <doParseXmlDecl+0x2b0>
   10458:	ldr	r1, [sp, #72]	; 0x48
   1045c:	str	r1, [r9]
   10460:	mov	r0, #0
   10464:	b	105a8 <doParseXmlDecl+0x3f0>
   10468:	ldr	ip, [sp, #80]	; 0x50
   1046c:	cmp	ip, #0
   10470:	bne	1047c <doParseXmlDecl+0x2c4>
   10474:	mov	r0, #1
   10478:	b	105a8 <doParseXmlDecl+0x3f0>
   1047c:	ldr	ip, [r5, #28]
   10480:	ldr	r1, [sp, #80]	; 0x50
   10484:	ldr	r2, [sp, #84]	; 0x54
   10488:	ldr	r3, [pc, #328]	; 105d8 <doParseXmlDecl+0x420>
   1048c:	mov	r0, r5
   10490:	blx	ip
   10494:	mov	ip, #1
   10498:	cmp	r4, #0
   1049c:	movne	r1, #1
   104a0:	moveq	r1, #0
   104a4:	cmp	r0, #0
   104a8:	moveq	ip, ip
   104ac:	movne	ip, r1
   104b0:	cmp	ip, #0
   104b4:	beq	104c8 <doParseXmlDecl+0x310>
   104b8:	ldr	r2, [sp, #80]	; 0x50
   104bc:	str	r2, [r9]
   104c0:	mov	r0, #0
   104c4:	b	105a8 <doParseXmlDecl+0x3f0>
   104c8:	ldr	r4, [r5, #28]
   104cc:	ldr	r1, [sp, #76]	; 0x4c
   104d0:	ldr	r3, [sp, #72]	; 0x48
   104d4:	ldr	r2, [r5, #68]	; 0x44
   104d8:	sub	r2, r3, r2
   104dc:	ldr	r3, [pc, #248]	; 105dc <doParseXmlDecl+0x424>
   104e0:	mov	r0, r5
   104e4:	blx	r4
   104e8:	cmp	r0, #0
   104ec:	bne	1053c <doParseXmlDecl+0x384>
   104f0:	ldr	r4, [r5, #28]
   104f4:	ldr	r1, [sp, #76]	; 0x4c
   104f8:	ldr	r2, [sp, #72]	; 0x48
   104fc:	ldr	r0, [r5, #68]	; 0x44
   10500:	sub	r2, r2, r0
   10504:	ldr	r3, [pc, #216]	; 105e4 <doParseXmlDecl+0x42c>
   10508:	mov	r0, r5
   1050c:	blx	r4
   10510:	cmp	r0, #0
   10514:	bne	10528 <doParseXmlDecl+0x370>
   10518:	ldr	r0, [sp, #76]	; 0x4c
   1051c:	str	r0, [r9]
   10520:	mov	r0, #0
   10524:	b	105a8 <doParseXmlDecl+0x3f0>
   10528:	cmp	r8, #0
   1052c:	beq	1054c <doParseXmlDecl+0x394>
   10530:	mov	r2, #0
   10534:	str	r2, [r8]
   10538:	b	1054c <doParseXmlDecl+0x394>
   1053c:	cmp	r8, #0
   10540:	beq	1054c <doParseXmlDecl+0x394>
   10544:	mov	r3, #1
   10548:	str	r3, [r8]
   1054c:	ldr	r1, [sp, #72]	; 0x48
   10550:	mov	r2, r6
   10554:	mov	r0, r5
   10558:	bl	fdc4 <toAscii>
   1055c:	bl	fe30 <isSpace>
   10560:	cmp	r0, #0
   10564:	beq	1057c <doParseXmlDecl+0x3c4>
   10568:	ldr	r2, [sp, #72]	; 0x48
   1056c:	ldr	r1, [r5, #68]	; 0x44
   10570:	add	r0, r2, r1
   10574:	str	r0, [sp, #72]	; 0x48
   10578:	b	1054c <doParseXmlDecl+0x394>
   1057c:	ldr	r2, [sp, #72]	; 0x48
   10580:	cmp	r2, r6
   10584:	beq	10594 <doParseXmlDecl+0x3dc>
   10588:	str	r2, [r9]
   1058c:	mov	r0, #0
   10590:	b	105a8 <doParseXmlDecl+0x3f0>
   10594:	mov	r0, #1
   10598:	b	105a8 <doParseXmlDecl+0x3f0>
   1059c:	ldr	ip, [sp, #72]	; 0x48
   105a0:	str	ip, [r9]
   105a4:	mov	r0, #0
   105a8:	ldr	r4, [sp, #36]	; 0x24
   105ac:	ldr	r5, [sp, #40]	; 0x28
   105b0:	ldr	r6, [sp, #44]	; 0x2c
   105b4:	ldr	r7, [sp, #48]	; 0x30
   105b8:	ldr	r8, [sp, #52]	; 0x34
   105bc:	ldr	r9, [sp, #56]	; 0x38
   105c0:	ldr	sl, [sp, #60]	; 0x3c
   105c4:	ldr	fp, [sp, #64]	; 0x40
   105c8:	ldr	lr, [sp, #16]
   105cc:	add	sp, sp, #88	; 0x58
   105d0:	bx	lr
   105d4:	.word	0x00001b40
   105d8:	.word	0x00001b49
   105dc:	.word	0x00001b54
   105e0:	.word	0x00001b38
   105e4:	.word	0x00001b58

000105e8 <checkCharRefNumber>:
   105e8:	mov	ip, sp
   105ec:	sub	sp, sp, #8
   105f0:	str	ip, [sp]
   105f4:	str	lr, [sp, #4]
   105f8:	asr	ip, r0, #8
   105fc:	cmp	ip, #220	; 0xdc
   10600:	bcs	10638 <checkCharRefNumber+0x50>
   10604:	cmp	ip, #217	; 0xd9
   10608:	bcs	1068c <checkCharRefNumber+0xa4>
   1060c:	cmp	ip, #0
   10610:	beq	10620 <checkCharRefNumber+0x38>
   10614:	cmp	ip, #216	; 0xd8
   10618:	beq	1068c <checkCharRefNumber+0xa4>
   1061c:	b	10690 <checkCharRefNumber+0xa8>
   10620:	ldr	r3, [pc, #116]	; 1069c <checkCharRefNumber+0xb4>
   10624:	ldrb	r1, [r3, r0]
   10628:	cmp	r1, #0
   1062c:	bne	10690 <checkCharRefNumber+0xa8>
   10630:	mvn	r0, #0
   10634:	b	10690 <checkCharRefNumber+0xa8>
   10638:	cmp	ip, #222	; 0xde
   1063c:	bcc	1068c <checkCharRefNumber+0xa4>
   10640:	cmp	ip, #222	; 0xde
   10644:	beq	1068c <checkCharRefNumber+0xa4>
   10648:	cmp	ip, #223	; 0xdf
   1064c:	beq	1068c <checkCharRefNumber+0xa4>
   10650:	cmp	ip, #255	; 0xff
   10654:	bne	10690 <checkCharRefNumber+0xa8>
   10658:	mov	r1, #1
   1065c:	movw	lr, #65535	; 0xffff
   10660:	cmp	r0, lr
   10664:	moveq	r2, #1
   10668:	movne	r2, #0
   1066c:	movw	lr, #65534	; 0xfffe
   10670:	cmp	r0, lr
   10674:	moveq	r1, r1
   10678:	movne	r1, r2
   1067c:	cmp	r1, #0
   10680:	beq	10690 <checkCharRefNumber+0xa8>
   10684:	mvn	r0, #0
   10688:	b	10690 <checkCharRefNumber+0xa8>
   1068c:	mvn	r0, #0
   10690:	ldr	lr, [sp, #4]
   10694:	add	sp, sp, #8
   10698:	bx	lr
   1069c:	.word	0x00000e84

000106a0 <coda_XmlUtf8Encode>:
   106a0:	mov	ip, sp
   106a4:	sub	sp, sp, #8
   106a8:	str	ip, [sp]
   106ac:	str	lr, [sp, #4]
   106b0:	cmp	r0, #0
   106b4:	bge	106c0 <coda_XmlUtf8Encode+0x20>
   106b8:	mov	r0, #0
   106bc:	b	10780 <coda_XmlUtf8Encode+0xe0>
   106c0:	cmp	r0, #128	; 0x80
   106c4:	bge	106d4 <coda_XmlUtf8Encode+0x34>
   106c8:	strb	r0, [r1]
   106cc:	mov	r0, #1
   106d0:	b	10780 <coda_XmlUtf8Encode+0xe0>
   106d4:	cmp	r0, #2048	; 0x800
   106d8:	bge	106fc <coda_XmlUtf8Encode+0x5c>
   106dc:	asr	r2, r0, #6
   106e0:	orr	r2, r2, #192	; 0xc0
   106e4:	strb	r2, [r1]
   106e8:	and	r2, r0, #63	; 0x3f
   106ec:	orr	r0, r2, #128	; 0x80
   106f0:	strb	r0, [r1, #1]
   106f4:	mov	r0, #2
   106f8:	b	10780 <coda_XmlUtf8Encode+0xe0>
   106fc:	cmp	r0, #65536	; 0x10000
   10700:	bge	10734 <coda_XmlUtf8Encode+0x94>
   10704:	asr	r2, r0, #12
   10708:	orr	r2, r2, #224	; 0xe0
   1070c:	strb	r2, [r1]
   10710:	asr	r2, r0, #6
   10714:	and	r3, r2, #63	; 0x3f
   10718:	orr	r2, r3, #128	; 0x80
   1071c:	strb	r2, [r1, #1]
   10720:	and	ip, r0, #63	; 0x3f
   10724:	orr	r0, ip, #128	; 0x80
   10728:	strb	r0, [r1, #2]
   1072c:	mov	r0, #3
   10730:	b	10780 <coda_XmlUtf8Encode+0xe0>
   10734:	cmp	r0, #1114112	; 0x110000
   10738:	bge	1077c <coda_XmlUtf8Encode+0xdc>
   1073c:	asr	r2, r0, #18
   10740:	orr	r3, r2, #240	; 0xf0
   10744:	strb	r3, [r1]
   10748:	asr	r2, r0, #12
   1074c:	and	ip, r2, #63	; 0x3f
   10750:	orr	r3, ip, #128	; 0x80
   10754:	strb	r3, [r1, #1]
   10758:	asr	r3, r0, #6
   1075c:	and	r2, r3, #63	; 0x3f
   10760:	orr	ip, r2, #128	; 0x80
   10764:	strb	ip, [r1, #2]
   10768:	and	ip, r0, #63	; 0x3f
   1076c:	orr	r2, ip, #128	; 0x80
   10770:	strb	r2, [r1, #3]
   10774:	mov	r0, #4
   10778:	b	10780 <coda_XmlUtf8Encode+0xe0>
   1077c:	mov	r0, #0
   10780:	ldr	lr, [sp, #4]
   10784:	add	sp, sp, #8
   10788:	bx	lr

0001078c <coda_XmlUtf16Encode>:
   1078c:	mov	ip, sp
   10790:	sub	sp, sp, #8
   10794:	str	ip, [sp]
   10798:	str	lr, [sp, #4]
   1079c:	cmp	r0, #0
   107a0:	bge	107ac <coda_XmlUtf16Encode+0x20>
   107a4:	mov	r0, #0
   107a8:	b	107f8 <coda_XmlUtf16Encode+0x6c>
   107ac:	cmp	r0, #65536	; 0x10000
   107b0:	bge	107c0 <coda_XmlUtf16Encode+0x34>
   107b4:	strh	r0, [r1]
   107b8:	mov	r0, #1
   107bc:	b	107f8 <coda_XmlUtf16Encode+0x6c>
   107c0:	cmp	r0, #1114112	; 0x110000
   107c4:	bge	107f4 <coda_XmlUtf16Encode+0x68>
   107c8:	sub	r2, r0, #65536	; 0x10000
   107cc:	asr	r3, r2, #10
   107d0:	add	r0, r3, #55296	; 0xd800
   107d4:	strh	r0, [r1]
   107d8:	bic	ip, r2, #261120	; 0x3fc00
   107dc:	bic	ip, ip, #66846720	; 0x3fc0000
   107e0:	bic	ip, ip, #-67108864	; 0xfc000000
   107e4:	add	r2, ip, #56320	; 0xdc00
   107e8:	strh	r2, [r1, #2]
   107ec:	mov	r0, #2
   107f0:	b	107f8 <coda_XmlUtf16Encode+0x6c>
   107f4:	mov	r0, #0
   107f8:	ldr	lr, [sp, #4]
   107fc:	add	sp, sp, #8
   10800:	bx	lr

00010804 <coda_XmlSizeOfUnknownEncoding>:
   10804:	mov	ip, sp
   10808:	sub	sp, sp, #8
   1080c:	str	ip, [sp]
   10810:	str	lr, [sp, #4]
   10814:	movw	r0, #1912	; 0x778
   10818:	ldr	lr, [sp, #4]
   1081c:	add	sp, sp, #8
   10820:	bx	lr

00010824 <unknown_isName>:
   10824:	mov	ip, sp
   10828:	sub	sp, sp, #8
   1082c:	str	ip, [sp]
   10830:	str	lr, [sp, #4]
   10834:	ldr	ip, [r0, #368]	; 0x170
   10838:	ldr	r0, [r0, #372]	; 0x174
   1083c:	blx	ip
   10840:	bic	r1, r0, #255	; 0xff
   10844:	bic	r1, r1, #65280	; 0xff00
   10848:	cmp	r1, #0
   1084c:	beq	10858 <unknown_isName+0x34>
   10850:	mov	r0, #0
   10854:	b	10884 <unknown_isName+0x60>
   10858:	ldr	r3, [pc, #48]	; 10890 <unknown_isName+0x6c>
   1085c:	and	r2, r0, #255	; 0xff
   10860:	asr	r1, r2, #5
   10864:	ldr	r2, [pc, #40]	; 10894 <unknown_isName+0x70>
   10868:	ldrb	ip, [r2, r0, asr #8]
   1086c:	add	r1, r1, ip, lsl #3
   10870:	ldr	r2, [r3, r1, lsl #2]
   10874:	mov	r1, #1
   10878:	and	r0, r0, #31
   1087c:	lsl	r0, r1, r0
   10880:	and	r0, r2, r0
   10884:	ldr	lr, [sp, #4]
   10888:	add	sp, sp, #8
   1088c:	bx	lr
   10890:	.word	0x00000000
   10894:	.word	0x00000600

00010898 <unknown_isNmstrt>:
   10898:	mov	ip, sp
   1089c:	sub	sp, sp, #8
   108a0:	str	ip, [sp]
   108a4:	str	lr, [sp, #4]
   108a8:	ldr	ip, [r0, #368]	; 0x170
   108ac:	ldr	r0, [r0, #372]	; 0x174
   108b0:	blx	ip
   108b4:	bic	r1, r0, #255	; 0xff
   108b8:	bic	r1, r1, #65280	; 0xff00
   108bc:	cmp	r1, #0
   108c0:	beq	108cc <unknown_isNmstrt+0x34>
   108c4:	mov	r0, #0
   108c8:	b	108f8 <unknown_isNmstrt+0x60>
   108cc:	ldr	r3, [pc, #48]	; 10904 <unknown_isNmstrt+0x6c>
   108d0:	and	r2, r0, #255	; 0xff
   108d4:	asr	r1, r2, #5
   108d8:	ldr	r2, [pc, #40]	; 10908 <unknown_isNmstrt+0x70>
   108dc:	ldrb	ip, [r2, r0, asr #8]
   108e0:	add	r1, r1, ip, lsl #3
   108e4:	ldr	r2, [r3, r1, lsl #2]
   108e8:	mov	r1, #1
   108ec:	and	r0, r0, #31
   108f0:	lsl	r0, r1, r0
   108f4:	and	r0, r2, r0
   108f8:	ldr	lr, [sp, #4]
   108fc:	add	sp, sp, #8
   10900:	bx	lr
   10904:	.word	0x00000000
   10908:	.word	0x00000500

0001090c <unknown_isInvalid>:
   1090c:	mov	ip, sp
   10910:	sub	sp, sp, #8
   10914:	str	ip, [sp]
   10918:	str	lr, [sp, #4]
   1091c:	ldr	ip, [r0, #368]	; 0x170
   10920:	ldr	r0, [r0, #372]	; 0x174
   10924:	blx	ip
   10928:	bic	r3, r0, #255	; 0xff
   1092c:	bic	r3, r3, #65280	; 0xff00
   10930:	cmp	r3, #0
   10934:	bne	1094c <unknown_isInvalid+0x40>
   10938:	bl	105e8 <checkCharRefNumber>
   1093c:	cmp	r0, #0
   10940:	movlt	r0, #1
   10944:	movge	r0, #0
   10948:	b	10950 <unknown_isInvalid+0x44>
   1094c:	mov	r0, #1
   10950:	ldr	lr, [sp, #4]
   10954:	add	sp, sp, #8
   10958:	bx	lr

0001095c <unknown_toUtf8>:
   1095c:	mov	ip, sp
   10960:	sub	sp, sp, #40	; 0x28
   10964:	str	ip, [sp]
   10968:	str	lr, [sp, #4]
   1096c:	str	r4, [sp, #8]
   10970:	str	r5, [sp, #12]
   10974:	str	r6, [sp, #16]
   10978:	str	r7, [sp, #20]
   1097c:	str	r8, [sp, #24]
   10980:	ldr	r8, [ip]
   10984:	mov	r4, r3
   10988:	mov	r5, r2
   1098c:	mov	r6, r1
   10990:	mov	r7, r0
   10994:	ldr	r1, [r6]
   10998:	cmp	r1, r5
   1099c:	beq	10a54 <unknown_toUtf8+0xf8>
   109a0:	ldrb	r2, [r1]
   109a4:	and	r2, r2, #255	; 0xff
   109a8:	lsl	r2, r2, #2
   109ac:	add	r3, r7, r2
   109b0:	add	r2, r3, #121	; 0x79
   109b4:	add	r2, r2, #768	; 0x300
   109b8:	ldrb	r0, [r3, #888]	; 0x378
   109bc:	cmp	r0, #0
   109c0:	bne	10a10 <unknown_toUtf8+0xb4>
   109c4:	ldr	ip, [r7, #368]	; 0x170
   109c8:	ldr	r0, [r7, #372]	; 0x174
   109cc:	blx	ip
   109d0:	add	r1, sp, #32
   109d4:	bl	106a0 <coda_XmlUtf8Encode>
   109d8:	ldr	r3, [r4]
   109dc:	sub	r2, r8, r3
   109e0:	cmp	r0, r2
   109e4:	bgt	10a54 <unknown_toUtf8+0xf8>
   109e8:	add	r2, sp, #32
   109ec:	ldr	r3, [r6]
   109f0:	ldrb	ip, [r3]
   109f4:	and	r1, ip, #255	; 0xff
   109f8:	add	r1, r7, r1
   109fc:	ldrb	ip, [r1, #76]	; 0x4c
   10a00:	add	r1, r3, ip
   10a04:	sub	ip, r1, #3
   10a08:	str	ip, [r6]
   10a0c:	b	10a28 <unknown_toUtf8+0xcc>
   10a10:	ldr	ip, [r4]
   10a14:	sub	r3, r8, ip
   10a18:	cmp	r0, r3
   10a1c:	bgt	10a54 <unknown_toUtf8+0xf8>
   10a20:	add	ip, r1, #1
   10a24:	str	ip, [r6]
   10a28:	ldr	ip, [r4]
   10a2c:	add	r3, ip, #1
   10a30:	str	r3, [r4]
   10a34:	mov	r3, r2
   10a38:	add	r2, r3, #1
   10a3c:	ldrb	r1, [r3]
   10a40:	strb	r1, [ip]
   10a44:	sub	r0, r0, #1
   10a48:	cmp	r0, #0
   10a4c:	bne	10a28 <unknown_toUtf8+0xcc>
   10a50:	b	10994 <unknown_toUtf8+0x38>
   10a54:	ldr	r4, [sp, #8]
   10a58:	ldr	r5, [sp, #12]
   10a5c:	ldr	r6, [sp, #16]
   10a60:	ldr	r7, [sp, #20]
   10a64:	ldr	r8, [sp, #24]
   10a68:	ldr	lr, [sp, #4]
   10a6c:	add	sp, sp, #40	; 0x28
   10a70:	bx	lr

00010a74 <unknown_toUtf16>:
   10a74:	mov	ip, sp
   10a78:	sub	sp, sp, #32
   10a7c:	str	ip, [sp]
   10a80:	str	lr, [sp, #4]
   10a84:	str	r4, [sp, #8]
   10a88:	str	r5, [sp, #12]
   10a8c:	str	r6, [sp, #16]
   10a90:	str	r7, [sp, #20]
   10a94:	str	r8, [sp, #24]
   10a98:	ldr	r8, [ip]
   10a9c:	mov	r4, r3
   10aa0:	mov	r5, r2
   10aa4:	mov	r6, r1
   10aa8:	mov	r7, r0
   10aac:	ldr	r1, [r6]
   10ab0:	cmp	r1, r5
   10ab4:	beq	10b38 <unknown_toUtf16+0xc4>
   10ab8:	ldr	ip, [r4]
   10abc:	cmp	ip, r8
   10ac0:	beq	10b38 <unknown_toUtf16+0xc4>
   10ac4:	ldrb	r0, [r1]
   10ac8:	and	r2, r0, #255	; 0xff
   10acc:	lsl	r3, r2, #1
   10ad0:	add	ip, r7, r3
   10ad4:	add	lr, ip, #256	; 0x100
   10ad8:	ldrh	r0, [lr, #120]	; 0x78
   10adc:	bic	r0, r0, #16711680	; 0xff0000
   10ae0:	bic	r0, r0, #-16777216	; 0xff000000
   10ae4:	cmp	r0, #0
   10ae8:	bne	10b1c <unknown_toUtf16+0xa8>
   10aec:	ldr	ip, [r7, #368]	; 0x170
   10af0:	ldr	r0, [r7, #372]	; 0x174
   10af4:	blx	ip
   10af8:	ldr	r1, [r6]
   10afc:	ldrb	r2, [r1]
   10b00:	and	r3, r2, #255	; 0xff
   10b04:	add	r2, r7, r3
   10b08:	ldrb	r2, [r2, #76]	; 0x4c
   10b0c:	add	r2, r1, r2
   10b10:	sub	r1, r2, #3
   10b14:	str	r1, [r6]
   10b18:	b	10b24 <unknown_toUtf16+0xb0>
   10b1c:	add	r2, r1, #1
   10b20:	str	r2, [r6]
   10b24:	ldr	ip, [r4]
   10b28:	add	r3, ip, #2
   10b2c:	str	r3, [r4]
   10b30:	strh	r0, [ip]
   10b34:	b	10aac <unknown_toUtf16+0x38>
   10b38:	ldr	r4, [sp, #8]
   10b3c:	ldr	r5, [sp, #12]
   10b40:	ldr	r6, [sp, #16]
   10b44:	ldr	r7, [sp, #20]
   10b48:	ldr	r8, [sp, #24]
   10b4c:	ldr	lr, [sp, #4]
   10b50:	add	sp, sp, #32
   10b54:	bx	lr

00010b58 <coda_XmlInitUnknownEncoding>:
   10b58:	mov	ip, sp
   10b5c:	sub	sp, sp, #32
   10b60:	str	ip, [sp]
   10b64:	str	lr, [sp, #4]
   10b68:	str	r4, [sp, #8]
   10b6c:	str	r5, [sp, #12]
   10b70:	str	r6, [sp, #16]
   10b74:	str	r7, [sp, #20]
   10b78:	str	r8, [sp, #24]
   10b7c:	str	r9, [sp, #28]
   10b80:	mov	r5, r3
   10b84:	mov	r6, r2
   10b88:	mov	r7, r1
   10b8c:	mov	r4, r0
   10b90:	mov	r1, #0
   10b94:	ldr	ip, [pc, #800]	; 10ebc <coda_XmlInitUnknownEncoding+0x364>
   10b98:	ldrb	ip, [ip, r1]
   10b9c:	strb	ip, [r0, r1]
   10ba0:	add	r1, r1, #1
   10ba4:	cmp	r1, #368	; 0x170
   10ba8:	blt	10b94 <coda_XmlInitUnknownEncoding+0x3c>
   10bac:	mov	r0, #0
   10bb0:	ldr	ip, [pc, #788]	; 10ecc <coda_XmlInitUnknownEncoding+0x374>
   10bb4:	ldrb	r3, [ip, r0]
   10bb8:	cmp	r3, #28
   10bbc:	beq	10bdc <coda_XmlInitUnknownEncoding+0x84>
   10bc0:	cmp	r3, #0
   10bc4:	beq	10bdc <coda_XmlInitUnknownEncoding+0x84>
   10bc8:	ldr	r3, [r7, r0, lsl #2]
   10bcc:	cmp	r3, r0
   10bd0:	beq	10bdc <coda_XmlInitUnknownEncoding+0x84>
   10bd4:	mov	r0, #0
   10bd8:	b	10e90 <coda_XmlInitUnknownEncoding+0x338>
   10bdc:	add	r0, r0, #1
   10be0:	cmp	r0, #128	; 0x80
   10be4:	blt	10bb0 <coda_XmlInitUnknownEncoding+0x58>
   10be8:	mov	r8, #0
   10bec:	ldr	r9, [r7, r8, lsl #2]
   10bf0:	cmn	r9, #1
   10bf4:	beq	10df8 <coda_XmlInitUnknownEncoding+0x2a0>
   10bf8:	cmp	r9, #0
   10bfc:	blt	10db4 <coda_XmlInitUnknownEncoding+0x25c>
   10c00:	cmp	r9, #128	; 0x80
   10c04:	blt	10d1c <coda_XmlInitUnknownEncoding+0x1c4>
   10c08:	mov	r0, r9
   10c0c:	bl	105e8 <checkCharRefNumber>
   10c10:	cmp	r0, #0
   10c14:	blt	10ce0 <coda_XmlInitUnknownEncoding+0x188>
   10c18:	movw	lr, #65535	; 0xffff
   10c1c:	cmp	r9, lr
   10c20:	ble	10c2c <coda_XmlInitUnknownEncoding+0xd4>
   10c24:	mov	r0, #0
   10c28:	b	10e90 <coda_XmlInitUnknownEncoding+0x338>
   10c2c:	ldr	r2, [pc, #644]	; 10eb8 <coda_XmlInitUnknownEncoding+0x360>
   10c30:	and	r0, r9, #255	; 0xff
   10c34:	asr	r0, r0, #5
   10c38:	ldr	r1, [pc, #644]	; 10ec4 <coda_XmlInitUnknownEncoding+0x36c>
   10c3c:	ldrb	r1, [r1, r9, asr #8]
   10c40:	add	r1, r0, r1, lsl #3
   10c44:	ldr	r3, [r2, r1, lsl #2]
   10c48:	mov	r1, #1
   10c4c:	and	ip, r9, #31
   10c50:	lsl	r1, r1, ip
   10c54:	and	r3, r3, r1
   10c58:	cmp	r3, #0
   10c5c:	bne	10c9c <coda_XmlInitUnknownEncoding+0x144>
   10c60:	ldr	r3, [pc, #608]	; 10ec8 <coda_XmlInitUnknownEncoding+0x370>
   10c64:	ldrb	r3, [r3, r9, asr #8]
   10c68:	add	r3, r0, r3, lsl #3
   10c6c:	ldr	r2, [r2, r3, lsl #2]
   10c70:	and	r3, r2, r1
   10c74:	cmp	r3, #0
   10c78:	bne	10c8c <coda_XmlInitUnknownEncoding+0x134>
   10c7c:	add	ip, r4, r8
   10c80:	mov	r3, #28
   10c84:	strb	r3, [ip, #76]	; 0x4c
   10c88:	b	10ca8 <coda_XmlInitUnknownEncoding+0x150>
   10c8c:	add	r2, r4, r8
   10c90:	mov	r3, #26
   10c94:	strb	r3, [r2, #76]	; 0x4c
   10c98:	b	10ca8 <coda_XmlInitUnknownEncoding+0x150>
   10c9c:	add	r1, r4, r8
   10ca0:	mov	ip, #22
   10ca4:	strb	ip, [r1, #76]	; 0x4c
   10ca8:	lsl	r1, r8, #2
   10cac:	add	r2, r4, r1
   10cb0:	add	r1, r2, #121	; 0x79
   10cb4:	add	r1, r1, #768	; 0x300
   10cb8:	mov	r0, r9
   10cbc:	bl	106a0 <coda_XmlUtf8Encode>
   10cc0:	lsl	r1, r8, #2
   10cc4:	add	ip, r4, r1
   10cc8:	strb	r0, [ip, #888]	; 0x378
   10ccc:	lsl	r0, r8, #1
   10cd0:	add	r1, r4, r0
   10cd4:	add	lr, r1, #256	; 0x100
   10cd8:	strh	r9, [lr, #120]	; 0x78
   10cdc:	b	10e30 <coda_XmlInitUnknownEncoding+0x2d8>
   10ce0:	add	ip, r4, r8
   10ce4:	mov	r2, #0
   10ce8:	strb	r2, [ip, #76]	; 0x4c
   10cec:	lsl	r0, r8, #1
   10cf0:	add	ip, r4, r0
   10cf4:	movw	r2, #65535	; 0xffff
   10cf8:	add	lr, ip, #256	; 0x100
   10cfc:	strh	r2, [lr, #120]	; 0x78
   10d00:	lsl	r1, r8, #2
   10d04:	add	r3, r4, r1
   10d08:	mov	r1, #1
   10d0c:	strb	r1, [r3, #888]	; 0x378
   10d10:	mov	r1, #0
   10d14:	strb	r1, [r3, #889]	; 0x379
   10d18:	b	10e30 <coda_XmlInitUnknownEncoding+0x2d8>
   10d1c:	ldr	ip, [pc, #424]	; 10ecc <coda_XmlInitUnknownEncoding+0x374>
   10d20:	ldrb	ip, [ip, r9]
   10d24:	cmp	ip, #28
   10d28:	beq	10d3c <coda_XmlInitUnknownEncoding+0x1e4>
   10d2c:	cmp	ip, #0
   10d30:	movne	r3, #1
   10d34:	moveq	r3, #0
   10d38:	b	10d40 <coda_XmlInitUnknownEncoding+0x1e8>
   10d3c:	mov	r3, #0
   10d40:	cmp	r9, r8
   10d44:	movne	r2, #1
   10d48:	moveq	r2, #0
   10d4c:	mov	ip, #0
   10d50:	cmp	r3, #0
   10d54:	movne	r2, r2
   10d58:	moveq	r2, ip
   10d5c:	cmp	r2, #0
   10d60:	beq	10d6c <coda_XmlInitUnknownEncoding+0x214>
   10d64:	mov	r0, #0
   10d68:	b	10e90 <coda_XmlInitUnknownEncoding+0x338>
   10d6c:	add	r3, r4, r8
   10d70:	ldr	r1, [pc, #340]	; 10ecc <coda_XmlInitUnknownEncoding+0x374>
   10d74:	ldrb	r0, [r1, r9]
   10d78:	strb	r0, [r3, #76]	; 0x4c
   10d7c:	lsl	r1, r8, #2
   10d80:	add	r1, r4, r1
   10d84:	mov	r0, #1
   10d88:	strb	r0, [r1, #888]	; 0x378
   10d8c:	strb	r9, [r1, #889]	; 0x379
   10d90:	movw	r0, #65535	; 0xffff
   10d94:	cmp	r9, #0
   10d98:	moveq	ip, r0
   10d9c:	movne	ip, r9
   10da0:	lsl	r2, r8, #1
   10da4:	add	r2, r4, r2
   10da8:	add	lr, r2, #256	; 0x100
   10dac:	strh	ip, [lr, #120]	; 0x78
   10db0:	b	10e30 <coda_XmlInitUnknownEncoding+0x2d8>
   10db4:	cmn	r9, #4
   10db8:	bge	10dc4 <coda_XmlInitUnknownEncoding+0x26c>
   10dbc:	mov	r0, #0
   10dc0:	b	10e90 <coda_XmlInitUnknownEncoding+0x338>
   10dc4:	add	r3, r4, r8
   10dc8:	rsb	r2, r9, #3
   10dcc:	strb	r2, [r3, #76]	; 0x4c
   10dd0:	lsl	r2, r8, #2
   10dd4:	add	r3, r4, r2
   10dd8:	mov	r0, #0
   10ddc:	strb	r0, [r3, #888]	; 0x378
   10de0:	lsl	r0, r8, #1
   10de4:	add	r0, r4, r0
   10de8:	mov	ip, #0
   10dec:	add	lr, r0, #256	; 0x100
   10df0:	strh	ip, [lr, #120]	; 0x78
   10df4:	b	10e30 <coda_XmlInitUnknownEncoding+0x2d8>
   10df8:	add	ip, r4, r8
   10dfc:	mov	r3, #1
   10e00:	strb	r3, [ip, #76]	; 0x4c
   10e04:	lsl	r0, r8, #1
   10e08:	add	r2, r4, r0
   10e0c:	movw	r1, #65535	; 0xffff
   10e10:	add	lr, r2, #256	; 0x100
   10e14:	strh	r1, [lr, #120]	; 0x78
   10e18:	lsl	r2, r8, #2
   10e1c:	add	r0, r4, r2
   10e20:	mov	r1, #1
   10e24:	strb	r1, [r0, #888]	; 0x378
   10e28:	mov	r3, #0
   10e2c:	strb	r3, [r0, #889]	; 0x379
   10e30:	add	r8, r8, #1
   10e34:	cmp	r8, #256	; 0x100
   10e38:	blt	10bec <coda_XmlInitUnknownEncoding+0x94>
   10e3c:	str	r5, [r4, #372]	; 0x174
   10e40:	str	r6, [r4, #368]	; 0x170
   10e44:	cmp	r6, #0
   10e48:	beq	10e7c <coda_XmlInitUnknownEncoding+0x324>
   10e4c:	ldr	r3, [pc, #96]	; 10eb4 <coda_XmlInitUnknownEncoding+0x35c>
   10e50:	str	r3, [r4, #332]	; 0x14c
   10e54:	str	r3, [r4, #336]	; 0x150
   10e58:	str	r3, [r4, #340]	; 0x154
   10e5c:	ldr	r1, [pc, #108]	; 10ed0 <coda_XmlInitUnknownEncoding+0x378>
   10e60:	str	r1, [r4, #344]	; 0x158
   10e64:	str	r1, [r4, #348]	; 0x15c
   10e68:	str	r1, [r4, #352]	; 0x160
   10e6c:	ldr	r2, [pc, #96]	; 10ed4 <coda_XmlInitUnknownEncoding+0x37c>
   10e70:	str	r2, [r4, #356]	; 0x164
   10e74:	str	r2, [r4, #360]	; 0x168
   10e78:	str	r2, [r4, #364]	; 0x16c
   10e7c:	ldr	r2, [pc, #84]	; 10ed8 <coda_XmlInitUnknownEncoding+0x380>
   10e80:	str	r2, [r4, #60]	; 0x3c
   10e84:	ldr	r3, [pc, #52]	; 10ec0 <coda_XmlInitUnknownEncoding+0x368>
   10e88:	str	r3, [r4, #64]	; 0x40
   10e8c:	mov	r0, r4
   10e90:	ldr	r4, [sp, #8]
   10e94:	ldr	r5, [sp, #12]
   10e98:	ldr	r6, [sp, #16]
   10e9c:	ldr	r7, [sp, #20]
   10ea0:	ldr	r8, [sp, #24]
   10ea4:	ldr	r9, [sp, #28]
   10ea8:	ldr	lr, [sp, #4]
   10eac:	add	sp, sp, #32
   10eb0:	bx	lr
	...
   10ebc:	.word	0x00000e38
   10ec0:	.word	0x00000000
   10ec4:	.word	0x00000500
   10ec8:	.word	0x00000600
   10ecc:	.word	0x00000e84
	...

00010edc <getEncodingIndex>:
   10edc:	mov	ip, sp
   10ee0:	sub	sp, sp, #16
   10ee4:	str	ip, [sp]
   10ee8:	str	lr, [sp, #4]
   10eec:	str	r4, [sp, #8]
   10ef0:	str	r5, [sp, #12]
   10ef4:	mov	r5, r0
   10ef8:	cmp	r5, #0
   10efc:	bne	10f08 <getEncodingIndex+0x2c>
   10f00:	mov	r4, #6
   10f04:	b	10f34 <getEncodingIndex+0x58>
   10f08:	mov	r4, #0
   10f0c:	ldr	r1, [pc, #56]	; 10f4c <getEncodingIndex+0x70>
   10f10:	ldr	r1, [r1, r4, lsl #2]
   10f14:	mov	r0, r5
   10f18:	bl	fcd8 <streqci>
   10f1c:	cmp	r0, #0
   10f20:	bne	10f34 <getEncodingIndex+0x58>
   10f24:	add	r4, r4, #1
   10f28:	cmp	r4, #6
   10f2c:	blt	10f0c <getEncodingIndex+0x30>
   10f30:	mvn	r4, #0
   10f34:	mov	r0, r4
   10f38:	ldr	r4, [sp, #8]
   10f3c:	ldr	r5, [sp, #12]
   10f40:	ldr	lr, [sp, #4]
   10f44:	add	sp, sp, #16
   10f48:	bx	lr
   10f4c:	.word	0x00001b90

00010f50 <initScan>:
   10f50:	mov	ip, sp
   10f54:	sub	sp, sp, #32
   10f58:	str	ip, [sp]
   10f5c:	str	lr, [sp, #4]
   10f60:	str	r4, [sp, #8]
   10f64:	str	r5, [sp, #12]
   10f68:	str	r6, [sp, #16]
   10f6c:	str	r7, [sp, #20]
   10f70:	str	r8, [sp, #24]
   10f74:	str	r9, [sp, #28]
   10f78:	mov	r4, r3
   10f7c:	ldr	r3, [ip, #4]
   10f80:	mov	r5, r2
   10f84:	ldr	r2, [ip]
   10f88:	cmp	r4, r2
   10f8c:	bne	10f98 <initScan+0x48>
   10f90:	mvn	r0, #3
   10f94:	b	112f0 <initScan+0x3a0>
   10f98:	ldr	r6, [r1, #76]	; 0x4c
   10f9c:	add	ip, r4, #1
   10fa0:	cmp	ip, r2
   10fa4:	beq	1122c <initScan+0x2dc>
   10fa8:	ldrb	ip, [r4, #1]
   10fac:	and	ip, ip, #255	; 0xff
   10fb0:	ldrb	r7, [r4]
   10fb4:	and	r7, r7, #255	; 0xff
   10fb8:	orr	ip, ip, r7, lsl #8
   10fbc:	movw	lr, #65279	; 0xfeff
   10fc0:	cmp	ip, lr
   10fc4:	bcs	110f8 <initScan+0x1a8>
   10fc8:	cmp	ip, #15360	; 0x3c00
   10fcc:	beq	11080 <initScan+0x130>
   10fd0:	movw	lr, #61371	; 0xefbb
   10fd4:	cmp	ip, lr
   10fd8:	bne	11150 <initScan+0x200>
   10fdc:	cmp	r5, #1
   10fe0:	bne	11044 <initScan+0xf4>
   10fe4:	ldrb	r9, [r1, #73]	; 0x49
   10fe8:	mov	r7, #1
   10fec:	cmp	r9, #4
   10ff0:	moveq	ip, #1
   10ff4:	movne	ip, #0
   10ff8:	cmp	r9, #0
   10ffc:	moveq	r8, r7
   11000:	movne	r8, ip
   11004:	mov	ip, #1
   11008:	cmp	r9, #5
   1100c:	moveq	r7, #1
   11010:	movne	r7, #0
   11014:	cmp	r8, #0
   11018:	movne	r7, ip
   1101c:	moveq	r7, r7
   11020:	mov	ip, #1
   11024:	cmp	r9, #3
   11028:	moveq	r8, #1
   1102c:	movne	r8, #0
   11030:	cmp	r7, #0
   11034:	movne	ip, ip
   11038:	moveq	ip, r8
   1103c:	cmp	ip, #0
   11040:	bne	112b4 <initScan+0x364>
   11044:	add	ip, r4, #2
   11048:	cmp	ip, r2
   1104c:	bne	11058 <initScan+0x108>
   11050:	mvn	r0, #0
   11054:	b	112f0 <initScan+0x3a0>
   11058:	ldrb	ip, [r4, #2]
   1105c:	and	ip, ip, #255	; 0xff
   11060:	cmp	ip, #191	; 0xbf
   11064:	bne	112b4 <initScan+0x364>
   11068:	add	r1, r4, #3
   1106c:	str	r1, [r3]
   11070:	ldr	r0, [r0, #8]
   11074:	str	r0, [r6]
   11078:	mov	r0, #14
   1107c:	b	112f0 <initScan+0x3a0>
   11080:	ldrb	ip, [r1, #73]	; 0x49
   11084:	cmp	ip, #4
   11088:	beq	1109c <initScan+0x14c>
   1108c:	cmp	ip, #3
   11090:	moveq	ip, #1
   11094:	movne	ip, #0
   11098:	b	110a0 <initScan+0x150>
   1109c:	mov	ip, #1
   110a0:	cmp	r5, #1
   110a4:	moveq	r7, #1
   110a8:	movne	r7, #0
   110ac:	mov	r8, #0
   110b0:	cmp	ip, #0
   110b4:	movne	ip, r7
   110b8:	moveq	ip, r8
   110bc:	cmp	ip, #0
   110c0:	bne	112b4 <initScan+0x364>
   110c4:	ldr	r0, [r0, #20]
   110c8:	str	r0, [r6]
   110cc:	ldr	ip, [r0, r5, lsl #2]
   110d0:	mov	r1, r4
   110d4:	ldr	r4, [sp, #8]
   110d8:	ldr	r5, [sp, #12]
   110dc:	ldr	r6, [sp, #16]
   110e0:	ldr	r7, [sp, #20]
   110e4:	ldr	r8, [sp, #24]
   110e8:	ldr	r9, [sp, #28]
   110ec:	ldr	lr, [sp, #4]
   110f0:	add	sp, sp, #32
   110f4:	bx	ip
   110f8:	movw	lr, #65279	; 0xfeff
   110fc:	cmp	ip, lr
   11100:	beq	111ec <initScan+0x29c>
   11104:	movw	lr, #65534	; 0xfffe
   11108:	cmp	ip, lr
   1110c:	bne	11150 <initScan+0x200>
   11110:	cmp	r5, #1
   11114:	moveq	ip, #1
   11118:	movne	ip, #0
   1111c:	mov	r8, #0
   11120:	ldrb	r7, [r1, #73]	; 0x49
   11124:	cmp	r7, #0
   11128:	moveq	ip, ip
   1112c:	movne	ip, r8
   11130:	cmp	ip, #0
   11134:	bne	112b4 <initScan+0x364>
   11138:	add	ip, r4, #2
   1113c:	str	ip, [r3]
   11140:	ldr	r2, [r0, #20]
   11144:	str	r2, [r6]
   11148:	mov	r0, #14
   1114c:	b	112f0 <initScan+0x3a0>
   11150:	ldrb	ip, [r4]
   11154:	cmp	ip, #0
   11158:	bne	111a4 <initScan+0x254>
   1115c:	cmp	r5, #1
   11160:	bne	11170 <initScan+0x220>
   11164:	ldrb	ip, [r1, #73]	; 0x49
   11168:	cmp	ip, #5
   1116c:	beq	112b4 <initScan+0x364>
   11170:	ldr	r0, [r0, #16]
   11174:	str	r0, [r6]
   11178:	ldr	ip, [r0, r5, lsl #2]
   1117c:	mov	r1, r4
   11180:	ldr	r4, [sp, #8]
   11184:	ldr	r5, [sp, #12]
   11188:	ldr	r6, [sp, #16]
   1118c:	ldr	r7, [sp, #20]
   11190:	ldr	r8, [sp, #24]
   11194:	ldr	r9, [sp, #28]
   11198:	ldr	lr, [sp, #4]
   1119c:	add	sp, sp, #32
   111a0:	bx	ip
   111a4:	ldrb	ip, [r4, #1]
   111a8:	cmp	ip, #0
   111ac:	bne	112b4 <initScan+0x364>
   111b0:	cmp	r5, #1
   111b4:	beq	112b4 <initScan+0x364>
   111b8:	ldr	r0, [r0, #20]
   111bc:	str	r0, [r6]
   111c0:	ldr	ip, [r0, r5, lsl #2]
   111c4:	mov	r1, r4
   111c8:	ldr	r4, [sp, #8]
   111cc:	ldr	r5, [sp, #12]
   111d0:	ldr	r6, [sp, #16]
   111d4:	ldr	r7, [sp, #20]
   111d8:	ldr	r8, [sp, #24]
   111dc:	ldr	r9, [sp, #28]
   111e0:	ldr	lr, [sp, #4]
   111e4:	add	sp, sp, #32
   111e8:	bx	ip
   111ec:	cmp	r5, #1
   111f0:	moveq	r7, #1
   111f4:	movne	r7, #0
   111f8:	mov	r8, #0
   111fc:	ldrb	ip, [r1, #73]	; 0x49
   11200:	cmp	ip, #0
   11204:	moveq	ip, r7
   11208:	movne	ip, r8
   1120c:	cmp	ip, #0
   11210:	bne	112b4 <initScan+0x364>
   11214:	add	r2, r4, #2
   11218:	str	r2, [r3]
   1121c:	ldr	ip, [r0, #16]
   11220:	str	ip, [r6]
   11224:	mov	r0, #14
   11228:	b	112f0 <initScan+0x3a0>
   1122c:	ldrb	ip, [r1, #73]	; 0x49
   11230:	cmp	ip, #3
   11234:	beq	112ec <initScan+0x39c>
   11238:	cmp	ip, #4
   1123c:	beq	112ec <initScan+0x39c>
   11240:	cmp	ip, #5
   11244:	beq	112ec <initScan+0x39c>
   11248:	ldrb	ip, [r4]
   1124c:	and	ip, ip, #255	; 0xff
   11250:	cmp	ip, #239	; 0xef
   11254:	bcs	1126c <initScan+0x31c>
   11258:	cmp	ip, #0
   1125c:	beq	112ac <initScan+0x35c>
   11260:	cmp	ip, #60	; 0x3c
   11264:	beq	112ac <initScan+0x35c>
   11268:	b	112b4 <initScan+0x364>
   1126c:	cmp	ip, #239	; 0xef
   11270:	beq	11284 <initScan+0x334>
   11274:	cmp	ip, #254	; 0xfe
   11278:	beq	11284 <initScan+0x334>
   1127c:	cmp	ip, #255	; 0xff
   11280:	bne	112b4 <initScan+0x364>
   11284:	cmp	r5, #1
   11288:	moveq	ip, #1
   1128c:	movne	ip, #0
   11290:	mov	r7, #0
   11294:	ldrb	r8, [r1, #73]	; 0x49
   11298:	cmp	r8, #0
   1129c:	moveq	ip, ip
   112a0:	movne	ip, r7
   112a4:	cmp	ip, #0
   112a8:	bne	112b4 <initScan+0x364>
   112ac:	mvn	r0, #0
   112b0:	b	112f0 <initScan+0x3a0>
   112b4:	ldrb	ip, [r1, #73]	; 0x49
   112b8:	ldr	r0, [r0, ip, lsl #2]
   112bc:	str	r0, [r6]
   112c0:	ldr	ip, [r0, r5, lsl #2]
   112c4:	mov	r1, r4
   112c8:	ldr	r4, [sp, #8]
   112cc:	ldr	r5, [sp, #12]
   112d0:	ldr	r6, [sp, #16]
   112d4:	ldr	r7, [sp, #20]
   112d8:	ldr	r8, [sp, #24]
   112dc:	ldr	r9, [sp, #28]
   112e0:	ldr	lr, [sp, #4]
   112e4:	add	sp, sp, #32
   112e8:	bx	ip
   112ec:	mvn	r0, #0
   112f0:	ldr	r4, [sp, #8]
   112f4:	ldr	r5, [sp, #12]
   112f8:	ldr	r6, [sp, #16]
   112fc:	ldr	r7, [sp, #20]
   11300:	ldr	r8, [sp, #24]
   11304:	ldr	r9, [sp, #28]
   11308:	ldr	lr, [sp, #4]
   1130c:	add	sp, sp, #32
   11310:	bx	lr

00011314 <coda_XmlGetUtf8InternalEncoding>:
   11314:	mov	ip, sp
   11318:	sub	sp, sp, #8
   1131c:	str	ip, [sp]
   11320:	str	lr, [sp, #4]
   11324:	ldr	r0, [pc, #8]	; 11334 <coda_XmlGetUtf8InternalEncoding+0x20>
   11328:	ldr	lr, [sp, #4]
   1132c:	add	sp, sp, #8
   11330:	bx	lr
   11334:	.word	0x00000b58

00011338 <coda_XmlGetUtf16InternalEncoding>:
   11338:	mov	ip, sp
   1133c:	sub	sp, sp, #8
   11340:	str	ip, [sp]
   11344:	str	lr, [sp, #4]
   11348:	ldr	r0, [pc, #8]	; 11358 <coda_XmlGetUtf16InternalEncoding+0x20>
   1134c:	ldr	lr, [sp, #4]
   11350:	add	sp, sp, #8
   11354:	bx	lr
   11358:	.word	0x000016e0

0001135c <initScanProlog>:
   1135c:	mov	ip, sp
   11360:	sub	sp, sp, #24
   11364:	str	ip, [sp, #8]
   11368:	str	lr, [sp, #12]
   1136c:	str	r4, [sp, #16]
   11370:	mov	ip, r3
   11374:	mov	r4, r2
   11378:	mov	r3, r1
   1137c:	mov	r1, r0
   11380:	ldr	r0, [pc, #28]	; 113a4 <initScanProlog+0x48>
   11384:	mov	r2, #0
   11388:	str	ip, [sp, #4]
   1138c:	str	r4, [sp]
   11390:	bl	10f50 <initScan>
   11394:	ldr	r4, [sp, #16]
   11398:	ldr	lr, [sp, #12]
   1139c:	add	sp, sp, #24
   113a0:	bx	lr
   113a4:	.word	0x00001ba8

000113a8 <initScanContent>:
   113a8:	mov	ip, sp
   113ac:	sub	sp, sp, #24
   113b0:	str	ip, [sp, #8]
   113b4:	str	lr, [sp, #12]
   113b8:	str	r4, [sp, #16]
   113bc:	mov	ip, r3
   113c0:	mov	r4, r2
   113c4:	mov	r3, r1
   113c8:	mov	r1, r0
   113cc:	ldr	r0, [pc, #28]	; 113f0 <initScanContent+0x48>
   113d0:	mov	r2, #1
   113d4:	str	ip, [sp, #4]
   113d8:	str	r4, [sp]
   113dc:	bl	10f50 <initScan>
   113e0:	ldr	r4, [sp, #16]
   113e4:	ldr	lr, [sp, #12]
   113e8:	add	sp, sp, #24
   113ec:	bx	lr
   113f0:	.word	0x00001ba8

000113f4 <coda_XmlInitEncoding>:
   113f4:	mov	ip, sp
   113f8:	sub	sp, sp, #16
   113fc:	str	ip, [sp]
   11400:	str	lr, [sp, #4]
   11404:	str	r4, [sp, #8]
   11408:	str	r5, [sp, #12]
   1140c:	mov	r4, r1
   11410:	mov	r5, r0
   11414:	mov	r0, r2
   11418:	bl	10edc <getEncodingIndex>
   1141c:	cmn	r0, #1
   11420:	bne	1142c <coda_XmlInitEncoding+0x38>
   11424:	mov	r0, #0
   11428:	b	11454 <coda_XmlInitEncoding+0x60>
   1142c:	strb	r0, [r5, #73]	; 0x49
   11430:	ldr	r0, [pc, #52]	; 1146c <coda_XmlInitEncoding+0x78>
   11434:	str	r0, [r5]
   11438:	ldr	r2, [pc, #48]	; 11470 <coda_XmlInitEncoding+0x7c>
   1143c:	str	r2, [r5, #4]
   11440:	ldr	r1, [pc, #32]	; 11468 <coda_XmlInitEncoding+0x74>
   11444:	str	r1, [r5, #52]	; 0x34
   11448:	str	r4, [r5, #76]	; 0x4c
   1144c:	str	r5, [r4]
   11450:	mov	r0, #1
   11454:	ldr	r4, [sp, #8]
   11458:	ldr	r5, [sp, #12]
   1145c:	ldr	lr, [sp, #4]
   11460:	add	sp, sp, #16
   11464:	bx	lr
	...

00011474 <findEncoding>:
   11474:	mov	ip, sp
   11478:	sub	sp, sp, #168	; 0xa8
   1147c:	str	ip, [sp, #4]
   11480:	str	lr, [sp, #8]
   11484:	str	r4, [sp, #16]
   11488:	str	r5, [sp, #20]
   1148c:	str	r6, [sp, #24]
   11490:	mov	r4, r2
   11494:	mov	r5, r0
   11498:	str	r1, [sp, #36]	; 0x24
   1149c:	add	r1, sp, #40	; 0x28
   114a0:	str	r1, [sp, #32]
   114a4:	ldr	r6, [r5, #60]	; 0x3c
   114a8:	add	r1, sp, #36	; 0x24
   114ac:	add	r3, sp, #32
   114b0:	add	r0, sp, #167	; 0xa7
   114b4:	str	r0, [sp]
   114b8:	mov	r2, r4
   114bc:	mov	r0, r5
   114c0:	blx	r6
   114c4:	ldr	r2, [sp, #36]	; 0x24
   114c8:	cmp	r2, r4
   114cc:	beq	114d8 <findEncoding+0x64>
   114d0:	mov	r0, #0
   114d4:	b	1152c <findEncoding+0xb8>
   114d8:	ldr	r0, [sp, #32]
   114dc:	mov	r2, #0
   114e0:	strb	r2, [r0]
   114e4:	add	r0, sp, #40	; 0x28
   114e8:	ldr	r1, [pc, #88]	; 11548 <findEncoding+0xd4>
   114ec:	bl	fcd8 <streqci>
   114f0:	cmp	r0, #0
   114f4:	beq	1150c <findEncoding+0x98>
   114f8:	ldr	r1, [r5, #68]	; 0x44
   114fc:	cmp	r1, #2
   11500:	bne	1150c <findEncoding+0x98>
   11504:	mov	r0, r5
   11508:	b	1152c <findEncoding+0xb8>
   1150c:	add	r0, sp, #40	; 0x28
   11510:	bl	10edc <getEncodingIndex>
   11514:	cmn	r0, #1
   11518:	bne	11524 <findEncoding+0xb0>
   1151c:	mov	r0, #0
   11520:	b	1152c <findEncoding+0xb8>
   11524:	ldr	r3, [pc, #24]	; 11544 <findEncoding+0xd0>
   11528:	ldr	r0, [r3, r0, lsl #2]
   1152c:	ldr	r4, [sp, #16]
   11530:	ldr	r5, [sp, #20]
   11534:	ldr	r6, [sp, #24]
   11538:	ldr	lr, [sp, #8]
   1153c:	add	sp, sp, #168	; 0xa8
   11540:	bx	lr
   11544:	.word	0x00001ba8
   11548:	.word	0x00001b75

0001154c <coda_XmlParseXmlDecl>:
   1154c:	mov	ip, sp
   11550:	sub	sp, sp, #72	; 0x48
   11554:	str	ip, [sp, #28]
   11558:	str	lr, [sp, #32]
   1155c:	str	r4, [sp, #40]	; 0x28
   11560:	str	r5, [sp, #44]	; 0x2c
   11564:	str	r6, [sp, #48]	; 0x30
   11568:	str	r7, [sp, #52]	; 0x34
   1156c:	str	r8, [sp, #56]	; 0x38
   11570:	str	r9, [sp, #60]	; 0x3c
   11574:	str	sl, [sp, #64]	; 0x40
   11578:	ldr	r5, [ip, #20]
   1157c:	ldr	r8, [ip, #16]
   11580:	ldr	r6, [ip, #12]
   11584:	ldr	r7, [ip, #8]
   11588:	ldr	r4, [ip, #4]
   1158c:	ldr	r9, [ip]
   11590:	ldr	sl, [pc, #84]	; 115ec <coda_XmlParseXmlDecl+0xa0>
   11594:	str	r5, [sp, #24]
   11598:	str	r8, [sp, #20]
   1159c:	str	r6, [sp, #16]
   115a0:	str	r7, [sp, #12]
   115a4:	str	r4, [sp, #8]
   115a8:	str	r9, [sp, #4]
   115ac:	str	r3, [sp]
   115b0:	mov	r3, r2
   115b4:	mov	r2, r1
   115b8:	mov	r1, r0
   115bc:	mov	r0, sl
   115c0:	bl	101b8 <doParseXmlDecl>
   115c4:	ldr	r4, [sp, #40]	; 0x28
   115c8:	ldr	r5, [sp, #44]	; 0x2c
   115cc:	ldr	r6, [sp, #48]	; 0x30
   115d0:	ldr	r7, [sp, #52]	; 0x34
   115d4:	ldr	r8, [sp, #56]	; 0x38
   115d8:	ldr	r9, [sp, #60]	; 0x3c
   115dc:	ldr	sl, [sp, #64]	; 0x40
   115e0:	ldr	lr, [sp, #32]
   115e4:	add	sp, sp, #72	; 0x48
   115e8:	bx	lr
   115ec:	.word	0x00000000

000115f0 <coda_XmlGetUtf8InternalEncodingNS>:
   115f0:	mov	ip, sp
   115f4:	sub	sp, sp, #8
   115f8:	str	ip, [sp]
   115fc:	str	lr, [sp, #4]
   11600:	ldr	r0, [pc, #8]	; 11610 <coda_XmlGetUtf8InternalEncodingNS+0x20>
   11604:	ldr	lr, [sp, #4]
   11608:	add	sp, sp, #8
   1160c:	bx	lr
   11610:	.word	0x000009e8

00011614 <coda_XmlGetUtf16InternalEncodingNS>:
   11614:	mov	ip, sp
   11618:	sub	sp, sp, #8
   1161c:	str	ip, [sp]
   11620:	str	lr, [sp, #4]
   11624:	ldr	r0, [pc, #8]	; 11634 <coda_XmlGetUtf16InternalEncodingNS+0x20>
   11628:	ldr	lr, [sp, #4]
   1162c:	add	sp, sp, #8
   11630:	bx	lr
   11634:	.word	0x00001570

00011638 <initScanPrologNS>:
   11638:	mov	ip, sp
   1163c:	sub	sp, sp, #24
   11640:	str	ip, [sp, #8]
   11644:	str	lr, [sp, #12]
   11648:	str	r4, [sp, #16]
   1164c:	mov	ip, r3
   11650:	mov	r4, r2
   11654:	mov	r3, r1
   11658:	mov	r1, r0
   1165c:	ldr	r0, [pc, #28]	; 11680 <initScanPrologNS+0x48>
   11660:	mov	r2, #0
   11664:	str	ip, [sp, #4]
   11668:	str	r4, [sp]
   1166c:	bl	10f50 <initScan>
   11670:	ldr	r4, [sp, #16]
   11674:	ldr	lr, [sp, #12]
   11678:	add	sp, sp, #24
   1167c:	bx	lr
   11680:	.word	0x00001bc4

00011684 <initScanContentNS>:
   11684:	mov	ip, sp
   11688:	sub	sp, sp, #24
   1168c:	str	ip, [sp, #8]
   11690:	str	lr, [sp, #12]
   11694:	str	r4, [sp, #16]
   11698:	mov	ip, r3
   1169c:	mov	r4, r2
   116a0:	mov	r3, r1
   116a4:	mov	r1, r0
   116a8:	ldr	r0, [pc, #28]	; 116cc <initScanContentNS+0x48>
   116ac:	mov	r2, #1
   116b0:	str	ip, [sp, #4]
   116b4:	str	r4, [sp]
   116b8:	bl	10f50 <initScan>
   116bc:	ldr	r4, [sp, #16]
   116c0:	ldr	lr, [sp, #12]
   116c4:	add	sp, sp, #24
   116c8:	bx	lr
   116cc:	.word	0x00001bc4

000116d0 <coda_XmlInitEncodingNS>:
   116d0:	mov	ip, sp
   116d4:	sub	sp, sp, #16
   116d8:	str	ip, [sp]
   116dc:	str	lr, [sp, #4]
   116e0:	str	r4, [sp, #8]
   116e4:	str	r5, [sp, #12]
   116e8:	mov	r4, r1
   116ec:	mov	r5, r0
   116f0:	mov	r0, r2
   116f4:	bl	10edc <getEncodingIndex>
   116f8:	cmn	r0, #1
   116fc:	bne	11708 <coda_XmlInitEncodingNS+0x38>
   11700:	mov	r0, #0
   11704:	b	11730 <coda_XmlInitEncodingNS+0x60>
   11708:	strb	r0, [r5, #73]	; 0x49
   1170c:	ldr	r0, [pc, #56]	; 1174c <coda_XmlInitEncodingNS+0x7c>
   11710:	str	r0, [r5]
   11714:	ldr	r2, [pc, #44]	; 11748 <coda_XmlInitEncodingNS+0x78>
   11718:	str	r2, [r5, #4]
   1171c:	ldr	r1, [pc, #32]	; 11744 <coda_XmlInitEncodingNS+0x74>
   11720:	str	r1, [r5, #52]	; 0x34
   11724:	str	r4, [r5, #76]	; 0x4c
   11728:	str	r5, [r4]
   1172c:	mov	r0, #1
   11730:	ldr	r4, [sp, #8]
   11734:	ldr	r5, [sp, #12]
   11738:	ldr	lr, [sp, #4]
   1173c:	add	sp, sp, #16
   11740:	bx	lr
	...

00011750 <findEncodingNS>:
   11750:	mov	ip, sp
   11754:	sub	sp, sp, #168	; 0xa8
   11758:	str	ip, [sp, #4]
   1175c:	str	lr, [sp, #8]
   11760:	str	r4, [sp, #16]
   11764:	str	r5, [sp, #20]
   11768:	str	r6, [sp, #24]
   1176c:	mov	r4, r2
   11770:	mov	r5, r0
   11774:	str	r1, [sp, #36]	; 0x24
   11778:	add	r1, sp, #40	; 0x28
   1177c:	str	r1, [sp, #32]
   11780:	ldr	r6, [r5, #60]	; 0x3c
   11784:	add	r1, sp, #36	; 0x24
   11788:	add	r3, sp, #32
   1178c:	add	r0, sp, #167	; 0xa7
   11790:	str	r0, [sp]
   11794:	mov	r2, r4
   11798:	mov	r0, r5
   1179c:	blx	r6
   117a0:	ldr	r2, [sp, #36]	; 0x24
   117a4:	cmp	r2, r4
   117a8:	beq	117b4 <findEncodingNS+0x64>
   117ac:	mov	r0, #0
   117b0:	b	11808 <findEncodingNS+0xb8>
   117b4:	ldr	r0, [sp, #32]
   117b8:	mov	r2, #0
   117bc:	strb	r2, [r0]
   117c0:	add	r0, sp, #40	; 0x28
   117c4:	ldr	r1, [pc, #84]	; 11820 <findEncodingNS+0xd0>
   117c8:	bl	fcd8 <streqci>
   117cc:	cmp	r0, #0
   117d0:	beq	117e8 <findEncodingNS+0x98>
   117d4:	ldr	r1, [r5, #68]	; 0x44
   117d8:	cmp	r1, #2
   117dc:	bne	117e8 <findEncodingNS+0x98>
   117e0:	mov	r0, r5
   117e4:	b	11808 <findEncodingNS+0xb8>
   117e8:	add	r0, sp, #40	; 0x28
   117ec:	bl	10edc <getEncodingIndex>
   117f0:	cmn	r0, #1
   117f4:	bne	11800 <findEncodingNS+0xb0>
   117f8:	mov	r0, #0
   117fc:	b	11808 <findEncodingNS+0xb8>
   11800:	ldr	r3, [pc, #28]	; 11824 <findEncodingNS+0xd4>
   11804:	ldr	r0, [r3, r0, lsl #2]
   11808:	ldr	r4, [sp, #16]
   1180c:	ldr	r5, [sp, #20]
   11810:	ldr	r6, [sp, #24]
   11814:	ldr	lr, [sp, #8]
   11818:	add	sp, sp, #168	; 0xa8
   1181c:	bx	lr
   11820:	.word	0x00001b75
   11824:	.word	0x00001bc4

00011828 <coda_XmlParseXmlDeclNS>:
   11828:	mov	ip, sp
   1182c:	sub	sp, sp, #72	; 0x48
   11830:	str	ip, [sp, #28]
   11834:	str	lr, [sp, #32]
   11838:	str	r4, [sp, #40]	; 0x28
   1183c:	str	r5, [sp, #44]	; 0x2c
   11840:	str	r6, [sp, #48]	; 0x30
   11844:	str	r7, [sp, #52]	; 0x34
   11848:	str	r8, [sp, #56]	; 0x38
   1184c:	str	r9, [sp, #60]	; 0x3c
   11850:	str	sl, [sp, #64]	; 0x40
   11854:	ldr	r5, [ip, #20]
   11858:	ldr	r8, [ip, #16]
   1185c:	ldr	r6, [ip, #12]
   11860:	ldr	r7, [ip, #8]
   11864:	ldr	r4, [ip, #4]
   11868:	ldr	r9, [ip]
   1186c:	ldr	sl, [pc, #84]	; 118c8 <coda_XmlParseXmlDeclNS+0xa0>
   11870:	str	r5, [sp, #24]
   11874:	str	r8, [sp, #20]
   11878:	str	r6, [sp, #16]
   1187c:	str	r7, [sp, #12]
   11880:	str	r4, [sp, #8]
   11884:	str	r9, [sp, #4]
   11888:	str	r3, [sp]
   1188c:	mov	r3, r2
   11890:	mov	r2, r1
   11894:	mov	r1, r0
   11898:	mov	r0, sl
   1189c:	bl	101b8 <doParseXmlDecl>
   118a0:	ldr	r4, [sp, #40]	; 0x28
   118a4:	ldr	r5, [sp, #44]	; 0x2c
   118a8:	ldr	r6, [sp, #48]	; 0x30
   118ac:	ldr	r7, [sp, #52]	; 0x34
   118b0:	ldr	r8, [sp, #56]	; 0x38
   118b4:	ldr	r9, [sp, #60]	; 0x3c
   118b8:	ldr	sl, [sp, #64]	; 0x40
   118bc:	ldr	lr, [sp, #32]
   118c0:	add	sp, sp, #72	; 0x48
   118c4:	bx	lr
   118c8:	.word	0x00000000

000118cc <coda_XmlInitUnknownEncodingNS>:
   118cc:	mov	ip, sp
   118d0:	sub	sp, sp, #8
   118d4:	str	ip, [sp]
   118d8:	str	lr, [sp, #4]
   118dc:	bl	10b58 <coda_XmlInitUnknownEncoding>
   118e0:	cmp	r0, #0
   118e4:	beq	118f0 <coda_XmlInitUnknownEncodingNS+0x24>
   118e8:	mov	r2, #23
   118ec:	strb	r2, [r0, #134]	; 0x86
   118f0:	ldr	lr, [sp, #4]
   118f4:	add	sp, sp, #8
   118f8:	bx	lr
