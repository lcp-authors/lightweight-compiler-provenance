
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-tree.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <get_item_for_cursor>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4:	subs	r4, r0, #0
   8:	mov	r7, r3
   c:	beq	f0 <get_item_for_cursor+0xf0>
  10:	ldr	r3, [r2, #4]
  14:	mov	r6, r1
  18:	sub	r3, r3, #1
  1c:	cmp	r3, r1
  20:	mov	r5, r2
  24:	ble	c4 <get_item_for_cursor+0xc4>
  28:	ldr	r2, [r4, #16]
  2c:	cmp	r2, #0
  30:	ble	90 <get_item_for_cursor+0x90>
  34:	add	r1, r1, #1
  38:	ldr	lr, [r4, #20]
  3c:	add	r3, r5, r1, lsl #4
  40:	sub	r2, r2, #1
  44:	ldr	ip, [r3, #12]
  48:	mov	r0, #0
  4c:	cmp	r2, r0
  50:	beq	84 <get_item_for_cursor+0x84>
  54:	add	r3, r2, r0
  58:	add	r3, r3, r3, lsr #31
  5c:	asr	r3, r3, #1
  60:	mov	r8, r3
  64:	ldr	r9, [lr, r3, lsl #2]
  68:	cmp	ip, r9
  6c:	bgt	e8 <get_item_for_cursor+0xe8>
  70:	mov	r2, r3
  74:	add	r3, r0, r3
  78:	cmp	r0, r2
  7c:	add	r3, r3, r3, lsr #31
  80:	bne	5c <get_item_for_cursor+0x5c>
  84:	ldr	r3, [lr, r2, lsl #2]
  88:	cmp	ip, r3
  8c:	beq	fc <get_item_for_cursor+0xfc>
  90:	ldr	r0, [r4, #12]
  94:	cmp	r0, #0
  98:	beq	f0 <get_item_for_cursor+0xf0>
  9c:	mov	r2, r5
  a0:	add	r1, r6, #1
  a4:	mov	r3, r7
  a8:	bl	0 <get_item_for_cursor>
  ac:	cmp	r0, #0
  b0:	bne	124 <get_item_for_cursor+0x124>
  b4:	cmp	r7, #0
  b8:	beq	f0 <get_item_for_cursor+0xf0>
  bc:	mov	r0, #0
  c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
  c4:	ldr	r3, [r4, #4]
  c8:	cmp	r3, #0
  cc:	ble	f0 <get_item_for_cursor+0xf0>
  d0:	ldr	r2, [r4, #8]
  d4:	sub	r3, r3, #-1073741823	; 0xc0000001
  d8:	mov	r0, #0
  dc:	ldr	r3, [r2, r3, lsl #2]
  e0:	str	r3, [r7]
  e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
  e8:	add	r0, r3, #1
  ec:	b	4c <get_item_for_cursor+0x4c>
  f0:	mov	r0, #0
  f4:	str	r0, [r7]
  f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
  fc:	ldr	r0, [r4, #24]
 100:	mov	r3, r7
 104:	ldr	r0, [r0, r2, lsl #2]
 108:	mov	r2, r5
 10c:	bl	0 <get_item_for_cursor>
 110:	cmp	r0, #0
 114:	bne	124 <get_item_for_cursor+0x124>
 118:	cmp	r7, #0
 11c:	bne	bc <get_item_for_cursor+0xbc>
 120:	b	90 <get_item_for_cursor+0x90>
 124:	mvn	r0, #0
 128:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0000012c <coda_tree_node_new>:
 12c:	push	{r4, r5, lr}
 130:	mov	r5, r0
 134:	sub	sp, sp, #12
 138:	mov	r0, #28
 13c:	bl	0 <malloc>
 140:	subs	r4, r0, #0
 144:	beq	174 <coda_tree_node_new+0x48>
 148:	mov	r3, #0
 14c:	str	r5, [r4]
 150:	str	r3, [r4, #4]
 154:	str	r3, [r4, #8]
 158:	str	r3, [r4, #12]
 15c:	str	r3, [r4, #16]
 160:	str	r3, [r4, #20]
 164:	str	r3, [r4, #24]
 168:	mov	r0, r4
 16c:	add	sp, sp, #12
 170:	pop	{r4, r5, pc}
 174:	mov	r3, #53	; 0x35
 178:	str	r3, [sp]
 17c:	mov	r2, #28
 180:	ldr	r3, [pc, #12]	; 194 <coda_tree_node_new+0x68>
 184:	ldr	r1, [pc, #12]	; 198 <coda_tree_node_new+0x6c>
 188:	mvn	r0, #0
 18c:	bl	0 <coda_set_error>
 190:	b	168 <coda_tree_node_new+0x3c>
 194:	.word	0x00000000
 198:	.word	0x00000048

0000019c <tree_node_get_node_for_index.constprop.3>:
 19c:	ldr	ip, [r0, #16]
 1a0:	push	{r4, r5, r6, r7, r8, lr}
 1a4:	cmp	ip, #0
 1a8:	sub	sp, sp, #16
 1ac:	mov	r6, r0
 1b0:	mov	r4, r1
 1b4:	mov	r5, r2
 1b8:	ble	330 <tree_node_get_node_for_index.constprop.3+0x194>
 1bc:	sub	r1, ip, #1
 1c0:	mov	r2, #0
 1c4:	cmp	r2, r1
 1c8:	ldr	r0, [r0, #20]
 1cc:	beq	220 <tree_node_get_node_for_index.constprop.3+0x84>
 1d0:	add	r3, r2, r1
 1d4:	add	r3, r3, r3, lsr #31
 1d8:	asr	r3, r3, #1
 1dc:	mov	lr, r3
 1e0:	ldr	r7, [r0, r3, lsl #2]
 1e4:	cmp	r4, r7
 1e8:	bgt	214 <tree_node_get_node_for_index.constprop.3+0x78>
 1ec:	mov	r1, r3
 1f0:	add	r3, r2, r3
 1f4:	cmp	r2, r1
 1f8:	add	r3, r3, r3, lsr #31
 1fc:	beq	220 <tree_node_get_node_for_index.constprop.3+0x84>
 200:	asr	r3, r3, #1
 204:	mov	lr, r3
 208:	ldr	r7, [r0, r3, lsl #2]
 20c:	cmp	r7, r4
 210:	bge	1ec <tree_node_get_node_for_index.constprop.3+0x50>
 214:	add	r2, lr, #1
 218:	cmp	r2, r1
 21c:	bne	1d0 <tree_node_get_node_for_index.constprop.3+0x34>
 220:	ldr	r3, [r0, r2, lsl #2]
 224:	cmp	r4, r3
 228:	beq	354 <tree_node_get_node_for_index.constprop.3+0x1b8>
 22c:	add	r1, ip, #1
 230:	ldr	r7, [r6]
 234:	lsl	r1, r1, #2
 238:	bl	0 <realloc>
 23c:	cmp	r0, #0
 240:	moveq	r3, #204	; 0xcc
 244:	ldreq	r2, [r6, #16]
 248:	beq	374 <tree_node_get_node_for_index.constprop.3+0x1d8>
 24c:	ldr	r1, [r6, #16]
 250:	str	r0, [r6, #20]
 254:	add	r1, r1, #1
 258:	ldr	r0, [r6, #24]
 25c:	lsl	r1, r1, #2
 260:	bl	0 <realloc>
 264:	cmp	r0, #0
 268:	beq	36c <tree_node_get_node_for_index.constprop.3+0x1d0>
 26c:	cmn	r4, #1
 270:	str	r0, [r6, #24]
 274:	beq	338 <tree_node_get_node_for_index.constprop.3+0x19c>
 278:	add	r1, sp, #12
 27c:	mov	r0, r7
 280:	bl	0 <coda_type_get_class>
 284:	ldr	r3, [sp, #12]
 288:	add	r8, sp, #8
 28c:	cmp	r3, #6
 290:	beq	3ac <tree_node_get_node_for_index.constprop.3+0x210>
 294:	cmp	r3, #1
 298:	beq	394 <tree_node_get_node_for_index.constprop.3+0x1f8>
 29c:	mov	r2, r8
 2a0:	mov	r0, r7
 2a4:	mov	r1, r4
 2a8:	bl	0 <coda_type_get_record_field_type>
 2ac:	cmp	r0, #0
 2b0:	bne	34c <tree_node_get_node_for_index.constprop.3+0x1b0>
 2b4:	ldr	r0, [sp, #8]
 2b8:	bl	12c <coda_tree_node_new>
 2bc:	subs	ip, r0, #0
 2c0:	beq	34c <tree_node_get_node_for_index.constprop.3+0x1b0>
 2c4:	ldr	r7, [r6, #16]
 2c8:	ldr	r8, [r6, #24]
 2cc:	cmp	r7, #0
 2d0:	str	ip, [r5]
 2d4:	ldr	r5, [r6, #20]
 2d8:	ble	314 <tree_node_get_node_for_index.constprop.3+0x178>
 2dc:	mov	r3, r5
 2e0:	add	r0, r5, r7, lsl #2
 2e4:	mov	r2, r8
 2e8:	ldr	r1, [r3]
 2ec:	add	r3, r3, #4
 2f0:	cmp	r1, r4
 2f4:	add	r2, r2, #4
 2f8:	ldrgt	lr, [r2, #-4]
 2fc:	strgt	r4, [r3, #-4]
 300:	strgt	ip, [r2, #-4]
 304:	movgt	r4, r1
 308:	movgt	ip, lr
 30c:	cmp	r0, r3
 310:	bne	2e8 <tree_node_get_node_for_index.constprop.3+0x14c>
 314:	mov	r0, #0
 318:	add	r3, r7, #1
 31c:	str	r4, [r5, r7, lsl #2]
 320:	str	ip, [r8, r7, lsl #2]
 324:	str	r3, [r6, #16]
 328:	add	sp, sp, #16
 32c:	pop	{r4, r5, r6, r7, r8, pc}
 330:	ldr	r0, [r0, #20]
 334:	b	22c <tree_node_get_node_for_index.constprop.3+0x90>
 338:	mov	r0, r7
 33c:	add	r1, sp, #8
 340:	bl	0 <coda_type_get_attributes>
 344:	cmp	r0, #0
 348:	beq	2b4 <tree_node_get_node_for_index.constprop.3+0x118>
 34c:	mvn	r0, #0
 350:	b	328 <tree_node_get_node_for_index.constprop.3+0x18c>
 354:	ldr	r3, [r6, #24]
 358:	mov	r0, #0
 35c:	ldr	r3, [r3, r2, lsl #2]
 360:	str	r3, [r5]
 364:	add	sp, sp, #16
 368:	pop	{r4, r5, r6, r7, r8, pc}
 36c:	ldr	r2, [r6, #16]
 370:	mov	r3, #212	; 0xd4
 374:	add	r2, r2, #1
 378:	str	r3, [sp]
 37c:	lsl	r2, r2, #2
 380:	ldr	r3, [pc, #80]	; 3d8 <tree_node_get_node_for_index.constprop.3+0x23c>
 384:	ldr	r1, [pc, #80]	; 3dc <tree_node_get_node_for_index.constprop.3+0x240>
 388:	mvn	r0, #0
 38c:	bl	0 <coda_set_error>
 390:	b	34c <tree_node_get_node_for_index.constprop.3+0x1b0>
 394:	mov	r1, r8
 398:	mov	r0, r7
 39c:	bl	0 <coda_type_get_array_base_type>
 3a0:	cmp	r0, #0
 3a4:	beq	2b4 <tree_node_get_node_for_index.constprop.3+0x118>
 3a8:	b	34c <tree_node_get_node_for_index.constprop.3+0x1b0>
 3ac:	mov	r0, r7
 3b0:	mov	r1, r8
 3b4:	bl	0 <coda_type_get_special_base_type>
 3b8:	cmp	r0, #0
 3bc:	bne	34c <tree_node_get_node_for_index.constprop.3+0x1b0>
 3c0:	ldr	r7, [sp, #8]
 3c4:	add	r1, sp, #12
 3c8:	mov	r0, r7
 3cc:	bl	0 <coda_type_get_class>
 3d0:	ldr	r3, [sp, #12]
 3d4:	b	294 <tree_node_get_node_for_index.constprop.3+0xf8>
 3d8:	.word	0x00000000
 3dc:	.word	0x00000048

000003e0 <coda_tree_node_delete>:
 3e0:	push	{r4, r5, r6, lr}
 3e4:	mov	r5, r0
 3e8:	ldr	r0, [r0, #12]
 3ec:	mov	r6, r1
 3f0:	cmp	r0, #0
 3f4:	beq	3fc <coda_tree_node_delete+0x1c>
 3f8:	bl	3e0 <coda_tree_node_delete>
 3fc:	ldr	r0, [r5, #20]
 400:	cmp	r0, #0
 404:	beq	40c <coda_tree_node_delete+0x2c>
 408:	bl	0 <free>
 40c:	ldr	r2, [r5, #24]
 410:	cmp	r2, #0
 414:	beq	458 <coda_tree_node_delete+0x78>
 418:	ldr	ip, [r5, #16]
 41c:	cmp	ip, #0
 420:	ble	450 <coda_tree_node_delete+0x70>
 424:	mov	r4, #0
 428:	ldr	r3, [r2, r4, lsl #2]
 42c:	mov	r1, r6
 430:	subs	r0, r3, #0
 434:	add	r4, r4, #1
 438:	beq	448 <coda_tree_node_delete+0x68>
 43c:	bl	3e0 <coda_tree_node_delete>
 440:	ldr	r2, [r5, #24]
 444:	ldr	ip, [r5, #16]
 448:	cmp	ip, r4
 44c:	bgt	428 <coda_tree_node_delete+0x48>
 450:	mov	r0, r2
 454:	bl	0 <free>
 458:	ldr	r2, [r5, #8]
 45c:	cmp	r2, #0
 460:	beq	4a4 <coda_tree_node_delete+0xc4>
 464:	cmp	r6, #0
 468:	beq	49c <coda_tree_node_delete+0xbc>
 46c:	ldr	r1, [r5, #4]
 470:	cmp	r1, #0
 474:	ble	49c <coda_tree_node_delete+0xbc>
 478:	mov	r4, #0
 47c:	ldr	r3, [r2, r4, lsl #2]
 480:	add	r4, r4, #1
 484:	subs	r0, r3, #0
 488:	beq	494 <coda_tree_node_delete+0xb4>
 48c:	blx	r6
 490:	ldmib	r5, {r1, r2}
 494:	cmp	r1, r4
 498:	bgt	47c <coda_tree_node_delete+0x9c>
 49c:	mov	r0, r2
 4a0:	bl	0 <free>
 4a4:	mov	r0, r5
 4a8:	pop	{r4, r5, r6, lr}
 4ac:	b	0 <free>

000004b0 <coda_tree_node_add_item_for_path>:
 4b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 4b4:	mov	r6, r1
 4b8:	ldrb	r1, [r1]
 4bc:	sub	sp, sp, #36	; 0x24
 4c0:	mov	fp, r3
 4c4:	cmp	r1, #47	; 0x2f
 4c8:	str	r0, [sp, #12]
 4cc:	str	r2, [sp, #8]
 4d0:	movne	r5, #0
 4d4:	beq	7c0 <coda_tree_node_add_item_for_path+0x310>
 4d8:	ldr	r0, [sp, #12]
 4dc:	ldr	r8, [pc, #1008]	; 8d4 <coda_tree_node_add_item_for_path+0x424>
 4e0:	ldr	r9, [pc, #1008]	; 8d8 <coda_tree_node_add_item_for_path+0x428>
 4e4:	ldr	sl, [pc, #1008]	; 8dc <coda_tree_node_add_item_for_path+0x42c>
 4e8:	ldrb	r3, [r6, r5]
 4ec:	add	r4, r6, r5
 4f0:	cmp	r3, #0
 4f4:	beq	5e4 <coda_tree_node_add_item_for_path+0x134>
 4f8:	cmp	r3, #64	; 0x40
 4fc:	beq	648 <coda_tree_node_add_item_for_path+0x198>
 500:	ldr	r0, [r0]
 504:	add	r1, sp, #20
 508:	bl	0 <coda_type_get_class>
 50c:	ldr	r3, [sp, #20]
 510:	cmp	r3, #6
 514:	beq	744 <coda_tree_node_add_item_for_path+0x294>
 518:	ldrb	r3, [r4]
 51c:	cmp	r3, #91	; 0x5b
 520:	beq	668 <coda_tree_node_add_item_for_path+0x1b8>
 524:	cmp	r3, #47	; 0x2f
 528:	bne	7e8 <coda_tree_node_add_item_for_path+0x338>
 52c:	ldr	r0, [sp, #20]
 530:	cmp	r0, #0
 534:	bne	724 <coda_tree_node_add_item_for_path+0x274>
 538:	add	r4, r5, #1
 53c:	add	r1, r6, r4
 540:	ldrb	r3, [r6, r4]
 544:	cmp	r3, #47	; 0x2f
 548:	cmpne	r3, #91	; 0x5b
 54c:	movne	r2, #1
 550:	moveq	r2, #0
 554:	tst	r3, #191	; 0xbf
 558:	moveq	r2, #0
 55c:	andne	r2, r2, #1
 560:	cmp	r2, #0
 564:	beq	7e0 <coda_tree_node_add_item_for_path+0x330>
 568:	mov	r0, r1
 56c:	mov	r5, r4
 570:	ldrb	r2, [r0, #1]!
 574:	add	r5, r5, #1
 578:	cmp	r2, #47	; 0x2f
 57c:	cmpne	r2, #91	; 0x5b
 580:	movne	r3, #1
 584:	moveq	r3, #0
 588:	tst	r2, #191	; 0xbf
 58c:	moveq	r3, #0
 590:	andne	r3, r3, #1
 594:	cmp	r3, #0
 598:	bne	570 <coda_tree_node_add_item_for_path+0xc0>
 59c:	sub	r2, r5, r4
 5a0:	ldr	r3, [sp, #12]
 5a4:	ldr	r0, [r3]
 5a8:	add	r3, sp, #24
 5ac:	bl	0 <coda_type_get_record_field_index_from_name_n>
 5b0:	cmp	r0, #0
 5b4:	bne	7b4 <coda_tree_node_add_item_for_path+0x304>
 5b8:	add	r2, sp, #12
 5bc:	ldr	r1, [sp, #24]
 5c0:	ldr	r0, [sp, #12]
 5c4:	bl	19c <tree_node_get_node_for_index.constprop.3>
 5c8:	cmp	r0, #0
 5cc:	bne	7b4 <coda_tree_node_add_item_for_path+0x304>
 5d0:	ldrb	r3, [r6, r5]
 5d4:	ldr	r0, [sp, #12]
 5d8:	add	r4, r6, r5
 5dc:	cmp	r3, #0
 5e0:	bne	4f8 <coda_tree_node_add_item_for_path+0x48>
 5e4:	ldr	r0, [r0]
 5e8:	add	r1, sp, #20
 5ec:	bl	0 <coda_type_get_class>
 5f0:	cmp	fp, #0
 5f4:	beq	604 <coda_tree_node_add_item_for_path+0x154>
 5f8:	ldr	r3, [sp, #20]
 5fc:	cmp	r3, #1
 600:	bls	8bc <coda_tree_node_add_item_for_path+0x40c>
 604:	ldr	r4, [sp, #12]
 608:	ldr	r1, [r4, #4]
 60c:	ldr	r0, [r4, #8]
 610:	add	r1, r1, #1
 614:	lsl	r1, r1, #2
 618:	bl	0 <realloc>
 61c:	cmp	r0, #0
 620:	beq	790 <coda_tree_node_add_item_for_path+0x2e0>
 624:	ldr	r3, [r4, #4]
 628:	ldr	r1, [sp, #8]
 62c:	add	r2, r3, #1
 630:	str	r0, [r4, #8]
 634:	str	r1, [r0, r3, lsl #2]
 638:	mov	r0, #0
 63c:	str	r2, [r4, #4]
 640:	add	sp, sp, #36	; 0x24
 644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 648:	add	r2, sp, #12
 64c:	mvn	r1, #0
 650:	bl	19c <tree_node_get_node_for_index.constprop.3>
 654:	cmp	r0, #0
 658:	bne	7b4 <coda_tree_node_add_item_for_path+0x304>
 65c:	add	r5, r5, #1
 660:	ldr	r0, [sp, #12]
 664:	b	4e8 <coda_tree_node_add_item_for_path+0x38>
 668:	ldr	r0, [sp, #20]
 66c:	cmp	r0, #1
 670:	beq	690 <coda_tree_node_add_item_for_path+0x1e0>
 674:	bl	0 <coda_type_get_class_name>
 678:	mov	r3, r6
 67c:	mov	r2, r5
 680:	mov	r1, sl
 684:	str	r0, [sp]
 688:	mvn	r0, #99	; 0x63
 68c:	bl	0 <coda_set_error>
 690:	add	r4, r5, #1
 694:	add	r7, r6, r4
 698:	ldrb	r3, [r6, r4]
 69c:	cmp	r3, #93	; 0x5d
 6a0:	cmpne	r3, #0
 6a4:	beq	76c <coda_tree_node_add_item_for_path+0x2bc>
 6a8:	mov	r2, r7
 6ac:	mov	r5, r4
 6b0:	ldrb	r3, [r2, #1]!
 6b4:	add	r5, r5, #1
 6b8:	cmp	r3, #0
 6bc:	cmpne	r3, #93	; 0x5d
 6c0:	bne	6b0 <coda_tree_node_add_item_for_path+0x200>
 6c4:	cmp	r3, #0
 6c8:	beq	868 <coda_tree_node_add_item_for_path+0x3b8>
 6cc:	cmp	r4, r5
 6d0:	beq	778 <coda_tree_node_add_item_for_path+0x2c8>
 6d4:	add	r3, sp, #28
 6d8:	add	r2, sp, #24
 6dc:	mov	r1, r9
 6e0:	mov	r0, r7
 6e4:	bl	0 <__isoc99_sscanf>
 6e8:	cmp	r0, #1
 6ec:	bne	84c <coda_tree_node_add_item_for_path+0x39c>
 6f0:	ldr	r3, [sp, #28]
 6f4:	sub	r4, r5, r4
 6f8:	cmp	r4, r3
 6fc:	bne	850 <coda_tree_node_add_item_for_path+0x3a0>
 700:	add	r2, sp, #12
 704:	ldr	r1, [sp, #24]
 708:	ldr	r0, [sp, #12]
 70c:	bl	19c <tree_node_get_node_for_index.constprop.3>
 710:	cmp	r0, #0
 714:	bne	7b4 <coda_tree_node_add_item_for_path+0x304>
 718:	ldr	r0, [sp, #12]
 71c:	add	r5, r5, #1
 720:	b	4e8 <coda_tree_node_add_item_for_path+0x38>
 724:	bl	0 <coda_type_get_class_name>
 728:	mov	r3, r6
 72c:	mov	r2, r5
 730:	mov	r1, r8
 734:	str	r0, [sp]
 738:	mvn	r0, #99	; 0x63
 73c:	bl	0 <coda_set_error>
 740:	b	538 <coda_tree_node_add_item_for_path+0x88>
 744:	ldr	r3, [sp, #12]
 748:	add	r1, sp, #28
 74c:	ldr	r0, [r3]
 750:	bl	0 <coda_type_get_special_base_type>
 754:	cmp	r0, #0
 758:	bne	7b4 <coda_tree_node_add_item_for_path+0x304>
 75c:	add	r1, sp, #20
 760:	ldr	r0, [sp, #28]
 764:	bl	0 <coda_type_get_class>
 768:	b	518 <coda_tree_node_add_item_for_path+0x68>
 76c:	cmp	r3, #0
 770:	beq	868 <coda_tree_node_add_item_for_path+0x3b8>
 774:	mov	r5, r4
 778:	ldr	r4, [sp, #12]
 77c:	ldr	r0, [r4, #12]
 780:	cmp	r0, #0
 784:	beq	7fc <coda_tree_node_add_item_for_path+0x34c>
 788:	str	r0, [sp, #12]
 78c:	b	71c <coda_tree_node_add_item_for_path+0x26c>
 790:	ldr	r2, [r4, #4]
 794:	mov	r3, #119	; 0x77
 798:	add	r2, r2, #1
 79c:	str	r3, [sp]
 7a0:	lsl	r2, r2, #2
 7a4:	ldr	r3, [pc, #308]	; 8e0 <coda_tree_node_add_item_for_path+0x430>
 7a8:	ldr	r1, [pc, #308]	; 8e4 <coda_tree_node_add_item_for_path+0x434>
 7ac:	mvn	r0, #0
 7b0:	bl	0 <coda_set_error>
 7b4:	mvn	r0, #0
 7b8:	add	sp, sp, #36	; 0x24
 7bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 7c0:	ldrb	r3, [r6, #1]
 7c4:	cmp	r3, #91	; 0x5b
 7c8:	cmpne	r3, #47	; 0x2f
 7cc:	moveq	r5, #1
 7d0:	movne	r5, #0
 7d4:	tst	r3, #191	; 0xbf
 7d8:	orreq	r5, r5, #1
 7dc:	b	4d8 <coda_tree_node_add_item_for_path+0x28>
 7e0:	mov	r5, r4
 7e4:	b	5a0 <coda_tree_node_add_item_for_path+0xf0>
 7e8:	mov	r2, r6
 7ec:	ldr	r1, [pc, #244]	; 8e8 <coda_tree_node_add_item_for_path+0x438>
 7f0:	mvn	r0, #99	; 0x63
 7f4:	bl	0 <coda_set_error>
 7f8:	b	7b4 <coda_tree_node_add_item_for_path+0x304>
 7fc:	ldr	r7, [r4]
 800:	add	r1, sp, #24
 804:	mov	r0, r7
 808:	bl	0 <coda_type_get_class>
 80c:	ldr	r3, [sp, #24]
 810:	cmp	r3, #6
 814:	beq	87c <coda_tree_node_add_item_for_path+0x3cc>
 818:	cmp	r3, #1
 81c:	bne	8a8 <coda_tree_node_add_item_for_path+0x3f8>
 820:	mov	r0, r7
 824:	add	r1, sp, #28
 828:	bl	0 <coda_type_get_array_base_type>
 82c:	cmp	r0, #0
 830:	bne	7b4 <coda_tree_node_add_item_for_path+0x304>
 834:	ldr	r0, [sp, #28]
 838:	bl	12c <coda_tree_node_new>
 83c:	cmp	r0, #0
 840:	str	r0, [r4, #12]
 844:	bne	788 <coda_tree_node_add_item_for_path+0x2d8>
 848:	b	7b4 <coda_tree_node_add_item_for_path+0x304>
 84c:	sub	r4, r5, r4
 850:	mov	r3, r7
 854:	mov	r2, r4
 858:	ldr	r1, [pc, #140]	; 8ec <coda_tree_node_add_item_for_path+0x43c>
 85c:	mvn	r0, #99	; 0x63
 860:	bl	0 <coda_set_error>
 864:	b	7b4 <coda_tree_node_add_item_for_path+0x304>
 868:	mov	r2, r6
 86c:	ldr	r1, [pc, #124]	; 8f0 <coda_tree_node_add_item_for_path+0x440>
 870:	mvn	r0, #99	; 0x63
 874:	bl	0 <coda_set_error>
 878:	b	7b4 <coda_tree_node_add_item_for_path+0x304>
 87c:	mov	r0, r7
 880:	add	r1, sp, #28
 884:	bl	0 <coda_type_get_special_base_type>
 888:	cmp	r0, #0
 88c:	bne	7b4 <coda_tree_node_add_item_for_path+0x304>
 890:	ldr	r7, [sp, #28]
 894:	add	r1, sp, #24
 898:	mov	r0, r7
 89c:	bl	0 <coda_type_get_class>
 8a0:	ldr	r3, [sp, #24]
 8a4:	b	818 <coda_tree_node_add_item_for_path+0x368>
 8a8:	ldr	r3, [pc, #68]	; 8f4 <coda_tree_node_add_item_for_path+0x444>
 8ac:	mov	r2, #149	; 0x95
 8b0:	ldr	r1, [pc, #40]	; 8e0 <coda_tree_node_add_item_for_path+0x430>
 8b4:	ldr	r0, [pc, #60]	; 8f8 <coda_tree_node_add_item_for_path+0x448>
 8b8:	bl	0 <__assert_fail>
 8bc:	mvn	r0, #99	; 0x63
 8c0:	mov	r2, r6
 8c4:	ldr	r1, [pc, #48]	; 8fc <coda_tree_node_add_item_for_path+0x44c>
 8c8:	bl	0 <coda_set_error>
 8cc:	mvn	r0, #0
 8d0:	b	7b8 <coda_tree_node_add_item_for_path+0x308>
 8d4:	.word	0x00000134
 8d8:	.word	0x000000e4
 8dc:	.word	0x00000080
 8e0:	.word	0x00000000
 8e4:	.word	0x00000048
 8e8:	.word	0x00000110
 8ec:	.word	0x000000ec
 8f0:	.word	0x000000a4
 8f4:	.word	0x00000000
 8f8:	.word	0x000000c4
 8fc:	.word	0x00000158

00000900 <coda_tree_node_get_item_for_cursor>:
 900:	mov	r3, r2
 904:	mov	r2, r1
 908:	mov	r1, #0
 90c:	b	0 <get_item_for_cursor>
