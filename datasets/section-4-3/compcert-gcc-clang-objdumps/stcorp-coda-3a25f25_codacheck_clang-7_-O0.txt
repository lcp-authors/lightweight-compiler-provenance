
../compcert-repos/stcorp-coda-3a25f25/codacheck:     file format elf32-littlearm


Disassembly of section .init:

00010c78 <.init>:
   10c78:	push	{r3, lr}
   10c7c:	bl	10e24 <_start@@Base+0x3c>
   10c80:	pop	{r3, pc}

Disassembly of section .plt:

00010c84 <coda_set_option_perform_boundary_checks@plt-0x14>:
   10c84:	push	{lr}		; (str lr, [sp, #-4]!)
   10c88:	ldr	lr, [pc, #4]	; 10c94 <coda_set_option_perform_boundary_checks@plt-0x4>
   10c8c:	add	lr, pc, lr
   10c90:	ldr	pc, [lr, #8]!
   10c94:	andeq	r2, r1, ip, ror #6

00010c98 <coda_set_option_perform_boundary_checks@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #73728	; 0x12000
   10ca0:	ldr	pc, [ip, #876]!	; 0x36c

00010ca4 <strcmp@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #73728	; 0x12000
   10cac:	ldr	pc, [ip, #868]!	; 0x364

00010cb0 <printf@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #73728	; 0x12000
   10cb8:	ldr	pc, [ip, #860]!	; 0x35c

00010cbc <coda_set_error@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #73728	; 0x12000
   10cc4:	ldr	pc, [ip, #852]!	; 0x354

00010cc8 <coda_open@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #73728	; 0x12000
   10cd0:	ldr	pc, [ip, #844]!	; 0x34c

00010cd4 <fflush@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #73728	; 0x12000
   10cdc:	ldr	pc, [ip, #836]!	; 0x344

00010ce0 <coda_set_option_use_mmap@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #73728	; 0x12000
   10ce8:	ldr	pc, [ip, #828]!	; 0x33c

00010cec <coda_cursor_print_path@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #73728	; 0x12000
   10cf4:	ldr	pc, [ip, #820]!	; 0x334

00010cf8 <coda_set_definition_path_conditional@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #73728	; 0x12000
   10d00:	ldr	pc, [ip, #812]!	; 0x32c

00010d04 <getchar@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #73728	; 0x12000
   10d0c:	ldr	pc, [ip, #804]!	; 0x324

00010d10 <coda_set_definition_path@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #73728	; 0x12000
   10d18:	ldr	pc, [ip, #796]!	; 0x31c

00010d1c <coda_recognize_file@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #73728	; 0x12000
   10d24:	ldr	pc, [ip, #788]!	; 0x314

00010d28 <coda_type_get_format_name@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #73728	; 0x12000
   10d30:	ldr	pc, [ip, #780]!	; 0x30c

00010d34 <coda_done@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #73728	; 0x12000
   10d3c:	ldr	pc, [ip, #772]!	; 0x304

00010d40 <coda_product_check@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #73728	; 0x12000
   10d48:	ldr	pc, [ip, #764]!	; 0x2fc

00010d4c <__libc_start_main@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #73728	; 0x12000
   10d54:	ldr	pc, [ip, #756]!	; 0x2f4

00010d58 <__gmon_start__@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #73728	; 0x12000
   10d60:	ldr	pc, [ip, #748]!	; 0x2ec

00010d64 <exit@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #73728	; 0x12000
   10d6c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d70 <fprintf@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #73728	; 0x12000
   10d78:	ldr	pc, [ip, #732]!	; 0x2dc

00010d7c <coda_init@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #73728	; 0x12000
   10d84:	ldr	pc, [ip, #724]!	; 0x2d4

00010d88 <ungetc@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #73728	; 0x12000
   10d90:	ldr	pc, [ip, #716]!	; 0x2cc

00010d94 <coda_set_option_perform_conversions@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #73728	; 0x12000
   10d9c:	ldr	pc, [ip, #708]!	; 0x2c4

00010da0 <coda_close@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #73728	; 0x12000
   10da8:	ldr	pc, [ip, #700]!	; 0x2bc

00010dac <coda_errno_to_string@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #73728	; 0x12000
   10db4:	ldr	pc, [ip, #692]!	; 0x2b4

00010db8 <coda_get_libcoda_version@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #73728	; 0x12000
   10dc0:	ldr	pc, [ip, #684]!	; 0x2ac

00010dc4 <coda_get_errno@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #73728	; 0x12000
   10dcc:	ldr	pc, [ip, #676]!	; 0x2a4

00010dd0 <abort@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #73728	; 0x12000
   10dd8:	ldr	pc, [ip, #668]!	; 0x29c

00010ddc <__assert_fail@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #73728	; 0x12000
   10de4:	ldr	pc, [ip, #660]!	; 0x294

Disassembly of section .text:

00010de8 <_start@@Base>:
   10de8:	mov	fp, #0
   10dec:	mov	lr, #0
   10df0:	pop	{r1}		; (ldr r1, [sp], #4)
   10df4:	mov	r2, sp
   10df8:	push	{r2}		; (str r2, [sp, #-4]!)
   10dfc:	push	{r0}		; (str r0, [sp, #-4]!)
   10e00:	ldr	ip, [pc, #16]	; 10e18 <_start@@Base+0x30>
   10e04:	push	{ip}		; (str ip, [sp, #-4]!)
   10e08:	ldr	r0, [pc, #12]	; 10e1c <_start@@Base+0x34>
   10e0c:	ldr	r3, [pc, #12]	; 10e20 <_start@@Base+0x38>
   10e10:	bl	10d4c <__libc_start_main@plt>
   10e14:	bl	10dd0 <abort@plt>
   10e18:	andeq	r1, r1, r4, lsr #23
   10e1c:	ldrdeq	r0, [r1], -r8
   10e20:	andeq	r1, r1, r4, asr #22
   10e24:	ldr	r3, [pc, #20]	; 10e40 <_start@@Base+0x58>
   10e28:	ldr	r2, [pc, #20]	; 10e44 <_start@@Base+0x5c>
   10e2c:	add	r3, pc, r3
   10e30:	ldr	r2, [r3, r2]
   10e34:	cmp	r2, #0
   10e38:	bxeq	lr
   10e3c:	b	10d58 <__gmon_start__@plt>
   10e40:	andeq	r2, r1, ip, asr #3
   10e44:	andeq	r0, r0, ip, ror r0
   10e48:	ldr	r0, [pc, #24]	; 10e68 <_start@@Base+0x80>
   10e4c:	ldr	r3, [pc, #24]	; 10e6c <_start@@Base+0x84>
   10e50:	cmp	r3, r0
   10e54:	bxeq	lr
   10e58:	ldr	r3, [pc, #16]	; 10e70 <_start@@Base+0x88>
   10e5c:	cmp	r3, #0
   10e60:	bxeq	lr
   10e64:	bx	r3
   10e68:	andeq	r3, r2, r8, lsl #1
   10e6c:	andeq	r3, r2, r8, lsl #1
   10e70:	andeq	r0, r0, r0
   10e74:	ldr	r0, [pc, #36]	; 10ea0 <_start@@Base+0xb8>
   10e78:	ldr	r1, [pc, #36]	; 10ea4 <_start@@Base+0xbc>
   10e7c:	sub	r1, r1, r0
   10e80:	asr	r1, r1, #2
   10e84:	add	r1, r1, r1, lsr #31
   10e88:	asrs	r1, r1, #1
   10e8c:	bxeq	lr
   10e90:	ldr	r3, [pc, #16]	; 10ea8 <_start@@Base+0xc0>
   10e94:	cmp	r3, #0
   10e98:	bxeq	lr
   10e9c:	bx	r3
   10ea0:	andeq	r3, r2, r8, lsl #1
   10ea4:	andeq	r3, r2, r8, lsl #1
   10ea8:	andeq	r0, r0, r0
   10eac:	push	{r4, lr}
   10eb0:	ldr	r4, [pc, #24]	; 10ed0 <_start@@Base+0xe8>
   10eb4:	ldrb	r3, [r4]
   10eb8:	cmp	r3, #0
   10ebc:	popne	{r4, pc}
   10ec0:	bl	10e48 <_start@@Base+0x60>
   10ec4:	mov	r3, #1
   10ec8:	strb	r3, [r4]
   10ecc:	pop	{r4, pc}
   10ed0:	muleq	r2, r4, r0
   10ed4:	b	10e74 <_start@@Base+0x8c>

00010ed8 <main@@Base>:
   10ed8:	push	{r4, r5, fp, lr}
   10edc:	add	fp, sp, #8
   10ee0:	sub	sp, sp, #72	; 0x48
   10ee4:	sub	sp, sp, #1024	; 0x400
   10ee8:	movw	r2, #0
   10eec:	str	r2, [fp, #-12]
   10ef0:	str	r0, [fp, #-16]
   10ef4:	str	r1, [fp, #-20]	; 0xffffffec
   10ef8:	str	r2, [fp, #-24]	; 0xffffffe8
   10efc:	movw	r0, #12448	; 0x30a0
   10f00:	movt	r0, #2
   10f04:	str	r2, [r0]
   10f08:	movw	r0, #12452	; 0x30a4
   10f0c:	movt	r0, #2
   10f10:	str	r2, [r0]
   10f14:	movw	r0, #1
   10f18:	str	r0, [fp, #-28]	; 0xffffffe4
   10f1c:	movw	r0, #12440	; 0x3098
   10f20:	movt	r0, #2
   10f24:	str	r2, [r0]
   10f28:	ldr	r0, [fp, #-16]
   10f2c:	cmp	r0, #1
   10f30:	beq	10f6c <main@@Base+0x94>
   10f34:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f38:	ldr	r0, [r0, #4]
   10f3c:	movw	r1, #7092	; 0x1bb4
   10f40:	movt	r1, #1
   10f44:	bl	10ca4 <strcmp@plt>
   10f48:	cmp	r0, #0
   10f4c:	beq	10f6c <main@@Base+0x94>
   10f50:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f54:	ldr	r0, [r0, #4]
   10f58:	movw	r1, #7095	; 0x1bb7
   10f5c:	movt	r1, #1
   10f60:	bl	10ca4 <strcmp@plt>
   10f64:	cmp	r0, #0
   10f68:	bne	10f78 <main@@Base+0xa0>
   10f6c:	bl	117b8 <main@@Base+0x8e0>
   10f70:	movw	r0, #0
   10f74:	bl	10d64 <exit@plt>
   10f78:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f7c:	ldr	r0, [r0, #4]
   10f80:	movw	r1, #7102	; 0x1bbe
   10f84:	movt	r1, #1
   10f88:	bl	10ca4 <strcmp@plt>
   10f8c:	cmp	r0, #0
   10f90:	beq	10fb0 <main@@Base+0xd8>
   10f94:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f98:	ldr	r0, [r0, #4]
   10f9c:	movw	r1, #7105	; 0x1bc1
   10fa0:	movt	r1, #1
   10fa4:	bl	10ca4 <strcmp@plt>
   10fa8:	cmp	r0, #0
   10fac:	bne	10fbc <main@@Base+0xe4>
   10fb0:	bl	11a5c <main@@Base+0xb84>
   10fb4:	movw	r0, #0
   10fb8:	bl	10d64 <exit@plt>
   10fbc:	movw	r0, #1
   10fc0:	str	r0, [fp, #-32]	; 0xffffffe0
   10fc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10fc8:	add	r0, r0, #1
   10fcc:	ldr	r1, [fp, #-16]
   10fd0:	cmp	r0, r1
   10fd4:	bge	11028 <main@@Base+0x150>
   10fd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   10fdc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10fe0:	add	r0, r0, r1, lsl #2
   10fe4:	ldr	r0, [r0]
   10fe8:	movw	r1, #7115	; 0x1bcb
   10fec:	movt	r1, #1
   10ff0:	bl	10ca4 <strcmp@plt>
   10ff4:	cmp	r0, #0
   10ff8:	bne	11028 <main@@Base+0x150>
   10ffc:	ldr	r0, [fp, #-20]	; 0xffffffec
   11000:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11004:	add	r1, r1, #1
   11008:	add	r0, r0, r1, lsl #2
   1100c:	ldr	r0, [r0]
   11010:	bl	10d10 <coda_set_definition_path@plt>
   11014:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11018:	add	r1, r1, #2
   1101c:	str	r1, [fp, #-32]	; 0xffffffe0
   11020:	str	r0, [sp, #52]	; 0x34
   11024:	b	1109c <main@@Base+0x1c4>
   11028:	movw	r0, #7118	; 0x1bce
   1102c:	movt	r0, #1
   11030:	str	r0, [fp, #-36]	; 0xffffffdc
   11034:	ldr	r0, [fp, #-20]	; 0xffffffec
   11038:	ldr	r0, [r0]
   1103c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11040:	movw	r1, #0
   11044:	bl	10cf8 <coda_set_definition_path_conditional@plt>
   11048:	cmp	r0, #0
   1104c:	beq	11098 <main@@Base+0x1c0>
   11050:	movw	r0, #12424	; 0x3088
   11054:	movt	r0, #2
   11058:	ldr	r0, [r0]
   1105c:	str	r0, [sp, #48]	; 0x30
   11060:	bl	10dc4 <coda_get_errno@plt>
   11064:	ldr	r0, [r0]
   11068:	bl	10dac <coda_errno_to_string@plt>
   1106c:	ldr	lr, [sp, #48]	; 0x30
   11070:	str	r0, [sp, #44]	; 0x2c
   11074:	mov	r0, lr
   11078:	movw	r1, #8953	; 0x22f9
   1107c:	movt	r1, #1
   11080:	ldr	r2, [sp, #44]	; 0x2c
   11084:	bl	10d70 <fprintf@plt>
   11088:	movw	r1, #1
   1108c:	str	r0, [sp, #40]	; 0x28
   11090:	mov	r0, r1
   11094:	bl	10d64 <exit@plt>
   11098:	b	1109c <main@@Base+0x1c4>
   1109c:	b	110a0 <main@@Base+0x1c8>
   110a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   110a4:	ldr	r1, [fp, #-16]
   110a8:	cmp	r0, r1
   110ac:	bge	1129c <main@@Base+0x3c4>
   110b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   110b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   110b8:	add	r0, r0, r1, lsl #2
   110bc:	ldr	r0, [r0]
   110c0:	movw	r1, #7144	; 0x1be8
   110c4:	movt	r1, #1
   110c8:	bl	10ca4 <strcmp@plt>
   110cc:	cmp	r0, #0
   110d0:	beq	110f8 <main@@Base+0x220>
   110d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   110d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   110dc:	add	r0, r0, r1, lsl #2
   110e0:	ldr	r0, [r0]
   110e4:	movw	r1, #7147	; 0x1beb
   110e8:	movt	r1, #1
   110ec:	bl	10ca4 <strcmp@plt>
   110f0:	cmp	r0, #0
   110f4:	bne	1110c <main@@Base+0x234>
   110f8:	movw	r0, #12448	; 0x30a0
   110fc:	movt	r0, #2
   11100:	movw	r1, #1
   11104:	str	r1, [r0]
   11108:	b	1128c <main@@Base+0x3b4>
   1110c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11110:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11114:	add	r0, r0, r1, lsl #2
   11118:	ldr	r0, [r0]
   1111c:	movw	r1, #7157	; 0x1bf5
   11120:	movt	r1, #1
   11124:	bl	10ca4 <strcmp@plt>
   11128:	cmp	r0, #0
   1112c:	beq	11154 <main@@Base+0x27c>
   11130:	ldr	r0, [fp, #-20]	; 0xffffffec
   11134:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11138:	add	r0, r0, r1, lsl #2
   1113c:	ldr	r0, [r0]
   11140:	movw	r1, #7160	; 0x1bf8
   11144:	movt	r1, #1
   11148:	bl	10ca4 <strcmp@plt>
   1114c:	cmp	r0, #0
   11150:	bne	11168 <main@@Base+0x290>
   11154:	movw	r0, #12452	; 0x30a4
   11158:	movt	r0, #2
   1115c:	movw	r1, #1
   11160:	str	r1, [r0]
   11164:	b	11288 <main@@Base+0x3b0>
   11168:	ldr	r0, [fp, #-20]	; 0xffffffec
   1116c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11170:	add	r0, r0, r1, lsl #2
   11174:	ldr	r0, [r0]
   11178:	movw	r1, #7168	; 0x1c00
   1117c:	movt	r1, #1
   11180:	bl	10ca4 <strcmp@plt>
   11184:	cmp	r0, #0
   11188:	beq	111b0 <main@@Base+0x2d8>
   1118c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11190:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11194:	add	r0, r0, r1, lsl #2
   11198:	ldr	r0, [r0]
   1119c:	movw	r1, #7171	; 0x1c03
   111a0:	movt	r1, #1
   111a4:	bl	10ca4 <strcmp@plt>
   111a8:	cmp	r0, #0
   111ac:	bne	111c4 <main@@Base+0x2ec>
   111b0:	movw	r0, #12440	; 0x3098
   111b4:	movt	r0, #2
   111b8:	movw	r1, #1
   111bc:	str	r1, [r0]
   111c0:	b	11284 <main@@Base+0x3ac>
   111c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   111c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   111cc:	add	r0, r0, r1, lsl #2
   111d0:	ldr	r0, [r0]
   111d4:	movw	r1, #7184	; 0x1c10
   111d8:	movt	r1, #1
   111dc:	bl	10ca4 <strcmp@plt>
   111e0:	cmp	r0, #0
   111e4:	bne	111f4 <main@@Base+0x31c>
   111e8:	movw	r0, #0
   111ec:	str	r0, [fp, #-28]	; 0xffffffe4
   111f0:	b	11280 <main@@Base+0x3a8>
   111f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   111f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   111fc:	add	r0, r0, r1, lsl #2
   11200:	ldr	r0, [r0]
   11204:	movw	r1, #7194	; 0x1c1a
   11208:	movt	r1, #1
   1120c:	bl	10ca4 <strcmp@plt>
   11210:	cmp	r0, #0
   11214:	bne	11238 <main@@Base+0x360>
   11218:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1121c:	ldr	r1, [fp, #-16]
   11220:	sub	r1, r1, #1
   11224:	cmp	r0, r1
   11228:	bne	11238 <main@@Base+0x360>
   1122c:	movw	r0, #1
   11230:	str	r0, [fp, #-24]	; 0xffffffe8
   11234:	b	1129c <main@@Base+0x3c4>
   11238:	ldr	r0, [fp, #-20]	; 0xffffffec
   1123c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11240:	add	r0, r0, r1, lsl #2
   11244:	ldr	r0, [r0]
   11248:	ldrb	r0, [r0]
   1124c:	cmp	r0, #45	; 0x2d
   11250:	beq	11258 <main@@Base+0x380>
   11254:	b	1129c <main@@Base+0x3c4>
   11258:	movw	r0, #12424	; 0x3088
   1125c:	movt	r0, #2
   11260:	ldr	r0, [r0]
   11264:	movw	r1, #7196	; 0x1c1c
   11268:	movt	r1, #1
   1126c:	bl	10d70 <fprintf@plt>
   11270:	str	r0, [sp, #36]	; 0x24
   11274:	bl	117b8 <main@@Base+0x8e0>
   11278:	movw	r0, #1
   1127c:	bl	10d64 <exit@plt>
   11280:	b	11284 <main@@Base+0x3ac>
   11284:	b	11288 <main@@Base+0x3b0>
   11288:	b	1128c <main@@Base+0x3b4>
   1128c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11290:	add	r0, r0, #1
   11294:	str	r0, [fp, #-32]	; 0xffffffe0
   11298:	b	110a0 <main@@Base+0x1c8>
   1129c:	bl	10d7c <coda_init@plt>
   112a0:	cmp	r0, #0
   112a4:	beq	112f0 <main@@Base+0x418>
   112a8:	movw	r0, #12424	; 0x3088
   112ac:	movt	r0, #2
   112b0:	ldr	r0, [r0]
   112b4:	str	r0, [sp, #32]
   112b8:	bl	10dc4 <coda_get_errno@plt>
   112bc:	ldr	r0, [r0]
   112c0:	bl	10dac <coda_errno_to_string@plt>
   112c4:	ldr	lr, [sp, #32]
   112c8:	str	r0, [sp, #28]
   112cc:	mov	r0, lr
   112d0:	movw	r1, #8953	; 0x22f9
   112d4:	movt	r1, #1
   112d8:	ldr	r2, [sp, #28]
   112dc:	bl	10d70 <fprintf@plt>
   112e0:	movw	r1, #1
   112e4:	str	r0, [sp, #24]
   112e8:	mov	r0, r1
   112ec:	bl	10d64 <exit@plt>
   112f0:	movw	r0, #0
   112f4:	bl	10c98 <coda_set_option_perform_boundary_checks@plt>
   112f8:	movw	lr, #0
   112fc:	str	r0, [sp, #20]
   11300:	mov	r0, lr
   11304:	bl	10d94 <coda_set_option_perform_conversions@plt>
   11308:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1130c:	str	r0, [sp, #16]
   11310:	mov	r0, lr
   11314:	bl	10ce0 <coda_set_option_use_mmap@plt>
   11318:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1131c:	cmp	lr, #0
   11320:	str	r0, [sp, #12]
   11324:	beq	1143c <main@@Base+0x564>
   11328:	b	1132c <main@@Base+0x454>
   1132c:	movw	r0, #0
   11330:	str	r0, [sp, #60]	; 0x3c
   11334:	bl	10d04 <getchar@plt>
   11338:	strb	r0, [sp, #67]	; 0x43
   1133c:	ldrb	r0, [sp, #67]	; 0x43
   11340:	cmp	r0, #13
   11344:	bne	11378 <main@@Base+0x4a0>
   11348:	bl	10d04 <getchar@plt>
   1134c:	strb	r0, [sp, #59]	; 0x3b
   11350:	ldrb	r0, [sp, #59]	; 0x3b
   11354:	cmp	r0, #10
   11358:	beq	11374 <main@@Base+0x49c>
   1135c:	ldrb	r0, [sp, #59]	; 0x3b
   11360:	movw	r1, #12432	; 0x3090
   11364:	movt	r1, #2
   11368:	ldr	r1, [r1]
   1136c:	bl	10d88 <ungetc@plt>
   11370:	str	r0, [sp, #8]
   11374:	b	11378 <main@@Base+0x4a0>
   11378:	ldrb	r0, [sp, #67]	; 0x43
   1137c:	cmn	r0, #1
   11380:	beq	1139c <main@@Base+0x4c4>
   11384:	ldrb	r0, [sp, #67]	; 0x43
   11388:	cmp	r0, #10
   1138c:	beq	1139c <main@@Base+0x4c4>
   11390:	ldrb	r0, [sp, #67]	; 0x43
   11394:	cmp	r0, #13
   11398:	bne	113b4 <main@@Base+0x4dc>
   1139c:	ldr	r0, [sp, #60]	; 0x3c
   113a0:	add	r1, sp, #68	; 0x44
   113a4:	add	r0, r1, r0
   113a8:	movw	r1, #0
   113ac:	strb	r1, [r0]
   113b0:	b	11408 <main@@Base+0x530>
   113b4:	ldrb	r0, [sp, #67]	; 0x43
   113b8:	ldr	r1, [sp, #60]	; 0x3c
   113bc:	add	r2, sp, #68	; 0x44
   113c0:	add	r1, r2, r1
   113c4:	strb	r0, [r1]
   113c8:	ldr	r0, [sp, #60]	; 0x3c
   113cc:	add	r0, r0, #1
   113d0:	str	r0, [sp, #60]	; 0x3c
   113d4:	ldr	r0, [sp, #60]	; 0x3c
   113d8:	cmp	r0, #1000	; 0x3e8
   113dc:	bge	113e4 <main@@Base+0x50c>
   113e0:	b	11404 <main@@Base+0x52c>
   113e4:	movw	r0, #7222	; 0x1c36
   113e8:	movt	r0, #1
   113ec:	movw	r1, #7231	; 0x1c3f
   113f0:	movt	r1, #1
   113f4:	movw	r2, #316	; 0x13c
   113f8:	movw	r3, #7311	; 0x1c8f
   113fc:	movt	r3, #1
   11400:	bl	10ddc <__assert_fail@plt>
   11404:	b	11334 <main@@Base+0x45c>
   11408:	ldr	r0, [sp, #60]	; 0x3c
   1140c:	cmp	r0, #0
   11410:	ble	11428 <main@@Base+0x550>
   11414:	add	r0, sp, #68	; 0x44
   11418:	bl	114b0 <main@@Base+0x5d8>
   1141c:	movw	r0, #0
   11420:	bl	10cd4 <fflush@plt>
   11424:	str	r0, [sp, #4]
   11428:	b	1142c <main@@Base+0x554>
   1142c:	ldrb	r0, [sp, #67]	; 0x43
   11430:	cmn	r0, #1
   11434:	bne	1132c <main@@Base+0x454>
   11438:	b	11484 <main@@Base+0x5ac>
   1143c:	b	11440 <main@@Base+0x568>
   11440:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11444:	ldr	r1, [fp, #-16]
   11448:	cmp	r0, r1
   1144c:	bge	11480 <main@@Base+0x5a8>
   11450:	ldr	r0, [fp, #-20]	; 0xffffffec
   11454:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11458:	add	r0, r0, r1, lsl #2
   1145c:	ldr	r0, [r0]
   11460:	bl	114b0 <main@@Base+0x5d8>
   11464:	movw	r0, #0
   11468:	bl	10cd4 <fflush@plt>
   1146c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11470:	add	r1, r1, #1
   11474:	str	r1, [fp, #-32]	; 0xffffffe0
   11478:	str	r0, [sp]
   1147c:	b	11440 <main@@Base+0x568>
   11480:	b	11484 <main@@Base+0x5ac>
   11484:	bl	10d34 <coda_done@plt>
   11488:	movw	lr, #12444	; 0x309c
   1148c:	movt	lr, #2
   11490:	ldr	lr, [lr]
   11494:	cmp	lr, #0
   11498:	beq	114a4 <main@@Base+0x5cc>
   1149c:	movw	r0, #1
   114a0:	bl	10d64 <exit@plt>
   114a4:	movw	r0, #0
   114a8:	sub	sp, fp, #8
   114ac:	pop	{r4, r5, fp, pc}
   114b0:	push	{fp, lr}
   114b4:	mov	fp, sp
   114b8:	sub	sp, sp, #120	; 0x78
   114bc:	str	r0, [fp, #-4]
   114c0:	ldr	r1, [fp, #-4]
   114c4:	movw	r0, #8960	; 0x2300
   114c8:	movt	r0, #1
   114cc:	bl	10cb0 <printf@plt>
   114d0:	ldr	r1, [fp, #-4]
   114d4:	str	r0, [fp, #-44]	; 0xffffffd4
   114d8:	mov	r0, r1
   114dc:	sub	r1, fp, #24
   114e0:	sub	r2, fp, #12
   114e4:	sub	r3, fp, #28
   114e8:	sub	lr, fp, #32
   114ec:	str	lr, [sp]
   114f0:	sub	lr, fp, #36	; 0x24
   114f4:	str	lr, [sp, #4]
   114f8:	bl	10d1c <coda_recognize_file@plt>
   114fc:	cmp	r0, #0
   11500:	beq	1154c <main@@Base+0x674>
   11504:	bl	10dc4 <coda_get_errno@plt>
   11508:	ldr	r0, [r0]
   1150c:	bl	10dac <coda_errno_to_string@plt>
   11510:	movw	lr, #8861	; 0x229d
   11514:	movt	lr, #1
   11518:	str	r0, [fp, #-48]	; 0xffffffd0
   1151c:	mov	r0, lr
   11520:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11524:	bl	10cb0 <printf@plt>
   11528:	movw	r1, #0
   1152c:	str	r0, [fp, #-52]	; 0xffffffcc
   11530:	mov	r0, r1
   11534:	bl	10cbc <coda_set_error@plt>
   11538:	movw	r0, #12444	; 0x309c
   1153c:	movt	r0, #2
   11540:	movw	r1, #1
   11544:	str	r1, [r0]
   11548:	b	117b0 <main@@Base+0x8d8>
   1154c:	movw	r0, #12440	; 0x3098
   11550:	movt	r0, #2
   11554:	ldr	r0, [r0]
   11558:	cmp	r0, #0
   1155c:	beq	115a4 <main@@Base+0x6cc>
   11560:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11564:	movw	r1, #0
   11568:	cmp	r0, r1
   1156c:	beq	11580 <main@@Base+0x6a8>
   11570:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11574:	movw	r1, #0
   11578:	cmp	r0, r1
   1157c:	bne	115a4 <main@@Base+0x6cc>
   11580:	movw	r0, #8875	; 0x22ab
   11584:	movt	r0, #1
   11588:	bl	10cb0 <printf@plt>
   1158c:	movw	lr, #12444	; 0x309c
   11590:	movt	lr, #2
   11594:	movw	r1, #1
   11598:	str	r1, [lr]
   1159c:	str	r0, [fp, #-56]	; 0xffffffc8
   115a0:	b	117b0 <main@@Base+0x8d8>
   115a4:	movw	r0, #12448	; 0x30a0
   115a8:	movt	r0, #2
   115ac:	ldr	r0, [r0]
   115b0:	cmp	r0, #0
   115b4:	beq	11628 <main@@Base+0x750>
   115b8:	ldr	r0, [fp, #-12]
   115bc:	bl	10d28 <coda_type_get_format_name@plt>
   115c0:	movw	lr, #8919	; 0x22d7
   115c4:	movt	lr, #1
   115c8:	str	r0, [sp, #60]	; 0x3c
   115cc:	mov	r0, lr
   115d0:	ldr	r1, [sp, #60]	; 0x3c
   115d4:	bl	10cb0 <printf@plt>
   115d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   115dc:	movw	lr, #0
   115e0:	cmp	r1, lr
   115e4:	str	r0, [sp, #56]	; 0x38
   115e8:	beq	11618 <main@@Base+0x740>
   115ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   115f0:	movw	r1, #0
   115f4:	cmp	r0, r1
   115f8:	beq	11618 <main@@Base+0x740>
   115fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11600:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11604:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11608:	movw	r0, #8940	; 0x22ec
   1160c:	movt	r0, #1
   11610:	bl	10cb0 <printf@plt>
   11614:	str	r0, [sp, #52]	; 0x34
   11618:	movw	r0, #8917	; 0x22d5
   1161c:	movt	r0, #1
   11620:	bl	10cb0 <printf@plt>
   11624:	str	r0, [sp, #48]	; 0x30
   11628:	ldr	r0, [fp, #-4]
   1162c:	sub	r1, fp, #8
   11630:	bl	10cc8 <coda_open@plt>
   11634:	str	r0, [fp, #-40]	; 0xffffffd8
   11638:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1163c:	cmp	r0, #0
   11640:	beq	11680 <main@@Base+0x7a8>
   11644:	bl	10dc4 <coda_get_errno@plt>
   11648:	ldr	r0, [r0]
   1164c:	cmn	r0, #21
   11650:	bne	11680 <main@@Base+0x7a8>
   11654:	movw	r0, #0
   11658:	bl	10ce0 <coda_set_option_use_mmap@plt>
   1165c:	ldr	lr, [fp, #-4]
   11660:	str	r0, [sp, #44]	; 0x2c
   11664:	mov	r0, lr
   11668:	sub	r1, fp, #8
   1166c:	bl	10cc8 <coda_open@plt>
   11670:	str	r0, [fp, #-40]	; 0xffffffd8
   11674:	movw	r0, #1
   11678:	bl	10ce0 <coda_set_option_use_mmap@plt>
   1167c:	str	r0, [sp, #40]	; 0x28
   11680:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11684:	cmp	r0, #0
   11688:	beq	116c8 <main@@Base+0x7f0>
   1168c:	bl	10dc4 <coda_get_errno@plt>
   11690:	ldr	r0, [r0]
   11694:	bl	10dac <coda_errno_to_string@plt>
   11698:	movw	lr, #8861	; 0x229d
   1169c:	movt	lr, #1
   116a0:	str	r0, [sp, #36]	; 0x24
   116a4:	mov	r0, lr
   116a8:	ldr	r1, [sp, #36]	; 0x24
   116ac:	bl	10cb0 <printf@plt>
   116b0:	movw	r1, #12444	; 0x309c
   116b4:	movt	r1, #2
   116b8:	movw	lr, #1
   116bc:	str	lr, [r1]
   116c0:	str	r0, [sp, #32]
   116c4:	b	117b0 <main@@Base+0x8d8>
   116c8:	ldr	r0, [fp, #-8]
   116cc:	movw	r1, #12452	; 0x30a4
   116d0:	movt	r1, #2
   116d4:	ldr	r1, [r1]
   116d8:	cmp	r1, #0
   116dc:	movw	r1, #0
   116e0:	movne	r1, #1
   116e4:	mvn	r2, #0
   116e8:	eor	r1, r1, r2
   116ec:	and	r1, r1, #1
   116f0:	movw	r2, #6840	; 0x1ab8
   116f4:	movt	r2, #1
   116f8:	movw	r3, #0
   116fc:	bl	10d40 <coda_product_check@plt>
   11700:	cmp	r0, #0
   11704:	beq	11754 <main@@Base+0x87c>
   11708:	bl	10dc4 <coda_get_errno@plt>
   1170c:	ldr	r0, [r0]
   11710:	bl	10dac <coda_errno_to_string@plt>
   11714:	movw	lr, #8861	; 0x229d
   11718:	movt	lr, #1
   1171c:	str	r0, [sp, #28]
   11720:	mov	r0, lr
   11724:	ldr	r1, [sp, #28]
   11728:	bl	10cb0 <printf@plt>
   1172c:	movw	r1, #12444	; 0x309c
   11730:	movt	r1, #2
   11734:	movw	lr, #1
   11738:	str	lr, [r1]
   1173c:	ldr	r1, [fp, #-8]
   11740:	str	r0, [sp, #24]
   11744:	mov	r0, r1
   11748:	bl	10da0 <coda_close@plt>
   1174c:	str	r0, [sp, #20]
   11750:	b	117b0 <main@@Base+0x8d8>
   11754:	ldr	r0, [fp, #-8]
   11758:	bl	10da0 <coda_close@plt>
   1175c:	cmp	r0, #0
   11760:	beq	117a0 <main@@Base+0x8c8>
   11764:	bl	10dc4 <coda_get_errno@plt>
   11768:	ldr	r0, [r0]
   1176c:	bl	10dac <coda_errno_to_string@plt>
   11770:	movw	lr, #8951	; 0x22f7
   11774:	movt	lr, #1
   11778:	str	r0, [sp, #16]
   1177c:	mov	r0, lr
   11780:	ldr	r1, [sp, #16]
   11784:	bl	10cb0 <printf@plt>
   11788:	movw	r1, #12444	; 0x309c
   1178c:	movt	r1, #2
   11790:	movw	lr, #1
   11794:	str	lr, [r1]
   11798:	str	r0, [sp, #12]
   1179c:	b	117b0 <main@@Base+0x8d8>
   117a0:	movw	r0, #8917	; 0x22d5
   117a4:	movt	r0, #1
   117a8:	bl	10cb0 <printf@plt>
   117ac:	str	r0, [sp, #8]
   117b0:	mov	sp, fp
   117b4:	pop	{fp, pc}
   117b8:	push	{fp, lr}
   117bc:	mov	fp, sp
   117c0:	sub	sp, sp, #136	; 0x88
   117c4:	movw	r0, #7334	; 0x1ca6
   117c8:	movt	r0, #1
   117cc:	bl	10cb0 <printf@plt>
   117d0:	movw	lr, #7342	; 0x1cae
   117d4:	movt	lr, #1
   117d8:	str	r0, [fp, #-4]
   117dc:	mov	r0, lr
   117e0:	bl	10cb0 <printf@plt>
   117e4:	movw	lr, #7397	; 0x1ce5
   117e8:	movt	lr, #1
   117ec:	str	r0, [fp, #-8]
   117f0:	mov	r0, lr
   117f4:	bl	10cb0 <printf@plt>
   117f8:	movw	lr, #7470	; 0x1d2e
   117fc:	movt	lr, #1
   11800:	str	r0, [fp, #-12]
   11804:	mov	r0, lr
   11808:	bl	10cb0 <printf@plt>
   1180c:	movw	lr, #7488	; 0x1d40
   11810:	movt	lr, #1
   11814:	str	r0, [fp, #-16]
   11818:	mov	r0, lr
   1181c:	bl	10cb0 <printf@plt>
   11820:	movw	lr, #7518	; 0x1d5e
   11824:	movt	lr, #1
   11828:	str	r0, [fp, #-20]	; 0xffffffec
   1182c:	mov	r0, lr
   11830:	bl	10cb0 <printf@plt>
   11834:	movw	lr, #7596	; 0x1dac
   11838:	movt	lr, #1
   1183c:	str	r0, [fp, #-24]	; 0xffffffe8
   11840:	mov	r0, lr
   11844:	bl	10cb0 <printf@plt>
   11848:	movw	lr, #7666	; 0x1df2
   1184c:	movt	lr, #1
   11850:	str	r0, [fp, #-28]	; 0xffffffe4
   11854:	mov	r0, lr
   11858:	bl	10cb0 <printf@plt>
   1185c:	movw	lr, #7743	; 0x1e3f
   11860:	movt	lr, #1
   11864:	str	r0, [fp, #-32]	; 0xffffffe0
   11868:	mov	r0, lr
   1186c:	bl	10cb0 <printf@plt>
   11870:	movw	lr, #7768	; 0x1e58
   11874:	movt	lr, #1
   11878:	str	r0, [fp, #-36]	; 0xffffffdc
   1187c:	mov	r0, lr
   11880:	bl	10cb0 <printf@plt>
   11884:	movw	lr, #7831	; 0x1e97
   11888:	movt	lr, #1
   1188c:	str	r0, [fp, #-40]	; 0xffffffd8
   11890:	mov	r0, lr
   11894:	bl	10cb0 <printf@plt>
   11898:	movw	lr, #7887	; 0x1ecf
   1189c:	movt	lr, #1
   118a0:	str	r0, [fp, #-44]	; 0xffffffd4
   118a4:	mov	r0, lr
   118a8:	bl	10cb0 <printf@plt>
   118ac:	movw	lr, #7914	; 0x1eea
   118b0:	movt	lr, #1
   118b4:	str	r0, [fp, #-48]	; 0xffffffd0
   118b8:	mov	r0, lr
   118bc:	bl	10cb0 <printf@plt>
   118c0:	movw	lr, #7984	; 0x1f30
   118c4:	movt	lr, #1
   118c8:	str	r0, [fp, #-52]	; 0xffffffcc
   118cc:	mov	r0, lr
   118d0:	bl	10cb0 <printf@plt>
   118d4:	movw	lr, #8007	; 0x1f47
   118d8:	movt	lr, #1
   118dc:	str	r0, [fp, #-56]	; 0xffffffc8
   118e0:	mov	r0, lr
   118e4:	bl	10cb0 <printf@plt>
   118e8:	movw	lr, #8917	; 0x22d5
   118ec:	movt	lr, #1
   118f0:	str	r0, [fp, #-60]	; 0xffffffc4
   118f4:	mov	r0, lr
   118f8:	bl	10cb0 <printf@plt>
   118fc:	movw	lr, #8071	; 0x1f87
   11900:	movt	lr, #1
   11904:	str	r0, [fp, #-64]	; 0xffffffc0
   11908:	mov	r0, lr
   1190c:	bl	10cb0 <printf@plt>
   11910:	movw	lr, #8150	; 0x1fd6
   11914:	movt	lr, #1
   11918:	str	r0, [sp, #68]	; 0x44
   1191c:	mov	r0, lr
   11920:	bl	10cb0 <printf@plt>
   11924:	movw	lr, #8917	; 0x22d5
   11928:	movt	lr, #1
   1192c:	str	r0, [sp, #64]	; 0x40
   11930:	mov	r0, lr
   11934:	bl	10cb0 <printf@plt>
   11938:	movw	lr, #8179	; 0x1ff3
   1193c:	movt	lr, #1
   11940:	str	r0, [sp, #60]	; 0x3c
   11944:	mov	r0, lr
   11948:	bl	10cb0 <printf@plt>
   1194c:	movw	lr, #8205	; 0x200d
   11950:	movt	lr, #1
   11954:	str	r0, [sp, #56]	; 0x38
   11958:	mov	r0, lr
   1195c:	bl	10cb0 <printf@plt>
   11960:	movw	lr, #8917	; 0x22d5
   11964:	movt	lr, #1
   11968:	str	r0, [sp, #52]	; 0x34
   1196c:	mov	r0, lr
   11970:	bl	10cb0 <printf@plt>
   11974:	movw	lr, #8236	; 0x202c
   11978:	movt	lr, #1
   1197c:	str	r0, [sp, #48]	; 0x30
   11980:	mov	r0, lr
   11984:	bl	10cb0 <printf@plt>
   11988:	movw	lr, #8265	; 0x2049
   1198c:	movt	lr, #1
   11990:	str	r0, [sp, #44]	; 0x2c
   11994:	mov	r0, lr
   11998:	bl	10cb0 <printf@plt>
   1199c:	movw	lr, #8917	; 0x22d5
   119a0:	movt	lr, #1
   119a4:	str	r0, [sp, #40]	; 0x28
   119a8:	mov	r0, lr
   119ac:	bl	10cb0 <printf@plt>
   119b0:	movw	lr, #8316	; 0x207c
   119b4:	movt	lr, #1
   119b8:	str	r0, [sp, #36]	; 0x24
   119bc:	mov	r0, lr
   119c0:	bl	10cb0 <printf@plt>
   119c4:	movw	lr, #8395	; 0x20cb
   119c8:	movt	lr, #1
   119cc:	str	r0, [sp, #32]
   119d0:	mov	r0, lr
   119d4:	bl	10cb0 <printf@plt>
   119d8:	movw	lr, #8469	; 0x2115
   119dc:	movt	lr, #1
   119e0:	str	r0, [sp, #28]
   119e4:	mov	r0, lr
   119e8:	bl	10cb0 <printf@plt>
   119ec:	movw	lr, #8513	; 0x2141
   119f0:	movt	lr, #1
   119f4:	str	r0, [sp, #24]
   119f8:	mov	r0, lr
   119fc:	bl	10cb0 <printf@plt>
   11a00:	movw	lr, #8590	; 0x218e
   11a04:	movt	lr, #1
   11a08:	str	r0, [sp, #20]
   11a0c:	mov	r0, lr
   11a10:	bl	10cb0 <printf@plt>
   11a14:	movw	lr, #8661	; 0x21d5
   11a18:	movt	lr, #1
   11a1c:	str	r0, [sp, #16]
   11a20:	mov	r0, lr
   11a24:	bl	10cb0 <printf@plt>
   11a28:	movw	lr, #8725	; 0x2215
   11a2c:	movt	lr, #1
   11a30:	str	r0, [sp, #12]
   11a34:	mov	r0, lr
   11a38:	bl	10cb0 <printf@plt>
   11a3c:	movw	lr, #8917	; 0x22d5
   11a40:	movt	lr, #1
   11a44:	str	r0, [sp, #8]
   11a48:	mov	r0, lr
   11a4c:	bl	10cb0 <printf@plt>
   11a50:	str	r0, [sp, #4]
   11a54:	mov	sp, fp
   11a58:	pop	{fp, pc}
   11a5c:	push	{fp, lr}
   11a60:	mov	fp, sp
   11a64:	sub	sp, sp, #16
   11a68:	bl	10db8 <coda_get_libcoda_version@plt>
   11a6c:	movw	lr, #8790	; 0x2256
   11a70:	movt	lr, #1
   11a74:	str	r0, [fp, #-4]
   11a78:	mov	r0, lr
   11a7c:	ldr	r1, [fp, #-4]
   11a80:	bl	10cb0 <printf@plt>
   11a84:	movw	r1, #8812	; 0x226c
   11a88:	movt	r1, #1
   11a8c:	str	r0, [sp, #8]
   11a90:	mov	r0, r1
   11a94:	bl	10cb0 <printf@plt>
   11a98:	movw	r1, #8917	; 0x22d5
   11a9c:	movt	r1, #1
   11aa0:	str	r0, [sp, #4]
   11aa4:	mov	r0, r1
   11aa8:	bl	10cb0 <printf@plt>
   11aac:	str	r0, [sp]
   11ab0:	mov	sp, fp
   11ab4:	pop	{fp, pc}
   11ab8:	push	{fp, lr}
   11abc:	mov	fp, sp
   11ac0:	sub	sp, sp, #32
   11ac4:	str	r0, [fp, #-4]
   11ac8:	str	r1, [fp, #-8]
   11acc:	str	r2, [fp, #-12]
   11ad0:	ldr	r1, [fp, #-8]
   11ad4:	movw	r0, #8964	; 0x2304
   11ad8:	movt	r0, #1
   11adc:	bl	10cb0 <printf@plt>
   11ae0:	ldr	r1, [fp, #-4]
   11ae4:	movw	r2, #0
   11ae8:	cmp	r1, r2
   11aec:	str	r0, [sp, #16]
   11af0:	beq	11b1c <main@@Base+0xc44>
   11af4:	movw	r0, #8976	; 0x2310
   11af8:	movt	r0, #1
   11afc:	bl	10cb0 <printf@plt>
   11b00:	ldr	lr, [fp, #-4]
   11b04:	str	r0, [sp, #12]
   11b08:	mov	r0, lr
   11b0c:	movw	r1, #3248	; 0xcb0
   11b10:	movt	r1, #1
   11b14:	bl	10cec <coda_cursor_print_path@plt>
   11b18:	str	r0, [sp, #8]
   11b1c:	movw	r0, #8917	; 0x22d5
   11b20:	movt	r0, #1
   11b24:	bl	10cb0 <printf@plt>
   11b28:	movw	lr, #12444	; 0x309c
   11b2c:	movt	lr, #2
   11b30:	movw	r1, #1
   11b34:	str	r1, [lr]
   11b38:	str	r0, [sp, #4]
   11b3c:	mov	sp, fp
   11b40:	pop	{fp, pc}

00011b44 <__libc_csu_init@@Base>:
   11b44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b48:	mov	r7, r0
   11b4c:	ldr	r6, [pc, #72]	; 11b9c <__libc_csu_init@@Base+0x58>
   11b50:	ldr	r5, [pc, #72]	; 11ba0 <__libc_csu_init@@Base+0x5c>
   11b54:	add	r6, pc, r6
   11b58:	add	r5, pc, r5
   11b5c:	sub	r6, r6, r5
   11b60:	mov	r8, r1
   11b64:	mov	r9, r2
   11b68:	bl	10c78 <coda_set_option_perform_boundary_checks@plt-0x20>
   11b6c:	asrs	r6, r6, #2
   11b70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b74:	mov	r4, #0
   11b78:	add	r4, r4, #1
   11b7c:	ldr	r3, [r5], #4
   11b80:	mov	r2, r9
   11b84:	mov	r1, r8
   11b88:	mov	r0, r7
   11b8c:	blx	r3
   11b90:	cmp	r6, r4
   11b94:	bne	11b78 <__libc_csu_init@@Base+0x34>
   11b98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b9c:	muleq	r1, r8, r3
   11ba0:	muleq	r1, r0, r3

00011ba4 <__libc_csu_fini@@Base>:
   11ba4:	bx	lr

Disassembly of section .fini:

00011ba8 <.fini>:
   11ba8:	push	{r3, lr}
   11bac:	pop	{r3, pc}
