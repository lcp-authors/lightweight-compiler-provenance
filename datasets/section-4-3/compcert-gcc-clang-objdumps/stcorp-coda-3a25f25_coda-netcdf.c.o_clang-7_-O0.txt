
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-netcdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_netcdf_reopen>:
       0:	push	{r4, sl, fp, lr}
       4:	add	fp, sp, #8
       8:	sub	sp, sp, #136	; 0x88
       c:	str	r0, [fp, #-16]
      10:	mov	r0, #0
      14:	str	r0, [fp, #-60]	; 0xffffffc4
      18:	str	r0, [sp, #76]	; 0x4c
      1c:	str	r0, [sp, #72]	; 0x48
      20:	mvn	r0, #0
      24:	str	r0, [sp, #68]	; 0x44
      28:	movw	r0, #64	; 0x40
      2c:	bl	0 <malloc>
      30:	str	r0, [fp, #-20]	; 0xffffffec
      34:	ldr	r0, [fp, #-20]	; 0xffffffec
      38:	movw	lr, #0
      3c:	cmp	r0, lr
      40:	bne	84 <coda_netcdf_reopen+0x84>
      44:	mvn	r0, #0
      48:	movw	r1, #0
      4c:	movt	r1, #0
      50:	movw	r2, #64	; 0x40
      54:	movw	r3, #0
      58:	movt	r3, #0
      5c:	movw	ip, #801	; 0x321
      60:	str	ip, [sp]
      64:	bl	0 <coda_set_error>
      68:	ldr	r0, [fp, #-16]
      6c:	ldr	r0, [r0]
      70:	bl	0 <coda_close>
      74:	mvn	r1, #0
      78:	str	r1, [fp, #-12]
      7c:	str	r0, [sp, #64]	; 0x40
      80:	b	520 <coda_netcdf_reopen+0x520>
      84:	ldr	r0, [fp, #-20]	; 0xffffffec
      88:	mov	r1, #0
      8c:	str	r1, [r0]
      90:	ldr	r0, [fp, #-16]
      94:	ldr	r0, [r0]
      98:	ldr	r2, [r0, #8]
      9c:	ldr	r0, [r0, #12]
      a0:	ldr	r3, [fp, #-20]	; 0xffffffec
      a4:	str	r0, [r3, #12]
      a8:	str	r2, [r3, #8]
      ac:	ldr	r0, [fp, #-20]	; 0xffffffec
      b0:	mov	r2, #6
      b4:	str	r2, [r0, #16]
      b8:	ldr	r0, [fp, #-20]	; 0xffffffec
      bc:	str	r1, [r0, #20]
      c0:	ldr	r0, [fp, #-20]	; 0xffffffec
      c4:	str	r1, [r0, #24]
      c8:	ldr	r0, [fp, #-20]	; 0xffffffec
      cc:	str	r1, [r0, #28]
      d0:	ldr	r0, [fp, #-20]	; 0xffffffec
      d4:	str	r1, [r0, #32]
      d8:	ldr	r0, [fp, #-20]	; 0xffffffec
      dc:	str	r1, [r0, #44]	; 0x2c
      e0:	str	r1, [r0, #40]	; 0x28
      e4:	ldr	r0, [fp, #-20]	; 0xffffffec
      e8:	movw	r1, #0
      ec:	str	r1, [r0, #48]	; 0x30
      f0:	ldr	r0, [fp, #-16]
      f4:	ldr	r0, [r0]
      f8:	ldr	r2, [fp, #-20]	; 0xffffffec
      fc:	str	r0, [r2, #52]	; 0x34
     100:	ldr	r0, [fp, #-20]	; 0xffffffec
     104:	movw	r2, #1
     108:	str	r2, [r0, #56]	; 0x38
     10c:	ldr	r0, [fp, #-20]	; 0xffffffec
     110:	str	r1, [r0, #60]	; 0x3c
     114:	ldr	r0, [fp, #-16]
     118:	ldr	r0, [r0]
     11c:	ldr	r0, [r0]
     120:	bl	0 <strdup>
     124:	ldr	r1, [fp, #-20]	; 0xffffffec
     128:	str	r0, [r1]
     12c:	ldr	r0, [fp, #-20]	; 0xffffffec
     130:	ldr	r0, [r0]
     134:	movw	r1, #0
     138:	cmp	r0, r1
     13c:	bne	174 <coda_netcdf_reopen+0x174>
     140:	mvn	r0, #0
     144:	movw	r1, #0
     148:	movt	r1, #0
     14c:	movw	r2, #0
     150:	movt	r2, #0
     154:	movw	r3, #823	; 0x337
     158:	bl	0 <coda_set_error>
     15c:	ldr	r0, [fp, #-20]	; 0xffffffec
     160:	bl	52c <coda_netcdf_close>
     164:	mvn	r1, #0
     168:	str	r1, [fp, #-12]
     16c:	str	r0, [sp, #60]	; 0x3c
     170:	b	520 <coda_netcdf_reopen+0x520>
     174:	movw	r0, #6
     178:	bl	0 <coda_type_record_new>
     17c:	str	r0, [fp, #-24]	; 0xffffffe8
     180:	ldr	r0, [fp, #-24]	; 0xffffffe8
     184:	movw	lr, #0
     188:	cmp	r0, lr
     18c:	bne	1a8 <coda_netcdf_reopen+0x1a8>
     190:	ldr	r0, [fp, #-20]	; 0xffffffec
     194:	bl	52c <coda_netcdf_close>
     198:	mvn	lr, #0
     19c:	str	lr, [fp, #-12]
     1a0:	str	r0, [sp, #56]	; 0x38
     1a4:	b	520 <coda_netcdf_reopen+0x520>
     1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1ac:	movw	r1, #0
     1b0:	bl	0 <coda_mem_record_new>
     1b4:	str	r0, [fp, #-32]	; 0xffffffe0
     1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1bc:	bl	0 <coda_type_release>
     1c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     1c4:	movw	r1, #0
     1c8:	cmp	r0, r1
     1cc:	bne	1e8 <coda_netcdf_reopen+0x1e8>
     1d0:	ldr	r0, [fp, #-20]	; 0xffffffec
     1d4:	bl	52c <coda_netcdf_close>
     1d8:	mvn	lr, #0
     1dc:	str	lr, [fp, #-12]
     1e0:	str	r0, [sp, #52]	; 0x34
     1e4:	b	520 <coda_netcdf_reopen+0x520>
     1e8:	sub	r0, fp, #36	; 0x24
     1ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
     1f0:	ldr	r2, [fp, #-20]	; 0xffffffec
     1f4:	str	r1, [r2, #20]
     1f8:	ldr	r1, [fp, #-20]	; 0xffffffec
     1fc:	ldr	r1, [r1, #52]	; 0x34
     200:	ldr	r2, [sp, #72]	; 0x48
     204:	ldr	r3, [sp, #76]	; 0x4c
     208:	mov	ip, sp
     20c:	str	r0, [ip, #8]
     210:	mov	r0, #0
     214:	str	r0, [ip, #4]
     218:	mov	r0, #4
     21c:	str	r0, [ip]
     220:	mov	r0, r1
     224:	bl	5dc <read_bytes>
     228:	cmp	r0, #0
     22c:	bge	270 <coda_netcdf_reopen+0x270>
     230:	bl	0 <__errno_location>
     234:	ldr	r0, [r0]
     238:	bl	0 <strerror>
     23c:	mvn	lr, #21
     240:	str	r0, [sp, #48]	; 0x30
     244:	mov	r0, lr
     248:	movw	r1, #0
     24c:	movt	r1, #0
     250:	ldr	r2, [sp, #48]	; 0x30
     254:	bl	0 <coda_set_error>
     258:	ldr	r0, [fp, #-20]	; 0xffffffec
     25c:	bl	52c <coda_netcdf_close>
     260:	mvn	r1, #0
     264:	str	r1, [fp, #-12]
     268:	str	r0, [sp, #44]	; 0x2c
     26c:	b	520 <coda_netcdf_reopen+0x520>
     270:	ldrb	r0, [fp, #-36]	; 0xffffffdc
     274:	cmp	r0, #67	; 0x43
     278:	bne	298 <coda_netcdf_reopen+0x298>
     27c:	ldrb	r0, [fp, #-35]	; 0xffffffdd
     280:	cmp	r0, #68	; 0x44
     284:	bne	298 <coda_netcdf_reopen+0x298>
     288:	ldrb	r0, [fp, #-34]	; 0xffffffde
     28c:	cmp	r0, #70	; 0x46
     290:	bne	298 <coda_netcdf_reopen+0x298>
     294:	b	2b8 <coda_netcdf_reopen+0x2b8>
     298:	movw	r0, #0
     29c:	movt	r0, #0
     2a0:	movw	r1, #0
     2a4:	movt	r1, #0
     2a8:	movw	r2, #851	; 0x353
     2ac:	movw	r3, #0
     2b0:	movt	r3, #0
     2b4:	bl	0 <__assert_fail>
     2b8:	ldrb	r0, [fp, #-33]	; 0xffffffdf
     2bc:	ldr	r1, [fp, #-20]	; 0xffffffec
     2c0:	str	r0, [r1, #56]	; 0x38
     2c4:	ldr	r0, [fp, #-20]	; 0xffffffec
     2c8:	ldr	r0, [r0, #56]	; 0x38
     2cc:	cmp	r0, #1
     2d0:	beq	324 <coda_netcdf_reopen+0x324>
     2d4:	ldr	r0, [fp, #-20]	; 0xffffffec
     2d8:	ldr	r0, [r0, #56]	; 0x38
     2dc:	cmp	r0, #2
     2e0:	beq	324 <coda_netcdf_reopen+0x324>
     2e4:	ldr	r0, [fp, #-20]	; 0xffffffec
     2e8:	ldr	r0, [r0, #56]	; 0x38
     2ec:	cmp	r0, #5
     2f0:	beq	324 <coda_netcdf_reopen+0x324>
     2f4:	ldr	r0, [fp, #-20]	; 0xffffffec
     2f8:	ldr	r2, [r0, #56]	; 0x38
     2fc:	mvn	r0, #199	; 0xc7
     300:	movw	r1, #0
     304:	movt	r1, #0
     308:	bl	0 <coda_set_error>
     30c:	ldr	r0, [fp, #-20]	; 0xffffffec
     310:	bl	52c <coda_netcdf_close>
     314:	mvn	r1, #0
     318:	str	r1, [fp, #-12]
     31c:	str	r0, [sp, #40]	; 0x28
     320:	b	520 <coda_netcdf_reopen+0x520>
     324:	ldr	r0, [sp, #72]	; 0x48
     328:	ldr	r1, [sp, #76]	; 0x4c
     32c:	adds	r0, r0, #4
     330:	adc	r1, r1, #0
     334:	str	r0, [sp, #72]	; 0x48
     338:	str	r1, [sp, #76]	; 0x4c
     33c:	ldr	r0, [fp, #-20]	; 0xffffffec
     340:	add	r1, sp, #72	; 0x48
     344:	sub	r2, fp, #48	; 0x30
     348:	bl	844 <read_length_value>
     34c:	cmp	r0, #0
     350:	beq	394 <coda_netcdf_reopen+0x394>
     354:	bl	0 <__errno_location>
     358:	ldr	r0, [r0]
     35c:	bl	0 <strerror>
     360:	mvn	lr, #21
     364:	str	r0, [sp, #36]	; 0x24
     368:	mov	r0, lr
     36c:	movw	r1, #0
     370:	movt	r1, #0
     374:	ldr	r2, [sp, #36]	; 0x24
     378:	bl	0 <coda_set_error>
     37c:	ldr	r0, [fp, #-20]	; 0xffffffec
     380:	bl	52c <coda_netcdf_close>
     384:	mvn	r1, #0
     388:	str	r1, [fp, #-12]
     38c:	str	r0, [sp, #32]
     390:	b	520 <coda_netcdf_reopen+0x520>
     394:	ldr	r0, [fp, #-20]	; 0xffffffec
     398:	ldr	r2, [fp, #-48]	; 0xffffffd0
     39c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     3a0:	mov	r1, sp
     3a4:	add	ip, sp, #68	; 0x44
     3a8:	str	ip, [r1, #8]
     3ac:	sub	ip, fp, #60	; 0x3c
     3b0:	str	ip, [r1, #4]
     3b4:	sub	ip, fp, #56	; 0x38
     3b8:	str	ip, [r1]
     3bc:	add	r1, sp, #72	; 0x48
     3c0:	bl	970 <read_dim_array>
     3c4:	cmp	r0, #0
     3c8:	beq	3e4 <coda_netcdf_reopen+0x3e4>
     3cc:	ldr	r0, [fp, #-20]	; 0xffffffec
     3d0:	bl	52c <coda_netcdf_close>
     3d4:	mvn	lr, #0
     3d8:	str	lr, [fp, #-12]
     3dc:	str	r0, [sp, #28]
     3e0:	b	520 <coda_netcdf_reopen+0x520>
     3e4:	ldr	r0, [fp, #-20]	; 0xffffffec
     3e8:	add	r1, sp, #72	; 0x48
     3ec:	sub	r2, fp, #28
     3f0:	movw	r3, #0
     3f4:	bl	c9c <read_att_array>
     3f8:	cmp	r0, #0
     3fc:	beq	430 <coda_netcdf_reopen+0x430>
     400:	ldr	r0, [fp, #-60]	; 0xffffffc4
     404:	movw	r1, #0
     408:	cmp	r0, r1
     40c:	beq	418 <coda_netcdf_reopen+0x418>
     410:	ldr	r0, [fp, #-60]	; 0xffffffc4
     414:	bl	0 <free>
     418:	ldr	r0, [fp, #-20]	; 0xffffffec
     41c:	bl	52c <coda_netcdf_close>
     420:	mvn	lr, #0
     424:	str	lr, [fp, #-12]
     428:	str	r0, [sp, #24]
     42c:	b	520 <coda_netcdf_reopen+0x520>
     430:	ldr	r0, [fp, #-28]	; 0xffffffe4
     434:	movw	r1, #0
     438:	cmp	r0, r1
     43c:	beq	48c <coda_netcdf_reopen+0x48c>
     440:	ldr	r0, [fp, #-32]	; 0xffffffe0
     444:	ldr	r1, [fp, #-28]	; 0xffffffe4
     448:	movw	r2, #1
     44c:	bl	0 <coda_mem_type_set_attributes>
     450:	cmp	r0, #0
     454:	beq	488 <coda_netcdf_reopen+0x488>
     458:	ldr	r0, [fp, #-60]	; 0xffffffc4
     45c:	movw	r1, #0
     460:	cmp	r0, r1
     464:	beq	470 <coda_netcdf_reopen+0x470>
     468:	ldr	r0, [fp, #-60]	; 0xffffffc4
     46c:	bl	0 <free>
     470:	ldr	r0, [fp, #-20]	; 0xffffffec
     474:	bl	52c <coda_netcdf_close>
     478:	mvn	lr, #0
     47c:	str	lr, [fp, #-12]
     480:	str	r0, [sp, #20]
     484:	b	520 <coda_netcdf_reopen+0x520>
     488:	b	48c <coda_netcdf_reopen+0x48c>
     48c:	ldr	r0, [fp, #-20]	; 0xffffffec
     490:	ldr	r2, [fp, #-56]	; 0xffffffc8
     494:	ldr	r3, [fp, #-52]	; 0xffffffcc
     498:	ldr	r1, [fp, #-60]	; 0xffffffc4
     49c:	ldr	ip, [sp, #68]	; 0x44
     4a0:	ldr	lr, [fp, #-32]	; 0xffffffe0
     4a4:	mov	r4, sp
     4a8:	str	lr, [r4, #8]
     4ac:	str	ip, [r4, #4]
     4b0:	str	r1, [r4]
     4b4:	add	r1, sp, #72	; 0x48
     4b8:	bl	1758 <read_var_array>
     4bc:	cmp	r0, #0
     4c0:	beq	4f4 <coda_netcdf_reopen+0x4f4>
     4c4:	ldr	r0, [fp, #-60]	; 0xffffffc4
     4c8:	movw	r1, #0
     4cc:	cmp	r0, r1
     4d0:	beq	4dc <coda_netcdf_reopen+0x4dc>
     4d4:	ldr	r0, [fp, #-60]	; 0xffffffc4
     4d8:	bl	0 <free>
     4dc:	ldr	r0, [fp, #-20]	; 0xffffffec
     4e0:	bl	52c <coda_netcdf_close>
     4e4:	mvn	lr, #0
     4e8:	str	lr, [fp, #-12]
     4ec:	str	r0, [sp, #16]
     4f0:	b	520 <coda_netcdf_reopen+0x520>
     4f4:	ldr	r0, [fp, #-60]	; 0xffffffc4
     4f8:	movw	r1, #0
     4fc:	cmp	r0, r1
     500:	beq	50c <coda_netcdf_reopen+0x50c>
     504:	ldr	r0, [fp, #-60]	; 0xffffffc4
     508:	bl	0 <free>
     50c:	ldr	r0, [fp, #-20]	; 0xffffffec
     510:	ldr	r1, [fp, #-16]
     514:	str	r0, [r1]
     518:	movw	r0, #0
     51c:	str	r0, [fp, #-12]
     520:	ldr	r0, [fp, #-12]
     524:	sub	sp, fp, #8
     528:	pop	{r4, sl, fp, pc}

0000052c <coda_netcdf_close>:
     52c:	push	{fp, lr}
     530:	mov	fp, sp
     534:	sub	sp, sp, #16
     538:	str	r0, [fp, #-4]
     53c:	ldr	r0, [fp, #-4]
     540:	str	r0, [sp, #8]
     544:	ldr	r0, [sp, #8]
     548:	ldr	r0, [r0]
     54c:	movw	r1, #0
     550:	cmp	r0, r1
     554:	beq	564 <coda_netcdf_close+0x38>
     558:	ldr	r0, [sp, #8]
     55c:	ldr	r0, [r0]
     560:	bl	0 <free>
     564:	ldr	r0, [sp, #8]
     568:	ldr	r0, [r0, #20]
     56c:	movw	r1, #0
     570:	cmp	r0, r1
     574:	beq	584 <coda_netcdf_close+0x58>
     578:	ldr	r0, [sp, #8]
     57c:	ldr	r0, [r0, #20]
     580:	bl	0 <coda_dynamic_type_delete>
     584:	ldr	r0, [sp, #8]
     588:	ldr	r0, [r0, #48]	; 0x30
     58c:	movw	r1, #0
     590:	cmp	r0, r1
     594:	beq	5a4 <coda_netcdf_close+0x78>
     598:	ldr	r0, [sp, #8]
     59c:	ldr	r0, [r0, #48]	; 0x30
     5a0:	bl	0 <free>
     5a4:	ldr	r0, [sp, #8]
     5a8:	ldr	r0, [r0, #52]	; 0x34
     5ac:	movw	r1, #0
     5b0:	cmp	r0, r1
     5b4:	beq	5c8 <coda_netcdf_close+0x9c>
     5b8:	ldr	r0, [sp, #8]
     5bc:	ldr	r0, [r0, #52]	; 0x34
     5c0:	bl	0 <coda_bin_close>
     5c4:	str	r0, [sp, #4]
     5c8:	ldr	r0, [sp, #8]
     5cc:	bl	0 <free>
     5d0:	movw	r0, #0
     5d4:	mov	sp, fp
     5d8:	pop	{fp, pc}

000005dc <read_bytes>:
     5dc:	push	{fp, lr}
     5e0:	mov	fp, sp
     5e4:	sub	sp, sp, #128	; 0x80
     5e8:	ldr	r1, [fp, #12]
     5ec:	ldr	ip, [fp, #8]
     5f0:	ldr	lr, [fp, #16]
     5f4:	str	r0, [fp, #-8]
     5f8:	str	r3, [fp, #-12]
     5fc:	str	r2, [fp, #-16]
     600:	str	r1, [fp, #-20]	; 0xffffffec
     604:	str	ip, [fp, #-24]	; 0xffffffe8
     608:	ldr	r0, [fp, #-8]
     60c:	ldr	r0, [r0, #48]	; 0x30
     610:	movw	r1, #0
     614:	cmp	r0, r1
     618:	str	lr, [sp, #36]	; 0x24
     61c:	beq	73c <read_bytes+0x160>
     620:	ldr	r0, [fp, #-16]
     624:	ldr	r1, [fp, #-12]
     628:	ldr	r2, [fp, #-24]	; 0xffffffe8
     62c:	ldr	r3, [fp, #-20]	; 0xffffffec
     630:	adds	r0, r0, r2
     634:	adc	r1, r1, r3
     638:	ldr	r2, [fp, #-8]
     63c:	ldr	r3, [r2, #40]	; 0x28
     640:	ldr	r2, [r2, #44]	; 0x2c
     644:	subs	r0, r3, r0
     648:	sbcs	r1, r2, r1
     64c:	str	r0, [sp, #32]
     650:	str	r1, [sp, #28]
     654:	bcs	71c <read_bytes+0x140>
     658:	b	65c <read_bytes+0x80>
     65c:	ldr	r0, [fp, #-8]
     660:	ldr	r0, [r0, #16]
     664:	cmp	r0, #0
     668:	beq	67c <read_bytes+0xa0>
     66c:	ldr	r0, [fp, #-8]
     670:	ldr	r0, [r0, #16]
     674:	cmp	r0, #1
     678:	bne	698 <read_bytes+0xbc>
     67c:	mvn	r0, #300	; 0x12c
     680:	movw	r1, #0
     684:	movt	r1, #0
     688:	bl	0 <coda_set_error>
     68c:	mvn	r0, #0
     690:	str	r0, [fp, #-4]
     694:	b	838 <read_bytes+0x25c>
     698:	add	r2, sp, #41	; 0x29
     69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     6a0:	ldr	r1, [fp, #-20]	; 0xffffffec
     6a4:	sub	r3, fp, #45	; 0x2d
     6a8:	str	r2, [sp, #24]
     6ac:	mov	r2, r3
     6b0:	bl	0 <coda_str64>
     6b4:	ldr	r0, [fp, #-16]
     6b8:	ldr	r1, [fp, #-12]
     6bc:	add	r2, sp, #62	; 0x3e
     6c0:	bl	0 <coda_str64>
     6c4:	ldr	r0, [fp, #-8]
     6c8:	ldr	r1, [r0, #40]	; 0x28
     6cc:	ldr	r0, [r0, #44]	; 0x2c
     6d0:	str	r0, [sp, #20]
     6d4:	mov	r0, r1
     6d8:	ldr	r1, [sp, #20]
     6dc:	ldr	r2, [sp, #24]
     6e0:	bl	0 <coda_str64>
     6e4:	add	r0, sp, #41	; 0x29
     6e8:	add	r3, sp, #62	; 0x3e
     6ec:	sub	r2, fp, #45	; 0x2d
     6f0:	mvn	r1, #300	; 0x12c
     6f4:	str	r0, [sp, #16]
     6f8:	mov	r0, r1
     6fc:	movw	r1, #0
     700:	movt	r1, #0
     704:	ldr	lr, [sp, #16]
     708:	str	lr, [sp]
     70c:	bl	0 <coda_set_error>
     710:	mvn	r0, #0
     714:	str	r0, [fp, #-4]
     718:	b	838 <read_bytes+0x25c>
     71c:	ldr	r0, [fp, #16]
     720:	ldr	r1, [fp, #-8]
     724:	ldr	r1, [r1, #48]	; 0x30
     728:	ldr	r2, [fp, #-16]
     72c:	add	r1, r1, r2
     730:	ldr	r2, [fp, #-24]	; 0xffffffe8
     734:	bl	0 <memcpy>
     738:	b	830 <read_bytes+0x254>
     73c:	ldr	r0, [fp, #-8]
     740:	ldr	r0, [r0, #16]
     744:	cmp	r0, #0
     748:	beq	75c <read_bytes+0x180>
     74c:	ldr	r0, [fp, #-8]
     750:	ldr	r0, [r0, #16]
     754:	cmp	r0, #1
     758:	bne	760 <read_bytes+0x184>
     75c:	b	780 <read_bytes+0x1a4>
     760:	movw	r0, #0
     764:	movt	r0, #0
     768:	movw	r1, #0
     76c:	movt	r1, #0
     770:	movw	r2, #83	; 0x53
     774:	movw	r3, #0
     778:	movt	r3, #0
     77c:	bl	0 <__assert_fail>
     780:	ldr	r0, [fp, #-16]
     784:	ldr	r1, [fp, #-12]
     788:	ldr	r2, [fp, #-24]	; 0xffffffe8
     78c:	ldr	r3, [fp, #-20]	; 0xffffffec
     790:	adds	r0, r0, r2
     794:	adc	r1, r1, r3
     798:	ldr	r2, [fp, #-8]
     79c:	ldr	r3, [r2, #8]
     7a0:	ldr	r2, [r2, #12]
     7a4:	subs	r0, r3, r0
     7a8:	sbcs	r1, r2, r1
     7ac:	str	r0, [sp, #12]
     7b0:	str	r1, [sp, #8]
     7b4:	bcs	7d8 <read_bytes+0x1fc>
     7b8:	b	7bc <read_bytes+0x1e0>
     7bc:	mvn	r0, #300	; 0x12c
     7c0:	movw	r1, #0
     7c4:	movt	r1, #0
     7c8:	bl	0 <coda_set_error>
     7cc:	mvn	r0, #0
     7d0:	str	r0, [fp, #-4]
     7d4:	b	838 <read_bytes+0x25c>
     7d8:	ldr	r0, [fp, #-8]
     7dc:	ldr	r0, [r0, #56]	; 0x38
     7e0:	ldr	r1, [fp, #16]
     7e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
     7e8:	ldr	r3, [fp, #-16]
     7ec:	bl	0 <pread>
     7f0:	cmp	r0, #0
     7f4:	bge	82c <read_bytes+0x250>
     7f8:	bl	0 <__errno_location>
     7fc:	ldr	r0, [r0]
     800:	bl	0 <strerror>
     804:	mvn	lr, #21
     808:	str	r0, [sp, #4]
     80c:	mov	r0, lr
     810:	movw	r1, #0
     814:	movt	r1, #0
     818:	ldr	r2, [sp, #4]
     81c:	bl	0 <coda_set_error>
     820:	mvn	r0, #0
     824:	str	r0, [fp, #-4]
     828:	b	838 <read_bytes+0x25c>
     82c:	b	830 <read_bytes+0x254>
     830:	movw	r0, #0
     834:	str	r0, [fp, #-4]
     838:	ldr	r0, [fp, #-4]
     83c:	mov	sp, fp
     840:	pop	{fp, pc}

00000844 <read_length_value>:
     844:	push	{fp, lr}
     848:	mov	fp, sp
     84c:	sub	sp, sp, #32
     850:	str	r0, [fp, #-8]
     854:	str	r1, [fp, #-12]
     858:	str	r2, [sp, #16]
     85c:	ldr	r0, [fp, #-8]
     860:	ldr	r0, [r0, #56]	; 0x38
     864:	cmp	r0, #5
     868:	beq	8f0 <read_length_value+0xac>
     86c:	ldr	r0, [fp, #-8]
     870:	ldr	r0, [r0, #52]	; 0x34
     874:	ldr	r1, [fp, #-12]
     878:	ldr	r2, [r1]
     87c:	ldr	r3, [r1, #4]
     880:	add	r1, sp, #12
     884:	mov	ip, sp
     888:	str	r1, [ip, #8]
     88c:	mov	r1, #0
     890:	str	r1, [ip, #4]
     894:	mov	r1, #4
     898:	str	r1, [ip]
     89c:	bl	5dc <read_bytes>
     8a0:	cmp	r0, #0
     8a4:	bge	8b4 <read_length_value+0x70>
     8a8:	mvn	r0, #0
     8ac:	str	r0, [fp, #-4]
     8b0:	b	964 <read_length_value+0x120>
     8b4:	add	r0, sp, #12
     8b8:	bl	2210 <swap4>
     8bc:	ldr	r0, [sp, #12]
     8c0:	asr	lr, r0, #31
     8c4:	ldr	r1, [sp, #16]
     8c8:	str	r0, [r1]
     8cc:	str	lr, [r1, #4]
     8d0:	ldr	r0, [fp, #-12]
     8d4:	ldr	r1, [r0]
     8d8:	ldr	lr, [r0, #4]
     8dc:	adds	r1, r1, #4
     8e0:	adc	lr, lr, #0
     8e4:	str	r1, [r0]
     8e8:	str	lr, [r0, #4]
     8ec:	b	95c <read_length_value+0x118>
     8f0:	ldr	r0, [fp, #-8]
     8f4:	ldr	r0, [r0, #52]	; 0x34
     8f8:	ldr	r1, [fp, #-12]
     8fc:	ldr	r2, [r1]
     900:	ldr	r3, [r1, #4]
     904:	ldr	r1, [sp, #16]
     908:	mov	ip, sp
     90c:	str	r1, [ip, #8]
     910:	mov	r1, #0
     914:	str	r1, [ip, #4]
     918:	mov	r1, #8
     91c:	str	r1, [ip]
     920:	bl	5dc <read_bytes>
     924:	cmp	r0, #0
     928:	bge	938 <read_length_value+0xf4>
     92c:	mvn	r0, #0
     930:	str	r0, [fp, #-4]
     934:	b	964 <read_length_value+0x120>
     938:	ldr	r0, [sp, #16]
     93c:	bl	22d0 <swap8>
     940:	ldr	r0, [fp, #-12]
     944:	ldr	lr, [r0]
     948:	ldr	r1, [r0, #4]
     94c:	adds	lr, lr, #8
     950:	adc	r1, r1, #0
     954:	str	lr, [r0]
     958:	str	r1, [r0, #4]
     95c:	movw	r0, #0
     960:	str	r0, [fp, #-4]
     964:	ldr	r0, [fp, #-4]
     968:	mov	sp, fp
     96c:	pop	{fp, pc}

00000970 <read_dim_array>:
     970:	push	{r4, r5, fp, lr}
     974:	add	fp, sp, #8
     978:	sub	sp, sp, #72	; 0x48
     97c:	ldr	ip, [fp, #16]
     980:	ldr	lr, [fp, #12]
     984:	ldr	r4, [fp, #8]
     988:	str	r0, [fp, #-16]
     98c:	str	r1, [fp, #-20]	; 0xffffffec
     990:	str	r3, [fp, #-28]	; 0xffffffe4
     994:	str	r2, [fp, #-32]	; 0xffffffe0
     998:	ldr	r0, [fp, #-16]
     99c:	ldr	r0, [r0, #52]	; 0x34
     9a0:	ldr	r1, [fp, #-20]	; 0xffffffec
     9a4:	ldr	r2, [r1]
     9a8:	ldr	r3, [r1, #4]
     9ac:	sub	r1, fp, #36	; 0x24
     9b0:	mov	r5, sp
     9b4:	str	r1, [r5, #8]
     9b8:	mov	r1, #0
     9bc:	str	r1, [r5, #4]
     9c0:	mov	r1, #4
     9c4:	str	r1, [r5]
     9c8:	str	lr, [sp, #28]
     9cc:	str	ip, [sp, #24]
     9d0:	str	r4, [sp, #20]
     9d4:	bl	5dc <read_bytes>
     9d8:	cmp	r0, #0
     9dc:	bge	9ec <read_dim_array+0x7c>
     9e0:	mvn	r0, #0
     9e4:	str	r0, [fp, #-12]
     9e8:	b	c8c <read_dim_array+0x31c>
     9ec:	sub	r0, fp, #36	; 0x24
     9f0:	bl	2210 <swap4>
     9f4:	ldr	r0, [fp, #-20]	; 0xffffffec
     9f8:	ldr	lr, [r0]
     9fc:	ldr	r1, [r0, #4]
     a00:	adds	lr, lr, #4
     a04:	adc	r1, r1, #0
     a08:	str	lr, [r0]
     a0c:	str	r1, [r0, #4]
     a10:	ldr	r0, [fp, #-16]
     a14:	ldr	r1, [fp, #-20]	; 0xffffffec
     a18:	ldr	r2, [fp, #8]
     a1c:	bl	844 <read_length_value>
     a20:	cmp	r0, #0
     a24:	beq	a34 <read_dim_array+0xc4>
     a28:	mvn	r0, #0
     a2c:	str	r0, [fp, #-12]
     a30:	b	c8c <read_dim_array+0x31c>
     a34:	ldr	r0, [fp, #-36]	; 0xffffffdc
     a38:	cmp	r0, #0
     a3c:	bne	a84 <read_dim_array+0x114>
     a40:	ldr	r0, [fp, #8]
     a44:	ldr	r1, [r0]
     a48:	ldr	r0, [r0, #4]
     a4c:	orr	r0, r1, r0
     a50:	cmp	r0, #0
     a54:	beq	a78 <read_dim_array+0x108>
     a58:	b	a5c <read_dim_array+0xec>
     a5c:	ldr	r0, [pc, #564]	; c98 <read_dim_array+0x328>
     a60:	movw	r1, #0
     a64:	movt	r1, #0
     a68:	bl	0 <coda_set_error>
     a6c:	mvn	r0, #0
     a70:	str	r0, [fp, #-12]
     a74:	b	c8c <read_dim_array+0x31c>
     a78:	movw	r0, #0
     a7c:	str	r0, [fp, #-12]
     a80:	b	c8c <read_dim_array+0x31c>
     a84:	ldr	r0, [fp, #-36]	; 0xffffffdc
     a88:	cmp	r0, #10
     a8c:	beq	aac <read_dim_array+0x13c>
     a90:	ldr	r0, [pc, #512]	; c98 <read_dim_array+0x328>
     a94:	movw	r1, #0
     a98:	movt	r1, #0
     a9c:	bl	0 <coda_set_error>
     aa0:	mvn	r0, #0
     aa4:	str	r0, [fp, #-12]
     aa8:	b	c8c <read_dim_array+0x31c>
     aac:	ldr	r0, [fp, #8]
     ab0:	ldr	r0, [r0]
     ab4:	lsl	r0, r0, #3
     ab8:	bl	0 <malloc>
     abc:	ldr	lr, [fp, #12]
     ac0:	str	r0, [lr]
     ac4:	ldr	r0, [fp, #12]
     ac8:	ldr	r0, [r0]
     acc:	movw	lr, #0
     ad0:	cmp	r0, lr
     ad4:	bne	b24 <read_dim_array+0x1b4>
     ad8:	ldr	r0, [fp, #8]
     adc:	ldr	r1, [r0]
     ae0:	ldr	r0, [r0, #4]
     ae4:	lsl	r0, r0, #3
     ae8:	orr	r3, r0, r1, lsr #29
     aec:	lsl	r2, r1, #3
     af0:	mov	r0, sp
     af4:	mov	r1, #124	; 0x7c
     af8:	str	r1, [r0, #4]
     afc:	movw	r1, #0
     b00:	movt	r1, #0
     b04:	str	r1, [r0]
     b08:	movw	r1, #0
     b0c:	movt	r1, #0
     b10:	mvn	r0, #0
     b14:	bl	0 <coda_set_error>
     b18:	mvn	r0, #0
     b1c:	str	r0, [fp, #-12]
     b20:	b	c8c <read_dim_array+0x31c>
     b24:	movw	r0, #0
     b28:	str	r0, [sp, #40]	; 0x28
     b2c:	ldr	r0, [sp, #40]	; 0x28
     b30:	ldr	r1, [fp, #8]
     b34:	ldr	r2, [r1]
     b38:	ldr	r1, [r1, #4]
     b3c:	subs	r2, r0, r2
     b40:	rscs	r0, r1, r0, asr #31
     b44:	str	r2, [sp, #16]
     b48:	str	r0, [sp, #12]
     b4c:	bge	c84 <read_dim_array+0x314>
     b50:	b	b54 <read_dim_array+0x1e4>
     b54:	ldr	r0, [fp, #-16]
     b58:	ldr	r1, [fp, #-20]	; 0xffffffec
     b5c:	add	r2, sp, #32
     b60:	bl	844 <read_length_value>
     b64:	cmp	r0, #0
     b68:	beq	b84 <read_dim_array+0x214>
     b6c:	ldr	r0, [fp, #12]
     b70:	ldr	r0, [r0]
     b74:	bl	0 <free>
     b78:	mvn	r0, #0
     b7c:	str	r0, [fp, #-12]
     b80:	b	c8c <read_dim_array+0x31c>
     b84:	ldr	r0, [sp, #32]
     b88:	ldr	r1, [sp, #36]	; 0x24
     b8c:	ldr	r2, [fp, #-20]	; 0xffffffec
     b90:	ldr	r3, [r2]
     b94:	ldr	ip, [r2, #4]
     b98:	adds	r0, r3, r0
     b9c:	adc	r1, ip, r1
     ba0:	str	r0, [r2]
     ba4:	str	r1, [r2, #4]
     ba8:	ldrb	r0, [sp, #32]
     bac:	tst	r0, #3
     bb0:	beq	be8 <read_dim_array+0x278>
     bb4:	b	bb8 <read_dim_array+0x248>
     bb8:	ldr	r0, [sp, #32]
     bbc:	and	r0, r0, #3
     bc0:	rsbs	r0, r0, #4
     bc4:	mov	r1, #0
     bc8:	sbc	r1, r1, #0
     bcc:	ldr	r2, [fp, #-20]	; 0xffffffec
     bd0:	ldr	r3, [r2]
     bd4:	ldr	ip, [r2, #4]
     bd8:	adds	r0, r3, r0
     bdc:	adc	r1, ip, r1
     be0:	str	r0, [r2]
     be4:	str	r1, [r2, #4]
     be8:	ldr	r0, [fp, #-16]
     bec:	ldr	r1, [fp, #-20]	; 0xffffffec
     bf0:	ldr	r2, [fp, #12]
     bf4:	ldr	r2, [r2]
     bf8:	ldr	r3, [sp, #40]	; 0x28
     bfc:	add	r2, r2, r3, lsl #3
     c00:	bl	844 <read_length_value>
     c04:	cmp	r0, #0
     c08:	beq	c24 <read_dim_array+0x2b4>
     c0c:	ldr	r0, [fp, #12]
     c10:	ldr	r0, [r0]
     c14:	bl	0 <free>
     c18:	mvn	r0, #0
     c1c:	str	r0, [fp, #-12]
     c20:	b	c8c <read_dim_array+0x31c>
     c24:	ldr	r0, [fp, #12]
     c28:	ldr	r0, [r0]
     c2c:	ldr	r1, [sp, #40]	; 0x28
     c30:	ldr	r1, [r0, r1, lsl #3]!
     c34:	ldr	r0, [r0, #4]
     c38:	orr	r0, r1, r0
     c3c:	cmp	r0, #0
     c40:	bne	c70 <read_dim_array+0x300>
     c44:	b	c48 <read_dim_array+0x2d8>
     c48:	ldr	r0, [fp, #-32]	; 0xffffffe0
     c4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
     c50:	ldr	r2, [fp, #12]
     c54:	ldr	r2, [r2]
     c58:	ldr	r3, [sp, #40]	; 0x28
     c5c:	str	r0, [r2, r3, lsl #3]!
     c60:	str	r1, [r2, #4]
     c64:	ldr	r0, [sp, #40]	; 0x28
     c68:	ldr	r1, [fp, #16]
     c6c:	str	r0, [r1]
     c70:	b	c74 <read_dim_array+0x304>
     c74:	ldr	r0, [sp, #40]	; 0x28
     c78:	add	r0, r0, #1
     c7c:	str	r0, [sp, #40]	; 0x28
     c80:	b	b2c <read_dim_array+0x1bc>
     c84:	movw	r0, #0
     c88:	str	r0, [fp, #-12]
     c8c:	ldr	r0, [fp, #-12]
     c90:	sub	sp, fp, #8
     c94:	pop	{r4, r5, fp, pc}
     c98:	.word	0xfffffed4

00000c9c <read_att_array>:
     c9c:	push	{r4, sl, fp, lr}
     ca0:	add	fp, sp, #8
     ca4:	sub	sp, sp, #144	; 0x90
     ca8:	str	r0, [fp, #-16]
     cac:	str	r1, [fp, #-20]	; 0xffffffec
     cb0:	str	r2, [fp, #-24]	; 0xffffffe8
     cb4:	str	r3, [fp, #-28]	; 0xffffffe4
     cb8:	ldr	r0, [fp, #-16]
     cbc:	ldr	r0, [r0, #52]	; 0x34
     cc0:	ldr	r1, [fp, #-20]	; 0xffffffec
     cc4:	ldr	r2, [r1]
     cc8:	ldr	r3, [r1, #4]
     ccc:	sub	r1, fp, #36	; 0x24
     cd0:	mov	ip, sp
     cd4:	str	r1, [ip, #8]
     cd8:	mov	r1, #0
     cdc:	str	r1, [ip, #4]
     ce0:	mov	r1, #4
     ce4:	str	r1, [ip]
     ce8:	bl	5dc <read_bytes>
     cec:	cmp	r0, #0
     cf0:	bge	d00 <read_att_array+0x64>
     cf4:	mvn	r0, #0
     cf8:	str	r0, [fp, #-12]
     cfc:	b	1744 <read_att_array+0xaa8>
     d00:	sub	r0, fp, #36	; 0x24
     d04:	bl	2210 <swap4>
     d08:	ldr	r0, [fp, #-20]	; 0xffffffec
     d0c:	ldr	lr, [r0]
     d10:	ldr	r1, [r0, #4]
     d14:	adds	lr, lr, #4
     d18:	adc	r1, r1, #0
     d1c:	str	lr, [r0]
     d20:	str	r1, [r0, #4]
     d24:	ldr	r0, [fp, #-16]
     d28:	ldr	r1, [fp, #-20]	; 0xffffffec
     d2c:	sub	r2, fp, #48	; 0x30
     d30:	bl	844 <read_length_value>
     d34:	cmp	r0, #0
     d38:	beq	d48 <read_att_array+0xac>
     d3c:	mvn	r0, #0
     d40:	str	r0, [fp, #-12]
     d44:	b	1744 <read_att_array+0xaa8>
     d48:	ldr	r0, [fp, #-36]	; 0xffffffdc
     d4c:	cmp	r0, #0
     d50:	bne	da0 <read_att_array+0x104>
     d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d58:	mov	r1, #0
     d5c:	str	r1, [r0]
     d60:	ldr	r0, [fp, #-48]	; 0xffffffd0
     d64:	ldr	r1, [fp, #-44]	; 0xffffffd4
     d68:	orr	r0, r0, r1
     d6c:	cmp	r0, #0
     d70:	beq	d94 <read_att_array+0xf8>
     d74:	b	d78 <read_att_array+0xdc>
     d78:	ldr	r0, [pc, #2512]	; 1750 <read_att_array+0xab4>
     d7c:	movw	r1, #0
     d80:	movt	r1, #0
     d84:	bl	0 <coda_set_error>
     d88:	mvn	r0, #0
     d8c:	str	r0, [fp, #-12]
     d90:	b	1744 <read_att_array+0xaa8>
     d94:	movw	r0, #0
     d98:	str	r0, [fp, #-12]
     d9c:	b	1744 <read_att_array+0xaa8>
     da0:	ldr	r0, [fp, #-36]	; 0xffffffdc
     da4:	cmp	r0, #12
     da8:	beq	dc8 <read_att_array+0x12c>
     dac:	ldr	r0, [pc, #2460]	; 1750 <read_att_array+0xab4>
     db0:	movw	r1, #0
     db4:	movt	r1, #0
     db8:	bl	0 <coda_set_error>
     dbc:	mvn	r0, #0
     dc0:	str	r0, [fp, #-12]
     dc4:	b	1744 <read_att_array+0xaa8>
     dc8:	movw	r0, #6
     dcc:	bl	0 <coda_type_record_new>
     dd0:	str	r0, [fp, #-32]	; 0xffffffe0
     dd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     dd8:	movw	lr, #0
     ddc:	cmp	r0, lr
     de0:	bne	df0 <read_att_array+0x154>
     de4:	mvn	r0, #0
     de8:	str	r0, [fp, #-12]
     dec:	b	1744 <read_att_array+0xaa8>
     df0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     df4:	movw	r1, #0
     df8:	bl	0 <coda_mem_record_new>
     dfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
     e00:	str	r0, [r1]
     e04:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e08:	bl	0 <coda_type_release>
     e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e10:	ldr	r0, [r0]
     e14:	movw	r1, #0
     e18:	cmp	r0, r1
     e1c:	bne	e2c <read_att_array+0x190>
     e20:	mvn	r0, #0
     e24:	str	r0, [fp, #-12]
     e28:	b	1744 <read_att_array+0xaa8>
     e2c:	movw	r0, #0
     e30:	str	r0, [fp, #-52]	; 0xffffffcc
     e34:	ldr	r0, [fp, #-52]	; 0xffffffcc
     e38:	ldr	r1, [fp, #-48]	; 0xffffffd0
     e3c:	ldr	r2, [fp, #-44]	; 0xffffffd4
     e40:	subs	r1, r0, r1
     e44:	rscs	r0, r2, r0, asr #31
     e48:	str	r1, [sp, #28]
     e4c:	str	r0, [sp, #24]
     e50:	bge	173c <read_att_array+0xaa0>
     e54:	b	e58 <read_att_array+0x1bc>
     e58:	ldr	r0, [fp, #-16]
     e5c:	ldr	r1, [fp, #-20]	; 0xffffffec
     e60:	sub	r2, fp, #64	; 0x40
     e64:	bl	844 <read_length_value>
     e68:	cmp	r0, #0
     e6c:	beq	e7c <read_att_array+0x1e0>
     e70:	mvn	r0, #0
     e74:	str	r0, [fp, #-12]
     e78:	b	1744 <read_att_array+0xaa8>
     e7c:	ldr	r0, [fp, #-64]	; 0xffffffc0
     e80:	add	r0, r0, #1
     e84:	bl	0 <malloc>
     e88:	str	r0, [sp, #64]	; 0x40
     e8c:	ldr	r0, [sp, #64]	; 0x40
     e90:	movw	lr, #0
     e94:	cmp	r0, lr
     e98:	bne	edc <read_att_array+0x240>
     e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ea0:	ldr	r0, [r0]
     ea4:	bl	0 <coda_dynamic_type_delete>
     ea8:	ldr	r0, [fp, #-64]	; 0xffffffc0
     eac:	add	r2, r0, #1
     eb0:	mvn	r0, #0
     eb4:	movw	r1, #0
     eb8:	movt	r1, #0
     ebc:	movw	r3, #0
     ec0:	movt	r3, #0
     ec4:	movw	lr, #230	; 0xe6
     ec8:	str	lr, [sp]
     ecc:	bl	0 <coda_set_error>
     ed0:	mvn	r0, #0
     ed4:	str	r0, [fp, #-12]
     ed8:	b	1744 <read_att_array+0xaa8>
     edc:	ldr	r0, [sp, #64]	; 0x40
     ee0:	ldr	r1, [fp, #-64]	; 0xffffffc0
     ee4:	mov	r2, #0
     ee8:	strb	r2, [r0, r1]
     eec:	ldr	r0, [fp, #-16]
     ef0:	ldr	r0, [r0, #52]	; 0x34
     ef4:	ldr	r1, [fp, #-20]	; 0xffffffec
     ef8:	ldr	r2, [r1]
     efc:	ldr	r3, [r1, #4]
     f00:	ldr	r1, [fp, #-64]	; 0xffffffc0
     f04:	ldr	ip, [fp, #-60]	; 0xffffffc4
     f08:	ldr	lr, [sp, #64]	; 0x40
     f0c:	mov	r4, sp
     f10:	str	lr, [r4, #8]
     f14:	str	ip, [r4, #4]
     f18:	str	r1, [r4]
     f1c:	bl	5dc <read_bytes>
     f20:	cmp	r0, #0
     f24:	bge	f48 <read_att_array+0x2ac>
     f28:	ldr	r0, [sp, #64]	; 0x40
     f2c:	bl	0 <free>
     f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f34:	ldr	r0, [r0]
     f38:	bl	0 <coda_dynamic_type_delete>
     f3c:	mvn	r0, #0
     f40:	str	r0, [fp, #-12]
     f44:	b	1744 <read_att_array+0xaa8>
     f48:	ldr	r0, [fp, #-64]	; 0xffffffc0
     f4c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     f50:	ldr	r2, [fp, #-20]	; 0xffffffec
     f54:	ldr	r3, [r2]
     f58:	ldr	ip, [r2, #4]
     f5c:	adds	r0, r3, r0
     f60:	adc	r1, ip, r1
     f64:	str	r0, [r2]
     f68:	str	r1, [r2, #4]
     f6c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
     f70:	tst	r0, #3
     f74:	beq	fac <read_att_array+0x310>
     f78:	b	f7c <read_att_array+0x2e0>
     f7c:	ldr	r0, [fp, #-64]	; 0xffffffc0
     f80:	and	r0, r0, #3
     f84:	rsbs	r0, r0, #4
     f88:	mov	r1, #0
     f8c:	sbc	r1, r1, #0
     f90:	ldr	r2, [fp, #-20]	; 0xffffffec
     f94:	ldr	r3, [r2]
     f98:	ldr	ip, [r2, #4]
     f9c:	adds	r0, r3, r0
     fa0:	adc	r1, ip, r1
     fa4:	str	r0, [r2]
     fa8:	str	r1, [r2, #4]
     fac:	ldr	r0, [fp, #-16]
     fb0:	ldr	r0, [r0, #52]	; 0x34
     fb4:	ldr	r1, [fp, #-20]	; 0xffffffec
     fb8:	ldr	r2, [r1]
     fbc:	ldr	r3, [r1, #4]
     fc0:	sub	r1, fp, #68	; 0x44
     fc4:	mov	ip, sp
     fc8:	str	r1, [ip, #8]
     fcc:	mov	r1, #0
     fd0:	str	r1, [ip, #4]
     fd4:	mov	r1, #4
     fd8:	str	r1, [ip]
     fdc:	bl	5dc <read_bytes>
     fe0:	cmp	r0, #0
     fe4:	bge	1008 <read_att_array+0x36c>
     fe8:	ldr	r0, [sp, #64]	; 0x40
     fec:	bl	0 <free>
     ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ff4:	ldr	r0, [r0]
     ff8:	bl	0 <coda_dynamic_type_delete>
     ffc:	mvn	r0, #0
    1000:	str	r0, [fp, #-12]
    1004:	b	1744 <read_att_array+0xaa8>
    1008:	sub	r0, fp, #68	; 0x44
    100c:	bl	2210 <swap4>
    1010:	ldr	r0, [fp, #-20]	; 0xffffffec
    1014:	ldr	lr, [r0]
    1018:	ldr	r1, [r0, #4]
    101c:	adds	lr, lr, #4
    1020:	adc	r1, r1, #0
    1024:	str	lr, [r0]
    1028:	str	r1, [r0, #4]
    102c:	ldr	r0, [fp, #-16]
    1030:	ldr	r1, [fp, #-20]	; 0xffffffec
    1034:	add	r2, sp, #72	; 0x48
    1038:	bl	844 <read_length_value>
    103c:	cmp	r0, #0
    1040:	beq	1050 <read_att_array+0x3b4>
    1044:	mvn	r0, #0
    1048:	str	r0, [fp, #-12]
    104c:	b	1744 <read_att_array+0xaa8>
    1050:	ldr	r0, [sp, #72]	; 0x48
    1054:	str	r0, [sp, #68]	; 0x44
    1058:	ldr	r0, [fp, #-68]	; 0xffffffbc
    105c:	sub	r0, r0, #1
    1060:	cmp	r0, #5
    1064:	str	r0, [sp, #20]
    1068:	bhi	10c8 <read_att_array+0x42c>
    106c:	add	r0, pc, #8
    1070:	ldr	r1, [sp, #20]
    1074:	ldr	r0, [r0, r1, lsl #2]
    1078:	mov	pc, r0
    107c:	.word	0x00001094
    1080:	.word	0x00001094
    1084:	.word	0x00001098
    1088:	.word	0x000010a8
    108c:	.word	0x000010a8
    1090:	.word	0x000010b8
    1094:	b	10fc <read_att_array+0x460>
    1098:	ldr	r0, [sp, #68]	; 0x44
    109c:	lsl	r0, r0, #1
    10a0:	str	r0, [sp, #68]	; 0x44
    10a4:	b	10fc <read_att_array+0x460>
    10a8:	ldr	r0, [sp, #68]	; 0x44
    10ac:	lsl	r0, r0, #2
    10b0:	str	r0, [sp, #68]	; 0x44
    10b4:	b	10fc <read_att_array+0x460>
    10b8:	ldr	r0, [sp, #68]	; 0x44
    10bc:	lsl	r0, r0, #3
    10c0:	str	r0, [sp, #68]	; 0x44
    10c4:	b	10fc <read_att_array+0x460>
    10c8:	ldr	r0, [sp, #64]	; 0x40
    10cc:	bl	0 <free>
    10d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    10d4:	ldr	r0, [r0]
    10d8:	bl	0 <coda_dynamic_type_delete>
    10dc:	ldr	r0, [pc, #1644]	; 1750 <read_att_array+0xab4>
    10e0:	ldr	r2, [fp, #-68]	; 0xffffffbc
    10e4:	movw	r1, #0
    10e8:	movt	r1, #0
    10ec:	bl	0 <coda_set_error>
    10f0:	mvn	r0, #0
    10f4:	str	r0, [fp, #-12]
    10f8:	b	1744 <read_att_array+0xaa8>
    10fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1100:	movw	r1, #0
    1104:	cmp	r0, r1
    1108:	beq	1514 <read_att_array+0x878>
    110c:	ldr	r0, [sp, #72]	; 0x48
    1110:	ldr	r1, [sp, #76]	; 0x4c
    1114:	eor	r0, r0, #1
    1118:	orr	r0, r0, r1
    111c:	cmp	r0, #0
    1120:	bne	12a8 <read_att_array+0x60c>
    1124:	b	1128 <read_att_array+0x48c>
    1128:	ldr	r0, [sp, #64]	; 0x40
    112c:	movw	r1, #0
    1130:	movt	r1, #0
    1134:	bl	0 <strcmp>
    1138:	cmp	r0, #0
    113c:	beq	1158 <read_att_array+0x4bc>
    1140:	ldr	r0, [sp, #64]	; 0x40
    1144:	movw	r1, #0
    1148:	movt	r1, #0
    114c:	bl	0 <strcmp>
    1150:	cmp	r0, #0
    1154:	bne	12a8 <read_att_array+0x60c>
    1158:	ldr	r0, [fp, #-68]	; 0xffffffbc
    115c:	cmp	r0, #5
    1160:	bne	1200 <read_att_array+0x564>
    1164:	ldr	r0, [fp, #-16]
    1168:	ldr	r0, [r0, #52]	; 0x34
    116c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1170:	ldr	r2, [r1]
    1174:	ldr	r3, [r1, #4]
    1178:	add	r1, sp, #60	; 0x3c
    117c:	mov	ip, sp
    1180:	str	r1, [ip, #8]
    1184:	mov	r1, #0
    1188:	str	r1, [ip, #4]
    118c:	mov	r1, #4
    1190:	str	r1, [ip]
    1194:	bl	5dc <read_bytes>
    1198:	cmp	r0, #0
    119c:	bge	11c0 <read_att_array+0x524>
    11a0:	ldr	r0, [sp, #64]	; 0x40
    11a4:	bl	0 <free>
    11a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    11ac:	ldr	r0, [r0]
    11b0:	bl	0 <coda_dynamic_type_delete>
    11b4:	mvn	r0, #0
    11b8:	str	r0, [fp, #-12]
    11bc:	b	1744 <read_att_array+0xaa8>
    11c0:	add	r0, sp, #60	; 0x3c
    11c4:	bl	2210 <swap4>
    11c8:	ldr	r0, [sp, #64]	; 0x40
    11cc:	ldrb	r0, [r0]
    11d0:	cmp	r0, #115	; 0x73
    11d4:	bne	11ec <read_att_array+0x550>
    11d8:	vldr	s0, [sp, #60]	; 0x3c
    11dc:	vcvt.f64.f32	d16, s0
    11e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    11e4:	vstr	d16, [r0]
    11e8:	b	11fc <read_att_array+0x560>
    11ec:	vldr	s0, [sp, #60]	; 0x3c
    11f0:	vcvt.f64.f32	d16, s0
    11f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    11f8:	vstr	d16, [r0, #16]
    11fc:	b	12a4 <read_att_array+0x608>
    1200:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1204:	cmp	r0, #6
    1208:	bne	12a0 <read_att_array+0x604>
    120c:	ldr	r0, [fp, #-16]
    1210:	ldr	r0, [r0, #52]	; 0x34
    1214:	ldr	r1, [fp, #-20]	; 0xffffffec
    1218:	ldr	r2, [r1]
    121c:	ldr	r3, [r1, #4]
    1220:	add	r1, sp, #48	; 0x30
    1224:	mov	ip, sp
    1228:	str	r1, [ip, #8]
    122c:	mov	r1, #0
    1230:	str	r1, [ip, #4]
    1234:	mov	r1, #8
    1238:	str	r1, [ip]
    123c:	bl	5dc <read_bytes>
    1240:	cmp	r0, #0
    1244:	bge	1268 <read_att_array+0x5cc>
    1248:	ldr	r0, [sp, #64]	; 0x40
    124c:	bl	0 <free>
    1250:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1254:	ldr	r0, [r0]
    1258:	bl	0 <coda_dynamic_type_delete>
    125c:	mvn	r0, #0
    1260:	str	r0, [fp, #-12]
    1264:	b	1744 <read_att_array+0xaa8>
    1268:	add	r0, sp, #48	; 0x30
    126c:	bl	22d0 <swap8>
    1270:	ldr	r0, [sp, #64]	; 0x40
    1274:	ldrb	r0, [r0]
    1278:	cmp	r0, #115	; 0x73
    127c:	bne	1290 <read_att_array+0x5f4>
    1280:	vldr	d16, [sp, #48]	; 0x30
    1284:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1288:	vstr	d16, [r0]
    128c:	b	129c <read_att_array+0x600>
    1290:	vldr	d16, [sp, #48]	; 0x30
    1294:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1298:	vstr	d16, [r0, #16]
    129c:	b	12a0 <read_att_array+0x604>
    12a0:	b	12a4 <read_att_array+0x608>
    12a4:	b	12a8 <read_att_array+0x60c>
    12a8:	ldr	r0, [sp, #72]	; 0x48
    12ac:	ldr	r1, [sp, #76]	; 0x4c
    12b0:	eor	r0, r0, #1
    12b4:	orr	r0, r0, r1
    12b8:	cmp	r0, #0
    12bc:	bne	1510 <read_att_array+0x874>
    12c0:	b	12c4 <read_att_array+0x628>
    12c4:	ldr	r0, [fp, #-68]	; 0xffffffbc
    12c8:	cmp	r0, #2
    12cc:	beq	1510 <read_att_array+0x874>
    12d0:	ldr	r0, [sp, #64]	; 0x40
    12d4:	movw	r1, #0
    12d8:	movt	r1, #0
    12dc:	bl	0 <strcmp>
    12e0:	cmp	r0, #0
    12e4:	beq	1314 <read_att_array+0x678>
    12e8:	ldr	r0, [sp, #64]	; 0x40
    12ec:	movw	r1, #0
    12f0:	movt	r1, #0
    12f4:	bl	0 <strcmp>
    12f8:	cmp	r0, #0
    12fc:	bne	1510 <read_att_array+0x874>
    1300:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1304:	vldr	d0, [r0, #24]
    1308:	bl	0 <coda_isNaN>
    130c:	cmp	r0, #0
    1310:	beq	1510 <read_att_array+0x874>
    1314:	ldr	r0, [fp, #-16]
    1318:	ldr	r0, [r0, #52]	; 0x34
    131c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1320:	ldr	r2, [r1]
    1324:	ldr	r3, [r1, #4]
    1328:	ldr	r1, [sp, #68]	; 0x44
    132c:	asr	ip, r1, #31
    1330:	add	lr, sp, #40	; 0x28
    1334:	mov	r4, sp
    1338:	str	lr, [r4, #8]
    133c:	str	ip, [r4, #4]
    1340:	str	r1, [r4]
    1344:	bl	5dc <read_bytes>
    1348:	cmp	r0, #0
    134c:	bge	1370 <read_att_array+0x6d4>
    1350:	ldr	r0, [sp, #64]	; 0x40
    1354:	bl	0 <free>
    1358:	ldr	r0, [fp, #-24]	; 0xffffffe8
    135c:	ldr	r0, [r0]
    1360:	bl	0 <coda_dynamic_type_delete>
    1364:	mvn	r0, #0
    1368:	str	r0, [fp, #-12]
    136c:	b	1744 <read_att_array+0xaa8>
    1370:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1374:	sub	r0, r0, #1
    1378:	cmp	r0, #10
    137c:	str	r0, [sp, #16]
    1380:	bhi	14ec <read_att_array+0x850>
    1384:	add	r0, pc, #8
    1388:	ldr	r1, [sp, #16]
    138c:	ldr	r0, [r0, r1, lsl #2]
    1390:	mov	pc, r0
    1394:	.word	0x000013c0
    1398:	.word	0x000014ec
    139c:	.word	0x000013d8
    13a0:	.word	0x000013f8
    13a4:	.word	0x00001418
    13a8:	.word	0x00001434
    13ac:	.word	0x0000144c
    13b0:	.word	0x00001464
    13b4:	.word	0x00001484
    13b8:	.word	0x000014a4
    13bc:	.word	0x000014c8
    13c0:	ldrsb	r0, [sp, #40]	; 0x28
    13c4:	vmov	s0, r0
    13c8:	vcvt.f64.s32	d16, s0
    13cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    13d0:	vstr	d16, [r0, #24]
    13d4:	b	150c <read_att_array+0x870>
    13d8:	add	r0, sp, #40	; 0x28
    13dc:	bl	2438 <swap2>
    13e0:	ldrsh	r0, [sp, #40]	; 0x28
    13e4:	vmov	s0, r0
    13e8:	vcvt.f64.s32	d16, s0
    13ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    13f0:	vstr	d16, [r0, #24]
    13f4:	b	150c <read_att_array+0x870>
    13f8:	add	r0, sp, #40	; 0x28
    13fc:	bl	2210 <swap4>
    1400:	ldr	r0, [sp, #40]	; 0x28
    1404:	vmov	s0, r0
    1408:	vcvt.f64.s32	d16, s0
    140c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1410:	vstr	d16, [r0, #24]
    1414:	b	150c <read_att_array+0x870>
    1418:	add	r0, sp, #40	; 0x28
    141c:	bl	2210 <swap4>
    1420:	vldr	s0, [sp, #40]	; 0x28
    1424:	vcvt.f64.f32	d16, s0
    1428:	ldr	r0, [fp, #-28]	; 0xffffffe4
    142c:	vstr	d16, [r0, #24]
    1430:	b	150c <read_att_array+0x870>
    1434:	add	r0, sp, #40	; 0x28
    1438:	bl	22d0 <swap8>
    143c:	vldr	d16, [sp, #40]	; 0x28
    1440:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1444:	vstr	d16, [r0, #24]
    1448:	b	150c <read_att_array+0x870>
    144c:	ldrb	r0, [sp, #40]	; 0x28
    1450:	vmov	s0, r0
    1454:	vcvt.f64.u32	d16, s0
    1458:	ldr	r0, [fp, #-28]	; 0xffffffe4
    145c:	vstr	d16, [r0, #24]
    1460:	b	150c <read_att_array+0x870>
    1464:	add	r0, sp, #40	; 0x28
    1468:	bl	2438 <swap2>
    146c:	ldrh	r0, [sp, #40]	; 0x28
    1470:	vmov	s0, r0
    1474:	vcvt.f64.u32	d16, s0
    1478:	ldr	r0, [fp, #-28]	; 0xffffffe4
    147c:	vstr	d16, [r0, #24]
    1480:	b	150c <read_att_array+0x870>
    1484:	add	r0, sp, #40	; 0x28
    1488:	bl	2210 <swap4>
    148c:	ldr	r0, [sp, #40]	; 0x28
    1490:	vmov	s0, r0
    1494:	vcvt.f64.u32	d16, s0
    1498:	ldr	r0, [fp, #-28]	; 0xffffffe4
    149c:	vstr	d16, [r0, #24]
    14a0:	b	150c <read_att_array+0x870>
    14a4:	add	r0, sp, #40	; 0x28
    14a8:	bl	22d0 <swap8>
    14ac:	ldr	r0, [sp, #40]	; 0x28
    14b0:	ldr	r1, [sp, #44]	; 0x2c
    14b4:	bl	0 <__aeabi_l2d>
    14b8:	vmov	d16, r0, r1
    14bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    14c0:	vstr	d16, [r0, #24]
    14c4:	b	150c <read_att_array+0x870>
    14c8:	add	r0, sp, #40	; 0x28
    14cc:	bl	22d0 <swap8>
    14d0:	ldr	r0, [sp, #40]	; 0x28
    14d4:	ldr	r1, [sp, #44]	; 0x2c
    14d8:	bl	0 <__aeabi_ul2d>
    14dc:	vmov	d16, r0, r1
    14e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    14e4:	vstr	d16, [r0, #24]
    14e8:	b	150c <read_att_array+0x870>
    14ec:	movw	r0, #0
    14f0:	movt	r0, #0
    14f4:	movw	r1, #0
    14f8:	movt	r1, #0
    14fc:	movw	r2, #417	; 0x1a1
    1500:	movw	r3, #0
    1504:	movt	r3, #0
    1508:	bl	0 <__assert_fail>
    150c:	b	1510 <read_att_array+0x874>
    1510:	b	1514 <read_att_array+0x878>
    1514:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1518:	cmp	r0, #2
    151c:	bne	1558 <read_att_array+0x8bc>
    1520:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1524:	ldr	r1, [fp, #-20]	; 0xffffffec
    1528:	ldr	r2, [r1]
    152c:	ldr	r3, [r1, #4]
    1530:	ldr	r1, [sp, #72]	; 0x48
    1534:	ldr	ip, [sp, #76]	; 0x4c
    1538:	mov	lr, sp
    153c:	str	ip, [lr, #12]
    1540:	str	r1, [lr, #8]
    1544:	mov	r1, #0
    1548:	str	r1, [lr]
    154c:	bl	0 <coda_netcdf_basic_type_new>
    1550:	str	r0, [fp, #-56]	; 0xffffffc8
    1554:	b	1588 <read_att_array+0x8ec>
    1558:	ldr	r0, [fp, #-68]	; 0xffffffbc
    155c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1560:	ldr	r2, [r1]
    1564:	ldr	r3, [r1, #4]
    1568:	mov	r1, sp
    156c:	mov	ip, #0
    1570:	str	ip, [r1, #12]
    1574:	mov	lr, #1
    1578:	str	lr, [r1, #8]
    157c:	str	ip, [r1]
    1580:	bl	0 <coda_netcdf_basic_type_new>
    1584:	str	r0, [fp, #-56]	; 0xffffffc8
    1588:	ldr	r0, [fp, #-56]	; 0xffffffc8
    158c:	movw	r1, #0
    1590:	cmp	r0, r1
    1594:	bne	15b8 <read_att_array+0x91c>
    1598:	ldr	r0, [sp, #64]	; 0x40
    159c:	bl	0 <free>
    15a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    15a4:	ldr	r0, [r0]
    15a8:	bl	0 <coda_dynamic_type_delete>
    15ac:	mvn	r0, #0
    15b0:	str	r0, [fp, #-12]
    15b4:	b	1744 <read_att_array+0xaa8>
    15b8:	ldr	r0, [sp, #68]	; 0x44
    15bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    15c0:	ldr	r2, [r1]
    15c4:	ldr	r3, [r1, #4]
    15c8:	adds	r2, r2, r0
    15cc:	adc	r0, r3, r0, asr #31
    15d0:	str	r2, [r1]
    15d4:	str	r0, [r1, #4]
    15d8:	ldr	r0, [sp, #68]	; 0x44
    15dc:	and	r0, r0, #3
    15e0:	cmp	r0, #0
    15e4:	beq	1610 <read_att_array+0x974>
    15e8:	ldr	r0, [sp, #68]	; 0x44
    15ec:	and	r0, r0, #3
    15f0:	rsb	r0, r0, #4
    15f4:	ldr	r1, [fp, #-20]	; 0xffffffec
    15f8:	ldr	r2, [r1]
    15fc:	ldr	r3, [r1, #4]
    1600:	adds	r0, r2, r0
    1604:	adc	r2, r3, #0
    1608:	str	r0, [r1]
    160c:	str	r2, [r1, #4]
    1610:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1614:	cmp	r0, #2
    1618:	beq	1638 <read_att_array+0x99c>
    161c:	ldr	r0, [sp, #72]	; 0x48
    1620:	ldr	r1, [sp, #76]	; 0x4c
    1624:	eor	r0, r0, #1
    1628:	orr	r0, r0, r1
    162c:	cmp	r0, #0
    1630:	bne	1684 <read_att_array+0x9e8>
    1634:	b	1638 <read_att_array+0x99c>
    1638:	ldr	r0, [fp, #-24]	; 0xffffffe8
    163c:	ldr	r0, [r0]
    1640:	ldr	r1, [sp, #64]	; 0x40
    1644:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1648:	movw	r3, #1
    164c:	bl	0 <coda_mem_record_add_field>
    1650:	cmp	r0, #0
    1654:	beq	1680 <read_att_array+0x9e4>
    1658:	ldr	r0, [fp, #-56]	; 0xffffffc8
    165c:	bl	0 <coda_dynamic_type_delete>
    1660:	ldr	r0, [sp, #64]	; 0x40
    1664:	bl	0 <free>
    1668:	ldr	r0, [fp, #-24]	; 0xffffffe8
    166c:	ldr	r0, [r0]
    1670:	bl	0 <coda_dynamic_type_delete>
    1674:	mvn	r0, #0
    1678:	str	r0, [fp, #-12]
    167c:	b	1744 <read_att_array+0xaa8>
    1680:	b	1724 <read_att_array+0xa88>
    1684:	ldr	r0, [sp, #72]	; 0x48
    1688:	str	r0, [sp, #32]
    168c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1690:	movw	r0, #1
    1694:	add	r1, sp, #32
    1698:	bl	0 <coda_netcdf_array_new>
    169c:	str	r0, [sp, #36]	; 0x24
    16a0:	ldr	r0, [sp, #36]	; 0x24
    16a4:	movw	r1, #0
    16a8:	cmp	r0, r1
    16ac:	bne	16d8 <read_att_array+0xa3c>
    16b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    16b4:	bl	0 <coda_dynamic_type_delete>
    16b8:	ldr	r0, [sp, #64]	; 0x40
    16bc:	bl	0 <free>
    16c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    16c4:	ldr	r0, [r0]
    16c8:	bl	0 <coda_dynamic_type_delete>
    16cc:	mvn	r0, #0
    16d0:	str	r0, [fp, #-12]
    16d4:	b	1744 <read_att_array+0xaa8>
    16d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    16dc:	ldr	r0, [r0]
    16e0:	ldr	r1, [sp, #64]	; 0x40
    16e4:	ldr	r2, [sp, #36]	; 0x24
    16e8:	movw	r3, #1
    16ec:	bl	0 <coda_mem_record_add_field>
    16f0:	cmp	r0, #0
    16f4:	beq	1720 <read_att_array+0xa84>
    16f8:	ldr	r0, [sp, #36]	; 0x24
    16fc:	bl	0 <coda_dynamic_type_delete>
    1700:	ldr	r0, [sp, #64]	; 0x40
    1704:	bl	0 <free>
    1708:	ldr	r0, [fp, #-24]	; 0xffffffe8
    170c:	ldr	r0, [r0]
    1710:	bl	0 <coda_dynamic_type_delete>
    1714:	mvn	r0, #0
    1718:	str	r0, [fp, #-12]
    171c:	b	1744 <read_att_array+0xaa8>
    1720:	b	1724 <read_att_array+0xa88>
    1724:	ldr	r0, [sp, #64]	; 0x40
    1728:	bl	0 <free>
    172c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1730:	add	r0, r0, #1
    1734:	str	r0, [fp, #-52]	; 0xffffffcc
    1738:	b	e34 <read_att_array+0x198>
    173c:	movw	r0, #0
    1740:	str	r0, [fp, #-12]
    1744:	ldr	r0, [fp, #-12]
    1748:	sub	sp, fp, #8
    174c:	pop	{r4, sl, fp, pc}
    1750:	.word	0xfffffed4
    1754:	.word	0xe320f000

00001758 <read_var_array>:
    1758:	push	{r4, r5, r6, r7, fp, lr}
    175c:	add	fp, sp, #16
    1760:	sub	sp, sp, #232	; 0xe8
    1764:	ldr	ip, [fp, #16]
    1768:	ldr	lr, [fp, #12]
    176c:	ldr	r4, [fp, #8]
    1770:	str	r0, [fp, #-24]	; 0xffffffe8
    1774:	str	r1, [fp, #-28]	; 0xffffffe4
    1778:	str	r3, [fp, #-36]	; 0xffffffdc
    177c:	str	r2, [fp, #-40]	; 0xffffffd8
    1780:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1784:	ldr	r0, [r0, #52]	; 0x34
    1788:	ldr	r1, [fp, #-28]	; 0xffffffe4
    178c:	ldr	r2, [r1]
    1790:	ldr	r3, [r1, #4]
    1794:	sub	r1, fp, #44	; 0x2c
    1798:	mov	r5, sp
    179c:	str	r1, [r5, #8]
    17a0:	mov	r1, #0
    17a4:	str	r1, [r5, #4]
    17a8:	mov	r1, #4
    17ac:	str	r1, [r5]
    17b0:	str	lr, [sp, #60]	; 0x3c
    17b4:	str	ip, [sp, #56]	; 0x38
    17b8:	str	r4, [sp, #52]	; 0x34
    17bc:	bl	5dc <read_bytes>
    17c0:	cmp	r0, #0
    17c4:	bge	17fc <read_var_array+0xa4>
    17c8:	bl	0 <__errno_location>
    17cc:	ldr	r0, [r0]
    17d0:	bl	0 <strerror>
    17d4:	mvn	lr, #21
    17d8:	str	r0, [sp, #48]	; 0x30
    17dc:	mov	r0, lr
    17e0:	movw	r1, #0
    17e4:	movt	r1, #0
    17e8:	ldr	r2, [sp, #48]	; 0x30
    17ec:	bl	0 <coda_set_error>
    17f0:	mvn	r0, #0
    17f4:	str	r0, [fp, #-20]	; 0xffffffec
    17f8:	b	2200 <read_var_array+0xaa8>
    17fc:	sub	r0, fp, #44	; 0x2c
    1800:	bl	2210 <swap4>
    1804:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1808:	ldr	lr, [r0]
    180c:	ldr	r1, [r0, #4]
    1810:	adds	lr, lr, #4
    1814:	adc	r1, r1, #0
    1818:	str	lr, [r0]
    181c:	str	r1, [r0, #4]
    1820:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1824:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1828:	sub	r2, fp, #56	; 0x38
    182c:	bl	844 <read_length_value>
    1830:	cmp	r0, #0
    1834:	beq	1844 <read_var_array+0xec>
    1838:	mvn	r0, #0
    183c:	str	r0, [fp, #-20]	; 0xffffffec
    1840:	b	2200 <read_var_array+0xaa8>
    1844:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1848:	cmp	r0, #0
    184c:	bne	1890 <read_var_array+0x138>
    1850:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1854:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1858:	orr	r0, r0, r1
    185c:	cmp	r0, #0
    1860:	beq	1884 <read_var_array+0x12c>
    1864:	b	1868 <read_var_array+0x110>
    1868:	ldr	r0, [pc, #2460]	; 220c <read_var_array+0xab4>
    186c:	movw	r1, #0
    1870:	movt	r1, #0
    1874:	bl	0 <coda_set_error>
    1878:	mvn	r0, #0
    187c:	str	r0, [fp, #-20]	; 0xffffffec
    1880:	b	2200 <read_var_array+0xaa8>
    1884:	movw	r0, #0
    1888:	str	r0, [fp, #-20]	; 0xffffffec
    188c:	b	2200 <read_var_array+0xaa8>
    1890:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1894:	cmp	r0, #11
    1898:	beq	18b8 <read_var_array+0x160>
    189c:	ldr	r0, [pc, #2408]	; 220c <read_var_array+0xab4>
    18a0:	movw	r1, #0
    18a4:	movt	r1, #0
    18a8:	bl	0 <coda_set_error>
    18ac:	mvn	r0, #0
    18b0:	str	r0, [fp, #-20]	; 0xffffffec
    18b4:	b	2200 <read_var_array+0xaa8>
    18b8:	movw	r0, #0
    18bc:	str	r0, [fp, #-60]	; 0xffffffc4
    18c0:	ldr	r0, [fp, #-60]	; 0xffffffc4
    18c4:	ldr	r1, [fp, #-56]	; 0xffffffc8
    18c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    18cc:	subs	r1, r0, r1
    18d0:	rscs	r0, r2, r0, asr #31
    18d4:	str	r1, [sp, #44]	; 0x2c
    18d8:	str	r0, [sp, #40]	; 0x28
    18dc:	bge	21f8 <read_var_array+0xaa0>
    18e0:	b	18e4 <read_var_array+0x18c>
    18e4:	movw	r0, #0
    18e8:	str	r0, [fp, #-68]	; 0xffffffbc
    18ec:	str	r0, [sp, #88]	; 0x58
    18f0:	str	r0, [sp, #84]	; 0x54
    18f4:	str	r0, [sp, #80]	; 0x50
    18f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    18fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1900:	sub	r2, fp, #120	; 0x78
    1904:	bl	844 <read_length_value>
    1908:	cmp	r0, #0
    190c:	beq	191c <read_var_array+0x1c4>
    1910:	mvn	r0, #0
    1914:	str	r0, [fp, #-20]	; 0xffffffec
    1918:	b	2200 <read_var_array+0xaa8>
    191c:	ldr	r0, [fp, #-120]	; 0xffffff88
    1920:	add	r0, r0, #1
    1924:	bl	0 <malloc>
    1928:	str	r0, [sp, #92]	; 0x5c
    192c:	ldr	r0, [sp, #92]	; 0x5c
    1930:	movw	lr, #0
    1934:	cmp	r0, lr
    1938:	bne	1970 <read_var_array+0x218>
    193c:	ldr	r0, [fp, #-120]	; 0xffffff88
    1940:	add	r2, r0, #1
    1944:	mvn	r0, #0
    1948:	movw	r1, #0
    194c:	movt	r1, #0
    1950:	movw	r3, #0
    1954:	movt	r3, #0
    1958:	movw	ip, #546	; 0x222
    195c:	str	ip, [sp]
    1960:	bl	0 <coda_set_error>
    1964:	mvn	r0, #0
    1968:	str	r0, [fp, #-20]	; 0xffffffec
    196c:	b	2200 <read_var_array+0xaa8>
    1970:	ldr	r0, [sp, #92]	; 0x5c
    1974:	ldr	r1, [fp, #-120]	; 0xffffff88
    1978:	mov	r2, #0
    197c:	strb	r2, [r0, r1]
    1980:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1984:	ldr	r0, [r0, #52]	; 0x34
    1988:	ldr	r1, [fp, #-28]	; 0xffffffe4
    198c:	ldr	r2, [r1]
    1990:	ldr	r3, [r1, #4]
    1994:	ldr	r1, [fp, #-120]	; 0xffffff88
    1998:	ldr	ip, [fp, #-116]	; 0xffffff8c
    199c:	ldr	lr, [sp, #92]	; 0x5c
    19a0:	mov	r4, sp
    19a4:	str	lr, [r4, #8]
    19a8:	str	ip, [r4, #4]
    19ac:	str	r1, [r4]
    19b0:	bl	5dc <read_bytes>
    19b4:	cmp	r0, #0
    19b8:	bge	19d0 <read_var_array+0x278>
    19bc:	ldr	r0, [sp, #92]	; 0x5c
    19c0:	bl	0 <free>
    19c4:	mvn	r0, #0
    19c8:	str	r0, [fp, #-20]	; 0xffffffec
    19cc:	b	2200 <read_var_array+0xaa8>
    19d0:	ldr	r0, [fp, #-120]	; 0xffffff88
    19d4:	ldr	r1, [fp, #-116]	; 0xffffff8c
    19d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    19dc:	ldr	r3, [r2]
    19e0:	ldr	ip, [r2, #4]
    19e4:	adds	r0, r3, r0
    19e8:	adc	r1, ip, r1
    19ec:	str	r0, [r2]
    19f0:	str	r1, [r2, #4]
    19f4:	ldrb	r0, [fp, #-120]	; 0xffffff88
    19f8:	tst	r0, #3
    19fc:	beq	1a34 <read_var_array+0x2dc>
    1a00:	b	1a04 <read_var_array+0x2ac>
    1a04:	ldr	r0, [fp, #-120]	; 0xffffff88
    1a08:	and	r0, r0, #3
    1a0c:	rsbs	r0, r0, #4
    1a10:	mov	r1, #0
    1a14:	sbc	r1, r1, #0
    1a18:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1a1c:	ldr	r3, [r2]
    1a20:	ldr	ip, [r2, #4]
    1a24:	adds	r0, r3, r0
    1a28:	adc	r1, ip, r1
    1a2c:	str	r0, [r2]
    1a30:	str	r1, [r2, #4]
    1a34:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1a38:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1a3c:	add	r2, sp, #112	; 0x70
    1a40:	bl	844 <read_length_value>
    1a44:	cmp	r0, #0
    1a48:	beq	1a58 <read_var_array+0x300>
    1a4c:	mvn	r0, #0
    1a50:	str	r0, [fp, #-20]	; 0xffffffec
    1a54:	b	2200 <read_var_array+0xaa8>
    1a58:	movw	r0, #0
    1a5c:	str	r0, [sp, #76]	; 0x4c
    1a60:	str	r0, [sp, #72]	; 0x48
    1a64:	ldr	r0, [sp, #72]	; 0x48
    1a68:	ldr	r1, [sp, #112]	; 0x70
    1a6c:	ldr	r2, [sp, #116]	; 0x74
    1a70:	subs	r1, r0, r1
    1a74:	rscs	r0, r2, r0, asr #31
    1a78:	str	r1, [sp, #36]	; 0x24
    1a7c:	str	r0, [sp, #32]
    1a80:	bge	1bf0 <read_var_array+0x498>
    1a84:	b	1a88 <read_var_array+0x330>
    1a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1a8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1a90:	add	r2, sp, #96	; 0x60
    1a94:	bl	844 <read_length_value>
    1a98:	cmp	r0, #0
    1a9c:	beq	1aac <read_var_array+0x354>
    1aa0:	mvn	r0, #0
    1aa4:	str	r0, [fp, #-20]	; 0xffffffec
    1aa8:	b	2200 <read_var_array+0xaa8>
    1aac:	ldr	r0, [sp, #100]	; 0x64
    1ab0:	cmp	r0, #0
    1ab4:	blt	1ae4 <read_var_array+0x38c>
    1ab8:	b	1abc <read_var_array+0x364>
    1abc:	ldr	r0, [sp, #96]	; 0x60
    1ac0:	ldr	r1, [sp, #100]	; 0x64
    1ac4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1ac8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1acc:	subs	r0, r0, r2
    1ad0:	sbcs	r1, r1, r3
    1ad4:	str	r0, [sp, #28]
    1ad8:	str	r1, [sp, #24]
    1adc:	blt	1b0c <read_var_array+0x3b4>
    1ae0:	b	1ae4 <read_var_array+0x38c>
    1ae4:	ldr	r0, [sp, #92]	; 0x5c
    1ae8:	bl	0 <free>
    1aec:	ldr	r0, [pc, #1816]	; 220c <read_var_array+0xab4>
    1af0:	ldr	r2, [sp, #92]	; 0x5c
    1af4:	movw	r1, #0
    1af8:	movt	r1, #0
    1afc:	bl	0 <coda_set_error>
    1b00:	mvn	r0, #0
    1b04:	str	r0, [fp, #-20]	; 0xffffffec
    1b08:	b	2200 <read_var_array+0xaa8>
    1b0c:	ldr	r0, [sp, #72]	; 0x48
    1b10:	ldr	r1, [sp, #112]	; 0x70
    1b14:	ldr	r2, [sp, #116]	; 0x74
    1b18:	subs	r1, r1, #1
    1b1c:	sbc	r2, r2, #0
    1b20:	eor	r1, r0, r1
    1b24:	eor	r0, r2, r0, asr #31
    1b28:	orr	r0, r1, r0
    1b2c:	cmp	r0, #0
    1b30:	bne	1b54 <read_var_array+0x3fc>
    1b34:	b	1b38 <read_var_array+0x3e0>
    1b38:	ldr	r0, [fp, #8]
    1b3c:	ldr	r1, [sp, #96]	; 0x60
    1b40:	ldr	r0, [r0, r1, lsl #3]
    1b44:	str	r0, [sp, #88]	; 0x58
    1b48:	movw	r0, #1
    1b4c:	str	r0, [sp, #84]	; 0x54
    1b50:	b	1ba8 <read_var_array+0x450>
    1b54:	ldr	r0, [sp, #72]	; 0x48
    1b58:	cmp	r0, #8
    1b5c:	bge	1b8c <read_var_array+0x434>
    1b60:	ldr	r0, [fp, #8]
    1b64:	ldr	r1, [sp, #96]	; 0x60
    1b68:	ldr	r0, [r0, r1, lsl #3]
    1b6c:	ldr	r1, [sp, #72]	; 0x48
    1b70:	sub	r2, fp, #104	; 0x68
    1b74:	add	r1, r2, r1, lsl #2
    1b78:	str	r0, [r1]
    1b7c:	ldr	r0, [sp, #76]	; 0x4c
    1b80:	add	r0, r0, #1
    1b84:	str	r0, [sp, #76]	; 0x4c
    1b88:	b	1ba4 <read_var_array+0x44c>
    1b8c:	ldr	r0, [fp, #8]
    1b90:	ldr	r1, [sp, #96]	; 0x60
    1b94:	ldr	r0, [r0, r1, lsl #3]
    1b98:	ldr	r1, [fp, #-76]	; 0xffffffb4
    1b9c:	mul	r0, r1, r0
    1ba0:	str	r0, [fp, #-76]	; 0xffffffb4
    1ba4:	b	1ba8 <read_var_array+0x450>
    1ba8:	ldr	r0, [sp, #72]	; 0x48
    1bac:	cmp	r0, #0
    1bb0:	bne	1bdc <read_var_array+0x484>
    1bb4:	ldr	r0, [sp, #96]	; 0x60
    1bb8:	ldr	r1, [sp, #100]	; 0x64
    1bbc:	ldr	r2, [fp, #12]
    1bc0:	eor	r1, r1, r2, asr #31
    1bc4:	eor	r0, r0, r2
    1bc8:	orr	r0, r0, r1
    1bcc:	clz	r0, r0
    1bd0:	lsr	r0, r0, #5
    1bd4:	and	r0, r0, #1
    1bd8:	str	r0, [sp, #80]	; 0x50
    1bdc:	b	1be0 <read_var_array+0x488>
    1be0:	ldr	r0, [sp, #72]	; 0x48
    1be4:	add	r0, r0, #1
    1be8:	str	r0, [sp, #72]	; 0x48
    1bec:	b	1a64 <read_var_array+0x30c>
    1bf0:	bl	0 <coda_NaN>
    1bf4:	vldr	d2, [pc, #972]	; 1fc8 <read_var_array+0x870>
    1bf8:	vmov.f64	d16, #112	; 0x3f800000  1.0
    1bfc:	vstr	d0, [sp, #16]
    1c00:	vmov.f64	d0, d16
    1c04:	vmov.f64	d1, d16
    1c08:	vldr	d3, [sp, #16]
    1c0c:	bl	0 <coda_conversion_new>
    1c10:	str	r0, [fp, #-72]	; 0xffffffb8
    1c14:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1c18:	movw	lr, #0
    1c1c:	cmp	r0, lr
    1c20:	bne	1c38 <read_var_array+0x4e0>
    1c24:	ldr	r0, [sp, #92]	; 0x5c
    1c28:	bl	0 <free>
    1c2c:	mvn	r0, #0
    1c30:	str	r0, [fp, #-20]	; 0xffffffec
    1c34:	b	2200 <read_var_array+0xaa8>
    1c38:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1c40:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1c44:	sub	r2, fp, #68	; 0x44
    1c48:	bl	c9c <read_att_array>
    1c4c:	cmp	r0, #0
    1c50:	beq	1c70 <read_var_array+0x518>
    1c54:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1c58:	bl	0 <coda_conversion_delete>
    1c5c:	ldr	r0, [sp, #92]	; 0x5c
    1c60:	bl	0 <free>
    1c64:	mvn	r0, #0
    1c68:	str	r0, [fp, #-20]	; 0xffffffec
    1c6c:	b	2200 <read_var_array+0xaa8>
    1c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c74:	ldr	r0, [r0, #52]	; 0x34
    1c78:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1c7c:	ldr	r2, [r1]
    1c80:	ldr	r3, [r1, #4]
    1c84:	add	r1, sp, #124	; 0x7c
    1c88:	mov	ip, sp
    1c8c:	str	r1, [ip, #8]
    1c90:	mov	r1, #0
    1c94:	str	r1, [ip, #4]
    1c98:	mov	r1, #4
    1c9c:	str	r1, [ip]
    1ca0:	bl	5dc <read_bytes>
    1ca4:	cmp	r0, #0
    1ca8:	bge	1cd0 <read_var_array+0x578>
    1cac:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1cb0:	bl	0 <coda_dynamic_type_delete>
    1cb4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1cb8:	bl	0 <coda_conversion_delete>
    1cbc:	ldr	r0, [sp, #92]	; 0x5c
    1cc0:	bl	0 <free>
    1cc4:	mvn	r0, #0
    1cc8:	str	r0, [fp, #-20]	; 0xffffffec
    1ccc:	b	2200 <read_var_array+0xaa8>
    1cd0:	add	r0, sp, #124	; 0x7c
    1cd4:	bl	2210 <swap4>
    1cd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1cdc:	ldr	lr, [r0]
    1ce0:	ldr	r1, [r0, #4]
    1ce4:	adds	lr, lr, #4
    1ce8:	adc	r1, r1, #0
    1cec:	str	lr, [r0]
    1cf0:	str	r1, [r0, #4]
    1cf4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1cf8:	vldr	d16, [r0]
    1cfc:	vmov.f64	d17, #112	; 0x3f800000  1.0
    1d00:	vcmp.f64	d16, d17
    1d04:	vmrs	APSR_nzcv, fpscr
    1d08:	bne	1d60 <read_var_array+0x608>
    1d0c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1d10:	vldr	d16, [r0, #16]
    1d14:	vcmp.f64	d16, #0.0
    1d18:	vmrs	APSR_nzcv, fpscr
    1d1c:	bne	1d60 <read_var_array+0x608>
    1d20:	ldr	r0, [sp, #124]	; 0x7c
    1d24:	cmp	r0, #5
    1d28:	beq	1d38 <read_var_array+0x5e0>
    1d2c:	ldr	r0, [sp, #124]	; 0x7c
    1d30:	cmp	r0, #6
    1d34:	bne	1d4c <read_var_array+0x5f4>
    1d38:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1d3c:	vldr	d0, [r0, #24]
    1d40:	bl	0 <coda_isNaN>
    1d44:	cmp	r0, #0
    1d48:	beq	1d5c <read_var_array+0x604>
    1d4c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1d50:	bl	0 <coda_conversion_delete>
    1d54:	movw	r0, #0
    1d58:	str	r0, [fp, #-72]	; 0xffffffb8
    1d5c:	b	1d60 <read_var_array+0x608>
    1d60:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d64:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1d68:	add	r2, sp, #104	; 0x68
    1d6c:	bl	844 <read_length_value>
    1d70:	cmp	r0, #0
    1d74:	beq	1d9c <read_var_array+0x644>
    1d78:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1d7c:	bl	0 <coda_dynamic_type_delete>
    1d80:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1d84:	bl	0 <coda_conversion_delete>
    1d88:	ldr	r0, [sp, #92]	; 0x5c
    1d8c:	bl	0 <free>
    1d90:	mvn	r0, #0
    1d94:	str	r0, [fp, #-20]	; 0xffffffec
    1d98:	b	2200 <read_var_array+0xaa8>
    1d9c:	ldr	r0, [sp, #80]	; 0x50
    1da0:	cmp	r0, #0
    1da4:	beq	1dbc <read_var_array+0x664>
    1da8:	ldr	r0, [sp, #104]	; 0x68
    1dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1db0:	ldr	r2, [r1, #60]	; 0x3c
    1db4:	add	r0, r2, r0
    1db8:	str	r0, [r1, #60]	; 0x3c
    1dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1dc0:	ldr	r0, [r0, #56]	; 0x38
    1dc4:	cmp	r0, #1
    1dc8:	bne	1e64 <read_var_array+0x70c>
    1dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1dd0:	ldr	r0, [r0, #52]	; 0x34
    1dd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1dd8:	ldr	r2, [r1]
    1ddc:	ldr	r3, [r1, #4]
    1de0:	add	r1, sp, #68	; 0x44
    1de4:	mov	ip, sp
    1de8:	str	r1, [ip, #8]
    1dec:	mov	r1, #0
    1df0:	str	r1, [ip, #4]
    1df4:	mov	r1, #4
    1df8:	str	r1, [ip]
    1dfc:	bl	5dc <read_bytes>
    1e00:	cmp	r0, #0
    1e04:	bge	1e2c <read_var_array+0x6d4>
    1e08:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1e0c:	bl	0 <coda_dynamic_type_delete>
    1e10:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1e14:	bl	0 <coda_conversion_delete>
    1e18:	ldr	r0, [sp, #92]	; 0x5c
    1e1c:	bl	0 <free>
    1e20:	mvn	r0, #0
    1e24:	str	r0, [fp, #-20]	; 0xffffffec
    1e28:	b	2200 <read_var_array+0xaa8>
    1e2c:	add	r0, sp, #68	; 0x44
    1e30:	bl	2210 <swap4>
    1e34:	ldr	r0, [sp, #68]	; 0x44
    1e38:	asr	lr, r0, #31
    1e3c:	str	r0, [fp, #-112]	; 0xffffff90
    1e40:	str	lr, [fp, #-108]	; 0xffffff94
    1e44:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1e48:	ldr	lr, [r0]
    1e4c:	ldr	r1, [r0, #4]
    1e50:	adds	lr, lr, #4
    1e54:	adc	r1, r1, #0
    1e58:	str	lr, [r0]
    1e5c:	str	r1, [r0, #4]
    1e60:	b	1ee8 <read_var_array+0x790>
    1e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1e68:	ldr	r0, [r0, #52]	; 0x34
    1e6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1e70:	ldr	r2, [r1]
    1e74:	ldr	r3, [r1, #4]
    1e78:	sub	r1, fp, #112	; 0x70
    1e7c:	mov	ip, sp
    1e80:	str	r1, [ip, #8]
    1e84:	mov	r1, #0
    1e88:	str	r1, [ip, #4]
    1e8c:	mov	r1, #8
    1e90:	str	r1, [ip]
    1e94:	bl	5dc <read_bytes>
    1e98:	cmp	r0, #0
    1e9c:	bge	1ec4 <read_var_array+0x76c>
    1ea0:	ldr	r0, [fp, #-68]	; 0xffffffbc
    1ea4:	bl	0 <coda_dynamic_type_delete>
    1ea8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1eac:	bl	0 <coda_conversion_delete>
    1eb0:	ldr	r0, [sp, #92]	; 0x5c
    1eb4:	bl	0 <free>
    1eb8:	mvn	r0, #0
    1ebc:	str	r0, [fp, #-20]	; 0xffffffec
    1ec0:	b	2200 <read_var_array+0xaa8>
    1ec4:	sub	r0, fp, #112	; 0x70
    1ec8:	bl	22d0 <swap8>
    1ecc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1ed0:	ldr	lr, [r0]
    1ed4:	ldr	r1, [r0, #4]
    1ed8:	adds	lr, lr, #8
    1edc:	adc	r1, r1, #0
    1ee0:	str	lr, [r0]
    1ee4:	str	r1, [r0, #4]
    1ee8:	ldr	r0, [sp, #84]	; 0x54
    1eec:	cmp	r0, #0
    1ef0:	beq	1fd0 <read_var_array+0x878>
    1ef4:	ldr	r0, [sp, #124]	; 0x7c
    1ef8:	cmp	r0, #2
    1efc:	bne	1f4c <read_var_array+0x7f4>
    1f00:	ldr	r0, [sp, #76]	; 0x4c
    1f04:	cmp	r0, #0
    1f08:	bne	1f18 <read_var_array+0x7c0>
    1f0c:	ldr	r0, [sp, #80]	; 0x50
    1f10:	cmp	r0, #0
    1f14:	bne	1f4c <read_var_array+0x7f4>
    1f18:	ldr	r0, [sp, #124]	; 0x7c
    1f1c:	ldr	r2, [fp, #-112]	; 0xffffff90
    1f20:	ldr	r3, [fp, #-108]	; 0xffffff94
    1f24:	ldr	r1, [sp, #80]	; 0x50
    1f28:	ldr	ip, [sp, #88]	; 0x58
    1f2c:	asr	lr, ip, #31
    1f30:	mov	r4, sp
    1f34:	str	lr, [r4, #12]
    1f38:	str	ip, [r4, #8]
    1f3c:	str	r1, [r4]
    1f40:	bl	0 <coda_netcdf_basic_type_new>
    1f44:	str	r0, [fp, #-64]	; 0xffffffc0
    1f48:	b	1fc0 <read_var_array+0x868>
    1f4c:	ldr	r0, [sp, #124]	; 0x7c
    1f50:	ldr	r2, [fp, #-112]	; 0xffffff90
    1f54:	ldr	r3, [fp, #-108]	; 0xffffff94
    1f58:	ldr	r1, [sp, #80]	; 0x50
    1f5c:	mov	ip, sp
    1f60:	mov	lr, #0
    1f64:	str	lr, [ip, #12]
    1f68:	mov	lr, #1
    1f6c:	str	lr, [ip, #8]
    1f70:	str	r1, [ip]
    1f74:	bl	0 <coda_netcdf_basic_type_new>
    1f78:	str	r0, [fp, #-64]	; 0xffffffc0
    1f7c:	ldr	r0, [sp, #76]	; 0x4c
    1f80:	cmp	r0, #8
    1f84:	bge	1fac <read_var_array+0x854>
    1f88:	ldr	r0, [sp, #88]	; 0x58
    1f8c:	ldr	r1, [sp, #76]	; 0x4c
    1f90:	sub	r2, fp, #104	; 0x68
    1f94:	add	r1, r2, r1, lsl #2
    1f98:	str	r0, [r1]
    1f9c:	ldr	r0, [sp, #76]	; 0x4c
    1fa0:	add	r0, r0, #1
    1fa4:	str	r0, [sp, #76]	; 0x4c
    1fa8:	b	1fbc <read_var_array+0x864>
    1fac:	ldr	r0, [sp, #88]	; 0x58
    1fb0:	ldr	r1, [fp, #-76]	; 0xffffffb4
    1fb4:	mul	r0, r1, r0
    1fb8:	str	r0, [fp, #-76]	; 0xffffffb4
    1fbc:	b	1fc0 <read_var_array+0x868>
    1fc0:	b	1ffc <read_var_array+0x8a4>
    1fc4:	nop	{0}
	...
    1fd0:	ldr	r0, [sp, #124]	; 0x7c
    1fd4:	ldr	r2, [fp, #-112]	; 0xffffff90
    1fd8:	ldr	r3, [fp, #-108]	; 0xffffff94
    1fdc:	mov	r1, sp
    1fe0:	mov	ip, #0
    1fe4:	str	ip, [r1, #12]
    1fe8:	mov	lr, #1
    1fec:	str	lr, [r1, #8]
    1ff0:	str	ip, [r1]
    1ff4:	bl	0 <coda_netcdf_basic_type_new>
    1ff8:	str	r0, [fp, #-64]	; 0xffffffc0
    1ffc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    2000:	movw	r1, #0
    2004:	cmp	r0, r1
    2008:	bne	2030 <read_var_array+0x8d8>
    200c:	ldr	r0, [fp, #-68]	; 0xffffffbc
    2010:	bl	0 <coda_dynamic_type_delete>
    2014:	ldr	r0, [fp, #-72]	; 0xffffffb8
    2018:	bl	0 <coda_conversion_delete>
    201c:	ldr	r0, [sp, #92]	; 0x5c
    2020:	bl	0 <free>
    2024:	mvn	r0, #0
    2028:	str	r0, [fp, #-20]	; 0xffffffec
    202c:	b	2200 <read_var_array+0xaa8>
    2030:	ldr	r0, [fp, #-72]	; 0xffffffb8
    2034:	movw	r1, #0
    2038:	cmp	r0, r1
    203c:	beq	207c <read_var_array+0x924>
    2040:	ldr	r0, [fp, #-64]	; 0xffffffc0
    2044:	ldr	r1, [fp, #-72]	; 0xffffffb8
    2048:	bl	0 <coda_netcdf_basic_type_set_conversion>
    204c:	cmp	r0, #0
    2050:	beq	2078 <read_var_array+0x920>
    2054:	ldr	r0, [fp, #-68]	; 0xffffffbc
    2058:	bl	0 <coda_dynamic_type_delete>
    205c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    2060:	bl	0 <coda_conversion_delete>
    2064:	ldr	r0, [sp, #92]	; 0x5c
    2068:	bl	0 <free>
    206c:	mvn	r0, #0
    2070:	str	r0, [fp, #-20]	; 0xffffffec
    2074:	b	2200 <read_var_array+0xaa8>
    2078:	b	207c <read_var_array+0x924>
    207c:	ldr	r0, [sp, #76]	; 0x4c
    2080:	cmp	r0, #0
    2084:	bne	2110 <read_var_array+0x9b8>
    2088:	ldr	r0, [fp, #-68]	; 0xffffffbc
    208c:	movw	r1, #0
    2090:	cmp	r0, r1
    2094:	beq	20d4 <read_var_array+0x97c>
    2098:	ldr	r0, [fp, #-64]	; 0xffffffc0
    209c:	ldr	r1, [fp, #-68]	; 0xffffffbc
    20a0:	bl	0 <coda_netcdf_basic_type_set_attributes>
    20a4:	cmp	r0, #0
    20a8:	beq	20d0 <read_var_array+0x978>
    20ac:	ldr	r0, [fp, #-64]	; 0xffffffc0
    20b0:	bl	0 <coda_dynamic_type_delete>
    20b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
    20b8:	bl	0 <coda_dynamic_type_delete>
    20bc:	ldr	r0, [sp, #92]	; 0x5c
    20c0:	bl	0 <free>
    20c4:	mvn	r0, #0
    20c8:	str	r0, [fp, #-20]	; 0xffffffec
    20cc:	b	2200 <read_var_array+0xaa8>
    20d0:	b	20d4 <read_var_array+0x97c>
    20d4:	ldr	r0, [fp, #16]
    20d8:	ldr	r1, [sp, #92]	; 0x5c
    20dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    20e0:	movw	r3, #1
    20e4:	bl	0 <coda_mem_record_add_field>
    20e8:	cmp	r0, #0
    20ec:	beq	210c <read_var_array+0x9b4>
    20f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    20f4:	bl	0 <coda_dynamic_type_delete>
    20f8:	ldr	r0, [sp, #92]	; 0x5c
    20fc:	bl	0 <free>
    2100:	mvn	r0, #0
    2104:	str	r0, [fp, #-20]	; 0xffffffec
    2108:	b	2200 <read_var_array+0xaa8>
    210c:	b	21e0 <read_var_array+0xa88>
    2110:	sub	r1, fp, #104	; 0x68
    2114:	ldr	r0, [sp, #76]	; 0x4c
    2118:	ldr	r2, [fp, #-64]	; 0xffffffc0
    211c:	bl	0 <coda_netcdf_array_new>
    2120:	str	r0, [sp, #64]	; 0x40
    2124:	ldr	r0, [sp, #64]	; 0x40
    2128:	movw	r1, #0
    212c:	cmp	r0, r1
    2130:	bne	2158 <read_var_array+0xa00>
    2134:	ldr	r0, [fp, #-64]	; 0xffffffc0
    2138:	bl	0 <coda_dynamic_type_delete>
    213c:	ldr	r0, [fp, #-68]	; 0xffffffbc
    2140:	bl	0 <coda_dynamic_type_delete>
    2144:	ldr	r0, [sp, #92]	; 0x5c
    2148:	bl	0 <free>
    214c:	mvn	r0, #0
    2150:	str	r0, [fp, #-20]	; 0xffffffec
    2154:	b	2200 <read_var_array+0xaa8>
    2158:	ldr	r0, [fp, #-68]	; 0xffffffbc
    215c:	movw	r1, #0
    2160:	cmp	r0, r1
    2164:	beq	21a4 <read_var_array+0xa4c>
    2168:	ldr	r0, [sp, #64]	; 0x40
    216c:	ldr	r1, [fp, #-68]	; 0xffffffbc
    2170:	bl	0 <coda_netcdf_array_set_attributes>
    2174:	cmp	r0, #0
    2178:	beq	21a0 <read_var_array+0xa48>
    217c:	ldr	r0, [sp, #64]	; 0x40
    2180:	bl	0 <coda_dynamic_type_delete>
    2184:	ldr	r0, [fp, #-68]	; 0xffffffbc
    2188:	bl	0 <coda_dynamic_type_delete>
    218c:	ldr	r0, [sp, #92]	; 0x5c
    2190:	bl	0 <free>
    2194:	mvn	r0, #0
    2198:	str	r0, [fp, #-20]	; 0xffffffec
    219c:	b	2200 <read_var_array+0xaa8>
    21a0:	b	21a4 <read_var_array+0xa4c>
    21a4:	ldr	r0, [fp, #16]
    21a8:	ldr	r1, [sp, #92]	; 0x5c
    21ac:	ldr	r2, [sp, #64]	; 0x40
    21b0:	movw	r3, #1
    21b4:	bl	0 <coda_mem_record_add_field>
    21b8:	cmp	r0, #0
    21bc:	beq	21dc <read_var_array+0xa84>
    21c0:	ldr	r0, [sp, #64]	; 0x40
    21c4:	bl	0 <coda_dynamic_type_delete>
    21c8:	ldr	r0, [sp, #92]	; 0x5c
    21cc:	bl	0 <free>
    21d0:	mvn	r0, #0
    21d4:	str	r0, [fp, #-20]	; 0xffffffec
    21d8:	b	2200 <read_var_array+0xaa8>
    21dc:	b	21e0 <read_var_array+0xa88>
    21e0:	ldr	r0, [sp, #92]	; 0x5c
    21e4:	bl	0 <free>
    21e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    21ec:	add	r0, r0, #1
    21f0:	str	r0, [fp, #-60]	; 0xffffffc4
    21f4:	b	18c0 <read_var_array+0x168>
    21f8:	movw	r0, #0
    21fc:	str	r0, [fp, #-20]	; 0xffffffec
    2200:	ldr	r0, [fp, #-20]	; 0xffffffec
    2204:	sub	sp, fp, #16
    2208:	pop	{r4, r5, r6, r7, fp, pc}
    220c:	.word	0xfffffed4

00002210 <swap4>:
    2210:	sub	sp, sp, #8
    2214:	str	r0, [sp, #4]
    2218:	ldr	r0, [sp, #4]
    221c:	str	r0, [sp]
    2220:	ldr	r0, [sp]
    2224:	ldrb	r0, [r0]
    2228:	ldr	r1, [sp]
    222c:	ldrb	r1, [r1, #3]
    2230:	eor	r0, r0, r1
    2234:	ldr	r1, [sp]
    2238:	strb	r0, [r1]
    223c:	ldr	r0, [sp]
    2240:	ldrb	r0, [r0]
    2244:	ldr	r1, [sp]
    2248:	ldrb	r1, [r1, #3]
    224c:	eor	r0, r0, r1
    2250:	ldr	r1, [sp]
    2254:	strb	r0, [r1, #3]
    2258:	ldr	r0, [sp]
    225c:	ldrb	r0, [r0]
    2260:	ldr	r1, [sp]
    2264:	ldrb	r1, [r1, #3]
    2268:	eor	r0, r0, r1
    226c:	ldr	r1, [sp]
    2270:	strb	r0, [r1]
    2274:	ldr	r0, [sp]
    2278:	ldrb	r0, [r0, #1]
    227c:	ldr	r1, [sp]
    2280:	ldrb	r1, [r1, #2]
    2284:	eor	r0, r0, r1
    2288:	ldr	r1, [sp]
    228c:	strb	r0, [r1, #1]
    2290:	ldr	r0, [sp]
    2294:	ldrb	r0, [r0, #1]
    2298:	ldr	r1, [sp]
    229c:	ldrb	r1, [r1, #2]
    22a0:	eor	r0, r0, r1
    22a4:	ldr	r1, [sp]
    22a8:	strb	r0, [r1, #2]
    22ac:	ldr	r0, [sp]
    22b0:	ldrb	r0, [r0, #1]
    22b4:	ldr	r1, [sp]
    22b8:	ldrb	r1, [r1, #2]
    22bc:	eor	r0, r0, r1
    22c0:	ldr	r1, [sp]
    22c4:	strb	r0, [r1, #1]
    22c8:	add	sp, sp, #8
    22cc:	bx	lr

000022d0 <swap8>:
    22d0:	sub	sp, sp, #8
    22d4:	str	r0, [sp, #4]
    22d8:	ldr	r0, [sp, #4]
    22dc:	str	r0, [sp]
    22e0:	ldr	r0, [sp]
    22e4:	ldrb	r0, [r0]
    22e8:	ldr	r1, [sp]
    22ec:	ldrb	r1, [r1, #7]
    22f0:	eor	r0, r0, r1
    22f4:	ldr	r1, [sp]
    22f8:	strb	r0, [r1]
    22fc:	ldr	r0, [sp]
    2300:	ldrb	r0, [r0]
    2304:	ldr	r1, [sp]
    2308:	ldrb	r1, [r1, #7]
    230c:	eor	r0, r0, r1
    2310:	ldr	r1, [sp]
    2314:	strb	r0, [r1, #7]
    2318:	ldr	r0, [sp]
    231c:	ldrb	r0, [r0]
    2320:	ldr	r1, [sp]
    2324:	ldrb	r1, [r1, #7]
    2328:	eor	r0, r0, r1
    232c:	ldr	r1, [sp]
    2330:	strb	r0, [r1]
    2334:	ldr	r0, [sp]
    2338:	ldrb	r0, [r0, #1]
    233c:	ldr	r1, [sp]
    2340:	ldrb	r1, [r1, #6]
    2344:	eor	r0, r0, r1
    2348:	ldr	r1, [sp]
    234c:	strb	r0, [r1, #1]
    2350:	ldr	r0, [sp]
    2354:	ldrb	r0, [r0, #1]
    2358:	ldr	r1, [sp]
    235c:	ldrb	r1, [r1, #6]
    2360:	eor	r0, r0, r1
    2364:	ldr	r1, [sp]
    2368:	strb	r0, [r1, #6]
    236c:	ldr	r0, [sp]
    2370:	ldrb	r0, [r0, #1]
    2374:	ldr	r1, [sp]
    2378:	ldrb	r1, [r1, #6]
    237c:	eor	r0, r0, r1
    2380:	ldr	r1, [sp]
    2384:	strb	r0, [r1, #1]
    2388:	ldr	r0, [sp]
    238c:	ldrb	r0, [r0, #2]
    2390:	ldr	r1, [sp]
    2394:	ldrb	r1, [r1, #5]
    2398:	eor	r0, r0, r1
    239c:	ldr	r1, [sp]
    23a0:	strb	r0, [r1, #2]
    23a4:	ldr	r0, [sp]
    23a8:	ldrb	r0, [r0, #2]
    23ac:	ldr	r1, [sp]
    23b0:	ldrb	r1, [r1, #5]
    23b4:	eor	r0, r0, r1
    23b8:	ldr	r1, [sp]
    23bc:	strb	r0, [r1, #5]
    23c0:	ldr	r0, [sp]
    23c4:	ldrb	r0, [r0, #2]
    23c8:	ldr	r1, [sp]
    23cc:	ldrb	r1, [r1, #5]
    23d0:	eor	r0, r0, r1
    23d4:	ldr	r1, [sp]
    23d8:	strb	r0, [r1, #2]
    23dc:	ldr	r0, [sp]
    23e0:	ldrb	r0, [r0, #3]
    23e4:	ldr	r1, [sp]
    23e8:	ldrb	r1, [r1, #4]
    23ec:	eor	r0, r0, r1
    23f0:	ldr	r1, [sp]
    23f4:	strb	r0, [r1, #3]
    23f8:	ldr	r0, [sp]
    23fc:	ldrb	r0, [r0, #3]
    2400:	ldr	r1, [sp]
    2404:	ldrb	r1, [r1, #4]
    2408:	eor	r0, r0, r1
    240c:	ldr	r1, [sp]
    2410:	strb	r0, [r1, #4]
    2414:	ldr	r0, [sp]
    2418:	ldrb	r0, [r0, #3]
    241c:	ldr	r1, [sp]
    2420:	ldrb	r1, [r1, #4]
    2424:	eor	r0, r0, r1
    2428:	ldr	r1, [sp]
    242c:	strb	r0, [r1, #3]
    2430:	add	sp, sp, #8
    2434:	bx	lr

00002438 <swap2>:
    2438:	sub	sp, sp, #8
    243c:	str	r0, [sp, #4]
    2440:	ldr	r0, [sp, #4]
    2444:	str	r0, [sp]
    2448:	ldr	r0, [sp]
    244c:	ldrb	r0, [r0]
    2450:	ldr	r1, [sp]
    2454:	ldrb	r1, [r1, #1]
    2458:	eor	r0, r0, r1
    245c:	ldr	r1, [sp]
    2460:	strb	r0, [r1]
    2464:	ldr	r0, [sp]
    2468:	ldrb	r0, [r0]
    246c:	ldr	r1, [sp]
    2470:	ldrb	r1, [r1, #1]
    2474:	eor	r0, r0, r1
    2478:	ldr	r1, [sp]
    247c:	strb	r0, [r1, #1]
    2480:	ldr	r0, [sp]
    2484:	ldrb	r0, [r0]
    2488:	ldr	r1, [sp]
    248c:	ldrb	r1, [r1, #1]
    2490:	eor	r0, r0, r1
    2494:	ldr	r1, [sp]
    2498:	strb	r0, [r1]
    249c:	add	sp, sp, #8
    24a0:	bx	lr
