
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c_json_parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_fb_gen_c_json_parser>:
       0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
       4:	add	fp, sp, #28
       8:	sub	sp, sp, #4
       c:	vpush	{d8-d9}
      10:	sub	sp, sp, #456	; 0x1c8
      14:	mov	r4, r0
      18:	ldr	r0, [r0, #208]	; 0xd0
      1c:	movw	r1, #0
      20:	movt	r1, #0
      24:	ldr	r2, [r0, #164]	; 0xa4
      28:	mov	r0, r4
      2c:	bl	20f8 <println>
      30:	ldr	r0, [r4, #208]	; 0xd0
      34:	movw	r1, #0
      38:	movt	r1, #0
      3c:	ldr	r2, [r0, #164]	; 0xa4
      40:	mov	r0, r4
      44:	bl	20f8 <println>
      48:	movw	r5, #0
      4c:	mov	r0, r4
      50:	movt	r5, #0
      54:	mov	r1, r5
      58:	bl	20f8 <println>
      5c:	movw	r1, #0
      60:	mov	r0, r4
      64:	movt	r1, #0
      68:	bl	20f8 <println>
      6c:	mov	r0, r4
      70:	mov	r1, r5
      74:	bl	20f8 <println>
      78:	movw	r1, #0
      7c:	mov	r0, r4
      80:	movt	r1, #0
      84:	bl	20f8 <println>
      88:	movw	r1, #0
      8c:	movw	r2, #0
      90:	mov	r0, r4
      94:	movt	r1, #0
      98:	movt	r2, #0
      9c:	bl	0 <__flatcc_fb_gen_c_includes>
      a0:	ldr	r0, [r4, #212]	; 0xd4
      a4:	ldr	r0, [r0, #140]	; 0x8c
      a8:	cmp	r0, #0
      ac:	beq	c8 <__flatcc_fb_gen_c_json_parser+0xc8>
      b0:	ldr	r3, [r4, #204]	; 0xcc
      b4:	movw	r0, #0
      b8:	mov	r1, #36	; 0x24
      bc:	mov	r2, #1
      c0:	movt	r0, #0
      c4:	bl	0 <fwrite>
      c8:	movw	r1, #0
      cc:	mov	r0, r4
      d0:	movt	r1, #0
      d4:	bl	20f8 <println>
      d8:	ldr	r6, [r4, #208]	; 0xd0
      dc:	add	r0, sp, #232	; 0xe8
      e0:	mov	r1, #0
      e4:	mov	r2, #220	; 0xdc
      e8:	ldr	r5, [r6, #52]	; 0x34
      ec:	bl	0 <memset>
      f0:	cmp	r5, #0
      f4:	beq	1fc <__flatcc_fb_gen_c_json_parser+0x1fc>
      f8:	ldrh	r0, [r5, #8]
      fc:	cmp	r0, #1
     100:	bhi	1fc <__flatcc_fb_gen_c_json_parser+0x1fc>
     104:	movw	r1, #0
     108:	mov	r0, r4
     10c:	movt	r1, #0
     110:	bl	20f8 <println>
     114:	movw	r1, #0
     118:	mov	r0, r4
     11c:	movt	r1, #0
     120:	bl	20f8 <println>
     124:	movw	r1, #0
     128:	mov	r0, r4
     12c:	movt	r1, #0
     130:	bl	20f8 <println>
     134:	movw	r1, #0
     138:	mov	r0, r4
     13c:	movt	r1, #0
     140:	bl	20f8 <println>
     144:	movw	r1, #0
     148:	mov	r0, r4
     14c:	movt	r1, #0
     150:	bl	20f8 <println>
     154:	movw	r1, #0
     158:	mov	r0, r4
     15c:	movt	r1, #0
     160:	bl	20f8 <println>
     164:	movw	r1, #0
     168:	mov	r0, r4
     16c:	movt	r1, #0
     170:	bl	20f8 <println>
     174:	movw	r1, #0
     178:	mov	r0, r4
     17c:	movt	r1, #0
     180:	bl	20f8 <println>
     184:	movw	r1, #0
     188:	mov	r0, r4
     18c:	movt	r1, #0
     190:	bl	20f8 <println>
     194:	ldr	r0, [r4, #208]	; 0xd0
     198:	movw	r1, #0
     19c:	movt	r1, #0
     1a0:	ldr	r2, [r0, #160]	; 0xa0
     1a4:	mov	r0, r4
     1a8:	bl	20f8 <println>
     1ac:	ldr	r0, [r4, #220]	; 0xdc
     1b0:	movw	r1, #0
     1b4:	movt	r1, #0
     1b8:	add	r0, r0, #2
     1bc:	str	r0, [r4, #220]	; 0xdc
     1c0:	mov	r0, r4
     1c4:	bl	20f8 <println>
     1c8:	ldr	r0, [r4, #220]	; 0xdc
     1cc:	cmp	r0, #0
     1d0:	beq	1fa0 <__flatcc_fb_gen_c_json_parser+0x1fa0>
     1d4:	subs	r1, r0, #1
     1d8:	str	r1, [r4, #220]	; 0xdc
     1dc:	beq	1fa0 <__flatcc_fb_gen_c_json_parser+0x1fa0>
     1e0:	movw	r1, #0
     1e4:	sub	r0, r0, #2
     1e8:	str	r0, [r4, #220]	; 0xdc
     1ec:	movt	r1, #0
     1f0:	mov	r0, r4
     1f4:	bl	20f8 <println>
     1f8:	ldr	r6, [r4, #208]	; 0xd0
     1fc:	ldr	r5, [r6, #40]	; 0x28
     200:	cmp	r5, #0
     204:	beq	390 <__flatcc_fb_gen_c_json_parser+0x390>
     208:	movw	r7, #0
     20c:	movw	r8, #0
     210:	movw	r9, #0
     214:	movw	sl, #0
     218:	add	r6, sp, #232	; 0xe8
     21c:	movt	r7, #0
     220:	movt	r8, #0
     224:	movt	r9, #0
     228:	movt	sl, #0
     22c:	ldrh	r0, [r5, #8]
     230:	cmp	r0, #4
     234:	bhi	380 <__flatcc_fb_gen_c_json_parser+0x380>
     238:	add	r1, pc, #0
     23c:	ldr	pc, [r1, r0, lsl #2]
     240:	.word	0x00000254
     244:	.word	0x000002cc
     248:	.word	0x00000380
     24c:	.word	0x00000274
     250:	.word	0x00000308
     254:	ldr	r0, [r5, #12]
     258:	mov	r1, r5
     25c:	mov	r2, r6
     260:	bl	0 <__flatcc_fb_scoped_symbol_name>
     264:	movw	r1, #0
     268:	mov	r0, r4
     26c:	movt	r1, #0
     270:	b	2fc <__flatcc_fb_gen_c_json_parser+0x2fc>
     274:	ldr	r0, [r5, #12]
     278:	mov	r1, r5
     27c:	mov	r2, r6
     280:	bl	0 <__flatcc_fb_scoped_symbol_name>
     284:	mov	r0, r4
     288:	mov	r1, r7
     28c:	mov	r2, r6
     290:	bl	20f8 <println>
     294:	ldr	r0, [r4, #220]	; 0xdc
     298:	mov	r1, r8
     29c:	mov	r2, r6
     2a0:	add	r0, r0, #2
     2a4:	str	r0, [r4, #220]	; 0xdc
     2a8:	mov	r0, r4
     2ac:	bl	20f8 <println>
     2b0:	ldr	r0, [r4, #220]	; 0xdc
     2b4:	cmp	r0, #0
     2b8:	beq	1c20 <__flatcc_fb_gen_c_json_parser+0x1c20>
     2bc:	subs	r1, r0, #1
     2c0:	str	r1, [r4, #220]	; 0xdc
     2c4:	bne	378 <__flatcc_fb_gen_c_json_parser+0x378>
     2c8:	b	1c20 <__flatcc_fb_gen_c_json_parser+0x1c20>
     2cc:	ldr	r0, [r5, #12]
     2d0:	mov	r1, r5
     2d4:	mov	r2, r6
     2d8:	bl	0 <__flatcc_fb_scoped_symbol_name>
     2dc:	movw	r1, #0
     2e0:	mov	r0, r4
     2e4:	mov	r2, r6
     2e8:	movt	r1, #0
     2ec:	bl	20f8 <println>
     2f0:	movw	r1, #0
     2f4:	mov	r0, r4
     2f8:	movt	r1, #0
     2fc:	mov	r2, r6
     300:	bl	20f8 <println>
     304:	b	380 <__flatcc_fb_gen_c_json_parser+0x380>
     308:	ldr	r0, [r5, #12]
     30c:	mov	r1, r5
     310:	mov	r2, r6
     314:	bl	0 <__flatcc_fb_scoped_symbol_name>
     318:	mov	r0, r4
     31c:	mov	r1, r9
     320:	mov	r2, r6
     324:	bl	20f8 <println>
     328:	mov	r0, r4
     32c:	mov	r1, sl
     330:	mov	r2, r6
     334:	bl	20f8 <println>
     338:	mov	r0, r4
     33c:	mov	r1, r7
     340:	mov	r2, r6
     344:	bl	20f8 <println>
     348:	ldr	r0, [r4, #220]	; 0xdc
     34c:	mov	r1, r8
     350:	add	r0, r0, #2
     354:	str	r0, [r4, #220]	; 0xdc
     358:	mov	r0, r4
     35c:	bl	20f8 <println>
     360:	ldr	r0, [r4, #220]	; 0xdc
     364:	cmp	r0, #0
     368:	beq	1c40 <__flatcc_fb_gen_c_json_parser+0x1c40>
     36c:	subs	r1, r0, #1
     370:	str	r1, [r4, #220]	; 0xdc
     374:	beq	1c40 <__flatcc_fb_gen_c_json_parser+0x1c40>
     378:	sub	r0, r0, #2
     37c:	str	r0, [r4, #220]	; 0xdc
     380:	ldr	r5, [r5]
     384:	cmp	r5, #0
     388:	bne	22c <__flatcc_fb_gen_c_json_parser+0x22c>
     38c:	ldr	r6, [r4, #208]	; 0xd0
     390:	ldr	r0, [r6, #60]	; 0x3c
     394:	movw	r1, #0
     398:	mov	r2, r4
     39c:	movt	r1, #0
     3a0:	bl	0 <fb_scope_table_visit>
     3a4:	ldr	r0, [r4, #208]	; 0xd0
     3a8:	movw	r1, #0
     3ac:	movt	r1, #0
     3b0:	ldr	r2, [r0, #160]	; 0xa0
     3b4:	mov	r0, r4
     3b8:	bl	20f8 <println>
     3bc:	ldr	r0, [r4, #220]	; 0xdc
     3c0:	movw	r1, #0
     3c4:	movt	r1, #0
     3c8:	add	r0, r0, #2
     3cc:	str	r0, [r4, #220]	; 0xdc
     3d0:	mov	r0, r4
     3d4:	bl	20f8 <println>
     3d8:	ldr	r0, [r4, #220]	; 0xdc
     3dc:	cmp	r0, #0
     3e0:	beq	1f40 <__flatcc_fb_gen_c_json_parser+0x1f40>
     3e4:	subs	r1, r0, #1
     3e8:	str	r1, [r4, #220]	; 0xdc
     3ec:	beq	1f40 <__flatcc_fb_gen_c_json_parser+0x1f40>
     3f0:	movw	r1, #0
     3f4:	sub	r0, r0, #2
     3f8:	str	r0, [r4, #220]	; 0xdc
     3fc:	movt	r1, #0
     400:	mov	r0, r4
     404:	bl	20f8 <println>
     408:	ldr	r0, [r4, #208]	; 0xd0
     40c:	ldr	r8, [r0, #40]	; 0x28
     410:	cmp	r8, #0
     414:	beq	1288 <__flatcc_fb_gen_c_json_parser+0x1288>
     418:	movw	r9, #0
     41c:	vmov.i32	q4, #0	; 0x00000000
     420:	add	r5, sp, #8
     424:	add	sl, sp, #232	; 0xe8
     428:	movt	r9, #0
     42c:	ldrh	r0, [r8, #8]
     430:	cmp	r0, #4
     434:	bhi	1278 <__flatcc_fb_gen_c_json_parser+0x1278>
     438:	add	r1, pc, #0
     43c:	ldr	pc, [r1, r0, lsl #2]
     440:	.word	0x00000454
     444:	.word	0x00000608
     448:	.word	0x00001278
     44c:	.word	0x00000c3c
     450:	.word	0x00000794
     454:	mov	r1, #12
     458:	vst1.64	{d8-d9}, [r5], r1
     45c:	vst1.32	{d8-d9}, [r5]
     460:	ldrh	r0, [r8, #8]
     464:	cmp	r0, #0
     468:	bne	1c60 <__flatcc_fb_gen_c_json_parser+0x1c60>
     46c:	mov	r0, r8
     470:	add	r1, sp, #228	; 0xe4
     474:	bl	2868 <build_compound_dict>
     478:	ldr	r7, [sp, #228]	; 0xe4
     47c:	cmp	r0, #0
     480:	str	r0, [sp, #8]
     484:	bne	490 <__flatcc_fb_gen_c_json_parser+0x490>
     488:	cmp	r7, #1
     48c:	bge	1c80 <__flatcc_fb_gen_c_json_parser+0x1c80>
     490:	movw	r1, #0
     494:	mov	r5, #0
     498:	cmp	r7, #1
     49c:	movt	r1, #0
     4a0:	str	r5, [sp, #24]
     4a4:	str	r8, [sp, #20]
     4a8:	str	r1, [sp, #12]
     4ac:	movw	r1, #0
     4b0:	movt	r1, #0
     4b4:	str	r1, [sp, #16]
     4b8:	str	r5, [sp, #28]
     4bc:	blt	53c <__flatcc_fb_gen_c_json_parser+0x53c>
     4c0:	mov	r5, #0
     4c4:	cmp	r7, #5
     4c8:	mov	r1, #0
     4cc:	bcc	518 <__flatcc_fb_gen_c_json_parser+0x518>
     4d0:	ands	r1, r7, #3
     4d4:	vmov.i32	q8, #0	; 0x00000000
     4d8:	add	r2, r0, #12
     4dc:	movweq	r1, #4
     4e0:	sub	r1, r7, r1
     4e4:	mov	r3, r1
     4e8:	vld4.32	{d18,d20,d22,d24}, [r2]!
     4ec:	subs	r3, r3, #4
     4f0:	vld4.32	{d19,d21,d23,d25}, [r2]!
     4f4:	vceq.i32	q9, q9, #0
     4f8:	vmvn	q9, q9
     4fc:	vsub.i32	q8, q8, q9
     500:	bne	4e8 <__flatcc_fb_gen_c_json_parser+0x4e8>
     504:	vext.8	q9, q8, q8, #8
     508:	vadd.i32	q8, q8, q9
     50c:	vdup.32	q9, d16[1]
     510:	vadd.i32	q8, q8, q9
     514:	vmov.32	r5, d16[0]
     518:	add	r0, r0, r1, lsl #4
     51c:	sub	r2, r7, r1
     520:	add	r0, r0, #12
     524:	ldr	r1, [r0], #16
     528:	cmp	r1, #0
     52c:	addne	r5, r5, #1
     530:	subs	r2, r2, #1
     534:	bne	524 <__flatcc_fb_gen_c_json_parser+0x524>
     538:	str	r5, [sp, #28]
     53c:	mov	r0, sl
     540:	mov	r1, #0
     544:	mov	r2, #220	; 0xdc
     548:	bl	0 <memset>
     54c:	ldr	r0, [r8, #12]
     550:	mov	r1, r8
     554:	mov	r2, sl
     558:	bl	0 <__flatcc_fb_scoped_symbol_name>
     55c:	movw	r1, #0
     560:	mov	r0, r4
     564:	mov	r2, sl
     568:	movt	r1, #0
     56c:	bl	20f8 <println>
     570:	movw	r1, #0
     574:	mov	r0, r4
     578:	movt	r1, #0
     57c:	bl	20f8 <println>
     580:	ldr	r0, [r4, #220]	; 0xdc
     584:	movw	r1, #0
     588:	movt	r1, #0
     58c:	add	r0, r0, #1
     590:	str	r0, [r4, #220]	; 0xdc
     594:	mov	r0, r4
     598:	bl	20f8 <println>
     59c:	cmp	r7, #1
     5a0:	blt	5e8 <__flatcc_fb_gen_c_json_parser+0x5e8>
     5a4:	movw	r1, #0
     5a8:	mov	r0, r4
     5ac:	movt	r1, #0
     5b0:	bl	20f8 <println>
     5b4:	movw	r1, #0
     5b8:	mov	r0, r4
     5bc:	movt	r1, #0
     5c0:	bl	20f8 <println>
     5c4:	movw	r1, #0
     5c8:	mov	r0, r4
     5cc:	movt	r1, #0
     5d0:	bl	20f8 <println>
     5d4:	movw	r1, #0
     5d8:	mov	r0, r4
     5dc:	movt	r1, #0
     5e0:	bl	20f8 <println>
     5e4:	ldr	r5, [sp, #28]
     5e8:	cmp	r5, #0
     5ec:	beq	c4c <__flatcc_fb_gen_c_json_parser+0xc4c>
     5f0:	movw	r1, #0
     5f4:	mov	r0, r4
     5f8:	movt	r1, #0
     5fc:	bl	20f8 <println>
     600:	ldr	r9, [sp, #28]
     604:	b	c50 <__flatcc_fb_gen_c_json_parser+0xc50>
     608:	mov	r0, r5
     60c:	mov	r1, #12
     610:	vst1.64	{d8-d9}, [r0], r1
     614:	vst1.32	{d8-d9}, [r0]
     618:	ldrh	r0, [r8, #8]
     61c:	cmp	r0, #1
     620:	bne	1cd0 <__flatcc_fb_gen_c_json_parser+0x1cd0>
     624:	mov	r0, r8
     628:	add	r1, sp, #228	; 0xe4
     62c:	bl	2868 <build_compound_dict>
     630:	ldr	r7, [sp, #228]	; 0xe4
     634:	cmp	r0, #0
     638:	str	r0, [sp, #8]
     63c:	bne	648 <__flatcc_fb_gen_c_json_parser+0x648>
     640:	cmp	r7, #1
     644:	bge	1cf0 <__flatcc_fb_gen_c_json_parser+0x1cf0>
     648:	mov	r0, #1
     64c:	mov	r1, #0
     650:	mov	r2, #220	; 0xdc
     654:	str	r0, [sp, #24]
     658:	movw	r0, #0
     65c:	str	r8, [sp, #20]
     660:	movt	r0, #0
     664:	str	r0, [sp, #12]
     668:	movw	r0, #0
     66c:	movt	r0, #0
     670:	str	r0, [sp, #16]
     674:	mov	r0, sl
     678:	bl	0 <memset>
     67c:	ldr	r0, [r8, #12]
     680:	mov	r1, r8
     684:	mov	r2, sl
     688:	bl	0 <__flatcc_fb_scoped_symbol_name>
     68c:	movw	r1, #0
     690:	mov	r0, r4
     694:	mov	r2, sl
     698:	movt	r1, #0
     69c:	bl	20f8 <println>
     6a0:	movw	r1, #0
     6a4:	mov	r0, r4
     6a8:	movt	r1, #0
     6ac:	bl	20f8 <println>
     6b0:	ldr	r0, [r4, #220]	; 0xdc
     6b4:	movw	r1, #0
     6b8:	movt	r1, #0
     6bc:	add	r0, r0, #1
     6c0:	str	r0, [r4, #220]	; 0xdc
     6c4:	mov	r0, r4
     6c8:	bl	20f8 <println>
     6cc:	cmp	r7, #1
     6d0:	blt	714 <__flatcc_fb_gen_c_json_parser+0x714>
     6d4:	movw	r1, #0
     6d8:	mov	r0, r4
     6dc:	movt	r1, #0
     6e0:	bl	20f8 <println>
     6e4:	movw	r1, #0
     6e8:	mov	r0, r4
     6ec:	movt	r1, #0
     6f0:	bl	20f8 <println>
     6f4:	movw	r1, #0
     6f8:	mov	r0, r4
     6fc:	movt	r1, #0
     700:	bl	20f8 <println>
     704:	movw	r1, #0
     708:	mov	r0, r4
     70c:	movt	r1, #0
     710:	bl	20f8 <println>
     714:	mov	r0, r4
     718:	mov	r1, r9
     71c:	bl	20f8 <println>
     720:	movw	r1, #0
     724:	mov	r0, r4
     728:	movt	r1, #0
     72c:	bl	20f8 <println>
     730:	movw	r1, #0
     734:	mov	r0, r4
     738:	movt	r1, #0
     73c:	bl	20f8 <println>
     740:	ldr	r0, [r4, #220]	; 0xdc
     744:	cmp	r7, #0
     748:	add	r0, r0, #1
     74c:	str	r0, [r4, #220]	; 0xdc
     750:	mov	r0, r4
     754:	beq	fe4 <__flatcc_fb_gen_c_json_parser+0xfe4>
     758:	movw	r1, #0
     75c:	movt	r1, #0
     760:	bl	20f8 <println>
     764:	movw	r1, #0
     768:	mov	r0, r4
     76c:	movt	r1, #0
     770:	bl	20f8 <println>
     774:	mov	r0, #0
     778:	sub	r3, r7, #1
     77c:	mov	r1, r5
     780:	mov	r2, #0
     784:	str	r0, [sp]
     788:	mov	r0, r4
     78c:	bl	2b40 <gen_trie>
     790:	b	1000 <__flatcc_fb_gen_c_json_parser+0x1000>
     794:	mov	r0, sl
     798:	mov	r1, #0
     79c:	mov	r2, #220	; 0xdc
     7a0:	bl	0 <memset>
     7a4:	mov	r0, r5
     7a8:	mov	r1, #0
     7ac:	mov	r2, #220	; 0xdc
     7b0:	bl	0 <memset>
     7b4:	ldr	r0, [r8, #12]
     7b8:	mov	r1, r8
     7bc:	mov	r2, sl
     7c0:	bl	0 <__flatcc_fb_scoped_symbol_name>
     7c4:	movw	r1, #0
     7c8:	mov	r0, r4
     7cc:	mov	r2, sl
     7d0:	movt	r1, #0
     7d4:	bl	20f8 <println>
     7d8:	movw	r1, #0
     7dc:	mov	r0, r4
     7e0:	movt	r1, #0
     7e4:	bl	20f8 <println>
     7e8:	ldr	r0, [r4, #220]	; 0xdc
     7ec:	mov	r1, r9
     7f0:	add	r0, r0, #1
     7f4:	str	r0, [r4, #220]	; 0xdc
     7f8:	mov	r0, r4
     7fc:	bl	20f8 <println>
     800:	movw	r1, #0
     804:	mov	r0, r4
     808:	movt	r1, #0
     80c:	bl	20f8 <println>
     810:	movw	r1, #0
     814:	mov	r0, r4
     818:	movt	r1, #0
     81c:	bl	20f8 <println>
     820:	movw	r1, #0
     824:	mov	r0, r4
     828:	movt	r1, #0
     82c:	bl	20f8 <println>
     830:	ldr	r0, [r4, #220]	; 0xdc
     834:	movw	r1, #0
     838:	movt	r1, #0
     83c:	add	r0, r0, #1
     840:	str	r0, [r4, #220]	; 0xdc
     844:	mov	r0, r4
     848:	bl	20f8 <println>
     84c:	ldr	r0, [r4, #220]	; 0xdc
     850:	cmp	r0, #0
     854:	beq	1d40 <__flatcc_fb_gen_c_json_parser+0x1d40>
     858:	sub	r0, r0, #1
     85c:	str	r0, [r4, #220]	; 0xdc
     860:	ldr	r5, [r8, #20]
     864:	cmp	r5, #0
     868:	bne	87c <__flatcc_fb_gen_c_json_parser+0x87c>
     86c:	b	9a4 <__flatcc_fb_gen_c_json_parser+0x9a4>
     870:	ldr	r5, [r5]
     874:	cmp	r5, #0
     878:	beq	9a4 <__flatcc_fb_gen_c_json_parser+0x9a4>
     87c:	ldrh	r0, [r5, #24]
     880:	cmp	r0, #0
     884:	beq	870 <__flatcc_fb_gen_c_json_parser+0x870>
     888:	ldr	r1, [r5, #4]
     88c:	cmp	r0, #10
     890:	ldm	r1, {r6, r7}
     894:	beq	908 <__flatcc_fb_gen_c_json_parser+0x908>
     898:	cmp	r0, #14
     89c:	bne	1b40 <__flatcc_fb_gen_c_json_parser+0x1b40>
     8a0:	ldr	r1, [r5, #16]
     8a4:	add	r9, sp, #8
     8a8:	mov	r2, r9
     8ac:	ldr	r0, [r1, #12]
     8b0:	bl	0 <__flatcc_fb_scoped_symbol_name>
     8b4:	ldr	r2, [r5, #48]	; 0x30
     8b8:	movw	r1, #0
     8bc:	mov	r0, r4
     8c0:	mov	r3, r7
     8c4:	str	r6, [sp]
     8c8:	movt	r1, #0
     8cc:	bl	20f8 <println>
     8d0:	ldr	r0, [r4, #220]	; 0xdc
     8d4:	add	r0, r0, #1
     8d8:	str	r0, [r4, #220]	; 0xdc
     8dc:	ldr	r0, [r5, #16]
     8e0:	ldrh	r0, [r0, #8]
     8e4:	cmp	r0, #1
     8e8:	beq	960 <__flatcc_fb_gen_c_json_parser+0x960>
     8ec:	cmp	r0, #0
     8f0:	bne	1b90 <__flatcc_fb_gen_c_json_parser+0x1b90>
     8f4:	movw	r1, #0
     8f8:	mov	r0, r4
     8fc:	add	r2, sp, #8
     900:	movt	r1, #0
     904:	b	970 <__flatcc_fb_gen_c_json_parser+0x970>
     908:	ldr	r2, [r5, #48]	; 0x30
     90c:	movw	r1, #0
     910:	mov	r0, r4
     914:	mov	r3, r7
     918:	str	r6, [sp]
     91c:	movt	r1, #0
     920:	bl	20f8 <println>
     924:	ldr	r0, [r4, #220]	; 0xdc
     928:	movw	r1, #0
     92c:	movt	r1, #0
     930:	add	r0, r0, #1
     934:	str	r0, [r4, #220]	; 0xdc
     938:	mov	r0, r4
     93c:	bl	20f8 <println>
     940:	movw	r1, #0
     944:	mov	r0, r4
     948:	movt	r1, #0
     94c:	bl	20f8 <println>
     950:	ldr	r0, [r4, #220]	; 0xdc
     954:	cmp	r0, #0
     958:	bne	998 <__flatcc_fb_gen_c_json_parser+0x998>
     95c:	b	1be0 <__flatcc_fb_gen_c_json_parser+0x1be0>
     960:	movw	r1, #0
     964:	mov	r0, r4
     968:	mov	r2, r9
     96c:	movt	r1, #0
     970:	bl	20f8 <println>
     974:	movw	r1, #0
     978:	movw	r9, #0
     97c:	mov	r0, r4
     980:	movt	r1, #0
     984:	movt	r9, #0
     988:	bl	20f8 <println>
     98c:	ldr	r0, [r4, #220]	; 0xdc
     990:	cmp	r0, #0
     994:	beq	1c00 <__flatcc_fb_gen_c_json_parser+0x1c00>
     998:	sub	r0, r0, #1
     99c:	str	r0, [r4, #220]	; 0xdc
     9a0:	b	870 <__flatcc_fb_gen_c_json_parser+0x870>
     9a4:	movw	r1, #0
     9a8:	mov	r0, r4
     9ac:	movt	r1, #0
     9b0:	bl	20f8 <println>
     9b4:	ldr	r0, [r4, #220]	; 0xdc
     9b8:	movw	r1, #0
     9bc:	movt	r1, #0
     9c0:	add	r0, r0, #1
     9c4:	str	r0, [r4, #220]	; 0xdc
     9c8:	mov	r0, r4
     9cc:	bl	20f8 <println>
     9d0:	ldr	r0, [r4, #220]	; 0xdc
     9d4:	movw	r1, #0
     9d8:	movt	r1, #0
     9dc:	add	r0, r0, #1
     9e0:	str	r0, [r4, #220]	; 0xdc
     9e4:	mov	r0, r4
     9e8:	bl	20f8 <println>
     9ec:	ldr	r0, [r4, #220]	; 0xdc
     9f0:	cmp	r0, #0
     9f4:	beq	1d60 <__flatcc_fb_gen_c_json_parser+0x1d60>
     9f8:	movw	r1, #0
     9fc:	sub	r0, r0, #1
     a00:	str	r0, [r4, #220]	; 0xdc
     a04:	mov	r0, r4
     a08:	movt	r1, #0
     a0c:	bl	20f8 <println>
     a10:	ldr	r0, [r4, #220]	; 0xdc
     a14:	movw	r1, #0
     a18:	movt	r1, #0
     a1c:	add	r0, r0, #1
     a20:	str	r0, [r4, #220]	; 0xdc
     a24:	mov	r0, r4
     a28:	bl	20f8 <println>
     a2c:	ldr	r0, [r4, #220]	; 0xdc
     a30:	movw	r5, #0
     a34:	movt	r5, #0
     a38:	cmp	r0, #0
     a3c:	beq	1d80 <__flatcc_fb_gen_c_json_parser+0x1d80>
     a40:	movw	r6, #0
     a44:	sub	r0, r0, #1
     a48:	movt	r6, #0
     a4c:	str	r0, [r4, #220]	; 0xdc
     a50:	mov	r0, r4
     a54:	mov	r1, r6
     a58:	bl	20f8 <println>
     a5c:	ldr	r0, [r4, #220]	; 0xdc
     a60:	cmp	r0, #0
     a64:	beq	1da0 <__flatcc_fb_gen_c_json_parser+0x1da0>
     a68:	sub	r0, r0, #1
     a6c:	mov	r1, r6
     a70:	str	r0, [r4, #220]	; 0xdc
     a74:	mov	r0, r4
     a78:	bl	20f8 <println>
     a7c:	movw	r1, #0
     a80:	mov	r0, r4
     a84:	movt	r1, #0
     a88:	bl	20f8 <println>
     a8c:	movw	r1, #0
     a90:	mov	r0, r4
     a94:	movt	r1, #0
     a98:	bl	20f8 <println>
     a9c:	ldr	r0, [r4, #220]	; 0xdc
     aa0:	movw	r1, #0
     aa4:	movt	r1, #0
     aa8:	add	r0, r0, #1
     aac:	str	r0, [r4, #220]	; 0xdc
     ab0:	mov	r0, r4
     ab4:	bl	20f8 <println>
     ab8:	ldr	r0, [r4, #220]	; 0xdc
     abc:	cmp	r0, #0
     ac0:	beq	1dc0 <__flatcc_fb_gen_c_json_parser+0x1dc0>
     ac4:	sub	r0, r0, #1
     ac8:	mov	r1, r6
     acc:	str	r0, [r4, #220]	; 0xdc
     ad0:	mov	r0, r4
     ad4:	bl	20f8 <println>
     ad8:	movw	r1, #0
     adc:	mov	r0, r4
     ae0:	movt	r1, #0
     ae4:	bl	20f8 <println>
     ae8:	ldr	r0, [r4, #220]	; 0xdc
     aec:	cmp	r0, #0
     af0:	beq	1de0 <__flatcc_fb_gen_c_json_parser+0x1de0>
     af4:	sub	r0, r0, #1
     af8:	mov	r1, r6
     afc:	str	r0, [r4, #220]	; 0xdc
     b00:	mov	r0, r4
     b04:	bl	20f8 <println>
     b08:	mov	r0, r4
     b0c:	mov	r1, r9
     b10:	bl	20f8 <println>
     b14:	mov	r0, sl
     b18:	mov	r1, #0
     b1c:	mov	r2, #220	; 0xdc
     b20:	bl	0 <memset>
     b24:	ldr	r0, [r8, #12]
     b28:	mov	r1, r8
     b2c:	mov	r2, sl
     b30:	bl	0 <__flatcc_fb_scoped_symbol_name>
     b34:	movw	r1, #0
     b38:	mov	r0, r4
     b3c:	mov	r2, sl
     b40:	movt	r1, #0
     b44:	bl	20f8 <println>
     b48:	mov	r0, r4
     b4c:	mov	r1, r5
     b50:	bl	20f8 <println>
     b54:	ldr	r0, [r4, #220]	; 0xdc
     b58:	movw	r1, #0
     b5c:	movt	r1, #0
     b60:	add	r0, r0, #1
     b64:	str	r0, [r4, #220]	; 0xdc
     b68:	mov	r0, r4
     b6c:	bl	20f8 <println>
     b70:	ldr	r5, [r8, #20]
     b74:	cmp	r5, #0
     b78:	bne	bac <__flatcc_fb_gen_c_json_parser+0xbac>
     b7c:	b	bd4 <__flatcc_fb_gen_c_json_parser+0xbd4>
     b80:	ldr	r0, [r5, #4]
     b84:	ldr	r2, [r5, #48]	; 0x30
     b88:	ldm	r0, {r1, r3}
     b8c:	mov	r0, r4
     b90:	str	r1, [sp]
     b94:	movw	r1, #0
     b98:	movt	r1, #0
     b9c:	bl	20f8 <println>
     ba0:	ldr	r5, [r5]
     ba4:	cmp	r5, #0
     ba8:	beq	bd4 <__flatcc_fb_gen_c_json_parser+0xbd4>
     bac:	ldrh	r0, [r5, #24]
     bb0:	cmp	r0, #0
     bb4:	bne	b80 <__flatcc_fb_gen_c_json_parser+0xb80>
     bb8:	movw	r1, #0
     bbc:	mov	r0, r4
     bc0:	movt	r1, #0
     bc4:	bl	20f8 <println>
     bc8:	ldr	r5, [r5]
     bcc:	cmp	r5, #0
     bd0:	bne	bac <__flatcc_fb_gen_c_json_parser+0xbac>
     bd4:	movw	r1, #0
     bd8:	mov	r0, r4
     bdc:	movt	r1, #0
     be0:	bl	20f8 <println>
     be4:	ldr	r0, [r4, #220]	; 0xdc
     be8:	adds	r1, r0, #1
     bec:	str	r1, [r4, #220]	; 0xdc
     bf0:	beq	1e00 <__flatcc_fb_gen_c_json_parser+0x1e00>
     bf4:	movw	r6, #0
     bf8:	str	r0, [r4, #220]	; 0xdc
     bfc:	mov	r0, r4
     c00:	movt	r6, #0
     c04:	mov	r1, r6
     c08:	bl	20f8 <println>
     c0c:	ldr	r0, [r4, #220]	; 0xdc
     c10:	add	r5, sp, #8
     c14:	cmp	r0, #0
     c18:	beq	1e20 <__flatcc_fb_gen_c_json_parser+0x1e20>
     c1c:	sub	r0, r0, #1
     c20:	mov	r1, r6
     c24:	str	r0, [r4, #220]	; 0xdc
     c28:	mov	r0, r4
     c2c:	bl	20f8 <println>
     c30:	mov	r0, r4
     c34:	mov	r1, r9
     c38:	bl	20f8 <println>
     c3c:	mov	r0, r4
     c40:	mov	r1, r8
     c44:	bl	2260 <gen_enum_parser>
     c48:	b	1278 <__flatcc_fb_gen_c_json_parser+0x1278>
     c4c:	mov	r9, #0
     c50:	movw	r1, #0
     c54:	mov	r0, r4
     c58:	add	r5, sp, #8
     c5c:	movt	r1, #0
     c60:	bl	20f8 <println>
     c64:	movw	r1, #0
     c68:	mov	r0, r4
     c6c:	movt	r1, #0
     c70:	bl	20f8 <println>
     c74:	ldrd	r2, [r8, #96]	; 0x60
     c78:	movw	r1, #0
     c7c:	mov	r0, r4
     c80:	movt	r1, #0
     c84:	bl	20f8 <println>
     c88:	cmp	r9, #0
     c8c:	beq	ca8 <__flatcc_fb_gen_c_json_parser+0xca8>
     c90:	movw	r1, #0
     c94:	asr	r3, r9, #31
     c98:	mov	r0, r4
     c9c:	mov	r2, r9
     ca0:	movt	r1, #0
     ca4:	bl	20f8 <println>
     ca8:	movw	r1, #0
     cac:	mov	r0, r4
     cb0:	movt	r1, #0
     cb4:	bl	20f8 <println>
     cb8:	movw	r1, #0
     cbc:	mov	r0, r4
     cc0:	movt	r1, #0
     cc4:	bl	20f8 <println>
     cc8:	ldr	r0, [r4, #220]	; 0xdc
     ccc:	movw	r1, #0
     cd0:	movt	r1, #0
     cd4:	add	r0, r0, #1
     cd8:	str	r0, [r4, #220]	; 0xdc
     cdc:	mov	r0, r4
     ce0:	bl	20f8 <println>
     ce4:	mov	r0, r4
     ce8:	cmp	r7, #1
     cec:	blt	d1c <__flatcc_fb_gen_c_json_parser+0xd1c>
     cf0:	movw	r1, #0
     cf4:	movt	r1, #0
     cf8:	bl	20f8 <println>
     cfc:	mov	r0, #0
     d00:	sub	r3, r7, #1
     d04:	mov	r1, r5
     d08:	mov	r2, #0
     d0c:	str	r0, [sp]
     d10:	mov	r0, r4
     d14:	bl	2b40 <gen_trie>
     d18:	b	d38 <__flatcc_fb_gen_c_json_parser+0xd38>
     d1c:	movw	r1, #0
     d20:	movt	r1, #0
     d24:	bl	20f8 <println>
     d28:	movw	r1, #0
     d2c:	mov	r0, r4
     d30:	movt	r1, #0
     d34:	bl	20f8 <println>
     d38:	movw	r1, #0
     d3c:	movw	r9, #0
     d40:	mov	r0, r4
     d44:	movt	r1, #0
     d48:	movt	r9, #0
     d4c:	bl	20f8 <println>
     d50:	ldr	r0, [r4, #220]	; 0xdc
     d54:	cmp	r0, #0
     d58:	beq	1e40 <__flatcc_fb_gen_c_json_parser+0x1e40>
     d5c:	movw	r1, #0
     d60:	sub	r0, r0, #1
     d64:	str	r0, [r4, #220]	; 0xdc
     d68:	mov	r0, r4
     d6c:	movt	r1, #0
     d70:	bl	20f8 <println>
     d74:	movw	r1, #0
     d78:	mov	r0, r4
     d7c:	movt	r1, #0
     d80:	bl	20f8 <println>
     d84:	cmp	r7, #1
     d88:	blt	eb8 <__flatcc_fb_gen_c_json_parser+0xeb8>
     d8c:	mov	r5, #0
     d90:	mov	r0, #1
     d94:	ldr	r1, [sp, #8]
     d98:	add	r1, r1, r5, lsl #4
     d9c:	ldr	r1, [r1, #8]
     da0:	ldrh	r2, [r1, #72]	; 0x48
     da4:	tst	r2, #4
     da8:	bne	e2c <__flatcc_fb_gen_c_json_parser+0xe2c>
     dac:	ldrh	r3, [r1, #24]
     db0:	movw	r6, #65534	; 0xfffe
     db4:	and	r6, r3, r6
     db8:	mov	r3, #0
     dbc:	cmp	r6, #14
     dc0:	bne	dd8 <__flatcc_fb_gen_c_json_parser+0xdd8>
     dc4:	ldr	r3, [r1, #16]
     dc8:	ldrh	r3, [r3, #8]
     dcc:	sub	r3, r3, #4
     dd0:	clz	r3, r3
     dd4:	lsr	r3, r3, #5
     dd8:	tst	r2, #256	; 0x100
     ddc:	beq	e2c <__flatcc_fb_gen_c_json_parser+0xe2c>
     de0:	ldr	r2, [r1, #96]	; 0x60
     de4:	ldr	r1, [r1, #100]	; 0x64
     de8:	subs	r2, r2, r3
     dec:	sbc	r3, r1, #0
     df0:	cmp	r0, #0
     df4:	bne	e0c <__flatcc_fb_gen_c_json_parser+0xe0c>
     df8:	movw	r1, #0
     dfc:	mov	r0, r4
     e00:	movt	r1, #0
     e04:	bl	20f8 <println>
     e08:	b	e28 <__flatcc_fb_gen_c_json_parser+0xe28>
     e0c:	movw	r1, #0
     e10:	mov	r0, r4
     e14:	movt	r1, #0
     e18:	bl	20f8 <println>
     e1c:	ldr	r0, [r4, #220]	; 0xdc
     e20:	add	r0, r0, #1
     e24:	str	r0, [r4, #220]	; 0xdc
     e28:	mov	r0, #0
     e2c:	add	r5, r5, #1
     e30:	cmp	r7, r5
     e34:	bne	d94 <__flatcc_fb_gen_c_json_parser+0xd94>
     e38:	cmp	r0, #0
     e3c:	add	r5, sp, #8
     e40:	bne	eb8 <__flatcc_fb_gen_c_json_parser+0xeb8>
     e44:	ldr	r0, [r4, #220]	; 0xdc
     e48:	cmp	r0, #0
     e4c:	beq	1f60 <__flatcc_fb_gen_c_json_parser+0x1f60>
     e50:	movw	r1, #0
     e54:	sub	r0, r0, #1
     e58:	str	r0, [r4, #220]	; 0xdc
     e5c:	mov	r0, r4
     e60:	movt	r1, #0
     e64:	bl	20f8 <println>
     e68:	ldr	r0, [r4, #220]	; 0xdc
     e6c:	movw	r1, #0
     e70:	movt	r1, #0
     e74:	add	r0, r0, #1
     e78:	str	r0, [r4, #220]	; 0xdc
     e7c:	mov	r0, r4
     e80:	bl	20f8 <println>
     e84:	movw	r1, #0
     e88:	mov	r0, r4
     e8c:	movt	r1, #0
     e90:	bl	20f8 <println>
     e94:	ldr	r0, [r4, #220]	; 0xdc
     e98:	cmp	r0, #0
     e9c:	beq	1f80 <__flatcc_fb_gen_c_json_parser+0x1f80>
     ea0:	movw	r1, #0
     ea4:	sub	r0, r0, #1
     ea8:	str	r0, [r4, #220]	; 0xdc
     eac:	mov	r0, r4
     eb0:	movt	r1, #0
     eb4:	bl	20f8 <println>
     eb8:	ldr	r0, [sp, #28]
     ebc:	cmp	r0, #0
     ec0:	beq	ed4 <__flatcc_fb_gen_c_json_parser+0xed4>
     ec4:	movw	r1, #0
     ec8:	mov	r0, r4
     ecc:	movt	r1, #0
     ed0:	bl	20f8 <println>
     ed4:	movw	r1, #0
     ed8:	mov	r0, r4
     edc:	movt	r1, #0
     ee0:	bl	20f8 <println>
     ee4:	movw	r1, #0
     ee8:	mov	r0, r4
     eec:	movt	r1, #0
     ef0:	bl	20f8 <println>
     ef4:	ldr	r0, [r4, #220]	; 0xdc
     ef8:	mov	r1, #0
     efc:	str	r1, [r4, #220]	; 0xdc
     f00:	movw	r1, #0
     f04:	movt	r1, #0
     f08:	str	r0, [r4, #228]	; 0xe4
     f0c:	mov	r0, r4
     f10:	bl	20f8 <println>
     f14:	ldr	r0, [r4, #228]	; 0xe4
     f18:	movw	r1, #0
     f1c:	movt	r1, #0
     f20:	str	r0, [r4, #220]	; 0xdc
     f24:	mov	r0, r4
     f28:	bl	20f8 <println>
     f2c:	ldr	r0, [r4, #220]	; 0xdc
     f30:	cmp	r0, #0
     f34:	beq	1e60 <__flatcc_fb_gen_c_json_parser+0x1e60>
     f38:	movw	r6, #0
     f3c:	sub	r0, r0, #1
     f40:	movt	r6, #0
     f44:	str	r0, [r4, #220]	; 0xdc
     f48:	mov	r0, r4
     f4c:	mov	r1, r6
     f50:	bl	20f8 <println>
     f54:	mov	r0, r4
     f58:	mov	r1, r9
     f5c:	bl	20f8 <println>
     f60:	movw	r1, #0
     f64:	mov	r0, r4
     f68:	mov	r2, sl
     f6c:	movt	r1, #0
     f70:	bl	20f8 <println>
     f74:	movw	r1, #0
     f78:	mov	r0, r4
     f7c:	movt	r1, #0
     f80:	bl	20f8 <println>
     f84:	ldr	r0, [r4, #220]	; 0xdc
     f88:	movw	r1, #0
     f8c:	mov	r2, sl
     f90:	movt	r1, #0
     f94:	add	r0, r0, #1
     f98:	str	r0, [r4, #220]	; 0xdc
     f9c:	mov	r0, r4
     fa0:	bl	20f8 <println>
     fa4:	ldr	r0, [r4, #220]	; 0xdc
     fa8:	cmp	r0, #0
     fac:	beq	1e80 <__flatcc_fb_gen_c_json_parser+0x1e80>
     fb0:	sub	r0, r0, #1
     fb4:	mov	r1, r6
     fb8:	str	r0, [r4, #220]	; 0xdc
     fbc:	mov	r0, r4
     fc0:	bl	20f8 <println>
     fc4:	mov	r0, r4
     fc8:	mov	r1, r9
     fcc:	bl	20f8 <println>
     fd0:	ldr	r0, [sp, #8]
     fd4:	cmp	r0, #0
     fd8:	beq	1278 <__flatcc_fb_gen_c_json_parser+0x1278>
     fdc:	bl	0 <free>
     fe0:	b	1278 <__flatcc_fb_gen_c_json_parser+0x1278>
     fe4:	movw	r1, #0
     fe8:	movt	r1, #0
     fec:	bl	20f8 <println>
     ff0:	movw	r1, #0
     ff4:	mov	r0, r4
     ff8:	movt	r1, #0
     ffc:	bl	20f8 <println>
    1000:	movw	r1, #0
    1004:	mov	r0, r4
    1008:	movt	r1, #0
    100c:	bl	20f8 <println>
    1010:	ldr	r0, [r4, #220]	; 0xdc
    1014:	cmp	r0, #0
    1018:	beq	1ea0 <__flatcc_fb_gen_c_json_parser+0x1ea0>
    101c:	movw	r1, #0
    1020:	sub	r0, r0, #1
    1024:	str	r0, [r4, #220]	; 0xdc
    1028:	mov	r0, r4
    102c:	movt	r1, #0
    1030:	bl	20f8 <println>
    1034:	movw	r1, #0
    1038:	mov	r0, r4
    103c:	movt	r1, #0
    1040:	bl	20f8 <println>
    1044:	cmp	r7, #1
    1048:	blt	1084 <__flatcc_fb_gen_c_json_parser+0x1084>
    104c:	ldr	r0, [r4, #220]	; 0xdc
    1050:	mov	r1, #0
    1054:	str	r1, [r4, #220]	; 0xdc
    1058:	movw	r1, #0
    105c:	movt	r1, #0
    1060:	str	r0, [r4, #228]	; 0xe4
    1064:	mov	r0, r4
    1068:	bl	20f8 <println>
    106c:	ldr	r0, [r4, #228]	; 0xe4
    1070:	movw	r1, #0
    1074:	movt	r1, #0
    1078:	str	r0, [r4, #220]	; 0xdc
    107c:	mov	r0, r4
    1080:	bl	20f8 <println>
    1084:	ldr	r0, [r4, #220]	; 0xdc
    1088:	cmp	r0, #0
    108c:	beq	1ec0 <__flatcc_fb_gen_c_json_parser+0x1ec0>
    1090:	movw	r1, #0
    1094:	sub	r0, r0, #1
    1098:	str	r0, [r4, #220]	; 0xdc
    109c:	mov	r0, r4
    10a0:	movt	r1, #0
    10a4:	bl	20f8 <println>
    10a8:	mov	r0, r4
    10ac:	mov	r1, r9
    10b0:	bl	20f8 <println>
    10b4:	ldr	r0, [sp, #8]
    10b8:	cmp	r0, #0
    10bc:	beq	10c4 <__flatcc_fb_gen_c_json_parser+0x10c4>
    10c0:	bl	0 <free>
    10c4:	ldrh	r0, [r8, #8]
    10c8:	cmp	r0, #1
    10cc:	bne	1ee0 <__flatcc_fb_gen_c_json_parser+0x1ee0>
    10d0:	mov	r0, sl
    10d4:	mov	r1, #0
    10d8:	mov	r2, #220	; 0xdc
    10dc:	bl	0 <memset>
    10e0:	ldr	r0, [r8, #12]
    10e4:	mov	r1, r8
    10e8:	mov	r2, sl
    10ec:	bl	0 <__flatcc_fb_scoped_symbol_name>
    10f0:	movw	r1, #0
    10f4:	mov	r0, r4
    10f8:	mov	r2, sl
    10fc:	movt	r1, #0
    1100:	bl	20f8 <println>
    1104:	movw	r6, #0
    1108:	mov	r0, r4
    110c:	movt	r6, #0
    1110:	mov	r1, r6
    1114:	bl	20f8 <println>
    1118:	ldr	r0, [r4, #220]	; 0xdc
    111c:	movw	r1, #0
    1120:	movt	r1, #0
    1124:	add	r0, r0, #1
    1128:	str	r0, [r4, #220]	; 0xdc
    112c:	mov	r0, r4
    1130:	bl	20f8 <println>
    1134:	mov	r0, r4
    1138:	mov	r1, r9
    113c:	bl	20f8 <println>
    1140:	movw	r1, #0
    1144:	mov	r0, r4
    1148:	movt	r1, #0
    114c:	bl	20f8 <println>
    1150:	ldrh	r0, [r8, #104]	; 0x68
    1154:	ldrd	r2, [r8, #112]	; 0x70
    1158:	movw	r1, #0
    115c:	movt	r1, #0
    1160:	str	r0, [sp]
    1164:	mov	r0, r4
    1168:	bl	20f8 <println>
    116c:	movw	r1, #0
    1170:	mov	r0, r4
    1174:	mov	r2, sl
    1178:	movt	r1, #0
    117c:	bl	20f8 <println>
    1180:	movw	r1, #0
    1184:	mov	r0, r4
    1188:	movt	r1, #0
    118c:	bl	20f8 <println>
    1190:	movw	r1, #0
    1194:	mov	r0, r4
    1198:	movt	r1, #0
    119c:	bl	20f8 <println>
    11a0:	ldr	r0, [r4, #220]	; 0xdc
    11a4:	mov	r1, #0
    11a8:	str	r1, [r4, #220]	; 0xdc
    11ac:	movw	r1, #0
    11b0:	movt	r1, #0
    11b4:	str	r0, [r4, #228]	; 0xe4
    11b8:	mov	r0, r4
    11bc:	bl	20f8 <println>
    11c0:	ldr	r0, [r4, #228]	; 0xe4
    11c4:	movw	r1, #0
    11c8:	movt	r1, #0
    11cc:	str	r0, [r4, #220]	; 0xdc
    11d0:	mov	r0, r4
    11d4:	bl	20f8 <println>
    11d8:	ldr	r0, [r4, #220]	; 0xdc
    11dc:	cmp	r0, #0
    11e0:	beq	1f00 <__flatcc_fb_gen_c_json_parser+0x1f00>
    11e4:	movw	r7, #0
    11e8:	sub	r0, r0, #1
    11ec:	movt	r7, #0
    11f0:	str	r0, [r4, #220]	; 0xdc
    11f4:	mov	r0, r4
    11f8:	mov	r1, r7
    11fc:	bl	20f8 <println>
    1200:	mov	r0, r4
    1204:	mov	r1, r9
    1208:	bl	20f8 <println>
    120c:	movw	r1, #0
    1210:	mov	r0, r4
    1214:	mov	r2, sl
    1218:	movt	r1, #0
    121c:	bl	20f8 <println>
    1220:	mov	r0, r4
    1224:	mov	r1, r6
    1228:	bl	20f8 <println>
    122c:	ldr	r0, [r4, #220]	; 0xdc
    1230:	movw	r1, #0
    1234:	mov	r2, sl
    1238:	movt	r1, #0
    123c:	add	r0, r0, #1
    1240:	str	r0, [r4, #220]	; 0xdc
    1244:	mov	r0, r4
    1248:	bl	20f8 <println>
    124c:	ldr	r0, [r4, #220]	; 0xdc
    1250:	cmp	r0, #0
    1254:	beq	1f20 <__flatcc_fb_gen_c_json_parser+0x1f20>
    1258:	sub	r0, r0, #1
    125c:	mov	r1, r7
    1260:	str	r0, [r4, #220]	; 0xdc
    1264:	mov	r0, r4
    1268:	bl	20f8 <println>
    126c:	mov	r0, r4
    1270:	mov	r1, r9
    1274:	bl	20f8 <println>
    1278:	ldr	r8, [r8]
    127c:	cmp	r8, #0
    1280:	bne	42c <__flatcc_fb_gen_c_json_parser+0x42c>
    1284:	ldr	r0, [r4, #208]	; 0xd0
    1288:	ldr	r0, [r0, #60]	; 0x3c
    128c:	movw	r1, #0
    1290:	mov	r2, r4
    1294:	movt	r1, #0
    1298:	bl	0 <fb_scope_table_visit>
    129c:	vmov.i32	q8, #0	; 0x00000000
    12a0:	mov	r0, #12
    12a4:	add	r1, sp, #8
    12a8:	add	r2, sp, #232	; 0xe8
    12ac:	vst1.64	{d16-d17}, [r1], r0
    12b0:	vst1.32	{d16-d17}, [r1]
    12b4:	add	r1, r2, #20
    12b8:	ldr	r0, [r4, #208]	; 0xd0
    12bc:	ldr	r8, [r0, #60]	; 0x3c
    12c0:	vst1.32	{d16-d17}, [r1]
    12c4:	orr	r1, r2, #4
    12c8:	vst1.32	{d16-d17}, [r1]
    12cc:	mov	r1, #0
    12d0:	str	r1, [sp, #268]	; 0x10c
    12d4:	mov	r1, #1
    12d8:	str	r1, [sp, #232]	; 0xe8
    12dc:	movw	r1, #0
    12e0:	str	r0, [sp, #272]	; 0x110
    12e4:	movt	r1, #0
    12e8:	mov	r0, r8
    12ec:	bl	0 <fb_scope_table_visit>
    12f0:	ldr	r6, [sp, #236]	; 0xec
    12f4:	mov	r1, #8
    12f8:	mov	r0, r6
    12fc:	bl	0 <calloc>
    1300:	str	r0, [sp, #248]	; 0xf8
    1304:	mov	r7, r0
    1308:	mov	r1, #8
    130c:	ldr	sl, [sp, #240]	; 0xf0
    1310:	mov	r0, sl
    1314:	bl	0 <calloc>
    1318:	str	r0, [sp, #252]	; 0xfc
    131c:	mov	r5, r0
    1320:	ldr	r9, [sp, #244]	; 0xf4
    1324:	mov	r0, r9
    1328:	bl	0 <malloc>
    132c:	cmp	r6, #1
    1330:	str	r0, [sp, #256]	; 0x100
    1334:	str	r7, [sp, #260]	; 0x104
    1338:	str	r5, [sp, #264]	; 0x108
    133c:	str	r0, [sp, #268]	; 0x10c
    1340:	blt	134c <__flatcc_fb_gen_c_json_parser+0x134c>
    1344:	cmp	r7, #0
    1348:	beq	1380 <__flatcc_fb_gen_c_json_parser+0x1380>
    134c:	cmp	sl, #1
    1350:	blt	135c <__flatcc_fb_gen_c_json_parser+0x135c>
    1354:	cmp	r5, #0
    1358:	beq	136c <__flatcc_fb_gen_c_json_parser+0x136c>
    135c:	cmp	r9, #0
    1360:	beq	160c <__flatcc_fb_gen_c_json_parser+0x160c>
    1364:	cmp	r0, #0
    1368:	bne	160c <__flatcc_fb_gen_c_json_parser+0x160c>
    136c:	cmp	r7, #0
    1370:	beq	1380 <__flatcc_fb_gen_c_json_parser+0x1380>
    1374:	mov	r0, r7
    1378:	bl	0 <free>
    137c:	ldr	r5, [sp, #252]	; 0xfc
    1380:	cmp	r5, #0
    1384:	beq	1390 <__flatcc_fb_gen_c_json_parser+0x1390>
    1388:	mov	r0, r5
    138c:	bl	0 <free>
    1390:	ldr	r0, [sp, #256]	; 0x100
    1394:	cmp	r0, #0
    1398:	beq	13a0 <__flatcc_fb_gen_c_json_parser+0x13a0>
    139c:	bl	0 <free>
    13a0:	add	r1, sp, #232	; 0xe8
    13a4:	vmov.i32	q8, #0	; 0x00000000
    13a8:	mov	r0, #28
    13ac:	mov	r2, r1
    13b0:	add	r1, r1, #16
    13b4:	vst1.64	{d16-d17}, [r2], r0
    13b8:	vst1.32	{d16-d17}, [r2]
    13bc:	vst1.64	{d16-d17}, [r1]
    13c0:	ldr	r0, [r4, #208]	; 0xd0
    13c4:	ldr	r5, [r0, #52]	; 0x34
    13c8:	cmp	r5, #0
    13cc:	beq	18d4 <__flatcc_fb_gen_c_json_parser+0x18d4>
    13d0:	ldrh	r0, [r5, #8]
    13d4:	cmp	r0, #1
    13d8:	beq	14f8 <__flatcc_fb_gen_c_json_parser+0x14f8>
    13dc:	cmp	r0, #0
    13e0:	bne	18d4 <__flatcc_fb_gen_c_json_parser+0x18d4>
    13e4:	add	r6, sp, #232	; 0xe8
    13e8:	mov	r1, #0
    13ec:	mov	r2, #220	; 0xdc
    13f0:	mov	r0, r6
    13f4:	bl	0 <memset>
    13f8:	ldr	r0, [r5, #12]
    13fc:	mov	r1, r5
    1400:	mov	r2, r6
    1404:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1408:	ldr	r0, [r4, #208]	; 0xd0
    140c:	movw	r1, #0
    1410:	movt	r1, #0
    1414:	ldr	r2, [r0, #160]	; 0xa0
    1418:	mov	r0, r4
    141c:	bl	20f8 <println>
    1420:	ldr	r0, [r4, #220]	; 0xdc
    1424:	movw	r1, #0
    1428:	movt	r1, #0
    142c:	add	r0, r0, #2
    1430:	str	r0, [r4, #220]	; 0xdc
    1434:	mov	r0, r4
    1438:	bl	20f8 <println>
    143c:	ldr	r0, [r4, #220]	; 0xdc
    1440:	cmp	r0, #0
    1444:	beq	1fc0 <__flatcc_fb_gen_c_json_parser+0x1fc0>
    1448:	subs	r1, r0, #1
    144c:	str	r1, [r4, #220]	; 0xdc
    1450:	beq	1fc0 <__flatcc_fb_gen_c_json_parser+0x1fc0>
    1454:	movw	r1, #0
    1458:	sub	r0, r0, #2
    145c:	str	r0, [r4, #220]	; 0xdc
    1460:	movt	r1, #0
    1464:	mov	r0, r4
    1468:	bl	20f8 <println>
    146c:	ldr	r0, [r4, #220]	; 0xdc
    1470:	movw	r1, #0
    1474:	movt	r1, #0
    1478:	add	r0, r0, #1
    147c:	str	r0, [r4, #220]	; 0xdc
    1480:	mov	r0, r4
    1484:	bl	20f8 <println>
    1488:	movw	r1, #0
    148c:	mov	r0, r4
    1490:	movt	r1, #0
    1494:	bl	20f8 <println>
    1498:	movw	r1, #0
    149c:	mov	r0, r4
    14a0:	movt	r1, #0
    14a4:	bl	20f8 <println>
    14a8:	movw	r1, #0
    14ac:	mov	r0, r4
    14b0:	movt	r1, #0
    14b4:	bl	20f8 <println>
    14b8:	movw	r1, #0
    14bc:	mov	r0, r4
    14c0:	movt	r1, #0
    14c4:	bl	20f8 <println>
    14c8:	ldr	r0, [r4, #208]	; 0xd0
    14cc:	ldrh	r1, [r0, #16]
    14d0:	cmp	r1, #2
    14d4:	bne	172c <__flatcc_fb_gen_c_json_parser+0x172c>
    14d8:	ldrd	r6, [r0, #8]
    14dc:	movw	r1, #0
    14e0:	mov	r0, r4
    14e4:	movt	r1, #0
    14e8:	mov	r2, r7
    14ec:	mov	r3, r6
    14f0:	bl	20f8 <println>
    14f4:	b	173c <__flatcc_fb_gen_c_json_parser+0x173c>
    14f8:	add	r6, sp, #232	; 0xe8
    14fc:	mov	r1, #0
    1500:	mov	r2, #220	; 0xdc
    1504:	mov	r0, r6
    1508:	bl	0 <memset>
    150c:	ldr	r0, [r5, #12]
    1510:	mov	r1, r5
    1514:	mov	r2, r6
    1518:	bl	0 <__flatcc_fb_scoped_symbol_name>
    151c:	ldr	r0, [r4, #208]	; 0xd0
    1520:	movw	r1, #0
    1524:	movt	r1, #0
    1528:	ldr	r2, [r0, #160]	; 0xa0
    152c:	mov	r0, r4
    1530:	bl	20f8 <println>
    1534:	ldr	r0, [r4, #220]	; 0xdc
    1538:	movw	r1, #0
    153c:	movt	r1, #0
    1540:	add	r0, r0, #2
    1544:	str	r0, [r4, #220]	; 0xdc
    1548:	mov	r0, r4
    154c:	bl	20f8 <println>
    1550:	ldr	r0, [r4, #220]	; 0xdc
    1554:	cmp	r0, #0
    1558:	beq	1fe0 <__flatcc_fb_gen_c_json_parser+0x1fe0>
    155c:	subs	r1, r0, #1
    1560:	str	r1, [r4, #220]	; 0xdc
    1564:	beq	1fe0 <__flatcc_fb_gen_c_json_parser+0x1fe0>
    1568:	movw	r1, #0
    156c:	sub	r0, r0, #2
    1570:	str	r0, [r4, #220]	; 0xdc
    1574:	movt	r1, #0
    1578:	mov	r0, r4
    157c:	bl	20f8 <println>
    1580:	ldr	r0, [r4, #220]	; 0xdc
    1584:	movw	r1, #0
    1588:	movt	r1, #0
    158c:	add	r0, r0, #1
    1590:	str	r0, [r4, #220]	; 0xdc
    1594:	mov	r0, r4
    1598:	bl	20f8 <println>
    159c:	movw	r1, #0
    15a0:	mov	r0, r4
    15a4:	movt	r1, #0
    15a8:	bl	20f8 <println>
    15ac:	movw	r1, #0
    15b0:	mov	r0, r4
    15b4:	movt	r1, #0
    15b8:	bl	20f8 <println>
    15bc:	movw	r1, #0
    15c0:	mov	r0, r4
    15c4:	movt	r1, #0
    15c8:	bl	20f8 <println>
    15cc:	movw	r1, #0
    15d0:	mov	r0, r4
    15d4:	movt	r1, #0
    15d8:	bl	20f8 <println>
    15dc:	ldr	r0, [r4, #208]	; 0xd0
    15e0:	ldrh	r1, [r0, #16]
    15e4:	cmp	r1, #2
    15e8:	bne	17fc <__flatcc_fb_gen_c_json_parser+0x17fc>
    15ec:	ldrd	r6, [r0, #8]
    15f0:	movw	r1, #0
    15f4:	mov	r0, r4
    15f8:	movt	r1, #0
    15fc:	mov	r2, r7
    1600:	mov	r3, r6
    1604:	bl	20f8 <println>
    1608:	b	180c <__flatcc_fb_gen_c_json_parser+0x180c>
    160c:	movw	r1, #0
    1610:	add	r5, sp, #232	; 0xe8
    1614:	mov	r0, r8
    1618:	movt	r1, #0
    161c:	mov	r2, r5
    1620:	bl	0 <fb_scope_table_visit>
    1624:	ldr	r6, [sp, #236]	; 0xec
    1628:	ldr	r7, [sp, #248]	; 0xf8
    162c:	movw	r3, #0
    1630:	mov	r2, #8
    1634:	movt	r3, #0
    1638:	mov	r0, r7
    163c:	mov	r1, r6
    1640:	bl	0 <qsort>
    1644:	cmp	r6, #1
    1648:	blt	1664 <__flatcc_fb_gen_c_json_parser+0x1664>
    164c:	mov	r0, #0
    1650:	ldr	r1, [r7, r0, lsl #3]
    1654:	str	r0, [r1, #124]	; 0x7c
    1658:	add	r0, r0, #1
    165c:	cmp	r6, r0
    1660:	bne	1650 <__flatcc_fb_gen_c_json_parser+0x1650>
    1664:	ldr	r6, [sp, #240]	; 0xf0
    1668:	ldr	r7, [sp, #252]	; 0xfc
    166c:	movw	r3, #0
    1670:	mov	r2, #8
    1674:	movt	r3, #0
    1678:	mov	r0, r7
    167c:	mov	r1, r6
    1680:	bl	0 <qsort>
    1684:	cmp	r6, #1
    1688:	blt	16a4 <__flatcc_fb_gen_c_json_parser+0x16a4>
    168c:	mov	r0, #0
    1690:	ldr	r1, [r7, r0, lsl #3]
    1694:	str	r0, [r1, #124]	; 0x7c
    1698:	add	r0, r0, #1
    169c:	cmp	r6, r0
    16a0:	bne	1690 <__flatcc_fb_gen_c_json_parser+0x1690>
    16a4:	ldr	r9, [sp, #240]	; 0xf0
    16a8:	cmp	r9, #0
    16ac:	beq	1928 <__flatcc_fb_gen_c_json_parser+0x1928>
    16b0:	lsl	r0, r9, #4
    16b4:	bl	0 <malloc>
    16b8:	cmp	r0, #0
    16bc:	beq	1934 <__flatcc_fb_gen_c_json_parser+0x1934>
    16c0:	mov	r8, r0
    16c4:	cmp	r9, #1
    16c8:	blt	1708 <__flatcc_fb_gen_c_json_parser+0x1708>
    16cc:	ldr	r0, [sp, #252]	; 0xfc
    16d0:	add	r5, r8, #8
    16d4:	mov	r6, #0
    16d8:	mov	sl, r9
    16dc:	add	r7, r0, #4
    16e0:	ldr	r0, [r7]
    16e4:	str	r0, [r5, #-8]
    16e8:	bl	0 <strlen>
    16ec:	str	r0, [r5, #-4]
    16f0:	subs	sl, sl, #1
    16f4:	ldr	r0, [r7, #-4]
    16f8:	add	r7, r7, #8
    16fc:	stm	r5, {r0, r6}
    1700:	add	r5, r5, #16
    1704:	bne	16e0 <__flatcc_fb_gen_c_json_parser+0x16e0>
    1708:	movw	r3, #0
    170c:	mov	r0, r8
    1710:	mov	r1, r9
    1714:	mov	r2, #16
    1718:	movt	r3, #0
    171c:	bl	0 <qsort>
    1720:	ldr	r9, [sp, #240]	; 0xf0
    1724:	add	r5, sp, #232	; 0xe8
    1728:	b	1938 <__flatcc_fb_gen_c_json_parser+0x1938>
    172c:	movw	r1, #0
    1730:	mov	r0, r4
    1734:	movt	r1, #0
    1738:	bl	20f8 <println>
    173c:	movw	r1, #0
    1740:	add	r2, sp, #232	; 0xe8
    1744:	mov	r0, r4
    1748:	movt	r1, #0
    174c:	bl	20f8 <println>
    1750:	movw	r1, #0
    1754:	mov	r0, r4
    1758:	movt	r1, #0
    175c:	bl	20f8 <println>
    1760:	ldr	r0, [r4, #220]	; 0xdc
    1764:	movw	r1, #0
    1768:	movt	r1, #0
    176c:	add	r0, r0, #1
    1770:	str	r0, [r4, #220]	; 0xdc
    1774:	mov	r0, r4
    1778:	bl	20f8 <println>
    177c:	ldr	r0, [r4, #220]	; 0xdc
    1780:	cmp	r0, #0
    1784:	beq	2020 <__flatcc_fb_gen_c_json_parser+0x2020>
    1788:	movw	r1, #0
    178c:	sub	r0, r0, #1
    1790:	str	r0, [r4, #220]	; 0xdc
    1794:	movt	r1, #0
    1798:	mov	r0, r4
    179c:	bl	20f8 <println>
    17a0:	movw	r1, #0
    17a4:	mov	r0, r4
    17a8:	movt	r1, #0
    17ac:	bl	20f8 <println>
    17b0:	movw	r1, #0
    17b4:	mov	r0, r4
    17b8:	movt	r1, #0
    17bc:	bl	20f8 <println>
    17c0:	movw	r1, #0
    17c4:	mov	r0, r4
    17c8:	movt	r1, #0
    17cc:	bl	20f8 <println>
    17d0:	ldr	r0, [r4, #220]	; 0xdc
    17d4:	cmp	r0, #0
    17d8:	bne	18ac <__flatcc_fb_gen_c_json_parser+0x18ac>
    17dc:	movw	r0, #0
    17e0:	movw	r1, #0
    17e4:	movw	r3, #0
    17e8:	movw	r2, #1630	; 0x65e
    17ec:	movt	r0, #0
    17f0:	movt	r1, #0
    17f4:	movt	r3, #0
    17f8:	bl	0 <__assert_fail>
    17fc:	movw	r1, #0
    1800:	mov	r0, r4
    1804:	movt	r1, #0
    1808:	bl	20f8 <println>
    180c:	movw	r1, #0
    1810:	add	r2, sp, #232	; 0xe8
    1814:	mov	r0, r4
    1818:	movt	r1, #0
    181c:	bl	20f8 <println>
    1820:	movw	r1, #0
    1824:	mov	r0, r4
    1828:	movt	r1, #0
    182c:	bl	20f8 <println>
    1830:	ldr	r0, [r4, #220]	; 0xdc
    1834:	movw	r1, #0
    1838:	movt	r1, #0
    183c:	add	r0, r0, #1
    1840:	str	r0, [r4, #220]	; 0xdc
    1844:	mov	r0, r4
    1848:	bl	20f8 <println>
    184c:	ldr	r0, [r4, #220]	; 0xdc
    1850:	cmp	r0, #0
    1854:	beq	2040 <__flatcc_fb_gen_c_json_parser+0x2040>
    1858:	movw	r1, #0
    185c:	sub	r0, r0, #1
    1860:	str	r0, [r4, #220]	; 0xdc
    1864:	movt	r1, #0
    1868:	mov	r0, r4
    186c:	bl	20f8 <println>
    1870:	movw	r1, #0
    1874:	mov	r0, r4
    1878:	movt	r1, #0
    187c:	bl	20f8 <println>
    1880:	movw	r1, #0
    1884:	mov	r0, r4
    1888:	movt	r1, #0
    188c:	bl	20f8 <println>
    1890:	movw	r1, #0
    1894:	mov	r0, r4
    1898:	movt	r1, #0
    189c:	bl	20f8 <println>
    18a0:	ldr	r0, [r4, #220]	; 0xdc
    18a4:	cmp	r0, #0
    18a8:	beq	2060 <__flatcc_fb_gen_c_json_parser+0x2060>
    18ac:	movw	r1, #0
    18b0:	sub	r0, r0, #1
    18b4:	str	r0, [r4, #220]	; 0xdc
    18b8:	movt	r1, #0
    18bc:	mov	r0, r4
    18c0:	bl	20f8 <println>
    18c4:	movw	r1, #0
    18c8:	mov	r0, r4
    18cc:	movt	r1, #0
    18d0:	bl	20f8 <println>
    18d4:	ldr	r0, [r4, #212]	; 0xd4
    18d8:	ldr	r0, [r0, #140]	; 0x8c
    18dc:	cmp	r0, #0
    18e0:	beq	18fc <__flatcc_fb_gen_c_json_parser+0x18fc>
    18e4:	ldr	r3, [r4, #204]	; 0xcc
    18e8:	movw	r0, #0
    18ec:	mov	r1, #36	; 0x24
    18f0:	mov	r2, #1
    18f4:	movt	r0, #0
    18f8:	bl	0 <fwrite>
    18fc:	ldr	r0, [r4, #208]	; 0xd0
    1900:	movw	r1, #0
    1904:	movt	r1, #0
    1908:	ldr	r2, [r0, #164]	; 0xa4
    190c:	mov	r0, r4
    1910:	bl	20f8 <println>
    1914:	mov	r0, #0
    1918:	sub	sp, fp, #48	; 0x30
    191c:	vpop	{d8-d9}
    1920:	add	sp, sp, #4
    1924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1928:	mov	r9, #0
    192c:	str	r9, [sp, #8]
    1930:	b	194c <__flatcc_fb_gen_c_json_parser+0x194c>
    1934:	mov	r8, #0
    1938:	cmp	r9, #1
    193c:	str	r8, [sp, #8]
    1940:	blt	194c <__flatcc_fb_gen_c_json_parser+0x194c>
    1944:	cmp	r8, #0
    1948:	beq	2080 <__flatcc_fb_gen_c_json_parser+0x2080>
    194c:	mov	r0, #4
    1950:	movw	r1, #0
    1954:	str	r0, [sp, #24]
    1958:	mov	r0, #0
    195c:	movt	r1, #0
    1960:	str	r0, [sp, #20]
    1964:	movw	r0, #0
    1968:	movt	r0, #0
    196c:	str	r0, [sp, #12]
    1970:	movw	r0, #0
    1974:	movt	r0, #0
    1978:	str	r0, [sp, #16]
    197c:	ldr	r0, [r4, #208]	; 0xd0
    1980:	ldr	r2, [r0, #160]	; 0xa0
    1984:	mov	r0, r4
    1988:	bl	20f8 <println>
    198c:	ldr	r0, [r4, #220]	; 0xdc
    1990:	movw	r1, #0
    1994:	movt	r1, #0
    1998:	add	r0, r0, #2
    199c:	str	r0, [r4, #220]	; 0xdc
    19a0:	mov	r0, r4
    19a4:	bl	20f8 <println>
    19a8:	ldr	r0, [r4, #220]	; 0xdc
    19ac:	cmp	r0, #0
    19b0:	beq	2000 <__flatcc_fb_gen_c_json_parser+0x2000>
    19b4:	subs	r1, r0, #1
    19b8:	str	r1, [r4, #220]	; 0xdc
    19bc:	beq	2000 <__flatcc_fb_gen_c_json_parser+0x2000>
    19c0:	movw	r1, #0
    19c4:	sub	r0, r0, #2
    19c8:	str	r0, [r4, #220]	; 0xdc
    19cc:	movt	r1, #0
    19d0:	mov	r0, r4
    19d4:	bl	20f8 <println>
    19d8:	ldr	r0, [r4, #220]	; 0xdc
    19dc:	cmp	r9, #0
    19e0:	add	r0, r0, #1
    19e4:	str	r0, [r4, #220]	; 0xdc
    19e8:	beq	1a94 <__flatcc_fb_gen_c_json_parser+0x1a94>
    19ec:	movw	r1, #0
    19f0:	mov	r0, r4
    19f4:	movt	r1, #0
    19f8:	bl	20f8 <println>
    19fc:	movw	r1, #0
    1a00:	mov	r0, r4
    1a04:	movt	r1, #0
    1a08:	bl	20f8 <println>
    1a0c:	movw	r1, #0
    1a10:	mov	r0, r4
    1a14:	movt	r1, #0
    1a18:	bl	20f8 <println>
    1a1c:	movw	r1, #0
    1a20:	mov	r0, r4
    1a24:	movt	r1, #0
    1a28:	bl	20f8 <println>
    1a2c:	movw	r1, #0
    1a30:	mov	r0, r4
    1a34:	movt	r1, #0
    1a38:	bl	20f8 <println>
    1a3c:	mov	r0, #0
    1a40:	sub	r3, r9, #1
    1a44:	add	r1, sp, #8
    1a48:	mov	r2, #0
    1a4c:	str	r0, [sp]
    1a50:	mov	r0, r4
    1a54:	bl	2b40 <gen_trie>
    1a58:	movw	r1, #0
    1a5c:	mov	r0, r4
    1a60:	movt	r1, #0
    1a64:	bl	20f8 <println>
    1a68:	ldr	r0, [r4, #220]	; 0xdc
    1a6c:	cmp	r0, #0
    1a70:	bne	1ac0 <__flatcc_fb_gen_c_json_parser+0x1ac0>
    1a74:	movw	r0, #0
    1a78:	movw	r1, #0
    1a7c:	movw	r3, #0
    1a80:	movw	r2, #1219	; 0x4c3
    1a84:	movt	r0, #0
    1a88:	movt	r1, #0
    1a8c:	movt	r3, #0
    1a90:	bl	0 <__assert_fail>
    1a94:	movw	r1, #0
    1a98:	mov	r0, r4
    1a9c:	movt	r1, #0
    1aa0:	bl	20f8 <println>
    1aa4:	movw	r1, #0
    1aa8:	mov	r0, r4
    1aac:	movt	r1, #0
    1ab0:	bl	20f8 <println>
    1ab4:	ldr	r0, [r4, #220]	; 0xdc
    1ab8:	cmp	r0, #0
    1abc:	beq	20d8 <__flatcc_fb_gen_c_json_parser+0x20d8>
    1ac0:	movw	r1, #0
    1ac4:	sub	r0, r0, #1
    1ac8:	str	r0, [r4, #220]	; 0xdc
    1acc:	movt	r1, #0
    1ad0:	mov	r0, r4
    1ad4:	bl	20f8 <println>
    1ad8:	movw	r1, #0
    1adc:	mov	r0, r4
    1ae0:	movt	r1, #0
    1ae4:	bl	20f8 <println>
    1ae8:	ldr	r0, [sp, #8]
    1aec:	cmp	r0, #0
    1af0:	beq	1af8 <__flatcc_fb_gen_c_json_parser+0x1af8>
    1af4:	bl	0 <free>
    1af8:	ldr	r0, [sp, #248]	; 0xf8
    1afc:	cmp	r0, #0
    1b00:	beq	1b08 <__flatcc_fb_gen_c_json_parser+0x1b08>
    1b04:	bl	0 <free>
    1b08:	ldr	r0, [sp, #252]	; 0xfc
    1b0c:	cmp	r0, #0
    1b10:	beq	1b18 <__flatcc_fb_gen_c_json_parser+0x1b18>
    1b14:	bl	0 <free>
    1b18:	ldr	r0, [sp, #256]	; 0x100
    1b1c:	cmp	r0, #0
    1b20:	beq	1b28 <__flatcc_fb_gen_c_json_parser+0x1b28>
    1b24:	bl	0 <free>
    1b28:	vmov.i32	q8, #0	; 0x00000000
    1b2c:	mov	r0, #28
    1b30:	add	r1, r5, #16
    1b34:	vst1.64	{d16-d17}, [r5], r0
    1b38:	vst1.32	{d16-d17}, [r5]
    1b3c:	b	13bc <__flatcc_fb_gen_c_json_parser+0x13bc>
    1b40:	movw	r0, #0
    1b44:	movw	r1, #0
    1b48:	movw	r4, #0
    1b4c:	movw	r3, #1535	; 0x5ff
    1b50:	movt	r0, #0
    1b54:	movt	r1, #0
    1b58:	movt	r4, #0
    1b5c:	ldr	r0, [r0]
    1b60:	str	r1, [sp]
    1b64:	movw	r1, #0
    1b68:	mov	r2, r4
    1b6c:	movt	r1, #0
    1b70:	bl	0 <fprintf>
    1b74:	movw	r0, #0
    1b78:	movw	r3, #0
    1b7c:	mov	r1, r4
    1b80:	movw	r2, #1535	; 0x5ff
    1b84:	movt	r0, #0
    1b88:	movt	r3, #0
    1b8c:	bl	0 <__assert_fail>
    1b90:	movw	r0, #0
    1b94:	movw	r1, #0
    1b98:	movw	r4, #0
    1b9c:	movw	r3, #1522	; 0x5f2
    1ba0:	movt	r0, #0
    1ba4:	movt	r1, #0
    1ba8:	movt	r4, #0
    1bac:	ldr	r0, [r0]
    1bb0:	str	r1, [sp]
    1bb4:	movw	r1, #0
    1bb8:	mov	r2, r4
    1bbc:	movt	r1, #0
    1bc0:	bl	0 <fprintf>
    1bc4:	movw	r0, #0
    1bc8:	movw	r3, #0
    1bcc:	mov	r1, r4
    1bd0:	movw	r2, #1522	; 0x5f2
    1bd4:	movt	r0, #0
    1bd8:	movt	r3, #0
    1bdc:	bl	0 <__assert_fail>
    1be0:	movw	r0, #0
    1be4:	movw	r1, #0
    1be8:	movw	r3, #0
    1bec:	movw	r2, #1532	; 0x5fc
    1bf0:	movt	r0, #0
    1bf4:	movt	r1, #0
    1bf8:	movt	r3, #0
    1bfc:	bl	0 <__assert_fail>
    1c00:	movw	r0, #0
    1c04:	movw	r1, #0
    1c08:	movw	r3, #0
    1c0c:	movw	r2, #1526	; 0x5f6
    1c10:	movt	r0, #0
    1c14:	movt	r1, #0
    1c18:	movt	r3, #0
    1c1c:	bl	0 <__assert_fail>
    1c20:	movw	r0, #0
    1c24:	movw	r1, #0
    1c28:	movw	r3, #0
    1c2c:	movw	r2, #1747	; 0x6d3
    1c30:	movt	r0, #0
    1c34:	movt	r1, #0
    1c38:	movt	r3, #0
    1c3c:	bl	0 <__assert_fail>
    1c40:	movw	r0, #0
    1c44:	movw	r1, #0
    1c48:	movw	r3, #0
    1c4c:	movw	r2, #1731	; 0x6c3
    1c50:	movt	r0, #0
    1c54:	movt	r1, #0
    1c58:	movt	r3, #0
    1c5c:	bl	0 <__assert_fail>
    1c60:	movw	r0, #0
    1c64:	movw	r1, #0
    1c68:	movw	r3, #0
    1c6c:	movw	r2, #1390	; 0x56e
    1c70:	movt	r0, #0
    1c74:	movt	r1, #0
    1c78:	movt	r3, #0
    1c7c:	bl	0 <__assert_fail>
    1c80:	movw	r0, #0
    1c84:	movw	r1, #0
    1c88:	movw	r4, #0
    1c8c:	mov	r3, #1392	; 0x570
    1c90:	movt	r0, #0
    1c94:	movt	r1, #0
    1c98:	movt	r4, #0
    1c9c:	ldr	r0, [r0]
    1ca0:	str	r1, [sp]
    1ca4:	movw	r1, #0
    1ca8:	mov	r2, r4
    1cac:	movt	r1, #0
    1cb0:	bl	0 <fprintf>
    1cb4:	movw	r0, #0
    1cb8:	movw	r3, #0
    1cbc:	mov	r1, r4
    1cc0:	mov	r2, #1392	; 0x570
    1cc4:	movt	r0, #0
    1cc8:	movt	r3, #0
    1ccc:	bl	0 <__assert_fail>
    1cd0:	movw	r0, #0
    1cd4:	movw	r1, #0
    1cd8:	movw	r3, #0
    1cdc:	movw	r2, #1301	; 0x515
    1ce0:	movt	r0, #0
    1ce4:	movt	r1, #0
    1ce8:	movt	r3, #0
    1cec:	bl	0 <__assert_fail>
    1cf0:	movw	r0, #0
    1cf4:	movw	r1, #0
    1cf8:	movw	r4, #0
    1cfc:	movw	r3, #1303	; 0x517
    1d00:	movt	r0, #0
    1d04:	movt	r1, #0
    1d08:	movt	r4, #0
    1d0c:	ldr	r0, [r0]
    1d10:	str	r1, [sp]
    1d14:	movw	r1, #0
    1d18:	mov	r2, r4
    1d1c:	movt	r1, #0
    1d20:	bl	0 <fprintf>
    1d24:	movw	r0, #0
    1d28:	movw	r3, #0
    1d2c:	mov	r1, r4
    1d30:	movw	r2, #1303	; 0x517
    1d34:	movt	r0, #0
    1d38:	movt	r3, #0
    1d3c:	bl	0 <__assert_fail>
    1d40:	movw	r0, #0
    1d44:	movw	r1, #0
    1d48:	movw	r3, #0
    1d4c:	movw	r2, #1503	; 0x5df
    1d50:	movt	r0, #0
    1d54:	movt	r1, #0
    1d58:	movt	r3, #0
    1d5c:	bl	0 <__assert_fail>
    1d60:	movw	r0, #0
    1d64:	movw	r1, #0
    1d68:	movw	r3, #0
    1d6c:	movw	r2, #1543	; 0x607
    1d70:	movt	r0, #0
    1d74:	movt	r1, #0
    1d78:	movt	r3, #0
    1d7c:	bl	0 <__assert_fail>
    1d80:	movw	r0, #0
    1d84:	movw	r1, #0
    1d88:	movw	r3, #0
    1d8c:	movw	r2, #1545	; 0x609
    1d90:	movt	r0, #0
    1d94:	movt	r1, #0
    1d98:	movt	r3, #0
    1d9c:	bl	0 <__assert_fail>
    1da0:	movw	r0, #0
    1da4:	movw	r1, #0
    1da8:	movw	r3, #0
    1dac:	movw	r2, #1546	; 0x60a
    1db0:	movt	r0, #0
    1db4:	movt	r1, #0
    1db8:	movt	r3, #0
    1dbc:	bl	0 <__assert_fail>
    1dc0:	movw	r0, #0
    1dc4:	movw	r1, #0
    1dc8:	movw	r3, #0
    1dcc:	movw	r2, #1550	; 0x60e
    1dd0:	movt	r0, #0
    1dd4:	movt	r1, #0
    1dd8:	movt	r3, #0
    1ddc:	bl	0 <__assert_fail>
    1de0:	movw	r0, #0
    1de4:	movw	r1, #0
    1de8:	movw	r3, #0
    1dec:	mov	r2, #1552	; 0x610
    1df0:	movt	r0, #0
    1df4:	movt	r1, #0
    1df8:	movt	r3, #0
    1dfc:	bl	0 <__assert_fail>
    1e00:	movw	r0, #0
    1e04:	movw	r1, #0
    1e08:	movw	r3, #0
    1e0c:	movw	r2, #1582	; 0x62e
    1e10:	movt	r0, #0
    1e14:	movt	r1, #0
    1e18:	movt	r3, #0
    1e1c:	bl	0 <__assert_fail>
    1e20:	movw	r0, #0
    1e24:	movw	r1, #0
    1e28:	movw	r3, #0
    1e2c:	movw	r2, #1583	; 0x62f
    1e30:	movt	r0, #0
    1e34:	movt	r1, #0
    1e38:	movt	r3, #0
    1e3c:	bl	0 <__assert_fail>
    1e40:	movw	r0, #0
    1e44:	movw	r1, #0
    1e48:	movw	r3, #0
    1e4c:	movw	r2, #1438	; 0x59e
    1e50:	movt	r0, #0
    1e54:	movt	r1, #0
    1e58:	movt	r3, #0
    1e5c:	bl	0 <__assert_fail>
    1e60:	movw	r0, #0
    1e64:	movw	r1, #0
    1e68:	movw	r3, #0
    1e6c:	movw	r2, #1473	; 0x5c1
    1e70:	movt	r0, #0
    1e74:	movt	r1, #0
    1e78:	movt	r3, #0
    1e7c:	bl	0 <__assert_fail>
    1e80:	movw	r0, #0
    1e84:	movw	r1, #0
    1e88:	movw	r3, #0
    1e8c:	movw	r2, #1479	; 0x5c7
    1e90:	movt	r0, #0
    1e94:	movt	r1, #0
    1e98:	movt	r3, #0
    1e9c:	bl	0 <__assert_fail>
    1ea0:	movw	r0, #0
    1ea4:	movw	r1, #0
    1ea8:	movw	r3, #0
    1eac:	movw	r2, #1334	; 0x536
    1eb0:	movt	r0, #0
    1eb4:	movt	r1, #0
    1eb8:	movt	r3, #0
    1ebc:	bl	0 <__assert_fail>
    1ec0:	movw	r0, #0
    1ec4:	movw	r1, #0
    1ec8:	movw	r3, #0
    1ecc:	movw	r2, #1343	; 0x53f
    1ed0:	movt	r0, #0
    1ed4:	movt	r1, #0
    1ed8:	movt	r3, #0
    1edc:	bl	0 <__assert_fail>
    1ee0:	movw	r0, #0
    1ee4:	movw	r1, #0
    1ee8:	movw	r3, #0
    1eec:	movw	r2, #1353	; 0x549
    1ef0:	movt	r0, #0
    1ef4:	movt	r1, #0
    1ef8:	movt	r3, #0
    1efc:	bl	0 <__assert_fail>
    1f00:	movw	r0, #0
    1f04:	movw	r1, #0
    1f08:	movw	r3, #0
    1f0c:	movw	r2, #1370	; 0x55a
    1f10:	movt	r0, #0
    1f14:	movt	r1, #0
    1f18:	movt	r3, #0
    1f1c:	bl	0 <__assert_fail>
    1f20:	movw	r0, #0
    1f24:	movw	r1, #0
    1f28:	movw	r3, #0
    1f2c:	mov	r2, #1376	; 0x560
    1f30:	movt	r0, #0
    1f34:	movt	r1, #0
    1f38:	movt	r3, #0
    1f3c:	bl	0 <__assert_fail>
    1f40:	movw	r0, #0
    1f44:	movw	r1, #0
    1f48:	movw	r3, #0
    1f4c:	movw	r2, #1755	; 0x6db
    1f50:	movt	r0, #0
    1f54:	movt	r1, #0
    1f58:	movt	r3, #0
    1f5c:	bl	0 <__assert_fail>
    1f60:	movw	r0, #0
    1f64:	movw	r1, #0
    1f68:	movw	r3, #0
    1f6c:	movw	r2, #1458	; 0x5b2
    1f70:	movt	r0, #0
    1f74:	movt	r1, #0
    1f78:	movt	r3, #0
    1f7c:	bl	0 <__assert_fail>
    1f80:	movw	r0, #0
    1f84:	movw	r1, #0
    1f88:	movw	r3, #0
    1f8c:	movw	r2, #1461	; 0x5b5
    1f90:	movt	r0, #0
    1f94:	movt	r1, #0
    1f98:	movt	r3, #0
    1f9c:	bl	0 <__assert_fail>
    1fa0:	movw	r0, #0
    1fa4:	movw	r1, #0
    1fa8:	movw	r3, #0
    1fac:	movw	r2, #1716	; 0x6b4
    1fb0:	movt	r0, #0
    1fb4:	movt	r1, #0
    1fb8:	movt	r3, #0
    1fbc:	bl	0 <__assert_fail>
    1fc0:	movw	r0, #0
    1fc4:	movw	r1, #0
    1fc8:	movw	r3, #0
    1fcc:	movw	r2, #1610	; 0x64a
    1fd0:	movt	r0, #0
    1fd4:	movt	r1, #0
    1fd8:	movt	r3, #0
    1fdc:	bl	0 <__assert_fail>
    1fe0:	movw	r0, #0
    1fe4:	movw	r1, #0
    1fe8:	movw	r3, #0
    1fec:	movw	r2, #1645	; 0x66d
    1ff0:	movt	r0, #0
    1ff4:	movt	r1, #0
    1ff8:	movt	r3, #0
    1ffc:	bl	0 <__assert_fail>
    2000:	movw	r0, #0
    2004:	movw	r1, #0
    2008:	movw	r3, #0
    200c:	movw	r2, #1205	; 0x4b5
    2010:	movt	r0, #0
    2014:	movt	r1, #0
    2018:	movt	r3, #0
    201c:	bl	0 <__assert_fail>
    2020:	movw	r0, #0
    2024:	movw	r1, #0
    2028:	movw	r3, #0
    202c:	movw	r2, #1626	; 0x65a
    2030:	movt	r0, #0
    2034:	movt	r1, #0
    2038:	movt	r3, #0
    203c:	bl	0 <__assert_fail>
    2040:	movw	r0, #0
    2044:	movw	r1, #0
    2048:	movw	r3, #0
    204c:	movw	r2, #1661	; 0x67d
    2050:	movt	r0, #0
    2054:	movt	r1, #0
    2058:	movt	r3, #0
    205c:	bl	0 <__assert_fail>
    2060:	movw	r0, #0
    2064:	movw	r1, #0
    2068:	movw	r3, #0
    206c:	movw	r2, #1665	; 0x681
    2070:	movt	r0, #0
    2074:	movt	r1, #0
    2078:	movt	r3, #0
    207c:	bl	0 <__assert_fail>
    2080:	add	r0, sp, #232	; 0xe8
    2084:	bl	4f14 <clear_catalog>
    2088:	movw	r0, #0
    208c:	movw	r1, #0
    2090:	movw	r4, #0
    2094:	movw	r3, #1194	; 0x4aa
    2098:	movt	r0, #0
    209c:	movt	r1, #0
    20a0:	movt	r4, #0
    20a4:	ldr	r0, [r0]
    20a8:	str	r1, [sp]
    20ac:	movw	r1, #0
    20b0:	mov	r2, r4
    20b4:	movt	r1, #0
    20b8:	bl	0 <fprintf>
    20bc:	movw	r0, #0
    20c0:	movw	r3, #0
    20c4:	mov	r1, r4
    20c8:	movw	r2, #1194	; 0x4aa
    20cc:	movt	r0, #0
    20d0:	movt	r3, #0
    20d4:	bl	0 <__assert_fail>
    20d8:	movw	r0, #0
    20dc:	movw	r1, #0
    20e0:	movw	r3, #0
    20e4:	movw	r2, #1210	; 0x4ba
    20e8:	movt	r0, #0
    20ec:	movt	r1, #0
    20f0:	movt	r3, #0
    20f4:	bl	0 <__assert_fail>

000020f8 <println>:
    20f8:	sub	sp, sp, #8
    20fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2100:	add	fp, sp, #28
    2104:	sub	sp, sp, #4
    2108:	str	r3, [fp, #12]
    210c:	str	r2, [fp, #8]
    2110:	mov	r4, r0
    2114:	mov	r8, r1
    2118:	ldr	r0, [r0, #212]	; 0xd4
    211c:	ldr	r5, [r4, #220]	; 0xdc
    2120:	ldr	r6, [r0, #176]	; 0xb0
    2124:	movw	r0, #0
    2128:	movt	r0, #0
    212c:	ldrb	r0, [r0]
    2130:	cmp	r0, #0
    2134:	bne	214c <println+0x54>
    2138:	movw	r0, #0
    213c:	mov	r1, #32
    2140:	mov	r2, #64	; 0x40
    2144:	movt	r0, #0
    2148:	bl	0 <memset>
    214c:	ldrb	r0, [r8]
    2150:	cmp	r0, #0
    2154:	beq	21ec <println+0xf4>
    2158:	ldr	r0, [r4, #204]!	; 0xcc
    215c:	mul	sl, r6, r5
    2160:	cmp	sl, #65	; 0x41
    2164:	blt	21bc <println+0xc4>
    2168:	mvn	r1, sl
    216c:	movw	r7, #0
    2170:	movw	r5, #0
    2174:	add	r6, sl, #64	; 0x40
    2178:	cmn	r1, #129	; 0x81
    217c:	movt	r7, #0
    2180:	movt	r5, #0
    2184:	mvnle	r1, #128	; 0x80
    2188:	add	r1, r1, sl
    218c:	add	r1, r1, #64	; 0x40
    2190:	bic	r9, r1, #63	; 0x3f
    2194:	mov	r1, r7
    2198:	mov	r2, #64	; 0x40
    219c:	mov	r3, r5
    21a0:	bl	0 <fprintf>
    21a4:	ldr	r0, [r4]
    21a8:	sub	r6, r6, #64	; 0x40
    21ac:	cmp	r6, #128	; 0x80
    21b0:	bgt	2194 <println+0x9c>
    21b4:	sub	r1, sl, #64	; 0x40
    21b8:	sub	sl, r1, r9
    21bc:	movw	r1, #0
    21c0:	movw	r3, #0
    21c4:	mov	r2, sl
    21c8:	movt	r1, #0
    21cc:	movt	r3, #0
    21d0:	bl	0 <fprintf>
    21d4:	add	r2, fp, #8
    21d8:	mov	r1, r8
    21dc:	str	r2, [sp]
    21e0:	ldr	r0, [r4]
    21e4:	bl	0 <vfprintf>
    21e8:	b	21f0 <println+0xf8>
    21ec:	add	r4, r4, #204	; 0xcc
    21f0:	ldr	r1, [r4]
    21f4:	mov	r0, #10
    21f8:	bl	0 <fputc>
    21fc:	sub	sp, fp, #28
    2200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2204:	add	sp, sp, #8
    2208:	bx	lr

0000220c <gen_local_scope_prototype>:
    220c:	push	{r4, r5, fp, lr}
    2210:	add	fp, sp, #8
    2214:	sub	sp, sp, #208	; 0xd0
    2218:	add	r5, sp, #4
    221c:	mov	r4, r0
    2220:	mov	r0, r1
    2224:	mov	r1, r5
    2228:	bl	0 <__flatcc_fb_copy_scope>
    222c:	ldr	r0, [r4, #208]	; 0xd0
    2230:	movw	r1, #0
    2234:	mov	r3, r5
    2238:	movt	r1, #0
    223c:	ldr	r2, [r0, #160]	; 0xa0
    2240:	mov	r0, r4
    2244:	bl	20f8 <println>
    2248:	movw	r1, #0
    224c:	mov	r0, r4
    2250:	movt	r1, #0
    2254:	bl	20f8 <println>
    2258:	sub	sp, fp, #8
    225c:	pop	{r4, r5, fp, pc}

00002260 <gen_enum_parser>:
    2260:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2264:	add	fp, sp, #24
    2268:	sub	sp, sp, #264	; 0x108
    226c:	mov	r4, r0
    2270:	mov	r0, #0
    2274:	mov	r5, r1
    2278:	vmov.i32	q8, #0	; 0x00000000
    227c:	add	r1, sp, #8
    2280:	str	r0, [sp, #36]	; 0x24
    2284:	mov	r0, #12
    2288:	vst1.64	{d16-d17}, [r1], r0
    228c:	vst1.32	{d16-d17}, [r1]
    2290:	ldrh	r0, [r5, #8]
    2294:	sub	r0, r0, #3
    2298:	uxth	r0, r0
    229c:	cmp	r0, #2
    22a0:	bcs	24c8 <gen_enum_parser+0x268>
    22a4:	add	r1, sp, #36	; 0x24
    22a8:	mov	r0, r5
    22ac:	bl	2868 <build_compound_dict>
    22b0:	ldr	r7, [sp, #36]	; 0x24
    22b4:	cmp	r0, #0
    22b8:	str	r0, [sp, #8]
    22bc:	bne	22c8 <gen_enum_parser+0x68>
    22c0:	cmp	r7, #1
    22c4:	bge	24e8 <gen_enum_parser+0x288>
    22c8:	mov	r0, #2
    22cc:	add	r6, sp, #40	; 0x28
    22d0:	mov	r1, #0
    22d4:	mov	r2, #220	; 0xdc
    22d8:	str	r0, [sp, #24]
    22dc:	movw	r0, #0
    22e0:	str	r5, [sp, #20]
    22e4:	movt	r0, #0
    22e8:	str	r0, [sp, #12]
    22ec:	movw	r0, #0
    22f0:	movt	r0, #0
    22f4:	str	r0, [sp, #16]
    22f8:	mov	r0, r6
    22fc:	bl	0 <memset>
    2300:	ldr	r0, [r5, #12]
    2304:	mov	r1, r5
    2308:	mov	r2, r6
    230c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    2310:	movw	r1, #0
    2314:	mov	r0, r4
    2318:	mov	r2, r6
    231c:	movt	r1, #0
    2320:	bl	20f8 <println>
    2324:	ldr	r0, [r4, #220]	; 0xdc
    2328:	movw	r1, #0
    232c:	movt	r1, #0
    2330:	add	r0, r0, #2
    2334:	str	r0, [r4, #220]	; 0xdc
    2338:	mov	r0, r4
    233c:	bl	20f8 <println>
    2340:	ldr	r0, [r4, #220]	; 0xdc
    2344:	cmp	r0, #0
    2348:	beq	24a8 <gen_enum_parser+0x248>
    234c:	subs	r1, r0, #1
    2350:	str	r1, [r4, #220]	; 0xdc
    2354:	beq	24a8 <gen_enum_parser+0x248>
    2358:	movw	r1, #0
    235c:	sub	r0, r0, #2
    2360:	str	r0, [r4, #220]	; 0xdc
    2364:	movt	r1, #0
    2368:	mov	r0, r4
    236c:	bl	20f8 <println>
    2370:	ldr	r0, [r4, #220]	; 0xdc
    2374:	cmp	r7, #0
    2378:	add	r0, r0, #1
    237c:	str	r0, [r4, #220]	; 0xdc
    2380:	beq	242c <gen_enum_parser+0x1cc>
    2384:	movw	r1, #0
    2388:	mov	r0, r4
    238c:	movt	r1, #0
    2390:	bl	20f8 <println>
    2394:	movw	r1, #0
    2398:	mov	r0, r4
    239c:	movt	r1, #0
    23a0:	bl	20f8 <println>
    23a4:	movw	r1, #0
    23a8:	mov	r0, r4
    23ac:	movt	r1, #0
    23b0:	bl	20f8 <println>
    23b4:	movw	r1, #0
    23b8:	mov	r0, r4
    23bc:	movt	r1, #0
    23c0:	bl	20f8 <println>
    23c4:	movw	r1, #0
    23c8:	mov	r0, r4
    23cc:	movt	r1, #0
    23d0:	bl	20f8 <println>
    23d4:	mov	r0, #0
    23d8:	sub	r3, r7, #1
    23dc:	add	r1, sp, #8
    23e0:	mov	r2, #0
    23e4:	str	r0, [sp]
    23e8:	mov	r0, r4
    23ec:	bl	2b40 <gen_trie>
    23f0:	movw	r1, #0
    23f4:	mov	r0, r4
    23f8:	movt	r1, #0
    23fc:	bl	20f8 <println>
    2400:	ldr	r0, [r4, #220]	; 0xdc
    2404:	cmp	r0, #0
    2408:	bne	2468 <gen_enum_parser+0x208>
    240c:	movw	r0, #0
    2410:	movw	r1, #0
    2414:	movw	r3, #0
    2418:	movw	r2, #1278	; 0x4fe
    241c:	movt	r0, #0
    2420:	movt	r1, #0
    2424:	movt	r3, #0
    2428:	bl	0 <__assert_fail>
    242c:	movw	r1, #0
    2430:	mov	r0, r4
    2434:	movt	r1, #0
    2438:	bl	20f8 <println>
    243c:	movw	r1, #0
    2440:	mov	r0, r4
    2444:	movt	r1, #0
    2448:	bl	20f8 <println>
    244c:	movw	r1, #0
    2450:	mov	r0, r4
    2454:	movt	r1, #0
    2458:	bl	20f8 <println>
    245c:	ldr	r0, [r4, #220]	; 0xdc
    2460:	cmp	r0, #0
    2464:	beq	2538 <gen_enum_parser+0x2d8>
    2468:	movw	r1, #0
    246c:	sub	r0, r0, #1
    2470:	str	r0, [r4, #220]	; 0xdc
    2474:	movt	r1, #0
    2478:	mov	r0, r4
    247c:	bl	20f8 <println>
    2480:	movw	r1, #0
    2484:	mov	r0, r4
    2488:	movt	r1, #0
    248c:	bl	20f8 <println>
    2490:	ldr	r0, [sp, #8]
    2494:	cmp	r0, #0
    2498:	beq	24a0 <gen_enum_parser+0x240>
    249c:	bl	0 <free>
    24a0:	sub	sp, fp, #24
    24a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    24a8:	movw	r0, #0
    24ac:	movw	r1, #0
    24b0:	movw	r3, #0
    24b4:	movw	r2, #1263	; 0x4ef
    24b8:	movt	r0, #0
    24bc:	movt	r1, #0
    24c0:	movt	r3, #0
    24c4:	bl	0 <__assert_fail>
    24c8:	movw	r0, #0
    24cc:	movw	r1, #0
    24d0:	movw	r3, #0
    24d4:	movw	r2, #1246	; 0x4de
    24d8:	movt	r0, #0
    24dc:	movt	r1, #0
    24e0:	movt	r3, #0
    24e4:	bl	0 <__assert_fail>
    24e8:	movw	r0, #0
    24ec:	movw	r1, #0
    24f0:	movw	r4, #0
    24f4:	movw	r3, #1249	; 0x4e1
    24f8:	movt	r0, #0
    24fc:	movt	r1, #0
    2500:	movt	r4, #0
    2504:	ldr	r0, [r0]
    2508:	str	r1, [sp]
    250c:	movw	r1, #0
    2510:	mov	r2, r4
    2514:	movt	r1, #0
    2518:	bl	0 <fprintf>
    251c:	movw	r0, #0
    2520:	movw	r3, #0
    2524:	mov	r1, r4
    2528:	movw	r2, #1249	; 0x4e1
    252c:	movt	r0, #0
    2530:	movt	r3, #0
    2534:	bl	0 <__assert_fail>
    2538:	movw	r0, #0
    253c:	movw	r1, #0
    2540:	movw	r3, #0
    2544:	movw	r2, #1269	; 0x4f5
    2548:	movt	r0, #0
    254c:	movt	r1, #0
    2550:	movt	r3, #0
    2554:	bl	0 <__assert_fail>

00002558 <gen_local_scope_parser>:
    2558:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    255c:	add	fp, sp, #24
    2560:	sub	sp, sp, #256	; 0x100
    2564:	mov	r5, r1
    2568:	mov	r4, r0
    256c:	vmov.i32	q8, #0	; 0x00000000
    2570:	mov	r0, #12
    2574:	sub	r1, fp, #72	; 0x48
    2578:	vst1.64	{d16-d17}, [r1], r0
    257c:	mov	r0, r5
    2580:	vst1.32	{d16-d17}, [r1]
    2584:	add	r1, sp, #4
    2588:	bl	0 <__flatcc_fb_copy_scope>
    258c:	ldr	r0, [r4, #208]	; 0xd0
    2590:	mov	r6, #0
    2594:	movw	r1, #0
    2598:	add	r5, r5, #4
    259c:	sub	r2, fp, #40	; 0x28
    25a0:	str	r6, [fp, #-40]	; 0xffffffd8
    25a4:	str	r6, [fp, #-32]	; 0xffffffe0
    25a8:	movt	r1, #0
    25ac:	str	r0, [fp, #-36]	; 0xffffffdc
    25b0:	mov	r0, r5
    25b4:	bl	0 <fb_symbol_table_visit>
    25b8:	ldr	r8, [fp, #-40]	; 0xffffffd8
    25bc:	cmp	r8, #0
    25c0:	beq	260c <gen_local_scope_parser+0xb4>
    25c4:	lsl	r0, r8, #4
    25c8:	bl	0 <malloc>
    25cc:	cmp	r0, #0
    25d0:	beq	260c <gen_local_scope_parser+0xb4>
    25d4:	movw	r1, #0
    25d8:	mov	r7, r0
    25dc:	str	r0, [fp, #-32]	; 0xffffffe0
    25e0:	sub	r2, fp, #40	; 0x28
    25e4:	mov	r0, r5
    25e8:	movt	r1, #0
    25ec:	bl	0 <fb_symbol_table_visit>
    25f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    25f4:	movw	r3, #0
    25f8:	mov	r0, r7
    25fc:	mov	r2, #16
    2600:	movt	r3, #0
    2604:	bl	0 <qsort>
    2608:	mov	r6, r7
    260c:	cmp	r8, #1
    2610:	str	r6, [fp, #-72]	; 0xffffffb8
    2614:	blt	2620 <gen_local_scope_parser+0xc8>
    2618:	cmp	r6, #0
    261c:	beq	27f8 <gen_local_scope_parser+0x2a0>
    2620:	mov	r0, #3
    2624:	movw	r1, #0
    2628:	add	r3, sp, #4
    262c:	str	r0, [fp, #-56]	; 0xffffffc8
    2630:	mov	r0, #0
    2634:	movt	r1, #0
    2638:	str	r0, [fp, #-60]	; 0xffffffc4
    263c:	movw	r0, #0
    2640:	movt	r0, #0
    2644:	str	r0, [fp, #-68]	; 0xffffffbc
    2648:	movw	r0, #0
    264c:	movt	r0, #0
    2650:	str	r0, [fp, #-64]	; 0xffffffc0
    2654:	ldr	r0, [r4, #208]	; 0xd0
    2658:	ldr	r2, [r0, #160]	; 0xa0
    265c:	mov	r0, r4
    2660:	bl	20f8 <println>
    2664:	ldr	r0, [r4, #220]	; 0xdc
    2668:	movw	r1, #0
    266c:	movt	r1, #0
    2670:	add	r0, r0, #2
    2674:	str	r0, [r4, #220]	; 0xdc
    2678:	mov	r0, r4
    267c:	bl	20f8 <println>
    2680:	ldr	r0, [r4, #220]	; 0xdc
    2684:	cmp	r0, #0
    2688:	beq	27d8 <gen_local_scope_parser+0x280>
    268c:	subs	r1, r0, #1
    2690:	str	r1, [r4, #220]	; 0xdc
    2694:	beq	27d8 <gen_local_scope_parser+0x280>
    2698:	movw	r1, #0
    269c:	sub	r0, r0, #2
    26a0:	str	r0, [r4, #220]	; 0xdc
    26a4:	movt	r1, #0
    26a8:	mov	r0, r4
    26ac:	bl	20f8 <println>
    26b0:	ldr	r0, [r4, #220]	; 0xdc
    26b4:	cmp	r8, #0
    26b8:	add	r0, r0, #1
    26bc:	str	r0, [r4, #220]	; 0xdc
    26c0:	beq	276c <gen_local_scope_parser+0x214>
    26c4:	movw	r1, #0
    26c8:	mov	r0, r4
    26cc:	movt	r1, #0
    26d0:	bl	20f8 <println>
    26d4:	movw	r1, #0
    26d8:	mov	r0, r4
    26dc:	movt	r1, #0
    26e0:	bl	20f8 <println>
    26e4:	movw	r1, #0
    26e8:	mov	r0, r4
    26ec:	movt	r1, #0
    26f0:	bl	20f8 <println>
    26f4:	movw	r1, #0
    26f8:	mov	r0, r4
    26fc:	movt	r1, #0
    2700:	bl	20f8 <println>
    2704:	movw	r1, #0
    2708:	mov	r0, r4
    270c:	movt	r1, #0
    2710:	bl	20f8 <println>
    2714:	mov	r0, #0
    2718:	sub	r3, r8, #1
    271c:	sub	r1, fp, #72	; 0x48
    2720:	mov	r2, #0
    2724:	str	r0, [sp]
    2728:	mov	r0, r4
    272c:	bl	2b40 <gen_trie>
    2730:	movw	r1, #0
    2734:	mov	r0, r4
    2738:	movt	r1, #0
    273c:	bl	20f8 <println>
    2740:	ldr	r0, [r4, #220]	; 0xdc
    2744:	cmp	r0, #0
    2748:	bne	2798 <gen_local_scope_parser+0x240>
    274c:	movw	r0, #0
    2750:	movw	r1, #0
    2754:	movw	r3, #0
    2758:	movw	r2, #1166	; 0x48e
    275c:	movt	r0, #0
    2760:	movt	r1, #0
    2764:	movt	r3, #0
    2768:	bl	0 <__assert_fail>
    276c:	movw	r1, #0
    2770:	mov	r0, r4
    2774:	movt	r1, #0
    2778:	bl	20f8 <println>
    277c:	movw	r1, #0
    2780:	mov	r0, r4
    2784:	movt	r1, #0
    2788:	bl	20f8 <println>
    278c:	ldr	r0, [r4, #220]	; 0xdc
    2790:	cmp	r0, #0
    2794:	beq	2848 <gen_local_scope_parser+0x2f0>
    2798:	movw	r1, #0
    279c:	sub	r0, r0, #1
    27a0:	str	r0, [r4, #220]	; 0xdc
    27a4:	movt	r1, #0
    27a8:	mov	r0, r4
    27ac:	bl	20f8 <println>
    27b0:	movw	r1, #0
    27b4:	mov	r0, r4
    27b8:	movt	r1, #0
    27bc:	bl	20f8 <println>
    27c0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    27c4:	cmp	r0, #0
    27c8:	beq	27d0 <gen_local_scope_parser+0x278>
    27cc:	bl	0 <free>
    27d0:	sub	sp, fp, #24
    27d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    27d8:	movw	r0, #0
    27dc:	movw	r1, #0
    27e0:	movw	r3, #0
    27e4:	mov	r2, #1152	; 0x480
    27e8:	movt	r0, #0
    27ec:	movt	r1, #0
    27f0:	movt	r3, #0
    27f4:	bl	0 <__assert_fail>
    27f8:	movw	r0, #0
    27fc:	movw	r1, #0
    2800:	movw	r4, #0
    2804:	movw	r3, #1140	; 0x474
    2808:	movt	r0, #0
    280c:	movt	r1, #0
    2810:	movt	r4, #0
    2814:	ldr	r0, [r0]
    2818:	str	r1, [sp]
    281c:	movw	r1, #0
    2820:	mov	r2, r4
    2824:	movt	r1, #0
    2828:	bl	0 <fprintf>
    282c:	movw	r0, #0
    2830:	movw	r3, #0
    2834:	mov	r1, r4
    2838:	movw	r2, #1140	; 0x474
    283c:	movt	r0, #0
    2840:	movt	r3, #0
    2844:	bl	0 <__assert_fail>
    2848:	movw	r0, #0
    284c:	movw	r1, #0
    2850:	movw	r3, #0
    2854:	movw	r2, #1157	; 0x485
    2858:	movt	r0, #0
    285c:	movt	r1, #0
    2860:	movt	r3, #0
    2864:	bl	0 <__assert_fail>

00002868 <build_compound_dict>:
    2868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    286c:	add	fp, sp, #28
    2870:	sub	sp, sp, #4
    2874:	ldr	r7, [r0, #20]
    2878:	cmp	r7, #0
    287c:	beq	29e8 <build_compound_dict+0x180>
    2880:	mov	r0, #0
    2884:	movw	r2, #65534	; 0xfffe
    2888:	mov	r3, r7
    288c:	mov	r4, #0
    2890:	ldrb	r6, [r3, #72]	; 0x48
    2894:	tst	r6, #4
    2898:	bne	28d4 <build_compound_dict+0x6c>
    289c:	ldrh	r6, [r3, #24]
    28a0:	and	r6, r6, r2
    28a4:	cmp	r6, #14
    28a8:	bne	28d0 <build_compound_dict+0x68>
    28ac:	ldr	r6, [r3, #16]
    28b0:	ldrh	r6, [r6, #8]
    28b4:	cmp	r6, #4
    28b8:	bne	28d0 <build_compound_dict+0x68>
    28bc:	ldr	r6, [r3, #4]
    28c0:	add	r4, r4, #1
    28c4:	ldr	r6, [r6, #4]
    28c8:	add	r0, r0, r6
    28cc:	add	r0, r0, #6
    28d0:	add	r4, r4, #1
    28d4:	ldr	r3, [r3]
    28d8:	cmp	r3, #0
    28dc:	bne	2890 <build_compound_dict+0x28>
    28e0:	mov	r6, #0
    28e4:	cmp	r4, #0
    28e8:	str	r4, [r1]
    28ec:	beq	29f0 <build_compound_dict+0x188>
    28f0:	add	r0, r0, r4, lsl #4
    28f4:	bl	0 <malloc>
    28f8:	cmp	r0, #0
    28fc:	str	r0, [sp]
    2900:	beq	29f0 <build_compound_dict+0x188>
    2904:	cmp	r7, #0
    2908:	beq	29c8 <build_compound_dict+0x160>
    290c:	ldr	r8, [sp]
    2910:	lsl	r0, r4, #4
    2914:	mov	r9, #0
    2918:	movw	r5, #65534	; 0xfffe
    291c:	mov	sl, #0
    2920:	add	r6, r8, r0
    2924:	ldrb	r0, [r7, #72]	; 0x48
    2928:	tst	r0, #4
    292c:	bne	29bc <build_compound_dict+0x154>
    2930:	ldr	r0, [r7, #4]
    2934:	ldr	r1, [r0]
    2938:	str	r1, [r8]
    293c:	ldr	r2, [r0, #4]
    2940:	stmib	r8, {r2, r7, r9}
    2944:	ldrh	r0, [r7, #24]
    2948:	and	r3, r0, r5
    294c:	add	r0, r8, #16
    2950:	cmp	r3, #14
    2954:	bne	29b8 <build_compound_dict+0x150>
    2958:	ldr	r3, [r7, #16]
    295c:	ldrh	r3, [r3, #8]
    2960:	cmp	r3, #4
    2964:	bne	29b8 <build_compound_dict+0x150>
    2968:	add	r0, r2, #5
    296c:	str	sl, [r7, #112]	; 0x70
    2970:	str	r6, [r8, #16]
    2974:	str	r0, [r8, #20]
    2978:	mov	r0, r6
    297c:	bl	0 <memcpy>
    2980:	ldr	r0, [r7, #4]
    2984:	movw	r1, #29791	; 0x745f
    2988:	add	sl, sl, #1
    298c:	movt	r1, #28793	; 0x7079
    2990:	ldr	r0, [r0, #4]
    2994:	str	r1, [r6, r0]!
    2998:	mov	r0, #101	; 0x65
    299c:	strh	r0, [r6, #4]
    29a0:	mov	r0, #1
    29a4:	str	r7, [r8, #24]
    29a8:	add	r6, r6, #6
    29ac:	str	r0, [r8, #28]
    29b0:	add	r8, r8, #32
    29b4:	b	29bc <build_compound_dict+0x154>
    29b8:	mov	r8, r0
    29bc:	ldr	r7, [r7]
    29c0:	cmp	r7, #0
    29c4:	bne	2924 <build_compound_dict+0xbc>
    29c8:	ldr	r6, [sp]
    29cc:	movw	r3, #0
    29d0:	mov	r1, r4
    29d4:	mov	r2, #16
    29d8:	movt	r3, #0
    29dc:	mov	r0, r6
    29e0:	bl	0 <qsort>
    29e4:	b	29f0 <build_compound_dict+0x188>
    29e8:	mov	r6, #0
    29ec:	str	r6, [r1]
    29f0:	mov	r0, r6
    29f4:	sub	sp, fp, #28
    29f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000029fc <gen_enum_match>:
    29fc:	push	{r4, r5, r6, sl, fp, lr}
    2a00:	add	fp, sp, #16
    2a04:	sub	sp, sp, #8
    2a08:	mov	r5, r2
    2a0c:	ldr	r2, [fp, #8]
    2a10:	mov	r6, r1
    2a14:	movw	r1, #0
    2a18:	mov	r4, r0
    2a1c:	movt	r1, #0
    2a20:	bl	20f8 <println>
    2a24:	movw	r1, #0
    2a28:	mov	r0, r4
    2a2c:	movt	r1, #0
    2a30:	bl	20f8 <println>
    2a34:	ldr	r0, [r4, #220]	; 0xdc
    2a38:	add	r0, r0, #1
    2a3c:	str	r0, [r4, #220]	; 0xdc
    2a40:	ldr	r0, [r6, #40]	; 0x28
    2a44:	sub	r1, r0, #1
    2a48:	cmp	r1, #5
    2a4c:	bcs	2a58 <gen_enum_match+0x5c>
    2a50:	ldrd	r2, [r5, #48]	; 0x30
    2a54:	b	2a70 <gen_enum_match+0x74>
    2a58:	sub	r0, r0, #6
    2a5c:	cmp	r0, #4
    2a60:	bcs	2ac4 <gen_enum_match+0xc8>
    2a64:	ldrd	r2, [r5, #48]	; 0x30
    2a68:	cmn	r3, #1
    2a6c:	ble	2ab8 <gen_enum_match+0xbc>
    2a70:	movw	r1, #0
    2a74:	movt	r1, #0
    2a78:	mov	r0, r4
    2a7c:	bl	20f8 <println>
    2a80:	ldr	r0, [r4, #220]	; 0xdc
    2a84:	cmp	r0, #0
    2a88:	beq	2b14 <gen_enum_match+0x118>
    2a8c:	movw	r1, #0
    2a90:	sub	r0, r0, #1
    2a94:	str	r0, [r4, #220]	; 0xdc
    2a98:	movt	r1, #0
    2a9c:	mov	r0, r4
    2aa0:	bl	20f8 <println>
    2aa4:	ldr	r0, [r4, #220]	; 0xdc
    2aa8:	add	r0, r0, #1
    2aac:	str	r0, [r4, #220]	; 0xdc
    2ab0:	sub	sp, fp, #16
    2ab4:	pop	{r4, r5, r6, sl, fp, pc}
    2ab8:	movw	r1, #0
    2abc:	movt	r1, #0
    2ac0:	b	2a78 <gen_enum_match+0x7c>
    2ac4:	movw	r0, #0
    2ac8:	movw	r1, #0
    2acc:	movw	r4, #0
    2ad0:	movw	r3, #710	; 0x2c6
    2ad4:	movt	r0, #0
    2ad8:	movt	r1, #0
    2adc:	movt	r4, #0
    2ae0:	ldr	r0, [r0]
    2ae4:	str	r1, [sp]
    2ae8:	movw	r1, #0
    2aec:	mov	r2, r4
    2af0:	movt	r1, #0
    2af4:	bl	0 <fprintf>
    2af8:	movw	r0, #0
    2afc:	movw	r3, #0
    2b00:	mov	r1, r4
    2b04:	movw	r2, #710	; 0x2c6
    2b08:	movt	r0, #0
    2b0c:	movt	r3, #0
    2b10:	bl	0 <__assert_fail>
    2b14:	movw	r0, #0
    2b18:	movw	r1, #0
    2b1c:	movw	r3, #0
    2b20:	movw	r2, #719	; 0x2cf
    2b24:	movt	r0, #0
    2b28:	movt	r1, #0
    2b2c:	movt	r3, #0
    2b30:	bl	0 <__assert_fail>

00002b34 <gen_enum_unmatched>:
    2b34:	movw	r1, #0
    2b38:	movt	r1, #0
    2b3c:	b	20f8 <println>

00002b40 <gen_trie>:
    2b40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2b44:	add	fp, sp, #28
    2b48:	sub	sp, sp, #92	; 0x5c
    2b4c:	ldr	lr, [r1]
    2b50:	ldr	r5, [fp, #8]
    2b54:	str	r2, [sp, #44]	; 0x2c
    2b58:	mvn	r7, #7
    2b5c:	add	r2, lr, r2, lsl #4
    2b60:	sub	r6, r7, r5
    2b64:	add	r7, r5, #8
    2b68:	ldr	r4, [r2, #4]
    2b6c:	cmp	r7, r4
    2b70:	bgt	2ed0 <gen_trie+0x390>
    2b74:	rsb	r2, r4, #0
    2b78:	cmp	r6, r2
    2b7c:	beq	2ed0 <gen_trie+0x390>
    2b80:	str	r4, [sp, #16]
    2b84:	str	r6, [sp, #12]
    2b88:	str	r7, [sp, #20]
    2b8c:	str	r1, [sp, #28]
    2b90:	str	r0, [sp, #24]
    2b94:	str	r3, [sp, #36]	; 0x24
    2b98:	mov	r9, #0
    2b9c:	vmov.i64	d17, #0xffffffff00000000
    2ba0:	vmov.i8	d18, #255	; 0xff
    2ba4:	vmov.i32	d19, #56	; 0x00000038
    2ba8:	vmov.i64	q10, #0x00000000000000ff
    2bac:	vmvn.i32	d16, #1	; 0x00000001
    2bb0:	mov	r7, #0
    2bb4:	mov	r2, #0
    2bb8:	ldr	r1, [sp, #44]	; 0x2c
    2bbc:	sub	r0, r3, r1
    2bc0:	mov	r3, #0
    2bc4:	add	r0, r0, r0, lsr #31
    2bc8:	add	r0, r1, r0, asr #1
    2bcc:	sub	r1, r5, #1
    2bd0:	str	r1, [sp, #40]	; 0x28
    2bd4:	mov	r1, #0
    2bd8:	str	r1, [sp, #48]	; 0x30
    2bdc:	mov	r1, #0
    2be0:	str	r1, [sp, #52]	; 0x34
    2be4:	str	r0, [sp, #32]
    2be8:	str	r0, [sp, #56]	; 0x38
    2bec:	str	r5, [fp, #-56]	; 0xffffffc8
    2bf0:	str	lr, [sp, #60]	; 0x3c
    2bf4:	ldr	sl, [sp, #56]	; 0x38
    2bf8:	ldr	r0, [sp, #44]	; 0x2c
    2bfc:	cmp	sl, r0
    2c00:	ble	2ef8 <gen_trie+0x3b8>
    2c04:	sub	r1, sl, #1
    2c08:	mov	r0, r1
    2c0c:	str	r1, [sp, #56]	; 0x38
    2c10:	add	r0, lr, r1, lsl #4
    2c14:	ldr	r0, [r0, #4]
    2c18:	cmp	r0, r5
    2c1c:	blt	2d68 <gen_trie+0x228>
    2c20:	sub	ip, r0, r5
    2c24:	mov	r0, #8
    2c28:	mov	r9, #0
    2c2c:	cmp	ip, #8
    2c30:	movge	ip, r0
    2c34:	cmp	ip, #0
    2c38:	beq	2d28 <gen_trie+0x1e8>
    2c3c:	ldr	r0, [sp, #56]	; 0x38
    2c40:	cmp	ip, #1
    2c44:	mov	r1, ip
    2c48:	mov	r7, #0
    2c4c:	ldr	r4, [lr, r0, lsl #4]
    2c50:	beq	2ce0 <gen_trie+0x1a0>
    2c54:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2c58:	vdup.32	d24, ip
    2c5c:	bic	r8, ip, #1
    2c60:	vmov.i32	q11, #0	; 0x00000000
    2c64:	sub	r5, fp, #44	; 0x2c
    2c68:	vadd.i32	d24, d24, d17
    2c6c:	sub	r1, ip, r8
    2c70:	mov	r6, r8
    2c74:	add	r0, r4, r0
    2c78:	sub	r7, r0, #1
    2c7c:	vadd.i32	d25, d24, d18
    2c80:	subs	r6, r6, #2
    2c84:	vadd.i32	d24, d24, d16
    2c88:	vmov.32	r0, d25[0]
    2c8c:	vshl.s32	d25, d25, #3
    2c90:	add	r0, r7, r0
    2c94:	vsub.i32	d25, d19, d25
    2c98:	ldrh	r0, [r0]
    2c9c:	vmovl.u32	q14, d25
    2ca0:	strh	r0, [fp, #-44]	; 0xffffffd4
    2ca4:	vld1.16	{d26[0]}, [r5 :16]
    2ca8:	vmovl.u8	q13, d26
    2cac:	vmovl.u16	q13, d26
    2cb0:	vrev64.32	d26, d26
    2cb4:	vmovl.u32	q13, d26
    2cb8:	vand	q13, q13, q10
    2cbc:	vshl.u64	q13, q13, q14
    2cc0:	vorr	q11, q13, q11
    2cc4:	bne	2c7c <gen_trie+0x13c>
    2cc8:	vorr	d24, d23, d23
    2ccc:	cmp	ip, r8
    2cd0:	vorr	q11, q11, q12
    2cd4:	vmov.32	r7, d22[1]
    2cd8:	vmov.32	r9, d22[0]
    2cdc:	beq	2d2c <gen_trie+0x1ec>
    2ce0:	ldr	r0, [sp, #40]	; 0x28
    2ce4:	add	r8, r4, r0
    2ce8:	mov	r0, #64	; 0x40
    2cec:	sub	r6, r0, r1, lsl #3
    2cf0:	ldrb	r5, [r8, r1]
    2cf4:	rsb	r4, r6, #32
    2cf8:	sub	r0, r6, #32
    2cfc:	cmp	r0, #0
    2d00:	lsr	r4, r5, r4
    2d04:	lslge	r4, r5, r0
    2d08:	lsl	r0, r5, r6
    2d0c:	add	r6, r6, #8
    2d10:	movwge	r0, #0
    2d14:	orr	r7, r4, r7
    2d18:	subs	r1, r1, #1
    2d1c:	orr	r9, r0, r9
    2d20:	bne	2cf0 <gen_trie+0x1b0>
    2d24:	b	2d2c <gen_trie+0x1ec>
    2d28:	mov	r7, #0
    2d2c:	mov	r0, #64	; 0x40
    2d30:	mvn	r4, #0
    2d34:	sub	r0, r0, ip, lsl #3
    2d38:	rsb	r1, r0, #32
    2d3c:	lsr	r1, r4, r1
    2d40:	orr	r5, r1, r4, lsl r0
    2d44:	mov	r1, #32
    2d48:	lsl	r0, r4, r0
    2d4c:	sub	r6, r1, ip, lsl #3
    2d50:	cmp	r6, #0
    2d54:	lslge	r5, r4, r6
    2d58:	movwge	r0, #0
    2d5c:	str	r5, [sp, #52]	; 0x34
    2d60:	str	r0, [sp, #48]	; 0x30
    2d64:	ldr	r5, [fp, #-56]	; 0xffffffc8
    2d68:	add	r0, lr, sl, lsl #4
    2d6c:	ldr	ip, [r0, #4]
    2d70:	cmp	ip, r5
    2d74:	blt	2e88 <gen_trie+0x348>
    2d78:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2d7c:	mov	r1, #8
    2d80:	mov	r3, #0
    2d84:	sub	r6, ip, r0
    2d88:	cmp	r6, #8
    2d8c:	movge	r6, r1
    2d90:	cmp	r6, #0
    2d94:	beq	2db4 <gen_trie+0x274>
    2d98:	ldr	r1, [sp, #60]	; 0x3c
    2d9c:	cmp	r6, #1
    2da0:	ldr	r4, [r1, sl, lsl #4]
    2da4:	bne	2dbc <gen_trie+0x27c>
    2da8:	mov	r8, r6
    2dac:	mov	r2, #0
    2db0:	b	2e44 <gen_trie+0x304>
    2db4:	mov	r2, #0
    2db8:	b	2e88 <gen_trie+0x348>
    2dbc:	add	r0, r4, r0
    2dc0:	vdup.32	d24, r6
    2dc4:	vmov.i32	q11, #0	; 0x00000000
    2dc8:	sub	r1, fp, #48	; 0x30
    2dcc:	sub	r2, r0, #1
    2dd0:	bic	r0, r6, #1
    2dd4:	vadd.i32	d24, d24, d17
    2dd8:	sub	r8, r6, r0
    2ddc:	mov	r3, r0
    2de0:	vadd.i32	d25, d24, d18
    2de4:	subs	r3, r3, #2
    2de8:	vadd.i32	d24, d24, d16
    2dec:	vmov.32	r5, d25[0]
    2df0:	vshl.s32	d25, d25, #3
    2df4:	add	r5, r2, r5
    2df8:	vsub.i32	d25, d19, d25
    2dfc:	ldrh	r5, [r5]
    2e00:	vmovl.u32	q14, d25
    2e04:	strh	r5, [fp, #-48]	; 0xffffffd0
    2e08:	vld1.16	{d26[0]}, [r1 :16]
    2e0c:	vmovl.u8	q13, d26
    2e10:	vmovl.u16	q13, d26
    2e14:	vrev64.32	d26, d26
    2e18:	vmovl.u32	q13, d26
    2e1c:	vand	q13, q13, q10
    2e20:	vshl.u64	q13, q13, q14
    2e24:	vorr	q11, q13, q11
    2e28:	bne	2de0 <gen_trie+0x2a0>
    2e2c:	vorr	d24, d23, d23
    2e30:	cmp	r6, r0
    2e34:	vorr	q11, q11, q12
    2e38:	vmov.32	r2, d22[1]
    2e3c:	vmov.32	r3, d22[0]
    2e40:	beq	2e88 <gen_trie+0x348>
    2e44:	ldr	r0, [sp, #40]	; 0x28
    2e48:	mov	r1, #64	; 0x40
    2e4c:	sub	r6, r1, r8, lsl #3
    2e50:	add	r0, r4, r0
    2e54:	ldrb	r5, [r0, r8]
    2e58:	rsb	lr, r6, #32
    2e5c:	sub	r4, r6, #32
    2e60:	cmp	r4, #0
    2e64:	lsr	r1, r5, lr
    2e68:	lslge	r1, r5, r4
    2e6c:	orr	r2, r1, r2
    2e70:	lsl	r1, r5, r6
    2e74:	add	r6, r6, #8
    2e78:	movwge	r1, #0
    2e7c:	subs	r8, r8, #1
    2e80:	orr	r3, r1, r3
    2e84:	bne	2e54 <gen_trie+0x314>
    2e88:	ldr	r1, [sp, #48]	; 0x30
    2e8c:	ldr	r6, [sp, #52]	; 0x34
    2e90:	eor	r0, r3, r9
    2e94:	ldr	r5, [fp, #-56]	; 0xffffffc8
    2e98:	ldr	lr, [sp, #60]	; 0x3c
    2e9c:	and	r0, r0, r1
    2ea0:	eor	r1, r2, r7
    2ea4:	and	r1, r1, r6
    2ea8:	orrs	r0, r0, r1
    2eac:	beq	2bf4 <gen_trie+0xb4>
    2eb0:	cmp	ip, r5
    2eb4:	bge	3314 <gen_trie+0x7d4>
    2eb8:	ldr	r9, [sp, #28]
    2ebc:	mov	r2, #0
    2ec0:	mov	r3, #0
    2ec4:	mov	r8, #0
    2ec8:	mov	r6, #0
    2ecc:	b	3568 <gen_trie+0xa28>
    2ed0:	ldr	r2, [sp, #44]	; 0x2c
    2ed4:	cmp	r3, r2
    2ed8:	bne	31e0 <gen_trie+0x6a0>
    2edc:	mov	r2, #0
    2ee0:	str	r5, [sp]
    2ee4:	str	r2, [sp, #4]
    2ee8:	ldr	r2, [sp, #44]	; 0x2c
    2eec:	bl	3a18 <gen_prefix_trie>
    2ef0:	sub	sp, fp, #28
    2ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2ef8:	ldr	r2, [sp, #32]
    2efc:	mov	ip, #0
    2f00:	vmov.i64	d17, #0xffffffff00000000
    2f04:	vmov.i8	d18, #255	; 0xff
    2f08:	vmov.i32	d19, #56	; 0x00000038
    2f0c:	vmov.i64	q10, #0x00000000000000ff
    2f10:	mov	r7, #0
    2f14:	mov	r3, #0
    2f18:	mov	r1, #0
    2f1c:	mov	lr, #0
    2f20:	mov	sl, #0
    2f24:	ldr	r0, [sp, #36]	; 0x24
    2f28:	cmp	r2, r0
    2f2c:	bge	3210 <gen_trie+0x6d0>
    2f30:	ldr	r0, [sp, #60]	; 0x3c
    2f34:	add	r0, r0, r2, lsl #4
    2f38:	ldr	r0, [r0, #4]
    2f3c:	cmp	r0, r5
    2f40:	blt	3090 <gen_trie+0x550>
    2f44:	sub	r9, r0, r5
    2f48:	mov	r0, #8
    2f4c:	mov	ip, #0
    2f50:	cmp	r9, #8
    2f54:	movge	r9, r0
    2f58:	cmp	r9, #0
    2f5c:	beq	3050 <gen_trie+0x510>
    2f60:	ldr	r0, [sp, #60]	; 0x3c
    2f64:	mov	r8, r2
    2f68:	cmp	r9, #1
    2f6c:	mov	r4, r9
    2f70:	mov	r7, #0
    2f74:	ldr	lr, [r0, r2, lsl #4]
    2f78:	beq	3008 <gen_trie+0x4c8>
    2f7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2f80:	vdup.32	d24, r9
    2f84:	vmov.i32	q11, #0	; 0x00000000
    2f88:	sub	r2, fp, #32
    2f8c:	vadd.i32	d24, d24, d17
    2f90:	add	r0, lr, r0
    2f94:	sub	r7, r0, #1
    2f98:	bic	r0, r9, #1
    2f9c:	sub	r4, r9, r0
    2fa0:	mov	r6, r0
    2fa4:	vadd.i32	d25, d24, d18
    2fa8:	subs	r6, r6, #2
    2fac:	vadd.i32	d24, d24, d16
    2fb0:	vmov.32	r5, d25[0]
    2fb4:	vshl.s32	d25, d25, #3
    2fb8:	add	r5, r7, r5
    2fbc:	vsub.i32	d25, d19, d25
    2fc0:	ldrh	r5, [r5]
    2fc4:	vmovl.u32	q14, d25
    2fc8:	strh	r5, [fp, #-32]	; 0xffffffe0
    2fcc:	vld1.16	{d26[0]}, [r2 :16]
    2fd0:	vmovl.u8	q13, d26
    2fd4:	vmovl.u16	q13, d26
    2fd8:	vrev64.32	d26, d26
    2fdc:	vmovl.u32	q13, d26
    2fe0:	vand	q13, q13, q10
    2fe4:	vshl.u64	q13, q13, q14
    2fe8:	vorr	q11, q13, q11
    2fec:	bne	2fa4 <gen_trie+0x464>
    2ff0:	vorr	d24, d23, d23
    2ff4:	cmp	r9, r0
    2ff8:	vorr	q11, q11, q12
    2ffc:	vmov.32	r7, d22[1]
    3000:	vmov.32	ip, d22[0]
    3004:	beq	3058 <gen_trie+0x518>
    3008:	ldr	r0, [sp, #40]	; 0x28
    300c:	add	lr, lr, r0
    3010:	mov	r0, #64	; 0x40
    3014:	sub	r6, r0, r4, lsl #3
    3018:	ldrb	r2, [lr, r4]
    301c:	rsb	r0, r6, #32
    3020:	sub	r5, r6, #32
    3024:	cmp	r5, #0
    3028:	lsr	r0, r2, r0
    302c:	lslge	r0, r2, r5
    3030:	orr	r7, r0, r7
    3034:	lsl	r0, r2, r6
    3038:	add	r6, r6, #8
    303c:	movwge	r0, #0
    3040:	subs	r4, r4, #1
    3044:	orr	ip, r0, ip
    3048:	bne	3018 <gen_trie+0x4d8>
    304c:	b	3058 <gen_trie+0x518>
    3050:	mov	r8, r2
    3054:	mov	r7, #0
    3058:	mov	r0, #64	; 0x40
    305c:	mvn	r6, #0
    3060:	ldr	r5, [fp, #-56]	; 0xffffffc8
    3064:	sub	r0, r0, r9, lsl #3
    3068:	rsb	r2, r0, #32
    306c:	lsl	lr, r6, r0
    3070:	lsr	r2, r6, r2
    3074:	orr	sl, r2, r6, lsl r0
    3078:	mov	r2, #32
    307c:	sub	r2, r2, r9, lsl #3
    3080:	cmp	r2, #0
    3084:	lslge	sl, r6, r2
    3088:	movwge	lr, #0
    308c:	mov	r2, r8
    3090:	ldr	r0, [sp, #60]	; 0x3c
    3094:	add	r2, r2, #1
    3098:	mov	r8, r2
    309c:	add	r0, r0, r2, lsl #4
    30a0:	ldr	r0, [r0, #4]
    30a4:	cmp	r0, r5
    30a8:	blt	31bc <gen_trie+0x67c>
    30ac:	ldr	r1, [fp, #-56]	; 0xffffffc8
    30b0:	mov	r3, #0
    30b4:	sub	r4, r0, r1
    30b8:	mov	r0, #8
    30bc:	cmp	r4, #8
    30c0:	movge	r4, r0
    30c4:	cmp	r4, #0
    30c8:	beq	30e8 <gen_trie+0x5a8>
    30cc:	ldr	r0, [sp, #60]	; 0x3c
    30d0:	cmp	r4, #1
    30d4:	ldr	r9, [r0, r8, lsl #4]
    30d8:	bne	30f0 <gen_trie+0x5b0>
    30dc:	mov	r2, r4
    30e0:	mov	r1, #0
    30e4:	b	3178 <gen_trie+0x638>
    30e8:	mov	r1, #0
    30ec:	b	31bc <gen_trie+0x67c>
    30f0:	add	r1, r9, r1
    30f4:	vdup.32	d24, r4
    30f8:	bic	r6, r4, #1
    30fc:	vmov.i32	q11, #0	; 0x00000000
    3100:	sub	r0, fp, #36	; 0x24
    3104:	sub	r1, r1, #1
    3108:	vadd.i32	d24, d24, d17
    310c:	sub	r2, r4, r6
    3110:	mov	r3, r6
    3114:	vadd.i32	d25, d24, d18
    3118:	subs	r3, r3, #2
    311c:	vadd.i32	d24, d24, d16
    3120:	vmov.32	r5, d25[0]
    3124:	vshl.s32	d25, d25, #3
    3128:	add	r5, r1, r5
    312c:	vsub.i32	d25, d19, d25
    3130:	ldrh	r5, [r5]
    3134:	vmovl.u32	q14, d25
    3138:	strh	r5, [fp, #-36]	; 0xffffffdc
    313c:	vld1.16	{d26[0]}, [r0 :16]
    3140:	vmovl.u8	q13, d26
    3144:	vmovl.u16	q13, d26
    3148:	vrev64.32	d26, d26
    314c:	vmovl.u32	q13, d26
    3150:	vand	q13, q13, q10
    3154:	vshl.u64	q13, q13, q14
    3158:	vorr	q11, q13, q11
    315c:	bne	3114 <gen_trie+0x5d4>
    3160:	vorr	d24, d23, d23
    3164:	cmp	r4, r6
    3168:	vorr	q11, q11, q12
    316c:	vmov.32	r1, d22[1]
    3170:	vmov.32	r3, d22[0]
    3174:	beq	31bc <gen_trie+0x67c>
    3178:	ldr	r4, [sp, #40]	; 0x28
    317c:	mov	r0, #64	; 0x40
    3180:	add	r9, r9, r4
    3184:	sub	r4, r0, r2, lsl #3
    3188:	ldrb	r5, [r9, r2]
    318c:	rsb	r6, r4, #32
    3190:	sub	r0, r4, #32
    3194:	cmp	r0, #0
    3198:	lsr	r6, r5, r6
    319c:	lslge	r6, r5, r0
    31a0:	lsl	r0, r5, r4
    31a4:	add	r4, r4, #8
    31a8:	movwge	r0, #0
    31ac:	orr	r1, r6, r1
    31b0:	subs	r2, r2, #1
    31b4:	orr	r3, r0, r3
    31b8:	bne	3188 <gen_trie+0x648>
    31bc:	ldr	r5, [fp, #-56]	; 0xffffffc8
    31c0:	eor	r0, r3, ip
    31c4:	eor	r2, r1, r7
    31c8:	and	r0, r0, lr
    31cc:	and	r2, r2, sl
    31d0:	orrs	r0, r0, r2
    31d4:	mov	r2, r8
    31d8:	beq	2f24 <gen_trie+0x3e4>
    31dc:	b	3214 <gen_trie+0x6d4>
    31e0:	ldr	r2, [sp, #44]	; 0x2c
    31e4:	add	r2, r2, #1
    31e8:	cmp	r2, r3
    31ec:	bne	2b80 <gen_trie+0x40>
    31f0:	add	r2, lr, r3, lsl #4
    31f4:	ldr	r2, [r2, #4]
    31f8:	cmp	r7, r2
    31fc:	bgt	2edc <gen_trie+0x39c>
    3200:	rsb	r2, r2, #0
    3204:	cmp	r6, r2
    3208:	bne	2b80 <gen_trie+0x40>
    320c:	b	2edc <gen_trie+0x39c>
    3210:	add	r2, r2, #1
    3214:	ldr	r9, [sp, #44]	; 0x2c
    3218:	str	r2, [sp, #32]
    321c:	sub	sl, r2, #1
    3220:	ldr	r7, [sp, #20]
    3224:	ldr	r3, [sp, #60]	; 0x3c
    3228:	ldr	r1, [sp, #16]
    322c:	cmp	r2, r9
    3230:	ble	328c <gen_trie+0x74c>
    3234:	cmp	r7, r1
    3238:	bgt	3250 <gen_trie+0x710>
    323c:	ldr	r0, [sp, #12]
    3240:	ldr	r9, [sp, #44]	; 0x2c
    3244:	add	r0, r1, r0
    3248:	cmp	r0, #0
    324c:	bgt	328c <gen_trie+0x74c>
    3250:	ldr	r1, [sp, #44]	; 0x2c
    3254:	ldr	r6, [sp, #12]
    3258:	mov	r0, r1
    325c:	cmp	r1, sl
    3260:	bge	3284 <gen_trie+0x744>
    3264:	add	r2, r3, r0, lsl #4
    3268:	add	r1, r0, #1
    326c:	ldr	r2, [r2, #20]
    3270:	cmp	r7, r2
    3274:	bgt	3258 <gen_trie+0x718>
    3278:	add	r2, r2, r6
    327c:	cmp	r2, #1
    3280:	blt	3258 <gen_trie+0x718>
    3284:	ldr	r2, [sp, #32]
    3288:	add	r9, r0, #1
    328c:	mov	r0, #0
    3290:	cmp	r9, r2
    3294:	str	r0, [sp, #56]	; 0x38
    3298:	bge	32f8 <gen_trie+0x7b8>
    329c:	ldr	r0, [sp, #44]	; 0x2c
    32a0:	mov	r2, #0
    32a4:	mov	r6, #0
    32a8:	cmp	r9, r0
    32ac:	ble	32d8 <gen_trie+0x798>
    32b0:	add	r0, r3, r9, lsl #4
    32b4:	mov	r1, #0
    32b8:	ldr	r0, [r0, #-12]
    32bc:	cmp	r7, r0
    32c0:	sub	r0, r0, r5
    32c4:	sub	r0, r0, #8
    32c8:	movwge	r1, #1
    32cc:	clz	r0, r0
    32d0:	lsr	r0, r0, #5
    32d4:	and	r6, r1, r0
    32d8:	add	r0, r3, r9, lsl #4
    32dc:	ldr	r0, [r0, #4]
    32e0:	cmp	r0, r5
    32e4:	bge	343c <gen_trie+0x8fc>
    32e8:	mov	r3, #0
    32ec:	mov	r4, #0
    32f0:	mov	r8, #0
    32f4:	b	3628 <gen_trie+0xae8>
    32f8:	ldr	r5, [sp, #24]
    32fc:	ldr	r6, [sp, #36]	; 0x24
    3300:	movw	sl, #0
    3304:	mov	r8, #0
    3308:	mov	r7, r9
    330c:	movt	sl, #0
    3310:	b	37ac <gen_trie+0xc6c>
    3314:	ldr	r1, [lr, sl, lsl #4]
    3318:	sub	r8, ip, r5
    331c:	ldr	r9, [sp, #28]
    3320:	mov	r2, #0
    3324:	cmp	r8, #8
    3328:	movge	r8, #8
    332c:	cmp	r8, #0
    3330:	add	r6, r1, r5
    3334:	beq	3564 <gen_trie+0xa24>
    3338:	cmp	r8, #1
    333c:	mov	r0, r8
    3340:	mov	r3, #0
    3344:	beq	33e8 <gen_trie+0x8a8>
    3348:	vmov.i64	d17, #0xffffffff00000000
    334c:	vdup.32	d20, r8
    3350:	mov	r4, r6
    3354:	sub	r2, r6, #1
    3358:	bic	r6, r8, #1
    335c:	vmov.i32	q9, #0	; 0x00000000
    3360:	sub	r3, fp, #52	; 0x34
    3364:	vmov.i32	d21, #56	; 0x00000038
    3368:	vmov.i64	q11, #0x00000000000000ff
    336c:	vadd.i32	d17, d20, d17
    3370:	sub	r0, r8, r6
    3374:	vmov.i8	d20, #255	; 0xff
    3378:	mov	r7, r6
    337c:	vadd.i32	d24, d17, d20
    3380:	subs	r7, r7, #2
    3384:	vadd.i32	d17, d17, d16
    3388:	vmov.32	r5, d24[0]
    338c:	vshl.s32	d24, d24, #3
    3390:	add	r5, r2, r5
    3394:	vsub.i32	d24, d21, d24
    3398:	ldrh	r5, [r5]
    339c:	strh	r5, [fp, #-52]	; 0xffffffcc
    33a0:	vld1.16	{d25[0]}, [r3 :16]
    33a4:	vmovl.u8	q13, d25
    33a8:	vmovl.u16	q13, d26
    33ac:	vrev64.32	d25, d26
    33b0:	vmovl.u32	q13, d25
    33b4:	vmovl.u32	q12, d24
    33b8:	vand	q13, q13, q11
    33bc:	vshl.u64	q12, q13, q12
    33c0:	vorr	q9, q12, q9
    33c4:	bne	337c <gen_trie+0x83c>
    33c8:	ldr	r5, [fp, #-56]	; 0xffffffc8
    33cc:	vorr	d16, d19, d19
    33d0:	cmp	r8, r6
    33d4:	mov	r6, r4
    33d8:	vorr	q8, q9, q8
    33dc:	vmov.32	r3, d16[1]
    33e0:	vmov.32	r2, d16[0]
    33e4:	beq	3568 <gen_trie+0xa28>
    33e8:	mov	r7, #64	; 0x40
    33ec:	add	r1, r1, r5
    33f0:	mov	ip, r6
    33f4:	sub	r7, r7, r0, lsl #3
    33f8:	sub	r1, r1, #1
    33fc:	ldrb	r6, [r1, r0]
    3400:	rsb	r5, r7, #32
    3404:	sub	r4, r7, #32
    3408:	cmp	r4, #0
    340c:	lsr	r5, r6, r5
    3410:	lslge	r5, r6, r4
    3414:	lsl	r6, r6, r7
    3418:	add	r7, r7, #8
    341c:	movwge	r6, #0
    3420:	orr	r3, r5, r3
    3424:	subs	r0, r0, #1
    3428:	orr	r2, r6, r2
    342c:	bne	33fc <gen_trie+0x8bc>
    3430:	ldr	r5, [fp, #-56]	; 0xffffffc8
    3434:	mov	r6, ip
    3438:	b	3568 <gen_trie+0xa28>
    343c:	ldr	lr, [r3, r9, lsl #4]
    3440:	sub	r4, r0, r5
    3444:	mov	r2, #0
    3448:	cmp	r4, #8
    344c:	movge	r4, #8
    3450:	cmp	r4, #0
    3454:	add	r8, lr, r5
    3458:	beq	3624 <gen_trie+0xae4>
    345c:	cmp	r4, #1
    3460:	mov	r0, r4
    3464:	mov	r3, #0
    3468:	str	r6, [sp, #60]	; 0x3c
    346c:	beq	350c <gen_trie+0x9cc>
    3470:	bic	ip, r4, #1
    3474:	vmov.i64	d17, #0xffffffff00000000
    3478:	vdup.32	d20, r4
    347c:	sub	r2, r8, #1
    3480:	vmov.i32	q9, #0	; 0x00000000
    3484:	mov	r6, r4
    3488:	sub	r3, fp, #40	; 0x28
    348c:	vmov.i32	d21, #56	; 0x00000038
    3490:	vmov.i64	q11, #0x00000000000000ff
    3494:	vadd.i32	d17, d20, d17
    3498:	sub	r0, r4, ip
    349c:	vmov.i8	d20, #255	; 0xff
    34a0:	mov	r4, ip
    34a4:	vadd.i32	d24, d17, d20
    34a8:	subs	r4, r4, #2
    34ac:	vadd.i32	d17, d17, d16
    34b0:	vmov.32	r1, d24[0]
    34b4:	vshl.s32	d24, d24, #3
    34b8:	add	r1, r2, r1
    34bc:	vsub.i32	d24, d21, d24
    34c0:	ldrh	r1, [r1]
    34c4:	strh	r1, [fp, #-40]	; 0xffffffd8
    34c8:	vld1.16	{d25[0]}, [r3 :16]
    34cc:	vmovl.u8	q13, d25
    34d0:	vmovl.u16	q13, d26
    34d4:	vrev64.32	d25, d26
    34d8:	vmovl.u32	q13, d25
    34dc:	vmovl.u32	q12, d24
    34e0:	vand	q13, q13, q11
    34e4:	vshl.u64	q12, q13, q12
    34e8:	vorr	q9, q12, q9
    34ec:	bne	34a4 <gen_trie+0x964>
    34f0:	vorr	d16, d19, d19
    34f4:	mov	r4, r6
    34f8:	cmp	r6, ip
    34fc:	vorr	q8, q9, q8
    3500:	vmov.32	r3, d16[1]
    3504:	vmov.32	r2, d16[0]
    3508:	beq	355c <gen_trie+0xa1c>
    350c:	mov	r1, #64	; 0x40
    3510:	mov	ip, r4
    3514:	sub	r4, r1, r0, lsl #3
    3518:	add	r1, lr, r5
    351c:	sub	r1, r1, #1
    3520:	ldrb	r7, [r1, r0]
    3524:	rsb	r5, r4, #32
    3528:	sub	r6, r4, #32
    352c:	cmp	r6, #0
    3530:	lsr	r5, r7, r5
    3534:	lslge	r5, r7, r6
    3538:	lsl	r7, r7, r4
    353c:	add	r4, r4, #8
    3540:	movwge	r7, #0
    3544:	orr	r3, r5, r3
    3548:	subs	r0, r0, #1
    354c:	orr	r2, r7, r2
    3550:	bne	3520 <gen_trie+0x9e0>
    3554:	ldr	r7, [sp, #20]
    3558:	mov	r4, ip
    355c:	ldr	r6, [sp, #60]	; 0x3c
    3560:	b	3628 <gen_trie+0xae8>
    3564:	mov	r3, #0
    3568:	str	r8, [sp]
    356c:	str	r6, [sp, #4]
    3570:	movw	r1, #0
    3574:	ldr	r4, [sp, #24]
    3578:	movt	r1, #0
    357c:	mov	r0, r4
    3580:	bl	20f8 <println>
    3584:	ldr	r0, [r4, #220]	; 0xdc
    3588:	mov	r1, r9
    358c:	add	r0, r0, #1
    3590:	str	r0, [r4, #220]	; 0xdc
    3594:	str	r5, [sp]
    3598:	mov	r0, r4
    359c:	ldr	r2, [sp, #44]	; 0x2c
    35a0:	ldr	r3, [sp, #56]	; 0x38
    35a4:	bl	2b40 <gen_trie>
    35a8:	ldr	r0, [r4, #220]	; 0xdc
    35ac:	cmp	r0, #0
    35b0:	beq	3964 <gen_trie+0xe24>
    35b4:	movw	r1, #0
    35b8:	sub	r0, r0, #1
    35bc:	mov	r2, r8
    35c0:	mov	r3, r6
    35c4:	str	r0, [r4, #220]	; 0xdc
    35c8:	movt	r1, #0
    35cc:	mov	r0, r4
    35d0:	bl	20f8 <println>
    35d4:	ldr	r0, [r4, #220]	; 0xdc
    35d8:	mov	r1, r9
    35dc:	mov	r2, sl
    35e0:	add	r0, r0, #1
    35e4:	str	r0, [r4, #220]	; 0xdc
    35e8:	str	r5, [sp]
    35ec:	mov	r0, r4
    35f0:	ldr	r3, [sp, #36]	; 0x24
    35f4:	bl	2b40 <gen_trie>
    35f8:	ldr	r0, [r4, #220]	; 0xdc
    35fc:	cmp	r0, #0
    3600:	beq	3984 <gen_trie+0xe44>
    3604:	movw	r1, #0
    3608:	sub	r0, r0, #1
    360c:	mov	r2, r8
    3610:	mov	r3, r6
    3614:	str	r0, [r4, #220]	; 0xdc
    3618:	movt	r1, #0
    361c:	mov	r0, r4
    3620:	b	3938 <gen_trie+0xdf8>
    3624:	mov	r3, #0
    3628:	stm	sp, {r4, r8}
    362c:	movw	r1, #0
    3630:	ldr	r5, [sp, #24]
    3634:	movt	r1, #0
    3638:	mov	r0, r5
    363c:	bl	20f8 <println>
    3640:	ldr	r0, [r5, #220]	; 0xdc
    3644:	cmp	r6, #0
    3648:	add	r0, r0, #1
    364c:	str	r0, [r5, #220]	; 0xdc
    3650:	beq	3728 <gen_trie+0xbe8>
    3654:	movw	r1, #0
    3658:	mov	r0, r5
    365c:	mov	r2, r4
    3660:	mov	r3, r8
    3664:	movt	r1, #0
    3668:	bl	20f8 <println>
    366c:	mov	r6, r4
    3670:	ldr	r4, [sp, #28]
    3674:	sub	r7, r9, #1
    3678:	ldm	r4, {r0, ip}
    367c:	ldr	r1, [r4, #12]
    3680:	add	r0, r0, r7, lsl #4
    3684:	ldr	r2, [r0, #8]
    3688:	ldr	r3, [r0, #12]
    368c:	mov	r0, #8
    3690:	str	r0, [sp]
    3694:	mov	r0, r5
    3698:	blx	ip
    369c:	movw	r1, #0
    36a0:	mov	r0, r5
    36a4:	mov	r2, r6
    36a8:	mov	r3, r8
    36ac:	str	r6, [sp, #60]	; 0x3c
    36b0:	movt	r1, #0
    36b4:	bl	20f8 <println>
    36b8:	movw	r1, #0
    36bc:	mov	r0, r5
    36c0:	movt	r1, #0
    36c4:	bl	20f8 <println>
    36c8:	movw	r1, #0
    36cc:	mov	r0, r5
    36d0:	movt	r1, #0
    36d4:	bl	20f8 <println>
    36d8:	ldr	r0, [sp, #20]
    36dc:	mov	r1, r4
    36e0:	mov	r2, r9
    36e4:	mov	r3, sl
    36e8:	str	r0, [sp]
    36ec:	mov	r0, r5
    36f0:	bl	2b40 <gen_trie>
    36f4:	ldr	r0, [r5, #220]	; 0xdc
    36f8:	cmp	r0, #0
    36fc:	beq	39c4 <gen_trie+0xe84>
    3700:	ldr	r4, [sp, #60]	; 0x3c
    3704:	movw	r1, #0
    3708:	sub	r0, r0, #1
    370c:	mov	r3, r8
    3710:	str	r0, [r5, #220]	; 0xdc
    3714:	movt	r1, #0
    3718:	mov	r0, r5
    371c:	mov	r2, r4
    3720:	bl	20f8 <println>
    3724:	b	3764 <gen_trie+0xc24>
    3728:	movw	r1, #0
    372c:	mov	r0, r5
    3730:	movt	r1, #0
    3734:	bl	20f8 <println>
    3738:	movw	r1, #0
    373c:	mov	r0, r5
    3740:	movt	r1, #0
    3744:	bl	20f8 <println>
    3748:	str	r7, [sp]
    374c:	mov	r0, r5
    3750:	mov	r2, r9
    3754:	mov	r3, sl
    3758:	ldr	r1, [sp, #28]
    375c:	bl	2b40 <gen_trie>
    3760:	mov	r7, r9
    3764:	ldr	r0, [r5, #220]	; 0xdc
    3768:	ldr	r6, [sp, #36]	; 0x24
    376c:	mov	sl, r8
    3770:	cmp	r0, #0
    3774:	beq	39a4 <gen_trie+0xe64>
    3778:	movw	r1, #0
    377c:	sub	r0, r0, #1
    3780:	mov	r2, r4
    3784:	mov	r3, sl
    3788:	mov	r8, r4
    378c:	str	r0, [r5, #220]	; 0xdc
    3790:	movt	r1, #0
    3794:	mov	r0, r5
    3798:	bl	20f8 <println>
    379c:	ldr	r0, [r5, #220]	; 0xdc
    37a0:	ldr	r2, [sp, #32]
    37a4:	add	r0, r0, #1
    37a8:	str	r0, [r5, #220]	; 0xdc
    37ac:	ldr	r0, [sp, #44]	; 0x2c
    37b0:	mov	r1, #0
    37b4:	cmp	r7, r0
    37b8:	mov	r0, #0
    37bc:	movwgt	r0, #1
    37c0:	cmp	r2, r6
    37c4:	movwle	r1, #1
    37c8:	and	r4, r1, r0
    37cc:	cmp	r4, #1
    37d0:	bne	37e8 <gen_trie+0xca8>
    37d4:	ldr	r1, [sp, #28]
    37d8:	ldr	r0, [r1, #24]
    37dc:	add	r0, r0, #1
    37e0:	str	r0, [sp, #56]	; 0x38
    37e4:	str	r0, [r1, #24]
    37e8:	ldr	r0, [sp, #44]	; 0x2c
    37ec:	cmp	r7, r0
    37f0:	ble	3874 <gen_trie+0xd34>
    37f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    37f8:	sub	r3, r7, #1
    37fc:	str	r0, [sp]
    3800:	ldr	r0, [sp, #56]	; 0x38
    3804:	str	r0, [sp, #4]
    3808:	mov	r0, r5
    380c:	ldr	r1, [sp, #28]
    3810:	ldr	r2, [sp, #44]	; 0x2c
    3814:	bl	3a18 <gen_prefix_trie>
    3818:	ldr	r2, [sp, #32]
    381c:	cmp	r4, #0
    3820:	beq	3874 <gen_trie+0xd34>
    3824:	str	sl, [sp, #60]	; 0x3c
    3828:	movw	r1, #0
    382c:	mov	r0, r5
    3830:	ldr	sl, [sp, #56]	; 0x38
    3834:	movt	r1, #0
    3838:	mov	r2, sl
    383c:	bl	20f8 <println>
    3840:	ldr	r0, [r5, #220]	; 0xdc
    3844:	mov	r1, #0
    3848:	mov	r2, sl
    384c:	ldr	sl, [sp, #60]	; 0x3c
    3850:	str	r1, [r5, #220]	; 0xdc
    3854:	movw	r1, #0
    3858:	movt	r1, #0
    385c:	str	r0, [r5, #228]	; 0xe4
    3860:	mov	r0, r5
    3864:	bl	20f8 <println>
    3868:	ldr	r0, [r5, #228]	; 0xe4
    386c:	ldr	r2, [sp, #32]
    3870:	str	r0, [r5, #220]	; 0xdc
    3874:	cmp	r2, r6
    3878:	ble	38a0 <gen_trie+0xd60>
    387c:	ldr	r0, [sp, #44]	; 0x2c
    3880:	cmp	r7, r0
    3884:	bgt	38b8 <gen_trie+0xd78>
    3888:	ldr	r0, [sp, #28]
    388c:	ldr	r1, [r0, #8]
    3890:	mov	r0, r5
    3894:	blx	r1
    3898:	mov	r4, r8
    389c:	b	3900 <gen_trie+0xdc0>
    38a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    38a4:	mov	r3, r6
    38a8:	str	r0, [sp]
    38ac:	mov	r0, r5
    38b0:	ldr	r1, [sp, #28]
    38b4:	bl	2b40 <gen_trie>
    38b8:	cmp	r4, #0
    38bc:	mov	r4, r8
    38c0:	beq	3900 <gen_trie+0xdc0>
    38c4:	ldr	r0, [r5, #220]	; 0xdc
    38c8:	ldr	r2, [sp, #56]	; 0x38
    38cc:	mov	r1, #0
    38d0:	str	r1, [r5, #220]	; 0xdc
    38d4:	movw	r1, #0
    38d8:	movt	r1, #0
    38dc:	str	r0, [r5, #228]	; 0xe4
    38e0:	mov	r0, r5
    38e4:	bl	20f8 <println>
    38e8:	ldr	r0, [r5, #228]	; 0xe4
    38ec:	movw	r1, #0
    38f0:	movt	r1, #0
    38f4:	str	r0, [r5, #220]	; 0xdc
    38f8:	mov	r0, r5
    38fc:	bl	20f8 <println>
    3900:	ldr	r0, [sp, #32]
    3904:	cmp	r9, r0
    3908:	subge	sp, fp, #28
    390c:	popge	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3910:	ldr	r0, [r5, #220]	; 0xdc
    3914:	cmp	r0, #0
    3918:	beq	3944 <gen_trie+0xe04>
    391c:	movw	r1, #0
    3920:	sub	r0, r0, #1
    3924:	mov	r2, r4
    3928:	mov	r3, sl
    392c:	str	r0, [r5, #220]	; 0xdc
    3930:	movt	r1, #0
    3934:	mov	r0, r5
    3938:	sub	sp, fp, #28
    393c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3940:	b	20f8 <println>
    3944:	movw	r0, #0
    3948:	movw	r1, #0
    394c:	movw	r3, #0
    3950:	mov	r2, #1072	; 0x430
    3954:	movt	r0, #0
    3958:	movt	r1, #0
    395c:	movt	r3, #0
    3960:	bl	0 <__assert_fail>
    3964:	movw	r0, #0
    3968:	movw	r1, #0
    396c:	movw	r3, #0
    3970:	movw	r2, #973	; 0x3cd
    3974:	movt	r0, #0
    3978:	movt	r1, #0
    397c:	movt	r3, #0
    3980:	bl	0 <__assert_fail>
    3984:	movw	r0, #0
    3988:	movw	r1, #0
    398c:	movw	r3, #0
    3990:	movw	r2, #975	; 0x3cf
    3994:	movt	r0, #0
    3998:	movt	r1, #0
    399c:	movt	r3, #0
    39a0:	bl	0 <__assert_fail>
    39a4:	movw	r0, #0
    39a8:	movw	r1, #0
    39ac:	movw	r3, #0
    39b0:	movw	r2, #1044	; 0x414
    39b4:	movt	r0, #0
    39b8:	movt	r1, #0
    39bc:	movt	r3, #0
    39c0:	bl	0 <__assert_fail>
    39c4:	movw	r0, #0
    39c8:	movw	r1, #0
    39cc:	movw	r3, #0
    39d0:	mov	r2, #1040	; 0x410
    39d4:	movt	r0, #0
    39d8:	movt	r1, #0
    39dc:	movt	r3, #0
    39e0:	bl	0 <__assert_fail>

000039e4 <dict_cmp>:
    39e4:	push	{r4, r5, fp, lr}
    39e8:	add	fp, sp, #8
    39ec:	ldm	r1, {r3, r4}
    39f0:	ldm	r0, {r1, r5}
    39f4:	cmp	r5, r4
    39f8:	mov	r2, r5
    39fc:	mov	r0, r1
    3a00:	mov	r1, r3
    3a04:	movgt	r2, r4
    3a08:	bl	0 <memcmp>
    3a0c:	cmp	r0, #0
    3a10:	subeq	r0, r5, r4
    3a14:	pop	{r4, r5, fp, pc}

00003a18 <gen_prefix_trie>:
    3a18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3a1c:	add	fp, sp, #28
    3a20:	sub	sp, sp, #52	; 0x34
    3a24:	mov	sl, r1
    3a28:	sub	r5, r3, r2
    3a2c:	ldr	r1, [r1]
    3a30:	mov	r9, r0
    3a34:	str	r3, [sp, #36]	; 0x24
    3a38:	str	r2, [sp, #28]
    3a3c:	add	r0, r5, #1
    3a40:	ldr	r3, [fp, #8]
    3a44:	ldr	r6, [fp, #12]
    3a48:	add	r0, r0, r0, lsr #31
    3a4c:	add	r2, r2, r0, asr #1
    3a50:	add	r0, r1, r2, lsl #4
    3a54:	str	r2, [fp, #-36]	; 0xffffffdc
    3a58:	ldr	r0, [r0, #4]
    3a5c:	str	r3, [sp, #40]	; 0x28
    3a60:	str	r5, [sp, #32]
    3a64:	cmp	r0, r3
    3a68:	bge	3a88 <gen_prefix_trie+0x70>
    3a6c:	mov	r4, #0
    3a70:	mov	r8, #0
    3a74:	mov	r2, #0
    3a78:	mov	r3, #0
    3a7c:	mov	r7, #0
    3a80:	mov	r5, #0
    3a84:	b	3c18 <gen_prefix_trie+0x200>
    3a88:	ldr	lr, [r1, r2, lsl #4]
    3a8c:	sub	ip, r0, r3
    3a90:	mov	r2, #0
    3a94:	cmp	ip, #8
    3a98:	mov	r8, ip
    3a9c:	movge	r8, #8
    3aa0:	cmp	r8, #0
    3aa4:	add	r4, lr, r3
    3aa8:	beq	3c04 <gen_prefix_trie+0x1ec>
    3aac:	cmp	r8, #1
    3ab0:	mov	r1, r8
    3ab4:	mov	r3, #0
    3ab8:	str	r6, [sp, #20]
    3abc:	str	r4, [sp, #24]
    3ac0:	beq	3b60 <gen_prefix_trie+0x148>
    3ac4:	ldr	r0, [sp, #24]
    3ac8:	vmov.i64	d18, #0xffffffff00000000
    3acc:	vdup.32	d19, r8
    3ad0:	vmov.i32	q8, #0	; 0x00000000
    3ad4:	sub	r3, fp, #32
    3ad8:	vmov.i32	d20, #56	; 0x00000038
    3adc:	vmov.i64	q11, #0x00000000000000ff
    3ae0:	vmvn.i32	d21, #1	; 0x00000001
    3ae4:	vadd.i32	d18, d19, d18
    3ae8:	vmov.i8	d19, #255	; 0xff
    3aec:	sub	r2, r0, #1
    3af0:	bic	r0, r8, #1
    3af4:	sub	r1, r8, r0
    3af8:	mov	r5, r0
    3afc:	vadd.i32	d24, d18, d19
    3b00:	subs	r5, r5, #2
    3b04:	vadd.i32	d18, d18, d21
    3b08:	vmov.32	r7, d24[0]
    3b0c:	vshl.s32	d24, d24, #3
    3b10:	add	r7, r2, r7
    3b14:	vsub.i32	d24, d20, d24
    3b18:	ldrh	r7, [r7]
    3b1c:	strh	r7, [fp, #-32]	; 0xffffffe0
    3b20:	vld1.16	{d25[0]}, [r3 :16]
    3b24:	vmovl.u8	q13, d25
    3b28:	vmovl.u16	q13, d26
    3b2c:	vrev64.32	d25, d26
    3b30:	vmovl.u32	q13, d25
    3b34:	vmovl.u32	q12, d24
    3b38:	vand	q13, q13, q11
    3b3c:	vshl.u64	q12, q13, q12
    3b40:	vorr	q8, q12, q8
    3b44:	bne	3afc <gen_prefix_trie+0xe4>
    3b48:	vorr	d18, d17, d17
    3b4c:	cmp	r8, r0
    3b50:	vorr	q8, q8, q9
    3b54:	vmov.32	r3, d16[1]
    3b58:	vmov.32	r2, d16[0]
    3b5c:	beq	3ba8 <gen_prefix_trie+0x190>
    3b60:	ldr	r0, [sp, #40]	; 0x28
    3b64:	mov	r7, #64	; 0x40
    3b68:	sub	r5, r7, r1, lsl #3
    3b6c:	add	r7, lr, r0
    3b70:	sub	r7, r7, #1
    3b74:	ldrb	r0, [r7, r1]
    3b78:	rsb	r6, r5, #32
    3b7c:	sub	r4, r5, #32
    3b80:	cmp	r4, #0
    3b84:	lsr	r6, r0, r6
    3b88:	lslge	r6, r0, r4
    3b8c:	lsl	r0, r0, r5
    3b90:	add	r5, r5, #8
    3b94:	movwge	r0, #0
    3b98:	orr	r3, r6, r3
    3b9c:	subs	r1, r1, #1
    3ba0:	orr	r2, r0, r2
    3ba4:	bne	3b74 <gen_prefix_trie+0x15c>
    3ba8:	mov	r1, #64	; 0x40
    3bac:	mov	r0, #32
    3bb0:	mvn	r6, #0
    3bb4:	sub	r1, r1, r8, lsl #3
    3bb8:	sub	r0, r0, r8, lsl #3
    3bbc:	rsb	r7, r1, #32
    3bc0:	cmp	r0, #0
    3bc4:	ror	r5, r6, r7
    3bc8:	lsl	r7, r6, r1
    3bcc:	lslge	r5, r6, r0
    3bd0:	movwge	r7, #0
    3bd4:	cmp	ip, #8
    3bd8:	blt	3c0c <gen_prefix_trie+0x1f4>
    3bdc:	str	r8, [sp]
    3be0:	movw	r1, #0
    3be4:	mov	r0, r9
    3be8:	ldr	r4, [sp, #24]
    3bec:	movt	r1, #0
    3bf0:	str	r4, [sp, #4]
    3bf4:	bl	20f8 <println>
    3bf8:	ldr	r6, [sp, #20]
    3bfc:	mov	r8, #8
    3c00:	b	3c38 <gen_prefix_trie+0x220>
    3c04:	mov	r3, #0
    3c08:	b	3c18 <gen_prefix_trie+0x200>
    3c0c:	ldr	r4, [sp, #24]
    3c10:	ldr	r6, [sp, #20]
    3c14:	mov	r8, ip
    3c18:	movw	r1, #0
    3c1c:	stm	sp, {r2, r3, r8}
    3c20:	mov	r0, r9
    3c24:	mov	r2, r7
    3c28:	mov	r3, r5
    3c2c:	str	r4, [sp, #12]
    3c30:	movt	r1, #0
    3c34:	bl	20f8 <println>
    3c38:	ldr	r0, [r9, #220]	; 0xdc
    3c3c:	ldr	r3, [sp, #36]	; 0x24
    3c40:	add	r0, r0, #1
    3c44:	str	r0, [r9, #220]	; 0xdc
    3c48:	ldr	r0, [sp, #32]
    3c4c:	add	r0, r0, #2
    3c50:	cmp	r0, #2
    3c54:	bhi	3c9c <gen_prefix_trie+0x284>
    3c58:	ldm	sl, {r0, r7}
    3c5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3c60:	ldr	r1, [sl, #12]
    3c64:	add	r0, r0, r2, lsl #4
    3c68:	ldr	r2, [r0, #8]
    3c6c:	ldr	r3, [r0, #12]
    3c70:	mov	r0, r9
    3c74:	str	r8, [sp]
    3c78:	blx	r7
    3c7c:	cmp	r6, #1
    3c80:	blt	3d08 <gen_prefix_trie+0x2f0>
    3c84:	movw	r1, #0
    3c88:	mov	r0, r9
    3c8c:	mov	r2, r6
    3c90:	movt	r1, #0
    3c94:	bl	20f8 <println>
    3c98:	b	3d14 <gen_prefix_trie+0x2fc>
    3c9c:	ldr	r7, [fp, #-36]	; 0xffffffdc
    3ca0:	cmp	r7, r3
    3ca4:	bne	3ce8 <gen_prefix_trie+0x2d0>
    3ca8:	ldm	sl, {r0, r7}
    3cac:	ldr	r1, [sl, #12]
    3cb0:	add	r0, r0, r3, lsl #4
    3cb4:	ldr	r2, [r0, #8]
    3cb8:	ldr	r3, [r0, #12]
    3cbc:	mov	r0, r9
    3cc0:	str	r8, [sp]
    3cc4:	blx	r7
    3cc8:	cmp	r6, #1
    3ccc:	blt	3da4 <gen_prefix_trie+0x38c>
    3cd0:	movw	r1, #0
    3cd4:	mov	r0, r9
    3cd8:	mov	r2, r6
    3cdc:	movt	r1, #0
    3ce0:	bl	20f8 <println>
    3ce4:	b	3db0 <gen_prefix_trie+0x398>
    3ce8:	ldr	r0, [sp, #40]	; 0x28
    3cec:	mov	r1, sl
    3cf0:	mov	r2, r7
    3cf4:	stm	sp, {r0, r6}
    3cf8:	mov	r0, r9
    3cfc:	bl	3a18 <gen_prefix_trie>
    3d00:	add	r5, r9, #220	; 0xdc
    3d04:	b	3ddc <gen_prefix_trie+0x3c4>
    3d08:	ldr	r1, [sl, #8]
    3d0c:	mov	r0, r9
    3d10:	blx	r1
    3d14:	mov	r5, r9
    3d18:	ldr	r0, [r5, #220]!	; 0xdc
    3d1c:	cmp	r0, #0
    3d20:	beq	3e84 <gen_prefix_trie+0x46c>
    3d24:	movw	r1, #0
    3d28:	sub	r0, r0, #1
    3d2c:	str	r0, [r9, #220]	; 0xdc
    3d30:	movt	r1, #0
    3d34:	mov	r0, r9
    3d38:	bl	20f8 <println>
    3d3c:	ldr	r0, [r9, #220]	; 0xdc
    3d40:	cmp	r0, #0
    3d44:	beq	3ea4 <gen_prefix_trie+0x48c>
    3d48:	movw	r1, #0
    3d4c:	sub	r0, r0, #1
    3d50:	mov	r2, r8
    3d54:	mov	r3, r4
    3d58:	str	r0, [r9, #220]	; 0xdc
    3d5c:	movt	r1, #0
    3d60:	mov	r0, r9
    3d64:	bl	20f8 <println>
    3d68:	ldr	r0, [r9, #220]	; 0xdc
    3d6c:	cmp	r6, #1
    3d70:	add	r0, r0, #1
    3d74:	str	r0, [r9, #220]	; 0xdc
    3d78:	blt	3d94 <gen_prefix_trie+0x37c>
    3d7c:	movw	r1, #0
    3d80:	mov	r0, r9
    3d84:	mov	r2, r6
    3d88:	movt	r1, #0
    3d8c:	bl	20f8 <println>
    3d90:	b	3e30 <gen_prefix_trie+0x418>
    3d94:	ldr	r1, [sl, #8]
    3d98:	mov	r0, r9
    3d9c:	blx	r1
    3da0:	b	3e30 <gen_prefix_trie+0x418>
    3da4:	ldr	r1, [sl, #8]
    3da8:	mov	r0, r9
    3dac:	blx	r1
    3db0:	mov	r5, r9
    3db4:	ldr	r7, [fp, #-36]	; 0xffffffdc
    3db8:	ldr	r0, [r5, #220]!	; 0xdc
    3dbc:	cmp	r0, #0
    3dc0:	beq	3ee4 <gen_prefix_trie+0x4cc>
    3dc4:	movw	r1, #0
    3dc8:	sub	r0, r0, #1
    3dcc:	str	r0, [r9, #220]	; 0xdc
    3dd0:	movt	r1, #0
    3dd4:	mov	r0, r9
    3dd8:	bl	20f8 <println>
    3ddc:	ldr	r0, [r5]
    3de0:	cmp	r0, #0
    3de4:	beq	3ec4 <gen_prefix_trie+0x4ac>
    3de8:	movw	r1, #0
    3dec:	sub	r0, r0, #1
    3df0:	mov	r2, r8
    3df4:	mov	r3, r4
    3df8:	str	r0, [r9, #220]	; 0xdc
    3dfc:	movt	r1, #0
    3e00:	mov	r0, r9
    3e04:	bl	20f8 <println>
    3e08:	ldr	r0, [r9, #220]	; 0xdc
    3e0c:	sub	r3, r7, #1
    3e10:	mov	r1, sl
    3e14:	add	r0, r0, #1
    3e18:	str	r0, [r9, #220]	; 0xdc
    3e1c:	ldr	r0, [sp, #40]	; 0x28
    3e20:	stm	sp, {r0, r6}
    3e24:	mov	r0, r9
    3e28:	ldr	r2, [sp, #28]
    3e2c:	bl	3a18 <gen_prefix_trie>
    3e30:	ldr	r0, [r5]
    3e34:	cmp	r0, #0
    3e38:	beq	3e64 <gen_prefix_trie+0x44c>
    3e3c:	movw	r1, #0
    3e40:	sub	r0, r0, #1
    3e44:	mov	r2, r8
    3e48:	mov	r3, r4
    3e4c:	str	r0, [r9, #220]	; 0xdc
    3e50:	movt	r1, #0
    3e54:	mov	r0, r9
    3e58:	sub	sp, fp, #28
    3e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3e60:	b	20f8 <println>
    3e64:	movw	r0, #0
    3e68:	movw	r1, #0
    3e6c:	movw	r3, #0
    3e70:	movw	r2, #910	; 0x38e
    3e74:	movt	r0, #0
    3e78:	movt	r1, #0
    3e7c:	movt	r3, #0
    3e80:	bl	0 <__assert_fail>
    3e84:	movw	r0, #0
    3e88:	movw	r1, #0
    3e8c:	movw	r3, #0
    3e90:	mov	r2, #888	; 0x378
    3e94:	movt	r0, #0
    3e98:	movt	r1, #0
    3e9c:	movt	r3, #0
    3ea0:	bl	0 <__assert_fail>
    3ea4:	movw	r0, #0
    3ea8:	movw	r1, #0
    3eac:	movw	r3, #0
    3eb0:	movw	r2, #889	; 0x379
    3eb4:	movt	r0, #0
    3eb8:	movt	r1, #0
    3ebc:	movt	r3, #0
    3ec0:	bl	0 <__assert_fail>
    3ec4:	movw	r0, #0
    3ec8:	movw	r1, #0
    3ecc:	movw	r3, #0
    3ed0:	movw	r2, #907	; 0x38b
    3ed4:	movt	r0, #0
    3ed8:	movt	r1, #0
    3edc:	movt	r3, #0
    3ee0:	bl	0 <__assert_fail>
    3ee4:	movw	r0, #0
    3ee8:	movw	r1, #0
    3eec:	movw	r3, #0
    3ef0:	movw	r2, #903	; 0x387
    3ef4:	movt	r0, #0
    3ef8:	movt	r1, #0
    3efc:	movt	r3, #0
    3f00:	bl	0 <__assert_fail>

00003f04 <gen_field_match>:
    3f04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3f08:	add	fp, sp, #28
    3f0c:	sub	sp, sp, #540	; 0x21c
    3f10:	mov	r9, r2
    3f14:	ldr	r2, [fp, #8]
    3f18:	mov	r5, r1
    3f1c:	movw	r1, #0
    3f20:	str	r3, [sp, #32]
    3f24:	mov	r4, r0
    3f28:	movt	r1, #0
    3f2c:	bl	20f8 <println>
    3f30:	movw	r1, #0
    3f34:	mov	r0, r4
    3f38:	movt	r1, #0
    3f3c:	bl	20f8 <println>
    3f40:	ldr	r0, [r4, #220]	; 0xdc
    3f44:	mov	r1, #0
    3f48:	mov	r2, #220	; 0xdc
    3f4c:	mov	r8, #0
    3f50:	add	r0, r0, #1
    3f54:	str	r0, [r4, #220]	; 0xdc
    3f58:	sub	r0, fp, #256	; 0x100
    3f5c:	bl	0 <memset>
    3f60:	ldr	r0, [r5, #12]
    3f64:	add	r1, sp, #108	; 0x6c
    3f68:	bl	0 <__flatcc_fb_copy_scope>
    3f6c:	ldrh	r0, [r9, #24]
    3f70:	ldrh	r1, [r5, #8]
    3f74:	mov	sl, #0
    3f78:	cmp	r0, #15
    3f7c:	str	r1, [sp, #88]	; 0x58
    3f80:	bhi	3f98 <gen_field_match+0x94>
    3f84:	mov	r1, #1
    3f88:	movw	r2, #33408	; 0x8280
    3f8c:	mov	sl, #0
    3f90:	tst	r2, r1, lsl r0
    3f94:	movne	sl, #1
    3f98:	sub	r5, r0, #7
    3f9c:	cmp	r5, #8
    3fa0:	bhi	4b64 <gen_field_match+0xc60>
    3fa4:	mov	r2, #0
    3fa8:	add	r6, pc, #68	; 0x44
    3fac:	mov	r0, #0
    3fb0:	mov	r1, #0
    3fb4:	mov	ip, #0
    3fb8:	mov	r3, #0
    3fbc:	mov	lr, #0
    3fc0:	mov	r7, #0
    3fc4:	str	r2, [sp, #44]	; 0x2c
    3fc8:	mov	r2, #0
    3fcc:	str	r0, [sp, #48]	; 0x30
    3fd0:	str	r2, [sp, #40]	; 0x28
    3fd4:	mov	r2, #0
    3fd8:	str	r2, [sp, #84]	; 0x54
    3fdc:	mov	r2, #0
    3fe0:	str	r2, [sp, #92]	; 0x5c
    3fe4:	mov	r2, #0
    3fe8:	str	r2, [sp, #28]
    3fec:	mov	r2, #0
    3ff0:	ldr	pc, [r6, r5, lsl #2]
    3ff4:	.word	0x000040ec
    3ff8:	.word	0x00004104
    3ffc:	.word	0x00004018
    4000:	.word	0x00004018
    4004:	.word	0x00004144
    4008:	.word	0x00004144
    400c:	.word	0x00004144
    4010:	.word	0x00004048
    4014:	.word	0x00004048
    4018:	mov	r0, #1
    401c:	str	r0, [sp, #44]	; 0x2c
    4020:	mov	r0, #0
    4024:	mov	lr, #0
    4028:	str	r0, [sp, #40]	; 0x28
    402c:	mov	r0, #0
    4030:	str	r0, [sp, #84]	; 0x54
    4034:	mov	r0, #0
    4038:	str	r0, [sp, #92]	; 0x5c
    403c:	mov	r0, #0
    4040:	str	r0, [sp, #28]
    4044:	b	40d8 <gen_field_match+0x1d4>
    4048:	ldr	r1, [r9, #16]
    404c:	sub	r2, fp, #256	; 0x100
    4050:	ldr	r0, [r1, #12]
    4054:	bl	0 <__flatcc_fb_scoped_symbol_name>
    4058:	ldr	r0, [r9, #16]
    405c:	ldr	r3, [sp, #32]
    4060:	ldrh	r1, [r0, #8]
    4064:	eor	r2, r1, #4
    4068:	cmp	r1, #3
    406c:	orr	r2, r3, r2
    4070:	clz	r2, r2
    4074:	lsr	r2, r2, #5
    4078:	str	r2, [sp, #28]
    407c:	clz	r2, r1
    4080:	lsr	r2, r2, #5
    4084:	str	r2, [sp, #84]	; 0x54
    4088:	sub	r2, r1, #1
    408c:	clz	r2, r2
    4090:	lsr	r2, r2, #5
    4094:	str	r2, [sp, #92]	; 0x5c
    4098:	bne	40c4 <gen_field_match+0x1c0>
    409c:	ldr	r0, [r0, #40]	; 0x28
    40a0:	mov	lr, #1
    40a4:	mov	r2, #0
    40a8:	mov	r7, #0
    40ac:	str	r0, [sp, #48]	; 0x30
    40b0:	mov	r0, #1
    40b4:	str	r0, [sp, #40]	; 0x28
    40b8:	mov	r0, #0
    40bc:	str	r0, [sp, #44]	; 0x2c
    40c0:	b	4144 <gen_field_match+0x240>
    40c4:	mov	r0, #0
    40c8:	mov	lr, #0
    40cc:	str	r0, [sp, #44]	; 0x2c
    40d0:	mov	r0, #0
    40d4:	str	r0, [sp, #40]	; 0x28
    40d8:	mov	r0, #0
    40dc:	mov	r2, #0
    40e0:	mov	r7, #0
    40e4:	str	r0, [sp, #48]	; 0x30
    40e8:	b	4144 <gen_field_match+0x240>
    40ec:	ldr	r3, [r9, #104]	; 0x68
    40f0:	ldrh	r1, [r9, #72]	; 0x48
    40f4:	cmp	r3, #0
    40f8:	and	ip, r1, #2048	; 0x800
    40fc:	and	r1, r1, #1024	; 0x400
    4100:	movwne	r3, #1
    4104:	ldr	r2, [r9, #16]
    4108:	mov	lr, #1
    410c:	mov	r8, r1
    4110:	mov	r7, r3
    4114:	str	r2, [sp, #48]	; 0x30
    4118:	mov	r2, #0
    411c:	str	r2, [sp, #44]	; 0x2c
    4120:	mov	r2, #0
    4124:	str	r2, [sp, #40]	; 0x28
    4128:	mov	r2, #0
    412c:	str	r2, [sp, #84]	; 0x54
    4130:	mov	r2, #0
    4134:	str	r2, [sp, #92]	; 0x5c
    4138:	mov	r2, #0
    413c:	str	r2, [sp, #28]
    4140:	mov	r2, ip
    4144:	orrs	r0, r2, r8
    4148:	str	r0, [sp, #60]	; 0x3c
    414c:	beq	41c0 <gen_field_match+0x2bc>
    4150:	cmp	sl, #0
    4154:	beq	4170 <gen_field_match+0x26c>
    4158:	ldr	r0, [sp, #48]	; 0x30
    415c:	mov	r3, #0
    4160:	mov	lr, #0
    4164:	mov	r7, #0
    4168:	cmp	r0, #4
    416c:	beq	41c4 <gen_field_match+0x2c0>
    4170:	movw	r0, #0
    4174:	movw	r1, #0
    4178:	movw	r4, #0
    417c:	movw	r3, #466	; 0x1d2
    4180:	movt	r0, #0
    4184:	movt	r1, #0
    4188:	movt	r4, #0
    418c:	ldr	r0, [r0]
    4190:	str	r1, [sp]
    4194:	movw	r1, #0
    4198:	mov	r2, r4
    419c:	movt	r1, #0
    41a0:	bl	0 <fprintf>
    41a4:	movw	r0, #0
    41a8:	movw	r3, #0
    41ac:	mov	r1, r4
    41b0:	movw	r2, #466	; 0x1d2
    41b4:	movt	r0, #0
    41b8:	movt	r3, #0
    41bc:	bl	0 <__assert_fail>
    41c0:	mov	r3, sl
    41c4:	ldr	r2, [sp, #32]
    41c8:	cmp	r3, #0
    41cc:	mov	r0, r3
    41d0:	movwne	r0, #1
    41d4:	cmp	r2, #0
    41d8:	mov	r1, r2
    41dc:	movwne	r1, #1
    41e0:	ands	r0, r1, r0
    41e4:	ldr	r1, [sp, #28]
    41e8:	movwne	r3, #0
    41ec:	str	r0, [sp, #16]
    41f0:	cmp	r3, #0
    41f4:	mov	r0, r3
    41f8:	movwne	r0, #1
    41fc:	cmp	r1, #0
    4200:	movwne	r1, #1
    4204:	ands	r0, r1, r0
    4208:	movwne	r3, #0
    420c:	cmp	r2, #0
    4210:	str	r0, [sp, #20]
    4214:	movwne	lr, #0
    4218:	cmp	r7, #0
    421c:	str	r3, [sp, #96]	; 0x60
    4220:	str	lr, [sp, #80]	; 0x50
    4224:	beq	4244 <gen_field_match+0x340>
    4228:	movw	r1, #0
    422c:	mov	r0, r4
    4230:	movt	r1, #0
    4234:	bl	20f8 <println>
    4238:	ldr	r0, [r4, #220]	; 0xdc
    423c:	add	r0, r0, #1
    4240:	str	r0, [r4, #220]	; 0xdc
    4244:	add	r0, r9, #48	; 0x30
    4248:	str	r9, [sp, #68]	; 0x44
    424c:	str	r0, [sp, #36]	; 0x24
    4250:	add	r0, r9, #88	; 0x58
    4254:	str	r0, [sp, #64]	; 0x40
    4258:	add	r0, r9, #96	; 0x60
    425c:	str	r0, [sp, #56]	; 0x38
    4260:	add	r0, r9, #80	; 0x50
    4264:	str	r0, [sp, #52]	; 0x34
    4268:	clz	r0, r8
    426c:	lsr	r0, r0, #5
    4270:	str	r0, [sp, #24]
    4274:	ldr	r0, [sp, #32]
    4278:	clz	r0, r0
    427c:	lsr	r0, r0, #5
    4280:	str	r0, [sp, #76]	; 0x4c
    4284:	movw	r0, #0
    4288:	movt	r0, #0
    428c:	str	r0, [sp, #100]	; 0x64
    4290:	str	r0, [sp, #72]	; 0x48
    4294:	b	4410 <gen_field_match+0x50c>
    4298:	ldr	r0, [sp, #84]	; 0x54
    429c:	cmp	r0, #0
    42a0:	beq	42b4 <gen_field_match+0x3b0>
    42a4:	movw	r1, #0
    42a8:	mov	r0, r4
    42ac:	movt	r1, #0
    42b0:	b	491c <gen_field_match+0xa18>
    42b4:	ldr	r0, [sp, #28]
    42b8:	cmp	r0, #0
    42bc:	beq	42f4 <gen_field_match+0x3f0>
    42c0:	ldr	r0, [sp, #56]	; 0x38
    42c4:	ldr	r3, [sp, #20]
    42c8:	ldr	r2, [r9, #112]	; 0x70
    42cc:	ldrd	r0, [r0]
    42d0:	cmp	r3, #0
    42d4:	beq	43bc <gen_field_match+0x4b8>
    42d8:	stm	sp, {r0, r1}
    42dc:	movw	r1, #0
    42e0:	sub	r0, fp, #256	; 0x100
    42e4:	str	r0, [sp, #8]
    42e8:	mov	r0, r4
    42ec:	movt	r1, #0
    42f0:	b	43fc <gen_field_match+0x4f8>
    42f4:	ldr	r0, [sp, #32]
    42f8:	cmp	r0, #0
    42fc:	beq	43d8 <gen_field_match+0x4d4>
    4300:	movw	r1, #0
    4304:	mov	r0, r4
    4308:	movt	r1, #0
    430c:	bl	20f8 <println>
    4310:	ldr	r0, [r4, #220]	; 0xdc
    4314:	movw	r1, #0
    4318:	sub	r2, fp, #256	; 0x100
    431c:	movt	r1, #0
    4320:	add	r0, r0, #2
    4324:	str	r0, [r4, #220]	; 0xdc
    4328:	mov	r0, r4
    432c:	bl	20f8 <println>
    4330:	ldr	r0, [r4, #208]	; 0xd0
    4334:	movw	r1, #0
    4338:	add	r3, sp, #108	; 0x6c
    433c:	movt	r1, #0
    4340:	ldr	r2, [r0, #160]	; 0xa0
    4344:	mov	r0, r4
    4348:	bl	20f8 <println>
    434c:	ldr	r0, [r4, #208]	; 0xd0
    4350:	movw	r1, #0
    4354:	movt	r1, #0
    4358:	ldr	r2, [r0, #160]	; 0xa0
    435c:	mov	r0, r4
    4360:	bl	20f8 <println>
    4364:	ldr	r0, [r4, #220]	; 0xdc
    4368:	cmp	r0, #0
    436c:	beq	4cac <gen_field_match+0xda8>
    4370:	subs	r1, r0, #1
    4374:	str	r1, [r4, #220]	; 0xdc
    4378:	beq	4cac <gen_field_match+0xda8>
    437c:	sub	r0, r0, #2
    4380:	ldr	r3, [sp, #16]
    4384:	str	r0, [r4, #220]	; 0xdc
    4388:	ldr	r0, [sp, #56]	; 0x38
    438c:	ldr	r2, [r9, #112]	; 0x70
    4390:	cmp	r3, #0
    4394:	ldrd	r0, [r0]
    4398:	beq	43e4 <gen_field_match+0x4e0>
    439c:	stm	sp, {r0, r1}
    43a0:	sub	r0, fp, #256	; 0x100
    43a4:	movw	r1, #0
    43a8:	str	r0, [sp, #8]
    43ac:	str	r0, [sp, #12]
    43b0:	mov	r0, r4
    43b4:	movt	r1, #0
    43b8:	b	43fc <gen_field_match+0x4f8>
    43bc:	stm	sp, {r0, r1}
    43c0:	movw	r1, #0
    43c4:	sub	r0, fp, #256	; 0x100
    43c8:	str	r0, [sp, #8]
    43cc:	mov	r0, r4
    43d0:	movt	r1, #0
    43d4:	b	43fc <gen_field_match+0x4f8>
    43d8:	cmp	sl, #0
    43dc:	bne	49e0 <gen_field_match+0xadc>
    43e0:	b	4ccc <gen_field_match+0xdc8>
    43e4:	stm	sp, {r0, r1}
    43e8:	movw	r1, #0
    43ec:	sub	r0, fp, #256	; 0x100
    43f0:	str	r0, [sp, #8]
    43f4:	mov	r0, r4
    43f8:	movt	r1, #0
    43fc:	mov	r3, #0
    4400:	bl	20f8 <println>
    4404:	cmp	sl, #0
    4408:	bne	49e0 <gen_field_match+0xadc>
    440c:	b	4a84 <gen_field_match+0xb80>
    4410:	cmp	r7, #2
    4414:	mov	r1, r7
    4418:	str	r7, [sp, #104]	; 0x68
    441c:	bne	44c0 <gen_field_match+0x5bc>
    4420:	ldr	r0, [r4, #220]	; 0xdc
    4424:	cmp	r0, #0
    4428:	beq	4b6c <gen_field_match+0xc68>
    442c:	movw	r1, #0
    4430:	sub	r0, r0, #1
    4434:	str	r0, [r4, #220]	; 0xdc
    4438:	mov	r0, r4
    443c:	movt	r1, #0
    4440:	bl	20f8 <println>
    4444:	ldr	r0, [r4, #220]	; 0xdc
    4448:	sub	r2, fp, #256	; 0x100
    444c:	add	r0, r0, #1
    4450:	str	r0, [r4, #220]	; 0xdc
    4454:	ldr	r1, [r9, #104]	; 0x68
    4458:	ldr	r0, [r1, #12]
    445c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    4460:	ldr	r0, [r9, #104]	; 0x68
    4464:	movw	r1, #0
    4468:	movt	r1, #0
    446c:	ldrh	r5, [r0, #8]
    4470:	mov	r0, r4
    4474:	bl	20f8 <println>
    4478:	ldr	r0, [sp, #92]	; 0x5c
    447c:	cmp	r5, #0
    4480:	mov	sl, #0
    4484:	movne	r0, #1
    4488:	str	r0, [sp, #92]	; 0x5c
    448c:	clz	r0, r0
    4490:	lsr	r6, r0, #5
    4494:	ldr	r0, [sp, #76]	; 0x4c
    4498:	and	r8, r6, r0
    449c:	ldr	r0, [sp, #84]	; 0x54
    44a0:	movweq	r0, #1
    44a4:	str	r0, [sp, #84]	; 0x54
    44a8:	mov	r0, #0
    44ac:	str	r0, [sp, #96]	; 0x60
    44b0:	mov	r0, #0
    44b4:	str	r0, [sp, #80]	; 0x50
    44b8:	mov	r5, #0
    44bc:	b	47b4 <gen_field_match+0x8b0>
    44c0:	ldr	r7, [sp, #80]	; 0x50
    44c4:	cmp	r7, #0
    44c8:	beq	4550 <gen_field_match+0x64c>
    44cc:	ldr	r0, [sp, #48]	; 0x30
    44d0:	sub	r2, r0, #1
    44d4:	cmp	r2, #10
    44d8:	bhi	4bec <gen_field_match+0xce8>
    44dc:	movw	r6, #0
    44e0:	add	r3, pc, #40	; 0x28
    44e4:	movw	r0, #0
    44e8:	movw	r1, #0
    44ec:	mov	r9, #1
    44f0:	movt	r6, #0
    44f4:	movt	r0, #0
    44f8:	movt	r1, #0
    44fc:	str	r6, [sp, #100]	; 0x64
    4500:	movw	r6, #0
    4504:	movt	r6, #0
    4508:	str	r6, [sp, #72]	; 0x48
    450c:	ldr	pc, [r3, r2, lsl #2]
    4510:	.word	0x0000453c
    4514:	.word	0x000045e8
    4518:	.word	0x00004578
    451c:	.word	0x00004558
    4520:	.word	0x000045f0
    4524:	.word	0x000045a0
    4528:	.word	0x000045b4
    452c:	.word	0x0000458c
    4530:	.word	0x000045d8
    4534:	.word	0x0000456c
    4538:	.word	0x000045c8
    453c:	movw	r0, #0
    4540:	movw	r1, #0
    4544:	movt	r0, #0
    4548:	movt	r1, #0
    454c:	b	45e8 <gen_field_match+0x6e4>
    4550:	mov	r9, #0
    4554:	b	45f0 <gen_field_match+0x6ec>
    4558:	movw	r0, #0
    455c:	movw	r1, #0
    4560:	movt	r0, #0
    4564:	movt	r1, #0
    4568:	b	45e8 <gen_field_match+0x6e4>
    456c:	movw	r1, #0
    4570:	movt	r1, #0
    4574:	b	45d0 <gen_field_match+0x6cc>
    4578:	movw	r0, #0
    457c:	movw	r1, #0
    4580:	movt	r0, #0
    4584:	movt	r1, #0
    4588:	b	45e8 <gen_field_match+0x6e4>
    458c:	movw	r0, #0
    4590:	movw	r1, #0
    4594:	movt	r0, #0
    4598:	movt	r1, #0
    459c:	b	45e8 <gen_field_match+0x6e4>
    45a0:	movw	r0, #0
    45a4:	movw	r1, #0
    45a8:	movt	r0, #0
    45ac:	movt	r1, #0
    45b0:	b	45e8 <gen_field_match+0x6e4>
    45b4:	movw	r0, #0
    45b8:	movw	r1, #0
    45bc:	movt	r0, #0
    45c0:	movt	r1, #0
    45c4:	b	45e8 <gen_field_match+0x6e4>
    45c8:	movw	r1, #0
    45cc:	movt	r1, #0
    45d0:	mov	r0, r1
    45d4:	b	45e8 <gen_field_match+0x6e4>
    45d8:	movw	r0, #0
    45dc:	movw	r1, #0
    45e0:	movt	r0, #0
    45e4:	movt	r1, #0
    45e8:	str	r0, [sp, #100]	; 0x64
    45ec:	str	r1, [sp, #72]	; 0x48
    45f0:	ldr	r1, [sp, #92]	; 0x5c
    45f4:	ldr	r2, [sp, #76]	; 0x4c
    45f8:	orr	r0, r1, r7
    45fc:	clz	r0, r0
    4600:	lsr	r0, r0, #5
    4604:	and	r8, r0, r2
    4608:	clz	r0, r1
    460c:	lsr	r6, r0, #5
    4610:	ldr	r0, [sp, #96]	; 0x60
    4614:	cmp	r0, #0
    4618:	beq	4638 <gen_field_match+0x734>
    461c:	cmp	r8, #0
    4620:	beq	4654 <gen_field_match+0x750>
    4624:	movw	r1, #0
    4628:	mov	r0, r4
    462c:	movt	r1, #0
    4630:	bl	20f8 <println>
    4634:	b	46a4 <gen_field_match+0x7a0>
    4638:	cmp	r9, #0
    463c:	ldr	r9, [sp, #68]	; 0x44
    4640:	mov	sl, #0
    4644:	bne	46e4 <gen_field_match+0x7e0>
    4648:	mov	r0, #0
    464c:	str	r0, [sp, #96]	; 0x60
    4650:	b	44b8 <gen_field_match+0x5b4>
    4654:	ldr	r0, [sp, #64]	; 0x40
    4658:	mov	r1, #0
    465c:	ldm	r0, {r5, r7}
    4660:	mvn	r0, #0
    4664:	orrs	r3, r5, r7
    4668:	mov	r2, r5
    466c:	movweq	r2, #1
    4670:	movne	r3, r7
    4674:	bl	0 <__aeabi_uldivmod>
    4678:	ldr	r2, [sp, #68]	; 0x44
    467c:	mov	r3, r7
    4680:	ldrsh	r2, [r2, #74]	; 0x4a
    4684:	str	r1, [sp, #12]
    4688:	movw	r1, #0
    468c:	str	r0, [sp, #8]
    4690:	mov	r0, r4
    4694:	movt	r1, #0
    4698:	str	r2, [sp]
    469c:	mov	r2, r5
    46a0:	bl	20f8 <println>
    46a4:	movw	r1, #0
    46a8:	mov	r0, r4
    46ac:	movt	r1, #0
    46b0:	bl	20f8 <println>
    46b4:	movw	r1, #0
    46b8:	mov	r0, r4
    46bc:	movt	r1, #0
    46c0:	bl	20f8 <println>
    46c4:	ldr	r0, [r4, #220]	; 0xdc
    46c8:	cmp	r9, #0
    46cc:	ldr	r9, [sp, #68]	; 0x44
    46d0:	mov	r5, #0
    46d4:	mov	sl, #1
    46d8:	add	r0, r0, #1
    46dc:	str	r0, [r4, #220]	; 0xdc
    46e0:	beq	478c <gen_field_match+0x888>
    46e4:	ldr	r2, [sp, #72]	; 0x48
    46e8:	movw	r1, #0
    46ec:	mov	r0, r4
    46f0:	movt	r1, #0
    46f4:	bl	20f8 <println>
    46f8:	movw	r1, #0
    46fc:	mov	r0, r4
    4700:	movt	r1, #0
    4704:	bl	20f8 <println>
    4708:	ldr	r0, [r4, #220]	; 0xdc
    470c:	add	r0, r0, #2
    4710:	str	r0, [r4, #220]	; 0xdc
    4714:	ldr	r0, [sp, #40]	; 0x28
    4718:	cmp	r0, #0
    471c:	beq	4734 <gen_field_match+0x830>
    4720:	movw	r1, #0
    4724:	mov	r0, r4
    4728:	sub	r2, fp, #256	; 0x100
    472c:	movt	r1, #0
    4730:	bl	20f8 <println>
    4734:	ldr	r0, [r4, #208]	; 0xd0
    4738:	movw	r1, #0
    473c:	add	r3, sp, #108	; 0x6c
    4740:	movt	r1, #0
    4744:	ldr	r2, [r0, #160]	; 0xa0
    4748:	mov	r0, r4
    474c:	bl	20f8 <println>
    4750:	ldr	r0, [r4, #208]	; 0xd0
    4754:	movw	r1, #0
    4758:	movt	r1, #0
    475c:	ldr	r2, [r0, #160]	; 0xa0
    4760:	mov	r0, r4
    4764:	bl	20f8 <println>
    4768:	ldr	r0, [r4, #220]	; 0xdc
    476c:	cmp	r0, #0
    4770:	beq	4b8c <gen_field_match+0xc88>
    4774:	subs	r1, r0, #1
    4778:	str	r1, [r4, #220]	; 0xdc
    477c:	beq	4b8c <gen_field_match+0xc88>
    4780:	sub	r0, r0, #2
    4784:	mov	r5, #1
    4788:	str	r0, [r4, #220]	; 0xdc
    478c:	ldr	r0, [sp, #96]	; 0x60
    4790:	clz	r0, r0
    4794:	lsr	r0, r0, #5
    4798:	orrs	r0, r0, r8
    479c:	bne	47b4 <gen_field_match+0x8b0>
    47a0:	movw	r1, #0
    47a4:	mov	r0, r4
    47a8:	movt	r1, #0
    47ac:	bl	20f8 <println>
    47b0:	mov	r8, #0
    47b4:	ldr	r0, [sp, #88]	; 0x58
    47b8:	cmp	r0, #1
    47bc:	bne	47d8 <gen_field_match+0x8d4>
    47c0:	ldr	r0, [sp, #52]	; 0x34
    47c4:	movw	r1, #0
    47c8:	movt	r1, #0
    47cc:	ldrd	r2, [r0]
    47d0:	mov	r0, r4
    47d4:	b	4804 <gen_field_match+0x900>
    47d8:	orrs	r0, sl, r6
    47dc:	bne	4808 <gen_field_match+0x904>
    47e0:	ldr	r0, [sp, #56]	; 0x38
    47e4:	ldrh	r7, [r9, #74]	; 0x4a
    47e8:	ldrd	r2, [r0]
    47ec:	ldr	r0, [sp, #64]	; 0x40
    47f0:	ldrd	r0, [r0]
    47f4:	stm	sp, {r0, r1, r7}
    47f8:	movw	r1, #0
    47fc:	mov	r0, r4
    4800:	movt	r1, #0
    4804:	bl	20f8 <println>
    4808:	cmp	r5, #0
    480c:	beq	48e0 <gen_field_match+0x9dc>
    4810:	ldr	r5, [sp, #100]	; 0x64
    4814:	movw	r1, #0
    4818:	mov	r0, r4
    481c:	movt	r1, #0
    4820:	mov	r2, r5
    4824:	bl	20f8 <println>
    4828:	movw	r1, #0
    482c:	mov	r0, r4
    4830:	movt	r1, #0
    4834:	bl	20f8 <println>
    4838:	ldr	r0, [r4, #220]	; 0xdc
    483c:	movw	r1, #0
    4840:	mov	r2, r5
    4844:	movt	r1, #0
    4848:	add	r0, r0, #1
    484c:	str	r0, [r4, #220]	; 0xdc
    4850:	mov	r0, r4
    4854:	bl	20f8 <println>
    4858:	movw	r1, #0
    485c:	mov	r0, r4
    4860:	movt	r1, #0
    4864:	bl	20f8 <println>
    4868:	ldr	r0, [r4, #220]	; 0xdc
    486c:	cmp	r0, #0
    4870:	beq	4bac <gen_field_match+0xca8>
    4874:	movw	r1, #0
    4878:	sub	r0, r0, #1
    487c:	str	r0, [r4, #220]	; 0xdc
    4880:	mov	r0, r4
    4884:	movt	r1, #0
    4888:	bl	20f8 <println>
    488c:	ldr	r0, [sp, #88]	; 0x58
    4890:	sub	r0, r0, #1
    4894:	clz	r0, r0
    4898:	lsr	r0, r0, #5
    489c:	orr	r5, r0, sl
    48a0:	ldr	r0, [sp, #60]	; 0x3c
    48a4:	cmp	r0, #0
    48a8:	cmpeq	r5, #0
    48ac:	bne	49b8 <gen_field_match+0xab4>
    48b0:	ldrh	r0, [r9, #56]	; 0x38
    48b4:	sub	r1, r0, #5
    48b8:	cmp	r1, #2
    48bc:	bcc	4950 <gen_field_match+0xa4c>
    48c0:	cmp	r0, #3
    48c4:	beq	4968 <gen_field_match+0xa64>
    48c8:	cmp	r0, #4
    48cc:	bne	4c5c <gen_field_match+0xd58>
    48d0:	ldr	r0, [sp, #36]	; 0x24
    48d4:	movw	r1, #0
    48d8:	movt	r1, #0
    48dc:	b	495c <gen_field_match+0xa58>
    48e0:	cmp	r6, #0
    48e4:	beq	4910 <gen_field_match+0xa0c>
    48e8:	ldr	r0, [sp, #44]	; 0x2c
    48ec:	cmp	r0, #0
    48f0:	beq	4930 <gen_field_match+0xa2c>
    48f4:	movw	r1, #0
    48f8:	mov	r0, r4
    48fc:	movt	r1, #0
    4900:	bl	20f8 <println>
    4904:	cmp	sl, #0
    4908:	bne	49e0 <gen_field_match+0xadc>
    490c:	b	4a84 <gen_field_match+0xb80>
    4910:	movw	r1, #0
    4914:	mov	r0, r4
    4918:	movt	r1, #0
    491c:	sub	r2, fp, #256	; 0x100
    4920:	bl	20f8 <println>
    4924:	cmp	sl, #0
    4928:	bne	49e0 <gen_field_match+0xadc>
    492c:	b	4a84 <gen_field_match+0xb80>
    4930:	ldr	r0, [sp, #60]	; 0x3c
    4934:	cmp	r0, #0
    4938:	beq	4298 <gen_field_match+0x394>
    493c:	ldr	r2, [sp, #24]
    4940:	movw	r1, #0
    4944:	mov	r0, r4
    4948:	movt	r1, #0
    494c:	b	4920 <gen_field_match+0xa1c>
    4950:	ldr	r0, [sp, #36]	; 0x24
    4954:	movw	r1, #0
    4958:	movt	r1, #0
    495c:	ldrd	r2, [r0]
    4960:	mov	r0, r4
    4964:	b	4980 <gen_field_match+0xa7c>
    4968:	ldr	r0, [sp, #36]	; 0x24
    496c:	movw	r1, #0
    4970:	movt	r1, #0
    4974:	vldr	d16, [r0]
    4978:	mov	r0, r4
    497c:	vmov	r2, r3, d16
    4980:	bl	20f8 <println>
    4984:	ldr	r0, [r4, #220]	; 0xdc
    4988:	add	r0, r0, #1
    498c:	str	r0, [r4, #220]	; 0xdc
    4990:	ldr	r0, [sp, #56]	; 0x38
    4994:	ldrsh	r7, [r9, #74]	; 0x4a
    4998:	ldrd	r2, [r0]
    499c:	ldr	r0, [sp, #64]	; 0x40
    49a0:	ldrd	r0, [r0]
    49a4:	stm	sp, {r0, r1, r7}
    49a8:	movw	r1, #0
    49ac:	mov	r0, r4
    49b0:	movt	r1, #0
    49b4:	bl	20f8 <println>
    49b8:	ldr	r3, [sp, #100]	; 0x64
    49bc:	movw	r1, #0
    49c0:	mov	r0, r4
    49c4:	mov	r2, r4
    49c8:	movt	r1, #0
    49cc:	bl	20f8 <println>
    49d0:	cmp	r5, #0
    49d4:	beq	4a54 <gen_field_match+0xb50>
    49d8:	cmp	sl, #0
    49dc:	beq	4a84 <gen_field_match+0xb80>
    49e0:	cmp	r8, #0
    49e4:	beq	4a08 <gen_field_match+0xb04>
    49e8:	movw	r1, #0
    49ec:	mov	r0, r4
    49f0:	movt	r1, #0
    49f4:	bl	20f8 <println>
    49f8:	movw	r1, #0
    49fc:	mov	r0, r4
    4a00:	movt	r1, #0
    4a04:	bl	20f8 <println>
    4a08:	movw	r1, #0
    4a0c:	mov	r0, r4
    4a10:	movt	r1, #0
    4a14:	bl	20f8 <println>
    4a18:	ldr	r0, [r4, #220]	; 0xdc
    4a1c:	cmp	r0, #0
    4a20:	beq	4bcc <gen_field_match+0xcc8>
    4a24:	movw	r1, #0
    4a28:	sub	r0, r0, #1
    4a2c:	str	r0, [r4, #220]	; 0xdc
    4a30:	mov	r0, r4
    4a34:	movt	r1, #0
    4a38:	bl	20f8 <println>
    4a3c:	mov	r0, r4
    4a40:	cmp	r8, #0
    4a44:	beq	4a78 <gen_field_match+0xb74>
    4a48:	movw	r1, #0
    4a4c:	movt	r1, #0
    4a50:	b	4a80 <gen_field_match+0xb7c>
    4a54:	ldr	r0, [r4, #220]	; 0xdc
    4a58:	cmp	r0, #0
    4a5c:	beq	4c3c <gen_field_match+0xd38>
    4a60:	movw	r1, #0
    4a64:	sub	r0, r0, #1
    4a68:	str	r0, [r4, #220]	; 0xdc
    4a6c:	mov	r0, r4
    4a70:	movt	r1, #0
    4a74:	b	4a80 <gen_field_match+0xb7c>
    4a78:	movw	r1, #0
    4a7c:	movt	r1, #0
    4a80:	bl	20f8 <println>
    4a84:	ldr	r6, [sp, #104]	; 0x68
    4a88:	mov	r7, #2
    4a8c:	cmp	r6, #1
    4a90:	beq	4410 <gen_field_match+0x50c>
    4a94:	ldr	r5, [sp, #96]	; 0x60
    4a98:	cmp	r6, #2
    4a9c:	bne	4ae4 <gen_field_match+0xbe0>
    4aa0:	movw	r1, #0
    4aa4:	mov	r0, r4
    4aa8:	movt	r1, #0
    4aac:	bl	20f8 <println>
    4ab0:	movw	r1, #0
    4ab4:	mov	r0, r4
    4ab8:	movt	r1, #0
    4abc:	bl	20f8 <println>
    4ac0:	ldr	r0, [r4, #220]	; 0xdc
    4ac4:	cmp	r0, #0
    4ac8:	beq	4d3c <gen_field_match+0xe38>
    4acc:	movw	r1, #0
    4ad0:	sub	r0, r0, #1
    4ad4:	str	r0, [r4, #220]	; 0xdc
    4ad8:	movt	r1, #0
    4adc:	mov	r0, r4
    4ae0:	bl	20f8 <println>
    4ae4:	ldr	r0, [sp, #44]	; 0x2c
    4ae8:	ldr	r1, [sp, #60]	; 0x3c
    4aec:	orr	r0, r1, r0
    4af0:	ldr	r1, [sp, #84]	; 0x54
    4af4:	orr	r0, r0, r6
    4af8:	orr	r0, r0, r5
    4afc:	orrs	r0, r0, r1
    4b00:	beq	4b2c <gen_field_match+0xc28>
    4b04:	ldr	r0, [sp, #56]	; 0x38
    4b08:	movw	r1, #0
    4b0c:	movt	r1, #0
    4b10:	ldrd	r2, [r0]
    4b14:	mov	r0, r4
    4b18:	bl	20f8 <println>
    4b1c:	movw	r1, #0
    4b20:	mov	r0, r4
    4b24:	movt	r1, #0
    4b28:	bl	20f8 <println>
    4b2c:	ldr	r0, [r4, #220]	; 0xdc
    4b30:	cmp	r0, #0
    4b34:	beq	4d1c <gen_field_match+0xe18>
    4b38:	movw	r1, #0
    4b3c:	sub	r0, r0, #1
    4b40:	str	r0, [r4, #220]	; 0xdc
    4b44:	movt	r1, #0
    4b48:	mov	r0, r4
    4b4c:	bl	20f8 <println>
    4b50:	ldr	r0, [r4, #220]	; 0xdc
    4b54:	add	r0, r0, #1
    4b58:	str	r0, [r4, #220]	; 0xdc
    4b5c:	sub	sp, fp, #28
    4b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4b64:	mov	r0, #0
    4b68:	b	401c <gen_field_match+0x118>
    4b6c:	movw	r0, #0
    4b70:	movw	r1, #0
    4b74:	movw	r3, #0
    4b78:	movw	r2, #490	; 0x1ea
    4b7c:	movt	r0, #0
    4b80:	movt	r1, #0
    4b84:	movt	r3, #0
    4b88:	bl	0 <__assert_fail>
    4b8c:	movw	r0, #0
    4b90:	movw	r1, #0
    4b94:	movw	r3, #0
    4b98:	movw	r2, #539	; 0x21b
    4b9c:	movt	r0, #0
    4ba0:	movt	r1, #0
    4ba4:	movt	r3, #0
    4ba8:	bl	0 <__assert_fail>
    4bac:	movw	r0, #0
    4bb0:	movw	r1, #0
    4bb4:	movw	r3, #0
    4bb8:	movw	r2, #559	; 0x22f
    4bbc:	movt	r0, #0
    4bc0:	movt	r1, #0
    4bc4:	movt	r3, #0
    4bc8:	bl	0 <__assert_fail>
    4bcc:	movw	r0, #0
    4bd0:	movw	r1, #0
    4bd4:	movw	r3, #0
    4bd8:	movw	r2, #647	; 0x287
    4bdc:	movt	r0, #0
    4be0:	movt	r1, #0
    4be4:	movt	r3, #0
    4be8:	bl	0 <__assert_fail>
    4bec:	movw	r0, #0
    4bf0:	movw	r1, #0
    4bf4:	movw	r4, #0
    4bf8:	mov	r3, #96	; 0x60
    4bfc:	movt	r0, #0
    4c00:	movt	r1, #0
    4c04:	movt	r4, #0
    4c08:	ldr	r0, [r0]
    4c0c:	str	r1, [sp]
    4c10:	movw	r1, #0
    4c14:	mov	r2, r4
    4c18:	movt	r1, #0
    4c1c:	bl	0 <fprintf>
    4c20:	movw	r0, #0
    4c24:	movw	r3, #0
    4c28:	mov	r1, r4
    4c2c:	mov	r2, #96	; 0x60
    4c30:	movt	r0, #0
    4c34:	movt	r3, #0
    4c38:	bl	0 <__assert_fail>
    4c3c:	movw	r0, #0
    4c40:	movw	r1, #0
    4c44:	movw	r3, #0
    4c48:	movw	r2, #602	; 0x25a
    4c4c:	movt	r0, #0
    4c50:	movt	r1, #0
    4c54:	movt	r3, #0
    4c58:	bl	0 <__assert_fail>
    4c5c:	movw	r0, #0
    4c60:	movw	r1, #0
    4c64:	movw	r4, #0
    4c68:	movw	r3, #590	; 0x24e
    4c6c:	movt	r0, #0
    4c70:	movt	r1, #0
    4c74:	movt	r4, #0
    4c78:	ldr	r0, [r0]
    4c7c:	str	r1, [sp]
    4c80:	movw	r1, #0
    4c84:	mov	r2, r4
    4c88:	movt	r1, #0
    4c8c:	bl	0 <fprintf>
    4c90:	movw	r0, #0
    4c94:	movw	r3, #0
    4c98:	mov	r1, r4
    4c9c:	movw	r2, #590	; 0x24e
    4ca0:	movt	r0, #0
    4ca4:	movt	r3, #0
    4ca8:	bl	0 <__assert_fail>
    4cac:	movw	r0, #0
    4cb0:	movw	r1, #0
    4cb4:	movw	r3, #0
    4cb8:	movw	r2, #627	; 0x273
    4cbc:	movt	r0, #0
    4cc0:	movt	r1, #0
    4cc4:	movt	r3, #0
    4cc8:	bl	0 <__assert_fail>
    4ccc:	movw	r0, #0
    4cd0:	movw	r1, #0
    4cd4:	movw	r4, #0
    4cd8:	mov	r3, #636	; 0x27c
    4cdc:	movt	r0, #0
    4ce0:	movt	r1, #0
    4ce4:	movt	r4, #0
    4ce8:	ldr	r0, [r0]
    4cec:	str	r1, [sp]
    4cf0:	movw	r1, #0
    4cf4:	mov	r2, r4
    4cf8:	movt	r1, #0
    4cfc:	bl	0 <fprintf>
    4d00:	movw	r0, #0
    4d04:	movw	r3, #0
    4d08:	mov	r1, r4
    4d0c:	mov	r2, #636	; 0x27c
    4d10:	movt	r0, #0
    4d14:	movt	r3, #0
    4d18:	bl	0 <__assert_fail>
    4d1c:	movw	r0, #0
    4d20:	movw	r1, #0
    4d24:	movw	r3, #0
    4d28:	movw	r2, #675	; 0x2a3
    4d2c:	movt	r0, #0
    4d30:	movt	r1, #0
    4d34:	movt	r3, #0
    4d38:	bl	0 <__assert_fail>
    4d3c:	movw	r0, #0
    4d40:	movw	r1, #0
    4d44:	movw	r3, #0
    4d48:	movw	r2, #661	; 0x295
    4d4c:	movt	r0, #0
    4d50:	movt	r1, #0
    4d54:	movt	r3, #0
    4d58:	bl	0 <__assert_fail>

00004d5c <gen_field_unmatched>:
    4d5c:	movw	r1, #0
    4d60:	movt	r1, #0
    4d64:	b	20f8 <println>

00004d68 <gen_scope_match>:
    4d68:	push	{r4, r5, r6, sl, fp, lr}
    4d6c:	add	fp, sp, #16
    4d70:	sub	sp, sp, #224	; 0xe0
    4d74:	mov	r5, r2
    4d78:	ldr	r2, [fp, #8]
    4d7c:	movw	r1, #0
    4d80:	mov	r4, r0
    4d84:	movt	r1, #0
    4d88:	bl	20f8 <println>
    4d8c:	movw	r1, #0
    4d90:	mov	r0, r4
    4d94:	movt	r1, #0
    4d98:	bl	20f8 <println>
    4d9c:	ldr	r0, [r4, #220]	; 0xdc
    4da0:	add	r0, r0, #1
    4da4:	str	r0, [r4, #220]	; 0xdc
    4da8:	ldrh	r0, [r5, #8]
    4dac:	sub	r0, r0, #3
    4db0:	uxth	r0, r0
    4db4:	cmp	r0, #2
    4db8:	bcs	4e2c <gen_scope_match+0xc4>
    4dbc:	mov	r6, sp
    4dc0:	mov	r1, #0
    4dc4:	mov	r2, #220	; 0xdc
    4dc8:	mov	r0, r6
    4dcc:	bl	0 <memset>
    4dd0:	ldr	r0, [r5, #12]
    4dd4:	mov	r1, r5
    4dd8:	mov	r2, r6
    4ddc:	bl	0 <__flatcc_fb_scoped_symbol_name>
    4de0:	movw	r1, #0
    4de4:	mov	r0, r4
    4de8:	mov	r2, r6
    4dec:	movt	r1, #0
    4df0:	bl	20f8 <println>
    4df4:	ldr	r0, [r4, #220]	; 0xdc
    4df8:	cmp	r0, #0
    4dfc:	beq	4e4c <gen_scope_match+0xe4>
    4e00:	movw	r1, #0
    4e04:	sub	r0, r0, #1
    4e08:	str	r0, [r4, #220]	; 0xdc
    4e0c:	movt	r1, #0
    4e10:	mov	r0, r4
    4e14:	bl	20f8 <println>
    4e18:	ldr	r0, [r4, #220]	; 0xdc
    4e1c:	add	r0, r0, #1
    4e20:	str	r0, [r4, #220]	; 0xdc
    4e24:	sub	sp, fp, #16
    4e28:	pop	{r4, r5, r6, sl, fp, pc}
    4e2c:	movw	r0, #0
    4e30:	movw	r1, #0
    4e34:	movw	r3, #0
    4e38:	movw	r2, #729	; 0x2d9
    4e3c:	movt	r0, #0
    4e40:	movt	r1, #0
    4e44:	movt	r3, #0
    4e48:	bl	0 <__assert_fail>
    4e4c:	movw	r0, #0
    4e50:	movw	r1, #0
    4e54:	movw	r3, #0
    4e58:	movw	r2, #742	; 0x2e6
    4e5c:	movt	r0, #0
    4e60:	movt	r1, #0
    4e64:	movt	r3, #0
    4e68:	bl	0 <__assert_fail>

00004e6c <gen_scope_unmatched>:
    4e6c:	movw	r1, #0
    4e70:	movt	r1, #0
    4e74:	b	20f8 <println>

00004e78 <count_visible_enum_symbol>:
    4e78:	push	{r4, sl, fp, lr}
    4e7c:	add	fp, sp, #8
    4e80:	mov	r4, r0
    4e84:	ldrh	r0, [r1, #8]
    4e88:	sub	r0, r0, #3
    4e8c:	cmp	r0, #1
    4e90:	pophi	{r4, sl, fp, pc}
    4e94:	ldr	r0, [r4, #4]
    4e98:	ldr	r1, [r1, #16]
    4e9c:	add	r0, r0, #172	; 0xac
    4ea0:	bl	0 <ptr_set_find_item>
    4ea4:	cmp	r0, #0
    4ea8:	ldrne	r0, [r4]
    4eac:	addne	r0, r0, #1
    4eb0:	strne	r0, [r4]
    4eb4:	pop	{r4, sl, fp, pc}

00004eb8 <install_visible_enum_symbol>:
    4eb8:	push	{r4, r5, fp, lr}
    4ebc:	add	fp, sp, #8
    4ec0:	mov	r4, r0
    4ec4:	ldrh	r0, [r1, #8]
    4ec8:	sub	r0, r0, #3
    4ecc:	cmp	r0, #1
    4ed0:	bhi	4f10 <install_visible_enum_symbol+0x58>
    4ed4:	ldr	r0, [r4, #4]
    4ed8:	mov	r5, r1
    4edc:	ldr	r1, [r1, #16]
    4ee0:	add	r0, r0, #172	; 0xac
    4ee4:	bl	0 <ptr_set_find_item>
    4ee8:	cmp	r0, #0
    4eec:	popeq	{r4, r5, fp, pc}
    4ef0:	ldr	r1, [r5, #4]
    4ef4:	ldr	r0, [r4, #8]
    4ef8:	ldr	r2, [r1]
    4efc:	str	r2, [r0]
    4f00:	ldr	r1, [r1, #4]
    4f04:	stmib	r0, {r1, r5}
    4f08:	add	r0, r0, #16
    4f0c:	str	r0, [r4, #8]
    4f10:	pop	{r4, r5, fp, pc}

00004f14 <clear_catalog>:
    4f14:	push	{r4, sl, fp, lr}
    4f18:	add	fp, sp, #8
    4f1c:	mov	r4, r0
    4f20:	ldr	r0, [r0, #16]
    4f24:	cmp	r0, #0
    4f28:	beq	4f30 <clear_catalog+0x1c>
    4f2c:	bl	0 <free>
    4f30:	ldr	r0, [r4, #20]
    4f34:	cmp	r0, #0
    4f38:	beq	4f40 <clear_catalog+0x2c>
    4f3c:	bl	0 <free>
    4f40:	ldr	r0, [r4, #24]
    4f44:	cmp	r0, #0
    4f48:	beq	4f50 <clear_catalog+0x3c>
    4f4c:	bl	0 <free>
    4f50:	vmov.i32	q8, #0	; 0x00000000
    4f54:	mov	r0, #28
    4f58:	add	r1, r4, #16
    4f5c:	vst1.32	{d16-d17}, [r4], r0
    4f60:	vst1.32	{d16-d17}, [r4]
    4f64:	vst1.32	{d16-d17}, [r1]
    4f68:	pop	{r4, sl, fp, pc}

00004f6c <count_symbols>:
    4f6c:	mov	r2, r0
    4f70:	add	r0, r1, #4
    4f74:	movw	r1, #0
    4f78:	movt	r1, #0
    4f7c:	b	0 <fb_symbol_table_visit>

00004f80 <install_symbols>:
    4f80:	mov	r2, r0
    4f84:	add	r0, r1, #4
    4f88:	movw	r1, #0
    4f8c:	movt	r1, #0
    4f90:	b	0 <fb_symbol_table_visit>

00004f94 <count_symbol>:
    4f94:	push	{r4, r5, fp, lr}
    4f98:	add	fp, sp, #8
    4f9c:	mov	r4, r0
    4fa0:	ldrh	r0, [r1, #8]
    4fa4:	cmp	r0, #4
    4fa8:	bhi	504c <count_symbol+0xb8>
    4fac:	ldr	r0, [r4, #40]	; 0x28
    4fb0:	mov	r5, r1
    4fb4:	ldr	r1, [r1, #16]
    4fb8:	add	r0, r0, #172	; 0xac
    4fbc:	bl	0 <ptr_set_find_item>
    4fc0:	cmp	r0, #0
    4fc4:	popeq	{r4, r5, fp, pc}
    4fc8:	ldr	r1, [r4]
    4fcc:	mov	r0, #1
    4fd0:	cmp	r1, #0
    4fd4:	beq	5010 <count_symbol+0x7c>
    4fd8:	ldr	r1, [r5, #12]
    4fdc:	ldr	r1, [r1]
    4fe0:	cmp	r1, #0
    4fe4:	beq	5010 <count_symbol+0x7c>
    4fe8:	mov	r0, #0
    4fec:	ldr	r2, [r1]
    4ff0:	ldr	r1, [r1, #4]
    4ff4:	ldr	r1, [r1, #4]
    4ff8:	cmp	r2, #0
    4ffc:	add	r0, r0, r1
    5000:	mov	r1, r2
    5004:	add	r0, r0, #1
    5008:	bne	4fec <count_symbol+0x58>
    500c:	add	r0, r0, #1
    5010:	ldr	r1, [r5, #4]
    5014:	ldr	r1, [r1, #4]
    5018:	add	r0, r0, r1
    501c:	ldr	r1, [r4, #12]
    5020:	add	r0, r0, r1
    5024:	str	r0, [r4, #12]
    5028:	ldrh	r0, [r5, #8]
    502c:	sub	r1, r0, #3
    5030:	cmp	r1, #2
    5034:	bcc	5050 <count_symbol+0xbc>
    5038:	cmp	r0, #1
    503c:	ldrls	r0, [r4, #4]
    5040:	addls	r0, r0, #1
    5044:	strls	r0, [r4, #4]
    5048:	popls	{r4, r5, fp, pc}
    504c:	pop	{r4, r5, fp, pc}
    5050:	ldr	r0, [r4, #8]
    5054:	add	r0, r0, #1
    5058:	str	r0, [r4, #8]
    505c:	pop	{r4, r5, fp, pc}

00005060 <install_symbol>:
    5060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5064:	add	fp, sp, #28
    5068:	sub	sp, sp, #4
    506c:	mov	r9, r0
    5070:	ldrh	r0, [r1, #8]
    5074:	cmp	r0, #4
    5078:	bhi	515c <install_symbol+0xfc>
    507c:	ldr	r0, [r9, #40]	; 0x28
    5080:	mov	sl, r1
    5084:	ldr	r1, [r1, #16]
    5088:	add	r0, r0, #172	; 0xac
    508c:	bl	0 <ptr_set_find_item>
    5090:	cmp	r0, #0
    5094:	beq	515c <install_symbol+0xfc>
    5098:	ldr	r0, [r9]
    509c:	ldr	r8, [r9, #36]	; 0x24
    50a0:	cmp	r0, #0
    50a4:	mov	r6, r8
    50a8:	beq	50f0 <install_symbol+0x90>
    50ac:	ldr	r0, [sl, #12]
    50b0:	mov	r6, r8
    50b4:	ldr	r4, [r0]
    50b8:	cmp	r4, #0
    50bc:	beq	50f0 <install_symbol+0x90>
    50c0:	mov	r5, #46	; 0x2e
    50c4:	mov	r6, r8
    50c8:	ldr	r0, [r4, #4]
    50cc:	ldm	r0, {r1, r7}
    50d0:	mov	r0, r6
    50d4:	mov	r2, r7
    50d8:	bl	0 <memcpy>
    50dc:	strb	r5, [r6, r7]!
    50e0:	ldr	r4, [r4]
    50e4:	add	r6, r6, #1
    50e8:	cmp	r4, #0
    50ec:	bne	50c8 <install_symbol+0x68>
    50f0:	ldr	r0, [sl, #4]
    50f4:	ldm	r0, {r1, r7}
    50f8:	mov	r0, r6
    50fc:	mov	r2, r7
    5100:	bl	0 <memcpy>
    5104:	mov	r0, #0
    5108:	strb	r0, [r6, r7]!
    510c:	add	r0, r6, #1
    5110:	str	r0, [r9, #36]	; 0x24
    5114:	ldrh	r0, [sl, #8]
    5118:	sub	r1, r0, #3
    511c:	cmp	r1, #2
    5120:	bcc	5148 <install_symbol+0xe8>
    5124:	cmp	r0, #1
    5128:	bhi	515c <install_symbol+0xfc>
    512c:	ldr	r0, [r9, #28]
    5130:	str	sl, [r0]
    5134:	str	r8, [r0, #4]
    5138:	add	r0, r0, #8
    513c:	str	r0, [r9, #28]
    5140:	sub	sp, fp, #28
    5144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5148:	ldr	r0, [r9, #32]
    514c:	str	sl, [r0]
    5150:	str	r8, [r0, #4]
    5154:	add	r0, r0, #8
    5158:	str	r0, [r9, #32]
    515c:	sub	sp, fp, #28
    5160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005164 <compare_entries>:
    5164:	ldr	r1, [r1, #4]
    5168:	ldr	r0, [r0, #4]
    516c:	b	0 <strcmp>
