
../compcert-repos/prog2/CMakeFiles/6.Challenge.dir/Aula06_Challenge/challenge.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #56	; 0x38
   c:	movw	r0, #0
  10:	str	r0, [fp, #-4]
  14:	movw	r0, #0
  18:	movt	r0, #0
  1c:	sub	r1, fp, #8
  20:	bl	0 <__isoc99_scanf>
  24:	ldr	r1, [fp, #-8]
  28:	cmp	r1, #0
  2c:	str	r0, [sp, #24]
  30:	bne	3c <main+0x3c>
  34:	movw	r0, #0
  38:	bl	0 <exit>
  3c:	ldr	r0, [fp, #-8]
  40:	lsl	r1, r0, #1
  44:	lsl	r0, r0, #3
  48:	str	r1, [sp, #20]
  4c:	bl	0 <malloc>
  50:	str	r0, [fp, #-24]	; 0xffffffe8
  54:	movw	r0, #0
  58:	str	r0, [fp, #-16]
  5c:	ldr	r1, [fp, #-8]
  60:	sub	r1, r1, #1
  64:	str	r1, [fp, #-20]	; 0xffffffec
  68:	str	r0, [fp, #-12]
  6c:	ldr	r0, [fp, #-12]
  70:	ldr	r1, [fp, #-8]
  74:	cmp	r0, r1
  78:	bge	a0 <main+0xa0>
  7c:	ldr	r0, [fp, #-12]
  80:	add	r1, r0, #1
  84:	ldr	r2, [fp, #-24]	; 0xffffffe8
  88:	add	r0, r2, r0, lsl #2
  8c:	str	r1, [r0]
  90:	ldr	r0, [fp, #-12]
  94:	add	r0, r0, #1
  98:	str	r0, [fp, #-12]
  9c:	b	6c <main+0x6c>
  a0:	ldr	r0, [fp, #-8]
  a4:	str	r0, [sp, #28]
  a8:	movw	r0, #0
  ac:	movt	r0, #0
  b0:	bl	0 <printf>
  b4:	str	r0, [sp, #16]
  b8:	ldr	r0, [sp, #28]
  bc:	cmp	r0, #2
  c0:	ble	130 <main+0x130>
  c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
  c8:	ldr	r1, [fp, #-16]
  cc:	ldr	r1, [r0, r1, lsl #2]
  d0:	movw	r0, #0
  d4:	movt	r0, #0
  d8:	bl	0 <printf>
  dc:	ldr	r1, [fp, #-16]
  e0:	add	r1, r1, #1
  e4:	str	r1, [fp, #-16]
  e8:	ldr	r1, [fp, #-20]	; 0xffffffec
  ec:	add	r1, r1, #1
  f0:	str	r1, [fp, #-20]	; 0xffffffec
  f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
  f8:	ldr	lr, [fp, #-16]
  fc:	ldr	lr, [r1, lr, lsl #2]
 100:	ldr	r2, [fp, #-20]	; 0xffffffec
 104:	add	r1, r1, r2, lsl #2
 108:	str	lr, [r1]
 10c:	ldr	r1, [fp, #-16]
 110:	add	r1, r1, #1
 114:	str	r1, [fp, #-16]
 118:	ldr	r1, [sp, #28]
 11c:	mvn	r2, #0
 120:	add	r1, r1, r2
 124:	str	r1, [sp, #28]
 128:	str	r0, [sp, #12]
 12c:	b	b8 <main+0xb8>
 130:	ldr	r0, [fp, #-24]	; 0xffffffe8
 134:	ldr	r1, [fp, #-16]
 138:	add	r2, r1, #1
 13c:	str	r2, [fp, #-16]
 140:	ldr	r1, [r0, r1, lsl #2]
 144:	movw	r0, #0
 148:	movt	r0, #0
 14c:	bl	0 <printf>
 150:	movw	r1, #0
 154:	movt	r1, #0
 158:	str	r0, [sp, #8]
 15c:	mov	r0, r1
 160:	bl	0 <printf>
 164:	ldr	r1, [fp, #-24]	; 0xffffffe8
 168:	ldr	r2, [fp, #-16]
 16c:	add	r1, r1, r2, lsl #2
 170:	ldr	r1, [r1]
 174:	movw	r2, #0
 178:	movt	r2, #0
 17c:	str	r0, [sp, #4]
 180:	mov	r0, r2
 184:	bl	0 <printf>
 188:	str	r0, [sp]
 18c:	b	14 <main+0x14>
