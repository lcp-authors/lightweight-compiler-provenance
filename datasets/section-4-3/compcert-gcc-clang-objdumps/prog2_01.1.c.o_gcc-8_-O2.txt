
../compcert-repos/prog2/CMakeFiles/1.1.1.dir/Aula01_Ficheiros_e_Formatos_de_dados/01.1.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <in_array>:
   0:	cmp	r2, #0
   4:	blt	34 <in_array+0x34>
   8:	ldr	r3, [r1]
   c:	cmp	r0, r3
  10:	beq	3c <in_array+0x3c>
  14:	mov	r3, #0
  18:	b	28 <in_array+0x28>
  1c:	ldr	ip, [r1, #4]!
  20:	cmp	ip, r0
  24:	beq	3c <in_array+0x3c>
  28:	add	r3, r3, #1
  2c:	cmp	r2, r3
  30:	bge	1c <in_array+0x1c>
  34:	mov	r0, #0
  38:	bx	lr
  3c:	mov	r0, #1
  40:	bx	lr

Disassembly of section .text.startup:

00000000 <main>:
   0:	movw	ip, #0
   4:	movt	ip, #0
   8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   c:	strd	r6, [sp, #8]
  10:	movw	r1, #0
  14:	movt	r1, #0
  18:	ldrd	r4, [ip]
  1c:	movw	r0, #0
  20:	movt	r0, #0
  24:	str	r8, [sp, #16]
  28:	ldrd	r2, [ip, #56]	; 0x38
  2c:	str	lr, [sp, #20]
  30:	ldrd	r6, [ip, #64]	; 0x40
  34:	vpush	{d8}
  38:	sub	sp, sp, #176	; 0xb0
  3c:	add	r8, sp, #40	; 0x28
  40:	strd	r2, [sp, #24]
  44:	ldrd	r2, [ip, #16]
  48:	strd	r6, [sp, #32]
  4c:	strd	r4, [sp, #40]	; 0x28
  50:	ldrd	r4, [ip, #8]
  54:	ldrd	r6, [ip, #24]
  58:	strd	r4, [r8, #8]
  5c:	strd	r2, [r8, #16]
  60:	strd	r6, [r8, #24]
  64:	ldrd	r4, [ip, #32]
  68:	ldrd	r2, [ip, #40]	; 0x28
  6c:	ldrd	r6, [ip, #48]	; 0x30
  70:	strd	r4, [sp]
  74:	add	r4, sp, #72	; 0x48
  78:	mov	r5, #0
  7c:	strd	r2, [sp, #8]
  80:	strd	r6, [sp, #16]
  84:	bl	0 <fopen>
  88:	mov	r6, r0
  8c:	mov	r2, #104	; 0x68
  90:	mov	r0, r4
  94:	mov	r1, r5
  98:	bl	0 <memset>
  9c:	mov	r0, r6
  a0:	bl	0 <getc>
  a4:	cmn	r0, #1
  a8:	beq	198 <main+0x198>
  ac:	add	r3, sp, #36	; 0x24
  b0:	ldr	r2, [r3, #4]!
  b4:	cmp	r0, r2
  b8:	beq	230 <main+0x230>
  bc:	cmp	r3, r4
  c0:	bne	b0 <main+0xb0>
  c4:	ldr	r3, [sp]
  c8:	cmp	r0, r3
  cc:	beq	250 <main+0x250>
  d0:	ldr	r3, [sp, #4]
  d4:	cmp	r0, r3
  d8:	beq	250 <main+0x250>
  dc:	ldr	r3, [sp, #8]
  e0:	cmp	r0, r3
  e4:	beq	250 <main+0x250>
  e8:	ldr	r3, [sp, #12]
  ec:	cmp	r0, r3
  f0:	beq	250 <main+0x250>
  f4:	ldr	r3, [sp, #16]
  f8:	cmp	r0, r3
  fc:	beq	250 <main+0x250>
 100:	cmp	r0, #205	; 0xcd
 104:	beq	26c <main+0x26c>
 108:	cmp	r0, #237	; 0xed
 10c:	beq	264 <main+0x264>
 110:	cmp	r0, #0
 114:	beq	264 <main+0x264>
 118:	add	r3, sp, #12
 11c:	ldr	r2, [r3, #4]!
 120:	cmp	r0, r2
 124:	beq	258 <main+0x258>
 128:	cmp	r3, r8
 12c:	bne	11c <main+0x11c>
 130:	bic	r3, r0, #32
 134:	cmp	r3, #218	; 0xda
 138:	beq	27c <main+0x27c>
 13c:	cmp	r0, #0
 140:	beq	27c <main+0x27c>
 144:	cmp	r3, #199	; 0xc7
 148:	beq	274 <main+0x274>
 14c:	cmp	r0, #0
 150:	beq	274 <main+0x274>
 154:	add	r3, r0, #128	; 0x80
 158:	mov	r7, r0
 15c:	cmp	r3, #384	; 0x180
 160:	bcc	25c <main+0x25c>
 164:	sub	r0, r0, #97	; 0x61
 168:	cmp	r0, #25
 16c:	bhi	9c <main+0x9c>
 170:	add	r3, sp, #176	; 0xb0
 174:	add	r5, r5, #1
 178:	add	r0, r3, r0, lsl #2
 17c:	ldr	r3, [r0, #-104]	; 0xffffff98
 180:	add	r3, r3, #1
 184:	str	r3, [r0, #-104]	; 0xffffff98
 188:	mov	r0, r6
 18c:	bl	0 <getc>
 190:	cmn	r0, #1
 194:	bne	ac <main+0xac>
 198:	mov	r0, r6
 19c:	vldr	s17, [pc, #224]	; 284 <main+0x284>
 1a0:	movw	r7, #0
 1a4:	movt	r7, #0
 1a8:	add	r6, sp, #68	; 0x44
 1ac:	bl	0 <fclose>
 1b0:	movw	r0, #0
 1b4:	movt	r0, #0
 1b8:	bl	0 <puts>
 1bc:	mov	r1, r5
 1c0:	movw	r0, #0
 1c4:	movt	r0, #0
 1c8:	add	r8, sp, #172	; 0xac
 1cc:	bl	0 <printf>
 1d0:	vmov	s15, r5
 1d4:	mov	r4, #97	; 0x61
 1d8:	vcvt.f32.s32	s16, s15
 1dc:	ldr	r3, [r6, #4]!
 1e0:	mov	r1, r4
 1e4:	mov	r0, r7
 1e8:	add	r4, r4, #1
 1ec:	vmov	s14, r3
 1f0:	vcvt.f32.s32	s14, s14
 1f4:	vdiv.f32	s15, s14, s16
 1f8:	vmul.f32	s15, s15, s17
 1fc:	vcvt.f64.f32	d7, s15
 200:	vmov	r2, r3, d7
 204:	bl	0 <printf>
 208:	cmp	r8, r6
 20c:	bne	1dc <main+0x1dc>
 210:	mov	r0, #0
 214:	add	sp, sp, #176	; 0xb0
 218:	vpop	{d8}
 21c:	ldrd	r4, [sp]
 220:	ldrd	r6, [sp, #8]
 224:	ldr	r8, [sp, #16]
 228:	add	sp, sp, #20
 22c:	pop	{pc}		; (ldr pc, [sp], #4)
 230:	mov	r7, #388	; 0x184
 234:	bl	0 <__ctype_tolower_loc>
 238:	ldr	r3, [r0]
 23c:	ldr	r0, [r3, r7]
 240:	sub	r0, r0, #97	; 0x61
 244:	cmp	r0, #25
 248:	bhi	9c <main+0x9c>
 24c:	b	170 <main+0x170>
 250:	mov	r7, #404	; 0x194
 254:	b	234 <main+0x234>
 258:	mov	r7, #111	; 0x6f
 25c:	lsl	r7, r7, #2
 260:	b	234 <main+0x234>
 264:	mov	r7, #105	; 0x69
 268:	b	25c <main+0x25c>
 26c:	mov	r7, #420	; 0x1a4
 270:	b	234 <main+0x234>
 274:	mov	r7, #99	; 0x63
 278:	b	25c <main+0x25c>
 27c:	mov	r7, #117	; 0x75
 280:	b	25c <main+0x25c>
 284:	.word	0x42c80000
