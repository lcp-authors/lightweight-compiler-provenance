
../compcert-repos/prog2/CMakeFiles/8.dir/Aula08_Grafos_T2/grafo-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_g>:
       0:	sub	sp, sp, #8
       4:	push	{fp, lr}
       8:	mov	fp, sp
       c:	sub	sp, sp, #40	; 0x28
      10:	str	r3, [fp, #12]
      14:	str	r2, [fp, #8]
      18:	str	r0, [fp, #-4]
      1c:	str	r1, [fp, #-8]
      20:	movw	r0, #8
      24:	bl	0 <malloc>
      28:	str	r0, [fp, #-16]
      2c:	sub	r0, fp, #12
      30:	add	r1, fp, #8
      34:	str	r1, [r0]
      38:	ldr	r0, [fp, #-4]
      3c:	movw	r1, #8
      40:	bl	0 <calloc>
      44:	ldr	r1, [fp, #-16]
      48:	str	r0, [r1, #4]
      4c:	movw	r0, #0
      50:	str	r0, [sp, #20]
      54:	ldr	r0, [sp, #20]
      58:	ldr	r1, [fp, #-8]
      5c:	cmp	r0, r1
      60:	bge	108 <_g+0x108>
      64:	ldr	r0, [fp, #-12]
      68:	add	r1, r0, #4
      6c:	str	r1, [fp, #-12]
      70:	ldr	r0, [r0]
      74:	str	r0, [sp, #16]
      78:	ldr	r0, [fp, #-12]
      7c:	add	r1, r0, #4
      80:	str	r1, [fp, #-12]
      84:	ldr	r0, [r0]
      88:	str	r0, [sp, #12]
      8c:	mov	r0, #1
      90:	mov	r1, #8
      94:	bl	0 <calloc>
      98:	str	r0, [sp, #8]
      9c:	ldr	r0, [sp, #12]
      a0:	ldr	r1, [sp, #8]
      a4:	str	r0, [r1]
      a8:	ldr	r0, [fp, #-16]
      ac:	ldr	r0, [r0, #4]
      b0:	ldr	r1, [sp, #16]
      b4:	add	r0, r0, r1, lsl #3
      b8:	ldr	r0, [r0, #4]
      bc:	ldr	r1, [sp, #8]
      c0:	str	r0, [r1, #4]
      c4:	ldr	r0, [sp, #8]
      c8:	ldr	r1, [fp, #-16]
      cc:	ldr	r1, [r1, #4]
      d0:	ldr	r2, [sp, #16]
      d4:	add	r1, r1, r2, lsl #3
      d8:	str	r0, [r1, #4]
      dc:	ldr	r0, [fp, #-16]
      e0:	ldr	r0, [r0, #4]
      e4:	ldr	r1, [sp, #16]
      e8:	add	r0, r0, r1, lsl #3
      ec:	ldr	r1, [r0]
      f0:	add	r1, r1, #1
      f4:	str	r1, [r0]
      f8:	ldr	r0, [sp, #20]
      fc:	add	r0, r0, #2
     100:	str	r0, [sp, #20]
     104:	b	54 <_g+0x54>
     108:	sub	r0, fp, #12
     10c:	ldr	r1, [fp, #-4]
     110:	ldr	r2, [fp, #-16]
     114:	str	r1, [r2]
     118:	ldr	r1, [fp, #-16]
     11c:	str	r0, [sp, #4]
     120:	mov	r0, r1
     124:	mov	sp, fp
     128:	pop	{fp, lr}
     12c:	add	sp, sp, #8
     130:	bx	lr

00000134 <_f>:
     134:	push	{fp, lr}
     138:	mov	fp, sp
     13c:	sub	sp, sp, #16
     140:	str	r0, [sp, #8]
     144:	str	r1, [sp, #4]
     148:	ldr	r0, [sp, #8]
     14c:	movw	r1, #0
     150:	cmp	r0, r1
     154:	bne	164 <_f+0x30>
     158:	movw	r0, #0
     15c:	str	r0, [fp, #-4]
     160:	b	1c0 <_f+0x8c>
     164:	movw	r0, #0
     168:	str	r0, [sp]
     16c:	ldr	r0, [sp]
     170:	ldr	r1, [sp, #8]
     174:	ldr	r1, [r1]
     178:	cmp	r0, r1
     17c:	bge	1b8 <_f+0x84>
     180:	ldr	r0, [sp, #8]
     184:	ldr	r1, [sp]
     188:	bl	0 <vetor_elemento>
     18c:	ldr	r1, [sp, #4]
     190:	cmp	r0, r1
     194:	bne	1a4 <_f+0x70>
     198:	movw	r0, #1
     19c:	str	r0, [fp, #-4]
     1a0:	b	1c0 <_f+0x8c>
     1a4:	b	1a8 <_f+0x74>
     1a8:	ldr	r0, [sp]
     1ac:	add	r0, r0, #1
     1b0:	str	r0, [sp]
     1b4:	b	16c <_f+0x38>
     1b8:	movw	r0, #0
     1bc:	str	r0, [fp, #-4]
     1c0:	ldr	r0, [fp, #-4]
     1c4:	mov	sp, fp
     1c8:	pop	{fp, pc}

000001cc <teste_grafo_novo>:
     1cc:	push	{fp, lr}
     1d0:	mov	fp, sp
     1d4:	sub	sp, sp, #16
     1d8:	movw	r0, #0
     1dc:	str	r0, [sp, #8]
     1e0:	movw	r0, #0
     1e4:	movt	r0, #0
     1e8:	bl	0 <printf>
     1ec:	movw	r1, #10
     1f0:	str	r0, [sp]
     1f4:	mov	r0, r1
     1f8:	bl	0 <grafo_novo>
     1fc:	str	r0, [sp, #4]
     200:	ldr	r0, [sp, #4]
     204:	movw	r1, #0
     208:	cmp	r0, r1
     20c:	bne	25c <teste_grafo_novo+0x90>
     210:	movw	r0, #0
     214:	movt	r0, #0
     218:	bl	0 <printf>
     21c:	ldr	r1, [sp, #8]
     220:	add	r1, r1, #1
     224:	str	r1, [sp, #8]
     228:	ldr	r1, [sp, #8]
     22c:	cmp	r1, #0
     230:	bne	244 <teste_grafo_novo+0x78>
     234:	movw	r0, #0
     238:	movt	r0, #0
     23c:	bl	0 <printf>
     240:	b	250 <teste_grafo_novo+0x84>
     244:	movw	r0, #0
     248:	movt	r0, #0
     24c:	bl	0 <printf>
     250:	ldr	r0, [sp, #8]
     254:	str	r0, [fp, #-4]
     258:	b	354 <teste_grafo_novo+0x188>
     25c:	ldr	r0, [sp, #4]
     260:	ldr	r0, [r0]
     264:	cmp	r0, #10
     268:	beq	284 <teste_grafo_novo+0xb8>
     26c:	movw	r0, #0
     270:	movt	r0, #0
     274:	bl	0 <printf>
     278:	ldr	r1, [sp, #8]
     27c:	add	r1, r1, #1
     280:	str	r1, [sp, #8]
     284:	ldr	r0, [sp, #4]
     288:	bl	0 <grafo_apaga>
     28c:	movw	r0, #1
     290:	bl	0 <grafo_novo>
     294:	str	r0, [sp, #4]
     298:	ldr	r0, [sp, #4]
     29c:	movw	r1, #0
     2a0:	cmp	r0, r1
     2a4:	bne	2f4 <teste_grafo_novo+0x128>
     2a8:	movw	r0, #0
     2ac:	movt	r0, #0
     2b0:	bl	0 <printf>
     2b4:	ldr	r1, [sp, #8]
     2b8:	add	r1, r1, #1
     2bc:	str	r1, [sp, #8]
     2c0:	ldr	r1, [sp, #8]
     2c4:	cmp	r1, #0
     2c8:	bne	2dc <teste_grafo_novo+0x110>
     2cc:	movw	r0, #0
     2d0:	movt	r0, #0
     2d4:	bl	0 <printf>
     2d8:	b	2e8 <teste_grafo_novo+0x11c>
     2dc:	movw	r0, #0
     2e0:	movt	r0, #0
     2e4:	bl	0 <printf>
     2e8:	ldr	r0, [sp, #8]
     2ec:	str	r0, [fp, #-4]
     2f0:	b	354 <teste_grafo_novo+0x188>
     2f4:	ldr	r0, [sp, #4]
     2f8:	ldr	r0, [r0]
     2fc:	cmp	r0, #1
     300:	beq	31c <teste_grafo_novo+0x150>
     304:	movw	r0, #0
     308:	movt	r0, #0
     30c:	bl	0 <printf>
     310:	ldr	r1, [sp, #8]
     314:	add	r1, r1, #1
     318:	str	r1, [sp, #8]
     31c:	ldr	r0, [sp, #4]
     320:	bl	0 <grafo_apaga>
     324:	ldr	r0, [sp, #8]
     328:	cmp	r0, #0
     32c:	bne	340 <teste_grafo_novo+0x174>
     330:	movw	r0, #0
     334:	movt	r0, #0
     338:	bl	0 <printf>
     33c:	b	34c <teste_grafo_novo+0x180>
     340:	movw	r0, #0
     344:	movt	r0, #0
     348:	bl	0 <printf>
     34c:	ldr	r0, [sp, #8]
     350:	str	r0, [fp, #-4]
     354:	ldr	r0, [fp, #-4]
     358:	mov	sp, fp
     35c:	pop	{fp, pc}

00000360 <teste_grafo_aresta>:
     360:	push	{r4, r5, r6, sl, fp, lr}
     364:	add	fp, sp, #16
     368:	sub	sp, sp, #104	; 0x68
     36c:	movw	r0, #0
     370:	str	r0, [fp, #-20]	; 0xffffffec
     374:	movw	r1, #8
     378:	str	r0, [fp, #-28]	; 0xffffffe4
     37c:	mov	r0, r1
     380:	movw	r1, #22
     384:	movw	r2, #3
     388:	str	r2, [fp, #-32]	; 0xffffffe0
     38c:	movw	r3, #2
     390:	str	r3, [fp, #-36]	; 0xffffffdc
     394:	movw	ip, #7
     398:	str	ip, [sp]
     39c:	ldr	lr, [fp, #-36]	; 0xffffffdc
     3a0:	str	lr, [sp, #4]
     3a4:	ldr	r4, [fp, #-28]	; 0xffffffe4
     3a8:	str	r4, [sp, #8]
     3ac:	str	lr, [sp, #12]
     3b0:	str	ip, [sp, #16]
     3b4:	movw	r5, #5
     3b8:	str	r5, [sp, #20]
     3bc:	str	r5, [sp, #24]
     3c0:	movw	r5, #4
     3c4:	str	r5, [sp, #28]
     3c8:	str	r5, [sp, #32]
     3cc:	str	r4, [sp, #36]	; 0x24
     3d0:	str	r5, [sp, #40]	; 0x28
     3d4:	movw	r5, #6
     3d8:	str	r5, [sp, #44]	; 0x2c
     3dc:	movw	r6, #1
     3e0:	str	r6, [sp, #48]	; 0x30
     3e4:	str	r6, [sp, #52]	; 0x34
     3e8:	str	ip, [sp, #56]	; 0x38
     3ec:	str	r5, [sp, #60]	; 0x3c
     3f0:	str	r5, [sp, #64]	; 0x40
     3f4:	ldr	ip, [fp, #-32]	; 0xffffffe0
     3f8:	str	ip, [sp, #68]	; 0x44
     3fc:	str	r4, [sp, #72]	; 0x48
     400:	str	r6, [sp, #76]	; 0x4c
     404:	bl	0 <_g>
     408:	str	r0, [fp, #-24]	; 0xffffffe8
     40c:	movw	r0, #0
     410:	movt	r0, #0
     414:	bl	0 <printf>
     418:	ldr	r1, [fp, #-24]	; 0xffffffe8
     41c:	str	r0, [fp, #-40]	; 0xffffffd8
     420:	mov	r0, r1
     424:	movw	r1, #5
     428:	movw	r2, #4
     42c:	bl	0 <grafo_aresta>
     430:	cmp	r0, #1
     434:	beq	450 <teste_grafo_aresta+0xf0>
     438:	movw	r0, #0
     43c:	movt	r0, #0
     440:	bl	0 <printf>
     444:	ldr	r1, [fp, #-20]	; 0xffffffec
     448:	add	r1, r1, #1
     44c:	str	r1, [fp, #-20]	; 0xffffffec
     450:	ldr	r0, [fp, #-24]	; 0xffffffe8
     454:	movw	r1, #7
     458:	movw	r2, #6
     45c:	bl	0 <grafo_aresta>
     460:	cmp	r0, #1
     464:	beq	480 <teste_grafo_aresta+0x120>
     468:	movw	r0, #0
     46c:	movt	r0, #0
     470:	bl	0 <printf>
     474:	ldr	r1, [fp, #-20]	; 0xffffffec
     478:	add	r1, r1, #1
     47c:	str	r1, [fp, #-20]	; 0xffffffec
     480:	ldr	r0, [fp, #-24]	; 0xffffffe8
     484:	movw	r1, #7
     488:	movw	r2, #1
     48c:	bl	0 <grafo_aresta>
     490:	cmp	r0, #0
     494:	beq	4b0 <teste_grafo_aresta+0x150>
     498:	movw	r0, #0
     49c:	movt	r0, #0
     4a0:	bl	0 <printf>
     4a4:	ldr	r1, [fp, #-20]	; 0xffffffec
     4a8:	add	r1, r1, #1
     4ac:	str	r1, [fp, #-20]	; 0xffffffec
     4b0:	movw	r0, #0
     4b4:	movw	r1, #2
     4b8:	movw	r2, #7
     4bc:	bl	0 <grafo_aresta>
     4c0:	cmn	r0, #1
     4c4:	beq	4e0 <teste_grafo_aresta+0x180>
     4c8:	movw	r0, #0
     4cc:	movt	r0, #0
     4d0:	bl	0 <printf>
     4d4:	ldr	r1, [fp, #-20]	; 0xffffffec
     4d8:	add	r1, r1, #1
     4dc:	str	r1, [fp, #-20]	; 0xffffffec
     4e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     4e4:	bl	0 <grafo_apaga>
     4e8:	ldr	r0, [fp, #-20]	; 0xffffffec
     4ec:	cmp	r0, #0
     4f0:	bne	504 <teste_grafo_aresta+0x1a4>
     4f4:	movw	r0, #0
     4f8:	movt	r0, #0
     4fc:	bl	0 <printf>
     500:	b	510 <teste_grafo_aresta+0x1b0>
     504:	movw	r0, #0
     508:	movt	r0, #0
     50c:	bl	0 <printf>
     510:	ldr	r0, [fp, #-20]	; 0xffffffec
     514:	sub	sp, fp, #16
     518:	pop	{r4, r5, r6, sl, fp, pc}

0000051c <teste_grafo_adiciona>:
     51c:	push	{fp, lr}
     520:	mov	fp, sp
     524:	sub	sp, sp, #24
     528:	movw	r0, #0
     52c:	str	r0, [fp, #-4]
     530:	movw	r0, #9
     534:	movw	r1, #4
     538:	movw	r2, #3
     53c:	movw	r3, #2
     540:	str	r3, [sp, #12]
     544:	movw	ip, #7
     548:	str	ip, [sp]
     54c:	ldr	ip, [sp, #12]
     550:	str	ip, [sp, #4]
     554:	bl	0 <_g>
     558:	str	r0, [fp, #-8]
     55c:	movw	r0, #0
     560:	movt	r0, #0
     564:	bl	0 <printf>
     568:	ldr	r1, [fp, #-8]
     56c:	str	r0, [sp, #8]
     570:	mov	r0, r1
     574:	movw	r1, #2
     578:	movw	r2, #7
     57c:	bl	0 <grafo_adiciona>
     580:	cmp	r0, #1
     584:	beq	5a0 <teste_grafo_adiciona+0x84>
     588:	movw	r0, #0
     58c:	movt	r0, #0
     590:	bl	0 <printf>
     594:	ldr	r1, [fp, #-4]
     598:	add	r1, r1, #1
     59c:	str	r1, [fp, #-4]
     5a0:	ldr	r0, [fp, #-8]
     5a4:	ldr	r0, [r0, #4]
     5a8:	ldr	r0, [r0, #20]
     5ac:	movw	r1, #0
     5b0:	cmp	r0, r1
     5b4:	beq	5d0 <teste_grafo_adiciona+0xb4>
     5b8:	ldr	r0, [fp, #-8]
     5bc:	ldr	r0, [r0, #4]
     5c0:	ldr	r0, [r0, #20]
     5c4:	ldr	r0, [r0]
     5c8:	cmp	r0, #7
     5cc:	beq	5e8 <teste_grafo_adiciona+0xcc>
     5d0:	movw	r0, #0
     5d4:	movt	r0, #0
     5d8:	bl	0 <printf>
     5dc:	ldr	r1, [fp, #-4]
     5e0:	add	r1, r1, #1
     5e4:	str	r1, [fp, #-4]
     5e8:	ldr	r0, [fp, #-8]
     5ec:	movw	r1, #3
     5f0:	movw	r2, #8
     5f4:	bl	0 <grafo_adiciona>
     5f8:	cmp	r0, #1
     5fc:	beq	618 <teste_grafo_adiciona+0xfc>
     600:	movw	r0, #0
     604:	movt	r0, #0
     608:	bl	0 <printf>
     60c:	ldr	r1, [fp, #-4]
     610:	add	r1, r1, #1
     614:	str	r1, [fp, #-4]
     618:	ldr	r0, [fp, #-8]
     61c:	ldr	r0, [r0, #4]
     620:	ldr	r0, [r0, #28]
     624:	movw	r1, #0
     628:	cmp	r0, r1
     62c:	beq	6d4 <teste_grafo_adiciona+0x1b8>
     630:	ldr	r0, [fp, #-8]
     634:	ldr	r0, [r0, #4]
     638:	ldr	r0, [r0, #28]
     63c:	ldr	r0, [r0, #4]
     640:	movw	r1, #0
     644:	cmp	r0, r1
     648:	beq	6d4 <teste_grafo_adiciona+0x1b8>
     64c:	ldr	r0, [fp, #-8]
     650:	ldr	r0, [r0, #4]
     654:	ldr	r0, [r0, #28]
     658:	ldr	r0, [r0, #4]
     65c:	ldr	r0, [r0, #4]
     660:	movw	r1, #0
     664:	cmp	r0, r1
     668:	bne	6d4 <teste_grafo_adiciona+0x1b8>
     66c:	ldr	r0, [fp, #-8]
     670:	ldr	r0, [r0, #4]
     674:	ldr	r0, [r0, #28]
     678:	ldr	r0, [r0]
     67c:	cmp	r0, #2
     680:	bne	6a0 <teste_grafo_adiciona+0x184>
     684:	ldr	r0, [fp, #-8]
     688:	ldr	r0, [r0, #4]
     68c:	ldr	r0, [r0, #28]
     690:	ldr	r0, [r0, #4]
     694:	ldr	r0, [r0]
     698:	cmp	r0, #8
     69c:	beq	6ec <teste_grafo_adiciona+0x1d0>
     6a0:	ldr	r0, [fp, #-8]
     6a4:	ldr	r0, [r0, #4]
     6a8:	ldr	r0, [r0, #28]
     6ac:	ldr	r0, [r0]
     6b0:	cmp	r0, #8
     6b4:	bne	6d4 <teste_grafo_adiciona+0x1b8>
     6b8:	ldr	r0, [fp, #-8]
     6bc:	ldr	r0, [r0, #4]
     6c0:	ldr	r0, [r0, #28]
     6c4:	ldr	r0, [r0, #4]
     6c8:	ldr	r0, [r0]
     6cc:	cmp	r0, #2
     6d0:	beq	6ec <teste_grafo_adiciona+0x1d0>
     6d4:	movw	r0, #0
     6d8:	movt	r0, #0
     6dc:	bl	0 <printf>
     6e0:	ldr	r1, [fp, #-4]
     6e4:	add	r1, r1, #1
     6e8:	str	r1, [fp, #-4]
     6ec:	ldr	r0, [fp, #-8]
     6f0:	movw	r1, #2
     6f4:	movw	r2, #7
     6f8:	bl	0 <grafo_adiciona>
     6fc:	cmp	r0, #0
     700:	beq	71c <teste_grafo_adiciona+0x200>
     704:	movw	r0, #0
     708:	movt	r0, #0
     70c:	bl	0 <printf>
     710:	ldr	r1, [fp, #-4]
     714:	add	r1, r1, #1
     718:	str	r1, [fp, #-4]
     71c:	ldr	r0, [fp, #-8]
     720:	movw	r1, #22
     724:	movw	r2, #7
     728:	bl	0 <grafo_adiciona>
     72c:	cmn	r0, #1
     730:	beq	74c <teste_grafo_adiciona+0x230>
     734:	movw	r0, #0
     738:	movt	r0, #0
     73c:	bl	0 <printf>
     740:	ldr	r1, [fp, #-4]
     744:	add	r1, r1, #1
     748:	str	r1, [fp, #-4]
     74c:	movw	r0, #0
     750:	movw	r1, #2
     754:	movw	r2, #7
     758:	bl	0 <grafo_adiciona>
     75c:	cmn	r0, #1
     760:	beq	77c <teste_grafo_adiciona+0x260>
     764:	movw	r0, #0
     768:	movt	r0, #0
     76c:	bl	0 <printf>
     770:	ldr	r1, [fp, #-4]
     774:	add	r1, r1, #1
     778:	str	r1, [fp, #-4]
     77c:	ldr	r0, [fp, #-8]
     780:	bl	0 <grafo_apaga>
     784:	ldr	r0, [fp, #-4]
     788:	cmp	r0, #0
     78c:	bne	7a0 <teste_grafo_adiciona+0x284>
     790:	movw	r0, #0
     794:	movt	r0, #0
     798:	bl	0 <printf>
     79c:	b	7ac <teste_grafo_adiciona+0x290>
     7a0:	movw	r0, #0
     7a4:	movt	r0, #0
     7a8:	bl	0 <printf>
     7ac:	ldr	r0, [fp, #-4]
     7b0:	mov	sp, fp
     7b4:	pop	{fp, pc}

000007b8 <teste_grafo_remove>:
     7b8:	push	{fp, lr}
     7bc:	mov	fp, sp
     7c0:	sub	sp, sp, #32
     7c4:	movw	r0, #0
     7c8:	str	r0, [fp, #-4]
     7cc:	movw	r0, #9
     7d0:	movw	r1, #6
     7d4:	movw	r2, #3
     7d8:	movw	r3, #2
     7dc:	str	r3, [fp, #-12]
     7e0:	movw	ip, #7
     7e4:	str	ip, [sp]
     7e8:	ldr	lr, [fp, #-12]
     7ec:	str	lr, [sp, #4]
     7f0:	str	ip, [sp, #8]
     7f4:	movw	ip, #1
     7f8:	str	ip, [sp, #12]
     7fc:	bl	0 <_g>
     800:	str	r0, [fp, #-8]
     804:	movw	r0, #0
     808:	movt	r0, #0
     80c:	bl	0 <printf>
     810:	ldr	r1, [fp, #-8]
     814:	str	r0, [sp, #16]
     818:	mov	r0, r1
     81c:	movw	r1, #7
     820:	movw	r2, #1
     824:	bl	0 <grafo_remove>
     828:	cmp	r0, #1
     82c:	beq	848 <teste_grafo_remove+0x90>
     830:	movw	r0, #0
     834:	movt	r0, #0
     838:	bl	0 <printf>
     83c:	ldr	r1, [fp, #-4]
     840:	add	r1, r1, #1
     844:	str	r1, [fp, #-4]
     848:	ldr	r0, [fp, #-8]
     84c:	ldr	r0, [r0, #4]
     850:	ldr	r0, [r0, #60]	; 0x3c
     854:	movw	r1, #0
     858:	cmp	r0, r1
     85c:	beq	894 <teste_grafo_remove+0xdc>
     860:	ldr	r0, [fp, #-8]
     864:	ldr	r0, [r0, #4]
     868:	ldr	r0, [r0, #60]	; 0x3c
     86c:	ldr	r0, [r0, #4]
     870:	movw	r1, #0
     874:	cmp	r0, r1
     878:	bne	894 <teste_grafo_remove+0xdc>
     87c:	ldr	r0, [fp, #-8]
     880:	ldr	r0, [r0, #4]
     884:	ldr	r0, [r0, #60]	; 0x3c
     888:	ldr	r0, [r0]
     88c:	cmp	r0, #2
     890:	beq	8ac <teste_grafo_remove+0xf4>
     894:	movw	r0, #0
     898:	movt	r0, #0
     89c:	bl	0 <printf>
     8a0:	ldr	r1, [fp, #-4]
     8a4:	add	r1, r1, #1
     8a8:	str	r1, [fp, #-4]
     8ac:	ldr	r0, [fp, #-8]
     8b0:	movw	r1, #7
     8b4:	movw	r2, #2
     8b8:	bl	0 <grafo_remove>
     8bc:	cmp	r0, #1
     8c0:	beq	8dc <teste_grafo_remove+0x124>
     8c4:	movw	r0, #0
     8c8:	movt	r0, #0
     8cc:	bl	0 <printf>
     8d0:	ldr	r1, [fp, #-4]
     8d4:	add	r1, r1, #1
     8d8:	str	r1, [fp, #-4]
     8dc:	ldr	r0, [fp, #-8]
     8e0:	ldr	r0, [r0, #4]
     8e4:	ldr	r0, [r0, #60]	; 0x3c
     8e8:	movw	r1, #0
     8ec:	cmp	r0, r1
     8f0:	beq	90c <teste_grafo_remove+0x154>
     8f4:	movw	r0, #0
     8f8:	movt	r0, #0
     8fc:	bl	0 <printf>
     900:	ldr	r1, [fp, #-4]
     904:	add	r1, r1, #1
     908:	str	r1, [fp, #-4]
     90c:	ldr	r0, [fp, #-8]
     910:	movw	r1, #4
     914:	movw	r2, #0
     918:	bl	0 <grafo_remove>
     91c:	cmp	r0, #0
     920:	beq	93c <teste_grafo_remove+0x184>
     924:	movw	r0, #0
     928:	movt	r0, #0
     92c:	bl	0 <printf>
     930:	ldr	r1, [fp, #-4]
     934:	add	r1, r1, #1
     938:	str	r1, [fp, #-4]
     93c:	ldr	r0, [fp, #-8]
     940:	movw	r1, #7
     944:	movw	r2, #22
     948:	bl	0 <grafo_remove>
     94c:	cmn	r0, #1
     950:	beq	96c <teste_grafo_remove+0x1b4>
     954:	movw	r0, #0
     958:	movt	r0, #0
     95c:	bl	0 <printf>
     960:	ldr	r1, [fp, #-4]
     964:	add	r1, r1, #1
     968:	str	r1, [fp, #-4]
     96c:	ldr	r0, [fp, #-8]
     970:	bl	0 <grafo_apaga>
     974:	ldr	r0, [fp, #-4]
     978:	cmp	r0, #0
     97c:	bne	990 <teste_grafo_remove+0x1d8>
     980:	movw	r0, #0
     984:	movt	r0, #0
     988:	bl	0 <printf>
     98c:	b	99c <teste_grafo_remove+0x1e4>
     990:	movw	r0, #0
     994:	movt	r0, #0
     998:	bl	0 <printf>
     99c:	ldr	r0, [fp, #-4]
     9a0:	mov	sp, fp
     9a4:	pop	{fp, pc}

000009a8 <teste_v_sucessores>:
     9a8:	push	{r4, r5, r6, sl, fp, lr}
     9ac:	add	fp, sp, #16
     9b0:	sub	sp, sp, #112	; 0x70
     9b4:	movw	r0, #0
     9b8:	str	r0, [fp, #-24]	; 0xffffffe8
     9bc:	movw	r1, #8
     9c0:	str	r0, [fp, #-36]	; 0xffffffdc
     9c4:	mov	r0, r1
     9c8:	movw	r1, #22
     9cc:	movw	r2, #3
     9d0:	str	r2, [fp, #-40]	; 0xffffffd8
     9d4:	movw	r3, #2
     9d8:	str	r3, [fp, #-44]	; 0xffffffd4
     9dc:	movw	ip, #7
     9e0:	str	ip, [sp]
     9e4:	ldr	lr, [fp, #-44]	; 0xffffffd4
     9e8:	str	lr, [sp, #4]
     9ec:	ldr	r4, [fp, #-36]	; 0xffffffdc
     9f0:	str	r4, [sp, #8]
     9f4:	str	lr, [sp, #12]
     9f8:	str	ip, [sp, #16]
     9fc:	movw	r5, #5
     a00:	str	r5, [sp, #20]
     a04:	str	r5, [sp, #24]
     a08:	movw	r5, #4
     a0c:	str	r5, [sp, #28]
     a10:	str	r5, [sp, #32]
     a14:	str	r4, [sp, #36]	; 0x24
     a18:	str	r5, [sp, #40]	; 0x28
     a1c:	movw	r5, #6
     a20:	str	r5, [sp, #44]	; 0x2c
     a24:	movw	r6, #1
     a28:	str	r6, [sp, #48]	; 0x30
     a2c:	str	r6, [sp, #52]	; 0x34
     a30:	str	ip, [sp, #56]	; 0x38
     a34:	str	r5, [sp, #60]	; 0x3c
     a38:	str	r5, [sp, #64]	; 0x40
     a3c:	ldr	ip, [fp, #-40]	; 0xffffffd8
     a40:	str	ip, [sp, #68]	; 0x44
     a44:	str	r4, [sp, #72]	; 0x48
     a48:	str	r6, [sp, #76]	; 0x4c
     a4c:	bl	0 <_g>
     a50:	str	r0, [fp, #-28]	; 0xffffffe4
     a54:	movw	r0, #0
     a58:	movt	r0, #0
     a5c:	bl	0 <printf>
     a60:	ldr	r1, [fp, #-28]	; 0xffffffe4
     a64:	str	r0, [fp, #-48]	; 0xffffffd0
     a68:	mov	r0, r1
     a6c:	movw	r1, #7
     a70:	bl	0 <v_sucessores>
     a74:	str	r0, [fp, #-32]	; 0xffffffe0
     a78:	movw	r1, #0
     a7c:	cmp	r0, r1
     a80:	bne	a9c <teste_v_sucessores+0xf4>
     a84:	movw	r0, #0
     a88:	movt	r0, #0
     a8c:	bl	0 <printf>
     a90:	ldr	r1, [fp, #-24]	; 0xffffffe8
     a94:	add	r1, r1, #1
     a98:	str	r1, [fp, #-24]	; 0xffffffe8
     a9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     aa0:	movw	r1, #0
     aa4:	cmp	r0, r1
     aa8:	bne	ae0 <teste_v_sucessores+0x138>
     aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ab0:	cmp	r0, #0
     ab4:	bne	ac8 <teste_v_sucessores+0x120>
     ab8:	movw	r0, #0
     abc:	movt	r0, #0
     ac0:	bl	0 <printf>
     ac4:	b	ad4 <teste_v_sucessores+0x12c>
     ac8:	movw	r0, #0
     acc:	movt	r0, #0
     ad0:	bl	0 <printf>
     ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ad8:	str	r0, [fp, #-20]	; 0xffffffec
     adc:	b	c44 <teste_v_sucessores+0x29c>
     ae0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ae4:	ldr	r0, [r0]
     ae8:	cmp	r0, #3
     aec:	beq	b08 <teste_v_sucessores+0x160>
     af0:	movw	r0, #0
     af4:	movt	r0, #0
     af8:	bl	0 <printf>
     afc:	ldr	r1, [fp, #-24]	; 0xffffffe8
     b00:	add	r1, r1, #1
     b04:	str	r1, [fp, #-24]	; 0xffffffe8
     b08:	ldr	r0, [fp, #-32]	; 0xffffffe0
     b0c:	movw	r1, #2
     b10:	bl	134 <_f>
     b14:	cmp	r0, #0
     b18:	beq	b44 <teste_v_sucessores+0x19c>
     b1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     b20:	movw	r1, #5
     b24:	bl	134 <_f>
     b28:	cmp	r0, #0
     b2c:	beq	b44 <teste_v_sucessores+0x19c>
     b30:	ldr	r0, [fp, #-32]	; 0xffffffe0
     b34:	movw	r1, #6
     b38:	bl	134 <_f>
     b3c:	cmp	r0, #0
     b40:	bne	b5c <teste_v_sucessores+0x1b4>
     b44:	movw	r0, #0
     b48:	movt	r0, #0
     b4c:	bl	0 <printf>
     b50:	ldr	r1, [fp, #-24]	; 0xffffffe8
     b54:	add	r1, r1, #1
     b58:	str	r1, [fp, #-24]	; 0xffffffe8
     b5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     b60:	bl	0 <vetor_apaga>
     b64:	ldr	r0, [fp, #-28]	; 0xffffffe4
     b68:	movw	r1, #2
     b6c:	bl	0 <v_sucessores>
     b70:	str	r0, [fp, #-32]	; 0xffffffe0
     b74:	movw	r1, #0
     b78:	cmp	r0, r1
     b7c:	bne	b98 <teste_v_sucessores+0x1f0>
     b80:	movw	r0, #0
     b84:	movt	r0, #0
     b88:	bl	0 <printf>
     b8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     b90:	add	r1, r1, #1
     b94:	str	r1, [fp, #-24]	; 0xffffffe8
     b98:	ldr	r0, [fp, #-32]	; 0xffffffe0
     b9c:	movw	r1, #0
     ba0:	cmp	r0, r1
     ba4:	bne	bdc <teste_v_sucessores+0x234>
     ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     bac:	cmp	r0, #0
     bb0:	bne	bc4 <teste_v_sucessores+0x21c>
     bb4:	movw	r0, #0
     bb8:	movt	r0, #0
     bbc:	bl	0 <printf>
     bc0:	b	bd0 <teste_v_sucessores+0x228>
     bc4:	movw	r0, #0
     bc8:	movt	r0, #0
     bcc:	bl	0 <printf>
     bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     bd4:	str	r0, [fp, #-20]	; 0xffffffec
     bd8:	b	c44 <teste_v_sucessores+0x29c>
     bdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     be0:	ldr	r0, [r0]
     be4:	cmp	r0, #0
     be8:	beq	c04 <teste_v_sucessores+0x25c>
     bec:	movw	r0, #0
     bf0:	movt	r0, #0
     bf4:	bl	0 <printf>
     bf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     bfc:	add	r1, r1, #1
     c00:	str	r1, [fp, #-24]	; 0xffffffe8
     c04:	ldr	r0, [fp, #-32]	; 0xffffffe0
     c08:	bl	0 <vetor_apaga>
     c0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     c10:	bl	0 <grafo_apaga>
     c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
     c18:	cmp	r0, #0
     c1c:	bne	c30 <teste_v_sucessores+0x288>
     c20:	movw	r0, #0
     c24:	movt	r0, #0
     c28:	bl	0 <printf>
     c2c:	b	c3c <teste_v_sucessores+0x294>
     c30:	movw	r0, #0
     c34:	movt	r0, #0
     c38:	bl	0 <printf>
     c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     c40:	str	r0, [fp, #-20]	; 0xffffffec
     c44:	ldr	r0, [fp, #-20]	; 0xffffffec
     c48:	sub	sp, fp, #16
     c4c:	pop	{r4, r5, r6, sl, fp, pc}

00000c50 <teste_v_antecessores>:
     c50:	push	{r4, r5, r6, sl, fp, lr}
     c54:	add	fp, sp, #16
     c58:	sub	sp, sp, #112	; 0x70
     c5c:	movw	r0, #0
     c60:	str	r0, [fp, #-24]	; 0xffffffe8
     c64:	movw	r1, #8
     c68:	str	r0, [fp, #-36]	; 0xffffffdc
     c6c:	mov	r0, r1
     c70:	movw	r1, #22
     c74:	movw	r2, #3
     c78:	str	r2, [fp, #-40]	; 0xffffffd8
     c7c:	movw	r3, #2
     c80:	str	r3, [fp, #-44]	; 0xffffffd4
     c84:	movw	ip, #7
     c88:	str	ip, [sp]
     c8c:	ldr	lr, [fp, #-44]	; 0xffffffd4
     c90:	str	lr, [sp, #4]
     c94:	ldr	r4, [fp, #-36]	; 0xffffffdc
     c98:	str	r4, [sp, #8]
     c9c:	str	lr, [sp, #12]
     ca0:	str	ip, [sp, #16]
     ca4:	movw	r5, #5
     ca8:	str	r5, [sp, #20]
     cac:	str	r5, [sp, #24]
     cb0:	movw	r5, #4
     cb4:	str	r5, [sp, #28]
     cb8:	str	r5, [sp, #32]
     cbc:	str	r4, [sp, #36]	; 0x24
     cc0:	str	r5, [sp, #40]	; 0x28
     cc4:	movw	r5, #6
     cc8:	str	r5, [sp, #44]	; 0x2c
     ccc:	movw	r6, #1
     cd0:	str	r6, [sp, #48]	; 0x30
     cd4:	str	r6, [sp, #52]	; 0x34
     cd8:	str	ip, [sp, #56]	; 0x38
     cdc:	str	r5, [sp, #60]	; 0x3c
     ce0:	str	r5, [sp, #64]	; 0x40
     ce4:	ldr	ip, [fp, #-40]	; 0xffffffd8
     ce8:	str	ip, [sp, #68]	; 0x44
     cec:	str	r4, [sp, #72]	; 0x48
     cf0:	str	r6, [sp, #76]	; 0x4c
     cf4:	bl	0 <_g>
     cf8:	str	r0, [fp, #-28]	; 0xffffffe4
     cfc:	movw	r0, #0
     d00:	movt	r0, #0
     d04:	bl	0 <printf>
     d08:	ldr	r1, [fp, #-28]	; 0xffffffe4
     d0c:	str	r0, [fp, #-48]	; 0xffffffd0
     d10:	mov	r0, r1
     d14:	movw	r1, #2
     d18:	bl	0 <v_antecessores>
     d1c:	str	r0, [fp, #-32]	; 0xffffffe0
     d20:	movw	r1, #0
     d24:	cmp	r0, r1
     d28:	bne	d44 <teste_v_antecessores+0xf4>
     d2c:	movw	r0, #0
     d30:	movt	r0, #0
     d34:	bl	0 <printf>
     d38:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d3c:	add	r1, r1, #1
     d40:	str	r1, [fp, #-24]	; 0xffffffe8
     d44:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d48:	movw	r1, #0
     d4c:	cmp	r0, r1
     d50:	bne	d88 <teste_v_antecessores+0x138>
     d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d58:	cmp	r0, #0
     d5c:	bne	d70 <teste_v_antecessores+0x120>
     d60:	movw	r0, #0
     d64:	movt	r0, #0
     d68:	bl	0 <printf>
     d6c:	b	d7c <teste_v_antecessores+0x12c>
     d70:	movw	r0, #0
     d74:	movt	r0, #0
     d78:	bl	0 <printf>
     d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d80:	str	r0, [fp, #-20]	; 0xffffffec
     d84:	b	eec <teste_v_antecessores+0x29c>
     d88:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d8c:	ldr	r0, [r0]
     d90:	cmp	r0, #3
     d94:	beq	db0 <teste_v_antecessores+0x160>
     d98:	movw	r0, #0
     d9c:	movt	r0, #0
     da0:	bl	0 <printf>
     da4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     da8:	add	r1, r1, #1
     dac:	str	r1, [fp, #-24]	; 0xffffffe8
     db0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     db4:	movw	r1, #0
     db8:	bl	134 <_f>
     dbc:	cmp	r0, #0
     dc0:	beq	dec <teste_v_antecessores+0x19c>
     dc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     dc8:	movw	r1, #3
     dcc:	bl	134 <_f>
     dd0:	cmp	r0, #0
     dd4:	beq	dec <teste_v_antecessores+0x19c>
     dd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ddc:	movw	r1, #7
     de0:	bl	134 <_f>
     de4:	cmp	r0, #0
     de8:	bne	e04 <teste_v_antecessores+0x1b4>
     dec:	movw	r0, #0
     df0:	movt	r0, #0
     df4:	bl	0 <printf>
     df8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     dfc:	add	r1, r1, #1
     e00:	str	r1, [fp, #-24]	; 0xffffffe8
     e04:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e08:	bl	0 <vetor_apaga>
     e0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     e10:	movw	r1, #7
     e14:	bl	0 <v_antecessores>
     e18:	str	r0, [fp, #-32]	; 0xffffffe0
     e1c:	movw	r1, #0
     e20:	cmp	r0, r1
     e24:	bne	e40 <teste_v_antecessores+0x1f0>
     e28:	movw	r0, #0
     e2c:	movt	r0, #0
     e30:	bl	0 <printf>
     e34:	ldr	r1, [fp, #-24]	; 0xffffffe8
     e38:	add	r1, r1, #1
     e3c:	str	r1, [fp, #-24]	; 0xffffffe8
     e40:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e44:	movw	r1, #0
     e48:	cmp	r0, r1
     e4c:	bne	e84 <teste_v_antecessores+0x234>
     e50:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e54:	cmp	r0, #0
     e58:	bne	e6c <teste_v_antecessores+0x21c>
     e5c:	movw	r0, #0
     e60:	movt	r0, #0
     e64:	bl	0 <printf>
     e68:	b	e78 <teste_v_antecessores+0x228>
     e6c:	movw	r0, #0
     e70:	movt	r0, #0
     e74:	bl	0 <printf>
     e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e7c:	str	r0, [fp, #-20]	; 0xffffffec
     e80:	b	eec <teste_v_antecessores+0x29c>
     e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e88:	ldr	r0, [r0]
     e8c:	cmp	r0, #0
     e90:	beq	eac <teste_v_antecessores+0x25c>
     e94:	movw	r0, #0
     e98:	movt	r0, #0
     e9c:	bl	0 <printf>
     ea0:	ldr	r1, [fp, #-24]	; 0xffffffe8
     ea4:	add	r1, r1, #1
     ea8:	str	r1, [fp, #-24]	; 0xffffffe8
     eac:	ldr	r0, [fp, #-32]	; 0xffffffe0
     eb0:	bl	0 <vetor_apaga>
     eb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     eb8:	bl	0 <grafo_apaga>
     ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ec0:	cmp	r0, #0
     ec4:	bne	ed8 <teste_v_antecessores+0x288>
     ec8:	movw	r0, #0
     ecc:	movt	r0, #0
     ed0:	bl	0 <printf>
     ed4:	b	ee4 <teste_v_antecessores+0x294>
     ed8:	movw	r0, #0
     edc:	movt	r0, #0
     ee0:	bl	0 <printf>
     ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ee8:	str	r0, [fp, #-20]	; 0xffffffec
     eec:	ldr	r0, [fp, #-20]	; 0xffffffec
     ef0:	sub	sp, fp, #16
     ef4:	pop	{r4, r5, r6, sl, fp, pc}

00000ef8 <teste_v_grau>:
     ef8:	push	{r4, r5, r6, sl, fp, lr}
     efc:	add	fp, sp, #16
     f00:	sub	sp, sp, #104	; 0x68
     f04:	movw	r0, #0
     f08:	str	r0, [fp, #-20]	; 0xffffffec
     f0c:	movw	r1, #8
     f10:	str	r0, [fp, #-28]	; 0xffffffe4
     f14:	mov	r0, r1
     f18:	movw	r1, #22
     f1c:	movw	r2, #3
     f20:	str	r2, [fp, #-32]	; 0xffffffe0
     f24:	movw	r3, #2
     f28:	str	r3, [fp, #-36]	; 0xffffffdc
     f2c:	movw	ip, #7
     f30:	str	ip, [sp]
     f34:	ldr	lr, [fp, #-36]	; 0xffffffdc
     f38:	str	lr, [sp, #4]
     f3c:	ldr	r4, [fp, #-28]	; 0xffffffe4
     f40:	str	r4, [sp, #8]
     f44:	str	lr, [sp, #12]
     f48:	str	ip, [sp, #16]
     f4c:	movw	r5, #5
     f50:	str	r5, [sp, #20]
     f54:	str	r5, [sp, #24]
     f58:	movw	r5, #4
     f5c:	str	r5, [sp, #28]
     f60:	str	r5, [sp, #32]
     f64:	str	r4, [sp, #36]	; 0x24
     f68:	str	r5, [sp, #40]	; 0x28
     f6c:	movw	r5, #6
     f70:	str	r5, [sp, #44]	; 0x2c
     f74:	movw	r6, #1
     f78:	str	r6, [sp, #48]	; 0x30
     f7c:	str	r6, [sp, #52]	; 0x34
     f80:	str	ip, [sp, #56]	; 0x38
     f84:	str	r5, [sp, #60]	; 0x3c
     f88:	str	r5, [sp, #64]	; 0x40
     f8c:	ldr	ip, [fp, #-32]	; 0xffffffe0
     f90:	str	ip, [sp, #68]	; 0x44
     f94:	str	r4, [sp, #72]	; 0x48
     f98:	str	r6, [sp, #76]	; 0x4c
     f9c:	bl	0 <_g>
     fa0:	str	r0, [fp, #-24]	; 0xffffffe8
     fa4:	movw	r0, #0
     fa8:	movt	r0, #0
     fac:	bl	0 <printf>
     fb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
     fb4:	str	r0, [fp, #-40]	; 0xffffffd8
     fb8:	mov	r0, r1
     fbc:	mvn	r1, #3
     fc0:	bl	0 <v_grau>
     fc4:	cmn	r0, #1
     fc8:	beq	fe4 <teste_v_grau+0xec>
     fcc:	movw	r0, #0
     fd0:	movt	r0, #0
     fd4:	bl	0 <printf>
     fd8:	ldr	r1, [fp, #-20]	; 0xffffffec
     fdc:	add	r1, r1, #1
     fe0:	str	r1, [fp, #-20]	; 0xffffffec
     fe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     fe8:	movw	r1, #7
     fec:	bl	0 <v_grau>
     ff0:	cmp	r0, #3
     ff4:	beq	1010 <teste_v_grau+0x118>
     ff8:	movw	r0, #0
     ffc:	movt	r0, #0
    1000:	bl	0 <printf>
    1004:	ldr	r1, [fp, #-20]	; 0xffffffec
    1008:	add	r1, r1, #1
    100c:	str	r1, [fp, #-20]	; 0xffffffec
    1010:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1014:	movw	r1, #5
    1018:	bl	0 <v_grau>
    101c:	cmp	r0, #2
    1020:	beq	103c <teste_v_grau+0x144>
    1024:	movw	r0, #0
    1028:	movt	r0, #0
    102c:	bl	0 <printf>
    1030:	ldr	r1, [fp, #-20]	; 0xffffffec
    1034:	add	r1, r1, #1
    1038:	str	r1, [fp, #-20]	; 0xffffffec
    103c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1040:	bl	0 <grafo_apaga>
    1044:	ldr	r0, [fp, #-20]	; 0xffffffec
    1048:	cmp	r0, #0
    104c:	bne	1060 <teste_v_grau+0x168>
    1050:	movw	r0, #0
    1054:	movt	r0, #0
    1058:	bl	0 <printf>
    105c:	b	106c <teste_v_grau+0x174>
    1060:	movw	r0, #0
    1064:	movt	r0, #0
    1068:	bl	0 <printf>
    106c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1070:	sub	sp, fp, #16
    1074:	pop	{r4, r5, r6, sl, fp, pc}

00001078 <teste_v_celebridade>:
    1078:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    107c:	add	fp, sp, #24
    1080:	sub	sp, sp, #136	; 0x88
    1084:	movw	r0, #0
    1088:	str	r0, [fp, #-28]	; 0xffffffe4
    108c:	movw	r1, #8
    1090:	str	r0, [fp, #-36]	; 0xffffffdc
    1094:	mov	r0, r1
    1098:	movw	r1, #30
    109c:	movw	r2, #3
    10a0:	str	r2, [fp, #-40]	; 0xffffffd8
    10a4:	movw	r3, #2
    10a8:	str	r3, [fp, #-44]	; 0xffffffd4
    10ac:	movw	ip, #7
    10b0:	str	ip, [sp]
    10b4:	ldr	lr, [fp, #-44]	; 0xffffffd4
    10b8:	str	lr, [sp, #4]
    10bc:	ldr	r4, [fp, #-36]	; 0xffffffdc
    10c0:	str	r4, [sp, #8]
    10c4:	str	lr, [sp, #12]
    10c8:	str	ip, [sp, #16]
    10cc:	movw	r5, #5
    10d0:	str	r5, [sp, #20]
    10d4:	str	r5, [sp, #24]
    10d8:	movw	r6, #4
    10dc:	str	r6, [sp, #28]
    10e0:	str	r6, [sp, #32]
    10e4:	str	r4, [sp, #36]	; 0x24
    10e8:	str	r6, [sp, #40]	; 0x28
    10ec:	movw	r7, #6
    10f0:	str	r7, [sp, #44]	; 0x2c
    10f4:	movw	r8, #1
    10f8:	str	r8, [sp, #48]	; 0x30
    10fc:	str	r8, [sp, #52]	; 0x34
    1100:	str	ip, [sp, #56]	; 0x38
    1104:	str	r7, [sp, #60]	; 0x3c
    1108:	str	r7, [sp, #64]	; 0x40
    110c:	ldr	ip, [fp, #-40]	; 0xffffffd8
    1110:	str	ip, [sp, #68]	; 0x44
    1114:	str	r4, [sp, #72]	; 0x48
    1118:	str	r8, [sp, #76]	; 0x4c
    111c:	str	r8, [sp, #80]	; 0x50
    1120:	str	lr, [sp, #84]	; 0x54
    1124:	str	r7, [sp, #88]	; 0x58
    1128:	str	lr, [sp, #92]	; 0x5c
    112c:	str	r6, [sp, #96]	; 0x60
    1130:	str	lr, [sp, #100]	; 0x64
    1134:	str	r5, [sp, #104]	; 0x68
    1138:	str	lr, [sp, #108]	; 0x6c
    113c:	bl	0 <_g>
    1140:	str	r0, [fp, #-32]	; 0xffffffe0
    1144:	movw	r0, #0
    1148:	movt	r0, #0
    114c:	bl	0 <printf>
    1150:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1154:	str	r0, [fp, #-48]	; 0xffffffd0
    1158:	mov	r0, r1
    115c:	movw	r1, #7
    1160:	bl	0 <v_celebridade>
    1164:	cmp	r0, #0
    1168:	beq	1184 <teste_v_celebridade+0x10c>
    116c:	movw	r0, #0
    1170:	movt	r0, #0
    1174:	bl	0 <printf>
    1178:	ldr	r1, [fp, #-28]	; 0xffffffe4
    117c:	add	r1, r1, #1
    1180:	str	r1, [fp, #-28]	; 0xffffffe4
    1184:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1188:	movw	r1, #2
    118c:	bl	0 <v_celebridade>
    1190:	cmp	r0, #1
    1194:	beq	11b0 <teste_v_celebridade+0x138>
    1198:	movw	r0, #0
    119c:	movt	r0, #0
    11a0:	bl	0 <printf>
    11a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    11a8:	add	r1, r1, #1
    11ac:	str	r1, [fp, #-28]	; 0xffffffe4
    11b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    11b4:	bl	0 <grafo_apaga>
    11b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    11bc:	cmp	r0, #0
    11c0:	bne	11d4 <teste_v_celebridade+0x15c>
    11c4:	movw	r0, #0
    11c8:	movt	r0, #0
    11cc:	bl	0 <printf>
    11d0:	b	11e0 <teste_v_celebridade+0x168>
    11d4:	movw	r0, #0
    11d8:	movt	r0, #0
    11dc:	bl	0 <printf>
    11e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    11e4:	sub	sp, fp, #24
    11e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000011ec <main>:
    11ec:	push	{fp, lr}
    11f0:	mov	fp, sp
    11f4:	sub	sp, sp, #24
    11f8:	movw	r0, #0
    11fc:	str	r0, [fp, #-4]
    1200:	movw	r1, #0
    1204:	movt	r1, #0
    1208:	ldr	r1, [r1]
    120c:	str	r0, [sp, #12]
    1210:	mov	r0, r1
    1214:	ldr	r1, [sp, #12]
    1218:	movw	r2, #2
    121c:	ldr	r3, [sp, #12]
    1220:	bl	0 <setvbuf>
    1224:	movw	r1, #0
    1228:	movt	r1, #0
    122c:	ldr	r1, [r1]
    1230:	str	r0, [sp, #8]
    1234:	mov	r0, r1
    1238:	movw	r1, #0
    123c:	str	r1, [sp, #4]
    1240:	movw	r2, #2
    1244:	ldr	r3, [sp, #4]
    1248:	bl	0 <setvbuf>
    124c:	movw	r1, #0
    1250:	str	r1, [fp, #-8]
    1254:	str	r0, [sp]
    1258:	bl	1cc <teste_grafo_novo>
    125c:	ldr	r1, [fp, #-8]
    1260:	add	r0, r1, r0
    1264:	str	r0, [fp, #-8]
    1268:	bl	360 <teste_grafo_aresta>
    126c:	ldr	r1, [fp, #-8]
    1270:	add	r0, r1, r0
    1274:	str	r0, [fp, #-8]
    1278:	bl	51c <teste_grafo_adiciona>
    127c:	ldr	r1, [fp, #-8]
    1280:	add	r0, r1, r0
    1284:	str	r0, [fp, #-8]
    1288:	bl	7b8 <teste_grafo_remove>
    128c:	ldr	r1, [fp, #-8]
    1290:	add	r0, r1, r0
    1294:	str	r0, [fp, #-8]
    1298:	bl	9a8 <teste_v_sucessores>
    129c:	ldr	r1, [fp, #-8]
    12a0:	add	r0, r1, r0
    12a4:	str	r0, [fp, #-8]
    12a8:	bl	c50 <teste_v_antecessores>
    12ac:	ldr	r1, [fp, #-8]
    12b0:	add	r0, r1, r0
    12b4:	str	r0, [fp, #-8]
    12b8:	bl	ef8 <teste_v_grau>
    12bc:	ldr	r1, [fp, #-8]
    12c0:	add	r0, r1, r0
    12c4:	str	r0, [fp, #-8]
    12c8:	bl	1078 <teste_v_celebridade>
    12cc:	ldr	r1, [fp, #-8]
    12d0:	add	r0, r1, r0
    12d4:	str	r0, [fp, #-8]
    12d8:	ldr	r0, [fp, #-8]
    12dc:	cmp	r0, #0
    12e0:	bne	12f4 <main+0x108>
    12e4:	movw	r0, #0
    12e8:	movt	r0, #0
    12ec:	bl	0 <printf>
    12f0:	b	1304 <main+0x118>
    12f4:	ldr	r1, [fp, #-8]
    12f8:	movw	r0, #0
    12fc:	movt	r0, #0
    1300:	bl	0 <printf>
    1304:	movw	r0, #0
    1308:	mov	sp, fp
    130c:	pop	{fp, pc}
