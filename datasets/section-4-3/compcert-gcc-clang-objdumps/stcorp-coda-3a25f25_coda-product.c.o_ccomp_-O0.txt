
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-product.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <get_file_size>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #104	; 0x68
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	str	r4, [sp, #8]
      14:	str	r5, [sp, #12]
      18:	mov	r5, r1
      1c:	mov	r4, r0
      20:	cmp	r4, #0
      24:	bne	30 <get_file_size+0x30>
      28:	mov	ip, #0
      2c:	b	3c <get_file_size+0x3c>
      30:	cmp	r5, #0
      34:	movne	ip, #1
      38:	moveq	ip, #0
      3c:	cmp	ip, #0
      40:	bne	58 <get_file_size+0x58>
      44:	ldr	r0, [pc, #200]	; 114 <get_file_size+0x114>
      48:	ldr	r1, [pc, #200]	; 118 <get_file_size+0x118>
      4c:	mov	r2, #162	; 0xa2
      50:	ldr	r3, [pc, #184]	; 110 <get_file_size+0x110>
      54:	bl	0 <__assert_fail>
      58:	add	r1, sp, #16
      5c:	mov	r0, r4
      60:	bl	0 <stat>
      64:	cmp	r0, #0
      68:	beq	bc <get_file_size+0xbc>
      6c:	bl	0 <__errno_location>
      70:	ldr	r0, [r0]
      74:	cmp	r0, #2
      78:	beq	a4 <get_file_size+0xa4>
      7c:	bl	0 <__errno_location>
      80:	ldr	r0, [r0]
      84:	bl	0 <strerror>
      88:	mvn	r2, #20
      8c:	ldr	r1, [pc, #140]	; 120 <get_file_size+0x120>
      90:	mov	r3, r0
      94:	mov	r0, r2
      98:	mov	r2, r4
      9c:	bl	0 <coda_set_error>
      a0:	b	b4 <get_file_size+0xb4>
      a4:	mvn	r0, #19
      a8:	ldr	r1, [pc, #92]	; 10c <get_file_size+0x10c>
      ac:	mov	r2, r4
      b0:	bl	0 <coda_set_error>
      b4:	mvn	r0, #0
      b8:	b	f8 <get_file_size+0xf8>
      bc:	ldr	ip, [sp, #32]
      c0:	and	r3, ip, #32768	; 0x8000
      c4:	cmp	r3, #0
      c8:	bne	e4 <get_file_size+0xe4>
      cc:	mvn	r0, #20
      d0:	ldr	r1, [pc, #68]	; 11c <get_file_size+0x11c>
      d4:	mov	r2, r4
      d8:	bl	0 <coda_set_error>
      dc:	mvn	r0, #0
      e0:	b	f8 <get_file_size+0xf8>
      e4:	ldr	r0, [sp, #60]	; 0x3c
      e8:	asr	r1, r0, #31
      ec:	str	r0, [r5]
      f0:	str	r1, [r5, #4]
      f4:	mov	r0, #0
      f8:	ldr	r4, [sp, #8]
      fc:	ldr	r5, [sp, #12]
     100:	ldr	lr, [sp, #4]
     104:	add	sp, sp, #104	; 0x68
     108:	bx	lr
     10c:	.word	0x000000fe
     110:	.word	0x0000037a
     114:	.word	0x0000022e
     118:	.word	0x000002b5
     11c:	.word	0x00000110
     120:	.word	0x000000bb

00000124 <get_format>:
     124:	mov	ip, sp
     128:	sub	sp, sp, #640	; 0x280
     12c:	str	ip, [sp, #8]
     130:	str	lr, [sp, #12]
     134:	str	r4, [sp, #16]
     138:	str	r5, [sp, #20]
     13c:	str	r6, [sp, #24]
     140:	str	r7, [sp, #28]
     144:	str	r8, [sp, #32]
     148:	mov	r5, r1
     14c:	ldr	r4, [r0, #8]
     150:	ldr	r6, [r0, #12]
     154:	add	ip, sp, #120	; 0x78
     158:	mov	r1, r0
     15c:	mov	r0, ip
     160:	bl	0 <coda_cursor_set_product>
     164:	cmp	r0, #0
     168:	beq	174 <get_format+0x50>
     16c:	mvn	r0, #0
     170:	b	938 <get_format+0x814>
     174:	mov	r3, #1
     178:	str	r3, [r5]
     17c:	mov	r0, r4
     180:	mov	r3, r6
     184:	mov	r2, #0
     188:	cmp	r3, r2
     18c:	bne	1a0 <get_format+0x7c>
     190:	mov	r1, #4
     194:	cmp	r0, r1
     198:	bcc	1b0 <get_format+0x8c>
     19c:	b	1b8 <get_format+0x94>
     1a0:	mov	r2, r6
     1a4:	mov	r3, #0
     1a8:	cmp	r2, r3
     1ac:	bge	1b8 <get_format+0x94>
     1b0:	mov	r0, #0
     1b4:	b	938 <get_format+0x814>
     1b8:	add	r0, sp, #120	; 0x78
     1bc:	add	r1, sp, #40	; 0x28
     1c0:	mov	r3, #0
     1c4:	mov	r2, #0
     1c8:	mov	r8, #0
     1cc:	mov	ip, #4
     1d0:	str	r8, [sp, #4]
     1d4:	str	ip, [sp]
     1d8:	bl	0 <coda_cursor_read_bytes>
     1dc:	cmp	r0, #0
     1e0:	beq	1ec <get_format+0xc8>
     1e4:	mvn	r0, #0
     1e8:	b	938 <get_format+0x814>
     1ec:	add	r0, sp, #40	; 0x28
     1f0:	ldr	r1, [pc, #1924]	; 97c <get_format+0x858>
     1f4:	mov	r2, #3
     1f8:	bl	0 <memcmp>
     1fc:	cmp	r0, #0
     200:	bne	258 <get_format+0x134>
     204:	ldrb	r0, [sp, #43]	; 0x2b
     208:	cmp	r0, #1
     20c:	beq	224 <get_format+0x100>
     210:	ldrb	r2, [sp, #43]	; 0x2b
     214:	cmp	r2, #2
     218:	moveq	r2, #1
     21c:	movne	r2, #0
     220:	b	228 <get_format+0x104>
     224:	mov	r2, #1
     228:	cmp	r2, #0
     22c:	bne	250 <get_format+0x12c>
     230:	ldrb	r3, [sp, #43]	; 0x2b
     234:	cmp	r3, #5
     238:	moveq	ip, #1
     23c:	movne	ip, #0
     240:	cmp	ip, #0
     244:	movne	r0, #1
     248:	moveq	r0, #0
     24c:	b	25c <get_format+0x138>
     250:	mov	r0, #1
     254:	b	25c <get_format+0x138>
     258:	mov	r0, #0
     25c:	cmp	r0, #0
     260:	beq	274 <get_format+0x150>
     264:	mov	r0, #6
     268:	str	r0, [r5]
     26c:	mov	r0, #0
     270:	b	938 <get_format+0x814>
     274:	add	r0, sp, #40	; 0x28
     278:	ldr	r1, [pc, #1780]	; 974 <get_format+0x850>
     27c:	mov	r2, #4
     280:	bl	0 <memcmp>
     284:	cmp	r0, #0
     288:	bne	29c <get_format+0x178>
     28c:	mov	r0, #3
     290:	str	r0, [r5]
     294:	mov	r0, #0
     298:	b	938 <get_format+0x814>
     29c:	mov	r1, r4
     2a0:	mov	r3, r6
     2a4:	mov	r2, #0
     2a8:	cmp	r3, r2
     2ac:	bne	2c0 <get_format+0x19c>
     2b0:	mov	r0, #8
     2b4:	cmp	r1, r0
     2b8:	bcc	2d0 <get_format+0x1ac>
     2bc:	b	2e0 <get_format+0x1bc>
     2c0:	mov	r2, r6
     2c4:	mov	r1, #0
     2c8:	cmp	r2, r1
     2cc:	bge	2e0 <get_format+0x1bc>
     2d0:	mov	r1, #1
     2d4:	str	r1, [r5]
     2d8:	mov	r0, #0
     2dc:	b	938 <get_format+0x814>
     2e0:	add	r0, sp, #120	; 0x78
     2e4:	add	r1, sp, #44	; 0x2c
     2e8:	mov	r3, #0
     2ec:	mov	r2, #4
     2f0:	mov	r8, #0
     2f4:	mov	ip, #4
     2f8:	str	r8, [sp, #4]
     2fc:	str	ip, [sp]
     300:	bl	0 <coda_cursor_read_bytes>
     304:	cmp	r0, #0
     308:	beq	314 <get_format+0x1f0>
     30c:	mvn	r0, #0
     310:	b	938 <get_format+0x814>
     314:	add	r0, sp, #40	; 0x28
     318:	ldr	r1, [pc, #1608]	; 968 <get_format+0x844>
     31c:	mov	r2, #8
     320:	bl	0 <memcmp>
     324:	cmp	r0, #0
     328:	bne	33c <get_format+0x218>
     32c:	mov	r0, #4
     330:	str	r0, [r5]
     334:	mov	r0, #0
     338:	b	938 <get_format+0x814>
     33c:	add	r0, sp, #40	; 0x28
     340:	ldr	r1, [pc, #1564]	; 964 <get_format+0x840>
     344:	mov	r2, #8
     348:	bl	0 <memcmp>
     34c:	cmp	r0, #0
     350:	beq	374 <get_format+0x250>
     354:	add	r0, sp, #40	; 0x28
     358:	ldr	r1, [pc, #1568]	; 980 <get_format+0x85c>
     35c:	mov	r2, #8
     360:	bl	0 <memcmp>
     364:	cmp	r0, #0
     368:	moveq	r3, #1
     36c:	movne	r3, #0
     370:	b	378 <get_format+0x254>
     374:	mov	r3, #1
     378:	cmp	r3, #0
     37c:	bne	3a0 <get_format+0x27c>
     380:	add	r0, sp, #40	; 0x28
     384:	ldr	r1, [pc, #1516]	; 978 <get_format+0x854>
     388:	mov	r2, #8
     38c:	bl	0 <memcmp>
     390:	cmp	r0, #0
     394:	moveq	r0, #1
     398:	movne	r0, #0
     39c:	b	3a4 <get_format+0x280>
     3a0:	mov	r0, #1
     3a4:	cmp	r0, #0
     3a8:	bne	3cc <get_format+0x2a8>
     3ac:	add	r0, sp, #40	; 0x28
     3b0:	ldr	r1, [pc, #1484]	; 984 <get_format+0x860>
     3b4:	mov	r2, #8
     3b8:	bl	0 <memcmp>
     3bc:	cmp	r0, #0
     3c0:	moveq	r3, #1
     3c4:	movne	r3, #0
     3c8:	b	3d0 <get_format+0x2ac>
     3cc:	mov	r3, #1
     3d0:	cmp	r3, #0
     3d4:	bne	3f8 <get_format+0x2d4>
     3d8:	add	r0, sp, #40	; 0x28
     3dc:	ldr	r1, [pc, #1420]	; 970 <get_format+0x84c>
     3e0:	mov	r2, #8
     3e4:	bl	0 <memcmp>
     3e8:	cmp	r0, #0
     3ec:	moveq	r3, #1
     3f0:	movne	r3, #0
     3f4:	b	3fc <get_format+0x2d8>
     3f8:	mov	r3, #1
     3fc:	cmp	r3, #0
     400:	beq	414 <get_format+0x2f0>
     404:	mov	ip, #5
     408:	str	ip, [r5]
     40c:	mov	r0, #0
     410:	b	938 <get_format+0x814>
     414:	add	r0, sp, #40	; 0x28
     418:	ldr	r1, [pc, #1344]	; 960 <get_format+0x83c>
     41c:	mov	r2, #4
     420:	bl	0 <memcmp>
     424:	cmp	r0, #0
     428:	bne	468 <get_format+0x344>
     42c:	ldrb	r0, [sp, #47]	; 0x2f
     430:	cmp	r0, #1
     434:	beq	44c <get_format+0x328>
     438:	ldrb	r1, [sp, #47]	; 0x2f
     43c:	cmp	r1, #2
     440:	moveq	r0, #1
     444:	movne	r0, #0
     448:	b	450 <get_format+0x32c>
     44c:	mov	r0, #1
     450:	cmp	r0, #0
     454:	beq	468 <get_format+0x344>
     458:	mov	ip, #7
     45c:	str	ip, [r5]
     460:	mov	r0, #0
     464:	b	938 <get_format+0x814>
     468:	add	r0, sp, #40	; 0x28
     46c:	ldr	r1, [pc, #1272]	; 96c <get_format+0x848>
     470:	mov	r2, #5
     474:	bl	0 <memcmp>
     478:	cmp	r0, #0
     47c:	beq	4a0 <get_format+0x37c>
     480:	add	r0, sp, #40	; 0x28
     484:	ldr	r1, [pc, #1228]	; 958 <get_format+0x834>
     488:	mov	r2, #8
     48c:	bl	0 <memcmp>
     490:	cmp	r0, #0
     494:	moveq	r1, #1
     498:	movne	r1, #0
     49c:	b	4a4 <get_format+0x380>
     4a0:	mov	r1, #1
     4a4:	cmp	r1, #0
     4a8:	beq	4bc <get_format+0x398>
     4ac:	mov	r2, #2
     4b0:	str	r2, [r5]
     4b4:	mov	r0, #0
     4b8:	b	938 <get_format+0x814>
     4bc:	mov	r1, r6
     4c0:	mov	r0, r4
     4c4:	mov	ip, #0
     4c8:	cmp	r1, ip
     4cc:	bne	4e0 <get_format+0x3bc>
     4d0:	mov	r1, #40	; 0x28
     4d4:	cmp	r0, r1
     4d8:	bcc	4ec <get_format+0x3c8>
     4dc:	b	4f4 <get_format+0x3d0>
     4e0:	mov	ip, #0
     4e4:	cmp	r1, ip
     4e8:	bge	4f4 <get_format+0x3d0>
     4ec:	mov	r0, #0
     4f0:	b	938 <get_format+0x814>
     4f4:	add	r0, sp, #120	; 0x78
     4f8:	add	r1, sp, #48	; 0x30
     4fc:	mov	r3, #0
     500:	mov	r2, #8
     504:	mov	r7, #0
     508:	mov	ip, #32
     50c:	str	r7, [sp, #4]
     510:	str	ip, [sp]
     514:	bl	0 <coda_cursor_read_bytes>
     518:	cmp	r0, #0
     51c:	beq	528 <get_format+0x404>
     520:	mvn	r0, #0
     524:	b	938 <get_format+0x814>
     528:	mov	r1, r6
     52c:	mov	r0, r4
     530:	mov	r3, #0
     534:	cmp	r1, r3
     538:	bne	54c <get_format+0x428>
     53c:	mov	r1, #60	; 0x3c
     540:	cmp	r0, r1
     544:	bcs	558 <get_format+0x434>
     548:	b	7f4 <get_format+0x6d0>
     54c:	mov	ip, #0
     550:	cmp	r1, ip
     554:	ble	7f4 <get_format+0x6d0>
     558:	ldrb	ip, [sp, #40]	; 0x28
     55c:	cmp	ip, #35	; 0x23
     560:	bne	5b8 <get_format+0x494>
     564:	ldrb	ip, [sp, #41]	; 0x29
     568:	cmp	ip, #97	; 0x61
     56c:	beq	584 <get_format+0x460>
     570:	ldrb	ip, [sp, #41]	; 0x29
     574:	cmp	ip, #98	; 0x62
     578:	moveq	r2, #1
     57c:	movne	r2, #0
     580:	b	588 <get_format+0x464>
     584:	mov	r2, #1
     588:	cmp	r2, #0
     58c:	bne	5b0 <get_format+0x48c>
     590:	ldrb	r1, [sp, #41]	; 0x29
     594:	cmp	r1, #99	; 0x63
     598:	moveq	r1, #1
     59c:	movne	r1, #0
     5a0:	cmp	r1, #0
     5a4:	movne	r3, #1
     5a8:	moveq	r3, #0
     5ac:	b	5bc <get_format+0x498>
     5b0:	mov	r3, #1
     5b4:	b	5bc <get_format+0x498>
     5b8:	mov	r3, #0
     5bc:	cmp	r3, #0
     5c0:	beq	5f8 <get_format+0x4d4>
     5c4:	ldrb	r3, [sp, #42]	; 0x2a
     5c8:	cmp	r3, #80	; 0x50
     5cc:	beq	5f0 <get_format+0x4cc>
     5d0:	ldrb	r3, [sp, #42]	; 0x2a
     5d4:	cmp	r3, #86	; 0x56
     5d8:	moveq	r3, #1
     5dc:	movne	r3, #0
     5e0:	cmp	r3, #0
     5e4:	movne	r3, #1
     5e8:	moveq	r3, #0
     5ec:	b	5fc <get_format+0x4d8>
     5f0:	mov	r3, #1
     5f4:	b	5fc <get_format+0x4d8>
     5f8:	mov	r3, #0
     5fc:	cmp	r3, #0
     600:	beq	618 <get_format+0x4f4>
     604:	ldrb	r1, [sp, #43]	; 0x2b
     608:	cmp	r1, #48	; 0x30
     60c:	movge	r1, #1
     610:	movlt	r1, #0
     614:	b	61c <get_format+0x4f8>
     618:	mov	r1, #0
     61c:	cmp	r1, #0
     620:	beq	638 <get_format+0x514>
     624:	ldrb	ip, [sp, #43]	; 0x2b
     628:	cmp	ip, #57	; 0x39
     62c:	movle	ip, #1
     630:	movgt	ip, #0
     634:	b	63c <get_format+0x518>
     638:	mov	ip, #0
     63c:	cmp	ip, #0
     640:	beq	658 <get_format+0x534>
     644:	ldrb	r0, [sp, #44]	; 0x2c
     648:	cmp	r0, #48	; 0x30
     64c:	movge	r3, #1
     650:	movlt	r3, #0
     654:	b	65c <get_format+0x538>
     658:	mov	r3, #0
     65c:	cmp	r3, #0
     660:	beq	678 <get_format+0x554>
     664:	ldrb	ip, [sp, #44]	; 0x2c
     668:	cmp	ip, #57	; 0x39
     66c:	movle	r0, #1
     670:	movgt	r0, #0
     674:	b	67c <get_format+0x558>
     678:	mov	r0, #0
     67c:	cmp	r0, #0
     680:	beq	698 <get_format+0x574>
     684:	ldrb	r3, [sp, #45]	; 0x2d
     688:	cmp	r3, #48	; 0x30
     68c:	movge	r2, #1
     690:	movlt	r2, #0
     694:	b	69c <get_format+0x578>
     698:	mov	r2, #0
     69c:	cmp	r2, #0
     6a0:	beq	6b8 <get_format+0x594>
     6a4:	ldrb	r2, [sp, #45]	; 0x2d
     6a8:	cmp	r2, #57	; 0x39
     6ac:	movle	r2, #1
     6b0:	movgt	r2, #0
     6b4:	b	6bc <get_format+0x598>
     6b8:	mov	r2, #0
     6bc:	cmp	r2, #0
     6c0:	beq	6d8 <get_format+0x5b4>
     6c4:	ldrb	r0, [sp, #46]	; 0x2e
     6c8:	cmp	r0, #48	; 0x30
     6cc:	movge	r2, #1
     6d0:	movlt	r2, #0
     6d4:	b	6dc <get_format+0x5b8>
     6d8:	mov	r2, #0
     6dc:	cmp	r2, #0
     6e0:	beq	6f8 <get_format+0x5d4>
     6e4:	ldrb	r1, [sp, #46]	; 0x2e
     6e8:	cmp	r1, #57	; 0x39
     6ec:	movle	r1, #1
     6f0:	movgt	r1, #0
     6f4:	b	6fc <get_format+0x5d8>
     6f8:	mov	r1, #0
     6fc:	cmp	r1, #0
     700:	beq	718 <get_format+0x5f4>
     704:	ldrb	ip, [sp, #47]	; 0x2f
     708:	cmp	ip, #32
     70c:	moveq	r2, #1
     710:	movne	r2, #0
     714:	b	71c <get_format+0x5f8>
     718:	mov	r2, #0
     71c:	cmp	r2, #0
     720:	beq	738 <get_format+0x614>
     724:	ldrb	ip, [sp, #50]	; 0x32
     728:	cmp	ip, #32
     72c:	moveq	r1, #1
     730:	movne	r1, #0
     734:	b	73c <get_format+0x618>
     738:	mov	r1, #0
     73c:	cmp	r1, #0
     740:	beq	758 <get_format+0x634>
     744:	ldrb	r1, [sp, #53]	; 0x35
     748:	cmp	r1, #32
     74c:	moveq	r2, #1
     750:	movne	r2, #0
     754:	b	75c <get_format+0x638>
     758:	mov	r2, #0
     75c:	cmp	r2, #0
     760:	beq	778 <get_format+0x654>
     764:	ldrb	r3, [sp, #56]	; 0x38
     768:	cmp	r3, #32
     76c:	moveq	ip, #1
     770:	movne	ip, #0
     774:	b	77c <get_format+0x658>
     778:	mov	ip, #0
     77c:	cmp	ip, #0
     780:	beq	798 <get_format+0x674>
     784:	ldrb	ip, [sp, #59]	; 0x3b
     788:	cmp	ip, #32
     78c:	moveq	r2, #1
     790:	movne	r2, #0
     794:	b	79c <get_format+0x678>
     798:	mov	r2, #0
     79c:	cmp	r2, #0
     7a0:	beq	7b8 <get_format+0x694>
     7a4:	ldrb	r1, [sp, #71]	; 0x47
     7a8:	cmp	r1, #32
     7ac:	moveq	r2, #1
     7b0:	movne	r2, #0
     7b4:	b	7bc <get_format+0x698>
     7b8:	mov	r2, #0
     7bc:	cmp	r2, #0
     7c0:	beq	7d8 <get_format+0x6b4>
     7c4:	ldrb	r1, [sp, #79]	; 0x4f
     7c8:	cmp	r1, #32
     7cc:	moveq	r0, #1
     7d0:	movne	r0, #0
     7d4:	b	7dc <get_format+0x6b8>
     7d8:	mov	r0, #0
     7dc:	cmp	r0, #0
     7e0:	beq	7f4 <get_format+0x6d0>
     7e4:	mov	ip, #9
     7e8:	str	ip, [r5]
     7ec:	mov	r0, #0
     7f0:	b	938 <get_format+0x814>
     7f4:	mov	r1, r4
     7f8:	mov	ip, r6
     7fc:	mov	r2, #0
     800:	cmp	ip, r2
     804:	bne	818 <get_format+0x6f4>
     808:	mov	r3, #80	; 0x50
     80c:	cmp	r1, r3
     810:	bcc	828 <get_format+0x704>
     814:	b	830 <get_format+0x70c>
     818:	mov	r0, r6
     81c:	mov	r1, #0
     820:	cmp	r0, r1
     824:	bge	830 <get_format+0x70c>
     828:	mov	r0, #0
     82c:	b	938 <get_format+0x814>
     830:	add	r0, sp, #120	; 0x78
     834:	add	r1, sp, #40	; 0x28
     838:	mov	r3, #0
     83c:	mov	r2, #60	; 0x3c
     840:	mov	r8, #0
     844:	mov	ip, #20
     848:	str	r8, [sp, #4]
     84c:	str	ip, [sp]
     850:	bl	0 <coda_cursor_read_bytes>
     854:	cmp	r0, #0
     858:	beq	864 <get_format+0x740>
     85c:	mvn	r0, #0
     860:	b	938 <get_format+0x814>
     864:	add	r0, sp, #40	; 0x28
     868:	ldr	r1, [pc, #236]	; 95c <get_format+0x838>
     86c:	mov	r2, #20
     870:	bl	0 <memcmp>
     874:	cmp	r0, #0
     878:	bne	88c <get_format+0x768>
     87c:	mov	r0, #8
     880:	str	r0, [r5]
     884:	mov	r0, #0
     888:	b	938 <get_format+0x814>
     88c:	mov	r8, #0
     890:	mov	r7, #512	; 0x200
     894:	mov	r3, #0
     898:	mov	r2, #8
     89c:	adds	r0, r7, r2
     8a0:	adc	r1, r8, r3
     8a4:	mov	r3, r6
     8a8:	cmp	r1, r3
     8ac:	bne	8c0 <get_format+0x79c>
     8b0:	mov	r2, r4
     8b4:	cmp	r0, r2
     8b8:	bcc	8c8 <get_format+0x7a4>
     8bc:	b	934 <get_format+0x810>
     8c0:	cmp	r1, r3
     8c4:	bge	934 <get_format+0x810>
     8c8:	add	r0, sp, #120	; 0x78
     8cc:	add	r1, sp, #40	; 0x28
     8d0:	mov	r2, #0
     8d4:	mov	ip, #8
     8d8:	str	r2, [sp, #4]
     8dc:	str	ip, [sp]
     8e0:	mov	r3, r8
     8e4:	mov	r2, r7
     8e8:	bl	0 <coda_cursor_read_bytes>
     8ec:	cmp	r0, #0
     8f0:	beq	8fc <get_format+0x7d8>
     8f4:	mvn	r0, #0
     8f8:	b	938 <get_format+0x814>
     8fc:	add	r0, sp, #40	; 0x28
     900:	ldr	r1, [pc, #96]	; 968 <get_format+0x844>
     904:	mov	r2, #8
     908:	bl	0 <memcmp>
     90c:	cmp	r0, #0
     910:	bne	924 <get_format+0x800>
     914:	mov	r2, #4
     918:	str	r2, [r5]
     91c:	mov	r0, #0
     920:	b	938 <get_format+0x814>
     924:	lsl	r1, r8, #1
     928:	orr	r8, r1, r7, lsr #31
     92c:	lsl	r7, r7, #1
     930:	b	894 <get_format+0x770>
     934:	mov	r0, #0
     938:	ldr	r4, [sp, #16]
     93c:	ldr	r5, [sp, #20]
     940:	ldr	r6, [sp, #24]
     944:	ldr	r7, [sp, #28]
     948:	ldr	r8, [sp, #32]
     94c:	ldr	lr, [sp, #12]
     950:	add	sp, sp, #640	; 0x280
     954:	bx	lr
     958:	.word	0x000000f5
     95c:	.word	0x00000137
     960:	.word	0x000001b3
     964:	.word	0x00000254
     968:	.word	0x00000371
     96c:	.word	0x00000311
     970:	.word	0x00000286
     974:	.word	0x00000317
     978:	.word	0x0000008a
     97c:	.word	0x000001af
     980:	.word	0x00000225
     984:	.word	0x000001fa

00000988 <reopen_with_backend>:
     988:	mov	ip, sp
     98c:	sub	sp, sp, #8
     990:	str	ip, [sp]
     994:	str	lr, [sp, #4]
     998:	cmp	r1, #10
     99c:	bcs	a90 <reopen_with_backend+0x108>
     9a0:	add	pc, pc, r1, lsl #2
     9a4:	nop	{0}
     9a8:	b	9d0 <reopen_with_backend+0x48>
     9ac:	b	a90 <reopen_with_backend+0x108>
     9b0:	b	9f0 <reopen_with_backend+0x68>
     9b4:	b	a04 <reopen_with_backend+0x7c>
     9b8:	b	a18 <reopen_with_backend+0x90>
     9bc:	b	a2c <reopen_with_backend+0xa4>
     9c0:	b	a40 <reopen_with_backend+0xb8>
     9c4:	b	a54 <reopen_with_backend+0xcc>
     9c8:	b	a68 <reopen_with_backend+0xe0>
     9cc:	b	a7c <reopen_with_backend+0xf4>
     9d0:	ldr	r0, [pc, #204]	; aa4 <reopen_with_backend+0x11c>
     9d4:	ldr	r1, [pc, #204]	; aa8 <reopen_with_backend+0x120>
     9d8:	movw	r2, #362	; 0x16a
     9dc:	ldr	r3, [pc, #188]	; aa0 <reopen_with_backend+0x118>
     9e0:	bl	0 <__assert_fail>
     9e4:	mov	r0, #1
     9e8:	bl	0 <exit>
     9ec:	b	a90 <reopen_with_backend+0x108>
     9f0:	bl	0 <coda_xml_reopen>
     9f4:	cmp	r0, #0
     9f8:	beq	a90 <reopen_with_backend+0x108>
     9fc:	mvn	r0, #0
     a00:	b	a94 <reopen_with_backend+0x10c>
     a04:	mvn	r0, #10
     a08:	mov	r1, #0
     a0c:	bl	0 <coda_set_error>
     a10:	mvn	r0, #0
     a14:	b	a94 <reopen_with_backend+0x10c>
     a18:	mvn	r0, #12
     a1c:	mov	r1, #0
     a20:	bl	0 <coda_set_error>
     a24:	mvn	r0, #0
     a28:	b	a94 <reopen_with_backend+0x10c>
     a2c:	bl	0 <coda_cdf_reopen>
     a30:	cmp	r0, #0
     a34:	beq	a90 <reopen_with_backend+0x108>
     a38:	mvn	r0, #0
     a3c:	b	a94 <reopen_with_backend+0x10c>
     a40:	bl	0 <coda_netcdf_reopen>
     a44:	cmp	r0, #0
     a48:	beq	a90 <reopen_with_backend+0x108>
     a4c:	mvn	r0, #0
     a50:	b	a94 <reopen_with_backend+0x10c>
     a54:	bl	0 <coda_grib_reopen>
     a58:	cmp	r0, #0
     a5c:	beq	a90 <reopen_with_backend+0x108>
     a60:	mvn	r0, #0
     a64:	b	a94 <reopen_with_backend+0x10c>
     a68:	bl	0 <coda_rinex_reopen>
     a6c:	cmp	r0, #0
     a70:	beq	a90 <reopen_with_backend+0x108>
     a74:	mvn	r0, #0
     a78:	b	a94 <reopen_with_backend+0x10c>
     a7c:	bl	0 <coda_sp3_reopen>
     a80:	cmp	r0, #0
     a84:	beq	a90 <reopen_with_backend+0x108>
     a88:	mvn	r0, #0
     a8c:	b	a94 <reopen_with_backend+0x10c>
     a90:	mov	r0, #0
     a94:	ldr	lr, [sp, #4]
     a98:	add	sp, sp, #8
     a9c:	bx	lr
     aa0:	.word	0x00000388
     aa4:	.word	0x0000031c
     aa8:	.word	0x000002b5

00000aac <set_definition>:
     aac:	mov	ip, sp
     ab0:	sub	sp, sp, #24
     ab4:	str	ip, [sp, #4]
     ab8:	str	lr, [sp, #8]
     abc:	str	r4, [sp, #16]
     ac0:	str	r5, [sp, #20]
     ac4:	mov	r4, r1
     ac8:	mov	r5, r0
     acc:	cmp	r4, #0
     ad0:	bne	b24 <set_definition+0x78>
     ad4:	ldr	r0, [r5]
     ad8:	ldr	r2, [r0, #16]
     adc:	cmp	r2, #1
     ae0:	beq	afc <set_definition+0x50>
     ae4:	ldr	r0, [r5]
     ae8:	ldr	r0, [r0, #16]
     aec:	cmp	r0, #0
     af0:	moveq	r0, #1
     af4:	movne	r0, #0
     af8:	b	b00 <set_definition+0x54>
     afc:	mov	r0, #1
     b00:	cmp	r0, #0
     b04:	beq	b1c <set_definition+0x70>
     b08:	mvn	r0, #199	; 0xc7
     b0c:	mov	r1, #0
     b10:	bl	0 <coda_set_error>
     b14:	mvn	r0, #0
     b18:	b	d24 <set_definition+0x278>
     b1c:	mov	r0, #0
     b20:	b	d24 <set_definition+0x278>
     b24:	ldr	r3, [r5]
     b28:	ldr	r2, [r3, #16]
     b2c:	ldr	ip, [r4]
     b30:	cmp	r2, ip
     b34:	beq	b70 <set_definition+0xc4>
     b38:	ldr	ip, [r5]
     b3c:	ldr	r2, [ip, #16]
     b40:	cmp	r2, #1
     b44:	bne	b5c <set_definition+0xb0>
     b48:	ldr	ip, [r4]
     b4c:	cmp	ip, #0
     b50:	moveq	r1, #1
     b54:	movne	r1, #0
     b58:	b	b60 <set_definition+0xb4>
     b5c:	mov	r1, #0
     b60:	cmp	r1, #0
     b64:	moveq	ip, #1
     b68:	movne	ip, #0
     b6c:	b	b74 <set_definition+0xc8>
     b70:	mov	ip, #0
     b74:	cmp	ip, #0
     b78:	beq	bb4 <set_definition+0x108>
     b7c:	ldr	r0, [r4]
     b80:	bl	0 <coda_type_get_format_name>
     b84:	mov	r4, r0
     b88:	ldr	r0, [r5]
     b8c:	ldr	r0, [r0, #16]
     b90:	bl	0 <coda_type_get_format_name>
     b94:	mvn	r2, #199	; 0xc7
     b98:	ldr	r1, [pc, #412]	; d3c <set_definition+0x290>
     b9c:	mov	r3, r0
     ba0:	mov	r0, r2
     ba4:	mov	r2, r4
     ba8:	bl	0 <coda_set_error>
     bac:	mvn	r0, #0
     bb0:	b	d24 <set_definition+0x278>
     bb4:	ldr	r3, [r4, #24]
     bb8:	cmp	r3, #0
     bbc:	bne	bd8 <set_definition+0x12c>
     bc0:	mov	r0, r4
     bc4:	bl	0 <coda_read_product_definition>
     bc8:	cmp	r0, #0
     bcc:	beq	bd8 <set_definition+0x12c>
     bd0:	mvn	r0, #0
     bd4:	b	d24 <set_definition+0x278>
     bd8:	ldr	r2, [r4]
     bdc:	cmp	r2, #0
     be0:	beq	c38 <set_definition+0x18c>
     be4:	cmp	r2, #1
     be8:	beq	c1c <set_definition+0x170>
     bec:	cmp	r2, #2
     bf0:	bne	c10 <set_definition+0x164>
     bf4:	mov	r1, r4
     bf8:	mov	r0, r5
     bfc:	bl	0 <coda_xml_reopen_with_definition>
     c00:	cmp	r0, #0
     c04:	beq	c54 <set_definition+0x1a8>
     c08:	mvn	r0, #0
     c0c:	b	d24 <set_definition+0x278>
     c10:	ldr	r2, [r5]
     c14:	str	r4, [r2, #24]
     c18:	b	c54 <set_definition+0x1a8>
     c1c:	mov	r1, r4
     c20:	mov	r0, r5
     c24:	bl	0 <coda_bin_reopen_with_definition>
     c28:	cmp	r0, #0
     c2c:	beq	c54 <set_definition+0x1a8>
     c30:	mvn	r0, #0
     c34:	b	d24 <set_definition+0x278>
     c38:	mov	r1, r4
     c3c:	mov	r0, r5
     c40:	bl	0 <coda_ascii_reopen_with_definition>
     c44:	cmp	r0, #0
     c48:	beq	c54 <set_definition+0x1a8>
     c4c:	mvn	r0, #0
     c50:	b	d24 <set_definition+0x278>
     c54:	ldr	r3, [r5]
     c58:	ldr	r1, [r3, #24]
     c5c:	ldr	r0, [r1, #32]
     c60:	cmp	r0, #0
     c64:	ble	d20 <set_definition+0x274>
     c68:	ldr	ip, [r5]
     c6c:	ldr	r2, [ip, #24]
     c70:	ldr	r4, [r2, #32]
     c74:	lsl	r0, r4, #2
     c78:	bl	0 <malloc>
     c7c:	ldr	r1, [r5]
     c80:	str	r0, [r1, #28]
     c84:	ldr	r2, [r5]
     c88:	ldr	r1, [r2, #28]
     c8c:	cmp	r1, #0
     c90:	bne	cb8 <set_definition+0x20c>
     c94:	mvn	r0, #0
     c98:	ldr	r1, [pc, #152]	; d38 <set_definition+0x28c>
     c9c:	lsl	r2, r4, #2
     ca0:	ldr	r3, [pc, #152]	; d40 <set_definition+0x294>
     ca4:	mov	ip, #500	; 0x1f4
     ca8:	str	ip, [sp]
     cac:	bl	0 <coda_set_error>
     cb0:	mvn	r0, #0
     cb4:	b	d24 <set_definition+0x278>
     cb8:	lsl	r0, r4, #2
     cbc:	bl	0 <malloc>
     cc0:	ldr	r3, [r5]
     cc4:	str	r0, [r3, #32]
     cc8:	ldr	r1, [r5]
     ccc:	ldr	r0, [r1, #32]
     cd0:	cmp	r0, #0
     cd4:	bne	cfc <set_definition+0x250>
     cd8:	mvn	r0, #0
     cdc:	ldr	r1, [pc, #84]	; d38 <set_definition+0x28c>
     ce0:	lsl	r2, r4, #2
     ce4:	ldr	r3, [pc, #84]	; d40 <set_definition+0x294>
     ce8:	movw	ip, #507	; 0x1fb
     cec:	str	ip, [sp]
     cf0:	bl	0 <coda_set_error>
     cf4:	mvn	r0, #0
     cf8:	b	d24 <set_definition+0x278>
     cfc:	mov	r1, #0
     d00:	cmp	r1, r4
     d04:	bge	d20 <set_definition+0x274>
     d08:	ldr	r3, [r5]
     d0c:	ldr	ip, [r3, #32]
     d10:	mov	r3, #0
     d14:	str	r3, [ip, r1, lsl #2]
     d18:	add	r1, r1, #1
     d1c:	b	d00 <set_definition+0x254>
     d20:	mov	r0, #0
     d24:	ldr	r4, [sp, #16]
     d28:	ldr	r5, [sp, #20]
     d2c:	ldr	lr, [sp, #8]
     d30:	add	sp, sp, #24
     d34:	bx	lr
     d38:	.word	0x0000031e
     d3c:	.word	0x00000093
     d40:	.word	0x000002b5

00000d44 <open_file>:
     d44:	mov	ip, sp
     d48:	sub	sp, sp, #48	; 0x30
     d4c:	str	ip, [sp, #4]
     d50:	str	lr, [sp, #8]
     d54:	str	r4, [sp, #16]
     d58:	str	r5, [sp, #20]
     d5c:	str	r6, [sp, #24]
     d60:	mov	r6, r2
     d64:	mov	r5, r1
     d68:	mov	r4, r0
     d6c:	add	r1, sp, #40	; 0x28
     d70:	mov	r0, r4
     d74:	bl	0 <get_file_size>
     d78:	cmp	r0, #0
     d7c:	beq	d88 <open_file+0x44>
     d80:	mvn	r0, #0
     d84:	b	e0c <open_file+0xc8>
     d88:	ldr	r2, [sp, #40]	; 0x28
     d8c:	ldr	r3, [sp, #44]	; 0x2c
     d90:	add	r0, sp, #36	; 0x24
     d94:	str	r0, [sp]
     d98:	mov	r0, r4
     d9c:	bl	0 <coda_bin_open>
     da0:	cmp	r0, #0
     da4:	beq	db0 <open_file+0x6c>
     da8:	mvn	r0, #0
     dac:	b	e0c <open_file+0xc8>
     db0:	cmp	r6, #0
     db4:	bne	ddc <open_file+0x98>
     db8:	ldr	r0, [sp, #36]	; 0x24
     dbc:	add	r1, sp, #32
     dc0:	bl	124 <get_format>
     dc4:	cmp	r0, #0
     dc8:	beq	de4 <open_file+0xa0>
     dcc:	ldr	r0, [sp, #36]	; 0x24
     dd0:	bl	1210 <coda_close>
     dd4:	mvn	r0, #0
     dd8:	b	e0c <open_file+0xc8>
     ddc:	mov	r0, #1
     de0:	str	r0, [sp, #32]
     de4:	add	r0, sp, #36	; 0x24
     de8:	ldr	r1, [sp, #32]
     dec:	bl	988 <reopen_with_backend>
     df0:	cmp	r0, #0
     df4:	beq	e00 <open_file+0xbc>
     df8:	mvn	r0, #0
     dfc:	b	e0c <open_file+0xc8>
     e00:	ldr	ip, [sp, #36]	; 0x24
     e04:	str	ip, [r5]
     e08:	mov	r0, #0
     e0c:	ldr	r4, [sp, #16]
     e10:	ldr	r5, [sp, #20]
     e14:	ldr	r6, [sp, #24]
     e18:	ldr	lr, [sp, #8]
     e1c:	add	sp, sp, #48	; 0x30
     e20:	bx	lr

00000e24 <coda_recognize_file>:
     e24:	mov	ip, sp
     e28:	sub	sp, sp, #40	; 0x28
     e2c:	str	ip, [sp]
     e30:	str	lr, [sp, #4]
     e34:	str	r4, [sp, #8]
     e38:	str	r5, [sp, #12]
     e3c:	str	r6, [sp, #16]
     e40:	str	r7, [sp, #20]
     e44:	str	r8, [sp, #24]
     e48:	ldr	r8, [ip, #4]
     e4c:	ldr	r7, [ip]
     e50:	mov	r4, r3
     e54:	mov	r5, r2
     e58:	mov	r6, r1
     e5c:	mov	r2, #0
     e60:	str	r2, [sp, #32]
     e64:	add	r1, sp, #36	; 0x24
     e68:	mov	r2, #0
     e6c:	bl	d44 <open_file>
     e70:	cmp	r0, #0
     e74:	beq	e80 <coda_recognize_file+0x5c>
     e78:	mvn	r0, #0
     e7c:	b	f7c <coda_recognize_file+0x158>
     e80:	ldr	r0, [sp, #36]	; 0x24
     e84:	add	r1, sp, #32
     e88:	bl	0 <coda_data_dictionary_find_definition_for_product>
     e8c:	cmp	r0, #0
     e90:	beq	ea4 <coda_recognize_file+0x80>
     e94:	ldr	r0, [sp, #36]	; 0x24
     e98:	bl	1210 <coda_close>
     e9c:	mvn	r0, #0
     ea0:	b	f7c <coda_recognize_file+0x158>
     ea4:	cmp	r6, #0
     ea8:	beq	ec0 <coda_recognize_file+0x9c>
     eac:	ldr	r3, [sp, #36]	; 0x24
     eb0:	ldr	r1, [r3, #8]
     eb4:	ldr	r0, [r3, #12]
     eb8:	str	r1, [r6]
     ebc:	str	r0, [r6, #4]
     ec0:	ldr	r2, [sp, #32]
     ec4:	cmp	r2, #0
     ec8:	beq	f2c <coda_recognize_file+0x108>
     ecc:	cmp	r5, #0
     ed0:	beq	ee0 <coda_recognize_file+0xbc>
     ed4:	ldr	r1, [sp, #32]
     ed8:	ldr	r3, [r1]
     edc:	str	r3, [r5]
     ee0:	cmp	r4, #0
     ee4:	beq	efc <coda_recognize_file+0xd8>
     ee8:	ldr	ip, [sp, #32]
     eec:	ldr	r0, [ip, #44]	; 0x2c
     ef0:	ldr	r0, [r0, #20]
     ef4:	ldr	r1, [r0]
     ef8:	str	r1, [r4]
     efc:	cmp	r7, #0
     f00:	beq	f14 <coda_recognize_file+0xf0>
     f04:	ldr	r2, [sp, #32]
     f08:	ldr	r0, [r2, #44]	; 0x2c
     f0c:	ldr	r2, [r0]
     f10:	str	r2, [r7]
     f14:	cmp	r8, #0
     f18:	beq	f70 <coda_recognize_file+0x14c>
     f1c:	ldr	ip, [sp, #32]
     f20:	ldr	r3, [ip, #4]
     f24:	str	r3, [r8]
     f28:	b	f70 <coda_recognize_file+0x14c>
     f2c:	cmp	r5, #0
     f30:	beq	f40 <coda_recognize_file+0x11c>
     f34:	ldr	r3, [sp, #36]	; 0x24
     f38:	ldr	r3, [r3, #16]
     f3c:	str	r3, [r5]
     f40:	cmp	r4, #0
     f44:	beq	f50 <coda_recognize_file+0x12c>
     f48:	mov	r1, #0
     f4c:	str	r1, [r4]
     f50:	cmp	r7, #0
     f54:	beq	f60 <coda_recognize_file+0x13c>
     f58:	mov	r1, #0
     f5c:	str	r1, [r7]
     f60:	cmp	r8, #0
     f64:	beq	f70 <coda_recognize_file+0x14c>
     f68:	mvn	r2, #0
     f6c:	str	r2, [r8]
     f70:	ldr	r0, [sp, #36]	; 0x24
     f74:	bl	1210 <coda_close>
     f78:	mov	r0, #0
     f7c:	ldr	r4, [sp, #8]
     f80:	ldr	r5, [sp, #12]
     f84:	ldr	r6, [sp, #16]
     f88:	ldr	r7, [sp, #20]
     f8c:	ldr	r8, [sp, #24]
     f90:	ldr	lr, [sp, #4]
     f94:	add	sp, sp, #40	; 0x28
     f98:	bx	lr

00000f9c <coda_open>:
     f9c:	mov	ip, sp
     fa0:	sub	sp, sp, #24
     fa4:	str	ip, [sp]
     fa8:	str	lr, [sp, #4]
     fac:	str	r4, [sp, #8]
     fb0:	mov	r4, r1
     fb4:	mov	r1, #0
     fb8:	str	r1, [sp, #16]
     fbc:	cmp	r0, #0
     fc0:	bne	fe0 <coda_open+0x44>
     fc4:	mvn	r0, #99	; 0x63
     fc8:	ldr	r1, [pc, #188]	; 108c <coda_open+0xf0>
     fcc:	ldr	r2, [pc, #180]	; 1088 <coda_open+0xec>
     fd0:	mov	r3, #668	; 0x29c
     fd4:	bl	0 <coda_set_error>
     fd8:	mvn	r0, #0
     fdc:	b	1074 <coda_open+0xd8>
     fe0:	cmp	r4, #0
     fe4:	bne	1004 <coda_open+0x68>
     fe8:	mvn	r0, #99	; 0x63
     fec:	ldr	r1, [pc, #144]	; 1084 <coda_open+0xe8>
     ff0:	ldr	r2, [pc, #144]	; 1088 <coda_open+0xec>
     ff4:	movw	r3, #673	; 0x2a1
     ff8:	bl	0 <coda_set_error>
     ffc:	mvn	r0, #0
    1000:	b	1074 <coda_open+0xd8>
    1004:	add	r1, sp, #20
    1008:	mov	r2, #0
    100c:	bl	d44 <open_file>
    1010:	cmp	r0, #0
    1014:	beq	1020 <coda_open+0x84>
    1018:	mvn	r0, #0
    101c:	b	1074 <coda_open+0xd8>
    1020:	ldr	r0, [sp, #20]
    1024:	add	r1, sp, #16
    1028:	bl	0 <coda_data_dictionary_find_definition_for_product>
    102c:	cmp	r0, #0
    1030:	beq	1044 <coda_open+0xa8>
    1034:	ldr	r0, [sp, #20]
    1038:	bl	1210 <coda_close>
    103c:	mvn	r0, #0
    1040:	b	1074 <coda_open+0xd8>
    1044:	add	r0, sp, #20
    1048:	ldr	r1, [sp, #16]
    104c:	bl	aac <set_definition>
    1050:	cmp	r0, #0
    1054:	beq	1068 <coda_open+0xcc>
    1058:	ldr	r0, [sp, #20]
    105c:	bl	1210 <coda_close>
    1060:	mvn	r0, #0
    1064:	b	1074 <coda_open+0xd8>
    1068:	ldr	r0, [sp, #20]
    106c:	str	r0, [r4]
    1070:	mov	r0, #0
    1074:	ldr	r4, [sp, #8]
    1078:	ldr	lr, [sp, #4]
    107c:	add	sp, sp, #24
    1080:	bx	lr
    1084:	.word	0x00000021
    1088:	.word	0x000002b5
    108c:	.word	0x000001d8

00001090 <coda_open_as>:
    1090:	mov	ip, sp
    1094:	sub	sp, sp, #32
    1098:	str	ip, [sp]
    109c:	str	lr, [sp, #4]
    10a0:	str	r4, [sp, #8]
    10a4:	str	r5, [sp, #12]
    10a8:	str	r6, [sp, #16]
    10ac:	ldr	r6, [ip]
    10b0:	mov	r5, r0
    10b4:	mov	r0, r1
    10b8:	mov	r1, r2
    10bc:	mov	r2, r3
    10c0:	mov	ip, #0
    10c4:	str	ip, [sp, #24]
    10c8:	mov	r4, #0
    10cc:	cmp	r5, #0
    10d0:	bne	10f0 <coda_open_as+0x60>
    10d4:	mvn	r0, #99	; 0x63
    10d8:	ldr	r1, [pc, #300]	; 120c <coda_open_as+0x17c>
    10dc:	ldr	r2, [pc, #288]	; 1204 <coda_open_as+0x174>
    10e0:	movw	r3, #719	; 0x2cf
    10e4:	bl	0 <coda_set_error>
    10e8:	mvn	r0, #0
    10ec:	b	11e8 <coda_open_as+0x158>
    10f0:	cmp	r0, #0
    10f4:	beq	1140 <coda_open_as+0xb0>
    10f8:	cmp	r1, #0
    10fc:	bne	111c <coda_open_as+0x8c>
    1100:	mvn	r0, #99	; 0x63
    1104:	ldr	r1, [pc, #252]	; 1208 <coda_open_as+0x178>
    1108:	ldr	r2, [pc, #244]	; 1204 <coda_open_as+0x174>
    110c:	movw	r3, #726	; 0x2d6
    1110:	bl	0 <coda_set_error>
    1114:	mvn	r0, #0
    1118:	b	11e8 <coda_open_as+0x158>
    111c:	cmp	r6, #0
    1120:	bne	1140 <coda_open_as+0xb0>
    1124:	mvn	r0, #99	; 0x63
    1128:	ldr	r1, [pc, #208]	; 1200 <coda_open_as+0x170>
    112c:	ldr	r2, [pc, #208]	; 1204 <coda_open_as+0x174>
    1130:	movw	r3, #731	; 0x2db
    1134:	bl	0 <coda_set_error>
    1138:	mvn	r0, #0
    113c:	b	11e8 <coda_open_as+0x158>
    1140:	cmp	r0, #0
    1144:	beq	1198 <coda_open_as+0x108>
    1148:	add	r3, sp, #24
    114c:	bl	0 <coda_data_dictionary_get_definition>
    1150:	cmp	r0, #0
    1154:	beq	1160 <coda_open_as+0xd0>
    1158:	mvn	r0, #0
    115c:	b	11e8 <coda_open_as+0x158>
    1160:	ldr	r1, [sp, #24]
    1164:	cmp	r1, #0
    1168:	beq	1198 <coda_open_as+0x108>
    116c:	ldr	r1, [sp, #24]
    1170:	ldr	r3, [r1]
    1174:	cmp	r3, #0
    1178:	beq	1194 <coda_open_as+0x104>
    117c:	ldr	r2, [sp, #24]
    1180:	ldr	r3, [r2]
    1184:	cmp	r3, #1
    1188:	moveq	r4, #1
    118c:	movne	r4, #0
    1190:	b	1198 <coda_open_as+0x108>
    1194:	mov	r4, #1
    1198:	add	r1, sp, #28
    119c:	mov	r2, r4
    11a0:	mov	r0, r5
    11a4:	bl	d44 <open_file>
    11a8:	cmp	r0, #0
    11ac:	beq	11b8 <coda_open_as+0x128>
    11b0:	mvn	r0, #0
    11b4:	b	11e8 <coda_open_as+0x158>
    11b8:	add	r0, sp, #28
    11bc:	ldr	r1, [sp, #24]
    11c0:	bl	aac <set_definition>
    11c4:	cmp	r0, #0
    11c8:	beq	11dc <coda_open_as+0x14c>
    11cc:	ldr	r0, [sp, #28]
    11d0:	bl	1210 <coda_close>
    11d4:	mvn	r0, #0
    11d8:	b	11e8 <coda_open_as+0x158>
    11dc:	ldr	r3, [sp, #28]
    11e0:	str	r3, [r6]
    11e4:	mov	r0, #0
    11e8:	ldr	r4, [sp, #8]
    11ec:	ldr	r5, [sp, #12]
    11f0:	ldr	r6, [sp, #16]
    11f4:	ldr	lr, [sp, #4]
    11f8:	add	sp, sp, #32
    11fc:	bx	lr
    1200:	.word	0x00000021
    1204:	.word	0x000002b5
    1208:	.word	0x00000064
    120c:	.word	0x000001d8

00001210 <coda_close>:
    1210:	mov	ip, sp
    1214:	sub	sp, sp, #24
    1218:	str	ip, [sp]
    121c:	str	lr, [sp, #4]
    1220:	str	r4, [sp, #8]
    1224:	str	r5, [sp, #12]
    1228:	str	r6, [sp, #16]
    122c:	mov	r5, r0
    1230:	cmp	r5, #0
    1234:	bne	1254 <coda_close+0x44>
    1238:	mvn	r0, #99	; 0x63
    123c:	ldr	r1, [pc, #416]	; 13e4 <coda_close+0x1d4>
    1240:	ldr	r2, [pc, #420]	; 13ec <coda_close+0x1dc>
    1244:	movw	r3, #777	; 0x309
    1248:	bl	0 <coda_set_error>
    124c:	mvn	r4, #0
    1250:	b	13c4 <coda_close+0x1b4>
    1254:	ldr	r0, [r5, #28]
    1258:	cmp	r0, #0
    125c:	beq	1270 <coda_close+0x60>
    1260:	ldr	r0, [r5, #28]
    1264:	bl	0 <free>
    1268:	mov	r3, #0
    126c:	str	r3, [r5, #28]
    1270:	ldr	r2, [r5, #32]
    1274:	cmp	r2, #0
    1278:	beq	12c4 <coda_close+0xb4>
    127c:	mov	r6, #0
    1280:	ldr	r1, [r5, #24]
    1284:	ldr	ip, [r1, #32]
    1288:	cmp	r6, ip
    128c:	bge	12b4 <coda_close+0xa4>
    1290:	ldr	r1, [r5, #32]
    1294:	ldr	r2, [r1, r6, lsl #2]
    1298:	cmp	r2, #0
    129c:	beq	12ac <coda_close+0x9c>
    12a0:	ldr	r3, [r5, #32]
    12a4:	ldr	r0, [r3, r6, lsl #2]
    12a8:	bl	0 <free>
    12ac:	add	r6, r6, #1
    12b0:	b	1280 <coda_close+0x70>
    12b4:	ldr	r0, [r5, #32]
    12b8:	bl	0 <free>
    12bc:	mov	r1, #0
    12c0:	str	r1, [r5, #32]
    12c4:	ldr	r0, [r5, #16]
    12c8:	cmp	r0, #10
    12cc:	bcs	13a8 <coda_close+0x198>
    12d0:	add	pc, pc, r0, lsl #2
    12d4:	nop	{0}
    12d8:	b	1300 <coda_close+0xf0>
    12dc:	b	1310 <coda_close+0x100>
    12e0:	b	1320 <coda_close+0x110>
    12e4:	b	1360 <coda_close+0x150>
    12e8:	b	1374 <coda_close+0x164>
    12ec:	b	1330 <coda_close+0x120>
    12f0:	b	1340 <coda_close+0x130>
    12f4:	b	1350 <coda_close+0x140>
    12f8:	b	1388 <coda_close+0x178>
    12fc:	b	1398 <coda_close+0x188>
    1300:	mov	r0, r5
    1304:	bl	0 <coda_ascii_close>
    1308:	mov	r4, r0
    130c:	b	13c4 <coda_close+0x1b4>
    1310:	mov	r0, r5
    1314:	bl	0 <coda_bin_close>
    1318:	mov	r4, r0
    131c:	b	13c4 <coda_close+0x1b4>
    1320:	mov	r0, r5
    1324:	bl	0 <coda_xml_close>
    1328:	mov	r4, r0
    132c:	b	13c4 <coda_close+0x1b4>
    1330:	mov	r0, r5
    1334:	bl	0 <coda_cdf_close>
    1338:	mov	r4, r0
    133c:	b	13c4 <coda_close+0x1b4>
    1340:	mov	r0, r5
    1344:	bl	0 <coda_netcdf_close>
    1348:	mov	r4, r0
    134c:	b	13c4 <coda_close+0x1b4>
    1350:	mov	r0, r5
    1354:	bl	0 <coda_grib_close>
    1358:	mov	r4, r0
    135c:	b	13c4 <coda_close+0x1b4>
    1360:	mvn	r0, #10
    1364:	mov	r1, #0
    1368:	bl	0 <coda_set_error>
    136c:	mvn	r4, #0
    1370:	b	13c4 <coda_close+0x1b4>
    1374:	mvn	r0, #12
    1378:	mov	r1, #0
    137c:	bl	0 <coda_set_error>
    1380:	mvn	r4, #0
    1384:	b	13c4 <coda_close+0x1b4>
    1388:	mov	r0, r5
    138c:	bl	0 <coda_rinex_close>
    1390:	mov	r4, r0
    1394:	b	13c4 <coda_close+0x1b4>
    1398:	mov	r0, r5
    139c:	bl	0 <coda_sp3_close>
    13a0:	mov	r4, r0
    13a4:	b	13c4 <coda_close+0x1b4>
    13a8:	ldr	r0, [pc, #48]	; 13e0 <coda_close+0x1d0>
    13ac:	ldr	r1, [pc, #56]	; 13ec <coda_close+0x1dc>
    13b0:	mov	r2, #836	; 0x344
    13b4:	ldr	r3, [pc, #44]	; 13e8 <coda_close+0x1d8>
    13b8:	bl	0 <__assert_fail>
    13bc:	mov	r0, #1
    13c0:	bl	0 <exit>
    13c4:	mov	r0, r4
    13c8:	ldr	r4, [sp, #8]
    13cc:	ldr	r5, [sp, #12]
    13d0:	ldr	r6, [sp, #16]
    13d4:	ldr	lr, [sp, #4]
    13d8:	add	sp, sp, #24
    13dc:	bx	lr
    13e0:	.word	0x0000031c
    13e4:	.word	0x0000028f
    13e8:	.word	0x0000039c
    13ec:	.word	0x000002b5

000013f0 <coda_get_product_filename>:
    13f0:	mov	ip, sp
    13f4:	sub	sp, sp, #8
    13f8:	str	ip, [sp]
    13fc:	str	lr, [sp, #4]
    1400:	cmp	r0, #0
    1404:	bne	1424 <coda_get_product_filename+0x34>
    1408:	mvn	r0, #99	; 0x63
    140c:	ldr	r1, [pc, #40]	; 143c <coda_get_product_filename+0x4c>
    1410:	ldr	r2, [pc, #40]	; 1440 <coda_get_product_filename+0x50>
    1414:	mov	r3, #856	; 0x358
    1418:	bl	0 <coda_set_error>
    141c:	mvn	r0, #0
    1420:	b	1430 <coda_get_product_filename+0x40>
    1424:	ldr	r2, [r0]
    1428:	str	r2, [r1]
    142c:	mov	r0, #0
    1430:	ldr	lr, [sp, #4]
    1434:	add	sp, sp, #8
    1438:	bx	lr
    143c:	.word	0x0000028f
    1440:	.word	0x000002b5

00001444 <coda_get_product_file_size>:
    1444:	mov	ip, sp
    1448:	sub	sp, sp, #8
    144c:	str	ip, [sp]
    1450:	str	lr, [sp, #4]
    1454:	cmp	r0, #0
    1458:	bne	1478 <coda_get_product_file_size+0x34>
    145c:	mvn	r0, #99	; 0x63
    1460:	ldr	r1, [pc, #84]	; 14bc <coda_get_product_file_size+0x78>
    1464:	ldr	r2, [pc, #88]	; 14c4 <coda_get_product_file_size+0x80>
    1468:	mov	r3, #876	; 0x36c
    146c:	bl	0 <coda_set_error>
    1470:	mvn	r0, #0
    1474:	b	14b0 <coda_get_product_file_size+0x6c>
    1478:	cmp	r1, #0
    147c:	bne	149c <coda_get_product_file_size+0x58>
    1480:	mvn	r0, #99	; 0x63
    1484:	ldr	r1, [pc, #52]	; 14c0 <coda_get_product_file_size+0x7c>
    1488:	ldr	r2, [pc, #52]	; 14c4 <coda_get_product_file_size+0x80>
    148c:	movw	r3, #881	; 0x371
    1490:	bl	0 <coda_set_error>
    1494:	mvn	r0, #0
    1498:	b	14b0 <coda_get_product_file_size+0x6c>
    149c:	ldr	r2, [r0, #8]
    14a0:	ldr	r3, [r0, #12]
    14a4:	str	r2, [r1]
    14a8:	str	r3, [r1, #4]
    14ac:	mov	r0, #0
    14b0:	ldr	lr, [sp, #4]
    14b4:	add	sp, sp, #8
    14b8:	bx	lr
    14bc:	.word	0x0000028f
    14c0:	.word	0x000000d2
    14c4:	.word	0x000002b5

000014c8 <coda_get_product_format>:
    14c8:	mov	ip, sp
    14cc:	sub	sp, sp, #8
    14d0:	str	ip, [sp]
    14d4:	str	lr, [sp, #4]
    14d8:	cmp	r0, #0
    14dc:	bne	14fc <coda_get_product_format+0x34>
    14e0:	mvn	r0, #99	; 0x63
    14e4:	ldr	r1, [pc, #80]	; 153c <coda_get_product_format+0x74>
    14e8:	ldr	r2, [pc, #80]	; 1540 <coda_get_product_format+0x78>
    14ec:	mov	r3, #904	; 0x388
    14f0:	bl	0 <coda_set_error>
    14f4:	mvn	r0, #0
    14f8:	b	152c <coda_get_product_format+0x64>
    14fc:	cmp	r1, #0
    1500:	bne	1520 <coda_get_product_format+0x58>
    1504:	mvn	r0, #99	; 0x63
    1508:	ldr	r1, [pc, #40]	; 1538 <coda_get_product_format+0x70>
    150c:	ldr	r2, [pc, #44]	; 1540 <coda_get_product_format+0x78>
    1510:	movw	r3, #909	; 0x38d
    1514:	bl	0 <coda_set_error>
    1518:	mvn	r0, #0
    151c:	b	152c <coda_get_product_format+0x64>
    1520:	ldr	r3, [r0, #16]
    1524:	str	r3, [r1]
    1528:	mov	r0, #0
    152c:	ldr	lr, [sp, #4]
    1530:	add	sp, sp, #8
    1534:	bx	lr
    1538:	.word	0x000001b8
    153c:	.word	0x0000028f
    1540:	.word	0x000002b5

00001544 <coda_get_product_class>:
    1544:	mov	ip, sp
    1548:	sub	sp, sp, #8
    154c:	str	ip, [sp]
    1550:	str	lr, [sp, #4]
    1554:	cmp	r0, #0
    1558:	bne	1578 <coda_get_product_class+0x34>
    155c:	mvn	r0, #99	; 0x63
    1560:	ldr	r1, [pc, #112]	; 15d8 <coda_get_product_class+0x94>
    1564:	ldr	r2, [pc, #116]	; 15e0 <coda_get_product_class+0x9c>
    1568:	movw	r3, #933	; 0x3a5
    156c:	bl	0 <coda_set_error>
    1570:	mvn	r0, #0
    1574:	b	15cc <coda_get_product_class+0x88>
    1578:	cmp	r1, #0
    157c:	bne	159c <coda_get_product_class+0x58>
    1580:	mvn	r0, #99	; 0x63
    1584:	ldr	r1, [pc, #80]	; 15dc <coda_get_product_class+0x98>
    1588:	ldr	r2, [pc, #80]	; 15e0 <coda_get_product_class+0x9c>
    158c:	movw	r3, #938	; 0x3aa
    1590:	bl	0 <coda_set_error>
    1594:	mvn	r0, #0
    1598:	b	15cc <coda_get_product_class+0x88>
    159c:	ldr	ip, [r0, #24]
    15a0:	cmp	ip, #0
    15a4:	beq	15c0 <coda_get_product_class+0x7c>
    15a8:	ldr	r2, [r0, #24]
    15ac:	ldr	r2, [r2, #44]	; 0x2c
    15b0:	ldr	r0, [r2, #20]
    15b4:	ldr	r2, [r0]
    15b8:	str	r2, [r1]
    15bc:	b	15c8 <coda_get_product_class+0x84>
    15c0:	mov	r3, #0
    15c4:	str	r3, [r1]
    15c8:	mov	r0, #0
    15cc:	ldr	lr, [sp, #4]
    15d0:	add	sp, sp, #8
    15d4:	bx	lr
    15d8:	.word	0x0000028f
    15dc:	.word	0x0000014c
    15e0:	.word	0x000002b5

000015e4 <coda_get_product_type>:
    15e4:	mov	ip, sp
    15e8:	sub	sp, sp, #8
    15ec:	str	ip, [sp]
    15f0:	str	lr, [sp, #4]
    15f4:	cmp	r0, #0
    15f8:	bne	1618 <coda_get_product_type+0x34>
    15fc:	mvn	r0, #99	; 0x63
    1600:	ldr	r1, [pc, #108]	; 1674 <coda_get_product_type+0x90>
    1604:	ldr	r2, [pc, #108]	; 1678 <coda_get_product_type+0x94>
    1608:	movw	r3, #969	; 0x3c9
    160c:	bl	0 <coda_set_error>
    1610:	mvn	r0, #0
    1614:	b	1668 <coda_get_product_type+0x84>
    1618:	cmp	r1, #0
    161c:	bne	163c <coda_get_product_type+0x58>
    1620:	mvn	r0, #99	; 0x63
    1624:	ldr	r1, [pc, #80]	; 167c <coda_get_product_type+0x98>
    1628:	ldr	r2, [pc, #72]	; 1678 <coda_get_product_type+0x94>
    162c:	movw	r3, #974	; 0x3ce
    1630:	bl	0 <coda_set_error>
    1634:	mvn	r0, #0
    1638:	b	1668 <coda_get_product_type+0x84>
    163c:	ldr	r2, [r0, #24]
    1640:	cmp	r2, #0
    1644:	beq	165c <coda_get_product_type+0x78>
    1648:	ldr	r2, [r0, #24]
    164c:	ldr	r0, [r2, #44]	; 0x2c
    1650:	ldr	r2, [r0]
    1654:	str	r2, [r1]
    1658:	b	1664 <coda_get_product_type+0x80>
    165c:	mov	r2, #0
    1660:	str	r2, [r1]
    1664:	mov	r0, #0
    1668:	ldr	lr, [sp, #4]
    166c:	add	sp, sp, #8
    1670:	bx	lr
    1674:	.word	0x0000028f
    1678:	.word	0x000002b5
    167c:	.word	0x00000064

00001680 <coda_get_product_version>:
    1680:	mov	ip, sp
    1684:	sub	sp, sp, #8
    1688:	str	ip, [sp]
    168c:	str	lr, [sp, #4]
    1690:	cmp	r0, #0
    1694:	bne	16b4 <coda_get_product_version+0x34>
    1698:	mvn	r0, #99	; 0x63
    169c:	ldr	r1, [pc, #104]	; 170c <coda_get_product_version+0x8c>
    16a0:	ldr	r2, [pc, #104]	; 1710 <coda_get_product_version+0x90>
    16a4:	movw	r3, #1003	; 0x3eb
    16a8:	bl	0 <coda_set_error>
    16ac:	mvn	r0, #0
    16b0:	b	1700 <coda_get_product_version+0x80>
    16b4:	cmp	r1, #0
    16b8:	bne	16d8 <coda_get_product_version+0x58>
    16bc:	mvn	r0, #99	; 0x63
    16c0:	ldr	r1, [pc, #76]	; 1714 <coda_get_product_version+0x94>
    16c4:	ldr	r2, [pc, #68]	; 1710 <coda_get_product_version+0x90>
    16c8:	mov	r3, #1008	; 0x3f0
    16cc:	bl	0 <coda_set_error>
    16d0:	mvn	r0, #0
    16d4:	b	1700 <coda_get_product_version+0x80>
    16d8:	ldr	r2, [r0, #24]
    16dc:	cmp	r2, #0
    16e0:	beq	16f4 <coda_get_product_version+0x74>
    16e4:	ldr	r3, [r0, #24]
    16e8:	ldr	ip, [r3, #4]
    16ec:	str	ip, [r1]
    16f0:	b	16fc <coda_get_product_version+0x7c>
    16f4:	mvn	r0, #0
    16f8:	str	r0, [r1]
    16fc:	mov	r0, #0
    1700:	ldr	lr, [sp, #4]
    1704:	add	sp, sp, #8
    1708:	bx	lr
    170c:	.word	0x0000028f
    1710:	.word	0x000002b5
    1714:	.word	0x00000000

00001718 <coda_get_product_root_type>:
    1718:	mov	ip, sp
    171c:	sub	sp, sp, #8
    1720:	str	ip, [sp]
    1724:	str	lr, [sp, #4]
    1728:	cmp	r0, #0
    172c:	bne	174c <coda_get_product_root_type+0x34>
    1730:	mvn	r0, #99	; 0x63
    1734:	ldr	r1, [pc, #168]	; 17e4 <coda_get_product_root_type+0xcc>
    1738:	ldr	r2, [pc, #168]	; 17e8 <coda_get_product_root_type+0xd0>
    173c:	movw	r3, #1043	; 0x413
    1740:	bl	0 <coda_set_error>
    1744:	mvn	r0, #0
    1748:	b	17d8 <coda_get_product_root_type+0xc0>
    174c:	cmp	r1, #0
    1750:	bne	1770 <coda_get_product_root_type+0x58>
    1754:	mvn	r0, #99	; 0x63
    1758:	ldr	r1, [pc, #140]	; 17ec <coda_get_product_root_type+0xd4>
    175c:	ldr	r2, [pc, #132]	; 17e8 <coda_get_product_root_type+0xd0>
    1760:	movw	r3, #1048	; 0x418
    1764:	bl	0 <coda_set_error>
    1768:	mvn	r0, #0
    176c:	b	17d8 <coda_get_product_root_type+0xc0>
    1770:	ldr	r2, [r0, #24]
    1774:	cmp	r2, #0
    1778:	beq	1794 <coda_get_product_root_type+0x7c>
    177c:	ldr	r2, [r0, #24]
    1780:	ldr	r2, [r2, #28]
    1784:	cmp	r2, #0
    1788:	movne	r2, #1
    178c:	moveq	r2, #0
    1790:	b	1798 <coda_get_product_root_type+0x80>
    1794:	mov	r2, #0
    1798:	cmp	r2, #0
    179c:	bne	17c8 <coda_get_product_root_type+0xb0>
    17a0:	ldr	r2, [r0, #20]
    17a4:	ldr	r3, [r2]
    17a8:	cmp	r3, #100	; 0x64
    17ac:	blt	17bc <coda_get_product_root_type+0xa4>
    17b0:	ldr	r2, [r0, #20]
    17b4:	ldr	ip, [r2, #4]
    17b8:	b	17c0 <coda_get_product_root_type+0xa8>
    17bc:	ldr	ip, [r0, #20]
    17c0:	str	ip, [r1]
    17c4:	b	17d4 <coda_get_product_root_type+0xbc>
    17c8:	ldr	ip, [r0, #24]
    17cc:	ldr	r2, [ip, #28]
    17d0:	str	r2, [r1]
    17d4:	mov	r0, #0
    17d8:	ldr	lr, [sp, #4]
    17dc:	add	sp, sp, #8
    17e0:	bx	lr
    17e4:	.word	0x0000028f
    17e8:	.word	0x000002b5
    17ec:	.word	0x00000353

000017f0 <coda_get_product_definition_file>:
    17f0:	mov	ip, sp
    17f4:	sub	sp, sp, #8
    17f8:	str	ip, [sp]
    17fc:	str	lr, [sp, #4]
    1800:	cmp	r0, #0
    1804:	bne	1824 <coda_get_product_definition_file+0x34>
    1808:	mvn	r0, #99	; 0x63
    180c:	ldr	r1, [pc, #112]	; 1884 <coda_get_product_definition_file+0x94>
    1810:	ldr	r2, [pc, #112]	; 1888 <coda_get_product_definition_file+0x98>
    1814:	movw	r3, #1080	; 0x438
    1818:	bl	0 <coda_set_error>
    181c:	mvn	r0, #0
    1820:	b	1878 <coda_get_product_definition_file+0x88>
    1824:	cmp	r1, #0
    1828:	bne	1848 <coda_get_product_definition_file+0x58>
    182c:	mvn	r0, #99	; 0x63
    1830:	ldr	r1, [pc, #84]	; 188c <coda_get_product_definition_file+0x9c>
    1834:	ldr	r2, [pc, #76]	; 1888 <coda_get_product_definition_file+0x98>
    1838:	movw	r3, #1085	; 0x43d
    183c:	bl	0 <coda_set_error>
    1840:	mvn	r0, #0
    1844:	b	1878 <coda_get_product_definition_file+0x88>
    1848:	ldr	ip, [r0, #24]
    184c:	cmp	ip, #0
    1850:	beq	186c <coda_get_product_definition_file+0x7c>
    1854:	ldr	r2, [r0, #24]
    1858:	ldr	r2, [r2, #44]	; 0x2c
    185c:	ldr	r0, [r2, #20]
    1860:	ldr	r2, [r0, #8]
    1864:	str	r2, [r1]
    1868:	b	1874 <coda_get_product_definition_file+0x84>
    186c:	mov	r3, #0
    1870:	str	r3, [r1]
    1874:	mov	r0, #0
    1878:	ldr	lr, [sp, #4]
    187c:	add	sp, sp, #8
    1880:	bx	lr
    1884:	.word	0x0000028f
    1888:	.word	0x000002b5
    188c:	.word	0x0000025d

00001890 <coda_get_product_variable_value>:
    1890:	mov	ip, sp
    1894:	sub	sp, sp, #32
    1898:	str	ip, [sp]
    189c:	str	lr, [sp, #4]
    18a0:	str	r4, [sp, #8]
    18a4:	str	r5, [sp, #12]
    18a8:	str	r6, [sp, #16]
    18ac:	str	r7, [sp, #20]
    18b0:	mov	r7, r3
    18b4:	mov	r4, r2
    18b8:	mov	r5, r1
    18bc:	mov	r6, r0
    18c0:	cmp	r6, #0
    18c4:	bne	18e4 <coda_get_product_variable_value+0x54>
    18c8:	mvn	r0, #99	; 0x63
    18cc:	ldr	r1, [pc, #256]	; 19d4 <coda_get_product_variable_value+0x144>
    18d0:	ldr	r2, [pc, #260]	; 19dc <coda_get_product_variable_value+0x14c>
    18d4:	movw	r3, #1124	; 0x464
    18d8:	bl	0 <coda_set_error>
    18dc:	mvn	r0, #0
    18e0:	b	19b8 <coda_get_product_variable_value+0x128>
    18e4:	cmp	r5, #0
    18e8:	bne	1908 <coda_get_product_variable_value+0x78>
    18ec:	mvn	r0, #99	; 0x63
    18f0:	ldr	r1, [pc, #232]	; 19e0 <coda_get_product_variable_value+0x150>
    18f4:	ldr	r2, [pc, #224]	; 19dc <coda_get_product_variable_value+0x14c>
    18f8:	movw	r3, #1129	; 0x469
    18fc:	bl	0 <coda_set_error>
    1900:	mvn	r0, #0
    1904:	b	19b8 <coda_get_product_variable_value+0x128>
    1908:	add	r2, sp, #28
    190c:	mov	r1, r5
    1910:	mov	r0, r6
    1914:	bl	0 <coda_product_variable_get_size>
    1918:	cmp	r0, #0
    191c:	beq	1938 <coda_get_product_variable_value+0xa8>
    1920:	mvn	r0, #101	; 0x65
    1924:	ldr	r1, [pc, #184]	; 19e4 <coda_get_product_variable_value+0x154>
    1928:	mov	r2, r5
    192c:	bl	0 <coda_set_error>
    1930:	mvn	r0, #0
    1934:	b	19b8 <coda_get_product_variable_value+0x128>
    1938:	cmp	r4, #0
    193c:	blt	1954 <coda_get_product_variable_value+0xc4>
    1940:	ldr	r3, [sp, #28]
    1944:	cmp	r4, r3
    1948:	movge	r0, #1
    194c:	movlt	r0, #0
    1950:	b	1958 <coda_get_product_variable_value+0xc8>
    1954:	mov	r0, #1
    1958:	cmp	r0, #0
    195c:	beq	197c <coda_get_product_variable_value+0xec>
    1960:	mvn	r0, #100	; 0x64
    1964:	ldr	r1, [pc, #108]	; 19d8 <coda_get_product_variable_value+0x148>
    1968:	mov	r3, r5
    196c:	mov	r2, r4
    1970:	bl	0 <coda_set_error>
    1974:	mvn	r0, #0
    1978:	b	19b8 <coda_get_product_variable_value+0x128>
    197c:	add	r3, sp, #24
    1980:	mov	r2, r4
    1984:	mov	r1, r5
    1988:	mov	r0, r6
    198c:	bl	0 <coda_product_variable_get_pointer>
    1990:	cmp	r0, #0
    1994:	beq	19a0 <coda_get_product_variable_value+0x110>
    1998:	mvn	r0, #0
    199c:	b	19b8 <coda_get_product_variable_value+0x128>
    19a0:	ldr	ip, [sp, #24]
    19a4:	ldr	r1, [ip]
    19a8:	ldr	ip, [ip, #4]
    19ac:	str	r1, [r7]
    19b0:	str	ip, [r7, #4]
    19b4:	mov	r0, #0
    19b8:	ldr	r4, [sp, #8]
    19bc:	ldr	r5, [sp, #12]
    19c0:	ldr	r6, [sp, #16]
    19c4:	ldr	r7, [sp, #20]
    19c8:	ldr	lr, [sp, #4]
    19cc:	add	sp, sp, #32
    19d0:	bx	lr
    19d4:	.word	0x0000028f
    19d8:	.word	0x00000173
    19dc:	.word	0x000002b5
    19e0:	.word	0x00000203
    19e4:	.word	0x00000042
