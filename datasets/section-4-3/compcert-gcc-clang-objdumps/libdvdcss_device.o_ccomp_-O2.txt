
../repos/libdvdcss/src/.libs/device.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <dvdcss_use_ioctls>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #112	; 0x70
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	add	lr, r0, #4096	; 0x1000
  14:	ldr	r1, [lr, #76]	; 0x4c
  18:	cmp	r1, #0
  1c:	beq	28 <dvdcss_use_ioctls+0x28>
  20:	mov	r0, #0
  24:	b	68 <dvdcss_use_ioctls+0x68>
  28:	ldr	r0, [r0, #4]
  2c:	add	r1, sp, #8
  30:	bl	0 <fstat>
  34:	cmp	r0, #0
  38:	bge	44 <dvdcss_use_ioctls+0x44>
  3c:	mov	r0, #1
  40:	b	68 <dvdcss_use_ioctls+0x68>
  44:	ldr	r0, [sp, #24]
  48:	and	r0, r0, #61440	; 0xf000
  4c:	cmp	r0, #24576	; 0x6000
  50:	beq	64 <dvdcss_use_ioctls+0x64>
  54:	cmp	r0, #8192	; 0x2000
  58:	beq	64 <dvdcss_use_ioctls+0x64>
  5c:	mov	r0, #0
  60:	b	68 <dvdcss_use_ioctls+0x68>
  64:	mov	r0, #1
  68:	ldr	lr, [sp, #4]
  6c:	add	sp, sp, #112	; 0x70
  70:	bx	lr

00000074 <dvdcss_check_device>:
  74:	mov	ip, sp
  78:	sub	sp, sp, #40	; 0x28
  7c:	str	ip, [sp]
  80:	str	lr, [sp, #4]
  84:	str	r4, [sp, #8]
  88:	str	r5, [sp, #12]
  8c:	str	r6, [sp, #16]
  90:	mov	r4, r0
  94:	ldr	r2, [pc, #204]	; 168 <dvdcss_check_device+0xf4>
  98:	str	r2, [sp, #24]
  9c:	ldr	r3, [pc, #200]	; 16c <dvdcss_check_device+0xf8>
  a0:	str	r3, [sp, #28]
  a4:	ldr	r1, [pc, #204]	; 178 <dvdcss_check_device+0x104>
  a8:	str	r1, [sp, #32]
  ac:	mov	r1, #0
  b0:	str	r1, [sp, #36]	; 0x24
  b4:	ldr	r0, [r4]
  b8:	cmp	r0, #0
  bc:	beq	cc <dvdcss_check_device+0x58>
  c0:	ldrb	r0, [r0]
  c4:	cmp	r0, #0
  c8:	bne	150 <dvdcss_check_device+0xdc>
  cc:	add	lr, r4, #4096	; 0x1000
  d0:	ldr	r1, [lr, #76]	; 0x4c
  d4:	cmp	r1, #0
  d8:	bne	150 <dvdcss_check_device+0xdc>
  dc:	mov	r6, #0
  e0:	add	ip, sp, #24
  e4:	ldr	r0, [ip, r6, lsl #2]
  e8:	cmp	r0, #0
  ec:	beq	144 <dvdcss_check_device+0xd0>
  f0:	mov	r1, #0
  f4:	bl	0 <open>
  f8:	mov	r5, r0
  fc:	cmn	r5, #1
 100:	beq	13c <dvdcss_check_device+0xc8>
 104:	ldr	r1, [pc, #100]	; 170 <dvdcss_check_device+0xfc>
 108:	add	r2, sp, #24
 10c:	ldr	r2, [r2, r6, lsl #2]
 110:	mov	r0, r4
 114:	bl	0 <print_debug>
 118:	mov	r0, r5
 11c:	bl	0 <close>
 120:	ldr	r0, [r4]
 124:	bl	0 <free>
 128:	add	ip, sp, #24
 12c:	ldr	r0, [ip, r6, lsl #2]
 130:	bl	0 <strdup>
 134:	str	r0, [r4]
 138:	b	150 <dvdcss_check_device+0xdc>
 13c:	add	r6, r6, #1
 140:	b	e0 <dvdcss_check_device+0x6c>
 144:	ldr	r1, [pc, #40]	; 174 <dvdcss_check_device+0x100>
 148:	mov	r0, r4
 14c:	bl	0 <print_error>
 150:	ldr	r4, [sp, #8]
 154:	ldr	r5, [sp, #12]
 158:	ldr	r6, [sp, #16]
 15c:	ldr	lr, [sp, #4]
 160:	add	sp, sp, #40	; 0x28
 164:	bx	lr
 168:	.word	0x0000007c
 16c:	.word	0x0000010b
 170:	.word	0x00000099
 174:	.word	0x000000b2
 178:	.word	0x00000085

0000017c <dvdcss_open_device>:
 17c:	mov	ip, sp
 180:	sub	sp, sp, #16
 184:	str	ip, [sp]
 188:	str	lr, [sp, #4]
 18c:	str	r4, [sp, #8]
 190:	str	r5, [sp, #12]
 194:	mov	r5, r0
 198:	ldr	r0, [pc, #256]	; 2a0 <dvdcss_open_device+0x124>
 19c:	bl	0 <getenv>
 1a0:	mov	r4, r0
 1a4:	cmp	r4, #0
 1a8:	bne	1b0 <dvdcss_open_device+0x34>
 1ac:	ldr	r4, [r5]
 1b0:	ldr	r1, [pc, #208]	; 288 <dvdcss_open_device+0x10c>
 1b4:	mov	r2, r4
 1b8:	mov	r0, r5
 1bc:	bl	0 <print_debug>
 1c0:	add	lr, r5, #4096	; 0x1000
 1c4:	ldr	r2, [lr, #76]	; 0x4c
 1c8:	cmp	r2, #0
 1cc:	beq	20c <dvdcss_open_device+0x90>
 1d0:	ldr	r1, [pc, #216]	; 2b0 <dvdcss_open_device+0x134>
 1d4:	mov	r0, r5
 1d8:	bl	0 <print_debug>
 1dc:	ldr	ip, [pc, #180]	; 298 <dvdcss_open_device+0x11c>
 1e0:	str	ip, [r5, #12]
 1e4:	ldr	r2, [pc, #176]	; 29c <dvdcss_open_device+0x120>
 1e8:	str	r2, [r5, #16]
 1ec:	ldr	r1, [pc, #176]	; 2a4 <dvdcss_open_device+0x128>
 1f0:	str	r1, [r5, #20]
 1f4:	mov	r0, #0
 1f8:	ldr	r4, [sp, #8]
 1fc:	ldr	r5, [sp, #12]
 200:	ldr	lr, [sp, #4]
 204:	add	sp, sp, #16
 208:	bx	lr
 20c:	ldr	r1, [pc, #128]	; 294 <dvdcss_open_device+0x118>
 210:	mov	r0, r5
 214:	bl	0 <print_debug>
 218:	ldr	r3, [pc, #108]	; 28c <dvdcss_open_device+0x110>
 21c:	str	r3, [r5, #12]
 220:	ldr	ip, [pc, #132]	; 2ac <dvdcss_open_device+0x130>
 224:	str	ip, [r5, #16]
 228:	ldr	r0, [pc, #120]	; 2a8 <dvdcss_open_device+0x12c>
 22c:	str	r0, [r5, #20]
 230:	mov	r1, #0
 234:	mov	r0, r4
 238:	bl	0 <open>
 23c:	str	r0, [r5, #4]
 240:	cmn	r0, #1
 244:	bne	270 <dvdcss_open_device+0xf4>
 248:	bl	0 <__errno_location>
 24c:	ldr	r0, [r0]
 250:	bl	0 <strerror>
 254:	ldr	r1, [pc, #52]	; 290 <dvdcss_open_device+0x114>
 258:	mov	r3, r0
 25c:	mov	r2, r4
 260:	mov	r0, r5
 264:	bl	0 <print_error>
 268:	mvn	r0, #0
 26c:	b	274 <dvdcss_open_device+0xf8>
 270:	mov	r0, #0
 274:	ldr	r4, [sp, #8]
 278:	ldr	r5, [sp, #12]
 27c:	ldr	lr, [sp, #4]
 280:	add	sp, sp, #16
 284:	bx	lr
 288:	.word	0x000000da
 28c:	.word	0x00000000
 290:	.word	0x0000001c
 294:	.word	0x0000003a
	...
 2a0:	.word	0x000000f9
	...

000002b4 <dvdcss_close_device>:
 2b4:	mov	ip, sp
 2b8:	sub	sp, sp, #16
 2bc:	str	ip, [sp]
 2c0:	str	lr, [sp, #4]
 2c4:	str	r4, [sp, #8]
 2c8:	str	r5, [sp, #12]
 2cc:	mov	r5, r0
 2d0:	ldr	r0, [r5, #4]
 2d4:	bl	0 <close>
 2d8:	mov	r4, r0
 2dc:	cmp	r4, #0
 2e0:	bge	2f4 <dvdcss_close_device+0x40>
 2e4:	ldr	r1, [pc, #36]	; 310 <dvdcss_close_device+0x5c>
 2e8:	mov	r0, r5
 2ec:	bl	0 <print_error>
 2f0:	b	2f8 <dvdcss_close_device+0x44>
 2f4:	mov	r4, #0
 2f8:	mov	r0, r4
 2fc:	ldr	r4, [sp, #8]
 300:	ldr	r5, [sp, #12]
 304:	ldr	lr, [sp, #4]
 308:	add	sp, sp, #16
 30c:	bx	lr
 310:	.word	0x00000054

00000314 <libc_seek>:
 314:	mov	ip, sp
 318:	sub	sp, sp, #24
 31c:	str	ip, [sp, #4]
 320:	str	lr, [sp, #8]
 324:	str	r4, [sp, #16]
 328:	str	r5, [sp, #20]
 32c:	mov	r4, r0
 330:	mov	r0, r1
 334:	ldr	r2, [r4, #8]
 338:	cmp	r2, r0
 33c:	beq	3b0 <libc_seek+0x9c>
 340:	asr	r1, r0, #31
 344:	lsl	r1, r1, #11
 348:	orr	r3, r1, r0, lsr #21
 34c:	lsl	r2, r0, #11
 350:	ldr	r0, [r4, #4]
 354:	mov	r1, #0
 358:	str	r1, [sp]
 35c:	bl	0 <lseek>
 360:	mov	r5, r0
 364:	mov	r2, r1
 368:	cmp	r2, #0
 36c:	bge	38c <libc_seek+0x78>
 370:	ldr	r1, [pc, #76]	; 3c4 <libc_seek+0xb0>
 374:	mov	r0, r4
 378:	bl	0 <print_error>
 37c:	mvn	r1, #0
 380:	str	r1, [r4, #8]
 384:	mov	r0, r5
 388:	b	3b0 <libc_seek+0x9c>
 38c:	mov	r3, #0
 390:	asr	r0, r2, #31
 394:	lsr	ip, r0, #21
 398:	adds	lr, r5, ip
 39c:	adc	r1, r1, r3
 3a0:	mov	r3, lr
 3a4:	lsr	ip, r3, #11
 3a8:	orr	r0, ip, r1, lsl #21
 3ac:	str	r0, [r4, #8]
 3b0:	ldr	r4, [sp, #16]
 3b4:	ldr	r5, [sp, #20]
 3b8:	ldr	lr, [sp, #8]
 3bc:	add	sp, sp, #24
 3c0:	bx	lr
 3c4:	.word	0x0000008e

000003c8 <stream_seek>:
 3c8:	mov	ip, sp
 3cc:	sub	sp, sp, #16
 3d0:	str	ip, [sp]
 3d4:	str	lr, [sp, #4]
 3d8:	str	r4, [sp, #8]
 3dc:	str	r5, [sp, #12]
 3e0:	mov	r4, r1
 3e4:	mov	r5, r0
 3e8:	asr	r2, r4, #31
 3ec:	mov	r1, r4
 3f0:	lsl	r3, r2, #11
 3f4:	orr	r3, r3, r1, lsr #21
 3f8:	lsl	r2, r1, #11
 3fc:	add	lr, r5, #4096	; 0x1000
 400:	ldr	ip, [lr, #80]	; 0x50
 404:	ldr	ip, [ip]
 408:	cmp	ip, #0
 40c:	bne	418 <stream_seek+0x50>
 410:	mvn	r0, #0
 414:	b	464 <stream_seek+0x9c>
 418:	ldr	r1, [r5, #8]
 41c:	cmp	r1, r4
 420:	bne	42c <stream_seek+0x64>
 424:	mov	r0, r4
 428:	b	464 <stream_seek+0x9c>
 42c:	add	lr, r5, #4096	; 0x1000
 430:	ldr	r0, [lr, #76]	; 0x4c
 434:	blx	ip
 438:	cmp	r0, #0
 43c:	beq	45c <stream_seek+0x94>
 440:	ldr	r1, [pc, #48]	; 478 <stream_seek+0xb0>
 444:	mov	r0, r5
 448:	bl	0 <print_error>
 44c:	mvn	r0, #0
 450:	str	r0, [r5, #8]
 454:	mvn	r0, #0
 458:	b	464 <stream_seek+0x9c>
 45c:	str	r4, [r5, #8]
 460:	mov	r0, r4
 464:	ldr	r4, [sp, #8]
 468:	ldr	r5, [sp, #12]
 46c:	ldr	lr, [sp, #4]
 470:	add	sp, sp, #16
 474:	bx	lr
 478:	.word	0x0000008e

0000047c <libc_read>:
 47c:	mov	ip, sp
 480:	sub	sp, sp, #40	; 0x28
 484:	str	ip, [sp]
 488:	str	lr, [sp, #4]
 48c:	str	r4, [sp, #8]
 490:	str	r5, [sp, #12]
 494:	str	r6, [sp, #16]
 498:	str	r7, [sp, #20]
 49c:	str	r8, [sp, #24]
 4a0:	str	r9, [sp, #28]
 4a4:	str	sl, [sp, #32]
 4a8:	mov	r8, r1
 4ac:	mov	r4, r0
 4b0:	asr	ip, r2, #31
 4b4:	lsl	r3, ip, #11
 4b8:	orr	r6, r3, r2, lsr #21
 4bc:	lsl	r5, r2, #11
 4c0:	mov	r9, #0
 4c4:	mov	r7, #0
 4c8:	mov	r3, r5
 4cc:	mov	r1, r9
 4d0:	mov	r0, r6
 4d4:	cmp	r1, r0
 4d8:	bne	4ec <libc_read+0x70>
 4dc:	mov	r2, r7
 4e0:	cmp	r2, r3
 4e4:	bcc	4f4 <libc_read+0x78>
 4e8:	b	550 <libc_read+0xd4>
 4ec:	cmp	r1, r0
 4f0:	bge	550 <libc_read+0xd4>
 4f4:	ldr	r0, [r4, #4]
 4f8:	add	r1, r8, r7
 4fc:	subs	r2, r5, r7
 500:	sbc	ip, r6, r9
 504:	bl	0 <read>
 508:	asr	ip, r0, #31
 50c:	mov	sl, r0
 510:	mov	r2, ip
 514:	cmp	r2, #0
 518:	bge	534 <libc_read+0xb8>
 51c:	ldr	r1, [pc, #220]	; 600 <libc_read+0x184>
 520:	mov	r0, r4
 524:	bl	0 <print_error>
 528:	mvn	r2, #0
 52c:	str	r2, [r4, #8]
 530:	b	5d4 <libc_read+0x158>
 534:	mov	r3, sl
 538:	orr	r0, r2, r3
 53c:	cmp	r0, #0
 540:	beq	550 <libc_read+0xd4>
 544:	adds	r7, r7, sl
 548:	adc	r9, r9, ip
 54c:	b	4c8 <libc_read+0x4c>
 550:	mov	ip, #0
 554:	asr	r1, r9, #31
 558:	lsr	r3, r1, #21
 55c:	adds	r3, r7, r3
 560:	adc	r0, r9, ip
 564:	asr	r2, r0, #11
 568:	lsr	r3, r3, #11
 56c:	orr	r8, r3, r0, lsl #21
 570:	eor	r1, r9, r6
 574:	eor	ip, r7, r5
 578:	orr	ip, r1, ip
 57c:	cmp	ip, #0
 580:	beq	5bc <libc_read+0x140>
 584:	ldr	r0, [r4, #8]
 588:	asr	r1, r0, #31
 58c:	adds	lr, r0, r8
 590:	adc	r0, r1, r2
 594:	mov	r1, lr
 598:	mvn	r2, #0
 59c:	str	r2, [r4, #8]
 5a0:	mov	r0, r4
 5a4:	bl	314 <libc_seek>
 5a8:	mov	sl, r0
 5ac:	cmp	sl, #0
 5b0:	blt	5d4 <libc_read+0x158>
 5b4:	mov	sl, r8
 5b8:	b	5d4 <libc_read+0x158>
 5bc:	ldr	r0, [r4, #8]
 5c0:	asr	r1, r0, #31
 5c4:	adds	r3, r0, r8
 5c8:	adc	r1, r1, r2
 5cc:	str	r3, [r4, #8]
 5d0:	mov	sl, r8
 5d4:	mov	r0, sl
 5d8:	ldr	r4, [sp, #8]
 5dc:	ldr	r5, [sp, #12]
 5e0:	ldr	r6, [sp, #16]
 5e4:	ldr	r7, [sp, #20]
 5e8:	ldr	r8, [sp, #24]
 5ec:	ldr	r9, [sp, #28]
 5f0:	ldr	sl, [sp, #32]
 5f4:	ldr	lr, [sp, #4]
 5f8:	add	sp, sp, #40	; 0x28
 5fc:	bx	lr
 600:	.word	0x000000ee

00000604 <stream_read>:
 604:	mov	ip, sp
 608:	sub	sp, sp, #32
 60c:	str	ip, [sp]
 610:	str	lr, [sp, #4]
 614:	str	r4, [sp, #8]
 618:	str	r5, [sp, #12]
 61c:	str	r6, [sp, #16]
 620:	str	r7, [sp, #20]
 624:	str	r8, [sp, #24]
 628:	mov	r4, r0
 62c:	asr	r3, r2, #31
 630:	lsl	r0, r3, #11
 634:	orr	r7, r0, r2, lsr #21
 638:	lsl	r6, r2, #11
 63c:	add	lr, r4, #4096	; 0x1000
 640:	ldr	r2, [lr, #80]	; 0x50
 644:	ldr	ip, [r2, #4]
 648:	cmp	ip, #0
 64c:	bne	658 <stream_read+0x54>
 650:	mvn	r5, #0
 654:	b	70c <stream_read+0x108>
 658:	add	lr, r4, #4096	; 0x1000
 65c:	ldr	r0, [lr, #76]	; 0x4c
 660:	mov	r2, r6
 664:	blx	ip
 668:	mov	r5, r0
 66c:	asr	r1, r5, #31
 670:	cmp	r1, #0
 674:	bge	690 <stream_read+0x8c>
 678:	ldr	r1, [pc, #176]	; 730 <stream_read+0x12c>
 67c:	mov	r0, r4
 680:	bl	0 <print_error>
 684:	mvn	r0, #0
 688:	str	r0, [r4, #8]
 68c:	b	70c <stream_read+0x108>
 690:	mov	ip, r1
 694:	mov	r3, #0
 698:	asr	r2, r1, #31
 69c:	lsr	r2, r2, #21
 6a0:	adds	lr, r5, r2
 6a4:	adc	r0, ip, r3
 6a8:	mov	r3, lr
 6ac:	asr	r2, r0, #11
 6b0:	lsr	r3, r3, #11
 6b4:	orr	r8, r3, r0, lsl #21
 6b8:	eor	ip, r1, r7
 6bc:	eor	r0, r5, r6
 6c0:	orr	r3, ip, r0
 6c4:	cmp	r3, #0
 6c8:	beq	6f4 <stream_read+0xf0>
 6cc:	mvn	r1, #0
 6d0:	str	r1, [r4, #8]
 6d4:	mov	r1, r8
 6d8:	mov	r0, r4
 6dc:	bl	3c8 <stream_seek>
 6e0:	mov	r5, r0
 6e4:	cmp	r5, #0
 6e8:	blt	70c <stream_read+0x108>
 6ec:	mov	r5, r8
 6f0:	b	70c <stream_read+0x108>
 6f4:	ldr	ip, [r4, #8]
 6f8:	asr	r0, ip, #31
 6fc:	adds	r3, ip, r8
 700:	adc	r1, r0, r2
 704:	str	r3, [r4, #8]
 708:	mov	r5, r8
 70c:	mov	r0, r5
 710:	ldr	r4, [sp, #8]
 714:	ldr	r5, [sp, #12]
 718:	ldr	r6, [sp, #16]
 71c:	ldr	r7, [sp, #20]
 720:	ldr	r8, [sp, #24]
 724:	ldr	lr, [sp, #4]
 728:	add	sp, sp, #32
 72c:	bx	lr
 730:	.word	0x000000ee

00000734 <libc_readv>:
 734:	mov	ip, sp
 738:	sub	sp, sp, #16
 73c:	str	ip, [sp]
 740:	str	lr, [sp, #4]
 744:	str	r4, [sp, #8]
 748:	mov	r4, r0
 74c:	ldr	r0, [r4, #4]
 750:	bl	0 <readv>
 754:	cmp	r0, #0
 758:	bge	768 <libc_readv+0x34>
 75c:	mvn	r3, #0
 760:	str	r3, [r4, #8]
 764:	b	780 <libc_readv+0x4c>
 768:	asr	lr, r0, #31
 76c:	add	lr, r0, lr, lsr #21
 770:	asr	r0, lr, #11
 774:	ldr	r1, [r4, #8]
 778:	add	ip, r1, r0
 77c:	str	ip, [r4, #8]
 780:	ldr	r4, [sp, #8]
 784:	ldr	lr, [sp, #4]
 788:	add	sp, sp, #16
 78c:	bx	lr

00000790 <stream_readv>:
 790:	mov	ip, sp
 794:	sub	sp, sp, #16
 798:	str	ip, [sp]
 79c:	str	lr, [sp, #4]
 7a0:	str	r4, [sp, #8]
 7a4:	mov	r4, r0
 7a8:	add	lr, r4, #4096	; 0x1000
 7ac:	ldr	ip, [lr, #80]	; 0x50
 7b0:	ldr	ip, [ip, #8]
 7b4:	cmp	ip, #0
 7b8:	bne	7c4 <stream_readv+0x34>
 7bc:	mvn	r0, #0
 7c0:	b	7fc <stream_readv+0x6c>
 7c4:	add	lr, r4, #4096	; 0x1000
 7c8:	ldr	r0, [lr, #76]	; 0x4c
 7cc:	blx	ip
 7d0:	cmp	r0, #0
 7d4:	bge	7e4 <stream_readv+0x54>
 7d8:	mvn	r1, #0
 7dc:	str	r1, [r4, #8]
 7e0:	b	7fc <stream_readv+0x6c>
 7e4:	ldr	r1, [r4, #8]
 7e8:	asr	lr, r0, #31
 7ec:	add	lr, r0, lr, lsr #21
 7f0:	asr	r0, lr, #11
 7f4:	add	r1, r1, r0
 7f8:	str	r1, [r4, #8]
 7fc:	ldr	r4, [sp, #8]
 800:	ldr	lr, [sp, #4]
 804:	add	sp, sp, #16
 808:	bx	lr
