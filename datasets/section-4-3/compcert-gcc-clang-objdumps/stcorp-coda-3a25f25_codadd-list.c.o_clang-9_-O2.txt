
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-list.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <generate_list>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #28
   c:	mov	r7, r1
  10:	mov	r9, r0
  14:	cmn	r2, #1
  18:	ble	6c <generate_list+0x6c>
  1c:	mov	r0, r9
  20:	mov	r5, r2
  24:	bl	0 <coda_data_dictionary_get_product_class>
  28:	cmp	r0, #0
  2c:	beq	254 <generate_list+0x254>
  30:	mov	r1, r7
  34:	bl	0 <coda_product_class_get_product_type>
  38:	cmp	r0, #0
  3c:	beq	260 <generate_list+0x260>
  40:	mov	r1, r5
  44:	bl	0 <coda_product_type_get_product_definition_by_version>
  48:	cmp	r0, #0
  4c:	beq	26c <generate_list+0x26c>
  50:	ldr	r0, [r0, #28]
  54:	cmp	r0, #0
  58:	beq	24c <generate_list+0x24c>
  5c:	mov	r1, #0
  60:	sub	sp, fp, #28
  64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  68:	b	2bc <print_type>
  6c:	ldr	r0, [pc, #576]	; 2b4 <generate_list+0x2b4>
  70:	ldr	r1, [pc, r0]
  74:	bl	0 <__aeabi_read_tp>
  78:	ldr	sl, [r0, r1]
  7c:	ldr	r0, [sl]
  80:	cmp	r0, #1
  84:	blt	24c <generate_list+0x24c>
  88:	ldr	r0, [pc, #552]	; 2b8 <generate_list+0x2b8>
  8c:	movw	r8, #0
  90:	mov	r4, #0
  94:	movt	r8, #0
  98:	ldr	r0, [pc, r0]
  9c:	str	r0, [sp, #12]
  a0:	str	r7, [sp, #24]
  a4:	str	r9, [sp, #16]
  a8:	b	d0 <generate_list+0xd0>
  ac:	bl	0 <__aeabi_read_tp>
  b0:	ldr	r1, [sp, #12]
  b4:	ldr	r9, [sp, #16]
  b8:	ldr	r4, [sp, #20]
  bc:	ldr	sl, [r0, r1]
  c0:	ldr	r0, [sl]
  c4:	add	r4, r4, #1
  c8:	cmp	r4, r0
  cc:	bge	24c <generate_list+0x24c>
  d0:	ldr	r0, [sl, #4]
  d4:	cmp	r9, #0
  d8:	ldr	r5, [r0, r4, lsl #2]
  dc:	beq	f4 <generate_list+0xf4>
  e0:	ldr	r0, [r5]
  e4:	mov	r1, r9
  e8:	bl	0 <strcmp>
  ec:	cmp	r0, #0
  f0:	bne	c0 <generate_list+0xc0>
  f4:	ldr	r6, [r5, #28]
  f8:	cmp	r6, #1
  fc:	blt	c0 <generate_list+0xc0>
 100:	mov	sl, #0
 104:	str	r4, [sp, #20]
 108:	b	120 <generate_list+0x120>
 10c:	ldr	r6, [r5, #28]
 110:	ldr	r7, [sp, #24]
 114:	add	sl, sl, #1
 118:	cmp	sl, r6
 11c:	bge	ac <generate_list+0xac>
 120:	ldr	r0, [r5, #32]
 124:	cmp	r7, #0
 128:	ldr	r9, [r0, sl, lsl #2]
 12c:	beq	144 <generate_list+0x144>
 130:	ldr	r0, [r9]
 134:	mov	r1, r7
 138:	bl	0 <strcmp>
 13c:	cmp	r0, #0
 140:	bne	114 <generate_list+0x114>
 144:	ldr	r0, [r9, #8]
 148:	cmp	r0, #1
 14c:	blt	114 <generate_list+0x114>
 150:	mov	r6, #0
 154:	b	170 <generate_list+0x170>
 158:	mov	r0, #10
 15c:	bl	0 <putchar>
 160:	ldr	r0, [r9, #8]
 164:	add	r6, r6, #1
 168:	cmp	r6, r0
 16c:	bge	10c <generate_list+0x10c>
 170:	ldr	r0, [r9, #12]
 174:	ldr	r3, [r9]
 178:	ldr	r1, [r5]
 17c:	ldr	r2, [r8]
 180:	ldr	r7, [r0, r6, lsl #2]
 184:	ldr	r0, [r7, #4]
 188:	str	r2, [sp]
 18c:	str	r0, [sp, #4]
 190:	movw	r0, #0
 194:	movt	r0, #0
 198:	bl	0 <printf>
 19c:	movw	r0, #0
 1a0:	movt	r0, #0
 1a4:	ldr	r0, [r0]
 1a8:	cmp	r0, #0
 1ac:	beq	1d0 <generate_list+0x1d0>
 1b0:	ldr	r0, [r7]
 1b4:	ldr	r4, [r8]
 1b8:	bl	0 <coda_type_get_format_name>
 1bc:	mov	r2, r0
 1c0:	movw	r0, #0
 1c4:	mov	r1, r4
 1c8:	movt	r0, #0
 1cc:	bl	0 <printf>
 1d0:	movw	r0, #0
 1d4:	movt	r0, #0
 1d8:	ldr	r0, [r0]
 1dc:	cmp	r0, #0
 1e0:	beq	158 <generate_list+0x158>
 1e4:	ldr	r1, [r8]
 1e8:	movw	r0, #0
 1ec:	movt	r0, #0
 1f0:	bl	0 <printf>
 1f4:	ldr	r1, [r7, #12]
 1f8:	cmp	r1, #0
 1fc:	beq	158 <generate_list+0x158>
 200:	movw	r0, #0
 204:	movt	r0, #0
 208:	ldr	r0, [r0]
 20c:	cmp	r0, #0
 210:	beq	220 <generate_list+0x220>
 214:	mov	r0, #34	; 0x22
 218:	bl	0 <putchar>
 21c:	ldr	r1, [r7, #12]
 220:	movw	r0, #0
 224:	movt	r0, #0
 228:	bl	0 <printf>
 22c:	movw	r0, #0
 230:	movt	r0, #0
 234:	ldr	r0, [r0]
 238:	cmp	r0, #0
 23c:	beq	158 <generate_list+0x158>
 240:	mov	r0, #34	; 0x22
 244:	bl	0 <putchar>
 248:	b	158 <generate_list+0x158>
 24c:	sub	sp, fp, #28
 250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 254:	ldr	r0, [pc, #84]	; 2b0 <generate_list+0x2b0>
 258:	ldr	r1, [pc, r0]
 25c:	b	274 <generate_list+0x274>
 260:	ldr	r0, [pc, #68]	; 2ac <generate_list+0x2ac>
 264:	ldr	r1, [pc, r0]
 268:	b	274 <generate_list+0x274>
 26c:	ldr	r0, [pc, #52]	; 2a8 <generate_list+0x2a8>
 270:	ldr	r1, [pc, r0]
 274:	bl	0 <__aeabi_read_tp>
 278:	ldr	r0, [r0, r1]
 27c:	movw	r1, #0
 280:	movt	r1, #0
 284:	ldr	r4, [r1]
 288:	bl	0 <coda_errno_to_string>
 28c:	movw	r1, #0
 290:	mov	r2, r0
 294:	mov	r0, r4
 298:	movt	r1, #0
 29c:	bl	0 <fprintf>
 2a0:	mov	r0, #1
 2a4:	bl	0 <exit>
 2a8:	.word	0x00000030
 2ac:	.word	0x00000040
 2b0:	.word	0x00000050
 2b4:	.word	0x0000023c
 2b8:	.word	0x00000218

000002bc <print_type>:
 2bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2c0:	add	fp, sp, #28
 2c4:	sub	sp, sp, #52	; 0x34
 2c8:	mov	r4, r1
 2cc:	cmp	r1, #32
 2d0:	bge	7cc <print_type+0x510>
 2d4:	mov	r6, r0
 2d8:	movw	r0, #0
 2dc:	add	r1, sp, #12
 2e0:	str	r4, [sp, #4]
 2e4:	movt	r0, #0
 2e8:	str	r6, [r0, r4, lsl #2]
 2ec:	mov	r0, r6
 2f0:	bl	0 <coda_type_get_class>
 2f4:	ldr	r0, [sp, #12]
 2f8:	cmp	r0, #2
 2fc:	bcs	30c <print_type+0x50>
 300:	movw	r0, #0
 304:	movt	r0, #0
 308:	b	31c <print_type+0x60>
 30c:	cmp	r0, #6
 310:	bne	328 <print_type+0x6c>
 314:	movw	r0, #0
 318:	movt	r0, #0
 31c:	ldr	r0, [r0]
 320:	cmp	r0, #0
 324:	beq	634 <print_type+0x378>
 328:	mov	r0, #47	; 0x2f
 32c:	str	r6, [sp]
 330:	bl	0 <putchar>
 334:	ldr	r6, [sp, #4]
 338:	cmp	r6, #1
 33c:	blt	4a8 <print_type+0x1ec>
 340:	movw	sl, #0
 344:	movw	r4, #0
 348:	mov	r9, #0
 34c:	add	r7, sp, #20
 350:	movt	sl, #0
 354:	movt	r4, #0
 358:	b	36c <print_type+0xb0>
 35c:	mov	r0, #64	; 0x40
 360:	bl	0 <putchar>
 364:	cmp	r9, r6
 368:	beq	4a8 <print_type+0x1ec>
 36c:	movw	r0, #0
 370:	mov	r5, r9
 374:	add	r9, r9, #1
 378:	movt	r0, #0
 37c:	ldr	r1, [r0, r9, lsl #2]
 380:	cmn	r1, #1
 384:	beq	35c <print_type+0xa0>
 388:	movw	r0, #0
 38c:	movt	r0, #0
 390:	ldr	r8, [r0, r5, lsl #2]
 394:	ldr	r0, [r8, #8]
 398:	cmp	r0, #1
 39c:	beq	3f4 <print_type+0x138>
 3a0:	cmp	r0, #0
 3a4:	bne	7ac <print_type+0x4f0>
 3a8:	mov	r0, r8
 3ac:	mov	r2, r7
 3b0:	bl	0 <coda_type_get_record_field_name>
 3b4:	cmp	r5, #0
 3b8:	beq	3d8 <print_type+0x11c>
 3bc:	movw	r0, #0
 3c0:	movt	r0, #0
 3c4:	ldr	r0, [r0, r5, lsl #2]
 3c8:	cmn	r0, #1
 3cc:	beq	3d8 <print_type+0x11c>
 3d0:	mov	r0, #47	; 0x2f
 3d4:	bl	0 <putchar>
 3d8:	ldr	r1, [sp, #20]
 3dc:	movw	r0, #0
 3e0:	movt	r0, #0
 3e4:	bl	0 <printf>
 3e8:	cmp	r9, r6
 3ec:	bne	36c <print_type+0xb0>
 3f0:	b	4a8 <print_type+0x1ec>
 3f4:	mov	r0, r8
 3f8:	add	r1, sp, #16
 3fc:	mov	r2, r7
 400:	bl	0 <coda_type_get_array_dim>
 404:	mov	r0, #91	; 0x5b
 408:	bl	0 <putchar>
 40c:	ldr	r0, [sp, #16]
 410:	cmp	r0, #1
 414:	blt	494 <print_type+0x1d8>
 418:	add	r6, r8, #84	; 0x54
 41c:	mov	r5, #0
 420:	cmp	r5, #0
 424:	bne	44c <print_type+0x190>
 428:	b	454 <print_type+0x198>
 42c:	mov	r0, r4
 430:	bl	0 <printf>
 434:	ldr	r0, [sp, #16]
 438:	add	r5, r5, #1
 43c:	cmp	r5, r0
 440:	bge	494 <print_type+0x1d8>
 444:	cmp	r5, #0
 448:	beq	454 <print_type+0x198>
 44c:	mov	r0, #44	; 0x2c
 450:	bl	0 <putchar>
 454:	ldr	r1, [r7, r5, lsl #2]
 458:	cmn	r1, #1
 45c:	bgt	42c <print_type+0x170>
 460:	ldr	r0, [sl]
 464:	cmp	r0, #0
 468:	beq	488 <print_type+0x1cc>
 46c:	ldr	r0, [r6, r5, lsl #2]
 470:	cmp	r0, #0
 474:	beq	488 <print_type+0x1cc>
 478:	movw	r1, #0
 47c:	movt	r1, #0
 480:	bl	0 <coda_expression_print>
 484:	b	434 <print_type+0x178>
 488:	mov	r0, #63	; 0x3f
 48c:	bl	0 <putchar>
 490:	b	434 <print_type+0x178>
 494:	mov	r0, #93	; 0x5d
 498:	bl	0 <putchar>
 49c:	ldr	r6, [sp, #4]
 4a0:	cmp	r9, r6
 4a4:	bne	36c <print_type+0xb0>
 4a8:	movw	r0, #0
 4ac:	ldr	r6, [sp]
 4b0:	movw	r5, #0
 4b4:	movt	r0, #0
 4b8:	movt	r5, #0
 4bc:	ldr	r0, [r0]
 4c0:	cmp	r0, #0
 4c4:	beq	4f4 <print_type+0x238>
 4c8:	add	r1, sp, #20
 4cc:	mov	r0, r6
 4d0:	bl	0 <coda_type_get_read_type>
 4d4:	ldr	r0, [sp, #20]
 4d8:	ldr	r4, [r5]
 4dc:	bl	0 <coda_type_get_native_type_name>
 4e0:	mov	r2, r0
 4e4:	movw	r0, #0
 4e8:	mov	r1, r4
 4ec:	movt	r0, #0
 4f0:	bl	0 <printf>
 4f4:	movw	r0, #0
 4f8:	movt	r0, #0
 4fc:	ldr	r0, [r0]
 500:	cmp	r0, #0
 504:	beq	534 <print_type+0x278>
 508:	add	r1, sp, #20
 50c:	mov	r0, r6
 510:	bl	0 <coda_type_get_format>
 514:	ldr	r0, [sp, #20]
 518:	ldr	r4, [r5]
 51c:	bl	0 <coda_type_get_format_name>
 520:	mov	r2, r0
 524:	movw	r0, #0
 528:	mov	r1, r4
 52c:	movt	r0, #0
 530:	bl	0 <printf>
 534:	movw	r0, #0
 538:	movt	r0, #0
 53c:	ldr	r0, [r0]
 540:	cmp	r0, #0
 544:	beq	5b0 <print_type+0x2f4>
 548:	ldr	r1, [r5]
 54c:	movw	r0, #0
 550:	movt	r0, #0
 554:	bl	0 <printf>
 558:	add	r1, sp, #20
 55c:	mov	r0, r6
 560:	bl	0 <coda_type_get_unit>
 564:	ldr	r1, [sp, #20]
 568:	cmp	r1, #0
 56c:	beq	5b0 <print_type+0x2f4>
 570:	movw	r4, #0
 574:	movt	r4, #0
 578:	ldr	r0, [r4]
 57c:	cmp	r0, #0
 580:	beq	590 <print_type+0x2d4>
 584:	mov	r0, #34	; 0x22
 588:	bl	0 <putchar>
 58c:	ldr	r1, [sp, #20]
 590:	movw	r0, #0
 594:	movt	r0, #0
 598:	bl	0 <printf>
 59c:	ldr	r0, [r4]
 5a0:	cmp	r0, #0
 5a4:	beq	5b0 <print_type+0x2f4>
 5a8:	mov	r0, #34	; 0x22
 5ac:	bl	0 <putchar>
 5b0:	movw	r0, #0
 5b4:	movt	r0, #0
 5b8:	ldr	r0, [r0]
 5bc:	cmp	r0, #0
 5c0:	beq	62c <print_type+0x370>
 5c4:	ldr	r1, [r5]
 5c8:	movw	r0, #0
 5cc:	movt	r0, #0
 5d0:	bl	0 <printf>
 5d4:	add	r1, sp, #20
 5d8:	mov	r0, r6
 5dc:	bl	0 <coda_type_get_description>
 5e0:	ldr	r1, [sp, #20]
 5e4:	cmp	r1, #0
 5e8:	beq	62c <print_type+0x370>
 5ec:	movw	r4, #0
 5f0:	movt	r4, #0
 5f4:	ldr	r0, [r4]
 5f8:	cmp	r0, #0
 5fc:	beq	60c <print_type+0x350>
 600:	mov	r0, #34	; 0x22
 604:	bl	0 <putchar>
 608:	ldr	r1, [sp, #20]
 60c:	movw	r0, #0
 610:	movt	r0, #0
 614:	bl	0 <printf>
 618:	ldr	r0, [r4]
 61c:	cmp	r0, #0
 620:	beq	62c <print_type+0x370>
 624:	mov	r0, #34	; 0x22
 628:	bl	0 <putchar>
 62c:	mov	r0, #10
 630:	bl	0 <putchar>
 634:	movw	r0, #0
 638:	movt	r0, #0
 63c:	ldr	r0, [r0]
 640:	cmp	r0, #0
 644:	beq	68c <print_type+0x3d0>
 648:	add	r1, sp, #20
 64c:	mov	r0, r6
 650:	bl	0 <coda_type_has_attributes>
 654:	ldr	r0, [sp, #20]
 658:	cmp	r0, #0
 65c:	beq	68c <print_type+0x3d0>
 660:	add	r1, sp, #16
 664:	mov	r0, r6
 668:	bl	0 <coda_type_get_attributes>
 66c:	ldr	r0, [sp, #4]
 670:	mvn	r2, #0
 674:	add	r1, r0, #1
 678:	movw	r0, #0
 67c:	movt	r0, #0
 680:	str	r2, [r0, r1, lsl #2]
 684:	ldr	r0, [sp, #16]
 688:	bl	2bc <print_type>
 68c:	ldr	r0, [sp, #12]
 690:	cmp	r0, #6
 694:	beq	770 <print_type+0x4b4>
 698:	cmp	r0, #1
 69c:	beq	744 <print_type+0x488>
 6a0:	cmp	r0, #0
 6a4:	bne	784 <print_type+0x4c8>
 6a8:	add	r1, sp, #20
 6ac:	mov	r0, r6
 6b0:	bl	0 <coda_type_get_num_record_fields>
 6b4:	ldr	r0, [sp, #20]
 6b8:	cmp	r0, #1
 6bc:	blt	784 <print_type+0x4c8>
 6c0:	ldr	r0, [sp, #4]
 6c4:	movw	r7, #0
 6c8:	movw	r9, #0
 6cc:	mov	r5, #0
 6d0:	add	sl, sp, #16
 6d4:	add	r8, sp, #8
 6d8:	movt	r7, #0
 6dc:	movt	r9, #0
 6e0:	add	r4, r0, #1
 6e4:	b	708 <print_type+0x44c>
 6e8:	ldr	r0, [sp, #16]
 6ec:	mov	r1, r4
 6f0:	str	r5, [r9, r4, lsl #2]
 6f4:	bl	2bc <print_type>
 6f8:	ldr	r0, [sp, #20]
 6fc:	add	r5, r5, #1
 700:	cmp	r5, r0
 704:	bge	784 <print_type+0x4c8>
 708:	mov	r0, r6
 70c:	mov	r1, r5
 710:	mov	r2, sl
 714:	bl	0 <coda_type_get_record_field_type>
 718:	ldr	r0, [r7]
 71c:	cmp	r0, #0
 720:	bne	6e8 <print_type+0x42c>
 724:	mov	r0, r6
 728:	mov	r1, r5
 72c:	mov	r2, r8
 730:	bl	0 <coda_type_get_record_field_hidden_status>
 734:	ldr	r0, [sp, #8]
 738:	cmp	r0, #0
 73c:	bne	6f8 <print_type+0x43c>
 740:	b	6e8 <print_type+0x42c>
 744:	add	r1, sp, #20
 748:	mov	r0, r6
 74c:	bl	0 <coda_type_get_array_base_type>
 750:	ldr	r0, [sp, #4]
 754:	mov	r2, #0
 758:	add	r1, r0, #1
 75c:	movw	r0, #0
 760:	movt	r0, #0
 764:	str	r2, [r0, r1, lsl #2]
 768:	ldr	r0, [sp, #20]
 76c:	b	7a0 <print_type+0x4e4>
 770:	movw	r0, #0
 774:	movt	r0, #0
 778:	ldr	r0, [r0]
 77c:	cmp	r0, #0
 780:	beq	78c <print_type+0x4d0>
 784:	sub	sp, fp, #28
 788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 78c:	add	r1, sp, #20
 790:	mov	r0, r6
 794:	bl	0 <coda_type_get_special_base_type>
 798:	ldr	r0, [sp, #20]
 79c:	ldr	r1, [sp, #4]
 7a0:	bl	2bc <print_type>
 7a4:	sub	sp, fp, #28
 7a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 7ac:	movw	r0, #0
 7b0:	movw	r1, #0
 7b4:	movw	r3, #0
 7b8:	mov	r2, #125	; 0x7d
 7bc:	movt	r0, #0
 7c0:	movt	r1, #0
 7c4:	movt	r3, #0
 7c8:	bl	0 <__assert_fail>
 7cc:	mov	r0, #10
 7d0:	bl	0 <putchar>
 7d4:	movw	r0, #0
 7d8:	movw	r1, #0
 7dc:	mov	r2, r4
 7e0:	mov	r3, #32
 7e4:	movt	r0, #0
 7e8:	movt	r1, #0
 7ec:	ldr	r0, [r0]
 7f0:	bl	0 <fprintf>
 7f4:	mov	r0, #1
 7f8:	bl	0 <exit>
