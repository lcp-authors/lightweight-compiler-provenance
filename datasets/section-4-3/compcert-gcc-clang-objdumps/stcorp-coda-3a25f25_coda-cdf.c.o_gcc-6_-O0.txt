
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <read_bytes>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #96	; 0x60
       c:	str	r0, [fp, #-80]	; 0xffffffb0
      10:	strd	r2, [fp, #-92]	; 0xffffffa4
      14:	ldr	r3, [fp, #-80]	; 0xffffffb0
      18:	ldr	r3, [r3, #48]	; 0x30
      1c:	cmp	r3, #0
      20:	beq	fc <read_bytes+0xfc>
      24:	ldrd	r0, [fp, #-92]	; 0xffffffa4
      28:	ldrd	r2, [fp, #4]
      2c:	adds	r2, r2, r0
      30:	adc	r3, r3, r1
      34:	ldr	r1, [fp, #-80]	; 0xffffffb0
      38:	ldrd	r0, [r1, #40]	; 0x28
      3c:	cmp	r3, r1
      40:	cmpeq	r2, r0
      44:	bls	d8 <read_bytes+0xd8>
      48:	ldr	r3, [fp, #-80]	; 0xffffffb0
      4c:	ldr	r3, [r3, #16]
      50:	cmp	r3, #0
      54:	beq	68 <read_bytes+0x68>
      58:	ldr	r3, [fp, #-80]	; 0xffffffb0
      5c:	ldr	r3, [r3, #16]
      60:	cmp	r3, #1
      64:	bne	7c <read_bytes+0x7c>
      68:	ldr	r1, [pc, #348]	; 1cc <read_bytes+0x1cc>
      6c:	mvn	r0, #300	; 0x12c
      70:	bl	0 <coda_set_error>
      74:	mvn	r3, #0
      78:	b	1c0 <read_bytes+0x1c0>
      7c:	sub	r3, fp, #28
      80:	mov	r2, r3
      84:	ldrd	r0, [fp, #4]
      88:	bl	0 <coda_str64>
      8c:	sub	r3, fp, #52	; 0x34
      90:	mov	r2, r3
      94:	ldrd	r0, [fp, #-92]	; 0xffffffa4
      98:	bl	0 <coda_str64>
      9c:	ldr	r3, [fp, #-80]	; 0xffffffb0
      a0:	ldrd	r0, [r3, #40]	; 0x28
      a4:	sub	r3, fp, #76	; 0x4c
      a8:	mov	r2, r3
      ac:	bl	0 <coda_str64>
      b0:	sub	r1, fp, #52	; 0x34
      b4:	sub	r2, fp, #28
      b8:	sub	r3, fp, #76	; 0x4c
      bc:	str	r3, [sp]
      c0:	mov	r3, r1
      c4:	ldr	r1, [pc, #260]	; 1d0 <read_bytes+0x1d0>
      c8:	mvn	r0, #300	; 0x12c
      cc:	bl	0 <coda_set_error>
      d0:	mvn	r3, #0
      d4:	b	1c0 <read_bytes+0x1c0>
      d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
      dc:	ldr	r2, [r3, #48]	; 0x30
      e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
      e4:	add	r3, r2, r3
      e8:	ldr	r2, [fp, #4]
      ec:	mov	r1, r3
      f0:	ldr	r0, [fp, #12]
      f4:	bl	0 <memcpy>
      f8:	b	1bc <read_bytes+0x1bc>
      fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
     100:	ldr	r3, [r3, #16]
     104:	cmp	r3, #0
     108:	beq	130 <read_bytes+0x130>
     10c:	ldr	r3, [fp, #-80]	; 0xffffffb0
     110:	ldr	r3, [r3, #16]
     114:	cmp	r3, #1
     118:	beq	130 <read_bytes+0x130>
     11c:	ldr	r3, [pc, #176]	; 1d4 <read_bytes+0x1d4>
     120:	mov	r2, #83	; 0x53
     124:	ldr	r1, [pc, #172]	; 1d8 <read_bytes+0x1d8>
     128:	ldr	r0, [pc, #172]	; 1dc <read_bytes+0x1dc>
     12c:	bl	0 <__assert_fail>
     130:	ldrd	r0, [fp, #-92]	; 0xffffffa4
     134:	ldrd	r2, [fp, #4]
     138:	adds	r2, r2, r0
     13c:	adc	r3, r3, r1
     140:	ldr	r1, [fp, #-80]	; 0xffffffb0
     144:	ldrd	r0, [r1, #8]
     148:	cmp	r3, r1
     14c:	cmpeq	r2, r0
     150:	bls	168 <read_bytes+0x168>
     154:	ldr	r1, [pc, #112]	; 1cc <read_bytes+0x1cc>
     158:	mvn	r0, #300	; 0x12c
     15c:	bl	0 <coda_set_error>
     160:	mvn	r3, #0
     164:	b	1c0 <read_bytes+0x1c0>
     168:	ldr	r3, [fp, #-80]	; 0xffffffb0
     16c:	ldr	r0, [r3, #56]	; 0x38
     170:	ldr	r2, [fp, #4]
     174:	ldr	r3, [fp, #-92]	; 0xffffffa4
     178:	ldr	r1, [fp, #12]
     17c:	bl	0 <pread>
     180:	mov	r3, r0
     184:	cmp	r3, #0
     188:	bge	1bc <read_bytes+0x1bc>
     18c:	bl	0 <__errno_location>
     190:	mov	r3, r0
     194:	ldr	r3, [r3]
     198:	mov	r0, r3
     19c:	bl	0 <strerror>
     1a0:	mov	r3, r0
     1a4:	mov	r2, r3
     1a8:	ldr	r1, [pc, #48]	; 1e0 <read_bytes+0x1e0>
     1ac:	mvn	r0, #21
     1b0:	bl	0 <coda_set_error>
     1b4:	mvn	r3, #0
     1b8:	b	1c0 <read_bytes+0x1c0>
     1bc:	mov	r3, #0
     1c0:	mov	r0, r3
     1c4:	sub	sp, fp, #4
     1c8:	pop	{fp, pc}
     1cc:	.word	0x00000000
     1d0:	.word	0x0000002c
     1d4:	.word	0x000008b0
     1d8:	.word	0x00000068
     1dc:	.word	0x000000b8
     1e0:	.word	0x00000108

000001e4 <swap2>:
     1e4:	push	{fp}		; (str fp, [sp, #-4]!)
     1e8:	add	fp, sp, #0
     1ec:	sub	sp, sp, #20
     1f0:	str	r0, [fp, #-16]
     1f4:	ldr	r3, [fp, #-16]
     1f8:	str	r3, [fp, #-8]
     1fc:	ldr	r3, [fp, #-8]
     200:	ldrb	r2, [r3]
     204:	ldr	r3, [fp, #-8]
     208:	add	r3, r3, #1
     20c:	ldrb	r3, [r3]
     210:	eor	r3, r3, r2
     214:	uxtb	r2, r3
     218:	ldr	r3, [fp, #-8]
     21c:	strb	r2, [r3]
     220:	ldr	r3, [fp, #-8]
     224:	add	r3, r3, #1
     228:	ldr	r2, [fp, #-8]
     22c:	ldrb	r1, [r2]
     230:	ldr	r2, [fp, #-8]
     234:	add	r2, r2, #1
     238:	ldrb	r2, [r2]
     23c:	eor	r2, r2, r1
     240:	uxtb	r2, r2
     244:	strb	r2, [r3]
     248:	ldr	r3, [fp, #-8]
     24c:	ldrb	r2, [r3]
     250:	ldr	r3, [fp, #-8]
     254:	add	r3, r3, #1
     258:	ldrb	r3, [r3]
     25c:	eor	r3, r3, r2
     260:	uxtb	r2, r3
     264:	ldr	r3, [fp, #-8]
     268:	strb	r2, [r3]
     26c:	nop			; (mov r0, r0)
     270:	add	sp, fp, #0
     274:	pop	{fp}		; (ldr fp, [sp], #4)
     278:	bx	lr

0000027c <swap4>:
     27c:	push	{fp}		; (str fp, [sp, #-4]!)
     280:	add	fp, sp, #0
     284:	sub	sp, sp, #20
     288:	str	r0, [fp, #-16]
     28c:	ldr	r3, [fp, #-16]
     290:	str	r3, [fp, #-8]
     294:	ldr	r3, [fp, #-8]
     298:	ldrb	r2, [r3]
     29c:	ldr	r3, [fp, #-8]
     2a0:	add	r3, r3, #3
     2a4:	ldrb	r3, [r3]
     2a8:	eor	r3, r3, r2
     2ac:	uxtb	r2, r3
     2b0:	ldr	r3, [fp, #-8]
     2b4:	strb	r2, [r3]
     2b8:	ldr	r3, [fp, #-8]
     2bc:	add	r3, r3, #3
     2c0:	ldr	r2, [fp, #-8]
     2c4:	ldrb	r1, [r2]
     2c8:	ldr	r2, [fp, #-8]
     2cc:	add	r2, r2, #3
     2d0:	ldrb	r2, [r2]
     2d4:	eor	r2, r2, r1
     2d8:	uxtb	r2, r2
     2dc:	strb	r2, [r3]
     2e0:	ldr	r3, [fp, #-8]
     2e4:	ldrb	r2, [r3]
     2e8:	ldr	r3, [fp, #-8]
     2ec:	add	r3, r3, #3
     2f0:	ldrb	r3, [r3]
     2f4:	eor	r3, r3, r2
     2f8:	uxtb	r2, r3
     2fc:	ldr	r3, [fp, #-8]
     300:	strb	r2, [r3]
     304:	ldr	r3, [fp, #-8]
     308:	add	r3, r3, #1
     30c:	ldr	r2, [fp, #-8]
     310:	add	r2, r2, #1
     314:	ldrb	r1, [r2]
     318:	ldr	r2, [fp, #-8]
     31c:	add	r2, r2, #2
     320:	ldrb	r2, [r2]
     324:	eor	r2, r2, r1
     328:	uxtb	r2, r2
     32c:	strb	r2, [r3]
     330:	ldr	r3, [fp, #-8]
     334:	add	r3, r3, #2
     338:	ldr	r2, [fp, #-8]
     33c:	add	r2, r2, #1
     340:	ldrb	r1, [r2]
     344:	ldr	r2, [fp, #-8]
     348:	add	r2, r2, #2
     34c:	ldrb	r2, [r2]
     350:	eor	r2, r2, r1
     354:	uxtb	r2, r2
     358:	strb	r2, [r3]
     35c:	ldr	r3, [fp, #-8]
     360:	add	r3, r3, #1
     364:	ldr	r2, [fp, #-8]
     368:	add	r2, r2, #1
     36c:	ldrb	r1, [r2]
     370:	ldr	r2, [fp, #-8]
     374:	add	r2, r2, #2
     378:	ldrb	r2, [r2]
     37c:	eor	r2, r2, r1
     380:	uxtb	r2, r2
     384:	strb	r2, [r3]
     388:	nop			; (mov r0, r0)
     38c:	add	sp, fp, #0
     390:	pop	{fp}		; (ldr fp, [sp], #4)
     394:	bx	lr

00000398 <swap8>:
     398:	push	{fp}		; (str fp, [sp, #-4]!)
     39c:	add	fp, sp, #0
     3a0:	sub	sp, sp, #20
     3a4:	str	r0, [fp, #-16]
     3a8:	ldr	r3, [fp, #-16]
     3ac:	str	r3, [fp, #-8]
     3b0:	ldr	r3, [fp, #-8]
     3b4:	ldrb	r2, [r3]
     3b8:	ldr	r3, [fp, #-8]
     3bc:	add	r3, r3, #7
     3c0:	ldrb	r3, [r3]
     3c4:	eor	r3, r3, r2
     3c8:	uxtb	r2, r3
     3cc:	ldr	r3, [fp, #-8]
     3d0:	strb	r2, [r3]
     3d4:	ldr	r3, [fp, #-8]
     3d8:	add	r3, r3, #7
     3dc:	ldr	r2, [fp, #-8]
     3e0:	ldrb	r1, [r2]
     3e4:	ldr	r2, [fp, #-8]
     3e8:	add	r2, r2, #7
     3ec:	ldrb	r2, [r2]
     3f0:	eor	r2, r2, r1
     3f4:	uxtb	r2, r2
     3f8:	strb	r2, [r3]
     3fc:	ldr	r3, [fp, #-8]
     400:	ldrb	r2, [r3]
     404:	ldr	r3, [fp, #-8]
     408:	add	r3, r3, #7
     40c:	ldrb	r3, [r3]
     410:	eor	r3, r3, r2
     414:	uxtb	r2, r3
     418:	ldr	r3, [fp, #-8]
     41c:	strb	r2, [r3]
     420:	ldr	r3, [fp, #-8]
     424:	add	r3, r3, #1
     428:	ldr	r2, [fp, #-8]
     42c:	add	r2, r2, #1
     430:	ldrb	r1, [r2]
     434:	ldr	r2, [fp, #-8]
     438:	add	r2, r2, #6
     43c:	ldrb	r2, [r2]
     440:	eor	r2, r2, r1
     444:	uxtb	r2, r2
     448:	strb	r2, [r3]
     44c:	ldr	r3, [fp, #-8]
     450:	add	r3, r3, #6
     454:	ldr	r2, [fp, #-8]
     458:	add	r2, r2, #1
     45c:	ldrb	r1, [r2]
     460:	ldr	r2, [fp, #-8]
     464:	add	r2, r2, #6
     468:	ldrb	r2, [r2]
     46c:	eor	r2, r2, r1
     470:	uxtb	r2, r2
     474:	strb	r2, [r3]
     478:	ldr	r3, [fp, #-8]
     47c:	add	r3, r3, #1
     480:	ldr	r2, [fp, #-8]
     484:	add	r2, r2, #1
     488:	ldrb	r1, [r2]
     48c:	ldr	r2, [fp, #-8]
     490:	add	r2, r2, #6
     494:	ldrb	r2, [r2]
     498:	eor	r2, r2, r1
     49c:	uxtb	r2, r2
     4a0:	strb	r2, [r3]
     4a4:	ldr	r3, [fp, #-8]
     4a8:	add	r3, r3, #2
     4ac:	ldr	r2, [fp, #-8]
     4b0:	add	r2, r2, #2
     4b4:	ldrb	r1, [r2]
     4b8:	ldr	r2, [fp, #-8]
     4bc:	add	r2, r2, #5
     4c0:	ldrb	r2, [r2]
     4c4:	eor	r2, r2, r1
     4c8:	uxtb	r2, r2
     4cc:	strb	r2, [r3]
     4d0:	ldr	r3, [fp, #-8]
     4d4:	add	r3, r3, #5
     4d8:	ldr	r2, [fp, #-8]
     4dc:	add	r2, r2, #2
     4e0:	ldrb	r1, [r2]
     4e4:	ldr	r2, [fp, #-8]
     4e8:	add	r2, r2, #5
     4ec:	ldrb	r2, [r2]
     4f0:	eor	r2, r2, r1
     4f4:	uxtb	r2, r2
     4f8:	strb	r2, [r3]
     4fc:	ldr	r3, [fp, #-8]
     500:	add	r3, r3, #2
     504:	ldr	r2, [fp, #-8]
     508:	add	r2, r2, #2
     50c:	ldrb	r1, [r2]
     510:	ldr	r2, [fp, #-8]
     514:	add	r2, r2, #5
     518:	ldrb	r2, [r2]
     51c:	eor	r2, r2, r1
     520:	uxtb	r2, r2
     524:	strb	r2, [r3]
     528:	ldr	r3, [fp, #-8]
     52c:	add	r3, r3, #3
     530:	ldr	r2, [fp, #-8]
     534:	add	r2, r2, #3
     538:	ldrb	r1, [r2]
     53c:	ldr	r2, [fp, #-8]
     540:	add	r2, r2, #4
     544:	ldrb	r2, [r2]
     548:	eor	r2, r2, r1
     54c:	uxtb	r2, r2
     550:	strb	r2, [r3]
     554:	ldr	r3, [fp, #-8]
     558:	add	r3, r3, #4
     55c:	ldr	r2, [fp, #-8]
     560:	add	r2, r2, #3
     564:	ldrb	r1, [r2]
     568:	ldr	r2, [fp, #-8]
     56c:	add	r2, r2, #4
     570:	ldrb	r2, [r2]
     574:	eor	r2, r2, r1
     578:	uxtb	r2, r2
     57c:	strb	r2, [r3]
     580:	ldr	r3, [fp, #-8]
     584:	add	r3, r3, #3
     588:	ldr	r2, [fp, #-8]
     58c:	add	r2, r2, #3
     590:	ldrb	r1, [r2]
     594:	ldr	r2, [fp, #-8]
     598:	add	r2, r2, #4
     59c:	ldrb	r2, [r2]
     5a0:	eor	r2, r2, r1
     5a4:	uxtb	r2, r2
     5a8:	strb	r2, [r3]
     5ac:	nop			; (mov r0, r0)
     5b0:	add	sp, fp, #0
     5b4:	pop	{fp}		; (ldr fp, [sp], #4)
     5b8:	bx	lr

000005bc <rtrim>:
     5bc:	push	{fp, lr}
     5c0:	add	fp, sp, #4
     5c4:	sub	sp, sp, #16
     5c8:	str	r0, [fp, #-16]
     5cc:	ldr	r0, [fp, #-16]
     5d0:	bl	0 <strlen>
     5d4:	mov	r3, r0
     5d8:	str	r3, [fp, #-8]
     5dc:	b	604 <rtrim+0x48>
     5e0:	ldr	r3, [fp, #-8]
     5e4:	sub	r3, r3, #1
     5e8:	ldr	r2, [fp, #-16]
     5ec:	add	r3, r2, r3
     5f0:	mov	r2, #0
     5f4:	strb	r2, [r3]
     5f8:	ldr	r3, [fp, #-8]
     5fc:	sub	r3, r3, #1
     600:	str	r3, [fp, #-8]
     604:	ldr	r3, [fp, #-8]
     608:	cmp	r3, #0
     60c:	ble	62c <rtrim+0x70>
     610:	ldr	r3, [fp, #-8]
     614:	sub	r3, r3, #1
     618:	ldr	r2, [fp, #-16]
     61c:	add	r3, r2, r3
     620:	ldrb	r3, [r3]
     624:	cmp	r3, #32
     628:	beq	5e0 <rtrim+0x24>
     62c:	nop			; (mov r0, r0)
     630:	sub	sp, fp, #4
     634:	pop	{fp, pc}

00000638 <read_attribute_sub>:
     638:	push	{fp, lr}
     63c:	add	fp, sp, #4
     640:	sub	sp, sp, #48	; 0x30
     644:	str	r0, [fp, #-24]	; 0xffffffe8
     648:	strd	r2, [fp, #-36]	; 0xffffffdc
     64c:	ldr	r3, [fp, #8]
     650:	ldr	r3, [r3, #8]
     654:	cmp	r3, #4
     658:	bne	72c <read_attribute_sub+0xf4>
     65c:	ldr	r3, [fp, #4]
     660:	add	r3, r3, #1
     664:	mov	r0, r3
     668:	bl	0 <malloc>
     66c:	mov	r3, r0
     670:	str	r3, [fp, #-8]
     674:	ldr	r3, [fp, #-8]
     678:	cmp	r3, #0
     67c:	bne	6a8 <read_attribute_sub+0x70>
     680:	ldr	r3, [fp, #4]
     684:	add	r2, r3, #1
     688:	mov	r3, #76	; 0x4c
     68c:	str	r3, [sp]
     690:	ldr	r3, [pc, #816]	; 9c8 <read_attribute_sub+0x390>
     694:	ldr	r1, [pc, #816]	; 9cc <read_attribute_sub+0x394>
     698:	mvn	r0, #0
     69c:	bl	0 <coda_set_error>
     6a0:	mvn	r3, #0
     6a4:	b	9bc <read_attribute_sub+0x384>
     6a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     6ac:	ldr	r0, [r3, #52]	; 0x34
     6b0:	ldr	r3, [fp, #4]
     6b4:	mov	r2, r3
     6b8:	asr	r3, r2, #31
     6bc:	ldr	r1, [fp, #-8]
     6c0:	str	r1, [sp, #8]
     6c4:	strd	r2, [sp]
     6c8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     6cc:	bl	0 <read_bytes>
     6d0:	mov	r3, r0
     6d4:	cmp	r3, #0
     6d8:	beq	6ec <read_attribute_sub+0xb4>
     6dc:	ldr	r0, [fp, #-8]
     6e0:	bl	0 <free>
     6e4:	mvn	r3, #0
     6e8:	b	9bc <read_attribute_sub+0x384>
     6ec:	ldr	r3, [fp, #4]
     6f0:	ldr	r2, [fp, #-8]
     6f4:	add	r3, r2, r3
     6f8:	mov	r2, #0
     6fc:	strb	r2, [r3]
     700:	ldr	r3, [fp, #-8]
     704:	ldr	r2, [fp, #-24]	; 0xffffffe8
     708:	mov	r1, #0
     70c:	ldr	r0, [fp, #8]
     710:	bl	0 <coda_mem_string_new>
     714:	mov	r2, r0
     718:	ldr	r3, [fp, #12]
     71c:	str	r2, [r3]
     720:	ldr	r0, [fp, #-8]
     724:	bl	0 <free>
     728:	b	9a0 <read_attribute_sub+0x368>
     72c:	mov	r3, #0
     730:	str	r3, [fp, #-12]
     734:	ldr	r3, [fp, #-24]	; 0xffffffe8
     738:	ldr	r0, [r3, #52]	; 0x34
     73c:	ldr	r3, [fp, #4]
     740:	mov	r2, r3
     744:	asr	r3, r2, #31
     748:	sub	r1, fp, #20
     74c:	str	r1, [sp, #8]
     750:	strd	r2, [sp]
     754:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     758:	bl	0 <read_bytes>
     75c:	mov	r3, r0
     760:	cmp	r3, #0
     764:	beq	770 <read_attribute_sub+0x138>
     768:	mvn	r3, #0
     76c:	b	9bc <read_attribute_sub+0x384>
     770:	ldr	r3, [fp, #-24]	; 0xffffffe8
     774:	ldr	r2, [r3, #68]	; 0x44
     778:	ldr	r3, [fp, #-12]
     77c:	cmp	r2, r3
     780:	bne	800 <read_attribute_sub+0x1c8>
     784:	ldr	r3, [fp, #4]
     788:	sub	r3, r3, #1
     78c:	cmp	r3, #7
     790:	ldrls	pc, [pc, r3, lsl #2]
     794:	b	7e8 <read_attribute_sub+0x1b0>
     798:	.word	0x000007fc
     79c:	.word	0x000007b8
     7a0:	.word	0x000007e8
     7a4:	.word	0x000007c8
     7a8:	.word	0x000007e8
     7ac:	.word	0x000007e8
     7b0:	.word	0x000007e8
     7b4:	.word	0x000007d8
     7b8:	sub	r3, fp, #20
     7bc:	mov	r0, r3
     7c0:	bl	1e4 <swap2>
     7c4:	b	800 <read_attribute_sub+0x1c8>
     7c8:	sub	r3, fp, #20
     7cc:	mov	r0, r3
     7d0:	bl	27c <swap4>
     7d4:	b	800 <read_attribute_sub+0x1c8>
     7d8:	sub	r3, fp, #20
     7dc:	mov	r0, r3
     7e0:	bl	398 <swap8>
     7e4:	b	800 <read_attribute_sub+0x1c8>
     7e8:	ldr	r3, [pc, #480]	; 9d0 <read_attribute_sub+0x398>
     7ec:	mov	r2, #129	; 0x81
     7f0:	ldr	r1, [pc, #464]	; 9c8 <read_attribute_sub+0x390>
     7f4:	ldr	r0, [pc, #472]	; 9d4 <read_attribute_sub+0x39c>
     7f8:	bl	0 <__assert_fail>
     7fc:	nop			; (mov r0, r0)
     800:	ldr	r3, [fp, #8]
     804:	ldr	r3, [r3, #12]
     808:	cmp	r3, #9
     80c:	ldrls	pc, [pc, r3, lsl #2]
     810:	b	98c <read_attribute_sub+0x354>
     814:	.word	0x0000083c
     818:	.word	0x00000860
     81c:	.word	0x00000884
     820:	.word	0x000008a8
     824:	.word	0x000008cc
     828:	.word	0x000008f0
     82c:	.word	0x00000914
     830:	.word	0x0000098c
     834:	.word	0x0000093c
     838:	.word	0x00000964
     83c:	ldrsb	r3, [fp, #-20]	; 0xffffffec
     840:	ldr	r2, [fp, #-24]	; 0xffffffe8
     844:	mov	r1, #0
     848:	ldr	r0, [fp, #8]
     84c:	bl	0 <coda_mem_int8_new>
     850:	mov	r2, r0
     854:	ldr	r3, [fp, #12]
     858:	str	r2, [r3]
     85c:	b	9a0 <read_attribute_sub+0x368>
     860:	ldrb	r3, [fp, #-20]	; 0xffffffec
     864:	ldr	r2, [fp, #-24]	; 0xffffffe8
     868:	mov	r1, #0
     86c:	ldr	r0, [fp, #8]
     870:	bl	0 <coda_mem_uint8_new>
     874:	mov	r2, r0
     878:	ldr	r3, [fp, #12]
     87c:	str	r2, [r3]
     880:	b	9a0 <read_attribute_sub+0x368>
     884:	ldrsh	r3, [fp, #-20]	; 0xffffffec
     888:	ldr	r2, [fp, #-24]	; 0xffffffe8
     88c:	mov	r1, #0
     890:	ldr	r0, [fp, #8]
     894:	bl	0 <coda_mem_int16_new>
     898:	mov	r2, r0
     89c:	ldr	r3, [fp, #12]
     8a0:	str	r2, [r3]
     8a4:	b	9a0 <read_attribute_sub+0x368>
     8a8:	ldrh	r3, [fp, #-20]	; 0xffffffec
     8ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
     8b0:	mov	r1, #0
     8b4:	ldr	r0, [fp, #8]
     8b8:	bl	0 <coda_mem_uint16_new>
     8bc:	mov	r2, r0
     8c0:	ldr	r3, [fp, #12]
     8c4:	str	r2, [r3]
     8c8:	b	9a0 <read_attribute_sub+0x368>
     8cc:	ldr	r3, [fp, #-20]	; 0xffffffec
     8d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     8d4:	mov	r1, #0
     8d8:	ldr	r0, [fp, #8]
     8dc:	bl	0 <coda_mem_int32_new>
     8e0:	mov	r2, r0
     8e4:	ldr	r3, [fp, #12]
     8e8:	str	r2, [r3]
     8ec:	b	9a0 <read_attribute_sub+0x368>
     8f0:	ldr	r3, [fp, #-20]	; 0xffffffec
     8f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
     8f8:	mov	r1, #0
     8fc:	ldr	r0, [fp, #8]
     900:	bl	0 <coda_mem_uint32_new>
     904:	mov	r2, r0
     908:	ldr	r3, [fp, #12]
     90c:	str	r2, [r3]
     910:	b	9a0 <read_attribute_sub+0x368>
     914:	ldrd	r2, [fp, #-20]	; 0xffffffec
     918:	strd	r2, [sp]
     91c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     920:	mov	r1, #0
     924:	ldr	r0, [fp, #8]
     928:	bl	0 <coda_mem_int64_new>
     92c:	mov	r2, r0
     930:	ldr	r3, [fp, #12]
     934:	str	r2, [r3]
     938:	b	9a0 <read_attribute_sub+0x368>
     93c:	vldr	s15, [fp, #-20]	; 0xffffffec
     940:	vmov.f32	s0, s15
     944:	ldr	r2, [fp, #-24]	; 0xffffffe8
     948:	mov	r1, #0
     94c:	ldr	r0, [fp, #8]
     950:	bl	0 <coda_mem_float_new>
     954:	mov	r2, r0
     958:	ldr	r3, [fp, #12]
     95c:	str	r2, [r3]
     960:	b	9a0 <read_attribute_sub+0x368>
     964:	vldr	d7, [fp, #-20]	; 0xffffffec
     968:	vmov.f64	d0, d7
     96c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     970:	mov	r1, #0
     974:	ldr	r0, [fp, #8]
     978:	bl	0 <coda_mem_double_new>
     97c:	mov	r2, r0
     980:	ldr	r3, [fp, #12]
     984:	str	r2, [r3]
     988:	b	9a0 <read_attribute_sub+0x368>
     98c:	ldr	r3, [pc, #60]	; 9d0 <read_attribute_sub+0x398>
     990:	mov	r2, #175	; 0xaf
     994:	ldr	r1, [pc, #44]	; 9c8 <read_attribute_sub+0x390>
     998:	ldr	r0, [pc, #52]	; 9d4 <read_attribute_sub+0x39c>
     99c:	bl	0 <__assert_fail>
     9a0:	ldr	r3, [fp, #12]
     9a4:	ldr	r3, [r3]
     9a8:	cmp	r3, #0
     9ac:	bne	9b8 <read_attribute_sub+0x380>
     9b0:	mvn	r3, #0
     9b4:	b	9bc <read_attribute_sub+0x384>
     9b8:	mov	r3, #0
     9bc:	mov	r0, r3
     9c0:	sub	sp, fp, #4
     9c4:	pop	{fp, pc}
     9c8:	.word	0x00000128
     9cc:	.word	0x00000170
     9d0:	.word	0x000008bc
     9d4:	.word	0x000001a8

000009d8 <read_attribute>:
     9d8:	push	{fp, lr}
     9dc:	add	fp, sp, #4
     9e0:	sub	sp, sp, #64	; 0x40
     9e4:	str	r0, [fp, #-40]	; 0xffffffd8
     9e8:	strd	r2, [fp, #-52]	; 0xffffffcc
     9ec:	ldr	r3, [fp, #4]
     9f0:	sub	r3, r3, #1
     9f4:	cmp	r3, #51	; 0x33
     9f8:	ldrls	pc, [pc, r3, lsl #2]
     9fc:	b	be8 <read_attribute+0x210>
     a00:	.word	0x00000ad0
     a04:	.word	0x00000aec
     a08:	.word	0x00000be8
     a0c:	.word	0x00000b08
     a10:	.word	0x00000be8
     a14:	.word	0x00000be8
     a18:	.word	0x00000be8
     a1c:	.word	0x00000b24
     a20:	.word	0x00000be8
     a24:	.word	0x00000be8
     a28:	.word	0x00000b40
     a2c:	.word	0x00000b5c
     a30:	.word	0x00000be8
     a34:	.word	0x00000b78
     a38:	.word	0x00000be8
     a3c:	.word	0x00000be8
     a40:	.word	0x00000be8
     a44:	.word	0x00000be8
     a48:	.word	0x00000be8
     a4c:	.word	0x00000be8
     a50:	.word	0x00000b94
     a54:	.word	0x00000bb0
     a58:	.word	0x00000be8
     a5c:	.word	0x00000be8
     a60:	.word	0x00000be8
     a64:	.word	0x00000be8
     a68:	.word	0x00000be8
     a6c:	.word	0x00000be8
     a70:	.word	0x00000be8
     a74:	.word	0x00000be8
     a78:	.word	0x00000bb0
     a7c:	.word	0x00000be8
     a80:	.word	0x00000b24
     a84:	.word	0x00000be8
     a88:	.word	0x00000be8
     a8c:	.word	0x00000be8
     a90:	.word	0x00000be8
     a94:	.word	0x00000be8
     a98:	.word	0x00000be8
     a9c:	.word	0x00000be8
     aa0:	.word	0x00000ad0
     aa4:	.word	0x00000be8
     aa8:	.word	0x00000be8
     aac:	.word	0x00000b94
     ab0:	.word	0x00000bb0
     ab4:	.word	0x00000be8
     ab8:	.word	0x00000be8
     abc:	.word	0x00000be8
     ac0:	.word	0x00000be8
     ac4:	.word	0x00000be8
     ac8:	.word	0x00000bcc
     acc:	.word	0x00000bcc
     ad0:	mov	r3, #2
     ad4:	str	r3, [fp, #-8]
     ad8:	mov	r3, #0
     adc:	str	r3, [fp, #-12]
     ae0:	mov	r3, #1
     ae4:	str	r3, [fp, #-20]	; 0xffffffec
     ae8:	b	c00 <read_attribute+0x228>
     aec:	mov	r3, #2
     af0:	str	r3, [fp, #-8]
     af4:	mov	r3, #2
     af8:	str	r3, [fp, #-12]
     afc:	mov	r3, #2
     b00:	str	r3, [fp, #-20]	; 0xffffffec
     b04:	b	c00 <read_attribute+0x228>
     b08:	mov	r3, #2
     b0c:	str	r3, [fp, #-8]
     b10:	mov	r3, #4
     b14:	str	r3, [fp, #-12]
     b18:	mov	r3, #4
     b1c:	str	r3, [fp, #-20]	; 0xffffffec
     b20:	b	c00 <read_attribute+0x228>
     b24:	mov	r3, #2
     b28:	str	r3, [fp, #-8]
     b2c:	mov	r3, #6
     b30:	str	r3, [fp, #-12]
     b34:	mov	r3, #8
     b38:	str	r3, [fp, #-20]	; 0xffffffec
     b3c:	b	c00 <read_attribute+0x228>
     b40:	mov	r3, #2
     b44:	str	r3, [fp, #-8]
     b48:	mov	r3, #1
     b4c:	str	r3, [fp, #-12]
     b50:	mov	r3, #1
     b54:	str	r3, [fp, #-20]	; 0xffffffec
     b58:	b	c00 <read_attribute+0x228>
     b5c:	mov	r3, #2
     b60:	str	r3, [fp, #-8]
     b64:	mov	r3, #3
     b68:	str	r3, [fp, #-12]
     b6c:	mov	r3, #2
     b70:	str	r3, [fp, #-20]	; 0xffffffec
     b74:	b	c00 <read_attribute+0x228>
     b78:	mov	r3, #2
     b7c:	str	r3, [fp, #-8]
     b80:	mov	r3, #5
     b84:	str	r3, [fp, #-12]
     b88:	mov	r3, #4
     b8c:	str	r3, [fp, #-20]	; 0xffffffec
     b90:	b	c00 <read_attribute+0x228>
     b94:	mov	r3, #3
     b98:	str	r3, [fp, #-8]
     b9c:	mov	r3, #8
     ba0:	str	r3, [fp, #-12]
     ba4:	mov	r3, #4
     ba8:	str	r3, [fp, #-20]	; 0xffffffec
     bac:	b	c00 <read_attribute+0x228>
     bb0:	mov	r3, #3
     bb4:	str	r3, [fp, #-8]
     bb8:	mov	r3, #9
     bbc:	str	r3, [fp, #-12]
     bc0:	mov	r3, #8
     bc4:	str	r3, [fp, #-20]	; 0xffffffec
     bc8:	b	c00 <read_attribute+0x228>
     bcc:	mov	r3, #4
     bd0:	str	r3, [fp, #-8]
     bd4:	mov	r3, #11
     bd8:	str	r3, [fp, #-12]
     bdc:	ldr	r3, [fp, #8]
     be0:	str	r3, [fp, #-20]	; 0xffffffec
     be4:	b	c00 <read_attribute+0x228>
     be8:	ldr	r2, [fp, #4]
     bec:	ldr	r1, [pc, #780]	; f00 <read_attribute+0x528>
     bf0:	mvn	r0, #99	; 0x63
     bf4:	bl	0 <coda_set_error>
     bf8:	mvn	r3, #0
     bfc:	b	ef4 <read_attribute+0x51c>
     c00:	ldr	r3, [fp, #-8]
     c04:	cmp	r3, #2
     c08:	bcc	c44 <read_attribute+0x26c>
     c0c:	cmp	r3, #3
     c10:	bls	c20 <read_attribute+0x248>
     c14:	cmp	r3, #4
     c18:	beq	c34 <read_attribute+0x25c>
     c1c:	b	c44 <read_attribute+0x26c>
     c20:	ldr	r1, [fp, #-8]
     c24:	mov	r0, #5
     c28:	bl	0 <coda_type_number_new>
     c2c:	str	r0, [fp, #-16]
     c30:	b	c58 <read_attribute+0x280>
     c34:	mov	r0, #5
     c38:	bl	0 <coda_type_text_new>
     c3c:	str	r0, [fp, #-16]
     c40:	b	c58 <read_attribute+0x280>
     c44:	ldr	r3, [pc, #696]	; f04 <read_attribute+0x52c>
     c48:	ldr	r2, [pc, #696]	; f08 <read_attribute+0x530>
     c4c:	ldr	r1, [pc, #696]	; f0c <read_attribute+0x534>
     c50:	ldr	r0, [pc, #696]	; f10 <read_attribute+0x538>
     c54:	bl	0 <__assert_fail>
     c58:	ldr	r3, [fp, #-16]
     c5c:	cmp	r3, #0
     c60:	bne	c6c <read_attribute+0x294>
     c64:	mvn	r3, #0
     c68:	b	ef4 <read_attribute+0x51c>
     c6c:	ldr	r1, [fp, #-12]
     c70:	ldr	r0, [fp, #-16]
     c74:	bl	0 <coda_type_set_read_type>
     c78:	mov	r3, r0
     c7c:	cmp	r3, #0
     c80:	beq	c94 <read_attribute+0x2bc>
     c84:	ldr	r0, [fp, #-16]
     c88:	bl	0 <coda_type_release>
     c8c:	mvn	r3, #0
     c90:	b	ef4 <read_attribute+0x51c>
     c94:	ldr	r3, [fp, #-8]
     c98:	cmp	r3, #4
     c9c:	beq	cf8 <read_attribute+0x320>
     ca0:	ldr	r3, [fp, #-20]	; 0xffffffec
     ca4:	mov	r2, r3
     ca8:	asr	r3, r2, #31
     cac:	ldr	r0, [fp, #-16]
     cb0:	bl	0 <coda_type_set_byte_size>
     cb4:	mov	r3, r0
     cb8:	cmp	r3, #0
     cbc:	beq	cd0 <read_attribute+0x2f8>
     cc0:	ldr	r0, [fp, #-16]
     cc4:	bl	0 <coda_type_release>
     cc8:	mvn	r3, #0
     ccc:	b	ef4 <read_attribute+0x51c>
     cd0:	mov	r1, #1
     cd4:	ldr	r0, [fp, #-16]
     cd8:	bl	0 <coda_type_number_set_endianness>
     cdc:	mov	r3, r0
     ce0:	cmp	r3, #0
     ce4:	beq	cf8 <read_attribute+0x320>
     ce8:	ldr	r0, [fp, #-16]
     cec:	bl	0 <coda_type_release>
     cf0:	mvn	r3, #0
     cf4:	b	ef4 <read_attribute+0x51c>
     cf8:	ldr	r3, [fp, #8]
     cfc:	cmp	r3, #1
     d00:	beq	ea8 <read_attribute+0x4d0>
     d04:	ldr	r3, [fp, #4]
     d08:	cmp	r3, #51	; 0x33
     d0c:	beq	ea8 <read_attribute+0x4d0>
     d10:	ldr	r3, [fp, #4]
     d14:	cmp	r3, #52	; 0x34
     d18:	beq	ea8 <read_attribute+0x4d0>
     d1c:	mov	r3, #0
     d20:	str	r3, [fp, #-28]	; 0xffffffe4
     d24:	mov	r0, #5
     d28:	bl	0 <coda_type_array_new>
     d2c:	str	r0, [fp, #-32]	; 0xffffffe0
     d30:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d34:	cmp	r3, #0
     d38:	bne	d4c <read_attribute+0x374>
     d3c:	ldr	r0, [fp, #-16]
     d40:	bl	0 <coda_type_release>
     d44:	mvn	r3, #0
     d48:	b	ef4 <read_attribute+0x51c>
     d4c:	ldr	r1, [fp, #-16]
     d50:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d54:	bl	0 <coda_type_array_set_base_type>
     d58:	mov	r3, r0
     d5c:	cmp	r3, #0
     d60:	beq	d7c <read_attribute+0x3a4>
     d64:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d68:	bl	0 <coda_type_release>
     d6c:	ldr	r0, [fp, #-16]
     d70:	bl	0 <coda_type_release>
     d74:	mvn	r3, #0
     d78:	b	ef4 <read_attribute+0x51c>
     d7c:	ldr	r0, [fp, #-16]
     d80:	bl	0 <coda_type_release>
     d84:	mov	r1, #0
     d88:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d8c:	bl	0 <coda_type_array_add_variable_dimension>
     d90:	mov	r3, r0
     d94:	cmp	r3, #0
     d98:	beq	dac <read_attribute+0x3d4>
     d9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     da0:	bl	0 <coda_type_release>
     da4:	mvn	r3, #0
     da8:	b	ef4 <read_attribute+0x51c>
     dac:	mov	r1, #0
     db0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     db4:	bl	0 <coda_mem_array_new>
     db8:	str	r0, [fp, #-28]	; 0xffffffe4
     dbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     dc0:	cmp	r3, #0
     dc4:	bne	dd8 <read_attribute+0x400>
     dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     dcc:	bl	0 <coda_type_release>
     dd0:	mvn	r3, #0
     dd4:	b	ef4 <read_attribute+0x51c>
     dd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ddc:	bl	0 <coda_type_release>
     de0:	mov	r3, #0
     de4:	str	r3, [fp, #-24]	; 0xffffffe8
     de8:	b	e94 <read_attribute+0x4bc>
     dec:	ldr	r3, [fp, #-24]	; 0xffffffe8
     df0:	ldr	r2, [fp, #-20]	; 0xffffffec
     df4:	mul	r3, r2, r3
     df8:	mov	r0, r3
     dfc:	asr	r1, r0, #31
     e00:	ldrd	r2, [fp, #-52]	; 0xffffffcc
     e04:	adds	r2, r2, r0
     e08:	adc	r3, r3, r1
     e0c:	ldr	r1, [fp, #12]
     e10:	str	r1, [sp, #8]
     e14:	ldr	r1, [fp, #-16]
     e18:	str	r1, [sp, #4]
     e1c:	ldr	r1, [fp, #-20]	; 0xffffffec
     e20:	str	r1, [sp]
     e24:	ldr	r0, [fp, #-40]	; 0xffffffd8
     e28:	bl	638 <read_attribute_sub>
     e2c:	mov	r3, r0
     e30:	cmp	r3, #0
     e34:	beq	e48 <read_attribute+0x470>
     e38:	ldr	r0, [fp, #-28]	; 0xffffffe4
     e3c:	bl	0 <coda_dynamic_type_delete>
     e40:	mvn	r3, #0
     e44:	b	ef4 <read_attribute+0x51c>
     e48:	ldr	r3, [fp, #12]
     e4c:	ldr	r3, [r3]
     e50:	mov	r1, r3
     e54:	ldr	r0, [fp, #-28]	; 0xffffffe4
     e58:	bl	0 <coda_mem_array_add_element>
     e5c:	mov	r3, r0
     e60:	cmp	r3, #0
     e64:	beq	e88 <read_attribute+0x4b0>
     e68:	ldr	r0, [fp, #-28]	; 0xffffffe4
     e6c:	bl	0 <coda_dynamic_type_delete>
     e70:	ldr	r3, [fp, #12]
     e74:	ldr	r3, [r3]
     e78:	mov	r0, r3
     e7c:	bl	0 <coda_dynamic_type_delete>
     e80:	mvn	r3, #0
     e84:	b	ef4 <read_attribute+0x51c>
     e88:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e8c:	add	r3, r3, #1
     e90:	str	r3, [fp, #-24]	; 0xffffffe8
     e94:	ldr	r2, [fp, #-24]	; 0xffffffe8
     e98:	ldr	r3, [fp, #8]
     e9c:	cmp	r2, r3
     ea0:	blt	dec <read_attribute+0x414>
     ea4:	b	ef0 <read_attribute+0x518>
     ea8:	ldr	r3, [fp, #12]
     eac:	str	r3, [sp, #8]
     eb0:	ldr	r3, [fp, #-16]
     eb4:	str	r3, [sp, #4]
     eb8:	ldr	r3, [fp, #-20]	; 0xffffffec
     ebc:	str	r3, [sp]
     ec0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
     ec4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     ec8:	bl	638 <read_attribute_sub>
     ecc:	mov	r3, r0
     ed0:	cmp	r3, #0
     ed4:	beq	ee8 <read_attribute+0x510>
     ed8:	ldr	r0, [fp, #-16]
     edc:	bl	0 <coda_type_release>
     ee0:	mvn	r3, #0
     ee4:	b	ef4 <read_attribute+0x51c>
     ee8:	ldr	r0, [fp, #-16]
     eec:	bl	0 <coda_type_release>
     ef0:	mov	r3, #0
     ef4:	mov	r0, r3
     ef8:	sub	sp, fp, #4
     efc:	pop	{fp, pc}
     f00:	.word	0x000001ac
     f04:	.word	0x000008d0
     f08:	.word	0x0000010a
     f0c:	.word	0x00000128
     f10:	.word	0x000001a8

00000f14 <read_AEDR>:
     f14:	push	{fp, lr}
     f18:	add	fp, sp, #4
     f1c:	sub	sp, sp, #64	; 0x40
     f20:	str	r0, [fp, #-40]	; 0xffffffd8
     f24:	strd	r2, [fp, #-52]	; 0xffffffcc
     f28:	ldrd	r2, [fp, #-52]	; 0xffffffcc
     f2c:	orrs	r3, r2, r3
     f30:	bne	f3c <read_AEDR+0x28>
     f34:	mov	r3, #0
     f38:	b	1344 <read_AEDR+0x430>
     f3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     f40:	ldr	ip, [r3, #52]	; 0x34
     f44:	ldrd	r2, [fp, #-52]	; 0xffffffcc
     f48:	adds	r0, r2, #8
     f4c:	adc	r1, r3, #0
     f50:	sub	r3, fp, #12
     f54:	str	r3, [sp, #8]
     f58:	mov	r2, #4
     f5c:	mov	r3, #0
     f60:	strd	r2, [sp]
     f64:	mov	r2, r0
     f68:	mov	r3, r1
     f6c:	mov	r0, ip
     f70:	bl	0 <read_bytes>
     f74:	mov	r3, r0
     f78:	cmp	r3, #0
     f7c:	bge	f88 <read_AEDR+0x74>
     f80:	mvn	r3, #0
     f84:	b	1344 <read_AEDR+0x430>
     f88:	sub	r3, fp, #12
     f8c:	mov	r0, r3
     f90:	bl	27c <swap4>
     f94:	ldr	r3, [fp, #-12]
     f98:	cmp	r3, #5
     f9c:	beq	fc8 <read_AEDR+0xb4>
     fa0:	ldr	r3, [fp, #-12]
     fa4:	cmp	r3, #9
     fa8:	beq	fc8 <read_AEDR+0xb4>
     fac:	ldr	r3, [fp, #-12]
     fb0:	mov	r2, r3
     fb4:	ldr	r1, [pc, #916]	; 1350 <read_AEDR+0x43c>
     fb8:	ldr	r0, [pc, #916]	; 1354 <read_AEDR+0x440>
     fbc:	bl	0 <coda_set_error>
     fc0:	mvn	r3, #0
     fc4:	b	1344 <read_AEDR+0x430>
     fc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     fcc:	ldr	ip, [r3, #52]	; 0x34
     fd0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
     fd4:	adds	r0, r2, #12
     fd8:	adc	r1, r3, #0
     fdc:	sub	r3, fp, #20
     fe0:	str	r3, [sp, #8]
     fe4:	mov	r2, #8
     fe8:	mov	r3, #0
     fec:	strd	r2, [sp]
     ff0:	mov	r2, r0
     ff4:	mov	r3, r1
     ff8:	mov	r0, ip
     ffc:	bl	0 <read_bytes>
    1000:	mov	r3, r0
    1004:	cmp	r3, #0
    1008:	bge	1014 <read_AEDR+0x100>
    100c:	mvn	r3, #0
    1010:	b	1344 <read_AEDR+0x430>
    1014:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1018:	ldr	ip, [r3, #52]	; 0x34
    101c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    1020:	adds	r0, r2, #20
    1024:	adc	r1, r3, #0
    1028:	sub	r3, fp, #24
    102c:	str	r3, [sp, #8]
    1030:	mov	r2, #4
    1034:	mov	r3, #0
    1038:	strd	r2, [sp]
    103c:	mov	r2, r0
    1040:	mov	r3, r1
    1044:	mov	r0, ip
    1048:	bl	0 <read_bytes>
    104c:	mov	r3, r0
    1050:	cmp	r3, #0
    1054:	bge	1060 <read_AEDR+0x14c>
    1058:	mvn	r3, #0
    105c:	b	1344 <read_AEDR+0x430>
    1060:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1064:	ldr	ip, [r3, #52]	; 0x34
    1068:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    106c:	adds	r0, r2, #24
    1070:	adc	r1, r3, #0
    1074:	sub	r3, fp, #28
    1078:	str	r3, [sp, #8]
    107c:	mov	r2, #4
    1080:	mov	r3, #0
    1084:	strd	r2, [sp]
    1088:	mov	r2, r0
    108c:	mov	r3, r1
    1090:	mov	r0, ip
    1094:	bl	0 <read_bytes>
    1098:	mov	r3, r0
    109c:	cmp	r3, #0
    10a0:	bge	10ac <read_AEDR+0x198>
    10a4:	mvn	r3, #0
    10a8:	b	1344 <read_AEDR+0x430>
    10ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    10b0:	ldr	ip, [r3, #52]	; 0x34
    10b4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    10b8:	adds	r0, r2, #28
    10bc:	adc	r1, r3, #0
    10c0:	sub	r3, fp, #32
    10c4:	str	r3, [sp, #8]
    10c8:	mov	r2, #4
    10cc:	mov	r3, #0
    10d0:	strd	r2, [sp]
    10d4:	mov	r2, r0
    10d8:	mov	r3, r1
    10dc:	mov	r0, ip
    10e0:	bl	0 <read_bytes>
    10e4:	mov	r3, r0
    10e8:	cmp	r3, #0
    10ec:	bge	10f8 <read_AEDR+0x1e4>
    10f0:	mvn	r3, #0
    10f4:	b	1344 <read_AEDR+0x430>
    10f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    10fc:	ldr	ip, [r3, #52]	; 0x34
    1100:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    1104:	adds	r0, r2, #32
    1108:	adc	r1, r3, #0
    110c:	sub	r3, fp, #36	; 0x24
    1110:	str	r3, [sp, #8]
    1114:	mov	r2, #4
    1118:	mov	r3, #0
    111c:	strd	r2, [sp]
    1120:	mov	r2, r0
    1124:	mov	r3, r1
    1128:	mov	r0, ip
    112c:	bl	0 <read_bytes>
    1130:	mov	r3, r0
    1134:	cmp	r3, #0
    1138:	bge	1144 <read_AEDR+0x230>
    113c:	mvn	r3, #0
    1140:	b	1344 <read_AEDR+0x430>
    1144:	sub	r3, fp, #20
    1148:	mov	r0, r3
    114c:	bl	398 <swap8>
    1150:	sub	r3, fp, #24
    1154:	mov	r0, r3
    1158:	bl	27c <swap4>
    115c:	sub	r3, fp, #28
    1160:	mov	r0, r3
    1164:	bl	27c <swap4>
    1168:	sub	r3, fp, #32
    116c:	mov	r0, r3
    1170:	bl	27c <swap4>
    1174:	sub	r3, fp, #36	; 0x24
    1178:	mov	r0, r3
    117c:	bl	27c <swap4>
    1180:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    1184:	adds	r2, r2, #56	; 0x38
    1188:	adc	r3, r3, #0
    118c:	strd	r2, [fp, #-52]	; 0xffffffcc
    1190:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1194:	cmp	r3, #32
    1198:	bne	11b0 <read_AEDR+0x29c>
    119c:	ldr	r1, [pc, #436]	; 1358 <read_AEDR+0x444>
    11a0:	mvn	r0, #199	; 0xc7
    11a4:	bl	0 <coda_set_error>
    11a8:	mvn	r3, #0
    11ac:	b	1344 <read_AEDR+0x430>
    11b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    11b8:	sub	r1, fp, #8
    11bc:	str	r1, [sp, #8]
    11c0:	str	r2, [sp, #4]
    11c4:	str	r3, [sp]
    11c8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    11cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    11d0:	bl	9d8 <read_attribute>
    11d4:	mov	r3, r0
    11d8:	cmp	r3, #0
    11dc:	beq	11e8 <read_AEDR+0x2d4>
    11e0:	mvn	r3, #0
    11e4:	b	1344 <read_AEDR+0x430>
    11e8:	ldr	r3, [fp, #-12]
    11ec:	cmp	r3, #5
    11f0:	bne	123c <read_AEDR+0x328>
    11f4:	ldr	r3, [fp, #8]
    11f8:	and	r3, r3, #1
    11fc:	cmp	r3, #0
    1200:	beq	123c <read_AEDR+0x328>
    1204:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1208:	ldr	r0, [r3, #20]
    120c:	ldr	r2, [fp, #-8]
    1210:	mov	r3, #1
    1214:	ldr	r1, [fp, #4]
    1218:	bl	0 <coda_mem_type_add_attribute>
    121c:	mov	r3, r0
    1220:	cmp	r3, #0
    1224:	beq	1310 <read_AEDR+0x3fc>
    1228:	ldr	r3, [fp, #-8]
    122c:	mov	r0, r3
    1230:	bl	0 <coda_dynamic_type_delete>
    1234:	mvn	r3, #0
    1238:	b	1344 <read_AEDR+0x430>
    123c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1240:	cmp	r3, #0
    1244:	blt	1260 <read_AEDR+0x34c>
    1248:	ldr	r3, [fp, #-40]	; 0xffffffd8
    124c:	ldr	r3, [r3, #20]
    1250:	ldr	r2, [r3, #16]
    1254:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1258:	cmp	r2, r3
    125c:	bgt	1288 <read_AEDR+0x374>
    1260:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1264:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1268:	ldr	r3, [r3, #20]
    126c:	ldr	r3, [r3, #16]
    1270:	sub	r3, r3, #1
    1274:	ldr	r1, [pc, #224]	; 135c <read_AEDR+0x448>
    1278:	ldr	r0, [pc, #212]	; 1354 <read_AEDR+0x440>
    127c:	bl	0 <coda_set_error>
    1280:	mvn	r3, #0
    1284:	b	1344 <read_AEDR+0x430>
    1288:	ldr	r3, [fp, #-40]	; 0xffffffd8
    128c:	ldr	r3, [r3, #20]
    1290:	ldr	r2, [r3, #20]
    1294:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1298:	lsl	r3, r3, #2
    129c:	add	r3, r2, r3
    12a0:	ldr	r3, [r3]
    12a4:	ldr	r3, [r3]
    12a8:	cmp	r3, #103	; 0x67
    12ac:	beq	12c4 <read_AEDR+0x3b0>
    12b0:	ldr	r3, [pc, #168]	; 1360 <read_AEDR+0x44c>
    12b4:	ldr	r2, [pc, #168]	; 1364 <read_AEDR+0x450>
    12b8:	ldr	r1, [pc, #168]	; 1368 <read_AEDR+0x454>
    12bc:	ldr	r0, [pc, #168]	; 136c <read_AEDR+0x458>
    12c0:	bl	0 <__assert_fail>
    12c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    12c8:	ldr	r3, [r3, #20]
    12cc:	ldr	r2, [r3, #20]
    12d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    12d4:	lsl	r3, r3, #2
    12d8:	add	r3, r2, r3
    12dc:	ldr	r0, [r3]
    12e0:	ldr	r2, [fp, #-8]
    12e4:	mov	r3, #1
    12e8:	ldr	r1, [fp, #4]
    12ec:	bl	0 <coda_cdf_variable_add_attribute>
    12f0:	mov	r3, r0
    12f4:	cmp	r3, #0
    12f8:	beq	1310 <read_AEDR+0x3fc>
    12fc:	ldr	r3, [fp, #-8]
    1300:	mov	r0, r3
    1304:	bl	0 <coda_dynamic_type_delete>
    1308:	mvn	r3, #0
    130c:	b	1344 <read_AEDR+0x430>
    1310:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1314:	ldr	r1, [fp, #8]
    1318:	str	r1, [sp, #4]
    131c:	ldr	r1, [fp, #4]
    1320:	str	r1, [sp]
    1324:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1328:	bl	f14 <read_AEDR>
    132c:	mov	r3, r0
    1330:	cmp	r3, #0
    1334:	beq	1340 <read_AEDR+0x42c>
    1338:	mvn	r3, #0
    133c:	b	1344 <read_AEDR+0x430>
    1340:	mov	r3, #0
    1344:	mov	r0, r3
    1348:	sub	sp, fp, #4
    134c:	pop	{fp, pc}
    1350:	.word	0x000001c8
    1354:	.word	0xfffffed4
    1358:	.word	0x00000200
    135c:	.word	0x00000228
    1360:	.word	0x000008e0
    1364:	.word	0x000001b7
    1368:	.word	0x00000128
    136c:	.word	0x00000278

00001370 <read_ADR>:
    1370:	push	{fp, lr}
    1374:	add	fp, sp, #4
    1378:	sub	sp, sp, #360	; 0x168
    137c:	str	r0, [fp, #-336]	; 0xfffffeb0
    1380:	sub	r1, fp, #340	; 0x154
    1384:	strd	r2, [r1, #-8]
    1388:	sub	r3, fp, #340	; 0x154
    138c:	ldrd	r2, [r3, #-8]
    1390:	orrs	r3, r2, r3
    1394:	bne	13a0 <read_ADR+0x30>
    1398:	mov	r3, #0
    139c:	b	186c <read_ADR+0x4fc>
    13a0:	ldr	r3, [fp, #-336]	; 0xfffffeb0
    13a4:	ldr	ip, [r3, #52]	; 0x34
    13a8:	sub	r3, fp, #340	; 0x154
    13ac:	ldrd	r2, [r3, #-8]
    13b0:	adds	r0, r2, #8
    13b4:	adc	r1, r3, #0
    13b8:	sub	r3, fp, #16
    13bc:	str	r3, [sp, #8]
    13c0:	mov	r2, #4
    13c4:	mov	r3, #0
    13c8:	strd	r2, [sp]
    13cc:	mov	r2, r0
    13d0:	mov	r3, r1
    13d4:	mov	r0, ip
    13d8:	bl	0 <read_bytes>
    13dc:	mov	r3, r0
    13e0:	cmp	r3, #0
    13e4:	bge	13f0 <read_ADR+0x80>
    13e8:	mvn	r3, #0
    13ec:	b	186c <read_ADR+0x4fc>
    13f0:	sub	r3, fp, #16
    13f4:	mov	r0, r3
    13f8:	bl	27c <swap4>
    13fc:	ldr	r3, [fp, #-16]
    1400:	cmp	r3, #4
    1404:	beq	1424 <read_ADR+0xb4>
    1408:	ldr	r3, [fp, #-16]
    140c:	mov	r2, r3
    1410:	ldr	r1, [pc, #1120]	; 1878 <read_ADR+0x508>
    1414:	ldr	r0, [pc, #1120]	; 187c <read_ADR+0x50c>
    1418:	bl	0 <coda_set_error>
    141c:	mvn	r3, #0
    1420:	b	186c <read_ADR+0x4fc>
    1424:	ldr	r3, [fp, #-336]	; 0xfffffeb0
    1428:	ldr	ip, [r3, #52]	; 0x34
    142c:	sub	r3, fp, #340	; 0x154
    1430:	ldrd	r2, [r3, #-8]
    1434:	adds	r0, r2, #12
    1438:	adc	r1, r3, #0
    143c:	sub	r3, fp, #28
    1440:	str	r3, [sp, #8]
    1444:	mov	r2, #8
    1448:	mov	r3, #0
    144c:	strd	r2, [sp]
    1450:	mov	r2, r0
    1454:	mov	r3, r1
    1458:	mov	r0, ip
    145c:	bl	0 <read_bytes>
    1460:	mov	r3, r0
    1464:	cmp	r3, #0
    1468:	bge	1474 <read_ADR+0x104>
    146c:	mvn	r3, #0
    1470:	b	186c <read_ADR+0x4fc>
    1474:	ldr	r3, [fp, #-336]	; 0xfffffeb0
    1478:	ldr	ip, [r3, #52]	; 0x34
    147c:	sub	r3, fp, #340	; 0x154
    1480:	ldrd	r2, [r3, #-8]
    1484:	adds	r0, r2, #20
    1488:	adc	r1, r3, #0
    148c:	sub	r3, fp, #36	; 0x24
    1490:	str	r3, [sp, #8]
    1494:	mov	r2, #8
    1498:	mov	r3, #0
    149c:	strd	r2, [sp]
    14a0:	mov	r2, r0
    14a4:	mov	r3, r1
    14a8:	mov	r0, ip
    14ac:	bl	0 <read_bytes>
    14b0:	mov	r3, r0
    14b4:	cmp	r3, #0
    14b8:	bge	14c4 <read_ADR+0x154>
    14bc:	mvn	r3, #0
    14c0:	b	186c <read_ADR+0x4fc>
    14c4:	ldr	r3, [fp, #-336]	; 0xfffffeb0
    14c8:	ldr	ip, [r3, #52]	; 0x34
    14cc:	sub	r3, fp, #340	; 0x154
    14d0:	ldrd	r2, [r3, #-8]
    14d4:	adds	r0, r2, #28
    14d8:	adc	r1, r3, #0
    14dc:	sub	r3, fp, #40	; 0x28
    14e0:	str	r3, [sp, #8]
    14e4:	mov	r2, #4
    14e8:	mov	r3, #0
    14ec:	strd	r2, [sp]
    14f0:	mov	r2, r0
    14f4:	mov	r3, r1
    14f8:	mov	r0, ip
    14fc:	bl	0 <read_bytes>
    1500:	mov	r3, r0
    1504:	cmp	r3, #0
    1508:	bge	1514 <read_ADR+0x1a4>
    150c:	mvn	r3, #0
    1510:	b	186c <read_ADR+0x4fc>
    1514:	ldr	r3, [fp, #-336]	; 0xfffffeb0
    1518:	ldr	ip, [r3, #52]	; 0x34
    151c:	sub	r3, fp, #340	; 0x154
    1520:	ldrd	r2, [r3, #-8]
    1524:	adds	r0, r2, #32
    1528:	adc	r1, r3, #0
    152c:	sub	r3, fp, #44	; 0x2c
    1530:	str	r3, [sp, #8]
    1534:	mov	r2, #4
    1538:	mov	r3, #0
    153c:	strd	r2, [sp]
    1540:	mov	r2, r0
    1544:	mov	r3, r1
    1548:	mov	r0, ip
    154c:	bl	0 <read_bytes>
    1550:	mov	r3, r0
    1554:	cmp	r3, #0
    1558:	bge	1564 <read_ADR+0x1f4>
    155c:	mvn	r3, #0
    1560:	b	186c <read_ADR+0x4fc>
    1564:	ldr	r3, [fp, #-336]	; 0xfffffeb0
    1568:	ldr	ip, [r3, #52]	; 0x34
    156c:	sub	r3, fp, #340	; 0x154
    1570:	ldrd	r2, [r3, #-8]
    1574:	adds	r0, r2, #36	; 0x24
    1578:	adc	r1, r3, #0
    157c:	sub	r3, fp, #48	; 0x30
    1580:	str	r3, [sp, #8]
    1584:	mov	r2, #4
    1588:	mov	r3, #0
    158c:	strd	r2, [sp]
    1590:	mov	r2, r0
    1594:	mov	r3, r1
    1598:	mov	r0, ip
    159c:	bl	0 <read_bytes>
    15a0:	mov	r3, r0
    15a4:	cmp	r3, #0
    15a8:	bge	15b4 <read_ADR+0x244>
    15ac:	mvn	r3, #0
    15b0:	b	186c <read_ADR+0x4fc>
    15b4:	ldr	r3, [fp, #-336]	; 0xfffffeb0
    15b8:	ldr	ip, [r3, #52]	; 0x34
    15bc:	sub	r3, fp, #340	; 0x154
    15c0:	ldrd	r2, [r3, #-8]
    15c4:	adds	r0, r2, #40	; 0x28
    15c8:	adc	r1, r3, #0
    15cc:	sub	r3, fp, #52	; 0x34
    15d0:	str	r3, [sp, #8]
    15d4:	mov	r2, #4
    15d8:	mov	r3, #0
    15dc:	strd	r2, [sp]
    15e0:	mov	r2, r0
    15e4:	mov	r3, r1
    15e8:	mov	r0, ip
    15ec:	bl	0 <read_bytes>
    15f0:	mov	r3, r0
    15f4:	cmp	r3, #0
    15f8:	bge	1604 <read_ADR+0x294>
    15fc:	mvn	r3, #0
    1600:	b	186c <read_ADR+0x4fc>
    1604:	ldr	r3, [fp, #-336]	; 0xfffffeb0
    1608:	ldr	ip, [r3, #52]	; 0x34
    160c:	sub	r3, fp, #340	; 0x154
    1610:	ldrd	r2, [r3, #-8]
    1614:	adds	r0, r2, #48	; 0x30
    1618:	adc	r1, r3, #0
    161c:	sub	r3, fp, #60	; 0x3c
    1620:	str	r3, [sp, #8]
    1624:	mov	r2, #8
    1628:	mov	r3, #0
    162c:	strd	r2, [sp]
    1630:	mov	r2, r0
    1634:	mov	r3, r1
    1638:	mov	r0, ip
    163c:	bl	0 <read_bytes>
    1640:	mov	r3, r0
    1644:	cmp	r3, #0
    1648:	bge	1654 <read_ADR+0x2e4>
    164c:	mvn	r3, #0
    1650:	b	186c <read_ADR+0x4fc>
    1654:	ldr	r3, [fp, #-336]	; 0xfffffeb0
    1658:	ldr	ip, [r3, #52]	; 0x34
    165c:	sub	r3, fp, #340	; 0x154
    1660:	ldrd	r2, [r3, #-8]
    1664:	adds	r0, r2, #56	; 0x38
    1668:	adc	r1, r3, #0
    166c:	sub	r3, fp, #64	; 0x40
    1670:	str	r3, [sp, #8]
    1674:	mov	r2, #4
    1678:	mov	r3, #0
    167c:	strd	r2, [sp]
    1680:	mov	r2, r0
    1684:	mov	r3, r1
    1688:	mov	r0, ip
    168c:	bl	0 <read_bytes>
    1690:	mov	r3, r0
    1694:	cmp	r3, #0
    1698:	bge	16a4 <read_ADR+0x334>
    169c:	mvn	r3, #0
    16a0:	b	186c <read_ADR+0x4fc>
    16a4:	ldr	r3, [fp, #-336]	; 0xfffffeb0
    16a8:	ldr	ip, [r3, #52]	; 0x34
    16ac:	sub	r3, fp, #340	; 0x154
    16b0:	ldrd	r2, [r3, #-8]
    16b4:	adds	r0, r2, #60	; 0x3c
    16b8:	adc	r1, r3, #0
    16bc:	sub	r3, fp, #68	; 0x44
    16c0:	str	r3, [sp, #8]
    16c4:	mov	r2, #4
    16c8:	mov	r3, #0
    16cc:	strd	r2, [sp]
    16d0:	mov	r2, r0
    16d4:	mov	r3, r1
    16d8:	mov	r0, ip
    16dc:	bl	0 <read_bytes>
    16e0:	mov	r3, r0
    16e4:	cmp	r3, #0
    16e8:	bge	16f4 <read_ADR+0x384>
    16ec:	mvn	r3, #0
    16f0:	b	186c <read_ADR+0x4fc>
    16f4:	ldr	r3, [fp, #-336]	; 0xfffffeb0
    16f8:	ldr	ip, [r3, #52]	; 0x34
    16fc:	sub	r3, fp, #340	; 0x154
    1700:	ldrd	r2, [r3, #-8]
    1704:	adds	r0, r2, #68	; 0x44
    1708:	adc	r1, r3, #0
    170c:	sub	r3, fp, #328	; 0x148
    1710:	str	r3, [sp, #8]
    1714:	mov	r2, #256	; 0x100
    1718:	mov	r3, #0
    171c:	strd	r2, [sp]
    1720:	mov	r2, r0
    1724:	mov	r3, r1
    1728:	mov	r0, ip
    172c:	bl	0 <read_bytes>
    1730:	mov	r3, r0
    1734:	cmp	r3, #0
    1738:	bge	1744 <read_ADR+0x3d4>
    173c:	mvn	r3, #0
    1740:	b	186c <read_ADR+0x4fc>
    1744:	mov	r3, #0
    1748:	strb	r3, [fp, #-72]	; 0xffffffb8
    174c:	sub	r3, fp, #328	; 0x148
    1750:	mov	r0, r3
    1754:	bl	5bc <rtrim>
    1758:	sub	r3, fp, #28
    175c:	mov	r0, r3
    1760:	bl	398 <swap8>
    1764:	sub	r3, fp, #36	; 0x24
    1768:	mov	r0, r3
    176c:	bl	398 <swap8>
    1770:	sub	r3, fp, #40	; 0x28
    1774:	mov	r0, r3
    1778:	bl	27c <swap4>
    177c:	sub	r3, fp, #44	; 0x2c
    1780:	mov	r0, r3
    1784:	bl	27c <swap4>
    1788:	sub	r3, fp, #48	; 0x30
    178c:	mov	r0, r3
    1790:	bl	27c <swap4>
    1794:	sub	r3, fp, #52	; 0x34
    1798:	mov	r0, r3
    179c:	bl	27c <swap4>
    17a0:	sub	r3, fp, #60	; 0x3c
    17a4:	mov	r0, r3
    17a8:	bl	398 <swap8>
    17ac:	sub	r3, fp, #64	; 0x40
    17b0:	mov	r0, r3
    17b4:	bl	27c <swap4>
    17b8:	sub	r3, fp, #68	; 0x44
    17bc:	mov	r0, r3
    17c0:	bl	27c <swap4>
    17c4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    17c8:	strd	r2, [fp, #-12]
    17cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    17d0:	and	r3, r3, #1
    17d4:	cmp	r3, #0
    17d8:	beq	1804 <read_ADR+0x494>
    17dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
    17e0:	cmp	r3, #0
    17e4:	beq	1818 <read_ADR+0x4a8>
    17e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    17ec:	mov	r2, r3
    17f0:	ldr	r1, [pc, #136]	; 1880 <read_ADR+0x510>
    17f4:	ldr	r0, [pc, #128]	; 187c <read_ADR+0x50c>
    17f8:	bl	0 <coda_set_error>
    17fc:	mvn	r3, #0
    1800:	b	186c <read_ADR+0x4fc>
    1804:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1808:	cmp	r3, #0
    180c:	bne	1818 <read_ADR+0x4a8>
    1810:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    1814:	strd	r2, [fp, #-12]
    1818:	ldr	r3, [fp, #-40]	; 0xffffffd8
    181c:	str	r3, [sp, #4]
    1820:	sub	r3, fp, #328	; 0x148
    1824:	str	r3, [sp]
    1828:	ldrd	r2, [fp, #-12]
    182c:	ldr	r0, [fp, #-336]	; 0xfffffeb0
    1830:	bl	f14 <read_AEDR>
    1834:	mov	r3, r0
    1838:	cmp	r3, #0
    183c:	beq	1848 <read_ADR+0x4d8>
    1840:	mvn	r3, #0
    1844:	b	186c <read_ADR+0x4fc>
    1848:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    184c:	ldr	r0, [fp, #-336]	; 0xfffffeb0
    1850:	bl	1370 <read_ADR>
    1854:	mov	r3, r0
    1858:	cmp	r3, #0
    185c:	beq	1868 <read_ADR+0x4f8>
    1860:	mvn	r3, #0
    1864:	b	186c <read_ADR+0x4fc>
    1868:	mov	r3, #0
    186c:	mov	r0, r3
    1870:	sub	sp, fp, #4
    1874:	pop	{fp, pc}
    1878:	.word	0x000002d8
    187c:	.word	0xfffffed4
    1880:	.word	0x00000310

00001884 <read_VR>:
    1884:	push	{fp, lr}
    1888:	add	fp, sp, #4
    188c:	sub	sp, sp, #120	; 0x78
    1890:	str	r0, [fp, #-96]	; 0xffffffa0
    1894:	str	r1, [fp, #-100]	; 0xffffff9c
    1898:	strd	r2, [fp, #-108]	; 0xffffff94
    189c:	ldrd	r2, [fp, #-108]	; 0xffffff94
    18a0:	orrs	r3, r2, r3
    18a4:	bne	18b0 <read_VR+0x2c>
    18a8:	mov	r3, #0
    18ac:	b	1ec0 <read_VR+0x63c>
    18b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
    18b4:	ldr	ip, [r3, #52]	; 0x34
    18b8:	ldrd	r2, [fp, #-108]	; 0xffffff94
    18bc:	adds	r0, r2, #8
    18c0:	adc	r1, r3, #0
    18c4:	sub	r3, fp, #28
    18c8:	str	r3, [sp, #8]
    18cc:	mov	r2, #4
    18d0:	mov	r3, #0
    18d4:	strd	r2, [sp]
    18d8:	mov	r2, r0
    18dc:	mov	r3, r1
    18e0:	mov	r0, ip
    18e4:	bl	0 <read_bytes>
    18e8:	mov	r3, r0
    18ec:	cmp	r3, #0
    18f0:	bge	18fc <read_VR+0x78>
    18f4:	mvn	r3, #0
    18f8:	b	1ec0 <read_VR+0x63c>
    18fc:	sub	r3, fp, #28
    1900:	mov	r0, r3
    1904:	bl	27c <swap4>
    1908:	ldr	r3, [fp, #-28]	; 0xffffffe4
    190c:	cmp	r3, #6
    1910:	bne	193c <read_VR+0xb8>
    1914:	ldr	r3, [fp, #8]
    1918:	str	r3, [sp, #4]
    191c:	ldr	r3, [fp, #4]
    1920:	str	r3, [sp]
    1924:	ldrd	r2, [fp, #-108]	; 0xffffff94
    1928:	ldr	r1, [fp, #-100]	; 0xffffff9c
    192c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    1930:	bl	1f08 <read_VXR>
    1934:	mov	r3, r0
    1938:	b	1ec0 <read_VR+0x63c>
    193c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1940:	cmp	r3, #7
    1944:	bne	19f0 <read_VR+0x16c>
    1948:	ldr	r3, [fp, #-100]	; 0xffffff9c
    194c:	ldr	r2, [r3, #20]
    1950:	ldr	r3, [fp, #8]
    1954:	cmp	r2, r3
    1958:	bgt	196c <read_VR+0xe8>
    195c:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1960:	ldr	r3, [r3, #20]
    1964:	sub	r3, r3, #1
    1968:	str	r3, [fp, #8]
    196c:	ldr	r3, [fp, #4]
    1970:	str	r3, [fp, #-8]
    1974:	b	19dc <read_VR+0x158>
    1978:	ldr	r3, [fp, #-100]	; 0xffffff9c
    197c:	ldr	r2, [r3, #36]	; 0x24
    1980:	ldr	r3, [fp, #-8]
    1984:	lsl	r3, r3, #3
    1988:	add	ip, r2, r3
    198c:	ldrd	r2, [fp, #-108]	; 0xffffff94
    1990:	adds	r0, r2, #12
    1994:	adc	r1, r3, #0
    1998:	ldr	r2, [fp, #-8]
    199c:	ldr	r3, [fp, #4]
    19a0:	sub	r3, r2, r3
    19a4:	ldr	r2, [fp, #-100]	; 0xffffff9c
    19a8:	ldr	r2, [r2, #24]
    19ac:	mul	r3, r2, r3
    19b0:	ldr	r2, [fp, #-100]	; 0xffffff9c
    19b4:	ldr	r2, [r2, #28]
    19b8:	mul	r3, r2, r3
    19bc:	mov	r2, r3
    19c0:	asr	r3, r2, #31
    19c4:	adds	r2, r2, r0
    19c8:	adc	r3, r3, r1
    19cc:	strd	r2, [ip]
    19d0:	ldr	r3, [fp, #-8]
    19d4:	add	r3, r3, #1
    19d8:	str	r3, [fp, #-8]
    19dc:	ldr	r2, [fp, #-8]
    19e0:	ldr	r3, [fp, #8]
    19e4:	cmp	r2, r3
    19e8:	ble	1978 <read_VR+0xf4>
    19ec:	b	1ebc <read_VR+0x638>
    19f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    19f4:	cmp	r3, #13
    19f8:	bne	1ea0 <read_VR+0x61c>
    19fc:	mov	r3, #0
    1a00:	str	r3, [fp, #-12]
    1a04:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1a08:	ldr	r2, [r3, #20]
    1a0c:	ldr	r3, [fp, #4]
    1a10:	cmp	r2, r3
    1a14:	bgt	1a20 <read_VR+0x19c>
    1a18:	mov	r3, #0
    1a1c:	b	1ec0 <read_VR+0x63c>
    1a20:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1a24:	ldr	r3, [r3, #40]	; 0x28
    1a28:	cmp	r3, #0
    1a2c:	bne	1ab8 <read_VR+0x234>
    1a30:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1a34:	ldr	r3, [r3, #20]
    1a38:	ldr	r2, [fp, #-100]	; 0xffffff9c
    1a3c:	ldr	r2, [r2, #24]
    1a40:	mul	r3, r2, r3
    1a44:	ldr	r2, [fp, #-100]	; 0xffffff9c
    1a48:	ldr	r2, [r2, #28]
    1a4c:	mul	r3, r2, r3
    1a50:	mov	r0, r3
    1a54:	bl	0 <malloc>
    1a58:	mov	r3, r0
    1a5c:	mov	r2, r3
    1a60:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1a64:	str	r2, [r3, #40]	; 0x28
    1a68:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1a6c:	ldr	r3, [r3, #40]	; 0x28
    1a70:	cmp	r3, #0
    1a74:	bne	1ab8 <read_VR+0x234>
    1a78:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1a7c:	ldr	r3, [r3, #20]
    1a80:	ldr	r2, [fp, #-100]	; 0xffffff9c
    1a84:	ldr	r2, [r2, #24]
    1a88:	mul	r3, r2, r3
    1a8c:	ldr	r2, [fp, #-100]	; 0xffffff9c
    1a90:	ldr	r2, [r2, #28]
    1a94:	mul	r2, r2, r3
    1a98:	ldr	r3, [pc, #1068]	; 1ecc <read_VR+0x648>
    1a9c:	str	r3, [sp]
    1aa0:	ldr	r3, [pc, #1064]	; 1ed0 <read_VR+0x64c>
    1aa4:	ldr	r1, [pc, #1064]	; 1ed4 <read_VR+0x650>
    1aa8:	mvn	r0, #0
    1aac:	bl	0 <coda_set_error>
    1ab0:	mvn	r3, #0
    1ab4:	b	1ec0 <read_VR+0x63c>
    1ab8:	ldr	r3, [fp, #-96]	; 0xffffffa0
    1abc:	ldr	ip, [r3, #52]	; 0x34
    1ac0:	ldrd	r2, [fp, #-108]	; 0xffffff94
    1ac4:	adds	r0, r2, #16
    1ac8:	adc	r1, r3, #0
    1acc:	sub	r3, fp, #36	; 0x24
    1ad0:	str	r3, [sp, #8]
    1ad4:	mov	r2, #8
    1ad8:	mov	r3, #0
    1adc:	strd	r2, [sp]
    1ae0:	mov	r2, r0
    1ae4:	mov	r3, r1
    1ae8:	mov	r0, ip
    1aec:	bl	0 <read_bytes>
    1af0:	mov	r3, r0
    1af4:	cmp	r3, #0
    1af8:	bge	1b04 <read_VR+0x280>
    1afc:	mvn	r3, #0
    1b00:	b	1ec0 <read_VR+0x63c>
    1b04:	sub	r3, fp, #36	; 0x24
    1b08:	mov	r0, r3
    1b0c:	bl	398 <swap8>
    1b10:	ldrd	r2, [fp, #-108]	; 0xffffff94
    1b14:	adds	r2, r2, #24
    1b18:	adc	r3, r3, #0
    1b1c:	strd	r2, [fp, #-108]	; 0xffffff94
    1b20:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1b24:	cmp	r2, #20
    1b28:	sbcs	r3, r3, #0
    1b2c:	bge	1b44 <read_VR+0x2c0>
    1b30:	ldr	r1, [pc, #928]	; 1ed8 <read_VR+0x654>
    1b34:	ldr	r0, [pc, #928]	; 1edc <read_VR+0x658>
    1b38:	bl	0 <coda_set_error>
    1b3c:	mvn	r3, #0
    1b40:	b	1ec0 <read_VR+0x63c>
    1b44:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1b48:	mov	r3, r2
    1b4c:	mov	r0, r3
    1b50:	bl	0 <malloc>
    1b54:	mov	r3, r0
    1b58:	str	r3, [fp, #-20]	; 0xffffffec
    1b5c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b60:	cmp	r3, #0
    1b64:	bne	1b8c <read_VR+0x308>
    1b68:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1b6c:	mov	r3, #652	; 0x28c
    1b70:	str	r3, [sp]
    1b74:	ldr	r3, [pc, #852]	; 1ed0 <read_VR+0x64c>
    1b78:	ldr	r1, [pc, #852]	; 1ed4 <read_VR+0x650>
    1b7c:	mvn	r0, #0
    1b80:	bl	0 <coda_set_error>
    1b84:	mvn	r3, #0
    1b88:	b	1ec0 <read_VR+0x63c>
    1b8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    1b90:	ldr	r0, [r3, #52]	; 0x34
    1b94:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1b98:	ldr	r1, [fp, #-20]	; 0xffffffec
    1b9c:	str	r1, [sp, #8]
    1ba0:	strd	r2, [sp]
    1ba4:	ldrd	r2, [fp, #-108]	; 0xffffff94
    1ba8:	bl	0 <read_bytes>
    1bac:	mov	r3, r0
    1bb0:	cmp	r3, #0
    1bb4:	bge	1bc8 <read_VR+0x344>
    1bb8:	ldr	r0, [fp, #-20]	; 0xffffffec
    1bbc:	bl	0 <free>
    1bc0:	mvn	r3, #0
    1bc4:	b	1ec0 <read_VR+0x63c>
    1bc8:	mov	r3, #0
    1bcc:	str	r3, [fp, #-92]	; 0xffffffa4
    1bd0:	mov	r3, #0
    1bd4:	str	r3, [fp, #-88]	; 0xffffffa8
    1bd8:	mov	r3, #0
    1bdc:	str	r3, [fp, #-60]	; 0xffffffc4
    1be0:	mov	r3, #0
    1be4:	str	r3, [fp, #-56]	; 0xffffffc8
    1be8:	mov	r3, #0
    1bec:	str	r3, [fp, #-52]	; 0xffffffcc
    1bf0:	mov	r3, #0
    1bf4:	str	r3, [fp, #-68]	; 0xffffffbc
    1bf8:	sub	r0, fp, #92	; 0x5c
    1bfc:	mov	r3, #56	; 0x38
    1c00:	ldr	r2, [pc, #728]	; 1ee0 <read_VR+0x65c>
    1c04:	mov	r1, #31
    1c08:	bl	0 <coda_inflateInit2_>
    1c0c:	mov	r3, r0
    1c10:	cmp	r3, #0
    1c14:	beq	1c50 <read_VR+0x3cc>
    1c18:	ldr	r1, [pc, #708]	; 1ee4 <read_VR+0x660>
    1c1c:	mvn	r0, #21
    1c20:	bl	0 <coda_set_error>
    1c24:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1c28:	cmp	r3, #0
    1c2c:	beq	1c40 <read_VR+0x3bc>
    1c30:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1c34:	mov	r1, r3
    1c38:	ldr	r0, [pc, #680]	; 1ee8 <read_VR+0x664>
    1c3c:	bl	0 <coda_add_error_message>
    1c40:	ldr	r0, [fp, #-20]	; 0xffffffec
    1c44:	bl	0 <free>
    1c48:	mvn	r3, #0
    1c4c:	b	1ec0 <read_VR+0x63c>
    1c50:	ldr	r3, [fp, #-20]	; 0xffffffec
    1c54:	str	r3, [fp, #-92]	; 0xffffffa4
    1c58:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1c5c:	mov	r3, r2
    1c60:	str	r3, [fp, #-88]	; 0xffffffa8
    1c64:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1c68:	ldr	r2, [r3, #20]
    1c6c:	ldr	r3, [fp, #8]
    1c70:	cmp	r2, r3
    1c74:	bgt	1c90 <read_VR+0x40c>
    1c78:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1c7c:	ldr	r3, [r3, #20]
    1c80:	sub	r3, r3, #1
    1c84:	str	r3, [fp, #8]
    1c88:	mov	r3, #1
    1c8c:	str	r3, [fp, #-12]
    1c90:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1c94:	ldr	r3, [r3, #40]	; 0x28
    1c98:	ldr	r2, [fp, #-100]	; 0xffffff9c
    1c9c:	ldr	r2, [r2, #24]
    1ca0:	ldr	r1, [fp, #4]
    1ca4:	mul	r2, r1, r2
    1ca8:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1cac:	ldr	r1, [r1, #28]
    1cb0:	mul	r2, r1, r2
    1cb4:	add	r3, r3, r2
    1cb8:	str	r3, [fp, #-80]	; 0xffffffb0
    1cbc:	ldr	r2, [fp, #8]
    1cc0:	ldr	r3, [fp, #4]
    1cc4:	sub	r3, r2, r3
    1cc8:	add	r3, r3, #1
    1ccc:	ldr	r2, [fp, #-100]	; 0xffffff9c
    1cd0:	ldr	r2, [r2, #24]
    1cd4:	mul	r3, r2, r3
    1cd8:	ldr	r2, [fp, #-100]	; 0xffffff9c
    1cdc:	ldr	r2, [r2, #28]
    1ce0:	mul	r3, r2, r3
    1ce4:	str	r3, [fp, #-76]	; 0xffffffb4
    1ce8:	sub	r3, fp, #92	; 0x5c
    1cec:	mov	r1, #4
    1cf0:	mov	r0, r3
    1cf4:	bl	0 <coda_inflate>
    1cf8:	str	r0, [fp, #-24]	; 0xffffffe8
    1cfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d00:	cmn	r3, #2
    1d04:	bne	1d1c <read_VR+0x498>
    1d08:	ldr	r3, [pc, #476]	; 1eec <read_VR+0x668>
    1d0c:	ldr	r2, [pc, #476]	; 1ef0 <read_VR+0x66c>
    1d10:	ldr	r1, [pc, #440]	; 1ed0 <read_VR+0x64c>
    1d14:	ldr	r0, [pc, #472]	; 1ef4 <read_VR+0x670>
    1d18:	bl	0 <__assert_fail>
    1d1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d20:	cmp	r3, #0
    1d24:	bge	1de8 <read_VR+0x564>
    1d28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d2c:	cmn	r3, #5
    1d30:	bne	1d40 <read_VR+0x4bc>
    1d34:	ldr	r3, [fp, #-12]
    1d38:	cmp	r3, #0
    1d3c:	bne	1de8 <read_VR+0x564>
    1d40:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d44:	cmn	r3, #3
    1d48:	beq	1d60 <read_VR+0x4dc>
    1d4c:	cmp	r3, #2
    1d50:	beq	1d60 <read_VR+0x4dc>
    1d54:	cmn	r3, #4
    1d58:	beq	1d8c <read_VR+0x508>
    1d5c:	b	1d9c <read_VR+0x518>
    1d60:	ldr	r1, [pc, #400]	; 1ef8 <read_VR+0x674>
    1d64:	mvn	r0, #21
    1d68:	bl	0 <coda_set_error>
    1d6c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1d70:	cmp	r3, #0
    1d74:	beq	1dc8 <read_VR+0x544>
    1d78:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1d7c:	mov	r1, r3
    1d80:	ldr	r0, [pc, #352]	; 1ee8 <read_VR+0x664>
    1d84:	bl	0 <coda_add_error_message>
    1d88:	b	1dc8 <read_VR+0x544>
    1d8c:	mov	r1, #0
    1d90:	mvn	r0, #0
    1d94:	bl	0 <coda_set_error>
    1d98:	b	1dcc <read_VR+0x548>
    1d9c:	ldr	r1, [pc, #344]	; 1efc <read_VR+0x678>
    1da0:	mvn	r0, #21
    1da4:	bl	0 <coda_set_error>
    1da8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1dac:	cmp	r3, #0
    1db0:	beq	1dcc <read_VR+0x548>
    1db4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1db8:	mov	r1, r3
    1dbc:	ldr	r0, [pc, #292]	; 1ee8 <read_VR+0x664>
    1dc0:	bl	0 <coda_add_error_message>
    1dc4:	b	1dcc <read_VR+0x548>
    1dc8:	nop			; (mov r0, r0)
    1dcc:	sub	r3, fp, #92	; 0x5c
    1dd0:	mov	r0, r3
    1dd4:	bl	0 <coda_inflateEnd>
    1dd8:	ldr	r0, [fp, #-20]	; 0xffffffec
    1ddc:	bl	0 <free>
    1de0:	mvn	r3, #0
    1de4:	b	1ec0 <read_VR+0x63c>
    1de8:	ldr	r0, [fp, #-20]	; 0xffffffec
    1dec:	bl	0 <free>
    1df0:	sub	r3, fp, #92	; 0x5c
    1df4:	mov	r0, r3
    1df8:	bl	0 <coda_inflateEnd>
    1dfc:	mov	r3, r0
    1e00:	cmp	r3, #0
    1e04:	beq	1e38 <read_VR+0x5b4>
    1e08:	ldr	r1, [pc, #240]	; 1f00 <read_VR+0x67c>
    1e0c:	mvn	r0, #21
    1e10:	bl	0 <coda_set_error>
    1e14:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1e18:	cmp	r3, #0
    1e1c:	beq	1e30 <read_VR+0x5ac>
    1e20:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1e24:	mov	r1, r3
    1e28:	ldr	r0, [pc, #184]	; 1ee8 <read_VR+0x664>
    1e2c:	bl	0 <coda_add_error_message>
    1e30:	mvn	r3, #0
    1e34:	b	1ec0 <read_VR+0x63c>
    1e38:	ldr	r3, [fp, #4]
    1e3c:	str	r3, [fp, #-16]
    1e40:	b	1e8c <read_VR+0x608>
    1e44:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1e48:	ldr	r2, [r3, #36]	; 0x24
    1e4c:	ldr	r3, [fp, #-16]
    1e50:	lsl	r3, r3, #3
    1e54:	add	r1, r2, r3
    1e58:	ldr	r3, [fp, #-100]	; 0xffffff9c
    1e5c:	ldr	r3, [r3, #24]
    1e60:	ldr	r2, [fp, #-16]
    1e64:	mul	r3, r2, r3
    1e68:	ldr	r2, [fp, #-100]	; 0xffffff9c
    1e6c:	ldr	r2, [r2, #28]
    1e70:	mul	r3, r2, r3
    1e74:	mov	r2, r3
    1e78:	asr	r3, r2, #31
    1e7c:	strd	r2, [r1]
    1e80:	ldr	r3, [fp, #-16]
    1e84:	add	r3, r3, #1
    1e88:	str	r3, [fp, #-16]
    1e8c:	ldr	r2, [fp, #-16]
    1e90:	ldr	r3, [fp, #8]
    1e94:	cmp	r2, r3
    1e98:	ble	1e44 <read_VR+0x5c0>
    1e9c:	b	1ebc <read_VR+0x638>
    1ea0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1ea4:	mov	r2, r3
    1ea8:	ldr	r1, [pc, #84]	; 1f04 <read_VR+0x680>
    1eac:	ldr	r0, [pc, #40]	; 1edc <read_VR+0x658>
    1eb0:	bl	0 <coda_set_error>
    1eb4:	mvn	r3, #0
    1eb8:	b	1ec0 <read_VR+0x63c>
    1ebc:	mov	r3, #0
    1ec0:	mov	r0, r3
    1ec4:	sub	sp, fp, #4
    1ec8:	pop	{fp, pc}
    1ecc:	.word	0x00000275
    1ed0:	.word	0x00000128
    1ed4:	.word	0x00000170
    1ed8:	.word	0x00000338
    1edc:	.word	0xfffffed4
    1ee0:	.word	0x00000368
    1ee4:	.word	0x00000370
    1ee8:	.word	0x00000398
    1eec:	.word	0x000008ec
    1ef0:	.word	0x000002af
    1ef4:	.word	0x000003a0
    1ef8:	.word	0x000003bc
    1efc:	.word	0x000003f4
    1f00:	.word	0x00000420
    1f04:	.word	0x0000042c

00001f08 <read_VXR>:
    1f08:	push	{fp, lr}
    1f0c:	add	fp, sp, #4
    1f10:	sub	sp, sp, #72	; 0x48
    1f14:	str	r0, [fp, #-48]	; 0xffffffd0
    1f18:	str	r1, [fp, #-52]	; 0xffffffcc
    1f1c:	strd	r2, [fp, #-60]	; 0xffffffc4
    1f20:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    1f24:	orrs	r3, r2, r3
    1f28:	bne	1f34 <read_VXR+0x2c>
    1f2c:	mov	r3, #0
    1f30:	b	22a8 <read_VXR+0x3a0>
    1f34:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1f38:	ldr	ip, [r3, #52]	; 0x34
    1f3c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    1f40:	adds	r0, r2, #8
    1f44:	adc	r1, r3, #0
    1f48:	sub	r3, fp, #12
    1f4c:	str	r3, [sp, #8]
    1f50:	mov	r2, #4
    1f54:	mov	r3, #0
    1f58:	strd	r2, [sp]
    1f5c:	mov	r2, r0
    1f60:	mov	r3, r1
    1f64:	mov	r0, ip
    1f68:	bl	0 <read_bytes>
    1f6c:	mov	r3, r0
    1f70:	cmp	r3, #0
    1f74:	bge	1f80 <read_VXR+0x78>
    1f78:	mvn	r3, #0
    1f7c:	b	22a8 <read_VXR+0x3a0>
    1f80:	sub	r3, fp, #12
    1f84:	mov	r0, r3
    1f88:	bl	27c <swap4>
    1f8c:	ldr	r3, [fp, #-12]
    1f90:	cmp	r3, #6
    1f94:	beq	1fb4 <read_VXR+0xac>
    1f98:	ldr	r3, [fp, #-12]
    1f9c:	mov	r2, r3
    1fa0:	ldr	r1, [pc, #780]	; 22b4 <read_VXR+0x3ac>
    1fa4:	ldr	r0, [pc, #780]	; 22b8 <read_VXR+0x3b0>
    1fa8:	bl	0 <coda_set_error>
    1fac:	mvn	r3, #0
    1fb0:	b	22a8 <read_VXR+0x3a0>
    1fb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1fb8:	ldr	ip, [r3, #52]	; 0x34
    1fbc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    1fc0:	adds	r0, r2, #12
    1fc4:	adc	r1, r3, #0
    1fc8:	sub	r3, fp, #20
    1fcc:	str	r3, [sp, #8]
    1fd0:	mov	r2, #8
    1fd4:	mov	r3, #0
    1fd8:	strd	r2, [sp]
    1fdc:	mov	r2, r0
    1fe0:	mov	r3, r1
    1fe4:	mov	r0, ip
    1fe8:	bl	0 <read_bytes>
    1fec:	mov	r3, r0
    1ff0:	cmp	r3, #0
    1ff4:	bge	2000 <read_VXR+0xf8>
    1ff8:	mvn	r3, #0
    1ffc:	b	22a8 <read_VXR+0x3a0>
    2000:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2004:	ldr	ip, [r3, #52]	; 0x34
    2008:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    200c:	adds	r0, r2, #20
    2010:	adc	r1, r3, #0
    2014:	sub	r3, fp, #24
    2018:	str	r3, [sp, #8]
    201c:	mov	r2, #4
    2020:	mov	r3, #0
    2024:	strd	r2, [sp]
    2028:	mov	r2, r0
    202c:	mov	r3, r1
    2030:	mov	r0, ip
    2034:	bl	0 <read_bytes>
    2038:	mov	r3, r0
    203c:	cmp	r3, #0
    2040:	bge	204c <read_VXR+0x144>
    2044:	mvn	r3, #0
    2048:	b	22a8 <read_VXR+0x3a0>
    204c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2050:	ldr	ip, [r3, #52]	; 0x34
    2054:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    2058:	adds	r0, r2, #24
    205c:	adc	r1, r3, #0
    2060:	sub	r3, fp, #28
    2064:	str	r3, [sp, #8]
    2068:	mov	r2, #4
    206c:	mov	r3, #0
    2070:	strd	r2, [sp]
    2074:	mov	r2, r0
    2078:	mov	r3, r1
    207c:	mov	r0, ip
    2080:	bl	0 <read_bytes>
    2084:	mov	r3, r0
    2088:	cmp	r3, #0
    208c:	bge	2098 <read_VXR+0x190>
    2090:	mvn	r3, #0
    2094:	b	22a8 <read_VXR+0x3a0>
    2098:	sub	r3, fp, #20
    209c:	mov	r0, r3
    20a0:	bl	398 <swap8>
    20a4:	sub	r3, fp, #24
    20a8:	mov	r0, r3
    20ac:	bl	27c <swap4>
    20b0:	sub	r3, fp, #28
    20b4:	mov	r0, r3
    20b8:	bl	27c <swap4>
    20bc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    20c0:	adds	r2, r2, #28
    20c4:	adc	r3, r3, #0
    20c8:	strd	r2, [fp, #-60]	; 0xffffffc4
    20cc:	mov	r3, #0
    20d0:	str	r3, [fp, #-8]
    20d4:	b	2260 <read_VXR+0x358>
    20d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    20dc:	ldr	ip, [r3, #52]	; 0x34
    20e0:	ldr	r3, [fp, #-8]
    20e4:	lsl	r3, r3, #2
    20e8:	mov	r0, r3
    20ec:	asr	r1, r0, #31
    20f0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    20f4:	adds	r0, r0, r2
    20f8:	adc	r1, r1, r3
    20fc:	sub	r3, fp, #32
    2100:	str	r3, [sp, #8]
    2104:	mov	r2, #4
    2108:	mov	r3, #0
    210c:	strd	r2, [sp]
    2110:	mov	r2, r0
    2114:	mov	r3, r1
    2118:	mov	r0, ip
    211c:	bl	0 <read_bytes>
    2120:	mov	r3, r0
    2124:	cmp	r3, #0
    2128:	bge	2134 <read_VXR+0x22c>
    212c:	mvn	r3, #0
    2130:	b	22a8 <read_VXR+0x3a0>
    2134:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2138:	ldr	ip, [r3, #52]	; 0x34
    213c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2140:	ldr	r3, [fp, #-8]
    2144:	add	r3, r2, r3
    2148:	lsl	r3, r3, #2
    214c:	mov	r0, r3
    2150:	asr	r1, r0, #31
    2154:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    2158:	adds	r0, r0, r2
    215c:	adc	r1, r1, r3
    2160:	sub	r3, fp, #36	; 0x24
    2164:	str	r3, [sp, #8]
    2168:	mov	r2, #4
    216c:	mov	r3, #0
    2170:	strd	r2, [sp]
    2174:	mov	r2, r0
    2178:	mov	r3, r1
    217c:	mov	r0, ip
    2180:	bl	0 <read_bytes>
    2184:	mov	r3, r0
    2188:	cmp	r3, #0
    218c:	bge	2198 <read_VXR+0x290>
    2190:	mvn	r3, #0
    2194:	b	22a8 <read_VXR+0x3a0>
    2198:	ldr	r3, [fp, #-48]	; 0xffffffd0
    219c:	ldr	ip, [r3, #52]	; 0x34
    21a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    21a4:	ldr	r3, [fp, #-8]
    21a8:	add	r3, r2, r3
    21ac:	lsl	r3, r3, #3
    21b0:	mov	r0, r3
    21b4:	asr	r1, r0, #31
    21b8:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    21bc:	adds	r0, r0, r2
    21c0:	adc	r1, r1, r3
    21c4:	sub	r3, fp, #44	; 0x2c
    21c8:	str	r3, [sp, #8]
    21cc:	mov	r2, #8
    21d0:	mov	r3, #0
    21d4:	strd	r2, [sp]
    21d8:	mov	r2, r0
    21dc:	mov	r3, r1
    21e0:	mov	r0, ip
    21e4:	bl	0 <read_bytes>
    21e8:	mov	r3, r0
    21ec:	cmp	r3, #0
    21f0:	bge	21fc <read_VXR+0x2f4>
    21f4:	mvn	r3, #0
    21f8:	b	22a8 <read_VXR+0x3a0>
    21fc:	sub	r3, fp, #32
    2200:	mov	r0, r3
    2204:	bl	27c <swap4>
    2208:	sub	r3, fp, #36	; 0x24
    220c:	mov	r0, r3
    2210:	bl	27c <swap4>
    2214:	sub	r3, fp, #44	; 0x2c
    2218:	mov	r0, r3
    221c:	bl	398 <swap8>
    2220:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    2224:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2228:	ldr	r0, [fp, #-36]	; 0xffffffdc
    222c:	str	r0, [sp, #4]
    2230:	str	r1, [sp]
    2234:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2238:	ldr	r0, [fp, #-48]	; 0xffffffd0
    223c:	bl	1884 <read_VR>
    2240:	mov	r3, r0
    2244:	cmp	r3, #0
    2248:	beq	2254 <read_VXR+0x34c>
    224c:	mvn	r3, #0
    2250:	b	22a8 <read_VXR+0x3a0>
    2254:	ldr	r3, [fp, #-8]
    2258:	add	r3, r3, #1
    225c:	str	r3, [fp, #-8]
    2260:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2264:	ldr	r2, [fp, #-8]
    2268:	cmp	r2, r3
    226c:	blt	20d8 <read_VXR+0x1d0>
    2270:	ldrd	r2, [fp, #-20]	; 0xffffffec
    2274:	ldr	r1, [fp, #8]
    2278:	str	r1, [sp, #4]
    227c:	ldr	r1, [fp, #4]
    2280:	str	r1, [sp]
    2284:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2288:	ldr	r0, [fp, #-48]	; 0xffffffd0
    228c:	bl	1f08 <read_VXR>
    2290:	mov	r3, r0
    2294:	cmp	r3, #0
    2298:	beq	22a4 <read_VXR+0x39c>
    229c:	mvn	r3, #0
    22a0:	b	22a8 <read_VXR+0x3a0>
    22a4:	mov	r3, #0
    22a8:	mov	r0, r3
    22ac:	sub	sp, fp, #4
    22b0:	pop	{fp, pc}
    22b4:	.word	0x00000464
    22b8:	.word	0xfffffed4

000022bc <read_CPR>:
    22bc:	push	{fp, lr}
    22c0:	add	fp, sp, #4
    22c4:	sub	sp, sp, #40	; 0x28
    22c8:	str	r0, [fp, #-16]
    22cc:	strd	r2, [fp, #-28]	; 0xffffffe4
    22d0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    22d4:	orrs	r3, r2, r3
    22d8:	bne	22e4 <read_CPR+0x28>
    22dc:	mov	r3, #0
    22e0:	b	23e8 <read_CPR+0x12c>
    22e4:	ldr	r3, [fp, #-16]
    22e8:	ldr	ip, [r3, #52]	; 0x34
    22ec:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    22f0:	adds	r0, r2, #8
    22f4:	adc	r1, r3, #0
    22f8:	sub	r3, fp, #8
    22fc:	str	r3, [sp, #8]
    2300:	mov	r2, #4
    2304:	mov	r3, #0
    2308:	strd	r2, [sp]
    230c:	mov	r2, r0
    2310:	mov	r3, r1
    2314:	mov	r0, ip
    2318:	bl	0 <read_bytes>
    231c:	mov	r3, r0
    2320:	cmp	r3, #0
    2324:	bge	2330 <read_CPR+0x74>
    2328:	mvn	r3, #0
    232c:	b	23e8 <read_CPR+0x12c>
    2330:	sub	r3, fp, #8
    2334:	mov	r0, r3
    2338:	bl	27c <swap4>
    233c:	ldr	r3, [fp, #-8]
    2340:	cmp	r3, #11
    2344:	beq	2364 <read_CPR+0xa8>
    2348:	ldr	r3, [fp, #-8]
    234c:	mov	r2, r3
    2350:	ldr	r1, [pc, #156]	; 23f4 <read_CPR+0x138>
    2354:	ldr	r0, [pc, #156]	; 23f8 <read_CPR+0x13c>
    2358:	bl	0 <coda_set_error>
    235c:	mvn	r3, #0
    2360:	b	23e8 <read_CPR+0x12c>
    2364:	ldr	r3, [fp, #-16]
    2368:	ldr	ip, [r3, #52]	; 0x34
    236c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    2370:	adds	r0, r2, #12
    2374:	adc	r1, r3, #0
    2378:	sub	r3, fp, #12
    237c:	str	r3, [sp, #8]
    2380:	mov	r2, #4
    2384:	mov	r3, #0
    2388:	strd	r2, [sp]
    238c:	mov	r2, r0
    2390:	mov	r3, r1
    2394:	mov	r0, ip
    2398:	bl	0 <read_bytes>
    239c:	mov	r3, r0
    23a0:	cmp	r3, #0
    23a4:	bge	23b0 <read_CPR+0xf4>
    23a8:	mvn	r3, #0
    23ac:	b	23e8 <read_CPR+0x12c>
    23b0:	sub	r3, fp, #12
    23b4:	mov	r0, r3
    23b8:	bl	27c <swap4>
    23bc:	ldr	r3, [fp, #-12]
    23c0:	cmp	r3, #5
    23c4:	beq	23e4 <read_CPR+0x128>
    23c8:	ldr	r3, [fp, #-12]
    23cc:	mov	r2, r3
    23d0:	ldr	r1, [pc, #36]	; 23fc <read_CPR+0x140>
    23d4:	mvn	r0, #199	; 0xc7
    23d8:	bl	0 <coda_set_error>
    23dc:	mvn	r3, #0
    23e0:	b	23e8 <read_CPR+0x12c>
    23e4:	mov	r3, #0
    23e8:	mov	r0, r3
    23ec:	sub	sp, fp, #4
    23f0:	pop	{fp, pc}
    23f4:	.word	0x0000049c
    23f8:	.word	0xfffffed4
    23fc:	.word	0x000004d4

00002400 <read_VDR>:
    2400:	push	{r4, r5, fp, lr}
    2404:	add	fp, sp, #12
    2408:	sub	sp, sp, #456	; 0x1c8
    240c:	str	r0, [fp, #-432]	; 0xfffffe50
    2410:	sub	r1, fp, #444	; 0x1bc
    2414:	strd	r2, [r1]
    2418:	sub	r3, fp, #444	; 0x1bc
    241c:	ldrd	r2, [r3]
    2420:	orrs	r3, r2, r3
    2424:	bne	2430 <read_VDR+0x30>
    2428:	mov	r3, #0
    242c:	b	2e4c <read_VDR+0xa4c>
    2430:	ldr	r3, [fp, #-432]	; 0xfffffe50
    2434:	ldr	ip, [r3, #52]	; 0x34
    2438:	sub	r3, fp, #444	; 0x1bc
    243c:	ldrd	r2, [r3]
    2440:	adds	r0, r2, #8
    2444:	adc	r1, r3, #0
    2448:	sub	r3, fp, #36	; 0x24
    244c:	str	r3, [sp, #8]
    2450:	mov	r2, #4
    2454:	mov	r3, #0
    2458:	strd	r2, [sp]
    245c:	mov	r2, r0
    2460:	mov	r3, r1
    2464:	mov	r0, ip
    2468:	bl	0 <read_bytes>
    246c:	mov	r3, r0
    2470:	cmp	r3, #0
    2474:	bge	2480 <read_VDR+0x80>
    2478:	mvn	r3, #0
    247c:	b	2e4c <read_VDR+0xa4c>
    2480:	sub	r3, fp, #36	; 0x24
    2484:	mov	r0, r3
    2488:	bl	27c <swap4>
    248c:	ldr	r3, [fp, #4]
    2490:	cmp	r3, #0
    2494:	beq	24c0 <read_VDR+0xc0>
    2498:	ldr	r3, [fp, #-36]	; 0xffffffdc
    249c:	cmp	r3, #8
    24a0:	beq	24e8 <read_VDR+0xe8>
    24a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    24a8:	mov	r2, r3
    24ac:	ldr	r1, [pc, #2468]	; 2e58 <read_VDR+0xa58>
    24b0:	ldr	r0, [pc, #2468]	; 2e5c <read_VDR+0xa5c>
    24b4:	bl	0 <coda_set_error>
    24b8:	mvn	r3, #0
    24bc:	b	2e4c <read_VDR+0xa4c>
    24c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    24c4:	cmp	r3, #3
    24c8:	beq	24e8 <read_VDR+0xe8>
    24cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    24d0:	mov	r2, r3
    24d4:	ldr	r1, [pc, #2436]	; 2e60 <read_VDR+0xa60>
    24d8:	ldr	r0, [pc, #2428]	; 2e5c <read_VDR+0xa5c>
    24dc:	bl	0 <coda_set_error>
    24e0:	mvn	r3, #0
    24e4:	b	2e4c <read_VDR+0xa4c>
    24e8:	ldr	r3, [fp, #-432]	; 0xfffffe50
    24ec:	ldr	ip, [r3, #52]	; 0x34
    24f0:	sub	r3, fp, #444	; 0x1bc
    24f4:	ldrd	r2, [r3]
    24f8:	adds	r0, r2, #12
    24fc:	adc	r1, r3, #0
    2500:	sub	r3, fp, #44	; 0x2c
    2504:	str	r3, [sp, #8]
    2508:	mov	r2, #8
    250c:	mov	r3, #0
    2510:	strd	r2, [sp]
    2514:	mov	r2, r0
    2518:	mov	r3, r1
    251c:	mov	r0, ip
    2520:	bl	0 <read_bytes>
    2524:	mov	r3, r0
    2528:	cmp	r3, #0
    252c:	bge	2538 <read_VDR+0x138>
    2530:	mvn	r3, #0
    2534:	b	2e4c <read_VDR+0xa4c>
    2538:	ldr	r3, [fp, #-432]	; 0xfffffe50
    253c:	ldr	ip, [r3, #52]	; 0x34
    2540:	sub	r3, fp, #444	; 0x1bc
    2544:	ldrd	r2, [r3]
    2548:	adds	r0, r2, #20
    254c:	adc	r1, r3, #0
    2550:	sub	r3, fp, #48	; 0x30
    2554:	str	r3, [sp, #8]
    2558:	mov	r2, #4
    255c:	mov	r3, #0
    2560:	strd	r2, [sp]
    2564:	mov	r2, r0
    2568:	mov	r3, r1
    256c:	mov	r0, ip
    2570:	bl	0 <read_bytes>
    2574:	mov	r3, r0
    2578:	cmp	r3, #0
    257c:	bge	2588 <read_VDR+0x188>
    2580:	mvn	r3, #0
    2584:	b	2e4c <read_VDR+0xa4c>
    2588:	ldr	r3, [fp, #-432]	; 0xfffffe50
    258c:	ldr	ip, [r3, #52]	; 0x34
    2590:	sub	r3, fp, #444	; 0x1bc
    2594:	ldrd	r2, [r3]
    2598:	adds	r0, r2, #24
    259c:	adc	r1, r3, #0
    25a0:	sub	r3, fp, #52	; 0x34
    25a4:	str	r3, [sp, #8]
    25a8:	mov	r2, #4
    25ac:	mov	r3, #0
    25b0:	strd	r2, [sp]
    25b4:	mov	r2, r0
    25b8:	mov	r3, r1
    25bc:	mov	r0, ip
    25c0:	bl	0 <read_bytes>
    25c4:	mov	r3, r0
    25c8:	cmp	r3, #0
    25cc:	bge	25d8 <read_VDR+0x1d8>
    25d0:	mvn	r3, #0
    25d4:	b	2e4c <read_VDR+0xa4c>
    25d8:	ldr	r3, [fp, #-432]	; 0xfffffe50
    25dc:	ldr	ip, [r3, #52]	; 0x34
    25e0:	sub	r3, fp, #444	; 0x1bc
    25e4:	ldrd	r2, [r3]
    25e8:	adds	r0, r2, #28
    25ec:	adc	r1, r3, #0
    25f0:	sub	r3, fp, #60	; 0x3c
    25f4:	str	r3, [sp, #8]
    25f8:	mov	r2, #8
    25fc:	mov	r3, #0
    2600:	strd	r2, [sp]
    2604:	mov	r2, r0
    2608:	mov	r3, r1
    260c:	mov	r0, ip
    2610:	bl	0 <read_bytes>
    2614:	mov	r3, r0
    2618:	cmp	r3, #0
    261c:	bge	2628 <read_VDR+0x228>
    2620:	mvn	r3, #0
    2624:	b	2e4c <read_VDR+0xa4c>
    2628:	ldr	r3, [fp, #-432]	; 0xfffffe50
    262c:	ldr	ip, [r3, #52]	; 0x34
    2630:	sub	r3, fp, #444	; 0x1bc
    2634:	ldrd	r2, [r3]
    2638:	adds	r0, r2, #36	; 0x24
    263c:	adc	r1, r3, #0
    2640:	sub	r3, fp, #68	; 0x44
    2644:	str	r3, [sp, #8]
    2648:	mov	r2, #8
    264c:	mov	r3, #0
    2650:	strd	r2, [sp]
    2654:	mov	r2, r0
    2658:	mov	r3, r1
    265c:	mov	r0, ip
    2660:	bl	0 <read_bytes>
    2664:	mov	r3, r0
    2668:	cmp	r3, #0
    266c:	bge	2678 <read_VDR+0x278>
    2670:	mvn	r3, #0
    2674:	b	2e4c <read_VDR+0xa4c>
    2678:	ldr	r3, [fp, #-432]	; 0xfffffe50
    267c:	ldr	ip, [r3, #52]	; 0x34
    2680:	sub	r3, fp, #444	; 0x1bc
    2684:	ldrd	r2, [r3]
    2688:	adds	r0, r2, #44	; 0x2c
    268c:	adc	r1, r3, #0
    2690:	sub	r3, fp, #72	; 0x48
    2694:	str	r3, [sp, #8]
    2698:	mov	r2, #4
    269c:	mov	r3, #0
    26a0:	strd	r2, [sp]
    26a4:	mov	r2, r0
    26a8:	mov	r3, r1
    26ac:	mov	r0, ip
    26b0:	bl	0 <read_bytes>
    26b4:	mov	r3, r0
    26b8:	cmp	r3, #0
    26bc:	bge	26c8 <read_VDR+0x2c8>
    26c0:	mvn	r3, #0
    26c4:	b	2e4c <read_VDR+0xa4c>
    26c8:	ldr	r3, [fp, #-432]	; 0xfffffe50
    26cc:	ldr	ip, [r3, #52]	; 0x34
    26d0:	sub	r3, fp, #444	; 0x1bc
    26d4:	ldrd	r2, [r3]
    26d8:	adds	r0, r2, #48	; 0x30
    26dc:	adc	r1, r3, #0
    26e0:	sub	r3, fp, #76	; 0x4c
    26e4:	str	r3, [sp, #8]
    26e8:	mov	r2, #4
    26ec:	mov	r3, #0
    26f0:	strd	r2, [sp]
    26f4:	mov	r2, r0
    26f8:	mov	r3, r1
    26fc:	mov	r0, ip
    2700:	bl	0 <read_bytes>
    2704:	mov	r3, r0
    2708:	cmp	r3, #0
    270c:	bge	2718 <read_VDR+0x318>
    2710:	mvn	r3, #0
    2714:	b	2e4c <read_VDR+0xa4c>
    2718:	ldr	r3, [fp, #-432]	; 0xfffffe50
    271c:	ldr	ip, [r3, #52]	; 0x34
    2720:	sub	r3, fp, #444	; 0x1bc
    2724:	ldrd	r2, [r3]
    2728:	adds	r0, r2, #64	; 0x40
    272c:	adc	r1, r3, #0
    2730:	sub	r3, fp, #80	; 0x50
    2734:	str	r3, [sp, #8]
    2738:	mov	r2, #4
    273c:	mov	r3, #0
    2740:	strd	r2, [sp]
    2744:	mov	r2, r0
    2748:	mov	r3, r1
    274c:	mov	r0, ip
    2750:	bl	0 <read_bytes>
    2754:	mov	r3, r0
    2758:	cmp	r3, #0
    275c:	bge	2768 <read_VDR+0x368>
    2760:	mvn	r3, #0
    2764:	b	2e4c <read_VDR+0xa4c>
    2768:	ldr	r3, [fp, #-432]	; 0xfffffe50
    276c:	ldr	ip, [r3, #52]	; 0x34
    2770:	sub	r3, fp, #444	; 0x1bc
    2774:	ldrd	r2, [r3]
    2778:	adds	r0, r2, #68	; 0x44
    277c:	adc	r1, r3, #0
    2780:	sub	r3, fp, #84	; 0x54
    2784:	str	r3, [sp, #8]
    2788:	mov	r2, #4
    278c:	mov	r3, #0
    2790:	strd	r2, [sp]
    2794:	mov	r2, r0
    2798:	mov	r3, r1
    279c:	mov	r0, ip
    27a0:	bl	0 <read_bytes>
    27a4:	mov	r3, r0
    27a8:	cmp	r3, #0
    27ac:	bge	27b8 <read_VDR+0x3b8>
    27b0:	mvn	r3, #0
    27b4:	b	2e4c <read_VDR+0xa4c>
    27b8:	ldr	r3, [fp, #-432]	; 0xfffffe50
    27bc:	ldr	ip, [r3, #52]	; 0x34
    27c0:	sub	r3, fp, #444	; 0x1bc
    27c4:	ldrd	r2, [r3]
    27c8:	adds	r0, r2, #72	; 0x48
    27cc:	adc	r1, r3, #0
    27d0:	sub	r3, fp, #92	; 0x5c
    27d4:	str	r3, [sp, #8]
    27d8:	mov	r2, #8
    27dc:	mov	r3, #0
    27e0:	strd	r2, [sp]
    27e4:	mov	r2, r0
    27e8:	mov	r3, r1
    27ec:	mov	r0, ip
    27f0:	bl	0 <read_bytes>
    27f4:	mov	r3, r0
    27f8:	cmp	r3, #0
    27fc:	bge	2808 <read_VDR+0x408>
    2800:	mvn	r3, #0
    2804:	b	2e4c <read_VDR+0xa4c>
    2808:	ldr	r3, [fp, #-432]	; 0xfffffe50
    280c:	ldr	ip, [r3, #52]	; 0x34
    2810:	sub	r3, fp, #444	; 0x1bc
    2814:	ldrd	r2, [r3]
    2818:	adds	r0, r2, #80	; 0x50
    281c:	adc	r1, r3, #0
    2820:	sub	r3, fp, #96	; 0x60
    2824:	str	r3, [sp, #8]
    2828:	mov	r2, #4
    282c:	mov	r3, #0
    2830:	strd	r2, [sp]
    2834:	mov	r2, r0
    2838:	mov	r3, r1
    283c:	mov	r0, ip
    2840:	bl	0 <read_bytes>
    2844:	mov	r3, r0
    2848:	cmp	r3, #0
    284c:	bge	2858 <read_VDR+0x458>
    2850:	mvn	r3, #0
    2854:	b	2e4c <read_VDR+0xa4c>
    2858:	ldr	r3, [fp, #-432]	; 0xfffffe50
    285c:	ldr	ip, [r3, #52]	; 0x34
    2860:	sub	r3, fp, #444	; 0x1bc
    2864:	ldrd	r2, [r3]
    2868:	adds	r0, r2, #84	; 0x54
    286c:	adc	r1, r3, #0
    2870:	sub	r3, fp, #356	; 0x164
    2874:	str	r3, [sp, #8]
    2878:	mov	r2, #256	; 0x100
    287c:	mov	r3, #0
    2880:	strd	r2, [sp]
    2884:	mov	r2, r0
    2888:	mov	r3, r1
    288c:	mov	r0, ip
    2890:	bl	0 <read_bytes>
    2894:	mov	r3, r0
    2898:	cmp	r3, #0
    289c:	bge	28a8 <read_VDR+0x4a8>
    28a0:	mvn	r3, #0
    28a4:	b	2e4c <read_VDR+0xa4c>
    28a8:	mov	r3, #0
    28ac:	strb	r3, [fp, #-100]	; 0xffffff9c
    28b0:	sub	r3, fp, #356	; 0x164
    28b4:	mov	r0, r3
    28b8:	bl	5bc <rtrim>
    28bc:	sub	r3, fp, #44	; 0x2c
    28c0:	mov	r0, r3
    28c4:	bl	398 <swap8>
    28c8:	sub	r3, fp, #48	; 0x30
    28cc:	mov	r0, r3
    28d0:	bl	27c <swap4>
    28d4:	sub	r3, fp, #52	; 0x34
    28d8:	mov	r0, r3
    28dc:	bl	27c <swap4>
    28e0:	sub	r3, fp, #60	; 0x3c
    28e4:	mov	r0, r3
    28e8:	bl	398 <swap8>
    28ec:	sub	r3, fp, #68	; 0x44
    28f0:	mov	r0, r3
    28f4:	bl	398 <swap8>
    28f8:	sub	r3, fp, #72	; 0x48
    28fc:	mov	r0, r3
    2900:	bl	27c <swap4>
    2904:	sub	r3, fp, #76	; 0x4c
    2908:	mov	r0, r3
    290c:	bl	27c <swap4>
    2910:	sub	r3, fp, #80	; 0x50
    2914:	mov	r0, r3
    2918:	bl	27c <swap4>
    291c:	sub	r3, fp, #84	; 0x54
    2920:	mov	r0, r3
    2924:	bl	27c <swap4>
    2928:	sub	r3, fp, #92	; 0x5c
    292c:	mov	r0, r3
    2930:	bl	398 <swap8>
    2934:	sub	r3, fp, #96	; 0x60
    2938:	mov	r0, r3
    293c:	bl	27c <swap4>
    2940:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2944:	cmp	r3, #32
    2948:	bne	2960 <read_VDR+0x560>
    294c:	ldr	r1, [pc, #1296]	; 2e64 <read_VDR+0xa64>
    2950:	mvn	r0, #199	; 0xc7
    2954:	bl	0 <coda_set_error>
    2958:	mvn	r3, #0
    295c:	b	2e4c <read_VDR+0xa4c>
    2960:	ldr	r3, [fp, #4]
    2964:	cmp	r3, #0
    2968:	beq	2b1c <read_VDR+0x71c>
    296c:	ldr	r3, [fp, #-432]	; 0xfffffe50
    2970:	ldr	ip, [r3, #52]	; 0x34
    2974:	sub	r3, fp, #444	; 0x1bc
    2978:	ldrd	r2, [r3]
    297c:	adds	r0, r2, #340	; 0x154
    2980:	adc	r1, r3, #0
    2984:	sub	r3, fp, #360	; 0x168
    2988:	str	r3, [sp, #8]
    298c:	mov	r2, #4
    2990:	mov	r3, #0
    2994:	strd	r2, [sp]
    2998:	mov	r2, r0
    299c:	mov	r3, r1
    29a0:	mov	r0, ip
    29a4:	bl	0 <read_bytes>
    29a8:	mov	r3, r0
    29ac:	cmp	r3, #0
    29b0:	bge	29bc <read_VDR+0x5bc>
    29b4:	mvn	r3, #0
    29b8:	b	2e4c <read_VDR+0xa4c>
    29bc:	sub	r3, fp, #360	; 0x168
    29c0:	mov	r0, r3
    29c4:	bl	27c <swap4>
    29c8:	ldr	r3, [fp, #-360]	; 0xfffffe98
    29cc:	cmp	r3, #0
    29d0:	bge	29f0 <read_VDR+0x5f0>
    29d4:	ldr	r3, [fp, #-360]	; 0xfffffe98
    29d8:	sub	r2, fp, #356	; 0x164
    29dc:	ldr	r1, [pc, #1156]	; 2e68 <read_VDR+0xa68>
    29e0:	ldr	r0, [pc, #1140]	; 2e5c <read_VDR+0xa5c>
    29e4:	bl	0 <coda_set_error>
    29e8:	mvn	r3, #0
    29ec:	b	2e4c <read_VDR+0xa4c>
    29f0:	ldr	r3, [fp, #-360]	; 0xfffffe98
    29f4:	cmp	r3, #8
    29f8:	ble	2a18 <read_VDR+0x618>
    29fc:	ldr	r3, [fp, #-360]	; 0xfffffe98
    2a00:	sub	r2, fp, #356	; 0x164
    2a04:	ldr	r1, [pc, #1120]	; 2e6c <read_VDR+0xa6c>
    2a08:	ldr	r0, [pc, #1100]	; 2e5c <read_VDR+0xa5c>
    2a0c:	bl	0 <coda_set_error>
    2a10:	mvn	r3, #0
    2a14:	b	2e4c <read_VDR+0xa4c>
    2a18:	sub	r3, fp, #444	; 0x1bc
    2a1c:	mov	r1, r3
    2a20:	sub	r3, fp, #444	; 0x1bc
    2a24:	ldrd	r2, [r3]
    2a28:	adds	r2, r2, #344	; 0x158
    2a2c:	adc	r3, r3, #0
    2a30:	strd	r2, [r1]
    2a34:	ldr	r3, [fp, #-360]	; 0xfffffe98
    2a38:	cmp	r3, #0
    2a3c:	ble	2b28 <read_VDR+0x728>
    2a40:	mov	r3, #0
    2a44:	str	r3, [fp, #-20]	; 0xffffffec
    2a48:	b	2adc <read_VDR+0x6dc>
    2a4c:	ldr	r3, [fp, #-432]	; 0xfffffe50
    2a50:	ldr	ip, [r3, #52]	; 0x34
    2a54:	ldr	r3, [fp, #-20]	; 0xffffffec
    2a58:	lsl	r3, r3, #2
    2a5c:	mov	r0, r3
    2a60:	asr	r1, r0, #31
    2a64:	sub	r3, fp, #444	; 0x1bc
    2a68:	ldrd	r2, [r3]
    2a6c:	adds	r0, r0, r2
    2a70:	adc	r1, r1, r3
    2a74:	sub	r2, fp, #392	; 0x188
    2a78:	ldr	r3, [fp, #-20]	; 0xffffffec
    2a7c:	lsl	r3, r3, #2
    2a80:	add	r3, r2, r3
    2a84:	str	r3, [sp, #8]
    2a88:	mov	r2, #4
    2a8c:	mov	r3, #0
    2a90:	strd	r2, [sp]
    2a94:	mov	r2, r0
    2a98:	mov	r3, r1
    2a9c:	mov	r0, ip
    2aa0:	bl	0 <read_bytes>
    2aa4:	mov	r3, r0
    2aa8:	cmp	r3, #0
    2aac:	bge	2ab8 <read_VDR+0x6b8>
    2ab0:	mvn	r3, #0
    2ab4:	b	2e4c <read_VDR+0xa4c>
    2ab8:	sub	r2, fp, #392	; 0x188
    2abc:	ldr	r3, [fp, #-20]	; 0xffffffec
    2ac0:	lsl	r3, r3, #2
    2ac4:	add	r3, r2, r3
    2ac8:	mov	r0, r3
    2acc:	bl	27c <swap4>
    2ad0:	ldr	r3, [fp, #-20]	; 0xffffffec
    2ad4:	add	r3, r3, #1
    2ad8:	str	r3, [fp, #-20]	; 0xffffffec
    2adc:	ldr	r3, [fp, #-360]	; 0xfffffe98
    2ae0:	ldr	r2, [fp, #-20]	; 0xffffffec
    2ae4:	cmp	r2, r3
    2ae8:	blt	2a4c <read_VDR+0x64c>
    2aec:	ldr	r3, [fp, #-360]	; 0xfffffe98
    2af0:	lsl	r3, r3, #2
    2af4:	mov	r0, r3
    2af8:	asr	r1, r0, #31
    2afc:	sub	r3, fp, #444	; 0x1bc
    2b00:	mov	ip, r3
    2b04:	sub	r3, fp, #444	; 0x1bc
    2b08:	ldrd	r2, [r3]
    2b0c:	adds	r2, r2, r0
    2b10:	adc	r3, r3, r1
    2b14:	strd	r2, [ip]
    2b18:	b	2b28 <read_VDR+0x728>
    2b1c:	ldr	r3, [fp, #-432]	; 0xfffffe50
    2b20:	ldr	r3, [r3, #80]	; 0x50
    2b24:	str	r3, [fp, #-360]	; 0xfffffe98
    2b28:	ldr	r3, [fp, #-360]	; 0xfffffe98
    2b2c:	cmp	r3, #0
    2b30:	ble	2c0c <read_VDR+0x80c>
    2b34:	mov	r3, #0
    2b38:	str	r3, [fp, #-20]	; 0xffffffec
    2b3c:	b	2bd0 <read_VDR+0x7d0>
    2b40:	ldr	r3, [fp, #-432]	; 0xfffffe50
    2b44:	ldr	ip, [r3, #52]	; 0x34
    2b48:	ldr	r3, [fp, #-20]	; 0xffffffec
    2b4c:	lsl	r3, r3, #2
    2b50:	mov	r0, r3
    2b54:	asr	r1, r0, #31
    2b58:	sub	r3, fp, #444	; 0x1bc
    2b5c:	ldrd	r2, [r3]
    2b60:	adds	r0, r0, r2
    2b64:	adc	r1, r1, r3
    2b68:	sub	r2, fp, #424	; 0x1a8
    2b6c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2b70:	lsl	r3, r3, #2
    2b74:	add	r3, r2, r3
    2b78:	str	r3, [sp, #8]
    2b7c:	mov	r2, #4
    2b80:	mov	r3, #0
    2b84:	strd	r2, [sp]
    2b88:	mov	r2, r0
    2b8c:	mov	r3, r1
    2b90:	mov	r0, ip
    2b94:	bl	0 <read_bytes>
    2b98:	mov	r3, r0
    2b9c:	cmp	r3, #0
    2ba0:	bge	2bac <read_VDR+0x7ac>
    2ba4:	mvn	r3, #0
    2ba8:	b	2e4c <read_VDR+0xa4c>
    2bac:	sub	r2, fp, #424	; 0x1a8
    2bb0:	ldr	r3, [fp, #-20]	; 0xffffffec
    2bb4:	lsl	r3, r3, #2
    2bb8:	add	r3, r2, r3
    2bbc:	mov	r0, r3
    2bc0:	bl	27c <swap4>
    2bc4:	ldr	r3, [fp, #-20]	; 0xffffffec
    2bc8:	add	r3, r3, #1
    2bcc:	str	r3, [fp, #-20]	; 0xffffffec
    2bd0:	ldr	r3, [fp, #-360]	; 0xfffffe98
    2bd4:	ldr	r2, [fp, #-20]	; 0xffffffec
    2bd8:	cmp	r2, r3
    2bdc:	blt	2b40 <read_VDR+0x740>
    2be0:	ldr	r3, [fp, #-360]	; 0xfffffe98
    2be4:	lsl	r3, r3, #2
    2be8:	mov	r0, r3
    2bec:	asr	r1, r0, #31
    2bf0:	sub	r3, fp, #444	; 0x1bc
    2bf4:	mov	ip, r3
    2bf8:	sub	r3, fp, #444	; 0x1bc
    2bfc:	ldrd	r2, [r3]
    2c00:	adds	r2, r2, r0
    2c04:	adc	r3, r3, r1
    2c08:	strd	r2, [ip]
    2c0c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2c10:	and	r3, r3, #1
    2c14:	str	r3, [fp, #-24]	; 0xffffffe8
    2c18:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2c1c:	and	r3, r3, #4
    2c20:	str	r3, [fp, #-28]	; 0xffffffe4
    2c24:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2c28:	cmp	r3, #0
    2c2c:	bne	2c5c <read_VDR+0x85c>
    2c30:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c34:	cmp	r3, #0
    2c38:	beq	2c5c <read_VDR+0x85c>
    2c3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c40:	add	r3, r3, #1
    2c44:	sub	r2, fp, #356	; 0x164
    2c48:	ldr	r1, [pc, #544]	; 2e70 <read_VDR+0xa70>
    2c4c:	ldr	r0, [pc, #520]	; 2e5c <read_VDR+0xa5c>
    2c50:	bl	0 <coda_set_error>
    2c54:	mvn	r3, #0
    2c58:	b	2e4c <read_VDR+0xa4c>
    2c5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2c60:	cmp	r3, #0
    2c64:	beq	2ca0 <read_VDR+0x8a0>
    2c68:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    2c6c:	mvn	r0, #0
    2c70:	mvn	r1, #0
    2c74:	cmp	r3, r1
    2c78:	cmpeq	r2, r0
    2c7c:	beq	2ca0 <read_VDR+0x8a0>
    2c80:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    2c84:	ldr	r0, [fp, #-432]	; 0xfffffe50
    2c88:	bl	22bc <read_CPR>
    2c8c:	mov	r3, r0
    2c90:	cmp	r3, #0
    2c94:	beq	2ca0 <read_VDR+0x8a0>
    2c98:	mvn	r3, #0
    2c9c:	b	2e4c <read_VDR+0xa4c>
    2ca0:	ldr	r3, [fp, #-432]	; 0xfffffe50
    2ca4:	ldr	r3, [r3, #20]
    2ca8:	ldr	r2, [r3, #16]
    2cac:	ldr	r3, [fp, #-84]	; 0xffffffac
    2cb0:	cmp	r2, r3
    2cb4:	beq	2cdc <read_VDR+0x8dc>
    2cb8:	ldr	r2, [fp, #-84]	; 0xffffffac
    2cbc:	ldr	r3, [fp, #-432]	; 0xfffffe50
    2cc0:	ldr	r3, [r3, #20]
    2cc4:	ldr	r3, [r3, #16]
    2cc8:	ldr	r1, [pc, #420]	; 2e74 <read_VDR+0xa74>
    2ccc:	ldr	r0, [pc, #392]	; 2e5c <read_VDR+0xa5c>
    2cd0:	bl	0 <coda_set_error>
    2cd4:	mvn	r3, #0
    2cd8:	b	2e4c <read_VDR+0xa4c>
    2cdc:	ldr	r3, [fp, #4]
    2ce0:	cmp	r3, #0
    2ce4:	beq	2d44 <read_VDR+0x944>
    2ce8:	ldr	ip, [fp, #-48]	; 0xffffffd0
    2cec:	ldr	lr, [fp, #-52]	; 0xffffffcc
    2cf0:	ldr	r4, [fp, #-360]	; 0xfffffe98
    2cf4:	ldr	r3, [fp, #-432]	; 0xfffffe50
    2cf8:	ldr	r3, [r3, #72]	; 0x48
    2cfc:	ldr	r2, [fp, #-80]	; 0xffffffb0
    2d00:	ldr	r1, [fp, #-76]	; 0xffffffb4
    2d04:	sub	r0, fp, #32
    2d08:	str	r0, [sp, #20]
    2d0c:	str	r1, [sp, #16]
    2d10:	str	r2, [sp, #12]
    2d14:	str	r3, [sp, #8]
    2d18:	sub	r3, fp, #424	; 0x1a8
    2d1c:	str	r3, [sp, #4]
    2d20:	sub	r3, fp, #392	; 0x188
    2d24:	str	r3, [sp]
    2d28:	mov	r3, r4
    2d2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2d30:	mov	r1, lr
    2d34:	mov	r0, ip
    2d38:	bl	0 <coda_cdf_variable_new>
    2d3c:	str	r0, [fp, #-16]
    2d40:	b	2da0 <read_VDR+0x9a0>
    2d44:	ldr	lr, [fp, #-48]	; 0xffffffd0
    2d48:	ldr	r4, [fp, #-52]	; 0xffffffcc
    2d4c:	ldr	r5, [fp, #-360]	; 0xfffffe98
    2d50:	ldr	r3, [fp, #-432]	; 0xfffffe50
    2d54:	add	r3, r3, #84	; 0x54
    2d58:	ldr	r2, [fp, #-432]	; 0xfffffe50
    2d5c:	ldr	r2, [r2, #72]	; 0x48
    2d60:	ldr	r1, [fp, #-80]	; 0xffffffb0
    2d64:	ldr	r0, [fp, #-76]	; 0xffffffb4
    2d68:	sub	ip, fp, #32
    2d6c:	str	ip, [sp, #20]
    2d70:	str	r0, [sp, #16]
    2d74:	str	r1, [sp, #12]
    2d78:	str	r2, [sp, #8]
    2d7c:	sub	r2, fp, #424	; 0x1a8
    2d80:	str	r2, [sp, #4]
    2d84:	str	r3, [sp]
    2d88:	mov	r3, r5
    2d8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2d90:	mov	r1, r4
    2d94:	mov	r0, lr
    2d98:	bl	0 <coda_cdf_variable_new>
    2d9c:	str	r0, [fp, #-16]
    2da0:	ldr	r3, [fp, #-16]
    2da4:	cmp	r3, #0
    2da8:	bne	2db4 <read_VDR+0x9b4>
    2dac:	mvn	r3, #0
    2db0:	b	2e4c <read_VDR+0xa4c>
    2db4:	ldr	r3, [fp, #-432]	; 0xfffffe50
    2db8:	ldr	r0, [r3, #20]
    2dbc:	sub	r1, fp, #356	; 0x164
    2dc0:	mov	r3, #1
    2dc4:	ldr	r2, [fp, #-16]
    2dc8:	bl	0 <coda_mem_record_add_field>
    2dcc:	mov	r3, r0
    2dd0:	cmp	r3, #0
    2dd4:	beq	2de8 <read_VDR+0x9e8>
    2dd8:	ldr	r0, [fp, #-16]
    2ddc:	bl	0 <coda_cdf_type_delete>
    2de0:	mvn	r3, #0
    2de4:	b	2e4c <read_VDR+0xa4c>
    2de8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2dec:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    2df0:	mvn	r1, #0
    2df4:	str	r1, [sp, #4]
    2df8:	mov	r1, #0
    2dfc:	str	r1, [sp]
    2e00:	mov	r1, r0
    2e04:	ldr	r0, [fp, #-432]	; 0xfffffe50
    2e08:	bl	1f08 <read_VXR>
    2e0c:	mov	r3, r0
    2e10:	cmp	r3, #0
    2e14:	beq	2e20 <read_VDR+0xa20>
    2e18:	mvn	r3, #0
    2e1c:	b	2e4c <read_VDR+0xa4c>
    2e20:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    2e24:	ldr	r1, [fp, #4]
    2e28:	str	r1, [sp]
    2e2c:	ldr	r0, [fp, #-432]	; 0xfffffe50
    2e30:	bl	2400 <read_VDR>
    2e34:	mov	r3, r0
    2e38:	cmp	r3, #0
    2e3c:	beq	2e48 <read_VDR+0xa48>
    2e40:	mvn	r3, #0
    2e44:	b	2e4c <read_VDR+0xa4c>
    2e48:	mov	r3, #0
    2e4c:	mov	r0, r3
    2e50:	sub	sp, fp, #12
    2e54:	pop	{r4, r5, fp, pc}
    2e58:	.word	0x0000050c
    2e5c:	.word	0xfffffed4
    2e60:	.word	0x00000544
    2e64:	.word	0x00000200
    2e68:	.word	0x0000057c
    2e6c:	.word	0x000005b4
    2e70:	.word	0x000005e4
    2e74:	.word	0x00000644

00002e78 <read_GDR>:
    2e78:	push	{fp, lr}
    2e7c:	add	fp, sp, #4
    2e80:	sub	sp, sp, #136	; 0x88
    2e84:	str	r0, [fp, #-112]	; 0xffffff90
    2e88:	strd	r2, [fp, #-124]	; 0xffffff84
    2e8c:	ldr	r3, [fp, #-112]	; 0xffffff90
    2e90:	ldr	ip, [r3, #52]	; 0x34
    2e94:	ldrd	r2, [fp, #-124]	; 0xffffff84
    2e98:	adds	r0, r2, #8
    2e9c:	adc	r1, r3, #0
    2ea0:	sub	r3, fp, #8
    2ea4:	str	r3, [sp, #8]
    2ea8:	mov	r2, #4
    2eac:	mov	r3, #0
    2eb0:	strd	r2, [sp]
    2eb4:	mov	r2, r0
    2eb8:	mov	r3, r1
    2ebc:	mov	r0, ip
    2ec0:	bl	0 <read_bytes>
    2ec4:	mov	r3, r0
    2ec8:	cmp	r3, #0
    2ecc:	bge	2ed8 <read_GDR+0x60>
    2ed0:	mvn	r3, #0
    2ed4:	b	32b8 <read_GDR+0x440>
    2ed8:	sub	r3, fp, #8
    2edc:	mov	r0, r3
    2ee0:	bl	27c <swap4>
    2ee4:	ldr	r3, [fp, #-8]
    2ee8:	cmp	r3, #2
    2eec:	beq	2f0c <read_GDR+0x94>
    2ef0:	ldr	r3, [fp, #-8]
    2ef4:	mov	r2, r3
    2ef8:	ldr	r1, [pc, #964]	; 32c4 <read_GDR+0x44c>
    2efc:	ldr	r0, [pc, #964]	; 32c8 <read_GDR+0x450>
    2f00:	bl	0 <coda_set_error>
    2f04:	mvn	r3, #0
    2f08:	b	32b8 <read_GDR+0x440>
    2f0c:	ldr	r3, [fp, #-112]	; 0xffffff90
    2f10:	ldr	ip, [r3, #52]	; 0x34
    2f14:	ldrd	r2, [fp, #-124]	; 0xffffff84
    2f18:	adds	r0, r2, #12
    2f1c:	adc	r1, r3, #0
    2f20:	sub	r3, fp, #20
    2f24:	str	r3, [sp, #8]
    2f28:	mov	r2, #8
    2f2c:	mov	r3, #0
    2f30:	strd	r2, [sp]
    2f34:	mov	r2, r0
    2f38:	mov	r3, r1
    2f3c:	mov	r0, ip
    2f40:	bl	0 <read_bytes>
    2f44:	mov	r3, r0
    2f48:	cmp	r3, #0
    2f4c:	bge	2f58 <read_GDR+0xe0>
    2f50:	mvn	r3, #0
    2f54:	b	32b8 <read_GDR+0x440>
    2f58:	ldr	r3, [fp, #-112]	; 0xffffff90
    2f5c:	ldr	ip, [r3, #52]	; 0x34
    2f60:	ldrd	r2, [fp, #-124]	; 0xffffff84
    2f64:	adds	r0, r2, #20
    2f68:	adc	r1, r3, #0
    2f6c:	sub	r3, fp, #28
    2f70:	str	r3, [sp, #8]
    2f74:	mov	r2, #8
    2f78:	mov	r3, #0
    2f7c:	strd	r2, [sp]
    2f80:	mov	r2, r0
    2f84:	mov	r3, r1
    2f88:	mov	r0, ip
    2f8c:	bl	0 <read_bytes>
    2f90:	mov	r3, r0
    2f94:	cmp	r3, #0
    2f98:	bge	2fa4 <read_GDR+0x12c>
    2f9c:	mvn	r3, #0
    2fa0:	b	32b8 <read_GDR+0x440>
    2fa4:	ldr	r3, [fp, #-112]	; 0xffffff90
    2fa8:	ldr	ip, [r3, #52]	; 0x34
    2fac:	ldrd	r2, [fp, #-124]	; 0xffffff84
    2fb0:	adds	r0, r2, #28
    2fb4:	adc	r1, r3, #0
    2fb8:	sub	r3, fp, #36	; 0x24
    2fbc:	str	r3, [sp, #8]
    2fc0:	mov	r2, #8
    2fc4:	mov	r3, #0
    2fc8:	strd	r2, [sp]
    2fcc:	mov	r2, r0
    2fd0:	mov	r3, r1
    2fd4:	mov	r0, ip
    2fd8:	bl	0 <read_bytes>
    2fdc:	mov	r3, r0
    2fe0:	cmp	r3, #0
    2fe4:	bge	2ff0 <read_GDR+0x178>
    2fe8:	mvn	r3, #0
    2fec:	b	32b8 <read_GDR+0x440>
    2ff0:	ldr	r3, [fp, #-112]	; 0xffffff90
    2ff4:	ldr	ip, [r3, #52]	; 0x34
    2ff8:	ldrd	r2, [fp, #-124]	; 0xffffff84
    2ffc:	adds	r0, r2, #36	; 0x24
    3000:	adc	r1, r3, #0
    3004:	sub	r3, fp, #44	; 0x2c
    3008:	str	r3, [sp, #8]
    300c:	mov	r2, #8
    3010:	mov	r3, #0
    3014:	strd	r2, [sp]
    3018:	mov	r2, r0
    301c:	mov	r3, r1
    3020:	mov	r0, ip
    3024:	bl	0 <read_bytes>
    3028:	mov	r3, r0
    302c:	cmp	r3, #0
    3030:	bge	303c <read_GDR+0x1c4>
    3034:	mvn	r3, #0
    3038:	b	32b8 <read_GDR+0x440>
    303c:	ldr	r3, [fp, #-112]	; 0xffffff90
    3040:	ldr	ip, [r3, #52]	; 0x34
    3044:	ldrd	r2, [fp, #-124]	; 0xffffff84
    3048:	adds	r0, r2, #44	; 0x2c
    304c:	adc	r1, r3, #0
    3050:	sub	r3, fp, #48	; 0x30
    3054:	str	r3, [sp, #8]
    3058:	mov	r2, #4
    305c:	mov	r3, #0
    3060:	strd	r2, [sp]
    3064:	mov	r2, r0
    3068:	mov	r3, r1
    306c:	mov	r0, ip
    3070:	bl	0 <read_bytes>
    3074:	mov	r3, r0
    3078:	cmp	r3, #0
    307c:	bge	3088 <read_GDR+0x210>
    3080:	mvn	r3, #0
    3084:	b	32b8 <read_GDR+0x440>
    3088:	ldr	r3, [fp, #-112]	; 0xffffff90
    308c:	ldr	ip, [r3, #52]	; 0x34
    3090:	ldrd	r2, [fp, #-124]	; 0xffffff84
    3094:	adds	r0, r2, #48	; 0x30
    3098:	adc	r1, r3, #0
    309c:	sub	r3, fp, #52	; 0x34
    30a0:	str	r3, [sp, #8]
    30a4:	mov	r2, #4
    30a8:	mov	r3, #0
    30ac:	strd	r2, [sp]
    30b0:	mov	r2, r0
    30b4:	mov	r3, r1
    30b8:	mov	r0, ip
    30bc:	bl	0 <read_bytes>
    30c0:	mov	r3, r0
    30c4:	cmp	r3, #0
    30c8:	bge	30d4 <read_GDR+0x25c>
    30cc:	mvn	r3, #0
    30d0:	b	32b8 <read_GDR+0x440>
    30d4:	ldr	r3, [fp, #-112]	; 0xffffff90
    30d8:	ldr	ip, [r3, #52]	; 0x34
    30dc:	ldrd	r2, [fp, #-124]	; 0xffffff84
    30e0:	adds	r0, r2, #56	; 0x38
    30e4:	adc	r1, r3, #0
    30e8:	ldr	r3, [fp, #-112]	; 0xffffff90
    30ec:	add	r3, r3, #80	; 0x50
    30f0:	str	r3, [sp, #8]
    30f4:	mov	r2, #4
    30f8:	mov	r3, #0
    30fc:	strd	r2, [sp]
    3100:	mov	r2, r0
    3104:	mov	r3, r1
    3108:	mov	r0, ip
    310c:	bl	0 <read_bytes>
    3110:	mov	r3, r0
    3114:	cmp	r3, #0
    3118:	bge	3124 <read_GDR+0x2ac>
    311c:	mvn	r3, #0
    3120:	b	32b8 <read_GDR+0x440>
    3124:	ldr	r3, [fp, #-112]	; 0xffffff90
    3128:	ldr	ip, [r3, #52]	; 0x34
    312c:	ldrd	r2, [fp, #-124]	; 0xffffff84
    3130:	adds	r0, r2, #60	; 0x3c
    3134:	adc	r1, r3, #0
    3138:	sub	r3, fp, #56	; 0x38
    313c:	str	r3, [sp, #8]
    3140:	mov	r2, #4
    3144:	mov	r3, #0
    3148:	strd	r2, [sp]
    314c:	mov	r2, r0
    3150:	mov	r3, r1
    3154:	mov	r0, ip
    3158:	bl	0 <read_bytes>
    315c:	mov	r3, r0
    3160:	cmp	r3, #0
    3164:	bge	3170 <read_GDR+0x2f8>
    3168:	mvn	r3, #0
    316c:	b	32b8 <read_GDR+0x440>
    3170:	sub	r3, fp, #20
    3174:	mov	r0, r3
    3178:	bl	398 <swap8>
    317c:	sub	r3, fp, #28
    3180:	mov	r0, r3
    3184:	bl	398 <swap8>
    3188:	sub	r3, fp, #36	; 0x24
    318c:	mov	r0, r3
    3190:	bl	398 <swap8>
    3194:	sub	r3, fp, #44	; 0x2c
    3198:	mov	r0, r3
    319c:	bl	398 <swap8>
    31a0:	sub	r3, fp, #48	; 0x30
    31a4:	mov	r0, r3
    31a8:	bl	27c <swap4>
    31ac:	sub	r3, fp, #52	; 0x34
    31b0:	mov	r0, r3
    31b4:	bl	27c <swap4>
    31b8:	ldr	r3, [fp, #-112]	; 0xffffff90
    31bc:	add	r3, r3, #80	; 0x50
    31c0:	mov	r0, r3
    31c4:	bl	27c <swap4>
    31c8:	sub	r3, fp, #56	; 0x38
    31cc:	mov	r0, r3
    31d0:	bl	27c <swap4>
    31d4:	ldr	r3, [fp, #-112]	; 0xffffff90
    31d8:	ldrd	r0, [r3, #8]
    31dc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    31e0:	cmp	r1, r3
    31e4:	cmpeq	r0, r2
    31e8:	beq	322c <read_GDR+0x3b4>
    31ec:	ldrd	r0, [fp, #-44]	; 0xffffffd4
    31f0:	sub	r3, fp, #80	; 0x50
    31f4:	mov	r2, r3
    31f8:	bl	0 <coda_str64>
    31fc:	ldr	r3, [fp, #-112]	; 0xffffff90
    3200:	ldrd	r0, [r3, #8]
    3204:	sub	r3, fp, #104	; 0x68
    3208:	mov	r2, r3
    320c:	bl	0 <coda_str64>
    3210:	sub	r3, fp, #104	; 0x68
    3214:	sub	r2, fp, #80	; 0x50
    3218:	ldr	r1, [pc, #172]	; 32cc <read_GDR+0x454>
    321c:	ldr	r0, [pc, #164]	; 32c8 <read_GDR+0x450>
    3220:	bl	0 <coda_set_error>
    3224:	mvn	r3, #0
    3228:	b	32b8 <read_GDR+0x440>
    322c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3230:	orrs	r3, r2, r3
    3234:	beq	3260 <read_GDR+0x3e8>
    3238:	ldrd	r2, [fp, #-20]	; 0xffffffec
    323c:	mov	r1, #0
    3240:	str	r1, [sp]
    3244:	ldr	r0, [fp, #-112]	; 0xffffff90
    3248:	bl	2400 <read_VDR>
    324c:	mov	r3, r0
    3250:	cmp	r3, #0
    3254:	beq	3260 <read_GDR+0x3e8>
    3258:	mvn	r3, #0
    325c:	b	32b8 <read_GDR+0x440>
    3260:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3264:	orrs	r3, r2, r3
    3268:	beq	3294 <read_GDR+0x41c>
    326c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3270:	mov	r1, #1
    3274:	str	r1, [sp]
    3278:	ldr	r0, [fp, #-112]	; 0xffffff90
    327c:	bl	2400 <read_VDR>
    3280:	mov	r3, r0
    3284:	cmp	r3, #0
    3288:	beq	3294 <read_GDR+0x41c>
    328c:	mvn	r3, #0
    3290:	b	32b8 <read_GDR+0x440>
    3294:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    3298:	ldr	r0, [fp, #-112]	; 0xffffff90
    329c:	bl	1370 <read_ADR>
    32a0:	mov	r3, r0
    32a4:	cmp	r3, #0
    32a8:	beq	32b4 <read_GDR+0x43c>
    32ac:	mvn	r3, #0
    32b0:	b	32b8 <read_GDR+0x440>
    32b4:	mov	r3, #0
    32b8:	mov	r0, r3
    32bc:	sub	sp, fp, #4
    32c0:	pop	{fp, pc}
    32c4:	.word	0x0000067c
    32c8:	.word	0xfffffed4
    32cc:	.word	0x000006b4

000032d0 <read_file>:
    32d0:	push	{fp, lr}
    32d4:	add	fp, sp, #4
    32d8:	sub	sp, sp, #48	; 0x30
    32dc:	str	r0, [fp, #-32]	; 0xffffffe0
    32e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    32e4:	ldr	r1, [r3, #52]	; 0x34
    32e8:	sub	r3, fp, #8
    32ec:	str	r3, [sp, #8]
    32f0:	mov	r2, #4
    32f4:	mov	r3, #0
    32f8:	strd	r2, [sp]
    32fc:	mov	r2, #16
    3300:	mov	r3, #0
    3304:	mov	r0, r1
    3308:	bl	0 <read_bytes>
    330c:	mov	r3, r0
    3310:	cmp	r3, #0
    3314:	bge	3320 <read_file+0x50>
    3318:	mvn	r3, #0
    331c:	b	3680 <read_file+0x3b0>
    3320:	sub	r3, fp, #8
    3324:	mov	r0, r3
    3328:	bl	27c <swap4>
    332c:	ldr	r3, [fp, #-8]
    3330:	cmp	r3, #1
    3334:	beq	3354 <read_file+0x84>
    3338:	ldr	r3, [fp, #-8]
    333c:	mov	r2, r3
    3340:	ldr	r1, [pc, #836]	; 368c <read_file+0x3bc>
    3344:	ldr	r0, [pc, #836]	; 3690 <read_file+0x3c0>
    3348:	bl	0 <coda_set_error>
    334c:	mvn	r3, #0
    3350:	b	3680 <read_file+0x3b0>
    3354:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3358:	ldr	r1, [r3, #52]	; 0x34
    335c:	sub	r3, fp, #20
    3360:	str	r3, [sp, #8]
    3364:	mov	r2, #8
    3368:	mov	r3, #0
    336c:	strd	r2, [sp]
    3370:	mov	r2, #20
    3374:	mov	r3, #0
    3378:	mov	r0, r1
    337c:	bl	0 <read_bytes>
    3380:	mov	r3, r0
    3384:	cmp	r3, #0
    3388:	bge	3394 <read_file+0xc4>
    338c:	mvn	r3, #0
    3390:	b	3680 <read_file+0x3b0>
    3394:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3398:	ldr	r1, [r3, #52]	; 0x34
    339c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    33a0:	add	r3, r3, #56	; 0x38
    33a4:	str	r3, [sp, #8]
    33a8:	mov	r2, #4
    33ac:	mov	r3, #0
    33b0:	strd	r2, [sp]
    33b4:	mov	r2, #28
    33b8:	mov	r3, #0
    33bc:	mov	r0, r1
    33c0:	bl	0 <read_bytes>
    33c4:	mov	r3, r0
    33c8:	cmp	r3, #0
    33cc:	bge	33d8 <read_file+0x108>
    33d0:	mvn	r3, #0
    33d4:	b	3680 <read_file+0x3b0>
    33d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    33dc:	ldr	r1, [r3, #52]	; 0x34
    33e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    33e4:	add	r3, r3, #60	; 0x3c
    33e8:	str	r3, [sp, #8]
    33ec:	mov	r2, #4
    33f0:	mov	r3, #0
    33f4:	strd	r2, [sp]
    33f8:	mov	r2, #32
    33fc:	mov	r3, #0
    3400:	mov	r0, r1
    3404:	bl	0 <read_bytes>
    3408:	mov	r3, r0
    340c:	cmp	r3, #0
    3410:	bge	341c <read_file+0x14c>
    3414:	mvn	r3, #0
    3418:	b	3680 <read_file+0x3b0>
    341c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3420:	ldr	r1, [r3, #52]	; 0x34
    3424:	sub	r3, fp, #24
    3428:	str	r3, [sp, #8]
    342c:	mov	r2, #4
    3430:	mov	r3, #0
    3434:	strd	r2, [sp]
    3438:	mov	r2, #36	; 0x24
    343c:	mov	r3, #0
    3440:	mov	r0, r1
    3444:	bl	0 <read_bytes>
    3448:	mov	r3, r0
    344c:	cmp	r3, #0
    3450:	bge	345c <read_file+0x18c>
    3454:	mvn	r3, #0
    3458:	b	3680 <read_file+0x3b0>
    345c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3460:	ldr	r1, [r3, #52]	; 0x34
    3464:	sub	r3, fp, #28
    3468:	str	r3, [sp, #8]
    346c:	mov	r2, #4
    3470:	mov	r3, #0
    3474:	strd	r2, [sp]
    3478:	mov	r2, #40	; 0x28
    347c:	mov	r3, #0
    3480:	mov	r0, r1
    3484:	bl	0 <read_bytes>
    3488:	mov	r3, r0
    348c:	cmp	r3, #0
    3490:	bge	349c <read_file+0x1cc>
    3494:	mvn	r3, #0
    3498:	b	3680 <read_file+0x3b0>
    349c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    34a0:	ldr	r1, [r3, #52]	; 0x34
    34a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    34a8:	add	r3, r3, #64	; 0x40
    34ac:	str	r3, [sp, #8]
    34b0:	mov	r2, #4
    34b4:	mov	r3, #0
    34b8:	strd	r2, [sp]
    34bc:	mov	r2, #52	; 0x34
    34c0:	mov	r3, #0
    34c4:	mov	r0, r1
    34c8:	bl	0 <read_bytes>
    34cc:	mov	r3, r0
    34d0:	cmp	r3, #0
    34d4:	bge	34e0 <read_file+0x210>
    34d8:	mvn	r3, #0
    34dc:	b	3680 <read_file+0x3b0>
    34e0:	sub	r3, fp, #20
    34e4:	mov	r0, r3
    34e8:	bl	398 <swap8>
    34ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    34f0:	add	r3, r3, #56	; 0x38
    34f4:	mov	r0, r3
    34f8:	bl	27c <swap4>
    34fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3500:	add	r3, r3, #60	; 0x3c
    3504:	mov	r0, r3
    3508:	bl	27c <swap4>
    350c:	sub	r3, fp, #24
    3510:	mov	r0, r3
    3514:	bl	27c <swap4>
    3518:	sub	r3, fp, #28
    351c:	mov	r0, r3
    3520:	bl	27c <swap4>
    3524:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3528:	add	r3, r3, #64	; 0x40
    352c:	mov	r0, r3
    3530:	bl	27c <swap4>
    3534:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3538:	sub	r3, r3, #1
    353c:	cmp	r3, #15
    3540:	ldrls	pc, [pc, r3, lsl #2]
    3544:	b	35bc <read_file+0x2ec>
    3548:	.word	0x00003588
    354c:	.word	0x00003588
    3550:	.word	0x000035a8
    3554:	.word	0x00003598
    3558:	.word	0x00003588
    355c:	.word	0x00003598
    3560:	.word	0x00003588
    3564:	.word	0x000035bc
    3568:	.word	0x00003588
    356c:	.word	0x000035bc
    3570:	.word	0x00003588
    3574:	.word	0x00003588
    3578:	.word	0x00003598
    357c:	.word	0x000035a8
    3580:	.word	0x000035a8
    3584:	.word	0x00003598
    3588:	ldr	r3, [fp, #-32]	; 0xffffffe0
    358c:	mov	r2, #0
    3590:	str	r2, [r3, #68]	; 0x44
    3594:	b	35d8 <read_file+0x308>
    3598:	ldr	r3, [fp, #-32]	; 0xffffffe0
    359c:	mov	r2, #1
    35a0:	str	r2, [r3, #68]	; 0x44
    35a4:	b	35d8 <read_file+0x308>
    35a8:	ldr	r1, [pc, #228]	; 3694 <read_file+0x3c4>
    35ac:	mvn	r0, #199	; 0xc7
    35b0:	bl	0 <coda_set_error>
    35b4:	mvn	r3, #0
    35b8:	b	3680 <read_file+0x3b0>
    35bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    35c0:	mov	r2, r3
    35c4:	ldr	r1, [pc, #204]	; 3698 <read_file+0x3c8>
    35c8:	mvn	r0, #199	; 0xc7
    35cc:	bl	0 <coda_set_error>
    35d0:	mvn	r3, #0
    35d4:	b	3680 <read_file+0x3b0>
    35d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    35dc:	and	r3, r3, #1
    35e0:	cmp	r3, #0
    35e4:	beq	35f8 <read_file+0x328>
    35e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    35ec:	mov	r2, #0
    35f0:	str	r2, [r3, #72]	; 0x48
    35f4:	b	3604 <read_file+0x334>
    35f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    35fc:	mov	r2, #1
    3600:	str	r2, [r3, #72]	; 0x48
    3604:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3608:	and	r3, r3, #2
    360c:	cmp	r3, #0
    3610:	bne	3628 <read_file+0x358>
    3614:	ldr	r1, [pc, #128]	; 369c <read_file+0x3cc>
    3618:	mvn	r0, #199	; 0xc7
    361c:	bl	0 <coda_set_error>
    3620:	mvn	r3, #0
    3624:	b	3680 <read_file+0x3b0>
    3628:	ldr	r3, [fp, #-28]	; 0xffffffe4
    362c:	and	r3, r3, #4
    3630:	cmp	r3, #0
    3634:	beq	3650 <read_file+0x380>
    3638:	ldr	r3, [fp, #-28]	; 0xffffffe4
    363c:	and	r3, r3, #8
    3640:	cmp	r3, #0
    3644:	beq	3650 <read_file+0x380>
    3648:	mov	r2, #1
    364c:	b	3654 <read_file+0x384>
    3650:	mov	r2, #0
    3654:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3658:	str	r2, [r3, #76]	; 0x4c
    365c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    3660:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3664:	bl	2e78 <read_GDR>
    3668:	mov	r3, r0
    366c:	cmp	r3, #0
    3670:	beq	367c <read_file+0x3ac>
    3674:	mvn	r3, #0
    3678:	b	3680 <read_file+0x3b0>
    367c:	mov	r3, #0
    3680:	mov	r0, r3
    3684:	sub	sp, fp, #4
    3688:	pop	{fp, pc}
    368c:	.word	0x000006f0
    3690:	.word	0xfffffed4
    3694:	.word	0x00000728
    3698:	.word	0x00000790
    369c:	.word	0x000007b8

000036a0 <coda_cdf_reopen>:
    36a0:	push	{fp, lr}
    36a4:	add	fp, sp, #4
    36a8:	sub	sp, sp, #40	; 0x28
    36ac:	str	r0, [fp, #-24]	; 0xffffffe8
    36b0:	mov	r0, #120	; 0x78
    36b4:	bl	0 <malloc>
    36b8:	mov	r3, r0
    36bc:	str	r3, [fp, #-8]
    36c0:	ldr	r3, [fp, #-8]
    36c4:	cmp	r3, #0
    36c8:	bne	3700 <coda_cdf_reopen+0x60>
    36cc:	ldr	r3, [pc, #700]	; 3990 <coda_cdf_reopen+0x2f0>
    36d0:	str	r3, [sp]
    36d4:	ldr	r3, [pc, #696]	; 3994 <coda_cdf_reopen+0x2f4>
    36d8:	mov	r2, #120	; 0x78
    36dc:	ldr	r1, [pc, #692]	; 3998 <coda_cdf_reopen+0x2f8>
    36e0:	mvn	r0, #0
    36e4:	bl	0 <coda_set_error>
    36e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    36ec:	ldr	r3, [r3]
    36f0:	mov	r0, r3
    36f4:	bl	0 <coda_close>
    36f8:	mvn	r3, #0
    36fc:	b	3984 <coda_cdf_reopen+0x2e4>
    3700:	ldr	r3, [fp, #-8]
    3704:	mov	r2, #0
    3708:	str	r2, [r3]
    370c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3710:	ldr	r3, [r3]
    3714:	ldrd	r2, [r3, #8]
    3718:	ldr	r1, [fp, #-8]
    371c:	strd	r2, [r1, #8]
    3720:	ldr	r3, [fp, #-8]
    3724:	mov	r2, #5
    3728:	str	r2, [r3, #16]
    372c:	ldr	r3, [fp, #-8]
    3730:	mov	r2, #0
    3734:	str	r2, [r3, #20]
    3738:	ldr	r3, [fp, #-8]
    373c:	mov	r2, #0
    3740:	str	r2, [r3, #24]
    3744:	ldr	r3, [fp, #-8]
    3748:	mov	r2, #0
    374c:	str	r2, [r3, #28]
    3750:	ldr	r3, [fp, #-8]
    3754:	mov	r2, #0
    3758:	str	r2, [r3, #32]
    375c:	ldr	r1, [fp, #-8]
    3760:	mov	r2, #0
    3764:	mov	r3, #0
    3768:	strd	r2, [r1, #40]	; 0x28
    376c:	ldr	r3, [fp, #-8]
    3770:	mov	r2, #0
    3774:	str	r2, [r3, #48]	; 0x30
    3778:	ldr	r3, [fp, #-24]	; 0xffffffe8
    377c:	ldr	r2, [r3]
    3780:	ldr	r3, [fp, #-8]
    3784:	str	r2, [r3, #52]	; 0x34
    3788:	ldr	r3, [fp, #-24]	; 0xffffffe8
    378c:	ldr	r3, [r3]
    3790:	ldr	r3, [r3]
    3794:	mov	r0, r3
    3798:	bl	0 <strdup>
    379c:	mov	r3, r0
    37a0:	mov	r2, r3
    37a4:	ldr	r3, [fp, #-8]
    37a8:	str	r2, [r3]
    37ac:	ldr	r3, [fp, #-8]
    37b0:	ldr	r3, [r3]
    37b4:	cmp	r3, #0
    37b8:	bne	37e0 <coda_cdf_reopen+0x140>
    37bc:	ldr	r3, [pc, #472]	; 399c <coda_cdf_reopen+0x2fc>
    37c0:	ldr	r2, [pc, #460]	; 3994 <coda_cdf_reopen+0x2f4>
    37c4:	ldr	r1, [pc, #468]	; 39a0 <coda_cdf_reopen+0x300>
    37c8:	mvn	r0, #0
    37cc:	bl	0 <coda_set_error>
    37d0:	ldr	r0, [fp, #-8]
    37d4:	bl	39c8 <coda_cdf_close>
    37d8:	mvn	r3, #0
    37dc:	b	3984 <coda_cdf_reopen+0x2e4>
    37e0:	ldr	r3, [fp, #-8]
    37e4:	ldr	r1, [r3, #52]	; 0x34
    37e8:	sub	r3, fp, #20
    37ec:	str	r3, [sp, #8]
    37f0:	mov	r2, #8
    37f4:	mov	r3, #0
    37f8:	strd	r2, [sp]
    37fc:	mov	r2, #0
    3800:	mov	r3, #0
    3804:	mov	r0, r1
    3808:	bl	0 <read_bytes>
    380c:	mov	r3, r0
    3810:	cmp	r3, #0
    3814:	bge	3828 <coda_cdf_reopen+0x188>
    3818:	ldr	r0, [fp, #-8]
    381c:	bl	39c8 <coda_cdf_close>
    3820:	mvn	r3, #0
    3824:	b	3984 <coda_cdf_reopen+0x2e4>
    3828:	sub	r3, fp, #20
    382c:	mov	r0, r3
    3830:	bl	27c <swap4>
    3834:	sub	r3, fp, #20
    3838:	add	r3, r3, #4
    383c:	mov	r0, r3
    3840:	bl	27c <swap4>
    3844:	ldr	r3, [fp, #-20]	; 0xffffffec
    3848:	ldr	r2, [pc, #340]	; 39a4 <coda_cdf_reopen+0x304>
    384c:	cmp	r3, r2
    3850:	beq	3864 <coda_cdf_reopen+0x1c4>
    3854:	ldr	r3, [fp, #-20]	; 0xffffffec
    3858:	ldr	r2, [pc, #328]	; 39a8 <coda_cdf_reopen+0x308>
    385c:	cmp	r3, r2
    3860:	bne	3880 <coda_cdf_reopen+0x1e0>
    3864:	ldr	r1, [pc, #320]	; 39ac <coda_cdf_reopen+0x30c>
    3868:	mvn	r0, #199	; 0xc7
    386c:	bl	0 <coda_set_error>
    3870:	ldr	r0, [fp, #-8]
    3874:	bl	39c8 <coda_cdf_close>
    3878:	mvn	r3, #0
    387c:	b	3984 <coda_cdf_reopen+0x2e4>
    3880:	ldr	r3, [fp, #-16]
    3884:	ldr	r2, [pc, #292]	; 39b0 <coda_cdf_reopen+0x310>
    3888:	cmp	r3, r2
    388c:	bne	38ac <coda_cdf_reopen+0x20c>
    3890:	ldr	r1, [pc, #284]	; 39b4 <coda_cdf_reopen+0x314>
    3894:	mvn	r0, #199	; 0xc7
    3898:	bl	0 <coda_set_error>
    389c:	ldr	r0, [fp, #-8]
    38a0:	bl	39c8 <coda_cdf_close>
    38a4:	mvn	r3, #0
    38a8:	b	3984 <coda_cdf_reopen+0x2e4>
    38ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    38b0:	ldr	r2, [pc, #256]	; 39b8 <coda_cdf_reopen+0x318>
    38b4:	cmp	r3, r2
    38b8:	bne	38cc <coda_cdf_reopen+0x22c>
    38bc:	ldr	r3, [fp, #-16]
    38c0:	ldr	r2, [pc, #220]	; 39a4 <coda_cdf_reopen+0x304>
    38c4:	cmp	r3, r2
    38c8:	beq	38e0 <coda_cdf_reopen+0x240>
    38cc:	ldr	r3, [pc, #232]	; 39bc <coda_cdf_reopen+0x31c>
    38d0:	ldr	r2, [pc, #232]	; 39c0 <coda_cdf_reopen+0x320>
    38d4:	ldr	r1, [pc, #184]	; 3994 <coda_cdf_reopen+0x2f4>
    38d8:	ldr	r0, [pc, #228]	; 39c4 <coda_cdf_reopen+0x324>
    38dc:	bl	0 <__assert_fail>
    38e0:	mov	r0, #5
    38e4:	bl	0 <coda_type_record_new>
    38e8:	str	r0, [fp, #-12]
    38ec:	ldr	r3, [fp, #-12]
    38f0:	cmp	r3, #0
    38f4:	bne	3908 <coda_cdf_reopen+0x268>
    38f8:	ldr	r0, [fp, #-8]
    38fc:	bl	39c8 <coda_cdf_close>
    3900:	mvn	r3, #0
    3904:	b	3984 <coda_cdf_reopen+0x2e4>
    3908:	mov	r1, #0
    390c:	ldr	r0, [fp, #-12]
    3910:	bl	0 <coda_mem_record_new>
    3914:	mov	r2, r0
    3918:	ldr	r3, [fp, #-8]
    391c:	str	r2, [r3, #20]
    3920:	ldr	r3, [fp, #-8]
    3924:	ldr	r3, [r3, #20]
    3928:	cmp	r3, #0
    392c:	bne	3948 <coda_cdf_reopen+0x2a8>
    3930:	ldr	r0, [fp, #-8]
    3934:	bl	39c8 <coda_cdf_close>
    3938:	ldr	r0, [fp, #-12]
    393c:	bl	0 <coda_type_release>
    3940:	mvn	r3, #0
    3944:	b	3984 <coda_cdf_reopen+0x2e4>
    3948:	ldr	r0, [fp, #-12]
    394c:	bl	0 <coda_type_release>
    3950:	ldr	r0, [fp, #-8]
    3954:	bl	32d0 <read_file>
    3958:	mov	r3, r0
    395c:	cmp	r3, #0
    3960:	beq	3974 <coda_cdf_reopen+0x2d4>
    3964:	ldr	r0, [fp, #-8]
    3968:	bl	39c8 <coda_cdf_close>
    396c:	mvn	r3, #0
    3970:	b	3984 <coda_cdf_reopen+0x2e4>
    3974:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3978:	ldr	r2, [fp, #-8]
    397c:	str	r2, [r3]
    3980:	mov	r3, #0
    3984:	mov	r0, r3
    3988:	sub	sp, fp, #4
    398c:	pop	{fp, pc}
    3990:	.word	0x00000523
    3994:	.word	0x00000128
    3998:	.word	0x00000170
    399c:	.word	0x00000537
    39a0:	.word	0x000007d8
    39a4:	.word	0x0000ffff
    39a8:	.word	0xcdf26002
    39ac:	.word	0x00000814
    39b0:	.word	0xcccc0001
    39b4:	.word	0x00000848
    39b8:	.word	0xcdf30001
    39bc:	.word	0x000008f4
    39c0:	.word	0x00000552
    39c4:	.word	0x0000087c

000039c8 <coda_cdf_close>:
    39c8:	push	{fp, lr}
    39cc:	add	fp, sp, #4
    39d0:	sub	sp, sp, #16
    39d4:	str	r0, [fp, #-16]
    39d8:	ldr	r3, [fp, #-16]
    39dc:	str	r3, [fp, #-8]
    39e0:	ldr	r3, [fp, #-8]
    39e4:	ldr	r3, [r3]
    39e8:	cmp	r3, #0
    39ec:	beq	3a00 <coda_cdf_close+0x38>
    39f0:	ldr	r3, [fp, #-8]
    39f4:	ldr	r3, [r3]
    39f8:	mov	r0, r3
    39fc:	bl	0 <free>
    3a00:	ldr	r3, [fp, #-8]
    3a04:	ldr	r3, [r3, #20]
    3a08:	cmp	r3, #0
    3a0c:	beq	3a20 <coda_cdf_close+0x58>
    3a10:	ldr	r3, [fp, #-8]
    3a14:	ldr	r3, [r3, #20]
    3a18:	mov	r0, r3
    3a1c:	bl	0 <coda_dynamic_type_delete>
    3a20:	ldr	r3, [fp, #-8]
    3a24:	ldr	r3, [r3, #48]	; 0x30
    3a28:	cmp	r3, #0
    3a2c:	beq	3a40 <coda_cdf_close+0x78>
    3a30:	ldr	r3, [fp, #-8]
    3a34:	ldr	r3, [r3, #48]	; 0x30
    3a38:	mov	r0, r3
    3a3c:	bl	0 <free>
    3a40:	ldr	r3, [fp, #-8]
    3a44:	ldr	r3, [r3, #52]	; 0x34
    3a48:	cmp	r3, #0
    3a4c:	beq	3a60 <coda_cdf_close+0x98>
    3a50:	ldr	r3, [fp, #-8]
    3a54:	ldr	r3, [r3, #52]	; 0x34
    3a58:	mov	r0, r3
    3a5c:	bl	0 <coda_bin_close>
    3a60:	ldr	r0, [fp, #-8]
    3a64:	bl	0 <free>
    3a68:	mov	r3, #0
    3a6c:	mov	r0, r3
    3a70:	sub	sp, fp, #4
    3a74:	pop	{fp, pc}
