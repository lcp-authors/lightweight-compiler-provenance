
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_study.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_pcre_study>:
       0:	push	{r4, r5, fp, lr}
       4:	add	fp, sp, #8
       8:	sub	sp, sp, #264	; 0x108
       c:	str	r0, [fp, #-16]
      10:	str	r1, [fp, #-20]	; 0xffffffec
      14:	str	r2, [fp, #-24]	; 0xffffffe8
      18:	movw	r0, #0
      1c:	str	r0, [fp, #-32]	; 0xffffffe0
      20:	str	r0, [fp, #-36]	; 0xffffffdc
      24:	str	r0, [fp, #-72]	; 0xffffffb8
      28:	ldr	r1, [fp, #-16]
      2c:	str	r1, [sp, #40]	; 0x28
      30:	ldr	r1, [fp, #-24]	; 0xffffffe8
      34:	str	r0, [r1]
      38:	ldr	r1, [sp, #40]	; 0x28
      3c:	cmp	r1, r0
      40:	beq	58 <coda_pcre_study+0x58>
      44:	ldr	r0, [pc, #948]	; 400 <coda_pcre_study+0x400>
      48:	ldr	r1, [sp, #40]	; 0x28
      4c:	ldr	r1, [r1]
      50:	cmp	r1, r0
      54:	beq	74 <coda_pcre_study+0x74>
      58:	ldr	r0, [fp, #-24]	; 0xffffffe8
      5c:	movw	r1, #0
      60:	movt	r1, #0
      64:	str	r1, [r0]
      68:	movw	r0, #0
      6c:	str	r0, [fp, #-12]
      70:	b	3f4 <coda_pcre_study+0x3f4>
      74:	ldr	r0, [sp, #40]	; 0x28
      78:	ldr	r0, [r0, #12]
      7c:	and	r0, r0, #1
      80:	cmp	r0, #0
      84:	bne	a4 <coda_pcre_study+0xa4>
      88:	ldr	r0, [fp, #-24]	; 0xffffffe8
      8c:	movw	r1, #0
      90:	movt	r1, #0
      94:	str	r1, [r0]
      98:	movw	r0, #0
      9c:	str	r0, [fp, #-12]
      a0:	b	3f4 <coda_pcre_study+0x3f4>
      a4:	ldr	r0, [fp, #-20]	; 0xffffffec
      a8:	mvn	r1, #15
      ac:	and	r0, r0, r1
      b0:	cmp	r0, #0
      b4:	beq	d4 <coda_pcre_study+0xd4>
      b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
      bc:	movw	r1, #0
      c0:	movt	r1, #0
      c4:	str	r1, [r0]
      c8:	movw	r0, #0
      cc:	str	r0, [fp, #-12]
      d0:	b	3f4 <coda_pcre_study+0x3f4>
      d4:	ldr	r0, [sp, #40]	; 0x28
      d8:	ldr	r1, [sp, #40]	; 0x28
      dc:	ldrh	r1, [r1, #34]	; 0x22
      e0:	add	r0, r0, r1
      e4:	ldr	r1, [sp, #40]	; 0x28
      e8:	ldrh	r1, [r1, #38]	; 0x26
      ec:	ldr	r2, [sp, #40]	; 0x28
      f0:	ldrh	r2, [r2, #36]	; 0x24
      f4:	mul	r1, r1, r2
      f8:	add	r0, r0, r1
      fc:	str	r0, [fp, #-84]	; 0xffffffac
     100:	ldr	r0, [sp, #40]	; 0x28
     104:	ldr	r0, [r0, #8]
     108:	and	r0, r0, #16
     10c:	cmp	r0, #0
     110:	bne	220 <coda_pcre_study+0x220>
     114:	ldr	r0, [sp, #40]	; 0x28
     118:	ldr	r0, [r0, #12]
     11c:	and	r0, r0, #272	; 0x110
     120:	cmp	r0, #0
     124:	bne	220 <coda_pcre_study+0x220>
     128:	ldr	r0, [sp, #40]	; 0x28
     12c:	ldr	r0, [r0, #48]	; 0x30
     130:	str	r0, [fp, #-80]	; 0xffffffb0
     134:	ldr	r0, [fp, #-80]	; 0xffffffb0
     138:	movw	r1, #0
     13c:	cmp	r0, r1
     140:	bne	168 <coda_pcre_study+0x168>
     144:	ldr	r0, [fp, #-16]
     148:	sub	r1, fp, #80	; 0x50
     14c:	movw	r2, #0
     150:	str	r1, [sp, #32]
     154:	mov	r1, r2
     158:	movw	r2, #11
     15c:	ldr	r3, [sp, #32]
     160:	bl	0 <coda_pcre_fullinfo>
     164:	str	r0, [sp, #28]
     168:	sub	r0, fp, #68	; 0x44
     16c:	ldr	r1, [fp, #-80]	; 0xffffffb0
     170:	str	r1, [sp, #44]	; 0x2c
     174:	ldr	r1, [fp, #-80]	; 0xffffffb0
     178:	add	r1, r1, #256	; 0x100
     17c:	str	r1, [sp, #48]	; 0x30
     180:	ldr	r1, [fp, #-80]	; 0xffffffb0
     184:	add	r1, r1, #512	; 0x200
     188:	str	r1, [sp, #52]	; 0x34
     18c:	ldr	r1, [fp, #-80]	; 0xffffffb0
     190:	add	r1, r1, #832	; 0x340
     194:	str	r1, [sp, #56]	; 0x38
     198:	str	r0, [sp, #24]
     19c:	movw	r1, #0
     1a0:	and	r1, r1, #255	; 0xff
     1a4:	movw	r2, #32
     1a8:	bl	0 <memset>
     1ac:	ldr	r0, [fp, #-84]	; 0xffffffac
     1b0:	ldr	r1, [sp, #40]	; 0x28
     1b4:	ldr	r1, [r1, #8]
     1b8:	and	r1, r1, #2048	; 0x800
     1bc:	cmp	r1, #0
     1c0:	movw	r1, #0
     1c4:	movne	r1, #1
     1c8:	and	r2, r1, #1
     1cc:	ldr	r1, [sp, #24]
     1d0:	add	r3, sp, #44	; 0x2c
     1d4:	bl	404 <set_start_bits>
     1d8:	str	r0, [sp, #36]	; 0x24
     1dc:	ldr	r0, [sp, #36]	; 0x24
     1e0:	cmp	r0, #1
     1e4:	movw	r0, #0
     1e8:	moveq	r0, #1
     1ec:	and	r0, r0, #1
     1f0:	str	r0, [fp, #-36]	; 0xffffffdc
     1f4:	ldr	r0, [sp, #36]	; 0x24
     1f8:	cmp	r0, #3
     1fc:	bne	21c <coda_pcre_study+0x21c>
     200:	ldr	r0, [fp, #-24]	; 0xffffffe8
     204:	movw	r1, #0
     208:	movt	r1, #0
     20c:	str	r1, [r0]
     210:	movw	r0, #0
     214:	str	r0, [fp, #-12]
     218:	b	3f4 <coda_pcre_study+0x3f4>
     21c:	b	220 <coda_pcre_study+0x220>
     220:	ldr	r0, [sp, #40]	; 0x28
     224:	ldr	r1, [fp, #-84]	; 0xffffffac
     228:	ldr	r3, [r0, #8]
     22c:	mov	r2, sp
     230:	sub	ip, fp, #32
     234:	str	ip, [r2, #4]
     238:	mov	ip, #0
     23c:	str	ip, [r2]
     240:	str	r1, [sp, #20]
     244:	ldr	r2, [sp, #20]
     248:	bl	1028 <find_minlength>
     24c:	str	r0, [fp, #-28]	; 0xffffffe4
     250:	mov	r1, r0
     254:	cmn	r0, #3
     258:	str	r1, [sp, #16]
     25c:	beq	290 <coda_pcre_study+0x290>
     260:	b	264 <coda_pcre_study+0x264>
     264:	ldr	r0, [sp, #16]
     268:	cmn	r0, #2
     26c:	bne	2ac <coda_pcre_study+0x2ac>
     270:	b	274 <coda_pcre_study+0x274>
     274:	ldr	r0, [fp, #-24]	; 0xffffffe8
     278:	movw	r1, #0
     27c:	movt	r1, #0
     280:	str	r1, [r0]
     284:	movw	r0, #0
     288:	str	r0, [fp, #-12]
     28c:	b	3f4 <coda_pcre_study+0x3f4>
     290:	ldr	r0, [fp, #-24]	; 0xffffffe8
     294:	movw	r1, #0
     298:	movt	r1, #0
     29c:	str	r1, [r0]
     2a0:	movw	r0, #0
     2a4:	str	r0, [fp, #-12]
     2a8:	b	3f4 <coda_pcre_study+0x3f4>
     2ac:	b	2b0 <coda_pcre_study+0x2b0>
     2b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
     2b4:	cmp	r0, #0
     2b8:	bne	2d8 <coda_pcre_study+0x2d8>
     2bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
     2c0:	cmp	r0, #0
     2c4:	bgt	2d8 <coda_pcre_study+0x2d8>
     2c8:	ldr	r0, [fp, #-20]	; 0xffffffec
     2cc:	and	r0, r0, #8
     2d0:	cmp	r0, #0
     2d4:	beq	3ec <coda_pcre_study+0x3ec>
     2d8:	movw	r0, #0
     2dc:	movt	r0, #0
     2e0:	ldr	r0, [r0]
     2e4:	movw	r1, #76	; 0x4c
     2e8:	str	r0, [sp, #12]
     2ec:	mov	r0, r1
     2f0:	ldr	r1, [sp, #12]
     2f4:	blx	r1
     2f8:	str	r0, [fp, #-72]	; 0xffffffb8
     2fc:	ldr	r0, [fp, #-72]	; 0xffffffb8
     300:	movw	r1, #0
     304:	cmp	r0, r1
     308:	bne	328 <coda_pcre_study+0x328>
     30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     310:	movw	r1, #0
     314:	movt	r1, #0
     318:	str	r1, [r0]
     31c:	movw	r0, #0
     320:	str	r0, [fp, #-12]
     324:	b	3f4 <coda_pcre_study+0x3f4>
     328:	ldr	r0, [fp, #-72]	; 0xffffffb8
     32c:	add	r0, r0, #32
     330:	str	r0, [fp, #-76]	; 0xffffffb4
     334:	ldr	r0, [fp, #-72]	; 0xffffffb8
     338:	movw	r1, #1
     33c:	str	r1, [r0]
     340:	ldr	r0, [fp, #-76]	; 0xffffffb4
     344:	ldr	r1, [fp, #-72]	; 0xffffffb8
     348:	str	r0, [r1, #4]
     34c:	ldr	r0, [fp, #-76]	; 0xffffffb4
     350:	movw	r1, #44	; 0x2c
     354:	str	r1, [r0]
     358:	ldr	r0, [fp, #-76]	; 0xffffffb4
     35c:	movw	r1, #0
     360:	str	r1, [r0, #4]
     364:	ldr	r0, [fp, #-36]	; 0xffffffdc
     368:	cmp	r0, #0
     36c:	beq	398 <coda_pcre_study+0x398>
     370:	sub	r1, fp, #68	; 0x44
     374:	ldr	r0, [fp, #-76]	; 0xffffffb4
     378:	ldr	r2, [r0, #4]
     37c:	orr	r2, r2, #1
     380:	str	r2, [r0, #4]
     384:	ldr	r0, [fp, #-76]	; 0xffffffb4
     388:	add	r0, r0, #8
     38c:	movw	r2, #32
     390:	bl	0 <memcpy>
     394:	b	3b0 <coda_pcre_study+0x3b0>
     398:	ldr	r0, [fp, #-76]	; 0xffffffb4
     39c:	add	r0, r0, #8
     3a0:	movw	r1, #0
     3a4:	and	r1, r1, #255	; 0xff
     3a8:	movw	r2, #32
     3ac:	bl	0 <memset>
     3b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     3b4:	cmp	r0, #0
     3b8:	ble	3dc <coda_pcre_study+0x3dc>
     3bc:	ldr	r0, [fp, #-76]	; 0xffffffb4
     3c0:	ldr	r1, [r0, #4]
     3c4:	orr	r1, r1, #2
     3c8:	str	r1, [r0, #4]
     3cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
     3d0:	ldr	r1, [fp, #-76]	; 0xffffffb4
     3d4:	str	r0, [r1, #40]	; 0x28
     3d8:	b	3e8 <coda_pcre_study+0x3e8>
     3dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
     3e0:	movw	r1, #0
     3e4:	str	r1, [r0, #40]	; 0x28
     3e8:	b	3ec <coda_pcre_study+0x3ec>
     3ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
     3f0:	str	r0, [fp, #-12]
     3f4:	ldr	r0, [fp, #-12]
     3f8:	sub	sp, fp, #8
     3fc:	pop	{r4, r5, fp, pc}
     400:	.word	0x50435245

00000404 <set_start_bits>:
     404:	push	{fp, lr}
     408:	mov	fp, sp
     40c:	sub	sp, sp, #104	; 0x68
     410:	str	r0, [fp, #-8]
     414:	str	r1, [fp, #-12]
     418:	str	r2, [fp, #-16]
     41c:	str	r3, [fp, #-20]	; 0xffffffec
     420:	movw	r0, #1
     424:	str	r0, [fp, #-28]	; 0xffffffe4
     428:	movw	r0, #32
     42c:	str	r0, [fp, #-32]	; 0xffffffe0
     430:	movw	r0, #1
     434:	str	r0, [fp, #-36]	; 0xffffffdc
     438:	ldr	r0, [fp, #-8]
     43c:	add	r0, r0, #1
     440:	add	r0, r0, #2
     444:	str	r0, [fp, #-40]	; 0xffffffd8
     448:	ldr	r0, [fp, #-8]
     44c:	ldrb	r0, [r0]
     450:	cmp	r0, #133	; 0x85
     454:	beq	488 <set_start_bits+0x84>
     458:	ldr	r0, [fp, #-8]
     45c:	ldrb	r0, [r0]
     460:	cmp	r0, #138	; 0x8a
     464:	beq	488 <set_start_bits+0x84>
     468:	ldr	r0, [fp, #-8]
     46c:	ldrb	r0, [r0]
     470:	cmp	r0, #134	; 0x86
     474:	beq	488 <set_start_bits+0x84>
     478:	ldr	r0, [fp, #-8]
     47c:	ldrb	r0, [r0]
     480:	cmp	r0, #139	; 0x8b
     484:	bne	494 <set_start_bits+0x90>
     488:	ldr	r0, [fp, #-40]	; 0xffffffd8
     48c:	add	r0, r0, #2
     490:	str	r0, [fp, #-40]	; 0xffffffd8
     494:	b	498 <set_start_bits+0x94>
     498:	ldr	r0, [fp, #-36]	; 0xffffffdc
     49c:	cmp	r0, #0
     4a0:	beq	fe0 <set_start_bits+0xbdc>
     4a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     4a8:	ldrb	r0, [r0]
     4ac:	mov	r1, r0
     4b0:	cmp	r0, #161	; 0xa1
     4b4:	str	r1, [sp, #48]	; 0x30
     4b8:	bhi	754 <set_start_bits+0x350>
     4bc:	add	r0, pc, #8
     4c0:	ldr	r1, [sp, #48]	; 0x30
     4c4:	ldr	r0, [r0, r1, lsl #2]
     4c8:	mov	pc, r0
     4cc:	.word	0x00000760
     4d0:	.word	0x00000760
     4d4:	.word	0x00000760
     4d8:	.word	0x00000760
     4dc:	.word	0x0000081c
     4e0:	.word	0x0000081c
     4e4:	.word	0x00000c1c
     4e8:	.word	0x00000c3c
     4ec:	.word	0x00000c5c
     4f0:	.word	0x00000c7c
     4f4:	.word	0x00000c9c
     4f8:	.word	0x00000cbc
     4fc:	.word	0x00000760
     500:	.word	0x00000760
     504:	.word	0x00000760
     508:	.word	0x00000760
     50c:	.word	0x0000076c
     510:	.word	0x00000bc0
     514:	.word	0x00000760
     518:	.word	0x00000b84
     51c:	.word	0x00000760
     520:	.word	0x00000bc0
     524:	.word	0x00000760
     528:	.word	0x00000760
     52c:	.word	0x00000760
     530:	.word	0x00000760
     534:	.word	0x00000760
     538:	.word	0x00000760
     53c:	.word	0x00000760
     540:	.word	0x00000b00
     544:	.word	0x00000b48
     548:	.word	0x00000760
     54c:	.word	0x00000760
     550:	.word	0x00000a1c
     554:	.word	0x00000a1c
     558:	.word	0x00000b00
     55c:	.word	0x00000b00
     560:	.word	0x00000a1c
     564:	.word	0x00000a1c
     568:	.word	0x00000a84
     56c:	.word	0x00000a84
     570:	.word	0x00000af4
     574:	.word	0x00000a1c
     578:	.word	0x00000b00
     57c:	.word	0x00000a1c
     580:	.word	0x00000a84
     584:	.word	0x00000a50
     588:	.word	0x00000a50
     58c:	.word	0x00000b48
     590:	.word	0x00000b48
     594:	.word	0x00000a50
     598:	.word	0x00000a50
     59c:	.word	0x00000abc
     5a0:	.word	0x00000abc
     5a4:	.word	0x00000b3c
     5a8:	.word	0x00000a50
     5ac:	.word	0x00000b48
     5b0:	.word	0x00000a50
     5b4:	.word	0x00000abc
     5b8:	.word	0x00000760
     5bc:	.word	0x00000760
     5c0:	.word	0x00000760
     5c4:	.word	0x00000760
     5c8:	.word	0x00000760
     5cc:	.word	0x00000760
     5d0:	.word	0x00000760
     5d4:	.word	0x00000760
     5d8:	.word	0x00000760
     5dc:	.word	0x00000760
     5e0:	.word	0x00000760
     5e4:	.word	0x00000760
     5e8:	.word	0x00000760
     5ec:	.word	0x00000760
     5f0:	.word	0x00000760
     5f4:	.word	0x00000760
     5f8:	.word	0x00000760
     5fc:	.word	0x00000760
     600:	.word	0x00000760
     604:	.word	0x00000760
     608:	.word	0x00000760
     60c:	.word	0x00000760
     610:	.word	0x00000760
     614:	.word	0x00000760
     618:	.word	0x00000760
     61c:	.word	0x00000760
     620:	.word	0x00000d08
     624:	.word	0x00000d08
     628:	.word	0x00000cdc
     62c:	.word	0x00000cdc
     630:	.word	0x00000d08
     634:	.word	0x00000d08
     638:	.word	0x00000cfc
     63c:	.word	0x00000cfc
     640:	.word	0x00000cec
     644:	.word	0x00000d08
     648:	.word	0x00000cdc
     64c:	.word	0x00000d08
     650:	.word	0x00000cfc
     654:	.word	0x00000754
     658:	.word	0x00000754
     65c:	.word	0x00000754
     660:	.word	0x00000754
     664:	.word	0x00000754
     668:	.word	0x00000754
     66c:	.word	0x00000754
     670:	.word	0x00000754
     674:	.word	0x00000754
     678:	.word	0x00000754
     67c:	.word	0x00000754
     680:	.word	0x00000754
     684:	.word	0x00000ea4
     688:	.word	0x00000ea4
     68c:	.word	0x00000754
     690:	.word	0x00000760
     694:	.word	0x00000760
     698:	.word	0x00000760
     69c:	.word	0x00000760
     6a0:	.word	0x00000760
     6a4:	.word	0x000008e8
     6a8:	.word	0x000008c8
     6ac:	.word	0x000008dc
     6b0:	.word	0x000008dc
     6b4:	.word	0x000008dc
     6b8:	.word	0x000008dc
     6bc:	.word	0x00000760
     6c0:	.word	0x0000082c
     6c4:	.word	0x000008f8
     6c8:	.word	0x000008f8
     6cc:	.word	0x000008f8
     6d0:	.word	0x0000082c
     6d4:	.word	0x0000082c
     6d8:	.word	0x0000082c
     6dc:	.word	0x0000082c
     6e0:	.word	0x0000082c
     6e4:	.word	0x0000082c
     6e8:	.word	0x00000760
     6ec:	.word	0x0000082c
     6f0:	.word	0x0000082c
     6f4:	.word	0x0000082c
     6f8:	.word	0x0000082c
     6fc:	.word	0x00000760
     700:	.word	0x00000760
     704:	.word	0x00000760
     708:	.word	0x00000760
     70c:	.word	0x00000760
     710:	.word	0x00000760
     714:	.word	0x00000940
     718:	.word	0x00000940
     71c:	.word	0x00000940
     720:	.word	0x00000760
     724:	.word	0x00000760
     728:	.word	0x00000760
     72c:	.word	0x00000760
     730:	.word	0x00000760
     734:	.word	0x00000760
     738:	.word	0x00000760
     73c:	.word	0x00000760
     740:	.word	0x00000760
     744:	.word	0x00000760
     748:	.word	0x00000760
     74c:	.word	0x00000760
     750:	.word	0x000009cc
     754:	movw	r0, #3
     758:	str	r0, [fp, #-4]
     75c:	b	101c <set_start_bits+0xc18>
     760:	movw	r0, #0
     764:	str	r0, [fp, #-4]
     768:	b	101c <set_start_bits+0xc18>
     76c:	ldr	r0, [fp, #-40]	; 0xffffffd8
     770:	ldrb	r0, [r0, #1]
     774:	cmp	r0, #9
     778:	beq	788 <set_start_bits+0x384>
     77c:	movw	r0, #0
     780:	str	r0, [fp, #-4]
     784:	b	101c <set_start_bits+0xc18>
     788:	ldr	r0, [fp, #-40]	; 0xffffffd8
     78c:	ldrb	r0, [r0, #2]
     790:	mov	r1, r0
     794:	movw	r2, #0
     798:	movt	r2, #0
     79c:	add	r0, r2, r0, lsl #2
     7a0:	str	r0, [fp, #-48]	; 0xffffffd0
     7a4:	str	r1, [sp, #44]	; 0x2c
     7a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
     7ac:	add	r1, r0, #4
     7b0:	str	r1, [fp, #-48]	; 0xffffffd0
     7b4:	ldr	r0, [r0]
     7b8:	str	r0, [fp, #-24]	; 0xffffffe8
     7bc:	cmn	r0, #1
     7c0:	bcs	810 <set_start_bits+0x40c>
     7c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     7c8:	cmp	r0, #255	; 0xff
     7cc:	bls	7e4 <set_start_bits+0x3e0>
     7d0:	ldr	r0, [fp, #-12]
     7d4:	ldrb	r1, [r0, #31]
     7d8:	orr	r1, r1, #128	; 0x80
     7dc:	strb	r1, [r0, #31]
     7e0:	b	80c <set_start_bits+0x408>
     7e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     7e8:	and	r1, r0, #7
     7ec:	mov	r2, #1
     7f0:	lsl	r1, r2, r1
     7f4:	ldr	r2, [fp, #-12]
     7f8:	lsr	r0, r0, #3
     7fc:	add	r0, r2, r0
     800:	ldrb	r2, [r0]
     804:	orr	r1, r2, r1
     808:	strb	r1, [r0]
     80c:	b	7a8 <set_start_bits+0x3a4>
     810:	movw	r0, #0
     814:	str	r0, [fp, #-36]	; 0xffffffdc
     818:	b	fdc <set_start_bits+0xbd8>
     81c:	ldr	r0, [fp, #-40]	; 0xffffffd8
     820:	add	r0, r0, #1
     824:	str	r0, [fp, #-40]	; 0xffffffd8
     828:	b	fdc <set_start_bits+0xbd8>
     82c:	ldr	r0, [fp, #-40]	; 0xffffffd8
     830:	ldr	r1, [fp, #-12]
     834:	ldr	r2, [fp, #-16]
     838:	ldr	r3, [fp, #-20]	; 0xffffffec
     83c:	bl	404 <set_start_bits>
     840:	str	r0, [fp, #-44]	; 0xffffffd4
     844:	ldr	r0, [fp, #-44]	; 0xffffffd4
     848:	cmp	r0, #0
     84c:	beq	85c <set_start_bits+0x458>
     850:	ldr	r0, [fp, #-44]	; 0xffffffd4
     854:	cmp	r0, #3
     858:	bne	868 <set_start_bits+0x464>
     85c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     860:	str	r0, [fp, #-4]
     864:	b	101c <set_start_bits+0xc18>
     868:	ldr	r0, [fp, #-44]	; 0xffffffd4
     86c:	cmp	r0, #1
     870:	bne	880 <set_start_bits+0x47c>
     874:	movw	r0, #0
     878:	str	r0, [fp, #-36]	; 0xffffffdc
     87c:	b	8c4 <set_start_bits+0x4c0>
     880:	b	884 <set_start_bits+0x480>
     884:	ldr	r0, [fp, #-40]	; 0xffffffd8
     888:	ldrb	r0, [r0, #1]
     88c:	lsl	r0, r0, #8
     890:	ldr	r1, [fp, #-40]	; 0xffffffd8
     894:	ldrb	r1, [r1, #2]
     898:	orr	r0, r0, r1
     89c:	ldr	r1, [fp, #-40]	; 0xffffffd8
     8a0:	add	r0, r1, r0
     8a4:	str	r0, [fp, #-40]	; 0xffffffd8
     8a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     8ac:	ldrb	r0, [r0]
     8b0:	cmp	r0, #119	; 0x77
     8b4:	beq	884 <set_start_bits+0x480>
     8b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     8bc:	add	r0, r0, #3
     8c0:	str	r0, [fp, #-40]	; 0xffffffd8
     8c4:	b	fdc <set_start_bits+0xbd8>
     8c8:	movw	r0, #2
     8cc:	str	r0, [fp, #-28]	; 0xffffffe4
     8d0:	movw	r0, #0
     8d4:	str	r0, [fp, #-36]	; 0xffffffdc
     8d8:	b	fdc <set_start_bits+0xbd8>
     8dc:	movw	r0, #2
     8e0:	str	r0, [fp, #-4]
     8e4:	b	101c <set_start_bits+0xc18>
     8e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     8ec:	add	r0, r0, #6
     8f0:	str	r0, [fp, #-40]	; 0xffffffd8
     8f4:	b	fdc <set_start_bits+0xbd8>
     8f8:	b	8fc <set_start_bits+0x4f8>
     8fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     900:	ldrb	r0, [r0, #1]
     904:	lsl	r0, r0, #8
     908:	ldr	r1, [fp, #-40]	; 0xffffffd8
     90c:	ldrb	r1, [r1, #2]
     910:	orr	r0, r0, r1
     914:	ldr	r1, [fp, #-40]	; 0xffffffd8
     918:	add	r0, r1, r0
     91c:	str	r0, [fp, #-40]	; 0xffffffd8
     920:	ldr	r0, [fp, #-40]	; 0xffffffd8
     924:	ldrb	r0, [r0]
     928:	cmp	r0, #119	; 0x77
     92c:	beq	8fc <set_start_bits+0x4f8>
     930:	ldr	r0, [fp, #-40]	; 0xffffffd8
     934:	add	r0, r0, #3
     938:	str	r0, [fp, #-40]	; 0xffffffd8
     93c:	b	fdc <set_start_bits+0xbd8>
     940:	ldr	r0, [fp, #-40]	; 0xffffffd8
     944:	add	r0, r0, #1
     948:	str	r0, [fp, #-40]	; 0xffffffd8
     94c:	ldr	r1, [fp, #-12]
     950:	ldr	r2, [fp, #-16]
     954:	ldr	r3, [fp, #-20]	; 0xffffffec
     958:	bl	404 <set_start_bits>
     95c:	str	r0, [fp, #-44]	; 0xffffffd4
     960:	ldr	r0, [fp, #-44]	; 0xffffffd4
     964:	cmp	r0, #0
     968:	beq	978 <set_start_bits+0x574>
     96c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     970:	cmp	r0, #3
     974:	bne	984 <set_start_bits+0x580>
     978:	ldr	r0, [fp, #-44]	; 0xffffffd4
     97c:	str	r0, [fp, #-4]
     980:	b	101c <set_start_bits+0xc18>
     984:	b	988 <set_start_bits+0x584>
     988:	ldr	r0, [fp, #-40]	; 0xffffffd8
     98c:	ldrb	r0, [r0, #1]
     990:	lsl	r0, r0, #8
     994:	ldr	r1, [fp, #-40]	; 0xffffffd8
     998:	ldrb	r1, [r1, #2]
     99c:	orr	r0, r0, r1
     9a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
     9a4:	add	r0, r1, r0
     9a8:	str	r0, [fp, #-40]	; 0xffffffd8
     9ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
     9b0:	ldrb	r0, [r0]
     9b4:	cmp	r0, #119	; 0x77
     9b8:	beq	988 <set_start_bits+0x584>
     9bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     9c0:	add	r0, r0, #3
     9c4:	str	r0, [fp, #-40]	; 0xffffffd8
     9c8:	b	fdc <set_start_bits+0xbd8>
     9cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     9d0:	add	r0, r0, #1
     9d4:	str	r0, [fp, #-40]	; 0xffffffd8
     9d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     9dc:	ldrb	r0, [r0, #1]
     9e0:	lsl	r0, r0, #8
     9e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
     9e8:	ldrb	r1, [r1, #2]
     9ec:	orr	r0, r0, r1
     9f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
     9f4:	add	r0, r1, r0
     9f8:	str	r0, [fp, #-40]	; 0xffffffd8
     9fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     a00:	ldrb	r0, [r0]
     a04:	cmp	r0, #119	; 0x77
     a08:	beq	9d8 <set_start_bits+0x5d4>
     a0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
     a10:	add	r0, r0, #3
     a14:	str	r0, [fp, #-40]	; 0xffffffd8
     a18:	b	fdc <set_start_bits+0xbd8>
     a1c:	ldr	r0, [fp, #-12]
     a20:	ldr	r1, [fp, #-40]	; 0xffffffd8
     a24:	add	r1, r1, #1
     a28:	ldr	r3, [fp, #-20]	; 0xffffffec
     a2c:	ldr	r2, [fp, #-16]
     a30:	movw	ip, #0
     a34:	str	r2, [sp, #40]	; 0x28
     a38:	mov	r2, ip
     a3c:	ldr	ip, [sp, #40]	; 0x28
     a40:	str	ip, [sp]
     a44:	bl	2010 <set_table_bit>
     a48:	str	r0, [fp, #-40]	; 0xffffffd8
     a4c:	b	fdc <set_start_bits+0xbd8>
     a50:	ldr	r0, [fp, #-12]
     a54:	ldr	r1, [fp, #-40]	; 0xffffffd8
     a58:	add	r1, r1, #1
     a5c:	ldr	r3, [fp, #-20]	; 0xffffffec
     a60:	ldr	r2, [fp, #-16]
     a64:	movw	ip, #1
     a68:	str	r2, [sp, #36]	; 0x24
     a6c:	mov	r2, ip
     a70:	ldr	ip, [sp, #36]	; 0x24
     a74:	str	ip, [sp]
     a78:	bl	2010 <set_table_bit>
     a7c:	str	r0, [fp, #-40]	; 0xffffffd8
     a80:	b	fdc <set_start_bits+0xbd8>
     a84:	ldr	r0, [fp, #-12]
     a88:	ldr	r1, [fp, #-40]	; 0xffffffd8
     a8c:	add	r1, r1, #1
     a90:	add	r1, r1, #2
     a94:	ldr	r3, [fp, #-20]	; 0xffffffec
     a98:	ldr	r2, [fp, #-16]
     a9c:	movw	ip, #0
     aa0:	str	r2, [sp, #32]
     aa4:	mov	r2, ip
     aa8:	ldr	ip, [sp, #32]
     aac:	str	ip, [sp]
     ab0:	bl	2010 <set_table_bit>
     ab4:	str	r0, [fp, #-40]	; 0xffffffd8
     ab8:	b	fdc <set_start_bits+0xbd8>
     abc:	ldr	r0, [fp, #-12]
     ac0:	ldr	r1, [fp, #-40]	; 0xffffffd8
     ac4:	add	r1, r1, #1
     ac8:	add	r1, r1, #2
     acc:	ldr	r3, [fp, #-20]	; 0xffffffec
     ad0:	ldr	r2, [fp, #-16]
     ad4:	movw	ip, #1
     ad8:	str	r2, [sp, #28]
     adc:	mov	r2, ip
     ae0:	ldr	ip, [sp, #28]
     ae4:	str	ip, [sp]
     ae8:	bl	2010 <set_table_bit>
     aec:	str	r0, [fp, #-40]	; 0xffffffd8
     af0:	b	fdc <set_start_bits+0xbd8>
     af4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     af8:	add	r0, r0, #2
     afc:	str	r0, [fp, #-40]	; 0xffffffd8
     b00:	ldr	r0, [fp, #-12]
     b04:	ldr	r1, [fp, #-40]	; 0xffffffd8
     b08:	add	r1, r1, #1
     b0c:	ldr	r3, [fp, #-20]	; 0xffffffec
     b10:	ldr	r2, [fp, #-16]
     b14:	movw	ip, #0
     b18:	str	r2, [sp, #24]
     b1c:	mov	r2, ip
     b20:	ldr	ip, [sp, #24]
     b24:	str	ip, [sp]
     b28:	bl	2010 <set_table_bit>
     b2c:	movw	r1, #0
     b30:	str	r1, [fp, #-36]	; 0xffffffdc
     b34:	str	r0, [sp, #20]
     b38:	b	fdc <set_start_bits+0xbd8>
     b3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
     b40:	add	r0, r0, #2
     b44:	str	r0, [fp, #-40]	; 0xffffffd8
     b48:	ldr	r0, [fp, #-12]
     b4c:	ldr	r1, [fp, #-40]	; 0xffffffd8
     b50:	add	r1, r1, #1
     b54:	ldr	r3, [fp, #-20]	; 0xffffffec
     b58:	ldr	r2, [fp, #-16]
     b5c:	movw	ip, #1
     b60:	str	r2, [sp, #16]
     b64:	mov	r2, ip
     b68:	ldr	ip, [sp, #16]
     b6c:	str	ip, [sp]
     b70:	bl	2010 <set_table_bit>
     b74:	movw	r1, #0
     b78:	str	r1, [fp, #-36]	; 0xffffffdc
     b7c:	str	r0, [sp, #12]
     b80:	b	fdc <set_start_bits+0xbd8>
     b84:	ldr	r0, [fp, #-12]
     b88:	ldrb	r1, [r0, #1]
     b8c:	orr	r1, r1, #2
     b90:	strb	r1, [r0, #1]
     b94:	ldr	r0, [fp, #-12]
     b98:	ldrb	r1, [r0, #4]
     b9c:	orr	r1, r1, #1
     ba0:	strb	r1, [r0, #4]
     ba4:	ldr	r0, [fp, #-12]
     ba8:	ldrb	r1, [r0, #20]
     bac:	orr	r1, r1, #1
     bb0:	strb	r1, [r0, #20]
     bb4:	movw	r0, #0
     bb8:	str	r0, [fp, #-36]	; 0xffffffdc
     bbc:	b	fdc <set_start_bits+0xbd8>
     bc0:	ldr	r0, [fp, #-12]
     bc4:	ldrb	r1, [r0, #1]
     bc8:	orr	r1, r1, #4
     bcc:	strb	r1, [r0, #1]
     bd0:	ldr	r0, [fp, #-12]
     bd4:	ldrb	r1, [r0, #1]
     bd8:	orr	r1, r1, #8
     bdc:	strb	r1, [r0, #1]
     be0:	ldr	r0, [fp, #-12]
     be4:	ldrb	r1, [r0, #1]
     be8:	orr	r1, r1, #16
     bec:	strb	r1, [r0, #1]
     bf0:	ldr	r0, [fp, #-12]
     bf4:	ldrb	r1, [r0, #1]
     bf8:	orr	r1, r1, #32
     bfc:	strb	r1, [r0, #1]
     c00:	ldr	r0, [fp, #-12]
     c04:	ldrb	r1, [r0, #16]
     c08:	orr	r1, r1, #32
     c0c:	strb	r1, [r0, #16]
     c10:	movw	r0, #0
     c14:	str	r0, [fp, #-36]	; 0xffffffdc
     c18:	b	fdc <set_start_bits+0xbd8>
     c1c:	ldr	r0, [fp, #-12]
     c20:	ldr	r2, [fp, #-32]	; 0xffffffe0
     c24:	ldr	r3, [fp, #-20]	; 0xffffffec
     c28:	movw	r1, #64	; 0x40
     c2c:	bl	20ec <set_nottype_bits>
     c30:	movw	r0, #0
     c34:	str	r0, [fp, #-36]	; 0xffffffdc
     c38:	b	fdc <set_start_bits+0xbd8>
     c3c:	ldr	r0, [fp, #-12]
     c40:	ldr	r2, [fp, #-32]	; 0xffffffe0
     c44:	ldr	r3, [fp, #-20]	; 0xffffffec
     c48:	movw	r1, #64	; 0x40
     c4c:	bl	216c <set_type_bits>
     c50:	movw	r0, #0
     c54:	str	r0, [fp, #-36]	; 0xffffffdc
     c58:	b	fdc <set_start_bits+0xbd8>
     c5c:	ldr	r0, [fp, #-12]
     c60:	ldr	r2, [fp, #-32]	; 0xffffffe0
     c64:	ldr	r3, [fp, #-20]	; 0xffffffec
     c68:	movw	r1, #0
     c6c:	bl	20ec <set_nottype_bits>
     c70:	movw	r0, #0
     c74:	str	r0, [fp, #-36]	; 0xffffffdc
     c78:	b	fdc <set_start_bits+0xbd8>
     c7c:	ldr	r0, [fp, #-12]
     c80:	ldr	r2, [fp, #-32]	; 0xffffffe0
     c84:	ldr	r3, [fp, #-20]	; 0xffffffec
     c88:	movw	r1, #0
     c8c:	bl	216c <set_type_bits>
     c90:	movw	r0, #0
     c94:	str	r0, [fp, #-36]	; 0xffffffdc
     c98:	b	fdc <set_start_bits+0xbd8>
     c9c:	ldr	r0, [fp, #-12]
     ca0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     ca4:	ldr	r3, [fp, #-20]	; 0xffffffec
     ca8:	movw	r1, #160	; 0xa0
     cac:	bl	20ec <set_nottype_bits>
     cb0:	movw	r0, #0
     cb4:	str	r0, [fp, #-36]	; 0xffffffdc
     cb8:	b	fdc <set_start_bits+0xbd8>
     cbc:	ldr	r0, [fp, #-12]
     cc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     cc4:	ldr	r3, [fp, #-20]	; 0xffffffec
     cc8:	movw	r1, #160	; 0xa0
     ccc:	bl	216c <set_type_bits>
     cd0:	movw	r0, #0
     cd4:	str	r0, [fp, #-36]	; 0xffffffdc
     cd8:	b	fdc <set_start_bits+0xbd8>
     cdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     ce0:	add	r0, r0, #1
     ce4:	str	r0, [fp, #-40]	; 0xffffffd8
     ce8:	b	fdc <set_start_bits+0xbd8>
     cec:	ldr	r0, [fp, #-40]	; 0xffffffd8
     cf0:	add	r0, r0, #3
     cf4:	str	r0, [fp, #-40]	; 0xffffffd8
     cf8:	b	fdc <set_start_bits+0xbd8>
     cfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     d00:	add	r0, r0, #2
     d04:	str	r0, [fp, #-40]	; 0xffffffd8
     d08:	ldr	r0, [fp, #-40]	; 0xffffffd8
     d0c:	ldrb	r0, [r0, #1]
     d10:	sub	r0, r0, #6
     d14:	cmp	r0, #15
     d18:	str	r0, [sp, #8]
     d1c:	bhi	d70 <set_start_bits+0x96c>
     d20:	add	r0, pc, #8
     d24:	ldr	r1, [sp, #8]
     d28:	ldr	r0, [r0, r1, lsl #2]
     d2c:	mov	pc, r0
     d30:	.word	0x00000e08
     d34:	.word	0x00000e20
     d38:	.word	0x00000e38
     d3c:	.word	0x00000e50
     d40:	.word	0x00000e68
     d44:	.word	0x00000e80
     d48:	.word	0x00000d74
     d4c:	.word	0x00000d74
     d50:	.word	0x00000d70
     d54:	.word	0x00000d70
     d58:	.word	0x00000d70
     d5c:	.word	0x00000db4
     d60:	.word	0x00000d70
     d64:	.word	0x00000d80
     d68:	.word	0x00000d70
     d6c:	.word	0x00000db4
     d70:	b	d74 <set_start_bits+0x970>
     d74:	movw	r0, #0
     d78:	str	r0, [fp, #-4]
     d7c:	b	101c <set_start_bits+0xc18>
     d80:	ldr	r0, [fp, #-12]
     d84:	ldrb	r1, [r0, #1]
     d88:	orr	r1, r1, #2
     d8c:	strb	r1, [r0, #1]
     d90:	ldr	r0, [fp, #-12]
     d94:	ldrb	r1, [r0, #4]
     d98:	orr	r1, r1, #1
     d9c:	strb	r1, [r0, #4]
     da0:	ldr	r0, [fp, #-12]
     da4:	ldrb	r1, [r0, #20]
     da8:	orr	r1, r1, #1
     dac:	strb	r1, [r0, #20]
     db0:	b	e94 <set_start_bits+0xa90>
     db4:	ldr	r0, [fp, #-12]
     db8:	ldrb	r1, [r0, #1]
     dbc:	orr	r1, r1, #4
     dc0:	strb	r1, [r0, #1]
     dc4:	ldr	r0, [fp, #-12]
     dc8:	ldrb	r1, [r0, #1]
     dcc:	orr	r1, r1, #8
     dd0:	strb	r1, [r0, #1]
     dd4:	ldr	r0, [fp, #-12]
     dd8:	ldrb	r1, [r0, #1]
     ddc:	orr	r1, r1, #16
     de0:	strb	r1, [r0, #1]
     de4:	ldr	r0, [fp, #-12]
     de8:	ldrb	r1, [r0, #1]
     dec:	orr	r1, r1, #32
     df0:	strb	r1, [r0, #1]
     df4:	ldr	r0, [fp, #-12]
     df8:	ldrb	r1, [r0, #16]
     dfc:	orr	r1, r1, #32
     e00:	strb	r1, [r0, #16]
     e04:	b	e94 <set_start_bits+0xa90>
     e08:	ldr	r0, [fp, #-12]
     e0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e10:	ldr	r3, [fp, #-20]	; 0xffffffec
     e14:	movw	r1, #64	; 0x40
     e18:	bl	20ec <set_nottype_bits>
     e1c:	b	e94 <set_start_bits+0xa90>
     e20:	ldr	r0, [fp, #-12]
     e24:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e28:	ldr	r3, [fp, #-20]	; 0xffffffec
     e2c:	movw	r1, #64	; 0x40
     e30:	bl	216c <set_type_bits>
     e34:	b	e94 <set_start_bits+0xa90>
     e38:	ldr	r0, [fp, #-12]
     e3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e40:	ldr	r3, [fp, #-20]	; 0xffffffec
     e44:	movw	r1, #0
     e48:	bl	20ec <set_nottype_bits>
     e4c:	b	e94 <set_start_bits+0xa90>
     e50:	ldr	r0, [fp, #-12]
     e54:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e58:	ldr	r3, [fp, #-20]	; 0xffffffec
     e5c:	movw	r1, #0
     e60:	bl	216c <set_type_bits>
     e64:	b	e94 <set_start_bits+0xa90>
     e68:	ldr	r0, [fp, #-12]
     e6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e70:	ldr	r3, [fp, #-20]	; 0xffffffec
     e74:	movw	r1, #160	; 0xa0
     e78:	bl	20ec <set_nottype_bits>
     e7c:	b	e94 <set_start_bits+0xa90>
     e80:	ldr	r0, [fp, #-12]
     e84:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e88:	ldr	r3, [fp, #-20]	; 0xffffffec
     e8c:	movw	r1, #160	; 0xa0
     e90:	bl	216c <set_type_bits>
     e94:	ldr	r0, [fp, #-40]	; 0xffffffd8
     e98:	add	r0, r0, #2
     e9c:	str	r0, [fp, #-40]	; 0xffffffd8
     ea0:	b	fdc <set_start_bits+0xbd8>
     ea4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     ea8:	add	r0, r0, #1
     eac:	str	r0, [fp, #-40]	; 0xffffffd8
     eb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     eb4:	str	r0, [sp, #52]	; 0x34
     eb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     ebc:	add	r0, r0, #32
     ec0:	str	r0, [fp, #-40]	; 0xffffffd8
     ec4:	movw	r0, #0
     ec8:	str	r0, [fp, #-24]	; 0xffffffe8
     ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ed0:	cmp	r0, #32
     ed4:	bcs	f10 <set_start_bits+0xb0c>
     ed8:	ldr	r0, [sp, #52]	; 0x34
     edc:	ldr	r1, [fp, #-24]	; 0xffffffe8
     ee0:	add	r0, r0, r1
     ee4:	ldrb	r0, [r0]
     ee8:	ldr	r1, [fp, #-12]
     eec:	ldr	r2, [fp, #-24]	; 0xffffffe8
     ef0:	add	r1, r1, r2
     ef4:	ldrb	r2, [r1]
     ef8:	orr	r0, r2, r0
     efc:	strb	r0, [r1]
     f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f04:	add	r0, r0, #1
     f08:	str	r0, [fp, #-24]	; 0xffffffe8
     f0c:	b	ecc <set_start_bits+0xac8>
     f10:	ldr	r0, [fp, #-40]	; 0xffffffd8
     f14:	ldrb	r0, [r0]
     f18:	sub	r1, r0, #98	; 0x62
     f1c:	cmp	r1, #2
     f20:	str	r0, [sp, #4]
     f24:	bcc	f84 <set_start_bits+0xb80>
     f28:	b	f2c <set_start_bits+0xb28>
     f2c:	ldr	r0, [sp, #4]
     f30:	sub	r1, r0, #102	; 0x66
     f34:	cmp	r1, #2
     f38:	bcc	f84 <set_start_bits+0xb80>
     f3c:	b	f40 <set_start_bits+0xb3c>
     f40:	ldr	r0, [sp, #4]
     f44:	sub	r1, r0, #104	; 0x68
     f48:	cmp	r1, #2
     f4c:	bcc	f94 <set_start_bits+0xb90>
     f50:	b	f54 <set_start_bits+0xb50>
     f54:	ldr	r0, [sp, #4]
     f58:	cmp	r0, #106	; 0x6a
     f5c:	beq	f84 <set_start_bits+0xb80>
     f60:	b	f64 <set_start_bits+0xb60>
     f64:	ldr	r0, [sp, #4]
     f68:	cmp	r0, #108	; 0x6c
     f6c:	beq	f84 <set_start_bits+0xb80>
     f70:	b	f74 <set_start_bits+0xb70>
     f74:	ldr	r0, [sp, #4]
     f78:	cmp	r0, #109	; 0x6d
     f7c:	beq	f94 <set_start_bits+0xb90>
     f80:	b	fd0 <set_start_bits+0xbcc>
     f84:	ldr	r0, [fp, #-40]	; 0xffffffd8
     f88:	add	r0, r0, #1
     f8c:	str	r0, [fp, #-40]	; 0xffffffd8
     f90:	b	fd8 <set_start_bits+0xbd4>
     f94:	ldr	r0, [fp, #-40]	; 0xffffffd8
     f98:	ldrb	r0, [r0, #1]
     f9c:	lsl	r0, r0, #8
     fa0:	ldr	r1, [fp, #-40]	; 0xffffffd8
     fa4:	ldrb	r1, [r1, #2]
     fa8:	orr	r0, r0, r1
     fac:	cmp	r0, #0
     fb0:	bne	fc4 <set_start_bits+0xbc0>
     fb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     fb8:	add	r0, r0, #5
     fbc:	str	r0, [fp, #-40]	; 0xffffffd8
     fc0:	b	fcc <set_start_bits+0xbc8>
     fc4:	movw	r0, #0
     fc8:	str	r0, [fp, #-36]	; 0xffffffdc
     fcc:	b	fd8 <set_start_bits+0xbd4>
     fd0:	movw	r0, #0
     fd4:	str	r0, [fp, #-36]	; 0xffffffdc
     fd8:	b	fdc <set_start_bits+0xbd8>
     fdc:	b	498 <set_start_bits+0x94>
     fe0:	ldr	r0, [fp, #-8]
     fe4:	ldrb	r0, [r0, #1]
     fe8:	lsl	r0, r0, #8
     fec:	ldr	r1, [fp, #-8]
     ff0:	ldrb	r1, [r1, #2]
     ff4:	orr	r0, r0, r1
     ff8:	ldr	r1, [fp, #-8]
     ffc:	add	r0, r1, r0
    1000:	str	r0, [fp, #-8]
    1004:	ldr	r0, [fp, #-8]
    1008:	ldrb	r0, [r0]
    100c:	cmp	r0, #119	; 0x77
    1010:	beq	430 <set_start_bits+0x2c>
    1014:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1018:	str	r0, [fp, #-4]
    101c:	ldr	r0, [fp, #-4]
    1020:	mov	sp, fp
    1024:	pop	{fp, pc}

00001028 <find_minlength>:
    1028:	push	{fp, lr}
    102c:	mov	fp, sp
    1030:	sub	sp, sp, #128	; 0x80
    1034:	ldr	ip, [fp, #12]
    1038:	ldr	lr, [fp, #8]
    103c:	str	r0, [fp, #-8]
    1040:	str	r1, [fp, #-12]
    1044:	str	r2, [fp, #-16]
    1048:	str	r3, [fp, #-20]	; 0xffffffec
    104c:	mvn	r0, #0
    1050:	str	r0, [fp, #-24]	; 0xffffffe8
    1054:	ldr	r0, [fp, #-20]	; 0xffffffec
    1058:	and	r0, r0, #2048	; 0x800
    105c:	cmp	r0, #0
    1060:	movw	r0, #0
    1064:	movne	r0, #1
    1068:	and	r0, r0, #1
    106c:	str	r0, [fp, #-28]	; 0xffffffe4
    1070:	movw	r0, #0
    1074:	str	r0, [fp, #-32]	; 0xffffffe0
    1078:	str	r0, [fp, #-44]	; 0xffffffd4
    107c:	ldr	r0, [fp, #-12]
    1080:	add	r0, r0, #1
    1084:	add	r0, r0, #2
    1088:	str	r0, [fp, #-48]	; 0xffffffd0
    108c:	ldr	r0, [fp, #12]
    1090:	ldr	r1, [r0]
    1094:	add	r2, r1, #1
    1098:	str	r2, [r0]
    109c:	cmp	r1, #1000	; 0x3e8
    10a0:	str	lr, [sp, #32]
    10a4:	str	ip, [sp, #28]
    10a8:	ble	10b8 <find_minlength+0x90>
    10ac:	mvn	r0, #0
    10b0:	str	r0, [fp, #-4]
    10b4:	b	1fb4 <find_minlength+0xf8c>
    10b8:	ldr	r0, [fp, #-12]
    10bc:	ldrb	r0, [r0]
    10c0:	cmp	r0, #133	; 0x85
    10c4:	beq	10f8 <find_minlength+0xd0>
    10c8:	ldr	r0, [fp, #-12]
    10cc:	ldrb	r0, [r0]
    10d0:	cmp	r0, #138	; 0x8a
    10d4:	beq	10f8 <find_minlength+0xd0>
    10d8:	ldr	r0, [fp, #-12]
    10dc:	ldrb	r0, [r0]
    10e0:	cmp	r0, #134	; 0x86
    10e4:	beq	10f8 <find_minlength+0xd0>
    10e8:	ldr	r0, [fp, #-12]
    10ec:	ldrb	r0, [r0]
    10f0:	cmp	r0, #139	; 0x8b
    10f4:	bne	1104 <find_minlength+0xdc>
    10f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    10fc:	add	r0, r0, #2
    1100:	str	r0, [fp, #-48]	; 0xffffffd0
    1104:	b	1108 <find_minlength+0xe0>
    1108:	ldr	r0, [fp, #-48]	; 0xffffffd0
    110c:	ldrb	r0, [r0]
    1110:	strb	r0, [sp, #63]	; 0x3f
    1114:	ldrb	r0, [sp, #63]	; 0x3f
    1118:	mov	r1, r0
    111c:	cmp	r0, #161	; 0xa1
    1120:	str	r1, [sp, #24]
    1124:	bhi	1fa4 <find_minlength+0xf7c>
    1128:	add	r0, pc, #8
    112c:	ldr	r1, [sp, #24]
    1130:	ldr	r0, [r0, r1, lsl #2]
    1134:	mov	pc, r0
    1138:	.word	0x000014ac
    113c:	.word	0x0000154c
    1140:	.word	0x0000154c
    1144:	.word	0x00001f80
    1148:	.word	0x0000154c
    114c:	.word	0x0000154c
    1150:	.word	0x0000170c
    1154:	.word	0x0000170c
    1158:	.word	0x0000170c
    115c:	.word	0x0000170c
    1160:	.word	0x0000170c
    1164:	.word	0x0000170c
    1168:	.word	0x0000170c
    116c:	.word	0x0000170c
    1170:	.word	0x00001744
    1174:	.word	0x00001700
    1178:	.word	0x00001700
    117c:	.word	0x00001728
    1180:	.word	0x0000170c
    1184:	.word	0x0000170c
    1188:	.word	0x0000170c
    118c:	.word	0x0000170c
    1190:	.word	0x0000170c
    1194:	.word	0x0000154c
    1198:	.word	0x0000154c
    119c:	.word	0x0000154c
    11a0:	.word	0x0000154c
    11a4:	.word	0x0000154c
    11a8:	.word	0x0000154c
    11ac:	.word	0x000015dc
    11b0:	.word	0x000015dc
    11b4:	.word	0x000015dc
    11b8:	.word	0x000015dc
    11bc:	.word	0x00001f2c
    11c0:	.word	0x00001f2c
    11c4:	.word	0x000015dc
    11c8:	.word	0x000015dc
    11cc:	.word	0x00001f2c
    11d0:	.word	0x00001f2c
    11d4:	.word	0x00001f2c
    11d8:	.word	0x00001f2c
    11dc:	.word	0x00001654
    11e0:	.word	0x00001f2c
    11e4:	.word	0x000015dc
    11e8:	.word	0x00001f2c
    11ec:	.word	0x00001f2c
    11f0:	.word	0x00001f2c
    11f4:	.word	0x00001f2c
    11f8:	.word	0x000015dc
    11fc:	.word	0x000015dc
    1200:	.word	0x00001f2c
    1204:	.word	0x00001f2c
    1208:	.word	0x00001f2c
    120c:	.word	0x00001f2c
    1210:	.word	0x00001654
    1214:	.word	0x00001f2c
    1218:	.word	0x000015dc
    121c:	.word	0x00001f2c
    1220:	.word	0x00001f2c
    1224:	.word	0x00001f2c
    1228:	.word	0x00001f2c
    122c:	.word	0x000015dc
    1230:	.word	0x000015dc
    1234:	.word	0x00001f2c
    1238:	.word	0x00001f2c
    123c:	.word	0x00001f2c
    1240:	.word	0x00001f2c
    1244:	.word	0x00001654
    1248:	.word	0x00001f2c
    124c:	.word	0x000015dc
    1250:	.word	0x00001f2c
    1254:	.word	0x00001f2c
    1258:	.word	0x00001f2c
    125c:	.word	0x00001f2c
    1260:	.word	0x000015dc
    1264:	.word	0x000015dc
    1268:	.word	0x00001f2c
    126c:	.word	0x00001f2c
    1270:	.word	0x00001f2c
    1274:	.word	0x00001f2c
    1278:	.word	0x00001654
    127c:	.word	0x00001f2c
    1280:	.word	0x000015dc
    1284:	.word	0x00001f2c
    1288:	.word	0x00001f2c
    128c:	.word	0x00001760
    1290:	.word	0x00001760
    1294:	.word	0x000015f8
    1298:	.word	0x000015f8
    129c:	.word	0x00001760
    12a0:	.word	0x00001760
    12a4:	.word	0x000017b0
    12a8:	.word	0x000017b0
    12ac:	.word	0x00001688
    12b0:	.word	0x00001760
    12b4:	.word	0x000015f8
    12b8:	.word	0x00001760
    12bc:	.word	0x000017b0
    12c0:	.word	0x00001fa4
    12c4:	.word	0x00001fa4
    12c8:	.word	0x00001fa4
    12cc:	.word	0x00001fa4
    12d0:	.word	0x00001fa4
    12d4:	.word	0x00001fa4
    12d8:	.word	0x00001fa4
    12dc:	.word	0x00001fa4
    12e0:	.word	0x00001fa4
    12e4:	.word	0x00001fa4
    12e8:	.word	0x00001fa4
    12ec:	.word	0x00001fa4
    12f0:	.word	0x00001800
    12f4:	.word	0x00001800
    12f8:	.word	0x00001fa4
    12fc:	.word	0x00001b48
    1300:	.word	0x00001b48
    1304:	.word	0x00001910
    1308:	.word	0x00001910
    130c:	.word	0x00001de8
    1310:	.word	0x0000154c
    1314:	.word	0x000014ac
    1318:	.word	0x000014ac
    131c:	.word	0x000014ac
    1320:	.word	0x000014ac
    1324:	.word	0x000014ac
    1328:	.word	0x0000154c
    132c:	.word	0x00001510
    1330:	.word	0x00001510
    1334:	.word	0x00001510
    1338:	.word	0x00001510
    133c:	.word	0x0000140c
    1340:	.word	0x0000140c
    1344:	.word	0x0000140c
    1348:	.word	0x0000140c
    134c:	.word	0x0000140c
    1350:	.word	0x0000140c
    1354:	.word	0x000013c0
    1358:	.word	0x0000140c
    135c:	.word	0x0000140c
    1360:	.word	0x0000140c
    1364:	.word	0x0000140c
    1368:	.word	0x000013c0
    136c:	.word	0x0000154c
    1370:	.word	0x0000154c
    1374:	.word	0x0000154c
    1378:	.word	0x0000154c
    137c:	.word	0x0000154c
    1380:	.word	0x00001574
    1384:	.word	0x00001574
    1388:	.word	0x00001574
    138c:	.word	0x00001f50
    1390:	.word	0x00001f80
    1394:	.word	0x00001f50
    1398:	.word	0x00001f80
    139c:	.word	0x00001f50
    13a0:	.word	0x00001f80
    13a4:	.word	0x00001f50
    13a8:	.word	0x00001f80
    13ac:	.word	0x00001f80
    13b0:	.word	0x000014a0
    13b4:	.word	0x000014a0
    13b8:	.word	0x00001f80
    13bc:	.word	0x00001574
    13c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    13c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    13c8:	ldrb	r1, [r1, #1]
    13cc:	lsl	r1, r1, #8
    13d0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    13d4:	ldrb	r2, [r2, #2]
    13d8:	orr	r1, r1, r2
    13dc:	add	r0, r0, r1
    13e0:	str	r0, [fp, #-60]	; 0xffffffc4
    13e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    13e8:	ldrb	r0, [r0]
    13ec:	cmp	r0, #119	; 0x77
    13f0:	beq	1408 <find_minlength+0x3e0>
    13f4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    13f8:	add	r0, r0, #1
    13fc:	add	r0, r0, #2
    1400:	str	r0, [fp, #-48]	; 0xffffffd0
    1404:	b	1fb0 <find_minlength+0xf88>
    1408:	b	140c <find_minlength+0x3e4>
    140c:	ldr	r0, [fp, #-8]
    1410:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1414:	ldr	r2, [fp, #-16]
    1418:	ldr	r3, [fp, #-20]	; 0xffffffec
    141c:	ldr	ip, [fp, #8]
    1420:	ldr	lr, [fp, #12]
    1424:	str	ip, [sp]
    1428:	str	lr, [sp, #4]
    142c:	bl	1028 <find_minlength>
    1430:	str	r0, [fp, #-52]	; 0xffffffcc
    1434:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1438:	cmp	r0, #0
    143c:	bge	144c <find_minlength+0x424>
    1440:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1444:	str	r0, [fp, #-4]
    1448:	b	1fb4 <find_minlength+0xf8c>
    144c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1450:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1454:	add	r0, r1, r0
    1458:	str	r0, [fp, #-44]	; 0xffffffd4
    145c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1460:	ldrb	r0, [r0, #1]
    1464:	lsl	r0, r0, #8
    1468:	ldr	r1, [fp, #-48]	; 0xffffffd0
    146c:	ldrb	r1, [r1, #2]
    1470:	orr	r0, r0, r1
    1474:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1478:	add	r0, r1, r0
    147c:	str	r0, [fp, #-48]	; 0xffffffd0
    1480:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1484:	ldrb	r0, [r0]
    1488:	cmp	r0, #119	; 0x77
    148c:	beq	145c <find_minlength+0x434>
    1490:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1494:	add	r0, r0, #3
    1498:	str	r0, [fp, #-48]	; 0xffffffd0
    149c:	b	1fb0 <find_minlength+0xf88>
    14a0:	mvn	r0, #0
    14a4:	str	r0, [fp, #-4]
    14a8:	b	1fb4 <find_minlength+0xf8c>
    14ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    14b0:	cmp	r0, #0
    14b4:	blt	14d4 <find_minlength+0x4ac>
    14b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    14bc:	cmp	r0, #0
    14c0:	bne	14dc <find_minlength+0x4b4>
    14c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    14c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    14cc:	cmp	r0, r1
    14d0:	bge	14dc <find_minlength+0x4b4>
    14d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    14d8:	str	r0, [fp, #-24]	; 0xffffffe8
    14dc:	ldrb	r0, [sp, #63]	; 0x3f
    14e0:	cmp	r0, #119	; 0x77
    14e4:	beq	14f4 <find_minlength+0x4cc>
    14e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    14ec:	str	r0, [fp, #-4]
    14f0:	b	1fb4 <find_minlength+0xf8c>
    14f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    14f8:	add	r0, r0, #3
    14fc:	str	r0, [fp, #-48]	; 0xffffffd0
    1500:	movw	r0, #0
    1504:	str	r0, [fp, #-44]	; 0xffffffd4
    1508:	str	r0, [fp, #-32]	; 0xffffffe0
    150c:	b	1fb0 <find_minlength+0xf88>
    1510:	b	1514 <find_minlength+0x4ec>
    1514:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1518:	ldrb	r0, [r0, #1]
    151c:	lsl	r0, r0, #8
    1520:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1524:	ldrb	r1, [r1, #2]
    1528:	orr	r0, r0, r1
    152c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1530:	add	r0, r1, r0
    1534:	str	r0, [fp, #-48]	; 0xffffffd0
    1538:	ldr	r0, [fp, #-48]	; 0xffffffd0
    153c:	ldrb	r0, [r0]
    1540:	cmp	r0, #119	; 0x77
    1544:	beq	1514 <find_minlength+0x4ec>
    1548:	b	154c <find_minlength+0x524>
    154c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1550:	ldrb	r0, [r0]
    1554:	movw	r1, #0
    1558:	movt	r1, #0
    155c:	add	r0, r1, r0
    1560:	ldrb	r0, [r0]
    1564:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1568:	add	r0, r1, r0
    156c:	str	r0, [fp, #-48]	; 0xffffffd0
    1570:	b	1fb0 <find_minlength+0xf88>
    1574:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1578:	ldrb	r0, [r0]
    157c:	movw	r1, #0
    1580:	movt	r1, #0
    1584:	add	r0, r1, r0
    1588:	ldrb	r0, [r0]
    158c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1590:	add	r0, r1, r0
    1594:	str	r0, [fp, #-48]	; 0xffffffd0
    1598:	ldr	r0, [fp, #-48]	; 0xffffffd0
    159c:	ldrb	r0, [r0, #1]
    15a0:	lsl	r0, r0, #8
    15a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    15a8:	ldrb	r1, [r1, #2]
    15ac:	orr	r0, r0, r1
    15b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    15b4:	add	r0, r1, r0
    15b8:	str	r0, [fp, #-48]	; 0xffffffd0
    15bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    15c0:	ldrb	r0, [r0]
    15c4:	cmp	r0, #119	; 0x77
    15c8:	beq	1598 <find_minlength+0x570>
    15cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    15d0:	add	r0, r0, #3
    15d4:	str	r0, [fp, #-48]	; 0xffffffd0
    15d8:	b	1fb0 <find_minlength+0xf88>
    15dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    15e0:	add	r0, r0, #1
    15e4:	str	r0, [fp, #-44]	; 0xffffffd4
    15e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    15ec:	add	r0, r0, #2
    15f0:	str	r0, [fp, #-48]	; 0xffffffd0
    15f4:	b	1fb0 <find_minlength+0xf88>
    15f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    15fc:	add	r0, r0, #1
    1600:	str	r0, [fp, #-44]	; 0xffffffd4
    1604:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1608:	ldrb	r0, [r0, #1]
    160c:	cmp	r0, #16
    1610:	movw	r0, #1
    1614:	str	r0, [sp, #20]
    1618:	beq	1634 <find_minlength+0x60c>
    161c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1620:	ldrb	r0, [r0, #1]
    1624:	cmp	r0, #15
    1628:	movw	r0, #0
    162c:	moveq	r0, #1
    1630:	str	r0, [sp, #20]
    1634:	ldr	r0, [sp, #20]
    1638:	tst	r0, #1
    163c:	movw	r0, #4
    1640:	moveq	r0, #2
    1644:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1648:	add	r0, r1, r0
    164c:	str	r0, [fp, #-48]	; 0xffffffd0
    1650:	b	1fb0 <find_minlength+0xf88>
    1654:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1658:	ldrb	r0, [r0, #1]
    165c:	lsl	r0, r0, #8
    1660:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1664:	ldrb	r1, [r1, #2]
    1668:	orr	r0, r0, r1
    166c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1670:	add	r0, r1, r0
    1674:	str	r0, [fp, #-44]	; 0xffffffd4
    1678:	ldr	r0, [fp, #-48]	; 0xffffffd0
    167c:	add	r0, r0, #4
    1680:	str	r0, [fp, #-48]	; 0xffffffd0
    1684:	b	1fb0 <find_minlength+0xf88>
    1688:	ldr	r0, [fp, #-48]	; 0xffffffd0
    168c:	ldrb	r0, [r0, #1]
    1690:	lsl	r0, r0, #8
    1694:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1698:	ldrb	r1, [r1, #2]
    169c:	orr	r0, r0, r1
    16a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    16a4:	add	r0, r1, r0
    16a8:	str	r0, [fp, #-44]	; 0xffffffd4
    16ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    16b0:	ldrb	r0, [r0, #3]
    16b4:	cmp	r0, #16
    16b8:	movw	r0, #1
    16bc:	str	r0, [sp, #16]
    16c0:	beq	16dc <find_minlength+0x6b4>
    16c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    16c8:	ldrb	r0, [r0, #3]
    16cc:	cmp	r0, #15
    16d0:	movw	r0, #0
    16d4:	moveq	r0, #1
    16d8:	str	r0, [sp, #16]
    16dc:	ldr	r0, [sp, #16]
    16e0:	tst	r0, #1
    16e4:	movw	r0, #2
    16e8:	moveq	r0, #0
    16ec:	add	r0, r0, #4
    16f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    16f4:	add	r0, r1, r0
    16f8:	str	r0, [fp, #-48]	; 0xffffffd0
    16fc:	b	1fb0 <find_minlength+0xf88>
    1700:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1704:	add	r0, r0, #2
    1708:	str	r0, [fp, #-48]	; 0xffffffd0
    170c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1710:	add	r0, r0, #1
    1714:	str	r0, [fp, #-44]	; 0xffffffd4
    1718:	ldr	r0, [fp, #-48]	; 0xffffffd0
    171c:	add	r0, r0, #1
    1720:	str	r0, [fp, #-48]	; 0xffffffd0
    1724:	b	1fb0 <find_minlength+0xf88>
    1728:	ldr	r0, [fp, #-44]	; 0xffffffd4
    172c:	add	r0, r0, #1
    1730:	str	r0, [fp, #-44]	; 0xffffffd4
    1734:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1738:	add	r0, r0, #1
    173c:	str	r0, [fp, #-48]	; 0xffffffd0
    1740:	b	1fb0 <find_minlength+0xf88>
    1744:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1748:	add	r0, r0, #1
    174c:	str	r0, [fp, #-44]	; 0xffffffd4
    1750:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1754:	add	r0, r0, #1
    1758:	str	r0, [fp, #-48]	; 0xffffffd0
    175c:	b	1fb0 <find_minlength+0xf88>
    1760:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1764:	ldrb	r0, [r0, #1]
    1768:	cmp	r0, #16
    176c:	beq	1780 <find_minlength+0x758>
    1770:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1774:	ldrb	r0, [r0, #1]
    1778:	cmp	r0, #15
    177c:	bne	178c <find_minlength+0x764>
    1780:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1784:	add	r0, r0, #2
    1788:	str	r0, [fp, #-48]	; 0xffffffd0
    178c:	ldrb	r0, [sp, #63]	; 0x3f
    1790:	movw	r1, #0
    1794:	movt	r1, #0
    1798:	add	r0, r1, r0
    179c:	ldrb	r0, [r0]
    17a0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    17a4:	add	r0, r1, r0
    17a8:	str	r0, [fp, #-48]	; 0xffffffd0
    17ac:	b	1fb0 <find_minlength+0xf88>
    17b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    17b4:	ldrb	r0, [r0, #3]
    17b8:	cmp	r0, #16
    17bc:	beq	17d0 <find_minlength+0x7a8>
    17c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    17c4:	ldrb	r0, [r0, #3]
    17c8:	cmp	r0, #15
    17cc:	bne	17dc <find_minlength+0x7b4>
    17d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    17d4:	add	r0, r0, #2
    17d8:	str	r0, [fp, #-48]	; 0xffffffd0
    17dc:	ldrb	r0, [sp, #63]	; 0x3f
    17e0:	movw	r1, #0
    17e4:	movt	r1, #0
    17e8:	add	r0, r1, r0
    17ec:	ldrb	r0, [r0]
    17f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    17f4:	add	r0, r1, r0
    17f8:	str	r0, [fp, #-48]	; 0xffffffd0
    17fc:	b	1fb0 <find_minlength+0xf88>
    1800:	movw	r0, #0
    1804:	movt	r0, #0
    1808:	ldrb	r0, [r0, #110]	; 0x6e
    180c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1810:	add	r0, r1, r0
    1814:	str	r0, [fp, #-48]	; 0xffffffd0
    1818:	ldr	r0, [fp, #-48]	; 0xffffffd0
    181c:	ldrb	r0, [r0]
    1820:	sub	r1, r0, #98	; 0x62
    1824:	cmp	r1, #2
    1828:	str	r0, [sp, #12]
    182c:	bcc	18bc <find_minlength+0x894>
    1830:	b	1834 <find_minlength+0x80c>
    1834:	ldr	r0, [sp, #12]
    1838:	sub	r1, r0, #100	; 0x64
    183c:	cmp	r1, #2
    1840:	bcc	18b0 <find_minlength+0x888>
    1844:	b	1848 <find_minlength+0x820>
    1848:	ldr	r0, [sp, #12]
    184c:	sub	r1, r0, #102	; 0x66
    1850:	cmp	r1, #2
    1854:	bcc	18bc <find_minlength+0x894>
    1858:	b	185c <find_minlength+0x834>
    185c:	ldr	r0, [sp, #12]
    1860:	sub	r1, r0, #104	; 0x68
    1864:	cmp	r1, #2
    1868:	bcc	18cc <find_minlength+0x8a4>
    186c:	b	1870 <find_minlength+0x848>
    1870:	ldr	r0, [sp, #12]
    1874:	cmp	r0, #106	; 0x6a
    1878:	beq	18bc <find_minlength+0x894>
    187c:	b	1880 <find_minlength+0x858>
    1880:	ldr	r0, [sp, #12]
    1884:	cmp	r0, #107	; 0x6b
    1888:	beq	18b0 <find_minlength+0x888>
    188c:	b	1890 <find_minlength+0x868>
    1890:	ldr	r0, [sp, #12]
    1894:	cmp	r0, #108	; 0x6c
    1898:	beq	18bc <find_minlength+0x894>
    189c:	b	18a0 <find_minlength+0x878>
    18a0:	ldr	r0, [sp, #12]
    18a4:	cmp	r0, #109	; 0x6d
    18a8:	beq	18cc <find_minlength+0x8a4>
    18ac:	b	1900 <find_minlength+0x8d8>
    18b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    18b4:	add	r0, r0, #1
    18b8:	str	r0, [fp, #-44]	; 0xffffffd4
    18bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18c0:	add	r0, r0, #1
    18c4:	str	r0, [fp, #-48]	; 0xffffffd0
    18c8:	b	190c <find_minlength+0x8e4>
    18cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18d0:	ldrb	r0, [r0, #1]
    18d4:	lsl	r0, r0, #8
    18d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    18dc:	ldrb	r1, [r1, #2]
    18e0:	orr	r0, r0, r1
    18e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    18e8:	add	r0, r1, r0
    18ec:	str	r0, [fp, #-44]	; 0xffffffd4
    18f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18f4:	add	r0, r0, #5
    18f8:	str	r0, [fp, #-48]	; 0xffffffd0
    18fc:	b	190c <find_minlength+0x8e4>
    1900:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1904:	add	r0, r0, #1
    1908:	str	r0, [fp, #-44]	; 0xffffffd4
    190c:	b	1fb0 <find_minlength+0xf88>
    1910:	ldr	r0, [fp, #-20]	; 0xffffffec
    1914:	and	r0, r0, #33554432	; 0x2000000
    1918:	cmp	r0, #0
    191c:	bne	1b30 <find_minlength+0xb08>
    1920:	ldr	r0, [pc, #1688]	; 1fc0 <find_minlength+0xf98>
    1924:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1928:	ldrb	r1, [r1, #3]
    192c:	lsl	r1, r1, #8
    1930:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1934:	ldrb	r2, [r2, #4]
    1938:	orr	r1, r1, r2
    193c:	str	r1, [sp, #56]	; 0x38
    1940:	ldr	r1, [fp, #-8]
    1944:	ldr	r2, [fp, #-8]
    1948:	ldrh	r2, [r2, #34]	; 0x22
    194c:	add	r1, r1, r2
    1950:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1954:	ldrb	r2, [r2, #1]
    1958:	lsl	r2, r2, #8
    195c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1960:	ldrb	r3, [r3, #2]
    1964:	orr	r2, r2, r3
    1968:	ldr	r3, [fp, #-8]
    196c:	ldrh	r3, [r3, #36]	; 0x24
    1970:	mul	r2, r2, r3
    1974:	add	r1, r1, r2
    1978:	str	r1, [sp, #52]	; 0x34
    197c:	str	r0, [fp, #-52]	; 0xffffffcc
    1980:	ldr	r0, [sp, #56]	; 0x38
    1984:	mvn	r1, #0
    1988:	add	r1, r0, r1
    198c:	str	r1, [sp, #56]	; 0x38
    1990:	cmp	r0, #0
    1994:	ble	1b2c <find_minlength+0xb04>
    1998:	ldr	r0, [fp, #-16]
    199c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    19a0:	ldr	r2, [sp, #52]	; 0x34
    19a4:	ldrb	r2, [r2]
    19a8:	lsl	r2, r2, #8
    19ac:	ldr	r3, [sp, #52]	; 0x34
    19b0:	ldrb	r3, [r3, #1]
    19b4:	orr	r2, r2, r3
    19b8:	bl	0 <coda__pcre_find_bracket>
    19bc:	str	r0, [fp, #-60]	; 0xffffffc4
    19c0:	str	r0, [sp, #64]	; 0x40
    19c4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    19c8:	movw	r1, #0
    19cc:	cmp	r0, r1
    19d0:	bne	19e0 <find_minlength+0x9b8>
    19d4:	mvn	r0, #1
    19d8:	str	r0, [fp, #-4]
    19dc:	b	1fb4 <find_minlength+0xf8c>
    19e0:	b	19e4 <find_minlength+0x9bc>
    19e4:	ldr	r0, [sp, #64]	; 0x40
    19e8:	ldrb	r0, [r0, #1]
    19ec:	lsl	r0, r0, #8
    19f0:	ldr	r1, [sp, #64]	; 0x40
    19f4:	ldrb	r1, [r1, #2]
    19f8:	orr	r0, r0, r1
    19fc:	ldr	r1, [sp, #64]	; 0x40
    1a00:	add	r0, r1, r0
    1a04:	str	r0, [sp, #64]	; 0x40
    1a08:	ldr	r0, [sp, #64]	; 0x40
    1a0c:	ldrb	r0, [r0]
    1a10:	cmp	r0, #119	; 0x77
    1a14:	beq	19e4 <find_minlength+0x9bc>
    1a18:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1a1c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1a20:	cmp	r0, r1
    1a24:	bls	1a4c <find_minlength+0xa24>
    1a28:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1a2c:	ldr	r1, [sp, #64]	; 0x40
    1a30:	cmp	r0, r1
    1a34:	bcs	1a4c <find_minlength+0xa24>
    1a38:	movw	r0, #0
    1a3c:	str	r0, [fp, #-52]	; 0xffffffcc
    1a40:	movw	r0, #1
    1a44:	str	r0, [fp, #-32]	; 0xffffffe0
    1a48:	b	1b2c <find_minlength+0xb04>
    1a4c:	ldr	r0, [fp, #8]
    1a50:	str	r0, [sp, #48]	; 0x30
    1a54:	ldr	r0, [fp, #8]
    1a58:	str	r0, [sp, #48]	; 0x30
    1a5c:	ldr	r0, [sp, #48]	; 0x30
    1a60:	movw	r1, #0
    1a64:	cmp	r0, r1
    1a68:	beq	1a98 <find_minlength+0xa70>
    1a6c:	ldr	r0, [sp, #48]	; 0x30
    1a70:	ldr	r0, [r0, #4]
    1a74:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1a78:	cmp	r0, r1
    1a7c:	bne	1a84 <find_minlength+0xa5c>
    1a80:	b	1a98 <find_minlength+0xa70>
    1a84:	b	1a88 <find_minlength+0xa60>
    1a88:	ldr	r0, [sp, #48]	; 0x30
    1a8c:	ldr	r0, [r0]
    1a90:	str	r0, [sp, #48]	; 0x30
    1a94:	b	1a5c <find_minlength+0xa34>
    1a98:	ldr	r0, [sp, #48]	; 0x30
    1a9c:	movw	r1, #0
    1aa0:	cmp	r0, r1
    1aa4:	beq	1abc <find_minlength+0xa94>
    1aa8:	movw	r0, #0
    1aac:	str	r0, [fp, #-52]	; 0xffffffcc
    1ab0:	movw	r0, #1
    1ab4:	str	r0, [fp, #-32]	; 0xffffffe0
    1ab8:	b	1b2c <find_minlength+0xb04>
    1abc:	ldr	r0, [fp, #8]
    1ac0:	str	r0, [fp, #-40]	; 0xffffffd8
    1ac4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1ac8:	str	r0, [fp, #-36]	; 0xffffffdc
    1acc:	ldr	r0, [fp, #-8]
    1ad0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1ad4:	ldr	r2, [fp, #-16]
    1ad8:	ldr	r3, [fp, #-20]	; 0xffffffec
    1adc:	ldr	ip, [fp, #12]
    1ae0:	sub	lr, fp, #40	; 0x28
    1ae4:	str	lr, [sp]
    1ae8:	str	ip, [sp, #4]
    1aec:	bl	1028 <find_minlength>
    1af0:	str	r0, [sp, #44]	; 0x2c
    1af4:	ldr	r0, [sp, #44]	; 0x2c
    1af8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1afc:	cmp	r0, r1
    1b00:	bge	1b0c <find_minlength+0xae4>
    1b04:	ldr	r0, [sp, #44]	; 0x2c
    1b08:	str	r0, [fp, #-52]	; 0xffffffcc
    1b0c:	b	1b10 <find_minlength+0xae8>
    1b10:	b	1b14 <find_minlength+0xaec>
    1b14:	ldr	r0, [fp, #-8]
    1b18:	ldrh	r0, [r0, #36]	; 0x24
    1b1c:	ldr	r1, [sp, #52]	; 0x34
    1b20:	add	r0, r1, r0
    1b24:	str	r0, [sp, #52]	; 0x34
    1b28:	b	1980 <find_minlength+0x958>
    1b2c:	b	1b38 <find_minlength+0xb10>
    1b30:	movw	r0, #0
    1b34:	str	r0, [fp, #-52]	; 0xffffffcc
    1b38:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1b3c:	add	r0, r0, #5
    1b40:	str	r0, [fp, #-48]	; 0xffffffd0
    1b44:	b	1cd0 <find_minlength+0xca8>
    1b48:	ldr	r0, [fp, #-20]	; 0xffffffec
    1b4c:	and	r0, r0, #33554432	; 0x2000000
    1b50:	cmp	r0, #0
    1b54:	bne	1cbc <find_minlength+0xc94>
    1b58:	ldr	r0, [fp, #-16]
    1b5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1b60:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1b64:	ldrb	r2, [r2, #1]
    1b68:	lsl	r2, r2, #8
    1b6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1b70:	ldrb	r3, [r3, #2]
    1b74:	orr	r2, r2, r3
    1b78:	bl	0 <coda__pcre_find_bracket>
    1b7c:	str	r0, [fp, #-60]	; 0xffffffc4
    1b80:	str	r0, [sp, #64]	; 0x40
    1b84:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1b88:	movw	r1, #0
    1b8c:	cmp	r0, r1
    1b90:	bne	1ba0 <find_minlength+0xb78>
    1b94:	mvn	r0, #1
    1b98:	str	r0, [fp, #-4]
    1b9c:	b	1fb4 <find_minlength+0xf8c>
    1ba0:	b	1ba4 <find_minlength+0xb7c>
    1ba4:	ldr	r0, [sp, #64]	; 0x40
    1ba8:	ldrb	r0, [r0, #1]
    1bac:	lsl	r0, r0, #8
    1bb0:	ldr	r1, [sp, #64]	; 0x40
    1bb4:	ldrb	r1, [r1, #2]
    1bb8:	orr	r0, r0, r1
    1bbc:	ldr	r1, [sp, #64]	; 0x40
    1bc0:	add	r0, r1, r0
    1bc4:	str	r0, [sp, #64]	; 0x40
    1bc8:	ldr	r0, [sp, #64]	; 0x40
    1bcc:	ldrb	r0, [r0]
    1bd0:	cmp	r0, #119	; 0x77
    1bd4:	beq	1ba4 <find_minlength+0xb7c>
    1bd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1bdc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1be0:	cmp	r0, r1
    1be4:	bls	1c0c <find_minlength+0xbe4>
    1be8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1bec:	ldr	r1, [sp, #64]	; 0x40
    1bf0:	cmp	r0, r1
    1bf4:	bcs	1c0c <find_minlength+0xbe4>
    1bf8:	movw	r0, #0
    1bfc:	str	r0, [fp, #-52]	; 0xffffffcc
    1c00:	movw	r0, #1
    1c04:	str	r0, [fp, #-32]	; 0xffffffe0
    1c08:	b	1cb8 <find_minlength+0xc90>
    1c0c:	ldr	r0, [fp, #8]
    1c10:	str	r0, [sp, #40]	; 0x28
    1c14:	ldr	r0, [fp, #8]
    1c18:	str	r0, [sp, #40]	; 0x28
    1c1c:	ldr	r0, [sp, #40]	; 0x28
    1c20:	movw	r1, #0
    1c24:	cmp	r0, r1
    1c28:	beq	1c58 <find_minlength+0xc30>
    1c2c:	ldr	r0, [sp, #40]	; 0x28
    1c30:	ldr	r0, [r0, #4]
    1c34:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1c38:	cmp	r0, r1
    1c3c:	bne	1c44 <find_minlength+0xc1c>
    1c40:	b	1c58 <find_minlength+0xc30>
    1c44:	b	1c48 <find_minlength+0xc20>
    1c48:	ldr	r0, [sp, #40]	; 0x28
    1c4c:	ldr	r0, [r0]
    1c50:	str	r0, [sp, #40]	; 0x28
    1c54:	b	1c1c <find_minlength+0xbf4>
    1c58:	ldr	r0, [sp, #40]	; 0x28
    1c5c:	movw	r1, #0
    1c60:	cmp	r0, r1
    1c64:	beq	1c7c <find_minlength+0xc54>
    1c68:	movw	r0, #0
    1c6c:	str	r0, [fp, #-52]	; 0xffffffcc
    1c70:	movw	r0, #1
    1c74:	str	r0, [fp, #-32]	; 0xffffffe0
    1c78:	b	1cb4 <find_minlength+0xc8c>
    1c7c:	ldr	r0, [fp, #8]
    1c80:	str	r0, [fp, #-40]	; 0xffffffd8
    1c84:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1c88:	str	r0, [fp, #-36]	; 0xffffffdc
    1c8c:	ldr	r0, [fp, #-8]
    1c90:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1c94:	ldr	r2, [fp, #-16]
    1c98:	ldr	r3, [fp, #-20]	; 0xffffffec
    1c9c:	ldr	ip, [fp, #12]
    1ca0:	sub	lr, fp, #40	; 0x28
    1ca4:	str	lr, [sp]
    1ca8:	str	ip, [sp, #4]
    1cac:	bl	1028 <find_minlength>
    1cb0:	str	r0, [fp, #-52]	; 0xffffffcc
    1cb4:	b	1cb8 <find_minlength+0xc90>
    1cb8:	b	1cc4 <find_minlength+0xc9c>
    1cbc:	movw	r0, #0
    1cc0:	str	r0, [fp, #-52]	; 0xffffffcc
    1cc4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1cc8:	add	r0, r0, #3
    1ccc:	str	r0, [fp, #-48]	; 0xffffffd0
    1cd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1cd4:	ldrb	r0, [r0]
    1cd8:	sub	r1, r0, #98	; 0x62
    1cdc:	cmp	r1, #2
    1ce0:	str	r0, [sp, #8]
    1ce4:	bcc	1d68 <find_minlength+0xd40>
    1ce8:	b	1cec <find_minlength+0xcc4>
    1cec:	ldr	r0, [sp, #8]
    1cf0:	sub	r1, r0, #100	; 0x64
    1cf4:	cmp	r1, #2
    1cf8:	bcc	1d80 <find_minlength+0xd58>
    1cfc:	b	1d00 <find_minlength+0xcd8>
    1d00:	ldr	r0, [sp, #8]
    1d04:	sub	r1, r0, #102	; 0x66
    1d08:	cmp	r1, #2
    1d0c:	bcc	1d68 <find_minlength+0xd40>
    1d10:	b	1d14 <find_minlength+0xcec>
    1d14:	ldr	r0, [sp, #8]
    1d18:	sub	r1, r0, #104	; 0x68
    1d1c:	cmp	r1, #2
    1d20:	bcc	1d98 <find_minlength+0xd70>
    1d24:	b	1d28 <find_minlength+0xd00>
    1d28:	ldr	r0, [sp, #8]
    1d2c:	cmp	r0, #106	; 0x6a
    1d30:	beq	1d68 <find_minlength+0xd40>
    1d34:	b	1d38 <find_minlength+0xd10>
    1d38:	ldr	r0, [sp, #8]
    1d3c:	cmp	r0, #107	; 0x6b
    1d40:	beq	1d80 <find_minlength+0xd58>
    1d44:	b	1d48 <find_minlength+0xd20>
    1d48:	ldr	r0, [sp, #8]
    1d4c:	cmp	r0, #108	; 0x6c
    1d50:	beq	1d68 <find_minlength+0xd40>
    1d54:	b	1d58 <find_minlength+0xd30>
    1d58:	ldr	r0, [sp, #8]
    1d5c:	cmp	r0, #109	; 0x6d
    1d60:	beq	1d98 <find_minlength+0xd70>
    1d64:	b	1dc4 <find_minlength+0xd9c>
    1d68:	movw	r0, #0
    1d6c:	str	r0, [fp, #-56]	; 0xffffffc8
    1d70:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1d74:	add	r0, r0, #1
    1d78:	str	r0, [fp, #-48]	; 0xffffffd0
    1d7c:	b	1dcc <find_minlength+0xda4>
    1d80:	movw	r0, #1
    1d84:	str	r0, [fp, #-56]	; 0xffffffc8
    1d88:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1d8c:	add	r0, r0, #1
    1d90:	str	r0, [fp, #-48]	; 0xffffffd0
    1d94:	b	1dcc <find_minlength+0xda4>
    1d98:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1d9c:	ldrb	r0, [r0, #1]
    1da0:	lsl	r0, r0, #8
    1da4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1da8:	ldrb	r1, [r1, #2]
    1dac:	orr	r0, r0, r1
    1db0:	str	r0, [fp, #-56]	; 0xffffffc8
    1db4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1db8:	add	r0, r0, #5
    1dbc:	str	r0, [fp, #-48]	; 0xffffffd0
    1dc0:	b	1dcc <find_minlength+0xda4>
    1dc4:	movw	r0, #1
    1dc8:	str	r0, [fp, #-56]	; 0xffffffc8
    1dcc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1dd0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1dd4:	mul	r0, r0, r1
    1dd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1ddc:	add	r0, r1, r0
    1de0:	str	r0, [fp, #-44]	; 0xffffffd4
    1de4:	b	1fb0 <find_minlength+0xf88>
    1de8:	ldr	r0, [fp, #-16]
    1dec:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1df0:	ldrb	r1, [r1, #1]
    1df4:	lsl	r1, r1, #8
    1df8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1dfc:	ldrb	r2, [r2, #2]
    1e00:	orr	r1, r1, r2
    1e04:	add	r0, r0, r1
    1e08:	str	r0, [sp, #64]	; 0x40
    1e0c:	str	r0, [fp, #-60]	; 0xffffffc4
    1e10:	ldr	r0, [sp, #64]	; 0x40
    1e14:	ldrb	r0, [r0, #1]
    1e18:	lsl	r0, r0, #8
    1e1c:	ldr	r1, [sp, #64]	; 0x40
    1e20:	ldrb	r1, [r1, #2]
    1e24:	orr	r0, r0, r1
    1e28:	ldr	r1, [sp, #64]	; 0x40
    1e2c:	add	r0, r1, r0
    1e30:	str	r0, [sp, #64]	; 0x40
    1e34:	ldr	r0, [sp, #64]	; 0x40
    1e38:	ldrb	r0, [r0]
    1e3c:	cmp	r0, #119	; 0x77
    1e40:	beq	1e10 <find_minlength+0xde8>
    1e44:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1e48:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1e4c:	cmp	r0, r1
    1e50:	bls	1e70 <find_minlength+0xe48>
    1e54:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1e58:	ldr	r1, [sp, #64]	; 0x40
    1e5c:	cmp	r0, r1
    1e60:	bcs	1e70 <find_minlength+0xe48>
    1e64:	movw	r0, #1
    1e68:	str	r0, [fp, #-32]	; 0xffffffe0
    1e6c:	b	1f1c <find_minlength+0xef4>
    1e70:	ldr	r0, [fp, #8]
    1e74:	str	r0, [sp, #36]	; 0x24
    1e78:	ldr	r0, [fp, #8]
    1e7c:	str	r0, [sp, #36]	; 0x24
    1e80:	ldr	r0, [sp, #36]	; 0x24
    1e84:	movw	r1, #0
    1e88:	cmp	r0, r1
    1e8c:	beq	1ebc <find_minlength+0xe94>
    1e90:	ldr	r0, [sp, #36]	; 0x24
    1e94:	ldr	r0, [r0, #4]
    1e98:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1e9c:	cmp	r0, r1
    1ea0:	bne	1ea8 <find_minlength+0xe80>
    1ea4:	b	1ebc <find_minlength+0xe94>
    1ea8:	b	1eac <find_minlength+0xe84>
    1eac:	ldr	r0, [sp, #36]	; 0x24
    1eb0:	ldr	r0, [r0]
    1eb4:	str	r0, [sp, #36]	; 0x24
    1eb8:	b	1e80 <find_minlength+0xe58>
    1ebc:	ldr	r0, [sp, #36]	; 0x24
    1ec0:	movw	r1, #0
    1ec4:	cmp	r0, r1
    1ec8:	beq	1ed8 <find_minlength+0xeb0>
    1ecc:	movw	r0, #1
    1ed0:	str	r0, [fp, #-32]	; 0xffffffe0
    1ed4:	b	1f18 <find_minlength+0xef0>
    1ed8:	ldr	r0, [fp, #8]
    1edc:	str	r0, [fp, #-40]	; 0xffffffd8
    1ee0:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1ee4:	str	r0, [fp, #-36]	; 0xffffffdc
    1ee8:	ldr	r0, [fp, #-8]
    1eec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1ef0:	ldr	r2, [fp, #-16]
    1ef4:	ldr	r3, [fp, #-20]	; 0xffffffec
    1ef8:	ldr	ip, [fp, #12]
    1efc:	sub	lr, fp, #40	; 0x28
    1f00:	str	lr, [sp]
    1f04:	str	ip, [sp, #4]
    1f08:	bl	1028 <find_minlength>
    1f0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1f10:	add	r0, r1, r0
    1f14:	str	r0, [fp, #-44]	; 0xffffffd4
    1f18:	b	1f1c <find_minlength+0xef4>
    1f1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f20:	add	r0, r0, #3
    1f24:	str	r0, [fp, #-48]	; 0xffffffd0
    1f28:	b	1fb0 <find_minlength+0xf88>
    1f2c:	ldrb	r0, [sp, #63]	; 0x3f
    1f30:	movw	r1, #0
    1f34:	movt	r1, #0
    1f38:	add	r0, r1, r0
    1f3c:	ldrb	r0, [r0]
    1f40:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f44:	add	r0, r1, r0
    1f48:	str	r0, [fp, #-48]	; 0xffffffd0
    1f4c:	b	1fb0 <find_minlength+0xf88>
    1f50:	ldrb	r0, [sp, #63]	; 0x3f
    1f54:	movw	r1, #0
    1f58:	movt	r1, #0
    1f5c:	add	r0, r1, r0
    1f60:	ldrb	r0, [r0]
    1f64:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f68:	ldrb	r1, [r1, #1]
    1f6c:	add	r0, r0, r1
    1f70:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f74:	add	r0, r1, r0
    1f78:	str	r0, [fp, #-48]	; 0xffffffd0
    1f7c:	b	1fb0 <find_minlength+0xf88>
    1f80:	ldrb	r0, [sp, #63]	; 0x3f
    1f84:	movw	r1, #0
    1f88:	movt	r1, #0
    1f8c:	add	r0, r1, r0
    1f90:	ldrb	r0, [r0]
    1f94:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f98:	add	r0, r1, r0
    1f9c:	str	r0, [fp, #-48]	; 0xffffffd0
    1fa0:	b	1fb0 <find_minlength+0xf88>
    1fa4:	mvn	r0, #2
    1fa8:	str	r0, [fp, #-4]
    1fac:	b	1fb4 <find_minlength+0xf8c>
    1fb0:	b	1108 <find_minlength+0xe0>
    1fb4:	ldr	r0, [fp, #-4]
    1fb8:	mov	sp, fp
    1fbc:	pop	{fp, pc}
    1fc0:	.word	0x7fffffff

00001fc4 <coda_pcre_free_study>:
    1fc4:	push	{fp, lr}
    1fc8:	mov	fp, sp
    1fcc:	sub	sp, sp, #8
    1fd0:	str	r0, [sp, #4]
    1fd4:	ldr	r0, [sp, #4]
    1fd8:	movw	r1, #0
    1fdc:	cmp	r0, r1
    1fe0:	bne	1fe8 <coda_pcre_free_study+0x24>
    1fe4:	b	2008 <coda_pcre_free_study+0x44>
    1fe8:	movw	r0, #0
    1fec:	movt	r0, #0
    1ff0:	ldr	r0, [r0]
    1ff4:	ldr	r1, [sp, #4]
    1ff8:	str	r0, [sp]
    1ffc:	mov	r0, r1
    2000:	ldr	r1, [sp]
    2004:	blx	r1
    2008:	mov	sp, fp
    200c:	pop	{fp, pc}

00002010 <set_table_bit>:
    2010:	sub	sp, sp, #24
    2014:	ldr	ip, [sp, #24]
    2018:	str	r0, [sp, #20]
    201c:	str	r1, [sp, #16]
    2020:	str	r2, [sp, #12]
    2024:	str	r3, [sp, #8]
    2028:	ldr	r0, [sp, #16]
    202c:	ldrb	r0, [r0]
    2030:	str	r0, [sp, #4]
    2034:	ldr	r0, [sp, #4]
    2038:	and	r1, r0, #7
    203c:	mov	r2, #1
    2040:	lsl	r1, r2, r1
    2044:	ldr	r2, [sp, #20]
    2048:	lsr	r0, r0, #3
    204c:	add	r0, r2, r0
    2050:	ldrb	r2, [r0]
    2054:	orr	r1, r2, r1
    2058:	strb	r1, [r0]
    205c:	ldr	r0, [sp, #12]
    2060:	cmp	r0, #0
    2064:	str	ip, [sp]
    2068:	beq	20dc <set_table_bit+0xcc>
    206c:	ldr	r0, [sp, #8]
    2070:	ldr	r0, [r0, #12]
    2074:	ldr	r1, [sp, #4]
    2078:	add	r0, r0, r1
    207c:	ldrb	r0, [r0]
    2080:	and	r0, r0, #2
    2084:	cmp	r0, #0
    2088:	beq	20dc <set_table_bit+0xcc>
    208c:	ldr	r0, [sp, #8]
    2090:	ldr	r0, [r0, #4]
    2094:	ldr	r1, [sp, #4]
    2098:	add	r0, r0, r1
    209c:	ldrb	r0, [r0]
    20a0:	and	r0, r0, #7
    20a4:	movw	r1, #1
    20a8:	lsl	r0, r1, r0
    20ac:	ldr	r1, [sp, #20]
    20b0:	ldr	r2, [sp, #8]
    20b4:	ldr	r2, [r2, #4]
    20b8:	ldr	r3, [sp, #4]
    20bc:	add	r2, r2, r3
    20c0:	ldrb	r2, [r2]
    20c4:	movw	r3, #8
    20c8:	sdiv	r2, r2, r3
    20cc:	add	r1, r1, r2
    20d0:	ldrb	r2, [r1]
    20d4:	orr	r0, r2, r0
    20d8:	strb	r0, [r1]
    20dc:	ldr	r0, [sp, #16]
    20e0:	add	r0, r0, #1
    20e4:	add	sp, sp, #24
    20e8:	bx	lr

000020ec <set_nottype_bits>:
    20ec:	sub	sp, sp, #20
    20f0:	str	r0, [sp, #16]
    20f4:	str	r1, [sp, #12]
    20f8:	str	r2, [sp, #8]
    20fc:	str	r3, [sp, #4]
    2100:	movw	r0, #0
    2104:	str	r0, [sp]
    2108:	ldr	r0, [sp]
    210c:	ldr	r1, [sp, #8]
    2110:	cmp	r0, r1
    2114:	bcs	2164 <set_nottype_bits+0x78>
    2118:	ldr	r0, [sp, #4]
    211c:	ldr	r0, [r0, #8]
    2120:	ldr	r1, [sp]
    2124:	ldr	r2, [sp, #12]
    2128:	add	r1, r1, r2
    212c:	add	r0, r0, r1
    2130:	ldrb	r0, [r0]
    2134:	mvn	r1, #0
    2138:	eor	r0, r0, r1
    213c:	ldr	r1, [sp, #16]
    2140:	ldr	r2, [sp]
    2144:	add	r1, r1, r2
    2148:	ldrb	r2, [r1]
    214c:	orr	r0, r2, r0
    2150:	strb	r0, [r1]
    2154:	ldr	r0, [sp]
    2158:	add	r0, r0, #1
    215c:	str	r0, [sp]
    2160:	b	2108 <set_nottype_bits+0x1c>
    2164:	add	sp, sp, #20
    2168:	bx	lr

0000216c <set_type_bits>:
    216c:	sub	sp, sp, #20
    2170:	str	r0, [sp, #16]
    2174:	str	r1, [sp, #12]
    2178:	str	r2, [sp, #8]
    217c:	str	r3, [sp, #4]
    2180:	movw	r0, #0
    2184:	str	r0, [sp]
    2188:	ldr	r0, [sp]
    218c:	ldr	r1, [sp, #8]
    2190:	cmp	r0, r1
    2194:	bcs	21dc <set_type_bits+0x70>
    2198:	ldr	r0, [sp, #4]
    219c:	ldr	r0, [r0, #8]
    21a0:	ldr	r1, [sp]
    21a4:	ldr	r2, [sp, #12]
    21a8:	add	r1, r1, r2
    21ac:	add	r0, r0, r1
    21b0:	ldrb	r0, [r0]
    21b4:	ldr	r1, [sp, #16]
    21b8:	ldr	r2, [sp]
    21bc:	add	r1, r1, r2
    21c0:	ldrb	r2, [r1]
    21c4:	orr	r0, r2, r0
    21c8:	strb	r0, [r1]
    21cc:	ldr	r0, [sp]
    21d0:	add	r0, r0, #1
    21d4:	str	r0, [sp]
    21d8:	b	2188 <set_type_bits+0x1c>
    21dc:	add	sp, sp, #20
    21e0:	bx	lr
