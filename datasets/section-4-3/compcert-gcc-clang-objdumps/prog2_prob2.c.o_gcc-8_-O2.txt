
../compcert-repos/prog2/CMakeFiles/MT1E1-1.2.dir/Extras/Miniteste1-Exemplo1/2/prob2.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <analisarFicheiro>:
   0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4:	mov	r4, #0
   8:	strd	r6, [sp, #8]
   c:	movw	r7, #0
  10:	movt	r7, #0
  14:	strd	r8, [sp, #16]
  18:	mov	r8, r0
  1c:	mov	r0, #104	; 0x68
  20:	strd	sl, [sp, #24]
  24:	mov	sl, #104	; 0x68
  28:	str	lr, [sp, #32]
  2c:	sub	sp, sp, #68	; 0x44
  30:	str	r1, [sp, #4]
  34:	bl	0 <malloc>
  38:	mov	r6, r0
  3c:	add	r5, r4, #1
  40:	add	r2, sp, #12
  44:	mov	r1, r7
  48:	mov	r0, r8
  4c:	bl	0 <__isoc99_fscanf>
  50:	cmn	r0, #1
  54:	beq	d8 <analisarFicheiro+0xd8>
  58:	mov	fp, r6
  5c:	mov	r9, #0
  60:	b	7c <analisarFicheiro+0x7c>
  64:	cmp	r4, r9
  68:	add	r9, r9, #1
  6c:	beq	a0 <analisarFicheiro+0xa0>
  70:	cmp	r9, r5
  74:	add	fp, fp, #104	; 0x68
  78:	beq	40 <analisarFicheiro+0x40>
  7c:	mov	r1, fp
  80:	add	r0, sp, #12
  84:	bl	0 <strcmp>
  88:	cmp	r0, #0
  8c:	bne	64 <analisarFicheiro+0x64>
  90:	ldr	r3, [fp, #100]	; 0x64
  94:	add	r3, r3, #1
  98:	str	r3, [fp, #100]	; 0x64
  9c:	b	3c <analisarFicheiro+0x3c>
  a0:	mov	r4, r5
  a4:	mul	r5, sl, r5
  a8:	mov	r0, r6
  ac:	mov	r1, r5
  b0:	bl	0 <realloc>
  b4:	sub	r3, r5, #104	; 0x68
  b8:	mov	r6, r0
  bc:	add	r3, r0, r3
  c0:	add	r1, sp, #12
  c4:	mov	r0, r3
  c8:	bl	0 <strcpy>
  cc:	mov	r2, #1
  d0:	str	r2, [r0, #100]	; 0x64
  d4:	b	3c <analisarFicheiro+0x3c>
  d8:	ldr	r3, [sp, #4]
  dc:	mov	r0, r6
  e0:	str	r4, [r3]
  e4:	add	sp, sp, #68	; 0x44
  e8:	ldrd	r4, [sp]
  ec:	ldrd	r6, [sp, #8]
  f0:	ldrd	r8, [sp, #16]
  f4:	ldrd	sl, [sp, #24]
  f8:	add	sp, sp, #32
  fc:	pop	{pc}		; (ldr pc, [sp], #4)

00000100 <gerarRelatorio>:
 100:	mov	r3, r0
 104:	strd	r4, [sp, #-24]!	; 0xffffffe8
 108:	mov	r4, r1
 10c:	mov	r1, #1
 110:	strd	r6, [sp, #8]
 114:	mov	r7, r0
 118:	movw	r0, #0
 11c:	movt	r0, #0
 120:	str	r8, [sp, #16]
 124:	mov	r8, r2
 128:	mov	r2, #53	; 0x35
 12c:	str	lr, [sp, #20]
 130:	sub	sp, sp, #8
 134:	bl	0 <fwrite>
 138:	cmp	r8, #0
 13c:	ble	178 <gerarRelatorio+0x78>
 140:	movw	r6, #0
 144:	movt	r6, #0
 148:	mov	r5, #0
 14c:	ldr	ip, [r4, #100]	; 0x64
 150:	add	r5, r5, #1
 154:	mov	r3, r4
 158:	mov	r2, r5
 15c:	mov	r1, r6
 160:	mov	r0, r7
 164:	add	r4, r4, #104	; 0x68
 168:	str	ip, [sp]
 16c:	bl	0 <fprintf>
 170:	cmp	r5, r8
 174:	bne	14c <gerarRelatorio+0x4c>
 178:	add	sp, sp, #8
 17c:	ldrd	r4, [sp]
 180:	ldrd	r6, [sp, #8]
 184:	ldr	r8, [sp, #16]
 188:	add	sp, sp, #20
 18c:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .text.startup:

00000000 <main>:
   0:	movw	r0, #0
   4:	movt	r0, #0
   8:	strd	r4, [sp, #-16]!
   c:	str	r6, [sp, #8]
  10:	str	lr, [sp, #12]
  14:	sub	sp, sp, #112	; 0x70
  18:	bl	0 <printf>
  1c:	add	r1, sp, #8
  20:	movw	r0, #0
  24:	movt	r0, #0
  28:	bl	0 <__isoc99_scanf>
  2c:	movw	r0, #0
  30:	movt	r0, #0
  34:	bl	0 <printf>
  38:	add	r1, sp, #60	; 0x3c
  3c:	movw	r0, #0
  40:	movt	r0, #0
  44:	bl	0 <__isoc99_scanf>
  48:	add	r0, sp, #8
  4c:	movw	r1, #0
  50:	movt	r1, #0
  54:	bl	0 <fopen>
  58:	subs	r4, r0, #0
  5c:	beq	b8 <main+0xb8>
  60:	add	r0, sp, #60	; 0x3c
  64:	movw	r1, #0
  68:	movt	r1, #0
  6c:	bl	0 <fopen>
  70:	subs	r5, r0, #0
  74:	beq	b8 <main+0xb8>
  78:	add	r1, sp, #4
  7c:	mov	r0, r4
  80:	bl	0 <main>
  84:	mov	r6, r0
  88:	mov	r0, r5
  8c:	ldr	r2, [sp, #4]
  90:	mov	r1, r6
  94:	bl	100 <gerarRelatorio>
  98:	mov	r0, r4
  9c:	bl	0 <fclose>
  a0:	mov	r0, r5
  a4:	bl	0 <fclose>
  a8:	mov	r0, r6
  ac:	bl	0 <free>
  b0:	mov	r0, #0
  b4:	b	bc <main+0xbc>
  b8:	mov	r0, #1
  bc:	add	sp, sp, #112	; 0x70
  c0:	ldrd	r4, [sp]
  c4:	ldr	r6, [sp, #8]
  c8:	add	sp, sp, #12
  cc:	pop	{pc}		; (ldr pc, [sp], #4)
