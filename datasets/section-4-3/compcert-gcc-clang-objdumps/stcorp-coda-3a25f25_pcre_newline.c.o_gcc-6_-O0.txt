
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_newline.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda__pcre_is_newline>:
   0:	push	{fp}		; (str fp, [sp, #-4]!)
   4:	add	fp, sp, #0
   8:	sub	sp, sp, #28
   c:	str	r0, [fp, #-16]
  10:	str	r1, [fp, #-20]	; 0xffffffec
  14:	str	r2, [fp, #-24]	; 0xffffffe8
  18:	str	r3, [fp, #-28]	; 0xffffffe4
  1c:	ldr	r3, [fp, #-16]
  20:	ldrb	r3, [r3]
  24:	str	r3, [fp, #-8]
  28:	ldr	r3, [fp, #-20]	; 0xffffffec
  2c:	cmp	r3, #2
  30:	bne	ac <coda__pcre_is_newline+0xac>
  34:	ldr	r3, [fp, #-8]
  38:	cmp	r3, #10
  3c:	beq	4c <coda__pcre_is_newline+0x4c>
  40:	cmp	r3, #13
  44:	beq	60 <coda__pcre_is_newline+0x60>
  48:	b	a4 <coda__pcre_is_newline+0xa4>
  4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
  50:	mov	r2, #1
  54:	str	r2, [r3]
  58:	mov	r3, #1
  5c:	b	188 <coda__pcre_is_newline+0x188>
  60:	ldr	r3, [fp, #-24]	; 0xffffffe8
  64:	sub	r2, r3, #1
  68:	ldr	r3, [fp, #-16]
  6c:	cmp	r2, r3
  70:	bls	90 <coda__pcre_is_newline+0x90>
  74:	ldr	r3, [fp, #-16]
  78:	add	r3, r3, #1
  7c:	ldrb	r3, [r3]
  80:	cmp	r3, #10
  84:	bne	90 <coda__pcre_is_newline+0x90>
  88:	mov	r2, #2
  8c:	b	94 <coda__pcre_is_newline+0x94>
  90:	mov	r2, #1
  94:	ldr	r3, [fp, #-28]	; 0xffffffe4
  98:	str	r2, [r3]
  9c:	mov	r3, #1
  a0:	b	188 <coda__pcre_is_newline+0x188>
  a4:	mov	r3, #0
  a8:	b	188 <coda__pcre_is_newline+0x188>
  ac:	ldr	r3, [fp, #-8]
  b0:	cmp	r3, #13
  b4:	beq	104 <coda__pcre_is_newline+0x104>
  b8:	cmp	r3, #13
  bc:	bhi	cc <coda__pcre_is_newline+0xcc>
  c0:	cmp	r3, #10
  c4:	bcc	184 <coda__pcre_is_newline+0x184>
  c8:	b	f0 <coda__pcre_is_newline+0xf0>
  cc:	cmp	r3, #133	; 0x85
  d0:	beq	148 <coda__pcre_is_newline+0x148>
  d4:	cmp	r3, #133	; 0x85
  d8:	bcc	184 <coda__pcre_is_newline+0x184>
  dc:	sub	r3, r3, #8192	; 0x2000
  e0:	sub	r3, r3, #40	; 0x28
  e4:	cmp	r3, #1
  e8:	bhi	184 <coda__pcre_is_newline+0x184>
  ec:	b	170 <coda__pcre_is_newline+0x170>
  f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
  f4:	mov	r2, #1
  f8:	str	r2, [r3]
  fc:	mov	r3, #1
 100:	b	188 <coda__pcre_is_newline+0x188>
 104:	ldr	r3, [fp, #-24]	; 0xffffffe8
 108:	sub	r2, r3, #1
 10c:	ldr	r3, [fp, #-16]
 110:	cmp	r2, r3
 114:	bls	134 <coda__pcre_is_newline+0x134>
 118:	ldr	r3, [fp, #-16]
 11c:	add	r3, r3, #1
 120:	ldrb	r3, [r3]
 124:	cmp	r3, #10
 128:	bne	134 <coda__pcre_is_newline+0x134>
 12c:	mov	r2, #2
 130:	b	138 <coda__pcre_is_newline+0x138>
 134:	mov	r2, #1
 138:	ldr	r3, [fp, #-28]	; 0xffffffe4
 13c:	str	r2, [r3]
 140:	mov	r3, #1
 144:	b	188 <coda__pcre_is_newline+0x188>
 148:	ldr	r3, [fp, #4]
 14c:	cmp	r3, #0
 150:	beq	15c <coda__pcre_is_newline+0x15c>
 154:	mov	r2, #2
 158:	b	160 <coda__pcre_is_newline+0x160>
 15c:	mov	r2, #1
 160:	ldr	r3, [fp, #-28]	; 0xffffffe4
 164:	str	r2, [r3]
 168:	mov	r3, #1
 16c:	b	188 <coda__pcre_is_newline+0x188>
 170:	ldr	r3, [fp, #-28]	; 0xffffffe4
 174:	mov	r2, #3
 178:	str	r2, [r3]
 17c:	mov	r3, #1
 180:	b	188 <coda__pcre_is_newline+0x188>
 184:	mov	r3, #0
 188:	mov	r0, r3
 18c:	add	sp, fp, #0
 190:	pop	{fp}		; (ldr fp, [sp], #4)
 194:	bx	lr

00000198 <coda__pcre_was_newline>:
 198:	push	{fp}		; (str fp, [sp, #-4]!)
 19c:	add	fp, sp, #0
 1a0:	sub	sp, sp, #28
 1a4:	str	r0, [fp, #-16]
 1a8:	str	r1, [fp, #-20]	; 0xffffffec
 1ac:	str	r2, [fp, #-24]	; 0xffffffe8
 1b0:	str	r3, [fp, #-28]	; 0xffffffe4
 1b4:	ldr	r3, [fp, #-16]
 1b8:	sub	r3, r3, #1
 1bc:	str	r3, [fp, #-16]
 1c0:	ldr	r3, [fp, #-16]
 1c4:	ldrb	r3, [r3]
 1c8:	str	r3, [fp, #-8]
 1cc:	ldr	r3, [fp, #-20]	; 0xffffffec
 1d0:	cmp	r3, #2
 1d4:	bne	24c <coda__pcre_was_newline+0xb4>
 1d8:	ldr	r3, [fp, #-8]
 1dc:	cmp	r3, #10
 1e0:	beq	1f0 <coda__pcre_was_newline+0x58>
 1e4:	cmp	r3, #13
 1e8:	beq	230 <coda__pcre_was_newline+0x98>
 1ec:	b	244 <coda__pcre_was_newline+0xac>
 1f0:	ldr	r2, [fp, #-16]
 1f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1f8:	cmp	r2, r3
 1fc:	bls	21c <coda__pcre_was_newline+0x84>
 200:	ldr	r3, [fp, #-16]
 204:	sub	r3, r3, #1
 208:	ldrb	r3, [r3]
 20c:	cmp	r3, #13
 210:	bne	21c <coda__pcre_was_newline+0x84>
 214:	mov	r2, #2
 218:	b	220 <coda__pcre_was_newline+0x88>
 21c:	mov	r2, #1
 220:	ldr	r3, [fp, #-28]	; 0xffffffe4
 224:	str	r2, [r3]
 228:	mov	r3, #1
 22c:	b	324 <coda__pcre_was_newline+0x18c>
 230:	ldr	r3, [fp, #-28]	; 0xffffffe4
 234:	mov	r2, #1
 238:	str	r2, [r3]
 23c:	mov	r3, #1
 240:	b	324 <coda__pcre_was_newline+0x18c>
 244:	mov	r3, #0
 248:	b	324 <coda__pcre_was_newline+0x18c>
 24c:	ldr	r3, [fp, #-8]
 250:	cmp	r3, #13
 254:	bhi	26c <coda__pcre_was_newline+0xd4>
 258:	cmp	r3, #11
 25c:	bcs	2d0 <coda__pcre_was_newline+0x138>
 260:	cmp	r3, #10
 264:	beq	290 <coda__pcre_was_newline+0xf8>
 268:	b	320 <coda__pcre_was_newline+0x188>
 26c:	cmp	r3, #133	; 0x85
 270:	beq	2e4 <coda__pcre_was_newline+0x14c>
 274:	cmp	r3, #133	; 0x85
 278:	bcc	320 <coda__pcre_was_newline+0x188>
 27c:	sub	r3, r3, #8192	; 0x2000
 280:	sub	r3, r3, #40	; 0x28
 284:	cmp	r3, #1
 288:	bhi	320 <coda__pcre_was_newline+0x188>
 28c:	b	30c <coda__pcre_was_newline+0x174>
 290:	ldr	r2, [fp, #-16]
 294:	ldr	r3, [fp, #-24]	; 0xffffffe8
 298:	cmp	r2, r3
 29c:	bls	2bc <coda__pcre_was_newline+0x124>
 2a0:	ldr	r3, [fp, #-16]
 2a4:	sub	r3, r3, #1
 2a8:	ldrb	r3, [r3]
 2ac:	cmp	r3, #13
 2b0:	bne	2bc <coda__pcre_was_newline+0x124>
 2b4:	mov	r2, #2
 2b8:	b	2c0 <coda__pcre_was_newline+0x128>
 2bc:	mov	r2, #1
 2c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2c4:	str	r2, [r3]
 2c8:	mov	r3, #1
 2cc:	b	324 <coda__pcre_was_newline+0x18c>
 2d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2d4:	mov	r2, #1
 2d8:	str	r2, [r3]
 2dc:	mov	r3, #1
 2e0:	b	324 <coda__pcre_was_newline+0x18c>
 2e4:	ldr	r3, [fp, #4]
 2e8:	cmp	r3, #0
 2ec:	beq	2f8 <coda__pcre_was_newline+0x160>
 2f0:	mov	r2, #2
 2f4:	b	2fc <coda__pcre_was_newline+0x164>
 2f8:	mov	r2, #1
 2fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
 300:	str	r2, [r3]
 304:	mov	r3, #1
 308:	b	324 <coda__pcre_was_newline+0x18c>
 30c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 310:	mov	r2, #3
 314:	str	r2, [r3]
 318:	mov	r3, #1
 31c:	b	324 <coda__pcre_was_newline+0x18c>
 320:	mov	r3, #0
 324:	mov	r0, r3
 328:	add	sp, fp, #0
 32c:	pop	{fp}		; (ldr fp, [sp], #4)
 330:	bx	lr
