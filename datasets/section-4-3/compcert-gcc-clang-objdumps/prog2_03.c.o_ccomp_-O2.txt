
../repos/prog2/CMakeFiles/0.3.dir/Aula00_Conceitos_base/03.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <avg>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	vldr	s0, [pc, #44]	; 44 <avg+0x44>
  14:	mov	r2, #0
  18:	add	r1, r0, r2, lsl #2
  1c:	vldr	s4, [r1]
  20:	vadd.f32	s0, s0, s4
  24:	add	r2, r2, #1
  28:	cmp	r2, #10
  2c:	blt	18 <avg+0x18>
  30:	vmov.f32	s2, #36	; 0x41200000  10.0
  34:	vdiv.f32	s0, s0, s2
  38:	ldr	lr, [sp, #4]
  3c:	add	sp, sp, #8
  40:	bx	lr
  44:	.word	0x00000000

00000048 <max>:
  48:	mov	ip, sp
  4c:	sub	sp, sp, #8
  50:	str	ip, [sp]
  54:	str	lr, [sp, #4]
  58:	vldr	s0, [r0]
  5c:	mov	r2, #1
  60:	add	r1, r0, r2, lsl #2
  64:	vldr	s2, [r1]
  68:	vcmp.f32	s2, s0
  6c:	vmrs	APSR_nzcv, fpscr
  70:	ble	78 <max+0x30>
  74:	vmov.f64	d0, d1
  78:	add	r2, r2, #1
  7c:	cmp	r2, #10
  80:	blt	60 <max+0x18>
  84:	ldr	lr, [sp, #4]
  88:	add	sp, sp, #8
  8c:	bx	lr

00000090 <min>:
  90:	mov	ip, sp
  94:	sub	sp, sp, #8
  98:	str	ip, [sp]
  9c:	str	lr, [sp, #4]
  a0:	vldr	s0, [r0]
  a4:	mov	r2, #1
  a8:	add	r1, r0, r2, lsl #2
  ac:	vldr	s2, [r1]
  b0:	vcmp.f32	s2, s0
  b4:	vmrs	APSR_nzcv, fpscr
  b8:	bpl	c0 <min+0x30>
  bc:	vmov.f64	d0, d1
  c0:	add	r2, r2, #1
  c4:	cmp	r2, #10
  c8:	blt	a8 <min+0x18>
  cc:	ldr	lr, [sp, #4]
  d0:	add	sp, sp, #8
  d4:	bx	lr

000000d8 <main>:
  d8:	mov	ip, sp
  dc:	sub	sp, sp, #56	; 0x38
  e0:	str	ip, [sp]
  e4:	str	lr, [sp, #4]
  e8:	str	r4, [sp, #8]
  ec:	mov	r4, #0
  f0:	ldr	r0, [pc, #192]	; 1b8 <main+0xe0>
  f4:	add	r1, r4, #1
  f8:	bl	0 <printf>
  fc:	ldr	r0, [pc, #188]	; 1c0 <main+0xe8>
 100:	add	r1, sp, #16
 104:	add	r1, r1, r4, lsl #2
 108:	bl	0 <scanf>
 10c:	add	r4, r4, #1
 110:	cmp	r4, #10
 114:	blt	f0 <main+0x18>
 118:	add	r0, sp, #16
 11c:	bl	0 <avg>
 120:	ldr	r0, [pc, #140]	; 1b4 <main+0xdc>
 124:	vcvt.f64.f32	d2, s0
 128:	vmov	r2, r3, d2
 12c:	bl	0 <printf>
 130:	add	r0, sp, #16
 134:	bl	48 <max>
 138:	ldr	r0, [pc, #136]	; 1c8 <main+0xf0>
 13c:	vcvt.f64.f32	d2, s0
 140:	vmov	r2, r3, d2
 144:	bl	0 <printf>
 148:	add	r0, sp, #16
 14c:	bl	90 <min>
 150:	ldr	r0, [pc, #116]	; 1cc <main+0xf4>
 154:	vcvt.f64.f32	d2, s0
 158:	vmov	r2, r3, d2
 15c:	bl	0 <printf>
 160:	ldr	r0, [pc, #92]	; 1c4 <main+0xec>
 164:	bl	0 <printf>
 168:	mov	r4, #0
 16c:	ldr	r0, [pc, #60]	; 1b0 <main+0xd8>
 170:	add	r2, sp, #16
 174:	add	r1, r2, r4, lsl #2
 178:	vldr	s12, [r1]
 17c:	vcvt.f64.f32	d2, s12
 180:	vmov	r2, r3, d2
 184:	bl	0 <printf>
 188:	add	r4, r4, #1
 18c:	cmp	r4, #10
 190:	blt	16c <main+0x94>
 194:	ldr	r0, [pc, #32]	; 1bc <main+0xe4>
 198:	bl	0 <printf>
 19c:	mov	r0, #0
 1a0:	ldr	r4, [sp, #8]
 1a4:	ldr	lr, [sp, #4]
 1a8:	add	sp, sp, #56	; 0x38
 1ac:	bx	lr
 1b0:	.word	0x00000000
 1b4:	.word	0x0000003f
 1b8:	.word	0x00000014
 1bc:	.word	0x0000002c
 1c0:	.word	0x0000003c
 1c4:	.word	0x0000004c
 1c8:	.word	0x00000006
 1cc:	.word	0x0000002e
