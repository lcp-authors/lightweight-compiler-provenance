
../repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-traverse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_array_dim>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #24
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	str	r5, [sp, #12]
  18:	str	r6, [sp, #16]
  1c:	mov	r4, r0
  20:	ldr	r0, [pc, #252]	; 124 <print_array_dim+0x124>
  24:	lsl	r3, r1, #6
  28:	add	r1, r3, r1, lsl #4
  2c:	add	r5, r0, r1
  30:	mov	r6, #0
  34:	ldr	r2, [r5, #4]
  38:	cmp	r6, r2
  3c:	bge	ec <print_array_dim+0xec>
  40:	cmp	r6, #0
  44:	ble	54 <print_array_dim+0x54>
  48:	ldr	r1, [pc, #192]	; 110 <print_array_dim+0x110>
  4c:	mov	r0, r4
  50:	bl	0 <fprintf>
  54:	ldr	r1, [pc, #172]	; 108 <print_array_dim+0x108>
  58:	ldr	r2, [r1]
  5c:	cmp	r2, #0
  60:	beq	b4 <print_array_dim+0xb4>
  64:	ldr	ip, [pc, #168]	; 114 <print_array_dim+0x114>
  68:	ldr	r0, [r5]
  6c:	add	r0, r0, r6
  70:	ldr	r3, [ip, r0, lsl #2]
  74:	cmp	r3, #0
  78:	beq	9c <print_array_dim+0x9c>
  7c:	ldr	r1, [pc, #128]	; 104 <print_array_dim+0x104>
  80:	ldr	r2, [pc, #152]	; 120 <print_array_dim+0x120>
  84:	ldr	r2, [r2, r0, lsl #2]
  88:	ldr	r3, [pc, #136]	; 118 <print_array_dim+0x118>
  8c:	ldr	r3, [r3, r0, lsl #2]
  90:	mov	r0, r4
  94:	bl	0 <fprintf>
  98:	b	e4 <print_array_dim+0xe4>
  9c:	ldr	r1, [pc, #120]	; 11c <print_array_dim+0x11c>
  a0:	ldr	ip, [pc, #112]	; 118 <print_array_dim+0x118>
  a4:	ldr	r2, [ip, r0, lsl #2]
  a8:	mov	r0, r4
  ac:	bl	0 <fprintf>
  b0:	b	e4 <print_array_dim+0xe4>
  b4:	lsl	r3, r6, #2
  b8:	add	ip, r5, r3
  bc:	ldr	r2, [ip, #8]
  c0:	cmn	r2, #1
  c4:	beq	d8 <print_array_dim+0xd8>
  c8:	ldr	r1, [pc, #76]	; 11c <print_array_dim+0x11c>
  cc:	mov	r0, r4
  d0:	bl	0 <fprintf>
  d4:	b	e4 <print_array_dim+0xe4>
  d8:	ldr	r1, [pc, #44]	; 10c <print_array_dim+0x10c>
  dc:	mov	r0, r4
  e0:	bl	0 <fprintf>
  e4:	add	r6, r6, #1
  e8:	b	34 <print_array_dim+0x34>
  ec:	ldr	r4, [sp, #8]
  f0:	ldr	r5, [sp, #12]
  f4:	ldr	r6, [sp, #16]
  f8:	ldr	lr, [sp, #4]
  fc:	add	sp, sp, #24
 100:	bx	lr
 104:	.word	0x000000ab
 108:	.word	0x00000000
 10c:	.word	0x000000b5
 110:	.word	0x000000f9
 114:	.word	0x00000048
 118:	.word	0x00000004
 11c:	.word	0x000000ef
 120:	.word	0x00000024
 124:	.word	0x00000320

00000128 <print_full_field_name>:
 128:	mov	ip, sp
 12c:	sub	sp, sp, #40	; 0x28
 130:	str	ip, [sp]
 134:	str	lr, [sp, #4]
 138:	str	r4, [sp, #8]
 13c:	str	r5, [sp, #12]
 140:	str	r6, [sp, #16]
 144:	str	r7, [sp, #20]
 148:	str	r8, [sp, #24]
 14c:	mov	r6, r2
 150:	mov	r4, r1
 154:	mov	r5, r0
 158:	cmp	r4, #1
 15c:	bne	268 <print_full_field_name+0x140>
 160:	mov	r8, #0
 164:	mov	r4, #0
 168:	mov	r7, #0
 16c:	ldr	r2, [pc, #644]	; 3f8 <print_full_field_name+0x2d0>
 170:	ldr	r2, [r2]
 174:	cmp	r7, r2
 178:	bge	228 <print_full_field_name+0x100>
 17c:	ldr	r1, [pc, #644]	; 408 <print_full_field_name+0x2e0>
 180:	ldr	r0, [r1, r7, lsl #2]
 184:	add	r1, sp, #32
 188:	bl	0 <coda_type_get_class>
 18c:	cmp	r0, #0
 190:	beq	198 <print_full_field_name+0x70>
 194:	bl	0 <handle_coda_error>
 198:	ldr	r3, [sp, #32]
 19c:	cmp	r3, #0
 1a0:	beq	208 <print_full_field_name+0xe0>
 1a4:	cmp	r3, #1
 1a8:	bne	220 <print_full_field_name+0xf8>
 1ac:	cmp	r7, #0
 1b0:	bne	1c0 <print_full_field_name+0x98>
 1b4:	ldr	r1, [pc, #552]	; 3e4 <print_full_field_name+0x2bc>
 1b8:	mov	r0, r5
 1bc:	bl	0 <fprintf>
 1c0:	ldr	r2, [pc, #588]	; 414 <print_full_field_name+0x2ec>
 1c4:	lsl	ip, r4, #6
 1c8:	add	r0, ip, r4, lsl #4
 1cc:	add	r3, r2, r0
 1d0:	ldr	r1, [r3, #4]
 1d4:	cmp	r1, #0
 1d8:	ble	200 <print_full_field_name+0xd8>
 1dc:	ldr	r1, [pc, #552]	; 40c <print_full_field_name+0x2e4>
 1e0:	mov	r0, r5
 1e4:	bl	0 <fprintf>
 1e8:	mov	r1, r4
 1ec:	mov	r0, r5
 1f0:	bl	0 <print_array_dim>
 1f4:	ldr	r1, [pc, #532]	; 410 <print_full_field_name+0x2e8>
 1f8:	mov	r0, r5
 1fc:	bl	0 <fprintf>
 200:	add	r4, r4, #1
 204:	b	220 <print_full_field_name+0xf8>
 208:	ldr	r1, [pc, #492]	; 3fc <print_full_field_name+0x2d4>
 20c:	ldr	r0, [pc, #480]	; 3f4 <print_full_field_name+0x2cc>
 210:	ldr	r2, [r0, r8, lsl #2]
 214:	mov	r0, r5
 218:	bl	0 <fprintf>
 21c:	add	r8, r8, #1
 220:	add	r7, r7, #1
 224:	b	16c <print_full_field_name+0x44>
 228:	cmp	r6, #0
 22c:	beq	3c0 <print_full_field_name+0x298>
 230:	ldr	r3, [pc, #440]	; 3f0 <print_full_field_name+0x2c8>
 234:	ldr	r2, [r3]
 238:	cmp	r4, r2
 23c:	bge	3c0 <print_full_field_name+0x298>
 240:	ldr	r1, [pc, #452]	; 40c <print_full_field_name+0x2e4>
 244:	mov	r0, r5
 248:	bl	0 <fprintf>
 24c:	mov	r1, r4
 250:	mov	r0, r5
 254:	bl	0 <print_array_dim>
 258:	ldr	r1, [pc, #432]	; 410 <print_full_field_name+0x2e8>
 25c:	mov	r0, r5
 260:	bl	0 <fprintf>
 264:	b	3c0 <print_full_field_name+0x298>
 268:	mov	r7, #0
 26c:	ldr	r0, [pc, #372]	; 3e8 <print_full_field_name+0x2c0>
 270:	ldr	r2, [r0]
 274:	cmp	r7, r2
 278:	bge	2ac <print_full_field_name+0x184>
 27c:	cmp	r7, #0
 280:	ble	290 <print_full_field_name+0x168>
 284:	ldr	r1, [pc, #352]	; 3ec <print_full_field_name+0x2c4>
 288:	mov	r0, r5
 28c:	bl	0 <fprintf>
 290:	ldr	r1, [pc, #360]	; 400 <print_full_field_name+0x2d8>
 294:	ldr	r0, [pc, #344]	; 3f4 <print_full_field_name+0x2cc>
 298:	ldr	r2, [r0, r7, lsl #2]
 29c:	mov	r0, r5
 2a0:	bl	0 <fprintf>
 2a4:	add	r7, r7, #1
 2a8:	b	26c <print_full_field_name+0x144>
 2ac:	cmp	r4, #2
 2b0:	bne	3c0 <print_full_field_name+0x298>
 2b4:	mov	r4, #0
 2b8:	mov	r7, #0
 2bc:	ldr	r1, [pc, #308]	; 3f8 <print_full_field_name+0x2d0>
 2c0:	ldr	ip, [r1]
 2c4:	cmp	r7, ip
 2c8:	bge	350 <print_full_field_name+0x228>
 2cc:	ldr	r0, [pc, #308]	; 408 <print_full_field_name+0x2e0>
 2d0:	ldr	r0, [r0, r7, lsl #2]
 2d4:	add	r1, sp, #36	; 0x24
 2d8:	bl	0 <coda_type_get_class>
 2dc:	cmp	r0, #0
 2e0:	beq	2e8 <print_full_field_name+0x1c0>
 2e4:	bl	0 <handle_coda_error>
 2e8:	ldr	r0, [sp, #36]	; 0x24
 2ec:	cmp	r0, #1
 2f0:	bne	348 <print_full_field_name+0x220>
 2f4:	ldr	r1, [pc, #280]	; 414 <print_full_field_name+0x2ec>
 2f8:	lsl	r2, r4, #6
 2fc:	add	r0, r2, r4, lsl #4
 300:	add	r3, r1, r0
 304:	ldr	ip, [r3, #4]
 308:	cmp	ip, #0
 30c:	ble	348 <print_full_field_name+0x220>
 310:	ldr	ip, [r1, r0]
 314:	cmp	ip, #0
 318:	beq	32c <print_full_field_name+0x204>
 31c:	ldr	r1, [pc, #224]	; 404 <print_full_field_name+0x2dc>
 320:	mov	r0, r5
 324:	bl	0 <fprintf>
 328:	b	338 <print_full_field_name+0x210>
 32c:	ldr	r1, [pc, #172]	; 3e0 <print_full_field_name+0x2b8>
 330:	mov	r0, r5
 334:	bl	0 <fprintf>
 338:	mov	r1, r4
 33c:	mov	r0, r5
 340:	bl	0 <print_array_dim>
 344:	add	r4, r4, #1
 348:	add	r7, r7, #1
 34c:	b	2bc <print_full_field_name+0x194>
 350:	cmp	r6, #0
 354:	beq	3ac <print_full_field_name+0x284>
 358:	ldr	r1, [pc, #144]	; 3f0 <print_full_field_name+0x2c8>
 35c:	ldr	r2, [r1]
 360:	cmp	r4, r2
 364:	bge	3ac <print_full_field_name+0x284>
 368:	ldr	ip, [pc, #164]	; 414 <print_full_field_name+0x2ec>
 36c:	lsl	r3, r4, #6
 370:	add	r1, r3, r4, lsl #4
 374:	ldr	r0, [ip, r1]
 378:	cmp	r0, #0
 37c:	beq	390 <print_full_field_name+0x268>
 380:	ldr	r1, [pc, #124]	; 404 <print_full_field_name+0x2dc>
 384:	mov	r0, r5
 388:	bl	0 <fprintf>
 38c:	b	39c <print_full_field_name+0x274>
 390:	ldr	r1, [pc, #72]	; 3e0 <print_full_field_name+0x2b8>
 394:	mov	r0, r5
 398:	bl	0 <fprintf>
 39c:	mov	r1, r4
 3a0:	mov	r0, r5
 3a4:	bl	0 <print_array_dim>
 3a8:	add	r4, r4, #1
 3ac:	cmp	r4, #0
 3b0:	ble	3c0 <print_full_field_name+0x298>
 3b4:	ldr	r1, [pc, #84]	; 410 <print_full_field_name+0x2e8>
 3b8:	mov	r0, r5
 3bc:	bl	0 <fprintf>
 3c0:	ldr	r4, [sp, #8]
 3c4:	ldr	r5, [sp, #12]
 3c8:	ldr	r6, [sp, #16]
 3cc:	ldr	r7, [sp, #20]
 3d0:	ldr	r8, [sp, #24]
 3d4:	ldr	lr, [sp, #4]
 3d8:	add	sp, sp, #40	; 0x28
 3dc:	bx	lr
 3e0:	.word	0x000000fb
 3e4:	.word	0x000000b3
 3e8:	.word	0x00000ea4
 3ec:	.word	0x00000003
 3f0:	.word	0x00000d20
 3f4:	.word	0x00000e24
 3f8:	.word	0x00000088
 3fc:	.word	0x000000cc
 400:	.word	0x00000000
 404:	.word	0x000000f9
 408:	.word	0x00000008
 40c:	.word	0x000000ca
 410:	.word	0x0000006f
 414:	.word	0x00000320

00000418 <traverse_info_init>:
 418:	mov	ip, sp
 41c:	sub	sp, sp, #8
 420:	str	ip, [sp]
 424:	str	lr, [sp, #4]
 428:	ldr	ip, [pc, #60]	; 46c <traverse_info_init+0x54>
 42c:	mov	r3, #0
 430:	str	r3, [ip]
 434:	ldr	r0, [pc, #52]	; 470 <traverse_info_init+0x58>
 438:	mov	r2, #0
 43c:	str	r2, [r0]
 440:	ldr	r1, [pc, #32]	; 468 <traverse_info_init+0x50>
 444:	mov	r2, #0
 448:	str	r2, [r1]
 44c:	ldr	r1, [pc, #16]	; 464 <traverse_info_init+0x4c>
 450:	mov	r0, #0
 454:	str	r0, [r1]
 458:	ldr	lr, [sp, #4]
 45c:	add	sp, sp, #8
 460:	bx	lr
 464:	.word	0x00000ea4
 468:	.word	0x00000d20
 46c:	.word	0x00000004
 470:	.word	0x00000088

00000474 <traverse_info_done>:
 474:	mov	ip, sp
 478:	sub	sp, sp, #8
 47c:	str	ip, [sp]
 480:	str	lr, [sp, #4]
 484:	ldr	r0, [pc, #52]	; 4c0 <traverse_info_done+0x4c>
 488:	ldr	r0, [r0]
 48c:	cmp	r0, #0
 490:	beq	498 <traverse_info_done+0x24>
 494:	bl	0 <coda_close>
 498:	ldr	r0, [pc, #36]	; 4c4 <traverse_info_done+0x50>
 49c:	ldr	r1, [r0]
 4a0:	cmp	r1, #0
 4a4:	beq	4b4 <traverse_info_done+0x40>
 4a8:	ldr	lr, [sp, #4]
 4ac:	add	sp, sp, #8
 4b0:	b	0 <codadump_filter_remove>
 4b4:	ldr	lr, [sp, #4]
 4b8:	add	sp, sp, #8
 4bc:	bx	lr
 4c0:	.word	0x00000004
 4c4:	.word	0x00000298

000004c8 <handle_data_element>:
 4c8:	mov	ip, sp
 4cc:	sub	sp, sp, #40	; 0x28
 4d0:	str	ip, [sp]
 4d4:	str	lr, [sp, #4]
 4d8:	str	r4, [sp, #8]
 4dc:	ldr	r0, [pc, #612]	; 748 <handle_data_element+0x280>
 4e0:	ldr	r0, [r0]
 4e4:	cmp	r0, #0
 4e8:	bne	6f8 <handle_data_element+0x230>
 4ec:	ldr	r0, [pc, #604]	; 750 <handle_data_element+0x288>
 4f0:	ldr	r0, [r0]
 4f4:	mov	r1, #1
 4f8:	mov	r2, #0
 4fc:	bl	128 <print_full_field_name>
 500:	ldr	r0, [pc, #528]	; 718 <handle_data_element+0x250>
 504:	ldr	r0, [r0]
 508:	cmp	r0, #0
 50c:	beq	614 <handle_data_element+0x14c>
 510:	ldr	r2, [pc, #576]	; 758 <handle_data_element+0x290>
 514:	ldr	r3, [pc, #540]	; 738 <handle_data_element+0x270>
 518:	ldr	r3, [r3]
 51c:	ldr	r0, [r2, r3, lsl #2]
 520:	add	r1, sp, #20
 524:	bl	0 <coda_type_get_class>
 528:	cmp	r0, #0
 52c:	beq	534 <handle_data_element+0x6c>
 530:	bl	0 <handle_coda_error>
 534:	ldr	r0, [sp, #20]
 538:	cmp	r0, #6
 53c:	beq	5dc <handle_data_element+0x114>
 540:	ldr	r2, [pc, #528]	; 758 <handle_data_element+0x290>
 544:	ldr	r3, [pc, #492]	; 738 <handle_data_element+0x270>
 548:	ldr	ip, [r3]
 54c:	ldr	r0, [r2, ip, lsl #2]
 550:	add	r1, sp, #28
 554:	bl	0 <coda_type_get_read_type>
 558:	cmp	r0, #0
 55c:	beq	564 <handle_data_element+0x9c>
 560:	bl	0 <handle_coda_error>
 564:	ldr	r0, [sp, #28]
 568:	bl	0 <coda_type_get_native_type_name>
 56c:	mov	r1, r0
 570:	ldr	r0, [pc, #456]	; 740 <handle_data_element+0x278>
 574:	bl	0 <printf>
 578:	ldr	r1, [sp, #28]
 57c:	cmp	r1, #11
 580:	beq	58c <handle_data_element+0xc4>
 584:	cmp	r1, #12
 588:	bne	614 <handle_data_element+0x14c>
 58c:	ldr	r0, [pc, #416]	; 734 <handle_data_element+0x26c>
 590:	bl	0 <printf>
 594:	ldr	r0, [pc, #404]	; 730 <handle_data_element+0x268>
 598:	ldr	r0, [r0]
 59c:	cmp	r0, #0
 5a0:	bgt	5b8 <handle_data_element+0xf0>
 5a4:	ldr	r0, [pc, #360]	; 714 <handle_data_element+0x24c>
 5a8:	ldr	r1, [pc, #380]	; 72c <handle_data_element+0x264>
 5ac:	mov	r2, #238	; 0xee
 5b0:	ldr	r3, [pc, #412]	; 754 <handle_data_element+0x28c>
 5b4:	bl	0 <__assert_fail>
 5b8:	ldr	r0, [pc, #400]	; 750 <handle_data_element+0x288>
 5bc:	ldr	r0, [r0]
 5c0:	ldr	ip, [pc, #360]	; 730 <handle_data_element+0x268>
 5c4:	ldr	r1, [ip]
 5c8:	sub	r1, r1, #1
 5cc:	bl	0 <print_array_dim>
 5d0:	ldr	r0, [pc, #328]	; 720 <handle_data_element+0x258>
 5d4:	bl	0 <printf>
 5d8:	b	614 <handle_data_element+0x14c>
 5dc:	ldr	r2, [pc, #372]	; 758 <handle_data_element+0x290>
 5e0:	ldr	r1, [pc, #336]	; 738 <handle_data_element+0x270>
 5e4:	ldr	r3, [r1]
 5e8:	ldr	r0, [r2, r3, lsl #2]
 5ec:	add	r1, sp, #24
 5f0:	bl	0 <coda_type_get_special_type>
 5f4:	cmp	r0, #0
 5f8:	beq	600 <handle_data_element+0x138>
 5fc:	bl	0 <handle_coda_error>
 600:	ldr	r0, [sp, #24]
 604:	bl	0 <coda_type_get_special_type_name>
 608:	mov	r1, r0
 60c:	ldr	r0, [pc, #300]	; 740 <handle_data_element+0x278>
 610:	bl	0 <printf>
 614:	ldr	r0, [pc, #288]	; 73c <handle_data_element+0x274>
 618:	ldr	r0, [r0]
 61c:	cmp	r0, #0
 620:	beq	668 <handle_data_element+0x1a0>
 624:	ldr	r0, [pc, #300]	; 758 <handle_data_element+0x290>
 628:	ldr	r3, [pc, #264]	; 738 <handle_data_element+0x270>
 62c:	ldr	r1, [r3]
 630:	ldr	r0, [r0, r1, lsl #2]
 634:	add	r1, sp, #32
 638:	bl	0 <coda_type_get_unit>
 63c:	cmp	r0, #0
 640:	beq	648 <handle_data_element+0x180>
 644:	bl	0 <handle_coda_error>
 648:	ldr	r1, [sp, #32]
 64c:	cmp	r1, #0
 650:	beq	668 <handle_data_element+0x1a0>
 654:	ldrb	ip, [r1]
 658:	cmp	ip, #0
 65c:	beq	668 <handle_data_element+0x1a0>
 660:	ldr	r0, [pc, #180]	; 71c <handle_data_element+0x254>
 664:	bl	0 <printf>
 668:	ldr	r0, [pc, #212]	; 744 <handle_data_element+0x27c>
 66c:	ldr	r0, [r0]
 670:	cmp	r0, #0
 674:	beq	6bc <handle_data_element+0x1f4>
 678:	ldr	r1, [pc, #216]	; 758 <handle_data_element+0x290>
 67c:	ldr	r2, [pc, #180]	; 738 <handle_data_element+0x270>
 680:	ldr	r2, [r2]
 684:	ldr	r0, [r1, r2, lsl #2]
 688:	add	r1, sp, #16
 68c:	bl	0 <coda_type_get_description>
 690:	cmp	r0, #0
 694:	beq	69c <handle_data_element+0x1d4>
 698:	bl	0 <handle_coda_error>
 69c:	ldr	r1, [sp, #16]
 6a0:	cmp	r1, #0
 6a4:	beq	6bc <handle_data_element+0x1f4>
 6a8:	ldrb	ip, [r1]
 6ac:	cmp	ip, #0
 6b0:	beq	6bc <handle_data_element+0x1f4>
 6b4:	ldr	r0, [pc, #104]	; 724 <handle_data_element+0x25c>
 6b8:	bl	0 <printf>
 6bc:	ldr	r0, [pc, #152]	; 75c <handle_data_element+0x294>
 6c0:	bl	0 <printf>
 6c4:	ldr	r0, [pc, #92]	; 728 <handle_data_element+0x260>
 6c8:	ldr	r0, [r0]
 6cc:	cmp	r0, #0
 6d0:	beq	704 <handle_data_element+0x23c>
 6d4:	mov	r4, #0
 6d8:	ldr	r0, [pc, #108]	; 74c <handle_data_element+0x284>
 6dc:	ldr	r0, [r0]
 6e0:	cmp	r4, r0
 6e4:	bge	704 <handle_data_element+0x23c>
 6e8:	mov	r0, r4
 6ec:	bl	0 <print_all_distinct_dims>
 6f0:	add	r4, r4, #1
 6f4:	b	6d8 <handle_data_element+0x210>
 6f8:	cmp	r0, #1
 6fc:	bne	704 <handle_data_element+0x23c>
 700:	bl	0 <export_data_element_to_ascii>
 704:	ldr	r4, [sp, #8]
 708:	ldr	lr, [sp, #4]
 70c:	add	sp, sp, #40	; 0x28
 710:	bx	lr
 714:	.word	0x000000d2
 718:	.word	0x00000000
 71c:	.word	0x00000071
 720:	.word	0x000000d0
 724:	.word	0x000000f3
 728:	.word	0x00000000
 72c:	.word	0x00000005
 730:	.word	0x00000d20
 734:	.word	0x0000006d
 738:	.word	0x00000088
 73c:	.word	0x00000000
 740:	.word	0x000000c6
	...
 754:	.word	0x000000fe
 758:	.word	0x00000008
 75c:	.word	0x000000b7

00000760 <traverse_record>:
 760:	mov	ip, sp
 764:	sub	sp, sp, #24
 768:	str	ip, [sp]
 76c:	str	lr, [sp, #4]
 770:	str	r4, [sp, #8]
 774:	str	r5, [sp, #12]
 778:	mov	r4, r1
 77c:	mov	r5, r0
 780:	ldr	r1, [pc, #388]	; 90c <traverse_record+0x1ac>
 784:	ldr	r0, [pc, #380]	; 908 <traverse_record+0x1a8>
 788:	ldr	r0, [r0]
 78c:	lsl	r0, r0, #2
 790:	add	ip, r1, r0
 794:	sub	lr, ip, #4096	; 0x1000
 798:	str	r5, [lr, #4092]	; 0xffc
 79c:	ldr	r1, [pc, #380]	; 920 <traverse_record+0x1c0>
 7a0:	ldr	r2, [pc, #372]	; 91c <traverse_record+0x1bc>
 7a4:	ldr	r2, [r2]
 7a8:	lsl	ip, r2, #2
 7ac:	add	r2, r1, ip
 7b0:	sub	lr, r2, #4096	; 0x1000
 7b4:	ldr	r0, [lr, #4092]	; 0xffc
 7b8:	add	r2, sp, #16
 7bc:	mov	r1, r5
 7c0:	bl	0 <coda_type_get_record_field_hidden_status>
 7c4:	cmp	r0, #0
 7c8:	beq	7d0 <traverse_record+0x70>
 7cc:	bl	0 <handle_coda_error>
 7d0:	cmp	r4, #0
 7d4:	moveq	r0, #1
 7d8:	movne	r0, #0
 7dc:	mov	ip, #0
 7e0:	ldr	r3, [sp, #16]
 7e4:	cmp	r3, #0
 7e8:	movne	r1, r0
 7ec:	moveq	r1, ip
 7f0:	cmp	r1, #0
 7f4:	bne	8f4 <traverse_record+0x194>
 7f8:	ldr	r2, [pc, #280]	; 918 <traverse_record+0x1b8>
 7fc:	ldr	r3, [r2]
 800:	cmp	r3, #0
 804:	beq	874 <traverse_record+0x114>
 808:	ldr	r1, [pc, #272]	; 920 <traverse_record+0x1c0>
 80c:	ldr	r2, [pc, #264]	; 91c <traverse_record+0x1bc>
 810:	ldr	ip, [r2]
 814:	lsl	r3, ip, #2
 818:	add	r1, r1, r3
 81c:	sub	lr, r1, #4096	; 0x1000
 820:	ldr	r0, [lr, #4092]	; 0xffc
 824:	add	r2, sp, #20
 828:	mov	r1, r5
 82c:	bl	0 <coda_type_get_record_field_available_status>
 830:	cmp	r0, #0
 834:	beq	83c <traverse_record+0xdc>
 838:	bl	0 <handle_coda_error>
 83c:	ldr	ip, [sp, #20]
 840:	cmn	ip, #1
 844:	bne	854 <traverse_record+0xf4>
 848:	bl	0 <dim_record_field_available>
 84c:	cmp	r0, #0
 850:	beq	8f4 <traverse_record+0x194>
 854:	ldr	r1, [pc, #184]	; 914 <traverse_record+0x1b4>
 858:	ldr	r0, [pc, #188]	; 91c <traverse_record+0x1bc>
 85c:	ldr	r3, [r0]
 860:	lsl	r0, r3, #2
 864:	add	r0, r1, r0
 868:	ldr	r2, [sp, #20]
 86c:	sub	lr, r0, #4096	; 0x1000
 870:	str	r2, [lr, #4092]	; 0xffc
 874:	ldr	r3, [pc, #164]	; 920 <traverse_record+0x1c0>
 878:	ldr	r2, [pc, #156]	; 91c <traverse_record+0x1bc>
 87c:	ldr	ip, [r2]
 880:	lsl	r0, ip, #2
 884:	add	r3, r3, r0
 888:	sub	lr, r3, #4096	; 0x1000
 88c:	ldr	r0, [lr, #4092]	; 0xffc
 890:	ldr	r2, [pc, #120]	; 910 <traverse_record+0x1b0>
 894:	ldr	ip, [pc, #108]	; 908 <traverse_record+0x1a8>
 898:	ldr	ip, [ip]
 89c:	lsl	r1, ip, #2
 8a0:	add	r2, r2, r1
 8a4:	sub	r2, r2, #4
 8a8:	mov	r1, r5
 8ac:	bl	0 <coda_type_get_record_field_name>
 8b0:	cmp	r0, #0
 8b4:	beq	8bc <traverse_record+0x15c>
 8b8:	bl	0 <handle_coda_error>
 8bc:	ldr	r1, [pc, #92]	; 920 <traverse_record+0x1c0>
 8c0:	ldr	r2, [pc, #84]	; 91c <traverse_record+0x1bc>
 8c4:	ldr	r2, [r2]
 8c8:	lsl	r3, r2, #2
 8cc:	add	ip, r1, r3
 8d0:	sub	lr, ip, #4096	; 0x1000
 8d4:	ldr	r0, [lr, #4092]	; 0xffc
 8d8:	add	r2, r1, r2, lsl #2
 8dc:	mov	r1, r5
 8e0:	bl	0 <coda_type_get_record_field_type>
 8e4:	cmp	r0, #0
 8e8:	beq	8f0 <traverse_record+0x190>
 8ec:	bl	0 <handle_coda_error>
 8f0:	bl	924 <traverse_data>
 8f4:	ldr	r4, [sp, #8]
 8f8:	ldr	r5, [sp, #12]
 8fc:	ldr	lr, [sp, #4]
 900:	add	sp, sp, #24
 904:	bx	lr
 908:	.word	0x00000ea4
 90c:	.word	0x00000da4
 910:	.word	0x00000e24
 914:	.word	0x00000d24
 918:	.word	0x00000000
 91c:	.word	0x00000088
 920:	.word	0x00000008

00000924 <traverse_data>:
 924:	mov	ip, sp
 928:	sub	sp, sp, #40	; 0x28
 92c:	str	ip, [sp]
 930:	str	lr, [sp, #4]
 934:	str	r4, [sp, #8]
 938:	str	r5, [sp, #12]
 93c:	ldr	r0, [pc, #1028]	; d48 <traverse_data+0x424>
 940:	ldr	ip, [pc, #1016]	; d40 <traverse_data+0x41c>
 944:	ldr	r3, [ip]
 948:	ldr	r0, [r0, r3, lsl #2]
 94c:	add	r1, sp, #20
 950:	bl	0 <coda_type_get_class>
 954:	cmp	r0, #0
 958:	beq	960 <traverse_data+0x3c>
 95c:	bl	0 <handle_coda_error>
 960:	ldr	r2, [sp, #20]
 964:	cmp	r2, #7
 968:	bcs	d14 <traverse_data+0x3f0>
 96c:	add	pc, pc, r2, lsl #2
 970:	nop	{0}
 974:	b	990 <traverse_data+0x6c>
 978:	b	b64 <traverse_data+0x240>
 97c:	b	bec <traverse_data+0x2c8>
 980:	b	bec <traverse_data+0x2c8>
 984:	b	bec <traverse_data+0x2c8>
 988:	b	bec <traverse_data+0x2c8>
 98c:	b	c5c <traverse_data+0x338>
 990:	ldr	ip, [pc, #936]	; d40 <traverse_data+0x41c>
 994:	ldr	r1, [ip]
 998:	cmp	r1, #31
 99c:	bge	d14 <traverse_data+0x3f0>
 9a0:	ldr	r1, [pc, #900]	; d2c <traverse_data+0x408>
 9a4:	ldr	r3, [r1]
 9a8:	add	r2, r3, #1
 9ac:	str	r2, [r1]
 9b0:	ldr	r2, [pc, #912]	; d48 <traverse_data+0x424>
 9b4:	ldr	r1, [ip]
 9b8:	ldr	r0, [r2, r1, lsl #2]
 9bc:	add	r1, sp, #24
 9c0:	bl	0 <coda_type_get_num_record_fields>
 9c4:	cmp	r0, #0
 9c8:	beq	9d0 <traverse_data+0xac>
 9cc:	bl	0 <handle_coda_error>
 9d0:	ldr	r0, [pc, #872]	; d40 <traverse_data+0x41c>
 9d4:	ldr	ip, [r0]
 9d8:	add	r2, ip, #1
 9dc:	str	r2, [r0]
 9e0:	ldr	r1, [pc, #848]	; d38 <traverse_data+0x414>
 9e4:	ldr	r0, [pc, #868]	; d50 <traverse_data+0x42c>
 9e8:	ldr	ip, [r0]
 9ec:	ldr	r5, [r1, ip, lsl #2]
 9f0:	cmp	r5, #0
 9f4:	beq	b10 <traverse_data+0x1ec>
 9f8:	ldr	r1, [pc, #824]	; d38 <traverse_data+0x414>
 9fc:	ldr	r3, [pc, #844]	; d50 <traverse_data+0x42c>
 a00:	ldr	r3, [r3]
 a04:	ldr	r0, [r1, r3, lsl #2]
 a08:	cmp	r0, #0
 a0c:	beq	b08 <traverse_data+0x1e4>
 a10:	bl	0 <codadump_filter_get_fieldname>
 a14:	mov	r4, r0
 a18:	cmp	r4, #0
 a1c:	bne	a34 <traverse_data+0x110>
 a20:	ldr	r0, [pc, #788]	; d3c <traverse_data+0x418>
 a24:	ldr	r1, [pc, #772]	; d30 <traverse_data+0x40c>
 a28:	movw	r2, #393	; 0x189
 a2c:	ldr	r3, [pc, #784]	; d44 <traverse_data+0x420>
 a30:	bl	0 <__assert_fail>
 a34:	ldr	r1, [pc, #780]	; d48 <traverse_data+0x424>
 a38:	ldr	ip, [pc, #768]	; d40 <traverse_data+0x41c>
 a3c:	ldr	r3, [ip]
 a40:	lsl	r0, r3, #2
 a44:	add	r2, r1, r0
 a48:	sub	lr, r2, #4096	; 0x1000
 a4c:	ldr	r0, [lr, #4092]	; 0xffc
 a50:	add	r2, sp, #28
 a54:	mov	r1, r4
 a58:	bl	0 <coda_type_get_record_field_index_from_name>
 a5c:	cmp	r0, #0
 a60:	beq	a94 <traverse_data+0x170>
 a64:	bl	0 <coda_get_errno>
 a68:	ldr	r1, [r0]
 a6c:	cmn	r1, #102	; 0x66
 a70:	bne	a90 <traverse_data+0x16c>
 a74:	ldr	r1, [pc, #684]	; d28 <traverse_data+0x404>
 a78:	ldr	r0, [r1]
 a7c:	ldr	r1, [pc, #712]	; d4c <traverse_data+0x428>
 a80:	mov	r2, r4
 a84:	bl	0 <fprintf>
 a88:	mov	r0, #1
 a8c:	bl	0 <exit>
 a90:	bl	0 <handle_coda_error>
 a94:	ldr	r3, [pc, #668]	; d38 <traverse_data+0x414>
 a98:	ldr	ip, [pc, #688]	; d50 <traverse_data+0x42c>
 a9c:	ldr	r2, [ip]
 aa0:	ldr	r0, [r3, r2, lsl #2]
 aa4:	bl	0 <codadump_filter_get_subfilter>
 aa8:	ldr	r2, [pc, #648]	; d38 <traverse_data+0x414>
 aac:	ldr	ip, [pc, #668]	; d50 <traverse_data+0x42c>
 ab0:	ldr	r1, [ip]
 ab4:	lsl	r3, r1, #2
 ab8:	add	r3, r2, r3
 abc:	str	r0, [r3, #4]
 ac0:	ldr	r1, [ip]
 ac4:	add	r2, r1, #1
 ac8:	str	r2, [ip]
 acc:	ldr	r0, [sp, #28]
 ad0:	mov	r1, #1
 ad4:	bl	760 <traverse_record>
 ad8:	ldr	ip, [pc, #624]	; d50 <traverse_data+0x42c>
 adc:	ldr	r2, [ip]
 ae0:	sub	r0, r2, #1
 ae4:	str	r0, [ip]
 ae8:	ldr	r2, [pc, #584]	; d38 <traverse_data+0x414>
 aec:	ldr	r0, [r2, r0, lsl #2]
 af0:	bl	0 <codadump_filter_get_next_filter>
 af4:	ldr	r2, [pc, #572]	; d38 <traverse_data+0x414>
 af8:	ldr	ip, [pc, #592]	; d50 <traverse_data+0x42c>
 afc:	ldr	r1, [ip]
 b00:	str	r0, [r2, r1, lsl #2]
 b04:	b	9f8 <traverse_data+0xd4>
 b08:	str	r5, [r1, r3, lsl #2]
 b0c:	b	b40 <traverse_data+0x21c>
 b10:	mov	r0, #0
 b14:	str	r0, [sp, #28]
 b18:	ldr	r0, [sp, #28]
 b1c:	ldr	r1, [sp, #24]
 b20:	cmp	r0, r1
 b24:	bge	b40 <traverse_data+0x21c>
 b28:	mov	r1, #0
 b2c:	bl	760 <traverse_record>
 b30:	ldr	r0, [sp, #28]
 b34:	add	r0, r0, #1
 b38:	str	r0, [sp, #28]
 b3c:	b	b18 <traverse_data+0x1f4>
 b40:	ldr	r0, [pc, #504]	; d40 <traverse_data+0x41c>
 b44:	ldr	r1, [r0]
 b48:	sub	ip, r1, #1
 b4c:	str	ip, [r0]
 b50:	ldr	r3, [pc, #468]	; d2c <traverse_data+0x408>
 b54:	ldr	ip, [r3]
 b58:	sub	ip, ip, #1
 b5c:	str	ip, [r3]
 b60:	b	d14 <traverse_data+0x3f0>
 b64:	ldr	r0, [pc, #468]	; d40 <traverse_data+0x41c>
 b68:	ldr	r0, [r0]
 b6c:	cmp	r0, #31
 b70:	bge	d14 <traverse_data+0x3f0>
 b74:	bl	0 <dim_enter_array>
 b78:	ldr	r2, [pc, #436]	; d34 <traverse_data+0x410>
 b7c:	ldr	r3, [r2]
 b80:	add	r3, r3, #1
 b84:	str	r3, [r2]
 b88:	ldr	r0, [pc, #432]	; d40 <traverse_data+0x41c>
 b8c:	ldr	r1, [r0]
 b90:	add	r3, r1, #1
 b94:	str	r3, [r0]
 b98:	ldr	r2, [pc, #424]	; d48 <traverse_data+0x424>
 b9c:	lsl	ip, r3, #2
 ba0:	add	ip, r2, ip
 ba4:	sub	lr, ip, #4096	; 0x1000
 ba8:	ldr	r0, [lr, #4092]	; 0xffc
 bac:	add	r1, r2, r3, lsl #2
 bb0:	bl	0 <coda_type_get_array_base_type>
 bb4:	cmp	r0, #0
 bb8:	beq	bc0 <traverse_data+0x29c>
 bbc:	bl	0 <handle_coda_error>
 bc0:	bl	924 <traverse_data>
 bc4:	ldr	r1, [pc, #372]	; d40 <traverse_data+0x41c>
 bc8:	ldr	r2, [r1]
 bcc:	sub	r0, r2, #1
 bd0:	str	r0, [r1]
 bd4:	ldr	r1, [pc, #344]	; d34 <traverse_data+0x410>
 bd8:	ldr	ip, [r1]
 bdc:	sub	r3, ip, #1
 be0:	str	r3, [r1]
 be4:	bl	0 <dim_leave_array>
 be8:	b	d14 <traverse_data+0x3f0>
 bec:	ldr	r2, [pc, #340]	; d48 <traverse_data+0x424>
 bf0:	ldr	r1, [pc, #328]	; d40 <traverse_data+0x41c>
 bf4:	ldr	r0, [r1]
 bf8:	ldr	r0, [r2, r0, lsl #2]
 bfc:	add	r1, sp, #32
 c00:	bl	0 <coda_type_get_read_type>
 c04:	cmp	r0, #0
 c08:	beq	c10 <traverse_data+0x2ec>
 c0c:	bl	0 <handle_coda_error>
 c10:	ldr	r0, [sp, #32]
 c14:	cmp	r0, #11
 c18:	beq	c2c <traverse_data+0x308>
 c1c:	cmp	r0, #12
 c20:	beq	c2c <traverse_data+0x308>
 c24:	bl	4c8 <handle_data_element>
 c28:	b	d14 <traverse_data+0x3f0>
 c2c:	bl	0 <dim_enter_array>
 c30:	ldr	r3, [pc, #252]	; d34 <traverse_data+0x410>
 c34:	ldr	ip, [r3]
 c38:	add	r0, ip, #1
 c3c:	str	r0, [r3]
 c40:	bl	4c8 <handle_data_element>
 c44:	ldr	r2, [pc, #232]	; d34 <traverse_data+0x410>
 c48:	ldr	r3, [r2]
 c4c:	sub	r1, r3, #1
 c50:	str	r1, [r2]
 c54:	bl	0 <dim_leave_array>
 c58:	b	d14 <traverse_data+0x3f0>
 c5c:	bl	0 <coda_get_option_bypass_special_types>
 c60:	cmp	r0, #0
 c64:	beq	c94 <traverse_data+0x370>
 c68:	ldr	r2, [pc, #216]	; d48 <traverse_data+0x424>
 c6c:	ldr	r0, [pc, #204]	; d40 <traverse_data+0x41c>
 c70:	ldr	r1, [r0]
 c74:	ldr	r0, [r2, r1, lsl #2]
 c78:	add	r1, r2, r1, lsl #2
 c7c:	bl	0 <coda_type_get_special_base_type>
 c80:	cmp	r0, #0
 c84:	beq	c8c <traverse_data+0x368>
 c88:	bl	0 <handle_coda_error>
 c8c:	bl	924 <traverse_data>
 c90:	b	d14 <traverse_data+0x3f0>
 c94:	ldr	r1, [pc, #172]	; d48 <traverse_data+0x424>
 c98:	ldr	r2, [pc, #160]	; d40 <traverse_data+0x41c>
 c9c:	ldr	r2, [r2]
 ca0:	ldr	r0, [r1, r2, lsl #2]
 ca4:	add	r1, sp, #16
 ca8:	bl	0 <coda_type_get_special_type>
 cac:	cmp	r0, #0
 cb0:	beq	cb8 <traverse_data+0x394>
 cb4:	bl	0 <handle_coda_error>
 cb8:	ldr	r0, [sp, #16]
 cbc:	cmp	r0, #2
 cc0:	bcs	cd0 <traverse_data+0x3ac>
 cc4:	cmp	r0, #0
 cc8:	beq	d14 <traverse_data+0x3f0>
 ccc:	b	d10 <traverse_data+0x3ec>
 cd0:	cmp	r0, #2
 cd4:	beq	d10 <traverse_data+0x3ec>
 cd8:	cmp	r0, #3
 cdc:	bne	d14 <traverse_data+0x3f0>
 ce0:	bl	0 <dim_enter_array>
 ce4:	ldr	ip, [pc, #72]	; d34 <traverse_data+0x410>
 ce8:	ldr	r0, [ip]
 cec:	add	r2, r0, #1
 cf0:	str	r2, [ip]
 cf4:	bl	4c8 <handle_data_element>
 cf8:	ldr	r1, [pc, #52]	; d34 <traverse_data+0x410>
 cfc:	ldr	r2, [r1]
 d00:	sub	r2, r2, #1
 d04:	str	r2, [r1]
 d08:	bl	0 <dim_leave_array>
 d0c:	b	d14 <traverse_data+0x3f0>
 d10:	bl	4c8 <handle_data_element>
 d14:	ldr	r4, [sp, #8]
 d18:	ldr	r5, [sp, #12]
 d1c:	ldr	lr, [sp, #4]
 d20:	add	sp, sp, #40	; 0x28
 d24:	bx	lr
 d28:	.word	0x00000000
 d2c:	.word	0x00000ea4
 d30:	.word	0x00000005
 d34:	.word	0x00000d20
 d38:	.word	0x00000298
 d3c:	.word	0x000000b9
 d40:	.word	0x00000088
 d44:	.word	0x00000112
 d48:	.word	0x00000008
 d4c:	.word	0x00000077
 d50:	.word	0x0000031c

00000d54 <traverse_product>:
 d54:	mov	ip, sp
 d58:	sub	sp, sp, #16
 d5c:	str	ip, [sp]
 d60:	str	lr, [sp, #4]
 d64:	str	r4, [sp, #8]
 d68:	ldr	r0, [pc, #208]	; e40 <traverse_product+0xec>
 d6c:	ldr	r0, [r0]
 d70:	ldr	r1, [pc, #184]	; e30 <traverse_product+0xdc>
 d74:	bl	0 <coda_open>
 d78:	mov	r4, r0
 d7c:	cmp	r4, #0
 d80:	beq	db8 <traverse_product+0x64>
 d84:	bl	0 <coda_get_errno>
 d88:	ldr	ip, [r0]
 d8c:	cmn	ip, #21
 d90:	bne	db8 <traverse_product+0x64>
 d94:	mov	r0, #0
 d98:	bl	0 <coda_set_option_use_mmap>
 d9c:	ldr	r0, [pc, #156]	; e40 <traverse_product+0xec>
 da0:	ldr	r0, [r0]
 da4:	ldr	r1, [pc, #132]	; e30 <traverse_product+0xdc>
 da8:	bl	0 <coda_open>
 dac:	mov	r4, r0
 db0:	mov	r0, #1
 db4:	bl	0 <coda_set_option_use_mmap>
 db8:	cmp	r4, #0
 dbc:	beq	dc4 <traverse_product+0x70>
 dc0:	bl	0 <handle_coda_error>
 dc4:	ldr	r0, [pc, #108]	; e38 <traverse_product+0xe4>
 dc8:	ldr	r1, [pc, #96]	; e30 <traverse_product+0xdc>
 dcc:	ldr	r1, [r1]
 dd0:	bl	0 <coda_cursor_set_product>
 dd4:	cmp	r0, #0
 dd8:	beq	de0 <traverse_product+0x8c>
 ddc:	bl	0 <handle_coda_error>
 de0:	ldr	r0, [pc, #80]	; e38 <traverse_product+0xe4>
 de4:	ldr	r2, [pc, #80]	; e3c <traverse_product+0xe8>
 de8:	ldr	ip, [pc, #68]	; e34 <traverse_product+0xe0>
 dec:	ldr	r1, [ip]
 df0:	add	r1, r2, r1, lsl #2
 df4:	bl	0 <coda_cursor_get_type>
 df8:	cmp	r0, #0
 dfc:	beq	e04 <traverse_product+0xb0>
 e00:	bl	0 <handle_coda_error>
 e04:	bl	924 <traverse_data>
 e08:	ldr	r0, [pc, #32]	; e30 <traverse_product+0xdc>
 e0c:	ldr	r0, [r0]
 e10:	bl	0 <coda_close>
 e14:	ldr	r2, [pc, #20]	; e30 <traverse_product+0xdc>
 e18:	mov	r3, #0
 e1c:	str	r3, [r2]
 e20:	ldr	r4, [sp, #8]
 e24:	ldr	lr, [sp, #4]
 e28:	add	sp, sp, #16
 e2c:	bx	lr
 e30:	.word	0x00000004
 e34:	.word	0x00000088
 e38:	.word	0x00000090
 e3c:	.word	0x00000008
 e40:	.word	0x00000000
