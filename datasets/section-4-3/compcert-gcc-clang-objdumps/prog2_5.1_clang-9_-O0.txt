
../compcert-repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

00010adc <.init>:
   10adc:	push	{r3, lr}
   10ae0:	bl	10ba4 <_start@@Base+0x3c>
   10ae4:	pop	{r3, pc}

Disassembly of section .plt:

00010ae8 <calloc@plt-0x14>:
   10ae8:	push	{lr}		; (str lr, [sp, #-4]!)
   10aec:	ldr	lr, [pc, #4]	; 10af8 <calloc@plt-0x4>
   10af0:	add	lr, pc, lr
   10af4:	ldr	pc, [lr, #8]!
   10af8:	andeq	r2, r1, r8, lsl #10

00010afc <calloc@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #73728	; 0x12000
   10b04:	ldr	pc, [ip, #1288]!	; 0x508

00010b08 <printf@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #73728	; 0x12000
   10b10:	ldr	pc, [ip, #1280]!	; 0x500

00010b14 <free@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #73728	; 0x12000
   10b1c:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b20 <strcpy@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #73728	; 0x12000
   10b28:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b2c <malloc@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #73728	; 0x12000
   10b34:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b38 <__libc_start_main@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #73728	; 0x12000
   10b40:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b44 <__gmon_start__@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #73728	; 0x12000
   10b4c:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b50 <strlen@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #73728	; 0x12000
   10b58:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b5c <abort@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #73728	; 0x12000
   10b64:	ldr	pc, [ip, #1224]!	; 0x4c8

Disassembly of section .text:

00010b68 <_start@@Base>:
   10b68:	mov	fp, #0
   10b6c:	mov	lr, #0
   10b70:	pop	{r1}		; (ldr r1, [sp], #4)
   10b74:	mov	r2, sp
   10b78:	push	{r2}		; (str r2, [sp, #-4]!)
   10b7c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b80:	ldr	ip, [pc, #16]	; 10b98 <_start@@Base+0x30>
   10b84:	push	{ip}		; (str ip, [sp, #-4]!)
   10b88:	ldr	r0, [pc, #12]	; 10b9c <_start@@Base+0x34>
   10b8c:	ldr	r3, [pc, #12]	; 10ba0 <_start@@Base+0x38>
   10b90:	bl	10b38 <__libc_start_main@plt>
   10b94:	bl	10b5c <abort@plt>
   10b98:	andeq	r1, r1, r4, asr #29
   10b9c:	andeq	r0, r1, r8, asr ip
   10ba0:	andeq	r1, r1, r4, ror #28
   10ba4:	ldr	r3, [pc, #20]	; 10bc0 <_start@@Base+0x58>
   10ba8:	ldr	r2, [pc, #20]	; 10bc4 <_start@@Base+0x5c>
   10bac:	add	r3, pc, r3
   10bb0:	ldr	r2, [r3, r2]
   10bb4:	cmp	r2, #0
   10bb8:	bxeq	lr
   10bbc:	b	10b44 <__gmon_start__@plt>
   10bc0:	andeq	r2, r1, ip, asr #8
   10bc4:	andeq	r0, r0, r0, lsr r0
   10bc8:	ldr	r0, [pc, #24]	; 10be8 <_start@@Base+0x80>
   10bcc:	ldr	r3, [pc, #24]	; 10bec <_start@@Base+0x84>
   10bd0:	cmp	r3, r0
   10bd4:	bxeq	lr
   10bd8:	ldr	r3, [pc, #16]	; 10bf0 <_start@@Base+0x88>
   10bdc:	cmp	r3, #0
   10be0:	bxeq	lr
   10be4:	bx	r3
   10be8:	andeq	r3, r2, ip, lsr r0
   10bec:	andeq	r3, r2, ip, lsr r0
   10bf0:	andeq	r0, r0, r0
   10bf4:	ldr	r0, [pc, #36]	; 10c20 <_start@@Base+0xb8>
   10bf8:	ldr	r1, [pc, #36]	; 10c24 <_start@@Base+0xbc>
   10bfc:	sub	r1, r1, r0
   10c00:	asr	r1, r1, #2
   10c04:	add	r1, r1, r1, lsr #31
   10c08:	asrs	r1, r1, #1
   10c0c:	bxeq	lr
   10c10:	ldr	r3, [pc, #16]	; 10c28 <_start@@Base+0xc0>
   10c14:	cmp	r3, #0
   10c18:	bxeq	lr
   10c1c:	bx	r3
   10c20:	andeq	r3, r2, ip, lsr r0
   10c24:	andeq	r3, r2, ip, lsr r0
   10c28:	andeq	r0, r0, r0
   10c2c:	push	{r4, lr}
   10c30:	ldr	r4, [pc, #24]	; 10c50 <_start@@Base+0xe8>
   10c34:	ldrb	r3, [r4]
   10c38:	cmp	r3, #0
   10c3c:	popne	{r4, pc}
   10c40:	bl	10bc8 <_start@@Base+0x60>
   10c44:	mov	r3, #1
   10c48:	strb	r3, [r4]
   10c4c:	pop	{r4, pc}
   10c50:	andeq	r3, r2, ip, lsr r0
   10c54:	b	10bf4 <_start@@Base+0x8c>

00010c58 <main@@Base>:
   10c58:	push	{fp, lr}
   10c5c:	mov	fp, sp
   10c60:	sub	sp, sp, #112	; 0x70
   10c64:	movw	r0, #0
   10c68:	str	r0, [fp, #-4]
   10c6c:	movw	r0, #4
   10c70:	movw	r1, #3
   10c74:	bl	11378 <armazem_novo@@Base>
   10c78:	str	r0, [sp, #44]	; 0x2c
   10c7c:	movw	r0, #7892	; 0x1ed4
   10c80:	movt	r0, #1
   10c84:	bl	10b08 <printf@plt>
   10c88:	vldr	s0, [pc, #904]	; 11018 <main@@Base+0x3c0>
   10c8c:	movw	r1, #7912	; 0x1ee8
   10c90:	movt	r1, #1
   10c94:	str	r0, [sp, #40]	; 0x28
   10c98:	mov	r0, r1
   10c9c:	bl	11670 <contentor_novo@@Base>
   10ca0:	vldr	s0, [pc, #884]	; 1101c <main@@Base+0x3c4>
   10ca4:	str	r0, [fp, #-12]
   10ca8:	movw	r0, #7919	; 0x1eef
   10cac:	movt	r0, #1
   10cb0:	bl	11670 <contentor_novo@@Base>
   10cb4:	vldr	s0, [pc, #1008]	; 110ac <main@@Base+0x454>
   10cb8:	str	r0, [fp, #-16]
   10cbc:	movw	r0, #7922	; 0x1ef2
   10cc0:	movt	r0, #1
   10cc4:	bl	11670 <contentor_novo@@Base>
   10cc8:	vldr	s0, [pc, #992]	; 110b0 <main@@Base+0x458>
   10ccc:	str	r0, [fp, #-20]	; 0xffffffec
   10cd0:	movw	r0, #7929	; 0x1ef9
   10cd4:	movt	r0, #1
   10cd8:	bl	11670 <contentor_novo@@Base>
   10cdc:	vldr	s0, [pc, #976]	; 110b4 <main@@Base+0x45c>
   10ce0:	str	r0, [fp, #-24]	; 0xffffffe8
   10ce4:	movw	r0, #7935	; 0x1eff
   10ce8:	movt	r0, #1
   10cec:	bl	11670 <contentor_novo@@Base>
   10cf0:	vldr	s0, [pc, #960]	; 110b8 <main@@Base+0x460>
   10cf4:	str	r0, [fp, #-28]	; 0xffffffe4
   10cf8:	movw	r0, #7941	; 0x1f05
   10cfc:	movt	r0, #1
   10d00:	bl	11670 <contentor_novo@@Base>
   10d04:	vldr	s0, [pc, #944]	; 110bc <main@@Base+0x464>
   10d08:	str	r0, [fp, #-32]	; 0xffffffe0
   10d0c:	movw	r0, #7949	; 0x1f0d
   10d10:	movt	r0, #1
   10d14:	bl	11670 <contentor_novo@@Base>
   10d18:	vldr	s0, [pc, #928]	; 110c0 <main@@Base+0x468>
   10d1c:	str	r0, [fp, #-36]	; 0xffffffdc
   10d20:	movw	r0, #7959	; 0x1f17
   10d24:	movt	r0, #1
   10d28:	bl	11670 <contentor_novo@@Base>
   10d2c:	vldr	s0, [pc, #896]	; 110b4 <main@@Base+0x45c>
   10d30:	str	r0, [fp, #-40]	; 0xffffffd8
   10d34:	movw	r0, #7966	; 0x1f1e
   10d38:	movt	r0, #1
   10d3c:	bl	11670 <contentor_novo@@Base>
   10d40:	vldr	s0, [pc, #1008]	; 11138 <main@@Base+0x4e0>
   10d44:	str	r0, [fp, #-44]	; 0xffffffd4
   10d48:	movw	r0, #7978	; 0x1f2a
   10d4c:	movt	r0, #1
   10d50:	bl	11670 <contentor_novo@@Base>
   10d54:	vldr	s0, [pc, #992]	; 1113c <main@@Base+0x4e4>
   10d58:	str	r0, [fp, #-48]	; 0xffffffd0
   10d5c:	movw	r0, #7986	; 0x1f32
   10d60:	movt	r0, #1
   10d64:	bl	11670 <contentor_novo@@Base>
   10d68:	vldr	s0, [pc, #976]	; 11140 <main@@Base+0x4e8>
   10d6c:	str	r0, [fp, #-52]	; 0xffffffcc
   10d70:	movw	r0, #7995	; 0x1f3b
   10d74:	movt	r0, #1
   10d78:	bl	11670 <contentor_novo@@Base>
   10d7c:	vldr	s0, [pc, #960]	; 11144 <main@@Base+0x4ec>
   10d80:	str	r0, [sp, #56]	; 0x38
   10d84:	movw	r0, #8001	; 0x1f41
   10d88:	movt	r0, #1
   10d8c:	bl	11670 <contentor_novo@@Base>
   10d90:	str	r0, [sp, #52]	; 0x34
   10d94:	movw	r0, #8009	; 0x1f49
   10d98:	movt	r0, #1
   10d9c:	bl	10b08 <printf@plt>
   10da0:	ldr	r1, [sp, #44]	; 0x2c
   10da4:	str	r0, [sp, #36]	; 0x24
   10da8:	mov	r0, r1
   10dac:	bl	1119c <imprimeArmazem@@Base>
   10db0:	movw	r0, #8037	; 0x1f65
   10db4:	movt	r0, #1
   10db8:	bl	10b08 <printf@plt>
   10dbc:	ldr	r1, [sp, #44]	; 0x2c
   10dc0:	ldr	r2, [fp, #-12]
   10dc4:	str	r0, [sp, #32]
   10dc8:	mov	r0, r1
   10dcc:	mov	r1, r2
   10dd0:	bl	114ac <armazenar_contentor@@Base>
   10dd4:	cmp	r0, #0
   10dd8:	beq	10df0 <main@@Base+0x198>
   10ddc:	ldr	r0, [fp, #-12]
   10de0:	ldr	r1, [r0]
   10de4:	movw	r0, #8071	; 0x1f87
   10de8:	movt	r0, #1
   10dec:	bl	10b08 <printf@plt>
   10df0:	ldr	r0, [sp, #44]	; 0x2c
   10df4:	ldr	r1, [fp, #-16]
   10df8:	bl	114ac <armazenar_contentor@@Base>
   10dfc:	cmp	r0, #0
   10e00:	beq	10e18 <main@@Base+0x1c0>
   10e04:	ldr	r0, [fp, #-16]
   10e08:	ldr	r1, [r0]
   10e0c:	movw	r0, #8071	; 0x1f87
   10e10:	movt	r0, #1
   10e14:	bl	10b08 <printf@plt>
   10e18:	ldr	r0, [sp, #44]	; 0x2c
   10e1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   10e20:	bl	114ac <armazenar_contentor@@Base>
   10e24:	cmp	r0, #0
   10e28:	beq	10e40 <main@@Base+0x1e8>
   10e2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10e30:	ldr	r1, [r0]
   10e34:	movw	r0, #8071	; 0x1f87
   10e38:	movt	r0, #1
   10e3c:	bl	10b08 <printf@plt>
   10e40:	ldr	r0, [sp, #44]	; 0x2c
   10e44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e48:	bl	114ac <armazenar_contentor@@Base>
   10e4c:	cmp	r0, #0
   10e50:	beq	10e68 <main@@Base+0x210>
   10e54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10e58:	ldr	r1, [r0]
   10e5c:	movw	r0, #8071	; 0x1f87
   10e60:	movt	r0, #1
   10e64:	bl	10b08 <printf@plt>
   10e68:	movw	r0, #8109	; 0x1fad
   10e6c:	movt	r0, #1
   10e70:	bl	10b08 <printf@plt>
   10e74:	ldr	r1, [sp, #44]	; 0x2c
   10e78:	str	r0, [sp, #28]
   10e7c:	mov	r0, r1
   10e80:	bl	1119c <imprimeArmazem@@Base>
   10e84:	movw	r0, #8137	; 0x1fc9
   10e88:	movt	r0, #1
   10e8c:	bl	10b08 <printf@plt>
   10e90:	ldr	r1, [sp, #44]	; 0x2c
   10e94:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10e98:	str	r0, [sp, #24]
   10e9c:	mov	r0, r1
   10ea0:	mov	r1, r2
   10ea4:	bl	114ac <armazenar_contentor@@Base>
   10ea8:	cmp	r0, #0
   10eac:	beq	10ec4 <main@@Base+0x26c>
   10eb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10eb4:	ldr	r1, [r0]
   10eb8:	movw	r0, #8071	; 0x1f87
   10ebc:	movt	r0, #1
   10ec0:	bl	10b08 <printf@plt>
   10ec4:	ldr	r0, [sp, #44]	; 0x2c
   10ec8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10ecc:	bl	114ac <armazenar_contentor@@Base>
   10ed0:	cmp	r0, #0
   10ed4:	beq	10eec <main@@Base+0x294>
   10ed8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10edc:	ldr	r1, [r0]
   10ee0:	movw	r0, #8071	; 0x1f87
   10ee4:	movt	r0, #1
   10ee8:	bl	10b08 <printf@plt>
   10eec:	ldr	r0, [sp, #44]	; 0x2c
   10ef0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10ef4:	bl	114ac <armazenar_contentor@@Base>
   10ef8:	cmp	r0, #0
   10efc:	beq	10f14 <main@@Base+0x2bc>
   10f00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10f04:	ldr	r1, [r0]
   10f08:	movw	r0, #8071	; 0x1f87
   10f0c:	movt	r0, #1
   10f10:	bl	10b08 <printf@plt>
   10f14:	ldr	r0, [sp, #44]	; 0x2c
   10f18:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10f1c:	bl	114ac <armazenar_contentor@@Base>
   10f20:	cmp	r0, #0
   10f24:	beq	10f3c <main@@Base+0x2e4>
   10f28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10f2c:	ldr	r1, [r0]
   10f30:	movw	r0, #8071	; 0x1f87
   10f34:	movt	r0, #1
   10f38:	bl	10b08 <printf@plt>
   10f3c:	ldr	r0, [sp, #44]	; 0x2c
   10f40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10f44:	bl	114ac <armazenar_contentor@@Base>
   10f48:	cmp	r0, #0
   10f4c:	beq	10f64 <main@@Base+0x30c>
   10f50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10f54:	ldr	r1, [r0]
   10f58:	movw	r0, #8071	; 0x1f87
   10f5c:	movt	r0, #1
   10f60:	bl	10b08 <printf@plt>
   10f64:	ldr	r0, [sp, #44]	; 0x2c
   10f68:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10f6c:	bl	114ac <armazenar_contentor@@Base>
   10f70:	cmp	r0, #0
   10f74:	beq	10f8c <main@@Base+0x334>
   10f78:	ldr	r0, [fp, #-48]	; 0xffffffd0
   10f7c:	ldr	r1, [r0]
   10f80:	movw	r0, #8071	; 0x1f87
   10f84:	movt	r0, #1
   10f88:	bl	10b08 <printf@plt>
   10f8c:	ldr	r0, [sp, #44]	; 0x2c
   10f90:	ldr	r1, [fp, #-52]	; 0xffffffcc
   10f94:	bl	114ac <armazenar_contentor@@Base>
   10f98:	cmp	r0, #0
   10f9c:	beq	10fb4 <main@@Base+0x35c>
   10fa0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   10fa4:	ldr	r1, [r0]
   10fa8:	movw	r0, #8071	; 0x1f87
   10fac:	movt	r0, #1
   10fb0:	bl	10b08 <printf@plt>
   10fb4:	ldr	r0, [sp, #44]	; 0x2c
   10fb8:	ldr	r1, [sp, #56]	; 0x38
   10fbc:	bl	114ac <armazenar_contentor@@Base>
   10fc0:	cmp	r0, #0
   10fc4:	beq	10fdc <main@@Base+0x384>
   10fc8:	ldr	r0, [sp, #56]	; 0x38
   10fcc:	ldr	r1, [r0]
   10fd0:	movw	r0, #8071	; 0x1f87
   10fd4:	movt	r0, #1
   10fd8:	bl	10b08 <printf@plt>
   10fdc:	movw	r0, #8171	; 0x1feb
   10fe0:	movt	r0, #1
   10fe4:	bl	10b08 <printf@plt>
   10fe8:	ldr	r1, [sp, #44]	; 0x2c
   10fec:	str	r0, [sp, #20]
   10ff0:	mov	r0, r1
   10ff4:	bl	1119c <imprimeArmazem@@Base>
   10ff8:	ldr	r0, [sp, #44]	; 0x2c
   10ffc:	bl	11424 <armazem_cheio@@Base>
   11000:	cmp	r0, #0
   11004:	beq	11020 <main@@Base+0x3c8>
   11008:	movw	r0, #8199	; 0x2007
   1100c:	movt	r0, #1
   11010:	bl	10b08 <printf@plt>
   11014:	b	1102c <main@@Base+0x3d4>
   11018:	cmnmi	r6, #0
   1101c:	cmnmi	sl, #0
   11020:	movw	r0, #8214	; 0x2016
   11024:	movt	r0, #1
   11028:	bl	10b08 <printf@plt>
   1102c:	ldr	r0, [sp, #44]	; 0x2c
   11030:	ldr	r1, [sp, #52]	; 0x34
   11034:	bl	114ac <armazenar_contentor@@Base>
   11038:	cmp	r0, #0
   1103c:	beq	11054 <main@@Base+0x3fc>
   11040:	ldr	r0, [fp, #-20]	; 0xffffffec
   11044:	ldr	r1, [r0]
   11048:	movw	r0, #8252	; 0x203c
   1104c:	movt	r0, #1
   11050:	bl	10b08 <printf@plt>
   11054:	movw	r0, #8327	; 0x2087
   11058:	movt	r0, #1
   1105c:	bl	10b08 <printf@plt>
   11060:	movw	r1, #0
   11064:	str	r1, [fp, #-8]
   11068:	ldr	r0, [fp, #-8]
   1106c:	cmp	r0, #8
   11070:	bge	110c4 <main@@Base+0x46c>
   11074:	ldr	r0, [sp, #44]	; 0x2c
   11078:	bl	115a0 <expedir_contentor@@Base>
   1107c:	str	r0, [sp, #48]	; 0x30
   11080:	movw	r0, #8361	; 0x20a9
   11084:	movt	r0, #1
   11088:	bl	10b08 <printf@plt>
   1108c:	ldr	r1, [sp, #48]	; 0x30
   11090:	str	r0, [sp, #16]
   11094:	mov	r0, r1
   11098:	bl	1170c <contentor_imprime@@Base>
   1109c:	ldr	r0, [fp, #-8]
   110a0:	add	r0, r0, #1
   110a4:	str	r0, [fp, #-8]
   110a8:	b	11068 <main@@Base+0x410>
   110ac:	strmi	r8, [r4], #-0
   110b0:	ldrtmi	r8, [r1], #-0
   110b4:			; <UNDEFINED> instruction: 0x43be0000
   110b8:	bicmi	r0, r3, #0
   110bc:	sbcmi	r0, r8, #0
   110c0:	adcmi	r0, r0, #0
   110c4:	movw	r0, #8392	; 0x20c8
   110c8:	movt	r0, #1
   110cc:	bl	10b08 <printf@plt>
   110d0:	ldr	r1, [sp, #44]	; 0x2c
   110d4:	str	r0, [sp, #12]
   110d8:	mov	r0, r1
   110dc:	bl	1119c <imprimeArmazem@@Base>
   110e0:	movw	r0, #8420	; 0x20e4
   110e4:	movt	r0, #1
   110e8:	bl	10b08 <printf@plt>
   110ec:	movw	r1, #0
   110f0:	str	r1, [fp, #-8]
   110f4:	ldr	r0, [fp, #-8]
   110f8:	cmp	r0, #4
   110fc:	bge	11148 <main@@Base+0x4f0>
   11100:	ldr	r0, [sp, #44]	; 0x2c
   11104:	bl	115a0 <expedir_contentor@@Base>
   11108:	str	r0, [sp, #48]	; 0x30
   1110c:	movw	r0, #8361	; 0x20a9
   11110:	movt	r0, #1
   11114:	bl	10b08 <printf@plt>
   11118:	ldr	r1, [sp, #48]	; 0x30
   1111c:	str	r0, [sp, #8]
   11120:	mov	r0, r1
   11124:	bl	1170c <contentor_imprime@@Base>
   11128:	ldr	r0, [fp, #-8]
   1112c:	add	r0, r0, #1
   11130:	str	r0, [fp, #-8]
   11134:	b	110f4 <main@@Base+0x49c>
   11138:	tstmi	r6, #0
   1113c:	orrmi	r0, r7, #0
   11140:	bicsmi	r0, r7, #0
   11144:	movtmi	r0, #32768	; 0x8000
   11148:	movw	r0, #8454	; 0x2106
   1114c:	movt	r0, #1
   11150:	bl	10b08 <printf@plt>
   11154:	ldr	r1, [sp, #44]	; 0x2c
   11158:	str	r0, [sp, #4]
   1115c:	mov	r0, r1
   11160:	bl	1119c <imprimeArmazem@@Base>
   11164:	ldr	r0, [sp, #44]	; 0x2c
   11168:	bl	113d0 <armazem_vazio@@Base>
   1116c:	cmp	r0, #0
   11170:	beq	11184 <main@@Base+0x52c>
   11174:	movw	r0, #8482	; 0x2122
   11178:	movt	r0, #1
   1117c:	bl	10b08 <printf@plt>
   11180:	b	11190 <main@@Base+0x538>
   11184:	movw	r0, #8497	; 0x2131
   11188:	movt	r0, #1
   1118c:	bl	10b08 <printf@plt>
   11190:	movw	r0, #0
   11194:	mov	sp, fp
   11198:	pop	{fp, pc}

0001119c <imprimeArmazem@@Base>:
   1119c:	push	{fp, lr}
   111a0:	mov	fp, sp
   111a4:	sub	sp, sp, #32
   111a8:	str	r0, [fp, #-4]
   111ac:	movw	r0, #0
   111b0:	str	r0, [sp, #12]
   111b4:	ldr	r1, [fp, #-4]
   111b8:	cmp	r1, r0
   111bc:	beq	11370 <imprimeArmazem@@Base+0x1d4>
   111c0:	ldr	r0, [fp, #-4]
   111c4:	ldr	r0, [r0, #8]
   111c8:	movw	r1, #0
   111cc:	cmp	r0, r1
   111d0:	beq	11370 <imprimeArmazem@@Base+0x1d4>
   111d4:	ldr	r0, [fp, #-4]
   111d8:	ldr	r0, [r0, #8]
   111dc:	ldr	r0, [r0, #4]
   111e0:	movw	r1, #4
   111e4:	bl	10afc <calloc@plt>
   111e8:	str	r0, [sp, #8]
   111ec:	ldr	r0, [fp, #-4]
   111f0:	ldr	r0, [r0, #8]
   111f4:	ldr	r0, [r0, #4]
   111f8:	str	r0, [sp, #16]
   111fc:	ldr	r0, [fp, #-4]
   11200:	ldr	r0, [r0, #8]
   11204:	ldr	r0, [r0]
   11208:	str	r0, [sp, #4]
   1120c:	movw	r0, #0
   11210:	str	r0, [fp, #-8]
   11214:	ldr	r0, [sp, #4]
   11218:	movw	r1, #0
   1121c:	cmp	r0, r1
   11220:	beq	1125c <imprimeArmazem@@Base+0xc0>
   11224:	ldr	r0, [sp, #4]
   11228:	ldr	r0, [r0]
   1122c:	ldr	r0, [r0, #4]
   11230:	ldr	r1, [sp, #8]
   11234:	ldr	r2, [fp, #-8]
   11238:	add	r1, r1, r2, lsl #2
   1123c:	str	r0, [r1]
   11240:	ldr	r0, [sp, #4]
   11244:	ldr	r0, [r0, #4]
   11248:	str	r0, [sp, #4]
   1124c:	ldr	r0, [fp, #-8]
   11250:	add	r0, r0, #1
   11254:	str	r0, [fp, #-8]
   11258:	b	11214 <imprimeArmazem@@Base+0x78>
   1125c:	movw	r0, #7910	; 0x1ee6
   11260:	movt	r0, #1
   11264:	bl	10b08 <printf@plt>
   11268:	ldr	r1, [fp, #-4]
   1126c:	ldr	r1, [r1, #4]
   11270:	str	r1, [fp, #-12]
   11274:	ldr	r0, [fp, #-12]
   11278:	cmp	r0, #0
   1127c:	ble	11310 <imprimeArmazem@@Base+0x174>
   11280:	movw	r0, #8542	; 0x215e
   11284:	movt	r0, #1
   11288:	bl	10b08 <printf@plt>
   1128c:	movw	r1, #0
   11290:	str	r1, [fp, #-8]
   11294:	ldr	r0, [fp, #-8]
   11298:	ldr	r1, [sp, #16]
   1129c:	cmp	r0, r1
   112a0:	bge	112f0 <imprimeArmazem@@Base+0x154>
   112a4:	ldr	r0, [sp, #8]
   112a8:	ldr	r1, [fp, #-8]
   112ac:	add	r0, r0, r1, lsl #2
   112b0:	ldr	r0, [r0]
   112b4:	ldr	r1, [fp, #-12]
   112b8:	cmp	r0, r1
   112bc:	blt	112d0 <imprimeArmazem@@Base+0x134>
   112c0:	movw	r0, #8535	; 0x2157
   112c4:	movt	r0, #1
   112c8:	bl	10b08 <printf@plt>
   112cc:	b	112dc <imprimeArmazem@@Base+0x140>
   112d0:	movw	r0, #8540	; 0x215c
   112d4:	movt	r0, #1
   112d8:	bl	10b08 <printf@plt>
   112dc:	b	112e0 <imprimeArmazem@@Base+0x144>
   112e0:	ldr	r0, [fp, #-8]
   112e4:	add	r0, r0, #1
   112e8:	str	r0, [fp, #-8]
   112ec:	b	11294 <imprimeArmazem@@Base+0xf8>
   112f0:	movw	r0, #7910	; 0x1ee6
   112f4:	movt	r0, #1
   112f8:	bl	10b08 <printf@plt>
   112fc:	ldr	r0, [fp, #-12]
   11300:	mvn	r1, #0
   11304:	add	r0, r0, r1
   11308:	str	r0, [fp, #-12]
   1130c:	b	11274 <imprimeArmazem@@Base+0xd8>
   11310:	movw	r0, #8547	; 0x2163
   11314:	movt	r0, #1
   11318:	bl	10b08 <printf@plt>
   1131c:	movw	r1, #0
   11320:	str	r1, [fp, #-8]
   11324:	ldr	r0, [fp, #-8]
   11328:	ldr	r1, [fp, #-4]
   1132c:	ldr	r1, [r1]
   11330:	cmp	r0, r1
   11334:	bge	11354 <imprimeArmazem@@Base+0x1b8>
   11338:	movw	r0, #8545	; 0x2161
   1133c:	movt	r0, #1
   11340:	bl	10b08 <printf@plt>
   11344:	ldr	r0, [fp, #-8]
   11348:	add	r0, r0, #1
   1134c:	str	r0, [fp, #-8]
   11350:	b	11324 <imprimeArmazem@@Base+0x188>
   11354:	movw	r0, #7909	; 0x1ee5
   11358:	movt	r0, #1
   1135c:	bl	10b08 <printf@plt>
   11360:	ldr	r1, [sp, #8]
   11364:	str	r0, [sp]
   11368:	mov	r0, r1
   1136c:	bl	10b14 <free@plt>
   11370:	mov	sp, fp
   11374:	pop	{fp, pc}

00011378 <armazem_novo@@Base>:
   11378:	push	{fp, lr}
   1137c:	mov	fp, sp
   11380:	sub	sp, sp, #16
   11384:	str	r0, [fp, #-4]
   11388:	str	r1, [sp, #8]
   1138c:	movw	r0, #12
   11390:	bl	10b2c <malloc@plt>
   11394:	movw	r1, #6132	; 0x17f4
   11398:	movt	r1, #1
   1139c:	str	r0, [sp]
   113a0:	ldr	r0, [fp, #-4]
   113a4:	ldr	r2, [sp]
   113a8:	str	r0, [r2]
   113ac:	ldr	r0, [sp, #8]
   113b0:	ldr	r2, [sp]
   113b4:	str	r0, [r2, #4]
   113b8:	blx	r1
   113bc:	ldr	r1, [sp]
   113c0:	str	r0, [r1, #8]
   113c4:	ldr	r0, [sp]
   113c8:	mov	sp, fp
   113cc:	pop	{fp, pc}

000113d0 <armazem_vazio@@Base>:
   113d0:	push	{fp, lr}
   113d4:	mov	fp, sp
   113d8:	sub	sp, sp, #8
   113dc:	str	r0, [sp]
   113e0:	ldr	r0, [sp]
   113e4:	movw	r1, #0
   113e8:	cmp	r0, r1
   113ec:	beq	11404 <armazem_vazio@@Base+0x34>
   113f0:	ldr	r0, [sp]
   113f4:	ldr	r0, [r0, #8]
   113f8:	bl	118d4 <fila_tamanho@@Base>
   113fc:	cmp	r0, #0
   11400:	bne	11410 <armazem_vazio@@Base+0x40>
   11404:	movw	r0, #1
   11408:	str	r0, [sp, #4]
   1140c:	b	11418 <armazem_vazio@@Base+0x48>
   11410:	movw	r0, #0
   11414:	str	r0, [sp, #4]
   11418:	ldr	r0, [sp, #4]
   1141c:	mov	sp, fp
   11420:	pop	{fp, pc}

00011424 <armazem_cheio@@Base>:
   11424:	push	{fp, lr}
   11428:	mov	fp, sp
   1142c:	sub	sp, sp, #8
   11430:	str	r0, [sp]
   11434:	ldr	r0, [sp]
   11438:	bl	113d0 <armazem_vazio@@Base>
   1143c:	cmp	r0, #0
   11440:	beq	11450 <armazem_cheio@@Base+0x2c>
   11444:	movw	r0, #0
   11448:	str	r0, [sp, #4]
   1144c:	b	114a0 <armazem_cheio@@Base+0x7c>
   11450:	ldr	r0, [sp]
   11454:	ldr	r0, [r0, #8]
   11458:	bl	118d4 <fila_tamanho@@Base>
   1145c:	ldr	r1, [sp]
   11460:	ldr	r1, [r1]
   11464:	cmp	r0, r1
   11468:	bne	11498 <armazem_cheio@@Base+0x74>
   1146c:	ldr	r0, [sp]
   11470:	ldr	r0, [r0, #8]
   11474:	bl	11968 <fila_back@@Base>
   11478:	ldr	r0, [r0, #4]
   1147c:	ldr	r1, [sp]
   11480:	ldr	r1, [r1, #4]
   11484:	cmp	r0, r1
   11488:	bne	11498 <armazem_cheio@@Base+0x74>
   1148c:	movw	r0, #1
   11490:	str	r0, [sp, #4]
   11494:	b	114a0 <armazem_cheio@@Base+0x7c>
   11498:	movw	r0, #0
   1149c:	str	r0, [sp, #4]
   114a0:	ldr	r0, [sp, #4]
   114a4:	mov	sp, fp
   114a8:	pop	{fp, pc}

000114ac <armazenar_contentor@@Base>:
   114ac:	push	{fp, lr}
   114b0:	mov	fp, sp
   114b4:	sub	sp, sp, #24
   114b8:	movw	r2, #7116	; 0x1bcc
   114bc:	movt	r2, #1
   114c0:	str	r0, [fp, #-8]
   114c4:	str	r1, [sp, #12]
   114c8:	blx	r2
   114cc:	str	r0, [sp, #8]
   114d0:	ldr	r0, [fp, #-8]
   114d4:	movw	r1, #0
   114d8:	cmp	r0, r1
   114dc:	beq	11500 <armazenar_contentor@@Base+0x54>
   114e0:	ldr	r0, [sp, #12]
   114e4:	movw	r1, #0
   114e8:	cmp	r0, r1
   114ec:	beq	11500 <armazenar_contentor@@Base+0x54>
   114f0:	ldr	r0, [fp, #-8]
   114f4:	bl	11424 <armazem_cheio@@Base>
   114f8:	cmp	r0, #0
   114fc:	beq	1150c <armazenar_contentor@@Base+0x60>
   11500:	movw	r0, #0
   11504:	str	r0, [fp, #-4]
   11508:	b	11594 <armazenar_contentor@@Base+0xe8>
   1150c:	ldr	r0, [fp, #-8]
   11510:	bl	113d0 <armazem_vazio@@Base>
   11514:	cmp	r0, #0
   11518:	beq	11548 <armazenar_contentor@@Base+0x9c>
   1151c:	movw	r0, #7116	; 0x1bcc
   11520:	movt	r0, #1
   11524:	ldr	r1, [fp, #-8]
   11528:	ldr	r1, [r1, #8]
   1152c:	str	r1, [sp, #4]
   11530:	blx	r0
   11534:	ldr	r1, [sp, #4]
   11538:	str	r0, [sp]
   1153c:	mov	r0, r1
   11540:	ldr	r1, [sp]
   11544:	bl	119e4 <fila_push@@Base>
   11548:	ldr	r0, [fp, #-8]
   1154c:	ldr	r0, [r0, #8]
   11550:	bl	11968 <fila_back@@Base>
   11554:	ldr	r0, [r0, #4]
   11558:	ldr	r1, [fp, #-8]
   1155c:	ldr	r1, [r1, #4]
   11560:	cmp	r0, r1
   11564:	bne	11578 <armazenar_contentor@@Base+0xcc>
   11568:	ldr	r0, [fp, #-8]
   1156c:	ldr	r0, [r0, #8]
   11570:	ldr	r1, [sp, #8]
   11574:	bl	119e4 <fila_push@@Base>
   11578:	ldr	r0, [fp, #-8]
   1157c:	ldr	r0, [r0, #8]
   11580:	bl	11968 <fila_back@@Base>
   11584:	ldr	r1, [sp, #12]
   11588:	bl	11d40 <pilha_push@@Base>
   1158c:	movw	r0, #1
   11590:	str	r0, [fp, #-4]
   11594:	ldr	r0, [fp, #-4]
   11598:	mov	sp, fp
   1159c:	pop	{fp, pc}

000115a0 <expedir_contentor@@Base>:
   115a0:	push	{fp, lr}
   115a4:	mov	fp, sp
   115a8:	sub	sp, sp, #16
   115ac:	str	r0, [sp, #8]
   115b0:	ldr	r0, [sp, #8]
   115b4:	bl	113d0 <armazem_vazio@@Base>
   115b8:	cmp	r0, #0
   115bc:	bne	115dc <expedir_contentor@@Base+0x3c>
   115c0:	ldr	r0, [sp, #8]
   115c4:	ldr	r0, [r0, #8]
   115c8:	bl	11910 <fila_front@@Base>
   115cc:	bl	11ce8 <pilha_top@@Base>
   115d0:	movw	r1, #0
   115d4:	cmp	r0, r1
   115d8:	bne	115e8 <expedir_contentor@@Base+0x48>
   115dc:	movw	r0, #0
   115e0:	str	r0, [fp, #-4]
   115e4:	b	11664 <expedir_contentor@@Base+0xc4>
   115e8:	ldr	r0, [sp, #8]
   115ec:	ldr	r0, [r0, #8]
   115f0:	bl	11910 <fila_front@@Base>
   115f4:	bl	11ce8 <pilha_top@@Base>
   115f8:	ldr	r0, [r0]
   115fc:	ldr	r1, [sp, #8]
   11600:	ldr	r1, [r1, #8]
   11604:	str	r0, [sp]
   11608:	mov	r0, r1
   1160c:	bl	11910 <fila_front@@Base>
   11610:	bl	11ce8 <pilha_top@@Base>
   11614:	vldr	s0, [r0, #4]
   11618:	ldr	r0, [sp]
   1161c:	bl	11670 <contentor_novo@@Base>
   11620:	str	r0, [sp, #4]
   11624:	ldr	r0, [sp, #8]
   11628:	ldr	r0, [r0, #8]
   1162c:	bl	11910 <fila_front@@Base>
   11630:	ldr	r0, [r0, #4]
   11634:	cmp	r0, #1
   11638:	bgt	1164c <expedir_contentor@@Base+0xac>
   1163c:	ldr	r0, [sp, #8]
   11640:	ldr	r0, [r0, #8]
   11644:	bl	11aac <fila_pop@@Base>
   11648:	b	1165c <expedir_contentor@@Base+0xbc>
   1164c:	ldr	r0, [sp, #8]
   11650:	ldr	r0, [r0, #8]
   11654:	bl	11910 <fila_front@@Base>
   11658:	bl	11de4 <pilha_pop@@Base>
   1165c:	ldr	r0, [sp, #4]
   11660:	str	r0, [fp, #-4]
   11664:	ldr	r0, [fp, #-4]
   11668:	mov	sp, fp
   1166c:	pop	{fp, pc}

00011670 <contentor_novo@@Base>:
   11670:	push	{fp, lr}
   11674:	mov	fp, sp
   11678:	sub	sp, sp, #24
   1167c:	str	r0, [fp, #-4]
   11680:	vstr	s0, [fp, #-8]
   11684:	mov	r0, #8
   11688:	bl	10b2c <malloc@plt>
   1168c:	str	r0, [sp, #12]
   11690:	ldr	r0, [fp, #-4]
   11694:	bl	10b50 <strlen@plt>
   11698:	add	r0, r0, #1
   1169c:	mov	r1, r0
   116a0:	str	r1, [sp, #8]
   116a4:	bl	10b2c <malloc@plt>
   116a8:	ldr	r1, [sp, #12]
   116ac:	str	r0, [r1]
   116b0:	ldr	r0, [sp, #12]
   116b4:	ldr	r0, [r0]
   116b8:	ldr	r1, [fp, #-4]
   116bc:	bl	10b20 <strcpy@plt>
   116c0:	vldr	s0, [fp, #-8]
   116c4:	ldr	r1, [sp, #12]
   116c8:	vstr	s0, [r1, #4]
   116cc:	ldr	r1, [sp, #12]
   116d0:	str	r0, [sp, #4]
   116d4:	mov	r0, r1
   116d8:	mov	sp, fp
   116dc:	pop	{fp, pc}

000116e0 <contentor_apaga@@Base>:
   116e0:	push	{fp, lr}
   116e4:	mov	fp, sp
   116e8:	sub	sp, sp, #8
   116ec:	str	r0, [sp, #4]
   116f0:	ldr	r0, [sp, #4]
   116f4:	ldr	r0, [r0]
   116f8:	bl	10b14 <free@plt>
   116fc:	ldr	r0, [sp, #4]
   11700:	bl	10b14 <free@plt>
   11704:	mov	sp, fp
   11708:	pop	{fp, pc}

0001170c <contentor_imprime@@Base>:
   1170c:	push	{fp, lr}
   11710:	mov	fp, sp
   11714:	sub	sp, sp, #8
   11718:	str	r0, [sp, #4]
   1171c:	ldr	r0, [sp, #4]
   11720:	movw	r1, #0
   11724:	cmp	r0, r1
   11728:	bne	1173c <contentor_imprime@@Base+0x30>
   1172c:	movw	r0, #8550	; 0x2166
   11730:	movt	r0, #1
   11734:	bl	10b08 <printf@plt>
   11738:	b	11760 <contentor_imprime@@Base+0x54>
   1173c:	ldr	r0, [sp, #4]
   11740:	ldr	r1, [r0]
   11744:	ldr	r0, [sp, #4]
   11748:	vldr	s0, [r0, #4]
   1174c:	vcvt.f64.f32	d16, s0
   11750:	movw	r0, #8566	; 0x2176
   11754:	movt	r0, #1
   11758:	vmov	r2, r3, d16
   1175c:	bl	10b08 <printf@plt>
   11760:	mov	sp, fp
   11764:	pop	{fp, pc}

00011768 <fila_novo_elemento@@Base>:
   11768:	push	{fp, lr}
   1176c:	mov	fp, sp
   11770:	sub	sp, sp, #16
   11774:	str	r0, [sp, #8]
   11778:	movw	r0, #8
   1177c:	bl	10b2c <malloc@plt>
   11780:	str	r0, [sp, #4]
   11784:	ldr	r0, [sp, #4]
   11788:	movw	r1, #0
   1178c:	cmp	r0, r1
   11790:	bne	117a0 <fila_novo_elemento@@Base+0x38>
   11794:	movw	r0, #0
   11798:	str	r0, [fp, #-4]
   1179c:	b	117e8 <fila_novo_elemento@@Base+0x80>
   117a0:	ldr	r0, [sp, #8]
   117a4:	ldr	r1, [sp, #4]
   117a8:	str	r0, [r1]
   117ac:	ldr	r0, [sp, #4]
   117b0:	ldr	r0, [r0]
   117b4:	movw	r1, #0
   117b8:	cmp	r0, r1
   117bc:	bne	117d4 <fila_novo_elemento@@Base+0x6c>
   117c0:	ldr	r0, [sp, #4]
   117c4:	bl	10b14 <free@plt>
   117c8:	movw	r0, #0
   117cc:	str	r0, [fp, #-4]
   117d0:	b	117e8 <fila_novo_elemento@@Base+0x80>
   117d4:	ldr	r0, [sp, #4]
   117d8:	movw	r1, #0
   117dc:	str	r1, [r0, #4]
   117e0:	ldr	r0, [sp, #4]
   117e4:	str	r0, [fp, #-4]
   117e8:	ldr	r0, [fp, #-4]
   117ec:	mov	sp, fp
   117f0:	pop	{fp, pc}

000117f4 <fila_nova@@Base>:
   117f4:	push	{fp, lr}
   117f8:	mov	fp, sp
   117fc:	sub	sp, sp, #8
   11800:	movw	r0, #8
   11804:	bl	10b2c <malloc@plt>
   11808:	str	r0, [sp]
   1180c:	ldr	r0, [sp]
   11810:	movw	r1, #0
   11814:	cmp	r0, r1
   11818:	bne	11828 <fila_nova@@Base+0x34>
   1181c:	movw	r0, #0
   11820:	str	r0, [sp, #4]
   11824:	b	11844 <fila_nova@@Base+0x50>
   11828:	ldr	r0, [sp]
   1182c:	movw	r1, #0
   11830:	str	r1, [r0]
   11834:	ldr	r0, [sp]
   11838:	str	r1, [r0, #4]
   1183c:	ldr	r0, [sp]
   11840:	str	r0, [sp, #4]
   11844:	ldr	r0, [sp, #4]
   11848:	mov	sp, fp
   1184c:	pop	{fp, pc}

00011850 <fila_apaga@@Base>:
   11850:	push	{fp, lr}
   11854:	mov	fp, sp
   11858:	sub	sp, sp, #8
   1185c:	str	r0, [sp, #4]
   11860:	ldr	r0, [sp, #4]
   11864:	movw	r1, #0
   11868:	cmp	r0, r1
   1186c:	bne	11874 <fila_apaga@@Base+0x24>
   11870:	b	118cc <fila_apaga@@Base+0x7c>
   11874:	b	11878 <fila_apaga@@Base+0x28>
   11878:	ldr	r0, [sp, #4]
   1187c:	ldr	r0, [r0]
   11880:	movw	r1, #0
   11884:	cmp	r0, r1
   11888:	beq	118c4 <fila_apaga@@Base+0x74>
   1188c:	ldr	r0, [sp, #4]
   11890:	ldr	r0, [r0]
   11894:	str	r0, [sp]
   11898:	ldr	r0, [sp, #4]
   1189c:	ldr	r0, [r0]
   118a0:	ldr	r0, [r0, #4]
   118a4:	ldr	r1, [sp, #4]
   118a8:	str	r0, [r1]
   118ac:	ldr	r0, [sp]
   118b0:	ldr	r0, [r0]
   118b4:	bl	11c28 <pilha_apaga@@Base>
   118b8:	ldr	r0, [sp]
   118bc:	bl	10b14 <free@plt>
   118c0:	b	11878 <fila_apaga@@Base+0x28>
   118c4:	ldr	r0, [sp, #4]
   118c8:	bl	10b14 <free@plt>
   118cc:	mov	sp, fp
   118d0:	pop	{fp, pc}

000118d4 <fila_tamanho@@Base>:
   118d4:	sub	sp, sp, #8
   118d8:	str	r0, [sp]
   118dc:	ldr	r0, [sp]
   118e0:	movw	r1, #0
   118e4:	cmp	r0, r1
   118e8:	bne	118f8 <fila_tamanho@@Base+0x24>
   118ec:	mvn	r0, #0
   118f0:	str	r0, [sp, #4]
   118f4:	b	11904 <fila_tamanho@@Base+0x30>
   118f8:	ldr	r0, [sp]
   118fc:	ldr	r0, [r0, #4]
   11900:	str	r0, [sp, #4]
   11904:	ldr	r0, [sp, #4]
   11908:	add	sp, sp, #8
   1190c:	bx	lr

00011910 <fila_front@@Base>:
   11910:	sub	sp, sp, #12
   11914:	str	r0, [sp, #4]
   11918:	ldr	r0, [sp, #4]
   1191c:	movw	r1, #0
   11920:	cmp	r0, r1
   11924:	beq	11938 <fila_front@@Base+0x28>
   11928:	ldr	r0, [sp, #4]
   1192c:	ldr	r0, [r0, #4]
   11930:	cmp	r0, #0
   11934:	bne	11944 <fila_front@@Base+0x34>
   11938:	movw	r0, #0
   1193c:	str	r0, [sp, #8]
   11940:	b	1195c <fila_front@@Base+0x4c>
   11944:	ldr	r0, [sp, #4]
   11948:	ldr	r0, [r0]
   1194c:	str	r0, [sp]
   11950:	ldr	r0, [sp]
   11954:	ldr	r0, [r0]
   11958:	str	r0, [sp, #8]
   1195c:	ldr	r0, [sp, #8]
   11960:	add	sp, sp, #12
   11964:	bx	lr

00011968 <fila_back@@Base>:
   11968:	sub	sp, sp, #12
   1196c:	str	r0, [sp, #4]
   11970:	ldr	r0, [sp, #4]
   11974:	movw	r1, #0
   11978:	cmp	r0, r1
   1197c:	beq	11990 <fila_back@@Base+0x28>
   11980:	ldr	r0, [sp, #4]
   11984:	ldr	r0, [r0, #4]
   11988:	cmp	r0, #0
   1198c:	bne	1199c <fila_back@@Base+0x34>
   11990:	movw	r0, #0
   11994:	str	r0, [sp, #8]
   11998:	b	119d8 <fila_back@@Base+0x70>
   1199c:	ldr	r0, [sp, #4]
   119a0:	ldr	r0, [r0]
   119a4:	str	r0, [sp]
   119a8:	ldr	r0, [sp]
   119ac:	ldr	r0, [r0, #4]
   119b0:	movw	r1, #0
   119b4:	cmp	r0, r1
   119b8:	beq	119cc <fila_back@@Base+0x64>
   119bc:	ldr	r0, [sp]
   119c0:	ldr	r0, [r0, #4]
   119c4:	str	r0, [sp]
   119c8:	b	119a8 <fila_back@@Base+0x40>
   119cc:	ldr	r0, [sp]
   119d0:	ldr	r0, [r0]
   119d4:	str	r0, [sp, #8]
   119d8:	ldr	r0, [sp, #8]
   119dc:	add	sp, sp, #12
   119e0:	bx	lr

000119e4 <fila_push@@Base>:
   119e4:	push	{fp, lr}
   119e8:	mov	fp, sp
   119ec:	sub	sp, sp, #24
   119f0:	str	r0, [fp, #-4]
   119f4:	str	r1, [fp, #-8]
   119f8:	movw	r0, #0
   119fc:	str	r0, [sp, #12]
   11a00:	str	r0, [sp, #8]
   11a04:	ldr	r1, [fp, #-4]
   11a08:	cmp	r1, r0
   11a0c:	bne	11a14 <fila_push@@Base+0x30>
   11a10:	b	11aa4 <fila_push@@Base+0xc0>
   11a14:	ldr	r0, [fp, #-4]
   11a18:	ldr	r0, [r0]
   11a1c:	str	r0, [sp, #4]
   11a20:	ldr	r0, [fp, #-8]
   11a24:	bl	11768 <fila_novo_elemento@@Base>
   11a28:	str	r0, [sp, #8]
   11a2c:	ldr	r0, [sp, #8]
   11a30:	movw	r1, #0
   11a34:	cmp	r0, r1
   11a38:	bne	11a40 <fila_push@@Base+0x5c>
   11a3c:	b	11aa4 <fila_push@@Base+0xc0>
   11a40:	ldr	r0, [fp, #-4]
   11a44:	ldr	r1, [r0, #4]
   11a48:	add	r1, r1, #1
   11a4c:	str	r1, [r0, #4]
   11a50:	ldr	r0, [sp, #4]
   11a54:	movw	r1, #0
   11a58:	cmp	r0, r1
   11a5c:	bne	11a70 <fila_push@@Base+0x8c>
   11a60:	ldr	r0, [sp, #8]
   11a64:	ldr	r1, [fp, #-4]
   11a68:	str	r0, [r1]
   11a6c:	b	11aa4 <fila_push@@Base+0xc0>
   11a70:	b	11a74 <fila_push@@Base+0x90>
   11a74:	ldr	r0, [sp, #4]
   11a78:	ldr	r0, [r0, #4]
   11a7c:	movw	r1, #0
   11a80:	cmp	r0, r1
   11a84:	beq	11a98 <fila_push@@Base+0xb4>
   11a88:	ldr	r0, [sp, #4]
   11a8c:	ldr	r0, [r0, #4]
   11a90:	str	r0, [sp, #4]
   11a94:	b	11a74 <fila_push@@Base+0x90>
   11a98:	ldr	r0, [sp, #8]
   11a9c:	ldr	r1, [sp, #4]
   11aa0:	str	r0, [r1, #4]
   11aa4:	mov	sp, fp
   11aa8:	pop	{fp, pc}

00011aac <fila_pop@@Base>:
   11aac:	push	{fp, lr}
   11ab0:	mov	fp, sp
   11ab4:	sub	sp, sp, #16
   11ab8:	str	r0, [fp, #-4]
   11abc:	movw	r0, #0
   11ac0:	str	r0, [sp, #8]
   11ac4:	ldr	r1, [fp, #-4]
   11ac8:	cmp	r1, r0
   11acc:	beq	11ae0 <fila_pop@@Base+0x34>
   11ad0:	ldr	r0, [fp, #-4]
   11ad4:	ldr	r0, [r0, #4]
   11ad8:	cmp	r0, #0
   11adc:	bne	11ae4 <fila_pop@@Base+0x38>
   11ae0:	b	11b28 <fila_pop@@Base+0x7c>
   11ae4:	ldr	r0, [fp, #-4]
   11ae8:	ldr	r0, [r0]
   11aec:	str	r0, [sp, #4]
   11af0:	ldr	r0, [fp, #-4]
   11af4:	ldr	r1, [r0, #4]
   11af8:	mvn	r2, #0
   11afc:	add	r1, r1, r2
   11b00:	str	r1, [r0, #4]
   11b04:	ldr	r0, [sp, #4]
   11b08:	ldr	r0, [r0, #4]
   11b0c:	ldr	r1, [fp, #-4]
   11b10:	str	r0, [r1]
   11b14:	ldr	r0, [sp, #4]
   11b18:	ldr	r0, [r0]
   11b1c:	bl	11c28 <pilha_apaga@@Base>
   11b20:	ldr	r0, [sp, #4]
   11b24:	bl	10b14 <free@plt>
   11b28:	mov	sp, fp
   11b2c:	pop	{fp, pc}

00011b30 <pilha_novo_elemento@@Base>:
   11b30:	push	{fp, lr}
   11b34:	mov	fp, sp
   11b38:	sub	sp, sp, #16
   11b3c:	str	r0, [sp, #8]
   11b40:	movw	r0, #8
   11b44:	bl	10b2c <malloc@plt>
   11b48:	str	r0, [sp, #4]
   11b4c:	ldr	r0, [sp, #4]
   11b50:	movw	r1, #0
   11b54:	cmp	r0, r1
   11b58:	bne	11b68 <pilha_novo_elemento@@Base+0x38>
   11b5c:	movw	r0, #0
   11b60:	str	r0, [fp, #-4]
   11b64:	b	11bc0 <pilha_novo_elemento@@Base+0x90>
   11b68:	ldr	r0, [sp, #8]
   11b6c:	ldr	r0, [r0]
   11b70:	ldr	r1, [sp, #8]
   11b74:	vldr	s0, [r1, #4]
   11b78:	bl	11670 <contentor_novo@@Base>
   11b7c:	ldr	r1, [sp, #4]
   11b80:	str	r0, [r1]
   11b84:	ldr	r0, [sp, #4]
   11b88:	ldr	r0, [r0]
   11b8c:	movw	r1, #0
   11b90:	cmp	r0, r1
   11b94:	bne	11bac <pilha_novo_elemento@@Base+0x7c>
   11b98:	ldr	r0, [sp, #4]
   11b9c:	bl	10b14 <free@plt>
   11ba0:	movw	r0, #0
   11ba4:	str	r0, [fp, #-4]
   11ba8:	b	11bc0 <pilha_novo_elemento@@Base+0x90>
   11bac:	ldr	r0, [sp, #4]
   11bb0:	movw	r1, #0
   11bb4:	str	r1, [r0, #4]
   11bb8:	ldr	r0, [sp, #4]
   11bbc:	str	r0, [fp, #-4]
   11bc0:	ldr	r0, [fp, #-4]
   11bc4:	mov	sp, fp
   11bc8:	pop	{fp, pc}

00011bcc <pilha_nova@@Base>:
   11bcc:	push	{fp, lr}
   11bd0:	mov	fp, sp
   11bd4:	sub	sp, sp, #8
   11bd8:	movw	r0, #8
   11bdc:	bl	10b2c <malloc@plt>
   11be0:	str	r0, [sp]
   11be4:	ldr	r0, [sp]
   11be8:	movw	r1, #0
   11bec:	cmp	r0, r1
   11bf0:	bne	11c00 <pilha_nova@@Base+0x34>
   11bf4:	movw	r0, #0
   11bf8:	str	r0, [sp, #4]
   11bfc:	b	11c1c <pilha_nova@@Base+0x50>
   11c00:	ldr	r0, [sp]
   11c04:	movw	r1, #0
   11c08:	str	r1, [r0]
   11c0c:	ldr	r0, [sp]
   11c10:	str	r1, [r0, #4]
   11c14:	ldr	r0, [sp]
   11c18:	str	r0, [sp, #4]
   11c1c:	ldr	r0, [sp, #4]
   11c20:	mov	sp, fp
   11c24:	pop	{fp, pc}

00011c28 <pilha_apaga@@Base>:
   11c28:	push	{fp, lr}
   11c2c:	mov	fp, sp
   11c30:	sub	sp, sp, #8
   11c34:	str	r0, [sp, #4]
   11c38:	ldr	r0, [sp, #4]
   11c3c:	movw	r1, #0
   11c40:	cmp	r0, r1
   11c44:	bne	11c4c <pilha_apaga@@Base+0x24>
   11c48:	b	11ca4 <pilha_apaga@@Base+0x7c>
   11c4c:	b	11c50 <pilha_apaga@@Base+0x28>
   11c50:	ldr	r0, [sp, #4]
   11c54:	ldr	r0, [r0]
   11c58:	movw	r1, #0
   11c5c:	cmp	r0, r1
   11c60:	beq	11c9c <pilha_apaga@@Base+0x74>
   11c64:	ldr	r0, [sp, #4]
   11c68:	ldr	r0, [r0]
   11c6c:	str	r0, [sp]
   11c70:	ldr	r0, [sp, #4]
   11c74:	ldr	r0, [r0]
   11c78:	ldr	r0, [r0, #4]
   11c7c:	ldr	r1, [sp, #4]
   11c80:	str	r0, [r1]
   11c84:	ldr	r0, [sp]
   11c88:	ldr	r0, [r0]
   11c8c:	bl	116e0 <contentor_apaga@@Base>
   11c90:	ldr	r0, [sp]
   11c94:	bl	10b14 <free@plt>
   11c98:	b	11c50 <pilha_apaga@@Base+0x28>
   11c9c:	ldr	r0, [sp, #4]
   11ca0:	bl	10b14 <free@plt>
   11ca4:	mov	sp, fp
   11ca8:	pop	{fp, pc}

00011cac <pilha_tamanho@@Base>:
   11cac:	sub	sp, sp, #8
   11cb0:	str	r0, [sp]
   11cb4:	ldr	r0, [sp]
   11cb8:	movw	r1, #0
   11cbc:	cmp	r0, r1
   11cc0:	bne	11cd0 <pilha_tamanho@@Base+0x24>
   11cc4:	mvn	r0, #0
   11cc8:	str	r0, [sp, #4]
   11ccc:	b	11cdc <pilha_tamanho@@Base+0x30>
   11cd0:	ldr	r0, [sp]
   11cd4:	ldr	r0, [r0, #4]
   11cd8:	str	r0, [sp, #4]
   11cdc:	ldr	r0, [sp, #4]
   11ce0:	add	sp, sp, #8
   11ce4:	bx	lr

00011ce8 <pilha_top@@Base>:
   11ce8:	sub	sp, sp, #12
   11cec:	str	r0, [sp, #4]
   11cf0:	ldr	r0, [sp, #4]
   11cf4:	movw	r1, #0
   11cf8:	cmp	r0, r1
   11cfc:	beq	11d10 <pilha_top@@Base+0x28>
   11d00:	ldr	r0, [sp, #4]
   11d04:	ldr	r0, [r0, #4]
   11d08:	cmp	r0, #0
   11d0c:	bne	11d1c <pilha_top@@Base+0x34>
   11d10:	movw	r0, #0
   11d14:	str	r0, [sp, #8]
   11d18:	b	11d34 <pilha_top@@Base+0x4c>
   11d1c:	ldr	r0, [sp, #4]
   11d20:	ldr	r0, [r0]
   11d24:	str	r0, [sp]
   11d28:	ldr	r0, [sp]
   11d2c:	ldr	r0, [r0]
   11d30:	str	r0, [sp, #8]
   11d34:	ldr	r0, [sp, #8]
   11d38:	add	sp, sp, #12
   11d3c:	bx	lr

00011d40 <pilha_push@@Base>:
   11d40:	push	{fp, lr}
   11d44:	mov	fp, sp
   11d48:	sub	sp, sp, #16
   11d4c:	str	r0, [fp, #-4]
   11d50:	str	r1, [sp, #8]
   11d54:	movw	r0, #0
   11d58:	str	r0, [sp, #4]
   11d5c:	ldr	r1, [fp, #-4]
   11d60:	cmp	r1, r0
   11d64:	bne	11d6c <pilha_push@@Base+0x2c>
   11d68:	b	11ddc <pilha_push@@Base+0x9c>
   11d6c:	ldr	r0, [sp, #8]
   11d70:	bl	11b30 <pilha_novo_elemento@@Base>
   11d74:	str	r0, [sp, #4]
   11d78:	ldr	r0, [sp, #4]
   11d7c:	movw	r1, #0
   11d80:	cmp	r0, r1
   11d84:	bne	11d8c <pilha_push@@Base+0x4c>
   11d88:	b	11ddc <pilha_push@@Base+0x9c>
   11d8c:	ldr	r0, [fp, #-4]
   11d90:	ldr	r1, [r0, #4]
   11d94:	add	r1, r1, #1
   11d98:	str	r1, [r0, #4]
   11d9c:	ldr	r0, [fp, #-4]
   11da0:	ldr	r0, [r0]
   11da4:	movw	r1, #0
   11da8:	cmp	r0, r1
   11dac:	bne	11dc0 <pilha_push@@Base+0x80>
   11db0:	ldr	r0, [sp, #4]
   11db4:	ldr	r1, [fp, #-4]
   11db8:	str	r0, [r1]
   11dbc:	b	11ddc <pilha_push@@Base+0x9c>
   11dc0:	ldr	r0, [fp, #-4]
   11dc4:	ldr	r0, [r0]
   11dc8:	ldr	r1, [sp, #4]
   11dcc:	str	r0, [r1, #4]
   11dd0:	ldr	r0, [sp, #4]
   11dd4:	ldr	r1, [fp, #-4]
   11dd8:	str	r0, [r1]
   11ddc:	mov	sp, fp
   11de0:	pop	{fp, pc}

00011de4 <pilha_pop@@Base>:
   11de4:	push	{fp, lr}
   11de8:	mov	fp, sp
   11dec:	sub	sp, sp, #8
   11df0:	str	r0, [sp, #4]
   11df4:	ldr	r0, [sp, #4]
   11df8:	movw	r1, #0
   11dfc:	cmp	r0, r1
   11e00:	beq	11e14 <pilha_pop@@Base+0x30>
   11e04:	ldr	r0, [sp, #4]
   11e08:	ldr	r0, [r0, #4]
   11e0c:	cmp	r0, #0
   11e10:	bne	11e18 <pilha_pop@@Base+0x34>
   11e14:	b	11e5c <pilha_pop@@Base+0x78>
   11e18:	ldr	r0, [sp, #4]
   11e1c:	ldr	r0, [r0]
   11e20:	str	r0, [sp]
   11e24:	ldr	r0, [sp]
   11e28:	ldr	r0, [r0, #4]
   11e2c:	ldr	r1, [sp, #4]
   11e30:	str	r0, [r1]
   11e34:	ldr	r0, [sp, #4]
   11e38:	ldr	r1, [r0, #4]
   11e3c:	mvn	r2, #0
   11e40:	add	r1, r1, r2
   11e44:	str	r1, [r0, #4]
   11e48:	ldr	r0, [sp]
   11e4c:	ldr	r0, [r0]
   11e50:	bl	116e0 <contentor_apaga@@Base>
   11e54:	ldr	r0, [sp]
   11e58:	bl	10b14 <free@plt>
   11e5c:	mov	sp, fp
   11e60:	pop	{fp, pc}

00011e64 <__libc_csu_init@@Base>:
   11e64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e68:	mov	r7, r0
   11e6c:	ldr	r6, [pc, #72]	; 11ebc <__libc_csu_init@@Base+0x58>
   11e70:	ldr	r5, [pc, #72]	; 11ec0 <__libc_csu_init@@Base+0x5c>
   11e74:	add	r6, pc, r6
   11e78:	add	r5, pc, r5
   11e7c:	sub	r6, r6, r5
   11e80:	mov	r8, r1
   11e84:	mov	r9, r2
   11e88:	bl	10adc <calloc@plt-0x20>
   11e8c:	asrs	r6, r6, #2
   11e90:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e94:	mov	r4, #0
   11e98:	add	r4, r4, #1
   11e9c:	ldr	r3, [r5], #4
   11ea0:	mov	r2, r9
   11ea4:	mov	r1, r8
   11ea8:	mov	r0, r7
   11eac:	blx	r3
   11eb0:	cmp	r6, r4
   11eb4:	bne	11e98 <__libc_csu_init@@Base+0x34>
   11eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ebc:	muleq	r1, r0, r0
   11ec0:	andeq	r1, r1, r8, lsl #1

00011ec4 <__libc_csu_fini@@Base>:
   11ec4:	bx	lr

Disassembly of section .fini:

00011ec8 <.fini>:
   11ec8:	push	{r3, lr}
   11ecc:	pop	{r3, pc}
