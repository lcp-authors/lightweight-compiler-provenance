
../repos/stcorp-coda-3a25f25/CMakeFiles/codafind.dir/tools/codafind/codafind.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_version>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	bl	0 <coda_get_libcoda_version>
  14:	mov	r1, r0
  18:	ldr	r0, [pc, #28]	; 3c <print_version+0x3c>
  1c:	bl	0 <printf>
  20:	ldr	r0, [pc, #28]	; 44 <print_version+0x44>
  24:	bl	0 <printf>
  28:	ldr	r0, [pc, #16]	; 40 <print_version+0x40>
  2c:	bl	0 <printf>
  30:	ldr	lr, [sp, #4]
  34:	add	sp, sp, #8
  38:	bx	lr
  3c:	.word	0x000004c8
  40:	.word	0x0000043a
  44:	.word	0x00000271

00000048 <print_help>:
  48:	mov	ip, sp
  4c:	sub	sp, sp, #8
  50:	str	ip, [sp]
  54:	str	lr, [sp, #4]
  58:	ldr	r0, [pc, #252]	; 15c <print_help+0x114>
  5c:	bl	0 <printf>
  60:	ldr	r0, [pc, #320]	; 1a8 <print_help+0x160>
  64:	bl	0 <printf>
  68:	ldr	r0, [pc, #288]	; 190 <print_help+0x148>
  6c:	bl	0 <printf>
  70:	ldr	r0, [pc, #220]	; 154 <print_help+0x10c>
  74:	bl	0 <printf>
  78:	ldr	r0, [pc, #224]	; 160 <print_help+0x118>
  7c:	bl	0 <printf>
  80:	ldr	r0, [pc, #268]	; 194 <print_help+0x14c>
  84:	bl	0 <printf>
  88:	ldr	r0, [pc, #228]	; 174 <print_help+0x12c>
  8c:	bl	0 <printf>
  90:	ldr	r0, [pc, #276]	; 1ac <print_help+0x164>
  94:	bl	0 <printf>
  98:	ldr	r0, [pc, #236]	; 18c <print_help+0x144>
  9c:	bl	0 <printf>
  a0:	ldr	r0, [pc, #176]	; 158 <print_help+0x110>
  a4:	bl	0 <printf>
  a8:	ldr	r0, [pc, #180]	; 164 <print_help+0x11c>
  ac:	bl	0 <printf>
  b0:	ldr	r0, [pc, #224]	; 198 <print_help+0x150>
  b4:	bl	0 <printf>
  b8:	ldr	r0, [pc, #140]	; 14c <print_help+0x104>
  bc:	bl	0 <printf>
  c0:	ldr	r0, [pc, #212]	; 19c <print_help+0x154>
  c4:	bl	0 <printf>
  c8:	ldr	r0, [pc, #144]	; 160 <print_help+0x118>
  cc:	bl	0 <printf>
  d0:	ldr	r0, [pc, #164]	; 17c <print_help+0x134>
  d4:	bl	0 <printf>
  d8:	ldr	r0, [pc, #112]	; 150 <print_help+0x108>
  dc:	bl	0 <printf>
  e0:	ldr	r0, [pc, #120]	; 160 <print_help+0x118>
  e4:	bl	0 <printf>
  e8:	ldr	r0, [pc, #120]	; 168 <print_help+0x120>
  ec:	bl	0 <printf>
  f0:	ldr	r0, [pc, #120]	; 170 <print_help+0x128>
  f4:	bl	0 <printf>
  f8:	ldr	r0, [pc, #96]	; 160 <print_help+0x118>
  fc:	bl	0 <printf>
 100:	ldr	r0, [pc, #100]	; 16c <print_help+0x124>
 104:	bl	0 <printf>
 108:	ldr	r0, [pc, #112]	; 180 <print_help+0x138>
 10c:	bl	0 <printf>
 110:	ldr	r0, [pc, #136]	; 1a0 <print_help+0x158>
 114:	bl	0 <printf>
 118:	ldr	r0, [pc, #100]	; 184 <print_help+0x13c>
 11c:	bl	0 <printf>
 120:	ldr	r0, [pc, #96]	; 188 <print_help+0x140>
 124:	bl	0 <printf>
 128:	ldr	r0, [pc, #116]	; 1a4 <print_help+0x15c>
 12c:	bl	0 <printf>
 130:	ldr	r0, [pc, #64]	; 178 <print_help+0x130>
 134:	bl	0 <printf>
 138:	ldr	r0, [pc, #32]	; 160 <print_help+0x118>
 13c:	bl	0 <printf>
 140:	ldr	lr, [sp, #4]
 144:	add	sp, sp, #8
 148:	bx	lr
 14c:	.word	0x000003d6
 150:	.word	0x0000059a
 154:	.word	0x0000060e
 158:	.word	0x00000050
 15c:	.word	0x00000162
 160:	.word	0x0000043a
 164:	.word	0x00000626
 168:	.word	0x000004fe
 16c:	.word	0x0000016a
 170:	.word	0x0000051a
 174:	.word	0x000004d5
 178:	.word	0x0000043c
 17c:	.word	0x000003f1
 180:	.word	0x000002a2
 184:	.word	0x000000cf
 188:	.word	0x00000227
 18c:	.word	0x0000040a
 190:	.word	0x00000000
 194:	.word	0x00000341
 198:	.word	0x0000047d
 19c:	.word	0x00000126
 1a0:	.word	0x00000399
 1a4:	.word	0x000005ce
 1a8:	.word	0x00000554
 1ac:	.word	0x0000035e

000001b0 <callback>:
 1b0:	mov	ip, sp
 1b4:	sub	sp, sp, #16
 1b8:	str	ip, [sp]
 1bc:	str	lr, [sp, #4]
 1c0:	str	r4, [sp, #8]
 1c4:	mov	r3, r2
 1c8:	mov	r4, r1
 1cc:	mov	r1, r0
 1d0:	cmp	r4, #0
 1d4:	beq	2b0 <callback+0x100>
 1d8:	cmp	r4, #2
 1dc:	beq	290 <callback+0xe0>
 1e0:	cmp	r4, #1
 1e4:	beq	270 <callback+0xc0>
 1e8:	ldr	ip, [pc, #264]	; 2f8 <callback+0x148>
 1ec:	ldr	ip, [ip]
 1f0:	cmp	ip, #0
 1f4:	beq	25c <callback+0xac>
 1f8:	ldr	r0, [pc, #256]	; 300 <callback+0x150>
 1fc:	bl	0 <printf>
 200:	cmp	r4, #3
 204:	bcs	220 <callback+0x70>
 208:	ldr	r0, [pc, #244]	; 304 <callback+0x154>
 20c:	ldr	r1, [pc, #248]	; 30c <callback+0x15c>
 210:	mov	r2, #110	; 0x6e
 214:	ldr	r3, [pc, #244]	; 310 <callback+0x160>
 218:	bl	0 <__assert_fail>
 21c:	b	2cc <callback+0x11c>
 220:	cmp	r4, #3
 224:	beq	250 <callback+0xa0>
 228:	cmp	r4, #4
 22c:	beq	244 <callback+0x94>
 230:	cmp	r4, #5
 234:	bne	2cc <callback+0x11c>
 238:	ldr	r0, [pc, #168]	; 2e8 <callback+0x138>
 23c:	bl	0 <printf>
 240:	b	2cc <callback+0x11c>
 244:	ldr	r0, [pc, #176]	; 2fc <callback+0x14c>
 248:	bl	0 <printf>
 24c:	b	2cc <callback+0x11c>
 250:	ldr	r0, [pc, #176]	; 308 <callback+0x158>
 254:	bl	0 <printf>
 258:	b	2cc <callback+0x11c>
 25c:	cmp	r4, #4
 260:	bne	2cc <callback+0x11c>
 264:	ldr	r0, [pc, #116]	; 2e0 <callback+0x130>
 268:	bl	0 <printf>
 26c:	b	2cc <callback+0x11c>
 270:	ldr	ip, [pc, #120]	; 2f0 <callback+0x140>
 274:	ldr	r0, [ip]
 278:	ldr	r2, [pc, #116]	; 2f4 <callback+0x144>
 27c:	mov	ip, r1
 280:	mov	r1, r2
 284:	mov	r2, ip
 288:	bl	0 <fprintf>
 28c:	b	2cc <callback+0x11c>
 290:	ldr	r2, [pc, #88]	; 2f0 <callback+0x140>
 294:	ldr	r0, [r2]
 298:	ldr	r2, [pc, #68]	; 2e4 <callback+0x134>
 29c:	mov	r3, r1
 2a0:	mov	r1, r2
 2a4:	mov	r2, r3
 2a8:	bl	0 <fprintf>
 2ac:	b	2cc <callback+0x11c>
 2b0:	ldr	ip, [pc, #56]	; 2f0 <callback+0x140>
 2b4:	ldr	r0, [ip]
 2b8:	ldr	r2, [pc, #44]	; 2ec <callback+0x13c>
 2bc:	mov	ip, r1
 2c0:	mov	r1, r2
 2c4:	mov	r2, ip
 2c8:	bl	0 <fprintf>
 2cc:	mov	r0, #0
 2d0:	ldr	r4, [sp, #8]
 2d4:	ldr	lr, [sp, #4]
 2d8:	add	sp, sp, #16
 2dc:	bx	lr
 2e0:	.word	0x00000596
 2e4:	.word	0x0000030e
 2e8:	.word	0x00000337
 2ec:	.word	0x000002ec
 2f0:	.word	0x00000000
 2f4:	.word	0x000004aa
 2f8:	.word	0x00000000
 2fc:	.word	0x0000054d
 300:	.word	0x0000011c
 304:	.word	0x000004fc
 308:	.word	0x000005b9
 30c:	.word	0x000001c5
 310:	.word	0x00000676

00000314 <main>:
 314:	mov	ip, sp
 318:	sub	sp, sp, #40	; 0x28
 31c:	str	ip, [sp, #4]
 320:	str	lr, [sp, #8]
 324:	str	r4, [sp, #16]
 328:	str	r5, [sp, #20]
 32c:	str	r6, [sp, #24]
 330:	str	r7, [sp, #28]
 334:	str	r8, [sp, #32]
 338:	mov	r4, r1
 33c:	mov	r5, r0
 340:	mov	r6, #0
 344:	ldr	r1, [pc, #936]	; 6f4 <main+0x3e0>
 348:	mov	r3, #0
 34c:	str	r3, [r1]
 350:	mov	r7, #1
 354:	cmp	r5, #1
 358:	beq	378 <main+0x64>
 35c:	ldr	r0, [r4, #4]
 360:	ldr	r1, [pc, #884]	; 6dc <main+0x3c8>
 364:	bl	0 <strcmp>
 368:	cmp	r0, #0
 36c:	moveq	r1, #1
 370:	movne	r1, #0
 374:	b	37c <main+0x68>
 378:	mov	r1, #1
 37c:	cmp	r1, #0
 380:	bne	3a0 <main+0x8c>
 384:	ldr	r0, [r4, #4]
 388:	ldr	r1, [pc, #856]	; 6e8 <main+0x3d4>
 38c:	bl	0 <strcmp>
 390:	cmp	r0, #0
 394:	moveq	r0, #1
 398:	movne	r0, #0
 39c:	b	3a4 <main+0x90>
 3a0:	mov	r0, #1
 3a4:	cmp	r0, #0
 3a8:	beq	3b8 <main+0xa4>
 3ac:	bl	48 <print_help>
 3b0:	mov	r0, #0
 3b4:	bl	0 <exit>
 3b8:	ldr	r0, [r4, #4]
 3bc:	ldr	r1, [pc, #836]	; 708 <main+0x3f4>
 3c0:	bl	0 <strcmp>
 3c4:	cmp	r0, #0
 3c8:	beq	3e8 <main+0xd4>
 3cc:	ldr	r0, [r4, #4]
 3d0:	ldr	r1, [pc, #812]	; 704 <main+0x3f0>
 3d4:	bl	0 <strcmp>
 3d8:	cmp	r0, #0
 3dc:	moveq	r2, #1
 3e0:	movne	r2, #0
 3e4:	b	3ec <main+0xd8>
 3e8:	mov	r2, #1
 3ec:	cmp	r2, #0
 3f0:	beq	400 <main+0xec>
 3f4:	bl	0 <print_version>
 3f8:	mov	r0, #0
 3fc:	bl	0 <exit>
 400:	mov	r8, #1
 404:	add	r0, r8, #1
 408:	cmp	r0, r5
 40c:	bge	42c <main+0x118>
 410:	ldr	r0, [r4, r8, lsl #2]
 414:	ldr	r1, [pc, #692]	; 6d0 <main+0x3bc>
 418:	bl	0 <strcmp>
 41c:	cmp	r0, #0
 420:	moveq	r2, #1
 424:	movne	r2, #0
 428:	b	430 <main+0x11c>
 42c:	mov	r2, #0
 430:	cmp	r2, #0
 434:	bne	47c <main+0x168>
 438:	ldr	r2, [pc, #660]	; 6d4 <main+0x3c0>
 43c:	ldr	r0, [r4]
 440:	mov	r1, #0
 444:	bl	0 <coda_set_definition_path_conditional>
 448:	cmp	r0, #0
 44c:	beq	490 <main+0x17c>
 450:	bl	0 <coda_get_errno>
 454:	ldr	r0, [r0]
 458:	bl	0 <coda_errno_to_string>
 45c:	mov	r2, r0
 460:	ldr	r3, [pc, #632]	; 6e0 <main+0x3cc>
 464:	ldr	r0, [r3]
 468:	ldr	r1, [pc, #668]	; 70c <main+0x3f8>
 46c:	bl	0 <fprintf>
 470:	mov	r0, #1
 474:	bl	0 <exit>
 478:	b	490 <main+0x17c>
 47c:	lsl	r3, r8, #2
 480:	add	ip, r4, r3
 484:	ldr	r0, [ip, #4]
 488:	bl	0 <coda_set_definition_path>
 48c:	add	r8, r8, #2
 490:	cmp	r8, r5
 494:	bge	5f8 <main+0x2e4>
 498:	ldr	r0, [r4, r8, lsl #2]
 49c:	ldr	r1, [pc, #576]	; 6e4 <main+0x3d0>
 4a0:	bl	0 <strcmp>
 4a4:	cmp	r0, #0
 4a8:	beq	4c8 <main+0x1b4>
 4ac:	ldr	r0, [r4, r8, lsl #2]
 4b0:	ldr	r1, [pc, #580]	; 6fc <main+0x3e8>
 4b4:	bl	0 <strcmp>
 4b8:	cmp	r0, #0
 4bc:	moveq	r3, #1
 4c0:	movne	r3, #0
 4c4:	b	4cc <main+0x1b8>
 4c8:	mov	r3, #1
 4cc:	cmp	r3, #0
 4d0:	bne	5ec <main+0x2d8>
 4d4:	ldr	r0, [r4, r8, lsl #2]
 4d8:	ldr	r1, [pc, #492]	; 6cc <main+0x3b8>
 4dc:	bl	0 <strcmp>
 4e0:	cmp	r0, #0
 4e4:	beq	504 <main+0x1f0>
 4e8:	ldr	r0, [r4, r8, lsl #2]
 4ec:	ldr	r1, [pc, #484]	; 6d8 <main+0x3c4>
 4f0:	bl	0 <strcmp>
 4f4:	cmp	r0, #0
 4f8:	moveq	ip, #1
 4fc:	movne	ip, #0
 500:	b	508 <main+0x1f4>
 504:	mov	ip, #1
 508:	cmp	ip, #0
 50c:	beq	524 <main+0x210>
 510:	add	r3, r8, #1
 514:	cmp	r3, r5
 518:	movlt	r1, #1
 51c:	movge	r1, #0
 520:	b	528 <main+0x214>
 524:	mov	r1, #0
 528:	cmp	r1, #0
 52c:	beq	550 <main+0x23c>
 530:	lsl	r2, r8, #2
 534:	add	r3, r4, r2
 538:	ldr	ip, [r3, #4]
 53c:	ldrb	ip, [ip]
 540:	cmp	ip, #45	; 0x2d
 544:	movne	r2, #1
 548:	moveq	r2, #0
 54c:	b	554 <main+0x240>
 550:	mov	r2, #0
 554:	cmp	r2, #0
 558:	bne	5d8 <main+0x2c4>
 55c:	ldr	r0, [r4, r8, lsl #2]
 560:	ldr	r1, [pc, #400]	; 6f8 <main+0x3e4>
 564:	bl	0 <strcmp>
 568:	cmp	r0, #0
 56c:	beq	58c <main+0x278>
 570:	ldr	r0, [r4, r8, lsl #2]
 574:	ldr	r1, [pc, #372]	; 6f0 <main+0x3dc>
 578:	bl	0 <strcmp>
 57c:	cmp	r0, #0
 580:	moveq	r1, #1
 584:	movne	r1, #0
 588:	b	590 <main+0x27c>
 58c:	mov	r1, #1
 590:	cmp	r1, #0
 594:	bne	5c8 <main+0x2b4>
 598:	ldr	r3, [r4, r8, lsl #2]
 59c:	ldrb	r1, [r3]
 5a0:	cmp	r1, #45	; 0x2d
 5a4:	bne	5f8 <main+0x2e4>
 5a8:	ldr	r1, [pc, #304]	; 6e0 <main+0x3cc>
 5ac:	ldr	r0, [r1]
 5b0:	ldr	r1, [pc, #328]	; 700 <main+0x3ec>
 5b4:	bl	0 <fprintf>
 5b8:	bl	48 <print_help>
 5bc:	mov	r0, #1
 5c0:	bl	0 <exit>
 5c4:	b	5f0 <main+0x2dc>
 5c8:	ldr	r0, [pc, #292]	; 6f4 <main+0x3e0>
 5cc:	mov	ip, #1
 5d0:	str	ip, [r0]
 5d4:	b	5f0 <main+0x2dc>
 5d8:	lsl	r0, r8, #2
 5dc:	add	ip, r4, r0
 5e0:	ldr	r6, [ip, #4]
 5e4:	add	r8, r8, #1
 5e8:	b	5f0 <main+0x2dc>
 5ec:	mov	r7, #0
 5f0:	add	r8, r8, #1
 5f4:	b	490 <main+0x17c>
 5f8:	cmp	r8, r5
 5fc:	bne	61c <main+0x308>
 600:	ldr	ip, [pc, #216]	; 6e0 <main+0x3cc>
 604:	ldr	r0, [ip]
 608:	ldr	r1, [pc, #240]	; 700 <main+0x3ec>
 60c:	bl	0 <fprintf>
 610:	bl	48 <print_help>
 614:	mov	r0, #1
 618:	bl	0 <exit>
 61c:	bl	0 <coda_init>
 620:	cmp	r0, #0
 624:	beq	650 <main+0x33c>
 628:	bl	0 <coda_get_errno>
 62c:	ldr	r0, [r0]
 630:	bl	0 <coda_errno_to_string>
 634:	mov	r2, r0
 638:	ldr	r1, [pc, #160]	; 6e0 <main+0x3cc>
 63c:	ldr	r0, [r1]
 640:	ldr	r1, [pc, #196]	; 70c <main+0x3f8>
 644:	bl	0 <fprintf>
 648:	mov	r0, #1
 64c:	bl	0 <exit>
 650:	mov	r0, r7
 654:	bl	0 <coda_set_option_perform_conversions>
 658:	sub	r1, r5, r8
 65c:	add	r2, r4, r8, lsl #2
 660:	ldr	r3, [pc, #132]	; 6ec <main+0x3d8>
 664:	mov	r0, #0
 668:	str	r0, [sp]
 66c:	mov	r0, r6
 670:	bl	0 <coda_match_filefilter>
 674:	cmp	r0, #0
 678:	beq	6a4 <main+0x390>
 67c:	bl	0 <coda_get_errno>
 680:	ldr	r0, [r0]
 684:	bl	0 <coda_errno_to_string>
 688:	mov	r2, r0
 68c:	ldr	r3, [pc, #76]	; 6e0 <main+0x3cc>
 690:	ldr	r0, [r3]
 694:	ldr	r1, [pc, #112]	; 70c <main+0x3f8>
 698:	bl	0 <fprintf>
 69c:	mov	r0, #1
 6a0:	bl	0 <exit>
 6a4:	bl	0 <coda_done>
 6a8:	mov	r0, #0
 6ac:	ldr	r4, [sp, #16]
 6b0:	ldr	r5, [sp, #20]
 6b4:	ldr	r6, [sp, #24]
 6b8:	ldr	r7, [sp, #28]
 6bc:	ldr	r8, [sp, #32]
 6c0:	ldr	lr, [sp, #8]
 6c4:	add	sp, sp, #40	; 0x28
 6c8:	bx	lr
 6cc:	.word	0x0000015f
 6d0:	.word	0x00000123
 6d4:	.word	0x00000099
 6d8:	.word	0x0000032e
 6dc:	.word	0x000000cc
 6e0:	.word	0x00000000
 6e4:	.word	0x000000b3
 6e8:	.word	0x000003c5
 6ec:	.word	0x00000000
 6f0:	.word	0x000001b9
 6f4:	.word	0x00000000
 6f8:	.word	0x0000026e
 6fc:	.word	0x000000b6
 700:	.word	0x000002f4
 704:	.word	0x000003cc
 708:	.word	0x00000224
 70c:	.word	0x00000353
