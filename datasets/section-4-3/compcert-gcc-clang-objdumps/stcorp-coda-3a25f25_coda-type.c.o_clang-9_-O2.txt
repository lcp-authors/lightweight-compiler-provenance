
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-type.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_conversion_new>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	vpush	{d8-d11}
       c:	sub	sp, sp, #8
      10:	vcmp.f64	d1, #0.0
      14:	vmrs	APSR_nzcv, fpscr
      18:	bne	38 <coda_conversion_new+0x38>
      1c:	movw	r0, #65136	; 0xfe70
      20:	movw	r1, #0
      24:	movt	r0, #65535	; 0xffff
      28:	movt	r1, #0
      2c:	bl	0 <coda_set_error>
      30:	mov	r0, #0
      34:	b	70 <coda_conversion_new+0x70>
      38:	mov	r0, #40	; 0x28
      3c:	vorr	d8, d3, d3
      40:	vorr	d9, d2, d2
      44:	vmov.f64	d10, d1
      48:	vorr	d11, d0, d0
      4c:	bl	0 <malloc>
      50:	cmp	r0, #0
      54:	beq	7c <coda_conversion_new+0x7c>
      58:	mov	r1, #0
      5c:	str	r1, [r0, #32]
      60:	vstr	d11, [r0]
      64:	vstr	d10, [r0, #8]
      68:	vstr	d9, [r0, #16]
      6c:	vstr	d8, [r0, #24]
      70:	sub	sp, fp, #32
      74:	vpop	{d8-d11}
      78:	pop	{fp, pc}
      7c:	movw	r1, #0
      80:	movw	r3, #0
      84:	mov	r0, #171	; 0xab
      88:	mov	r2, #40	; 0x28
      8c:	movt	r1, #0
      90:	movt	r3, #0
      94:	str	r0, [sp]
      98:	mvn	r0, #0
      9c:	bl	0 <coda_set_error>
      a0:	b	30 <coda_conversion_new+0x30>

000000a4 <coda_conversion_set_unit>:
      a4:	push	{r4, r5, fp, lr}
      a8:	add	fp, sp, #8
      ac:	mov	r5, r0
      b0:	ldr	r0, [r0, #32]
      b4:	cmp	r0, #0
      b8:	beq	dc <coda_conversion_set_unit+0x38>
      bc:	movw	r0, #65136	; 0xfe70
      c0:	movw	r1, #0
      c4:	movt	r0, #65535	; 0xffff
      c8:	movt	r1, #0
      cc:	bl	0 <coda_set_error>
      d0:	mvn	r4, #0
      d4:	mov	r0, r4
      d8:	pop	{r4, r5, fp, pc}
      dc:	mov	r4, #0
      e0:	cmp	r1, #0
      e4:	mov	r0, #0
      e8:	beq	fc <coda_conversion_set_unit+0x58>
      ec:	mov	r0, r1
      f0:	bl	0 <strdup>
      f4:	cmp	r0, #0
      f8:	beq	108 <coda_conversion_set_unit+0x64>
      fc:	str	r0, [r5, #32]
     100:	mov	r0, r4
     104:	pop	{r4, r5, fp, pc}
     108:	movw	r1, #0
     10c:	movw	r2, #0
     110:	mvn	r0, #0
     114:	mov	r3, #198	; 0xc6
     118:	mvn	r4, #0
     11c:	movt	r1, #0
     120:	movt	r2, #0
     124:	bl	0 <coda_set_error>
     128:	mov	r0, r4
     12c:	pop	{r4, r5, fp, pc}

00000130 <coda_conversion_delete>:
     130:	cmp	r0, #0
     134:	bxeq	lr
     138:	push	{r4, sl, fp, lr}
     13c:	add	fp, sp, #8
     140:	mov	r4, r0
     144:	ldr	r0, [r0, #32]
     148:	cmp	r0, #0
     14c:	beq	154 <coda_conversion_delete+0x24>
     150:	bl	0 <free>
     154:	mov	r0, r4
     158:	pop	{r4, sl, fp, lr}
     15c:	b	0 <free>

00000160 <coda_ascii_integer_mapping_new>:
     160:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
     164:	add	fp, sp, #24
     168:	sub	sp, sp, #8
     16c:	cmp	r0, #0
     170:	beq	1a8 <coda_ascii_integer_mapping_new+0x48>
     174:	mov	r7, r3
     178:	mov	r8, r2
     17c:	mov	r6, r0
     180:	bl	0 <strlen>
     184:	cmp	r0, #65	; 0x41
     188:	bcc	1c4 <coda_ascii_integer_mapping_new+0x64>
     18c:	movw	r1, #0
     190:	mov	r2, r0
     194:	movw	r0, #65136	; 0xfe70
     198:	movt	r0, #65535	; 0xffff
     19c:	movt	r1, #0
     1a0:	bl	0 <coda_set_error>
     1a4:	b	234 <coda_ascii_integer_mapping_new+0xd4>
     1a8:	movw	r1, #0
     1ac:	movw	r2, #0
     1b0:	mvn	r0, #99	; 0x63
     1b4:	movw	r3, #261	; 0x105
     1b8:	movt	r1, #0
     1bc:	movt	r2, #0
     1c0:	b	230 <coda_ascii_integer_mapping_new+0xd0>
     1c4:	mov	r0, #16
     1c8:	bl	0 <malloc>
     1cc:	cmp	r0, #0
     1d0:	beq	210 <coda_ascii_integer_mapping_new+0xb0>
     1d4:	mov	r4, #0
     1d8:	mov	r5, r0
     1dc:	str	r4, [r0]
     1e0:	mov	r0, r6
     1e4:	str	r8, [r5, #8]
     1e8:	str	r7, [r5, #12]
     1ec:	bl	0 <strdup>
     1f0:	cmp	r0, #0
     1f4:	str	r0, [r5, #4]
     1f8:	beq	244 <coda_ascii_integer_mapping_new+0xe4>
     1fc:	mov	r0, r6
     200:	bl	0 <strlen>
     204:	mov	r4, r5
     208:	str	r0, [r5]
     20c:	b	238 <coda_ascii_integer_mapping_new+0xd8>
     210:	movw	r1, #0
     214:	movw	r3, #0
     218:	movw	r0, #275	; 0x113
     21c:	mov	r2, #16
     220:	str	r0, [sp]
     224:	movt	r1, #0
     228:	movt	r3, #0
     22c:	mvn	r0, #0
     230:	bl	0 <coda_set_error>
     234:	mov	r4, #0
     238:	mov	r0, r4
     23c:	sub	sp, fp, #24
     240:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
     244:	movw	r1, #0
     248:	movw	r2, #0
     24c:	mvn	r0, #0
     250:	movw	r3, #286	; 0x11e
     254:	movt	r1, #0
     258:	movt	r2, #0
     25c:	bl	0 <coda_set_error>
     260:	mov	r0, r5
     264:	bl	0 <free>
     268:	b	238 <coda_ascii_integer_mapping_new+0xd8>

0000026c <coda_ascii_integer_mapping_delete>:
     26c:	cmp	r0, #0
     270:	bxeq	lr
     274:	push	{r4, sl, fp, lr}
     278:	add	fp, sp, #8
     27c:	mov	r4, r0
     280:	ldr	r0, [r0, #4]
     284:	cmp	r0, #0
     288:	beq	290 <coda_ascii_integer_mapping_delete+0x24>
     28c:	bl	0 <free>
     290:	mov	r0, r4
     294:	pop	{r4, sl, fp, lr}
     298:	b	0 <free>

0000029c <coda_ascii_float_mapping_new>:
     29c:	push	{r4, r5, r6, sl, fp, lr}
     2a0:	add	fp, sp, #16
     2a4:	vpush	{d8}
     2a8:	sub	sp, sp, #8
     2ac:	cmp	r0, #0
     2b0:	beq	2e4 <coda_ascii_float_mapping_new+0x48>
     2b4:	vorr	d8, d0, d0
     2b8:	mov	r6, r0
     2bc:	bl	0 <strlen>
     2c0:	cmp	r0, #65	; 0x41
     2c4:	bcc	300 <coda_ascii_float_mapping_new+0x64>
     2c8:	movw	r1, #0
     2cc:	mov	r2, r0
     2d0:	movw	r0, #65136	; 0xfe70
     2d4:	movt	r0, #65535	; 0xffff
     2d8:	movt	r1, #0
     2dc:	bl	0 <coda_set_error>
     2e0:	b	36c <coda_ascii_float_mapping_new+0xd0>
     2e4:	movw	r1, #0
     2e8:	movw	r2, #0
     2ec:	mvn	r0, #99	; 0x63
     2f0:	movw	r3, #306	; 0x132
     2f4:	movt	r1, #0
     2f8:	movt	r2, #0
     2fc:	b	368 <coda_ascii_float_mapping_new+0xcc>
     300:	mov	r0, #16
     304:	bl	0 <malloc>
     308:	cmp	r0, #0
     30c:	beq	348 <coda_ascii_float_mapping_new+0xac>
     310:	mov	r4, #0
     314:	vstr	d8, [r0, #8]
     318:	mov	r5, r0
     31c:	str	r4, [r0]
     320:	mov	r0, r6
     324:	bl	0 <strdup>
     328:	cmp	r0, #0
     32c:	str	r0, [r5, #4]
     330:	beq	380 <coda_ascii_float_mapping_new+0xe4>
     334:	mov	r0, r6
     338:	bl	0 <strlen>
     33c:	mov	r4, r5
     340:	str	r0, [r5]
     344:	b	370 <coda_ascii_float_mapping_new+0xd4>
     348:	movw	r1, #0
     34c:	movw	r3, #0
     350:	movw	r0, #319	; 0x13f
     354:	mov	r2, #16
     358:	str	r0, [sp]
     35c:	movt	r1, #0
     360:	movt	r3, #0
     364:	mvn	r0, #0
     368:	bl	0 <coda_set_error>
     36c:	mov	r4, #0
     370:	mov	r0, r4
     374:	sub	sp, fp, #24
     378:	vpop	{d8}
     37c:	pop	{r4, r5, r6, sl, fp, pc}
     380:	movw	r1, #0
     384:	movw	r2, #0
     388:	mvn	r0, #0
     38c:	movw	r3, #330	; 0x14a
     390:	movt	r1, #0
     394:	movt	r2, #0
     398:	bl	0 <coda_set_error>
     39c:	mov	r0, r5
     3a0:	bl	0 <free>
     3a4:	b	370 <coda_ascii_float_mapping_new+0xd4>

000003a8 <coda_ascii_float_mapping_delete>:
     3a8:	cmp	r0, #0
     3ac:	bxeq	lr
     3b0:	push	{r4, sl, fp, lr}
     3b4:	add	fp, sp, #8
     3b8:	mov	r4, r0
     3bc:	ldr	r0, [r0, #4]
     3c0:	cmp	r0, #0
     3c4:	beq	3cc <coda_ascii_float_mapping_delete+0x24>
     3c8:	bl	0 <free>
     3cc:	mov	r0, r4
     3d0:	pop	{r4, sl, fp, lr}
     3d4:	b	0 <free>

000003d8 <coda_type_record_field_delete>:
     3d8:	cmp	r0, #0
     3dc:	bxeq	lr
     3e0:	push	{r4, sl, fp, lr}
     3e4:	add	fp, sp, #8
     3e8:	mov	r4, r0
     3ec:	ldr	r0, [r0]
     3f0:	cmp	r0, #0
     3f4:	beq	3fc <coda_type_record_field_delete+0x24>
     3f8:	bl	0 <free>
     3fc:	ldr	r0, [r4, #4]
     400:	cmp	r0, #0
     404:	beq	40c <coda_type_record_field_delete+0x34>
     408:	bl	0 <free>
     40c:	ldr	r0, [r4, #8]
     410:	cmp	r0, #0
     414:	blne	444 <coda_type_release>
     418:	ldr	r0, [r4, #20]
     41c:	cmp	r0, #0
     420:	beq	428 <coda_type_record_field_delete+0x50>
     424:	bl	0 <coda_expression_delete>
     428:	ldr	r0, [r4, #32]
     42c:	cmp	r0, #0
     430:	beq	438 <coda_type_record_field_delete+0x60>
     434:	bl	0 <coda_expression_delete>
     438:	mov	r0, r4
     43c:	pop	{r4, sl, fp, lr}
     440:	b	0 <free>

00000444 <coda_type_release>:
     444:	push	{r4, r5, r6, r7, fp, lr}
     448:	add	fp, sp, #16
     44c:	cmp	r0, #0
     450:	beq	46c <coda_type_release+0x28>
     454:	mov	r4, r0
     458:	ldr	r0, [r0, #4]
     45c:	cmp	r0, #1
     460:	blt	470 <coda_type_release+0x2c>
     464:	sub	r0, r0, #1
     468:	str	r0, [r4, #4]
     46c:	pop	{r4, r5, r6, r7, fp, pc}
     470:	ldr	r0, [r4, #8]
     474:	cmp	r0, #6
     478:	bhi	46c <coda_type_release+0x28>
     47c:	add	r1, pc, #0
     480:	ldr	pc, [r1, r0, lsl #2]
     484:	.word	0x00000574
     488:	.word	0x00000580
     48c:	.word	0x000004a0
     490:	.word	0x000004a0
     494:	.word	0x00000604
     498:	.word	0x00000650
     49c:	.word	0x0000065c
     4a0:	ldr	r0, [r4, #16]
     4a4:	cmp	r0, #0
     4a8:	beq	4b0 <coda_type_release+0x6c>
     4ac:	bl	0 <free>
     4b0:	ldr	r0, [r4, #20]
     4b4:	cmp	r0, #0
     4b8:	beq	4c0 <coda_type_release+0x7c>
     4bc:	bl	0 <free>
     4c0:	ldr	r0, [r4, #32]
     4c4:	cmp	r0, #0
     4c8:	beq	4d0 <coda_type_release+0x8c>
     4cc:	bl	0 <coda_expression_delete>
     4d0:	ldr	r0, [r4, #36]	; 0x24
     4d4:	cmp	r0, #0
     4d8:	blne	444 <coda_type_release>
     4dc:	ldr	r0, [r4, #40]	; 0x28
     4e0:	cmp	r0, #0
     4e4:	beq	4ec <coda_type_release+0xa8>
     4e8:	bl	0 <free>
     4ec:	ldr	r5, [r4, #48]	; 0x30
     4f0:	cmp	r5, #0
     4f4:	beq	510 <coda_type_release+0xcc>
     4f8:	ldr	r0, [r5, #32]
     4fc:	cmp	r0, #0
     500:	beq	508 <coda_type_release+0xc4>
     504:	bl	0 <free>
     508:	mov	r0, r5
     50c:	bl	0 <free>
     510:	ldr	r5, [r4, #52]	; 0x34
     514:	cmp	r5, #0
     518:	beq	678 <coda_type_release+0x234>
     51c:	ldr	r1, [r5, #12]
     520:	cmp	r1, #0
     524:	beq	670 <coda_type_release+0x22c>
     528:	ldr	r0, [r5, #8]
     52c:	cmp	r0, #1
     530:	blt	668 <coda_type_release+0x224>
     534:	mov	r7, #0
     538:	b	554 <coda_type_release+0x110>
     53c:	mov	r0, r6
     540:	bl	0 <free>
     544:	ldrd	r0, [r5, #8]
     548:	add	r7, r7, #1
     54c:	cmp	r7, r0
     550:	bge	668 <coda_type_release+0x224>
     554:	ldr	r6, [r1, r7, lsl #2]
     558:	cmp	r6, #0
     55c:	beq	548 <coda_type_release+0x104>
     560:	ldr	r0, [r6, #4]
     564:	cmp	r0, #0
     568:	beq	53c <coda_type_release+0xf8>
     56c:	bl	0 <free>
     570:	b	53c <coda_type_release+0xf8>
     574:	mov	r0, r4
     578:	pop	{r4, r5, r6, r7, fp, lr}
     57c:	b	684 <record_delete>
     580:	ldr	r0, [r4, #16]
     584:	cmp	r0, #0
     588:	beq	590 <coda_type_release+0x14c>
     58c:	bl	0 <free>
     590:	ldr	r0, [r4, #20]
     594:	cmp	r0, #0
     598:	beq	5a0 <coda_type_release+0x15c>
     59c:	bl	0 <free>
     5a0:	ldr	r0, [r4, #32]
     5a4:	cmp	r0, #0
     5a8:	beq	5b0 <coda_type_release+0x16c>
     5ac:	bl	0 <coda_expression_delete>
     5b0:	ldr	r0, [r4, #36]	; 0x24
     5b4:	cmp	r0, #0
     5b8:	blne	444 <coda_type_release>
     5bc:	ldr	r0, [r4, #40]	; 0x28
     5c0:	cmp	r0, #0
     5c4:	blne	444 <coda_type_release>
     5c8:	ldr	r1, [r4, #48]	; 0x30
     5cc:	cmp	r1, #1
     5d0:	blt	678 <coda_type_release+0x234>
     5d4:	add	r5, r4, #84	; 0x54
     5d8:	mov	r6, #0
     5dc:	b	5ec <coda_type_release+0x1a8>
     5e0:	add	r6, r6, #1
     5e4:	cmp	r6, r1
     5e8:	bge	678 <coda_type_release+0x234>
     5ec:	ldr	r0, [r5, r6, lsl #2]
     5f0:	cmp	r0, #0
     5f4:	beq	5e0 <coda_type_release+0x19c>
     5f8:	bl	0 <coda_expression_delete>
     5fc:	ldr	r1, [r4, #48]	; 0x30
     600:	b	5e0 <coda_type_release+0x19c>
     604:	ldr	r0, [r4, #16]
     608:	cmp	r0, #0
     60c:	beq	614 <coda_type_release+0x1d0>
     610:	bl	0 <free>
     614:	ldr	r0, [r4, #20]
     618:	cmp	r0, #0
     61c:	beq	624 <coda_type_release+0x1e0>
     620:	bl	0 <free>
     624:	ldr	r0, [r4, #32]
     628:	cmp	r0, #0
     62c:	beq	634 <coda_type_release+0x1f0>
     630:	bl	0 <coda_expression_delete>
     634:	ldr	r0, [r4, #36]	; 0x24
     638:	cmp	r0, #0
     63c:	blne	444 <coda_type_release>
     640:	ldr	r0, [r4, #40]	; 0x28
     644:	cmp	r0, #0
     648:	bne	674 <coda_type_release+0x230>
     64c:	b	678 <coda_type_release+0x234>
     650:	mov	r0, r4
     654:	pop	{r4, r5, r6, r7, fp, lr}
     658:	b	744 <raw_delete>
     65c:	mov	r0, r4
     660:	pop	{r4, r5, r6, r7, fp, lr}
     664:	b	7b0 <special_delete>
     668:	mov	r0, r1
     66c:	bl	0 <free>
     670:	mov	r0, r5
     674:	bl	0 <free>
     678:	mov	r0, r4
     67c:	pop	{r4, r5, r6, r7, fp, lr}
     680:	b	0 <free>

00000684 <record_delete>:
     684:	cmp	r0, #0
     688:	bxeq	lr
     68c:	push	{r4, r5, fp, lr}
     690:	add	fp, sp, #8
     694:	mov	r4, r0
     698:	ldr	r0, [r0, #16]
     69c:	cmp	r0, #0
     6a0:	beq	6a8 <record_delete+0x24>
     6a4:	bl	0 <free>
     6a8:	ldr	r0, [r4, #20]
     6ac:	cmp	r0, #0
     6b0:	beq	6b8 <record_delete+0x34>
     6b4:	bl	0 <free>
     6b8:	ldr	r0, [r4, #32]
     6bc:	cmp	r0, #0
     6c0:	beq	6c8 <record_delete+0x44>
     6c4:	bl	0 <coda_expression_delete>
     6c8:	ldr	r0, [r4, #36]	; 0x24
     6cc:	cmp	r0, #0
     6d0:	blne	444 <coda_type_release>
     6d4:	ldr	r0, [r4, #40]	; 0x28
     6d8:	cmp	r0, #0
     6dc:	beq	6e4 <record_delete+0x60>
     6e0:	bl	0 <coda_hashtable_delete>
     6e4:	ldr	r0, [r4, #44]	; 0x2c
     6e8:	cmp	r0, #0
     6ec:	beq	6f4 <record_delete+0x70>
     6f0:	bl	0 <coda_hashtable_delete>
     6f4:	ldr	r0, [r4, #48]	; 0x30
     6f8:	cmp	r0, #1
     6fc:	blt	728 <record_delete+0xa4>
     700:	ldr	r1, [r4, #52]	; 0x34
     704:	mov	r5, #0
     708:	ldr	r0, [r1, r5, lsl #2]
     70c:	bl	3d8 <coda_type_record_field_delete>
     710:	ldrd	r0, [r4, #48]	; 0x30
     714:	add	r5, r5, #1
     718:	cmp	r5, r0
     71c:	blt	708 <record_delete+0x84>
     720:	mov	r0, r1
     724:	bl	0 <free>
     728:	ldr	r0, [r4, #68]	; 0x44
     72c:	cmp	r0, #0
     730:	beq	738 <record_delete+0xb4>
     734:	bl	0 <coda_expression_delete>
     738:	mov	r0, r4
     73c:	pop	{r4, r5, fp, lr}
     740:	b	0 <free>

00000744 <raw_delete>:
     744:	cmp	r0, #0
     748:	bxeq	lr
     74c:	push	{r4, sl, fp, lr}
     750:	add	fp, sp, #8
     754:	mov	r4, r0
     758:	ldr	r0, [r0, #16]
     75c:	cmp	r0, #0
     760:	beq	768 <raw_delete+0x24>
     764:	bl	0 <free>
     768:	ldr	r0, [r4, #20]
     76c:	cmp	r0, #0
     770:	beq	778 <raw_delete+0x34>
     774:	bl	0 <free>
     778:	ldr	r0, [r4, #32]
     77c:	cmp	r0, #0
     780:	beq	788 <raw_delete+0x44>
     784:	bl	0 <coda_expression_delete>
     788:	ldr	r0, [r4, #36]	; 0x24
     78c:	cmp	r0, #0
     790:	blne	444 <coda_type_release>
     794:	ldr	r0, [r4, #44]	; 0x2c
     798:	cmp	r0, #0
     79c:	beq	7a4 <raw_delete+0x60>
     7a0:	bl	0 <free>
     7a4:	mov	r0, r4
     7a8:	pop	{r4, sl, fp, lr}
     7ac:	b	0 <free>

000007b0 <special_delete>:
     7b0:	cmp	r0, #0
     7b4:	bxeq	lr
     7b8:	push	{r4, sl, fp, lr}
     7bc:	add	fp, sp, #8
     7c0:	mov	r4, r0
     7c4:	ldr	r0, [r0, #16]
     7c8:	cmp	r0, #0
     7cc:	beq	7d4 <special_delete+0x24>
     7d0:	bl	0 <free>
     7d4:	ldr	r0, [r4, #20]
     7d8:	cmp	r0, #0
     7dc:	beq	7e4 <special_delete+0x34>
     7e0:	bl	0 <free>
     7e4:	ldr	r0, [r4, #32]
     7e8:	cmp	r0, #0
     7ec:	beq	7f4 <special_delete+0x44>
     7f0:	bl	0 <coda_expression_delete>
     7f4:	ldr	r0, [r4, #36]	; 0x24
     7f8:	cmp	r0, #0
     7fc:	blne	444 <coda_type_release>
     800:	ldr	r0, [r4, #44]	; 0x2c
     804:	cmp	r0, #0
     808:	blne	444 <coda_type_release>
     80c:	ldr	r0, [r4, #48]	; 0x30
     810:	cmp	r0, #0
     814:	beq	81c <special_delete+0x6c>
     818:	bl	0 <free>
     81c:	ldr	r0, [r4, #52]	; 0x34
     820:	cmp	r0, #0
     824:	beq	82c <special_delete+0x7c>
     828:	bl	0 <coda_expression_delete>
     82c:	mov	r0, r4
     830:	pop	{r4, sl, fp, lr}
     834:	b	0 <free>

00000838 <coda_type_set_read_type>:
     838:	push	{fp, lr}
     83c:	mov	fp, sp
     840:	cmp	r0, #0
     844:	beq	88c <coda_type_set_read_type+0x54>
     848:	ldr	ip, [r0, #8]
     84c:	cmp	ip, #6
     850:	bhi	8c8 <coda_type_set_read_type+0x90>
     854:	movw	r2, #0
     858:	add	r3, pc, #4
     85c:	movt	r2, #0
     860:	ldr	pc, [r3, ip, lsl #2]
     864:	.word	0x00000944
     868:	.word	0x00000880
     86c:	.word	0x000008a8
     870:	.word	0x000008bc
     874:	.word	0x00000920
     878:	.word	0x00000930
     87c:	.word	0x0000093c
     880:	movw	r2, #0
     884:	movt	r2, #0
     888:	b	944 <coda_type_set_read_type+0x10c>
     88c:	movw	r1, #0
     890:	movw	r2, #0
     894:	mvn	r0, #99	; 0x63
     898:	movw	r3, #710	; 0x2c6
     89c:	movt	r1, #0
     8a0:	movt	r2, #0
     8a4:	b	914 <coda_type_set_read_type+0xdc>
     8a8:	cmp	r1, #7
     8ac:	bhi	8c8 <coda_type_set_read_type+0x90>
     8b0:	str	r1, [r0, #12]
     8b4:	mov	r0, #0
     8b8:	pop	{fp, pc}
     8bc:	orr	r2, r1, #1
     8c0:	cmp	r2, #9
     8c4:	beq	8b0 <coda_type_set_read_type+0x78>
     8c8:	movw	r3, #0
     8cc:	add	r0, r1, #1
     8d0:	movt	r3, #0
     8d4:	cmp	r0, #13
     8d8:	mov	r2, r3
     8dc:	bhi	8ec <coda_type_set_read_type+0xb4>
     8e0:	movw	r1, #0
     8e4:	movt	r1, #0
     8e8:	ldr	r2, [r1, r0, lsl #2]
     8ec:	sub	r0, ip, #2
     8f0:	cmp	r0, #4
     8f4:	bhi	904 <coda_type_set_read_type+0xcc>
     8f8:	movw	r1, #0
     8fc:	movt	r1, #0
     900:	ldr	r3, [r1, r0, lsl #2]
     904:	movw	r0, #65136	; 0xfe70
     908:	movw	r1, #0
     90c:	movt	r0, #65535	; 0xffff
     910:	movt	r1, #0
     914:	bl	0 <coda_set_error>
     918:	mvn	r0, #0
     91c:	pop	{fp, pc}
     920:	orr	r2, r1, #1
     924:	cmp	r2, #11
     928:	beq	8b0 <coda_type_set_read_type+0x78>
     92c:	b	8c8 <coda_type_set_read_type+0x90>
     930:	movw	r2, #0
     934:	movt	r2, #0
     938:	b	944 <coda_type_set_read_type+0x10c>
     93c:	movw	r2, #0
     940:	movt	r2, #0
     944:	movw	r0, #65136	; 0xfe70
     948:	movw	r1, #0
     94c:	movt	r0, #65535	; 0xffff
     950:	movt	r1, #0
     954:	bl	0 <coda_set_error>
     958:	mvn	r0, #0
     95c:	pop	{fp, pc}

00000960 <coda_type_get_class_name>:
     960:	cmp	r0, #6
     964:	movwhi	r0, #0
     968:	movthi	r0, #0
     96c:	bxhi	lr
     970:	movw	r1, #0
     974:	movt	r1, #0
     978:	ldr	r0, [r1, r0, lsl #2]
     97c:	bx	lr

00000980 <coda_type_get_native_type_name>:
     980:	add	r0, r0, #1
     984:	cmp	r0, #13
     988:	movwhi	r0, #0
     98c:	movthi	r0, #0
     990:	bxhi	lr
     994:	movw	r1, #0
     998:	movt	r1, #0
     99c:	ldr	r0, [r1, r0, lsl #2]
     9a0:	bx	lr

000009a4 <coda_type_set_name>:
     9a4:	push	{r4, r5, fp, lr}
     9a8:	add	fp, sp, #8
     9ac:	cmp	r0, #0
     9b0:	beq	9e8 <coda_type_set_name+0x44>
     9b4:	mov	r5, r1
     9b8:	cmp	r1, #0
     9bc:	beq	a00 <coda_type_set_name+0x5c>
     9c0:	mov	r4, r0
     9c4:	ldr	r0, [r0, #16]
     9c8:	cmp	r0, #0
     9cc:	beq	a28 <coda_type_set_name+0x84>
     9d0:	movw	r0, #65136	; 0xfe70
     9d4:	movw	r1, #0
     9d8:	movt	r0, #65535	; 0xffff
     9dc:	movt	r1, #0
     9e0:	bl	0 <coda_set_error>
     9e4:	b	a1c <coda_type_set_name+0x78>
     9e8:	movw	r1, #0
     9ec:	movw	r2, #0
     9f0:	mvn	r0, #99	; 0x63
     9f4:	movw	r3, #759	; 0x2f7
     9f8:	movt	r1, #0
     9fc:	b	a14 <coda_type_set_name+0x70>
     a00:	movw	r1, #0
     a04:	movw	r2, #0
     a08:	mvn	r0, #99	; 0x63
     a0c:	mov	r3, #764	; 0x2fc
     a10:	movt	r1, #0
     a14:	movt	r2, #0
     a18:	bl	0 <coda_set_error>
     a1c:	mvn	r4, #0
     a20:	mov	r0, r4
     a24:	pop	{r4, r5, fp, pc}
     a28:	mov	r0, r5
     a2c:	bl	0 <coda_is_identifier>
     a30:	cmp	r0, #0
     a34:	beq	a58 <coda_type_set_name+0xb4>
     a38:	mov	r0, r5
     a3c:	bl	0 <strdup>
     a40:	cmp	r0, #0
     a44:	beq	a74 <coda_type_set_name+0xd0>
     a48:	str	r0, [r4, #16]
     a4c:	mov	r4, #0
     a50:	mov	r0, r4
     a54:	pop	{r4, r5, fp, pc}
     a58:	movw	r0, #65136	; 0xfe70
     a5c:	movw	r1, #0
     a60:	mov	r2, r5
     a64:	movt	r0, #65535	; 0xffff
     a68:	movt	r1, #0
     a6c:	bl	0 <coda_set_error>
     a70:	b	a1c <coda_type_set_name+0x78>
     a74:	movw	r1, #0
     a78:	movw	r2, #0
     a7c:	mvn	r0, #0
     a80:	movw	r3, #781	; 0x30d
     a84:	mvn	r4, #0
     a88:	movt	r1, #0
     a8c:	movt	r2, #0
     a90:	bl	0 <coda_set_error>
     a94:	mov	r0, r4
     a98:	pop	{r4, r5, fp, pc}

00000a9c <coda_type_set_description>:
     a9c:	push	{r4, sl, fp, lr}
     aa0:	add	fp, sp, #8
     aa4:	cmp	r0, #0
     aa8:	beq	adc <coda_type_set_description+0x40>
     aac:	cmp	r1, #0
     ab0:	beq	af4 <coda_type_set_description+0x58>
     ab4:	mov	r4, r0
     ab8:	ldr	r0, [r0, #20]
     abc:	cmp	r0, #0
     ac0:	beq	b1c <coda_type_set_description+0x80>
     ac4:	movw	r0, #65136	; 0xfe70
     ac8:	movw	r1, #0
     acc:	movt	r0, #65535	; 0xffff
     ad0:	movt	r1, #0
     ad4:	bl	0 <coda_set_error>
     ad8:	b	b10 <coda_type_set_description+0x74>
     adc:	movw	r1, #0
     ae0:	movw	r2, #0
     ae4:	mvn	r0, #99	; 0x63
     ae8:	movw	r3, #795	; 0x31b
     aec:	movt	r1, #0
     af0:	b	b08 <coda_type_set_description+0x6c>
     af4:	movw	r1, #0
     af8:	movw	r2, #0
     afc:	mvn	r0, #99	; 0x63
     b00:	mov	r3, #800	; 0x320
     b04:	movt	r1, #0
     b08:	movt	r2, #0
     b0c:	bl	0 <coda_set_error>
     b10:	mvn	r4, #0
     b14:	mov	r0, r4
     b18:	pop	{r4, sl, fp, pc}
     b1c:	mov	r0, r1
     b20:	bl	0 <strdup>
     b24:	cmp	r0, #0
     b28:	beq	b3c <coda_type_set_description+0xa0>
     b2c:	str	r0, [r4, #20]
     b30:	mov	r4, #0
     b34:	mov	r0, r4
     b38:	pop	{r4, sl, fp, pc}
     b3c:	movw	r1, #0
     b40:	movw	r2, #0
     b44:	mvn	r0, #0
     b48:	movw	r3, #814	; 0x32e
     b4c:	mvn	r4, #0
     b50:	movt	r1, #0
     b54:	movt	r2, #0
     b58:	bl	0 <coda_set_error>
     b5c:	mov	r0, r4
     b60:	pop	{r4, sl, fp, pc}

00000b64 <coda_type_set_bit_size>:
     b64:	push	{r4, r5, fp, lr}
     b68:	add	fp, sp, #8
     b6c:	sub	sp, sp, #24
     b70:	cmp	r0, #0
     b74:	beq	ba4 <coda_type_set_bit_size+0x40>
     b78:	mov	r1, r3
     b7c:	ldr	r3, [r0, #28]
     b80:	mvn	r4, #0
     b84:	cmp	r3, #0
     b88:	bmi	bc8 <coda_type_set_bit_size+0x64>
     b8c:	movw	r0, #65136	; 0xfe70
     b90:	movw	r1, #0
     b94:	movt	r0, #65535	; 0xffff
     b98:	movt	r1, #0
     b9c:	bl	0 <coda_set_error>
     ba0:	b	cb0 <coda_type_set_bit_size+0x14c>
     ba4:	movw	r1, #0
     ba8:	movw	r2, #0
     bac:	mvn	r0, #99	; 0x63
     bb0:	movw	r3, #827	; 0x33b
     bb4:	movt	r1, #0
     bb8:	movt	r2, #0
     bbc:	bl	0 <coda_set_error>
     bc0:	mvn	r4, #0
     bc4:	b	cb0 <coda_type_set_bit_size+0x14c>
     bc8:	ldr	r3, [r0, #32]
     bcc:	cmp	r3, #0
     bd0:	beq	bf0 <coda_type_set_bit_size+0x8c>
     bd4:	movw	r0, #65136	; 0xfe70
     bd8:	movw	r1, #0
     bdc:	movt	r0, #65535	; 0xffff
     be0:	movt	r1, #0
     be4:	bl	0 <coda_set_error>
     be8:	mvn	r4, #0
     bec:	b	cb0 <coda_type_set_bit_size+0x14c>
     bf0:	cmn	r1, #1
     bf4:	ble	c30 <coda_type_set_bit_size+0xcc>
     bf8:	tst	r2, #7
     bfc:	beq	c60 <coda_type_set_bit_size+0xfc>
     c00:	ldr	r3, [r0]
     c04:	cmp	r3, #0
     c08:	bne	c60 <coda_type_set_bit_size+0xfc>
     c0c:	add	r4, sp, #3
     c10:	mov	r0, r2
     c14:	mov	r2, r4
     c18:	bl	0 <coda_str64>
     c1c:	movw	r0, #65136	; 0xfe70
     c20:	movw	r1, #0
     c24:	movt	r0, #65535	; 0xffff
     c28:	movt	r1, #0
     c2c:	b	c50 <coda_type_set_bit_size+0xec>
     c30:	add	r4, sp, #3
     c34:	mov	r0, r2
     c38:	mov	r2, r4
     c3c:	bl	0 <coda_str64>
     c40:	movw	r0, #65136	; 0xfe70
     c44:	movw	r1, #0
     c48:	movt	r0, #65535	; 0xffff
     c4c:	movt	r1, #0
     c50:	mov	r2, r4
     c54:	bl	0 <coda_set_error>
     c58:	mvn	r4, #0
     c5c:	b	cb0 <coda_type_set_bit_size+0x14c>
     c60:	ldr	r3, [r0, #8]
     c64:	add	ip, r0, #24
     c68:	bic	r3, r3, #1
     c6c:	cmp	r3, #2
     c70:	bne	ca4 <coda_type_set_bit_size+0x140>
     c74:	ldr	r3, [r0, #52]	; 0x34
     c78:	cmp	r3, #0
     c7c:	beq	ca4 <coda_type_set_bit_size+0x140>
     c80:	ldm	r3, {r0, r5}
     c84:	subs	r0, r4, r0
     c88:	sbcs	r0, r4, r5
     c8c:	bge	cbc <coda_type_set_bit_size+0x158>
     c90:	movw	r0, #65136	; 0xfe70
     c94:	movw	r1, #0
     c98:	movt	r0, #65535	; 0xffff
     c9c:	movt	r1, #0
     ca0:	b	be4 <coda_type_set_bit_size+0x80>
     ca4:	str	r2, [ip]
     ca8:	str	r1, [ip, #4]
     cac:	mov	r4, #0
     cb0:	mov	r0, r4
     cb4:	sub	sp, fp, #8
     cb8:	pop	{r4, r5, fp, pc}
     cbc:	str	r2, [r3]
     cc0:	str	r1, [r3, #4]
     cc4:	str	r2, [ip]
     cc8:	str	r1, [ip, #4]
     ccc:	ldr	r0, [r3, #8]
     cd0:	cmp	r0, #1
     cd4:	blt	cac <coda_type_set_bit_size+0x148>
     cd8:	ldr	r3, [r3, #12]
     cdc:	lsr	r2, r2, #3
     ce0:	orr	lr, r2, r1, lsl #29
     ce4:	lsr	r1, r1, #3
     ce8:	ldr	r5, [r3]
     cec:	ldr	r5, [r5]
     cf0:	eor	r2, r1, r5, asr #31
     cf4:	eor	r5, lr, r5
     cf8:	orrs	r2, r5, r2
     cfc:	bne	d10 <coda_type_set_bit_size+0x1ac>
     d00:	add	r3, r3, #4
     d04:	subs	r0, r0, #1
     d08:	bne	ce8 <coda_type_set_bit_size+0x184>
     d0c:	b	cac <coda_type_set_bit_size+0x148>
     d10:	str	r4, [ip]
     d14:	str	r4, [ip, #4]
     d18:	b	cac <coda_type_set_bit_size+0x148>

00000d1c <coda_type_set_byte_size>:
     d1c:	lsl	r1, r3, #3
     d20:	orr	r3, r1, r2, lsr #29
     d24:	lsl	r2, r2, #3
     d28:	b	b64 <coda_type_set_bit_size>

00000d2c <coda_type_set_bit_size_expression>:
     d2c:	push	{fp, lr}
     d30:	mov	fp, sp
     d34:	cmp	r0, #0
     d38:	beq	d64 <coda_type_set_bit_size_expression+0x38>
     d3c:	cmp	r1, #0
     d40:	beq	d7c <coda_type_set_bit_size_expression+0x50>
     d44:	ldr	r2, [r0, #32]
     d48:	cmp	r2, #0
     d4c:	beq	da0 <coda_type_set_bit_size_expression+0x74>
     d50:	movw	r0, #65136	; 0xfe70
     d54:	movw	r1, #0
     d58:	movt	r0, #65535	; 0xffff
     d5c:	movt	r1, #0
     d60:	b	dd4 <coda_type_set_bit_size_expression+0xa8>
     d64:	movw	r1, #0
     d68:	movw	r2, #0
     d6c:	mvn	r0, #99	; 0x63
     d70:	mov	r3, #892	; 0x37c
     d74:	movt	r1, #0
     d78:	b	d90 <coda_type_set_bit_size_expression+0x64>
     d7c:	movw	r1, #0
     d80:	movw	r2, #0
     d84:	mvn	r0, #99	; 0x63
     d88:	movw	r3, #897	; 0x381
     d8c:	movt	r1, #0
     d90:	movt	r2, #0
     d94:	bl	0 <coda_set_error>
     d98:	mvn	r0, #0
     d9c:	pop	{fp, pc}
     da0:	mov	r2, r0
     da4:	ldr	ip, [r2, #24]!
     da8:	ldr	r3, [r2, #-16]
     dac:	ldr	lr, [r2, #4]
     db0:	cmp	r3, #1
     db4:	bhi	de0 <coda_type_set_bit_size_expression+0xb4>
     db8:	subs	r3, ip, #1
     dbc:	sbcs	r3, lr, #0
     dc0:	blt	de8 <coda_type_set_bit_size_expression+0xbc>
     dc4:	movw	r0, #65136	; 0xfe70
     dc8:	movw	r1, #0
     dcc:	movt	r0, #65535	; 0xffff
     dd0:	movt	r1, #0
     dd4:	bl	0 <coda_set_error>
     dd8:	mvn	r0, #0
     ddc:	pop	{fp, pc}
     de0:	cmp	lr, #0
     de4:	bpl	dc4 <coda_type_set_bit_size_expression+0x98>
     de8:	str	r1, [r0, #32]
     dec:	mvn	r0, #0
     df0:	str	r0, [r2]
     df4:	str	r0, [r2, #4]
     df8:	mov	r0, #0
     dfc:	pop	{fp, pc}

00000e00 <coda_type_set_byte_size_expression>:
     e00:	push	{r4, sl, fp, lr}
     e04:	add	fp, sp, #8
     e08:	cmp	r0, #0
     e0c:	beq	e3c <coda_type_set_byte_size_expression+0x3c>
     e10:	cmp	r1, #0
     e14:	beq	e54 <coda_type_set_byte_size_expression+0x54>
     e18:	ldr	r2, [r0, #32]
     e1c:	cmp	r2, #0
     e20:	beq	e7c <coda_type_set_byte_size_expression+0x7c>
     e24:	movw	r0, #65136	; 0xfe70
     e28:	movw	r1, #0
     e2c:	movt	r0, #65535	; 0xffff
     e30:	movt	r1, #0
     e34:	bl	0 <coda_set_error>
     e38:	b	e70 <coda_type_set_byte_size_expression+0x70>
     e3c:	movw	r1, #0
     e40:	movw	r2, #0
     e44:	mvn	r0, #99	; 0x63
     e48:	movw	r3, #931	; 0x3a3
     e4c:	movt	r1, #0
     e50:	b	e68 <coda_type_set_byte_size_expression+0x68>
     e54:	movw	r1, #0
     e58:	movw	r2, #0
     e5c:	mvn	r0, #99	; 0x63
     e60:	mov	r3, #936	; 0x3a8
     e64:	movt	r1, #0
     e68:	movt	r2, #0
     e6c:	bl	0 <coda_set_error>
     e70:	mvn	r4, #0
     e74:	mov	r0, r4
     e78:	pop	{r4, sl, fp, pc}
     e7c:	mov	r2, r0
     e80:	ldr	r3, [r2, #24]!
     e84:	ldr	r4, [r2, #-16]
     e88:	ldr	ip, [r2, #4]
     e8c:	cmp	r4, #1
     e90:	bhi	eb4 <coda_type_set_byte_size_expression+0xb4>
     e94:	subs	r3, r3, #1
     e98:	sbcs	r3, ip, #0
     e9c:	blt	ee8 <coda_type_set_byte_size_expression+0xe8>
     ea0:	movw	r0, #65136	; 0xfe70
     ea4:	movw	r1, #0
     ea8:	movt	r0, #65535	; 0xffff
     eac:	movt	r1, #0
     eb0:	b	e34 <coda_type_set_byte_size_expression+0x34>
     eb4:	mvn	r4, #7
     eb8:	orr	lr, r4, #7
     ebc:	mvn	r4, #0
     ec0:	subs	r3, lr, r3
     ec4:	sbcs	r3, r4, ip
     ec8:	bge	ee8 <coda_type_set_byte_size_expression+0xe8>
     ecc:	movw	r0, #65136	; 0xfe70
     ed0:	movw	r1, #0
     ed4:	movt	r0, #65535	; 0xffff
     ed8:	movt	r1, #0
     edc:	bl	0 <coda_set_error>
     ee0:	mov	r0, r4
     ee4:	pop	{r4, sl, fp, pc}
     ee8:	str	r1, [r0, #32]
     eec:	mvn	r1, #0
     ef0:	mvn	r0, #7
     ef4:	mov	r4, #0
     ef8:	strd	r0, [r2]
     efc:	mov	r0, r4
     f00:	pop	{r4, sl, fp, pc}

00000f04 <coda_type_add_attribute>:
     f04:	push	{r4, r5, fp, lr}
     f08:	add	fp, sp, #8
     f0c:	cmp	r0, #0
     f10:	beq	f54 <coda_type_add_attribute+0x50>
     f14:	mov	r4, r1
     f18:	cmp	r1, #0
     f1c:	beq	f6c <coda_type_add_attribute+0x68>
     f20:	mov	r5, r0
     f24:	ldr	r0, [r0, #36]	; 0x24
     f28:	cmp	r0, #0
     f2c:	bne	f44 <coda_type_add_attribute+0x40>
     f30:	ldr	r0, [r5]
     f34:	bl	f90 <coda_type_record_new>
     f38:	cmp	r0, #0
     f3c:	str	r0, [r5, #36]	; 0x24
     f40:	beq	f88 <coda_type_add_attribute+0x84>
     f44:	ldr	r1, [r0, #48]	; 0x30
     f48:	mov	r2, r4
     f4c:	pop	{r4, r5, fp, lr}
     f50:	b	1708 <coda_type_record_insert_field>
     f54:	movw	r1, #0
     f58:	movw	r2, #0
     f5c:	mvn	r0, #99	; 0x63
     f60:	movw	r3, #970	; 0x3ca
     f64:	movt	r1, #0
     f68:	b	f80 <coda_type_add_attribute+0x7c>
     f6c:	movw	r1, #0
     f70:	movw	r2, #0
     f74:	mvn	r0, #99	; 0x63
     f78:	movw	r3, #975	; 0x3cf
     f7c:	movt	r1, #0
     f80:	movt	r2, #0
     f84:	bl	0 <coda_set_error>
     f88:	mvn	r0, #0
     f8c:	pop	{r4, r5, fp, pc}

00000f90 <coda_type_record_new>:
     f90:	push	{r4, r5, fp, lr}
     f94:	add	fp, sp, #8
     f98:	sub	sp, sp, #8
     f9c:	mov	r5, r0
     fa0:	mov	r0, #72	; 0x48
     fa4:	bl	0 <malloc>
     fa8:	cmp	r0, #0
     fac:	beq	104c <coda_type_record_new+0xbc>
     fb0:	vmov.i32	q8, #0	; 0x00000000
     fb4:	mov	r4, r0
     fb8:	mvn	r2, #0
     fbc:	cmp	r5, #1
     fc0:	str	r2, [r0, #28]
     fc4:	mov	r0, #0
     fc8:	add	r1, r4, #32
     fcc:	str	r5, [r4]
     fd0:	str	r0, [r4, #4]
     fd4:	str	r0, [r4, #8]
     fd8:	str	r2, [r4, #12]
     fdc:	str	r0, [r4, #16]
     fe0:	str	r0, [r4, #20]
     fe4:	str	r0, [r4, #64]	; 0x40
     fe8:	str	r0, [r4, #68]	; 0x44
     fec:	vst1.64	{d16-d17}, [r1]
     ff0:	add	r1, r4, #48	; 0x30
     ff4:	vst1.64	{d16-d17}, [r1]
     ff8:	mov	r1, r4
     ffc:	str	r2, [r1, #24]!
    1000:	movls	r2, #12
    1004:	strls	r2, [r4, #12]
    1008:	strls	r0, [r1]
    100c:	strls	r0, [r1, #4]
    1010:	mov	r0, #0
    1014:	bl	0 <coda_hashtable_new>
    1018:	cmp	r0, #0
    101c:	str	r0, [r4, #40]	; 0x28
    1020:	beq	1074 <coda_type_record_new+0xe4>
    1024:	mov	r0, #1
    1028:	bl	0 <coda_hashtable_new>
    102c:	cmp	r0, #0
    1030:	str	r0, [r4, #44]	; 0x2c
    1034:	bne	109c <coda_type_record_new+0x10c>
    1038:	movw	r1, #0
    103c:	movw	r2, #0
    1040:	mvn	r0, #0
    1044:	movw	r3, #1245	; 0x4dd
    1048:	b	1084 <coda_type_record_new+0xf4>
    104c:	movw	r1, #0
    1050:	movw	r3, #0
    1054:	movw	r0, #1205	; 0x4b5
    1058:	mov	r2, #72	; 0x48
    105c:	movt	r1, #0
    1060:	movt	r3, #0
    1064:	str	r0, [sp]
    1068:	mvn	r0, #0
    106c:	bl	0 <coda_set_error>
    1070:	b	1098 <coda_type_record_new+0x108>
    1074:	movw	r1, #0
    1078:	movw	r2, #0
    107c:	mvn	r0, #0
    1080:	movw	r3, #1236	; 0x4d4
    1084:	movt	r1, #0
    1088:	movt	r2, #0
    108c:	bl	0 <coda_set_error>
    1090:	mov	r0, r4
    1094:	bl	684 <record_delete>
    1098:	mov	r4, #0
    109c:	mov	r0, r4
    10a0:	sub	sp, fp, #8
    10a4:	pop	{r4, r5, fp, pc}

000010a8 <coda_type_record_add_field>:
    10a8:	push	{fp, lr}
    10ac:	mov	fp, sp
    10b0:	cmp	r0, #0
    10b4:	beq	10c8 <coda_type_record_add_field+0x20>
    10b8:	mov	r2, r1
    10bc:	ldr	r1, [r0, #48]	; 0x30
    10c0:	pop	{fp, lr}
    10c4:	b	1708 <coda_type_record_insert_field>
    10c8:	movw	r1, #0
    10cc:	movw	r2, #0
    10d0:	mvn	r0, #99	; 0x63
    10d4:	mov	r3, #1424	; 0x590
    10d8:	movt	r1, #0
    10dc:	movt	r2, #0
    10e0:	bl	0 <coda_set_error>
    10e4:	mvn	r0, #0
    10e8:	pop	{fp, pc}

000010ec <coda_type_set_attributes>:
    10ec:	push	{fp, lr}
    10f0:	mov	fp, sp
    10f4:	cmp	r0, #0
    10f8:	beq	1128 <coda_type_set_attributes+0x3c>
    10fc:	cmp	r1, #0
    1100:	beq	1140 <coda_type_set_attributes+0x54>
    1104:	ldr	r2, [r0, #36]	; 0x24
    1108:	cmp	r2, #0
    110c:	beq	1164 <coda_type_set_attributes+0x78>
    1110:	movw	r1, #0
    1114:	movw	r2, #0
    1118:	mvn	r0, #99	; 0x63
    111c:	movw	r3, #1003	; 0x3eb
    1120:	movt	r1, #0
    1124:	b	1154 <coda_type_set_attributes+0x68>
    1128:	movw	r1, #0
    112c:	movw	r2, #0
    1130:	mvn	r0, #99	; 0x63
    1134:	movw	r3, #993	; 0x3e1
    1138:	movt	r1, #0
    113c:	b	1154 <coda_type_set_attributes+0x68>
    1140:	movw	r1, #0
    1144:	movw	r2, #0
    1148:	mvn	r0, #99	; 0x63
    114c:	movw	r3, #998	; 0x3e6
    1150:	movt	r1, #0
    1154:	movt	r2, #0
    1158:	bl	0 <coda_set_error>
    115c:	mvn	r0, #0
    1160:	pop	{fp, pc}
    1164:	str	r1, [r0, #36]	; 0x24
    1168:	ldr	r0, [r1, #4]
    116c:	add	r0, r0, #1
    1170:	str	r0, [r1, #4]
    1174:	mov	r0, #0
    1178:	pop	{fp, pc}

0000117c <coda_type_record_field_new>:
    117c:	push	{r4, r5, fp, lr}
    1180:	add	fp, sp, #8
    1184:	sub	sp, sp, #8
    1188:	cmp	r0, #0
    118c:	beq	121c <coda_type_record_field_new+0xa0>
    1190:	mov	r5, r0
    1194:	bl	0 <coda_is_identifier>
    1198:	cmp	r0, #0
    119c:	beq	1238 <coda_type_record_field_new+0xbc>
    11a0:	mov	r0, #40	; 0x28
    11a4:	bl	0 <malloc>
    11a8:	cmp	r0, #0
    11ac:	beq	1254 <coda_type_record_field_new+0xd8>
    11b0:	vmov.i32	q8, #0	; 0x00000000
    11b4:	mov	r4, r0
    11b8:	mov	r1, #0
    11bc:	mvn	r0, #0
    11c0:	str	r1, [r4, #20]
    11c4:	str	r0, [r4, #24]
    11c8:	str	r0, [r4, #28]
    11cc:	mov	r0, #32
    11d0:	mov	r2, r4
    11d4:	strb	r1, [r4, #16]
    11d8:	vst1.64	{d16-d17}, [r2], r0
    11dc:	mov	r0, r5
    11e0:	str	r1, [r2]
    11e4:	bl	0 <strdup>
    11e8:	cmp	r0, #0
    11ec:	str	r0, [r4]
    11f0:	bne	127c <coda_type_record_field_new+0x100>
    11f4:	movw	r1, #0
    11f8:	movw	r2, #0
    11fc:	mvn	r0, #0
    1200:	movw	r3, #1047	; 0x417
    1204:	movt	r1, #0
    1208:	movt	r2, #0
    120c:	bl	0 <coda_set_error>
    1210:	mov	r0, r4
    1214:	bl	3d8 <coda_type_record_field_delete>
    1218:	b	1278 <coda_type_record_field_new+0xfc>
    121c:	movw	r1, #0
    1220:	movw	r2, #0
    1224:	mvn	r0, #99	; 0x63
    1228:	movw	r3, #1017	; 0x3f9
    122c:	movt	r1, #0
    1230:	movt	r2, #0
    1234:	b	1274 <coda_type_record_field_new+0xf8>
    1238:	movw	r0, #65136	; 0xfe70
    123c:	movw	r1, #0
    1240:	mov	r2, r5
    1244:	movt	r0, #65535	; 0xffff
    1248:	movt	r1, #0
    124c:	bl	0 <coda_set_error>
    1250:	b	1278 <coda_type_record_field_new+0xfc>
    1254:	movw	r1, #0
    1258:	movw	r3, #0
    125c:	movw	r0, #1031	; 0x407
    1260:	mov	r2, #40	; 0x28
    1264:	movt	r1, #0
    1268:	movt	r3, #0
    126c:	str	r0, [sp]
    1270:	mvn	r0, #0
    1274:	bl	0 <coda_set_error>
    1278:	mov	r4, #0
    127c:	mov	r0, r4
    1280:	sub	sp, fp, #8
    1284:	pop	{r4, r5, fp, pc}

00001288 <coda_type_record_field_set_real_name>:
    1288:	push	{r4, sl, fp, lr}
    128c:	add	fp, sp, #8
    1290:	cmp	r0, #0
    1294:	beq	12c8 <coda_type_record_field_set_real_name+0x40>
    1298:	cmp	r1, #0
    129c:	beq	12e0 <coda_type_record_field_set_real_name+0x58>
    12a0:	mov	r4, r0
    12a4:	ldr	r0, [r0, #4]
    12a8:	cmp	r0, #0
    12ac:	beq	1308 <coda_type_record_field_set_real_name+0x80>
    12b0:	movw	r0, #65136	; 0xfe70
    12b4:	movw	r1, #0
    12b8:	movt	r0, #65535	; 0xffff
    12bc:	movt	r1, #0
    12c0:	bl	0 <coda_set_error>
    12c4:	b	12fc <coda_type_record_field_set_real_name+0x74>
    12c8:	movw	r1, #0
    12cc:	movw	r2, #0
    12d0:	mvn	r0, #99	; 0x63
    12d4:	movw	r3, #1059	; 0x423
    12d8:	movt	r1, #0
    12dc:	b	12f4 <coda_type_record_field_set_real_name+0x6c>
    12e0:	movw	r1, #0
    12e4:	movw	r2, #0
    12e8:	mvn	r0, #99	; 0x63
    12ec:	movw	r3, #1064	; 0x428
    12f0:	movt	r1, #0
    12f4:	movt	r2, #0
    12f8:	bl	0 <coda_set_error>
    12fc:	mvn	r4, #0
    1300:	mov	r0, r4
    1304:	pop	{r4, sl, fp, pc}
    1308:	mov	r0, r1
    130c:	bl	0 <strdup>
    1310:	str	r0, [r4, #4]
    1314:	mov	r4, #0
    1318:	cmp	r0, #0
    131c:	beq	1328 <coda_type_record_field_set_real_name+0xa0>
    1320:	mov	r0, r4
    1324:	pop	{r4, sl, fp, pc}
    1328:	movw	r1, #0
    132c:	movw	r2, #0
    1330:	mvn	r0, #0
    1334:	movw	r3, #1076	; 0x434
    1338:	mvn	r4, #0
    133c:	movt	r1, #0
    1340:	movt	r2, #0
    1344:	bl	0 <coda_set_error>
    1348:	mov	r0, r4
    134c:	pop	{r4, sl, fp, pc}

00001350 <coda_type_record_field_set_type>:
    1350:	push	{fp, lr}
    1354:	mov	fp, sp
    1358:	cmp	r0, #0
    135c:	beq	1390 <coda_type_record_field_set_type+0x40>
    1360:	cmp	r1, #0
    1364:	beq	13a8 <coda_type_record_field_set_type+0x58>
    1368:	ldr	r2, [r0, #8]
    136c:	cmp	r2, #0
    1370:	beq	13cc <coda_type_record_field_set_type+0x7c>
    1374:	movw	r0, #65136	; 0xfe70
    1378:	movw	r1, #0
    137c:	movt	r0, #65535	; 0xffff
    1380:	movt	r1, #0
    1384:	bl	0 <coda_set_error>
    1388:	mvn	r0, #0
    138c:	pop	{fp, pc}
    1390:	movw	r1, #0
    1394:	movw	r2, #0
    1398:	mvn	r0, #99	; 0x63
    139c:	movw	r3, #1087	; 0x43f
    13a0:	movt	r1, #0
    13a4:	b	13bc <coda_type_record_field_set_type+0x6c>
    13a8:	movw	r1, #0
    13ac:	movw	r2, #0
    13b0:	mvn	r0, #99	; 0x63
    13b4:	movw	r3, #1092	; 0x444
    13b8:	movt	r1, #0
    13bc:	movt	r2, #0
    13c0:	bl	0 <coda_set_error>
    13c4:	mvn	r0, #0
    13c8:	pop	{fp, pc}
    13cc:	str	r1, [r0, #8]
    13d0:	ldr	r0, [r1, #4]
    13d4:	add	r0, r0, #1
    13d8:	str	r0, [r1, #4]
    13dc:	mov	r0, #0
    13e0:	pop	{fp, pc}

000013e4 <coda_type_record_field_set_hidden>:
    13e4:	push	{fp, lr}
    13e8:	mov	fp, sp
    13ec:	cmp	r0, #0
    13f0:	beq	1404 <coda_type_record_field_set_hidden+0x20>
    13f4:	mov	r1, #1
    13f8:	str	r1, [r0, #12]
    13fc:	mov	r0, #0
    1400:	pop	{fp, pc}
    1404:	movw	r1, #0
    1408:	movw	r2, #0
    140c:	mvn	r0, #99	; 0x63
    1410:	movw	r3, #1109	; 0x455
    1414:	movt	r1, #0
    1418:	movt	r2, #0
    141c:	bl	0 <coda_set_error>
    1420:	mvn	r0, #0
    1424:	pop	{fp, pc}

00001428 <coda_type_record_field_set_optional>:
    1428:	push	{fp, lr}
    142c:	mov	fp, sp
    1430:	cmp	r0, #0
    1434:	beq	1448 <coda_type_record_field_set_optional+0x20>
    1438:	mov	r1, #1
    143c:	strb	r1, [r0, #16]
    1440:	mov	r0, #0
    1444:	pop	{fp, pc}
    1448:	movw	r1, #0
    144c:	movw	r2, #0
    1450:	mvn	r0, #99	; 0x63
    1454:	mov	r3, #1120	; 0x460
    1458:	movt	r1, #0
    145c:	movt	r2, #0
    1460:	bl	0 <coda_set_error>
    1464:	mvn	r0, #0
    1468:	pop	{fp, pc}

0000146c <coda_type_record_field_set_available_expression>:
    146c:	push	{fp, lr}
    1470:	mov	fp, sp
    1474:	cmp	r0, #0
    1478:	beq	14ac <coda_type_record_field_set_available_expression+0x40>
    147c:	cmp	r1, #0
    1480:	beq	14c4 <coda_type_record_field_set_available_expression+0x58>
    1484:	ldr	r2, [r0, #20]
    1488:	cmp	r2, #0
    148c:	beq	14e8 <coda_type_record_field_set_available_expression+0x7c>
    1490:	movw	r0, #65136	; 0xfe70
    1494:	movw	r1, #0
    1498:	movt	r0, #65535	; 0xffff
    149c:	movt	r1, #0
    14a0:	bl	0 <coda_set_error>
    14a4:	mvn	r0, #0
    14a8:	pop	{fp, pc}
    14ac:	movw	r1, #0
    14b0:	movw	r2, #0
    14b4:	mvn	r0, #99	; 0x63
    14b8:	movw	r3, #1131	; 0x46b
    14bc:	movt	r1, #0
    14c0:	b	14d8 <coda_type_record_field_set_available_expression+0x6c>
    14c4:	movw	r1, #0
    14c8:	movw	r2, #0
    14cc:	mvn	r0, #99	; 0x63
    14d0:	mov	r3, #1136	; 0x470
    14d4:	movt	r1, #0
    14d8:	movt	r2, #0
    14dc:	bl	0 <coda_set_error>
    14e0:	mvn	r0, #0
    14e4:	pop	{fp, pc}
    14e8:	mov	r2, #1
    14ec:	strb	r2, [r0, #16]
    14f0:	str	r1, [r0, #20]
    14f4:	mov	r0, #0
    14f8:	pop	{fp, pc}

000014fc <coda_type_record_field_set_bit_offset_expression>:
    14fc:	push	{fp, lr}
    1500:	mov	fp, sp
    1504:	cmp	r0, #0
    1508:	beq	153c <coda_type_record_field_set_bit_offset_expression+0x40>
    150c:	cmp	r1, #0
    1510:	beq	1554 <coda_type_record_field_set_bit_offset_expression+0x58>
    1514:	ldr	r2, [r0, #32]
    1518:	cmp	r2, #0
    151c:	beq	1578 <coda_type_record_field_set_bit_offset_expression+0x7c>
    1520:	movw	r0, #65136	; 0xfe70
    1524:	movw	r1, #0
    1528:	movt	r0, #65535	; 0xffff
    152c:	movt	r1, #0
    1530:	bl	0 <coda_set_error>
    1534:	mvn	r0, #0
    1538:	pop	{fp, pc}
    153c:	movw	r1, #0
    1540:	movw	r2, #0
    1544:	mvn	r0, #99	; 0x63
    1548:	movw	r3, #1153	; 0x481
    154c:	movt	r1, #0
    1550:	b	1568 <coda_type_record_field_set_bit_offset_expression+0x6c>
    1554:	movw	r1, #0
    1558:	movw	r2, #0
    155c:	mvn	r0, #99	; 0x63
    1560:	movw	r3, #1158	; 0x486
    1564:	movt	r1, #0
    1568:	movt	r2, #0
    156c:	bl	0 <coda_set_error>
    1570:	mvn	r0, #0
    1574:	pop	{fp, pc}
    1578:	ldr	r2, [r0, #8]
    157c:	ldr	r2, [r2]
    1580:	cmp	r2, #2
    1584:	bcs	1594 <coda_type_record_field_set_bit_offset_expression+0x98>
    1588:	str	r1, [r0, #32]
    158c:	mov	r0, #0
    1590:	pop	{fp, pc}
    1594:	sub	r0, r2, #2
    1598:	cmp	r0, #7
    159c:	bhi	15b0 <coda_type_record_field_set_bit_offset_expression+0xb4>
    15a0:	movw	r1, #0
    15a4:	movt	r1, #0
    15a8:	ldr	r2, [r1, r0, lsl #2]
    15ac:	b	15b8 <coda_type_record_field_set_bit_offset_expression+0xbc>
    15b0:	movw	r2, #0
    15b4:	movt	r2, #0
    15b8:	movw	r0, #65136	; 0xfe70
    15bc:	movw	r1, #0
    15c0:	movt	r0, #65535	; 0xffff
    15c4:	movt	r1, #0
    15c8:	bl	0 <coda_set_error>
    15cc:	mvn	r0, #0
    15d0:	pop	{fp, pc}

000015d4 <coda_type_get_format_name>:
    15d4:	cmp	r0, #9
    15d8:	movwhi	r0, #0
    15dc:	movthi	r0, #0
    15e0:	bxhi	lr
    15e4:	movw	r1, #0
    15e8:	movt	r1, #0
    15ec:	ldr	r0, [r1, r0, lsl #2]
    15f0:	bx	lr

000015f4 <coda_type_record_field_validate>:
    15f4:	push	{fp, lr}
    15f8:	mov	fp, sp
    15fc:	cmp	r0, #0
    1600:	beq	1630 <coda_type_record_field_validate+0x3c>
    1604:	ldr	r1, [r0, #8]
    1608:	mov	r0, #0
    160c:	cmp	r1, #0
    1610:	popne	{fp, pc}
    1614:	movw	r0, #65136	; 0xfe70
    1618:	movw	r1, #0
    161c:	movt	r0, #65535	; 0xffff
    1620:	movt	r1, #0
    1624:	bl	0 <coda_set_error>
    1628:	mvn	r0, #0
    162c:	pop	{fp, pc}
    1630:	movw	r1, #0
    1634:	movw	r2, #0
    1638:	mvn	r0, #99	; 0x63
    163c:	movw	r3, #1180	; 0x49c
    1640:	movt	r1, #0
    1644:	movt	r2, #0
    1648:	bl	0 <coda_set_error>
    164c:	mvn	r0, #0
    1650:	pop	{fp, pc}

00001654 <coda_type_record_field_get_type>:
    1654:	ldr	r0, [r0, #8]
    1658:	str	r0, [r1]
    165c:	mov	r0, #0
    1660:	bx	lr

00001664 <coda_type_union_new>:
    1664:	push	{fp, lr}
    1668:	mov	fp, sp
    166c:	bl	f90 <coda_type_record_new>
    1670:	cmp	r0, #0
    1674:	movne	r1, #1
    1678:	strne	r1, [r0, #64]	; 0x40
    167c:	pop	{fp, pc}

00001680 <coda_type_empty_record>:
    1680:	push	{r4, r5, fp, lr}
    1684:	add	fp, sp, #8
    1688:	cmp	r0, #11
    168c:	bcs	16cc <coda_type_empty_record+0x4c>
    1690:	ldr	r1, [pc, #108]	; 1704 <coda_type_empty_record+0x84>
    1694:	mov	r4, r0
    1698:	bl	0 <__aeabi_read_tp>
    169c:	add	r0, r0, r1
    16a0:	ldr	r0, [r0, r4, lsl #2]
    16a4:	cmp	r0, #0
    16a8:	popne	{r4, r5, fp, pc}
    16ac:	bl	0 <__aeabi_read_tp>
    16b0:	add	r5, r0, r1
    16b4:	mov	r0, r4
    16b8:	bl	f90 <coda_type_record_new>
    16bc:	cmp	r0, #0
    16c0:	str	r0, [r5, r4, lsl #2]
    16c4:	beq	16e4 <coda_type_empty_record+0x64>
    16c8:	pop	{r4, r5, fp, pc}
    16cc:	movw	r0, #0
    16d0:	movw	r1, #0
    16d4:	movw	r3, #0
    16d8:	movw	r2, #1268	; 0x4f4
    16dc:	movt	r0, #0
    16e0:	b	16f8 <coda_type_empty_record+0x78>
    16e4:	movw	r0, #0
    16e8:	movw	r1, #0
    16ec:	movw	r3, #0
    16f0:	movw	r2, #1272	; 0x4f8
    16f4:	movt	r0, #0
    16f8:	movt	r1, #0
    16fc:	movt	r3, #0
    1700:	bl	0 <__assert_fail>
    1704:	.word	0x00000000

00001708 <coda_type_record_insert_field>:
    1708:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    170c:	add	fp, sp, #28
    1710:	sub	sp, sp, #12
    1714:	cmp	r0, #0
    1718:	beq	17d4 <coda_type_record_insert_field+0xcc>
    171c:	mov	r5, r2
    1720:	cmp	r2, #0
    1724:	beq	17f0 <coda_type_record_insert_field+0xe8>
    1728:	mov	r4, r0
    172c:	ldr	r0, [r5, #8]
    1730:	cmp	r0, #0
    1734:	beq	180c <coda_type_record_insert_field+0x104>
    1738:	mov	r6, r1
    173c:	ldr	r1, [r4, #64]	; 0x40
    1740:	cmp	r1, #0
    1744:	beq	1754 <coda_type_record_insert_field+0x4c>
    1748:	ldrb	r1, [r5, #16]
    174c:	cmp	r1, #0
    1750:	beq	1828 <coda_type_record_insert_field+0x120>
    1754:	ldr	r1, [r0]
    1758:	ldr	r0, [r4]
    175c:	cmp	r0, r1
    1760:	beq	1778 <coda_type_record_insert_field+0x70>
    1764:	cmp	r1, #0
    1768:	bne	1840 <coda_type_record_insert_field+0x138>
    176c:	sub	r2, r0, #1
    1770:	cmp	r2, #2
    1774:	bcs	1840 <coda_type_record_insert_field+0x138>
    1778:	ldr	r0, [r4, #48]	; 0x30
    177c:	tst	r0, #15
    1780:	bne	17a0 <coda_type_record_insert_field+0x98>
    1784:	mov	r7, #64	; 0x40
    1788:	add	r1, r7, r0, lsl #2
    178c:	ldr	r0, [r4, #52]	; 0x34
    1790:	bl	0 <realloc>
    1794:	cmp	r0, #0
    1798:	beq	1988 <coda_type_record_insert_field+0x280>
    179c:	str	r0, [r4, #52]	; 0x34
    17a0:	ldr	r2, [r5]
    17a4:	ldr	r0, [r4, #40]	; 0x28
    17a8:	mov	r1, r6
    17ac:	bl	0 <coda_hashtable_insert_name>
    17b0:	cmp	r0, #0
    17b4:	beq	1898 <coda_type_record_insert_field+0x190>
    17b8:	ldr	r2, [r5]
    17bc:	movw	r0, #65136	; 0xfe70
    17c0:	movw	r1, #0
    17c4:	movt	r0, #65535	; 0xffff
    17c8:	movt	r1, #0
    17cc:	bl	0 <coda_set_error>
    17d0:	b	1888 <coda_type_record_insert_field+0x180>
    17d4:	movw	r1, #0
    17d8:	movw	r2, #0
    17dc:	mvn	r0, #99	; 0x63
    17e0:	movw	r3, #1285	; 0x505
    17e4:	movt	r1, #0
    17e8:	movt	r2, #0
    17ec:	b	1884 <coda_type_record_insert_field+0x17c>
    17f0:	movw	r1, #0
    17f4:	movw	r2, #0
    17f8:	mvn	r0, #99	; 0x63
    17fc:	movw	r3, #1290	; 0x50a
    1800:	movt	r1, #0
    1804:	movt	r2, #0
    1808:	b	1884 <coda_type_record_insert_field+0x17c>
    180c:	movw	r1, #0
    1810:	movw	r2, #0
    1814:	mvn	r0, #99	; 0x63
    1818:	movw	r3, #1295	; 0x50f
    181c:	movt	r1, #0
    1820:	movt	r2, #0
    1824:	b	1884 <coda_type_record_insert_field+0x17c>
    1828:	movw	r0, #65136	; 0xfe70
    182c:	movw	r1, #0
    1830:	movt	r0, #65535	; 0xffff
    1834:	movt	r1, #0
    1838:	bl	0 <coda_set_error>
    183c:	b	1888 <coda_type_record_insert_field+0x180>
    1840:	movw	r3, #0
    1844:	cmp	r1, #9
    1848:	movt	r3, #0
    184c:	mov	r2, r3
    1850:	bhi	1860 <coda_type_record_insert_field+0x158>
    1854:	movw	r2, #0
    1858:	movt	r2, #0
    185c:	ldr	r2, [r2, r1, lsl #2]
    1860:	cmp	r0, #9
    1864:	bhi	1874 <coda_type_record_insert_field+0x16c>
    1868:	movw	r1, #0
    186c:	movt	r1, #0
    1870:	ldr	r3, [r1, r0, lsl #2]
    1874:	movw	r0, #65136	; 0xfe70
    1878:	movw	r1, #0
    187c:	movt	r0, #65535	; 0xffff
    1880:	movt	r1, #0
    1884:	bl	0 <coda_set_error>
    1888:	mvn	r7, #0
    188c:	mov	r0, r7
    1890:	sub	sp, fp, #28
    1894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1898:	ldr	r7, [r5, #4]
    189c:	ldr	r0, [r4, #44]	; 0x2c
    18a0:	cmp	r7, #0
    18a4:	ldreq	r7, [r5]
    18a8:	mov	r1, r7
    18ac:	bl	0 <coda_hashtable_get_index_from_name>
    18b0:	cmn	r0, #1
    18b4:	bgt	18c8 <coda_type_record_insert_field+0x1c0>
    18b8:	ldr	r0, [r4, #44]	; 0x2c
    18bc:	mov	r1, r6
    18c0:	mov	r2, r7
    18c4:	bl	0 <coda_hashtable_insert_name>
    18c8:	ldr	ip, [r4, #48]	; 0x30
    18cc:	cmp	ip, r6
    18d0:	ble	193c <coda_type_record_insert_field+0x234>
    18d4:	sub	r0, ip, r6
    18d8:	mov	r2, ip
    18dc:	tst	r0, #1
    18e0:	beq	18f4 <coda_type_record_insert_field+0x1ec>
    18e4:	ldr	r0, [r4, #52]	; 0x34
    18e8:	sub	r2, ip, #1
    18ec:	ldr	r1, [r0, r2, lsl #2]
    18f0:	str	r1, [r0, ip, lsl #2]
    18f4:	add	r0, r6, #1
    18f8:	cmp	ip, r0
    18fc:	beq	193c <coda_type_record_insert_field+0x234>
    1900:	lsl	r1, r2, #2
    1904:	sub	r2, r2, #1
    1908:	ldr	r0, [r4, #52]	; 0x34
    190c:	ldr	r3, [r0, r2, lsl #2]
    1910:	str	r3, [r0, r1]
    1914:	ldr	r0, [r4, #52]	; 0x34
    1918:	add	r3, r0, r1
    191c:	sub	r1, r1, #8
    1920:	ldr	r3, [r3, #-8]
    1924:	str	r3, [r0, r2, lsl #2]
    1928:	sub	r0, r2, #2
    192c:	sub	r2, r2, #1
    1930:	cmp	r2, r6
    1934:	mov	r2, r0
    1938:	bgt	1908 <coda_type_record_insert_field+0x200>
    193c:	add	r0, ip, #1
    1940:	mov	r7, #0
    1944:	str	r0, [r4, #48]	; 0x30
    1948:	ldr	r0, [r4, #52]	; 0x34
    194c:	str	r5, [r0, r6, lsl #2]
    1950:	ldr	r0, [r4]
    1954:	cmp	r0, #1
    1958:	bhi	188c <coda_type_record_insert_field+0x184>
    195c:	ldr	r1, [r4, #64]	; 0x40
    1960:	ldr	r0, [r5, #32]
    1964:	cmp	r1, #0
    1968:	beq	19b8 <coda_type_record_insert_field+0x2b0>
    196c:	cmp	r0, #0
    1970:	beq	1aac <coda_type_record_insert_field+0x3a4>
    1974:	movw	r0, #65136	; 0xfe70
    1978:	movw	r1, #0
    197c:	movt	r0, #65535	; 0xffff
    1980:	movt	r1, #0
    1984:	b	1838 <coda_type_record_insert_field+0x130>
    1988:	ldr	r0, [r4, #48]	; 0x30
    198c:	movw	r1, #1326	; 0x52e
    1990:	movw	r3, #0
    1994:	str	r1, [sp]
    1998:	movw	r1, #0
    199c:	movt	r3, #0
    19a0:	movt	r1, #0
    19a4:	add	r2, r7, r0, lsl #2
    19a8:	mvn	r0, #0
    19ac:	mvn	r7, #0
    19b0:	bl	0 <coda_set_error>
    19b4:	b	188c <coda_type_record_insert_field+0x184>
    19b8:	cmp	r0, #0
    19bc:	beq	1aec <coda_type_record_insert_field+0x3e4>
    19c0:	str	ip, [sp, #8]
    19c4:	cmp	ip, r6
    19c8:	mvn	ip, #0
    19cc:	ble	1a58 <coda_type_record_insert_field+0x350>
    19d0:	ldr	r0, [sp, #8]
    19d4:	sub	r1, r0, r6
    19d8:	ldr	r0, [r4, #52]	; 0x34
    19dc:	add	r0, r0, r6, lsl #2
    19e0:	add	r3, r0, #4
    19e4:	b	19f4 <coda_type_record_insert_field+0x2ec>
    19e8:	subs	r1, r1, #1
    19ec:	add	r3, r3, #4
    19f0:	beq	1a58 <coda_type_record_insert_field+0x350>
    19f4:	ldr	r6, [r3]
    19f8:	ldr	r0, [r6, #32]
    19fc:	cmp	r0, #0
    1a00:	bne	19e8 <coda_type_record_insert_field+0x2e0>
    1a04:	ldr	r2, [r3, #-4]
    1a08:	ldrd	r8, [r2, #24]
    1a0c:	subs	r0, ip, r8
    1a10:	sbcs	r0, ip, r9
    1a14:	bge	19e8 <coda_type_record_insert_field+0x2e0>
    1a18:	ldr	r0, [r2, #8]
    1a1c:	ldr	sl, [r0, #24]
    1a20:	ldr	lr, [r0, #28]
    1a24:	mvn	r0, #0
    1a28:	subs	ip, r0, sl
    1a2c:	mvn	ip, #0
    1a30:	sbcs	r0, ip, lr
    1a34:	bge	19e8 <coda_type_record_insert_field+0x2e0>
    1a38:	ldrb	r0, [r2, #16]
    1a3c:	cmp	r0, #0
    1a40:	bne	19e8 <coda_type_record_insert_field+0x2e0>
    1a44:	adds	r0, sl, r8
    1a48:	adc	r9, lr, r9
    1a4c:	str	r0, [r6, #24]
    1a50:	str	r9, [r6, #28]
    1a54:	b	19e8 <coda_type_record_insert_field+0x2e0>
    1a58:	mov	r1, r4
    1a5c:	ldr	r3, [r1, #24]!
    1a60:	ldr	r6, [r1, #4]
    1a64:	subs	r0, ip, r3
    1a68:	sbcs	r0, ip, r6
    1a6c:	bge	188c <coda_type_record_insert_field+0x184>
    1a70:	ldr	r0, [r5, #8]
    1a74:	ldr	r2, [r0, #24]
    1a78:	ldr	r5, [r0, #28]
    1a7c:	subs	r0, ip, r2
    1a80:	sbcs	r0, ip, r5
    1a84:	bge	1aa0 <coda_type_record_insert_field+0x398>
    1a88:	ldr	r0, [r4, #52]	; 0x34
    1a8c:	ldr	r4, [sp, #8]
    1a90:	ldr	r0, [r0, r4, lsl #2]
    1a94:	ldrb	r0, [r0, #16]
    1a98:	cmp	r0, #0
    1a9c:	beq	1b60 <coda_type_record_insert_field+0x458>
    1aa0:	str	ip, [r1]
    1aa4:	str	ip, [r1, #4]
    1aa8:	b	188c <coda_type_record_insert_field+0x184>
    1aac:	mov	r7, #0
    1ab0:	cmp	ip, #0
    1ab4:	str	r7, [r5, #24]
    1ab8:	str	r7, [r5, #28]
    1abc:	beq	1b50 <coda_type_record_insert_field+0x448>
    1ac0:	ldr	r0, [r5, #8]
    1ac4:	ldr	r2, [r4, #24]!
    1ac8:	ldr	r3, [r4, #4]
    1acc:	ldrd	r0, [r0, #24]
    1ad0:	eor	r1, r3, r1
    1ad4:	eor	r0, r2, r0
    1ad8:	orrs	r0, r0, r1
    1adc:	mvnne	r0, #0
    1ae0:	strne	r0, [r4]
    1ae4:	strne	r0, [r4, #4]
    1ae8:	b	188c <coda_type_record_insert_field+0x184>
    1aec:	cmp	r6, #0
    1af0:	beq	1b70 <coda_type_record_insert_field+0x468>
    1af4:	ldr	r0, [r4, #52]	; 0x34
    1af8:	mvn	r2, #0
    1afc:	add	r0, r0, r6, lsl #2
    1b00:	ldr	r3, [r0, #-4]
    1b04:	ldr	r8, [r3, #24]
    1b08:	ldr	r1, [r3, #28]
    1b0c:	subs	r0, r2, r8
    1b10:	sbcs	r0, r2, r1
    1b14:	bge	19c0 <coda_type_record_insert_field+0x2b8>
    1b18:	ldr	r0, [r3, #8]
    1b1c:	mvn	lr, #0
    1b20:	ldr	r9, [r0, #28]
    1b24:	ldr	r0, [r0, #24]
    1b28:	subs	r2, lr, r0
    1b2c:	sbcs	r2, lr, r9
    1b30:	bge	19c0 <coda_type_record_insert_field+0x2b8>
    1b34:	ldrb	r2, [r3, #16]
    1b38:	cmp	r2, #0
    1b3c:	bne	19c0 <coda_type_record_insert_field+0x2b8>
    1b40:	adds	r0, r0, r8
    1b44:	adc	r1, r9, r1
    1b48:	strd	r0, [r5, #24]
    1b4c:	b	19c0 <coda_type_record_insert_field+0x2b8>
    1b50:	ldr	r0, [r5, #8]
    1b54:	ldrd	r0, [r0, #24]
    1b58:	strd	r0, [r4, #24]
    1b5c:	b	188c <coda_type_record_insert_field+0x184>
    1b60:	adds	r0, r2, r3
    1b64:	adc	r3, r5, r6
    1b68:	stm	r1, {r0, r3}
    1b6c:	b	188c <coda_type_record_insert_field+0x184>
    1b70:	mov	r0, #0
    1b74:	str	r0, [r5, #24]
    1b78:	str	r0, [r5, #28]
    1b7c:	b	19c0 <coda_type_record_insert_field+0x2b8>

00001b80 <coda_type_record_create_field>:
    1b80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1b84:	add	fp, sp, #24
    1b88:	cmp	r0, #0
    1b8c:	beq	1c38 <coda_type_record_create_field+0xb8>
    1b90:	mov	r7, r1
    1b94:	cmp	r1, #0
    1b98:	beq	1c50 <coda_type_record_create_field+0xd0>
    1b9c:	mov	r6, r2
    1ba0:	cmp	r2, #0
    1ba4:	beq	1c68 <coda_type_record_create_field+0xe8>
    1ba8:	mov	r5, r0
    1bac:	ldr	r0, [r0]
    1bb0:	cmp	r0, #2
    1bb4:	mov	r0, r7
    1bb8:	bne	1bc4 <coda_type_record_create_field+0x44>
    1bbc:	mov	r0, r7
    1bc0:	bl	0 <coda_element_name_from_xml_name>
    1bc4:	ldr	r1, [r5, #40]	; 0x28
    1bc8:	bl	0 <coda_identifier_from_name>
    1bcc:	mvn	r4, #0
    1bd0:	cmp	r0, #0
    1bd4:	beq	1d2c <coda_type_record_create_field+0x1ac>
    1bd8:	mov	r9, r0
    1bdc:	bl	117c <coda_type_record_field_new>
    1be0:	cmp	r0, #0
    1be4:	beq	1c28 <coda_type_record_create_field+0xa8>
    1be8:	mov	r8, r0
    1bec:	mov	r0, r9
    1bf0:	mov	r1, r7
    1bf4:	bl	0 <strcmp>
    1bf8:	cmp	r0, #0
    1bfc:	beq	1ca4 <coda_type_record_create_field+0x124>
    1c00:	ldr	r0, [r8, #4]
    1c04:	cmp	r0, #0
    1c08:	beq	1c90 <coda_type_record_create_field+0x110>
    1c0c:	movw	r0, #65136	; 0xfe70
    1c10:	movw	r1, #0
    1c14:	movt	r0, #65535	; 0xffff
    1c18:	movt	r1, #0
    1c1c:	bl	0 <coda_set_error>
    1c20:	mov	r0, r8
    1c24:	bl	3d8 <coda_type_record_field_delete>
    1c28:	mov	r0, r9
    1c2c:	bl	0 <free>
    1c30:	mov	r0, r4
    1c34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1c38:	movw	r1, #0
    1c3c:	movw	r2, #0
    1c40:	mvn	r0, #99	; 0x63
    1c44:	movw	r3, #1437	; 0x59d
    1c48:	movt	r1, #0
    1c4c:	b	1c7c <coda_type_record_create_field+0xfc>
    1c50:	movw	r1, #0
    1c54:	movw	r2, #0
    1c58:	mvn	r0, #99	; 0x63
    1c5c:	movw	r3, #1442	; 0x5a2
    1c60:	movt	r1, #0
    1c64:	b	1c7c <coda_type_record_create_field+0xfc>
    1c68:	movw	r1, #0
    1c6c:	movw	r2, #0
    1c70:	mvn	r0, #99	; 0x63
    1c74:	movw	r3, #1447	; 0x5a7
    1c78:	movt	r1, #0
    1c7c:	movt	r2, #0
    1c80:	bl	0 <coda_set_error>
    1c84:	mvn	r4, #0
    1c88:	mov	r0, r4
    1c8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1c90:	mov	r0, r7
    1c94:	bl	0 <strdup>
    1c98:	cmp	r0, #0
    1c9c:	str	r0, [r8, #4]
    1ca0:	beq	1d08 <coda_type_record_create_field+0x188>
    1ca4:	mov	r0, r9
    1ca8:	bl	0 <free>
    1cac:	ldr	r0, [r8, #8]
    1cb0:	cmp	r0, #0
    1cb4:	beq	1cd0 <coda_type_record_create_field+0x150>
    1cb8:	movw	r0, #65136	; 0xfe70
    1cbc:	movw	r1, #0
    1cc0:	movt	r0, #65535	; 0xffff
    1cc4:	movt	r1, #0
    1cc8:	bl	0 <coda_set_error>
    1ccc:	b	1cf8 <coda_type_record_create_field+0x178>
    1cd0:	str	r6, [r8, #8]
    1cd4:	mov	r2, r8
    1cd8:	ldr	r0, [r6, #4]
    1cdc:	add	r0, r0, #1
    1ce0:	str	r0, [r6, #4]
    1ce4:	mov	r0, r5
    1ce8:	ldr	r1, [r5, #48]	; 0x30
    1cec:	bl	1708 <coda_type_record_insert_field>
    1cf0:	cmp	r0, #0
    1cf4:	beq	1d28 <coda_type_record_create_field+0x1a8>
    1cf8:	mov	r0, r8
    1cfc:	bl	3d8 <coda_type_record_field_delete>
    1d00:	mov	r0, r4
    1d04:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1d08:	movw	r1, #0
    1d0c:	movw	r2, #0
    1d10:	mvn	r0, #0
    1d14:	movw	r3, #1076	; 0x434
    1d18:	movt	r1, #0
    1d1c:	movt	r2, #0
    1d20:	bl	0 <coda_set_error>
    1d24:	b	1c20 <coda_type_record_create_field+0xa0>
    1d28:	mov	r4, #0
    1d2c:	mov	r0, r4
    1d30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00001d34 <coda_type_record_get_unique_field_name>:
    1d34:	push	{r4, sl, fp, lr}
    1d38:	add	fp, sp, #8
    1d3c:	mov	r4, r0
    1d40:	ldr	r0, [r0]
    1d44:	mov	r2, r1
    1d48:	cmp	r0, #2
    1d4c:	bne	1d5c <coda_type_record_get_unique_field_name+0x28>
    1d50:	mov	r0, r2
    1d54:	bl	0 <coda_element_name_from_xml_name>
    1d58:	mov	r2, r0
    1d5c:	ldr	r1, [r4, #40]	; 0x28
    1d60:	mov	r0, r2
    1d64:	pop	{r4, sl, fp, lr}
    1d68:	b	0 <coda_identifier_from_name>

00001d6c <coda_type_union_set_field_expression>:
    1d6c:	push	{r4, r5, r7, sl, fp, lr}
    1d70:	add	fp, sp, #16
    1d74:	cmp	r0, #0
    1d78:	beq	1db0 <coda_type_union_set_field_expression+0x44>
    1d7c:	cmp	r1, #0
    1d80:	beq	1dc8 <coda_type_union_set_field_expression+0x5c>
    1d84:	ldr	r2, [r0, #64]	; 0x40
    1d88:	cmp	r2, #0
    1d8c:	beq	1dec <coda_type_union_set_field_expression+0x80>
    1d90:	ldr	r2, [r0, #68]	; 0x44
    1d94:	cmp	r2, #0
    1d98:	beq	1e08 <coda_type_union_set_field_expression+0x9c>
    1d9c:	movw	r0, #65136	; 0xfe70
    1da0:	movw	r1, #0
    1da4:	movt	r0, #65535	; 0xffff
    1da8:	movt	r1, #0
    1dac:	b	1dfc <coda_type_union_set_field_expression+0x90>
    1db0:	movw	r1, #0
    1db4:	movw	r2, #0
    1db8:	mvn	r0, #99	; 0x63
    1dbc:	movw	r3, #1490	; 0x5d2
    1dc0:	movt	r1, #0
    1dc4:	b	1ddc <coda_type_union_set_field_expression+0x70>
    1dc8:	movw	r1, #0
    1dcc:	movw	r2, #0
    1dd0:	mvn	r0, #99	; 0x63
    1dd4:	movw	r3, #1495	; 0x5d7
    1dd8:	movt	r1, #0
    1ddc:	movt	r2, #0
    1de0:	bl	0 <coda_set_error>
    1de4:	mvn	r0, #0
    1de8:	pop	{r4, r5, r7, sl, fp, pc}
    1dec:	movw	r0, #65136	; 0xfe70
    1df0:	movw	r1, #0
    1df4:	movt	r0, #65535	; 0xffff
    1df8:	movt	r1, #0
    1dfc:	bl	0 <coda_set_error>
    1e00:	mvn	r0, #0
    1e04:	pop	{r4, r5, r7, sl, fp, pc}
    1e08:	str	r1, [r0, #68]	; 0x44
    1e0c:	ldr	lr, [r0, #48]	; 0x30
    1e10:	cmp	lr, #1
    1e14:	blt	1e9c <coda_type_union_set_field_expression+0x130>
    1e18:	ldr	r3, [r0, #52]	; 0x34
    1e1c:	add	r2, r0, #24
    1e20:	mov	ip, #0
    1e24:	mov	r1, #0
    1e28:	b	1e50 <coda_type_union_set_field_expression+0xe4>
    1e2c:	ldr	r0, [r3]
    1e30:	ldr	r0, [r0, #8]
    1e34:	ldr	r5, [r0, #28]
    1e38:	ldr	r0, [r0, #24]
    1e3c:	stm	r2, {r0, r5}
    1e40:	add	r1, r1, #1
    1e44:	mov	r0, #0
    1e48:	cmp	lr, r1
    1e4c:	beq	1ec0 <coda_type_union_set_field_expression+0x154>
    1e50:	ldr	r0, [r3, r1, lsl #2]
    1e54:	ldr	r4, [r0, #32]
    1e58:	cmp	r4, #0
    1e5c:	bne	1ea4 <coda_type_union_set_field_expression+0x138>
    1e60:	cmp	r1, #0
    1e64:	str	ip, [r0, #24]
    1e68:	str	ip, [r0, #28]
    1e6c:	beq	1e2c <coda_type_union_set_field_expression+0xc0>
    1e70:	ldr	r0, [r0, #8]
    1e74:	ldrd	r4, [r2]
    1e78:	ldr	r7, [r0, #28]
    1e7c:	ldr	r0, [r0, #24]
    1e80:	eor	r5, r5, r7
    1e84:	eor	r0, r4, r0
    1e88:	orrs	r0, r0, r5
    1e8c:	mvn	r0, #0
    1e90:	mvn	r5, #0
    1e94:	stmne	r2, {r0, r5}
    1e98:	b	1e40 <coda_type_union_set_field_expression+0xd4>
    1e9c:	mov	r0, #0
    1ea0:	pop	{r4, r5, r7, sl, fp, pc}
    1ea4:	ldr	r2, [r0]
    1ea8:	movw	r0, #65136	; 0xfe70
    1eac:	movw	r1, #0
    1eb0:	movt	r0, #65535	; 0xffff
    1eb4:	movt	r1, #0
    1eb8:	bl	0 <coda_set_error>
    1ebc:	mvn	r0, #0
    1ec0:	pop	{r4, r5, r7, sl, fp, pc}

00001ec4 <coda_type_record_validate>:
    1ec4:	push	{fp, lr}
    1ec8:	mov	fp, sp
    1ecc:	cmp	r0, #0
    1ed0:	beq	1f20 <coda_type_record_validate+0x5c>
    1ed4:	ldr	r2, [r0, #64]	; 0x40
    1ed8:	mov	r1, r0
    1edc:	mov	r0, #0
    1ee0:	cmp	r2, #0
    1ee4:	beq	1f58 <coda_type_record_validate+0x94>
    1ee8:	ldr	r2, [r1, #48]	; 0x30
    1eec:	cmp	r2, #0
    1ef0:	beq	1f40 <coda_type_record_validate+0x7c>
    1ef4:	ldr	r2, [r1]
    1ef8:	cmp	r2, #1
    1efc:	bhi	1f58 <coda_type_record_validate+0x94>
    1f00:	ldr	r1, [r1, #68]	; 0x44
    1f04:	cmp	r1, #0
    1f08:	popne	{fp, pc}
    1f0c:	movw	r0, #65136	; 0xfe70
    1f10:	movw	r1, #0
    1f14:	movt	r0, #65535	; 0xffff
    1f18:	movt	r1, #0
    1f1c:	b	1f50 <coda_type_record_validate+0x8c>
    1f20:	movw	r1, #0
    1f24:	movw	r2, #0
    1f28:	mvn	r0, #99	; 0x63
    1f2c:	movw	r3, #1542	; 0x606
    1f30:	movt	r1, #0
    1f34:	movt	r2, #0
    1f38:	bl	0 <coda_set_error>
    1f3c:	b	1f54 <coda_type_record_validate+0x90>
    1f40:	movw	r0, #65136	; 0xfe70
    1f44:	movw	r1, #0
    1f48:	movt	r0, #65535	; 0xffff
    1f4c:	movt	r1, #0
    1f50:	bl	0 <coda_set_error>
    1f54:	mvn	r0, #0
    1f58:	pop	{fp, pc}

00001f5c <coda_type_array_new>:
    1f5c:	push	{r4, sl, fp, lr}
    1f60:	add	fp, sp, #8
    1f64:	sub	sp, sp, #8
    1f68:	mov	r4, r0
    1f6c:	mov	r0, #120	; 0x78
    1f70:	bl	0 <malloc>
    1f74:	cmp	r0, #0
    1f78:	beq	1fcc <coda_type_array_new+0x70>
    1f7c:	cmp	r4, #2
    1f80:	mvn	r1, #0
    1f84:	mov	r2, #0
    1f88:	mvn	ip, #0
    1f8c:	mov	r3, #1
    1f90:	movwcc	r1, #12
    1f94:	str	r2, [r0, #32]
    1f98:	str	r2, [r0, #36]	; 0x24
    1f9c:	str	r2, [r0, #40]	; 0x28
    1fa0:	str	r3, [r0, #44]	; 0x2c
    1fa4:	str	r2, [r0, #48]	; 0x30
    1fa8:	str	r4, [r0]
    1fac:	stmib	r0, {r2, r3}
    1fb0:	str	r1, [r0, #12]
    1fb4:	str	r2, [r0, #16]
    1fb8:	str	r2, [r0, #20]
    1fbc:	str	ip, [r0, #24]
    1fc0:	str	ip, [r0, #28]
    1fc4:	sub	sp, fp, #8
    1fc8:	pop	{r4, sl, fp, pc}
    1fcc:	movw	r1, #0
    1fd0:	movw	r3, #0
    1fd4:	movw	r0, #1581	; 0x62d
    1fd8:	mov	r2, #120	; 0x78
    1fdc:	movt	r1, #0
    1fe0:	movt	r3, #0
    1fe4:	str	r0, [sp]
    1fe8:	mvn	r0, #0
    1fec:	bl	0 <coda_set_error>
    1ff0:	mov	r0, #0
    1ff4:	sub	sp, fp, #8
    1ff8:	pop	{r4, sl, fp, pc}

00001ffc <coda_type_array_set_base_type>:
    1ffc:	push	{r4, r6, r8, r9, fp, lr}
    2000:	add	fp, sp, #16
    2004:	cmp	r0, #0
    2008:	beq	2030 <coda_type_array_set_base_type+0x34>
    200c:	ldr	r2, [r0, #40]	; 0x28
    2010:	cmp	r2, #0
    2014:	beq	2058 <coda_type_array_set_base_type+0x5c>
    2018:	movw	r0, #65136	; 0xfe70
    201c:	movw	r1, #0
    2020:	movt	r0, #65535	; 0xffff
    2024:	movt	r1, #0
    2028:	bl	0 <coda_set_error>
    202c:	b	204c <coda_type_array_set_base_type+0x50>
    2030:	movw	r1, #0
    2034:	movw	r2, #0
    2038:	mvn	r0, #99	; 0x63
    203c:	movw	r3, #1611	; 0x64b
    2040:	movt	r1, #0
    2044:	movt	r2, #0
    2048:	bl	0 <coda_set_error>
    204c:	mvn	r2, #0
    2050:	mov	r0, r2
    2054:	pop	{r4, r6, r8, r9, fp, pc}
    2058:	ldr	lr, [r1]
    205c:	ldr	ip, [r0]
    2060:	cmp	ip, lr
    2064:	beq	207c <coda_type_array_set_base_type+0x80>
    2068:	cmp	lr, #0
    206c:	bne	211c <coda_type_array_set_base_type+0x120>
    2070:	sub	r2, ip, #1
    2074:	cmp	r2, #2
    2078:	bcs	211c <coda_type_array_set_base_type+0x120>
    207c:	cmp	ip, #2
    2080:	bne	20ac <coda_type_array_set_base_type+0xb0>
    2084:	cmp	lr, #2
    2088:	bne	2100 <coda_type_array_set_base_type+0x104>
    208c:	ldr	r2, [r1, #8]
    2090:	cmp	r2, #1
    2094:	bne	2100 <coda_type_array_set_base_type+0x104>
    2098:	movw	r0, #65136	; 0xfe70
    209c:	movw	r1, #0
    20a0:	movt	r0, #65535	; 0xffff
    20a4:	movt	r1, #0
    20a8:	b	2028 <coda_type_array_set_base_type+0x2c>
    20ac:	str	r1, [r0, #40]	; 0x28
    20b0:	cmp	ip, #1
    20b4:	ldr	r2, [r1, #4]
    20b8:	add	r2, r2, #1
    20bc:	str	r2, [r1, #4]
    20c0:	mov	r2, #0
    20c4:	bhi	20f8 <coda_type_array_set_base_type+0xfc>
    20c8:	ldr	r3, [r0, #44]	; 0x2c
    20cc:	cmp	r3, #0
    20d0:	bmi	20f8 <coda_type_array_set_base_type+0xfc>
    20d4:	ldr	ip, [r1, #28]
    20d8:	cmp	ip, #0
    20dc:	bmi	20f8 <coda_type_array_set_base_type+0xfc>
    20e0:	ldr	r1, [r1, #24]
    20e4:	asr	r6, r3, #31
    20e8:	umull	r8, r4, r1, r3
    20ec:	mla	r1, r1, r6, r4
    20f0:	mla	r9, ip, r3, r1
    20f4:	strd	r8, [r0, #24]
    20f8:	mov	r0, r2
    20fc:	pop	{r4, r6, r8, r9, fp, pc}
    2100:	str	r1, [r0, #40]	; 0x28
    2104:	mov	r2, #0
    2108:	ldr	r0, [r1, #4]
    210c:	add	r0, r0, #1
    2110:	str	r0, [r1, #4]
    2114:	mov	r0, r2
    2118:	pop	{r4, r6, r8, r9, fp, pc}
    211c:	movw	r3, #0
    2120:	cmp	lr, #9
    2124:	movt	r3, #0
    2128:	mov	r2, r3
    212c:	bhi	213c <coda_type_array_set_base_type+0x140>
    2130:	movw	r0, #0
    2134:	movt	r0, #0
    2138:	ldr	r2, [r0, lr, lsl #2]
    213c:	cmp	ip, #9
    2140:	bhi	2150 <coda_type_array_set_base_type+0x154>
    2144:	movw	r0, #0
    2148:	movt	r0, #0
    214c:	ldr	r3, [r0, ip, lsl #2]
    2150:	movw	r0, #65136	; 0xfe70
    2154:	movw	r1, #0
    2158:	movt	r0, #65535	; 0xffff
    215c:	movt	r1, #0
    2160:	b	2048 <coda_type_array_set_base_type+0x4c>

00002164 <coda_type_array_add_fixed_dimension>:
    2164:	push	{r4, r6, r8, r9, fp, lr}
    2168:	add	fp, sp, #16
    216c:	cmp	r0, #0
    2170:	beq	21a8 <coda_type_array_add_fixed_dimension+0x44>
    2174:	mov	r2, r1
    2178:	cmn	r1, #1
    217c:	ble	21cc <coda_type_array_add_fixed_dimension+0x68>
    2180:	ldr	lr, [r0, #48]	; 0x30
    2184:	mov	r1, r0
    2188:	cmp	lr, #8
    218c:	bne	21e8 <coda_type_array_add_fixed_dimension+0x84>
    2190:	movw	r0, #65136	; 0xfe70
    2194:	movw	r1, #0
    2198:	mov	r2, #8
    219c:	movt	r0, #65535	; 0xffff
    21a0:	movt	r1, #0
    21a4:	b	21dc <coda_type_array_add_fixed_dimension+0x78>
    21a8:	movw	r1, #0
    21ac:	movw	r2, #0
    21b0:	mvn	r0, #99	; 0x63
    21b4:	movw	r3, #1658	; 0x67a
    21b8:	movt	r1, #0
    21bc:	movt	r2, #0
    21c0:	bl	0 <coda_set_error>
    21c4:	mvn	r0, #0
    21c8:	pop	{r4, r6, r8, r9, fp, pc}
    21cc:	movw	r0, #65136	; 0xfe70
    21d0:	movw	r1, #0
    21d4:	movt	r0, #65535	; 0xffff
    21d8:	movt	r1, #0
    21dc:	bl	0 <coda_set_error>
    21e0:	mvn	r0, #0
    21e4:	pop	{r4, r6, r8, r9, fp, pc}
    21e8:	add	ip, r1, lr, lsl #2
    21ec:	mov	r0, #0
    21f0:	add	r3, lr, #1
    21f4:	str	r0, [ip, #84]	; 0x54
    21f8:	str	r2, [ip, #52]	; 0x34
    21fc:	str	r3, [r1, #48]	; 0x30
    2200:	ldr	ip, [r1, #44]	; 0x2c
    2204:	cmn	ip, #1
    2208:	beq	2258 <coda_type_array_add_fixed_dimension+0xf4>
    220c:	cmp	lr, #0
    2210:	movweq	ip, #1
    2214:	mul	r2, ip, r2
    2218:	str	r2, [r1, #44]	; 0x2c
    221c:	ldr	r3, [r1]
    2220:	cmp	r3, #1
    2224:	bhi	2258 <coda_type_array_add_fixed_dimension+0xf4>
    2228:	ldr	r3, [r1, #40]	; 0x28
    222c:	cmp	r3, #0
    2230:	beq	2258 <coda_type_array_add_fixed_dimension+0xf4>
    2234:	ldr	ip, [r3, #28]
    2238:	cmp	ip, #0
    223c:	bmi	2258 <coda_type_array_add_fixed_dimension+0xf4>
    2240:	ldr	r3, [r3, #24]
    2244:	asr	r6, r2, #31
    2248:	umull	r8, r4, r3, r2
    224c:	mla	r3, r3, r6, r4
    2250:	mla	r9, ip, r2, r3
    2254:	strd	r8, [r1, #24]
    2258:	pop	{r4, r6, r8, r9, fp, pc}

0000225c <coda_type_array_add_variable_dimension>:
    225c:	push	{r4, r6, fp, lr}
    2260:	add	fp, sp, #8
    2264:	cmp	r0, #0
    2268:	beq	2290 <coda_type_array_add_variable_dimension+0x34>
    226c:	ldr	r2, [r0, #48]	; 0x30
    2270:	cmp	r2, #8
    2274:	bne	22b0 <coda_type_array_add_variable_dimension+0x54>
    2278:	movw	r0, #65136	; 0xfe70
    227c:	movw	r1, #0
    2280:	mov	r2, #8
    2284:	movt	r0, #65535	; 0xffff
    2288:	movt	r1, #0
    228c:	b	22f8 <coda_type_array_add_variable_dimension+0x9c>
    2290:	movw	r1, #0
    2294:	movw	r2, #0
    2298:	mvn	r0, #99	; 0x63
    229c:	movw	r3, #1705	; 0x6a9
    22a0:	movt	r1, #0
    22a4:	movt	r2, #0
    22a8:	bl	0 <coda_set_error>
    22ac:	b	22fc <coda_type_array_add_variable_dimension+0xa0>
    22b0:	ldr	r3, [r0]
    22b4:	cmp	r1, #0
    22b8:	bne	2308 <coda_type_array_add_variable_dimension+0xac>
    22bc:	cmp	r3, #1
    22c0:	bhi	2308 <coda_type_array_add_variable_dimension+0xac>
    22c4:	movw	r0, #0
    22c8:	movw	r1, #0
    22cc:	movw	r2, #0
    22d0:	movt	r0, #0
    22d4:	movt	r1, #0
    22d8:	movt	r2, #0
    22dc:	moveq	r1, r0
    22e0:	cmp	r3, #0
    22e4:	movw	r0, #65136	; 0xfe70
    22e8:	movne	r2, r1
    22ec:	movw	r1, #0
    22f0:	movt	r0, #65535	; 0xffff
    22f4:	movt	r1, #0
    22f8:	bl	0 <coda_set_error>
    22fc:	mvn	r1, #0
    2300:	mov	r0, r1
    2304:	pop	{r4, r6, fp, pc}
    2308:	add	r4, r0, r2, lsl #2
    230c:	mvn	r6, #0
    2310:	cmp	r3, #1
    2314:	str	r1, [r4, #84]	; 0x54
    2318:	add	r1, r2, #1
    231c:	str	r6, [r4, #52]	; 0x34
    2320:	str	r6, [r0, #44]	; 0x2c
    2324:	str	r1, [r0, #48]	; 0x30
    2328:	mov	r1, #0
    232c:	bhi	2344 <coda_type_array_add_variable_dimension+0xe8>
    2330:	ldr	r2, [r0, #28]
    2334:	cmp	r2, #0
    2338:	addpl	r0, r0, #24
    233c:	strpl	r6, [r0]
    2340:	strpl	r6, [r0, #4]
    2344:	mov	r0, r1
    2348:	pop	{r4, r6, fp, pc}

0000234c <coda_type_array_validate>:
    234c:	push	{fp, lr}
    2350:	mov	fp, sp
    2354:	cmp	r0, #0
    2358:	beq	2388 <coda_type_array_validate+0x3c>
    235c:	ldr	r1, [r0, #48]	; 0x30
    2360:	mov	r0, #0
    2364:	cmp	r1, #0
    2368:	popne	{fp, pc}
    236c:	movw	r0, #65136	; 0xfe70
    2370:	movw	r1, #0
    2374:	movt	r0, #65535	; 0xffff
    2378:	movt	r1, #0
    237c:	bl	0 <coda_set_error>
    2380:	mvn	r0, #0
    2384:	pop	{fp, pc}
    2388:	movw	r1, #0
    238c:	movw	r2, #0
    2390:	mvn	r0, #99	; 0x63
    2394:	movw	r3, #1742	; 0x6ce
    2398:	movt	r1, #0
    239c:	movt	r2, #0
    23a0:	bl	0 <coda_set_error>
    23a4:	mvn	r0, #0
    23a8:	pop	{fp, pc}

000023ac <coda_type_number_new>:
    23ac:	push	{r4, r5, fp, lr}
    23b0:	add	fp, sp, #8
    23b4:	sub	sp, sp, #8
    23b8:	mov	r5, r0
    23bc:	orr	r0, r1, #1
    23c0:	mov	r4, r1
    23c4:	cmp	r0, #3
    23c8:	bne	2428 <coda_type_number_new+0x7c>
    23cc:	mov	r0, #56	; 0x38
    23d0:	bl	0 <malloc>
    23d4:	cmp	r0, #0
    23d8:	beq	2460 <coda_type_number_new+0xb4>
    23dc:	vmov.i32	q8, #0	; 0x00000000
    23e0:	add	r3, r0, #32
    23e4:	cmp	r4, #2
    23e8:	mov	r2, #0
    23ec:	mvn	r1, #0
    23f0:	str	r2, [r0, #48]	; 0x30
    23f4:	str	r2, [r0, #52]	; 0x34
    23f8:	vst1.64	{d16-d17}, [r3]
    23fc:	mov	r3, #9
    2400:	movweq	r3, #6
    2404:	str	r5, [r0]
    2408:	stmib	r0, {r2, r4}
    240c:	str	r3, [r0, #12]
    2410:	str	r2, [r0, #16]
    2414:	str	r2, [r0, #20]
    2418:	str	r1, [r0, #24]
    241c:	str	r1, [r0, #28]
    2420:	sub	sp, fp, #8
    2424:	pop	{r4, r5, fp, pc}
    2428:	cmp	r4, #6
    242c:	bhi	2440 <coda_type_number_new+0x94>
    2430:	movw	r0, #0
    2434:	movt	r0, #0
    2438:	ldr	r2, [r0, r4, lsl #2]
    243c:	b	2448 <coda_type_number_new+0x9c>
    2440:	movw	r2, #0
    2444:	movt	r2, #0
    2448:	movw	r0, #65136	; 0xfe70
    244c:	movw	r1, #0
    2450:	movt	r0, #65535	; 0xffff
    2454:	movt	r1, #0
    2458:	bl	0 <coda_set_error>
    245c:	b	2484 <coda_type_number_new+0xd8>
    2460:	movw	r1, #0
    2464:	movw	r3, #0
    2468:	movw	r0, #1769	; 0x6e9
    246c:	mov	r2, #56	; 0x38
    2470:	movt	r1, #0
    2474:	movt	r3, #0
    2478:	str	r0, [sp]
    247c:	mvn	r0, #0
    2480:	bl	0 <coda_set_error>
    2484:	mov	r0, #0
    2488:	sub	sp, fp, #8
    248c:	pop	{r4, r5, fp, pc}

00002490 <coda_type_number_set_unit>:
    2490:	push	{r4, sl, fp, lr}
    2494:	add	fp, sp, #8
    2498:	cmp	r1, #0
    249c:	beq	24c8 <coda_type_number_set_unit+0x38>
    24a0:	mov	r4, r0
    24a4:	ldr	r0, [r0, #40]	; 0x28
    24a8:	cmp	r0, #0
    24ac:	beq	24f0 <coda_type_number_set_unit+0x60>
    24b0:	movw	r0, #65136	; 0xfe70
    24b4:	movw	r1, #0
    24b8:	movt	r0, #65535	; 0xffff
    24bc:	movt	r1, #0
    24c0:	bl	0 <coda_set_error>
    24c4:	b	24e4 <coda_type_number_set_unit+0x54>
    24c8:	movw	r1, #0
    24cc:	movw	r2, #0
    24d0:	mvn	r0, #99	; 0x63
    24d4:	movw	r3, #1793	; 0x701
    24d8:	movt	r1, #0
    24dc:	movt	r2, #0
    24e0:	bl	0 <coda_set_error>
    24e4:	mvn	r4, #0
    24e8:	mov	r0, r4
    24ec:	pop	{r4, sl, fp, pc}
    24f0:	mov	r0, r1
    24f4:	bl	0 <strdup>
    24f8:	str	r0, [r4, #40]	; 0x28
    24fc:	mov	r4, #0
    2500:	cmp	r0, #0
    2504:	beq	2510 <coda_type_number_set_unit+0x80>
    2508:	mov	r0, r4
    250c:	pop	{r4, sl, fp, pc}
    2510:	movw	r1, #0
    2514:	movw	r2, #0
    2518:	mvn	r0, #0
    251c:	movw	r3, #1805	; 0x70d
    2520:	mvn	r4, #0
    2524:	movt	r1, #0
    2528:	movt	r2, #0
    252c:	bl	0 <coda_set_error>
    2530:	mov	r0, r4
    2534:	pop	{r4, sl, fp, pc}

00002538 <coda_type_number_set_endianness>:
    2538:	push	{fp, lr}
    253c:	mov	fp, sp
    2540:	cmp	r0, #0
    2544:	strne	r1, [r0, #44]	; 0x2c
    2548:	movne	r0, #0
    254c:	popne	{fp, pc}
    2550:	movw	r1, #0
    2554:	movw	r2, #0
    2558:	mvn	r0, #99	; 0x63
    255c:	movw	r3, #1816	; 0x718
    2560:	movt	r1, #0
    2564:	movt	r2, #0
    2568:	bl	0 <coda_set_error>
    256c:	mvn	r0, #0
    2570:	pop	{fp, pc}

00002574 <coda_type_number_set_conversion>:
    2574:	push	{fp, lr}
    2578:	mov	fp, sp
    257c:	cmp	r0, #0
    2580:	beq	25ac <coda_type_number_set_conversion+0x38>
    2584:	ldr	r2, [r0, #48]	; 0x30
    2588:	cmp	r2, #0
    258c:	beq	25d0 <coda_type_number_set_conversion+0x5c>
    2590:	movw	r0, #65136	; 0xfe70
    2594:	movw	r1, #0
    2598:	movt	r0, #65535	; 0xffff
    259c:	movt	r1, #0
    25a0:	bl	0 <coda_set_error>
    25a4:	mvn	r0, #0
    25a8:	pop	{fp, pc}
    25ac:	movw	r1, #0
    25b0:	movw	r2, #0
    25b4:	mvn	r0, #99	; 0x63
    25b8:	movw	r3, #1827	; 0x723
    25bc:	movt	r1, #0
    25c0:	movt	r2, #0
    25c4:	bl	0 <coda_set_error>
    25c8:	mvn	r0, #0
    25cc:	pop	{fp, pc}
    25d0:	str	r1, [r0, #48]	; 0x30
    25d4:	mov	r0, #0
    25d8:	pop	{fp, pc}

000025dc <coda_type_number_add_ascii_float_mapping>:
    25dc:	push	{fp, lr}
    25e0:	mov	fp, sp
    25e4:	cmp	r0, #0
    25e8:	beq	2610 <coda_type_number_add_ascii_float_mapping+0x34>
    25ec:	mov	r2, r1
    25f0:	cmp	r1, #0
    25f4:	beq	2628 <coda_type_number_add_ascii_float_mapping+0x4c>
    25f8:	ldr	r1, [r0, #8]
    25fc:	cmp	r1, #3
    2600:	bne	264c <coda_type_number_add_ascii_float_mapping+0x70>
    2604:	add	r1, r0, #52	; 0x34
    2608:	pop	{fp, lr}
    260c:	b	2668 <mapping_type_add_mapping>
    2610:	movw	r1, #0
    2614:	movw	r2, #0
    2618:	mvn	r0, #99	; 0x63
    261c:	movw	r3, #1843	; 0x733
    2620:	movt	r1, #0
    2624:	b	263c <coda_type_number_add_ascii_float_mapping+0x60>
    2628:	movw	r1, #0
    262c:	movw	r2, #0
    2630:	mvn	r0, #99	; 0x63
    2634:	movw	r3, #1848	; 0x738
    2638:	movt	r1, #0
    263c:	movt	r2, #0
    2640:	bl	0 <coda_set_error>
    2644:	mvn	r0, #0
    2648:	pop	{fp, pc}
    264c:	movw	r0, #65136	; 0xfe70
    2650:	movw	r1, #0
    2654:	movt	r0, #65535	; 0xffff
    2658:	movt	r1, #0
    265c:	bl	0 <coda_set_error>
    2660:	mvn	r0, #0
    2664:	pop	{fp, pc}

00002668 <mapping_type_add_mapping>:
    2668:	push	{r4, r5, r6, r7, fp, lr}
    266c:	add	fp, sp, #16
    2670:	sub	sp, sp, #8
    2674:	cmp	r2, #0
    2678:	beq	26ac <mapping_type_add_mapping+0x44>
    267c:	mov	r6, r1
    2680:	cmp	r1, #0
    2684:	beq	26c4 <mapping_type_add_mapping+0x5c>
    2688:	mov	r4, r0
    268c:	ldr	r0, [r6]
    2690:	mov	r5, r2
    2694:	cmp	r0, #0
    2698:	beq	26f0 <mapping_type_add_mapping+0x88>
    269c:	ldr	r1, [r0, #8]
    26a0:	tst	r1, #15
    26a4:	bne	2748 <mapping_type_add_mapping+0xe0>
    26a8:	b	2724 <mapping_type_add_mapping+0xbc>
    26ac:	movw	r1, #0
    26b0:	movw	r2, #0
    26b4:	mvn	r0, #99	; 0x63
    26b8:	mov	r3, #348	; 0x15c
    26bc:	movt	r1, #0
    26c0:	b	26d8 <mapping_type_add_mapping+0x70>
    26c4:	movw	r1, #0
    26c8:	movw	r2, #0
    26cc:	mvn	r0, #99	; 0x63
    26d0:	movw	r3, #353	; 0x161
    26d4:	movt	r1, #0
    26d8:	movt	r2, #0
    26dc:	bl	0 <coda_set_error>
    26e0:	mvn	r6, #0
    26e4:	mov	r0, r6
    26e8:	sub	sp, fp, #16
    26ec:	pop	{r4, r5, r6, r7, fp, pc}
    26f0:	mov	r0, #16
    26f4:	bl	0 <malloc>
    26f8:	cmp	r0, #0
    26fc:	str	r0, [r6]
    2700:	beq	27dc <mapping_type_add_mapping+0x174>
    2704:	ldrd	r2, [r4, #24]
    2708:	mov	r1, #0
    270c:	cmn	r3, #1
    2710:	orr	r7, r3, r3, asr #31
    2714:	mvnle	r2, #0
    2718:	stm	r0, {r2, r7}
    271c:	str	r1, [r0, #8]
    2720:	str	r1, [r0, #12]
    2724:	ldr	r0, [r0, #12]
    2728:	mov	r7, #64	; 0x40
    272c:	add	r1, r7, r1, lsl #2
    2730:	bl	0 <realloc>
    2734:	ldr	r1, [r6]
    2738:	cmp	r0, #0
    273c:	beq	27b4 <mapping_type_add_mapping+0x14c>
    2740:	str	r0, [r1, #12]
    2744:	ldr	r0, [r6]
    2748:	ldrd	r0, [r0, #8]
    274c:	str	r5, [r1, r0, lsl #2]
    2750:	ldr	r1, [r6]
    2754:	mov	r6, #0
    2758:	ldr	r0, [r1, #8]
    275c:	add	r0, r0, #1
    2760:	str	r0, [r1, #8]
    2764:	ldr	r0, [r4, #28]
    2768:	cmp	r0, #0
    276c:	bmi	26e4 <mapping_type_add_mapping+0x7c>
    2770:	ldr	r2, [r1]
    2774:	ldr	r1, [r1, #4]
    2778:	mvn	r0, #0
    277c:	subs	r3, r0, r2
    2780:	sbcs	r3, r0, r1
    2784:	bge	26e4 <mapping_type_add_mapping+0x7c>
    2788:	ldr	r3, [r5]
    278c:	lsr	r2, r2, #3
    2790:	lsr	r7, r1, #3
    2794:	orr	r1, r2, r1, lsl #29
    2798:	eor	r7, r7, r3, asr #31
    279c:	eor	r1, r1, r3
    27a0:	orrs	r1, r1, r7
    27a4:	addne	r1, r4, #24
    27a8:	strne	r0, [r1]
    27ac:	strne	r0, [r1, #4]
    27b0:	b	26e4 <mapping_type_add_mapping+0x7c>
    27b4:	ldr	r0, [r1, #8]
    27b8:	mov	r1, #380	; 0x17c
    27bc:	movw	r3, #0
    27c0:	mvn	r6, #0
    27c4:	str	r1, [sp]
    27c8:	movw	r1, #0
    27cc:	movt	r3, #0
    27d0:	movt	r1, #0
    27d4:	add	r2, r7, r0, lsl #2
    27d8:	b	27fc <mapping_type_add_mapping+0x194>
    27dc:	movw	r1, #0
    27e0:	movw	r3, #0
    27e4:	movw	r0, #363	; 0x16b
    27e8:	mov	r2, #16
    27ec:	mvn	r6, #0
    27f0:	movt	r1, #0
    27f4:	movt	r3, #0
    27f8:	str	r0, [sp]
    27fc:	mvn	r0, #0
    2800:	bl	0 <coda_set_error>
    2804:	b	26e4 <mapping_type_add_mapping+0x7c>

00002808 <coda_type_number_add_ascii_integer_mapping>:
    2808:	push	{fp, lr}
    280c:	mov	fp, sp
    2810:	cmp	r0, #0
    2814:	beq	283c <coda_type_number_add_ascii_integer_mapping+0x34>
    2818:	mov	r2, r1
    281c:	cmp	r1, #0
    2820:	beq	2854 <coda_type_number_add_ascii_integer_mapping+0x4c>
    2824:	ldr	r1, [r0, #8]
    2828:	cmp	r1, #2
    282c:	bne	2878 <coda_type_number_add_ascii_integer_mapping+0x70>
    2830:	add	r1, r0, #52	; 0x34
    2834:	pop	{fp, lr}
    2838:	b	2668 <mapping_type_add_mapping>
    283c:	movw	r1, #0
    2840:	movw	r2, #0
    2844:	mvn	r0, #99	; 0x63
    2848:	movw	r3, #1863	; 0x747
    284c:	movt	r1, #0
    2850:	b	2868 <coda_type_number_add_ascii_integer_mapping+0x60>
    2854:	movw	r1, #0
    2858:	movw	r2, #0
    285c:	mvn	r0, #99	; 0x63
    2860:	movw	r3, #1868	; 0x74c
    2864:	movt	r1, #0
    2868:	movt	r2, #0
    286c:	bl	0 <coda_set_error>
    2870:	mvn	r0, #0
    2874:	pop	{fp, pc}
    2878:	movw	r0, #65136	; 0xfe70
    287c:	movw	r1, #0
    2880:	movt	r0, #65535	; 0xffff
    2884:	movt	r1, #0
    2888:	bl	0 <coda_set_error>
    288c:	mvn	r0, #0
    2890:	pop	{fp, pc}

00002894 <coda_type_number_validate>:
    2894:	push	{r4, r5, fp, lr}
    2898:	add	fp, sp, #8
    289c:	cmp	r0, #0
    28a0:	beq	2948 <coda_type_number_validate+0xb4>
    28a4:	ldr	r2, [r0]
    28a8:	mov	r1, r0
    28ac:	mov	r0, #0
    28b0:	cmp	r2, #1
    28b4:	bne	2af4 <coda_type_number_validate+0x260>
    28b8:	ldrd	r4, [r1, #24]
    28bc:	cmp	r5, #0
    28c0:	bmi	2964 <coda_type_number_validate+0xd0>
    28c4:	ldr	r2, [r1, #12]
    28c8:	cmp	r2, #9
    28cc:	bhi	2af8 <coda_type_number_validate+0x264>
    28d0:	add	r3, pc, #0
    28d4:	ldr	pc, [r3, r2, lsl #2]
    28d8:	.word	0x00002900
    28dc:	.word	0x00002900
    28e0:	.word	0x00002a18
    28e4:	.word	0x00002a18
    28e8:	.word	0x00002988
    28ec:	.word	0x00002988
    28f0:	.word	0x000029d0
    28f4:	.word	0x000029d0
    28f8:	.word	0x00002a88
    28fc:	.word	0x00002a60
    2900:	subs	r3, r4, #9
    2904:	sbcs	r3, r5, #0
    2908:	blt	2a94 <coda_type_number_validate+0x200>
    290c:	movw	r0, #0
    2910:	movw	r1, #0
    2914:	cmp	r2, #0
    2918:	movw	r3, #0
    291c:	movt	r0, #0
    2920:	movt	r1, #0
    2924:	movt	r3, #0
    2928:	moveq	r1, r0
    292c:	cmp	r2, #1
    2930:	movw	r0, #65136	; 0xfe70
    2934:	movne	r3, r1
    2938:	movw	r1, #0
    293c:	movt	r0, #65535	; 0xffff
    2940:	movt	r1, #0
    2944:	b	2ae8 <coda_type_number_validate+0x254>
    2948:	movw	r1, #0
    294c:	movw	r2, #0
    2950:	mvn	r0, #99	; 0x63
    2954:	movw	r3, #1883	; 0x75b
    2958:	movt	r1, #0
    295c:	movt	r2, #0
    2960:	b	2aec <coda_type_number_validate+0x258>
    2964:	ldr	r2, [r1, #32]
    2968:	cmp	r2, #0
    296c:	bne	2a94 <coda_type_number_validate+0x200>
    2970:	movw	r0, #65136	; 0xfe70
    2974:	movw	r1, #0
    2978:	movt	r0, #65535	; 0xffff
    297c:	movt	r1, #0
    2980:	bl	0 <coda_set_error>
    2984:	b	2af0 <coda_type_number_validate+0x25c>
    2988:	subs	r3, r4, #33	; 0x21
    298c:	sbcs	r3, r5, #0
    2990:	blt	2a94 <coda_type_number_validate+0x200>
    2994:	movw	r0, #0
    2998:	movw	r1, #0
    299c:	cmp	r2, #4
    29a0:	movw	r3, #0
    29a4:	movt	r0, #0
    29a8:	movt	r1, #0
    29ac:	movt	r3, #0
    29b0:	moveq	r1, r0
    29b4:	cmp	r2, #5
    29b8:	movw	r0, #65136	; 0xfe70
    29bc:	movne	r3, r1
    29c0:	movw	r1, #0
    29c4:	movt	r0, #65535	; 0xffff
    29c8:	movt	r1, #0
    29cc:	b	2ae8 <coda_type_number_validate+0x254>
    29d0:	subs	r3, r4, #65	; 0x41
    29d4:	sbcs	r3, r5, #0
    29d8:	blt	2a94 <coda_type_number_validate+0x200>
    29dc:	movw	r0, #0
    29e0:	movw	r1, #0
    29e4:	cmp	r2, #6
    29e8:	movw	r3, #0
    29ec:	movt	r0, #0
    29f0:	movt	r1, #0
    29f4:	movt	r3, #0
    29f8:	moveq	r1, r0
    29fc:	cmp	r2, #7
    2a00:	movw	r0, #65136	; 0xfe70
    2a04:	movne	r3, r1
    2a08:	movw	r1, #0
    2a0c:	movt	r0, #65535	; 0xffff
    2a10:	movt	r1, #0
    2a14:	b	2ae8 <coda_type_number_validate+0x254>
    2a18:	subs	r3, r4, #17
    2a1c:	sbcs	r3, r5, #0
    2a20:	blt	2a94 <coda_type_number_validate+0x200>
    2a24:	movw	r0, #0
    2a28:	movw	r1, #0
    2a2c:	cmp	r2, #2
    2a30:	movw	r3, #0
    2a34:	movt	r0, #0
    2a38:	movt	r1, #0
    2a3c:	movt	r3, #0
    2a40:	moveq	r1, r0
    2a44:	cmp	r2, #3
    2a48:	movw	r0, #65136	; 0xfe70
    2a4c:	movne	r3, r1
    2a50:	movw	r1, #0
    2a54:	movt	r0, #65535	; 0xffff
    2a58:	movt	r1, #0
    2a5c:	b	2ae8 <coda_type_number_validate+0x254>
    2a60:	eor	r2, r4, #64	; 0x40
    2a64:	orrs	r2, r2, r5
    2a68:	beq	2a94 <coda_type_number_validate+0x200>
    2a6c:	movw	r0, #65136	; 0xfe70
    2a70:	movw	r1, #0
    2a74:	movw	r3, #0
    2a78:	movt	r0, #65535	; 0xffff
    2a7c:	movt	r1, #0
    2a80:	movt	r3, #0
    2a84:	b	2ae8 <coda_type_number_validate+0x254>
    2a88:	eor	r2, r4, #32
    2a8c:	orrs	r2, r2, r5
    2a90:	bne	2ad0 <coda_type_number_validate+0x23c>
    2a94:	ldr	r1, [r1, #44]	; 0x2c
    2a98:	cmp	r1, #1
    2a9c:	popne	{r4, r5, fp, pc}
    2aa0:	mov	r0, #0
    2aa4:	cmp	r5, #0
    2aa8:	bmi	2af4 <coda_type_number_validate+0x260>
    2aac:	ands	r1, r4, #7
    2ab0:	beq	2af4 <coda_type_number_validate+0x260>
    2ab4:	movw	r0, #65136	; 0xfe70
    2ab8:	movw	r1, #0
    2abc:	mov	r2, r4
    2ac0:	movt	r0, #65535	; 0xffff
    2ac4:	movt	r1, #0
    2ac8:	bl	0 <coda_set_error>
    2acc:	b	2af0 <coda_type_number_validate+0x25c>
    2ad0:	movw	r0, #65136	; 0xfe70
    2ad4:	movw	r1, #0
    2ad8:	movw	r3, #0
    2adc:	movt	r0, #65535	; 0xffff
    2ae0:	movt	r1, #0
    2ae4:	movt	r3, #0
    2ae8:	mov	r2, r4
    2aec:	bl	0 <coda_set_error>
    2af0:	mvn	r0, #0
    2af4:	pop	{r4, r5, fp, pc}
    2af8:	movw	r0, #0
    2afc:	movw	r1, #0
    2b00:	movw	r3, #0
    2b04:	movw	r2, #1951	; 0x79f
    2b08:	movt	r0, #0
    2b0c:	movt	r1, #0
    2b10:	movt	r3, #0
    2b14:	bl	0 <__assert_fail>

00002b18 <coda_type_text_new>:
    2b18:	push	{r4, sl, fp, lr}
    2b1c:	add	fp, sp, #8
    2b20:	sub	sp, sp, #8
    2b24:	mov	r4, r0
    2b28:	mov	r0, #48	; 0x30
    2b2c:	bl	0 <malloc>
    2b30:	cmp	r0, #0
    2b34:	beq	2b74 <coda_type_text_new+0x5c>
    2b38:	vmov.i32	q8, #0	; 0x00000000
    2b3c:	mvn	r1, #0
    2b40:	mov	r2, #0
    2b44:	mov	ip, #11
    2b48:	mov	r3, #4
    2b4c:	str	r4, [r0]
    2b50:	stmib	r0, {r2, r3, ip}
    2b54:	str	r2, [r0, #16]
    2b58:	str	r2, [r0, #20]
    2b5c:	str	r1, [r0, #24]
    2b60:	str	r1, [r0, #28]
    2b64:	add	r1, r0, #32
    2b68:	vst1.64	{d16-d17}, [r1]
    2b6c:	sub	sp, fp, #8
    2b70:	pop	{r4, sl, fp, pc}
    2b74:	movw	r1, #0
    2b78:	movw	r3, #0
    2b7c:	movw	r0, #1980	; 0x7bc
    2b80:	mov	r2, #48	; 0x30
    2b84:	movt	r1, #0
    2b88:	movt	r3, #0
    2b8c:	str	r0, [sp]
    2b90:	mvn	r0, #0
    2b94:	bl	0 <coda_set_error>
    2b98:	mov	r0, #0
    2b9c:	sub	sp, fp, #8
    2ba0:	pop	{r4, sl, fp, pc}

00002ba4 <coda_type_text_set_fixed_value>:
    2ba4:	push	{r4, sl, fp, lr}
    2ba8:	add	fp, sp, #8
    2bac:	cmp	r0, #0
    2bb0:	beq	2be4 <coda_type_text_set_fixed_value+0x40>
    2bb4:	cmp	r1, #0
    2bb8:	beq	2bfc <coda_type_text_set_fixed_value+0x58>
    2bbc:	mov	r4, r0
    2bc0:	ldr	r0, [r0, #40]	; 0x28
    2bc4:	cmp	r0, #0
    2bc8:	beq	2c24 <coda_type_text_set_fixed_value+0x80>
    2bcc:	movw	r0, #65136	; 0xfe70
    2bd0:	movw	r1, #0
    2bd4:	movt	r0, #65535	; 0xffff
    2bd8:	movt	r1, #0
    2bdc:	bl	0 <coda_set_error>
    2be0:	b	2c18 <coda_type_text_set_fixed_value+0x74>
    2be4:	movw	r1, #0
    2be8:	movw	r2, #0
    2bec:	mvn	r0, #99	; 0x63
    2bf0:	movw	r3, #2002	; 0x7d2
    2bf4:	movt	r1, #0
    2bf8:	b	2c10 <coda_type_text_set_fixed_value+0x6c>
    2bfc:	movw	r1, #0
    2c00:	movw	r2, #0
    2c04:	mvn	r0, #99	; 0x63
    2c08:	movw	r3, #2007	; 0x7d7
    2c0c:	movt	r1, #0
    2c10:	movt	r2, #0
    2c14:	bl	0 <coda_set_error>
    2c18:	mvn	r4, #0
    2c1c:	mov	r0, r4
    2c20:	pop	{r4, sl, fp, pc}
    2c24:	mov	r0, r1
    2c28:	bl	0 <strdup>
    2c2c:	str	r0, [r4, #40]	; 0x28
    2c30:	mov	r4, #0
    2c34:	cmp	r0, #0
    2c38:	beq	2c44 <coda_type_text_set_fixed_value+0xa0>
    2c3c:	mov	r0, r4
    2c40:	pop	{r4, sl, fp, pc}
    2c44:	movw	r1, #0
    2c48:	movw	r2, #0
    2c4c:	mvn	r0, #0
    2c50:	movw	r3, #2019	; 0x7e3
    2c54:	mvn	r4, #0
    2c58:	movt	r1, #0
    2c5c:	movt	r2, #0
    2c60:	bl	0 <coda_set_error>
    2c64:	mov	r0, r4
    2c68:	pop	{r4, sl, fp, pc}

00002c6c <coda_type_text_set_special_text_type>:
    2c6c:	push	{fp, lr}
    2c70:	mov	fp, sp
    2c74:	cmp	r0, #0
    2c78:	beq	2ce8 <coda_type_text_set_special_text_type+0x7c>
    2c7c:	ldr	ip, [r0]
    2c80:	cmp	ip, #9
    2c84:	bhi	2d0c <coda_type_text_set_special_text_type+0xa0>
    2c88:	movw	r2, #0
    2c8c:	add	r3, pc, #4
    2c90:	movt	r2, #0
    2c94:	ldr	pc, [r3, ip, lsl #2]
    2c98:	.word	0x00002cc0
    2c9c:	.word	0x00002d74
    2ca0:	.word	0x00002d18
    2ca4:	.word	0x00002d24
    2ca8:	.word	0x00002d30
    2cac:	.word	0x00002d3c
    2cb0:	.word	0x00002d48
    2cb4:	.word	0x00002d54
    2cb8:	.word	0x00002d60
    2cbc:	.word	0x00002d6c
    2cc0:	ldr	r2, [r0, #44]	; 0x2c
    2cc4:	cmp	r2, #0
    2cc8:	beq	2d90 <coda_type_text_set_special_text_type+0x124>
    2ccc:	movw	r0, #65136	; 0xfe70
    2cd0:	movw	r1, #0
    2cd4:	movt	r0, #65535	; 0xffff
    2cd8:	movt	r1, #0
    2cdc:	bl	0 <coda_set_error>
    2ce0:	mvn	r0, #0
    2ce4:	pop	{fp, pc}
    2ce8:	movw	r1, #0
    2cec:	movw	r2, #0
    2cf0:	mvn	r0, #99	; 0x63
    2cf4:	movw	r3, #2030	; 0x7ee
    2cf8:	movt	r1, #0
    2cfc:	movt	r2, #0
    2d00:	bl	0 <coda_set_error>
    2d04:	mvn	r0, #0
    2d08:	pop	{fp, pc}
    2d0c:	movw	r2, #0
    2d10:	movt	r2, #0
    2d14:	b	2d74 <coda_type_text_set_special_text_type+0x108>
    2d18:	movw	r2, #0
    2d1c:	movt	r2, #0
    2d20:	b	2d74 <coda_type_text_set_special_text_type+0x108>
    2d24:	movw	r2, #0
    2d28:	movt	r2, #0
    2d2c:	b	2d74 <coda_type_text_set_special_text_type+0x108>
    2d30:	movw	r2, #0
    2d34:	movt	r2, #0
    2d38:	b	2d74 <coda_type_text_set_special_text_type+0x108>
    2d3c:	movw	r2, #0
    2d40:	movt	r2, #0
    2d44:	b	2d74 <coda_type_text_set_special_text_type+0x108>
    2d48:	movw	r2, #0
    2d4c:	movt	r2, #0
    2d50:	b	2d74 <coda_type_text_set_special_text_type+0x108>
    2d54:	movw	r2, #0
    2d58:	movt	r2, #0
    2d5c:	b	2d74 <coda_type_text_set_special_text_type+0x108>
    2d60:	movw	r2, #0
    2d64:	movt	r2, #0
    2d68:	b	2d74 <coda_type_text_set_special_text_type+0x108>
    2d6c:	movw	r2, #0
    2d70:	movt	r2, #0
    2d74:	movw	r0, #65136	; 0xfe70
    2d78:	movw	r1, #0
    2d7c:	movt	r0, #65535	; 0xffff
    2d80:	movt	r1, #0
    2d84:	bl	0 <coda_set_error>
    2d88:	mvn	r0, #0
    2d8c:	pop	{fp, pc}
    2d90:	str	r1, [r0, #44]	; 0x2c
    2d94:	mov	r0, #0
    2d98:	pop	{fp, pc}

00002d9c <coda_type_text_validate>:
    2d9c:	push	{r4, r5, r6, r7, fp, lr}
    2da0:	add	fp, sp, #16
    2da4:	sub	sp, sp, #24
    2da8:	cmp	r0, #0
    2dac:	beq	2df4 <coda_type_text_validate+0x58>
    2db0:	mov	r4, r0
    2db4:	ldr	r0, [r0]
    2db8:	cmp	r0, #1
    2dbc:	bhi	2e48 <coda_type_text_validate+0xac>
    2dc0:	ldr	r1, [r4, #32]
    2dc4:	ldr	r2, [r4, #24]
    2dc8:	ldr	r0, [r4, #28]
    2dcc:	cmp	r1, #0
    2dd0:	bne	2e20 <coda_type_text_validate+0x84>
    2dd4:	cmn	r0, #1
    2dd8:	bgt	2e20 <coda_type_text_validate+0x84>
    2ddc:	movw	r0, #65136	; 0xfe70
    2de0:	movw	r1, #0
    2de4:	movt	r0, #65535	; 0xffff
    2de8:	movt	r1, #0
    2dec:	bl	0 <coda_set_error>
    2df0:	b	2e10 <coda_type_text_validate+0x74>
    2df4:	movw	r1, #0
    2df8:	movw	r2, #0
    2dfc:	mvn	r0, #99	; 0x63
    2e00:	movw	r3, #2052	; 0x804
    2e04:	movt	r1, #0
    2e08:	movt	r2, #0
    2e0c:	bl	0 <coda_set_error>
    2e10:	mvn	r5, #0
    2e14:	mov	r0, r5
    2e18:	sub	sp, fp, #16
    2e1c:	pop	{r4, r5, r6, r7, fp, pc}
    2e20:	cmp	r0, #0
    2e24:	bmi	2e48 <coda_type_text_validate+0xac>
    2e28:	ands	r0, r2, #7
    2e2c:	beq	2e48 <coda_type_text_validate+0xac>
    2e30:	movw	r0, #65136	; 0xfe70
    2e34:	movw	r1, #0
    2e38:	movt	r0, #65535	; 0xffff
    2e3c:	movt	r1, #0
    2e40:	bl	0 <coda_set_error>
    2e44:	b	2e10 <coda_type_text_validate+0x74>
    2e48:	ldr	r0, [r4, #12]
    2e4c:	cmp	r0, #10
    2e50:	bne	2e64 <coda_type_text_validate+0xc8>
    2e54:	ldrd	r2, [r4, #24]
    2e58:	eor	r0, r2, #8
    2e5c:	orrs	r0, r0, r3
    2e60:	bne	2ed8 <coda_type_text_validate+0x13c>
    2e64:	ldr	r0, [r4, #40]	; 0x28
    2e68:	mov	r5, #0
    2e6c:	cmp	r0, #0
    2e70:	beq	2e14 <coda_type_text_validate+0x78>
    2e74:	ldr	r7, [r4, #28]
    2e78:	cmn	r7, #1
    2e7c:	ble	2ef0 <coda_type_text_validate+0x154>
    2e80:	ldr	r1, [r4, #24]
    2e84:	lsr	r1, r1, #3
    2e88:	orr	r6, r1, r7, lsl #29
    2e8c:	bl	0 <strlen>
    2e90:	eor	r0, r6, r0
    2e94:	orr	r0, r0, r7, lsr #3
    2e98:	cmp	r0, #0
    2e9c:	beq	2e14 <coda_type_text_validate+0x78>
    2ea0:	add	r5, sp, #3
    2ea4:	lsr	r1, r7, #3
    2ea8:	mov	r0, r6
    2eac:	mov	r2, r5
    2eb0:	bl	0 <coda_str64>
    2eb4:	ldr	r0, [r4, #40]	; 0x28
    2eb8:	bl	0 <strlen>
    2ebc:	movw	r1, #0
    2ec0:	mov	r2, r0
    2ec4:	movw	r0, #65136	; 0xfe70
    2ec8:	mov	r3, r5
    2ecc:	movt	r0, #65535	; 0xffff
    2ed0:	movt	r1, #0
    2ed4:	b	2e0c <coda_type_text_validate+0x70>
    2ed8:	movw	r0, #65136	; 0xfe70
    2edc:	movw	r1, #0
    2ee0:	movt	r0, #65535	; 0xffff
    2ee4:	movt	r1, #0
    2ee8:	bl	0 <coda_set_error>
    2eec:	b	2e10 <coda_type_text_validate+0x74>
    2ef0:	movw	r0, #65136	; 0xfe70
    2ef4:	movw	r1, #0
    2ef8:	movt	r0, #65535	; 0xffff
    2efc:	movt	r1, #0
    2f00:	bl	0 <coda_set_error>
    2f04:	b	2e10 <coda_type_text_validate+0x74>

00002f08 <coda_type_raw_new>:
    2f08:	push	{r4, sl, fp, lr}
    2f0c:	add	fp, sp, #8
    2f10:	sub	sp, sp, #8
    2f14:	mov	r4, r0
    2f18:	mov	r0, #48	; 0x30
    2f1c:	bl	0 <malloc>
    2f20:	cmp	r0, #0
    2f24:	beq	2f68 <coda_type_raw_new+0x60>
    2f28:	mov	r2, #0
    2f2c:	mvn	r1, #0
    2f30:	mov	ip, #12
    2f34:	mov	r3, #5
    2f38:	str	r2, [r0, #32]
    2f3c:	str	r2, [r0, #36]	; 0x24
    2f40:	str	r1, [r0, #40]	; 0x28
    2f44:	str	r2, [r0, #44]	; 0x2c
    2f48:	str	r4, [r0]
    2f4c:	stmib	r0, {r2, r3, ip}
    2f50:	str	r2, [r0, #16]
    2f54:	str	r2, [r0, #20]
    2f58:	str	r1, [r0, #24]
    2f5c:	str	r1, [r0, #28]
    2f60:	sub	sp, fp, #8
    2f64:	pop	{r4, sl, fp, pc}
    2f68:	movw	r1, #0
    2f6c:	movw	r3, #0
    2f70:	movw	r0, #2106	; 0x83a
    2f74:	mov	r2, #48	; 0x30
    2f78:	movt	r1, #0
    2f7c:	movt	r3, #0
    2f80:	str	r0, [sp]
    2f84:	mvn	r0, #0
    2f88:	bl	0 <coda_set_error>
    2f8c:	mov	r0, #0
    2f90:	sub	sp, fp, #8
    2f94:	pop	{r4, sl, fp, pc}

00002f98 <coda_type_raw_set_fixed_value>:
    2f98:	push	{r4, r5, r6, r7, fp, lr}
    2f9c:	add	fp, sp, #16
    2fa0:	cmp	r0, #0
    2fa4:	beq	2fdc <coda_type_raw_set_fixed_value+0x44>
    2fa8:	mov	r7, r2
    2fac:	mov	r6, r1
    2fb0:	mov	r5, r0
    2fb4:	cmp	r1, #1
    2fb8:	blt	2ffc <coda_type_raw_set_fixed_value+0x64>
    2fbc:	cmp	r7, #0
    2fc0:	bne	2ffc <coda_type_raw_set_fixed_value+0x64>
    2fc4:	movw	r1, #0
    2fc8:	movw	r2, #0
    2fcc:	mvn	r0, #99	; 0x63
    2fd0:	movw	r3, #2133	; 0x855
    2fd4:	movt	r1, #0
    2fd8:	b	2ff0 <coda_type_raw_set_fixed_value+0x58>
    2fdc:	movw	r1, #0
    2fe0:	movw	r2, #0
    2fe4:	mvn	r0, #99	; 0x63
    2fe8:	mov	r3, #2128	; 0x850
    2fec:	movt	r1, #0
    2ff0:	movt	r2, #0
    2ff4:	bl	0 <coda_set_error>
    2ff8:	b	3028 <coda_type_raw_set_fixed_value+0x90>
    2ffc:	ldr	r0, [r5, #44]	; 0x2c
    3000:	cmp	r0, #0
    3004:	bne	3014 <coda_type_raw_set_fixed_value+0x7c>
    3008:	ldr	r0, [r5, #40]	; 0x28
    300c:	cmp	r0, #0
    3010:	bmi	3034 <coda_type_raw_set_fixed_value+0x9c>
    3014:	movw	r0, #65136	; 0xfe70
    3018:	movw	r1, #0
    301c:	movt	r0, #65535	; 0xffff
    3020:	movt	r1, #0
    3024:	bl	0 <coda_set_error>
    3028:	mvn	r4, #0
    302c:	mov	r0, r4
    3030:	pop	{r4, r5, r6, r7, fp, pc}
    3034:	mov	r4, #0
    3038:	cmp	r6, #1
    303c:	mov	r0, #0
    3040:	blt	3068 <coda_type_raw_set_fixed_value+0xd0>
    3044:	mov	r0, r6
    3048:	bl	0 <malloc>
    304c:	cmp	r0, #0
    3050:	str	r0, [r5, #44]	; 0x2c
    3054:	beq	3074 <coda_type_raw_set_fixed_value+0xdc>
    3058:	mov	r1, r7
    305c:	mov	r2, r6
    3060:	bl	0 <memcpy>
    3064:	mov	r0, r6
    3068:	str	r0, [r5, #40]	; 0x28
    306c:	mov	r0, r4
    3070:	pop	{r4, r5, r6, r7, fp, pc}
    3074:	movw	r1, #0
    3078:	movw	r2, #0
    307c:	mvn	r0, #0
    3080:	movw	r3, #2147	; 0x863
    3084:	mvn	r4, #0
    3088:	movt	r1, #0
    308c:	movt	r2, #0
    3090:	bl	0 <coda_set_error>
    3094:	mov	r0, r4
    3098:	pop	{r4, r5, r6, r7, fp, pc}

0000309c <coda_type_raw_validate>:
    309c:	push	{r4, r5, fp, lr}
    30a0:	add	fp, sp, #8
    30a4:	sub	sp, sp, #24
    30a8:	cmp	r0, #0
    30ac:	beq	3158 <coda_type_raw_validate+0xbc>
    30b0:	mov	r4, r0
    30b4:	ldr	r0, [r0]
    30b8:	cmp	r0, #1
    30bc:	bhi	30d8 <coda_type_raw_validate+0x3c>
    30c0:	ldr	r0, [r4, #32]
    30c4:	cmp	r0, #0
    30c8:	bne	30d8 <coda_type_raw_validate+0x3c>
    30cc:	ldr	r0, [r4, #28]
    30d0:	cmn	r0, #1
    30d4:	ble	318c <coda_type_raw_validate+0xf0>
    30d8:	ldr	r1, [r4, #44]	; 0x2c
    30dc:	mov	r0, #0
    30e0:	cmp	r1, #0
    30e4:	beq	31a4 <coda_type_raw_validate+0x108>
    30e8:	ldr	r1, [r4, #28]
    30ec:	cmn	r1, #1
    30f0:	ble	3178 <coda_type_raw_validate+0xdc>
    30f4:	ldr	r3, [r4, #24]
    30f8:	lsr	ip, r1, #3
    30fc:	lsr	r2, r3, #3
    3100:	orr	r5, r2, r1, lsl #29
    3104:	adds	r2, r5, #1
    3108:	adc	r1, ip, #0
    310c:	ands	r3, r3, #7
    3110:	ldr	r3, [r4, #40]	; 0x28
    3114:	moveq	r2, r5
    3118:	moveq	r1, ip
    311c:	eor	r5, r2, r3
    3120:	eor	r3, r1, r3, asr #31
    3124:	orrs	r3, r5, r3
    3128:	beq	31a4 <coda_type_raw_validate+0x108>
    312c:	add	r5, sp, #3
    3130:	mov	r0, r2
    3134:	mov	r2, r5
    3138:	bl	0 <coda_str64>
    313c:	ldr	r2, [r4, #40]	; 0x28
    3140:	movw	r0, #65136	; 0xfe70
    3144:	movw	r1, #0
    3148:	mov	r3, r5
    314c:	movt	r0, #65535	; 0xffff
    3150:	movt	r1, #0
    3154:	b	3170 <coda_type_raw_validate+0xd4>
    3158:	movw	r1, #0
    315c:	movw	r2, #0
    3160:	mvn	r0, #99	; 0x63
    3164:	movw	r3, #2165	; 0x875
    3168:	movt	r1, #0
    316c:	movt	r2, #0
    3170:	bl	0 <coda_set_error>
    3174:	b	31a0 <coda_type_raw_validate+0x104>
    3178:	movw	r0, #65136	; 0xfe70
    317c:	movw	r1, #0
    3180:	movt	r0, #65535	; 0xffff
    3184:	movt	r1, #0
    3188:	b	319c <coda_type_raw_validate+0x100>
    318c:	movw	r0, #65136	; 0xfe70
    3190:	movw	r1, #0
    3194:	movt	r0, #65535	; 0xffff
    3198:	movt	r1, #0
    319c:	bl	0 <coda_set_error>
    31a0:	mvn	r0, #0
    31a4:	sub	sp, fp, #8
    31a8:	pop	{r4, r5, fp, pc}
    31ac:	nop	{0}

000031b0 <coda_type_raw_file_singleton>:
    31b0:	push	{r4, r5, r6, r7, fp, lr}
    31b4:	add	fp, sp, #16
    31b8:	sub	sp, sp, #8
    31bc:	ldr	r5, [pc, #380]	; 3340 <coda_type_raw_file_singleton+0x190>
    31c0:	bl	0 <__aeabi_read_tp>
    31c4:	ldr	r4, [r0, r5]
    31c8:	cmp	r4, #0
    31cc:	bne	3324 <coda_type_raw_file_singleton+0x174>
    31d0:	mov	r0, #48	; 0x30
    31d4:	bl	0 <malloc>
    31d8:	cmp	r0, #0
    31dc:	beq	326c <coda_type_raw_file_singleton+0xbc>
    31e0:	mov	r4, r0
    31e4:	add	r0, pc, #324	; 0x144
    31e8:	mvn	r6, #0
    31ec:	mov	r1, #44	; 0x2c
    31f0:	vld1.64	{d16-d17}, [r0 :128]
    31f4:	mov	r0, #0
    31f8:	mov	r2, r4
    31fc:	str	r6, [r4, #28]
    3200:	mov	r7, r4
    3204:	str	r0, [r4, #32]
    3208:	str	r0, [r4, #36]	; 0x24
    320c:	str	r6, [r4, #40]	; 0x28
    3210:	str	r0, [r4, #16]
    3214:	str	r0, [r4, #20]
    3218:	vst1.32	{d16-d17}, [r2], r1
    321c:	add	r1, sp, #4
    3220:	str	r0, [r2]
    3224:	movw	r0, #0
    3228:	str	r6, [r7, #24]!
    322c:	movt	r0, #0
    3230:	bl	0 <coda_expression_from_string>
    3234:	cmp	r0, #0
    3238:	movne	r0, r4
    323c:	blne	744 <raw_delete>
    3240:	ldr	r0, [sp, #4]
    3244:	cmp	r0, #0
    3248:	beq	3294 <coda_type_raw_file_singleton+0xe4>
    324c:	ldr	r1, [r4, #32]
    3250:	cmp	r1, #0
    3254:	beq	32b4 <coda_type_raw_file_singleton+0x104>
    3258:	movw	r0, #65136	; 0xfe70
    325c:	movw	r1, #0
    3260:	movt	r0, #65535	; 0xffff
    3264:	movt	r1, #0
    3268:	b	330c <coda_type_raw_file_singleton+0x15c>
    326c:	movw	r1, #0
    3270:	movw	r3, #0
    3274:	movw	r0, #2106	; 0x83a
    3278:	mov	r2, #48	; 0x30
    327c:	movt	r1, #0
    3280:	movt	r3, #0
    3284:	str	r0, [sp]
    3288:	mvn	r0, #0
    328c:	bl	0 <coda_set_error>
    3290:	b	3320 <coda_type_raw_file_singleton+0x170>
    3294:	movw	r1, #0
    3298:	movw	r2, #0
    329c:	mvn	r0, #99	; 0x63
    32a0:	mov	r3, #936	; 0x3a8
    32a4:	movt	r1, #0
    32a8:	movt	r2, #0
    32ac:	bl	0 <coda_set_error>
    32b0:	b	3310 <coda_type_raw_file_singleton+0x160>
    32b4:	ldr	r3, [r4, #8]
    32b8:	ldr	r2, [r7]
    32bc:	ldr	r1, [r7, #4]
    32c0:	cmp	r3, #1
    32c4:	bhi	32f0 <coda_type_raw_file_singleton+0x140>
    32c8:	subs	r2, r2, #1
    32cc:	sbcs	r1, r1, #0
    32d0:	bge	32fc <coda_type_raw_file_singleton+0x14c>
    32d4:	str	r0, [r4, #32]
    32d8:	subs	r0, r6, #7
    32dc:	sbc	r1, r6, #0
    32e0:	strd	r0, [r7]
    32e4:	bl	0 <__aeabi_read_tp>
    32e8:	str	r4, [r0, r5]
    32ec:	b	3324 <coda_type_raw_file_singleton+0x174>
    32f0:	subs	r2, r6, r2
    32f4:	sbcs	r1, r6, r1
    32f8:	bge	32d4 <coda_type_raw_file_singleton+0x124>
    32fc:	movw	r0, #65136	; 0xfe70
    3300:	movw	r1, #0
    3304:	movt	r0, #65535	; 0xffff
    3308:	movt	r1, #0
    330c:	bl	0 <coda_set_error>
    3310:	ldr	r0, [sp, #4]
    3314:	bl	0 <coda_expression_delete>
    3318:	mov	r0, r4
    331c:	bl	744 <raw_delete>
    3320:	mov	r4, #0
    3324:	mov	r0, r4
    3328:	sub	sp, fp, #16
    332c:	pop	{r4, r5, r6, r7, fp, pc}
    3330:	.word	0x00000001
    3334:	.word	0x00000000
    3338:	.word	0x00000005
    333c:	.word	0x0000000c
    3340:	.word	0x00000000

00003344 <coda_type_no_data_singleton>:
    3344:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    3348:	add	fp, sp, #24
    334c:	sub	sp, sp, #8
    3350:	cmp	r0, #11
    3354:	bcs	34a8 <coda_type_no_data_singleton+0x164>
    3358:	ldr	r7, [pc, #360]	; 34c8 <coda_type_no_data_singleton+0x184>
    335c:	mov	r5, r0
    3360:	bl	0 <__aeabi_read_tp>
    3364:	add	r0, r0, r7
    3368:	ldr	r6, [r0, r5, lsl #2]
    336c:	cmp	r6, #0
    3370:	beq	3380 <coda_type_no_data_singleton+0x3c>
    3374:	mov	r0, r6
    3378:	sub	sp, fp, #24
    337c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    3380:	mov	r0, #56	; 0x38
    3384:	bl	0 <malloc>
    3388:	cmp	r0, #0
    338c:	beq	3434 <coda_type_no_data_singleton+0xf0>
    3390:	vmov.i32	q8, #0	; 0x00000000
    3394:	mov	r4, r0
    3398:	mov	r0, #6
    339c:	mov	r6, #0
    33a0:	mvn	r8, #0
    33a4:	stm	r4, {r5, r6}
    33a8:	str	r0, [r4, #8]
    33ac:	add	r0, r4, #16
    33b0:	str	r8, [r4, #12]
    33b4:	str	r6, [r4, #48]	; 0x30
    33b8:	str	r6, [r4, #52]	; 0x34
    33bc:	vst1.64	{d16-d17}, [r0]
    33c0:	add	r0, r4, #32
    33c4:	vst1.64	{d16-d17}, [r0]
    33c8:	mov	r0, #48	; 0x30
    33cc:	bl	0 <malloc>
    33d0:	cmp	r0, #0
    33d4:	beq	3460 <coda_type_no_data_singleton+0x11c>
    33d8:	mov	r2, #5
    33dc:	str	r6, [r0, #32]
    33e0:	str	r6, [r0, #36]	; 0x24
    33e4:	str	r8, [r0, #40]	; 0x28
    33e8:	str	r6, [r0, #44]	; 0x2c
    33ec:	stm	r0, {r5, r6}
    33f0:	mov	r1, #12
    33f4:	mov	r3, #0
    33f8:	str	r0, [r4, #44]	; 0x2c
    33fc:	str	r2, [r0, #8]
    3400:	mov	r2, #0
    3404:	str	r1, [r0, #12]
    3408:	str	r6, [r0, #16]
    340c:	str	r6, [r0, #20]
    3410:	str	r8, [r0, #24]
    3414:	str	r8, [r0, #28]
    3418:	bl	b64 <coda_type_set_bit_size>
    341c:	cmp	r0, #0
    3420:	beq	3494 <coda_type_no_data_singleton+0x150>
    3424:	mov	r0, r4
    3428:	bl	7b0 <special_delete>
    342c:	mov	r6, #0
    3430:	b	3374 <coda_type_no_data_singleton+0x30>
    3434:	movw	r1, #0
    3438:	movw	r3, #0
    343c:	movw	r0, #2245	; 0x8c5
    3440:	mov	r2, #56	; 0x38
    3444:	movt	r1, #0
    3448:	movt	r3, #0
    344c:	str	r0, [sp]
    3450:	mvn	r0, #0
    3454:	bl	0 <coda_set_error>
    3458:	mov	r6, #0
    345c:	b	3374 <coda_type_no_data_singleton+0x30>
    3460:	movw	r1, #0
    3464:	movw	r3, #0
    3468:	movw	r0, #2106	; 0x83a
    346c:	mov	r2, #48	; 0x30
    3470:	movt	r1, #0
    3474:	movt	r3, #0
    3478:	str	r0, [sp]
    347c:	mvn	r0, #0
    3480:	bl	0 <coda_set_error>
    3484:	mov	r0, r4
    3488:	str	r6, [r4, #44]	; 0x2c
    348c:	bl	7b0 <special_delete>
    3490:	b	3374 <coda_type_no_data_singleton+0x30>
    3494:	bl	0 <__aeabi_read_tp>
    3498:	add	r0, r0, r7
    349c:	mov	r6, r4
    34a0:	str	r4, [r0, r5, lsl #2]
    34a4:	b	3374 <coda_type_no_data_singleton+0x30>
    34a8:	movw	r0, #0
    34ac:	movw	r1, #0
    34b0:	movw	r3, #0
    34b4:	movw	r2, #2235	; 0x8bb
    34b8:	movt	r0, #0
    34bc:	movt	r1, #0
    34c0:	movt	r3, #0
    34c4:	bl	0 <__assert_fail>
    34c8:	.word	0x00000000

000034cc <coda_type_vsf_integer_new>:
    34cc:	push	{r4, r5, fp, lr}
    34d0:	add	fp, sp, #8
    34d4:	sub	sp, sp, #8
    34d8:	mov	r5, r0
    34dc:	mov	r0, #56	; 0x38
    34e0:	bl	0 <malloc>
    34e4:	cmp	r0, #0
    34e8:	beq	3570 <coda_type_vsf_integer_new+0xa4>
    34ec:	mov	r4, r0
    34f0:	mov	r1, #0
    34f4:	mov	r2, #1
    34f8:	mvn	r0, #0
    34fc:	mov	r3, #6
    3500:	str	r1, [r4, #48]	; 0x30
    3504:	str	r1, [r4, #52]	; 0x34
    3508:	str	r1, [r4, #32]
    350c:	str	r1, [r4, #36]	; 0x24
    3510:	str	r2, [r4, #40]	; 0x28
    3514:	mov	r2, #9
    3518:	str	r5, [r4]
    351c:	stmib	r4, {r1, r3}
    3520:	str	r2, [r4, #12]
    3524:	str	r1, [r4, #16]
    3528:	str	r1, [r4, #20]
    352c:	str	r0, [r4, #24]
    3530:	str	r0, [r4, #28]
    3534:	mov	r0, r5
    3538:	bl	f90 <coda_type_record_new>
    353c:	cmp	r0, #0
    3540:	str	r0, [r4, #44]	; 0x2c
    3544:	beq	359c <coda_type_vsf_integer_new+0xd0>
    3548:	mov	r5, r0
    354c:	ldr	r0, [r0, #20]
    3550:	cmp	r0, #0
    3554:	beq	35b4 <coda_type_vsf_integer_new+0xe8>
    3558:	movw	r0, #65136	; 0xfe70
    355c:	movw	r1, #0
    3560:	movt	r0, #65535	; 0xffff
    3564:	movt	r1, #0
    3568:	bl	0 <coda_set_error>
    356c:	b	35ec <coda_type_vsf_integer_new+0x120>
    3570:	movw	r1, #0
    3574:	movw	r3, #0
    3578:	mov	r0, #2288	; 0x8f0
    357c:	mov	r2, #56	; 0x38
    3580:	movt	r1, #0
    3584:	movt	r3, #0
    3588:	str	r0, [sp]
    358c:	mvn	r0, #0
    3590:	bl	0 <coda_set_error>
    3594:	mov	r4, #0
    3598:	b	35ec <coda_type_vsf_integer_new+0x120>
    359c:	movw	r1, #0
    35a0:	movw	r2, #0
    35a4:	mvn	r0, #99	; 0x63
    35a8:	movw	r3, #795	; 0x31b
    35ac:	movt	r1, #0
    35b0:	b	35e4 <coda_type_vsf_integer_new+0x118>
    35b4:	movw	r0, #0
    35b8:	movt	r0, #0
    35bc:	bl	0 <strdup>
    35c0:	cmp	r0, #0
    35c4:	beq	35d0 <coda_type_vsf_integer_new+0x104>
    35c8:	str	r0, [r5, #20]
    35cc:	b	35ec <coda_type_vsf_integer_new+0x120>
    35d0:	movw	r1, #0
    35d4:	movw	r2, #0
    35d8:	mvn	r0, #0
    35dc:	movw	r3, #814	; 0x32e
    35e0:	movt	r1, #0
    35e4:	movt	r2, #0
    35e8:	bl	0 <coda_set_error>
    35ec:	mov	r0, r4
    35f0:	sub	sp, fp, #8
    35f4:	pop	{r4, r5, fp, pc}

000035f8 <coda_type_vsf_integer_set_type>:
    35f8:	push	{r4, r5, r6, r7, fp, lr}
    35fc:	add	fp, sp, #16
    3600:	mov	r7, r1
    3604:	mov	r6, r0
    3608:	ldr	r1, [r1]
    360c:	ldr	r0, [r0]
    3610:	cmp	r0, r1
    3614:	bne	3674 <coda_type_vsf_integer_set_type+0x7c>
    3618:	ldr	r0, [r6, #44]	; 0x2c
    361c:	ldr	r0, [r0, #48]	; 0x30
    3620:	cmp	r0, #1
    3624:	bne	36c0 <coda_type_vsf_integer_set_type+0xc8>
    3628:	movw	r0, #0
    362c:	movt	r0, #0
    3630:	bl	117c <coda_type_record_field_new>
    3634:	mvn	r4, #0
    3638:	cmp	r0, #0
    363c:	beq	3720 <coda_type_vsf_integer_set_type+0x128>
    3640:	mov	r5, r0
    3644:	ldr	r0, [r0, #8]
    3648:	cmp	r0, #0
    364c:	beq	36e0 <coda_type_vsf_integer_set_type+0xe8>
    3650:	movw	r0, #65136	; 0xfe70
    3654:	movw	r1, #0
    3658:	movt	r0, #65535	; 0xffff
    365c:	movt	r1, #0
    3660:	bl	0 <coda_set_error>
    3664:	mov	r0, r5
    3668:	bl	3d8 <coda_type_record_field_delete>
    366c:	mov	r0, r4
    3670:	pop	{r4, r5, r6, r7, fp, pc}
    3674:	movw	r3, #0
    3678:	cmp	r1, #9
    367c:	movt	r3, #0
    3680:	mov	r2, r3
    3684:	bhi	3694 <coda_type_vsf_integer_set_type+0x9c>
    3688:	movw	r2, #0
    368c:	movt	r2, #0
    3690:	ldr	r2, [r2, r1, lsl #2]
    3694:	cmp	r0, #9
    3698:	bhi	36a8 <coda_type_vsf_integer_set_type+0xb0>
    369c:	movw	r1, #0
    36a0:	movt	r1, #0
    36a4:	ldr	r3, [r1, r0, lsl #2]
    36a8:	movw	r0, #65136	; 0xfe70
    36ac:	movw	r1, #0
    36b0:	movt	r0, #65535	; 0xffff
    36b4:	movt	r1, #0
    36b8:	bl	0 <coda_set_error>
    36bc:	b	36d4 <coda_type_vsf_integer_set_type+0xdc>
    36c0:	movw	r0, #65136	; 0xfe70
    36c4:	movw	r1, #0
    36c8:	movt	r0, #65535	; 0xffff
    36cc:	movt	r1, #0
    36d0:	bl	0 <coda_set_error>
    36d4:	mvn	r4, #0
    36d8:	mov	r0, r4
    36dc:	pop	{r4, r5, r6, r7, fp, pc}
    36e0:	str	r7, [r5, #8]
    36e4:	ldr	r0, [r7, #4]
    36e8:	add	r0, r0, #1
    36ec:	str	r0, [r7, #4]
    36f0:	ldr	r0, [r6, #44]	; 0x2c
    36f4:	cmp	r0, #0
    36f8:	beq	3728 <coda_type_vsf_integer_set_type+0x130>
    36fc:	ldr	r1, [r0, #48]	; 0x30
    3700:	mov	r2, r5
    3704:	bl	1708 <coda_type_record_insert_field>
    3708:	cmp	r0, #0
    370c:	bne	3664 <coda_type_vsf_integer_set_type+0x6c>
    3710:	ldr	r0, [r6, #44]	; 0x2c
    3714:	mov	r4, #0
    3718:	ldrd	r0, [r0, #24]
    371c:	strd	r0, [r6, #24]
    3720:	mov	r0, r4
    3724:	pop	{r4, r5, r6, r7, fp, pc}
    3728:	movw	r1, #0
    372c:	movw	r2, #0
    3730:	mvn	r0, #99	; 0x63
    3734:	mov	r3, #1424	; 0x590
    3738:	movt	r1, #0
    373c:	movt	r2, #0
    3740:	bl	0 <coda_set_error>
    3744:	b	3664 <coda_type_vsf_integer_set_type+0x6c>

00003748 <coda_type_vsf_integer_set_scale_factor>:
    3748:	push	{r4, r5, r6, r7, fp, lr}
    374c:	add	fp, sp, #16
    3750:	mov	r6, r1
    3754:	mov	r5, r0
    3758:	ldr	r1, [r1]
    375c:	ldr	r0, [r0]
    3760:	cmp	r0, r1
    3764:	bne	3790 <coda_type_vsf_integer_set_scale_factor+0x48>
    3768:	ldr	r0, [r5, #44]	; 0x2c
    376c:	ldr	r0, [r0, #48]	; 0x30
    3770:	cmp	r0, #0
    3774:	beq	37e4 <coda_type_vsf_integer_set_scale_factor+0x9c>
    3778:	movw	r0, #65136	; 0xfe70
    377c:	movw	r1, #0
    3780:	movt	r0, #65535	; 0xffff
    3784:	movt	r1, #0
    3788:	bl	0 <coda_set_error>
    378c:	b	37d8 <coda_type_vsf_integer_set_scale_factor+0x90>
    3790:	movw	r3, #0
    3794:	cmp	r1, #9
    3798:	movt	r3, #0
    379c:	mov	r2, r3
    37a0:	bhi	37b0 <coda_type_vsf_integer_set_scale_factor+0x68>
    37a4:	movw	r2, #0
    37a8:	movt	r2, #0
    37ac:	ldr	r2, [r2, r1, lsl #2]
    37b0:	cmp	r0, #9
    37b4:	bhi	37c4 <coda_type_vsf_integer_set_scale_factor+0x7c>
    37b8:	movw	r1, #0
    37bc:	movt	r1, #0
    37c0:	ldr	r3, [r1, r0, lsl #2]
    37c4:	movw	r0, #65136	; 0xfe70
    37c8:	movw	r1, #0
    37cc:	movt	r0, #65535	; 0xffff
    37d0:	movt	r1, #0
    37d4:	bl	0 <coda_set_error>
    37d8:	mvn	r4, #0
    37dc:	mov	r0, r4
    37e0:	pop	{r4, r5, r6, r7, fp, pc}
    37e4:	bl	0 <__aeabi_read_tp>
    37e8:	ldr	r1, [r6, #8]
    37ec:	bic	r1, r1, #1
    37f0:	cmp	r1, #2
    37f4:	bne	3824 <coda_type_vsf_integer_set_scale_factor+0xdc>
    37f8:	ldr	r1, [pc, #288]	; 3920 <coda_type_vsf_integer_set_scale_factor+0x1d8>
    37fc:	ldr	r1, [pc, r1]
    3800:	ldr	r0, [r0, r1]
    3804:	cmp	r0, #0
    3808:	beq	3824 <coda_type_vsf_integer_set_scale_factor+0xdc>
    380c:	ldr	r0, [r6, #48]	; 0x30
    3810:	cmp	r0, #0
    3814:	beq	3824 <coda_type_vsf_integer_set_scale_factor+0xdc>
    3818:	movw	r2, #0
    381c:	movt	r2, #0
    3820:	b	38a0 <coda_type_vsf_integer_set_scale_factor+0x158>
    3824:	ldr	r0, [r6, #12]
    3828:	cmp	r0, #5
    382c:	bcs	387c <coda_type_vsf_integer_set_scale_factor+0x134>
    3830:	movw	r0, #0
    3834:	movt	r0, #0
    3838:	bl	117c <coda_type_record_field_new>
    383c:	mvn	r4, #0
    3840:	cmp	r0, #0
    3844:	beq	38f8 <coda_type_vsf_integer_set_scale_factor+0x1b0>
    3848:	mov	r7, r0
    384c:	ldr	r0, [r0, #8]
    3850:	cmp	r0, #0
    3854:	beq	38b8 <coda_type_vsf_integer_set_scale_factor+0x170>
    3858:	movw	r0, #65136	; 0xfe70
    385c:	movw	r1, #0
    3860:	movt	r0, #65535	; 0xffff
    3864:	movt	r1, #0
    3868:	bl	0 <coda_set_error>
    386c:	mov	r0, r7
    3870:	bl	3d8 <coda_type_record_field_delete>
    3874:	mov	r0, r4
    3878:	pop	{r4, r5, r6, r7, fp, pc}
    387c:	add	r0, r0, #1
    3880:	cmp	r0, #13
    3884:	bhi	3898 <coda_type_vsf_integer_set_scale_factor+0x150>
    3888:	movw	r1, #0
    388c:	movt	r1, #0
    3890:	ldr	r2, [r1, r0, lsl #2]
    3894:	b	38a0 <coda_type_vsf_integer_set_scale_factor+0x158>
    3898:	movw	r2, #0
    389c:	movt	r2, #0
    38a0:	movw	r0, #65136	; 0xfe70
    38a4:	movw	r1, #0
    38a8:	movt	r0, #65535	; 0xffff
    38ac:	movt	r1, #0
    38b0:	bl	0 <coda_set_error>
    38b4:	b	37d8 <coda_type_vsf_integer_set_scale_factor+0x90>
    38b8:	str	r6, [r7, #8]
    38bc:	ldr	r0, [r6, #4]
    38c0:	add	r0, r0, #1
    38c4:	str	r0, [r6, #4]
    38c8:	ldr	r0, [r5, #44]	; 0x2c
    38cc:	cmp	r0, #0
    38d0:	beq	3900 <coda_type_vsf_integer_set_scale_factor+0x1b8>
    38d4:	ldr	r1, [r0, #48]	; 0x30
    38d8:	mov	r2, r7
    38dc:	bl	1708 <coda_type_record_insert_field>
    38e0:	cmp	r0, #0
    38e4:	bne	386c <coda_type_vsf_integer_set_scale_factor+0x124>
    38e8:	ldr	r0, [r5, #44]	; 0x2c
    38ec:	mov	r4, #0
    38f0:	ldrd	r0, [r0, #24]
    38f4:	strd	r0, [r5, #24]
    38f8:	mov	r0, r4
    38fc:	pop	{r4, r5, r6, r7, fp, pc}
    3900:	movw	r1, #0
    3904:	movw	r2, #0
    3908:	mvn	r0, #99	; 0x63
    390c:	mov	r3, #1424	; 0x590
    3910:	movt	r1, #0
    3914:	movt	r2, #0
    3918:	bl	0 <coda_set_error>
    391c:	b	386c <coda_type_vsf_integer_set_scale_factor+0x124>
    3920:	.word	0x0000011c

00003924 <coda_type_get_read_type>:
    3924:	push	{fp, lr}
    3928:	mov	fp, sp
    392c:	cmp	r0, #0
    3930:	beq	397c <coda_type_get_read_type+0x58>
    3934:	cmp	r1, #0
    3938:	beq	39a4 <coda_type_get_read_type+0x80>
    393c:	mov	r2, r0
    3940:	bl	0 <__aeabi_read_tp>
    3944:	ldr	r3, [r2, #8]
    3948:	bic	r3, r3, #1
    394c:	cmp	r3, #2
    3950:	bne	3994 <coda_type_get_read_type+0x70>
    3954:	ldr	r3, [pc, #108]	; 39c8 <coda_type_get_read_type+0xa4>
    3958:	ldr	r3, [pc, r3]
    395c:	ldr	r0, [r0, r3]
    3960:	cmp	r0, #0
    3964:	beq	3994 <coda_type_get_read_type+0x70>
    3968:	ldr	r0, [r2, #48]	; 0x30
    396c:	cmp	r0, #0
    3970:	beq	3994 <coda_type_get_read_type+0x70>
    3974:	mov	r0, #9
    3978:	b	3998 <coda_type_get_read_type+0x74>
    397c:	movw	r1, #0
    3980:	movw	r2, #0
    3984:	mvn	r0, #99	; 0x63
    3988:	movw	r3, #2908	; 0xb5c
    398c:	movt	r1, #0
    3990:	b	39b8 <coda_type_get_read_type+0x94>
    3994:	ldr	r0, [r2, #12]
    3998:	str	r0, [r1]
    399c:	mov	r0, #0
    39a0:	pop	{fp, pc}
    39a4:	movw	r1, #0
    39a8:	movw	r2, #0
    39ac:	mvn	r0, #99	; 0x63
    39b0:	movw	r3, #2913	; 0xb61
    39b4:	movt	r1, #0
    39b8:	movt	r2, #0
    39bc:	bl	0 <coda_set_error>
    39c0:	mvn	r0, #0
    39c4:	pop	{fp, pc}
    39c8:	.word	0x00000068

000039cc <coda_type_vsf_integer_set_unit>:
    39cc:	push	{r4, sl, fp, lr}
    39d0:	add	fp, sp, #8
    39d4:	cmp	r1, #0
    39d8:	beq	3a04 <coda_type_vsf_integer_set_unit+0x38>
    39dc:	mov	r4, r0
    39e0:	ldr	r0, [r0, #48]	; 0x30
    39e4:	cmp	r0, #0
    39e8:	beq	3a2c <coda_type_vsf_integer_set_unit+0x60>
    39ec:	movw	r0, #65136	; 0xfe70
    39f0:	movw	r1, #0
    39f4:	movt	r0, #65535	; 0xffff
    39f8:	movt	r1, #0
    39fc:	bl	0 <coda_set_error>
    3a00:	b	3a20 <coda_type_vsf_integer_set_unit+0x54>
    3a04:	movw	r1, #0
    3a08:	movw	r2, #0
    3a0c:	mvn	r0, #99	; 0x63
    3a10:	movw	r3, #2412	; 0x96c
    3a14:	movt	r1, #0
    3a18:	movt	r2, #0
    3a1c:	bl	0 <coda_set_error>
    3a20:	mvn	r4, #0
    3a24:	mov	r0, r4
    3a28:	pop	{r4, sl, fp, pc}
    3a2c:	mov	r0, r1
    3a30:	bl	0 <strdup>
    3a34:	str	r0, [r4, #48]	; 0x30
    3a38:	mov	r4, #0
    3a3c:	cmp	r0, #0
    3a40:	beq	3a4c <coda_type_vsf_integer_set_unit+0x80>
    3a44:	mov	r0, r4
    3a48:	pop	{r4, sl, fp, pc}
    3a4c:	movw	r1, #0
    3a50:	movw	r2, #0
    3a54:	mvn	r0, #0
    3a58:	movw	r3, #2424	; 0x978
    3a5c:	mvn	r4, #0
    3a60:	movt	r1, #0
    3a64:	movt	r2, #0
    3a68:	bl	0 <coda_set_error>
    3a6c:	mov	r0, r4
    3a70:	pop	{r4, sl, fp, pc}

00003a74 <coda_type_vsf_integer_validate>:
    3a74:	push	{fp, lr}
    3a78:	mov	fp, sp
    3a7c:	ldr	r0, [r0, #44]	; 0x2c
    3a80:	ldr	r1, [r0, #48]	; 0x30
    3a84:	mov	r0, #0
    3a88:	cmp	r1, #2
    3a8c:	popeq	{fp, pc}
    3a90:	movw	r0, #65136	; 0xfe70
    3a94:	movw	r1, #0
    3a98:	movt	r0, #65535	; 0xffff
    3a9c:	movt	r1, #0
    3aa0:	bl	0 <coda_set_error>
    3aa4:	mvn	r0, #0
    3aa8:	pop	{fp, pc}

00003aac <coda_type_time_new>:
    3aac:	push	{r4, r5, r6, sl, fp, lr}
    3ab0:	add	fp, sp, #16
    3ab4:	sub	sp, sp, #8
    3ab8:	cmp	r1, #0
    3abc:	beq	3b64 <coda_type_time_new+0xb8>
    3ac0:	mov	r5, r0
    3ac4:	mov	r0, #56	; 0x38
    3ac8:	mov	r6, r1
    3acc:	bl	0 <malloc>
    3ad0:	cmp	r0, #0
    3ad4:	beq	3b80 <coda_type_time_new+0xd4>
    3ad8:	mov	r4, r0
    3adc:	mov	r1, #0
    3ae0:	mov	r2, #2
    3ae4:	mvn	r0, #0
    3ae8:	mov	r3, #6
    3aec:	str	r1, [r4, #32]
    3af0:	str	r1, [r4, #36]	; 0x24
    3af4:	str	r2, [r4, #40]	; 0x28
    3af8:	mov	r2, #9
    3afc:	str	r1, [r4, #44]	; 0x2c
    3b00:	str	r1, [r4, #48]	; 0x30
    3b04:	str	r6, [r4, #52]	; 0x34
    3b08:	str	r5, [r4]
    3b0c:	stmib	r4, {r1, r3}
    3b10:	str	r2, [r4, #12]
    3b14:	str	r1, [r4, #16]
    3b18:	str	r1, [r4, #20]
    3b1c:	str	r0, [r4, #24]
    3b20:	str	r0, [r4, #28]
    3b24:	movw	r0, #0
    3b28:	movt	r0, #0
    3b2c:	bl	0 <strdup>
    3b30:	cmp	r0, #0
    3b34:	str	r0, [r4, #48]	; 0x30
    3b38:	bne	3ba8 <coda_type_time_new+0xfc>
    3b3c:	movw	r1, #0
    3b40:	movw	r2, #0
    3b44:	mvn	r0, #0
    3b48:	movw	r3, #2476	; 0x9ac
    3b4c:	movt	r1, #0
    3b50:	movt	r2, #0
    3b54:	bl	0 <coda_set_error>
    3b58:	mov	r0, r4
    3b5c:	bl	7b0 <special_delete>
    3b60:	b	3ba4 <coda_type_time_new+0xf8>
    3b64:	movw	r1, #0
    3b68:	movw	r2, #0
    3b6c:	mvn	r0, #99	; 0x63
    3b70:	movw	r3, #2447	; 0x98f
    3b74:	movt	r1, #0
    3b78:	movt	r2, #0
    3b7c:	b	3ba0 <coda_type_time_new+0xf4>
    3b80:	movw	r1, #0
    3b84:	movw	r3, #0
    3b88:	movw	r0, #2455	; 0x997
    3b8c:	mov	r2, #56	; 0x38
    3b90:	movt	r1, #0
    3b94:	movt	r3, #0
    3b98:	str	r0, [sp]
    3b9c:	mvn	r0, #0
    3ba0:	bl	0 <coda_set_error>
    3ba4:	mov	r4, #0
    3ba8:	mov	r0, r4
    3bac:	sub	sp, fp, #16
    3bb0:	pop	{r4, r5, r6, sl, fp, pc}

00003bb4 <coda_type_time_add_ascii_float_mapping>:
    3bb4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    3bb8:	add	fp, sp, #24
    3bbc:	sub	sp, sp, #72	; 0x48
    3bc0:	cmp	r0, #0
    3bc4:	beq	3c10 <coda_type_time_add_ascii_float_mapping+0x5c>
    3bc8:	mov	r4, r1
    3bcc:	cmp	r1, #0
    3bd0:	beq	3c28 <coda_type_time_add_ascii_float_mapping+0x74>
    3bd4:	mov	r5, r0
    3bd8:	ldr	r0, [r0, #40]	; 0x28
    3bdc:	cmp	r0, #3
    3be0:	bhi	3c48 <coda_type_time_add_ascii_float_mapping+0x94>
    3be4:	movw	r2, #0
    3be8:	add	r1, pc, #4
    3bec:	movt	r2, #0
    3bf0:	ldr	pc, [r1, r0, lsl #2]
    3bf4:	.word	0x00003cac
    3bf8:	.word	0x00003c04
    3bfc:	.word	0x00003c54
    3c00:	.word	0x00003ca4
    3c04:	movw	r2, #0
    3c08:	movt	r2, #0
    3c0c:	b	3cac <coda_type_time_add_ascii_float_mapping+0xf8>
    3c10:	movw	r1, #0
    3c14:	movw	r2, #0
    3c18:	mvn	r0, #99	; 0x63
    3c1c:	movw	r3, #2493	; 0x9bd
    3c20:	movt	r1, #0
    3c24:	b	3c3c <coda_type_time_add_ascii_float_mapping+0x88>
    3c28:	movw	r1, #0
    3c2c:	movw	r2, #0
    3c30:	mvn	r0, #99	; 0x63
    3c34:	movw	r3, #2498	; 0x9c2
    3c38:	movt	r1, #0
    3c3c:	movt	r2, #0
    3c40:	bl	0 <coda_set_error>
    3c44:	b	3cc0 <coda_type_time_add_ascii_float_mapping+0x10c>
    3c48:	movw	r2, #0
    3c4c:	movt	r2, #0
    3c50:	b	3cac <coda_type_time_add_ascii_float_mapping+0xf8>
    3c54:	ldr	r0, [r5, #44]	; 0x2c
    3c58:	cmp	r0, #0
    3c5c:	beq	3cd0 <coda_type_time_add_ascii_float_mapping+0x11c>
    3c60:	ldr	r0, [r0, #8]
    3c64:	cmp	r0, #6
    3c68:	bhi	3ce8 <coda_type_time_add_ascii_float_mapping+0x134>
    3c6c:	movw	r2, #0
    3c70:	add	r1, pc, #4
    3c74:	movt	r2, #0
    3c78:	ldr	pc, [r1, r0, lsl #2]
    3c7c:	.word	0x00003dd8
    3c80:	.word	0x00003c98
    3c84:	.word	0x00003cf4
    3c88:	.word	0x00003d00
    3c8c:	.word	0x00003d0c
    3c90:	.word	0x00003dc4
    3c94:	.word	0x00003dd0
    3c98:	movw	r2, #0
    3c9c:	movt	r2, #0
    3ca0:	b	3dd8 <coda_type_time_add_ascii_float_mapping+0x224>
    3ca4:	movw	r2, #0
    3ca8:	movt	r2, #0
    3cac:	movw	r0, #65136	; 0xfe70
    3cb0:	movw	r1, #0
    3cb4:	movt	r0, #65535	; 0xffff
    3cb8:	movt	r1, #0
    3cbc:	bl	0 <coda_set_error>
    3cc0:	mvn	r6, #0
    3cc4:	mov	r0, r6
    3cc8:	sub	sp, fp, #24
    3ccc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3cd0:	movw	r0, #65136	; 0xfe70
    3cd4:	movw	r1, #0
    3cd8:	movt	r0, #65535	; 0xffff
    3cdc:	movt	r1, #0
    3ce0:	bl	0 <coda_set_error>
    3ce4:	b	3cc0 <coda_type_time_add_ascii_float_mapping+0x10c>
    3ce8:	movw	r2, #0
    3cec:	movt	r2, #0
    3cf0:	b	3dd8 <coda_type_time_add_ascii_float_mapping+0x224>
    3cf4:	movw	r2, #0
    3cf8:	movt	r2, #0
    3cfc:	b	3dd8 <coda_type_time_add_ascii_float_mapping+0x224>
    3d00:	movw	r2, #0
    3d04:	movt	r2, #0
    3d08:	b	3dd8 <coda_type_time_add_ascii_float_mapping+0x224>
    3d0c:	ldr	r2, [r4]
    3d10:	movw	r1, #0
    3d14:	add	r6, sp, #8
    3d18:	movt	r1, #0
    3d1c:	mov	r0, r6
    3d20:	bl	0 <sprintf>
    3d24:	mov	r0, r6
    3d28:	bl	0 <strdup>
    3d2c:	mov	r6, #0
    3d30:	mov	r1, r0
    3d34:	mov	r0, #20
    3d38:	mov	r2, #0
    3d3c:	mov	r3, #0
    3d40:	str	r6, [sp]
    3d44:	str	r6, [sp, #4]
    3d48:	bl	0 <coda_expression_new>
    3d4c:	ldr	r7, [r4]
    3d50:	mov	r9, r0
    3d54:	mov	r0, #36	; 0x24
    3d58:	mov	r1, #0
    3d5c:	mov	r2, #0
    3d60:	mov	r3, #0
    3d64:	str	r6, [sp]
    3d68:	str	r6, [sp, #4]
    3d6c:	bl	0 <coda_expression_new>
    3d70:	mov	r2, r0
    3d74:	cmp	r7, #0
    3d78:	beq	3dec <coda_type_time_add_ascii_float_mapping+0x238>
    3d7c:	mov	r0, #75	; 0x4b
    3d80:	mov	r1, #0
    3d84:	mov	r3, r9
    3d88:	str	r6, [sp]
    3d8c:	str	r6, [sp, #4]
    3d90:	bl	0 <coda_expression_new>
    3d94:	mov	r8, r0
    3d98:	ldr	r0, [r4, #4]
    3d9c:	bl	0 <strdup>
    3da0:	mov	r1, r0
    3da4:	mov	r0, #22
    3da8:	mov	r2, #0
    3dac:	mov	r3, #0
    3db0:	str	r6, [sp]
    3db4:	str	r6, [sp, #4]
    3db8:	bl	0 <coda_expression_new>
    3dbc:	mov	r9, r0
    3dc0:	b	3e08 <coda_type_time_add_ascii_float_mapping+0x254>
    3dc4:	movw	r2, #0
    3dc8:	movt	r2, #0
    3dcc:	b	3dd8 <coda_type_time_add_ascii_float_mapping+0x224>
    3dd0:	movw	r2, #0
    3dd4:	movt	r2, #0
    3dd8:	movw	r0, #65136	; 0xfe70
    3ddc:	movw	r1, #0
    3de0:	movt	r0, #65535	; 0xffff
    3de4:	movt	r1, #0
    3de8:	b	3cbc <coda_type_time_add_ascii_float_mapping+0x108>
    3dec:	mov	r0, #50	; 0x32
    3df0:	mov	r1, #0
    3df4:	mov	r3, #0
    3df8:	str	r6, [sp]
    3dfc:	str	r6, [sp, #4]
    3e00:	bl	0 <coda_expression_new>
    3e04:	mov	r8, r0
    3e08:	mov	r6, #0
    3e0c:	mov	r0, #25
    3e10:	mov	r1, #0
    3e14:	mov	r2, r8
    3e18:	mov	r3, r9
    3e1c:	str	r6, [sp]
    3e20:	str	r6, [sp, #4]
    3e24:	bl	0 <coda_expression_new>
    3e28:	vldr	d0, [r4, #8]
    3e2c:	add	r7, sp, #8
    3e30:	mov	r8, r0
    3e34:	mov	r0, r7
    3e38:	bl	0 <coda_strfl>
    3e3c:	mov	r0, r7
    3e40:	bl	0 <strdup>
    3e44:	mov	r1, r0
    3e48:	mov	r0, #19
    3e4c:	mov	r2, #0
    3e50:	mov	r3, #0
    3e54:	str	r6, [sp]
    3e58:	str	r6, [sp, #4]
    3e5c:	bl	0 <coda_expression_new>
    3e60:	mov	r3, r0
    3e64:	ldr	r0, [r5, #52]	; 0x34
    3e68:	mov	r1, #0
    3e6c:	mov	r2, r8
    3e70:	stm	sp, {r0, r6}
    3e74:	mov	r0, #42	; 0x2a
    3e78:	bl	0 <coda_expression_new>
    3e7c:	str	r0, [r5, #52]	; 0x34
    3e80:	ldr	r0, [r4, #4]
    3e84:	cmp	r0, #0
    3e88:	beq	3e90 <coda_type_time_add_ascii_float_mapping+0x2dc>
    3e8c:	bl	0 <free>
    3e90:	mov	r0, r4
    3e94:	bl	0 <free>
    3e98:	b	3cc4 <coda_type_time_add_ascii_float_mapping+0x110>

00003e9c <coda_type_get_special_type_name>:
    3e9c:	cmp	r0, #3
    3ea0:	movwhi	r0, #0
    3ea4:	movthi	r0, #0
    3ea8:	bxhi	lr
    3eac:	movw	r1, #0
    3eb0:	movt	r1, #0
    3eb4:	ldr	r0, [r1, r0, lsl #2]
    3eb8:	bx	lr

00003ebc <coda_type_time_set_base_type>:
    3ebc:	push	{r4, r5, fp, lr}
    3ec0:	add	fp, sp, #8
    3ec4:	cmp	r0, #0
    3ec8:	beq	3f0c <coda_type_time_set_base_type+0x50>
    3ecc:	cmp	r1, #0
    3ed0:	beq	3f24 <coda_type_time_set_base_type+0x68>
    3ed4:	ldr	ip, [r0, #40]	; 0x28
    3ed8:	cmp	ip, #3
    3edc:	bhi	3f48 <coda_type_time_set_base_type+0x8c>
    3ee0:	movw	r2, #0
    3ee4:	add	r3, pc, #4
    3ee8:	movt	r2, #0
    3eec:	ldr	pc, [r3, ip, lsl #2]
    3ef0:	.word	0x00003f84
    3ef4:	.word	0x00003f00
    3ef8:	.word	0x00003f54
    3efc:	.word	0x00003f7c
    3f00:	movw	r2, #0
    3f04:	movt	r2, #0
    3f08:	b	3f84 <coda_type_time_set_base_type+0xc8>
    3f0c:	movw	r1, #0
    3f10:	movw	r2, #0
    3f14:	mvn	r0, #99	; 0x63
    3f18:	movw	r3, #2548	; 0x9f4
    3f1c:	movt	r1, #0
    3f20:	b	3f38 <coda_type_time_set_base_type+0x7c>
    3f24:	movw	r1, #0
    3f28:	movw	r2, #0
    3f2c:	mvn	r0, #99	; 0x63
    3f30:	movw	r3, #2553	; 0x9f9
    3f34:	movt	r1, #0
    3f38:	movt	r2, #0
    3f3c:	bl	0 <coda_set_error>
    3f40:	mvn	r0, #0
    3f44:	pop	{r4, r5, fp, pc}
    3f48:	movw	r2, #0
    3f4c:	movt	r2, #0
    3f50:	b	3f84 <coda_type_time_set_base_type+0xc8>
    3f54:	ldr	r2, [r0, #44]	; 0x2c
    3f58:	cmp	r2, #0
    3f5c:	beq	3fa0 <coda_type_time_set_base_type+0xe4>
    3f60:	movw	r0, #65136	; 0xfe70
    3f64:	movw	r1, #0
    3f68:	movt	r0, #65535	; 0xffff
    3f6c:	movt	r1, #0
    3f70:	bl	0 <coda_set_error>
    3f74:	mvn	r0, #0
    3f78:	pop	{r4, r5, fp, pc}
    3f7c:	movw	r2, #0
    3f80:	movt	r2, #0
    3f84:	movw	r0, #65136	; 0xfe70
    3f88:	movw	r1, #0
    3f8c:	movt	r0, #65535	; 0xffff
    3f90:	movt	r1, #0
    3f94:	bl	0 <coda_set_error>
    3f98:	mvn	r0, #0
    3f9c:	pop	{r4, r5, fp, pc}
    3fa0:	str	r1, [r0, #44]	; 0x2c
    3fa4:	ldr	r2, [r1, #4]
    3fa8:	ldrd	r4, [r1, #24]
    3fac:	add	r2, r2, #1
    3fb0:	str	r2, [r1, #4]
    3fb4:	strd	r4, [r0, #24]
    3fb8:	mov	r0, #0
    3fbc:	pop	{r4, r5, fp, pc}

00003fc0 <coda_type_time_validate>:
    3fc0:	push	{fp, lr}
    3fc4:	mov	fp, sp
    3fc8:	ldr	r1, [r0, #44]	; 0x2c
    3fcc:	mov	r0, #0
    3fd0:	cmp	r1, #0
    3fd4:	popne	{fp, pc}
    3fd8:	movw	r0, #65136	; 0xfe70
    3fdc:	movw	r1, #0
    3fe0:	movt	r0, #65535	; 0xffff
    3fe4:	movt	r1, #0
    3fe8:	bl	0 <coda_set_error>
    3fec:	mvn	r0, #0
    3ff0:	pop	{fp, pc}

00003ff4 <coda_type_complex_new>:
    3ff4:	push	{r4, sl, fp, lr}
    3ff8:	add	fp, sp, #8
    3ffc:	sub	sp, sp, #8
    4000:	mov	r4, r0
    4004:	mov	r0, #56	; 0x38
    4008:	bl	0 <malloc>
    400c:	cmp	r0, #0
    4010:	beq	4060 <coda_type_complex_new+0x6c>
    4014:	mov	r2, #0
    4018:	mvn	r1, #0
    401c:	mov	r3, #3
    4020:	str	r2, [r0, #32]
    4024:	str	r2, [r0, #36]	; 0x24
    4028:	str	r3, [r0, #40]	; 0x28
    402c:	str	r2, [r0, #44]	; 0x2c
    4030:	str	r2, [r0, #48]	; 0x30
    4034:	str	r2, [r0, #52]	; 0x34
    4038:	mov	r3, #6
    403c:	str	r4, [r0]
    4040:	stmib	r0, {r2, r3}
    4044:	str	r1, [r0, #12]
    4048:	str	r2, [r0, #16]
    404c:	str	r2, [r0, #20]
    4050:	str	r1, [r0, #24]
    4054:	str	r1, [r0, #28]
    4058:	sub	sp, fp, #8
    405c:	pop	{r4, sl, fp, pc}
    4060:	movw	r1, #0
    4064:	movw	r3, #0
    4068:	movw	r0, #2595	; 0xa23
    406c:	mov	r2, #56	; 0x38
    4070:	movt	r1, #0
    4074:	movt	r3, #0
    4078:	str	r0, [sp]
    407c:	mvn	r0, #0
    4080:	bl	0 <coda_set_error>
    4084:	mov	r0, #0
    4088:	sub	sp, fp, #8
    408c:	pop	{r4, sl, fp, pc}

00004090 <coda_type_complex_set_type>:
    4090:	push	{r4, r5, r6, sl, fp, lr}
    4094:	add	fp, sp, #16
    4098:	mov	r4, r0
    409c:	ldr	r0, [r0, #44]	; 0x2c
    40a0:	cmp	r0, #0
    40a4:	beq	40c4 <coda_type_complex_set_type+0x34>
    40a8:	movw	r0, #65136	; 0xfe70
    40ac:	movw	r1, #0
    40b0:	movt	r0, #65535	; 0xffff
    40b4:	movt	r1, #0
    40b8:	bl	0 <coda_set_error>
    40bc:	mvn	r0, #0
    40c0:	pop	{r4, r5, r6, sl, fp, pc}
    40c4:	ldr	r0, [r1, #8]
    40c8:	mov	r5, r1
    40cc:	bic	r0, r0, #1
    40d0:	cmp	r0, #2
    40d4:	bne	412c <coda_type_complex_set_type+0x9c>
    40d8:	ldr	r6, [r5]
    40dc:	ldr	r0, [r4]
    40e0:	cmp	r0, r6
    40e4:	bne	4148 <coda_type_complex_set_type+0xb8>
    40e8:	bl	f90 <coda_type_record_new>
    40ec:	str	r0, [r4, #44]	; 0x2c
    40f0:	movw	r0, #0
    40f4:	movt	r0, #0
    40f8:	bl	117c <coda_type_record_field_new>
    40fc:	mov	r6, r0
    4100:	cmp	r0, #0
    4104:	beq	41ac <coda_type_complex_set_type+0x11c>
    4108:	ldr	r0, [r6, #8]
    410c:	cmp	r0, #0
    4110:	beq	41cc <coda_type_complex_set_type+0x13c>
    4114:	movw	r0, #65136	; 0xfe70
    4118:	movw	r1, #0
    411c:	movt	r0, #65535	; 0xffff
    4120:	movt	r1, #0
    4124:	bl	0 <coda_set_error>
    4128:	b	41dc <coda_type_complex_set_type+0x14c>
    412c:	ldr	r0, [r4, #8]
    4130:	cmp	r0, #6
    4134:	bhi	4188 <coda_type_complex_set_type+0xf8>
    4138:	movw	r1, #0
    413c:	movt	r1, #0
    4140:	ldr	r2, [r1, r0, lsl #2]
    4144:	b	4190 <coda_type_complex_set_type+0x100>
    4148:	movw	r3, #0
    414c:	movw	r1, #0
    4150:	cmp	r6, #9
    4154:	movt	r3, #0
    4158:	movt	r1, #0
    415c:	mov	r2, r3
    4160:	ldrls	r2, [r1, r6, lsl #2]
    4164:	cmp	r0, #9
    4168:	ldrls	r3, [r1, r0, lsl #2]
    416c:	movw	r0, #65136	; 0xfe70
    4170:	movw	r1, #0
    4174:	movt	r0, #65535	; 0xffff
    4178:	movt	r1, #0
    417c:	bl	0 <coda_set_error>
    4180:	mvn	r0, #0
    4184:	pop	{r4, r5, r6, sl, fp, pc}
    4188:	movw	r2, #0
    418c:	movt	r2, #0
    4190:	movw	r0, #65136	; 0xfe70
    4194:	movw	r1, #0
    4198:	movt	r0, #65535	; 0xffff
    419c:	movt	r1, #0
    41a0:	bl	0 <coda_set_error>
    41a4:	mvn	r0, #0
    41a8:	pop	{r4, r5, r6, sl, fp, pc}
    41ac:	movw	r1, #0
    41b0:	movw	r2, #0
    41b4:	mvn	r0, #99	; 0x63
    41b8:	movw	r3, #1087	; 0x43f
    41bc:	movt	r1, #0
    41c0:	movt	r2, #0
    41c4:	bl	0 <coda_set_error>
    41c8:	b	41dc <coda_type_complex_set_type+0x14c>
    41cc:	str	r5, [r6, #8]
    41d0:	ldr	r0, [r5, #4]
    41d4:	add	r0, r0, #1
    41d8:	str	r0, [r5, #4]
    41dc:	ldr	r0, [r4, #44]	; 0x2c
    41e0:	cmp	r0, #0
    41e4:	beq	41f8 <coda_type_complex_set_type+0x168>
    41e8:	ldr	r1, [r0, #48]	; 0x30
    41ec:	mov	r2, r6
    41f0:	bl	1708 <coda_type_record_insert_field>
    41f4:	b	4214 <coda_type_complex_set_type+0x184>
    41f8:	movw	r1, #0
    41fc:	movw	r2, #0
    4200:	mvn	r0, #99	; 0x63
    4204:	mov	r3, #1424	; 0x590
    4208:	movt	r1, #0
    420c:	movt	r2, #0
    4210:	bl	0 <coda_set_error>
    4214:	movw	r0, #0
    4218:	movt	r0, #0
    421c:	bl	117c <coda_type_record_field_new>
    4220:	mov	r6, r0
    4224:	cmp	r0, #0
    4228:	beq	4250 <coda_type_complex_set_type+0x1c0>
    422c:	ldr	r0, [r6, #8]
    4230:	cmp	r0, #0
    4234:	beq	4270 <coda_type_complex_set_type+0x1e0>
    4238:	movw	r0, #65136	; 0xfe70
    423c:	movw	r1, #0
    4240:	movt	r0, #65535	; 0xffff
    4244:	movt	r1, #0
    4248:	bl	0 <coda_set_error>
    424c:	b	4280 <coda_type_complex_set_type+0x1f0>
    4250:	movw	r1, #0
    4254:	movw	r2, #0
    4258:	mvn	r0, #99	; 0x63
    425c:	movw	r3, #1087	; 0x43f
    4260:	movt	r1, #0
    4264:	movt	r2, #0
    4268:	bl	0 <coda_set_error>
    426c:	b	4280 <coda_type_complex_set_type+0x1f0>
    4270:	str	r5, [r6, #8]
    4274:	ldr	r0, [r5, #4]
    4278:	add	r0, r0, #1
    427c:	str	r0, [r5, #4]
    4280:	ldr	r0, [r4, #44]	; 0x2c
    4284:	cmp	r0, #0
    4288:	beq	429c <coda_type_complex_set_type+0x20c>
    428c:	ldr	r1, [r0, #48]	; 0x30
    4290:	mov	r2, r6
    4294:	bl	1708 <coda_type_record_insert_field>
    4298:	b	42b8 <coda_type_complex_set_type+0x228>
    429c:	movw	r1, #0
    42a0:	movw	r2, #0
    42a4:	mvn	r0, #99	; 0x63
    42a8:	mov	r3, #1424	; 0x590
    42ac:	movt	r1, #0
    42b0:	movt	r2, #0
    42b4:	bl	0 <coda_set_error>
    42b8:	ldr	r0, [r4, #44]	; 0x2c
    42bc:	ldrd	r0, [r0, #24]
    42c0:	strd	r0, [r4, #24]
    42c4:	mov	r0, #0
    42c8:	pop	{r4, r5, r6, sl, fp, pc}

000042cc <coda_type_complex_validate>:
    42cc:	push	{fp, lr}
    42d0:	mov	fp, sp
    42d4:	ldr	r1, [r0, #44]	; 0x2c
    42d8:	mov	r0, #0
    42dc:	cmp	r1, #0
    42e0:	popne	{fp, pc}
    42e4:	movw	r0, #65136	; 0xfe70
    42e8:	movw	r1, #0
    42ec:	movt	r0, #65535	; 0xffff
    42f0:	movt	r1, #0
    42f4:	bl	0 <coda_set_error>
    42f8:	mvn	r0, #0
    42fc:	pop	{fp, pc}

00004300 <coda_type_done>:
    4300:	push	{r4, r5, fp, lr}
    4304:	add	fp, sp, #8
    4308:	ldr	r4, [pc, #572]	; 454c <coda_type_done+0x24c>
    430c:	bl	0 <__aeabi_read_tp>
    4310:	ldr	r0, [r0, r4]
    4314:	cmp	r0, #0
    4318:	blne	444 <coda_type_release>
    431c:	mov	r5, #0
    4320:	bl	0 <__aeabi_read_tp>
    4324:	str	r5, [r0, r4]!
    4328:	ldr	r0, [r0, #4]
    432c:	cmp	r0, #0
    4330:	blne	444 <coda_type_release>
    4334:	bl	0 <__aeabi_read_tp>
    4338:	add	r0, r0, r4
    433c:	str	r5, [r0, #4]
    4340:	ldr	r0, [r0, #8]
    4344:	cmp	r0, #0
    4348:	blne	444 <coda_type_release>
    434c:	bl	0 <__aeabi_read_tp>
    4350:	add	r0, r0, r4
    4354:	mov	r5, #0
    4358:	str	r5, [r0, #8]
    435c:	ldr	r0, [r0, #12]
    4360:	cmp	r0, #0
    4364:	blne	444 <coda_type_release>
    4368:	bl	0 <__aeabi_read_tp>
    436c:	add	r0, r0, r4
    4370:	str	r5, [r0, #12]
    4374:	ldr	r0, [r0, #16]
    4378:	cmp	r0, #0
    437c:	blne	444 <coda_type_release>
    4380:	bl	0 <__aeabi_read_tp>
    4384:	add	r0, r0, r4
    4388:	mov	r5, #0
    438c:	str	r5, [r0, #16]
    4390:	ldr	r0, [r0, #20]
    4394:	cmp	r0, #0
    4398:	blne	444 <coda_type_release>
    439c:	bl	0 <__aeabi_read_tp>
    43a0:	add	r0, r0, r4
    43a4:	str	r5, [r0, #20]
    43a8:	ldr	r0, [r0, #24]
    43ac:	cmp	r0, #0
    43b0:	blne	444 <coda_type_release>
    43b4:	bl	0 <__aeabi_read_tp>
    43b8:	add	r0, r0, r4
    43bc:	mov	r5, #0
    43c0:	str	r5, [r0, #24]
    43c4:	ldr	r0, [r0, #28]
    43c8:	cmp	r0, #0
    43cc:	blne	444 <coda_type_release>
    43d0:	bl	0 <__aeabi_read_tp>
    43d4:	add	r0, r0, r4
    43d8:	str	r5, [r0, #28]
    43dc:	ldr	r0, [r0, #32]
    43e0:	cmp	r0, #0
    43e4:	blne	444 <coda_type_release>
    43e8:	bl	0 <__aeabi_read_tp>
    43ec:	add	r0, r0, r4
    43f0:	mov	r5, #0
    43f4:	str	r5, [r0, #32]
    43f8:	ldr	r0, [r0, #36]	; 0x24
    43fc:	cmp	r0, #0
    4400:	blne	444 <coda_type_release>
    4404:	bl	0 <__aeabi_read_tp>
    4408:	add	r0, r0, r4
    440c:	str	r5, [r0, #36]	; 0x24
    4410:	ldr	r0, [r0, #40]	; 0x28
    4414:	cmp	r0, #0
    4418:	blne	444 <coda_type_release>
    441c:	bl	0 <__aeabi_read_tp>
    4420:	add	r1, r0, r4
    4424:	ldr	r4, [pc, #292]	; 4550 <coda_type_done+0x250>
    4428:	mov	r5, #0
    442c:	str	r5, [r1, #40]	; 0x28
    4430:	ldr	r0, [r0, r4]
    4434:	cmp	r0, #0
    4438:	blne	444 <coda_type_release>
    443c:	bl	0 <__aeabi_read_tp>
    4440:	str	r5, [r0, r4]!
    4444:	ldr	r0, [r0, #4]
    4448:	cmp	r0, #0
    444c:	blne	444 <coda_type_release>
    4450:	bl	0 <__aeabi_read_tp>
    4454:	add	r0, r0, r4
    4458:	mov	r5, #0
    445c:	str	r5, [r0, #4]
    4460:	ldr	r0, [r0, #8]
    4464:	cmp	r0, #0
    4468:	blne	444 <coda_type_release>
    446c:	bl	0 <__aeabi_read_tp>
    4470:	add	r0, r0, r4
    4474:	str	r5, [r0, #8]
    4478:	ldr	r0, [r0, #12]
    447c:	cmp	r0, #0
    4480:	blne	444 <coda_type_release>
    4484:	bl	0 <__aeabi_read_tp>
    4488:	add	r0, r0, r4
    448c:	mov	r5, #0
    4490:	str	r5, [r0, #12]
    4494:	ldr	r0, [r0, #16]
    4498:	cmp	r0, #0
    449c:	blne	444 <coda_type_release>
    44a0:	bl	0 <__aeabi_read_tp>
    44a4:	add	r0, r0, r4
    44a8:	str	r5, [r0, #16]
    44ac:	ldr	r0, [r0, #20]
    44b0:	cmp	r0, #0
    44b4:	blne	444 <coda_type_release>
    44b8:	bl	0 <__aeabi_read_tp>
    44bc:	add	r0, r0, r4
    44c0:	mov	r5, #0
    44c4:	str	r5, [r0, #20]
    44c8:	ldr	r0, [r0, #24]
    44cc:	cmp	r0, #0
    44d0:	blne	444 <coda_type_release>
    44d4:	bl	0 <__aeabi_read_tp>
    44d8:	add	r0, r0, r4
    44dc:	str	r5, [r0, #24]
    44e0:	ldr	r0, [r0, #28]
    44e4:	cmp	r0, #0
    44e8:	blne	444 <coda_type_release>
    44ec:	bl	0 <__aeabi_read_tp>
    44f0:	add	r0, r0, r4
    44f4:	mov	r5, #0
    44f8:	str	r5, [r0, #28]
    44fc:	ldr	r0, [r0, #32]
    4500:	cmp	r0, #0
    4504:	blne	444 <coda_type_release>
    4508:	bl	0 <__aeabi_read_tp>
    450c:	add	r0, r0, r4
    4510:	str	r5, [r0, #32]
    4514:	ldr	r0, [r0, #36]	; 0x24
    4518:	cmp	r0, #0
    451c:	blne	444 <coda_type_release>
    4520:	bl	0 <__aeabi_read_tp>
    4524:	add	r0, r0, r4
    4528:	mov	r5, #0
    452c:	str	r5, [r0, #36]	; 0x24
    4530:	ldr	r0, [r0, #40]	; 0x28
    4534:	cmp	r0, #0
    4538:	blne	444 <coda_type_release>
    453c:	bl	0 <__aeabi_read_tp>
    4540:	add	r0, r0, r4
    4544:	str	r5, [r0, #40]	; 0x28
    4548:	pop	{r4, r5, fp, pc}
	...

00004554 <coda_type_has_attributes>:
    4554:	push	{fp, lr}
    4558:	mov	fp, sp
    455c:	cmp	r0, #0
    4560:	beq	4584 <coda_type_has_attributes+0x30>
    4564:	cmp	r1, #0
    4568:	beq	459c <coda_type_has_attributes+0x48>
    456c:	ldr	r0, [r0, #36]	; 0x24
    4570:	cmp	r0, #0
    4574:	movwne	r0, #1
    4578:	str	r0, [r1]
    457c:	mov	r0, #0
    4580:	pop	{fp, pc}
    4584:	movw	r1, #0
    4588:	movw	r2, #0
    458c:	mvn	r0, #99	; 0x63
    4590:	movw	r3, #2829	; 0xb0d
    4594:	movt	r1, #0
    4598:	b	45b0 <coda_type_has_attributes+0x5c>
    459c:	movw	r1, #0
    45a0:	movw	r2, #0
    45a4:	mvn	r0, #99	; 0x63
    45a8:	movw	r3, #2834	; 0xb12
    45ac:	movt	r1, #0
    45b0:	movt	r2, #0
    45b4:	bl	0 <coda_set_error>
    45b8:	mvn	r0, #0
    45bc:	pop	{fp, pc}

000045c0 <coda_type_get_format>:
    45c0:	push	{fp, lr}
    45c4:	mov	fp, sp
    45c8:	cmp	r0, #0
    45cc:	beq	45e8 <coda_type_get_format+0x28>
    45d0:	cmp	r1, #0
    45d4:	beq	4600 <coda_type_get_format+0x40>
    45d8:	ldr	r0, [r0]
    45dc:	str	r0, [r1]
    45e0:	mov	r0, #0
    45e4:	pop	{fp, pc}
    45e8:	movw	r1, #0
    45ec:	movw	r2, #0
    45f0:	mvn	r0, #99	; 0x63
    45f4:	movw	r3, #2853	; 0xb25
    45f8:	movt	r1, #0
    45fc:	b	4614 <coda_type_get_format+0x54>
    4600:	movw	r1, #0
    4604:	movw	r2, #0
    4608:	mvn	r0, #99	; 0x63
    460c:	movw	r3, #2858	; 0xb2a
    4610:	movt	r1, #0
    4614:	movt	r2, #0
    4618:	bl	0 <coda_set_error>
    461c:	mvn	r0, #0
    4620:	pop	{fp, pc}

00004624 <coda_type_get_class>:
    4624:	push	{fp, lr}
    4628:	mov	fp, sp
    462c:	cmp	r0, #0
    4630:	beq	464c <coda_type_get_class+0x28>
    4634:	cmp	r1, #0
    4638:	beq	4664 <coda_type_get_class+0x40>
    463c:	ldr	r0, [r0, #8]
    4640:	str	r0, [r1]
    4644:	mov	r0, #0
    4648:	pop	{fp, pc}
    464c:	movw	r1, #0
    4650:	movw	r2, #0
    4654:	mvn	r0, #99	; 0x63
    4658:	movw	r3, #2877	; 0xb3d
    465c:	movt	r1, #0
    4660:	b	4678 <coda_type_get_class+0x54>
    4664:	movw	r1, #0
    4668:	movw	r2, #0
    466c:	mvn	r0, #99	; 0x63
    4670:	movw	r3, #2882	; 0xb42
    4674:	movt	r1, #0
    4678:	movt	r2, #0
    467c:	bl	0 <coda_set_error>
    4680:	mvn	r0, #0
    4684:	pop	{fp, pc}

00004688 <coda_type_get_string_length>:
    4688:	push	{fp, lr}
    468c:	mov	fp, sp
    4690:	cmp	r0, #0
    4694:	beq	46dc <coda_type_get_string_length+0x54>
    4698:	ldr	ip, [r0, #8]
    469c:	cmp	ip, #6
    46a0:	bhi	4700 <coda_type_get_string_length+0x78>
    46a4:	movw	r2, #0
    46a8:	add	r3, pc, #4
    46ac:	movt	r2, #0
    46b0:	ldr	pc, [r3, ip, lsl #2]
    46b4:	.word	0x00004764
    46b8:	.word	0x000046d0
    46bc:	.word	0x0000470c
    46c0:	.word	0x00004718
    46c4:	.word	0x00004724
    46c8:	.word	0x00004750
    46cc:	.word	0x0000475c
    46d0:	movw	r2, #0
    46d4:	movt	r2, #0
    46d8:	b	4764 <coda_type_get_string_length+0xdc>
    46dc:	movw	r1, #0
    46e0:	movw	r2, #0
    46e4:	mvn	r0, #99	; 0x63
    46e8:	movw	r3, #2942	; 0xb7e
    46ec:	movt	r1, #0
    46f0:	movt	r2, #0
    46f4:	bl	0 <coda_set_error>
    46f8:	mvn	r0, #0
    46fc:	pop	{fp, pc}
    4700:	movw	r2, #0
    4704:	movt	r2, #0
    4708:	b	4764 <coda_type_get_string_length+0xdc>
    470c:	movw	r2, #0
    4710:	movt	r2, #0
    4714:	b	4764 <coda_type_get_string_length+0xdc>
    4718:	movw	r2, #0
    471c:	movt	r2, #0
    4720:	b	4764 <coda_type_get_string_length+0xdc>
    4724:	cmp	r1, #0
    4728:	beq	477c <coda_type_get_string_length+0xf4>
    472c:	ldr	r3, [r0, #28]
    4730:	ldr	r0, [r0, #24]
    4734:	lsr	r0, r0, #3
    4738:	cmp	r3, #0
    473c:	orr	r0, r0, r3, lsl #29
    4740:	mvnmi	r0, #0
    4744:	str	r0, [r1]
    4748:	mov	r0, #0
    474c:	pop	{fp, pc}
    4750:	movw	r2, #0
    4754:	movt	r2, #0
    4758:	b	4764 <coda_type_get_string_length+0xdc>
    475c:	movw	r2, #0
    4760:	movt	r2, #0
    4764:	movw	r1, #0
    4768:	mvn	r0, #104	; 0x68
    476c:	movt	r1, #0
    4770:	bl	0 <coda_set_error>
    4774:	mvn	r0, #0
    4778:	pop	{fp, pc}
    477c:	movw	r1, #0
    4780:	movw	r2, #0
    4784:	mvn	r0, #99	; 0x63
    4788:	movw	r3, #2953	; 0xb89
    478c:	movt	r1, #0
    4790:	b	46f0 <coda_type_get_string_length+0x68>

00004794 <coda_type_get_bit_size>:
    4794:	push	{r5, sl, fp, lr}
    4798:	add	fp, sp, #8
    479c:	cmp	r0, #0
    47a0:	beq	47c8 <coda_type_get_bit_size+0x34>
    47a4:	cmp	r1, #0
    47a8:	beq	47e0 <coda_type_get_bit_size+0x4c>
    47ac:	ldrd	r2, [r0, #24]
    47b0:	mov	r0, #0
    47b4:	cmn	r3, #1
    47b8:	orr	r5, r3, r3, asr #31
    47bc:	mvnle	r2, #0
    47c0:	stm	r1, {r2, r5}
    47c4:	pop	{r5, sl, fp, pc}
    47c8:	movw	r1, #0
    47cc:	movw	r2, #0
    47d0:	mvn	r0, #99	; 0x63
    47d4:	movw	r3, #2980	; 0xba4
    47d8:	movt	r1, #0
    47dc:	b	47f4 <coda_type_get_bit_size+0x60>
    47e0:	movw	r1, #0
    47e4:	movw	r2, #0
    47e8:	mvn	r0, #99	; 0x63
    47ec:	movw	r3, #2985	; 0xba9
    47f0:	movt	r1, #0
    47f4:	movt	r2, #0
    47f8:	bl	0 <coda_set_error>
    47fc:	mvn	r0, #0
    4800:	pop	{r5, sl, fp, pc}

00004804 <coda_type_get_name>:
    4804:	push	{fp, lr}
    4808:	mov	fp, sp
    480c:	cmp	r0, #0
    4810:	beq	482c <coda_type_get_name+0x28>
    4814:	cmp	r1, #0
    4818:	beq	4844 <coda_type_get_name+0x40>
    481c:	ldr	r0, [r0, #16]
    4820:	str	r0, [r1]
    4824:	mov	r0, #0
    4828:	pop	{fp, pc}
    482c:	movw	r1, #0
    4830:	movw	r2, #0
    4834:	mvn	r0, #99	; 0x63
    4838:	movw	r3, #3012	; 0xbc4
    483c:	movt	r1, #0
    4840:	b	4858 <coda_type_get_name+0x54>
    4844:	movw	r1, #0
    4848:	movw	r2, #0
    484c:	mvn	r0, #99	; 0x63
    4850:	movw	r3, #3017	; 0xbc9
    4854:	movt	r1, #0
    4858:	movt	r2, #0
    485c:	bl	0 <coda_set_error>
    4860:	mvn	r0, #0
    4864:	pop	{fp, pc}

00004868 <coda_type_get_description>:
    4868:	push	{fp, lr}
    486c:	mov	fp, sp
    4870:	cmp	r0, #0
    4874:	beq	4890 <coda_type_get_description+0x28>
    4878:	cmp	r1, #0
    487c:	beq	48a8 <coda_type_get_description+0x40>
    4880:	ldr	r0, [r0, #20]
    4884:	str	r0, [r1]
    4888:	mov	r0, #0
    488c:	pop	{fp, pc}
    4890:	movw	r1, #0
    4894:	movw	r2, #0
    4898:	mvn	r0, #99	; 0x63
    489c:	movw	r3, #3038	; 0xbde
    48a0:	movt	r1, #0
    48a4:	b	48bc <coda_type_get_description+0x54>
    48a8:	movw	r1, #0
    48ac:	movw	r2, #0
    48b0:	mvn	r0, #99	; 0x63
    48b4:	movw	r3, #3043	; 0xbe3
    48b8:	movt	r1, #0
    48bc:	movt	r2, #0
    48c0:	bl	0 <coda_set_error>
    48c4:	mvn	r0, #0
    48c8:	pop	{fp, pc}

000048cc <coda_type_get_unit>:
    48cc:	push	{fp, lr}
    48d0:	mov	fp, sp
    48d4:	cmp	r0, #0
    48d8:	beq	4900 <coda_type_get_unit+0x34>
    48dc:	cmp	r1, #0
    48e0:	beq	4918 <coda_type_get_unit+0x4c>
    48e4:	mov	r2, r0
    48e8:	ldr	r0, [r2, #8]
    48ec:	cmp	r0, #1
    48f0:	bne	493c <coda_type_get_unit+0x70>
    48f4:	ldr	r2, [r2, #40]	; 0x28
    48f8:	cmp	r2, #0
    48fc:	bne	48e8 <coda_type_get_unit+0x1c>
    4900:	movw	r1, #0
    4904:	movw	r2, #0
    4908:	mvn	r0, #99	; 0x63
    490c:	movw	r3, #3068	; 0xbfc
    4910:	movt	r1, #0
    4914:	b	492c <coda_type_get_unit+0x60>
    4918:	movw	r1, #0
    491c:	movw	r2, #0
    4920:	mvn	r0, #99	; 0x63
    4924:	movw	r3, #3074	; 0xc02
    4928:	movt	r1, #0
    492c:	movt	r2, #0
    4930:	bl	0 <coda_set_error>
    4934:	mvn	r0, #0
    4938:	pop	{fp, pc}
    493c:	sub	r3, r0, #2
    4940:	cmp	r3, #2
    4944:	bcs	4974 <coda_type_get_unit+0xa8>
    4948:	ldr	r0, [pc, #80]	; 49a0 <coda_type_get_unit+0xd4>
    494c:	ldr	r3, [pc, r0]
    4950:	bl	0 <__aeabi_read_tp>
    4954:	ldr	r0, [r0, r3]
    4958:	cmp	r0, #0
    495c:	beq	4984 <coda_type_get_unit+0xb8>
    4960:	ldr	r0, [r2, #48]	; 0x30
    4964:	cmp	r0, #0
    4968:	beq	4984 <coda_type_get_unit+0xb8>
    496c:	ldr	r0, [r0, #32]
    4970:	b	4988 <coda_type_get_unit+0xbc>
    4974:	cmp	r0, #6
    4978:	bne	4994 <coda_type_get_unit+0xc8>
    497c:	ldr	r0, [r2, #48]	; 0x30
    4980:	b	4988 <coda_type_get_unit+0xbc>
    4984:	ldr	r0, [r2, #40]	; 0x28
    4988:	str	r0, [r1]
    498c:	mov	r0, #0
    4990:	pop	{fp, pc}
    4994:	mov	r0, #0
    4998:	str	r0, [r1]
    499c:	pop	{fp, pc}
    49a0:	.word	0x0000004c

000049a4 <coda_type_get_array_base_type>:
    49a4:	push	{fp, lr}
    49a8:	mov	fp, sp
    49ac:	cmp	r0, #0
    49b0:	beq	4a04 <coda_type_get_array_base_type+0x60>
    49b4:	ldr	ip, [r0, #8]
    49b8:	cmp	ip, #6
    49bc:	bhi	4a28 <coda_type_get_array_base_type+0x84>
    49c0:	movw	r2, #0
    49c4:	add	r3, pc, #4
    49c8:	movt	r2, #0
    49cc:	ldr	pc, [r3, ip, lsl #2]
    49d0:	.word	0x00004a6c
    49d4:	.word	0x000049ec
    49d8:	.word	0x00004a34
    49dc:	.word	0x00004a40
    49e0:	.word	0x00004a4c
    49e4:	.word	0x00004a58
    49e8:	.word	0x00004a64
    49ec:	cmp	r1, #0
    49f0:	beq	4a84 <coda_type_get_array_base_type+0xe0>
    49f4:	ldr	r0, [r0, #40]	; 0x28
    49f8:	str	r0, [r1]
    49fc:	mov	r0, #0
    4a00:	pop	{fp, pc}
    4a04:	movw	r1, #0
    4a08:	movw	r2, #0
    4a0c:	mvn	r0, #99	; 0x63
    4a10:	movw	r3, #3720	; 0xe88
    4a14:	movt	r1, #0
    4a18:	movt	r2, #0
    4a1c:	bl	0 <coda_set_error>
    4a20:	mvn	r0, #0
    4a24:	pop	{fp, pc}
    4a28:	movw	r2, #0
    4a2c:	movt	r2, #0
    4a30:	b	4a6c <coda_type_get_array_base_type+0xc8>
    4a34:	movw	r2, #0
    4a38:	movt	r2, #0
    4a3c:	b	4a6c <coda_type_get_array_base_type+0xc8>
    4a40:	movw	r2, #0
    4a44:	movt	r2, #0
    4a48:	b	4a6c <coda_type_get_array_base_type+0xc8>
    4a4c:	movw	r2, #0
    4a50:	movt	r2, #0
    4a54:	b	4a6c <coda_type_get_array_base_type+0xc8>
    4a58:	movw	r2, #0
    4a5c:	movt	r2, #0
    4a60:	b	4a6c <coda_type_get_array_base_type+0xc8>
    4a64:	movw	r2, #0
    4a68:	movt	r2, #0
    4a6c:	movw	r1, #0
    4a70:	mvn	r0, #104	; 0x68
    4a74:	movt	r1, #0
    4a78:	bl	0 <coda_set_error>
    4a7c:	mvn	r0, #0
    4a80:	pop	{fp, pc}
    4a84:	movw	r1, #0
    4a88:	movw	r2, #0
    4a8c:	mvn	r0, #99	; 0x63
    4a90:	movw	r3, #3731	; 0xe93
    4a94:	movt	r1, #0
    4a98:	b	4a18 <coda_type_get_array_base_type+0x74>

00004a9c <coda_type_get_fixed_value>:
    4a9c:	push	{r4, r5, fp, lr}
    4aa0:	add	fp, sp, #8
    4aa4:	cmp	r0, #0
    4aa8:	beq	4af8 <coda_type_get_fixed_value+0x5c>
    4aac:	cmp	r1, #0
    4ab0:	beq	4b10 <coda_type_get_fixed_value+0x74>
    4ab4:	mov	r4, r2
    4ab8:	ldr	r2, [r0, #8]
    4abc:	cmp	r2, #5
    4ac0:	beq	4b38 <coda_type_get_fixed_value+0x9c>
    4ac4:	cmp	r2, #4
    4ac8:	bne	4b64 <coda_type_get_fixed_value+0xc8>
    4acc:	ldr	r0, [r0, #40]	; 0x28
    4ad0:	mov	r5, #0
    4ad4:	cmp	r4, #0
    4ad8:	str	r0, [r1]
    4adc:	beq	4b6c <coda_type_get_fixed_value+0xd0>
    4ae0:	cmp	r0, #0
    4ae4:	mov	r1, #0
    4ae8:	beq	4b58 <coda_type_get_fixed_value+0xbc>
    4aec:	bl	0 <strlen>
    4af0:	mov	r1, r0
    4af4:	b	4b58 <coda_type_get_fixed_value+0xbc>
    4af8:	movw	r1, #0
    4afc:	movw	r2, #0
    4b00:	mvn	r0, #99	; 0x63
    4b04:	movw	r3, #3133	; 0xc3d
    4b08:	movt	r1, #0
    4b0c:	b	4b24 <coda_type_get_fixed_value+0x88>
    4b10:	movw	r1, #0
    4b14:	movw	r2, #0
    4b18:	mvn	r0, #99	; 0x63
    4b1c:	movw	r3, #3138	; 0xc42
    4b20:	movt	r1, #0
    4b24:	movt	r2, #0
    4b28:	bl	0 <coda_set_error>
    4b2c:	mvn	r5, #0
    4b30:	mov	r0, r5
    4b34:	pop	{r4, r5, fp, pc}
    4b38:	ldr	r2, [r0, #44]	; 0x2c
    4b3c:	mov	r5, #0
    4b40:	cmp	r4, #0
    4b44:	str	r2, [r1]
    4b48:	beq	4b6c <coda_type_get_fixed_value+0xd0>
    4b4c:	cmp	r2, #0
    4b50:	mov	r1, #0
    4b54:	ldrne	r1, [r0, #40]	; 0x28
    4b58:	mov	r0, r5
    4b5c:	str	r1, [r4]
    4b60:	pop	{r4, r5, fp, pc}
    4b64:	mov	r5, #0
    4b68:	str	r5, [r1]
    4b6c:	mov	r0, r5
    4b70:	pop	{r4, r5, fp, pc}

00004b74 <coda_type_get_attributes>:
    4b74:	push	{r4, r5, r6, sl, fp, lr}
    4b78:	add	fp, sp, #16
    4b7c:	cmp	r0, #0
    4b80:	beq	4ba8 <coda_type_get_attributes+0x34>
    4b84:	mov	r4, r1
    4b88:	cmp	r1, #0
    4b8c:	beq	4bc0 <coda_type_get_attributes+0x4c>
    4b90:	ldr	r1, [r0, #36]	; 0x24
    4b94:	cmp	r1, #0
    4b98:	beq	4be4 <coda_type_get_attributes+0x70>
    4b9c:	mov	r0, #0
    4ba0:	str	r1, [r4]
    4ba4:	pop	{r4, r5, r6, sl, fp, pc}
    4ba8:	movw	r1, #0
    4bac:	movw	r2, #0
    4bb0:	mvn	r0, #99	; 0x63
    4bb4:	movw	r3, #3178	; 0xc6a
    4bb8:	movt	r1, #0
    4bbc:	b	4bd4 <coda_type_get_attributes+0x60>
    4bc0:	movw	r1, #0
    4bc4:	movw	r2, #0
    4bc8:	mvn	r0, #99	; 0x63
    4bcc:	movw	r3, #3183	; 0xc6f
    4bd0:	movt	r1, #0
    4bd4:	movt	r2, #0
    4bd8:	bl	0 <coda_set_error>
    4bdc:	mvn	r0, #0
    4be0:	pop	{r4, r5, r6, sl, fp, pc}
    4be4:	ldr	r5, [r0]
    4be8:	cmp	r5, #11
    4bec:	bcs	4c30 <coda_type_get_attributes+0xbc>
    4bf0:	ldr	r1, [pc, #112]	; 4c68 <coda_type_get_attributes+0xf4>
    4bf4:	bl	0 <__aeabi_read_tp>
    4bf8:	add	r0, r0, r1
    4bfc:	ldr	r0, [r0, r5, lsl #2]
    4c00:	cmp	r0, #0
    4c04:	bne	4c24 <coda_type_get_attributes+0xb0>
    4c08:	bl	0 <__aeabi_read_tp>
    4c0c:	add	r6, r0, r1
    4c10:	mov	r0, r5
    4c14:	bl	f90 <coda_type_record_new>
    4c18:	cmp	r0, #0
    4c1c:	str	r0, [r6, r5, lsl #2]
    4c20:	beq	4c48 <coda_type_get_attributes+0xd4>
    4c24:	str	r0, [r4]
    4c28:	mov	r0, #0
    4c2c:	pop	{r4, r5, r6, sl, fp, pc}
    4c30:	movw	r0, #0
    4c34:	movw	r1, #0
    4c38:	movw	r3, #0
    4c3c:	movw	r2, #1268	; 0x4f4
    4c40:	movt	r0, #0
    4c44:	b	4c5c <coda_type_get_attributes+0xe8>
    4c48:	movw	r0, #0
    4c4c:	movw	r1, #0
    4c50:	movw	r3, #0
    4c54:	movw	r2, #1272	; 0x4f8
    4c58:	movt	r0, #0
    4c5c:	movt	r1, #0
    4c60:	movt	r3, #0
    4c64:	bl	0 <__assert_fail>
    4c68:	.word	0x00000000

00004c6c <coda_type_get_num_record_fields>:
    4c6c:	push	{fp, lr}
    4c70:	mov	fp, sp
    4c74:	cmp	r0, #0
    4c78:	beq	4ccc <coda_type_get_num_record_fields+0x60>
    4c7c:	ldr	ip, [r0, #8]
    4c80:	cmp	ip, #6
    4c84:	bhi	4cf0 <coda_type_get_num_record_fields+0x84>
    4c88:	movw	r2, #0
    4c8c:	add	r3, pc, #4
    4c90:	movt	r2, #0
    4c94:	ldr	pc, [r3, ip, lsl #2]
    4c98:	.word	0x00004cb4
    4c9c:	.word	0x00004d34
    4ca0:	.word	0x00004cfc
    4ca4:	.word	0x00004d08
    4ca8:	.word	0x00004d14
    4cac:	.word	0x00004d20
    4cb0:	.word	0x00004d2c
    4cb4:	cmp	r1, #0
    4cb8:	beq	4d4c <coda_type_get_num_record_fields+0xe0>
    4cbc:	ldr	r0, [r0, #48]	; 0x30
    4cc0:	str	r0, [r1]
    4cc4:	mov	r0, #0
    4cc8:	pop	{fp, pc}
    4ccc:	movw	r1, #0
    4cd0:	movw	r2, #0
    4cd4:	mvn	r0, #99	; 0x63
    4cd8:	movw	r3, #3209	; 0xc89
    4cdc:	movt	r1, #0
    4ce0:	movt	r2, #0
    4ce4:	bl	0 <coda_set_error>
    4ce8:	mvn	r0, #0
    4cec:	pop	{fp, pc}
    4cf0:	movw	r2, #0
    4cf4:	movt	r2, #0
    4cf8:	b	4d34 <coda_type_get_num_record_fields+0xc8>
    4cfc:	movw	r2, #0
    4d00:	movt	r2, #0
    4d04:	b	4d34 <coda_type_get_num_record_fields+0xc8>
    4d08:	movw	r2, #0
    4d0c:	movt	r2, #0
    4d10:	b	4d34 <coda_type_get_num_record_fields+0xc8>
    4d14:	movw	r2, #0
    4d18:	movt	r2, #0
    4d1c:	b	4d34 <coda_type_get_num_record_fields+0xc8>
    4d20:	movw	r2, #0
    4d24:	movt	r2, #0
    4d28:	b	4d34 <coda_type_get_num_record_fields+0xc8>
    4d2c:	movw	r2, #0
    4d30:	movt	r2, #0
    4d34:	movw	r1, #0
    4d38:	mvn	r0, #104	; 0x68
    4d3c:	movt	r1, #0
    4d40:	bl	0 <coda_set_error>
    4d44:	mvn	r0, #0
    4d48:	pop	{fp, pc}
    4d4c:	movw	r1, #0
    4d50:	movw	r2, #0
    4d54:	mvn	r0, #99	; 0x63
    4d58:	movw	r3, #3220	; 0xc94
    4d5c:	movt	r1, #0
    4d60:	b	4ce0 <coda_type_get_num_record_fields+0x74>

00004d64 <coda_type_get_record_field_index_from_name>:
    4d64:	push	{r4, r5, fp, lr}
    4d68:	add	fp, sp, #8
    4d6c:	cmp	r0, #0
    4d70:	beq	4de4 <coda_type_get_record_field_index_from_name+0x80>
    4d74:	mov	r4, r1
    4d78:	ldr	r1, [r0, #8]
    4d7c:	cmp	r1, #6
    4d80:	bhi	4e08 <coda_type_get_record_field_index_from_name+0xa4>
    4d84:	mov	r5, r2
    4d88:	movw	r2, #0
    4d8c:	add	r3, pc, #4
    4d90:	movt	r2, #0
    4d94:	ldr	pc, [r3, r1, lsl #2]
    4d98:	.word	0x00004db4
    4d9c:	.word	0x00004e4c
    4da0:	.word	0x00004e14
    4da4:	.word	0x00004e20
    4da8:	.word	0x00004e2c
    4dac:	.word	0x00004e38
    4db0:	.word	0x00004e44
    4db4:	cmp	r4, #0
    4db8:	beq	4e64 <coda_type_get_record_field_index_from_name+0x100>
    4dbc:	cmp	r5, #0
    4dc0:	beq	4e7c <coda_type_get_record_field_index_from_name+0x118>
    4dc4:	ldr	r0, [r0, #40]	; 0x28
    4dc8:	mov	r1, r4
    4dcc:	bl	0 <coda_hashtable_get_index_from_name>
    4dd0:	cmn	r0, #1
    4dd4:	ble	4e94 <coda_type_get_record_field_index_from_name+0x130>
    4dd8:	str	r0, [r5]
    4ddc:	mov	r0, #0
    4de0:	pop	{r4, r5, fp, pc}
    4de4:	movw	r1, #0
    4de8:	movw	r2, #0
    4dec:	mvn	r0, #99	; 0x63
    4df0:	movw	r3, #3244	; 0xcac
    4df4:	movt	r1, #0
    4df8:	movt	r2, #0
    4dfc:	bl	0 <coda_set_error>
    4e00:	mvn	r0, #0
    4e04:	pop	{r4, r5, fp, pc}
    4e08:	movw	r2, #0
    4e0c:	movt	r2, #0
    4e10:	b	4e4c <coda_type_get_record_field_index_from_name+0xe8>
    4e14:	movw	r2, #0
    4e18:	movt	r2, #0
    4e1c:	b	4e4c <coda_type_get_record_field_index_from_name+0xe8>
    4e20:	movw	r2, #0
    4e24:	movt	r2, #0
    4e28:	b	4e4c <coda_type_get_record_field_index_from_name+0xe8>
    4e2c:	movw	r2, #0
    4e30:	movt	r2, #0
    4e34:	b	4e4c <coda_type_get_record_field_index_from_name+0xe8>
    4e38:	movw	r2, #0
    4e3c:	movt	r2, #0
    4e40:	b	4e4c <coda_type_get_record_field_index_from_name+0xe8>
    4e44:	movw	r2, #0
    4e48:	movt	r2, #0
    4e4c:	movw	r1, #0
    4e50:	mvn	r0, #104	; 0x68
    4e54:	movt	r1, #0
    4e58:	bl	0 <coda_set_error>
    4e5c:	mvn	r0, #0
    4e60:	pop	{r4, r5, fp, pc}
    4e64:	movw	r1, #0
    4e68:	movw	r2, #0
    4e6c:	mvn	r0, #99	; 0x63
    4e70:	movw	r3, #3255	; 0xcb7
    4e74:	movt	r1, #0
    4e78:	b	4df8 <coda_type_get_record_field_index_from_name+0x94>
    4e7c:	movw	r1, #0
    4e80:	movw	r2, #0
    4e84:	mvn	r0, #99	; 0x63
    4e88:	movw	r3, #3260	; 0xcbc
    4e8c:	movt	r1, #0
    4e90:	b	4df8 <coda_type_get_record_field_index_from_name+0x94>
    4e94:	movw	r1, #0
    4e98:	mvn	r0, #101	; 0x65
    4e9c:	mov	r2, r4
    4ea0:	movt	r1, #0
    4ea4:	b	4e58 <coda_type_get_record_field_index_from_name+0xf4>

00004ea8 <coda_type_get_record_field_index_from_name_n>:
    4ea8:	push	{r4, r5, r6, sl, fp, lr}
    4eac:	add	fp, sp, #16
    4eb0:	cmp	r0, #0
    4eb4:	beq	4f30 <coda_type_get_record_field_index_from_name_n+0x88>
    4eb8:	mov	r4, r1
    4ebc:	ldr	r1, [r0, #8]
    4ec0:	cmp	r1, #6
    4ec4:	bhi	4f54 <coda_type_get_record_field_index_from_name_n+0xac>
    4ec8:	mov	r6, r3
    4ecc:	mov	r5, r2
    4ed0:	movw	r2, #0
    4ed4:	add	r3, pc, #4
    4ed8:	movt	r2, #0
    4edc:	ldr	pc, [r3, r1, lsl #2]
    4ee0:	.word	0x00004efc
    4ee4:	.word	0x00004f98
    4ee8:	.word	0x00004f60
    4eec:	.word	0x00004f6c
    4ef0:	.word	0x00004f78
    4ef4:	.word	0x00004f84
    4ef8:	.word	0x00004f90
    4efc:	cmp	r4, #0
    4f00:	beq	4fb0 <coda_type_get_record_field_index_from_name_n+0x108>
    4f04:	cmp	r6, #0
    4f08:	beq	4fc8 <coda_type_get_record_field_index_from_name_n+0x120>
    4f0c:	ldr	r0, [r0, #40]	; 0x28
    4f10:	mov	r1, r4
    4f14:	mov	r2, r5
    4f18:	bl	0 <coda_hashtable_get_index_from_name_n>
    4f1c:	cmn	r0, #1
    4f20:	ble	4fe0 <coda_type_get_record_field_index_from_name_n+0x138>
    4f24:	str	r0, [r6]
    4f28:	mov	r0, #0
    4f2c:	pop	{r4, r5, r6, sl, fp, pc}
    4f30:	movw	r1, #0
    4f34:	movw	r2, #0
    4f38:	mvn	r0, #99	; 0x63
    4f3c:	movw	r3, #3291	; 0xcdb
    4f40:	movt	r1, #0
    4f44:	movt	r2, #0
    4f48:	bl	0 <coda_set_error>
    4f4c:	mvn	r0, #0
    4f50:	pop	{r4, r5, r6, sl, fp, pc}
    4f54:	movw	r2, #0
    4f58:	movt	r2, #0
    4f5c:	b	4f98 <coda_type_get_record_field_index_from_name_n+0xf0>
    4f60:	movw	r2, #0
    4f64:	movt	r2, #0
    4f68:	b	4f98 <coda_type_get_record_field_index_from_name_n+0xf0>
    4f6c:	movw	r2, #0
    4f70:	movt	r2, #0
    4f74:	b	4f98 <coda_type_get_record_field_index_from_name_n+0xf0>
    4f78:	movw	r2, #0
    4f7c:	movt	r2, #0
    4f80:	b	4f98 <coda_type_get_record_field_index_from_name_n+0xf0>
    4f84:	movw	r2, #0
    4f88:	movt	r2, #0
    4f8c:	b	4f98 <coda_type_get_record_field_index_from_name_n+0xf0>
    4f90:	movw	r2, #0
    4f94:	movt	r2, #0
    4f98:	movw	r1, #0
    4f9c:	mvn	r0, #104	; 0x68
    4fa0:	movt	r1, #0
    4fa4:	bl	0 <coda_set_error>
    4fa8:	mvn	r0, #0
    4fac:	pop	{r4, r5, r6, sl, fp, pc}
    4fb0:	movw	r1, #0
    4fb4:	movw	r2, #0
    4fb8:	mvn	r0, #99	; 0x63
    4fbc:	movw	r3, #3302	; 0xce6
    4fc0:	movt	r1, #0
    4fc4:	b	4f44 <coda_type_get_record_field_index_from_name_n+0x9c>
    4fc8:	movw	r1, #0
    4fcc:	movw	r2, #0
    4fd0:	mvn	r0, #99	; 0x63
    4fd4:	movw	r3, #3307	; 0xceb
    4fd8:	movt	r1, #0
    4fdc:	b	4f44 <coda_type_get_record_field_index_from_name_n+0x9c>
    4fe0:	movw	r1, #0
    4fe4:	mvn	r0, #101	; 0x65
    4fe8:	mov	r2, r5
    4fec:	mov	r3, r4
    4ff0:	movt	r1, #0
    4ff4:	b	4f48 <coda_type_get_record_field_index_from_name_n+0xa0>

00004ff8 <coda_type_get_record_field_index_from_real_name>:
    4ff8:	push	{r4, r5, fp, lr}
    4ffc:	add	fp, sp, #8
    5000:	cmp	r0, #0
    5004:	beq	5078 <coda_type_get_record_field_index_from_real_name+0x80>
    5008:	mov	r4, r1
    500c:	ldr	r1, [r0, #8]
    5010:	cmp	r1, #6
    5014:	bhi	509c <coda_type_get_record_field_index_from_real_name+0xa4>
    5018:	mov	r5, r2
    501c:	movw	r2, #0
    5020:	add	r3, pc, #4
    5024:	movt	r2, #0
    5028:	ldr	pc, [r3, r1, lsl #2]
    502c:	.word	0x00005048
    5030:	.word	0x000050e0
    5034:	.word	0x000050a8
    5038:	.word	0x000050b4
    503c:	.word	0x000050c0
    5040:	.word	0x000050cc
    5044:	.word	0x000050d8
    5048:	cmp	r4, #0
    504c:	beq	50f8 <coda_type_get_record_field_index_from_real_name+0x100>
    5050:	cmp	r5, #0
    5054:	beq	5110 <coda_type_get_record_field_index_from_real_name+0x118>
    5058:	ldr	r0, [r0, #44]	; 0x2c
    505c:	mov	r1, r4
    5060:	bl	0 <coda_hashtable_get_index_from_name>
    5064:	cmn	r0, #1
    5068:	ble	5128 <coda_type_get_record_field_index_from_real_name+0x130>
    506c:	str	r0, [r5]
    5070:	mov	r0, #0
    5074:	pop	{r4, r5, fp, pc}
    5078:	movw	r1, #0
    507c:	movw	r2, #0
    5080:	mvn	r0, #99	; 0x63
    5084:	movw	r3, #3338	; 0xd0a
    5088:	movt	r1, #0
    508c:	movt	r2, #0
    5090:	bl	0 <coda_set_error>
    5094:	mvn	r0, #0
    5098:	pop	{r4, r5, fp, pc}
    509c:	movw	r2, #0
    50a0:	movt	r2, #0
    50a4:	b	50e0 <coda_type_get_record_field_index_from_real_name+0xe8>
    50a8:	movw	r2, #0
    50ac:	movt	r2, #0
    50b0:	b	50e0 <coda_type_get_record_field_index_from_real_name+0xe8>
    50b4:	movw	r2, #0
    50b8:	movt	r2, #0
    50bc:	b	50e0 <coda_type_get_record_field_index_from_real_name+0xe8>
    50c0:	movw	r2, #0
    50c4:	movt	r2, #0
    50c8:	b	50e0 <coda_type_get_record_field_index_from_real_name+0xe8>
    50cc:	movw	r2, #0
    50d0:	movt	r2, #0
    50d4:	b	50e0 <coda_type_get_record_field_index_from_real_name+0xe8>
    50d8:	movw	r2, #0
    50dc:	movt	r2, #0
    50e0:	movw	r1, #0
    50e4:	mvn	r0, #104	; 0x68
    50e8:	movt	r1, #0
    50ec:	bl	0 <coda_set_error>
    50f0:	mvn	r0, #0
    50f4:	pop	{r4, r5, fp, pc}
    50f8:	movw	r1, #0
    50fc:	movw	r2, #0
    5100:	mvn	r0, #99	; 0x63
    5104:	movw	r3, #3349	; 0xd15
    5108:	movt	r1, #0
    510c:	b	508c <coda_type_get_record_field_index_from_real_name+0x94>
    5110:	movw	r1, #0
    5114:	movw	r2, #0
    5118:	mvn	r0, #99	; 0x63
    511c:	movw	r3, #3354	; 0xd1a
    5120:	movt	r1, #0
    5124:	b	508c <coda_type_get_record_field_index_from_real_name+0x94>
    5128:	movw	r1, #0
    512c:	mvn	r0, #101	; 0x65
    5130:	mov	r2, r4
    5134:	movt	r1, #0
    5138:	b	50ec <coda_type_get_record_field_index_from_real_name+0xf4>

0000513c <coda_type_get_record_field_type>:
    513c:	push	{fp, lr}
    5140:	mov	fp, sp
    5144:	sub	sp, sp, #8
    5148:	cmp	r0, #0
    514c:	beq	51c4 <coda_type_get_record_field_type+0x88>
    5150:	mov	ip, r1
    5154:	ldr	r1, [r0, #8]
    5158:	cmp	r1, #6
    515c:	bhi	51e4 <coda_type_get_record_field_type+0xa8>
    5160:	movw	lr, #0
    5164:	add	r3, pc, #4
    5168:	movt	lr, #0
    516c:	ldr	pc, [r3, r1, lsl #2]
    5170:	.word	0x0000518c
    5174:	.word	0x00005228
    5178:	.word	0x000051f0
    517c:	.word	0x000051fc
    5180:	.word	0x00005208
    5184:	.word	0x00005214
    5188:	.word	0x00005220
    518c:	cmp	r2, #0
    5190:	beq	5248 <coda_type_get_record_field_type+0x10c>
    5194:	ldr	r3, [r0, #48]	; 0x30
    5198:	cmp	ip, #0
    519c:	bmi	5260 <coda_type_get_record_field_type+0x124>
    51a0:	cmp	r3, ip
    51a4:	ble	5260 <coda_type_get_record_field_type+0x124>
    51a8:	ldr	r0, [r0, #52]	; 0x34
    51ac:	ldr	r0, [r0, ip, lsl #2]
    51b0:	ldr	r0, [r0, #8]
    51b4:	str	r0, [r2]
    51b8:	mov	r0, #0
    51bc:	mov	sp, fp
    51c0:	pop	{fp, pc}
    51c4:	movw	r1, #0
    51c8:	movw	r2, #0
    51cc:	mvn	r0, #99	; 0x63
    51d0:	movw	r3, #3381	; 0xd35
    51d4:	movt	r1, #0
    51d8:	movt	r2, #0
    51dc:	bl	0 <coda_set_error>
    51e0:	b	523c <coda_type_get_record_field_type+0x100>
    51e4:	movw	lr, #0
    51e8:	movt	lr, #0
    51ec:	b	5228 <coda_type_get_record_field_type+0xec>
    51f0:	movw	lr, #0
    51f4:	movt	lr, #0
    51f8:	b	5228 <coda_type_get_record_field_type+0xec>
    51fc:	movw	lr, #0
    5200:	movt	lr, #0
    5204:	b	5228 <coda_type_get_record_field_type+0xec>
    5208:	movw	lr, #0
    520c:	movt	lr, #0
    5210:	b	5228 <coda_type_get_record_field_type+0xec>
    5214:	movw	lr, #0
    5218:	movt	lr, #0
    521c:	b	5228 <coda_type_get_record_field_type+0xec>
    5220:	movw	lr, #0
    5224:	movt	lr, #0
    5228:	movw	r1, #0
    522c:	mvn	r0, #104	; 0x68
    5230:	mov	r2, lr
    5234:	movt	r1, #0
    5238:	bl	0 <coda_set_error>
    523c:	mvn	r0, #0
    5240:	mov	sp, fp
    5244:	pop	{fp, pc}
    5248:	movw	r1, #0
    524c:	movw	r2, #0
    5250:	mvn	r0, #99	; 0x63
    5254:	mov	r3, #3392	; 0xd40
    5258:	movt	r1, #0
    525c:	b	51d8 <coda_type_get_record_field_type+0x9c>
    5260:	movw	r1, #0
    5264:	movw	r0, #3399	; 0xd47
    5268:	mov	r2, ip
    526c:	movt	r1, #0
    5270:	str	r0, [sp, #4]
    5274:	mvn	r0, #100	; 0x64
    5278:	str	r1, [sp]
    527c:	movw	r1, #0
    5280:	movt	r1, #0
    5284:	b	51dc <coda_type_get_record_field_type+0xa0>

00005288 <coda_type_get_record_field_name>:
    5288:	push	{fp, lr}
    528c:	mov	fp, sp
    5290:	sub	sp, sp, #8
    5294:	cmp	r0, #0
    5298:	beq	5310 <coda_type_get_record_field_name+0x88>
    529c:	mov	ip, r1
    52a0:	ldr	r1, [r0, #8]
    52a4:	cmp	r1, #6
    52a8:	bhi	5330 <coda_type_get_record_field_name+0xa8>
    52ac:	movw	lr, #0
    52b0:	add	r3, pc, #4
    52b4:	movt	lr, #0
    52b8:	ldr	pc, [r3, r1, lsl #2]
    52bc:	.word	0x000052d8
    52c0:	.word	0x00005374
    52c4:	.word	0x0000533c
    52c8:	.word	0x00005348
    52cc:	.word	0x00005354
    52d0:	.word	0x00005360
    52d4:	.word	0x0000536c
    52d8:	cmp	r2, #0
    52dc:	beq	5394 <coda_type_get_record_field_name+0x10c>
    52e0:	ldr	r3, [r0, #48]	; 0x30
    52e4:	cmp	ip, #0
    52e8:	bmi	53ac <coda_type_get_record_field_name+0x124>
    52ec:	cmp	r3, ip
    52f0:	ble	53ac <coda_type_get_record_field_name+0x124>
    52f4:	ldr	r0, [r0, #52]	; 0x34
    52f8:	ldr	r0, [r0, ip, lsl #2]
    52fc:	ldr	r0, [r0]
    5300:	str	r0, [r2]
    5304:	mov	r0, #0
    5308:	mov	sp, fp
    530c:	pop	{fp, pc}
    5310:	movw	r1, #0
    5314:	movw	r2, #0
    5318:	mvn	r0, #99	; 0x63
    531c:	movw	r3, #3420	; 0xd5c
    5320:	movt	r1, #0
    5324:	movt	r2, #0
    5328:	bl	0 <coda_set_error>
    532c:	b	5388 <coda_type_get_record_field_name+0x100>
    5330:	movw	lr, #0
    5334:	movt	lr, #0
    5338:	b	5374 <coda_type_get_record_field_name+0xec>
    533c:	movw	lr, #0
    5340:	movt	lr, #0
    5344:	b	5374 <coda_type_get_record_field_name+0xec>
    5348:	movw	lr, #0
    534c:	movt	lr, #0
    5350:	b	5374 <coda_type_get_record_field_name+0xec>
    5354:	movw	lr, #0
    5358:	movt	lr, #0
    535c:	b	5374 <coda_type_get_record_field_name+0xec>
    5360:	movw	lr, #0
    5364:	movt	lr, #0
    5368:	b	5374 <coda_type_get_record_field_name+0xec>
    536c:	movw	lr, #0
    5370:	movt	lr, #0
    5374:	movw	r1, #0
    5378:	mvn	r0, #104	; 0x68
    537c:	mov	r2, lr
    5380:	movt	r1, #0
    5384:	bl	0 <coda_set_error>
    5388:	mvn	r0, #0
    538c:	mov	sp, fp
    5390:	pop	{fp, pc}
    5394:	movw	r1, #0
    5398:	movw	r2, #0
    539c:	mvn	r0, #99	; 0x63
    53a0:	movw	r3, #3431	; 0xd67
    53a4:	movt	r1, #0
    53a8:	b	5324 <coda_type_get_record_field_name+0x9c>
    53ac:	movw	r1, #0
    53b0:	movw	r0, #3438	; 0xd6e
    53b4:	mov	r2, ip
    53b8:	movt	r1, #0
    53bc:	str	r0, [sp, #4]
    53c0:	mvn	r0, #100	; 0x64
    53c4:	str	r1, [sp]
    53c8:	movw	r1, #0
    53cc:	movt	r1, #0
    53d0:	b	5328 <coda_type_get_record_field_name+0xa0>

000053d4 <coda_type_get_record_field_real_name>:
    53d4:	push	{r4, r5, fp, lr}
    53d8:	add	fp, sp, #8
    53dc:	sub	sp, sp, #8
    53e0:	cmp	r0, #0
    53e4:	beq	5470 <coda_type_get_record_field_real_name+0x9c>
    53e8:	mov	r4, r1
    53ec:	ldr	r1, [r0, #8]
    53f0:	cmp	r1, #6
    53f4:	bhi	5490 <coda_type_get_record_field_real_name+0xbc>
    53f8:	mov	r5, r2
    53fc:	movw	r2, #0
    5400:	add	r3, pc, #4
    5404:	movt	r2, #0
    5408:	ldr	pc, [r3, r1, lsl #2]
    540c:	.word	0x00005428
    5410:	.word	0x000054d4
    5414:	.word	0x0000549c
    5418:	.word	0x000054a8
    541c:	.word	0x000054b4
    5420:	.word	0x000054c0
    5424:	.word	0x000054cc
    5428:	cmp	r5, #0
    542c:	beq	54f0 <coda_type_get_record_field_real_name+0x11c>
    5430:	ldr	r3, [r0, #48]	; 0x30
    5434:	cmp	r4, #0
    5438:	bmi	5508 <coda_type_get_record_field_real_name+0x134>
    543c:	cmp	r3, r4
    5440:	ble	5508 <coda_type_get_record_field_real_name+0x134>
    5444:	ldr	r1, [r0, #52]	; 0x34
    5448:	ldr	r2, [r1, r4, lsl #2]
    544c:	ldr	r1, [r2, #4]
    5450:	cmp	r1, #0
    5454:	beq	5530 <coda_type_get_record_field_real_name+0x15c>
    5458:	ldr	r0, [r0]
    545c:	cmp	r0, #2
    5460:	bne	553c <coda_type_get_record_field_real_name+0x168>
    5464:	mov	r0, r1
    5468:	bl	0 <coda_element_name_from_xml_name>
    546c:	b	5534 <coda_type_get_record_field_real_name+0x160>
    5470:	movw	r1, #0
    5474:	movw	r2, #0
    5478:	mvn	r0, #99	; 0x63
    547c:	movw	r3, #3468	; 0xd8c
    5480:	movt	r1, #0
    5484:	movt	r2, #0
    5488:	bl	0 <coda_set_error>
    548c:	b	54e4 <coda_type_get_record_field_real_name+0x110>
    5490:	movw	r2, #0
    5494:	movt	r2, #0
    5498:	b	54d4 <coda_type_get_record_field_real_name+0x100>
    549c:	movw	r2, #0
    54a0:	movt	r2, #0
    54a4:	b	54d4 <coda_type_get_record_field_real_name+0x100>
    54a8:	movw	r2, #0
    54ac:	movt	r2, #0
    54b0:	b	54d4 <coda_type_get_record_field_real_name+0x100>
    54b4:	movw	r2, #0
    54b8:	movt	r2, #0
    54bc:	b	54d4 <coda_type_get_record_field_real_name+0x100>
    54c0:	movw	r2, #0
    54c4:	movt	r2, #0
    54c8:	b	54d4 <coda_type_get_record_field_real_name+0x100>
    54cc:	movw	r2, #0
    54d0:	movt	r2, #0
    54d4:	movw	r1, #0
    54d8:	mvn	r0, #104	; 0x68
    54dc:	movt	r1, #0
    54e0:	bl	0 <coda_set_error>
    54e4:	mvn	r0, #0
    54e8:	sub	sp, fp, #8
    54ec:	pop	{r4, r5, fp, pc}
    54f0:	movw	r1, #0
    54f4:	movw	r2, #0
    54f8:	mvn	r0, #99	; 0x63
    54fc:	movw	r3, #3479	; 0xd97
    5500:	movt	r1, #0
    5504:	b	5484 <coda_type_get_record_field_real_name+0xb0>
    5508:	movw	r1, #0
    550c:	movw	r0, #3486	; 0xd9e
    5510:	mov	r2, r4
    5514:	movt	r1, #0
    5518:	str	r0, [sp, #4]
    551c:	mvn	r0, #100	; 0x64
    5520:	str	r1, [sp]
    5524:	movw	r1, #0
    5528:	movt	r1, #0
    552c:	b	5488 <coda_type_get_record_field_real_name+0xb4>
    5530:	ldr	r0, [r2]
    5534:	str	r0, [r5]
    5538:	b	5540 <coda_type_get_record_field_real_name+0x16c>
    553c:	str	r1, [r5]
    5540:	mov	r0, #0
    5544:	sub	sp, fp, #8
    5548:	pop	{r4, r5, fp, pc}

0000554c <coda_type_get_record_field_hidden_status>:
    554c:	push	{fp, lr}
    5550:	mov	fp, sp
    5554:	sub	sp, sp, #8
    5558:	cmp	r0, #0
    555c:	beq	55d4 <coda_type_get_record_field_hidden_status+0x88>
    5560:	mov	ip, r1
    5564:	ldr	r1, [r0, #8]
    5568:	cmp	r1, #6
    556c:	bhi	55f4 <coda_type_get_record_field_hidden_status+0xa8>
    5570:	movw	lr, #0
    5574:	add	r3, pc, #4
    5578:	movt	lr, #0
    557c:	ldr	pc, [r3, r1, lsl #2]
    5580:	.word	0x0000559c
    5584:	.word	0x00005638
    5588:	.word	0x00005600
    558c:	.word	0x0000560c
    5590:	.word	0x00005618
    5594:	.word	0x00005624
    5598:	.word	0x00005630
    559c:	cmp	r2, #0
    55a0:	beq	5658 <coda_type_get_record_field_hidden_status+0x10c>
    55a4:	ldr	r3, [r0, #48]	; 0x30
    55a8:	cmp	ip, #0
    55ac:	bmi	5670 <coda_type_get_record_field_hidden_status+0x124>
    55b0:	cmp	r3, ip
    55b4:	ble	5670 <coda_type_get_record_field_hidden_status+0x124>
    55b8:	ldr	r0, [r0, #52]	; 0x34
    55bc:	ldr	r0, [r0, ip, lsl #2]
    55c0:	ldr	r0, [r0, #12]
    55c4:	str	r0, [r2]
    55c8:	mov	r0, #0
    55cc:	mov	sp, fp
    55d0:	pop	{fp, pc}
    55d4:	movw	r1, #0
    55d8:	movw	r2, #0
    55dc:	mvn	r0, #99	; 0x63
    55e0:	movw	r3, #3524	; 0xdc4
    55e4:	movt	r1, #0
    55e8:	movt	r2, #0
    55ec:	bl	0 <coda_set_error>
    55f0:	b	564c <coda_type_get_record_field_hidden_status+0x100>
    55f4:	movw	lr, #0
    55f8:	movt	lr, #0
    55fc:	b	5638 <coda_type_get_record_field_hidden_status+0xec>
    5600:	movw	lr, #0
    5604:	movt	lr, #0
    5608:	b	5638 <coda_type_get_record_field_hidden_status+0xec>
    560c:	movw	lr, #0
    5610:	movt	lr, #0
    5614:	b	5638 <coda_type_get_record_field_hidden_status+0xec>
    5618:	movw	lr, #0
    561c:	movt	lr, #0
    5620:	b	5638 <coda_type_get_record_field_hidden_status+0xec>
    5624:	movw	lr, #0
    5628:	movt	lr, #0
    562c:	b	5638 <coda_type_get_record_field_hidden_status+0xec>
    5630:	movw	lr, #0
    5634:	movt	lr, #0
    5638:	movw	r1, #0
    563c:	mvn	r0, #104	; 0x68
    5640:	mov	r2, lr
    5644:	movt	r1, #0
    5648:	bl	0 <coda_set_error>
    564c:	mvn	r0, #0
    5650:	mov	sp, fp
    5654:	pop	{fp, pc}
    5658:	movw	r1, #0
    565c:	movw	r2, #0
    5660:	mvn	r0, #99	; 0x63
    5664:	movw	r3, #3535	; 0xdcf
    5668:	movt	r1, #0
    566c:	b	55e8 <coda_type_get_record_field_hidden_status+0x9c>
    5670:	movw	r1, #0
    5674:	movw	r0, #3542	; 0xdd6
    5678:	mov	r2, ip
    567c:	movt	r1, #0
    5680:	str	r0, [sp, #4]
    5684:	mvn	r0, #100	; 0x64
    5688:	str	r1, [sp]
    568c:	movw	r1, #0
    5690:	movt	r1, #0
    5694:	b	55ec <coda_type_get_record_field_hidden_status+0xa0>

00005698 <coda_type_get_record_field_available_status>:
    5698:	push	{fp, lr}
    569c:	mov	fp, sp
    56a0:	sub	sp, sp, #8
    56a4:	cmp	r0, #0
    56a8:	beq	572c <coda_type_get_record_field_available_status+0x94>
    56ac:	mov	ip, r1
    56b0:	ldr	r1, [r0, #8]
    56b4:	cmp	r1, #6
    56b8:	bhi	574c <coda_type_get_record_field_available_status+0xb4>
    56bc:	movw	lr, #0
    56c0:	add	r3, pc, #4
    56c4:	movt	lr, #0
    56c8:	ldr	pc, [r3, r1, lsl #2]
    56cc:	.word	0x000056e8
    56d0:	.word	0x00005790
    56d4:	.word	0x00005758
    56d8:	.word	0x00005764
    56dc:	.word	0x00005770
    56e0:	.word	0x0000577c
    56e4:	.word	0x00005788
    56e8:	cmp	r2, #0
    56ec:	beq	57b0 <coda_type_get_record_field_available_status+0x118>
    56f0:	ldr	r3, [r0, #48]	; 0x30
    56f4:	cmp	ip, #0
    56f8:	bmi	57c8 <coda_type_get_record_field_available_status+0x130>
    56fc:	cmp	r3, ip
    5700:	ble	57c8 <coda_type_get_record_field_available_status+0x130>
    5704:	ldr	r0, [r0, #52]	; 0x34
    5708:	mvn	r1, #0
    570c:	ldr	r0, [r0, ip, lsl #2]
    5710:	ldrb	r0, [r0, #16]
    5714:	cmp	r0, #0
    5718:	mov	r0, #0
    571c:	movweq	r1, #1
    5720:	str	r1, [r2]
    5724:	mov	sp, fp
    5728:	pop	{fp, pc}
    572c:	movw	r1, #0
    5730:	movw	r2, #0
    5734:	mvn	r0, #99	; 0x63
    5738:	mov	r3, #3568	; 0xdf0
    573c:	movt	r1, #0
    5740:	movt	r2, #0
    5744:	bl	0 <coda_set_error>
    5748:	b	57a4 <coda_type_get_record_field_available_status+0x10c>
    574c:	movw	lr, #0
    5750:	movt	lr, #0
    5754:	b	5790 <coda_type_get_record_field_available_status+0xf8>
    5758:	movw	lr, #0
    575c:	movt	lr, #0
    5760:	b	5790 <coda_type_get_record_field_available_status+0xf8>
    5764:	movw	lr, #0
    5768:	movt	lr, #0
    576c:	b	5790 <coda_type_get_record_field_available_status+0xf8>
    5770:	movw	lr, #0
    5774:	movt	lr, #0
    5778:	b	5790 <coda_type_get_record_field_available_status+0xf8>
    577c:	movw	lr, #0
    5780:	movt	lr, #0
    5784:	b	5790 <coda_type_get_record_field_available_status+0xf8>
    5788:	movw	lr, #0
    578c:	movt	lr, #0
    5790:	movw	r1, #0
    5794:	mvn	r0, #104	; 0x68
    5798:	mov	r2, lr
    579c:	movt	r1, #0
    57a0:	bl	0 <coda_set_error>
    57a4:	mvn	r0, #0
    57a8:	mov	sp, fp
    57ac:	pop	{fp, pc}
    57b0:	movw	r1, #0
    57b4:	movw	r2, #0
    57b8:	mvn	r0, #99	; 0x63
    57bc:	movw	r3, #3579	; 0xdfb
    57c0:	movt	r1, #0
    57c4:	b	5740 <coda_type_get_record_field_available_status+0xa8>
    57c8:	movw	r1, #0
    57cc:	movw	r0, #3586	; 0xe02
    57d0:	mov	r2, ip
    57d4:	movt	r1, #0
    57d8:	str	r0, [sp, #4]
    57dc:	mvn	r0, #100	; 0x64
    57e0:	str	r1, [sp]
    57e4:	movw	r1, #0
    57e8:	movt	r1, #0
    57ec:	b	5744 <coda_type_get_record_field_available_status+0xac>

000057f0 <coda_type_get_record_union_status>:
    57f0:	push	{fp, lr}
    57f4:	mov	fp, sp
    57f8:	cmp	r0, #0
    57fc:	beq	5850 <coda_type_get_record_union_status+0x60>
    5800:	ldr	ip, [r0, #8]
    5804:	cmp	ip, #6
    5808:	bhi	5874 <coda_type_get_record_union_status+0x84>
    580c:	movw	r2, #0
    5810:	add	r3, pc, #4
    5814:	movt	r2, #0
    5818:	ldr	pc, [r3, ip, lsl #2]
    581c:	.word	0x00005838
    5820:	.word	0x000058b8
    5824:	.word	0x00005880
    5828:	.word	0x0000588c
    582c:	.word	0x00005898
    5830:	.word	0x000058a4
    5834:	.word	0x000058b0
    5838:	cmp	r1, #0
    583c:	beq	58d0 <coda_type_get_record_union_status+0xe0>
    5840:	ldr	r0, [r0, #64]	; 0x40
    5844:	str	r0, [r1]
    5848:	mov	r0, #0
    584c:	pop	{fp, pc}
    5850:	movw	r1, #0
    5854:	movw	r2, #0
    5858:	mvn	r0, #99	; 0x63
    585c:	movw	r3, #3607	; 0xe17
    5860:	movt	r1, #0
    5864:	movt	r2, #0
    5868:	bl	0 <coda_set_error>
    586c:	mvn	r0, #0
    5870:	pop	{fp, pc}
    5874:	movw	r2, #0
    5878:	movt	r2, #0
    587c:	b	58b8 <coda_type_get_record_union_status+0xc8>
    5880:	movw	r2, #0
    5884:	movt	r2, #0
    5888:	b	58b8 <coda_type_get_record_union_status+0xc8>
    588c:	movw	r2, #0
    5890:	movt	r2, #0
    5894:	b	58b8 <coda_type_get_record_union_status+0xc8>
    5898:	movw	r2, #0
    589c:	movt	r2, #0
    58a0:	b	58b8 <coda_type_get_record_union_status+0xc8>
    58a4:	movw	r2, #0
    58a8:	movt	r2, #0
    58ac:	b	58b8 <coda_type_get_record_union_status+0xc8>
    58b0:	movw	r2, #0
    58b4:	movt	r2, #0
    58b8:	movw	r1, #0
    58bc:	mvn	r0, #104	; 0x68
    58c0:	movt	r1, #0
    58c4:	bl	0 <coda_set_error>
    58c8:	mvn	r0, #0
    58cc:	pop	{fp, pc}
    58d0:	movw	r1, #0
    58d4:	movw	r2, #0
    58d8:	mvn	r0, #99	; 0x63
    58dc:	movw	r3, #3618	; 0xe22
    58e0:	movt	r1, #0
    58e4:	b	5864 <coda_type_get_record_union_status+0x74>

000058e8 <coda_type_get_array_num_dims>:
    58e8:	push	{fp, lr}
    58ec:	mov	fp, sp
    58f0:	cmp	r0, #0
    58f4:	beq	5948 <coda_type_get_array_num_dims+0x60>
    58f8:	ldr	ip, [r0, #8]
    58fc:	cmp	ip, #6
    5900:	bhi	596c <coda_type_get_array_num_dims+0x84>
    5904:	movw	r2, #0
    5908:	add	r3, pc, #4
    590c:	movt	r2, #0
    5910:	ldr	pc, [r3, ip, lsl #2]
    5914:	.word	0x000059b0
    5918:	.word	0x00005930
    591c:	.word	0x00005978
    5920:	.word	0x00005984
    5924:	.word	0x00005990
    5928:	.word	0x0000599c
    592c:	.word	0x000059a8
    5930:	cmp	r1, #0
    5934:	beq	59c8 <coda_type_get_array_num_dims+0xe0>
    5938:	ldr	r0, [r0, #48]	; 0x30
    593c:	str	r0, [r1]
    5940:	mov	r0, #0
    5944:	pop	{fp, pc}
    5948:	movw	r1, #0
    594c:	movw	r2, #0
    5950:	mvn	r0, #99	; 0x63
    5954:	movw	r3, #3638	; 0xe36
    5958:	movt	r1, #0
    595c:	movt	r2, #0
    5960:	bl	0 <coda_set_error>
    5964:	mvn	r0, #0
    5968:	pop	{fp, pc}
    596c:	movw	r2, #0
    5970:	movt	r2, #0
    5974:	b	59b0 <coda_type_get_array_num_dims+0xc8>
    5978:	movw	r2, #0
    597c:	movt	r2, #0
    5980:	b	59b0 <coda_type_get_array_num_dims+0xc8>
    5984:	movw	r2, #0
    5988:	movt	r2, #0
    598c:	b	59b0 <coda_type_get_array_num_dims+0xc8>
    5990:	movw	r2, #0
    5994:	movt	r2, #0
    5998:	b	59b0 <coda_type_get_array_num_dims+0xc8>
    599c:	movw	r2, #0
    59a0:	movt	r2, #0
    59a4:	b	59b0 <coda_type_get_array_num_dims+0xc8>
    59a8:	movw	r2, #0
    59ac:	movt	r2, #0
    59b0:	movw	r1, #0
    59b4:	mvn	r0, #104	; 0x68
    59b8:	movt	r1, #0
    59bc:	bl	0 <coda_set_error>
    59c0:	mvn	r0, #0
    59c4:	pop	{fp, pc}
    59c8:	movw	r1, #0
    59cc:	movw	r2, #0
    59d0:	mvn	r0, #99	; 0x63
    59d4:	movw	r3, #3649	; 0xe41
    59d8:	movt	r1, #0
    59dc:	b	595c <coda_type_get_array_num_dims+0x74>

000059e0 <coda_type_get_array_dim>:
    59e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    59e4:	add	fp, sp, #28
    59e8:	sub	sp, sp, #4
    59ec:	cmp	r0, #0
    59f0:	beq	5b50 <coda_type_get_array_dim+0x170>
    59f4:	ldr	r6, [r0, #8]
    59f8:	cmp	r6, #6
    59fc:	bhi	5b70 <coda_type_get_array_dim+0x190>
    5a00:	movw	r3, #0
    5a04:	add	r5, pc, #4
    5a08:	movt	r3, #0
    5a0c:	ldr	pc, [r5, r6, lsl #2]
    5a10:	.word	0x00005bb4
    5a14:	.word	0x00005a2c
    5a18:	.word	0x00005b7c
    5a1c:	.word	0x00005b88
    5a20:	.word	0x00005b94
    5a24:	.word	0x00005ba0
    5a28:	.word	0x00005bac
    5a2c:	cmp	r1, #0
    5a30:	beq	5bd8 <coda_type_get_array_dim+0x1f8>
    5a34:	cmp	r2, #0
    5a38:	beq	5bf0 <coda_type_get_array_dim+0x210>
    5a3c:	ldr	r3, [r0, #48]	; 0x30
    5a40:	str	r3, [r1]
    5a44:	ldr	ip, [r0, #48]	; 0x30
    5a48:	cmp	ip, #1
    5a4c:	blt	5c08 <coda_type_get_array_dim+0x228>
    5a50:	mov	r3, #0
    5a54:	cmp	ip, #4
    5a58:	bcc	5b30 <coda_type_get_array_dim+0x150>
    5a5c:	add	r1, r0, #52	; 0x34
    5a60:	add	r6, r1, ip, lsl #2
    5a64:	cmp	r6, r2
    5a68:	bls	5a78 <coda_type_get_array_dim+0x98>
    5a6c:	add	r6, r2, ip, lsl #2
    5a70:	cmp	r1, r6
    5a74:	bcc	5b30 <coda_type_get_array_dim+0x150>
    5a78:	bic	r3, ip, #3
    5a7c:	mov	r1, #1
    5a80:	mov	r9, #0
    5a84:	sub	r5, r3, #4
    5a88:	add	r4, r1, r5, lsr #2
    5a8c:	cmp	r5, #12
    5a90:	and	lr, r4, #3
    5a94:	bcc	5afc <coda_type_get_array_dim+0x11c>
    5a98:	sub	sl, r4, lr
    5a9c:	mov	r5, #0
    5aa0:	mov	r8, #48	; 0x30
    5aa4:	mov	r9, #0
    5aa8:	add	r7, r0, r5
    5aac:	subs	sl, sl, #4
    5ab0:	add	r9, r9, #16
    5ab4:	add	r6, r7, #52	; 0x34
    5ab8:	add	r4, r7, #68	; 0x44
    5abc:	vld1.32	{d16-d17}, [r6]
    5ac0:	add	r6, r2, r5
    5ac4:	add	r5, r5, #64	; 0x40
    5ac8:	mov	r1, r6
    5acc:	vst1.32	{d16-d17}, [r1], r8
    5ad0:	vld1.32	{d16-d17}, [r4]
    5ad4:	add	r4, r6, #16
    5ad8:	vst1.32	{d16-d17}, [r4]
    5adc:	add	r4, r7, #84	; 0x54
    5ae0:	vld1.32	{d16-d17}, [r4]
    5ae4:	add	r4, r6, #32
    5ae8:	vst1.32	{d16-d17}, [r4]
    5aec:	add	r4, r7, #100	; 0x64
    5af0:	vld1.32	{d16-d17}, [r4]
    5af4:	vst1.32	{d16-d17}, [r1]
    5af8:	bne	5aa8 <coda_type_get_array_dim+0xc8>
    5afc:	cmp	lr, #0
    5b00:	beq	5b24 <coda_type_get_array_dim+0x144>
    5b04:	add	r1, r0, r9, lsl #2
    5b08:	add	r4, r2, r9, lsl #2
    5b0c:	rsb	r6, lr, #0
    5b10:	add	r1, r1, #52	; 0x34
    5b14:	vld1.32	{d16-d17}, [r1]!
    5b18:	adds	r6, r6, #1
    5b1c:	vst1.32	{d16-d17}, [r4]!
    5b20:	bcc	5b14 <coda_type_get_array_dim+0x134>
    5b24:	mov	r1, #0
    5b28:	cmp	ip, r3
    5b2c:	beq	5bcc <coda_type_get_array_dim+0x1ec>
    5b30:	add	r0, r0, #52	; 0x34
    5b34:	ldr	r1, [r0, r3, lsl #2]
    5b38:	str	r1, [r2, r3, lsl #2]
    5b3c:	add	r3, r3, #1
    5b40:	mov	r1, #0
    5b44:	cmp	r3, ip
    5b48:	blt	5b34 <coda_type_get_array_dim+0x154>
    5b4c:	b	5bcc <coda_type_get_array_dim+0x1ec>
    5b50:	movw	r1, #0
    5b54:	movw	r2, #0
    5b58:	mvn	r0, #99	; 0x63
    5b5c:	mov	r3, #3680	; 0xe60
    5b60:	movt	r1, #0
    5b64:	movt	r2, #0
    5b68:	bl	0 <coda_set_error>
    5b6c:	b	5bc8 <coda_type_get_array_dim+0x1e8>
    5b70:	movw	r3, #0
    5b74:	movt	r3, #0
    5b78:	b	5bb4 <coda_type_get_array_dim+0x1d4>
    5b7c:	movw	r3, #0
    5b80:	movt	r3, #0
    5b84:	b	5bb4 <coda_type_get_array_dim+0x1d4>
    5b88:	movw	r3, #0
    5b8c:	movt	r3, #0
    5b90:	b	5bb4 <coda_type_get_array_dim+0x1d4>
    5b94:	movw	r3, #0
    5b98:	movt	r3, #0
    5b9c:	b	5bb4 <coda_type_get_array_dim+0x1d4>
    5ba0:	movw	r3, #0
    5ba4:	movt	r3, #0
    5ba8:	b	5bb4 <coda_type_get_array_dim+0x1d4>
    5bac:	movw	r3, #0
    5bb0:	movt	r3, #0
    5bb4:	movw	r1, #0
    5bb8:	mvn	r0, #104	; 0x68
    5bbc:	mov	r2, r3
    5bc0:	movt	r1, #0
    5bc4:	bl	0 <coda_set_error>
    5bc8:	mvn	r1, #0
    5bcc:	mov	r0, r1
    5bd0:	sub	sp, fp, #28
    5bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5bd8:	movw	r1, #0
    5bdc:	movw	r2, #0
    5be0:	mvn	r0, #99	; 0x63
    5be4:	movw	r3, #3691	; 0xe6b
    5be8:	movt	r1, #0
    5bec:	b	5b64 <coda_type_get_array_dim+0x184>
    5bf0:	movw	r1, #0
    5bf4:	movw	r2, #0
    5bf8:	mvn	r0, #99	; 0x63
    5bfc:	mov	r3, #3696	; 0xe70
    5c00:	movt	r1, #0
    5c04:	b	5b64 <coda_type_get_array_dim+0x184>
    5c08:	mov	r1, #0
    5c0c:	b	5bcc <coda_type_get_array_dim+0x1ec>

00005c10 <coda_type_get_special_type>:
    5c10:	push	{fp, lr}
    5c14:	mov	fp, sp
    5c18:	cmp	r0, #0
    5c1c:	beq	5c64 <coda_type_get_special_type+0x54>
    5c20:	ldr	ip, [r0, #8]
    5c24:	cmp	ip, #6
    5c28:	bhi	5c88 <coda_type_get_special_type+0x78>
    5c2c:	movw	r2, #0
    5c30:	add	r3, pc, #4
    5c34:	movt	r2, #0
    5c38:	ldr	pc, [r3, ip, lsl #2]
    5c3c:	.word	0x00005cc0
    5c40:	.word	0x00005c58
    5c44:	.word	0x00005c94
    5c48:	.word	0x00005ca0
    5c4c:	.word	0x00005cac
    5c50:	.word	0x00005cb8
    5c54:	.word	0x00005cd8
    5c58:	movw	r2, #0
    5c5c:	movt	r2, #0
    5c60:	b	5cc0 <coda_type_get_special_type+0xb0>
    5c64:	movw	r1, #0
    5c68:	movw	r2, #0
    5c6c:	mvn	r0, #99	; 0x63
    5c70:	movw	r3, #3752	; 0xea8
    5c74:	movt	r1, #0
    5c78:	movt	r2, #0
    5c7c:	bl	0 <coda_set_error>
    5c80:	mvn	r0, #0
    5c84:	pop	{fp, pc}
    5c88:	movw	r2, #0
    5c8c:	movt	r2, #0
    5c90:	b	5cc0 <coda_type_get_special_type+0xb0>
    5c94:	movw	r2, #0
    5c98:	movt	r2, #0
    5c9c:	b	5cc0 <coda_type_get_special_type+0xb0>
    5ca0:	movw	r2, #0
    5ca4:	movt	r2, #0
    5ca8:	b	5cc0 <coda_type_get_special_type+0xb0>
    5cac:	movw	r2, #0
    5cb0:	movt	r2, #0
    5cb4:	b	5cc0 <coda_type_get_special_type+0xb0>
    5cb8:	movw	r2, #0
    5cbc:	movt	r2, #0
    5cc0:	movw	r1, #0
    5cc4:	mvn	r0, #104	; 0x68
    5cc8:	movt	r1, #0
    5ccc:	bl	0 <coda_set_error>
    5cd0:	mvn	r0, #0
    5cd4:	pop	{fp, pc}
    5cd8:	cmp	r1, #0
    5cdc:	beq	5cf0 <coda_type_get_special_type+0xe0>
    5ce0:	ldr	r0, [r0, #40]	; 0x28
    5ce4:	str	r0, [r1]
    5ce8:	mov	r0, #0
    5cec:	pop	{fp, pc}
    5cf0:	movw	r1, #0
    5cf4:	movw	r2, #0
    5cf8:	mvn	r0, #99	; 0x63
    5cfc:	movw	r3, #3763	; 0xeb3
    5d00:	movt	r1, #0
    5d04:	b	5c78 <coda_type_get_special_type+0x68>

00005d08 <coda_type_get_special_base_type>:
    5d08:	push	{fp, lr}
    5d0c:	mov	fp, sp
    5d10:	cmp	r0, #0
    5d14:	beq	5d5c <coda_type_get_special_base_type+0x54>
    5d18:	ldr	ip, [r0, #8]
    5d1c:	cmp	ip, #6
    5d20:	bhi	5d80 <coda_type_get_special_base_type+0x78>
    5d24:	movw	r2, #0
    5d28:	add	r3, pc, #4
    5d2c:	movt	r2, #0
    5d30:	ldr	pc, [r3, ip, lsl #2]
    5d34:	.word	0x00005db8
    5d38:	.word	0x00005d50
    5d3c:	.word	0x00005d8c
    5d40:	.word	0x00005d98
    5d44:	.word	0x00005da4
    5d48:	.word	0x00005db0
    5d4c:	.word	0x00005dd0
    5d50:	movw	r2, #0
    5d54:	movt	r2, #0
    5d58:	b	5db8 <coda_type_get_special_base_type+0xb0>
    5d5c:	movw	r1, #0
    5d60:	movw	r2, #0
    5d64:	mvn	r0, #99	; 0x63
    5d68:	movw	r3, #3783	; 0xec7
    5d6c:	movt	r1, #0
    5d70:	movt	r2, #0
    5d74:	bl	0 <coda_set_error>
    5d78:	mvn	r0, #0
    5d7c:	pop	{fp, pc}
    5d80:	movw	r2, #0
    5d84:	movt	r2, #0
    5d88:	b	5db8 <coda_type_get_special_base_type+0xb0>
    5d8c:	movw	r2, #0
    5d90:	movt	r2, #0
    5d94:	b	5db8 <coda_type_get_special_base_type+0xb0>
    5d98:	movw	r2, #0
    5d9c:	movt	r2, #0
    5da0:	b	5db8 <coda_type_get_special_base_type+0xb0>
    5da4:	movw	r2, #0
    5da8:	movt	r2, #0
    5dac:	b	5db8 <coda_type_get_special_base_type+0xb0>
    5db0:	movw	r2, #0
    5db4:	movt	r2, #0
    5db8:	movw	r1, #0
    5dbc:	mvn	r0, #104	; 0x68
    5dc0:	movt	r1, #0
    5dc4:	bl	0 <coda_set_error>
    5dc8:	mvn	r0, #0
    5dcc:	pop	{fp, pc}
    5dd0:	cmp	r1, #0
    5dd4:	beq	5de8 <coda_type_get_special_base_type+0xe0>
    5dd8:	ldr	r0, [r0, #44]	; 0x2c
    5ddc:	str	r0, [r1]
    5de0:	mov	r0, #0
    5de4:	pop	{fp, pc}
    5de8:	movw	r1, #0
    5dec:	movw	r2, #0
    5df0:	mvn	r0, #99	; 0x63
    5df4:	movw	r3, #3794	; 0xed2
    5df8:	movt	r1, #0
    5dfc:	b	5d70 <coda_type_get_special_base_type+0x68>
