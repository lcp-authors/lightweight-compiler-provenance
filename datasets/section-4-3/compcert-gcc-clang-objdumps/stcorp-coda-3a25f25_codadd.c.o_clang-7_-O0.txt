
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #152	; 0x98
       c:	movw	r2, #0
      10:	str	r2, [fp, #-4]
      14:	str	r0, [fp, #-8]
      18:	str	r1, [fp, #-12]
      1c:	movw	r0, #1
      20:	str	r0, [fp, #-16]
      24:	movw	r1, #0
      28:	movt	r1, #0
      2c:	movw	r3, #0
      30:	movt	r3, #0
      34:	str	r3, [r1]
      38:	movw	r1, #0
      3c:	movt	r1, #0
      40:	str	r2, [r1]
      44:	movw	r1, #0
      48:	movt	r1, #0
      4c:	str	r2, [r1]
      50:	movw	r1, #0
      54:	movt	r1, #0
      58:	str	r2, [r1]
      5c:	movw	r1, #0
      60:	movt	r1, #0
      64:	str	r2, [r1]
      68:	movw	r1, #0
      6c:	movt	r1, #0
      70:	str	r2, [r1]
      74:	movw	r1, #0
      78:	movt	r1, #0
      7c:	str	r2, [r1]
      80:	movw	r1, #0
      84:	movt	r1, #0
      88:	str	r2, [r1]
      8c:	movw	r1, #0
      90:	movt	r1, #0
      94:	str	r2, [r1]
      98:	movw	r1, #0
      9c:	movt	r1, #0
      a0:	str	r2, [r1]
      a4:	movw	r1, #0
      a8:	movt	r1, #0
      ac:	str	r0, [r1]
      b0:	ldr	r0, [fp, #-8]
      b4:	cmp	r0, #1
      b8:	ble	168 <main+0x168>
      bc:	ldr	r0, [fp, #-12]
      c0:	ldr	r1, [fp, #-16]
      c4:	add	r0, r0, r1, lsl #2
      c8:	ldr	r0, [r0]
      cc:	movw	r1, #0
      d0:	movt	r1, #0
      d4:	bl	0 <strcmp>
      d8:	cmp	r0, #0
      dc:	beq	104 <main+0x104>
      e0:	ldr	r0, [fp, #-12]
      e4:	ldr	r1, [fp, #-16]
      e8:	add	r0, r0, r1, lsl #2
      ec:	ldr	r0, [r0]
      f0:	movw	r1, #0
      f4:	movt	r1, #0
      f8:	bl	0 <strcmp>
      fc:	cmp	r0, #0
     100:	bne	110 <main+0x110>
     104:	bl	d80 <print_help>
     108:	movw	r0, #0
     10c:	bl	0 <exit>
     110:	ldr	r0, [fp, #-12]
     114:	ldr	r1, [fp, #-16]
     118:	add	r0, r0, r1, lsl #2
     11c:	ldr	r0, [r0]
     120:	movw	r1, #0
     124:	movt	r1, #0
     128:	bl	0 <strcmp>
     12c:	cmp	r0, #0
     130:	beq	158 <main+0x158>
     134:	ldr	r0, [fp, #-12]
     138:	ldr	r1, [fp, #-16]
     13c:	add	r0, r0, r1, lsl #2
     140:	ldr	r0, [r0]
     144:	movw	r1, #0
     148:	movt	r1, #0
     14c:	bl	0 <strcmp>
     150:	cmp	r0, #0
     154:	bne	164 <main+0x164>
     158:	bl	1344 <print_version>
     15c:	movw	r0, #0
     160:	bl	0 <exit>
     164:	b	168 <main+0x168>
     168:	ldr	r0, [fp, #-16]
     16c:	add	r0, r0, #1
     170:	ldr	r1, [fp, #-8]
     174:	cmp	r0, r1
     178:	bge	1cc <main+0x1cc>
     17c:	ldr	r0, [fp, #-12]
     180:	ldr	r1, [fp, #-16]
     184:	add	r0, r0, r1, lsl #2
     188:	ldr	r0, [r0]
     18c:	movw	r1, #0
     190:	movt	r1, #0
     194:	bl	0 <strcmp>
     198:	cmp	r0, #0
     19c:	bne	1cc <main+0x1cc>
     1a0:	ldr	r0, [fp, #-12]
     1a4:	ldr	r1, [fp, #-16]
     1a8:	add	r1, r1, #1
     1ac:	add	r0, r0, r1, lsl #2
     1b0:	ldr	r0, [r0]
     1b4:	bl	0 <coda_set_definition_path>
     1b8:	ldr	r1, [fp, #-16]
     1bc:	add	r1, r1, #2
     1c0:	str	r1, [fp, #-16]
     1c4:	str	r0, [fp, #-60]	; 0xffffffc4
     1c8:	b	250 <main+0x250>
     1cc:	movw	r0, #0
     1d0:	movt	r0, #0
     1d4:	str	r0, [fp, #-20]	; 0xffffffec
     1d8:	ldr	r0, [fp, #-12]
     1dc:	ldr	r0, [r0]
     1e0:	ldr	r2, [fp, #-20]	; 0xffffffec
     1e4:	movw	r1, #0
     1e8:	bl	0 <coda_set_definition_path_conditional>
     1ec:	cmp	r0, #0
     1f0:	beq	24c <main+0x24c>
     1f4:	movw	r0, #0
     1f8:	movt	r0, #0
     1fc:	ldr	r0, [r0]
     200:	ldr	r1, [pc, #2924]	; d74 <main+0xd74>
     204:	ldr	r1, [pc, r1]
     208:	str	r0, [fp, #-64]	; 0xffffffc0
     20c:	str	r1, [fp, #-68]	; 0xffffffbc
     210:	bl	0 <__aeabi_read_tp>
     214:	ldr	r1, [fp, #-68]	; 0xffffffbc
     218:	ldr	r0, [r0, r1]
     21c:	bl	0 <coda_errno_to_string>
     220:	ldr	r1, [fp, #-64]	; 0xffffffc0
     224:	str	r0, [fp, #-72]	; 0xffffffb8
     228:	mov	r0, r1
     22c:	movw	r1, #0
     230:	movt	r1, #0
     234:	ldr	r2, [fp, #-72]	; 0xffffffb8
     238:	bl	0 <fprintf>
     23c:	movw	r1, #1
     240:	str	r0, [sp, #76]	; 0x4c
     244:	mov	r0, r1
     248:	bl	0 <exit>
     24c:	b	250 <main+0x250>
     250:	ldr	r0, [pc, #2848]	; d78 <main+0xd78>
     254:	ldr	r0, [pc, r0]
     258:	str	r0, [sp, #72]	; 0x48
     25c:	bl	0 <__aeabi_read_tp>
     260:	mov	ip, #1
     264:	ldr	lr, [sp, #72]	; 0x48
     268:	str	ip, [r0, lr]
     26c:	bl	0 <coda_init>
     270:	cmp	r0, #0
     274:	beq	2d0 <main+0x2d0>
     278:	movw	r0, #0
     27c:	movt	r0, #0
     280:	ldr	r0, [r0]
     284:	ldr	r1, [pc, #2800]	; d7c <main+0xd7c>
     288:	ldr	r1, [pc, r1]
     28c:	str	r0, [sp, #68]	; 0x44
     290:	str	r1, [sp, #64]	; 0x40
     294:	bl	0 <__aeabi_read_tp>
     298:	ldr	r1, [sp, #64]	; 0x40
     29c:	ldr	r0, [r0, r1]
     2a0:	bl	0 <coda_errno_to_string>
     2a4:	ldr	r1, [sp, #68]	; 0x44
     2a8:	str	r0, [sp, #60]	; 0x3c
     2ac:	mov	r0, r1
     2b0:	movw	r1, #0
     2b4:	movt	r1, #0
     2b8:	ldr	r2, [sp, #60]	; 0x3c
     2bc:	bl	0 <fprintf>
     2c0:	movw	r1, #1
     2c4:	str	r0, [sp, #56]	; 0x38
     2c8:	mov	r0, r1
     2cc:	bl	0 <exit>
     2d0:	ldr	r0, [fp, #-16]
     2d4:	ldr	r1, [fp, #-8]
     2d8:	cmp	r0, r1
     2dc:	bne	2ec <main+0x2ec>
     2e0:	bl	0 <coda_done>
     2e4:	movw	r0, #0
     2e8:	bl	0 <exit>
     2ec:	mov	r0, #0
     2f0:	bl	0 <coda_set_option_perform_conversions>
     2f4:	ldr	lr, [fp, #-12]
     2f8:	ldr	r1, [fp, #-16]
     2fc:	add	r1, lr, r1, lsl #2
     300:	ldr	r1, [r1]
     304:	movw	lr, #0
     308:	movt	lr, #0
     30c:	str	r0, [sp, #52]	; 0x34
     310:	mov	r0, r1
     314:	mov	r1, lr
     318:	bl	0 <strcmp>
     31c:	cmp	r0, #0
     320:	bne	384 <main+0x384>
     324:	ldr	r0, [fp, #-16]
     328:	add	r0, r0, #1
     32c:	str	r0, [fp, #-16]
     330:	ldr	r0, [fp, #-16]
     334:	ldr	r1, [fp, #-8]
     338:	sub	r1, r1, #1
     33c:	cmp	r0, r1
     340:	beq	36c <main+0x36c>
     344:	movw	r0, #0
     348:	movt	r0, #0
     34c:	ldr	r0, [r0]
     350:	movw	r1, #0
     354:	movt	r1, #0
     358:	bl	0 <fprintf>
     35c:	str	r0, [sp, #48]	; 0x30
     360:	bl	d80 <print_help>
     364:	movw	r0, #1
     368:	bl	0 <exit>
     36c:	ldr	r0, [fp, #-12]
     370:	ldr	r1, [fp, #-16]
     374:	add	r0, r0, r1, lsl #2
     378:	ldr	r0, [r0]
     37c:	bl	0 <generate_html>
     380:	b	d64 <main+0xd64>
     384:	ldr	r0, [fp, #-12]
     388:	ldr	r1, [fp, #-16]
     38c:	add	r0, r0, r1, lsl #2
     390:	ldr	r0, [r0]
     394:	movw	r1, #0
     398:	movt	r1, #0
     39c:	bl	0 <strcmp>
     3a0:	cmp	r0, #0
     3a4:	bne	8a8 <main+0x8a8>
     3a8:	movw	r0, #0
     3ac:	str	r0, [fp, #-24]	; 0xffffffe8
     3b0:	str	r0, [fp, #-28]	; 0xffffffe4
     3b4:	mvn	r0, #0
     3b8:	str	r0, [fp, #-32]	; 0xffffffe0
     3bc:	ldr	r0, [fp, #-16]
     3c0:	add	r0, r0, #1
     3c4:	str	r0, [fp, #-16]
     3c8:	ldr	r0, [fp, #-16]
     3cc:	ldr	r1, [fp, #-8]
     3d0:	cmp	r0, r1
     3d4:	bge	784 <main+0x784>
     3d8:	ldr	r0, [fp, #-12]
     3dc:	ldr	r1, [fp, #-16]
     3e0:	add	r0, r0, r1, lsl #2
     3e4:	ldr	r0, [r0]
     3e8:	movw	r1, #0
     3ec:	movt	r1, #0
     3f0:	bl	0 <strcmp>
     3f4:	cmp	r0, #0
     3f8:	beq	420 <main+0x420>
     3fc:	ldr	r0, [fp, #-12]
     400:	ldr	r1, [fp, #-16]
     404:	add	r0, r0, r1, lsl #2
     408:	ldr	r0, [r0]
     40c:	movw	r1, #0
     410:	movt	r1, #0
     414:	bl	0 <strcmp>
     418:	cmp	r0, #0
     41c:	bne	434 <main+0x434>
     420:	movw	r0, #0
     424:	movt	r0, #0
     428:	movw	r1, #1
     42c:	str	r1, [r0]
     430:	b	774 <main+0x774>
     434:	ldr	r0, [fp, #-12]
     438:	ldr	r1, [fp, #-16]
     43c:	add	r0, r0, r1, lsl #2
     440:	ldr	r0, [r0]
     444:	movw	r1, #0
     448:	movt	r1, #0
     44c:	bl	0 <strcmp>
     450:	cmp	r0, #0
     454:	beq	47c <main+0x47c>
     458:	ldr	r0, [fp, #-12]
     45c:	ldr	r1, [fp, #-16]
     460:	add	r0, r0, r1, lsl #2
     464:	ldr	r0, [r0]
     468:	movw	r1, #0
     46c:	movt	r1, #0
     470:	bl	0 <strcmp>
     474:	cmp	r0, #0
     478:	bne	490 <main+0x490>
     47c:	movw	r0, #0
     480:	movt	r0, #0
     484:	movw	r1, #1
     488:	str	r1, [r0]
     48c:	b	770 <main+0x770>
     490:	ldr	r0, [fp, #-12]
     494:	ldr	r1, [fp, #-16]
     498:	add	r0, r0, r1, lsl #2
     49c:	ldr	r0, [r0]
     4a0:	movw	r1, #0
     4a4:	movt	r1, #0
     4a8:	bl	0 <strcmp>
     4ac:	cmp	r0, #0
     4b0:	beq	4d8 <main+0x4d8>
     4b4:	ldr	r0, [fp, #-12]
     4b8:	ldr	r1, [fp, #-16]
     4bc:	add	r0, r0, r1, lsl #2
     4c0:	ldr	r0, [r0]
     4c4:	movw	r1, #0
     4c8:	movt	r1, #0
     4cc:	bl	0 <strcmp>
     4d0:	cmp	r0, #0
     4d4:	bne	4ec <main+0x4ec>
     4d8:	movw	r0, #0
     4dc:	movt	r0, #0
     4e0:	movw	r1, #1
     4e4:	str	r1, [r0]
     4e8:	b	76c <main+0x76c>
     4ec:	ldr	r0, [fp, #-12]
     4f0:	ldr	r1, [fp, #-16]
     4f4:	add	r0, r0, r1, lsl #2
     4f8:	ldr	r0, [r0]
     4fc:	movw	r1, #0
     500:	movt	r1, #0
     504:	bl	0 <strcmp>
     508:	cmp	r0, #0
     50c:	beq	534 <main+0x534>
     510:	ldr	r0, [fp, #-12]
     514:	ldr	r1, [fp, #-16]
     518:	add	r0, r0, r1, lsl #2
     51c:	ldr	r0, [r0]
     520:	movw	r1, #0
     524:	movt	r1, #0
     528:	bl	0 <strcmp>
     52c:	cmp	r0, #0
     530:	bne	548 <main+0x548>
     534:	movw	r0, #0
     538:	movt	r0, #0
     53c:	movw	r1, #1
     540:	str	r1, [r0]
     544:	b	768 <main+0x768>
     548:	ldr	r0, [fp, #-12]
     54c:	ldr	r1, [fp, #-16]
     550:	add	r0, r0, r1, lsl #2
     554:	ldr	r0, [r0]
     558:	movw	r1, #0
     55c:	movt	r1, #0
     560:	bl	0 <strcmp>
     564:	cmp	r0, #0
     568:	bne	580 <main+0x580>
     56c:	movw	r0, #0
     570:	movt	r0, #0
     574:	movw	r1, #1
     578:	str	r1, [r0]
     57c:	b	764 <main+0x764>
     580:	ldr	r0, [fp, #-12]
     584:	ldr	r1, [fp, #-16]
     588:	add	r0, r0, r1, lsl #2
     58c:	ldr	r0, [r0]
     590:	movw	r1, #0
     594:	movt	r1, #0
     598:	bl	0 <strcmp>
     59c:	cmp	r0, #0
     5a0:	bne	5b8 <main+0x5b8>
     5a4:	movw	r0, #0
     5a8:	movt	r0, #0
     5ac:	movw	r1, #1
     5b0:	str	r1, [r0]
     5b4:	b	760 <main+0x760>
     5b8:	ldr	r0, [fp, #-12]
     5bc:	ldr	r1, [fp, #-16]
     5c0:	add	r0, r0, r1, lsl #2
     5c4:	ldr	r0, [r0]
     5c8:	movw	r1, #0
     5cc:	movt	r1, #0
     5d0:	bl	0 <strcmp>
     5d4:	cmp	r0, #0
     5d8:	bne	5f0 <main+0x5f0>
     5dc:	movw	r0, #0
     5e0:	movt	r0, #0
     5e4:	movw	r1, #1
     5e8:	str	r1, [r0]
     5ec:	b	75c <main+0x75c>
     5f0:	ldr	r0, [fp, #-12]
     5f4:	ldr	r1, [fp, #-16]
     5f8:	add	r0, r0, r1, lsl #2
     5fc:	ldr	r0, [r0]
     600:	movw	r1, #0
     604:	movt	r1, #0
     608:	bl	0 <strcmp>
     60c:	cmp	r0, #0
     610:	bne	628 <main+0x628>
     614:	movw	r0, #0
     618:	movt	r0, #0
     61c:	movw	r1, #1
     620:	str	r1, [r0]
     624:	b	758 <main+0x758>
     628:	ldr	r0, [fp, #-12]
     62c:	ldr	r1, [fp, #-16]
     630:	add	r0, r0, r1, lsl #2
     634:	ldr	r0, [r0]
     638:	movw	r1, #0
     63c:	movt	r1, #0
     640:	bl	0 <strcmp>
     644:	cmp	r0, #0
     648:	bne	660 <main+0x660>
     64c:	movw	r0, #0
     650:	movt	r0, #0
     654:	movw	r1, #0
     658:	str	r1, [r0]
     65c:	b	754 <main+0x754>
     660:	ldr	r0, [fp, #-12]
     664:	ldr	r1, [fp, #-16]
     668:	add	r0, r0, r1, lsl #2
     66c:	ldr	r0, [r0]
     670:	movw	r1, #0
     674:	movt	r1, #0
     678:	bl	0 <strcmp>
     67c:	cmp	r0, #0
     680:	beq	6a8 <main+0x6a8>
     684:	ldr	r0, [fp, #-12]
     688:	ldr	r1, [fp, #-16]
     68c:	add	r0, r0, r1, lsl #2
     690:	ldr	r0, [r0]
     694:	movw	r1, #0
     698:	movt	r1, #0
     69c:	bl	0 <strcmp>
     6a0:	cmp	r0, #0
     6a4:	bne	708 <main+0x708>
     6a8:	ldr	r0, [fp, #-16]
     6ac:	add	r0, r0, #1
     6b0:	ldr	r1, [fp, #-8]
     6b4:	cmp	r0, r1
     6b8:	bge	708 <main+0x708>
     6bc:	ldr	r0, [fp, #-12]
     6c0:	ldr	r1, [fp, #-16]
     6c4:	add	r1, r1, #1
     6c8:	add	r0, r0, r1, lsl #2
     6cc:	ldr	r0, [r0]
     6d0:	ldrb	r0, [r0]
     6d4:	cmp	r0, #45	; 0x2d
     6d8:	beq	708 <main+0x708>
     6dc:	ldr	r0, [fp, #-16]
     6e0:	add	r0, r0, #1
     6e4:	str	r0, [fp, #-16]
     6e8:	ldr	r0, [fp, #-12]
     6ec:	ldr	r1, [fp, #-16]
     6f0:	add	r0, r0, r1, lsl #2
     6f4:	ldr	r0, [r0]
     6f8:	movw	r1, #0
     6fc:	movt	r1, #0
     700:	str	r0, [r1]
     704:	b	750 <main+0x750>
     708:	ldr	r0, [fp, #-12]
     70c:	ldr	r1, [fp, #-16]
     710:	add	r0, r0, r1, lsl #2
     714:	ldr	r0, [r0]
     718:	ldrb	r0, [r0]
     71c:	cmp	r0, #45	; 0x2d
     720:	beq	728 <main+0x728>
     724:	b	784 <main+0x784>
     728:	movw	r0, #0
     72c:	movt	r0, #0
     730:	ldr	r0, [r0]
     734:	movw	r1, #0
     738:	movt	r1, #0
     73c:	bl	0 <fprintf>
     740:	str	r0, [sp, #44]	; 0x2c
     744:	bl	d80 <print_help>
     748:	movw	r0, #1
     74c:	bl	0 <exit>
     750:	b	754 <main+0x754>
     754:	b	758 <main+0x758>
     758:	b	75c <main+0x75c>
     75c:	b	760 <main+0x760>
     760:	b	764 <main+0x764>
     764:	b	768 <main+0x768>
     768:	b	76c <main+0x76c>
     76c:	b	770 <main+0x770>
     770:	b	774 <main+0x774>
     774:	ldr	r0, [fp, #-16]
     778:	add	r0, r0, #1
     77c:	str	r0, [fp, #-16]
     780:	b	3c8 <main+0x3c8>
     784:	ldr	r0, [fp, #-16]
     788:	ldr	r1, [fp, #-8]
     78c:	cmp	r0, r1
     790:	bge	894 <main+0x894>
     794:	ldr	r0, [fp, #-12]
     798:	ldr	r1, [fp, #-16]
     79c:	add	r0, r0, r1, lsl #2
     7a0:	ldr	r0, [r0]
     7a4:	str	r0, [fp, #-24]	; 0xffffffe8
     7a8:	ldr	r0, [fp, #-16]
     7ac:	add	r0, r0, #1
     7b0:	str	r0, [fp, #-16]
     7b4:	ldr	r0, [fp, #-16]
     7b8:	ldr	r1, [fp, #-8]
     7bc:	cmp	r0, r1
     7c0:	bge	890 <main+0x890>
     7c4:	ldr	r0, [fp, #-12]
     7c8:	ldr	r1, [fp, #-16]
     7cc:	add	r0, r0, r1, lsl #2
     7d0:	ldr	r0, [r0]
     7d4:	str	r0, [fp, #-28]	; 0xffffffe4
     7d8:	ldr	r0, [fp, #-16]
     7dc:	add	r0, r0, #1
     7e0:	str	r0, [fp, #-16]
     7e4:	ldr	r0, [fp, #-16]
     7e8:	ldr	r1, [fp, #-8]
     7ec:	cmp	r0, r1
     7f0:	bge	88c <main+0x88c>
     7f4:	ldr	r0, [fp, #-12]
     7f8:	ldr	r1, [fp, #-16]
     7fc:	add	r0, r0, r1, lsl #2
     800:	ldr	r0, [r0]
     804:	movw	r1, #0
     808:	movt	r1, #0
     80c:	sub	r2, fp, #32
     810:	bl	0 <__isoc99_sscanf>
     814:	cmp	r0, #1
     818:	beq	844 <main+0x844>
     81c:	movw	r0, #0
     820:	movt	r0, #0
     824:	ldr	r0, [r0]
     828:	movw	r1, #0
     82c:	movt	r1, #0
     830:	bl	0 <fprintf>
     834:	str	r0, [sp, #40]	; 0x28
     838:	bl	d80 <print_help>
     83c:	movw	r0, #1
     840:	bl	0 <exit>
     844:	ldr	r0, [fp, #-16]
     848:	add	r0, r0, #1
     84c:	str	r0, [fp, #-16]
     850:	ldr	r0, [fp, #-16]
     854:	ldr	r1, [fp, #-8]
     858:	cmp	r0, r1
     85c:	bge	888 <main+0x888>
     860:	movw	r0, #0
     864:	movt	r0, #0
     868:	ldr	r0, [r0]
     86c:	movw	r1, #0
     870:	movt	r1, #0
     874:	bl	0 <fprintf>
     878:	str	r0, [sp, #36]	; 0x24
     87c:	bl	d80 <print_help>
     880:	movw	r0, #1
     884:	bl	0 <exit>
     888:	b	88c <main+0x88c>
     88c:	b	890 <main+0x890>
     890:	b	894 <main+0x894>
     894:	ldr	r0, [fp, #-24]	; 0xffffffe8
     898:	ldr	r1, [fp, #-28]	; 0xffffffe4
     89c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     8a0:	bl	0 <generate_list>
     8a4:	b	d60 <main+0xd60>
     8a8:	ldr	r0, [fp, #-12]
     8ac:	ldr	r1, [fp, #-16]
     8b0:	add	r0, r0, r1, lsl #2
     8b4:	ldr	r0, [r0]
     8b8:	movw	r1, #0
     8bc:	movt	r1, #0
     8c0:	bl	0 <strcmp>
     8c4:	cmp	r0, #0
     8c8:	bne	ad4 <main+0xad4>
     8cc:	movw	r0, #0
     8d0:	str	r0, [fp, #-36]	; 0xffffffdc
     8d4:	str	r0, [fp, #-40]	; 0xffffffd8
     8d8:	str	r0, [fp, #-44]	; 0xffffffd4
     8dc:	mvn	r0, #0
     8e0:	str	r0, [fp, #-48]	; 0xffffffd0
     8e4:	ldr	r0, [fp, #-16]
     8e8:	add	r0, r0, #1
     8ec:	str	r0, [fp, #-16]
     8f0:	ldr	r0, [fp, #-16]
     8f4:	ldr	r1, [fp, #-8]
     8f8:	cmp	r0, r1
     8fc:	bge	9f8 <main+0x9f8>
     900:	ldr	r0, [fp, #-12]
     904:	ldr	r1, [fp, #-16]
     908:	add	r0, r0, r1, lsl #2
     90c:	ldr	r0, [r0]
     910:	movw	r1, #0
     914:	movt	r1, #0
     918:	bl	0 <strcmp>
     91c:	cmp	r0, #0
     920:	beq	948 <main+0x948>
     924:	ldr	r0, [fp, #-12]
     928:	ldr	r1, [fp, #-16]
     92c:	add	r0, r0, r1, lsl #2
     930:	ldr	r0, [r0]
     934:	movw	r1, #0
     938:	movt	r1, #0
     93c:	bl	0 <strcmp>
     940:	cmp	r0, #0
     944:	bne	9a0 <main+0x9a0>
     948:	ldr	r0, [fp, #-16]
     94c:	add	r0, r0, #1
     950:	ldr	r1, [fp, #-8]
     954:	cmp	r0, r1
     958:	bge	9a0 <main+0x9a0>
     95c:	ldr	r0, [fp, #-12]
     960:	ldr	r1, [fp, #-16]
     964:	add	r1, r1, #1
     968:	add	r0, r0, r1, lsl #2
     96c:	ldr	r0, [r0]
     970:	ldrb	r0, [r0]
     974:	cmp	r0, #45	; 0x2d
     978:	beq	9a0 <main+0x9a0>
     97c:	ldr	r0, [fp, #-16]
     980:	add	r0, r0, #1
     984:	str	r0, [fp, #-16]
     988:	ldr	r0, [fp, #-12]
     98c:	ldr	r1, [fp, #-16]
     990:	add	r0, r0, r1, lsl #2
     994:	ldr	r0, [r0]
     998:	str	r0, [fp, #-36]	; 0xffffffdc
     99c:	b	9e8 <main+0x9e8>
     9a0:	ldr	r0, [fp, #-12]
     9a4:	ldr	r1, [fp, #-16]
     9a8:	add	r0, r0, r1, lsl #2
     9ac:	ldr	r0, [r0]
     9b0:	ldrb	r0, [r0]
     9b4:	cmp	r0, #45	; 0x2d
     9b8:	beq	9c0 <main+0x9c0>
     9bc:	b	9f8 <main+0x9f8>
     9c0:	movw	r0, #0
     9c4:	movt	r0, #0
     9c8:	ldr	r0, [r0]
     9cc:	movw	r1, #0
     9d0:	movt	r1, #0
     9d4:	bl	0 <fprintf>
     9d8:	str	r0, [sp, #32]
     9dc:	bl	d80 <print_help>
     9e0:	movw	r0, #1
     9e4:	bl	0 <exit>
     9e8:	ldr	r0, [fp, #-16]
     9ec:	add	r0, r0, #1
     9f0:	str	r0, [fp, #-16]
     9f4:	b	8f0 <main+0x8f0>
     9f8:	ldr	r0, [fp, #-16]
     9fc:	ldr	r1, [fp, #-8]
     a00:	sub	r1, r1, #3
     a04:	cmp	r0, r1
     a08:	beq	a34 <main+0xa34>
     a0c:	movw	r0, #0
     a10:	movt	r0, #0
     a14:	ldr	r0, [r0]
     a18:	movw	r1, #0
     a1c:	movt	r1, #0
     a20:	bl	0 <fprintf>
     a24:	str	r0, [sp, #28]
     a28:	bl	d80 <print_help>
     a2c:	movw	r0, #1
     a30:	bl	0 <exit>
     a34:	ldr	r0, [fp, #-12]
     a38:	ldr	r1, [fp, #-16]
     a3c:	ldr	r0, [r0, r1, lsl #2]
     a40:	str	r0, [fp, #-40]	; 0xffffffd8
     a44:	ldr	r0, [fp, #-16]
     a48:	add	r0, r0, #1
     a4c:	str	r0, [fp, #-16]
     a50:	ldr	r0, [fp, #-12]
     a54:	ldr	r1, [fp, #-16]
     a58:	ldr	r0, [r0, r1, lsl #2]
     a5c:	str	r0, [fp, #-44]	; 0xffffffd4
     a60:	ldr	r0, [fp, #-16]
     a64:	add	r0, r0, #1
     a68:	str	r0, [fp, #-16]
     a6c:	ldr	r0, [fp, #-12]
     a70:	ldr	r1, [fp, #-16]
     a74:	add	r0, r0, r1, lsl #2
     a78:	ldr	r0, [r0]
     a7c:	movw	r1, #0
     a80:	movt	r1, #0
     a84:	sub	r2, fp, #48	; 0x30
     a88:	bl	0 <__isoc99_sscanf>
     a8c:	cmp	r0, #1
     a90:	beq	abc <main+0xabc>
     a94:	movw	r0, #0
     a98:	movt	r0, #0
     a9c:	ldr	r0, [r0]
     aa0:	movw	r1, #0
     aa4:	movt	r1, #0
     aa8:	bl	0 <fprintf>
     aac:	str	r0, [sp, #24]
     ab0:	bl	d80 <print_help>
     ab4:	movw	r0, #1
     ab8:	bl	0 <exit>
     abc:	ldr	r0, [fp, #-36]	; 0xffffffdc
     ac0:	ldr	r1, [fp, #-40]	; 0xffffffd8
     ac4:	ldr	r2, [fp, #-44]	; 0xffffffd4
     ac8:	ldr	r3, [fp, #-48]	; 0xffffffd0
     acc:	bl	0 <generate_xmlschema>
     ad0:	b	d5c <main+0xd5c>
     ad4:	ldr	r0, [fp, #-12]
     ad8:	ldr	r1, [fp, #-16]
     adc:	add	r0, r0, r1, lsl #2
     ae0:	ldr	r0, [r0]
     ae4:	movw	r1, #0
     ae8:	movt	r1, #0
     aec:	bl	0 <strcmp>
     af0:	cmp	r0, #0
     af4:	bne	b94 <main+0xb94>
     af8:	ldr	r0, [fp, #-16]
     afc:	add	r0, r0, #1
     b00:	str	r0, [fp, #-16]
     b04:	ldr	r0, [fp, #-16]
     b08:	ldr	r1, [fp, #-8]
     b0c:	sub	r1, r1, #1
     b10:	cmp	r0, r1
     b14:	beq	b40 <main+0xb40>
     b18:	movw	r0, #0
     b1c:	movt	r0, #0
     b20:	ldr	r0, [r0]
     b24:	movw	r1, #0
     b28:	movt	r1, #0
     b2c:	bl	0 <fprintf>
     b30:	str	r0, [sp, #20]
     b34:	bl	d80 <print_help>
     b38:	movw	r0, #1
     b3c:	bl	0 <exit>
     b40:	ldr	r0, [fp, #-12]
     b44:	ldr	r1, [fp, #-16]
     b48:	add	r0, r0, r1, lsl #2
     b4c:	ldr	r0, [r0]
     b50:	sub	r1, fp, #52	; 0x34
     b54:	bl	0 <coda_format_from_string>
     b58:	cmp	r0, #0
     b5c:	beq	b88 <main+0xb88>
     b60:	movw	r0, #0
     b64:	movt	r0, #0
     b68:	ldr	r0, [r0]
     b6c:	movw	r1, #0
     b70:	movt	r1, #0
     b74:	bl	0 <fprintf>
     b78:	str	r0, [sp, #16]
     b7c:	bl	d80 <print_help>
     b80:	movw	r0, #1
     b84:	bl	0 <exit>
     b88:	ldr	r0, [fp, #-52]	; 0xffffffcc
     b8c:	bl	0 <generate_detection_tree>
     b90:	b	d58 <main+0xd58>
     b94:	ldr	r0, [fp, #-12]
     b98:	ldr	r1, [fp, #-16]
     b9c:	add	r0, r0, r1, lsl #2
     ba0:	ldr	r0, [r0]
     ba4:	movw	r1, #0
     ba8:	movt	r1, #0
     bac:	bl	0 <strcmp>
     bb0:	cmp	r0, #0
     bb4:	bne	d2c <main+0xd2c>
     bb8:	movw	r0, #0
     bbc:	str	r0, [fp, #-56]	; 0xffffffc8
     bc0:	ldr	r0, [fp, #-16]
     bc4:	add	r0, r0, #1
     bc8:	str	r0, [fp, #-16]
     bcc:	ldr	r0, [fp, #-16]
     bd0:	ldr	r1, [fp, #-8]
     bd4:	cmp	r0, r1
     bd8:	bge	cd4 <main+0xcd4>
     bdc:	ldr	r0, [fp, #-12]
     be0:	ldr	r1, [fp, #-16]
     be4:	add	r0, r0, r1, lsl #2
     be8:	ldr	r0, [r0]
     bec:	movw	r1, #0
     bf0:	movt	r1, #0
     bf4:	bl	0 <strcmp>
     bf8:	cmp	r0, #0
     bfc:	beq	c24 <main+0xc24>
     c00:	ldr	r0, [fp, #-12]
     c04:	ldr	r1, [fp, #-16]
     c08:	add	r0, r0, r1, lsl #2
     c0c:	ldr	r0, [r0]
     c10:	movw	r1, #0
     c14:	movt	r1, #0
     c18:	bl	0 <strcmp>
     c1c:	cmp	r0, #0
     c20:	bne	c7c <main+0xc7c>
     c24:	ldr	r0, [fp, #-16]
     c28:	add	r0, r0, #1
     c2c:	ldr	r1, [fp, #-8]
     c30:	cmp	r0, r1
     c34:	bge	c7c <main+0xc7c>
     c38:	ldr	r0, [fp, #-12]
     c3c:	ldr	r1, [fp, #-16]
     c40:	add	r1, r1, #1
     c44:	add	r0, r0, r1, lsl #2
     c48:	ldr	r0, [r0]
     c4c:	ldrb	r0, [r0]
     c50:	cmp	r0, #45	; 0x2d
     c54:	beq	c7c <main+0xc7c>
     c58:	ldr	r0, [fp, #-16]
     c5c:	add	r0, r0, #1
     c60:	str	r0, [fp, #-16]
     c64:	ldr	r0, [fp, #-12]
     c68:	ldr	r1, [fp, #-16]
     c6c:	add	r0, r0, r1, lsl #2
     c70:	ldr	r0, [r0]
     c74:	str	r0, [fp, #-56]	; 0xffffffc8
     c78:	b	cc4 <main+0xcc4>
     c7c:	ldr	r0, [fp, #-12]
     c80:	ldr	r1, [fp, #-16]
     c84:	add	r0, r0, r1, lsl #2
     c88:	ldr	r0, [r0]
     c8c:	ldrb	r0, [r0]
     c90:	cmp	r0, #45	; 0x2d
     c94:	beq	c9c <main+0xc9c>
     c98:	b	cd4 <main+0xcd4>
     c9c:	movw	r0, #0
     ca0:	movt	r0, #0
     ca4:	ldr	r0, [r0]
     ca8:	movw	r1, #0
     cac:	movt	r1, #0
     cb0:	bl	0 <fprintf>
     cb4:	str	r0, [sp, #12]
     cb8:	bl	d80 <print_help>
     cbc:	movw	r0, #1
     cc0:	bl	0 <exit>
     cc4:	ldr	r0, [fp, #-16]
     cc8:	add	r0, r0, #1
     ccc:	str	r0, [fp, #-16]
     cd0:	b	bcc <main+0xbcc>
     cd4:	ldr	r0, [fp, #-16]
     cd8:	ldr	r1, [fp, #-8]
     cdc:	sub	r1, r1, #1
     ce0:	cmp	r0, r1
     ce4:	beq	d10 <main+0xd10>
     ce8:	movw	r0, #0
     cec:	movt	r0, #0
     cf0:	ldr	r0, [r0]
     cf4:	movw	r1, #0
     cf8:	movt	r1, #0
     cfc:	bl	0 <fprintf>
     d00:	str	r0, [sp, #8]
     d04:	bl	d80 <print_help>
     d08:	movw	r0, #1
     d0c:	bl	0 <exit>
     d10:	ldr	r0, [fp, #-56]	; 0xffffffc8
     d14:	ldr	r1, [fp, #-12]
     d18:	ldr	r2, [fp, #-16]
     d1c:	add	r1, r1, r2, lsl #2
     d20:	ldr	r1, [r1]
     d24:	bl	0 <generate_definition>
     d28:	b	d54 <main+0xd54>
     d2c:	movw	r0, #0
     d30:	movt	r0, #0
     d34:	ldr	r0, [r0]
     d38:	movw	r1, #0
     d3c:	movt	r1, #0
     d40:	bl	0 <fprintf>
     d44:	str	r0, [sp, #4]
     d48:	bl	d80 <print_help>
     d4c:	movw	r0, #1
     d50:	bl	0 <exit>
     d54:	b	d58 <main+0xd58>
     d58:	b	d5c <main+0xd5c>
     d5c:	b	d60 <main+0xd60>
     d60:	b	d64 <main+0xd64>
     d64:	bl	0 <coda_done>
     d68:	movw	r0, #0
     d6c:	mov	sp, fp
     d70:	pop	{fp, pc}
     d74:	.word	0x00000b68
     d78:	.word	0x00000b1c
     d7c:	.word	0x00000aec

00000d80 <print_help>:
     d80:	push	{fp, lr}
     d84:	mov	fp, sp
     d88:	sub	sp, sp, #296	; 0x128
     d8c:	movw	r0, #0
     d90:	movt	r0, #0
     d94:	bl	0 <printf>
     d98:	movw	lr, #0
     d9c:	movt	lr, #0
     da0:	str	r0, [fp, #-4]
     da4:	mov	r0, lr
     da8:	bl	0 <printf>
     dac:	movw	lr, #0
     db0:	movt	lr, #0
     db4:	str	r0, [fp, #-8]
     db8:	mov	r0, lr
     dbc:	bl	0 <printf>
     dc0:	movw	lr, #0
     dc4:	movt	lr, #0
     dc8:	str	r0, [fp, #-12]
     dcc:	mov	r0, lr
     dd0:	bl	0 <printf>
     dd4:	movw	lr, #0
     dd8:	movt	lr, #0
     ddc:	str	r0, [fp, #-16]
     de0:	mov	r0, lr
     de4:	bl	0 <printf>
     de8:	movw	lr, #0
     dec:	movt	lr, #0
     df0:	str	r0, [fp, #-20]	; 0xffffffec
     df4:	mov	r0, lr
     df8:	bl	0 <printf>
     dfc:	movw	lr, #0
     e00:	movt	lr, #0
     e04:	str	r0, [fp, #-24]	; 0xffffffe8
     e08:	mov	r0, lr
     e0c:	bl	0 <printf>
     e10:	movw	lr, #0
     e14:	movt	lr, #0
     e18:	str	r0, [fp, #-28]	; 0xffffffe4
     e1c:	mov	r0, lr
     e20:	bl	0 <printf>
     e24:	movw	lr, #0
     e28:	movt	lr, #0
     e2c:	str	r0, [fp, #-32]	; 0xffffffe0
     e30:	mov	r0, lr
     e34:	bl	0 <printf>
     e38:	movw	lr, #0
     e3c:	movt	lr, #0
     e40:	str	r0, [fp, #-36]	; 0xffffffdc
     e44:	mov	r0, lr
     e48:	bl	0 <printf>
     e4c:	movw	lr, #0
     e50:	movt	lr, #0
     e54:	str	r0, [fp, #-40]	; 0xffffffd8
     e58:	mov	r0, lr
     e5c:	bl	0 <printf>
     e60:	movw	lr, #0
     e64:	movt	lr, #0
     e68:	str	r0, [fp, #-44]	; 0xffffffd4
     e6c:	mov	r0, lr
     e70:	bl	0 <printf>
     e74:	movw	lr, #0
     e78:	movt	lr, #0
     e7c:	str	r0, [fp, #-48]	; 0xffffffd0
     e80:	mov	r0, lr
     e84:	bl	0 <printf>
     e88:	movw	lr, #0
     e8c:	movt	lr, #0
     e90:	str	r0, [fp, #-52]	; 0xffffffcc
     e94:	mov	r0, lr
     e98:	bl	0 <printf>
     e9c:	movw	lr, #0
     ea0:	movt	lr, #0
     ea4:	str	r0, [fp, #-56]	; 0xffffffc8
     ea8:	mov	r0, lr
     eac:	bl	0 <printf>
     eb0:	movw	lr, #0
     eb4:	movt	lr, #0
     eb8:	str	r0, [fp, #-60]	; 0xffffffc4
     ebc:	mov	r0, lr
     ec0:	bl	0 <printf>
     ec4:	movw	lr, #0
     ec8:	movt	lr, #0
     ecc:	str	r0, [fp, #-64]	; 0xffffffc0
     ed0:	mov	r0, lr
     ed4:	bl	0 <printf>
     ed8:	movw	lr, #0
     edc:	movt	lr, #0
     ee0:	str	r0, [fp, #-68]	; 0xffffffbc
     ee4:	mov	r0, lr
     ee8:	bl	0 <printf>
     eec:	movw	lr, #0
     ef0:	movt	lr, #0
     ef4:	str	r0, [fp, #-72]	; 0xffffffb8
     ef8:	mov	r0, lr
     efc:	bl	0 <printf>
     f00:	movw	lr, #0
     f04:	movt	lr, #0
     f08:	str	r0, [fp, #-76]	; 0xffffffb4
     f0c:	mov	r0, lr
     f10:	bl	0 <printf>
     f14:	movw	lr, #0
     f18:	movt	lr, #0
     f1c:	str	r0, [fp, #-80]	; 0xffffffb0
     f20:	mov	r0, lr
     f24:	bl	0 <printf>
     f28:	movw	lr, #0
     f2c:	movt	lr, #0
     f30:	str	r0, [fp, #-84]	; 0xffffffac
     f34:	mov	r0, lr
     f38:	bl	0 <printf>
     f3c:	movw	lr, #0
     f40:	movt	lr, #0
     f44:	str	r0, [fp, #-88]	; 0xffffffa8
     f48:	mov	r0, lr
     f4c:	bl	0 <printf>
     f50:	movw	lr, #0
     f54:	movt	lr, #0
     f58:	str	r0, [fp, #-92]	; 0xffffffa4
     f5c:	mov	r0, lr
     f60:	bl	0 <printf>
     f64:	movw	lr, #0
     f68:	movt	lr, #0
     f6c:	str	r0, [fp, #-96]	; 0xffffffa0
     f70:	mov	r0, lr
     f74:	bl	0 <printf>
     f78:	movw	lr, #0
     f7c:	movt	lr, #0
     f80:	str	r0, [fp, #-100]	; 0xffffff9c
     f84:	mov	r0, lr
     f88:	bl	0 <printf>
     f8c:	movw	lr, #0
     f90:	movt	lr, #0
     f94:	str	r0, [fp, #-104]	; 0xffffff98
     f98:	mov	r0, lr
     f9c:	bl	0 <printf>
     fa0:	movw	lr, #0
     fa4:	movt	lr, #0
     fa8:	str	r0, [fp, #-108]	; 0xffffff94
     fac:	mov	r0, lr
     fb0:	bl	0 <printf>
     fb4:	movw	lr, #0
     fb8:	movt	lr, #0
     fbc:	str	r0, [fp, #-112]	; 0xffffff90
     fc0:	mov	r0, lr
     fc4:	bl	0 <printf>
     fc8:	movw	lr, #0
     fcc:	movt	lr, #0
     fd0:	str	r0, [fp, #-116]	; 0xffffff8c
     fd4:	mov	r0, lr
     fd8:	bl	0 <printf>
     fdc:	movw	lr, #0
     fe0:	movt	lr, #0
     fe4:	str	r0, [fp, #-120]	; 0xffffff88
     fe8:	mov	r0, lr
     fec:	bl	0 <printf>
     ff0:	movw	lr, #0
     ff4:	movt	lr, #0
     ff8:	str	r0, [fp, #-124]	; 0xffffff84
     ffc:	mov	r0, lr
    1000:	bl	0 <printf>
    1004:	movw	lr, #0
    1008:	movt	lr, #0
    100c:	str	r0, [fp, #-128]	; 0xffffff80
    1010:	mov	r0, lr
    1014:	bl	0 <printf>
    1018:	movw	lr, #0
    101c:	movt	lr, #0
    1020:	str	r0, [fp, #-132]	; 0xffffff7c
    1024:	mov	r0, lr
    1028:	bl	0 <printf>
    102c:	movw	lr, #0
    1030:	movt	lr, #0
    1034:	str	r0, [fp, #-136]	; 0xffffff78
    1038:	mov	r0, lr
    103c:	bl	0 <printf>
    1040:	movw	lr, #0
    1044:	movt	lr, #0
    1048:	str	r0, [fp, #-140]	; 0xffffff74
    104c:	mov	r0, lr
    1050:	bl	0 <printf>
    1054:	movw	lr, #0
    1058:	movt	lr, #0
    105c:	str	r0, [fp, #-144]	; 0xffffff70
    1060:	mov	r0, lr
    1064:	bl	0 <printf>
    1068:	movw	lr, #0
    106c:	movt	lr, #0
    1070:	str	r0, [sp, #148]	; 0x94
    1074:	mov	r0, lr
    1078:	bl	0 <printf>
    107c:	movw	lr, #0
    1080:	movt	lr, #0
    1084:	str	r0, [sp, #144]	; 0x90
    1088:	mov	r0, lr
    108c:	bl	0 <printf>
    1090:	movw	lr, #0
    1094:	movt	lr, #0
    1098:	str	r0, [sp, #140]	; 0x8c
    109c:	mov	r0, lr
    10a0:	bl	0 <printf>
    10a4:	movw	lr, #0
    10a8:	movt	lr, #0
    10ac:	str	r0, [sp, #136]	; 0x88
    10b0:	mov	r0, lr
    10b4:	bl	0 <printf>
    10b8:	movw	lr, #0
    10bc:	movt	lr, #0
    10c0:	str	r0, [sp, #132]	; 0x84
    10c4:	mov	r0, lr
    10c8:	bl	0 <printf>
    10cc:	movw	lr, #0
    10d0:	movt	lr, #0
    10d4:	str	r0, [sp, #128]	; 0x80
    10d8:	mov	r0, lr
    10dc:	bl	0 <printf>
    10e0:	movw	lr, #0
    10e4:	movt	lr, #0
    10e8:	str	r0, [sp, #124]	; 0x7c
    10ec:	mov	r0, lr
    10f0:	bl	0 <printf>
    10f4:	movw	lr, #0
    10f8:	movt	lr, #0
    10fc:	str	r0, [sp, #120]	; 0x78
    1100:	mov	r0, lr
    1104:	bl	0 <printf>
    1108:	movw	lr, #0
    110c:	movt	lr, #0
    1110:	str	r0, [sp, #116]	; 0x74
    1114:	mov	r0, lr
    1118:	bl	0 <printf>
    111c:	movw	lr, #0
    1120:	movt	lr, #0
    1124:	str	r0, [sp, #112]	; 0x70
    1128:	mov	r0, lr
    112c:	bl	0 <printf>
    1130:	movw	lr, #0
    1134:	movt	lr, #0
    1138:	str	r0, [sp, #108]	; 0x6c
    113c:	mov	r0, lr
    1140:	bl	0 <printf>
    1144:	movw	lr, #0
    1148:	movt	lr, #0
    114c:	str	r0, [sp, #104]	; 0x68
    1150:	mov	r0, lr
    1154:	bl	0 <printf>
    1158:	movw	lr, #0
    115c:	movt	lr, #0
    1160:	str	r0, [sp, #100]	; 0x64
    1164:	mov	r0, lr
    1168:	bl	0 <printf>
    116c:	movw	lr, #0
    1170:	movt	lr, #0
    1174:	str	r0, [sp, #96]	; 0x60
    1178:	mov	r0, lr
    117c:	bl	0 <printf>
    1180:	movw	lr, #0
    1184:	movt	lr, #0
    1188:	str	r0, [sp, #92]	; 0x5c
    118c:	mov	r0, lr
    1190:	bl	0 <printf>
    1194:	movw	lr, #0
    1198:	movt	lr, #0
    119c:	str	r0, [sp, #88]	; 0x58
    11a0:	mov	r0, lr
    11a4:	bl	0 <printf>
    11a8:	movw	lr, #0
    11ac:	movt	lr, #0
    11b0:	str	r0, [sp, #84]	; 0x54
    11b4:	mov	r0, lr
    11b8:	bl	0 <printf>
    11bc:	movw	lr, #0
    11c0:	movt	lr, #0
    11c4:	str	r0, [sp, #80]	; 0x50
    11c8:	mov	r0, lr
    11cc:	bl	0 <printf>
    11d0:	movw	lr, #0
    11d4:	movt	lr, #0
    11d8:	str	r0, [sp, #76]	; 0x4c
    11dc:	mov	r0, lr
    11e0:	bl	0 <printf>
    11e4:	movw	lr, #0
    11e8:	movt	lr, #0
    11ec:	str	r0, [sp, #72]	; 0x48
    11f0:	mov	r0, lr
    11f4:	bl	0 <printf>
    11f8:	movw	lr, #0
    11fc:	movt	lr, #0
    1200:	str	r0, [sp, #68]	; 0x44
    1204:	mov	r0, lr
    1208:	bl	0 <printf>
    120c:	movw	lr, #0
    1210:	movt	lr, #0
    1214:	str	r0, [sp, #64]	; 0x40
    1218:	mov	r0, lr
    121c:	bl	0 <printf>
    1220:	movw	lr, #0
    1224:	movt	lr, #0
    1228:	str	r0, [sp, #60]	; 0x3c
    122c:	mov	r0, lr
    1230:	bl	0 <printf>
    1234:	movw	lr, #0
    1238:	movt	lr, #0
    123c:	str	r0, [sp, #56]	; 0x38
    1240:	mov	r0, lr
    1244:	bl	0 <printf>
    1248:	movw	lr, #0
    124c:	movt	lr, #0
    1250:	str	r0, [sp, #52]	; 0x34
    1254:	mov	r0, lr
    1258:	bl	0 <printf>
    125c:	movw	lr, #0
    1260:	movt	lr, #0
    1264:	str	r0, [sp, #48]	; 0x30
    1268:	mov	r0, lr
    126c:	bl	0 <printf>
    1270:	movw	lr, #0
    1274:	movt	lr, #0
    1278:	str	r0, [sp, #44]	; 0x2c
    127c:	mov	r0, lr
    1280:	bl	0 <printf>
    1284:	movw	lr, #0
    1288:	movt	lr, #0
    128c:	str	r0, [sp, #40]	; 0x28
    1290:	mov	r0, lr
    1294:	bl	0 <printf>
    1298:	movw	lr, #0
    129c:	movt	lr, #0
    12a0:	str	r0, [sp, #36]	; 0x24
    12a4:	mov	r0, lr
    12a8:	bl	0 <printf>
    12ac:	movw	lr, #0
    12b0:	movt	lr, #0
    12b4:	str	r0, [sp, #32]
    12b8:	mov	r0, lr
    12bc:	bl	0 <printf>
    12c0:	movw	lr, #0
    12c4:	movt	lr, #0
    12c8:	str	r0, [sp, #28]
    12cc:	mov	r0, lr
    12d0:	bl	0 <printf>
    12d4:	movw	lr, #0
    12d8:	movt	lr, #0
    12dc:	str	r0, [sp, #24]
    12e0:	mov	r0, lr
    12e4:	bl	0 <printf>
    12e8:	movw	lr, #0
    12ec:	movt	lr, #0
    12f0:	str	r0, [sp, #20]
    12f4:	mov	r0, lr
    12f8:	bl	0 <printf>
    12fc:	movw	lr, #0
    1300:	movt	lr, #0
    1304:	str	r0, [sp, #16]
    1308:	mov	r0, lr
    130c:	bl	0 <printf>
    1310:	movw	lr, #0
    1314:	movt	lr, #0
    1318:	str	r0, [sp, #12]
    131c:	mov	r0, lr
    1320:	bl	0 <printf>
    1324:	movw	lr, #0
    1328:	movt	lr, #0
    132c:	str	r0, [sp, #8]
    1330:	mov	r0, lr
    1334:	bl	0 <printf>
    1338:	str	r0, [sp, #4]
    133c:	mov	sp, fp
    1340:	pop	{fp, pc}

00001344 <print_version>:
    1344:	push	{fp, lr}
    1348:	mov	fp, sp
    134c:	sub	sp, sp, #16
    1350:	ldr	r0, [pc, #80]	; 13a8 <print_version+0x64>
    1354:	ldr	r0, [pc, r0]
    1358:	str	r0, [fp, #-4]
    135c:	bl	0 <__aeabi_read_tp>
    1360:	ldr	ip, [fp, #-4]
    1364:	ldr	r1, [r0, ip]
    1368:	movw	r0, #0
    136c:	movt	r0, #0
    1370:	bl	0 <printf>
    1374:	movw	r1, #0
    1378:	movt	r1, #0
    137c:	str	r0, [sp, #8]
    1380:	mov	r0, r1
    1384:	bl	0 <printf>
    1388:	movw	r1, #0
    138c:	movt	r1, #0
    1390:	str	r0, [sp, #4]
    1394:	mov	r0, r1
    1398:	bl	0 <printf>
    139c:	str	r0, [sp]
    13a0:	mov	sp, fp
    13a4:	pop	{fp, pc}
    13a8:	.word	0x0000004c
