
../compcert-repos/prog2/CMakeFiles/8.dir/Aula08_Grafos_T2/grafo.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <cria_elem>:
   0:	push	{r4, sl, fp, lr}
   4:	add	fp, sp, #8
   8:	mov	r4, r0
   c:	mov	r0, #8
  10:	bl	0 <malloc>
  14:	cmp	r0, #0
  18:	moveq	r0, #0
  1c:	movne	r1, #0
  20:	strne	r4, [r0]
  24:	strne	r1, [r0, #4]
  28:	pop	{r4, sl, fp, pc}

0000002c <grafo_novo>:
  2c:	push	{r4, r5, fp, lr}
  30:	add	fp, sp, #8
  34:	cmp	r0, #1
  38:	movlt	r4, #0
  3c:	movlt	r0, r4
  40:	poplt	{r4, r5, fp, pc}
  44:	mov	r5, r0
  48:	mov	r0, #8
  4c:	bl	0 <malloc>
  50:	str	r5, [r0]
  54:	lsl	r5, r5, #3
  58:	mov	r4, r0
  5c:	mov	r0, r5
  60:	bl	0 <malloc>
  64:	mov	r1, #0
  68:	mov	r2, r5
  6c:	str	r0, [r4, #4]
  70:	bl	0 <memset>
  74:	mov	r0, r4
  78:	pop	{r4, r5, fp, pc}

0000007c <grafo_apaga>:
  7c:	cmp	r0, #0
  80:	bxeq	lr
  84:	push	{r4, r5, r6, sl, fp, lr}
  88:	add	fp, sp, #16
  8c:	ldr	r1, [r0]
  90:	mov	r4, r0
  94:	cmp	r1, #1
  98:	blt	d8 <grafo_apaga+0x5c>
  9c:	mov	r5, #0
  a0:	ldr	r0, [r4, #4]
  a4:	add	r0, r0, r5, lsl #3
  a8:	ldr	r0, [r0, #4]
  ac:	cmp	r0, #0
  b0:	beq	cc <grafo_apaga+0x50>
  b4:	ldr	r6, [r0, #4]
  b8:	bl	0 <free>
  bc:	cmp	r6, #0
  c0:	mov	r0, r6
  c4:	bne	b4 <grafo_apaga+0x38>
  c8:	ldr	r1, [r4]
  cc:	add	r5, r5, #1
  d0:	cmp	r5, r1
  d4:	blt	a0 <grafo_apaga+0x24>
  d8:	ldr	r0, [r4, #4]
  dc:	bl	0 <free>
  e0:	mov	r0, r4
  e4:	pop	{r4, r5, r6, sl, fp, lr}
  e8:	b	0 <free>

000000ec <grafo_aresta>:
  ec:	mov	r3, r0
  f0:	mvn	r0, #0
  f4:	cmp	r3, #0
  f8:	beq	110 <grafo_aresta+0x24>
  fc:	ldr	ip, [r3]
 100:	cmp	ip, r1
 104:	movge	r0, #0
 108:	cmpge	ip, r2
 10c:	bge	114 <grafo_aresta+0x28>
 110:	bx	lr
 114:	ldr	r3, [r3, #4]
 118:	add	r1, r3, r1, lsl #3
 11c:	ldr	r1, [r1, #4]
 120:	cmp	r1, #0
 124:	bxeq	lr
 128:	ldr	r3, [r1]
 12c:	cmp	r3, r2
 130:	bne	11c <grafo_aresta+0x30>
 134:	mov	r0, #1
 138:	bx	lr

0000013c <grafo_adiciona>:
 13c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 140:	add	fp, sp, #24
 144:	mov	r5, r0
 148:	mvn	r0, #0
 14c:	cmp	r5, #0
 150:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
 154:	mov	r4, r1
 158:	ldr	r1, [r5]
 15c:	cmp	r1, r4
 160:	movge	r6, r2
 164:	cmpge	r1, r2
 168:	bge	170 <grafo_adiciona+0x34>
 16c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 170:	ldr	r0, [r5, #4]
 174:	add	r7, r0, r4, lsl #3
 178:	ldr	r8, [r7, #4]!
 17c:	cmp	r8, #0
 180:	beq	1a4 <grafo_adiciona+0x68>
 184:	mov	r0, r8
 188:	ldr	r1, [r0]
 18c:	cmp	r1, r6
 190:	moveq	r0, #0
 194:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
 198:	ldr	r0, [r0, #4]
 19c:	cmp	r0, #0
 1a0:	bne	188 <grafo_adiciona+0x4c>
 1a4:	mov	r0, #8
 1a8:	bl	0 <malloc>
 1ac:	cmp	r0, #0
 1b0:	beq	1c4 <grafo_adiciona+0x88>
 1b4:	mov	r1, #0
 1b8:	str	r6, [r0]
 1bc:	str	r1, [r0, #4]
 1c0:	b	1c8 <grafo_adiciona+0x8c>
 1c4:	mov	r0, #0
 1c8:	str	r0, [r7]
 1cc:	ldr	r0, [r5, #4]
 1d0:	add	r1, r0, r4, lsl #3
 1d4:	ldr	r1, [r1, #4]
 1d8:	str	r8, [r1, #4]
 1dc:	ldr	r1, [r0]
 1e0:	add	r1, r1, #1
 1e4:	str	r1, [r0]
 1e8:	mov	r0, #1
 1ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000001f0 <grafo_remove>:
 1f0:	push	{r4, sl, fp, lr}
 1f4:	add	fp, sp, #8
 1f8:	mov	r4, r0
 1fc:	mvn	r0, #0
 200:	cmp	r4, #0
 204:	beq	218 <grafo_remove+0x28>
 208:	ldr	r3, [r4]
 20c:	cmp	r3, r1
 210:	cmpge	r3, r2
 214:	bge	21c <grafo_remove+0x2c>
 218:	pop	{r4, sl, fp, pc}
 21c:	ldr	ip, [r4, #4]
 220:	mov	r0, #0
 224:	add	lr, ip, r1, lsl #3
 228:	ldr	r1, [lr, #4]!
 22c:	cmp	r1, #0
 230:	beq	218 <grafo_remove+0x28>
 234:	ldr	r3, [r1]
 238:	cmp	r3, r2
 23c:	bne	25c <grafo_remove+0x6c>
 240:	ldr	r0, [r1, #4]
 244:	str	r0, [lr]
 248:	ldr	r0, [r4, #4]
 24c:	ldr	r2, [r0]
 250:	sub	r2, r2, #1
 254:	str	r2, [r0]
 258:	b	28c <grafo_remove+0x9c>
 25c:	mov	r3, r1
 260:	ldr	r1, [r1, #4]
 264:	cmp	r1, #0
 268:	popeq	{r4, sl, fp, pc}
 26c:	ldr	r4, [r1]
 270:	cmp	r4, r2
 274:	bne	25c <grafo_remove+0x6c>
 278:	ldr	r0, [r1, #4]
 27c:	str	r0, [r3, #4]
 280:	ldr	r0, [ip]
 284:	sub	r0, r0, #1
 288:	str	r0, [ip]
 28c:	mov	r0, r1
 290:	bl	0 <free>
 294:	mov	r0, #1
 298:	pop	{r4, sl, fp, pc}

0000029c <v_sucessores>:
 29c:	push	{r4, r5, r6, sl, fp, lr}
 2a0:	add	fp, sp, #16
 2a4:	mov	r4, #0
 2a8:	cmp	r0, #0
 2ac:	beq	2c8 <v_sucessores+0x2c>
 2b0:	cmp	r1, #0
 2b4:	mov	r5, r1
 2b8:	movge	r6, r0
 2bc:	ldrge	r0, [r0]
 2c0:	cmpge	r0, r5
 2c4:	bgt	2d0 <v_sucessores+0x34>
 2c8:	mov	r0, r4
 2cc:	pop	{r4, r5, r6, sl, fp, pc}
 2d0:	bl	0 <vetor_novo>
 2d4:	mov	r4, r0
 2d8:	ldr	r0, [r6, #4]
 2dc:	add	r0, r0, r5, lsl #3
 2e0:	ldr	r6, [r0, #4]
 2e4:	cmp	r6, #0
 2e8:	beq	2c8 <v_sucessores+0x2c>
 2ec:	mov	r5, #0
 2f0:	ldr	r1, [r6]
 2f4:	mov	r0, r4
 2f8:	mov	r2, r5
 2fc:	bl	0 <vetor_insere>
 300:	ldr	r6, [r6, #4]
 304:	add	r5, r5, #1
 308:	cmp	r6, #0
 30c:	bne	2f0 <v_sucessores+0x54>
 310:	b	2c8 <v_sucessores+0x2c>

00000314 <v_antecessores>:
 314:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 318:	add	fp, sp, #24
 31c:	mov	r8, #0
 320:	cmp	r0, #0
 324:	beq	340 <v_antecessores+0x2c>
 328:	cmp	r1, #0
 32c:	mov	r5, r1
 330:	movge	r6, r0
 334:	ldrge	r0, [r0]
 338:	cmpge	r0, r5
 33c:	bgt	348 <v_antecessores+0x34>
 340:	mov	r0, r8
 344:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 348:	bl	0 <vetor_novo>
 34c:	mov	r8, r0
 350:	ldr	r0, [r6]
 354:	cmp	r0, #1
 358:	blt	340 <v_antecessores+0x2c>
 35c:	mov	r7, #0
 360:	mov	r4, #0
 364:	ldr	r1, [r6, #4]
 368:	add	r1, r1, r4, lsl #3
 36c:	ldr	r1, [r1, #4]
 370:	cmp	r1, #0
 374:	beq	39c <v_antecessores+0x88>
 378:	ldr	r2, [r1]
 37c:	cmp	r2, r5
 380:	bne	36c <v_antecessores+0x58>
 384:	mov	r0, r8
 388:	mov	r1, r4
 38c:	mov	r2, r7
 390:	bl	0 <vetor_insere>
 394:	ldr	r0, [r6]
 398:	add	r7, r7, #1
 39c:	add	r4, r4, #1
 3a0:	cmp	r4, r0
 3a4:	blt	364 <v_antecessores+0x50>
 3a8:	b	340 <v_antecessores+0x2c>

000003ac <v_grau>:
 3ac:	cmp	r1, #0
 3b0:	mvnlt	r0, #0
 3b4:	bxlt	lr
 3b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 3bc:	add	fp, sp, #24
 3c0:	mov	r7, r0
 3c4:	cmp	r0, #0
 3c8:	beq	494 <v_grau+0xe8>
 3cc:	ldr	r0, [r7]
 3d0:	mov	r6, r1
 3d4:	mov	r9, #0
 3d8:	mov	r8, #0
 3dc:	cmp	r0, r1
 3e0:	ble	444 <v_grau+0x98>
 3e4:	bl	0 <vetor_novo>
 3e8:	mov	r8, r0
 3ec:	ldr	r0, [r7]
 3f0:	cmp	r0, #1
 3f4:	blt	444 <v_grau+0x98>
 3f8:	mov	r5, #0
 3fc:	mov	r4, #0
 400:	ldr	r1, [r7, #4]
 404:	add	r1, r1, r4, lsl #3
 408:	ldr	r1, [r1, #4]
 40c:	cmp	r1, #0
 410:	beq	438 <v_grau+0x8c>
 414:	ldr	r2, [r1]
 418:	cmp	r2, r6
 41c:	bne	408 <v_grau+0x5c>
 420:	mov	r0, r8
 424:	mov	r1, r4
 428:	mov	r2, r5
 42c:	bl	0 <vetor_insere>
 430:	ldr	r0, [r7]
 434:	add	r5, r5, #1
 438:	add	r4, r4, #1
 43c:	cmp	r4, r0
 440:	blt	400 <v_grau+0x54>
 444:	cmp	r6, #0
 448:	cmpge	r0, r6
 44c:	ble	49c <v_grau+0xf0>
 450:	bl	0 <vetor_novo>
 454:	mov	r9, r0
 458:	ldr	r0, [r7, #4]
 45c:	add	r0, r0, r6, lsl #3
 460:	ldr	r5, [r0, #4]
 464:	cmp	r5, #0
 468:	beq	49c <v_grau+0xf0>
 46c:	mov	r4, #0
 470:	ldr	r1, [r5]
 474:	mov	r0, r9
 478:	mov	r2, r4
 47c:	bl	0 <vetor_insere>
 480:	ldr	r5, [r5, #4]
 484:	add	r4, r4, #1
 488:	cmp	r5, #0
 48c:	bne	470 <v_grau+0xc4>
 490:	b	49c <v_grau+0xf0>
 494:	mov	r8, #0
 498:	mov	r9, #0
 49c:	mov	r0, r8
 4a0:	bl	0 <vetor_tamanho>
 4a4:	mov	r4, r0
 4a8:	mov	r0, r9
 4ac:	bl	0 <vetor_tamanho>
 4b0:	mov	r5, r0
 4b4:	mov	r0, r8
 4b8:	bl	0 <vetor_apaga>
 4bc:	mov	r0, r9
 4c0:	bl	0 <vetor_apaga>
 4c4:	add	r0, r5, r4
 4c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000004cc <v_celebridade>:
 4cc:	cmp	r0, #0
 4d0:	mvneq	r2, #0
 4d4:	moveq	r0, r2
 4d8:	bxeq	lr
 4dc:	ldr	r3, [r0, #4]
 4e0:	mov	r2, #0
 4e4:	ldr	ip, [r3, r1, lsl #3]
 4e8:	cmp	ip, #0
 4ec:	beq	4f8 <v_celebridade+0x2c>
 4f0:	mov	r0, r2
 4f4:	bx	lr
 4f8:	push	{r4, sl, fp, lr}
 4fc:	add	fp, sp, #8
 500:	ldr	lr, [r0]
 504:	mov	ip, #0
 508:	cmp	lr, #1
 50c:	blt	540 <v_celebridade+0x74>
 510:	mov	r2, #0
 514:	add	r0, r3, r2, lsl #3
 518:	ldr	r0, [r0, #4]
 51c:	cmp	r0, #0
 520:	beq	534 <v_celebridade+0x68>
 524:	ldr	r4, [r0]
 528:	cmp	r4, r1
 52c:	bne	518 <v_celebridade+0x4c>
 530:	add	ip, ip, #1
 534:	add	r2, r2, #1
 538:	cmp	r2, lr
 53c:	blt	514 <v_celebridade+0x48>
 540:	add	r0, ip, #1
 544:	sub	r0, r0, lr
 548:	clz	r0, r0
 54c:	lsr	r2, r0, #5
 550:	pop	{r4, sl, fp, lr}
 554:	mov	r0, r2
 558:	bx	lr
