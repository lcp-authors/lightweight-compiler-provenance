
../compcert-repos/prog2/3.e.3:     file format elf32-littlearm


Disassembly of section .init:

0001066c <.init>:
   1066c:	push	{r3, lr}
   10670:	bl	10788 <_start@@Base+0x3c>
   10674:	pop	{r3, pc}

Disassembly of section .plt:

00010678 <__isoc99_fscanf@plt-0x14>:
   10678:	push	{lr}		; (str lr, [sp, #-4]!)
   1067c:	ldr	lr, [pc, #4]	; 10688 <__isoc99_fscanf@plt-0x4>
   10680:	add	lr, pc, lr
   10684:	ldr	pc, [lr, #8]!
   10688:	andeq	r0, r1, r8, ror r9

0001068c <__isoc99_fscanf@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2424]!	; 0x978

00010698 <fopen@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #16, 20	; 0x10000
   106a0:	ldr	pc, [ip, #2416]!	; 0x970

000106a4 <realloc@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #16, 20	; 0x10000
   106ac:	ldr	pc, [ip, #2408]!	; 0x968

000106b0 <fwrite@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2400]!	; 0x960

000106bc <malloc@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #16, 20	; 0x10000
   106c4:	ldr	pc, [ip, #2392]!	; 0x958

000106c8 <__libc_start_main@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #16, 20	; 0x10000
   106d0:	ldr	pc, [ip, #2384]!	; 0x950

000106d4 <__gmon_start__@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #16, 20	; 0x10000
   106dc:	ldr	pc, [ip, #2376]!	; 0x948

000106e0 <fprintf@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #16, 20	; 0x10000
   106e8:	ldr	pc, [ip, #2368]!	; 0x940

000106ec <fclose@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #16, 20	; 0x10000
   106f4:	ldr	pc, [ip, #2360]!	; 0x938

000106f8 <abort@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #16, 20	; 0x10000
   10700:	ldr	pc, [ip, #2352]!	; 0x930

Disassembly of section .text:

00010704 <main@@Base>:
   10704:	str	r4, [sp, #-8]!
   10708:	mov	r4, #0
   1070c:	str	lr, [sp, #4]
   10710:	sub	sp, sp, #8
   10714:	mov	r0, r4
   10718:	add	r1, sp, #4
   1071c:	str	r4, [sp, #4]
   10720:	bl	1083c <analisarFicheiro@@Base>
   10724:	ldr	r2, [sp, #4]
   10728:	mov	r1, r0
   1072c:	movw	r0, #2680	; 0xa78
   10730:	movt	r0, #1
   10734:	bl	108f8 <gerarRelatorio@@Base>
   10738:	mov	r0, r4
   1073c:	add	sp, sp, #8
   10740:	ldr	r4, [sp]
   10744:	add	sp, sp, #4
   10748:	pop	{pc}		; (ldr pc, [sp], #4)

0001074c <_start@@Base>:
   1074c:	mov	fp, #0
   10750:	mov	lr, #0
   10754:	pop	{r1}		; (ldr r1, [sp], #4)
   10758:	mov	r2, sp
   1075c:	push	{r2}		; (str r2, [sp, #-4]!)
   10760:	push	{r0}		; (str r0, [sp, #-4]!)
   10764:	ldr	ip, [pc, #16]	; 1077c <_start@@Base+0x30>
   10768:	push	{ip}		; (str ip, [sp, #-4]!)
   1076c:	ldr	r0, [pc, #12]	; 10780 <_start@@Base+0x34>
   10770:	ldr	r3, [pc, #12]	; 10784 <_start@@Base+0x38>
   10774:	bl	106c8 <__libc_start_main@plt>
   10778:	bl	106f8 <abort@plt>
   1077c:	andeq	r0, r1, r4, lsr #20
   10780:	andeq	r0, r1, r4, lsl #14
   10784:	andeq	r0, r1, r4, asr #19
   10788:	ldr	r3, [pc, #20]	; 107a4 <_start@@Base+0x58>
   1078c:	ldr	r2, [pc, #20]	; 107a8 <_start@@Base+0x5c>
   10790:	add	r3, pc, r3
   10794:	ldr	r2, [r3, r2]
   10798:	cmp	r2, #0
   1079c:	bxeq	lr
   107a0:	b	106d4 <__gmon_start__@plt>
   107a4:	andeq	r0, r1, r8, ror #16
   107a8:	andeq	r0, r0, r4, lsr r0
   107ac:	ldr	r0, [pc, #24]	; 107cc <_start@@Base+0x80>
   107b0:	ldr	r3, [pc, #24]	; 107d0 <_start@@Base+0x84>
   107b4:	cmp	r3, r0
   107b8:	bxeq	lr
   107bc:	ldr	r3, [pc, #16]	; 107d4 <_start@@Base+0x88>
   107c0:	cmp	r3, #0
   107c4:	bxeq	lr
   107c8:	bx	r3
   107cc:	andeq	r1, r2, r0, asr #32
   107d0:	andeq	r1, r2, r0, asr #32
   107d4:	andeq	r0, r0, r0
   107d8:	ldr	r0, [pc, #36]	; 10804 <_start@@Base+0xb8>
   107dc:	ldr	r1, [pc, #36]	; 10808 <_start@@Base+0xbc>
   107e0:	sub	r1, r1, r0
   107e4:	asr	r1, r1, #2
   107e8:	add	r1, r1, r1, lsr #31
   107ec:	asrs	r1, r1, #1
   107f0:	bxeq	lr
   107f4:	ldr	r3, [pc, #16]	; 1080c <_start@@Base+0xc0>
   107f8:	cmp	r3, #0
   107fc:	bxeq	lr
   10800:	bx	r3
   10804:	andeq	r1, r2, r0, asr #32
   10808:	andeq	r1, r2, r0, asr #32
   1080c:	andeq	r0, r0, r0
   10810:	push	{r4, lr}
   10814:	ldr	r4, [pc, #24]	; 10834 <_start@@Base+0xe8>
   10818:	ldrb	r3, [r4]
   1081c:	cmp	r3, #0
   10820:	popne	{r4, pc}
   10824:	bl	107ac <_start@@Base+0x60>
   10828:	mov	r3, #1
   1082c:	strb	r3, [r4]
   10830:	pop	{r4, pc}
   10834:	andeq	r1, r2, r0, asr #32
   10838:	b	107d8 <_start@@Base+0x8c>

0001083c <analisarFicheiro@@Base>:
   1083c:	movw	r0, #2616	; 0xa38
   10840:	movt	r0, #1
   10844:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10848:	strd	r6, [sp, #8]
   1084c:	movw	r7, #2632	; 0xa48
   10850:	movt	r7, #1
   10854:	strd	r8, [sp, #16]
   10858:	mov	r6, #0
   1085c:	mov	r9, #104	; 0x68
   10860:	str	sl, [sp, #24]
   10864:	mov	sl, r1
   10868:	movw	r1, #2612	; 0xa34
   1086c:	movt	r1, #1
   10870:	str	lr, [sp, #28]
   10874:	sub	sp, sp, #8
   10878:	bl	10698 <fopen@plt>
   1087c:	mov	r8, r0
   10880:	mov	r0, #104	; 0x68
   10884:	bl	106bc <malloc@plt>
   10888:	mov	r5, r0
   1088c:	b	1089c <analisarFicheiro@@Base+0x60>
   10890:	bl	106a4 <realloc@plt>
   10894:	mov	r5, r0
   10898:	add	r6, r6, #1
   1089c:	mul	r4, r9, r6
   108a0:	mov	r1, r7
   108a4:	mov	r0, r8
   108a8:	add	r2, r5, r4
   108ac:	add	ip, r2, #100	; 0x64
   108b0:	add	r3, r2, #50	; 0x32
   108b4:	str	ip, [sp]
   108b8:	bl	1068c <__isoc99_fscanf@plt>
   108bc:	cmp	r0, #3
   108c0:	add	r1, r4, #104	; 0x68
   108c4:	mov	r0, r5
   108c8:	beq	10890 <analisarFicheiro@@Base+0x54>
   108cc:	mov	r0, r8
   108d0:	str	r6, [sl]
   108d4:	bl	106ec <fclose@plt>
   108d8:	mov	r0, r5
   108dc:	add	sp, sp, #8
   108e0:	ldrd	r4, [sp]
   108e4:	ldrd	r6, [sp, #8]
   108e8:	ldrd	r8, [sp, #16]
   108ec:	ldr	sl, [sp, #24]
   108f0:	add	sp, sp, #28
   108f4:	pop	{pc}		; (ldr pc, [sp], #4)

000108f8 <gerarRelatorio@@Base>:
   108f8:	movw	r1, #2644	; 0xa54
   108fc:	movt	r1, #1
   10900:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10904:	strd	r6, [sp, #8]
   10908:	strd	r8, [sp, #16]
   1090c:	mov	r9, r2
   10910:	str	lr, [sp, #24]
   10914:	sub	sp, sp, #12
   10918:	bl	10698 <fopen@plt>
   1091c:	mov	r3, r0
   10920:	mov	r2, #10
   10924:	mov	r1, #1
   10928:	mov	r7, r0
   1092c:	movw	r0, #2648	; 0xa58
   10930:	movt	r0, #1
   10934:	bl	106b0 <fwrite@plt>
   10938:	mov	r0, #104	; 0x68
   1093c:	bl	106bc <malloc@plt>
   10940:	cmp	r9, #0
   10944:	ble	109a4 <gerarRelatorio@@Base+0xac>
   10948:	movw	r8, #2660	; 0xa64
   1094c:	movt	r8, #1
   10950:	mov	r6, r0
   10954:	mov	r5, #104	; 0x68
   10958:	mov	r4, #0
   1095c:	mov	r1, r5
   10960:	mov	r0, r6
   10964:	bl	106a4 <realloc@plt>
   10968:	mov	r6, r0
   1096c:	sub	r0, r5, #104	; 0x68
   10970:	add	r0, r6, r0
   10974:	add	lr, r4, #1
   10978:	ldr	ip, [r0, #100]	; 0x64
   1097c:	add	r3, r0, #50	; 0x32
   10980:	mov	r2, r4
   10984:	mov	r1, r8
   10988:	mov	r4, lr
   1098c:	add	r5, r5, #104	; 0x68
   10990:	stm	sp, {r0, ip}
   10994:	mov	r0, r7
   10998:	bl	106e0 <fprintf@plt>
   1099c:	cmp	r4, r9
   109a0:	bne	1095c <gerarRelatorio@@Base+0x64>
   109a4:	mov	r0, r7
   109a8:	add	sp, sp, #12
   109ac:	ldrd	r4, [sp]
   109b0:	ldrd	r6, [sp, #8]
   109b4:	ldrd	r8, [sp, #16]
   109b8:	ldr	lr, [sp, #24]
   109bc:	add	sp, sp, #28
   109c0:	b	106ec <fclose@plt>

000109c4 <__libc_csu_init@@Base>:
   109c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109c8:	mov	r7, r0
   109cc:	ldr	r6, [pc, #72]	; 10a1c <__libc_csu_init@@Base+0x58>
   109d0:	ldr	r5, [pc, #72]	; 10a20 <__libc_csu_init@@Base+0x5c>
   109d4:	add	r6, pc, r6
   109d8:	add	r5, pc, r5
   109dc:	sub	r6, r6, r5
   109e0:	mov	r8, r1
   109e4:	mov	r9, r2
   109e8:	bl	1066c <__isoc99_fscanf@plt-0x20>
   109ec:	asrs	r6, r6, #2
   109f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   109f4:	mov	r4, #0
   109f8:	add	r4, r4, #1
   109fc:	ldr	r3, [r5], #4
   10a00:	mov	r2, r9
   10a04:	mov	r1, r8
   10a08:	mov	r0, r7
   10a0c:	blx	r3
   10a10:	cmp	r6, r4
   10a14:	bne	109f8 <__libc_csu_init@@Base+0x34>
   10a18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a1c:	andeq	r0, r1, r8, lsr r5
   10a20:	andeq	r0, r1, r0, lsr r5

00010a24 <__libc_csu_fini@@Base>:
   10a24:	bx	lr

Disassembly of section .fini:

00010a28 <.fini>:
   10a28:	push	{r3, lr}
   10a2c:	pop	{r3, pc}
