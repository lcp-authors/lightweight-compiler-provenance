
../compcert-repos/prog2/CMakeFiles/4.dir/Aula04_Listas_T1/lista-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_l>:
       0:	sub	sp, sp, #12
       4:	push	{fp, lr}
       8:	mov	fp, sp
       c:	sub	sp, sp, #36	; 0x24
      10:	str	r3, [fp, #16]
      14:	str	r2, [fp, #12]
      18:	str	r1, [fp, #8]
      1c:	str	r0, [fp, #-4]
      20:	movw	r0, #12
      24:	bl	0 <malloc>
      28:	str	r0, [fp, #-12]
      2c:	ldr	r0, [fp, #-12]
      30:	movw	r1, #0
      34:	str	r1, [r0]
      38:	ldr	r0, [fp, #-12]
      3c:	str	r1, [r0, #4]
      40:	ldr	r0, [fp, #-4]
      44:	ldr	r2, [fp, #-12]
      48:	str	r0, [r2, #8]
      4c:	sub	r0, fp, #8
      50:	add	r2, fp, #8
      54:	str	r2, [r0]
      58:	str	r1, [sp, #16]
      5c:	ldr	r0, [sp, #16]
      60:	ldr	r1, [fp, #-4]
      64:	cmp	r0, r1
      68:	bge	120 <_l+0x120>
      6c:	ldr	r0, [fp, #-8]
      70:	add	r1, r0, #4
      74:	str	r1, [fp, #-8]
      78:	ldr	r0, [r0]
      7c:	str	r0, [sp, #12]
      80:	ldr	r0, [sp, #16]
      84:	cmp	r0, #0
      88:	bne	b8 <_l+0xb8>
      8c:	movw	r0, #12
      90:	bl	0 <malloc>
      94:	ldr	lr, [fp, #-12]
      98:	str	r0, [lr]
      9c:	ldr	r0, [fp, #-12]
      a0:	ldr	r0, [r0]
      a4:	str	r0, [fp, #-16]
      a8:	ldr	r0, [fp, #-16]
      ac:	movw	lr, #0
      b0:	str	lr, [r0, #8]
      b4:	b	e4 <_l+0xe4>
      b8:	movw	r0, #12
      bc:	bl	0 <malloc>
      c0:	ldr	lr, [fp, #-16]
      c4:	str	r0, [lr, #4]
      c8:	ldr	r0, [fp, #-16]
      cc:	ldr	lr, [fp, #-16]
      d0:	ldr	lr, [lr, #4]
      d4:	str	r0, [lr, #8]
      d8:	ldr	r0, [fp, #-16]
      dc:	ldr	r0, [r0, #4]
      e0:	str	r0, [fp, #-16]
      e4:	ldr	r0, [sp, #12]
      e8:	bl	0 <strlen>
      ec:	add	r0, r0, #1
      f0:	bl	0 <malloc>
      f4:	ldr	lr, [fp, #-16]
      f8:	str	r0, [lr]
      fc:	ldr	r0, [fp, #-16]
     100:	ldr	r0, [r0]
     104:	ldr	r1, [sp, #12]
     108:	bl	0 <strcpy>
     10c:	str	r0, [sp, #8]
     110:	ldr	r0, [sp, #16]
     114:	add	r0, r0, #1
     118:	str	r0, [sp, #16]
     11c:	b	5c <_l+0x5c>
     120:	sub	r0, fp, #8
     124:	ldr	r1, [fp, #-16]
     128:	movw	r2, #0
     12c:	str	r2, [r1, #4]
     130:	ldr	r1, [fp, #-16]
     134:	ldr	r2, [fp, #-12]
     138:	str	r1, [r2, #4]
     13c:	ldr	r1, [fp, #-12]
     140:	str	r0, [sp, #4]
     144:	mov	r0, r1
     148:	mov	sp, fp
     14c:	pop	{fp, lr}
     150:	add	sp, sp, #12
     154:	bx	lr

00000158 <_f>:
     158:	sub	sp, sp, #24
     15c:	str	r0, [sp, #16]
     160:	str	r1, [sp, #12]
     164:	ldr	r0, [sp, #16]
     168:	movw	r1, #0
     16c:	cmp	r0, r1
     170:	bne	180 <_f+0x28>
     174:	movw	r0, #0
     178:	str	r0, [sp, #20]
     17c:	b	218 <_f+0xc0>
     180:	ldr	r0, [sp, #16]
     184:	ldr	r0, [r0]
     188:	str	r0, [sp, #4]
     18c:	movw	r0, #0
     190:	str	r0, [sp, #8]
     194:	ldr	r0, [sp, #8]
     198:	ldr	r1, [sp, #12]
     19c:	cmp	r0, r1
     1a0:	movw	r0, #0
     1a4:	str	r0, [sp]
     1a8:	bge	1c4 <_f+0x6c>
     1ac:	ldr	r0, [sp, #4]
     1b0:	movw	r1, #0
     1b4:	cmp	r0, r1
     1b8:	movw	r0, #0
     1bc:	movne	r0, #1
     1c0:	str	r0, [sp]
     1c4:	ldr	r0, [sp]
     1c8:	tst	r0, #1
     1cc:	beq	1ec <_f+0x94>
     1d0:	ldr	r0, [sp, #4]
     1d4:	ldr	r0, [r0, #4]
     1d8:	str	r0, [sp, #4]
     1dc:	ldr	r0, [sp, #8]
     1e0:	add	r0, r0, #1
     1e4:	str	r0, [sp, #8]
     1e8:	b	194 <_f+0x3c>
     1ec:	ldr	r0, [sp, #12]
     1f0:	ldr	r1, [sp, #8]
     1f4:	cmp	r0, r1
     1f8:	bne	20c <_f+0xb4>
     1fc:	ldr	r0, [sp, #4]
     200:	ldr	r0, [r0]
     204:	str	r0, [sp, #20]
     208:	b	218 <_f+0xc0>
     20c:	movw	r0, #0
     210:	movt	r0, #0
     214:	str	r0, [sp, #20]
     218:	ldr	r0, [sp, #20]
     21c:	add	sp, sp, #24
     220:	bx	lr

00000224 <teste_lista_nova>:
     224:	push	{fp, lr}
     228:	mov	fp, sp
     22c:	sub	sp, sp, #40	; 0x28
     230:	movw	r0, #0
     234:	str	r0, [fp, #-8]
     238:	movw	r0, #0
     23c:	movt	r0, #0
     240:	bl	0 <printf>
     244:	movw	lr, #0
     248:	movt	lr, #0
     24c:	str	r0, [fp, #-16]
     250:	blx	lr
     254:	str	r0, [fp, #-12]
     258:	ldr	r0, [fp, #-12]
     25c:	movw	lr, #0
     260:	cmp	r0, lr
     264:	bne	2c0 <teste_lista_nova+0x9c>
     268:	movw	r0, #0
     26c:	movt	r0, #0
     270:	bl	0 <printf>
     274:	ldr	lr, [fp, #-8]
     278:	add	lr, lr, #1
     27c:	str	lr, [fp, #-8]
     280:	ldr	lr, [fp, #-8]
     284:	cmp	lr, #0
     288:	str	r0, [sp, #20]
     28c:	bne	2a4 <teste_lista_nova+0x80>
     290:	movw	r0, #0
     294:	movt	r0, #0
     298:	bl	0 <printf>
     29c:	str	r0, [sp, #16]
     2a0:	b	2b4 <teste_lista_nova+0x90>
     2a4:	movw	r0, #0
     2a8:	movt	r0, #0
     2ac:	bl	0 <printf>
     2b0:	str	r0, [sp, #12]
     2b4:	ldr	r0, [fp, #-8]
     2b8:	str	r0, [fp, #-4]
     2bc:	b	32c <teste_lista_nova+0x108>
     2c0:	ldr	r0, [fp, #-12]
     2c4:	ldr	r0, [r0, #8]
     2c8:	cmp	r0, #0
     2cc:	beq	2ec <teste_lista_nova+0xc8>
     2d0:	movw	r0, #0
     2d4:	movt	r0, #0
     2d8:	bl	0 <printf>
     2dc:	ldr	lr, [fp, #-8]
     2e0:	add	lr, lr, #1
     2e4:	str	lr, [fp, #-8]
     2e8:	str	r0, [sp, #8]
     2ec:	ldr	r0, [fp, #-12]
     2f0:	bl	0 <lista_apaga>
     2f4:	ldr	r0, [fp, #-8]
     2f8:	cmp	r0, #0
     2fc:	bne	314 <teste_lista_nova+0xf0>
     300:	movw	r0, #0
     304:	movt	r0, #0
     308:	bl	0 <printf>
     30c:	str	r0, [sp, #4]
     310:	b	324 <teste_lista_nova+0x100>
     314:	movw	r0, #0
     318:	movt	r0, #0
     31c:	bl	0 <printf>
     320:	str	r0, [sp]
     324:	ldr	r0, [fp, #-8]
     328:	str	r0, [fp, #-4]
     32c:	ldr	r0, [fp, #-4]
     330:	mov	sp, fp
     334:	pop	{fp, pc}

00000338 <teste_lista_insere>:
     338:	push	{fp, lr}
     33c:	mov	fp, sp
     340:	sub	sp, sp, #120	; 0x78
     344:	movw	r0, #0
     348:	str	r0, [fp, #-8]
     34c:	movw	r0, #0
     350:	movt	r0, #0
     354:	str	r0, [fp, #-16]
     358:	movw	r0, #0
     35c:	movt	r0, #0
     360:	str	r0, [fp, #-20]	; 0xffffffec
     364:	ldr	r1, [fp, #-16]
     368:	ldr	r2, [fp, #-16]
     36c:	movw	r0, #2
     370:	bl	0 <_l>
     374:	str	r0, [fp, #-24]	; 0xffffffe8
     378:	movw	r0, #0
     37c:	movt	r0, #0
     380:	bl	0 <printf>
     384:	ldr	r1, [fp, #-24]	; 0xffffffe8
     388:	ldr	r2, [fp, #-20]	; 0xffffffec
     38c:	ldr	lr, [fp, #-24]	; 0xffffffe8
     390:	ldr	lr, [lr]
     394:	ldr	lr, [lr, #4]
     398:	str	r0, [fp, #-28]	; 0xffffffe4
     39c:	mov	r0, r1
     3a0:	mov	r1, r2
     3a4:	mov	r2, lr
     3a8:	bl	0 <lista_insere>
     3ac:	str	r0, [fp, #-12]
     3b0:	ldr	r0, [fp, #-12]
     3b4:	movw	r1, #0
     3b8:	cmp	r0, r1
     3bc:	bne	3dc <teste_lista_insere+0xa4>
     3c0:	movw	r0, #0
     3c4:	movt	r0, #0
     3c8:	bl	0 <printf>
     3cc:	ldr	lr, [fp, #-8]
     3d0:	add	lr, lr, #1
     3d4:	str	lr, [fp, #-8]
     3d8:	str	r0, [fp, #-32]	; 0xffffffe0
     3dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     3e0:	ldr	r0, [r0, #8]
     3e4:	cmp	r0, #3
     3e8:	beq	408 <teste_lista_insere+0xd0>
     3ec:	movw	r0, #0
     3f0:	movt	r0, #0
     3f4:	bl	0 <printf>
     3f8:	ldr	lr, [fp, #-8]
     3fc:	add	lr, lr, #1
     400:	str	lr, [fp, #-8]
     404:	str	r0, [fp, #-36]	; 0xffffffdc
     408:	ldr	r0, [fp, #-24]	; 0xffffffe8
     40c:	ldr	r0, [r0, #8]
     410:	cmp	r0, #3
     414:	beq	454 <teste_lista_insere+0x11c>
     418:	ldr	r0, [fp, #-8]
     41c:	cmp	r0, #0
     420:	bne	438 <teste_lista_insere+0x100>
     424:	movw	r0, #0
     428:	movt	r0, #0
     42c:	bl	0 <printf>
     430:	str	r0, [fp, #-40]	; 0xffffffd8
     434:	b	448 <teste_lista_insere+0x110>
     438:	movw	r0, #0
     43c:	movt	r0, #0
     440:	bl	0 <printf>
     444:	str	r0, [fp, #-44]	; 0xffffffd4
     448:	ldr	r0, [fp, #-8]
     44c:	str	r0, [fp, #-4]
     450:	b	834 <teste_lista_insere+0x4fc>
     454:	ldr	r0, [fp, #-24]	; 0xffffffe8
     458:	ldr	r0, [r0]
     45c:	ldr	r0, [r0]
     460:	ldr	r1, [fp, #-16]
     464:	bl	0 <strcmp>
     468:	cmp	r0, #0
     46c:	bne	4b4 <teste_lista_insere+0x17c>
     470:	ldr	r0, [fp, #-24]	; 0xffffffe8
     474:	ldr	r0, [r0]
     478:	ldr	r0, [r0, #4]
     47c:	ldr	r0, [r0]
     480:	ldr	r1, [fp, #-20]	; 0xffffffec
     484:	bl	0 <strcmp>
     488:	cmp	r0, #0
     48c:	bne	4b4 <teste_lista_insere+0x17c>
     490:	ldr	r0, [fp, #-24]	; 0xffffffe8
     494:	ldr	r0, [r0]
     498:	ldr	r0, [r0, #4]
     49c:	ldr	r0, [r0, #4]
     4a0:	ldr	r0, [r0]
     4a4:	ldr	r1, [fp, #-16]
     4a8:	bl	0 <strcmp>
     4ac:	cmp	r0, #0
     4b0:	beq	4d0 <teste_lista_insere+0x198>
     4b4:	movw	r0, #0
     4b8:	movt	r0, #0
     4bc:	bl	0 <printf>
     4c0:	ldr	lr, [fp, #-8]
     4c4:	add	lr, lr, #1
     4c8:	str	lr, [fp, #-8]
     4cc:	str	r0, [fp, #-48]	; 0xffffffd0
     4d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     4d4:	ldr	r1, [fp, #-20]	; 0xffffffec
     4d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     4dc:	ldr	r2, [r2]
     4e0:	bl	0 <lista_insere>
     4e4:	str	r0, [fp, #-12]
     4e8:	ldr	r0, [fp, #-12]
     4ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
     4f0:	ldr	r1, [r1]
     4f4:	cmp	r0, r1
     4f8:	beq	518 <teste_lista_insere+0x1e0>
     4fc:	movw	r0, #0
     500:	movt	r0, #0
     504:	bl	0 <printf>
     508:	ldr	lr, [fp, #-8]
     50c:	add	lr, lr, #1
     510:	str	lr, [fp, #-8]
     514:	str	r0, [fp, #-52]	; 0xffffffcc
     518:	ldr	r0, [fp, #-24]	; 0xffffffe8
     51c:	ldr	r0, [r0, #8]
     520:	cmp	r0, #4
     524:	beq	544 <teste_lista_insere+0x20c>
     528:	movw	r0, #0
     52c:	movt	r0, #0
     530:	bl	0 <printf>
     534:	ldr	lr, [fp, #-8]
     538:	add	lr, lr, #1
     53c:	str	lr, [fp, #-8]
     540:	str	r0, [fp, #-56]	; 0xffffffc8
     544:	ldr	r0, [fp, #-24]	; 0xffffffe8
     548:	ldr	r0, [r0, #8]
     54c:	cmp	r0, #4
     550:	beq	590 <teste_lista_insere+0x258>
     554:	ldr	r0, [fp, #-8]
     558:	cmp	r0, #0
     55c:	bne	574 <teste_lista_insere+0x23c>
     560:	movw	r0, #0
     564:	movt	r0, #0
     568:	bl	0 <printf>
     56c:	str	r0, [sp, #60]	; 0x3c
     570:	b	584 <teste_lista_insere+0x24c>
     574:	movw	r0, #0
     578:	movt	r0, #0
     57c:	bl	0 <printf>
     580:	str	r0, [sp, #56]	; 0x38
     584:	ldr	r0, [fp, #-8]
     588:	str	r0, [fp, #-4]
     58c:	b	834 <teste_lista_insere+0x4fc>
     590:	ldr	r0, [fp, #-24]	; 0xffffffe8
     594:	ldr	r0, [r0]
     598:	ldr	r0, [r0]
     59c:	ldr	r1, [fp, #-20]	; 0xffffffec
     5a0:	bl	0 <strcmp>
     5a4:	cmp	r0, #0
     5a8:	bne	618 <teste_lista_insere+0x2e0>
     5ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
     5b0:	ldr	r0, [r0]
     5b4:	ldr	r0, [r0, #4]
     5b8:	ldr	r0, [r0]
     5bc:	ldr	r1, [fp, #-16]
     5c0:	bl	0 <strcmp>
     5c4:	cmp	r0, #0
     5c8:	bne	618 <teste_lista_insere+0x2e0>
     5cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     5d0:	ldr	r0, [r0]
     5d4:	ldr	r0, [r0, #4]
     5d8:	ldr	r0, [r0, #4]
     5dc:	ldr	r0, [r0]
     5e0:	ldr	r1, [fp, #-20]	; 0xffffffec
     5e4:	bl	0 <strcmp>
     5e8:	cmp	r0, #0
     5ec:	bne	618 <teste_lista_insere+0x2e0>
     5f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     5f4:	ldr	r0, [r0]
     5f8:	ldr	r0, [r0, #4]
     5fc:	ldr	r0, [r0, #4]
     600:	ldr	r0, [r0, #4]
     604:	ldr	r0, [r0]
     608:	ldr	r1, [fp, #-16]
     60c:	bl	0 <strcmp>
     610:	cmp	r0, #0
     614:	beq	634 <teste_lista_insere+0x2fc>
     618:	movw	r0, #0
     61c:	movt	r0, #0
     620:	bl	0 <printf>
     624:	ldr	lr, [fp, #-8]
     628:	add	lr, lr, #1
     62c:	str	lr, [fp, #-8]
     630:	str	r0, [sp, #52]	; 0x34
     634:	ldr	r0, [fp, #-24]	; 0xffffffe8
     638:	movw	r1, #0
     63c:	movt	r1, #0
     640:	movw	r2, #0
     644:	bl	0 <lista_insere>
     648:	ldr	r1, [fp, #-24]	; 0xffffffe8
     64c:	ldr	r1, [r1, #8]
     650:	cmp	r1, #5
     654:	str	r0, [sp, #48]	; 0x30
     658:	beq	678 <teste_lista_insere+0x340>
     65c:	movw	r0, #0
     660:	movt	r0, #0
     664:	bl	0 <printf>
     668:	ldr	lr, [fp, #-8]
     66c:	add	lr, lr, #1
     670:	str	lr, [fp, #-8]
     674:	str	r0, [sp, #44]	; 0x2c
     678:	ldr	r0, [fp, #-24]	; 0xffffffe8
     67c:	ldr	r0, [r0, #8]
     680:	cmp	r0, #5
     684:	beq	6c4 <teste_lista_insere+0x38c>
     688:	ldr	r0, [fp, #-8]
     68c:	cmp	r0, #0
     690:	bne	6a8 <teste_lista_insere+0x370>
     694:	movw	r0, #0
     698:	movt	r0, #0
     69c:	bl	0 <printf>
     6a0:	str	r0, [sp, #40]	; 0x28
     6a4:	b	6b8 <teste_lista_insere+0x380>
     6a8:	movw	r0, #0
     6ac:	movt	r0, #0
     6b0:	bl	0 <printf>
     6b4:	str	r0, [sp, #36]	; 0x24
     6b8:	ldr	r0, [fp, #-8]
     6bc:	str	r0, [fp, #-4]
     6c0:	b	834 <teste_lista_insere+0x4fc>
     6c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     6c8:	ldr	r0, [r0]
     6cc:	ldr	r0, [r0, #4]
     6d0:	ldr	r0, [r0, #4]
     6d4:	ldr	r0, [r0, #4]
     6d8:	ldr	r0, [r0, #4]
     6dc:	ldr	r0, [r0]
     6e0:	movw	r1, #0
     6e4:	movt	r1, #0
     6e8:	bl	0 <strcmp>
     6ec:	cmp	r0, #0
     6f0:	beq	710 <teste_lista_insere+0x3d8>
     6f4:	movw	r0, #0
     6f8:	movt	r0, #0
     6fc:	bl	0 <printf>
     700:	ldr	lr, [fp, #-8]
     704:	add	lr, lr, #1
     708:	str	lr, [fp, #-8]
     70c:	str	r0, [sp, #32]
     710:	ldr	r0, [fp, #-24]	; 0xffffffe8
     714:	bl	0 <lista_apaga>
     718:	movw	r0, #0
     71c:	movt	r0, #0
     720:	blx	r0
     724:	str	r0, [fp, #-24]	; 0xffffffe8
     728:	ldr	r0, [fp, #-24]	; 0xffffffe8
     72c:	movw	r1, #0
     730:	movt	r1, #0
     734:	movw	r2, #0
     738:	bl	0 <lista_insere>
     73c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     740:	ldr	r1, [r1, #8]
     744:	cmp	r1, #1
     748:	str	r0, [sp, #28]
     74c:	beq	76c <teste_lista_insere+0x434>
     750:	movw	r0, #0
     754:	movt	r0, #0
     758:	bl	0 <printf>
     75c:	ldr	lr, [fp, #-8]
     760:	add	lr, lr, #1
     764:	str	lr, [fp, #-8]
     768:	str	r0, [sp, #24]
     76c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     770:	bl	0 <lista_tamanho>
     774:	cmp	r0, #1
     778:	beq	7b8 <teste_lista_insere+0x480>
     77c:	ldr	r0, [fp, #-8]
     780:	cmp	r0, #0
     784:	bne	79c <teste_lista_insere+0x464>
     788:	movw	r0, #0
     78c:	movt	r0, #0
     790:	bl	0 <printf>
     794:	str	r0, [sp, #20]
     798:	b	7ac <teste_lista_insere+0x474>
     79c:	movw	r0, #0
     7a0:	movt	r0, #0
     7a4:	bl	0 <printf>
     7a8:	str	r0, [sp, #16]
     7ac:	ldr	r0, [fp, #-8]
     7b0:	str	r0, [fp, #-4]
     7b4:	b	834 <teste_lista_insere+0x4fc>
     7b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     7bc:	ldr	r0, [r0]
     7c0:	ldr	r0, [r0]
     7c4:	movw	r1, #0
     7c8:	movt	r1, #0
     7cc:	bl	0 <strcmp>
     7d0:	cmp	r0, #0
     7d4:	beq	7f4 <teste_lista_insere+0x4bc>
     7d8:	movw	r0, #0
     7dc:	movt	r0, #0
     7e0:	bl	0 <printf>
     7e4:	ldr	lr, [fp, #-8]
     7e8:	add	lr, lr, #1
     7ec:	str	lr, [fp, #-8]
     7f0:	str	r0, [sp, #12]
     7f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     7f8:	bl	0 <lista_apaga>
     7fc:	ldr	r0, [fp, #-8]
     800:	cmp	r0, #0
     804:	bne	81c <teste_lista_insere+0x4e4>
     808:	movw	r0, #0
     80c:	movt	r0, #0
     810:	bl	0 <printf>
     814:	str	r0, [sp, #8]
     818:	b	82c <teste_lista_insere+0x4f4>
     81c:	movw	r0, #0
     820:	movt	r0, #0
     824:	bl	0 <printf>
     828:	str	r0, [sp, #4]
     82c:	ldr	r0, [fp, #-8]
     830:	str	r0, [fp, #-4]
     834:	ldr	r0, [fp, #-4]
     838:	mov	sp, fp
     83c:	pop	{fp, pc}

00000840 <teste_lista_remove>:
     840:	push	{fp, lr}
     844:	mov	fp, sp
     848:	sub	sp, sp, #48	; 0x30
     84c:	movw	r0, #0
     850:	str	r0, [fp, #-4]
     854:	movw	r0, #5
     858:	movw	r1, #0
     85c:	movt	r1, #0
     860:	movw	r2, #0
     864:	movt	r2, #0
     868:	movw	r3, #0
     86c:	movt	r3, #0
     870:	movw	ip, #0
     874:	movt	ip, #0
     878:	str	ip, [sp]
     87c:	movw	ip, #0
     880:	movt	ip, #0
     884:	str	ip, [sp, #4]
     888:	bl	0 <_l>
     88c:	str	r0, [fp, #-12]
     890:	movw	r0, #0
     894:	movt	r0, #0
     898:	bl	0 <printf>
     89c:	ldr	r1, [fp, #-12]
     8a0:	ldr	r2, [fp, #-12]
     8a4:	ldr	r2, [r2]
     8a8:	ldr	r2, [r2, #4]
     8ac:	ldr	r2, [r2, #4]
     8b0:	ldr	r2, [r2, #4]
     8b4:	str	r0, [fp, #-16]
     8b8:	mov	r0, r1
     8bc:	mov	r1, r2
     8c0:	bl	0 <lista_remove>
     8c4:	str	r0, [fp, #-8]
     8c8:	ldr	r0, [fp, #-8]
     8cc:	ldr	r1, [fp, #-12]
     8d0:	ldr	r1, [r1, #4]
     8d4:	cmp	r0, r1
     8d8:	beq	8f8 <teste_lista_remove+0xb8>
     8dc:	movw	r0, #0
     8e0:	movt	r0, #0
     8e4:	bl	0 <printf>
     8e8:	ldr	lr, [fp, #-4]
     8ec:	add	lr, lr, #1
     8f0:	str	lr, [fp, #-4]
     8f4:	str	r0, [fp, #-20]	; 0xffffffec
     8f8:	ldr	r0, [fp, #-12]
     8fc:	ldr	r0, [r0, #8]
     900:	cmp	r0, #4
     904:	beq	924 <teste_lista_remove+0xe4>
     908:	movw	r0, #0
     90c:	movt	r0, #0
     910:	bl	0 <printf>
     914:	ldr	lr, [fp, #-4]
     918:	add	lr, lr, #1
     91c:	str	lr, [fp, #-4]
     920:	str	r0, [sp, #24]
     924:	ldr	r0, [fp, #-12]
     928:	ldr	r0, [r0]
     92c:	ldr	r0, [r0]
     930:	movw	r1, #0
     934:	movt	r1, #0
     938:	bl	0 <strcmp>
     93c:	cmp	r0, #0
     940:	bne	9bc <teste_lista_remove+0x17c>
     944:	ldr	r0, [fp, #-12]
     948:	ldr	r0, [r0]
     94c:	ldr	r0, [r0, #4]
     950:	ldr	r0, [r0]
     954:	movw	r1, #0
     958:	movt	r1, #0
     95c:	bl	0 <strcmp>
     960:	cmp	r0, #0
     964:	bne	9bc <teste_lista_remove+0x17c>
     968:	ldr	r0, [fp, #-12]
     96c:	ldr	r0, [r0]
     970:	ldr	r0, [r0, #4]
     974:	ldr	r0, [r0, #4]
     978:	ldr	r0, [r0]
     97c:	movw	r1, #0
     980:	movt	r1, #0
     984:	bl	0 <strcmp>
     988:	cmp	r0, #0
     98c:	bne	9bc <teste_lista_remove+0x17c>
     990:	ldr	r0, [fp, #-12]
     994:	ldr	r0, [r0]
     998:	ldr	r0, [r0, #4]
     99c:	ldr	r0, [r0, #4]
     9a0:	ldr	r0, [r0, #4]
     9a4:	ldr	r0, [r0]
     9a8:	movw	r1, #0
     9ac:	movt	r1, #0
     9b0:	bl	0 <strcmp>
     9b4:	cmp	r0, #0
     9b8:	beq	9d8 <teste_lista_remove+0x198>
     9bc:	movw	r0, #0
     9c0:	movt	r0, #0
     9c4:	bl	0 <printf>
     9c8:	ldr	lr, [fp, #-4]
     9cc:	add	lr, lr, #1
     9d0:	str	lr, [fp, #-4]
     9d4:	str	r0, [sp, #20]
     9d8:	ldr	r0, [fp, #-12]
     9dc:	movw	r1, #0
     9e0:	bl	0 <lista_remove>
     9e4:	str	r0, [fp, #-8]
     9e8:	ldr	r0, [fp, #-8]
     9ec:	movw	r1, #0
     9f0:	cmp	r0, r1
     9f4:	beq	a14 <teste_lista_remove+0x1d4>
     9f8:	movw	r0, #0
     9fc:	movt	r0, #0
     a00:	bl	0 <printf>
     a04:	ldr	lr, [fp, #-4]
     a08:	add	lr, lr, #1
     a0c:	str	lr, [fp, #-4]
     a10:	str	r0, [sp, #16]
     a14:	ldr	r0, [fp, #-12]
     a18:	bl	0 <lista_apaga>
     a1c:	ldr	r0, [fp, #-4]
     a20:	cmp	r0, #0
     a24:	bne	a3c <teste_lista_remove+0x1fc>
     a28:	movw	r0, #0
     a2c:	movt	r0, #0
     a30:	bl	0 <printf>
     a34:	str	r0, [sp, #12]
     a38:	b	a4c <teste_lista_remove+0x20c>
     a3c:	movw	r0, #0
     a40:	movt	r0, #0
     a44:	bl	0 <printf>
     a48:	str	r0, [sp, #8]
     a4c:	ldr	r0, [fp, #-4]
     a50:	mov	sp, fp
     a54:	pop	{fp, pc}

00000a58 <teste_lista_pesquisa>:
     a58:	push	{r4, r5, fp, lr}
     a5c:	add	fp, sp, #8
     a60:	sub	sp, sp, #64	; 0x40
     a64:	movw	r0, #0
     a68:	str	r0, [fp, #-12]
     a6c:	movw	r0, #0
     a70:	movt	r0, #0
     a74:	str	r0, [fp, #-16]
     a78:	movw	r0, #0
     a7c:	movt	r0, #0
     a80:	str	r0, [fp, #-20]	; 0xffffffec
     a84:	ldr	r1, [fp, #-16]
     a88:	ldr	r2, [fp, #-16]
     a8c:	ldr	r3, [fp, #-16]
     a90:	ldr	r0, [fp, #-16]
     a94:	ldr	ip, [fp, #-20]	; 0xffffffec
     a98:	ldr	lr, [fp, #-16]
     a9c:	ldr	r4, [fp, #-16]
     aa0:	movw	r5, #7
     aa4:	str	r0, [fp, #-28]	; 0xffffffe4
     aa8:	mov	r0, r5
     aac:	ldr	r5, [fp, #-28]	; 0xffffffe4
     ab0:	str	r5, [sp]
     ab4:	str	ip, [sp, #4]
     ab8:	str	lr, [sp, #8]
     abc:	str	r4, [sp, #12]
     ac0:	bl	0 <_l>
     ac4:	str	r0, [fp, #-24]	; 0xffffffe8
     ac8:	movw	r0, #0
     acc:	movt	r0, #0
     ad0:	bl	0 <printf>
     ad4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     ad8:	ldr	r2, [fp, #-20]	; 0xffffffec
     adc:	str	r0, [fp, #-32]	; 0xffffffe0
     ae0:	mov	r0, r1
     ae4:	mov	r1, r2
     ae8:	movw	r2, #0
     aec:	bl	0 <lista_pesquisa>
     af0:	ldr	r1, [fp, #-24]	; 0xffffffe8
     af4:	ldr	r1, [r1]
     af8:	ldr	r1, [r1, #4]
     afc:	ldr	r1, [r1, #4]
     b00:	ldr	r1, [r1, #4]
     b04:	ldr	r1, [r1, #4]
     b08:	cmp	r0, r1
     b0c:	beq	b2c <teste_lista_pesquisa+0xd4>
     b10:	movw	r0, #0
     b14:	movt	r0, #0
     b18:	bl	0 <printf>
     b1c:	ldr	lr, [fp, #-12]
     b20:	add	lr, lr, #1
     b24:	str	lr, [fp, #-12]
     b28:	str	r0, [sp, #36]	; 0x24
     b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b30:	movw	r1, #0
     b34:	movt	r1, #0
     b38:	movw	r2, #0
     b3c:	bl	0 <lista_pesquisa>
     b40:	movw	r1, #0
     b44:	cmp	r0, r1
     b48:	beq	b68 <teste_lista_pesquisa+0x110>
     b4c:	movw	r0, #0
     b50:	movt	r0, #0
     b54:	bl	0 <printf>
     b58:	ldr	lr, [fp, #-12]
     b5c:	add	lr, lr, #1
     b60:	str	lr, [fp, #-12]
     b64:	str	r0, [sp, #32]
     b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b6c:	ldr	r1, [fp, #-16]
     b70:	movw	r2, #1
     b74:	bl	0 <lista_pesquisa>
     b78:	ldr	r1, [fp, #-24]	; 0xffffffe8
     b7c:	ldr	r1, [r1]
     b80:	ldr	r1, [r1, #4]
     b84:	ldr	r1, [r1, #4]
     b88:	ldr	r1, [r1, #4]
     b8c:	ldr	r1, [r1, #4]
     b90:	ldr	r1, [r1, #4]
     b94:	ldr	r1, [r1, #4]
     b98:	cmp	r0, r1
     b9c:	beq	bbc <teste_lista_pesquisa+0x164>
     ba0:	movw	r0, #0
     ba4:	movt	r0, #0
     ba8:	bl	0 <printf>
     bac:	ldr	lr, [fp, #-12]
     bb0:	add	lr, lr, #1
     bb4:	str	lr, [fp, #-12]
     bb8:	str	r0, [sp, #28]
     bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     bc0:	movw	r1, #0
     bc4:	movt	r1, #0
     bc8:	movw	r2, #1
     bcc:	bl	0 <lista_pesquisa>
     bd0:	movw	r1, #0
     bd4:	cmp	r0, r1
     bd8:	beq	bf8 <teste_lista_pesquisa+0x1a0>
     bdc:	movw	r0, #0
     be0:	movt	r0, #0
     be4:	bl	0 <printf>
     be8:	ldr	lr, [fp, #-12]
     bec:	add	lr, lr, #1
     bf0:	str	lr, [fp, #-12]
     bf4:	str	r0, [sp, #24]
     bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     bfc:	bl	0 <lista_apaga>
     c00:	ldr	r0, [fp, #-12]
     c04:	cmp	r0, #0
     c08:	bne	c20 <teste_lista_pesquisa+0x1c8>
     c0c:	movw	r0, #0
     c10:	movt	r0, #0
     c14:	bl	0 <printf>
     c18:	str	r0, [sp, #20]
     c1c:	b	c30 <teste_lista_pesquisa+0x1d8>
     c20:	movw	r0, #0
     c24:	movt	r0, #0
     c28:	bl	0 <printf>
     c2c:	str	r0, [sp, #16]
     c30:	ldr	r0, [fp, #-12]
     c34:	sub	sp, fp, #8
     c38:	pop	{r4, r5, fp, pc}

00000c3c <teste_lista_ordena>:
     c3c:	push	{fp, lr}
     c40:	mov	fp, sp
     c44:	sub	sp, sp, #48	; 0x30
     c48:	movw	r0, #0
     c4c:	str	r0, [fp, #-4]
     c50:	movw	r0, #5
     c54:	movw	r1, #0
     c58:	movt	r1, #0
     c5c:	movw	r2, #0
     c60:	movt	r2, #0
     c64:	movw	r3, #0
     c68:	movt	r3, #0
     c6c:	movw	ip, #0
     c70:	movt	ip, #0
     c74:	str	ip, [sp]
     c78:	movw	ip, #0
     c7c:	movt	ip, #0
     c80:	str	ip, [sp, #4]
     c84:	bl	0 <_l>
     c88:	str	r0, [fp, #-12]
     c8c:	movw	r0, #0
     c90:	movt	r0, #0
     c94:	bl	0 <printf>
     c98:	movw	r1, #0
     c9c:	str	r0, [fp, #-16]
     ca0:	mov	r0, r1
     ca4:	bl	0 <lista_ordena>
     ca8:	str	r0, [fp, #-8]
     cac:	ldr	r0, [fp, #-8]
     cb0:	cmn	r0, #1
     cb4:	beq	cd4 <teste_lista_ordena+0x98>
     cb8:	movw	r0, #0
     cbc:	movt	r0, #0
     cc0:	bl	0 <printf>
     cc4:	ldr	lr, [fp, #-4]
     cc8:	add	lr, lr, #1
     ccc:	str	lr, [fp, #-4]
     cd0:	str	r0, [fp, #-20]	; 0xffffffec
     cd4:	ldr	r0, [fp, #-12]
     cd8:	bl	0 <lista_ordena>
     cdc:	ldr	lr, [fp, #-12]
     ce0:	ldr	lr, [lr]
     ce4:	ldr	lr, [lr]
     ce8:	movw	r1, #0
     cec:	movt	r1, #0
     cf0:	str	r0, [sp, #24]
     cf4:	mov	r0, lr
     cf8:	bl	0 <strcmp>
     cfc:	cmp	r0, #0
     d00:	bne	dac <teste_lista_ordena+0x170>
     d04:	ldr	r0, [fp, #-12]
     d08:	ldr	r0, [r0]
     d0c:	ldr	r0, [r0, #4]
     d10:	ldr	r0, [r0]
     d14:	movw	r1, #0
     d18:	movt	r1, #0
     d1c:	bl	0 <strcmp>
     d20:	cmp	r0, #0
     d24:	bne	dac <teste_lista_ordena+0x170>
     d28:	ldr	r0, [fp, #-12]
     d2c:	ldr	r0, [r0]
     d30:	ldr	r0, [r0, #4]
     d34:	ldr	r0, [r0, #4]
     d38:	ldr	r0, [r0]
     d3c:	movw	r1, #0
     d40:	movt	r1, #0
     d44:	bl	0 <strcmp>
     d48:	cmp	r0, #0
     d4c:	bne	dac <teste_lista_ordena+0x170>
     d50:	ldr	r0, [fp, #-12]
     d54:	ldr	r0, [r0]
     d58:	ldr	r0, [r0, #4]
     d5c:	ldr	r0, [r0, #4]
     d60:	ldr	r0, [r0, #4]
     d64:	ldr	r0, [r0]
     d68:	movw	r1, #0
     d6c:	movt	r1, #0
     d70:	bl	0 <strcmp>
     d74:	cmp	r0, #0
     d78:	bne	dac <teste_lista_ordena+0x170>
     d7c:	ldr	r0, [fp, #-12]
     d80:	ldr	r0, [r0]
     d84:	ldr	r0, [r0, #4]
     d88:	ldr	r0, [r0, #4]
     d8c:	ldr	r0, [r0, #4]
     d90:	ldr	r0, [r0, #4]
     d94:	ldr	r0, [r0]
     d98:	movw	r1, #0
     d9c:	movt	r1, #0
     da0:	bl	0 <strcmp>
     da4:	cmp	r0, #0
     da8:	beq	dc8 <teste_lista_ordena+0x18c>
     dac:	movw	r0, #0
     db0:	movt	r0, #0
     db4:	bl	0 <printf>
     db8:	ldr	lr, [fp, #-4]
     dbc:	add	lr, lr, #1
     dc0:	str	lr, [fp, #-4]
     dc4:	str	r0, [sp, #20]
     dc8:	ldr	r0, [fp, #-12]
     dcc:	ldr	r0, [r0, #4]
     dd0:	ldr	r0, [r0]
     dd4:	movw	r1, #0
     dd8:	movt	r1, #0
     ddc:	bl	0 <strcmp>
     de0:	cmp	r0, #0
     de4:	bne	e90 <teste_lista_ordena+0x254>
     de8:	ldr	r0, [fp, #-12]
     dec:	ldr	r0, [r0, #4]
     df0:	ldr	r0, [r0, #8]
     df4:	ldr	r0, [r0]
     df8:	movw	r1, #0
     dfc:	movt	r1, #0
     e00:	bl	0 <strcmp>
     e04:	cmp	r0, #0
     e08:	bne	e90 <teste_lista_ordena+0x254>
     e0c:	ldr	r0, [fp, #-12]
     e10:	ldr	r0, [r0, #4]
     e14:	ldr	r0, [r0, #8]
     e18:	ldr	r0, [r0, #8]
     e1c:	ldr	r0, [r0]
     e20:	movw	r1, #0
     e24:	movt	r1, #0
     e28:	bl	0 <strcmp>
     e2c:	cmp	r0, #0
     e30:	bne	e90 <teste_lista_ordena+0x254>
     e34:	ldr	r0, [fp, #-12]
     e38:	ldr	r0, [r0, #4]
     e3c:	ldr	r0, [r0, #8]
     e40:	ldr	r0, [r0, #8]
     e44:	ldr	r0, [r0, #8]
     e48:	ldr	r0, [r0]
     e4c:	movw	r1, #0
     e50:	movt	r1, #0
     e54:	bl	0 <strcmp>
     e58:	cmp	r0, #0
     e5c:	bne	e90 <teste_lista_ordena+0x254>
     e60:	ldr	r0, [fp, #-12]
     e64:	ldr	r0, [r0, #4]
     e68:	ldr	r0, [r0, #8]
     e6c:	ldr	r0, [r0, #8]
     e70:	ldr	r0, [r0, #8]
     e74:	ldr	r0, [r0, #8]
     e78:	ldr	r0, [r0]
     e7c:	movw	r1, #0
     e80:	movt	r1, #0
     e84:	bl	0 <strcmp>
     e88:	cmp	r0, #0
     e8c:	beq	eac <teste_lista_ordena+0x270>
     e90:	movw	r0, #0
     e94:	movt	r0, #0
     e98:	bl	0 <printf>
     e9c:	ldr	lr, [fp, #-4]
     ea0:	add	lr, lr, #1
     ea4:	str	lr, [fp, #-4]
     ea8:	str	r0, [sp, #16]
     eac:	ldr	r0, [fp, #-12]
     eb0:	bl	0 <lista_apaga>
     eb4:	ldr	r0, [fp, #-4]
     eb8:	cmp	r0, #0
     ebc:	bne	ed4 <teste_lista_ordena+0x298>
     ec0:	movw	r0, #0
     ec4:	movt	r0, #0
     ec8:	bl	0 <printf>
     ecc:	str	r0, [sp, #12]
     ed0:	b	ee4 <teste_lista_ordena+0x2a8>
     ed4:	movw	r0, #0
     ed8:	movt	r0, #0
     edc:	bl	0 <printf>
     ee0:	str	r0, [sp, #8]
     ee4:	ldr	r0, [fp, #-4]
     ee8:	mov	sp, fp
     eec:	pop	{fp, pc}

00000ef0 <teste_lista_inverte>:
     ef0:	push	{fp, lr}
     ef4:	mov	fp, sp
     ef8:	sub	sp, sp, #48	; 0x30
     efc:	movw	r0, #0
     f00:	str	r0, [fp, #-4]
     f04:	movw	r0, #5
     f08:	movw	r1, #0
     f0c:	movt	r1, #0
     f10:	movw	r2, #0
     f14:	movt	r2, #0
     f18:	movw	r3, #0
     f1c:	movt	r3, #0
     f20:	movw	ip, #0
     f24:	movt	ip, #0
     f28:	str	ip, [sp]
     f2c:	movw	ip, #0
     f30:	movt	ip, #0
     f34:	str	ip, [sp, #4]
     f38:	bl	0 <_l>
     f3c:	str	r0, [fp, #-12]
     f40:	movw	r0, #0
     f44:	movt	r0, #0
     f48:	bl	0 <printf>
     f4c:	movw	r1, #0
     f50:	str	r0, [fp, #-16]
     f54:	mov	r0, r1
     f58:	bl	0 <lista_inverte>
     f5c:	str	r0, [fp, #-8]
     f60:	ldr	r0, [fp, #-8]
     f64:	cmn	r0, #1
     f68:	beq	f88 <teste_lista_inverte+0x98>
     f6c:	movw	r0, #0
     f70:	movt	r0, #0
     f74:	bl	0 <printf>
     f78:	ldr	lr, [fp, #-4]
     f7c:	add	lr, lr, #1
     f80:	str	lr, [fp, #-4]
     f84:	str	r0, [fp, #-20]	; 0xffffffec
     f88:	ldr	r0, [fp, #-12]
     f8c:	bl	0 <lista_inverte>
     f90:	str	r0, [fp, #-8]
     f94:	ldr	r0, [fp, #-12]
     f98:	ldr	r0, [r0, #8]
     f9c:	cmp	r0, #5
     fa0:	beq	fc0 <teste_lista_inverte+0xd0>
     fa4:	movw	r0, #0
     fa8:	movt	r0, #0
     fac:	bl	0 <printf>
     fb0:	ldr	lr, [fp, #-4]
     fb4:	add	lr, lr, #1
     fb8:	str	lr, [fp, #-4]
     fbc:	str	r0, [sp, #24]
     fc0:	ldr	r0, [fp, #-12]
     fc4:	ldr	r0, [r0]
     fc8:	ldr	r0, [r0]
     fcc:	movw	r1, #0
     fd0:	movt	r1, #0
     fd4:	bl	0 <strcmp>
     fd8:	cmp	r0, #0
     fdc:	bne	1088 <teste_lista_inverte+0x198>
     fe0:	ldr	r0, [fp, #-12]
     fe4:	ldr	r0, [r0]
     fe8:	ldr	r0, [r0, #4]
     fec:	ldr	r0, [r0]
     ff0:	movw	r1, #0
     ff4:	movt	r1, #0
     ff8:	bl	0 <strcmp>
     ffc:	cmp	r0, #0
    1000:	bne	1088 <teste_lista_inverte+0x198>
    1004:	ldr	r0, [fp, #-12]
    1008:	ldr	r0, [r0]
    100c:	ldr	r0, [r0, #4]
    1010:	ldr	r0, [r0, #4]
    1014:	ldr	r0, [r0]
    1018:	movw	r1, #0
    101c:	movt	r1, #0
    1020:	bl	0 <strcmp>
    1024:	cmp	r0, #0
    1028:	bne	1088 <teste_lista_inverte+0x198>
    102c:	ldr	r0, [fp, #-12]
    1030:	ldr	r0, [r0]
    1034:	ldr	r0, [r0, #4]
    1038:	ldr	r0, [r0, #4]
    103c:	ldr	r0, [r0, #4]
    1040:	ldr	r0, [r0]
    1044:	movw	r1, #0
    1048:	movt	r1, #0
    104c:	bl	0 <strcmp>
    1050:	cmp	r0, #0
    1054:	bne	1088 <teste_lista_inverte+0x198>
    1058:	ldr	r0, [fp, #-12]
    105c:	ldr	r0, [r0]
    1060:	ldr	r0, [r0, #4]
    1064:	ldr	r0, [r0, #4]
    1068:	ldr	r0, [r0, #4]
    106c:	ldr	r0, [r0, #4]
    1070:	ldr	r0, [r0]
    1074:	movw	r1, #0
    1078:	movt	r1, #0
    107c:	bl	0 <strcmp>
    1080:	cmp	r0, #0
    1084:	beq	10a4 <teste_lista_inverte+0x1b4>
    1088:	movw	r0, #0
    108c:	movt	r0, #0
    1090:	bl	0 <printf>
    1094:	ldr	lr, [fp, #-4]
    1098:	add	lr, lr, #1
    109c:	str	lr, [fp, #-4]
    10a0:	str	r0, [sp, #20]
    10a4:	ldr	r0, [fp, #-12]
    10a8:	ldr	r0, [r0, #4]
    10ac:	ldr	r0, [r0]
    10b0:	movw	r1, #0
    10b4:	movt	r1, #0
    10b8:	bl	0 <strcmp>
    10bc:	cmp	r0, #0
    10c0:	bne	116c <teste_lista_inverte+0x27c>
    10c4:	ldr	r0, [fp, #-12]
    10c8:	ldr	r0, [r0, #4]
    10cc:	ldr	r0, [r0, #8]
    10d0:	ldr	r0, [r0]
    10d4:	movw	r1, #0
    10d8:	movt	r1, #0
    10dc:	bl	0 <strcmp>
    10e0:	cmp	r0, #0
    10e4:	bne	116c <teste_lista_inverte+0x27c>
    10e8:	ldr	r0, [fp, #-12]
    10ec:	ldr	r0, [r0, #4]
    10f0:	ldr	r0, [r0, #8]
    10f4:	ldr	r0, [r0, #8]
    10f8:	ldr	r0, [r0]
    10fc:	movw	r1, #0
    1100:	movt	r1, #0
    1104:	bl	0 <strcmp>
    1108:	cmp	r0, #0
    110c:	bne	116c <teste_lista_inverte+0x27c>
    1110:	ldr	r0, [fp, #-12]
    1114:	ldr	r0, [r0, #4]
    1118:	ldr	r0, [r0, #8]
    111c:	ldr	r0, [r0, #8]
    1120:	ldr	r0, [r0, #8]
    1124:	ldr	r0, [r0]
    1128:	movw	r1, #0
    112c:	movt	r1, #0
    1130:	bl	0 <strcmp>
    1134:	cmp	r0, #0
    1138:	bne	116c <teste_lista_inverte+0x27c>
    113c:	ldr	r0, [fp, #-12]
    1140:	ldr	r0, [r0, #4]
    1144:	ldr	r0, [r0, #8]
    1148:	ldr	r0, [r0, #8]
    114c:	ldr	r0, [r0, #8]
    1150:	ldr	r0, [r0, #8]
    1154:	ldr	r0, [r0]
    1158:	movw	r1, #0
    115c:	movt	r1, #0
    1160:	bl	0 <strcmp>
    1164:	cmp	r0, #0
    1168:	beq	1188 <teste_lista_inverte+0x298>
    116c:	movw	r0, #0
    1170:	movt	r0, #0
    1174:	bl	0 <printf>
    1178:	ldr	lr, [fp, #-4]
    117c:	add	lr, lr, #1
    1180:	str	lr, [fp, #-4]
    1184:	str	r0, [sp, #16]
    1188:	ldr	r0, [fp, #-12]
    118c:	bl	0 <lista_apaga>
    1190:	ldr	r0, [fp, #-4]
    1194:	cmp	r0, #0
    1198:	bne	11b0 <teste_lista_inverte+0x2c0>
    119c:	movw	r0, #0
    11a0:	movt	r0, #0
    11a4:	bl	0 <printf>
    11a8:	str	r0, [sp, #12]
    11ac:	b	11c0 <teste_lista_inverte+0x2d0>
    11b0:	movw	r0, #0
    11b4:	movt	r0, #0
    11b8:	bl	0 <printf>
    11bc:	str	r0, [sp, #8]
    11c0:	ldr	r0, [fp, #-4]
    11c4:	mov	sp, fp
    11c8:	pop	{fp, pc}

000011cc <main>:
    11cc:	push	{fp, lr}
    11d0:	mov	fp, sp
    11d4:	sub	sp, sp, #32
    11d8:	movw	r0, #0
    11dc:	str	r0, [fp, #-4]
    11e0:	movw	r1, #0
    11e4:	movt	r1, #0
    11e8:	ldr	r1, [r1]
    11ec:	str	r0, [fp, #-12]
    11f0:	mov	r0, r1
    11f4:	ldr	r1, [fp, #-12]
    11f8:	movw	r2, #2
    11fc:	ldr	r3, [fp, #-12]
    1200:	bl	0 <setvbuf>
    1204:	movw	r1, #0
    1208:	movt	r1, #0
    120c:	ldr	r1, [r1]
    1210:	str	r0, [sp, #16]
    1214:	mov	r0, r1
    1218:	movw	r1, #0
    121c:	str	r1, [sp, #12]
    1220:	movw	r2, #2
    1224:	ldr	r3, [sp, #12]
    1228:	bl	0 <setvbuf>
    122c:	movw	r1, #0
    1230:	str	r1, [fp, #-8]
    1234:	str	r0, [sp, #8]
    1238:	bl	224 <teste_lista_nova>
    123c:	ldr	r1, [fp, #-8]
    1240:	add	r0, r1, r0
    1244:	str	r0, [fp, #-8]
    1248:	bl	338 <teste_lista_insere>
    124c:	ldr	r1, [fp, #-8]
    1250:	add	r0, r1, r0
    1254:	str	r0, [fp, #-8]
    1258:	bl	840 <teste_lista_remove>
    125c:	ldr	r1, [fp, #-8]
    1260:	add	r0, r1, r0
    1264:	str	r0, [fp, #-8]
    1268:	bl	a58 <teste_lista_pesquisa>
    126c:	ldr	r1, [fp, #-8]
    1270:	add	r0, r1, r0
    1274:	str	r0, [fp, #-8]
    1278:	bl	c3c <teste_lista_ordena>
    127c:	ldr	r1, [fp, #-8]
    1280:	add	r0, r1, r0
    1284:	str	r0, [fp, #-8]
    1288:	bl	ef0 <teste_lista_inverte>
    128c:	ldr	r1, [fp, #-8]
    1290:	add	r0, r1, r0
    1294:	str	r0, [fp, #-8]
    1298:	ldr	r0, [fp, #-8]
    129c:	cmp	r0, #0
    12a0:	bne	12b8 <main+0xec>
    12a4:	movw	r0, #0
    12a8:	movt	r0, #0
    12ac:	bl	0 <printf>
    12b0:	str	r0, [sp, #4]
    12b4:	b	12cc <main+0x100>
    12b8:	ldr	r1, [fp, #-8]
    12bc:	movw	r0, #0
    12c0:	movt	r0, #0
    12c4:	bl	0 <printf>
    12c8:	str	r0, [sp]
    12cc:	movw	r0, #0
    12d0:	mov	sp, fp
    12d4:	pop	{fp, pc}
