
../repos/CoolerVoid-raptor_waf-5d2cf7c/strsec.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <strlcpy>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #16
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	str	r5, [sp, #12]
  18:	mov	r3, r1
  1c:	mov	r4, r2
  20:	cmp	r4, #0
  24:	beq	58 <strlcpy+0x58>
  28:	sub	r4, r4, #1
  2c:	cmp	r4, #0
  30:	beq	58 <strlcpy+0x58>
  34:	mov	r5, r0
  38:	add	r0, r5, #1
  3c:	mov	ip, r3
  40:	add	r3, ip, #1
  44:	ldrb	ip, [ip]
  48:	and	ip, ip, #255	; 0xff
  4c:	strb	ip, [r5]
  50:	cmp	ip, #0
  54:	bne	28 <strlcpy+0x28>
  58:	cmp	r4, #0
  5c:	bne	84 <strlcpy+0x84>
  60:	cmp	r2, #0
  64:	beq	70 <strlcpy+0x70>
  68:	mov	r2, #0
  6c:	strb	r2, [r0]
  70:	mov	r2, r3
  74:	add	r3, r2, #1
  78:	ldrb	ip, [r2]
  7c:	cmp	ip, #0
  80:	bne	70 <strlcpy+0x70>
  84:	sub	r0, r3, r1
  88:	sub	r0, r0, #1
  8c:	ldr	r4, [sp, #8]
  90:	ldr	r5, [sp, #12]
  94:	ldr	lr, [sp, #4]
  98:	add	sp, sp, #16
  9c:	bx	lr

000000a0 <strlcat>:
  a0:	mov	ip, sp
  a4:	sub	sp, sp, #16
  a8:	str	ip, [sp]
  ac:	str	lr, [sp, #4]
  b0:	str	r4, [sp, #8]
  b4:	str	r5, [sp, #12]
  b8:	mov	r3, r0
  bc:	mov	ip, r1
  c0:	mov	r4, r2
  c4:	mov	r5, r4
  c8:	sub	r4, r5, #1
  cc:	cmp	r5, #0
  d0:	beq	e8 <strlcat+0x48>
  d4:	ldrb	r5, [r3]
  d8:	cmp	r5, #0
  dc:	beq	e8 <strlcat+0x48>
  e0:	add	r3, r3, #1
  e4:	b	c4 <strlcat+0x24>
  e8:	sub	r4, r3, r0
  ec:	sub	r5, r2, r4
  f0:	cmp	r5, #0
  f4:	bne	108 <strlcat+0x68>
  f8:	mov	r0, ip
  fc:	bl	0 <strlen>
 100:	add	r0, r4, r0
 104:	b	144 <strlcat+0xa4>
 108:	ldrb	r0, [ip]
 10c:	cmp	r0, #0
 110:	beq	134 <strlcat+0x94>
 114:	cmp	r5, #1
 118:	beq	12c <strlcat+0x8c>
 11c:	mov	r2, r3
 120:	add	r3, r2, #1
 124:	strb	r0, [r2]
 128:	sub	r5, r5, #1
 12c:	add	ip, ip, #1
 130:	b	108 <strlcat+0x68>
 134:	mov	r2, #0
 138:	strb	r2, [r3]
 13c:	sub	r0, ip, r1
 140:	add	r0, r4, r0
 144:	ldr	r4, [sp, #8]
 148:	ldr	r5, [sp, #12]
 14c:	ldr	lr, [sp, #4]
 150:	add	sp, sp, #16
 154:	bx	lr

00000158 <strnstr>:
 158:	mov	ip, sp
 15c:	sub	sp, sp, #32
 160:	str	ip, [sp]
 164:	str	lr, [sp, #4]
 168:	str	r4, [sp, #8]
 16c:	str	r5, [sp, #12]
 170:	str	r6, [sp, #16]
 174:	str	r7, [sp, #20]
 178:	str	r8, [sp, #24]
 17c:	mov	r4, r2
 180:	mov	r5, r0
 184:	add	r7, r1, #1
 188:	ldrb	ip, [r1]
 18c:	and	r8, ip, #255	; 0xff
 190:	cmp	r8, #0
 194:	beq	20c <strnstr+0xb4>
 198:	mov	r0, r7
 19c:	bl	0 <strlen>
 1a0:	mov	r6, r0
 1a4:	mov	r2, r4
 1a8:	sub	r4, r2, #1
 1ac:	cmp	r2, #1
 1b0:	bcc	204 <strnstr+0xac>
 1b4:	mov	r1, r5
 1b8:	add	r5, r1, #1
 1bc:	ldrb	r0, [r1]
 1c0:	and	r0, r0, #255	; 0xff
 1c4:	cmp	r0, #0
 1c8:	beq	204 <strnstr+0xac>
 1cc:	cmp	r0, r8
 1d0:	bne	1a4 <strnstr+0x4c>
 1d4:	cmp	r6, r4
 1d8:	bls	1e4 <strnstr+0x8c>
 1dc:	mov	r0, #0
 1e0:	b	210 <strnstr+0xb8>
 1e4:	mov	r2, r6
 1e8:	mov	r1, r7
 1ec:	mov	r0, r5
 1f0:	bl	0 <strncmp>
 1f4:	cmp	r0, #0
 1f8:	bne	1a4 <strnstr+0x4c>
 1fc:	sub	r5, r5, #1
 200:	b	20c <strnstr+0xb4>
 204:	mov	r0, #0
 208:	b	210 <strnstr+0xb8>
 20c:	mov	r0, r5
 210:	ldr	r4, [sp, #8]
 214:	ldr	r5, [sp, #12]
 218:	ldr	r6, [sp, #16]
 21c:	ldr	r7, [sp, #20]
 220:	ldr	r8, [sp, #24]
 224:	ldr	lr, [sp, #4]
 228:	add	sp, sp, #32
 22c:	bx	lr
