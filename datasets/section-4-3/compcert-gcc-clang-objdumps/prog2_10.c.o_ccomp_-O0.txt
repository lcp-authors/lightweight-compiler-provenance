
../repos/prog2/CMakeFiles/0.10.dir/Aula00_Conceitos_base/10.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <nova_tarefa>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #24
   8:	str	ip, [sp, #4]
   c:	str	lr, [sp, #8]
  10:	str	r4, [sp, #16]
  14:	mov	r1, r0
  18:	ldr	r0, [pc, #52]	; 54 <nova_tarefa+0x54>
  1c:	add	r2, r1, #30
  20:	add	r3, r1, #60	; 0x3c
  24:	add	r4, r1, #64	; 0x40
  28:	str	r4, [sp]
  2c:	bl	0 <scanf>
  30:	cmp	r0, #4
  34:	beq	40 <nova_tarefa+0x40>
  38:	mov	r0, #0
  3c:	b	44 <nova_tarefa+0x44>
  40:	mov	r0, #1
  44:	ldr	r4, [sp, #16]
  48:	ldr	lr, [sp, #8]
  4c:	add	sp, sp, #24
  50:	bx	lr
  54:	.word	0x0000002b

00000058 <ler_tarefas>:
  58:	mov	ip, sp
  5c:	sub	sp, sp, #16
  60:	str	ip, [sp]
  64:	str	lr, [sp, #4]
  68:	str	r4, [sp, #8]
  6c:	str	r5, [sp, #12]
  70:	mov	r4, r0
  74:	mov	r5, #0
  78:	lsl	r2, r5, #6
  7c:	add	r1, r2, r5, lsl #2
  80:	add	r0, r4, r1
  84:	bl	0 <nova_tarefa>
  88:	cmp	r0, #0
  8c:	bne	98 <ler_tarefas+0x40>
  90:	mov	r0, #0
  94:	b	a4 <ler_tarefas+0x4c>
  98:	cmp	r5, #100	; 0x64
  9c:	movlt	r0, #1
  a0:	movge	r0, #0
  a4:	cmp	r0, #0
  a8:	beq	b4 <ler_tarefas+0x5c>
  ac:	add	r5, r5, #1
  b0:	b	78 <ler_tarefas+0x20>
  b4:	mov	r0, r5
  b8:	ldr	r4, [sp, #8]
  bc:	ldr	r5, [sp, #12]
  c0:	ldr	lr, [sp, #4]
  c4:	add	sp, sp, #16
  c8:	bx	lr

000000cc <lista_tarefas>:
  cc:	mov	ip, sp
  d0:	sub	sp, sp, #32
  d4:	str	ip, [sp, #4]
  d8:	str	lr, [sp, #8]
  dc:	str	r4, [sp, #16]
  e0:	str	r5, [sp, #20]
  e4:	str	r6, [sp, #24]
  e8:	str	r7, [sp, #28]
  ec:	mov	r4, r1
  f0:	mov	r5, r0
  f4:	mov	r6, #0
  f8:	cmp	r6, r4
  fc:	bge	150 <lista_tarefas+0x84>
 100:	ldr	r0, [pc, #100]	; 16c <lista_tarefas+0xa0>
 104:	lsl	r1, r6, #6
 108:	add	r1, r1, r6, lsl #2
 10c:	add	r1, r5, r1
 110:	lsl	r2, r6, #6
 114:	add	r2, r2, r6, lsl #2
 118:	add	r2, r5, r2
 11c:	add	r2, r2, #30
 120:	lsl	ip, r6, #6
 124:	add	r3, ip, r6, lsl #2
 128:	add	r3, r5, r3
 12c:	ldr	r3, [r3, #60]	; 0x3c
 130:	lsl	ip, r6, #6
 134:	add	ip, ip, r6, lsl #2
 138:	add	ip, r5, ip
 13c:	ldr	r7, [ip, #64]	; 0x40
 140:	str	r7, [sp]
 144:	bl	0 <printf>
 148:	add	r6, r6, #1
 14c:	b	f8 <lista_tarefas+0x2c>
 150:	ldr	r4, [sp, #16]
 154:	ldr	r5, [sp, #20]
 158:	ldr	r6, [sp, #24]
 15c:	ldr	r7, [sp, #28]
 160:	ldr	lr, [sp, #8]
 164:	add	sp, sp, #32
 168:	bx	lr
 16c:	.word	0x0000001e

00000170 <analisa_tarefas>:
 170:	mov	ip, sp
 174:	sub	sp, sp, #24
 178:	str	ip, [sp]
 17c:	str	lr, [sp, #4]
 180:	str	r4, [sp, #8]
 184:	str	r5, [sp, #12]
 188:	str	r6, [sp, #16]
 18c:	str	r7, [sp, #20]
 190:	mov	r5, r2
 194:	mov	r6, #0
 198:	mov	r7, #0
 19c:	mov	r4, #0
 1a0:	cmp	r4, r1
 1a4:	bge	210 <analisa_tarefas+0xa0>
 1a8:	lsl	ip, r4, #6
 1ac:	add	r2, ip, r4, lsl #2
 1b0:	add	r2, r0, r2
 1b4:	ldr	r2, [r2, #60]	; 0x3c
 1b8:	add	r6, r6, r2
 1bc:	lsl	r3, r4, #6
 1c0:	add	r3, r3, r4, lsl #2
 1c4:	add	r3, r0, r3
 1c8:	ldr	ip, [r3, #60]	; 0x3c
 1cc:	cmp	ip, r7
 1d0:	ble	208 <analisa_tarefas+0x98>
 1d4:	lsl	r2, r4, #6
 1d8:	add	r2, r2, r4, lsl #2
 1dc:	add	r2, r0, r2
 1e0:	ldr	r7, [r2, #60]	; 0x3c
 1e4:	lsl	ip, r4, #6
 1e8:	add	r2, ip, r4, lsl #2
 1ec:	add	r2, r0, r2
 1f0:	mov	r3, r5
 1f4:	mov	lr, #17
 1f8:	ldr	ip, [r2], #4
 1fc:	subs	lr, lr, #1
 200:	str	ip, [r3], #4
 204:	bne	1f8 <analisa_tarefas+0x88>
 208:	add	r4, r4, #1
 20c:	b	1a0 <analisa_tarefas+0x30>
 210:	vmov	s4, r6
 214:	vcvt.f32.s32	s4, s4
 218:	vmov	s2, r4
 21c:	vcvt.f32.s32	s2, s2
 220:	vdiv.f32	s0, s4, s2
 224:	ldr	r4, [sp, #8]
 228:	ldr	r5, [sp, #12]
 22c:	ldr	r6, [sp, #16]
 230:	ldr	r7, [sp, #20]
 234:	ldr	lr, [sp, #4]
 238:	add	sp, sp, #24
 23c:	bx	lr

00000240 <main>:
 240:	mov	ip, sp
 244:	sub	sp, sp, #744	; 0x2e8
 248:	sub	sp, sp, #6144	; 0x1800
 24c:	str	ip, [sp]
 250:	str	lr, [sp, #4]
 254:	str	r4, [sp, #8]
 258:	add	r0, sp, #88	; 0x58
 25c:	bl	58 <ler_tarefas>
 260:	mov	r4, r0
 264:	add	r0, sp, #88	; 0x58
 268:	mov	r1, r4
 26c:	bl	cc <lista_tarefas>
 270:	ldr	r0, [pc, #72]	; 2c0 <main+0x80>
 274:	mov	r1, r4
 278:	bl	0 <printf>
 27c:	add	r0, sp, #88	; 0x58
 280:	add	r2, sp, #16
 284:	mov	r1, r4
 288:	bl	170 <analisa_tarefas>
 28c:	ldr	r0, [pc, #48]	; 2c4 <main+0x84>
 290:	vcvt.f64.f32	d2, s0
 294:	vmov	r2, r3, d2
 298:	bl	0 <printf>
 29c:	ldr	r0, [pc, #24]	; 2bc <main+0x7c>
 2a0:	add	r1, sp, #16
 2a4:	bl	0 <printf>
 2a8:	mov	r0, #0
 2ac:	ldr	r4, [sp, #8]
 2b0:	ldr	lr, [sp, #4]
 2b4:	ldr	sp, [sp]
 2b8:	bx	lr
 2bc:	.word	0x00000037
 2c0:	.word	0x00000000
 2c4:	.word	0x0000004e
