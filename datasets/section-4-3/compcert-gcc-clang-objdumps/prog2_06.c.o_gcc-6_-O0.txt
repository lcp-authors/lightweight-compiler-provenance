
../compcert-repos/prog2/CMakeFiles/0.6.dir/Aula00_Conceitos_base/06.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{r4, fp, lr}
   4:	add	fp, sp, #8
   8:	sub	sp, sp, #28
   c:	mov	r3, #0
  10:	str	r3, [fp, #-24]	; 0xffffffe8
  14:	mov	r3, #0
  18:	str	r3, [fp, #-28]	; 0xffffffe4
  1c:	mov	r3, #0
  20:	str	r3, [fp, #-32]	; 0xffffffe0
  24:	ldr	r0, [pc, #356]	; 190 <main+0x190>
  28:	bl	0 <printf>
  2c:	mov	r0, #1
  30:	bl	0 <malloc>
  34:	mov	r3, r0
  38:	str	r3, [fp, #-16]
  3c:	mov	r0, #1
  40:	bl	0 <malloc>
  44:	mov	r3, r0
  48:	str	r3, [fp, #-20]	; 0xffffffec
  4c:	b	118 <main+0x118>
  50:	ldrb	r3, [fp, #-33]	; 0xffffffdf
  54:	cmp	r3, #32
  58:	beq	68 <main+0x68>
  5c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
  60:	cmp	r3, #10
  64:	bne	d4 <main+0xd4>
  68:	ldr	r0, [fp, #-20]	; 0xffffffec
  6c:	bl	0 <strlen>
  70:	mov	r4, r0
  74:	ldr	r0, [fp, #-16]
  78:	bl	0 <strlen>
  7c:	mov	r3, r0
  80:	cmp	r4, r3
  84:	bls	b0 <main+0xb0>
  88:	ldr	r0, [fp, #-20]	; 0xffffffec
  8c:	bl	0 <strlen>
  90:	mov	r3, r0
  94:	mov	r1, r3
  98:	ldr	r0, [fp, #-16]
  9c:	bl	0 <realloc>
  a0:	str	r0, [fp, #-16]
  a4:	ldr	r1, [fp, #-20]	; 0xffffffec
  a8:	ldr	r0, [fp, #-16]
  ac:	bl	0 <strcpy>
  b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
  b4:	add	r3, r3, #1
  b8:	str	r3, [fp, #-24]	; 0xffffffe8
  bc:	mov	r3, #0
  c0:	str	r3, [fp, #-32]	; 0xffffffe0
  c4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
  c8:	cmp	r3, #10
  cc:	beq	138 <main+0x138>
  d0:	b	118 <main+0x118>
  d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
  d8:	add	r3, r3, #1
  dc:	mov	r1, r3
  e0:	ldr	r0, [fp, #-20]	; 0xffffffec
  e4:	bl	0 <realloc>
  e8:	str	r0, [fp, #-20]	; 0xffffffec
  ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
  f0:	ldr	r2, [fp, #-20]	; 0xffffffec
  f4:	add	r3, r2, r3
  f8:	ldrb	r2, [fp, #-33]	; 0xffffffdf
  fc:	strb	r2, [r3]
 100:	ldr	r3, [fp, #-28]	; 0xffffffe4
 104:	add	r3, r3, #1
 108:	str	r3, [fp, #-28]	; 0xffffffe4
 10c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 110:	add	r3, r3, #1
 114:	str	r3, [fp, #-32]	; 0xffffffe0
 118:	sub	r3, fp, #33	; 0x21
 11c:	mov	r1, r3
 120:	ldr	r0, [pc, #108]	; 194 <main+0x194>
 124:	bl	0 <__isoc99_scanf>
 128:	mov	r3, r0
 12c:	cmp	r3, #1
 130:	beq	50 <main+0x50>
 134:	b	13c <main+0x13c>
 138:	nop			; (mov r0, r0)
 13c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 140:	ldr	r0, [pc, #80]	; 198 <main+0x198>
 144:	bl	0 <printf>
 148:	ldr	r1, [fp, #-16]
 14c:	ldr	r0, [pc, #72]	; 19c <main+0x19c>
 150:	bl	0 <printf>
 154:	ldr	r3, [fp, #-28]	; 0xffffffe4
 158:	vmov	s15, r3
 15c:	vcvt.f32.s32	s13, s15
 160:	ldr	r3, [fp, #-24]	; 0xffffffe8
 164:	vmov	s15, r3
 168:	vcvt.f32.s32	s14, s15
 16c:	vdiv.f32	s15, s13, s14
 170:	vcvt.f64.f32	d7, s15
 174:	vmov	r2, r3, d7
 178:	ldr	r0, [pc, #32]	; 1a0 <main+0x1a0>
 17c:	bl	0 <printf>
 180:	mov	r3, #0
 184:	mov	r0, r3
 188:	sub	sp, fp, #8
 18c:	pop	{r4, fp, pc}
 190:	.word	0x00000000
 194:	.word	0x00000008
 198:	.word	0x0000000c
 19c:	.word	0x00000024
 1a0:	.word	0x00000038
