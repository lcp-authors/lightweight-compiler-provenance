
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-grib.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <read_bytes>:
       0:	strd	r4, [sp, #-36]!	; 0xffffffdc
       4:	mov	r4, r2
       8:	ldr	r5, [r0, #48]	; 0x30
       c:	strd	r6, [sp, #8]
      10:	mov	r6, r0
      14:	mov	r7, r3
      18:	strd	r8, [sp, #16]
      1c:	strd	sl, [sp, #24]
      20:	str	lr, [sp, #32]
      24:	sub	sp, sp, #84	; 0x54
      28:	cmp	r5, #0
      2c:	ldr	r2, [sp, #120]	; 0x78
      30:	ldr	r1, [sp, #124]	; 0x7c
      34:	beq	d8 <read_bytes+0xd8>
      38:	adds	r8, r4, r2
      3c:	ldrd	sl, [r0, #40]	; 0x28
      40:	adc	r9, r3, r1
      44:	cmp	r9, fp
      48:	cmpeq	r8, sl
      4c:	bls	c4 <read_bytes+0xc4>
      50:	ldr	r3, [r0, #16]
      54:	cmp	r3, #1
      58:	bls	140 <read_bytes+0x140>
      5c:	mov	r0, r2
      60:	add	r2, sp, #8
      64:	bl	0 <coda_str64>
      68:	add	r5, sp, #56	; 0x38
      6c:	mov	r0, r4
      70:	mov	r1, r7
      74:	add	r2, sp, #32
      78:	bl	0 <coda_str64>
      7c:	mov	r2, r5
      80:	ldrd	r0, [r6, #40]	; 0x28
      84:	bl	0 <coda_str64>
      88:	mvn	r0, #300	; 0x12c
      8c:	add	r3, sp, #32
      90:	str	r5, [sp]
      94:	add	r2, sp, #8
      98:	movw	r1, #0
      9c:	movt	r1, #0
      a0:	bl	0 <coda_set_error>
      a4:	mvn	r0, #0
      a8:	add	sp, sp, #84	; 0x54
      ac:	ldrd	r4, [sp]
      b0:	ldrd	r6, [sp, #8]
      b4:	ldrd	r8, [sp, #16]
      b8:	ldrd	sl, [sp, #24]
      bc:	add	sp, sp, #32
      c0:	pop	{pc}		; (ldr pc, [sp], #4)
      c4:	add	r1, r5, r4
      c8:	ldr	r0, [sp, #128]	; 0x80
      cc:	bl	0 <memcpy>
      d0:	mov	r0, #0
      d4:	b	a8 <read_bytes+0xa8>
      d8:	ldr	r3, [r0, #16]
      dc:	cmp	r3, #1
      e0:	bhi	158 <read_bytes+0x158>
      e4:	ldrd	r8, [r0, #8]
      e8:	adds	sl, r4, r2
      ec:	adc	fp, r7, r1
      f0:	cmp	fp, r9
      f4:	cmpeq	sl, r8
      f8:	bhi	140 <read_bytes+0x140>
      fc:	mov	r3, r4
     100:	ldr	r0, [r0, #56]	; 0x38
     104:	ldr	r1, [sp, #128]	; 0x80
     108:	bl	0 <pread>
     10c:	cmp	r0, #0
     110:	movge	r0, r5
     114:	bge	a8 <read_bytes+0xa8>
     118:	bl	0 <__errno_location>
     11c:	ldr	r0, [r0]
     120:	bl	0 <strerror>
     124:	mov	r2, r0
     128:	movw	r1, #0
     12c:	movt	r1, #0
     130:	mvn	r0, #21
     134:	bl	0 <coda_set_error>
     138:	mvn	r0, #0
     13c:	b	a8 <read_bytes+0xa8>
     140:	mvn	r0, #300	; 0x12c
     144:	movw	r1, #0
     148:	movt	r1, #0
     14c:	bl	0 <coda_set_error>
     150:	mvn	r0, #0
     154:	b	a8 <read_bytes+0xa8>
     158:	movw	r3, #0
     15c:	movt	r3, #0
     160:	movw	r1, #0
     164:	movt	r1, #0
     168:	movw	r0, #0
     16c:	movt	r0, #0
     170:	mov	r2, #83	; 0x53
     174:	bl	0 <__assert_fail>

00000178 <ibmfloat_to_iee754>:
     178:	ldrb	r1, [r0, #1]
     17c:	ldrb	r2, [r0, #2]
     180:	ldrb	r3, [r0, #3]
     184:	add	r2, r2, r1, lsl #8
     188:	adds	r3, r3, r2, lsl #8
     18c:	beq	210 <ibmfloat_to_iee754+0x98>
     190:	ldrb	r0, [r0]
     194:	movw	r1, #65535	; 0xffff
     198:	movt	r1, #127	; 0x7f
     19c:	cmp	r3, r1
     1a0:	and	r2, r0, #127	; 0x7f
     1a4:	lsl	r2, r2, #2
     1a8:	sub	r2, r2, #130	; 0x82
     1ac:	bgt	1c0 <ibmfloat_to_iee754+0x48>
     1b0:	lsl	r3, r3, #1
     1b4:	sub	r2, r2, #1
     1b8:	cmp	r3, r1
     1bc:	bls	1b0 <ibmfloat_to_iee754+0x38>
     1c0:	cmp	r2, #254	; 0xfe
     1c4:	bgt	21c <ibmfloat_to_iee754+0xa4>
     1c8:	cmp	r2, #0
     1cc:	lslgt	r2, r2, #23
     1d0:	ubfxgt	r3, r3, #0, #23
     1d4:	ble	1ec <ibmfloat_to_iee754+0x74>
     1d8:	lsr	r0, r0, #7
     1dc:	orr	r2, r2, r0, lsl #31
     1e0:	orr	r3, r2, r3
     1e4:	vmov	s0, r3
     1e8:	bx	lr
     1ec:	cmn	r2, #24
     1f0:	movlt	r3, #0
     1f4:	movlt	r2, r3
     1f8:	blt	1d8 <ibmfloat_to_iee754+0x60>
     1fc:	rsb	r1, r2, #0
     200:	mov	r2, #0
     204:	lsr	r3, r3, r1
     208:	ubfx	r3, r3, #0, #23
     20c:	b	1d8 <ibmfloat_to_iee754+0x60>
     210:	mov	r3, #0
     214:	vmov	s0, r3
     218:	bx	lr
     21c:	str	r4, [sp, #-8]!
     220:	str	lr, [sp, #4]
     224:	bl	0 <coda_PlusInf>
     228:	vcvt.f32.f64	s15, d0
     22c:	ldr	r4, [sp]
     230:	add	sp, sp, #4
     234:	vmov.f32	s0, s15
     238:	pop	{pc}		; (ldr pc, [sp], #4)

0000023c <read_grib1_message>:
     23c:	strd	r4, [sp, #-36]!	; 0xffffffdc
     240:	mov	r4, r0
     244:	strd	r6, [sp, #8]
     248:	mov	r6, #28
     24c:	mov	r7, #0
     250:	strd	r8, [sp, #16]
     254:	mov	r9, r1
     258:	strd	sl, [sp, #24]
     25c:	mov	sl, r2
     260:	mov	fp, r3
     264:	str	lr, [sp, #32]
     268:	vpush	{d8}
     26c:	sub	sp, sp, #172	; 0xac
     270:	add	r1, sp, #140	; 0x8c
     274:	strd	r6, [sp]
     278:	str	r1, [sp, #8]
     27c:	ldr	r0, [r0, #52]	; 0x34
     280:	bl	0 <read_bytes>
     284:	cmp	r0, #0
     288:	blt	139c <read_grib1_message+0x1160>
     28c:	ldr	r5, [pc, #3380]	; fc8 <read_grib1_message+0xd8c>
     290:	mrc	15, 0, r6, cr13, cr0, {3}
     294:	mov	r2, r4
     298:	mov	r1, #0
     29c:	ldrb	r8, [sp, #141]	; 0x8d
     2a0:	ldrb	ip, [sp, #140]	; 0x8c
     2a4:	ldr	r0, [r5, r6]
     2a8:	ldrb	lr, [sp, #142]	; 0x8e
     2ac:	add	ip, r8, ip, lsl #8
     2b0:	ldrb	r3, [sp, #143]	; 0x8f
     2b4:	ldr	r0, [r0, #8]
     2b8:	add	r8, lr, ip, lsl #8
     2bc:	bl	0 <coda_mem_uint8_new>
     2c0:	mov	r2, r0
     2c4:	mov	r3, #0
     2c8:	movw	r1, #0
     2cc:	movt	r1, #0
     2d0:	mov	r0, r9
     2d4:	bl	0 <coda_mem_record_add_field>
     2d8:	ldr	r0, [r5, r6]
     2dc:	mov	r2, r4
     2e0:	mov	r1, #0
     2e4:	ldrb	r3, [sp, #144]	; 0x90
     2e8:	ldr	r0, [r0, #16]
     2ec:	bl	0 <coda_mem_uint8_new>
     2f0:	mov	r2, r0
     2f4:	mov	r3, #0
     2f8:	movw	r1, #0
     2fc:	movt	r1, #0
     300:	mov	r0, r9
     304:	bl	0 <coda_mem_record_add_field>
     308:	ldr	r0, [r5, r6]
     30c:	mov	r2, r4
     310:	mov	r1, #0
     314:	ldrb	r3, [sp, #145]	; 0x91
     318:	ldr	r0, [r0, #20]
     31c:	bl	0 <coda_mem_uint8_new>
     320:	mov	r2, r0
     324:	mov	r3, #0
     328:	movw	r1, #0
     32c:	movt	r1, #0
     330:	mov	r0, r9
     334:	bl	0 <coda_mem_record_add_field>
     338:	ldr	r0, [r5, r6]
     33c:	mov	r2, r4
     340:	mov	r1, #0
     344:	ldrb	r3, [sp, #146]	; 0x92
     348:	ldr	r0, [r0, #24]
     34c:	str	r3, [sp, #48]	; 0x30
     350:	bl	0 <coda_mem_uint8_new>
     354:	mov	r2, r0
     358:	mov	r3, #0
     35c:	movw	r1, #0
     360:	movt	r1, #0
     364:	mov	r0, r9
     368:	bl	0 <coda_mem_record_add_field>
     36c:	ldrb	r7, [sp, #147]	; 0x93
     370:	mov	r2, r4
     374:	mov	r1, #0
     378:	ldr	r0, [r5, r6]
     37c:	ldrb	r3, [sp, #148]	; 0x94
     380:	lsr	ip, r7, #7
     384:	ldr	r0, [r0, #28]
     388:	str	ip, [sp, #40]	; 0x28
     38c:	ubfx	ip, r7, #6, #1
     390:	str	ip, [sp, #36]	; 0x24
     394:	bl	0 <coda_mem_uint8_new>
     398:	mov	r2, r0
     39c:	mov	r3, #0
     3a0:	movw	r1, #0
     3a4:	movt	r1, #0
     3a8:	mov	r0, r9
     3ac:	bl	0 <coda_mem_record_add_field>
     3b0:	ldr	r0, [r5, r6]
     3b4:	mov	r2, r4
     3b8:	mov	r1, #0
     3bc:	ldrb	r3, [sp, #149]	; 0x95
     3c0:	ldr	r0, [r0, #32]
     3c4:	bl	0 <coda_mem_uint8_new>
     3c8:	mov	r2, r0
     3cc:	mov	r3, #0
     3d0:	movw	r1, #0
     3d4:	movt	r1, #0
     3d8:	mov	r0, r9
     3dc:	bl	0 <coda_mem_record_add_field>
     3e0:	ldrb	ip, [sp, #150]	; 0x96
     3e4:	mov	r2, r4
     3e8:	mov	r1, #0
     3ec:	ldrb	r3, [sp, #151]	; 0x97
     3f0:	ldr	r0, [r5, r6]
     3f4:	add	r3, r3, ip, lsl #8
     3f8:	uxth	r3, r3
     3fc:	ldr	r0, [r0, #36]	; 0x24
     400:	bl	0 <coda_mem_uint16_new>
     404:	mov	r2, r0
     408:	mov	r3, #0
     40c:	movw	r1, #0
     410:	movt	r1, #0
     414:	mov	r0, r9
     418:	bl	0 <coda_mem_record_add_field>
     41c:	ldr	r0, [r5, r6]
     420:	mov	r2, r4
     424:	mov	r1, #0
     428:	ldrb	r3, [sp, #152]	; 0x98
     42c:	ldr	r0, [r0, #40]	; 0x28
     430:	bl	0 <coda_mem_uint8_new>
     434:	mov	r2, r0
     438:	mov	r3, #0
     43c:	movw	r1, #0
     440:	movt	r1, #0
     444:	mov	r0, r9
     448:	bl	0 <coda_mem_record_add_field>
     44c:	ldr	r0, [r5, r6]
     450:	mov	r2, r4
     454:	mov	r1, #0
     458:	ldrb	r3, [sp, #153]	; 0x99
     45c:	ldr	r0, [r0, #48]	; 0x30
     460:	bl	0 <coda_mem_uint8_new>
     464:	mov	r2, r0
     468:	mov	r3, #0
     46c:	movw	r1, #0
     470:	movt	r1, #0
     474:	mov	r0, r9
     478:	bl	0 <coda_mem_record_add_field>
     47c:	ldr	r0, [r5, r6]
     480:	mov	r2, r4
     484:	mov	r1, #0
     488:	ldrb	r3, [sp, #154]	; 0x9a
     48c:	ldr	r0, [r0, #52]	; 0x34
     490:	bl	0 <coda_mem_uint8_new>
     494:	mov	r2, r0
     498:	mov	r3, #0
     49c:	movw	r1, #0
     4a0:	movt	r1, #0
     4a4:	mov	r0, r9
     4a8:	bl	0 <coda_mem_record_add_field>
     4ac:	ldr	r0, [r5, r6]
     4b0:	mov	r2, r4
     4b4:	mov	r1, #0
     4b8:	ldrb	r3, [sp, #155]	; 0x9b
     4bc:	ldr	r0, [r0, #56]	; 0x38
     4c0:	bl	0 <coda_mem_uint8_new>
     4c4:	mov	r2, r0
     4c8:	mov	r3, #0
     4cc:	movw	r1, #0
     4d0:	movt	r1, #0
     4d4:	mov	r0, r9
     4d8:	bl	0 <coda_mem_record_add_field>
     4dc:	ldr	r0, [r5, r6]
     4e0:	mov	r2, r4
     4e4:	mov	r1, #0
     4e8:	ldrb	r3, [sp, #156]	; 0x9c
     4ec:	ldr	r0, [r0, #60]	; 0x3c
     4f0:	bl	0 <coda_mem_uint8_new>
     4f4:	mov	r2, r0
     4f8:	mov	r3, #0
     4fc:	movw	r1, #0
     500:	movt	r1, #0
     504:	mov	r0, r9
     508:	bl	0 <coda_mem_record_add_field>
     50c:	ldr	r0, [r5, r6]
     510:	mov	r2, r4
     514:	mov	r1, #0
     518:	ldrb	r3, [sp, #157]	; 0x9d
     51c:	ldr	r0, [r0, #68]	; 0x44
     520:	bl	0 <coda_mem_uint8_new>
     524:	mov	r2, r0
     528:	mov	r3, #0
     52c:	movw	r1, #0
     530:	movt	r1, #0
     534:	mov	r0, r9
     538:	bl	0 <coda_mem_record_add_field>
     53c:	ldr	r0, [r5, r6]
     540:	mov	r2, r4
     544:	mov	r1, #0
     548:	ldrb	r3, [sp, #158]	; 0x9e
     54c:	ldr	r0, [r0, #72]	; 0x48
     550:	bl	0 <coda_mem_uint8_new>
     554:	mov	r2, r0
     558:	mov	r3, #0
     55c:	movw	r1, #0
     560:	movt	r1, #0
     564:	mov	r0, r9
     568:	bl	0 <coda_mem_record_add_field>
     56c:	ldr	r0, [r5, r6]
     570:	mov	r2, r4
     574:	mov	r1, #0
     578:	ldrb	r3, [sp, #159]	; 0x9f
     57c:	ldr	r0, [r0, #76]	; 0x4c
     580:	bl	0 <coda_mem_uint8_new>
     584:	mov	r2, r0
     588:	mov	r3, #0
     58c:	movw	r1, #0
     590:	movt	r1, #0
     594:	mov	r0, r9
     598:	bl	0 <coda_mem_record_add_field>
     59c:	ldr	r0, [r5, r6]
     5a0:	mov	r2, r4
     5a4:	mov	r1, #0
     5a8:	ldrb	r3, [sp, #160]	; 0xa0
     5ac:	ldr	r0, [r0, #80]	; 0x50
     5b0:	bl	0 <coda_mem_uint8_new>
     5b4:	mov	r2, r0
     5b8:	mov	r3, #0
     5bc:	movw	r1, #0
     5c0:	movt	r1, #0
     5c4:	mov	r0, r9
     5c8:	bl	0 <coda_mem_record_add_field>
     5cc:	ldrb	ip, [sp, #161]	; 0xa1
     5d0:	mov	r2, r4
     5d4:	mov	r1, #0
     5d8:	ldrb	r3, [sp, #162]	; 0xa2
     5dc:	ldr	r0, [r5, r6]
     5e0:	add	r3, r3, ip, lsl #8
     5e4:	uxth	r3, r3
     5e8:	ldr	r0, [r0, #84]	; 0x54
     5ec:	bl	0 <coda_mem_uint16_new>
     5f0:	mov	r2, r0
     5f4:	mov	r3, #0
     5f8:	movw	r1, #0
     5fc:	movt	r1, #0
     600:	mov	r0, r9
     604:	bl	0 <coda_mem_record_add_field>
     608:	ldr	r0, [r5, r6]
     60c:	mov	r2, r4
     610:	mov	r1, #0
     614:	ldrb	r3, [sp, #163]	; 0xa3
     618:	ldr	r0, [r0, #88]	; 0x58
     61c:	bl	0 <coda_mem_uint8_new>
     620:	mov	r2, r0
     624:	mov	r3, #0
     628:	movw	r1, #0
     62c:	movt	r1, #0
     630:	mov	r0, r9
     634:	bl	0 <coda_mem_record_add_field>
     638:	ldr	r0, [r5, r6]
     63c:	mov	r2, r4
     640:	mov	r1, #0
     644:	ldrb	r3, [sp, #164]	; 0xa4
     648:	ldr	r0, [r0, #92]	; 0x5c
     64c:	bl	0 <coda_mem_uint8_new>
     650:	mov	r2, r0
     654:	mov	r3, #0
     658:	movw	r1, #0
     65c:	movt	r1, #0
     660:	mov	r0, r9
     664:	bl	0 <coda_mem_record_add_field>
     668:	ldr	r0, [r5, r6]
     66c:	mov	r2, r4
     670:	mov	r1, #0
     674:	ldrb	r3, [sp, #165]	; 0xa5
     678:	ldr	r0, [r0, #96]	; 0x60
     67c:	bl	0 <coda_mem_uint8_new>
     680:	mov	r2, r0
     684:	mov	r3, #0
     688:	movw	r1, #0
     68c:	movt	r1, #0
     690:	mov	r0, r9
     694:	bl	0 <coda_mem_record_add_field>
     698:	ldrb	lr, [sp, #166]	; 0xa6
     69c:	movw	ip, #65535	; 0xffff
     6a0:	mov	r2, r4
     6a4:	mov	r1, #0
     6a8:	ldrb	r3, [sp, #167]	; 0xa7
     6ac:	ldr	r0, [r5, r6]
     6b0:	tst	lr, #128	; 0x80
     6b4:	and	lr, lr, #127	; 0x7f
     6b8:	moveq	ip, #1
     6bc:	add	r3, r3, lr, lsl #8
     6c0:	ldr	r0, [r0, #100]	; 0x64
     6c4:	smulbb	r3, r3, ip
     6c8:	sxth	r3, r3
     6cc:	str	r3, [sp, #44]	; 0x2c
     6d0:	bl	0 <coda_mem_int16_new>
     6d4:	mov	r2, r0
     6d8:	mov	r3, #0
     6dc:	movw	r1, #0
     6e0:	movt	r1, #0
     6e4:	mov	r0, r9
     6e8:	bl	0 <coda_mem_record_add_field>
     6ec:	adds	r3, sl, #28
     6f0:	str	r3, [sp, #16]
     6f4:	adc	r3, fp, #0
     6f8:	cmp	r8, #28
     6fc:	str	r3, [sp, #20]
     700:	ble	720 <read_grib1_message+0x4e4>
     704:	cmp	r8, #40	; 0x28
     708:	bgt	f34 <read_grib1_message+0xcf8>
     70c:	ldrd	r2, [sp, #16]
     710:	sub	r8, r8, #28
     714:	adds	r2, r2, r8
     718:	adc	r3, r3, r8, asr #31
     71c:	strd	r2, [sp, #16]
     720:	ldr	r3, [sp, #40]	; 0x28
     724:	cmp	r3, #0
     728:	bne	8ec <read_grib1_message+0x6b0>
     72c:	ldr	r3, [sp, #48]	; 0x30
     730:	sub	r3, r3, #1
     734:	cmp	r3, #106	; 0x6a
     738:	ldrls	pc, [pc, r3, lsl #2]
     73c:	b	1630 <read_grib1_message+0x13f4>
     740:	.word	0x00001500
     744:	.word	0x00001624
     748:	.word	0x000014a8
     74c:	.word	0x000014d8
     750:	.word	0x000014c0
     754:	.word	0x000014c0
     758:	.word	0x00001630
     75c:	.word	0x000014f4
     760:	.word	0x00001630
     764:	.word	0x00001630
     768:	.word	0x00001630
     76c:	.word	0x00001630
     770:	.word	0x00001630
     774:	.word	0x00001630
     778:	.word	0x00001630
     77c:	.word	0x00001630
     780:	.word	0x00001630
     784:	.word	0x00001630
     788:	.word	0x00001630
     78c:	.word	0x00001630
     790:	.word	0x00001560
     794:	.word	0x00001560
     798:	.word	0x00001560
     79c:	.word	0x00001560
     7a0:	.word	0x000014b4
     7a4:	.word	0x000014b4
     7a8:	.word	0x00001548
     7ac:	.word	0x00001548
     7b0:	.word	0x0000153c
     7b4:	.word	0x0000153c
     7b8:	.word	0x00001630
     7bc:	.word	0x00001630
     7c0:	.word	0x00001530
     7c4:	.word	0x00001530
     7c8:	.word	0x00001630
     7cc:	.word	0x00001630
     7d0:	.word	0x00001630
     7d4:	.word	0x00001630
     7d8:	.word	0x00001630
     7dc:	.word	0x00001630
     7e0:	.word	0x00001630
     7e4:	.word	0x00001630
     7e8:	.word	0x00001630
     7ec:	.word	0x00001630
     7f0:	.word	0x00001630
     7f4:	.word	0x00001630
     7f8:	.word	0x00001630
     7fc:	.word	0x00001630
     800:	.word	0x00001630
     804:	.word	0x00001524
     808:	.word	0x00001630
     80c:	.word	0x00001630
     810:	.word	0x00001518
     814:	.word	0x00001630
     818:	.word	0x0000150c
     81c:	.word	0x0000150c
     820:	.word	0x00001630
     824:	.word	0x00001630
     828:	.word	0x00001630
     82c:	.word	0x00001630
     830:	.word	0x000014cc
     834:	.word	0x000014cc
     838:	.word	0x000014cc
     83c:	.word	0x000014cc
     840:	.word	0x00001630
     844:	.word	0x00001630
     848:	.word	0x00001630
     84c:	.word	0x00001630
     850:	.word	0x00001630
     854:	.word	0x00001630
     858:	.word	0x00001630
     85c:	.word	0x00001630
     860:	.word	0x00001630
     864:	.word	0x00001630
     868:	.word	0x00001554
     86c:	.word	0x00001554
     870:	.word	0x00001554
     874:	.word	0x00001630
     878:	.word	0x00001630
     87c:	.word	0x00001630
     880:	.word	0x00001630
     884:	.word	0x00001630
     888:	.word	0x00001630
     88c:	.word	0x00001630
     890:	.word	0x00001618
     894:	.word	0x00001618
     898:	.word	0x0000160c
     89c:	.word	0x00001630
     8a0:	.word	0x00001630
     8a4:	.word	0x00001600
     8a8:	.word	0x000015f4
     8ac:	.word	0x000015e4
     8b0:	.word	0x000015d4
     8b4:	.word	0x000015c8
     8b8:	.word	0x000015b8
     8bc:	.word	0x000015ac
     8c0:	.word	0x0000159c
     8c4:	.word	0x00001630
     8c8:	.word	0x00001630
     8cc:	.word	0x0000149c
     8d0:	.word	0x00001584
     8d4:	.word	0x00001630
     8d8:	.word	0x00001578
     8dc:	.word	0x0000156c
     8e0:	.word	0x0000149c
     8e4:	.word	0x000014e8
     8e8:	.word	0x00001590
     8ec:	ldrd	sl, [sp, #16]
     8f0:	mov	r0, #6
     8f4:	mov	r1, #0
     8f8:	add	r3, sp, #140	; 0x8c
     8fc:	strd	r0, [sp]
     900:	str	r3, [sp, #8]
     904:	ldr	r0, [r4, #52]	; 0x34
     908:	mov	r2, sl
     90c:	mov	r3, fp
     910:	bl	0 <read_bytes>
     914:	cmp	r0, #0
     918:	blt	139c <read_grib1_message+0x1160>
     91c:	ldrb	r2, [sp, #145]	; 0x91
     920:	adds	r3, sl, #6
     924:	adc	r1, fp, #0
     928:	ldrb	r7, [sp, #142]	; 0x8e
     92c:	ldrb	fp, [sp, #140]	; 0x8c
     930:	sub	ip, r2, #20
     934:	cmp	r2, #14
     938:	ldrb	lr, [sp, #141]	; 0x8d
     93c:	sub	sl, r2, #30
     940:	sub	r8, r2, #4
     944:	str	r3, [sp, #48]	; 0x30
     948:	and	r3, r2, #251	; 0xfb
     94c:	sub	r0, r2, #24
     950:	str	r1, [sp, #60]	; 0x3c
     954:	movne	r1, #0
     958:	moveq	r1, #1
     95c:	tst	ip, #251	; 0xfb
     960:	str	r7, [sp, #40]	; 0x28
     964:	sub	r7, r2, #34	; 0x22
     968:	moveq	ip, #1
     96c:	movne	ip, #0
     970:	cmp	r3, #0
     974:	cmpne	r3, #10
     978:	add	lr, lr, fp, lsl #8
     97c:	clz	r8, r8
     980:	moveq	r3, #1
     984:	movne	r3, #0
     988:	lsr	r8, r8, #5
     98c:	tst	sl, #251	; 0xfb
     990:	clz	r0, r0
     994:	orrne	r3, ip, r3
     998:	moveq	r3, #1
     99c:	ldr	ip, [sp, #40]	; 0x28
     9a0:	clz	r7, r7
     9a4:	cmp	r3, #0
     9a8:	lsr	r0, r0, #5
     9ac:	lsr	r7, r7, #5
     9b0:	add	ip, ip, lr, lsl #8
     9b4:	str	ip, [sp, #64]	; 0x40
     9b8:	beq	186c <read_grib1_message+0x1630>
     9bc:	ldr	r3, [r5, r6]
     9c0:	orr	r8, r1, r8
     9c4:	mov	r1, #0
     9c8:	orr	r8, r0, r8
     9cc:	mov	sl, #26
     9d0:	orr	r8, r7, r8
     9d4:	mov	fp, #0
     9d8:	ldr	r0, [r3, #264]	; 0x108
     9dc:	bl	0 <coda_mem_record_new>
     9e0:	ldrb	r1, [sp, #143]	; 0x8f
     9e4:	mov	r7, r0
     9e8:	mov	r2, r4
     9ec:	ldr	r0, [r5, r6]
     9f0:	mov	r3, r1
     9f4:	mov	r1, #0
     9f8:	ldr	r0, [r0, #132]	; 0x84
     9fc:	str	r3, [sp, #56]	; 0x38
     a00:	bl	0 <coda_mem_uint8_new>
     a04:	mov	r2, r0
     a08:	mov	r3, #0
     a0c:	movw	r1, #0
     a10:	movt	r1, #0
     a14:	mov	r0, r7
     a18:	bl	0 <coda_mem_record_add_field>
     a1c:	ldr	r0, [r5, r6]
     a20:	mov	r2, r4
     a24:	mov	r1, #0
     a28:	ldrb	ip, [sp, #144]	; 0x90
     a2c:	ldrb	r3, [sp, #145]	; 0x91
     a30:	ldr	r0, [r0, #136]	; 0x88
     a34:	str	ip, [sp, #68]	; 0x44
     a38:	bl	0 <coda_mem_uint8_new>
     a3c:	mov	r2, r0
     a40:	mov	r3, #0
     a44:	movw	r1, #0
     a48:	movt	r1, #0
     a4c:	mov	r0, r7
     a50:	bl	0 <coda_mem_record_add_field>
     a54:	add	r0, sp, #140	; 0x8c
     a58:	ldr	r2, [sp, #48]	; 0x30
     a5c:	str	r0, [sp, #8]
     a60:	ldr	r0, [r4, #52]	; 0x34
     a64:	strd	sl, [sp]
     a68:	ldr	r3, [sp, #60]	; 0x3c
     a6c:	bl	0 <read_bytes>
     a70:	cmp	r0, #0
     a74:	blt	184c <read_grib1_message+0x1610>
     a78:	ldrb	r0, [sp, #140]	; 0x8c
     a7c:	movw	r3, #65535	; 0xffff
     a80:	ldrb	fp, [sp, #141]	; 0x8d
     a84:	ldrb	r1, [sp, #142]	; 0x8e
     a88:	ldrb	r2, [sp, #143]	; 0x8f
     a8c:	add	fp, fp, r0, lsl #8
     a90:	sub	r0, fp, r3
     a94:	clz	r0, r0
     a98:	add	r2, r2, r1, lsl #8
     a9c:	lsr	r0, r0, #5
     aa0:	cmp	r2, r3
     aa4:	str	r2, [sp, #48]	; 0x30
     aa8:	movne	r2, #0
     aac:	moveq	r2, #1
     ab0:	tst	r0, r2
     ab4:	str	r0, [sp, #72]	; 0x48
     ab8:	str	r2, [sp, #76]	; 0x4c
     abc:	bne	1830 <read_grib1_message+0x15f4>
     ac0:	ldr	r2, [sp, #48]	; 0x30
     ac4:	mov	r1, #0
     ac8:	ldr	r0, [r5, r6]
     acc:	cmp	fp, r3
     ad0:	cmpne	r2, r3
     ad4:	movne	r3, #1
     ad8:	moveq	r3, #0
     adc:	mulne	r3, r2, fp
     ae0:	mov	r2, r4
     ae4:	ldr	r0, [r0, #168]	; 0xa8
     ae8:	str	r3, [sp, #40]	; 0x28
     aec:	uxth	r3, fp
     af0:	bl	0 <coda_mem_uint16_new>
     af4:	mov	r2, r0
     af8:	mov	r3, #0
     afc:	movw	r1, #0
     b00:	movt	r1, #0
     b04:	mov	r0, r7
     b08:	bl	0 <coda_mem_record_add_field>
     b0c:	ldr	r0, [r5, r6]
     b10:	mov	r2, r4
     b14:	mov	r1, #0
     b18:	ldrh	r3, [sp, #48]	; 0x30
     b1c:	ldr	r0, [r0, #172]	; 0xac
     b20:	bl	0 <coda_mem_uint16_new>
     b24:	mov	r2, r0
     b28:	mov	r3, #0
     b2c:	movw	r1, #0
     b30:	movt	r1, #0
     b34:	mov	r0, r7
     b38:	bl	0 <coda_mem_record_add_field>
     b3c:	ldrb	ip, [sp, #144]	; 0x90
     b40:	mov	r2, r4
     b44:	mov	r1, #0
     b48:	ldrb	r3, [sp, #145]	; 0x91
     b4c:	ldrb	r0, [sp, #146]	; 0x92
     b50:	and	lr, ip, #127	; 0x7f
     b54:	tst	ip, #128	; 0x80
     b58:	ldr	ip, [r5, r6]
     b5c:	add	r3, r3, lr, lsl #8
     b60:	mvnne	lr, #0
     b64:	moveq	lr, #1
     b68:	add	r3, r0, r3, lsl #8
     b6c:	ldr	r0, [ip, #184]	; 0xb8
     b70:	mul	r3, lr, r3
     b74:	bl	0 <coda_mem_int32_new>
     b78:	mov	r2, r0
     b7c:	mov	r3, #0
     b80:	movw	r1, #0
     b84:	movt	r1, #0
     b88:	mov	r0, r7
     b8c:	bl	0 <coda_mem_record_add_field>
     b90:	ldrb	ip, [sp, #147]	; 0x93
     b94:	mov	r2, r4
     b98:	mov	r1, #0
     b9c:	ldrb	r3, [sp, #148]	; 0x94
     ba0:	ldrb	r0, [sp, #149]	; 0x95
     ba4:	and	lr, ip, #127	; 0x7f
     ba8:	tst	ip, #128	; 0x80
     bac:	ldr	ip, [r5, r6]
     bb0:	add	r3, r3, lr, lsl #8
     bb4:	mvnne	lr, #0
     bb8:	moveq	lr, #1
     bbc:	add	r3, r0, r3, lsl #8
     bc0:	ldr	r0, [ip, #188]	; 0xbc
     bc4:	mul	r3, lr, r3
     bc8:	bl	0 <coda_mem_int32_new>
     bcc:	mov	r2, r0
     bd0:	mov	r3, #0
     bd4:	movw	r1, #0
     bd8:	movt	r1, #0
     bdc:	mov	r0, r7
     be0:	bl	0 <coda_mem_record_add_field>
     be4:	ldr	r0, [r5, r6]
     be8:	mov	r2, r4
     bec:	mov	r1, #0
     bf0:	ldrb	r3, [sp, #150]	; 0x96
     bf4:	ldr	r0, [r0, #192]	; 0xc0
     bf8:	bl	0 <coda_mem_uint8_new>
     bfc:	mov	r2, r0
     c00:	mov	r3, #0
     c04:	movw	r1, #0
     c08:	movt	r1, #0
     c0c:	mov	r0, r7
     c10:	bl	0 <coda_mem_record_add_field>
     c14:	ldrb	ip, [sp, #151]	; 0x97
     c18:	mov	r2, r4
     c1c:	mov	r1, #0
     c20:	ldrb	r3, [sp, #152]	; 0x98
     c24:	ldrb	r0, [sp, #153]	; 0x99
     c28:	and	lr, ip, #127	; 0x7f
     c2c:	tst	ip, #128	; 0x80
     c30:	ldr	ip, [r5, r6]
     c34:	add	r3, r3, lr, lsl #8
     c38:	mvnne	lr, #0
     c3c:	moveq	lr, #1
     c40:	add	r3, r0, r3, lsl #8
     c44:	ldr	r0, [ip, #196]	; 0xc4
     c48:	mul	r3, lr, r3
     c4c:	bl	0 <coda_mem_int32_new>
     c50:	mov	r2, r0
     c54:	mov	r3, #0
     c58:	movw	r1, #0
     c5c:	movt	r1, #0
     c60:	mov	r0, r7
     c64:	bl	0 <coda_mem_record_add_field>
     c68:	ldrb	ip, [sp, #154]	; 0x9a
     c6c:	mov	r2, r4
     c70:	mov	r1, #0
     c74:	ldrb	r3, [sp, #155]	; 0x9b
     c78:	ldrb	r0, [sp, #156]	; 0x9c
     c7c:	and	lr, ip, #127	; 0x7f
     c80:	tst	ip, #128	; 0x80
     c84:	ldr	ip, [r5, r6]
     c88:	add	r3, r3, lr, lsl #8
     c8c:	mvnne	lr, #0
     c90:	moveq	lr, #1
     c94:	add	r3, r0, r3, lsl #8
     c98:	ldr	r0, [ip, #200]	; 0xc8
     c9c:	mul	r3, lr, r3
     ca0:	bl	0 <coda_mem_int32_new>
     ca4:	mov	r2, r0
     ca8:	mov	r3, #0
     cac:	movw	r1, #0
     cb0:	movt	r1, #0
     cb4:	mov	r0, r7
     cb8:	bl	0 <coda_mem_record_add_field>
     cbc:	ldrb	ip, [sp, #157]	; 0x9d
     cc0:	mov	r2, r4
     cc4:	mov	r1, #0
     cc8:	ldrb	r3, [sp, #158]	; 0x9e
     ccc:	ldr	r0, [r5, r6]
     cd0:	add	r3, r3, ip, lsl #8
     cd4:	uxth	r3, r3
     cd8:	ldr	r0, [r0, #204]	; 0xcc
     cdc:	bl	0 <coda_mem_uint16_new>
     ce0:	mov	r2, r0
     ce4:	movw	r1, #0
     ce8:	movt	r1, #0
     cec:	mov	r3, #0
     cf0:	mov	r0, r7
     cf4:	bl	0 <coda_mem_record_add_field>
     cf8:	cmp	r8, #0
     cfc:	ldrb	ip, [sp, #159]	; 0x9f
     d00:	mov	r2, r4
     d04:	bne	efc <read_grib1_message+0xcc0>
     d08:	ldrb	r3, [sp, #160]	; 0xa0
     d0c:	mov	r1, r8
     d10:	ldr	r0, [r5, r6]
     d14:	add	r3, r3, ip, lsl #8
     d18:	uxth	r3, r3
     d1c:	ldr	r0, [r0, #208]	; 0xd0
     d20:	bl	0 <coda_mem_uint16_new>
     d24:	mov	r2, r0
     d28:	movw	r1, #0
     d2c:	movt	r1, #0
     d30:	mov	r3, r8
     d34:	mov	r0, r7
     d38:	bl	0 <coda_mem_record_add_field>
     d3c:	ldr	r0, [r5, r6]
     d40:	mov	r2, r4
     d44:	mov	r1, #0
     d48:	ldrb	r3, [sp, #161]	; 0xa1
     d4c:	ldr	r0, [r0, #216]	; 0xd8
     d50:	bl	0 <coda_mem_uint8_new>
     d54:	mov	r2, r0
     d58:	mov	r3, #0
     d5c:	movw	r1, #0
     d60:	movt	r1, #0
     d64:	mov	r0, r7
     d68:	bl	0 <coda_mem_record_add_field>
     d6c:	ldr	r3, [sp, #16]
     d70:	adds	r3, r3, #32
     d74:	str	r3, [sp, #16]
     d78:	ldr	r3, [sp, #20]
     d7c:	adc	r3, r3, #0
     d80:	str	r3, [sp, #20]
     d84:	ldr	r3, [sp, #68]	; 0x44
     d88:	cmp	r3, #255	; 0xff
     d8c:	beq	fcc <read_grib1_message+0xd90>
     d90:	ldrd	r0, [sp, #16]
     d94:	sub	sl, r3, #1
     d98:	uxtb	r3, sl
     d9c:	str	r3, [sp, #68]	; 0x44
     da0:	sub	r3, r3, #32
     da4:	adds	r0, r0, r3
     da8:	adc	r1, r1, r3, asr #31
     dac:	ldr	r3, [sp, #56]	; 0x38
     db0:	strd	r0, [sp, #16]
     db4:	cmp	r3, #0
     db8:	bne	13a4 <read_grib1_message+0x1168>
     dbc:	ldr	r2, [sp, #56]	; 0x38
     dc0:	ldr	r3, [sp, #68]	; 0x44
     dc4:	add	sl, r3, r2, lsl #2
     dc8:	ldr	r3, [sp, #64]	; 0x40
     dcc:	cmp	sl, r3
     dd0:	bge	1370 <read_grib1_message+0x1134>
     dd4:	movw	r3, #65535	; 0xffff
     dd8:	cmp	fp, r3
     ddc:	beq	16b4 <read_grib1_message+0x1478>
     de0:	ldr	r2, [sp, #48]	; 0x30
     de4:	cmp	r2, r3
     de8:	movwne	r1, #0
     dec:	movtne	r1, #0
     df0:	bne	1388 <read_grib1_message+0x114c>
     df4:	ldr	r2, [sp, #64]	; 0x40
     df8:	lsl	r3, fp, #1
     dfc:	sub	sl, r2, sl
     e00:	cmp	sl, r3
     e04:	bne	1808 <read_grib1_message+0x15cc>
     e08:	ldr	r3, [r5, r6]
     e0c:	mov	r1, #0
     e10:	ldr	r0, [r3, #232]	; 0xe8
     e14:	bl	0 <coda_mem_array_new>
     e18:	cmp	fp, #0
     e1c:	mov	r8, r0
     e20:	beq	1768 <read_grib1_message+0x152c>
     e24:	ldrd	r0, [sp, #16]
     e28:	sub	fp, fp, #1
     e2c:	mov	r2, #0
     e30:	add	sl, r5, r6
     e34:	str	r9, [sp, #56]	; 0x38
     e38:	mov	r9, r2
     e3c:	str	r6, [sp, #60]	; 0x3c
     e40:	adds	r3, r0, #2
     e44:	str	r3, [sp, #80]	; 0x50
     e48:	adc	r3, r1, #0
     e4c:	str	r3, [sp, #84]	; 0x54
     e50:	mov	r3, #2
     e54:	ldrd	r0, [sp, #80]	; 0x50
     e58:	umlal	r0, r1, r3, fp
     e5c:	mov	fp, r7
     e60:	ldrd	r6, [sp, #16]
     e64:	strd	r0, [sp, #48]	; 0x30
     e68:	b	eb0 <read_grib1_message+0xc74>
     e6c:	ldrb	r0, [sp, #140]	; 0x8c
     e70:	ldrb	ip, [sp, #141]	; 0x8d
     e74:	ldr	r3, [sl]
     e78:	add	ip, ip, r0, lsl #8
     e7c:	ldr	r0, [r3, #228]	; 0xe4
     e80:	uxth	r3, ip
     e84:	add	r9, r9, ip
     e88:	bl	0 <coda_mem_uint16_new>
     e8c:	mov	r1, r0
     e90:	mov	r0, r8
     e94:	bl	0 <coda_mem_array_add_element>
     e98:	ldrd	r2, [sp, #48]	; 0x30
     e9c:	adds	r6, r6, #2
     ea0:	adc	r7, r7, #0
     ea4:	cmp	r7, r3
     ea8:	cmpeq	r6, r2
     eac:	beq	1650 <read_grib1_message+0x1414>
     eb0:	mov	r0, #2
     eb4:	mov	r1, #0
     eb8:	mov	r2, r6
     ebc:	mov	r3, r7
     ec0:	strd	r0, [sp]
     ec4:	add	r1, sp, #140	; 0x8c
     ec8:	str	r1, [sp, #8]
     ecc:	ldr	r0, [r4, #52]	; 0x34
     ed0:	bl	0 <read_bytes>
     ed4:	mov	r1, #0
     ed8:	mov	r2, r4
     edc:	cmp	r0, r1
     ee0:	bge	e6c <read_grib1_message+0xc30>
     ee4:	mov	r0, r8
     ee8:	bl	0 <coda_dynamic_type_delete>
     eec:	mov	r0, fp
     ef0:	bl	0 <coda_dynamic_type_delete>
     ef4:	mvn	r0, #0
     ef8:	b	12f0 <read_grib1_message+0x10b4>
     efc:	ldrb	r3, [sp, #160]	; 0xa0
     f00:	mov	r1, #0
     f04:	ldr	r0, [r5, r6]
     f08:	add	r3, r3, ip, lsl #8
     f0c:	uxth	r3, r3
     f10:	ldr	r0, [r0, #212]	; 0xd4
     f14:	bl	0 <coda_mem_uint16_new>
     f18:	mov	r2, r0
     f1c:	movw	r1, #0
     f20:	movt	r1, #0
     f24:	mov	r3, #0
     f28:	mov	r0, r7
     f2c:	bl	0 <coda_mem_record_add_field>
     f30:	b	d3c <read_grib1_message+0xb00>
     f34:	sub	r7, r8, #40	; 0x28
     f38:	mov	r0, r7
     f3c:	bl	0 <malloc>
     f40:	subs	r3, r0, #0
     f44:	movweq	r0, #1662	; 0x67e
     f48:	moveq	r2, r7
     f4c:	str	r3, [sp, #56]	; 0x38
     f50:	beq	17cc <read_grib1_message+0x1590>
     f54:	ldr	r3, [sp, #56]	; 0x38
     f58:	adds	r2, sl, #40	; 0x28
     f5c:	mov	sl, r7
     f60:	str	r3, [sp, #8]
     f64:	adc	r3, fp, #0
     f68:	asr	fp, r7, #31
     f6c:	ldr	r0, [r4, #52]	; 0x34
     f70:	strd	sl, [sp]
     f74:	bl	0 <read_bytes>
     f78:	cmp	r0, #0
     f7c:	blt	185c <read_grib1_message+0x1620>
     f80:	ldr	r0, [r5, r6]
     f84:	mov	r3, r7
     f88:	mov	r2, r4
     f8c:	mov	r1, #0
     f90:	ldr	sl, [sp, #56]	; 0x38
     f94:	ldr	r0, [r0, #128]	; 0x80
     f98:	str	sl, [sp]
     f9c:	bl	0 <coda_mem_raw_new>
     fa0:	mov	r7, r0
     fa4:	mov	r0, sl
     fa8:	bl	0 <free>
     fac:	mov	r2, r7
     fb0:	movw	r1, #0
     fb4:	movt	r1, #0
     fb8:	mov	r3, #0
     fbc:	mov	r0, r9
     fc0:	bl	0 <coda_mem_record_add_field>
     fc4:	b	70c <read_grib1_message+0x4d0>
     fc8:	.word	0x00000000
     fcc:	ldr	r3, [sp, #72]	; 0x48
     fd0:	ldr	r2, [sp, #76]	; 0x4c
     fd4:	orrs	r3, r3, r2
     fd8:	bne	1380 <read_grib1_message+0x1144>
     fdc:	ldr	r3, [sp, #64]	; 0x40
     fe0:	cmp	r3, #32
     fe4:	ble	ffc <read_grib1_message+0xdc0>
     fe8:	sub	lr, r3, #32
     fec:	ldrd	r2, [sp, #16]
     ff0:	adds	r2, r2, lr
     ff4:	adc	r3, r3, lr, asr #31
     ff8:	strd	r2, [sp, #16]
     ffc:	movw	r1, #0
    1000:	movt	r1, #0
    1004:	mov	r2, r7
    1008:	mov	r3, #0
    100c:	mov	r0, r9
    1010:	bl	0 <coda_mem_record_add_field>
    1014:	ldr	r3, [sp, #36]	; 0x24
    1018:	ldr	r0, [r4, #52]	; 0x34
    101c:	cmp	r3, #0
    1020:	beq	1310 <read_grib1_message+0x10d4>
    1024:	add	r3, sp, #140	; 0x8c
    1028:	mov	sl, #6
    102c:	mov	fp, #0
    1030:	strd	sl, [sp]
    1034:	str	r3, [sp, #8]
    1038:	ldrd	r2, [sp, #16]
    103c:	bl	0 <read_bytes>
    1040:	cmp	r0, #0
    1044:	blt	139c <read_grib1_message+0x1160>
    1048:	ldrb	r0, [sp, #144]	; 0x90
    104c:	ldrb	r2, [sp, #145]	; 0x91
    1050:	ldrb	r1, [sp, #140]	; 0x8c
    1054:	ldrb	r3, [sp, #141]	; 0x8d
    1058:	add	r2, r2, r0, lsl #8
    105c:	ldrb	sl, [sp, #142]	; 0x8e
    1060:	cmp	r2, #0
    1064:	add	r3, r3, r1, lsl #8
    1068:	add	sl, sl, r3, lsl #8
    106c:	bne	17ec <read_grib1_message+0x15b0>
    1070:	ldr	r1, [sp, #40]	; 0x28
    1074:	sub	r2, sl, #5
    1078:	sub	r8, sl, #6
    107c:	ands	r3, r1, #7
    1080:	movne	r3, #1
    1084:	add	r3, r3, r1, asr #3
    1088:	cmp	r2, r3
    108c:	ble	1778 <read_grib1_message+0x153c>
    1090:	mov	r0, r8
    1094:	bl	0 <malloc>
    1098:	subs	r7, r0, #0
    109c:	beq	17c4 <read_grib1_message+0x1588>
    10a0:	ldr	r3, [sp, #16]
    10a4:	asr	r1, r8, #31
    10a8:	mov	r0, r8
    10ac:	strd	r0, [sp]
    10b0:	str	r7, [sp, #8]
    10b4:	adds	r2, r3, #6
    10b8:	ldr	r3, [sp, #20]
    10bc:	ldr	r0, [r4, #52]	; 0x34
    10c0:	adc	r3, r3, #0
    10c4:	bl	0 <read_bytes>
    10c8:	cmp	r0, #0
    10cc:	blt	1758 <read_grib1_message+0x151c>
    10d0:	ldrd	r2, [sp, #16]
    10d4:	add	r1, sp, #140	; 0x8c
    10d8:	mov	fp, #0
    10dc:	str	r1, [sp, #8]
    10e0:	ldr	r0, [r4, #52]	; 0x34
    10e4:	adds	r2, r2, sl
    10e8:	adc	r3, r3, sl, asr #31
    10ec:	mov	sl, #11
    10f0:	strd	sl, [sp]
    10f4:	strd	r2, [sp, #16]
    10f8:	bl	0 <read_bytes>
    10fc:	cmp	r0, #0
    1100:	blt	1758 <read_grib1_message+0x151c>
    1104:	ldrb	r1, [sp, #140]	; 0x8c
    1108:	ldrb	fp, [sp, #141]	; 0x8d
    110c:	ldrb	r2, [sp, #142]	; 0x8e
    1110:	ldrb	r3, [sp, #143]	; 0x8f
    1114:	add	fp, fp, r1, lsl #8
    1118:	add	r2, r2, fp, lsl #8
    111c:	tst	r3, #128	; 0x80
    1120:	str	r2, [sp, #48]	; 0x30
    1124:	bne	1734 <read_grib1_message+0x14f8>
    1128:	tst	r3, #64	; 0x40
    112c:	bne	16ec <read_grib1_message+0x14b0>
    1130:	tst	r3, #16
    1134:	bne	1710 <read_grib1_message+0x14d4>
    1138:	ldrb	r3, [sp, #144]	; 0x90
    113c:	movw	r2, #65535	; 0xffff
    1140:	add	r0, sp, #146	; 0x92
    1144:	ldrb	r8, [sp, #145]	; 0x91
    1148:	tst	r3, #128	; 0x80
    114c:	and	r3, r3, #127	; 0x7f
    1150:	moveq	r2, #1
    1154:	add	r8, r8, r3, lsl #8
    1158:	smulbb	r8, r8, r2
    115c:	bl	178 <ibmfloat_to_iee754>
    1160:	ldrb	sl, [sp, #150]	; 0x96
    1164:	vmov.f32	s16, s0
    1168:	sxth	r8, r8
    116c:	cmp	sl, #63	; 0x3f
    1170:	bhi	16bc <read_grib1_message+0x1480>
    1174:	ldr	r3, [r5, r6]
    1178:	mov	r1, #0
    117c:	ldr	r0, [r3, #268]	; 0x10c
    1180:	bl	0 <coda_mem_record_new>
    1184:	mov	fp, r0
    1188:	ldr	r0, [r5, r6]
    118c:	mov	r3, sl
    1190:	mov	r2, r4
    1194:	mov	r1, #0
    1198:	ldr	r0, [r0, #248]	; 0xf8
    119c:	bl	0 <coda_mem_uint8_new>
    11a0:	mov	r2, r0
    11a4:	mov	r3, #0
    11a8:	movw	r1, #0
    11ac:	movt	r1, #0
    11b0:	mov	r0, fp
    11b4:	bl	0 <coda_mem_record_add_field>
    11b8:	ldr	r0, [r5, r6]
    11bc:	mov	r3, r8
    11c0:	mov	r2, r4
    11c4:	mov	r1, #0
    11c8:	ldr	r0, [r0, #252]	; 0xfc
    11cc:	bl	0 <coda_mem_int16_new>
    11d0:	mov	r2, r0
    11d4:	mov	r3, #0
    11d8:	movw	r1, #0
    11dc:	movt	r1, #0
    11e0:	mov	r0, fp
    11e4:	bl	0 <coda_mem_record_add_field>
    11e8:	ldr	r3, [r5, r6]
    11ec:	vmov.f32	s0, s16
    11f0:	mov	r2, r4
    11f4:	mov	r1, #0
    11f8:	ldr	r0, [r3, #256]	; 0x100
    11fc:	bl	0 <coda_mem_float_new>
    1200:	mov	r2, r0
    1204:	mov	r3, #0
    1208:	movw	r1, #0
    120c:	movt	r1, #0
    1210:	mov	r0, fp
    1214:	bl	0 <coda_mem_record_add_field>
    1218:	ldrd	r2, [sp, #16]
    121c:	vmov.f32	s0, s16
    1220:	ldr	r0, [r5, r6]
    1224:	ldr	ip, [sp, #44]	; 0x2c
    1228:	adds	r1, r2, #11
    122c:	adc	r3, r3, #0
    1230:	str	r1, [sp, #24]
    1234:	str	r3, [sp, #28]
    1238:	ldrd	r2, [sp, #24]
    123c:	ldr	r1, [sp, #40]	; 0x28
    1240:	ldr	r0, [r0, #260]	; 0x104
    1244:	stm	sp, {sl, ip}
    1248:	str	r8, [sp, #8]
    124c:	str	r7, [sp, #12]
    1250:	bl	0 <coda_grib_value_array_simple_packing_new>
    1254:	cmp	r7, #0
    1258:	mov	r5, r0
    125c:	beq	1268 <read_grib1_message+0x102c>
    1260:	mov	r0, r7
    1264:	bl	0 <free>
    1268:	mov	r2, r5
    126c:	mov	r3, #0
    1270:	mov	r0, fp
    1274:	movw	r1, #0
    1278:	movt	r1, #0
    127c:	mov	r6, #4
    1280:	bl	0 <coda_mem_record_add_field>
    1284:	mov	r2, fp
    1288:	mov	r0, r9
    128c:	mov	r3, #0
    1290:	movw	r1, #0
    1294:	movt	r1, #0
    1298:	mov	r7, #0
    129c:	bl	0 <coda_mem_record_add_field>
    12a0:	ldrd	r8, [sp, #24]
    12a4:	ldr	r3, [sp, #48]	; 0x30
    12a8:	sub	fp, r3, #11
    12ac:	add	r3, sp, #140	; 0x8c
    12b0:	adds	r8, r8, fp
    12b4:	adc	r9, r9, fp, asr #31
    12b8:	mov	r2, r8
    12bc:	str	r3, [sp, #8]
    12c0:	ldr	r0, [r4, #52]	; 0x34
    12c4:	mov	r3, r9
    12c8:	strd	r6, [sp]
    12cc:	bl	0 <read_bytes>
    12d0:	cmp	r0, #0
    12d4:	blt	139c <read_grib1_message+0x1160>
    12d8:	ldr	r2, [sp, #140]	; 0x8c
    12dc:	movw	r3, #14135	; 0x3737
    12e0:	movt	r3, #14135	; 0x3737
    12e4:	cmp	r2, r3
    12e8:	moveq	r0, #0
    12ec:	bne	179c <read_grib1_message+0x1560>
    12f0:	add	sp, sp, #172	; 0xac
    12f4:	vpop	{d8}
    12f8:	ldrd	r4, [sp]
    12fc:	ldrd	r6, [sp, #8]
    1300:	ldrd	r8, [sp, #16]
    1304:	ldrd	sl, [sp, #24]
    1308:	add	sp, sp, #32
    130c:	pop	{pc}		; (ldr pc, [sp], #4)
    1310:	add	r3, sp, #140	; 0x8c
    1314:	mov	sl, #11
    1318:	mov	fp, #0
    131c:	strd	sl, [sp]
    1320:	str	r3, [sp, #8]
    1324:	ldrd	r2, [sp, #16]
    1328:	bl	0 <read_bytes>
    132c:	cmp	r0, #0
    1330:	blt	139c <read_grib1_message+0x1160>
    1334:	ldrb	r1, [sp, #140]	; 0x8c
    1338:	ldrb	fp, [sp, #141]	; 0x8d
    133c:	ldrb	r2, [sp, #142]	; 0x8e
    1340:	ldrb	r3, [sp, #143]	; 0x8f
    1344:	add	fp, fp, r1, lsl #8
    1348:	add	r2, r2, fp, lsl #8
    134c:	tst	r3, #128	; 0x80
    1350:	str	r2, [sp, #48]	; 0x30
    1354:	bne	173c <read_grib1_message+0x1500>
    1358:	tst	r3, #64	; 0x40
    135c:	bne	16f4 <read_grib1_message+0x14b8>
    1360:	tst	r3, #16
    1364:	bne	1718 <read_grib1_message+0x14dc>
    1368:	ldr	r7, [sp, #36]	; 0x24
    136c:	b	1138 <read_grib1_message+0xefc>
    1370:	ldr	r3, [sp, #72]	; 0x48
    1374:	ldr	r2, [sp, #76]	; 0x4c
    1378:	orrs	r3, r3, r2
    137c:	beq	ffc <read_grib1_message+0xdc0>
    1380:	movw	r1, #0
    1384:	movt	r1, #0
    1388:	movw	r0, #65236	; 0xfed4
    138c:	movt	r0, #65535	; 0xffff
    1390:	bl	0 <coda_set_error>
    1394:	mov	r0, r7
    1398:	bl	0 <coda_dynamic_type_delete>
    139c:	mvn	r0, #0
    13a0:	b	12f0 <read_grib1_message+0x10b4>
    13a4:	mov	r8, r5
    13a8:	mov	r1, #0
    13ac:	ldr	r3, [r8, r6]!
    13b0:	ldr	r0, [r3, #224]	; 0xe0
    13b4:	bl	0 <coda_mem_array_new>
    13b8:	ldr	ip, [sp, #16]
    13bc:	mov	r2, #0
    13c0:	str	r0, [sp, #60]	; 0x3c
    13c4:	ldr	r3, [sp, #56]	; 0x38
    13c8:	str	r7, [sp, #96]	; 0x60
    13cc:	str	fp, [sp, #100]	; 0x64
    13d0:	str	r9, [sp, #104]	; 0x68
    13d4:	str	r6, [sp, #108]	; 0x6c
    13d8:	sub	r3, r3, #1
    13dc:	adds	r3, r3, #1
    13e0:	lsl	r1, r3, #2
    13e4:	adc	r2, r2, r2
    13e8:	lsl	r2, r2, #2
    13ec:	adds	r1, r1, ip
    13f0:	orr	r2, r2, r3, lsr #30
    13f4:	str	r1, [sp, #88]	; 0x58
    13f8:	ldrd	r0, [sp, #16]
    13fc:	adc	r3, r2, r1
    1400:	mov	sl, r0
    1404:	mov	fp, r1
    1408:	str	r3, [sp, #92]	; 0x5c
    140c:	ldrd	r6, [sp, #88]	; 0x58
    1410:	b	1450 <read_grib1_message+0x1214>
    1414:	ldr	r3, [r8]
    1418:	ldr	r9, [r3, #220]	; 0xdc
    141c:	bl	178 <ibmfloat_to_iee754>
    1420:	mov	r2, r4
    1424:	mov	r1, #0
    1428:	mov	r0, r9
    142c:	bl	0 <coda_mem_float_new>
    1430:	mov	r1, r0
    1434:	ldr	r0, [sp, #60]	; 0x3c
    1438:	bl	0 <coda_mem_array_add_element>
    143c:	adds	sl, sl, #4
    1440:	adc	fp, fp, #0
    1444:	cmp	r7, fp
    1448:	cmpeq	r6, sl
    144c:	beq	1684 <read_grib1_message+0x1448>
    1450:	mov	r0, #4
    1454:	mov	r1, #0
    1458:	mov	r2, sl
    145c:	mov	r3, fp
    1460:	strd	r0, [sp]
    1464:	add	r1, sp, #140	; 0x8c
    1468:	str	r1, [sp, #8]
    146c:	ldr	r0, [r4, #52]	; 0x34
    1470:	bl	0 <read_bytes>
    1474:	cmp	r0, #0
    1478:	add	r0, sp, #140	; 0x8c
    147c:	bge	1414 <read_grib1_message+0x11d8>
    1480:	ldr	r0, [sp, #60]	; 0x3c
    1484:	ldr	r7, [sp, #96]	; 0x60
    1488:	bl	0 <coda_dynamic_type_delete>
    148c:	mov	r0, r7
    1490:	bl	0 <coda_dynamic_type_delete>
    1494:	mvn	r0, #0
    1498:	b	12f0 <read_grib1_message+0x10b4>
    149c:	movw	r3, #6889	; 0x1ae9
    14a0:	str	r3, [sp, #40]	; 0x28
    14a4:	b	1014 <read_grib1_message+0xdd8>
    14a8:	movw	r3, #65160	; 0xfe88
    14ac:	str	r3, [sp, #40]	; 0x28
    14b0:	b	1014 <read_grib1_message+0xdd8>
    14b4:	movw	r3, #1297	; 0x511
    14b8:	str	r3, [sp, #40]	; 0x28
    14bc:	b	1014 <read_grib1_message+0xdd8>
    14c0:	movw	r3, #2385	; 0x951
    14c4:	str	r3, [sp, #40]	; 0x28
    14c8:	b	1014 <read_grib1_message+0xdd8>
    14cc:	mov	r3, #4096	; 0x1000
    14d0:	str	r3, [sp, #40]	; 0x28
    14d4:	b	1014 <read_grib1_message+0xdd8>
    14d8:	movw	r3, #63312	; 0xf750
    14dc:	movt	r3, #3
    14e0:	str	r3, [sp, #40]	; 0x28
    14e4:	b	1014 <read_grib1_message+0xdd8>
    14e8:	movw	r3, #19305	; 0x4b69
    14ec:	str	r3, [sp, #40]	; 0x28
    14f0:	b	1014 <read_grib1_message+0xdd8>
    14f4:	movw	r3, #5104	; 0x13f0
    14f8:	str	r3, [sp, #40]	; 0x28
    14fc:	b	1014 <read_grib1_message+0xdd8>
    1500:	movw	r3, #1679	; 0x68f
    1504:	str	r3, [sp, #40]	; 0x28
    1508:	b	1014 <read_grib1_message+0xdd8>
    150c:	movw	r3, #6177	; 0x1821
    1510:	str	r3, [sp, #40]	; 0x28
    1514:	b	1014 <read_grib1_message+0xdd8>
    1518:	movw	r3, #5967	; 0x174f
    151c:	str	r3, [sp, #40]	; 0x28
    1520:	b	1014 <read_grib1_message+0xdd8>
    1524:	mov	r3, #964	; 0x3c4
    1528:	str	r3, [sp, #40]	; 0x28
    152c:	b	1014 <read_grib1_message+0xdd8>
    1530:	movw	r3, #8326	; 0x2086
    1534:	str	r3, [sp, #40]	; 0x28
    1538:	b	1014 <read_grib1_message+0xdd8>
    153c:	movw	r3, #5365	; 0x14f5
    1540:	str	r3, [sp, #40]	; 0x28
    1544:	b	1014 <read_grib1_message+0xdd8>
    1548:	movw	r3, #4225	; 0x1081
    154c:	str	r3, [sp, #40]	; 0x28
    1550:	b	1014 <read_grib1_message+0xdd8>
    1554:	movw	r3, #12321	; 0x3021
    1558:	str	r3, [sp, #40]	; 0x28
    155c:	b	1014 <read_grib1_message+0xdd8>
    1560:	movw	r3, #1333	; 0x535
    1564:	str	r3, [sp, #40]	; 0x28
    1568:	b	1014 <read_grib1_message+0xdd8>
    156c:	movw	r3, #16170	; 0x3f2a
    1570:	str	r3, [sp, #40]	; 0x28
    1574:	b	1014 <read_grib1_message+0xdd8>
    1578:	movw	r3, #3640	; 0xe38
    157c:	str	r3, [sp, #40]	; 0x28
    1580:	b	1014 <read_grib1_message+0xdd8>
    1584:	movw	r3, #10283	; 0x282b
    1588:	str	r3, [sp, #40]	; 0x28
    158c:	b	1014 <read_grib1_message+0xdd8>
    1590:	movw	r3, #11040	; 0x2b20
    1594:	str	r3, [sp, #40]	; 0x28
    1598:	b	1014 <read_grib1_message+0xdd8>
    159c:	movw	r3, #17723	; 0x453b
    15a0:	movt	r3, #1
    15a4:	str	r3, [sp, #40]	; 0x28
    15a8:	b	1014 <read_grib1_message+0xdd8>
    15ac:	movw	r3, #41630	; 0xa29e
    15b0:	str	r3, [sp, #40]	; 0x28
    15b4:	b	1014 <read_grib1_message+0xdd8>
    15b8:	movw	r3, #32295	; 0x7e27
    15bc:	movt	r3, #1
    15c0:	str	r3, [sp, #40]	; 0x28
    15c4:	b	1014 <read_grib1_message+0xdd8>
    15c8:	movw	r3, #48916	; 0xbf14
    15cc:	str	r3, [sp, #40]	; 0x28
    15d0:	b	1014 <read_grib1_message+0xdd8>
    15d4:	movw	r3, #31353	; 0x7a79
    15d8:	movt	r3, #2
    15dc:	str	r3, [sp, #40]	; 0x28
    15e0:	b	1014 <read_grib1_message+0xdd8>
    15e4:	movw	r3, #15677	; 0x3d3d
    15e8:	movt	r3, #1
    15ec:	str	r3, [sp, #40]	; 0x28
    15f0:	b	1014 <read_grib1_message+0xdd8>
    15f4:	movw	r3, #25803	; 0x64cb
    15f8:	str	r3, [sp, #40]	; 0x28
    15fc:	b	1014 <read_grib1_message+0xdd8>
    1600:	movw	r3, #12902	; 0x3266
    1604:	str	r3, [sp, #40]	; 0x28
    1608:	b	1014 <read_grib1_message+0xdd8>
    160c:	movw	r3, #5022	; 0x139e
    1610:	str	r3, [sp, #40]	; 0x28
    1614:	b	1014 <read_grib1_message+0xdd8>
    1618:	movw	r3, #32400	; 0x7e90
    161c:	str	r3, [sp, #40]	; 0x28
    1620:	b	1014 <read_grib1_message+0xdd8>
    1624:	movw	r3, #10512	; 0x2910
    1628:	str	r3, [sp, #40]	; 0x28
    162c:	b	1014 <read_grib1_message+0xdd8>
    1630:	movw	r1, #0
    1634:	movt	r1, #0
    1638:	ldr	r2, [sp, #48]	; 0x30
    163c:	movw	r0, #65236	; 0xfed4
    1640:	movt	r0, #65535	; 0xffff
    1644:	bl	0 <coda_set_error>
    1648:	mvn	r0, #0
    164c:	b	12f0 <read_grib1_message+0x10b4>
    1650:	str	r9, [sp, #40]	; 0x28
    1654:	mov	r7, fp
    1658:	ldr	r9, [sp, #56]	; 0x38
    165c:	ldr	r6, [sp, #60]	; 0x3c
    1660:	mov	r2, r8
    1664:	movw	r1, #0
    1668:	movt	r1, #0
    166c:	ldrd	sl, [sp, #48]	; 0x30
    1670:	mov	r3, #0
    1674:	mov	r0, r7
    1678:	strd	sl, [sp, #16]
    167c:	bl	0 <coda_mem_record_add_field>
    1680:	b	ffc <read_grib1_message+0xdc0>
    1684:	movw	r1, #0
    1688:	movt	r1, #0
    168c:	ldr	r2, [sp, #60]	; 0x3c
    1690:	mov	r3, #0
    1694:	strd	sl, [sp, #16]
    1698:	ldr	r7, [sp, #96]	; 0x60
    169c:	ldr	fp, [sp, #100]	; 0x64
    16a0:	ldr	r9, [sp, #104]	; 0x68
    16a4:	mov	r0, r7
    16a8:	ldr	r6, [sp, #108]	; 0x6c
    16ac:	bl	0 <coda_mem_record_add_field>
    16b0:	b	dbc <read_grib1_message+0xb80>
    16b4:	ldr	fp, [sp, #48]	; 0x30
    16b8:	b	df4 <read_grib1_message+0xbb8>
    16bc:	cmp	r7, #0
    16c0:	beq	16cc <read_grib1_message+0x1490>
    16c4:	mov	r0, r7
    16c8:	bl	0 <free>
    16cc:	mov	r2, sl
    16d0:	movw	r1, #0
    16d4:	movt	r1, #0
    16d8:	movw	r0, #65236	; 0xfed4
    16dc:	movt	r0, #65535	; 0xffff
    16e0:	bl	0 <coda_set_error>
    16e4:	mvn	r0, #0
    16e8:	b	12f0 <read_grib1_message+0x10b4>
    16ec:	mov	r0, r7
    16f0:	bl	0 <free>
    16f4:	movw	r1, #0
    16f8:	movt	r1, #0
    16fc:	movw	r0, #65236	; 0xfed4
    1700:	movt	r0, #65535	; 0xffff
    1704:	bl	0 <coda_set_error>
    1708:	mvn	r0, #0
    170c:	b	12f0 <read_grib1_message+0x10b4>
    1710:	mov	r0, r7
    1714:	bl	0 <free>
    1718:	movw	r1, #0
    171c:	movt	r1, #0
    1720:	movw	r0, #65236	; 0xfed4
    1724:	movt	r0, #65535	; 0xffff
    1728:	bl	0 <coda_set_error>
    172c:	mvn	r0, #0
    1730:	b	12f0 <read_grib1_message+0x10b4>
    1734:	mov	r0, r7
    1738:	bl	0 <free>
    173c:	movw	r1, #0
    1740:	movt	r1, #0
    1744:	movw	r0, #65236	; 0xfed4
    1748:	movt	r0, #65535	; 0xffff
    174c:	bl	0 <coda_set_error>
    1750:	mvn	r0, #0
    1754:	b	12f0 <read_grib1_message+0x10b4>
    1758:	mov	r0, r7
    175c:	bl	0 <free>
    1760:	mvn	r0, #0
    1764:	b	12f0 <read_grib1_message+0x10b4>
    1768:	ldrd	r2, [sp, #16]
    176c:	str	fp, [sp, #40]	; 0x28
    1770:	strd	r2, [sp, #48]	; 0x30
    1774:	b	1660 <read_grib1_message+0x1424>
    1778:	mov	r2, r8
    177c:	movw	r0, #65236	; 0xfed4
    1780:	movt	r0, #65535	; 0xffff
    1784:	str	r1, [sp]
    1788:	movw	r1, #0
    178c:	movt	r1, #0
    1790:	bl	0 <coda_set_error>
    1794:	mvn	r0, #0
    1798:	b	12f0 <read_grib1_message+0x10b4>
    179c:	mov	r0, r8
    17a0:	mov	r1, r9
    17a4:	add	r2, sp, #116	; 0x74
    17a8:	bl	0 <coda_str64>
    17ac:	add	r2, sp, #116	; 0x74
    17b0:	movw	r1, #0
    17b4:	movt	r1, #0
    17b8:	mvn	r0, #21
    17bc:	bl	0 <coda_set_error>
    17c0:	b	139c <read_grib1_message+0x1160>
    17c4:	movw	r0, #2063	; 0x80f
    17c8:	mov	r2, r8
    17cc:	movw	r3, #0
    17d0:	movt	r3, #0
    17d4:	str	r0, [sp]
    17d8:	movw	r1, #0
    17dc:	movt	r1, #0
    17e0:	mvn	r0, #0
    17e4:	bl	0 <coda_set_error>
    17e8:	b	139c <read_grib1_message+0x1160>
    17ec:	movw	r1, #0
    17f0:	movt	r1, #0
    17f4:	movw	r0, #65236	; 0xfed4
    17f8:	movt	r0, #65535	; 0xffff
    17fc:	bl	0 <coda_set_error>
    1800:	mvn	r0, #0
    1804:	b	12f0 <read_grib1_message+0x10b4>
    1808:	mov	r2, sl
    180c:	movw	r1, #0
    1810:	movt	r1, #0
    1814:	movw	r0, #65236	; 0xfed4
    1818:	movt	r0, #65535	; 0xffff
    181c:	bl	0 <coda_set_error>
    1820:	mov	r0, r7
    1824:	bl	0 <coda_dynamic_type_delete>
    1828:	mvn	r0, #0
    182c:	b	12f0 <read_grib1_message+0x10b4>
    1830:	movw	r1, #0
    1834:	movt	r1, #0
    1838:	movw	r0, #65236	; 0xfed4
    183c:	movt	r0, #65535	; 0xffff
    1840:	bl	0 <coda_set_error>
    1844:	mvn	r0, #0
    1848:	b	12f0 <read_grib1_message+0x10b4>
    184c:	mov	r0, r7
    1850:	bl	0 <coda_grib_type_delete>
    1854:	mvn	r0, #0
    1858:	b	12f0 <read_grib1_message+0x10b4>
    185c:	ldr	r0, [sp, #56]	; 0x38
    1860:	bl	0 <free>
    1864:	mvn	r0, #0
    1868:	b	12f0 <read_grib1_message+0x10b4>
    186c:	movw	r1, #0
    1870:	movt	r1, #0
    1874:	movw	r0, #65236	; 0xfed4
    1878:	movt	r0, #65535	; 0xffff
    187c:	bl	0 <coda_set_error>
    1880:	mvn	r0, #0
    1884:	b	12f0 <read_grib1_message+0x10b4>

00001888 <coda_grib_done>:
    1888:	strd	r4, [sp, #-24]!	; 0xffffffe8
    188c:	strd	r6, [sp, #8]
    1890:	mrc	15, 0, r7, cr13, cr0, {3}
    1894:	str	r8, [sp, #16]
    1898:	ldr	r8, [pc, #96]	; 1900 <coda_grib_done+0x78>
    189c:	str	lr, [sp, #20]
    18a0:	ldr	r2, [r8, r7]
    18a4:	cmp	r2, #0
    18a8:	beq	18ec <coda_grib_done+0x64>
    18ac:	mov	r4, #0
    18b0:	add	r6, r8, r7
    18b4:	mov	r5, r4
    18b8:	ldr	r3, [r2, r4]
    18bc:	subs	r0, r3, #0
    18c0:	beq	18d0 <coda_grib_done+0x48>
    18c4:	bl	0 <coda_type_release>
    18c8:	ldr	r2, [r6]
    18cc:	str	r5, [r2, r4]
    18d0:	add	r4, r4, #4
    18d4:	cmp	r4, #572	; 0x23c
    18d8:	bne	18b8 <coda_grib_done+0x30>
    18dc:	mov	r0, r2
    18e0:	bl	0 <free>
    18e4:	mov	r3, #0
    18e8:	str	r3, [r8, r7]
    18ec:	ldrd	r4, [sp]
    18f0:	ldrd	r6, [sp, #8]
    18f4:	ldr	r8, [sp, #16]
    18f8:	add	sp, sp, #20
    18fc:	pop	{pc}		; (ldr pc, [sp], #4)
    1900:	.word	0x00000000

00001904 <coda_grib_close>:
    1904:	str	r4, [sp, #-8]!
    1908:	mov	r4, r0
    190c:	ldr	r0, [r0]
    1910:	str	lr, [sp, #4]
    1914:	cmp	r0, #0
    1918:	beq	1920 <coda_grib_close+0x1c>
    191c:	bl	0 <free>
    1920:	ldr	r0, [r4, #20]
    1924:	cmp	r0, #0
    1928:	beq	1930 <coda_grib_close+0x2c>
    192c:	bl	0 <coda_dynamic_type_delete>
    1930:	ldr	r0, [r4, #48]	; 0x30
    1934:	cmp	r0, #0
    1938:	beq	1940 <coda_grib_close+0x3c>
    193c:	bl	0 <free>
    1940:	ldr	r0, [r4, #52]	; 0x34
    1944:	cmp	r0, #0
    1948:	beq	1950 <coda_grib_close+0x4c>
    194c:	bl	0 <coda_bin_close>
    1950:	mov	r0, r4
    1954:	bl	0 <free>
    1958:	ldr	r4, [sp]
    195c:	add	sp, sp, #4
    1960:	mov	r0, #0
    1964:	pop	{pc}		; (ldr pc, [sp], #4)

00001968 <coda_grib_reopen>:
    1968:	strd	r4, [sp, #-36]!	; 0xffffffdc
    196c:	ldr	r5, [pc, #440]	; 1b2c <coda_grib_reopen+0x1c4>
    1970:	strd	r6, [sp, #8]
    1974:	strd	r8, [sp, #16]
    1978:	mrc	15, 0, r8, cr13, cr0, {3}
    197c:	strd	sl, [sp, #24]
    1980:	str	lr, [sp, #32]
    1984:	ldr	r6, [r5, r8]
    1988:	vpush	{d8-d11}
    198c:	sub	sp, sp, #364	; 0x16c
    1990:	str	r0, [sp, #92]	; 0x5c
    1994:	cmp	r6, #0
    1998:	beq	3494 <coda_grib_reopen+0x1b2c>
    199c:	mov	r0, #56	; 0x38
    19a0:	bl	0 <malloc>
    19a4:	subs	r7, r0, #0
    19a8:	beq	7a30 <coda_grib_reopen+0x60c8>
    19ac:	ldr	r3, [sp, #92]	; 0x5c
    19b0:	mov	r6, #0
    19b4:	mov	r0, #7
    19b8:	ldr	r1, [r3]
    19bc:	ldrd	r2, [r1, #8]
    19c0:	str	r6, [r7]
    19c4:	strd	r2, [r7, #8]
    19c8:	str	r0, [r7, #16]
    19cc:	str	r6, [r7, #20]
    19d0:	str	r6, [r7, #24]
    19d4:	str	r6, [r7, #28]
    19d8:	str	r6, [r7, #32]
    19dc:	str	r6, [r7, #40]	; 0x28
    19e0:	str	r6, [r7, #44]	; 0x2c
    19e4:	str	r6, [r7, #48]	; 0x30
    19e8:	str	r1, [r7, #52]	; 0x34
    19ec:	ldr	r0, [r1]
    19f0:	bl	0 <strdup>
    19f4:	cmp	r0, r6
    19f8:	str	r0, [r7]
    19fc:	beq	7a68 <coda_grib_reopen+0x6100>
    1a00:	ldr	r3, [r5, r8]
    1a04:	mov	r1, r6
    1a08:	ldr	r0, [r3, #568]	; 0x238
    1a0c:	bl	0 <coda_mem_array_new>
    1a10:	ldrd	r2, [r7, #8]
    1a14:	str	r0, [r7, #20]
    1a18:	cmp	r2, #2
    1a1c:	sbcs	r1, r3, #0
    1a20:	blt	1af4 <coda_grib_reopen+0x18c>
    1a24:	vldr	s22, [pc, #252]	; 1b28 <coda_grib_reopen+0x1c0>
    1a28:	mov	sl, r6
    1a2c:	mov	fp, r6
    1a30:	mov	r9, r8
    1a34:	str	r6, [sp, #72]	; 0x48
    1a38:	mov	r6, r7
    1a3c:	vldr	d10, [pc, #220]	; 1b20 <coda_grib_reopen+0x1b8>
    1a40:	subs	r1, r2, #1
    1a44:	mov	ip, #0
    1a48:	str	r1, [sp, #40]	; 0x28
    1a4c:	sbc	r1, r3, #0
    1a50:	str	r1, [sp, #44]	; 0x2c
    1a54:	ldrd	r0, [sp, #40]	; 0x28
    1a58:	strb	ip, [sp, #268]	; 0x10c
    1a5c:	cmp	sl, r0
    1a60:	sbcs	r1, fp, r1
    1a64:	bge	33d4 <coda_grib_reopen+0x1a6c>
    1a68:	mov	r4, r6
    1a6c:	str	r9, [sp, #28]
    1a70:	b	1ab0 <coda_grib_reopen+0x148>
    1a74:	add	r1, r1, sl
    1a78:	ldrb	r1, [r1]
    1a7c:	strb	r1, [sp, #268]	; 0x10c
    1a80:	adds	r8, sl, #1
    1a84:	adc	r9, fp, #0
    1a88:	subs	r6, r2, #1
    1a8c:	sbc	r7, r3, #0
    1a90:	cmp	r8, r6
    1a94:	sbcs	r1, r9, r7
    1a98:	bge	1af0 <coda_grib_reopen+0x188>
    1a9c:	ldrb	r1, [sp, #268]	; 0x10c
    1aa0:	cmp	r1, #71	; 0x47
    1aa4:	beq	1b30 <coda_grib_reopen+0x1c8>
    1aa8:	mov	sl, r8
    1aac:	mov	fp, r9
    1ab0:	ldr	r0, [r4, #52]	; 0x34
    1ab4:	ldr	r1, [r0, #48]	; 0x30
    1ab8:	cmp	r1, #0
    1abc:	bne	1a74 <coda_grib_reopen+0x10c>
    1ac0:	ldr	r3, [r0, #16]
    1ac4:	cmp	r3, #1
    1ac8:	bhi	7a4c <coda_grib_reopen+0x60e4>
    1acc:	mov	r3, sl
    1ad0:	mov	r2, #1
    1ad4:	ldr	r0, [r0, #56]	; 0x38
    1ad8:	add	r1, sp, #268	; 0x10c
    1adc:	bl	0 <pread>
    1ae0:	cmp	r0, #0
    1ae4:	blt	7744 <coda_grib_reopen+0x5ddc>
    1ae8:	ldrd	r2, [r4, #8]
    1aec:	b	1a80 <coda_grib_reopen+0x118>
    1af0:	mov	r7, r4
    1af4:	ldr	r3, [sp, #92]	; 0x5c
    1af8:	mov	r0, #0
    1afc:	str	r7, [r3]
    1b00:	add	sp, sp, #364	; 0x16c
    1b04:	vpop	{d8-d11}
    1b08:	ldrd	r4, [sp]
    1b0c:	ldrd	r6, [sp, #8]
    1b10:	ldrd	r8, [sp, #16]
    1b14:	ldrd	sl, [sp, #24]
    1b18:	add	sp, sp, #32
    1b1c:	pop	{pc}		; (ldr pc, [sp], #4)
    1b20:	.word	0x00000000
    1b24:	.word	0x40240000
	...
    1b30:	add	ip, sp, #268	; 0x10c
    1b34:	mov	r0, #8
    1b38:	mov	r1, #0
    1b3c:	mov	r2, sl
    1b40:	mov	r3, fp
    1b44:	strd	r0, [sp]
    1b48:	str	ip, [sp, #8]
    1b4c:	ldr	r0, [r4, #52]	; 0x34
    1b50:	strd	r8, [sp, #104]	; 0x68
    1b54:	strd	r6, [sp, #112]	; 0x70
    1b58:	mov	r6, r4
    1b5c:	ldr	r9, [sp, #28]
    1b60:	bl	0 <read_bytes>
    1b64:	cmp	r0, #0
    1b68:	blt	7710 <coda_grib_reopen+0x5da8>
    1b6c:	ldrb	r3, [sp, #268]	; 0x10c
    1b70:	cmp	r3, #71	; 0x47
    1b74:	bne	7670 <coda_grib_reopen+0x5d08>
    1b78:	ldrb	r3, [sp, #269]	; 0x10d
    1b7c:	cmp	r3, #82	; 0x52
    1b80:	bne	7670 <coda_grib_reopen+0x5d08>
    1b84:	ldrb	r3, [sp, #270]	; 0x10e
    1b88:	cmp	r3, #73	; 0x49
    1b8c:	bne	7670 <coda_grib_reopen+0x5d08>
    1b90:	ldrb	r3, [sp, #271]	; 0x10f
    1b94:	cmp	r3, #66	; 0x42
    1b98:	bne	7670 <coda_grib_reopen+0x5d08>
    1b9c:	ldrb	r4, [sp, #275]	; 0x113
    1ba0:	sub	r3, r4, #1
    1ba4:	cmp	r3, #1
    1ba8:	bhi	7798 <coda_grib_reopen+0x5e30>
    1bac:	ldr	r3, [r5, r9]
    1bb0:	mov	r1, #0
    1bb4:	ldr	r0, [r3, #564]	; 0x234
    1bb8:	bl	0 <coda_mem_record_new>
    1bbc:	adds	r7, sl, #8
    1bc0:	str	r0, [sp, #60]	; 0x3c
    1bc4:	adc	r8, fp, #0
    1bc8:	cmp	r4, #1
    1bcc:	beq	32f0 <coda_grib_reopen+0x1988>
    1bd0:	add	ip, sp, #232	; 0xe8
    1bd4:	mov	r0, #8
    1bd8:	mov	r1, #0
    1bdc:	mov	r2, r7
    1be0:	mov	r3, r8
    1be4:	strd	r0, [sp]
    1be8:	str	ip, [sp, #8]
    1bec:	ldr	r0, [r6, #52]	; 0x34
    1bf0:	bl	0 <read_bytes>
    1bf4:	cmp	r0, #0
    1bf8:	blt	7710 <coda_grib_reopen+0x5da8>
    1bfc:	ldrb	r2, [sp, #239]	; 0xef
    1c00:	mov	r1, #0
    1c04:	ldrb	r3, [sp, #232]	; 0xe8
    1c08:	ldrb	ip, [sp, #238]	; 0xee
    1c0c:	strb	r2, [sp, #232]	; 0xe8
    1c10:	ldrb	r2, [sp, #233]	; 0xe9
    1c14:	ldr	r0, [r5, r9]
    1c18:	strb	r3, [sp, #239]	; 0xef
    1c1c:	ldrb	r3, [sp, #237]	; 0xed
    1c20:	strb	ip, [sp, #233]	; 0xe9
    1c24:	ldrb	ip, [sp, #234]	; 0xea
    1c28:	ldr	r0, [r0, #560]	; 0x230
    1c2c:	strb	r3, [sp, #234]	; 0xea
    1c30:	ldrb	r3, [sp, #235]	; 0xeb
    1c34:	strb	r2, [sp, #238]	; 0xee
    1c38:	ldrb	r2, [sp, #236]	; 0xec
    1c3c:	strb	ip, [sp, #237]	; 0xed
    1c40:	strb	r2, [sp, #235]	; 0xeb
    1c44:	strb	r3, [sp, #236]	; 0xec
    1c48:	bl	0 <coda_mem_record_new>
    1c4c:	ldr	ip, [sp, #60]	; 0x3c
    1c50:	mov	r4, r0
    1c54:	mov	r3, #2
    1c58:	mov	r2, r6
    1c5c:	mov	r1, #0
    1c60:	ldr	r0, [r5, r9]
    1c64:	str	r4, [sp, #180]	; 0xb4
    1c68:	ldr	ip, [ip, #20]
    1c6c:	ldr	r0, [r0, #284]	; 0x11c
    1c70:	str	r4, [ip, #4]
    1c74:	bl	0 <coda_mem_uint8_new>
    1c78:	mov	r2, r0
    1c7c:	mov	r3, #0
    1c80:	mov	r0, r4
    1c84:	movw	r1, #0
    1c88:	movt	r1, #0
    1c8c:	bl	0 <coda_mem_record_add_field>
    1c90:	ldr	r0, [r5, r9]
    1c94:	mov	r2, r6
    1c98:	mov	r1, #0
    1c9c:	ldrb	r3, [sp, #274]	; 0x112
    1ca0:	ldr	r0, [r0, #324]	; 0x144
    1ca4:	bl	0 <coda_mem_uint8_new>
    1ca8:	mov	r2, r0
    1cac:	mov	r3, #0
    1cb0:	mov	r0, r4
    1cb4:	movw	r1, #0
    1cb8:	movt	r1, #0
    1cbc:	bl	0 <coda_mem_record_add_field>
    1cc0:	adds	r4, sl, #16
    1cc4:	mov	r0, #21
    1cc8:	vstr	s22, [sp, #228]	; 0xe4
    1ccc:	mov	r1, #0
    1cd0:	add	r3, sp, #296	; 0x128
    1cd4:	adc	r8, fp, #0
    1cd8:	mov	r2, r4
    1cdc:	strd	r0, [sp]
    1ce0:	str	r3, [sp, #8]
    1ce4:	mov	r3, r8
    1ce8:	ldr	r0, [r6, #52]	; 0x34
    1cec:	bl	0 <read_bytes>
    1cf0:	cmp	r0, #0
    1cf4:	blt	3478 <coda_grib_reopen+0x1b10>
    1cf8:	ldrb	r2, [sp, #296]	; 0x128
    1cfc:	ldrb	r3, [sp, #297]	; 0x129
    1d00:	ldrb	r7, [sp, #298]	; 0x12a
    1d04:	ldrb	r1, [sp, #300]	; 0x12c
    1d08:	add	r3, r3, r2, lsl #8
    1d0c:	ldrb	r2, [sp, #299]	; 0x12b
    1d10:	add	r7, r7, r3, lsl #8
    1d14:	cmp	r1, #1
    1d18:	str	r1, [sp, #32]
    1d1c:	add	r7, r2, r7, lsl #8
    1d20:	bne	7894 <coda_grib_reopen+0x5f2c>
    1d24:	ldrb	ip, [sp, #301]	; 0x12d
    1d28:	mov	r2, r6
    1d2c:	mov	r1, #0
    1d30:	ldrb	r3, [sp, #302]	; 0x12e
    1d34:	ldr	r0, [r5, r9]
    1d38:	add	r3, r3, ip, lsl #8
    1d3c:	uxth	r3, r3
    1d40:	ldr	r0, [r0, #288]	; 0x120
    1d44:	bl	0 <coda_mem_uint16_new>
    1d48:	ldr	r4, [sp, #180]	; 0xb4
    1d4c:	mov	r2, r0
    1d50:	mov	r3, #0
    1d54:	movw	r1, #0
    1d58:	movt	r1, #0
    1d5c:	mov	r0, r4
    1d60:	bl	0 <coda_mem_record_add_field>
    1d64:	ldrb	ip, [sp, #303]	; 0x12f
    1d68:	mov	r2, r6
    1d6c:	mov	r1, #0
    1d70:	ldrb	r3, [sp, #304]	; 0x130
    1d74:	ldr	r0, [r5, r9]
    1d78:	add	r3, r3, ip, lsl #8
    1d7c:	uxth	r3, r3
    1d80:	ldr	r0, [r0, #316]	; 0x13c
    1d84:	bl	0 <coda_mem_uint16_new>
    1d88:	mov	r2, r0
    1d8c:	mov	r3, #0
    1d90:	movw	r1, #0
    1d94:	movt	r1, #0
    1d98:	mov	r0, r4
    1d9c:	bl	0 <coda_mem_record_add_field>
    1da0:	ldr	r0, [r5, r9]
    1da4:	mov	r2, r6
    1da8:	mov	r1, #0
    1dac:	ldrb	r3, [sp, #305]	; 0x131
    1db0:	ldr	r0, [r0, #328]	; 0x148
    1db4:	bl	0 <coda_mem_uint8_new>
    1db8:	mov	r2, r0
    1dbc:	mov	r3, #0
    1dc0:	movw	r1, #0
    1dc4:	movt	r1, #0
    1dc8:	mov	r0, r4
    1dcc:	bl	0 <coda_mem_record_add_field>
    1dd0:	ldr	r0, [r5, r9]
    1dd4:	mov	r2, r6
    1dd8:	mov	r1, #0
    1ddc:	ldrb	r3, [sp, #306]	; 0x132
    1de0:	ldr	r0, [r0, #332]	; 0x14c
    1de4:	bl	0 <coda_mem_uint8_new>
    1de8:	mov	r2, r0
    1dec:	mov	r3, #0
    1df0:	movw	r1, #0
    1df4:	movt	r1, #0
    1df8:	mov	r0, r4
    1dfc:	bl	0 <coda_mem_record_add_field>
    1e00:	ldr	r0, [r5, r9]
    1e04:	mov	r2, r6
    1e08:	mov	r1, #0
    1e0c:	ldrb	r3, [sp, #307]	; 0x133
    1e10:	ldr	r0, [r0, #336]	; 0x150
    1e14:	bl	0 <coda_mem_uint8_new>
    1e18:	mov	r2, r0
    1e1c:	mov	r3, #0
    1e20:	movw	r1, #0
    1e24:	movt	r1, #0
    1e28:	mov	r0, r4
    1e2c:	bl	0 <coda_mem_record_add_field>
    1e30:	ldrb	ip, [sp, #308]	; 0x134
    1e34:	mov	r2, r6
    1e38:	mov	r1, #0
    1e3c:	ldrb	r3, [sp, #309]	; 0x135
    1e40:	ldr	r0, [r5, r9]
    1e44:	add	r3, r3, ip, lsl #8
    1e48:	uxth	r3, r3
    1e4c:	ldr	r0, [r0, #292]	; 0x124
    1e50:	bl	0 <coda_mem_uint16_new>
    1e54:	mov	r2, r0
    1e58:	mov	r3, #0
    1e5c:	movw	r1, #0
    1e60:	movt	r1, #0
    1e64:	mov	r0, r4
    1e68:	bl	0 <coda_mem_record_add_field>
    1e6c:	ldr	r0, [r5, r9]
    1e70:	mov	r2, r6
    1e74:	mov	r1, #0
    1e78:	ldrb	r3, [sp, #310]	; 0x136
    1e7c:	ldr	r0, [r0, #296]	; 0x128
    1e80:	bl	0 <coda_mem_uint8_new>
    1e84:	mov	r2, r0
    1e88:	mov	r3, #0
    1e8c:	movw	r1, #0
    1e90:	movt	r1, #0
    1e94:	mov	r0, r4
    1e98:	bl	0 <coda_mem_record_add_field>
    1e9c:	ldr	r0, [r5, r9]
    1ea0:	mov	r2, r6
    1ea4:	mov	r1, #0
    1ea8:	ldrb	r3, [sp, #311]	; 0x137
    1eac:	ldr	r0, [r0, #300]	; 0x12c
    1eb0:	bl	0 <coda_mem_uint8_new>
    1eb4:	mov	r2, r0
    1eb8:	mov	r3, #0
    1ebc:	movw	r1, #0
    1ec0:	movt	r1, #0
    1ec4:	mov	r0, r4
    1ec8:	bl	0 <coda_mem_record_add_field>
    1ecc:	ldr	r0, [r5, r9]
    1ed0:	mov	r2, r6
    1ed4:	mov	r1, #0
    1ed8:	ldrb	r3, [sp, #312]	; 0x138
    1edc:	ldr	r0, [r0, #304]	; 0x130
    1ee0:	bl	0 <coda_mem_uint8_new>
    1ee4:	mov	r2, r0
    1ee8:	mov	r3, #0
    1eec:	movw	r1, #0
    1ef0:	movt	r1, #0
    1ef4:	mov	r0, r4
    1ef8:	bl	0 <coda_mem_record_add_field>
    1efc:	ldr	r0, [r5, r9]
    1f00:	mov	r2, r6
    1f04:	mov	r1, #0
    1f08:	ldrb	r3, [sp, #313]	; 0x139
    1f0c:	ldr	r0, [r0, #308]	; 0x134
    1f10:	bl	0 <coda_mem_uint8_new>
    1f14:	mov	r2, r0
    1f18:	mov	r3, #0
    1f1c:	movw	r1, #0
    1f20:	movt	r1, #0
    1f24:	mov	r0, r4
    1f28:	bl	0 <coda_mem_record_add_field>
    1f2c:	ldr	r0, [r5, r9]
    1f30:	mov	r2, r6
    1f34:	mov	r1, #0
    1f38:	ldrb	r3, [sp, #314]	; 0x13a
    1f3c:	ldr	r0, [r0, #312]	; 0x138
    1f40:	bl	0 <coda_mem_uint8_new>
    1f44:	mov	r2, r0
    1f48:	mov	r3, #0
    1f4c:	movw	r1, #0
    1f50:	movt	r1, #0
    1f54:	mov	r0, r4
    1f58:	bl	0 <coda_mem_record_add_field>
    1f5c:	ldr	r0, [r5, r9]
    1f60:	mov	r2, r6
    1f64:	mov	r1, #0
    1f68:	ldrb	r3, [sp, #315]	; 0x13b
    1f6c:	ldr	r0, [r0, #340]	; 0x154
    1f70:	bl	0 <coda_mem_uint8_new>
    1f74:	mov	r2, r0
    1f78:	mov	r3, #0
    1f7c:	movw	r1, #0
    1f80:	movt	r1, #0
    1f84:	mov	r0, r4
    1f88:	bl	0 <coda_mem_record_add_field>
    1f8c:	ldr	r0, [r5, r9]
    1f90:	mov	r2, r6
    1f94:	mov	r1, #0
    1f98:	ldrb	r3, [sp, #316]	; 0x13c
    1f9c:	ldr	r0, [r0, #344]	; 0x158
    1fa0:	bl	0 <coda_mem_uint8_new>
    1fa4:	mov	r2, r0
    1fa8:	mov	r3, #0
    1fac:	movw	r1, #0
    1fb0:	movt	r1, #0
    1fb4:	mov	r0, r4
    1fb8:	bl	0 <coda_mem_record_add_field>
    1fbc:	ldr	r3, [r5, r9]
    1fc0:	mov	r1, #0
    1fc4:	ldr	r0, [r3, #548]	; 0x224
    1fc8:	bl	0 <coda_mem_array_new>
    1fcc:	mov	r2, r0
    1fd0:	mov	r3, #0
    1fd4:	movw	r1, #0
    1fd8:	movt	r1, #0
    1fdc:	mov	r0, r4
    1fe0:	str	r2, [sp, #208]	; 0xd0
    1fe4:	bl	0 <coda_mem_record_add_field>
    1fe8:	ldr	r3, [r5, r9]
    1fec:	mov	r1, #0
    1ff0:	ldr	r0, [r3, #552]	; 0x228
    1ff4:	bl	0 <coda_mem_array_new>
    1ff8:	mov	r2, r0
    1ffc:	mov	r3, #0
    2000:	movw	r1, #0
    2004:	movt	r1, #0
    2008:	mov	r0, r4
    200c:	str	r2, [sp, #188]	; 0xbc
    2010:	bl	0 <coda_mem_record_add_field>
    2014:	ldr	r3, [r5, r9]
    2018:	mov	r1, #0
    201c:	ldr	r0, [r3, #556]	; 0x22c
    2020:	bl	0 <coda_mem_array_new>
    2024:	mov	r2, r0
    2028:	mov	r3, #0
    202c:	movw	r1, #0
    2030:	movt	r1, #0
    2034:	mov	r0, r4
    2038:	str	r2, [sp, #204]	; 0xcc
    203c:	bl	0 <coda_mem_record_add_field>
    2040:	adds	r3, sl, #37	; 0x25
    2044:	str	r3, [sp, #48]	; 0x30
    2048:	adc	r3, fp, #0
    204c:	cmp	r7, #21
    2050:	str	r3, [sp, #52]	; 0x34
    2054:	bgt	3244 <coda_grib_reopen+0x18dc>
    2058:	mov	r0, #4
    205c:	mov	r1, #0
    2060:	add	r3, sp, #296	; 0x128
    2064:	strd	r0, [sp]
    2068:	str	r3, [sp, #8]
    206c:	ldrd	r2, [sp, #48]	; 0x30
    2070:	ldr	r0, [r6, #52]	; 0x34
    2074:	bl	0 <read_bytes>
    2078:	cmp	r0, #0
    207c:	blt	3478 <coda_grib_reopen+0x1b10>
    2080:	mvn	r1, #0
    2084:	vldr	d8, [pc, #164]	; 2130 <coda_grib_reopen+0x7c8>
    2088:	mov	r0, r1
    208c:	ldrd	r2, [sp, #48]	; 0x30
    2090:	str	r0, [sp, #56]	; 0x38
    2094:	str	r1, [sp, #80]	; 0x50
    2098:	str	r1, [sp, #84]	; 0x54
    209c:	str	r1, [sp, #192]	; 0xc0
    20a0:	vmov.f64	d9, d8
    20a4:	adds	ip, r2, #4
    20a8:	str	r1, [sp, #196]	; 0xc4
    20ac:	mov	r1, #0
    20b0:	adc	r7, r3, r1
    20b4:	movw	r3, #14135	; 0x3737
    20b8:	movt	r3, #14135	; 0x3737
    20bc:	str	ip, [sp, #28]
    20c0:	ldr	r4, [sp, #32]
    20c4:	str	r3, [sp, #36]	; 0x24
    20c8:	str	r1, [sp, #76]	; 0x4c
    20cc:	str	r0, [sp, #88]	; 0x58
    20d0:	str	r1, [sp, #96]	; 0x60
    20d4:	str	r1, [sp, #100]	; 0x64
    20d8:	str	r1, [sp, #120]	; 0x78
    20dc:	str	r1, [sp, #132]	; 0x84
    20e0:	str	r1, [sp, #136]	; 0x88
    20e4:	str	r1, [sp, #140]	; 0x8c
    20e8:	str	r1, [sp, #144]	; 0x90
    20ec:	str	r1, [sp, #148]	; 0x94
    20f0:	str	r1, [sp, #152]	; 0x98
    20f4:	str	r1, [sp, #156]	; 0x9c
    20f8:	str	r1, [sp, #160]	; 0xa0
    20fc:	str	r1, [sp, #164]	; 0xa4
    2100:	str	r1, [sp, #168]	; 0xa8
    2104:	str	r1, [sp, #172]	; 0xac
    2108:	str	r1, [sp, #176]	; 0xb0
    210c:	str	r1, [sp, #184]	; 0xb8
    2110:	str	r1, [sp, #200]	; 0xc8
    2114:	str	r1, [sp, #212]	; 0xd4
    2118:	strd	sl, [sp, #216]	; 0xd8
    211c:	ldr	r2, [sp, #36]	; 0x24
    2120:	ldr	r3, [sp, #296]	; 0x128
    2124:	cmp	r3, r2
    2128:	beq	2690 <coda_grib_reopen+0xd28>
    212c:	b	2138 <coda_grib_reopen+0x7d0>
	...
    2138:	ldrb	lr, [sp, #296]	; 0x128
    213c:	mov	r0, #1
    2140:	mov	r1, #0
    2144:	mov	r3, r7
    2148:	ldrb	ip, [sp, #297]	; 0x129
    214c:	strd	r0, [sp]
    2150:	add	r1, sp, #296	; 0x128
    2154:	ldrb	r0, [sp, #298]	; 0x12a
    2158:	str	r1, [sp, #8]
    215c:	ldrb	r1, [sp, #299]	; 0x12b
    2160:	add	ip, ip, lr, lsl #8
    2164:	ldr	r8, [sp, #28]
    2168:	add	ip, r0, ip, lsl #8
    216c:	ldr	r0, [r6, #52]	; 0x34
    2170:	add	r1, r1, ip, lsl #8
    2174:	mov	r2, r8
    2178:	str	r1, [sp, #32]
    217c:	bl	0 <read_bytes>
    2180:	cmp	r0, #0
    2184:	blt	3478 <coda_grib_reopen+0x1b10>
    2188:	ldrb	fp, [sp, #296]	; 0x128
    218c:	adds	r3, r8, #1
    2190:	str	r3, [sp, #16]
    2194:	adc	r3, r7, #0
    2198:	str	r3, [sp, #20]
    219c:	cmp	fp, #2
    21a0:	beq	2624 <coda_grib_reopen+0xcbc>
    21a4:	cmp	fp, #3
    21a8:	beq	26d4 <coda_grib_reopen+0xd6c>
    21ac:	cmp	fp, #4
    21b0:	beq	2df0 <coda_grib_reopen+0x1488>
    21b4:	cmp	fp, #5
    21b8:	beq	30c4 <coda_grib_reopen+0x175c>
    21bc:	cmp	fp, #6
    21c0:	beq	33ec <coda_grib_reopen+0x1a84>
    21c4:	cmp	fp, #7
    21c8:	bne	7860 <coda_grib_reopen+0x5ef8>
    21cc:	sub	r3, r4, #5
    21d0:	cmp	r3, #1
    21d4:	bhi	78f8 <coda_grib_reopen+0x5f90>
    21d8:	ldr	r3, [r5, r9]
    21dc:	mov	r1, #0
    21e0:	ldr	r0, [r3, #544]	; 0x220
    21e4:	bl	0 <coda_mem_record_new>
    21e8:	mov	r4, r0
    21ec:	ldr	r0, [r5, r9]
    21f0:	mov	r2, r6
    21f4:	mov	r1, #0
    21f8:	ldr	r3, [sp, #56]	; 0x38
    21fc:	ldr	r0, [r0, #280]	; 0x118
    2200:	bl	0 <coda_mem_uint32_new>
    2204:	mov	r2, r0
    2208:	mov	r3, #0
    220c:	movw	r1, #0
    2210:	movt	r1, #0
    2214:	mov	r0, r4
    2218:	bl	0 <coda_mem_record_add_field>
    221c:	ldr	r0, [r5, r9]
    2220:	mov	r2, r6
    2224:	mov	r1, #0
    2228:	ldr	r3, [sp, #132]	; 0x84
    222c:	ldr	r0, [r0, #460]	; 0x1cc
    2230:	bl	0 <coda_mem_uint8_new>
    2234:	mov	r2, r0
    2238:	mov	r3, #0
    223c:	movw	r1, #0
    2240:	movt	r1, #0
    2244:	mov	r0, r4
    2248:	bl	0 <coda_mem_record_add_field>
    224c:	ldr	r0, [r5, r9]
    2250:	mov	r2, r6
    2254:	mov	r1, #0
    2258:	ldr	r3, [sp, #136]	; 0x88
    225c:	ldr	r0, [r0, #464]	; 0x1d0
    2260:	bl	0 <coda_mem_uint8_new>
    2264:	mov	r2, r0
    2268:	mov	r3, #0
    226c:	movw	r1, #0
    2270:	movt	r1, #0
    2274:	mov	r0, r4
    2278:	bl	0 <coda_mem_record_add_field>
    227c:	ldr	r0, [r5, r9]
    2280:	mov	r2, r6
    2284:	mov	r1, #0
    2288:	ldr	r3, [sp, #140]	; 0x8c
    228c:	ldr	r0, [r0, #468]	; 0x1d4
    2290:	bl	0 <coda_mem_uint8_new>
    2294:	mov	r2, r0
    2298:	mov	r3, #0
    229c:	movw	r1, #0
    22a0:	movt	r1, #0
    22a4:	mov	r0, r4
    22a8:	bl	0 <coda_mem_record_add_field>
    22ac:	ldr	r0, [r5, r9]
    22b0:	mov	r2, r6
    22b4:	mov	r1, #0
    22b8:	ldr	r3, [sp, #144]	; 0x90
    22bc:	ldr	r0, [r0, #472]	; 0x1d8
    22c0:	bl	0 <coda_mem_uint8_new>
    22c4:	mov	r2, r0
    22c8:	mov	r3, #0
    22cc:	movw	r1, #0
    22d0:	movt	r1, #0
    22d4:	mov	r0, r4
    22d8:	bl	0 <coda_mem_record_add_field>
    22dc:	ldr	r0, [r5, r9]
    22e0:	mov	r2, r6
    22e4:	mov	r1, #0
    22e8:	ldr	r3, [sp, #148]	; 0x94
    22ec:	ldr	r0, [r0, #476]	; 0x1dc
    22f0:	bl	0 <coda_mem_uint8_new>
    22f4:	mov	r2, r0
    22f8:	mov	r3, #0
    22fc:	movw	r1, #0
    2300:	movt	r1, #0
    2304:	mov	r0, r4
    2308:	bl	0 <coda_mem_record_add_field>
    230c:	ldr	r0, [r5, r9]
    2310:	mov	r2, r6
    2314:	mov	r1, #0
    2318:	ldr	r3, [sp, #152]	; 0x98
    231c:	ldr	r0, [r0, #480]	; 0x1e0
    2320:	bl	0 <coda_mem_uint16_new>
    2324:	mov	r2, r0
    2328:	mov	r3, #0
    232c:	movw	r1, #0
    2330:	movt	r1, #0
    2334:	mov	r0, r4
    2338:	bl	0 <coda_mem_record_add_field>
    233c:	ldr	r0, [r5, r9]
    2340:	mov	r2, r6
    2344:	mov	r1, #0
    2348:	ldr	r3, [sp, #156]	; 0x9c
    234c:	ldr	r0, [r0, #484]	; 0x1e4
    2350:	bl	0 <coda_mem_uint8_new>
    2354:	mov	r2, r0
    2358:	mov	r3, #0
    235c:	movw	r1, #0
    2360:	movt	r1, #0
    2364:	mov	r0, r4
    2368:	bl	0 <coda_mem_record_add_field>
    236c:	ldr	r0, [r5, r9]
    2370:	mov	r2, r6
    2374:	mov	r1, #0
    2378:	ldr	r3, [sp, #160]	; 0xa0
    237c:	ldr	r0, [r0, #488]	; 0x1e8
    2380:	bl	0 <coda_mem_uint8_new>
    2384:	mov	r2, r0
    2388:	mov	r3, #0
    238c:	movw	r1, #0
    2390:	movt	r1, #0
    2394:	mov	r0, r4
    2398:	bl	0 <coda_mem_record_add_field>
    239c:	ldr	r0, [r5, r9]
    23a0:	mov	r2, r6
    23a4:	mov	r1, #0
    23a8:	ldr	r3, [sp, #164]	; 0xa4
    23ac:	ldr	r0, [r0, #492]	; 0x1ec
    23b0:	bl	0 <coda_mem_uint32_new>
    23b4:	mov	r2, r0
    23b8:	mov	r3, #0
    23bc:	movw	r1, #0
    23c0:	movt	r1, #0
    23c4:	mov	r0, r4
    23c8:	bl	0 <coda_mem_record_add_field>
    23cc:	ldr	r0, [r5, r9]
    23d0:	mov	r2, r6
    23d4:	mov	r1, #0
    23d8:	ldr	r3, [sp, #168]	; 0xa8
    23dc:	ldr	r0, [r0, #496]	; 0x1f0
    23e0:	bl	0 <coda_mem_uint8_new>
    23e4:	mov	r2, r0
    23e8:	mov	r3, #0
    23ec:	movw	r1, #0
    23f0:	movt	r1, #0
    23f4:	mov	r0, r4
    23f8:	bl	0 <coda_mem_record_add_field>
    23fc:	ldr	r3, [r5, r9]
    2400:	vmov.f64	d0, d9
    2404:	mov	r2, r6
    2408:	mov	r1, #0
    240c:	ldr	r0, [r3, #500]	; 0x1f4
    2410:	bl	0 <coda_mem_double_new>
    2414:	mov	r2, r0
    2418:	mov	r3, #0
    241c:	movw	r1, #0
    2420:	movt	r1, #0
    2424:	mov	r0, r4
    2428:	bl	0 <coda_mem_record_add_field>
    242c:	ldr	r0, [r5, r9]
    2430:	mov	r2, r6
    2434:	mov	r1, #0
    2438:	ldr	r3, [sp, #172]	; 0xac
    243c:	ldr	r0, [r0, #504]	; 0x1f8
    2440:	bl	0 <coda_mem_uint8_new>
    2444:	mov	r2, r0
    2448:	mov	r3, #0
    244c:	movw	r1, #0
    2450:	movt	r1, #0
    2454:	mov	r0, r4
    2458:	bl	0 <coda_mem_record_add_field>
    245c:	ldr	r3, [r5, r9]
    2460:	mov	r2, r6
    2464:	mov	r1, #0
    2468:	vmov.f64	d0, d8
    246c:	ldr	r0, [r3, #508]	; 0x1fc
    2470:	bl	0 <coda_mem_double_new>
    2474:	mov	r2, r0
    2478:	mov	r3, #0
    247c:	movw	r1, #0
    2480:	movt	r1, #0
    2484:	mov	r0, r4
    2488:	bl	0 <coda_mem_record_add_field>
    248c:	ldr	r3, [sp, #76]	; 0x4c
    2490:	cmp	r3, #0
    2494:	bne	32c0 <coda_grib_reopen+0x1958>
    2498:	ldr	r0, [r5, r9]
    249c:	mov	r2, r6
    24a0:	mov	r1, #0
    24a4:	ldr	r3, [sp, #96]	; 0x60
    24a8:	ldr	r0, [r0, #524]	; 0x20c
    24ac:	bl	0 <coda_mem_uint8_new>
    24b0:	mov	r2, r0
    24b4:	mov	r3, #0
    24b8:	movw	r1, #0
    24bc:	movt	r1, #0
    24c0:	mov	r0, r4
    24c4:	bl	0 <coda_mem_record_add_field>
    24c8:	ldr	r0, [r5, r9]
    24cc:	mov	r2, r6
    24d0:	mov	r1, #0
    24d4:	ldr	r3, [sp, #100]	; 0x64
    24d8:	ldr	r0, [r0, #320]	; 0x140
    24dc:	bl	0 <coda_mem_int16_new>
    24e0:	mov	r2, r0
    24e4:	mov	r3, #0
    24e8:	movw	r1, #0
    24ec:	movt	r1, #0
    24f0:	mov	r0, r4
    24f4:	bl	0 <coda_mem_record_add_field>
    24f8:	ldr	r0, [r5, r9]
    24fc:	mov	r2, r6
    2500:	mov	r1, #0
    2504:	ldr	r3, [sp, #120]	; 0x78
    2508:	ldr	r0, [r0, #528]	; 0x210
    250c:	bl	0 <coda_mem_int16_new>
    2510:	mov	r2, r0
    2514:	mov	r3, #0
    2518:	movw	r1, #0
    251c:	movt	r1, #0
    2520:	mov	r0, r4
    2524:	bl	0 <coda_mem_record_add_field>
    2528:	ldr	r3, [r5, r9]
    252c:	mov	r2, r6
    2530:	mov	r1, #0
    2534:	vldr	s0, [sp, #228]	; 0xe4
    2538:	ldr	r0, [r3, #532]	; 0x214
    253c:	bl	0 <coda_mem_float_new>
    2540:	mov	r2, r0
    2544:	mov	r3, #0
    2548:	movw	r1, #0
    254c:	movt	r1, #0
    2550:	mov	r0, r4
    2554:	bl	0 <coda_mem_record_add_field>
    2558:	ldr	r3, [sp, #176]	; 0xb0
    255c:	cmp	r3, #0
    2560:	beq	325c <coda_grib_reopen+0x18f4>
    2564:	ldr	r0, [sp, #200]	; 0xc8
    2568:	bl	0 <malloc>
    256c:	subs	r7, r0, #0
    2570:	beq	7a20 <coda_grib_reopen+0x60b8>
    2574:	str	r7, [sp, #8]
    2578:	ldr	r1, [sp, #200]	; 0xc8
    257c:	ldrd	r2, [sp, #80]	; 0x50
    2580:	str	r1, [sp]
    2584:	ldr	r1, [sp, #212]	; 0xd4
    2588:	str	r1, [sp, #4]
    258c:	ldr	r0, [r6, #52]	; 0x34
    2590:	bl	0 <read_bytes>
    2594:	cmp	r0, #0
    2598:	blt	7a0c <coda_grib_reopen+0x60a4>
    259c:	ldr	r0, [r5, r9]
    25a0:	ldrd	r2, [sp, #16]
    25a4:	ldr	ip, [sp, #96]	; 0x60
    25a8:	ldr	r0, [r0, #536]	; 0x218
    25ac:	ldr	r1, [sp, #184]	; 0xb8
    25b0:	str	ip, [sp]
    25b4:	ldr	ip, [sp, #100]	; 0x64
    25b8:	str	r7, [sp, #12]
    25bc:	vldr	s0, [sp, #228]	; 0xe4
    25c0:	str	ip, [sp, #4]
    25c4:	ldr	ip, [sp, #120]	; 0x78
    25c8:	str	ip, [sp, #8]
    25cc:	bl	0 <coda_grib_value_array_simple_packing_new>
    25d0:	mov	r8, r0
    25d4:	mov	r0, r7
    25d8:	bl	0 <free>
    25dc:	mov	r3, #0
    25e0:	mov	r2, r8
    25e4:	movw	r1, #0
    25e8:	movt	r1, #0
    25ec:	mov	r0, r4
    25f0:	bl	0 <coda_mem_record_add_field>
    25f4:	mov	r1, r4
    25f8:	ldr	r0, [sp, #204]	; 0xcc
    25fc:	bl	0 <coda_mem_array_add_element>
    2600:	ldr	r3, [sp, #32]
    2604:	cmp	r3, #5
    2608:	ble	2644 <coda_grib_reopen+0xcdc>
    260c:	sub	r1, r3, #5
    2610:	ldrd	r2, [sp, #16]
    2614:	adds	r2, r2, r1
    2618:	adc	r3, r3, #0
    261c:	strd	r2, [sp, #16]
    2620:	b	2644 <coda_grib_reopen+0xcdc>
    2624:	cmp	r4, #1
    2628:	cmpne	r4, #7
    262c:	movne	r7, #1
    2630:	moveq	r7, #0
    2634:	bne	7720 <coda_grib_reopen+0x5db8>
    2638:	ldr	r3, [sp, #32]
    263c:	cmp	r3, #5
    2640:	bgt	3000 <coda_grib_reopen+0x1698>
    2644:	mov	r0, #4
    2648:	mov	r1, #0
    264c:	add	r3, sp, #296	; 0x128
    2650:	strd	r0, [sp]
    2654:	str	r3, [sp, #8]
    2658:	ldrd	r2, [sp, #16]
    265c:	ldr	r0, [r6, #52]	; 0x34
    2660:	bl	0 <read_bytes>
    2664:	cmp	r0, #0
    2668:	blt	3478 <coda_grib_reopen+0x1b10>
    266c:	ldrd	r2, [sp, #16]
    2670:	mov	r4, fp
    2674:	adds	r1, r2, #4
    2678:	ldr	r2, [sp, #36]	; 0x24
    267c:	adc	r7, r3, #0
    2680:	ldr	r3, [sp, #296]	; 0x128
    2684:	str	r1, [sp, #28]
    2688:	cmp	r3, r2
    268c:	bne	2138 <coda_grib_reopen+0x7d0>
    2690:	cmp	r4, #7
    2694:	mov	r3, r7
    2698:	ldrd	sl, [sp, #216]	; 0xd8
    269c:	beq	3380 <coda_grib_reopen+0x1a18>
    26a0:	mov	r7, r6
    26a4:	ldr	r6, [sp, #28]
    26a8:	mov	r1, r3
    26ac:	add	r2, sp, #244	; 0xf4
    26b0:	mov	r0, r6
    26b4:	bl	0 <coda_str64>
    26b8:	add	r2, sp, #244	; 0xf4
    26bc:	movw	r1, #0
    26c0:	movt	r1, #0
    26c4:	movw	r0, #65236	; 0xfed4
    26c8:	movt	r0, #65535	; 0xffff
    26cc:	bl	0 <coda_set_error>
    26d0:	b	347c <coda_grib_reopen+0x1b14>
    26d4:	sub	r8, r4, #1
    26d8:	cmp	r4, #7
    26dc:	cmpne	r8, #1
    26e0:	movhi	r8, #1
    26e4:	movls	r8, #0
    26e8:	bhi	7774 <coda_grib_reopen+0x5e0c>
    26ec:	mov	r0, #9
    26f0:	mov	r1, #0
    26f4:	add	r3, sp, #296	; 0x128
    26f8:	strd	r0, [sp]
    26fc:	str	r3, [sp, #8]
    2700:	ldrd	r2, [sp, #16]
    2704:	ldr	r0, [r6, #52]	; 0x34
    2708:	bl	0 <read_bytes>
    270c:	cmp	r0, #0
    2710:	blt	3478 <coda_grib_reopen+0x1b10>
    2714:	ldr	r3, [r5, r9]
    2718:	mov	r1, r8
    271c:	ldr	r0, [r3, #540]	; 0x21c
    2720:	bl	0 <coda_mem_record_new>
    2724:	mov	r4, r0
    2728:	ldr	r0, [r5, r9]
    272c:	mov	r1, r8
    2730:	mov	r2, r6
    2734:	ldr	r3, [sp, #88]	; 0x58
    2738:	ldr	r0, [r0, #276]	; 0x114
    273c:	bl	0 <coda_mem_int32_new>
    2740:	mov	r2, r0
    2744:	mov	r3, r8
    2748:	movw	r1, #0
    274c:	movt	r1, #0
    2750:	mov	r0, r4
    2754:	bl	0 <coda_mem_record_add_field>
    2758:	ldr	r0, [r5, r9]
    275c:	mov	r1, r8
    2760:	mov	r2, r6
    2764:	ldrb	r3, [sp, #296]	; 0x128
    2768:	ldr	r0, [r0, #448]	; 0x1c0
    276c:	bl	0 <coda_mem_uint8_new>
    2770:	mov	r2, r0
    2774:	mov	r3, r8
    2778:	movw	r1, #0
    277c:	movt	r1, #0
    2780:	mov	r0, r4
    2784:	bl	0 <coda_mem_record_add_field>
    2788:	ldrb	ip, [sp, #297]	; 0x129
    278c:	mov	r1, r8
    2790:	mov	r2, r6
    2794:	ldrb	r3, [sp, #298]	; 0x12a
    2798:	ldrb	r0, [sp, #299]	; 0x12b
    279c:	ldrb	lr, [sp, #300]	; 0x12c
    27a0:	add	r3, r3, ip, lsl #8
    27a4:	ldr	ip, [r5, r9]
    27a8:	add	r3, r0, r3, lsl #8
    27ac:	add	r3, lr, r3, lsl #8
    27b0:	ldr	r0, [ip, #452]	; 0x1c4
    27b4:	bl	0 <coda_mem_uint32_new>
    27b8:	mov	r2, r0
    27bc:	mov	r3, r8
    27c0:	movw	r1, #0
    27c4:	movt	r1, #0
    27c8:	mov	r0, r4
    27cc:	bl	0 <coda_mem_record_add_field>
    27d0:	ldr	r0, [r5, r9]
    27d4:	mov	r1, r8
    27d8:	mov	r2, r6
    27dc:	ldrb	r3, [sp, #302]	; 0x12e
    27e0:	ldr	r0, [r0, #456]	; 0x1c8
    27e4:	str	r3, [sp, #124]	; 0x7c
    27e8:	bl	0 <coda_mem_uint8_new>
    27ec:	mov	r2, r0
    27f0:	mov	r3, r8
    27f4:	movw	r1, #0
    27f8:	movt	r1, #0
    27fc:	mov	r0, r4
    2800:	bl	0 <coda_mem_record_add_field>
    2804:	ldrb	ip, [sp, #303]	; 0x12f
    2808:	mov	r1, r8
    280c:	mov	r2, r6
    2810:	ldrb	r3, [sp, #304]	; 0x130
    2814:	ldr	r0, [r5, r9]
    2818:	add	r3, r3, ip, lsl #8
    281c:	uxth	sl, r3
    2820:	ldr	r0, [r0, #520]	; 0x208
    2824:	mov	r3, sl
    2828:	bl	0 <coda_mem_uint16_new>
    282c:	mov	r2, r0
    2830:	mov	r3, r8
    2834:	movw	r1, #0
    2838:	movt	r1, #0
    283c:	mov	r0, r4
    2840:	bl	0 <coda_mem_record_add_field>
    2844:	ldr	r3, [sp, #28]
    2848:	ldrb	r8, [sp, #296]	; 0x128
    284c:	adds	r2, r3, #10
    2850:	adc	r3, r7, #0
    2854:	cmp	r8, #0
    2858:	bne	77c0 <coda_grib_reopen+0x5e58>
    285c:	sub	r1, sl, #40	; 0x28
    2860:	uxth	r1, r1
    2864:	cmp	r1, #3
    2868:	cmphi	sl, #3
    286c:	str	r1, [sp, #128]	; 0x80
    2870:	movls	r1, #1
    2874:	movhi	r1, #0
    2878:	bhi	77ec <coda_grib_reopen+0x5e84>
    287c:	mov	r0, #58	; 0x3a
    2880:	mov	r1, #0
    2884:	add	ip, sp, #296	; 0x128
    2888:	strd	r0, [sp]
    288c:	str	ip, [sp, #8]
    2890:	ldr	r0, [r6, #52]	; 0x34
    2894:	bl	0 <read_bytes>
    2898:	cmp	r0, #0
    289c:	blt	77f8 <coda_grib_reopen+0x5e90>
    28a0:	ldr	r0, [r5, r9]
    28a4:	mov	r2, r6
    28a8:	mov	r1, r8
    28ac:	ldrb	r3, [sp, #296]	; 0x128
    28b0:	ldr	r0, [r0, #360]	; 0x168
    28b4:	bl	0 <coda_mem_uint8_new>
    28b8:	mov	r2, r0
    28bc:	mov	r3, r8
    28c0:	movw	r1, #0
    28c4:	movt	r1, #0
    28c8:	mov	r0, r4
    28cc:	bl	0 <coda_mem_record_add_field>
    28d0:	ldr	r0, [r5, r9]
    28d4:	mov	r2, r6
    28d8:	mov	r1, r8
    28dc:	ldrb	r3, [sp, #297]	; 0x129
    28e0:	ldr	r0, [r0, #364]	; 0x16c
    28e4:	bl	0 <coda_mem_uint8_new>
    28e8:	mov	r2, r0
    28ec:	mov	r3, r8
    28f0:	movw	r1, #0
    28f4:	movt	r1, #0
    28f8:	mov	r0, r4
    28fc:	bl	0 <coda_mem_record_add_field>
    2900:	ldrb	ip, [sp, #298]	; 0x12a
    2904:	mov	r2, r6
    2908:	mov	r1, r8
    290c:	ldrb	r3, [sp, #299]	; 0x12b
    2910:	ldrb	r0, [sp, #300]	; 0x12c
    2914:	ldrb	lr, [sp, #301]	; 0x12d
    2918:	add	r3, r3, ip, lsl #8
    291c:	ldr	ip, [r5, r9]
    2920:	add	r3, r0, r3, lsl #8
    2924:	add	r3, lr, r3, lsl #8
    2928:	ldr	r0, [ip, #368]	; 0x170
    292c:	bl	0 <coda_mem_uint32_new>
    2930:	mov	r2, r0
    2934:	mov	r3, r8
    2938:	movw	r1, #0
    293c:	movt	r1, #0
    2940:	mov	r0, r4
    2944:	bl	0 <coda_mem_record_add_field>
    2948:	ldr	r0, [r5, r9]
    294c:	mov	r2, r6
    2950:	mov	r1, r8
    2954:	ldrb	r3, [sp, #302]	; 0x12e
    2958:	ldr	r0, [r0, #372]	; 0x174
    295c:	bl	0 <coda_mem_uint8_new>
    2960:	mov	r2, r0
    2964:	mov	r3, r8
    2968:	movw	r1, #0
    296c:	movt	r1, #0
    2970:	mov	r0, r4
    2974:	bl	0 <coda_mem_record_add_field>
    2978:	ldrb	ip, [sp, #303]	; 0x12f
    297c:	mov	r2, r6
    2980:	mov	r1, r8
    2984:	ldrb	r3, [sp, #304]	; 0x130
    2988:	ldrb	r0, [sp, #305]	; 0x131
    298c:	ldrb	lr, [sp, #306]	; 0x132
    2990:	add	r3, r3, ip, lsl #8
    2994:	ldr	ip, [r5, r9]
    2998:	add	r3, r0, r3, lsl #8
    299c:	add	r3, lr, r3, lsl #8
    29a0:	ldr	r0, [ip, #376]	; 0x178
    29a4:	bl	0 <coda_mem_uint32_new>
    29a8:	mov	r2, r0
    29ac:	mov	r3, r8
    29b0:	movw	r1, #0
    29b4:	movt	r1, #0
    29b8:	mov	r0, r4
    29bc:	bl	0 <coda_mem_record_add_field>
    29c0:	ldr	r0, [r5, r9]
    29c4:	mov	r2, r6
    29c8:	mov	r1, r8
    29cc:	ldrb	r3, [sp, #307]	; 0x133
    29d0:	ldr	r0, [r0, #380]	; 0x17c
    29d4:	bl	0 <coda_mem_uint8_new>
    29d8:	mov	r2, r0
    29dc:	mov	r3, r8
    29e0:	movw	r1, #0
    29e4:	movt	r1, #0
    29e8:	mov	r0, r4
    29ec:	bl	0 <coda_mem_record_add_field>
    29f0:	ldrb	ip, [sp, #308]	; 0x134
    29f4:	mov	r2, r6
    29f8:	mov	r1, r8
    29fc:	ldrb	r3, [sp, #309]	; 0x135
    2a00:	ldrb	r0, [sp, #310]	; 0x136
    2a04:	ldrb	lr, [sp, #311]	; 0x137
    2a08:	add	r3, r3, ip, lsl #8
    2a0c:	ldr	ip, [r5, r9]
    2a10:	add	r3, r0, r3, lsl #8
    2a14:	add	r3, lr, r3, lsl #8
    2a18:	ldr	r0, [ip, #384]	; 0x180
    2a1c:	bl	0 <coda_mem_uint32_new>
    2a20:	mov	r2, r0
    2a24:	mov	r3, r8
    2a28:	movw	r1, #0
    2a2c:	movt	r1, #0
    2a30:	mov	r0, r4
    2a34:	bl	0 <coda_mem_record_add_field>
    2a38:	ldrb	ip, [sp, #312]	; 0x138
    2a3c:	mov	r2, r6
    2a40:	mov	r1, r8
    2a44:	ldrb	r3, [sp, #313]	; 0x139
    2a48:	ldrb	r0, [sp, #314]	; 0x13a
    2a4c:	ldrb	lr, [sp, #315]	; 0x13b
    2a50:	add	r3, r3, ip, lsl #8
    2a54:	ldr	ip, [r5, r9]
    2a58:	add	r3, r0, r3, lsl #8
    2a5c:	add	r3, lr, r3, lsl #8
    2a60:	ldr	r0, [ip, #388]	; 0x184
    2a64:	bl	0 <coda_mem_uint32_new>
    2a68:	mov	r2, r0
    2a6c:	mov	r3, r8
    2a70:	movw	r1, #0
    2a74:	movt	r1, #0
    2a78:	mov	r0, r4
    2a7c:	bl	0 <coda_mem_record_add_field>
    2a80:	ldrb	ip, [sp, #316]	; 0x13c
    2a84:	mov	r2, r6
    2a88:	mov	r1, r8
    2a8c:	ldrb	r3, [sp, #317]	; 0x13d
    2a90:	ldrb	r0, [sp, #318]	; 0x13e
    2a94:	ldrb	lr, [sp, #319]	; 0x13f
    2a98:	add	r3, r3, ip, lsl #8
    2a9c:	ldr	ip, [r5, r9]
    2aa0:	add	r3, r0, r3, lsl #8
    2aa4:	add	r3, lr, r3, lsl #8
    2aa8:	ldr	r0, [ip, #392]	; 0x188
    2aac:	bl	0 <coda_mem_uint32_new>
    2ab0:	mov	r2, r0
    2ab4:	mov	r3, r8
    2ab8:	movw	r1, #0
    2abc:	movt	r1, #0
    2ac0:	mov	r0, r4
    2ac4:	bl	0 <coda_mem_record_add_field>
    2ac8:	ldrb	ip, [sp, #320]	; 0x140
    2acc:	mov	r2, r6
    2ad0:	mov	r1, r8
    2ad4:	ldrb	r3, [sp, #321]	; 0x141
    2ad8:	ldrb	r0, [sp, #322]	; 0x142
    2adc:	ldrb	lr, [sp, #323]	; 0x143
    2ae0:	add	r3, r3, ip, lsl #8
    2ae4:	ldr	ip, [r5, r9]
    2ae8:	add	r3, r0, r3, lsl #8
    2aec:	add	r3, lr, r3, lsl #8
    2af0:	ldr	r0, [ip, #396]	; 0x18c
    2af4:	bl	0 <coda_mem_uint32_new>
    2af8:	mov	r2, r0
    2afc:	mov	r3, r8
    2b00:	movw	r1, #0
    2b04:	movt	r1, #0
    2b08:	mov	r0, r4
    2b0c:	bl	0 <coda_mem_record_add_field>
    2b10:	ldrb	ip, [sp, #324]	; 0x144
    2b14:	mov	r2, r6
    2b18:	mov	r1, r8
    2b1c:	ldrb	r3, [sp, #325]	; 0x145
    2b20:	ldrb	r0, [sp, #326]	; 0x146
    2b24:	ldrb	lr, [sp, #327]	; 0x147
    2b28:	add	r3, r3, ip, lsl #8
    2b2c:	ldr	ip, [r5, r9]
    2b30:	add	r3, r0, r3, lsl #8
    2b34:	add	r3, lr, r3, lsl #8
    2b38:	ldr	r0, [ip, #400]	; 0x190
    2b3c:	bl	0 <coda_mem_uint32_new>
    2b40:	mov	r2, r0
    2b44:	mov	r3, r8
    2b48:	movw	r1, #0
    2b4c:	movt	r1, #0
    2b50:	mov	r0, r4
    2b54:	bl	0 <coda_mem_record_add_field>
    2b58:	ldrb	r0, [sp, #328]	; 0x148
    2b5c:	ldrb	r1, [sp, #329]	; 0x149
    2b60:	ldrb	r2, [sp, #330]	; 0x14a
    2b64:	tst	r0, #128	; 0x80
    2b68:	ldrb	r3, [sp, #331]	; 0x14b
    2b6c:	add	r1, r1, r0, lsl #8
    2b70:	ldr	r0, [r5, r9]
    2b74:	add	r2, r2, r1, lsl #8
    2b78:	mov	r1, #0
    2b7c:	add	r3, r3, r2, lsl #8
    2b80:	mov	r2, r6
    2b84:	rsbne	r3, r3, #-2147483648	; 0x80000000
    2b88:	ldr	r0, [r0, #404]	; 0x194
    2b8c:	bl	0 <coda_mem_int32_new>
    2b90:	mov	r2, r0
    2b94:	mov	r3, #0
    2b98:	movw	r1, #0
    2b9c:	movt	r1, #0
    2ba0:	mov	r0, r4
    2ba4:	bl	0 <coda_mem_record_add_field>
    2ba8:	ldrb	r0, [sp, #332]	; 0x14c
    2bac:	ldrb	r1, [sp, #333]	; 0x14d
    2bb0:	ldrb	r2, [sp, #334]	; 0x14e
    2bb4:	tst	r0, #128	; 0x80
    2bb8:	ldrb	r3, [sp, #335]	; 0x14f
    2bbc:	add	r1, r1, r0, lsl #8
    2bc0:	ldr	r0, [r5, r9]
    2bc4:	add	r2, r2, r1, lsl #8
    2bc8:	mov	r1, #0
    2bcc:	add	r3, r3, r2, lsl #8
    2bd0:	mov	r2, r6
    2bd4:	rsbne	r3, r3, #-2147483648	; 0x80000000
    2bd8:	ldr	r0, [r0, #408]	; 0x198
    2bdc:	bl	0 <coda_mem_int32_new>
    2be0:	mov	r2, r0
    2be4:	mov	r3, #0
    2be8:	movw	r1, #0
    2bec:	movt	r1, #0
    2bf0:	mov	r0, r4
    2bf4:	bl	0 <coda_mem_record_add_field>
    2bf8:	ldr	r0, [r5, r9]
    2bfc:	mov	r2, r6
    2c00:	mov	r1, #0
    2c04:	ldrb	r3, [sp, #336]	; 0x150
    2c08:	ldr	r0, [r0, #412]	; 0x19c
    2c0c:	bl	0 <coda_mem_uint8_new>
    2c10:	mov	r2, r0
    2c14:	mov	r3, #0
    2c18:	movw	r1, #0
    2c1c:	movt	r1, #0
    2c20:	mov	r0, r4
    2c24:	bl	0 <coda_mem_record_add_field>
    2c28:	ldrb	r0, [sp, #337]	; 0x151
    2c2c:	ldrb	r1, [sp, #338]	; 0x152
    2c30:	ldrb	r2, [sp, #339]	; 0x153
    2c34:	tst	r0, #128	; 0x80
    2c38:	ldrb	r3, [sp, #340]	; 0x154
    2c3c:	add	r1, r1, r0, lsl #8
    2c40:	ldr	r0, [r5, r9]
    2c44:	add	r2, r2, r1, lsl #8
    2c48:	mov	r1, #0
    2c4c:	add	r3, r3, r2, lsl #8
    2c50:	mov	r2, r6
    2c54:	rsbne	r3, r3, #-2147483648	; 0x80000000
    2c58:	ldr	r0, [r0, #416]	; 0x1a0
    2c5c:	bl	0 <coda_mem_int32_new>
    2c60:	mov	r2, r0
    2c64:	mov	r3, #0
    2c68:	movw	r1, #0
    2c6c:	movt	r1, #0
    2c70:	mov	r0, r4
    2c74:	bl	0 <coda_mem_record_add_field>
    2c78:	ldrb	r0, [sp, #341]	; 0x155
    2c7c:	ldrb	r1, [sp, #342]	; 0x156
    2c80:	ldrb	r2, [sp, #343]	; 0x157
    2c84:	tst	r0, #128	; 0x80
    2c88:	ldrb	r3, [sp, #344]	; 0x158
    2c8c:	add	r1, r1, r0, lsl #8
    2c90:	ldr	r0, [r5, r9]
    2c94:	add	r2, r2, r1, lsl #8
    2c98:	mov	r1, #0
    2c9c:	add	r3, r3, r2, lsl #8
    2ca0:	mov	r2, r6
    2ca4:	rsbne	r3, r3, #-2147483648	; 0x80000000
    2ca8:	ldr	r0, [r0, #420]	; 0x1a4
    2cac:	bl	0 <coda_mem_int32_new>
    2cb0:	mov	r2, r0
    2cb4:	mov	r3, #0
    2cb8:	movw	r1, #0
    2cbc:	movt	r1, #0
    2cc0:	mov	r0, r4
    2cc4:	bl	0 <coda_mem_record_add_field>
    2cc8:	ldrb	ip, [sp, #345]	; 0x159
    2ccc:	mov	r2, r6
    2cd0:	mov	r1, #0
    2cd4:	ldrb	r3, [sp, #346]	; 0x15a
    2cd8:	ldrb	r0, [sp, #347]	; 0x15b
    2cdc:	ldrb	lr, [sp, #348]	; 0x15c
    2ce0:	add	r3, r3, ip, lsl #8
    2ce4:	ldr	ip, [r5, r9]
    2ce8:	add	r3, r0, r3, lsl #8
    2cec:	add	r3, lr, r3, lsl #8
    2cf0:	ldr	r0, [ip, #424]	; 0x1a8
    2cf4:	bl	0 <coda_mem_uint32_new>
    2cf8:	mov	r2, r0
    2cfc:	mov	r3, #0
    2d00:	movw	r1, #0
    2d04:	movt	r1, #0
    2d08:	mov	r0, r4
    2d0c:	bl	0 <coda_mem_record_add_field>
    2d10:	ldr	r3, [sp, #128]	; 0x80
    2d14:	ldrb	r0, [sp, #349]	; 0x15d
    2d18:	ldrb	r2, [sp, #350]	; 0x15e
    2d1c:	cmp	r3, #3
    2d20:	ldrb	r3, [sp, #351]	; 0x15f
    2d24:	ldrb	r1, [sp, #352]	; 0x160
    2d28:	add	r2, r2, r0, lsl #8
    2d2c:	ldr	r0, [r5, r9]
    2d30:	add	r3, r3, r2, lsl #8
    2d34:	mov	r2, r6
    2d38:	add	r3, r1, r3, lsl #8
    2d3c:	mov	r1, #0
    2d40:	bhi	30a0 <coda_grib_reopen+0x1738>
    2d44:	ldr	r0, [r0, #432]	; 0x1b0
    2d48:	bl	0 <coda_mem_uint32_new>
    2d4c:	mov	r2, r0
    2d50:	movw	r1, #0
    2d54:	movt	r1, #0
    2d58:	mov	r3, #0
    2d5c:	mov	r0, r4
    2d60:	bl	0 <coda_mem_record_add_field>
    2d64:	ldr	r0, [r5, r9]
    2d68:	mov	r2, r6
    2d6c:	mov	r1, #0
    2d70:	ldrb	r3, [sp, #353]	; 0x161
    2d74:	ldr	r0, [r0, #436]	; 0x1b4
    2d78:	bl	0 <coda_mem_uint8_new>
    2d7c:	mov	r2, r0
    2d80:	mov	r3, #0
    2d84:	movw	r1, #0
    2d88:	movt	r1, #0
    2d8c:	mov	r0, r4
    2d90:	bl	0 <coda_mem_record_add_field>
    2d94:	ldr	r3, [sp, #28]
    2d98:	adds	r3, r3, #68	; 0x44
    2d9c:	str	r3, [sp, #16]
    2da0:	adc	r3, r7, #0
    2da4:	str	r3, [sp, #20]
    2da8:	ldr	r3, [sp, #124]	; 0x7c
    2dac:	cmp	r3, #0
    2db0:	bne	7808 <coda_grib_reopen+0x5ea0>
    2db4:	ldr	r3, [sp, #32]
    2db8:	cmp	r3, #72	; 0x48
    2dbc:	ble	2dd4 <coda_grib_reopen+0x146c>
    2dc0:	sub	r1, r3, #72	; 0x48
    2dc4:	ldrd	r2, [sp, #16]
    2dc8:	adds	r2, r2, r1
    2dcc:	adc	r3, r3, #0
    2dd0:	strd	r2, [sp, #16]
    2dd4:	ldr	r3, [sp, #56]	; 0x38
    2dd8:	mov	r1, r4
    2ddc:	ldr	r0, [sp, #188]	; 0xbc
    2de0:	add	r3, r3, #1
    2de4:	str	r3, [sp, #56]	; 0x38
    2de8:	bl	0 <coda_mem_array_add_element>
    2dec:	b	2644 <coda_grib_reopen+0xcdc>
    2df0:	and	r3, r4, #251	; 0xfb
    2df4:	cmp	r3, #3
    2df8:	bne	783c <coda_grib_reopen+0x5ed4>
    2dfc:	mov	r0, #4
    2e00:	mov	r1, #0
    2e04:	add	r3, sp, #296	; 0x128
    2e08:	strd	r0, [sp]
    2e0c:	str	r3, [sp, #8]
    2e10:	ldrd	r2, [sp, #16]
    2e14:	ldr	r0, [r6, #52]	; 0x34
    2e18:	bl	0 <read_bytes>
    2e1c:	cmp	r0, #0
    2e20:	blt	3478 <coda_grib_reopen+0x1b10>
    2e24:	ldrb	lr, [sp, #298]	; 0x12a
    2e28:	ldrb	r1, [sp, #299]	; 0x12b
    2e2c:	ldrb	ip, [sp, #296]	; 0x128
    2e30:	ldrb	r0, [sp, #297]	; 0x129
    2e34:	add	r1, r1, lr, lsl #8
    2e38:	ldr	r3, [sp, #28]
    2e3c:	uxth	r1, r1
    2e40:	add	r0, r0, ip, lsl #8
    2e44:	adds	r2, r3, #5
    2e48:	uxth	r0, r0
    2e4c:	adc	r3, r7, #0
    2e50:	cmp	r1, #15
    2e54:	cmpne	r1, #6
    2e58:	str	r0, [sp, #76]	; 0x4c
    2e5c:	bls	2e6c <coda_grib_reopen+0x1504>
    2e60:	cmp	r1, #51	; 0x33
    2e64:	cmpne	r1, #40	; 0x28
    2e68:	bne	7970 <coda_grib_reopen+0x6008>
    2e6c:	mov	r0, #25
    2e70:	mov	r1, #0
    2e74:	add	ip, sp, #296	; 0x128
    2e78:	strd	r0, [sp]
    2e7c:	str	ip, [sp, #8]
    2e80:	ldr	r0, [r6, #52]	; 0x34
    2e84:	bl	0 <read_bytes>
    2e88:	cmp	r0, #0
    2e8c:	blt	3478 <coda_grib_reopen+0x1b10>
    2e90:	ldrb	r2, [sp, #305]	; 0x131
    2e94:	ldrb	r1, [sp, #306]	; 0x132
    2e98:	ldrb	r3, [sp, #307]	; 0x133
    2e9c:	ldrb	r0, [sp, #301]	; 0x12d
    2ea0:	add	r1, r1, r2, lsl #8
    2ea4:	ldrb	r2, [sp, #302]	; 0x12e
    2ea8:	add	r3, r3, r1, lsl #8
    2eac:	ldrb	r1, [sp, #308]	; 0x134
    2eb0:	ldrb	ip, [sp, #309]	; 0x135
    2eb4:	add	r2, r2, r0, lsl #8
    2eb8:	ldrb	r0, [sp, #296]	; 0x128
    2ebc:	add	r3, r1, r3, lsl #8
    2ec0:	uxth	r2, r2
    2ec4:	cmp	ip, #255	; 0xff
    2ec8:	str	r2, [sp, #152]	; 0x98
    2ecc:	ldrb	r2, [sp, #297]	; 0x129
    2ed0:	str	r3, [sp, #164]	; 0xa4
    2ed4:	ldrb	r3, [sp, #298]	; 0x12a
    2ed8:	str	r0, [sp, #132]	; 0x84
    2edc:	str	ip, [sp, #168]	; 0xa8
    2ee0:	strd	r2, [sp, #136]	; 0x88
    2ee4:	ldrb	r3, [sp, #299]	; 0x12b
    2ee8:	str	r3, [sp, #144]	; 0x90
    2eec:	ldrb	r3, [sp, #300]	; 0x12c
    2ef0:	str	r3, [sp, #148]	; 0x94
    2ef4:	ldrb	r3, [sp, #303]	; 0x12f
    2ef8:	str	r3, [sp, #156]	; 0x9c
    2efc:	ldrb	r3, [sp, #304]	; 0x130
    2f00:	str	r3, [sp, #160]	; 0xa0
    2f04:	beq	329c <coda_grib_reopen+0x1934>
    2f08:	ldrb	r3, [sp, #311]	; 0x137
    2f0c:	ldrb	r0, [sp, #312]	; 0x138
    2f10:	ldrb	r1, [sp, #313]	; 0x139
    2f14:	ldrb	r2, [sp, #314]	; 0x13a
    2f18:	add	r0, r0, r3, lsl #8
    2f1c:	add	r3, sp, #308	; 0x134
    2f20:	add	r3, r3, #2
    2f24:	add	r1, r1, r0, lsl #8
    2f28:	ldrsb	r3, [r3]
    2f2c:	add	r2, r2, r1, lsl #8
    2f30:	vmov	s15, r2
    2f34:	cmp	r3, #0
    2f38:	vcvt.f64.s32	d9, s15
    2f3c:	bge	76f0 <coda_grib_reopen+0x5d88>
    2f40:	add	r3, r3, #1
    2f44:	vmul.f64	d9, d9, d10
    2f48:	sxtb	r3, r3
    2f4c:	cmp	r3, #0
    2f50:	bne	2f40 <coda_grib_reopen+0x15d8>
    2f54:	ldrb	r3, [sp, #315]	; 0x13b
    2f58:	cmp	r3, #255	; 0xff
    2f5c:	str	r3, [sp, #172]	; 0xac
    2f60:	beq	32b4 <coda_grib_reopen+0x194c>
    2f64:	ldrb	r3, [sp, #317]	; 0x13d
    2f68:	ldrb	r0, [sp, #318]	; 0x13e
    2f6c:	ldrb	r1, [sp, #319]	; 0x13f
    2f70:	ldrb	r2, [sp, #320]	; 0x140
    2f74:	add	r0, r0, r3, lsl #8
    2f78:	add	r3, sp, #316	; 0x13c
    2f7c:	ldrsb	r3, [r3]
    2f80:	add	r1, r1, r0, lsl #8
    2f84:	add	r2, r2, r1, lsl #8
    2f88:	cmp	r3, #0
    2f8c:	vmov	s15, r2
    2f90:	vcvt.f64.s32	d8, s15
    2f94:	bge	76d0 <coda_grib_reopen+0x5d68>
    2f98:	add	r3, r3, #1
    2f9c:	vmul.f64	d8, d8, d10
    2fa0:	sxtb	r3, r3
    2fa4:	cmp	r3, #0
    2fa8:	bne	2f98 <coda_grib_reopen+0x1630>
    2fac:	ldr	r3, [sp, #28]
    2fb0:	adds	r3, r3, #30
    2fb4:	str	r3, [sp, #16]
    2fb8:	adc	r3, r7, #0
    2fbc:	str	r3, [sp, #20]
    2fc0:	ldr	r3, [sp, #76]	; 0x4c
    2fc4:	cmp	r3, #0
    2fc8:	bne	33dc <coda_grib_reopen+0x1a74>
    2fcc:	mvn	r3, #0
    2fd0:	str	r3, [sp, #192]	; 0xc0
    2fd4:	str	r3, [sp, #196]	; 0xc4
    2fd8:	ldr	r3, [sp, #32]
    2fdc:	cmp	r3, #34	; 0x22
    2fe0:	ble	2644 <coda_grib_reopen+0xcdc>
    2fe4:	ldr	r3, [sp, #32]
    2fe8:	sub	r1, r3, #34	; 0x22
    2fec:	ldrd	r2, [sp, #16]
    2ff0:	adds	r2, r2, r1
    2ff4:	adc	r3, r3, #0
    2ff8:	strd	r2, [sp, #16]
    2ffc:	b	2644 <coda_grib_reopen+0xcdc>
    3000:	sub	r1, r3, #5
    3004:	mov	r0, r1
    3008:	str	r1, [sp, #28]
    300c:	bl	0 <malloc>
    3010:	subs	r3, r0, #0
    3014:	ldr	r1, [sp, #28]
    3018:	mov	sl, r3
    301c:	beq	78cc <coda_grib_reopen+0x5f64>
    3020:	mov	r4, #0
    3024:	str	r1, [sp]
    3028:	mov	r8, r1
    302c:	str	r4, [sp, #4]
    3030:	str	r3, [sp, #8]
    3034:	ldrd	r2, [sp, #16]
    3038:	str	r1, [sp, #28]
    303c:	ldr	r0, [r6, #52]	; 0x34
    3040:	bl	0 <read_bytes>
    3044:	cmp	r0, r4
    3048:	ldr	r1, [sp, #28]
    304c:	blt	791c <coda_grib_reopen+0x5fb4>
    3050:	ldr	r2, [sp, #88]	; 0x58
    3054:	mov	r3, r1
    3058:	mov	r1, r7
    305c:	ldr	r0, [r5, r9]
    3060:	add	r2, r2, #1
    3064:	str	r2, [sp, #88]	; 0x58
    3068:	mov	r2, r6
    306c:	ldr	r0, [r0, #348]	; 0x15c
    3070:	str	sl, [sp]
    3074:	bl	0 <coda_mem_raw_new>
    3078:	mov	r1, r0
    307c:	ldr	r0, [sp, #208]	; 0xd0
    3080:	bl	0 <coda_mem_array_add_element>
    3084:	ldr	r3, [sp, #16]
    3088:	adds	r3, r3, r8
    308c:	str	r3, [sp, #16]
    3090:	ldr	r3, [sp, #20]
    3094:	adc	r3, r3, r4
    3098:	str	r3, [sp, #20]
    309c:	b	2644 <coda_grib_reopen+0xcdc>
    30a0:	ldr	r0, [r0, #428]	; 0x1ac
    30a4:	bl	0 <coda_mem_uint32_new>
    30a8:	mov	r2, r0
    30ac:	movw	r1, #0
    30b0:	movt	r1, #0
    30b4:	mov	r3, #0
    30b8:	mov	r0, r4
    30bc:	bl	0 <coda_mem_record_add_field>
    30c0:	b	2d64 <coda_grib_reopen+0x13fc>
    30c4:	cmp	r4, #4
    30c8:	bne	794c <coda_grib_reopen+0x5fe4>
    30cc:	mov	r0, #6
    30d0:	mov	r1, #0
    30d4:	add	r3, sp, #296	; 0x128
    30d8:	strd	r0, [sp]
    30dc:	str	r3, [sp, #8]
    30e0:	ldrd	r2, [sp, #16]
    30e4:	ldr	r0, [r6, #52]	; 0x34
    30e8:	bl	0 <read_bytes>
    30ec:	cmp	r0, #0
    30f0:	blt	3478 <coda_grib_reopen+0x1b10>
    30f4:	ldrb	r0, [sp, #297]	; 0x129
    30f8:	ldrb	lr, [sp, #296]	; 0x128
    30fc:	ldrb	ip, [sp, #300]	; 0x12c
    3100:	ldrb	r1, [sp, #301]	; 0x12d
    3104:	add	lr, r0, lr, lsl #8
    3108:	ldrb	r0, [sp, #298]	; 0x12a
    310c:	ldr	r4, [sp, #28]
    3110:	add	r1, r1, ip, lsl #8
    3114:	ldrb	ip, [sp, #299]	; 0x12b
    3118:	add	r0, r0, lr, lsl #8
    311c:	uxth	r1, r1
    3120:	adds	r2, r4, #7
    3124:	adc	r3, r7, #0
    3128:	cmp	r1, #1
    312c:	add	r0, ip, r0, lsl #8
    3130:	str	r0, [sp, #184]	; 0xb8
    3134:	bhi	792c <coda_grib_reopen+0x5fc4>
    3138:	add	ip, sp, #228	; 0xe4
    313c:	mov	r0, #4
    3140:	mov	r1, #0
    3144:	strd	r0, [sp]
    3148:	str	ip, [sp, #8]
    314c:	ldr	r0, [r6, #52]	; 0x34
    3150:	bl	0 <read_bytes>
    3154:	cmp	r0, #0
    3158:	blt	3478 <coda_grib_reopen+0x1b10>
    315c:	ldrb	lr, [sp, #231]	; 0xe7
    3160:	adds	r2, r4, #11
    3164:	add	r3, sp, #296	; 0x128
    3168:	mov	r0, #5
    316c:	mov	r1, #0
    3170:	ldrb	r4, [sp, #228]	; 0xe4
    3174:	strd	r0, [sp]
    3178:	ldrb	ip, [sp, #230]	; 0xe6
    317c:	str	r3, [sp, #8]
    3180:	adc	r3, r7, #0
    3184:	strb	lr, [sp, #228]	; 0xe4
    3188:	ldrb	lr, [sp, #229]	; 0xe5
    318c:	ldr	r0, [r6, #52]	; 0x34
    3190:	strb	ip, [sp, #229]	; 0xe5
    3194:	strb	r4, [sp, #231]	; 0xe7
    3198:	strb	lr, [sp, #230]	; 0xe6
    319c:	bl	0 <read_bytes>
    31a0:	cmp	r0, #0
    31a4:	blt	3478 <coda_grib_reopen+0x1b10>
    31a8:	ldrb	lr, [sp, #296]	; 0x128
    31ac:	movw	r1, #65535	; 0xffff
    31b0:	ldrb	ip, [sp, #298]	; 0x12a
    31b4:	ldrb	r2, [sp, #297]	; 0x129
    31b8:	tst	lr, #128	; 0x80
    31bc:	and	lr, lr, #127	; 0x7f
    31c0:	ldrb	r3, [sp, #299]	; 0x12b
    31c4:	movne	r0, r1
    31c8:	moveq	r0, #1
    31cc:	tst	ip, #128	; 0x80
    31d0:	and	ip, ip, #127	; 0x7f
    31d4:	moveq	r1, #1
    31d8:	add	r2, r2, lr, lsl #8
    31dc:	ldrb	lr, [sp, #300]	; 0x12c
    31e0:	add	r3, r3, ip, lsl #8
    31e4:	smulbb	r2, r2, r0
    31e8:	smulbb	r3, r3, r1
    31ec:	cmp	lr, #63	; 0x3f
    31f0:	str	lr, [sp, #96]	; 0x60
    31f4:	sxth	r2, r2
    31f8:	sxth	r3, r3
    31fc:	str	r3, [sp, #100]	; 0x64
    3200:	str	r2, [sp, #120]	; 0x78
    3204:	bhi	79c8 <coda_grib_reopen+0x6060>
    3208:	ldr	r3, [sp, #28]
    320c:	adds	r3, r3, #16
    3210:	str	r3, [sp, #16]
    3214:	adc	r3, r7, #0
    3218:	str	r3, [sp, #20]
    321c:	ldr	r3, [sp, #32]
    3220:	cmp	r3, #20
    3224:	ble	2644 <coda_grib_reopen+0xcdc>
    3228:	ldr	r3, [sp, #32]
    322c:	sub	r1, r3, #20
    3230:	ldrd	r2, [sp, #16]
    3234:	adds	r2, r2, r1
    3238:	adc	r3, r3, #0
    323c:	strd	r2, [sp, #16]
    3240:	b	2644 <coda_grib_reopen+0xcdc>
    3244:	ldrd	r2, [sp, #48]	; 0x30
    3248:	sub	r7, r7, #21
    324c:	adds	r2, r2, r7
    3250:	adc	r3, r3, #0
    3254:	strd	r2, [sp, #48]	; 0x30
    3258:	b	2058 <coda_grib_reopen+0x6f0>
    325c:	ldr	r0, [r5, r9]
    3260:	ldrd	r2, [sp, #16]
    3264:	ldr	ip, [sp, #96]	; 0x60
    3268:	ldr	r0, [r0, #536]	; 0x218
    326c:	ldr	r1, [sp, #184]	; 0xb8
    3270:	str	ip, [sp]
    3274:	ldr	ip, [sp, #100]	; 0x64
    3278:	vldr	s0, [sp, #228]	; 0xe4
    327c:	str	ip, [sp, #4]
    3280:	ldr	ip, [sp, #120]	; 0x78
    3284:	str	ip, [sp, #8]
    3288:	ldr	ip, [sp, #176]	; 0xb0
    328c:	str	ip, [sp, #12]
    3290:	bl	0 <coda_grib_value_array_simple_packing_new>
    3294:	mov	r8, r0
    3298:	b	25dc <coda_grib_reopen+0xc74>
    329c:	bl	0 <coda_NaN>
    32a0:	ldrb	r3, [sp, #315]	; 0x13b
    32a4:	vmov.f64	d9, d0
    32a8:	cmp	r3, #255	; 0xff
    32ac:	str	r3, [sp, #172]	; 0xac
    32b0:	bne	2f64 <coda_grib_reopen+0x15fc>
    32b4:	bl	0 <coda_NaN>
    32b8:	vmov.f64	d8, d0
    32bc:	b	2fac <coda_grib_reopen+0x1644>
    32c0:	ldr	r0, [r5, r9]
    32c4:	ldr	r1, [sp, #76]	; 0x4c
    32c8:	ldrd	r2, [sp, #192]	; 0xc0
    32cc:	ldr	r0, [r0, #516]	; 0x204
    32d0:	bl	0 <coda_grib_value_array_new>
    32d4:	mov	r2, r0
    32d8:	movw	r1, #0
    32dc:	movt	r1, #0
    32e0:	mov	r3, #0
    32e4:	mov	r0, r4
    32e8:	bl	0 <coda_mem_record_add_field>
    32ec:	b	2498 <coda_grib_reopen+0xb30>
    32f0:	ldrb	ip, [sp, #272]	; 0x110
    32f4:	mov	r1, #0
    32f8:	ldrb	r3, [sp, #273]	; 0x111
    32fc:	ldrb	r2, [sp, #274]	; 0x112
    3300:	ldr	r0, [r5, r9]
    3304:	add	r3, r3, ip, lsl #8
    3308:	add	r2, r2, r3, lsl #8
    330c:	asr	r3, r2, #31
    3310:	ldr	r0, [r0, #272]	; 0x110
    3314:	strd	r2, [sp, #232]	; 0xe8
    3318:	bl	0 <coda_mem_record_new>
    331c:	ldr	ip, [sp, #60]	; 0x3c
    3320:	mov	lr, r0
    3324:	mov	r3, r4
    3328:	mov	r2, r6
    332c:	mov	r1, #0
    3330:	ldr	r0, [r5, r9]
    3334:	mov	r4, lr
    3338:	str	lr, [sp, #180]	; 0xb4
    333c:	ldr	ip, [ip, #20]
    3340:	ldr	r0, [r0, #12]
    3344:	str	lr, [ip]
    3348:	bl	0 <coda_mem_uint8_new>
    334c:	mov	r2, r0
    3350:	mov	r3, #0
    3354:	movw	r1, #0
    3358:	movt	r1, #0
    335c:	mov	r0, r4
    3360:	bl	0 <coda_mem_record_add_field>
    3364:	mov	r2, r7
    3368:	mov	r3, r8
    336c:	mov	r1, r4
    3370:	mov	r0, r6
    3374:	bl	23c <read_grib1_message>
    3378:	cmp	r0, #0
    337c:	bne	3478 <coda_grib_reopen+0x1b10>
    3380:	ldr	r0, [r6, #20]
    3384:	ldr	r1, [sp, #60]	; 0x3c
    3388:	bl	0 <coda_mem_array_add_element>
    338c:	cmp	r0, #0
    3390:	bne	7824 <coda_grib_reopen+0x5ebc>
    3394:	ldr	r3, [sp, #72]	; 0x48
    3398:	ldr	r1, [sp, #232]	; 0xe8
    339c:	ldr	r0, [sp, #236]	; 0xec
    33a0:	add	r3, r3, #1
    33a4:	str	r3, [sp, #72]	; 0x48
    33a8:	adds	sl, sl, r1
    33ac:	ldrd	r2, [r6, #8]
    33b0:	adc	fp, fp, r0
    33b4:	subs	r1, r2, #1
    33b8:	str	r1, [sp, #64]	; 0x40
    33bc:	sbc	r1, r3, #0
    33c0:	str	r1, [sp, #68]	; 0x44
    33c4:	ldrd	r0, [sp, #64]	; 0x40
    33c8:	cmp	sl, r0
    33cc:	sbcs	r1, fp, r1
    33d0:	blt	1a40 <coda_grib_reopen+0xd8>
    33d4:	mov	r7, r6
    33d8:	b	1af4 <coda_grib_reopen+0x18c>
    33dc:	ldrd	r2, [sp, #16]
    33e0:	str	r2, [sp, #192]	; 0xc0
    33e4:	str	r3, [sp, #196]	; 0xc4
    33e8:	b	2fd8 <coda_grib_reopen+0x1670>
    33ec:	cmp	r4, #5
    33f0:	bne	79e8 <coda_grib_reopen+0x6080>
    33f4:	mov	r0, #1
    33f8:	mov	r1, #0
    33fc:	ldrd	r2, [sp, #16]
    3400:	strd	r0, [sp]
    3404:	add	r1, sp, #296	; 0x128
    3408:	str	r1, [sp, #8]
    340c:	ldr	r0, [r6, #52]	; 0x34
    3410:	bl	0 <read_bytes>
    3414:	cmp	r0, #0
    3418:	blt	3478 <coda_grib_reopen+0x1b10>
    341c:	ldrb	r3, [sp, #296]	; 0x128
    3420:	cmp	r3, #0
    3424:	beq	7634 <coda_grib_reopen+0x5ccc>
    3428:	cmp	r3, #254	; 0xfe
    342c:	beq	7698 <coda_grib_reopen+0x5d30>
    3430:	cmp	r3, #255	; 0xff
    3434:	bne	7a94 <coda_grib_reopen+0x612c>
    3438:	ldr	r3, [sp, #28]
    343c:	adds	r3, r3, #2
    3440:	str	r3, [sp, #16]
    3444:	mov	r3, #0
    3448:	str	r3, [sp, #176]	; 0xb0
    344c:	adc	r3, r7, r3
    3450:	str	r3, [sp, #20]
    3454:	ldr	r3, [sp, #32]
    3458:	cmp	r3, #6
    345c:	ble	2644 <coda_grib_reopen+0xcdc>
    3460:	sub	r1, r3, #6
    3464:	ldrd	r2, [sp, #16]
    3468:	adds	r2, r2, r1
    346c:	adc	r3, r3, #0
    3470:	strd	r2, [sp, #16]
    3474:	b	2644 <coda_grib_reopen+0xcdc>
    3478:	mov	r7, r6
    347c:	ldr	r0, [sp, #60]	; 0x3c
    3480:	bl	0 <coda_dynamic_type_delete>
    3484:	mov	r0, r7
    3488:	bl	1904 <coda_grib_close>
    348c:	mvn	r0, #0
    3490:	b	1b00 <coda_grib_reopen+0x198>
    3494:	mov	r0, #572	; 0x23c
    3498:	bl	0 <malloc>
    349c:	cmp	r0, #0
    34a0:	mov	r4, r0
    34a4:	str	r0, [r5, r8]
    34a8:	movne	r2, r6
    34ac:	subne	r3, r0, #4
    34b0:	addne	r1, r0, #568	; 0x238
    34b4:	beq	7990 <coda_grib_reopen+0x6028>
    34b8:	str	r2, [r3, #4]!
    34bc:	cmp	r1, r3
    34c0:	bne	34b8 <coda_grib_reopen+0x1b50>
    34c4:	mov	r1, #2
    34c8:	mov	r0, #7
    34cc:	bl	0 <coda_type_number_new>
    34d0:	ldr	r3, [r5, r8]
    34d4:	mov	r1, #1
    34d8:	str	r0, [r4]
    34dc:	ldr	r0, [r3]
    34e0:	bl	0 <coda_type_number_set_endianness>
    34e4:	ldr	r3, [r5, r8]
    34e8:	mov	r1, #4
    34ec:	ldr	r0, [r3]
    34f0:	bl	0 <coda_type_set_read_type>
    34f4:	ldr	r1, [r5, r8]
    34f8:	mov	r2, #32
    34fc:	mov	r3, #0
    3500:	ldr	r0, [r1]
    3504:	bl	0 <coda_type_set_bit_size>
    3508:	mov	r1, #2
    350c:	mov	r0, #7
    3510:	ldr	r4, [r5, r8]
    3514:	bl	0 <coda_type_number_new>
    3518:	ldr	r3, [r5, r8]
    351c:	mov	r1, #1
    3520:	str	r0, [r4, #4]
    3524:	ldr	r0, [r3, #4]
    3528:	bl	0 <coda_type_number_set_endianness>
    352c:	ldr	r3, [r5, r8]
    3530:	mov	r1, #5
    3534:	ldr	r0, [r3, #4]
    3538:	bl	0 <coda_type_set_read_type>
    353c:	ldr	r1, [r5, r8]
    3540:	mov	r2, #32
    3544:	mov	r3, #0
    3548:	ldr	r0, [r1, #4]
    354c:	bl	0 <coda_type_set_bit_size>
    3550:	mov	r1, #2
    3554:	mov	r0, #7
    3558:	ldr	r4, [r5, r8]
    355c:	bl	0 <coda_type_number_new>
    3560:	ldr	r3, [r5, r8]
    3564:	mov	r1, #1
    3568:	str	r0, [r4, #8]
    356c:	ldr	r0, [r3, #8]
    3570:	bl	0 <coda_type_number_set_endianness>
    3574:	ldr	r3, [r5, r8]
    3578:	mov	r1, #1
    357c:	ldr	r0, [r3, #8]
    3580:	bl	0 <coda_type_set_read_type>
    3584:	ldr	r1, [r5, r8]
    3588:	mov	r2, #8
    358c:	mov	r3, #0
    3590:	ldr	r0, [r1, #8]
    3594:	bl	0 <coda_type_set_bit_size>
    3598:	ldr	r3, [r5, r8]
    359c:	movw	r1, #0
    35a0:	movt	r1, #0
    35a4:	ldr	r0, [r3, #8]
    35a8:	bl	0 <coda_type_set_description>
    35ac:	mov	r1, #2
    35b0:	mov	r0, #7
    35b4:	ldr	r4, [r5, r8]
    35b8:	bl	0 <coda_type_number_new>
    35bc:	ldr	r3, [r5, r8]
    35c0:	mov	r1, #1
    35c4:	str	r0, [r4, #12]
    35c8:	ldr	r0, [r3, #12]
    35cc:	bl	0 <coda_type_number_set_endianness>
    35d0:	ldr	r3, [r5, r8]
    35d4:	mov	r1, #1
    35d8:	ldr	r0, [r3, #12]
    35dc:	bl	0 <coda_type_set_read_type>
    35e0:	ldr	r1, [r5, r8]
    35e4:	mov	r2, #8
    35e8:	mov	r3, #0
    35ec:	ldr	r0, [r1, #12]
    35f0:	bl	0 <coda_type_set_bit_size>
    35f4:	ldr	r3, [r5, r8]
    35f8:	movw	r1, #0
    35fc:	movt	r1, #0
    3600:	ldr	r0, [r3, #12]
    3604:	bl	0 <coda_type_set_description>
    3608:	mov	r1, #2
    360c:	mov	r0, #7
    3610:	ldr	r4, [r5, r8]
    3614:	bl	0 <coda_type_number_new>
    3618:	ldr	r3, [r5, r8]
    361c:	mov	r1, #1
    3620:	str	r0, [r4, #16]
    3624:	ldr	r0, [r3, #16]
    3628:	bl	0 <coda_type_number_set_endianness>
    362c:	ldr	r3, [r5, r8]
    3630:	mov	r1, #1
    3634:	ldr	r0, [r3, #16]
    3638:	bl	0 <coda_type_set_read_type>
    363c:	ldr	r1, [r5, r8]
    3640:	mov	r2, #8
    3644:	mov	r3, #0
    3648:	ldr	r0, [r1, #16]
    364c:	bl	0 <coda_type_set_bit_size>
    3650:	ldr	r3, [r5, r8]
    3654:	movw	r1, #0
    3658:	movt	r1, #0
    365c:	ldr	r0, [r3, #16]
    3660:	bl	0 <coda_type_set_description>
    3664:	mov	r1, #2
    3668:	mov	r0, #7
    366c:	ldr	r4, [r5, r8]
    3670:	bl	0 <coda_type_number_new>
    3674:	ldr	r3, [r5, r8]
    3678:	mov	r1, #1
    367c:	str	r0, [r4, #20]
    3680:	ldr	r0, [r3, #20]
    3684:	bl	0 <coda_type_number_set_endianness>
    3688:	ldr	r3, [r5, r8]
    368c:	mov	r1, #1
    3690:	ldr	r0, [r3, #20]
    3694:	bl	0 <coda_type_set_read_type>
    3698:	ldr	r1, [r5, r8]
    369c:	mov	r2, #8
    36a0:	mov	r3, #0
    36a4:	ldr	r0, [r1, #20]
    36a8:	bl	0 <coda_type_set_bit_size>
    36ac:	ldr	r3, [r5, r8]
    36b0:	movw	r1, #0
    36b4:	movt	r1, #0
    36b8:	ldr	r0, [r3, #20]
    36bc:	bl	0 <coda_type_set_description>
    36c0:	mov	r1, #2
    36c4:	mov	r0, #7
    36c8:	ldr	r4, [r5, r8]
    36cc:	bl	0 <coda_type_number_new>
    36d0:	ldr	r3, [r5, r8]
    36d4:	mov	r1, #1
    36d8:	str	r0, [r4, #24]
    36dc:	ldr	r0, [r3, #24]
    36e0:	bl	0 <coda_type_number_set_endianness>
    36e4:	ldr	r3, [r5, r8]
    36e8:	mov	r1, #1
    36ec:	ldr	r0, [r3, #24]
    36f0:	bl	0 <coda_type_set_read_type>
    36f4:	ldr	r1, [r5, r8]
    36f8:	mov	r2, #8
    36fc:	mov	r3, #0
    3700:	ldr	r0, [r1, #24]
    3704:	bl	0 <coda_type_set_bit_size>
    3708:	ldr	r3, [r5, r8]
    370c:	movw	r1, #0
    3710:	movt	r1, #0
    3714:	ldr	r0, [r3, #24]
    3718:	bl	0 <coda_type_set_description>
    371c:	mov	r1, #2
    3720:	mov	r0, #7
    3724:	ldr	r4, [r5, r8]
    3728:	bl	0 <coda_type_number_new>
    372c:	ldr	r3, [r5, r8]
    3730:	mov	r1, #1
    3734:	str	r0, [r4, #28]
    3738:	ldr	r0, [r3, #28]
    373c:	bl	0 <coda_type_number_set_endianness>
    3740:	ldr	r3, [r5, r8]
    3744:	mov	r1, #1
    3748:	ldr	r0, [r3, #28]
    374c:	bl	0 <coda_type_set_read_type>
    3750:	ldr	r1, [r5, r8]
    3754:	mov	r2, #8
    3758:	mov	r3, #0
    375c:	ldr	r0, [r1, #28]
    3760:	bl	0 <coda_type_set_bit_size>
    3764:	ldr	r3, [r5, r8]
    3768:	movw	r1, #0
    376c:	movt	r1, #0
    3770:	ldr	r0, [r3, #28]
    3774:	bl	0 <coda_type_set_description>
    3778:	mov	r1, #2
    377c:	mov	r0, #7
    3780:	ldr	r4, [r5, r8]
    3784:	bl	0 <coda_type_number_new>
    3788:	ldr	r3, [r5, r8]
    378c:	mov	r1, #1
    3790:	str	r0, [r4, #32]
    3794:	ldr	r0, [r3, #32]
    3798:	bl	0 <coda_type_number_set_endianness>
    379c:	ldr	r3, [r5, r8]
    37a0:	mov	r1, #1
    37a4:	ldr	r0, [r3, #32]
    37a8:	bl	0 <coda_type_set_read_type>
    37ac:	ldr	r1, [r5, r8]
    37b0:	mov	r2, #8
    37b4:	mov	r3, #0
    37b8:	ldr	r0, [r1, #32]
    37bc:	bl	0 <coda_type_set_bit_size>
    37c0:	ldr	r3, [r5, r8]
    37c4:	movw	r1, #0
    37c8:	movt	r1, #0
    37cc:	ldr	r0, [r3, #32]
    37d0:	bl	0 <coda_type_set_description>
    37d4:	mov	r1, #2
    37d8:	mov	r0, #7
    37dc:	ldr	r4, [r5, r8]
    37e0:	bl	0 <coda_type_number_new>
    37e4:	ldr	r3, [r5, r8]
    37e8:	mov	r1, #1
    37ec:	str	r0, [r4, #36]	; 0x24
    37f0:	ldr	r0, [r3, #36]	; 0x24
    37f4:	bl	0 <coda_type_number_set_endianness>
    37f8:	ldr	r3, [r5, r8]
    37fc:	mov	r1, #3
    3800:	ldr	r0, [r3, #36]	; 0x24
    3804:	bl	0 <coda_type_set_read_type>
    3808:	ldr	r1, [r5, r8]
    380c:	mov	r2, #16
    3810:	mov	r3, #0
    3814:	ldr	r0, [r1, #36]	; 0x24
    3818:	bl	0 <coda_type_set_bit_size>
    381c:	ldr	r3, [r5, r8]
    3820:	movw	r1, #0
    3824:	movt	r1, #0
    3828:	ldr	r0, [r3, #36]	; 0x24
    382c:	bl	0 <coda_type_set_description>
    3830:	mov	r1, #2
    3834:	mov	r0, #7
    3838:	ldr	r4, [r5, r8]
    383c:	bl	0 <coda_type_number_new>
    3840:	ldr	r3, [r5, r8]
    3844:	mov	r1, #1
    3848:	str	r0, [r4, #40]	; 0x28
    384c:	ldr	r0, [r3, #40]	; 0x28
    3850:	bl	0 <coda_type_number_set_endianness>
    3854:	ldr	r3, [r5, r8]
    3858:	mov	r1, #1
    385c:	ldr	r0, [r3, #40]	; 0x28
    3860:	bl	0 <coda_type_set_read_type>
    3864:	ldr	r1, [r5, r8]
    3868:	mov	r2, #8
    386c:	mov	r3, #0
    3870:	ldr	r0, [r1, #40]	; 0x28
    3874:	bl	0 <coda_type_set_bit_size>
    3878:	ldr	r3, [r5, r8]
    387c:	movw	r1, #0
    3880:	movt	r1, #0
    3884:	ldr	r0, [r3, #40]	; 0x28
    3888:	bl	0 <coda_type_set_description>
    388c:	mov	r1, #2
    3890:	mov	r0, #7
    3894:	ldr	r4, [r5, r8]
    3898:	bl	0 <coda_type_number_new>
    389c:	ldr	r3, [r5, r8]
    38a0:	mov	r1, #1
    38a4:	str	r0, [r4, #44]	; 0x2c
    38a8:	ldr	r0, [r3, #44]	; 0x2c
    38ac:	bl	0 <coda_type_number_set_endianness>
    38b0:	ldr	r3, [r5, r8]
    38b4:	mov	r1, #3
    38b8:	ldr	r0, [r3, #44]	; 0x2c
    38bc:	bl	0 <coda_type_set_read_type>
    38c0:	ldr	r1, [r5, r8]
    38c4:	mov	r2, #16
    38c8:	mov	r3, #0
    38cc:	ldr	r0, [r1, #44]	; 0x2c
    38d0:	bl	0 <coda_type_set_bit_size>
    38d4:	ldr	r3, [r5, r8]
    38d8:	movw	r1, #0
    38dc:	movt	r1, #0
    38e0:	ldr	r0, [r3, #44]	; 0x2c
    38e4:	bl	0 <coda_type_set_description>
    38e8:	mov	r1, #2
    38ec:	mov	r0, #7
    38f0:	ldr	r4, [r5, r8]
    38f4:	bl	0 <coda_type_number_new>
    38f8:	ldr	r3, [r5, r8]
    38fc:	mov	r1, #1
    3900:	str	r0, [r4, #48]	; 0x30
    3904:	ldr	r0, [r3, #48]	; 0x30
    3908:	bl	0 <coda_type_number_set_endianness>
    390c:	ldr	r3, [r5, r8]
    3910:	mov	r1, #1
    3914:	ldr	r0, [r3, #48]	; 0x30
    3918:	bl	0 <coda_type_set_read_type>
    391c:	ldr	r1, [r5, r8]
    3920:	mov	r2, #8
    3924:	mov	r3, #0
    3928:	ldr	r0, [r1, #48]	; 0x30
    392c:	bl	0 <coda_type_set_bit_size>
    3930:	ldr	r3, [r5, r8]
    3934:	movw	r1, #0
    3938:	movt	r1, #0
    393c:	ldr	r0, [r3, #48]	; 0x30
    3940:	bl	0 <coda_type_set_description>
    3944:	mov	r1, #2
    3948:	mov	r0, #7
    394c:	ldr	r4, [r5, r8]
    3950:	bl	0 <coda_type_number_new>
    3954:	ldr	r3, [r5, r8]
    3958:	mov	r1, #1
    395c:	str	r0, [r4, #52]	; 0x34
    3960:	ldr	r0, [r3, #52]	; 0x34
    3964:	bl	0 <coda_type_number_set_endianness>
    3968:	ldr	r3, [r5, r8]
    396c:	mov	r1, #1
    3970:	ldr	r0, [r3, #52]	; 0x34
    3974:	bl	0 <coda_type_set_read_type>
    3978:	ldr	r1, [r5, r8]
    397c:	mov	r2, #8
    3980:	mov	r3, #0
    3984:	ldr	r0, [r1, #52]	; 0x34
    3988:	bl	0 <coda_type_set_bit_size>
    398c:	ldr	r3, [r5, r8]
    3990:	movw	r1, #0
    3994:	movt	r1, #0
    3998:	ldr	r0, [r3, #52]	; 0x34
    399c:	bl	0 <coda_type_set_description>
    39a0:	mov	r1, #2
    39a4:	mov	r0, #7
    39a8:	ldr	r4, [r5, r8]
    39ac:	bl	0 <coda_type_number_new>
    39b0:	ldr	r3, [r5, r8]
    39b4:	mov	r1, #1
    39b8:	str	r0, [r4, #56]	; 0x38
    39bc:	ldr	r0, [r3, #56]	; 0x38
    39c0:	bl	0 <coda_type_number_set_endianness>
    39c4:	ldr	r3, [r5, r8]
    39c8:	mov	r1, #1
    39cc:	ldr	r0, [r3, #56]	; 0x38
    39d0:	bl	0 <coda_type_set_read_type>
    39d4:	ldr	r1, [r5, r8]
    39d8:	mov	r2, #8
    39dc:	mov	r3, #0
    39e0:	ldr	r0, [r1, #56]	; 0x38
    39e4:	bl	0 <coda_type_set_bit_size>
    39e8:	ldr	r3, [r5, r8]
    39ec:	movw	r1, #0
    39f0:	movt	r1, #0
    39f4:	ldr	r0, [r3, #56]	; 0x38
    39f8:	bl	0 <coda_type_set_description>
    39fc:	mov	r1, #2
    3a00:	mov	r0, #7
    3a04:	ldr	r4, [r5, r8]
    3a08:	bl	0 <coda_type_number_new>
    3a0c:	ldr	r3, [r5, r8]
    3a10:	mov	r1, #1
    3a14:	str	r0, [r4, #60]	; 0x3c
    3a18:	ldr	r0, [r3, #60]	; 0x3c
    3a1c:	bl	0 <coda_type_number_set_endianness>
    3a20:	ldr	r3, [r5, r8]
    3a24:	mov	r1, #1
    3a28:	ldr	r0, [r3, #60]	; 0x3c
    3a2c:	bl	0 <coda_type_set_read_type>
    3a30:	ldr	r1, [r5, r8]
    3a34:	mov	r2, #8
    3a38:	mov	r3, #0
    3a3c:	ldr	r0, [r1, #60]	; 0x3c
    3a40:	bl	0 <coda_type_set_bit_size>
    3a44:	ldr	r3, [r5, r8]
    3a48:	movw	r1, #0
    3a4c:	movt	r1, #0
    3a50:	ldr	r0, [r3, #60]	; 0x3c
    3a54:	bl	0 <coda_type_set_description>
    3a58:	mov	r1, #2
    3a5c:	mov	r0, #7
    3a60:	ldr	r4, [r5, r8]
    3a64:	bl	0 <coda_type_number_new>
    3a68:	ldr	r3, [r5, r8]
    3a6c:	mov	r1, #1
    3a70:	str	r0, [r4, #64]	; 0x40
    3a74:	ldr	r0, [r3, #64]	; 0x40
    3a78:	bl	0 <coda_type_number_set_endianness>
    3a7c:	ldr	r3, [r5, r8]
    3a80:	mov	r1, #1
    3a84:	ldr	r0, [r3, #64]	; 0x40
    3a88:	bl	0 <coda_type_set_read_type>
    3a8c:	ldr	r1, [r5, r8]
    3a90:	mov	r2, #8
    3a94:	mov	r3, #0
    3a98:	ldr	r0, [r1, #64]	; 0x40
    3a9c:	bl	0 <coda_type_set_bit_size>
    3aa0:	ldr	r3, [r5, r8]
    3aa4:	movw	r1, #0
    3aa8:	movt	r1, #0
    3aac:	ldr	r0, [r3, #64]	; 0x40
    3ab0:	bl	0 <coda_type_set_description>
    3ab4:	mov	r1, #2
    3ab8:	mov	r0, #7
    3abc:	ldr	r4, [r5, r8]
    3ac0:	bl	0 <coda_type_number_new>
    3ac4:	ldr	r3, [r5, r8]
    3ac8:	mov	r1, #1
    3acc:	str	r0, [r4, #68]	; 0x44
    3ad0:	ldr	r0, [r3, #68]	; 0x44
    3ad4:	bl	0 <coda_type_number_set_endianness>
    3ad8:	ldr	r3, [r5, r8]
    3adc:	mov	r1, #1
    3ae0:	ldr	r0, [r3, #68]	; 0x44
    3ae4:	bl	0 <coda_type_set_read_type>
    3ae8:	ldr	r1, [r5, r8]
    3aec:	mov	r2, #8
    3af0:	mov	r3, #0
    3af4:	ldr	r0, [r1, #68]	; 0x44
    3af8:	bl	0 <coda_type_set_bit_size>
    3afc:	ldr	r3, [r5, r8]
    3b00:	movw	r1, #0
    3b04:	movt	r1, #0
    3b08:	ldr	r0, [r3, #68]	; 0x44
    3b0c:	bl	0 <coda_type_set_description>
    3b10:	mov	r1, #2
    3b14:	mov	r0, #7
    3b18:	ldr	r4, [r5, r8]
    3b1c:	bl	0 <coda_type_number_new>
    3b20:	ldr	r3, [r5, r8]
    3b24:	mov	r1, #1
    3b28:	str	r0, [r4, #72]	; 0x48
    3b2c:	ldr	r0, [r3, #72]	; 0x48
    3b30:	bl	0 <coda_type_number_set_endianness>
    3b34:	ldr	r3, [r5, r8]
    3b38:	mov	r1, #1
    3b3c:	ldr	r0, [r3, #72]	; 0x48
    3b40:	bl	0 <coda_type_set_read_type>
    3b44:	ldr	r1, [r5, r8]
    3b48:	mov	r2, #8
    3b4c:	mov	r3, #0
    3b50:	ldr	r0, [r1, #72]	; 0x48
    3b54:	bl	0 <coda_type_set_bit_size>
    3b58:	ldr	r3, [r5, r8]
    3b5c:	movw	r1, #0
    3b60:	movt	r1, #0
    3b64:	ldr	r0, [r3, #72]	; 0x48
    3b68:	bl	0 <coda_type_set_description>
    3b6c:	mov	r1, #2
    3b70:	mov	r0, #7
    3b74:	ldr	r4, [r5, r8]
    3b78:	bl	0 <coda_type_number_new>
    3b7c:	ldr	r3, [r5, r8]
    3b80:	mov	r1, #1
    3b84:	str	r0, [r4, #76]	; 0x4c
    3b88:	ldr	r0, [r3, #76]	; 0x4c
    3b8c:	bl	0 <coda_type_number_set_endianness>
    3b90:	ldr	r3, [r5, r8]
    3b94:	mov	r1, #1
    3b98:	ldr	r0, [r3, #76]	; 0x4c
    3b9c:	bl	0 <coda_type_set_read_type>
    3ba0:	ldr	r1, [r5, r8]
    3ba4:	mov	r2, #8
    3ba8:	mov	r3, #0
    3bac:	ldr	r0, [r1, #76]	; 0x4c
    3bb0:	bl	0 <coda_type_set_bit_size>
    3bb4:	ldr	r3, [r5, r8]
    3bb8:	movw	r1, #0
    3bbc:	movt	r1, #0
    3bc0:	ldr	r0, [r3, #76]	; 0x4c
    3bc4:	bl	0 <coda_type_set_description>
    3bc8:	mov	r1, #2
    3bcc:	mov	r0, #7
    3bd0:	ldr	r4, [r5, r8]
    3bd4:	bl	0 <coda_type_number_new>
    3bd8:	ldr	r3, [r5, r8]
    3bdc:	mov	r1, #1
    3be0:	str	r0, [r4, #80]	; 0x50
    3be4:	ldr	r0, [r3, #80]	; 0x50
    3be8:	bl	0 <coda_type_number_set_endianness>
    3bec:	ldr	r3, [r5, r8]
    3bf0:	mov	r1, #1
    3bf4:	ldr	r0, [r3, #80]	; 0x50
    3bf8:	bl	0 <coda_type_set_read_type>
    3bfc:	ldr	r1, [r5, r8]
    3c00:	mov	r2, #8
    3c04:	mov	r3, #0
    3c08:	ldr	r0, [r1, #80]	; 0x50
    3c0c:	bl	0 <coda_type_set_bit_size>
    3c10:	ldr	r3, [r5, r8]
    3c14:	movw	r1, #0
    3c18:	movt	r1, #0
    3c1c:	ldr	r0, [r3, #80]	; 0x50
    3c20:	bl	0 <coda_type_set_description>
    3c24:	mov	r1, #2
    3c28:	mov	r0, #7
    3c2c:	ldr	r4, [r5, r8]
    3c30:	bl	0 <coda_type_number_new>
    3c34:	ldr	r3, [r5, r8]
    3c38:	mov	r1, #1
    3c3c:	str	r0, [r4, #84]	; 0x54
    3c40:	ldr	r0, [r3, #84]	; 0x54
    3c44:	bl	0 <coda_type_number_set_endianness>
    3c48:	ldr	r3, [r5, r8]
    3c4c:	mov	r1, #3
    3c50:	ldr	r0, [r3, #84]	; 0x54
    3c54:	bl	0 <coda_type_set_read_type>
    3c58:	ldr	r1, [r5, r8]
    3c5c:	mov	r2, #16
    3c60:	mov	r3, #0
    3c64:	ldr	r0, [r1, #84]	; 0x54
    3c68:	bl	0 <coda_type_set_bit_size>
    3c6c:	ldr	r3, [r5, r8]
    3c70:	movw	r1, #0
    3c74:	movt	r1, #0
    3c78:	ldr	r0, [r3, #84]	; 0x54
    3c7c:	bl	0 <coda_type_set_description>
    3c80:	mov	r1, #2
    3c84:	mov	r0, #7
    3c88:	ldr	r4, [r5, r8]
    3c8c:	bl	0 <coda_type_number_new>
    3c90:	ldr	r3, [r5, r8]
    3c94:	mov	r1, #1
    3c98:	str	r0, [r4, #88]	; 0x58
    3c9c:	ldr	r0, [r3, #88]	; 0x58
    3ca0:	bl	0 <coda_type_number_set_endianness>
    3ca4:	ldr	r3, [r5, r8]
    3ca8:	mov	r1, #1
    3cac:	ldr	r0, [r3, #88]	; 0x58
    3cb0:	bl	0 <coda_type_set_read_type>
    3cb4:	ldr	r1, [r5, r8]
    3cb8:	mov	r2, #8
    3cbc:	mov	r3, #0
    3cc0:	ldr	r0, [r1, #88]	; 0x58
    3cc4:	bl	0 <coda_type_set_bit_size>
    3cc8:	ldr	r3, [r5, r8]
    3ccc:	movw	r1, #0
    3cd0:	movt	r1, #0
    3cd4:	ldr	r0, [r3, #88]	; 0x58
    3cd8:	bl	0 <coda_type_set_description>
    3cdc:	mov	r1, #2
    3ce0:	mov	r0, #7
    3ce4:	ldr	r4, [r5, r8]
    3ce8:	bl	0 <coda_type_number_new>
    3cec:	ldr	r3, [r5, r8]
    3cf0:	mov	r1, #1
    3cf4:	str	r0, [r4, #92]	; 0x5c
    3cf8:	ldr	r0, [r3, #92]	; 0x5c
    3cfc:	bl	0 <coda_type_number_set_endianness>
    3d00:	ldr	r3, [r5, r8]
    3d04:	mov	r1, #1
    3d08:	ldr	r0, [r3, #92]	; 0x5c
    3d0c:	bl	0 <coda_type_set_read_type>
    3d10:	ldr	r1, [r5, r8]
    3d14:	mov	r2, #8
    3d18:	mov	r3, #0
    3d1c:	ldr	r0, [r1, #92]	; 0x5c
    3d20:	bl	0 <coda_type_set_bit_size>
    3d24:	ldr	r3, [r5, r8]
    3d28:	movw	r1, #0
    3d2c:	movt	r1, #0
    3d30:	ldr	r0, [r3, #92]	; 0x5c
    3d34:	bl	0 <coda_type_set_description>
    3d38:	mov	r1, #2
    3d3c:	mov	r0, #7
    3d40:	ldr	r4, [r5, r8]
    3d44:	bl	0 <coda_type_number_new>
    3d48:	ldr	r3, [r5, r8]
    3d4c:	mov	r1, #1
    3d50:	str	r0, [r4, #96]	; 0x60
    3d54:	ldr	r0, [r3, #96]	; 0x60
    3d58:	bl	0 <coda_type_number_set_endianness>
    3d5c:	ldr	r3, [r5, r8]
    3d60:	mov	r1, #1
    3d64:	ldr	r0, [r3, #96]	; 0x60
    3d68:	bl	0 <coda_type_set_read_type>
    3d6c:	ldr	r1, [r5, r8]
    3d70:	mov	r2, #8
    3d74:	mov	r3, #0
    3d78:	ldr	r0, [r1, #96]	; 0x60
    3d7c:	bl	0 <coda_type_set_bit_size>
    3d80:	ldr	r3, [r5, r8]
    3d84:	movw	r1, #0
    3d88:	movt	r1, #0
    3d8c:	ldr	r0, [r3, #96]	; 0x60
    3d90:	bl	0 <coda_type_set_description>
    3d94:	mov	r1, #2
    3d98:	mov	r0, #7
    3d9c:	ldr	r4, [r5, r8]
    3da0:	bl	0 <coda_type_number_new>
    3da4:	ldr	r3, [r5, r8]
    3da8:	mov	r1, #1
    3dac:	str	r0, [r4, #100]	; 0x64
    3db0:	ldr	r0, [r3, #100]	; 0x64
    3db4:	bl	0 <coda_type_number_set_endianness>
    3db8:	ldr	r3, [r5, r8]
    3dbc:	mov	r1, #2
    3dc0:	ldr	r0, [r3, #100]	; 0x64
    3dc4:	bl	0 <coda_type_set_read_type>
    3dc8:	ldr	r1, [r5, r8]
    3dcc:	mov	r2, #16
    3dd0:	mov	r3, #0
    3dd4:	ldr	r0, [r1, #100]	; 0x64
    3dd8:	bl	0 <coda_type_set_bit_size>
    3ddc:	ldr	r3, [r5, r8]
    3de0:	movw	r1, #0
    3de4:	movt	r1, #0
    3de8:	ldr	r0, [r3, #100]	; 0x64
    3dec:	bl	0 <coda_type_set_description>
    3df0:	mov	r1, #2
    3df4:	mov	r0, #7
    3df8:	ldr	r4, [r5, r8]
    3dfc:	bl	0 <coda_type_number_new>
    3e00:	ldr	r3, [r5, r8]
    3e04:	mov	r1, #1
    3e08:	str	r0, [r4, #104]	; 0x68
    3e0c:	ldr	r0, [r3, #104]	; 0x68
    3e10:	bl	0 <coda_type_number_set_endianness>
    3e14:	ldr	r3, [r5, r8]
    3e18:	mov	r1, #1
    3e1c:	ldr	r0, [r3, #104]	; 0x68
    3e20:	bl	0 <coda_type_set_read_type>
    3e24:	ldr	r1, [r5, r8]
    3e28:	mov	r2, #8
    3e2c:	mov	r3, #0
    3e30:	ldr	r0, [r1, #104]	; 0x68
    3e34:	bl	0 <coda_type_set_bit_size>
    3e38:	ldr	r3, [r5, r8]
    3e3c:	movw	r1, #0
    3e40:	movt	r1, #0
    3e44:	ldr	r0, [r3, #104]	; 0x68
    3e48:	bl	0 <coda_type_set_description>
    3e4c:	mov	r1, #2
    3e50:	mov	r0, #7
    3e54:	ldr	r4, [r5, r8]
    3e58:	bl	0 <coda_type_number_new>
    3e5c:	ldr	r3, [r5, r8]
    3e60:	mov	r1, #1
    3e64:	str	r0, [r4, #108]	; 0x6c
    3e68:	ldr	r0, [r3, #108]	; 0x6c
    3e6c:	bl	0 <coda_type_number_set_endianness>
    3e70:	ldr	r3, [r5, r8]
    3e74:	mov	r1, #1
    3e78:	ldr	r0, [r3, #108]	; 0x6c
    3e7c:	bl	0 <coda_type_set_read_type>
    3e80:	ldr	r1, [r5, r8]
    3e84:	mov	r2, #8
    3e88:	mov	r3, #0
    3e8c:	ldr	r0, [r1, #108]	; 0x6c
    3e90:	bl	0 <coda_type_set_bit_size>
    3e94:	ldr	r3, [r5, r8]
    3e98:	movw	r1, #0
    3e9c:	movt	r1, #0
    3ea0:	ldr	r0, [r3, #108]	; 0x6c
    3ea4:	bl	0 <coda_type_set_description>
    3ea8:	mov	r1, #2
    3eac:	mov	r0, #7
    3eb0:	ldr	r4, [r5, r8]
    3eb4:	bl	0 <coda_type_number_new>
    3eb8:	ldr	r3, [r5, r8]
    3ebc:	mov	r1, #1
    3ec0:	str	r0, [r4, #112]	; 0x70
    3ec4:	ldr	r0, [r3, #112]	; 0x70
    3ec8:	bl	0 <coda_type_number_set_endianness>
    3ecc:	ldr	r3, [r5, r8]
    3ed0:	mov	r1, #1
    3ed4:	ldr	r0, [r3, #112]	; 0x70
    3ed8:	bl	0 <coda_type_set_read_type>
    3edc:	ldr	r1, [r5, r8]
    3ee0:	mov	r2, #8
    3ee4:	mov	r3, #0
    3ee8:	ldr	r0, [r1, #112]	; 0x70
    3eec:	bl	0 <coda_type_set_bit_size>
    3ef0:	ldr	r3, [r5, r8]
    3ef4:	movw	r1, #0
    3ef8:	movt	r1, #0
    3efc:	ldr	r0, [r3, #112]	; 0x70
    3f00:	bl	0 <coda_type_set_description>
    3f04:	mov	r1, #2
    3f08:	mov	r0, #7
    3f0c:	ldr	r4, [r5, r8]
    3f10:	bl	0 <coda_type_number_new>
    3f14:	ldr	r3, [r5, r8]
    3f18:	mov	r1, #1
    3f1c:	str	r0, [r4, #116]	; 0x74
    3f20:	ldr	r0, [r3, #116]	; 0x74
    3f24:	bl	0 <coda_type_number_set_endianness>
    3f28:	ldr	r3, [r5, r8]
    3f2c:	mov	r1, #1
    3f30:	ldr	r0, [r3, #116]	; 0x74
    3f34:	bl	0 <coda_type_set_read_type>
    3f38:	ldr	r1, [r5, r8]
    3f3c:	mov	r2, #8
    3f40:	mov	r3, #0
    3f44:	ldr	r0, [r1, #116]	; 0x74
    3f48:	bl	0 <coda_type_set_bit_size>
    3f4c:	ldr	r3, [r5, r8]
    3f50:	movw	r1, #0
    3f54:	movt	r1, #0
    3f58:	ldr	r0, [r3, #116]	; 0x74
    3f5c:	bl	0 <coda_type_set_description>
    3f60:	mov	r1, #2
    3f64:	mov	r0, #7
    3f68:	ldr	r4, [r5, r8]
    3f6c:	bl	0 <coda_type_number_new>
    3f70:	ldr	r3, [r5, r8]
    3f74:	mov	r1, #1
    3f78:	str	r0, [r4, #120]	; 0x78
    3f7c:	ldr	r0, [r3, #120]	; 0x78
    3f80:	bl	0 <coda_type_number_set_endianness>
    3f84:	ldr	r3, [r5, r8]
    3f88:	mov	r1, #1
    3f8c:	ldr	r0, [r3, #120]	; 0x78
    3f90:	bl	0 <coda_type_set_read_type>
    3f94:	ldr	r1, [r5, r8]
    3f98:	mov	r2, #8
    3f9c:	mov	r3, #0
    3fa0:	ldr	r0, [r1, #120]	; 0x78
    3fa4:	bl	0 <coda_type_set_bit_size>
    3fa8:	ldr	r3, [r5, r8]
    3fac:	movw	r1, #0
    3fb0:	movt	r1, #0
    3fb4:	ldr	r0, [r3, #120]	; 0x78
    3fb8:	bl	0 <coda_type_set_description>
    3fbc:	mov	r1, #2
    3fc0:	mov	r0, #7
    3fc4:	ldr	r4, [r5, r8]
    3fc8:	bl	0 <coda_type_number_new>
    3fcc:	ldr	r3, [r5, r8]
    3fd0:	mov	r1, #1
    3fd4:	str	r0, [r4, #124]	; 0x7c
    3fd8:	ldr	r0, [r3, #124]	; 0x7c
    3fdc:	bl	0 <coda_type_number_set_endianness>
    3fe0:	ldr	r3, [r5, r8]
    3fe4:	mov	r1, #1
    3fe8:	ldr	r0, [r3, #124]	; 0x7c
    3fec:	bl	0 <coda_type_set_read_type>
    3ff0:	ldr	r1, [r5, r8]
    3ff4:	mov	r2, #8
    3ff8:	mov	r3, #0
    3ffc:	ldr	r0, [r1, #124]	; 0x7c
    4000:	bl	0 <coda_type_set_bit_size>
    4004:	ldr	r3, [r5, r8]
    4008:	movw	r1, #0
    400c:	movt	r1, #0
    4010:	ldr	r0, [r3, #124]	; 0x7c
    4014:	bl	0 <coda_type_set_description>
    4018:	mov	r0, #7
    401c:	ldr	r4, [r5, r8]
    4020:	bl	0 <coda_type_raw_new>
    4024:	ldr	r3, [r5, r8]
    4028:	movw	r1, #0
    402c:	movt	r1, #0
    4030:	str	r0, [r4, #128]	; 0x80
    4034:	ldr	r0, [r3, #128]	; 0x80
    4038:	bl	0 <coda_type_set_description>
    403c:	mov	r1, #2
    4040:	mov	r0, #7
    4044:	ldr	r4, [r5, r8]
    4048:	bl	0 <coda_type_number_new>
    404c:	ldr	r3, [r5, r8]
    4050:	mov	r1, #1
    4054:	str	r0, [r4, #132]	; 0x84
    4058:	ldr	r0, [r3, #132]	; 0x84
    405c:	bl	0 <coda_type_number_set_endianness>
    4060:	ldr	r3, [r5, r8]
    4064:	mov	r1, #1
    4068:	ldr	r0, [r3, #132]	; 0x84
    406c:	bl	0 <coda_type_set_read_type>
    4070:	ldr	r1, [r5, r8]
    4074:	mov	r2, #8
    4078:	mov	r3, #0
    407c:	ldr	r0, [r1, #132]	; 0x84
    4080:	bl	0 <coda_type_set_bit_size>
    4084:	ldr	r3, [r5, r8]
    4088:	movw	r1, #0
    408c:	movt	r1, #0
    4090:	ldr	r0, [r3, #132]	; 0x84
    4094:	bl	0 <coda_type_set_description>
    4098:	mov	r1, #2
    409c:	mov	r0, #7
    40a0:	ldr	r4, [r5, r8]
    40a4:	bl	0 <coda_type_number_new>
    40a8:	ldr	r3, [r5, r8]
    40ac:	mov	r1, #1
    40b0:	str	r0, [r4, #136]	; 0x88
    40b4:	ldr	r0, [r3, #136]	; 0x88
    40b8:	bl	0 <coda_type_number_set_endianness>
    40bc:	ldr	r3, [r5, r8]
    40c0:	mov	r1, #1
    40c4:	ldr	r0, [r3, #136]	; 0x88
    40c8:	bl	0 <coda_type_set_read_type>
    40cc:	ldr	r1, [r5, r8]
    40d0:	mov	r2, #8
    40d4:	mov	r3, #0
    40d8:	ldr	r0, [r1, #136]	; 0x88
    40dc:	bl	0 <coda_type_set_bit_size>
    40e0:	ldr	r3, [r5, r8]
    40e4:	movw	r1, #0
    40e8:	movt	r1, #0
    40ec:	ldr	r0, [r3, #136]	; 0x88
    40f0:	bl	0 <coda_type_set_description>
    40f4:	mov	r1, #2
    40f8:	mov	r0, #7
    40fc:	ldr	r4, [r5, r8]
    4100:	bl	0 <coda_type_number_new>
    4104:	ldr	r3, [r5, r8]
    4108:	mov	r1, #1
    410c:	str	r0, [r4, #140]	; 0x8c
    4110:	ldr	r0, [r3, #140]	; 0x8c
    4114:	bl	0 <coda_type_number_set_endianness>
    4118:	ldr	r3, [r5, r8]
    411c:	mov	r1, #1
    4120:	ldr	r0, [r3, #140]	; 0x8c
    4124:	bl	0 <coda_type_set_read_type>
    4128:	ldr	r1, [r5, r8]
    412c:	mov	r2, #8
    4130:	mov	r3, #0
    4134:	ldr	r0, [r1, #140]	; 0x8c
    4138:	bl	0 <coda_type_set_bit_size>
    413c:	mov	r1, #2
    4140:	mov	r0, #7
    4144:	ldr	r4, [r5, r8]
    4148:	bl	0 <coda_type_number_new>
    414c:	ldr	r3, [r5, r8]
    4150:	mov	r1, #1
    4154:	str	r0, [r4, #144]	; 0x90
    4158:	ldr	r0, [r3, #144]	; 0x90
    415c:	bl	0 <coda_type_number_set_endianness>
    4160:	ldr	r3, [r5, r8]
    4164:	mov	r1, #1
    4168:	ldr	r0, [r3, #144]	; 0x90
    416c:	bl	0 <coda_type_set_read_type>
    4170:	ldr	r1, [r5, r8]
    4174:	mov	r2, #8
    4178:	mov	r3, #0
    417c:	ldr	r0, [r1, #144]	; 0x90
    4180:	bl	0 <coda_type_set_bit_size>
    4184:	mov	r1, #2
    4188:	mov	r0, #7
    418c:	ldr	r4, [r5, r8]
    4190:	bl	0 <coda_type_number_new>
    4194:	ldr	r3, [r5, r8]
    4198:	mov	r1, #1
    419c:	str	r0, [r4, #148]	; 0x94
    41a0:	ldr	r0, [r3, #148]	; 0x94
    41a4:	bl	0 <coda_type_number_set_endianness>
    41a8:	ldr	r3, [r5, r8]
    41ac:	mov	r1, #5
    41b0:	ldr	r0, [r3, #148]	; 0x94
    41b4:	bl	0 <coda_type_set_read_type>
    41b8:	ldr	r1, [r5, r8]
    41bc:	mov	r2, #32
    41c0:	mov	r3, #0
    41c4:	ldr	r0, [r1, #148]	; 0x94
    41c8:	bl	0 <coda_type_set_bit_size>
    41cc:	mov	r1, #2
    41d0:	mov	r0, #7
    41d4:	ldr	r4, [r5, r8]
    41d8:	bl	0 <coda_type_number_new>
    41dc:	ldr	r3, [r5, r8]
    41e0:	mov	r1, #1
    41e4:	str	r0, [r4, #152]	; 0x98
    41e8:	ldr	r0, [r3, #152]	; 0x98
    41ec:	bl	0 <coda_type_number_set_endianness>
    41f0:	ldr	r3, [r5, r8]
    41f4:	mov	r1, #1
    41f8:	ldr	r0, [r3, #152]	; 0x98
    41fc:	bl	0 <coda_type_set_read_type>
    4200:	ldr	r1, [r5, r8]
    4204:	mov	r2, #8
    4208:	mov	r3, #0
    420c:	ldr	r0, [r1, #152]	; 0x98
    4210:	bl	0 <coda_type_set_bit_size>
    4214:	mov	r1, #2
    4218:	mov	r0, #7
    421c:	ldr	r4, [r5, r8]
    4220:	bl	0 <coda_type_number_new>
    4224:	ldr	r3, [r5, r8]
    4228:	mov	r1, #1
    422c:	str	r0, [r4, #156]	; 0x9c
    4230:	ldr	r0, [r3, #156]	; 0x9c
    4234:	bl	0 <coda_type_number_set_endianness>
    4238:	ldr	r3, [r5, r8]
    423c:	mov	r1, #5
    4240:	ldr	r0, [r3, #156]	; 0x9c
    4244:	bl	0 <coda_type_set_read_type>
    4248:	ldr	r1, [r5, r8]
    424c:	mov	r2, #32
    4250:	mov	r3, #0
    4254:	ldr	r0, [r1, #156]	; 0x9c
    4258:	bl	0 <coda_type_set_bit_size>
    425c:	mov	r1, #2
    4260:	mov	r0, #7
    4264:	ldr	r4, [r5, r8]
    4268:	bl	0 <coda_type_number_new>
    426c:	ldr	r3, [r5, r8]
    4270:	mov	r1, #1
    4274:	str	r0, [r4, #160]	; 0xa0
    4278:	ldr	r0, [r3, #160]	; 0xa0
    427c:	bl	0 <coda_type_number_set_endianness>
    4280:	ldr	r3, [r5, r8]
    4284:	mov	r1, #1
    4288:	ldr	r0, [r3, #160]	; 0xa0
    428c:	bl	0 <coda_type_set_read_type>
    4290:	ldr	r1, [r5, r8]
    4294:	mov	r2, #8
    4298:	mov	r3, #0
    429c:	ldr	r0, [r1, #160]	; 0xa0
    42a0:	bl	0 <coda_type_set_bit_size>
    42a4:	mov	r1, #2
    42a8:	mov	r0, #7
    42ac:	ldr	r4, [r5, r8]
    42b0:	bl	0 <coda_type_number_new>
    42b4:	ldr	r3, [r5, r8]
    42b8:	mov	r1, #1
    42bc:	str	r0, [r4, #164]	; 0xa4
    42c0:	ldr	r0, [r3, #164]	; 0xa4
    42c4:	bl	0 <coda_type_number_set_endianness>
    42c8:	ldr	r3, [r5, r8]
    42cc:	mov	r1, #5
    42d0:	ldr	r0, [r3, #164]	; 0xa4
    42d4:	bl	0 <coda_type_set_read_type>
    42d8:	ldr	r1, [r5, r8]
    42dc:	mov	r2, #32
    42e0:	mov	r3, #0
    42e4:	ldr	r0, [r1, #164]	; 0xa4
    42e8:	bl	0 <coda_type_set_bit_size>
    42ec:	mov	r1, #2
    42f0:	mov	r0, #7
    42f4:	ldr	r4, [r5, r8]
    42f8:	bl	0 <coda_type_number_new>
    42fc:	ldr	r3, [r5, r8]
    4300:	mov	r1, #1
    4304:	str	r0, [r4, #168]	; 0xa8
    4308:	ldr	r0, [r3, #168]	; 0xa8
    430c:	bl	0 <coda_type_number_set_endianness>
    4310:	ldr	r3, [r5, r8]
    4314:	mov	r1, #3
    4318:	ldr	r0, [r3, #168]	; 0xa8
    431c:	bl	0 <coda_type_set_read_type>
    4320:	ldr	r1, [r5, r8]
    4324:	mov	r2, #16
    4328:	mov	r3, #0
    432c:	ldr	r0, [r1, #168]	; 0xa8
    4330:	bl	0 <coda_type_set_bit_size>
    4334:	ldr	r3, [r5, r8]
    4338:	movw	r1, #0
    433c:	movt	r1, #0
    4340:	ldr	r0, [r3, #168]	; 0xa8
    4344:	bl	0 <coda_type_set_description>
    4348:	mov	r1, #2
    434c:	mov	r0, #7
    4350:	ldr	r4, [r5, r8]
    4354:	bl	0 <coda_type_number_new>
    4358:	ldr	r3, [r5, r8]
    435c:	mov	r1, #1
    4360:	str	r0, [r4, #172]	; 0xac
    4364:	ldr	r0, [r3, #172]	; 0xac
    4368:	bl	0 <coda_type_number_set_endianness>
    436c:	ldr	r3, [r5, r8]
    4370:	mov	r1, #3
    4374:	ldr	r0, [r3, #172]	; 0xac
    4378:	bl	0 <coda_type_set_read_type>
    437c:	ldr	r1, [r5, r8]
    4380:	mov	r2, #16
    4384:	mov	r3, #0
    4388:	ldr	r0, [r1, #172]	; 0xac
    438c:	bl	0 <coda_type_set_bit_size>
    4390:	ldr	r3, [r5, r8]
    4394:	movw	r1, #0
    4398:	movt	r1, #0
    439c:	ldr	r0, [r3, #172]	; 0xac
    43a0:	bl	0 <coda_type_set_description>
    43a4:	mov	r1, #2
    43a8:	mov	r0, #7
    43ac:	ldr	r4, [r5, r8]
    43b0:	bl	0 <coda_type_number_new>
    43b4:	ldr	r3, [r5, r8]
    43b8:	mov	r1, #1
    43bc:	str	r0, [r4, #176]	; 0xb0
    43c0:	ldr	r0, [r3, #176]	; 0xb0
    43c4:	bl	0 <coda_type_number_set_endianness>
    43c8:	ldr	r3, [r5, r8]
    43cc:	mov	r1, #5
    43d0:	ldr	r0, [r3, #176]	; 0xb0
    43d4:	bl	0 <coda_type_set_read_type>
    43d8:	ldr	r1, [r5, r8]
    43dc:	mov	r2, #32
    43e0:	mov	r3, #0
    43e4:	ldr	r0, [r1, #176]	; 0xb0
    43e8:	bl	0 <coda_type_set_bit_size>
    43ec:	mov	r1, #2
    43f0:	mov	r0, #7
    43f4:	ldr	r4, [r5, r8]
    43f8:	bl	0 <coda_type_number_new>
    43fc:	ldr	r3, [r5, r8]
    4400:	mov	r1, #1
    4404:	str	r0, [r4, #180]	; 0xb4
    4408:	ldr	r0, [r3, #180]	; 0xb4
    440c:	bl	0 <coda_type_number_set_endianness>
    4410:	ldr	r3, [r5, r8]
    4414:	mov	r1, #5
    4418:	ldr	r0, [r3, #180]	; 0xb4
    441c:	bl	0 <coda_type_set_read_type>
    4420:	ldr	r1, [r5, r8]
    4424:	mov	r2, #32
    4428:	mov	r3, #0
    442c:	ldr	r0, [r1, #180]	; 0xb4
    4430:	bl	0 <coda_type_set_bit_size>
    4434:	mov	r1, #2
    4438:	mov	r0, #7
    443c:	ldr	r4, [r5, r8]
    4440:	bl	0 <coda_type_number_new>
    4444:	ldr	r3, [r5, r8]
    4448:	mov	r1, #1
    444c:	str	r0, [r4, #184]	; 0xb8
    4450:	ldr	r0, [r3, #184]	; 0xb8
    4454:	bl	0 <coda_type_number_set_endianness>
    4458:	ldr	r3, [r5, r8]
    445c:	mov	r1, #4
    4460:	ldr	r0, [r3, #184]	; 0xb8
    4464:	bl	0 <coda_type_set_read_type>
    4468:	ldr	r1, [r5, r8]
    446c:	mov	r2, #32
    4470:	mov	r3, #0
    4474:	ldr	r0, [r1, #184]	; 0xb8
    4478:	bl	0 <coda_type_set_bit_size>
    447c:	ldr	r3, [r5, r8]
    4480:	movw	r1, #0
    4484:	movt	r1, #0
    4488:	ldr	r0, [r3, #184]	; 0xb8
    448c:	bl	0 <coda_type_set_description>
    4490:	mov	r1, #2
    4494:	mov	r0, #7
    4498:	ldr	r4, [r5, r8]
    449c:	bl	0 <coda_type_number_new>
    44a0:	ldr	r3, [r5, r8]
    44a4:	mov	r1, #1
    44a8:	str	r0, [r4, #188]	; 0xbc
    44ac:	ldr	r0, [r3, #188]	; 0xbc
    44b0:	bl	0 <coda_type_number_set_endianness>
    44b4:	ldr	r3, [r5, r8]
    44b8:	mov	r1, #4
    44bc:	ldr	r0, [r3, #188]	; 0xbc
    44c0:	bl	0 <coda_type_set_read_type>
    44c4:	ldr	r1, [r5, r8]
    44c8:	mov	r2, #32
    44cc:	mov	r3, #0
    44d0:	ldr	r0, [r1, #188]	; 0xbc
    44d4:	bl	0 <coda_type_set_bit_size>
    44d8:	ldr	r3, [r5, r8]
    44dc:	movw	r1, #0
    44e0:	movt	r1, #0
    44e4:	ldr	r0, [r3, #188]	; 0xbc
    44e8:	bl	0 <coda_type_set_description>
    44ec:	mov	r1, #2
    44f0:	mov	r0, #7
    44f4:	ldr	r4, [r5, r8]
    44f8:	bl	0 <coda_type_number_new>
    44fc:	ldr	r3, [r5, r8]
    4500:	mov	r1, #1
    4504:	str	r0, [r4, #192]	; 0xc0
    4508:	ldr	r0, [r3, #192]	; 0xc0
    450c:	bl	0 <coda_type_number_set_endianness>
    4510:	ldr	r3, [r5, r8]
    4514:	mov	r1, #1
    4518:	ldr	r0, [r3, #192]	; 0xc0
    451c:	bl	0 <coda_type_set_read_type>
    4520:	ldr	r1, [r5, r8]
    4524:	mov	r2, #8
    4528:	mov	r3, #0
    452c:	ldr	r0, [r1, #192]	; 0xc0
    4530:	bl	0 <coda_type_set_bit_size>
    4534:	ldr	r3, [r5, r8]
    4538:	movw	r1, #0
    453c:	movt	r1, #0
    4540:	ldr	r0, [r3, #192]	; 0xc0
    4544:	bl	0 <coda_type_set_description>
    4548:	mov	r1, #2
    454c:	mov	r0, #7
    4550:	ldr	r4, [r5, r8]
    4554:	bl	0 <coda_type_number_new>
    4558:	ldr	r3, [r5, r8]
    455c:	mov	r1, #1
    4560:	str	r0, [r4, #196]	; 0xc4
    4564:	ldr	r0, [r3, #196]	; 0xc4
    4568:	bl	0 <coda_type_number_set_endianness>
    456c:	ldr	r3, [r5, r8]
    4570:	mov	r1, #4
    4574:	ldr	r0, [r3, #196]	; 0xc4
    4578:	bl	0 <coda_type_set_read_type>
    457c:	ldr	r1, [r5, r8]
    4580:	mov	r2, #32
    4584:	mov	r3, #0
    4588:	ldr	r0, [r1, #196]	; 0xc4
    458c:	bl	0 <coda_type_set_bit_size>
    4590:	ldr	r3, [r5, r8]
    4594:	movw	r1, #0
    4598:	movt	r1, #0
    459c:	ldr	r0, [r3, #196]	; 0xc4
    45a0:	bl	0 <coda_type_set_description>
    45a4:	mov	r1, #2
    45a8:	mov	r0, #7
    45ac:	ldr	r4, [r5, r8]
    45b0:	bl	0 <coda_type_number_new>
    45b4:	ldr	r3, [r5, r8]
    45b8:	mov	r1, #1
    45bc:	str	r0, [r4, #200]	; 0xc8
    45c0:	ldr	r0, [r3, #200]	; 0xc8
    45c4:	bl	0 <coda_type_number_set_endianness>
    45c8:	ldr	r3, [r5, r8]
    45cc:	mov	r1, #4
    45d0:	ldr	r0, [r3, #200]	; 0xc8
    45d4:	bl	0 <coda_type_set_read_type>
    45d8:	ldr	r1, [r5, r8]
    45dc:	mov	r2, #32
    45e0:	mov	r3, #0
    45e4:	ldr	r0, [r1, #200]	; 0xc8
    45e8:	bl	0 <coda_type_set_bit_size>
    45ec:	ldr	r3, [r5, r8]
    45f0:	movw	r1, #0
    45f4:	movt	r1, #0
    45f8:	ldr	r0, [r3, #200]	; 0xc8
    45fc:	bl	0 <coda_type_set_description>
    4600:	mov	r1, #2
    4604:	mov	r0, #7
    4608:	ldr	r4, [r5, r8]
    460c:	bl	0 <coda_type_number_new>
    4610:	ldr	r3, [r5, r8]
    4614:	mov	r1, #1
    4618:	str	r0, [r4, #204]	; 0xcc
    461c:	ldr	r0, [r3, #204]	; 0xcc
    4620:	bl	0 <coda_type_number_set_endianness>
    4624:	ldr	r3, [r5, r8]
    4628:	mov	r1, #3
    462c:	ldr	r0, [r3, #204]	; 0xcc
    4630:	bl	0 <coda_type_set_read_type>
    4634:	ldr	r1, [r5, r8]
    4638:	mov	r2, #16
    463c:	mov	r3, #0
    4640:	ldr	r0, [r1, #204]	; 0xcc
    4644:	bl	0 <coda_type_set_bit_size>
    4648:	ldr	r3, [r5, r8]
    464c:	movw	r1, #0
    4650:	movt	r1, #0
    4654:	ldr	r0, [r3, #204]	; 0xcc
    4658:	bl	0 <coda_type_set_description>
    465c:	mov	r1, #2
    4660:	mov	r0, #7
    4664:	ldr	r4, [r5, r8]
    4668:	bl	0 <coda_type_number_new>
    466c:	ldr	r3, [r5, r8]
    4670:	mov	r1, #1
    4674:	str	r0, [r4, #208]	; 0xd0
    4678:	ldr	r0, [r3, #208]	; 0xd0
    467c:	bl	0 <coda_type_number_set_endianness>
    4680:	ldr	r3, [r5, r8]
    4684:	mov	r1, #3
    4688:	ldr	r0, [r3, #208]	; 0xd0
    468c:	bl	0 <coda_type_set_read_type>
    4690:	ldr	r1, [r5, r8]
    4694:	mov	r2, #16
    4698:	mov	r3, #0
    469c:	ldr	r0, [r1, #208]	; 0xd0
    46a0:	bl	0 <coda_type_set_bit_size>
    46a4:	ldr	r3, [r5, r8]
    46a8:	movw	r1, #0
    46ac:	movt	r1, #0
    46b0:	ldr	r0, [r3, #208]	; 0xd0
    46b4:	bl	0 <coda_type_set_description>
    46b8:	mov	r1, #2
    46bc:	mov	r0, #7
    46c0:	ldr	r4, [r5, r8]
    46c4:	bl	0 <coda_type_number_new>
    46c8:	ldr	r3, [r5, r8]
    46cc:	mov	r1, #1
    46d0:	str	r0, [r4, #212]	; 0xd4
    46d4:	ldr	r0, [r3, #212]	; 0xd4
    46d8:	bl	0 <coda_type_number_set_endianness>
    46dc:	ldr	r3, [r5, r8]
    46e0:	mov	r1, #3
    46e4:	ldr	r0, [r3, #212]	; 0xd4
    46e8:	bl	0 <coda_type_set_read_type>
    46ec:	ldr	r1, [r5, r8]
    46f0:	mov	r2, #16
    46f4:	mov	r3, #0
    46f8:	ldr	r0, [r1, #212]	; 0xd4
    46fc:	bl	0 <coda_type_set_bit_size>
    4700:	ldr	r3, [r5, r8]
    4704:	movw	r1, #0
    4708:	movt	r1, #0
    470c:	ldr	r0, [r3, #212]	; 0xd4
    4710:	bl	0 <coda_type_set_description>
    4714:	mov	r1, #2
    4718:	mov	r0, #7
    471c:	ldr	r4, [r5, r8]
    4720:	bl	0 <coda_type_number_new>
    4724:	ldr	r3, [r5, r8]
    4728:	mov	r1, #1
    472c:	str	r0, [r4, #216]	; 0xd8
    4730:	ldr	r0, [r3, #216]	; 0xd8
    4734:	bl	0 <coda_type_number_set_endianness>
    4738:	ldr	r3, [r5, r8]
    473c:	mov	r1, #1
    4740:	ldr	r0, [r3, #216]	; 0xd8
    4744:	bl	0 <coda_type_set_read_type>
    4748:	ldr	r1, [r5, r8]
    474c:	mov	r2, #8
    4750:	mov	r3, #0
    4754:	ldr	r0, [r1, #216]	; 0xd8
    4758:	bl	0 <coda_type_set_bit_size>
    475c:	ldr	r3, [r5, r8]
    4760:	movw	r1, #0
    4764:	movt	r1, #0
    4768:	ldr	r0, [r3, #216]	; 0xd8
    476c:	bl	0 <coda_type_set_description>
    4770:	mov	r1, #3
    4774:	mov	r0, #7
    4778:	ldr	r4, [r5, r8]
    477c:	bl	0 <coda_type_number_new>
    4780:	ldr	r3, [r5, r8]
    4784:	mov	r1, #1
    4788:	str	r0, [r4, #220]	; 0xdc
    478c:	ldr	r0, [r3, #220]	; 0xdc
    4790:	bl	0 <coda_type_number_set_endianness>
    4794:	ldr	r3, [r5, r8]
    4798:	mov	r1, #8
    479c:	ldr	r0, [r3, #220]	; 0xdc
    47a0:	bl	0 <coda_type_set_read_type>
    47a4:	ldr	r1, [r5, r8]
    47a8:	mov	r2, #32
    47ac:	mov	r3, #0
    47b0:	ldr	r0, [r1, #220]	; 0xdc
    47b4:	bl	0 <coda_type_set_bit_size>
    47b8:	mov	r0, #7
    47bc:	ldr	r4, [r5, r8]
    47c0:	bl	0 <coda_type_array_new>
    47c4:	ldr	r3, [r5, r8]
    47c8:	movw	r1, #0
    47cc:	movt	r1, #0
    47d0:	str	r0, [r4, #224]	; 0xe0
    47d4:	ldr	r0, [r3, #224]	; 0xe0
    47d8:	bl	0 <coda_type_set_description>
    47dc:	ldr	r3, [r5, r8]
    47e0:	ldr	r1, [r3, #220]	; 0xdc
    47e4:	ldr	r0, [r3, #224]	; 0xe0
    47e8:	bl	0 <coda_type_array_set_base_type>
    47ec:	ldr	r3, [r5, r8]
    47f0:	mov	r1, #0
    47f4:	ldr	r0, [r3, #224]	; 0xe0
    47f8:	bl	0 <coda_type_array_add_variable_dimension>
    47fc:	mov	r1, #2
    4800:	mov	r0, #7
    4804:	ldr	r4, [r5, r8]
    4808:	bl	0 <coda_type_number_new>
    480c:	ldr	r3, [r5, r8]
    4810:	mov	r1, #1
    4814:	str	r0, [r4, #228]	; 0xe4
    4818:	ldr	r0, [r3, #228]	; 0xe4
    481c:	bl	0 <coda_type_number_set_endianness>
    4820:	ldr	r3, [r5, r8]
    4824:	mov	r1, #3
    4828:	ldr	r0, [r3, #228]	; 0xe4
    482c:	bl	0 <coda_type_set_read_type>
    4830:	ldr	r1, [r5, r8]
    4834:	mov	r2, #16
    4838:	mov	r3, #0
    483c:	ldr	r0, [r1, #228]	; 0xe4
    4840:	bl	0 <coda_type_set_bit_size>
    4844:	mov	r0, #7
    4848:	ldr	r4, [r5, r8]
    484c:	bl	0 <coda_type_array_new>
    4850:	ldr	r3, [r5, r8]
    4854:	movw	r1, #0
    4858:	movt	r1, #0
    485c:	str	r0, [r4, #232]	; 0xe8
    4860:	ldr	r0, [r3, #232]	; 0xe8
    4864:	bl	0 <coda_type_set_description>
    4868:	ldr	r3, [r5, r8]
    486c:	ldr	r1, [r3, #228]	; 0xe4
    4870:	ldr	r0, [r3, #232]	; 0xe8
    4874:	bl	0 <coda_type_array_set_base_type>
    4878:	ldr	r3, [r5, r8]
    487c:	mov	r1, #0
    4880:	ldr	r0, [r3, #232]	; 0xe8
    4884:	bl	0 <coda_type_array_add_variable_dimension>
    4888:	mov	r1, #2
    488c:	mov	r0, #7
    4890:	ldr	r4, [r5, r8]
    4894:	bl	0 <coda_type_number_new>
    4898:	ldr	r3, [r5, r8]
    489c:	mov	r1, #1
    48a0:	str	r0, [r4, #236]	; 0xec
    48a4:	ldr	r0, [r3, #236]	; 0xec
    48a8:	bl	0 <coda_type_number_set_endianness>
    48ac:	ldr	r3, [r5, r8]
    48b0:	mov	r1, #1
    48b4:	ldr	r0, [r3, #236]	; 0xec
    48b8:	bl	0 <coda_type_set_read_type>
    48bc:	ldr	r1, [r5, r8]
    48c0:	mov	r2, #8
    48c4:	mov	r3, #0
    48c8:	ldr	r0, [r1, #236]	; 0xec
    48cc:	bl	0 <coda_type_set_bit_size>
    48d0:	ldr	r3, [r5, r8]
    48d4:	movw	r1, #0
    48d8:	movt	r1, #0
    48dc:	ldr	r0, [r3, #236]	; 0xec
    48e0:	bl	0 <coda_type_set_description>
    48e4:	mov	r1, #2
    48e8:	mov	r0, #7
    48ec:	ldr	r4, [r5, r8]
    48f0:	bl	0 <coda_type_number_new>
    48f4:	ldr	r3, [r5, r8]
    48f8:	mov	r1, #1
    48fc:	str	r0, [r4, #240]	; 0xf0
    4900:	ldr	r0, [r3, #240]	; 0xf0
    4904:	bl	0 <coda_type_number_set_endianness>
    4908:	ldr	r3, [r5, r8]
    490c:	mov	r1, #5
    4910:	ldr	r0, [r3, #240]	; 0xf0
    4914:	bl	0 <coda_type_set_read_type>
    4918:	ldr	r1, [r5, r8]
    491c:	mov	r2, #32
    4920:	mov	r3, #0
    4924:	ldr	r0, [r1, #240]	; 0xf0
    4928:	bl	0 <coda_type_set_bit_size>
    492c:	ldr	r3, [r5, r8]
    4930:	movw	r1, #0
    4934:	movt	r1, #0
    4938:	ldr	r0, [r3, #240]	; 0xf0
    493c:	bl	0 <coda_type_set_description>
    4940:	mov	r1, #2
    4944:	mov	r0, #7
    4948:	ldr	r4, [r5, r8]
    494c:	bl	0 <coda_type_number_new>
    4950:	ldr	r3, [r5, r8]
    4954:	mov	r1, #1
    4958:	str	r0, [r4, #244]	; 0xf4
    495c:	ldr	r0, [r3, #244]	; 0xf4
    4960:	bl	0 <coda_type_number_set_endianness>
    4964:	ldr	r3, [r5, r8]
    4968:	mov	r1, #3
    496c:	ldr	r0, [r3, #244]	; 0xf4
    4970:	bl	0 <coda_type_set_read_type>
    4974:	ldr	r1, [r5, r8]
    4978:	mov	r2, #16
    497c:	mov	r3, #0
    4980:	ldr	r0, [r1, #244]	; 0xf4
    4984:	bl	0 <coda_type_set_bit_size>
    4988:	ldr	r3, [r5, r8]
    498c:	movw	r1, #0
    4990:	movt	r1, #0
    4994:	ldr	r0, [r3, #244]	; 0xf4
    4998:	bl	0 <coda_type_set_description>
    499c:	mov	r1, #2
    49a0:	mov	r0, #7
    49a4:	ldr	r4, [r5, r8]
    49a8:	bl	0 <coda_type_number_new>
    49ac:	ldr	r3, [r5, r8]
    49b0:	mov	r1, #1
    49b4:	str	r0, [r4, #248]	; 0xf8
    49b8:	ldr	r0, [r3, #248]	; 0xf8
    49bc:	bl	0 <coda_type_number_set_endianness>
    49c0:	ldr	r3, [r5, r8]
    49c4:	mov	r1, #1
    49c8:	ldr	r0, [r3, #248]	; 0xf8
    49cc:	bl	0 <coda_type_set_read_type>
    49d0:	ldr	r1, [r5, r8]
    49d4:	mov	r2, #8
    49d8:	mov	r3, #0
    49dc:	ldr	r0, [r1, #248]	; 0xf8
    49e0:	bl	0 <coda_type_set_bit_size>
    49e4:	ldr	r3, [r5, r8]
    49e8:	movw	r1, #0
    49ec:	movt	r1, #0
    49f0:	ldr	r0, [r3, #248]	; 0xf8
    49f4:	bl	0 <coda_type_set_description>
    49f8:	mov	r1, #2
    49fc:	mov	r0, #7
    4a00:	ldr	r4, [r5, r8]
    4a04:	bl	0 <coda_type_number_new>
    4a08:	ldr	r3, [r5, r8]
    4a0c:	mov	r1, #1
    4a10:	str	r0, [r4, #252]	; 0xfc
    4a14:	ldr	r0, [r3, #252]	; 0xfc
    4a18:	bl	0 <coda_type_number_set_endianness>
    4a1c:	ldr	r3, [r5, r8]
    4a20:	mov	r1, #2
    4a24:	ldr	r0, [r3, #252]	; 0xfc
    4a28:	bl	0 <coda_type_set_read_type>
    4a2c:	ldr	r1, [r5, r8]
    4a30:	mov	r2, #16
    4a34:	mov	r3, #0
    4a38:	ldr	r0, [r1, #252]	; 0xfc
    4a3c:	bl	0 <coda_type_set_bit_size>
    4a40:	ldr	r3, [r5, r8]
    4a44:	movw	r1, #0
    4a48:	movt	r1, #0
    4a4c:	ldr	r0, [r3, #252]	; 0xfc
    4a50:	bl	0 <coda_type_set_description>
    4a54:	mov	r1, #3
    4a58:	mov	r0, #7
    4a5c:	ldr	r4, [r5, r8]
    4a60:	bl	0 <coda_type_number_new>
    4a64:	ldr	r3, [r5, r8]
    4a68:	mov	r1, #1
    4a6c:	str	r0, [r4, #256]	; 0x100
    4a70:	ldr	r0, [r3, #256]	; 0x100
    4a74:	bl	0 <coda_type_number_set_endianness>
    4a78:	ldr	r3, [r5, r8]
    4a7c:	mov	r1, #8
    4a80:	ldr	r0, [r3, #256]	; 0x100
    4a84:	bl	0 <coda_type_set_read_type>
    4a88:	ldr	r1, [r5, r8]
    4a8c:	mov	r2, #32
    4a90:	mov	r3, #0
    4a94:	ldr	r0, [r1, #256]	; 0x100
    4a98:	bl	0 <coda_type_set_bit_size>
    4a9c:	ldr	r3, [r5, r8]
    4aa0:	movw	r1, #0
    4aa4:	movt	r1, #0
    4aa8:	ldr	r0, [r3, #256]	; 0x100
    4aac:	bl	0 <coda_type_set_description>
    4ab0:	ldr	r4, [r5, r8]
    4ab4:	mov	r0, #7
    4ab8:	bl	0 <coda_type_array_new>
    4abc:	mov	r1, #3
    4ac0:	str	r0, [r4, #260]	; 0x104
    4ac4:	mov	r0, #7
    4ac8:	bl	0 <coda_type_number_new>
    4acc:	mov	r4, r0
    4ad0:	mov	r1, #1
    4ad4:	bl	0 <coda_type_number_set_endianness>
    4ad8:	mov	r1, #8
    4adc:	mov	r0, r4
    4ae0:	bl	0 <coda_type_set_read_type>
    4ae4:	mov	r2, #32
    4ae8:	mov	r0, r4
    4aec:	mov	r3, #0
    4af0:	bl	0 <coda_type_set_bit_size>
    4af4:	ldr	r3, [r5, r8]
    4af8:	mov	r1, r4
    4afc:	ldr	r0, [r3, #260]	; 0x104
    4b00:	bl	0 <coda_type_array_set_base_type>
    4b04:	mov	r0, r4
    4b08:	bl	0 <coda_type_release>
    4b0c:	ldr	r3, [r5, r8]
    4b10:	mov	r1, #0
    4b14:	ldr	r0, [r3, #260]	; 0x104
    4b18:	bl	0 <coda_type_array_add_variable_dimension>
    4b1c:	ldr	r4, [r5, r8]
    4b20:	mov	r0, #7
    4b24:	bl	0 <coda_type_record_new>
    4b28:	str	r0, [r4, #264]	; 0x108
    4b2c:	movw	r0, #0
    4b30:	movt	r0, #0
    4b34:	bl	0 <coda_type_record_field_new>
    4b38:	ldr	r3, [r5, r8]
    4b3c:	mov	r4, r0
    4b40:	ldr	r1, [r3, #132]	; 0x84
    4b44:	bl	0 <coda_type_record_field_set_type>
    4b48:	ldr	r3, [r5, r8]
    4b4c:	mov	r1, r4
    4b50:	ldr	r0, [r3, #264]	; 0x108
    4b54:	bl	0 <coda_type_record_add_field>
    4b58:	movw	r0, #0
    4b5c:	movt	r0, #0
    4b60:	bl	0 <coda_type_record_field_new>
    4b64:	ldr	r3, [r5, r8]
    4b68:	mov	r4, r0
    4b6c:	ldr	r1, [r3, #136]	; 0x88
    4b70:	bl	0 <coda_type_record_field_set_type>
    4b74:	ldr	r3, [r5, r8]
    4b78:	mov	r1, r4
    4b7c:	ldr	r0, [r3, #264]	; 0x108
    4b80:	bl	0 <coda_type_record_add_field>
    4b84:	movw	r0, #0
    4b88:	movt	r0, #0
    4b8c:	bl	0 <coda_type_record_field_new>
    4b90:	ldr	r3, [r5, r8]
    4b94:	mov	r4, r0
    4b98:	ldr	r1, [r3, #168]	; 0xa8
    4b9c:	bl	0 <coda_type_record_field_set_type>
    4ba0:	ldr	r3, [r5, r8]
    4ba4:	mov	r1, r4
    4ba8:	ldr	r0, [r3, #264]	; 0x108
    4bac:	bl	0 <coda_type_record_add_field>
    4bb0:	movw	r0, #0
    4bb4:	movt	r0, #0
    4bb8:	bl	0 <coda_type_record_field_new>
    4bbc:	ldr	r3, [r5, r8]
    4bc0:	mov	r4, r0
    4bc4:	ldr	r1, [r3, #172]	; 0xac
    4bc8:	bl	0 <coda_type_record_field_set_type>
    4bcc:	ldr	r3, [r5, r8]
    4bd0:	mov	r1, r4
    4bd4:	ldr	r0, [r3, #264]	; 0x108
    4bd8:	bl	0 <coda_type_record_add_field>
    4bdc:	movw	r0, #0
    4be0:	movt	r0, #0
    4be4:	bl	0 <coda_type_record_field_new>
    4be8:	ldr	r3, [r5, r8]
    4bec:	mov	r4, r0
    4bf0:	ldr	r1, [r3, #184]	; 0xb8
    4bf4:	bl	0 <coda_type_record_field_set_type>
    4bf8:	ldr	r3, [r5, r8]
    4bfc:	mov	r1, r4
    4c00:	ldr	r0, [r3, #264]	; 0x108
    4c04:	bl	0 <coda_type_record_add_field>
    4c08:	movw	r0, #0
    4c0c:	movt	r0, #0
    4c10:	bl	0 <coda_type_record_field_new>
    4c14:	ldr	r3, [r5, r8]
    4c18:	mov	r4, r0
    4c1c:	ldr	r1, [r3, #188]	; 0xbc
    4c20:	bl	0 <coda_type_record_field_set_type>
    4c24:	ldr	r3, [r5, r8]
    4c28:	mov	r1, r4
    4c2c:	ldr	r0, [r3, #264]	; 0x108
    4c30:	bl	0 <coda_type_record_add_field>
    4c34:	movw	r0, #0
    4c38:	movt	r0, #0
    4c3c:	bl	0 <coda_type_record_field_new>
    4c40:	ldr	r3, [r5, r8]
    4c44:	mov	r4, r0
    4c48:	ldr	r1, [r3, #192]	; 0xc0
    4c4c:	bl	0 <coda_type_record_field_set_type>
    4c50:	ldr	r3, [r5, r8]
    4c54:	mov	r1, r4
    4c58:	ldr	r0, [r3, #264]	; 0x108
    4c5c:	bl	0 <coda_type_record_add_field>
    4c60:	movw	r0, #0
    4c64:	movt	r0, #0
    4c68:	bl	0 <coda_type_record_field_new>
    4c6c:	ldr	r3, [r5, r8]
    4c70:	mov	r4, r0
    4c74:	ldr	r1, [r3, #196]	; 0xc4
    4c78:	bl	0 <coda_type_record_field_set_type>
    4c7c:	ldr	r3, [r5, r8]
    4c80:	mov	r1, r4
    4c84:	ldr	r0, [r3, #264]	; 0x108
    4c88:	bl	0 <coda_type_record_add_field>
    4c8c:	movw	r0, #0
    4c90:	movt	r0, #0
    4c94:	bl	0 <coda_type_record_field_new>
    4c98:	ldr	r3, [r5, r8]
    4c9c:	mov	r4, r0
    4ca0:	ldr	r1, [r3, #200]	; 0xc8
    4ca4:	bl	0 <coda_type_record_field_set_type>
    4ca8:	ldr	r3, [r5, r8]
    4cac:	mov	r1, r4
    4cb0:	ldr	r0, [r3, #264]	; 0x108
    4cb4:	bl	0 <coda_type_record_add_field>
    4cb8:	movw	r0, #0
    4cbc:	movt	r0, #0
    4cc0:	bl	0 <coda_type_record_field_new>
    4cc4:	ldr	r3, [r5, r8]
    4cc8:	mov	r4, r0
    4ccc:	ldr	r1, [r3, #204]	; 0xcc
    4cd0:	bl	0 <coda_type_record_field_set_type>
    4cd4:	ldr	r3, [r5, r8]
    4cd8:	mov	r1, r4
    4cdc:	ldr	r0, [r3, #264]	; 0x108
    4ce0:	bl	0 <coda_type_record_add_field>
    4ce4:	movw	r0, #0
    4ce8:	movt	r0, #0
    4cec:	bl	0 <coda_type_record_field_new>
    4cf0:	ldr	r3, [r5, r8]
    4cf4:	mov	r4, r0
    4cf8:	ldr	r1, [r3, #208]	; 0xd0
    4cfc:	bl	0 <coda_type_record_field_set_type>
    4d00:	mov	r0, r4
    4d04:	bl	0 <coda_type_record_field_set_optional>
    4d08:	ldr	r3, [r5, r8]
    4d0c:	mov	r1, r4
    4d10:	ldr	r0, [r3, #264]	; 0x108
    4d14:	bl	0 <coda_type_record_add_field>
    4d18:	movw	r0, #0
    4d1c:	movt	r0, #0
    4d20:	bl	0 <coda_type_record_field_new>
    4d24:	ldr	r3, [r5, r8]
    4d28:	mov	r4, r0
    4d2c:	ldr	r1, [r3, #212]	; 0xd4
    4d30:	bl	0 <coda_type_record_field_set_type>
    4d34:	mov	r0, r4
    4d38:	bl	0 <coda_type_record_field_set_optional>
    4d3c:	ldr	r3, [r5, r8]
    4d40:	mov	r1, r4
    4d44:	ldr	r0, [r3, #264]	; 0x108
    4d48:	bl	0 <coda_type_record_add_field>
    4d4c:	movw	r0, #0
    4d50:	movt	r0, #0
    4d54:	bl	0 <coda_type_record_field_new>
    4d58:	ldr	r3, [r5, r8]
    4d5c:	mov	r4, r0
    4d60:	ldr	r1, [r3, #216]	; 0xd8
    4d64:	bl	0 <coda_type_record_field_set_type>
    4d68:	ldr	r3, [r5, r8]
    4d6c:	mov	r1, r4
    4d70:	ldr	r0, [r3, #264]	; 0x108
    4d74:	bl	0 <coda_type_record_add_field>
    4d78:	movw	r0, #0
    4d7c:	movt	r0, #0
    4d80:	bl	0 <coda_type_record_field_new>
    4d84:	ldr	r3, [r5, r8]
    4d88:	mov	r4, r0
    4d8c:	ldr	r1, [r3, #224]	; 0xe0
    4d90:	bl	0 <coda_type_record_field_set_type>
    4d94:	mov	r0, r4
    4d98:	bl	0 <coda_type_record_field_set_optional>
    4d9c:	ldr	r3, [r5, r8]
    4da0:	mov	r1, r4
    4da4:	ldr	r0, [r3, #264]	; 0x108
    4da8:	bl	0 <coda_type_record_add_field>
    4dac:	movw	r0, #0
    4db0:	movt	r0, #0
    4db4:	bl	0 <coda_type_record_field_new>
    4db8:	ldr	r3, [r5, r8]
    4dbc:	mov	r4, r0
    4dc0:	ldr	r1, [r3, #232]	; 0xe8
    4dc4:	bl	0 <coda_type_record_field_set_type>
    4dc8:	mov	r0, r4
    4dcc:	bl	0 <coda_type_record_field_set_optional>
    4dd0:	ldr	r3, [r5, r8]
    4dd4:	mov	r1, r4
    4dd8:	ldr	r0, [r3, #264]	; 0x108
    4ddc:	bl	0 <coda_type_record_add_field>
    4de0:	ldr	r4, [r5, r8]
    4de4:	mov	r0, #7
    4de8:	bl	0 <coda_type_record_new>
    4dec:	str	r0, [r4, #268]	; 0x10c
    4df0:	movw	r0, #0
    4df4:	movt	r0, #0
    4df8:	bl	0 <coda_type_record_field_new>
    4dfc:	ldr	r3, [r5, r8]
    4e00:	mov	r4, r0
    4e04:	ldr	r1, [r3, #248]	; 0xf8
    4e08:	bl	0 <coda_type_record_field_set_type>
    4e0c:	mov	r0, r4
    4e10:	bl	0 <coda_type_record_field_set_hidden>
    4e14:	ldr	r3, [r5, r8]
    4e18:	mov	r1, r4
    4e1c:	ldr	r0, [r3, #268]	; 0x10c
    4e20:	bl	0 <coda_type_record_add_field>
    4e24:	movw	r0, #0
    4e28:	movt	r0, #0
    4e2c:	bl	0 <coda_type_record_field_new>
    4e30:	ldr	r3, [r5, r8]
    4e34:	mov	r4, r0
    4e38:	ldr	r1, [r3, #252]	; 0xfc
    4e3c:	bl	0 <coda_type_record_field_set_type>
    4e40:	mov	r0, r4
    4e44:	bl	0 <coda_type_record_field_set_hidden>
    4e48:	ldr	r3, [r5, r8]
    4e4c:	mov	r1, r4
    4e50:	ldr	r0, [r3, #268]	; 0x10c
    4e54:	bl	0 <coda_type_record_add_field>
    4e58:	movw	r0, #0
    4e5c:	movt	r0, #0
    4e60:	bl	0 <coda_type_record_field_new>
    4e64:	ldr	r3, [r5, r8]
    4e68:	mov	r4, r0
    4e6c:	ldr	r1, [r3, #256]	; 0x100
    4e70:	bl	0 <coda_type_record_field_set_type>
    4e74:	mov	r0, r4
    4e78:	bl	0 <coda_type_record_field_set_hidden>
    4e7c:	ldr	r3, [r5, r8]
    4e80:	mov	r1, r4
    4e84:	ldr	r0, [r3, #268]	; 0x10c
    4e88:	bl	0 <coda_type_record_add_field>
    4e8c:	movw	r0, #0
    4e90:	movt	r0, #0
    4e94:	bl	0 <coda_type_record_field_new>
    4e98:	ldr	r3, [r5, r8]
    4e9c:	mov	r4, r0
    4ea0:	ldr	r1, [r3, #260]	; 0x104
    4ea4:	bl	0 <coda_type_record_field_set_type>
    4ea8:	ldr	r3, [r5, r8]
    4eac:	mov	r1, r4
    4eb0:	ldr	r0, [r3, #268]	; 0x10c
    4eb4:	bl	0 <coda_type_record_add_field>
    4eb8:	ldr	r4, [r5, r8]
    4ebc:	mov	r0, #7
    4ec0:	bl	0 <coda_type_record_new>
    4ec4:	str	r0, [r4, #272]	; 0x110
    4ec8:	movw	r0, #0
    4ecc:	movt	r0, #0
    4ed0:	bl	0 <coda_type_record_field_new>
    4ed4:	ldr	r3, [r5, r8]
    4ed8:	mov	r4, r0
    4edc:	ldr	r1, [r3, #12]
    4ee0:	bl	0 <coda_type_record_field_set_type>
    4ee4:	ldr	r3, [r5, r8]
    4ee8:	mov	r1, r4
    4eec:	ldr	r0, [r3, #272]	; 0x110
    4ef0:	bl	0 <coda_type_record_add_field>
    4ef4:	movw	r0, #0
    4ef8:	movt	r0, #0
    4efc:	bl	0 <coda_type_record_field_new>
    4f00:	ldr	r3, [r5, r8]
    4f04:	mov	r4, r0
    4f08:	ldr	r1, [r3, #8]
    4f0c:	bl	0 <coda_type_record_field_set_type>
    4f10:	ldr	r3, [r5, r8]
    4f14:	mov	r1, r4
    4f18:	ldr	r0, [r3, #272]	; 0x110
    4f1c:	bl	0 <coda_type_record_add_field>
    4f20:	movw	r0, #0
    4f24:	movt	r0, #0
    4f28:	bl	0 <coda_type_record_field_new>
    4f2c:	ldr	r3, [r5, r8]
    4f30:	mov	r4, r0
    4f34:	ldr	r1, [r3, #16]
    4f38:	bl	0 <coda_type_record_field_set_type>
    4f3c:	ldr	r3, [r5, r8]
    4f40:	mov	r1, r4
    4f44:	ldr	r0, [r3, #272]	; 0x110
    4f48:	bl	0 <coda_type_record_add_field>
    4f4c:	movw	r0, #0
    4f50:	movt	r0, #0
    4f54:	bl	0 <coda_type_record_field_new>
    4f58:	ldr	r3, [r5, r8]
    4f5c:	mov	r4, r0
    4f60:	ldr	r1, [r3, #20]
    4f64:	bl	0 <coda_type_record_field_set_type>
    4f68:	ldr	r3, [r5, r8]
    4f6c:	mov	r1, r4
    4f70:	ldr	r0, [r3, #272]	; 0x110
    4f74:	bl	0 <coda_type_record_add_field>
    4f78:	movw	r0, #0
    4f7c:	movt	r0, #0
    4f80:	bl	0 <coda_type_record_field_new>
    4f84:	ldr	r3, [r5, r8]
    4f88:	mov	r4, r0
    4f8c:	ldr	r1, [r3, #24]
    4f90:	bl	0 <coda_type_record_field_set_type>
    4f94:	ldr	r3, [r5, r8]
    4f98:	mov	r1, r4
    4f9c:	ldr	r0, [r3, #272]	; 0x110
    4fa0:	bl	0 <coda_type_record_add_field>
    4fa4:	movw	r0, #0
    4fa8:	movt	r0, #0
    4fac:	bl	0 <coda_type_record_field_new>
    4fb0:	ldr	r3, [r5, r8]
    4fb4:	mov	r4, r0
    4fb8:	ldr	r1, [r3, #28]
    4fbc:	bl	0 <coda_type_record_field_set_type>
    4fc0:	ldr	r3, [r5, r8]
    4fc4:	mov	r1, r4
    4fc8:	ldr	r0, [r3, #272]	; 0x110
    4fcc:	bl	0 <coda_type_record_add_field>
    4fd0:	movw	r0, #0
    4fd4:	movt	r0, #0
    4fd8:	bl	0 <coda_type_record_field_new>
    4fdc:	ldr	r3, [r5, r8]
    4fe0:	mov	r4, r0
    4fe4:	ldr	r1, [r3, #32]
    4fe8:	bl	0 <coda_type_record_field_set_type>
    4fec:	ldr	r3, [r5, r8]
    4ff0:	mov	r1, r4
    4ff4:	ldr	r0, [r3, #272]	; 0x110
    4ff8:	bl	0 <coda_type_record_add_field>
    4ffc:	movw	r0, #0
    5000:	movt	r0, #0
    5004:	bl	0 <coda_type_record_field_new>
    5008:	ldr	r3, [r5, r8]
    500c:	mov	r4, r0
    5010:	ldr	r1, [r3, #36]	; 0x24
    5014:	bl	0 <coda_type_record_field_set_type>
    5018:	ldr	r3, [r5, r8]
    501c:	mov	r1, r4
    5020:	ldr	r0, [r3, #272]	; 0x110
    5024:	bl	0 <coda_type_record_add_field>
    5028:	movw	r0, #0
    502c:	movt	r0, #0
    5030:	bl	0 <coda_type_record_field_new>
    5034:	ldr	r3, [r5, r8]
    5038:	mov	r4, r0
    503c:	ldr	r1, [r3, #40]	; 0x28
    5040:	bl	0 <coda_type_record_field_set_type>
    5044:	ldr	r3, [r5, r8]
    5048:	mov	r1, r4
    504c:	ldr	r0, [r3, #272]	; 0x110
    5050:	bl	0 <coda_type_record_add_field>
    5054:	movw	r0, #0
    5058:	movt	r0, #0
    505c:	bl	0 <coda_type_record_field_new>
    5060:	ldr	r3, [r5, r8]
    5064:	mov	r4, r0
    5068:	ldr	r1, [r3, #48]	; 0x30
    506c:	bl	0 <coda_type_record_field_set_type>
    5070:	ldr	r3, [r5, r8]
    5074:	mov	r1, r4
    5078:	ldr	r0, [r3, #272]	; 0x110
    507c:	bl	0 <coda_type_record_add_field>
    5080:	movw	r0, #0
    5084:	movt	r0, #0
    5088:	bl	0 <coda_type_record_field_new>
    508c:	ldr	r3, [r5, r8]
    5090:	mov	r4, r0
    5094:	ldr	r1, [r3, #52]	; 0x34
    5098:	bl	0 <coda_type_record_field_set_type>
    509c:	ldr	r3, [r5, r8]
    50a0:	mov	r1, r4
    50a4:	ldr	r0, [r3, #272]	; 0x110
    50a8:	bl	0 <coda_type_record_add_field>
    50ac:	movw	r0, #0
    50b0:	movt	r0, #0
    50b4:	bl	0 <coda_type_record_field_new>
    50b8:	ldr	r3, [r5, r8]
    50bc:	mov	r4, r0
    50c0:	ldr	r1, [r3, #56]	; 0x38
    50c4:	bl	0 <coda_type_record_field_set_type>
    50c8:	ldr	r3, [r5, r8]
    50cc:	mov	r1, r4
    50d0:	ldr	r0, [r3, #272]	; 0x110
    50d4:	bl	0 <coda_type_record_add_field>
    50d8:	movw	r0, #0
    50dc:	movt	r0, #0
    50e0:	bl	0 <coda_type_record_field_new>
    50e4:	ldr	r3, [r5, r8]
    50e8:	mov	r4, r0
    50ec:	ldr	r1, [r3, #60]	; 0x3c
    50f0:	bl	0 <coda_type_record_field_set_type>
    50f4:	ldr	r3, [r5, r8]
    50f8:	mov	r1, r4
    50fc:	ldr	r0, [r3, #272]	; 0x110
    5100:	bl	0 <coda_type_record_add_field>
    5104:	movw	r0, #0
    5108:	movt	r0, #0
    510c:	bl	0 <coda_type_record_field_new>
    5110:	ldr	r3, [r5, r8]
    5114:	mov	r4, r0
    5118:	ldr	r1, [r3, #68]	; 0x44
    511c:	bl	0 <coda_type_record_field_set_type>
    5120:	ldr	r3, [r5, r8]
    5124:	mov	r1, r4
    5128:	ldr	r0, [r3, #272]	; 0x110
    512c:	bl	0 <coda_type_record_add_field>
    5130:	movw	r0, #0
    5134:	movt	r0, #0
    5138:	bl	0 <coda_type_record_field_new>
    513c:	ldr	r3, [r5, r8]
    5140:	mov	r4, r0
    5144:	ldr	r1, [r3, #72]	; 0x48
    5148:	bl	0 <coda_type_record_field_set_type>
    514c:	ldr	r3, [r5, r8]
    5150:	mov	r1, r4
    5154:	ldr	r0, [r3, #272]	; 0x110
    5158:	bl	0 <coda_type_record_add_field>
    515c:	movw	r0, #0
    5160:	movt	r0, #0
    5164:	bl	0 <coda_type_record_field_new>
    5168:	ldr	r3, [r5, r8]
    516c:	mov	r4, r0
    5170:	ldr	r1, [r3, #76]	; 0x4c
    5174:	bl	0 <coda_type_record_field_set_type>
    5178:	ldr	r3, [r5, r8]
    517c:	mov	r1, r4
    5180:	ldr	r0, [r3, #272]	; 0x110
    5184:	bl	0 <coda_type_record_add_field>
    5188:	movw	r0, #0
    518c:	movt	r0, #0
    5190:	bl	0 <coda_type_record_field_new>
    5194:	ldr	r3, [r5, r8]
    5198:	mov	r4, r0
    519c:	ldr	r1, [r3, #80]	; 0x50
    51a0:	bl	0 <coda_type_record_field_set_type>
    51a4:	ldr	r3, [r5, r8]
    51a8:	mov	r1, r4
    51ac:	ldr	r0, [r3, #272]	; 0x110
    51b0:	bl	0 <coda_type_record_add_field>
    51b4:	movw	r0, #0
    51b8:	movt	r0, #0
    51bc:	bl	0 <coda_type_record_field_new>
    51c0:	ldr	r3, [r5, r8]
    51c4:	mov	r4, r0
    51c8:	ldr	r1, [r3, #84]	; 0x54
    51cc:	bl	0 <coda_type_record_field_set_type>
    51d0:	ldr	r3, [r5, r8]
    51d4:	mov	r1, r4
    51d8:	ldr	r0, [r3, #272]	; 0x110
    51dc:	bl	0 <coda_type_record_add_field>
    51e0:	movw	r0, #0
    51e4:	movt	r0, #0
    51e8:	bl	0 <coda_type_record_field_new>
    51ec:	ldr	r3, [r5, r8]
    51f0:	mov	r4, r0
    51f4:	ldr	r1, [r3, #88]	; 0x58
    51f8:	bl	0 <coda_type_record_field_set_type>
    51fc:	ldr	r3, [r5, r8]
    5200:	mov	r1, r4
    5204:	ldr	r0, [r3, #272]	; 0x110
    5208:	bl	0 <coda_type_record_add_field>
    520c:	movw	r0, #0
    5210:	movt	r0, #0
    5214:	bl	0 <coda_type_record_field_new>
    5218:	ldr	r3, [r5, r8]
    521c:	mov	r4, r0
    5220:	ldr	r1, [r3, #92]	; 0x5c
    5224:	bl	0 <coda_type_record_field_set_type>
    5228:	ldr	r3, [r5, r8]
    522c:	mov	r1, r4
    5230:	ldr	r0, [r3, #272]	; 0x110
    5234:	bl	0 <coda_type_record_add_field>
    5238:	movw	r0, #0
    523c:	movt	r0, #0
    5240:	bl	0 <coda_type_record_field_new>
    5244:	ldr	r3, [r5, r8]
    5248:	mov	r4, r0
    524c:	ldr	r1, [r3, #96]	; 0x60
    5250:	bl	0 <coda_type_record_field_set_type>
    5254:	ldr	r3, [r5, r8]
    5258:	mov	r1, r4
    525c:	ldr	r0, [r3, #272]	; 0x110
    5260:	bl	0 <coda_type_record_add_field>
    5264:	movw	r0, #0
    5268:	movt	r0, #0
    526c:	bl	0 <coda_type_record_field_new>
    5270:	ldr	r3, [r5, r8]
    5274:	mov	r4, r0
    5278:	ldr	r1, [r3, #100]	; 0x64
    527c:	bl	0 <coda_type_record_field_set_type>
    5280:	mov	r0, r4
    5284:	bl	0 <coda_type_record_field_set_hidden>
    5288:	ldr	r3, [r5, r8]
    528c:	mov	r1, r4
    5290:	ldr	r0, [r3, #272]	; 0x110
    5294:	bl	0 <coda_type_record_add_field>
    5298:	movw	r0, #0
    529c:	movt	r0, #0
    52a0:	bl	0 <coda_type_record_field_new>
    52a4:	ldr	r3, [r5, r8]
    52a8:	mov	r4, r0
    52ac:	ldr	r1, [r3, #128]	; 0x80
    52b0:	bl	0 <coda_type_record_field_set_type>
    52b4:	mov	r0, r4
    52b8:	bl	0 <coda_type_record_field_set_optional>
    52bc:	ldr	r3, [r5, r8]
    52c0:	mov	r1, r4
    52c4:	ldr	r0, [r3, #272]	; 0x110
    52c8:	bl	0 <coda_type_record_add_field>
    52cc:	movw	r0, #0
    52d0:	movt	r0, #0
    52d4:	bl	0 <coda_type_record_field_new>
    52d8:	ldr	r3, [r5, r8]
    52dc:	mov	r4, r0
    52e0:	ldr	r1, [r3, #264]	; 0x108
    52e4:	bl	0 <coda_type_record_field_set_type>
    52e8:	mov	r0, r4
    52ec:	bl	0 <coda_type_record_field_set_optional>
    52f0:	ldr	r3, [r5, r8]
    52f4:	mov	r1, r4
    52f8:	ldr	r0, [r3, #272]	; 0x110
    52fc:	bl	0 <coda_type_record_add_field>
    5300:	movw	r0, #0
    5304:	movt	r0, #0
    5308:	bl	0 <coda_type_record_field_new>
    530c:	ldr	r3, [r5, r8]
    5310:	mov	r4, r0
    5314:	ldr	r1, [r3, #268]	; 0x10c
    5318:	bl	0 <coda_type_record_field_set_type>
    531c:	ldr	r3, [r5, r8]
    5320:	mov	r1, r4
    5324:	ldr	r0, [r3, #272]	; 0x110
    5328:	bl	0 <coda_type_record_add_field>
    532c:	mov	r1, #2
    5330:	mov	r0, #7
    5334:	ldr	r4, [r5, r8]
    5338:	bl	0 <coda_type_number_new>
    533c:	ldr	r3, [r5, r8]
    5340:	mov	r1, #1
    5344:	str	r0, [r4, #276]	; 0x114
    5348:	ldr	r0, [r3, #276]	; 0x114
    534c:	bl	0 <coda_type_number_set_endianness>
    5350:	ldr	r3, [r5, r8]
    5354:	mov	r1, #4
    5358:	ldr	r0, [r3, #276]	; 0x114
    535c:	bl	0 <coda_type_set_read_type>
    5360:	ldr	r1, [r5, r8]
    5364:	mov	r2, #32
    5368:	mov	r3, #0
    536c:	ldr	r0, [r1, #276]	; 0x114
    5370:	bl	0 <coda_type_set_bit_size>
    5374:	mov	r1, #2
    5378:	mov	r0, #7
    537c:	ldr	r4, [r5, r8]
    5380:	bl	0 <coda_type_number_new>
    5384:	ldr	r3, [r5, r8]
    5388:	mov	r1, #1
    538c:	str	r0, [r4, #280]	; 0x118
    5390:	ldr	r0, [r3, #280]	; 0x118
    5394:	bl	0 <coda_type_number_set_endianness>
    5398:	ldr	r3, [r5, r8]
    539c:	mov	r1, #5
    53a0:	ldr	r0, [r3, #280]	; 0x118
    53a4:	bl	0 <coda_type_set_read_type>
    53a8:	ldr	r1, [r5, r8]
    53ac:	mov	r2, #32
    53b0:	mov	r3, #0
    53b4:	ldr	r0, [r1, #280]	; 0x118
    53b8:	bl	0 <coda_type_set_bit_size>
    53bc:	mov	r1, #2
    53c0:	mov	r0, #7
    53c4:	ldr	r4, [r5, r8]
    53c8:	bl	0 <coda_type_number_new>
    53cc:	ldr	r3, [r5, r8]
    53d0:	mov	r1, #1
    53d4:	str	r0, [r4, #284]	; 0x11c
    53d8:	ldr	r0, [r3, #284]	; 0x11c
    53dc:	bl	0 <coda_type_number_set_endianness>
    53e0:	ldr	r3, [r5, r8]
    53e4:	mov	r1, #1
    53e8:	ldr	r0, [r3, #284]	; 0x11c
    53ec:	bl	0 <coda_type_set_read_type>
    53f0:	ldr	r1, [r5, r8]
    53f4:	mov	r2, #8
    53f8:	mov	r3, #0
    53fc:	ldr	r0, [r1, #284]	; 0x11c
    5400:	bl	0 <coda_type_set_bit_size>
    5404:	ldr	r3, [r5, r8]
    5408:	movw	r1, #0
    540c:	movt	r1, #0
    5410:	ldr	r0, [r3, #284]	; 0x11c
    5414:	bl	0 <coda_type_set_description>
    5418:	mov	r1, #2
    541c:	mov	r0, #7
    5420:	ldr	r4, [r5, r8]
    5424:	bl	0 <coda_type_number_new>
    5428:	ldr	r3, [r5, r8]
    542c:	mov	r1, #1
    5430:	str	r0, [r4, #288]	; 0x120
    5434:	ldr	r0, [r3, #288]	; 0x120
    5438:	bl	0 <coda_type_number_set_endianness>
    543c:	ldr	r3, [r5, r8]
    5440:	mov	r1, #3
    5444:	ldr	r0, [r3, #288]	; 0x120
    5448:	bl	0 <coda_type_set_read_type>
    544c:	ldr	r1, [r5, r8]
    5450:	mov	r2, #16
    5454:	mov	r3, #0
    5458:	ldr	r0, [r1, #288]	; 0x120
    545c:	bl	0 <coda_type_set_bit_size>
    5460:	ldr	r3, [r5, r8]
    5464:	movw	r1, #0
    5468:	movt	r1, #0
    546c:	ldr	r0, [r3, #288]	; 0x120
    5470:	bl	0 <coda_type_set_description>
    5474:	mov	r1, #2
    5478:	mov	r0, #7
    547c:	ldr	r4, [r5, r8]
    5480:	bl	0 <coda_type_number_new>
    5484:	ldr	r3, [r5, r8]
    5488:	mov	r1, #1
    548c:	str	r0, [r4, #292]	; 0x124
    5490:	ldr	r0, [r3, #292]	; 0x124
    5494:	bl	0 <coda_type_number_set_endianness>
    5498:	ldr	r3, [r5, r8]
    549c:	mov	r1, #3
    54a0:	ldr	r0, [r3, #292]	; 0x124
    54a4:	bl	0 <coda_type_set_read_type>
    54a8:	ldr	r1, [r5, r8]
    54ac:	mov	r2, #16
    54b0:	mov	r3, #0
    54b4:	ldr	r0, [r1, #292]	; 0x124
    54b8:	bl	0 <coda_type_set_bit_size>
    54bc:	ldr	r3, [r5, r8]
    54c0:	movw	r1, #0
    54c4:	movt	r1, #0
    54c8:	ldr	r0, [r3, #292]	; 0x124
    54cc:	bl	0 <coda_type_set_description>
    54d0:	mov	r1, #2
    54d4:	mov	r0, #7
    54d8:	ldr	r4, [r5, r8]
    54dc:	bl	0 <coda_type_number_new>
    54e0:	ldr	r3, [r5, r8]
    54e4:	mov	r1, #1
    54e8:	str	r0, [r4, #296]	; 0x128
    54ec:	ldr	r0, [r3, #296]	; 0x128
    54f0:	bl	0 <coda_type_number_set_endianness>
    54f4:	ldr	r3, [r5, r8]
    54f8:	mov	r1, #1
    54fc:	ldr	r0, [r3, #296]	; 0x128
    5500:	bl	0 <coda_type_set_read_type>
    5504:	ldr	r1, [r5, r8]
    5508:	mov	r2, #8
    550c:	mov	r3, #0
    5510:	ldr	r0, [r1, #296]	; 0x128
    5514:	bl	0 <coda_type_set_bit_size>
    5518:	ldr	r3, [r5, r8]
    551c:	movw	r1, #0
    5520:	movt	r1, #0
    5524:	ldr	r0, [r3, #296]	; 0x128
    5528:	bl	0 <coda_type_set_description>
    552c:	mov	r1, #2
    5530:	mov	r0, #7
    5534:	ldr	r4, [r5, r8]
    5538:	bl	0 <coda_type_number_new>
    553c:	ldr	r3, [r5, r8]
    5540:	mov	r1, #1
    5544:	str	r0, [r4, #300]	; 0x12c
    5548:	ldr	r0, [r3, #300]	; 0x12c
    554c:	bl	0 <coda_type_number_set_endianness>
    5550:	ldr	r3, [r5, r8]
    5554:	mov	r1, #1
    5558:	ldr	r0, [r3, #300]	; 0x12c
    555c:	bl	0 <coda_type_set_read_type>
    5560:	ldr	r1, [r5, r8]
    5564:	mov	r2, #8
    5568:	mov	r3, #0
    556c:	ldr	r0, [r1, #300]	; 0x12c
    5570:	bl	0 <coda_type_set_bit_size>
    5574:	ldr	r3, [r5, r8]
    5578:	movw	r1, #0
    557c:	movt	r1, #0
    5580:	ldr	r0, [r3, #300]	; 0x12c
    5584:	bl	0 <coda_type_set_description>
    5588:	mov	r1, #2
    558c:	mov	r0, #7
    5590:	ldr	r4, [r5, r8]
    5594:	bl	0 <coda_type_number_new>
    5598:	ldr	r3, [r5, r8]
    559c:	mov	r1, #1
    55a0:	str	r0, [r4, #304]	; 0x130
    55a4:	ldr	r0, [r3, #304]	; 0x130
    55a8:	bl	0 <coda_type_number_set_endianness>
    55ac:	ldr	r3, [r5, r8]
    55b0:	mov	r1, #1
    55b4:	ldr	r0, [r3, #304]	; 0x130
    55b8:	bl	0 <coda_type_set_read_type>
    55bc:	ldr	r1, [r5, r8]
    55c0:	mov	r2, #8
    55c4:	mov	r3, #0
    55c8:	ldr	r0, [r1, #304]	; 0x130
    55cc:	bl	0 <coda_type_set_bit_size>
    55d0:	ldr	r3, [r5, r8]
    55d4:	movw	r1, #0
    55d8:	movt	r1, #0
    55dc:	ldr	r0, [r3, #304]	; 0x130
    55e0:	bl	0 <coda_type_set_description>
    55e4:	mov	r1, #2
    55e8:	mov	r0, #7
    55ec:	ldr	r4, [r5, r8]
    55f0:	bl	0 <coda_type_number_new>
    55f4:	ldr	r3, [r5, r8]
    55f8:	mov	r1, #1
    55fc:	str	r0, [r4, #308]	; 0x134
    5600:	ldr	r0, [r3, #308]	; 0x134
    5604:	bl	0 <coda_type_number_set_endianness>
    5608:	ldr	r3, [r5, r8]
    560c:	mov	r1, #1
    5610:	ldr	r0, [r3, #308]	; 0x134
    5614:	bl	0 <coda_type_set_read_type>
    5618:	ldr	r1, [r5, r8]
    561c:	mov	r2, #8
    5620:	mov	r3, #0
    5624:	ldr	r0, [r1, #308]	; 0x134
    5628:	bl	0 <coda_type_set_bit_size>
    562c:	ldr	r3, [r5, r8]
    5630:	movw	r1, #0
    5634:	movt	r1, #0
    5638:	ldr	r0, [r3, #308]	; 0x134
    563c:	bl	0 <coda_type_set_description>
    5640:	mov	r1, #2
    5644:	mov	r0, #7
    5648:	ldr	r4, [r5, r8]
    564c:	bl	0 <coda_type_number_new>
    5650:	ldr	r3, [r5, r8]
    5654:	mov	r1, #1
    5658:	str	r0, [r4, #312]	; 0x138
    565c:	ldr	r0, [r3, #312]	; 0x138
    5660:	bl	0 <coda_type_number_set_endianness>
    5664:	ldr	r3, [r5, r8]
    5668:	mov	r1, #1
    566c:	ldr	r0, [r3, #312]	; 0x138
    5670:	bl	0 <coda_type_set_read_type>
    5674:	ldr	r1, [r5, r8]
    5678:	mov	r2, #8
    567c:	mov	r3, #0
    5680:	ldr	r0, [r1, #312]	; 0x138
    5684:	bl	0 <coda_type_set_bit_size>
    5688:	ldr	r3, [r5, r8]
    568c:	movw	r1, #0
    5690:	movt	r1, #0
    5694:	ldr	r0, [r3, #312]	; 0x138
    5698:	bl	0 <coda_type_set_description>
    569c:	mov	r1, #2
    56a0:	mov	r0, #7
    56a4:	ldr	r4, [r5, r8]
    56a8:	bl	0 <coda_type_number_new>
    56ac:	ldr	r3, [r5, r8]
    56b0:	mov	r1, #1
    56b4:	str	r0, [r4, #316]	; 0x13c
    56b8:	ldr	r0, [r3, #316]	; 0x13c
    56bc:	bl	0 <coda_type_number_set_endianness>
    56c0:	ldr	r3, [r5, r8]
    56c4:	mov	r1, #3
    56c8:	ldr	r0, [r3, #316]	; 0x13c
    56cc:	bl	0 <coda_type_set_read_type>
    56d0:	ldr	r1, [r5, r8]
    56d4:	mov	r2, #16
    56d8:	mov	r3, #0
    56dc:	ldr	r0, [r1, #316]	; 0x13c
    56e0:	bl	0 <coda_type_set_bit_size>
    56e4:	ldr	r3, [r5, r8]
    56e8:	movw	r1, #0
    56ec:	movt	r1, #0
    56f0:	ldr	r0, [r3, #316]	; 0x13c
    56f4:	bl	0 <coda_type_set_description>
    56f8:	mov	r1, #2
    56fc:	mov	r0, #7
    5700:	ldr	r4, [r5, r8]
    5704:	bl	0 <coda_type_number_new>
    5708:	ldr	r3, [r5, r8]
    570c:	mov	r1, #1
    5710:	str	r0, [r4, #320]	; 0x140
    5714:	ldr	r0, [r3, #320]	; 0x140
    5718:	bl	0 <coda_type_number_set_endianness>
    571c:	ldr	r3, [r5, r8]
    5720:	mov	r1, #2
    5724:	ldr	r0, [r3, #320]	; 0x140
    5728:	bl	0 <coda_type_set_read_type>
    572c:	ldr	r1, [r5, r8]
    5730:	mov	r2, #16
    5734:	mov	r3, #0
    5738:	ldr	r0, [r1, #320]	; 0x140
    573c:	bl	0 <coda_type_set_bit_size>
    5740:	ldr	r3, [r5, r8]
    5744:	movw	r1, #0
    5748:	movt	r1, #0
    574c:	ldr	r0, [r3, #320]	; 0x140
    5750:	bl	0 <coda_type_set_description>
    5754:	mov	r1, #2
    5758:	mov	r0, #7
    575c:	ldr	r4, [r5, r8]
    5760:	bl	0 <coda_type_number_new>
    5764:	ldr	r3, [r5, r8]
    5768:	mov	r1, #1
    576c:	str	r0, [r4, #324]	; 0x144
    5770:	ldr	r0, [r3, #324]	; 0x144
    5774:	bl	0 <coda_type_number_set_endianness>
    5778:	ldr	r3, [r5, r8]
    577c:	mov	r1, #1
    5780:	ldr	r0, [r3, #324]	; 0x144
    5784:	bl	0 <coda_type_set_read_type>
    5788:	ldr	r1, [r5, r8]
    578c:	mov	r2, #8
    5790:	mov	r3, #0
    5794:	ldr	r0, [r1, #324]	; 0x144
    5798:	bl	0 <coda_type_set_bit_size>
    579c:	ldr	r3, [r5, r8]
    57a0:	movw	r1, #0
    57a4:	movt	r1, #0
    57a8:	ldr	r0, [r3, #324]	; 0x144
    57ac:	bl	0 <coda_type_set_description>
    57b0:	mov	r1, #2
    57b4:	mov	r0, #7
    57b8:	ldr	r4, [r5, r8]
    57bc:	bl	0 <coda_type_number_new>
    57c0:	ldr	r3, [r5, r8]
    57c4:	mov	r1, #1
    57c8:	str	r0, [r4, #328]	; 0x148
    57cc:	ldr	r0, [r3, #328]	; 0x148
    57d0:	bl	0 <coda_type_number_set_endianness>
    57d4:	ldr	r3, [r5, r8]
    57d8:	mov	r1, #1
    57dc:	ldr	r0, [r3, #328]	; 0x148
    57e0:	bl	0 <coda_type_set_read_type>
    57e4:	ldr	r1, [r5, r8]
    57e8:	mov	r2, #8
    57ec:	mov	r3, #0
    57f0:	ldr	r0, [r1, #328]	; 0x148
    57f4:	bl	0 <coda_type_set_bit_size>
    57f8:	ldr	r3, [r5, r8]
    57fc:	movw	r1, #0
    5800:	movt	r1, #0
    5804:	ldr	r0, [r3, #328]	; 0x148
    5808:	bl	0 <coda_type_set_description>
    580c:	mov	r1, #2
    5810:	mov	r0, #7
    5814:	ldr	r4, [r5, r8]
    5818:	bl	0 <coda_type_number_new>
    581c:	ldr	r3, [r5, r8]
    5820:	mov	r1, #1
    5824:	str	r0, [r4, #332]	; 0x14c
    5828:	ldr	r0, [r3, #332]	; 0x14c
    582c:	bl	0 <coda_type_number_set_endianness>
    5830:	ldr	r3, [r5, r8]
    5834:	mov	r1, #1
    5838:	ldr	r0, [r3, #332]	; 0x14c
    583c:	bl	0 <coda_type_set_read_type>
    5840:	ldr	r1, [r5, r8]
    5844:	mov	r2, #8
    5848:	mov	r3, #0
    584c:	ldr	r0, [r1, #332]	; 0x14c
    5850:	bl	0 <coda_type_set_bit_size>
    5854:	ldr	r3, [r5, r8]
    5858:	movw	r1, #0
    585c:	movt	r1, #0
    5860:	ldr	r0, [r3, #332]	; 0x14c
    5864:	bl	0 <coda_type_set_description>
    5868:	mov	r1, #2
    586c:	mov	r0, #7
    5870:	ldr	r4, [r5, r8]
    5874:	bl	0 <coda_type_number_new>
    5878:	ldr	r3, [r5, r8]
    587c:	mov	r1, #1
    5880:	str	r0, [r4, #336]	; 0x150
    5884:	ldr	r0, [r3, #336]	; 0x150
    5888:	bl	0 <coda_type_number_set_endianness>
    588c:	ldr	r3, [r5, r8]
    5890:	mov	r1, #1
    5894:	ldr	r0, [r3, #336]	; 0x150
    5898:	bl	0 <coda_type_set_read_type>
    589c:	ldr	r1, [r5, r8]
    58a0:	mov	r2, #8
    58a4:	mov	r3, #0
    58a8:	ldr	r0, [r1, #336]	; 0x150
    58ac:	bl	0 <coda_type_set_bit_size>
    58b0:	ldr	r3, [r5, r8]
    58b4:	movw	r1, #0
    58b8:	movt	r1, #0
    58bc:	ldr	r0, [r3, #336]	; 0x150
    58c0:	bl	0 <coda_type_set_description>
    58c4:	mov	r1, #2
    58c8:	mov	r0, #7
    58cc:	ldr	r4, [r5, r8]
    58d0:	bl	0 <coda_type_number_new>
    58d4:	ldr	r3, [r5, r8]
    58d8:	mov	r1, #1
    58dc:	str	r0, [r4, #340]	; 0x154
    58e0:	ldr	r0, [r3, #340]	; 0x154
    58e4:	bl	0 <coda_type_number_set_endianness>
    58e8:	ldr	r3, [r5, r8]
    58ec:	mov	r1, #1
    58f0:	ldr	r0, [r3, #340]	; 0x154
    58f4:	bl	0 <coda_type_set_read_type>
    58f8:	ldr	r1, [r5, r8]
    58fc:	mov	r2, #8
    5900:	mov	r3, #0
    5904:	ldr	r0, [r1, #340]	; 0x154
    5908:	bl	0 <coda_type_set_bit_size>
    590c:	ldr	r3, [r5, r8]
    5910:	movw	r1, #0
    5914:	movt	r1, #0
    5918:	ldr	r0, [r3, #340]	; 0x154
    591c:	bl	0 <coda_type_set_description>
    5920:	mov	r1, #2
    5924:	mov	r0, #7
    5928:	ldr	r4, [r5, r8]
    592c:	bl	0 <coda_type_number_new>
    5930:	ldr	r3, [r5, r8]
    5934:	mov	r1, #1
    5938:	str	r0, [r4, #344]	; 0x158
    593c:	ldr	r0, [r3, #344]	; 0x158
    5940:	bl	0 <coda_type_number_set_endianness>
    5944:	ldr	r3, [r5, r8]
    5948:	mov	r1, #1
    594c:	ldr	r0, [r3, #344]	; 0x158
    5950:	bl	0 <coda_type_set_read_type>
    5954:	ldr	r1, [r5, r8]
    5958:	mov	r2, #8
    595c:	mov	r3, #0
    5960:	ldr	r0, [r1, #344]	; 0x158
    5964:	bl	0 <coda_type_set_bit_size>
    5968:	ldr	r3, [r5, r8]
    596c:	movw	r1, #0
    5970:	movt	r1, #0
    5974:	ldr	r0, [r3, #344]	; 0x158
    5978:	bl	0 <coda_type_set_description>
    597c:	mov	r0, #7
    5980:	ldr	r4, [r5, r8]
    5984:	bl	0 <coda_type_raw_new>
    5988:	ldr	r3, [r5, r8]
    598c:	movw	r1, #0
    5990:	movt	r1, #0
    5994:	str	r0, [r4, #348]	; 0x15c
    5998:	ldr	r0, [r3, #348]	; 0x15c
    599c:	bl	0 <coda_type_set_description>
    59a0:	mov	r1, #2
    59a4:	mov	r0, #7
    59a8:	ldr	r4, [r5, r8]
    59ac:	bl	0 <coda_type_number_new>
    59b0:	ldr	r3, [r5, r8]
    59b4:	mov	r1, #1
    59b8:	str	r0, [r4, #352]	; 0x160
    59bc:	ldr	r0, [r3, #352]	; 0x160
    59c0:	bl	0 <coda_type_number_set_endianness>
    59c4:	ldr	r3, [r5, r8]
    59c8:	mov	r1, #1
    59cc:	ldr	r0, [r3, #352]	; 0x160
    59d0:	bl	0 <coda_type_set_read_type>
    59d4:	ldr	r1, [r5, r8]
    59d8:	mov	r2, #8
    59dc:	mov	r3, #0
    59e0:	ldr	r0, [r1, #352]	; 0x160
    59e4:	bl	0 <coda_type_set_bit_size>
    59e8:	ldr	r3, [r5, r8]
    59ec:	movw	r1, #0
    59f0:	movt	r1, #0
    59f4:	ldr	r0, [r3, #352]	; 0x160
    59f8:	bl	0 <coda_type_set_description>
    59fc:	mov	r1, #2
    5a00:	mov	r0, #7
    5a04:	ldr	r4, [r5, r8]
    5a08:	bl	0 <coda_type_number_new>
    5a0c:	ldr	r3, [r5, r8]
    5a10:	mov	r1, #1
    5a14:	str	r0, [r4, #356]	; 0x164
    5a18:	ldr	r0, [r3, #356]	; 0x164
    5a1c:	bl	0 <coda_type_number_set_endianness>
    5a20:	ldr	r3, [r5, r8]
    5a24:	mov	r1, #1
    5a28:	ldr	r0, [r3, #356]	; 0x164
    5a2c:	bl	0 <coda_type_set_read_type>
    5a30:	ldr	r1, [r5, r8]
    5a34:	mov	r2, #8
    5a38:	mov	r3, #0
    5a3c:	ldr	r0, [r1, #356]	; 0x164
    5a40:	bl	0 <coda_type_set_bit_size>
    5a44:	ldr	r3, [r5, r8]
    5a48:	movw	r1, #0
    5a4c:	movt	r1, #0
    5a50:	ldr	r0, [r3, #356]	; 0x164
    5a54:	bl	0 <coda_type_set_description>
    5a58:	mov	r1, #2
    5a5c:	mov	r0, #7
    5a60:	ldr	r4, [r5, r8]
    5a64:	bl	0 <coda_type_number_new>
    5a68:	ldr	r3, [r5, r8]
    5a6c:	mov	r1, #1
    5a70:	str	r0, [r4, #360]	; 0x168
    5a74:	ldr	r0, [r3, #360]	; 0x168
    5a78:	bl	0 <coda_type_number_set_endianness>
    5a7c:	ldr	r3, [r5, r8]
    5a80:	mov	r1, #1
    5a84:	ldr	r0, [r3, #360]	; 0x168
    5a88:	bl	0 <coda_type_set_read_type>
    5a8c:	ldr	r1, [r5, r8]
    5a90:	mov	r2, #8
    5a94:	mov	r3, #0
    5a98:	ldr	r0, [r1, #360]	; 0x168
    5a9c:	bl	0 <coda_type_set_bit_size>
    5aa0:	mov	r1, #2
    5aa4:	mov	r0, #7
    5aa8:	ldr	r4, [r5, r8]
    5aac:	bl	0 <coda_type_number_new>
    5ab0:	ldr	r3, [r5, r8]
    5ab4:	mov	r1, #1
    5ab8:	str	r0, [r4, #364]	; 0x16c
    5abc:	ldr	r0, [r3, #364]	; 0x16c
    5ac0:	bl	0 <coda_type_number_set_endianness>
    5ac4:	ldr	r3, [r5, r8]
    5ac8:	mov	r1, #1
    5acc:	ldr	r0, [r3, #364]	; 0x16c
    5ad0:	bl	0 <coda_type_set_read_type>
    5ad4:	ldr	r1, [r5, r8]
    5ad8:	mov	r2, #8
    5adc:	mov	r3, #0
    5ae0:	ldr	r0, [r1, #364]	; 0x16c
    5ae4:	bl	0 <coda_type_set_bit_size>
    5ae8:	mov	r1, #2
    5aec:	mov	r0, #7
    5af0:	ldr	r4, [r5, r8]
    5af4:	bl	0 <coda_type_number_new>
    5af8:	ldr	r3, [r5, r8]
    5afc:	mov	r1, #1
    5b00:	str	r0, [r4, #368]	; 0x170
    5b04:	ldr	r0, [r3, #368]	; 0x170
    5b08:	bl	0 <coda_type_number_set_endianness>
    5b0c:	ldr	r3, [r5, r8]
    5b10:	mov	r1, #5
    5b14:	ldr	r0, [r3, #368]	; 0x170
    5b18:	bl	0 <coda_type_set_read_type>
    5b1c:	ldr	r1, [r5, r8]
    5b20:	mov	r2, #32
    5b24:	mov	r3, #0
    5b28:	ldr	r0, [r1, #368]	; 0x170
    5b2c:	bl	0 <coda_type_set_bit_size>
    5b30:	mov	r1, #2
    5b34:	mov	r0, #7
    5b38:	ldr	r4, [r5, r8]
    5b3c:	bl	0 <coda_type_number_new>
    5b40:	ldr	r3, [r5, r8]
    5b44:	mov	r1, #1
    5b48:	str	r0, [r4, #372]	; 0x174
    5b4c:	ldr	r0, [r3, #372]	; 0x174
    5b50:	bl	0 <coda_type_number_set_endianness>
    5b54:	ldr	r3, [r5, r8]
    5b58:	mov	r1, #1
    5b5c:	ldr	r0, [r3, #372]	; 0x174
    5b60:	bl	0 <coda_type_set_read_type>
    5b64:	ldr	r1, [r5, r8]
    5b68:	mov	r2, #8
    5b6c:	mov	r3, #0
    5b70:	ldr	r0, [r1, #372]	; 0x174
    5b74:	bl	0 <coda_type_set_bit_size>
    5b78:	mov	r1, #2
    5b7c:	mov	r0, #7
    5b80:	ldr	r4, [r5, r8]
    5b84:	bl	0 <coda_type_number_new>
    5b88:	ldr	r3, [r5, r8]
    5b8c:	mov	r1, #1
    5b90:	str	r0, [r4, #376]	; 0x178
    5b94:	ldr	r0, [r3, #376]	; 0x178
    5b98:	bl	0 <coda_type_number_set_endianness>
    5b9c:	ldr	r3, [r5, r8]
    5ba0:	mov	r1, #5
    5ba4:	ldr	r0, [r3, #376]	; 0x178
    5ba8:	bl	0 <coda_type_set_read_type>
    5bac:	ldr	r1, [r5, r8]
    5bb0:	mov	r2, #32
    5bb4:	mov	r3, #0
    5bb8:	ldr	r0, [r1, #376]	; 0x178
    5bbc:	bl	0 <coda_type_set_bit_size>
    5bc0:	mov	r1, #2
    5bc4:	mov	r0, #7
    5bc8:	ldr	r4, [r5, r8]
    5bcc:	bl	0 <coda_type_number_new>
    5bd0:	ldr	r3, [r5, r8]
    5bd4:	mov	r1, #1
    5bd8:	str	r0, [r4, #380]	; 0x17c
    5bdc:	ldr	r0, [r3, #380]	; 0x17c
    5be0:	bl	0 <coda_type_number_set_endianness>
    5be4:	ldr	r3, [r5, r8]
    5be8:	mov	r1, #1
    5bec:	ldr	r0, [r3, #380]	; 0x17c
    5bf0:	bl	0 <coda_type_set_read_type>
    5bf4:	ldr	r1, [r5, r8]
    5bf8:	mov	r2, #8
    5bfc:	mov	r3, #0
    5c00:	ldr	r0, [r1, #380]	; 0x17c
    5c04:	bl	0 <coda_type_set_bit_size>
    5c08:	mov	r1, #2
    5c0c:	mov	r0, #7
    5c10:	ldr	r4, [r5, r8]
    5c14:	bl	0 <coda_type_number_new>
    5c18:	ldr	r3, [r5, r8]
    5c1c:	mov	r1, #1
    5c20:	str	r0, [r4, #384]	; 0x180
    5c24:	ldr	r0, [r3, #384]	; 0x180
    5c28:	bl	0 <coda_type_number_set_endianness>
    5c2c:	ldr	r3, [r5, r8]
    5c30:	mov	r1, #5
    5c34:	ldr	r0, [r3, #384]	; 0x180
    5c38:	bl	0 <coda_type_set_read_type>
    5c3c:	ldr	r1, [r5, r8]
    5c40:	mov	r2, #32
    5c44:	mov	r3, #0
    5c48:	ldr	r0, [r1, #384]	; 0x180
    5c4c:	bl	0 <coda_type_set_bit_size>
    5c50:	mov	r1, #2
    5c54:	mov	r0, #7
    5c58:	ldr	r4, [r5, r8]
    5c5c:	bl	0 <coda_type_number_new>
    5c60:	ldr	r3, [r5, r8]
    5c64:	mov	r1, #1
    5c68:	str	r0, [r4, #388]	; 0x184
    5c6c:	ldr	r0, [r3, #388]	; 0x184
    5c70:	bl	0 <coda_type_number_set_endianness>
    5c74:	ldr	r3, [r5, r8]
    5c78:	mov	r1, #5
    5c7c:	ldr	r0, [r3, #388]	; 0x184
    5c80:	bl	0 <coda_type_set_read_type>
    5c84:	ldr	r1, [r5, r8]
    5c88:	mov	r2, #32
    5c8c:	mov	r3, #0
    5c90:	ldr	r0, [r1, #388]	; 0x184
    5c94:	bl	0 <coda_type_set_bit_size>
    5c98:	ldr	r3, [r5, r8]
    5c9c:	movw	r1, #0
    5ca0:	movt	r1, #0
    5ca4:	ldr	r0, [r3, #388]	; 0x184
    5ca8:	bl	0 <coda_type_set_description>
    5cac:	mov	r1, #2
    5cb0:	mov	r0, #7
    5cb4:	ldr	r4, [r5, r8]
    5cb8:	bl	0 <coda_type_number_new>
    5cbc:	ldr	r3, [r5, r8]
    5cc0:	mov	r1, #1
    5cc4:	str	r0, [r4, #392]	; 0x188
    5cc8:	ldr	r0, [r3, #392]	; 0x188
    5ccc:	bl	0 <coda_type_number_set_endianness>
    5cd0:	ldr	r3, [r5, r8]
    5cd4:	mov	r1, #5
    5cd8:	ldr	r0, [r3, #392]	; 0x188
    5cdc:	bl	0 <coda_type_set_read_type>
    5ce0:	ldr	r1, [r5, r8]
    5ce4:	mov	r2, #32
    5ce8:	mov	r3, #0
    5cec:	ldr	r0, [r1, #392]	; 0x188
    5cf0:	bl	0 <coda_type_set_bit_size>
    5cf4:	ldr	r3, [r5, r8]
    5cf8:	movw	r1, #0
    5cfc:	movt	r1, #0
    5d00:	ldr	r0, [r3, #392]	; 0x188
    5d04:	bl	0 <coda_type_set_description>
    5d08:	mov	r1, #2
    5d0c:	mov	r0, #7
    5d10:	ldr	r4, [r5, r8]
    5d14:	bl	0 <coda_type_number_new>
    5d18:	ldr	r3, [r5, r8]
    5d1c:	mov	r1, #1
    5d20:	str	r0, [r4, #396]	; 0x18c
    5d24:	ldr	r0, [r3, #396]	; 0x18c
    5d28:	bl	0 <coda_type_number_set_endianness>
    5d2c:	ldr	r3, [r5, r8]
    5d30:	mov	r1, #5
    5d34:	ldr	r0, [r3, #396]	; 0x18c
    5d38:	bl	0 <coda_type_set_read_type>
    5d3c:	ldr	r1, [r5, r8]
    5d40:	mov	r2, #32
    5d44:	mov	r3, #0
    5d48:	ldr	r0, [r1, #396]	; 0x18c
    5d4c:	bl	0 <coda_type_set_bit_size>
    5d50:	mov	r1, #2
    5d54:	mov	r0, #7
    5d58:	ldr	r4, [r5, r8]
    5d5c:	bl	0 <coda_type_number_new>
    5d60:	ldr	r3, [r5, r8]
    5d64:	mov	r1, #1
    5d68:	str	r0, [r4, #400]	; 0x190
    5d6c:	ldr	r0, [r3, #400]	; 0x190
    5d70:	bl	0 <coda_type_number_set_endianness>
    5d74:	ldr	r3, [r5, r8]
    5d78:	mov	r1, #5
    5d7c:	ldr	r0, [r3, #400]	; 0x190
    5d80:	bl	0 <coda_type_set_read_type>
    5d84:	ldr	r1, [r5, r8]
    5d88:	mov	r2, #32
    5d8c:	mov	r3, #0
    5d90:	ldr	r0, [r1, #400]	; 0x190
    5d94:	bl	0 <coda_type_set_bit_size>
    5d98:	mov	r1, #2
    5d9c:	mov	r0, #7
    5da0:	ldr	r4, [r5, r8]
    5da4:	bl	0 <coda_type_number_new>
    5da8:	ldr	r3, [r5, r8]
    5dac:	mov	r1, #1
    5db0:	str	r0, [r4, #404]	; 0x194
    5db4:	ldr	r0, [r3, #404]	; 0x194
    5db8:	bl	0 <coda_type_number_set_endianness>
    5dbc:	ldr	r3, [r5, r8]
    5dc0:	mov	r1, #4
    5dc4:	ldr	r0, [r3, #404]	; 0x194
    5dc8:	bl	0 <coda_type_set_read_type>
    5dcc:	ldr	r1, [r5, r8]
    5dd0:	mov	r2, #32
    5dd4:	mov	r3, #0
    5dd8:	ldr	r0, [r1, #404]	; 0x194
    5ddc:	bl	0 <coda_type_set_bit_size>
    5de0:	ldr	r3, [r5, r8]
    5de4:	movw	r1, #0
    5de8:	movt	r1, #0
    5dec:	ldr	r0, [r3, #404]	; 0x194
    5df0:	bl	0 <coda_type_set_description>
    5df4:	mov	r1, #2
    5df8:	mov	r0, #7
    5dfc:	ldr	r4, [r5, r8]
    5e00:	bl	0 <coda_type_number_new>
    5e04:	ldr	r3, [r5, r8]
    5e08:	mov	r1, #1
    5e0c:	str	r0, [r4, #408]	; 0x198
    5e10:	ldr	r0, [r3, #408]	; 0x198
    5e14:	bl	0 <coda_type_number_set_endianness>
    5e18:	ldr	r3, [r5, r8]
    5e1c:	mov	r1, #4
    5e20:	ldr	r0, [r3, #408]	; 0x198
    5e24:	bl	0 <coda_type_set_read_type>
    5e28:	ldr	r1, [r5, r8]
    5e2c:	mov	r2, #32
    5e30:	mov	r3, #0
    5e34:	ldr	r0, [r1, #408]	; 0x198
    5e38:	bl	0 <coda_type_set_bit_size>
    5e3c:	ldr	r3, [r5, r8]
    5e40:	movw	r1, #0
    5e44:	movt	r1, #0
    5e48:	ldr	r0, [r3, #408]	; 0x198
    5e4c:	bl	0 <coda_type_set_description>
    5e50:	mov	r1, #2
    5e54:	mov	r0, #7
    5e58:	ldr	r4, [r5, r8]
    5e5c:	bl	0 <coda_type_number_new>
    5e60:	ldr	r3, [r5, r8]
    5e64:	mov	r1, #1
    5e68:	str	r0, [r4, #412]	; 0x19c
    5e6c:	ldr	r0, [r3, #412]	; 0x19c
    5e70:	bl	0 <coda_type_number_set_endianness>
    5e74:	ldr	r3, [r5, r8]
    5e78:	mov	r1, #1
    5e7c:	ldr	r0, [r3, #412]	; 0x19c
    5e80:	bl	0 <coda_type_set_read_type>
    5e84:	ldr	r1, [r5, r8]
    5e88:	mov	r2, #8
    5e8c:	mov	r3, #0
    5e90:	ldr	r0, [r1, #412]	; 0x19c
    5e94:	bl	0 <coda_type_set_bit_size>
    5e98:	ldr	r3, [r5, r8]
    5e9c:	movw	r1, #0
    5ea0:	movt	r1, #0
    5ea4:	ldr	r0, [r3, #412]	; 0x19c
    5ea8:	bl	0 <coda_type_set_description>
    5eac:	mov	r1, #2
    5eb0:	mov	r0, #7
    5eb4:	ldr	r4, [r5, r8]
    5eb8:	bl	0 <coda_type_number_new>
    5ebc:	ldr	r3, [r5, r8]
    5ec0:	mov	r1, #1
    5ec4:	str	r0, [r4, #416]	; 0x1a0
    5ec8:	ldr	r0, [r3, #416]	; 0x1a0
    5ecc:	bl	0 <coda_type_number_set_endianness>
    5ed0:	ldr	r3, [r5, r8]
    5ed4:	mov	r1, #4
    5ed8:	ldr	r0, [r3, #416]	; 0x1a0
    5edc:	bl	0 <coda_type_set_read_type>
    5ee0:	ldr	r1, [r5, r8]
    5ee4:	mov	r2, #32
    5ee8:	mov	r3, #0
    5eec:	ldr	r0, [r1, #416]	; 0x1a0
    5ef0:	bl	0 <coda_type_set_bit_size>
    5ef4:	ldr	r3, [r5, r8]
    5ef8:	movw	r1, #0
    5efc:	movt	r1, #0
    5f00:	ldr	r0, [r3, #416]	; 0x1a0
    5f04:	bl	0 <coda_type_set_description>
    5f08:	mov	r1, #2
    5f0c:	mov	r0, #7
    5f10:	ldr	r4, [r5, r8]
    5f14:	bl	0 <coda_type_number_new>
    5f18:	ldr	r3, [r5, r8]
    5f1c:	mov	r1, #1
    5f20:	str	r0, [r4, #420]	; 0x1a4
    5f24:	ldr	r0, [r3, #420]	; 0x1a4
    5f28:	bl	0 <coda_type_number_set_endianness>
    5f2c:	ldr	r3, [r5, r8]
    5f30:	mov	r1, #4
    5f34:	ldr	r0, [r3, #420]	; 0x1a4
    5f38:	bl	0 <coda_type_set_read_type>
    5f3c:	ldr	r1, [r5, r8]
    5f40:	mov	r2, #32
    5f44:	mov	r3, #0
    5f48:	ldr	r0, [r1, #420]	; 0x1a4
    5f4c:	bl	0 <coda_type_set_bit_size>
    5f50:	ldr	r3, [r5, r8]
    5f54:	movw	r1, #0
    5f58:	movt	r1, #0
    5f5c:	ldr	r0, [r3, #420]	; 0x1a4
    5f60:	bl	0 <coda_type_set_description>
    5f64:	mov	r1, #2
    5f68:	mov	r0, #7
    5f6c:	ldr	r4, [r5, r8]
    5f70:	bl	0 <coda_type_number_new>
    5f74:	ldr	r3, [r5, r8]
    5f78:	mov	r1, #1
    5f7c:	str	r0, [r4, #424]	; 0x1a8
    5f80:	ldr	r0, [r3, #424]	; 0x1a8
    5f84:	bl	0 <coda_type_number_set_endianness>
    5f88:	ldr	r3, [r5, r8]
    5f8c:	mov	r1, #5
    5f90:	ldr	r0, [r3, #424]	; 0x1a8
    5f94:	bl	0 <coda_type_set_read_type>
    5f98:	ldr	r1, [r5, r8]
    5f9c:	mov	r2, #32
    5fa0:	mov	r3, #0
    5fa4:	ldr	r0, [r1, #424]	; 0x1a8
    5fa8:	bl	0 <coda_type_set_bit_size>
    5fac:	ldr	r3, [r5, r8]
    5fb0:	movw	r1, #0
    5fb4:	movt	r1, #0
    5fb8:	ldr	r0, [r3, #424]	; 0x1a8
    5fbc:	bl	0 <coda_type_set_description>
    5fc0:	mov	r1, #2
    5fc4:	mov	r0, #7
    5fc8:	ldr	r4, [r5, r8]
    5fcc:	bl	0 <coda_type_number_new>
    5fd0:	ldr	r3, [r5, r8]
    5fd4:	mov	r1, #1
    5fd8:	str	r0, [r4, #428]	; 0x1ac
    5fdc:	ldr	r0, [r3, #428]	; 0x1ac
    5fe0:	bl	0 <coda_type_number_set_endianness>
    5fe4:	ldr	r3, [r5, r8]
    5fe8:	mov	r1, #5
    5fec:	ldr	r0, [r3, #428]	; 0x1ac
    5ff0:	bl	0 <coda_type_set_read_type>
    5ff4:	ldr	r1, [r5, r8]
    5ff8:	mov	r2, #32
    5ffc:	mov	r3, #0
    6000:	ldr	r0, [r1, #428]	; 0x1ac
    6004:	bl	0 <coda_type_set_bit_size>
    6008:	ldr	r3, [r5, r8]
    600c:	movw	r1, #0
    6010:	movt	r1, #0
    6014:	ldr	r0, [r3, #428]	; 0x1ac
    6018:	bl	0 <coda_type_set_description>
    601c:	mov	r1, #2
    6020:	mov	r0, #7
    6024:	ldr	r4, [r5, r8]
    6028:	bl	0 <coda_type_number_new>
    602c:	ldr	r3, [r5, r8]
    6030:	mov	r1, #1
    6034:	str	r0, [r4, #432]	; 0x1b0
    6038:	ldr	r0, [r3, #432]	; 0x1b0
    603c:	bl	0 <coda_type_number_set_endianness>
    6040:	ldr	r3, [r5, r8]
    6044:	mov	r1, #5
    6048:	ldr	r0, [r3, #432]	; 0x1b0
    604c:	bl	0 <coda_type_set_read_type>
    6050:	ldr	r1, [r5, r8]
    6054:	mov	r2, #32
    6058:	mov	r3, #0
    605c:	ldr	r0, [r1, #432]	; 0x1b0
    6060:	bl	0 <coda_type_set_bit_size>
    6064:	ldr	r3, [r5, r8]
    6068:	movw	r1, #0
    606c:	movt	r1, #0
    6070:	ldr	r0, [r3, #432]	; 0x1b0
    6074:	bl	0 <coda_type_set_description>
    6078:	mov	r1, #2
    607c:	mov	r0, #7
    6080:	ldr	r4, [r5, r8]
    6084:	bl	0 <coda_type_number_new>
    6088:	ldr	r3, [r5, r8]
    608c:	mov	r1, #1
    6090:	str	r0, [r4, #436]	; 0x1b4
    6094:	ldr	r0, [r3, #436]	; 0x1b4
    6098:	bl	0 <coda_type_number_set_endianness>
    609c:	ldr	r3, [r5, r8]
    60a0:	mov	r1, #1
    60a4:	ldr	r0, [r3, #436]	; 0x1b4
    60a8:	bl	0 <coda_type_set_read_type>
    60ac:	ldr	r1, [r5, r8]
    60b0:	mov	r2, #8
    60b4:	mov	r3, #0
    60b8:	ldr	r0, [r1, #436]	; 0x1b4
    60bc:	bl	0 <coda_type_set_bit_size>
    60c0:	ldr	r3, [r5, r8]
    60c4:	movw	r1, #0
    60c8:	movt	r1, #0
    60cc:	ldr	r0, [r3, #436]	; 0x1b4
    60d0:	bl	0 <coda_type_set_description>
    60d4:	mov	r1, #2
    60d8:	mov	r0, #7
    60dc:	ldr	r4, [r5, r8]
    60e0:	bl	0 <coda_type_number_new>
    60e4:	ldr	r3, [r5, r8]
    60e8:	mov	r1, #1
    60ec:	str	r0, [r4, #440]	; 0x1b8
    60f0:	ldr	r0, [r3, #440]	; 0x1b8
    60f4:	bl	0 <coda_type_number_set_endianness>
    60f8:	ldr	r3, [r5, r8]
    60fc:	mov	r1, #5
    6100:	ldr	r0, [r3, #440]	; 0x1b8
    6104:	bl	0 <coda_type_set_read_type>
    6108:	ldr	r1, [r5, r8]
    610c:	mov	r2, #32
    6110:	mov	r3, #0
    6114:	ldr	r0, [r1, #440]	; 0x1b8
    6118:	bl	0 <coda_type_set_bit_size>
    611c:	mov	r0, #7
    6120:	ldr	r4, [r5, r8]
    6124:	bl	0 <coda_type_array_new>
    6128:	ldr	r3, [r5, r8]
    612c:	movw	r1, #0
    6130:	movt	r1, #0
    6134:	str	r0, [r4, #444]	; 0x1bc
    6138:	ldr	r0, [r3, #444]	; 0x1bc
    613c:	bl	0 <coda_type_set_description>
    6140:	ldr	r3, [r5, r8]
    6144:	ldr	r1, [r3, #440]	; 0x1b8
    6148:	ldr	r0, [r3, #444]	; 0x1bc
    614c:	bl	0 <coda_type_array_set_base_type>
    6150:	ldr	r3, [r5, r8]
    6154:	mov	r1, #0
    6158:	ldr	r0, [r3, #444]	; 0x1bc
    615c:	bl	0 <coda_type_array_add_variable_dimension>
    6160:	mov	r1, #2
    6164:	mov	r0, #7
    6168:	ldr	r4, [r5, r8]
    616c:	bl	0 <coda_type_number_new>
    6170:	ldr	r3, [r5, r8]
    6174:	mov	r1, #1
    6178:	str	r0, [r4, #448]	; 0x1c0
    617c:	ldr	r0, [r3, #448]	; 0x1c0
    6180:	bl	0 <coda_type_number_set_endianness>
    6184:	ldr	r3, [r5, r8]
    6188:	mov	r1, #1
    618c:	ldr	r0, [r3, #448]	; 0x1c0
    6190:	bl	0 <coda_type_set_read_type>
    6194:	ldr	r1, [r5, r8]
    6198:	mov	r2, #8
    619c:	mov	r3, #0
    61a0:	ldr	r0, [r1, #448]	; 0x1c0
    61a4:	bl	0 <coda_type_set_bit_size>
    61a8:	ldr	r3, [r5, r8]
    61ac:	movw	r1, #0
    61b0:	movt	r1, #0
    61b4:	ldr	r0, [r3, #448]	; 0x1c0
    61b8:	bl	0 <coda_type_set_description>
    61bc:	mov	r1, #2
    61c0:	mov	r0, #7
    61c4:	ldr	r4, [r5, r8]
    61c8:	bl	0 <coda_type_number_new>
    61cc:	ldr	r3, [r5, r8]
    61d0:	mov	r1, #1
    61d4:	str	r0, [r4, #452]	; 0x1c4
    61d8:	ldr	r0, [r3, #452]	; 0x1c4
    61dc:	bl	0 <coda_type_number_set_endianness>
    61e0:	ldr	r3, [r5, r8]
    61e4:	mov	r1, #5
    61e8:	ldr	r0, [r3, #452]	; 0x1c4
    61ec:	bl	0 <coda_type_set_read_type>
    61f0:	ldr	r1, [r5, r8]
    61f4:	mov	r2, #32
    61f8:	mov	r3, #0
    61fc:	ldr	r0, [r1, #452]	; 0x1c4
    6200:	bl	0 <coda_type_set_bit_size>
    6204:	ldr	r3, [r5, r8]
    6208:	movw	r1, #0
    620c:	movt	r1, #0
    6210:	ldr	r0, [r3, #452]	; 0x1c4
    6214:	bl	0 <coda_type_set_description>
    6218:	mov	r1, #2
    621c:	mov	r0, #7
    6220:	ldr	r4, [r5, r8]
    6224:	bl	0 <coda_type_number_new>
    6228:	ldr	r3, [r5, r8]
    622c:	mov	r1, #1
    6230:	str	r0, [r4, #456]	; 0x1c8
    6234:	ldr	r0, [r3, #456]	; 0x1c8
    6238:	bl	0 <coda_type_number_set_endianness>
    623c:	ldr	r3, [r5, r8]
    6240:	mov	r1, #1
    6244:	ldr	r0, [r3, #456]	; 0x1c8
    6248:	bl	0 <coda_type_set_read_type>
    624c:	ldr	r1, [r5, r8]
    6250:	mov	r2, #8
    6254:	mov	r3, #0
    6258:	ldr	r0, [r1, #456]	; 0x1c8
    625c:	bl	0 <coda_type_set_bit_size>
    6260:	ldr	r3, [r5, r8]
    6264:	movw	r1, #0
    6268:	movt	r1, #0
    626c:	ldr	r0, [r3, #456]	; 0x1c8
    6270:	bl	0 <coda_type_set_description>
    6274:	mov	r1, #2
    6278:	mov	r0, #7
    627c:	ldr	r4, [r5, r8]
    6280:	bl	0 <coda_type_number_new>
    6284:	ldr	r3, [r5, r8]
    6288:	mov	r1, #1
    628c:	str	r0, [r4, #460]	; 0x1cc
    6290:	ldr	r0, [r3, #460]	; 0x1cc
    6294:	bl	0 <coda_type_number_set_endianness>
    6298:	ldr	r3, [r5, r8]
    629c:	mov	r1, #1
    62a0:	ldr	r0, [r3, #460]	; 0x1cc
    62a4:	bl	0 <coda_type_set_read_type>
    62a8:	ldr	r1, [r5, r8]
    62ac:	mov	r2, #8
    62b0:	mov	r3, #0
    62b4:	ldr	r0, [r1, #460]	; 0x1cc
    62b8:	bl	0 <coda_type_set_bit_size>
    62bc:	ldr	r3, [r5, r8]
    62c0:	movw	r1, #0
    62c4:	movt	r1, #0
    62c8:	ldr	r0, [r3, #460]	; 0x1cc
    62cc:	bl	0 <coda_type_set_description>
    62d0:	mov	r1, #2
    62d4:	mov	r0, #7
    62d8:	ldr	r4, [r5, r8]
    62dc:	bl	0 <coda_type_number_new>
    62e0:	ldr	r3, [r5, r8]
    62e4:	mov	r1, #1
    62e8:	str	r0, [r4, #464]	; 0x1d0
    62ec:	ldr	r0, [r3, #464]	; 0x1d0
    62f0:	bl	0 <coda_type_number_set_endianness>
    62f4:	ldr	r3, [r5, r8]
    62f8:	mov	r1, #1
    62fc:	ldr	r0, [r3, #464]	; 0x1d0
    6300:	bl	0 <coda_type_set_read_type>
    6304:	ldr	r1, [r5, r8]
    6308:	mov	r2, #8
    630c:	mov	r3, #0
    6310:	ldr	r0, [r1, #464]	; 0x1d0
    6314:	bl	0 <coda_type_set_bit_size>
    6318:	ldr	r3, [r5, r8]
    631c:	movw	r1, #0
    6320:	movt	r1, #0
    6324:	ldr	r0, [r3, #464]	; 0x1d0
    6328:	bl	0 <coda_type_set_description>
    632c:	mov	r1, #2
    6330:	mov	r0, #7
    6334:	ldr	r4, [r5, r8]
    6338:	bl	0 <coda_type_number_new>
    633c:	ldr	r3, [r5, r8]
    6340:	mov	r1, #1
    6344:	str	r0, [r4, #468]	; 0x1d4
    6348:	ldr	r0, [r3, #468]	; 0x1d4
    634c:	bl	0 <coda_type_number_set_endianness>
    6350:	ldr	r3, [r5, r8]
    6354:	mov	r1, #1
    6358:	ldr	r0, [r3, #468]	; 0x1d4
    635c:	bl	0 <coda_type_set_read_type>
    6360:	ldr	r1, [r5, r8]
    6364:	mov	r2, #8
    6368:	mov	r3, #0
    636c:	ldr	r0, [r1, #468]	; 0x1d4
    6370:	bl	0 <coda_type_set_bit_size>
    6374:	ldr	r3, [r5, r8]
    6378:	movw	r1, #0
    637c:	movt	r1, #0
    6380:	ldr	r0, [r3, #468]	; 0x1d4
    6384:	bl	0 <coda_type_set_description>
    6388:	mov	r1, #2
    638c:	mov	r0, #7
    6390:	ldr	r4, [r5, r8]
    6394:	bl	0 <coda_type_number_new>
    6398:	ldr	r3, [r5, r8]
    639c:	mov	r1, #1
    63a0:	str	r0, [r4, #472]	; 0x1d8
    63a4:	ldr	r0, [r3, #472]	; 0x1d8
    63a8:	bl	0 <coda_type_number_set_endianness>
    63ac:	ldr	r3, [r5, r8]
    63b0:	mov	r1, #1
    63b4:	ldr	r0, [r3, #472]	; 0x1d8
    63b8:	bl	0 <coda_type_set_read_type>
    63bc:	ldr	r1, [r5, r8]
    63c0:	mov	r2, #8
    63c4:	mov	r3, #0
    63c8:	ldr	r0, [r1, #472]	; 0x1d8
    63cc:	bl	0 <coda_type_set_bit_size>
    63d0:	ldr	r3, [r5, r8]
    63d4:	movw	r1, #0
    63d8:	movt	r1, #0
    63dc:	ldr	r0, [r3, #472]	; 0x1d8
    63e0:	bl	0 <coda_type_set_description>
    63e4:	mov	r1, #2
    63e8:	mov	r0, #7
    63ec:	ldr	r4, [r5, r8]
    63f0:	bl	0 <coda_type_number_new>
    63f4:	ldr	r3, [r5, r8]
    63f8:	mov	r1, #1
    63fc:	str	r0, [r4, #476]	; 0x1dc
    6400:	ldr	r0, [r3, #476]	; 0x1dc
    6404:	bl	0 <coda_type_number_set_endianness>
    6408:	ldr	r3, [r5, r8]
    640c:	mov	r1, #1
    6410:	ldr	r0, [r3, #476]	; 0x1dc
    6414:	bl	0 <coda_type_set_read_type>
    6418:	ldr	r1, [r5, r8]
    641c:	mov	r2, #8
    6420:	mov	r3, #0
    6424:	ldr	r0, [r1, #476]	; 0x1dc
    6428:	bl	0 <coda_type_set_bit_size>
    642c:	ldr	r3, [r5, r8]
    6430:	movw	r1, #0
    6434:	movt	r1, #0
    6438:	ldr	r0, [r3, #476]	; 0x1dc
    643c:	bl	0 <coda_type_set_description>
    6440:	mov	r1, #2
    6444:	mov	r0, #7
    6448:	ldr	r4, [r5, r8]
    644c:	bl	0 <coda_type_number_new>
    6450:	ldr	r3, [r5, r8]
    6454:	mov	r1, #1
    6458:	str	r0, [r4, #480]	; 0x1e0
    645c:	ldr	r0, [r3, #480]	; 0x1e0
    6460:	bl	0 <coda_type_number_set_endianness>
    6464:	ldr	r3, [r5, r8]
    6468:	mov	r1, #3
    646c:	ldr	r0, [r3, #480]	; 0x1e0
    6470:	bl	0 <coda_type_set_read_type>
    6474:	ldr	r1, [r5, r8]
    6478:	mov	r2, #16
    647c:	mov	r3, #0
    6480:	ldr	r0, [r1, #480]	; 0x1e0
    6484:	bl	0 <coda_type_set_bit_size>
    6488:	ldr	r3, [r5, r8]
    648c:	movw	r1, #0
    6490:	movt	r1, #0
    6494:	ldr	r0, [r3, #480]	; 0x1e0
    6498:	bl	0 <coda_type_set_description>
    649c:	mov	r1, #2
    64a0:	mov	r0, #7
    64a4:	ldr	r4, [r5, r8]
    64a8:	bl	0 <coda_type_number_new>
    64ac:	ldr	r3, [r5, r8]
    64b0:	mov	r1, #1
    64b4:	str	r0, [r4, #484]	; 0x1e4
    64b8:	ldr	r0, [r3, #484]	; 0x1e4
    64bc:	bl	0 <coda_type_number_set_endianness>
    64c0:	ldr	r3, [r5, r8]
    64c4:	mov	r1, #1
    64c8:	ldr	r0, [r3, #484]	; 0x1e4
    64cc:	bl	0 <coda_type_set_read_type>
    64d0:	ldr	r1, [r5, r8]
    64d4:	mov	r2, #8
    64d8:	mov	r3, #0
    64dc:	ldr	r0, [r1, #484]	; 0x1e4
    64e0:	bl	0 <coda_type_set_bit_size>
    64e4:	ldr	r3, [r5, r8]
    64e8:	movw	r1, #0
    64ec:	movt	r1, #0
    64f0:	ldr	r0, [r3, #484]	; 0x1e4
    64f4:	bl	0 <coda_type_set_description>
    64f8:	mov	r1, #2
    64fc:	mov	r0, #7
    6500:	ldr	r4, [r5, r8]
    6504:	bl	0 <coda_type_number_new>
    6508:	ldr	r3, [r5, r8]
    650c:	mov	r1, #1
    6510:	str	r0, [r4, #488]	; 0x1e8
    6514:	ldr	r0, [r3, #488]	; 0x1e8
    6518:	bl	0 <coda_type_number_set_endianness>
    651c:	ldr	r3, [r5, r8]
    6520:	mov	r1, #1
    6524:	ldr	r0, [r3, #488]	; 0x1e8
    6528:	bl	0 <coda_type_set_read_type>
    652c:	ldr	r1, [r5, r8]
    6530:	mov	r2, #8
    6534:	mov	r3, #0
    6538:	ldr	r0, [r1, #488]	; 0x1e8
    653c:	bl	0 <coda_type_set_bit_size>
    6540:	ldr	r3, [r5, r8]
    6544:	movw	r1, #0
    6548:	movt	r1, #0
    654c:	ldr	r0, [r3, #488]	; 0x1e8
    6550:	bl	0 <coda_type_set_description>
    6554:	mov	r1, #2
    6558:	mov	r0, #7
    655c:	ldr	r4, [r5, r8]
    6560:	bl	0 <coda_type_number_new>
    6564:	ldr	r3, [r5, r8]
    6568:	mov	r1, #1
    656c:	str	r0, [r4, #492]	; 0x1ec
    6570:	ldr	r0, [r3, #492]	; 0x1ec
    6574:	bl	0 <coda_type_number_set_endianness>
    6578:	ldr	r3, [r5, r8]
    657c:	mov	r1, #5
    6580:	ldr	r0, [r3, #492]	; 0x1ec
    6584:	bl	0 <coda_type_set_read_type>
    6588:	ldr	r1, [r5, r8]
    658c:	mov	r2, #32
    6590:	mov	r3, #0
    6594:	ldr	r0, [r1, #492]	; 0x1ec
    6598:	bl	0 <coda_type_set_bit_size>
    659c:	ldr	r3, [r5, r8]
    65a0:	movw	r1, #0
    65a4:	movt	r1, #0
    65a8:	ldr	r0, [r3, #492]	; 0x1ec
    65ac:	bl	0 <coda_type_set_description>
    65b0:	mov	r1, #2
    65b4:	mov	r0, #7
    65b8:	ldr	r4, [r5, r8]
    65bc:	bl	0 <coda_type_number_new>
    65c0:	ldr	r3, [r5, r8]
    65c4:	mov	r1, #1
    65c8:	str	r0, [r4, #496]	; 0x1f0
    65cc:	ldr	r0, [r3, #496]	; 0x1f0
    65d0:	bl	0 <coda_type_number_set_endianness>
    65d4:	ldr	r3, [r5, r8]
    65d8:	mov	r1, #1
    65dc:	ldr	r0, [r3, #496]	; 0x1f0
    65e0:	bl	0 <coda_type_set_read_type>
    65e4:	ldr	r1, [r5, r8]
    65e8:	mov	r2, #8
    65ec:	mov	r3, #0
    65f0:	ldr	r0, [r1, #496]	; 0x1f0
    65f4:	bl	0 <coda_type_set_bit_size>
    65f8:	ldr	r3, [r5, r8]
    65fc:	movw	r1, #0
    6600:	movt	r1, #0
    6604:	ldr	r0, [r3, #496]	; 0x1f0
    6608:	bl	0 <coda_type_set_description>
    660c:	mov	r1, #3
    6610:	mov	r0, #7
    6614:	ldr	r4, [r5, r8]
    6618:	bl	0 <coda_type_number_new>
    661c:	ldr	r3, [r5, r8]
    6620:	mov	r1, #1
    6624:	str	r0, [r4, #500]	; 0x1f4
    6628:	ldr	r0, [r3, #500]	; 0x1f4
    662c:	bl	0 <coda_type_number_set_endianness>
    6630:	ldr	r3, [r5, r8]
    6634:	mov	r1, #9
    6638:	ldr	r0, [r3, #500]	; 0x1f4
    663c:	bl	0 <coda_type_set_read_type>
    6640:	ldr	r1, [r5, r8]
    6644:	mov	r2, #64	; 0x40
    6648:	mov	r3, #0
    664c:	ldr	r0, [r1, #500]	; 0x1f4
    6650:	bl	0 <coda_type_set_bit_size>
    6654:	ldr	r3, [r5, r8]
    6658:	movw	r1, #0
    665c:	movt	r1, #0
    6660:	ldr	r0, [r3, #500]	; 0x1f4
    6664:	bl	0 <coda_type_set_description>
    6668:	mov	r1, #2
    666c:	mov	r0, #7
    6670:	ldr	r4, [r5, r8]
    6674:	bl	0 <coda_type_number_new>
    6678:	ldr	r3, [r5, r8]
    667c:	mov	r1, #1
    6680:	str	r0, [r4, #504]	; 0x1f8
    6684:	ldr	r0, [r3, #504]	; 0x1f8
    6688:	bl	0 <coda_type_number_set_endianness>
    668c:	ldr	r3, [r5, r8]
    6690:	mov	r1, #1
    6694:	ldr	r0, [r3, #504]	; 0x1f8
    6698:	bl	0 <coda_type_set_read_type>
    669c:	ldr	r1, [r5, r8]
    66a0:	mov	r2, #8
    66a4:	mov	r3, #0
    66a8:	ldr	r0, [r1, #504]	; 0x1f8
    66ac:	bl	0 <coda_type_set_bit_size>
    66b0:	ldr	r3, [r5, r8]
    66b4:	movw	r1, #0
    66b8:	movt	r1, #0
    66bc:	ldr	r0, [r3, #504]	; 0x1f8
    66c0:	bl	0 <coda_type_set_description>
    66c4:	mov	r1, #3
    66c8:	mov	r0, #7
    66cc:	ldr	r4, [r5, r8]
    66d0:	bl	0 <coda_type_number_new>
    66d4:	ldr	r3, [r5, r8]
    66d8:	mov	r1, #1
    66dc:	str	r0, [r4, #508]	; 0x1fc
    66e0:	ldr	r0, [r3, #508]	; 0x1fc
    66e4:	bl	0 <coda_type_number_set_endianness>
    66e8:	ldr	r3, [r5, r8]
    66ec:	mov	r1, #9
    66f0:	ldr	r0, [r3, #508]	; 0x1fc
    66f4:	bl	0 <coda_type_set_read_type>
    66f8:	ldr	r1, [r5, r8]
    66fc:	mov	r2, #64	; 0x40
    6700:	mov	r3, #0
    6704:	ldr	r0, [r1, #508]	; 0x1fc
    6708:	bl	0 <coda_type_set_bit_size>
    670c:	ldr	r3, [r5, r8]
    6710:	movw	r1, #0
    6714:	movt	r1, #0
    6718:	ldr	r0, [r3, #508]	; 0x1fc
    671c:	bl	0 <coda_type_set_description>
    6720:	mov	r1, #3
    6724:	mov	r0, #7
    6728:	ldr	r4, [r5, r8]
    672c:	bl	0 <coda_type_number_new>
    6730:	ldr	r3, [r5, r8]
    6734:	mov	r1, #1
    6738:	str	r0, [r4, #512]	; 0x200
    673c:	ldr	r0, [r3, #512]	; 0x200
    6740:	bl	0 <coda_type_number_set_endianness>
    6744:	ldr	r3, [r5, r8]
    6748:	mov	r1, #8
    674c:	ldr	r0, [r3, #512]	; 0x200
    6750:	bl	0 <coda_type_set_read_type>
    6754:	ldr	r1, [r5, r8]
    6758:	mov	r2, #32
    675c:	mov	r3, #0
    6760:	ldr	r0, [r1, #512]	; 0x200
    6764:	bl	0 <coda_type_set_bit_size>
    6768:	mov	r0, #7
    676c:	ldr	r4, [r5, r8]
    6770:	bl	0 <coda_type_array_new>
    6774:	ldr	r3, [r5, r8]
    6778:	movw	r1, #0
    677c:	movt	r1, #0
    6780:	str	r0, [r4, #516]	; 0x204
    6784:	ldr	r0, [r3, #516]	; 0x204
    6788:	bl	0 <coda_type_set_description>
    678c:	ldr	r3, [r5, r8]
    6790:	ldr	r1, [r3, #512]	; 0x200
    6794:	ldr	r0, [r3, #516]	; 0x204
    6798:	bl	0 <coda_type_array_set_base_type>
    679c:	ldr	r3, [r5, r8]
    67a0:	mov	r1, #0
    67a4:	ldr	r0, [r3, #516]	; 0x204
    67a8:	bl	0 <coda_type_array_add_variable_dimension>
    67ac:	mov	r1, #2
    67b0:	mov	r0, #7
    67b4:	ldr	r4, [r5, r8]
    67b8:	bl	0 <coda_type_number_new>
    67bc:	ldr	r3, [r5, r8]
    67c0:	mov	r1, #1
    67c4:	str	r0, [r4, #520]	; 0x208
    67c8:	ldr	r0, [r3, #520]	; 0x208
    67cc:	bl	0 <coda_type_number_set_endianness>
    67d0:	ldr	r3, [r5, r8]
    67d4:	mov	r1, #3
    67d8:	ldr	r0, [r3, #520]	; 0x208
    67dc:	bl	0 <coda_type_set_read_type>
    67e0:	ldr	r1, [r5, r8]
    67e4:	mov	r2, #16
    67e8:	mov	r3, #0
    67ec:	ldr	r0, [r1, #520]	; 0x208
    67f0:	bl	0 <coda_type_set_bit_size>
    67f4:	ldr	r3, [r5, r8]
    67f8:	movw	r1, #0
    67fc:	movt	r1, #0
    6800:	ldr	r0, [r3, #520]	; 0x208
    6804:	bl	0 <coda_type_set_description>
    6808:	mov	r1, #2
    680c:	mov	r0, #7
    6810:	ldr	r4, [r5, r8]
    6814:	bl	0 <coda_type_number_new>
    6818:	ldr	r3, [r5, r8]
    681c:	mov	r1, #1
    6820:	str	r0, [r4, #524]	; 0x20c
    6824:	ldr	r0, [r3, #524]	; 0x20c
    6828:	bl	0 <coda_type_number_set_endianness>
    682c:	ldr	r3, [r5, r8]
    6830:	mov	r1, #1
    6834:	ldr	r0, [r3, #524]	; 0x20c
    6838:	bl	0 <coda_type_set_read_type>
    683c:	ldr	r1, [r5, r8]
    6840:	mov	r2, #8
    6844:	mov	r3, #0
    6848:	ldr	r0, [r1, #524]	; 0x20c
    684c:	bl	0 <coda_type_set_bit_size>
    6850:	ldr	r3, [r5, r8]
    6854:	movw	r1, #0
    6858:	movt	r1, #0
    685c:	ldr	r0, [r3, #524]	; 0x20c
    6860:	bl	0 <coda_type_set_description>
    6864:	mov	r1, #2
    6868:	mov	r0, #7
    686c:	ldr	r4, [r5, r8]
    6870:	bl	0 <coda_type_number_new>
    6874:	ldr	r3, [r5, r8]
    6878:	mov	r1, #1
    687c:	str	r0, [r4, #528]	; 0x210
    6880:	ldr	r0, [r3, #528]	; 0x210
    6884:	bl	0 <coda_type_number_set_endianness>
    6888:	ldr	r3, [r5, r8]
    688c:	mov	r1, #2
    6890:	ldr	r0, [r3, #528]	; 0x210
    6894:	bl	0 <coda_type_set_read_type>
    6898:	ldr	r1, [r5, r8]
    689c:	mov	r2, #16
    68a0:	mov	r3, #0
    68a4:	ldr	r0, [r1, #528]	; 0x210
    68a8:	bl	0 <coda_type_set_bit_size>
    68ac:	ldr	r3, [r5, r8]
    68b0:	movw	r1, #0
    68b4:	movt	r1, #0
    68b8:	ldr	r0, [r3, #528]	; 0x210
    68bc:	bl	0 <coda_type_set_description>
    68c0:	mov	r1, #3
    68c4:	mov	r0, #7
    68c8:	ldr	r4, [r5, r8]
    68cc:	bl	0 <coda_type_number_new>
    68d0:	ldr	r3, [r5, r8]
    68d4:	mov	r1, #1
    68d8:	str	r0, [r4, #532]	; 0x214
    68dc:	ldr	r0, [r3, #532]	; 0x214
    68e0:	bl	0 <coda_type_number_set_endianness>
    68e4:	ldr	r3, [r5, r8]
    68e8:	mov	r1, #8
    68ec:	ldr	r0, [r3, #532]	; 0x214
    68f0:	bl	0 <coda_type_set_read_type>
    68f4:	ldr	r1, [r5, r8]
    68f8:	mov	r2, #32
    68fc:	mov	r3, #0
    6900:	ldr	r0, [r1, #532]	; 0x214
    6904:	bl	0 <coda_type_set_bit_size>
    6908:	ldr	r3, [r5, r8]
    690c:	movw	r1, #0
    6910:	movt	r1, #0
    6914:	ldr	r0, [r3, #532]	; 0x214
    6918:	bl	0 <coda_type_set_description>
    691c:	ldr	r4, [r5, r8]
    6920:	mov	r0, #7
    6924:	bl	0 <coda_type_array_new>
    6928:	mov	r1, #3
    692c:	str	r0, [r4, #536]	; 0x218
    6930:	mov	r0, #7
    6934:	bl	0 <coda_type_number_new>
    6938:	mov	r4, r0
    693c:	mov	r1, #1
    6940:	bl	0 <coda_type_number_set_endianness>
    6944:	mov	r1, #8
    6948:	mov	r0, r4
    694c:	bl	0 <coda_type_set_read_type>
    6950:	mov	r2, #32
    6954:	mov	r0, r4
    6958:	mov	r3, #0
    695c:	bl	0 <coda_type_set_bit_size>
    6960:	ldr	r3, [r5, r8]
    6964:	mov	r1, r4
    6968:	ldr	r0, [r3, #536]	; 0x218
    696c:	bl	0 <coda_type_array_set_base_type>
    6970:	mov	r0, r4
    6974:	bl	0 <coda_type_release>
    6978:	ldr	r3, [r5, r8]
    697c:	mov	r1, #0
    6980:	ldr	r0, [r3, #536]	; 0x218
    6984:	bl	0 <coda_type_array_add_variable_dimension>
    6988:	ldr	r4, [r5, r8]
    698c:	mov	r0, #7
    6990:	bl	0 <coda_type_record_new>
    6994:	str	r0, [r4, #540]	; 0x21c
    6998:	movw	r0, #0
    699c:	movt	r0, #0
    69a0:	bl	0 <coda_type_record_field_new>
    69a4:	ldr	r3, [r5, r8]
    69a8:	mov	r4, r0
    69ac:	ldr	r1, [r3, #276]	; 0x114
    69b0:	bl	0 <coda_type_record_field_set_type>
    69b4:	ldr	r3, [r5, r8]
    69b8:	mov	r1, r4
    69bc:	ldr	r0, [r3, #540]	; 0x21c
    69c0:	bl	0 <coda_type_record_add_field>
    69c4:	movw	r0, #0
    69c8:	movt	r0, #0
    69cc:	bl	0 <coda_type_record_field_new>
    69d0:	ldr	r3, [r5, r8]
    69d4:	mov	r4, r0
    69d8:	ldr	r1, [r3, #448]	; 0x1c0
    69dc:	bl	0 <coda_type_record_field_set_type>
    69e0:	ldr	r3, [r5, r8]
    69e4:	mov	r1, r4
    69e8:	ldr	r0, [r3, #540]	; 0x21c
    69ec:	bl	0 <coda_type_record_add_field>
    69f0:	movw	r0, #0
    69f4:	movt	r0, #0
    69f8:	bl	0 <coda_type_record_field_new>
    69fc:	ldr	r3, [r5, r8]
    6a00:	mov	r4, r0
    6a04:	ldr	r1, [r3, #452]	; 0x1c4
    6a08:	bl	0 <coda_type_record_field_set_type>
    6a0c:	ldr	r3, [r5, r8]
    6a10:	mov	r1, r4
    6a14:	ldr	r0, [r3, #540]	; 0x21c
    6a18:	bl	0 <coda_type_record_add_field>
    6a1c:	movw	r0, #0
    6a20:	movt	r0, #0
    6a24:	bl	0 <coda_type_record_field_new>
    6a28:	ldr	r3, [r5, r8]
    6a2c:	mov	r4, r0
    6a30:	ldr	r1, [r3, #456]	; 0x1c8
    6a34:	bl	0 <coda_type_record_field_set_type>
    6a38:	ldr	r3, [r5, r8]
    6a3c:	mov	r1, r4
    6a40:	ldr	r0, [r3, #540]	; 0x21c
    6a44:	bl	0 <coda_type_record_add_field>
    6a48:	movw	r0, #0
    6a4c:	movt	r0, #0
    6a50:	bl	0 <coda_type_record_field_new>
    6a54:	ldr	r3, [r5, r8]
    6a58:	mov	r4, r0
    6a5c:	ldr	r1, [r3, #520]	; 0x208
    6a60:	bl	0 <coda_type_record_field_set_type>
    6a64:	ldr	r3, [r5, r8]
    6a68:	mov	r1, r4
    6a6c:	ldr	r0, [r3, #540]	; 0x21c
    6a70:	bl	0 <coda_type_record_add_field>
    6a74:	movw	r0, #0
    6a78:	movt	r0, #0
    6a7c:	bl	0 <coda_type_record_field_new>
    6a80:	ldr	r3, [r5, r8]
    6a84:	mov	r4, r0
    6a88:	ldr	r1, [r3, #360]	; 0x168
    6a8c:	bl	0 <coda_type_record_field_set_type>
    6a90:	ldr	r3, [r5, r8]
    6a94:	mov	r1, r4
    6a98:	ldr	r0, [r3, #540]	; 0x21c
    6a9c:	bl	0 <coda_type_record_add_field>
    6aa0:	movw	r0, #0
    6aa4:	movt	r0, #0
    6aa8:	bl	0 <coda_type_record_field_new>
    6aac:	ldr	r3, [r5, r8]
    6ab0:	mov	r4, r0
    6ab4:	ldr	r1, [r3, #364]	; 0x16c
    6ab8:	bl	0 <coda_type_record_field_set_type>
    6abc:	ldr	r3, [r5, r8]
    6ac0:	mov	r1, r4
    6ac4:	ldr	r0, [r3, #540]	; 0x21c
    6ac8:	bl	0 <coda_type_record_add_field>
    6acc:	movw	r0, #0
    6ad0:	movt	r0, #0
    6ad4:	bl	0 <coda_type_record_field_new>
    6ad8:	ldr	r3, [r5, r8]
    6adc:	mov	r4, r0
    6ae0:	ldr	r1, [r3, #368]	; 0x170
    6ae4:	bl	0 <coda_type_record_field_set_type>
    6ae8:	ldr	r3, [r5, r8]
    6aec:	mov	r1, r4
    6af0:	ldr	r0, [r3, #540]	; 0x21c
    6af4:	bl	0 <coda_type_record_add_field>
    6af8:	movw	r0, #0
    6afc:	movt	r0, #0
    6b00:	bl	0 <coda_type_record_field_new>
    6b04:	ldr	r3, [r5, r8]
    6b08:	mov	r4, r0
    6b0c:	ldr	r1, [r3, #372]	; 0x174
    6b10:	bl	0 <coda_type_record_field_set_type>
    6b14:	ldr	r3, [r5, r8]
    6b18:	mov	r1, r4
    6b1c:	ldr	r0, [r3, #540]	; 0x21c
    6b20:	bl	0 <coda_type_record_add_field>
    6b24:	movw	r0, #0
    6b28:	movt	r0, #0
    6b2c:	bl	0 <coda_type_record_field_new>
    6b30:	ldr	r3, [r5, r8]
    6b34:	mov	r4, r0
    6b38:	ldr	r1, [r3, #376]	; 0x178
    6b3c:	bl	0 <coda_type_record_field_set_type>
    6b40:	ldr	r3, [r5, r8]
    6b44:	mov	r1, r4
    6b48:	ldr	r0, [r3, #540]	; 0x21c
    6b4c:	bl	0 <coda_type_record_add_field>
    6b50:	movw	r0, #0
    6b54:	movt	r0, #0
    6b58:	bl	0 <coda_type_record_field_new>
    6b5c:	ldr	r3, [r5, r8]
    6b60:	mov	r4, r0
    6b64:	ldr	r1, [r3, #380]	; 0x17c
    6b68:	bl	0 <coda_type_record_field_set_type>
    6b6c:	ldr	r3, [r5, r8]
    6b70:	mov	r1, r4
    6b74:	ldr	r0, [r3, #540]	; 0x21c
    6b78:	bl	0 <coda_type_record_add_field>
    6b7c:	movw	r0, #0
    6b80:	movt	r0, #0
    6b84:	bl	0 <coda_type_record_field_new>
    6b88:	ldr	r3, [r5, r8]
    6b8c:	mov	r4, r0
    6b90:	ldr	r1, [r3, #384]	; 0x180
    6b94:	bl	0 <coda_type_record_field_set_type>
    6b98:	ldr	r3, [r5, r8]
    6b9c:	mov	r1, r4
    6ba0:	ldr	r0, [r3, #540]	; 0x21c
    6ba4:	bl	0 <coda_type_record_add_field>
    6ba8:	movw	r0, #0
    6bac:	movt	r0, #0
    6bb0:	bl	0 <coda_type_record_field_new>
    6bb4:	ldr	r3, [r5, r8]
    6bb8:	mov	r4, r0
    6bbc:	ldr	r1, [r3, #388]	; 0x184
    6bc0:	bl	0 <coda_type_record_field_set_type>
    6bc4:	ldr	r3, [r5, r8]
    6bc8:	mov	r1, r4
    6bcc:	ldr	r0, [r3, #540]	; 0x21c
    6bd0:	bl	0 <coda_type_record_add_field>
    6bd4:	movw	r0, #0
    6bd8:	movt	r0, #0
    6bdc:	bl	0 <coda_type_record_field_new>
    6be0:	ldr	r3, [r5, r8]
    6be4:	mov	r4, r0
    6be8:	ldr	r1, [r3, #392]	; 0x188
    6bec:	bl	0 <coda_type_record_field_set_type>
    6bf0:	ldr	r3, [r5, r8]
    6bf4:	mov	r1, r4
    6bf8:	ldr	r0, [r3, #540]	; 0x21c
    6bfc:	bl	0 <coda_type_record_add_field>
    6c00:	movw	r0, #0
    6c04:	movt	r0, #0
    6c08:	bl	0 <coda_type_record_field_new>
    6c0c:	ldr	r3, [r5, r8]
    6c10:	mov	r4, r0
    6c14:	ldr	r1, [r3, #396]	; 0x18c
    6c18:	bl	0 <coda_type_record_field_set_type>
    6c1c:	ldr	r3, [r5, r8]
    6c20:	mov	r1, r4
    6c24:	ldr	r0, [r3, #540]	; 0x21c
    6c28:	bl	0 <coda_type_record_add_field>
    6c2c:	movw	r0, #0
    6c30:	movt	r0, #0
    6c34:	bl	0 <coda_type_record_field_new>
    6c38:	ldr	r3, [r5, r8]
    6c3c:	mov	r4, r0
    6c40:	ldr	r1, [r3, #400]	; 0x190
    6c44:	bl	0 <coda_type_record_field_set_type>
    6c48:	ldr	r3, [r5, r8]
    6c4c:	mov	r1, r4
    6c50:	ldr	r0, [r3, #540]	; 0x21c
    6c54:	bl	0 <coda_type_record_add_field>
    6c58:	movw	r0, #0
    6c5c:	movt	r0, #0
    6c60:	bl	0 <coda_type_record_field_new>
    6c64:	ldr	r3, [r5, r8]
    6c68:	mov	r4, r0
    6c6c:	ldr	r1, [r3, #404]	; 0x194
    6c70:	bl	0 <coda_type_record_field_set_type>
    6c74:	ldr	r3, [r5, r8]
    6c78:	mov	r1, r4
    6c7c:	ldr	r0, [r3, #540]	; 0x21c
    6c80:	bl	0 <coda_type_record_add_field>
    6c84:	movw	r0, #0
    6c88:	movt	r0, #0
    6c8c:	bl	0 <coda_type_record_field_new>
    6c90:	ldr	r3, [r5, r8]
    6c94:	mov	r4, r0
    6c98:	ldr	r1, [r3, #408]	; 0x198
    6c9c:	bl	0 <coda_type_record_field_set_type>
    6ca0:	ldr	r3, [r5, r8]
    6ca4:	mov	r1, r4
    6ca8:	ldr	r0, [r3, #540]	; 0x21c
    6cac:	bl	0 <coda_type_record_add_field>
    6cb0:	movw	r0, #0
    6cb4:	movt	r0, #0
    6cb8:	bl	0 <coda_type_record_field_new>
    6cbc:	ldr	r3, [r5, r8]
    6cc0:	mov	r4, r0
    6cc4:	ldr	r1, [r3, #412]	; 0x19c
    6cc8:	bl	0 <coda_type_record_field_set_type>
    6ccc:	ldr	r3, [r5, r8]
    6cd0:	mov	r1, r4
    6cd4:	ldr	r0, [r3, #540]	; 0x21c
    6cd8:	bl	0 <coda_type_record_add_field>
    6cdc:	movw	r0, #0
    6ce0:	movt	r0, #0
    6ce4:	bl	0 <coda_type_record_field_new>
    6ce8:	ldr	r3, [r5, r8]
    6cec:	mov	r4, r0
    6cf0:	ldr	r1, [r3, #416]	; 0x1a0
    6cf4:	bl	0 <coda_type_record_field_set_type>
    6cf8:	ldr	r3, [r5, r8]
    6cfc:	mov	r1, r4
    6d00:	ldr	r0, [r3, #540]	; 0x21c
    6d04:	bl	0 <coda_type_record_add_field>
    6d08:	movw	r0, #0
    6d0c:	movt	r0, #0
    6d10:	bl	0 <coda_type_record_field_new>
    6d14:	ldr	r3, [r5, r8]
    6d18:	mov	r4, r0
    6d1c:	ldr	r1, [r3, #420]	; 0x1a4
    6d20:	bl	0 <coda_type_record_field_set_type>
    6d24:	ldr	r3, [r5, r8]
    6d28:	mov	r1, r4
    6d2c:	ldr	r0, [r3, #540]	; 0x21c
    6d30:	bl	0 <coda_type_record_add_field>
    6d34:	movw	r0, #0
    6d38:	movt	r0, #0
    6d3c:	bl	0 <coda_type_record_field_new>
    6d40:	ldr	r3, [r5, r8]
    6d44:	mov	r4, r0
    6d48:	ldr	r1, [r3, #424]	; 0x1a8
    6d4c:	bl	0 <coda_type_record_field_set_type>
    6d50:	ldr	r3, [r5, r8]
    6d54:	mov	r1, r4
    6d58:	ldr	r0, [r3, #540]	; 0x21c
    6d5c:	bl	0 <coda_type_record_add_field>
    6d60:	movw	r0, #0
    6d64:	movt	r0, #0
    6d68:	bl	0 <coda_type_record_field_new>
    6d6c:	ldr	r3, [r5, r8]
    6d70:	mov	r4, r0
    6d74:	ldr	r1, [r3, #428]	; 0x1ac
    6d78:	bl	0 <coda_type_record_field_set_type>
    6d7c:	mov	r0, r4
    6d80:	bl	0 <coda_type_record_field_set_optional>
    6d84:	ldr	r3, [r5, r8]
    6d88:	mov	r1, r4
    6d8c:	ldr	r0, [r3, #540]	; 0x21c
    6d90:	bl	0 <coda_type_record_add_field>
    6d94:	movw	r0, #0
    6d98:	movt	r0, #0
    6d9c:	bl	0 <coda_type_record_field_new>
    6da0:	ldr	r3, [r5, r8]
    6da4:	mov	r4, r0
    6da8:	ldr	r1, [r3, #432]	; 0x1b0
    6dac:	bl	0 <coda_type_record_field_set_type>
    6db0:	mov	r0, r4
    6db4:	bl	0 <coda_type_record_field_set_optional>
    6db8:	ldr	r3, [r5, r8]
    6dbc:	mov	r1, r4
    6dc0:	ldr	r0, [r3, #540]	; 0x21c
    6dc4:	bl	0 <coda_type_record_add_field>
    6dc8:	movw	r0, #0
    6dcc:	movt	r0, #0
    6dd0:	bl	0 <coda_type_record_field_new>
    6dd4:	ldr	r3, [r5, r8]
    6dd8:	mov	r4, r0
    6ddc:	ldr	r1, [r3, #436]	; 0x1b4
    6de0:	bl	0 <coda_type_record_field_set_type>
    6de4:	ldr	r3, [r5, r8]
    6de8:	mov	r1, r4
    6dec:	ldr	r0, [r3, #540]	; 0x21c
    6df0:	bl	0 <coda_type_record_add_field>
    6df4:	movw	r0, #0
    6df8:	movt	r0, #0
    6dfc:	bl	0 <coda_type_record_field_new>
    6e00:	ldr	r3, [r5, r8]
    6e04:	mov	r4, r0
    6e08:	ldr	r1, [r3, #444]	; 0x1bc
    6e0c:	bl	0 <coda_type_record_field_set_type>
    6e10:	mov	r0, r4
    6e14:	bl	0 <coda_type_record_field_set_optional>
    6e18:	ldr	r3, [r5, r8]
    6e1c:	mov	r1, r4
    6e20:	ldr	r0, [r3, #540]	; 0x21c
    6e24:	bl	0 <coda_type_record_add_field>
    6e28:	ldr	r4, [r5, r8]
    6e2c:	mov	r0, #7
    6e30:	bl	0 <coda_type_record_new>
    6e34:	str	r0, [r4, #544]	; 0x220
    6e38:	movw	r0, #0
    6e3c:	movt	r0, #0
    6e40:	bl	0 <coda_type_record_field_new>
    6e44:	ldr	r3, [r5, r8]
    6e48:	mov	r4, r0
    6e4c:	ldr	r1, [r3, #280]	; 0x118
    6e50:	bl	0 <coda_type_record_field_set_type>
    6e54:	ldr	r3, [r5, r8]
    6e58:	mov	r1, r4
    6e5c:	ldr	r0, [r3, #544]	; 0x220
    6e60:	bl	0 <coda_type_record_add_field>
    6e64:	movw	r0, #0
    6e68:	movt	r0, #0
    6e6c:	bl	0 <coda_type_record_field_new>
    6e70:	ldr	r3, [r5, r8]
    6e74:	mov	r4, r0
    6e78:	ldr	r1, [r3, #460]	; 0x1cc
    6e7c:	bl	0 <coda_type_record_field_set_type>
    6e80:	ldr	r3, [r5, r8]
    6e84:	mov	r1, r4
    6e88:	ldr	r0, [r3, #544]	; 0x220
    6e8c:	bl	0 <coda_type_record_add_field>
    6e90:	movw	r0, #0
    6e94:	movt	r0, #0
    6e98:	bl	0 <coda_type_record_field_new>
    6e9c:	ldr	r3, [r5, r8]
    6ea0:	mov	r4, r0
    6ea4:	ldr	r1, [r3, #464]	; 0x1d0
    6ea8:	bl	0 <coda_type_record_field_set_type>
    6eac:	ldr	r3, [r5, r8]
    6eb0:	mov	r1, r4
    6eb4:	ldr	r0, [r3, #544]	; 0x220
    6eb8:	bl	0 <coda_type_record_add_field>
    6ebc:	movw	r0, #0
    6ec0:	movt	r0, #0
    6ec4:	bl	0 <coda_type_record_field_new>
    6ec8:	ldr	r3, [r5, r8]
    6ecc:	mov	r4, r0
    6ed0:	ldr	r1, [r3, #468]	; 0x1d4
    6ed4:	bl	0 <coda_type_record_field_set_type>
    6ed8:	ldr	r3, [r5, r8]
    6edc:	mov	r1, r4
    6ee0:	ldr	r0, [r3, #544]	; 0x220
    6ee4:	bl	0 <coda_type_record_add_field>
    6ee8:	movw	r0, #0
    6eec:	movt	r0, #0
    6ef0:	bl	0 <coda_type_record_field_new>
    6ef4:	ldr	r3, [r5, r8]
    6ef8:	mov	r4, r0
    6efc:	ldr	r1, [r3, #472]	; 0x1d8
    6f00:	bl	0 <coda_type_record_field_set_type>
    6f04:	ldr	r3, [r5, r8]
    6f08:	mov	r1, r4
    6f0c:	ldr	r0, [r3, #544]	; 0x220
    6f10:	bl	0 <coda_type_record_add_field>
    6f14:	movw	r0, #0
    6f18:	movt	r0, #0
    6f1c:	bl	0 <coda_type_record_field_new>
    6f20:	ldr	r3, [r5, r8]
    6f24:	mov	r4, r0
    6f28:	ldr	r1, [r3, #476]	; 0x1dc
    6f2c:	bl	0 <coda_type_record_field_set_type>
    6f30:	ldr	r3, [r5, r8]
    6f34:	mov	r1, r4
    6f38:	ldr	r0, [r3, #544]	; 0x220
    6f3c:	bl	0 <coda_type_record_add_field>
    6f40:	movw	r0, #0
    6f44:	movt	r0, #0
    6f48:	bl	0 <coda_type_record_field_new>
    6f4c:	ldr	r3, [r5, r8]
    6f50:	mov	r4, r0
    6f54:	ldr	r1, [r3, #480]	; 0x1e0
    6f58:	bl	0 <coda_type_record_field_set_type>
    6f5c:	ldr	r3, [r5, r8]
    6f60:	mov	r1, r4
    6f64:	ldr	r0, [r3, #544]	; 0x220
    6f68:	bl	0 <coda_type_record_add_field>
    6f6c:	movw	r0, #0
    6f70:	movt	r0, #0
    6f74:	bl	0 <coda_type_record_field_new>
    6f78:	ldr	r3, [r5, r8]
    6f7c:	mov	r4, r0
    6f80:	ldr	r1, [r3, #484]	; 0x1e4
    6f84:	bl	0 <coda_type_record_field_set_type>
    6f88:	ldr	r3, [r5, r8]
    6f8c:	mov	r1, r4
    6f90:	ldr	r0, [r3, #544]	; 0x220
    6f94:	bl	0 <coda_type_record_add_field>
    6f98:	movw	r0, #0
    6f9c:	movt	r0, #0
    6fa0:	bl	0 <coda_type_record_field_new>
    6fa4:	ldr	r3, [r5, r8]
    6fa8:	mov	r4, r0
    6fac:	ldr	r1, [r3, #488]	; 0x1e8
    6fb0:	bl	0 <coda_type_record_field_set_type>
    6fb4:	ldr	r3, [r5, r8]
    6fb8:	mov	r1, r4
    6fbc:	ldr	r0, [r3, #544]	; 0x220
    6fc0:	bl	0 <coda_type_record_add_field>
    6fc4:	movw	r0, #0
    6fc8:	movt	r0, #0
    6fcc:	bl	0 <coda_type_record_field_new>
    6fd0:	ldr	r3, [r5, r8]
    6fd4:	mov	r4, r0
    6fd8:	ldr	r1, [r3, #492]	; 0x1ec
    6fdc:	bl	0 <coda_type_record_field_set_type>
    6fe0:	ldr	r3, [r5, r8]
    6fe4:	mov	r1, r4
    6fe8:	ldr	r0, [r3, #544]	; 0x220
    6fec:	bl	0 <coda_type_record_add_field>
    6ff0:	movw	r0, #0
    6ff4:	movt	r0, #0
    6ff8:	bl	0 <coda_type_record_field_new>
    6ffc:	ldr	r3, [r5, r8]
    7000:	mov	r4, r0
    7004:	ldr	r1, [r3, #496]	; 0x1f0
    7008:	bl	0 <coda_type_record_field_set_type>
    700c:	ldr	r3, [r5, r8]
    7010:	mov	r1, r4
    7014:	ldr	r0, [r3, #544]	; 0x220
    7018:	bl	0 <coda_type_record_add_field>
    701c:	movw	r0, #0
    7020:	movt	r0, #0
    7024:	bl	0 <coda_type_record_field_new>
    7028:	ldr	r3, [r5, r8]
    702c:	mov	r4, r0
    7030:	ldr	r1, [r3, #500]	; 0x1f4
    7034:	bl	0 <coda_type_record_field_set_type>
    7038:	ldr	r3, [r5, r8]
    703c:	mov	r1, r4
    7040:	ldr	r0, [r3, #544]	; 0x220
    7044:	bl	0 <coda_type_record_add_field>
    7048:	movw	r0, #0
    704c:	movt	r0, #0
    7050:	bl	0 <coda_type_record_field_new>
    7054:	ldr	r3, [r5, r8]
    7058:	mov	r4, r0
    705c:	ldr	r1, [r3, #504]	; 0x1f8
    7060:	bl	0 <coda_type_record_field_set_type>
    7064:	ldr	r3, [r5, r8]
    7068:	mov	r1, r4
    706c:	ldr	r0, [r3, #544]	; 0x220
    7070:	bl	0 <coda_type_record_add_field>
    7074:	movw	r0, #0
    7078:	movt	r0, #0
    707c:	bl	0 <coda_type_record_field_new>
    7080:	ldr	r3, [r5, r8]
    7084:	mov	r4, r0
    7088:	ldr	r1, [r3, #508]	; 0x1fc
    708c:	bl	0 <coda_type_record_field_set_type>
    7090:	ldr	r3, [r5, r8]
    7094:	mov	r1, r4
    7098:	ldr	r0, [r3, #544]	; 0x220
    709c:	bl	0 <coda_type_record_add_field>
    70a0:	movw	r0, #0
    70a4:	movt	r0, #0
    70a8:	bl	0 <coda_type_record_field_new>
    70ac:	ldr	r3, [r5, r8]
    70b0:	mov	r4, r0
    70b4:	ldr	r1, [r3, #516]	; 0x204
    70b8:	bl	0 <coda_type_record_field_set_type>
    70bc:	mov	r0, r4
    70c0:	bl	0 <coda_type_record_field_set_optional>
    70c4:	ldr	r3, [r5, r8]
    70c8:	mov	r1, r4
    70cc:	ldr	r0, [r3, #544]	; 0x220
    70d0:	bl	0 <coda_type_record_add_field>
    70d4:	movw	r0, #0
    70d8:	movt	r0, #0
    70dc:	bl	0 <coda_type_record_field_new>
    70e0:	ldr	r3, [r5, r8]
    70e4:	mov	r4, r0
    70e8:	ldr	r1, [r3, #524]	; 0x20c
    70ec:	bl	0 <coda_type_record_field_set_type>
    70f0:	mov	r0, r4
    70f4:	bl	0 <coda_type_record_field_set_hidden>
    70f8:	ldr	r3, [r5, r8]
    70fc:	mov	r1, r4
    7100:	ldr	r0, [r3, #544]	; 0x220
    7104:	bl	0 <coda_type_record_add_field>
    7108:	movw	r0, #0
    710c:	movt	r0, #0
    7110:	bl	0 <coda_type_record_field_new>
    7114:	ldr	r3, [r5, r8]
    7118:	mov	r4, r0
    711c:	ldr	r1, [r3, #320]	; 0x140
    7120:	bl	0 <coda_type_record_field_set_type>
    7124:	mov	r0, r4
    7128:	bl	0 <coda_type_record_field_set_hidden>
    712c:	ldr	r3, [r5, r8]
    7130:	mov	r1, r4
    7134:	ldr	r0, [r3, #544]	; 0x220
    7138:	bl	0 <coda_type_record_add_field>
    713c:	movw	r0, #0
    7140:	movt	r0, #0
    7144:	bl	0 <coda_type_record_field_new>
    7148:	ldr	r3, [r5, r8]
    714c:	mov	r4, r0
    7150:	ldr	r1, [r3, #528]	; 0x210
    7154:	bl	0 <coda_type_record_field_set_type>
    7158:	mov	r0, r4
    715c:	bl	0 <coda_type_record_field_set_hidden>
    7160:	ldr	r3, [r5, r8]
    7164:	mov	r1, r4
    7168:	ldr	r0, [r3, #544]	; 0x220
    716c:	bl	0 <coda_type_record_add_field>
    7170:	movw	r0, #0
    7174:	movt	r0, #0
    7178:	bl	0 <coda_type_record_field_new>
    717c:	ldr	r3, [r5, r8]
    7180:	mov	r4, r0
    7184:	ldr	r1, [r3, #532]	; 0x214
    7188:	bl	0 <coda_type_record_field_set_type>
    718c:	mov	r0, r4
    7190:	bl	0 <coda_type_record_field_set_hidden>
    7194:	ldr	r3, [r5, r8]
    7198:	mov	r1, r4
    719c:	ldr	r0, [r3, #544]	; 0x220
    71a0:	bl	0 <coda_type_record_add_field>
    71a4:	movw	r0, #0
    71a8:	movt	r0, #0
    71ac:	bl	0 <coda_type_record_field_new>
    71b0:	ldr	r3, [r5, r8]
    71b4:	mov	r4, r0
    71b8:	ldr	r1, [r3, #536]	; 0x218
    71bc:	bl	0 <coda_type_record_field_set_type>
    71c0:	ldr	r3, [r5, r8]
    71c4:	mov	r1, r4
    71c8:	ldr	r0, [r3, #544]	; 0x220
    71cc:	bl	0 <coda_type_record_add_field>
    71d0:	mov	r0, #7
    71d4:	ldr	r4, [r5, r8]
    71d8:	bl	0 <coda_type_array_new>
    71dc:	ldr	r3, [r5, r8]
    71e0:	str	r0, [r4, #548]	; 0x224
    71e4:	ldr	r1, [r3, #348]	; 0x15c
    71e8:	ldr	r0, [r3, #548]	; 0x224
    71ec:	bl	0 <coda_type_array_set_base_type>
    71f0:	ldr	r3, [r5, r8]
    71f4:	mov	r1, #0
    71f8:	ldr	r0, [r3, #548]	; 0x224
    71fc:	bl	0 <coda_type_array_add_variable_dimension>
    7200:	mov	r0, #7
    7204:	ldr	r4, [r5, r8]
    7208:	bl	0 <coda_type_array_new>
    720c:	ldr	r3, [r5, r8]
    7210:	str	r0, [r4, #552]	; 0x228
    7214:	ldr	r1, [r3, #540]	; 0x21c
    7218:	ldr	r0, [r3, #552]	; 0x228
    721c:	bl	0 <coda_type_array_set_base_type>
    7220:	ldr	r3, [r5, r8]
    7224:	mov	r1, #0
    7228:	ldr	r0, [r3, #552]	; 0x228
    722c:	bl	0 <coda_type_array_add_variable_dimension>
    7230:	mov	r0, #7
    7234:	ldr	r4, [r5, r8]
    7238:	bl	0 <coda_type_array_new>
    723c:	ldr	r3, [r5, r8]
    7240:	str	r0, [r4, #556]	; 0x22c
    7244:	ldr	r1, [r3, #544]	; 0x220
    7248:	ldr	r0, [r3, #556]	; 0x22c
    724c:	bl	0 <coda_type_array_set_base_type>
    7250:	ldr	r3, [r5, r8]
    7254:	mov	r1, #0
    7258:	ldr	r0, [r3, #556]	; 0x22c
    725c:	bl	0 <coda_type_array_add_variable_dimension>
    7260:	ldr	r4, [r5, r8]
    7264:	mov	r0, #7
    7268:	bl	0 <coda_type_record_new>
    726c:	str	r0, [r4, #560]	; 0x230
    7270:	movw	r0, #0
    7274:	movt	r0, #0
    7278:	bl	0 <coda_type_record_field_new>
    727c:	ldr	r3, [r5, r8]
    7280:	mov	r4, r0
    7284:	ldr	r1, [r3, #284]	; 0x11c
    7288:	bl	0 <coda_type_record_field_set_type>
    728c:	ldr	r3, [r5, r8]
    7290:	mov	r1, r4
    7294:	ldr	r0, [r3, #560]	; 0x230
    7298:	bl	0 <coda_type_record_add_field>
    729c:	movw	r0, #0
    72a0:	movt	r0, #0
    72a4:	bl	0 <coda_type_record_field_new>
    72a8:	ldr	r3, [r5, r8]
    72ac:	mov	r4, r0
    72b0:	ldr	r1, [r3, #324]	; 0x144
    72b4:	bl	0 <coda_type_record_field_set_type>
    72b8:	ldr	r3, [r5, r8]
    72bc:	mov	r1, r4
    72c0:	ldr	r0, [r3, #560]	; 0x230
    72c4:	bl	0 <coda_type_record_add_field>
    72c8:	movw	r0, #0
    72cc:	movt	r0, #0
    72d0:	bl	0 <coda_type_record_field_new>
    72d4:	ldr	r3, [r5, r8]
    72d8:	mov	r4, r0
    72dc:	ldr	r1, [r3, #288]	; 0x120
    72e0:	bl	0 <coda_type_record_field_set_type>
    72e4:	ldr	r3, [r5, r8]
    72e8:	mov	r1, r4
    72ec:	ldr	r0, [r3, #560]	; 0x230
    72f0:	bl	0 <coda_type_record_add_field>
    72f4:	movw	r0, #0
    72f8:	movt	r0, #0
    72fc:	bl	0 <coda_type_record_field_new>
    7300:	ldr	r3, [r5, r8]
    7304:	mov	r4, r0
    7308:	ldr	r1, [r3, #316]	; 0x13c
    730c:	bl	0 <coda_type_record_field_set_type>
    7310:	ldr	r3, [r5, r8]
    7314:	mov	r1, r4
    7318:	ldr	r0, [r3, #560]	; 0x230
    731c:	bl	0 <coda_type_record_add_field>
    7320:	movw	r0, #0
    7324:	movt	r0, #0
    7328:	bl	0 <coda_type_record_field_new>
    732c:	ldr	r3, [r5, r8]
    7330:	mov	r4, r0
    7334:	ldr	r1, [r3, #328]	; 0x148
    7338:	bl	0 <coda_type_record_field_set_type>
    733c:	ldr	r3, [r5, r8]
    7340:	mov	r1, r4
    7344:	ldr	r0, [r3, #560]	; 0x230
    7348:	bl	0 <coda_type_record_add_field>
    734c:	movw	r0, #0
    7350:	movt	r0, #0
    7354:	bl	0 <coda_type_record_field_new>
    7358:	ldr	r3, [r5, r8]
    735c:	mov	r4, r0
    7360:	ldr	r1, [r3, #332]	; 0x14c
    7364:	bl	0 <coda_type_record_field_set_type>
    7368:	ldr	r3, [r5, r8]
    736c:	mov	r1, r4
    7370:	ldr	r0, [r3, #560]	; 0x230
    7374:	bl	0 <coda_type_record_add_field>
    7378:	movw	r0, #0
    737c:	movt	r0, #0
    7380:	bl	0 <coda_type_record_field_new>
    7384:	ldr	r3, [r5, r8]
    7388:	mov	r4, r0
    738c:	ldr	r1, [r3, #336]	; 0x150
    7390:	bl	0 <coda_type_record_field_set_type>
    7394:	ldr	r3, [r5, r8]
    7398:	mov	r1, r4
    739c:	ldr	r0, [r3, #560]	; 0x230
    73a0:	bl	0 <coda_type_record_add_field>
    73a4:	movw	r0, #0
    73a8:	movt	r0, #0
    73ac:	bl	0 <coda_type_record_field_new>
    73b0:	ldr	r3, [r5, r8]
    73b4:	mov	r4, r0
    73b8:	ldr	r1, [r3, #292]	; 0x124
    73bc:	bl	0 <coda_type_record_field_set_type>
    73c0:	ldr	r3, [r5, r8]
    73c4:	mov	r1, r4
    73c8:	ldr	r0, [r3, #560]	; 0x230
    73cc:	bl	0 <coda_type_record_add_field>
    73d0:	movw	r0, #0
    73d4:	movt	r0, #0
    73d8:	bl	0 <coda_type_record_field_new>
    73dc:	ldr	r3, [r5, r8]
    73e0:	mov	r4, r0
    73e4:	ldr	r1, [r3, #296]	; 0x128
    73e8:	bl	0 <coda_type_record_field_set_type>
    73ec:	ldr	r3, [r5, r8]
    73f0:	mov	r1, r4
    73f4:	ldr	r0, [r3, #560]	; 0x230
    73f8:	bl	0 <coda_type_record_add_field>
    73fc:	movw	r0, #0
    7400:	movt	r0, #0
    7404:	bl	0 <coda_type_record_field_new>
    7408:	ldr	r3, [r5, r8]
    740c:	mov	r4, r0
    7410:	ldr	r1, [r3, #300]	; 0x12c
    7414:	bl	0 <coda_type_record_field_set_type>
    7418:	ldr	r3, [r5, r8]
    741c:	mov	r1, r4
    7420:	ldr	r0, [r3, #560]	; 0x230
    7424:	bl	0 <coda_type_record_add_field>
    7428:	movw	r0, #0
    742c:	movt	r0, #0
    7430:	bl	0 <coda_type_record_field_new>
    7434:	ldr	r3, [r5, r8]
    7438:	mov	r4, r0
    743c:	ldr	r1, [r3, #304]	; 0x130
    7440:	bl	0 <coda_type_record_field_set_type>
    7444:	ldr	r3, [r5, r8]
    7448:	mov	r1, r4
    744c:	ldr	r0, [r3, #560]	; 0x230
    7450:	bl	0 <coda_type_record_add_field>
    7454:	movw	r0, #0
    7458:	movt	r0, #0
    745c:	bl	0 <coda_type_record_field_new>
    7460:	ldr	r3, [r5, r8]
    7464:	mov	r4, r0
    7468:	ldr	r1, [r3, #308]	; 0x134
    746c:	bl	0 <coda_type_record_field_set_type>
    7470:	ldr	r3, [r5, r8]
    7474:	mov	r1, r4
    7478:	ldr	r0, [r3, #560]	; 0x230
    747c:	bl	0 <coda_type_record_add_field>
    7480:	movw	r0, #0
    7484:	movt	r0, #0
    7488:	bl	0 <coda_type_record_field_new>
    748c:	ldr	r3, [r5, r8]
    7490:	mov	r4, r0
    7494:	ldr	r1, [r3, #312]	; 0x138
    7498:	bl	0 <coda_type_record_field_set_type>
    749c:	ldr	r3, [r5, r8]
    74a0:	mov	r1, r4
    74a4:	ldr	r0, [r3, #560]	; 0x230
    74a8:	bl	0 <coda_type_record_add_field>
    74ac:	movw	r0, #0
    74b0:	movt	r0, #0
    74b4:	bl	0 <coda_type_record_field_new>
    74b8:	ldr	r3, [r5, r8]
    74bc:	mov	r4, r0
    74c0:	ldr	r1, [r3, #340]	; 0x154
    74c4:	bl	0 <coda_type_record_field_set_type>
    74c8:	ldr	r3, [r5, r8]
    74cc:	mov	r1, r4
    74d0:	ldr	r0, [r3, #560]	; 0x230
    74d4:	bl	0 <coda_type_record_add_field>
    74d8:	movw	r0, #0
    74dc:	movt	r0, #0
    74e0:	bl	0 <coda_type_record_field_new>
    74e4:	ldr	r3, [r5, r8]
    74e8:	mov	r4, r0
    74ec:	ldr	r1, [r3, #344]	; 0x158
    74f0:	bl	0 <coda_type_record_field_set_type>
    74f4:	ldr	r3, [r5, r8]
    74f8:	mov	r1, r4
    74fc:	ldr	r0, [r3, #560]	; 0x230
    7500:	bl	0 <coda_type_record_add_field>
    7504:	movw	r0, #0
    7508:	movt	r0, #0
    750c:	bl	0 <coda_type_record_field_new>
    7510:	ldr	r3, [r5, r8]
    7514:	mov	r4, r0
    7518:	ldr	r1, [r3, #548]	; 0x224
    751c:	bl	0 <coda_type_record_field_set_type>
    7520:	ldr	r3, [r5, r8]
    7524:	mov	r1, r4
    7528:	ldr	r0, [r3, #560]	; 0x230
    752c:	bl	0 <coda_type_record_add_field>
    7530:	movw	r0, #0
    7534:	movt	r0, #0
    7538:	bl	0 <coda_type_record_field_new>
    753c:	ldr	r3, [r5, r8]
    7540:	mov	r4, r0
    7544:	ldr	r1, [r3, #552]	; 0x228
    7548:	bl	0 <coda_type_record_field_set_type>
    754c:	ldr	r3, [r5, r8]
    7550:	mov	r1, r4
    7554:	ldr	r0, [r3, #560]	; 0x230
    7558:	bl	0 <coda_type_record_add_field>
    755c:	movw	r0, #0
    7560:	movt	r0, #0
    7564:	bl	0 <coda_type_record_field_new>
    7568:	ldr	r3, [r5, r8]
    756c:	mov	r4, r0
    7570:	ldr	r1, [r3, #556]	; 0x22c
    7574:	bl	0 <coda_type_record_field_set_type>
    7578:	ldr	r3, [r5, r8]
    757c:	mov	r1, r4
    7580:	ldr	r0, [r3, #560]	; 0x230
    7584:	bl	0 <coda_type_record_add_field>
    7588:	ldr	r4, [r5, r8]
    758c:	mov	r0, #7
    7590:	bl	0 <coda_type_union_new>
    7594:	str	r0, [r4, #564]	; 0x234
    7598:	movw	r0, #0
    759c:	movt	r0, #0
    75a0:	bl	0 <coda_type_record_field_new>
    75a4:	ldr	r3, [r5, r8]
    75a8:	mov	r4, r0
    75ac:	ldr	r1, [r3, #272]	; 0x110
    75b0:	bl	0 <coda_type_record_field_set_type>
    75b4:	mov	r0, r4
    75b8:	bl	0 <coda_type_record_field_set_optional>
    75bc:	ldr	r3, [r5, r8]
    75c0:	mov	r1, r4
    75c4:	ldr	r0, [r3, #564]	; 0x234
    75c8:	bl	0 <coda_type_record_add_field>
    75cc:	movw	r0, #0
    75d0:	movt	r0, #0
    75d4:	bl	0 <coda_type_record_field_new>
    75d8:	ldr	r3, [r5, r8]
    75dc:	mov	r4, r0
    75e0:	ldr	r1, [r3, #560]	; 0x230
    75e4:	bl	0 <coda_type_record_field_set_type>
    75e8:	mov	r0, r4
    75ec:	bl	0 <coda_type_record_field_set_optional>
    75f0:	ldr	r3, [r5, r8]
    75f4:	mov	r1, r4
    75f8:	ldr	r0, [r3, #564]	; 0x234
    75fc:	bl	0 <coda_type_record_add_field>
    7600:	mov	r0, #7
    7604:	ldr	r4, [r5, r8]
    7608:	bl	0 <coda_type_array_new>
    760c:	ldr	r3, [r5, r8]
    7610:	str	r0, [r4, #568]	; 0x238
    7614:	ldr	r1, [r3, #564]	; 0x234
    7618:	ldr	r0, [r3, #568]	; 0x238
    761c:	bl	0 <coda_type_array_set_base_type>
    7620:	ldr	r3, [r5, r8]
    7624:	mov	r1, #0
    7628:	ldr	r0, [r3, #568]	; 0x238
    762c:	bl	0 <coda_type_array_add_variable_dimension>
    7630:	b	199c <coda_grib_reopen+0x34>
    7634:	ldr	r3, [sp, #28]
    7638:	adds	r3, r3, #2
    763c:	str	r3, [sp, #16]
    7640:	ldr	r3, [sp, #32]
    7644:	sub	r3, r3, #6
    7648:	str	r3, [sp, #200]	; 0xc8
    764c:	adc	r3, r7, #0
    7650:	str	r3, [sp, #20]
    7654:	mov	r3, #0
    7658:	str	r3, [sp, #212]	; 0xd4
    765c:	ldrd	r2, [sp, #16]
    7660:	strd	r2, [sp, #80]	; 0x50
    7664:	mov	r3, #1
    7668:	str	r3, [sp, #176]	; 0xb0
    766c:	b	3454 <coda_grib_reopen+0x1aec>
    7670:	movw	r1, #0
    7674:	movt	r1, #0
    7678:	ldr	r2, [sp, #72]	; 0x48
    767c:	movw	r0, #65236	; 0xfed4
    7680:	movt	r0, #65535	; 0xffff
    7684:	bl	0 <coda_set_error>
    7688:	mov	r0, r6
    768c:	bl	1904 <coda_grib_close>
    7690:	mvn	r0, #0
    7694:	b	1b00 <coda_grib_reopen+0x198>
    7698:	ldrd	r2, [sp, #80]	; 0x50
    769c:	mvn	r1, #0
    76a0:	mvn	r0, #0
    76a4:	cmp	r3, r1
    76a8:	cmpeq	r2, r0
    76ac:	beq	7ab0 <coda_grib_reopen+0x6148>
    76b0:	ldr	r3, [sp, #28]
    76b4:	adds	r3, r3, #2
    76b8:	str	r3, [sp, #16]
    76bc:	mov	r3, #1
    76c0:	str	r3, [sp, #176]	; 0xb0
    76c4:	adc	r3, r7, #0
    76c8:	str	r3, [sp, #20]
    76cc:	b	3454 <coda_grib_reopen+0x1aec>
    76d0:	beq	2fac <coda_grib_reopen+0x1644>
    76d4:	sub	r3, r3, #1
    76d8:	vdiv.f64	d8, d8, d10
    76dc:	uxtb	r3, r3
    76e0:	cmp	r3, #0
    76e4:	sxtb	r3, r3
    76e8:	bne	76d4 <coda_grib_reopen+0x5d6c>
    76ec:	b	2fac <coda_grib_reopen+0x1644>
    76f0:	beq	2f54 <coda_grib_reopen+0x15ec>
    76f4:	sub	r3, r3, #1
    76f8:	vdiv.f64	d9, d9, d10
    76fc:	uxtb	r3, r3
    7700:	cmp	r3, #0
    7704:	sxtb	r3, r3
    7708:	bne	76f4 <coda_grib_reopen+0x5d8c>
    770c:	b	2f54 <coda_grib_reopen+0x15ec>
    7710:	mov	r0, r6
    7714:	bl	1904 <coda_grib_close>
    7718:	mvn	r0, #0
    771c:	b	1b00 <coda_grib_reopen+0x198>
    7720:	mov	r3, r4
    7724:	movw	r1, #0
    7728:	movt	r1, #0
    772c:	movw	r0, #65236	; 0xfed4
    7730:	movt	r0, #65535	; 0xffff
    7734:	mvn	r2, #45	; 0x2d
    7738:	mov	r7, r6
    773c:	bl	0 <coda_set_error>
    7740:	b	347c <coda_grib_reopen+0x1b14>
    7744:	bl	0 <__errno_location>
    7748:	ldr	r0, [r0]
    774c:	bl	0 <strerror>
    7750:	mov	r2, r0
    7754:	movw	r1, #0
    7758:	movt	r1, #0
    775c:	mvn	r0, #21
    7760:	bl	0 <coda_set_error>
    7764:	mov	r0, r4
    7768:	bl	1904 <coda_grib_close>
    776c:	mvn	r0, #0
    7770:	b	1b00 <coda_grib_reopen+0x198>
    7774:	mov	r3, r4
    7778:	movw	r1, #0
    777c:	movt	r1, #0
    7780:	movw	r0, #65236	; 0xfed4
    7784:	movt	r0, #65535	; 0xffff
    7788:	mvn	r2, #44	; 0x2c
    778c:	mov	r7, r6
    7790:	bl	0 <coda_set_error>
    7794:	b	347c <coda_grib_reopen+0x1b14>
    7798:	mov	r2, r4
    779c:	mvn	r0, #199	; 0xc7
    77a0:	ldr	r3, [sp, #72]	; 0x48
    77a4:	movw	r1, #0
    77a8:	movt	r1, #0
    77ac:	bl	0 <coda_set_error>
    77b0:	mov	r0, r6
    77b4:	bl	1904 <coda_grib_close>
    77b8:	mvn	r0, #0
    77bc:	b	1b00 <coda_grib_reopen+0x198>
    77c0:	mov	r7, r6
    77c4:	mov	r2, r8
    77c8:	mov	r3, sl
    77cc:	movw	r1, #0
    77d0:	movt	r1, #0
    77d4:	movw	r0, #65236	; 0xfed4
    77d8:	movt	r0, #65535	; 0xffff
    77dc:	bl	0 <coda_set_error>
    77e0:	mov	r0, r4
    77e4:	bl	0 <coda_dynamic_type_delete>
    77e8:	b	347c <coda_grib_reopen+0x1b14>
    77ec:	mov	r7, r6
    77f0:	mov	r2, r1
    77f4:	b	77c8 <coda_grib_reopen+0x5e60>
    77f8:	mov	r0, r4
    77fc:	mov	r7, r6
    7800:	bl	0 <coda_dynamic_type_delete>
    7804:	b	347c <coda_grib_reopen+0x1b14>
    7808:	movw	r1, #0
    780c:	movt	r1, #0
    7810:	movw	r0, #65236	; 0xfed4
    7814:	movt	r0, #65535	; 0xffff
    7818:	mov	r7, r6
    781c:	bl	0 <coda_set_error>
    7820:	b	347c <coda_grib_reopen+0x1b14>
    7824:	ldr	r0, [sp, #180]	; 0xb4
    7828:	bl	0 <coda_dynamic_type_delete>
    782c:	mov	r0, r6
    7830:	bl	1904 <coda_grib_close>
    7834:	mvn	r0, #0
    7838:	b	1b00 <coda_grib_reopen+0x198>
    783c:	mov	r3, r4
    7840:	movw	r1, #0
    7844:	movt	r1, #0
    7848:	movw	r0, #65236	; 0xfed4
    784c:	movt	r0, #65535	; 0xffff
    7850:	mvn	r2, #43	; 0x2b
    7854:	mov	r7, r6
    7858:	bl	0 <coda_set_error>
    785c:	b	347c <coda_grib_reopen+0x1b14>
    7860:	add	r2, sp, #244	; 0xf4
    7864:	ldrd	r0, [sp, #16]
    7868:	mov	r7, r6
    786c:	bl	0 <coda_str64>
    7870:	ldrb	r2, [sp, #296]	; 0x128
    7874:	add	r3, sp, #244	; 0xf4
    7878:	movw	r1, #0
    787c:	movt	r1, #0
    7880:	movw	r0, #65236	; 0xfed4
    7884:	movt	r0, #65535	; 0xffff
    7888:	sub	r2, r2, #48	; 0x30
    788c:	bl	0 <coda_set_error>
    7890:	b	347c <coda_grib_reopen+0x1b14>
    7894:	mov	r0, r4
    7898:	mov	r1, r8
    789c:	add	r2, sp, #244	; 0xf4
    78a0:	mov	r7, r6
    78a4:	bl	0 <coda_str64>
    78a8:	ldrb	r2, [sp, #300]	; 0x12c
    78ac:	add	r3, sp, #244	; 0xf4
    78b0:	movw	r1, #0
    78b4:	movt	r1, #0
    78b8:	movw	r0, #65236	; 0xfed4
    78bc:	movt	r0, #65535	; 0xffff
    78c0:	sub	r2, r2, #48	; 0x30
    78c4:	bl	0 <coda_set_error>
    78c8:	b	347c <coda_grib_reopen+0x1b14>
    78cc:	mov	r7, r6
    78d0:	movw	r0, #2332	; 0x91c
    78d4:	mov	r2, r1
    78d8:	movw	r3, #0
    78dc:	movt	r3, #0
    78e0:	str	r0, [sp]
    78e4:	movw	r1, #0
    78e8:	movt	r1, #0
    78ec:	mvn	r0, #0
    78f0:	bl	0 <coda_set_error>
    78f4:	b	347c <coda_grib_reopen+0x1b14>
    78f8:	mov	r3, r4
    78fc:	movw	r1, #0
    7900:	movt	r1, #0
    7904:	movw	r0, #65236	; 0xfed4
    7908:	movt	r0, #65535	; 0xffff
    790c:	mvn	r2, #40	; 0x28
    7910:	mov	r7, r6
    7914:	bl	0 <coda_set_error>
    7918:	b	347c <coda_grib_reopen+0x1b14>
    791c:	mov	r0, sl
    7920:	mov	r7, r6
    7924:	bl	0 <free>
    7928:	b	347c <coda_grib_reopen+0x1b14>
    792c:	mov	r2, r1
    7930:	movw	r0, #65236	; 0xfed4
    7934:	movt	r0, #65535	; 0xffff
    7938:	movw	r1, #0
    793c:	movt	r1, #0
    7940:	mov	r7, r6
    7944:	bl	0 <coda_set_error>
    7948:	b	347c <coda_grib_reopen+0x1b14>
    794c:	mov	r3, r4
    7950:	movw	r1, #0
    7954:	movt	r1, #0
    7958:	movw	r0, #65236	; 0xfed4
    795c:	movt	r0, #65535	; 0xffff
    7960:	mvn	r2, #42	; 0x2a
    7964:	mov	r7, r6
    7968:	bl	0 <coda_set_error>
    796c:	b	347c <coda_grib_reopen+0x1b14>
    7970:	mov	r2, r1
    7974:	movw	r0, #65236	; 0xfed4
    7978:	movt	r0, #65535	; 0xffff
    797c:	movw	r1, #0
    7980:	movt	r1, #0
    7984:	mov	r7, r6
    7988:	bl	0 <coda_set_error>
    798c:	b	347c <coda_grib_reopen+0x1b14>
    7990:	movw	r3, #0
    7994:	movt	r3, #0
    7998:	movw	r1, #0
    799c:	movt	r1, #0
    79a0:	mov	r0, #227	; 0xe3
    79a4:	mov	r2, #572	; 0x23c
    79a8:	str	r0, [sp]
    79ac:	mvn	r0, #0
    79b0:	bl	0 <coda_set_error>
    79b4:	ldr	r3, [sp, #92]	; 0x5c
    79b8:	ldr	r0, [r3]
    79bc:	bl	0 <coda_close>
    79c0:	mvn	r0, #0
    79c4:	b	1b00 <coda_grib_reopen+0x198>
    79c8:	mov	r2, lr
    79cc:	movw	r1, #0
    79d0:	movt	r1, #0
    79d4:	movw	r0, #65236	; 0xfed4
    79d8:	movt	r0, #65535	; 0xffff
    79dc:	mov	r7, r6
    79e0:	bl	0 <coda_set_error>
    79e4:	b	347c <coda_grib_reopen+0x1b14>
    79e8:	mov	r3, r4
    79ec:	movw	r1, #0
    79f0:	movt	r1, #0
    79f4:	movw	r0, #65236	; 0xfed4
    79f8:	movt	r0, #65535	; 0xffff
    79fc:	mvn	r2, #41	; 0x29
    7a00:	mov	r7, r6
    7a04:	bl	0 <coda_set_error>
    7a08:	b	347c <coda_grib_reopen+0x1b14>
    7a0c:	mov	r3, r7
    7a10:	mov	r7, r6
    7a14:	mov	r0, r3
    7a18:	bl	0 <free>
    7a1c:	b	347c <coda_grib_reopen+0x1b14>
    7a20:	mov	r7, r6
    7a24:	movw	r0, #2940	; 0xb7c
    7a28:	ldr	r2, [sp, #200]	; 0xc8
    7a2c:	b	78d8 <coda_grib_reopen+0x5f70>
    7a30:	movw	r3, #0
    7a34:	movt	r3, #0
    7a38:	movw	r1, #0
    7a3c:	movt	r1, #0
    7a40:	movw	r0, #3019	; 0xbcb
    7a44:	mov	r2, #56	; 0x38
    7a48:	b	79a8 <coda_grib_reopen+0x6040>
    7a4c:	movw	r1, #0
    7a50:	movt	r1, #0
    7a54:	ldr	r3, [pc, #112]	; 7acc <coda_grib_reopen+0x6164>
    7a58:	movw	r0, #0
    7a5c:	movt	r0, #0
    7a60:	mov	r2, #62	; 0x3e
    7a64:	bl	0 <__assert_fail>
    7a68:	movw	r3, #3039	; 0xbdf
    7a6c:	mvn	r0, #0
    7a70:	movw	r2, #0
    7a74:	movt	r2, #0
    7a78:	movw	r1, #0
    7a7c:	movt	r1, #0
    7a80:	bl	0 <coda_set_error>
    7a84:	mov	r0, r7
    7a88:	bl	1904 <coda_grib_close>
    7a8c:	mvn	r0, #0
    7a90:	b	1b00 <coda_grib_reopen+0x198>
    7a94:	movw	r1, #0
    7a98:	movt	r1, #0
    7a9c:	movw	r0, #65236	; 0xfed4
    7aa0:	movt	r0, #65535	; 0xffff
    7aa4:	mov	r7, r6
    7aa8:	bl	0 <coda_set_error>
    7aac:	b	347c <coda_grib_reopen+0x1b14>
    7ab0:	movw	r1, #0
    7ab4:	movt	r1, #0
    7ab8:	movw	r0, #65236	; 0xfed4
    7abc:	movt	r0, #65535	; 0xffff
    7ac0:	mov	r7, r6
    7ac4:	bl	0 <coda_set_error>
    7ac8:	b	347c <coda_grib_reopen+0x1b14>
    7acc:	.word	0x0000000c
