
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_newline.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda__pcre_is_newline>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	ldrb	lr, [r0]
   c:	mov	ip, r0
  10:	cmp	r1, #2
  14:	bne	30 <coda__pcre_is_newline+0x30>
  18:	cmp	lr, #13
  1c:	beq	78 <coda__pcre_is_newline+0x78>
  20:	mov	r0, #0
  24:	cmp	lr, #10
  28:	beq	3c <coda__pcre_is_newline+0x3c>
  2c:	pop	{fp, pc}
  30:	sub	r0, lr, #10
  34:	cmp	r0, #3
  38:	bcs	48 <coda__pcre_is_newline+0x48>
  3c:	mov	r0, #1
  40:	str	r0, [r3]
  44:	pop	{fp, pc}
  48:	cmp	lr, #13
  4c:	beq	78 <coda__pcre_is_newline+0x78>
  50:	mov	r0, #0
  54:	cmp	lr, #133	; 0x85
  58:	popne	{fp, pc}
  5c:	ldr	r0, [fp, #8]
  60:	mov	r1, #2
  64:	cmp	r0, #0
  68:	mov	r0, #1
  6c:	movweq	r1, #1
  70:	str	r1, [r3]
  74:	pop	{fp, pc}
  78:	sub	r1, r2, #1
  7c:	mov	r0, #1
  80:	cmp	r1, ip
  84:	mov	r1, #1
  88:	bls	9c <coda__pcre_is_newline+0x9c>
  8c:	ldrb	r2, [ip, #1]
  90:	mov	r1, #1
  94:	cmp	r2, #10
  98:	movweq	r1, #2
  9c:	str	r1, [r3]
  a0:	pop	{fp, pc}

000000a4 <coda__pcre_was_newline>:
  a4:	push	{r4, sl, fp, lr}
  a8:	add	fp, sp, #8
  ac:	mov	lr, r0
  b0:	mov	ip, r0
  b4:	cmp	r1, #2
  b8:	ldrb	r4, [lr, #-1]!
  bc:	bne	fc <coda__pcre_was_newline+0x58>
  c0:	cmp	r4, #13
  c4:	beq	108 <coda__pcre_was_newline+0x64>
  c8:	mov	r0, #0
  cc:	cmp	r4, #10
  d0:	bne	168 <coda__pcre_was_newline+0xc4>
  d4:	mov	r0, #1
  d8:	cmp	lr, r2
  dc:	mov	r1, #1
  e0:	bls	f4 <coda__pcre_was_newline+0x50>
  e4:	ldrb	r2, [ip, #-2]
  e8:	mov	r1, #1
  ec:	cmp	r2, #13
  f0:	movweq	r1, #2
  f4:	str	r1, [r3]
  f8:	pop	{r4, sl, fp, pc}
  fc:	sub	r0, r4, #11
 100:	cmp	r0, #3
 104:	bcs	114 <coda__pcre_was_newline+0x70>
 108:	mov	r0, #1
 10c:	str	r0, [r3]
 110:	pop	{r4, sl, fp, pc}
 114:	cmp	r4, #133	; 0x85
 118:	beq	150 <coda__pcre_was_newline+0xac>
 11c:	mov	r0, #0
 120:	cmp	r4, #10
 124:	popne	{r4, sl, fp, pc}
 128:	mov	r0, #1
 12c:	cmp	lr, r2
 130:	mov	r1, #1
 134:	bls	148 <coda__pcre_was_newline+0xa4>
 138:	ldrb	r2, [ip, #-2]
 13c:	mov	r1, #1
 140:	cmp	r2, #13
 144:	movweq	r1, #2
 148:	str	r1, [r3]
 14c:	pop	{r4, sl, fp, pc}
 150:	ldr	r0, [fp, #8]
 154:	mov	r1, #2
 158:	cmp	r0, #0
 15c:	mov	r0, #1
 160:	movweq	r1, #1
 164:	str	r1, [r3]
 168:	pop	{r4, sl, fp, pc}
