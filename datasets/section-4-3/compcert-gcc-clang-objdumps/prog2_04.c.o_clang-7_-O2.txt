
../compcert-repos/prog2/CMakeFiles/0.4.dir/Aula00_Conceitos_base/04.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ordenado>:
   0:	mov	r2, #1
   4:	cmp	r1, #2
   8:	blt	40 <ordenado+0x40>
   c:	ldr	ip, [r0]
  10:	mov	r2, #1
  14:	ldr	r3, [r0, r2, lsl #2]
  18:	cmp	r3, ip
  1c:	blt	3c <ordenado+0x3c>
  20:	add	r2, r2, #1
  24:	mov	ip, r3
  28:	cmp	r2, r1
  2c:	blt	14 <ordenado+0x14>
  30:	mov	r2, #1
  34:	mov	r0, r2
  38:	bx	lr
  3c:	mov	r2, #0
  40:	mov	r0, r2
  44:	bx	lr

00000048 <main>:
  48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
  4c:	add	fp, sp, #24
  50:	sub	sp, sp, #8
  54:	movw	r0, #0
  58:	movt	r0, #0
  5c:	bl	0 <printf>
  60:	movw	r0, #0
  64:	add	r1, sp, #4
  68:	movt	r0, #0
  6c:	bl	0 <__isoc99_scanf>
  70:	ldr	r4, [sp, #4]
  74:	cmp	r4, #101	; 0x65
  78:	blt	a0 <main+0x58>
  7c:	movw	r0, #0
  80:	movt	r0, #0
  84:	bl	0 <printf>
  88:	mov	r0, #100	; 0x64
  8c:	str	r0, [sp, #4]
  90:	mov	r0, #400	; 0x190
  94:	bl	0 <malloc>
  98:	mov	r8, r0
  9c:	b	b4 <main+0x6c>
  a0:	lsl	r0, r4, #2
  a4:	bl	0 <malloc>
  a8:	mov	r8, r0
  ac:	cmp	r4, #1
  b0:	blt	124 <main+0xdc>
  b4:	movw	r6, #0
  b8:	movw	r7, #0
  bc:	mov	r5, #0
  c0:	mov	r4, r8
  c4:	movt	r6, #0
  c8:	movt	r7, #0
  cc:	add	r5, r5, #1
  d0:	mov	r0, r6
  d4:	mov	r1, r5
  d8:	bl	0 <printf>
  dc:	mov	r0, r7
  e0:	mov	r1, r4
  e4:	bl	0 <__isoc99_scanf>
  e8:	ldr	r0, [sp, #4]
  ec:	add	r4, r4, #4
  f0:	cmp	r5, r0
  f4:	blt	cc <main+0x84>
  f8:	cmp	r0, #2
  fc:	blt	124 <main+0xdc>
 100:	ldr	r2, [r8]
 104:	mov	r1, #1
 108:	ldr	r3, [r8, r1, lsl #2]
 10c:	cmp	r3, r2
 110:	blt	180 <main+0x138>
 114:	add	r1, r1, #1
 118:	mov	r2, r3
 11c:	cmp	r1, r0
 120:	blt	108 <main+0xc0>
 124:	movw	r0, #0
 128:	movt	r0, #0
 12c:	bl	0 <printf>
 130:	ldr	r5, [sp, #4]
 134:	add	r0, r8, r5, lsl #2
 138:	cmp	r5, #2
 13c:	ldr	r1, [r0, #-4]
 140:	blt	168 <main+0x120>
 144:	movw	r4, #0
 148:	sub	r6, r8, #8
 14c:	movt	r4, #0
 150:	mov	r0, r4
 154:	bl	0 <printf>
 158:	ldr	r1, [r6, r5, lsl #2]
 15c:	sub	r5, r5, #1
 160:	cmp	r5, #1
 164:	bgt	150 <main+0x108>
 168:	movw	r0, #0
 16c:	movt	r0, #0
 170:	bl	0 <printf>
 174:	mov	r0, #0
 178:	sub	sp, fp, #24
 17c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 180:	movw	r0, #0
 184:	movt	r0, #0
 188:	bl	0 <puts>
 18c:	b	174 <main+0x12c>
