
../compcert-repos/prog2/CMakeFiles/1.1.1.dir/Aula01_Ficheiros_e_Formatos_de_dados/01.1.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <in_array>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	cmp	r2, #0
   c:	movlt	r0, #0
  10:	poplt	{fp, pc}
  14:	mov	lr, #0
  18:	ldr	r3, [r1, lr, lsl #2]
  1c:	cmp	r3, r0
  20:	moveq	r0, #1
  24:	popeq	{fp, pc}
  28:	cmp	lr, r2
  2c:	add	ip, lr, #1
  30:	movge	r0, #0
  34:	mov	lr, ip
  38:	popge	{fp, pc}
  3c:	b	18 <in_array+0x18>

00000040 <main>:
  40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
  44:	add	fp, sp, #24
  48:	vpush	{d8-d9}
  4c:	sub	sp, sp, #104	; 0x68
  50:	movw	r0, #0
  54:	movw	r1, #0
  58:	movt	r0, #0
  5c:	movt	r1, #0
  60:	bl	0 <fopen>
  64:	mov	r8, sp
  68:	mov	r4, r0
  6c:	vmov.i32	q8, #0	; 0x00000000
  70:	mov	r7, #0
  74:	add	r0, r8, #80	; 0x50
  78:	mov	r1, r8
  7c:	str	r7, [sp, #96]	; 0x60
  80:	vst1.64	{d16-d17}, [r0]
  84:	add	r0, r8, #64	; 0x40
  88:	vst1.64	{d16-d17}, [r0]
  8c:	add	r0, r8, #48	; 0x30
  90:	vst1.64	{d16-d17}, [r0]
  94:	add	r0, r8, #32
  98:	vst1.64	{d16-d17}, [r0]
  9c:	add	r0, r8, #16
  a0:	vst1.64	{d16-d17}, [r0]
  a4:	mov	r0, #100	; 0x64
  a8:	vst1.64	{d16-d17}, [r1], r0
  ac:	mov	r0, r4
  b0:	str	r7, [r1]
  b4:	bl	0 <getc>
  b8:	cmn	r0, #1
  bc:	mov	r5, #0
  c0:	beq	100 <main+0xc0>
  c4:	mov	r5, #0
  c8:	bl	0 <__ctype_tolower_loc>
  cc:	mov	r6, r0
  d0:	ldr	r0, [r6]
  d4:	ldr	r0, [r0, #388]	; 0x184
  d8:	sub	r0, r0, #97	; 0x61
  dc:	cmp	r0, #25
  e0:	ldrls	r1, [r8, r0, lsl #2]
  e4:	addls	r5, r5, #1
  e8:	addls	r1, r1, #1
  ec:	strls	r1, [r8, r0, lsl #2]
  f0:	mov	r0, r4
  f4:	bl	0 <getc>
  f8:	cmn	r0, #1
  fc:	bne	d0 <main+0x90>
 100:	mov	r0, r4
 104:	bl	0 <fclose>
 108:	movw	r0, #0
 10c:	movt	r0, #0
 110:	bl	0 <puts>
 114:	movw	r0, #0
 118:	mov	r1, r5
 11c:	movt	r0, #0
 120:	bl	0 <printf>
 124:	vldr	s18, [pc, #80]	; 17c <main+0x13c>
 128:	movw	r4, #0
 12c:	vmov	s0, r5
 130:	vcvt.f32.s32	s16, s0
 134:	movt	r4, #0
 138:	add	r0, r8, r7, lsl #2
 13c:	add	r1, r7, #97	; 0x61
 140:	vldr	s0, [r0]
 144:	mov	r0, r4
 148:	vcvt.f32.s32	s0, s0
 14c:	vdiv.f32	s0, s0, s16
 150:	vmul.f32	s0, s0, s18
 154:	vcvt.f64.f32	d16, s0
 158:	vmov	r2, r3, d16
 15c:	bl	0 <printf>
 160:	add	r7, r7, #1
 164:	cmp	r7, #26
 168:	bne	138 <main+0xf8>
 16c:	mov	r0, #0
 170:	sub	sp, fp, #40	; 0x28
 174:	vpop	{d8-d9}
 178:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 17c:	.word	0x42c80000
