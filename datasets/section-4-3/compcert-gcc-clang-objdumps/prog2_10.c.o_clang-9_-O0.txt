
../compcert-repos/prog2/CMakeFiles/0.10.dir/Aula00_Conceitos_base/10.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <nova_tarefa>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #16
   c:	str	r0, [sp, #8]
  10:	ldr	r1, [sp, #8]
  14:	ldr	r0, [sp, #8]
  18:	add	r2, r0, #30
  1c:	ldr	r0, [sp, #8]
  20:	add	r3, r0, #60	; 0x3c
  24:	ldr	r0, [sp, #8]
  28:	add	r0, r0, #64	; 0x40
  2c:	movw	ip, #0
  30:	movt	ip, #0
  34:	str	r0, [sp, #4]
  38:	mov	r0, ip
  3c:	ldr	ip, [sp, #4]
  40:	str	ip, [sp]
  44:	bl	0 <__isoc99_scanf>
  48:	cmp	r0, #4
  4c:	bne	5c <nova_tarefa+0x5c>
  50:	movw	r0, #1
  54:	str	r0, [fp, #-4]
  58:	b	64 <nova_tarefa+0x64>
  5c:	movw	r0, #0
  60:	str	r0, [fp, #-4]
  64:	ldr	r0, [fp, #-4]
  68:	mov	sp, fp
  6c:	pop	{fp, pc}

00000070 <ler_tarefas>:
  70:	push	{fp, lr}
  74:	mov	fp, sp
  78:	sub	sp, sp, #16
  7c:	str	r0, [fp, #-4]
  80:	movw	r0, #0
  84:	str	r0, [sp, #8]
  88:	ldr	r0, [fp, #-4]
  8c:	ldr	r1, [sp, #8]
  90:	movw	r2, #68	; 0x44
  94:	mul	r1, r1, r2
  98:	add	r0, r0, r1
  9c:	bl	0 <nova_tarefa>
  a0:	cmp	r0, #0
  a4:	movw	r0, #0
  a8:	str	r0, [sp, #4]
  ac:	beq	c4 <ler_tarefas+0x54>
  b0:	ldr	r0, [sp, #8]
  b4:	cmp	r0, #100	; 0x64
  b8:	movw	r0, #0
  bc:	movlt	r0, #1
  c0:	str	r0, [sp, #4]
  c4:	ldr	r0, [sp, #4]
  c8:	tst	r0, #1
  cc:	beq	e0 <ler_tarefas+0x70>
  d0:	ldr	r0, [sp, #8]
  d4:	add	r0, r0, #1
  d8:	str	r0, [sp, #8]
  dc:	b	88 <ler_tarefas+0x18>
  e0:	ldr	r0, [sp, #8]
  e4:	mov	sp, fp
  e8:	pop	{fp, pc}

000000ec <lista_tarefas>:
  ec:	push	{fp, lr}
  f0:	mov	fp, sp
  f4:	sub	sp, sp, #24
  f8:	str	r0, [fp, #-4]
  fc:	str	r1, [fp, #-8]
 100:	movw	r0, #0
 104:	str	r0, [sp, #12]
 108:	ldr	r0, [sp, #12]
 10c:	ldr	r1, [fp, #-8]
 110:	cmp	r0, r1
 114:	bge	1a0 <lista_tarefas+0xb4>
 118:	ldr	r0, [fp, #-4]
 11c:	ldr	r1, [sp, #12]
 120:	movw	r2, #68	; 0x44
 124:	mul	r1, r1, r2
 128:	add	r1, r0, r1
 12c:	ldr	r0, [fp, #-4]
 130:	ldr	r3, [sp, #12]
 134:	mul	r3, r3, r2
 138:	add	r0, r0, r3
 13c:	add	r0, r0, #30
 140:	ldr	r3, [fp, #-4]
 144:	ldr	ip, [sp, #12]
 148:	mul	ip, ip, r2
 14c:	add	r3, r3, ip
 150:	ldr	r3, [r3, #60]	; 0x3c
 154:	ldr	ip, [fp, #-4]
 158:	ldr	lr, [sp, #12]
 15c:	mul	r2, lr, r2
 160:	add	r2, ip, r2
 164:	ldr	r2, [r2, #64]	; 0x40
 168:	movw	ip, #0
 16c:	movt	ip, #0
 170:	str	r0, [sp, #8]
 174:	mov	r0, ip
 178:	ldr	ip, [sp, #8]
 17c:	str	r2, [sp, #4]
 180:	mov	r2, ip
 184:	ldr	lr, [sp, #4]
 188:	str	lr, [sp]
 18c:	bl	0 <printf>
 190:	ldr	r0, [sp, #12]
 194:	add	r0, r0, #1
 198:	str	r0, [sp, #12]
 19c:	b	108 <lista_tarefas+0x1c>
 1a0:	mov	sp, fp
 1a4:	pop	{fp, pc}

000001a8 <analisa_tarefas>:
 1a8:	push	{fp, lr}
 1ac:	mov	fp, sp
 1b0:	sub	sp, sp, #24
 1b4:	str	r0, [fp, #-4]
 1b8:	str	r1, [fp, #-8]
 1bc:	str	r2, [sp, #12]
 1c0:	movw	r0, #0
 1c4:	str	r0, [sp, #4]
 1c8:	str	r0, [sp]
 1cc:	str	r0, [sp, #8]
 1d0:	ldr	r0, [sp, #8]
 1d4:	ldr	r1, [fp, #-8]
 1d8:	cmp	r0, r1
 1dc:	bge	26c <analisa_tarefas+0xc4>
 1e0:	ldr	r0, [fp, #-4]
 1e4:	ldr	r1, [sp, #8]
 1e8:	movw	r2, #68	; 0x44
 1ec:	mul	r1, r1, r2
 1f0:	add	r0, r0, r1
 1f4:	ldr	r0, [r0, #60]	; 0x3c
 1f8:	ldr	r1, [sp, #4]
 1fc:	add	r0, r1, r0
 200:	str	r0, [sp, #4]
 204:	ldr	r0, [fp, #-4]
 208:	ldr	r1, [sp, #8]
 20c:	mul	r1, r1, r2
 210:	add	r0, r0, r1
 214:	ldr	r0, [r0, #60]	; 0x3c
 218:	ldr	r1, [sp]
 21c:	cmp	r0, r1
 220:	ble	258 <analisa_tarefas+0xb0>
 224:	ldr	r0, [fp, #-4]
 228:	ldr	r1, [sp, #8]
 22c:	movw	r2, #68	; 0x44
 230:	mul	r1, r1, r2
 234:	add	r0, r0, r1
 238:	ldr	r0, [r0, #60]	; 0x3c
 23c:	str	r0, [sp]
 240:	ldr	r0, [sp, #12]
 244:	ldr	r1, [fp, #-4]
 248:	ldr	r3, [sp, #8]
 24c:	mul	r3, r3, r2
 250:	add	r1, r1, r3
 254:	bl	0 <memcpy>
 258:	b	25c <analisa_tarefas+0xb4>
 25c:	ldr	r0, [sp, #8]
 260:	add	r0, r0, #1
 264:	str	r0, [sp, #8]
 268:	b	1d0 <analisa_tarefas+0x28>
 26c:	ldr	r0, [sp, #4]
 270:	vmov	s0, r0
 274:	vcvt.f32.s32	s0, s0
 278:	ldr	r0, [sp, #8]
 27c:	vmov	s2, r0
 280:	vcvt.f32.s32	s2, s2
 284:	vdiv.f32	s0, s0, s2
 288:	mov	sp, fp
 28c:	pop	{fp, pc}

00000290 <main>:
 290:	push	{r4, r5, fp, lr}
 294:	add	fp, sp, #8
 298:	sub	sp, sp, #744	; 0x2e8
 29c:	sub	sp, sp, #6144	; 0x1800
 2a0:	add	r0, sp, #84	; 0x54
 2a4:	bl	70 <ler_tarefas>
 2a8:	add	r1, sp, #84	; 0x54
 2ac:	str	r0, [fp, #-12]
 2b0:	ldr	r0, [fp, #-12]
 2b4:	str	r0, [sp, #12]
 2b8:	mov	r0, r1
 2bc:	ldr	r1, [sp, #12]
 2c0:	bl	ec <lista_tarefas>
 2c4:	ldr	r1, [fp, #-12]
 2c8:	movw	r0, #0
 2cc:	movt	r0, #0
 2d0:	bl	0 <printf>
 2d4:	add	r1, sp, #84	; 0x54
 2d8:	ldr	r2, [fp, #-12]
 2dc:	str	r0, [sp, #8]
 2e0:	mov	r0, r1
 2e4:	mov	r1, r2
 2e8:	add	r2, sp, #16
 2ec:	bl	1a8 <analisa_tarefas>
 2f0:	vcvt.f64.f32	d16, s0
 2f4:	movw	r0, #0
 2f8:	movt	r0, #0
 2fc:	vmov	r2, r3, d16
 300:	bl	0 <printf>
 304:	add	r1, sp, #16
 308:	movw	r2, #0
 30c:	movt	r2, #0
 310:	str	r0, [sp, #4]
 314:	mov	r0, r2
 318:	bl	0 <printf>
 31c:	movw	r1, #0
 320:	str	r0, [sp]
 324:	mov	r0, r1
 328:	sub	sp, fp, #8
 32c:	pop	{r4, r5, fp, pc}
