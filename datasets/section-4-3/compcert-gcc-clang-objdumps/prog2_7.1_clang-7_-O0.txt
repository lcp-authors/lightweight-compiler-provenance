
../compcert-repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010e28 <.init>:
   10e28:	push	{r3, lr}
   10e2c:	bl	10f38 <_start@@Base+0x3c>
   10e30:	pop	{r3, pc}

Disassembly of section .plt:

00010e34 <strcmp@plt-0x14>:
   10e34:	push	{lr}		; (str lr, [sp, #-4]!)
   10e38:	ldr	lr, [pc, #4]	; 10e44 <strcmp@plt-0x4>
   10e3c:	add	lr, pc, lr
   10e40:	ldr	pc, [lr, #8]!
   10e44:			; <UNDEFINED> instruction: 0x000121bc

00010e48 <strcmp@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #73728	; 0x12000
   10e50:	ldr	pc, [ip, #444]!	; 0x1bc

00010e54 <printf@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #73728	; 0x12000
   10e5c:	ldr	pc, [ip, #436]!	; 0x1b4

00010e60 <fopen@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #73728	; 0x12000
   10e68:	ldr	pc, [ip, #428]!	; 0x1ac

00010e6c <free@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #73728	; 0x12000
   10e74:	ldr	pc, [ip, #420]!	; 0x1a4

00010e78 <fgets@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #73728	; 0x12000
   10e80:	ldr	pc, [ip, #412]!	; 0x19c

00010e84 <memcpy@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #73728	; 0x12000
   10e8c:	ldr	pc, [ip, #404]!	; 0x194

00010e90 <realloc@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #73728	; 0x12000
   10e98:	ldr	pc, [ip, #396]!	; 0x18c

00010e9c <strcpy@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #73728	; 0x12000
   10ea4:	ldr	pc, [ip, #388]!	; 0x184

00010ea8 <malloc@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #73728	; 0x12000
   10eb0:	ldr	pc, [ip, #380]!	; 0x17c

00010eb4 <__libc_start_main@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #73728	; 0x12000
   10ebc:	ldr	pc, [ip, #372]!	; 0x174

00010ec0 <__gmon_start__@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #73728	; 0x12000
   10ec8:	ldr	pc, [ip, #364]!	; 0x16c

00010ecc <strlen@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #73728	; 0x12000
   10ed4:	ldr	pc, [ip, #356]!	; 0x164

00010ed8 <fclose@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #73728	; 0x12000
   10ee0:	ldr	pc, [ip, #348]!	; 0x15c

00010ee4 <strtok@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #73728	; 0x12000
   10eec:	ldr	pc, [ip, #340]!	; 0x154

00010ef0 <abort@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #73728	; 0x12000
   10ef8:	ldr	pc, [ip, #332]!	; 0x14c

Disassembly of section .text:

00010efc <_start@@Base>:
   10efc:	mov	fp, #0
   10f00:	mov	lr, #0
   10f04:	pop	{r1}		; (ldr r1, [sp], #4)
   10f08:	mov	r2, sp
   10f0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f10:	push	{r0}		; (str r0, [sp, #-4]!)
   10f14:	ldr	ip, [pc, #16]	; 10f2c <_start@@Base+0x30>
   10f18:	push	{ip}		; (str ip, [sp, #-4]!)
   10f1c:	ldr	r0, [pc, #12]	; 10f30 <_start@@Base+0x34>
   10f20:	ldr	r3, [pc, #12]	; 10f34 <_start@@Base+0x38>
   10f24:	bl	10eb4 <__libc_start_main@plt>
   10f28:	bl	10ef0 <abort@plt>
   10f2c:	andeq	r2, r1, ip, ror #16
   10f30:	andeq	r0, r1, ip, ror #31
   10f34:	andeq	r2, r1, ip, lsl #16
   10f38:	ldr	r3, [pc, #20]	; 10f54 <_start@@Base+0x58>
   10f3c:	ldr	r2, [pc, #20]	; 10f58 <_start@@Base+0x5c>
   10f40:	add	r3, pc, r3
   10f44:	ldr	r2, [r3, r2]
   10f48:	cmp	r2, #0
   10f4c:	bxeq	lr
   10f50:	b	10ec0 <__gmon_start__@plt>
   10f54:	strheq	r2, [r1], -r8
   10f58:	andeq	r0, r0, r8, asr #32
   10f5c:	ldr	r0, [pc, #24]	; 10f7c <_start@@Base+0x80>
   10f60:	ldr	r3, [pc, #24]	; 10f80 <_start@@Base+0x84>
   10f64:	cmp	r3, r0
   10f68:	bxeq	lr
   10f6c:	ldr	r3, [pc, #16]	; 10f84 <_start@@Base+0x88>
   10f70:	cmp	r3, #0
   10f74:	bxeq	lr
   10f78:	bx	r3
   10f7c:	andeq	r3, r2, r4, asr r0
   10f80:	andeq	r3, r2, r4, asr r0
   10f84:	andeq	r0, r0, r0
   10f88:	ldr	r0, [pc, #36]	; 10fb4 <_start@@Base+0xb8>
   10f8c:	ldr	r1, [pc, #36]	; 10fb8 <_start@@Base+0xbc>
   10f90:	sub	r1, r1, r0
   10f94:	asr	r1, r1, #2
   10f98:	add	r1, r1, r1, lsr #31
   10f9c:	asrs	r1, r1, #1
   10fa0:	bxeq	lr
   10fa4:	ldr	r3, [pc, #16]	; 10fbc <_start@@Base+0xc0>
   10fa8:	cmp	r3, #0
   10fac:	bxeq	lr
   10fb0:	bx	r3
   10fb4:	andeq	r3, r2, r4, asr r0
   10fb8:	andeq	r3, r2, r4, asr r0
   10fbc:	andeq	r0, r0, r0
   10fc0:	push	{r4, lr}
   10fc4:	ldr	r4, [pc, #24]	; 10fe4 <_start@@Base+0xe8>
   10fc8:	ldrb	r3, [r4]
   10fcc:	cmp	r3, #0
   10fd0:	popne	{r4, pc}
   10fd4:	bl	10f5c <_start@@Base+0x60>
   10fd8:	mov	r3, #1
   10fdc:	strb	r3, [r4]
   10fe0:	pop	{r4, pc}
   10fe4:	andeq	r3, r2, r4, asr r0
   10fe8:	b	10f88 <_start@@Base+0x8c>

00010fec <main@@Base>:
   10fec:	push	{r4, r5, fp, lr}
   10ff0:	add	fp, sp, #8
   10ff4:	sub	sp, sp, #240	; 0xf0
   10ff8:	movw	r0, #0
   10ffc:	str	r0, [fp, #-12]
   11000:	movw	r0, #10364	; 0x287c
   11004:	movt	r0, #1
   11008:	bl	10e54 <printf@plt>
   1100c:	movw	lr, #8028	; 0x1f5c
   11010:	movt	lr, #1
   11014:	movw	r1, #10464	; 0x28e0
   11018:	movt	r1, #1
   1101c:	sub	r2, fp, #52	; 0x34
   11020:	str	r0, [sp, #72]	; 0x48
   11024:	mov	r0, r2
   11028:	movw	r2, #40	; 0x28
   1102c:	str	lr, [sp, #68]	; 0x44
   11030:	bl	10e84 <memcpy@plt>
   11034:	ldr	r0, [sp, #68]	; 0x44
   11038:	blx	r0
   1103c:	str	r0, [sp, #88]	; 0x58
   11040:	movw	r0, #0
   11044:	str	r0, [sp, #92]	; 0x5c
   11048:	ldr	r0, [sp, #92]	; 0x5c
   1104c:	cmp	r0, #10
   11050:	bge	11080 <main@@Base+0x94>
   11054:	ldr	r0, [sp, #88]	; 0x58
   11058:	ldr	r1, [sp, #92]	; 0x5c
   1105c:	sub	r2, fp, #52	; 0x34
   11060:	add	r1, r2, r1, lsl #2
   11064:	ldr	r1, [r1]
   11068:	bl	1236c <bst_insere@@Base>
   1106c:	str	r0, [sp, #64]	; 0x40
   11070:	ldr	r0, [sp, #92]	; 0x5c
   11074:	add	r0, r0, #1
   11078:	str	r0, [sp, #92]	; 0x5c
   1107c:	b	11048 <main@@Base+0x5c>
   11080:	ldr	r0, [sp, #88]	; 0x58
   11084:	ldr	r0, [r0]
   11088:	bl	1273c <bst_altura@@Base>
   1108c:	movw	lr, #10389	; 0x2895
   11090:	movt	lr, #1
   11094:	str	r0, [sp, #60]	; 0x3c
   11098:	mov	r0, lr
   1109c:	ldr	r1, [sp, #60]	; 0x3c
   110a0:	bl	10e54 <printf@plt>
   110a4:	ldr	r1, [sp, #88]	; 0x58
   110a8:	str	r0, [sp, #56]	; 0x38
   110ac:	mov	r0, r1
   110b0:	bl	1260c <bst_imprime@@Base>
   110b4:	movw	r0, #10409	; 0x28a9
   110b8:	movt	r0, #1
   110bc:	bl	10e54 <printf@plt>
   110c0:	movw	r1, #4752	; 0x1290
   110c4:	movt	r1, #1
   110c8:	str	r0, [sp, #52]	; 0x34
   110cc:	blx	r1
   110d0:	str	r0, [sp, #84]	; 0x54
   110d4:	movw	r0, #10414	; 0x28ae
   110d8:	movt	r0, #1
   110dc:	movw	r1, #10426	; 0x28ba
   110e0:	movt	r1, #1
   110e4:	bl	10e60 <fopen@plt>
   110e8:	str	r0, [sp, #80]	; 0x50
   110ec:	add	r0, sp, #96	; 0x60
   110f0:	ldr	r2, [sp, #80]	; 0x50
   110f4:	movw	r1, #100	; 0x64
   110f8:	bl	10e78 <fgets@plt>
   110fc:	movw	r1, #0
   11100:	cmp	r0, r1
   11104:	beq	111a8 <main@@Base+0x1bc>
   11108:	add	r0, sp, #96	; 0x60
   1110c:	str	r0, [sp, #48]	; 0x30
   11110:	movw	r1, #10428	; 0x28bc
   11114:	movt	r1, #1
   11118:	bl	10ee4 <strtok@plt>
   1111c:	add	r1, sp, #96	; 0x60
   11120:	ldr	lr, [sp, #48]	; 0x30
   11124:	str	r0, [sp, #44]	; 0x2c
   11128:	mov	r0, lr
   1112c:	ldr	r2, [sp, #44]	; 0x2c
   11130:	str	r1, [sp, #40]	; 0x28
   11134:	mov	r1, r2
   11138:	bl	10e9c <strcpy@plt>
   1113c:	movw	r1, #0
   11140:	str	r0, [sp, #36]	; 0x24
   11144:	mov	r0, r1
   11148:	movw	r1, #10428	; 0x28bc
   1114c:	movt	r1, #1
   11150:	bl	10ee4 <strtok@plt>
   11154:	add	r1, sp, #96	; 0x60
   11158:	ldr	r2, [sp, #40]	; 0x28
   1115c:	str	r0, [sp, #32]
   11160:	mov	r0, r2
   11164:	ldr	lr, [sp, #32]
   11168:	str	r1, [sp, #28]
   1116c:	mov	r1, lr
   11170:	bl	10e9c <strcpy@plt>
   11174:	ldr	r1, [sp, #28]
   11178:	str	r0, [sp, #24]
   1117c:	mov	r0, r1
   11180:	bl	10ecc <strlen@plt>
   11184:	sub	r0, r0, #1
   11188:	ldr	r1, [sp, #28]
   1118c:	add	r0, r1, r0
   11190:	movw	r2, #0
   11194:	strb	r2, [r0]
   11198:	ldr	r0, [sp, #84]	; 0x54
   1119c:	bl	117dc <avl_insere@@Base>
   111a0:	str	r0, [sp, #20]
   111a4:	b	110ec <main@@Base+0x100>
   111a8:	ldr	r0, [sp, #80]	; 0x50
   111ac:	bl	10ed8 <fclose@plt>
   111b0:	ldr	lr, [sp, #84]	; 0x54
   111b4:	str	r0, [sp, #16]
   111b8:	mov	r0, lr
   111bc:	movw	r1, #10430	; 0x28be
   111c0:	movt	r1, #1
   111c4:	bl	116d8 <avl_pesquisa@@Base>
   111c8:	str	r0, [sp, #76]	; 0x4c
   111cc:	ldr	r0, [sp, #76]	; 0x4c
   111d0:	movw	r1, #0
   111d4:	cmp	r0, r1
   111d8:	beq	111fc <main@@Base+0x210>
   111dc:	ldr	r0, [sp, #76]	; 0x4c
   111e0:	ldr	r1, [r0]
   111e4:	ldr	r0, [sp, #76]	; 0x4c
   111e8:	ldr	r2, [r0, #16]
   111ec:	movw	r0, #10439	; 0x28c7
   111f0:	movt	r0, #1
   111f4:	bl	10e54 <printf@plt>
   111f8:	str	r0, [sp, #12]
   111fc:	ldr	r0, [sp, #84]	; 0x54
   11200:	movw	r1, #10448	; 0x28d0
   11204:	movt	r1, #1
   11208:	bl	116d8 <avl_pesquisa@@Base>
   1120c:	str	r0, [sp, #76]	; 0x4c
   11210:	ldr	r0, [sp, #76]	; 0x4c
   11214:	movw	r1, #0
   11218:	cmp	r0, r1
   1121c:	beq	11240 <main@@Base+0x254>
   11220:	ldr	r0, [sp, #76]	; 0x4c
   11224:	ldr	r1, [r0]
   11228:	ldr	r0, [sp, #76]	; 0x4c
   1122c:	ldr	r2, [r0, #16]
   11230:	movw	r0, #10439	; 0x28c7
   11234:	movt	r0, #1
   11238:	bl	10e54 <printf@plt>
   1123c:	str	r0, [sp, #8]
   11240:	ldr	r0, [sp, #84]	; 0x54
   11244:	movw	r1, #10454	; 0x28d6
   11248:	movt	r1, #1
   1124c:	bl	116d8 <avl_pesquisa@@Base>
   11250:	str	r0, [sp, #76]	; 0x4c
   11254:	ldr	r0, [sp, #76]	; 0x4c
   11258:	movw	r1, #0
   1125c:	cmp	r0, r1
   11260:	beq	11284 <main@@Base+0x298>
   11264:	ldr	r0, [sp, #76]	; 0x4c
   11268:	ldr	r1, [r0]
   1126c:	ldr	r0, [sp, #76]	; 0x4c
   11270:	ldr	r2, [r0, #16]
   11274:	movw	r0, #10439	; 0x28c7
   11278:	movt	r0, #1
   1127c:	bl	10e54 <printf@plt>
   11280:	str	r0, [sp, #4]
   11284:	movw	r0, #0
   11288:	sub	sp, fp, #8
   1128c:	pop	{r4, r5, fp, pc}

00011290 <avl_nova@@Base>:
   11290:	push	{fp, lr}
   11294:	mov	fp, sp
   11298:	sub	sp, sp, #8
   1129c:	movw	r0, #4
   112a0:	bl	10ea8 <malloc@plt>
   112a4:	str	r0, [sp]
   112a8:	ldr	r0, [sp]
   112ac:	movw	lr, #0
   112b0:	cmp	r0, lr
   112b4:	bne	112c4 <avl_nova@@Base+0x34>
   112b8:	movw	r0, #0
   112bc:	str	r0, [sp, #4]
   112c0:	b	112d8 <avl_nova@@Base+0x48>
   112c4:	ldr	r0, [sp]
   112c8:	movw	r1, #0
   112cc:	str	r1, [r0]
   112d0:	ldr	r0, [sp]
   112d4:	str	r0, [sp, #4]
   112d8:	ldr	r0, [sp, #4]
   112dc:	mov	sp, fp
   112e0:	pop	{fp, pc}

000112e4 <avl_apaga@@Base>:
   112e4:	push	{fp, lr}
   112e8:	mov	fp, sp
   112ec:	sub	sp, sp, #8
   112f0:	str	r0, [sp, #4]
   112f4:	ldr	r0, [sp, #4]
   112f8:	movw	r1, #0
   112fc:	cmp	r0, r1
   11300:	bne	11308 <avl_apaga@@Base+0x24>
   11304:	b	1134c <avl_apaga@@Base+0x68>
   11308:	b	1130c <avl_apaga@@Base+0x28>
   1130c:	ldr	r0, [sp, #4]
   11310:	ldr	r0, [r0]
   11314:	movw	r1, #0
   11318:	cmp	r0, r1
   1131c:	beq	11344 <avl_apaga@@Base+0x60>
   11320:	ldr	r0, [sp, #4]
   11324:	ldr	r0, [r0]
   11328:	ldr	r1, [sp, #4]
   1132c:	ldr	r1, [r1]
   11330:	ldr	r1, [r1]
   11334:	bl	11354 <avl_remove_impl@@Base>
   11338:	ldr	r1, [sp, #4]
   1133c:	str	r0, [r1]
   11340:	b	1130c <avl_apaga@@Base+0x28>
   11344:	ldr	r0, [sp, #4]
   11348:	bl	10e6c <free@plt>
   1134c:	mov	sp, fp
   11350:	pop	{fp, pc}

00011354 <avl_remove_impl@@Base>:
   11354:	push	{fp, lr}
   11358:	mov	fp, sp
   1135c:	sub	sp, sp, #72	; 0x48
   11360:	str	r0, [fp, #-8]
   11364:	str	r1, [fp, #-12]
   11368:	ldr	r0, [fp, #-8]
   1136c:	movw	r1, #0
   11370:	cmp	r0, r1
   11374:	bne	11384 <avl_remove_impl@@Base+0x30>
   11378:	ldr	r0, [fp, #-8]
   1137c:	str	r0, [fp, #-4]
   11380:	b	116cc <avl_remove_impl@@Base+0x378>
   11384:	ldr	r0, [fp, #-12]
   11388:	ldr	r1, [fp, #-8]
   1138c:	ldr	r1, [r1]
   11390:	bl	10e48 <strcmp@plt>
   11394:	cmp	r0, #0
   11398:	bge	113b8 <avl_remove_impl@@Base+0x64>
   1139c:	ldr	r0, [fp, #-8]
   113a0:	ldr	r0, [r0, #4]
   113a4:	ldr	r1, [fp, #-12]
   113a8:	bl	11354 <avl_remove_impl@@Base>
   113ac:	ldr	r1, [fp, #-8]
   113b0:	str	r0, [r1, #4]
   113b4:	b	115b0 <avl_remove_impl@@Base+0x25c>
   113b8:	ldr	r0, [fp, #-12]
   113bc:	ldr	r1, [fp, #-8]
   113c0:	ldr	r1, [r1]
   113c4:	bl	10e48 <strcmp@plt>
   113c8:	cmp	r0, #0
   113cc:	ble	113ec <avl_remove_impl@@Base+0x98>
   113d0:	ldr	r0, [fp, #-8]
   113d4:	ldr	r0, [r0, #8]
   113d8:	ldr	r1, [fp, #-12]
   113dc:	bl	11354 <avl_remove_impl@@Base>
   113e0:	ldr	r1, [fp, #-8]
   113e4:	str	r0, [r1, #8]
   113e8:	b	115ac <avl_remove_impl@@Base+0x258>
   113ec:	ldr	r0, [fp, #-8]
   113f0:	ldr	r0, [r0, #4]
   113f4:	movw	r1, #0
   113f8:	cmp	r0, r1
   113fc:	beq	11414 <avl_remove_impl@@Base+0xc0>
   11400:	ldr	r0, [fp, #-8]
   11404:	ldr	r0, [r0, #8]
   11408:	movw	r1, #0
   1140c:	cmp	r0, r1
   11410:	bne	11518 <avl_remove_impl@@Base+0x1c4>
   11414:	ldr	r0, [fp, #-8]
   11418:	ldr	r0, [r0, #4]
   1141c:	movw	r1, #0
   11420:	cmp	r0, r1
   11424:	beq	11438 <avl_remove_impl@@Base+0xe4>
   11428:	ldr	r0, [fp, #-8]
   1142c:	ldr	r0, [r0, #4]
   11430:	str	r0, [fp, #-28]	; 0xffffffe4
   11434:	b	11444 <avl_remove_impl@@Base+0xf0>
   11438:	ldr	r0, [fp, #-8]
   1143c:	ldr	r0, [r0, #8]
   11440:	str	r0, [fp, #-28]	; 0xffffffe4
   11444:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11448:	str	r0, [fp, #-16]
   1144c:	ldr	r0, [fp, #-16]
   11450:	movw	r1, #0
   11454:	cmp	r0, r1
   11458:	bne	11470 <avl_remove_impl@@Base+0x11c>
   1145c:	ldr	r0, [fp, #-8]
   11460:	str	r0, [fp, #-16]
   11464:	movw	r0, #0
   11468:	str	r0, [fp, #-8]
   1146c:	b	11500 <avl_remove_impl@@Base+0x1ac>
   11470:	ldr	r0, [fp, #-8]
   11474:	ldr	r0, [r0]
   11478:	ldr	r1, [fp, #-16]
   1147c:	ldr	r1, [r1]
   11480:	str	r0, [fp, #-32]	; 0xffffffe0
   11484:	mov	r0, r1
   11488:	bl	10ecc <strlen@plt>
   1148c:	add	r0, r0, #1
   11490:	mov	r1, r0
   11494:	ldr	lr, [fp, #-32]	; 0xffffffe0
   11498:	str	r0, [sp, #36]	; 0x24
   1149c:	mov	r0, lr
   114a0:	ldr	r2, [sp, #36]	; 0x24
   114a4:	str	r1, [sp, #32]
   114a8:	mov	r1, r2
   114ac:	bl	10e90 <realloc@plt>
   114b0:	ldr	r1, [fp, #-8]
   114b4:	str	r0, [r1]
   114b8:	ldr	r0, [fp, #-8]
   114bc:	ldr	r0, [r0]
   114c0:	ldr	r1, [fp, #-16]
   114c4:	ldr	r1, [r1]
   114c8:	bl	10e9c <strcpy@plt>
   114cc:	ldr	r1, [fp, #-16]
   114d0:	ldr	r1, [r1, #4]
   114d4:	ldr	r2, [fp, #-8]
   114d8:	str	r1, [r2, #4]
   114dc:	ldr	r1, [fp, #-16]
   114e0:	ldr	r1, [r1, #8]
   114e4:	ldr	r2, [fp, #-8]
   114e8:	str	r1, [r2, #8]
   114ec:	ldr	r1, [fp, #-16]
   114f0:	ldr	r1, [r1, #12]
   114f4:	ldr	r2, [fp, #-8]
   114f8:	str	r1, [r2, #12]
   114fc:	str	r0, [sp, #28]
   11500:	ldr	r0, [fp, #-16]
   11504:	ldr	r0, [r0]
   11508:	bl	10e6c <free@plt>
   1150c:	ldr	r0, [fp, #-16]
   11510:	bl	10e6c <free@plt>
   11514:	b	115a8 <avl_remove_impl@@Base+0x254>
   11518:	ldr	r0, [fp, #-8]
   1151c:	ldr	r0, [r0, #8]
   11520:	bl	11ae4 <avl_no_valormin@@Base>
   11524:	str	r0, [fp, #-20]	; 0xffffffec
   11528:	ldr	r0, [fp, #-8]
   1152c:	ldr	r0, [r0]
   11530:	ldr	lr, [fp, #-20]	; 0xffffffec
   11534:	ldr	lr, [lr]
   11538:	str	r0, [sp, #24]
   1153c:	mov	r0, lr
   11540:	bl	10ecc <strlen@plt>
   11544:	add	r0, r0, #1
   11548:	mov	lr, r0
   1154c:	ldr	r1, [sp, #24]
   11550:	str	r0, [sp, #20]
   11554:	mov	r0, r1
   11558:	ldr	r1, [sp, #20]
   1155c:	str	lr, [sp, #16]
   11560:	bl	10e90 <realloc@plt>
   11564:	ldr	r1, [fp, #-8]
   11568:	str	r0, [r1]
   1156c:	ldr	r0, [fp, #-8]
   11570:	ldr	r0, [r0]
   11574:	ldr	r1, [fp, #-20]	; 0xffffffec
   11578:	ldr	r1, [r1]
   1157c:	bl	10e9c <strcpy@plt>
   11580:	ldr	r1, [fp, #-8]
   11584:	ldr	r1, [r1, #8]
   11588:	ldr	lr, [fp, #-20]	; 0xffffffec
   1158c:	ldr	lr, [lr]
   11590:	str	r0, [sp, #12]
   11594:	mov	r0, r1
   11598:	mov	r1, lr
   1159c:	bl	11354 <avl_remove_impl@@Base>
   115a0:	ldr	r1, [fp, #-8]
   115a4:	str	r0, [r1, #8]
   115a8:	b	115ac <avl_remove_impl@@Base+0x258>
   115ac:	b	115b0 <avl_remove_impl@@Base+0x25c>
   115b0:	ldr	r0, [fp, #-8]
   115b4:	movw	r1, #0
   115b8:	cmp	r0, r1
   115bc:	bne	115cc <avl_remove_impl@@Base+0x278>
   115c0:	ldr	r0, [fp, #-8]
   115c4:	str	r0, [fp, #-4]
   115c8:	b	116cc <avl_remove_impl@@Base+0x378>
   115cc:	ldr	r0, [fp, #-8]
   115d0:	ldr	r0, [r0, #4]
   115d4:	bl	11c60 <avl_altura@@Base>
   115d8:	ldr	lr, [fp, #-8]
   115dc:	ldr	lr, [lr, #8]
   115e0:	str	r0, [sp, #8]
   115e4:	mov	r0, lr
   115e8:	bl	11c60 <avl_altura@@Base>
   115ec:	ldr	lr, [sp, #8]
   115f0:	str	r0, [sp, #4]
   115f4:	mov	r0, lr
   115f8:	ldr	r1, [sp, #4]
   115fc:	bl	11c9c <max@@Base>
   11600:	add	r0, r0, #1
   11604:	ldr	r1, [fp, #-8]
   11608:	str	r0, [r1, #12]
   1160c:	ldr	r0, [fp, #-8]
   11610:	bl	11ef8 <calc_balanceamento@@Base>
   11614:	str	r0, [fp, #-24]	; 0xffffffe8
   11618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1161c:	cmp	r0, #1
   11620:	ble	1166c <avl_remove_impl@@Base+0x318>
   11624:	ldr	r0, [fp, #-8]
   11628:	ldr	r0, [r0, #8]
   1162c:	bl	11ef8 <calc_balanceamento@@Base>
   11630:	cmp	r0, #0
   11634:	bge	1165c <avl_remove_impl@@Base+0x308>
   11638:	ldr	r0, [fp, #-8]
   1163c:	ldr	r0, [r0, #8]
   11640:	bl	11d60 <roda_direita@@Base>
   11644:	ldr	lr, [fp, #-8]
   11648:	str	r0, [lr, #8]
   1164c:	ldr	r0, [fp, #-8]
   11650:	bl	11e2c <roda_esquerda@@Base>
   11654:	str	r0, [fp, #-4]
   11658:	b	116cc <avl_remove_impl@@Base+0x378>
   1165c:	ldr	r0, [fp, #-8]
   11660:	bl	11e2c <roda_esquerda@@Base>
   11664:	str	r0, [fp, #-4]
   11668:	b	116cc <avl_remove_impl@@Base+0x378>
   1166c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11670:	cmn	r0, #1
   11674:	bge	116c0 <avl_remove_impl@@Base+0x36c>
   11678:	ldr	r0, [fp, #-8]
   1167c:	ldr	r0, [r0, #4]
   11680:	bl	11ef8 <calc_balanceamento@@Base>
   11684:	cmp	r0, #0
   11688:	ble	116b0 <avl_remove_impl@@Base+0x35c>
   1168c:	ldr	r0, [fp, #-8]
   11690:	ldr	r0, [r0, #4]
   11694:	bl	11e2c <roda_esquerda@@Base>
   11698:	ldr	lr, [fp, #-8]
   1169c:	str	r0, [lr, #4]
   116a0:	ldr	r0, [fp, #-8]
   116a4:	bl	11d60 <roda_direita@@Base>
   116a8:	str	r0, [fp, #-4]
   116ac:	b	116cc <avl_remove_impl@@Base+0x378>
   116b0:	ldr	r0, [fp, #-8]
   116b4:	bl	11d60 <roda_direita@@Base>
   116b8:	str	r0, [fp, #-4]
   116bc:	b	116cc <avl_remove_impl@@Base+0x378>
   116c0:	b	116c4 <avl_remove_impl@@Base+0x370>
   116c4:	ldr	r0, [fp, #-8]
   116c8:	str	r0, [fp, #-4]
   116cc:	ldr	r0, [fp, #-4]
   116d0:	mov	sp, fp
   116d4:	pop	{fp, pc}

000116d8 <avl_pesquisa@@Base>:
   116d8:	push	{fp, lr}
   116dc:	mov	fp, sp
   116e0:	sub	sp, sp, #16
   116e4:	str	r0, [sp, #8]
   116e8:	str	r1, [sp, #4]
   116ec:	ldr	r0, [sp, #8]
   116f0:	movw	r1, #0
   116f4:	cmp	r0, r1
   116f8:	beq	1170c <avl_pesquisa@@Base+0x34>
   116fc:	ldr	r0, [sp, #4]
   11700:	movw	r1, #0
   11704:	cmp	r0, r1
   11708:	bne	11718 <avl_pesquisa@@Base+0x40>
   1170c:	movw	r0, #0
   11710:	str	r0, [fp, #-4]
   11714:	b	1172c <avl_pesquisa@@Base+0x54>
   11718:	ldr	r0, [sp, #8]
   1171c:	ldr	r0, [r0]
   11720:	ldr	r1, [sp, #4]
   11724:	bl	11738 <avl_pesquisa_impl@@Base>
   11728:	str	r0, [fp, #-4]
   1172c:	ldr	r0, [fp, #-4]
   11730:	mov	sp, fp
   11734:	pop	{fp, pc}

00011738 <avl_pesquisa_impl@@Base>:
   11738:	push	{fp, lr}
   1173c:	mov	fp, sp
   11740:	sub	sp, sp, #16
   11744:	str	r0, [sp, #8]
   11748:	str	r1, [sp, #4]
   1174c:	ldr	r0, [sp, #8]
   11750:	movw	r1, #0
   11754:	cmp	r0, r1
   11758:	bne	11768 <avl_pesquisa_impl@@Base+0x30>
   1175c:	movw	r0, #0
   11760:	str	r0, [fp, #-4]
   11764:	b	117d0 <avl_pesquisa_impl@@Base+0x98>
   11768:	ldr	r0, [sp, #4]
   1176c:	ldr	r1, [sp, #8]
   11770:	ldr	r1, [r1]
   11774:	bl	10e48 <strcmp@plt>
   11778:	cmp	r0, #0
   1177c:	bge	11798 <avl_pesquisa_impl@@Base+0x60>
   11780:	ldr	r0, [sp, #8]
   11784:	ldr	r0, [r0, #4]
   11788:	ldr	r1, [sp, #4]
   1178c:	bl	11738 <avl_pesquisa_impl@@Base>
   11790:	str	r0, [fp, #-4]
   11794:	b	117d0 <avl_pesquisa_impl@@Base+0x98>
   11798:	ldr	r0, [sp, #4]
   1179c:	ldr	r1, [sp, #8]
   117a0:	ldr	r1, [r1]
   117a4:	bl	10e48 <strcmp@plt>
   117a8:	cmp	r0, #0
   117ac:	ble	117c8 <avl_pesquisa_impl@@Base+0x90>
   117b0:	ldr	r0, [sp, #8]
   117b4:	ldr	r0, [r0, #8]
   117b8:	ldr	r1, [sp, #4]
   117bc:	bl	11738 <avl_pesquisa_impl@@Base>
   117c0:	str	r0, [fp, #-4]
   117c4:	b	117d0 <avl_pesquisa_impl@@Base+0x98>
   117c8:	ldr	r0, [sp, #8]
   117cc:	str	r0, [fp, #-4]
   117d0:	ldr	r0, [fp, #-4]
   117d4:	mov	sp, fp
   117d8:	pop	{fp, pc}

000117dc <avl_insere@@Base>:
   117dc:	push	{fp, lr}
   117e0:	mov	fp, sp
   117e4:	sub	sp, sp, #16
   117e8:	str	r0, [sp, #8]
   117ec:	str	r1, [sp, #4]
   117f0:	ldr	r0, [sp, #8]
   117f4:	movw	r1, #0
   117f8:	cmp	r0, r1
   117fc:	beq	11810 <avl_insere@@Base+0x34>
   11800:	ldr	r0, [sp, #4]
   11804:	movw	r1, #0
   11808:	cmp	r0, r1
   1180c:	bne	1181c <avl_insere@@Base+0x40>
   11810:	mvn	r0, #0
   11814:	str	r0, [fp, #-4]
   11818:	b	1183c <avl_insere@@Base+0x60>
   1181c:	ldr	r0, [sp, #8]
   11820:	ldr	r0, [r0]
   11824:	ldr	r1, [sp, #4]
   11828:	bl	11848 <avl_insere_impl@@Base>
   1182c:	ldr	r1, [sp, #8]
   11830:	str	r0, [r1]
   11834:	movw	r0, #0
   11838:	str	r0, [fp, #-4]
   1183c:	ldr	r0, [fp, #-4]
   11840:	mov	sp, fp
   11844:	pop	{fp, pc}

00011848 <avl_insere_impl@@Base>:
   11848:	push	{fp, lr}
   1184c:	mov	fp, sp
   11850:	sub	sp, sp, #24
   11854:	str	r0, [fp, #-8]
   11858:	str	r1, [sp, #12]
   1185c:	ldr	r0, [fp, #-8]
   11860:	movw	r1, #0
   11864:	cmp	r0, r1
   11868:	bne	1187c <avl_insere_impl@@Base+0x34>
   1186c:	ldr	r0, [sp, #12]
   11870:	bl	11cd8 <avl_novo_no@@Base>
   11874:	str	r0, [fp, #-4]
   11878:	b	11a20 <avl_insere_impl@@Base+0x1d8>
   1187c:	ldr	r0, [sp, #12]
   11880:	ldr	r1, [fp, #-8]
   11884:	ldr	r1, [r1]
   11888:	bl	10e48 <strcmp@plt>
   1188c:	cmp	r0, #0
   11890:	bge	118b0 <avl_insere_impl@@Base+0x68>
   11894:	ldr	r0, [fp, #-8]
   11898:	ldr	r0, [r0, #4]
   1189c:	ldr	r1, [sp, #12]
   118a0:	bl	11848 <avl_insere_impl@@Base>
   118a4:	ldr	r1, [fp, #-8]
   118a8:	str	r0, [r1, #4]
   118ac:	b	11920 <avl_insere_impl@@Base+0xd8>
   118b0:	ldr	r0, [sp, #12]
   118b4:	ldr	r1, [fp, #-8]
   118b8:	ldr	r1, [r1]
   118bc:	bl	10e48 <strcmp@plt>
   118c0:	cmp	r0, #0
   118c4:	ble	118e4 <avl_insere_impl@@Base+0x9c>
   118c8:	ldr	r0, [fp, #-8]
   118cc:	ldr	r0, [r0, #8]
   118d0:	ldr	r1, [sp, #12]
   118d4:	bl	11848 <avl_insere_impl@@Base>
   118d8:	ldr	r1, [fp, #-8]
   118dc:	str	r0, [r1, #8]
   118e0:	b	1191c <avl_insere_impl@@Base+0xd4>
   118e4:	ldr	r0, [sp, #12]
   118e8:	ldr	r1, [fp, #-8]
   118ec:	ldr	r1, [r1]
   118f0:	bl	10e48 <strcmp@plt>
   118f4:	cmp	r0, #0
   118f8:	bne	11918 <avl_insere_impl@@Base+0xd0>
   118fc:	ldr	r0, [fp, #-8]
   11900:	ldr	r1, [r0, #16]
   11904:	add	r1, r1, #1
   11908:	str	r1, [r0, #16]
   1190c:	ldr	r0, [fp, #-8]
   11910:	str	r0, [fp, #-4]
   11914:	b	11a20 <avl_insere_impl@@Base+0x1d8>
   11918:	b	1191c <avl_insere_impl@@Base+0xd4>
   1191c:	b	11920 <avl_insere_impl@@Base+0xd8>
   11920:	ldr	r0, [fp, #-8]
   11924:	ldr	r0, [r0, #4]
   11928:	bl	11c60 <avl_altura@@Base>
   1192c:	ldr	lr, [fp, #-8]
   11930:	ldr	lr, [lr, #8]
   11934:	str	r0, [sp, #4]
   11938:	mov	r0, lr
   1193c:	bl	11c60 <avl_altura@@Base>
   11940:	ldr	lr, [sp, #4]
   11944:	str	r0, [sp]
   11948:	mov	r0, lr
   1194c:	ldr	r1, [sp]
   11950:	bl	11c9c <max@@Base>
   11954:	add	r0, r0, #1
   11958:	ldr	r1, [fp, #-8]
   1195c:	str	r0, [r1, #12]
   11960:	ldr	r0, [fp, #-8]
   11964:	bl	11ef8 <calc_balanceamento@@Base>
   11968:	str	r0, [sp, #8]
   1196c:	ldr	r0, [sp, #8]
   11970:	cmp	r0, #1
   11974:	ble	119c0 <avl_insere_impl@@Base+0x178>
   11978:	ldr	r0, [fp, #-8]
   1197c:	ldr	r0, [r0, #8]
   11980:	bl	11ef8 <calc_balanceamento@@Base>
   11984:	cmp	r0, #0
   11988:	bge	119b0 <avl_insere_impl@@Base+0x168>
   1198c:	ldr	r0, [fp, #-8]
   11990:	ldr	r0, [r0, #8]
   11994:	bl	11d60 <roda_direita@@Base>
   11998:	ldr	lr, [fp, #-8]
   1199c:	str	r0, [lr, #8]
   119a0:	ldr	r0, [fp, #-8]
   119a4:	bl	11e2c <roda_esquerda@@Base>
   119a8:	str	r0, [fp, #-4]
   119ac:	b	11a20 <avl_insere_impl@@Base+0x1d8>
   119b0:	ldr	r0, [fp, #-8]
   119b4:	bl	11e2c <roda_esquerda@@Base>
   119b8:	str	r0, [fp, #-4]
   119bc:	b	11a20 <avl_insere_impl@@Base+0x1d8>
   119c0:	ldr	r0, [sp, #8]
   119c4:	cmn	r0, #1
   119c8:	bge	11a14 <avl_insere_impl@@Base+0x1cc>
   119cc:	ldr	r0, [fp, #-8]
   119d0:	ldr	r0, [r0, #4]
   119d4:	bl	11ef8 <calc_balanceamento@@Base>
   119d8:	cmp	r0, #0
   119dc:	ble	11a04 <avl_insere_impl@@Base+0x1bc>
   119e0:	ldr	r0, [fp, #-8]
   119e4:	ldr	r0, [r0, #4]
   119e8:	bl	11e2c <roda_esquerda@@Base>
   119ec:	ldr	lr, [fp, #-8]
   119f0:	str	r0, [lr, #4]
   119f4:	ldr	r0, [fp, #-8]
   119f8:	bl	11d60 <roda_direita@@Base>
   119fc:	str	r0, [fp, #-4]
   11a00:	b	11a20 <avl_insere_impl@@Base+0x1d8>
   11a04:	ldr	r0, [fp, #-8]
   11a08:	bl	11d60 <roda_direita@@Base>
   11a0c:	str	r0, [fp, #-4]
   11a10:	b	11a20 <avl_insere_impl@@Base+0x1d8>
   11a14:	b	11a18 <avl_insere_impl@@Base+0x1d0>
   11a18:	ldr	r0, [fp, #-8]
   11a1c:	str	r0, [fp, #-4]
   11a20:	ldr	r0, [fp, #-4]
   11a24:	mov	sp, fp
   11a28:	pop	{fp, pc}

00011a2c <avl_remove@@Base>:
   11a2c:	push	{fp, lr}
   11a30:	mov	fp, sp
   11a34:	sub	sp, sp, #16
   11a38:	str	r0, [sp, #8]
   11a3c:	str	r1, [sp, #4]
   11a40:	ldr	r0, [sp, #8]
   11a44:	movw	r1, #0
   11a48:	cmp	r0, r1
   11a4c:	beq	11a60 <avl_remove@@Base+0x34>
   11a50:	ldr	r0, [sp, #4]
   11a54:	movw	r1, #0
   11a58:	cmp	r0, r1
   11a5c:	bne	11a6c <avl_remove@@Base+0x40>
   11a60:	mvn	r0, #0
   11a64:	str	r0, [fp, #-4]
   11a68:	b	11a8c <avl_remove@@Base+0x60>
   11a6c:	ldr	r0, [sp, #8]
   11a70:	ldr	r0, [r0]
   11a74:	ldr	r1, [sp, #4]
   11a78:	bl	11354 <avl_remove_impl@@Base>
   11a7c:	ldr	r1, [sp, #8]
   11a80:	str	r0, [r1]
   11a84:	movw	r0, #0
   11a88:	str	r0, [fp, #-4]
   11a8c:	ldr	r0, [fp, #-4]
   11a90:	mov	sp, fp
   11a94:	pop	{fp, pc}

00011a98 <avl_min@@Base>:
   11a98:	push	{fp, lr}
   11a9c:	mov	fp, sp
   11aa0:	sub	sp, sp, #8
   11aa4:	str	r0, [sp]
   11aa8:	ldr	r0, [sp]
   11aac:	movw	r1, #0
   11ab0:	cmp	r0, r1
   11ab4:	bne	11ac4 <avl_min@@Base+0x2c>
   11ab8:	movw	r0, #0
   11abc:	str	r0, [sp, #4]
   11ac0:	b	11ad8 <avl_min@@Base+0x40>
   11ac4:	ldr	r0, [sp]
   11ac8:	ldr	r0, [r0]
   11acc:	bl	11ae4 <avl_no_valormin@@Base>
   11ad0:	ldr	r0, [r0]
   11ad4:	str	r0, [sp, #4]
   11ad8:	ldr	r0, [sp, #4]
   11adc:	mov	sp, fp
   11ae0:	pop	{fp, pc}

00011ae4 <avl_no_valormin@@Base>:
   11ae4:	sub	sp, sp, #8
   11ae8:	str	r0, [sp, #4]
   11aec:	ldr	r0, [sp, #4]
   11af0:	str	r0, [sp]
   11af4:	ldr	r0, [sp]
   11af8:	ldr	r0, [r0, #4]
   11afc:	movw	r1, #0
   11b00:	cmp	r0, r1
   11b04:	beq	11b18 <avl_no_valormin@@Base+0x34>
   11b08:	ldr	r0, [sp]
   11b0c:	ldr	r0, [r0, #4]
   11b10:	str	r0, [sp]
   11b14:	b	11af4 <avl_no_valormin@@Base+0x10>
   11b18:	ldr	r0, [sp]
   11b1c:	add	sp, sp, #8
   11b20:	bx	lr

00011b24 <avl_max@@Base>:
   11b24:	push	{fp, lr}
   11b28:	mov	fp, sp
   11b2c:	sub	sp, sp, #8
   11b30:	str	r0, [sp]
   11b34:	ldr	r0, [sp]
   11b38:	movw	r1, #0
   11b3c:	cmp	r0, r1
   11b40:	bne	11b50 <avl_max@@Base+0x2c>
   11b44:	movw	r0, #0
   11b48:	str	r0, [sp, #4]
   11b4c:	b	11b64 <avl_max@@Base+0x40>
   11b50:	ldr	r0, [sp]
   11b54:	ldr	r0, [r0]
   11b58:	bl	11b70 <avl_no_valormax@@Base>
   11b5c:	ldr	r0, [r0]
   11b60:	str	r0, [sp, #4]
   11b64:	ldr	r0, [sp, #4]
   11b68:	mov	sp, fp
   11b6c:	pop	{fp, pc}

00011b70 <avl_no_valormax@@Base>:
   11b70:	sub	sp, sp, #8
   11b74:	str	r0, [sp, #4]
   11b78:	ldr	r0, [sp, #4]
   11b7c:	str	r0, [sp]
   11b80:	ldr	r0, [sp]
   11b84:	ldr	r0, [r0, #8]
   11b88:	movw	r1, #0
   11b8c:	cmp	r0, r1
   11b90:	beq	11ba4 <avl_no_valormax@@Base+0x34>
   11b94:	ldr	r0, [sp]
   11b98:	ldr	r0, [r0, #8]
   11b9c:	str	r0, [sp]
   11ba0:	b	11b80 <avl_no_valormax@@Base+0x10>
   11ba4:	ldr	r0, [sp]
   11ba8:	add	sp, sp, #8
   11bac:	bx	lr

00011bb0 <avl_imprime@@Base>:
   11bb0:	push	{fp, lr}
   11bb4:	mov	fp, sp
   11bb8:	sub	sp, sp, #8
   11bbc:	str	r0, [sp, #4]
   11bc0:	ldr	r0, [sp, #4]
   11bc4:	movw	r1, #0
   11bc8:	cmp	r0, r1
   11bcc:	bne	11bd4 <avl_imprime@@Base+0x24>
   11bd0:	b	11bf0 <avl_imprime@@Base+0x40>
   11bd4:	ldr	r0, [sp, #4]
   11bd8:	ldr	r0, [r0]
   11bdc:	bl	11bf8 <avl_preordem_impl@@Base>
   11be0:	movw	r0, #10412	; 0x28ac
   11be4:	movt	r0, #1
   11be8:	bl	10e54 <printf@plt>
   11bec:	str	r0, [sp]
   11bf0:	mov	sp, fp
   11bf4:	pop	{fp, pc}

00011bf8 <avl_preordem_impl@@Base>:
   11bf8:	push	{fp, lr}
   11bfc:	mov	fp, sp
   11c00:	sub	sp, sp, #8
   11c04:	str	r0, [sp, #4]
   11c08:	ldr	r0, [sp, #4]
   11c0c:	movw	r1, #0
   11c10:	cmp	r0, r1
   11c14:	bne	11c1c <avl_preordem_impl@@Base+0x24>
   11c18:	b	11c58 <avl_preordem_impl@@Base+0x60>
   11c1c:	ldr	r0, [sp, #4]
   11c20:	ldr	r1, [r0]
   11c24:	ldr	r0, [sp, #4]
   11c28:	ldr	r2, [r0, #16]
   11c2c:	movw	r0, #10504	; 0x2908
   11c30:	movt	r0, #1
   11c34:	bl	10e54 <printf@plt>
   11c38:	ldr	r1, [sp, #4]
   11c3c:	ldr	r1, [r1, #4]
   11c40:	str	r0, [sp]
   11c44:	mov	r0, r1
   11c48:	bl	11bf8 <avl_preordem_impl@@Base>
   11c4c:	ldr	r0, [sp, #4]
   11c50:	ldr	r0, [r0, #8]
   11c54:	bl	11bf8 <avl_preordem_impl@@Base>
   11c58:	mov	sp, fp
   11c5c:	pop	{fp, pc}

00011c60 <avl_altura@@Base>:
   11c60:	sub	sp, sp, #8
   11c64:	str	r0, [sp]
   11c68:	ldr	r0, [sp]
   11c6c:	movw	r1, #0
   11c70:	cmp	r0, r1
   11c74:	bne	11c84 <avl_altura@@Base+0x24>
   11c78:	mvn	r0, #0
   11c7c:	str	r0, [sp, #4]
   11c80:	b	11c90 <avl_altura@@Base+0x30>
   11c84:	ldr	r0, [sp]
   11c88:	ldr	r0, [r0, #12]
   11c8c:	str	r0, [sp, #4]
   11c90:	ldr	r0, [sp, #4]
   11c94:	add	sp, sp, #8
   11c98:	bx	lr

00011c9c <max@@Base>:
   11c9c:	sub	sp, sp, #12
   11ca0:	str	r0, [sp, #8]
   11ca4:	str	r1, [sp, #4]
   11ca8:	ldr	r0, [sp, #8]
   11cac:	ldr	r1, [sp, #4]
   11cb0:	cmp	r0, r1
   11cb4:	ble	11cc4 <max@@Base+0x28>
   11cb8:	ldr	r0, [sp, #8]
   11cbc:	str	r0, [sp]
   11cc0:	b	11ccc <max@@Base+0x30>
   11cc4:	ldr	r0, [sp, #4]
   11cc8:	str	r0, [sp]
   11ccc:	ldr	r0, [sp]
   11cd0:	add	sp, sp, #12
   11cd4:	bx	lr

00011cd8 <avl_novo_no@@Base>:
   11cd8:	push	{fp, lr}
   11cdc:	mov	fp, sp
   11ce0:	sub	sp, sp, #16
   11ce4:	str	r0, [fp, #-4]
   11ce8:	mov	r0, #20
   11cec:	bl	10ea8 <malloc@plt>
   11cf0:	str	r0, [sp, #8]
   11cf4:	ldr	r0, [fp, #-4]
   11cf8:	bl	10ecc <strlen@plt>
   11cfc:	add	r0, r0, #1
   11d00:	mov	lr, r0
   11d04:	str	lr, [sp, #4]
   11d08:	bl	10ea8 <malloc@plt>
   11d0c:	ldr	lr, [sp, #8]
   11d10:	str	r0, [lr]
   11d14:	ldr	r0, [sp, #8]
   11d18:	ldr	r0, [r0]
   11d1c:	ldr	r1, [fp, #-4]
   11d20:	bl	10e9c <strcpy@plt>
   11d24:	ldr	r1, [sp, #8]
   11d28:	movw	lr, #0
   11d2c:	str	lr, [r1, #4]
   11d30:	ldr	r1, [sp, #8]
   11d34:	str	lr, [r1, #8]
   11d38:	ldr	r1, [sp, #8]
   11d3c:	str	lr, [r1, #12]
   11d40:	ldr	r1, [sp, #8]
   11d44:	movw	lr, #1
   11d48:	str	lr, [r1, #16]
   11d4c:	ldr	r1, [sp, #8]
   11d50:	str	r0, [sp]
   11d54:	mov	r0, r1
   11d58:	mov	sp, fp
   11d5c:	pop	{fp, pc}

00011d60 <roda_direita@@Base>:
   11d60:	push	{fp, lr}
   11d64:	mov	fp, sp
   11d68:	sub	sp, sp, #32
   11d6c:	str	r0, [fp, #-4]
   11d70:	ldr	r0, [fp, #-4]
   11d74:	ldr	r0, [r0, #4]
   11d78:	str	r0, [fp, #-8]
   11d7c:	ldr	r0, [fp, #-8]
   11d80:	ldr	r0, [r0, #8]
   11d84:	str	r0, [fp, #-12]
   11d88:	ldr	r0, [fp, #-4]
   11d8c:	ldr	r1, [fp, #-8]
   11d90:	str	r0, [r1, #8]
   11d94:	ldr	r0, [fp, #-12]
   11d98:	ldr	r1, [fp, #-4]
   11d9c:	str	r0, [r1, #4]
   11da0:	ldr	r0, [fp, #-4]
   11da4:	ldr	r0, [r0, #4]
   11da8:	bl	11c60 <avl_altura@@Base>
   11dac:	ldr	r1, [fp, #-4]
   11db0:	ldr	r1, [r1, #8]
   11db4:	str	r0, [sp, #16]
   11db8:	mov	r0, r1
   11dbc:	bl	11c60 <avl_altura@@Base>
   11dc0:	ldr	r1, [sp, #16]
   11dc4:	str	r0, [sp, #12]
   11dc8:	mov	r0, r1
   11dcc:	ldr	r1, [sp, #12]
   11dd0:	bl	11c9c <max@@Base>
   11dd4:	add	r0, r0, #1
   11dd8:	ldr	r1, [fp, #-4]
   11ddc:	str	r0, [r1, #12]
   11de0:	ldr	r0, [fp, #-8]
   11de4:	ldr	r0, [r0, #4]
   11de8:	bl	11c60 <avl_altura@@Base>
   11dec:	ldr	r1, [fp, #-8]
   11df0:	ldr	r1, [r1, #8]
   11df4:	str	r0, [sp, #8]
   11df8:	mov	r0, r1
   11dfc:	bl	11c60 <avl_altura@@Base>
   11e00:	ldr	r1, [sp, #8]
   11e04:	str	r0, [sp, #4]
   11e08:	mov	r0, r1
   11e0c:	ldr	r1, [sp, #4]
   11e10:	bl	11c9c <max@@Base>
   11e14:	add	r0, r0, #1
   11e18:	ldr	r1, [fp, #-8]
   11e1c:	str	r0, [r1, #12]
   11e20:	ldr	r0, [fp, #-8]
   11e24:	mov	sp, fp
   11e28:	pop	{fp, pc}

00011e2c <roda_esquerda@@Base>:
   11e2c:	push	{fp, lr}
   11e30:	mov	fp, sp
   11e34:	sub	sp, sp, #32
   11e38:	str	r0, [fp, #-4]
   11e3c:	ldr	r0, [fp, #-4]
   11e40:	ldr	r0, [r0, #8]
   11e44:	str	r0, [fp, #-8]
   11e48:	ldr	r0, [fp, #-8]
   11e4c:	ldr	r0, [r0, #4]
   11e50:	str	r0, [fp, #-12]
   11e54:	ldr	r0, [fp, #-4]
   11e58:	ldr	r1, [fp, #-8]
   11e5c:	str	r0, [r1, #4]
   11e60:	ldr	r0, [fp, #-12]
   11e64:	ldr	r1, [fp, #-4]
   11e68:	str	r0, [r1, #8]
   11e6c:	ldr	r0, [fp, #-4]
   11e70:	ldr	r0, [r0, #4]
   11e74:	bl	11c60 <avl_altura@@Base>
   11e78:	ldr	r1, [fp, #-4]
   11e7c:	ldr	r1, [r1, #8]
   11e80:	str	r0, [sp, #16]
   11e84:	mov	r0, r1
   11e88:	bl	11c60 <avl_altura@@Base>
   11e8c:	ldr	r1, [sp, #16]
   11e90:	str	r0, [sp, #12]
   11e94:	mov	r0, r1
   11e98:	ldr	r1, [sp, #12]
   11e9c:	bl	11c9c <max@@Base>
   11ea0:	add	r0, r0, #1
   11ea4:	ldr	r1, [fp, #-4]
   11ea8:	str	r0, [r1, #12]
   11eac:	ldr	r0, [fp, #-8]
   11eb0:	ldr	r0, [r0, #4]
   11eb4:	bl	11c60 <avl_altura@@Base>
   11eb8:	ldr	r1, [fp, #-8]
   11ebc:	ldr	r1, [r1, #8]
   11ec0:	str	r0, [sp, #8]
   11ec4:	mov	r0, r1
   11ec8:	bl	11c60 <avl_altura@@Base>
   11ecc:	ldr	r1, [sp, #8]
   11ed0:	str	r0, [sp, #4]
   11ed4:	mov	r0, r1
   11ed8:	ldr	r1, [sp, #4]
   11edc:	bl	11c9c <max@@Base>
   11ee0:	add	r0, r0, #1
   11ee4:	ldr	r1, [fp, #-8]
   11ee8:	str	r0, [r1, #12]
   11eec:	ldr	r0, [fp, #-8]
   11ef0:	mov	sp, fp
   11ef4:	pop	{fp, pc}

00011ef8 <calc_balanceamento@@Base>:
   11ef8:	push	{fp, lr}
   11efc:	mov	fp, sp
   11f00:	sub	sp, sp, #16
   11f04:	str	r0, [sp, #8]
   11f08:	ldr	r0, [sp, #8]
   11f0c:	movw	r1, #0
   11f10:	cmp	r0, r1
   11f14:	bne	11f24 <calc_balanceamento@@Base+0x2c>
   11f18:	movw	r0, #0
   11f1c:	str	r0, [fp, #-4]
   11f20:	b	11f50 <calc_balanceamento@@Base+0x58>
   11f24:	ldr	r0, [sp, #8]
   11f28:	ldr	r0, [r0, #8]
   11f2c:	bl	11c60 <avl_altura@@Base>
   11f30:	ldr	lr, [sp, #8]
   11f34:	ldr	lr, [lr, #4]
   11f38:	str	r0, [sp, #4]
   11f3c:	mov	r0, lr
   11f40:	bl	11c60 <avl_altura@@Base>
   11f44:	ldr	lr, [sp, #4]
   11f48:	sub	r0, lr, r0
   11f4c:	str	r0, [fp, #-4]
   11f50:	ldr	r0, [fp, #-4]
   11f54:	mov	sp, fp
   11f58:	pop	{fp, pc}

00011f5c <bst_nova@@Base>:
   11f5c:	push	{fp, lr}
   11f60:	mov	fp, sp
   11f64:	sub	sp, sp, #8
   11f68:	movw	r0, #4
   11f6c:	bl	10ea8 <malloc@plt>
   11f70:	str	r0, [sp]
   11f74:	ldr	r0, [sp]
   11f78:	movw	lr, #0
   11f7c:	cmp	r0, lr
   11f80:	bne	11f90 <bst_nova@@Base+0x34>
   11f84:	movw	r0, #0
   11f88:	str	r0, [sp, #4]
   11f8c:	b	11fa4 <bst_nova@@Base+0x48>
   11f90:	ldr	r0, [sp]
   11f94:	movw	r1, #0
   11f98:	str	r1, [r0]
   11f9c:	ldr	r0, [sp]
   11fa0:	str	r0, [sp, #4]
   11fa4:	ldr	r0, [sp, #4]
   11fa8:	mov	sp, fp
   11fac:	pop	{fp, pc}

00011fb0 <bst_apaga@@Base>:
   11fb0:	push	{fp, lr}
   11fb4:	mov	fp, sp
   11fb8:	sub	sp, sp, #8
   11fbc:	str	r0, [sp, #4]
   11fc0:	ldr	r0, [sp, #4]
   11fc4:	ldr	r0, [r0]
   11fc8:	movw	r1, #0
   11fcc:	cmp	r0, r1
   11fd0:	beq	11ff8 <bst_apaga@@Base+0x48>
   11fd4:	ldr	r0, [sp, #4]
   11fd8:	ldr	r0, [r0]
   11fdc:	ldr	r1, [sp, #4]
   11fe0:	ldr	r1, [r1]
   11fe4:	ldr	r1, [r1]
   11fe8:	bl	12008 <bst_remove_impl@@Base>
   11fec:	ldr	r1, [sp, #4]
   11ff0:	str	r0, [r1]
   11ff4:	b	11fc0 <bst_apaga@@Base+0x10>
   11ff8:	ldr	r0, [sp, #4]
   11ffc:	bl	10e6c <free@plt>
   12000:	mov	sp, fp
   12004:	pop	{fp, pc}

00012008 <bst_remove_impl@@Base>:
   12008:	push	{fp, lr}
   1200c:	mov	fp, sp
   12010:	sub	sp, sp, #56	; 0x38
   12014:	str	r0, [fp, #-8]
   12018:	str	r1, [fp, #-12]
   1201c:	ldr	r0, [fp, #-8]
   12020:	movw	r1, #0
   12024:	cmp	r0, r1
   12028:	bne	12038 <bst_remove_impl@@Base+0x30>
   1202c:	ldr	r0, [fp, #-8]
   12030:	str	r0, [fp, #-4]
   12034:	b	1225c <bst_remove_impl@@Base+0x254>
   12038:	ldr	r0, [fp, #-12]
   1203c:	ldr	r1, [fp, #-8]
   12040:	ldr	r1, [r1]
   12044:	bl	10e48 <strcmp@plt>
   12048:	cmp	r0, #0
   1204c:	bge	1206c <bst_remove_impl@@Base+0x64>
   12050:	ldr	r0, [fp, #-8]
   12054:	ldr	r0, [r0, #4]
   12058:	ldr	r1, [fp, #-12]
   1205c:	bl	12008 <bst_remove_impl@@Base>
   12060:	ldr	r1, [fp, #-8]
   12064:	str	r0, [r1, #4]
   12068:	b	12254 <bst_remove_impl@@Base+0x24c>
   1206c:	ldr	r0, [fp, #-12]
   12070:	ldr	r1, [fp, #-8]
   12074:	ldr	r1, [r1]
   12078:	bl	10e48 <strcmp@plt>
   1207c:	cmp	r0, #0
   12080:	ble	120a0 <bst_remove_impl@@Base+0x98>
   12084:	ldr	r0, [fp, #-8]
   12088:	ldr	r0, [r0, #8]
   1208c:	ldr	r1, [fp, #-12]
   12090:	bl	12008 <bst_remove_impl@@Base>
   12094:	ldr	r1, [fp, #-8]
   12098:	str	r0, [r1, #8]
   1209c:	b	12250 <bst_remove_impl@@Base+0x248>
   120a0:	ldr	r0, [fp, #-8]
   120a4:	ldr	r0, [r0, #4]
   120a8:	movw	r1, #0
   120ac:	cmp	r0, r1
   120b0:	beq	120c8 <bst_remove_impl@@Base+0xc0>
   120b4:	ldr	r0, [fp, #-8]
   120b8:	ldr	r0, [r0, #8]
   120bc:	movw	r1, #0
   120c0:	cmp	r0, r1
   120c4:	bne	121bc <bst_remove_impl@@Base+0x1b4>
   120c8:	ldr	r0, [fp, #-8]
   120cc:	ldr	r0, [r0, #4]
   120d0:	movw	r1, #0
   120d4:	cmp	r0, r1
   120d8:	beq	120ec <bst_remove_impl@@Base+0xe4>
   120dc:	ldr	r0, [fp, #-8]
   120e0:	ldr	r0, [r0, #4]
   120e4:	str	r0, [fp, #-24]	; 0xffffffe8
   120e8:	b	120f8 <bst_remove_impl@@Base+0xf0>
   120ec:	ldr	r0, [fp, #-8]
   120f0:	ldr	r0, [r0, #8]
   120f4:	str	r0, [fp, #-24]	; 0xffffffe8
   120f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   120fc:	str	r0, [fp, #-16]
   12100:	ldr	r0, [fp, #-16]
   12104:	movw	r1, #0
   12108:	cmp	r0, r1
   1210c:	bne	12124 <bst_remove_impl@@Base+0x11c>
   12110:	ldr	r0, [fp, #-8]
   12114:	str	r0, [fp, #-16]
   12118:	movw	r0, #0
   1211c:	str	r0, [fp, #-8]
   12120:	b	121a4 <bst_remove_impl@@Base+0x19c>
   12124:	ldr	r0, [fp, #-8]
   12128:	ldr	r0, [r0]
   1212c:	ldr	r1, [fp, #-16]
   12130:	ldr	r1, [r1]
   12134:	str	r0, [sp, #28]
   12138:	mov	r0, r1
   1213c:	bl	10ecc <strlen@plt>
   12140:	add	r0, r0, #1
   12144:	mov	r1, r0
   12148:	ldr	lr, [sp, #28]
   1214c:	str	r0, [sp, #24]
   12150:	mov	r0, lr
   12154:	ldr	r2, [sp, #24]
   12158:	str	r1, [sp, #20]
   1215c:	mov	r1, r2
   12160:	bl	10e90 <realloc@plt>
   12164:	ldr	r1, [fp, #-8]
   12168:	str	r0, [r1]
   1216c:	ldr	r0, [fp, #-8]
   12170:	ldr	r0, [r0]
   12174:	ldr	r1, [fp, #-16]
   12178:	ldr	r1, [r1]
   1217c:	bl	10e9c <strcpy@plt>
   12180:	ldr	r1, [fp, #-16]
   12184:	ldr	r1, [r1, #4]
   12188:	ldr	r2, [fp, #-8]
   1218c:	str	r1, [r2, #4]
   12190:	ldr	r1, [fp, #-16]
   12194:	ldr	r1, [r1, #8]
   12198:	ldr	r2, [fp, #-8]
   1219c:	str	r1, [r2, #8]
   121a0:	str	r0, [sp, #16]
   121a4:	ldr	r0, [fp, #-16]
   121a8:	ldr	r0, [r0]
   121ac:	bl	10e6c <free@plt>
   121b0:	ldr	r0, [fp, #-16]
   121b4:	bl	10e6c <free@plt>
   121b8:	b	1224c <bst_remove_impl@@Base+0x244>
   121bc:	ldr	r0, [fp, #-8]
   121c0:	ldr	r0, [r0, #8]
   121c4:	bl	12540 <bst_no_valormin@@Base>
   121c8:	str	r0, [fp, #-20]	; 0xffffffec
   121cc:	ldr	r0, [fp, #-8]
   121d0:	ldr	r0, [r0]
   121d4:	ldr	lr, [fp, #-20]	; 0xffffffec
   121d8:	ldr	lr, [lr]
   121dc:	str	r0, [sp, #12]
   121e0:	mov	r0, lr
   121e4:	bl	10ecc <strlen@plt>
   121e8:	add	r0, r0, #1
   121ec:	mov	lr, r0
   121f0:	ldr	r1, [sp, #12]
   121f4:	str	r0, [sp, #8]
   121f8:	mov	r0, r1
   121fc:	ldr	r1, [sp, #8]
   12200:	str	lr, [sp, #4]
   12204:	bl	10e90 <realloc@plt>
   12208:	ldr	r1, [fp, #-8]
   1220c:	str	r0, [r1]
   12210:	ldr	r0, [fp, #-8]
   12214:	ldr	r0, [r0]
   12218:	ldr	r1, [fp, #-20]	; 0xffffffec
   1221c:	ldr	r1, [r1]
   12220:	bl	10e9c <strcpy@plt>
   12224:	ldr	r1, [fp, #-8]
   12228:	ldr	r1, [r1, #8]
   1222c:	ldr	lr, [fp, #-20]	; 0xffffffec
   12230:	ldr	lr, [lr]
   12234:	str	r0, [sp]
   12238:	mov	r0, r1
   1223c:	mov	r1, lr
   12240:	bl	12008 <bst_remove_impl@@Base>
   12244:	ldr	r1, [fp, #-8]
   12248:	str	r0, [r1, #8]
   1224c:	b	12250 <bst_remove_impl@@Base+0x248>
   12250:	b	12254 <bst_remove_impl@@Base+0x24c>
   12254:	ldr	r0, [fp, #-8]
   12258:	str	r0, [fp, #-4]
   1225c:	ldr	r0, [fp, #-4]
   12260:	mov	sp, fp
   12264:	pop	{fp, pc}

00012268 <bst_pesquisa@@Base>:
   12268:	push	{fp, lr}
   1226c:	mov	fp, sp
   12270:	sub	sp, sp, #16
   12274:	str	r0, [sp, #8]
   12278:	str	r1, [sp, #4]
   1227c:	ldr	r0, [sp, #8]
   12280:	movw	r1, #0
   12284:	cmp	r0, r1
   12288:	beq	1229c <bst_pesquisa@@Base+0x34>
   1228c:	ldr	r0, [sp, #4]
   12290:	movw	r1, #0
   12294:	cmp	r0, r1
   12298:	bne	122a8 <bst_pesquisa@@Base+0x40>
   1229c:	movw	r0, #0
   122a0:	str	r0, [fp, #-4]
   122a4:	b	122bc <bst_pesquisa@@Base+0x54>
   122a8:	ldr	r0, [sp, #8]
   122ac:	ldr	r0, [r0]
   122b0:	ldr	r1, [sp, #4]
   122b4:	bl	122c8 <bst_pesquisa_impl@@Base>
   122b8:	str	r0, [fp, #-4]
   122bc:	ldr	r0, [fp, #-4]
   122c0:	mov	sp, fp
   122c4:	pop	{fp, pc}

000122c8 <bst_pesquisa_impl@@Base>:
   122c8:	push	{fp, lr}
   122cc:	mov	fp, sp
   122d0:	sub	sp, sp, #16
   122d4:	str	r0, [sp, #8]
   122d8:	str	r1, [sp, #4]
   122dc:	ldr	r0, [sp, #8]
   122e0:	movw	r1, #0
   122e4:	cmp	r0, r1
   122e8:	bne	122f8 <bst_pesquisa_impl@@Base+0x30>
   122ec:	movw	r0, #0
   122f0:	str	r0, [fp, #-4]
   122f4:	b	12360 <bst_pesquisa_impl@@Base+0x98>
   122f8:	ldr	r0, [sp, #4]
   122fc:	ldr	r1, [sp, #8]
   12300:	ldr	r1, [r1]
   12304:	bl	10e48 <strcmp@plt>
   12308:	cmp	r0, #0
   1230c:	bge	12328 <bst_pesquisa_impl@@Base+0x60>
   12310:	ldr	r0, [sp, #8]
   12314:	ldr	r0, [r0, #4]
   12318:	ldr	r1, [sp, #4]
   1231c:	bl	122c8 <bst_pesquisa_impl@@Base>
   12320:	str	r0, [fp, #-4]
   12324:	b	12360 <bst_pesquisa_impl@@Base+0x98>
   12328:	ldr	r0, [sp, #4]
   1232c:	ldr	r1, [sp, #8]
   12330:	ldr	r1, [r1]
   12334:	bl	10e48 <strcmp@plt>
   12338:	cmp	r0, #0
   1233c:	ble	12358 <bst_pesquisa_impl@@Base+0x90>
   12340:	ldr	r0, [sp, #8]
   12344:	ldr	r0, [r0, #8]
   12348:	ldr	r1, [sp, #4]
   1234c:	bl	122c8 <bst_pesquisa_impl@@Base>
   12350:	str	r0, [fp, #-4]
   12354:	b	12360 <bst_pesquisa_impl@@Base+0x98>
   12358:	ldr	r0, [sp, #8]
   1235c:	str	r0, [fp, #-4]
   12360:	ldr	r0, [fp, #-4]
   12364:	mov	sp, fp
   12368:	pop	{fp, pc}

0001236c <bst_insere@@Base>:
   1236c:	push	{fp, lr}
   12370:	mov	fp, sp
   12374:	sub	sp, sp, #16
   12378:	str	r0, [sp, #8]
   1237c:	str	r1, [sp, #4]
   12380:	ldr	r0, [sp, #8]
   12384:	movw	r1, #0
   12388:	cmp	r0, r1
   1238c:	beq	123a0 <bst_insere@@Base+0x34>
   12390:	ldr	r0, [sp, #4]
   12394:	movw	r1, #0
   12398:	cmp	r0, r1
   1239c:	bne	123ac <bst_insere@@Base+0x40>
   123a0:	mvn	r0, #0
   123a4:	str	r0, [fp, #-4]
   123a8:	b	123cc <bst_insere@@Base+0x60>
   123ac:	ldr	r0, [sp, #8]
   123b0:	ldr	r0, [r0]
   123b4:	ldr	r1, [sp, #4]
   123b8:	bl	123d8 <bst_insere_impl@@Base>
   123bc:	ldr	r1, [sp, #8]
   123c0:	str	r0, [r1]
   123c4:	movw	r0, #0
   123c8:	str	r0, [fp, #-4]
   123cc:	ldr	r0, [fp, #-4]
   123d0:	mov	sp, fp
   123d4:	pop	{fp, pc}

000123d8 <bst_insere_impl@@Base>:
   123d8:	push	{fp, lr}
   123dc:	mov	fp, sp
   123e0:	sub	sp, sp, #16
   123e4:	str	r0, [sp, #8]
   123e8:	str	r1, [sp, #4]
   123ec:	ldr	r0, [sp, #8]
   123f0:	movw	r1, #0
   123f4:	cmp	r0, r1
   123f8:	bne	1240c <bst_insere_impl@@Base+0x34>
   123fc:	ldr	r0, [sp, #4]
   12400:	bl	126c8 <bst_novo_no@@Base>
   12404:	str	r0, [fp, #-4]
   12408:	b	1247c <bst_insere_impl@@Base+0xa4>
   1240c:	ldr	r0, [sp, #4]
   12410:	ldr	r1, [sp, #8]
   12414:	ldr	r1, [r1]
   12418:	bl	10e48 <strcmp@plt>
   1241c:	cmp	r0, #0
   12420:	bge	12440 <bst_insere_impl@@Base+0x68>
   12424:	ldr	r0, [sp, #8]
   12428:	ldr	r0, [r0, #4]
   1242c:	ldr	r1, [sp, #4]
   12430:	bl	123d8 <bst_insere_impl@@Base>
   12434:	ldr	r1, [sp, #8]
   12438:	str	r0, [r1, #4]
   1243c:	b	12474 <bst_insere_impl@@Base+0x9c>
   12440:	ldr	r0, [sp, #4]
   12444:	ldr	r1, [sp, #8]
   12448:	ldr	r1, [r1]
   1244c:	bl	10e48 <strcmp@plt>
   12450:	cmp	r0, #0
   12454:	ble	12470 <bst_insere_impl@@Base+0x98>
   12458:	ldr	r0, [sp, #8]
   1245c:	ldr	r0, [r0, #8]
   12460:	ldr	r1, [sp, #4]
   12464:	bl	123d8 <bst_insere_impl@@Base>
   12468:	ldr	r1, [sp, #8]
   1246c:	str	r0, [r1, #8]
   12470:	b	12474 <bst_insere_impl@@Base+0x9c>
   12474:	ldr	r0, [sp, #8]
   12478:	str	r0, [fp, #-4]
   1247c:	ldr	r0, [fp, #-4]
   12480:	mov	sp, fp
   12484:	pop	{fp, pc}

00012488 <bst_remove@@Base>:
   12488:	push	{fp, lr}
   1248c:	mov	fp, sp
   12490:	sub	sp, sp, #16
   12494:	str	r0, [sp, #8]
   12498:	str	r1, [sp, #4]
   1249c:	ldr	r0, [sp, #8]
   124a0:	movw	r1, #0
   124a4:	cmp	r0, r1
   124a8:	beq	124bc <bst_remove@@Base+0x34>
   124ac:	ldr	r0, [sp, #4]
   124b0:	movw	r1, #0
   124b4:	cmp	r0, r1
   124b8:	bne	124c8 <bst_remove@@Base+0x40>
   124bc:	mvn	r0, #0
   124c0:	str	r0, [fp, #-4]
   124c4:	b	124e8 <bst_remove@@Base+0x60>
   124c8:	ldr	r0, [sp, #8]
   124cc:	ldr	r0, [r0]
   124d0:	ldr	r1, [sp, #4]
   124d4:	bl	12008 <bst_remove_impl@@Base>
   124d8:	ldr	r1, [sp, #8]
   124dc:	str	r0, [r1]
   124e0:	movw	r0, #0
   124e4:	str	r0, [fp, #-4]
   124e8:	ldr	r0, [fp, #-4]
   124ec:	mov	sp, fp
   124f0:	pop	{fp, pc}

000124f4 <bst_min@@Base>:
   124f4:	push	{fp, lr}
   124f8:	mov	fp, sp
   124fc:	sub	sp, sp, #8
   12500:	str	r0, [sp]
   12504:	ldr	r0, [sp]
   12508:	movw	r1, #0
   1250c:	cmp	r0, r1
   12510:	bne	12520 <bst_min@@Base+0x2c>
   12514:	movw	r0, #0
   12518:	str	r0, [sp, #4]
   1251c:	b	12534 <bst_min@@Base+0x40>
   12520:	ldr	r0, [sp]
   12524:	ldr	r0, [r0]
   12528:	bl	12540 <bst_no_valormin@@Base>
   1252c:	ldr	r0, [r0]
   12530:	str	r0, [sp, #4]
   12534:	ldr	r0, [sp, #4]
   12538:	mov	sp, fp
   1253c:	pop	{fp, pc}

00012540 <bst_no_valormin@@Base>:
   12540:	sub	sp, sp, #8
   12544:	str	r0, [sp, #4]
   12548:	ldr	r0, [sp, #4]
   1254c:	str	r0, [sp]
   12550:	ldr	r0, [sp]
   12554:	ldr	r0, [r0, #4]
   12558:	movw	r1, #0
   1255c:	cmp	r0, r1
   12560:	beq	12574 <bst_no_valormin@@Base+0x34>
   12564:	ldr	r0, [sp]
   12568:	ldr	r0, [r0, #4]
   1256c:	str	r0, [sp]
   12570:	b	12550 <bst_no_valormin@@Base+0x10>
   12574:	ldr	r0, [sp]
   12578:	add	sp, sp, #8
   1257c:	bx	lr

00012580 <bst_max@@Base>:
   12580:	push	{fp, lr}
   12584:	mov	fp, sp
   12588:	sub	sp, sp, #8
   1258c:	str	r0, [sp]
   12590:	ldr	r0, [sp]
   12594:	movw	r1, #0
   12598:	cmp	r0, r1
   1259c:	bne	125ac <bst_max@@Base+0x2c>
   125a0:	movw	r0, #0
   125a4:	str	r0, [sp, #4]
   125a8:	b	125c0 <bst_max@@Base+0x40>
   125ac:	ldr	r0, [sp]
   125b0:	ldr	r0, [r0]
   125b4:	bl	125cc <bst_no_valormax@@Base>
   125b8:	ldr	r0, [r0]
   125bc:	str	r0, [sp, #4]
   125c0:	ldr	r0, [sp, #4]
   125c4:	mov	sp, fp
   125c8:	pop	{fp, pc}

000125cc <bst_no_valormax@@Base>:
   125cc:	sub	sp, sp, #8
   125d0:	str	r0, [sp, #4]
   125d4:	ldr	r0, [sp, #4]
   125d8:	str	r0, [sp]
   125dc:	ldr	r0, [sp]
   125e0:	ldr	r0, [r0, #8]
   125e4:	movw	r1, #0
   125e8:	cmp	r0, r1
   125ec:	beq	12600 <bst_no_valormax@@Base+0x34>
   125f0:	ldr	r0, [sp]
   125f4:	ldr	r0, [r0, #8]
   125f8:	str	r0, [sp]
   125fc:	b	125dc <bst_no_valormax@@Base+0x10>
   12600:	ldr	r0, [sp]
   12604:	add	sp, sp, #8
   12608:	bx	lr

0001260c <bst_imprime@@Base>:
   1260c:	push	{fp, lr}
   12610:	mov	fp, sp
   12614:	sub	sp, sp, #16
   12618:	str	r0, [fp, #-4]
   1261c:	ldr	r0, [fp, #-4]
   12620:	movw	r1, #0
   12624:	cmp	r0, r1
   12628:	bne	12630 <bst_imprime@@Base+0x24>
   1262c:	b	12660 <bst_imprime@@Base+0x54>
   12630:	movw	r0, #10511	; 0x290f
   12634:	movt	r0, #1
   12638:	bl	10e54 <printf@plt>
   1263c:	ldr	lr, [fp, #-4]
   12640:	ldr	lr, [lr]
   12644:	str	r0, [sp, #8]
   12648:	mov	r0, lr
   1264c:	bl	12668 <bst_preordem_impl@@Base>
   12650:	movw	r0, #10412	; 0x28ac
   12654:	movt	r0, #1
   12658:	bl	10e54 <printf@plt>
   1265c:	str	r0, [sp, #4]
   12660:	mov	sp, fp
   12664:	pop	{fp, pc}

00012668 <bst_preordem_impl@@Base>:
   12668:	push	{fp, lr}
   1266c:	mov	fp, sp
   12670:	sub	sp, sp, #8
   12674:	str	r0, [sp, #4]
   12678:	ldr	r0, [sp, #4]
   1267c:	movw	r1, #0
   12680:	cmp	r0, r1
   12684:	bne	1268c <bst_preordem_impl@@Base+0x24>
   12688:	b	126c0 <bst_preordem_impl@@Base+0x58>
   1268c:	ldr	r0, [sp, #4]
   12690:	ldr	r1, [r0]
   12694:	movw	r0, #10522	; 0x291a
   12698:	movt	r0, #1
   1269c:	bl	10e54 <printf@plt>
   126a0:	ldr	r1, [sp, #4]
   126a4:	ldr	r1, [r1, #4]
   126a8:	str	r0, [sp]
   126ac:	mov	r0, r1
   126b0:	bl	12668 <bst_preordem_impl@@Base>
   126b4:	ldr	r0, [sp, #4]
   126b8:	ldr	r0, [r0, #8]
   126bc:	bl	12668 <bst_preordem_impl@@Base>
   126c0:	mov	sp, fp
   126c4:	pop	{fp, pc}

000126c8 <bst_novo_no@@Base>:
   126c8:	push	{fp, lr}
   126cc:	mov	fp, sp
   126d0:	sub	sp, sp, #16
   126d4:	str	r0, [fp, #-4]
   126d8:	mov	r0, #12
   126dc:	bl	10ea8 <malloc@plt>
   126e0:	str	r0, [sp, #8]
   126e4:	ldr	r0, [fp, #-4]
   126e8:	bl	10ecc <strlen@plt>
   126ec:	add	r0, r0, #1
   126f0:	mov	lr, r0
   126f4:	str	lr, [sp, #4]
   126f8:	bl	10ea8 <malloc@plt>
   126fc:	ldr	lr, [sp, #8]
   12700:	str	r0, [lr]
   12704:	ldr	r0, [sp, #8]
   12708:	ldr	r0, [r0]
   1270c:	ldr	r1, [fp, #-4]
   12710:	bl	10e9c <strcpy@plt>
   12714:	ldr	r1, [sp, #8]
   12718:	movw	lr, #0
   1271c:	str	lr, [r1, #4]
   12720:	ldr	r1, [sp, #8]
   12724:	str	lr, [r1, #8]
   12728:	ldr	r1, [sp, #8]
   1272c:	str	r0, [sp]
   12730:	mov	r0, r1
   12734:	mov	sp, fp
   12738:	pop	{fp, pc}

0001273c <bst_altura@@Base>:
   1273c:	push	{fp, lr}
   12740:	mov	fp, sp
   12744:	sub	sp, sp, #16
   12748:	str	r0, [sp, #8]
   1274c:	movw	r0, #0
   12750:	str	r0, [sp, #4]
   12754:	str	r0, [sp]
   12758:	ldr	r1, [sp, #8]
   1275c:	cmp	r1, r0
   12760:	bne	12770 <bst_altura@@Base+0x34>
   12764:	mvn	r0, #0
   12768:	str	r0, [fp, #-4]
   1276c:	b	12800 <bst_altura@@Base+0xc4>
   12770:	ldr	r0, [sp, #8]
   12774:	ldr	r0, [r0, #8]
   12778:	movw	r1, #0
   1277c:	cmp	r0, r1
   12780:	bne	127a4 <bst_altura@@Base+0x68>
   12784:	ldr	r0, [sp, #8]
   12788:	ldr	r0, [r0, #4]
   1278c:	movw	r1, #0
   12790:	cmp	r0, r1
   12794:	bne	127a4 <bst_altura@@Base+0x68>
   12798:	movw	r0, #0
   1279c:	str	r0, [fp, #-4]
   127a0:	b	12800 <bst_altura@@Base+0xc4>
   127a4:	ldr	r0, [sp, #8]
   127a8:	ldr	r0, [r0, #4]
   127ac:	bl	1273c <bst_altura@@Base>
   127b0:	str	r0, [sp, #4]
   127b4:	ldr	r0, [sp, #8]
   127b8:	ldr	r0, [r0, #8]
   127bc:	bl	1273c <bst_altura@@Base>
   127c0:	str	r0, [sp]
   127c4:	ldr	r0, [sp, #4]
   127c8:	ldr	lr, [sp]
   127cc:	cmp	r0, lr
   127d0:	ble	127ec <bst_altura@@Base+0xb0>
   127d4:	ldr	r0, [sp, #8]
   127d8:	ldr	r0, [r0, #4]
   127dc:	bl	1273c <bst_altura@@Base>
   127e0:	add	r0, r0, #1
   127e4:	str	r0, [fp, #-4]
   127e8:	b	12800 <bst_altura@@Base+0xc4>
   127ec:	ldr	r0, [sp, #8]
   127f0:	ldr	r0, [r0, #8]
   127f4:	bl	1273c <bst_altura@@Base>
   127f8:	add	r0, r0, #1
   127fc:	str	r0, [fp, #-4]
   12800:	ldr	r0, [fp, #-4]
   12804:	mov	sp, fp
   12808:	pop	{fp, pc}

0001280c <__libc_csu_init@@Base>:
   1280c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12810:	mov	r7, r0
   12814:	ldr	r6, [pc, #72]	; 12864 <__libc_csu_init@@Base+0x58>
   12818:	ldr	r5, [pc, #72]	; 12868 <__libc_csu_init@@Base+0x5c>
   1281c:	add	r6, pc, r6
   12820:	add	r5, pc, r5
   12824:	sub	r6, r6, r5
   12828:	mov	r8, r1
   1282c:	mov	r9, r2
   12830:	bl	10e28 <strcmp@plt-0x20>
   12834:	asrs	r6, r6, #2
   12838:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1283c:	mov	r4, #0
   12840:	add	r4, r4, #1
   12844:	ldr	r3, [r5], #4
   12848:	mov	r2, r9
   1284c:	mov	r1, r8
   12850:	mov	r0, r7
   12854:	blx	r3
   12858:	cmp	r6, r4
   1285c:	bne	12840 <__libc_csu_init@@Base+0x34>
   12860:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12864:	andeq	r0, r1, r8, ror #13
   12868:	andeq	r0, r1, r0, ror #13

0001286c <__libc_csu_fini@@Base>:
   1286c:	bx	lr

Disassembly of section .fini:

00012870 <.fini>:
   12870:	push	{r3, lr}
   12874:	pop	{r3, pc}
