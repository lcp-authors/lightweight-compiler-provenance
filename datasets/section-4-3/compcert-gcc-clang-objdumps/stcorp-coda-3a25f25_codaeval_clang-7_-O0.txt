
../compcert-repos/stcorp-coda-3a25f25/codaeval:     file format elf32-littlearm


Disassembly of section .init:

00010d88 <.init>:
   10d88:	push	{r3, lr}
   10d8c:	bl	10f88 <_start@@Base+0x3c>
   10d90:	pop	{r3, pc}

Disassembly of section .plt:

00010d94 <coda_match_filefilter@plt-0x14>:
   10d94:	push	{lr}		; (str lr, [sp, #-4]!)
   10d98:	ldr	lr, [pc, #4]	; 10da4 <coda_match_filefilter@plt-0x4>
   10d9c:	add	lr, pc, lr
   10da0:	ldr	pc, [lr, #8]!
   10da4:	andeq	r2, r1, ip, asr r2

00010da8 <coda_match_filefilter@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #73728	; 0x12000
   10db0:	ldr	pc, [ip, #604]!	; 0x25c

00010db4 <coda_expression_eval_integer@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #73728	; 0x12000
   10dbc:	ldr	pc, [ip, #596]!	; 0x254

00010dc0 <strcmp@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #73728	; 0x12000
   10dc8:	ldr	pc, [ip, #588]!	; 0x24c

00010dcc <printf@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #73728	; 0x12000
   10dd4:	ldr	pc, [ip, #580]!	; 0x244

00010dd8 <coda_set_error@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #73728	; 0x12000
   10de0:	ldr	pc, [ip, #572]!	; 0x23c

00010de4 <coda_open@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #73728	; 0x12000
   10dec:	ldr	pc, [ip, #564]!	; 0x234

00010df0 <free@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #73728	; 0x12000
   10df8:	ldr	pc, [ip, #556]!	; 0x22c

00010dfc <coda_set_definition_path_conditional@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #73728	; 0x12000
   10e04:	ldr	pc, [ip, #548]!	; 0x224

00010e08 <coda_set_definition_path@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #73728	; 0x12000
   10e10:	ldr	pc, [ip, #540]!	; 0x21c

00010e14 <coda_expression_eval_bool@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #73728	; 0x12000
   10e1c:	ldr	pc, [ip, #532]!	; 0x214

00010e20 <coda_cursor_set_product@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #73728	; 0x12000
   10e28:	ldr	pc, [ip, #524]!	; 0x20c

00010e2c <coda_done@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #73728	; 0x12000
   10e34:	ldr	pc, [ip, #516]!	; 0x204

00010e38 <__libc_start_main@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #73728	; 0x12000
   10e40:	ldr	pc, [ip, #508]!	; 0x1fc

00010e44 <coda_expression_delete@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #73728	; 0x12000
   10e4c:	ldr	pc, [ip, #500]!	; 0x1f4

00010e50 <__gmon_start__@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #73728	; 0x12000
   10e58:	ldr	pc, [ip, #492]!	; 0x1ec

00010e5c <__ctype_b_loc@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #73728	; 0x12000
   10e64:	ldr	pc, [ip, #484]!	; 0x1e4

00010e68 <exit@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #73728	; 0x12000
   10e70:	ldr	pc, [ip, #476]!	; 0x1dc

00010e74 <strlen@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #73728	; 0x12000
   10e7c:	ldr	pc, [ip, #468]!	; 0x1d4

00010e80 <fprintf@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #73728	; 0x12000
   10e88:	ldr	pc, [ip, #460]!	; 0x1cc

00010e8c <coda_init@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #73728	; 0x12000
   10e94:	ldr	pc, [ip, #452]!	; 0x1c4

00010e98 <coda_set_option_perform_conversions@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #73728	; 0x12000
   10ea0:	ldr	pc, [ip, #444]!	; 0x1bc

00010ea4 <coda_expression_eval_string@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #73728	; 0x12000
   10eac:	ldr	pc, [ip, #436]!	; 0x1b4

00010eb0 <coda_expression_get_type@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #73728	; 0x12000
   10eb8:	ldr	pc, [ip, #428]!	; 0x1ac

00010ebc <coda_close@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #73728	; 0x12000
   10ec4:	ldr	pc, [ip, #420]!	; 0x1a4

00010ec8 <coda_expression_is_constant@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #73728	; 0x12000
   10ed0:	ldr	pc, [ip, #412]!	; 0x19c

00010ed4 <coda_expression_eval_float@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #73728	; 0x12000
   10edc:	ldr	pc, [ip, #404]!	; 0x194

00010ee0 <coda_expression_eval_node@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #73728	; 0x12000
   10ee8:	ldr	pc, [ip, #396]!	; 0x18c

00010eec <coda_errno_to_string@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #73728	; 0x12000
   10ef4:	ldr	pc, [ip, #388]!	; 0x184

00010ef8 <coda_expression_get_type_name@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #73728	; 0x12000
   10f00:	ldr	pc, [ip, #380]!	; 0x17c

00010f04 <coda_expression_from_string@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #73728	; 0x12000
   10f0c:	ldr	pc, [ip, #372]!	; 0x174

00010f10 <coda_get_libcoda_version@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #73728	; 0x12000
   10f18:	ldr	pc, [ip, #364]!	; 0x16c

00010f1c <coda_get_errno@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #73728	; 0x12000
   10f24:	ldr	pc, [ip, #356]!	; 0x164

00010f28 <abort@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #73728	; 0x12000
   10f30:	ldr	pc, [ip, #348]!	; 0x15c

00010f34 <coda_str64@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #73728	; 0x12000
   10f3c:	ldr	pc, [ip, #340]!	; 0x154

00010f40 <__assert_fail@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #73728	; 0x12000
   10f48:	ldr	pc, [ip, #332]!	; 0x14c

Disassembly of section .text:

00010f4c <_start@@Base>:
   10f4c:	mov	fp, #0
   10f50:	mov	lr, #0
   10f54:	pop	{r1}		; (ldr r1, [sp], #4)
   10f58:	mov	r2, sp
   10f5c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f60:	push	{r0}		; (str r0, [sp, #-4]!)
   10f64:	ldr	ip, [pc, #16]	; 10f7c <_start@@Base+0x30>
   10f68:	push	{ip}		; (str ip, [sp, #-4]!)
   10f6c:	ldr	r0, [pc, #12]	; 10f80 <_start@@Base+0x34>
   10f70:	ldr	r3, [pc, #12]	; 10f84 <_start@@Base+0x38>
   10f74:	bl	10e38 <__libc_start_main@plt>
   10f78:	bl	10f28 <abort@plt>
   10f7c:	ldrdeq	r2, [r1], -ip
   10f80:	muleq	r1, r8, r2
   10f84:	andeq	r2, r1, ip, ror r3
   10f88:	ldr	r3, [pc, #20]	; 10fa4 <_start@@Base+0x58>
   10f8c:	ldr	r2, [pc, #20]	; 10fa8 <_start@@Base+0x5c>
   10f90:	add	r3, pc, r3
   10f94:	ldr	r2, [r3, r2]
   10f98:	cmp	r2, #0
   10f9c:	bxeq	lr
   10fa0:	b	10e50 <__gmon_start__@plt>
   10fa4:	andeq	r2, r1, r8, rrx
   10fa8:	muleq	r0, r8, r0
   10fac:	ldr	r0, [pc, #24]	; 10fcc <_start@@Base+0x80>
   10fb0:	ldr	r3, [pc, #24]	; 10fd0 <_start@@Base+0x84>
   10fb4:	cmp	r3, r0
   10fb8:	bxeq	lr
   10fbc:	ldr	r3, [pc, #16]	; 10fd4 <_start@@Base+0x88>
   10fc0:	cmp	r3, #0
   10fc4:	bxeq	lr
   10fc8:	bx	r3
   10fcc:	andeq	r3, r2, r4, lsr #1
   10fd0:	andeq	r3, r2, r4, lsr #1
   10fd4:	andeq	r0, r0, r0
   10fd8:	ldr	r0, [pc, #36]	; 11004 <_start@@Base+0xb8>
   10fdc:	ldr	r1, [pc, #36]	; 11008 <_start@@Base+0xbc>
   10fe0:	sub	r1, r1, r0
   10fe4:	asr	r1, r1, #2
   10fe8:	add	r1, r1, r1, lsr #31
   10fec:	asrs	r1, r1, #1
   10ff0:	bxeq	lr
   10ff4:	ldr	r3, [pc, #16]	; 1100c <_start@@Base+0xc0>
   10ff8:	cmp	r3, #0
   10ffc:	bxeq	lr
   11000:	bx	r3
   11004:	andeq	r3, r2, r4, lsr #1
   11008:	andeq	r3, r2, r4, lsr #1
   1100c:	andeq	r0, r0, r0
   11010:	push	{r4, lr}
   11014:	ldr	r4, [pc, #24]	; 11034 <_start@@Base+0xe8>
   11018:	ldrb	r3, [r4]
   1101c:	cmp	r3, #0
   11020:	popne	{r4, pc}
   11024:	bl	10fac <_start@@Base+0x60>
   11028:	mov	r3, #1
   1102c:	strb	r3, [r4]
   11030:	pop	{r4, pc}
   11034:	andeq	r3, r2, ip, lsr #1
   11038:	b	10fd8 <_start@@Base+0x8c>

0001103c <callback@@Base>:
   1103c:	push	{fp, lr}
   11040:	mov	fp, sp
   11044:	sub	sp, sp, #32
   11048:	str	r0, [fp, #-8]
   1104c:	str	r1, [fp, #-12]
   11050:	str	r2, [sp, #16]
   11054:	str	r3, [sp, #12]
   11058:	ldr	r0, [fp, #-12]
   1105c:	cmp	r0, #0
   11060:	bne	1108c <callback@@Base+0x50>
   11064:	movw	r0, #12456	; 0x30a8
   11068:	movt	r0, #2
   1106c:	ldr	r0, [r0]
   11070:	ldr	r2, [sp, #16]
   11074:	ldr	r3, [fp, #-8]
   11078:	movw	r1, #9196	; 0x23ec
   1107c:	movt	r1, #1
   11080:	bl	10e80 <fprintf@plt>
   11084:	str	r0, [sp, #8]
   11088:	b	110f4 <callback@@Base+0xb8>
   1108c:	ldr	r0, [fp, #-12]
   11090:	cmp	r0, #2
   11094:	bne	110bc <callback@@Base+0x80>
   11098:	movw	r0, #12456	; 0x30a8
   1109c:	movt	r0, #2
   110a0:	ldr	r0, [r0]
   110a4:	ldr	r2, [fp, #-8]
   110a8:	movw	r1, #9214	; 0x23fe
   110ac:	movt	r1, #1
   110b0:	bl	10e80 <fprintf@plt>
   110b4:	str	r0, [sp, #4]
   110b8:	b	110f0 <callback@@Base+0xb4>
   110bc:	ldr	r0, [fp, #-12]
   110c0:	cmp	r0, #1
   110c4:	bne	110ec <callback@@Base+0xb0>
   110c8:	movw	r0, #12456	; 0x30a8
   110cc:	movt	r0, #2
   110d0:	ldr	r0, [r0]
   110d4:	ldr	r2, [fp, #-8]
   110d8:	ldr	r3, [sp, #16]
   110dc:	movw	r1, #9252	; 0x2424
   110e0:	movt	r1, #1
   110e4:	bl	10e80 <fprintf@plt>
   110e8:	str	r0, [sp]
   110ec:	b	110f0 <callback@@Base+0xb4>
   110f0:	b	110f4 <callback@@Base+0xb8>
   110f4:	ldr	r0, [fp, #-12]
   110f8:	cmp	r0, #4
   110fc:	bne	11110 <callback@@Base+0xd4>
   11100:	ldr	r0, [fp, #-8]
   11104:	bl	11124 <callback@@Base+0xe8>
   11108:	str	r0, [fp, #-4]
   1110c:	b	11118 <callback@@Base+0xdc>
   11110:	movw	r0, #0
   11114:	str	r0, [fp, #-4]
   11118:	ldr	r0, [fp, #-4]
   1111c:	mov	sp, fp
   11120:	pop	{fp, pc}
   11124:	push	{r4, r5, fp, lr}
   11128:	add	fp, sp, #8
   1112c:	sub	sp, sp, #568	; 0x238
   11130:	str	r0, [fp, #-16]
   11134:	movw	r0, #0
   11138:	str	r0, [fp, #-20]	; 0xffffffec
   1113c:	ldr	r0, [fp, #-16]
   11140:	sub	r1, fp, #20
   11144:	bl	10de4 <coda_open@plt>
   11148:	cmp	r0, #0
   1114c:	beq	1115c <callback@@Base+0x120>
   11150:	movw	r0, #1
   11154:	str	r0, [fp, #-12]
   11158:	b	1128c <callback@@Base+0x250>
   1115c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11160:	add	r0, sp, #32
   11164:	bl	10e20 <coda_cursor_set_product@plt>
   11168:	cmp	r0, #0
   1116c:	beq	11188 <callback@@Base+0x14c>
   11170:	ldr	r0, [fp, #-20]	; 0xffffffec
   11174:	bl	10ebc <coda_close@plt>
   11178:	movw	lr, #1
   1117c:	str	lr, [fp, #-12]
   11180:	str	r0, [sp, #28]
   11184:	b	1128c <callback@@Base+0x250>
   11188:	movw	r0, #12464	; 0x30b0
   1118c:	movt	r0, #2
   11190:	ldr	r0, [r0]
   11194:	movw	r1, #0
   11198:	cmp	r0, r1
   1119c:	beq	11218 <callback@@Base+0x1dc>
   111a0:	movw	r0, #12464	; 0x30b0
   111a4:	movt	r0, #2
   111a8:	ldr	r0, [r0]
   111ac:	add	r1, sp, #32
   111b0:	bl	10ee0 <coda_expression_eval_node@plt>
   111b4:	cmp	r0, #0
   111b8:	beq	11214 <callback@@Base+0x1d8>
   111bc:	movw	r0, #12456	; 0x30a8
   111c0:	movt	r0, #2
   111c4:	ldr	r0, [r0]
   111c8:	str	r0, [sp, #24]
   111cc:	bl	10f1c <coda_get_errno@plt>
   111d0:	ldr	r0, [r0]
   111d4:	bl	10eec <coda_errno_to_string@plt>
   111d8:	ldr	lr, [sp, #24]
   111dc:	str	r0, [sp, #20]
   111e0:	mov	r0, lr
   111e4:	movw	r1, #9741	; 0x260d
   111e8:	movt	r1, #1
   111ec:	ldr	r2, [sp, #20]
   111f0:	bl	10e80 <fprintf@plt>
   111f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   111f8:	str	r0, [sp, #16]
   111fc:	mov	r0, r1
   11200:	bl	10ebc <coda_close@plt>
   11204:	movw	r1, #0
   11208:	str	r1, [fp, #-12]
   1120c:	str	r0, [sp, #12]
   11210:	b	1128c <callback@@Base+0x250>
   11214:	b	11218 <callback@@Base+0x1dc>
   11218:	add	r0, sp, #32
   1121c:	bl	11a30 <main@@Base+0x798>
   11220:	cmp	r0, #0
   11224:	beq	11268 <callback@@Base+0x22c>
   11228:	movw	r0, #12456	; 0x30a8
   1122c:	movt	r0, #2
   11230:	ldr	r0, [r0]
   11234:	str	r0, [sp, #8]
   11238:	bl	10f1c <coda_get_errno@plt>
   1123c:	ldr	r0, [r0]
   11240:	bl	10eec <coda_errno_to_string@plt>
   11244:	ldr	r3, [fp, #-16]
   11248:	ldr	lr, [sp, #8]
   1124c:	str	r0, [sp, #4]
   11250:	mov	r0, lr
   11254:	movw	r1, #9196	; 0x23ec
   11258:	movt	r1, #1
   1125c:	ldr	r2, [sp, #4]
   11260:	bl	10e80 <fprintf@plt>
   11264:	str	r0, [sp]
   11268:	ldr	r0, [fp, #-20]	; 0xffffffec
   1126c:	bl	10ebc <coda_close@plt>
   11270:	cmp	r0, #0
   11274:	beq	11284 <callback@@Base+0x248>
   11278:	movw	r0, #1
   1127c:	str	r0, [fp, #-12]
   11280:	b	1128c <callback@@Base+0x250>
   11284:	movw	r0, #0
   11288:	str	r0, [fp, #-12]
   1128c:	ldr	r0, [fp, #-12]
   11290:	sub	sp, fp, #8
   11294:	pop	{r4, r5, fp, pc}

00011298 <main@@Base>:
   11298:	push	{fp, lr}
   1129c:	mov	fp, sp
   112a0:	sub	sp, sp, #160	; 0xa0
   112a4:	movw	r2, #0
   112a8:	str	r2, [fp, #-4]
   112ac:	str	r0, [fp, #-8]
   112b0:	str	r1, [fp, #-12]
   112b4:	movw	r0, #1
   112b8:	str	r0, [fp, #-16]
   112bc:	str	r2, [fp, #-20]	; 0xffffffec
   112c0:	ldr	r0, [fp, #-8]
   112c4:	cmp	r0, #1
   112c8:	beq	11304 <main@@Base+0x6c>
   112cc:	ldr	r0, [fp, #-12]
   112d0:	ldr	r0, [r0, #4]
   112d4:	movw	r1, #9288	; 0x2448
   112d8:	movt	r1, #1
   112dc:	bl	10dc0 <strcmp@plt>
   112e0:	cmp	r0, #0
   112e4:	beq	11304 <main@@Base+0x6c>
   112e8:	ldr	r0, [fp, #-12]
   112ec:	ldr	r0, [r0, #4]
   112f0:	movw	r1, #9291	; 0x244b
   112f4:	movt	r1, #1
   112f8:	bl	10dc0 <strcmp@plt>
   112fc:	cmp	r0, #0
   11300:	bne	11310 <main@@Base+0x78>
   11304:	bl	11cd4 <main@@Base+0xa3c>
   11308:	movw	r0, #0
   1130c:	bl	10e68 <exit@plt>
   11310:	ldr	r0, [fp, #-12]
   11314:	ldr	r0, [r0, #4]
   11318:	movw	r1, #9298	; 0x2452
   1131c:	movt	r1, #1
   11320:	bl	10dc0 <strcmp@plt>
   11324:	cmp	r0, #0
   11328:	beq	11348 <main@@Base+0xb0>
   1132c:	ldr	r0, [fp, #-12]
   11330:	ldr	r0, [r0, #4]
   11334:	movw	r1, #9301	; 0x2455
   11338:	movt	r1, #1
   1133c:	bl	10dc0 <strcmp@plt>
   11340:	cmp	r0, #0
   11344:	bne	11354 <main@@Base+0xbc>
   11348:	bl	11fdc <main@@Base+0xd44>
   1134c:	movw	r0, #0
   11350:	bl	10e68 <exit@plt>
   11354:	movw	r0, #1
   11358:	str	r0, [fp, #-24]	; 0xffffffe8
   1135c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11360:	add	r0, r0, #1
   11364:	ldr	r1, [fp, #-8]
   11368:	cmp	r0, r1
   1136c:	bge	113c0 <main@@Base+0x128>
   11370:	ldr	r0, [fp, #-12]
   11374:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11378:	add	r0, r0, r1, lsl #2
   1137c:	ldr	r0, [r0]
   11380:	movw	r1, #9311	; 0x245f
   11384:	movt	r1, #1
   11388:	bl	10dc0 <strcmp@plt>
   1138c:	cmp	r0, #0
   11390:	bne	113c0 <main@@Base+0x128>
   11394:	ldr	r0, [fp, #-12]
   11398:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1139c:	add	r1, r1, #1
   113a0:	add	r0, r0, r1, lsl #2
   113a4:	ldr	r0, [r0]
   113a8:	bl	10e08 <coda_set_definition_path@plt>
   113ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   113b0:	add	r1, r1, #2
   113b4:	str	r1, [fp, #-24]	; 0xffffffe8
   113b8:	str	r0, [fp, #-32]	; 0xffffffe0
   113bc:	b	11434 <main@@Base+0x19c>
   113c0:	movw	r0, #9314	; 0x2462
   113c4:	movt	r0, #1
   113c8:	str	r0, [fp, #-28]	; 0xffffffe4
   113cc:	ldr	r0, [fp, #-12]
   113d0:	ldr	r0, [r0]
   113d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   113d8:	movw	r1, #0
   113dc:	bl	10dfc <coda_set_definition_path_conditional@plt>
   113e0:	cmp	r0, #0
   113e4:	beq	11430 <main@@Base+0x198>
   113e8:	movw	r0, #12456	; 0x30a8
   113ec:	movt	r0, #2
   113f0:	ldr	r0, [r0]
   113f4:	str	r0, [fp, #-36]	; 0xffffffdc
   113f8:	bl	10f1c <coda_get_errno@plt>
   113fc:	ldr	r0, [r0]
   11400:	bl	10eec <coda_errno_to_string@plt>
   11404:	ldr	lr, [fp, #-36]	; 0xffffffdc
   11408:	str	r0, [fp, #-40]	; 0xffffffd8
   1140c:	mov	r0, lr
   11410:	movw	r1, #9340	; 0x247c
   11414:	movt	r1, #1
   11418:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1141c:	bl	10e80 <fprintf@plt>
   11420:	movw	r1, #1
   11424:	str	r0, [fp, #-44]	; 0xffffffd4
   11428:	mov	r0, r1
   1142c:	bl	10e68 <exit@plt>
   11430:	b	11434 <main@@Base+0x19c>
   11434:	b	11438 <main@@Base+0x1a0>
   11438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1143c:	ldr	r1, [fp, #-8]
   11440:	cmp	r0, r1
   11444:	bge	11628 <main@@Base+0x390>
   11448:	ldr	r0, [fp, #-12]
   1144c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11450:	add	r0, r0, r1, lsl #2
   11454:	ldr	r0, [r0]
   11458:	movw	r1, #9351	; 0x2487
   1145c:	movt	r1, #1
   11460:	bl	10dc0 <strcmp@plt>
   11464:	cmp	r0, #0
   11468:	beq	11490 <main@@Base+0x1f8>
   1146c:	ldr	r0, [fp, #-12]
   11470:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11474:	add	r0, r0, r1, lsl #2
   11478:	ldr	r0, [r0]
   1147c:	movw	r1, #9354	; 0x248a
   11480:	movt	r1, #1
   11484:	bl	10dc0 <strcmp@plt>
   11488:	cmp	r0, #0
   1148c:	bne	1149c <main@@Base+0x204>
   11490:	movw	r0, #1
   11494:	str	r0, [fp, #-20]	; 0xffffffec
   11498:	b	11618 <main@@Base+0x380>
   1149c:	ldr	r0, [fp, #-12]
   114a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   114a4:	add	r0, r0, r1, lsl #2
   114a8:	ldr	r0, [r0]
   114ac:	movw	r1, #9362	; 0x2492
   114b0:	movt	r1, #1
   114b4:	bl	10dc0 <strcmp@plt>
   114b8:	cmp	r0, #0
   114bc:	beq	114e4 <main@@Base+0x24c>
   114c0:	ldr	r0, [fp, #-12]
   114c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   114c8:	add	r0, r0, r1, lsl #2
   114cc:	ldr	r0, [r0]
   114d0:	movw	r1, #9365	; 0x2495
   114d4:	movt	r1, #1
   114d8:	bl	10dc0 <strcmp@plt>
   114dc:	cmp	r0, #0
   114e0:	bne	114f0 <main@@Base+0x258>
   114e4:	movw	r0, #0
   114e8:	str	r0, [fp, #-16]
   114ec:	b	11614 <main@@Base+0x37c>
   114f0:	ldr	r0, [fp, #-12]
   114f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   114f8:	add	r0, r0, r1, lsl #2
   114fc:	ldr	r0, [r0]
   11500:	movw	r1, #9387	; 0x24ab
   11504:	movt	r1, #1
   11508:	bl	10dc0 <strcmp@plt>
   1150c:	cmp	r0, #0
   11510:	bne	115c8 <main@@Base+0x330>
   11514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11518:	add	r0, r0, #1
   1151c:	ldr	r1, [fp, #-8]
   11520:	cmp	r0, r1
   11524:	bge	115c8 <main@@Base+0x330>
   11528:	ldr	r0, [fp, #-12]
   1152c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11530:	add	r1, r1, #1
   11534:	add	r0, r0, r1, lsl #2
   11538:	ldr	r0, [r0]
   1153c:	ldrb	r0, [r0]
   11540:	cmp	r0, #45	; 0x2d
   11544:	beq	115c8 <main@@Base+0x330>
   11548:	ldr	r0, [fp, #-12]
   1154c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11550:	add	r1, r1, #1
   11554:	add	r0, r0, r1, lsl #2
   11558:	ldr	r0, [r0]
   1155c:	movw	r1, #12464	; 0x30b0
   11560:	movt	r1, #2
   11564:	bl	10f04 <coda_expression_from_string@plt>
   11568:	cmp	r0, #0
   1156c:	beq	115b8 <main@@Base+0x320>
   11570:	movw	r0, #12456	; 0x30a8
   11574:	movt	r0, #2
   11578:	ldr	r0, [r0]
   1157c:	str	r0, [fp, #-48]	; 0xffffffd0
   11580:	bl	10f1c <coda_get_errno@plt>
   11584:	ldr	r0, [r0]
   11588:	bl	10eec <coda_errno_to_string@plt>
   1158c:	ldr	lr, [fp, #-48]	; 0xffffffd0
   11590:	str	r0, [fp, #-52]	; 0xffffffcc
   11594:	mov	r0, lr
   11598:	movw	r1, #9390	; 0x24ae
   1159c:	movt	r1, #1
   115a0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   115a4:	bl	10e80 <fprintf@plt>
   115a8:	movw	r1, #1
   115ac:	str	r0, [fp, #-56]	; 0xffffffc8
   115b0:	mov	r0, r1
   115b4:	bl	10e68 <exit@plt>
   115b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115bc:	add	r0, r0, #1
   115c0:	str	r0, [fp, #-24]	; 0xffffffe8
   115c4:	b	11610 <main@@Base+0x378>
   115c8:	ldr	r0, [fp, #-12]
   115cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   115d0:	add	r0, r0, r1, lsl #2
   115d4:	ldr	r0, [r0]
   115d8:	ldrb	r0, [r0]
   115dc:	cmp	r0, #45	; 0x2d
   115e0:	beq	115e8 <main@@Base+0x350>
   115e4:	b	11628 <main@@Base+0x390>
   115e8:	movw	r0, #12456	; 0x30a8
   115ec:	movt	r0, #2
   115f0:	ldr	r0, [r0]
   115f4:	movw	r1, #9427	; 0x24d3
   115f8:	movt	r1, #1
   115fc:	bl	10e80 <fprintf@plt>
   11600:	str	r0, [fp, #-60]	; 0xffffffc4
   11604:	bl	11cd4 <main@@Base+0xa3c>
   11608:	movw	r0, #1
   1160c:	bl	10e68 <exit@plt>
   11610:	b	11614 <main@@Base+0x37c>
   11614:	b	11618 <main@@Base+0x380>
   11618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1161c:	add	r0, r0, #1
   11620:	str	r0, [fp, #-24]	; 0xffffffe8
   11624:	b	11438 <main@@Base+0x1a0>
   11628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1162c:	ldr	r1, [fp, #-8]
   11630:	cmp	r0, r1
   11634:	blt	11660 <main@@Base+0x3c8>
   11638:	movw	r0, #12456	; 0x30a8
   1163c:	movt	r0, #2
   11640:	ldr	r0, [r0]
   11644:	movw	r1, #9427	; 0x24d3
   11648:	movt	r1, #1
   1164c:	bl	10e80 <fprintf@plt>
   11650:	str	r0, [fp, #-64]	; 0xffffffc0
   11654:	bl	11cd4 <main@@Base+0xa3c>
   11658:	movw	r0, #1
   1165c:	bl	10e68 <exit@plt>
   11660:	ldr	r0, [fp, #-12]
   11664:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11668:	add	r0, r0, r1, lsl #2
   1166c:	ldr	r0, [r0]
   11670:	movw	r1, #12468	; 0x30b4
   11674:	movt	r1, #2
   11678:	bl	10f04 <coda_expression_from_string@plt>
   1167c:	cmp	r0, #0
   11680:	beq	116cc <main@@Base+0x434>
   11684:	movw	r0, #12456	; 0x30a8
   11688:	movt	r0, #2
   1168c:	ldr	r0, [r0]
   11690:	str	r0, [fp, #-68]	; 0xffffffbc
   11694:	bl	10f1c <coda_get_errno@plt>
   11698:	ldr	r0, [r0]
   1169c:	bl	10eec <coda_errno_to_string@plt>
   116a0:	ldr	lr, [fp, #-68]	; 0xffffffbc
   116a4:	str	r0, [fp, #-72]	; 0xffffffb8
   116a8:	mov	r0, lr
   116ac:	movw	r1, #9453	; 0x24ed
   116b0:	movt	r1, #1
   116b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   116b8:	bl	10e80 <fprintf@plt>
   116bc:	movw	r1, #1
   116c0:	str	r0, [fp, #-76]	; 0xffffffb4
   116c4:	mov	r0, r1
   116c8:	bl	10e68 <exit@plt>
   116cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116d0:	add	r0, r0, #1
   116d4:	str	r0, [fp, #-24]	; 0xffffffe8
   116d8:	movw	r0, #12468	; 0x30b4
   116dc:	movt	r0, #2
   116e0:	ldr	r0, [r0]
   116e4:	movw	r1, #12472	; 0x30b8
   116e8:	movt	r1, #2
   116ec:	bl	10eb0 <coda_expression_get_type@plt>
   116f0:	cmp	r0, #0
   116f4:	beq	11740 <main@@Base+0x4a8>
   116f8:	movw	r0, #12456	; 0x30a8
   116fc:	movt	r0, #2
   11700:	ldr	r0, [r0]
   11704:	str	r0, [sp, #80]	; 0x50
   11708:	bl	10f1c <coda_get_errno@plt>
   1170c:	ldr	r0, [r0]
   11710:	bl	10eec <coda_errno_to_string@plt>
   11714:	ldr	lr, [sp, #80]	; 0x50
   11718:	str	r0, [sp, #76]	; 0x4c
   1171c:	mov	r0, lr
   11720:	movw	r1, #9340	; 0x247c
   11724:	movt	r1, #1
   11728:	ldr	r2, [sp, #76]	; 0x4c
   1172c:	bl	10e80 <fprintf@plt>
   11730:	movw	r1, #1
   11734:	str	r0, [sp, #72]	; 0x48
   11738:	mov	r0, r1
   1173c:	bl	10e68 <exit@plt>
   11740:	movw	r0, #12472	; 0x30b8
   11744:	movt	r0, #2
   11748:	ldr	r0, [r0]
   1174c:	cmp	r0, #4
   11750:	beq	11768 <main@@Base+0x4d0>
   11754:	movw	r0, #12472	; 0x30b8
   11758:	movt	r0, #2
   1175c:	ldr	r0, [r0]
   11760:	cmp	r0, #5
   11764:	bne	117b8 <main@@Base+0x520>
   11768:	movw	r0, #12456	; 0x30a8
   1176c:	movt	r0, #2
   11770:	ldr	r0, [r0]
   11774:	movw	r1, #12472	; 0x30b8
   11778:	movt	r1, #2
   1177c:	ldr	r1, [r1]
   11780:	str	r0, [sp, #68]	; 0x44
   11784:	mov	r0, r1
   11788:	bl	10ef8 <coda_expression_get_type_name@plt>
   1178c:	ldr	r1, [sp, #68]	; 0x44
   11790:	str	r0, [sp, #64]	; 0x40
   11794:	mov	r0, r1
   11798:	movw	r1, #9485	; 0x250d
   1179c:	movt	r1, #1
   117a0:	ldr	r2, [sp, #64]	; 0x40
   117a4:	bl	10e80 <fprintf@plt>
   117a8:	movw	r1, #1
   117ac:	str	r0, [sp, #60]	; 0x3c
   117b0:	mov	r0, r1
   117b4:	bl	10e68 <exit@plt>
   117b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   117bc:	cmp	r0, #0
   117c0:	beq	11808 <main@@Base+0x570>
   117c4:	movw	r0, #12468	; 0x30b4
   117c8:	movt	r0, #2
   117cc:	ldr	r0, [r0]
   117d0:	bl	10e44 <coda_expression_delete@plt>
   117d4:	movw	r0, #12464	; 0x30b0
   117d8:	movt	r0, #2
   117dc:	ldr	r0, [r0]
   117e0:	movw	lr, #0
   117e4:	cmp	r0, lr
   117e8:	beq	117fc <main@@Base+0x564>
   117ec:	movw	r0, #12464	; 0x30b0
   117f0:	movt	r0, #2
   117f4:	ldr	r0, [r0]
   117f8:	bl	10e44 <coda_expression_delete@plt>
   117fc:	movw	r0, #0
   11800:	str	r0, [fp, #-4]
   11804:	b	11a24 <main@@Base+0x78c>
   11808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1180c:	ldr	r1, [fp, #-8]
   11810:	cmp	r0, r1
   11814:	bge	11908 <main@@Base+0x670>
   11818:	bl	10e8c <coda_init@plt>
   1181c:	cmp	r0, #0
   11820:	beq	1186c <main@@Base+0x5d4>
   11824:	movw	r0, #12456	; 0x30a8
   11828:	movt	r0, #2
   1182c:	ldr	r0, [r0]
   11830:	str	r0, [sp, #56]	; 0x38
   11834:	bl	10f1c <coda_get_errno@plt>
   11838:	ldr	r0, [r0]
   1183c:	bl	10eec <coda_errno_to_string@plt>
   11840:	ldr	lr, [sp, #56]	; 0x38
   11844:	str	r0, [sp, #52]	; 0x34
   11848:	mov	r0, lr
   1184c:	movw	r1, #9340	; 0x247c
   11850:	movt	r1, #1
   11854:	ldr	r2, [sp, #52]	; 0x34
   11858:	bl	10e80 <fprintf@plt>
   1185c:	movw	r1, #1
   11860:	str	r0, [sp, #48]	; 0x30
   11864:	mov	r0, r1
   11868:	bl	10e68 <exit@plt>
   1186c:	ldr	r0, [fp, #-16]
   11870:	bl	10e98 <coda_set_option_perform_conversions@plt>
   11874:	ldr	lr, [fp, #-8]
   11878:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1187c:	sub	lr, lr, r1
   11880:	ldr	r2, [fp, #-12]
   11884:	add	r2, r2, r1, lsl #2
   11888:	movw	r1, #0
   1188c:	str	r0, [sp, #44]	; 0x2c
   11890:	mov	r0, r1
   11894:	str	r1, [sp, #40]	; 0x28
   11898:	mov	r1, lr
   1189c:	movw	r3, #4156	; 0x103c
   118a0:	movt	r3, #1
   118a4:	ldr	lr, [sp, #40]	; 0x28
   118a8:	str	lr, [sp]
   118ac:	bl	10da8 <coda_match_filefilter@plt>
   118b0:	cmp	r0, #0
   118b4:	beq	11900 <main@@Base+0x668>
   118b8:	movw	r0, #12456	; 0x30a8
   118bc:	movt	r0, #2
   118c0:	ldr	r0, [r0]
   118c4:	str	r0, [sp, #36]	; 0x24
   118c8:	bl	10f1c <coda_get_errno@plt>
   118cc:	ldr	r0, [r0]
   118d0:	bl	10eec <coda_errno_to_string@plt>
   118d4:	ldr	lr, [sp, #36]	; 0x24
   118d8:	str	r0, [sp, #32]
   118dc:	mov	r0, lr
   118e0:	movw	r1, #9340	; 0x247c
   118e4:	movt	r1, #1
   118e8:	ldr	r2, [sp, #32]
   118ec:	bl	10e80 <fprintf@plt>
   118f0:	movw	r1, #1
   118f4:	str	r0, [sp, #28]
   118f8:	mov	r0, r1
   118fc:	bl	10e68 <exit@plt>
   11900:	bl	10e2c <coda_done@plt>
   11904:	b	119e4 <main@@Base+0x74c>
   11908:	movw	r0, #12464	; 0x30b0
   1190c:	movt	r0, #2
   11910:	ldr	r0, [r0]
   11914:	movw	r1, #0
   11918:	cmp	r0, r1
   1191c:	beq	11948 <main@@Base+0x6b0>
   11920:	movw	r0, #12456	; 0x30a8
   11924:	movt	r0, #2
   11928:	ldr	r0, [r0]
   1192c:	movw	r1, #9532	; 0x253c
   11930:	movt	r1, #1
   11934:	bl	10e80 <fprintf@plt>
   11938:	movw	r1, #1
   1193c:	str	r0, [sp, #24]
   11940:	mov	r0, r1
   11944:	bl	10e68 <exit@plt>
   11948:	movw	r0, #12468	; 0x30b4
   1194c:	movt	r0, #2
   11950:	ldr	r0, [r0]
   11954:	bl	10ec8 <coda_expression_is_constant@plt>
   11958:	cmp	r0, #0
   1195c:	bne	11988 <main@@Base+0x6f0>
   11960:	movw	r0, #12456	; 0x30a8
   11964:	movt	r0, #2
   11968:	ldr	r0, [r0]
   1196c:	movw	r1, #9629	; 0x259d
   11970:	movt	r1, #1
   11974:	bl	10e80 <fprintf@plt>
   11978:	movw	r1, #1
   1197c:	str	r0, [sp, #20]
   11980:	mov	r0, r1
   11984:	bl	10e68 <exit@plt>
   11988:	movw	r0, #0
   1198c:	bl	11a30 <main@@Base+0x798>
   11990:	cmp	r0, #0
   11994:	beq	119e0 <main@@Base+0x748>
   11998:	movw	r0, #12456	; 0x30a8
   1199c:	movt	r0, #2
   119a0:	ldr	r0, [r0]
   119a4:	str	r0, [sp, #16]
   119a8:	bl	10f1c <coda_get_errno@plt>
   119ac:	ldr	r0, [r0]
   119b0:	bl	10eec <coda_errno_to_string@plt>
   119b4:	ldr	lr, [sp, #16]
   119b8:	str	r0, [sp, #12]
   119bc:	mov	r0, lr
   119c0:	movw	r1, #9340	; 0x247c
   119c4:	movt	r1, #1
   119c8:	ldr	r2, [sp, #12]
   119cc:	bl	10e80 <fprintf@plt>
   119d0:	movw	r1, #1
   119d4:	str	r0, [sp, #8]
   119d8:	mov	r0, r1
   119dc:	bl	10e68 <exit@plt>
   119e0:	b	119e4 <main@@Base+0x74c>
   119e4:	movw	r0, #12468	; 0x30b4
   119e8:	movt	r0, #2
   119ec:	ldr	r0, [r0]
   119f0:	bl	10e44 <coda_expression_delete@plt>
   119f4:	movw	r0, #12464	; 0x30b0
   119f8:	movt	r0, #2
   119fc:	ldr	r0, [r0]
   11a00:	movw	lr, #0
   11a04:	cmp	r0, lr
   11a08:	beq	11a1c <main@@Base+0x784>
   11a0c:	movw	r0, #12464	; 0x30b0
   11a10:	movt	r0, #2
   11a14:	ldr	r0, [r0]
   11a18:	bl	10e44 <coda_expression_delete@plt>
   11a1c:	movw	r0, #0
   11a20:	str	r0, [fp, #-4]
   11a24:	ldr	r0, [fp, #-4]
   11a28:	mov	sp, fp
   11a2c:	pop	{fp, pc}
   11a30:	push	{fp, lr}
   11a34:	mov	fp, sp
   11a38:	sub	sp, sp, #104	; 0x68
   11a3c:	str	r0, [fp, #-8]
   11a40:	movw	r0, #12472	; 0x30b8
   11a44:	movt	r0, #2
   11a48:	ldr	r0, [r0]
   11a4c:	cmp	r0, #5
   11a50:	str	r0, [sp, #36]	; 0x24
   11a54:	bhi	11cc0 <main@@Base+0xa28>
   11a58:	add	r0, pc, #8
   11a5c:	ldr	r1, [sp, #36]	; 0x24
   11a60:	ldr	r0, [r0, r1, lsl #2]
   11a64:	mov	pc, r0
   11a68:	andeq	r1, r1, r0, lsl #21
   11a6c:	andeq	r1, r1, ip, lsl fp
   11a70:	muleq	r1, r8, fp
   11a74:	andeq	r1, r1, r8, lsl #24
   11a78:	andeq	r1, r1, r0, lsr #25
   11a7c:	andeq	r1, r1, r0, lsr #25
   11a80:	movw	r0, #12468	; 0x30b4
   11a84:	movt	r0, #2
   11a88:	ldr	r0, [r0]
   11a8c:	ldr	r1, [fp, #-8]
   11a90:	sub	r2, fp, #12
   11a94:	bl	10e14 <coda_expression_eval_bool@plt>
   11a98:	cmp	r0, #0
   11a9c:	beq	11ad4 <main@@Base+0x83c>
   11aa0:	bl	10f1c <coda_get_errno@plt>
   11aa4:	ldr	r0, [r0]
   11aa8:	bl	10eec <coda_errno_to_string@plt>
   11aac:	mvn	lr, #400	; 0x190
   11ab0:	str	r0, [sp, #32]
   11ab4:	mov	r0, lr
   11ab8:	movw	r1, #11600	; 0x2d50
   11abc:	movt	r1, #1
   11ac0:	ldr	r2, [sp, #32]
   11ac4:	bl	10dd8 <coda_set_error@plt>
   11ac8:	mvn	r0, #0
   11acc:	str	r0, [fp, #-4]
   11ad0:	b	11cc8 <main@@Base+0xa30>
   11ad4:	ldr	r0, [fp, #-12]
   11ad8:	cmp	r0, #0
   11adc:	movw	r0, #0
   11ae0:	movne	r0, #1
   11ae4:	tst	r0, #1
   11ae8:	movw	r0, #11645	; 0x2d7d
   11aec:	movt	r0, #1
   11af0:	movw	r1, #11640	; 0x2d78
   11af4:	movt	r1, #1
   11af8:	movne	r0, r1
   11afc:	movw	r1, #9347	; 0x2483
   11b00:	movt	r1, #1
   11b04:	str	r0, [sp, #28]
   11b08:	mov	r0, r1
   11b0c:	ldr	r1, [sp, #28]
   11b10:	bl	10dcc <printf@plt>
   11b14:	str	r0, [sp, #24]
   11b18:	b	11cc0 <main@@Base+0xa28>
   11b1c:	movw	r0, #12468	; 0x30b4
   11b20:	movt	r0, #2
   11b24:	ldr	r0, [r0]
   11b28:	ldr	r1, [fp, #-8]
   11b2c:	sub	r2, fp, #24
   11b30:	bl	10db4 <coda_expression_eval_integer@plt>
   11b34:	cmp	r0, #0
   11b38:	beq	11b70 <main@@Base+0x8d8>
   11b3c:	bl	10f1c <coda_get_errno@plt>
   11b40:	ldr	r0, [r0]
   11b44:	bl	10eec <coda_errno_to_string@plt>
   11b48:	mvn	lr, #400	; 0x190
   11b4c:	str	r0, [sp, #20]
   11b50:	mov	r0, lr
   11b54:	movw	r1, #11651	; 0x2d83
   11b58:	movt	r1, #1
   11b5c:	ldr	r2, [sp, #20]
   11b60:	bl	10dd8 <coda_set_error@plt>
   11b64:	mvn	r0, #0
   11b68:	str	r0, [fp, #-4]
   11b6c:	b	11cc8 <main@@Base+0xa30>
   11b70:	sub	r2, fp, #45	; 0x2d
   11b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b78:	ldr	r1, [fp, #-20]	; 0xffffffec
   11b7c:	bl	10f34 <coda_str64@plt>
   11b80:	sub	r1, fp, #45	; 0x2d
   11b84:	movw	r0, #9347	; 0x2483
   11b88:	movt	r0, #1
   11b8c:	bl	10dcc <printf@plt>
   11b90:	str	r0, [sp, #16]
   11b94:	b	11cc0 <main@@Base+0xa28>
   11b98:	movw	r0, #12468	; 0x30b4
   11b9c:	movt	r0, #2
   11ba0:	ldr	r0, [r0]
   11ba4:	ldr	r1, [fp, #-8]
   11ba8:	add	r2, sp, #48	; 0x30
   11bac:	bl	10ed4 <coda_expression_eval_float@plt>
   11bb0:	cmp	r0, #0
   11bb4:	beq	11bec <main@@Base+0x954>
   11bb8:	bl	10f1c <coda_get_errno@plt>
   11bbc:	ldr	r0, [r0]
   11bc0:	bl	10eec <coda_errno_to_string@plt>
   11bc4:	mvn	lr, #400	; 0x190
   11bc8:	str	r0, [sp, #12]
   11bcc:	mov	r0, lr
   11bd0:	movw	r1, #11691	; 0x2dab
   11bd4:	movt	r1, #1
   11bd8:	ldr	r2, [sp, #12]
   11bdc:	bl	10dd8 <coda_set_error@plt>
   11be0:	mvn	r0, #0
   11be4:	str	r0, [fp, #-4]
   11be8:	b	11cc8 <main@@Base+0xa30>
   11bec:	vldr	d16, [sp, #48]	; 0x30
   11bf0:	movw	r0, #11738	; 0x2dda
   11bf4:	movt	r0, #1
   11bf8:	vmov	r2, r3, d16
   11bfc:	bl	10dcc <printf@plt>
   11c00:	str	r0, [sp, #8]
   11c04:	b	11cc0 <main@@Base+0xa28>
   11c08:	movw	r0, #0
   11c0c:	str	r0, [sp, #44]	; 0x2c
   11c10:	movw	r0, #12468	; 0x30b4
   11c14:	movt	r0, #2
   11c18:	ldr	r0, [r0]
   11c1c:	ldr	r1, [fp, #-8]
   11c20:	add	r2, sp, #44	; 0x2c
   11c24:	add	r3, sp, #40	; 0x28
   11c28:	bl	10ea4 <coda_expression_eval_string@plt>
   11c2c:	cmp	r0, #0
   11c30:	beq	11c68 <main@@Base+0x9d0>
   11c34:	bl	10f1c <coda_get_errno@plt>
   11c38:	ldr	r0, [r0]
   11c3c:	bl	10eec <coda_errno_to_string@plt>
   11c40:	mvn	lr, #400	; 0x190
   11c44:	str	r0, [sp, #4]
   11c48:	mov	r0, lr
   11c4c:	movw	r1, #11745	; 0x2de1
   11c50:	movt	r1, #1
   11c54:	ldr	r2, [sp, #4]
   11c58:	bl	10dd8 <coda_set_error@plt>
   11c5c:	mvn	r0, #0
   11c60:	str	r0, [fp, #-4]
   11c64:	b	11cc8 <main@@Base+0xa30>
   11c68:	ldr	r0, [sp, #44]	; 0x2c
   11c6c:	ldr	r1, [sp, #40]	; 0x28
   11c70:	bl	12038 <main@@Base+0xda0>
   11c74:	movw	r0, #10517	; 0x2915
   11c78:	movt	r0, #1
   11c7c:	bl	10dcc <printf@plt>
   11c80:	ldr	r1, [sp, #44]	; 0x2c
   11c84:	movw	lr, #0
   11c88:	cmp	r1, lr
   11c8c:	str	r0, [sp]
   11c90:	beq	11c9c <main@@Base+0xa04>
   11c94:	ldr	r0, [sp, #44]	; 0x2c
   11c98:	bl	10df0 <free@plt>
   11c9c:	b	11cc0 <main@@Base+0xa28>
   11ca0:	movw	r0, #11784	; 0x2e08
   11ca4:	movt	r0, #1
   11ca8:	movw	r1, #11786	; 0x2e0a
   11cac:	movt	r1, #1
   11cb0:	movw	r2, #230	; 0xe6
   11cb4:	movw	r3, #11864	; 0x2e58
   11cb8:	movt	r3, #1
   11cbc:	bl	10f40 <__assert_fail@plt>
   11cc0:	movw	r0, #0
   11cc4:	str	r0, [fp, #-4]
   11cc8:	ldr	r0, [fp, #-4]
   11ccc:	mov	sp, fp
   11cd0:	pop	{fp, pc}
   11cd4:	push	{fp, lr}
   11cd8:	mov	fp, sp
   11cdc:	sub	sp, sp, #152	; 0x98
   11ce0:	movw	r0, #9788	; 0x263c
   11ce4:	movt	r0, #1
   11ce8:	bl	10dcc <printf@plt>
   11cec:	movw	lr, #9796	; 0x2644
   11cf0:	movt	lr, #1
   11cf4:	str	r0, [fp, #-4]
   11cf8:	mov	r0, lr
   11cfc:	bl	10dcc <printf@plt>
   11d00:	movw	lr, #9875	; 0x2693
   11d04:	movt	lr, #1
   11d08:	str	r0, [fp, #-8]
   11d0c:	mov	r0, lr
   11d10:	bl	10dcc <printf@plt>
   11d14:	movw	lr, #9954	; 0x26e2
   11d18:	movt	lr, #1
   11d1c:	str	r0, [fp, #-12]
   11d20:	mov	r0, lr
   11d24:	bl	10dcc <printf@plt>
   11d28:	movw	lr, #9991	; 0x2707
   11d2c:	movt	lr, #1
   11d30:	str	r0, [fp, #-16]
   11d34:	mov	r0, lr
   11d38:	bl	10dcc <printf@plt>
   11d3c:	movw	lr, #10066	; 0x2752
   11d40:	movt	lr, #1
   11d44:	str	r0, [fp, #-20]	; 0xffffffec
   11d48:	mov	r0, lr
   11d4c:	bl	10dcc <printf@plt>
   11d50:	movw	lr, #10142	; 0x279e
   11d54:	movt	lr, #1
   11d58:	str	r0, [fp, #-24]	; 0xffffffe8
   11d5c:	mov	r0, lr
   11d60:	bl	10dcc <printf@plt>
   11d64:	movw	lr, #10517	; 0x2915
   11d68:	movt	lr, #1
   11d6c:	str	r0, [fp, #-28]	; 0xffffffe4
   11d70:	mov	r0, lr
   11d74:	bl	10dcc <printf@plt>
   11d78:	movw	lr, #10191	; 0x27cf
   11d7c:	movt	lr, #1
   11d80:	str	r0, [fp, #-32]	; 0xffffffe0
   11d84:	mov	r0, lr
   11d88:	bl	10dcc <printf@plt>
   11d8c:	movw	lr, #10209	; 0x27e1
   11d90:	movt	lr, #1
   11d94:	str	r0, [fp, #-36]	; 0xffffffdc
   11d98:	mov	r0, lr
   11d9c:	bl	10dcc <printf@plt>
   11da0:	movw	lr, #10234	; 0x27fa
   11da4:	movt	lr, #1
   11da8:	str	r0, [fp, #-40]	; 0xffffffd8
   11dac:	mov	r0, lr
   11db0:	bl	10dcc <printf@plt>
   11db4:	movw	lr, #10315	; 0x284b
   11db8:	movt	lr, #1
   11dbc:	str	r0, [fp, #-44]	; 0xffffffd4
   11dc0:	mov	r0, lr
   11dc4:	bl	10dcc <printf@plt>
   11dc8:	movw	lr, #10396	; 0x289c
   11dcc:	movt	lr, #1
   11dd0:	str	r0, [fp, #-48]	; 0xffffffd0
   11dd4:	mov	r0, lr
   11dd8:	bl	10dcc <printf@plt>
   11ddc:	movw	lr, #10435	; 0x28c3
   11de0:	movt	lr, #1
   11de4:	str	r0, [fp, #-52]	; 0xffffffcc
   11de8:	mov	r0, lr
   11dec:	bl	10dcc <printf@plt>
   11df0:	movw	lr, #10494	; 0x28fe
   11df4:	movt	lr, #1
   11df8:	str	r0, [fp, #-56]	; 0xffffffc8
   11dfc:	mov	r0, lr
   11e00:	bl	10dcc <printf@plt>
   11e04:	movw	lr, #10519	; 0x2917
   11e08:	movt	lr, #1
   11e0c:	str	r0, [fp, #-60]	; 0xffffffc4
   11e10:	mov	r0, lr
   11e14:	bl	10dcc <printf@plt>
   11e18:	movw	lr, #10594	; 0x2962
   11e1c:	movt	lr, #1
   11e20:	str	r0, [fp, #-64]	; 0xffffffc0
   11e24:	mov	r0, lr
   11e28:	bl	10dcc <printf@plt>
   11e2c:	movw	lr, #10670	; 0x29ae
   11e30:	movt	lr, #1
   11e34:	str	r0, [fp, #-68]	; 0xffffffbc
   11e38:	mov	r0, lr
   11e3c:	bl	10dcc <printf@plt>
   11e40:	movw	lr, #10701	; 0x29cd
   11e44:	movt	lr, #1
   11e48:	str	r0, [fp, #-72]	; 0xffffffb8
   11e4c:	mov	r0, lr
   11e50:	bl	10dcc <printf@plt>
   11e54:	movw	lr, #10778	; 0x2a1a
   11e58:	movt	lr, #1
   11e5c:	str	r0, [sp, #76]	; 0x4c
   11e60:	mov	r0, lr
   11e64:	bl	10dcc <printf@plt>
   11e68:	movw	lr, #10517	; 0x2915
   11e6c:	movt	lr, #1
   11e70:	str	r0, [sp, #72]	; 0x48
   11e74:	mov	r0, lr
   11e78:	bl	10dcc <printf@plt>
   11e7c:	movw	lr, #10826	; 0x2a4a
   11e80:	movt	lr, #1
   11e84:	str	r0, [sp, #68]	; 0x44
   11e88:	mov	r0, lr
   11e8c:	bl	10dcc <printf@plt>
   11e90:	movw	lr, #10907	; 0x2a9b
   11e94:	movt	lr, #1
   11e98:	str	r0, [sp, #64]	; 0x40
   11e9c:	mov	r0, lr
   11ea0:	bl	10dcc <printf@plt>
   11ea4:	movw	lr, #10517	; 0x2915
   11ea8:	movt	lr, #1
   11eac:	str	r0, [sp, #60]	; 0x3c
   11eb0:	mov	r0, lr
   11eb4:	bl	10dcc <printf@plt>
   11eb8:	movw	lr, #10931	; 0x2ab3
   11ebc:	movt	lr, #1
   11ec0:	str	r0, [sp, #56]	; 0x38
   11ec4:	mov	r0, lr
   11ec8:	bl	10dcc <printf@plt>
   11ecc:	movw	lr, #10955	; 0x2acb
   11ed0:	movt	lr, #1
   11ed4:	str	r0, [sp, #52]	; 0x34
   11ed8:	mov	r0, lr
   11edc:	bl	10dcc <printf@plt>
   11ee0:	movw	lr, #10517	; 0x2915
   11ee4:	movt	lr, #1
   11ee8:	str	r0, [sp, #48]	; 0x30
   11eec:	mov	r0, lr
   11ef0:	bl	10dcc <printf@plt>
   11ef4:	movw	lr, #10986	; 0x2aea
   11ef8:	movt	lr, #1
   11efc:	str	r0, [sp, #44]	; 0x2c
   11f00:	mov	r0, lr
   11f04:	bl	10dcc <printf@plt>
   11f08:	movw	lr, #11014	; 0x2b06
   11f0c:	movt	lr, #1
   11f10:	str	r0, [sp, #40]	; 0x28
   11f14:	mov	r0, lr
   11f18:	bl	10dcc <printf@plt>
   11f1c:	movw	lr, #10517	; 0x2915
   11f20:	movt	lr, #1
   11f24:	str	r0, [sp, #36]	; 0x24
   11f28:	mov	r0, lr
   11f2c:	bl	10dcc <printf@plt>
   11f30:	movw	lr, #11065	; 0x2b39
   11f34:	movt	lr, #1
   11f38:	str	r0, [sp, #32]
   11f3c:	mov	r0, lr
   11f40:	bl	10dcc <printf@plt>
   11f44:	movw	lr, #11140	; 0x2b84
   11f48:	movt	lr, #1
   11f4c:	str	r0, [sp, #28]
   11f50:	mov	r0, lr
   11f54:	bl	10dcc <printf@plt>
   11f58:	movw	lr, #11215	; 0x2bcf
   11f5c:	movt	lr, #1
   11f60:	str	r0, [sp, #24]
   11f64:	mov	r0, lr
   11f68:	bl	10dcc <printf@plt>
   11f6c:	movw	lr, #11262	; 0x2bfe
   11f70:	movt	lr, #1
   11f74:	str	r0, [sp, #20]
   11f78:	mov	r0, lr
   11f7c:	bl	10dcc <printf@plt>
   11f80:	movw	lr, #11336	; 0x2c48
   11f84:	movt	lr, #1
   11f88:	str	r0, [sp, #16]
   11f8c:	mov	r0, lr
   11f90:	bl	10dcc <printf@plt>
   11f94:	movw	lr, #11410	; 0x2c92
   11f98:	movt	lr, #1
   11f9c:	str	r0, [sp, #12]
   11fa0:	mov	r0, lr
   11fa4:	bl	10dcc <printf@plt>
   11fa8:	movw	lr, #11474	; 0x2cd2
   11fac:	movt	lr, #1
   11fb0:	str	r0, [sp, #8]
   11fb4:	mov	r0, lr
   11fb8:	bl	10dcc <printf@plt>
   11fbc:	movw	lr, #10517	; 0x2915
   11fc0:	movt	lr, #1
   11fc4:	str	r0, [sp, #4]
   11fc8:	mov	r0, lr
   11fcc:	bl	10dcc <printf@plt>
   11fd0:	str	r0, [sp]
   11fd4:	mov	sp, fp
   11fd8:	pop	{fp, pc}
   11fdc:	push	{fp, lr}
   11fe0:	mov	fp, sp
   11fe4:	sub	sp, sp, #16
   11fe8:	bl	10f10 <coda_get_libcoda_version@plt>
   11fec:	movw	lr, #11539	; 0x2d13
   11ff0:	movt	lr, #1
   11ff4:	str	r0, [fp, #-4]
   11ff8:	mov	r0, lr
   11ffc:	ldr	r1, [fp, #-4]
   12000:	bl	10dcc <printf@plt>
   12004:	movw	r1, #11552	; 0x2d20
   12008:	movt	r1, #1
   1200c:	str	r0, [sp, #8]
   12010:	mov	r0, r1
   12014:	bl	10dcc <printf@plt>
   12018:	movw	r1, #10517	; 0x2915
   1201c:	movt	r1, #1
   12020:	str	r0, [sp, #4]
   12024:	mov	r0, r1
   12028:	bl	10dcc <printf@plt>
   1202c:	str	r0, [sp]
   12030:	mov	sp, fp
   12034:	pop	{fp, pc}
   12038:	push	{fp, lr}
   1203c:	mov	fp, sp
   12040:	sub	sp, sp, #72	; 0x48
   12044:	str	r0, [fp, #-4]
   12048:	str	r1, [fp, #-8]
   1204c:	movw	r0, #0
   12050:	str	r0, [fp, #-12]
   12054:	ldr	r0, [fp, #-8]
   12058:	cmp	r0, #0
   1205c:	beq	12070 <main@@Base+0xdd8>
   12060:	ldr	r0, [fp, #-4]
   12064:	movw	r1, #0
   12068:	cmp	r0, r1
   1206c:	bne	12074 <main@@Base+0xddc>
   12070:	b	12374 <main@@Base+0x10dc>
   12074:	ldr	r0, [fp, #-8]
   12078:	cmp	r0, #0
   1207c:	bge	1208c <main@@Base+0xdf4>
   12080:	ldr	r0, [fp, #-4]
   12084:	bl	10e74 <strlen@plt>
   12088:	str	r0, [fp, #-8]
   1208c:	b	12090 <main@@Base+0xdf8>
   12090:	ldr	r0, [fp, #-12]
   12094:	ldr	r1, [fp, #-8]
   12098:	cmp	r0, r1
   1209c:	bge	12374 <main@@Base+0x10dc>
   120a0:	ldr	r0, [fp, #-4]
   120a4:	ldr	r1, [fp, #-12]
   120a8:	ldrb	r0, [r0, r1]
   120ac:	sub	r0, r0, #7
   120b0:	cmp	r0, #85	; 0x55
   120b4:	str	r0, [fp, #-16]
   120b8:	bhi	122ec <main@@Base+0x1054>
   120bc:	add	r0, pc, #8
   120c0:	ldr	r1, [fp, #-16]
   120c4:	ldr	r0, [r0, r1, lsl #2]
   120c8:	mov	pc, r0
   120cc:	andeq	r2, r1, r8, lsr r2
   120d0:	andeq	r2, r1, ip, asr #4
   120d4:	muleq	r1, ip, r2
   120d8:	andeq	r2, r1, r4, ror r2
   120dc:			; <UNDEFINED> instruction: 0x000122b0
   120e0:	andeq	r2, r1, r0, ror #4
   120e4:	andeq	r2, r1, r8, lsl #5
   120e8:	andeq	r2, r1, ip, ror #5
   120ec:	andeq	r2, r1, ip, ror #5
   120f0:	andeq	r2, r1, ip, ror #5
   120f4:	andeq	r2, r1, ip, ror #5
   120f8:	andeq	r2, r1, ip, ror #5
   120fc:	andeq	r2, r1, ip, ror #5
   12100:	andeq	r2, r1, ip, ror #5
   12104:	andeq	r2, r1, ip, ror #5
   12108:	andeq	r2, r1, ip, ror #5
   1210c:	andeq	r2, r1, ip, ror #5
   12110:	andeq	r2, r1, ip, ror #5
   12114:	andeq	r2, r1, ip, ror #5
   12118:	andeq	r2, r1, ip, ror #5
   1211c:	andeq	r2, r1, r4, lsr #4
   12120:	andeq	r2, r1, ip, ror #5
   12124:	andeq	r2, r1, ip, ror #5
   12128:	andeq	r2, r1, ip, ror #5
   1212c:	andeq	r2, r1, ip, ror #5
   12130:	andeq	r2, r1, ip, ror #5
   12134:	andeq	r2, r1, ip, ror #5
   12138:	ldrdeq	r2, [r1], -r8
   1213c:	andeq	r2, r1, ip, ror #5
   12140:	andeq	r2, r1, ip, ror #5
   12144:	andeq	r2, r1, ip, ror #5
   12148:	andeq	r2, r1, ip, ror #5
   1214c:	andeq	r2, r1, ip, ror #5
   12150:	andeq	r2, r1, ip, ror #5
   12154:	andeq	r2, r1, ip, ror #5
   12158:	andeq	r2, r1, ip, ror #5
   1215c:	andeq	r2, r1, ip, ror #5
   12160:	andeq	r2, r1, ip, ror #5
   12164:	andeq	r2, r1, ip, ror #5
   12168:	andeq	r2, r1, ip, ror #5
   1216c:	andeq	r2, r1, ip, ror #5
   12170:	andeq	r2, r1, ip, ror #5
   12174:	andeq	r2, r1, ip, ror #5
   12178:	andeq	r2, r1, ip, ror #5
   1217c:	andeq	r2, r1, ip, ror #5
   12180:	andeq	r2, r1, ip, ror #5
   12184:	andeq	r2, r1, ip, ror #5
   12188:	andeq	r2, r1, ip, ror #5
   1218c:	andeq	r2, r1, ip, ror #5
   12190:	andeq	r2, r1, ip, ror #5
   12194:	andeq	r2, r1, ip, ror #5
   12198:	andeq	r2, r1, ip, ror #5
   1219c:	andeq	r2, r1, ip, ror #5
   121a0:	andeq	r2, r1, ip, ror #5
   121a4:	andeq	r2, r1, ip, ror #5
   121a8:	andeq	r2, r1, ip, ror #5
   121ac:	andeq	r2, r1, ip, ror #5
   121b0:	andeq	r2, r1, ip, ror #5
   121b4:	andeq	r2, r1, ip, ror #5
   121b8:	andeq	r2, r1, ip, ror #5
   121bc:	andeq	r2, r1, ip, ror #5
   121c0:	andeq	r2, r1, ip, ror #5
   121c4:	andeq	r2, r1, ip, ror #5
   121c8:	andeq	r2, r1, ip, ror #5
   121cc:	andeq	r2, r1, ip, ror #5
   121d0:	andeq	r2, r1, ip, ror #5
   121d4:	andeq	r2, r1, ip, ror #5
   121d8:	andeq	r2, r1, ip, ror #5
   121dc:	andeq	r2, r1, ip, ror #5
   121e0:	andeq	r2, r1, ip, ror #5
   121e4:	andeq	r2, r1, ip, ror #5
   121e8:	andeq	r2, r1, ip, ror #5
   121ec:	andeq	r2, r1, ip, ror #5
   121f0:	andeq	r2, r1, ip, ror #5
   121f4:	andeq	r2, r1, ip, ror #5
   121f8:	andeq	r2, r1, ip, ror #5
   121fc:	andeq	r2, r1, ip, ror #5
   12200:	andeq	r2, r1, ip, ror #5
   12204:	andeq	r2, r1, ip, ror #5
   12208:	andeq	r2, r1, ip, ror #5
   1220c:	andeq	r2, r1, ip, ror #5
   12210:	andeq	r2, r1, ip, ror #5
   12214:	andeq	r2, r1, ip, ror #5
   12218:	andeq	r2, r1, ip, ror #5
   1221c:	andeq	r2, r1, ip, ror #5
   12220:	andeq	r2, r1, r4, asr #5
   12224:	movw	r0, #11899	; 0x2e7b
   12228:	movt	r0, #1
   1222c:	bl	10dcc <printf@plt>
   12230:	str	r0, [fp, #-20]	; 0xffffffec
   12234:	b	12364 <main@@Base+0x10cc>
   12238:	movw	r0, #11902	; 0x2e7e
   1223c:	movt	r0, #1
   12240:	bl	10dcc <printf@plt>
   12244:	str	r0, [fp, #-24]	; 0xffffffe8
   12248:	b	12364 <main@@Base+0x10cc>
   1224c:	movw	r0, #11905	; 0x2e81
   12250:	movt	r0, #1
   12254:	bl	10dcc <printf@plt>
   12258:	str	r0, [fp, #-28]	; 0xffffffe4
   1225c:	b	12364 <main@@Base+0x10cc>
   12260:	movw	r0, #11908	; 0x2e84
   12264:	movt	r0, #1
   12268:	bl	10dcc <printf@plt>
   1226c:	str	r0, [fp, #-32]	; 0xffffffe0
   12270:	b	12364 <main@@Base+0x10cc>
   12274:	movw	r0, #11911	; 0x2e87
   12278:	movt	r0, #1
   1227c:	bl	10dcc <printf@plt>
   12280:	str	r0, [sp, #36]	; 0x24
   12284:	b	12364 <main@@Base+0x10cc>
   12288:	movw	r0, #11914	; 0x2e8a
   1228c:	movt	r0, #1
   12290:	bl	10dcc <printf@plt>
   12294:	str	r0, [sp, #32]
   12298:	b	12364 <main@@Base+0x10cc>
   1229c:	movw	r0, #11917	; 0x2e8d
   122a0:	movt	r0, #1
   122a4:	bl	10dcc <printf@plt>
   122a8:	str	r0, [sp, #28]
   122ac:	b	12364 <main@@Base+0x10cc>
   122b0:	movw	r0, #11920	; 0x2e90
   122b4:	movt	r0, #1
   122b8:	bl	10dcc <printf@plt>
   122bc:	str	r0, [sp, #24]
   122c0:	b	12364 <main@@Base+0x10cc>
   122c4:	movw	r0, #11923	; 0x2e93
   122c8:	movt	r0, #1
   122cc:	bl	10dcc <printf@plt>
   122d0:	str	r0, [sp, #20]
   122d4:	b	12364 <main@@Base+0x10cc>
   122d8:	movw	r0, #11926	; 0x2e96
   122dc:	movt	r0, #1
   122e0:	bl	10dcc <printf@plt>
   122e4:	str	r0, [sp, #16]
   122e8:	b	12364 <main@@Base+0x10cc>
   122ec:	bl	10e5c <__ctype_b_loc@plt>
   122f0:	ldr	r0, [r0]
   122f4:	ldr	lr, [fp, #-4]
   122f8:	ldr	r1, [fp, #-12]
   122fc:	ldrb	r1, [lr, r1]
   12300:	mov	lr, r1
   12304:	add	r0, r0, r1, lsl #1
   12308:	ldrh	r0, [r0]
   1230c:	and	r0, r0, #16384	; 0x4000
   12310:	cmp	r0, #0
   12314:	str	lr, [sp, #12]
   12318:	bne	12340 <main@@Base+0x10a8>
   1231c:	ldr	r0, [fp, #-4]
   12320:	ldr	r1, [fp, #-12]
   12324:	add	r0, r0, r1
   12328:	ldrb	r1, [r0]
   1232c:	movw	r0, #11929	; 0x2e99
   12330:	movt	r0, #1
   12334:	bl	10dcc <printf@plt>
   12338:	str	r0, [sp, #8]
   1233c:	b	12360 <main@@Base+0x10c8>
   12340:	ldr	r0, [fp, #-4]
   12344:	ldr	r1, [fp, #-12]
   12348:	add	r0, r0, r1
   1234c:	ldrb	r1, [r0]
   12350:	movw	r0, #11935	; 0x2e9f
   12354:	movt	r0, #1
   12358:	bl	10dcc <printf@plt>
   1235c:	str	r0, [sp, #4]
   12360:	b	12364 <main@@Base+0x10cc>
   12364:	ldr	r0, [fp, #-12]
   12368:	add	r0, r0, #1
   1236c:	str	r0, [fp, #-12]
   12370:	b	12090 <main@@Base+0xdf8>
   12374:	mov	sp, fp
   12378:	pop	{fp, pc}

0001237c <__libc_csu_init@@Base>:
   1237c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12380:	mov	r7, r0
   12384:	ldr	r6, [pc, #72]	; 123d4 <__libc_csu_init@@Base+0x58>
   12388:	ldr	r5, [pc, #72]	; 123d8 <__libc_csu_init@@Base+0x5c>
   1238c:	add	r6, pc, r6
   12390:	add	r5, pc, r5
   12394:	sub	r6, r6, r5
   12398:	mov	r8, r1
   1239c:	mov	r9, r2
   123a0:	bl	10d88 <coda_match_filefilter@plt-0x20>
   123a4:	asrs	r6, r6, #2
   123a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   123ac:	mov	r4, #0
   123b0:	add	r4, r4, #1
   123b4:	ldr	r3, [r5], #4
   123b8:	mov	r2, r9
   123bc:	mov	r1, r8
   123c0:	mov	r0, r7
   123c4:	blx	r3
   123c8:	cmp	r6, r4
   123cc:	bne	123b0 <__libc_csu_init@@Base+0x34>
   123d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   123d4:	andeq	r0, r1, r0, ror #22
   123d8:	andeq	r0, r1, r8, asr fp

000123dc <__libc_csu_fini@@Base>:
   123dc:	bx	lr

Disassembly of section .fini:

000123e0 <.fini>:
   123e0:	push	{r3, lr}
   123e4:	pop	{r3, pc}
