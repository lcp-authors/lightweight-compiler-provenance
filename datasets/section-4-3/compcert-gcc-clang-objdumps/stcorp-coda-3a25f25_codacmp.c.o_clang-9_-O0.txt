
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codacmp.dir/tools/codacmp/codacmp.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #72	; 0x48
       c:	movw	r2, #0
      10:	str	r2, [fp, #-4]
      14:	str	r0, [fp, #-8]
      18:	str	r1, [fp, #-12]
      1c:	movw	r0, #0
      20:	movt	r0, #0
      24:	str	r2, [r0]
      28:	movw	r0, #1
      2c:	str	r0, [fp, #-16]
      30:	str	r2, [fp, #-20]	; 0xffffffec
      34:	ldr	r0, [fp, #-8]
      38:	cmp	r0, #1
      3c:	beq	78 <main+0x78>
      40:	ldr	r0, [fp, #-12]
      44:	ldr	r0, [r0, #4]
      48:	movw	r1, #0
      4c:	movt	r1, #0
      50:	bl	0 <strcmp>
      54:	cmp	r0, #0
      58:	beq	78 <main+0x78>
      5c:	ldr	r0, [fp, #-12]
      60:	ldr	r0, [r0, #4]
      64:	movw	r1, #0
      68:	movt	r1, #0
      6c:	bl	0 <strcmp>
      70:	cmp	r0, #0
      74:	bne	84 <main+0x84>
      78:	bl	bd8 <print_help>
      7c:	movw	r0, #0
      80:	bl	0 <exit>
      84:	ldr	r0, [fp, #-12]
      88:	ldr	r0, [r0, #4]
      8c:	movw	r1, #0
      90:	movt	r1, #0
      94:	bl	0 <strcmp>
      98:	cmp	r0, #0
      9c:	beq	bc <main+0xbc>
      a0:	ldr	r0, [fp, #-12]
      a4:	ldr	r0, [r0, #4]
      a8:	movw	r1, #0
      ac:	movt	r1, #0
      b0:	bl	0 <strcmp>
      b4:	cmp	r0, #0
      b8:	bne	c8 <main+0xc8>
      bc:	bl	ea0 <print_version>
      c0:	movw	r0, #0
      c4:	bl	0 <exit>
      c8:	bl	520 <array_key_info_init>
      cc:	movw	r0, #1
      d0:	str	r0, [fp, #-28]	; 0xffffffe4
      d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
      d8:	add	r0, r0, #1
      dc:	ldr	r1, [fp, #-8]
      e0:	cmp	r0, r1
      e4:	bge	134 <main+0x134>
      e8:	ldr	r0, [fp, #-12]
      ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
      f0:	add	r0, r0, r1, lsl #2
      f4:	ldr	r0, [r0]
      f8:	movw	r1, #0
      fc:	movt	r1, #0
     100:	bl	0 <strcmp>
     104:	cmp	r0, #0
     108:	bne	134 <main+0x134>
     10c:	ldr	r0, [fp, #-12]
     110:	ldr	r1, [fp, #-28]	; 0xffffffe4
     114:	add	r1, r1, #1
     118:	add	r0, r0, r1, lsl #2
     11c:	ldr	r0, [r0]
     120:	bl	0 <coda_set_definition_path>
     124:	ldr	r1, [fp, #-28]	; 0xffffffe4
     128:	add	r1, r1, #2
     12c:	str	r1, [fp, #-28]	; 0xffffffe4
     130:	b	1a8 <main+0x1a8>
     134:	movw	r0, #0
     138:	movt	r0, #0
     13c:	str	r0, [fp, #-32]	; 0xffffffe0
     140:	ldr	r0, [fp, #-12]
     144:	ldr	r0, [r0]
     148:	ldr	r2, [fp, #-32]	; 0xffffffe0
     14c:	movw	r1, #0
     150:	bl	0 <coda_set_definition_path_conditional>
     154:	cmp	r0, #0
     158:	beq	1a4 <main+0x1a4>
     15c:	movw	r0, #0
     160:	movt	r0, #0
     164:	ldr	r0, [r0]
     168:	str	r0, [sp, #36]	; 0x24
     16c:	bl	0 <coda_get_errno>
     170:	ldr	r0, [r0]
     174:	bl	0 <coda_errno_to_string>
     178:	ldr	r1, [sp, #36]	; 0x24
     17c:	str	r0, [sp, #32]
     180:	mov	r0, r1
     184:	movw	r1, #0
     188:	movt	r1, #0
     18c:	ldr	r2, [sp, #32]
     190:	bl	0 <fprintf>
     194:	movw	r1, #1
     198:	str	r0, [sp, #28]
     19c:	mov	r0, r1
     1a0:	bl	0 <exit>
     1a4:	b	1a8 <main+0x1a8>
     1a8:	b	1ac <main+0x1ac>
     1ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
     1b0:	ldr	r1, [fp, #-8]
     1b4:	cmp	r0, r1
     1b8:	bge	418 <main+0x418>
     1bc:	ldr	r0, [fp, #-12]
     1c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     1c4:	add	r0, r0, r1, lsl #2
     1c8:	ldr	r0, [r0]
     1cc:	movw	r1, #0
     1d0:	movt	r1, #0
     1d4:	bl	0 <strcmp>
     1d8:	cmp	r0, #0
     1dc:	beq	204 <main+0x204>
     1e0:	ldr	r0, [fp, #-12]
     1e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
     1e8:	add	r0, r0, r1, lsl #2
     1ec:	ldr	r0, [r0]
     1f0:	movw	r1, #0
     1f4:	movt	r1, #0
     1f8:	bl	0 <strcmp>
     1fc:	cmp	r0, #0
     200:	bne	218 <main+0x218>
     204:	movw	r0, #0
     208:	movt	r0, #0
     20c:	movw	r1, #1
     210:	str	r1, [r0]
     214:	b	408 <main+0x408>
     218:	ldr	r0, [fp, #-12]
     21c:	ldr	r1, [fp, #-28]	; 0xffffffe4
     220:	add	r0, r0, r1, lsl #2
     224:	ldr	r0, [r0]
     228:	movw	r1, #0
     22c:	movt	r1, #0
     230:	bl	0 <strcmp>
     234:	cmp	r0, #0
     238:	beq	260 <main+0x260>
     23c:	ldr	r0, [fp, #-12]
     240:	ldr	r1, [fp, #-28]	; 0xffffffe4
     244:	add	r0, r0, r1, lsl #2
     248:	ldr	r0, [r0]
     24c:	movw	r1, #0
     250:	movt	r1, #0
     254:	bl	0 <strcmp>
     258:	cmp	r0, #0
     25c:	bne	26c <main+0x26c>
     260:	movw	r0, #0
     264:	str	r0, [fp, #-16]
     268:	b	404 <main+0x404>
     26c:	ldr	r0, [fp, #-12]
     270:	ldr	r1, [fp, #-28]	; 0xffffffe4
     274:	add	r0, r0, r1, lsl #2
     278:	ldr	r0, [r0]
     27c:	movw	r1, #0
     280:	movt	r1, #0
     284:	bl	0 <strcmp>
     288:	cmp	r0, #0
     28c:	beq	2b4 <main+0x2b4>
     290:	ldr	r0, [fp, #-12]
     294:	ldr	r1, [fp, #-28]	; 0xffffffe4
     298:	add	r0, r0, r1, lsl #2
     29c:	ldr	r0, [r0]
     2a0:	movw	r1, #0
     2a4:	movt	r1, #0
     2a8:	bl	0 <strcmp>
     2ac:	cmp	r0, #0
     2b0:	bne	310 <main+0x310>
     2b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     2b8:	add	r0, r0, #1
     2bc:	ldr	r1, [fp, #-8]
     2c0:	cmp	r0, r1
     2c4:	bge	310 <main+0x310>
     2c8:	ldr	r0, [fp, #-12]
     2cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
     2d0:	add	r1, r1, #1
     2d4:	add	r0, r0, r1, lsl #2
     2d8:	ldr	r0, [r0]
     2dc:	ldrb	r0, [r0]
     2e0:	cmp	r0, #45	; 0x2d
     2e4:	beq	310 <main+0x310>
     2e8:	ldr	r0, [fp, #-12]
     2ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
     2f0:	add	r1, r1, #1
     2f4:	add	r0, r0, r1, lsl #2
     2f8:	ldr	r0, [r0]
     2fc:	str	r0, [fp, #-20]	; 0xffffffec
     300:	ldr	r0, [fp, #-28]	; 0xffffffe4
     304:	add	r0, r0, #1
     308:	str	r0, [fp, #-28]	; 0xffffffe4
     30c:	b	400 <main+0x400>
     310:	ldr	r0, [fp, #-12]
     314:	ldr	r1, [fp, #-28]	; 0xffffffe4
     318:	add	r0, r0, r1, lsl #2
     31c:	ldr	r0, [r0]
     320:	movw	r1, #0
     324:	movt	r1, #0
     328:	bl	0 <strcmp>
     32c:	cmp	r0, #0
     330:	beq	358 <main+0x358>
     334:	ldr	r0, [fp, #-12]
     338:	ldr	r1, [fp, #-28]	; 0xffffffe4
     33c:	add	r0, r0, r1, lsl #2
     340:	ldr	r0, [r0]
     344:	movw	r1, #0
     348:	movt	r1, #0
     34c:	bl	0 <strcmp>
     350:	cmp	r0, #0
     354:	bne	3b4 <main+0x3b4>
     358:	ldr	r0, [fp, #-28]	; 0xffffffe4
     35c:	add	r0, r0, #2
     360:	ldr	r1, [fp, #-8]
     364:	cmp	r0, r1
     368:	bge	3b4 <main+0x3b4>
     36c:	ldr	r0, [fp, #-12]
     370:	ldr	r1, [fp, #-28]	; 0xffffffe4
     374:	add	r2, r0, r1, lsl #2
     378:	ldr	r2, [r2, #4]
     37c:	add	r1, r1, #2
     380:	add	r0, r0, r1, lsl #2
     384:	ldr	r1, [r0]
     388:	mov	r0, r2
     38c:	bl	540 <array_key_info_add_key>
     390:	cmp	r0, #0
     394:	beq	3a4 <main+0x3a4>
     398:	mvn	r0, #0
     39c:	str	r0, [fp, #-4]
     3a0:	b	514 <main+0x514>
     3a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     3a8:	add	r0, r0, #2
     3ac:	str	r0, [fp, #-28]	; 0xffffffe4
     3b0:	b	3fc <main+0x3fc>
     3b4:	ldr	r0, [fp, #-12]
     3b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
     3bc:	add	r0, r0, r1, lsl #2
     3c0:	ldr	r0, [r0]
     3c4:	ldrb	r0, [r0]
     3c8:	cmp	r0, #45	; 0x2d
     3cc:	beq	3d4 <main+0x3d4>
     3d0:	b	418 <main+0x418>
     3d4:	movw	r0, #0
     3d8:	movt	r0, #0
     3dc:	ldr	r0, [r0]
     3e0:	movw	r1, #0
     3e4:	movt	r1, #0
     3e8:	bl	0 <fprintf>
     3ec:	str	r0, [sp, #24]
     3f0:	bl	bd8 <print_help>
     3f4:	movw	r0, #1
     3f8:	bl	0 <exit>
     3fc:	b	400 <main+0x400>
     400:	b	404 <main+0x404>
     404:	b	408 <main+0x408>
     408:	ldr	r0, [fp, #-28]	; 0xffffffe4
     40c:	add	r0, r0, #1
     410:	str	r0, [fp, #-28]	; 0xffffffe4
     414:	b	1ac <main+0x1ac>
     418:	ldr	r0, [fp, #-28]	; 0xffffffe4
     41c:	ldr	r1, [fp, #-8]
     420:	sub	r1, r1, #2
     424:	cmp	r0, r1
     428:	beq	454 <main+0x454>
     42c:	movw	r0, #0
     430:	movt	r0, #0
     434:	ldr	r0, [r0]
     438:	movw	r1, #0
     43c:	movt	r1, #0
     440:	bl	0 <fprintf>
     444:	str	r0, [sp, #20]
     448:	bl	bd8 <print_help>
     44c:	movw	r0, #1
     450:	bl	0 <exit>
     454:	bl	0 <coda_init>
     458:	cmp	r0, #0
     45c:	beq	4a8 <main+0x4a8>
     460:	movw	r0, #0
     464:	movt	r0, #0
     468:	ldr	r0, [r0]
     46c:	str	r0, [sp, #16]
     470:	bl	0 <coda_get_errno>
     474:	ldr	r0, [r0]
     478:	bl	0 <coda_errno_to_string>
     47c:	ldr	r1, [sp, #16]
     480:	str	r0, [sp, #12]
     484:	mov	r0, r1
     488:	movw	r1, #0
     48c:	movt	r1, #0
     490:	ldr	r2, [sp, #12]
     494:	bl	0 <fprintf>
     498:	movw	r1, #1
     49c:	str	r0, [sp, #8]
     4a0:	mov	r0, r1
     4a4:	bl	0 <exit>
     4a8:	mov	r0, #0
     4ac:	bl	0 <coda_set_option_perform_boundary_checks>
     4b0:	ldr	r1, [fp, #-16]
     4b4:	str	r0, [sp, #4]
     4b8:	mov	r0, r1
     4bc:	bl	0 <coda_set_option_perform_conversions>
     4c0:	ldr	r1, [fp, #-12]
     4c4:	ldr	r2, [fp, #-8]
     4c8:	add	r3, r1, r2, lsl #2
     4cc:	ldr	r3, [r3, #-8]
     4d0:	sub	r2, r2, #1
     4d4:	add	r1, r1, r2, lsl #2
     4d8:	ldr	r1, [r1]
     4dc:	ldr	r2, [fp, #-20]	; 0xffffffec
     4e0:	str	r0, [sp]
     4e4:	mov	r0, r3
     4e8:	bl	6d0 <compare_files>
     4ec:	str	r0, [fp, #-24]	; 0xffffffe8
     4f0:	bl	0 <coda_done>
     4f4:	bl	b50 <array_key_info_done>
     4f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     4fc:	cmp	r0, #0
     500:	beq	50c <main+0x50c>
     504:	movw	r0, #1
     508:	bl	0 <exit>
     50c:	movw	r0, #0
     510:	str	r0, [fp, #-4]
     514:	ldr	r0, [fp, #-4]
     518:	mov	sp, fp
     51c:	pop	{fp, pc}

00000520 <array_key_info_init>:
     520:	movw	r0, #0
     524:	movt	r0, #0
     528:	movw	r1, #0
     52c:	str	r1, [r0]
     530:	str	r1, [r0, #4]
     534:	str	r1, [r0, #8]
     538:	str	r1, [r0, #12]
     53c:	bx	lr

00000540 <array_key_info_add_key>:
     540:	push	{fp, lr}
     544:	mov	fp, sp
     548:	sub	sp, sp, #32
     54c:	str	r0, [fp, #-8]
     550:	str	r1, [fp, #-12]
     554:	movw	r0, #0
     558:	movt	r0, #0
     55c:	ldr	r0, [r0]
     560:	asr	r1, r0, #31
     564:	add	r1, r0, r1, lsr #28
     568:	bic	r1, r1, #15
     56c:	sub	r0, r0, r1
     570:	cmp	r0, #0
     574:	bne	67c <array_key_info_add_key+0x13c>
     578:	movw	r0, #0
     57c:	movt	r0, #0
     580:	ldr	r1, [r0]
     584:	ldr	r0, [r0, #4]
     588:	add	r1, r1, #16
     58c:	lsl	r1, r1, #2
     590:	bl	0 <realloc>
     594:	str	r0, [sp, #16]
     598:	ldr	r0, [sp, #16]
     59c:	movw	r1, #0
     5a0:	cmp	r0, r1
     5a4:	bne	5e8 <array_key_info_add_key+0xa8>
     5a8:	movw	r0, #0
     5ac:	movt	r0, #0
     5b0:	ldr	r0, [r0]
     5b4:	add	r0, r0, #16
     5b8:	lsl	r2, r0, #2
     5bc:	mvn	r0, #0
     5c0:	movw	r1, #0
     5c4:	movt	r1, #0
     5c8:	movw	r3, #0
     5cc:	movt	r3, #0
     5d0:	movw	ip, #198	; 0xc6
     5d4:	str	ip, [sp]
     5d8:	bl	0 <coda_set_error>
     5dc:	mvn	r0, #0
     5e0:	str	r0, [fp, #-4]
     5e4:	b	6c4 <array_key_info_add_key+0x184>
     5e8:	ldr	r0, [sp, #16]
     5ec:	movw	r1, #0
     5f0:	movt	r1, #0
     5f4:	str	r0, [r1, #4]
     5f8:	ldr	r0, [r1]
     5fc:	ldr	r1, [r1, #8]
     600:	add	r0, r0, #16
     604:	lsl	r0, r0, #2
     608:	str	r0, [sp, #8]
     60c:	mov	r0, r1
     610:	ldr	r1, [sp, #8]
     614:	bl	0 <realloc>
     618:	str	r0, [sp, #12]
     61c:	ldr	r0, [sp, #12]
     620:	movw	r1, #0
     624:	cmp	r0, r1
     628:	bne	66c <array_key_info_add_key+0x12c>
     62c:	movw	r0, #0
     630:	movt	r0, #0
     634:	ldr	r0, [r0]
     638:	add	r0, r0, #16
     63c:	lsl	r2, r0, #2
     640:	mvn	r0, #0
     644:	movw	r1, #0
     648:	movt	r1, #0
     64c:	movw	r3, #0
     650:	movt	r3, #0
     654:	movw	ip, #207	; 0xcf
     658:	str	ip, [sp]
     65c:	bl	0 <coda_set_error>
     660:	mvn	r0, #0
     664:	str	r0, [fp, #-4]
     668:	b	6c4 <array_key_info_add_key+0x184>
     66c:	ldr	r0, [sp, #12]
     670:	movw	r1, #0
     674:	movt	r1, #0
     678:	str	r0, [r1, #8]
     67c:	ldr	r0, [fp, #-8]
     680:	movw	r1, #0
     684:	movt	r1, #0
     688:	ldr	r2, [r1]
     68c:	ldr	r3, [r1, #4]
     690:	str	r0, [r3, r2, lsl #2]
     694:	ldr	r0, [fp, #-12]
     698:	ldr	r2, [r1]
     69c:	ldr	r1, [r1, #8]
     6a0:	add	r1, r1, r2, lsl #2
     6a4:	str	r0, [r1]
     6a8:	movw	r0, #0
     6ac:	movt	r0, #0
     6b0:	ldr	r1, [r0]
     6b4:	add	r1, r1, #1
     6b8:	str	r1, [r0]
     6bc:	movw	r0, #0
     6c0:	str	r0, [fp, #-4]
     6c4:	ldr	r0, [fp, #-4]
     6c8:	mov	sp, fp
     6cc:	pop	{fp, pc}

000006d0 <compare_files>:
     6d0:	push	{r4, r5, fp, lr}
     6d4:	add	fp, sp, #8
     6d8:	sub	sp, sp, #1200	; 0x4b0
     6dc:	str	r0, [fp, #-16]
     6e0:	str	r1, [fp, #-20]	; 0xffffffec
     6e4:	str	r2, [fp, #-24]	; 0xffffffe8
     6e8:	ldr	r0, [fp, #-16]
     6ec:	sub	r1, fp, #28
     6f0:	bl	0 <coda_open>
     6f4:	str	r0, [sp, #132]	; 0x84
     6f8:	ldr	r0, [sp, #132]	; 0x84
     6fc:	cmp	r0, #0
     700:	beq	73c <compare_files+0x6c>
     704:	bl	0 <coda_get_errno>
     708:	ldr	r0, [r0]
     70c:	cmn	r0, #21
     710:	bne	73c <compare_files+0x6c>
     714:	movw	r0, #0
     718:	bl	0 <coda_set_option_use_mmap>
     71c:	ldr	r1, [fp, #-16]
     720:	str	r0, [sp, #128]	; 0x80
     724:	mov	r0, r1
     728:	sub	r1, fp, #28
     72c:	bl	0 <coda_open>
     730:	str	r0, [sp, #132]	; 0x84
     734:	movw	r0, #1
     738:	bl	0 <coda_set_option_use_mmap>
     73c:	ldr	r0, [sp, #132]	; 0x84
     740:	cmp	r0, #0
     744:	beq	7a0 <compare_files+0xd0>
     748:	movw	r0, #0
     74c:	movt	r0, #0
     750:	ldr	r0, [r0]
     754:	movw	r1, #0
     758:	movt	r1, #0
     75c:	ldr	r2, [r1]
     760:	str	r0, [sp, #124]	; 0x7c
     764:	str	r2, [sp, #120]	; 0x78
     768:	bl	0 <coda_get_errno>
     76c:	ldr	r0, [r0]
     770:	bl	0 <coda_errno_to_string>
     774:	ldr	r1, [sp, #124]	; 0x7c
     778:	str	r0, [sp, #116]	; 0x74
     77c:	mov	r0, r1
     780:	movw	r1, #0
     784:	movt	r1, #0
     788:	ldr	r2, [sp, #120]	; 0x78
     78c:	ldr	r3, [sp, #116]	; 0x74
     790:	bl	0 <fprintf>
     794:	mvn	r1, #0
     798:	str	r1, [fp, #-12]
     79c:	b	b44 <compare_files+0x474>
     7a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     7a4:	bl	ef8 <array_key_info_set_product>
     7a8:	cmp	r0, #0
     7ac:	beq	808 <compare_files+0x138>
     7b0:	movw	r0, #0
     7b4:	movt	r0, #0
     7b8:	ldr	r0, [r0]
     7bc:	movw	r1, #0
     7c0:	movt	r1, #0
     7c4:	ldr	r2, [r1]
     7c8:	str	r0, [sp, #112]	; 0x70
     7cc:	str	r2, [sp, #108]	; 0x6c
     7d0:	bl	0 <coda_get_errno>
     7d4:	ldr	r0, [r0]
     7d8:	bl	0 <coda_errno_to_string>
     7dc:	ldr	r1, [sp, #112]	; 0x70
     7e0:	str	r0, [sp, #104]	; 0x68
     7e4:	mov	r0, r1
     7e8:	movw	r1, #0
     7ec:	movt	r1, #0
     7f0:	ldr	r2, [sp, #108]	; 0x6c
     7f4:	ldr	r3, [sp, #104]	; 0x68
     7f8:	bl	0 <fprintf>
     7fc:	mvn	r1, #0
     800:	str	r1, [fp, #-12]
     804:	b	b44 <compare_files+0x474>
     808:	ldr	r0, [fp, #-20]	; 0xffffffec
     80c:	sub	r1, fp, #32
     810:	bl	0 <coda_open>
     814:	str	r0, [sp, #132]	; 0x84
     818:	ldr	r0, [sp, #132]	; 0x84
     81c:	cmp	r0, #0
     820:	beq	85c <compare_files+0x18c>
     824:	bl	0 <coda_get_errno>
     828:	ldr	r0, [r0]
     82c:	cmn	r0, #21
     830:	bne	85c <compare_files+0x18c>
     834:	movw	r0, #0
     838:	bl	0 <coda_set_option_use_mmap>
     83c:	ldr	r1, [fp, #-20]	; 0xffffffec
     840:	str	r0, [sp, #100]	; 0x64
     844:	mov	r0, r1
     848:	sub	r1, fp, #32
     84c:	bl	0 <coda_open>
     850:	str	r0, [sp, #132]	; 0x84
     854:	movw	r0, #1
     858:	bl	0 <coda_set_option_use_mmap>
     85c:	ldr	r0, [sp, #132]	; 0x84
     860:	cmp	r0, #0
     864:	beq	8d0 <compare_files+0x200>
     868:	movw	r0, #0
     86c:	movt	r0, #0
     870:	ldr	r0, [r0]
     874:	movw	r1, #0
     878:	movt	r1, #0
     87c:	ldr	r2, [r1, #4]
     880:	str	r0, [sp, #96]	; 0x60
     884:	str	r2, [sp, #92]	; 0x5c
     888:	bl	0 <coda_get_errno>
     88c:	ldr	r0, [r0]
     890:	bl	0 <coda_errno_to_string>
     894:	ldr	r1, [sp, #96]	; 0x60
     898:	str	r0, [sp, #88]	; 0x58
     89c:	mov	r0, r1
     8a0:	movw	r1, #0
     8a4:	movt	r1, #0
     8a8:	ldr	r2, [sp, #92]	; 0x5c
     8ac:	ldr	r3, [sp, #88]	; 0x58
     8b0:	bl	0 <fprintf>
     8b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
     8b8:	str	r0, [sp, #84]	; 0x54
     8bc:	mov	r0, r1
     8c0:	bl	0 <coda_close>
     8c4:	mvn	r1, #0
     8c8:	str	r1, [fp, #-12]
     8cc:	b	b44 <compare_files+0x474>
     8d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     8d4:	sub	r0, fp, #552	; 0x228
     8d8:	bl	0 <coda_cursor_set_product>
     8dc:	cmp	r0, #0
     8e0:	beq	95c <compare_files+0x28c>
     8e4:	movw	r0, #0
     8e8:	movt	r0, #0
     8ec:	ldr	r0, [r0]
     8f0:	movw	r1, #0
     8f4:	movt	r1, #0
     8f8:	ldr	r2, [r1]
     8fc:	str	r0, [sp, #80]	; 0x50
     900:	str	r2, [sp, #76]	; 0x4c
     904:	bl	0 <coda_get_errno>
     908:	ldr	r0, [r0]
     90c:	bl	0 <coda_errno_to_string>
     910:	ldr	r1, [sp, #80]	; 0x50
     914:	str	r0, [sp, #72]	; 0x48
     918:	mov	r0, r1
     91c:	movw	r1, #0
     920:	movt	r1, #0
     924:	ldr	r2, [sp, #76]	; 0x4c
     928:	ldr	r3, [sp, #72]	; 0x48
     92c:	bl	0 <fprintf>
     930:	ldr	r1, [fp, #-28]	; 0xffffffe4
     934:	str	r0, [sp, #68]	; 0x44
     938:	mov	r0, r1
     93c:	bl	0 <coda_close>
     940:	ldr	r1, [fp, #-32]	; 0xffffffe0
     944:	str	r0, [sp, #64]	; 0x40
     948:	mov	r0, r1
     94c:	bl	0 <coda_close>
     950:	mvn	r1, #0
     954:	str	r1, [fp, #-12]
     958:	b	b44 <compare_files+0x474>
     95c:	ldr	r1, [fp, #-32]	; 0xffffffe0
     960:	add	r0, sp, #136	; 0x88
     964:	bl	0 <coda_cursor_set_product>
     968:	cmp	r0, #0
     96c:	beq	9e8 <compare_files+0x318>
     970:	movw	r0, #0
     974:	movt	r0, #0
     978:	ldr	r0, [r0]
     97c:	movw	r1, #0
     980:	movt	r1, #0
     984:	ldr	r2, [r1, #4]
     988:	str	r0, [sp, #60]	; 0x3c
     98c:	str	r2, [sp, #56]	; 0x38
     990:	bl	0 <coda_get_errno>
     994:	ldr	r0, [r0]
     998:	bl	0 <coda_errno_to_string>
     99c:	ldr	r1, [sp, #60]	; 0x3c
     9a0:	str	r0, [sp, #52]	; 0x34
     9a4:	mov	r0, r1
     9a8:	movw	r1, #0
     9ac:	movt	r1, #0
     9b0:	ldr	r2, [sp, #56]	; 0x38
     9b4:	ldr	r3, [sp, #52]	; 0x34
     9b8:	bl	0 <fprintf>
     9bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
     9c0:	str	r0, [sp, #48]	; 0x30
     9c4:	mov	r0, r1
     9c8:	bl	0 <coda_close>
     9cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
     9d0:	str	r0, [sp, #44]	; 0x2c
     9d4:	mov	r0, r1
     9d8:	bl	0 <coda_close>
     9dc:	mvn	r1, #0
     9e0:	str	r1, [fp, #-12]
     9e4:	b	b44 <compare_files+0x474>
     9e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     9ec:	movw	r1, #0
     9f0:	cmp	r0, r1
     9f4:	beq	b14 <compare_files+0x444>
     9f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     9fc:	sub	r0, fp, #552	; 0x228
     a00:	bl	0 <coda_cursor_goto>
     a04:	cmp	r0, #0
     a08:	beq	a84 <compare_files+0x3b4>
     a0c:	movw	r0, #0
     a10:	movt	r0, #0
     a14:	ldr	r0, [r0]
     a18:	movw	r1, #0
     a1c:	movt	r1, #0
     a20:	ldr	r2, [r1]
     a24:	str	r0, [sp, #40]	; 0x28
     a28:	str	r2, [sp, #36]	; 0x24
     a2c:	bl	0 <coda_get_errno>
     a30:	ldr	r0, [r0]
     a34:	bl	0 <coda_errno_to_string>
     a38:	ldr	r1, [sp, #40]	; 0x28
     a3c:	str	r0, [sp, #32]
     a40:	mov	r0, r1
     a44:	movw	r1, #0
     a48:	movt	r1, #0
     a4c:	ldr	r2, [sp, #36]	; 0x24
     a50:	ldr	r3, [sp, #32]
     a54:	bl	0 <fprintf>
     a58:	ldr	r1, [fp, #-28]	; 0xffffffe4
     a5c:	str	r0, [sp, #28]
     a60:	mov	r0, r1
     a64:	bl	0 <coda_close>
     a68:	ldr	r1, [fp, #-32]	; 0xffffffe0
     a6c:	str	r0, [sp, #24]
     a70:	mov	r0, r1
     a74:	bl	0 <coda_close>
     a78:	mvn	r1, #0
     a7c:	str	r1, [fp, #-12]
     a80:	b	b44 <compare_files+0x474>
     a84:	ldr	r1, [fp, #-24]	; 0xffffffe8
     a88:	add	r0, sp, #136	; 0x88
     a8c:	bl	0 <coda_cursor_goto>
     a90:	cmp	r0, #0
     a94:	beq	b10 <compare_files+0x440>
     a98:	movw	r0, #0
     a9c:	movt	r0, #0
     aa0:	ldr	r0, [r0]
     aa4:	movw	r1, #0
     aa8:	movt	r1, #0
     aac:	ldr	r2, [r1, #4]
     ab0:	str	r0, [sp, #20]
     ab4:	str	r2, [sp, #16]
     ab8:	bl	0 <coda_get_errno>
     abc:	ldr	r0, [r0]
     ac0:	bl	0 <coda_errno_to_string>
     ac4:	ldr	r1, [sp, #20]
     ac8:	str	r0, [sp, #12]
     acc:	mov	r0, r1
     ad0:	movw	r1, #0
     ad4:	movt	r1, #0
     ad8:	ldr	r2, [sp, #16]
     adc:	ldr	r3, [sp, #12]
     ae0:	bl	0 <fprintf>
     ae4:	ldr	r1, [fp, #-28]	; 0xffffffe4
     ae8:	str	r0, [sp, #8]
     aec:	mov	r0, r1
     af0:	bl	0 <coda_close>
     af4:	ldr	r1, [fp, #-32]	; 0xffffffe0
     af8:	str	r0, [sp, #4]
     afc:	mov	r0, r1
     b00:	bl	0 <coda_close>
     b04:	mvn	r1, #0
     b08:	str	r1, [fp, #-12]
     b0c:	b	b44 <compare_files+0x474>
     b10:	b	b14 <compare_files+0x444>
     b14:	sub	r0, fp, #552	; 0x228
     b18:	add	r1, sp, #136	; 0x88
     b1c:	bl	1000 <compare_data>
     b20:	str	r0, [sp, #132]	; 0x84
     b24:	ldr	r0, [fp, #-28]	; 0xffffffe4
     b28:	bl	0 <coda_close>
     b2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
     b30:	str	r0, [sp]
     b34:	mov	r0, r1
     b38:	bl	0 <coda_close>
     b3c:	ldr	r1, [sp, #132]	; 0x84
     b40:	str	r1, [fp, #-12]
     b44:	ldr	r0, [fp, #-12]
     b48:	sub	sp, fp, #8
     b4c:	pop	{r4, r5, fp, pc}

00000b50 <array_key_info_done>:
     b50:	push	{fp, lr}
     b54:	mov	fp, sp
     b58:	movw	r0, #0
     b5c:	movt	r0, #0
     b60:	ldr	r0, [r0, #4]
     b64:	movw	r1, #0
     b68:	cmp	r0, r1
     b6c:	beq	b80 <array_key_info_done+0x30>
     b70:	movw	r0, #0
     b74:	movt	r0, #0
     b78:	ldr	r0, [r0, #4]
     b7c:	bl	0 <free>
     b80:	movw	r0, #0
     b84:	movt	r0, #0
     b88:	ldr	r0, [r0, #8]
     b8c:	movw	r1, #0
     b90:	cmp	r0, r1
     b94:	beq	ba8 <array_key_info_done+0x58>
     b98:	movw	r0, #0
     b9c:	movt	r0, #0
     ba0:	ldr	r0, [r0, #8]
     ba4:	bl	0 <free>
     ba8:	movw	r0, #0
     bac:	movt	r0, #0
     bb0:	ldr	r0, [r0, #12]
     bb4:	movw	r1, #0
     bb8:	cmp	r0, r1
     bbc:	beq	bd4 <array_key_info_done+0x84>
     bc0:	movw	r0, #0
     bc4:	movt	r0, #0
     bc8:	ldr	r0, [r0, #12]
     bcc:	movw	r1, #0
     bd0:	bl	0 <coda_tree_node_delete>
     bd4:	pop	{fp, pc}

00000bd8 <print_help>:
     bd8:	push	{fp, lr}
     bdc:	mov	fp, sp
     be0:	sub	sp, sp, #136	; 0x88
     be4:	movw	r0, #0
     be8:	movt	r0, #0
     bec:	bl	0 <printf>
     bf0:	movw	r1, #0
     bf4:	movt	r1, #0
     bf8:	str	r0, [fp, #-4]
     bfc:	mov	r0, r1
     c00:	bl	0 <printf>
     c04:	movw	r1, #0
     c08:	movt	r1, #0
     c0c:	str	r0, [fp, #-8]
     c10:	mov	r0, r1
     c14:	bl	0 <printf>
     c18:	movw	r1, #0
     c1c:	movt	r1, #0
     c20:	str	r0, [fp, #-12]
     c24:	mov	r0, r1
     c28:	bl	0 <printf>
     c2c:	movw	r1, #0
     c30:	movt	r1, #0
     c34:	str	r0, [fp, #-16]
     c38:	mov	r0, r1
     c3c:	bl	0 <printf>
     c40:	movw	r1, #0
     c44:	movt	r1, #0
     c48:	str	r0, [fp, #-20]	; 0xffffffec
     c4c:	mov	r0, r1
     c50:	bl	0 <printf>
     c54:	movw	r1, #0
     c58:	movt	r1, #0
     c5c:	str	r0, [fp, #-24]	; 0xffffffe8
     c60:	mov	r0, r1
     c64:	bl	0 <printf>
     c68:	movw	r1, #0
     c6c:	movt	r1, #0
     c70:	str	r0, [fp, #-28]	; 0xffffffe4
     c74:	mov	r0, r1
     c78:	bl	0 <printf>
     c7c:	movw	r1, #0
     c80:	movt	r1, #0
     c84:	str	r0, [fp, #-32]	; 0xffffffe0
     c88:	mov	r0, r1
     c8c:	bl	0 <printf>
     c90:	movw	r1, #0
     c94:	movt	r1, #0
     c98:	str	r0, [fp, #-36]	; 0xffffffdc
     c9c:	mov	r0, r1
     ca0:	bl	0 <printf>
     ca4:	movw	r1, #0
     ca8:	movt	r1, #0
     cac:	str	r0, [fp, #-40]	; 0xffffffd8
     cb0:	mov	r0, r1
     cb4:	bl	0 <printf>
     cb8:	movw	r1, #0
     cbc:	movt	r1, #0
     cc0:	str	r0, [fp, #-44]	; 0xffffffd4
     cc4:	mov	r0, r1
     cc8:	bl	0 <printf>
     ccc:	movw	r1, #0
     cd0:	movt	r1, #0
     cd4:	str	r0, [fp, #-48]	; 0xffffffd0
     cd8:	mov	r0, r1
     cdc:	bl	0 <printf>
     ce0:	movw	r1, #0
     ce4:	movt	r1, #0
     ce8:	str	r0, [fp, #-52]	; 0xffffffcc
     cec:	mov	r0, r1
     cf0:	bl	0 <printf>
     cf4:	movw	r1, #0
     cf8:	movt	r1, #0
     cfc:	str	r0, [fp, #-56]	; 0xffffffc8
     d00:	mov	r0, r1
     d04:	bl	0 <printf>
     d08:	movw	r1, #0
     d0c:	movt	r1, #0
     d10:	str	r0, [fp, #-60]	; 0xffffffc4
     d14:	mov	r0, r1
     d18:	bl	0 <printf>
     d1c:	movw	r1, #0
     d20:	movt	r1, #0
     d24:	str	r0, [fp, #-64]	; 0xffffffc0
     d28:	mov	r0, r1
     d2c:	bl	0 <printf>
     d30:	movw	r1, #0
     d34:	movt	r1, #0
     d38:	str	r0, [sp, #68]	; 0x44
     d3c:	mov	r0, r1
     d40:	bl	0 <printf>
     d44:	movw	r1, #0
     d48:	movt	r1, #0
     d4c:	str	r0, [sp, #64]	; 0x40
     d50:	mov	r0, r1
     d54:	bl	0 <printf>
     d58:	movw	r1, #0
     d5c:	movt	r1, #0
     d60:	str	r0, [sp, #60]	; 0x3c
     d64:	mov	r0, r1
     d68:	bl	0 <printf>
     d6c:	movw	r1, #0
     d70:	movt	r1, #0
     d74:	str	r0, [sp, #56]	; 0x38
     d78:	mov	r0, r1
     d7c:	bl	0 <printf>
     d80:	movw	r1, #0
     d84:	movt	r1, #0
     d88:	str	r0, [sp, #52]	; 0x34
     d8c:	mov	r0, r1
     d90:	bl	0 <printf>
     d94:	movw	r1, #0
     d98:	movt	r1, #0
     d9c:	str	r0, [sp, #48]	; 0x30
     da0:	mov	r0, r1
     da4:	bl	0 <printf>
     da8:	movw	r1, #0
     dac:	movt	r1, #0
     db0:	str	r0, [sp, #44]	; 0x2c
     db4:	mov	r0, r1
     db8:	bl	0 <printf>
     dbc:	movw	r1, #0
     dc0:	movt	r1, #0
     dc4:	str	r0, [sp, #40]	; 0x28
     dc8:	mov	r0, r1
     dcc:	bl	0 <printf>
     dd0:	movw	r1, #0
     dd4:	movt	r1, #0
     dd8:	str	r0, [sp, #36]	; 0x24
     ddc:	mov	r0, r1
     de0:	bl	0 <printf>
     de4:	movw	r1, #0
     de8:	movt	r1, #0
     dec:	str	r0, [sp, #32]
     df0:	mov	r0, r1
     df4:	bl	0 <printf>
     df8:	movw	r1, #0
     dfc:	movt	r1, #0
     e00:	str	r0, [sp, #28]
     e04:	mov	r0, r1
     e08:	bl	0 <printf>
     e0c:	movw	r1, #0
     e10:	movt	r1, #0
     e14:	str	r0, [sp, #24]
     e18:	mov	r0, r1
     e1c:	bl	0 <printf>
     e20:	movw	r1, #0
     e24:	movt	r1, #0
     e28:	str	r0, [sp, #20]
     e2c:	mov	r0, r1
     e30:	bl	0 <printf>
     e34:	movw	r1, #0
     e38:	movt	r1, #0
     e3c:	str	r0, [sp, #16]
     e40:	mov	r0, r1
     e44:	bl	0 <printf>
     e48:	movw	r1, #0
     e4c:	movt	r1, #0
     e50:	str	r0, [sp, #12]
     e54:	mov	r0, r1
     e58:	bl	0 <printf>
     e5c:	movw	r1, #0
     e60:	movt	r1, #0
     e64:	str	r0, [sp, #8]
     e68:	mov	r0, r1
     e6c:	bl	0 <printf>
     e70:	movw	r1, #0
     e74:	movt	r1, #0
     e78:	str	r0, [sp, #4]
     e7c:	mov	r0, r1
     e80:	bl	0 <printf>
     e84:	movw	r1, #0
     e88:	movt	r1, #0
     e8c:	str	r0, [sp]
     e90:	mov	r0, r1
     e94:	bl	0 <printf>
     e98:	mov	sp, fp
     e9c:	pop	{fp, pc}

00000ea0 <print_version>:
     ea0:	push	{fp, lr}
     ea4:	mov	fp, sp
     ea8:	sub	sp, sp, #16
     eac:	bl	0 <coda_get_libcoda_version>
     eb0:	movw	r1, #0
     eb4:	movt	r1, #0
     eb8:	str	r0, [fp, #-4]
     ebc:	mov	r0, r1
     ec0:	ldr	r1, [fp, #-4]
     ec4:	bl	0 <printf>
     ec8:	movw	r1, #0
     ecc:	movt	r1, #0
     ed0:	str	r0, [sp, #8]
     ed4:	mov	r0, r1
     ed8:	bl	0 <printf>
     edc:	movw	r1, #0
     ee0:	movt	r1, #0
     ee4:	str	r0, [sp, #4]
     ee8:	mov	r0, r1
     eec:	bl	0 <printf>
     ef0:	mov	sp, fp
     ef4:	pop	{fp, pc}

00000ef8 <array_key_info_set_product>:
     ef8:	push	{fp, lr}
     efc:	mov	fp, sp
     f00:	sub	sp, sp, #16
     f04:	str	r0, [sp, #8]
     f08:	movw	r0, #0
     f0c:	movt	r0, #0
     f10:	ldr	r0, [r0]
     f14:	cmp	r0, #0
     f18:	bne	f28 <array_key_info_set_product+0x30>
     f1c:	movw	r0, #0
     f20:	str	r0, [fp, #-4]
     f24:	b	ff4 <array_key_info_set_product+0xfc>
     f28:	ldr	r0, [sp, #8]
     f2c:	add	r1, sp, #4
     f30:	bl	0 <coda_get_product_root_type>
     f34:	cmp	r0, #0
     f38:	beq	f48 <array_key_info_set_product+0x50>
     f3c:	mvn	r0, #0
     f40:	str	r0, [fp, #-4]
     f44:	b	ff4 <array_key_info_set_product+0xfc>
     f48:	ldr	r0, [sp, #4]
     f4c:	bl	0 <coda_tree_node_new>
     f50:	movw	r1, #0
     f54:	movt	r1, #0
     f58:	str	r0, [r1, #12]
     f5c:	ldr	r0, [r1, #12]
     f60:	movw	r1, #0
     f64:	cmp	r0, r1
     f68:	bne	f78 <array_key_info_set_product+0x80>
     f6c:	mvn	r0, #0
     f70:	str	r0, [fp, #-4]
     f74:	b	ff4 <array_key_info_set_product+0xfc>
     f78:	movw	r0, #0
     f7c:	str	r0, [sp]
     f80:	ldr	r0, [sp]
     f84:	movw	r1, #0
     f88:	movt	r1, #0
     f8c:	ldr	r1, [r1]
     f90:	cmp	r0, r1
     f94:	bge	fec <array_key_info_set_product+0xf4>
     f98:	movw	r0, #0
     f9c:	movt	r0, #0
     fa0:	ldr	r1, [r0, #4]
     fa4:	ldr	r2, [r0, #8]
     fa8:	ldr	r0, [r0, #12]
     fac:	ldr	r3, [sp]
     fb0:	ldr	r1, [r1, r3, lsl #2]
     fb4:	add	r2, r2, r3, lsl #2
     fb8:	ldr	r2, [r2]
     fbc:	movw	r3, #0
     fc0:	bl	0 <coda_tree_node_add_item_for_path>
     fc4:	cmp	r0, #0
     fc8:	beq	fd8 <array_key_info_set_product+0xe0>
     fcc:	mvn	r0, #0
     fd0:	str	r0, [fp, #-4]
     fd4:	b	ff4 <array_key_info_set_product+0xfc>
     fd8:	b	fdc <array_key_info_set_product+0xe4>
     fdc:	ldr	r0, [sp]
     fe0:	add	r0, r0, #1
     fe4:	str	r0, [sp]
     fe8:	b	f80 <array_key_info_set_product+0x88>
     fec:	movw	r0, #0
     ff0:	str	r0, [fp, #-4]
     ff4:	ldr	r0, [fp, #-4]
     ff8:	mov	sp, fp
     ffc:	pop	{fp, pc}

00001000 <compare_data>:
    1000:	push	{fp, lr}
    1004:	mov	fp, sp
    1008:	sub	sp, sp, #88	; 0x58
    100c:	str	r0, [fp, #-8]
    1010:	str	r1, [fp, #-12]
    1014:	ldr	r0, [fp, #-8]
    1018:	sub	r1, fp, #16
    101c:	bl	0 <coda_cursor_get_type_class>
    1020:	cmp	r0, #0
    1024:	beq	1040 <compare_data+0x40>
    1028:	ldr	r0, [fp, #-8]
    102c:	movw	r1, #1
    1030:	bl	140c <print_error_with_cursor>
    1034:	mvn	r0, #0
    1038:	str	r0, [fp, #-4]
    103c:	b	1400 <compare_data+0x400>
    1040:	ldr	r0, [fp, #-12]
    1044:	sub	r1, fp, #20
    1048:	bl	0 <coda_cursor_get_type_class>
    104c:	cmp	r0, #0
    1050:	beq	106c <compare_data+0x6c>
    1054:	ldr	r0, [fp, #-12]
    1058:	movw	r1, #2
    105c:	bl	140c <print_error_with_cursor>
    1060:	mvn	r0, #0
    1064:	str	r0, [fp, #-4]
    1068:	b	1400 <compare_data+0x400>
    106c:	ldr	r0, [fp, #-16]
    1070:	ldr	r1, [fp, #-20]	; 0xffffffec
    1074:	cmp	r0, r1
    1078:	beq	1144 <compare_data+0x144>
    107c:	movw	r0, #0
    1080:	movt	r0, #0
    1084:	bl	0 <printf>
    1088:	ldr	r1, [fp, #-8]
    108c:	str	r0, [fp, #-32]	; 0xffffffe0
    1090:	mov	r0, r1
    1094:	movw	r1, #0
    1098:	movt	r1, #0
    109c:	bl	0 <coda_cursor_print_path>
    10a0:	movw	r1, #0
    10a4:	movt	r1, #0
    10a8:	str	r0, [fp, #-36]	; 0xffffffdc
    10ac:	mov	r0, r1
    10b0:	bl	0 <printf>
    10b4:	movw	r1, #0
    10b8:	movt	r1, #0
    10bc:	ldr	r1, [r1]
    10c0:	cmp	r1, #0
    10c4:	beq	1138 <compare_data+0x138>
    10c8:	movw	r0, #0
    10cc:	movt	r0, #0
    10d0:	ldr	r1, [r0]
    10d4:	ldr	r0, [fp, #-16]
    10d8:	str	r1, [fp, #-40]	; 0xffffffd8
    10dc:	bl	0 <coda_type_get_class_name>
    10e0:	movw	r1, #0
    10e4:	movt	r1, #0
    10e8:	str	r0, [sp, #44]	; 0x2c
    10ec:	mov	r0, r1
    10f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    10f4:	ldr	r2, [sp, #44]	; 0x2c
    10f8:	bl	0 <printf>
    10fc:	movw	r1, #0
    1100:	movt	r1, #0
    1104:	ldr	r1, [r1, #4]
    1108:	ldr	r2, [fp, #-20]	; 0xffffffec
    110c:	str	r0, [sp, #40]	; 0x28
    1110:	mov	r0, r2
    1114:	str	r1, [sp, #36]	; 0x24
    1118:	bl	0 <coda_type_get_class_name>
    111c:	movw	r1, #0
    1120:	movt	r1, #0
    1124:	str	r0, [sp, #32]
    1128:	mov	r0, r1
    112c:	ldr	r1, [sp, #36]	; 0x24
    1130:	ldr	r2, [sp, #32]
    1134:	bl	0 <printf>
    1138:	movw	r0, #0
    113c:	str	r0, [fp, #-4]
    1140:	b	1400 <compare_data+0x400>
    1144:	ldr	r0, [fp, #-16]
    1148:	cmp	r0, #6
    114c:	str	r0, [sp, #28]
    1150:	bhi	13d8 <compare_data+0x3d8>
    1154:	add	r0, pc, #8
    1158:	ldr	r1, [sp, #28]
    115c:	ldr	r0, [r0, r1, lsl #2]
    1160:	mov	pc, r0
    1164:	.word	0x000011a4
    1168:	.word	0x00001180
    116c:	.word	0x000011c8
    1170:	.word	0x000011c8
    1174:	.word	0x000011ec
    1178:	.word	0x00001210
    117c:	.word	0x00001234
    1180:	ldr	r0, [fp, #-8]
    1184:	ldr	r1, [fp, #-12]
    1188:	bl	1488 <compare_arrays>
    118c:	cmp	r0, #0
    1190:	beq	11a0 <compare_data+0x1a0>
    1194:	mvn	r0, #0
    1198:	str	r0, [fp, #-4]
    119c:	b	1400 <compare_data+0x400>
    11a0:	b	13d8 <compare_data+0x3d8>
    11a4:	ldr	r0, [fp, #-8]
    11a8:	ldr	r1, [fp, #-12]
    11ac:	bl	1738 <compare_records>
    11b0:	cmp	r0, #0
    11b4:	beq	11c4 <compare_data+0x1c4>
    11b8:	mvn	r0, #0
    11bc:	str	r0, [fp, #-4]
    11c0:	b	1400 <compare_data+0x400>
    11c4:	b	13d8 <compare_data+0x3d8>
    11c8:	ldr	r0, [fp, #-8]
    11cc:	ldr	r1, [fp, #-12]
    11d0:	bl	1d24 <compare_numbers>
    11d4:	cmp	r0, #0
    11d8:	beq	11e8 <compare_data+0x1e8>
    11dc:	mvn	r0, #0
    11e0:	str	r0, [fp, #-4]
    11e4:	b	1400 <compare_data+0x400>
    11e8:	b	13d8 <compare_data+0x3d8>
    11ec:	ldr	r0, [fp, #-8]
    11f0:	ldr	r1, [fp, #-12]
    11f4:	bl	23f4 <compare_strings>
    11f8:	cmp	r0, #0
    11fc:	beq	120c <compare_data+0x20c>
    1200:	mvn	r0, #0
    1204:	str	r0, [fp, #-4]
    1208:	b	1400 <compare_data+0x400>
    120c:	b	13d8 <compare_data+0x3d8>
    1210:	ldr	r0, [fp, #-8]
    1214:	ldr	r1, [fp, #-12]
    1218:	bl	26d4 <compare_bytes>
    121c:	cmp	r0, #0
    1220:	beq	1230 <compare_data+0x230>
    1224:	mvn	r0, #0
    1228:	str	r0, [fp, #-4]
    122c:	b	1400 <compare_data+0x400>
    1230:	b	13d8 <compare_data+0x3d8>
    1234:	ldr	r0, [fp, #-8]
    1238:	sub	r1, fp, #24
    123c:	bl	0 <coda_cursor_get_special_type>
    1240:	cmp	r0, #0
    1244:	beq	1260 <compare_data+0x260>
    1248:	ldr	r0, [fp, #-8]
    124c:	movw	r1, #1
    1250:	bl	140c <print_error_with_cursor>
    1254:	mvn	r0, #0
    1258:	str	r0, [fp, #-4]
    125c:	b	1400 <compare_data+0x400>
    1260:	ldr	r0, [fp, #-12]
    1264:	sub	r1, fp, #28
    1268:	bl	0 <coda_cursor_get_special_type>
    126c:	cmp	r0, #0
    1270:	beq	128c <compare_data+0x28c>
    1274:	ldr	r0, [fp, #-12]
    1278:	movw	r1, #2
    127c:	bl	140c <print_error_with_cursor>
    1280:	mvn	r0, #0
    1284:	str	r0, [fp, #-4]
    1288:	b	1400 <compare_data+0x400>
    128c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1290:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1294:	cmp	r0, r1
    1298:	beq	1364 <compare_data+0x364>
    129c:	movw	r0, #0
    12a0:	movt	r0, #0
    12a4:	bl	0 <printf>
    12a8:	ldr	r1, [fp, #-8]
    12ac:	str	r0, [sp, #24]
    12b0:	mov	r0, r1
    12b4:	movw	r1, #0
    12b8:	movt	r1, #0
    12bc:	bl	0 <coda_cursor_print_path>
    12c0:	movw	r1, #0
    12c4:	movt	r1, #0
    12c8:	str	r0, [sp, #20]
    12cc:	mov	r0, r1
    12d0:	bl	0 <printf>
    12d4:	movw	r1, #0
    12d8:	movt	r1, #0
    12dc:	ldr	r1, [r1]
    12e0:	cmp	r1, #0
    12e4:	beq	1358 <compare_data+0x358>
    12e8:	movw	r0, #0
    12ec:	movt	r0, #0
    12f0:	ldr	r1, [r0]
    12f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    12f8:	str	r1, [sp, #16]
    12fc:	bl	0 <coda_type_get_special_type_name>
    1300:	movw	r1, #0
    1304:	movt	r1, #0
    1308:	str	r0, [sp, #12]
    130c:	mov	r0, r1
    1310:	ldr	r1, [sp, #16]
    1314:	ldr	r2, [sp, #12]
    1318:	bl	0 <printf>
    131c:	movw	r1, #0
    1320:	movt	r1, #0
    1324:	ldr	r1, [r1, #4]
    1328:	ldr	r2, [fp, #-28]	; 0xffffffe4
    132c:	str	r0, [sp, #8]
    1330:	mov	r0, r2
    1334:	str	r1, [sp, #4]
    1338:	bl	0 <coda_type_get_special_type_name>
    133c:	movw	r1, #0
    1340:	movt	r1, #0
    1344:	str	r0, [sp]
    1348:	mov	r0, r1
    134c:	ldr	r1, [sp, #4]
    1350:	ldr	r2, [sp]
    1354:	bl	0 <printf>
    1358:	movw	r0, #0
    135c:	str	r0, [fp, #-4]
    1360:	b	1400 <compare_data+0x400>
    1364:	ldr	r0, [fp, #-8]
    1368:	bl	0 <coda_cursor_use_base_type_of_special_type>
    136c:	cmp	r0, #0
    1370:	beq	138c <compare_data+0x38c>
    1374:	ldr	r0, [fp, #-8]
    1378:	movw	r1, #1
    137c:	bl	140c <print_error_with_cursor>
    1380:	mvn	r0, #0
    1384:	str	r0, [fp, #-4]
    1388:	b	1400 <compare_data+0x400>
    138c:	ldr	r0, [fp, #-12]
    1390:	bl	0 <coda_cursor_use_base_type_of_special_type>
    1394:	cmp	r0, #0
    1398:	beq	13b4 <compare_data+0x3b4>
    139c:	ldr	r0, [fp, #-12]
    13a0:	movw	r1, #2
    13a4:	bl	140c <print_error_with_cursor>
    13a8:	mvn	r0, #0
    13ac:	str	r0, [fp, #-4]
    13b0:	b	1400 <compare_data+0x400>
    13b4:	ldr	r0, [fp, #-8]
    13b8:	ldr	r1, [fp, #-12]
    13bc:	bl	1000 <compare_data>
    13c0:	cmp	r0, #0
    13c4:	beq	13d4 <compare_data+0x3d4>
    13c8:	mvn	r0, #0
    13cc:	str	r0, [fp, #-4]
    13d0:	b	1400 <compare_data+0x400>
    13d4:	b	13d8 <compare_data+0x3d8>
    13d8:	ldr	r0, [fp, #-8]
    13dc:	ldr	r1, [fp, #-12]
    13e0:	bl	2ba4 <compare_attributes>
    13e4:	cmp	r0, #0
    13e8:	beq	13f8 <compare_data+0x3f8>
    13ec:	mvn	r0, #0
    13f0:	str	r0, [fp, #-4]
    13f4:	b	1400 <compare_data+0x400>
    13f8:	movw	r0, #0
    13fc:	str	r0, [fp, #-4]
    1400:	ldr	r0, [fp, #-4]
    1404:	mov	sp, fp
    1408:	pop	{fp, pc}

0000140c <print_error_with_cursor>:
    140c:	push	{fp, lr}
    1410:	mov	fp, sp
    1414:	sub	sp, sp, #24
    1418:	str	r0, [fp, #-4]
    141c:	str	r1, [fp, #-8]
    1420:	ldr	r0, [fp, #-4]
    1424:	bl	0 <coda_cursor_add_to_error_message>
    1428:	movw	r0, #0
    142c:	movt	r0, #0
    1430:	ldr	r0, [r0]
    1434:	ldr	r1, [fp, #-8]
    1438:	sub	r1, r1, #1
    143c:	movw	r2, #0
    1440:	movt	r2, #0
    1444:	add	r1, r2, r1, lsl #2
    1448:	ldr	r2, [r1]
    144c:	str	r0, [sp, #12]
    1450:	str	r2, [sp, #8]
    1454:	bl	0 <coda_get_errno>
    1458:	ldr	r0, [r0]
    145c:	bl	0 <coda_errno_to_string>
    1460:	ldr	r1, [sp, #12]
    1464:	str	r0, [sp, #4]
    1468:	mov	r0, r1
    146c:	movw	r1, #0
    1470:	movt	r1, #0
    1474:	ldr	r2, [sp, #8]
    1478:	ldr	r3, [sp, #4]
    147c:	bl	0 <fprintf>
    1480:	mov	sp, fp
    1484:	pop	{fp, pc}

00001488 <compare_arrays>:
    1488:	push	{fp, lr}
    148c:	mov	fp, sp
    1490:	sub	sp, sp, #48	; 0x30
    1494:	str	r0, [fp, #-8]
    1498:	str	r1, [fp, #-12]
    149c:	movw	r0, #0
    14a0:	movt	r0, #0
    14a4:	ldr	r0, [r0, #12]
    14a8:	ldr	r1, [fp, #-8]
    14ac:	sub	r2, fp, #16
    14b0:	bl	0 <coda_tree_node_get_item_for_cursor>
    14b4:	cmp	r0, #0
    14b8:	beq	14d4 <compare_arrays+0x4c>
    14bc:	ldr	r0, [fp, #-8]
    14c0:	movw	r1, #1
    14c4:	bl	140c <print_error_with_cursor>
    14c8:	mvn	r0, #0
    14cc:	str	r0, [fp, #-4]
    14d0:	b	172c <compare_arrays+0x2a4>
    14d4:	ldr	r0, [fp, #-16]
    14d8:	movw	r1, #0
    14dc:	cmp	r0, r1
    14e0:	beq	14fc <compare_arrays+0x74>
    14e4:	ldr	r0, [fp, #-8]
    14e8:	ldr	r1, [fp, #-12]
    14ec:	ldr	r2, [fp, #-16]
    14f0:	bl	2cc4 <compare_arrays_as_records>
    14f4:	str	r0, [fp, #-4]
    14f8:	b	172c <compare_arrays+0x2a4>
    14fc:	ldr	r0, [fp, #-8]
    1500:	sub	r1, fp, #20
    1504:	bl	0 <coda_cursor_get_num_elements>
    1508:	cmp	r0, #0
    150c:	beq	1528 <compare_arrays+0xa0>
    1510:	ldr	r0, [fp, #-8]
    1514:	movw	r1, #1
    1518:	bl	140c <print_error_with_cursor>
    151c:	mvn	r0, #0
    1520:	str	r0, [fp, #-4]
    1524:	b	172c <compare_arrays+0x2a4>
    1528:	ldr	r0, [fp, #-12]
    152c:	add	r1, sp, #24
    1530:	bl	0 <coda_cursor_get_num_elements>
    1534:	cmp	r0, #0
    1538:	beq	1554 <compare_arrays+0xcc>
    153c:	ldr	r0, [fp, #-12]
    1540:	movw	r1, #2
    1544:	bl	140c <print_error_with_cursor>
    1548:	mvn	r0, #0
    154c:	str	r0, [fp, #-4]
    1550:	b	172c <compare_arrays+0x2a4>
    1554:	ldr	r0, [fp, #-20]	; 0xffffffec
    1558:	ldr	r1, [sp, #24]
    155c:	cmp	r0, r1
    1560:	beq	15fc <compare_arrays+0x174>
    1564:	movw	r0, #0
    1568:	movt	r0, #0
    156c:	bl	0 <printf>
    1570:	ldr	r1, [fp, #-8]
    1574:	str	r0, [sp, #16]
    1578:	mov	r0, r1
    157c:	movw	r1, #0
    1580:	movt	r1, #0
    1584:	bl	0 <coda_cursor_print_path>
    1588:	movw	r1, #0
    158c:	movt	r1, #0
    1590:	str	r0, [sp, #12]
    1594:	mov	r0, r1
    1598:	bl	0 <printf>
    159c:	movw	r1, #0
    15a0:	movt	r1, #0
    15a4:	ldr	r1, [r1]
    15a8:	cmp	r1, #0
    15ac:	beq	15f0 <compare_arrays+0x168>
    15b0:	movw	r0, #0
    15b4:	movt	r0, #0
    15b8:	ldr	r1, [r0]
    15bc:	ldr	r2, [fp, #-20]	; 0xffffffec
    15c0:	movw	r0, #0
    15c4:	movt	r0, #0
    15c8:	bl	0 <printf>
    15cc:	movw	r1, #0
    15d0:	movt	r1, #0
    15d4:	ldr	r1, [r1, #4]
    15d8:	ldr	r2, [sp, #24]
    15dc:	movw	r3, #0
    15e0:	movt	r3, #0
    15e4:	str	r0, [sp, #8]
    15e8:	mov	r0, r3
    15ec:	bl	0 <printf>
    15f0:	movw	r0, #0
    15f4:	str	r0, [fp, #-4]
    15f8:	b	172c <compare_arrays+0x2a4>
    15fc:	ldr	r0, [fp, #-20]	; 0xffffffec
    1600:	cmp	r0, #0
    1604:	ble	1724 <compare_arrays+0x29c>
    1608:	ldr	r0, [fp, #-8]
    160c:	bl	0 <coda_cursor_goto_first_array_element>
    1610:	cmp	r0, #0
    1614:	beq	1630 <compare_arrays+0x1a8>
    1618:	ldr	r0, [fp, #-8]
    161c:	movw	r1, #1
    1620:	bl	140c <print_error_with_cursor>
    1624:	mvn	r0, #0
    1628:	str	r0, [fp, #-4]
    162c:	b	172c <compare_arrays+0x2a4>
    1630:	ldr	r0, [fp, #-12]
    1634:	bl	0 <coda_cursor_goto_first_array_element>
    1638:	cmp	r0, #0
    163c:	beq	1658 <compare_arrays+0x1d0>
    1640:	ldr	r0, [fp, #-12]
    1644:	movw	r1, #1
    1648:	bl	140c <print_error_with_cursor>
    164c:	mvn	r0, #0
    1650:	str	r0, [fp, #-4]
    1654:	b	172c <compare_arrays+0x2a4>
    1658:	movw	r0, #0
    165c:	str	r0, [sp, #20]
    1660:	ldr	r0, [sp, #20]
    1664:	ldr	r1, [fp, #-20]	; 0xffffffec
    1668:	cmp	r0, r1
    166c:	bge	170c <compare_arrays+0x284>
    1670:	ldr	r0, [fp, #-8]
    1674:	ldr	r1, [fp, #-12]
    1678:	bl	1000 <compare_data>
    167c:	cmp	r0, #0
    1680:	beq	1690 <compare_arrays+0x208>
    1684:	mvn	r0, #0
    1688:	str	r0, [fp, #-4]
    168c:	b	172c <compare_arrays+0x2a4>
    1690:	ldr	r0, [sp, #20]
    1694:	ldr	r1, [fp, #-20]	; 0xffffffec
    1698:	sub	r1, r1, #1
    169c:	cmp	r0, r1
    16a0:	bge	16f8 <compare_arrays+0x270>
    16a4:	ldr	r0, [fp, #-8]
    16a8:	bl	0 <coda_cursor_goto_next_array_element>
    16ac:	cmp	r0, #0
    16b0:	beq	16cc <compare_arrays+0x244>
    16b4:	ldr	r0, [fp, #-8]
    16b8:	movw	r1, #1
    16bc:	bl	140c <print_error_with_cursor>
    16c0:	mvn	r0, #0
    16c4:	str	r0, [fp, #-4]
    16c8:	b	172c <compare_arrays+0x2a4>
    16cc:	ldr	r0, [fp, #-12]
    16d0:	bl	0 <coda_cursor_goto_next_array_element>
    16d4:	cmp	r0, #0
    16d8:	beq	16f4 <compare_arrays+0x26c>
    16dc:	ldr	r0, [fp, #-12]
    16e0:	movw	r1, #2
    16e4:	bl	140c <print_error_with_cursor>
    16e8:	mvn	r0, #0
    16ec:	str	r0, [fp, #-4]
    16f0:	b	172c <compare_arrays+0x2a4>
    16f4:	b	16f8 <compare_arrays+0x270>
    16f8:	b	16fc <compare_arrays+0x274>
    16fc:	ldr	r0, [sp, #20]
    1700:	add	r0, r0, #1
    1704:	str	r0, [sp, #20]
    1708:	b	1660 <compare_arrays+0x1d8>
    170c:	ldr	r0, [fp, #-8]
    1710:	bl	0 <coda_cursor_goto_parent>
    1714:	ldr	r1, [fp, #-12]
    1718:	str	r0, [sp, #4]
    171c:	mov	r0, r1
    1720:	bl	0 <coda_cursor_goto_parent>
    1724:	movw	r0, #0
    1728:	str	r0, [fp, #-4]
    172c:	ldr	r0, [fp, #-4]
    1730:	mov	sp, fp
    1734:	pop	{fp, pc}

00001738 <compare_records>:
    1738:	push	{r4, r5, fp, lr}
    173c:	add	fp, sp, #8
    1740:	sub	sp, sp, #624	; 0x270
    1744:	str	r0, [fp, #-16]
    1748:	str	r1, [fp, #-20]	; 0xffffffec
    174c:	ldr	r0, [fp, #-16]
    1750:	sub	r1, fp, #24
    1754:	bl	0 <coda_cursor_get_type>
    1758:	cmp	r0, #0
    175c:	beq	1778 <compare_records+0x40>
    1760:	ldr	r0, [fp, #-16]
    1764:	movw	r1, #1
    1768:	bl	140c <print_error_with_cursor>
    176c:	mvn	r0, #0
    1770:	str	r0, [fp, #-12]
    1774:	b	1d18 <compare_records+0x5e0>
    1778:	ldr	r0, [fp, #-20]	; 0xffffffec
    177c:	sub	r1, fp, #28
    1780:	bl	0 <coda_cursor_get_type>
    1784:	cmp	r0, #0
    1788:	beq	17a4 <compare_records+0x6c>
    178c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1790:	movw	r1, #2
    1794:	bl	140c <print_error_with_cursor>
    1798:	mvn	r0, #0
    179c:	str	r0, [fp, #-12]
    17a0:	b	1d18 <compare_records+0x5e0>
    17a4:	ldr	r0, [fp, #-16]
    17a8:	sub	r1, fp, #36	; 0x24
    17ac:	bl	0 <coda_cursor_get_num_elements>
    17b0:	cmp	r0, #0
    17b4:	beq	17d0 <compare_records+0x98>
    17b8:	ldr	r0, [fp, #-16]
    17bc:	movw	r1, #1
    17c0:	bl	140c <print_error_with_cursor>
    17c4:	mvn	r0, #0
    17c8:	str	r0, [fp, #-12]
    17cc:	b	1d18 <compare_records+0x5e0>
    17d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    17d4:	sub	r1, fp, #40	; 0x28
    17d8:	bl	0 <coda_cursor_get_num_elements>
    17dc:	cmp	r0, #0
    17e0:	beq	17fc <compare_records+0xc4>
    17e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    17e8:	movw	r1, #2
    17ec:	bl	140c <print_error_with_cursor>
    17f0:	mvn	r0, #0
    17f4:	str	r0, [fp, #-12]
    17f8:	b	1d18 <compare_records+0x5e0>
    17fc:	movw	r0, #1
    1800:	str	r0, [fp, #-32]	; 0xffffffe0
    1804:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1808:	cmp	r0, #0
    180c:	ble	1908 <compare_records+0x1d0>
    1810:	movw	r0, #0
    1814:	str	r0, [fp, #-44]	; 0xffffffd4
    1818:	ldr	r0, [fp, #-44]	; 0xffffffd4
    181c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1820:	cmp	r0, r1
    1824:	bge	1904 <compare_records+0x1cc>
    1828:	ldr	r0, [fp, #-24]	; 0xffffffe8
    182c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1830:	sub	r2, fp, #52	; 0x34
    1834:	bl	0 <coda_type_get_record_field_name>
    1838:	cmp	r0, #0
    183c:	beq	1858 <compare_records+0x120>
    1840:	ldr	r0, [fp, #-16]
    1844:	movw	r1, #1
    1848:	bl	140c <print_error_with_cursor>
    184c:	mvn	r0, #0
    1850:	str	r0, [fp, #-12]
    1854:	b	1d18 <compare_records+0x5e0>
    1858:	ldr	r0, [fp, #-28]	; 0xffffffe4
    185c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1860:	sub	r2, fp, #48	; 0x30
    1864:	bl	0 <coda_type_get_record_field_index_from_name>
    1868:	cmp	r0, #0
    186c:	beq	18f0 <compare_records+0x1b8>
    1870:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1874:	cmp	r0, #0
    1878:	beq	18bc <compare_records+0x184>
    187c:	movw	r0, #0
    1880:	movt	r0, #0
    1884:	bl	0 <printf>
    1888:	ldr	r1, [fp, #-16]
    188c:	str	r0, [sp, #40]	; 0x28
    1890:	mov	r0, r1
    1894:	movw	r1, #0
    1898:	movt	r1, #0
    189c:	bl	0 <coda_cursor_print_path>
    18a0:	movw	r1, #0
    18a4:	movt	r1, #0
    18a8:	str	r0, [sp, #36]	; 0x24
    18ac:	mov	r0, r1
    18b0:	bl	0 <printf>
    18b4:	movw	r1, #0
    18b8:	str	r1, [fp, #-32]	; 0xffffffe0
    18bc:	movw	r0, #0
    18c0:	movt	r0, #0
    18c4:	ldr	r0, [r0]
    18c8:	cmp	r0, #0
    18cc:	beq	18ec <compare_records+0x1b4>
    18d0:	movw	r0, #0
    18d4:	movt	r0, #0
    18d8:	ldr	r1, [r0]
    18dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    18e0:	movw	r0, #0
    18e4:	movt	r0, #0
    18e8:	bl	0 <printf>
    18ec:	b	18f0 <compare_records+0x1b8>
    18f0:	b	18f4 <compare_records+0x1bc>
    18f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    18f8:	add	r0, r0, #1
    18fc:	str	r0, [fp, #-44]	; 0xffffffd4
    1900:	b	1818 <compare_records+0xe0>
    1904:	b	1908 <compare_records+0x1d0>
    1908:	ldr	r0, [fp, #-40]	; 0xffffffd8
    190c:	cmp	r0, #0
    1910:	ble	1a0c <compare_records+0x2d4>
    1914:	movw	r0, #0
    1918:	str	r0, [fp, #-48]	; 0xffffffd0
    191c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1920:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1924:	cmp	r0, r1
    1928:	bge	1a08 <compare_records+0x2d0>
    192c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1930:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1934:	sub	r2, fp, #56	; 0x38
    1938:	bl	0 <coda_type_get_record_field_name>
    193c:	cmp	r0, #0
    1940:	beq	195c <compare_records+0x224>
    1944:	ldr	r0, [fp, #-20]	; 0xffffffec
    1948:	movw	r1, #2
    194c:	bl	140c <print_error_with_cursor>
    1950:	mvn	r0, #0
    1954:	str	r0, [fp, #-12]
    1958:	b	1d18 <compare_records+0x5e0>
    195c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1960:	ldr	r1, [fp, #-56]	; 0xffffffc8
    1964:	sub	r2, fp, #44	; 0x2c
    1968:	bl	0 <coda_type_get_record_field_index_from_name>
    196c:	cmp	r0, #0
    1970:	beq	19f4 <compare_records+0x2bc>
    1974:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1978:	cmp	r0, #0
    197c:	beq	19c0 <compare_records+0x288>
    1980:	movw	r0, #0
    1984:	movt	r0, #0
    1988:	bl	0 <printf>
    198c:	ldr	r1, [fp, #-16]
    1990:	str	r0, [sp, #32]
    1994:	mov	r0, r1
    1998:	movw	r1, #0
    199c:	movt	r1, #0
    19a0:	bl	0 <coda_cursor_print_path>
    19a4:	movw	r1, #0
    19a8:	movt	r1, #0
    19ac:	str	r0, [sp, #28]
    19b0:	mov	r0, r1
    19b4:	bl	0 <printf>
    19b8:	movw	r1, #0
    19bc:	str	r1, [fp, #-32]	; 0xffffffe0
    19c0:	movw	r0, #0
    19c4:	movt	r0, #0
    19c8:	ldr	r0, [r0]
    19cc:	cmp	r0, #0
    19d0:	beq	19f0 <compare_records+0x2b8>
    19d4:	movw	r0, #0
    19d8:	movt	r0, #0
    19dc:	ldr	r1, [r0, #4]
    19e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    19e4:	movw	r0, #0
    19e8:	movt	r0, #0
    19ec:	bl	0 <printf>
    19f0:	b	19f4 <compare_records+0x2bc>
    19f4:	b	19f8 <compare_records+0x2c0>
    19f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    19fc:	add	r0, r0, #1
    1a00:	str	r0, [fp, #-48]	; 0xffffffd0
    1a04:	b	191c <compare_records+0x1e4>
    1a08:	b	1a0c <compare_records+0x2d4>
    1a0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1a10:	cmp	r0, #0
    1a14:	ble	1d10 <compare_records+0x5d8>
    1a18:	ldr	r0, [fp, #-16]
    1a1c:	add	r1, sp, #56	; 0x38
    1a20:	str	r0, [sp, #24]
    1a24:	mov	r0, r1
    1a28:	ldr	r1, [sp, #24]
    1a2c:	movw	r2, #520	; 0x208
    1a30:	bl	0 <memcpy>
    1a34:	ldr	r0, [fp, #-16]
    1a38:	bl	0 <coda_cursor_goto_first_record_field>
    1a3c:	cmp	r0, #0
    1a40:	beq	1a5c <compare_records+0x324>
    1a44:	ldr	r0, [fp, #-16]
    1a48:	movw	r1, #1
    1a4c:	bl	140c <print_error_with_cursor>
    1a50:	mvn	r0, #0
    1a54:	str	r0, [fp, #-12]
    1a58:	b	1d18 <compare_records+0x5e0>
    1a5c:	movw	r0, #0
    1a60:	str	r0, [fp, #-44]	; 0xffffffd4
    1a64:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1a68:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1a6c:	cmp	r0, r1
    1a70:	bge	1d08 <compare_records+0x5d0>
    1a74:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1a78:	add	r0, sp, #56	; 0x38
    1a7c:	add	r2, sp, #48	; 0x30
    1a80:	bl	0 <coda_cursor_get_record_field_available_status>
    1a84:	cmp	r0, #0
    1a88:	beq	1aa4 <compare_records+0x36c>
    1a8c:	add	r0, sp, #56	; 0x38
    1a90:	movw	r1, #1
    1a94:	bl	140c <print_error_with_cursor>
    1a98:	mvn	r0, #0
    1a9c:	str	r0, [fp, #-12]
    1aa0:	b	1d18 <compare_records+0x5e0>
    1aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1aa8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1aac:	add	r2, sp, #52	; 0x34
    1ab0:	bl	0 <coda_type_get_record_field_name>
    1ab4:	cmp	r0, #0
    1ab8:	beq	1ad4 <compare_records+0x39c>
    1abc:	ldr	r0, [fp, #-16]
    1ac0:	movw	r1, #1
    1ac4:	bl	140c <print_error_with_cursor>
    1ac8:	mvn	r0, #0
    1acc:	str	r0, [fp, #-12]
    1ad0:	b	1d18 <compare_records+0x5e0>
    1ad4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1ad8:	ldr	r1, [sp, #52]	; 0x34
    1adc:	sub	r2, fp, #48	; 0x30
    1ae0:	bl	0 <coda_type_get_record_field_index_from_name>
    1ae4:	cmp	r0, #0
    1ae8:	bne	1cb4 <compare_records+0x57c>
    1aec:	ldr	r0, [fp, #-20]	; 0xffffffec
    1af0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1af4:	add	r2, sp, #44	; 0x2c
    1af8:	bl	0 <coda_cursor_get_record_field_available_status>
    1afc:	cmp	r0, #0
    1b00:	beq	1b1c <compare_records+0x3e4>
    1b04:	ldr	r0, [fp, #-20]	; 0xffffffec
    1b08:	movw	r1, #2
    1b0c:	bl	140c <print_error_with_cursor>
    1b10:	mvn	r0, #0
    1b14:	str	r0, [fp, #-12]
    1b18:	b	1d18 <compare_records+0x5e0>
    1b1c:	ldr	r0, [sp, #48]	; 0x30
    1b20:	cmp	r0, #0
    1b24:	beq	1c18 <compare_records+0x4e0>
    1b28:	ldr	r0, [sp, #44]	; 0x2c
    1b2c:	cmp	r0, #0
    1b30:	beq	1b8c <compare_records+0x454>
    1b34:	ldr	r0, [fp, #-20]	; 0xffffffec
    1b38:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1b3c:	bl	0 <coda_cursor_goto_record_field_by_index>
    1b40:	cmp	r0, #0
    1b44:	beq	1b60 <compare_records+0x428>
    1b48:	ldr	r0, [fp, #-20]	; 0xffffffec
    1b4c:	movw	r1, #2
    1b50:	bl	140c <print_error_with_cursor>
    1b54:	mvn	r0, #0
    1b58:	str	r0, [fp, #-12]
    1b5c:	b	1d18 <compare_records+0x5e0>
    1b60:	ldr	r0, [fp, #-16]
    1b64:	ldr	r1, [fp, #-20]	; 0xffffffec
    1b68:	bl	1000 <compare_data>
    1b6c:	cmp	r0, #0
    1b70:	beq	1b80 <compare_records+0x448>
    1b74:	mvn	r0, #0
    1b78:	str	r0, [fp, #-12]
    1b7c:	b	1d18 <compare_records+0x5e0>
    1b80:	ldr	r0, [fp, #-20]	; 0xffffffec
    1b84:	bl	0 <coda_cursor_goto_parent>
    1b88:	b	1c14 <compare_records+0x4dc>
    1b8c:	movw	r0, #0
    1b90:	movt	r0, #0
    1b94:	bl	0 <printf>
    1b98:	ldr	r1, [fp, #-16]
    1b9c:	str	r0, [sp, #20]
    1ba0:	mov	r0, r1
    1ba4:	movw	r1, #0
    1ba8:	movt	r1, #0
    1bac:	bl	0 <coda_cursor_print_path>
    1bb0:	movw	r1, #0
    1bb4:	movt	r1, #0
    1bb8:	str	r0, [sp, #16]
    1bbc:	mov	r0, r1
    1bc0:	bl	0 <printf>
    1bc4:	movw	r1, #0
    1bc8:	movt	r1, #0
    1bcc:	ldr	r1, [r1]
    1bd0:	cmp	r1, #0
    1bd4:	beq	1c10 <compare_records+0x4d8>
    1bd8:	movw	r0, #0
    1bdc:	movt	r0, #0
    1be0:	ldr	r1, [r0]
    1be4:	movw	r0, #0
    1be8:	movt	r0, #0
    1bec:	bl	0 <printf>
    1bf0:	movw	r1, #0
    1bf4:	movt	r1, #0
    1bf8:	ldr	r1, [r1, #4]
    1bfc:	movw	r2, #0
    1c00:	movt	r2, #0
    1c04:	str	r0, [sp, #12]
    1c08:	mov	r0, r2
    1c0c:	bl	0 <printf>
    1c10:	b	1c14 <compare_records+0x4dc>
    1c14:	b	1cb0 <compare_records+0x578>
    1c18:	ldr	r0, [sp, #44]	; 0x2c
    1c1c:	cmp	r0, #0
    1c20:	beq	1cac <compare_records+0x574>
    1c24:	movw	r0, #0
    1c28:	movt	r0, #0
    1c2c:	bl	0 <printf>
    1c30:	ldr	r1, [fp, #-16]
    1c34:	str	r0, [sp, #8]
    1c38:	mov	r0, r1
    1c3c:	movw	r1, #0
    1c40:	movt	r1, #0
    1c44:	bl	0 <coda_cursor_print_path>
    1c48:	movw	r1, #0
    1c4c:	movt	r1, #0
    1c50:	str	r0, [sp, #4]
    1c54:	mov	r0, r1
    1c58:	bl	0 <printf>
    1c5c:	movw	r1, #0
    1c60:	movt	r1, #0
    1c64:	ldr	r1, [r1]
    1c68:	cmp	r1, #0
    1c6c:	beq	1ca8 <compare_records+0x570>
    1c70:	movw	r0, #0
    1c74:	movt	r0, #0
    1c78:	ldr	r1, [r0]
    1c7c:	movw	r0, #0
    1c80:	movt	r0, #0
    1c84:	bl	0 <printf>
    1c88:	movw	r1, #0
    1c8c:	movt	r1, #0
    1c90:	ldr	r1, [r1, #4]
    1c94:	movw	r2, #0
    1c98:	movt	r2, #0
    1c9c:	str	r0, [sp]
    1ca0:	mov	r0, r2
    1ca4:	bl	0 <printf>
    1ca8:	b	1cac <compare_records+0x574>
    1cac:	b	1cb0 <compare_records+0x578>
    1cb0:	b	1cb4 <compare_records+0x57c>
    1cb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1cb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1cbc:	sub	r1, r1, #1
    1cc0:	cmp	r0, r1
    1cc4:	bge	1cf4 <compare_records+0x5bc>
    1cc8:	ldr	r0, [fp, #-16]
    1ccc:	bl	0 <coda_cursor_goto_next_record_field>
    1cd0:	cmp	r0, #0
    1cd4:	beq	1cf0 <compare_records+0x5b8>
    1cd8:	ldr	r0, [fp, #-16]
    1cdc:	movw	r1, #1
    1ce0:	bl	140c <print_error_with_cursor>
    1ce4:	mvn	r0, #0
    1ce8:	str	r0, [fp, #-12]
    1cec:	b	1d18 <compare_records+0x5e0>
    1cf0:	b	1cf4 <compare_records+0x5bc>
    1cf4:	b	1cf8 <compare_records+0x5c0>
    1cf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1cfc:	add	r0, r0, #1
    1d00:	str	r0, [fp, #-44]	; 0xffffffd4
    1d04:	b	1a64 <compare_records+0x32c>
    1d08:	ldr	r0, [fp, #-16]
    1d0c:	bl	0 <coda_cursor_goto_parent>
    1d10:	movw	r0, #0
    1d14:	str	r0, [fp, #-12]
    1d18:	ldr	r0, [fp, #-12]
    1d1c:	sub	sp, fp, #8
    1d20:	pop	{r4, r5, fp, pc}

00001d24 <compare_numbers>:
    1d24:	push	{fp, lr}
    1d28:	mov	fp, sp
    1d2c:	sub	sp, sp, #208	; 0xd0
    1d30:	str	r0, [fp, #-8]
    1d34:	str	r1, [fp, #-12]
    1d38:	ldr	r0, [fp, #-8]
    1d3c:	sub	r1, fp, #16
    1d40:	bl	0 <coda_cursor_get_read_type>
    1d44:	cmp	r0, #0
    1d48:	beq	1d64 <compare_numbers+0x40>
    1d4c:	ldr	r0, [fp, #-8]
    1d50:	movw	r1, #1
    1d54:	bl	140c <print_error_with_cursor>
    1d58:	mvn	r0, #0
    1d5c:	str	r0, [fp, #-4]
    1d60:	b	23e8 <compare_numbers+0x6c4>
    1d64:	ldr	r0, [fp, #-12]
    1d68:	sub	r1, fp, #20
    1d6c:	bl	0 <coda_cursor_get_read_type>
    1d70:	cmp	r0, #0
    1d74:	beq	1d90 <compare_numbers+0x6c>
    1d78:	ldr	r0, [fp, #-12]
    1d7c:	movw	r1, #2
    1d80:	bl	140c <print_error_with_cursor>
    1d84:	mvn	r0, #0
    1d88:	str	r0, [fp, #-4]
    1d8c:	b	23e8 <compare_numbers+0x6c4>
    1d90:	ldr	r0, [fp, #-16]
    1d94:	ldr	r1, [fp, #-20]	; 0xffffffec
    1d98:	cmp	r0, r1
    1d9c:	beq	1e68 <compare_numbers+0x144>
    1da0:	movw	r0, #0
    1da4:	movt	r0, #0
    1da8:	bl	0 <printf>
    1dac:	ldr	r1, [fp, #-8]
    1db0:	str	r0, [sp, #84]	; 0x54
    1db4:	mov	r0, r1
    1db8:	movw	r1, #0
    1dbc:	movt	r1, #0
    1dc0:	bl	0 <coda_cursor_print_path>
    1dc4:	movw	r1, #0
    1dc8:	movt	r1, #0
    1dcc:	str	r0, [sp, #80]	; 0x50
    1dd0:	mov	r0, r1
    1dd4:	bl	0 <printf>
    1dd8:	movw	r1, #0
    1ddc:	movt	r1, #0
    1de0:	ldr	r1, [r1]
    1de4:	cmp	r1, #0
    1de8:	beq	1e5c <compare_numbers+0x138>
    1dec:	movw	r0, #0
    1df0:	movt	r0, #0
    1df4:	ldr	r1, [r0]
    1df8:	ldr	r0, [fp, #-16]
    1dfc:	str	r1, [sp, #76]	; 0x4c
    1e00:	bl	0 <coda_type_get_native_type_name>
    1e04:	movw	r1, #0
    1e08:	movt	r1, #0
    1e0c:	str	r0, [sp, #72]	; 0x48
    1e10:	mov	r0, r1
    1e14:	ldr	r1, [sp, #76]	; 0x4c
    1e18:	ldr	r2, [sp, #72]	; 0x48
    1e1c:	bl	0 <printf>
    1e20:	movw	r1, #0
    1e24:	movt	r1, #0
    1e28:	ldr	r1, [r1, #4]
    1e2c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1e30:	str	r0, [sp, #68]	; 0x44
    1e34:	mov	r0, r2
    1e38:	str	r1, [sp, #64]	; 0x40
    1e3c:	bl	0 <coda_type_get_native_type_name>
    1e40:	movw	r1, #0
    1e44:	movt	r1, #0
    1e48:	str	r0, [sp, #60]	; 0x3c
    1e4c:	mov	r0, r1
    1e50:	ldr	r1, [sp, #64]	; 0x40
    1e54:	ldr	r2, [sp, #60]	; 0x3c
    1e58:	bl	0 <printf>
    1e5c:	movw	r0, #0
    1e60:	str	r0, [fp, #-4]
    1e64:	b	23e8 <compare_numbers+0x6c4>
    1e68:	ldr	r0, [fp, #-16]
    1e6c:	cmp	r0, #0
    1e70:	str	r0, [sp, #56]	; 0x38
    1e74:	beq	1f00 <compare_numbers+0x1dc>
    1e78:	b	1e7c <compare_numbers+0x158>
    1e7c:	ldr	r0, [sp, #56]	; 0x38
    1e80:	cmp	r0, #1
    1e84:	beq	20a0 <compare_numbers+0x37c>
    1e88:	b	1e8c <compare_numbers+0x168>
    1e8c:	ldr	r0, [sp, #56]	; 0x38
    1e90:	cmp	r0, #2
    1e94:	beq	1f00 <compare_numbers+0x1dc>
    1e98:	b	1e9c <compare_numbers+0x178>
    1e9c:	ldr	r0, [sp, #56]	; 0x38
    1ea0:	cmp	r0, #3
    1ea4:	beq	20a0 <compare_numbers+0x37c>
    1ea8:	b	1eac <compare_numbers+0x188>
    1eac:	ldr	r0, [sp, #56]	; 0x38
    1eb0:	cmp	r0, #4
    1eb4:	beq	1f00 <compare_numbers+0x1dc>
    1eb8:	b	1ebc <compare_numbers+0x198>
    1ebc:	ldr	r0, [sp, #56]	; 0x38
    1ec0:	cmp	r0, #5
    1ec4:	beq	20a0 <compare_numbers+0x37c>
    1ec8:	b	1ecc <compare_numbers+0x1a8>
    1ecc:	ldr	r0, [sp, #56]	; 0x38
    1ed0:	cmp	r0, #6
    1ed4:	beq	1f00 <compare_numbers+0x1dc>
    1ed8:	b	1edc <compare_numbers+0x1b8>
    1edc:	ldr	r0, [sp, #56]	; 0x38
    1ee0:	cmp	r0, #7
    1ee4:	beq	20a0 <compare_numbers+0x37c>
    1ee8:	b	1eec <compare_numbers+0x1c8>
    1eec:	ldr	r0, [sp, #56]	; 0x38
    1ef0:	sub	r1, r0, #8
    1ef4:	cmp	r1, #2
    1ef8:	bcc	2240 <compare_numbers+0x51c>
    1efc:	b	23c0 <compare_numbers+0x69c>
    1f00:	ldr	r0, [fp, #-8]
    1f04:	sub	r1, fp, #32
    1f08:	bl	0 <coda_cursor_read_int64>
    1f0c:	cmp	r0, #0
    1f10:	beq	1f50 <compare_numbers+0x22c>
    1f14:	ldr	r0, [fp, #-8]
    1f18:	movw	r1, #1
    1f1c:	bl	140c <print_error_with_cursor>
    1f20:	bl	0 <coda_get_errno>
    1f24:	ldr	r0, [r0]
    1f28:	cmn	r0, #300	; 0x12c
    1f2c:	beq	1f4c <compare_numbers+0x228>
    1f30:	bl	0 <coda_get_errno>
    1f34:	ldr	r0, [r0]
    1f38:	cmn	r0, #103	; 0x67
    1f3c:	beq	1f4c <compare_numbers+0x228>
    1f40:	mvn	r0, #0
    1f44:	str	r0, [fp, #-4]
    1f48:	b	23e8 <compare_numbers+0x6c4>
    1f4c:	b	209c <compare_numbers+0x378>
    1f50:	ldr	r0, [fp, #-12]
    1f54:	sub	r1, fp, #40	; 0x28
    1f58:	bl	0 <coda_cursor_read_int64>
    1f5c:	cmp	r0, #0
    1f60:	beq	1fa0 <compare_numbers+0x27c>
    1f64:	ldr	r0, [fp, #-12]
    1f68:	movw	r1, #2
    1f6c:	bl	140c <print_error_with_cursor>
    1f70:	bl	0 <coda_get_errno>
    1f74:	ldr	r0, [r0]
    1f78:	cmn	r0, #300	; 0x12c
    1f7c:	beq	1f9c <compare_numbers+0x278>
    1f80:	bl	0 <coda_get_errno>
    1f84:	ldr	r0, [r0]
    1f88:	cmn	r0, #103	; 0x67
    1f8c:	beq	1f9c <compare_numbers+0x278>
    1f90:	mvn	r0, #0
    1f94:	str	r0, [fp, #-4]
    1f98:	b	23e8 <compare_numbers+0x6c4>
    1f9c:	b	2098 <compare_numbers+0x374>
    1fa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1fa4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1fa8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1fac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1fb0:	eor	r1, r1, r3
    1fb4:	eor	r0, r0, r2
    1fb8:	orr	r0, r0, r1
    1fbc:	cmp	r0, #0
    1fc0:	beq	2094 <compare_numbers+0x370>
    1fc4:	b	1fc8 <compare_numbers+0x2a4>
    1fc8:	movw	r0, #0
    1fcc:	movt	r0, #0
    1fd0:	bl	0 <printf>
    1fd4:	ldr	r1, [fp, #-8]
    1fd8:	str	r0, [sp, #52]	; 0x34
    1fdc:	mov	r0, r1
    1fe0:	movw	r1, #0
    1fe4:	movt	r1, #0
    1fe8:	bl	0 <coda_cursor_print_path>
    1fec:	movw	r1, #0
    1ff0:	movt	r1, #0
    1ff4:	str	r0, [sp, #48]	; 0x30
    1ff8:	mov	r0, r1
    1ffc:	bl	0 <printf>
    2000:	movw	r1, #0
    2004:	movt	r1, #0
    2008:	ldr	r1, [r1]
    200c:	cmp	r1, #0
    2010:	beq	2088 <compare_numbers+0x364>
    2014:	sub	r2, fp, #61	; 0x3d
    2018:	ldr	r0, [fp, #-32]	; 0xffffffe0
    201c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2020:	sub	r3, fp, #61	; 0x3d
    2024:	str	r2, [sp, #44]	; 0x2c
    2028:	mov	r2, r3
    202c:	str	r3, [sp, #40]	; 0x28
    2030:	bl	0 <coda_str64>
    2034:	movw	r0, #0
    2038:	movt	r0, #0
    203c:	ldr	r1, [r0]
    2040:	movw	r0, #0
    2044:	movt	r0, #0
    2048:	ldr	r2, [sp, #40]	; 0x28
    204c:	bl	0 <printf>
    2050:	ldr	r1, [fp, #-40]	; 0xffffffd8
    2054:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2058:	str	r0, [sp, #36]	; 0x24
    205c:	mov	r0, r1
    2060:	mov	r1, r2
    2064:	ldr	r2, [sp, #44]	; 0x2c
    2068:	bl	0 <coda_str64>
    206c:	sub	r2, fp, #61	; 0x3d
    2070:	movw	r0, #0
    2074:	movt	r0, #0
    2078:	ldr	r1, [r0, #4]
    207c:	movw	r0, #0
    2080:	movt	r0, #0
    2084:	bl	0 <printf>
    2088:	movw	r0, #0
    208c:	str	r0, [fp, #-4]
    2090:	b	23e8 <compare_numbers+0x6c4>
    2094:	b	2098 <compare_numbers+0x374>
    2098:	b	209c <compare_numbers+0x378>
    209c:	b	23e0 <compare_numbers+0x6bc>
    20a0:	ldr	r0, [fp, #-8]
    20a4:	sub	r1, fp, #72	; 0x48
    20a8:	bl	0 <coda_cursor_read_uint64>
    20ac:	cmp	r0, #0
    20b0:	beq	20f0 <compare_numbers+0x3cc>
    20b4:	ldr	r0, [fp, #-8]
    20b8:	movw	r1, #1
    20bc:	bl	140c <print_error_with_cursor>
    20c0:	bl	0 <coda_get_errno>
    20c4:	ldr	r0, [r0]
    20c8:	cmn	r0, #300	; 0x12c
    20cc:	beq	20ec <compare_numbers+0x3c8>
    20d0:	bl	0 <coda_get_errno>
    20d4:	ldr	r0, [r0]
    20d8:	cmn	r0, #103	; 0x67
    20dc:	beq	20ec <compare_numbers+0x3c8>
    20e0:	mvn	r0, #0
    20e4:	str	r0, [fp, #-4]
    20e8:	b	23e8 <compare_numbers+0x6c4>
    20ec:	b	223c <compare_numbers+0x518>
    20f0:	ldr	r0, [fp, #-12]
    20f4:	sub	r1, fp, #80	; 0x50
    20f8:	bl	0 <coda_cursor_read_uint64>
    20fc:	cmp	r0, #0
    2100:	beq	2140 <compare_numbers+0x41c>
    2104:	ldr	r0, [fp, #-12]
    2108:	movw	r1, #2
    210c:	bl	140c <print_error_with_cursor>
    2110:	bl	0 <coda_get_errno>
    2114:	ldr	r0, [r0]
    2118:	cmn	r0, #300	; 0x12c
    211c:	beq	213c <compare_numbers+0x418>
    2120:	bl	0 <coda_get_errno>
    2124:	ldr	r0, [r0]
    2128:	cmn	r0, #103	; 0x67
    212c:	beq	213c <compare_numbers+0x418>
    2130:	mvn	r0, #0
    2134:	str	r0, [fp, #-4]
    2138:	b	23e8 <compare_numbers+0x6c4>
    213c:	b	2238 <compare_numbers+0x514>
    2140:	ldr	r0, [fp, #-72]	; 0xffffffb8
    2144:	ldr	r1, [fp, #-68]	; 0xffffffbc
    2148:	ldr	r2, [fp, #-80]	; 0xffffffb0
    214c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    2150:	eor	r1, r1, r3
    2154:	eor	r0, r0, r2
    2158:	orr	r0, r0, r1
    215c:	cmp	r0, #0
    2160:	beq	2234 <compare_numbers+0x510>
    2164:	b	2168 <compare_numbers+0x444>
    2168:	movw	r0, #0
    216c:	movt	r0, #0
    2170:	bl	0 <printf>
    2174:	ldr	r1, [fp, #-8]
    2178:	str	r0, [sp, #32]
    217c:	mov	r0, r1
    2180:	movw	r1, #0
    2184:	movt	r1, #0
    2188:	bl	0 <coda_cursor_print_path>
    218c:	movw	r1, #0
    2190:	movt	r1, #0
    2194:	str	r0, [sp, #28]
    2198:	mov	r0, r1
    219c:	bl	0 <printf>
    21a0:	movw	r1, #0
    21a4:	movt	r1, #0
    21a8:	ldr	r1, [r1]
    21ac:	cmp	r1, #0
    21b0:	beq	2228 <compare_numbers+0x504>
    21b4:	sub	r2, fp, #101	; 0x65
    21b8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    21bc:	ldr	r1, [fp, #-68]	; 0xffffffbc
    21c0:	sub	r3, fp, #101	; 0x65
    21c4:	str	r2, [sp, #24]
    21c8:	mov	r2, r3
    21cc:	str	r3, [sp, #20]
    21d0:	bl	0 <coda_str64u>
    21d4:	movw	r0, #0
    21d8:	movt	r0, #0
    21dc:	ldr	r1, [r0]
    21e0:	movw	r0, #0
    21e4:	movt	r0, #0
    21e8:	ldr	r2, [sp, #20]
    21ec:	bl	0 <printf>
    21f0:	ldr	r1, [fp, #-80]	; 0xffffffb0
    21f4:	ldr	r2, [fp, #-76]	; 0xffffffb4
    21f8:	str	r0, [sp, #16]
    21fc:	mov	r0, r1
    2200:	mov	r1, r2
    2204:	ldr	r2, [sp, #24]
    2208:	bl	0 <coda_str64u>
    220c:	sub	r2, fp, #101	; 0x65
    2210:	movw	r0, #0
    2214:	movt	r0, #0
    2218:	ldr	r1, [r0, #4]
    221c:	movw	r0, #0
    2220:	movt	r0, #0
    2224:	bl	0 <printf>
    2228:	movw	r0, #0
    222c:	str	r0, [fp, #-4]
    2230:	b	23e8 <compare_numbers+0x6c4>
    2234:	b	2238 <compare_numbers+0x514>
    2238:	b	223c <compare_numbers+0x518>
    223c:	b	23e0 <compare_numbers+0x6bc>
    2240:	ldr	r0, [fp, #-8]
    2244:	add	r1, sp, #96	; 0x60
    2248:	bl	0 <coda_cursor_read_double>
    224c:	cmp	r0, #0
    2250:	beq	2290 <compare_numbers+0x56c>
    2254:	ldr	r0, [fp, #-8]
    2258:	movw	r1, #1
    225c:	bl	140c <print_error_with_cursor>
    2260:	bl	0 <coda_get_errno>
    2264:	ldr	r0, [r0]
    2268:	cmn	r0, #300	; 0x12c
    226c:	beq	228c <compare_numbers+0x568>
    2270:	bl	0 <coda_get_errno>
    2274:	ldr	r0, [r0]
    2278:	cmn	r0, #103	; 0x67
    227c:	beq	228c <compare_numbers+0x568>
    2280:	mvn	r0, #0
    2284:	str	r0, [fp, #-4]
    2288:	b	23e8 <compare_numbers+0x6c4>
    228c:	b	23bc <compare_numbers+0x698>
    2290:	ldr	r0, [fp, #-12]
    2294:	add	r1, sp, #88	; 0x58
    2298:	bl	0 <coda_cursor_read_double>
    229c:	cmp	r0, #0
    22a0:	beq	22e0 <compare_numbers+0x5bc>
    22a4:	ldr	r0, [fp, #-12]
    22a8:	movw	r1, #2
    22ac:	bl	140c <print_error_with_cursor>
    22b0:	bl	0 <coda_get_errno>
    22b4:	ldr	r0, [r0]
    22b8:	cmn	r0, #300	; 0x12c
    22bc:	beq	22dc <compare_numbers+0x5b8>
    22c0:	bl	0 <coda_get_errno>
    22c4:	ldr	r0, [r0]
    22c8:	cmn	r0, #103	; 0x67
    22cc:	beq	22dc <compare_numbers+0x5b8>
    22d0:	mvn	r0, #0
    22d4:	str	r0, [fp, #-4]
    22d8:	b	23e8 <compare_numbers+0x6c4>
    22dc:	b	23b8 <compare_numbers+0x694>
    22e0:	vldr	d16, [sp, #96]	; 0x60
    22e4:	vldr	d17, [sp, #88]	; 0x58
    22e8:	vcmp.f64	d16, d17
    22ec:	vmrs	APSR_nzcv, fpscr
    22f0:	beq	23b4 <compare_numbers+0x690>
    22f4:	vldr	d0, [sp, #96]	; 0x60
    22f8:	bl	0 <coda_isNaN>
    22fc:	cmp	r0, #0
    2300:	beq	2314 <compare_numbers+0x5f0>
    2304:	vldr	d0, [sp, #88]	; 0x58
    2308:	bl	0 <coda_isNaN>
    230c:	cmp	r0, #0
    2310:	bne	23b4 <compare_numbers+0x690>
    2314:	movw	r0, #0
    2318:	movt	r0, #0
    231c:	bl	0 <printf>
    2320:	ldr	r1, [fp, #-8]
    2324:	str	r0, [sp, #12]
    2328:	mov	r0, r1
    232c:	movw	r1, #0
    2330:	movt	r1, #0
    2334:	bl	0 <coda_cursor_print_path>
    2338:	movw	r1, #0
    233c:	movt	r1, #0
    2340:	str	r0, [sp, #8]
    2344:	mov	r0, r1
    2348:	bl	0 <printf>
    234c:	movw	r1, #0
    2350:	movt	r1, #0
    2354:	ldr	r1, [r1]
    2358:	cmp	r1, #0
    235c:	beq	23a8 <compare_numbers+0x684>
    2360:	movw	r0, #0
    2364:	movt	r0, #0
    2368:	ldr	r1, [r0]
    236c:	vldr	d16, [sp, #96]	; 0x60
    2370:	movw	r0, #0
    2374:	movt	r0, #0
    2378:	vmov	r2, r3, d16
    237c:	bl	0 <printf>
    2380:	movw	r1, #0
    2384:	movt	r1, #0
    2388:	ldr	r1, [r1, #4]
    238c:	vldr	d16, [sp, #88]	; 0x58
    2390:	movw	r2, #0
    2394:	movt	r2, #0
    2398:	str	r0, [sp, #4]
    239c:	mov	r0, r2
    23a0:	vmov	r2, r3, d16
    23a4:	bl	0 <printf>
    23a8:	movw	r0, #0
    23ac:	str	r0, [fp, #-4]
    23b0:	b	23e8 <compare_numbers+0x6c4>
    23b4:	b	23b8 <compare_numbers+0x694>
    23b8:	b	23bc <compare_numbers+0x698>
    23bc:	b	23e0 <compare_numbers+0x6bc>
    23c0:	movw	r0, #0
    23c4:	movt	r0, #0
    23c8:	movw	r1, #0
    23cc:	movt	r1, #0
    23d0:	movw	r2, #950	; 0x3b6
    23d4:	movw	r3, #0
    23d8:	movt	r3, #0
    23dc:	bl	0 <__assert_fail>
    23e0:	movw	r0, #0
    23e4:	str	r0, [fp, #-4]
    23e8:	ldr	r0, [fp, #-4]
    23ec:	mov	sp, fp
    23f0:	pop	{fp, pc}

000023f4 <compare_strings>:
    23f4:	push	{fp, lr}
    23f8:	mov	fp, sp
    23fc:	sub	sp, sp, #48	; 0x30
    2400:	str	r0, [fp, #-8]
    2404:	str	r1, [fp, #-12]
    2408:	ldr	r0, [fp, #-8]
    240c:	add	r1, sp, #24
    2410:	bl	0 <coda_cursor_get_string_length>
    2414:	cmp	r0, #0
    2418:	beq	2434 <compare_strings+0x40>
    241c:	ldr	r0, [fp, #-8]
    2420:	movw	r1, #1
    2424:	bl	140c <print_error_with_cursor>
    2428:	mvn	r0, #0
    242c:	str	r0, [fp, #-4]
    2430:	b	26c8 <compare_strings+0x2d4>
    2434:	ldr	r0, [fp, #-12]
    2438:	add	r1, sp, #20
    243c:	bl	0 <coda_cursor_get_string_length>
    2440:	cmp	r0, #0
    2444:	beq	2460 <compare_strings+0x6c>
    2448:	ldr	r0, [fp, #-12]
    244c:	movw	r1, #2
    2450:	bl	140c <print_error_with_cursor>
    2454:	mvn	r0, #0
    2458:	str	r0, [fp, #-4]
    245c:	b	26c8 <compare_strings+0x2d4>
    2460:	ldr	r0, [sp, #24]
    2464:	add	r0, r0, #1
    2468:	bl	0 <malloc>
    246c:	str	r0, [fp, #-16]
    2470:	ldr	r0, [fp, #-16]
    2474:	movw	r1, #0
    2478:	cmp	r0, r1
    247c:	bne	24bc <compare_strings+0xc8>
    2480:	ldr	r2, [sp, #24]
    2484:	mvn	r0, #0
    2488:	movw	r1, #0
    248c:	movt	r1, #0
    2490:	movw	r3, #0
    2494:	movt	r3, #0
    2498:	movw	ip, #978	; 0x3d2
    249c:	str	ip, [sp]
    24a0:	bl	0 <coda_set_error>
    24a4:	ldr	r0, [fp, #-8]
    24a8:	movw	r1, #1
    24ac:	bl	140c <print_error_with_cursor>
    24b0:	mvn	r0, #0
    24b4:	str	r0, [fp, #-4]
    24b8:	b	26c8 <compare_strings+0x2d4>
    24bc:	ldr	r0, [sp, #20]
    24c0:	add	r0, r0, #1
    24c4:	bl	0 <malloc>
    24c8:	str	r0, [fp, #-20]	; 0xffffffec
    24cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    24d0:	movw	r1, #0
    24d4:	cmp	r0, r1
    24d8:	bne	2520 <compare_strings+0x12c>
    24dc:	ldr	r2, [sp, #20]
    24e0:	mvn	r0, #0
    24e4:	movw	r1, #0
    24e8:	movt	r1, #0
    24ec:	movw	r3, #0
    24f0:	movt	r3, #0
    24f4:	movw	ip, #986	; 0x3da
    24f8:	str	ip, [sp]
    24fc:	bl	0 <coda_set_error>
    2500:	ldr	r0, [fp, #-12]
    2504:	movw	r1, #2
    2508:	bl	140c <print_error_with_cursor>
    250c:	ldr	r0, [fp, #-16]
    2510:	bl	0 <free>
    2514:	mvn	r0, #0
    2518:	str	r0, [fp, #-4]
    251c:	b	26c8 <compare_strings+0x2d4>
    2520:	ldr	r0, [fp, #-8]
    2524:	ldr	r1, [fp, #-16]
    2528:	ldr	r2, [sp, #24]
    252c:	add	r2, r2, #1
    2530:	bl	0 <coda_cursor_read_string>
    2534:	cmp	r0, #0
    2538:	beq	2588 <compare_strings+0x194>
    253c:	ldr	r0, [fp, #-8]
    2540:	movw	r1, #1
    2544:	bl	140c <print_error_with_cursor>
    2548:	bl	0 <coda_get_errno>
    254c:	ldr	r0, [r0]
    2550:	cmn	r0, #300	; 0x12c
    2554:	beq	2584 <compare_strings+0x190>
    2558:	bl	0 <coda_get_errno>
    255c:	ldr	r0, [r0]
    2560:	cmn	r0, #103	; 0x67
    2564:	beq	2584 <compare_strings+0x190>
    2568:	ldr	r0, [fp, #-16]
    256c:	bl	0 <free>
    2570:	ldr	r0, [fp, #-20]	; 0xffffffec
    2574:	bl	0 <free>
    2578:	mvn	r0, #0
    257c:	str	r0, [fp, #-4]
    2580:	b	26c8 <compare_strings+0x2d4>
    2584:	b	26b0 <compare_strings+0x2bc>
    2588:	ldr	r0, [fp, #-12]
    258c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2590:	ldr	r2, [sp, #20]
    2594:	add	r2, r2, #1
    2598:	bl	0 <coda_cursor_read_string>
    259c:	cmp	r0, #0
    25a0:	beq	25f0 <compare_strings+0x1fc>
    25a4:	ldr	r0, [fp, #-12]
    25a8:	movw	r1, #2
    25ac:	bl	140c <print_error_with_cursor>
    25b0:	bl	0 <coda_get_errno>
    25b4:	ldr	r0, [r0]
    25b8:	cmn	r0, #300	; 0x12c
    25bc:	beq	25ec <compare_strings+0x1f8>
    25c0:	bl	0 <coda_get_errno>
    25c4:	ldr	r0, [r0]
    25c8:	cmn	r0, #103	; 0x67
    25cc:	beq	25ec <compare_strings+0x1f8>
    25d0:	ldr	r0, [fp, #-16]
    25d4:	bl	0 <free>
    25d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    25dc:	bl	0 <free>
    25e0:	mvn	r0, #0
    25e4:	str	r0, [fp, #-4]
    25e8:	b	26c8 <compare_strings+0x2d4>
    25ec:	b	26ac <compare_strings+0x2b8>
    25f0:	ldr	r0, [sp, #24]
    25f4:	ldr	r1, [sp, #20]
    25f8:	cmp	r0, r1
    25fc:	bne	2618 <compare_strings+0x224>
    2600:	ldr	r0, [fp, #-16]
    2604:	ldr	r1, [fp, #-20]	; 0xffffffec
    2608:	ldr	r2, [sp, #24]
    260c:	bl	0 <memcmp>
    2610:	cmp	r0, #0
    2614:	beq	26a8 <compare_strings+0x2b4>
    2618:	movw	r0, #0
    261c:	movt	r0, #0
    2620:	bl	0 <printf>
    2624:	ldr	r1, [fp, #-8]
    2628:	str	r0, [sp, #16]
    262c:	mov	r0, r1
    2630:	movw	r1, #0
    2634:	movt	r1, #0
    2638:	bl	0 <coda_cursor_print_path>
    263c:	movw	r1, #0
    2640:	movt	r1, #0
    2644:	str	r0, [sp, #12]
    2648:	mov	r0, r1
    264c:	bl	0 <printf>
    2650:	movw	r1, #0
    2654:	movt	r1, #0
    2658:	ldr	r1, [r1]
    265c:	cmp	r1, #0
    2660:	beq	26a4 <compare_strings+0x2b0>
    2664:	movw	r0, #0
    2668:	movt	r0, #0
    266c:	ldr	r1, [r0]
    2670:	ldr	r2, [fp, #-16]
    2674:	movw	r0, #0
    2678:	movt	r0, #0
    267c:	bl	0 <printf>
    2680:	movw	r1, #0
    2684:	movt	r1, #0
    2688:	ldr	r1, [r1, #4]
    268c:	ldr	r2, [fp, #-20]	; 0xffffffec
    2690:	movw	r3, #0
    2694:	movt	r3, #0
    2698:	str	r0, [sp, #8]
    269c:	mov	r0, r3
    26a0:	bl	0 <printf>
    26a4:	b	26a8 <compare_strings+0x2b4>
    26a8:	b	26ac <compare_strings+0x2b8>
    26ac:	b	26b0 <compare_strings+0x2bc>
    26b0:	ldr	r0, [fp, #-16]
    26b4:	bl	0 <free>
    26b8:	ldr	r0, [fp, #-20]	; 0xffffffec
    26bc:	bl	0 <free>
    26c0:	movw	r0, #0
    26c4:	str	r0, [fp, #-4]
    26c8:	ldr	r0, [fp, #-4]
    26cc:	mov	sp, fp
    26d0:	pop	{fp, pc}

000026d4 <compare_bytes>:
    26d4:	push	{fp, lr}
    26d8:	mov	fp, sp
    26dc:	sub	sp, sp, #144	; 0x90
    26e0:	str	r0, [fp, #-8]
    26e4:	str	r1, [fp, #-12]
    26e8:	ldr	r0, [fp, #-8]
    26ec:	sub	r1, fp, #40	; 0x28
    26f0:	bl	0 <coda_cursor_get_bit_size>
    26f4:	cmp	r0, #0
    26f8:	beq	2714 <compare_bytes+0x40>
    26fc:	ldr	r0, [fp, #-8]
    2700:	movw	r1, #1
    2704:	bl	140c <print_error_with_cursor>
    2708:	mvn	r0, #0
    270c:	str	r0, [fp, #-4]
    2710:	b	2b98 <compare_bytes+0x4c4>
    2714:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2718:	ldr	r1, [fp, #-36]	; 0xffffffdc
    271c:	lsr	r2, r0, #3
    2720:	orr	r2, r2, r1, lsl #29
    2724:	asr	r1, r1, #3
    2728:	and	r0, r0, #7
    272c:	adds	r3, r2, #1
    2730:	adc	ip, r1, #0
    2734:	cmp	r0, #0
    2738:	movne	r2, r3
    273c:	cmp	r0, #0
    2740:	movne	r1, ip
    2744:	str	r2, [fp, #-24]	; 0xffffffe8
    2748:	str	r1, [fp, #-20]	; 0xffffffec
    274c:	ldr	r0, [fp, #-12]
    2750:	sub	r1, fp, #48	; 0x30
    2754:	bl	0 <coda_cursor_get_bit_size>
    2758:	cmp	r0, #0
    275c:	beq	2778 <compare_bytes+0xa4>
    2760:	ldr	r0, [fp, #-12]
    2764:	movw	r1, #2
    2768:	bl	140c <print_error_with_cursor>
    276c:	mvn	r0, #0
    2770:	str	r0, [fp, #-4]
    2774:	b	2b98 <compare_bytes+0x4c4>
    2778:	ldr	r0, [fp, #-48]	; 0xffffffd0
    277c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2780:	lsr	r2, r0, #3
    2784:	orr	r2, r2, r1, lsl #29
    2788:	asr	r1, r1, #3
    278c:	and	r0, r0, #7
    2790:	adds	r3, r2, #1
    2794:	adc	ip, r1, #0
    2798:	cmp	r0, #0
    279c:	movne	r2, r3
    27a0:	cmp	r0, #0
    27a4:	movne	r1, ip
    27a8:	str	r2, [fp, #-32]	; 0xffffffe0
    27ac:	str	r1, [fp, #-28]	; 0xffffffe4
    27b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    27b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    27b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    27bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    27c0:	eor	r1, r1, r3
    27c4:	eor	r0, r0, r2
    27c8:	orr	r0, r0, r1
    27cc:	cmp	r0, #0
    27d0:	beq	28a4 <compare_bytes+0x1d0>
    27d4:	b	27d8 <compare_bytes+0x104>
    27d8:	movw	r0, #0
    27dc:	movt	r0, #0
    27e0:	bl	0 <printf>
    27e4:	ldr	r1, [fp, #-8]
    27e8:	str	r0, [sp, #60]	; 0x3c
    27ec:	mov	r0, r1
    27f0:	movw	r1, #0
    27f4:	movt	r1, #0
    27f8:	bl	0 <coda_cursor_print_path>
    27fc:	movw	r1, #0
    2800:	movt	r1, #0
    2804:	str	r0, [sp, #56]	; 0x38
    2808:	mov	r0, r1
    280c:	bl	0 <printf>
    2810:	movw	r1, #0
    2814:	movt	r1, #0
    2818:	ldr	r1, [r1]
    281c:	cmp	r1, #0
    2820:	beq	2898 <compare_bytes+0x1c4>
    2824:	sub	r2, fp, #69	; 0x45
    2828:	ldr	r0, [fp, #-40]	; 0xffffffd8
    282c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2830:	sub	r3, fp, #69	; 0x45
    2834:	str	r2, [sp, #52]	; 0x34
    2838:	mov	r2, r3
    283c:	str	r3, [sp, #48]	; 0x30
    2840:	bl	0 <coda_str64>
    2844:	movw	r0, #0
    2848:	movt	r0, #0
    284c:	ldr	r1, [r0]
    2850:	movw	r0, #0
    2854:	movt	r0, #0
    2858:	ldr	r2, [sp, #48]	; 0x30
    285c:	bl	0 <printf>
    2860:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2864:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2868:	str	r0, [sp, #44]	; 0x2c
    286c:	mov	r0, r1
    2870:	mov	r1, r2
    2874:	ldr	r2, [sp, #52]	; 0x34
    2878:	bl	0 <coda_str64>
    287c:	sub	r2, fp, #69	; 0x45
    2880:	movw	r0, #0
    2884:	movt	r0, #0
    2888:	ldr	r1, [r0, #4]
    288c:	movw	r0, #0
    2890:	movt	r0, #0
    2894:	bl	0 <printf>
    2898:	movw	r0, #0
    289c:	str	r0, [fp, #-4]
    28a0:	b	2b98 <compare_bytes+0x4c4>
    28a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    28a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    28ac:	subs	r0, r0, #1
    28b0:	sbcs	r1, r1, #0
    28b4:	blt	2b90 <compare_bytes+0x4bc>
    28b8:	b	28bc <compare_bytes+0x1e8>
    28bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    28c0:	bl	0 <malloc>
    28c4:	str	r0, [sp, #68]	; 0x44
    28c8:	ldr	r0, [sp, #68]	; 0x44
    28cc:	movw	r1, #0
    28d0:	cmp	r0, r1
    28d4:	bne	2914 <compare_bytes+0x240>
    28d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    28dc:	mvn	r0, #0
    28e0:	movw	r1, #0
    28e4:	movt	r1, #0
    28e8:	movw	r3, #0
    28ec:	movt	r3, #0
    28f0:	movw	ip, #1072	; 0x430
    28f4:	str	ip, [sp]
    28f8:	bl	0 <coda_set_error>
    28fc:	ldr	r0, [fp, #-8]
    2900:	movw	r1, #1
    2904:	bl	140c <print_error_with_cursor>
    2908:	mvn	r0, #0
    290c:	str	r0, [fp, #-4]
    2910:	b	2b98 <compare_bytes+0x4c4>
    2914:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2918:	bl	0 <malloc>
    291c:	str	r0, [sp, #64]	; 0x40
    2920:	ldr	r0, [sp, #64]	; 0x40
    2924:	movw	r1, #0
    2928:	cmp	r0, r1
    292c:	bne	2974 <compare_bytes+0x2a0>
    2930:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2934:	mvn	r0, #0
    2938:	movw	r1, #0
    293c:	movt	r1, #0
    2940:	movw	r3, #0
    2944:	movt	r3, #0
    2948:	movw	ip, #1080	; 0x438
    294c:	str	ip, [sp]
    2950:	bl	0 <coda_set_error>
    2954:	ldr	r0, [fp, #-12]
    2958:	movw	r1, #2
    295c:	bl	140c <print_error_with_cursor>
    2960:	ldr	r0, [sp, #68]	; 0x44
    2964:	bl	0 <free>
    2968:	mvn	r0, #0
    296c:	str	r0, [fp, #-4]
    2970:	b	2b98 <compare_bytes+0x4c4>
    2974:	ldr	r0, [fp, #-8]
    2978:	ldr	r1, [sp, #68]	; 0x44
    297c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2980:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2984:	mov	ip, sp
    2988:	str	r3, [ip, #4]
    298c:	str	r2, [ip]
    2990:	mov	r2, #0
    2994:	str	r2, [sp, #40]	; 0x28
    2998:	ldr	r3, [sp, #40]	; 0x28
    299c:	bl	0 <coda_cursor_read_bits>
    29a0:	cmp	r0, #0
    29a4:	beq	29f4 <compare_bytes+0x320>
    29a8:	ldr	r0, [fp, #-8]
    29ac:	movw	r1, #1
    29b0:	bl	140c <print_error_with_cursor>
    29b4:	bl	0 <coda_get_errno>
    29b8:	ldr	r0, [r0]
    29bc:	cmn	r0, #300	; 0x12c
    29c0:	beq	29f0 <compare_bytes+0x31c>
    29c4:	bl	0 <coda_get_errno>
    29c8:	ldr	r0, [r0]
    29cc:	cmn	r0, #103	; 0x67
    29d0:	beq	29f0 <compare_bytes+0x31c>
    29d4:	ldr	r0, [sp, #68]	; 0x44
    29d8:	bl	0 <free>
    29dc:	ldr	r0, [sp, #64]	; 0x40
    29e0:	bl	0 <free>
    29e4:	mvn	r0, #0
    29e8:	str	r0, [fp, #-4]
    29ec:	b	2b98 <compare_bytes+0x4c4>
    29f0:	b	2b80 <compare_bytes+0x4ac>
    29f4:	ldr	r0, [fp, #-12]
    29f8:	ldr	r1, [sp, #64]	; 0x40
    29fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    2a00:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2a04:	mov	ip, sp
    2a08:	str	r3, [ip, #4]
    2a0c:	str	r2, [ip]
    2a10:	mov	r2, #0
    2a14:	str	r2, [sp, #36]	; 0x24
    2a18:	ldr	r3, [sp, #36]	; 0x24
    2a1c:	bl	0 <coda_cursor_read_bits>
    2a20:	cmp	r0, #0
    2a24:	beq	2a74 <compare_bytes+0x3a0>
    2a28:	ldr	r0, [fp, #-12]
    2a2c:	movw	r1, #2
    2a30:	bl	140c <print_error_with_cursor>
    2a34:	bl	0 <coda_get_errno>
    2a38:	ldr	r0, [r0]
    2a3c:	cmn	r0, #300	; 0x12c
    2a40:	beq	2a70 <compare_bytes+0x39c>
    2a44:	bl	0 <coda_get_errno>
    2a48:	ldr	r0, [r0]
    2a4c:	cmn	r0, #103	; 0x67
    2a50:	beq	2a70 <compare_bytes+0x39c>
    2a54:	ldr	r0, [sp, #68]	; 0x44
    2a58:	bl	0 <free>
    2a5c:	ldr	r0, [sp, #64]	; 0x40
    2a60:	bl	0 <free>
    2a64:	mvn	r0, #0
    2a68:	str	r0, [fp, #-4]
    2a6c:	b	2b98 <compare_bytes+0x4c4>
    2a70:	b	2b7c <compare_bytes+0x4a8>
    2a74:	ldr	r0, [sp, #68]	; 0x44
    2a78:	ldr	r1, [sp, #64]	; 0x40
    2a7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2a80:	bl	0 <memcmp>
    2a84:	cmp	r0, #0
    2a88:	beq	2b78 <compare_bytes+0x4a4>
    2a8c:	movw	r0, #0
    2a90:	movt	r0, #0
    2a94:	bl	0 <printf>
    2a98:	ldr	r1, [fp, #-8]
    2a9c:	str	r0, [sp, #32]
    2aa0:	mov	r0, r1
    2aa4:	movw	r1, #0
    2aa8:	movt	r1, #0
    2aac:	bl	0 <coda_cursor_print_path>
    2ab0:	movw	r1, #0
    2ab4:	movt	r1, #0
    2ab8:	str	r0, [sp, #28]
    2abc:	mov	r0, r1
    2ac0:	bl	0 <printf>
    2ac4:	movw	r1, #0
    2ac8:	movt	r1, #0
    2acc:	ldr	r1, [r1]
    2ad0:	cmp	r1, #0
    2ad4:	beq	2b74 <compare_bytes+0x4a0>
    2ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2adc:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ae0:	rsbs	r0, r0, #256	; 0x100
    2ae4:	rscs	r1, r1, #0
    2ae8:	blt	2b74 <compare_bytes+0x4a0>
    2aec:	b	2af0 <compare_bytes+0x41c>
    2af0:	movw	r0, #0
    2af4:	movt	r0, #0
    2af8:	ldr	r1, [r0]
    2afc:	movw	r2, #0
    2b00:	movt	r2, #0
    2b04:	str	r0, [sp, #24]
    2b08:	mov	r0, r2
    2b0c:	str	r2, [sp, #20]
    2b10:	bl	0 <printf>
    2b14:	ldr	r1, [sp, #68]	; 0x44
    2b18:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2b1c:	str	r0, [sp, #16]
    2b20:	mov	r0, r1
    2b24:	mov	r1, r2
    2b28:	bl	3858 <print_escaped>
    2b2c:	movw	r0, #0
    2b30:	movt	r0, #0
    2b34:	bl	0 <printf>
    2b38:	ldr	r1, [sp, #24]
    2b3c:	ldr	r1, [r1, #4]
    2b40:	ldr	r2, [sp, #20]
    2b44:	str	r0, [sp, #12]
    2b48:	mov	r0, r2
    2b4c:	bl	0 <printf>
    2b50:	ldr	r1, [sp, #64]	; 0x40
    2b54:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2b58:	str	r0, [sp, #8]
    2b5c:	mov	r0, r1
    2b60:	mov	r1, r2
    2b64:	bl	3858 <print_escaped>
    2b68:	movw	r0, #0
    2b6c:	movt	r0, #0
    2b70:	bl	0 <printf>
    2b74:	b	2b78 <compare_bytes+0x4a4>
    2b78:	b	2b7c <compare_bytes+0x4a8>
    2b7c:	b	2b80 <compare_bytes+0x4ac>
    2b80:	ldr	r0, [sp, #68]	; 0x44
    2b84:	bl	0 <free>
    2b88:	ldr	r0, [sp, #64]	; 0x40
    2b8c:	bl	0 <free>
    2b90:	movw	r0, #0
    2b94:	str	r0, [fp, #-4]
    2b98:	ldr	r0, [fp, #-4]
    2b9c:	mov	sp, fp
    2ba0:	pop	{fp, pc}

00002ba4 <compare_attributes>:
    2ba4:	push	{fp, lr}
    2ba8:	mov	fp, sp
    2bac:	sub	sp, sp, #24
    2bb0:	str	r0, [fp, #-8]
    2bb4:	str	r1, [sp, #12]
    2bb8:	ldr	r0, [fp, #-8]
    2bbc:	add	r1, sp, #8
    2bc0:	bl	0 <coda_cursor_has_attributes>
    2bc4:	cmp	r0, #0
    2bc8:	beq	2be4 <compare_attributes+0x40>
    2bcc:	ldr	r0, [fp, #-8]
    2bd0:	movw	r1, #1
    2bd4:	bl	140c <print_error_with_cursor>
    2bd8:	mvn	r0, #0
    2bdc:	str	r0, [fp, #-4]
    2be0:	b	2cb8 <compare_attributes+0x114>
    2be4:	ldr	r0, [sp, #12]
    2be8:	add	r1, sp, #4
    2bec:	bl	0 <coda_cursor_has_attributes>
    2bf0:	cmp	r0, #0
    2bf4:	beq	2c10 <compare_attributes+0x6c>
    2bf8:	ldr	r0, [sp, #12]
    2bfc:	movw	r1, #2
    2c00:	bl	140c <print_error_with_cursor>
    2c04:	mvn	r0, #0
    2c08:	str	r0, [fp, #-4]
    2c0c:	b	2cb8 <compare_attributes+0x114>
    2c10:	ldr	r0, [sp, #8]
    2c14:	cmp	r0, #0
    2c18:	bne	2c28 <compare_attributes+0x84>
    2c1c:	ldr	r0, [sp, #4]
    2c20:	cmp	r0, #0
    2c24:	beq	2cb0 <compare_attributes+0x10c>
    2c28:	ldr	r0, [fp, #-8]
    2c2c:	bl	0 <coda_cursor_goto_attributes>
    2c30:	cmp	r0, #0
    2c34:	beq	2c50 <compare_attributes+0xac>
    2c38:	ldr	r0, [fp, #-8]
    2c3c:	movw	r1, #1
    2c40:	bl	140c <print_error_with_cursor>
    2c44:	mvn	r0, #0
    2c48:	str	r0, [fp, #-4]
    2c4c:	b	2cb8 <compare_attributes+0x114>
    2c50:	ldr	r0, [sp, #12]
    2c54:	bl	0 <coda_cursor_goto_attributes>
    2c58:	cmp	r0, #0
    2c5c:	beq	2c78 <compare_attributes+0xd4>
    2c60:	ldr	r0, [sp, #12]
    2c64:	movw	r1, #2
    2c68:	bl	140c <print_error_with_cursor>
    2c6c:	mvn	r0, #0
    2c70:	str	r0, [fp, #-4]
    2c74:	b	2cb8 <compare_attributes+0x114>
    2c78:	ldr	r0, [fp, #-8]
    2c7c:	ldr	r1, [sp, #12]
    2c80:	bl	1000 <compare_data>
    2c84:	cmp	r0, #0
    2c88:	beq	2c98 <compare_attributes+0xf4>
    2c8c:	mvn	r0, #0
    2c90:	str	r0, [fp, #-4]
    2c94:	b	2cb8 <compare_attributes+0x114>
    2c98:	ldr	r0, [fp, #-8]
    2c9c:	bl	0 <coda_cursor_goto_parent>
    2ca0:	ldr	r1, [sp, #12]
    2ca4:	str	r0, [sp]
    2ca8:	mov	r0, r1
    2cac:	bl	0 <coda_cursor_goto_parent>
    2cb0:	movw	r0, #0
    2cb4:	str	r0, [fp, #-4]
    2cb8:	ldr	r0, [fp, #-4]
    2cbc:	mov	sp, fp
    2cc0:	pop	{fp, pc}

00002cc4 <compare_arrays_as_records>:
    2cc4:	push	{r4, r5, r6, sl, fp, lr}
    2cc8:	add	fp, sp, #16
    2ccc:	sub	sp, sp, #80	; 0x50
    2cd0:	str	r0, [fp, #-24]	; 0xffffffe8
    2cd4:	str	r1, [fp, #-28]	; 0xffffffe4
    2cd8:	str	r2, [fp, #-32]	; 0xffffffe0
    2cdc:	movw	r0, #0
    2ce0:	str	r0, [fp, #-36]	; 0xffffffdc
    2ce4:	str	r0, [fp, #-40]	; 0xffffffd8
    2ce8:	str	r0, [fp, #-44]	; 0xffffffd4
    2cec:	str	r0, [sp, #48]	; 0x30
    2cf0:	str	r0, [sp, #44]	; 0x2c
    2cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2cf8:	add	r1, sp, #40	; 0x28
    2cfc:	bl	0 <coda_cursor_get_num_elements>
    2d00:	cmp	r0, #0
    2d04:	beq	2d20 <compare_arrays_as_records+0x5c>
    2d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2d0c:	movw	r1, #1
    2d10:	bl	140c <print_error_with_cursor>
    2d14:	mvn	r0, #0
    2d18:	str	r0, [fp, #-20]	; 0xffffffec
    2d1c:	b	30f4 <compare_arrays_as_records+0x430>
    2d20:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2d24:	add	r1, sp, #36	; 0x24
    2d28:	bl	0 <coda_cursor_get_num_elements>
    2d2c:	cmp	r0, #0
    2d30:	beq	2d4c <compare_arrays_as_records+0x88>
    2d34:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2d38:	movw	r1, #2
    2d3c:	bl	140c <print_error_with_cursor>
    2d40:	mvn	r0, #0
    2d44:	str	r0, [fp, #-20]	; 0xffffffec
    2d48:	b	30f4 <compare_arrays_as_records+0x430>
    2d4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2d50:	sub	r1, fp, #36	; 0x24
    2d54:	bl	0 <coda_expression_from_string>
    2d58:	cmp	r0, #0
    2d5c:	beq	2da4 <compare_arrays_as_records+0xe0>
    2d60:	movw	r0, #0
    2d64:	movt	r0, #0
    2d68:	ldr	r0, [r0]
    2d6c:	str	r0, [sp, #24]
    2d70:	bl	0 <coda_get_errno>
    2d74:	ldr	r0, [r0]
    2d78:	bl	0 <coda_errno_to_string>
    2d7c:	ldr	r1, [sp, #24]
    2d80:	str	r0, [sp, #20]
    2d84:	mov	r0, r1
    2d88:	movw	r1, #0
    2d8c:	movt	r1, #0
    2d90:	ldr	r2, [sp, #20]
    2d94:	bl	0 <fprintf>
    2d98:	mvn	r1, #0
    2d9c:	str	r1, [fp, #-20]	; 0xffffffec
    2da0:	b	30f4 <compare_arrays_as_records+0x430>
    2da4:	ldr	r0, [sp, #40]	; 0x28
    2da8:	lsl	r0, r0, #2
    2dac:	bl	0 <malloc>
    2db0:	str	r0, [sp, #48]	; 0x30
    2db4:	ldr	r0, [sp, #48]	; 0x30
    2db8:	movw	r1, #0
    2dbc:	cmp	r0, r1
    2dc0:	bne	2e0c <compare_arrays_as_records+0x148>
    2dc4:	ldr	r0, [sp, #40]	; 0x28
    2dc8:	lsl	r2, r0, #2
    2dcc:	mvn	r0, #0
    2dd0:	movw	r1, #0
    2dd4:	movt	r1, #0
    2dd8:	movw	r3, #0
    2ddc:	movt	r3, #0
    2de0:	movw	ip, #461	; 0x1cd
    2de4:	str	ip, [sp]
    2de8:	bl	0 <coda_set_error>
    2dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2df0:	movw	r1, #1
    2df4:	bl	140c <print_error_with_cursor>
    2df8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2dfc:	bl	0 <coda_expression_delete>
    2e00:	mvn	r0, #0
    2e04:	str	r0, [fp, #-20]	; 0xffffffec
    2e08:	b	30f4 <compare_arrays_as_records+0x430>
    2e0c:	movw	r0, #0
    2e10:	str	r0, [sp, #32]
    2e14:	ldr	r0, [sp, #32]
    2e18:	ldr	r1, [sp, #40]	; 0x28
    2e1c:	cmp	r0, r1
    2e20:	bge	2e48 <compare_arrays_as_records+0x184>
    2e24:	ldr	r0, [sp, #48]	; 0x30
    2e28:	ldr	r1, [sp, #32]
    2e2c:	add	r0, r0, r1, lsl #2
    2e30:	movw	r1, #0
    2e34:	str	r1, [r0]
    2e38:	ldr	r0, [sp, #32]
    2e3c:	add	r0, r0, #1
    2e40:	str	r0, [sp, #32]
    2e44:	b	2e14 <compare_arrays_as_records+0x150>
    2e48:	ldr	r0, [sp, #36]	; 0x24
    2e4c:	lsl	r0, r0, #2
    2e50:	bl	0 <malloc>
    2e54:	str	r0, [sp, #44]	; 0x2c
    2e58:	ldr	r0, [sp, #44]	; 0x2c
    2e5c:	movw	r1, #0
    2e60:	cmp	r0, r1
    2e64:	bne	2eb8 <compare_arrays_as_records+0x1f4>
    2e68:	ldr	r0, [sp, #36]	; 0x24
    2e6c:	lsl	r2, r0, #2
    2e70:	mvn	r0, #0
    2e74:	movw	r1, #0
    2e78:	movt	r1, #0
    2e7c:	movw	r3, #0
    2e80:	movt	r3, #0
    2e84:	movw	ip, #475	; 0x1db
    2e88:	str	ip, [sp]
    2e8c:	bl	0 <coda_set_error>
    2e90:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2e94:	movw	r1, #2
    2e98:	bl	140c <print_error_with_cursor>
    2e9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2ea0:	bl	0 <coda_expression_delete>
    2ea4:	ldr	r0, [sp, #48]	; 0x30
    2ea8:	bl	0 <free>
    2eac:	mvn	r0, #0
    2eb0:	str	r0, [fp, #-20]	; 0xffffffec
    2eb4:	b	30f4 <compare_arrays_as_records+0x430>
    2eb8:	movw	r0, #0
    2ebc:	str	r0, [sp, #32]
    2ec0:	ldr	r0, [sp, #32]
    2ec4:	ldr	r1, [sp, #36]	; 0x24
    2ec8:	cmp	r0, r1
    2ecc:	bge	2ef4 <compare_arrays_as_records+0x230>
    2ed0:	ldr	r0, [sp, #44]	; 0x2c
    2ed4:	ldr	r1, [sp, #32]
    2ed8:	add	r0, r0, r1, lsl #2
    2edc:	movw	r1, #0
    2ee0:	str	r1, [r0]
    2ee4:	ldr	r0, [sp, #32]
    2ee8:	add	r0, r0, #1
    2eec:	str	r0, [sp, #32]
    2ef0:	b	2ec0 <compare_arrays_as_records+0x1fc>
    2ef4:	movw	r0, #1
    2ef8:	bl	0 <coda_hashtable_new>
    2efc:	str	r0, [fp, #-40]	; 0xffffffd8
    2f00:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2f04:	movw	r1, #0
    2f08:	cmp	r0, r1
    2f0c:	bne	2f5c <compare_arrays_as_records+0x298>
    2f10:	mvn	r0, #0
    2f14:	movw	r1, #0
    2f18:	movt	r1, #0
    2f1c:	movw	r2, #0
    2f20:	movt	r2, #0
    2f24:	movw	r3, #489	; 0x1e9
    2f28:	bl	0 <coda_set_error>
    2f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f30:	movw	r1, #1
    2f34:	bl	140c <print_error_with_cursor>
    2f38:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2f3c:	bl	0 <coda_expression_delete>
    2f40:	ldr	r0, [sp, #48]	; 0x30
    2f44:	bl	0 <free>
    2f48:	ldr	r0, [sp, #44]	; 0x2c
    2f4c:	bl	0 <free>
    2f50:	mvn	r0, #0
    2f54:	str	r0, [fp, #-20]	; 0xffffffec
    2f58:	b	30f4 <compare_arrays_as_records+0x430>
    2f5c:	movw	r0, #1
    2f60:	bl	0 <coda_hashtable_new>
    2f64:	str	r0, [fp, #-44]	; 0xffffffd4
    2f68:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2f6c:	movw	r1, #0
    2f70:	cmp	r0, r1
    2f74:	bne	2fcc <compare_arrays_as_records+0x308>
    2f78:	mvn	r0, #0
    2f7c:	movw	r1, #0
    2f80:	movt	r1, #0
    2f84:	movw	r2, #0
    2f88:	movt	r2, #0
    2f8c:	movw	r3, #500	; 0x1f4
    2f90:	bl	0 <coda_set_error>
    2f94:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2f98:	movw	r1, #2
    2f9c:	bl	140c <print_error_with_cursor>
    2fa0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2fa4:	bl	0 <coda_expression_delete>
    2fa8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2fac:	bl	0 <coda_hashtable_delete>
    2fb0:	ldr	r0, [sp, #48]	; 0x30
    2fb4:	bl	0 <free>
    2fb8:	ldr	r0, [sp, #44]	; 0x2c
    2fbc:	bl	0 <free>
    2fc0:	mvn	r0, #0
    2fc4:	str	r0, [fp, #-20]	; 0xffffffec
    2fc8:	b	30f4 <compare_arrays_as_records+0x430>
    2fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2fd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2fd4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2fd8:	ldr	r3, [sp, #40]	; 0x28
    2fdc:	ldr	ip, [sp, #36]	; 0x24
    2fe0:	ldr	lr, [sp, #48]	; 0x30
    2fe4:	ldr	r4, [sp, #44]	; 0x2c
    2fe8:	ldr	r5, [fp, #-40]	; 0xffffffd8
    2fec:	ldr	r6, [fp, #-44]	; 0xffffffd4
    2ff0:	str	ip, [sp]
    2ff4:	str	lr, [sp, #4]
    2ff8:	str	r4, [sp, #8]
    2ffc:	str	r5, [sp, #12]
    3000:	str	r6, [sp, #16]
    3004:	bl	3100 <compare_arrays_as_records_sub>
    3008:	str	r0, [sp, #28]
    300c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3010:	bl	0 <coda_expression_delete>
    3014:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3018:	bl	0 <coda_hashtable_delete>
    301c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3020:	bl	0 <coda_hashtable_delete>
    3024:	movw	r0, #0
    3028:	str	r0, [sp, #32]
    302c:	ldr	r0, [sp, #32]
    3030:	ldr	r1, [sp, #40]	; 0x28
    3034:	cmp	r0, r1
    3038:	bge	3080 <compare_arrays_as_records+0x3bc>
    303c:	ldr	r0, [sp, #48]	; 0x30
    3040:	ldr	r1, [sp, #32]
    3044:	add	r0, r0, r1, lsl #2
    3048:	ldr	r0, [r0]
    304c:	movw	r1, #0
    3050:	cmp	r0, r1
    3054:	beq	306c <compare_arrays_as_records+0x3a8>
    3058:	ldr	r0, [sp, #48]	; 0x30
    305c:	ldr	r1, [sp, #32]
    3060:	add	r0, r0, r1, lsl #2
    3064:	ldr	r0, [r0]
    3068:	bl	0 <coda_free>
    306c:	b	3070 <compare_arrays_as_records+0x3ac>
    3070:	ldr	r0, [sp, #32]
    3074:	add	r0, r0, #1
    3078:	str	r0, [sp, #32]
    307c:	b	302c <compare_arrays_as_records+0x368>
    3080:	ldr	r0, [sp, #48]	; 0x30
    3084:	bl	0 <free>
    3088:	movw	r0, #0
    308c:	str	r0, [sp, #32]
    3090:	ldr	r0, [sp, #32]
    3094:	ldr	r1, [sp, #36]	; 0x24
    3098:	cmp	r0, r1
    309c:	bge	30e4 <compare_arrays_as_records+0x420>
    30a0:	ldr	r0, [sp, #44]	; 0x2c
    30a4:	ldr	r1, [sp, #32]
    30a8:	add	r0, r0, r1, lsl #2
    30ac:	ldr	r0, [r0]
    30b0:	movw	r1, #0
    30b4:	cmp	r0, r1
    30b8:	beq	30d0 <compare_arrays_as_records+0x40c>
    30bc:	ldr	r0, [sp, #44]	; 0x2c
    30c0:	ldr	r1, [sp, #32]
    30c4:	add	r0, r0, r1, lsl #2
    30c8:	ldr	r0, [r0]
    30cc:	bl	0 <coda_free>
    30d0:	b	30d4 <compare_arrays_as_records+0x410>
    30d4:	ldr	r0, [sp, #32]
    30d8:	add	r0, r0, #1
    30dc:	str	r0, [sp, #32]
    30e0:	b	3090 <compare_arrays_as_records+0x3cc>
    30e4:	ldr	r0, [sp, #44]	; 0x2c
    30e8:	bl	0 <free>
    30ec:	ldr	r0, [sp, #28]
    30f0:	str	r0, [fp, #-20]	; 0xffffffec
    30f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    30f8:	sub	sp, fp, #16
    30fc:	pop	{r4, r5, r6, sl, fp, pc}

00003100 <compare_arrays_as_records_sub>:
    3100:	push	{r4, r5, r6, sl, fp, lr}
    3104:	add	fp, sp, #16
    3108:	sub	sp, sp, #120	; 0x78
    310c:	ldr	ip, [fp, #24]
    3110:	ldr	lr, [fp, #20]
    3114:	ldr	r4, [fp, #16]
    3118:	ldr	r5, [fp, #12]
    311c:	ldr	r6, [fp, #8]
    3120:	str	r0, [fp, #-24]	; 0xffffffe8
    3124:	str	r1, [fp, #-28]	; 0xffffffe4
    3128:	str	r2, [fp, #-32]	; 0xffffffe0
    312c:	str	r3, [fp, #-36]	; 0xffffffdc
    3130:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3134:	cmp	r0, #0
    3138:	ble	32ec <compare_arrays_as_records_sub+0x1ec>
    313c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3140:	bl	0 <coda_cursor_goto_first_array_element>
    3144:	cmp	r0, #0
    3148:	beq	3164 <compare_arrays_as_records_sub+0x64>
    314c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3150:	movw	r1, #1
    3154:	bl	140c <print_error_with_cursor>
    3158:	mvn	r0, #0
    315c:	str	r0, [fp, #-20]	; 0xffffffec
    3160:	b	384c <compare_arrays_as_records_sub+0x74c>
    3164:	movw	r0, #0
    3168:	str	r0, [fp, #-44]	; 0xffffffd4
    316c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3170:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3174:	cmp	r0, r1
    3178:	bge	32e4 <compare_arrays_as_records_sub+0x1e4>
    317c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3180:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3184:	ldr	r2, [fp, #12]
    3188:	ldr	r3, [fp, #-44]	; 0xffffffd4
    318c:	add	r2, r2, r3, lsl #2
    3190:	sub	r3, fp, #52	; 0x34
    3194:	bl	0 <coda_expression_eval_string>
    3198:	cmp	r0, #0
    319c:	beq	31f8 <compare_arrays_as_records_sub+0xf8>
    31a0:	movw	r0, #0
    31a4:	movt	r0, #0
    31a8:	ldr	r0, [r0]
    31ac:	movw	r1, #0
    31b0:	movt	r1, #0
    31b4:	ldr	r2, [r1]
    31b8:	str	r0, [fp, #-60]	; 0xffffffc4
    31bc:	str	r2, [fp, #-64]	; 0xffffffc0
    31c0:	bl	0 <coda_get_errno>
    31c4:	ldr	r0, [r0]
    31c8:	bl	0 <coda_errno_to_string>
    31cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    31d0:	str	r0, [sp, #68]	; 0x44
    31d4:	mov	r0, r1
    31d8:	movw	r1, #0
    31dc:	movt	r1, #0
    31e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    31e4:	ldr	r3, [sp, #68]	; 0x44
    31e8:	bl	0 <fprintf>
    31ec:	mvn	r1, #0
    31f0:	str	r1, [fp, #-20]	; 0xffffffec
    31f4:	b	384c <compare_arrays_as_records_sub+0x74c>
    31f8:	ldr	r0, [fp, #20]
    31fc:	ldr	r1, [fp, #12]
    3200:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3204:	add	r1, r1, r2, lsl #2
    3208:	ldr	r1, [r1]
    320c:	bl	0 <coda_hashtable_add_name>
    3210:	cmp	r0, #0
    3214:	beq	3290 <compare_arrays_as_records_sub+0x190>
    3218:	ldr	r0, [fp, #12]
    321c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3220:	add	r0, r0, r1, lsl #2
    3224:	ldr	r2, [r0]
    3228:	mvn	r0, #99	; 0x63
    322c:	movw	r1, #0
    3230:	movt	r1, #0
    3234:	bl	0 <coda_set_error>
    3238:	movw	r0, #0
    323c:	movt	r0, #0
    3240:	ldr	r0, [r0]
    3244:	movw	r1, #0
    3248:	movt	r1, #0
    324c:	ldr	r2, [r1]
    3250:	str	r0, [sp, #64]	; 0x40
    3254:	str	r2, [sp, #60]	; 0x3c
    3258:	bl	0 <coda_get_errno>
    325c:	ldr	r0, [r0]
    3260:	bl	0 <coda_errno_to_string>
    3264:	ldr	r1, [sp, #64]	; 0x40
    3268:	str	r0, [sp, #56]	; 0x38
    326c:	mov	r0, r1
    3270:	movw	r1, #0
    3274:	movt	r1, #0
    3278:	ldr	r2, [sp, #60]	; 0x3c
    327c:	ldr	r3, [sp, #56]	; 0x38
    3280:	bl	0 <fprintf>
    3284:	mvn	r1, #0
    3288:	str	r1, [fp, #-20]	; 0xffffffec
    328c:	b	384c <compare_arrays_as_records_sub+0x74c>
    3290:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3294:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3298:	sub	r1, r1, #1
    329c:	cmp	r0, r1
    32a0:	bge	32d0 <compare_arrays_as_records_sub+0x1d0>
    32a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    32a8:	bl	0 <coda_cursor_goto_next_array_element>
    32ac:	cmp	r0, #0
    32b0:	beq	32cc <compare_arrays_as_records_sub+0x1cc>
    32b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    32b8:	movw	r1, #1
    32bc:	bl	140c <print_error_with_cursor>
    32c0:	mvn	r0, #0
    32c4:	str	r0, [fp, #-20]	; 0xffffffec
    32c8:	b	384c <compare_arrays_as_records_sub+0x74c>
    32cc:	b	32d0 <compare_arrays_as_records_sub+0x1d0>
    32d0:	b	32d4 <compare_arrays_as_records_sub+0x1d4>
    32d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    32d8:	add	r0, r0, #1
    32dc:	str	r0, [fp, #-44]	; 0xffffffd4
    32e0:	b	316c <compare_arrays_as_records_sub+0x6c>
    32e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    32e8:	bl	0 <coda_cursor_goto_parent>
    32ec:	ldr	r0, [fp, #8]
    32f0:	cmp	r0, #0
    32f4:	ble	34a8 <compare_arrays_as_records_sub+0x3a8>
    32f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    32fc:	bl	0 <coda_cursor_goto_first_array_element>
    3300:	cmp	r0, #0
    3304:	beq	3320 <compare_arrays_as_records_sub+0x220>
    3308:	ldr	r0, [fp, #-28]	; 0xffffffe4
    330c:	movw	r1, #2
    3310:	bl	140c <print_error_with_cursor>
    3314:	mvn	r0, #0
    3318:	str	r0, [fp, #-20]	; 0xffffffec
    331c:	b	384c <compare_arrays_as_records_sub+0x74c>
    3320:	movw	r0, #0
    3324:	str	r0, [fp, #-48]	; 0xffffffd0
    3328:	ldr	r0, [fp, #-48]	; 0xffffffd0
    332c:	ldr	r1, [fp, #8]
    3330:	cmp	r0, r1
    3334:	bge	34a0 <compare_arrays_as_records_sub+0x3a0>
    3338:	ldr	r0, [fp, #-32]	; 0xffffffe0
    333c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3340:	ldr	r2, [fp, #16]
    3344:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3348:	add	r2, r2, r3, lsl #2
    334c:	sub	r3, fp, #56	; 0x38
    3350:	bl	0 <coda_expression_eval_string>
    3354:	cmp	r0, #0
    3358:	beq	33b4 <compare_arrays_as_records_sub+0x2b4>
    335c:	movw	r0, #0
    3360:	movt	r0, #0
    3364:	ldr	r0, [r0]
    3368:	movw	r1, #0
    336c:	movt	r1, #0
    3370:	ldr	r2, [r1, #4]
    3374:	str	r0, [sp, #52]	; 0x34
    3378:	str	r2, [sp, #48]	; 0x30
    337c:	bl	0 <coda_get_errno>
    3380:	ldr	r0, [r0]
    3384:	bl	0 <coda_errno_to_string>
    3388:	ldr	r1, [sp, #52]	; 0x34
    338c:	str	r0, [sp, #44]	; 0x2c
    3390:	mov	r0, r1
    3394:	movw	r1, #0
    3398:	movt	r1, #0
    339c:	ldr	r2, [sp, #48]	; 0x30
    33a0:	ldr	r3, [sp, #44]	; 0x2c
    33a4:	bl	0 <fprintf>
    33a8:	mvn	r1, #0
    33ac:	str	r1, [fp, #-20]	; 0xffffffec
    33b0:	b	384c <compare_arrays_as_records_sub+0x74c>
    33b4:	ldr	r0, [fp, #24]
    33b8:	ldr	r1, [fp, #16]
    33bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    33c0:	add	r1, r1, r2, lsl #2
    33c4:	ldr	r1, [r1]
    33c8:	bl	0 <coda_hashtable_add_name>
    33cc:	cmp	r0, #0
    33d0:	beq	344c <compare_arrays_as_records_sub+0x34c>
    33d4:	ldr	r0, [fp, #16]
    33d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    33dc:	add	r0, r0, r1, lsl #2
    33e0:	ldr	r2, [r0]
    33e4:	mvn	r0, #99	; 0x63
    33e8:	movw	r1, #0
    33ec:	movt	r1, #0
    33f0:	bl	0 <coda_set_error>
    33f4:	movw	r0, #0
    33f8:	movt	r0, #0
    33fc:	ldr	r0, [r0]
    3400:	movw	r1, #0
    3404:	movt	r1, #0
    3408:	ldr	r2, [r1, #4]
    340c:	str	r0, [sp, #40]	; 0x28
    3410:	str	r2, [sp, #36]	; 0x24
    3414:	bl	0 <coda_get_errno>
    3418:	ldr	r0, [r0]
    341c:	bl	0 <coda_errno_to_string>
    3420:	ldr	r1, [sp, #40]	; 0x28
    3424:	str	r0, [sp, #32]
    3428:	mov	r0, r1
    342c:	movw	r1, #0
    3430:	movt	r1, #0
    3434:	ldr	r2, [sp, #36]	; 0x24
    3438:	ldr	r3, [sp, #32]
    343c:	bl	0 <fprintf>
    3440:	mvn	r1, #0
    3444:	str	r1, [fp, #-20]	; 0xffffffec
    3448:	b	384c <compare_arrays_as_records_sub+0x74c>
    344c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3450:	ldr	r1, [fp, #8]
    3454:	sub	r1, r1, #1
    3458:	cmp	r0, r1
    345c:	bge	348c <compare_arrays_as_records_sub+0x38c>
    3460:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3464:	bl	0 <coda_cursor_goto_next_array_element>
    3468:	cmp	r0, #0
    346c:	beq	3488 <compare_arrays_as_records_sub+0x388>
    3470:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3474:	movw	r1, #2
    3478:	bl	140c <print_error_with_cursor>
    347c:	mvn	r0, #0
    3480:	str	r0, [fp, #-20]	; 0xffffffec
    3484:	b	384c <compare_arrays_as_records_sub+0x74c>
    3488:	b	348c <compare_arrays_as_records_sub+0x38c>
    348c:	b	3490 <compare_arrays_as_records_sub+0x390>
    3490:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3494:	add	r0, r0, #1
    3498:	str	r0, [fp, #-48]	; 0xffffffd0
    349c:	b	3328 <compare_arrays_as_records_sub+0x228>
    34a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    34a4:	bl	0 <coda_cursor_goto_parent>
    34a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    34ac:	ldr	r1, [fp, #8]
    34b0:	cmp	r0, r1
    34b4:	beq	3548 <compare_arrays_as_records_sub+0x448>
    34b8:	movw	r0, #0
    34bc:	movt	r0, #0
    34c0:	bl	0 <printf>
    34c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    34c8:	str	r0, [sp, #28]
    34cc:	mov	r0, r1
    34d0:	movw	r1, #0
    34d4:	movt	r1, #0
    34d8:	bl	0 <coda_cursor_print_path>
    34dc:	movw	r1, #0
    34e0:	movt	r1, #0
    34e4:	str	r0, [sp, #24]
    34e8:	mov	r0, r1
    34ec:	bl	0 <printf>
    34f0:	movw	r1, #0
    34f4:	movt	r1, #0
    34f8:	ldr	r1, [r1]
    34fc:	cmp	r1, #0
    3500:	beq	3544 <compare_arrays_as_records_sub+0x444>
    3504:	movw	r0, #0
    3508:	movt	r0, #0
    350c:	ldr	r1, [r0]
    3510:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3514:	movw	r0, #0
    3518:	movt	r0, #0
    351c:	bl	0 <printf>
    3520:	movw	r1, #0
    3524:	movt	r1, #0
    3528:	ldr	r1, [r1, #4]
    352c:	ldr	r2, [fp, #8]
    3530:	movw	r3, #0
    3534:	movt	r3, #0
    3538:	str	r0, [sp, #20]
    353c:	mov	r0, r3
    3540:	bl	0 <printf>
    3544:	b	3548 <compare_arrays_as_records_sub+0x448>
    3548:	movw	r0, #1
    354c:	str	r0, [fp, #-40]	; 0xffffffd8
    3550:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3554:	cmp	r0, #0
    3558:	ble	3638 <compare_arrays_as_records_sub+0x538>
    355c:	movw	r0, #0
    3560:	str	r0, [fp, #-44]	; 0xffffffd4
    3564:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3568:	ldr	r1, [fp, #-36]	; 0xffffffdc
    356c:	cmp	r0, r1
    3570:	bge	3634 <compare_arrays_as_records_sub+0x534>
    3574:	ldr	r0, [fp, #24]
    3578:	ldr	r1, [fp, #12]
    357c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3580:	add	r1, r1, r2, lsl #2
    3584:	ldr	r1, [r1]
    3588:	bl	0 <coda_hashtable_get_index_from_name>
    358c:	cmp	r0, #0
    3590:	bge	3620 <compare_arrays_as_records_sub+0x520>
    3594:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3598:	cmp	r0, #0
    359c:	beq	35e0 <compare_arrays_as_records_sub+0x4e0>
    35a0:	movw	r0, #0
    35a4:	movt	r0, #0
    35a8:	bl	0 <printf>
    35ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    35b0:	str	r0, [sp, #16]
    35b4:	mov	r0, r1
    35b8:	movw	r1, #0
    35bc:	movt	r1, #0
    35c0:	bl	0 <coda_cursor_print_path>
    35c4:	movw	r1, #0
    35c8:	movt	r1, #0
    35cc:	str	r0, [sp, #12]
    35d0:	mov	r0, r1
    35d4:	bl	0 <printf>
    35d8:	movw	r1, #0
    35dc:	str	r1, [fp, #-40]	; 0xffffffd8
    35e0:	movw	r0, #0
    35e4:	movt	r0, #0
    35e8:	ldr	r0, [r0]
    35ec:	cmp	r0, #0
    35f0:	beq	361c <compare_arrays_as_records_sub+0x51c>
    35f4:	movw	r0, #0
    35f8:	movt	r0, #0
    35fc:	ldr	r1, [r0]
    3600:	ldr	r0, [fp, #12]
    3604:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3608:	add	r0, r0, r2, lsl #2
    360c:	ldr	r2, [r0]
    3610:	movw	r0, #0
    3614:	movt	r0, #0
    3618:	bl	0 <printf>
    361c:	b	3620 <compare_arrays_as_records_sub+0x520>
    3620:	b	3624 <compare_arrays_as_records_sub+0x524>
    3624:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3628:	add	r0, r0, #1
    362c:	str	r0, [fp, #-44]	; 0xffffffd4
    3630:	b	3564 <compare_arrays_as_records_sub+0x464>
    3634:	b	3638 <compare_arrays_as_records_sub+0x538>
    3638:	ldr	r0, [fp, #8]
    363c:	cmp	r0, #0
    3640:	ble	3720 <compare_arrays_as_records_sub+0x620>
    3644:	movw	r0, #0
    3648:	str	r0, [fp, #-48]	; 0xffffffd0
    364c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3650:	ldr	r1, [fp, #8]
    3654:	cmp	r0, r1
    3658:	bge	371c <compare_arrays_as_records_sub+0x61c>
    365c:	ldr	r0, [fp, #20]
    3660:	ldr	r1, [fp, #16]
    3664:	ldr	r2, [fp, #-48]	; 0xffffffd0
    3668:	add	r1, r1, r2, lsl #2
    366c:	ldr	r1, [r1]
    3670:	bl	0 <coda_hashtable_get_index_from_name>
    3674:	cmp	r0, #0
    3678:	bge	3708 <compare_arrays_as_records_sub+0x608>
    367c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3680:	cmp	r0, #0
    3684:	beq	36c8 <compare_arrays_as_records_sub+0x5c8>
    3688:	movw	r0, #0
    368c:	movt	r0, #0
    3690:	bl	0 <printf>
    3694:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3698:	str	r0, [sp, #8]
    369c:	mov	r0, r1
    36a0:	movw	r1, #0
    36a4:	movt	r1, #0
    36a8:	bl	0 <coda_cursor_print_path>
    36ac:	movw	r1, #0
    36b0:	movt	r1, #0
    36b4:	str	r0, [sp, #4]
    36b8:	mov	r0, r1
    36bc:	bl	0 <printf>
    36c0:	movw	r1, #0
    36c4:	str	r1, [fp, #-40]	; 0xffffffd8
    36c8:	movw	r0, #0
    36cc:	movt	r0, #0
    36d0:	ldr	r0, [r0]
    36d4:	cmp	r0, #0
    36d8:	beq	3704 <compare_arrays_as_records_sub+0x604>
    36dc:	movw	r0, #0
    36e0:	movt	r0, #0
    36e4:	ldr	r1, [r0, #4]
    36e8:	ldr	r0, [fp, #16]
    36ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
    36f0:	add	r0, r0, r2, lsl #2
    36f4:	ldr	r2, [r0]
    36f8:	movw	r0, #0
    36fc:	movt	r0, #0
    3700:	bl	0 <printf>
    3704:	b	3708 <compare_arrays_as_records_sub+0x608>
    3708:	b	370c <compare_arrays_as_records_sub+0x60c>
    370c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3710:	add	r0, r0, #1
    3714:	str	r0, [fp, #-48]	; 0xffffffd0
    3718:	b	364c <compare_arrays_as_records_sub+0x54c>
    371c:	b	3720 <compare_arrays_as_records_sub+0x620>
    3720:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3724:	cmp	r0, #0
    3728:	ble	3844 <compare_arrays_as_records_sub+0x744>
    372c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3730:	bl	0 <coda_cursor_goto_first_array_element>
    3734:	cmp	r0, #0
    3738:	beq	3754 <compare_arrays_as_records_sub+0x654>
    373c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3740:	movw	r1, #1
    3744:	bl	140c <print_error_with_cursor>
    3748:	mvn	r0, #0
    374c:	str	r0, [fp, #-20]	; 0xffffffec
    3750:	b	384c <compare_arrays_as_records_sub+0x74c>
    3754:	movw	r0, #0
    3758:	str	r0, [fp, #-44]	; 0xffffffd4
    375c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3760:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3764:	cmp	r0, r1
    3768:	bge	383c <compare_arrays_as_records_sub+0x73c>
    376c:	ldr	r0, [fp, #24]
    3770:	ldr	r1, [fp, #12]
    3774:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3778:	add	r1, r1, r2, lsl #2
    377c:	ldr	r1, [r1]
    3780:	bl	0 <coda_hashtable_get_index_from_name>
    3784:	str	r0, [fp, #-48]	; 0xffffffd0
    3788:	ldr	r0, [fp, #-48]	; 0xffffffd0
    378c:	cmp	r0, #0
    3790:	blt	37e8 <compare_arrays_as_records_sub+0x6e8>
    3794:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3798:	ldr	r1, [fp, #-48]	; 0xffffffd0
    379c:	bl	0 <coda_cursor_goto_array_element_by_index>
    37a0:	cmp	r0, #0
    37a4:	beq	37c0 <compare_arrays_as_records_sub+0x6c0>
    37a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    37ac:	movw	r1, #2
    37b0:	bl	140c <print_error_with_cursor>
    37b4:	mvn	r0, #0
    37b8:	str	r0, [fp, #-20]	; 0xffffffec
    37bc:	b	384c <compare_arrays_as_records_sub+0x74c>
    37c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    37c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    37c8:	bl	1000 <compare_data>
    37cc:	cmp	r0, #0
    37d0:	beq	37e0 <compare_arrays_as_records_sub+0x6e0>
    37d4:	mvn	r0, #0
    37d8:	str	r0, [fp, #-20]	; 0xffffffec
    37dc:	b	384c <compare_arrays_as_records_sub+0x74c>
    37e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    37e4:	bl	0 <coda_cursor_goto_parent>
    37e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    37ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
    37f0:	sub	r1, r1, #1
    37f4:	cmp	r0, r1
    37f8:	bge	3828 <compare_arrays_as_records_sub+0x728>
    37fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3800:	bl	0 <coda_cursor_goto_next_array_element>
    3804:	cmp	r0, #0
    3808:	beq	3824 <compare_arrays_as_records_sub+0x724>
    380c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3810:	movw	r1, #1
    3814:	bl	140c <print_error_with_cursor>
    3818:	mvn	r0, #0
    381c:	str	r0, [fp, #-20]	; 0xffffffec
    3820:	b	384c <compare_arrays_as_records_sub+0x74c>
    3824:	b	3828 <compare_arrays_as_records_sub+0x728>
    3828:	b	382c <compare_arrays_as_records_sub+0x72c>
    382c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3830:	add	r0, r0, #1
    3834:	str	r0, [fp, #-44]	; 0xffffffd4
    3838:	b	375c <compare_arrays_as_records_sub+0x65c>
    383c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3840:	bl	0 <coda_cursor_goto_parent>
    3844:	movw	r0, #0
    3848:	str	r0, [fp, #-20]	; 0xffffffec
    384c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3850:	sub	sp, fp, #16
    3854:	pop	{r4, r5, r6, sl, fp, pc}

00003858 <print_escaped>:
    3858:	push	{fp, lr}
    385c:	mov	fp, sp
    3860:	sub	sp, sp, #24
    3864:	str	r0, [fp, #-4]
    3868:	str	r1, [fp, #-8]
    386c:	movw	r0, #0
    3870:	str	r0, [sp, #12]
    3874:	ldr	r0, [sp, #12]
    3878:	ldr	r1, [fp, #-8]
    387c:	cmp	r0, r1
    3880:	bge	39f0 <print_escaped+0x198>
    3884:	ldr	r0, [fp, #-4]
    3888:	ldr	r1, [sp, #12]
    388c:	ldrb	r0, [r0, r1]
    3890:	strb	r0, [sp, #11]
    3894:	ldrb	r0, [sp, #11]
    3898:	mov	r1, r0
    389c:	cmp	r0, #7
    38a0:	str	r1, [sp, #4]
    38a4:	beq	391c <print_escaped+0xc4>
    38a8:	b	38ac <print_escaped+0x54>
    38ac:	ldr	r0, [sp, #4]
    38b0:	cmp	r0, #8
    38b4:	beq	392c <print_escaped+0xd4>
    38b8:	b	38bc <print_escaped+0x64>
    38bc:	ldr	r0, [sp, #4]
    38c0:	cmp	r0, #9
    38c4:	beq	393c <print_escaped+0xe4>
    38c8:	b	38cc <print_escaped+0x74>
    38cc:	ldr	r0, [sp, #4]
    38d0:	cmp	r0, #10
    38d4:	beq	394c <print_escaped+0xf4>
    38d8:	b	38dc <print_escaped+0x84>
    38dc:	ldr	r0, [sp, #4]
    38e0:	cmp	r0, #11
    38e4:	beq	395c <print_escaped+0x104>
    38e8:	b	38ec <print_escaped+0x94>
    38ec:	ldr	r0, [sp, #4]
    38f0:	cmp	r0, #12
    38f4:	beq	396c <print_escaped+0x114>
    38f8:	b	38fc <print_escaped+0xa4>
    38fc:	ldr	r0, [sp, #4]
    3900:	cmp	r0, #13
    3904:	beq	397c <print_escaped+0x124>
    3908:	b	390c <print_escaped+0xb4>
    390c:	ldr	r0, [sp, #4]
    3910:	cmp	r0, #92	; 0x5c
    3914:	beq	398c <print_escaped+0x134>
    3918:	b	399c <print_escaped+0x144>
    391c:	movw	r0, #0
    3920:	movt	r0, #0
    3924:	bl	0 <printf>
    3928:	b	39dc <print_escaped+0x184>
    392c:	movw	r0, #0
    3930:	movt	r0, #0
    3934:	bl	0 <printf>
    3938:	b	39dc <print_escaped+0x184>
    393c:	movw	r0, #0
    3940:	movt	r0, #0
    3944:	bl	0 <printf>
    3948:	b	39dc <print_escaped+0x184>
    394c:	movw	r0, #0
    3950:	movt	r0, #0
    3954:	bl	0 <printf>
    3958:	b	39dc <print_escaped+0x184>
    395c:	movw	r0, #0
    3960:	movt	r0, #0
    3964:	bl	0 <printf>
    3968:	b	39dc <print_escaped+0x184>
    396c:	movw	r0, #0
    3970:	movt	r0, #0
    3974:	bl	0 <printf>
    3978:	b	39dc <print_escaped+0x184>
    397c:	movw	r0, #0
    3980:	movt	r0, #0
    3984:	bl	0 <printf>
    3988:	b	39dc <print_escaped+0x184>
    398c:	movw	r0, #0
    3990:	movt	r0, #0
    3994:	bl	0 <printf>
    3998:	b	39dc <print_escaped+0x184>
    399c:	ldrb	r0, [sp, #11]
    39a0:	cmp	r0, #32
    39a4:	blt	39c8 <print_escaped+0x170>
    39a8:	ldrb	r0, [sp, #11]
    39ac:	cmp	r0, #126	; 0x7e
    39b0:	bgt	39c8 <print_escaped+0x170>
    39b4:	ldrb	r1, [sp, #11]
    39b8:	movw	r0, #0
    39bc:	movt	r0, #0
    39c0:	bl	0 <printf>
    39c4:	b	39d8 <print_escaped+0x180>
    39c8:	ldrb	r1, [sp, #11]
    39cc:	movw	r0, #0
    39d0:	movt	r0, #0
    39d4:	bl	0 <printf>
    39d8:	b	39dc <print_escaped+0x184>
    39dc:	b	39e0 <print_escaped+0x188>
    39e0:	ldr	r0, [sp, #12]
    39e4:	add	r0, r0, #1
    39e8:	str	r0, [sp, #12]
    39ec:	b	3874 <print_escaped+0x1c>
    39f0:	mov	sp, fp
    39f4:	pop	{fp, pc}
