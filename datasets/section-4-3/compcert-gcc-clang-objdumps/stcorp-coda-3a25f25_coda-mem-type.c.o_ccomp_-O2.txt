
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-mem-type.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_mem_type_delete>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #16
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	str	r4, [sp, #8]
      14:	str	r5, [sp, #12]
      18:	mov	r4, r0
      1c:	cmp	r4, #0
      20:	bne	38 <coda_mem_type_delete+0x38>
      24:	ldr	r0, [pc, #296]	; 154 <coda_mem_type_delete+0x154>
      28:	ldr	r1, [pc, #296]	; 158 <coda_mem_type_delete+0x158>
      2c:	mov	r2, #42	; 0x2a
      30:	ldr	r3, [pc, #276]	; 14c <coda_mem_type_delete+0x14c>
      34:	bl	0 <__assert_fail>
      38:	ldr	r0, [r4]
      3c:	cmp	r0, #100	; 0x64
      40:	beq	58 <coda_mem_type_delete+0x58>
      44:	ldr	r0, [pc, #260]	; 150 <coda_mem_type_delete+0x150>
      48:	ldr	r1, [pc, #264]	; 158 <coda_mem_type_delete+0x158>
      4c:	mov	r2, #43	; 0x2b
      50:	ldr	r3, [pc, #244]	; 14c <coda_mem_type_delete+0x14c>
      54:	bl	0 <__assert_fail>
      58:	ldr	ip, [r4, #8]
      5c:	cmp	ip, #2
      60:	bcs	f4 <coda_mem_type_delete+0xf4>
      64:	cmp	ip, #0
      68:	bne	b0 <coda_mem_type_delete+0xb0>
      6c:	ldr	r2, [r4, #20]
      70:	cmp	r2, #0
      74:	beq	114 <coda_mem_type_delete+0x114>
      78:	mov	r5, #0
      7c:	ldr	r1, [r4, #16]
      80:	cmp	r5, r1
      84:	bge	a4 <coda_mem_type_delete+0xa4>
      88:	ldr	ip, [r4, #20]
      8c:	ldr	r0, [ip, r5, lsl #2]
      90:	cmp	r0, #0
      94:	beq	9c <coda_mem_type_delete+0x9c>
      98:	bl	0 <coda_dynamic_type_delete>
      9c:	add	r5, r5, #1
      a0:	b	7c <coda_mem_type_delete+0x7c>
      a4:	ldr	r0, [r4, #20]
      a8:	bl	0 <free>
      ac:	b	114 <coda_mem_type_delete+0x114>
      b0:	ldr	r1, [r4, #20]
      b4:	cmp	r1, #0
      b8:	beq	114 <coda_mem_type_delete+0x114>
      bc:	mov	r5, #0
      c0:	ldr	r3, [r4, #16]
      c4:	cmp	r5, r3
      c8:	bge	e8 <coda_mem_type_delete+0xe8>
      cc:	ldr	r0, [r4, #20]
      d0:	ldr	r0, [r0, r5, lsl #2]
      d4:	cmp	r0, #0
      d8:	beq	e0 <coda_mem_type_delete+0xe0>
      dc:	bl	0 <coda_dynamic_type_delete>
      e0:	add	r5, r5, #1
      e4:	b	c0 <coda_mem_type_delete+0xc0>
      e8:	ldr	r0, [r4, #20]
      ec:	bl	0 <free>
      f0:	b	114 <coda_mem_type_delete+0x114>
      f4:	cmp	ip, #2
      f8:	beq	114 <coda_mem_type_delete+0x114>
      fc:	cmp	ip, #3
     100:	bne	114 <coda_mem_type_delete+0x114>
     104:	ldr	r0, [r4, #16]
     108:	cmp	r0, #0
     10c:	beq	114 <coda_mem_type_delete+0x114>
     110:	bl	0 <coda_dynamic_type_delete>
     114:	ldr	r0, [r4, #12]
     118:	cmp	r0, #0
     11c:	beq	124 <coda_mem_type_delete+0x124>
     120:	bl	0 <coda_dynamic_type_delete>
     124:	ldr	r0, [r4, #4]
     128:	cmp	r0, #0
     12c:	beq	134 <coda_mem_type_delete+0x134>
     130:	bl	0 <coda_type_release>
     134:	mov	r0, r4
     138:	ldr	r4, [sp, #8]
     13c:	ldr	r5, [sp, #12]
     140:	ldr	lr, [sp, #4]
     144:	add	sp, sp, #16
     148:	b	0 <free>
     14c:	.word	0x00000b25
     150:	.word	0x0000016b
     154:	.word	0x0000035b
     158:	.word	0x00000048

0000015c <coda_mem_type_update>:
     15c:	mov	ip, sp
     160:	sub	sp, sp, #32
     164:	str	ip, [sp, #4]
     168:	str	lr, [sp, #8]
     16c:	str	r4, [sp, #16]
     170:	str	r5, [sp, #20]
     174:	str	r6, [sp, #24]
     178:	mov	r5, r1
     17c:	mov	r6, r0
     180:	ldr	ip, [r6]
     184:	ldr	r1, [ip]
     188:	cmp	r1, #0
     18c:	beq	52c <coda_mem_type_update+0x3d0>
     190:	cmp	r1, #1
     194:	beq	52c <coda_mem_type_update+0x3d0>
     198:	cmp	r1, #100	; 0x64
     19c:	beq	1b4 <coda_mem_type_update+0x58>
     1a0:	ldr	r0, [pc, #980]	; 57c <coda_mem_type_update+0x420>
     1a4:	ldr	r1, [pc, #1004]	; 598 <coda_mem_type_update+0x43c>
     1a8:	mov	r2, #108	; 0x6c
     1ac:	ldr	r3, [pc, #984]	; 58c <coda_mem_type_update+0x430>
     1b0:	bl	0 <__assert_fail>
     1b4:	ldr	ip, [r6]
     1b8:	ldr	r2, [ip, #4]
     1bc:	cmp	r2, r5
     1c0:	beq	34c <coda_mem_type_update+0x1f0>
     1c4:	ldr	r3, [r5, #8]
     1c8:	cmp	r3, #1
     1cc:	bne	288 <coda_mem_type_update+0x12c>
     1d0:	ldr	ip, [r2, #8]
     1d4:	cmp	ip, #1
     1d8:	beq	288 <coda_mem_type_update+0x12c>
     1dc:	ldr	ip, [r5]
     1e0:	cmp	ip, #2
     1e4:	beq	1fc <coda_mem_type_update+0xa0>
     1e8:	ldr	r0, [pc, #904]	; 578 <coda_mem_type_update+0x41c>
     1ec:	ldr	r1, [pc, #932]	; 598 <coda_mem_type_update+0x43c>
     1f0:	mov	r2, #114	; 0x72
     1f4:	ldr	r3, [pc, #912]	; 58c <coda_mem_type_update+0x430>
     1f8:	bl	0 <__assert_fail>
     1fc:	mov	r1, #0
     200:	mov	r0, r5
     204:	bl	f64 <coda_mem_array_new>
     208:	mov	r4, r0
     20c:	cmp	r4, #0
     210:	bne	21c <coda_mem_type_update+0xc0>
     214:	mvn	r0, #0
     218:	b	560 <coda_mem_type_update+0x404>
     21c:	ldr	r1, [r5, #40]	; 0x28
     220:	mov	r0, r6
     224:	bl	15c <coda_mem_type_update>
     228:	cmp	r0, #0
     22c:	beq	240 <coda_mem_type_update+0xe4>
     230:	mov	r0, r4
     234:	bl	0 <coda_dynamic_type_delete>
     238:	mvn	r0, #0
     23c:	b	560 <coda_mem_type_update+0x404>
     240:	ldr	r1, [r6]
     244:	mov	r0, r4
     248:	bl	123c <coda_mem_array_add_element>
     24c:	cmp	r0, #0
     250:	beq	264 <coda_mem_type_update+0x108>
     254:	mov	r0, r4
     258:	bl	0 <coda_dynamic_type_delete>
     25c:	mvn	r0, #0
     260:	b	560 <coda_mem_type_update+0x404>
     264:	str	r4, [r6]
     268:	mov	r1, r5
     26c:	mov	r0, r6
     270:	ldr	r4, [sp, #16]
     274:	ldr	r5, [sp, #20]
     278:	ldr	r6, [sp, #24]
     27c:	ldr	lr, [sp, #8]
     280:	add	sp, sp, #32
     284:	b	15c <coda_mem_type_update>
     288:	ldr	r1, [r6]
     28c:	ldr	r3, [r1, #4]
     290:	ldr	ip, [r3, #8]
     294:	cmp	ip, #0
     298:	bne	330 <coda_mem_type_update+0x1d4>
     29c:	ldr	r2, [r5, #8]
     2a0:	cmp	r2, #4
     2a4:	bne	330 <coda_mem_type_update+0x1d4>
     2a8:	ldr	r1, [r3]
     2ac:	cmp	r1, #2
     2b0:	beq	2c8 <coda_mem_type_update+0x16c>
     2b4:	ldr	r0, [pc, #728]	; 594 <coda_mem_type_update+0x438>
     2b8:	ldr	r1, [pc, #728]	; 598 <coda_mem_type_update+0x43c>
     2bc:	mov	r2, #141	; 0x8d
     2c0:	ldr	r3, [pc, #708]	; 58c <coda_mem_type_update+0x430>
     2c4:	bl	0 <__assert_fail>
     2c8:	ldr	r3, [r6]
     2cc:	ldr	r2, [r3, #4]
     2d0:	ldr	r1, [r2, #48]	; 0x30
     2d4:	cmp	r1, #0
     2d8:	beq	2f0 <coda_mem_type_update+0x194>
     2dc:	ldr	r0, [pc, #676]	; 588 <coda_mem_type_update+0x42c>
     2e0:	ldr	r1, [pc, #688]	; 598 <coda_mem_type_update+0x43c>
     2e4:	mov	r2, #142	; 0x8e
     2e8:	ldr	r3, [pc, #668]	; 58c <coda_mem_type_update+0x430>
     2ec:	bl	0 <__assert_fail>
     2f0:	mov	r1, #0
     2f4:	mov	r2, #0
     2f8:	mov	r3, #0
     2fc:	mov	r0, r5
     300:	bl	20e8 <coda_mem_string_new>
     304:	mov	r4, r0
     308:	ldr	r3, [r6]
     30c:	ldr	r1, [r3, #12]
     310:	str	r1, [r4, #12]
     314:	ldr	r0, [r6]
     318:	mov	r1, #0
     31c:	str	r1, [r0, #12]
     320:	ldr	r0, [r6]
     324:	bl	0 <coda_dynamic_type_delete>
     328:	str	r4, [r6]
     32c:	b	34c <coda_mem_type_update+0x1f0>
     330:	ldr	r0, [pc, #588]	; 584 <coda_mem_type_update+0x428>
     334:	ldr	r1, [pc, #604]	; 598 <coda_mem_type_update+0x43c>
     338:	mov	r2, #153	; 0x99
     33c:	ldr	r3, [pc, #584]	; 58c <coda_mem_type_update+0x430>
     340:	bl	0 <__assert_fail>
     344:	mov	r0, #1
     348:	bl	0 <exit>
     34c:	ldr	r4, [r6]
     350:	ldr	r1, [r4, #8]
     354:	cmp	r1, #2
     358:	bcs	490 <coda_mem_type_update+0x334>
     35c:	cmp	r1, #0
     360:	bne	454 <coda_mem_type_update+0x2f8>
     364:	ldr	r0, [r4, #16]
     368:	ldr	r3, [r4, #4]
     36c:	ldr	r1, [r3, #48]	; 0x30
     370:	cmp	r0, r1
     374:	bge	3e8 <coda_mem_type_update+0x28c>
     378:	ldr	r0, [r4, #20]
     37c:	lsl	r1, r1, #2
     380:	bl	0 <realloc>
     384:	cmp	r0, #0
     388:	bne	3b8 <coda_mem_type_update+0x25c>
     38c:	mvn	r0, #0
     390:	ldr	r1, [pc, #504]	; 590 <coda_mem_type_update+0x434>
     394:	ldr	r3, [r4, #4]
     398:	ldr	r2, [r3, #48]	; 0x30
     39c:	lsl	r2, r2, #2
     3a0:	ldr	r3, [pc, #496]	; 598 <coda_mem_type_update+0x43c>
     3a4:	mov	r4, #177	; 0xb1
     3a8:	str	r4, [sp]
     3ac:	bl	0 <coda_set_error>
     3b0:	mvn	r0, #0
     3b4:	b	560 <coda_mem_type_update+0x404>
     3b8:	str	r0, [r4, #20]
     3bc:	ldr	r1, [r4, #16]
     3c0:	ldr	r0, [r4, #4]
     3c4:	ldr	r3, [r0, #48]	; 0x30
     3c8:	cmp	r1, r3
     3cc:	bge	3e4 <coda_mem_type_update+0x288>
     3d0:	ldr	r2, [r4, #20]
     3d4:	mov	ip, #0
     3d8:	str	ip, [r2, r1, lsl #2]
     3dc:	add	r1, r1, #1
     3e0:	b	3c0 <coda_mem_type_update+0x264>
     3e4:	str	r3, [r4, #16]
     3e8:	mov	r5, #0
     3ec:	ldr	r2, [r4, #4]
     3f0:	ldr	ip, [r2, #48]	; 0x30
     3f4:	cmp	r5, ip
     3f8:	bge	4c0 <coda_mem_type_update+0x364>
     3fc:	ldr	ip, [r4, #20]
     400:	ldr	r3, [ip, r5, lsl #2]
     404:	cmp	r3, #0
     408:	beq	430 <coda_mem_type_update+0x2d4>
     40c:	add	r0, ip, r5, lsl #2
     410:	ldr	r2, [r2, #52]	; 0x34
     414:	ldr	r1, [r2, r5, lsl #2]
     418:	ldr	r1, [r1, #8]
     41c:	bl	15c <coda_mem_type_update>
     420:	cmp	r0, #0
     424:	beq	44c <coda_mem_type_update+0x2f0>
     428:	mvn	r0, #0
     42c:	b	560 <coda_mem_type_update+0x404>
     430:	ldr	r1, [r2, #52]	; 0x34
     434:	ldr	r0, [r1, r5, lsl #2]
     438:	ldrb	r1, [r0, #16]
     43c:	cmp	r1, #0
     440:	bne	44c <coda_mem_type_update+0x2f0>
     444:	mov	r2, #1
     448:	strb	r2, [r0, #16]
     44c:	add	r5, r5, #1
     450:	b	3ec <coda_mem_type_update+0x290>
     454:	mov	r5, #0
     458:	ldr	r3, [r4, #16]
     45c:	cmp	r5, r3
     460:	bge	4c0 <coda_mem_type_update+0x364>
     464:	ldr	r2, [r4, #20]
     468:	add	r0, r2, r5, lsl #2
     46c:	ldr	r1, [r4, #4]
     470:	ldr	r1, [r1, #40]	; 0x28
     474:	bl	15c <coda_mem_type_update>
     478:	cmp	r0, #0
     47c:	beq	488 <coda_mem_type_update+0x32c>
     480:	mvn	r0, #0
     484:	b	560 <coda_mem_type_update+0x404>
     488:	add	r5, r5, #1
     48c:	b	458 <coda_mem_type_update+0x2fc>
     490:	cmp	r1, #2
     494:	beq	4c0 <coda_mem_type_update+0x364>
     498:	cmp	r1, #3
     49c:	bne	4c0 <coda_mem_type_update+0x364>
     4a0:	add	r0, r4, #16
     4a4:	ldr	r1, [r4, #4]
     4a8:	ldr	r1, [r1, #44]	; 0x2c
     4ac:	bl	15c <coda_mem_type_update>
     4b0:	cmp	r0, #0
     4b4:	beq	4c0 <coda_mem_type_update+0x364>
     4b8:	mvn	r0, #0
     4bc:	b	560 <coda_mem_type_update+0x404>
     4c0:	ldr	r0, [r4, #12]
     4c4:	cmp	r0, #0
     4c8:	bne	4f8 <coda_mem_type_update+0x39c>
     4cc:	ldr	r1, [r4, #4]
     4d0:	ldr	r0, [r1, #36]	; 0x24
     4d4:	cmp	r0, #0
     4d8:	beq	4f8 <coda_mem_type_update+0x39c>
     4dc:	mov	r1, #0
     4e0:	bl	aac <coda_mem_record_new>
     4e4:	str	r0, [r4, #12]
     4e8:	cmp	r0, #0
     4ec:	bne	4f8 <coda_mem_type_update+0x39c>
     4f0:	mvn	r0, #0
     4f4:	b	560 <coda_mem_type_update+0x404>
     4f8:	ldr	r3, [r4, #12]
     4fc:	cmp	r3, #0
     500:	beq	524 <coda_mem_type_update+0x3c8>
     504:	add	r0, r4, #12
     508:	ldr	r2, [r4, #4]
     50c:	ldr	r1, [r2, #36]	; 0x24
     510:	bl	15c <coda_mem_type_update>
     514:	cmp	r0, #0
     518:	beq	524 <coda_mem_type_update+0x3c8>
     51c:	mvn	r0, #0
     520:	b	560 <coda_mem_type_update+0x404>
     524:	mov	r0, #0
     528:	b	560 <coda_mem_type_update+0x404>
     52c:	ldr	r1, [r6]
     530:	ldr	ip, [r1]
     534:	cmp	ip, #100	; 0x64
     538:	blt	540 <coda_mem_type_update+0x3e4>
     53c:	ldr	r1, [r1, #4]
     540:	cmp	r1, r5
     544:	beq	55c <coda_mem_type_update+0x400>
     548:	ldr	r0, [pc, #48]	; 580 <coda_mem_type_update+0x424>
     54c:	ldr	r1, [pc, #68]	; 598 <coda_mem_type_update+0x43c>
     550:	mov	r2, #104	; 0x68
     554:	ldr	r3, [pc, #48]	; 58c <coda_mem_type_update+0x430>
     558:	bl	0 <__assert_fail>
     55c:	mov	r0, #0
     560:	ldr	r4, [sp, #16]
     564:	ldr	r5, [sp, #20]
     568:	ldr	r6, [sp, #24]
     56c:	ldr	lr, [sp, #8]
     570:	add	sp, sp, #32
     574:	bx	lr
     578:	.word	0x00000000
     57c:	.word	0x00000602
     580:	.word	0x00000541
     584:	.word	0x00000893
     588:	.word	0x000007e5
     58c:	.word	0x00000b3a
     590:	.word	0x00000916
     594:	.word	0x000006e1
     598:	.word	0x00000048

0000059c <create_attributes_record>:
     59c:	mov	ip, sp
     5a0:	sub	sp, sp, #16
     5a4:	str	ip, [sp]
     5a8:	str	lr, [sp, #4]
     5ac:	str	r4, [sp, #8]
     5b0:	mov	r4, r0
     5b4:	ldr	r1, [r4, #4]
     5b8:	ldr	r0, [r1, #36]	; 0x24
     5bc:	cmp	r0, #0
     5c0:	beq	5e0 <create_attributes_record+0x44>
     5c4:	mov	r1, #0
     5c8:	bl	aac <coda_mem_record_new>
     5cc:	str	r0, [r4, #12]
     5d0:	cmp	r0, #0
     5d4:	bne	5e0 <create_attributes_record+0x44>
     5d8:	mvn	r0, #0
     5dc:	b	5e4 <create_attributes_record+0x48>
     5e0:	mov	r0, #0
     5e4:	ldr	r4, [sp, #8]
     5e8:	ldr	lr, [sp, #4]
     5ec:	add	sp, sp, #16
     5f0:	bx	lr

000005f4 <coda_mem_type_add_attribute>:
     5f4:	mov	ip, sp
     5f8:	sub	sp, sp, #40	; 0x28
     5fc:	str	ip, [sp, #4]
     600:	str	lr, [sp, #8]
     604:	str	r4, [sp, #16]
     608:	str	r5, [sp, #20]
     60c:	str	r6, [sp, #24]
     610:	str	r7, [sp, #28]
     614:	str	r8, [sp, #32]
     618:	mov	r4, r3
     61c:	mov	r5, r2
     620:	mov	r6, r1
     624:	mov	r7, r0
     628:	cmp	r7, #0
     62c:	bne	64c <coda_mem_type_add_attribute+0x58>
     630:	mvn	r0, #99	; 0x63
     634:	ldr	r1, [pc, #796]	; 958 <coda_mem_type_add_attribute+0x364>
     638:	ldr	r2, [pc, #808]	; 968 <coda_mem_type_add_attribute+0x374>
     63c:	mov	r3, #272	; 0x110
     640:	bl	0 <coda_set_error>
     644:	mvn	r0, #0
     648:	b	920 <coda_mem_type_add_attribute+0x32c>
     64c:	cmp	r6, #0
     650:	bne	670 <coda_mem_type_add_attribute+0x7c>
     654:	mvn	r0, #99	; 0x63
     658:	ldr	r1, [pc, #764]	; 95c <coda_mem_type_add_attribute+0x368>
     65c:	ldr	r2, [pc, #772]	; 968 <coda_mem_type_add_attribute+0x374>
     660:	movw	r3, #277	; 0x115
     664:	bl	0 <coda_set_error>
     668:	mvn	r0, #0
     66c:	b	920 <coda_mem_type_add_attribute+0x32c>
     670:	cmp	r5, #0
     674:	bne	694 <coda_mem_type_add_attribute+0xa0>
     678:	mvn	r0, #99	; 0x63
     67c:	ldr	r1, [pc, #732]	; 960 <coda_mem_type_add_attribute+0x36c>
     680:	ldr	r2, [pc, #736]	; 968 <coda_mem_type_add_attribute+0x374>
     684:	movw	r3, #282	; 0x11a
     688:	bl	0 <coda_set_error>
     68c:	mvn	r0, #0
     690:	b	920 <coda_mem_type_add_attribute+0x32c>
     694:	ldr	r2, [r7, #12]
     698:	cmp	r2, #0
     69c:	beq	6f4 <coda_mem_type_add_attribute+0x100>
     6a0:	ldr	r3, [r2]
     6a4:	cmp	r3, #100	; 0x64
     6a8:	beq	6c8 <coda_mem_type_add_attribute+0xd4>
     6ac:	mvn	r0, #99	; 0x63
     6b0:	ldr	r1, [pc, #668]	; 954 <coda_mem_type_add_attribute+0x360>
     6b4:	ldr	r2, [pc, #684]	; 968 <coda_mem_type_add_attribute+0x374>
     6b8:	movw	r3, #315	; 0x13b
     6bc:	bl	0 <coda_set_error>
     6c0:	mvn	r0, #0
     6c4:	b	920 <coda_mem_type_add_attribute+0x32c>
     6c8:	ldr	ip, [r7, #4]
     6cc:	ldr	r1, [ip, #36]	; 0x24
     6d0:	ldr	r0, [r2, #4]
     6d4:	cmp	r1, r0
     6d8:	beq	758 <coda_mem_type_add_attribute+0x164>
     6dc:	ldr	r0, [pc, #608]	; 944 <coda_mem_type_add_attribute+0x350>
     6e0:	ldr	r1, [pc, #640]	; 968 <coda_mem_type_add_attribute+0x374>
     6e4:	movw	r2, #318	; 0x13e
     6e8:	ldr	r3, [pc, #604]	; 94c <coda_mem_type_add_attribute+0x358>
     6ec:	bl	0 <__assert_fail>
     6f0:	b	758 <coda_mem_type_add_attribute+0x164>
     6f4:	cmp	r4, #0
     6f8:	beq	900 <coda_mem_type_add_attribute+0x30c>
     6fc:	ldr	r0, [r7, #4]
     700:	ldr	r3, [r0, #36]	; 0x24
     704:	cmp	r3, #0
     708:	bne	734 <coda_mem_type_add_attribute+0x140>
     70c:	ldr	r0, [r0]
     710:	bl	0 <coda_type_record_new>
     714:	ldr	ip, [r7, #4]
     718:	str	r0, [ip, #36]	; 0x24
     71c:	ldr	r1, [r7, #4]
     720:	ldr	r2, [r1, #36]	; 0x24
     724:	cmp	r2, #0
     728:	bne	734 <coda_mem_type_add_attribute+0x140>
     72c:	mvn	r0, #0
     730:	b	920 <coda_mem_type_add_attribute+0x32c>
     734:	ldr	r2, [r7, #4]
     738:	ldr	r0, [r2, #36]	; 0x24
     73c:	mov	r1, #0
     740:	bl	aac <coda_mem_record_new>
     744:	str	r0, [r7, #12]
     748:	cmp	r0, #0
     74c:	bne	758 <coda_mem_type_add_attribute+0x164>
     750:	mvn	r0, #0
     754:	b	920 <coda_mem_type_add_attribute+0x32c>
     758:	ldr	r8, [r7, #12]
     75c:	ldr	ip, [r8, #4]
     760:	ldr	r0, [ip, #44]	; 0x2c
     764:	mov	r1, r6
     768:	bl	0 <coda_hashtable_get_index_from_name>
     76c:	mov	r7, r0
     770:	cmp	r4, #0
     774:	beq	850 <coda_mem_type_add_attribute+0x25c>
     778:	cmp	r7, #0
     77c:	blt	79c <coda_mem_type_add_attribute+0x1a8>
     780:	ldr	r2, [r8, #16]
     784:	cmp	r7, r2
     788:	bge	7c8 <coda_mem_type_add_attribute+0x1d4>
     78c:	ldr	ip, [r8, #20]
     790:	ldr	r1, [ip, r7, lsl #2]
     794:	cmp	r1, #0
     798:	beq	7c8 <coda_mem_type_add_attribute+0x1d4>
     79c:	ldr	r0, [r8, #4]
     7a0:	ldr	r2, [r5, #4]
     7a4:	mov	r1, r6
     7a8:	bl	0 <coda_type_record_create_field>
     7ac:	cmp	r0, #0
     7b0:	beq	7bc <coda_mem_type_add_attribute+0x1c8>
     7b4:	mvn	r0, #0
     7b8:	b	920 <coda_mem_type_add_attribute+0x32c>
     7bc:	ldr	r1, [r8, #4]
     7c0:	ldr	r0, [r1, #48]	; 0x30
     7c4:	sub	r7, r0, #1
     7c8:	ldr	ip, [r8, #16]
     7cc:	ldr	r3, [r8, #4]
     7d0:	ldr	r3, [r3, #48]	; 0x30
     7d4:	cmp	ip, r3
     7d8:	bge	8f0 <coda_mem_type_add_attribute+0x2fc>
     7dc:	ldr	r0, [r8, #20]
     7e0:	lsl	r1, r3, #2
     7e4:	bl	0 <realloc>
     7e8:	cmp	r0, #0
     7ec:	bne	81c <coda_mem_type_add_attribute+0x228>
     7f0:	mvn	r0, #0
     7f4:	ldr	r1, [pc, #360]	; 964 <coda_mem_type_add_attribute+0x370>
     7f8:	ldr	r2, [r8, #4]
     7fc:	ldr	r2, [r2, #48]	; 0x30
     800:	lsl	r2, r2, #2
     804:	ldr	r3, [pc, #348]	; 968 <coda_mem_type_add_attribute+0x374>
     808:	mov	ip, #344	; 0x158
     80c:	str	ip, [sp]
     810:	bl	0 <coda_set_error>
     814:	mvn	r0, #0
     818:	b	920 <coda_mem_type_add_attribute+0x32c>
     81c:	str	r0, [r8, #20]
     820:	ldr	ip, [r8, #16]
     824:	ldr	r1, [r8, #4]
     828:	ldr	r1, [r1, #48]	; 0x30
     82c:	cmp	ip, r1
     830:	bge	848 <coda_mem_type_add_attribute+0x254>
     834:	ldr	r3, [r8, #20]
     838:	mov	r2, #0
     83c:	str	r2, [r3, ip, lsl #2]
     840:	add	ip, ip, #1
     844:	b	824 <coda_mem_type_add_attribute+0x230>
     848:	str	r1, [r8, #16]
     84c:	b	8f0 <coda_mem_type_add_attribute+0x2fc>
     850:	cmp	r7, #0
     854:	bge	87c <coda_mem_type_add_attribute+0x288>
     858:	mvn	r0, #101	; 0x65
     85c:	ldr	r1, [pc, #228]	; 948 <coda_mem_type_add_attribute+0x354>
     860:	ldr	r3, [pc, #256]	; 968 <coda_mem_type_add_attribute+0x374>
     864:	movw	r2, #361	; 0x169
     868:	str	r2, [sp]
     86c:	mov	r2, r6
     870:	bl	0 <coda_set_error>
     874:	mvn	r0, #0
     878:	b	920 <coda_mem_type_add_attribute+0x32c>
     87c:	ldr	ip, [r8, #20]
     880:	ldr	r2, [ip, r7, lsl #2]
     884:	cmp	r2, #0
     888:	beq	8b0 <coda_mem_type_add_attribute+0x2bc>
     88c:	mvn	r0, #99	; 0x63
     890:	ldr	r1, [pc, #168]	; 940 <coda_mem_type_add_attribute+0x34c>
     894:	ldr	r3, [pc, #204]	; 968 <coda_mem_type_add_attribute+0x374>
     898:	movw	r2, #367	; 0x16f
     89c:	str	r2, [sp]
     8a0:	mov	r2, r6
     8a4:	bl	0 <coda_set_error>
     8a8:	mvn	r0, #0
     8ac:	b	920 <coda_mem_type_add_attribute+0x32c>
     8b0:	ldr	r3, [r8, #4]
     8b4:	ldr	r3, [r3, #52]	; 0x34
     8b8:	ldr	ip, [r3, r7, lsl #2]
     8bc:	ldr	r3, [ip, #8]
     8c0:	ldr	r0, [r5, #4]
     8c4:	cmp	r3, r0
     8c8:	beq	8f0 <coda_mem_type_add_attribute+0x2fc>
     8cc:	mvn	r0, #99	; 0x63
     8d0:	ldr	r1, [pc, #120]	; 950 <coda_mem_type_add_attribute+0x35c>
     8d4:	ldr	r3, [pc, #140]	; 968 <coda_mem_type_add_attribute+0x374>
     8d8:	movw	r2, #373	; 0x175
     8dc:	str	r2, [sp]
     8e0:	mov	r2, r6
     8e4:	bl	0 <coda_set_error>
     8e8:	mvn	r0, #0
     8ec:	b	920 <coda_mem_type_add_attribute+0x32c>
     8f0:	ldr	r1, [r8, #20]
     8f4:	str	r5, [r1, r7, lsl #2]
     8f8:	mov	r0, #0
     8fc:	b	920 <coda_mem_type_add_attribute+0x32c>
     900:	mvn	r0, #101	; 0x65
     904:	ldr	r1, [pc, #60]	; 948 <coda_mem_type_add_attribute+0x354>
     908:	ldr	r3, [pc, #88]	; 968 <coda_mem_type_add_attribute+0x374>
     90c:	movw	r2, #307	; 0x133
     910:	str	r2, [sp]
     914:	mov	r2, r6
     918:	bl	0 <coda_set_error>
     91c:	mvn	r0, #0
     920:	ldr	r4, [sp, #16]
     924:	ldr	r5, [sp, #20]
     928:	ldr	r6, [sp, #24]
     92c:	ldr	r7, [sp, #28]
     930:	ldr	r8, [sp, #32]
     934:	ldr	lr, [sp, #8]
     938:	add	sp, sp, #40	; 0x28
     93c:	bx	lr
     940:	.word	0x00000368
     944:	.word	0x00000190
     948:	.word	0x00000767
     94c:	.word	0x00000b4f
     950:	.word	0x00000a5a
     954:	.word	0x000009b3
     958:	.word	0x0000094b
     95c:	.word	0x00000ae7
     960:	.word	0x00000850
     964:	.word	0x00000916
     968:	.word	0x00000048

0000096c <coda_mem_type_set_attributes>:
     96c:	mov	ip, sp
     970:	sub	sp, sp, #16
     974:	str	ip, [sp]
     978:	str	lr, [sp, #4]
     97c:	str	r4, [sp, #8]
     980:	str	r5, [sp, #12]
     984:	mov	r4, r1
     988:	mov	r5, r0
     98c:	cmp	r5, #0
     990:	bne	9b0 <coda_mem_type_set_attributes+0x44>
     994:	mvn	r0, #99	; 0x63
     998:	ldr	r1, [pc, #252]	; a9c <coda_mem_type_set_attributes+0x130>
     99c:	ldr	r2, [pc, #260]	; aa8 <coda_mem_type_set_attributes+0x13c>
     9a0:	movw	r3, #386	; 0x182
     9a4:	bl	0 <coda_set_error>
     9a8:	mvn	r0, #0
     9ac:	b	a7c <coda_mem_type_set_attributes+0x110>
     9b0:	cmp	r4, #0
     9b4:	bne	9d4 <coda_mem_type_set_attributes+0x68>
     9b8:	mvn	r0, #99	; 0x63
     9bc:	ldr	r1, [pc, #208]	; a94 <coda_mem_type_set_attributes+0x128>
     9c0:	ldr	r2, [pc, #224]	; aa8 <coda_mem_type_set_attributes+0x13c>
     9c4:	movw	r3, #391	; 0x187
     9c8:	bl	0 <coda_set_error>
     9cc:	mvn	r0, #0
     9d0:	b	a7c <coda_mem_type_set_attributes+0x110>
     9d4:	ldr	r1, [r5, #12]
     9d8:	cmp	r1, #0
     9dc:	beq	9fc <coda_mem_type_set_attributes+0x90>
     9e0:	mvn	r0, #99	; 0x63
     9e4:	ldr	r1, [pc, #180]	; aa0 <coda_mem_type_set_attributes+0x134>
     9e8:	ldr	r2, [pc, #184]	; aa8 <coda_mem_type_set_attributes+0x13c>
     9ec:	mov	r3, #396	; 0x18c
     9f0:	bl	0 <coda_set_error>
     9f4:	mvn	r0, #0
     9f8:	b	a7c <coda_mem_type_set_attributes+0x110>
     9fc:	cmp	r2, #0
     a00:	beq	a44 <coda_mem_type_set_attributes+0xd8>
     a04:	ldr	r1, [r4, #4]
     a08:	ldr	r2, [r1, #8]
     a0c:	cmp	r2, #0
     a10:	beq	a28 <coda_mem_type_set_attributes+0xbc>
     a14:	ldr	r0, [pc, #124]	; a98 <coda_mem_type_set_attributes+0x12c>
     a18:	ldr	r1, [pc, #136]	; aa8 <coda_mem_type_set_attributes+0x13c>
     a1c:	movw	r2, #401	; 0x191
     a20:	ldr	r3, [pc, #124]	; aa4 <coda_mem_type_set_attributes+0x138>
     a24:	bl	0 <__assert_fail>
     a28:	ldr	r0, [r5, #4]
     a2c:	ldr	r1, [r4, #4]
     a30:	bl	0 <coda_type_set_attributes>
     a34:	cmp	r0, #0
     a38:	beq	a74 <coda_mem_type_set_attributes+0x108>
     a3c:	mvn	r0, #0
     a40:	b	a7c <coda_mem_type_set_attributes+0x110>
     a44:	ldr	ip, [r5, #4]
     a48:	ldr	r2, [ip, #36]	; 0x24
     a4c:	ldr	r0, [r4, #4]
     a50:	cmp	r2, r0
     a54:	beq	a74 <coda_mem_type_set_attributes+0x108>
     a58:	mvn	r0, #99	; 0x63
     a5c:	ldr	r1, [pc, #44]	; a90 <coda_mem_type_set_attributes+0x124>
     a60:	ldr	r2, [pc, #64]	; aa8 <coda_mem_type_set_attributes+0x13c>
     a64:	mov	r3, #412	; 0x19c
     a68:	bl	0 <coda_set_error>
     a6c:	mvn	r0, #0
     a70:	b	a7c <coda_mem_type_set_attributes+0x110>
     a74:	str	r4, [r5, #12]
     a78:	mov	r0, #0
     a7c:	ldr	r4, [sp, #8]
     a80:	ldr	r5, [sp, #12]
     a84:	ldr	lr, [sp, #4]
     a88:	add	sp, sp, #16
     a8c:	bx	lr
     a90:	.word	0x00000895
     a94:	.word	0x0000079e
     a98:	.word	0x0000062a
     a9c:	.word	0x0000094b
     aa0:	.word	0x000007c2
     aa4:	.word	0x00000b6b
     aa8:	.word	0x00000048

00000aac <coda_mem_record_new>:
     aac:	mov	ip, sp
     ab0:	sub	sp, sp, #32
     ab4:	str	ip, [sp, #4]
     ab8:	str	lr, [sp, #8]
     abc:	str	r4, [sp, #16]
     ac0:	str	r5, [sp, #20]
     ac4:	str	r6, [sp, #24]
     ac8:	mov	r5, r1
     acc:	mov	r6, r0
     ad0:	cmp	r6, #0
     ad4:	bne	af4 <coda_mem_record_new+0x48>
     ad8:	mvn	r0, #99	; 0x63
     adc:	ldr	r1, [pc, #364]	; c50 <coda_mem_record_new+0x1a4>
     ae0:	ldr	r2, [pc, #368]	; c58 <coda_mem_record_new+0x1ac>
     ae4:	mov	r3, #428	; 0x1ac
     ae8:	bl	0 <coda_set_error>
     aec:	mov	r0, #0
     af0:	b	c34 <coda_mem_record_new+0x188>
     af4:	ldr	ip, [r6, #64]	; 0x40
     af8:	cmp	ip, #0
     afc:	beq	b20 <coda_mem_record_new+0x74>
     b00:	ldr	r1, [r6, #68]	; 0x44
     b04:	cmp	r1, #0
     b08:	beq	b20 <coda_mem_record_new+0x74>
     b0c:	mvn	r0, #99	; 0x63
     b10:	ldr	r1, [pc, #308]	; c4c <coda_mem_record_new+0x1a0>
     b14:	bl	0 <coda_set_error>
     b18:	mov	r0, #0
     b1c:	b	c34 <coda_mem_record_new+0x188>
     b20:	mov	r0, #24
     b24:	bl	0 <malloc>
     b28:	mov	r4, r0
     b2c:	cmp	r4, #0
     b30:	bne	b58 <coda_mem_record_new+0xac>
     b34:	mvn	r0, #0
     b38:	ldr	r1, [pc, #276]	; c54 <coda_mem_record_new+0x1a8>
     b3c:	mov	r2, #24
     b40:	ldr	r3, [pc, #272]	; c58 <coda_mem_record_new+0x1ac>
     b44:	movw	r4, #442	; 0x1ba
     b48:	str	r4, [sp]
     b4c:	bl	0 <coda_set_error>
     b50:	mov	r0, #0
     b54:	b	c34 <coda_mem_record_new+0x188>
     b58:	mov	r2, #100	; 0x64
     b5c:	str	r2, [r4]
     b60:	str	r6, [r4, #4]
     b64:	ldr	r2, [r6, #4]
     b68:	add	r0, r2, #1
     b6c:	str	r0, [r6, #4]
     b70:	mov	r0, #0
     b74:	str	r0, [r4, #8]
     b78:	str	r5, [r4, #12]
     b7c:	mov	r1, #0
     b80:	str	r1, [r4, #16]
     b84:	mov	r3, #0
     b88:	str	r3, [r4, #20]
     b8c:	ldr	r3, [r4, #12]
     b90:	cmp	r3, #0
     b94:	bne	bb8 <coda_mem_record_new+0x10c>
     b98:	mov	r0, r4
     b9c:	bl	59c <create_attributes_record>
     ba0:	cmp	r0, #0
     ba4:	beq	bb8 <coda_mem_record_new+0x10c>
     ba8:	mov	r0, r4
     bac:	bl	0 <coda_mem_type_delete>
     bb0:	mov	r0, #0
     bb4:	b	c34 <coda_mem_record_new+0x188>
     bb8:	ldr	r1, [r6, #48]	; 0x30
     bbc:	cmp	r1, #0
     bc0:	ble	c30 <coda_mem_record_new+0x184>
     bc4:	lsl	r0, r1, #2
     bc8:	bl	0 <malloc>
     bcc:	str	r0, [r4, #20]
     bd0:	cmp	r0, #0
     bd4:	bne	c08 <coda_mem_record_new+0x15c>
     bd8:	mvn	r0, #0
     bdc:	ldr	r1, [pc, #112]	; c54 <coda_mem_record_new+0x1a8>
     be0:	ldr	r3, [r6, #48]	; 0x30
     be4:	lsl	r2, r3, #2
     be8:	ldr	r3, [pc, #104]	; c58 <coda_mem_record_new+0x1ac>
     bec:	movw	r5, #469	; 0x1d5
     bf0:	str	r5, [sp]
     bf4:	bl	0 <coda_set_error>
     bf8:	mov	r0, r4
     bfc:	bl	0 <coda_mem_type_delete>
     c00:	mov	r0, #0
     c04:	b	c34 <coda_mem_record_new+0x188>
     c08:	mov	ip, #0
     c0c:	ldr	r0, [r6, #48]	; 0x30
     c10:	cmp	ip, r0
     c14:	bge	c2c <coda_mem_record_new+0x180>
     c18:	ldr	r0, [r4, #20]
     c1c:	mov	r3, #0
     c20:	str	r3, [r0, ip, lsl #2]
     c24:	add	ip, ip, #1
     c28:	b	c0c <coda_mem_record_new+0x160>
     c2c:	str	r0, [r4, #16]
     c30:	mov	r0, r4
     c34:	ldr	r4, [sp, #16]
     c38:	ldr	r5, [sp, #20]
     c3c:	ldr	r6, [sp, #24]
     c40:	ldr	lr, [sp, #8]
     c44:	add	sp, sp, #32
     c48:	bx	lr
     c4c:	.word	0x000000a5
     c50:	.word	0x00000a06
     c54:	.word	0x00000916
     c58:	.word	0x00000048

00000c5c <coda_mem_record_add_field>:
     c5c:	mov	ip, sp
     c60:	sub	sp, sp, #32
     c64:	str	ip, [sp, #4]
     c68:	str	lr, [sp, #8]
     c6c:	str	r4, [sp, #16]
     c70:	str	r5, [sp, #20]
     c74:	str	r6, [sp, #24]
     c78:	str	r7, [sp, #28]
     c7c:	mov	r7, r2
     c80:	mov	r5, r1
     c84:	mov	r6, r0
     c88:	cmp	r6, #0
     c8c:	bne	cac <coda_mem_record_add_field+0x50>
     c90:	mvn	r0, #99	; 0x63
     c94:	ldr	r1, [pc, #464]	; e6c <coda_mem_record_add_field+0x210>
     c98:	ldr	r2, [pc, #472]	; e78 <coda_mem_record_add_field+0x21c>
     c9c:	movw	r3, #491	; 0x1eb
     ca0:	bl	0 <coda_set_error>
     ca4:	mvn	r0, #0
     ca8:	b	e44 <coda_mem_record_add_field+0x1e8>
     cac:	cmp	r7, #0
     cb0:	bne	cd0 <coda_mem_record_add_field+0x74>
     cb4:	mvn	r0, #99	; 0x63
     cb8:	ldr	r1, [pc, #432]	; e70 <coda_mem_record_add_field+0x214>
     cbc:	ldr	r2, [pc, #436]	; e78 <coda_mem_record_add_field+0x21c>
     cc0:	mov	r3, #496	; 0x1f0
     cc4:	bl	0 <coda_set_error>
     cc8:	mvn	r0, #0
     ccc:	b	e44 <coda_mem_record_add_field+0x1e8>
     cd0:	cmp	r3, #0
     cd4:	beq	d84 <coda_mem_record_add_field+0x128>
     cd8:	ldr	r0, [r6, #4]
     cdc:	ldr	r2, [r7, #4]
     ce0:	mov	r1, r5
     ce4:	bl	0 <coda_type_record_create_field>
     ce8:	cmp	r0, #0
     cec:	beq	cf8 <coda_mem_record_add_field+0x9c>
     cf0:	mvn	r0, #0
     cf4:	b	e44 <coda_mem_record_add_field+0x1e8>
     cf8:	ldr	r1, [r6, #4]
     cfc:	ldr	r1, [r1, #48]	; 0x30
     d00:	sub	r4, r1, #1
     d04:	ldr	r3, [r6, #16]
     d08:	cmp	r3, r1
     d0c:	bge	e38 <coda_mem_record_add_field+0x1dc>
     d10:	ldr	r0, [r6, #20]
     d14:	lsl	r1, r1, #2
     d18:	bl	0 <realloc>
     d1c:	cmp	r0, #0
     d20:	bne	d50 <coda_mem_record_add_field+0xf4>
     d24:	mvn	r0, #0
     d28:	ldr	r1, [pc, #324]	; e74 <coda_mem_record_add_field+0x218>
     d2c:	ldr	r2, [r6, #4]
     d30:	ldr	r2, [r2, #48]	; 0x30
     d34:	lsl	r2, r2, #2
     d38:	ldr	r3, [pc, #312]	; e78 <coda_mem_record_add_field+0x21c>
     d3c:	mov	ip, #516	; 0x204
     d40:	str	ip, [sp]
     d44:	bl	0 <coda_set_error>
     d48:	mvn	r0, #0
     d4c:	b	e44 <coda_mem_record_add_field+0x1e8>
     d50:	str	r0, [r6, #20]
     d54:	ldr	r3, [r6, #16]
     d58:	ldr	r0, [r6, #4]
     d5c:	ldr	r0, [r0, #48]	; 0x30
     d60:	cmp	r3, r0
     d64:	bge	d7c <coda_mem_record_add_field+0x120>
     d68:	ldr	ip, [r6, #20]
     d6c:	mov	r2, #0
     d70:	str	r2, [ip, r3, lsl #2]
     d74:	add	r3, r3, #1
     d78:	b	d58 <coda_mem_record_add_field+0xfc>
     d7c:	str	r0, [r6, #16]
     d80:	b	e38 <coda_mem_record_add_field+0x1dc>
     d84:	ldr	r3, [r6, #4]
     d88:	ldr	r0, [r3, #44]	; 0x2c
     d8c:	mov	r1, r5
     d90:	bl	0 <coda_hashtable_get_index_from_name>
     d94:	mov	r4, r0
     d98:	cmp	r4, #0
     d9c:	bge	dc4 <coda_mem_record_add_field+0x168>
     da0:	mvn	r0, #101	; 0x65
     da4:	ldr	r1, [pc, #188]	; e68 <coda_mem_record_add_field+0x20c>
     da8:	ldr	r3, [pc, #200]	; e78 <coda_mem_record_add_field+0x21c>
     dac:	movw	r2, #534	; 0x216
     db0:	str	r2, [sp]
     db4:	mov	r2, r5
     db8:	bl	0 <coda_set_error>
     dbc:	mvn	r0, #0
     dc0:	b	e44 <coda_mem_record_add_field+0x1e8>
     dc4:	ldr	r2, [r6, #20]
     dc8:	ldr	r3, [r2, r4, lsl #2]
     dcc:	cmp	r3, #0
     dd0:	beq	df8 <coda_mem_record_add_field+0x19c>
     dd4:	mvn	r0, #99	; 0x63
     dd8:	ldr	r1, [pc, #128]	; e60 <coda_mem_record_add_field+0x204>
     ddc:	ldr	r3, [pc, #148]	; e78 <coda_mem_record_add_field+0x21c>
     de0:	mov	r2, #540	; 0x21c
     de4:	str	r2, [sp]
     de8:	mov	r2, r5
     dec:	bl	0 <coda_set_error>
     df0:	mvn	r0, #0
     df4:	b	e44 <coda_mem_record_add_field+0x1e8>
     df8:	ldr	r0, [r6, #4]
     dfc:	ldr	r1, [r0, #52]	; 0x34
     e00:	ldr	r0, [r1, r4, lsl #2]
     e04:	ldr	r2, [r0, #8]
     e08:	ldr	r1, [r7, #4]
     e0c:	cmp	r2, r1
     e10:	beq	e38 <coda_mem_record_add_field+0x1dc>
     e14:	mvn	r0, #99	; 0x63
     e18:	ldr	r1, [pc, #68]	; e64 <coda_mem_record_add_field+0x208>
     e1c:	ldr	r3, [pc, #84]	; e78 <coda_mem_record_add_field+0x21c>
     e20:	movw	r2, #546	; 0x222
     e24:	str	r2, [sp]
     e28:	mov	r2, r5
     e2c:	bl	0 <coda_set_error>
     e30:	mvn	r0, #0
     e34:	b	e44 <coda_mem_record_add_field+0x1e8>
     e38:	ldr	ip, [r6, #20]
     e3c:	str	r7, [ip, r4, lsl #2]
     e40:	mov	r0, #0
     e44:	ldr	r4, [sp, #16]
     e48:	ldr	r5, [sp, #20]
     e4c:	ldr	r6, [sp, #24]
     e50:	ldr	r7, [sp, #28]
     e54:	ldr	lr, [sp, #8]
     e58:	add	sp, sp, #32
     e5c:	bx	lr
     e60:	.word	0x00000026
     e64:	.word	0x00000710
     e68:	.word	0x00000229
     e6c:	.word	0x0000094b
     e70:	.word	0x00000205
     e74:	.word	0x00000916
     e78:	.word	0x00000048

00000e7c <coda_mem_record_validate>:
     e7c:	mov	ip, sp
     e80:	sub	sp, sp, #16
     e84:	str	ip, [sp]
     e88:	str	lr, [sp, #4]
     e8c:	str	r4, [sp, #8]
     e90:	mov	r4, r0
     e94:	cmp	r4, #0
     e98:	bne	eb8 <coda_mem_record_validate+0x3c>
     e9c:	mvn	r0, #99	; 0x63
     ea0:	ldr	r1, [pc, #172]	; f54 <coda_mem_record_validate+0xd8>
     ea4:	ldr	r2, [pc, #180]	; f60 <coda_mem_record_validate+0xe4>
     ea8:	movw	r3, #561	; 0x231
     eac:	bl	0 <coda_set_error>
     eb0:	mvn	r0, #0
     eb4:	b	f40 <coda_mem_record_validate+0xc4>
     eb8:	ldr	r2, [r4, #16]
     ebc:	ldr	ip, [r4, #4]
     ec0:	ldr	r0, [ip, #48]	; 0x30
     ec4:	cmp	r2, r0
     ec8:	beq	ee0 <coda_mem_record_validate+0x64>
     ecc:	ldr	r0, [pc, #136]	; f5c <coda_mem_record_validate+0xe0>
     ed0:	ldr	r1, [pc, #136]	; f60 <coda_mem_record_validate+0xe4>
     ed4:	mov	r2, #564	; 0x234
     ed8:	ldr	r3, [pc, #120]	; f58 <coda_mem_record_validate+0xdc>
     edc:	bl	0 <__assert_fail>
     ee0:	mov	ip, #0
     ee4:	ldr	r3, [r4, #16]
     ee8:	cmp	ip, r3
     eec:	bge	f3c <coda_mem_record_validate+0xc0>
     ef0:	ldr	r2, [r4, #20]
     ef4:	ldr	r1, [r2, ip, lsl #2]
     ef8:	cmp	r1, #0
     efc:	bne	f34 <coda_mem_record_validate+0xb8>
     f00:	ldr	r1, [r4, #4]
     f04:	ldr	r1, [r1, #52]	; 0x34
     f08:	ldr	r2, [r1, ip, lsl #2]
     f0c:	ldrb	r3, [r2, #16]
     f10:	cmp	r3, #0
     f14:	bne	f34 <coda_mem_record_validate+0xb8>
     f18:	movw	r0, #65136	; 0xfe70
     f1c:	movt	r0, #65535	; 0xffff
     f20:	ldr	r1, [pc, #40]	; f50 <coda_mem_record_validate+0xd4>
     f24:	ldr	r2, [r2]
     f28:	bl	0 <coda_set_error>
     f2c:	mvn	r0, #0
     f30:	b	f40 <coda_mem_record_validate+0xc4>
     f34:	add	ip, ip, #1
     f38:	b	ee4 <coda_mem_record_validate+0x68>
     f3c:	mov	r0, #0
     f40:	ldr	r4, [sp, #8]
     f44:	ldr	lr, [sp, #4]
     f48:	add	sp, sp, #16
     f4c:	bx	lr
     f50:	.word	0x0000038e
     f54:	.word	0x0000094b
     f58:	.word	0x00000b88
     f5c:	.word	0x00000662
     f60:	.word	0x00000048

00000f64 <coda_mem_array_new>:
     f64:	mov	ip, sp
     f68:	sub	sp, sp, #32
     f6c:	str	ip, [sp, #4]
     f70:	str	lr, [sp, #8]
     f74:	str	r4, [sp, #16]
     f78:	str	r5, [sp, #20]
     f7c:	str	r6, [sp, #24]
     f80:	mov	r5, r1
     f84:	mov	r6, r0
     f88:	cmp	r6, #0
     f8c:	bne	fac <coda_mem_array_new+0x48>
     f90:	mvn	r0, #99	; 0x63
     f94:	ldr	r1, [pc, #328]	; 10e4 <coda_mem_array_new+0x180>
     f98:	ldr	r2, [pc, #332]	; 10ec <coda_mem_array_new+0x188>
     f9c:	movw	r3, #583	; 0x247
     fa0:	bl	0 <coda_set_error>
     fa4:	mov	r0, #0
     fa8:	b	10cc <coda_mem_array_new+0x168>
     fac:	mov	r0, #24
     fb0:	bl	0 <malloc>
     fb4:	mov	r4, r0
     fb8:	cmp	r4, #0
     fbc:	bne	fe4 <coda_mem_array_new+0x80>
     fc0:	mvn	r0, #0
     fc4:	ldr	r1, [pc, #284]	; 10e8 <coda_mem_array_new+0x184>
     fc8:	mov	r2, #24
     fcc:	ldr	r3, [pc, #280]	; 10ec <coda_mem_array_new+0x188>
     fd0:	movw	ip, #590	; 0x24e
     fd4:	str	ip, [sp]
     fd8:	bl	0 <coda_set_error>
     fdc:	mov	r0, #0
     fe0:	b	10cc <coda_mem_array_new+0x168>
     fe4:	mov	r1, #100	; 0x64
     fe8:	str	r1, [r4]
     fec:	str	r6, [r4, #4]
     ff0:	ldr	r2, [r6, #4]
     ff4:	add	r1, r2, #1
     ff8:	str	r1, [r6, #4]
     ffc:	mov	r1, #1
    1000:	str	r1, [r4, #8]
    1004:	str	r5, [r4, #12]
    1008:	mov	r1, #0
    100c:	str	r1, [r4, #16]
    1010:	mov	ip, #0
    1014:	str	ip, [r4, #20]
    1018:	cmp	r5, #0
    101c:	bne	1040 <coda_mem_array_new+0xdc>
    1020:	mov	r0, r4
    1024:	bl	59c <create_attributes_record>
    1028:	cmp	r0, #0
    102c:	beq	1040 <coda_mem_array_new+0xdc>
    1030:	mov	r0, r4
    1034:	bl	0 <coda_mem_type_delete>
    1038:	mov	r0, #0
    103c:	b	10cc <coda_mem_array_new+0x168>
    1040:	ldr	r0, [r4, #4]
    1044:	ldr	r0, [r0, #44]	; 0x2c
    1048:	cmp	r0, #0
    104c:	ble	10c8 <coda_mem_array_new+0x164>
    1050:	lsl	r0, r0, #2
    1054:	bl	0 <malloc>
    1058:	str	r0, [r4, #20]
    105c:	cmp	r0, #0
    1060:	bne	1098 <coda_mem_array_new+0x134>
    1064:	mvn	r0, #0
    1068:	ldr	r1, [pc, #120]	; 10e8 <coda_mem_array_new+0x184>
    106c:	ldr	ip, [r4, #4]
    1070:	ldr	r3, [ip, #44]	; 0x2c
    1074:	lsl	r2, r3, #2
    1078:	ldr	r3, [pc, #108]	; 10ec <coda_mem_array_new+0x188>
    107c:	movw	ip, #617	; 0x269
    1080:	str	ip, [sp]
    1084:	bl	0 <coda_set_error>
    1088:	mov	r0, r4
    108c:	bl	0 <coda_mem_type_delete>
    1090:	mov	r0, #0
    1094:	b	10cc <coda_mem_array_new+0x168>
    1098:	ldr	r3, [r4, #4]
    109c:	ldr	r3, [r3, #44]	; 0x2c
    10a0:	str	r3, [r4, #16]
    10a4:	mov	r0, #0
    10a8:	ldr	r3, [r4, #16]
    10ac:	cmp	r0, r3
    10b0:	bge	10c8 <coda_mem_array_new+0x164>
    10b4:	ldr	r2, [r4, #20]
    10b8:	mov	ip, #0
    10bc:	str	ip, [r2, r0, lsl #2]
    10c0:	add	r0, r0, #1
    10c4:	b	10a8 <coda_mem_array_new+0x144>
    10c8:	mov	r0, r4
    10cc:	ldr	r4, [sp, #16]
    10d0:	ldr	r5, [sp, #20]
    10d4:	ldr	r6, [sp, #24]
    10d8:	ldr	lr, [sp, #8]
    10dc:	add	sp, sp, #32
    10e0:	bx	lr
    10e4:	.word	0x00000a06
    10e8:	.word	0x00000916
    10ec:	.word	0x00000048

000010f0 <coda_mem_array_set_element>:
    10f0:	mov	ip, sp
    10f4:	sub	sp, sp, #24
    10f8:	str	ip, [sp, #8]
    10fc:	str	lr, [sp, #12]
    1100:	str	r4, [sp, #16]
    1104:	cmp	r0, #0
    1108:	bne	1128 <coda_mem_array_set_element+0x38>
    110c:	mvn	r0, #99	; 0x63
    1110:	ldr	r1, [pc, #284]	; 1234 <coda_mem_array_set_element+0x144>
    1114:	ldr	r2, [pc, #284]	; 1238 <coda_mem_array_set_element+0x148>
    1118:	movw	r3, #635	; 0x27b
    111c:	bl	0 <coda_set_error>
    1120:	mvn	r0, #0
    1124:	b	1214 <coda_mem_array_set_element+0x124>
    1128:	cmp	r1, #0
    112c:	blt	11e4 <coda_mem_array_set_element+0xf4>
    1130:	ldr	ip, [r0, #16]
    1134:	cmp	r1, ip
    1138:	bge	11e4 <coda_mem_array_set_element+0xf4>
    113c:	cmp	r2, #0
    1140:	bne	1160 <coda_mem_array_set_element+0x70>
    1144:	mvn	r0, #99	; 0x63
    1148:	ldr	r1, [pc, #224]	; 1230 <coda_mem_array_set_element+0x140>
    114c:	ldr	r2, [pc, #228]	; 1238 <coda_mem_array_set_element+0x148>
    1150:	movw	r3, #646	; 0x286
    1154:	bl	0 <coda_set_error>
    1158:	mvn	r0, #0
    115c:	b	1214 <coda_mem_array_set_element+0x124>
    1160:	ldr	r3, [r0, #20]
    1164:	ldr	r4, [r3, r1, lsl #2]
    1168:	cmp	r4, #0
    116c:	beq	119c <coda_mem_array_set_element+0xac>
    1170:	mvn	r0, #99	; 0x63
    1174:	ldr	r2, [pc, #176]	; 122c <coda_mem_array_set_element+0x13c>
    1178:	ldr	r3, [pc, #184]	; 1238 <coda_mem_array_set_element+0x148>
    117c:	mov	r4, #652	; 0x28c
    1180:	str	r4, [sp]
    1184:	mov	ip, r1
    1188:	mov	r1, r2
    118c:	mov	r2, ip
    1190:	bl	0 <coda_set_error>
    1194:	mvn	r0, #0
    1198:	b	1214 <coda_mem_array_set_element+0x124>
    119c:	ldr	r0, [r0, #4]
    11a0:	ldr	r4, [r0, #40]	; 0x28
    11a4:	ldr	r0, [r2, #4]
    11a8:	cmp	r4, r0
    11ac:	beq	11d8 <coda_mem_array_set_element+0xe8>
    11b0:	movw	r0, #65136	; 0xfe70
    11b4:	movt	r0, #65535	; 0xffff
    11b8:	ldr	r1, [pc, #104]	; 1228 <coda_mem_array_set_element+0x138>
    11bc:	ldr	r3, [pc, #116]	; 1238 <coda_mem_array_set_element+0x148>
    11c0:	movw	r2, #658	; 0x292
    11c4:	str	r2, [sp]
    11c8:	mov	r2, ip
    11cc:	bl	0 <coda_set_error>
    11d0:	mvn	r0, #0
    11d4:	b	1214 <coda_mem_array_set_element+0x124>
    11d8:	str	r2, [r3, r1, lsl #2]
    11dc:	mov	r0, #0
    11e0:	b	1214 <coda_mem_array_set_element+0x124>
    11e4:	mvn	r2, #100	; 0x64
    11e8:	ldr	ip, [pc, #52]	; 1224 <coda_mem_array_set_element+0x134>
    11ec:	ldr	r3, [r0, #16]
    11f0:	ldr	r0, [pc, #64]	; 1238 <coda_mem_array_set_element+0x148>
    11f4:	movw	r4, #641	; 0x281
    11f8:	str	r4, [sp, #4]
    11fc:	str	r0, [sp]
    1200:	mov	r0, r2
    1204:	mov	r2, r1
    1208:	mov	r1, ip
    120c:	bl	0 <coda_set_error>
    1210:	mvn	r0, #0
    1214:	ldr	r4, [sp, #16]
    1218:	ldr	lr, [sp, #12]
    121c:	add	sp, sp, #24
    1220:	bx	lr
    1224:	.word	0x000009d0
    1228:	.word	0x000003ae
    122c:	.word	0x000000ee
    1230:	.word	0x00000746
    1234:	.word	0x0000094b
    1238:	.word	0x00000048

0000123c <coda_mem_array_add_element>:
    123c:	mov	ip, sp
    1240:	sub	sp, sp, #24
    1244:	str	ip, [sp, #8]
    1248:	str	lr, [sp, #12]
    124c:	str	r4, [sp, #16]
    1250:	str	r5, [sp, #20]
    1254:	mov	r4, r1
    1258:	mov	r5, r0
    125c:	cmp	r5, #0
    1260:	bne	1280 <coda_mem_array_add_element+0x44>
    1264:	mvn	r0, #99	; 0x63
    1268:	ldr	r1, [pc, #396]	; 13fc <coda_mem_array_add_element+0x1c0>
    126c:	ldr	r2, [pc, #400]	; 1404 <coda_mem_array_add_element+0x1c8>
    1270:	movw	r3, #670	; 0x29e
    1274:	bl	0 <coda_set_error>
    1278:	mvn	r0, #0
    127c:	b	13dc <coda_mem_array_add_element+0x1a0>
    1280:	cmp	r4, #0
    1284:	bne	12a4 <coda_mem_array_add_element+0x68>
    1288:	mvn	r0, #99	; 0x63
    128c:	ldr	r1, [pc, #356]	; 13f8 <coda_mem_array_add_element+0x1bc>
    1290:	ldr	r2, [pc, #364]	; 1404 <coda_mem_array_add_element+0x1c8>
    1294:	movw	r3, #675	; 0x2a3
    1298:	bl	0 <coda_set_error>
    129c:	mvn	r0, #0
    12a0:	b	13dc <coda_mem_array_add_element+0x1a0>
    12a4:	ldr	r2, [r5, #4]
    12a8:	ldr	r3, [r2, #40]	; 0x28
    12ac:	ldr	r1, [r4, #4]
    12b0:	cmp	r3, r1
    12b4:	beq	12e0 <coda_mem_array_add_element+0xa4>
    12b8:	movw	r0, #65136	; 0xfe70
    12bc:	movt	r0, #65535	; 0xffff
    12c0:	ldr	r1, [pc, #296]	; 13f0 <coda_mem_array_add_element+0x1b4>
    12c4:	ldr	r2, [r5, #16]
    12c8:	ldr	r3, [pc, #308]	; 1404 <coda_mem_array_add_element+0x1c8>
    12cc:	movw	ip, #681	; 0x2a9
    12d0:	str	ip, [sp]
    12d4:	bl	0 <coda_set_error>
    12d8:	mvn	r0, #0
    12dc:	b	13dc <coda_mem_array_add_element+0x1a0>
    12e0:	ldr	r0, [r2, #44]	; 0x2c
    12e4:	cmp	r0, #0
    12e8:	ble	1350 <coda_mem_array_add_element+0x114>
    12ec:	mov	r2, #0
    12f0:	ldr	r3, [r5, #16]
    12f4:	cmp	r2, r3
    12f8:	bge	1314 <coda_mem_array_add_element+0xd8>
    12fc:	ldr	r3, [r5, #20]
    1300:	ldr	r3, [r3, r2, lsl #2]
    1304:	cmp	r3, #0
    1308:	beq	1314 <coda_mem_array_add_element+0xd8>
    130c:	add	r2, r2, #1
    1310:	b	12f0 <coda_mem_array_add_element+0xb4>
    1314:	ldr	r3, [r5, #16]
    1318:	cmp	r2, r3
    131c:	blt	1344 <coda_mem_array_add_element+0x108>
    1320:	mvn	r0, #100	; 0x64
    1324:	ldr	r1, [pc, #200]	; 13f4 <coda_mem_array_add_element+0x1b8>
    1328:	ldr	r5, [pc, #212]	; 1404 <coda_mem_array_add_element+0x1c8>
    132c:	mov	r4, #696	; 0x2b8
    1330:	str	r4, [sp, #4]
    1334:	str	r5, [sp]
    1338:	bl	0 <coda_set_error>
    133c:	mvn	r0, #0
    1340:	b	13dc <coda_mem_array_add_element+0x1a0>
    1344:	ldr	r3, [r5, #20]
    1348:	str	r4, [r3, r2, lsl #2]
    134c:	b	13d8 <coda_mem_array_add_element+0x19c>
    1350:	ldr	r1, [r5, #16]
    1354:	asr	lr, r1, #31
    1358:	add	lr, r1, lr, lsr #28
    135c:	asr	r2, lr, #4
    1360:	lsl	r2, r2, #4
    1364:	sub	r2, r1, r2
    1368:	cmp	r2, #0
    136c:	bne	13b8 <coda_mem_array_add_element+0x17c>
    1370:	ldr	r0, [r5, #20]
    1374:	lsl	r2, r1, #2
    1378:	add	r1, r2, #64	; 0x40
    137c:	bl	0 <realloc>
    1380:	cmp	r0, #0
    1384:	bne	13b4 <coda_mem_array_add_element+0x178>
    1388:	mvn	r0, #0
    138c:	ldr	r1, [pc, #108]	; 1400 <coda_mem_array_add_element+0x1c4>
    1390:	ldr	r2, [r5, #16]
    1394:	lsl	ip, r2, #2
    1398:	add	r2, ip, #64	; 0x40
    139c:	ldr	r3, [pc, #96]	; 1404 <coda_mem_array_add_element+0x1c8>
    13a0:	movw	r4, #711	; 0x2c7
    13a4:	str	r4, [sp]
    13a8:	bl	0 <coda_set_error>
    13ac:	mvn	r0, #0
    13b0:	b	13dc <coda_mem_array_add_element+0x1a0>
    13b4:	str	r0, [r5, #20]
    13b8:	ldr	ip, [r5, #16]
    13bc:	add	r1, ip, #1
    13c0:	str	r1, [r5, #16]
    13c4:	ldr	ip, [r5, #20]
    13c8:	lsl	r2, r1, #2
    13cc:	add	r0, ip, r2
    13d0:	sub	lr, r0, #4096	; 0x1000
    13d4:	str	r4, [lr, #4092]	; 0xffc
    13d8:	mov	r0, #0
    13dc:	ldr	r4, [sp, #16]
    13e0:	ldr	r5, [sp, #20]
    13e4:	ldr	lr, [sp, #12]
    13e8:	add	sp, sp, #24
    13ec:	bx	lr
    13f0:	.word	0x000004b3
    13f4:	.word	0x000009d0
    13f8:	.word	0x00000746
    13fc:	.word	0x0000094b
    1400:	.word	0x00000916
    1404:	.word	0x00000048

00001408 <coda_mem_array_validate>:
    1408:	mov	ip, sp
    140c:	sub	sp, sp, #16
    1410:	str	ip, [sp]
    1414:	str	lr, [sp, #4]
    1418:	str	r4, [sp, #8]
    141c:	mov	r4, r0
    1420:	cmp	r4, #0
    1424:	bne	1444 <coda_mem_array_validate+0x3c>
    1428:	mvn	r0, #99	; 0x63
    142c:	ldr	r1, [pc, #148]	; 14c8 <coda_mem_array_validate+0xc0>
    1430:	ldr	r2, [pc, #152]	; 14d0 <coda_mem_array_validate+0xc8>
    1434:	movw	r3, #729	; 0x2d9
    1438:	bl	0 <coda_set_error>
    143c:	mvn	r0, #0
    1440:	b	14b4 <coda_mem_array_validate+0xac>
    1444:	ldr	r3, [r4, #4]
    1448:	ldr	r3, [r3, #44]	; 0x2c
    144c:	cmp	r3, #0
    1450:	blt	1470 <coda_mem_array_validate+0x68>
    1454:	ldr	r2, [r4, #16]
    1458:	cmp	r2, r3
    145c:	beq	1470 <coda_mem_array_validate+0x68>
    1460:	movw	r0, #65136	; 0xfe70
    1464:	movt	r0, #65535	; 0xffff
    1468:	ldr	r1, [pc, #84]	; 14c4 <coda_mem_array_validate+0xbc>
    146c:	bl	0 <coda_set_error>
    1470:	mov	r2, #0
    1474:	ldr	ip, [r4, #16]
    1478:	cmp	r2, ip
    147c:	bge	14b0 <coda_mem_array_validate+0xa8>
    1480:	ldr	r0, [r4, #20]
    1484:	ldr	r3, [r0, r2, lsl #2]
    1488:	cmp	r3, #0
    148c:	bne	14a8 <coda_mem_array_validate+0xa0>
    1490:	movw	r0, #65136	; 0xfe70
    1494:	movt	r0, #65535	; 0xffff
    1498:	ldr	r1, [pc, #44]	; 14cc <coda_mem_array_validate+0xc4>
    149c:	bl	0 <coda_set_error>
    14a0:	mvn	r0, #0
    14a4:	b	14b4 <coda_mem_array_validate+0xac>
    14a8:	add	r2, r2, #1
    14ac:	b	1474 <coda_mem_array_validate+0x6c>
    14b0:	mov	r0, #0
    14b4:	ldr	r4, [sp, #8]
    14b8:	ldr	lr, [sp, #4]
    14bc:	add	sp, sp, #16
    14c0:	bx	lr
    14c4:	.word	0x00000575
    14c8:	.word	0x0000094b
    14cc:	.word	0x00000457
    14d0:	.word	0x00000048

000014d4 <coda_mem_data_new>:
    14d4:	mov	ip, sp
    14d8:	sub	sp, sp, #40	; 0x28
    14dc:	str	ip, [sp, #4]
    14e0:	str	lr, [sp, #8]
    14e4:	str	r4, [sp, #16]
    14e8:	str	r5, [sp, #20]
    14ec:	str	r6, [sp, #24]
    14f0:	str	r7, [sp, #28]
    14f4:	str	r8, [sp, #32]
    14f8:	str	r9, [sp, #36]	; 0x24
    14fc:	ldr	r5, [ip]
    1500:	mov	r6, r3
    1504:	mov	r4, r2
    1508:	mov	r9, r1
    150c:	mov	r8, r0
    1510:	cmp	r8, #0
    1514:	bne	1534 <coda_mem_data_new+0x60>
    1518:	mvn	r0, #99	; 0x63
    151c:	ldr	r1, [pc, #892]	; 18a0 <coda_mem_data_new+0x3cc>
    1520:	ldr	r2, [pc, #904]	; 18b0 <coda_mem_data_new+0x3dc>
    1524:	movw	r3, #758	; 0x2f6
    1528:	bl	0 <coda_set_error>
    152c:	mov	r0, #0
    1530:	b	1870 <coda_mem_data_new+0x39c>
    1534:	cmp	r6, #0
    1538:	bge	1550 <coda_mem_data_new+0x7c>
    153c:	ldr	r0, [pc, #880]	; 18b4 <coda_mem_data_new+0x3e0>
    1540:	ldr	r1, [pc, #872]	; 18b0 <coda_mem_data_new+0x3dc>
    1544:	movw	r2, #761	; 0x2f9
    1548:	ldr	r3, [pc, #840]	; 1898 <coda_mem_data_new+0x3c4>
    154c:	bl	0 <__assert_fail>
    1550:	cmp	r5, #0
    1554:	moveq	r3, #1
    1558:	movne	r3, #0
    155c:	mov	ip, #0
    1560:	cmp	r6, #0
    1564:	movgt	r0, r3
    1568:	movle	r0, ip
    156c:	cmp	r0, #0
    1570:	beq	1590 <coda_mem_data_new+0xbc>
    1574:	mvn	r0, #99	; 0x63
    1578:	ldr	r1, [pc, #796]	; 189c <coda_mem_data_new+0x3c8>
    157c:	ldr	r2, [pc, #812]	; 18b0 <coda_mem_data_new+0x3dc>
    1580:	mov	r3, #764	; 0x2fc
    1584:	bl	0 <coda_set_error>
    1588:	mov	r0, #0
    158c:	b	1870 <coda_mem_data_new+0x39c>
    1590:	ldr	r0, [r8, #24]
    1594:	ldr	r1, [r8, #28]
    1598:	cmp	r1, #0
    159c:	blt	15fc <coda_mem_data_new+0x128>
    15a0:	mov	r7, #1
    15a4:	mov	r2, #0
    15a8:	mov	ip, #0
    15ac:	and	r3, r0, #7
    15b0:	orr	r3, ip, r3
    15b4:	cmp	r3, #0
    15b8:	movne	r3, #1
    15bc:	moveq	r3, #0
    15c0:	cmp	r3, #0
    15c4:	movne	r2, r7
    15c8:	moveq	r2, r2
    15cc:	lsr	r3, r0, #3
    15d0:	orr	r0, r3, r1, lsl #29
    15d4:	add	r3, r0, r2
    15d8:	cmp	r3, r6
    15dc:	beq	15fc <coda_mem_data_new+0x128>
    15e0:	movw	r0, #65236	; 0xfed4
    15e4:	movt	r0, #65535	; 0xffff
    15e8:	ldr	r1, [pc, #696]	; 18a8 <coda_mem_data_new+0x3d4>
    15ec:	mov	r2, r6
    15f0:	bl	0 <coda_set_error>
    15f4:	mov	r0, #0
    15f8:	b	1870 <coda_mem_data_new+0x39c>
    15fc:	cmp	r6, #1
    1600:	movne	r2, #1
    1604:	moveq	r2, #0
    1608:	mov	r1, #0
    160c:	ldr	r3, [r8, #12]
    1610:	cmp	r3, #10
    1614:	moveq	r0, r2
    1618:	movne	r0, r1
    161c:	cmp	r0, #0
    1620:	beq	1648 <coda_mem_data_new+0x174>
    1624:	mvn	r0, #99	; 0x63
    1628:	ldr	r1, [pc, #612]	; 1894 <coda_mem_data_new+0x3c0>
    162c:	ldr	r3, [pc, #636]	; 18b0 <coda_mem_data_new+0x3dc>
    1630:	movw	r2, #782	; 0x30e
    1634:	str	r2, [sp]
    1638:	mov	r2, r6
    163c:	bl	0 <coda_set_error>
    1640:	mov	r0, #0
    1644:	b	1870 <coda_mem_data_new+0x39c>
    1648:	mov	r0, #32
    164c:	bl	0 <malloc>
    1650:	mov	r7, r0
    1654:	cmp	r7, #0
    1658:	bne	1680 <coda_mem_data_new+0x1ac>
    165c:	mvn	r0, #0
    1660:	ldr	r1, [pc, #580]	; 18ac <coda_mem_data_new+0x3d8>
    1664:	mov	r2, #32
    1668:	ldr	r3, [pc, #576]	; 18b0 <coda_mem_data_new+0x3dc>
    166c:	movw	r4, #790	; 0x316
    1670:	str	r4, [sp]
    1674:	bl	0 <coda_set_error>
    1678:	mov	r0, #0
    167c:	b	1870 <coda_mem_data_new+0x39c>
    1680:	mov	r0, #100	; 0x64
    1684:	str	r0, [r7]
    1688:	str	r8, [r7, #4]
    168c:	ldr	r3, [r8, #4]
    1690:	add	r0, r3, #1
    1694:	str	r0, [r8, #4]
    1698:	mov	r3, #2
    169c:	str	r3, [r7, #8]
    16a0:	str	r9, [r7, #12]
    16a4:	str	r6, [r7, #16]
    16a8:	mov	r1, #0
    16ac:	mov	r0, #0
    16b0:	str	r0, [r7, #24]
    16b4:	str	r1, [r7, #28]
    16b8:	cmp	r6, #0
    16bc:	ble	1840 <coda_mem_data_new+0x36c>
    16c0:	cmp	r4, #0
    16c4:	bne	16ec <coda_mem_data_new+0x218>
    16c8:	mvn	r0, #99	; 0x63
    16cc:	ldr	r1, [pc, #464]	; 18a4 <coda_mem_data_new+0x3d0>
    16d0:	ldr	r2, [pc, #472]	; 18b0 <coda_mem_data_new+0x3dc>
    16d4:	movw	r3, #805	; 0x325
    16d8:	bl	0 <coda_set_error>
    16dc:	mov	r0, r7
    16e0:	bl	0 <coda_mem_type_delete>
    16e4:	mov	r0, #0
    16e8:	b	1870 <coda_mem_data_new+0x39c>
    16ec:	ldr	r3, [r4, #40]	; 0x28
    16f0:	ldr	ip, [r4, #44]	; 0x2c
    16f4:	mov	r1, ip
    16f8:	mov	r2, r3
    16fc:	orr	r2, r1, r2
    1700:	cmp	r2, #0
    1704:	beq	1744 <coda_mem_data_new+0x270>
    1708:	mov	r2, #0
    170c:	mov	r1, #1
    1710:	subs	r8, r3, r1
    1714:	sbc	r3, ip, r2
    1718:	mov	r0, #0
    171c:	asr	ip, r3, #31
    1720:	lsr	ip, ip, #20
    1724:	adds	ip, r8, ip
    1728:	adc	r3, r3, r0
    172c:	asr	r0, r3, #12
    1730:	lsr	ip, ip, #12
    1734:	orr	ip, ip, r3, lsl #20
    1738:	adds	lr, ip, r1
    173c:	adc	r1, r0, r2
    1740:	mov	r0, lr
    1744:	cmp	r6, #0
    1748:	beq	17a8 <coda_mem_data_new+0x2d4>
    174c:	ldr	r3, [r4, #40]	; 0x28
    1750:	ldr	ip, [r4, #44]	; 0x2c
    1754:	mov	r2, r6
    1758:	asr	r1, r2, #31
    175c:	adds	lr, r3, r2
    1760:	adc	r1, ip, r1
    1764:	mov	ip, lr
    1768:	mov	r3, #0
    176c:	mov	r2, #1
    1770:	subs	r9, ip, r2
    1774:	sbc	r8, r1, r3
    1778:	mov	ip, #0
    177c:	asr	r1, r8, #31
    1780:	lsr	r1, r1, #20
    1784:	adds	lr, r9, r1
    1788:	adc	r8, r8, ip
    178c:	mov	ip, lr
    1790:	asr	r1, r8, #12
    1794:	lsr	ip, ip, #12
    1798:	orr	ip, ip, r8, lsl #20
    179c:	adds	r8, ip, r2
    17a0:	adc	r1, r1, r3
    17a4:	b	17ac <coda_mem_data_new+0x2d8>
    17a8:	mov	r8, r0
    17ac:	cmp	r8, r0
    17b0:	ble	17f8 <coda_mem_data_new+0x324>
    17b4:	ldr	r0, [r4, #48]	; 0x30
    17b8:	lsl	r1, r8, #12
    17bc:	bl	0 <realloc>
    17c0:	cmp	r0, #0
    17c4:	bne	17f4 <coda_mem_data_new+0x320>
    17c8:	mvn	r0, #0
    17cc:	ldr	r1, [pc, #228]	; 18b8 <coda_mem_data_new+0x3e4>
    17d0:	lsl	r2, r8, #12
    17d4:	ldr	r3, [pc, #212]	; 18b0 <coda_mem_data_new+0x3dc>
    17d8:	movw	r4, #821	; 0x335
    17dc:	str	r4, [sp]
    17e0:	bl	0 <coda_set_error>
    17e4:	mov	r0, r7
    17e8:	bl	0 <coda_mem_type_delete>
    17ec:	mov	r0, #0
    17f0:	b	1870 <coda_mem_data_new+0x39c>
    17f4:	str	r0, [r4, #48]	; 0x30
    17f8:	ldr	r1, [r4, #40]	; 0x28
    17fc:	ldr	r3, [r4, #44]	; 0x2c
    1800:	str	r1, [r7, #24]
    1804:	str	r3, [r7, #28]
    1808:	ldr	ip, [r4, #48]	; 0x30
    180c:	ldr	r1, [r4, #40]	; 0x28
    1810:	add	r0, ip, r1
    1814:	mov	r2, r6
    1818:	mov	r1, r5
    181c:	bl	0 <memcpy>
    1820:	ldr	r3, [r4, #40]	; 0x28
    1824:	ldr	r2, [r4, #44]	; 0x2c
    1828:	asr	r0, r6, #31
    182c:	adds	lr, r3, r6
    1830:	adc	ip, r2, r0
    1834:	mov	r2, lr
    1838:	str	r2, [r4, #40]	; 0x28
    183c:	str	ip, [r4, #44]	; 0x2c
    1840:	ldr	r2, [r7, #12]
    1844:	cmp	r2, #0
    1848:	bne	186c <coda_mem_data_new+0x398>
    184c:	mov	r0, r7
    1850:	bl	59c <create_attributes_record>
    1854:	cmp	r0, #0
    1858:	beq	186c <coda_mem_data_new+0x398>
    185c:	mov	r0, r7
    1860:	bl	0 <coda_mem_type_delete>
    1864:	mov	r0, #0
    1868:	b	1870 <coda_mem_data_new+0x39c>
    186c:	mov	r0, r7
    1870:	ldr	r4, [sp, #16]
    1874:	ldr	r5, [sp, #20]
    1878:	ldr	r6, [sp, #24]
    187c:	ldr	r7, [sp, #28]
    1880:	ldr	r8, [sp, #32]
    1884:	ldr	r9, [sp, #36]	; 0x24
    1888:	ldr	lr, [sp, #8]
    188c:	add	sp, sp, #40	; 0x28
    1890:	bx	lr
    1894:	.word	0x000003ed
    1898:	.word	0x00000ba1
    189c:	.word	0x00000a94
    18a0:	.word	0x00000a06
    18a4:	.word	0x0000014a
    18a8:	.word	0x0000025d
    18ac:	.word	0x00000916
    18b0:	.word	0x00000048
    18b4:	.word	0x000004a7
    18b8:	.word	0x00000ab2

000018bc <coda_mem_int8_new>:
    18bc:	mov	ip, sp
    18c0:	sub	sp, sp, #40	; 0x28
    18c4:	str	ip, [sp, #4]
    18c8:	str	lr, [sp, #8]
    18cc:	str	r4, [sp, #16]
    18d0:	str	r5, [sp, #20]
    18d4:	str	r6, [sp, #24]
    18d8:	mov	r5, r2
    18dc:	mov	r4, r1
    18e0:	mov	r6, r0
    18e4:	strb	r3, [sp, #32]
    18e8:	ldr	r0, [r6, #24]
    18ec:	ldr	r2, [r6, #28]
    18f0:	eor	r1, r0, #8
    18f4:	orr	ip, r2, r1
    18f8:	cmp	ip, #0
    18fc:	beq	1914 <coda_mem_int8_new+0x58>
    1900:	ldr	r0, [pc, #100]	; 196c <coda_mem_int8_new+0xb0>
    1904:	ldr	r1, [pc, #104]	; 1974 <coda_mem_int8_new+0xb8>
    1908:	movw	r2, #847	; 0x34f
    190c:	ldr	r3, [pc, #84]	; 1968 <coda_mem_int8_new+0xac>
    1910:	bl	0 <__assert_fail>
    1914:	ldr	r2, [r6, #12]
    1918:	cmp	r2, #0
    191c:	beq	1934 <coda_mem_int8_new+0x78>
    1920:	ldr	r0, [pc, #72]	; 1970 <coda_mem_int8_new+0xb4>
    1924:	ldr	r1, [pc, #72]	; 1974 <coda_mem_int8_new+0xb8>
    1928:	mov	r2, #848	; 0x350
    192c:	ldr	r3, [pc, #52]	; 1968 <coda_mem_int8_new+0xac>
    1930:	bl	0 <__assert_fail>
    1934:	mov	r3, #1
    1938:	add	ip, sp, #32
    193c:	str	ip, [sp]
    1940:	mov	r2, r5
    1944:	mov	r1, r4
    1948:	mov	r0, r6
    194c:	bl	14d4 <coda_mem_data_new>
    1950:	ldr	r4, [sp, #16]
    1954:	ldr	r5, [sp, #20]
    1958:	ldr	r6, [sp, #24]
    195c:	ldr	lr, [sp, #8]
    1960:	add	sp, sp, #40	; 0x28
    1964:	bx	lr
    1968:	.word	0x00000bb3
    196c:	.word	0x00000969
    1970:	.word	0x000005d3
    1974:	.word	0x00000048

00001978 <coda_mem_uint8_new>:
    1978:	mov	ip, sp
    197c:	sub	sp, sp, #40	; 0x28
    1980:	str	ip, [sp, #4]
    1984:	str	lr, [sp, #8]
    1988:	str	r4, [sp, #16]
    198c:	str	r5, [sp, #20]
    1990:	str	r6, [sp, #24]
    1994:	mov	r5, r2
    1998:	mov	r4, r1
    199c:	mov	r6, r0
    19a0:	strb	r3, [sp, #32]
    19a4:	ldr	r0, [r6, #24]
    19a8:	ldr	r2, [r6, #28]
    19ac:	eor	r1, r0, #8
    19b0:	orr	ip, r2, r1
    19b4:	cmp	ip, #0
    19b8:	beq	19d0 <coda_mem_uint8_new+0x58>
    19bc:	ldr	r0, [pc, #100]	; 1a28 <coda_mem_uint8_new+0xb0>
    19c0:	ldr	r1, [pc, #104]	; 1a30 <coda_mem_uint8_new+0xb8>
    19c4:	movw	r2, #855	; 0x357
    19c8:	ldr	r3, [pc, #92]	; 1a2c <coda_mem_uint8_new+0xb4>
    19cc:	bl	0 <__assert_fail>
    19d0:	ldr	r2, [r6, #12]
    19d4:	cmp	r2, #1
    19d8:	beq	19f0 <coda_mem_uint8_new+0x78>
    19dc:	ldr	r0, [pc, #64]	; 1a24 <coda_mem_uint8_new+0xac>
    19e0:	ldr	r1, [pc, #72]	; 1a30 <coda_mem_uint8_new+0xb8>
    19e4:	mov	r2, #856	; 0x358
    19e8:	ldr	r3, [pc, #60]	; 1a2c <coda_mem_uint8_new+0xb4>
    19ec:	bl	0 <__assert_fail>
    19f0:	mov	r3, #1
    19f4:	add	ip, sp, #32
    19f8:	str	ip, [sp]
    19fc:	mov	r2, r5
    1a00:	mov	r1, r4
    1a04:	mov	r0, r6
    1a08:	bl	14d4 <coda_mem_data_new>
    1a0c:	ldr	r4, [sp, #16]
    1a10:	ldr	r5, [sp, #20]
    1a14:	ldr	r6, [sp, #24]
    1a18:	ldr	lr, [sp, #8]
    1a1c:	add	sp, sp, #40	; 0x28
    1a20:	bx	lr
    1a24:	.word	0x00000820
    1a28:	.word	0x00000969
    1a2c:	.word	0x00000bc5
    1a30:	.word	0x00000048

00001a34 <coda_mem_int16_new>:
    1a34:	mov	ip, sp
    1a38:	sub	sp, sp, #40	; 0x28
    1a3c:	str	ip, [sp, #4]
    1a40:	str	lr, [sp, #8]
    1a44:	str	r4, [sp, #16]
    1a48:	str	r5, [sp, #20]
    1a4c:	str	r6, [sp, #24]
    1a50:	mov	r5, r2
    1a54:	mov	r4, r1
    1a58:	mov	r6, r0
    1a5c:	strh	r3, [sp, #32]
    1a60:	ldr	r0, [r6, #24]
    1a64:	ldr	r2, [r6, #28]
    1a68:	eor	r1, r0, #16
    1a6c:	orr	ip, r2, r1
    1a70:	cmp	ip, #0
    1a74:	beq	1a8c <coda_mem_int16_new+0x58>
    1a78:	ldr	r0, [pc, #100]	; 1ae4 <coda_mem_int16_new+0xb0>
    1a7c:	ldr	r1, [pc, #104]	; 1aec <coda_mem_int16_new+0xb8>
    1a80:	movw	r2, #863	; 0x35f
    1a84:	ldr	r3, [pc, #92]	; 1ae8 <coda_mem_int16_new+0xb4>
    1a88:	bl	0 <__assert_fail>
    1a8c:	ldr	r2, [r6, #12]
    1a90:	cmp	r2, #2
    1a94:	beq	1aac <coda_mem_int16_new+0x78>
    1a98:	ldr	r0, [pc, #64]	; 1ae0 <coda_mem_int16_new+0xac>
    1a9c:	ldr	r1, [pc, #72]	; 1aec <coda_mem_int16_new+0xb8>
    1aa0:	mov	r2, #864	; 0x360
    1aa4:	ldr	r3, [pc, #60]	; 1ae8 <coda_mem_int16_new+0xb4>
    1aa8:	bl	0 <__assert_fail>
    1aac:	mov	r3, #2
    1ab0:	add	ip, sp, #32
    1ab4:	str	ip, [sp]
    1ab8:	mov	r2, r5
    1abc:	mov	r1, r4
    1ac0:	mov	r0, r6
    1ac4:	bl	14d4 <coda_mem_data_new>
    1ac8:	ldr	r4, [sp, #16]
    1acc:	ldr	r5, [sp, #20]
    1ad0:	ldr	r6, [sp, #24]
    1ad4:	ldr	lr, [sp, #8]
    1ad8:	add	sp, sp, #40	; 0x28
    1adc:	bx	lr
    1ae0:	.word	0x000008e6
    1ae4:	.word	0x00000b0a
    1ae8:	.word	0x00000bd8
    1aec:	.word	0x00000048

00001af0 <coda_mem_uint16_new>:
    1af0:	mov	ip, sp
    1af4:	sub	sp, sp, #40	; 0x28
    1af8:	str	ip, [sp, #4]
    1afc:	str	lr, [sp, #8]
    1b00:	str	r4, [sp, #16]
    1b04:	str	r5, [sp, #20]
    1b08:	str	r6, [sp, #24]
    1b0c:	mov	r5, r2
    1b10:	mov	r4, r1
    1b14:	mov	r6, r0
    1b18:	strh	r3, [sp, #32]
    1b1c:	ldr	r0, [r6, #24]
    1b20:	ldr	r2, [r6, #28]
    1b24:	eor	r1, r0, #16
    1b28:	orr	ip, r2, r1
    1b2c:	cmp	ip, #0
    1b30:	beq	1b48 <coda_mem_uint16_new+0x58>
    1b34:	ldr	r0, [pc, #104]	; 1ba4 <coda_mem_uint16_new+0xb4>
    1b38:	ldr	r1, [pc, #104]	; 1ba8 <coda_mem_uint16_new+0xb8>
    1b3c:	movw	r2, #871	; 0x367
    1b40:	ldr	r3, [pc, #84]	; 1b9c <coda_mem_uint16_new+0xac>
    1b44:	bl	0 <__assert_fail>
    1b48:	ldr	r2, [r6, #12]
    1b4c:	cmp	r2, #3
    1b50:	beq	1b68 <coda_mem_uint16_new+0x78>
    1b54:	ldr	r0, [pc, #68]	; 1ba0 <coda_mem_uint16_new+0xb0>
    1b58:	ldr	r1, [pc, #72]	; 1ba8 <coda_mem_uint16_new+0xb8>
    1b5c:	mov	r2, #872	; 0x368
    1b60:	ldr	r3, [pc, #52]	; 1b9c <coda_mem_uint16_new+0xac>
    1b64:	bl	0 <__assert_fail>
    1b68:	mov	r3, #2
    1b6c:	add	ip, sp, #32
    1b70:	str	ip, [sp]
    1b74:	mov	r2, r5
    1b78:	mov	r1, r4
    1b7c:	mov	r0, r6
    1b80:	bl	14d4 <coda_mem_data_new>
    1b84:	ldr	r4, [sp, #16]
    1b88:	ldr	r5, [sp, #20]
    1b8c:	ldr	r6, [sp, #24]
    1b90:	ldr	lr, [sp, #8]
    1b94:	add	sp, sp, #40	; 0x28
    1b98:	bx	lr
    1b9c:	.word	0x00000beb
    1ba0:	.word	0x00000476
    1ba4:	.word	0x00000b0a
    1ba8:	.word	0x00000048

00001bac <coda_mem_int32_new>:
    1bac:	mov	ip, sp
    1bb0:	sub	sp, sp, #40	; 0x28
    1bb4:	str	ip, [sp, #4]
    1bb8:	str	lr, [sp, #8]
    1bbc:	str	r4, [sp, #16]
    1bc0:	str	r5, [sp, #20]
    1bc4:	str	r6, [sp, #24]
    1bc8:	mov	r4, r2
    1bcc:	mov	r5, r1
    1bd0:	mov	r6, r0
    1bd4:	str	r3, [sp, #32]
    1bd8:	ldr	r0, [r6, #24]
    1bdc:	ldr	r2, [r6, #28]
    1be0:	eor	r1, r0, #32
    1be4:	orr	ip, r2, r1
    1be8:	cmp	ip, #0
    1bec:	beq	1c04 <coda_mem_int32_new+0x58>
    1bf0:	ldr	r0, [pc, #100]	; 1c5c <coda_mem_int32_new+0xb0>
    1bf4:	ldr	r1, [pc, #104]	; 1c64 <coda_mem_int32_new+0xb8>
    1bf8:	movw	r2, #879	; 0x36f
    1bfc:	ldr	r3, [pc, #92]	; 1c60 <coda_mem_int32_new+0xb4>
    1c00:	bl	0 <__assert_fail>
    1c04:	ldr	r3, [r6, #12]
    1c08:	cmp	r3, #4
    1c0c:	beq	1c24 <coda_mem_int32_new+0x78>
    1c10:	ldr	r0, [pc, #64]	; 1c58 <coda_mem_int32_new+0xac>
    1c14:	ldr	r1, [pc, #72]	; 1c64 <coda_mem_int32_new+0xb8>
    1c18:	mov	r2, #880	; 0x370
    1c1c:	ldr	r3, [pc, #60]	; 1c60 <coda_mem_int32_new+0xb4>
    1c20:	bl	0 <__assert_fail>
    1c24:	mov	r3, #4
    1c28:	add	ip, sp, #32
    1c2c:	str	ip, [sp]
    1c30:	mov	r2, r4
    1c34:	mov	r1, r5
    1c38:	mov	r0, r6
    1c3c:	bl	14d4 <coda_mem_data_new>
    1c40:	ldr	r4, [sp, #16]
    1c44:	ldr	r5, [sp, #20]
    1c48:	ldr	r6, [sp, #24]
    1c4c:	ldr	lr, [sp, #8]
    1c50:	add	sp, sp, #40	; 0x28
    1c54:	bx	lr
    1c58:	.word	0x00000983
    1c5c:	.word	0x000008cb
    1c60:	.word	0x00000bff
    1c64:	.word	0x00000048

00001c68 <coda_mem_uint32_new>:
    1c68:	mov	ip, sp
    1c6c:	sub	sp, sp, #40	; 0x28
    1c70:	str	ip, [sp, #4]
    1c74:	str	lr, [sp, #8]
    1c78:	str	r4, [sp, #16]
    1c7c:	str	r5, [sp, #20]
    1c80:	str	r6, [sp, #24]
    1c84:	mov	r4, r2
    1c88:	mov	r5, r1
    1c8c:	mov	r6, r0
    1c90:	str	r3, [sp, #32]
    1c94:	ldr	r0, [r6, #24]
    1c98:	ldr	r2, [r6, #28]
    1c9c:	eor	r1, r0, #32
    1ca0:	orr	ip, r2, r1
    1ca4:	cmp	ip, #0
    1ca8:	beq	1cc0 <coda_mem_uint32_new+0x58>
    1cac:	ldr	r0, [pc, #96]	; 1d14 <coda_mem_uint32_new+0xac>
    1cb0:	ldr	r1, [pc, #104]	; 1d20 <coda_mem_uint32_new+0xb8>
    1cb4:	movw	r2, #887	; 0x377
    1cb8:	ldr	r3, [pc, #88]	; 1d18 <coda_mem_uint32_new+0xb0>
    1cbc:	bl	0 <__assert_fail>
    1cc0:	ldr	r3, [r6, #12]
    1cc4:	cmp	r3, #5
    1cc8:	beq	1ce0 <coda_mem_uint32_new+0x78>
    1ccc:	ldr	r0, [pc, #72]	; 1d1c <coda_mem_uint32_new+0xb4>
    1cd0:	ldr	r1, [pc, #72]	; 1d20 <coda_mem_uint32_new+0xb8>
    1cd4:	mov	r2, #888	; 0x378
    1cd8:	ldr	r3, [pc, #56]	; 1d18 <coda_mem_uint32_new+0xb0>
    1cdc:	bl	0 <__assert_fail>
    1ce0:	mov	r3, #4
    1ce4:	add	ip, sp, #32
    1ce8:	str	ip, [sp]
    1cec:	mov	r2, r4
    1cf0:	mov	r1, r5
    1cf4:	mov	r0, r6
    1cf8:	bl	14d4 <coda_mem_data_new>
    1cfc:	ldr	r4, [sp, #16]
    1d00:	ldr	r5, [sp, #20]
    1d04:	ldr	r6, [sp, #24]
    1d08:	ldr	lr, [sp, #8]
    1d0c:	add	sp, sp, #40	; 0x28
    1d10:	bx	lr
    1d14:	.word	0x000008cb
    1d18:	.word	0x00000c12
    1d1c:	.word	0x00000119
    1d20:	.word	0x00000048

00001d24 <coda_mem_int64_new>:
    1d24:	mov	ip, sp
    1d28:	sub	sp, sp, #40	; 0x28
    1d2c:	str	ip, [sp, #4]
    1d30:	str	lr, [sp, #8]
    1d34:	str	r4, [sp, #16]
    1d38:	str	r5, [sp, #20]
    1d3c:	str	r6, [sp, #24]
    1d40:	mov	r6, r0
    1d44:	ldr	r0, [ip, #4]
    1d48:	mov	r5, r1
    1d4c:	ldr	r1, [ip]
    1d50:	mov	r4, r2
    1d54:	str	r1, [sp, #32]
    1d58:	str	r0, [sp, #36]	; 0x24
    1d5c:	ldr	r0, [r6, #24]
    1d60:	ldr	r2, [r6, #28]
    1d64:	eor	r1, r0, #64	; 0x40
    1d68:	orr	ip, r2, r1
    1d6c:	cmp	ip, #0
    1d70:	beq	1d88 <coda_mem_int64_new+0x64>
    1d74:	ldr	r0, [pc, #96]	; 1ddc <coda_mem_int64_new+0xb8>
    1d78:	ldr	r1, [pc, #104]	; 1de8 <coda_mem_int64_new+0xc4>
    1d7c:	movw	r2, #895	; 0x37f
    1d80:	ldr	r3, [pc, #92]	; 1de4 <coda_mem_int64_new+0xc0>
    1d84:	bl	0 <__assert_fail>
    1d88:	ldr	ip, [r6, #12]
    1d8c:	cmp	ip, #6
    1d90:	beq	1da8 <coda_mem_int64_new+0x84>
    1d94:	ldr	r0, [pc, #68]	; 1de0 <coda_mem_int64_new+0xbc>
    1d98:	ldr	r1, [pc, #72]	; 1de8 <coda_mem_int64_new+0xc4>
    1d9c:	mov	r2, #896	; 0x380
    1da0:	ldr	r3, [pc, #60]	; 1de4 <coda_mem_int64_new+0xc0>
    1da4:	bl	0 <__assert_fail>
    1da8:	mov	r3, #8
    1dac:	add	ip, sp, #32
    1db0:	str	ip, [sp]
    1db4:	mov	r2, r4
    1db8:	mov	r1, r5
    1dbc:	mov	r0, r6
    1dc0:	bl	14d4 <coda_mem_data_new>
    1dc4:	ldr	r4, [sp, #16]
    1dc8:	ldr	r5, [sp, #20]
    1dcc:	ldr	r6, [sp, #24]
    1dd0:	ldr	lr, [sp, #8]
    1dd4:	add	sp, sp, #40	; 0x28
    1dd8:	bx	lr
    1ddc:	.word	0x00000878
    1de0:	.word	0x000002fa
    1de4:	.word	0x00000c26
    1de8:	.word	0x00000048

00001dec <coda_mem_uint64_new>:
    1dec:	mov	ip, sp
    1df0:	sub	sp, sp, #40	; 0x28
    1df4:	str	ip, [sp, #4]
    1df8:	str	lr, [sp, #8]
    1dfc:	str	r4, [sp, #16]
    1e00:	str	r5, [sp, #20]
    1e04:	str	r6, [sp, #24]
    1e08:	mov	r6, r0
    1e0c:	ldr	r0, [ip, #4]
    1e10:	mov	r5, r1
    1e14:	ldr	r1, [ip]
    1e18:	mov	r4, r2
    1e1c:	str	r1, [sp, #32]
    1e20:	str	r0, [sp, #36]	; 0x24
    1e24:	ldr	r0, [r6, #24]
    1e28:	ldr	r2, [r6, #28]
    1e2c:	eor	r1, r0, #64	; 0x40
    1e30:	orr	ip, r2, r1
    1e34:	cmp	ip, #0
    1e38:	beq	1e50 <coda_mem_uint64_new+0x64>
    1e3c:	ldr	r0, [pc, #96]	; 1ea4 <coda_mem_uint64_new+0xb8>
    1e40:	ldr	r1, [pc, #104]	; 1eb0 <coda_mem_uint64_new+0xc4>
    1e44:	movw	r2, #903	; 0x387
    1e48:	ldr	r3, [pc, #92]	; 1eac <coda_mem_uint64_new+0xc0>
    1e4c:	bl	0 <__assert_fail>
    1e50:	ldr	ip, [r6, #12]
    1e54:	cmp	ip, #7
    1e58:	beq	1e70 <coda_mem_uint64_new+0x84>
    1e5c:	ldr	r0, [pc, #68]	; 1ea8 <coda_mem_uint64_new+0xbc>
    1e60:	ldr	r1, [pc, #72]	; 1eb0 <coda_mem_uint64_new+0xc4>
    1e64:	mov	r2, #904	; 0x388
    1e68:	ldr	r3, [pc, #60]	; 1eac <coda_mem_uint64_new+0xc0>
    1e6c:	bl	0 <__assert_fail>
    1e70:	mov	r3, #8
    1e74:	add	ip, sp, #32
    1e78:	str	ip, [sp]
    1e7c:	mov	r2, r4
    1e80:	mov	r1, r5
    1e84:	mov	r0, r6
    1e88:	bl	14d4 <coda_mem_data_new>
    1e8c:	ldr	r4, [sp, #16]
    1e90:	ldr	r5, [sp, #20]
    1e94:	ldr	r6, [sp, #24]
    1e98:	ldr	lr, [sp, #8]
    1e9c:	add	sp, sp, #40	; 0x28
    1ea0:	bx	lr
    1ea4:	.word	0x00000878
    1ea8:	.word	0x0000032a
    1eac:	.word	0x00000c39
    1eb0:	.word	0x00000048

00001eb4 <coda_mem_float_new>:
    1eb4:	mov	ip, sp
    1eb8:	sub	sp, sp, #40	; 0x28
    1ebc:	str	ip, [sp, #4]
    1ec0:	str	lr, [sp, #8]
    1ec4:	str	r4, [sp, #16]
    1ec8:	str	r5, [sp, #20]
    1ecc:	str	r6, [sp, #24]
    1ed0:	mov	r4, r2
    1ed4:	mov	r5, r1
    1ed8:	mov	r6, r0
    1edc:	vstr	s0, [sp, #32]
    1ee0:	ldr	r0, [r6, #24]
    1ee4:	ldr	r2, [r6, #28]
    1ee8:	eor	r1, r0, #32
    1eec:	orr	ip, r2, r1
    1ef0:	cmp	ip, #0
    1ef4:	beq	1f0c <coda_mem_float_new+0x58>
    1ef8:	ldr	r0, [pc, #100]	; 1f64 <coda_mem_float_new+0xb0>
    1efc:	ldr	r1, [pc, #104]	; 1f6c <coda_mem_float_new+0xb8>
    1f00:	movw	r2, #911	; 0x38f
    1f04:	ldr	r3, [pc, #92]	; 1f68 <coda_mem_float_new+0xb4>
    1f08:	bl	0 <__assert_fail>
    1f0c:	ldr	r3, [r6, #12]
    1f10:	cmp	r3, #8
    1f14:	beq	1f2c <coda_mem_float_new+0x78>
    1f18:	ldr	r0, [pc, #64]	; 1f60 <coda_mem_float_new+0xac>
    1f1c:	ldr	r1, [pc, #72]	; 1f6c <coda_mem_float_new+0xb8>
    1f20:	mov	r2, #912	; 0x390
    1f24:	ldr	r3, [pc, #60]	; 1f68 <coda_mem_float_new+0xb4>
    1f28:	bl	0 <__assert_fail>
    1f2c:	mov	r3, #4
    1f30:	add	ip, sp, #32
    1f34:	str	ip, [sp]
    1f38:	mov	r2, r4
    1f3c:	mov	r1, r5
    1f40:	mov	r0, r6
    1f44:	bl	14d4 <coda_mem_data_new>
    1f48:	ldr	r4, [sp, #16]
    1f4c:	ldr	r5, [sp, #20]
    1f50:	ldr	r6, [sp, #24]
    1f54:	ldr	lr, [sp, #8]
    1f58:	add	sp, sp, #40	; 0x28
    1f5c:	bx	lr
    1f60:	.word	0x00000a2a
    1f64:	.word	0x000008cb
    1f68:	.word	0x00000c4d
    1f6c:	.word	0x00000048

00001f70 <coda_mem_double_new>:
    1f70:	mov	ip, sp
    1f74:	sub	sp, sp, #40	; 0x28
    1f78:	str	ip, [sp, #4]
    1f7c:	str	lr, [sp, #8]
    1f80:	str	r4, [sp, #16]
    1f84:	str	r5, [sp, #20]
    1f88:	str	r6, [sp, #24]
    1f8c:	mov	r4, r2
    1f90:	mov	r5, r1
    1f94:	mov	r6, r0
    1f98:	vstr	d0, [sp, #32]
    1f9c:	ldr	r0, [r6, #24]
    1fa0:	ldr	r2, [r6, #28]
    1fa4:	eor	r1, r0, #64	; 0x40
    1fa8:	orr	ip, r2, r1
    1fac:	cmp	ip, #0
    1fb0:	beq	1fc8 <coda_mem_double_new+0x58>
    1fb4:	ldr	r0, [pc, #96]	; 201c <coda_mem_double_new+0xac>
    1fb8:	ldr	r1, [pc, #104]	; 2028 <coda_mem_double_new+0xb8>
    1fbc:	movw	r2, #919	; 0x397
    1fc0:	ldr	r3, [pc, #92]	; 2024 <coda_mem_double_new+0xb4>
    1fc4:	bl	0 <__assert_fail>
    1fc8:	ldr	r3, [r6, #12]
    1fcc:	cmp	r3, #9
    1fd0:	beq	1fe8 <coda_mem_double_new+0x78>
    1fd4:	ldr	r0, [pc, #68]	; 2020 <coda_mem_double_new+0xb0>
    1fd8:	ldr	r1, [pc, #72]	; 2028 <coda_mem_double_new+0xb8>
    1fdc:	mov	r2, #920	; 0x398
    1fe0:	ldr	r3, [pc, #60]	; 2024 <coda_mem_double_new+0xb4>
    1fe4:	bl	0 <__assert_fail>
    1fe8:	mov	r3, #8
    1fec:	add	ip, sp, #32
    1ff0:	str	ip, [sp]
    1ff4:	mov	r2, r4
    1ff8:	mov	r1, r5
    1ffc:	mov	r0, r6
    2000:	bl	14d4 <coda_mem_data_new>
    2004:	ldr	r4, [sp, #16]
    2008:	ldr	r5, [sp, #20]
    200c:	ldr	r6, [sp, #24]
    2010:	ldr	lr, [sp, #8]
    2014:	add	sp, sp, #40	; 0x28
    2018:	bx	lr
    201c:	.word	0x00000878
    2020:	.word	0x00000426
    2024:	.word	0x00000c60
    2028:	.word	0x00000048

0000202c <coda_mem_char_new>:
    202c:	mov	ip, sp
    2030:	sub	sp, sp, #40	; 0x28
    2034:	str	ip, [sp, #4]
    2038:	str	lr, [sp, #8]
    203c:	str	r4, [sp, #16]
    2040:	str	r5, [sp, #20]
    2044:	str	r6, [sp, #24]
    2048:	mov	r5, r2
    204c:	mov	r4, r1
    2050:	mov	r6, r0
    2054:	strb	r3, [sp, #32]
    2058:	ldr	r0, [r6, #24]
    205c:	ldr	r2, [r6, #28]
    2060:	eor	r1, r0, #8
    2064:	orr	ip, r2, r1
    2068:	cmp	ip, #0
    206c:	beq	2084 <coda_mem_char_new+0x58>
    2070:	ldr	r0, [pc, #96]	; 20d8 <coda_mem_char_new+0xac>
    2074:	ldr	r1, [pc, #104]	; 20e4 <coda_mem_char_new+0xb8>
    2078:	movw	r2, #927	; 0x39f
    207c:	ldr	r3, [pc, #92]	; 20e0 <coda_mem_char_new+0xb4>
    2080:	bl	0 <__assert_fail>
    2084:	ldr	r2, [r6, #12]
    2088:	cmp	r2, #10
    208c:	beq	20a4 <coda_mem_char_new+0x78>
    2090:	ldr	r0, [pc, #68]	; 20dc <coda_mem_char_new+0xb0>
    2094:	ldr	r1, [pc, #72]	; 20e4 <coda_mem_char_new+0xb8>
    2098:	mov	r2, #928	; 0x3a0
    209c:	ldr	r3, [pc, #60]	; 20e0 <coda_mem_char_new+0xb4>
    20a0:	bl	0 <__assert_fail>
    20a4:	mov	r3, #1
    20a8:	add	ip, sp, #32
    20ac:	str	ip, [sp]
    20b0:	mov	r2, r5
    20b4:	mov	r1, r4
    20b8:	mov	r0, r6
    20bc:	bl	14d4 <coda_mem_data_new>
    20c0:	ldr	r4, [sp, #16]
    20c4:	ldr	r5, [sp, #20]
    20c8:	ldr	r6, [sp, #24]
    20cc:	ldr	lr, [sp, #8]
    20d0:	add	sp, sp, #40	; 0x28
    20d4:	bx	lr
    20d8:	.word	0x00000969
    20dc:	.word	0x0000029a
    20e0:	.word	0x00000c74
    20e4:	.word	0x00000048

000020e8 <coda_mem_string_new>:
    20e8:	mov	ip, sp
    20ec:	sub	sp, sp, #32
    20f0:	str	ip, [sp, #4]
    20f4:	str	lr, [sp, #8]
    20f8:	str	r4, [sp, #16]
    20fc:	str	r5, [sp, #20]
    2100:	str	r6, [sp, #24]
    2104:	str	r7, [sp, #28]
    2108:	mov	r4, r3
    210c:	mov	r6, r2
    2110:	mov	r7, r1
    2114:	mov	r5, r0
    2118:	ldr	r1, [r5, #12]
    211c:	cmp	r1, #11
    2120:	beq	2138 <coda_mem_string_new+0x50>
    2124:	ldr	r0, [pc, #92]	; 2188 <coda_mem_string_new+0xa0>
    2128:	ldr	r1, [pc, #92]	; 218c <coda_mem_string_new+0xa4>
    212c:	movw	r2, #935	; 0x3a7
    2130:	ldr	r3, [pc, #76]	; 2184 <coda_mem_string_new+0x9c>
    2134:	bl	0 <__assert_fail>
    2138:	cmp	r4, #0
    213c:	beq	2150 <coda_mem_string_new+0x68>
    2140:	mov	r0, r4
    2144:	bl	0 <strlen>
    2148:	mov	r3, r0
    214c:	b	2154 <coda_mem_string_new+0x6c>
    2150:	mov	r3, #0
    2154:	str	r4, [sp]
    2158:	mov	r2, r6
    215c:	mov	r1, r7
    2160:	mov	r0, r5
    2164:	bl	14d4 <coda_mem_data_new>
    2168:	ldr	r4, [sp, #16]
    216c:	ldr	r5, [sp, #20]
    2170:	ldr	r6, [sp, #24]
    2174:	ldr	r7, [sp, #28]
    2178:	ldr	lr, [sp, #8]
    217c:	add	sp, sp, #32
    2180:	bx	lr
    2184:	.word	0x00000c86
    2188:	.word	0x000002c9
    218c:	.word	0x00000048

00002190 <coda_mem_raw_new>:
    2190:	mov	ip, sp
    2194:	sub	sp, sp, #40	; 0x28
    2198:	str	ip, [sp, #4]
    219c:	str	lr, [sp, #8]
    21a0:	str	r4, [sp, #16]
    21a4:	str	r5, [sp, #20]
    21a8:	str	r6, [sp, #24]
    21ac:	str	r7, [sp, #28]
    21b0:	str	r8, [sp, #32]
    21b4:	ldr	r7, [ip]
    21b8:	mov	r5, r3
    21bc:	mov	r6, r2
    21c0:	mov	r4, r1
    21c4:	mov	r8, r0
    21c8:	ldr	r1, [r8, #8]
    21cc:	cmp	r1, #5
    21d0:	beq	21e8 <coda_mem_raw_new+0x58>
    21d4:	ldr	r0, [pc, #68]	; 2220 <coda_mem_raw_new+0x90>
    21d8:	ldr	r1, [pc, #72]	; 2228 <coda_mem_raw_new+0x98>
    21dc:	movw	r2, #943	; 0x3af
    21e0:	ldr	r3, [pc, #60]	; 2224 <coda_mem_raw_new+0x94>
    21e4:	bl	0 <__assert_fail>
    21e8:	str	r7, [sp]
    21ec:	mov	r3, r5
    21f0:	mov	r2, r6
    21f4:	mov	r1, r4
    21f8:	mov	r0, r8
    21fc:	bl	14d4 <coda_mem_data_new>
    2200:	ldr	r4, [sp, #16]
    2204:	ldr	r5, [sp, #20]
    2208:	ldr	r6, [sp, #24]
    220c:	ldr	r7, [sp, #28]
    2210:	ldr	r8, [sp, #32]
    2214:	ldr	lr, [sp, #8]
    2218:	add	sp, sp, #40	; 0x28
    221c:	bx	lr
    2220:	.word	0x000001dc
    2224:	.word	0x00000c9a
    2228:	.word	0x00000048

0000222c <coda_mem_time_new>:
    222c:	mov	ip, sp
    2230:	sub	sp, sp, #32
    2234:	str	ip, [sp, #4]
    2238:	str	lr, [sp, #8]
    223c:	str	r4, [sp, #16]
    2240:	str	r5, [sp, #20]
    2244:	str	r6, [sp, #24]
    2248:	str	r7, [sp, #28]
    224c:	mov	r5, r2
    2250:	mov	r6, r1
    2254:	mov	r7, r0
    2258:	cmp	r7, #0
    225c:	bne	227c <coda_mem_time_new+0x50>
    2260:	mvn	r0, #99	; 0x63
    2264:	ldr	r1, [pc, #320]	; 23ac <coda_mem_time_new+0x180>
    2268:	ldr	r2, [pc, #324]	; 23b4 <coda_mem_time_new+0x188>
    226c:	movw	r3, #954	; 0x3ba
    2270:	bl	0 <coda_set_error>
    2274:	mov	r0, #0
    2278:	b	2388 <coda_mem_time_new+0x15c>
    227c:	ldr	r1, [r7, #8]
    2280:	cmp	r1, #6
    2284:	beq	22a4 <coda_mem_time_new+0x78>
    2288:	mvn	r0, #99	; 0x63
    228c:	ldr	r1, [pc, #292]	; 23b8 <coda_mem_time_new+0x18c>
    2290:	ldr	r2, [pc, #284]	; 23b4 <coda_mem_time_new+0x188>
    2294:	movw	r3, #959	; 0x3bf
    2298:	bl	0 <coda_set_error>
    229c:	mov	r0, #0
    22a0:	b	2388 <coda_mem_time_new+0x15c>
    22a4:	ldr	ip, [r7, #40]	; 0x28
    22a8:	cmp	ip, #2
    22ac:	beq	22cc <coda_mem_time_new+0xa0>
    22b0:	mvn	r0, #99	; 0x63
    22b4:	ldr	r1, [pc, #232]	; 23a4 <coda_mem_time_new+0x178>
    22b8:	ldr	r2, [pc, #244]	; 23b4 <coda_mem_time_new+0x188>
    22bc:	mov	r3, #964	; 0x3c4
    22c0:	bl	0 <coda_set_error>
    22c4:	mov	r0, #0
    22c8:	b	2388 <coda_mem_time_new+0x15c>
    22cc:	ldr	r1, [r7, #44]	; 0x2c
    22d0:	ldr	ip, [r5, #4]
    22d4:	cmp	r1, ip
    22d8:	beq	22f8 <coda_mem_time_new+0xcc>
    22dc:	mvn	r0, #99	; 0x63
    22e0:	ldr	r1, [pc, #192]	; 23a8 <coda_mem_time_new+0x17c>
    22e4:	ldr	r2, [pc, #200]	; 23b4 <coda_mem_time_new+0x188>
    22e8:	movw	r3, #970	; 0x3ca
    22ec:	bl	0 <coda_set_error>
    22f0:	mov	r0, #0
    22f4:	b	2388 <coda_mem_time_new+0x15c>
    22f8:	mov	r0, #20
    22fc:	bl	0 <malloc>
    2300:	mov	r4, r0
    2304:	cmp	r4, #0
    2308:	bne	2330 <coda_mem_time_new+0x104>
    230c:	mvn	r0, #0
    2310:	ldr	r1, [pc, #152]	; 23b0 <coda_mem_time_new+0x184>
    2314:	mov	r2, #20
    2318:	ldr	r3, [pc, #148]	; 23b4 <coda_mem_time_new+0x188>
    231c:	movw	ip, #978	; 0x3d2
    2320:	str	ip, [sp]
    2324:	bl	0 <coda_set_error>
    2328:	mov	r0, #0
    232c:	b	2388 <coda_mem_time_new+0x15c>
    2330:	mov	r3, #100	; 0x64
    2334:	str	r3, [r4]
    2338:	str	r7, [r4, #4]
    233c:	ldr	r2, [r7, #4]
    2340:	add	ip, r2, #1
    2344:	str	ip, [r7, #4]
    2348:	mov	r0, #3
    234c:	str	r0, [r4, #8]
    2350:	str	r6, [r4, #12]
    2354:	str	r5, [r4, #16]
    2358:	ldr	r0, [r4, #12]
    235c:	cmp	r0, #0
    2360:	bne	2384 <coda_mem_time_new+0x158>
    2364:	mov	r0, r4
    2368:	bl	59c <create_attributes_record>
    236c:	cmp	r0, #0
    2370:	beq	2384 <coda_mem_time_new+0x158>
    2374:	mov	r0, r4
    2378:	bl	0 <coda_mem_type_delete>
    237c:	mov	r0, #0
    2380:	b	2388 <coda_mem_time_new+0x15c>
    2384:	mov	r0, r4
    2388:	ldr	r4, [sp, #16]
    238c:	ldr	r5, [sp, #20]
    2390:	ldr	r6, [sp, #24]
    2394:	ldr	r7, [sp, #28]
    2398:	ldr	lr, [sp, #8]
    239c:	add	sp, sp, #32
    23a0:	bx	lr
    23a4:	.word	0x000004f2
    23a8:	.word	0x00000693
    23ac:	.word	0x00000a06
    23b0:	.word	0x00000916
    23b4:	.word	0x00000048
    23b8:	.word	0x00000518

000023bc <coda_mem_no_data_new>:
    23bc:	mov	ip, sp
    23c0:	sub	sp, sp, #24
    23c4:	str	ip, [sp, #4]
    23c8:	str	lr, [sp, #8]
    23cc:	str	r4, [sp, #16]
    23d0:	str	r5, [sp, #20]
    23d4:	mov	r5, r0
    23d8:	mov	r0, #20
    23dc:	bl	0 <malloc>
    23e0:	mov	r4, r0
    23e4:	cmp	r4, #0
    23e8:	bne	2410 <coda_mem_no_data_new+0x54>
    23ec:	mvn	r0, #0
    23f0:	ldr	r1, [pc, #228]	; 24dc <coda_mem_no_data_new+0x120>
    23f4:	mov	r2, #20
    23f8:	ldr	r3, [pc, #224]	; 24e0 <coda_mem_no_data_new+0x124>
    23fc:	movw	r4, #1009	; 0x3f1
    2400:	str	r4, [sp]
    2404:	bl	0 <coda_set_error>
    2408:	mov	r0, #0
    240c:	b	24c8 <coda_mem_no_data_new+0x10c>
    2410:	mov	r3, #100	; 0x64
    2414:	str	r3, [r4]
    2418:	mov	r0, #0
    241c:	str	r0, [r4, #4]
    2420:	mov	r2, #3
    2424:	str	r2, [r4, #8]
    2428:	mov	ip, #0
    242c:	str	ip, [r4, #12]
    2430:	mov	r1, #0
    2434:	str	r1, [r4, #16]
    2438:	mov	r0, r5
    243c:	bl	0 <coda_type_no_data_singleton>
    2440:	str	r0, [r4, #4]
    2444:	cmp	r0, #0
    2448:	bne	245c <coda_mem_no_data_new+0xa0>
    244c:	mov	r0, r4
    2450:	bl	0 <coda_mem_type_delete>
    2454:	mov	r0, #0
    2458:	b	24c8 <coda_mem_no_data_new+0x10c>
    245c:	ldr	r3, [r0, #4]
    2460:	add	r2, r3, #1
    2464:	str	r2, [r0, #4]
    2468:	ldr	ip, [r4, #4]
    246c:	ldr	r0, [ip, #44]	; 0x2c
    2470:	mov	r1, #0
    2474:	mov	r2, #0
    2478:	mov	r3, #0
    247c:	mov	ip, #0
    2480:	str	ip, [sp]
    2484:	bl	2190 <coda_mem_raw_new>
    2488:	str	r0, [r4, #16]
    248c:	cmp	r0, #0
    2490:	bne	24a4 <coda_mem_no_data_new+0xe8>
    2494:	mov	r0, r4
    2498:	bl	0 <coda_mem_type_delete>
    249c:	mov	r0, #0
    24a0:	b	24c8 <coda_mem_no_data_new+0x10c>
    24a4:	mov	r0, r4
    24a8:	bl	59c <create_attributes_record>
    24ac:	cmp	r0, #0
    24b0:	beq	24c4 <coda_mem_no_data_new+0x108>
    24b4:	mov	r0, r4
    24b8:	bl	0 <coda_mem_type_delete>
    24bc:	mov	r0, #0
    24c0:	b	24c8 <coda_mem_no_data_new+0x10c>
    24c4:	mov	r0, r4
    24c8:	ldr	r4, [sp, #16]
    24cc:	ldr	r5, [sp, #20]
    24d0:	ldr	lr, [sp, #8]
    24d4:	add	sp, sp, #24
    24d8:	bx	lr
    24dc:	.word	0x00000916
    24e0:	.word	0x00000048
