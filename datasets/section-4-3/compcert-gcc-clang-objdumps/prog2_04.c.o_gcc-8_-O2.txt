
../compcert-repos/prog2/CMakeFiles/0.4.dir/Aula00_Conceitos_base/04.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ordenado>:
   0:	cmp	r1, #1
   4:	ldr	r3, [r0]
   8:	ble	40 <ordenado+0x40>
   c:	ldr	ip, [r0, #4]
  10:	cmp	r3, ip
  14:	bgt	48 <ordenado+0x48>
  18:	add	r0, r0, #4
  1c:	mov	r3, #1
  20:	b	34 <ordenado+0x34>
  24:	ldr	r2, [r0, #4]!
  28:	cmp	r2, ip
  2c:	mov	ip, r2
  30:	blt	48 <ordenado+0x48>
  34:	add	r3, r3, #1
  38:	cmp	r1, r3
  3c:	bne	24 <ordenado+0x24>
  40:	mov	r0, #1
  44:	bx	lr
  48:	mov	r0, #0
  4c:	bx	lr

Disassembly of section .text.startup:

00000000 <main>:
   0:	movw	r0, #0
   4:	movt	r0, #0
   8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   c:	strd	r6, [sp, #8]
  10:	str	r8, [sp, #16]
  14:	str	lr, [sp, #20]
  18:	sub	sp, sp, #8
  1c:	bl	0 <printf>
  20:	movw	r0, #0
  24:	movt	r0, #0
  28:	add	r1, sp, #4
  2c:	bl	0 <__isoc99_scanf>
  30:	ldr	r0, [sp, #4]
  34:	cmp	r0, #100	; 0x64
  38:	bgt	158 <main+0x158>
  3c:	lsl	r0, r0, #2
  40:	bl	0 <malloc>
  44:	ldr	r3, [sp, #4]
  48:	mov	r6, r0
  4c:	cmp	r3, #0
  50:	ble	d8 <main+0xd8>
  54:	movw	r8, #0
  58:	movt	r8, #0
  5c:	movw	r7, #0
  60:	movt	r7, #0
  64:	mov	r5, r0
  68:	mov	r4, #0
  6c:	add	r4, r4, #1
  70:	mov	r0, r8
  74:	mov	r1, r4
  78:	bl	0 <printf>
  7c:	mov	r1, r5
  80:	mov	r0, r7
  84:	bl	0 <__isoc99_scanf>
  88:	ldr	r2, [sp, #4]
  8c:	add	r5, r5, #4
  90:	cmp	r4, r2
  94:	blt	6c <main+0x6c>
  98:	cmp	r2, #1
  9c:	ldr	r3, [r6]
  a0:	ble	d8 <main+0xd8>
  a4:	ldr	r0, [r6, #4]
  a8:	cmp	r3, r0
  ac:	bgt	148 <main+0x148>
  b0:	add	ip, r6, #4
  b4:	mov	r3, #1
  b8:	b	cc <main+0xcc>
  bc:	ldr	r1, [ip, #4]!
  c0:	cmp	r1, r0
  c4:	mov	r0, r1
  c8:	blt	148 <main+0x148>
  cc:	add	r3, r3, #1
  d0:	cmp	r2, r3
  d4:	bne	bc <main+0xbc>
  d8:	movw	r0, #0
  dc:	movt	r0, #0
  e0:	bl	0 <printf>
  e4:	ldr	r4, [sp, #4]
  e8:	sub	r3, r4, #1
  ec:	cmp	r3, #0
  f0:	ble	11c <main+0x11c>
  f4:	add	r4, r6, r4, lsl #2
  f8:	movw	r5, #0
  fc:	movt	r5, #0
 100:	add	r7, r6, #4
 104:	ldr	r1, [r4, #-4]!
 108:	mov	r0, r5
 10c:	bl	0 <printf>
 110:	cmp	r7, r4
 114:	bne	104 <main+0x104>
 118:	mov	r3, #0
 11c:	movw	r0, #0
 120:	movt	r0, #0
 124:	ldr	r1, [r6, r3, lsl #2]
 128:	bl	0 <printf>
 12c:	mov	r0, #0
 130:	add	sp, sp, #8
 134:	ldrd	r4, [sp]
 138:	ldrd	r6, [sp, #8]
 13c:	ldr	r8, [sp, #16]
 140:	add	sp, sp, #20
 144:	pop	{pc}		; (ldr pc, [sp], #4)
 148:	movw	r0, #0
 14c:	movt	r0, #0
 150:	bl	0 <puts>
 154:	b	12c <main+0x12c>
 158:	movw	r0, #0
 15c:	movt	r0, #0
 160:	bl	0 <printf>
 164:	mov	r3, #100	; 0x64
 168:	mov	r0, r3
 16c:	str	r3, [sp, #4]
 170:	b	3c <main+0x3c>
