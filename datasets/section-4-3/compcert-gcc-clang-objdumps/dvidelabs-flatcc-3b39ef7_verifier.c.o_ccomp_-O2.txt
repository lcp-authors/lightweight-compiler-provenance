
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/json_test_uql.dir/__/__/src/runtime/verifier.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatcc_verify_error_string>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	cmp	r0, #37	; 0x25
      14:	bcs	1dc <flatcc_verify_error_string+0x1dc>
      18:	add	pc, pc, r0, lsl #2
      1c:	nop	{0}
      20:	b	b4 <flatcc_verify_error_string+0xb4>
      24:	b	bc <flatcc_verify_error_string+0xbc>
      28:	b	c4 <flatcc_verify_error_string+0xc4>
      2c:	b	cc <flatcc_verify_error_string+0xcc>
      30:	b	d4 <flatcc_verify_error_string+0xd4>
      34:	b	dc <flatcc_verify_error_string+0xdc>
      38:	b	e4 <flatcc_verify_error_string+0xe4>
      3c:	b	ec <flatcc_verify_error_string+0xec>
      40:	b	f4 <flatcc_verify_error_string+0xf4>
      44:	b	fc <flatcc_verify_error_string+0xfc>
      48:	b	104 <flatcc_verify_error_string+0x104>
      4c:	b	10c <flatcc_verify_error_string+0x10c>
      50:	b	114 <flatcc_verify_error_string+0x114>
      54:	b	11c <flatcc_verify_error_string+0x11c>
      58:	b	124 <flatcc_verify_error_string+0x124>
      5c:	b	12c <flatcc_verify_error_string+0x12c>
      60:	b	134 <flatcc_verify_error_string+0x134>
      64:	b	13c <flatcc_verify_error_string+0x13c>
      68:	b	144 <flatcc_verify_error_string+0x144>
      6c:	b	14c <flatcc_verify_error_string+0x14c>
      70:	b	154 <flatcc_verify_error_string+0x154>
      74:	b	15c <flatcc_verify_error_string+0x15c>
      78:	b	164 <flatcc_verify_error_string+0x164>
      7c:	b	16c <flatcc_verify_error_string+0x16c>
      80:	b	174 <flatcc_verify_error_string+0x174>
      84:	b	17c <flatcc_verify_error_string+0x17c>
      88:	b	184 <flatcc_verify_error_string+0x184>
      8c:	b	18c <flatcc_verify_error_string+0x18c>
      90:	b	194 <flatcc_verify_error_string+0x194>
      94:	b	19c <flatcc_verify_error_string+0x19c>
      98:	b	1a4 <flatcc_verify_error_string+0x1a4>
      9c:	b	1ac <flatcc_verify_error_string+0x1ac>
      a0:	b	1b4 <flatcc_verify_error_string+0x1b4>
      a4:	b	1bc <flatcc_verify_error_string+0x1bc>
      a8:	b	1c4 <flatcc_verify_error_string+0x1c4>
      ac:	b	1cc <flatcc_verify_error_string+0x1cc>
      b0:	b	1d4 <flatcc_verify_error_string+0x1d4>
      b4:	ldr	r0, [pc, #332]	; 208 <flatcc_verify_error_string+0x208>
      b8:	b	1e0 <flatcc_verify_error_string+0x1e0>
      bc:	ldr	r0, [pc, #404]	; 258 <flatcc_verify_error_string+0x258>
      c0:	b	1e0 <flatcc_verify_error_string+0x1e0>
      c4:	ldr	r0, [pc, #428]	; 278 <flatcc_verify_error_string+0x278>
      c8:	b	1e0 <flatcc_verify_error_string+0x1e0>
      cc:	ldr	r0, [pc, #352]	; 234 <flatcc_verify_error_string+0x234>
      d0:	b	1e0 <flatcc_verify_error_string+0x1e0>
      d4:	ldr	r0, [pc, #404]	; 270 <flatcc_verify_error_string+0x270>
      d8:	b	1e0 <flatcc_verify_error_string+0x1e0>
      dc:	ldr	r0, [pc, #276]	; 1f8 <flatcc_verify_error_string+0x1f8>
      e0:	b	1e0 <flatcc_verify_error_string+0x1e0>
      e4:	ldr	r0, [pc, #384]	; 26c <flatcc_verify_error_string+0x26c>
      e8:	b	1e0 <flatcc_verify_error_string+0x1e0>
      ec:	ldr	r0, [pc, #392]	; 27c <flatcc_verify_error_string+0x27c>
      f0:	b	1e0 <flatcc_verify_error_string+0x1e0>
      f4:	ldr	r0, [pc, #272]	; 20c <flatcc_verify_error_string+0x20c>
      f8:	b	1e0 <flatcc_verify_error_string+0x1e0>
      fc:	ldr	r0, [pc, #312]	; 23c <flatcc_verify_error_string+0x23c>
     100:	b	1e0 <flatcc_verify_error_string+0x1e0>
     104:	ldr	r0, [pc, #284]	; 228 <flatcc_verify_error_string+0x228>
     108:	b	1e0 <flatcc_verify_error_string+0x1e0>
     10c:	ldr	r0, [pc, #336]	; 264 <flatcc_verify_error_string+0x264>
     110:	b	1e0 <flatcc_verify_error_string+0x1e0>
     114:	ldr	r0, [pc, #212]	; 1f0 <flatcc_verify_error_string+0x1f0>
     118:	b	1e0 <flatcc_verify_error_string+0x1e0>
     11c:	ldr	r0, [pc, #276]	; 238 <flatcc_verify_error_string+0x238>
     120:	b	1e0 <flatcc_verify_error_string+0x1e0>
     124:	ldr	r0, [pc, #228]	; 210 <flatcc_verify_error_string+0x210>
     128:	b	1e0 <flatcc_verify_error_string+0x1e0>
     12c:	ldr	r0, [pc, #204]	; 200 <flatcc_verify_error_string+0x200>
     130:	b	1e0 <flatcc_verify_error_string+0x1e0>
     134:	ldr	r0, [pc, #324]	; 280 <flatcc_verify_error_string+0x280>
     138:	b	1e0 <flatcc_verify_error_string+0x1e0>
     13c:	ldr	r0, [pc, #212]	; 218 <flatcc_verify_error_string+0x218>
     140:	b	1e0 <flatcc_verify_error_string+0x1e0>
     144:	ldr	r0, [pc, #260]	; 250 <flatcc_verify_error_string+0x250>
     148:	b	1e0 <flatcc_verify_error_string+0x1e0>
     14c:	ldr	r0, [pc, #220]	; 230 <flatcc_verify_error_string+0x230>
     150:	b	1e0 <flatcc_verify_error_string+0x1e0>
     154:	ldr	r0, [pc, #268]	; 268 <flatcc_verify_error_string+0x268>
     158:	b	1e0 <flatcc_verify_error_string+0x1e0>
     15c:	ldr	r0, [pc, #136]	; 1ec <flatcc_verify_error_string+0x1ec>
     160:	b	1e0 <flatcc_verify_error_string+0x1e0>
     164:	ldr	r0, [pc, #264]	; 274 <flatcc_verify_error_string+0x274>
     168:	b	1e0 <flatcc_verify_error_string+0x1e0>
     16c:	ldr	r0, [pc, #224]	; 254 <flatcc_verify_error_string+0x254>
     170:	b	1e0 <flatcc_verify_error_string+0x1e0>
     174:	ldr	r0, [pc, #196]	; 240 <flatcc_verify_error_string+0x240>
     178:	b	1e0 <flatcc_verify_error_string+0x1e0>
     17c:	ldr	r0, [pc, #216]	; 25c <flatcc_verify_error_string+0x25c>
     180:	b	1e0 <flatcc_verify_error_string+0x1e0>
     184:	ldr	r0, [pc, #104]	; 1f4 <flatcc_verify_error_string+0x1f4>
     188:	b	1e0 <flatcc_verify_error_string+0x1e0>
     18c:	ldr	r0, [pc, #140]	; 220 <flatcc_verify_error_string+0x220>
     190:	b	1e0 <flatcc_verify_error_string+0x1e0>
     194:	ldr	r0, [pc, #96]	; 1fc <flatcc_verify_error_string+0x1fc>
     198:	b	1e0 <flatcc_verify_error_string+0x1e0>
     19c:	ldr	r0, [pc, #112]	; 214 <flatcc_verify_error_string+0x214>
     1a0:	b	1e0 <flatcc_verify_error_string+0x1e0>
     1a4:	ldr	r0, [pc, #128]	; 22c <flatcc_verify_error_string+0x22c>
     1a8:	b	1e0 <flatcc_verify_error_string+0x1e0>
     1ac:	ldr	r0, [pc, #148]	; 248 <flatcc_verify_error_string+0x248>
     1b0:	b	1e0 <flatcc_verify_error_string+0x1e0>
     1b4:	ldr	r0, [pc, #164]	; 260 <flatcc_verify_error_string+0x260>
     1b8:	b	1e0 <flatcc_verify_error_string+0x1e0>
     1bc:	ldr	r0, [pc, #136]	; 24c <flatcc_verify_error_string+0x24c>
     1c0:	b	1e0 <flatcc_verify_error_string+0x1e0>
     1c4:	ldr	r0, [pc, #88]	; 224 <flatcc_verify_error_string+0x224>
     1c8:	b	1e0 <flatcc_verify_error_string+0x1e0>
     1cc:	ldr	r0, [pc, #72]	; 21c <flatcc_verify_error_string+0x21c>
     1d0:	b	1e0 <flatcc_verify_error_string+0x1e0>
     1d4:	ldr	r0, [pc, #104]	; 244 <flatcc_verify_error_string+0x244>
     1d8:	b	1e0 <flatcc_verify_error_string+0x1e0>
     1dc:	ldr	r0, [pc, #32]	; 204 <flatcc_verify_error_string+0x204>
     1e0:	ldr	lr, [sp, #4]
     1e4:	add	sp, sp, #8
     1e8:	bx	lr
     1ec:	.word	0x00000261
     1f0:	.word	0x0000006a
     1f4:	.word	0x00000141
     1f8:	.word	0x00000191
     1fc:	.word	0x000000e7
     200:	.word	0x00000367
     204:	.word	0x00000062
     208:	.word	0x000003ea
     20c:	.word	0x0000028d
     210:	.word	0x0000021e
     214:	.word	0x00000440
     218:	.word	0x0000033f
     21c:	.word	0x00000169
     220:	.word	0x00000126
     224:	.word	0x000003ed
     228:	.word	0x00000303
     22c:	.word	0x000000c1
     230:	.word	0x000000ff
     234:	.word	0x000000a7
     238:	.word	0x000003d1
     23c:	.word	0x000001f5
     240:	.word	0x00000238
     244:	.word	0x000002b2
     248:	.word	0x00000209
     24c:	.word	0x00000082
     250:	.word	0x000002ef
     254:	.word	0x000001b4
     258:	.word	0x000001dd
     25c:	.word	0x00000000
     260:	.word	0x00000318
     264:	.word	0x000002a1
     268:	.word	0x000002c0
     26c:	.word	0x00000421
     270:	.word	0x000002d8
     274:	.word	0x0000002f
     278:	.word	0x00000155
     27c:	.word	0x0000038e
     280:	.word	0x000003a9

00000284 <verify_field>:
     284:	mov	ip, sp
     288:	sub	sp, sp, #16
     28c:	str	ip, [sp]
     290:	str	lr, [sp, #4]
     294:	str	r4, [sp, #8]
     298:	str	r5, [sp, #12]
     29c:	ldr	r4, [ip]
     2a0:	ldr	ip, [r0]
     2a4:	lsl	r1, r1, #1
     2a8:	add	r1, r1, #4
     2ac:	bic	r1, r1, #16711680	; 0xff0000
     2b0:	bic	r1, r1, #-16777216	; 0xff000000
     2b4:	ldrh	r5, [r0, #22]
     2b8:	cmp	r1, r5
     2bc:	blt	2c8 <verify_field+0x44>
     2c0:	mov	r1, #0
     2c4:	b	2d4 <verify_field+0x50>
     2c8:	ldr	r5, [r0, #12]
     2cc:	add	r1, r5, r1
     2d0:	ldrh	r1, [r1]
     2d4:	bic	r1, r1, #16711680	; 0xff0000
     2d8:	bic	r1, r1, #-16777216	; 0xff000000
     2dc:	cmp	r1, #0
     2e0:	bne	2fc <verify_field+0x78>
     2e4:	cmp	r2, #0
     2e8:	beq	2f4 <verify_field+0x70>
     2ec:	mov	r0, #4
     2f0:	b	350 <verify_field+0xcc>
     2f4:	mov	r0, #0
     2f8:	b	350 <verify_field+0xcc>
     2fc:	add	r3, r1, r3
     300:	ldrh	r2, [r0, #20]
     304:	cmp	r3, r2
     308:	bls	314 <verify_field+0x90>
     30c:	mov	r0, #13
     310:	b	350 <verify_field+0xcc>
     314:	mov	r3, #1
     318:	cmp	r3, #0
     31c:	bne	328 <verify_field+0xa4>
     320:	mov	r0, #14
     324:	b	350 <verify_field+0xcc>
     328:	ldr	r0, [r0, #16]
     32c:	add	r2, r0, ip
     330:	add	r1, r1, r2
     334:	sub	r2, r4, #1
     338:	and	r0, r1, r2
     33c:	cmp	r0, #0
     340:	beq	34c <verify_field+0xc8>
     344:	mov	r0, #12
     348:	b	350 <verify_field+0xcc>
     34c:	mov	r0, #0
     350:	ldr	r4, [sp, #8]
     354:	ldr	r5, [sp, #12]
     358:	ldr	lr, [sp, #4]
     35c:	add	sp, sp, #16
     360:	bx	lr

00000364 <get_offset_field>:
     364:	mov	ip, sp
     368:	sub	sp, sp, #8
     36c:	str	ip, [sp]
     370:	str	lr, [sp, #4]
     374:	lsl	ip, r1, #1
     378:	add	r1, ip, #4
     37c:	bic	r1, r1, #16711680	; 0xff0000
     380:	bic	r1, r1, #-16777216	; 0xff000000
     384:	ldrh	ip, [r0, #22]
     388:	cmp	r1, ip
     38c:	blt	398 <get_offset_field+0x34>
     390:	mov	r1, #0
     394:	b	3a4 <get_offset_field+0x40>
     398:	ldr	ip, [r0, #12]
     39c:	add	ip, ip, r1
     3a0:	ldrh	r1, [ip]
     3a4:	bic	ip, r1, #16711680	; 0xff0000
     3a8:	bic	ip, ip, #-16777216	; 0xff000000
     3ac:	cmp	ip, #0
     3b0:	bne	3d4 <get_offset_field+0x70>
     3b4:	mov	ip, #0
     3b8:	str	ip, [r3]
     3bc:	cmp	r2, #0
     3c0:	beq	3cc <get_offset_field+0x68>
     3c4:	mov	r0, #4
     3c8:	b	424 <get_offset_field+0xc0>
     3cc:	mov	r0, #0
     3d0:	b	424 <get_offset_field+0xc0>
     3d4:	add	r2, ip, #4
     3d8:	ldrh	r1, [r0, #20]
     3dc:	cmp	r2, r1
     3e0:	bls	3ec <get_offset_field+0x88>
     3e4:	mov	r0, #13
     3e8:	b	424 <get_offset_field+0xc0>
     3ec:	mov	r1, #1
     3f0:	cmp	r1, #0
     3f4:	bne	400 <get_offset_field+0x9c>
     3f8:	mov	r0, #14
     3fc:	b	424 <get_offset_field+0xc0>
     400:	ldr	r0, [r0, #16]
     404:	add	ip, ip, r0
     408:	and	r1, ip, #3
     40c:	cmp	r1, #0
     410:	beq	41c <get_offset_field+0xb8>
     414:	mov	r0, #12
     418:	b	424 <get_offset_field+0xc0>
     41c:	str	ip, [r3]
     420:	mov	r0, #0
     424:	ldr	lr, [sp, #4]
     428:	add	sp, sp, #8
     42c:	bx	lr

00000430 <flatcc_verify_field>:
     430:	mov	ip, sp
     434:	sub	sp, sp, #32
     438:	str	ip, [sp, #4]
     43c:	str	lr, [sp, #8]
     440:	str	r4, [sp, #16]
     444:	str	r5, [sp, #20]
     448:	str	r6, [sp, #24]
     44c:	str	r7, [sp, #28]
     450:	mov	r6, r3
     454:	mov	r4, r2
     458:	mov	r7, r1
     45c:	mov	r5, r0
     460:	bic	r1, r7, #16711680	; 0xff0000
     464:	bic	r1, r1, #-16777216	; 0xff000000
     468:	mov	r2, #0
     46c:	bic	r3, r6, #16711680	; 0xff0000
     470:	bic	r3, r3, #-16777216	; 0xff000000
     474:	str	r3, [sp]
     478:	mov	r3, r4
     47c:	mov	r0, r5
     480:	bl	284 <verify_field>
     484:	cmp	r0, #0
     488:	beq	4b4 <flatcc_verify_field+0x84>
     48c:	bic	r1, r7, #16711680	; 0xff0000
     490:	bic	r1, r1, #-16777216	; 0xff000000
     494:	mov	r2, #0
     498:	bic	r3, r6, #16711680	; 0xff0000
     49c:	bic	r3, r3, #-16777216	; 0xff000000
     4a0:	str	r3, [sp]
     4a4:	mov	r3, r4
     4a8:	mov	r0, r5
     4ac:	bl	284 <verify_field>
     4b0:	b	4b8 <flatcc_verify_field+0x88>
     4b4:	mov	r0, #0
     4b8:	ldr	r4, [sp, #16]
     4bc:	ldr	r5, [sp, #20]
     4c0:	ldr	r6, [sp, #24]
     4c4:	ldr	r7, [sp, #28]
     4c8:	ldr	lr, [sp, #8]
     4cc:	add	sp, sp, #32
     4d0:	bx	lr

000004d4 <flatcc_verify_string_field>:
     4d4:	mov	ip, sp
     4d8:	sub	sp, sp, #32
     4dc:	str	ip, [sp]
     4e0:	str	lr, [sp, #4]
     4e4:	str	r4, [sp, #8]
     4e8:	str	r5, [sp, #12]
     4ec:	str	r6, [sp, #16]
     4f0:	mov	r5, r0
     4f4:	bic	r1, r1, #16711680	; 0xff0000
     4f8:	bic	r1, r1, #-16777216	; 0xff000000
     4fc:	add	r3, sp, #24
     500:	mov	r0, r5
     504:	bl	364 <get_offset_field>
     508:	cmp	r0, #0
     50c:	bne	5d8 <flatcc_verify_string_field+0x104>
     510:	ldr	r2, [sp, #24]
     514:	cmp	r2, #0
     518:	beq	5d8 <flatcc_verify_string_field+0x104>
     51c:	ldr	r4, [r5]
     520:	add	r3, r4, r2
     524:	ldr	r0, [r3]
     528:	ldr	r5, [r5, #4]
     52c:	add	r6, r2, r0
     530:	add	r1, r6, #4
     534:	mov	r3, #0
     538:	cmp	r3, #0
     53c:	beq	548 <flatcc_verify_string_field+0x74>
     540:	mov	r1, #0
     544:	b	584 <flatcc_verify_string_field+0xb0>
     548:	cmp	r1, r5
     54c:	movls	r1, #1
     550:	movhi	r1, #0
     554:	mov	ip, #0
     558:	cmp	r6, r2
     55c:	movhi	ip, r1
     560:	movls	ip, ip
     564:	and	r3, r6, #3
     568:	cmp	r3, #0
     56c:	moveq	r1, #1
     570:	movne	r1, #0
     574:	mov	r3, #0
     578:	cmp	ip, #0
     57c:	movne	r1, r1
     580:	moveq	r1, r3
     584:	cmp	r1, #0
     588:	bne	594 <flatcc_verify_string_field+0xc0>
     58c:	mov	r0, #17
     590:	b	5d8 <flatcc_verify_string_field+0x104>
     594:	add	ip, r2, r0
     598:	add	r1, r4, ip
     59c:	ldr	r3, [r1]
     5a0:	add	r0, ip, #4
     5a4:	sub	ip, r5, r0
     5a8:	add	r2, r3, #1
     5ac:	cmp	ip, r2
     5b0:	bcs	5bc <flatcc_verify_string_field+0xe8>
     5b4:	mov	r0, #8
     5b8:	b	5d8 <flatcc_verify_string_field+0x104>
     5bc:	add	ip, r4, r0
     5c0:	ldrb	r0, [ip, r3]
     5c4:	cmp	r0, #0
     5c8:	beq	5d4 <flatcc_verify_string_field+0x100>
     5cc:	mov	r0, #7
     5d0:	b	5d8 <flatcc_verify_string_field+0x104>
     5d4:	mov	r0, #0
     5d8:	ldr	r4, [sp, #8]
     5dc:	ldr	r5, [sp, #12]
     5e0:	ldr	r6, [sp, #16]
     5e4:	ldr	lr, [sp, #4]
     5e8:	add	sp, sp, #32
     5ec:	bx	lr

000005f0 <flatcc_verify_vector_field>:
     5f0:	mov	ip, sp
     5f4:	sub	sp, sp, #40	; 0x28
     5f8:	str	ip, [sp]
     5fc:	str	lr, [sp, #4]
     600:	str	r4, [sp, #8]
     604:	str	r5, [sp, #12]
     608:	str	r6, [sp, #16]
     60c:	str	r7, [sp, #20]
     610:	str	r8, [sp, #24]
     614:	str	r9, [sp, #28]
     618:	ldr	r5, [ip, #4]
     61c:	ldr	r7, [ip]
     620:	mov	r4, r3
     624:	mov	r6, r0
     628:	bic	r1, r1, #16711680	; 0xff0000
     62c:	bic	r1, r1, #-16777216	; 0xff000000
     630:	add	r3, sp, #32
     634:	mov	r0, r6
     638:	bl	364 <get_offset_field>
     63c:	cmp	r0, #0
     640:	bne	72c <flatcc_verify_vector_field+0x13c>
     644:	ldr	r2, [sp, #32]
     648:	cmp	r2, #0
     64c:	beq	72c <flatcc_verify_vector_field+0x13c>
     650:	ldr	r3, [r6]
     654:	add	r1, r3, r2
     658:	ldr	r1, [r1]
     65c:	ldr	ip, [r6, #4]
     660:	bic	r0, r7, #16711680	; 0xff0000
     664:	bic	r0, r0, #-16777216	; 0xff000000
     668:	add	r8, r2, r1
     66c:	add	r6, r8, #4
     670:	mov	r7, #0
     674:	cmp	r7, #0
     678:	beq	684 <flatcc_verify_vector_field+0x94>
     67c:	mov	r0, #0
     680:	b	6e0 <flatcc_verify_vector_field+0xf0>
     684:	mov	r7, #4
     688:	cmp	r0, #4
     68c:	movcc	r0, r7
     690:	movcs	r0, r0
     694:	bic	r0, r0, #16711680	; 0xff0000
     698:	bic	r0, r0, #-16777216	; 0xff000000
     69c:	cmp	r6, ip
     6a0:	movls	r7, #1
     6a4:	movhi	r7, #0
     6a8:	mov	r9, #0
     6ac:	cmp	r8, r2
     6b0:	movhi	r7, r7
     6b4:	movls	r7, r9
     6b8:	cmp	r7, #0
     6bc:	beq	6dc <flatcc_verify_vector_field+0xec>
     6c0:	sub	r0, r0, #1
     6c4:	orr	r0, r0, #3
     6c8:	and	r0, r6, r0
     6cc:	cmp	r0, #0
     6d0:	moveq	r0, #1
     6d4:	movne	r0, #0
     6d8:	b	6e0 <flatcc_verify_vector_field+0xf0>
     6dc:	mov	r0, #0
     6e0:	cmp	r0, #0
     6e4:	bne	6f0 <flatcc_verify_vector_field+0x100>
     6e8:	mov	r0, #16
     6ec:	b	72c <flatcc_verify_vector_field+0x13c>
     6f0:	add	r2, r2, r1
     6f4:	add	r0, r3, r2
     6f8:	ldr	r0, [r0]
     6fc:	add	r1, r2, #4
     700:	cmp	r0, r5
     704:	bls	710 <flatcc_verify_vector_field+0x120>
     708:	mov	r0, #25
     70c:	b	72c <flatcc_verify_vector_field+0x13c>
     710:	sub	r1, ip, r1
     714:	mul	r2, r0, r4
     718:	cmp	r1, r2
     71c:	bcs	728 <flatcc_verify_vector_field+0x138>
     720:	mov	r0, #26
     724:	b	72c <flatcc_verify_vector_field+0x13c>
     728:	mov	r0, #0
     72c:	ldr	r4, [sp, #8]
     730:	ldr	r5, [sp, #12]
     734:	ldr	r6, [sp, #16]
     738:	ldr	r7, [sp, #20]
     73c:	ldr	r8, [sp, #24]
     740:	ldr	r9, [sp, #28]
     744:	ldr	lr, [sp, #4]
     748:	add	sp, sp, #40	; 0x28
     74c:	bx	lr

00000750 <flatcc_verify_string_vector_field>:
     750:	mov	ip, sp
     754:	sub	sp, sp, #48	; 0x30
     758:	str	ip, [sp]
     75c:	str	lr, [sp, #4]
     760:	str	r4, [sp, #8]
     764:	str	r5, [sp, #12]
     768:	str	r6, [sp, #16]
     76c:	str	r7, [sp, #20]
     770:	str	r8, [sp, #24]
     774:	str	r9, [sp, #28]
     778:	str	sl, [sp, #32]
     77c:	mov	r5, r0
     780:	bic	r1, r1, #16711680	; 0xff0000
     784:	bic	r1, r1, #-16777216	; 0xff000000
     788:	add	r3, sp, #40	; 0x28
     78c:	mov	r0, r5
     790:	bl	364 <get_offset_field>
     794:	cmp	r0, #0
     798:	bne	b08 <flatcc_verify_string_vector_field+0x3b8>
     79c:	ldr	r6, [sp, #40]	; 0x28
     7a0:	cmp	r6, #0
     7a4:	beq	b08 <flatcc_verify_string_vector_field+0x3b8>
     7a8:	ldr	r4, [r5]
     7ac:	add	ip, r4, r6
     7b0:	ldr	r7, [ip]
     7b4:	ldr	r5, [r5, #4]
     7b8:	mov	r1, #4
     7bc:	mvn	r0, #0
     7c0:	bl	0 <__aeabi_uidiv>
     7c4:	mov	r3, r7
     7c8:	mov	r2, #4
     7cc:	mov	r9, r6
     7d0:	mov	ip, r5
     7d4:	add	r8, r9, r3
     7d8:	add	r1, r8, #4
     7dc:	mov	sl, #0
     7e0:	cmp	sl, #0
     7e4:	beq	7f0 <flatcc_verify_string_vector_field+0xa0>
     7e8:	mov	ip, #0
     7ec:	b	83c <flatcc_verify_string_vector_field+0xec>
     7f0:	bic	r2, r2, #16711680	; 0xff0000
     7f4:	bic	r2, r2, #-16777216	; 0xff000000
     7f8:	cmp	r1, ip
     7fc:	movls	ip, #1
     800:	movhi	ip, #0
     804:	mov	sl, #0
     808:	cmp	r8, r9
     80c:	movhi	ip, ip
     810:	movls	ip, sl
     814:	cmp	ip, #0
     818:	beq	838 <flatcc_verify_string_vector_field+0xe8>
     81c:	sub	r2, r2, #1
     820:	orr	r2, r2, #3
     824:	and	ip, r1, r2
     828:	cmp	ip, #0
     82c:	moveq	ip, #1
     830:	movne	ip, #0
     834:	b	83c <flatcc_verify_string_vector_field+0xec>
     838:	mov	ip, #0
     83c:	cmp	ip, #0
     840:	bne	84c <flatcc_verify_string_vector_field+0xfc>
     844:	mov	r1, #16
     848:	b	88c <flatcc_verify_string_vector_field+0x13c>
     84c:	add	ip, r6, r3
     850:	mov	r2, r4
     854:	add	r1, r2, ip
     858:	ldr	r1, [r1]
     85c:	add	ip, ip, #4
     860:	cmp	r1, r0
     864:	bls	870 <flatcc_verify_string_vector_field+0x120>
     868:	mov	r1, #25
     86c:	b	88c <flatcc_verify_string_vector_field+0x13c>
     870:	sub	r2, r5, ip
     874:	lsl	ip, r1, #2
     878:	cmp	r2, ip
     87c:	bcs	888 <flatcc_verify_string_vector_field+0x138>
     880:	mov	r1, #26
     884:	b	88c <flatcc_verify_string_vector_field+0x13c>
     888:	mov	r1, #0
     88c:	cmp	r1, #0
     890:	beq	95c <flatcc_verify_string_vector_field+0x20c>
     894:	mov	r1, #4
     898:	mvn	r0, #0
     89c:	bl	0 <__aeabi_uidiv>
     8a0:	mov	r3, #4
     8a4:	add	r2, r6, r7
     8a8:	add	r1, r2, #4
     8ac:	mov	ip, #0
     8b0:	cmp	ip, #0
     8b4:	beq	8c0 <flatcc_verify_string_vector_field+0x170>
     8b8:	mov	r1, #0
     8bc:	b	90c <flatcc_verify_string_vector_field+0x1bc>
     8c0:	bic	ip, r3, #16711680	; 0xff0000
     8c4:	bic	ip, ip, #-16777216	; 0xff000000
     8c8:	cmp	r1, r5
     8cc:	movls	r8, #1
     8d0:	movhi	r8, #0
     8d4:	mov	r3, #0
     8d8:	cmp	r2, r6
     8dc:	movhi	r2, r8
     8e0:	movls	r2, r3
     8e4:	cmp	r2, #0
     8e8:	beq	908 <flatcc_verify_string_vector_field+0x1b8>
     8ec:	sub	r2, ip, #1
     8f0:	orr	r2, r2, #3
     8f4:	and	r3, r1, r2
     8f8:	cmp	r3, #0
     8fc:	moveq	r1, #1
     900:	movne	r1, #0
     904:	b	90c <flatcc_verify_string_vector_field+0x1bc>
     908:	mov	r1, #0
     90c:	cmp	r1, #0
     910:	bne	91c <flatcc_verify_string_vector_field+0x1cc>
     914:	mov	r0, #16
     918:	b	b08 <flatcc_verify_string_vector_field+0x3b8>
     91c:	add	r2, r6, r7
     920:	add	r1, r4, r2
     924:	ldr	r1, [r1]
     928:	add	r3, r2, #4
     92c:	cmp	r1, r0
     930:	bls	93c <flatcc_verify_string_vector_field+0x1ec>
     934:	mov	r0, #25
     938:	b	b08 <flatcc_verify_string_vector_field+0x3b8>
     93c:	sub	r3, r5, r3
     940:	lsl	r2, r1, #2
     944:	cmp	r3, r2
     948:	bcs	954 <flatcc_verify_string_vector_field+0x204>
     94c:	mov	r0, #26
     950:	b	b08 <flatcc_verify_string_vector_field+0x3b8>
     954:	mov	r0, #0
     958:	b	b08 <flatcc_verify_string_vector_field+0x3b8>
     95c:	add	ip, r6, r7
     960:	add	r2, r4, ip
     964:	ldr	r6, [r2]
     968:	add	r2, ip, #4
     96c:	mov	r7, #0
     970:	cmp	r7, r6
     974:	bcs	b04 <flatcc_verify_string_vector_field+0x3b4>
     978:	add	r3, r4, r2
     97c:	ldr	r0, [r3]
     980:	mov	r1, r5
     984:	mov	r8, r4
     988:	mov	r3, r2
     98c:	add	r9, r3, r0
     990:	add	ip, r9, #4
     994:	mov	sl, #0
     998:	cmp	sl, #0
     99c:	beq	9a8 <flatcc_verify_string_vector_field+0x258>
     9a0:	mov	r3, #0
     9a4:	b	9e4 <flatcc_verify_string_vector_field+0x294>
     9a8:	cmp	ip, r1
     9ac:	movls	ip, #1
     9b0:	movhi	ip, #0
     9b4:	mov	sl, #0
     9b8:	cmp	r9, r3
     9bc:	movhi	sl, ip
     9c0:	movls	sl, sl
     9c4:	and	ip, r9, #3
     9c8:	cmp	ip, #0
     9cc:	moveq	r3, #1
     9d0:	movne	r3, #0
     9d4:	mov	ip, #0
     9d8:	cmp	sl, #0
     9dc:	movne	r3, r3
     9e0:	moveq	r3, ip
     9e4:	cmp	r3, #0
     9e8:	bne	9f4 <flatcc_verify_string_vector_field+0x2a4>
     9ec:	mov	r0, #17
     9f0:	b	a38 <flatcc_verify_string_vector_field+0x2e8>
     9f4:	add	r3, r2, r0
     9f8:	add	ip, r8, r3
     9fc:	ldr	ip, [ip]
     a00:	add	r3, r3, #4
     a04:	sub	r1, r1, r3
     a08:	add	r0, ip, #1
     a0c:	cmp	r1, r0
     a10:	bcs	a1c <flatcc_verify_string_vector_field+0x2cc>
     a14:	mov	r0, #8
     a18:	b	a38 <flatcc_verify_string_vector_field+0x2e8>
     a1c:	add	r3, r8, r3
     a20:	ldrb	r3, [r3, ip]
     a24:	cmp	r3, #0
     a28:	beq	a34 <flatcc_verify_string_vector_field+0x2e4>
     a2c:	mov	r0, #7
     a30:	b	a38 <flatcc_verify_string_vector_field+0x2e8>
     a34:	mov	r0, #0
     a38:	cmp	r0, #0
     a3c:	beq	af8 <flatcc_verify_string_vector_field+0x3a8>
     a40:	add	r3, r4, r2
     a44:	ldr	r1, [r3]
     a48:	add	r6, r2, r1
     a4c:	add	ip, r6, #4
     a50:	mov	r3, #0
     a54:	cmp	r3, #0
     a58:	beq	a64 <flatcc_verify_string_vector_field+0x314>
     a5c:	mov	r0, #0
     a60:	b	aa0 <flatcc_verify_string_vector_field+0x350>
     a64:	cmp	ip, r5
     a68:	movls	r3, #1
     a6c:	movhi	r3, #0
     a70:	mov	ip, #0
     a74:	cmp	r6, r2
     a78:	movhi	r0, r3
     a7c:	movls	r0, ip
     a80:	and	r3, r6, #3
     a84:	cmp	r3, #0
     a88:	moveq	r3, #1
     a8c:	movne	r3, #0
     a90:	mov	ip, #0
     a94:	cmp	r0, #0
     a98:	movne	r0, r3
     a9c:	moveq	r0, ip
     aa0:	cmp	r0, #0
     aa4:	bne	ab0 <flatcc_verify_string_vector_field+0x360>
     aa8:	mov	r0, #17
     aac:	b	b08 <flatcc_verify_string_vector_field+0x3b8>
     ab0:	add	r2, r2, r1
     ab4:	add	r0, r4, r2
     ab8:	ldr	r3, [r0]
     abc:	add	r0, r2, #4
     ac0:	sub	r2, r5, r0
     ac4:	add	ip, r3, #1
     ac8:	cmp	r2, ip
     acc:	bcs	ad8 <flatcc_verify_string_vector_field+0x388>
     ad0:	mov	r0, #8
     ad4:	b	b08 <flatcc_verify_string_vector_field+0x3b8>
     ad8:	add	r2, r4, r0
     adc:	ldrb	r0, [r2, r3]
     ae0:	cmp	r0, #0
     ae4:	beq	af0 <flatcc_verify_string_vector_field+0x3a0>
     ae8:	mov	r0, #7
     aec:	b	b08 <flatcc_verify_string_vector_field+0x3b8>
     af0:	mov	r0, #0
     af4:	b	b08 <flatcc_verify_string_vector_field+0x3b8>
     af8:	add	r7, r7, #1
     afc:	add	r2, r2, #4
     b00:	b	970 <flatcc_verify_string_vector_field+0x220>
     b04:	mov	r0, #0
     b08:	ldr	r4, [sp, #8]
     b0c:	ldr	r5, [sp, #12]
     b10:	ldr	r6, [sp, #16]
     b14:	ldr	r7, [sp, #20]
     b18:	ldr	r8, [sp, #24]
     b1c:	ldr	r9, [sp, #28]
     b20:	ldr	sl, [sp, #32]
     b24:	ldr	lr, [sp, #4]
     b28:	add	sp, sp, #48	; 0x30
     b2c:	bx	lr

00000b30 <flatcc_verify_table_field>:
     b30:	mov	ip, sp
     b34:	sub	sp, sp, #56	; 0x38
     b38:	str	ip, [sp]
     b3c:	str	lr, [sp, #4]
     b40:	str	r4, [sp, #8]
     b44:	str	r5, [sp, #12]
     b48:	str	r6, [sp, #16]
     b4c:	mov	r4, r3
     b50:	mov	r6, r0
     b54:	bic	r1, r1, #16711680	; 0xff0000
     b58:	bic	r1, r1, #-16777216	; 0xff000000
     b5c:	add	r3, sp, #24
     b60:	mov	r0, r6
     b64:	bl	364 <get_offset_field>
     b68:	cmp	r0, #0
     b6c:	bne	d10 <flatcc_verify_table_field+0x1e0>
     b70:	ldr	r2, [sp, #24]
     b74:	cmp	r2, #0
     b78:	beq	d10 <flatcc_verify_table_field+0x1e0>
     b7c:	ldr	r1, [r6]
     b80:	add	r3, r1, r2
     b84:	ldr	r3, [r3]
     b88:	ldr	r5, [r6, #4]
     b8c:	ldr	ip, [r6, #8]
     b90:	sub	ip, ip, #1
     b94:	str	ip, [sp, #40]	; 0x28
     b98:	cmp	ip, #0
     b9c:	bne	ba8 <flatcc_verify_table_field+0x78>
     ba0:	mov	r0, #3
     ba4:	b	d10 <flatcc_verify_table_field+0x1e0>
     ba8:	add	r6, r2, r3
     bac:	add	ip, r6, #4
     bb0:	mov	r0, #0
     bb4:	cmp	r0, #0
     bb8:	beq	bc4 <flatcc_verify_table_field+0x94>
     bbc:	mov	ip, #0
     bc0:	b	c00 <flatcc_verify_table_field+0xd0>
     bc4:	cmp	ip, r5
     bc8:	movls	r0, #1
     bcc:	movhi	r0, #0
     bd0:	mov	ip, #0
     bd4:	cmp	r6, r2
     bd8:	movhi	ip, r0
     bdc:	movls	ip, ip
     be0:	and	r0, r6, #3
     be4:	cmp	r0, #0
     be8:	moveq	r0, #1
     bec:	movne	r0, #0
     bf0:	mov	r6, #0
     bf4:	cmp	ip, #0
     bf8:	movne	ip, r0
     bfc:	moveq	ip, r6
     c00:	cmp	ip, #0
     c04:	bne	c10 <flatcc_verify_table_field+0xe0>
     c08:	mov	r0, #15
     c0c:	b	d10 <flatcc_verify_table_field+0x1e0>
     c10:	add	r2, r2, r3
     c14:	str	r2, [sp, #48]	; 0x30
     c18:	add	r0, r1, r2
     c1c:	ldr	r3, [r0]
     c20:	sub	r3, r2, r3
     c24:	and	ip, r3, #1
     c28:	eor	r2, ip, #1
     c2c:	mov	ip, #0
     c30:	cmp	r3, #0
     c34:	movge	r2, r2
     c38:	movlt	r2, ip
     c3c:	cmp	r2, #0
     c40:	bne	c4c <flatcc_verify_table_field+0x11c>
     c44:	mov	r0, #29
     c48:	b	d10 <flatcc_verify_table_field+0x1e0>
     c4c:	add	r0, r3, #2
     c50:	cmp	r0, r5
     c54:	bls	c60 <flatcc_verify_table_field+0x130>
     c58:	mov	r0, #27
     c5c:	b	d10 <flatcc_verify_table_field+0x1e0>
     c60:	add	ip, r1, r3
     c64:	ldrh	r2, [ip]
     c68:	bic	r0, r2, #16711680	; 0xff0000
     c6c:	bic	r0, r0, #-16777216	; 0xff000000
     c70:	strh	r0, [sp, #54]	; 0x36
     c74:	add	ip, r3, r0
     c78:	cmp	ip, r5
     c7c:	bhi	c8c <flatcc_verify_table_field+0x15c>
     c80:	and	r2, r0, #1
     c84:	eor	ip, r2, #1
     c88:	b	c90 <flatcc_verify_table_field+0x160>
     c8c:	mov	ip, #0
     c90:	cmp	ip, #0
     c94:	bne	ca0 <flatcc_verify_table_field+0x170>
     c98:	mov	r0, #30
     c9c:	b	d10 <flatcc_verify_table_field+0x1e0>
     ca0:	mov	r2, #1
     ca4:	cmp	r2, #0
     ca8:	bne	cb4 <flatcc_verify_table_field+0x184>
     cac:	mov	r0, #31
     cb0:	b	d10 <flatcc_verify_table_field+0x1e0>
     cb4:	ldrh	ip, [sp, #54]	; 0x36
     cb8:	cmp	ip, #4
     cbc:	bcs	cc8 <flatcc_verify_table_field+0x198>
     cc0:	mov	r0, #28
     cc4:	b	d10 <flatcc_verify_table_field+0x1e0>
     cc8:	add	r0, r3, #2
     ccc:	add	r0, r1, r0
     cd0:	ldrh	ip, [r0]
     cd4:	bic	r2, ip, #16711680	; 0xff0000
     cd8:	bic	r2, r2, #-16777216	; 0xff000000
     cdc:	strh	r2, [sp, #52]	; 0x34
     ce0:	ldr	ip, [sp, #48]	; 0x30
     ce4:	sub	ip, r5, ip
     ce8:	cmp	ip, r2
     cec:	bcs	cf8 <flatcc_verify_table_field+0x1c8>
     cf0:	mov	r0, #20
     cf4:	b	d10 <flatcc_verify_table_field+0x1e0>
     cf8:	add	r2, r1, r3
     cfc:	str	r2, [sp, #44]	; 0x2c
     d00:	str	r1, [sp, #32]
     d04:	str	r5, [sp, #36]	; 0x24
     d08:	add	r0, sp, #32
     d0c:	blx	r4
     d10:	ldr	r4, [sp, #8]
     d14:	ldr	r5, [sp, #12]
     d18:	ldr	r6, [sp, #16]
     d1c:	ldr	lr, [sp, #4]
     d20:	add	sp, sp, #56	; 0x38
     d24:	bx	lr

00000d28 <flatcc_verify_table_vector_field>:
     d28:	mov	ip, sp
     d2c:	sub	sp, sp, #72	; 0x48
     d30:	str	ip, [sp]
     d34:	str	lr, [sp, #4]
     d38:	str	r4, [sp, #8]
     d3c:	str	r5, [sp, #12]
     d40:	str	r6, [sp, #16]
     d44:	str	r7, [sp, #20]
     d48:	str	r8, [sp, #24]
     d4c:	str	r9, [sp, #28]
     d50:	str	sl, [sp, #32]
     d54:	str	fp, [sp, #36]	; 0x24
     d58:	mov	fp, r3
     d5c:	mov	r7, r0
     d60:	bic	r1, r1, #16711680	; 0xff0000
     d64:	bic	r1, r1, #-16777216	; 0xff000000
     d68:	add	r3, sp, #40	; 0x28
     d6c:	mov	r0, r7
     d70:	bl	364 <get_offset_field>
     d74:	cmp	r0, #0
     d78:	bne	12b8 <flatcc_verify_table_vector_field+0x590>
     d7c:	ldr	r8, [sp, #40]	; 0x28
     d80:	cmp	r8, #0
     d84:	beq	12b8 <flatcc_verify_table_vector_field+0x590>
     d88:	ldr	r5, [r7]
     d8c:	add	r0, r5, r8
     d90:	ldr	r6, [r0]
     d94:	ldr	r4, [r7, #4]
     d98:	ldr	r3, [r7, #8]
     d9c:	sub	r7, r3, #1
     da0:	cmp	r3, #0
     da4:	bgt	db0 <flatcc_verify_table_vector_field+0x88>
     da8:	mov	r0, #3
     dac:	b	12b8 <flatcc_verify_table_vector_field+0x590>
     db0:	mov	r1, #4
     db4:	mvn	r0, #0
     db8:	bl	0 <__aeabi_uidiv>
     dbc:	mov	sl, #4
     dc0:	mov	r1, r6
     dc4:	mov	r3, r8
     dc8:	mov	ip, r4
     dcc:	add	r9, r3, r1
     dd0:	add	r1, r9, #4
     dd4:	mov	r2, #0
     dd8:	cmp	r2, #0
     ddc:	beq	de8 <flatcc_verify_table_vector_field+0xc0>
     de0:	mov	r3, #0
     de4:	b	e34 <flatcc_verify_table_vector_field+0x10c>
     de8:	bic	r2, sl, #16711680	; 0xff0000
     dec:	bic	r2, r2, #-16777216	; 0xff000000
     df0:	cmp	r1, ip
     df4:	movls	sl, #1
     df8:	movhi	sl, #0
     dfc:	mov	ip, #0
     e00:	cmp	r9, r3
     e04:	movhi	ip, sl
     e08:	movls	ip, ip
     e0c:	cmp	ip, #0
     e10:	beq	e30 <flatcc_verify_table_vector_field+0x108>
     e14:	sub	r2, r2, #1
     e18:	orr	r3, r2, #3
     e1c:	and	r3, r1, r3
     e20:	cmp	r3, #0
     e24:	moveq	r3, #1
     e28:	movne	r3, #0
     e2c:	b	e34 <flatcc_verify_table_vector_field+0x10c>
     e30:	mov	r3, #0
     e34:	cmp	r3, #0
     e38:	bne	e44 <flatcc_verify_table_vector_field+0x11c>
     e3c:	mov	ip, #16
     e40:	b	e84 <flatcc_verify_table_vector_field+0x15c>
     e44:	add	r2, r8, r6
     e48:	mov	r1, r5
     e4c:	add	r3, r1, r2
     e50:	ldr	r1, [r3]
     e54:	add	r3, r2, #4
     e58:	cmp	r1, r0
     e5c:	bls	e68 <flatcc_verify_table_vector_field+0x140>
     e60:	mov	ip, #25
     e64:	b	e84 <flatcc_verify_table_vector_field+0x15c>
     e68:	sub	r0, r4, r3
     e6c:	lsl	r2, r1, #2
     e70:	cmp	r0, r2
     e74:	bcs	e80 <flatcc_verify_table_vector_field+0x158>
     e78:	mov	ip, #26
     e7c:	b	e84 <flatcc_verify_table_vector_field+0x15c>
     e80:	mov	ip, #0
     e84:	cmp	ip, #0
     e88:	beq	f54 <flatcc_verify_table_vector_field+0x22c>
     e8c:	mov	r1, #4
     e90:	mvn	r0, #0
     e94:	bl	0 <__aeabi_uidiv>
     e98:	mov	r2, #4
     e9c:	add	ip, r8, r6
     ea0:	add	r3, ip, #4
     ea4:	mov	r1, #0
     ea8:	cmp	r1, #0
     eac:	beq	eb8 <flatcc_verify_table_vector_field+0x190>
     eb0:	mov	ip, #0
     eb4:	b	f04 <flatcc_verify_table_vector_field+0x1dc>
     eb8:	bic	r2, r2, #16711680	; 0xff0000
     ebc:	bic	r2, r2, #-16777216	; 0xff000000
     ec0:	cmp	r3, r4
     ec4:	movls	r7, #1
     ec8:	movhi	r7, #0
     ecc:	mov	r1, #0
     ed0:	cmp	ip, r8
     ed4:	movhi	r1, r7
     ed8:	movls	r1, r1
     edc:	cmp	r1, #0
     ee0:	beq	f00 <flatcc_verify_table_vector_field+0x1d8>
     ee4:	sub	r2, r2, #1
     ee8:	orr	ip, r2, #3
     eec:	and	r3, r3, ip
     ef0:	cmp	r3, #0
     ef4:	moveq	ip, #1
     ef8:	movne	ip, #0
     efc:	b	f04 <flatcc_verify_table_vector_field+0x1dc>
     f00:	mov	ip, #0
     f04:	cmp	ip, #0
     f08:	bne	f14 <flatcc_verify_table_vector_field+0x1ec>
     f0c:	mov	r0, #16
     f10:	b	12b8 <flatcc_verify_table_vector_field+0x590>
     f14:	add	r1, r8, r6
     f18:	add	r2, r5, r1
     f1c:	ldr	ip, [r2]
     f20:	add	r1, r1, #4
     f24:	cmp	ip, r0
     f28:	bls	f34 <flatcc_verify_table_vector_field+0x20c>
     f2c:	mov	r0, #25
     f30:	b	12b8 <flatcc_verify_table_vector_field+0x590>
     f34:	sub	r0, r4, r1
     f38:	lsl	ip, ip, #2
     f3c:	cmp	r0, ip
     f40:	bcs	f4c <flatcc_verify_table_vector_field+0x224>
     f44:	mov	r0, #26
     f48:	b	12b8 <flatcc_verify_table_vector_field+0x590>
     f4c:	mov	r0, #0
     f50:	b	12b8 <flatcc_verify_table_vector_field+0x590>
     f54:	add	r3, r8, r6
     f58:	add	r0, r5, r3
     f5c:	ldr	r6, [r0]
     f60:	add	r8, r3, #4
     f64:	mov	r9, #0
     f68:	cmp	r9, r6
     f6c:	bcs	12b4 <flatcc_verify_table_vector_field+0x58c>
     f70:	add	ip, r5, r8
     f74:	ldr	r1, [ip]
     f78:	mov	r0, r4
     f7c:	sub	r2, r7, #1
     f80:	str	r2, [sp, #56]	; 0x38
     f84:	cmp	r2, #0
     f88:	bne	f94 <flatcc_verify_table_vector_field+0x26c>
     f8c:	mov	r0, #3
     f90:	b	110c <flatcc_verify_table_vector_field+0x3e4>
     f94:	mov	ip, r8
     f98:	add	sl, ip, r1
     f9c:	add	r2, sl, #4
     fa0:	mov	r3, #0
     fa4:	cmp	r3, #0
     fa8:	beq	fb4 <flatcc_verify_table_vector_field+0x28c>
     fac:	mov	r2, #0
     fb0:	b	ff0 <flatcc_verify_table_vector_field+0x2c8>
     fb4:	cmp	r2, r0
     fb8:	movls	r3, #1
     fbc:	movhi	r3, #0
     fc0:	mov	r2, #0
     fc4:	cmp	sl, ip
     fc8:	movhi	r2, r3
     fcc:	movls	r2, r2
     fd0:	and	r3, sl, #3
     fd4:	cmp	r3, #0
     fd8:	moveq	ip, #1
     fdc:	movne	ip, #0
     fe0:	mov	r3, #0
     fe4:	cmp	r2, #0
     fe8:	movne	r2, ip
     fec:	moveq	r2, r3
     ff0:	cmp	r2, #0
     ff4:	bne	1000 <flatcc_verify_table_vector_field+0x2d8>
     ff8:	mov	r0, #15
     ffc:	b	110c <flatcc_verify_table_vector_field+0x3e4>
    1000:	add	r1, r8, r1
    1004:	str	r1, [sp, #64]	; 0x40
    1008:	mov	ip, r5
    100c:	add	r2, ip, r1
    1010:	ldr	r2, [r2]
    1014:	sub	r1, r1, r2
    1018:	and	r2, r1, #1
    101c:	eor	r2, r2, #1
    1020:	mov	ip, #0
    1024:	cmp	r1, #0
    1028:	movge	r2, r2
    102c:	movlt	r2, ip
    1030:	cmp	r2, #0
    1034:	bne	1040 <flatcc_verify_table_vector_field+0x318>
    1038:	mov	r0, #29
    103c:	b	110c <flatcc_verify_table_vector_field+0x3e4>
    1040:	add	r2, r1, #2
    1044:	cmp	r2, r0
    1048:	bls	1054 <flatcc_verify_table_vector_field+0x32c>
    104c:	mov	r0, #27
    1050:	b	110c <flatcc_verify_table_vector_field+0x3e4>
    1054:	mov	r3, r5
    1058:	add	ip, r3, r1
    105c:	ldrh	r2, [ip]
    1060:	bic	r2, r2, #16711680	; 0xff0000
    1064:	bic	r2, r2, #-16777216	; 0xff000000
    1068:	strh	r2, [sp, #70]	; 0x46
    106c:	add	r3, r1, r2
    1070:	cmp	r3, r0
    1074:	bhi	1084 <flatcc_verify_table_vector_field+0x35c>
    1078:	and	ip, r2, #1
    107c:	eor	r2, ip, #1
    1080:	b	1088 <flatcc_verify_table_vector_field+0x360>
    1084:	mov	r2, #0
    1088:	cmp	r2, #0
    108c:	bne	1098 <flatcc_verify_table_vector_field+0x370>
    1090:	mov	r0, #30
    1094:	b	110c <flatcc_verify_table_vector_field+0x3e4>
    1098:	mov	r2, #1
    109c:	cmp	r2, #0
    10a0:	bne	10ac <flatcc_verify_table_vector_field+0x384>
    10a4:	mov	r0, #31
    10a8:	b	110c <flatcc_verify_table_vector_field+0x3e4>
    10ac:	ldrh	r2, [sp, #70]	; 0x46
    10b0:	cmp	r2, #4
    10b4:	bcs	10c0 <flatcc_verify_table_vector_field+0x398>
    10b8:	mov	r0, #28
    10bc:	b	110c <flatcc_verify_table_vector_field+0x3e4>
    10c0:	add	ip, r1, #2
    10c4:	mov	r2, r5
    10c8:	add	r3, r2, ip
    10cc:	ldrh	r2, [r3]
    10d0:	bic	r2, r2, #16711680	; 0xff0000
    10d4:	bic	r2, r2, #-16777216	; 0xff000000
    10d8:	strh	r2, [sp, #68]	; 0x44
    10dc:	ldr	r3, [sp, #64]	; 0x40
    10e0:	sub	r3, r0, r3
    10e4:	cmp	r3, r2
    10e8:	bcs	10f4 <flatcc_verify_table_vector_field+0x3cc>
    10ec:	mov	r0, #20
    10f0:	b	110c <flatcc_verify_table_vector_field+0x3e4>
    10f4:	add	r3, r5, r1
    10f8:	str	r3, [sp, #60]	; 0x3c
    10fc:	str	r5, [sp, #48]	; 0x30
    1100:	str	r0, [sp, #52]	; 0x34
    1104:	add	r0, sp, #48	; 0x30
    1108:	blx	fp
    110c:	cmp	r0, #0
    1110:	beq	12a8 <flatcc_verify_table_vector_field+0x580>
    1114:	add	r2, r5, r8
    1118:	ldr	ip, [r2]
    111c:	mov	r1, r4
    1120:	mov	r0, r5
    1124:	sub	r2, r7, #1
    1128:	str	r2, [sp, #56]	; 0x38
    112c:	cmp	r2, #0
    1130:	bne	113c <flatcc_verify_table_vector_field+0x414>
    1134:	mov	r0, #3
    1138:	b	12b8 <flatcc_verify_table_vector_field+0x590>
    113c:	add	r4, r8, ip
    1140:	add	r2, r4, #4
    1144:	mov	r3, #0
    1148:	cmp	r3, #0
    114c:	beq	1158 <flatcc_verify_table_vector_field+0x430>
    1150:	mov	r3, #0
    1154:	b	1194 <flatcc_verify_table_vector_field+0x46c>
    1158:	cmp	r2, r1
    115c:	movls	r2, #1
    1160:	movhi	r2, #0
    1164:	mov	r3, #0
    1168:	cmp	r4, r8
    116c:	movhi	r5, r2
    1170:	movls	r5, r3
    1174:	and	r2, r4, #3
    1178:	cmp	r2, #0
    117c:	moveq	r3, #1
    1180:	movne	r3, #0
    1184:	mov	r2, #0
    1188:	cmp	r5, #0
    118c:	movne	r3, r3
    1190:	moveq	r3, r2
    1194:	cmp	r3, #0
    1198:	bne	11a4 <flatcc_verify_table_vector_field+0x47c>
    119c:	mov	r0, #15
    11a0:	b	12b8 <flatcc_verify_table_vector_field+0x590>
    11a4:	add	r3, r8, ip
    11a8:	str	r3, [sp, #64]	; 0x40
    11ac:	add	r2, r0, r3
    11b0:	ldr	r2, [r2]
    11b4:	sub	r2, r3, r2
    11b8:	and	ip, r2, #1
    11bc:	eor	ip, ip, #1
    11c0:	mov	r3, #0
    11c4:	cmp	r2, #0
    11c8:	movge	r3, ip
    11cc:	movlt	r3, r3
    11d0:	cmp	r3, #0
    11d4:	bne	11e0 <flatcc_verify_table_vector_field+0x4b8>
    11d8:	mov	r0, #29
    11dc:	b	12b8 <flatcc_verify_table_vector_field+0x590>
    11e0:	add	r3, r2, #2
    11e4:	cmp	r3, r1
    11e8:	bls	11f4 <flatcc_verify_table_vector_field+0x4cc>
    11ec:	mov	r0, #27
    11f0:	b	12b8 <flatcc_verify_table_vector_field+0x590>
    11f4:	add	r3, r0, r2
    11f8:	ldrh	r3, [r3]
    11fc:	bic	r3, r3, #16711680	; 0xff0000
    1200:	bic	r3, r3, #-16777216	; 0xff000000
    1204:	strh	r3, [sp, #70]	; 0x46
    1208:	add	ip, r2, r3
    120c:	cmp	ip, r1
    1210:	bhi	1220 <flatcc_verify_table_vector_field+0x4f8>
    1214:	and	ip, r3, #1
    1218:	eor	r3, ip, #1
    121c:	b	1224 <flatcc_verify_table_vector_field+0x4fc>
    1220:	mov	r3, #0
    1224:	cmp	r3, #0
    1228:	bne	1234 <flatcc_verify_table_vector_field+0x50c>
    122c:	mov	r0, #30
    1230:	b	12b8 <flatcc_verify_table_vector_field+0x590>
    1234:	mov	ip, #1
    1238:	cmp	ip, #0
    123c:	bne	1248 <flatcc_verify_table_vector_field+0x520>
    1240:	mov	r0, #31
    1244:	b	12b8 <flatcc_verify_table_vector_field+0x590>
    1248:	ldrh	r3, [sp, #70]	; 0x46
    124c:	cmp	r3, #4
    1250:	bcs	125c <flatcc_verify_table_vector_field+0x534>
    1254:	mov	r0, #28
    1258:	b	12b8 <flatcc_verify_table_vector_field+0x590>
    125c:	add	r3, r2, #2
    1260:	add	r3, r0, r3
    1264:	ldrh	r3, [r3]
    1268:	bic	r3, r3, #16711680	; 0xff0000
    126c:	bic	r3, r3, #-16777216	; 0xff000000
    1270:	strh	r3, [sp, #68]	; 0x44
    1274:	ldr	ip, [sp, #64]	; 0x40
    1278:	sub	ip, r1, ip
    127c:	cmp	ip, r3
    1280:	bcs	128c <flatcc_verify_table_vector_field+0x564>
    1284:	mov	r0, #20
    1288:	b	12b8 <flatcc_verify_table_vector_field+0x590>
    128c:	add	r3, r0, r2
    1290:	str	r3, [sp, #60]	; 0x3c
    1294:	str	r0, [sp, #48]	; 0x30
    1298:	str	r1, [sp, #52]	; 0x34
    129c:	add	r0, sp, #48	; 0x30
    12a0:	blx	fp
    12a4:	b	12b8 <flatcc_verify_table_vector_field+0x590>
    12a8:	add	r9, r9, #1
    12ac:	add	r8, r8, #4
    12b0:	b	f68 <flatcc_verify_table_vector_field+0x240>
    12b4:	mov	r0, #0
    12b8:	ldr	r4, [sp, #8]
    12bc:	ldr	r5, [sp, #12]
    12c0:	ldr	r6, [sp, #16]
    12c4:	ldr	r7, [sp, #20]
    12c8:	ldr	r8, [sp, #24]
    12cc:	ldr	r9, [sp, #28]
    12d0:	ldr	sl, [sp, #32]
    12d4:	ldr	fp, [sp, #36]	; 0x24
    12d8:	ldr	lr, [sp, #4]
    12dc:	add	sp, sp, #72	; 0x48
    12e0:	bx	lr

000012e4 <flatcc_verify_union_table>:
    12e4:	mov	ip, sp
    12e8:	sub	sp, sp, #48	; 0x30
    12ec:	str	ip, [sp]
    12f0:	str	lr, [sp, #4]
    12f4:	str	r4, [sp, #8]
    12f8:	str	r5, [sp, #12]
    12fc:	str	r6, [sp, #16]
    1300:	ldr	r5, [r0]
    1304:	ldr	r4, [r0, #4]
    1308:	ldr	r3, [r0, #16]
    130c:	ldr	r2, [r0, #20]
    1310:	ldr	r0, [r0, #8]
    1314:	mov	ip, r1
    1318:	sub	r0, r0, #1
    131c:	str	r0, [sp, #32]
    1320:	cmp	r0, #0
    1324:	bne	1330 <flatcc_verify_union_table+0x4c>
    1328:	mov	r0, #3
    132c:	b	1498 <flatcc_verify_union_table+0x1b4>
    1330:	add	r6, r3, r2
    1334:	add	r0, r6, #4
    1338:	mov	r1, #0
    133c:	cmp	r1, #0
    1340:	beq	134c <flatcc_verify_union_table+0x68>
    1344:	mov	r1, #0
    1348:	b	1388 <flatcc_verify_union_table+0xa4>
    134c:	cmp	r0, r4
    1350:	movls	r1, #1
    1354:	movhi	r1, #0
    1358:	mov	r0, #0
    135c:	cmp	r6, r3
    1360:	movhi	r1, r1
    1364:	movls	r1, r0
    1368:	and	r0, r6, #3
    136c:	cmp	r0, #0
    1370:	moveq	r0, #1
    1374:	movne	r0, #0
    1378:	mov	r6, #0
    137c:	cmp	r1, #0
    1380:	movne	r1, r0
    1384:	moveq	r1, r6
    1388:	cmp	r1, #0
    138c:	bne	1398 <flatcc_verify_union_table+0xb4>
    1390:	mov	r0, #15
    1394:	b	1498 <flatcc_verify_union_table+0x1b4>
    1398:	add	r0, r3, r2
    139c:	str	r0, [sp, #40]	; 0x28
    13a0:	add	r3, r5, r0
    13a4:	ldr	r3, [r3]
    13a8:	sub	r0, r0, r3
    13ac:	and	r3, r0, #1
    13b0:	eor	r1, r3, #1
    13b4:	mov	r2, #0
    13b8:	cmp	r0, #0
    13bc:	movge	r3, r1
    13c0:	movlt	r3, r2
    13c4:	cmp	r3, #0
    13c8:	bne	13d4 <flatcc_verify_union_table+0xf0>
    13cc:	mov	r0, #29
    13d0:	b	1498 <flatcc_verify_union_table+0x1b4>
    13d4:	add	r1, r0, #2
    13d8:	cmp	r1, r4
    13dc:	bls	13e8 <flatcc_verify_union_table+0x104>
    13e0:	mov	r0, #27
    13e4:	b	1498 <flatcc_verify_union_table+0x1b4>
    13e8:	add	r2, r5, r0
    13ec:	ldrh	r1, [r2]
    13f0:	bic	r1, r1, #16711680	; 0xff0000
    13f4:	bic	r1, r1, #-16777216	; 0xff000000
    13f8:	strh	r1, [sp, #46]	; 0x2e
    13fc:	add	r2, r0, r1
    1400:	cmp	r2, r4
    1404:	bhi	1414 <flatcc_verify_union_table+0x130>
    1408:	and	r3, r1, #1
    140c:	eor	r1, r3, #1
    1410:	b	1418 <flatcc_verify_union_table+0x134>
    1414:	mov	r1, #0
    1418:	cmp	r1, #0
    141c:	bne	1428 <flatcc_verify_union_table+0x144>
    1420:	mov	r0, #30
    1424:	b	1498 <flatcc_verify_union_table+0x1b4>
    1428:	mov	r1, #1
    142c:	cmp	r1, #0
    1430:	bne	143c <flatcc_verify_union_table+0x158>
    1434:	mov	r0, #31
    1438:	b	1498 <flatcc_verify_union_table+0x1b4>
    143c:	ldrh	r1, [sp, #46]	; 0x2e
    1440:	cmp	r1, #4
    1444:	bcs	1450 <flatcc_verify_union_table+0x16c>
    1448:	mov	r0, #28
    144c:	b	1498 <flatcc_verify_union_table+0x1b4>
    1450:	add	r2, r0, #2
    1454:	add	r2, r5, r2
    1458:	ldrh	r2, [r2]
    145c:	bic	r2, r2, #16711680	; 0xff0000
    1460:	bic	r2, r2, #-16777216	; 0xff000000
    1464:	strh	r2, [sp, #44]	; 0x2c
    1468:	ldr	r1, [sp, #40]	; 0x28
    146c:	sub	r1, r4, r1
    1470:	cmp	r1, r2
    1474:	bcs	1480 <flatcc_verify_union_table+0x19c>
    1478:	mov	r0, #20
    147c:	b	1498 <flatcc_verify_union_table+0x1b4>
    1480:	add	r0, r5, r0
    1484:	str	r0, [sp, #36]	; 0x24
    1488:	str	r5, [sp, #24]
    148c:	str	r4, [sp, #28]
    1490:	add	r0, sp, #24
    1494:	blx	ip
    1498:	ldr	r4, [sp, #8]
    149c:	ldr	r5, [sp, #12]
    14a0:	ldr	r6, [sp, #16]
    14a4:	ldr	lr, [sp, #4]
    14a8:	add	sp, sp, #48	; 0x30
    14ac:	bx	lr

000014b0 <flatcc_verify_union_struct>:
    14b0:	mov	ip, sp
    14b4:	sub	sp, sp, #24
    14b8:	str	ip, [sp]
    14bc:	str	lr, [sp, #4]
    14c0:	str	r4, [sp, #8]
    14c4:	str	r5, [sp, #12]
    14c8:	str	r6, [sp, #16]
    14cc:	ldr	r4, [r0, #4]
    14d0:	ldr	r3, [r0, #16]
    14d4:	ldr	ip, [r0, #20]
    14d8:	bic	r5, r2, #16711680	; 0xff0000
    14dc:	bic	r5, r5, #-16777216	; 0xff000000
    14e0:	mov	r6, #1
    14e4:	add	r0, r3, ip
    14e8:	cmp	r0, r4
    14ec:	movhi	r2, #1
    14f0:	movls	r2, #0
    14f4:	cmp	ip, #0
    14f8:	moveq	r2, r6
    14fc:	movne	r2, r2
    1500:	cmp	r2, #0
    1504:	beq	1510 <flatcc_verify_union_struct+0x60>
    1508:	mov	r0, #18
    150c:	b	1550 <flatcc_verify_union_struct+0xa0>
    1510:	add	r2, r0, r1
    1514:	cmp	r2, r0
    1518:	bcs	1524 <flatcc_verify_union_struct+0x74>
    151c:	mov	r0, #10
    1520:	b	1550 <flatcc_verify_union_struct+0xa0>
    1524:	cmp	r2, r4
    1528:	bls	1534 <flatcc_verify_union_struct+0x84>
    152c:	mov	r0, #9
    1530:	b	1550 <flatcc_verify_union_struct+0xa0>
    1534:	sub	r2, r5, #1
    1538:	and	r0, r0, r2
    153c:	cmp	r0, #0
    1540:	beq	154c <flatcc_verify_union_struct+0x9c>
    1544:	mov	r0, #11
    1548:	b	1550 <flatcc_verify_union_struct+0xa0>
    154c:	mov	r0, #0
    1550:	ldr	r4, [sp, #8]
    1554:	ldr	r5, [sp, #12]
    1558:	ldr	r6, [sp, #16]
    155c:	ldr	lr, [sp, #4]
    1560:	add	sp, sp, #24
    1564:	bx	lr

00001568 <flatcc_verify_union_string>:
    1568:	mov	ip, sp
    156c:	sub	sp, sp, #24
    1570:	str	ip, [sp]
    1574:	str	lr, [sp, #4]
    1578:	str	r4, [sp, #8]
    157c:	str	r5, [sp, #12]
    1580:	str	r6, [sp, #16]
    1584:	ldr	r4, [r0]
    1588:	ldr	ip, [r0, #4]
    158c:	ldr	r1, [r0, #16]
    1590:	ldr	r2, [r0, #20]
    1594:	add	r6, r1, r2
    1598:	add	r0, r6, #4
    159c:	mov	r3, #0
    15a0:	cmp	r3, #0
    15a4:	beq	15b0 <flatcc_verify_union_string+0x48>
    15a8:	mov	r3, #0
    15ac:	b	15ec <flatcc_verify_union_string+0x84>
    15b0:	cmp	r0, ip
    15b4:	movls	r0, #1
    15b8:	movhi	r0, #0
    15bc:	mov	r3, #0
    15c0:	cmp	r6, r1
    15c4:	movhi	r5, r0
    15c8:	movls	r5, r3
    15cc:	and	r0, r6, #3
    15d0:	cmp	r0, #0
    15d4:	moveq	r3, #1
    15d8:	movne	r3, #0
    15dc:	mov	r0, #0
    15e0:	cmp	r5, #0
    15e4:	movne	r3, r3
    15e8:	moveq	r3, r0
    15ec:	cmp	r3, #0
    15f0:	bne	15fc <flatcc_verify_union_string+0x94>
    15f4:	mov	r0, #17
    15f8:	b	1640 <flatcc_verify_union_string+0xd8>
    15fc:	add	r2, r1, r2
    1600:	add	r3, r4, r2
    1604:	ldr	r0, [r3]
    1608:	add	r1, r2, #4
    160c:	sub	r2, ip, r1
    1610:	add	r3, r0, #1
    1614:	cmp	r2, r3
    1618:	bcs	1624 <flatcc_verify_union_string+0xbc>
    161c:	mov	r0, #8
    1620:	b	1640 <flatcc_verify_union_string+0xd8>
    1624:	add	ip, r4, r1
    1628:	ldrb	r0, [ip, r0]
    162c:	cmp	r0, #0
    1630:	beq	163c <flatcc_verify_union_string+0xd4>
    1634:	mov	r0, #7
    1638:	b	1640 <flatcc_verify_union_string+0xd8>
    163c:	mov	r0, #0
    1640:	ldr	r4, [sp, #8]
    1644:	ldr	r5, [sp, #12]
    1648:	ldr	r6, [sp, #16]
    164c:	ldr	lr, [sp, #4]
    1650:	add	sp, sp, #24
    1654:	bx	lr

00001658 <flatcc_verify_buffer_header>:
    1658:	mov	ip, sp
    165c:	sub	sp, sp, #24
    1660:	str	ip, [sp]
    1664:	str	lr, [sp, #4]
    1668:	str	r4, [sp, #8]
    166c:	mov	r4, r0
    1670:	and	r0, r4, #3
    1674:	cmp	r0, #0
    1678:	beq	1684 <flatcc_verify_buffer_header+0x2c>
    167c:	mov	r0, #5
    1680:	b	1700 <flatcc_verify_buffer_header+0xa8>
    1684:	cmn	r1, #9
    1688:	bls	1694 <flatcc_verify_buffer_header+0x3c>
    168c:	mov	r0, #6
    1690:	b	1700 <flatcc_verify_buffer_header+0xa8>
    1694:	cmp	r1, #8
    1698:	bcs	16a4 <flatcc_verify_buffer_header+0x4c>
    169c:	mov	r0, #1
    16a0:	b	1700 <flatcc_verify_buffer_header+0xa8>
    16a4:	cmp	r2, #0
    16a8:	beq	16fc <flatcc_verify_buffer_header+0xa4>
    16ac:	mov	r3, #0
    16b0:	str	r3, [sp, #16]
    16b4:	add	r0, sp, #16
    16b8:	mov	r3, #4
    16bc:	mov	r1, r2
    16c0:	mov	r2, r3
    16c4:	bl	0 <strncpy>
    16c8:	ldr	r0, [sp, #16]
    16cc:	ldr	r1, [r4, #4]
    16d0:	mov	ip, #1
    16d4:	cmp	r1, r0
    16d8:	moveq	r1, #1
    16dc:	movne	r1, #0
    16e0:	cmp	r0, #0
    16e4:	moveq	r3, ip
    16e8:	movne	r3, r1
    16ec:	cmp	r3, #0
    16f0:	bne	16fc <flatcc_verify_buffer_header+0xa4>
    16f4:	mov	r0, #2
    16f8:	b	1700 <flatcc_verify_buffer_header+0xa8>
    16fc:	mov	r0, #0
    1700:	ldr	r4, [sp, #8]
    1704:	ldr	lr, [sp, #4]
    1708:	add	sp, sp, #24
    170c:	bx	lr

00001710 <flatcc_verify_typed_buffer_header>:
    1710:	mov	ip, sp
    1714:	sub	sp, sp, #8
    1718:	str	ip, [sp]
    171c:	str	lr, [sp, #4]
    1720:	and	r3, r0, #3
    1724:	cmp	r3, #0
    1728:	beq	1734 <flatcc_verify_typed_buffer_header+0x24>
    172c:	mov	r0, #5
    1730:	b	1790 <flatcc_verify_typed_buffer_header+0x80>
    1734:	cmn	r1, #9
    1738:	bls	1744 <flatcc_verify_typed_buffer_header+0x34>
    173c:	mov	r0, #6
    1740:	b	1790 <flatcc_verify_typed_buffer_header+0x80>
    1744:	cmp	r1, #8
    1748:	bcs	1754 <flatcc_verify_typed_buffer_header+0x44>
    174c:	mov	r0, #1
    1750:	b	1790 <flatcc_verify_typed_buffer_header+0x80>
    1754:	cmp	r2, #0
    1758:	beq	178c <flatcc_verify_typed_buffer_header+0x7c>
    175c:	ldr	r0, [r0, #4]
    1760:	mov	ip, #1
    1764:	cmp	r0, r2
    1768:	moveq	r3, #1
    176c:	movne	r3, #0
    1770:	cmp	r2, #0
    1774:	moveq	r1, ip
    1778:	movne	r1, r3
    177c:	cmp	r1, #0
    1780:	bne	178c <flatcc_verify_typed_buffer_header+0x7c>
    1784:	mov	r0, #2
    1788:	b	1790 <flatcc_verify_typed_buffer_header+0x80>
    178c:	mov	r0, #0
    1790:	ldr	lr, [sp, #4]
    1794:	add	sp, sp, #8
    1798:	bx	lr

0000179c <flatcc_verify_struct_as_root>:
    179c:	mov	ip, sp
    17a0:	sub	sp, sp, #32
    17a4:	str	ip, [sp]
    17a8:	str	lr, [sp, #4]
    17ac:	str	r4, [sp, #8]
    17b0:	str	r5, [sp, #12]
    17b4:	str	r6, [sp, #16]
    17b8:	str	r7, [sp, #20]
    17bc:	str	r8, [sp, #24]
    17c0:	ldr	r8, [ip]
    17c4:	mov	r7, r3
    17c8:	mov	r5, r2
    17cc:	mov	r6, r1
    17d0:	mov	r4, r0
    17d4:	mov	r2, r5
    17d8:	mov	r1, r6
    17dc:	mov	r0, r4
    17e0:	bl	1658 <flatcc_verify_buffer_header>
    17e4:	cmp	r0, #0
    17e8:	beq	1818 <flatcc_verify_struct_as_root+0x7c>
    17ec:	mov	r2, r5
    17f0:	mov	r1, r6
    17f4:	mov	r0, r4
    17f8:	ldr	r4, [sp, #8]
    17fc:	ldr	r5, [sp, #12]
    1800:	ldr	r6, [sp, #16]
    1804:	ldr	r7, [sp, #20]
    1808:	ldr	r8, [sp, #24]
    180c:	ldr	lr, [sp, #4]
    1810:	add	sp, sp, #32
    1814:	b	1658 <flatcc_verify_buffer_header>
    1818:	ldr	r0, [r4]
    181c:	bic	r2, r8, #16711680	; 0xff0000
    1820:	bic	r2, r2, #-16777216	; 0xff000000
    1824:	mov	r3, #1
    1828:	cmp	r0, r6
    182c:	movhi	ip, #1
    1830:	movls	ip, #0
    1834:	cmp	r0, #0
    1838:	moveq	r1, r3
    183c:	movne	r1, ip
    1840:	cmp	r1, #0
    1844:	beq	1850 <flatcc_verify_struct_as_root+0xb4>
    1848:	mov	r0, #18
    184c:	b	1890 <flatcc_verify_struct_as_root+0xf4>
    1850:	add	r1, r0, r7
    1854:	cmp	r1, r0
    1858:	bcs	1864 <flatcc_verify_struct_as_root+0xc8>
    185c:	mov	r0, #10
    1860:	b	1890 <flatcc_verify_struct_as_root+0xf4>
    1864:	cmp	r1, r6
    1868:	bls	1874 <flatcc_verify_struct_as_root+0xd8>
    186c:	mov	r0, #9
    1870:	b	1890 <flatcc_verify_struct_as_root+0xf4>
    1874:	sub	ip, r2, #1
    1878:	and	r0, r0, ip
    187c:	cmp	r0, #0
    1880:	beq	188c <flatcc_verify_struct_as_root+0xf0>
    1884:	mov	r0, #11
    1888:	b	1890 <flatcc_verify_struct_as_root+0xf4>
    188c:	mov	r0, #0
    1890:	ldr	r4, [sp, #8]
    1894:	ldr	r5, [sp, #12]
    1898:	ldr	r6, [sp, #16]
    189c:	ldr	r7, [sp, #20]
    18a0:	ldr	r8, [sp, #24]
    18a4:	ldr	lr, [sp, #4]
    18a8:	add	sp, sp, #32
    18ac:	bx	lr

000018b0 <flatcc_verify_struct_as_typed_root>:
    18b0:	mov	ip, sp
    18b4:	sub	sp, sp, #32
    18b8:	str	ip, [sp]
    18bc:	str	lr, [sp, #4]
    18c0:	str	r4, [sp, #8]
    18c4:	str	r5, [sp, #12]
    18c8:	str	r6, [sp, #16]
    18cc:	str	r7, [sp, #20]
    18d0:	str	r8, [sp, #24]
    18d4:	ldr	r8, [ip]
    18d8:	mov	r7, r3
    18dc:	mov	r5, r2
    18e0:	mov	r6, r1
    18e4:	mov	r4, r0
    18e8:	mov	r2, r5
    18ec:	mov	r1, r6
    18f0:	mov	r0, r4
    18f4:	bl	1710 <flatcc_verify_typed_buffer_header>
    18f8:	cmp	r0, #0
    18fc:	beq	192c <flatcc_verify_struct_as_typed_root+0x7c>
    1900:	mov	r2, r5
    1904:	mov	r1, r6
    1908:	mov	r0, r4
    190c:	ldr	r4, [sp, #8]
    1910:	ldr	r5, [sp, #12]
    1914:	ldr	r6, [sp, #16]
    1918:	ldr	r7, [sp, #20]
    191c:	ldr	r8, [sp, #24]
    1920:	ldr	lr, [sp, #4]
    1924:	add	sp, sp, #32
    1928:	b	1710 <flatcc_verify_typed_buffer_header>
    192c:	ldr	r0, [r4]
    1930:	bic	r2, r8, #16711680	; 0xff0000
    1934:	bic	r2, r2, #-16777216	; 0xff000000
    1938:	mov	r3, #1
    193c:	cmp	r0, r6
    1940:	movhi	ip, #1
    1944:	movls	ip, #0
    1948:	cmp	r0, #0
    194c:	moveq	r1, r3
    1950:	movne	r1, ip
    1954:	cmp	r1, #0
    1958:	beq	1964 <flatcc_verify_struct_as_typed_root+0xb4>
    195c:	mov	r0, #18
    1960:	b	19a4 <flatcc_verify_struct_as_typed_root+0xf4>
    1964:	add	r1, r0, r7
    1968:	cmp	r1, r0
    196c:	bcs	1978 <flatcc_verify_struct_as_typed_root+0xc8>
    1970:	mov	r0, #10
    1974:	b	19a4 <flatcc_verify_struct_as_typed_root+0xf4>
    1978:	cmp	r1, r6
    197c:	bls	1988 <flatcc_verify_struct_as_typed_root+0xd8>
    1980:	mov	r0, #9
    1984:	b	19a4 <flatcc_verify_struct_as_typed_root+0xf4>
    1988:	sub	ip, r2, #1
    198c:	and	r0, r0, ip
    1990:	cmp	r0, #0
    1994:	beq	19a0 <flatcc_verify_struct_as_typed_root+0xf0>
    1998:	mov	r0, #11
    199c:	b	19a4 <flatcc_verify_struct_as_typed_root+0xf4>
    19a0:	mov	r0, #0
    19a4:	ldr	r4, [sp, #8]
    19a8:	ldr	r5, [sp, #12]
    19ac:	ldr	r6, [sp, #16]
    19b0:	ldr	r7, [sp, #20]
    19b4:	ldr	r8, [sp, #24]
    19b8:	ldr	lr, [sp, #4]
    19bc:	add	sp, sp, #32
    19c0:	bx	lr

000019c4 <flatcc_verify_table_as_root>:
    19c4:	mov	ip, sp
    19c8:	sub	sp, sp, #48	; 0x30
    19cc:	str	ip, [sp]
    19d0:	str	lr, [sp, #4]
    19d4:	str	r4, [sp, #8]
    19d8:	str	r5, [sp, #12]
    19dc:	str	r6, [sp, #16]
    19e0:	str	r7, [sp, #20]
    19e4:	mov	r5, r3
    19e8:	mov	r7, r2
    19ec:	mov	r4, r1
    19f0:	mov	r6, r0
    19f4:	mov	r2, r7
    19f8:	mov	r1, r4
    19fc:	mov	r0, r6
    1a00:	bl	1658 <flatcc_verify_buffer_header>
    1a04:	cmp	r0, #0
    1a08:	beq	1a34 <flatcc_verify_table_as_root+0x70>
    1a0c:	mov	r2, r7
    1a10:	mov	r1, r4
    1a14:	mov	r0, r6
    1a18:	ldr	r4, [sp, #8]
    1a1c:	ldr	r5, [sp, #12]
    1a20:	ldr	r6, [sp, #16]
    1a24:	ldr	r7, [sp, #20]
    1a28:	ldr	lr, [sp, #4]
    1a2c:	add	sp, sp, #48	; 0x30
    1a30:	b	1658 <flatcc_verify_buffer_header>
    1a34:	mov	r1, r6
    1a38:	ldr	ip, [r1]
    1a3c:	mov	r2, #99	; 0x63
    1a40:	str	r2, [sp, #32]
    1a44:	mov	r0, ip
    1a48:	add	r3, r0, #4
    1a4c:	mov	r1, #0
    1a50:	cmp	r1, #0
    1a54:	beq	1a60 <flatcc_verify_table_as_root+0x9c>
    1a58:	mov	r0, #0
    1a5c:	b	1a9c <flatcc_verify_table_as_root+0xd8>
    1a60:	cmp	r3, r4
    1a64:	movls	r2, #1
    1a68:	movhi	r2, #0
    1a6c:	mov	r3, #0
    1a70:	cmp	r0, #0
    1a74:	movhi	r1, r2
    1a78:	movls	r1, r3
    1a7c:	and	r0, r0, #3
    1a80:	cmp	r0, #0
    1a84:	moveq	r3, #1
    1a88:	movne	r3, #0
    1a8c:	mov	r0, #0
    1a90:	cmp	r1, #0
    1a94:	movne	r0, r3
    1a98:	moveq	r0, r0
    1a9c:	cmp	r0, #0
    1aa0:	bne	1aac <flatcc_verify_table_as_root+0xe8>
    1aa4:	mov	r0, #15
    1aa8:	b	1ba8 <flatcc_verify_table_as_root+0x1e4>
    1aac:	str	ip, [sp, #40]	; 0x28
    1ab0:	add	r2, r6, ip
    1ab4:	ldr	r2, [r2]
    1ab8:	sub	ip, ip, r2
    1abc:	and	r0, ip, #1
    1ac0:	eor	r0, r0, #1
    1ac4:	mov	r2, #0
    1ac8:	cmp	ip, #0
    1acc:	movge	r2, r0
    1ad0:	movlt	r2, r2
    1ad4:	cmp	r2, #0
    1ad8:	bne	1ae4 <flatcc_verify_table_as_root+0x120>
    1adc:	mov	r0, #29
    1ae0:	b	1ba8 <flatcc_verify_table_as_root+0x1e4>
    1ae4:	add	r1, ip, #2
    1ae8:	cmp	r1, r4
    1aec:	bls	1af8 <flatcc_verify_table_as_root+0x134>
    1af0:	mov	r0, #27
    1af4:	b	1ba8 <flatcc_verify_table_as_root+0x1e4>
    1af8:	add	r0, r6, ip
    1afc:	ldrh	r1, [r0]
    1b00:	bic	r0, r1, #16711680	; 0xff0000
    1b04:	bic	r0, r0, #-16777216	; 0xff000000
    1b08:	strh	r0, [sp, #46]	; 0x2e
    1b0c:	add	r1, ip, r0
    1b10:	cmp	r1, r4
    1b14:	bhi	1b24 <flatcc_verify_table_as_root+0x160>
    1b18:	and	r0, r0, #1
    1b1c:	eor	r0, r0, #1
    1b20:	b	1b28 <flatcc_verify_table_as_root+0x164>
    1b24:	mov	r0, #0
    1b28:	cmp	r0, #0
    1b2c:	bne	1b38 <flatcc_verify_table_as_root+0x174>
    1b30:	mov	r0, #30
    1b34:	b	1ba8 <flatcc_verify_table_as_root+0x1e4>
    1b38:	mov	r3, #1
    1b3c:	cmp	r3, #0
    1b40:	bne	1b4c <flatcc_verify_table_as_root+0x188>
    1b44:	mov	r0, #31
    1b48:	b	1ba8 <flatcc_verify_table_as_root+0x1e4>
    1b4c:	ldrh	r0, [sp, #46]	; 0x2e
    1b50:	cmp	r0, #4
    1b54:	bcs	1b60 <flatcc_verify_table_as_root+0x19c>
    1b58:	mov	r0, #28
    1b5c:	b	1ba8 <flatcc_verify_table_as_root+0x1e4>
    1b60:	add	r1, ip, #2
    1b64:	add	r0, r6, r1
    1b68:	ldrh	r3, [r0]
    1b6c:	bic	r1, r3, #16711680	; 0xff0000
    1b70:	bic	r1, r1, #-16777216	; 0xff000000
    1b74:	strh	r1, [sp, #44]	; 0x2c
    1b78:	ldr	r3, [sp, #40]	; 0x28
    1b7c:	sub	r2, r4, r3
    1b80:	cmp	r2, r1
    1b84:	bcs	1b90 <flatcc_verify_table_as_root+0x1cc>
    1b88:	mov	r0, #20
    1b8c:	b	1ba8 <flatcc_verify_table_as_root+0x1e4>
    1b90:	add	r2, r6, ip
    1b94:	str	r2, [sp, #36]	; 0x24
    1b98:	str	r6, [sp, #24]
    1b9c:	str	r4, [sp, #28]
    1ba0:	add	r0, sp, #24
    1ba4:	blx	r5
    1ba8:	ldr	r4, [sp, #8]
    1bac:	ldr	r5, [sp, #12]
    1bb0:	ldr	r6, [sp, #16]
    1bb4:	ldr	r7, [sp, #20]
    1bb8:	ldr	lr, [sp, #4]
    1bbc:	add	sp, sp, #48	; 0x30
    1bc0:	bx	lr

00001bc4 <flatcc_verify_table_as_typed_root>:
    1bc4:	mov	ip, sp
    1bc8:	sub	sp, sp, #48	; 0x30
    1bcc:	str	ip, [sp]
    1bd0:	str	lr, [sp, #4]
    1bd4:	str	r4, [sp, #8]
    1bd8:	str	r5, [sp, #12]
    1bdc:	str	r6, [sp, #16]
    1be0:	str	r7, [sp, #20]
    1be4:	mov	r5, r3
    1be8:	mov	r7, r2
    1bec:	mov	r4, r1
    1bf0:	mov	r6, r0
    1bf4:	mov	r2, r7
    1bf8:	mov	r1, r4
    1bfc:	mov	r0, r6
    1c00:	bl	1710 <flatcc_verify_typed_buffer_header>
    1c04:	cmp	r0, #0
    1c08:	beq	1c34 <flatcc_verify_table_as_typed_root+0x70>
    1c0c:	mov	r2, r7
    1c10:	mov	r1, r4
    1c14:	mov	r0, r6
    1c18:	ldr	r4, [sp, #8]
    1c1c:	ldr	r5, [sp, #12]
    1c20:	ldr	r6, [sp, #16]
    1c24:	ldr	r7, [sp, #20]
    1c28:	ldr	lr, [sp, #4]
    1c2c:	add	sp, sp, #48	; 0x30
    1c30:	b	1710 <flatcc_verify_typed_buffer_header>
    1c34:	mov	r1, r6
    1c38:	ldr	ip, [r1]
    1c3c:	mov	r2, #99	; 0x63
    1c40:	str	r2, [sp, #32]
    1c44:	mov	r0, ip
    1c48:	add	r3, r0, #4
    1c4c:	mov	r1, #0
    1c50:	cmp	r1, #0
    1c54:	beq	1c60 <flatcc_verify_table_as_typed_root+0x9c>
    1c58:	mov	r0, #0
    1c5c:	b	1c9c <flatcc_verify_table_as_typed_root+0xd8>
    1c60:	cmp	r3, r4
    1c64:	movls	r2, #1
    1c68:	movhi	r2, #0
    1c6c:	mov	r3, #0
    1c70:	cmp	r0, #0
    1c74:	movhi	r1, r2
    1c78:	movls	r1, r3
    1c7c:	and	r0, r0, #3
    1c80:	cmp	r0, #0
    1c84:	moveq	r3, #1
    1c88:	movne	r3, #0
    1c8c:	mov	r0, #0
    1c90:	cmp	r1, #0
    1c94:	movne	r0, r3
    1c98:	moveq	r0, r0
    1c9c:	cmp	r0, #0
    1ca0:	bne	1cac <flatcc_verify_table_as_typed_root+0xe8>
    1ca4:	mov	r0, #15
    1ca8:	b	1da8 <flatcc_verify_table_as_typed_root+0x1e4>
    1cac:	str	ip, [sp, #40]	; 0x28
    1cb0:	add	r2, r6, ip
    1cb4:	ldr	r2, [r2]
    1cb8:	sub	ip, ip, r2
    1cbc:	and	r0, ip, #1
    1cc0:	eor	r0, r0, #1
    1cc4:	mov	r2, #0
    1cc8:	cmp	ip, #0
    1ccc:	movge	r2, r0
    1cd0:	movlt	r2, r2
    1cd4:	cmp	r2, #0
    1cd8:	bne	1ce4 <flatcc_verify_table_as_typed_root+0x120>
    1cdc:	mov	r0, #29
    1ce0:	b	1da8 <flatcc_verify_table_as_typed_root+0x1e4>
    1ce4:	add	r1, ip, #2
    1ce8:	cmp	r1, r4
    1cec:	bls	1cf8 <flatcc_verify_table_as_typed_root+0x134>
    1cf0:	mov	r0, #27
    1cf4:	b	1da8 <flatcc_verify_table_as_typed_root+0x1e4>
    1cf8:	add	r0, r6, ip
    1cfc:	ldrh	r1, [r0]
    1d00:	bic	r0, r1, #16711680	; 0xff0000
    1d04:	bic	r0, r0, #-16777216	; 0xff000000
    1d08:	strh	r0, [sp, #46]	; 0x2e
    1d0c:	add	r1, ip, r0
    1d10:	cmp	r1, r4
    1d14:	bhi	1d24 <flatcc_verify_table_as_typed_root+0x160>
    1d18:	and	r0, r0, #1
    1d1c:	eor	r0, r0, #1
    1d20:	b	1d28 <flatcc_verify_table_as_typed_root+0x164>
    1d24:	mov	r0, #0
    1d28:	cmp	r0, #0
    1d2c:	bne	1d38 <flatcc_verify_table_as_typed_root+0x174>
    1d30:	mov	r0, #30
    1d34:	b	1da8 <flatcc_verify_table_as_typed_root+0x1e4>
    1d38:	mov	r3, #1
    1d3c:	cmp	r3, #0
    1d40:	bne	1d4c <flatcc_verify_table_as_typed_root+0x188>
    1d44:	mov	r0, #31
    1d48:	b	1da8 <flatcc_verify_table_as_typed_root+0x1e4>
    1d4c:	ldrh	r0, [sp, #46]	; 0x2e
    1d50:	cmp	r0, #4
    1d54:	bcs	1d60 <flatcc_verify_table_as_typed_root+0x19c>
    1d58:	mov	r0, #28
    1d5c:	b	1da8 <flatcc_verify_table_as_typed_root+0x1e4>
    1d60:	add	r1, ip, #2
    1d64:	add	r0, r6, r1
    1d68:	ldrh	r3, [r0]
    1d6c:	bic	r1, r3, #16711680	; 0xff0000
    1d70:	bic	r1, r1, #-16777216	; 0xff000000
    1d74:	strh	r1, [sp, #44]	; 0x2c
    1d78:	ldr	r3, [sp, #40]	; 0x28
    1d7c:	sub	r2, r4, r3
    1d80:	cmp	r2, r1
    1d84:	bcs	1d90 <flatcc_verify_table_as_typed_root+0x1cc>
    1d88:	mov	r0, #20
    1d8c:	b	1da8 <flatcc_verify_table_as_typed_root+0x1e4>
    1d90:	add	r2, r6, ip
    1d94:	str	r2, [sp, #36]	; 0x24
    1d98:	str	r6, [sp, #24]
    1d9c:	str	r4, [sp, #28]
    1da0:	add	r0, sp, #24
    1da4:	blx	r5
    1da8:	ldr	r4, [sp, #8]
    1dac:	ldr	r5, [sp, #12]
    1db0:	ldr	r6, [sp, #16]
    1db4:	ldr	r7, [sp, #20]
    1db8:	ldr	lr, [sp, #4]
    1dbc:	add	sp, sp, #48	; 0x30
    1dc0:	bx	lr

00001dc4 <flatcc_verify_struct_as_nested_root>:
    1dc4:	mov	ip, sp
    1dc8:	sub	sp, sp, #48	; 0x30
    1dcc:	str	ip, [sp, #8]
    1dd0:	str	lr, [sp, #12]
    1dd4:	str	r4, [sp, #16]
    1dd8:	str	r5, [sp, #20]
    1ddc:	str	r6, [sp, #24]
    1de0:	str	r7, [sp, #28]
    1de4:	str	r8, [sp, #32]
    1de8:	str	r9, [sp, #36]	; 0x24
    1dec:	str	sl, [sp, #40]	; 0x28
    1df0:	str	fp, [sp, #44]	; 0x2c
    1df4:	ldr	r5, [ip, #4]
    1df8:	ldr	r7, [ip]
    1dfc:	mov	r6, r3
    1e00:	mov	r8, r2
    1e04:	mov	r9, r1
    1e08:	mov	r4, r0
    1e0c:	mov	r1, #1
    1e10:	bic	sl, r9, #16711680	; 0xff0000
    1e14:	bic	sl, sl, #-16777216	; 0xff000000
    1e18:	mov	fp, #1
    1e1c:	mvn	r0, #0
    1e20:	bl	0 <__aeabi_uidiv>
    1e24:	str	r0, [sp, #4]
    1e28:	str	fp, [sp]
    1e2c:	mov	r3, r5
    1e30:	mov	r2, r8
    1e34:	mov	r1, sl
    1e38:	mov	r0, r4
    1e3c:	bl	5f0 <flatcc_verify_vector_field>
    1e40:	cmp	r0, #0
    1e44:	beq	1e80 <flatcc_verify_struct_as_nested_root+0xbc>
    1e48:	mov	r1, #1
    1e4c:	bic	r6, r9, #16711680	; 0xff0000
    1e50:	bic	r6, r6, #-16777216	; 0xff000000
    1e54:	mov	r7, #1
    1e58:	mvn	r0, #0
    1e5c:	bl	0 <__aeabi_uidiv>
    1e60:	str	r0, [sp, #4]
    1e64:	str	r7, [sp]
    1e68:	mov	r3, r5
    1e6c:	mov	r2, r8
    1e70:	mov	r1, r6
    1e74:	mov	r0, r4
    1e78:	bl	5f0 <flatcc_verify_vector_field>
    1e7c:	b	1f18 <flatcc_verify_struct_as_nested_root+0x154>
    1e80:	lsl	r3, r9, #1
    1e84:	add	ip, r3, #4
    1e88:	bic	ip, ip, #16711680	; 0xff0000
    1e8c:	bic	ip, ip, #-16777216	; 0xff000000
    1e90:	ldrh	r3, [r4, #22]
    1e94:	cmp	ip, r3
    1e98:	blt	1ea4 <flatcc_verify_struct_as_nested_root+0xe0>
    1e9c:	mov	r1, #0
    1ea0:	b	1eb0 <flatcc_verify_struct_as_nested_root+0xec>
    1ea4:	ldr	r2, [r4, #12]
    1ea8:	add	ip, r2, ip
    1eac:	ldrh	r1, [ip]
    1eb0:	bic	r0, r1, #16711680	; 0xff0000
    1eb4:	bic	r0, r0, #-16777216	; 0xff000000
    1eb8:	cmp	r0, #0
    1ebc:	beq	1ed4 <flatcc_verify_struct_as_nested_root+0x110>
    1ec0:	ldr	r2, [r4]
    1ec4:	ldr	r1, [r4, #16]
    1ec8:	add	r2, r2, r1
    1ecc:	add	r0, r2, r0
    1ed0:	b	1ed8 <flatcc_verify_struct_as_nested_root+0x114>
    1ed4:	mov	r0, #0
    1ed8:	cmp	r0, #0
    1edc:	bne	1ee8 <flatcc_verify_struct_as_nested_root+0x124>
    1ee0:	mov	r0, #0
    1ee4:	b	1f18 <flatcc_verify_struct_as_nested_root+0x154>
    1ee8:	mov	r2, r0
    1eec:	ldr	r3, [r2]
    1ef0:	add	r3, r0, r3
    1ef4:	mov	r0, r3
    1ef8:	ldr	r1, [r0]
    1efc:	add	r0, r3, #4
    1f00:	bic	r2, r5, #16711680	; 0xff0000
    1f04:	bic	r2, r2, #-16777216	; 0xff000000
    1f08:	str	r2, [sp]
    1f0c:	mov	r3, r7
    1f10:	mov	r2, r6
    1f14:	bl	179c <flatcc_verify_struct_as_root>
    1f18:	ldr	r4, [sp, #16]
    1f1c:	ldr	r5, [sp, #20]
    1f20:	ldr	r6, [sp, #24]
    1f24:	ldr	r7, [sp, #28]
    1f28:	ldr	r8, [sp, #32]
    1f2c:	ldr	r9, [sp, #36]	; 0x24
    1f30:	ldr	sl, [sp, #40]	; 0x28
    1f34:	ldr	fp, [sp, #44]	; 0x2c
    1f38:	ldr	lr, [sp, #12]
    1f3c:	add	sp, sp, #48	; 0x30
    1f40:	bx	lr

00001f44 <flatcc_verify_table_as_nested_root>:
    1f44:	mov	ip, sp
    1f48:	sub	sp, sp, #72	; 0x48
    1f4c:	str	ip, [sp, #8]
    1f50:	str	lr, [sp, #12]
    1f54:	str	r4, [sp, #16]
    1f58:	str	r5, [sp, #20]
    1f5c:	str	r6, [sp, #24]
    1f60:	str	r7, [sp, #28]
    1f64:	str	r8, [sp, #32]
    1f68:	str	r9, [sp, #36]	; 0x24
    1f6c:	str	sl, [sp, #40]	; 0x28
    1f70:	str	fp, [sp, #44]	; 0x2c
    1f74:	ldr	r5, [ip, #4]
    1f78:	ldr	r9, [ip]
    1f7c:	mov	r7, r3
    1f80:	mov	r6, r2
    1f84:	mov	r4, r1
    1f88:	mov	r8, r0
    1f8c:	mov	r1, #1
    1f90:	bic	sl, r4, #16711680	; 0xff0000
    1f94:	bic	sl, sl, #-16777216	; 0xff000000
    1f98:	mov	fp, #1
    1f9c:	mvn	r0, #0
    1fa0:	bl	0 <__aeabi_uidiv>
    1fa4:	str	r0, [sp, #4]
    1fa8:	str	fp, [sp]
    1fac:	mov	r3, r9
    1fb0:	mov	r2, r6
    1fb4:	mov	r1, sl
    1fb8:	mov	r0, r8
    1fbc:	bl	5f0 <flatcc_verify_vector_field>
    1fc0:	cmp	r0, #0
    1fc4:	beq	2000 <flatcc_verify_table_as_nested_root+0xbc>
    1fc8:	mov	r1, #1
    1fcc:	bic	r4, r4, #16711680	; 0xff0000
    1fd0:	bic	r4, r4, #-16777216	; 0xff000000
    1fd4:	mov	r5, #1
    1fd8:	mvn	r0, #0
    1fdc:	bl	0 <__aeabi_uidiv>
    1fe0:	str	r0, [sp, #4]
    1fe4:	str	r5, [sp]
    1fe8:	mov	r3, r9
    1fec:	mov	r2, r6
    1ff0:	mov	r1, r4
    1ff4:	mov	r0, r8
    1ff8:	bl	5f0 <flatcc_verify_vector_field>
    1ffc:	b	225c <flatcc_verify_table_as_nested_root+0x318>
    2000:	mov	r1, r8
    2004:	lsl	r0, r4, #1
    2008:	add	r0, r0, #4
    200c:	bic	r3, r0, #16711680	; 0xff0000
    2010:	bic	r3, r3, #-16777216	; 0xff000000
    2014:	ldrh	ip, [r1, #22]
    2018:	cmp	r3, ip
    201c:	blt	2028 <flatcc_verify_table_as_nested_root+0xe4>
    2020:	mov	r2, #0
    2024:	b	2034 <flatcc_verify_table_as_nested_root+0xf0>
    2028:	ldr	r2, [r1, #12]
    202c:	add	r2, r2, r3
    2030:	ldrh	r2, [r2]
    2034:	bic	r2, r2, #16711680	; 0xff0000
    2038:	bic	r2, r2, #-16777216	; 0xff000000
    203c:	cmp	r2, #0
    2040:	beq	2058 <flatcc_verify_table_as_nested_root+0x114>
    2044:	ldr	ip, [r8]
    2048:	ldr	r0, [r8, #16]
    204c:	add	r3, ip, r0
    2050:	add	r2, r3, r2
    2054:	b	205c <flatcc_verify_table_as_nested_root+0x118>
    2058:	mov	r2, #0
    205c:	cmp	r2, #0
    2060:	bne	206c <flatcc_verify_table_as_nested_root+0x128>
    2064:	mov	r0, #0
    2068:	b	225c <flatcc_verify_table_as_nested_root+0x318>
    206c:	mov	r3, r2
    2070:	ldr	r3, [r3]
    2074:	add	r0, r2, r3
    2078:	mov	ip, r0
    207c:	ldr	r4, [ip]
    2080:	add	r6, r0, #4
    2084:	mov	r2, r7
    2088:	mov	r1, r4
    208c:	mov	r0, r6
    2090:	bl	1658 <flatcc_verify_buffer_header>
    2094:	cmp	r0, #0
    2098:	beq	20d4 <flatcc_verify_table_as_nested_root+0x190>
    209c:	mov	r2, r7
    20a0:	mov	r1, r4
    20a4:	mov	r0, r6
    20a8:	ldr	r4, [sp, #16]
    20ac:	ldr	r5, [sp, #20]
    20b0:	ldr	r6, [sp, #24]
    20b4:	ldr	r7, [sp, #28]
    20b8:	ldr	r8, [sp, #32]
    20bc:	ldr	r9, [sp, #36]	; 0x24
    20c0:	ldr	sl, [sp, #40]	; 0x28
    20c4:	ldr	fp, [sp, #44]	; 0x2c
    20c8:	ldr	lr, [sp, #12]
    20cc:	add	sp, sp, #72	; 0x48
    20d0:	b	1658 <flatcc_verify_buffer_header>
    20d4:	mov	r1, r6
    20d8:	ldr	r2, [r1]
    20dc:	ldr	ip, [r8, #8]
    20e0:	sub	r0, ip, #1
    20e4:	str	r0, [sp, #56]	; 0x38
    20e8:	cmp	r0, #0
    20ec:	bne	20f8 <flatcc_verify_table_as_nested_root+0x1b4>
    20f0:	mov	r0, #3
    20f4:	b	225c <flatcc_verify_table_as_nested_root+0x318>
    20f8:	mov	r3, r2
    20fc:	add	r1, r3, #4
    2100:	mov	ip, #0
    2104:	cmp	ip, #0
    2108:	beq	2114 <flatcc_verify_table_as_nested_root+0x1d0>
    210c:	mov	ip, #0
    2110:	b	2150 <flatcc_verify_table_as_nested_root+0x20c>
    2114:	cmp	r1, r4
    2118:	movls	r1, #1
    211c:	movhi	r1, #0
    2120:	mov	ip, #0
    2124:	cmp	r3, #0
    2128:	movhi	r1, r1
    212c:	movls	r1, ip
    2130:	and	r3, r3, #3
    2134:	cmp	r3, #0
    2138:	moveq	r0, #1
    213c:	movne	r0, #0
    2140:	mov	r3, #0
    2144:	cmp	r1, #0
    2148:	movne	ip, r0
    214c:	moveq	ip, r3
    2150:	cmp	ip, #0
    2154:	bne	2160 <flatcc_verify_table_as_nested_root+0x21c>
    2158:	mov	r0, #15
    215c:	b	225c <flatcc_verify_table_as_nested_root+0x318>
    2160:	str	r2, [sp, #64]	; 0x40
    2164:	add	ip, r6, r2
    2168:	ldr	r3, [ip]
    216c:	sub	ip, r2, r3
    2170:	and	r1, ip, #1
    2174:	eor	r3, r1, #1
    2178:	mov	r0, #0
    217c:	cmp	ip, #0
    2180:	movge	r0, r3
    2184:	movlt	r0, r0
    2188:	cmp	r0, #0
    218c:	bne	2198 <flatcc_verify_table_as_nested_root+0x254>
    2190:	mov	r0, #29
    2194:	b	225c <flatcc_verify_table_as_nested_root+0x318>
    2198:	add	r1, ip, #2
    219c:	cmp	r1, r4
    21a0:	bls	21ac <flatcc_verify_table_as_nested_root+0x268>
    21a4:	mov	r0, #27
    21a8:	b	225c <flatcc_verify_table_as_nested_root+0x318>
    21ac:	add	r0, r6, ip
    21b0:	ldrh	r3, [r0]
    21b4:	bic	r1, r3, #16711680	; 0xff0000
    21b8:	bic	r1, r1, #-16777216	; 0xff000000
    21bc:	strh	r1, [sp, #70]	; 0x46
    21c0:	add	r0, ip, r1
    21c4:	cmp	r0, r4
    21c8:	bhi	21d8 <flatcc_verify_table_as_nested_root+0x294>
    21cc:	and	r2, r1, #1
    21d0:	eor	r0, r2, #1
    21d4:	b	21dc <flatcc_verify_table_as_nested_root+0x298>
    21d8:	mov	r0, #0
    21dc:	cmp	r0, #0
    21e0:	bne	21ec <flatcc_verify_table_as_nested_root+0x2a8>
    21e4:	mov	r0, #30
    21e8:	b	225c <flatcc_verify_table_as_nested_root+0x318>
    21ec:	mov	r3, #1
    21f0:	cmp	r3, #0
    21f4:	bne	2200 <flatcc_verify_table_as_nested_root+0x2bc>
    21f8:	mov	r0, #31
    21fc:	b	225c <flatcc_verify_table_as_nested_root+0x318>
    2200:	ldrh	r2, [sp, #70]	; 0x46
    2204:	cmp	r2, #4
    2208:	bcs	2214 <flatcc_verify_table_as_nested_root+0x2d0>
    220c:	mov	r0, #28
    2210:	b	225c <flatcc_verify_table_as_nested_root+0x318>
    2214:	add	r3, ip, #2
    2218:	add	r1, r6, r3
    221c:	ldrh	r3, [r1]
    2220:	bic	r0, r3, #16711680	; 0xff0000
    2224:	bic	r0, r0, #-16777216	; 0xff000000
    2228:	strh	r0, [sp, #68]	; 0x44
    222c:	ldr	r1, [sp, #64]	; 0x40
    2230:	sub	r2, r4, r1
    2234:	cmp	r2, r0
    2238:	bcs	2244 <flatcc_verify_table_as_nested_root+0x300>
    223c:	mov	r0, #20
    2240:	b	225c <flatcc_verify_table_as_nested_root+0x318>
    2244:	add	ip, r6, ip
    2248:	str	ip, [sp, #60]	; 0x3c
    224c:	str	r6, [sp, #48]	; 0x30
    2250:	str	r4, [sp, #52]	; 0x34
    2254:	add	r0, sp, #48	; 0x30
    2258:	blx	r5
    225c:	ldr	r4, [sp, #16]
    2260:	ldr	r5, [sp, #20]
    2264:	ldr	r6, [sp, #24]
    2268:	ldr	r7, [sp, #28]
    226c:	ldr	r8, [sp, #32]
    2270:	ldr	r9, [sp, #36]	; 0x24
    2274:	ldr	sl, [sp, #40]	; 0x28
    2278:	ldr	fp, [sp, #44]	; 0x2c
    227c:	ldr	lr, [sp, #12]
    2280:	add	sp, sp, #72	; 0x48
    2284:	bx	lr

00002288 <flatcc_verify_union_field>:
    2288:	mov	ip, sp
    228c:	sub	sp, sp, #72	; 0x48
    2290:	str	ip, [sp, #4]
    2294:	str	lr, [sp, #8]
    2298:	str	r4, [sp, #16]
    229c:	str	r5, [sp, #20]
    22a0:	str	r6, [sp, #24]
    22a4:	str	r7, [sp, #28]
    22a8:	str	r8, [sp, #32]
    22ac:	mov	r5, r3
    22b0:	mov	r6, r2
    22b4:	mov	r4, r1
    22b8:	mov	r7, r0
    22bc:	sub	r0, r4, #1
    22c0:	lsl	r0, r0, #1
    22c4:	add	r0, r0, #4
    22c8:	bic	ip, r0, #16711680	; 0xff0000
    22cc:	bic	ip, ip, #-16777216	; 0xff000000
    22d0:	ldrh	r1, [r7, #22]
    22d4:	cmp	ip, r1
    22d8:	blt	22e4 <flatcc_verify_union_field+0x5c>
    22dc:	mov	r1, #0
    22e0:	b	22f0 <flatcc_verify_union_field+0x68>
    22e4:	ldr	r2, [r7, #12]
    22e8:	add	r2, r2, ip
    22ec:	ldrh	r1, [r2]
    22f0:	bic	r8, r1, #16711680	; 0xff0000
    22f4:	bic	r8, r8, #-16777216	; 0xff000000
    22f8:	cmp	r8, #0
    22fc:	bne	2360 <flatcc_verify_union_field+0xd8>
    2300:	lsl	r1, r4, #1
    2304:	add	r3, r1, #4
    2308:	bic	ip, r3, #16711680	; 0xff0000
    230c:	bic	ip, ip, #-16777216	; 0xff000000
    2310:	ldrh	r1, [r7, #22]
    2314:	cmp	ip, r1
    2318:	blt	2324 <flatcc_verify_union_field+0x9c>
    231c:	mov	ip, #0
    2320:	b	2330 <flatcc_verify_union_field+0xa8>
    2324:	ldr	r2, [r7, #12]
    2328:	add	r0, r2, ip
    232c:	ldrh	ip, [r0]
    2330:	bic	r2, ip, #16711680	; 0xff0000
    2334:	bic	r2, r2, #-16777216	; 0xff000000
    2338:	cmp	r2, #0
    233c:	beq	2348 <flatcc_verify_union_field+0xc0>
    2340:	mov	r0, #23
    2344:	b	24a4 <flatcc_verify_union_field+0x21c>
    2348:	cmp	r6, #0
    234c:	beq	2358 <flatcc_verify_union_field+0xd0>
    2350:	mov	r0, #21
    2354:	b	24a4 <flatcc_verify_union_field+0x21c>
    2358:	mov	r0, #0
    235c:	b	24a4 <flatcc_verify_union_field+0x21c>
    2360:	sub	r0, r4, #1
    2364:	bic	r1, r0, #16711680	; 0xff0000
    2368:	bic	r1, r1, #-16777216	; 0xff000000
    236c:	mov	r2, #0
    2370:	mov	r3, #1
    2374:	mov	r0, #1
    2378:	str	r0, [sp]
    237c:	mov	r0, r7
    2380:	bl	284 <verify_field>
    2384:	cmp	r0, #0
    2388:	beq	23b4 <flatcc_verify_union_field+0x12c>
    238c:	sub	r3, r4, #1
    2390:	bic	r1, r3, #16711680	; 0xff0000
    2394:	bic	r1, r1, #-16777216	; 0xff000000
    2398:	mov	r2, #0
    239c:	mov	r3, #1
    23a0:	mov	r0, #1
    23a4:	str	r0, [sp]
    23a8:	mov	r0, r7
    23ac:	bl	284 <verify_field>
    23b0:	b	24a4 <flatcc_verify_union_field+0x21c>
    23b4:	mov	r3, r4
    23b8:	lsl	r1, r3, #1
    23bc:	add	r2, r1, #4
    23c0:	bic	r1, r2, #16711680	; 0xff0000
    23c4:	bic	r1, r1, #-16777216	; 0xff000000
    23c8:	ldrh	r2, [r7, #22]
    23cc:	cmp	r1, r2
    23d0:	blt	23dc <flatcc_verify_union_field+0x154>
    23d4:	mov	r0, #0
    23d8:	b	23e8 <flatcc_verify_union_field+0x160>
    23dc:	ldr	r3, [r7, #12]
    23e0:	add	r0, r3, r1
    23e4:	ldrh	r0, [r0]
    23e8:	bic	ip, r0, #16711680	; 0xff0000
    23ec:	bic	ip, ip, #-16777216	; 0xff000000
    23f0:	ldr	r0, [r7]
    23f4:	ldr	r2, [r7, #16]
    23f8:	add	r2, r0, r2
    23fc:	add	r8, r2, r8
    2400:	mov	r0, #1
    2404:	cmp	ip, #0
    2408:	moveq	r1, #1
    240c:	movne	r1, #0
    2410:	ldrb	r3, [r8]
    2414:	cmp	r3, #0
    2418:	movne	ip, r0
    241c:	moveq	ip, r1
    2420:	cmp	ip, #0
    2424:	bne	2430 <flatcc_verify_union_field+0x1a8>
    2428:	mov	r0, #24
    242c:	b	24a4 <flatcc_verify_union_field+0x21c>
    2430:	cmp	r3, #0
    2434:	bne	2440 <flatcc_verify_union_field+0x1b8>
    2438:	mov	r0, #0
    243c:	b	24a4 <flatcc_verify_union_field+0x21c>
    2440:	bic	r1, r4, #16711680	; 0xff0000
    2444:	bic	r1, r1, #-16777216	; 0xff000000
    2448:	add	r3, sp, #40	; 0x28
    244c:	mov	r2, r6
    2450:	mov	r0, r7
    2454:	bl	364 <get_offset_field>
    2458:	cmp	r0, #0
    245c:	bne	24a4 <flatcc_verify_union_field+0x21c>
    2460:	ldr	r2, [sp, #40]	; 0x28
    2464:	cmp	r2, #0
    2468:	beq	24a4 <flatcc_verify_union_field+0x21c>
    246c:	ldr	r1, [r7]
    2470:	str	r1, [sp, #48]	; 0x30
    2474:	ldr	ip, [r7, #4]
    2478:	str	ip, [sp, #52]	; 0x34
    247c:	ldr	r3, [r7, #8]
    2480:	str	r3, [sp, #56]	; 0x38
    2484:	str	r2, [sp, #64]	; 0x40
    2488:	add	r1, r1, r2
    248c:	ldr	ip, [r1]
    2490:	str	ip, [sp, #68]	; 0x44
    2494:	ldrb	r0, [r8]
    2498:	strb	r0, [sp, #60]	; 0x3c
    249c:	add	r0, sp, #48	; 0x30
    24a0:	blx	r5
    24a4:	ldr	r4, [sp, #16]
    24a8:	ldr	r5, [sp, #20]
    24ac:	ldr	r6, [sp, #24]
    24b0:	ldr	r7, [sp, #28]
    24b4:	ldr	r8, [sp, #32]
    24b8:	ldr	lr, [sp, #8]
    24bc:	add	sp, sp, #72	; 0x48
    24c0:	bx	lr

000024c4 <flatcc_verify_union_vector_field>:
    24c4:	mov	ip, sp
    24c8:	sub	sp, sp, #88	; 0x58
    24cc:	str	ip, [sp, #8]
    24d0:	str	lr, [sp, #12]
    24d4:	str	r4, [sp, #24]
    24d8:	str	r5, [sp, #28]
    24dc:	str	r6, [sp, #32]
    24e0:	str	r7, [sp, #36]	; 0x24
    24e4:	str	r8, [sp, #40]	; 0x28
    24e8:	str	r9, [sp, #44]	; 0x2c
    24ec:	str	sl, [sp, #48]	; 0x30
    24f0:	str	fp, [sp, #52]	; 0x34
    24f4:	mov	r9, r3
    24f8:	mov	r4, r2
    24fc:	mov	r5, r1
    2500:	mov	sl, r0
    2504:	sub	r3, r5, #1
    2508:	lsl	r0, r3, #1
    250c:	add	r0, r0, #4
    2510:	bic	r2, r0, #16711680	; 0xff0000
    2514:	bic	r2, r2, #-16777216	; 0xff000000
    2518:	ldrh	ip, [sl, #22]
    251c:	cmp	r2, ip
    2520:	blt	252c <flatcc_verify_union_vector_field+0x68>
    2524:	mov	r3, #0
    2528:	b	2538 <flatcc_verify_union_vector_field+0x74>
    252c:	ldr	r3, [sl, #12]
    2530:	add	r2, r3, r2
    2534:	ldrh	r3, [r2]
    2538:	bic	r3, r3, #16711680	; 0xff0000
    253c:	bic	r3, r3, #-16777216	; 0xff000000
    2540:	cmp	r3, #0
    2544:	bne	259c <flatcc_verify_union_vector_field+0xd8>
    2548:	mov	r0, r5
    254c:	lsl	r3, r0, #1
    2550:	add	r3, r3, #4
    2554:	bic	r2, r3, #16711680	; 0xff0000
    2558:	bic	r2, r2, #-16777216	; 0xff000000
    255c:	ldrh	r3, [sl, #22]
    2560:	cmp	r2, r3
    2564:	blt	2570 <flatcc_verify_union_vector_field+0xac>
    2568:	mov	r2, #0
    256c:	b	257c <flatcc_verify_union_vector_field+0xb8>
    2570:	ldr	ip, [sl, #12]
    2574:	add	r0, ip, r2
    2578:	ldrh	r2, [r0]
    257c:	bic	r0, r2, #16711680	; 0xff0000
    2580:	bic	r0, r0, #-16777216	; 0xff000000
    2584:	cmp	r0, #0
    2588:	bne	259c <flatcc_verify_union_vector_field+0xd8>
    258c:	cmp	r4, #0
    2590:	beq	259c <flatcc_verify_union_vector_field+0xd8>
    2594:	mov	r0, #22
    2598:	b	295c <flatcc_verify_union_vector_field+0x498>
    259c:	mov	r1, #1
    25a0:	sub	r3, r5, #1
    25a4:	bic	r7, r3, #16711680	; 0xff0000
    25a8:	bic	r7, r7, #-16777216	; 0xff000000
    25ac:	mov	r6, #1
    25b0:	mov	r8, #1
    25b4:	mvn	r0, #0
    25b8:	bl	0 <__aeabi_uidiv>
    25bc:	str	r0, [sp, #4]
    25c0:	str	r8, [sp]
    25c4:	mov	r3, r6
    25c8:	mov	r2, r4
    25cc:	mov	r1, r7
    25d0:	mov	r0, sl
    25d4:	bl	5f0 <flatcc_verify_vector_field>
    25d8:	cmp	r0, #0
    25dc:	beq	2620 <flatcc_verify_union_vector_field+0x15c>
    25e0:	mov	r1, #1
    25e4:	sub	r3, r5, #1
    25e8:	bic	r6, r3, #16711680	; 0xff0000
    25ec:	bic	r6, r6, #-16777216	; 0xff000000
    25f0:	mov	r5, #1
    25f4:	mov	r7, #1
    25f8:	mvn	r0, #0
    25fc:	bl	0 <__aeabi_uidiv>
    2600:	str	r0, [sp, #4]
    2604:	str	r7, [sp]
    2608:	mov	r3, r5
    260c:	mov	r2, r4
    2610:	mov	r1, r6
    2614:	mov	r0, sl
    2618:	bl	5f0 <flatcc_verify_vector_field>
    261c:	b	295c <flatcc_verify_union_vector_field+0x498>
    2620:	sub	r3, r5, #1
    2624:	mov	r1, sl
    2628:	lsl	ip, r3, #1
    262c:	add	r2, ip, #4
    2630:	bic	r3, r2, #16711680	; 0xff0000
    2634:	bic	r3, r3, #-16777216	; 0xff000000
    2638:	ldrh	ip, [r1, #22]
    263c:	cmp	r3, ip
    2640:	blt	264c <flatcc_verify_union_vector_field+0x188>
    2644:	mov	r0, #0
    2648:	b	2658 <flatcc_verify_union_vector_field+0x194>
    264c:	ldr	ip, [r1, #12]
    2650:	add	r2, ip, r3
    2654:	ldrh	r0, [r2]
    2658:	bic	r3, r0, #16711680	; 0xff0000
    265c:	bic	r3, r3, #-16777216	; 0xff000000
    2660:	cmp	r3, #0
    2664:	beq	267c <flatcc_verify_union_vector_field+0x1b8>
    2668:	ldr	ip, [r1]
    266c:	ldr	r2, [r1, #16]
    2670:	add	r2, ip, r2
    2674:	add	r3, r2, r3
    2678:	b	2680 <flatcc_verify_union_vector_field+0x1bc>
    267c:	mov	r3, #0
    2680:	cmp	r3, #0
    2684:	bne	2690 <flatcc_verify_union_vector_field+0x1cc>
    2688:	mov	r0, #0
    268c:	b	295c <flatcc_verify_union_vector_field+0x498>
    2690:	mov	r0, r3
    2694:	ldr	r2, [r0]
    2698:	add	r3, r3, r2
    269c:	mov	ip, r3
    26a0:	ldr	r8, [ip]
    26a4:	add	r7, r3, #4
    26a8:	bic	r1, r5, #16711680	; 0xff0000
    26ac:	bic	r1, r1, #-16777216	; 0xff000000
    26b0:	add	r3, sp, #56	; 0x38
    26b4:	mov	r2, r4
    26b8:	mov	r0, sl
    26bc:	bl	364 <get_offset_field>
    26c0:	cmp	r0, #0
    26c4:	bne	295c <flatcc_verify_union_vector_field+0x498>
    26c8:	ldr	r6, [sp, #56]	; 0x38
    26cc:	cmp	r6, #0
    26d0:	beq	295c <flatcc_verify_union_vector_field+0x498>
    26d4:	ldr	r1, [sl]
    26d8:	add	r2, r1, r6
    26dc:	ldr	r4, [r2]
    26e0:	ldr	r5, [sl, #4]
    26e4:	ldr	r0, [sl, #8]
    26e8:	mov	sl, r1
    26ec:	sub	ip, r0, #1
    26f0:	str	ip, [sp, #20]
    26f4:	cmp	r0, #0
    26f8:	bgt	2704 <flatcc_verify_union_vector_field+0x240>
    26fc:	mov	r0, #3
    2700:	b	295c <flatcc_verify_union_vector_field+0x498>
    2704:	mov	r1, #4
    2708:	mvn	r0, #0
    270c:	bl	0 <__aeabi_uidiv>
    2710:	str	r0, [sp, #16]
    2714:	mov	fp, #4
    2718:	mov	ip, r4
    271c:	mov	r2, r6
    2720:	mov	r3, r5
    2724:	add	ip, r2, ip
    2728:	add	r0, ip, #4
    272c:	mov	r1, #0
    2730:	cmp	r1, #0
    2734:	beq	2740 <flatcc_verify_union_vector_field+0x27c>
    2738:	mov	r1, #0
    273c:	b	278c <flatcc_verify_union_vector_field+0x2c8>
    2740:	bic	r1, fp, #16711680	; 0xff0000
    2744:	bic	r1, r1, #-16777216	; 0xff000000
    2748:	cmp	r0, r3
    274c:	movls	fp, #1
    2750:	movhi	fp, #0
    2754:	mov	r3, #0
    2758:	cmp	ip, r2
    275c:	movhi	r2, fp
    2760:	movls	r2, r3
    2764:	cmp	r2, #0
    2768:	beq	2788 <flatcc_verify_union_vector_field+0x2c4>
    276c:	sub	r1, r1, #1
    2770:	orr	ip, r1, #3
    2774:	and	r1, r0, ip
    2778:	cmp	r1, #0
    277c:	moveq	r1, #1
    2780:	movne	r1, #0
    2784:	b	278c <flatcc_verify_union_vector_field+0x2c8>
    2788:	mov	r1, #0
    278c:	cmp	r1, #0
    2790:	bne	279c <flatcc_verify_union_vector_field+0x2d8>
    2794:	mov	r1, #16
    2798:	b	27e0 <flatcc_verify_union_vector_field+0x31c>
    279c:	add	r1, r6, r4
    27a0:	mov	ip, sl
    27a4:	add	r0, ip, r1
    27a8:	ldr	r2, [r0]
    27ac:	add	r1, r1, #4
    27b0:	ldr	r3, [sp, #16]
    27b4:	cmp	r2, r3
    27b8:	bls	27c4 <flatcc_verify_union_vector_field+0x300>
    27bc:	mov	r1, #25
    27c0:	b	27e0 <flatcc_verify_union_vector_field+0x31c>
    27c4:	sub	r3, r5, r1
    27c8:	lsl	r1, r2, #2
    27cc:	cmp	r3, r1
    27d0:	bcs	27dc <flatcc_verify_union_vector_field+0x318>
    27d4:	mov	r1, #26
    27d8:	b	27e0 <flatcc_verify_union_vector_field+0x31c>
    27dc:	mov	r1, #0
    27e0:	cmp	r1, #0
    27e4:	beq	28b0 <flatcc_verify_union_vector_field+0x3ec>
    27e8:	mov	r1, #4
    27ec:	mvn	r0, #0
    27f0:	bl	0 <__aeabi_uidiv>
    27f4:	mov	r1, #4
    27f8:	add	ip, r6, r4
    27fc:	add	r2, ip, #4
    2800:	mov	r3, #0
    2804:	cmp	r3, #0
    2808:	beq	2814 <flatcc_verify_union_vector_field+0x350>
    280c:	mov	r1, #0
    2810:	b	2860 <flatcc_verify_union_vector_field+0x39c>
    2814:	bic	r3, r1, #16711680	; 0xff0000
    2818:	bic	r3, r3, #-16777216	; 0xff000000
    281c:	cmp	r2, r5
    2820:	movls	r7, #1
    2824:	movhi	r7, #0
    2828:	mov	r1, #0
    282c:	cmp	ip, r6
    2830:	movhi	ip, r7
    2834:	movls	ip, r1
    2838:	cmp	ip, #0
    283c:	beq	285c <flatcc_verify_union_vector_field+0x398>
    2840:	sub	r1, r3, #1
    2844:	orr	r1, r1, #3
    2848:	and	r1, r2, r1
    284c:	cmp	r1, #0
    2850:	moveq	r1, #1
    2854:	movne	r1, #0
    2858:	b	2860 <flatcc_verify_union_vector_field+0x39c>
    285c:	mov	r1, #0
    2860:	cmp	r1, #0
    2864:	bne	2870 <flatcc_verify_union_vector_field+0x3ac>
    2868:	mov	r0, #16
    286c:	b	295c <flatcc_verify_union_vector_field+0x498>
    2870:	add	r2, r6, r4
    2874:	add	r1, sl, r2
    2878:	ldr	ip, [r1]
    287c:	add	r1, r2, #4
    2880:	cmp	ip, r0
    2884:	bls	2890 <flatcc_verify_union_vector_field+0x3cc>
    2888:	mov	r0, #25
    288c:	b	295c <flatcc_verify_union_vector_field+0x498>
    2890:	sub	r0, r5, r1
    2894:	lsl	ip, ip, #2
    2898:	cmp	r0, ip
    289c:	bcs	28a8 <flatcc_verify_union_vector_field+0x3e4>
    28a0:	mov	r0, #26
    28a4:	b	295c <flatcc_verify_union_vector_field+0x498>
    28a8:	mov	r0, #0
    28ac:	b	295c <flatcc_verify_union_vector_field+0x498>
    28b0:	add	r1, r6, r4
    28b4:	add	r2, sl, r1
    28b8:	ldr	r4, [r2]
    28bc:	cmp	r4, r8
    28c0:	beq	28cc <flatcc_verify_union_vector_field+0x408>
    28c4:	mov	r0, #34	; 0x22
    28c8:	b	295c <flatcc_verify_union_vector_field+0x498>
    28cc:	add	r6, r1, #4
    28d0:	str	sl, [sp, #64]	; 0x40
    28d4:	str	r5, [sp, #68]	; 0x44
    28d8:	ldr	r2, [sp, #20]
    28dc:	str	r2, [sp, #72]	; 0x48
    28e0:	mov	r5, #0
    28e4:	cmp	r5, r4
    28e8:	bcs	2958 <flatcc_verify_union_vector_field+0x494>
    28ec:	add	r2, sl, r6
    28f0:	ldr	ip, [r2]
    28f4:	cmp	ip, #0
    28f8:	beq	2938 <flatcc_verify_union_vector_field+0x474>
    28fc:	ldrb	r0, [r7, r5]
    2900:	cmp	r0, #0
    2904:	bne	2910 <flatcc_verify_union_vector_field+0x44c>
    2908:	mov	r0, #33	; 0x21
    290c:	b	295c <flatcc_verify_union_vector_field+0x498>
    2910:	strb	r0, [sp, #76]	; 0x4c
    2914:	str	r6, [sp, #80]	; 0x50
    2918:	str	ip, [sp, #84]	; 0x54
    291c:	add	r0, sp, #64	; 0x40
    2920:	blx	r9
    2924:	cmp	r0, #0
    2928:	beq	294c <flatcc_verify_union_vector_field+0x488>
    292c:	add	r0, sp, #64	; 0x40
    2930:	blx	r9
    2934:	b	295c <flatcc_verify_union_vector_field+0x498>
    2938:	ldrb	ip, [r7, r5]
    293c:	cmp	ip, #0
    2940:	beq	294c <flatcc_verify_union_vector_field+0x488>
    2944:	mov	r0, #32
    2948:	b	295c <flatcc_verify_union_vector_field+0x498>
    294c:	add	r5, r5, #1
    2950:	add	r6, r6, #4
    2954:	b	28e4 <flatcc_verify_union_vector_field+0x420>
    2958:	mov	r0, #0
    295c:	ldr	r4, [sp, #24]
    2960:	ldr	r5, [sp, #28]
    2964:	ldr	r6, [sp, #32]
    2968:	ldr	r7, [sp, #36]	; 0x24
    296c:	ldr	r8, [sp, #40]	; 0x28
    2970:	ldr	r9, [sp, #44]	; 0x2c
    2974:	ldr	sl, [sp, #48]	; 0x30
    2978:	ldr	fp, [sp, #52]	; 0x34
    297c:	ldr	lr, [sp, #12]
    2980:	add	sp, sp, #88	; 0x58
    2984:	bx	lr
