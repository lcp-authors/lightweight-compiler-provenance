
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/zlib/crc32.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_get_crc_table>:
   0:	movw	r0, #0
   4:	movt	r0, #0
   8:	bx	lr

0000000c <coda_crc32>:
   c:	push	{fp, lr}
  10:	mov	fp, sp
  14:	sub	sp, sp, #24
  18:	str	r0, [fp, #-8]
  1c:	str	r1, [sp, #12]
  20:	str	r2, [sp, #8]
  24:	ldr	r0, [sp, #12]
  28:	movw	r1, #0
  2c:	cmp	r0, r1
  30:	bne	40 <coda_crc32+0x34>
  34:	movw	r0, #0
  38:	str	r0, [fp, #-4]
  3c:	b	80 <coda_crc32+0x74>
  40:	movw	r0, #1
  44:	str	r0, [sp, #4]
  48:	ldrsb	r0, [sp, #4]
  4c:	cmp	r0, #0
  50:	beq	6c <coda_crc32+0x60>
  54:	ldr	r0, [fp, #-8]
  58:	ldr	r1, [sp, #12]
  5c:	ldr	r2, [sp, #8]
  60:	bl	8c <crc32_little>
  64:	str	r0, [fp, #-4]
  68:	b	80 <coda_crc32+0x74>
  6c:	ldr	r0, [fp, #-8]
  70:	ldr	r1, [sp, #12]
  74:	ldr	r2, [sp, #8]
  78:	bl	50c <crc32_big>
  7c:	str	r0, [fp, #-4]
  80:	ldr	r0, [fp, #-4]
  84:	mov	sp, fp
  88:	pop	{fp, pc}

0000008c <crc32_little>:
  8c:	push	{r4, sl, fp, lr}
  90:	add	fp, sp, #8
  94:	sub	sp, sp, #24
  98:	str	r0, [fp, #-12]
  9c:	str	r1, [sp, #16]
  a0:	str	r2, [sp, #12]
  a4:	ldr	r0, [fp, #-12]
  a8:	str	r0, [sp, #8]
  ac:	ldr	r0, [sp, #8]
  b0:	mvn	r1, #0
  b4:	eor	r0, r0, r1
  b8:	str	r0, [sp, #8]
  bc:	ldr	r0, [sp, #12]
  c0:	cmp	r0, #0
  c4:	movw	r0, #0
  c8:	str	r0, [sp]
  cc:	beq	e8 <crc32_little+0x5c>
  d0:	ldr	r0, [sp, #16]
  d4:	and	r0, r0, #3
  d8:	cmp	r0, #0
  dc:	movw	r0, #0
  e0:	movne	r0, #1
  e4:	str	r0, [sp]
  e8:	ldr	r0, [sp]
  ec:	tst	r0, #1
  f0:	beq	140 <crc32_little+0xb4>
  f4:	ldrb	r0, [sp, #8]
  f8:	ldr	r1, [sp, #16]
  fc:	add	r2, r1, #1
 100:	str	r2, [sp, #16]
 104:	ldrb	r1, [r1]
 108:	eor	r0, r0, r1
 10c:	movw	r1, #0
 110:	movt	r1, #0
 114:	add	r0, r1, r0, lsl #2
 118:	ldr	r0, [r0]
 11c:	ldr	r1, [sp, #8]
 120:	lsr	r1, r1, #8
 124:	eor	r0, r0, r1
 128:	str	r0, [sp, #8]
 12c:	ldr	r0, [sp, #12]
 130:	mvn	r1, #0
 134:	add	r0, r0, r1
 138:	str	r0, [sp, #12]
 13c:	b	bc <crc32_little+0x30>
 140:	ldr	r0, [sp, #16]
 144:	str	r0, [sp, #4]
 148:	ldr	r0, [sp, #12]
 14c:	cmp	r0, #32
 150:	bcc	3fc <crc32_little+0x370>
 154:	ldr	r0, [sp, #4]
 158:	add	r1, r0, #4
 15c:	str	r1, [sp, #4]
 160:	ldr	r0, [r0]
 164:	ldr	r1, [sp, #8]
 168:	eor	r0, r1, r0
 16c:	str	r0, [sp, #8]
 170:	ldr	r0, [sp, #8]
 174:	uxtb	r1, r0
 178:	movw	r2, #0
 17c:	movt	r2, #0
 180:	add	r3, r2, #3072	; 0xc00
 184:	ldr	r1, [r3, r1, lsl #2]
 188:	add	ip, r2, #2048	; 0x800
 18c:	ubfx	lr, r0, #8, #8
 190:	ldr	lr, [ip, lr, lsl #2]
 194:	eor	r1, r1, lr
 198:	add	lr, r2, #1024	; 0x400
 19c:	ubfx	r4, r0, #16, #8
 1a0:	ldr	r4, [lr, r4, lsl #2]
 1a4:	eor	r1, r1, r4
 1a8:	lsr	r0, r0, #24
 1ac:	ldr	r0, [r2, r0, lsl #2]
 1b0:	eor	r0, r1, r0
 1b4:	str	r0, [sp, #8]
 1b8:	ldr	r0, [sp, #4]
 1bc:	add	r1, r0, #4
 1c0:	str	r1, [sp, #4]
 1c4:	ldr	r0, [r0]
 1c8:	ldr	r1, [sp, #8]
 1cc:	eor	r0, r1, r0
 1d0:	str	r0, [sp, #8]
 1d4:	ldr	r0, [sp, #8]
 1d8:	uxtb	r1, r0
 1dc:	ldr	r1, [r3, r1, lsl #2]
 1e0:	ubfx	r4, r0, #8, #8
 1e4:	ldr	r4, [ip, r4, lsl #2]
 1e8:	eor	r1, r1, r4
 1ec:	ubfx	r4, r0, #16, #8
 1f0:	ldr	r4, [lr, r4, lsl #2]
 1f4:	eor	r1, r1, r4
 1f8:	lsr	r0, r0, #24
 1fc:	ldr	r0, [r2, r0, lsl #2]
 200:	eor	r0, r1, r0
 204:	str	r0, [sp, #8]
 208:	ldr	r0, [sp, #4]
 20c:	add	r1, r0, #4
 210:	str	r1, [sp, #4]
 214:	ldr	r0, [r0]
 218:	ldr	r1, [sp, #8]
 21c:	eor	r0, r1, r0
 220:	str	r0, [sp, #8]
 224:	ldr	r0, [sp, #8]
 228:	uxtb	r1, r0
 22c:	ldr	r1, [r3, r1, lsl #2]
 230:	ubfx	r4, r0, #8, #8
 234:	ldr	r4, [ip, r4, lsl #2]
 238:	eor	r1, r1, r4
 23c:	ubfx	r4, r0, #16, #8
 240:	ldr	r4, [lr, r4, lsl #2]
 244:	eor	r1, r1, r4
 248:	lsr	r0, r0, #24
 24c:	ldr	r0, [r2, r0, lsl #2]
 250:	eor	r0, r1, r0
 254:	str	r0, [sp, #8]
 258:	ldr	r0, [sp, #4]
 25c:	add	r1, r0, #4
 260:	str	r1, [sp, #4]
 264:	ldr	r0, [r0]
 268:	ldr	r1, [sp, #8]
 26c:	eor	r0, r1, r0
 270:	str	r0, [sp, #8]
 274:	ldr	r0, [sp, #8]
 278:	uxtb	r1, r0
 27c:	ldr	r1, [r3, r1, lsl #2]
 280:	ubfx	r4, r0, #8, #8
 284:	ldr	r4, [ip, r4, lsl #2]
 288:	eor	r1, r1, r4
 28c:	ubfx	r4, r0, #16, #8
 290:	ldr	r4, [lr, r4, lsl #2]
 294:	eor	r1, r1, r4
 298:	lsr	r0, r0, #24
 29c:	ldr	r0, [r2, r0, lsl #2]
 2a0:	eor	r0, r1, r0
 2a4:	str	r0, [sp, #8]
 2a8:	ldr	r0, [sp, #4]
 2ac:	add	r1, r0, #4
 2b0:	str	r1, [sp, #4]
 2b4:	ldr	r0, [r0]
 2b8:	ldr	r1, [sp, #8]
 2bc:	eor	r0, r1, r0
 2c0:	str	r0, [sp, #8]
 2c4:	ldr	r0, [sp, #8]
 2c8:	uxtb	r1, r0
 2cc:	ldr	r1, [r3, r1, lsl #2]
 2d0:	ubfx	r4, r0, #8, #8
 2d4:	ldr	r4, [ip, r4, lsl #2]
 2d8:	eor	r1, r1, r4
 2dc:	ubfx	r4, r0, #16, #8
 2e0:	ldr	r4, [lr, r4, lsl #2]
 2e4:	eor	r1, r1, r4
 2e8:	lsr	r0, r0, #24
 2ec:	ldr	r0, [r2, r0, lsl #2]
 2f0:	eor	r0, r1, r0
 2f4:	str	r0, [sp, #8]
 2f8:	ldr	r0, [sp, #4]
 2fc:	add	r1, r0, #4
 300:	str	r1, [sp, #4]
 304:	ldr	r0, [r0]
 308:	ldr	r1, [sp, #8]
 30c:	eor	r0, r1, r0
 310:	str	r0, [sp, #8]
 314:	ldr	r0, [sp, #8]
 318:	uxtb	r1, r0
 31c:	ldr	r1, [r3, r1, lsl #2]
 320:	ubfx	r4, r0, #8, #8
 324:	ldr	r4, [ip, r4, lsl #2]
 328:	eor	r1, r1, r4
 32c:	ubfx	r4, r0, #16, #8
 330:	ldr	r4, [lr, r4, lsl #2]
 334:	eor	r1, r1, r4
 338:	lsr	r0, r0, #24
 33c:	ldr	r0, [r2, r0, lsl #2]
 340:	eor	r0, r1, r0
 344:	str	r0, [sp, #8]
 348:	ldr	r0, [sp, #4]
 34c:	add	r1, r0, #4
 350:	str	r1, [sp, #4]
 354:	ldr	r0, [r0]
 358:	ldr	r1, [sp, #8]
 35c:	eor	r0, r1, r0
 360:	str	r0, [sp, #8]
 364:	ldr	r0, [sp, #8]
 368:	uxtb	r1, r0
 36c:	ldr	r1, [r3, r1, lsl #2]
 370:	ubfx	r4, r0, #8, #8
 374:	ldr	r4, [ip, r4, lsl #2]
 378:	eor	r1, r1, r4
 37c:	ubfx	r4, r0, #16, #8
 380:	ldr	r4, [lr, r4, lsl #2]
 384:	eor	r1, r1, r4
 388:	lsr	r0, r0, #24
 38c:	ldr	r0, [r2, r0, lsl #2]
 390:	eor	r0, r1, r0
 394:	str	r0, [sp, #8]
 398:	ldr	r0, [sp, #4]
 39c:	add	r1, r0, #4
 3a0:	str	r1, [sp, #4]
 3a4:	ldr	r0, [r0]
 3a8:	ldr	r1, [sp, #8]
 3ac:	eor	r0, r1, r0
 3b0:	str	r0, [sp, #8]
 3b4:	ldr	r0, [sp, #8]
 3b8:	uxtb	r1, r0
 3bc:	ldr	r1, [r3, r1, lsl #2]
 3c0:	ubfx	r3, r0, #8, #8
 3c4:	ldr	r3, [ip, r3, lsl #2]
 3c8:	eor	r1, r1, r3
 3cc:	ubfx	r3, r0, #16, #8
 3d0:	ldr	r3, [lr, r3, lsl #2]
 3d4:	eor	r1, r1, r3
 3d8:	lsr	r0, r0, #24
 3dc:	add	r0, r2, r0, lsl #2
 3e0:	ldr	r0, [r0]
 3e4:	eor	r0, r1, r0
 3e8:	str	r0, [sp, #8]
 3ec:	ldr	r0, [sp, #12]
 3f0:	sub	r0, r0, #32
 3f4:	str	r0, [sp, #12]
 3f8:	b	148 <crc32_little+0xbc>
 3fc:	b	400 <crc32_little+0x374>
 400:	ldr	r0, [sp, #12]
 404:	cmp	r0, #4
 408:	bcc	484 <crc32_little+0x3f8>
 40c:	ldr	r0, [sp, #4]
 410:	add	r1, r0, #4
 414:	str	r1, [sp, #4]
 418:	ldr	r0, [r0]
 41c:	ldr	r1, [sp, #8]
 420:	eor	r0, r1, r0
 424:	str	r0, [sp, #8]
 428:	ldr	r0, [sp, #8]
 42c:	uxtb	r1, r0
 430:	movw	r2, #0
 434:	movt	r2, #0
 438:	add	r1, r2, r1, lsl #2
 43c:	ldr	r1, [r1, #3072]	; 0xc00
 440:	ubfx	r3, r0, #8, #8
 444:	add	r3, r2, r3, lsl #2
 448:	ldr	r3, [r3, #2048]	; 0x800
 44c:	eor	r1, r1, r3
 450:	ubfx	r3, r0, #16, #8
 454:	add	r3, r2, r3, lsl #2
 458:	ldr	r3, [r3, #1024]	; 0x400
 45c:	eor	r1, r1, r3
 460:	lsr	r0, r0, #24
 464:	add	r0, r2, r0, lsl #2
 468:	ldr	r0, [r0]
 46c:	eor	r0, r1, r0
 470:	str	r0, [sp, #8]
 474:	ldr	r0, [sp, #12]
 478:	sub	r0, r0, #4
 47c:	str	r0, [sp, #12]
 480:	b	400 <crc32_little+0x374>
 484:	ldr	r0, [sp, #4]
 488:	str	r0, [sp, #16]
 48c:	ldr	r0, [sp, #12]
 490:	cmp	r0, #0
 494:	beq	4f0 <crc32_little+0x464>
 498:	b	49c <crc32_little+0x410>
 49c:	ldrb	r0, [sp, #8]
 4a0:	ldr	r1, [sp, #16]
 4a4:	add	r2, r1, #1
 4a8:	str	r2, [sp, #16]
 4ac:	ldrb	r1, [r1]
 4b0:	eor	r0, r0, r1
 4b4:	movw	r1, #0
 4b8:	movt	r1, #0
 4bc:	add	r0, r1, r0, lsl #2
 4c0:	ldr	r0, [r0]
 4c4:	ldr	r1, [sp, #8]
 4c8:	lsr	r1, r1, #8
 4cc:	eor	r0, r0, r1
 4d0:	str	r0, [sp, #8]
 4d4:	ldr	r0, [sp, #12]
 4d8:	mvn	r1, #0
 4dc:	add	r0, r0, r1
 4e0:	str	r0, [sp, #12]
 4e4:	cmp	r0, #0
 4e8:	bne	49c <crc32_little+0x410>
 4ec:	b	4f0 <crc32_little+0x464>
 4f0:	ldr	r0, [sp, #8]
 4f4:	mvn	r1, #0
 4f8:	eor	r0, r0, r1
 4fc:	str	r0, [sp, #8]
 500:	ldr	r0, [sp, #8]
 504:	sub	sp, fp, #8
 508:	pop	{r4, sl, fp, pc}

0000050c <crc32_big>:
 50c:	push	{r4, r5, fp, lr}
 510:	add	fp, sp, #8
 514:	sub	sp, sp, #24
 518:	str	r0, [fp, #-12]
 51c:	str	r1, [sp, #16]
 520:	str	r2, [sp, #12]
 524:	ldr	r0, [fp, #-12]
 528:	lsr	r0, r0, #24
 52c:	and	r0, r0, #255	; 0xff
 530:	ldr	r1, [fp, #-12]
 534:	lsr	r1, r1, #8
 538:	and	r1, r1, #65280	; 0xff00
 53c:	add	r0, r0, r1
 540:	ldr	r1, [fp, #-12]
 544:	and	r1, r1, #65280	; 0xff00
 548:	lsl	r1, r1, #8
 54c:	add	r0, r0, r1
 550:	ldr	r1, [fp, #-12]
 554:	and	r1, r1, #255	; 0xff
 558:	lsl	r1, r1, #24
 55c:	add	r0, r0, r1
 560:	str	r0, [sp, #8]
 564:	ldr	r0, [sp, #8]
 568:	mvn	r1, #0
 56c:	eor	r0, r0, r1
 570:	str	r0, [sp, #8]
 574:	ldr	r0, [sp, #12]
 578:	cmp	r0, #0
 57c:	movw	r0, #0
 580:	str	r0, [sp]
 584:	beq	5a0 <crc32_big+0x94>
 588:	ldr	r0, [sp, #16]
 58c:	and	r0, r0, #3
 590:	cmp	r0, #0
 594:	movw	r0, #0
 598:	movne	r0, #1
 59c:	str	r0, [sp]
 5a0:	ldr	r0, [sp]
 5a4:	tst	r0, #1
 5a8:	beq	608 <crc32_big+0xfc>
 5ac:	movw	r0, #0
 5b0:	movt	r0, #0
 5b4:	add	r0, r0, #4096	; 0x1000
 5b8:	ldrb	r1, [sp, #11]
 5bc:	ldr	r2, [sp, #16]
 5c0:	add	r3, r2, #1
 5c4:	str	r3, [sp, #16]
 5c8:	ldrb	r2, [r2]
 5cc:	eor	r1, r1, r2
 5d0:	movw	r2, #0
 5d4:	movt	r2, #0
 5d8:	add	r1, r2, r1, lsl #2
 5dc:	add	r1, r1, #4096	; 0x1000
 5e0:	ldr	r1, [r1]
 5e4:	ldr	r2, [sp, #8]
 5e8:	lsl	r2, r2, #8
 5ec:	eor	r1, r1, r2
 5f0:	str	r1, [sp, #8]
 5f4:	ldr	r1, [sp, #12]
 5f8:	mvn	r2, #0
 5fc:	add	r1, r1, r2
 600:	str	r1, [sp, #12]
 604:	b	574 <crc32_big+0x68>
 608:	ldr	r0, [sp, #16]
 60c:	str	r0, [sp, #4]
 610:	ldr	r0, [sp, #4]
 614:	mvn	r1, #3
 618:	add	r0, r0, r1
 61c:	str	r0, [sp, #4]
 620:	ldr	r0, [sp, #12]
 624:	cmp	r0, #32
 628:	bcc	8e4 <crc32_big+0x3d8>
 62c:	movw	r0, #0
 630:	movt	r0, #0
 634:	add	r0, r0, #7168	; 0x1c00
 638:	ldr	r1, [sp, #4]
 63c:	add	r2, r1, #4
 640:	str	r2, [sp, #4]
 644:	ldr	r1, [r1, #4]
 648:	ldr	r2, [sp, #8]
 64c:	eor	r1, r2, r1
 650:	str	r1, [sp, #8]
 654:	ldr	r1, [sp, #8]
 658:	uxtb	r2, r1
 65c:	movw	r3, #0
 660:	movt	r3, #0
 664:	add	ip, r3, #4096	; 0x1000
 668:	ldr	r2, [ip, r2, lsl #2]
 66c:	add	lr, r3, #5120	; 0x1400
 670:	ubfx	r4, r1, #8, #8
 674:	ldr	r4, [lr, r4, lsl #2]
 678:	eor	r2, r2, r4
 67c:	add	r4, r3, #6144	; 0x1800
 680:	ubfx	r5, r1, #16, #8
 684:	ldr	r5, [r4, r5, lsl #2]
 688:	eor	r2, r2, r5
 68c:	lsr	r1, r1, #24
 690:	add	r3, r3, #7168	; 0x1c00
 694:	ldr	r1, [r3, r1, lsl #2]
 698:	eor	r1, r2, r1
 69c:	str	r1, [sp, #8]
 6a0:	ldr	r1, [sp, #4]
 6a4:	add	r2, r1, #4
 6a8:	str	r2, [sp, #4]
 6ac:	ldr	r1, [r1, #4]
 6b0:	ldr	r2, [sp, #8]
 6b4:	eor	r1, r2, r1
 6b8:	str	r1, [sp, #8]
 6bc:	ldr	r1, [sp, #8]
 6c0:	uxtb	r2, r1
 6c4:	ldr	r2, [ip, r2, lsl #2]
 6c8:	ubfx	r5, r1, #8, #8
 6cc:	ldr	r5, [lr, r5, lsl #2]
 6d0:	eor	r2, r2, r5
 6d4:	ubfx	r5, r1, #16, #8
 6d8:	ldr	r5, [r4, r5, lsl #2]
 6dc:	eor	r2, r2, r5
 6e0:	lsr	r1, r1, #24
 6e4:	ldr	r1, [r3, r1, lsl #2]
 6e8:	eor	r1, r2, r1
 6ec:	str	r1, [sp, #8]
 6f0:	ldr	r1, [sp, #4]
 6f4:	add	r2, r1, #4
 6f8:	str	r2, [sp, #4]
 6fc:	ldr	r1, [r1, #4]
 700:	ldr	r2, [sp, #8]
 704:	eor	r1, r2, r1
 708:	str	r1, [sp, #8]
 70c:	ldr	r1, [sp, #8]
 710:	uxtb	r2, r1
 714:	ldr	r2, [ip, r2, lsl #2]
 718:	ubfx	r5, r1, #8, #8
 71c:	ldr	r5, [lr, r5, lsl #2]
 720:	eor	r2, r2, r5
 724:	ubfx	r5, r1, #16, #8
 728:	ldr	r5, [r4, r5, lsl #2]
 72c:	eor	r2, r2, r5
 730:	lsr	r1, r1, #24
 734:	ldr	r1, [r3, r1, lsl #2]
 738:	eor	r1, r2, r1
 73c:	str	r1, [sp, #8]
 740:	ldr	r1, [sp, #4]
 744:	add	r2, r1, #4
 748:	str	r2, [sp, #4]
 74c:	ldr	r1, [r1, #4]
 750:	ldr	r2, [sp, #8]
 754:	eor	r1, r2, r1
 758:	str	r1, [sp, #8]
 75c:	ldr	r1, [sp, #8]
 760:	uxtb	r2, r1
 764:	ldr	r2, [ip, r2, lsl #2]
 768:	ubfx	r5, r1, #8, #8
 76c:	ldr	r5, [lr, r5, lsl #2]
 770:	eor	r2, r2, r5
 774:	ubfx	r5, r1, #16, #8
 778:	ldr	r5, [r4, r5, lsl #2]
 77c:	eor	r2, r2, r5
 780:	lsr	r1, r1, #24
 784:	ldr	r1, [r3, r1, lsl #2]
 788:	eor	r1, r2, r1
 78c:	str	r1, [sp, #8]
 790:	ldr	r1, [sp, #4]
 794:	add	r2, r1, #4
 798:	str	r2, [sp, #4]
 79c:	ldr	r1, [r1, #4]
 7a0:	ldr	r2, [sp, #8]
 7a4:	eor	r1, r2, r1
 7a8:	str	r1, [sp, #8]
 7ac:	ldr	r1, [sp, #8]
 7b0:	uxtb	r2, r1
 7b4:	ldr	r2, [ip, r2, lsl #2]
 7b8:	ubfx	r5, r1, #8, #8
 7bc:	ldr	r5, [lr, r5, lsl #2]
 7c0:	eor	r2, r2, r5
 7c4:	ubfx	r5, r1, #16, #8
 7c8:	ldr	r5, [r4, r5, lsl #2]
 7cc:	eor	r2, r2, r5
 7d0:	lsr	r1, r1, #24
 7d4:	ldr	r1, [r3, r1, lsl #2]
 7d8:	eor	r1, r2, r1
 7dc:	str	r1, [sp, #8]
 7e0:	ldr	r1, [sp, #4]
 7e4:	add	r2, r1, #4
 7e8:	str	r2, [sp, #4]
 7ec:	ldr	r1, [r1, #4]
 7f0:	ldr	r2, [sp, #8]
 7f4:	eor	r1, r2, r1
 7f8:	str	r1, [sp, #8]
 7fc:	ldr	r1, [sp, #8]
 800:	uxtb	r2, r1
 804:	ldr	r2, [ip, r2, lsl #2]
 808:	ubfx	r5, r1, #8, #8
 80c:	ldr	r5, [lr, r5, lsl #2]
 810:	eor	r2, r2, r5
 814:	ubfx	r5, r1, #16, #8
 818:	ldr	r5, [r4, r5, lsl #2]
 81c:	eor	r2, r2, r5
 820:	lsr	r1, r1, #24
 824:	ldr	r1, [r3, r1, lsl #2]
 828:	eor	r1, r2, r1
 82c:	str	r1, [sp, #8]
 830:	ldr	r1, [sp, #4]
 834:	add	r2, r1, #4
 838:	str	r2, [sp, #4]
 83c:	ldr	r1, [r1, #4]
 840:	ldr	r2, [sp, #8]
 844:	eor	r1, r2, r1
 848:	str	r1, [sp, #8]
 84c:	ldr	r1, [sp, #8]
 850:	uxtb	r2, r1
 854:	ldr	r2, [ip, r2, lsl #2]
 858:	ubfx	r5, r1, #8, #8
 85c:	ldr	r5, [lr, r5, lsl #2]
 860:	eor	r2, r2, r5
 864:	ubfx	r5, r1, #16, #8
 868:	ldr	r5, [r4, r5, lsl #2]
 86c:	eor	r2, r2, r5
 870:	lsr	r1, r1, #24
 874:	ldr	r1, [r3, r1, lsl #2]
 878:	eor	r1, r2, r1
 87c:	str	r1, [sp, #8]
 880:	ldr	r1, [sp, #4]
 884:	add	r2, r1, #4
 888:	str	r2, [sp, #4]
 88c:	ldr	r1, [r1, #4]
 890:	ldr	r2, [sp, #8]
 894:	eor	r1, r2, r1
 898:	str	r1, [sp, #8]
 89c:	ldr	r1, [sp, #8]
 8a0:	uxtb	r2, r1
 8a4:	ldr	r2, [ip, r2, lsl #2]
 8a8:	ubfx	ip, r1, #8, #8
 8ac:	ldr	ip, [lr, ip, lsl #2]
 8b0:	eor	r2, r2, ip
 8b4:	ubfx	ip, r1, #16, #8
 8b8:	ldr	ip, [r4, ip, lsl #2]
 8bc:	eor	r2, r2, ip
 8c0:	lsr	r1, r1, #24
 8c4:	add	r1, r3, r1, lsl #2
 8c8:	ldr	r1, [r1]
 8cc:	eor	r1, r2, r1
 8d0:	str	r1, [sp, #8]
 8d4:	ldr	r1, [sp, #12]
 8d8:	sub	r1, r1, #32
 8dc:	str	r1, [sp, #12]
 8e0:	b	620 <crc32_big+0x114>
 8e4:	b	8e8 <crc32_big+0x3dc>
 8e8:	ldr	r0, [sp, #12]
 8ec:	cmp	r0, #4
 8f0:	bcc	988 <crc32_big+0x47c>
 8f4:	movw	r0, #0
 8f8:	movt	r0, #0
 8fc:	add	r0, r0, #7168	; 0x1c00
 900:	ldr	r1, [sp, #4]
 904:	add	r2, r1, #4
 908:	str	r2, [sp, #4]
 90c:	ldr	r1, [r1, #4]
 910:	ldr	r2, [sp, #8]
 914:	eor	r1, r2, r1
 918:	str	r1, [sp, #8]
 91c:	ldr	r1, [sp, #8]
 920:	uxtb	r2, r1
 924:	movw	r3, #0
 928:	movt	r3, #0
 92c:	add	r2, r3, r2, lsl #2
 930:	mov	ip, #4096	; 0x1000
 934:	ldr	r2, [r2, ip]
 938:	ubfx	ip, r1, #8, #8
 93c:	add	ip, r3, ip, lsl #2
 940:	mov	lr, #5120	; 0x1400
 944:	ldr	ip, [ip, lr]
 948:	eor	r2, r2, ip
 94c:	ubfx	ip, r1, #16, #8
 950:	add	ip, r3, ip, lsl #2
 954:	mov	lr, #6144	; 0x1800
 958:	ldr	ip, [ip, lr]
 95c:	eor	r2, r2, ip
 960:	lsr	r1, r1, #24
 964:	add	r1, r3, r1, lsl #2
 968:	add	r1, r1, #7168	; 0x1c00
 96c:	ldr	r1, [r1]
 970:	eor	r1, r2, r1
 974:	str	r1, [sp, #8]
 978:	ldr	r1, [sp, #12]
 97c:	sub	r1, r1, #4
 980:	str	r1, [sp, #12]
 984:	b	8e8 <crc32_big+0x3dc>
 988:	ldr	r0, [sp, #4]
 98c:	add	r0, r0, #4
 990:	str	r0, [sp, #4]
 994:	ldr	r0, [sp, #4]
 998:	str	r0, [sp, #16]
 99c:	ldr	r0, [sp, #12]
 9a0:	cmp	r0, #0
 9a4:	beq	a10 <crc32_big+0x504>
 9a8:	b	9ac <crc32_big+0x4a0>
 9ac:	movw	r0, #0
 9b0:	movt	r0, #0
 9b4:	add	r0, r0, #4096	; 0x1000
 9b8:	ldrb	r1, [sp, #11]
 9bc:	ldr	r2, [sp, #16]
 9c0:	add	r3, r2, #1
 9c4:	str	r3, [sp, #16]
 9c8:	ldrb	r2, [r2]
 9cc:	eor	r1, r1, r2
 9d0:	movw	r2, #0
 9d4:	movt	r2, #0
 9d8:	add	r1, r2, r1, lsl #2
 9dc:	add	r1, r1, #4096	; 0x1000
 9e0:	ldr	r1, [r1]
 9e4:	ldr	r2, [sp, #8]
 9e8:	lsl	r2, r2, #8
 9ec:	eor	r1, r1, r2
 9f0:	str	r1, [sp, #8]
 9f4:	ldr	r0, [sp, #12]
 9f8:	mvn	r1, #0
 9fc:	add	r0, r0, r1
 a00:	str	r0, [sp, #12]
 a04:	cmp	r0, #0
 a08:	bne	9ac <crc32_big+0x4a0>
 a0c:	b	a10 <crc32_big+0x504>
 a10:	ldr	r0, [sp, #8]
 a14:	mvn	r1, #0
 a18:	eor	r0, r0, r1
 a1c:	str	r0, [sp, #8]
 a20:	ldr	r0, [sp, #8]
 a24:	lsr	r0, r0, #24
 a28:	and	r0, r0, #255	; 0xff
 a2c:	ldr	r1, [sp, #8]
 a30:	lsr	r1, r1, #8
 a34:	and	r1, r1, #65280	; 0xff00
 a38:	add	r0, r0, r1
 a3c:	ldr	r1, [sp, #8]
 a40:	and	r1, r1, #65280	; 0xff00
 a44:	lsl	r1, r1, #8
 a48:	add	r0, r0, r1
 a4c:	ldr	r1, [sp, #8]
 a50:	and	r1, r1, #255	; 0xff
 a54:	lsl	r1, r1, #24
 a58:	add	r0, r0, r1
 a5c:	sub	sp, fp, #8
 a60:	pop	{r4, r5, fp, pc}

00000a64 <coda_crc32_combine>:
 a64:	push	{fp, lr}
 a68:	mov	fp, sp
 a6c:	sub	sp, sp, #16
 a70:	str	r0, [fp, #-4]
 a74:	str	r1, [sp, #8]
 a78:	str	r2, [sp, #4]
 a7c:	ldr	r0, [fp, #-4]
 a80:	ldr	r1, [sp, #8]
 a84:	ldr	r2, [sp, #4]
 a88:	bl	a94 <crc32_combine_>
 a8c:	mov	sp, fp
 a90:	pop	{fp, pc}

00000a94 <crc32_combine_>:
 a94:	push	{r4, r5, fp, lr}
 a98:	add	fp, sp, #8
 a9c:	sub	sp, sp, #280	; 0x118
 aa0:	str	r0, [fp, #-16]
 aa4:	str	r1, [fp, #-20]	; 0xffffffec
 aa8:	str	r2, [fp, #-24]	; 0xffffffe8
 aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
 ab0:	cmp	r0, #0
 ab4:	bgt	ac4 <crc32_combine_+0x30>
 ab8:	ldr	r0, [fp, #-16]
 abc:	str	r0, [fp, #-12]
 ac0:	b	bd0 <crc32_combine_+0x13c>
 ac4:	ldr	r0, [pc, #272]	; bdc <crc32_combine_+0x148>
 ac8:	str	r0, [sp]
 acc:	movw	r0, #1
 ad0:	str	r0, [fp, #-32]	; 0xffffffe0
 ad4:	str	r0, [fp, #-28]	; 0xffffffe4
 ad8:	ldr	r0, [fp, #-28]	; 0xffffffe4
 adc:	cmp	r0, #32
 ae0:	bge	b14 <crc32_combine_+0x80>
 ae4:	ldr	r0, [fp, #-32]	; 0xffffffe0
 ae8:	ldr	r1, [fp, #-28]	; 0xffffffe4
 aec:	mov	r2, sp
 af0:	add	r1, r2, r1, lsl #2
 af4:	str	r0, [r1]
 af8:	ldr	r0, [fp, #-32]	; 0xffffffe0
 afc:	lsl	r0, r0, #1
 b00:	str	r0, [fp, #-32]	; 0xffffffe0
 b04:	ldr	r0, [fp, #-28]	; 0xffffffe4
 b08:	add	r0, r0, #1
 b0c:	str	r0, [fp, #-28]	; 0xffffffe4
 b10:	b	ad8 <crc32_combine_+0x44>
 b14:	mov	r1, sp
 b18:	add	r0, sp, #128	; 0x80
 b1c:	bl	c10 <gf2_matrix_square>
 b20:	add	r1, sp, #128	; 0x80
 b24:	mov	r0, sp
 b28:	bl	c10 <gf2_matrix_square>
 b2c:	mov	r1, sp
 b30:	add	r0, sp, #128	; 0x80
 b34:	bl	c10 <gf2_matrix_square>
 b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
 b3c:	and	r0, r0, #1
 b40:	cmp	r0, #0
 b44:	beq	b58 <crc32_combine_+0xc4>
 b48:	add	r0, sp, #128	; 0x80
 b4c:	ldr	r1, [fp, #-16]
 b50:	bl	c70 <gf2_matrix_times>
 b54:	str	r0, [fp, #-16]
 b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
 b5c:	asr	r0, r0, #1
 b60:	str	r0, [fp, #-24]	; 0xffffffe8
 b64:	ldr	r0, [fp, #-24]	; 0xffffffe8
 b68:	cmp	r0, #0
 b6c:	bne	b74 <crc32_combine_+0xe0>
 b70:	b	bb8 <crc32_combine_+0x124>
 b74:	add	r1, sp, #128	; 0x80
 b78:	mov	r0, sp
 b7c:	bl	c10 <gf2_matrix_square>
 b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
 b84:	and	r0, r0, #1
 b88:	cmp	r0, #0
 b8c:	beq	ba0 <crc32_combine_+0x10c>
 b90:	mov	r0, sp
 b94:	ldr	r1, [fp, #-16]
 b98:	bl	c70 <gf2_matrix_times>
 b9c:	str	r0, [fp, #-16]
 ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
 ba4:	asr	r0, r0, #1
 ba8:	str	r0, [fp, #-24]	; 0xffffffe8
 bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
 bb0:	cmp	r0, #0
 bb4:	bne	b2c <crc32_combine_+0x98>
 bb8:	ldr	r0, [fp, #-20]	; 0xffffffec
 bbc:	ldr	r1, [fp, #-16]
 bc0:	eor	r0, r1, r0
 bc4:	str	r0, [fp, #-16]
 bc8:	ldr	r0, [fp, #-16]
 bcc:	str	r0, [fp, #-12]
 bd0:	ldr	r0, [fp, #-12]
 bd4:	sub	sp, fp, #8
 bd8:	pop	{r4, r5, fp, pc}
 bdc:	.word	0xedb88320

00000be0 <coda_crc32_combine64>:
 be0:	push	{fp, lr}
 be4:	mov	fp, sp
 be8:	sub	sp, sp, #16
 bec:	str	r0, [fp, #-4]
 bf0:	str	r1, [sp, #8]
 bf4:	str	r2, [sp, #4]
 bf8:	ldr	r0, [fp, #-4]
 bfc:	ldr	r1, [sp, #8]
 c00:	ldr	r2, [sp, #4]
 c04:	bl	a94 <crc32_combine_>
 c08:	mov	sp, fp
 c0c:	pop	{fp, pc}

00000c10 <gf2_matrix_square>:
 c10:	push	{fp, lr}
 c14:	mov	fp, sp
 c18:	sub	sp, sp, #16
 c1c:	str	r0, [fp, #-4]
 c20:	str	r1, [sp, #8]
 c24:	movw	r0, #0
 c28:	str	r0, [sp, #4]
 c2c:	ldr	r0, [sp, #4]
 c30:	cmp	r0, #32
 c34:	bge	c68 <gf2_matrix_square+0x58>
 c38:	ldr	r0, [sp, #8]
 c3c:	ldr	r1, [sp, #4]
 c40:	ldr	r1, [r0, r1, lsl #2]
 c44:	bl	c70 <gf2_matrix_times>
 c48:	ldr	r1, [fp, #-4]
 c4c:	ldr	r2, [sp, #4]
 c50:	add	r1, r1, r2, lsl #2
 c54:	str	r0, [r1]
 c58:	ldr	r0, [sp, #4]
 c5c:	add	r0, r0, #1
 c60:	str	r0, [sp, #4]
 c64:	b	c2c <gf2_matrix_square+0x1c>
 c68:	mov	sp, fp
 c6c:	pop	{fp, pc}

00000c70 <gf2_matrix_times>:
 c70:	sub	sp, sp, #12
 c74:	str	r0, [sp, #8]
 c78:	str	r1, [sp, #4]
 c7c:	movw	r0, #0
 c80:	str	r0, [sp]
 c84:	ldr	r0, [sp, #4]
 c88:	cmp	r0, #0
 c8c:	beq	cd0 <gf2_matrix_times+0x60>
 c90:	ldr	r0, [sp, #4]
 c94:	and	r0, r0, #1
 c98:	cmp	r0, #0
 c9c:	beq	cb4 <gf2_matrix_times+0x44>
 ca0:	ldr	r0, [sp, #8]
 ca4:	ldr	r0, [r0]
 ca8:	ldr	r1, [sp]
 cac:	eor	r0, r1, r0
 cb0:	str	r0, [sp]
 cb4:	ldr	r0, [sp, #4]
 cb8:	lsr	r0, r0, #1
 cbc:	str	r0, [sp, #4]
 cc0:	ldr	r0, [sp, #8]
 cc4:	add	r0, r0, #4
 cc8:	str	r0, [sp, #8]
 ccc:	b	c84 <gf2_matrix_times+0x14>
 cd0:	ldr	r0, [sp]
 cd4:	add	sp, sp, #12
 cd8:	bx	lr
