
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/__/__/external/hash/str_set.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <str_set_clear>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #8
   c:	str	r0, [sp, #4]
  10:	ldr	r0, [sp, #4]
  14:	bl	20 <ht_clear>
  18:	mov	sp, fp
  1c:	pop	{fp, pc}

00000020 <ht_clear>:
  20:	push	{fp, lr}
  24:	mov	fp, sp
  28:	sub	sp, sp, #8
  2c:	str	r0, [sp, #4]
  30:	ldr	r0, [sp, #4]
  34:	ldr	r0, [r0]
  38:	movw	r1, #0
  3c:	cmp	r0, r1
  40:	beq	50 <ht_clear+0x30>
  44:	ldr	r0, [sp, #4]
  48:	ldr	r0, [r0]
  4c:	bl	0 <free>
  50:	ldr	r0, [sp, #4]
  54:	movw	r1, #0
  58:	and	r1, r1, #255	; 0xff
  5c:	movw	r2, #16
  60:	bl	0 <memset>
  64:	mov	sp, fp
  68:	pop	{fp, pc}

0000006c <str_set_destroy>:
  6c:	push	{fp, lr}
  70:	mov	fp, sp
  74:	sub	sp, sp, #16
  78:	str	r0, [fp, #-4]
  7c:	str	r1, [sp, #8]
  80:	str	r2, [sp, #4]
  84:	ldr	r0, [sp, #8]
  88:	movw	r1, #0
  8c:	cmp	r0, r1
  90:	beq	a4 <str_set_destroy+0x38>
  94:	ldr	r0, [fp, #-4]
  98:	ldr	r1, [sp, #8]
  9c:	ldr	r2, [sp, #4]
  a0:	bl	b4 <ht_visit>
  a4:	ldr	r0, [fp, #-4]
  a8:	bl	20 <ht_clear>
  ac:	mov	sp, fp
  b0:	pop	{fp, pc}

000000b4 <ht_visit>:
  b4:	push	{fp, lr}
  b8:	mov	fp, sp
  bc:	sub	sp, sp, #32
  c0:	str	r0, [fp, #-4]
  c4:	str	r1, [fp, #-8]
  c8:	str	r2, [fp, #-12]
  cc:	ldr	r0, [fp, #-4]
  d0:	ldr	r0, [r0]
  d4:	str	r0, [sp, #12]
  d8:	movw	r0, #0
  dc:	str	r0, [sp, #16]
  e0:	ldr	r0, [sp, #16]
  e4:	ldr	r1, [fp, #-4]
  e8:	ldr	r1, [r1, #12]
  ec:	cmp	r0, r1
  f0:	bcs	15c <ht_visit+0xa8>
  f4:	ldr	r0, [sp, #12]
  f8:	ldr	r1, [sp, #16]
  fc:	add	r0, r0, r1, lsl #2
 100:	ldr	r0, [r0]
 104:	str	r0, [sp, #8]
 108:	ldr	r0, [sp, #8]
 10c:	movw	r1, #0
 110:	cmp	r0, r1
 114:	beq	148 <ht_visit+0x94>
 118:	ldr	r0, [sp, #8]
 11c:	movw	r1, #2
 120:	cmp	r0, r1
 124:	beq	148 <ht_visit+0x94>
 128:	ldr	r0, [fp, #-8]
 12c:	ldr	r1, [fp, #-12]
 130:	ldr	r2, [sp, #8]
 134:	str	r0, [sp, #4]
 138:	mov	r0, r1
 13c:	mov	r1, r2
 140:	ldr	r2, [sp, #4]
 144:	blx	r2
 148:	b	14c <ht_visit+0x98>
 14c:	ldr	r0, [sp, #16]
 150:	add	r0, r0, #1
 154:	str	r0, [sp, #16]
 158:	b	e0 <ht_visit+0x2c>
 15c:	mov	sp, fp
 160:	pop	{fp, pc}

00000164 <str_set_init>:
 164:	push	{fp, lr}
 168:	mov	fp, sp
 16c:	sub	sp, sp, #8
 170:	str	r0, [sp, #4]
 174:	str	r1, [sp]
 178:	ldr	r0, [sp, #4]
 17c:	ldr	r1, [sp]
 180:	bl	18c <ht_init>
 184:	mov	sp, fp
 188:	pop	{fp, pc}

0000018c <ht_init>:
 18c:	push	{fp, lr}
 190:	mov	fp, sp
 194:	sub	sp, sp, #16
 198:	str	r0, [sp, #8]
 19c:	str	r1, [sp, #4]
 1a0:	movw	r0, #4
 1a4:	str	r0, [sp]
 1a8:	ldr	r0, [sp, #4]
 1ac:	ldr	r1, [sp]
 1b0:	mov	r2, #179	; 0xb3
 1b4:	mul	r1, r1, r2
 1b8:	mov	r2, r1
 1bc:	lsr	r1, r1, #8
 1c0:	cmp	r0, r1
 1c4:	bls	1d8 <ht_init+0x4c>
 1c8:	ldr	r0, [sp]
 1cc:	lsl	r0, r0, #1
 1d0:	str	r0, [sp]
 1d4:	b	1a8 <ht_init+0x1c>
 1d8:	ldr	r0, [sp]
 1dc:	movw	r1, #4
 1e0:	bl	0 <calloc>
 1e4:	ldr	r1, [sp, #8]
 1e8:	str	r0, [r1]
 1ec:	ldr	r0, [sp, #8]
 1f0:	ldr	r0, [r0]
 1f4:	movw	r1, #0
 1f8:	cmp	r0, r1
 1fc:	bne	20c <ht_init+0x80>
 200:	mvn	r0, #0
 204:	str	r0, [fp, #-4]
 208:	b	230 <ht_init+0xa4>
 20c:	ldr	r0, [sp, #8]
 210:	movw	r1, #0
 214:	str	r1, [r0, #4]
 218:	ldr	r0, [sp]
 21c:	ldr	r2, [sp, #8]
 220:	str	r0, [r2, #12]
 224:	ldr	r0, [sp, #8]
 228:	str	r1, [r0, #8]
 22c:	str	r1, [fp, #-4]
 230:	ldr	r0, [fp, #-4]
 234:	mov	sp, fp
 238:	pop	{fp, pc}

0000023c <str_set_resize>:
 23c:	push	{fp, lr}
 240:	mov	fp, sp
 244:	sub	sp, sp, #8
 248:	str	r0, [sp, #4]
 24c:	str	r1, [sp]
 250:	ldr	r0, [sp, #4]
 254:	ldr	r1, [sp]
 258:	bl	264 <ht_resize>
 25c:	mov	sp, fp
 260:	pop	{fp, pc}

00000264 <ht_resize>:
 264:	push	{fp, lr}
 268:	mov	fp, sp
 26c:	sub	sp, sp, #56	; 0x38
 270:	str	r0, [fp, #-8]
 274:	str	r1, [fp, #-12]
 278:	ldr	r0, [fp, #-8]
 27c:	ldr	r0, [r0]
 280:	str	r0, [sp, #20]
 284:	ldr	r0, [fp, #-12]
 288:	ldr	r1, [fp, #-8]
 28c:	ldr	r1, [r1, #8]
 290:	cmp	r0, r1
 294:	bcs	2a4 <ht_resize+0x40>
 298:	ldr	r0, [fp, #-8]
 29c:	ldr	r0, [r0, #8]
 2a0:	str	r0, [fp, #-12]
 2a4:	ldr	r1, [fp, #-12]
 2a8:	add	r0, sp, #24
 2ac:	bl	18c <ht_init>
 2b0:	cmp	r0, #0
 2b4:	beq	2c4 <ht_resize+0x60>
 2b8:	mvn	r0, #0
 2bc:	str	r0, [fp, #-4]
 2c0:	b	398 <ht_resize+0x134>
 2c4:	movw	r0, #0
 2c8:	str	r0, [fp, #-16]
 2cc:	ldr	r0, [fp, #-16]
 2d0:	ldr	r1, [fp, #-8]
 2d4:	ldr	r1, [r1, #12]
 2d8:	cmp	r0, r1
 2dc:	bcs	364 <ht_resize+0x100>
 2e0:	ldr	r0, [sp, #20]
 2e4:	ldr	r1, [fp, #-16]
 2e8:	add	r0, r0, r1, lsl #2
 2ec:	ldr	r0, [r0]
 2f0:	str	r0, [sp, #16]
 2f4:	ldr	r0, [sp, #16]
 2f8:	movw	r1, #0
 2fc:	cmp	r0, r1
 300:	beq	350 <ht_resize+0xec>
 304:	ldr	r0, [sp, #16]
 308:	movw	r1, #2
 30c:	cmp	r0, r1
 310:	beq	350 <ht_resize+0xec>
 314:	ldr	r0, [sp, #16]
 318:	bl	7b8 <ht_key>
 31c:	ldr	r1, [sp, #16]
 320:	str	r0, [sp, #12]
 324:	mov	r0, r1
 328:	bl	7cc <ht_key_len>
 32c:	ldr	r3, [sp, #16]
 330:	add	r1, sp, #24
 334:	str	r0, [sp, #8]
 338:	mov	r0, r1
 33c:	ldr	r1, [sp, #12]
 340:	ldr	r2, [sp, #8]
 344:	movw	ip, #3
 348:	str	ip, [sp]
 34c:	bl	3ec <ht_insert>
 350:	b	354 <ht_resize+0xf0>
 354:	ldr	r0, [fp, #-16]
 358:	add	r0, r0, #1
 35c:	str	r0, [fp, #-16]
 360:	b	2cc <ht_resize+0x68>
 364:	ldr	r0, [fp, #-8]
 368:	bl	20 <ht_clear>
 36c:	ldr	r0, [fp, #-8]
 370:	ldr	r1, [sp, #24]
 374:	str	r1, [r0]
 378:	ldr	r1, [sp, #28]
 37c:	str	r1, [r0, #4]
 380:	ldr	r1, [sp, #32]
 384:	str	r1, [r0, #8]
 388:	ldr	r1, [sp, #36]	; 0x24
 38c:	str	r1, [r0, #12]
 390:	movw	r0, #0
 394:	str	r0, [fp, #-4]
 398:	ldr	r0, [fp, #-4]
 39c:	mov	sp, fp
 3a0:	pop	{fp, pc}

000003a4 <str_set_insert>:
 3a4:	push	{fp, lr}
 3a8:	mov	fp, sp
 3ac:	sub	sp, sp, #24
 3b0:	ldr	ip, [fp, #8]
 3b4:	str	r0, [fp, #-4]
 3b8:	str	r1, [fp, #-8]
 3bc:	str	r2, [sp, #12]
 3c0:	str	r3, [sp, #8]
 3c4:	ldr	r0, [fp, #-4]
 3c8:	ldr	r1, [fp, #-8]
 3cc:	ldr	r2, [sp, #12]
 3d0:	ldr	r3, [sp, #8]
 3d4:	ldr	lr, [fp, #8]
 3d8:	str	lr, [sp]
 3dc:	str	ip, [sp, #4]
 3e0:	bl	3ec <ht_insert>
 3e4:	mov	sp, fp
 3e8:	pop	{fp, pc}

000003ec <ht_insert>:
 3ec:	push	{fp, lr}
 3f0:	mov	fp, sp
 3f4:	sub	sp, sp, #56	; 0x38
 3f8:	ldr	ip, [fp, #8]
 3fc:	str	r0, [fp, #-8]
 400:	str	r1, [fp, #-12]
 404:	str	r2, [fp, #-16]
 408:	str	r3, [fp, #-20]	; 0xffffffec
 40c:	movw	r0, #0
 410:	str	r0, [sp, #8]
 414:	ldr	r1, [fp, #-20]	; 0xffffffec
 418:	cmp	r1, r0
 41c:	beq	424 <ht_insert+0x38>
 420:	b	444 <ht_insert+0x58>
 424:	movw	r0, #0
 428:	movt	r0, #0
 42c:	movw	r1, #0
 430:	movt	r1, #0
 434:	movw	r2, #114	; 0x72
 438:	movw	r3, #0
 43c:	movt	r3, #0
 440:	bl	0 <__assert_fail>
 444:	ldr	r0, [fp, #-20]	; 0xffffffec
 448:	movw	r1, #2
 44c:	cmp	r0, r1
 450:	beq	458 <ht_insert+0x6c>
 454:	b	478 <ht_insert+0x8c>
 458:	movw	r0, #0
 45c:	movt	r0, #0
 460:	movw	r1, #0
 464:	movt	r1, #0
 468:	movw	r2, #115	; 0x73
 46c:	movw	r3, #0
 470:	movt	r3, #0
 474:	bl	0 <__assert_fail>
 478:	ldr	r0, [fp, #-20]	; 0xffffffec
 47c:	movw	r1, #1
 480:	cmp	r0, r1
 484:	beq	48c <ht_insert+0xa0>
 488:	b	4ac <ht_insert+0xc0>
 48c:	movw	r0, #0
 490:	movt	r0, #0
 494:	movw	r1, #0
 498:	movt	r1, #0
 49c:	movw	r2, #116	; 0x74
 4a0:	movw	r3, #0
 4a4:	movt	r3, #0
 4a8:	bl	0 <__assert_fail>
 4ac:	ldr	r0, [fp, #-8]
 4b0:	ldr	r1, [r0, #8]
 4b4:	ldr	r0, [r0, #12]
 4b8:	mov	r2, #179	; 0xb3
 4bc:	mul	r0, r0, r2
 4c0:	mov	r2, r0
 4c4:	lsr	r0, r0, #8
 4c8:	cmp	r1, r0
 4cc:	bcc	51c <ht_insert+0x130>
 4d0:	ldr	r0, [fp, #-8]
 4d4:	ldr	r1, [r0, #8]
 4d8:	lsl	r1, r1, #1
 4dc:	bl	264 <ht_resize>
 4e0:	cmp	r0, #0
 4e4:	beq	518 <ht_insert+0x12c>
 4e8:	movw	r0, #0
 4ec:	movt	r0, #0
 4f0:	ldr	r0, [r0]
 4f4:	movw	r1, #0
 4f8:	movt	r1, #0
 4fc:	movw	r2, #0
 500:	movt	r2, #0
 504:	bl	0 <fprintf>
 508:	movw	r1, #1
 50c:	str	r0, [sp, #4]
 510:	mov	r0, r1
 514:	bl	0 <exit>
 518:	b	51c <ht_insert+0x130>
 51c:	ldr	r0, [fp, #-8]
 520:	ldr	r0, [r0]
 524:	str	r0, [fp, #-24]	; 0xffffffe8
 528:	ldr	r0, [fp, #-8]
 52c:	ldr	r0, [r0, #12]
 530:	sub	r0, r0, #1
 534:	str	r0, [sp, #28]
 538:	ldr	r0, [fp, #-12]
 53c:	ldr	r1, [fp, #-16]
 540:	bl	b74 <ht_default_hash_function>
 544:	str	r0, [sp, #16]
 548:	movw	r0, #0
 54c:	str	r0, [sp, #24]
 550:	ldr	r0, [sp, #16]
 554:	ldr	r1, [sp, #24]
 558:	add	r0, r0, r1
 55c:	ldr	r1, [sp, #28]
 560:	and	r0, r0, r1
 564:	str	r0, [sp, #20]
 568:	ldr	r0, [fp, #8]
 56c:	cmp	r0, #2
 570:	beq	580 <ht_insert+0x194>
 574:	ldr	r0, [fp, #8]
 578:	cmp	r0, #3
 57c:	bne	62c <ht_insert+0x240>
 580:	ldr	r0, [fp, #-8]
 584:	ldr	r1, [r0, #8]
 588:	add	r1, r1, #1
 58c:	str	r1, [r0, #8]
 590:	ldr	r0, [fp, #-24]	; 0xffffffe8
 594:	ldr	r1, [sp, #20]
 598:	add	r0, r0, r1, lsl #2
 59c:	ldr	r0, [r0]
 5a0:	movw	r1, #0
 5a4:	cmp	r0, r1
 5a8:	movw	r0, #0
 5ac:	str	r0, [sp]
 5b0:	beq	5d8 <ht_insert+0x1ec>
 5b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
 5b8:	ldr	r1, [sp, #20]
 5bc:	add	r0, r0, r1, lsl #2
 5c0:	ldr	r0, [r0]
 5c4:	movw	r1, #2
 5c8:	cmp	r0, r1
 5cc:	movw	r0, #0
 5d0:	movne	r0, #1
 5d4:	str	r0, [sp]
 5d8:	ldr	r0, [sp]
 5dc:	tst	r0, #1
 5e0:	beq	60c <ht_insert+0x220>
 5e4:	ldr	r0, [sp, #24]
 5e8:	add	r0, r0, #1
 5ec:	str	r0, [sp, #24]
 5f0:	ldr	r0, [sp, #16]
 5f4:	ldr	r1, [sp, #24]
 5f8:	add	r0, r0, r1
 5fc:	ldr	r1, [sp, #28]
 600:	and	r0, r0, r1
 604:	str	r0, [sp, #20]
 608:	b	590 <ht_insert+0x1a4>
 60c:	ldr	r0, [fp, #-20]	; 0xffffffec
 610:	ldr	r1, [fp, #-24]	; 0xffffffe8
 614:	ldr	r2, [sp, #20]
 618:	add	r1, r1, r2, lsl #2
 61c:	str	r0, [r1]
 620:	movw	r0, #0
 624:	str	r0, [fp, #-4]
 628:	b	738 <ht_insert+0x34c>
 62c:	b	630 <ht_insert+0x244>
 630:	ldr	r0, [fp, #-24]	; 0xffffffe8
 634:	ldr	r1, [sp, #20]
 638:	add	r0, r0, r1, lsl #2
 63c:	ldr	r0, [r0]
 640:	str	r0, [sp, #12]
 644:	movw	r1, #0
 648:	cmp	r0, r1
 64c:	beq	6f4 <ht_insert+0x308>
 650:	ldr	r0, [sp, #12]
 654:	movw	r1, #2
 658:	cmp	r0, r1
 65c:	bne	684 <ht_insert+0x298>
 660:	ldr	r0, [sp, #8]
 664:	movw	r1, #0
 668:	cmp	r0, r1
 66c:	bne	680 <ht_insert+0x294>
 670:	ldr	r0, [fp, #-24]	; 0xffffffe8
 674:	ldr	r1, [sp, #20]
 678:	add	r0, r0, r1, lsl #2
 67c:	str	r0, [sp, #8]
 680:	b	6cc <ht_insert+0x2e0>
 684:	ldr	r0, [fp, #-12]
 688:	ldr	r1, [fp, #-16]
 68c:	ldr	r2, [sp, #12]
 690:	bl	bbc <ht_match>
 694:	cmp	r0, #0
 698:	beq	6c8 <ht_insert+0x2dc>
 69c:	ldr	r0, [fp, #8]
 6a0:	cmp	r0, #0
 6a4:	bne	6bc <ht_insert+0x2d0>
 6a8:	ldr	r0, [fp, #-20]	; 0xffffffec
 6ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
 6b0:	ldr	r2, [sp, #20]
 6b4:	add	r1, r1, r2, lsl #2
 6b8:	str	r0, [r1]
 6bc:	ldr	r0, [sp, #12]
 6c0:	str	r0, [fp, #-4]
 6c4:	b	738 <ht_insert+0x34c>
 6c8:	b	6cc <ht_insert+0x2e0>
 6cc:	ldr	r0, [sp, #24]
 6d0:	add	r0, r0, #1
 6d4:	str	r0, [sp, #24]
 6d8:	ldr	r0, [sp, #16]
 6dc:	ldr	r1, [sp, #24]
 6e0:	add	r0, r0, r1
 6e4:	ldr	r1, [sp, #28]
 6e8:	and	r0, r0, r1
 6ec:	str	r0, [sp, #20]
 6f0:	b	630 <ht_insert+0x244>
 6f4:	ldr	r0, [sp, #8]
 6f8:	movw	r1, #0
 6fc:	cmp	r0, r1
 700:	bne	714 <ht_insert+0x328>
 704:	ldr	r0, [fp, #-24]	; 0xffffffe8
 708:	ldr	r1, [sp, #20]
 70c:	add	r0, r0, r1, lsl #2
 710:	str	r0, [sp, #8]
 714:	ldr	r0, [fp, #-8]
 718:	ldr	r1, [r0, #8]
 71c:	add	r1, r1, #1
 720:	str	r1, [r0, #8]
 724:	ldr	r0, [fp, #-20]	; 0xffffffec
 728:	ldr	r1, [sp, #8]
 72c:	str	r0, [r1]
 730:	movw	r0, #0
 734:	str	r0, [fp, #-4]
 738:	ldr	r0, [fp, #-4]
 73c:	mov	sp, fp
 740:	pop	{fp, pc}

00000744 <str_set_insert_item>:
 744:	push	{fp, lr}
 748:	mov	fp, sp
 74c:	sub	sp, sp, #32
 750:	str	r0, [fp, #-4]
 754:	str	r1, [fp, #-8]
 758:	str	r2, [fp, #-12]
 75c:	ldr	r0, [fp, #-4]
 760:	ldr	r1, [fp, #-8]
 764:	str	r0, [sp, #16]
 768:	mov	r0, r1
 76c:	bl	7b8 <ht_key>
 770:	ldr	r1, [fp, #-8]
 774:	str	r0, [sp, #12]
 778:	mov	r0, r1
 77c:	bl	7cc <ht_key_len>
 780:	ldr	r3, [fp, #-8]
 784:	ldr	r1, [fp, #-12]
 788:	ldr	r2, [sp, #16]
 78c:	str	r0, [sp, #8]
 790:	mov	r0, r2
 794:	ldr	ip, [sp, #12]
 798:	str	r1, [sp, #4]
 79c:	mov	r1, ip
 7a0:	ldr	r2, [sp, #8]
 7a4:	ldr	lr, [sp, #4]
 7a8:	str	lr, [sp]
 7ac:	bl	3ec <ht_insert>
 7b0:	mov	sp, fp
 7b4:	pop	{fp, pc}

000007b8 <ht_key>:
 7b8:	sub	sp, sp, #4
 7bc:	str	r0, [sp]
 7c0:	ldr	r0, [sp]
 7c4:	add	sp, sp, #4
 7c8:	bx	lr

000007cc <ht_key_len>:
 7cc:	push	{fp, lr}
 7d0:	mov	fp, sp
 7d4:	sub	sp, sp, #8
 7d8:	str	r0, [sp, #4]
 7dc:	ldr	r0, [sp, #4]
 7e0:	bl	0 <strlen>
 7e4:	mov	sp, fp
 7e8:	pop	{fp, pc}

000007ec <str_set_find>:
 7ec:	push	{fp, lr}
 7f0:	mov	fp, sp
 7f4:	sub	sp, sp, #16
 7f8:	str	r0, [fp, #-4]
 7fc:	str	r1, [sp, #8]
 800:	str	r2, [sp, #4]
 804:	ldr	r0, [fp, #-4]
 808:	ldr	r1, [sp, #8]
 80c:	ldr	r2, [sp, #4]
 810:	bl	81c <ht_find>
 814:	mov	sp, fp
 818:	pop	{fp, pc}

0000081c <ht_find>:
 81c:	push	{fp, lr}
 820:	mov	fp, sp
 824:	sub	sp, sp, #40	; 0x28
 828:	str	r0, [fp, #-8]
 82c:	str	r1, [fp, #-12]
 830:	str	r2, [fp, #-16]
 834:	ldr	r0, [fp, #-8]
 838:	ldr	r0, [r0]
 83c:	str	r0, [sp, #20]
 840:	ldr	r0, [sp, #20]
 844:	movw	r1, #0
 848:	cmp	r0, r1
 84c:	bne	85c <ht_find+0x40>
 850:	movw	r0, #0
 854:	str	r0, [fp, #-4]
 858:	b	920 <ht_find+0x104>
 85c:	ldr	r0, [fp, #-8]
 860:	ldr	r0, [r0, #12]
 864:	sub	r0, r0, #1
 868:	str	r0, [sp, #16]
 86c:	ldr	r0, [fp, #-12]
 870:	ldr	r1, [fp, #-16]
 874:	bl	b74 <ht_default_hash_function>
 878:	str	r0, [sp, #4]
 87c:	movw	r0, #0
 880:	str	r0, [sp, #12]
 884:	ldr	r0, [sp, #4]
 888:	ldr	r1, [sp, #12]
 88c:	add	r0, r0, r1
 890:	ldr	r1, [sp, #16]
 894:	and	r0, r0, r1
 898:	str	r0, [sp, #8]
 89c:	ldr	r0, [sp, #20]
 8a0:	ldr	r1, [sp, #8]
 8a4:	add	r0, r0, r1, lsl #2
 8a8:	ldr	r0, [r0]
 8ac:	str	r0, [sp]
 8b0:	movw	r1, #0
 8b4:	cmp	r0, r1
 8b8:	beq	918 <ht_find+0xfc>
 8bc:	ldr	r0, [sp]
 8c0:	movw	r1, #2
 8c4:	cmp	r0, r1
 8c8:	beq	8f0 <ht_find+0xd4>
 8cc:	ldr	r0, [fp, #-12]
 8d0:	ldr	r1, [fp, #-16]
 8d4:	ldr	r2, [sp]
 8d8:	bl	bbc <ht_match>
 8dc:	cmp	r0, #0
 8e0:	beq	8f0 <ht_find+0xd4>
 8e4:	ldr	r0, [sp]
 8e8:	str	r0, [fp, #-4]
 8ec:	b	920 <ht_find+0x104>
 8f0:	ldr	r0, [sp, #12]
 8f4:	add	r0, r0, #1
 8f8:	str	r0, [sp, #12]
 8fc:	ldr	r0, [sp, #4]
 900:	ldr	r1, [sp, #12]
 904:	add	r0, r0, r1
 908:	ldr	r1, [sp, #16]
 90c:	and	r0, r0, r1
 910:	str	r0, [sp, #8]
 914:	b	89c <ht_find+0x80>
 918:	movw	r0, #0
 91c:	str	r0, [fp, #-4]
 920:	ldr	r0, [fp, #-4]
 924:	mov	sp, fp
 928:	pop	{fp, pc}

0000092c <str_set_find_item>:
 92c:	push	{fp, lr}
 930:	mov	fp, sp
 934:	sub	sp, sp, #24
 938:	str	r0, [fp, #-4]
 93c:	str	r1, [fp, #-8]
 940:	ldr	r0, [fp, #-4]
 944:	ldr	r1, [fp, #-8]
 948:	str	r0, [sp, #12]
 94c:	mov	r0, r1
 950:	bl	7b8 <ht_key>
 954:	ldr	r1, [fp, #-8]
 958:	str	r0, [sp, #8]
 95c:	mov	r0, r1
 960:	bl	7cc <ht_key_len>
 964:	ldr	r1, [sp, #12]
 968:	str	r0, [sp, #4]
 96c:	mov	r0, r1
 970:	ldr	r1, [sp, #8]
 974:	ldr	r2, [sp, #4]
 978:	bl	81c <ht_find>
 97c:	mov	sp, fp
 980:	pop	{fp, pc}

00000984 <str_set_remove>:
 984:	push	{fp, lr}
 988:	mov	fp, sp
 98c:	sub	sp, sp, #16
 990:	str	r0, [fp, #-4]
 994:	str	r1, [sp, #8]
 998:	str	r2, [sp, #4]
 99c:	ldr	r0, [fp, #-4]
 9a0:	ldr	r1, [sp, #8]
 9a4:	ldr	r2, [sp, #4]
 9a8:	bl	9b4 <ht_remove>
 9ac:	mov	sp, fp
 9b0:	pop	{fp, pc}

000009b4 <ht_remove>:
 9b4:	push	{fp, lr}
 9b8:	mov	fp, sp
 9bc:	sub	sp, sp, #40	; 0x28
 9c0:	str	r0, [fp, #-8]
 9c4:	str	r1, [fp, #-12]
 9c8:	str	r2, [fp, #-16]
 9cc:	ldr	r0, [fp, #-8]
 9d0:	ldr	r0, [r0]
 9d4:	str	r0, [sp, #20]
 9d8:	ldr	r0, [sp, #20]
 9dc:	movw	r1, #0
 9e0:	cmp	r0, r1
 9e4:	bne	9f4 <ht_remove+0x40>
 9e8:	movw	r0, #0
 9ec:	str	r0, [fp, #-4]
 9f0:	b	ae0 <ht_remove+0x12c>
 9f4:	ldr	r0, [fp, #-8]
 9f8:	ldr	r0, [r0, #12]
 9fc:	sub	r0, r0, #1
 a00:	str	r0, [sp, #16]
 a04:	ldr	r0, [fp, #-12]
 a08:	ldr	r1, [fp, #-16]
 a0c:	bl	b74 <ht_default_hash_function>
 a10:	str	r0, [sp, #4]
 a14:	movw	r0, #0
 a18:	str	r0, [sp, #12]
 a1c:	ldr	r0, [sp, #4]
 a20:	ldr	r1, [sp, #12]
 a24:	add	r0, r0, r1
 a28:	ldr	r1, [sp, #16]
 a2c:	and	r0, r0, r1
 a30:	str	r0, [sp, #8]
 a34:	ldr	r0, [sp, #20]
 a38:	ldr	r1, [sp, #8]
 a3c:	add	r0, r0, r1, lsl #2
 a40:	ldr	r0, [r0]
 a44:	str	r0, [sp]
 a48:	movw	r1, #0
 a4c:	cmp	r0, r1
 a50:	beq	ad8 <ht_remove+0x124>
 a54:	ldr	r0, [sp]
 a58:	movw	r1, #2
 a5c:	cmp	r0, r1
 a60:	beq	ab0 <ht_remove+0xfc>
 a64:	ldr	r0, [fp, #-12]
 a68:	ldr	r1, [fp, #-16]
 a6c:	ldr	r2, [sp]
 a70:	bl	bbc <ht_match>
 a74:	cmp	r0, #0
 a78:	beq	ab0 <ht_remove+0xfc>
 a7c:	ldr	r0, [sp, #20]
 a80:	ldr	r1, [sp, #8]
 a84:	add	r0, r0, r1, lsl #2
 a88:	movw	r1, #2
 a8c:	str	r1, [r0]
 a90:	ldr	r0, [fp, #-8]
 a94:	ldr	r1, [r0, #8]
 a98:	mvn	r2, #0
 a9c:	add	r1, r1, r2
 aa0:	str	r1, [r0, #8]
 aa4:	ldr	r0, [sp]
 aa8:	str	r0, [fp, #-4]
 aac:	b	ae0 <ht_remove+0x12c>
 ab0:	ldr	r0, [sp, #12]
 ab4:	add	r0, r0, #1
 ab8:	str	r0, [sp, #12]
 abc:	ldr	r0, [sp, #4]
 ac0:	ldr	r1, [sp, #12]
 ac4:	add	r0, r0, r1
 ac8:	ldr	r1, [sp, #16]
 acc:	and	r0, r0, r1
 ad0:	str	r0, [sp, #8]
 ad4:	b	a34 <ht_remove+0x80>
 ad8:	movw	r0, #0
 adc:	str	r0, [fp, #-4]
 ae0:	ldr	r0, [fp, #-4]
 ae4:	mov	sp, fp
 ae8:	pop	{fp, pc}

00000aec <str_set_remove_item>:
 aec:	push	{fp, lr}
 af0:	mov	fp, sp
 af4:	sub	sp, sp, #24
 af8:	str	r0, [fp, #-4]
 afc:	str	r1, [fp, #-8]
 b00:	ldr	r0, [fp, #-4]
 b04:	ldr	r1, [fp, #-8]
 b08:	str	r0, [sp, #12]
 b0c:	mov	r0, r1
 b10:	bl	7b8 <ht_key>
 b14:	ldr	r1, [fp, #-8]
 b18:	str	r0, [sp, #8]
 b1c:	mov	r0, r1
 b20:	bl	7cc <ht_key_len>
 b24:	ldr	r1, [sp, #12]
 b28:	str	r0, [sp, #4]
 b2c:	mov	r0, r1
 b30:	ldr	r1, [sp, #8]
 b34:	ldr	r2, [sp, #4]
 b38:	bl	9b4 <ht_remove>
 b3c:	mov	sp, fp
 b40:	pop	{fp, pc}

00000b44 <str_set_visit>:
 b44:	push	{fp, lr}
 b48:	mov	fp, sp
 b4c:	sub	sp, sp, #16
 b50:	str	r0, [fp, #-4]
 b54:	str	r1, [sp, #8]
 b58:	str	r2, [sp, #4]
 b5c:	ldr	r0, [fp, #-4]
 b60:	ldr	r1, [sp, #8]
 b64:	ldr	r2, [sp, #4]
 b68:	bl	b4 <ht_visit>
 b6c:	mov	sp, fp
 b70:	pop	{fp, pc}

00000b74 <ht_default_hash_function>:
 b74:	push	{fp, lr}
 b78:	mov	fp, sp
 b7c:	sub	sp, sp, #24
 b80:	str	r0, [fp, #-4]
 b84:	str	r1, [fp, #-8]
 b88:	ldr	r0, [fp, #-4]
 b8c:	ldr	r2, [fp, #-8]
 b90:	mov	r1, sp
 b94:	add	r3, sp, #8
 b98:	str	r3, [r1, #4]
 b9c:	movw	r3, #15186	; 0x3b52
 ba0:	movt	r3, #12137	; 0x2f69
 ba4:	str	r3, [r1]
 ba8:	mov	r3, #0
 bac:	bl	0 <cmetrohash64_1>
 bb0:	ldr	r0, [sp, #8]
 bb4:	mov	sp, fp
 bb8:	pop	{fp, pc}

00000bbc <ht_match>:
 bbc:	push	{fp, lr}
 bc0:	mov	fp, sp
 bc4:	sub	sp, sp, #16
 bc8:	str	r0, [fp, #-4]
 bcc:	str	r1, [sp, #8]
 bd0:	str	r2, [sp, #4]
 bd4:	ldr	r0, [fp, #-4]
 bd8:	ldr	r1, [sp, #4]
 bdc:	ldr	r2, [sp, #8]
 be0:	bl	0 <strncmp>
 be4:	cmp	r0, #0
 be8:	movw	r0, #0
 bec:	moveq	r0, #1
 bf0:	and	r0, r0, #1
 bf4:	mov	sp, fp
 bf8:	pop	{fp, pc}
