
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-netcdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <read_bytes>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #112	; 0x70
       8:	str	ip, [sp, #4]
       c:	str	lr, [sp, #8]
      10:	str	r4, [sp, #16]
      14:	str	r5, [sp, #20]
      18:	str	r6, [sp, #24]
      1c:	str	r7, [sp, #28]
      20:	str	r8, [sp, #32]
      24:	str	r9, [sp, #36]	; 0x24
      28:	ldr	r7, [ip, #8]
      2c:	ldr	r9, [ip, #4]
      30:	ldr	r6, [ip]
      34:	mov	r8, r3
      38:	mov	r5, r2
      3c:	mov	r4, r0
      40:	ldr	r1, [r4, #48]	; 0x30
      44:	cmp	r1, #0
      48:	bne	110 <read_bytes+0x110>
      4c:	ldr	r0, [r4, #16]
      50:	cmp	r0, #0
      54:	beq	6c <read_bytes+0x6c>
      58:	ldr	r2, [r4, #16]
      5c:	cmp	r2, #1
      60:	moveq	r0, #1
      64:	movne	r0, #0
      68:	b	70 <read_bytes+0x70>
      6c:	mov	r0, #1
      70:	cmp	r0, #0
      74:	bne	8c <read_bytes+0x8c>
      78:	ldr	r0, [pc, #400]	; 210 <read_bytes+0x210>
      7c:	ldr	r1, [pc, #408]	; 21c <read_bytes+0x21c>
      80:	mov	r2, #83	; 0x53
      84:	ldr	r3, [pc, #396]	; 218 <read_bytes+0x218>
      88:	bl	0 <__assert_fail>
      8c:	adds	r0, r5, r6
      90:	adc	r3, r8, r9
      94:	ldr	r1, [r4, #8]
      98:	ldr	ip, [r4, #12]
      9c:	cmp	r3, ip
      a0:	bne	b0 <read_bytes+0xb0>
      a4:	cmp	r0, r1
      a8:	bhi	b8 <read_bytes+0xb8>
      ac:	b	cc <read_bytes+0xcc>
      b0:	cmp	r3, ip
      b4:	bls	cc <read_bytes+0xcc>
      b8:	mvn	r0, #300	; 0x12c
      bc:	ldr	r1, [pc, #328]	; 20c <read_bytes+0x20c>
      c0:	bl	0 <coda_set_error>
      c4:	mvn	r0, #0
      c8:	b	1e8 <read_bytes+0x1e8>
      cc:	ldr	r0, [r4, #56]	; 0x38
      d0:	mov	r2, r6
      d4:	mov	r3, r5
      d8:	mov	r1, r7
      dc:	bl	0 <pread>
      e0:	cmp	r0, #0
      e4:	bge	1e4 <read_bytes+0x1e4>
      e8:	bl	0 <__errno_location>
      ec:	ldr	r0, [r0]
      f0:	bl	0 <strerror>
      f4:	mvn	r3, #21
      f8:	ldr	r1, [pc, #276]	; 214 <read_bytes+0x214>
      fc:	mov	r2, r0
     100:	mov	r0, r3
     104:	bl	0 <coda_set_error>
     108:	mvn	r0, #0
     10c:	b	1e8 <read_bytes+0x1e8>
     110:	adds	ip, r5, r6
     114:	adc	r1, r8, r9
     118:	ldr	r2, [r4, #40]	; 0x28
     11c:	ldr	r3, [r4, #44]	; 0x2c
     120:	cmp	r1, r3
     124:	bne	134 <read_bytes+0x134>
     128:	cmp	ip, r2
     12c:	bhi	13c <read_bytes+0x13c>
     130:	b	1d0 <read_bytes+0x1d0>
     134:	cmp	r1, r3
     138:	bls	1d0 <read_bytes+0x1d0>
     13c:	ldr	r1, [r4, #16]
     140:	cmp	r1, #0
     144:	beq	15c <read_bytes+0x15c>
     148:	ldr	r2, [r4, #16]
     14c:	cmp	r2, #1
     150:	moveq	ip, #1
     154:	movne	ip, #0
     158:	b	160 <read_bytes+0x160>
     15c:	mov	ip, #1
     160:	cmp	ip, #0
     164:	bne	1bc <read_bytes+0x1bc>
     168:	add	r2, sp, #64	; 0x40
     16c:	mov	r1, r9
     170:	mov	r0, r6
     174:	bl	0 <coda_str64>
     178:	add	r2, sp, #88	; 0x58
     17c:	mov	r1, r8
     180:	mov	r0, r5
     184:	bl	0 <coda_str64>
     188:	ldr	r0, [r4, #40]	; 0x28
     18c:	ldr	r1, [r4, #44]	; 0x2c
     190:	add	r2, sp, #40	; 0x28
     194:	bl	0 <coda_str64>
     198:	mvn	r0, #300	; 0x12c
     19c:	ldr	r1, [pc, #124]	; 220 <read_bytes+0x220>
     1a0:	add	r2, sp, #64	; 0x40
     1a4:	add	r3, sp, #88	; 0x58
     1a8:	add	r4, sp, #40	; 0x28
     1ac:	str	r4, [sp]
     1b0:	bl	0 <coda_set_error>
     1b4:	mvn	r0, #0
     1b8:	b	1e8 <read_bytes+0x1e8>
     1bc:	mvn	r0, #300	; 0x12c
     1c0:	ldr	r1, [pc, #68]	; 20c <read_bytes+0x20c>
     1c4:	bl	0 <coda_set_error>
     1c8:	mvn	r0, #0
     1cc:	b	1e8 <read_bytes+0x1e8>
     1d0:	ldr	r2, [r4, #48]	; 0x30
     1d4:	add	r1, r2, r5
     1d8:	mov	r2, r6
     1dc:	mov	r0, r7
     1e0:	bl	0 <memcpy>
     1e4:	mov	r0, #0
     1e8:	ldr	r4, [sp, #16]
     1ec:	ldr	r5, [sp, #20]
     1f0:	ldr	r6, [sp, #24]
     1f4:	ldr	r7, [sp, #28]
     1f8:	ldr	r8, [sp, #32]
     1fc:	ldr	r9, [sp, #36]	; 0x24
     200:	ldr	lr, [sp, #8]
     204:	add	sp, sp, #112	; 0x70
     208:	bx	lr
     20c:	.word	0x00000324
     210:	.word	0x00000384
     214:	.word	0x00000131
     218:	.word	0x00000474
     21c:	.word	0x0000014f
     220:	.word	0x000001ae

00000224 <swap2>:
     224:	mov	ip, sp
     228:	sub	sp, sp, #8
     22c:	str	ip, [sp]
     230:	str	lr, [sp, #4]
     234:	ldrb	r3, [r0]
     238:	ldrb	ip, [r0, #1]
     23c:	eor	ip, r3, ip
     240:	and	r2, ip, #255	; 0xff
     244:	strb	r2, [r0]
     248:	ldrb	r3, [r0]
     24c:	ldrb	r1, [r0, #1]
     250:	eor	r1, r3, r1
     254:	and	r2, r1, #255	; 0xff
     258:	strb	r2, [r0, #1]
     25c:	ldrb	r2, [r0]
     260:	ldrb	r1, [r0, #1]
     264:	eor	r1, r2, r1
     268:	and	r1, r1, #255	; 0xff
     26c:	strb	r1, [r0]
     270:	ldr	lr, [sp, #4]
     274:	add	sp, sp, #8
     278:	bx	lr

0000027c <swap4>:
     27c:	mov	ip, sp
     280:	sub	sp, sp, #8
     284:	str	ip, [sp]
     288:	str	lr, [sp, #4]
     28c:	ldrb	ip, [r0]
     290:	ldrb	r3, [r0, #3]
     294:	eor	r2, ip, r3
     298:	and	r1, r2, #255	; 0xff
     29c:	strb	r1, [r0]
     2a0:	ldrb	r1, [r0]
     2a4:	ldrb	r2, [r0, #3]
     2a8:	eor	r1, r1, r2
     2ac:	and	r2, r1, #255	; 0xff
     2b0:	strb	r2, [r0, #3]
     2b4:	ldrb	ip, [r0]
     2b8:	ldrb	r1, [r0, #3]
     2bc:	eor	r1, ip, r1
     2c0:	and	ip, r1, #255	; 0xff
     2c4:	strb	ip, [r0]
     2c8:	ldrb	ip, [r0, #1]
     2cc:	ldrb	r3, [r0, #2]
     2d0:	eor	ip, ip, r3
     2d4:	and	r1, ip, #255	; 0xff
     2d8:	strb	r1, [r0, #1]
     2dc:	ldrb	r3, [r0, #1]
     2e0:	ldrb	r1, [r0, #2]
     2e4:	eor	ip, r3, r1
     2e8:	and	r1, ip, #255	; 0xff
     2ec:	strb	r1, [r0, #2]
     2f0:	ldrb	r2, [r0, #1]
     2f4:	ldrb	r1, [r0, #2]
     2f8:	eor	r2, r2, r1
     2fc:	and	r1, r2, #255	; 0xff
     300:	strb	r1, [r0, #1]
     304:	ldr	lr, [sp, #4]
     308:	add	sp, sp, #8
     30c:	bx	lr

00000310 <swap8>:
     310:	mov	ip, sp
     314:	sub	sp, sp, #8
     318:	str	ip, [sp]
     31c:	str	lr, [sp, #4]
     320:	ldrb	r1, [r0]
     324:	ldrb	r2, [r0, #7]
     328:	eor	r1, r1, r2
     32c:	and	r2, r1, #255	; 0xff
     330:	strb	r2, [r0]
     334:	ldrb	ip, [r0]
     338:	ldrb	r1, [r0, #7]
     33c:	eor	r3, ip, r1
     340:	and	r1, r3, #255	; 0xff
     344:	strb	r1, [r0, #7]
     348:	ldrb	r1, [r0]
     34c:	ldrb	r3, [r0, #7]
     350:	eor	r3, r1, r3
     354:	and	r1, r3, #255	; 0xff
     358:	strb	r1, [r0]
     35c:	ldrb	r2, [r0, #1]
     360:	ldrb	ip, [r0, #6]
     364:	eor	r1, r2, ip
     368:	and	r2, r1, #255	; 0xff
     36c:	strb	r2, [r0, #1]
     370:	ldrb	r1, [r0, #1]
     374:	ldrb	ip, [r0, #6]
     378:	eor	r2, r1, ip
     37c:	and	r3, r2, #255	; 0xff
     380:	strb	r3, [r0, #6]
     384:	ldrb	r3, [r0, #1]
     388:	ldrb	r2, [r0, #6]
     38c:	eor	ip, r3, r2
     390:	and	ip, ip, #255	; 0xff
     394:	strb	ip, [r0, #1]
     398:	ldrb	r3, [r0, #2]
     39c:	ldrb	r1, [r0, #5]
     3a0:	eor	ip, r3, r1
     3a4:	and	r3, ip, #255	; 0xff
     3a8:	strb	r3, [r0, #2]
     3ac:	ldrb	r2, [r0, #2]
     3b0:	ldrb	r1, [r0, #5]
     3b4:	eor	r1, r2, r1
     3b8:	and	r1, r1, #255	; 0xff
     3bc:	strb	r1, [r0, #5]
     3c0:	ldrb	r1, [r0, #2]
     3c4:	ldrb	r3, [r0, #5]
     3c8:	eor	ip, r1, r3
     3cc:	and	r2, ip, #255	; 0xff
     3d0:	strb	r2, [r0, #2]
     3d4:	ldrb	ip, [r0, #3]
     3d8:	ldrb	r2, [r0, #4]
     3dc:	eor	r1, ip, r2
     3e0:	and	r1, r1, #255	; 0xff
     3e4:	strb	r1, [r0, #3]
     3e8:	ldrb	r1, [r0, #3]
     3ec:	ldrb	r2, [r0, #4]
     3f0:	eor	r2, r1, r2
     3f4:	and	r1, r2, #255	; 0xff
     3f8:	strb	r1, [r0, #4]
     3fc:	ldrb	ip, [r0, #3]
     400:	ldrb	r1, [r0, #4]
     404:	eor	r1, ip, r1
     408:	and	r3, r1, #255	; 0xff
     40c:	strb	r3, [r0, #3]
     410:	ldr	lr, [sp, #4]
     414:	add	sp, sp, #8
     418:	bx	lr

0000041c <read_length_value>:
     41c:	mov	ip, sp
     420:	sub	sp, sp, #48	; 0x30
     424:	str	ip, [sp, #12]
     428:	str	lr, [sp, #16]
     42c:	str	r4, [sp, #24]
     430:	str	r5, [sp, #28]
     434:	str	r6, [sp, #32]
     438:	mov	r5, r2
     43c:	mov	r4, r1
     440:	ldr	r1, [r0, #56]	; 0x38
     444:	cmp	r1, #5
     448:	beq	4c0 <read_length_value+0xa4>
     44c:	ldr	r0, [r0, #52]	; 0x34
     450:	ldr	r2, [r4]
     454:	ldr	r3, [r4, #4]
     458:	mov	r1, #0
     45c:	mov	ip, #4
     460:	add	r6, sp, #40	; 0x28
     464:	str	r6, [sp, #8]
     468:	str	r1, [sp, #4]
     46c:	str	ip, [sp]
     470:	bl	0 <read_bytes>
     474:	cmp	r0, #0
     478:	bge	484 <read_length_value+0x68>
     47c:	mvn	r0, #0
     480:	b	520 <read_length_value+0x104>
     484:	add	r0, sp, #40	; 0x28
     488:	bl	27c <swap4>
     48c:	ldr	ip, [sp, #40]	; 0x28
     490:	asr	r0, ip, #31
     494:	str	ip, [r5]
     498:	str	r0, [r5, #4]
     49c:	ldr	ip, [r4]
     4a0:	ldr	r2, [r4, #4]
     4a4:	mov	r1, #0
     4a8:	mov	r0, #4
     4ac:	adds	r3, ip, r0
     4b0:	adc	r0, r2, r1
     4b4:	str	r3, [r4]
     4b8:	str	r0, [r4, #4]
     4bc:	b	51c <read_length_value+0x100>
     4c0:	ldr	r0, [r0, #52]	; 0x34
     4c4:	ldr	r2, [r4]
     4c8:	ldr	r3, [r4, #4]
     4cc:	mov	r1, #0
     4d0:	mov	ip, #8
     4d4:	str	r5, [sp, #8]
     4d8:	str	r1, [sp, #4]
     4dc:	str	ip, [sp]
     4e0:	bl	0 <read_bytes>
     4e4:	cmp	r0, #0
     4e8:	bge	4f4 <read_length_value+0xd8>
     4ec:	mvn	r0, #0
     4f0:	b	520 <read_length_value+0x104>
     4f4:	mov	r0, r5
     4f8:	bl	310 <swap8>
     4fc:	ldr	ip, [r4]
     500:	ldr	r3, [r4, #4]
     504:	mov	r2, #0
     508:	mov	r1, #8
     50c:	adds	ip, ip, r1
     510:	adc	r3, r3, r2
     514:	str	ip, [r4]
     518:	str	r3, [r4, #4]
     51c:	mov	r0, #0
     520:	ldr	r4, [sp, #24]
     524:	ldr	r5, [sp, #28]
     528:	ldr	r6, [sp, #32]
     52c:	ldr	lr, [sp, #16]
     530:	add	sp, sp, #48	; 0x30
     534:	bx	lr

00000538 <read_dim_array>:
     538:	mov	ip, sp
     53c:	sub	sp, sp, #80	; 0x50
     540:	str	ip, [sp, #12]
     544:	str	lr, [sp, #16]
     548:	str	r4, [sp, #28]
     54c:	str	r5, [sp, #32]
     550:	str	r6, [sp, #36]	; 0x24
     554:	str	r7, [sp, #40]	; 0x28
     558:	str	r8, [sp, #44]	; 0x2c
     55c:	str	r9, [sp, #48]	; 0x30
     560:	str	sl, [sp, #52]	; 0x34
     564:	str	fp, [sp, #56]	; 0x38
     568:	ldr	ip, [ip, #8]
     56c:	str	ip, [sp, #24]
     570:	ldr	ip, [sp, #12]
     574:	ldr	r5, [ip, #4]
     578:	ldr	r7, [ip]
     57c:	mov	r9, r3
     580:	mov	r6, r2
     584:	mov	r8, r1
     588:	mov	r4, r0
     58c:	ldr	r0, [r4, #52]	; 0x34
     590:	ldr	r2, [r8]
     594:	ldr	r3, [r8, #4]
     598:	mov	fp, #0
     59c:	mov	ip, #4
     5a0:	add	sl, sp, #64	; 0x40
     5a4:	str	sl, [sp, #8]
     5a8:	str	fp, [sp, #4]
     5ac:	str	ip, [sp]
     5b0:	bl	0 <read_bytes>
     5b4:	cmp	r0, #0
     5b8:	bge	5c4 <read_dim_array+0x8c>
     5bc:	mvn	r0, #0
     5c0:	b	7f4 <read_dim_array+0x2bc>
     5c4:	add	r0, sp, #64	; 0x40
     5c8:	bl	27c <swap4>
     5cc:	ldr	r1, [r8]
     5d0:	ldr	r2, [r8, #4]
     5d4:	mov	r0, #0
     5d8:	mov	ip, #4
     5dc:	adds	r3, r1, ip
     5e0:	adc	r2, r2, r0
     5e4:	str	r3, [r8]
     5e8:	str	r2, [r8, #4]
     5ec:	mov	r2, r7
     5f0:	mov	r1, r8
     5f4:	mov	r0, r4
     5f8:	bl	41c <read_length_value>
     5fc:	cmp	r0, #0
     600:	beq	60c <read_dim_array+0xd4>
     604:	mvn	r0, #0
     608:	b	7f4 <read_dim_array+0x2bc>
     60c:	ldr	r0, [sp, #64]	; 0x40
     610:	cmp	r0, #0
     614:	bne	64c <read_dim_array+0x114>
     618:	ldr	ip, [r7]
     61c:	ldr	r1, [r7, #4]
     620:	orr	r0, r1, ip
     624:	cmp	r0, #0
     628:	beq	644 <read_dim_array+0x10c>
     62c:	movw	r0, #65236	; 0xfed4
     630:	movt	r0, #65535	; 0xffff
     634:	ldr	r1, [pc, #496]	; 82c <read_dim_array+0x2f4>
     638:	bl	0 <coda_set_error>
     63c:	mvn	r0, #0
     640:	b	7f4 <read_dim_array+0x2bc>
     644:	mov	r0, #0
     648:	b	7f4 <read_dim_array+0x2bc>
     64c:	ldr	r2, [sp, #64]	; 0x40
     650:	cmp	r2, #10
     654:	beq	670 <read_dim_array+0x138>
     658:	movw	r0, #65236	; 0xfed4
     65c:	movt	r0, #65535	; 0xffff
     660:	ldr	r1, [pc, #444]	; 824 <read_dim_array+0x2ec>
     664:	bl	0 <coda_set_error>
     668:	mvn	r0, #0
     66c:	b	7f4 <read_dim_array+0x2bc>
     670:	ldr	r2, [r7]
     674:	lsl	r0, r2, #3
     678:	bl	0 <malloc>
     67c:	str	r0, [r5]
     680:	ldr	r1, [r5]
     684:	cmp	r1, #0
     688:	bne	6c4 <read_dim_array+0x18c>
     68c:	mvn	r0, #0
     690:	ldr	r1, [pc, #392]	; 820 <read_dim_array+0x2e8>
     694:	ldr	r2, [r7]
     698:	ldr	r3, [r7, #4]
     69c:	lsl	r3, r3, #3
     6a0:	orr	r3, r3, r2, lsr #29
     6a4:	lsl	r2, r2, #3
     6a8:	ldr	r5, [pc, #376]	; 828 <read_dim_array+0x2f0>
     6ac:	mov	ip, #124	; 0x7c
     6b0:	str	ip, [sp, #4]
     6b4:	str	r5, [sp]
     6b8:	bl	0 <coda_set_error>
     6bc:	mvn	r0, #0
     6c0:	b	7f4 <read_dim_array+0x2bc>
     6c4:	mov	sl, #0
     6c8:	mov	r3, sl
     6cc:	asr	r0, r3, #31
     6d0:	ldr	r1, [r7]
     6d4:	ldr	r2, [r7, #4]
     6d8:	cmp	r0, r2
     6dc:	bne	6ec <read_dim_array+0x1b4>
     6e0:	cmp	r3, r1
     6e4:	bcc	6f4 <read_dim_array+0x1bc>
     6e8:	b	7f0 <read_dim_array+0x2b8>
     6ec:	cmp	r0, r2
     6f0:	bge	7f0 <read_dim_array+0x2b8>
     6f4:	add	r2, sp, #72	; 0x48
     6f8:	mov	r1, r8
     6fc:	mov	r0, r4
     700:	bl	41c <read_length_value>
     704:	cmp	r0, #0
     708:	beq	71c <read_dim_array+0x1e4>
     70c:	ldr	r0, [r5]
     710:	bl	0 <free>
     714:	mvn	r0, #0
     718:	b	7f4 <read_dim_array+0x2bc>
     71c:	ldr	r0, [r8]
     720:	ldr	r2, [r8, #4]
     724:	ldr	ip, [sp, #72]	; 0x48
     728:	ldr	r3, [sp, #76]	; 0x4c
     72c:	adds	ip, r0, ip
     730:	adc	r1, r2, r3
     734:	str	ip, [r8]
     738:	str	r1, [r8, #4]
     73c:	ldr	ip, [sp, #72]	; 0x48
     740:	mov	r3, #0
     744:	and	ip, ip, #3
     748:	orr	r0, r3, ip
     74c:	cmp	r0, #0
     750:	beq	788 <read_dim_array+0x250>
     754:	ldr	r2, [r8]
     758:	ldr	r3, [r8, #4]
     75c:	mov	r1, #0
     760:	mov	r0, #4
     764:	ldr	ip, [sp, #72]	; 0x48
     768:	mov	fp, #0
     76c:	and	ip, ip, #3
     770:	subs	ip, r0, ip
     774:	sbc	r0, r1, fp
     778:	adds	ip, r2, ip
     77c:	adc	r0, r3, r0
     780:	str	ip, [r8]
     784:	str	r0, [r8, #4]
     788:	ldr	r3, [r5]
     78c:	add	r2, r3, sl, lsl #3
     790:	mov	r1, r8
     794:	mov	r0, r4
     798:	bl	41c <read_length_value>
     79c:	cmp	r0, #0
     7a0:	beq	7b4 <read_dim_array+0x27c>
     7a4:	ldr	r0, [r5]
     7a8:	bl	0 <free>
     7ac:	mvn	r0, #0
     7b0:	b	7f4 <read_dim_array+0x2bc>
     7b4:	ldr	ip, [r5]
     7b8:	add	r1, ip, sl, lsl #3
     7bc:	ldr	r0, [r1]
     7c0:	ldr	r2, [r1, #4]
     7c4:	orr	r0, r2, r0
     7c8:	cmp	r0, #0
     7cc:	bne	7e8 <read_dim_array+0x2b0>
     7d0:	ldr	r0, [r5]
     7d4:	add	r3, r0, sl, lsl #3
     7d8:	str	r6, [r3]
     7dc:	str	r9, [r3, #4]
     7e0:	ldr	r3, [sp, #24]
     7e4:	str	sl, [r3]
     7e8:	add	sl, sl, #1
     7ec:	b	6c8 <read_dim_array+0x190>
     7f0:	mov	r0, #0
     7f4:	ldr	r4, [sp, #28]
     7f8:	ldr	r5, [sp, #32]
     7fc:	ldr	r6, [sp, #36]	; 0x24
     800:	ldr	r7, [sp, #40]	; 0x28
     804:	ldr	r8, [sp, #44]	; 0x2c
     808:	ldr	r9, [sp, #48]	; 0x30
     80c:	ldr	sl, [sp, #52]	; 0x34
     810:	ldr	fp, [sp, #56]	; 0x38
     814:	ldr	lr, [sp, #16]
     818:	add	sp, sp, #80	; 0x50
     81c:	bx	lr
     820:	.word	0x000002ef
     824:	.word	0x00000071
     828:	.word	0x00000419
     82c:	.word	0x000000aa

00000830 <read_att_array>:
     830:	mov	ip, sp
     834:	sub	sp, sp, #120	; 0x78
     838:	str	ip, [sp, #16]
     83c:	str	lr, [sp, #20]
     840:	str	r4, [sp, #28]
     844:	str	r5, [sp, #32]
     848:	str	r6, [sp, #36]	; 0x24
     84c:	str	r7, [sp, #40]	; 0x28
     850:	str	r8, [sp, #44]	; 0x2c
     854:	str	r9, [sp, #48]	; 0x30
     858:	str	sl, [sp, #52]	; 0x34
     85c:	str	fp, [sp, #56]	; 0x38
     860:	mov	r5, r3
     864:	mov	r9, r2
     868:	mov	r8, r1
     86c:	mov	r7, r0
     870:	ldr	r0, [r7, #52]	; 0x34
     874:	ldr	r2, [r8]
     878:	ldr	r3, [r8, #4]
     87c:	mov	r1, #0
     880:	mov	ip, #4
     884:	add	r6, sp, #68	; 0x44
     888:	str	r6, [sp, #8]
     88c:	str	r1, [sp, #4]
     890:	str	ip, [sp]
     894:	bl	0 <read_bytes>
     898:	cmp	r0, #0
     89c:	bge	8a8 <read_att_array+0x78>
     8a0:	mvn	r0, #0
     8a4:	b	11f8 <read_att_array+0x9c8>
     8a8:	add	r0, sp, #68	; 0x44
     8ac:	bl	27c <swap4>
     8b0:	ldr	r0, [r8]
     8b4:	ldr	r3, [r8, #4]
     8b8:	mov	r2, #0
     8bc:	mov	r1, #4
     8c0:	adds	lr, r0, r1
     8c4:	adc	ip, r3, r2
     8c8:	mov	r3, lr
     8cc:	str	r3, [r8]
     8d0:	str	ip, [r8, #4]
     8d4:	add	r2, sp, #80	; 0x50
     8d8:	mov	r1, r8
     8dc:	mov	r0, r7
     8e0:	bl	41c <read_length_value>
     8e4:	cmp	r0, #0
     8e8:	beq	8f4 <read_att_array+0xc4>
     8ec:	mvn	r0, #0
     8f0:	b	11f8 <read_att_array+0x9c8>
     8f4:	ldr	r3, [sp, #68]	; 0x44
     8f8:	cmp	r3, #0
     8fc:	bne	93c <read_att_array+0x10c>
     900:	mov	r1, #0
     904:	str	r1, [r9]
     908:	ldr	r3, [sp, #80]	; 0x50
     90c:	ldr	ip, [sp, #84]	; 0x54
     910:	orr	r0, ip, r3
     914:	cmp	r0, #0
     918:	beq	934 <read_att_array+0x104>
     91c:	movw	r0, #65236	; 0xfed4
     920:	movt	r0, #65535	; 0xffff
     924:	ldr	r1, [pc, #2324]	; 1240 <read_att_array+0xa10>
     928:	bl	0 <coda_set_error>
     92c:	mvn	r0, #0
     930:	b	11f8 <read_att_array+0x9c8>
     934:	mov	r0, #0
     938:	b	11f8 <read_att_array+0x9c8>
     93c:	ldr	r0, [sp, #68]	; 0x44
     940:	cmp	r0, #12
     944:	beq	960 <read_att_array+0x130>
     948:	movw	r0, #65236	; 0xfed4
     94c:	movt	r0, #65535	; 0xffff
     950:	ldr	r1, [pc, #2276]	; 123c <read_att_array+0xa0c>
     954:	bl	0 <coda_set_error>
     958:	mvn	r0, #0
     95c:	b	11f8 <read_att_array+0x9c8>
     960:	mov	r0, #6
     964:	bl	0 <coda_type_record_new>
     968:	mov	r4, r0
     96c:	cmp	r4, #0
     970:	bne	97c <read_att_array+0x14c>
     974:	mvn	r0, #0
     978:	b	11f8 <read_att_array+0x9c8>
     97c:	mov	r1, #0
     980:	mov	r0, r4
     984:	bl	0 <coda_mem_record_new>
     988:	str	r0, [r9]
     98c:	mov	r0, r4
     990:	bl	0 <coda_type_release>
     994:	ldr	r3, [r9]
     998:	cmp	r3, #0
     99c:	bne	9a8 <read_att_array+0x178>
     9a0:	mvn	r0, #0
     9a4:	b	11f8 <read_att_array+0x9c8>
     9a8:	mov	r2, #0
     9ac:	str	r2, [sp, #24]
     9b0:	ldr	r1, [sp, #24]
     9b4:	asr	r2, r1, #31
     9b8:	ldr	r0, [sp, #80]	; 0x50
     9bc:	ldr	r3, [sp, #84]	; 0x54
     9c0:	cmp	r2, r3
     9c4:	bne	9d4 <read_att_array+0x1a4>
     9c8:	cmp	r1, r0
     9cc:	bcc	9dc <read_att_array+0x1ac>
     9d0:	b	11f4 <read_att_array+0x9c4>
     9d4:	cmp	r2, r3
     9d8:	bge	11f4 <read_att_array+0x9c4>
     9dc:	add	r2, sp, #88	; 0x58
     9e0:	mov	r1, r8
     9e4:	mov	r0, r7
     9e8:	bl	41c <read_length_value>
     9ec:	cmp	r0, #0
     9f0:	beq	9fc <read_att_array+0x1cc>
     9f4:	mvn	r0, #0
     9f8:	b	11f8 <read_att_array+0x9c8>
     9fc:	ldr	r2, [sp, #88]	; 0x58
     a00:	ldr	r0, [sp, #92]	; 0x5c
     a04:	mov	ip, #0
     a08:	mov	r3, #1
     a0c:	adds	lr, r2, r3
     a10:	adc	r1, r0, ip
     a14:	mov	r0, lr
     a18:	bl	0 <malloc>
     a1c:	mov	r6, r0
     a20:	cmp	r6, #0
     a24:	bne	a68 <read_att_array+0x238>
     a28:	ldr	r0, [r9]
     a2c:	bl	0 <coda_dynamic_type_delete>
     a30:	mvn	r0, #0
     a34:	ldr	r1, [pc, #2024]	; 1224 <read_att_array+0x9f4>
     a38:	ldr	ip, [sp, #88]	; 0x58
     a3c:	ldr	r4, [sp, #92]	; 0x5c
     a40:	mov	r3, #0
     a44:	mov	r2, #1
     a48:	adds	r2, ip, r2
     a4c:	adc	r3, r4, r3
     a50:	ldr	r3, [pc, #2032]	; 1248 <read_att_array+0xa18>
     a54:	mov	ip, #230	; 0xe6
     a58:	str	ip, [sp]
     a5c:	bl	0 <coda_set_error>
     a60:	mvn	r0, #0
     a64:	b	11f8 <read_att_array+0x9c8>
     a68:	ldr	r3, [sp, #88]	; 0x58
     a6c:	mov	ip, #0
     a70:	strb	ip, [r6, r3]
     a74:	ldr	r0, [r7, #52]	; 0x34
     a78:	ldr	r2, [r8]
     a7c:	ldr	r3, [r8, #4]
     a80:	ldr	r1, [sp, #88]	; 0x58
     a84:	ldr	r4, [sp, #92]	; 0x5c
     a88:	str	r6, [sp, #8]
     a8c:	str	r4, [sp, #4]
     a90:	str	r1, [sp]
     a94:	bl	0 <read_bytes>
     a98:	cmp	r0, #0
     a9c:	bge	ab8 <read_att_array+0x288>
     aa0:	mov	r0, r6
     aa4:	bl	0 <free>
     aa8:	ldr	r0, [r9]
     aac:	bl	0 <coda_dynamic_type_delete>
     ab0:	mvn	r0, #0
     ab4:	b	11f8 <read_att_array+0x9c8>
     ab8:	ldr	ip, [r8]
     abc:	ldr	r1, [r8, #4]
     ac0:	ldr	r2, [sp, #88]	; 0x58
     ac4:	ldr	r0, [sp, #92]	; 0x5c
     ac8:	adds	r3, ip, r2
     acc:	adc	ip, r1, r0
     ad0:	str	r3, [r8]
     ad4:	str	ip, [r8, #4]
     ad8:	ldr	ip, [sp, #88]	; 0x58
     adc:	mov	r0, #0
     ae0:	and	ip, ip, #3
     ae4:	orr	ip, r0, ip
     ae8:	cmp	ip, #0
     aec:	beq	b28 <read_att_array+0x2f8>
     af0:	ldr	r2, [r8]
     af4:	ldr	r1, [r8, #4]
     af8:	mov	ip, #0
     afc:	mov	r3, #4
     b00:	ldr	r0, [sp, #88]	; 0x58
     b04:	mov	r4, #0
     b08:	and	r0, r0, #3
     b0c:	subs	lr, r3, r0
     b10:	sbc	r3, ip, r4
     b14:	mov	ip, lr
     b18:	adds	ip, r2, ip
     b1c:	adc	r0, r1, r3
     b20:	str	ip, [r8]
     b24:	str	r0, [r8, #4]
     b28:	ldr	r0, [r7, #52]	; 0x34
     b2c:	ldr	r2, [r8]
     b30:	ldr	r3, [r8, #4]
     b34:	mov	r4, #0
     b38:	mov	r1, #4
     b3c:	add	sl, sp, #72	; 0x48
     b40:	str	sl, [sp, #8]
     b44:	str	r4, [sp, #4]
     b48:	str	r1, [sp]
     b4c:	bl	0 <read_bytes>
     b50:	cmp	r0, #0
     b54:	bge	b70 <read_att_array+0x340>
     b58:	mov	r0, r6
     b5c:	bl	0 <free>
     b60:	ldr	r0, [r9]
     b64:	bl	0 <coda_dynamic_type_delete>
     b68:	mvn	r0, #0
     b6c:	b	11f8 <read_att_array+0x9c8>
     b70:	add	r0, sp, #72	; 0x48
     b74:	bl	27c <swap4>
     b78:	ldr	r0, [r8]
     b7c:	ldr	ip, [r8, #4]
     b80:	mov	r2, #0
     b84:	mov	r1, #4
     b88:	adds	lr, r0, r1
     b8c:	adc	r1, ip, r2
     b90:	mov	r2, lr
     b94:	str	r2, [r8]
     b98:	str	r1, [r8, #4]
     b9c:	add	r2, sp, #96	; 0x60
     ba0:	mov	r1, r8
     ba4:	mov	r0, r7
     ba8:	bl	41c <read_length_value>
     bac:	cmp	r0, #0
     bb0:	beq	bbc <read_att_array+0x38c>
     bb4:	mvn	r0, #0
     bb8:	b	11f8 <read_att_array+0x9c8>
     bbc:	ldr	r4, [sp, #96]	; 0x60
     bc0:	ldr	ip, [sp, #72]	; 0x48
     bc4:	cmp	ip, #4
     bc8:	bcs	bec <read_att_array+0x3bc>
     bcc:	cmp	ip, #1
     bd0:	beq	c3c <read_att_array+0x40c>
     bd4:	cmp	ip, #2
     bd8:	beq	c3c <read_att_array+0x40c>
     bdc:	cmp	ip, #3
     be0:	bne	c0c <read_att_array+0x3dc>
     be4:	lsl	r4, r4, #1
     be8:	b	c3c <read_att_array+0x40c>
     bec:	cmp	ip, #4
     bf0:	beq	c38 <read_att_array+0x408>
     bf4:	cmp	ip, #5
     bf8:	beq	c38 <read_att_array+0x408>
     bfc:	cmp	ip, #6
     c00:	bne	c0c <read_att_array+0x3dc>
     c04:	lsl	r4, r4, #3
     c08:	b	c3c <read_att_array+0x40c>
     c0c:	mov	r0, r6
     c10:	bl	0 <free>
     c14:	ldr	r0, [r9]
     c18:	bl	0 <coda_dynamic_type_delete>
     c1c:	movw	r0, #65236	; 0xfed4
     c20:	movt	r0, #65535	; 0xffff
     c24:	ldr	r1, [pc, #1532]	; 1228 <read_att_array+0x9f8>
     c28:	ldr	r2, [sp, #72]	; 0x48
     c2c:	bl	0 <coda_set_error>
     c30:	mvn	r0, #0
     c34:	b	11f8 <read_att_array+0x9c8>
     c38:	lsl	r4, r4, #2
     c3c:	cmp	r5, #0
     c40:	beq	100c <read_att_array+0x7dc>
     c44:	ldr	r2, [sp, #96]	; 0x60
     c48:	ldr	r1, [sp, #100]	; 0x64
     c4c:	eor	ip, r2, #1
     c50:	orr	r3, r1, ip
     c54:	cmp	r3, #0
     c58:	bne	ca0 <read_att_array+0x470>
     c5c:	ldr	r1, [pc, #1480]	; 122c <read_att_array+0x9fc>
     c60:	mov	r0, r6
     c64:	bl	0 <strcmp>
     c68:	cmp	r0, #0
     c6c:	beq	c98 <read_att_array+0x468>
     c70:	ldr	r1, [pc, #1468]	; 1234 <read_att_array+0xa04>
     c74:	mov	r0, r6
     c78:	bl	0 <strcmp>
     c7c:	cmp	r0, #0
     c80:	moveq	r1, #1
     c84:	movne	r1, #0
     c88:	cmp	r1, #0
     c8c:	movne	ip, #1
     c90:	moveq	ip, #0
     c94:	b	ca4 <read_att_array+0x474>
     c98:	mov	ip, #1
     c9c:	b	ca4 <read_att_array+0x474>
     ca0:	mov	ip, #0
     ca4:	cmp	ip, #0
     ca8:	beq	db0 <read_att_array+0x580>
     cac:	ldr	r3, [sp, #72]	; 0x48
     cb0:	cmp	r3, #5
     cb4:	beq	d38 <read_att_array+0x508>
     cb8:	ldr	r3, [sp, #72]	; 0x48
     cbc:	cmp	r3, #6
     cc0:	bne	db0 <read_att_array+0x580>
     cc4:	ldr	r0, [r7, #52]	; 0x34
     cc8:	ldr	r2, [r8]
     ccc:	ldr	r3, [r8, #4]
     cd0:	mov	fp, #0
     cd4:	mov	sl, #8
     cd8:	add	r1, sp, #104	; 0x68
     cdc:	str	r1, [sp, #8]
     ce0:	str	fp, [sp, #4]
     ce4:	str	sl, [sp]
     ce8:	bl	0 <read_bytes>
     cec:	cmp	r0, #0
     cf0:	bge	d0c <read_att_array+0x4dc>
     cf4:	mov	r0, r6
     cf8:	bl	0 <free>
     cfc:	ldr	r0, [r9]
     d00:	bl	0 <coda_dynamic_type_delete>
     d04:	mvn	r0, #0
     d08:	b	11f8 <read_att_array+0x9c8>
     d0c:	add	r0, sp, #104	; 0x68
     d10:	bl	310 <swap8>
     d14:	ldrb	r3, [r6]
     d18:	cmp	r3, #115	; 0x73
     d1c:	beq	d2c <read_att_array+0x4fc>
     d20:	vldr	d0, [sp, #104]	; 0x68
     d24:	vstr	d0, [r5, #16]
     d28:	b	db0 <read_att_array+0x580>
     d2c:	vldr	d7, [sp, #104]	; 0x68
     d30:	vstr	d7, [r5]
     d34:	b	db0 <read_att_array+0x580>
     d38:	ldr	r0, [r7, #52]	; 0x34
     d3c:	ldr	r2, [r8]
     d40:	ldr	r3, [r8, #4]
     d44:	mov	fp, #0
     d48:	mov	sl, #4
     d4c:	add	r1, sp, #76	; 0x4c
     d50:	str	r1, [sp, #8]
     d54:	str	fp, [sp, #4]
     d58:	str	sl, [sp]
     d5c:	bl	0 <read_bytes>
     d60:	cmp	r0, #0
     d64:	bge	d80 <read_att_array+0x550>
     d68:	mov	r0, r6
     d6c:	bl	0 <free>
     d70:	ldr	r0, [r9]
     d74:	bl	0 <coda_dynamic_type_delete>
     d78:	mvn	r0, #0
     d7c:	b	11f8 <read_att_array+0x9c8>
     d80:	add	r0, sp, #76	; 0x4c
     d84:	bl	27c <swap4>
     d88:	ldrb	r3, [r6]
     d8c:	cmp	r3, #115	; 0x73
     d90:	beq	da4 <read_att_array+0x574>
     d94:	vldr	s6, [sp, #76]	; 0x4c
     d98:	vcvt.f64.f32	d3, s6
     d9c:	vstr	d3, [r5, #16]
     da0:	b	db0 <read_att_array+0x580>
     da4:	vldr	s10, [sp, #76]	; 0x4c
     da8:	vcvt.f64.f32	d6, s10
     dac:	vstr	d6, [r5]
     db0:	ldr	r0, [sp, #96]	; 0x60
     db4:	ldr	r1, [sp, #100]	; 0x64
     db8:	eor	r3, r0, #1
     dbc:	orr	ip, r1, r3
     dc0:	cmp	ip, #0
     dc4:	bne	ddc <read_att_array+0x5ac>
     dc8:	ldr	r0, [sp, #72]	; 0x48
     dcc:	cmp	r0, #2
     dd0:	movne	r0, #1
     dd4:	moveq	r0, #0
     dd8:	b	de0 <read_att_array+0x5b0>
     ddc:	mov	r0, #0
     de0:	cmp	r0, #0
     de4:	beq	e5c <read_att_array+0x62c>
     de8:	ldr	r1, [pc, #1116]	; 124c <read_att_array+0xa1c>
     dec:	mov	r0, r6
     df0:	bl	0 <strcmp>
     df4:	cmp	r0, #0
     df8:	beq	e54 <read_att_array+0x624>
     dfc:	ldr	r1, [pc, #1076]	; 1238 <read_att_array+0xa08>
     e00:	mov	r0, r6
     e04:	bl	0 <strcmp>
     e08:	cmp	r0, #0
     e0c:	bne	e40 <read_att_array+0x610>
     e10:	vldr	d0, [r5, #24]
     e14:	bl	0 <coda_isNaN>
     e18:	cmp	r0, #0
     e1c:	movne	r1, #1
     e20:	moveq	r1, #0
     e24:	cmp	r1, #0
     e28:	movne	r0, #1
     e2c:	moveq	r0, #0
     e30:	cmp	r0, #0
     e34:	movne	r0, #1
     e38:	moveq	r0, #0
     e3c:	b	e60 <read_att_array+0x630>
     e40:	mov	r2, #0
     e44:	cmp	r2, #0
     e48:	movne	r0, #1
     e4c:	moveq	r0, #0
     e50:	b	e60 <read_att_array+0x630>
     e54:	mov	r0, #1
     e58:	b	e60 <read_att_array+0x630>
     e5c:	mov	r0, #0
     e60:	cmp	r0, #0
     e64:	beq	100c <read_att_array+0x7dc>
     e68:	ldr	r0, [r7, #52]	; 0x34
     e6c:	ldr	r2, [r8]
     e70:	ldr	r3, [r8, #4]
     e74:	asr	sl, r4, #31
     e78:	mov	ip, r4
     e7c:	add	fp, sp, #112	; 0x70
     e80:	str	fp, [sp, #8]
     e84:	str	sl, [sp, #4]
     e88:	str	ip, [sp]
     e8c:	bl	0 <read_bytes>
     e90:	cmp	r0, #0
     e94:	bge	eb0 <read_att_array+0x680>
     e98:	mov	r0, r6
     e9c:	bl	0 <free>
     ea0:	ldr	r0, [r9]
     ea4:	bl	0 <coda_dynamic_type_delete>
     ea8:	mvn	r0, #0
     eac:	b	11f8 <read_att_array+0x9c8>
     eb0:	ldr	r2, [sp, #72]	; 0x48
     eb4:	sub	r2, r2, #1
     eb8:	cmp	r2, #11
     ebc:	bcs	ff0 <read_att_array+0x7c0>
     ec0:	add	pc, pc, r2, lsl #2
     ec4:	nop	{0}
     ec8:	b	ef4 <read_att_array+0x6c4>
     ecc:	b	ff0 <read_att_array+0x7c0>
     ed0:	b	f08 <read_att_array+0x6d8>
     ed4:	b	f24 <read_att_array+0x6f4>
     ed8:	b	f40 <read_att_array+0x710>
     edc:	b	f58 <read_att_array+0x728>
     ee0:	b	f6c <read_att_array+0x73c>
     ee4:	b	f80 <read_att_array+0x750>
     ee8:	b	f9c <read_att_array+0x76c>
     eec:	b	fb8 <read_att_array+0x788>
     ef0:	b	fd4 <read_att_array+0x7a4>
     ef4:	ldrsb	r1, [sp, #112]	; 0x70
     ef8:	vmov	s2, r1
     efc:	vcvt.f64.s32	d1, s2
     f00:	vstr	d1, [r5, #24]
     f04:	b	100c <read_att_array+0x7dc>
     f08:	add	r0, sp, #112	; 0x70
     f0c:	bl	224 <swap2>
     f10:	ldrsh	ip, [sp, #112]	; 0x70
     f14:	vmov	s6, ip
     f18:	vcvt.f64.s32	d3, s6
     f1c:	vstr	d3, [r5, #24]
     f20:	b	100c <read_att_array+0x7dc>
     f24:	add	r0, sp, #112	; 0x70
     f28:	bl	27c <swap4>
     f2c:	ldr	r2, [sp, #112]	; 0x70
     f30:	vmov	s14, r2
     f34:	vcvt.f64.s32	d7, s14
     f38:	vstr	d7, [r5, #24]
     f3c:	b	100c <read_att_array+0x7dc>
     f40:	add	r0, sp, #112	; 0x70
     f44:	bl	27c <swap4>
     f48:	vldr	s6, [sp, #112]	; 0x70
     f4c:	vcvt.f64.f32	d4, s6
     f50:	vstr	d4, [r5, #24]
     f54:	b	100c <read_att_array+0x7dc>
     f58:	add	r0, sp, #112	; 0x70
     f5c:	bl	310 <swap8>
     f60:	vldr	d7, [sp, #112]	; 0x70
     f64:	vstr	d7, [r5, #24]
     f68:	b	100c <read_att_array+0x7dc>
     f6c:	ldrb	ip, [sp, #112]	; 0x70
     f70:	vmov	s8, ip
     f74:	vcvt.f64.u32	d4, s8
     f78:	vstr	d4, [r5, #24]
     f7c:	b	100c <read_att_array+0x7dc>
     f80:	add	r0, sp, #112	; 0x70
     f84:	bl	224 <swap2>
     f88:	ldrh	r0, [sp, #112]	; 0x70
     f8c:	vmov	s0, r0
     f90:	vcvt.f64.u32	d0, s0
     f94:	vstr	d0, [r5, #24]
     f98:	b	100c <read_att_array+0x7dc>
     f9c:	add	r0, sp, #112	; 0x70
     fa0:	bl	27c <swap4>
     fa4:	ldr	r1, [sp, #112]	; 0x70
     fa8:	vmov	s10, r1
     fac:	vcvt.f64.u32	d5, s10
     fb0:	vstr	d5, [r5, #24]
     fb4:	b	100c <read_att_array+0x7dc>
     fb8:	add	r0, sp, #112	; 0x70
     fbc:	bl	310 <swap8>
     fc0:	ldr	r0, [sp, #112]	; 0x70
     fc4:	ldr	r1, [sp, #116]	; 0x74
     fc8:	bl	0 <__compcert_i64_stod>
     fcc:	vstr	d0, [r5, #24]
     fd0:	b	100c <read_att_array+0x7dc>
     fd4:	add	r0, sp, #112	; 0x70
     fd8:	bl	310 <swap8>
     fdc:	ldr	r0, [sp, #112]	; 0x70
     fe0:	ldr	r1, [sp, #116]	; 0x74
     fe4:	bl	0 <__compcert_i64_utod>
     fe8:	vstr	d0, [r5, #24]
     fec:	b	100c <read_att_array+0x7dc>
     ff0:	ldr	r0, [pc, #588]	; 1244 <read_att_array+0xa14>
     ff4:	ldr	r1, [pc, #588]	; 1248 <read_att_array+0xa18>
     ff8:	movw	r2, #417	; 0x1a1
     ffc:	ldr	r3, [pc, #556]	; 1230 <read_att_array+0xa00>
    1000:	bl	0 <__assert_fail>
    1004:	mov	r0, #1
    1008:	bl	0 <exit>
    100c:	ldr	r0, [sp, #72]	; 0x48
    1010:	cmp	r0, #2
    1014:	beq	1048 <read_att_array+0x818>
    1018:	ldr	r0, [sp, #72]	; 0x48
    101c:	ldr	r2, [r8]
    1020:	ldr	r3, [r8, #4]
    1024:	mov	sl, #0
    1028:	mov	fp, #0
    102c:	mov	ip, #1
    1030:	str	fp, [sp, #12]
    1034:	str	ip, [sp, #8]
    1038:	str	sl, [sp]
    103c:	bl	0 <coda_netcdf_basic_type_new>
    1040:	mov	sl, r0
    1044:	b	1074 <read_att_array+0x844>
    1048:	ldr	r0, [sp, #72]	; 0x48
    104c:	ldr	r2, [r8]
    1050:	ldr	r3, [r8, #4]
    1054:	mov	r1, #0
    1058:	ldr	sl, [sp, #96]	; 0x60
    105c:	ldr	fp, [sp, #100]	; 0x64
    1060:	str	fp, [sp, #12]
    1064:	str	sl, [sp, #8]
    1068:	str	r1, [sp]
    106c:	bl	0 <coda_netcdf_basic_type_new>
    1070:	mov	sl, r0
    1074:	cmp	sl, #0
    1078:	bne	1094 <read_att_array+0x864>
    107c:	mov	r0, r6
    1080:	bl	0 <free>
    1084:	ldr	r0, [r9]
    1088:	bl	0 <coda_dynamic_type_delete>
    108c:	mvn	r0, #0
    1090:	b	11f8 <read_att_array+0x9c8>
    1094:	ldr	r2, [r8]
    1098:	ldr	r3, [r8, #4]
    109c:	asr	r1, r4, #31
    10a0:	mov	r0, r4
    10a4:	adds	lr, r2, r0
    10a8:	adc	ip, r3, r1
    10ac:	mov	r3, lr
    10b0:	str	r3, [r8]
    10b4:	str	ip, [r8, #4]
    10b8:	and	r3, r4, #3
    10bc:	cmp	r3, #0
    10c0:	beq	10e8 <read_att_array+0x8b8>
    10c4:	ldr	r2, [r8]
    10c8:	ldr	r1, [r8, #4]
    10cc:	and	ip, r4, #3
    10d0:	rsb	r0, ip, #4
    10d4:	asr	r3, r0, #31
    10d8:	adds	r0, r2, r0
    10dc:	adc	r3, r1, r3
    10e0:	str	r0, [r8]
    10e4:	str	r3, [r8, #4]
    10e8:	ldr	r0, [sp, #72]	; 0x48
    10ec:	cmp	r0, #2
    10f0:	beq	1114 <read_att_array+0x8e4>
    10f4:	ldr	ip, [sp, #96]	; 0x60
    10f8:	ldr	r2, [sp, #100]	; 0x64
    10fc:	eor	r0, ip, #1
    1100:	orr	ip, r2, r0
    1104:	cmp	ip, #0
    1108:	moveq	r2, #1
    110c:	movne	r2, #0
    1110:	b	1118 <read_att_array+0x8e8>
    1114:	mov	r2, #1
    1118:	cmp	r2, #0
    111c:	bne	11a0 <read_att_array+0x970>
    1120:	ldr	r2, [sp, #96]	; 0x60
    1124:	str	r2, [sp, #64]	; 0x40
    1128:	mov	r0, #1
    112c:	add	r1, sp, #64	; 0x40
    1130:	mov	r2, sl
    1134:	bl	0 <coda_netcdf_array_new>
    1138:	mov	r4, r0
    113c:	cmp	r4, #0
    1140:	bne	1164 <read_att_array+0x934>
    1144:	mov	r0, sl
    1148:	bl	0 <coda_dynamic_type_delete>
    114c:	mov	r0, r6
    1150:	bl	0 <free>
    1154:	ldr	r0, [r9]
    1158:	bl	0 <coda_dynamic_type_delete>
    115c:	mvn	r0, #0
    1160:	b	11f8 <read_att_array+0x9c8>
    1164:	ldr	r0, [r9]
    1168:	mov	r3, #1
    116c:	mov	r2, r4
    1170:	mov	r1, r6
    1174:	bl	0 <coda_mem_record_add_field>
    1178:	cmp	r0, #0
    117c:	beq	11dc <read_att_array+0x9ac>
    1180:	mov	r0, r4
    1184:	bl	0 <coda_dynamic_type_delete>
    1188:	mov	r0, r6
    118c:	bl	0 <free>
    1190:	ldr	r0, [r9]
    1194:	bl	0 <coda_dynamic_type_delete>
    1198:	mvn	r0, #0
    119c:	b	11f8 <read_att_array+0x9c8>
    11a0:	ldr	r0, [r9]
    11a4:	mov	r3, #1
    11a8:	mov	r2, sl
    11ac:	mov	r1, r6
    11b0:	bl	0 <coda_mem_record_add_field>
    11b4:	cmp	r0, #0
    11b8:	beq	11dc <read_att_array+0x9ac>
    11bc:	mov	r0, sl
    11c0:	bl	0 <coda_dynamic_type_delete>
    11c4:	mov	r0, r6
    11c8:	bl	0 <free>
    11cc:	ldr	r0, [r9]
    11d0:	bl	0 <coda_dynamic_type_delete>
    11d4:	mvn	r0, #0
    11d8:	b	11f8 <read_att_array+0x9c8>
    11dc:	mov	r0, r6
    11e0:	bl	0 <free>
    11e4:	ldr	r1, [sp, #24]
    11e8:	add	r0, r1, #1
    11ec:	str	r0, [sp, #24]
    11f0:	b	9b0 <read_att_array+0x180>
    11f4:	mov	r0, #0
    11f8:	ldr	r4, [sp, #28]
    11fc:	ldr	r5, [sp, #32]
    1200:	ldr	r6, [sp, #36]	; 0x24
    1204:	ldr	r7, [sp, #40]	; 0x28
    1208:	ldr	r8, [sp, #44]	; 0x2c
    120c:	ldr	r9, [sp, #48]	; 0x30
    1210:	ldr	sl, [sp, #52]	; 0x34
    1214:	ldr	fp, [sp, #56]	; 0x38
    1218:	ldr	lr, [sp, #20]
    121c:	add	sp, sp, #120	; 0x78
    1220:	bx	lr
    1224:	.word	0x000002ef
    1228:	.word	0x0000021d
    122c:	.word	0x0000024c
    1230:	.word	0x0000047f
    1234:	.word	0x000003d2
    1238:	.word	0x00000126
    123c:	.word	0x000000ed
    1240:	.word	0x000002aa
    1244:	.word	0x000002ed
    1248:	.word	0x00000419
    124c:	.word	0x00000259

00001250 <read_var_array>:
    1250:	mov	ip, sp
    1254:	sub	sp, sp, #184	; 0xb8
    1258:	str	ip, [sp, #16]
    125c:	str	lr, [sp, #20]
    1260:	str	r4, [sp, #56]	; 0x38
    1264:	str	r5, [sp, #60]	; 0x3c
    1268:	str	r6, [sp, #64]	; 0x40
    126c:	str	r7, [sp, #68]	; 0x44
    1270:	str	r8, [sp, #72]	; 0x48
    1274:	str	r9, [sp, #76]	; 0x4c
    1278:	str	sl, [sp, #80]	; 0x50
    127c:	str	fp, [sp, #84]	; 0x54
    1280:	ldr	ip, [ip, #8]
    1284:	str	ip, [sp, #52]	; 0x34
    1288:	ldr	ip, [sp, #16]
    128c:	ldr	ip, [ip, #4]
    1290:	str	ip, [sp, #32]
    1294:	ldr	ip, [sp, #16]
    1298:	ldr	ip, [ip]
    129c:	str	ip, [sp, #40]	; 0x28
    12a0:	str	r3, [sp, #28]
    12a4:	str	r2, [sp, #44]	; 0x2c
    12a8:	mov	r9, r1
    12ac:	mov	r8, r0
    12b0:	ldr	r0, [r8, #52]	; 0x34
    12b4:	ldr	r2, [r9]
    12b8:	ldr	r3, [r9, #4]
    12bc:	mov	r1, #0
    12c0:	mov	r5, #4
    12c4:	add	r4, sp, #92	; 0x5c
    12c8:	str	r4, [sp, #8]
    12cc:	str	r1, [sp, #4]
    12d0:	str	r5, [sp]
    12d4:	bl	0 <read_bytes>
    12d8:	cmp	r0, #0
    12dc:	bge	1308 <read_var_array+0xb8>
    12e0:	bl	0 <__errno_location>
    12e4:	ldr	r0, [r0]
    12e8:	bl	0 <strerror>
    12ec:	mvn	ip, #21
    12f0:	ldr	r1, [pc, #1824]	; 1a18 <read_var_array+0x7c8>
    12f4:	mov	r2, r0
    12f8:	mov	r0, ip
    12fc:	bl	0 <coda_set_error>
    1300:	mvn	r0, #0
    1304:	b	1ca0 <read_var_array+0xa50>
    1308:	add	r0, sp, #92	; 0x5c
    130c:	bl	27c <swap4>
    1310:	ldr	r3, [r9]
    1314:	ldr	r0, [r9, #4]
    1318:	mov	r2, #0
    131c:	mov	r1, #4
    1320:	adds	r1, r3, r1
    1324:	adc	r2, r0, r2
    1328:	str	r1, [r9]
    132c:	str	r2, [r9, #4]
    1330:	add	r2, sp, #120	; 0x78
    1334:	mov	r1, r9
    1338:	mov	r0, r8
    133c:	bl	41c <read_length_value>
    1340:	cmp	r0, #0
    1344:	beq	1350 <read_var_array+0x100>
    1348:	mvn	r0, #0
    134c:	b	1ca0 <read_var_array+0xa50>
    1350:	ldr	ip, [sp, #92]	; 0x5c
    1354:	cmp	ip, #0
    1358:	bne	1390 <read_var_array+0x140>
    135c:	ldr	r1, [sp, #120]	; 0x78
    1360:	ldr	r0, [sp, #124]	; 0x7c
    1364:	orr	r0, r0, r1
    1368:	cmp	r0, #0
    136c:	beq	1388 <read_var_array+0x138>
    1370:	movw	r0, #65236	; 0xfed4
    1374:	movt	r0, #65535	; 0xffff
    1378:	ldr	r1, [pc, #1684]	; 1a14 <read_var_array+0x7c4>
    137c:	bl	0 <coda_set_error>
    1380:	mvn	r0, #0
    1384:	b	1ca0 <read_var_array+0xa50>
    1388:	mov	r0, #0
    138c:	b	1ca0 <read_var_array+0xa50>
    1390:	ldr	r3, [sp, #92]	; 0x5c
    1394:	cmp	r3, #11
    1398:	beq	13b4 <read_var_array+0x164>
    139c:	movw	r0, #65236	; 0xfed4
    13a0:	movt	r0, #65535	; 0xffff
    13a4:	ldr	r1, [pc, #1648]	; 1a1c <read_var_array+0x7cc>
    13a8:	bl	0 <coda_set_error>
    13ac:	mvn	r0, #0
    13b0:	b	1ca0 <read_var_array+0xa50>
    13b4:	mov	r3, #0
    13b8:	str	r3, [sp, #48]	; 0x30
    13bc:	ldr	r3, [sp, #48]	; 0x30
    13c0:	asr	r2, r3, #31
    13c4:	ldr	r1, [sp, #120]	; 0x78
    13c8:	ldr	r0, [sp, #124]	; 0x7c
    13cc:	cmp	r2, r0
    13d0:	bne	13e0 <read_var_array+0x190>
    13d4:	cmp	r3, r1
    13d8:	bcc	13e8 <read_var_array+0x198>
    13dc:	b	1c9c <read_var_array+0xa4c>
    13e0:	cmp	r2, r0
    13e4:	bge	1c9c <read_var_array+0xa4c>
    13e8:	mov	r2, #0
    13ec:	str	r2, [sp, #96]	; 0x60
    13f0:	mov	r4, #0
    13f4:	mov	ip, #0
    13f8:	str	ip, [sp, #36]	; 0x24
    13fc:	mov	r7, #0
    1400:	add	r2, sp, #136	; 0x88
    1404:	mov	r1, r9
    1408:	mov	r0, r8
    140c:	bl	41c <read_length_value>
    1410:	cmp	r0, #0
    1414:	beq	1420 <read_var_array+0x1d0>
    1418:	mvn	r0, #0
    141c:	b	1ca0 <read_var_array+0xa50>
    1420:	ldr	r2, [sp, #136]	; 0x88
    1424:	ldr	r3, [sp, #140]	; 0x8c
    1428:	mov	r0, #0
    142c:	mov	r1, #1
    1430:	adds	lr, r2, r1
    1434:	adc	r3, r3, r0
    1438:	mov	r0, lr
    143c:	bl	0 <malloc>
    1440:	str	r0, [sp, #24]
    1444:	ldr	r2, [sp, #24]
    1448:	cmp	r2, #0
    144c:	bne	148c <read_var_array+0x23c>
    1450:	mvn	r0, #0
    1454:	ldr	r1, [pc, #1452]	; 1a08 <read_var_array+0x7b8>
    1458:	ldr	r3, [sp, #136]	; 0x88
    145c:	ldr	r4, [sp, #140]	; 0x8c
    1460:	mov	r2, #0
    1464:	mov	ip, #1
    1468:	adds	lr, r3, ip
    146c:	adc	r3, r4, r2
    1470:	mov	r2, lr
    1474:	ldr	r3, [pc, #1428]	; 1a10 <read_var_array+0x7c0>
    1478:	movw	r4, #546	; 0x222
    147c:	str	r4, [sp]
    1480:	bl	0 <coda_set_error>
    1484:	mvn	r0, #0
    1488:	b	1ca0 <read_var_array+0xa50>
    148c:	ldr	r2, [sp, #136]	; 0x88
    1490:	mov	r3, #0
    1494:	ldr	ip, [sp, #24]
    1498:	strb	r3, [ip, r2]
    149c:	ldr	r0, [r8, #52]	; 0x34
    14a0:	ldr	r2, [r9]
    14a4:	ldr	r3, [r9, #4]
    14a8:	ldr	r1, [sp, #136]	; 0x88
    14ac:	ldr	r5, [sp, #140]	; 0x8c
    14b0:	ldr	ip, [sp, #24]
    14b4:	str	ip, [sp, #8]
    14b8:	str	r5, [sp, #4]
    14bc:	str	r1, [sp]
    14c0:	bl	0 <read_bytes>
    14c4:	cmp	r0, #0
    14c8:	bge	14dc <read_var_array+0x28c>
    14cc:	ldr	r0, [sp, #24]
    14d0:	bl	0 <free>
    14d4:	mvn	r0, #0
    14d8:	b	1ca0 <read_var_array+0xa50>
    14dc:	ldr	r2, [r9]
    14e0:	ldr	r3, [r9, #4]
    14e4:	ldr	ip, [sp, #136]	; 0x88
    14e8:	ldr	r0, [sp, #140]	; 0x8c
    14ec:	adds	r1, r2, ip
    14f0:	adc	r2, r3, r0
    14f4:	str	r1, [r9]
    14f8:	str	r2, [r9, #4]
    14fc:	ldr	r0, [sp, #136]	; 0x88
    1500:	mov	r3, #0
    1504:	and	r2, r0, #3
    1508:	orr	r1, r3, r2
    150c:	cmp	r1, #0
    1510:	beq	1548 <read_var_array+0x2f8>
    1514:	ldr	r1, [r9]
    1518:	ldr	r2, [r9, #4]
    151c:	mov	ip, #0
    1520:	mov	r3, #4
    1524:	ldr	r0, [sp, #136]	; 0x88
    1528:	mov	r5, #0
    152c:	and	r0, r0, #3
    1530:	subs	r3, r3, r0
    1534:	sbc	ip, ip, r5
    1538:	adds	r0, r1, r3
    153c:	adc	r1, r2, ip
    1540:	str	r0, [r9]
    1544:	str	r1, [r9, #4]
    1548:	add	r2, sp, #144	; 0x90
    154c:	mov	r1, r9
    1550:	mov	r0, r8
    1554:	bl	41c <read_length_value>
    1558:	cmp	r0, #0
    155c:	beq	1568 <read_var_array+0x318>
    1560:	mvn	r0, #0
    1564:	b	1ca0 <read_var_array+0xa50>
    1568:	mov	r6, #0
    156c:	mov	r5, #0
    1570:	mov	ip, r5
    1574:	asr	r3, ip, #31
    1578:	ldr	r1, [sp, #144]	; 0x90
    157c:	ldr	r2, [sp, #148]	; 0x94
    1580:	cmp	r3, r2
    1584:	bne	1594 <read_var_array+0x344>
    1588:	cmp	ip, r1
    158c:	bcc	159c <read_var_array+0x34c>
    1590:	b	1708 <read_var_array+0x4b8>
    1594:	cmp	r3, r2
    1598:	bge	1708 <read_var_array+0x4b8>
    159c:	add	r2, sp, #112	; 0x70
    15a0:	mov	r1, r9
    15a4:	mov	r0, r8
    15a8:	bl	41c <read_length_value>
    15ac:	cmp	r0, #0
    15b0:	beq	15bc <read_var_array+0x36c>
    15b4:	mvn	r0, #0
    15b8:	b	1ca0 <read_var_array+0xa50>
    15bc:	ldr	ip, [sp, #116]	; 0x74
    15c0:	cmp	ip, #0
    15c4:	blt	1604 <read_var_array+0x3b4>
    15c8:	ldr	r2, [sp, #112]	; 0x70
    15cc:	ldr	r3, [sp, #116]	; 0x74
    15d0:	ldr	ip, [sp, #28]
    15d4:	cmp	r3, ip
    15d8:	bne	15f0 <read_var_array+0x3a0>
    15dc:	ldr	r0, [sp, #44]	; 0x2c
    15e0:	cmp	r2, r0
    15e4:	movcs	r1, #1
    15e8:	movcc	r1, #0
    15ec:	b	1608 <read_var_array+0x3b8>
    15f0:	ldr	ip, [sp, #28]
    15f4:	cmp	r3, ip
    15f8:	movgt	r1, #1
    15fc:	movle	r1, #0
    1600:	b	1608 <read_var_array+0x3b8>
    1604:	mov	r1, #1
    1608:	cmp	r1, #0
    160c:	beq	1634 <read_var_array+0x3e4>
    1610:	ldr	r0, [sp, #24]
    1614:	bl	0 <free>
    1618:	movw	r0, #65236	; 0xfed4
    161c:	movt	r0, #65535	; 0xffff
    1620:	ldr	r1, [pc, #996]	; 1a0c <read_var_array+0x7bc>
    1624:	ldr	r2, [sp, #24]
    1628:	bl	0 <coda_set_error>
    162c:	mvn	r0, #0
    1630:	b	1ca0 <read_var_array+0xa50>
    1634:	asr	r0, r5, #31
    1638:	mov	sl, r5
    163c:	ldr	r3, [sp, #144]	; 0x90
    1640:	ldr	ip, [sp, #148]	; 0x94
    1644:	mov	r2, #0
    1648:	mov	r1, #1
    164c:	subs	lr, r3, r1
    1650:	sbc	r1, ip, r2
    1654:	mov	ip, lr
    1658:	eor	r1, r0, r1
    165c:	eor	r0, sl, ip
    1660:	orr	ip, r1, r0
    1664:	cmp	ip, #0
    1668:	beq	16b4 <read_var_array+0x464>
    166c:	cmp	r5, #8
    1670:	blt	1694 <read_var_array+0x444>
    1674:	ldr	r0, [sp, #180]	; 0xb4
    1678:	ldr	ip, [sp, #112]	; 0x70
    167c:	ldr	r1, [sp, #40]	; 0x28
    1680:	add	r1, r1, ip, lsl #3
    1684:	ldr	r2, [r1]
    1688:	mul	ip, r0, r2
    168c:	str	ip, [sp, #180]	; 0xb4
    1690:	b	16cc <read_var_array+0x47c>
    1694:	add	r3, sp, #152	; 0x98
    1698:	ldr	r2, [sp, #112]	; 0x70
    169c:	ldr	ip, [sp, #40]	; 0x28
    16a0:	add	r0, ip, r2, lsl #3
    16a4:	ldr	r0, [r0]
    16a8:	str	r0, [r3, r5, lsl #2]
    16ac:	add	r6, r6, #1
    16b0:	b	16cc <read_var_array+0x47c>
    16b4:	ldr	r0, [sp, #112]	; 0x70
    16b8:	ldr	r1, [sp, #40]	; 0x28
    16bc:	add	ip, r1, r0, lsl #3
    16c0:	ldr	r4, [ip]
    16c4:	mov	r1, #1
    16c8:	str	r1, [sp, #36]	; 0x24
    16cc:	cmp	r5, #0
    16d0:	bne	1700 <read_var_array+0x4b0>
    16d4:	ldr	r2, [sp, #112]	; 0x70
    16d8:	ldr	r3, [sp, #116]	; 0x74
    16dc:	ldr	r0, [sp, #32]
    16e0:	asr	r0, r0, #31
    16e4:	ldr	r1, [sp, #32]
    16e8:	eor	r3, r3, r0
    16ec:	eor	r1, r2, r1
    16f0:	orr	r2, r3, r1
    16f4:	cmp	r2, #0
    16f8:	moveq	r7, #1
    16fc:	movne	r7, #0
    1700:	add	r5, r5, #1
    1704:	b	1570 <read_var_array+0x320>
    1708:	bl	0 <coda_NaN>
    170c:	vmov.f64	d3, d0
    1710:	vmov.f64	d0, #112	; 0x3f800000  1.0
    1714:	vmov.f64	d1, #112	; 0x3f800000  1.0
    1718:	vldr	d2, [pc, #768]	; 1a20 <read_var_array+0x7d0>
    171c:	bl	0 <coda_conversion_new>
    1720:	mov	r5, r0
    1724:	cmp	r5, #0
    1728:	bne	173c <read_var_array+0x4ec>
    172c:	ldr	r0, [sp, #24]
    1730:	bl	0 <free>
    1734:	mvn	r0, #0
    1738:	b	1ca0 <read_var_array+0xa50>
    173c:	add	r2, sp, #96	; 0x60
    1740:	mov	r3, r5
    1744:	mov	r1, r9
    1748:	mov	r0, r8
    174c:	bl	830 <read_att_array>
    1750:	cmp	r0, #0
    1754:	beq	1770 <read_var_array+0x520>
    1758:	mov	r0, r5
    175c:	bl	0 <coda_conversion_delete>
    1760:	ldr	r0, [sp, #24]
    1764:	bl	0 <free>
    1768:	mvn	r0, #0
    176c:	b	1ca0 <read_var_array+0xa50>
    1770:	ldr	r0, [r8, #52]	; 0x34
    1774:	ldr	r2, [r9]
    1778:	ldr	r3, [r9, #4]
    177c:	mov	r1, #0
    1780:	mov	fp, #4
    1784:	add	sl, sp, #100	; 0x64
    1788:	str	sl, [sp, #8]
    178c:	str	r1, [sp, #4]
    1790:	str	fp, [sp]
    1794:	bl	0 <read_bytes>
    1798:	cmp	r0, #0
    179c:	bge	17c0 <read_var_array+0x570>
    17a0:	ldr	r0, [sp, #96]	; 0x60
    17a4:	bl	0 <coda_dynamic_type_delete>
    17a8:	mov	r0, r5
    17ac:	bl	0 <coda_conversion_delete>
    17b0:	ldr	r0, [sp, #24]
    17b4:	bl	0 <free>
    17b8:	mvn	r0, #0
    17bc:	b	1ca0 <read_var_array+0xa50>
    17c0:	add	r0, sp, #100	; 0x64
    17c4:	bl	27c <swap4>
    17c8:	ldr	r0, [r9]
    17cc:	ldr	r1, [r9, #4]
    17d0:	mov	r2, #0
    17d4:	mov	r3, #4
    17d8:	adds	r3, r0, r3
    17dc:	adc	ip, r1, r2
    17e0:	str	r3, [r9]
    17e4:	str	ip, [r9, #4]
    17e8:	vldr	d2, [r5]
    17ec:	vmov.f64	d6, #112	; 0x3f800000  1.0
    17f0:	vcmp.f64	d2, d6
    17f4:	vmrs	APSR_nzcv, fpscr
    17f8:	bne	1818 <read_var_array+0x5c8>
    17fc:	vldr	d5, [r5, #16]
    1800:	vldr	d4, [pc, #536]	; 1a20 <read_var_array+0x7d0>
    1804:	vcmp.f64	d5, d4
    1808:	vmrs	APSR_nzcv, fpscr
    180c:	moveq	r1, #1
    1810:	movne	r1, #0
    1814:	b	181c <read_var_array+0x5cc>
    1818:	mov	r1, #0
    181c:	cmp	r1, #0
    1820:	beq	1880 <read_var_array+0x630>
    1824:	ldr	r2, [sp, #100]	; 0x64
    1828:	cmp	r2, #5
    182c:	beq	1844 <read_var_array+0x5f4>
    1830:	ldr	r0, [sp, #100]	; 0x64
    1834:	cmp	r0, #6
    1838:	movne	r1, #1
    183c:	moveq	r1, #0
    1840:	b	1848 <read_var_array+0x5f8>
    1844:	mov	r1, #0
    1848:	cmp	r1, #0
    184c:	bne	1868 <read_var_array+0x618>
    1850:	vldr	d0, [r5, #24]
    1854:	bl	0 <coda_isNaN>
    1858:	cmp	r0, #0
    185c:	movne	ip, #1
    1860:	moveq	ip, #0
    1864:	b	186c <read_var_array+0x61c>
    1868:	mov	ip, #1
    186c:	cmp	ip, #0
    1870:	beq	1880 <read_var_array+0x630>
    1874:	mov	r0, r5
    1878:	bl	0 <coda_conversion_delete>
    187c:	mov	r5, #0
    1880:	add	r2, sp, #104	; 0x68
    1884:	mov	r1, r9
    1888:	mov	r0, r8
    188c:	bl	41c <read_length_value>
    1890:	cmp	r0, #0
    1894:	beq	18b8 <read_var_array+0x668>
    1898:	ldr	r0, [sp, #96]	; 0x60
    189c:	bl	0 <coda_dynamic_type_delete>
    18a0:	mov	r0, r5
    18a4:	bl	0 <coda_conversion_delete>
    18a8:	ldr	r0, [sp, #24]
    18ac:	bl	0 <free>
    18b0:	mvn	r0, #0
    18b4:	b	1ca0 <read_var_array+0xa50>
    18b8:	cmp	r7, #0
    18bc:	beq	18d0 <read_var_array+0x680>
    18c0:	ldr	r0, [r8, #60]	; 0x3c
    18c4:	ldr	r1, [sp, #104]	; 0x68
    18c8:	add	r3, r0, r1
    18cc:	str	r3, [r8, #60]	; 0x3c
    18d0:	ldr	r0, [r8, #56]	; 0x38
    18d4:	cmp	r0, #1
    18d8:	bne	1968 <read_var_array+0x718>
    18dc:	ldr	r0, [r8, #52]	; 0x34
    18e0:	ldr	r2, [r9]
    18e4:	ldr	r3, [r9, #4]
    18e8:	mov	ip, #0
    18ec:	mov	sl, #4
    18f0:	add	fp, sp, #88	; 0x58
    18f4:	str	fp, [sp, #8]
    18f8:	str	ip, [sp, #4]
    18fc:	str	sl, [sp]
    1900:	bl	0 <read_bytes>
    1904:	cmp	r0, #0
    1908:	bge	192c <read_var_array+0x6dc>
    190c:	ldr	r0, [sp, #96]	; 0x60
    1910:	bl	0 <coda_dynamic_type_delete>
    1914:	mov	r0, r5
    1918:	bl	0 <coda_conversion_delete>
    191c:	ldr	r0, [sp, #24]
    1920:	bl	0 <free>
    1924:	mvn	r0, #0
    1928:	b	1ca0 <read_var_array+0xa50>
    192c:	add	r0, sp, #88	; 0x58
    1930:	bl	27c <swap4>
    1934:	ldr	r2, [sp, #88]	; 0x58
    1938:	asr	r1, r2, #31
    193c:	str	r2, [sp, #128]	; 0x80
    1940:	str	r1, [sp, #132]	; 0x84
    1944:	ldr	r1, [r9]
    1948:	ldr	r2, [r9, #4]
    194c:	mov	r0, #0
    1950:	mov	ip, #4
    1954:	adds	r3, r1, ip
    1958:	adc	ip, r2, r0
    195c:	str	r3, [r9]
    1960:	str	ip, [r9, #4]
    1964:	b	19e0 <read_var_array+0x790>
    1968:	ldr	r0, [r8, #52]	; 0x34
    196c:	ldr	r2, [r9]
    1970:	ldr	r3, [r9, #4]
    1974:	mov	fp, #0
    1978:	mov	sl, #8
    197c:	add	r1, sp, #128	; 0x80
    1980:	str	r1, [sp, #8]
    1984:	str	fp, [sp, #4]
    1988:	str	sl, [sp]
    198c:	bl	0 <read_bytes>
    1990:	cmp	r0, #0
    1994:	bge	19b8 <read_var_array+0x768>
    1998:	ldr	r0, [sp, #96]	; 0x60
    199c:	bl	0 <coda_dynamic_type_delete>
    19a0:	mov	r0, r5
    19a4:	bl	0 <coda_conversion_delete>
    19a8:	ldr	r0, [sp, #24]
    19ac:	bl	0 <free>
    19b0:	mvn	r0, #0
    19b4:	b	1ca0 <read_var_array+0xa50>
    19b8:	add	r0, sp, #128	; 0x80
    19bc:	bl	310 <swap8>
    19c0:	ldr	r3, [r9]
    19c4:	ldr	ip, [r9, #4]
    19c8:	mov	r0, #0
    19cc:	mov	r1, #8
    19d0:	adds	r3, r3, r1
    19d4:	adc	ip, ip, r0
    19d8:	str	r3, [r9]
    19dc:	str	ip, [r9, #4]
    19e0:	ldr	r0, [sp, #36]	; 0x24
    19e4:	cmp	r0, #0
    19e8:	beq	1ac8 <read_var_array+0x878>
    19ec:	ldr	r1, [sp, #100]	; 0x64
    19f0:	cmp	r1, #2
    19f4:	bne	1a44 <read_var_array+0x7f4>
    19f8:	cmp	r6, #0
    19fc:	beq	1a28 <read_var_array+0x7d8>
    1a00:	mov	r3, #0
    1a04:	b	1a34 <read_var_array+0x7e4>
    1a08:	.word	0x000002ef
    1a0c:	.word	0x000001e9
    1a10:	.word	0x00000419
    1a14:	.word	0x00000267
    1a18:	.word	0x00000131
    1a1c:	.word	0x00000039
	...
    1a28:	cmp	r7, #0
    1a2c:	movne	r3, #1
    1a30:	moveq	r3, #0
    1a34:	cmp	r3, #0
    1a38:	moveq	r2, #1
    1a3c:	movne	r2, #0
    1a40:	b	1a48 <read_var_array+0x7f8>
    1a44:	mov	r2, #0
    1a48:	cmp	r2, #0
    1a4c:	bne	1aa0 <read_var_array+0x850>
    1a50:	ldr	r0, [sp, #100]	; 0x64
    1a54:	ldr	r2, [sp, #128]	; 0x80
    1a58:	ldr	r3, [sp, #132]	; 0x84
    1a5c:	mov	sl, #0
    1a60:	mov	ip, #1
    1a64:	str	sl, [sp, #12]
    1a68:	str	ip, [sp, #8]
    1a6c:	str	r7, [sp]
    1a70:	bl	0 <coda_netcdf_basic_type_new>
    1a74:	mov	r7, r0
    1a78:	cmp	r6, #8
    1a7c:	blt	1a90 <read_var_array+0x840>
    1a80:	ldr	r0, [sp, #180]	; 0xb4
    1a84:	mul	r1, r0, r4
    1a88:	str	r1, [sp, #180]	; 0xb4
    1a8c:	b	1af4 <read_var_array+0x8a4>
    1a90:	add	ip, sp, #152	; 0x98
    1a94:	str	r4, [ip, r6, lsl #2]
    1a98:	add	r6, r6, #1
    1a9c:	b	1af4 <read_var_array+0x8a4>
    1aa0:	ldr	r0, [sp, #100]	; 0x64
    1aa4:	ldr	r2, [sp, #128]	; 0x80
    1aa8:	ldr	r3, [sp, #132]	; 0x84
    1aac:	asr	r1, r4, #31
    1ab0:	str	r1, [sp, #12]
    1ab4:	str	r4, [sp, #8]
    1ab8:	str	r7, [sp]
    1abc:	bl	0 <coda_netcdf_basic_type_new>
    1ac0:	mov	r7, r0
    1ac4:	b	1af4 <read_var_array+0x8a4>
    1ac8:	ldr	r0, [sp, #100]	; 0x64
    1acc:	ldr	r2, [sp, #128]	; 0x80
    1ad0:	ldr	r3, [sp, #132]	; 0x84
    1ad4:	mov	r1, #0
    1ad8:	mov	r7, #0
    1adc:	mov	r4, #1
    1ae0:	str	r7, [sp, #12]
    1ae4:	str	r4, [sp, #8]
    1ae8:	str	r1, [sp]
    1aec:	bl	0 <coda_netcdf_basic_type_new>
    1af0:	mov	r7, r0
    1af4:	cmp	r7, #0
    1af8:	bne	1b1c <read_var_array+0x8cc>
    1afc:	ldr	r0, [sp, #96]	; 0x60
    1b00:	bl	0 <coda_dynamic_type_delete>
    1b04:	mov	r0, r5
    1b08:	bl	0 <coda_conversion_delete>
    1b0c:	ldr	r0, [sp, #24]
    1b10:	bl	0 <free>
    1b14:	mvn	r0, #0
    1b18:	b	1ca0 <read_var_array+0xa50>
    1b1c:	cmp	r5, #0
    1b20:	beq	1b58 <read_var_array+0x908>
    1b24:	mov	r1, r5
    1b28:	mov	r0, r7
    1b2c:	bl	0 <coda_netcdf_basic_type_set_conversion>
    1b30:	cmp	r0, #0
    1b34:	beq	1b58 <read_var_array+0x908>
    1b38:	ldr	r0, [sp, #96]	; 0x60
    1b3c:	bl	0 <coda_dynamic_type_delete>
    1b40:	mov	r0, r5
    1b44:	bl	0 <coda_conversion_delete>
    1b48:	ldr	r0, [sp, #24]
    1b4c:	bl	0 <free>
    1b50:	mvn	r0, #0
    1b54:	b	1ca0 <read_var_array+0xa50>
    1b58:	cmp	r6, #0
    1b5c:	beq	1c10 <read_var_array+0x9c0>
    1b60:	add	r1, sp, #152	; 0x98
    1b64:	mov	r2, r7
    1b68:	mov	r0, r6
    1b6c:	bl	0 <coda_netcdf_array_new>
    1b70:	mov	r4, r0
    1b74:	cmp	r4, #0
    1b78:	bne	1b9c <read_var_array+0x94c>
    1b7c:	mov	r0, r7
    1b80:	bl	0 <coda_dynamic_type_delete>
    1b84:	ldr	r0, [sp, #96]	; 0x60
    1b88:	bl	0 <coda_dynamic_type_delete>
    1b8c:	ldr	r0, [sp, #24]
    1b90:	bl	0 <free>
    1b94:	mvn	r0, #0
    1b98:	b	1ca0 <read_var_array+0xa50>
    1b9c:	ldr	r3, [sp, #96]	; 0x60
    1ba0:	cmp	r3, #0
    1ba4:	beq	1bdc <read_var_array+0x98c>
    1ba8:	ldr	r1, [sp, #96]	; 0x60
    1bac:	mov	r0, r4
    1bb0:	bl	0 <coda_netcdf_array_set_attributes>
    1bb4:	cmp	r0, #0
    1bb8:	beq	1bdc <read_var_array+0x98c>
    1bbc:	mov	r0, r4
    1bc0:	bl	0 <coda_dynamic_type_delete>
    1bc4:	ldr	r0, [sp, #96]	; 0x60
    1bc8:	bl	0 <coda_dynamic_type_delete>
    1bcc:	ldr	r0, [sp, #24]
    1bd0:	bl	0 <free>
    1bd4:	mvn	r0, #0
    1bd8:	b	1ca0 <read_var_array+0xa50>
    1bdc:	mov	r3, #1
    1be0:	mov	r2, r4
    1be4:	ldr	r1, [sp, #24]
    1be8:	ldr	r0, [sp, #52]	; 0x34
    1bec:	bl	0 <coda_mem_record_add_field>
    1bf0:	cmp	r0, #0
    1bf4:	beq	1c84 <read_var_array+0xa34>
    1bf8:	mov	r0, r4
    1bfc:	bl	0 <coda_dynamic_type_delete>
    1c00:	ldr	r0, [sp, #24]
    1c04:	bl	0 <free>
    1c08:	mvn	r0, #0
    1c0c:	b	1ca0 <read_var_array+0xa50>
    1c10:	ldr	ip, [sp, #96]	; 0x60
    1c14:	cmp	ip, #0
    1c18:	beq	1c50 <read_var_array+0xa00>
    1c1c:	ldr	r1, [sp, #96]	; 0x60
    1c20:	mov	r0, r7
    1c24:	bl	0 <coda_netcdf_basic_type_set_attributes>
    1c28:	cmp	r0, #0
    1c2c:	beq	1c50 <read_var_array+0xa00>
    1c30:	mov	r0, r7
    1c34:	bl	0 <coda_dynamic_type_delete>
    1c38:	ldr	r0, [sp, #96]	; 0x60
    1c3c:	bl	0 <coda_dynamic_type_delete>
    1c40:	ldr	r0, [sp, #24]
    1c44:	bl	0 <free>
    1c48:	mvn	r0, #0
    1c4c:	b	1ca0 <read_var_array+0xa50>
    1c50:	mov	r3, #1
    1c54:	mov	r2, r7
    1c58:	ldr	r1, [sp, #24]
    1c5c:	ldr	r0, [sp, #52]	; 0x34
    1c60:	bl	0 <coda_mem_record_add_field>
    1c64:	cmp	r0, #0
    1c68:	beq	1c84 <read_var_array+0xa34>
    1c6c:	mov	r0, r7
    1c70:	bl	0 <coda_dynamic_type_delete>
    1c74:	ldr	r0, [sp, #24]
    1c78:	bl	0 <free>
    1c7c:	mvn	r0, #0
    1c80:	b	1ca0 <read_var_array+0xa50>
    1c84:	ldr	r0, [sp, #24]
    1c88:	bl	0 <free>
    1c8c:	ldr	ip, [sp, #48]	; 0x30
    1c90:	add	r3, ip, #1
    1c94:	str	r3, [sp, #48]	; 0x30
    1c98:	b	13bc <read_var_array+0x16c>
    1c9c:	mov	r0, #0
    1ca0:	ldr	r4, [sp, #56]	; 0x38
    1ca4:	ldr	r5, [sp, #60]	; 0x3c
    1ca8:	ldr	r6, [sp, #64]	; 0x40
    1cac:	ldr	r7, [sp, #68]	; 0x44
    1cb0:	ldr	r8, [sp, #72]	; 0x48
    1cb4:	ldr	r9, [sp, #76]	; 0x4c
    1cb8:	ldr	sl, [sp, #80]	; 0x50
    1cbc:	ldr	fp, [sp, #84]	; 0x54
    1cc0:	ldr	lr, [sp, #20]
    1cc4:	add	sp, sp, #184	; 0xb8
    1cc8:	bx	lr

00001ccc <coda_netcdf_reopen>:
    1ccc:	mov	ip, sp
    1cd0:	sub	sp, sp, #88	; 0x58
    1cd4:	str	ip, [sp, #12]
    1cd8:	str	lr, [sp, #16]
    1cdc:	str	r4, [sp, #24]
    1ce0:	str	r5, [sp, #28]
    1ce4:	str	r6, [sp, #32]
    1ce8:	str	r7, [sp, #36]	; 0x24
    1cec:	str	r8, [sp, #40]	; 0x28
    1cf0:	mov	r5, r0
    1cf4:	mov	r3, #0
    1cf8:	str	r3, [sp, #52]	; 0x34
    1cfc:	mov	r1, #0
    1d00:	mov	r0, #0
    1d04:	str	r0, [sp, #64]	; 0x40
    1d08:	str	r1, [sp, #68]	; 0x44
    1d0c:	mvn	ip, #0
    1d10:	str	ip, [sp, #48]	; 0x30
    1d14:	mov	r0, #64	; 0x40
    1d18:	bl	0 <malloc>
    1d1c:	mov	r4, r0
    1d20:	cmp	r4, #0
    1d24:	bne	1d54 <coda_netcdf_reopen+0x88>
    1d28:	mvn	r0, #0
    1d2c:	ldr	r1, [pc, #1060]	; 2158 <coda_netcdf_reopen+0x48c>
    1d30:	mov	r2, #64	; 0x40
    1d34:	ldr	r3, [pc, #1064]	; 2164 <coda_netcdf_reopen+0x498>
    1d38:	movw	r4, #801	; 0x321
    1d3c:	str	r4, [sp]
    1d40:	bl	0 <coda_set_error>
    1d44:	ldr	r0, [r5]
    1d48:	bl	0 <coda_close>
    1d4c:	mvn	r0, #0
    1d50:	b	2138 <coda_netcdf_reopen+0x46c>
    1d54:	mov	r2, #0
    1d58:	str	r2, [r4]
    1d5c:	ldr	r0, [r5]
    1d60:	ldr	r1, [r0, #8]
    1d64:	ldr	r3, [r0, #12]
    1d68:	str	r1, [r4, #8]
    1d6c:	str	r3, [r4, #12]
    1d70:	mov	r2, #6
    1d74:	str	r2, [r4, #16]
    1d78:	mov	r0, #0
    1d7c:	str	r0, [r4, #20]
    1d80:	mov	r0, #0
    1d84:	str	r0, [r4, #24]
    1d88:	mov	r3, #0
    1d8c:	str	r3, [r4, #28]
    1d90:	mov	r1, #0
    1d94:	str	r1, [r4, #32]
    1d98:	mov	r3, #0
    1d9c:	mov	r2, #0
    1da0:	str	r2, [r4, #40]	; 0x28
    1da4:	str	r3, [r4, #44]	; 0x2c
    1da8:	mov	r1, #0
    1dac:	str	r1, [r4, #48]	; 0x30
    1db0:	ldr	r0, [r5]
    1db4:	str	r0, [r4, #52]	; 0x34
    1db8:	mov	r2, #1
    1dbc:	str	r2, [r4, #56]	; 0x38
    1dc0:	mov	r0, #0
    1dc4:	str	r0, [r4, #60]	; 0x3c
    1dc8:	ldr	r1, [r5]
    1dcc:	ldr	r0, [r1]
    1dd0:	bl	0 <strdup>
    1dd4:	str	r0, [r4]
    1dd8:	ldr	r0, [r4]
    1ddc:	cmp	r0, #0
    1de0:	bne	1e08 <coda_netcdf_reopen+0x13c>
    1de4:	mvn	r0, #0
    1de8:	ldr	r1, [pc, #880]	; 2160 <coda_netcdf_reopen+0x494>
    1dec:	ldr	r2, [pc, #880]	; 2164 <coda_netcdf_reopen+0x498>
    1df0:	movw	r3, #823	; 0x337
    1df4:	bl	0 <coda_set_error>
    1df8:	mov	r0, r4
    1dfc:	bl	2174 <coda_netcdf_close>
    1e00:	mvn	r0, #0
    1e04:	b	2138 <coda_netcdf_reopen+0x46c>
    1e08:	mov	r0, #6
    1e0c:	bl	0 <coda_type_record_new>
    1e10:	mov	r7, r0
    1e14:	cmp	r7, #0
    1e18:	bne	1e2c <coda_netcdf_reopen+0x160>
    1e1c:	mov	r0, r4
    1e20:	bl	2174 <coda_netcdf_close>
    1e24:	mvn	r0, #0
    1e28:	b	2138 <coda_netcdf_reopen+0x46c>
    1e2c:	mov	r1, #0
    1e30:	mov	r0, r7
    1e34:	bl	0 <coda_mem_record_new>
    1e38:	mov	r6, r0
    1e3c:	mov	r0, r7
    1e40:	bl	0 <coda_type_release>
    1e44:	cmp	r6, #0
    1e48:	bne	1e5c <coda_netcdf_reopen+0x190>
    1e4c:	mov	r0, r4
    1e50:	bl	2174 <coda_netcdf_close>
    1e54:	mvn	r0, #0
    1e58:	b	2138 <coda_netcdf_reopen+0x46c>
    1e5c:	str	r6, [r4, #20]
    1e60:	ldr	r0, [r4, #52]	; 0x34
    1e64:	ldr	r2, [sp, #64]	; 0x40
    1e68:	ldr	r3, [sp, #68]	; 0x44
    1e6c:	mov	r1, #0
    1e70:	mov	ip, #4
    1e74:	add	r8, sp, #60	; 0x3c
    1e78:	str	r8, [sp, #8]
    1e7c:	str	r1, [sp, #4]
    1e80:	str	ip, [sp]
    1e84:	bl	0 <read_bytes>
    1e88:	cmp	r0, #0
    1e8c:	bge	1ebc <coda_netcdf_reopen+0x1f0>
    1e90:	bl	0 <__errno_location>
    1e94:	ldr	r0, [r0]
    1e98:	bl	0 <strerror>
    1e9c:	mov	r2, r0
    1ea0:	mvn	r0, #21
    1ea4:	ldr	r1, [pc, #704]	; 216c <coda_netcdf_reopen+0x4a0>
    1ea8:	bl	0 <coda_set_error>
    1eac:	mov	r0, r4
    1eb0:	bl	2174 <coda_netcdf_close>
    1eb4:	mvn	r0, #0
    1eb8:	b	2138 <coda_netcdf_reopen+0x46c>
    1ebc:	ldrb	r3, [sp, #60]	; 0x3c
    1ec0:	cmp	r3, #67	; 0x43
    1ec4:	bne	1edc <coda_netcdf_reopen+0x210>
    1ec8:	ldrb	r2, [sp, #61]	; 0x3d
    1ecc:	cmp	r2, #68	; 0x44
    1ed0:	moveq	ip, #1
    1ed4:	movne	ip, #0
    1ed8:	b	1ee0 <coda_netcdf_reopen+0x214>
    1edc:	mov	ip, #0
    1ee0:	cmp	ip, #0
    1ee4:	beq	1efc <coda_netcdf_reopen+0x230>
    1ee8:	ldrb	r2, [sp, #62]	; 0x3e
    1eec:	cmp	r2, #70	; 0x46
    1ef0:	moveq	r1, #1
    1ef4:	movne	r1, #0
    1ef8:	b	1f00 <coda_netcdf_reopen+0x234>
    1efc:	mov	r1, #0
    1f00:	cmp	r1, #0
    1f04:	bne	1f1c <coda_netcdf_reopen+0x250>
    1f08:	ldr	r0, [pc, #588]	; 215c <coda_netcdf_reopen+0x490>
    1f0c:	ldr	r1, [pc, #592]	; 2164 <coda_netcdf_reopen+0x498>
    1f10:	movw	r2, #851	; 0x353
    1f14:	ldr	r3, [pc, #588]	; 2168 <coda_netcdf_reopen+0x49c>
    1f18:	bl	0 <__assert_fail>
    1f1c:	ldrb	ip, [sp, #63]	; 0x3f
    1f20:	str	ip, [r4, #56]	; 0x38
    1f24:	ldr	r1, [r4, #56]	; 0x38
    1f28:	cmp	r1, #1
    1f2c:	beq	1f44 <coda_netcdf_reopen+0x278>
    1f30:	ldr	ip, [r4, #56]	; 0x38
    1f34:	cmp	ip, #2
    1f38:	movne	ip, #1
    1f3c:	moveq	ip, #0
    1f40:	b	1f48 <coda_netcdf_reopen+0x27c>
    1f44:	mov	ip, #0
    1f48:	cmp	ip, #0
    1f4c:	beq	1f64 <coda_netcdf_reopen+0x298>
    1f50:	ldr	r3, [r4, #56]	; 0x38
    1f54:	cmp	r3, #5
    1f58:	movne	ip, #1
    1f5c:	moveq	ip, #0
    1f60:	b	1f68 <coda_netcdf_reopen+0x29c>
    1f64:	mov	ip, #0
    1f68:	cmp	ip, #0
    1f6c:	beq	1f90 <coda_netcdf_reopen+0x2c4>
    1f70:	mvn	r0, #199	; 0xc7
    1f74:	ldr	r1, [pc, #500]	; 2170 <coda_netcdf_reopen+0x4a4>
    1f78:	ldr	r2, [r4, #56]	; 0x38
    1f7c:	bl	0 <coda_set_error>
    1f80:	mov	r0, r4
    1f84:	bl	2174 <coda_netcdf_close>
    1f88:	mvn	r0, #0
    1f8c:	b	2138 <coda_netcdf_reopen+0x46c>
    1f90:	ldr	ip, [sp, #64]	; 0x40
    1f94:	ldr	r2, [sp, #68]	; 0x44
    1f98:	mov	r1, #0
    1f9c:	mov	r0, #4
    1fa0:	adds	lr, ip, r0
    1fa4:	adc	r0, r2, r1
    1fa8:	mov	r2, lr
    1fac:	str	r2, [sp, #64]	; 0x40
    1fb0:	str	r0, [sp, #68]	; 0x44
    1fb4:	add	r1, sp, #64	; 0x40
    1fb8:	add	r2, sp, #72	; 0x48
    1fbc:	mov	r0, r4
    1fc0:	bl	41c <read_length_value>
    1fc4:	cmp	r0, #0
    1fc8:	beq	1ffc <coda_netcdf_reopen+0x330>
    1fcc:	bl	0 <__errno_location>
    1fd0:	ldr	r0, [r0]
    1fd4:	bl	0 <strerror>
    1fd8:	mvn	ip, #21
    1fdc:	ldr	r1, [pc, #392]	; 216c <coda_netcdf_reopen+0x4a0>
    1fe0:	mov	r2, r0
    1fe4:	mov	r0, ip
    1fe8:	bl	0 <coda_set_error>
    1fec:	mov	r0, r4
    1ff0:	bl	2174 <coda_netcdf_close>
    1ff4:	mvn	r0, #0
    1ff8:	b	2138 <coda_netcdf_reopen+0x46c>
    1ffc:	add	r1, sp, #64	; 0x40
    2000:	ldr	r2, [sp, #72]	; 0x48
    2004:	ldr	r3, [sp, #76]	; 0x4c
    2008:	add	r0, sp, #80	; 0x50
    200c:	add	ip, sp, #52	; 0x34
    2010:	add	r8, sp, #48	; 0x30
    2014:	str	r8, [sp, #8]
    2018:	str	ip, [sp, #4]
    201c:	str	r0, [sp]
    2020:	mov	r0, r4
    2024:	bl	538 <read_dim_array>
    2028:	cmp	r0, #0
    202c:	beq	2040 <coda_netcdf_reopen+0x374>
    2030:	mov	r0, r4
    2034:	bl	2174 <coda_netcdf_close>
    2038:	mvn	r0, #0
    203c:	b	2138 <coda_netcdf_reopen+0x46c>
    2040:	add	r1, sp, #64	; 0x40
    2044:	add	r2, sp, #56	; 0x38
    2048:	mov	r3, #0
    204c:	mov	r0, r4
    2050:	bl	830 <read_att_array>
    2054:	cmp	r0, #0
    2058:	beq	2080 <coda_netcdf_reopen+0x3b4>
    205c:	ldr	r3, [sp, #52]	; 0x34
    2060:	cmp	r3, #0
    2064:	beq	2070 <coda_netcdf_reopen+0x3a4>
    2068:	ldr	r0, [sp, #52]	; 0x34
    206c:	bl	0 <free>
    2070:	mov	r0, r4
    2074:	bl	2174 <coda_netcdf_close>
    2078:	mvn	r0, #0
    207c:	b	2138 <coda_netcdf_reopen+0x46c>
    2080:	ldr	ip, [sp, #56]	; 0x38
    2084:	cmp	ip, #0
    2088:	beq	20c8 <coda_netcdf_reopen+0x3fc>
    208c:	ldr	r1, [sp, #56]	; 0x38
    2090:	mov	r2, #1
    2094:	mov	r0, r6
    2098:	bl	0 <coda_mem_type_set_attributes>
    209c:	cmp	r0, #0
    20a0:	beq	20c8 <coda_netcdf_reopen+0x3fc>
    20a4:	ldr	r0, [sp, #52]	; 0x34
    20a8:	cmp	r0, #0
    20ac:	beq	20b8 <coda_netcdf_reopen+0x3ec>
    20b0:	ldr	r0, [sp, #52]	; 0x34
    20b4:	bl	0 <free>
    20b8:	mov	r0, r4
    20bc:	bl	2174 <coda_netcdf_close>
    20c0:	mvn	r0, #0
    20c4:	b	2138 <coda_netcdf_reopen+0x46c>
    20c8:	add	r1, sp, #64	; 0x40
    20cc:	ldr	r2, [sp, #80]	; 0x50
    20d0:	ldr	r3, [sp, #84]	; 0x54
    20d4:	ldr	r0, [sp, #52]	; 0x34
    20d8:	ldr	ip, [sp, #48]	; 0x30
    20dc:	str	r6, [sp, #8]
    20e0:	str	ip, [sp, #4]
    20e4:	str	r0, [sp]
    20e8:	mov	r0, r4
    20ec:	bl	1250 <read_var_array>
    20f0:	cmp	r0, #0
    20f4:	beq	211c <coda_netcdf_reopen+0x450>
    20f8:	ldr	r3, [sp, #52]	; 0x34
    20fc:	cmp	r3, #0
    2100:	beq	210c <coda_netcdf_reopen+0x440>
    2104:	ldr	r0, [sp, #52]	; 0x34
    2108:	bl	0 <free>
    210c:	mov	r0, r4
    2110:	bl	2174 <coda_netcdf_close>
    2114:	mvn	r0, #0
    2118:	b	2138 <coda_netcdf_reopen+0x46c>
    211c:	ldr	r2, [sp, #52]	; 0x34
    2120:	cmp	r2, #0
    2124:	beq	2130 <coda_netcdf_reopen+0x464>
    2128:	ldr	r0, [sp, #52]	; 0x34
    212c:	bl	0 <free>
    2130:	str	r4, [r5]
    2134:	mov	r0, #0
    2138:	ldr	r4, [sp, #24]
    213c:	ldr	r5, [sp, #28]
    2140:	ldr	r6, [sp, #32]
    2144:	ldr	r7, [sp, #36]	; 0x24
    2148:	ldr	r8, [sp, #40]	; 0x28
    214c:	ldr	lr, [sp, #16]
    2150:	add	sp, sp, #88	; 0x58
    2154:	bx	lr
    2158:	.word	0x000002ef
    215c:	.word	0x0000034e
    2160:	.word	0x000003dd
    2164:	.word	0x00000419
    2168:	.word	0x0000048e
    216c:	.word	0x00000131
    2170:	.word	0x00000000

00002174 <coda_netcdf_close>:
    2174:	mov	ip, sp
    2178:	sub	sp, sp, #16
    217c:	str	ip, [sp]
    2180:	str	lr, [sp, #4]
    2184:	str	r4, [sp, #8]
    2188:	mov	r4, r0
    218c:	ldr	r0, [r4]
    2190:	cmp	r0, #0
    2194:	beq	21a0 <coda_netcdf_close+0x2c>
    2198:	ldr	r0, [r4]
    219c:	bl	0 <free>
    21a0:	ldr	r3, [r4, #20]
    21a4:	cmp	r3, #0
    21a8:	beq	21b4 <coda_netcdf_close+0x40>
    21ac:	ldr	r0, [r4, #20]
    21b0:	bl	0 <coda_dynamic_type_delete>
    21b4:	ldr	r2, [r4, #48]	; 0x30
    21b8:	cmp	r2, #0
    21bc:	beq	21c8 <coda_netcdf_close+0x54>
    21c0:	ldr	r0, [r4, #48]	; 0x30
    21c4:	bl	0 <free>
    21c8:	ldr	r1, [r4, #52]	; 0x34
    21cc:	cmp	r1, #0
    21d0:	beq	21dc <coda_netcdf_close+0x68>
    21d4:	ldr	r0, [r4, #52]	; 0x34
    21d8:	bl	0 <coda_bin_close>
    21dc:	mov	r0, r4
    21e0:	bl	0 <free>
    21e4:	mov	r0, #0
    21e8:	ldr	r4, [sp, #8]
    21ec:	ldr	lr, [sp, #4]
    21f0:	add	sp, sp, #16
    21f4:	bx	lr
