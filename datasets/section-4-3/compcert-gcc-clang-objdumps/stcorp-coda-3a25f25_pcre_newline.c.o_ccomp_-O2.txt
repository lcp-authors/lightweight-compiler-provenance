
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/pcre/pcre_newline.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda__pcre_is_newline>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #16
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	ldr	r4, [ip]
  18:	ldrb	ip, [r0]
  1c:	cmp	r1, #2
  20:	beq	d0 <coda__pcre_is_newline+0xd0>
  24:	cmp	ip, #13
  28:	bcs	54 <coda__pcre_is_newline+0x54>
  2c:	cmp	ip, #10
  30:	beq	44 <coda__pcre_is_newline+0x44>
  34:	cmp	ip, #11
  38:	beq	44 <coda__pcre_is_newline+0x44>
  3c:	cmp	ip, #12
  40:	bne	84 <coda__pcre_is_newline+0x84>
  44:	mov	r2, #1
  48:	str	r2, [r3]
  4c:	mov	r0, #1
  50:	b	138 <coda__pcre_is_newline+0x138>
  54:	cmp	ip, #13
  58:	beq	8c <coda__pcre_is_newline+0x8c>
  5c:	cmp	ip, #133	; 0x85
  60:	bne	84 <coda__pcre_is_newline+0x84>
  64:	mov	r1, #2
  68:	mov	ip, #1
  6c:	cmp	r4, #0
  70:	movne	r0, r1
  74:	moveq	r0, ip
  78:	str	r0, [r3]
  7c:	mov	r0, #1
  80:	b	138 <coda__pcre_is_newline+0x138>
  84:	mov	r0, #0
  88:	b	138 <coda__pcre_is_newline+0x138>
  8c:	sub	ip, r2, #1
  90:	cmp	r0, ip
  94:	bcs	ac <coda__pcre_is_newline+0xac>
  98:	ldrb	ip, [r0, #1]
  9c:	cmp	ip, #10
  a0:	moveq	ip, #1
  a4:	movne	ip, #0
  a8:	b	b0 <coda__pcre_is_newline+0xb0>
  ac:	mov	ip, #0
  b0:	mov	r1, #2
  b4:	mov	r2, #1
  b8:	cmp	ip, #0
  bc:	movne	r2, r1
  c0:	moveq	r2, r2
  c4:	str	r2, [r3]
  c8:	mov	r0, #1
  cc:	b	138 <coda__pcre_is_newline+0x138>
  d0:	cmp	ip, #10
  d4:	beq	12c <coda__pcre_is_newline+0x12c>
  d8:	cmp	ip, #13
  dc:	bne	124 <coda__pcre_is_newline+0x124>
  e0:	sub	ip, r2, #1
  e4:	cmp	r0, ip
  e8:	bcs	100 <coda__pcre_is_newline+0x100>
  ec:	ldrb	ip, [r0, #1]
  f0:	cmp	ip, #10
  f4:	moveq	r2, #1
  f8:	movne	r2, #0
  fc:	b	104 <coda__pcre_is_newline+0x104>
 100:	mov	r2, #0
 104:	mov	r1, #2
 108:	mov	r0, #1
 10c:	cmp	r2, #0
 110:	movne	r2, r1
 114:	moveq	r2, r0
 118:	str	r2, [r3]
 11c:	mov	r0, #1
 120:	b	138 <coda__pcre_is_newline+0x138>
 124:	mov	r0, #0
 128:	b	138 <coda__pcre_is_newline+0x138>
 12c:	mov	ip, #1
 130:	str	ip, [r3]
 134:	mov	r0, #1
 138:	ldr	r4, [sp, #8]
 13c:	ldr	lr, [sp, #4]
 140:	add	sp, sp, #16
 144:	bx	lr

00000148 <coda__pcre_was_newline>:
 148:	mov	ip, sp
 14c:	sub	sp, sp, #16
 150:	str	ip, [sp]
 154:	str	lr, [sp, #4]
 158:	str	r4, [sp, #8]
 15c:	ldr	r4, [ip]
 160:	sub	ip, r0, #1
 164:	ldrb	r0, [ip]
 168:	cmp	r1, #2
 16c:	beq	220 <coda__pcre_was_newline+0xd8>
 170:	cmp	r0, #13
 174:	bcs	1d8 <coda__pcre_was_newline+0x90>
 178:	cmp	r0, #10
 17c:	beq	194 <coda__pcre_was_newline+0x4c>
 180:	cmp	r0, #11
 184:	beq	210 <coda__pcre_was_newline+0xc8>
 188:	cmp	r0, #12
 18c:	beq	210 <coda__pcre_was_newline+0xc8>
 190:	b	208 <coda__pcre_was_newline+0xc0>
 194:	cmp	ip, r2
 198:	bls	1b4 <coda__pcre_was_newline+0x6c>
 19c:	sub	lr, ip, #4096	; 0x1000
 1a0:	ldrb	r2, [lr, #4095]	; 0xfff
 1a4:	cmp	r2, #13
 1a8:	moveq	r2, #1
 1ac:	movne	r2, #0
 1b0:	b	1b8 <coda__pcre_was_newline+0x70>
 1b4:	mov	r2, #0
 1b8:	mov	r1, #2
 1bc:	mov	r0, #1
 1c0:	cmp	r2, #0
 1c4:	movne	ip, r1
 1c8:	moveq	ip, r0
 1cc:	str	ip, [r3]
 1d0:	mov	r0, #1
 1d4:	b	288 <coda__pcre_was_newline+0x140>
 1d8:	cmp	r0, #13
 1dc:	beq	210 <coda__pcre_was_newline+0xc8>
 1e0:	cmp	r0, #133	; 0x85
 1e4:	bne	208 <coda__pcre_was_newline+0xc0>
 1e8:	mov	r1, #2
 1ec:	mov	ip, #1
 1f0:	cmp	r4, #0
 1f4:	movne	r1, r1
 1f8:	moveq	r1, ip
 1fc:	str	r1, [r3]
 200:	mov	r0, #1
 204:	b	288 <coda__pcre_was_newline+0x140>
 208:	mov	r0, #0
 20c:	b	288 <coda__pcre_was_newline+0x140>
 210:	mov	r1, #1
 214:	str	r1, [r3]
 218:	mov	r0, #1
 21c:	b	288 <coda__pcre_was_newline+0x140>
 220:	cmp	r0, #10
 224:	beq	248 <coda__pcre_was_newline+0x100>
 228:	cmp	r0, #13
 22c:	bne	240 <coda__pcre_was_newline+0xf8>
 230:	mov	ip, #1
 234:	str	ip, [r3]
 238:	mov	r0, #1
 23c:	b	288 <coda__pcre_was_newline+0x140>
 240:	mov	r0, #0
 244:	b	288 <coda__pcre_was_newline+0x140>
 248:	cmp	ip, r2
 24c:	bls	268 <coda__pcre_was_newline+0x120>
 250:	sub	lr, ip, #4096	; 0x1000
 254:	ldrb	ip, [lr, #4095]	; 0xfff
 258:	cmp	ip, #13
 25c:	moveq	r1, #1
 260:	movne	r1, #0
 264:	b	26c <coda__pcre_was_newline+0x124>
 268:	mov	r1, #0
 26c:	mov	r0, #2
 270:	mov	ip, #1
 274:	cmp	r1, #0
 278:	movne	r2, r0
 27c:	moveq	r2, ip
 280:	str	r2, [r3]
 284:	mov	r0, #1
 288:	ldr	r4, [sp, #8]
 28c:	ldr	lr, [sp, #4]
 290:	add	sp, sp, #16
 294:	bx	lr
