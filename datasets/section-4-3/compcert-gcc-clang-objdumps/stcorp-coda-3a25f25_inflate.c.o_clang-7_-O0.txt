
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/zlib/inflate.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_inflateResetKeep>:
       0:	sub	sp, sp, #12
       4:	str	r0, [sp, #4]
       8:	ldr	r0, [sp, #4]
       c:	movw	r1, #0
      10:	cmp	r0, r1
      14:	beq	2c <coda_inflateResetKeep+0x2c>
      18:	ldr	r0, [sp, #4]
      1c:	ldr	r0, [r0, #28]
      20:	movw	r1, #0
      24:	cmp	r0, r1
      28:	bne	38 <coda_inflateResetKeep+0x38>
      2c:	mvn	r0, #1
      30:	str	r0, [sp, #8]
      34:	b	114 <coda_inflateResetKeep+0x114>
      38:	ldr	r0, [sp, #4]
      3c:	ldr	r0, [r0, #28]
      40:	str	r0, [sp]
      44:	ldr	r0, [sp]
      48:	movw	r1, #0
      4c:	str	r1, [r0, #28]
      50:	ldr	r0, [sp, #4]
      54:	str	r1, [r0, #20]
      58:	ldr	r0, [sp, #4]
      5c:	str	r1, [r0, #8]
      60:	ldr	r0, [sp, #4]
      64:	str	r1, [r0, #24]
      68:	ldr	r0, [sp]
      6c:	ldr	r0, [r0, #8]
      70:	cmp	r0, #0
      74:	beq	8c <coda_inflateResetKeep+0x8c>
      78:	ldr	r0, [sp]
      7c:	ldr	r0, [r0, #8]
      80:	and	r0, r0, #1
      84:	ldr	r1, [sp, #4]
      88:	str	r0, [r1, #48]	; 0x30
      8c:	ldr	r0, [sp]
      90:	movw	r1, #0
      94:	str	r1, [r0]
      98:	ldr	r0, [sp]
      9c:	str	r1, [r0, #4]
      a0:	ldr	r0, [sp]
      a4:	str	r1, [r0, #12]
      a8:	ldr	r0, [sp]
      ac:	movw	r2, #32768	; 0x8000
      b0:	str	r2, [r0, #20]
      b4:	ldr	r0, [sp]
      b8:	str	r1, [r0, #32]
      bc:	ldr	r0, [sp]
      c0:	str	r1, [r0, #56]	; 0x38
      c4:	ldr	r0, [sp]
      c8:	str	r1, [r0, #60]	; 0x3c
      cc:	ldr	r0, [sp]
      d0:	add	r0, r0, #1328	; 0x530
      d4:	ldr	r2, [sp]
      d8:	str	r0, [r2, #108]	; 0x6c
      dc:	ldr	r2, [sp]
      e0:	str	r0, [r2, #80]	; 0x50
      e4:	ldr	r2, [sp]
      e8:	str	r0, [r2, #76]	; 0x4c
      ec:	ldr	r0, [sp]
      f0:	add	r0, r0, #7104	; 0x1bc0
      f4:	movw	r2, #1
      f8:	str	r2, [r0]
      fc:	ldr	r0, [sp]
     100:	movw	r2, #7108	; 0x1bc4
     104:	add	r0, r0, r2
     108:	mvn	r2, #0
     10c:	str	r2, [r0]
     110:	str	r1, [sp, #8]
     114:	ldr	r0, [sp, #8]
     118:	add	sp, sp, #12
     11c:	bx	lr

00000120 <coda_inflateReset>:
     120:	push	{fp, lr}
     124:	mov	fp, sp
     128:	sub	sp, sp, #16
     12c:	str	r0, [sp, #8]
     130:	ldr	r0, [sp, #8]
     134:	movw	r1, #0
     138:	cmp	r0, r1
     13c:	beq	154 <coda_inflateReset+0x34>
     140:	ldr	r0, [sp, #8]
     144:	ldr	r0, [r0, #28]
     148:	movw	r1, #0
     14c:	cmp	r0, r1
     150:	bne	160 <coda_inflateReset+0x40>
     154:	mvn	r0, #1
     158:	str	r0, [fp, #-4]
     15c:	b	194 <coda_inflateReset+0x74>
     160:	ldr	r0, [sp, #8]
     164:	ldr	r0, [r0, #28]
     168:	str	r0, [sp, #4]
     16c:	ldr	r0, [sp, #4]
     170:	movw	r1, #0
     174:	str	r1, [r0, #40]	; 0x28
     178:	ldr	r0, [sp, #4]
     17c:	str	r1, [r0, #44]	; 0x2c
     180:	ldr	r0, [sp, #4]
     184:	str	r1, [r0, #48]	; 0x30
     188:	ldr	r0, [sp, #8]
     18c:	bl	0 <coda_inflateResetKeep>
     190:	str	r0, [fp, #-4]
     194:	ldr	r0, [fp, #-4]
     198:	mov	sp, fp
     19c:	pop	{fp, pc}

000001a0 <coda_inflateReset2>:
     1a0:	push	{fp, lr}
     1a4:	mov	fp, sp
     1a8:	sub	sp, sp, #24
     1ac:	str	r0, [fp, #-8]
     1b0:	str	r1, [sp, #12]
     1b4:	ldr	r0, [fp, #-8]
     1b8:	movw	r1, #0
     1bc:	cmp	r0, r1
     1c0:	beq	1d8 <coda_inflateReset2+0x38>
     1c4:	ldr	r0, [fp, #-8]
     1c8:	ldr	r0, [r0, #28]
     1cc:	movw	r1, #0
     1d0:	cmp	r0, r1
     1d4:	bne	1e4 <coda_inflateReset2+0x44>
     1d8:	mvn	r0, #1
     1dc:	str	r0, [fp, #-4]
     1e0:	b	2f4 <coda_inflateReset2+0x154>
     1e4:	ldr	r0, [fp, #-8]
     1e8:	ldr	r0, [r0, #28]
     1ec:	str	r0, [sp, #4]
     1f0:	ldr	r0, [sp, #12]
     1f4:	cmp	r0, #0
     1f8:	bge	214 <coda_inflateReset2+0x74>
     1fc:	movw	r0, #0
     200:	str	r0, [sp, #8]
     204:	ldr	r1, [sp, #12]
     208:	sub	r0, r0, r1
     20c:	str	r0, [sp, #12]
     210:	b	240 <coda_inflateReset2+0xa0>
     214:	ldr	r0, [sp, #12]
     218:	asr	r0, r0, #4
     21c:	add	r0, r0, #1
     220:	str	r0, [sp, #8]
     224:	ldr	r0, [sp, #12]
     228:	cmp	r0, #48	; 0x30
     22c:	bge	23c <coda_inflateReset2+0x9c>
     230:	ldr	r0, [sp, #12]
     234:	and	r0, r0, #15
     238:	str	r0, [sp, #12]
     23c:	b	240 <coda_inflateReset2+0xa0>
     240:	ldr	r0, [sp, #12]
     244:	cmp	r0, #0
     248:	beq	270 <coda_inflateReset2+0xd0>
     24c:	ldr	r0, [sp, #12]
     250:	cmp	r0, #8
     254:	blt	264 <coda_inflateReset2+0xc4>
     258:	ldr	r0, [sp, #12]
     25c:	cmp	r0, #15
     260:	ble	270 <coda_inflateReset2+0xd0>
     264:	mvn	r0, #1
     268:	str	r0, [fp, #-4]
     26c:	b	2f4 <coda_inflateReset2+0x154>
     270:	ldr	r0, [sp, #4]
     274:	ldr	r0, [r0, #52]	; 0x34
     278:	movw	r1, #0
     27c:	cmp	r0, r1
     280:	beq	2d0 <coda_inflateReset2+0x130>
     284:	ldr	r0, [sp, #4]
     288:	ldr	r0, [r0, #36]	; 0x24
     28c:	ldr	r1, [sp, #12]
     290:	cmp	r0, r1
     294:	beq	2d0 <coda_inflateReset2+0x130>
     298:	ldr	r0, [fp, #-8]
     29c:	ldr	r0, [r0, #36]	; 0x24
     2a0:	ldr	r1, [fp, #-8]
     2a4:	ldr	r1, [r1, #40]	; 0x28
     2a8:	ldr	r2, [sp, #4]
     2ac:	ldr	r2, [r2, #52]	; 0x34
     2b0:	str	r0, [sp]
     2b4:	mov	r0, r1
     2b8:	mov	r1, r2
     2bc:	ldr	r2, [sp]
     2c0:	blx	r2
     2c4:	ldr	r0, [sp, #4]
     2c8:	movw	r1, #0
     2cc:	str	r1, [r0, #52]	; 0x34
     2d0:	ldr	r0, [sp, #8]
     2d4:	ldr	r1, [sp, #4]
     2d8:	str	r0, [r1, #8]
     2dc:	ldr	r0, [sp, #12]
     2e0:	ldr	r1, [sp, #4]
     2e4:	str	r0, [r1, #36]	; 0x24
     2e8:	ldr	r0, [fp, #-8]
     2ec:	bl	120 <coda_inflateReset>
     2f0:	str	r0, [fp, #-4]
     2f4:	ldr	r0, [fp, #-4]
     2f8:	mov	sp, fp
     2fc:	pop	{fp, pc}

00000300 <coda_inflateInit2_>:
     300:	push	{fp, lr}
     304:	mov	fp, sp
     308:	sub	sp, sp, #40	; 0x28
     30c:	str	r0, [fp, #-8]
     310:	str	r1, [fp, #-12]
     314:	str	r2, [fp, #-16]
     318:	str	r3, [sp, #20]
     31c:	ldr	r0, [fp, #-16]
     320:	movw	r1, #0
     324:	cmp	r0, r1
     328:	beq	354 <coda_inflateInit2_+0x54>
     32c:	ldr	r0, [fp, #-16]
     330:	ldrb	r0, [r0]
     334:	movw	r1, #0
     338:	movt	r1, #0
     33c:	ldrb	r1, [r1]
     340:	cmp	r0, r1
     344:	bne	354 <coda_inflateInit2_+0x54>
     348:	ldr	r0, [sp, #20]
     34c:	cmp	r0, #56	; 0x38
     350:	beq	360 <coda_inflateInit2_+0x60>
     354:	mvn	r0, #5
     358:	str	r0, [fp, #-4]
     35c:	b	490 <coda_inflateInit2_+0x190>
     360:	ldr	r0, [fp, #-8]
     364:	movw	r1, #0
     368:	cmp	r0, r1
     36c:	bne	37c <coda_inflateInit2_+0x7c>
     370:	mvn	r0, #1
     374:	str	r0, [fp, #-4]
     378:	b	490 <coda_inflateInit2_+0x190>
     37c:	ldr	r0, [fp, #-8]
     380:	movw	r1, #0
     384:	str	r1, [r0, #24]
     388:	ldr	r0, [fp, #-8]
     38c:	ldr	r0, [r0, #32]
     390:	cmp	r0, r1
     394:	bne	3b4 <coda_inflateInit2_+0xb4>
     398:	ldr	r0, [fp, #-8]
     39c:	movw	r1, #0
     3a0:	movt	r1, #0
     3a4:	str	r1, [r0, #32]
     3a8:	ldr	r0, [fp, #-8]
     3ac:	movw	r1, #0
     3b0:	str	r1, [r0, #40]	; 0x28
     3b4:	ldr	r0, [fp, #-8]
     3b8:	ldr	r0, [r0, #36]	; 0x24
     3bc:	movw	r1, #0
     3c0:	cmp	r0, r1
     3c4:	bne	3d8 <coda_inflateInit2_+0xd8>
     3c8:	ldr	r0, [fp, #-8]
     3cc:	movw	r1, #0
     3d0:	movt	r1, #0
     3d4:	str	r1, [r0, #36]	; 0x24
     3d8:	ldr	r0, [fp, #-8]
     3dc:	ldr	r0, [r0, #32]
     3e0:	ldr	r1, [fp, #-8]
     3e4:	ldr	r1, [r1, #40]	; 0x28
     3e8:	str	r0, [sp, #8]
     3ec:	mov	r0, r1
     3f0:	movw	r1, #1
     3f4:	movw	r2, #7116	; 0x1bcc
     3f8:	ldr	r3, [sp, #8]
     3fc:	blx	r3
     400:	str	r0, [sp, #12]
     404:	ldr	r0, [sp, #12]
     408:	movw	r1, #0
     40c:	cmp	r0, r1
     410:	bne	420 <coda_inflateInit2_+0x120>
     414:	mvn	r0, #3
     418:	str	r0, [fp, #-4]
     41c:	b	490 <coda_inflateInit2_+0x190>
     420:	ldr	r0, [sp, #12]
     424:	ldr	r1, [fp, #-8]
     428:	str	r0, [r1, #28]
     42c:	ldr	r0, [sp, #12]
     430:	movw	r1, #0
     434:	str	r1, [r0, #52]	; 0x34
     438:	ldr	r0, [fp, #-8]
     43c:	ldr	r1, [fp, #-12]
     440:	bl	1a0 <coda_inflateReset2>
     444:	str	r0, [sp, #16]
     448:	ldr	r0, [sp, #16]
     44c:	cmp	r0, #0
     450:	beq	488 <coda_inflateInit2_+0x188>
     454:	ldr	r0, [fp, #-8]
     458:	ldr	r0, [r0, #36]	; 0x24
     45c:	ldr	r1, [fp, #-8]
     460:	ldr	r1, [r1, #40]	; 0x28
     464:	ldr	r2, [sp, #12]
     468:	str	r0, [sp, #4]
     46c:	mov	r0, r1
     470:	mov	r1, r2
     474:	ldr	r2, [sp, #4]
     478:	blx	r2
     47c:	ldr	r0, [fp, #-8]
     480:	movw	r1, #0
     484:	str	r1, [r0, #28]
     488:	ldr	r0, [sp, #16]
     48c:	str	r0, [fp, #-4]
     490:	ldr	r0, [fp, #-4]
     494:	mov	sp, fp
     498:	pop	{fp, pc}

0000049c <coda_inflateInit_>:
     49c:	push	{fp, lr}
     4a0:	mov	fp, sp
     4a4:	sub	sp, sp, #16
     4a8:	str	r0, [fp, #-4]
     4ac:	str	r1, [sp, #8]
     4b0:	str	r2, [sp, #4]
     4b4:	ldr	r0, [fp, #-4]
     4b8:	ldr	r2, [sp, #8]
     4bc:	ldr	r3, [sp, #4]
     4c0:	movw	r1, #15
     4c4:	bl	300 <coda_inflateInit2_>
     4c8:	mov	sp, fp
     4cc:	pop	{fp, pc}

000004d0 <coda_inflatePrime>:
     4d0:	sub	sp, sp, #20
     4d4:	str	r0, [sp, #12]
     4d8:	str	r1, [sp, #8]
     4dc:	str	r2, [sp, #4]
     4e0:	ldr	r0, [sp, #12]
     4e4:	movw	r1, #0
     4e8:	cmp	r0, r1
     4ec:	beq	504 <coda_inflatePrime+0x34>
     4f0:	ldr	r0, [sp, #12]
     4f4:	ldr	r0, [r0, #28]
     4f8:	movw	r1, #0
     4fc:	cmp	r0, r1
     500:	bne	510 <coda_inflatePrime+0x40>
     504:	mvn	r0, #1
     508:	str	r0, [sp, #16]
     50c:	b	5cc <coda_inflatePrime+0xfc>
     510:	ldr	r0, [sp, #12]
     514:	ldr	r0, [r0, #28]
     518:	str	r0, [sp]
     51c:	ldr	r0, [sp, #8]
     520:	cmp	r0, #0
     524:	bge	544 <coda_inflatePrime+0x74>
     528:	ldr	r0, [sp]
     52c:	movw	r1, #0
     530:	str	r1, [r0, #56]	; 0x38
     534:	ldr	r0, [sp]
     538:	str	r1, [r0, #60]	; 0x3c
     53c:	str	r1, [sp, #16]
     540:	b	5cc <coda_inflatePrime+0xfc>
     544:	ldr	r0, [sp, #8]
     548:	cmp	r0, #16
     54c:	bgt	568 <coda_inflatePrime+0x98>
     550:	ldr	r0, [sp]
     554:	ldr	r0, [r0, #60]	; 0x3c
     558:	ldr	r1, [sp, #8]
     55c:	add	r0, r0, r1
     560:	cmp	r0, #32
     564:	bls	574 <coda_inflatePrime+0xa4>
     568:	mvn	r0, #1
     56c:	str	r0, [sp, #16]
     570:	b	5cc <coda_inflatePrime+0xfc>
     574:	ldr	r0, [sp, #8]
     578:	movw	r1, #1
     57c:	lsl	r0, r1, r0
     580:	sub	r0, r0, #1
     584:	ldr	r1, [sp, #4]
     588:	and	r0, r1, r0
     58c:	str	r0, [sp, #4]
     590:	ldr	r0, [sp, #4]
     594:	ldr	r1, [sp]
     598:	ldr	r1, [r1, #60]	; 0x3c
     59c:	lsl	r0, r0, r1
     5a0:	ldr	r1, [sp]
     5a4:	ldr	r2, [r1, #56]	; 0x38
     5a8:	add	r0, r2, r0
     5ac:	str	r0, [r1, #56]	; 0x38
     5b0:	ldr	r0, [sp, #8]
     5b4:	ldr	r1, [sp]
     5b8:	ldr	r2, [r1, #60]	; 0x3c
     5bc:	add	r0, r2, r0
     5c0:	str	r0, [r1, #60]	; 0x3c
     5c4:	movw	r0, #0
     5c8:	str	r0, [sp, #16]
     5cc:	ldr	r0, [sp, #16]
     5d0:	add	sp, sp, #20
     5d4:	bx	lr

000005d8 <coda_inflate>:
     5d8:	push	{r4, sl, fp, lr}
     5dc:	add	fp, sp, #8
     5e0:	sub	sp, sp, #176	; 0xb0
     5e4:	str	r0, [fp, #-16]
     5e8:	str	r1, [fp, #-20]	; 0xffffffec
     5ec:	ldr	r0, [fp, #-16]
     5f0:	movw	r1, #0
     5f4:	cmp	r0, r1
     5f8:	beq	648 <coda_inflate+0x70>
     5fc:	ldr	r0, [fp, #-16]
     600:	ldr	r0, [r0, #28]
     604:	movw	r1, #0
     608:	cmp	r0, r1
     60c:	beq	648 <coda_inflate+0x70>
     610:	ldr	r0, [fp, #-16]
     614:	ldr	r0, [r0, #12]
     618:	movw	r1, #0
     61c:	cmp	r0, r1
     620:	beq	648 <coda_inflate+0x70>
     624:	ldr	r0, [fp, #-16]
     628:	ldr	r0, [r0]
     62c:	movw	r1, #0
     630:	cmp	r0, r1
     634:	bne	654 <coda_inflate+0x7c>
     638:	ldr	r0, [fp, #-16]
     63c:	ldr	r0, [r0, #4]
     640:	cmp	r0, #0
     644:	beq	654 <coda_inflate+0x7c>
     648:	mvn	r0, #1
     64c:	str	r0, [fp, #-12]
     650:	b	3430 <coda_inflate+0x2e58>
     654:	ldr	r0, [fp, #-16]
     658:	ldr	r0, [r0, #28]
     65c:	str	r0, [fp, #-24]	; 0xffffffe8
     660:	ldr	r0, [fp, #-24]	; 0xffffffe8
     664:	ldr	r0, [r0]
     668:	cmp	r0, #11
     66c:	bne	67c <coda_inflate+0xa4>
     670:	ldr	r0, [fp, #-24]	; 0xffffffe8
     674:	movw	r1, #12
     678:	str	r1, [r0]
     67c:	b	680 <coda_inflate+0xa8>
     680:	ldr	r0, [fp, #-16]
     684:	ldr	r0, [r0, #12]
     688:	str	r0, [fp, #-32]	; 0xffffffe0
     68c:	ldr	r0, [fp, #-16]
     690:	ldr	r0, [r0, #16]
     694:	str	r0, [fp, #-40]	; 0xffffffd8
     698:	ldr	r0, [fp, #-16]
     69c:	ldr	r0, [r0]
     6a0:	str	r0, [fp, #-28]	; 0xffffffe4
     6a4:	ldr	r0, [fp, #-16]
     6a8:	ldr	r0, [r0, #4]
     6ac:	str	r0, [fp, #-36]	; 0xffffffdc
     6b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     6b4:	ldr	r0, [r0, #56]	; 0x38
     6b8:	str	r0, [fp, #-44]	; 0xffffffd4
     6bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     6c0:	ldr	r0, [r0, #60]	; 0x3c
     6c4:	str	r0, [fp, #-48]	; 0xffffffd0
     6c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
     6cc:	str	r0, [fp, #-52]	; 0xffffffcc
     6d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     6d4:	str	r0, [fp, #-56]	; 0xffffffc8
     6d8:	movw	r0, #0
     6dc:	str	r0, [fp, #-80]	; 0xffffffb0
     6e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     6e4:	ldr	r0, [r0]
     6e8:	cmp	r0, #31
     6ec:	str	r0, [fp, #-88]	; 0xffffffa8
     6f0:	bhi	315c <coda_inflate+0x2b84>
     6f4:	add	r0, pc, #8
     6f8:	ldr	r1, [fp, #-88]	; 0xffffffa8
     6fc:	ldr	r0, [r0, r1, lsl #2]
     700:	mov	pc, r0
     704:	.word	0x00000784
     708:	.word	0x00000a68
     70c:	.word	0x00000be0
     710:	.word	0x00000cf4
     714:	.word	0x00000e08
     718:	.word	0x00000f50
     71c:	.word	0x000010f0
     720:	.word	0x00001288
     724:	.word	0x00001414
     728:	.word	0x0000155c
     72c:	.word	0x00001630
     730:	.word	0x000016c8
     734:	.word	0x000016e8
     738:	.word	0x000018a0
     73c:	.word	0x000019bc
     740:	.word	0x000019c8
     744:	.word	0x00001a98
     748:	.word	0x00001bec
     74c:	.word	0x00001dd0
     750:	.word	0x000023f0
     754:	.word	0x000023fc
     758:	.word	0x000027a8
     75c:	.word	0x000028cc
     760:	.word	0x00002b28
     764:	.word	0x00002c34
     768:	.word	0x00002e14
     76c:	.word	0x00002e5c
     770:	.word	0x00003050
     774:	.word	0x00003134
     778:	.word	0x00003140
     77c:	.word	0x0000314c
     780:	.word	0x00003158
     784:	ldr	r0, [fp, #-24]	; 0xffffffe8
     788:	ldr	r0, [r0, #8]
     78c:	cmp	r0, #0
     790:	bne	7a4 <coda_inflate+0x1cc>
     794:	ldr	r0, [fp, #-24]	; 0xffffffe8
     798:	movw	r1, #12
     79c:	str	r1, [r0]
     7a0:	b	3168 <coda_inflate+0x2b90>
     7a4:	b	7a8 <coda_inflate+0x1d0>
     7a8:	b	7ac <coda_inflate+0x1d4>
     7ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
     7b0:	cmp	r0, #16
     7b4:	bcs	810 <coda_inflate+0x238>
     7b8:	b	7bc <coda_inflate+0x1e4>
     7bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
     7c0:	cmp	r0, #0
     7c4:	bne	7cc <coda_inflate+0x1f4>
     7c8:	b	316c <coda_inflate+0x2b94>
     7cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
     7d0:	mvn	r1, #0
     7d4:	add	r0, r0, r1
     7d8:	str	r0, [fp, #-36]	; 0xffffffdc
     7dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
     7e0:	add	r1, r0, #1
     7e4:	str	r1, [fp, #-28]	; 0xffffffe4
     7e8:	ldrb	r0, [r0]
     7ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
     7f0:	lsl	r0, r0, r1
     7f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
     7f8:	add	r0, r1, r0
     7fc:	str	r0, [fp, #-44]	; 0xffffffd4
     800:	ldr	r0, [fp, #-48]	; 0xffffffd0
     804:	add	r0, r0, #8
     808:	str	r0, [fp, #-48]	; 0xffffffd0
     80c:	b	7ac <coda_inflate+0x1d4>
     810:	b	814 <coda_inflate+0x23c>
     814:	ldr	r0, [fp, #-24]	; 0xffffffe8
     818:	ldr	r0, [r0, #8]
     81c:	and	r0, r0, #2
     820:	cmp	r0, #0
     824:	beq	8a4 <coda_inflate+0x2cc>
     828:	ldr	r0, [fp, #-44]	; 0xffffffd4
     82c:	movw	r1, #35615	; 0x8b1f
     830:	cmp	r0, r1
     834:	bne	8a4 <coda_inflate+0x2cc>
     838:	movw	r0, #0
     83c:	str	r0, [sp, #92]	; 0x5c
     840:	ldr	r1, [sp, #92]	; 0x5c
     844:	ldr	r2, [sp, #92]	; 0x5c
     848:	bl	0 <coda_crc32>
     84c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     850:	str	r0, [r1, #24]
     854:	sub	r1, fp, #84	; 0x54
     858:	ldr	r0, [fp, #-44]	; 0xffffffd4
     85c:	strb	r0, [fp, #-84]	; 0xffffffac
     860:	ldr	r0, [fp, #-44]	; 0xffffffd4
     864:	lsr	r0, r0, #8
     868:	strb	r0, [fp, #-83]	; 0xffffffad
     86c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     870:	ldr	r0, [r0, #24]
     874:	movw	r2, #2
     878:	bl	0 <coda_crc32>
     87c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     880:	str	r0, [r1, #24]
     884:	b	888 <coda_inflate+0x2b0>
     888:	movw	r0, #0
     88c:	str	r0, [fp, #-44]	; 0xffffffd4
     890:	str	r0, [fp, #-48]	; 0xffffffd0
     894:	ldr	r0, [fp, #-24]	; 0xffffffe8
     898:	movw	r1, #1
     89c:	str	r1, [r0]
     8a0:	b	3168 <coda_inflate+0x2b90>
     8a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     8a8:	movw	r1, #0
     8ac:	str	r1, [r0, #16]
     8b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     8b4:	ldr	r0, [r0, #32]
     8b8:	cmp	r0, r1
     8bc:	beq	8d0 <coda_inflate+0x2f8>
     8c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     8c4:	ldr	r0, [r0, #32]
     8c8:	mvn	r1, #0
     8cc:	str	r1, [r0, #48]	; 0x30
     8d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     8d4:	ldr	r0, [r0, #8]
     8d8:	and	r0, r0, #1
     8dc:	cmp	r0, #0
     8e0:	beq	924 <coda_inflate+0x34c>
     8e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
     8e8:	uxtb	r1, r0
     8ec:	lsl	r1, r1, #8
     8f0:	add	r0, r1, r0, lsr #8
     8f4:	movw	r1, #4229	; 0x1085
     8f8:	movt	r1, #2114	; 0x842
     8fc:	umull	r1, r2, r0, r1
     900:	sub	r3, r0, r2
     904:	add	r2, r2, r3, lsr #1
     908:	lsr	r3, r2, #4
     90c:	lsl	r3, r3, #5
     910:	sub	r2, r3, r2, lsr #4
     914:	sub	r0, r0, r2
     918:	cmp	r0, #0
     91c:	str	r1, [sp, #88]	; 0x58
     920:	beq	944 <coda_inflate+0x36c>
     924:	ldr	r0, [fp, #-16]
     928:	movw	r1, #0
     92c:	movt	r1, #0
     930:	str	r1, [r0, #24]
     934:	ldr	r0, [fp, #-24]	; 0xffffffe8
     938:	movw	r1, #29
     93c:	str	r1, [r0]
     940:	b	3168 <coda_inflate+0x2b90>
     944:	ldr	r0, [fp, #-44]	; 0xffffffd4
     948:	and	r0, r0, #15
     94c:	cmp	r0, #8
     950:	beq	974 <coda_inflate+0x39c>
     954:	ldr	r0, [fp, #-16]
     958:	movw	r1, #0
     95c:	movt	r1, #0
     960:	str	r1, [r0, #24]
     964:	ldr	r0, [fp, #-24]	; 0xffffffe8
     968:	movw	r1, #29
     96c:	str	r1, [r0]
     970:	b	3168 <coda_inflate+0x2b90>
     974:	b	978 <coda_inflate+0x3a0>
     978:	ldr	r0, [fp, #-44]	; 0xffffffd4
     97c:	lsr	r0, r0, #4
     980:	str	r0, [fp, #-44]	; 0xffffffd4
     984:	ldr	r0, [fp, #-48]	; 0xffffffd0
     988:	sub	r0, r0, #4
     98c:	str	r0, [fp, #-48]	; 0xffffffd0
     990:	ldr	r0, [fp, #-44]	; 0xffffffd4
     994:	and	r0, r0, #15
     998:	add	r0, r0, #8
     99c:	str	r0, [fp, #-76]	; 0xffffffb4
     9a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     9a4:	ldr	r0, [r0, #36]	; 0x24
     9a8:	cmp	r0, #0
     9ac:	bne	9c0 <coda_inflate+0x3e8>
     9b0:	ldr	r0, [fp, #-76]	; 0xffffffb4
     9b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     9b8:	str	r0, [r1, #36]	; 0x24
     9bc:	b	9f8 <coda_inflate+0x420>
     9c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
     9c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     9c8:	ldr	r1, [r1, #36]	; 0x24
     9cc:	cmp	r0, r1
     9d0:	bls	9f4 <coda_inflate+0x41c>
     9d4:	ldr	r0, [fp, #-16]
     9d8:	movw	r1, #0
     9dc:	movt	r1, #0
     9e0:	str	r1, [r0, #24]
     9e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     9e8:	movw	r1, #29
     9ec:	str	r1, [r0]
     9f0:	b	3168 <coda_inflate+0x2b90>
     9f4:	b	9f8 <coda_inflate+0x420>
     9f8:	ldr	r0, [fp, #-76]	; 0xffffffb4
     9fc:	movw	r1, #1
     a00:	lsl	r0, r1, r0
     a04:	ldr	r1, [fp, #-24]	; 0xffffffe8
     a08:	str	r0, [r1, #20]
     a0c:	movw	r0, #0
     a10:	str	r0, [sp, #84]	; 0x54
     a14:	ldr	r1, [sp, #84]	; 0x54
     a18:	ldr	r2, [sp, #84]	; 0x54
     a1c:	bl	0 <coda_adler32>
     a20:	ldr	r1, [fp, #-24]	; 0xffffffe8
     a24:	str	r0, [r1, #24]
     a28:	ldr	r1, [fp, #-16]
     a2c:	str	r0, [r1, #48]	; 0x30
     a30:	ldr	r0, [fp, #-44]	; 0xffffffd4
     a34:	and	r0, r0, #512	; 0x200
     a38:	cmp	r0, #0
     a3c:	movw	r0, #0
     a40:	movne	r0, #1
     a44:	tst	r0, #1
     a48:	movw	r0, #9
     a4c:	moveq	r0, #11
     a50:	ldr	r1, [fp, #-24]	; 0xffffffe8
     a54:	str	r0, [r1]
     a58:	movw	r0, #0
     a5c:	str	r0, [fp, #-44]	; 0xffffffd4
     a60:	str	r0, [fp, #-48]	; 0xffffffd0
     a64:	b	3168 <coda_inflate+0x2b90>
     a68:	b	a6c <coda_inflate+0x494>
     a6c:	b	a70 <coda_inflate+0x498>
     a70:	ldr	r0, [fp, #-48]	; 0xffffffd0
     a74:	cmp	r0, #16
     a78:	bcs	ad4 <coda_inflate+0x4fc>
     a7c:	b	a80 <coda_inflate+0x4a8>
     a80:	ldr	r0, [fp, #-36]	; 0xffffffdc
     a84:	cmp	r0, #0
     a88:	bne	a90 <coda_inflate+0x4b8>
     a8c:	b	316c <coda_inflate+0x2b94>
     a90:	ldr	r0, [fp, #-36]	; 0xffffffdc
     a94:	mvn	r1, #0
     a98:	add	r0, r0, r1
     a9c:	str	r0, [fp, #-36]	; 0xffffffdc
     aa0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     aa4:	add	r1, r0, #1
     aa8:	str	r1, [fp, #-28]	; 0xffffffe4
     aac:	ldrb	r0, [r0]
     ab0:	ldr	r1, [fp, #-48]	; 0xffffffd0
     ab4:	lsl	r0, r0, r1
     ab8:	ldr	r1, [fp, #-44]	; 0xffffffd4
     abc:	add	r0, r1, r0
     ac0:	str	r0, [fp, #-44]	; 0xffffffd4
     ac4:	ldr	r0, [fp, #-48]	; 0xffffffd0
     ac8:	add	r0, r0, #8
     acc:	str	r0, [fp, #-48]	; 0xffffffd0
     ad0:	b	a70 <coda_inflate+0x498>
     ad4:	b	ad8 <coda_inflate+0x500>
     ad8:	ldr	r0, [fp, #-44]	; 0xffffffd4
     adc:	ldr	r1, [fp, #-24]	; 0xffffffe8
     ae0:	str	r0, [r1, #16]
     ae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ae8:	ldr	r0, [r0, #16]
     aec:	and	r0, r0, #255	; 0xff
     af0:	cmp	r0, #8
     af4:	beq	b18 <coda_inflate+0x540>
     af8:	ldr	r0, [fp, #-16]
     afc:	movw	r1, #0
     b00:	movt	r1, #0
     b04:	str	r1, [r0, #24]
     b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b0c:	movw	r1, #29
     b10:	str	r1, [r0]
     b14:	b	3168 <coda_inflate+0x2b90>
     b18:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b1c:	ldr	r0, [r0, #16]
     b20:	and	r0, r0, #57344	; 0xe000
     b24:	cmp	r0, #0
     b28:	beq	b4c <coda_inflate+0x574>
     b2c:	ldr	r0, [fp, #-16]
     b30:	movw	r1, #0
     b34:	movt	r1, #0
     b38:	str	r1, [r0, #24]
     b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b40:	movw	r1, #29
     b44:	str	r1, [r0]
     b48:	b	3168 <coda_inflate+0x2b90>
     b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b50:	ldr	r0, [r0, #32]
     b54:	movw	r1, #0
     b58:	cmp	r0, r1
     b5c:	beq	b78 <coda_inflate+0x5a0>
     b60:	ldr	r0, [fp, #-44]	; 0xffffffd4
     b64:	lsr	r0, r0, #8
     b68:	and	r0, r0, #1
     b6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     b70:	ldr	r1, [r1, #32]
     b74:	str	r0, [r1]
     b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b7c:	ldr	r0, [r0, #16]
     b80:	and	r0, r0, #512	; 0x200
     b84:	cmp	r0, #0
     b88:	beq	bc4 <coda_inflate+0x5ec>
     b8c:	b	b90 <coda_inflate+0x5b8>
     b90:	sub	r1, fp, #84	; 0x54
     b94:	ldr	r0, [fp, #-44]	; 0xffffffd4
     b98:	strb	r0, [fp, #-84]	; 0xffffffac
     b9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     ba0:	lsr	r0, r0, #8
     ba4:	strb	r0, [fp, #-83]	; 0xffffffad
     ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     bac:	ldr	r0, [r0, #24]
     bb0:	movw	r2, #2
     bb4:	bl	0 <coda_crc32>
     bb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     bbc:	str	r0, [r1, #24]
     bc0:	b	bc4 <coda_inflate+0x5ec>
     bc4:	b	bc8 <coda_inflate+0x5f0>
     bc8:	movw	r0, #0
     bcc:	str	r0, [fp, #-44]	; 0xffffffd4
     bd0:	str	r0, [fp, #-48]	; 0xffffffd0
     bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     bd8:	movw	r1, #2
     bdc:	str	r1, [r0]
     be0:	b	be4 <coda_inflate+0x60c>
     be4:	b	be8 <coda_inflate+0x610>
     be8:	ldr	r0, [fp, #-48]	; 0xffffffd0
     bec:	cmp	r0, #32
     bf0:	bcs	c4c <coda_inflate+0x674>
     bf4:	b	bf8 <coda_inflate+0x620>
     bf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
     bfc:	cmp	r0, #0
     c00:	bne	c08 <coda_inflate+0x630>
     c04:	b	316c <coda_inflate+0x2b94>
     c08:	ldr	r0, [fp, #-36]	; 0xffffffdc
     c0c:	mvn	r1, #0
     c10:	add	r0, r0, r1
     c14:	str	r0, [fp, #-36]	; 0xffffffdc
     c18:	ldr	r0, [fp, #-28]	; 0xffffffe4
     c1c:	add	r1, r0, #1
     c20:	str	r1, [fp, #-28]	; 0xffffffe4
     c24:	ldrb	r0, [r0]
     c28:	ldr	r1, [fp, #-48]	; 0xffffffd0
     c2c:	lsl	r0, r0, r1
     c30:	ldr	r1, [fp, #-44]	; 0xffffffd4
     c34:	add	r0, r1, r0
     c38:	str	r0, [fp, #-44]	; 0xffffffd4
     c3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     c40:	add	r0, r0, #8
     c44:	str	r0, [fp, #-48]	; 0xffffffd0
     c48:	b	be8 <coda_inflate+0x610>
     c4c:	b	c50 <coda_inflate+0x678>
     c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
     c54:	ldr	r0, [r0, #32]
     c58:	movw	r1, #0
     c5c:	cmp	r0, r1
     c60:	beq	c74 <coda_inflate+0x69c>
     c64:	ldr	r0, [fp, #-44]	; 0xffffffd4
     c68:	ldr	r1, [fp, #-24]	; 0xffffffe8
     c6c:	ldr	r1, [r1, #32]
     c70:	str	r0, [r1, #4]
     c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
     c78:	ldr	r0, [r0, #16]
     c7c:	and	r0, r0, #512	; 0x200
     c80:	cmp	r0, #0
     c84:	beq	cd8 <coda_inflate+0x700>
     c88:	b	c8c <coda_inflate+0x6b4>
     c8c:	sub	r1, fp, #84	; 0x54
     c90:	ldr	r0, [fp, #-44]	; 0xffffffd4
     c94:	strb	r0, [fp, #-84]	; 0xffffffac
     c98:	ldr	r0, [fp, #-44]	; 0xffffffd4
     c9c:	lsr	r0, r0, #8
     ca0:	strb	r0, [fp, #-83]	; 0xffffffad
     ca4:	ldr	r0, [fp, #-44]	; 0xffffffd4
     ca8:	lsr	r0, r0, #16
     cac:	strb	r0, [fp, #-82]	; 0xffffffae
     cb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
     cb4:	lsr	r0, r0, #24
     cb8:	strb	r0, [fp, #-81]	; 0xffffffaf
     cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     cc0:	ldr	r0, [r0, #24]
     cc4:	movw	r2, #4
     cc8:	bl	0 <coda_crc32>
     ccc:	ldr	r1, [fp, #-24]	; 0xffffffe8
     cd0:	str	r0, [r1, #24]
     cd4:	b	cd8 <coda_inflate+0x700>
     cd8:	b	cdc <coda_inflate+0x704>
     cdc:	movw	r0, #0
     ce0:	str	r0, [fp, #-44]	; 0xffffffd4
     ce4:	str	r0, [fp, #-48]	; 0xffffffd0
     ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     cec:	movw	r1, #3
     cf0:	str	r1, [r0]
     cf4:	b	cf8 <coda_inflate+0x720>
     cf8:	b	cfc <coda_inflate+0x724>
     cfc:	ldr	r0, [fp, #-48]	; 0xffffffd0
     d00:	cmp	r0, #16
     d04:	bcs	d60 <coda_inflate+0x788>
     d08:	b	d0c <coda_inflate+0x734>
     d0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
     d10:	cmp	r0, #0
     d14:	bne	d1c <coda_inflate+0x744>
     d18:	b	316c <coda_inflate+0x2b94>
     d1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
     d20:	mvn	r1, #0
     d24:	add	r0, r0, r1
     d28:	str	r0, [fp, #-36]	; 0xffffffdc
     d2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     d30:	add	r1, r0, #1
     d34:	str	r1, [fp, #-28]	; 0xffffffe4
     d38:	ldrb	r0, [r0]
     d3c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     d40:	lsl	r0, r0, r1
     d44:	ldr	r1, [fp, #-44]	; 0xffffffd4
     d48:	add	r0, r1, r0
     d4c:	str	r0, [fp, #-44]	; 0xffffffd4
     d50:	ldr	r0, [fp, #-48]	; 0xffffffd0
     d54:	add	r0, r0, #8
     d58:	str	r0, [fp, #-48]	; 0xffffffd0
     d5c:	b	cfc <coda_inflate+0x724>
     d60:	b	d64 <coda_inflate+0x78c>
     d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d68:	ldr	r0, [r0, #32]
     d6c:	movw	r1, #0
     d70:	cmp	r0, r1
     d74:	beq	da0 <coda_inflate+0x7c8>
     d78:	ldr	r0, [fp, #-44]	; 0xffffffd4
     d7c:	and	r0, r0, #255	; 0xff
     d80:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d84:	ldr	r1, [r1, #32]
     d88:	str	r0, [r1, #8]
     d8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     d90:	lsr	r0, r0, #8
     d94:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d98:	ldr	r1, [r1, #32]
     d9c:	str	r0, [r1, #12]
     da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     da4:	ldr	r0, [r0, #16]
     da8:	and	r0, r0, #512	; 0x200
     dac:	cmp	r0, #0
     db0:	beq	dec <coda_inflate+0x814>
     db4:	b	db8 <coda_inflate+0x7e0>
     db8:	sub	r1, fp, #84	; 0x54
     dbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
     dc0:	strb	r0, [fp, #-84]	; 0xffffffac
     dc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
     dc8:	lsr	r0, r0, #8
     dcc:	strb	r0, [fp, #-83]	; 0xffffffad
     dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     dd4:	ldr	r0, [r0, #24]
     dd8:	movw	r2, #2
     ddc:	bl	0 <coda_crc32>
     de0:	ldr	r1, [fp, #-24]	; 0xffffffe8
     de4:	str	r0, [r1, #24]
     de8:	b	dec <coda_inflate+0x814>
     dec:	b	df0 <coda_inflate+0x818>
     df0:	movw	r0, #0
     df4:	str	r0, [fp, #-44]	; 0xffffffd4
     df8:	str	r0, [fp, #-48]	; 0xffffffd0
     dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e00:	movw	r1, #4
     e04:	str	r1, [r0]
     e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e0c:	ldr	r0, [r0, #16]
     e10:	and	r0, r0, #1024	; 0x400
     e14:	cmp	r0, #0
     e18:	beq	f1c <coda_inflate+0x944>
     e1c:	b	e20 <coda_inflate+0x848>
     e20:	b	e24 <coda_inflate+0x84c>
     e24:	ldr	r0, [fp, #-48]	; 0xffffffd0
     e28:	cmp	r0, #16
     e2c:	bcs	e88 <coda_inflate+0x8b0>
     e30:	b	e34 <coda_inflate+0x85c>
     e34:	ldr	r0, [fp, #-36]	; 0xffffffdc
     e38:	cmp	r0, #0
     e3c:	bne	e44 <coda_inflate+0x86c>
     e40:	b	316c <coda_inflate+0x2b94>
     e44:	ldr	r0, [fp, #-36]	; 0xffffffdc
     e48:	mvn	r1, #0
     e4c:	add	r0, r0, r1
     e50:	str	r0, [fp, #-36]	; 0xffffffdc
     e54:	ldr	r0, [fp, #-28]	; 0xffffffe4
     e58:	add	r1, r0, #1
     e5c:	str	r1, [fp, #-28]	; 0xffffffe4
     e60:	ldrb	r0, [r0]
     e64:	ldr	r1, [fp, #-48]	; 0xffffffd0
     e68:	lsl	r0, r0, r1
     e6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
     e70:	add	r0, r1, r0
     e74:	str	r0, [fp, #-44]	; 0xffffffd4
     e78:	ldr	r0, [fp, #-48]	; 0xffffffd0
     e7c:	add	r0, r0, #8
     e80:	str	r0, [fp, #-48]	; 0xffffffd0
     e84:	b	e24 <coda_inflate+0x84c>
     e88:	b	e8c <coda_inflate+0x8b4>
     e8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     e90:	ldr	r1, [fp, #-24]	; 0xffffffe8
     e94:	str	r0, [r1, #64]	; 0x40
     e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e9c:	ldr	r0, [r0, #32]
     ea0:	movw	r1, #0
     ea4:	cmp	r0, r1
     ea8:	beq	ebc <coda_inflate+0x8e4>
     eac:	ldr	r0, [fp, #-44]	; 0xffffffd4
     eb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
     eb4:	ldr	r1, [r1, #32]
     eb8:	str	r0, [r1, #20]
     ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ec0:	ldr	r0, [r0, #16]
     ec4:	and	r0, r0, #512	; 0x200
     ec8:	cmp	r0, #0
     ecc:	beq	f08 <coda_inflate+0x930>
     ed0:	b	ed4 <coda_inflate+0x8fc>
     ed4:	sub	r1, fp, #84	; 0x54
     ed8:	ldr	r0, [fp, #-44]	; 0xffffffd4
     edc:	strb	r0, [fp, #-84]	; 0xffffffac
     ee0:	ldr	r0, [fp, #-44]	; 0xffffffd4
     ee4:	lsr	r0, r0, #8
     ee8:	strb	r0, [fp, #-83]	; 0xffffffad
     eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ef0:	ldr	r0, [r0, #24]
     ef4:	movw	r2, #2
     ef8:	bl	0 <coda_crc32>
     efc:	ldr	r1, [fp, #-24]	; 0xffffffe8
     f00:	str	r0, [r1, #24]
     f04:	b	f08 <coda_inflate+0x930>
     f08:	b	f0c <coda_inflate+0x934>
     f0c:	movw	r0, #0
     f10:	str	r0, [fp, #-44]	; 0xffffffd4
     f14:	str	r0, [fp, #-48]	; 0xffffffd0
     f18:	b	f44 <coda_inflate+0x96c>
     f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f20:	ldr	r0, [r0, #32]
     f24:	movw	r1, #0
     f28:	cmp	r0, r1
     f2c:	beq	f40 <coda_inflate+0x968>
     f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f34:	ldr	r0, [r0, #32]
     f38:	movw	r1, #0
     f3c:	str	r1, [r0, #16]
     f40:	b	f44 <coda_inflate+0x96c>
     f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f48:	movw	r1, #5
     f4c:	str	r1, [r0]
     f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f54:	ldr	r0, [r0, #16]
     f58:	and	r0, r0, #1024	; 0x400
     f5c:	cmp	r0, #0
     f60:	beq	10d8 <coda_inflate+0xb00>
     f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f68:	ldr	r0, [r0, #64]	; 0x40
     f6c:	str	r0, [fp, #-60]	; 0xffffffc4
     f70:	ldr	r0, [fp, #-60]	; 0xffffffc4
     f74:	ldr	r1, [fp, #-36]	; 0xffffffdc
     f78:	cmp	r0, r1
     f7c:	bls	f88 <coda_inflate+0x9b0>
     f80:	ldr	r0, [fp, #-36]	; 0xffffffdc
     f84:	str	r0, [fp, #-60]	; 0xffffffc4
     f88:	ldr	r0, [fp, #-60]	; 0xffffffc4
     f8c:	cmp	r0, #0
     f90:	beq	10c0 <coda_inflate+0xae8>
     f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f98:	ldr	r0, [r0, #32]
     f9c:	movw	r1, #0
     fa0:	cmp	r0, r1
     fa4:	beq	105c <coda_inflate+0xa84>
     fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     fac:	ldr	r0, [r0, #32]
     fb0:	ldr	r0, [r0, #16]
     fb4:	movw	r1, #0
     fb8:	cmp	r0, r1
     fbc:	beq	105c <coda_inflate+0xa84>
     fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     fc4:	ldr	r0, [r0, #32]
     fc8:	ldr	r0, [r0, #20]
     fcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
     fd0:	ldr	r1, [r1, #64]	; 0x40
     fd4:	sub	r0, r0, r1
     fd8:	str	r0, [fp, #-76]	; 0xffffffb4
     fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     fe0:	ldr	r0, [r0, #32]
     fe4:	ldr	r0, [r0, #16]
     fe8:	ldr	r1, [fp, #-76]	; 0xffffffb4
     fec:	add	r0, r0, r1
     ff0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     ff4:	ldr	r2, [fp, #-76]	; 0xffffffb4
     ff8:	ldr	r3, [fp, #-60]	; 0xffffffc4
     ffc:	add	r2, r2, r3
    1000:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1004:	ldr	r3, [r3, #32]
    1008:	ldr	r3, [r3, #24]
    100c:	cmp	r2, r3
    1010:	str	r0, [sp, #80]	; 0x50
    1014:	str	r1, [sp, #76]	; 0x4c
    1018:	bls	1038 <coda_inflate+0xa60>
    101c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1020:	ldr	r0, [r0, #32]
    1024:	ldr	r0, [r0, #24]
    1028:	ldr	r1, [fp, #-76]	; 0xffffffb4
    102c:	sub	r0, r0, r1
    1030:	str	r0, [sp, #72]	; 0x48
    1034:	b	1040 <coda_inflate+0xa68>
    1038:	ldr	r0, [fp, #-60]	; 0xffffffc4
    103c:	str	r0, [sp, #72]	; 0x48
    1040:	ldr	r0, [sp, #72]	; 0x48
    1044:	ldr	r1, [sp, #80]	; 0x50
    1048:	str	r0, [sp, #68]	; 0x44
    104c:	mov	r0, r1
    1050:	ldr	r1, [sp, #76]	; 0x4c
    1054:	ldr	r2, [sp, #68]	; 0x44
    1058:	bl	0 <memcpy>
    105c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1060:	ldr	r0, [r0, #16]
    1064:	and	r0, r0, #512	; 0x200
    1068:	cmp	r0, #0
    106c:	beq	108c <coda_inflate+0xab4>
    1070:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1074:	ldr	r0, [r0, #24]
    1078:	ldr	r1, [fp, #-28]	; 0xffffffe4
    107c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1080:	bl	0 <coda_crc32>
    1084:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1088:	str	r0, [r1, #24]
    108c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1090:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1094:	sub	r0, r1, r0
    1098:	str	r0, [fp, #-36]	; 0xffffffdc
    109c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    10a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    10a4:	add	r0, r1, r0
    10a8:	str	r0, [fp, #-28]	; 0xffffffe4
    10ac:	ldr	r0, [fp, #-60]	; 0xffffffc4
    10b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    10b4:	ldr	r2, [r1, #64]	; 0x40
    10b8:	sub	r0, r2, r0
    10bc:	str	r0, [r1, #64]	; 0x40
    10c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    10c4:	ldr	r0, [r0, #64]	; 0x40
    10c8:	cmp	r0, #0
    10cc:	beq	10d4 <coda_inflate+0xafc>
    10d0:	b	316c <coda_inflate+0x2b94>
    10d4:	b	10d8 <coda_inflate+0xb00>
    10d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    10dc:	movw	r1, #0
    10e0:	str	r1, [r0, #64]	; 0x40
    10e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    10e8:	movw	r1, #6
    10ec:	str	r1, [r0]
    10f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    10f4:	ldr	r0, [r0, #16]
    10f8:	and	r0, r0, #2048	; 0x800
    10fc:	cmp	r0, #0
    1100:	beq	1248 <coda_inflate+0xc70>
    1104:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1108:	cmp	r0, #0
    110c:	bne	1114 <coda_inflate+0xb3c>
    1110:	b	316c <coda_inflate+0x2b94>
    1114:	movw	r0, #0
    1118:	str	r0, [fp, #-60]	; 0xffffffc4
    111c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1120:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1124:	add	r2, r1, #1
    1128:	str	r2, [fp, #-60]	; 0xffffffc4
    112c:	add	r0, r0, r1
    1130:	ldrb	r0, [r0]
    1134:	str	r0, [fp, #-76]	; 0xffffffb4
    1138:	ldr	r0, [fp, #-24]	; 0xffffffe8
    113c:	ldr	r0, [r0, #32]
    1140:	movw	r1, #0
    1144:	cmp	r0, r1
    1148:	beq	11a8 <coda_inflate+0xbd0>
    114c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1150:	ldr	r0, [r0, #32]
    1154:	ldr	r0, [r0, #28]
    1158:	movw	r1, #0
    115c:	cmp	r0, r1
    1160:	beq	11a8 <coda_inflate+0xbd0>
    1164:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1168:	ldr	r0, [r0, #64]	; 0x40
    116c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1170:	ldr	r1, [r1, #32]
    1174:	ldr	r1, [r1, #32]
    1178:	cmp	r0, r1
    117c:	bcs	11a8 <coda_inflate+0xbd0>
    1180:	ldr	r0, [fp, #-76]	; 0xffffffb4
    1184:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1188:	ldr	r1, [r1, #32]
    118c:	ldr	r1, [r1, #28]
    1190:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1194:	ldr	r3, [r2, #64]	; 0x40
    1198:	add	ip, r3, #1
    119c:	str	ip, [r2, #64]	; 0x40
    11a0:	add	r1, r1, r3
    11a4:	strb	r0, [r1]
    11a8:	b	11ac <coda_inflate+0xbd4>
    11ac:	ldr	r0, [fp, #-76]	; 0xffffffb4
    11b0:	cmp	r0, #0
    11b4:	movw	r0, #0
    11b8:	str	r0, [sp, #64]	; 0x40
    11bc:	beq	11d8 <coda_inflate+0xc00>
    11c0:	ldr	r0, [fp, #-60]	; 0xffffffc4
    11c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    11c8:	cmp	r0, r1
    11cc:	movw	r0, #0
    11d0:	movcc	r0, #1
    11d4:	str	r0, [sp, #64]	; 0x40
    11d8:	ldr	r0, [sp, #64]	; 0x40
    11dc:	tst	r0, #1
    11e0:	bne	111c <coda_inflate+0xb44>
    11e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    11e8:	ldr	r0, [r0, #16]
    11ec:	and	r0, r0, #512	; 0x200
    11f0:	cmp	r0, #0
    11f4:	beq	1214 <coda_inflate+0xc3c>
    11f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    11fc:	ldr	r0, [r0, #24]
    1200:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1204:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1208:	bl	0 <coda_crc32>
    120c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1210:	str	r0, [r1, #24]
    1214:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1218:	ldr	r1, [fp, #-36]	; 0xffffffdc
    121c:	sub	r0, r1, r0
    1220:	str	r0, [fp, #-36]	; 0xffffffdc
    1224:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1228:	ldr	r1, [fp, #-28]	; 0xffffffe4
    122c:	add	r0, r1, r0
    1230:	str	r0, [fp, #-28]	; 0xffffffe4
    1234:	ldr	r0, [fp, #-76]	; 0xffffffb4
    1238:	cmp	r0, #0
    123c:	beq	1244 <coda_inflate+0xc6c>
    1240:	b	316c <coda_inflate+0x2b94>
    1244:	b	1270 <coda_inflate+0xc98>
    1248:	ldr	r0, [fp, #-24]	; 0xffffffe8
    124c:	ldr	r0, [r0, #32]
    1250:	movw	r1, #0
    1254:	cmp	r0, r1
    1258:	beq	126c <coda_inflate+0xc94>
    125c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1260:	ldr	r0, [r0, #32]
    1264:	movw	r1, #0
    1268:	str	r1, [r0, #28]
    126c:	b	1270 <coda_inflate+0xc98>
    1270:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1274:	movw	r1, #0
    1278:	str	r1, [r0, #64]	; 0x40
    127c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1280:	movw	r1, #7
    1284:	str	r1, [r0]
    1288:	ldr	r0, [fp, #-24]	; 0xffffffe8
    128c:	ldr	r0, [r0, #16]
    1290:	and	r0, r0, #4096	; 0x1000
    1294:	cmp	r0, #0
    1298:	beq	13e0 <coda_inflate+0xe08>
    129c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    12a0:	cmp	r0, #0
    12a4:	bne	12ac <coda_inflate+0xcd4>
    12a8:	b	316c <coda_inflate+0x2b94>
    12ac:	movw	r0, #0
    12b0:	str	r0, [fp, #-60]	; 0xffffffc4
    12b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    12b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    12bc:	add	r2, r1, #1
    12c0:	str	r2, [fp, #-60]	; 0xffffffc4
    12c4:	add	r0, r0, r1
    12c8:	ldrb	r0, [r0]
    12cc:	str	r0, [fp, #-76]	; 0xffffffb4
    12d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    12d4:	ldr	r0, [r0, #32]
    12d8:	movw	r1, #0
    12dc:	cmp	r0, r1
    12e0:	beq	1340 <coda_inflate+0xd68>
    12e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    12e8:	ldr	r0, [r0, #32]
    12ec:	ldr	r0, [r0, #36]	; 0x24
    12f0:	movw	r1, #0
    12f4:	cmp	r0, r1
    12f8:	beq	1340 <coda_inflate+0xd68>
    12fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1300:	ldr	r0, [r0, #64]	; 0x40
    1304:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1308:	ldr	r1, [r1, #32]
    130c:	ldr	r1, [r1, #40]	; 0x28
    1310:	cmp	r0, r1
    1314:	bcs	1340 <coda_inflate+0xd68>
    1318:	ldr	r0, [fp, #-76]	; 0xffffffb4
    131c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1320:	ldr	r1, [r1, #32]
    1324:	ldr	r1, [r1, #36]	; 0x24
    1328:	ldr	r2, [fp, #-24]	; 0xffffffe8
    132c:	ldr	r3, [r2, #64]	; 0x40
    1330:	add	ip, r3, #1
    1334:	str	ip, [r2, #64]	; 0x40
    1338:	add	r1, r1, r3
    133c:	strb	r0, [r1]
    1340:	b	1344 <coda_inflate+0xd6c>
    1344:	ldr	r0, [fp, #-76]	; 0xffffffb4
    1348:	cmp	r0, #0
    134c:	movw	r0, #0
    1350:	str	r0, [sp, #60]	; 0x3c
    1354:	beq	1370 <coda_inflate+0xd98>
    1358:	ldr	r0, [fp, #-60]	; 0xffffffc4
    135c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1360:	cmp	r0, r1
    1364:	movw	r0, #0
    1368:	movcc	r0, #1
    136c:	str	r0, [sp, #60]	; 0x3c
    1370:	ldr	r0, [sp, #60]	; 0x3c
    1374:	tst	r0, #1
    1378:	bne	12b4 <coda_inflate+0xcdc>
    137c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1380:	ldr	r0, [r0, #16]
    1384:	and	r0, r0, #512	; 0x200
    1388:	cmp	r0, #0
    138c:	beq	13ac <coda_inflate+0xdd4>
    1390:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1394:	ldr	r0, [r0, #24]
    1398:	ldr	r1, [fp, #-28]	; 0xffffffe4
    139c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    13a0:	bl	0 <coda_crc32>
    13a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    13a8:	str	r0, [r1, #24]
    13ac:	ldr	r0, [fp, #-60]	; 0xffffffc4
    13b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    13b4:	sub	r0, r1, r0
    13b8:	str	r0, [fp, #-36]	; 0xffffffdc
    13bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
    13c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    13c4:	add	r0, r1, r0
    13c8:	str	r0, [fp, #-28]	; 0xffffffe4
    13cc:	ldr	r0, [fp, #-76]	; 0xffffffb4
    13d0:	cmp	r0, #0
    13d4:	beq	13dc <coda_inflate+0xe04>
    13d8:	b	316c <coda_inflate+0x2b94>
    13dc:	b	1408 <coda_inflate+0xe30>
    13e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13e4:	ldr	r0, [r0, #32]
    13e8:	movw	r1, #0
    13ec:	cmp	r0, r1
    13f0:	beq	1404 <coda_inflate+0xe2c>
    13f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13f8:	ldr	r0, [r0, #32]
    13fc:	movw	r1, #0
    1400:	str	r1, [r0, #36]	; 0x24
    1404:	b	1408 <coda_inflate+0xe30>
    1408:	ldr	r0, [fp, #-24]	; 0xffffffe8
    140c:	movw	r1, #8
    1410:	str	r1, [r0]
    1414:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1418:	ldr	r0, [r0, #16]
    141c:	and	r0, r0, #512	; 0x200
    1420:	cmp	r0, #0
    1424:	beq	14e8 <coda_inflate+0xf10>
    1428:	b	142c <coda_inflate+0xe54>
    142c:	b	1430 <coda_inflate+0xe58>
    1430:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1434:	cmp	r0, #16
    1438:	bcs	1494 <coda_inflate+0xebc>
    143c:	b	1440 <coda_inflate+0xe68>
    1440:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1444:	cmp	r0, #0
    1448:	bne	1450 <coda_inflate+0xe78>
    144c:	b	316c <coda_inflate+0x2b94>
    1450:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1454:	mvn	r1, #0
    1458:	add	r0, r0, r1
    145c:	str	r0, [fp, #-36]	; 0xffffffdc
    1460:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1464:	add	r1, r0, #1
    1468:	str	r1, [fp, #-28]	; 0xffffffe4
    146c:	ldrb	r0, [r0]
    1470:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1474:	lsl	r0, r0, r1
    1478:	ldr	r1, [fp, #-44]	; 0xffffffd4
    147c:	add	r0, r1, r0
    1480:	str	r0, [fp, #-44]	; 0xffffffd4
    1484:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1488:	add	r0, r0, #8
    148c:	str	r0, [fp, #-48]	; 0xffffffd0
    1490:	b	1430 <coda_inflate+0xe58>
    1494:	b	1498 <coda_inflate+0xec0>
    1498:	ldr	r0, [fp, #-44]	; 0xffffffd4
    149c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    14a0:	ldr	r1, [r1, #24]
    14a4:	movw	r2, #65535	; 0xffff
    14a8:	and	r1, r1, r2
    14ac:	cmp	r0, r1
    14b0:	beq	14d4 <coda_inflate+0xefc>
    14b4:	ldr	r0, [fp, #-16]
    14b8:	movw	r1, #0
    14bc:	movt	r1, #0
    14c0:	str	r1, [r0, #24]
    14c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    14c8:	movw	r1, #29
    14cc:	str	r1, [r0]
    14d0:	b	3168 <coda_inflate+0x2b90>
    14d4:	b	14d8 <coda_inflate+0xf00>
    14d8:	movw	r0, #0
    14dc:	str	r0, [fp, #-44]	; 0xffffffd4
    14e0:	str	r0, [fp, #-48]	; 0xffffffd0
    14e4:	b	14e8 <coda_inflate+0xf10>
    14e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    14ec:	ldr	r0, [r0, #32]
    14f0:	movw	r1, #0
    14f4:	cmp	r0, r1
    14f8:	beq	1528 <coda_inflate+0xf50>
    14fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1500:	ldr	r0, [r0, #16]
    1504:	asr	r0, r0, #9
    1508:	and	r0, r0, #1
    150c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1510:	ldr	r1, [r1, #32]
    1514:	str	r0, [r1, #44]	; 0x2c
    1518:	ldr	r0, [fp, #-24]	; 0xffffffe8
    151c:	ldr	r0, [r0, #32]
    1520:	movw	r1, #1
    1524:	str	r1, [r0, #48]	; 0x30
    1528:	movw	r0, #0
    152c:	str	r0, [sp, #56]	; 0x38
    1530:	ldr	r1, [sp, #56]	; 0x38
    1534:	ldr	r2, [sp, #56]	; 0x38
    1538:	bl	0 <coda_crc32>
    153c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1540:	str	r0, [r1, #24]
    1544:	ldr	r1, [fp, #-16]
    1548:	str	r0, [r1, #48]	; 0x30
    154c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1550:	movw	r1, #11
    1554:	str	r1, [r0]
    1558:	b	3168 <coda_inflate+0x2b90>
    155c:	b	1560 <coda_inflate+0xf88>
    1560:	b	1564 <coda_inflate+0xf8c>
    1564:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1568:	cmp	r0, #32
    156c:	bcs	15c8 <coda_inflate+0xff0>
    1570:	b	1574 <coda_inflate+0xf9c>
    1574:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1578:	cmp	r0, #0
    157c:	bne	1584 <coda_inflate+0xfac>
    1580:	b	316c <coda_inflate+0x2b94>
    1584:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1588:	mvn	r1, #0
    158c:	add	r0, r0, r1
    1590:	str	r0, [fp, #-36]	; 0xffffffdc
    1594:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1598:	add	r1, r0, #1
    159c:	str	r1, [fp, #-28]	; 0xffffffe4
    15a0:	ldrb	r0, [r0]
    15a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    15a8:	lsl	r0, r0, r1
    15ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
    15b0:	add	r0, r1, r0
    15b4:	str	r0, [fp, #-44]	; 0xffffffd4
    15b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    15bc:	add	r0, r0, #8
    15c0:	str	r0, [fp, #-48]	; 0xffffffd0
    15c4:	b	1564 <coda_inflate+0xf8c>
    15c8:	b	15cc <coda_inflate+0xff4>
    15cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    15d0:	lsr	r0, r0, #24
    15d4:	and	r0, r0, #255	; 0xff
    15d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    15dc:	lsr	r1, r1, #8
    15e0:	and	r1, r1, #65280	; 0xff00
    15e4:	add	r0, r0, r1
    15e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    15ec:	and	r1, r1, #65280	; 0xff00
    15f0:	lsl	r1, r1, #8
    15f4:	add	r0, r0, r1
    15f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    15fc:	and	r1, r1, #255	; 0xff
    1600:	lsl	r1, r1, #24
    1604:	add	r0, r0, r1
    1608:	ldr	r1, [fp, #-24]	; 0xffffffe8
    160c:	str	r0, [r1, #24]
    1610:	ldr	r1, [fp, #-16]
    1614:	str	r0, [r1, #48]	; 0x30
    1618:	movw	r0, #0
    161c:	str	r0, [fp, #-44]	; 0xffffffd4
    1620:	str	r0, [fp, #-48]	; 0xffffffd0
    1624:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1628:	movw	r1, #10
    162c:	str	r1, [r0]
    1630:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1634:	ldr	r0, [r0, #12]
    1638:	cmp	r0, #0
    163c:	bne	1698 <coda_inflate+0x10c0>
    1640:	b	1644 <coda_inflate+0x106c>
    1644:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1648:	ldr	r1, [fp, #-16]
    164c:	str	r0, [r1, #12]
    1650:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1654:	ldr	r1, [fp, #-16]
    1658:	str	r0, [r1, #16]
    165c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1660:	ldr	r1, [fp, #-16]
    1664:	str	r0, [r1]
    1668:	ldr	r0, [fp, #-36]	; 0xffffffdc
    166c:	ldr	r1, [fp, #-16]
    1670:	str	r0, [r1, #4]
    1674:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1678:	ldr	r1, [fp, #-24]	; 0xffffffe8
    167c:	str	r0, [r1, #56]	; 0x38
    1680:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1684:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1688:	str	r0, [r1, #60]	; 0x3c
    168c:	movw	r0, #2
    1690:	str	r0, [fp, #-12]
    1694:	b	3430 <coda_inflate+0x2e58>
    1698:	movw	r0, #0
    169c:	str	r0, [sp, #52]	; 0x34
    16a0:	ldr	r1, [sp, #52]	; 0x34
    16a4:	ldr	r2, [sp, #52]	; 0x34
    16a8:	bl	0 <coda_adler32>
    16ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    16b0:	str	r0, [r1, #24]
    16b4:	ldr	r1, [fp, #-16]
    16b8:	str	r0, [r1, #48]	; 0x30
    16bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    16c0:	movw	r1, #11
    16c4:	str	r1, [r0]
    16c8:	ldr	r0, [fp, #-20]	; 0xffffffec
    16cc:	cmp	r0, #5
    16d0:	beq	16e0 <coda_inflate+0x1108>
    16d4:	ldr	r0, [fp, #-20]	; 0xffffffec
    16d8:	cmp	r0, #6
    16dc:	bne	16e4 <coda_inflate+0x110c>
    16e0:	b	316c <coda_inflate+0x2b94>
    16e4:	b	16e8 <coda_inflate+0x1110>
    16e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    16ec:	ldr	r0, [r0, #4]
    16f0:	cmp	r0, #0
    16f4:	beq	1734 <coda_inflate+0x115c>
    16f8:	b	16fc <coda_inflate+0x1124>
    16fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1700:	and	r0, r0, #7
    1704:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1708:	lsr	r0, r1, r0
    170c:	str	r0, [fp, #-44]	; 0xffffffd4
    1710:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1714:	and	r0, r0, #7
    1718:	ldr	r1, [fp, #-48]	; 0xffffffd0
    171c:	sub	r0, r1, r0
    1720:	str	r0, [fp, #-48]	; 0xffffffd0
    1724:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1728:	movw	r1, #26
    172c:	str	r1, [r0]
    1730:	b	3168 <coda_inflate+0x2b90>
    1734:	b	1738 <coda_inflate+0x1160>
    1738:	b	173c <coda_inflate+0x1164>
    173c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1740:	cmp	r0, #3
    1744:	bcs	17a0 <coda_inflate+0x11c8>
    1748:	b	174c <coda_inflate+0x1174>
    174c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1750:	cmp	r0, #0
    1754:	bne	175c <coda_inflate+0x1184>
    1758:	b	316c <coda_inflate+0x2b94>
    175c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1760:	mvn	r1, #0
    1764:	add	r0, r0, r1
    1768:	str	r0, [fp, #-36]	; 0xffffffdc
    176c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1770:	add	r1, r0, #1
    1774:	str	r1, [fp, #-28]	; 0xffffffe4
    1778:	ldrb	r0, [r0]
    177c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1780:	lsl	r0, r0, r1
    1784:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1788:	add	r0, r1, r0
    178c:	str	r0, [fp, #-44]	; 0xffffffd4
    1790:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1794:	add	r0, r0, #8
    1798:	str	r0, [fp, #-48]	; 0xffffffd0
    179c:	b	173c <coda_inflate+0x1164>
    17a0:	b	17a4 <coda_inflate+0x11cc>
    17a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    17a8:	and	r0, r0, #1
    17ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    17b0:	str	r0, [r1, #4]
    17b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    17b8:	lsr	r0, r0, #1
    17bc:	str	r0, [fp, #-44]	; 0xffffffd4
    17c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    17c4:	sub	r0, r0, #1
    17c8:	str	r0, [fp, #-48]	; 0xffffffd0
    17cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    17d0:	and	r0, r0, #3
    17d4:	cmp	r0, #3
    17d8:	str	r0, [sp, #48]	; 0x30
    17dc:	bhi	1880 <coda_inflate+0x12a8>
    17e0:	add	r0, pc, #8
    17e4:	ldr	r1, [sp, #48]	; 0x30
    17e8:	ldr	r0, [r0, r1, lsl #2]
    17ec:	mov	pc, r0
    17f0:	.word	0x00001800
    17f4:	.word	0x00001810
    17f8:	.word	0x00001854
    17fc:	.word	0x00001864
    1800:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1804:	movw	r1, #13
    1808:	str	r1, [r0]
    180c:	b	1880 <coda_inflate+0x12a8>
    1810:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1814:	bl	343c <fixedtables>
    1818:	ldr	r0, [fp, #-24]	; 0xffffffe8
    181c:	movw	lr, #19
    1820:	str	lr, [r0]
    1824:	ldr	r0, [fp, #-20]	; 0xffffffec
    1828:	cmp	r0, #6
    182c:	bne	1850 <coda_inflate+0x1278>
    1830:	b	1834 <coda_inflate+0x125c>
    1834:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1838:	lsr	r0, r0, #2
    183c:	str	r0, [fp, #-44]	; 0xffffffd4
    1840:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1844:	sub	r0, r0, #2
    1848:	str	r0, [fp, #-48]	; 0xffffffd0
    184c:	b	316c <coda_inflate+0x2b94>
    1850:	b	1880 <coda_inflate+0x12a8>
    1854:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1858:	movw	r1, #16
    185c:	str	r1, [r0]
    1860:	b	1880 <coda_inflate+0x12a8>
    1864:	ldr	r0, [fp, #-16]
    1868:	movw	r1, #0
    186c:	movt	r1, #0
    1870:	str	r1, [r0, #24]
    1874:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1878:	movw	r1, #29
    187c:	str	r1, [r0]
    1880:	b	1884 <coda_inflate+0x12ac>
    1884:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1888:	lsr	r0, r0, #2
    188c:	str	r0, [fp, #-44]	; 0xffffffd4
    1890:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1894:	sub	r0, r0, #2
    1898:	str	r0, [fp, #-48]	; 0xffffffd0
    189c:	b	3168 <coda_inflate+0x2b90>
    18a0:	b	18a4 <coda_inflate+0x12cc>
    18a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18a8:	and	r0, r0, #7
    18ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
    18b0:	lsr	r0, r1, r0
    18b4:	str	r0, [fp, #-44]	; 0xffffffd4
    18b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18bc:	and	r0, r0, #7
    18c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    18c4:	sub	r0, r1, r0
    18c8:	str	r0, [fp, #-48]	; 0xffffffd0
    18cc:	b	18d0 <coda_inflate+0x12f8>
    18d0:	b	18d4 <coda_inflate+0x12fc>
    18d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18d8:	cmp	r0, #32
    18dc:	bcs	1938 <coda_inflate+0x1360>
    18e0:	b	18e4 <coda_inflate+0x130c>
    18e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    18e8:	cmp	r0, #0
    18ec:	bne	18f4 <coda_inflate+0x131c>
    18f0:	b	316c <coda_inflate+0x2b94>
    18f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    18f8:	mvn	r1, #0
    18fc:	add	r0, r0, r1
    1900:	str	r0, [fp, #-36]	; 0xffffffdc
    1904:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1908:	add	r1, r0, #1
    190c:	str	r1, [fp, #-28]	; 0xffffffe4
    1910:	ldrb	r0, [r0]
    1914:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1918:	lsl	r0, r0, r1
    191c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1920:	add	r0, r1, r0
    1924:	str	r0, [fp, #-44]	; 0xffffffd4
    1928:	ldr	r0, [fp, #-48]	; 0xffffffd0
    192c:	add	r0, r0, #8
    1930:	str	r0, [fp, #-48]	; 0xffffffd0
    1934:	b	18d4 <coda_inflate+0x12fc>
    1938:	b	193c <coda_inflate+0x1364>
    193c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1940:	movw	r1, #65535	; 0xffff
    1944:	and	r0, r0, r1
    1948:	ldr	r2, [fp, #-44]	; 0xffffffd4
    194c:	lsr	r2, r2, #16
    1950:	eor	r1, r2, r1
    1954:	cmp	r0, r1
    1958:	beq	197c <coda_inflate+0x13a4>
    195c:	ldr	r0, [fp, #-16]
    1960:	movw	r1, #0
    1964:	movt	r1, #0
    1968:	str	r1, [r0, #24]
    196c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1970:	movw	r1, #29
    1974:	str	r1, [r0]
    1978:	b	3168 <coda_inflate+0x2b90>
    197c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1980:	movw	r1, #65535	; 0xffff
    1984:	and	r0, r0, r1
    1988:	ldr	r1, [fp, #-24]	; 0xffffffe8
    198c:	str	r0, [r1, #64]	; 0x40
    1990:	movw	r0, #0
    1994:	str	r0, [fp, #-44]	; 0xffffffd4
    1998:	str	r0, [fp, #-48]	; 0xffffffd0
    199c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    19a0:	movw	r1, #14
    19a4:	str	r1, [r0]
    19a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    19ac:	cmp	r0, #6
    19b0:	bne	19b8 <coda_inflate+0x13e0>
    19b4:	b	316c <coda_inflate+0x2b94>
    19b8:	b	19bc <coda_inflate+0x13e4>
    19bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    19c0:	movw	r1, #15
    19c4:	str	r1, [r0]
    19c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    19cc:	ldr	r0, [r0, #64]	; 0x40
    19d0:	str	r0, [fp, #-60]	; 0xffffffc4
    19d4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    19d8:	cmp	r0, #0
    19dc:	beq	1a88 <coda_inflate+0x14b0>
    19e0:	ldr	r0, [fp, #-60]	; 0xffffffc4
    19e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    19e8:	cmp	r0, r1
    19ec:	bls	19f8 <coda_inflate+0x1420>
    19f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    19f4:	str	r0, [fp, #-60]	; 0xffffffc4
    19f8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    19fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1a00:	cmp	r0, r1
    1a04:	bls	1a10 <coda_inflate+0x1438>
    1a08:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1a0c:	str	r0, [fp, #-60]	; 0xffffffc4
    1a10:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1a14:	cmp	r0, #0
    1a18:	bne	1a20 <coda_inflate+0x1448>
    1a1c:	b	316c <coda_inflate+0x2b94>
    1a20:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1a24:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1a28:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1a2c:	bl	0 <memcpy>
    1a30:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1a34:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1a38:	sub	r0, r1, r0
    1a3c:	str	r0, [fp, #-36]	; 0xffffffdc
    1a40:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1a44:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1a48:	add	r0, r1, r0
    1a4c:	str	r0, [fp, #-28]	; 0xffffffe4
    1a50:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1a54:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1a58:	sub	r0, r1, r0
    1a5c:	str	r0, [fp, #-40]	; 0xffffffd8
    1a60:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1a64:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1a68:	add	r0, r1, r0
    1a6c:	str	r0, [fp, #-32]	; 0xffffffe0
    1a70:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1a74:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1a78:	ldr	r2, [r1, #64]	; 0x40
    1a7c:	sub	r0, r2, r0
    1a80:	str	r0, [r1, #64]	; 0x40
    1a84:	b	3168 <coda_inflate+0x2b90>
    1a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1a8c:	movw	r1, #11
    1a90:	str	r1, [r0]
    1a94:	b	3168 <coda_inflate+0x2b90>
    1a98:	b	1a9c <coda_inflate+0x14c4>
    1a9c:	b	1aa0 <coda_inflate+0x14c8>
    1aa0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1aa4:	cmp	r0, #14
    1aa8:	bcs	1b04 <coda_inflate+0x152c>
    1aac:	b	1ab0 <coda_inflate+0x14d8>
    1ab0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1ab4:	cmp	r0, #0
    1ab8:	bne	1ac0 <coda_inflate+0x14e8>
    1abc:	b	316c <coda_inflate+0x2b94>
    1ac0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1ac4:	mvn	r1, #0
    1ac8:	add	r0, r0, r1
    1acc:	str	r0, [fp, #-36]	; 0xffffffdc
    1ad0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1ad4:	add	r1, r0, #1
    1ad8:	str	r1, [fp, #-28]	; 0xffffffe4
    1adc:	ldrb	r0, [r0]
    1ae0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1ae4:	lsl	r0, r0, r1
    1ae8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1aec:	add	r0, r1, r0
    1af0:	str	r0, [fp, #-44]	; 0xffffffd4
    1af4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1af8:	add	r0, r0, #8
    1afc:	str	r0, [fp, #-48]	; 0xffffffd0
    1b00:	b	1aa0 <coda_inflate+0x14c8>
    1b04:	b	1b08 <coda_inflate+0x1530>
    1b08:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1b0c:	and	r0, r0, #31
    1b10:	movw	r1, #257	; 0x101
    1b14:	add	r0, r0, r1
    1b18:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1b1c:	str	r0, [r1, #96]	; 0x60
    1b20:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1b24:	lsr	r0, r0, #5
    1b28:	str	r0, [fp, #-44]	; 0xffffffd4
    1b2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1b30:	sub	r0, r0, #5
    1b34:	str	r0, [fp, #-48]	; 0xffffffd0
    1b38:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1b3c:	and	r0, r0, #31
    1b40:	add	r0, r0, #1
    1b44:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1b48:	str	r0, [r1, #100]	; 0x64
    1b4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1b50:	lsr	r0, r0, #5
    1b54:	str	r0, [fp, #-44]	; 0xffffffd4
    1b58:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1b5c:	sub	r0, r0, #5
    1b60:	str	r0, [fp, #-48]	; 0xffffffd0
    1b64:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1b68:	and	r0, r0, #15
    1b6c:	add	r0, r0, #4
    1b70:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1b74:	str	r0, [r1, #92]	; 0x5c
    1b78:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1b7c:	lsr	r0, r0, #4
    1b80:	str	r0, [fp, #-44]	; 0xffffffd4
    1b84:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1b88:	sub	r0, r0, #4
    1b8c:	str	r0, [fp, #-48]	; 0xffffffd0
    1b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1b94:	ldr	r0, [r0, #96]	; 0x60
    1b98:	movw	r1, #286	; 0x11e
    1b9c:	cmp	r0, r1
    1ba0:	bhi	1bb4 <coda_inflate+0x15dc>
    1ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ba8:	ldr	r0, [r0, #100]	; 0x64
    1bac:	cmp	r0, #30
    1bb0:	bls	1bd4 <coda_inflate+0x15fc>
    1bb4:	ldr	r0, [fp, #-16]
    1bb8:	movw	r1, #0
    1bbc:	movt	r1, #0
    1bc0:	str	r1, [r0, #24]
    1bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1bc8:	movw	r1, #29
    1bcc:	str	r1, [r0]
    1bd0:	b	3168 <coda_inflate+0x2b90>
    1bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1bd8:	movw	r1, #0
    1bdc:	str	r1, [r0, #104]	; 0x68
    1be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1be4:	movw	r1, #17
    1be8:	str	r1, [r0]
    1bec:	b	1bf0 <coda_inflate+0x1618>
    1bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1bf4:	ldr	r0, [r0, #104]	; 0x68
    1bf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1bfc:	ldr	r1, [r1, #92]	; 0x5c
    1c00:	cmp	r0, r1
    1c04:	bcs	1cc8 <coda_inflate+0x16f0>
    1c08:	b	1c0c <coda_inflate+0x1634>
    1c0c:	b	1c10 <coda_inflate+0x1638>
    1c10:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1c14:	cmp	r0, #3
    1c18:	bcs	1c74 <coda_inflate+0x169c>
    1c1c:	b	1c20 <coda_inflate+0x1648>
    1c20:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1c24:	cmp	r0, #0
    1c28:	bne	1c30 <coda_inflate+0x1658>
    1c2c:	b	316c <coda_inflate+0x2b94>
    1c30:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1c34:	mvn	r1, #0
    1c38:	add	r0, r0, r1
    1c3c:	str	r0, [fp, #-36]	; 0xffffffdc
    1c40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1c44:	add	r1, r0, #1
    1c48:	str	r1, [fp, #-28]	; 0xffffffe4
    1c4c:	ldrb	r0, [r0]
    1c50:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1c54:	lsl	r0, r0, r1
    1c58:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1c5c:	add	r0, r1, r0
    1c60:	str	r0, [fp, #-44]	; 0xffffffd4
    1c64:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1c68:	add	r0, r0, #8
    1c6c:	str	r0, [fp, #-48]	; 0xffffffd0
    1c70:	b	1c10 <coda_inflate+0x1638>
    1c74:	b	1c78 <coda_inflate+0x16a0>
    1c78:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1c7c:	and	r0, r0, #7
    1c80:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1c84:	add	r2, r1, #112	; 0x70
    1c88:	ldr	r3, [r1, #104]	; 0x68
    1c8c:	add	ip, r3, #1
    1c90:	str	ip, [r1, #104]	; 0x68
    1c94:	movw	r1, #0
    1c98:	movt	r1, #0
    1c9c:	add	r1, r1, r3, lsl #1
    1ca0:	ldrh	r1, [r1]
    1ca4:	add	r1, r2, r1, lsl #1
    1ca8:	strh	r0, [r1]
    1cac:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1cb0:	lsr	r0, r0, #3
    1cb4:	str	r0, [fp, #-44]	; 0xffffffd4
    1cb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1cbc:	sub	r0, r0, #3
    1cc0:	str	r0, [fp, #-48]	; 0xffffffd0
    1cc4:	b	1bf0 <coda_inflate+0x1618>
    1cc8:	b	1ccc <coda_inflate+0x16f4>
    1ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1cd0:	ldr	r0, [r0, #104]	; 0x68
    1cd4:	cmp	r0, #19
    1cd8:	bcs	1d10 <coda_inflate+0x1738>
    1cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ce0:	add	r1, r0, #112	; 0x70
    1ce4:	ldr	r2, [r0, #104]	; 0x68
    1ce8:	add	r3, r2, #1
    1cec:	str	r3, [r0, #104]	; 0x68
    1cf0:	movw	r0, #0
    1cf4:	movt	r0, #0
    1cf8:	add	r0, r0, r2, lsl #1
    1cfc:	ldrh	r0, [r0]
    1d00:	add	r0, r1, r0, lsl #1
    1d04:	movw	r1, #0
    1d08:	strh	r1, [r0]
    1d0c:	b	1ccc <coda_inflate+0x16f4>
    1d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d14:	add	r0, r0, #1328	; 0x530
    1d18:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1d1c:	str	r0, [r1, #108]	; 0x6c
    1d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d24:	ldr	r0, [r0, #108]	; 0x6c
    1d28:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1d2c:	str	r0, [r1, #76]	; 0x4c
    1d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d34:	movw	r1, #7
    1d38:	str	r1, [r0, #84]	; 0x54
    1d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d40:	add	r1, r0, #112	; 0x70
    1d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d48:	add	r3, r0, #108	; 0x6c
    1d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d50:	add	r0, r0, #84	; 0x54
    1d54:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1d58:	add	r2, r2, #752	; 0x2f0
    1d5c:	movw	ip, #0
    1d60:	str	r0, [sp, #44]	; 0x2c
    1d64:	mov	r0, ip
    1d68:	movw	ip, #19
    1d6c:	str	r2, [sp, #40]	; 0x28
    1d70:	mov	r2, ip
    1d74:	ldr	ip, [sp, #44]	; 0x2c
    1d78:	str	ip, [sp]
    1d7c:	ldr	lr, [sp, #40]	; 0x28
    1d80:	str	lr, [sp, #4]
    1d84:	bl	0 <coda_inflate_table>
    1d88:	str	r0, [fp, #-80]	; 0xffffffb0
    1d8c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    1d90:	cmp	r0, #0
    1d94:	beq	1db8 <coda_inflate+0x17e0>
    1d98:	ldr	r0, [fp, #-16]
    1d9c:	movw	r1, #0
    1da0:	movt	r1, #0
    1da4:	str	r1, [r0, #24]
    1da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1dac:	movw	r1, #29
    1db0:	str	r1, [r0]
    1db4:	b	3168 <coda_inflate+0x2b90>
    1db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1dbc:	movw	r1, #0
    1dc0:	str	r1, [r0, #104]	; 0x68
    1dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1dc8:	movw	r1, #18
    1dcc:	str	r1, [r0]
    1dd0:	b	1dd4 <coda_inflate+0x17fc>
    1dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1dd8:	ldr	r0, [r0, #104]	; 0x68
    1ddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1de0:	ldr	r1, [r1, #96]	; 0x60
    1de4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1de8:	ldr	r2, [r2, #100]	; 0x64
    1dec:	add	r1, r1, r2
    1df0:	cmp	r0, r1
    1df4:	bcs	2254 <coda_inflate+0x1c7c>
    1df8:	b	1dfc <coda_inflate+0x1824>
    1dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1e00:	ldr	r1, [r0, #76]	; 0x4c
    1e04:	ldr	r0, [r0, #84]	; 0x54
    1e08:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1e0c:	mov	r3, #1
    1e10:	mvn	ip, #0
    1e14:	add	r0, ip, r3, lsl r0
    1e18:	and	r0, r2, r0
    1e1c:	add	r0, r1, r0, lsl #2
    1e20:	ldrh	r1, [r0]
    1e24:	strh	r1, [fp, #-68]	; 0xffffffbc
    1e28:	ldrh	r0, [r0, #2]
    1e2c:	strh	r0, [fp, #-66]	; 0xffffffbe
    1e30:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    1e34:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1e38:	cmp	r0, r1
    1e3c:	bhi	1e44 <coda_inflate+0x186c>
    1e40:	b	1e9c <coda_inflate+0x18c4>
    1e44:	b	1e48 <coda_inflate+0x1870>
    1e48:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1e4c:	cmp	r0, #0
    1e50:	bne	1e58 <coda_inflate+0x1880>
    1e54:	b	316c <coda_inflate+0x2b94>
    1e58:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1e5c:	mvn	r1, #0
    1e60:	add	r0, r0, r1
    1e64:	str	r0, [fp, #-36]	; 0xffffffdc
    1e68:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1e6c:	add	r1, r0, #1
    1e70:	str	r1, [fp, #-28]	; 0xffffffe4
    1e74:	ldrb	r0, [r0]
    1e78:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1e7c:	lsl	r0, r0, r1
    1e80:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1e84:	add	r0, r1, r0
    1e88:	str	r0, [fp, #-44]	; 0xffffffd4
    1e8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1e90:	add	r0, r0, #8
    1e94:	str	r0, [fp, #-48]	; 0xffffffd0
    1e98:	b	1dfc <coda_inflate+0x1824>
    1e9c:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    1ea0:	cmp	r0, #16
    1ea4:	bge	1ef0 <coda_inflate+0x1918>
    1ea8:	b	1eac <coda_inflate+0x18d4>
    1eac:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    1eb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1eb4:	lsr	r0, r1, r0
    1eb8:	str	r0, [fp, #-44]	; 0xffffffd4
    1ebc:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    1ec0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1ec4:	sub	r0, r1, r0
    1ec8:	str	r0, [fp, #-48]	; 0xffffffd0
    1ecc:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    1ed0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1ed4:	add	r2, r1, #112	; 0x70
    1ed8:	ldr	r3, [r1, #104]	; 0x68
    1edc:	add	ip, r3, #1
    1ee0:	str	ip, [r1, #104]	; 0x68
    1ee4:	add	r1, r2, r3, lsl #1
    1ee8:	strh	r0, [r1]
    1eec:	b	2250 <coda_inflate+0x1c78>
    1ef0:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    1ef4:	cmp	r0, #16
    1ef8:	bne	2010 <coda_inflate+0x1a38>
    1efc:	b	1f00 <coda_inflate+0x1928>
    1f00:	b	1f04 <coda_inflate+0x192c>
    1f04:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f08:	ldrb	r1, [fp, #-67]	; 0xffffffbd
    1f0c:	add	r1, r1, #2
    1f10:	cmp	r0, r1
    1f14:	bcs	1f70 <coda_inflate+0x1998>
    1f18:	b	1f1c <coda_inflate+0x1944>
    1f1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1f20:	cmp	r0, #0
    1f24:	bne	1f2c <coda_inflate+0x1954>
    1f28:	b	316c <coda_inflate+0x2b94>
    1f2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1f30:	mvn	r1, #0
    1f34:	add	r0, r0, r1
    1f38:	str	r0, [fp, #-36]	; 0xffffffdc
    1f3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1f40:	add	r1, r0, #1
    1f44:	str	r1, [fp, #-28]	; 0xffffffe4
    1f48:	ldrb	r0, [r0]
    1f4c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f50:	lsl	r0, r0, r1
    1f54:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1f58:	add	r0, r1, r0
    1f5c:	str	r0, [fp, #-44]	; 0xffffffd4
    1f60:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f64:	add	r0, r0, #8
    1f68:	str	r0, [fp, #-48]	; 0xffffffd0
    1f6c:	b	1f04 <coda_inflate+0x192c>
    1f70:	b	1f74 <coda_inflate+0x199c>
    1f74:	b	1f78 <coda_inflate+0x19a0>
    1f78:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    1f7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1f80:	lsr	r0, r1, r0
    1f84:	str	r0, [fp, #-44]	; 0xffffffd4
    1f88:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    1f8c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f90:	sub	r0, r1, r0
    1f94:	str	r0, [fp, #-48]	; 0xffffffd0
    1f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1f9c:	ldr	r0, [r0, #104]	; 0x68
    1fa0:	cmp	r0, #0
    1fa4:	bne	1fc8 <coda_inflate+0x19f0>
    1fa8:	ldr	r0, [fp, #-16]
    1fac:	movw	r1, #0
    1fb0:	movt	r1, #0
    1fb4:	str	r1, [r0, #24]
    1fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1fbc:	movw	r1, #29
    1fc0:	str	r1, [r0]
    1fc4:	b	2254 <coda_inflate+0x1c7c>
    1fc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1fcc:	add	r1, r0, #112	; 0x70
    1fd0:	ldr	r0, [r0, #104]	; 0x68
    1fd4:	sub	r0, r0, #1
    1fd8:	add	r0, r1, r0, lsl #1
    1fdc:	ldrh	r0, [r0]
    1fe0:	str	r0, [fp, #-76]	; 0xffffffb4
    1fe4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1fe8:	and	r0, r0, #3
    1fec:	add	r0, r0, #3
    1ff0:	str	r0, [fp, #-60]	; 0xffffffc4
    1ff4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1ff8:	lsr	r0, r0, #2
    1ffc:	str	r0, [fp, #-44]	; 0xffffffd4
    2000:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2004:	sub	r0, r0, #2
    2008:	str	r0, [fp, #-48]	; 0xffffffd0
    200c:	b	21c0 <coda_inflate+0x1be8>
    2010:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    2014:	cmp	r0, #17
    2018:	bne	20ec <coda_inflate+0x1b14>
    201c:	b	2020 <coda_inflate+0x1a48>
    2020:	b	2024 <coda_inflate+0x1a4c>
    2024:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2028:	ldrb	r1, [fp, #-67]	; 0xffffffbd
    202c:	add	r1, r1, #3
    2030:	cmp	r0, r1
    2034:	bcs	2090 <coda_inflate+0x1ab8>
    2038:	b	203c <coda_inflate+0x1a64>
    203c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2040:	cmp	r0, #0
    2044:	bne	204c <coda_inflate+0x1a74>
    2048:	b	316c <coda_inflate+0x2b94>
    204c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2050:	mvn	r1, #0
    2054:	add	r0, r0, r1
    2058:	str	r0, [fp, #-36]	; 0xffffffdc
    205c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2060:	add	r1, r0, #1
    2064:	str	r1, [fp, #-28]	; 0xffffffe4
    2068:	ldrb	r0, [r0]
    206c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2070:	lsl	r0, r0, r1
    2074:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2078:	add	r0, r1, r0
    207c:	str	r0, [fp, #-44]	; 0xffffffd4
    2080:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2084:	add	r0, r0, #8
    2088:	str	r0, [fp, #-48]	; 0xffffffd0
    208c:	b	2024 <coda_inflate+0x1a4c>
    2090:	b	2094 <coda_inflate+0x1abc>
    2094:	b	2098 <coda_inflate+0x1ac0>
    2098:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    209c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    20a0:	lsr	r0, r1, r0
    20a4:	str	r0, [fp, #-44]	; 0xffffffd4
    20a8:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    20ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
    20b0:	sub	r0, r1, r0
    20b4:	str	r0, [fp, #-48]	; 0xffffffd0
    20b8:	movw	r0, #0
    20bc:	str	r0, [fp, #-76]	; 0xffffffb4
    20c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    20c4:	and	r0, r0, #7
    20c8:	add	r0, r0, #3
    20cc:	str	r0, [fp, #-60]	; 0xffffffc4
    20d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    20d4:	lsr	r0, r0, #3
    20d8:	str	r0, [fp, #-44]	; 0xffffffd4
    20dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    20e0:	sub	r0, r0, #3
    20e4:	str	r0, [fp, #-48]	; 0xffffffd0
    20e8:	b	21bc <coda_inflate+0x1be4>
    20ec:	b	20f0 <coda_inflate+0x1b18>
    20f0:	b	20f4 <coda_inflate+0x1b1c>
    20f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    20f8:	ldrb	r1, [fp, #-67]	; 0xffffffbd
    20fc:	add	r1, r1, #7
    2100:	cmp	r0, r1
    2104:	bcs	2160 <coda_inflate+0x1b88>
    2108:	b	210c <coda_inflate+0x1b34>
    210c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2110:	cmp	r0, #0
    2114:	bne	211c <coda_inflate+0x1b44>
    2118:	b	316c <coda_inflate+0x2b94>
    211c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2120:	mvn	r1, #0
    2124:	add	r0, r0, r1
    2128:	str	r0, [fp, #-36]	; 0xffffffdc
    212c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2130:	add	r1, r0, #1
    2134:	str	r1, [fp, #-28]	; 0xffffffe4
    2138:	ldrb	r0, [r0]
    213c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2140:	lsl	r0, r0, r1
    2144:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2148:	add	r0, r1, r0
    214c:	str	r0, [fp, #-44]	; 0xffffffd4
    2150:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2154:	add	r0, r0, #8
    2158:	str	r0, [fp, #-48]	; 0xffffffd0
    215c:	b	20f4 <coda_inflate+0x1b1c>
    2160:	b	2164 <coda_inflate+0x1b8c>
    2164:	b	2168 <coda_inflate+0x1b90>
    2168:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    216c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2170:	lsr	r0, r1, r0
    2174:	str	r0, [fp, #-44]	; 0xffffffd4
    2178:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    217c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2180:	sub	r0, r1, r0
    2184:	str	r0, [fp, #-48]	; 0xffffffd0
    2188:	movw	r0, #0
    218c:	str	r0, [fp, #-76]	; 0xffffffb4
    2190:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2194:	and	r0, r0, #127	; 0x7f
    2198:	add	r0, r0, #11
    219c:	str	r0, [fp, #-60]	; 0xffffffc4
    21a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    21a4:	lsr	r0, r0, #7
    21a8:	str	r0, [fp, #-44]	; 0xffffffd4
    21ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    21b0:	sub	r0, r0, #7
    21b4:	str	r0, [fp, #-48]	; 0xffffffd0
    21b8:	b	21bc <coda_inflate+0x1be4>
    21bc:	b	21c0 <coda_inflate+0x1be8>
    21c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    21c4:	ldr	r0, [r0, #104]	; 0x68
    21c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    21cc:	add	r0, r0, r1
    21d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    21d4:	ldr	r1, [r1, #96]	; 0x60
    21d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    21dc:	ldr	r2, [r2, #100]	; 0x64
    21e0:	add	r1, r1, r2
    21e4:	cmp	r0, r1
    21e8:	bls	220c <coda_inflate+0x1c34>
    21ec:	ldr	r0, [fp, #-16]
    21f0:	movw	r1, #0
    21f4:	movt	r1, #0
    21f8:	str	r1, [r0, #24]
    21fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2200:	movw	r1, #29
    2204:	str	r1, [r0]
    2208:	b	2254 <coda_inflate+0x1c7c>
    220c:	b	2210 <coda_inflate+0x1c38>
    2210:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2214:	mvn	r1, #0
    2218:	add	r1, r0, r1
    221c:	str	r1, [fp, #-60]	; 0xffffffc4
    2220:	cmp	r0, #0
    2224:	beq	224c <coda_inflate+0x1c74>
    2228:	ldr	r0, [fp, #-76]	; 0xffffffb4
    222c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2230:	add	r2, r1, #112	; 0x70
    2234:	ldr	r3, [r1, #104]	; 0x68
    2238:	add	ip, r3, #1
    223c:	str	ip, [r1, #104]	; 0x68
    2240:	add	r1, r2, r3, lsl #1
    2244:	strh	r0, [r1]
    2248:	b	2210 <coda_inflate+0x1c38>
    224c:	b	2250 <coda_inflate+0x1c78>
    2250:	b	1dd4 <coda_inflate+0x17fc>
    2254:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2258:	ldr	r0, [r0]
    225c:	cmp	r0, #29
    2260:	bne	2268 <coda_inflate+0x1c90>
    2264:	b	3168 <coda_inflate+0x2b90>
    2268:	ldr	r0, [fp, #-24]	; 0xffffffe8
    226c:	add	r0, r0, #624	; 0x270
    2270:	ldrh	r0, [r0]
    2274:	cmp	r0, #0
    2278:	bne	229c <coda_inflate+0x1cc4>
    227c:	ldr	r0, [fp, #-16]
    2280:	movw	r1, #0
    2284:	movt	r1, #0
    2288:	str	r1, [r0, #24]
    228c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2290:	movw	r1, #29
    2294:	str	r1, [r0]
    2298:	b	3168 <coda_inflate+0x2b90>
    229c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22a0:	add	r0, r0, #1328	; 0x530
    22a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    22a8:	str	r0, [r1, #108]	; 0x6c
    22ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22b0:	ldr	r0, [r0, #108]	; 0x6c
    22b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    22b8:	str	r0, [r1, #76]	; 0x4c
    22bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22c0:	movw	r1, #9
    22c4:	str	r1, [r0, #84]	; 0x54
    22c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22cc:	add	r1, r0, #112	; 0x70
    22d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22d4:	ldr	r2, [r0, #96]	; 0x60
    22d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22dc:	add	r3, r0, #108	; 0x6c
    22e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22e4:	add	r0, r0, #84	; 0x54
    22e8:	ldr	ip, [fp, #-24]	; 0xffffffe8
    22ec:	add	ip, ip, #752	; 0x2f0
    22f0:	movw	lr, #1
    22f4:	str	r0, [sp, #36]	; 0x24
    22f8:	mov	r0, lr
    22fc:	ldr	lr, [sp, #36]	; 0x24
    2300:	str	lr, [sp]
    2304:	str	ip, [sp, #4]
    2308:	bl	0 <coda_inflate_table>
    230c:	str	r0, [fp, #-80]	; 0xffffffb0
    2310:	ldr	r0, [fp, #-80]	; 0xffffffb0
    2314:	cmp	r0, #0
    2318:	beq	233c <coda_inflate+0x1d64>
    231c:	ldr	r0, [fp, #-16]
    2320:	movw	r1, #0
    2324:	movt	r1, #0
    2328:	str	r1, [r0, #24]
    232c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2330:	movw	r1, #29
    2334:	str	r1, [r0]
    2338:	b	3168 <coda_inflate+0x2b90>
    233c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2340:	ldr	r1, [r0, #108]	; 0x6c
    2344:	str	r1, [r0, #80]	; 0x50
    2348:	ldr	r0, [fp, #-24]	; 0xffffffe8
    234c:	mov	r1, #6
    2350:	str	r1, [r0, #88]	; 0x58
    2354:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2358:	add	r1, r0, #112	; 0x70
    235c:	ldr	r0, [r0, #96]	; 0x60
    2360:	add	r1, r1, r0, lsl #1
    2364:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2368:	ldr	r2, [r0, #100]	; 0x64
    236c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2370:	add	r3, r0, #108	; 0x6c
    2374:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2378:	add	r0, r0, #88	; 0x58
    237c:	ldr	ip, [fp, #-24]	; 0xffffffe8
    2380:	add	ip, ip, #752	; 0x2f0
    2384:	movw	lr, #2
    2388:	str	r0, [sp, #32]
    238c:	mov	r0, lr
    2390:	ldr	lr, [sp, #32]
    2394:	str	lr, [sp]
    2398:	str	ip, [sp, #4]
    239c:	bl	0 <coda_inflate_table>
    23a0:	str	r0, [fp, #-80]	; 0xffffffb0
    23a4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    23a8:	cmp	r0, #0
    23ac:	beq	23d0 <coda_inflate+0x1df8>
    23b0:	ldr	r0, [fp, #-16]
    23b4:	movw	r1, #0
    23b8:	movt	r1, #0
    23bc:	str	r1, [r0, #24]
    23c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    23c4:	movw	r1, #29
    23c8:	str	r1, [r0]
    23cc:	b	3168 <coda_inflate+0x2b90>
    23d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    23d4:	movw	r1, #19
    23d8:	str	r1, [r0]
    23dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    23e0:	cmp	r0, #6
    23e4:	bne	23ec <coda_inflate+0x1e14>
    23e8:	b	316c <coda_inflate+0x2b94>
    23ec:	b	23f0 <coda_inflate+0x1e18>
    23f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    23f4:	movw	r1, #20
    23f8:	str	r1, [r0]
    23fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2400:	cmp	r0, #6
    2404:	bcc	24e0 <coda_inflate+0x1f08>
    2408:	ldr	r0, [fp, #-40]	; 0xffffffd8
    240c:	movw	r1, #258	; 0x102
    2410:	cmp	r0, r1
    2414:	bcc	24e0 <coda_inflate+0x1f08>
    2418:	b	241c <coda_inflate+0x1e44>
    241c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2420:	ldr	r1, [fp, #-16]
    2424:	str	r0, [r1, #12]
    2428:	ldr	r0, [fp, #-40]	; 0xffffffd8
    242c:	ldr	r1, [fp, #-16]
    2430:	str	r0, [r1, #16]
    2434:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2438:	ldr	r1, [fp, #-16]
    243c:	str	r0, [r1]
    2440:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2444:	ldr	r1, [fp, #-16]
    2448:	str	r0, [r1, #4]
    244c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2450:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2454:	str	r0, [r1, #56]	; 0x38
    2458:	ldr	r0, [fp, #-48]	; 0xffffffd0
    245c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2460:	str	r0, [r1, #60]	; 0x3c
    2464:	ldr	r0, [fp, #-16]
    2468:	ldr	r1, [fp, #-56]	; 0xffffffc8
    246c:	bl	0 <coda_inflate_fast>
    2470:	ldr	r0, [fp, #-16]
    2474:	ldr	r0, [r0, #12]
    2478:	str	r0, [fp, #-32]	; 0xffffffe0
    247c:	ldr	r0, [fp, #-16]
    2480:	ldr	r0, [r0, #16]
    2484:	str	r0, [fp, #-40]	; 0xffffffd8
    2488:	ldr	r0, [fp, #-16]
    248c:	ldr	r0, [r0]
    2490:	str	r0, [fp, #-28]	; 0xffffffe4
    2494:	ldr	r0, [fp, #-16]
    2498:	ldr	r0, [r0, #4]
    249c:	str	r0, [fp, #-36]	; 0xffffffdc
    24a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24a4:	ldr	r0, [r0, #56]	; 0x38
    24a8:	str	r0, [fp, #-44]	; 0xffffffd4
    24ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24b0:	ldr	r0, [r0, #60]	; 0x3c
    24b4:	str	r0, [fp, #-48]	; 0xffffffd0
    24b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24bc:	ldr	r0, [r0]
    24c0:	cmp	r0, #11
    24c4:	bne	24dc <coda_inflate+0x1f04>
    24c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24cc:	movw	r1, #7108	; 0x1bc4
    24d0:	add	r0, r0, r1
    24d4:	mvn	r1, #0
    24d8:	str	r1, [r0]
    24dc:	b	3168 <coda_inflate+0x2b90>
    24e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24e4:	movw	r1, #7108	; 0x1bc4
    24e8:	add	r0, r0, r1
    24ec:	movw	r1, #0
    24f0:	str	r1, [r0]
    24f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24f8:	ldr	r1, [r0, #76]	; 0x4c
    24fc:	ldr	r0, [r0, #84]	; 0x54
    2500:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2504:	mov	r3, #1
    2508:	mvn	ip, #0
    250c:	add	r0, ip, r3, lsl r0
    2510:	and	r0, r2, r0
    2514:	add	r0, r1, r0, lsl #2
    2518:	ldrh	r1, [r0]
    251c:	strh	r1, [fp, #-68]	; 0xffffffbc
    2520:	ldrh	r0, [r0, #2]
    2524:	strh	r0, [fp, #-66]	; 0xffffffbe
    2528:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    252c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2530:	cmp	r0, r1
    2534:	bhi	253c <coda_inflate+0x1f64>
    2538:	b	2594 <coda_inflate+0x1fbc>
    253c:	b	2540 <coda_inflate+0x1f68>
    2540:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2544:	cmp	r0, #0
    2548:	bne	2550 <coda_inflate+0x1f78>
    254c:	b	316c <coda_inflate+0x2b94>
    2550:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2554:	mvn	r1, #0
    2558:	add	r0, r0, r1
    255c:	str	r0, [fp, #-36]	; 0xffffffdc
    2560:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2564:	add	r1, r0, #1
    2568:	str	r1, [fp, #-28]	; 0xffffffe4
    256c:	ldrb	r0, [r0]
    2570:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2574:	lsl	r0, r0, r1
    2578:	ldr	r1, [fp, #-44]	; 0xffffffd4
    257c:	add	r0, r1, r0
    2580:	str	r0, [fp, #-44]	; 0xffffffd4
    2584:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2588:	add	r0, r0, #8
    258c:	str	r0, [fp, #-48]	; 0xffffffd0
    2590:	b	24f4 <coda_inflate+0x1f1c>
    2594:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    2598:	cmp	r0, #0
    259c:	beq	26bc <coda_inflate+0x20e4>
    25a0:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    25a4:	and	r0, r0, #240	; 0xf0
    25a8:	cmp	r0, #0
    25ac:	bne	26bc <coda_inflate+0x20e4>
    25b0:	ldrh	r0, [fp, #-68]	; 0xffffffbc
    25b4:	strh	r0, [fp, #-72]	; 0xffffffb8
    25b8:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    25bc:	strh	r0, [fp, #-70]	; 0xffffffba
    25c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    25c4:	ldr	r0, [r0, #76]	; 0x4c
    25c8:	ldrh	r1, [fp, #-70]	; 0xffffffba
    25cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    25d0:	ldrb	r3, [fp, #-72]	; 0xffffffb8
    25d4:	ldrb	ip, [fp, #-71]	; 0xffffffb9
    25d8:	add	r3, ip, r3
    25dc:	mov	lr, #1
    25e0:	mvn	r4, #0
    25e4:	add	r3, r4, lr, lsl r3
    25e8:	and	r2, r2, r3
    25ec:	add	r1, r1, r2, lsr ip
    25f0:	add	r0, r0, r1, lsl #2
    25f4:	ldrh	r1, [r0]
    25f8:	strh	r1, [fp, #-68]	; 0xffffffbc
    25fc:	ldrh	r0, [r0, #2]
    2600:	strh	r0, [fp, #-66]	; 0xffffffbe
    2604:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    2608:	ldrb	r1, [fp, #-67]	; 0xffffffbd
    260c:	add	r0, r0, r1
    2610:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2614:	cmp	r0, r1
    2618:	bhi	2620 <coda_inflate+0x2048>
    261c:	b	2678 <coda_inflate+0x20a0>
    2620:	b	2624 <coda_inflate+0x204c>
    2624:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2628:	cmp	r0, #0
    262c:	bne	2634 <coda_inflate+0x205c>
    2630:	b	316c <coda_inflate+0x2b94>
    2634:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2638:	mvn	r1, #0
    263c:	add	r0, r0, r1
    2640:	str	r0, [fp, #-36]	; 0xffffffdc
    2644:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2648:	add	r1, r0, #1
    264c:	str	r1, [fp, #-28]	; 0xffffffe4
    2650:	ldrb	r0, [r0]
    2654:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2658:	lsl	r0, r0, r1
    265c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2660:	add	r0, r1, r0
    2664:	str	r0, [fp, #-44]	; 0xffffffd4
    2668:	ldr	r0, [fp, #-48]	; 0xffffffd0
    266c:	add	r0, r0, #8
    2670:	str	r0, [fp, #-48]	; 0xffffffd0
    2674:	b	25c0 <coda_inflate+0x1fe8>
    2678:	b	267c <coda_inflate+0x20a4>
    267c:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    2680:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2684:	lsr	r0, r1, r0
    2688:	str	r0, [fp, #-44]	; 0xffffffd4
    268c:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    2690:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2694:	sub	r0, r1, r0
    2698:	str	r0, [fp, #-48]	; 0xffffffd0
    269c:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    26a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    26a4:	movw	r2, #7108	; 0x1bc4
    26a8:	add	r3, r1, r2
    26ac:	ldr	r3, [r3]
    26b0:	add	r0, r3, r0
    26b4:	add	r1, r1, r2
    26b8:	str	r0, [r1]
    26bc:	b	26c0 <coda_inflate+0x20e8>
    26c0:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    26c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    26c8:	lsr	r0, r1, r0
    26cc:	str	r0, [fp, #-44]	; 0xffffffd4
    26d0:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    26d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    26d8:	sub	r0, r1, r0
    26dc:	str	r0, [fp, #-48]	; 0xffffffd0
    26e0:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    26e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    26e8:	movw	r2, #7108	; 0x1bc4
    26ec:	add	r3, r1, r2
    26f0:	ldr	r3, [r3]
    26f4:	add	r0, r3, r0
    26f8:	add	r1, r1, r2
    26fc:	str	r0, [r1]
    2700:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    2704:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2708:	str	r0, [r1, #64]	; 0x40
    270c:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    2710:	cmp	r0, #0
    2714:	bne	2728 <coda_inflate+0x2150>
    2718:	ldr	r0, [fp, #-24]	; 0xffffffe8
    271c:	movw	r1, #25
    2720:	str	r1, [r0]
    2724:	b	3168 <coda_inflate+0x2b90>
    2728:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    272c:	and	r0, r0, #32
    2730:	cmp	r0, #0
    2734:	beq	275c <coda_inflate+0x2184>
    2738:	ldr	r0, [fp, #-24]	; 0xffffffe8
    273c:	movw	r1, #7108	; 0x1bc4
    2740:	add	r0, r0, r1
    2744:	mvn	r1, #0
    2748:	str	r1, [r0]
    274c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2750:	movw	r1, #11
    2754:	str	r1, [r0]
    2758:	b	3168 <coda_inflate+0x2b90>
    275c:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    2760:	and	r0, r0, #64	; 0x40
    2764:	cmp	r0, #0
    2768:	beq	278c <coda_inflate+0x21b4>
    276c:	ldr	r0, [fp, #-16]
    2770:	movw	r1, #0
    2774:	movt	r1, #0
    2778:	str	r1, [r0, #24]
    277c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2780:	movw	r1, #29
    2784:	str	r1, [r0]
    2788:	b	3168 <coda_inflate+0x2b90>
    278c:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    2790:	and	r0, r0, #15
    2794:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2798:	str	r0, [r1, #72]	; 0x48
    279c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    27a0:	movw	r1, #21
    27a4:	str	r1, [r0]
    27a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    27ac:	ldr	r0, [r0, #72]	; 0x48
    27b0:	cmp	r0, #0
    27b4:	beq	28a8 <coda_inflate+0x22d0>
    27b8:	b	27bc <coda_inflate+0x21e4>
    27bc:	b	27c0 <coda_inflate+0x21e8>
    27c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    27c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    27c8:	ldr	r1, [r1, #72]	; 0x48
    27cc:	cmp	r0, r1
    27d0:	bcs	282c <coda_inflate+0x2254>
    27d4:	b	27d8 <coda_inflate+0x2200>
    27d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    27dc:	cmp	r0, #0
    27e0:	bne	27e8 <coda_inflate+0x2210>
    27e4:	b	316c <coda_inflate+0x2b94>
    27e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    27ec:	mvn	r1, #0
    27f0:	add	r0, r0, r1
    27f4:	str	r0, [fp, #-36]	; 0xffffffdc
    27f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    27fc:	add	r1, r0, #1
    2800:	str	r1, [fp, #-28]	; 0xffffffe4
    2804:	ldrb	r0, [r0]
    2808:	ldr	r1, [fp, #-48]	; 0xffffffd0
    280c:	lsl	r0, r0, r1
    2810:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2814:	add	r0, r1, r0
    2818:	str	r0, [fp, #-44]	; 0xffffffd4
    281c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2820:	add	r0, r0, #8
    2824:	str	r0, [fp, #-48]	; 0xffffffd0
    2828:	b	27c0 <coda_inflate+0x21e8>
    282c:	b	2830 <coda_inflate+0x2258>
    2830:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2834:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2838:	ldr	r1, [r1, #72]	; 0x48
    283c:	movw	r2, #1
    2840:	lsl	r1, r2, r1
    2844:	sub	r1, r1, #1
    2848:	and	r0, r0, r1
    284c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2850:	ldr	r2, [r1, #64]	; 0x40
    2854:	add	r0, r2, r0
    2858:	str	r0, [r1, #64]	; 0x40
    285c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2860:	ldr	r0, [r0, #72]	; 0x48
    2864:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2868:	lsr	r0, r1, r0
    286c:	str	r0, [fp, #-44]	; 0xffffffd4
    2870:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2874:	ldr	r0, [r0, #72]	; 0x48
    2878:	ldr	r1, [fp, #-48]	; 0xffffffd0
    287c:	sub	r0, r1, r0
    2880:	str	r0, [fp, #-48]	; 0xffffffd0
    2884:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2888:	ldr	r0, [r0, #72]	; 0x48
    288c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2890:	movw	r2, #7108	; 0x1bc4
    2894:	add	r3, r1, r2
    2898:	ldr	r3, [r3]
    289c:	add	r0, r3, r0
    28a0:	add	r1, r1, r2
    28a4:	str	r0, [r1]
    28a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    28ac:	ldr	r0, [r0, #64]	; 0x40
    28b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    28b4:	movw	r2, #7112	; 0x1bc8
    28b8:	add	r1, r1, r2
    28bc:	str	r0, [r1]
    28c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    28c4:	movw	r1, #22
    28c8:	str	r1, [r0]
    28cc:	b	28d0 <coda_inflate+0x22f8>
    28d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    28d4:	ldr	r1, [r0, #80]	; 0x50
    28d8:	ldr	r0, [r0, #88]	; 0x58
    28dc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    28e0:	mov	r3, #1
    28e4:	mvn	ip, #0
    28e8:	add	r0, ip, r3, lsl r0
    28ec:	and	r0, r2, r0
    28f0:	add	r0, r1, r0, lsl #2
    28f4:	ldrh	r1, [r0]
    28f8:	strh	r1, [fp, #-68]	; 0xffffffbc
    28fc:	ldrh	r0, [r0, #2]
    2900:	strh	r0, [fp, #-66]	; 0xffffffbe
    2904:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    2908:	ldr	r1, [fp, #-48]	; 0xffffffd0
    290c:	cmp	r0, r1
    2910:	bhi	2918 <coda_inflate+0x2340>
    2914:	b	2970 <coda_inflate+0x2398>
    2918:	b	291c <coda_inflate+0x2344>
    291c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2920:	cmp	r0, #0
    2924:	bne	292c <coda_inflate+0x2354>
    2928:	b	316c <coda_inflate+0x2b94>
    292c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2930:	mvn	r1, #0
    2934:	add	r0, r0, r1
    2938:	str	r0, [fp, #-36]	; 0xffffffdc
    293c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2940:	add	r1, r0, #1
    2944:	str	r1, [fp, #-28]	; 0xffffffe4
    2948:	ldrb	r0, [r0]
    294c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2950:	lsl	r0, r0, r1
    2954:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2958:	add	r0, r1, r0
    295c:	str	r0, [fp, #-44]	; 0xffffffd4
    2960:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2964:	add	r0, r0, #8
    2968:	str	r0, [fp, #-48]	; 0xffffffd0
    296c:	b	28d0 <coda_inflate+0x22f8>
    2970:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    2974:	and	r0, r0, #240	; 0xf0
    2978:	cmp	r0, #0
    297c:	bne	2a8c <coda_inflate+0x24b4>
    2980:	ldrh	r0, [fp, #-68]	; 0xffffffbc
    2984:	strh	r0, [fp, #-72]	; 0xffffffb8
    2988:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    298c:	strh	r0, [fp, #-70]	; 0xffffffba
    2990:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2994:	ldr	r0, [r0, #80]	; 0x50
    2998:	ldrh	r1, [fp, #-70]	; 0xffffffba
    299c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    29a0:	ldrb	r3, [fp, #-72]	; 0xffffffb8
    29a4:	ldrb	ip, [fp, #-71]	; 0xffffffb9
    29a8:	add	r3, ip, r3
    29ac:	mov	lr, #1
    29b0:	mvn	r4, #0
    29b4:	add	r3, r4, lr, lsl r3
    29b8:	and	r2, r2, r3
    29bc:	add	r1, r1, r2, lsr ip
    29c0:	add	r0, r0, r1, lsl #2
    29c4:	ldrh	r1, [r0]
    29c8:	strh	r1, [fp, #-68]	; 0xffffffbc
    29cc:	ldrh	r0, [r0, #2]
    29d0:	strh	r0, [fp, #-66]	; 0xffffffbe
    29d4:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    29d8:	ldrb	r1, [fp, #-67]	; 0xffffffbd
    29dc:	add	r0, r0, r1
    29e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    29e4:	cmp	r0, r1
    29e8:	bhi	29f0 <coda_inflate+0x2418>
    29ec:	b	2a48 <coda_inflate+0x2470>
    29f0:	b	29f4 <coda_inflate+0x241c>
    29f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    29f8:	cmp	r0, #0
    29fc:	bne	2a04 <coda_inflate+0x242c>
    2a00:	b	316c <coda_inflate+0x2b94>
    2a04:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2a08:	mvn	r1, #0
    2a0c:	add	r0, r0, r1
    2a10:	str	r0, [fp, #-36]	; 0xffffffdc
    2a14:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2a18:	add	r1, r0, #1
    2a1c:	str	r1, [fp, #-28]	; 0xffffffe4
    2a20:	ldrb	r0, [r0]
    2a24:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2a28:	lsl	r0, r0, r1
    2a2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2a30:	add	r0, r1, r0
    2a34:	str	r0, [fp, #-44]	; 0xffffffd4
    2a38:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2a3c:	add	r0, r0, #8
    2a40:	str	r0, [fp, #-48]	; 0xffffffd0
    2a44:	b	2990 <coda_inflate+0x23b8>
    2a48:	b	2a4c <coda_inflate+0x2474>
    2a4c:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    2a50:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2a54:	lsr	r0, r1, r0
    2a58:	str	r0, [fp, #-44]	; 0xffffffd4
    2a5c:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    2a60:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2a64:	sub	r0, r1, r0
    2a68:	str	r0, [fp, #-48]	; 0xffffffd0
    2a6c:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    2a70:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2a74:	movw	r2, #7108	; 0x1bc4
    2a78:	add	r3, r1, r2
    2a7c:	ldr	r3, [r3]
    2a80:	add	r0, r3, r0
    2a84:	add	r1, r1, r2
    2a88:	str	r0, [r1]
    2a8c:	b	2a90 <coda_inflate+0x24b8>
    2a90:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    2a94:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2a98:	lsr	r0, r1, r0
    2a9c:	str	r0, [fp, #-44]	; 0xffffffd4
    2aa0:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    2aa4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2aa8:	sub	r0, r1, r0
    2aac:	str	r0, [fp, #-48]	; 0xffffffd0
    2ab0:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    2ab4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2ab8:	movw	r2, #7108	; 0x1bc4
    2abc:	add	r3, r1, r2
    2ac0:	ldr	r3, [r3]
    2ac4:	add	r0, r3, r0
    2ac8:	add	r1, r1, r2
    2acc:	str	r0, [r1]
    2ad0:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    2ad4:	and	r0, r0, #64	; 0x40
    2ad8:	cmp	r0, #0
    2adc:	beq	2b00 <coda_inflate+0x2528>
    2ae0:	ldr	r0, [fp, #-16]
    2ae4:	movw	r1, #0
    2ae8:	movt	r1, #0
    2aec:	str	r1, [r0, #24]
    2af0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2af4:	movw	r1, #29
    2af8:	str	r1, [r0]
    2afc:	b	3168 <coda_inflate+0x2b90>
    2b00:	ldrh	r0, [fp, #-66]	; 0xffffffbe
    2b04:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2b08:	str	r0, [r1, #68]	; 0x44
    2b0c:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    2b10:	and	r0, r0, #15
    2b14:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2b18:	str	r0, [r1, #72]	; 0x48
    2b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2b20:	movw	r1, #23
    2b24:	str	r1, [r0]
    2b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2b2c:	ldr	r0, [r0, #72]	; 0x48
    2b30:	cmp	r0, #0
    2b34:	beq	2c28 <coda_inflate+0x2650>
    2b38:	b	2b3c <coda_inflate+0x2564>
    2b3c:	b	2b40 <coda_inflate+0x2568>
    2b40:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2b44:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2b48:	ldr	r1, [r1, #72]	; 0x48
    2b4c:	cmp	r0, r1
    2b50:	bcs	2bac <coda_inflate+0x25d4>
    2b54:	b	2b58 <coda_inflate+0x2580>
    2b58:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2b5c:	cmp	r0, #0
    2b60:	bne	2b68 <coda_inflate+0x2590>
    2b64:	b	316c <coda_inflate+0x2b94>
    2b68:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2b6c:	mvn	r1, #0
    2b70:	add	r0, r0, r1
    2b74:	str	r0, [fp, #-36]	; 0xffffffdc
    2b78:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2b7c:	add	r1, r0, #1
    2b80:	str	r1, [fp, #-28]	; 0xffffffe4
    2b84:	ldrb	r0, [r0]
    2b88:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2b8c:	lsl	r0, r0, r1
    2b90:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2b94:	add	r0, r1, r0
    2b98:	str	r0, [fp, #-44]	; 0xffffffd4
    2b9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2ba0:	add	r0, r0, #8
    2ba4:	str	r0, [fp, #-48]	; 0xffffffd0
    2ba8:	b	2b40 <coda_inflate+0x2568>
    2bac:	b	2bb0 <coda_inflate+0x25d8>
    2bb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2bb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2bb8:	ldr	r1, [r1, #72]	; 0x48
    2bbc:	movw	r2, #1
    2bc0:	lsl	r1, r2, r1
    2bc4:	sub	r1, r1, #1
    2bc8:	and	r0, r0, r1
    2bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2bd0:	ldr	r2, [r1, #68]	; 0x44
    2bd4:	add	r0, r2, r0
    2bd8:	str	r0, [r1, #68]	; 0x44
    2bdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2be0:	ldr	r0, [r0, #72]	; 0x48
    2be4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2be8:	lsr	r0, r1, r0
    2bec:	str	r0, [fp, #-44]	; 0xffffffd4
    2bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2bf4:	ldr	r0, [r0, #72]	; 0x48
    2bf8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2bfc:	sub	r0, r1, r0
    2c00:	str	r0, [fp, #-48]	; 0xffffffd0
    2c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c08:	ldr	r0, [r0, #72]	; 0x48
    2c0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2c10:	movw	r2, #7108	; 0x1bc4
    2c14:	add	r3, r1, r2
    2c18:	ldr	r3, [r3]
    2c1c:	add	r0, r3, r0
    2c20:	add	r1, r1, r2
    2c24:	str	r0, [r1]
    2c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c2c:	movw	r1, #24
    2c30:	str	r1, [r0]
    2c34:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2c38:	cmp	r0, #0
    2c3c:	bne	2c44 <coda_inflate+0x266c>
    2c40:	b	316c <coda_inflate+0x2b94>
    2c44:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2c48:	ldr	r1, [fp, #-40]	; 0xffffffd8
    2c4c:	sub	r0, r0, r1
    2c50:	str	r0, [fp, #-60]	; 0xffffffc4
    2c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c58:	ldr	r0, [r0, #68]	; 0x44
    2c5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2c60:	cmp	r0, r1
    2c64:	bls	2d58 <coda_inflate+0x2780>
    2c68:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c6c:	ldr	r0, [r0, #68]	; 0x44
    2c70:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2c74:	sub	r0, r0, r1
    2c78:	str	r0, [fp, #-60]	; 0xffffffc4
    2c7c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2c80:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2c84:	ldr	r1, [r1, #44]	; 0x2c
    2c88:	cmp	r0, r1
    2c8c:	bls	2cc8 <coda_inflate+0x26f0>
    2c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c94:	add	r0, r0, #7104	; 0x1bc0
    2c98:	ldr	r0, [r0]
    2c9c:	cmp	r0, #0
    2ca0:	beq	2cc4 <coda_inflate+0x26ec>
    2ca4:	ldr	r0, [fp, #-16]
    2ca8:	movw	r1, #0
    2cac:	movt	r1, #0
    2cb0:	str	r1, [r0, #24]
    2cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2cb8:	movw	r1, #29
    2cbc:	str	r1, [r0]
    2cc0:	b	3168 <coda_inflate+0x2b90>
    2cc4:	b	2cc8 <coda_inflate+0x26f0>
    2cc8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2ccc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2cd0:	ldr	r1, [r1, #48]	; 0x30
    2cd4:	cmp	r0, r1
    2cd8:	bls	2d14 <coda_inflate+0x273c>
    2cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2ce0:	ldr	r0, [r0, #48]	; 0x30
    2ce4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2ce8:	sub	r0, r1, r0
    2cec:	str	r0, [fp, #-60]	; 0xffffffc4
    2cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2cf4:	ldr	r0, [r0, #52]	; 0x34
    2cf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2cfc:	ldr	r1, [r1, #40]	; 0x28
    2d00:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2d04:	sub	r1, r1, r2
    2d08:	add	r0, r0, r1
    2d0c:	str	r0, [fp, #-64]	; 0xffffffc0
    2d10:	b	2d34 <coda_inflate+0x275c>
    2d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2d18:	ldr	r0, [r0, #52]	; 0x34
    2d1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2d20:	ldr	r1, [r1, #48]	; 0x30
    2d24:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2d28:	sub	r1, r1, r2
    2d2c:	add	r0, r0, r1
    2d30:	str	r0, [fp, #-64]	; 0xffffffc0
    2d34:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2d38:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2d3c:	ldr	r1, [r1, #64]	; 0x40
    2d40:	cmp	r0, r1
    2d44:	bls	2d54 <coda_inflate+0x277c>
    2d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2d4c:	ldr	r0, [r0, #64]	; 0x40
    2d50:	str	r0, [fp, #-60]	; 0xffffffc4
    2d54:	b	2d80 <coda_inflate+0x27a8>
    2d58:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2d5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2d60:	ldr	r1, [r1, #68]	; 0x44
    2d64:	movw	r2, #0
    2d68:	sub	r1, r2, r1
    2d6c:	add	r0, r0, r1
    2d70:	str	r0, [fp, #-64]	; 0xffffffc0
    2d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2d78:	ldr	r0, [r0, #64]	; 0x40
    2d7c:	str	r0, [fp, #-60]	; 0xffffffc4
    2d80:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2d84:	ldr	r1, [fp, #-40]	; 0xffffffd8
    2d88:	cmp	r0, r1
    2d8c:	bls	2d98 <coda_inflate+0x27c0>
    2d90:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2d94:	str	r0, [fp, #-60]	; 0xffffffc4
    2d98:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2d9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    2da0:	sub	r0, r1, r0
    2da4:	str	r0, [fp, #-40]	; 0xffffffd8
    2da8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2db0:	ldr	r2, [r1, #64]	; 0x40
    2db4:	sub	r0, r2, r0
    2db8:	str	r0, [r1, #64]	; 0x40
    2dbc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    2dc0:	add	r1, r0, #1
    2dc4:	str	r1, [fp, #-64]	; 0xffffffc0
    2dc8:	ldrb	r0, [r0]
    2dcc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2dd0:	add	r2, r1, #1
    2dd4:	str	r2, [fp, #-32]	; 0xffffffe0
    2dd8:	strb	r0, [r1]
    2ddc:	ldr	r0, [fp, #-60]	; 0xffffffc4
    2de0:	mvn	r1, #0
    2de4:	add	r0, r0, r1
    2de8:	str	r0, [fp, #-60]	; 0xffffffc4
    2dec:	cmp	r0, #0
    2df0:	bne	2dbc <coda_inflate+0x27e4>
    2df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2df8:	ldr	r0, [r0, #64]	; 0x40
    2dfc:	cmp	r0, #0
    2e00:	bne	2e10 <coda_inflate+0x2838>
    2e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e08:	movw	r1, #20
    2e0c:	str	r1, [r0]
    2e10:	b	3168 <coda_inflate+0x2b90>
    2e14:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2e18:	cmp	r0, #0
    2e1c:	bne	2e24 <coda_inflate+0x284c>
    2e20:	b	316c <coda_inflate+0x2b94>
    2e24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e28:	ldr	r0, [r0, #64]	; 0x40
    2e2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2e30:	add	r2, r1, #1
    2e34:	str	r2, [fp, #-32]	; 0xffffffe0
    2e38:	strb	r0, [r1]
    2e3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2e40:	mvn	r1, #0
    2e44:	add	r0, r0, r1
    2e48:	str	r0, [fp, #-40]	; 0xffffffd8
    2e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e50:	movw	r1, #20
    2e54:	str	r1, [r0]
    2e58:	b	3168 <coda_inflate+0x2b90>
    2e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e60:	ldr	r0, [r0, #8]
    2e64:	cmp	r0, #0
    2e68:	beq	3044 <coda_inflate+0x2a6c>
    2e6c:	b	2e70 <coda_inflate+0x2898>
    2e70:	b	2e74 <coda_inflate+0x289c>
    2e74:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2e78:	cmp	r0, #32
    2e7c:	bcs	2ed8 <coda_inflate+0x2900>
    2e80:	b	2e84 <coda_inflate+0x28ac>
    2e84:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2e88:	cmp	r0, #0
    2e8c:	bne	2e94 <coda_inflate+0x28bc>
    2e90:	b	316c <coda_inflate+0x2b94>
    2e94:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2e98:	mvn	r1, #0
    2e9c:	add	r0, r0, r1
    2ea0:	str	r0, [fp, #-36]	; 0xffffffdc
    2ea4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2ea8:	add	r1, r0, #1
    2eac:	str	r1, [fp, #-28]	; 0xffffffe4
    2eb0:	ldrb	r0, [r0]
    2eb4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2eb8:	lsl	r0, r0, r1
    2ebc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2ec0:	add	r0, r1, r0
    2ec4:	str	r0, [fp, #-44]	; 0xffffffd4
    2ec8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2ecc:	add	r0, r0, #8
    2ed0:	str	r0, [fp, #-48]	; 0xffffffd0
    2ed4:	b	2e74 <coda_inflate+0x289c>
    2ed8:	b	2edc <coda_inflate+0x2904>
    2edc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2ee0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    2ee4:	sub	r0, r1, r0
    2ee8:	str	r0, [fp, #-56]	; 0xffffffc8
    2eec:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2ef0:	ldr	r1, [fp, #-16]
    2ef4:	ldr	r2, [r1, #20]
    2ef8:	add	r0, r2, r0
    2efc:	str	r0, [r1, #20]
    2f00:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2f04:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2f08:	ldr	r2, [r1, #28]
    2f0c:	add	r0, r2, r0
    2f10:	str	r0, [r1, #28]
    2f14:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2f18:	cmp	r0, #0
    2f1c:	beq	2f98 <coda_inflate+0x29c0>
    2f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f24:	ldr	r0, [r0, #16]
    2f28:	cmp	r0, #0
    2f2c:	beq	2f5c <coda_inflate+0x2984>
    2f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f34:	ldr	r0, [r0, #24]
    2f38:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2f3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f40:	movw	r3, #0
    2f44:	sub	r2, r3, r2
    2f48:	add	r1, r1, r2
    2f4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f50:	bl	0 <coda_crc32>
    2f54:	str	r0, [sp, #28]
    2f58:	b	2f84 <coda_inflate+0x29ac>
    2f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f60:	ldr	r0, [r0, #24]
    2f64:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2f68:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f6c:	movw	r3, #0
    2f70:	sub	r2, r3, r2
    2f74:	add	r1, r1, r2
    2f78:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f7c:	bl	0 <coda_adler32>
    2f80:	str	r0, [sp, #28]
    2f84:	ldr	r0, [sp, #28]
    2f88:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2f8c:	str	r0, [r1, #24]
    2f90:	ldr	r1, [fp, #-16]
    2f94:	str	r0, [r1, #48]	; 0x30
    2f98:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2f9c:	str	r0, [fp, #-56]	; 0xffffffc8
    2fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2fa4:	ldr	r0, [r0, #16]
    2fa8:	cmp	r0, #0
    2fac:	beq	2fbc <coda_inflate+0x29e4>
    2fb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2fb4:	str	r0, [sp, #24]
    2fb8:	b	2ffc <coda_inflate+0x2a24>
    2fbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2fc0:	lsr	r0, r0, #24
    2fc4:	and	r0, r0, #255	; 0xff
    2fc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2fcc:	lsr	r1, r1, #8
    2fd0:	and	r1, r1, #65280	; 0xff00
    2fd4:	add	r0, r0, r1
    2fd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2fdc:	and	r1, r1, #65280	; 0xff00
    2fe0:	lsl	r1, r1, #8
    2fe4:	add	r0, r0, r1
    2fe8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2fec:	and	r1, r1, #255	; 0xff
    2ff0:	lsl	r1, r1, #24
    2ff4:	add	r0, r0, r1
    2ff8:	str	r0, [sp, #24]
    2ffc:	ldr	r0, [sp, #24]
    3000:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3004:	ldr	r1, [r1, #24]
    3008:	cmp	r0, r1
    300c:	beq	3030 <coda_inflate+0x2a58>
    3010:	ldr	r0, [fp, #-16]
    3014:	movw	r1, #0
    3018:	movt	r1, #0
    301c:	str	r1, [r0, #24]
    3020:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3024:	movw	r1, #29
    3028:	str	r1, [r0]
    302c:	b	3168 <coda_inflate+0x2b90>
    3030:	b	3034 <coda_inflate+0x2a5c>
    3034:	movw	r0, #0
    3038:	str	r0, [fp, #-44]	; 0xffffffd4
    303c:	str	r0, [fp, #-48]	; 0xffffffd0
    3040:	b	3044 <coda_inflate+0x2a6c>
    3044:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3048:	movw	r1, #27
    304c:	str	r1, [r0]
    3050:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3054:	ldr	r0, [r0, #8]
    3058:	cmp	r0, #0
    305c:	beq	3128 <coda_inflate+0x2b50>
    3060:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3064:	ldr	r0, [r0, #16]
    3068:	cmp	r0, #0
    306c:	beq	3128 <coda_inflate+0x2b50>
    3070:	b	3074 <coda_inflate+0x2a9c>
    3074:	b	3078 <coda_inflate+0x2aa0>
    3078:	ldr	r0, [fp, #-48]	; 0xffffffd0
    307c:	cmp	r0, #32
    3080:	bcs	30dc <coda_inflate+0x2b04>
    3084:	b	3088 <coda_inflate+0x2ab0>
    3088:	ldr	r0, [fp, #-36]	; 0xffffffdc
    308c:	cmp	r0, #0
    3090:	bne	3098 <coda_inflate+0x2ac0>
    3094:	b	316c <coda_inflate+0x2b94>
    3098:	ldr	r0, [fp, #-36]	; 0xffffffdc
    309c:	mvn	r1, #0
    30a0:	add	r0, r0, r1
    30a4:	str	r0, [fp, #-36]	; 0xffffffdc
    30a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    30ac:	add	r1, r0, #1
    30b0:	str	r1, [fp, #-28]	; 0xffffffe4
    30b4:	ldrb	r0, [r0]
    30b8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    30bc:	lsl	r0, r0, r1
    30c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    30c4:	add	r0, r1, r0
    30c8:	str	r0, [fp, #-44]	; 0xffffffd4
    30cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    30d0:	add	r0, r0, #8
    30d4:	str	r0, [fp, #-48]	; 0xffffffd0
    30d8:	b	3078 <coda_inflate+0x2aa0>
    30dc:	b	30e0 <coda_inflate+0x2b08>
    30e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    30e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    30e8:	ldr	r1, [r1, #28]
    30ec:	cmp	r0, r1
    30f0:	beq	3114 <coda_inflate+0x2b3c>
    30f4:	ldr	r0, [fp, #-16]
    30f8:	movw	r1, #0
    30fc:	movt	r1, #0
    3100:	str	r1, [r0, #24]
    3104:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3108:	movw	r1, #29
    310c:	str	r1, [r0]
    3110:	b	3168 <coda_inflate+0x2b90>
    3114:	b	3118 <coda_inflate+0x2b40>
    3118:	movw	r0, #0
    311c:	str	r0, [fp, #-44]	; 0xffffffd4
    3120:	str	r0, [fp, #-48]	; 0xffffffd0
    3124:	b	3128 <coda_inflate+0x2b50>
    3128:	ldr	r0, [fp, #-24]	; 0xffffffe8
    312c:	movw	r1, #28
    3130:	str	r1, [r0]
    3134:	movw	r0, #1
    3138:	str	r0, [fp, #-80]	; 0xffffffb0
    313c:	b	316c <coda_inflate+0x2b94>
    3140:	mvn	r0, #2
    3144:	str	r0, [fp, #-80]	; 0xffffffb0
    3148:	b	316c <coda_inflate+0x2b94>
    314c:	mvn	r0, #3
    3150:	str	r0, [fp, #-12]
    3154:	b	3430 <coda_inflate+0x2e58>
    3158:	b	315c <coda_inflate+0x2b84>
    315c:	mvn	r0, #1
    3160:	str	r0, [fp, #-12]
    3164:	b	3430 <coda_inflate+0x2e58>
    3168:	b	6e0 <coda_inflate+0x108>
    316c:	b	3170 <coda_inflate+0x2b98>
    3170:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3174:	ldr	r1, [fp, #-16]
    3178:	str	r0, [r1, #12]
    317c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3180:	ldr	r1, [fp, #-16]
    3184:	str	r0, [r1, #16]
    3188:	ldr	r0, [fp, #-28]	; 0xffffffe4
    318c:	ldr	r1, [fp, #-16]
    3190:	str	r0, [r1]
    3194:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3198:	ldr	r1, [fp, #-16]
    319c:	str	r0, [r1, #4]
    31a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    31a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    31a8:	str	r0, [r1, #56]	; 0x38
    31ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    31b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    31b4:	str	r0, [r1, #60]	; 0x3c
    31b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    31bc:	ldr	r0, [r0, #40]	; 0x28
    31c0:	cmp	r0, #0
    31c4:	bne	3208 <coda_inflate+0x2c30>
    31c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    31cc:	ldr	r1, [fp, #-16]
    31d0:	ldr	r1, [r1, #16]
    31d4:	cmp	r0, r1
    31d8:	beq	324c <coda_inflate+0x2c74>
    31dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    31e0:	ldr	r0, [r0]
    31e4:	cmp	r0, #29
    31e8:	bcs	324c <coda_inflate+0x2c74>
    31ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    31f0:	ldr	r0, [r0]
    31f4:	cmp	r0, #26
    31f8:	bcc	3208 <coda_inflate+0x2c30>
    31fc:	ldr	r0, [fp, #-20]	; 0xffffffec
    3200:	cmp	r0, #4
    3204:	beq	324c <coda_inflate+0x2c74>
    3208:	ldr	r0, [fp, #-16]
    320c:	ldr	r1, [fp, #-16]
    3210:	ldr	r1, [r1, #12]
    3214:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3218:	ldr	r3, [fp, #-16]
    321c:	ldr	r3, [r3, #16]
    3220:	sub	r2, r2, r3
    3224:	bl	3484 <updatewindow>
    3228:	cmp	r0, #0
    322c:	beq	3248 <coda_inflate+0x2c70>
    3230:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3234:	movw	r1, #30
    3238:	str	r1, [r0]
    323c:	mvn	r0, #3
    3240:	str	r0, [fp, #-12]
    3244:	b	3430 <coda_inflate+0x2e58>
    3248:	b	324c <coda_inflate+0x2c74>
    324c:	ldr	r0, [fp, #-16]
    3250:	ldr	r0, [r0, #4]
    3254:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3258:	sub	r0, r1, r0
    325c:	str	r0, [fp, #-52]	; 0xffffffcc
    3260:	ldr	r0, [fp, #-16]
    3264:	ldr	r0, [r0, #16]
    3268:	ldr	r1, [fp, #-56]	; 0xffffffc8
    326c:	sub	r0, r1, r0
    3270:	str	r0, [fp, #-56]	; 0xffffffc8
    3274:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3278:	ldr	r1, [fp, #-16]
    327c:	ldr	r2, [r1, #8]
    3280:	add	r0, r2, r0
    3284:	str	r0, [r1, #8]
    3288:	ldr	r0, [fp, #-56]	; 0xffffffc8
    328c:	ldr	r1, [fp, #-16]
    3290:	ldr	r2, [r1, #20]
    3294:	add	r0, r2, r0
    3298:	str	r0, [r1, #20]
    329c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    32a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    32a4:	ldr	r2, [r1, #28]
    32a8:	add	r0, r2, r0
    32ac:	str	r0, [r1, #28]
    32b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    32b4:	ldr	r0, [r0, #8]
    32b8:	cmp	r0, #0
    32bc:	beq	334c <coda_inflate+0x2d74>
    32c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    32c4:	cmp	r0, #0
    32c8:	beq	334c <coda_inflate+0x2d74>
    32cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    32d0:	ldr	r0, [r0, #16]
    32d4:	cmp	r0, #0
    32d8:	beq	330c <coda_inflate+0x2d34>
    32dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    32e0:	ldr	r0, [r0, #24]
    32e4:	ldr	r1, [fp, #-16]
    32e8:	ldr	r1, [r1, #12]
    32ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    32f0:	movw	r3, #0
    32f4:	sub	r2, r3, r2
    32f8:	add	r1, r1, r2
    32fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3300:	bl	0 <coda_crc32>
    3304:	str	r0, [sp, #20]
    3308:	b	3338 <coda_inflate+0x2d60>
    330c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3310:	ldr	r0, [r0, #24]
    3314:	ldr	r1, [fp, #-16]
    3318:	ldr	r1, [r1, #12]
    331c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3320:	movw	r3, #0
    3324:	sub	r2, r3, r2
    3328:	add	r1, r1, r2
    332c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3330:	bl	0 <coda_adler32>
    3334:	str	r0, [sp, #20]
    3338:	ldr	r0, [sp, #20]
    333c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3340:	str	r0, [r1, #24]
    3344:	ldr	r1, [fp, #-16]
    3348:	str	r0, [r1, #48]	; 0x30
    334c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3350:	ldr	r0, [r0, #60]	; 0x3c
    3354:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3358:	ldr	r1, [r1, #4]
    335c:	cmp	r1, #0
    3360:	movw	r1, #0
    3364:	movne	r1, #1
    3368:	tst	r1, #1
    336c:	movw	r1, #64	; 0x40
    3370:	moveq	r1, #0
    3374:	add	r0, r0, r1
    3378:	ldr	r1, [fp, #-24]	; 0xffffffe8
    337c:	ldr	r1, [r1]
    3380:	cmp	r1, #11
    3384:	movw	r1, #0
    3388:	moveq	r1, #1
    338c:	tst	r1, #1
    3390:	movw	r1, #128	; 0x80
    3394:	moveq	r1, #0
    3398:	add	r0, r0, r1
    339c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    33a0:	ldr	r1, [r1]
    33a4:	cmp	r1, #19
    33a8:	movw	r1, #1
    33ac:	str	r0, [sp, #16]
    33b0:	str	r1, [sp, #12]
    33b4:	beq	33d0 <coda_inflate+0x2df8>
    33b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    33bc:	ldr	r0, [r0]
    33c0:	cmp	r0, #14
    33c4:	movw	r0, #0
    33c8:	moveq	r0, #1
    33cc:	str	r0, [sp, #12]
    33d0:	ldr	r0, [sp, #12]
    33d4:	tst	r0, #1
    33d8:	movw	r0, #256	; 0x100
    33dc:	moveq	r0, #0
    33e0:	ldr	r1, [sp, #16]
    33e4:	add	r0, r1, r0
    33e8:	ldr	r2, [fp, #-16]
    33ec:	str	r0, [r2, #44]	; 0x2c
    33f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    33f4:	cmp	r0, #0
    33f8:	bne	3408 <coda_inflate+0x2e30>
    33fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3400:	cmp	r0, #0
    3404:	beq	3414 <coda_inflate+0x2e3c>
    3408:	ldr	r0, [fp, #-20]	; 0xffffffec
    340c:	cmp	r0, #4
    3410:	bne	3428 <coda_inflate+0x2e50>
    3414:	ldr	r0, [fp, #-80]	; 0xffffffb0
    3418:	cmp	r0, #0
    341c:	bne	3428 <coda_inflate+0x2e50>
    3420:	mvn	r0, #4
    3424:	str	r0, [fp, #-80]	; 0xffffffb0
    3428:	ldr	r0, [fp, #-80]	; 0xffffffb0
    342c:	str	r0, [fp, #-12]
    3430:	ldr	r0, [fp, #-12]
    3434:	sub	sp, fp, #8
    3438:	pop	{r4, sl, fp, pc}

0000343c <fixedtables>:
    343c:	sub	sp, sp, #4
    3440:	str	r0, [sp]
    3444:	ldr	r0, [sp]
    3448:	movw	r1, #0
    344c:	movt	r1, #0
    3450:	str	r1, [r0, #76]	; 0x4c
    3454:	ldr	r0, [sp]
    3458:	movw	r1, #9
    345c:	str	r1, [r0, #84]	; 0x54
    3460:	ldr	r0, [sp]
    3464:	movw	r1, #0
    3468:	movt	r1, #0
    346c:	str	r1, [r0, #80]	; 0x50
    3470:	ldr	r0, [sp]
    3474:	movw	r1, #5
    3478:	str	r1, [r0, #88]	; 0x58
    347c:	add	sp, sp, #4
    3480:	bx	lr

00003484 <updatewindow>:
    3484:	push	{fp, lr}
    3488:	mov	fp, sp
    348c:	sub	sp, sp, #32
    3490:	str	r0, [fp, #-8]
    3494:	str	r1, [fp, #-12]
    3498:	str	r2, [sp, #16]
    349c:	ldr	r0, [fp, #-8]
    34a0:	ldr	r0, [r0, #28]
    34a4:	str	r0, [sp, #12]
    34a8:	ldr	r0, [sp, #12]
    34ac:	ldr	r0, [r0, #52]	; 0x34
    34b0:	movw	r1, #0
    34b4:	cmp	r0, r1
    34b8:	bne	3520 <updatewindow+0x9c>
    34bc:	ldr	r0, [fp, #-8]
    34c0:	ldr	r0, [r0, #32]
    34c4:	ldr	r1, [fp, #-8]
    34c8:	ldr	r1, [r1, #40]	; 0x28
    34cc:	ldr	r2, [sp, #12]
    34d0:	ldr	r2, [r2, #36]	; 0x24
    34d4:	movw	r3, #1
    34d8:	lsl	r2, r3, r2
    34dc:	str	r0, [sp, #4]
    34e0:	mov	r0, r1
    34e4:	mov	r1, r2
    34e8:	mov	r2, r3
    34ec:	ldr	r3, [sp, #4]
    34f0:	blx	r3
    34f4:	ldr	r1, [sp, #12]
    34f8:	str	r0, [r1, #52]	; 0x34
    34fc:	ldr	r0, [sp, #12]
    3500:	ldr	r0, [r0, #52]	; 0x34
    3504:	movw	r1, #0
    3508:	cmp	r0, r1
    350c:	bne	351c <updatewindow+0x98>
    3510:	movw	r0, #1
    3514:	str	r0, [fp, #-4]
    3518:	b	36f4 <updatewindow+0x270>
    351c:	b	3520 <updatewindow+0x9c>
    3520:	ldr	r0, [sp, #12]
    3524:	ldr	r0, [r0, #40]	; 0x28
    3528:	cmp	r0, #0
    352c:	bne	355c <updatewindow+0xd8>
    3530:	ldr	r0, [sp, #12]
    3534:	ldr	r0, [r0, #36]	; 0x24
    3538:	movw	r1, #1
    353c:	lsl	r0, r1, r0
    3540:	ldr	r1, [sp, #12]
    3544:	str	r0, [r1, #40]	; 0x28
    3548:	ldr	r0, [sp, #12]
    354c:	movw	r1, #0
    3550:	str	r1, [r0, #48]	; 0x30
    3554:	ldr	r0, [sp, #12]
    3558:	str	r1, [r0, #44]	; 0x2c
    355c:	ldr	r0, [sp, #16]
    3560:	ldr	r1, [sp, #12]
    3564:	ldr	r1, [r1, #40]	; 0x28
    3568:	cmp	r0, r1
    356c:	bcc	35c0 <updatewindow+0x13c>
    3570:	ldr	r0, [sp, #12]
    3574:	ldr	r0, [r0, #52]	; 0x34
    3578:	ldr	r1, [fp, #-12]
    357c:	ldr	r2, [sp, #12]
    3580:	ldr	r2, [r2, #40]	; 0x28
    3584:	movw	r3, #0
    3588:	sub	r2, r3, r2
    358c:	add	r1, r1, r2
    3590:	ldr	r2, [sp, #12]
    3594:	ldr	r2, [r2, #40]	; 0x28
    3598:	str	r3, [sp]
    359c:	bl	0 <memcpy>
    35a0:	ldr	r0, [sp, #12]
    35a4:	ldr	r1, [sp]
    35a8:	str	r1, [r0, #48]	; 0x30
    35ac:	ldr	r0, [sp, #12]
    35b0:	ldr	r0, [r0, #40]	; 0x28
    35b4:	ldr	r2, [sp, #12]
    35b8:	str	r0, [r2, #44]	; 0x2c
    35bc:	b	36ec <updatewindow+0x268>
    35c0:	ldr	r0, [sp, #12]
    35c4:	ldr	r0, [r0, #40]	; 0x28
    35c8:	ldr	r1, [sp, #12]
    35cc:	ldr	r1, [r1, #48]	; 0x30
    35d0:	sub	r0, r0, r1
    35d4:	str	r0, [sp, #8]
    35d8:	ldr	r0, [sp, #8]
    35dc:	ldr	r1, [sp, #16]
    35e0:	cmp	r0, r1
    35e4:	bls	35f0 <updatewindow+0x16c>
    35e8:	ldr	r0, [sp, #16]
    35ec:	str	r0, [sp, #8]
    35f0:	ldr	r0, [sp, #12]
    35f4:	ldr	r0, [r0, #52]	; 0x34
    35f8:	ldr	r1, [sp, #12]
    35fc:	ldr	r1, [r1, #48]	; 0x30
    3600:	add	r0, r0, r1
    3604:	ldr	r1, [fp, #-12]
    3608:	ldr	r2, [sp, #16]
    360c:	movw	r3, #0
    3610:	sub	r2, r3, r2
    3614:	add	r1, r1, r2
    3618:	ldr	r2, [sp, #8]
    361c:	bl	0 <memcpy>
    3620:	ldr	r0, [sp, #8]
    3624:	ldr	r1, [sp, #16]
    3628:	sub	r0, r1, r0
    362c:	str	r0, [sp, #16]
    3630:	ldr	r0, [sp, #16]
    3634:	cmp	r0, #0
    3638:	beq	3680 <updatewindow+0x1fc>
    363c:	ldr	r0, [sp, #12]
    3640:	ldr	r0, [r0, #52]	; 0x34
    3644:	ldr	r1, [fp, #-12]
    3648:	ldr	r2, [sp, #16]
    364c:	movw	r3, #0
    3650:	sub	r2, r3, r2
    3654:	add	r1, r1, r2
    3658:	ldr	r2, [sp, #16]
    365c:	bl	0 <memcpy>
    3660:	ldr	r0, [sp, #16]
    3664:	ldr	r1, [sp, #12]
    3668:	str	r0, [r1, #48]	; 0x30
    366c:	ldr	r0, [sp, #12]
    3670:	ldr	r0, [r0, #40]	; 0x28
    3674:	ldr	r1, [sp, #12]
    3678:	str	r0, [r1, #44]	; 0x2c
    367c:	b	36e8 <updatewindow+0x264>
    3680:	ldr	r0, [sp, #8]
    3684:	ldr	r1, [sp, #12]
    3688:	ldr	r2, [r1, #48]	; 0x30
    368c:	add	r0, r2, r0
    3690:	str	r0, [r1, #48]	; 0x30
    3694:	ldr	r0, [sp, #12]
    3698:	ldr	r0, [r0, #48]	; 0x30
    369c:	ldr	r1, [sp, #12]
    36a0:	ldr	r1, [r1, #40]	; 0x28
    36a4:	cmp	r0, r1
    36a8:	bne	36b8 <updatewindow+0x234>
    36ac:	ldr	r0, [sp, #12]
    36b0:	movw	r1, #0
    36b4:	str	r1, [r0, #48]	; 0x30
    36b8:	ldr	r0, [sp, #12]
    36bc:	ldr	r0, [r0, #44]	; 0x2c
    36c0:	ldr	r1, [sp, #12]
    36c4:	ldr	r1, [r1, #40]	; 0x28
    36c8:	cmp	r0, r1
    36cc:	bcs	36e4 <updatewindow+0x260>
    36d0:	ldr	r0, [sp, #8]
    36d4:	ldr	r1, [sp, #12]
    36d8:	ldr	r2, [r1, #44]	; 0x2c
    36dc:	add	r0, r2, r0
    36e0:	str	r0, [r1, #44]	; 0x2c
    36e4:	b	36e8 <updatewindow+0x264>
    36e8:	b	36ec <updatewindow+0x268>
    36ec:	movw	r0, #0
    36f0:	str	r0, [fp, #-4]
    36f4:	ldr	r0, [fp, #-4]
    36f8:	mov	sp, fp
    36fc:	pop	{fp, pc}

00003700 <coda_inflateEnd>:
    3700:	push	{fp, lr}
    3704:	mov	fp, sp
    3708:	sub	sp, sp, #24
    370c:	str	r0, [fp, #-8]
    3710:	ldr	r0, [fp, #-8]
    3714:	movw	r1, #0
    3718:	cmp	r0, r1
    371c:	beq	3748 <coda_inflateEnd+0x48>
    3720:	ldr	r0, [fp, #-8]
    3724:	ldr	r0, [r0, #28]
    3728:	movw	r1, #0
    372c:	cmp	r0, r1
    3730:	beq	3748 <coda_inflateEnd+0x48>
    3734:	ldr	r0, [fp, #-8]
    3738:	ldr	r0, [r0, #36]	; 0x24
    373c:	movw	r1, #0
    3740:	cmp	r0, r1
    3744:	bne	3754 <coda_inflateEnd+0x54>
    3748:	mvn	r0, #1
    374c:	str	r0, [fp, #-4]
    3750:	b	37dc <coda_inflateEnd+0xdc>
    3754:	ldr	r0, [fp, #-8]
    3758:	ldr	r0, [r0, #28]
    375c:	str	r0, [sp, #12]
    3760:	ldr	r0, [sp, #12]
    3764:	ldr	r0, [r0, #52]	; 0x34
    3768:	movw	r1, #0
    376c:	cmp	r0, r1
    3770:	beq	37a0 <coda_inflateEnd+0xa0>
    3774:	ldr	r0, [fp, #-8]
    3778:	ldr	r0, [r0, #36]	; 0x24
    377c:	ldr	r1, [fp, #-8]
    3780:	ldr	r1, [r1, #40]	; 0x28
    3784:	ldr	r2, [sp, #12]
    3788:	ldr	r2, [r2, #52]	; 0x34
    378c:	str	r0, [sp, #8]
    3790:	mov	r0, r1
    3794:	mov	r1, r2
    3798:	ldr	r2, [sp, #8]
    379c:	blx	r2
    37a0:	ldr	r0, [fp, #-8]
    37a4:	ldr	r0, [r0, #36]	; 0x24
    37a8:	ldr	r1, [fp, #-8]
    37ac:	ldr	r1, [r1, #40]	; 0x28
    37b0:	ldr	r2, [fp, #-8]
    37b4:	ldr	r2, [r2, #28]
    37b8:	str	r0, [sp, #4]
    37bc:	mov	r0, r1
    37c0:	mov	r1, r2
    37c4:	ldr	r2, [sp, #4]
    37c8:	blx	r2
    37cc:	ldr	r0, [fp, #-8]
    37d0:	movw	r1, #0
    37d4:	str	r1, [r0, #28]
    37d8:	str	r1, [fp, #-4]
    37dc:	ldr	r0, [fp, #-4]
    37e0:	mov	sp, fp
    37e4:	pop	{fp, pc}

000037e8 <coda_inflateGetDictionary>:
    37e8:	push	{fp, lr}
    37ec:	mov	fp, sp
    37f0:	sub	sp, sp, #24
    37f4:	str	r0, [fp, #-8]
    37f8:	str	r1, [sp, #12]
    37fc:	str	r2, [sp, #8]
    3800:	ldr	r0, [fp, #-8]
    3804:	movw	r1, #0
    3808:	cmp	r0, r1
    380c:	beq	3824 <coda_inflateGetDictionary+0x3c>
    3810:	ldr	r0, [fp, #-8]
    3814:	ldr	r0, [r0, #28]
    3818:	movw	r1, #0
    381c:	cmp	r0, r1
    3820:	bne	3830 <coda_inflateGetDictionary+0x48>
    3824:	mvn	r0, #1
    3828:	str	r0, [fp, #-4]
    382c:	b	38ec <coda_inflateGetDictionary+0x104>
    3830:	ldr	r0, [fp, #-8]
    3834:	ldr	r0, [r0, #28]
    3838:	str	r0, [sp, #4]
    383c:	ldr	r0, [sp, #4]
    3840:	ldr	r0, [r0, #44]	; 0x2c
    3844:	cmp	r0, #0
    3848:	beq	38c4 <coda_inflateGetDictionary+0xdc>
    384c:	ldr	r0, [sp, #12]
    3850:	movw	r1, #0
    3854:	cmp	r0, r1
    3858:	beq	38c4 <coda_inflateGetDictionary+0xdc>
    385c:	ldr	r0, [sp, #12]
    3860:	ldr	r1, [sp, #4]
    3864:	ldr	r1, [r1, #52]	; 0x34
    3868:	ldr	r2, [sp, #4]
    386c:	ldr	r2, [r2, #48]	; 0x30
    3870:	add	r1, r1, r2
    3874:	ldr	r2, [sp, #4]
    3878:	ldr	r2, [r2, #44]	; 0x2c
    387c:	ldr	r3, [sp, #4]
    3880:	ldr	r3, [r3, #48]	; 0x30
    3884:	sub	r2, r2, r3
    3888:	bl	0 <memcpy>
    388c:	ldr	r0, [sp, #12]
    3890:	ldr	r1, [sp, #4]
    3894:	ldr	r1, [r1, #44]	; 0x2c
    3898:	add	r0, r0, r1
    389c:	ldr	r1, [sp, #4]
    38a0:	ldr	r1, [r1, #48]	; 0x30
    38a4:	movw	r2, #0
    38a8:	sub	r1, r2, r1
    38ac:	add	r0, r0, r1
    38b0:	ldr	r1, [sp, #4]
    38b4:	ldr	r1, [r1, #52]	; 0x34
    38b8:	ldr	r2, [sp, #4]
    38bc:	ldr	r2, [r2, #48]	; 0x30
    38c0:	bl	0 <memcpy>
    38c4:	ldr	r0, [sp, #8]
    38c8:	movw	r1, #0
    38cc:	cmp	r0, r1
    38d0:	beq	38e4 <coda_inflateGetDictionary+0xfc>
    38d4:	ldr	r0, [sp, #4]
    38d8:	ldr	r0, [r0, #44]	; 0x2c
    38dc:	ldr	r1, [sp, #8]
    38e0:	str	r0, [r1]
    38e4:	movw	r0, #0
    38e8:	str	r0, [fp, #-4]
    38ec:	ldr	r0, [fp, #-4]
    38f0:	mov	sp, fp
    38f4:	pop	{fp, pc}

000038f8 <coda_inflateSetDictionary>:
    38f8:	push	{fp, lr}
    38fc:	mov	fp, sp
    3900:	sub	sp, sp, #32
    3904:	str	r0, [fp, #-8]
    3908:	str	r1, [fp, #-12]
    390c:	str	r2, [sp, #16]
    3910:	ldr	r0, [fp, #-8]
    3914:	movw	r1, #0
    3918:	cmp	r0, r1
    391c:	beq	3934 <coda_inflateSetDictionary+0x3c>
    3920:	ldr	r0, [fp, #-8]
    3924:	ldr	r0, [r0, #28]
    3928:	movw	r1, #0
    392c:	cmp	r0, r1
    3930:	bne	3940 <coda_inflateSetDictionary+0x48>
    3934:	mvn	r0, #1
    3938:	str	r0, [fp, #-4]
    393c:	b	3a2c <coda_inflateSetDictionary+0x134>
    3940:	ldr	r0, [fp, #-8]
    3944:	ldr	r0, [r0, #28]
    3948:	str	r0, [sp, #12]
    394c:	ldr	r0, [sp, #12]
    3950:	ldr	r0, [r0, #8]
    3954:	cmp	r0, #0
    3958:	beq	3978 <coda_inflateSetDictionary+0x80>
    395c:	ldr	r0, [sp, #12]
    3960:	ldr	r0, [r0]
    3964:	cmp	r0, #10
    3968:	beq	3978 <coda_inflateSetDictionary+0x80>
    396c:	mvn	r0, #1
    3970:	str	r0, [fp, #-4]
    3974:	b	3a2c <coda_inflateSetDictionary+0x134>
    3978:	ldr	r0, [sp, #12]
    397c:	ldr	r0, [r0]
    3980:	cmp	r0, #10
    3984:	bne	39d8 <coda_inflateSetDictionary+0xe0>
    3988:	movw	r0, #0
    398c:	str	r0, [sp]
    3990:	ldr	r1, [sp]
    3994:	ldr	r2, [sp]
    3998:	bl	0 <coda_adler32>
    399c:	str	r0, [sp, #8]
    39a0:	ldr	r0, [sp, #8]
    39a4:	ldr	r1, [fp, #-12]
    39a8:	ldr	r2, [sp, #16]
    39ac:	bl	0 <coda_adler32>
    39b0:	str	r0, [sp, #8]
    39b4:	ldr	r0, [sp, #8]
    39b8:	ldr	r1, [sp, #12]
    39bc:	ldr	r1, [r1, #24]
    39c0:	cmp	r0, r1
    39c4:	beq	39d4 <coda_inflateSetDictionary+0xdc>
    39c8:	mvn	r0, #2
    39cc:	str	r0, [fp, #-4]
    39d0:	b	3a2c <coda_inflateSetDictionary+0x134>
    39d4:	b	39d8 <coda_inflateSetDictionary+0xe0>
    39d8:	ldr	r0, [fp, #-8]
    39dc:	ldr	r1, [fp, #-12]
    39e0:	ldr	r2, [sp, #16]
    39e4:	add	r1, r1, r2
    39e8:	ldr	r2, [sp, #16]
    39ec:	bl	3484 <updatewindow>
    39f0:	str	r0, [sp, #4]
    39f4:	ldr	r0, [sp, #4]
    39f8:	cmp	r0, #0
    39fc:	beq	3a18 <coda_inflateSetDictionary+0x120>
    3a00:	ldr	r0, [sp, #12]
    3a04:	movw	r1, #30
    3a08:	str	r1, [r0]
    3a0c:	mvn	r0, #3
    3a10:	str	r0, [fp, #-4]
    3a14:	b	3a2c <coda_inflateSetDictionary+0x134>
    3a18:	ldr	r0, [sp, #12]
    3a1c:	movw	r1, #1
    3a20:	str	r1, [r0, #12]
    3a24:	movw	r0, #0
    3a28:	str	r0, [fp, #-4]
    3a2c:	ldr	r0, [fp, #-4]
    3a30:	mov	sp, fp
    3a34:	pop	{fp, pc}

00003a38 <coda_inflateGetHeader>:
    3a38:	sub	sp, sp, #16
    3a3c:	str	r0, [sp, #8]
    3a40:	str	r1, [sp, #4]
    3a44:	ldr	r0, [sp, #8]
    3a48:	movw	r1, #0
    3a4c:	cmp	r0, r1
    3a50:	beq	3a68 <coda_inflateGetHeader+0x30>
    3a54:	ldr	r0, [sp, #8]
    3a58:	ldr	r0, [r0, #28]
    3a5c:	movw	r1, #0
    3a60:	cmp	r0, r1
    3a64:	bne	3a74 <coda_inflateGetHeader+0x3c>
    3a68:	mvn	r0, #1
    3a6c:	str	r0, [sp, #12]
    3a70:	b	3abc <coda_inflateGetHeader+0x84>
    3a74:	ldr	r0, [sp, #8]
    3a78:	ldr	r0, [r0, #28]
    3a7c:	str	r0, [sp]
    3a80:	ldr	r0, [sp]
    3a84:	ldr	r0, [r0, #8]
    3a88:	and	r0, r0, #2
    3a8c:	cmp	r0, #0
    3a90:	bne	3aa0 <coda_inflateGetHeader+0x68>
    3a94:	mvn	r0, #1
    3a98:	str	r0, [sp, #12]
    3a9c:	b	3abc <coda_inflateGetHeader+0x84>
    3aa0:	ldr	r0, [sp, #4]
    3aa4:	ldr	r1, [sp]
    3aa8:	str	r0, [r1, #32]
    3aac:	ldr	r0, [sp, #4]
    3ab0:	movw	r1, #0
    3ab4:	str	r1, [r0, #48]	; 0x30
    3ab8:	str	r1, [sp, #12]
    3abc:	ldr	r0, [sp, #12]
    3ac0:	add	sp, sp, #16
    3ac4:	bx	lr

00003ac8 <coda_inflateSync>:
    3ac8:	push	{fp, lr}
    3acc:	mov	fp, sp
    3ad0:	sub	sp, sp, #40	; 0x28
    3ad4:	str	r0, [fp, #-8]
    3ad8:	ldr	r0, [fp, #-8]
    3adc:	movw	r1, #0
    3ae0:	cmp	r0, r1
    3ae4:	beq	3afc <coda_inflateSync+0x34>
    3ae8:	ldr	r0, [fp, #-8]
    3aec:	ldr	r0, [r0, #28]
    3af0:	movw	r1, #0
    3af4:	cmp	r0, r1
    3af8:	bne	3b08 <coda_inflateSync+0x40>
    3afc:	mvn	r0, #1
    3b00:	str	r0, [fp, #-4]
    3b04:	b	3cdc <coda_inflateSync+0x214>
    3b08:	ldr	r0, [fp, #-8]
    3b0c:	ldr	r0, [r0, #28]
    3b10:	str	r0, [sp, #12]
    3b14:	ldr	r0, [fp, #-8]
    3b18:	ldr	r0, [r0, #4]
    3b1c:	cmp	r0, #0
    3b20:	bne	3b40 <coda_inflateSync+0x78>
    3b24:	ldr	r0, [sp, #12]
    3b28:	ldr	r0, [r0, #60]	; 0x3c
    3b2c:	cmp	r0, #8
    3b30:	bcs	3b40 <coda_inflateSync+0x78>
    3b34:	mvn	r0, #4
    3b38:	str	r0, [fp, #-4]
    3b3c:	b	3cdc <coda_inflateSync+0x214>
    3b40:	ldr	r0, [sp, #12]
    3b44:	ldr	r0, [r0]
    3b48:	cmp	r0, #31
    3b4c:	beq	3c14 <coda_inflateSync+0x14c>
    3b50:	ldr	r0, [sp, #12]
    3b54:	movw	r1, #31
    3b58:	str	r1, [r0]
    3b5c:	ldr	r0, [sp, #12]
    3b60:	ldr	r0, [r0, #60]	; 0x3c
    3b64:	and	r0, r0, #7
    3b68:	ldr	r1, [sp, #12]
    3b6c:	ldr	r2, [r1, #56]	; 0x38
    3b70:	lsl	r0, r2, r0
    3b74:	str	r0, [r1, #56]	; 0x38
    3b78:	ldr	r0, [sp, #12]
    3b7c:	ldr	r0, [r0, #60]	; 0x3c
    3b80:	and	r0, r0, #7
    3b84:	ldr	r1, [sp, #12]
    3b88:	ldr	r2, [r1, #60]	; 0x3c
    3b8c:	sub	r0, r2, r0
    3b90:	str	r0, [r1, #60]	; 0x3c
    3b94:	movw	r0, #0
    3b98:	str	r0, [fp, #-12]
    3b9c:	ldr	r0, [sp, #12]
    3ba0:	ldr	r0, [r0, #60]	; 0x3c
    3ba4:	cmp	r0, #8
    3ba8:	bcc	3bf0 <coda_inflateSync+0x128>
    3bac:	ldr	r0, [sp, #12]
    3bb0:	ldr	r0, [r0, #56]	; 0x38
    3bb4:	ldr	r1, [fp, #-12]
    3bb8:	add	r2, r1, #1
    3bbc:	str	r2, [fp, #-12]
    3bc0:	add	r2, sp, #16
    3bc4:	add	r1, r2, r1
    3bc8:	strb	r0, [r1]
    3bcc:	ldr	r0, [sp, #12]
    3bd0:	ldr	r1, [r0, #56]	; 0x38
    3bd4:	lsr	r1, r1, #8
    3bd8:	str	r1, [r0, #56]	; 0x38
    3bdc:	ldr	r0, [sp, #12]
    3be0:	ldr	r1, [r0, #60]	; 0x3c
    3be4:	sub	r1, r1, #8
    3be8:	str	r1, [r0, #60]	; 0x3c
    3bec:	b	3b9c <coda_inflateSync+0xd4>
    3bf0:	add	r1, sp, #16
    3bf4:	ldr	r0, [sp, #12]
    3bf8:	movw	r2, #0
    3bfc:	str	r2, [r0, #104]	; 0x68
    3c00:	ldr	r0, [sp, #12]
    3c04:	add	r0, r0, #104	; 0x68
    3c08:	ldr	r2, [fp, #-12]
    3c0c:	bl	3ce8 <syncsearch>
    3c10:	str	r0, [sp, #8]
    3c14:	ldr	r0, [sp, #12]
    3c18:	add	r0, r0, #104	; 0x68
    3c1c:	ldr	r1, [fp, #-8]
    3c20:	ldr	r1, [r1]
    3c24:	ldr	r2, [fp, #-8]
    3c28:	ldr	r2, [r2, #4]
    3c2c:	bl	3ce8 <syncsearch>
    3c30:	str	r0, [fp, #-12]
    3c34:	ldr	r0, [fp, #-12]
    3c38:	ldr	r1, [fp, #-8]
    3c3c:	ldr	r2, [r1, #4]
    3c40:	sub	r0, r2, r0
    3c44:	str	r0, [r1, #4]
    3c48:	ldr	r0, [fp, #-12]
    3c4c:	ldr	r1, [fp, #-8]
    3c50:	ldr	r2, [r1]
    3c54:	add	r0, r2, r0
    3c58:	str	r0, [r1]
    3c5c:	ldr	r0, [fp, #-12]
    3c60:	ldr	r1, [fp, #-8]
    3c64:	ldr	r2, [r1, #8]
    3c68:	add	r0, r2, r0
    3c6c:	str	r0, [r1, #8]
    3c70:	ldr	r0, [sp, #12]
    3c74:	ldr	r0, [r0, #104]	; 0x68
    3c78:	cmp	r0, #4
    3c7c:	beq	3c8c <coda_inflateSync+0x1c4>
    3c80:	mvn	r0, #2
    3c84:	str	r0, [fp, #-4]
    3c88:	b	3cdc <coda_inflateSync+0x214>
    3c8c:	ldr	r0, [fp, #-8]
    3c90:	ldr	r0, [r0, #8]
    3c94:	str	r0, [fp, #-16]
    3c98:	ldr	r0, [fp, #-8]
    3c9c:	ldr	r0, [r0, #20]
    3ca0:	str	r0, [sp, #20]
    3ca4:	ldr	r0, [fp, #-8]
    3ca8:	bl	120 <coda_inflateReset>
    3cac:	ldr	lr, [fp, #-16]
    3cb0:	ldr	r1, [fp, #-8]
    3cb4:	str	lr, [r1, #8]
    3cb8:	ldr	r1, [sp, #20]
    3cbc:	ldr	lr, [fp, #-8]
    3cc0:	str	r1, [lr, #20]
    3cc4:	ldr	r1, [sp, #12]
    3cc8:	movw	lr, #11
    3ccc:	str	lr, [r1]
    3cd0:	movw	r1, #0
    3cd4:	str	r1, [fp, #-4]
    3cd8:	str	r0, [sp, #4]
    3cdc:	ldr	r0, [fp, #-4]
    3ce0:	mov	sp, fp
    3ce4:	pop	{fp, pc}

00003ce8 <syncsearch>:
    3ce8:	sub	sp, sp, #24
    3cec:	str	r0, [sp, #20]
    3cf0:	str	r1, [sp, #16]
    3cf4:	str	r2, [sp, #12]
    3cf8:	ldr	r0, [sp, #20]
    3cfc:	ldr	r0, [r0]
    3d00:	str	r0, [sp, #8]
    3d04:	movw	r0, #0
    3d08:	str	r0, [sp, #4]
    3d0c:	ldr	r0, [sp, #4]
    3d10:	ldr	r1, [sp, #12]
    3d14:	cmp	r0, r1
    3d18:	movw	r0, #0
    3d1c:	str	r0, [sp]
    3d20:	bcs	3d38 <syncsearch+0x50>
    3d24:	ldr	r0, [sp, #8]
    3d28:	cmp	r0, #4
    3d2c:	movw	r0, #0
    3d30:	movcc	r0, #1
    3d34:	str	r0, [sp]
    3d38:	ldr	r0, [sp]
    3d3c:	tst	r0, #1
    3d40:	beq	3dd0 <syncsearch+0xe8>
    3d44:	ldr	r0, [sp, #16]
    3d48:	ldr	r1, [sp, #4]
    3d4c:	add	r0, r0, r1
    3d50:	ldrb	r0, [r0]
    3d54:	ldr	r1, [sp, #8]
    3d58:	cmp	r1, #2
    3d5c:	movw	r1, #0
    3d60:	movcc	r1, #1
    3d64:	tst	r1, #1
    3d68:	movw	r1, #0
    3d6c:	moveq	r1, #255	; 0xff
    3d70:	cmp	r0, r1
    3d74:	bne	3d88 <syncsearch+0xa0>
    3d78:	ldr	r0, [sp, #8]
    3d7c:	add	r0, r0, #1
    3d80:	str	r0, [sp, #8]
    3d84:	b	3dc0 <syncsearch+0xd8>
    3d88:	ldr	r0, [sp, #16]
    3d8c:	ldr	r1, [sp, #4]
    3d90:	add	r0, r0, r1
    3d94:	ldrsb	r0, [r0]
    3d98:	cmp	r0, #0
    3d9c:	beq	3dac <syncsearch+0xc4>
    3da0:	movw	r0, #0
    3da4:	str	r0, [sp, #8]
    3da8:	b	3dbc <syncsearch+0xd4>
    3dac:	ldr	r0, [sp, #8]
    3db0:	movw	r1, #4
    3db4:	sub	r0, r1, r0
    3db8:	str	r0, [sp, #8]
    3dbc:	b	3dc0 <syncsearch+0xd8>
    3dc0:	ldr	r0, [sp, #4]
    3dc4:	add	r0, r0, #1
    3dc8:	str	r0, [sp, #4]
    3dcc:	b	3d0c <syncsearch+0x24>
    3dd0:	ldr	r0, [sp, #8]
    3dd4:	ldr	r1, [sp, #20]
    3dd8:	str	r0, [r1]
    3ddc:	ldr	r0, [sp, #4]
    3de0:	add	sp, sp, #24
    3de4:	bx	lr

00003de8 <coda_inflateSyncPoint>:
    3de8:	sub	sp, sp, #16
    3dec:	str	r0, [sp, #8]
    3df0:	ldr	r0, [sp, #8]
    3df4:	movw	r1, #0
    3df8:	cmp	r0, r1
    3dfc:	beq	3e14 <coda_inflateSyncPoint+0x2c>
    3e00:	ldr	r0, [sp, #8]
    3e04:	ldr	r0, [r0, #28]
    3e08:	movw	r1, #0
    3e0c:	cmp	r0, r1
    3e10:	bne	3e20 <coda_inflateSyncPoint+0x38>
    3e14:	mvn	r0, #1
    3e18:	str	r0, [sp, #12]
    3e1c:	b	3e68 <coda_inflateSyncPoint+0x80>
    3e20:	ldr	r0, [sp, #8]
    3e24:	ldr	r0, [r0, #28]
    3e28:	str	r0, [sp, #4]
    3e2c:	ldr	r0, [sp, #4]
    3e30:	ldr	r0, [r0]
    3e34:	cmp	r0, #13
    3e38:	movw	r0, #0
    3e3c:	str	r0, [sp]
    3e40:	bne	3e5c <coda_inflateSyncPoint+0x74>
    3e44:	ldr	r0, [sp, #4]
    3e48:	ldr	r0, [r0, #60]	; 0x3c
    3e4c:	cmp	r0, #0
    3e50:	movw	r0, #0
    3e54:	moveq	r0, #1
    3e58:	str	r0, [sp]
    3e5c:	ldr	r0, [sp]
    3e60:	and	r0, r0, #1
    3e64:	str	r0, [sp, #12]
    3e68:	ldr	r0, [sp, #12]
    3e6c:	add	sp, sp, #16
    3e70:	bx	lr

00003e74 <coda_inflateCopy>:
    3e74:	push	{fp, lr}
    3e78:	mov	fp, sp
    3e7c:	sub	sp, sp, #48	; 0x30
    3e80:	str	r0, [fp, #-8]
    3e84:	str	r1, [fp, #-12]
    3e88:	ldr	r0, [fp, #-8]
    3e8c:	movw	r1, #0
    3e90:	cmp	r0, r1
    3e94:	beq	3ee4 <coda_inflateCopy+0x70>
    3e98:	ldr	r0, [fp, #-12]
    3e9c:	movw	r1, #0
    3ea0:	cmp	r0, r1
    3ea4:	beq	3ee4 <coda_inflateCopy+0x70>
    3ea8:	ldr	r0, [fp, #-12]
    3eac:	ldr	r0, [r0, #28]
    3eb0:	movw	r1, #0
    3eb4:	cmp	r0, r1
    3eb8:	beq	3ee4 <coda_inflateCopy+0x70>
    3ebc:	ldr	r0, [fp, #-12]
    3ec0:	ldr	r0, [r0, #32]
    3ec4:	movw	r1, #0
    3ec8:	cmp	r0, r1
    3ecc:	beq	3ee4 <coda_inflateCopy+0x70>
    3ed0:	ldr	r0, [fp, #-12]
    3ed4:	ldr	r0, [r0, #36]	; 0x24
    3ed8:	movw	r1, #0
    3edc:	cmp	r0, r1
    3ee0:	bne	3ef0 <coda_inflateCopy+0x7c>
    3ee4:	mvn	r0, #1
    3ee8:	str	r0, [fp, #-4]
    3eec:	b	4110 <coda_inflateCopy+0x29c>
    3ef0:	ldr	r0, [fp, #-12]
    3ef4:	ldr	r0, [r0, #28]
    3ef8:	str	r0, [fp, #-16]
    3efc:	ldr	r0, [fp, #-12]
    3f00:	ldr	r0, [r0, #32]
    3f04:	ldr	r1, [fp, #-12]
    3f08:	ldr	r1, [r1, #40]	; 0x28
    3f0c:	str	r0, [sp, #16]
    3f10:	mov	r0, r1
    3f14:	movw	r1, #1
    3f18:	movw	r2, #7116	; 0x1bcc
    3f1c:	ldr	r3, [sp, #16]
    3f20:	blx	r3
    3f24:	str	r0, [fp, #-20]	; 0xffffffec
    3f28:	ldr	r0, [fp, #-20]	; 0xffffffec
    3f2c:	movw	r1, #0
    3f30:	cmp	r0, r1
    3f34:	bne	3f44 <coda_inflateCopy+0xd0>
    3f38:	mvn	r0, #3
    3f3c:	str	r0, [fp, #-4]
    3f40:	b	4110 <coda_inflateCopy+0x29c>
    3f44:	movw	r0, #0
    3f48:	str	r0, [sp, #24]
    3f4c:	ldr	r1, [fp, #-16]
    3f50:	ldr	r1, [r1, #52]	; 0x34
    3f54:	cmp	r1, r0
    3f58:	beq	3fe0 <coda_inflateCopy+0x16c>
    3f5c:	ldr	r0, [fp, #-12]
    3f60:	ldr	r0, [r0, #32]
    3f64:	ldr	r1, [fp, #-12]
    3f68:	ldr	r1, [r1, #40]	; 0x28
    3f6c:	ldr	r2, [fp, #-16]
    3f70:	ldr	r2, [r2, #36]	; 0x24
    3f74:	movw	r3, #1
    3f78:	lsl	r2, r3, r2
    3f7c:	str	r0, [sp, #12]
    3f80:	mov	r0, r1
    3f84:	mov	r1, r2
    3f88:	mov	r2, r3
    3f8c:	ldr	r3, [sp, #12]
    3f90:	blx	r3
    3f94:	str	r0, [sp, #24]
    3f98:	ldr	r0, [sp, #24]
    3f9c:	movw	r1, #0
    3fa0:	cmp	r0, r1
    3fa4:	bne	3fdc <coda_inflateCopy+0x168>
    3fa8:	ldr	r0, [fp, #-12]
    3fac:	ldr	r0, [r0, #36]	; 0x24
    3fb0:	ldr	r1, [fp, #-12]
    3fb4:	ldr	r1, [r1, #40]	; 0x28
    3fb8:	ldr	r2, [fp, #-20]	; 0xffffffec
    3fbc:	str	r0, [sp, #8]
    3fc0:	mov	r0, r1
    3fc4:	mov	r1, r2
    3fc8:	ldr	r2, [sp, #8]
    3fcc:	blx	r2
    3fd0:	mvn	r0, #3
    3fd4:	str	r0, [fp, #-4]
    3fd8:	b	4110 <coda_inflateCopy+0x29c>
    3fdc:	b	3fe0 <coda_inflateCopy+0x16c>
    3fe0:	ldr	r0, [fp, #-8]
    3fe4:	ldr	r1, [fp, #-12]
    3fe8:	movw	r2, #56	; 0x38
    3fec:	bl	0 <memcpy>
    3ff0:	ldr	r0, [fp, #-20]	; 0xffffffec
    3ff4:	ldr	r1, [fp, #-16]
    3ff8:	movw	r2, #7116	; 0x1bcc
    3ffc:	bl	0 <memcpy>
    4000:	ldr	r0, [fp, #-16]
    4004:	ldr	r0, [r0, #76]	; 0x4c
    4008:	ldr	r1, [fp, #-16]
    400c:	add	r1, r1, #1328	; 0x530
    4010:	cmp	r0, r1
    4014:	bcc	408c <coda_inflateCopy+0x218>
    4018:	ldr	r0, [fp, #-16]
    401c:	ldr	r0, [r0, #76]	; 0x4c
    4020:	ldr	r1, [fp, #-16]
    4024:	add	r1, r1, #1328	; 0x530
    4028:	movw	r2, #5776	; 0x1690
    402c:	add	r1, r1, r2
    4030:	mvn	r2, #3
    4034:	add	r1, r1, r2
    4038:	cmp	r0, r1
    403c:	bhi	408c <coda_inflateCopy+0x218>
    4040:	ldr	r0, [fp, #-20]	; 0xffffffec
    4044:	ldr	r1, [fp, #-16]
    4048:	ldr	r2, [r1, #76]	; 0x4c
    404c:	add	r1, r1, #1328	; 0x530
    4050:	sub	r1, r2, r1
    4054:	add	r1, r0, r1
    4058:	add	r1, r1, #1328	; 0x530
    405c:	str	r1, [r0, #76]	; 0x4c
    4060:	ldr	r0, [fp, #-20]	; 0xffffffec
    4064:	add	r0, r0, #1328	; 0x530
    4068:	ldr	r1, [fp, #-16]
    406c:	ldr	r2, [r1, #80]	; 0x50
    4070:	add	r1, r1, #1328	; 0x530
    4074:	sub	r1, r2, r1
    4078:	asr	r2, r1, #2
    407c:	add	r0, r0, r1
    4080:	ldr	r1, [fp, #-20]	; 0xffffffec
    4084:	str	r0, [r1, #80]	; 0x50
    4088:	str	r2, [sp, #4]
    408c:	ldr	r0, [fp, #-20]	; 0xffffffec
    4090:	add	r0, r0, #1328	; 0x530
    4094:	ldr	r1, [fp, #-16]
    4098:	ldr	r2, [r1, #108]	; 0x6c
    409c:	add	r1, r1, #1328	; 0x530
    40a0:	sub	r1, r2, r1
    40a4:	asr	r2, r1, #2
    40a8:	add	r0, r0, r1
    40ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    40b0:	str	r0, [r1, #108]	; 0x6c
    40b4:	ldr	r0, [sp, #24]
    40b8:	movw	r1, #0
    40bc:	cmp	r0, r1
    40c0:	str	r2, [sp]
    40c4:	beq	40f0 <coda_inflateCopy+0x27c>
    40c8:	ldr	r0, [fp, #-16]
    40cc:	ldr	r0, [r0, #36]	; 0x24
    40d0:	movw	r1, #1
    40d4:	lsl	r0, r1, r0
    40d8:	str	r0, [sp, #20]
    40dc:	ldr	r0, [sp, #24]
    40e0:	ldr	r1, [fp, #-16]
    40e4:	ldr	r1, [r1, #52]	; 0x34
    40e8:	ldr	r2, [sp, #20]
    40ec:	bl	0 <memcpy>
    40f0:	ldr	r0, [sp, #24]
    40f4:	ldr	r1, [fp, #-20]	; 0xffffffec
    40f8:	str	r0, [r1, #52]	; 0x34
    40fc:	ldr	r0, [fp, #-20]	; 0xffffffec
    4100:	ldr	r1, [fp, #-8]
    4104:	str	r0, [r1, #28]
    4108:	movw	r0, #0
    410c:	str	r0, [fp, #-4]
    4110:	ldr	r0, [fp, #-4]
    4114:	mov	sp, fp
    4118:	pop	{fp, pc}

0000411c <coda_inflateUndermine>:
    411c:	sub	sp, sp, #16
    4120:	str	r0, [sp, #8]
    4124:	str	r1, [sp, #4]
    4128:	ldr	r0, [sp, #8]
    412c:	movw	r1, #0
    4130:	cmp	r0, r1
    4134:	beq	414c <coda_inflateUndermine+0x30>
    4138:	ldr	r0, [sp, #8]
    413c:	ldr	r0, [r0, #28]
    4140:	movw	r1, #0
    4144:	cmp	r0, r1
    4148:	bne	4158 <coda_inflateUndermine+0x3c>
    414c:	mvn	r0, #1
    4150:	str	r0, [sp, #12]
    4154:	b	41a4 <coda_inflateUndermine+0x88>
    4158:	ldr	r0, [sp, #8]
    415c:	ldr	r0, [r0, #28]
    4160:	str	r0, [sp]
    4164:	ldr	r0, [sp, #4]
    4168:	cmp	r0, #0
    416c:	movw	r0, #0
    4170:	movne	r0, #1
    4174:	mvn	r1, #0
    4178:	eor	r0, r0, r1
    417c:	and	r0, r0, #1
    4180:	ldr	r1, [sp]
    4184:	add	r1, r1, #7104	; 0x1bc0
    4188:	str	r0, [r1]
    418c:	ldr	r0, [sp]
    4190:	add	r0, r0, #7104	; 0x1bc0
    4194:	movw	r1, #1
    4198:	str	r1, [r0]
    419c:	mvn	r0, #2
    41a0:	str	r0, [sp, #12]
    41a4:	ldr	r0, [sp, #12]
    41a8:	add	sp, sp, #16
    41ac:	bx	lr

000041b0 <coda_inflateMark>:
    41b0:	sub	sp, sp, #24
    41b4:	str	r0, [sp, #16]
    41b8:	ldr	r0, [sp, #16]
    41bc:	movw	r1, #0
    41c0:	cmp	r0, r1
    41c4:	beq	41dc <coda_inflateMark+0x2c>
    41c8:	ldr	r0, [sp, #16]
    41cc:	ldr	r0, [r0, #28]
    41d0:	movw	r1, #0
    41d4:	cmp	r0, r1
    41d8:	bne	41e8 <coda_inflateMark+0x38>
    41dc:	ldr	r0, [pc, #172]	; 4290 <coda_inflateMark+0xe0>
    41e0:	str	r0, [sp, #20]
    41e4:	b	4284 <coda_inflateMark+0xd4>
    41e8:	ldr	r0, [sp, #16]
    41ec:	ldr	r0, [r0, #28]
    41f0:	str	r0, [sp, #12]
    41f4:	ldr	r0, [sp, #12]
    41f8:	movw	r1, #7108	; 0x1bc4
    41fc:	add	r0, r0, r1
    4200:	ldr	r0, [r0]
    4204:	lsl	r0, r0, #16
    4208:	ldr	r1, [sp, #12]
    420c:	ldr	r1, [r1]
    4210:	cmp	r1, #15
    4214:	str	r0, [sp, #8]
    4218:	bne	422c <coda_inflateMark+0x7c>
    421c:	ldr	r0, [sp, #12]
    4220:	ldr	r0, [r0, #64]	; 0x40
    4224:	str	r0, [sp, #4]
    4228:	b	4274 <coda_inflateMark+0xc4>
    422c:	ldr	r0, [sp, #12]
    4230:	ldr	r0, [r0]
    4234:	cmp	r0, #24
    4238:	bne	4260 <coda_inflateMark+0xb0>
    423c:	ldr	r0, [sp, #12]
    4240:	movw	r1, #7112	; 0x1bc8
    4244:	add	r0, r0, r1
    4248:	ldr	r0, [r0]
    424c:	ldr	r1, [sp, #12]
    4250:	ldr	r1, [r1, #64]	; 0x40
    4254:	sub	r0, r0, r1
    4258:	str	r0, [sp]
    425c:	b	426c <coda_inflateMark+0xbc>
    4260:	movw	r0, #0
    4264:	str	r0, [sp]
    4268:	b	426c <coda_inflateMark+0xbc>
    426c:	ldr	r0, [sp]
    4270:	str	r0, [sp, #4]
    4274:	ldr	r0, [sp, #4]
    4278:	ldr	r1, [sp, #8]
    427c:	add	r0, r1, r0
    4280:	str	r0, [sp, #20]
    4284:	ldr	r0, [sp, #20]
    4288:	add	sp, sp, #24
    428c:	bx	lr
    4290:	.word	0xffff0000
