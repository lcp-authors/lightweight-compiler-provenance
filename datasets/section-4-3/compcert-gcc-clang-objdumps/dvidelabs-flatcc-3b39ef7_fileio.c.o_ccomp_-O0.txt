
../repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/fileio.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <pstrnlen>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #16
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	str	r5, [sp, #12]
  18:	mov	r4, r1
  1c:	mov	r5, r0
  20:	mov	r1, #0
  24:	mov	r2, r4
  28:	mov	r0, r5
  2c:	bl	0 <memchr>
  30:	cmp	r0, #0
  34:	beq	3c <pstrnlen+0x3c>
  38:	sub	r4, r0, r5
  3c:	mov	r0, r4
  40:	ldr	r4, [sp, #8]
  44:	ldr	r5, [sp, #12]
  48:	ldr	lr, [sp, #4]
  4c:	add	sp, sp, #16
  50:	bx	lr

00000054 <__flatcc_fb_copy_path_n>:
  54:	mov	ip, sp
  58:	sub	sp, sp, #24
  5c:	str	ip, [sp]
  60:	str	lr, [sp, #4]
  64:	str	r4, [sp, #8]
  68:	str	r5, [sp, #12]
  6c:	str	r6, [sp, #16]
  70:	mov	r6, r0
  74:	mov	r0, r6
  78:	bl	0 <pstrnlen>
  7c:	mov	r5, r0
  80:	add	r0, r5, #1
  84:	bl	0 <malloc>
  88:	mov	r4, r0
  8c:	cmp	r4, #0
  90:	beq	ac <__flatcc_fb_copy_path_n+0x58>
  94:	mov	r2, r5
  98:	mov	r1, r6
  9c:	mov	r0, r4
  a0:	bl	0 <memcpy>
  a4:	mov	r2, #0
  a8:	strb	r2, [r4, r5]
  ac:	mov	r0, r4
  b0:	ldr	r4, [sp, #8]
  b4:	ldr	r5, [sp, #12]
  b8:	ldr	r6, [sp, #16]
  bc:	ldr	lr, [sp, #4]
  c0:	add	sp, sp, #24
  c4:	bx	lr

000000c8 <__flatcc_fb_copy_path>:
  c8:	mov	ip, sp
  cc:	sub	sp, sp, #24
  d0:	str	ip, [sp]
  d4:	str	lr, [sp, #4]
  d8:	str	r4, [sp, #8]
  dc:	str	r5, [sp, #12]
  e0:	str	r6, [sp, #16]
  e4:	mov	r6, r0
  e8:	mov	r0, r6
  ec:	bl	0 <strlen>
  f0:	mov	r5, r0
  f4:	add	r0, r5, #1
  f8:	bl	0 <malloc>
  fc:	mov	r4, r0
 100:	cmp	r4, #0
 104:	beq	120 <__flatcc_fb_copy_path+0x58>
 108:	mov	r2, r5
 10c:	mov	r1, r6
 110:	mov	r0, r4
 114:	bl	0 <memcpy>
 118:	mov	r0, #0
 11c:	strb	r0, [r4, r5]
 120:	mov	r0, r4
 124:	ldr	r4, [sp, #8]
 128:	ldr	r5, [sp, #12]
 12c:	ldr	r6, [sp, #16]
 130:	ldr	lr, [sp, #4]
 134:	add	sp, sp, #24
 138:	bx	lr

0000013c <__flatcc_fb_chomp>:
 13c:	mov	ip, sp
 140:	sub	sp, sp, #24
 144:	str	ip, [sp]
 148:	str	lr, [sp, #4]
 14c:	str	r4, [sp, #8]
 150:	str	r5, [sp, #12]
 154:	str	r6, [sp, #16]
 158:	str	r7, [sp, #20]
 15c:	mov	r4, r2
 160:	mov	r5, r1
 164:	mov	r6, r0
 168:	cmp	r4, #0
 16c:	beq	180 <__flatcc_fb_chomp+0x44>
 170:	mov	r0, r4
 174:	bl	0 <strlen>
 178:	mov	r7, r0
 17c:	b	184 <__flatcc_fb_chomp+0x48>
 180:	mov	r7, #0
 184:	cmp	r5, r7
 188:	bls	1b0 <__flatcc_fb_chomp+0x74>
 18c:	add	r0, r6, r5
 190:	sub	r0, r0, r7
 194:	mov	r2, r7
 198:	mov	r1, r4
 19c:	bl	0 <strncmp>
 1a0:	cmp	r0, #0
 1a4:	moveq	r3, #1
 1a8:	movne	r3, #0
 1ac:	b	1b4 <__flatcc_fb_chomp+0x78>
 1b0:	mov	r3, #0
 1b4:	cmp	r3, #0
 1b8:	beq	1c0 <__flatcc_fb_chomp+0x84>
 1bc:	sub	r5, r5, r7
 1c0:	mov	r0, r5
 1c4:	ldr	r4, [sp, #8]
 1c8:	ldr	r5, [sp, #12]
 1cc:	ldr	r6, [sp, #16]
 1d0:	ldr	r7, [sp, #20]
 1d4:	ldr	lr, [sp, #4]
 1d8:	add	sp, sp, #24
 1dc:	bx	lr

000001e0 <__flatcc_fb_create_join_path_n>:
 1e0:	mov	ip, sp
 1e4:	sub	sp, sp, #48	; 0x30
 1e8:	str	ip, [sp]
 1ec:	str	lr, [sp, #4]
 1f0:	str	r4, [sp, #12]
 1f4:	str	r5, [sp, #16]
 1f8:	str	r6, [sp, #20]
 1fc:	str	r7, [sp, #24]
 200:	str	r8, [sp, #28]
 204:	str	r9, [sp, #32]
 208:	str	sl, [sp, #36]	; 0x24
 20c:	str	fp, [sp, #40]	; 0x28
 210:	ldr	r8, [ip, #4]
 214:	ldr	ip, [ip]
 218:	str	ip, [sp, #8]
 21c:	mov	r7, r3
 220:	mov	r6, r2
 224:	mov	r5, r1
 228:	mov	r4, r0
 22c:	ldr	r0, [sp, #8]
 230:	cmp	r0, #0
 234:	beq	244 <__flatcc_fb_create_join_path_n+0x64>
 238:	ldr	r0, [sp, #8]
 23c:	bl	0 <strlen>
 240:	b	248 <__flatcc_fb_create_join_path_n+0x68>
 244:	mov	r0, #0
 248:	mov	fp, r0
 24c:	cmp	r4, #0
 250:	beq	2b0 <__flatcc_fb_create_join_path_n+0xd0>
 254:	cmp	r7, #0
 258:	bls	2a8 <__flatcc_fb_create_join_path_n+0xc8>
 25c:	ldrb	ip, [r6]
 260:	cmp	ip, #47	; 0x2f
 264:	beq	294 <__flatcc_fb_create_join_path_n+0xb4>
 268:	ldrb	ip, [r6]
 26c:	cmp	ip, #92	; 0x5c
 270:	moveq	ip, #1
 274:	movne	ip, #0
 278:	cmp	ip, #0
 27c:	movne	r3, #1
 280:	moveq	r3, #0
 284:	cmp	r3, #0
 288:	movne	r0, #1
 28c:	moveq	r0, #0
 290:	b	2b4 <__flatcc_fb_create_join_path_n+0xd4>
 294:	mov	r2, #1
 298:	cmp	r2, #0
 29c:	movne	r0, #1
 2a0:	moveq	r0, #0
 2a4:	b	2b4 <__flatcc_fb_create_join_path_n+0xd4>
 2a8:	mov	r0, #0
 2ac:	b	2b4 <__flatcc_fb_create_join_path_n+0xd4>
 2b0:	mov	r0, #1
 2b4:	cmp	r0, #0
 2b8:	bne	2ec <__flatcc_fb_create_join_path_n+0x10c>
 2bc:	cmp	r7, #1
 2c0:	bls	2e4 <__flatcc_fb_create_join_path_n+0x104>
 2c4:	ldrb	r1, [r6, #1]
 2c8:	cmp	r1, #58	; 0x3a
 2cc:	moveq	r2, #1
 2d0:	movne	r2, #0
 2d4:	cmp	r2, #0
 2d8:	movne	r0, #1
 2dc:	moveq	r0, #0
 2e0:	b	2f0 <__flatcc_fb_create_join_path_n+0x110>
 2e4:	mov	r0, #0
 2e8:	b	2f0 <__flatcc_fb_create_join_path_n+0x110>
 2ec:	mov	r0, #1
 2f0:	cmp	r0, #0
 2f4:	beq	2fc <__flatcc_fb_create_join_path_n+0x11c>
 2f8:	mov	r5, #0
 2fc:	cmp	r8, #0
 300:	beq	370 <__flatcc_fb_create_join_path_n+0x190>
 304:	cmp	r5, #0
 308:	beq	368 <__flatcc_fb_create_join_path_n+0x188>
 30c:	add	r0, r4, r5
 310:	sub	lr, r0, #4096	; 0x1000
 314:	ldrb	r1, [lr, #4095]	; 0xfff
 318:	cmp	r1, #47	; 0x2f
 31c:	beq	354 <__flatcc_fb_create_join_path_n+0x174>
 320:	add	r2, r4, r5
 324:	sub	lr, r2, #4096	; 0x1000
 328:	ldrb	r0, [lr, #4095]	; 0xfff
 32c:	cmp	r0, #92	; 0x5c
 330:	moveq	r0, #1
 334:	movne	r0, #0
 338:	cmp	r0, #0
 33c:	movne	ip, #1
 340:	moveq	ip, #0
 344:	cmp	ip, #0
 348:	movne	r3, #1
 34c:	moveq	r3, #0
 350:	b	374 <__flatcc_fb_create_join_path_n+0x194>
 354:	mov	r2, #1
 358:	cmp	r2, #0
 35c:	movne	r3, #1
 360:	moveq	r3, #0
 364:	b	374 <__flatcc_fb_create_join_path_n+0x194>
 368:	mov	r3, #1
 36c:	b	374 <__flatcc_fb_create_join_path_n+0x194>
 370:	mov	r3, #0
 374:	cmp	r3, #0
 378:	beq	380 <__flatcc_fb_create_join_path_n+0x1a0>
 37c:	mov	r8, #0
 380:	add	r1, r5, r8
 384:	add	r3, r1, r7
 388:	add	r3, r3, fp
 38c:	add	r0, r3, #1
 390:	bl	0 <malloc>
 394:	mov	r9, r0
 398:	cmp	r9, #0
 39c:	bne	3a8 <__flatcc_fb_create_join_path_n+0x1c8>
 3a0:	mov	r0, #0
 3a4:	b	40c <__flatcc_fb_create_join_path_n+0x22c>
 3a8:	mov	sl, #0
 3ac:	mov	r2, r5
 3b0:	mov	r1, r4
 3b4:	mov	r0, r9
 3b8:	bl	0 <memcpy>
 3bc:	add	r4, sl, r5
 3c0:	cmp	r8, #0
 3c4:	beq	3d8 <__flatcc_fb_create_join_path_n+0x1f8>
 3c8:	mov	r1, r4
 3cc:	add	r4, r1, #1
 3d0:	mov	ip, #47	; 0x2f
 3d4:	strb	ip, [r9, r1]
 3d8:	add	r0, r9, r4
 3dc:	mov	r2, r7
 3e0:	mov	r1, r6
 3e4:	bl	0 <memcpy>
 3e8:	add	r4, r4, r7
 3ec:	add	r0, r9, r4
 3f0:	mov	r2, fp
 3f4:	ldr	r1, [sp, #8]
 3f8:	bl	0 <memcpy>
 3fc:	add	r2, r4, fp
 400:	mov	r1, #0
 404:	strb	r1, [r9, r2]
 408:	mov	r0, r9
 40c:	ldr	r4, [sp, #12]
 410:	ldr	r5, [sp, #16]
 414:	ldr	r6, [sp, #20]
 418:	ldr	r7, [sp, #24]
 41c:	ldr	r8, [sp, #28]
 420:	ldr	r9, [sp, #32]
 424:	ldr	sl, [sp, #36]	; 0x24
 428:	ldr	fp, [sp, #40]	; 0x28
 42c:	ldr	lr, [sp, #4]
 430:	add	sp, sp, #48	; 0x30
 434:	bx	lr

00000438 <__flatcc_fb_create_join_path>:
 438:	mov	ip, sp
 43c:	sub	sp, sp, #40	; 0x28
 440:	str	ip, [sp, #8]
 444:	str	lr, [sp, #12]
 448:	str	r4, [sp, #16]
 44c:	str	r5, [sp, #20]
 450:	str	r6, [sp, #24]
 454:	str	r7, [sp, #28]
 458:	str	r8, [sp, #32]
 45c:	mov	r4, r3
 460:	mov	r5, r2
 464:	mov	r6, r1
 468:	mov	r7, r0
 46c:	cmp	r7, #0
 470:	beq	484 <__flatcc_fb_create_join_path+0x4c>
 474:	mov	r0, r7
 478:	bl	0 <strlen>
 47c:	mov	r8, r0
 480:	b	488 <__flatcc_fb_create_join_path+0x50>
 484:	mov	r8, #0
 488:	cmp	r6, #0
 48c:	beq	4a0 <__flatcc_fb_create_join_path+0x68>
 490:	mov	r0, r6
 494:	bl	0 <strlen>
 498:	mov	r3, r0
 49c:	b	4a4 <__flatcc_fb_create_join_path+0x6c>
 4a0:	mov	r3, #0
 4a4:	str	r4, [sp, #4]
 4a8:	str	r5, [sp]
 4ac:	mov	r2, r6
 4b0:	mov	r1, r8
 4b4:	mov	r0, r7
 4b8:	bl	1e0 <__flatcc_fb_create_join_path_n>
 4bc:	ldr	r4, [sp, #16]
 4c0:	ldr	r5, [sp, #20]
 4c4:	ldr	r6, [sp, #24]
 4c8:	ldr	r7, [sp, #28]
 4cc:	ldr	r8, [sp, #32]
 4d0:	ldr	lr, [sp, #12]
 4d4:	add	sp, sp, #40	; 0x28
 4d8:	bx	lr

000004dc <__flatcc_fb_create_path_ext_n>:
 4dc:	mov	ip, sp
 4e0:	sub	sp, sp, #24
 4e4:	str	ip, [sp, #8]
 4e8:	str	lr, [sp, #12]
 4ec:	str	r4, [sp, #16]
 4f0:	str	r5, [sp, #20]
 4f4:	mov	ip, #0
 4f8:	mov	r3, #0
 4fc:	mov	r4, #0
 500:	str	r4, [sp, #4]
 504:	str	r2, [sp]
 508:	mov	r5, r1
 50c:	mov	r1, r3
 510:	mov	r3, r5
 514:	mov	r2, r0
 518:	mov	r0, ip
 51c:	bl	1e0 <__flatcc_fb_create_join_path_n>
 520:	ldr	r4, [sp, #16]
 524:	ldr	r5, [sp, #20]
 528:	ldr	lr, [sp, #12]
 52c:	add	sp, sp, #24
 530:	bx	lr

00000534 <__flatcc_fb_create_path_ext>:
 534:	mov	ip, sp
 538:	sub	sp, sp, #8
 53c:	str	ip, [sp]
 540:	str	lr, [sp, #4]
 544:	mov	r2, r1
 548:	mov	r1, r0
 54c:	mov	r0, #0
 550:	mov	r3, #0
 554:	bl	438 <__flatcc_fb_create_join_path>
 558:	ldr	lr, [sp, #4]
 55c:	add	sp, sp, #8
 560:	bx	lr

00000564 <__flatcc_fb_create_make_path_n>:
 564:	mov	ip, sp
 568:	sub	sp, sp, #24
 56c:	str	ip, [sp]
 570:	str	lr, [sp, #4]
 574:	str	r4, [sp, #8]
 578:	str	r5, [sp, #12]
 57c:	str	r6, [sp, #16]
 580:	mov	r4, r1
 584:	mov	r5, r0
 588:	cmp	r4, #1
 58c:	bne	5c4 <__flatcc_fb_create_make_path_n+0x60>
 590:	ldrb	r2, [r5]
 594:	cmp	r2, #32
 598:	beq	5bc <__flatcc_fb_create_make_path_n+0x58>
 59c:	ldrb	ip, [r5]
 5a0:	cmp	ip, #92	; 0x5c
 5a4:	moveq	r0, #1
 5a8:	movne	r0, #0
 5ac:	cmp	r0, #0
 5b0:	movne	r3, #1
 5b4:	moveq	r3, #0
 5b8:	b	5c8 <__flatcc_fb_create_make_path_n+0x64>
 5bc:	mov	r3, #1
 5c0:	b	5c8 <__flatcc_fb_create_make_path_n+0x64>
 5c4:	mov	r3, #0
 5c8:	cmp	r3, #0
 5cc:	beq	608 <__flatcc_fb_create_make_path_n+0xa4>
 5d0:	mov	r0, #3
 5d4:	bl	0 <malloc>
 5d8:	cmp	r0, #0
 5dc:	bne	5e8 <__flatcc_fb_create_make_path_n+0x84>
 5e0:	mov	r0, #0
 5e4:	b	76c <__flatcc_fb_create_make_path_n+0x208>
 5e8:	mov	r3, #92	; 0x5c
 5ec:	strb	r3, [r0]
 5f0:	ldrb	r1, [r5]
 5f4:	and	r2, r1, #255	; 0xff
 5f8:	strb	r2, [r0, #1]
 5fc:	mov	r2, #0
 600:	strb	r2, [r0, #2]
 604:	b	76c <__flatcc_fb_create_make_path_n+0x208>
 608:	cmp	r4, #1
 60c:	bhi	620 <__flatcc_fb_create_make_path_n+0xbc>
 610:	mov	r1, r4
 614:	mov	r0, r5
 618:	bl	54 <__flatcc_fb_copy_path_n>
 61c:	b	76c <__flatcc_fb_create_make_path_n+0x208>
 620:	mov	r6, #0
 624:	mov	r2, r4
 628:	sub	r3, r4, #1
 62c:	cmp	r6, r3
 630:	bcs	684 <__flatcc_fb_create_make_path_n+0x120>
 634:	ldrb	r0, [r5, r6]
 638:	cmp	r0, #92	; 0x5c
 63c:	bne	658 <__flatcc_fb_create_make_path_n+0xf4>
 640:	add	r3, r5, r6
 644:	ldrb	r1, [r3, #1]
 648:	cmp	r1, #32
 64c:	moveq	r3, #1
 650:	movne	r3, #0
 654:	b	65c <__flatcc_fb_create_make_path_n+0xf8>
 658:	mov	r3, #0
 65c:	cmp	r3, #0
 660:	beq	668 <__flatcc_fb_create_make_path_n+0x104>
 664:	add	r2, r2, #1
 668:	ldrb	r3, [r5, r6]
 66c:	cmp	r3, #32
 670:	moveq	ip, #1
 674:	movne	ip, #0
 678:	add	r2, r2, ip
 67c:	add	r6, r6, #1
 680:	b	628 <__flatcc_fb_create_make_path_n+0xc4>
 684:	ldrb	ip, [r5, r6]
 688:	cmp	ip, #32
 68c:	moveq	ip, #1
 690:	movne	ip, #0
 694:	add	r1, r2, ip
 698:	add	r0, r1, #1
 69c:	bl	0 <malloc>
 6a0:	cmp	r0, #0
 6a4:	bne	6b0 <__flatcc_fb_create_make_path_n+0x14c>
 6a8:	mov	r0, #0
 6ac:	b	76c <__flatcc_fb_create_make_path_n+0x208>
 6b0:	mov	r6, #0
 6b4:	mov	r1, #0
 6b8:	sub	r2, r4, #1
 6bc:	cmp	r6, r2
 6c0:	bcs	738 <__flatcc_fb_create_make_path_n+0x1d4>
 6c4:	ldrb	r2, [r5, r6]
 6c8:	cmp	r2, #92	; 0x5c
 6cc:	bne	6e8 <__flatcc_fb_create_make_path_n+0x184>
 6d0:	add	r2, r5, r6
 6d4:	ldrb	r2, [r2, #1]
 6d8:	cmp	r2, #32
 6dc:	moveq	r2, #1
 6e0:	movne	r2, #0
 6e4:	b	6ec <__flatcc_fb_create_make_path_n+0x188>
 6e8:	mov	r2, #0
 6ec:	cmp	r2, #0
 6f0:	beq	704 <__flatcc_fb_create_make_path_n+0x1a0>
 6f4:	mov	ip, r1
 6f8:	add	r1, ip, #1
 6fc:	mov	r2, #92	; 0x5c
 700:	strb	r2, [r0, ip]
 704:	ldrb	r2, [r5, r6]
 708:	cmp	r2, #32
 70c:	bne	720 <__flatcc_fb_create_make_path_n+0x1bc>
 710:	mov	r2, r1
 714:	add	r1, r2, #1
 718:	mov	r3, #92	; 0x5c
 71c:	strb	r3, [r0, r2]
 720:	ldrb	r2, [r5, r6]
 724:	and	r2, r2, #255	; 0xff
 728:	strb	r2, [r0, r1]
 72c:	add	r6, r6, #1
 730:	add	r1, r1, #1
 734:	b	6b8 <__flatcc_fb_create_make_path_n+0x154>
 738:	ldrb	ip, [r5, r6]
 73c:	cmp	ip, #32
 740:	bne	754 <__flatcc_fb_create_make_path_n+0x1f0>
 744:	mov	r3, r1
 748:	add	r1, r3, #1
 74c:	mov	r2, #92	; 0x5c
 750:	strb	r2, [r0, r3]
 754:	add	r3, r1, #1
 758:	ldrb	r2, [r5, r6]
 75c:	and	ip, r2, #255	; 0xff
 760:	strb	ip, [r0, r1]
 764:	mov	ip, #0
 768:	strb	ip, [r0, r3]
 76c:	ldr	r4, [sp, #8]
 770:	ldr	r5, [sp, #12]
 774:	ldr	r6, [sp, #16]
 778:	ldr	lr, [sp, #4]
 77c:	add	sp, sp, #24
 780:	bx	lr

00000784 <__flatcc_fb_create_make_path>:
 784:	mov	ip, sp
 788:	sub	sp, sp, #16
 78c:	str	ip, [sp]
 790:	str	lr, [sp, #4]
 794:	str	r4, [sp, #8]
 798:	mov	r4, r0
 79c:	mov	r0, r4
 7a0:	bl	0 <strlen>
 7a4:	mov	r1, r0
 7a8:	mov	r0, r4
 7ac:	bl	564 <__flatcc_fb_create_make_path_n>
 7b0:	ldr	r4, [sp, #8]
 7b4:	ldr	lr, [sp, #4]
 7b8:	add	sp, sp, #16
 7bc:	bx	lr

000007c0 <__flatcc_fb_find_basename>:
 7c0:	mov	ip, sp
 7c4:	sub	sp, sp, #8
 7c8:	str	ip, [sp]
 7cc:	str	lr, [sp, #4]
 7d0:	add	r1, r0, r1
 7d4:	cmp	r1, r0
 7d8:	beq	810 <__flatcc_fb_find_basename+0x50>
 7dc:	sub	r1, r1, #1
 7e0:	ldrb	ip, [r1]
 7e4:	cmp	ip, #47	; 0x2f
 7e8:	beq	800 <__flatcc_fb_find_basename+0x40>
 7ec:	ldrb	r2, [r1]
 7f0:	cmp	r2, #92	; 0x5c
 7f4:	moveq	r2, #1
 7f8:	movne	r2, #0
 7fc:	b	804 <__flatcc_fb_find_basename+0x44>
 800:	mov	r2, #1
 804:	cmp	r2, #0
 808:	beq	7d4 <__flatcc_fb_find_basename+0x14>
 80c:	add	r1, r1, #1
 810:	sub	r0, r1, r0
 814:	ldr	lr, [sp, #4]
 818:	add	sp, sp, #8
 81c:	bx	lr

00000820 <__flatcc_fb_create_basename>:
 820:	mov	ip, sp
 824:	sub	sp, sp, #24
 828:	str	ip, [sp]
 82c:	str	lr, [sp, #4]
 830:	str	r4, [sp, #8]
 834:	str	r5, [sp, #12]
 838:	str	r6, [sp, #16]
 83c:	str	r7, [sp, #20]
 840:	mov	r6, r2
 844:	mov	r4, r1
 848:	mov	r5, r0
 84c:	mov	r1, r4
 850:	mov	r0, r5
 854:	bl	7c0 <__flatcc_fb_find_basename>
 858:	add	r7, r5, r0
 85c:	sub	r1, r4, r0
 860:	mov	r2, r6
 864:	mov	r0, r7
 868:	bl	13c <__flatcc_fb_chomp>
 86c:	mov	r5, r0
 870:	add	r0, r5, #1
 874:	bl	0 <malloc>
 878:	mov	r4, r0
 87c:	cmp	r4, #0
 880:	beq	89c <__flatcc_fb_create_basename+0x7c>
 884:	mov	r2, r5
 888:	mov	r1, r7
 88c:	mov	r0, r4
 890:	bl	0 <memcpy>
 894:	mov	r1, #0
 898:	strb	r1, [r4, r5]
 89c:	mov	r0, r4
 8a0:	ldr	r4, [sp, #8]
 8a4:	ldr	r5, [sp, #12]
 8a8:	ldr	r6, [sp, #16]
 8ac:	ldr	r7, [sp, #20]
 8b0:	ldr	lr, [sp, #4]
 8b4:	add	sp, sp, #24
 8b8:	bx	lr

000008bc <__flatcc_fb_read_file>:
 8bc:	mov	ip, sp
 8c0:	sub	sp, sp, #40	; 0x28
 8c4:	str	ip, [sp]
 8c8:	str	lr, [sp, #4]
 8cc:	str	r4, [sp, #8]
 8d0:	str	r5, [sp, #12]
 8d4:	str	r6, [sp, #16]
 8d8:	str	r7, [sp, #20]
 8dc:	str	r8, [sp, #24]
 8e0:	mov	r8, r1
 8e4:	cmp	r2, #0
 8e8:	bne	8f4 <__flatcc_fb_read_file+0x38>
 8ec:	add	r4, sp, #32
 8f0:	b	8f8 <__flatcc_fb_read_file+0x3c>
 8f4:	mov	r4, r2
 8f8:	ldr	r1, [pc, #272]	; a10 <__flatcc_fb_read_file+0x154>
 8fc:	bl	0 <fopen>
 900:	mov	r7, r0
 904:	mov	r6, #0
 908:	mov	r5, #0
 90c:	cmp	r7, #0
 910:	beq	9c4 <__flatcc_fb_read_file+0x108>
 914:	mov	r1, #0
 918:	mov	r2, #2
 91c:	mov	r0, r7
 920:	bl	0 <fseek>
 924:	mov	r0, r7
 928:	bl	0 <ftell>
 92c:	mov	r6, r0
 930:	str	r6, [r4]
 934:	cmp	r8, #0
 938:	bhi	944 <__flatcc_fb_read_file+0x88>
 93c:	mov	r2, #0
 940:	b	950 <__flatcc_fb_read_file+0x94>
 944:	cmp	r6, r8
 948:	movhi	r2, #1
 94c:	movls	r2, #0
 950:	cmp	r2, #0
 954:	bne	9c4 <__flatcc_fb_read_file+0x108>
 958:	mov	r0, r7
 95c:	bl	0 <rewind>
 960:	cmp	r6, #0
 964:	bne	970 <__flatcc_fb_read_file+0xb4>
 968:	mov	r0, #1
 96c:	b	974 <__flatcc_fb_read_file+0xb8>
 970:	mov	r0, r6
 974:	bl	0 <malloc>
 978:	mov	r5, r0
 97c:	cmp	r5, #0
 980:	beq	9c4 <__flatcc_fb_read_file+0x108>
 984:	mov	r8, #0
 988:	add	r0, r5, r8
 98c:	mov	r1, #1
 990:	sub	r2, r6, r8
 994:	mov	r3, r7
 998:	bl	0 <fread>
 99c:	cmp	r0, #0
 9a0:	beq	9ac <__flatcc_fb_read_file+0xf0>
 9a4:	add	r8, r8, r0
 9a8:	b	988 <__flatcc_fb_read_file+0xcc>
 9ac:	cmp	r8, r6
 9b0:	bne	9c4 <__flatcc_fb_read_file+0x108>
 9b4:	mov	r0, r7
 9b8:	bl	0 <fclose>
 9bc:	str	r6, [r4]
 9c0:	b	9ec <__flatcc_fb_read_file+0x130>
 9c4:	cmp	r7, #0
 9c8:	beq	9d4 <__flatcc_fb_read_file+0x118>
 9cc:	mov	r0, r7
 9d0:	bl	0 <fclose>
 9d4:	cmp	r5, #0
 9d8:	beq	9e4 <__flatcc_fb_read_file+0x128>
 9dc:	mov	r0, r5
 9e0:	bl	0 <free>
 9e4:	str	r6, [r4]
 9e8:	mov	r5, #0
 9ec:	mov	r0, r5
 9f0:	ldr	r4, [sp, #8]
 9f4:	ldr	r5, [sp, #12]
 9f8:	ldr	r6, [sp, #16]
 9fc:	ldr	r7, [sp, #20]
 a00:	ldr	r8, [sp, #24]
 a04:	ldr	lr, [sp, #4]
 a08:	add	sp, sp, #40	; 0x28
 a0c:	bx	lr
 a10:	.word	0x00000000
