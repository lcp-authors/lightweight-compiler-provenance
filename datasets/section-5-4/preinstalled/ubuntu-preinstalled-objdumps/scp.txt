
ubuntu-preinstalled/scp:     file format elf32-littlearm


Disassembly of section .init:

00001908 <.init>:
    1908:	push	{r3, lr}
    190c:	bl	264c <fputs@plt+0x718>
    1910:	pop	{r3, pc}

Disassembly of section .plt:

00001914 <getpgrp@plt-0x14>:
    1914:	push	{lr}		; (str lr, [sp, #-4]!)
    1918:	ldr	lr, [pc, #4]	; 1924 <getpgrp@plt-0x4>
    191c:	add	lr, pc, lr
    1920:	ldr	pc, [lr, #8]!
    1924:	andeq	pc, r1, r0, asr r4	; <UNPREDICTABLE>

00001928 <getpgrp@plt>:
    1928:	add	ip, pc, #0, 12
    192c:	add	ip, ip, #126976	; 0x1f000
    1930:	ldr	pc, [ip, #1104]!	; 0x450

00001934 <strerror@plt>:
    1934:			; <UNDEFINED> instruction: 0xe7fd4778
    1938:	add	ip, pc, #0, 12
    193c:	add	ip, ip, #126976	; 0x1f000
    1940:	ldr	pc, [ip, #1092]!	; 0x444

00001944 <mkdir@plt>:
    1944:	add	ip, pc, #0, 12
    1948:	add	ip, ip, #126976	; 0x1f000
    194c:	ldr	pc, [ip, #1084]!	; 0x43c

00001950 <localtime_r@plt>:
    1950:	add	ip, pc, #0, 12
    1954:	add	ip, ip, #126976	; 0x1f000
    1958:	ldr	pc, [ip, #1076]!	; 0x434

0000195c <abort@plt>:
    195c:	add	ip, pc, #0, 12
    1960:	add	ip, ip, #126976	; 0x1f000
    1964:	ldr	pc, [ip, #1068]!	; 0x42c

00001968 <connect@plt>:
    1968:	add	ip, pc, #0, 12
    196c:	add	ip, ip, #126976	; 0x1f000
    1970:	ldr	pc, [ip, #1060]!	; 0x424

00001974 <ERR_get_error@plt>:
    1974:	add	ip, pc, #0, 12
    1978:	add	ip, ip, #126976	; 0x1f000
    197c:	ldr	pc, [ip, #1052]!	; 0x41c

00001980 <strcasestr@plt>:
    1980:	add	ip, pc, #0, 12
    1984:	add	ip, ip, #126976	; 0x1f000
    1988:	ldr	pc, [ip, #1044]!	; 0x414

0000198c <opendir@plt>:
    198c:	add	ip, pc, #0, 12
    1990:	add	ip, ip, #126976	; 0x1f000
    1994:	ldr	pc, [ip, #1036]!	; 0x40c

00001998 <__libc_start_main@plt>:
    1998:	add	ip, pc, #0, 12
    199c:	add	ip, ip, #126976	; 0x1f000
    19a0:	ldr	pc, [ip, #1028]!	; 0x404

000019a4 <clock_gettime@plt>:
    19a4:	add	ip, pc, #0, 12
    19a8:	add	ip, ip, #126976	; 0x1f000
    19ac:	ldr	pc, [ip, #1020]!	; 0x3fc

000019b0 <__gmon_start__@plt>:
    19b0:	add	ip, pc, #0, 12
    19b4:	add	ip, ip, #126976	; 0x1f000
    19b8:	ldr	pc, [ip, #1012]!	; 0x3f4

000019bc <__ctype_get_mb_cur_max@plt>:
    19bc:	add	ip, pc, #0, 12
    19c0:	add	ip, ip, #126976	; 0x1f000
    19c4:	ldr	pc, [ip, #1004]!	; 0x3ec

000019c8 <strptime@plt>:
    19c8:	add	ip, pc, #0, 12
    19cc:	add	ip, ip, #126976	; 0x1f000
    19d0:	ldr	pc, [ip, #996]!	; 0x3e4

000019d4 <getenv@plt>:
    19d4:	add	ip, pc, #0, 12
    19d8:	add	ip, ip, #126976	; 0x1f000
    19dc:	ldr	pc, [ip, #988]!	; 0x3dc

000019e0 <strchr@plt>:
    19e0:	add	ip, pc, #0, 12
    19e4:	add	ip, ip, #126976	; 0x1f000
    19e8:	ldr	pc, [ip, #980]!	; 0x3d4

000019ec <strcasecmp@plt>:
    19ec:	add	ip, pc, #0, 12
    19f0:	add	ip, ip, #126976	; 0x1f000
    19f4:	ldr	pc, [ip, #972]!	; 0x3cc

000019f8 <dirname@plt>:
    19f8:	add	ip, pc, #0, 12
    19fc:	add	ip, ip, #126976	; 0x1f000
    1a00:	ldr	pc, [ip, #964]!	; 0x3c4

00001a04 <reallocarray@plt>:
    1a04:	add	ip, pc, #0, 12
    1a08:	add	ip, ip, #126976	; 0x1f000
    1a0c:	ldr	pc, [ip, #956]!	; 0x3bc

00001a10 <listen@plt>:
    1a10:	add	ip, pc, #0, 12
    1a14:	add	ip, ip, #126976	; 0x1f000
    1a18:	ldr	pc, [ip, #948]!	; 0x3b4

00001a1c <calloc@plt>:
    1a1c:			; <UNDEFINED> instruction: 0xe7fd4778
    1a20:	add	ip, pc, #0, 12
    1a24:	add	ip, ip, #126976	; 0x1f000
    1a28:	ldr	pc, [ip, #936]!	; 0x3a8

00001a2c <mktime@plt>:
    1a2c:	add	ip, pc, #0, 12
    1a30:	add	ip, ip, #126976	; 0x1f000
    1a34:	ldr	pc, [ip, #928]!	; 0x3a0

00001a38 <memset@plt>:
    1a38:	add	ip, pc, #0, 12
    1a3c:	add	ip, ip, #126976	; 0x1f000
    1a40:	ldr	pc, [ip, #920]!	; 0x398

00001a44 <gai_strerror@plt>:
    1a44:			; <UNDEFINED> instruction: 0xe7fd4778
    1a48:	add	ip, pc, #0, 12
    1a4c:	add	ip, ip, #126976	; 0x1f000
    1a50:	ldr	pc, [ip, #908]!	; 0x38c

00001a54 <strrchr@plt>:
    1a54:	add	ip, pc, #0, 12
    1a58:	add	ip, ip, #126976	; 0x1f000
    1a5c:	ldr	pc, [ip, #900]!	; 0x384

00001a60 <execvp@plt>:
    1a60:	add	ip, pc, #0, 12
    1a64:	add	ip, ip, #126976	; 0x1f000
    1a68:	ldr	pc, [ip, #892]!	; 0x37c

00001a6c <perror@plt>:
    1a6c:	add	ip, pc, #0, 12
    1a70:	add	ip, ip, #126976	; 0x1f000
    1a74:	ldr	pc, [ip, #884]!	; 0x374

00001a78 <strtoll@plt>:
    1a78:	add	ip, pc, #0, 12
    1a7c:	add	ip, ip, #126976	; 0x1f000
    1a80:	ldr	pc, [ip, #876]!	; 0x36c

00001a84 <chmod@plt>:
    1a84:	add	ip, pc, #0, 12
    1a88:	add	ip, ip, #126976	; 0x1f000
    1a8c:	ldr	pc, [ip, #868]!	; 0x364

00001a90 <__fxstat64@plt>:
    1a90:	add	ip, pc, #0, 12
    1a94:	add	ip, ip, #126976	; 0x1f000
    1a98:	ldr	pc, [ip, #860]!	; 0x35c

00001a9c <tcgetpgrp@plt>:
    1a9c:	add	ip, pc, #0, 12
    1aa0:	add	ip, ip, #126976	; 0x1f000
    1aa4:	ldr	pc, [ip, #852]!	; 0x354

00001aa8 <OpenSSL_version_num@plt>:
    1aa8:	add	ip, pc, #0, 12
    1aac:	add	ip, ip, #126976	; 0x1f000
    1ab0:	ldr	pc, [ip, #844]!	; 0x34c

00001ab4 <_exit@plt>:
    1ab4:	add	ip, pc, #0, 12
    1ab8:	add	ip, ip, #126976	; 0x1f000
    1abc:	ldr	pc, [ip, #836]!	; 0x344

00001ac0 <getuid@plt>:
    1ac0:	add	ip, pc, #0, 12
    1ac4:	add	ip, ip, #126976	; 0x1f000
    1ac8:	ldr	pc, [ip, #828]!	; 0x33c

00001acc <strtoull@plt>:
    1acc:	add	ip, pc, #0, 12
    1ad0:	add	ip, ip, #126976	; 0x1f000
    1ad4:	ldr	pc, [ip, #820]!	; 0x334

00001ad8 <free@plt>:
    1ad8:			; <UNDEFINED> instruction: 0xe7fd4778
    1adc:	add	ip, pc, #0, 12
    1ae0:	add	ip, ip, #126976	; 0x1f000
    1ae4:	ldr	pc, [ip, #808]!	; 0x328

00001ae8 <write@plt>:
    1ae8:	add	ip, pc, #0, 12
    1aec:	add	ip, ip, #126976	; 0x1f000
    1af0:	ldr	pc, [ip, #800]!	; 0x320

00001af4 <openlog@plt>:
    1af4:	add	ip, pc, #0, 12
    1af8:	add	ip, ip, #126976	; 0x1f000
    1afc:	ldr	pc, [ip, #792]!	; 0x318

00001b00 <gettimeofday@plt>:
    1b00:	add	ip, pc, #0, 12
    1b04:	add	ip, ip, #126976	; 0x1f000
    1b08:	ldr	pc, [ip, #784]!	; 0x310

00001b0c <__asprintf_chk@plt>:
    1b0c:	add	ip, pc, #0, 12
    1b10:	add	ip, ip, #126976	; 0x1f000
    1b14:	ldr	pc, [ip, #776]!	; 0x308

00001b18 <__memcpy_chk@plt>:
    1b18:	add	ip, pc, #0, 12
    1b1c:	add	ip, ip, #126976	; 0x1f000
    1b20:	ldr	pc, [ip, #768]!	; 0x300

00001b24 <socket@plt>:
    1b24:	add	ip, pc, #0, 12
    1b28:	add	ip, ip, #126976	; 0x1f000
    1b2c:	ldr	pc, [ip, #760]!	; 0x2f8

00001b30 <umask@plt>:
    1b30:	add	ip, pc, #0, 12
    1b34:	add	ip, ip, #126976	; 0x1f000
    1b38:	ldr	pc, [ip, #752]!	; 0x2f0

00001b3c <fflush@plt>:
    1b3c:	add	ip, pc, #0, 12
    1b40:	add	ip, ip, #126976	; 0x1f000
    1b44:	ldr	pc, [ip, #744]!	; 0x2e8

00001b48 <ioctl@plt>:
    1b48:	add	ip, pc, #0, 12
    1b4c:	add	ip, ip, #126976	; 0x1f000
    1b50:	ldr	pc, [ip, #736]!	; 0x2e0

00001b54 <isatty@plt>:
    1b54:	add	ip, pc, #0, 12
    1b58:	add	ip, ip, #126976	; 0x1f000
    1b5c:	ldr	pc, [ip, #728]!	; 0x2d8

00001b60 <strsignal@plt>:
    1b60:	add	ip, pc, #0, 12
    1b64:	add	ip, ip, #126976	; 0x1f000
    1b68:	ldr	pc, [ip, #720]!	; 0x2d0

00001b6c <strlen@plt>:
    1b6c:	add	ip, pc, #0, 12
    1b70:	add	ip, ip, #126976	; 0x1f000
    1b74:	ldr	pc, [ip, #712]!	; 0x2c8

00001b78 <unlink@plt>:
    1b78:	add	ip, pc, #0, 12
    1b7c:	add	ip, ip, #126976	; 0x1f000
    1b80:	ldr	pc, [ip, #704]!	; 0x2c0

00001b84 <memcpy@plt>:
    1b84:	add	ip, pc, #0, 12
    1b88:	add	ip, ip, #126976	; 0x1f000
    1b8c:	ldr	pc, [ip, #696]!	; 0x2b8

00001b90 <setlocale@plt>:
    1b90:			; <UNDEFINED> instruction: 0xe7fd4778
    1b94:	add	ip, pc, #0, 12
    1b98:	add	ip, ip, #126976	; 0x1f000
    1b9c:	ldr	pc, [ip, #684]!	; 0x2ac

00001ba0 <getpwuid@plt>:
    1ba0:	add	ip, pc, #0, 12
    1ba4:	add	ip, ip, #126976	; 0x1f000
    1ba8:	ldr	pc, [ip, #676]!	; 0x2a4

00001bac <__ctype_tolower_loc@plt>:
    1bac:	add	ip, pc, #0, 12
    1bb0:	add	ip, ip, #126976	; 0x1f000
    1bb4:	ldr	pc, [ip, #668]!	; 0x29c

00001bb8 <getppid@plt>:
    1bb8:	add	ip, pc, #0, 12
    1bbc:	add	ip, ip, #126976	; 0x1f000
    1bc0:	ldr	pc, [ip, #660]!	; 0x294

00001bc4 <alarm@plt>:
    1bc4:			; <UNDEFINED> instruction: 0xe7fd4778
    1bc8:	add	ip, pc, #0, 12
    1bcc:	add	ip, ip, #126976	; 0x1f000
    1bd0:	ldr	pc, [ip, #648]!	; 0x288

00001bd4 <__explicit_bzero_chk@plt>:
    1bd4:			; <UNDEFINED> instruction: 0xe7fd4778
    1bd8:	add	ip, pc, #0, 12
    1bdc:	add	ip, ip, #126976	; 0x1f000
    1be0:	ldr	pc, [ip, #636]!	; 0x27c

00001be4 <ENGINE_load_builtin_engines@plt>:
    1be4:	add	ip, pc, #0, 12
    1be8:	add	ip, ip, #126976	; 0x1f000
    1bec:	ldr	pc, [ip, #628]!	; 0x274

00001bf0 <strtol@plt>:
    1bf0:	add	ip, pc, #0, 12
    1bf4:	add	ip, ip, #126976	; 0x1f000
    1bf8:	ldr	pc, [ip, #620]!	; 0x26c

00001bfc <waitpid@plt>:
    1bfc:	add	ip, pc, #0, 12
    1c00:	add	ip, ip, #126976	; 0x1f000
    1c04:	ldr	pc, [ip, #612]!	; 0x264

00001c08 <__vsnprintf_chk@plt>:
    1c08:	add	ip, pc, #0, 12
    1c0c:	add	ip, ip, #126976	; 0x1f000
    1c10:	ldr	pc, [ip, #604]!	; 0x25c

00001c14 <open64@plt>:
    1c14:	add	ip, pc, #0, 12
    1c18:	add	ip, ip, #126976	; 0x1f000
    1c1c:	ldr	pc, [ip, #596]!	; 0x254

00001c20 <memmem@plt>:
    1c20:	add	ip, pc, #0, 12
    1c24:	add	ip, ip, #126976	; 0x1f000
    1c28:	ldr	pc, [ip, #588]!	; 0x24c

00001c2c <__vfprintf_chk@plt>:
    1c2c:	add	ip, pc, #0, 12
    1c30:	add	ip, ip, #126976	; 0x1f000
    1c34:	ldr	pc, [ip, #580]!	; 0x244

00001c38 <raise@plt>:
    1c38:			; <UNDEFINED> instruction: 0xe7fd4778
    1c3c:	add	ip, pc, #0, 12
    1c40:	add	ip, ip, #126976	; 0x1f000
    1c44:	ldr	pc, [ip, #568]!	; 0x238

00001c48 <fcntl64@plt>:
    1c48:	add	ip, pc, #0, 12
    1c4c:	add	ip, ip, #126976	; 0x1f000
    1c50:	ldr	pc, [ip, #560]!	; 0x230

00001c54 <__snprintf_chk@plt>:
    1c54:	add	ip, pc, #0, 12
    1c58:	add	ip, ip, #126976	; 0x1f000
    1c5c:	ldr	pc, [ip, #552]!	; 0x228

00001c60 <bind@plt>:
    1c60:	add	ip, pc, #0, 12
    1c64:	add	ip, ip, #126976	; 0x1f000
    1c68:	ldr	pc, [ip, #544]!	; 0x220

00001c6c <fdopen@plt>:
    1c6c:	add	ip, pc, #0, 12
    1c70:	add	ip, ip, #126976	; 0x1f000
    1c74:	ldr	pc, [ip, #536]!	; 0x218

00001c78 <__syslog_chk@plt>:
    1c78:	add	ip, pc, #0, 12
    1c7c:	add	ip, ip, #126976	; 0x1f000
    1c80:	ldr	pc, [ip, #528]!	; 0x210

00001c84 <close@plt>:
    1c84:			; <UNDEFINED> instruction: 0xe7fd4778
    1c88:	add	ip, pc, #0, 12
    1c8c:	add	ip, ip, #126976	; 0x1f000
    1c90:	ldr	pc, [ip, #516]!	; 0x204

00001c94 <fwrite@plt>:
    1c94:	add	ip, pc, #0, 12
    1c98:	add	ip, ip, #126976	; 0x1f000
    1c9c:	ldr	pc, [ip, #508]!	; 0x1fc

00001ca0 <closedir@plt>:
    1ca0:	add	ip, pc, #0, 12
    1ca4:	add	ip, ip, #126976	; 0x1f000
    1ca8:	ldr	pc, [ip, #500]!	; 0x1f4

00001cac <strncasecmp@plt>:
    1cac:	add	ip, pc, #0, 12
    1cb0:	add	ip, ip, #126976	; 0x1f000
    1cb4:	ldr	pc, [ip, #492]!	; 0x1ec

00001cb8 <__ctype_b_loc@plt>:
    1cb8:	add	ip, pc, #0, 12
    1cbc:	add	ip, ip, #126976	; 0x1f000
    1cc0:	ldr	pc, [ip, #484]!	; 0x1e4

00001cc4 <__xstat64@plt>:
    1cc4:	add	ip, pc, #0, 12
    1cc8:	add	ip, ip, #126976	; 0x1f000
    1ccc:	ldr	pc, [ip, #476]!	; 0x1dc

00001cd0 <strdup@plt>:
    1cd0:			; <UNDEFINED> instruction: 0xe7fd4778
    1cd4:	add	ip, pc, #0, 12
    1cd8:	add	ip, ip, #126976	; 0x1f000
    1cdc:	ldr	pc, [ip, #464]!	; 0x1d0

00001ce0 <malloc@plt>:
    1ce0:	add	ip, pc, #0, 12
    1ce4:	add	ip, ip, #126976	; 0x1f000
    1ce8:	ldr	pc, [ip, #456]!	; 0x1c8

00001cec <nl_langinfo@plt>:
    1cec:	add	ip, pc, #0, 12
    1cf0:	add	ip, ip, #126976	; 0x1f000
    1cf4:	ldr	pc, [ip, #448]!	; 0x1c0

00001cf8 <__stack_chk_fail@plt>:
    1cf8:	add	ip, pc, #0, 12
    1cfc:	add	ip, ip, #126976	; 0x1f000
    1d00:	ldr	pc, [ip, #440]!	; 0x1b8

00001d04 <sigaction@plt>:
    1d04:	add	ip, pc, #0, 12
    1d08:	add	ip, ip, #126976	; 0x1f000
    1d0c:	ldr	pc, [ip, #432]!	; 0x1b0

00001d10 <__fprintf_chk@plt>:
    1d10:	add	ip, pc, #0, 12
    1d14:	add	ip, ip, #126976	; 0x1f000
    1d18:	ldr	pc, [ip, #424]!	; 0x1a8

00001d1c <poll@plt>:
    1d1c:	add	ip, pc, #0, 12
    1d20:	add	ip, ip, #126976	; 0x1f000
    1d24:	ldr	pc, [ip, #416]!	; 0x1a0

00001d28 <fputc@plt>:
    1d28:	add	ip, pc, #0, 12
    1d2c:	add	ip, ip, #126976	; 0x1f000
    1d30:	ldr	pc, [ip, #408]!	; 0x198

00001d34 <getgrgid@plt>:
    1d34:	add	ip, pc, #0, 12
    1d38:	add	ip, ip, #126976	; 0x1f000
    1d3c:	ldr	pc, [ip, #400]!	; 0x190

00001d40 <memmove@plt>:
    1d40:	add	ip, pc, #0, 12
    1d44:	add	ip, ip, #126976	; 0x1f000
    1d48:	ldr	pc, [ip, #392]!	; 0x188

00001d4c <fnmatch@plt>:
    1d4c:	add	ip, pc, #0, 12
    1d50:	add	ip, ip, #126976	; 0x1f000
    1d54:	ldr	pc, [ip, #384]!	; 0x180

00001d58 <sigfillset@plt>:
    1d58:	add	ip, pc, #0, 12
    1d5c:	add	ip, ip, #126976	; 0x1f000
    1d60:	ldr	pc, [ip, #376]!	; 0x178

00001d64 <dup2@plt>:
    1d64:	add	ip, pc, #0, 12
    1d68:	add	ip, ip, #126976	; 0x1f000
    1d6c:	ldr	pc, [ip, #368]!	; 0x170

00001d70 <strftime@plt>:
    1d70:	add	ip, pc, #0, 12
    1d74:	add	ip, ip, #126976	; 0x1f000
    1d78:	ldr	pc, [ip, #360]!	; 0x168

00001d7c <ENGINE_register_all_complete@plt>:
    1d7c:	add	ip, pc, #0, 12
    1d80:	add	ip, ip, #126976	; 0x1f000
    1d84:	ldr	pc, [ip, #352]!	; 0x160

00001d88 <getpid@plt>:
    1d88:	add	ip, pc, #0, 12
    1d8c:	add	ip, ip, #126976	; 0x1f000
    1d90:	ldr	pc, [ip, #344]!	; 0x158

00001d94 <RAND_bytes@plt>:
    1d94:	add	ip, pc, #0, 12
    1d98:	add	ip, ip, #126976	; 0x1f000
    1d9c:	ldr	pc, [ip, #336]!	; 0x150

00001da0 <endpwent@plt>:
    1da0:	add	ip, pc, #0, 12
    1da4:	add	ip, ip, #126976	; 0x1f000
    1da8:	ldr	pc, [ip, #328]!	; 0x148

00001dac <mbtowc@plt>:
    1dac:	add	ip, pc, #0, 12
    1db0:	add	ip, ip, #126976	; 0x1f000
    1db4:	ldr	pc, [ip, #320]!	; 0x140

00001db8 <closelog@plt>:
    1db8:			; <UNDEFINED> instruction: 0xe7fd4778
    1dbc:	add	ip, pc, #0, 12
    1dc0:	add	ip, ip, #126976	; 0x1f000
    1dc4:	ldr	pc, [ip, #308]!	; 0x134

00001dc8 <fork@plt>:
    1dc8:	add	ip, pc, #0, 12
    1dcc:	add	ip, ip, #126976	; 0x1f000
    1dd0:	ldr	pc, [ip, #300]!	; 0x12c

00001dd4 <strspn@plt>:
    1dd4:	add	ip, pc, #0, 12
    1dd8:	add	ip, ip, #126976	; 0x1f000
    1ddc:	ldr	pc, [ip, #292]!	; 0x124

00001de0 <__realpath_chk@plt>:
    1de0:	add	ip, pc, #0, 12
    1de4:	add	ip, ip, #126976	; 0x1f000
    1de8:	ldr	pc, [ip, #284]!	; 0x11c

00001dec <readdir64@plt>:
    1dec:	add	ip, pc, #0, 12
    1df0:	add	ip, ip, #126976	; 0x1f000
    1df4:	ldr	pc, [ip, #276]!	; 0x114

00001df8 <snprintf@plt>:
    1df8:	add	ip, pc, #0, 12
    1dfc:	add	ip, ip, #126976	; 0x1f000
    1e00:	ldr	pc, [ip, #268]!	; 0x10c

00001e04 <RAND_status@plt>:
    1e04:	add	ip, pc, #0, 12
    1e08:	add	ip, ip, #126976	; 0x1f000
    1e0c:	ldr	pc, [ip, #260]!	; 0x104

00001e10 <OPENSSL_init_crypto@plt>:
    1e10:			; <UNDEFINED> instruction: 0xe7fd4778
    1e14:	add	ip, pc, #0, 12
    1e18:	add	ip, ip, #126976	; 0x1f000
    1e1c:	ldr	pc, [ip, #248]!	; 0xf8

00001e20 <wcwidth@plt>:
    1e20:	add	ip, pc, #0, 12
    1e24:	add	ip, ip, #126976	; 0x1f000
    1e28:	ldr	pc, [ip, #240]!	; 0xf0

00001e2c <strncmp@plt>:
    1e2c:	add	ip, pc, #0, 12
    1e30:	add	ip, ip, #126976	; 0x1f000
    1e34:	ldr	pc, [ip, #232]!	; 0xe8

00001e38 <getpwent@plt>:
    1e38:	add	ip, pc, #0, 12
    1e3c:	add	ip, ip, #126976	; 0x1f000
    1e40:	ldr	pc, [ip, #224]!	; 0xe0

00001e44 <kill@plt>:
    1e44:	add	ip, pc, #0, 12
    1e48:	add	ip, ip, #126976	; 0x1f000
    1e4c:	ldr	pc, [ip, #216]!	; 0xd8

00001e50 <nanosleep@plt>:
    1e50:	add	ip, pc, #0, 12
    1e54:	add	ip, ip, #126976	; 0x1f000
    1e58:	ldr	pc, [ip, #208]!	; 0xd0

00001e5c <utimes@plt>:
    1e5c:	add	ip, pc, #0, 12
    1e60:	add	ip, ip, #126976	; 0x1f000
    1e64:	ldr	pc, [ip, #200]!	; 0xc8

00001e68 <realloc@plt>:
    1e68:	add	ip, pc, #0, 12
    1e6c:	add	ip, ip, #126976	; 0x1f000
    1e70:	ldr	pc, [ip, #192]!	; 0xc0

00001e74 <ftruncate64@plt>:
    1e74:	add	ip, pc, #0, 12
    1e78:	add	ip, ip, #126976	; 0x1f000
    1e7c:	ldr	pc, [ip, #184]!	; 0xb8

00001e80 <getservbyname@plt>:
    1e80:	add	ip, pc, #0, 12
    1e84:	add	ip, ip, #126976	; 0x1f000
    1e88:	ldr	pc, [ip, #176]!	; 0xb0

00001e8c <getsockopt@plt>:
    1e8c:	add	ip, pc, #0, 12
    1e90:	add	ip, ip, #126976	; 0x1f000
    1e94:	ldr	pc, [ip, #168]!	; 0xa8

00001e98 <pipe@plt>:
    1e98:	add	ip, pc, #0, 12
    1e9c:	add	ip, ip, #126976	; 0x1f000
    1ea0:	ldr	pc, [ip, #160]!	; 0xa0

00001ea4 <setsockopt@plt>:
    1ea4:	add	ip, pc, #0, 12
    1ea8:	add	ip, ip, #126976	; 0x1f000
    1eac:	ldr	pc, [ip, #152]!	; 0x98

00001eb0 <getsid@plt>:
    1eb0:	add	ip, pc, #0, 12
    1eb4:	add	ip, ip, #126976	; 0x1f000
    1eb8:	ldr	pc, [ip, #144]!	; 0x90

00001ebc <strpbrk@plt>:
    1ebc:	add	ip, pc, #0, 12
    1ec0:	add	ip, ip, #126976	; 0x1f000
    1ec4:	ldr	pc, [ip, #136]!	; 0x88

00001ec8 <memchr@plt>:
    1ec8:	add	ip, pc, #0, 12
    1ecc:	add	ip, ip, #126976	; 0x1f000
    1ed0:	ldr	pc, [ip, #128]!	; 0x80

00001ed4 <fchmod@plt>:
    1ed4:	add	ip, pc, #0, 12
    1ed8:	add	ip, ip, #126976	; 0x1f000
    1edc:	ldr	pc, [ip, #120]!	; 0x78

00001ee0 <strcmp@plt>:
    1ee0:	add	ip, pc, #0, 12
    1ee4:	add	ip, ip, #126976	; 0x1f000
    1ee8:	ldr	pc, [ip, #112]!	; 0x70

00001eec <exit@plt>:
    1eec:	add	ip, pc, #0, 12
    1ef0:	add	ip, ip, #126976	; 0x1f000
    1ef4:	ldr	pc, [ip, #104]!	; 0x68

00001ef8 <__vasprintf_chk@plt>:
    1ef8:	add	ip, pc, #0, 12
    1efc:	add	ip, ip, #126976	; 0x1f000
    1f00:	ldr	pc, [ip, #96]!	; 0x60

00001f04 <__errno_location@plt>:
    1f04:	add	ip, pc, #0, 12
    1f08:	add	ip, ip, #126976	; 0x1f000
    1f0c:	ldr	pc, [ip, #88]!	; 0x58

00001f10 <__cxa_finalize@plt>:
    1f10:	add	ip, pc, #0, 12
    1f14:	add	ip, ip, #126976	; 0x1f000
    1f18:	ldr	pc, [ip, #80]!	; 0x50

00001f1c <getpwnam@plt>:
    1f1c:	add	ip, pc, #0, 12
    1f20:	add	ip, ip, #126976	; 0x1f000
    1f24:	ldr	pc, [ip, #72]!	; 0x48

00001f28 <getpagesize@plt>:
    1f28:	add	ip, pc, #0, 12
    1f2c:	add	ip, ip, #126976	; 0x1f000
    1f30:	ldr	pc, [ip, #64]!	; 0x40

00001f34 <fputs@plt>:
    1f34:	add	ip, pc, #0, 12
    1f38:	add	ip, ip, #126976	; 0x1f000
    1f3c:	ldr	pc, [ip, #56]!	; 0x38

Disassembly of section .text:

00001f40 <error@@Base-0x3ff0>:
    1f40:	svcmi	0x00f0e92d
    1f44:	stc	6, cr4, [sp, #-16]!
    1f48:	strmi	r8, [sp], -r2, lsl #22
    1f4c:	strbcs	pc, [r0, #2271]	; 0x8df	; <UNPREDICTABLE>
    1f50:	strbcc	pc, [r0, #2271]	; 0x8df	; <UNPREDICTABLE>
    1f54:			; <UNDEFINED> instruction: 0xf8df447a
    1f58:	addslt	r7, r1, r0, asr #11
    1f5c:	ldrbtmi	r5, [pc], #-2259	; 1f64 <fputs@plt+0x30>
    1f60:	movwls	r6, #63515	; 0xf81b
    1f64:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    1f68:	blx	53df86 <setlogin@@Base+0x53217e>
    1f6c:	ldc2	0, cr15, [r4], {7}
    1f70:	stc2	0, cr15, [ip], {7}
    1f74:	strtmi	r2, [r0], -r1, lsl #2
    1f78:			; <UNDEFINED> instruction: 0xffaef00b
    1f7c:	stmdacs	r1, {r2, r8, sp}
    1f80:			; <UNDEFINED> instruction: 0x2001bfb8
    1f84:			; <UNDEFINED> instruction: 0xf926f004
    1f88:	svclt	0x00c42c00
    1f8c:	stmeq	r4, {r0, r2, r8, r9, fp, sp, lr, pc}
    1f90:	strmi	r1, [r2], r6, lsl #30
    1f94:			; <UNDEFINED> instruction: 0xf855dd07
    1f98:			; <UNDEFINED> instruction: 0xf0040b04
    1f9c:	strbmi	pc, [r5, #-2397]	; 0xfffff6a3	; <UNPREDICTABLE>
    1fa0:	svceq	0x0004f846
    1fa4:			; <UNDEFINED> instruction: 0xf8dad1f7
    1fa8:	strcs	r0, [r0], -r0
    1fac:			; <UNDEFINED> instruction: 0xff14f009
    1fb0:	strbcs	pc, [r8, #-2271]!	; 0xfffff721	; <UNPREDICTABLE>
    1fb4:			; <UNDEFINED> instruction: 0xf04f9608
    1fb8:	strls	r0, [r7], -r1, lsl #16
    1fbc:			; <UNDEFINED> instruction: 0xf8df58b9
    1fc0:			; <UNDEFINED> instruction: 0xf8df5560
    1fc4:			; <UNDEFINED> instruction: 0xf8df3560
    1fc8:			; <UNDEFINED> instruction: 0xf8df2560
    1fcc:	ldrbtmi	fp, [sl], #-1376	; 0xfffffaa0
    1fd0:	ldmdavs	r2, {r0, r1, r3, r4, r5, r6, r7, sl, lr}
    1fd4:	ldmdbpl	sp!, {r3, sp, lr}^
    1fd8:	ldrbne	pc, [r4, #-2271]	; 0xfffff721	; <UNPREDICTABLE>
    1fdc:	strvs	lr, [r1], -r5, asr #19
    1fe0:			; <UNDEFINED> instruction: 0xf8574479
    1fe4:	strtmi	r9, [r8], -r3
    1fe8:	stmib	r9, {r1, r2, r3, r5, sp, lr}^
    1fec:			; <UNDEFINED> instruction: 0xf8c96600
    1ff0:			; <UNDEFINED> instruction: 0xf0056008
    1ff4:			; <UNDEFINED> instruction: 0xf8dff83f
    1ff8:			; <UNDEFINED> instruction: 0x4628153c
    1ffc:			; <UNDEFINED> instruction: 0xf0054479
    2000:			; <UNDEFINED> instruction: 0xf8dff839
    2004:			; <UNDEFINED> instruction: 0x46281534
    2008:			; <UNDEFINED> instruction: 0xf0054479
    200c:			; <UNDEFINED> instruction: 0xf8dff833
    2010:	strtmi	r1, [r8], -ip, lsr #10
    2014:			; <UNDEFINED> instruction: 0xf0054479
    2018:			; <UNDEFINED> instruction: 0xf8dff82d
    201c:	strtmi	r1, [r8], -r4, lsr #10
    2020:			; <UNDEFINED> instruction: 0xf0054479
    2024:			; <UNDEFINED> instruction: 0xf8dff827
    2028:			; <UNDEFINED> instruction: 0x4628151c
    202c:			; <UNDEFINED> instruction: 0xf0054479
    2030:			; <UNDEFINED> instruction: 0xf8dff821
    2034:			; <UNDEFINED> instruction: 0x46281514
    2038:			; <UNDEFINED> instruction: 0xf0054479
    203c:			; <UNDEFINED> instruction: 0xf8dff81b
    2040:	ldmpl	fp!, {r2, r3, r8, sl, ip, sp}^
    2044:	andsvs	r9, lr, r9, lsl #6
    2048:			; <UNDEFINED> instruction: 0x465a4651
    204c:			; <UNDEFINED> instruction: 0xf00a4620
    2050:	mcrrne	9, 7, pc, r1, cr15	; <UNPREDICTABLE>
    2054:			; <UNDEFINED> instruction: 0xf0004606
    2058:			; <UNDEFINED> instruction: 0xf1a68163
    205c:	blcs	1142d28 <setlogin@@Base+0x1136f20>
    2060:	addshi	pc, r2, r0, lsl #4
    2064:			; <UNDEFINED> instruction: 0xf852a202
    2068:	ldrmi	r3, [sl], #-35	; 0xffffffdd
    206c:	svclt	0x00004710
    2070:	andeq	r0, r0, r9, lsr #5
    2074:			; <UNDEFINED> instruction: 0xffffffd9
    2078:	muleq	r0, pc, r2	; <UNPREDICTABLE>
    207c:	andeq	r0, r0, r5, lsl #5
    2080:	andeq	r0, r0, r9, lsl r1
    2084:	andeq	r0, r0, r5, lsl #5
    2088:	andeq	r0, r0, r9, lsl r1
    208c:	andeq	r0, r0, r9, lsl r1
    2090:	andeq	r0, r0, r9, lsl r1
    2094:	andeq	r0, r0, r9, lsl r1
    2098:	andeq	r0, r0, r9, lsl r1
    209c:	andeq	r0, r0, r9, lsl r1
    20a0:	andeq	r0, r0, r9, lsl r1
    20a4:	andeq	r0, r0, r9, lsl r1
    20a8:	andeq	r0, r0, r9, lsl r1
    20ac:	andeq	r0, r0, r9, lsl r1
    20b0:	andeq	r0, r0, r9, lsl r1
    20b4:	andeq	r0, r0, pc, ror #4
    20b8:	andeq	r0, r0, r5, lsl #5
    20bc:	andeq	r0, r0, r9, lsl r1
    20c0:	andeq	r0, r0, r9, lsl r1
    20c4:	andeq	r0, r0, r9, lsr #4
    20c8:	andeq	r0, r0, r9, lsl r1
    20cc:	andeq	r0, r0, r9, lsl r1
    20d0:	andeq	r0, r0, r9, lsl r1
    20d4:	andeq	r0, r0, r9, lsr #4
    20d8:	andeq	r0, r0, r9, lsl r1
    20dc:	andeq	r0, r0, r9, lsl r1
    20e0:	andeq	r0, r0, r9, lsl r1
    20e4:	andeq	r0, r0, r9, lsl r1
    20e8:	andeq	r0, r0, r9, lsl r1
    20ec:	andeq	r0, r0, r9, lsl #4
    20f0:	andeq	r0, r0, r9, lsl r1
    20f4:	andeq	r0, r0, r9, lsl r1
    20f8:	strdeq	r0, [r0], -r7
    20fc:	andeq	r0, r0, pc, ror #3
    2100:	andeq	r0, r0, r9, lsl r1
    2104:	andeq	r0, r0, r9, lsl r1
    2108:	andeq	r0, r0, r9, lsl r1
    210c:	andeq	r0, r0, r9, lsl r1
    2110:	andeq	r0, r0, r9, lsl r1
    2114:	andeq	r0, r0, r9, lsl r1
    2118:	andeq	r0, r0, r9, lsl r1
    211c:	andeq	r0, r0, r9, lsl r1
    2120:	andeq	r0, r0, r9, lsl r1
    2124:	andeq	r0, r0, r9, lsl r1
    2128:	andeq	r0, r0, r9, lsl r1
    212c:	andeq	r0, r0, r9, lsl r1
    2130:	andeq	r0, r0, r9, lsl r1
    2134:	andeq	r0, r0, r9, lsl r1
    2138:	andeq	r0, r0, r9, lsr #4
    213c:	andeq	r0, r0, r5, ror #3
    2140:	andeq	r0, r0, r9, lsl r1
    2144:	ldrdeq	r0, [r0], -r7
    2148:	andeq	r0, r0, r9, lsl r1
    214c:	andeq	r0, r0, r9, lsl r1
    2150:	andeq	r0, r0, r9, lsr #4
    2154:	andeq	r0, r0, r9, lsl r1
    2158:	andeq	r0, r0, r9, lsl r1
    215c:	andeq	r0, r0, fp, ror r1
    2160:	andeq	r0, r0, r9, lsl r1
    2164:	andeq	r0, r0, r9, lsl r1
    2168:	andeq	r0, r0, r9, lsr #4
    216c:	andeq	r0, r0, r1, ror r1
    2170:	andeq	r0, r0, r3, asr r1
    2174:	andeq	r0, r0, r9, asr #2
    2178:	andeq	r0, r0, r9, lsl r1
    217c:	andeq	r0, r0, fp, lsr r1
    2180:	andeq	r0, r0, r9, lsl r1
    2184:	andeq	r0, r0, sp, lsl r1
    2188:			; <UNDEFINED> instruction: 0xffacf000
    218c:			; <UNDEFINED> instruction: 0x462849f0
    2190:	tstls	sl, r9, ror r4
    2194:			; <UNDEFINED> instruction: 0xff6ef004
    2198:	strbmi	r9, [r8], -sl, lsl #18
    219c:			; <UNDEFINED> instruction: 0xff6af004
    21a0:	ldrbtmi	r4, [fp], #-3052	; 0xfffff414
    21a4:	andhi	pc, r8, r3, asr #17
    21a8:	blmi	ffafbee8 <setlogin@@Base+0xffaf00e0>
    21ac:	andls	r2, r8, #268435456	; 0x10000000
    21b0:			; <UNDEFINED> instruction: 0xf8c358fb
    21b4:	strb	r8, [r7, -r0]
    21b8:	ldmpl	fp!, {r3, r5, r6, r7, r8, r9, fp, lr}^
    21bc:	andhi	pc, r0, r3, asr #17
    21c0:	stmibmi	r7!, {r1, r6, r8, r9, sl, sp, lr, pc}^
    21c4:	ldrbtmi	r4, [r9], #-1576	; 0xfffff9d8
    21c8:			; <UNDEFINED> instruction: 0xf004910a
    21cc:	stmdbls	sl, {r0, r1, r4, r6, r8, r9, sl, fp, ip, sp, lr, pc}
    21d0:			; <UNDEFINED> instruction: 0xf0044648
    21d4:	blmi	ff901f18 <setlogin@@Base+0xff8f6110>
    21d8:	ldrbtmi	r2, [fp], #-512	; 0xfffffe00
    21dc:			; <UNDEFINED> instruction: 0xe733609a
    21e0:	ldmpl	fp!, {r0, r5, r6, r7, r8, r9, fp, lr}^
    21e4:	andhi	pc, r0, r3, asr #17
    21e8:	blmi	ff83bea8 <setlogin@@Base+0xff8300a0>
    21ec:	tstcs	r0, lr, lsl #16
    21f0:	cdpmi	2, 13, cr2, cr15, cr1, {0}
    21f4:	strdls	r5, [r2], -fp
    21f8:	sbcvs	pc, r8, pc, asr #32
    21fc:	smlabteq	r0, sp, r9, lr
    2200:	movwls	r4, #42110	; 0xa47e
    2204:	stmdbls	sl, {r8, r9, sp}
    2208:			; <UNDEFINED> instruction: 0xf00a6808
    220c:	strmi	pc, [fp], -r3, asr #22
    2210:	stmib	r6, {r1, r9, sl, lr}^
    2214:	blls	38ae1c <setlogin@@Base+0x37f014>
    2218:			; <UNDEFINED> instruction: 0xd1b52b00
    221c:	addvs	pc, r0, #1325400064	; 0x4f000000
    2220:			; <UNDEFINED> instruction: 0xf00b2300
    2224:			; <UNDEFINED> instruction: 0xf8dffec7
    2228:	stmib	r6, {r2, r3, r6, r8, r9, lr, pc}^
    222c:	strmi	r0, [fp], -r0, lsl #2
    2230:	andne	pc, ip, r7, asr r8	; <UNPREDICTABLE>
    2234:	tstls	sl, r2, lsl #12
    2238:	orrmi	pc, r0, pc, asr #8
    223c:	tstls	r0, sl, lsl #16
    2240:	stc2l	0, cr15, [ip], #20
    2244:	blmi	ff13be4c <setlogin@@Base+0xff130044>
    2248:	andls	r2, r7, #268435456	; 0x10000000
    224c:			; <UNDEFINED> instruction: 0xf8c358fb
    2250:	ldrbt	r8, [r9], r0
    2254:	ldmpl	fp!, {r3, r6, r7, r8, r9, fp, lr}^
    2258:	andhi	pc, r0, r3, asr #17
    225c:	blls	27be34 <setlogin@@Base+0x27002c>
    2260:	andhi	pc, r0, r3, asr #17
    2264:	blmi	ff07be2c <setlogin@@Base+0xff070024>
    2268:	ldmdavs	r8, {r0, r1, r3, r4, r5, r6, r7, fp, ip, lr}
    226c:			; <UNDEFINED> instruction: 0xfff4f003
    2270:	ldrbtmi	r4, [fp], #-3010	; 0xfffff43e
    2274:	usat	r6, #7, r8
    2278:	ldmpl	lr!, {r2, r3, r4, r5, r7, r8, r9, fp, lr}^
    227c:			; <UNDEFINED> instruction: 0xf0046830
    2280:	blmi	ff00128c <setlogin@@Base+0xfeff5484>
    2284:	stmdacs	r0, {r0, r1, r3, r4, r5, r6, sl, lr}
    2288:			; <UNDEFINED> instruction: 0xf73f6058
    228c:	popmi	{r0, r2, r3, r4, r6, r7, r9, sl, fp, sp, pc}
    2290:	ldrbtmi	r6, [r8], #-2097	; 0xfffff7cf
    2294:	blx	fe43e2aa <setlogin@@Base+0xfe4324a2>
    2298:			; <UNDEFINED> instruction: 0x463249bb
    229c:			; <UNDEFINED> instruction: 0x46484bbb
    22a0:	ldrbtmi	r4, [fp], #-1145	; 0xfffffb87
    22a4:	cdp	3, 0, cr9, cr8, cr10, {0}
    22a8:			; <UNDEFINED> instruction: 0xf0041a10
    22ac:	blls	2c1e40 <setlogin@@Base+0x2b6038>
    22b0:	bmi	feb93bd8 <setlogin@@Base+0xfeb87dd0>
    22b4:	ldrmi	r9, [r9], -fp, lsl #6
    22b8:	ldmdavs	sl, {r0, r1, r3, r4, r5, r7, fp, ip, lr}
    22bc:			; <UNDEFINED> instruction: 0xf004930a
    22c0:	mrc	14, 0, APSR_nzcv, cr8, cr9, {6}
    22c4:			; <UNDEFINED> instruction: 0x46321a10
    22c8:			; <UNDEFINED> instruction: 0xf0044628
    22cc:	bls	2c1e20 <setlogin@@Base+0x2b6018>
    22d0:	strtmi	r9, [r8], -fp, lsl #22
    22d4:			; <UNDEFINED> instruction: 0x46196812
    22d8:	cdp2	0, 12, cr15, cr12, cr4, {0}
    22dc:	stmibmi	ip!, {r2, r4, r5, r7, r9, sl, sp, lr, pc}
    22e0:	ldrbtmi	r4, [r9], #-1608	; 0xfffff9b8
    22e4:			; <UNDEFINED> instruction: 0xf004910a
    22e8:	stmdbls	sl, {r0, r2, r6, r7, r9, sl, fp, ip, sp, lr, pc}
    22ec:			; <UNDEFINED> instruction: 0xf0044628
    22f0:	strt	pc, [r9], r1, asr #29
    22f4:	ldrtmi	r4, [r2], -r7, lsr #19
    22f8:	ldrbtmi	r4, [r9], #-1576	; 0xfffff9d8
    22fc:			; <UNDEFINED> instruction: 0xf004910a
    2300:	stmdbls	sl, {r0, r3, r4, r5, r7, r9, sl, fp, ip, sp, lr, pc}
    2304:			; <UNDEFINED> instruction: 0x46484632
    2308:	cdp2	0, 11, cr15, cr4, cr4, {0}
    230c:	blmi	fe8bbd84 <setlogin@@Base+0xfe8aff7c>
    2310:			; <UNDEFINED> instruction: 0xf8c3447b
    2314:			; <UNDEFINED> instruction: 0xe6978018
    2318:	ldrbtmi	r4, [r8], #-2208	; 0xfffff760
    231c:	blx	133e332 <setlogin@@Base+0x133252a>
    2320:	ldmpl	fp!, {r0, r1, r2, r3, r4, r7, r8, r9, fp, lr}^
    2324:			; <UNDEFINED> instruction: 0xf7ff681d
    2328:	blmi	fe7bd260 <setlogin@@Base+0xfe7b1458>
    232c:	ldrshtvs	r5, [r0], -lr
    2330:	ldc	7, cr15, [r6], #-1020	; 0xfffffc04
    2334:	ldmpl	fp!, {r2, r3, r4, r7, r8, r9, fp, lr}^
    2338:	stmdacs	r0, {r3, r4, sp, lr}
    233c:	adcshi	pc, r1, r0
    2340:			; <UNDEFINED> instruction: 0xf7ff2001
    2344:	ldmdblt	r0, {r3, sl, fp, sp, lr, pc}
    2348:	ldrbtmi	r4, [fp], #-2968	; 0xfffff468
    234c:	blmi	fe19a5b4 <setlogin@@Base+0xfe18e7ac>
    2350:	ldmdavs	r1!, {r1, r2, r3, r4, r5, r6, r7, fp, ip, lr}
    2354:			; <UNDEFINED> instruction: 0xf0002900
    2358:	strtmi	r8, [r9], -r9, lsr #1
    235c:			; <UNDEFINED> instruction: 0xf00b4620
    2360:	bmi	fe501b1c <setlogin@@Base+0xfe4f5d14>
    2364:	beq	fe17cf94 <setlogin@@Base+0xfe17118c>
    2368:			; <UNDEFINED> instruction: 0xf04f4b92
    236c:	tstcs	r1, r0, lsl #24
    2370:			; <UNDEFINED> instruction: 0xf8c558bd
    2374:			; <UNDEFINED> instruction: 0xf857c000
    2378:	blls	1e238c <setlogin@@Base+0x1d6584>
    237c:	andne	pc, r0, r8, asr #17
    2380:	blcs	13b98 <setlogin@@Base+0x7d90>
    2384:	adchi	pc, r0, r0, asr #32
    2388:	blcs	28fb0 <setlogin@@Base+0x1d1a8>
    238c:	stmdacs	r1, {r0, r2, r3, r4, r5, r6, r8, ip, lr, pc}
    2390:	mrcge	7, 7, APSR_nzcv, cr10, cr15, {3}
    2394:	stmdacs	r2, {r3, r4, r5, r6, r8, r9, fp, lr}
    2398:			; <UNDEFINED> instruction: 0xf8574a87
    239c:	ldrbtmi	r9, [sl], #-3
    23a0:	mvnscc	pc, #79	; 0x4f
    23a4:	andcc	pc, r0, r8, asr #17
    23a8:	svclt	0x00186013
    23ac:	andne	pc, r0, r9, asr #17
    23b0:	eorvs	r4, fp, r2, lsl #19
    23b4:	stmvs	r9, {r0, r3, r4, r5, r6, sl, lr}
    23b8:			; <UNDEFINED> instruction: 0xf0402900
    23bc:			; <UNDEFINED> instruction: 0xf8df808c
    23c0:	ldrbtmi	ip, [ip], #512	; 0x200
    23c4:	ldmpl	fp!, {r0, r2, r5, r6, r8, r9, fp, lr}^
    23c8:	blcs	1c43c <setlogin@@Base+0x10634>
    23cc:	addhi	pc, lr, r0, asr #32
    23d0:	ldrsb	pc, [r0, #143]!	; 0x8f	; <UNPREDICTABLE>
    23d4:	ldmdavs	r3!, {r1, r2, r3, r4, r5, r6, r7, sl, lr}
    23d8:			; <UNDEFINED> instruction: 0xf0402b00
    23dc:			; <UNDEFINED> instruction: 0xf8df8083
    23e0:	ldrbtmi	fp, [fp], #488	; 0x1e8
    23e4:	ldrdcc	pc, [r0], -r9
    23e8:	cmnle	r8, r0, lsl #22
    23ec:	ldrbtmi	r4, [lr], #-3703	; 0xfffff189
    23f0:	movtcs	r4, #2423	; 0x977
    23f4:	ldmdapl	r8!, {r0, r1, r2, r4, r5, r6, r9, fp, lr}^
    23f8:			; <UNDEFINED> instruction: 0x4619447a
    23fc:	stmib	sp, {r2, r9, sl, ip, pc}^
    2400:			; <UNDEFINED> instruction: 0xf104ce01
    2404:	andls	r4, r0, #128, 12	; 0x8000000
    2408:			; <UNDEFINED> instruction: 0xf8cd2201
    240c:	cdpcc	0, 0, cr11, cr1, cr12, {0}
    2410:	stc	7, cr15, [r0], #-1020	; 0xfffffc04
    2414:	andcs	r4, sp, r0, ror r9
    2418:			; <UNDEFINED> instruction: 0xf0064479
    241c:			; <UNDEFINED> instruction: 0xf85afeb7
    2420:			; <UNDEFINED> instruction: 0xf0040026
    2424:	stmdacs	r0, {r0, r1, r2, r4, r8, sl, fp, ip, sp, lr, pc}
    2428:	ldrbmi	sp, [r1], -r4, rrx
    242c:			; <UNDEFINED> instruction: 0xf0014620
    2430:	blmi	1ac0c14 <setlogin@@Base+0x1ab4e0c>
    2434:	ldmdavs	fp, {r0, r1, r3, r4, r5, r6, sl, lr}
    2438:	blmi	1a4f044 <setlogin@@Base+0x1a4323c>
    243c:			; <UNDEFINED> instruction: 0xd01e58fc
    2440:	stmiblt	r3!, {r0, r1, r5, fp, sp, lr}^
    2444:	mcrrne	8, 2, r6, r2, cr8
    2448:			; <UNDEFINED> instruction: 0xf7ffd001
    244c:			; <UNDEFINED> instruction: 0xf8d8ec1e
    2450:	marne	acc0, r0, r3
    2454:			; <UNDEFINED> instruction: 0xf7ffd001
    2458:	blmi	18bd4c0 <setlogin@@Base+0x18b16b8>
    245c:	andcs	sl, r0, #212992	; 0x34000
    2460:	ldmdavs	r8, {r0, r1, r3, r4, r5, r6, sl, lr}
    2464:	bl	ff2c0468 <setlogin@@Base+0xff2b4660>
    2468:	andle	r3, r6, r1
    246c:			; <UNDEFINED> instruction: 0xf3c39b0d
    2470:			; <UNDEFINED> instruction: 0xf0032207
    2474:	tstmi	r3, #-67108863	; 0xfc000001
    2478:	movwcs	sp, #4097	; 0x1001
    247c:	stmdavs	r0!, {r0, r1, r5, sp, lr}
    2480:	svclt	0x00183800
    2484:			; <UNDEFINED> instruction: 0xf7ff2001
    2488:	bls	1fd958 <setlogin@@Base+0x1f1b50>
    248c:			; <UNDEFINED> instruction: 0xf0014651
    2490:	blmi	150196c <setlogin@@Base+0x14f5b64>
    2494:	ldmdavs	r8, {r0, r1, r3, r4, r5, r6, r7, fp, ip, lr}
    2498:	svclt	0x00183800
    249c:			; <UNDEFINED> instruction: 0xf7ff2001
    24a0:	ldmdami	r1, {r1, r2, r5, r8, sl, fp, sp, lr, pc}^
    24a4:	ldrbtmi	r6, [r8], #-2097	; 0xfffff7cf
    24a8:	blx	fe1be4bc <setlogin@@Base+0xfe1b26b4>
    24ac:	ldrbtmi	r4, [r8], #-2127	; 0xfffff7b1
    24b0:	stc2	0, cr15, [ip], #36	; 0x24
    24b4:			; <UNDEFINED> instruction: 0xf47f3001
    24b8:	stmdami	sp, {r4, r6, r8, r9, sl, fp, sp, pc}^
    24bc:			; <UNDEFINED> instruction: 0xf7ff4478
    24c0:	ldrdcs	lr, [r1], -r6
    24c4:	ldc	7, cr15, [r2, #-1020]	; 0xfffffc04
    24c8:	ldc2l	0, cr15, [sl]
    24cc:			; <UNDEFINED> instruction: 0x46204651
    24d0:			; <UNDEFINED> instruction: 0xff66f000
    24d4:			; <UNDEFINED> instruction: 0xf8dfe7dd
    24d8:	ldrbtmi	ip, [ip], #284	; 0x11c
    24dc:	mcrmi	7, 2, lr, cr6, cr2, {3}
    24e0:			; <UNDEFINED> instruction: 0xe785447e
    24e4:			; <UNDEFINED> instruction: 0xb114f8df
    24e8:			; <UNDEFINED> instruction: 0xe77b44fb
    24ec:			; <UNDEFINED> instruction: 0xe110f8df
    24f0:			; <UNDEFINED> instruction: 0xe77044fe
    24f4:	ldrdcc	pc, [r0], -r9
    24f8:	ldrbmi	fp, [r1], -r3, lsr #18
    24fc:			; <UNDEFINED> instruction: 0xf0024620
    2500:	ldr	pc, [r6, r9, lsl #27]
    2504:	eoreq	pc, r6, sl, asr r8	; <UNPREDICTABLE>
    2508:	cdp2	0, 7, cr15, cr12, cr0, {0}
    250c:	svclt	0x0000e7f5
    2510:	andeq	lr, r1, ip, lsl lr
    2514:	andeq	r0, r0, ip, asr #4
    2518:	andeq	lr, r1, r2, lsl lr
    251c:	andeq	r0, r0, r0, lsl r2
    2520:	andeq	r0, r0, r0, ror r2
    2524:	andeq	r0, r0, r0, lsr #4
    2528:	andeq	pc, r1, r2, asr #32
    252c:	andeq	ip, r0, r4, lsl #19
    2530:	andeq	ip, r0, r8, asr #27
    2534:	andeq	ip, r0, r4, asr #11
    2538:	andeq	ip, r0, r4, lsr #17
    253c:	andeq	ip, r0, ip, lsr #17
    2540:	andeq	ip, r0, r4, lsr #11
    2544:	andeq	ip, r0, ip, lsr #17
    2548:			; <UNDEFINED> instruction: 0x0000c8b8
    254c:	andeq	r0, r0, r4, asr #4
    2550:			; <UNDEFINED> instruction: 0x0000c7bc
    2554:	ldrdeq	lr, [r1], -sl
    2558:	andeq	r0, r0, ip, lsr r2
    255c:	andeq	r0, r0, r8, asr r2
    2560:	andeq	ip, r0, sl, lsl #15
    2564:	andeq	lr, r1, sl, lsr #28
    2568:	andeq	r0, r0, r8, ror #4
    256c:	andeq	r0, r0, r4, lsr r2
    2570:	andeq	lr, r1, ip, ror lr
    2574:	andeq	r0, r0, r0, lsl #5
    2578:	andeq	r0, r0, r4, lsl r2
    257c:	muleq	r1, lr, sp
    2580:	andeq	lr, r1, r0, lsl #27
    2584:	muleq	r0, sl, r6
    2588:	andeq	ip, r0, r8, lsl #13
    258c:	andeq	ip, r0, r6, lsl #22
    2590:	andeq	ip, r0, sl, asr r6
    2594:	andeq	ip, r0, lr, lsr #12
    2598:	andeq	lr, r1, ip, ror #26
    259c:	andeq	ip, r0, r6, ror #11
    25a0:	andeq	r0, r0, ip, ror r2
    25a4:	andeq	r0, r0, ip, lsr #4
    25a8:	andeq	r0, r0, r0, asr r2
    25ac:			; <UNDEFINED> instruction: 0x0001ecba
    25b0:	andeq	r0, r0, r4, lsl #4
    25b4:	andeq	r0, r0, r8, ror r2
    25b8:	andeq	lr, r1, r6, ror #24
    25bc:	andeq	lr, r1, r8, asr #25
    25c0:	andeq	ip, r0, sl, ror r9
    25c4:	andeq	ip, r0, r8, ror #18
    25c8:	andeq	ip, r0, sl, asr r9
    25cc:	andeq	ip, r0, lr, asr #18
    25d0:	andeq	r0, r0, ip, lsl r2
    25d4:	andeq	ip, r0, r0, asr #11
    25d8:	andeq	r0, r0, sp, lsr #6
    25dc:	ldrdeq	lr, [r1], -r0
    25e0:	andeq	r0, r0, r4, ror #4
    25e4:	andeq	lr, r1, r4, lsr #23
    25e8:	andeq	ip, r0, lr, asr #9
    25ec:	ldrdeq	ip, [r0], -r6
    25f0:	strdeq	ip, [r0], -r4
    25f4:	andeq	ip, r0, r2, asr #7
    25f8:	andeq	ip, r0, r8, asr #7
    25fc:			; <UNDEFINED> instruction: 0x0000c3bc
    2600:			; <UNDEFINED> instruction: 0x0000c3b0
    2604:	bleq	3e748 <setlogin@@Base+0x32940>
    2608:	cdpeq	0, 0, cr15, cr0, cr15, {2}
    260c:	strbtmi	fp, [sl], -r2, lsl #24
    2610:	strlt	fp, [r1], #-1028	; 0xfffffbfc
    2614:	ldrdge	pc, [r4], -pc	; <UNPREDICTABLE>
    2618:	ldrmi	sl, [sl], #776	; 0x308
    261c:	ldrdgt	pc, [r0], -pc	; <UNPREDICTABLE>
    2620:	andgt	pc, ip, sl, asr r8	; <UNPREDICTABLE>
    2624:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
    2628:			; <UNDEFINED> instruction: 0xf85a4b06
    262c:	stmdami	r6, {r0, r1, ip, sp}
    2630:	andeq	pc, r0, sl, asr r8	; <UNPREDICTABLE>
    2634:	ldmib	r0!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    2638:	ldmib	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    263c:	andeq	lr, r1, r8, lsr r7
    2640:	andeq	r0, r0, r8, lsl #4
    2644:	andeq	r0, r0, r8, asr #4
    2648:	andeq	r0, r0, r8, lsl #5
    264c:	ldr	r3, [pc, #20]	; 2668 <fputs@plt+0x734>
    2650:	ldr	r2, [pc, #20]	; 266c <fputs@plt+0x738>
    2654:	add	r3, pc, r3
    2658:	ldr	r2, [r3, r2]
    265c:	cmp	r2, #0
    2660:	bxeq	lr
    2664:	b	19b0 <__gmon_start__@plt>
    2668:	andeq	lr, r1, r8, lsl r7
    266c:	andeq	r0, r0, r8, lsl r2
    2670:	blmi	1d4690 <setlogin@@Base+0x1c8888>
    2674:	bmi	1d385c <setlogin@@Base+0x1c7a54>
    2678:	addmi	r4, r3, #2063597568	; 0x7b000000
    267c:	andle	r4, r3, sl, ror r4
    2680:	ldmpl	r3, {r0, r2, r8, r9, fp, lr}^
    2684:	ldrmi	fp, [r8, -r3, lsl #2]
    2688:	svclt	0x00004770
    268c:	strdeq	lr, [r1], -ip
    2690:	strdeq	lr, [r1], -r8
    2694:	strdeq	lr, [r1], -r4
    2698:	andeq	r0, r0, r4, lsr #4
    269c:	stmdbmi	r9, {r3, fp, lr}
    26a0:	bmi	253888 <setlogin@@Base+0x247a80>
    26a4:	bne	253890 <setlogin@@Base+0x247a88>
    26a8:	svceq	0x00cb447a
    26ac:			; <UNDEFINED> instruction: 0x01a1eb03
    26b0:	andle	r1, r3, r9, asr #32
    26b4:	ldmpl	r3, {r0, r2, r8, r9, fp, lr}^
    26b8:	ldrmi	fp, [r8, -r3, lsl #2]
    26bc:	svclt	0x00004770
    26c0:	ldrdeq	lr, [r1], -r0
    26c4:	andeq	lr, r1, ip, asr #19
    26c8:	andeq	lr, r1, r8, asr #13
    26cc:	andeq	r0, r0, r8, lsr r2
    26d0:	blmi	2afaf8 <setlogin@@Base+0x2a3cf0>
    26d4:	ldrbtmi	r4, [fp], #-2570	; 0xfffff5f6
    26d8:	ldmdavc	fp, {r1, r3, r4, r5, r6, sl, lr}
    26dc:	blmi	270c90 <setlogin@@Base+0x264e88>
    26e0:	ldrdlt	r5, [r3, -r3]!
    26e4:	ldrbtmi	r4, [fp], #-2824	; 0xfffff4f8
    26e8:			; <UNDEFINED> instruction: 0xf7ff6818
    26ec:			; <UNDEFINED> instruction: 0xf7ffec12
    26f0:	blmi	1c25f4 <setlogin@@Base+0x1b67ec>
    26f4:	ldrbtmi	r2, [fp], #-513	; 0xfffffdff
    26f8:	stclt	0, cr7, [r8, #-104]	; 0xffffff98
    26fc:	muleq	r1, lr, r9
    2700:	muleq	r1, r8, r6
    2704:	andeq	r0, r0, r4, lsl #5
    2708:	andeq	lr, r1, sl, lsl r9
    270c:	andeq	lr, r1, lr, ror r9
    2710:	svclt	0x0000e7c4
    2714:	strmi	r4, [r4], -fp, lsl #26
    2718:	ldrbtmi	fp, [sp], #-1288	; 0xfffffaf8
    271c:	stmdacs	r1, {r3, r5, fp, sp, lr}
    2720:	stccs	13, cr13, [r0], {10}
    2724:	qadd16mi	fp, r1, r4
    2728:			; <UNDEFINED> instruction: 0xf7ff210f
    272c:	andcs	lr, r0, #140, 22	; 0x23000
    2730:	ldrmi	r6, [r1], -r8, lsr #16
    2734:	b	18c0738 <setlogin@@Base+0x18b4930>
    2738:	tstlt	ip, r1
    273c:	ldmib	sl!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    2740:	bl	ff540744 <setlogin@@Base+0xff53493c>
    2744:	andeq	lr, r1, sl, ror #17
    2748:	strmi	fp, [r4], -r8, lsl #10
    274c:	bmi	295378 <setlogin@@Base+0x289570>
    2750:	ldmpl	fp, {r0, r1, r3, r4, r5, r6, sl, lr}
    2754:			; <UNDEFINED> instruction: 0xb12b681b
    2758:	tstlt	ip, r1
    275c:	stmib	sl!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    2760:	bl	ff140764 <setlogin@@Base+0xff13495c>
    2764:	andscs	r4, r0, #81920	; 0x14000
    2768:	ldrbtmi	r2, [r9], #-2
    276c:	ldmib	ip!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    2770:	svclt	0x0000e7f2
    2774:	andeq	lr, r1, r0, lsr #12
    2778:	andeq	r0, r0, ip, lsr r2
    277c:	andeq	fp, r0, r6, lsl #22
    2780:			; <UNDEFINED> instruction: 0x460ab570
    2784:	movwcs	r4, #1540	; 0x604
    2788:	ldmib	r0, {r0, r2, r3, r9, sl, lr}^
    278c:			; <UNDEFINED> instruction: 0xf00b0100
    2790:	vmovmi.16	d28[0], pc
    2794:			; <UNDEFINED> instruction: 0x4602447e
    2798:	andcs	r4, r0, fp, lsl #12
    279c:	movwcs	lr, #2500	; 0x9c4
    27a0:			; <UNDEFINED> instruction: 0xf88af003
    27a4:	ldrbtmi	r4, [fp], #-2824	; 0xfffff4f8
    27a8:	movwcs	lr, #2515	; 0x9d3
    27ac:			; <UNDEFINED> instruction: 0xf1732a01
    27b0:	blle	1033b8 <setlogin@@Base+0xf75b0>
    27b4:	strtmi	r4, [r9], -r5, lsl #22
    27b8:			; <UNDEFINED> instruction: 0xf00558f0
    27bc:	andcs	pc, r0, r3, asr #20
    27c0:	svclt	0x0000bd70
    27c4:	ldrdeq	lr, [r1], -ip
    27c8:	ldrdeq	lr, [r1], -r6
    27cc:	andeq	r0, r0, r0, lsl #5
    27d0:			; <UNDEFINED> instruction: 0x460db570
    27d4:	ldmdavs	r1, {r1, r7, ip, sp, pc}
    27d8:			; <UNDEFINED> instruction: 0x46064614
    27dc:	tstcc	r1, r1, lsl #4
    27e0:	andcs	r6, r4, #40, 16	; 0x280000
    27e4:	stmdb	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    27e8:	cmplt	r0, r1
    27ec:	strmi	r6, [r3], -r2, lsr #16
    27f0:			; <UNDEFINED> instruction: 0xf8432000
    27f4:	stmdavs	r2!, {r1, r5, sp, lr}
    27f8:	eorvs	r3, r2, r1, lsl #4
    27fc:	andlt	r6, r2, fp, lsr #32
    2800:			; <UNDEFINED> instruction: 0xf04fbd70
    2804:	udf	#41743	; 0xa30f
    2808:	mvnsmi	lr, #737280	; 0xb4000
    280c:	stmdavs	sl, {r0, r2, r3, r9, sl, lr}
    2810:	ldmdbmi	r2, {r0, r2, r7, ip, sp, pc}^
    2814:	ldrbtmi	r4, [r9], #-2898	; 0xfffff4ae
    2818:	ldmdavs	fp, {r0, r1, r3, r6, r7, fp, ip, lr}
    281c:			; <UNDEFINED> instruction: 0xf04f9303
    2820:	blmi	1403428 <setlogin@@Base+0x13f7620>
    2824:	bcs	13a18 <setlogin@@Base+0x7c10>
    2828:	bmi	13f6a20 <setlogin@@Base+0x13eac18>
    282c:	ldrbtmi	r4, [sl], #-1542	; 0xfffff9fa
    2830:	bcs	1ca80 <setlogin@@Base+0x10c78>
    2834:			; <UNDEFINED> instruction: 0xf7ffd141
    2838:	mcrrne	10, 12, lr, r3, cr8
    283c:			; <UNDEFINED> instruction: 0xf0004604
    2840:	stmdacs	r0, {r1, r7, pc}
    2844:	blmi	1276a1c <setlogin@@Base+0x126ac14>
    2848:	stmdbmi	r9, {r0, r1, r2, r3, sp}^
    284c:	ldrbtmi	sl, [fp], #-3330	; 0xfffff2fe
    2850:	tstls	r1, r9, ror r4
    2854:			; <UNDEFINED> instruction: 0xf006601c
    2858:	stmdbls	r1, {r0, r3, r4, r7, sl, fp, ip, sp, lr, pc}
    285c:			; <UNDEFINED> instruction: 0xf0062002
    2860:	stmdbls	r1, {r0, r2, r4, r7, sl, fp, ip, sp, lr, pc}
    2864:			; <UNDEFINED> instruction: 0xf0062001
    2868:	mul	r4, r1, ip
    286c:	bl	12c0870 <setlogin@@Base+0x12b4a68>
    2870:	stmdacs	r4, {fp, sp, lr}
    2874:	andcs	sp, r0, #-1073741805	; 0xc0000013
    2878:	strtmi	r4, [r0], -r9, lsr #12
    287c:	ldmib	lr!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    2880:	rscsle	r3, r3, r1
    2884:			; <UNDEFINED> instruction: 0xf04f9b02
    2888:	bmi	e8f08c <setlogin@@Base+0xe83284>
    288c:	andcs	pc, r7, r3, asr #7
    2890:	cmneq	pc, #3	; <UNPREDICTABLE>
    2894:	ldrbtmi	r4, [sl], #-771	; 0xfffffcfd
    2898:	andcs	fp, r1, r4, lsl pc
    289c:	andsvs	r2, r1, r0
    28a0:	stc2	0, cr15, [r0], {11}
    28a4:	blmi	b9517c <setlogin@@Base+0xb89374>
    28a8:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    28ac:	blls	dc91c <setlogin@@Base+0xd0b14>
    28b0:	teqle	fp, sl, asr r0
    28b4:	pop	{r0, r2, ip, sp, pc}
    28b8:	ldcmi	3, cr8, [r0], #-960	; 0xfffffc40
    28bc:	ldmdami	r0!, {r1, r3, r9, sp}
    28c0:	ldmdbpl	pc, {r0, r8, sp}	; <UNPREDICTABLE>
    28c4:	ldmdavs	fp!, {r3, r4, r5, r6, sl, lr}
    28c8:	stmib	r4!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    28cc:	mvnlt	r6, fp, lsr #16
    28d0:	ldrsbtls	pc, [r0], pc	; <UNPREDICTABLE>
    28d4:			; <UNDEFINED> instruction: 0xf8df2400
    28d8:	ldrbtmi	r8, [r9], #176	; 0xb0
    28dc:	strd	r4, [r8], -r8
    28e0:			; <UNDEFINED> instruction: 0x4641681a
    28e4:	strcc	r6, [r1], #-2104	; 0xfffff7c8
    28e8:	cdp2	0, 15, cr15, cr8, cr6, {0}
    28ec:	addsmi	r6, ip, #2818048	; 0x2b0000
    28f0:	ldmdavs	r3!, {r2, r3, r9, ip, lr, pc}
    28f4:	rscsle	r2, r3, r0, lsl #24
    28f8:	eorcs	pc, r4, r3, asr r8	; <UNPREDICTABLE>
    28fc:	ldmdavs	r8!, {r0, r3, r6, r9, sl, lr}
    2900:			; <UNDEFINED> instruction: 0xf0063401
    2904:	stmdavs	fp!, {r0, r1, r3, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}
    2908:	mvnsle	r4, #156, 4	; 0xc0000009
    290c:	andcs	r6, sl, r9, lsr r8
    2910:	b	2c0914 <setlogin@@Base+0x2b4b0c>
    2914:			; <UNDEFINED> instruction: 0xf7ffe78f
    2918:			; <UNDEFINED> instruction: 0x4601e810
    291c:	ldrbtmi	r4, [r8], #-2075	; 0xfffff7e5
    2920:			; <UNDEFINED> instruction: 0xf84af003
    2924:	ldrbtmi	r4, [r8], #-2074	; 0xfffff7e6
    2928:			; <UNDEFINED> instruction: 0xf846f003
    292c:	stmib	r4!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2930:	stmdavs	r8, {r0, r4, r5, fp, sp, lr}
    2934:	ldm	r4, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    2938:	ldmdavs	r8, {r0, r1, r4, r5, fp, sp, lr}
    293c:	ldm	r6, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    2940:			; <UNDEFINED> instruction: 0xf7ff2001
    2944:			; <UNDEFINED> instruction: 0xf7ffead4
    2948:	stmdavs	r0, {r1, r2, r3, r4, r6, r7, r9, fp, sp, lr, pc}
    294c:	svc	0x00f4f7fe
    2950:	ldmdami	r0, {r0, r9, sl, lr}
    2954:			; <UNDEFINED> instruction: 0xf0034478
    2958:	svclt	0x0000f82f
    295c:	andeq	lr, r1, sl, asr r5
    2960:	andeq	r0, r0, ip, asr #4
    2964:	andeq	lr, r1, ip, asr #10
    2968:	andeq	lr, r1, lr, asr #16
    296c:			; <UNDEFINED> instruction: 0x0001e7b6
    2970:			; <UNDEFINED> instruction: 0xfffffec1
    2974:	andeq	lr, r1, lr, ror #14
    2978:	andeq	lr, r1, r8, asr #9
    297c:	andeq	r0, r0, ip, ror #4
    2980:	ldrdeq	fp, [r0], -ip
    2984:	ldrdeq	fp, [r0], -r2
    2988:	andeq	sp, r0, ip, lsl #12
    298c:	andeq	fp, r0, lr, lsr #19
    2990:	andeq	fp, r0, lr, asr r9
    2994:	andeq	fp, r0, r0, ror #18
    2998:			; <UNDEFINED> instruction: 0x4601b530
    299c:	addlt	r4, r3, r7, lsl ip
    29a0:	ldrbtmi	r4, [ip], #-2583	; 0xfffff5e9
    29a4:	ldrbtmi	r4, [sl], #-2839	; 0xfffff4e9
    29a8:	ldmpl	r3, {r5, fp, sp, lr}^
    29ac:	ldmdavs	fp, {r0, fp, sp}
    29b0:			; <UNDEFINED> instruction: 0xf04f9301
    29b4:	stcle	3, cr0, [r9], {-0}
    29b8:	blmi	49520c <setlogin@@Base+0x489404>
    29bc:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    29c0:	blls	5ca30 <setlogin@@Base+0x50c28>
    29c4:	tstle	r7, sl, asr r0
    29c8:	ldclt	0, cr11, [r0, #-12]!
    29cc:	b	ec09d0 <setlogin@@Base+0xeb4bc8>
    29d0:	and	r4, r4, sp, ror #12
    29d4:	b	fe5c09d8 <setlogin@@Base+0xfe5b4bd0>
    29d8:	blcs	11c9ec <setlogin@@Base+0x110be4>
    29dc:	stmdavs	r0!, {r1, r2, r8, ip, lr, pc}
    29e0:	strtmi	r2, [r9], -r2, lsl #4
    29e4:	stmdb	sl, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    29e8:	rscsle	r3, r3, r1
    29ec:	stmib	ip, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    29f0:			; <UNDEFINED> instruction: 0xf7ff2113
    29f4:	ldrb	lr, [pc, r8, lsr #20]
    29f8:	ldmdb	lr!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    29fc:	andeq	lr, r1, r2, ror #12
    2a00:	andeq	lr, r1, sl, asr #7
    2a04:	andeq	r0, r0, ip, asr #4
    2a08:			; <UNDEFINED> instruction: 0x0001e3b4
    2a0c:	addlt	fp, r2, r0, ror r5
    2a10:	strmi	r4, [r1], -lr, lsl #12
    2a14:	ldrmi	r9, [r4], -r6, lsl #26
    2a18:	ldrtmi	r4, [r2], -sl, lsl #16
    2a1c:	strcc	lr, [r0, #-2509]	; 0xfffff633
    2a20:			; <UNDEFINED> instruction: 0x46234478
    2a24:			; <UNDEFINED> instruction: 0xf8e2f006
    2a28:	stmdblt	r8, {r2, r9, sl, lr}
    2a2c:	tstlt	r3, fp, lsr #16
    2a30:	andlt	r4, r2, r0, lsr #12
    2a34:	stmdami	r4, {r4, r5, r6, r8, sl, fp, ip, sp, pc}
    2a38:			; <UNDEFINED> instruction: 0xf0034478
    2a3c:	eorvs	pc, r8, sp, lsl #24
    2a40:	svclt	0x0000e7f6
    2a44:	andeq	fp, r0, r8, asr #17
    2a48:			; <UNDEFINED> instruction: 0x0000b8b4
    2a4c:	svcmi	0x00f0e92d
    2a50:	stcmi	6, cr4, [r4], {21}
    2a54:	bmi	fe1142d8 <setlogin@@Base+0xfe1084d0>
    2a58:	blmi	fe114460 <setlogin@@Base+0xfe108658>
    2a5c:	ldrbtmi	r4, [sl], #-1148	; 0xfffffb84
    2a60:	stmiavs	r0!, {r0, r2, r3, r7, ip, sp, pc}
    2a64:	ldmpl	r3, {r1, r2, r3, r9, sl, lr}^
    2a68:	andlt	pc, r4, #14614528	; 0xdf0000
    2a6c:	ldrsbls	pc, [r8], #-141	; 0xffffff73	; <UNPREDICTABLE>
    2a70:	movwls	r6, #47131	; 0xb81b
    2a74:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    2a78:			; <UNDEFINED> instruction: 0xf8dd44fb
    2a7c:	orrlt	sl, r0, ip, asr r0
    2a80:	blmi	1f55478 <setlogin@@Base+0x1f49670>
    2a84:	andne	pc, r2, fp, asr r8	; <UNPREDICTABLE>
    2a88:	ldmdavs	sl, {r0, r1, r3, r4, r5, r6, sl, lr}
    2a8c:	stmdavs	r8, {r0, r1, r4, r5, r9, sl, lr}
    2a90:	rsble	r2, r2, r0, lsl #28
    2a94:	stmib	sp, {r0, r3, r4, r5, r6, r8, fp, lr}^
    2a98:	strbmi	r3, [r3], -r0, lsl #14
    2a9c:			; <UNDEFINED> instruction: 0xf0064479
    2aa0:	stclne	14, cr15, [sl], #-116	; 0xffffff8c
    2aa4:	blmi	1db6eb4 <setlogin@@Base+0x1dab0ac>
    2aa8:	ldmdavs	sp, {r0, r1, r3, r4, r5, r6, sl, lr}^
    2aac:			; <UNDEFINED> instruction: 0xf7ffa809
    2ab0:	strdcc	lr, [r1], -r4
    2ab4:	stmdage	r5, {r2, r4, r6, ip, lr, pc}
    2ab8:	stmib	lr!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2abc:			; <UNDEFINED> instruction: 0xf0003001
    2ac0:	stmdage	r7, {r1, r2, r6, r7, pc}
    2ac4:	stmib	r8!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2ac8:			; <UNDEFINED> instruction: 0xf0003001
    2acc:	stclmi	0, cr8, [sp], #-728	; 0xfffffd28
    2ad0:	ldrbtmi	r9, [ip], #-2057	; 0xfffff7f7
    2ad4:	ldm	r8, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2ad8:			; <UNDEFINED> instruction: 0xf7ff980a
    2adc:			; <UNDEFINED> instruction: 0x4621e8d6
    2ae0:	strls	r2, [r3], #-20	; 0xffffffec
    2ae4:	blx	14beb06 <setlogin@@Base+0x14b2cfe>
    2ae8:	andscs	r9, r5, r3, lsl #18
    2aec:	blx	13beb0e <setlogin@@Base+0x13b2d06>
    2af0:	andscs	r9, r6, r3, lsl #18
    2af4:	blx	12beb16 <setlogin@@Base+0x12b2d0e>
    2af8:	stmdb	r6!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2afc:	ldrbtmi	r4, [fp], #-2914	; 0xfffff49e
    2b00:	andsvs	r4, r8, r4, lsl #12
    2b04:	suble	r2, r1, r0, lsl #16
    2b08:	eorsle	r3, r5, r1, lsl #8
    2b0c:			; <UNDEFINED> instruction: 0xf7ff9805
    2b10:	blls	1bce08 <setlogin@@Base+0x1b1000>
    2b14:	mrrcmi	8, 0, r9, sp, cr8
    2b18:	andcc	pc, r0, sl, asr #17
    2b1c:	ldm	r4!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    2b20:	ldrbtmi	r9, [ip], #-2823	; 0xfffff4f9
    2b24:	strls	r2, [r3], #-15
    2b28:	andcc	pc, r0, r9, asr #17
    2b2c:			; <UNDEFINED> instruction: 0xf0064621
    2b30:	stmdbls	r3, {r0, r2, r3, r5, r8, r9, fp, ip, sp, lr, pc}
    2b34:			; <UNDEFINED> instruction: 0xf0062002
    2b38:	stmdbls	r3, {r0, r3, r5, r8, r9, fp, ip, sp, lr, pc}
    2b3c:			; <UNDEFINED> instruction: 0xf0062001
    2b40:	bmi	15017dc <setlogin@@Base+0x14f59d4>
    2b44:	ldrbtmi	r4, [sl], #-2889	; 0xfffff4b7
    2b48:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    2b4c:	subsmi	r9, sl, fp, lsl #22
    2b50:	andcs	sp, r0, r0, lsl r1
    2b54:	pop	{r0, r2, r3, ip, sp, pc}
    2b58:	blmi	13a6b20 <setlogin@@Base+0x139ad18>
    2b5c:			; <UNDEFINED> instruction: 0xe799447b
    2b60:	ldmib	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2b64:			; <UNDEFINED> instruction: 0xf7fe6800
    2b68:	strmi	lr, [r1], -r8, ror #29
    2b6c:	ldrbtmi	r4, [r8], #-2122	; 0xfffff7b6
    2b70:			; <UNDEFINED> instruction: 0xff22f002
    2b74:	stmia	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2b78:	stmib	r4, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2b7c:			; <UNDEFINED> instruction: 0xf7fe6800
    2b80:			; <UNDEFINED> instruction: 0x4601eedc
    2b84:	ldrbtmi	r4, [r8], #-2117	; 0xfffff7bb
    2b88:			; <UNDEFINED> instruction: 0xff16f002
    2b8c:			; <UNDEFINED> instruction: 0xf7ff9806
    2b90:	stmdals	r7, {r2, r3, r4, r5, r6, fp, sp, lr, pc}
    2b94:	ldmda	r8!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2b98:	stmdals	r5, {r0, r5, r9, sl, lr}
    2b9c:	stmia	r2!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2ba0:	stmdals	r8, {r0, r8, sp}
    2ba4:	ldm	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2ba8:			; <UNDEFINED> instruction: 0xf7ff9805
    2bac:	stmdals	r8, {r1, r2, r3, r5, r6, fp, sp, lr, pc}
    2bb0:	stmda	sl!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2bb4:	blmi	ed4ca4 <setlogin@@Base+0xec8e9c>
    2bb8:	bmi	ed4444 <setlogin@@Base+0xec863c>
    2bbc:	andmi	pc, r0, fp, asr r8	; <UNPREDICTABLE>
    2bc0:	ldrbtmi	r4, [sl], #-1147	; 0xfffffb85
    2bc4:			; <UNDEFINED> instruction: 0x4620681b
    2bc8:	blx	fe8bebe0 <setlogin@@Base+0xfe8b2dd8>
    2bcc:	andle	r1, sl, fp, ror #24
    2bd0:			; <UNDEFINED> instruction: 0x46204936
    2bd4:			; <UNDEFINED> instruction: 0xf0044479
    2bd8:	ldmdbmi	r5!, {r0, r2, r3, r6, r9, fp, ip, sp, lr, pc}
    2bdc:	strtmi	r4, [r0], -sl, lsr #12
    2be0:			; <UNDEFINED> instruction: 0xf0044479
    2be4:	cmplt	r6, r7, asr #20	; <UNPREDICTABLE>
    2be8:			; <UNDEFINED> instruction: 0x46204932
    2bec:			; <UNDEFINED> instruction: 0xf0044479
    2bf0:	ldmdbmi	r1!, {r0, r6, r9, fp, ip, sp, lr, pc}
    2bf4:			; <UNDEFINED> instruction: 0x46204632
    2bf8:			; <UNDEFINED> instruction: 0xf0044479
    2bfc:			; <UNDEFINED> instruction: 0x4e2ffa3b
    2c00:	stmdbmi	pc!, {r5, r9, sl, lr}	; <UNPREDICTABLE>
    2c04:	cfstrsmi	mvf4, [pc, #-504]!	; 2a14 <fputs@plt+0xae0>
    2c08:			; <UNDEFINED> instruction: 0xf0044479
    2c0c:	ldrbtmi	pc, [sp], #-2611	; 0xfffff5cd	; <UNPREDICTABLE>
    2c10:	ldrtmi	r4, [r1], -r2, asr #12
    2c14:	strls	r4, [r3], -r0, lsr #12
    2c18:	blx	b3ec30 <setlogin@@Base+0xb32e28>
    2c1c:	stmdbls	r3, {r1, r3, r4, r5, r9, sl, lr}
    2c20:			; <UNDEFINED> instruction: 0xf0044620
    2c24:	stmdavs	r1!, {r0, r1, r2, r5, r9, fp, ip, sp, lr, pc}
    2c28:			; <UNDEFINED> instruction: 0xf7fe6828
    2c2c:	stmdavs	r8!, {r1, r3, r4, r8, r9, sl, fp, sp, lr, pc}
    2c30:	svc	0x001cf7fe
    2c34:			; <UNDEFINED> instruction: 0xf7ff2001
    2c38:			; <UNDEFINED> instruction: 0xf7ffe95a
    2c3c:	stmdavs	r0, {r2, r5, r6, r8, fp, sp, lr, pc}
    2c40:	mrc	7, 3, APSR_nzcv, cr10, cr14, {7}
    2c44:	stmdami	r0!, {r0, r9, sl, lr}
    2c48:			; <UNDEFINED> instruction: 0xf0024478
    2c4c:			; <UNDEFINED> instruction: 0xf7fffeb5
    2c50:	stmdavs	r0, {r1, r3, r4, r6, r8, fp, sp, lr, pc}
    2c54:	mrc	7, 3, APSR_nzcv, cr0, cr14, {7}
    2c58:	ldmdami	ip, {r0, r9, sl, lr}
    2c5c:			; <UNDEFINED> instruction: 0xf0024478
    2c60:	svclt	0x0000feab
    2c64:	andeq	lr, r1, r0, lsr #12
    2c68:	andeq	lr, r1, r2, lsl r3
    2c6c:	andeq	r0, r0, ip, asr #4
    2c70:	strdeq	lr, [r1], -r8
    2c74:	andeq	r0, r0, ip, ror #4
    2c78:	andeq	lr, r1, r8, lsl #11
    2c7c:	andeq	fp, r0, r4, ror #16
    2c80:	andeq	lr, r1, ip, asr r5
    2c84:			; <UNDEFINED> instruction: 0xfffffec3
    2c88:	andeq	lr, r1, r6, lsl #10
    2c8c:			; <UNDEFINED> instruction: 0xfffffbef
    2c90:	andeq	lr, r1, sl, lsr #4
    2c94:	muleq	r0, r4, r7
    2c98:	andeq	fp, r0, r6, asr #15
    2c9c:	andeq	fp, r0, sl, asr #15
    2ca0:	andeq	r0, r0, r0, ror r2
    2ca4:	andeq	lr, r1, r0, asr r4
    2ca8:	andeq	ip, r0, r6, ror #3
    2cac:	andeq	fp, r0, ip, ror #14
    2cb0:	andeq	fp, r0, r4, ror #14
    2cb4:	andeq	fp, r0, ip, asr r7
    2cb8:			; <UNDEFINED> instruction: 0x0000c1b0
    2cbc:	andeq	ip, r0, r4, lsr #3
    2cc0:	andeq	fp, r0, r4, asr #14
    2cc4:	andeq	lr, r1, r2, lsl #8
    2cc8:	andeq	fp, r0, ip, ror #13
    2ccc:	ldrdeq	fp, [r0], -r8
    2cd0:	mvnsmi	lr, #737280	; 0xb4000
    2cd4:	stclmi	6, cr4, [r2], #-84	; 0xffffffac
    2cd8:	bmi	1894740 <setlogin@@Base+0x1888938>
    2cdc:	blmi	1894500 <setlogin@@Base+0x18886f8>
    2ce0:	ldrbtmi	r4, [sl], #-1148	; 0xfffffb84
    2ce4:	ldrdls	pc, [r4, pc]
    2ce8:	addlt	r6, r7, r0, lsr #17
    2cec:			; <UNDEFINED> instruction: 0x460e58d3
    2cf0:	ldmdavs	fp, {r0, r3, r4, r5, r6, r7, sl, lr}
    2cf4:			; <UNDEFINED> instruction: 0xf04f9305
    2cf8:	orrlt	r0, r0, r0, lsl #6
    2cfc:	blmi	1755674 <setlogin@@Base+0x174986c>
    2d00:	andne	pc, r2, r9, asr r8	; <UNPREDICTABLE>
    2d04:	ldmdavs	sl, {r0, r1, r3, r4, r5, r6, sl, lr}
    2d08:	stmdavs	r8, {r0, r1, r4, r5, r9, sl, lr}
    2d0c:	rsbsle	r2, r1, r0, lsl #28
    2d10:	stmib	sp, {r0, r3, r4, r6, r8, fp, lr}^
    2d14:	ldrtmi	r3, [fp], -r0, lsl #16
    2d18:			; <UNDEFINED> instruction: 0xf0064479
    2d1c:	stclne	12, cr15, [r9], #-892	; 0xfffffc84
    2d20:			; <UNDEFINED> instruction: 0xf7ffd020
    2d24:			; <UNDEFINED> instruction: 0x4604e852
    2d28:	rsbsle	r2, r9, r0, lsl #16
    2d2c:	rsble	r1, fp, r3, ror #24
    2d30:	and	sl, r4, r4, lsl #26
    2d34:	stmia	r6!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2d38:	stmdacs	r4, {fp, sp, lr}
    2d3c:	andcs	sp, r0, #1073741847	; 0x40000017
    2d40:	strtmi	r4, [r0], -r9, lsr #12
    2d44:	svc	0x005af7fe
    2d48:	rscsle	r3, r3, r1
    2d4c:	blmi	1195680 <setlogin@@Base+0x1189878>
    2d50:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    2d54:	blls	15cdc4 <setlogin@@Base+0x150fbc>
    2d58:	cmple	pc, sl, asr r0	; <UNPREDICTABLE>
    2d5c:	andlt	r2, r7, r0
    2d60:	mvnshi	lr, #12386304	; 0xbd0000
    2d64:	ldrbtmi	r4, [fp], #-2886	; 0xfffff4ba
    2d68:			; <UNDEFINED> instruction: 0xf7ff685d
    2d6c:	strmi	lr, [r4], -lr, lsr #16
    2d70:	bicsle	r2, fp, r0, lsl #16
    2d74:	stmdals	lr, {r0, r9, sl, lr}
    2d78:	svc	0x00f4f7fe
    2d7c:	stmdals	pc, {r0, r8, sp}	; <UNPREDICTABLE>
    2d80:	svc	0x00f0f7fe
    2d84:	blmi	1014e88 <setlogin@@Base+0x1009080>
    2d88:	bmi	1014614 <setlogin@@Base+0x100880c>
    2d8c:	andmi	pc, r0, r9, asr r8	; <UNPREDICTABLE>
    2d90:	ldrbtmi	r4, [sl], #-1147	; 0xfffffb85
    2d94:			; <UNDEFINED> instruction: 0x4620681b
    2d98:			; <UNDEFINED> instruction: 0xf9baf004
    2d9c:	cmple	r3, sl, ror #24
    2da0:	ldmdbmi	fp!, {r1, r2, r4, r6, r8, ip, sp, pc}
    2da4:	ldrbtmi	r4, [r9], #-1568	; 0xfffff9e0
    2da8:			; <UNDEFINED> instruction: 0xf964f004
    2dac:			; <UNDEFINED> instruction: 0x46324939
    2db0:	ldrbtmi	r4, [r9], #-1568	; 0xfffff9e0
    2db4:			; <UNDEFINED> instruction: 0xf95ef004
    2db8:			; <UNDEFINED> instruction: 0x46204e37
    2dbc:	ldrbtmi	r4, [lr], #-2359	; 0xfffff6c9
    2dc0:	ldrbtmi	r4, [r9], #-3383	; 0xfffff2c9
    2dc4:			; <UNDEFINED> instruction: 0xf956f004
    2dc8:			; <UNDEFINED> instruction: 0x463a447d
    2dcc:			; <UNDEFINED> instruction: 0x46204631
    2dd0:			; <UNDEFINED> instruction: 0xf0049603
    2dd4:	strbmi	pc, [r2], -pc, asr #18	; <UNPREDICTABLE>
    2dd8:	strtmi	r9, [r0], -r3, lsl #18
    2ddc:			; <UNDEFINED> instruction: 0xf94af004
    2de0:	stmdavs	r8!, {r0, r5, fp, sp, lr}
    2de4:	mrc	7, 1, APSR_nzcv, cr12, cr14, {7}
    2de8:			; <UNDEFINED> instruction: 0xf7fe6828
    2dec:	andcs	lr, r1, r0, asr #28
    2df0:	ldmda	ip!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2df4:	ldrbtmi	r4, [fp], #-2859	; 0xfffff4d5
    2df8:			; <UNDEFINED> instruction: 0xf7fee78a
    2dfc:			; <UNDEFINED> instruction: 0x4601ed9e
    2e00:	ldrbtmi	r4, [r8], #-2089	; 0xfffff7d7
    2e04:	ldc2l	0, cr15, [r8, #8]
    2e08:	ldmda	ip!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2e0c:			; <UNDEFINED> instruction: 0xf7fe6800
    2e10:			; <UNDEFINED> instruction: 0x4601ed94
    2e14:	ldrbtmi	r4, [r8], #-2085	; 0xfffff7db
    2e18:	stc2l	0, cr15, [lr, #8]
    2e1c:	svc	0x006cf7fe
    2e20:	stmdals	lr, {r0, r5, r9, sl, lr}
    2e24:	svc	0x009ef7fe
    2e28:	stmdals	pc, {r0, r8, sp}	; <UNPREDICTABLE>
    2e2c:	svc	0x009af7fe
    2e30:	blmi	7d4e88 <setlogin@@Base+0x7c9080>
    2e34:	bmi	7d46c0 <setlogin@@Base+0x7c88b8>
    2e38:	andmi	pc, r0, r9, asr r8	; <UNPREDICTABLE>
    2e3c:	ldrbtmi	r4, [sl], #-1147	; 0xfffffb85
    2e40:			; <UNDEFINED> instruction: 0x4620681b
    2e44:			; <UNDEFINED> instruction: 0xf964f004
    2e48:			; <UNDEFINED> instruction: 0x4620491b
    2e4c:			; <UNDEFINED> instruction: 0xf0044479
    2e50:	ldmdbmi	sl, {r0, r4, r8, fp, ip, sp, lr, pc}
    2e54:	strtmi	r4, [r0], -sl, lsr #12
    2e58:			; <UNDEFINED> instruction: 0xf0044479
    2e5c:	ldr	pc, [pc, fp, lsl #18]
    2e60:	muleq	r1, ip, r3
    2e64:	andeq	lr, r1, lr, lsl #1
    2e68:	andeq	r0, r0, ip, asr #4
    2e6c:	andeq	lr, r1, r0, lsl #1
    2e70:	andeq	r0, r0, ip, ror #4
    2e74:	andeq	lr, r1, ip, lsl #6
    2e78:	andeq	fp, r0, r4, asr #12
    2e7c:	andeq	lr, r1, r0, lsr #32
    2e80:	muleq	r1, lr, r2
    2e84:	andeq	r0, r0, r0, ror r2
    2e88:	andeq	lr, r1, r0, lsl #5
    2e8c:	andeq	ip, r0, r6, lsl r0
    2e90:	andeq	fp, r0, r2, lsr #11
    2e94:	strdeq	fp, [r0], -r6
    2e98:	andeq	fp, r0, sl, ror #31
    2e9c:	andeq	fp, r0, sl, lsl #11
    2ea0:	andeq	lr, r1, r8, asr #4
    2ea4:	strdeq	fp, [r0], -sl
    2ea8:	muleq	r0, r2, r5
    2eac:	andeq	fp, r0, sl, lsr r5
    2eb0:	ldrdeq	lr, [r1], -r4
    2eb4:	andeq	fp, r0, sl, ror #30
    2eb8:	strdeq	fp, [r0], -r4
    2ebc:	andeq	fp, r0, ip, ror #9
    2ec0:	bmi	11953dc <setlogin@@Base+0x11895d4>
    2ec4:	svcmi	0x00f0e92d
    2ec8:			; <UNDEFINED> instruction: 0xf5ad4479
    2ecc:			; <UNDEFINED> instruction: 0xf8df5d80
    2ed0:	addlt	r9, r5, r0, lsl r1
    2ed4:			; <UNDEFINED> instruction: 0xf50d588a
    2ed8:	stmdami	r2, {r7, r8, r9, ip, lr}^
    2edc:	ldmdavs	r2, {r1, r6, r8, fp, lr}
    2ee0:			; <UNDEFINED> instruction: 0xf04f60da
    2ee4:	ldrbtmi	r0, [r9], #512	; 0x200
    2ee8:	ldmdaeq	r0, {r0, r2, r3, r8, ip, sp, lr, pc}
    2eec:			; <UNDEFINED> instruction: 0xf1a8330c
    2ef0:			; <UNDEFINED> instruction: 0xf8590205
    2ef4:	movwcs	r6, #4096	; 0x1000
    2ef8:	andpl	pc, r1, r9, asr r8	; <UNPREDICTABLE>
    2efc:			; <UNDEFINED> instruction: 0x46286831
    2f00:	blx	1abef14 <setlogin@@Base+0x1ab310c>
    2f04:	cmple	pc, r1, lsl #16
    2f08:	stceq	8, cr15, [r5], {24}
    2f0c:	mcrne	3, 2, fp, cr3, cr8, {4}
    2f10:	bleq	2bf34c <setlogin@@Base+0x2b3544>
    2f14:			; <UNDEFINED> instruction: 0xf1a82b01
    2f18:	svclt	0x008c0a04
    2f1c:	streq	pc, [r3], #-424	; 0xfffffe58
    2f20:	streq	pc, [r4], #-424	; 0xfffffe58
    2f24:	ldrbvc	pc, [fp, r8, lsl #4]!	; <UNPREDICTABLE>
    2f28:			; <UNDEFINED> instruction: 0xf808bf88
    2f2c:	ldmdavs	r1!, {r2, sl, fp}
    2f30:	ldrbmi	r2, [sl], -r1, lsl #6
    2f34:			; <UNDEFINED> instruction: 0xf0034628
    2f38:	stmdacs	r1, {r0, r1, r2, r3, r6, r9, fp, ip, sp, lr, pc}
    2f3c:			; <UNDEFINED> instruction: 0xf89bd144
    2f40:			; <UNDEFINED> instruction: 0xf8043000
    2f44:	blcs	291b50 <setlogin@@Base+0x285d48>
    2f48:	adcsmi	fp, ip, #24, 30	; 0x60
    2f4c:	blmi	9f7f10 <setlogin@@Base+0x9ec108>
    2f50:	andcc	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    2f54:	mvnslt	r6, sl, lsl r8
    2f58:	tstcs	r1, r5, lsr #22
    2f5c:	andmi	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    2f60:			; <UNDEFINED> instruction: 0xf00a6820
    2f64:			; <UNDEFINED> instruction: 0xf818ffb9
    2f68:	blcs	51f84 <setlogin@@Base+0x4617c>
    2f6c:	svclt	0x00086020
    2f70:	rscscc	pc, pc, pc, asr #32
    2f74:	ldmdbmi	pc, {r0, r2, r3, r5, r8, ip, lr, pc}	; <UNPREDICTABLE>
    2f78:	orrpl	pc, r0, #54525952	; 0x3400000
    2f7c:	movwcc	r4, #51735	; 0xca17
    2f80:	stmpl	sl, {r0, r3, r4, r5, r6, sl, lr}
    2f84:	ldmdavs	sl, {r0, r4, fp, sp, lr}
    2f88:	qsuble	r4, r1, r0
    2f8c:	cfstr32pl	mvfx15, [r0, #52]	; 0x34
    2f90:	pop	{r0, r2, ip, sp, pc}
    2f94:			; <UNDEFINED> instruction: 0xf60d8ff0
    2f98:	blmi	5c43d0 <setlogin@@Base+0x5b85c8>
    2f9c:	tstvs	r0, pc, asr #8	; <UNPREDICTABLE>
    2fa0:	andge	pc, r0, sp, asr #17
    2fa4:			; <UNDEFINED> instruction: 0xf804447b
    2fa8:	strtmi	r2, [r8], -r1, lsl #24
    2fac:			; <UNDEFINED> instruction: 0xf0064c13
    2fb0:	strtmi	pc, [r8], -r3, lsr #22
    2fb4:	ldcl	7, cr15, [sl, #1016]	; 0x3f8
    2fb8:	tstcs	r2, sl, lsr #12
    2fbc:			; <UNDEFINED> instruction: 0xf8594603
    2fc0:			; <UNDEFINED> instruction: 0xf0030004
    2fc4:	strb	pc, [r7, r9, lsl #20]	; <UNPREDICTABLE>
    2fc8:			; <UNDEFINED> instruction: 0xf7ff2000
    2fcc:			; <UNDEFINED> instruction: 0xf7fefbbd
    2fd0:	mulcs	r1, r4, lr
    2fd4:	svc	0x008af7fe
    2fd8:	andeq	sp, r1, r8, lsr #29
    2fdc:	andeq	r0, r0, ip, asr #4
    2fe0:	andeq	sp, r1, sl, lsl #29
    2fe4:	andeq	r0, r0, r4, lsl #4
    2fe8:	andeq	r0, r0, r8, lsr #4
    2fec:	andeq	r0, r0, ip, lsr r2
    2ff0:	andeq	r0, r0, r4, ror #4
    2ff4:	strdeq	sp, [r1], -r0
    2ff8:	andeq	fp, r0, ip, lsl #7
    2ffc:	andeq	r0, r0, r0, lsr r2
    3000:	ldrbmi	lr, [r0, sp, lsr #18]!
    3004:	ldmdavs	ip, {r1, r2, r4, r7, ip, sp, pc}
    3008:	stcmi	6, cr4, [sp, #-576]!	; 0xfffffdc0
    300c:	ldmdavs	r2, {r1, r2, r9, sl, fp, sp, pc}
    3010:	b	914a3c <setlogin@@Base+0x908c34>
    3014:	ldrbtmi	r7, [sp], #-1252	; 0xfffffb1c
    3018:	ldrmi	r9, [pc], -r0, lsl #10
    301c:	stmib	sp, {r0, r2, r5, r6, r7, r8, r9, sl, ip}^
    3020:	cfstr32mi	mvfx4, [r8, #-8]!
    3024:	rscvc	lr, r2, #139264	; 0x22000
    3028:	teqcs	ip, #9984	; 0x2700
    302c:			; <UNDEFINED> instruction: 0x17d1447d
    3030:	ldrmi	r4, [r0], -r2, lsl #13
    3034:	smlabteq	r4, sp, r9, lr
    3038:	stmdbpl	ip!, {r0, r9, sp}
    303c:	stcmi	6, cr4, [r3, #-192]!	; 0xffffff40
    3040:	stmdavs	r4!, {r0, r3, r4, r9, sl, lr}
    3044:			; <UNDEFINED> instruction: 0xf04f9415
    3048:	ldrbtmi	r0, [sp], #-1024	; 0xfffffc00
    304c:	mcr	7, 0, pc, cr2, cr14, {7}	; <UNPREDICTABLE>
    3050:	svceq	0x0000f1b9
    3054:			; <UNDEFINED> instruction: 0x4630d116
    3058:			; <UNDEFINED> instruction: 0xf7fe4c1d
    305c:	ldrtmi	lr, [r2], -r8, lsl #27
    3060:			; <UNDEFINED> instruction: 0x46034651
    3064:			; <UNDEFINED> instruction: 0xf0035928
    3068:			; <UNDEFINED> instruction: 0xf7fff9b7
    306c:	bmi	682d18 <setlogin@@Base+0x676f10>
    3070:	ldrbtmi	r4, [sl], #-2837	; 0xfffff4eb
    3074:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    3078:	subsmi	r9, sl, r5, lsl fp
    307c:	andslt	sp, r6, sp, lsl r1
    3080:			; <UNDEFINED> instruction: 0x87f0e8bd
    3084:	tstcs	r1, r4, lsl r8
    3088:	ldrdcc	pc, [r0], -r8
    308c:	stmdapl	ip!, {r1, r3, r4, r5, fp, sp, lr}
    3090:	stmibvc	r3!, {r0, r1, r2, r3, r6, r9, fp, sp, lr, pc}^
    3094:	bfine	r4, r8, #13, #7
    3098:	movwcs	lr, #2509	; 0x9cd
    309c:	stmib	sp, {r0, r1, r2, r3, r9, fp, lr}^
    30a0:	ldrbtmi	r8, [sl], #-2306	; 0xfffff6fe
    30a4:			; <UNDEFINED> instruction: 0xf7fe6820
    30a8:	bmi	37e980 <setlogin@@Base+0x372b78>
    30ac:	ldrtmi	r6, [r3], -r0, lsr #16
    30b0:	tstcs	r1, sl, ror r4
    30b4:	mcr	7, 1, pc, cr12, cr14, {7}	; <UNPREDICTABLE>
    30b8:			; <UNDEFINED> instruction: 0xf7fee7cd
    30bc:	svclt	0x0000ee1e
    30c0:	muleq	r0, r6, r3
    30c4:	andeq	sp, r1, r4, asr #26
    30c8:	andeq	r0, r0, ip, asr #4
    30cc:	andeq	sp, r1, r6, lsr #26
    30d0:	andeq	r0, r0, r0, lsr r2
    30d4:	strdeq	sp, [r1], -lr
    30d8:	andeq	r0, r0, ip, ror #4
    30dc:	andeq	fp, r0, sl, lsl r3
    30e0:	andeq	fp, r0, r8, lsr #6
    30e4:	adcscs	fp, r5, #8, 10	; 0x2000000
    30e8:	tstcs	r1, r6, lsl #22
    30ec:	ldrbtmi	r4, [fp], #-3078	; 0xfffff3fa
    30f0:	ldmdbpl	fp, {r1, r2, fp, lr}
    30f4:	ldmdavs	fp, {r3, r4, r5, r6, sl, lr}
    30f8:	stcl	7, cr15, [ip, #1016]	; 0x3f8
    30fc:			; <UNDEFINED> instruction: 0xf7fe2001
    3100:	svclt	0x0000eef6
    3104:	andeq	sp, r1, r2, lsl #25
    3108:	andeq	r0, r0, ip, ror #4
    310c:	andeq	fp, r0, r0, lsl #6
    3110:	tstcs	r1, pc, lsl #8
    3114:	blmi	c159d8 <setlogin@@Base+0xc09bd0>
    3118:	ldrblt	r4, [r0, #1146]!	; 0x47a
    311c:	ldmpl	r3, {r0, r1, r7, ip, sp, pc}^
    3120:	ldmdavs	fp, {r1, r2, r3, r5, r8, sl, fp, lr}
    3124:			; <UNDEFINED> instruction: 0xf04f9301
    3128:	blmi	b43d30 <setlogin@@Base+0xb37f28>
    312c:	svcmi	0x002d447d
    3130:	stmiapl	ip!, {r3, r9, sl, fp, ip, pc}^
    3134:	stmdavs	r0!, {r0, r1, r2, r3, r4, r5, r6, sl, lr}
    3138:	cdp2	0, 12, cr15, cr14, cr10, {0}
    313c:	strdvs	r6, [r0], -r9	; <UNPREDICTABLE>
    3140:	stcmi	3, cr11, [r9], #-324	; 0xfffffebc
    3144:			; <UNDEFINED> instruction: 0xf7fe2001
    3148:	stmdami	r8!, {r4, r5, r6, r7, r8, sl, fp, sp, lr, pc}
    314c:	andcs	r4, r5, #124, 8	; 0x7c000000
    3150:	ldrbtmi	r2, [r8], #-257	; 0xfffffeff
    3154:			; <UNDEFINED> instruction: 0xf7fe68e3
    3158:	blge	27e7d8 <setlogin@@Base+0x2729d0>
    315c:	tstcs	r1, r2, lsr r6
    3160:	movwls	r6, #2272	; 0x8e0
    3164:	stcl	7, cr15, [r2, #-1016]!	; 0xfffffc08
    3168:	andcs	r6, sl, r1, ror #17
    316c:	ldcl	7, cr15, [ip, #1016]	; 0x3f8
    3170:			; <UNDEFINED> instruction: 0xf7fe68e0
    3174:	blmi	7be50c <setlogin@@Base+0x7b2704>
    3178:	ldmdavs	fp, {r0, r1, r3, r5, r6, r7, fp, ip, lr}
    317c:	bmi	76f8d0 <setlogin@@Base+0x763ac8>
    3180:	ldrbtmi	r4, [sl], #-2837	; 0xfffff4eb
    3184:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    3188:	subsmi	r9, sl, r1, lsl #22
    318c:	andlt	sp, r3, pc, lsl r1
    3190:	ldrhtmi	lr, [r0], #141	; 0x8d
    3194:	ldrbmi	fp, [r0, -r4]!
    3198:	stmiapl	fp!, {r0, r1, r2, r4, r8, r9, fp, lr}^
    319c:	mcrrne	8, 1, r6, r3, cr8
    31a0:	ldmdbmi	r6, {r0, r3, r5, r6, r7, ip, lr, pc}
    31a4:			; <UNDEFINED> instruction: 0xf7fe4479
    31a8:	strmi	lr, [r1], -r2, ror #26
    31ac:	stmdacs	r0, {r3, r4, r5, r6, r7, sp, lr}
    31b0:	strb	sp, [r0, r7, asr #3]!
    31b4:	bge	255e04 <setlogin@@Base+0x249ffc>
    31b8:	ldrtmi	r9, [r1], -r0, lsl #4
    31bc:	stmdavs	r0!, {r2, r3, r5, r6, r7, fp, ip, lr}
    31c0:	blx	153f1e0 <setlogin@@Base+0x15333d8>
    31c4:	andcs	r6, sl, r1, lsr #16
    31c8:	stc	7, cr15, [lr, #1016]!	; 0x3f8
    31cc:			; <UNDEFINED> instruction: 0xf7fee7d7
    31d0:	svclt	0x0000ed94
    31d4:	andeq	sp, r1, r8, asr ip
    31d8:	andeq	r0, r0, ip, asr #4
    31dc:	andeq	sp, r1, r4, asr #24
    31e0:	andeq	r0, r0, r4, ror #4
    31e4:	andeq	sp, r1, r8, asr #30
    31e8:	andeq	sp, r1, r0, lsr pc
    31ec:	andeq	fp, r0, lr, asr r3
    31f0:	andeq	r0, r0, ip, lsr r2
    31f4:	andeq	sp, r1, lr, ror #23
    31f8:	andeq	r0, r0, r8, ror r2
    31fc:	andeq	fp, r0, r8, lsl #6
    3200:	andeq	r0, r0, ip, ror #4
    3204:	ldrdgt	pc, [ip], #-143	; 0xffffff71	; <UNPREDICTABLE>
    3208:	ldrbtmi	r4, [ip], #2843	; 0xb1b
    320c:	addslt	fp, ip, r0, lsl r5
    3210:			; <UNDEFINED> instruction: 0xf85c4604
    3214:	strbtmi	r3, [sl], -r3
    3218:	strtmi	r2, [r1], -r3
    321c:	tstls	fp, #1769472	; 0x1b0000
    3220:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    3224:	stcl	7, cr15, [lr, #-1016]	; 0xfffffc08
    3228:	blls	131890 <setlogin@@Base+0x125a88>
    322c:	cmnmi	r0, #50331648	; 0x3000000	; <UNPREDICTABLE>
    3230:	svcmi	0x0080f5b3
    3234:	bmi	477660 <setlogin@@Base+0x46b858>
    3238:	ldrbtmi	r4, [sl], #-2831	; 0xfffff4f1
    323c:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    3240:	subsmi	r9, sl, fp, lsl fp
    3244:	andslt	sp, ip, r3, lsl r1
    3248:			; <UNDEFINED> instruction: 0xf7febd10
    324c:	tstcs	r4, #92, 28	; 0x5c0
    3250:			; <UNDEFINED> instruction: 0xf7fe6003
    3254:	stmdavs	r0, {r3, r4, r6, r9, sl, fp, sp, lr, pc}
    3258:	bl	1bc1258 <setlogin@@Base+0x1bb5450>
    325c:	strmi	r4, [r2], -r1, lsr #12
    3260:	ldrbtmi	r4, [r8], #-2055	; 0xfffff7f9
    3264:			; <UNDEFINED> instruction: 0xff54f7ff
    3268:			; <UNDEFINED> instruction: 0xf7ff2000
    326c:			; <UNDEFINED> instruction: 0xf7fefa53
    3270:	svclt	0x0000ed44
    3274:	andeq	sp, r1, r6, ror #22
    3278:	andeq	r0, r0, ip, asr #4
    327c:	andeq	sp, r1, r6, lsr fp
    3280:	muleq	r0, r6, pc	; <UNPREDICTABLE>
    3284:	mvnsmi	lr, sp, lsr #18
    3288:	svcmi	0x00192501
    328c:	stmdavc	r4, {r1, r2, r9, sl, lr}
    3290:	ldrbtmi	r4, [pc], #-1664	; 3298 <fputs@plt+0x1364>
    3294:			; <UNDEFINED> instruction: 0xf818e002
    3298:	teqlt	r4, #1, 30
    329c:	ldrle	r0, [r3], #-1571	; 0xfffff9dd
    32a0:	stc	7, cr15, [sl, #-1016]	; 0xfffffc08
    32a4:			; <UNDEFINED> instruction: 0xf8336803
    32a8:	vst4.8	{d3-d6}, [r3 :64], r4
    32ac:	blcs	1bfb4 <setlogin@@Base+0x101ac>
    32b0:	stfcsd	f5, [r7], #-964	; 0xfffffc3c
    32b4:	ldccs	8, cr13, [pc], {19}
    32b8:			; <UNDEFINED> instruction: 0x3c20d9ed
    32bc:	blx	16fe54 <setlogin@@Base+0x16404c>
    32c0:			; <UNDEFINED> instruction: 0xf014f404
    32c4:	rscle	r0, r6, sp, lsl #31
    32c8:	ldrtmi	r4, [r2], -sl, lsl #22
    32cc:	ldmpl	fp!, {r1, r3, r8, fp, lr}^
    32d0:	ldmdavs	r8, {r0, r3, r4, r5, r6, sl, lr}
    32d4:	blx	bf2f4 <setlogin@@Base+0xb34ec>
    32d8:	ldmfd	sp!, {sp}
    32dc:	stfcsp	f0, [r0], #-960	; 0xfffffc40
    32e0:			; <UNDEFINED> instruction: 0xf818d0f2
    32e4:	stccs	15, cr4, [r0], {1}
    32e8:	ldrdcs	sp, [r1], -r8
    32ec:	ldrhhi	lr, [r0, #141]!	; 0x8d
    32f0:	ldrdeq	sp, [r1], -lr
    32f4:	andeq	r0, r0, ip, ror #4
    32f8:	andeq	fp, r0, r8, ror #3
    32fc:			; <UNDEFINED> instruction: 0xc090f8df
    3300:	ldrbtmi	r4, [ip], #2852	; 0xb24
    3304:	addslt	fp, sp, r0, lsr r5
    3308:	andcc	pc, r3, ip, asr r8	; <UNPREDICTABLE>
    330c:	ldrmi	r4, [r4], -r5, lsl #12
    3310:	strbtmi	r2, [sl], -r3
    3314:	tstls	fp, #1769472	; 0x1b0000
    3318:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    331c:	bl	fee4131c <setlogin@@Base+0xfee35514>
    3320:	eorle	r3, r6, r1
    3324:	mvnscc	pc, pc, asr #32
    3328:			; <UNDEFINED> instruction: 0xf00a4620
    332c:	stmdbls	lr, {r0, r2, r4, r6, r7, r8, sl, fp, ip, sp, lr, pc}
    3330:	ldc2l	0, cr15, [r2, #40]	; 0x28
    3334:			; <UNDEFINED> instruction: 0xf00a4621
    3338:			; <UNDEFINED> instruction: 0x4621f93f
    333c:	cdp2	0, 3, cr15, cr0, cr10, {0}
    3340:	stmdacs	r0, {r0, r3, r5, fp, sp, lr}
    3344:			; <UNDEFINED> instruction: 0x4604bf18
    3348:	movwle	r4, #41633	; 0xa2a1
    334c:	blmi	455b9c <setlogin@@Base+0x449d94>
    3350:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    3354:	blls	6dd3c4 <setlogin@@Base+0x6d15bc>
    3358:	tstle	r6, sl, asr r0
    335c:	andslt	r4, sp, r8, lsr #12
    3360:	stmdavs	r8!, {r4, r5, r8, sl, fp, ip, sp, pc}^
    3364:	strtmi	r2, [r2], -r1, lsl #6
    3368:			; <UNDEFINED> instruction: 0xff66f002
    336c:	andmi	lr, r0, r5, asr #19
    3370:			; <UNDEFINED> instruction: 0xf7fee7ec
    3374:	strcs	lr, [r0, #-3528]	; 0xfffff238
    3378:			; <UNDEFINED> instruction: 0xf7fe6800
    337c:			; <UNDEFINED> instruction: 0x4601eade
    3380:	ldrbtmi	r4, [r8], #-2054	; 0xfffff7fa
    3384:	mcr2	7, 6, pc, cr4, cr15, {7}	; <UNPREDICTABLE>
    3388:			; <UNDEFINED> instruction: 0xf7fee7e0
    338c:	svclt	0x0000ecb6
    3390:	andeq	sp, r1, lr, ror #20
    3394:	andeq	r0, r0, ip, asr #4
    3398:	andeq	sp, r1, r0, lsr #20
    339c:	andeq	fp, r0, lr, asr #2
    33a0:	svcmi	0x00f0e92d
    33a4:	stc	8, cr2, [sp, #-0]
    33a8:			; <UNDEFINED> instruction: 0xf8df8b06
    33ac:			; <UNDEFINED> instruction: 0xf8df440c
    33b0:	ldrbtmi	r2, [ip], #-1036	; 0xfffffbf4
    33b4:	cfstr32pl	mvfx15, [r4, #-692]	; 0xfffffd4c
    33b8:	stmiapl	r2!, {r0, r2, r3, r7, ip, sp, pc}
    33bc:	movwpl	pc, #17677	; 0x450d	; <UNPREDICTABLE>
    33c0:	msreq	CPSR_fs, #-1073741824	; 0xc0000000
    33c4:	andsvs	r6, sl, r2, lsl r8
    33c8:	andeq	pc, r0, #79	; 0x4f
    33cc:	ldrbtmi	r4, [fp], #-3068	; 0xfffff404
    33d0:	vcgt.u8	d25, d0, d9
    33d4:	blmi	ffee3918 <setlogin@@Base+0xffed7b10>
    33d8:	bleq	3f51c <setlogin@@Base+0x33714>
    33dc:	ldrbtmi	r4, [fp], #-2810	; 0xfffff506
    33e0:	ldrbtmi	r9, [sl], #-262	; 0xfffffefa
    33e4:	mcr	3, 0, r3, cr9, cr0, {0}
    33e8:	bl	4de30 <setlogin@@Base+0x42028>
    33ec:	cdp	2, 0, cr0, cr9, cr0, {4}
    33f0:	andls	r3, sl, #16, 20	; 0x10000
    33f4:	movwls	sl, #47900	; 0xbb1c
    33f8:	movwls	sl, #31502	; 0x7b0e
    33fc:	andcs	r9, r0, #6144	; 0x1800
    3400:	blmi	141554 <setlogin@@Base+0x13574c>
    3404:	strtmi	r9, [r0], -r6, lsl #6
    3408:	ldrmi	r9, [r9], -r7, lsl #22
    340c:	stmib	r1, {r8, r9, sp}^
    3410:			; <UNDEFINED> instruction: 0xf7fe2300
    3414:	stmdacs	r1, {r2, r3, r5, r7, r8, r9, fp, sp, lr, pc}
    3418:	strtmi	sp, [r0], #-2314	; 0xfffff6f6
    341c:	and	r1, r3, r2, ror #24
    3420:			; <UNDEFINED> instruction: 0xf8804282
    3424:	andle	fp, r3, r0
    3428:	stccc	8, cr15, [r1, #-64]	; 0xffffffc0
    342c:	rscsle	r2, r7, pc, lsr #22
    3430:	vst1.8	{d18-d21}, [pc], r0
    3434:	strtmi	r6, [r0], -r0, lsl #2
    3438:	bl	ffb41438 <setlogin@@Base+0xffb35630>
    343c:	strmi	r1, [r5], -r3, asr #24
    3440:	teqhi	r8, r0	; <UNPREDICTABLE>
    3444:	strtmi	r2, [r0], -sl, lsl #2
    3448:	b	ff2c1448 <setlogin@@Base+0xff2b5640>
    344c:	stmdage	fp!, {r3, r4, r5, r8, ip, sp, pc}
    3450:	tstcs	r0, #34603008	; 0x2100000
    3454:	addpl	pc, r0, #1325400064	; 0x4f000000
    3458:			; <UNDEFINED> instruction: 0xf0094604
    345c:	blls	302558 <setlogin@@Base+0x2f6750>
    3460:	andcs	r4, r3, r9, lsr #12
    3464:	ldmdbeq	r0!, {r0, r1, r5, r7, r8, ip, sp, lr, pc}
    3468:			; <UNDEFINED> instruction: 0xf7fe464a
    346c:	andcc	lr, r1, r2, lsl fp
    3470:	orrshi	pc, r0, r0
    3474:	movwcs	lr, #51673	; 0xc9d9
    3478:			; <UNDEFINED> instruction: 0xf1732a00
    347c:	vsubw.s8	q8, q0, d0
    3480:			; <UNDEFINED> instruction: 0x46288111
    3484:			; <UNDEFINED> instruction: 0xf9e2f003
    3488:			; <UNDEFINED> instruction: 0x8010f8d9
    348c:	cmnmi	r0, #8, 8	; 0x8000000	; <UNPREDICTABLE>
    3490:	svcmi	0x0080f5b3
    3494:	sbcshi	pc, ip, r0
    3498:	svcmi	0x0000f5b3
    349c:	sbcshi	pc, sp, r0, asr #32
    34a0:	strtmi	r2, [r0], -pc, lsr #2
    34a4:	b	ff5c14a4 <setlogin@@Base+0xff5b569c>
    34a8:	stmdacs	r0, {r1, r2, r6, sl, fp, ip}
    34ac:	mrshi	pc, (UNDEF: 76)	; <UNPREDICTABLE>
    34b0:	bmi	ff1a98dc <setlogin@@Base+0xff19dad4>
    34b4:	stmpl	sl, {r1, r2, r6, r7, r8, r9, fp, lr}
    34b8:	andsvs	r9, r6, ip, lsl #4
    34bc:	ldmdavs	fp, {r0, r1, r3, r6, r7, fp, ip, lr}
    34c0:			; <UNDEFINED> instruction: 0xf0402b00
    34c4:	blmi	ff0e38d8 <setlogin@@Base+0xff0d7ad0>
    34c8:	movwls	r5, #35019	; 0x88cb
    34cc:	ldrdeq	lr, [ip, -r9]
    34d0:	strpl	pc, [r5, sp, lsl #10]
    34d4:	movwgt	pc, #2271	; 0x8df	; <UNPREDICTABLE>
    34d8:	vst1.8	{d19}, [pc], ip
    34dc:			; <UNDEFINED> instruction: 0xf6405384
    34e0:	stmib	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r9, ip, lr}^
    34e4:	ldrbtmi	r0, [ip], #258	; 0x102
    34e8:	andeq	lr, r2, #8, 20	; 0x8000
    34ec:	andls	r4, r1, #26214400	; 0x1900000
    34f0:	andcs	r4, r1, #56, 12	; 0x3800000
    34f4:			; <UNDEFINED> instruction: 0xf8cd9604
    34f8:			; <UNDEFINED> instruction: 0xf7fec000
    34fc:	blmi	fedfe3b4 <setlogin@@Base+0xfedf25ac>
    3500:	ldmvs	fp, {r0, r1, r3, r4, r5, r6, sl, lr}
    3504:			; <UNDEFINED> instruction: 0xf0402b00
    3508:			; <UNDEFINED> instruction: 0x46388115
    350c:			; <UNDEFINED> instruction: 0xf7fe4eb4
    3510:	stmdbls	r8, {r1, r2, r3, r5, r8, r9, fp, sp, lr, pc}
    3514:	stmdavs	r9, {r1, r3, r4, r5, r9, sl, lr}
    3518:	stmdals	r9, {r0, r1, r9, sl, lr}
    351c:	vmla.f16	s10, s17, s0
    3520:			; <UNDEFINED> instruction: 0xf0020a10
    3524:			; <UNDEFINED> instruction: 0xf7ffff59
    3528:	stmdacs	r0, {r0, r1, r3, r6, r7, sl, fp, ip, sp, lr, pc}
    352c:	addshi	pc, sl, r0, asr #5
    3530:	beq	43ed9c <setlogin@@Base+0x432f94>
    3534:	addmi	pc, r0, #1325400064	; 0x4f000000
    3538:			; <UNDEFINED> instruction: 0xf7ff4629
    353c:	pkhtbmi	pc, r2, pc, asr #29	; <UNPREDICTABLE>
    3540:			; <UNDEFINED> instruction: 0xf0002800
    3544:	blmi	fe9e3788 <setlogin@@Base+0xfe9d7980>
    3548:	ldmvs	fp, {r0, r1, r3, r4, r5, r6, sl, lr}
    354c:			; <UNDEFINED> instruction: 0xf0402b00
    3550:	blls	223978 <setlogin@@Base+0x217b70>
    3554:			; <UNDEFINED> instruction: 0xf0036818
    3558:	ldmib	r9, {r0, r2, r4, r5, r8, fp, ip, sp, lr, pc}^
    355c:	stmdbcs	r1, {r2, r3, r9, ip}
    3560:	movweq	pc, #370	; 0x172	; <UNPREDICTABLE>
    3564:	smlabthi	r6, r0, r2, pc	; <UNPREDICTABLE>
    3568:	ldrdhi	pc, [r0], -sl
    356c:	bmi	43ed9c <setlogin@@Base+0x432f94>
    3570:	vmov.32	d24[0], r4
    3574:			; <UNDEFINED> instruction: 0xf8cd5a90
    3578:			; <UNDEFINED> instruction: 0x26009030
    357c:	movwls	r4, #54395	; 0xd47b
    3580:	strbmi	r2, [r5], -r0, lsl #6
    3584:	ldrmi	r2, [ip], -r0, lsl #14
    3588:	ldrmi	r4, [r1], r8, lsl #13
    358c:	stmdbls	r8, {r1, r2, r3, r4, sp, lr, pc}
    3590:	cfmsub32	mvax1, mvfx4, mvfx8, mvfx11
    3594:	stmdavs	r9, {r4, r9, fp}
    3598:			; <UNDEFINED> instruction: 0xff1ef002
    359c:	ldrdeq	pc, [r4], -sl
    35a0:	tstcs	r0, sl, lsr #12
    35a4:	b	12415a4 <setlogin@@Base+0x123579c>
    35a8:	ldrdpl	pc, [r0], -sl
    35ac:			; <UNDEFINED> instruction: 0x46394630
    35b0:	strtmi	r2, [sl], -r0, lsl #6
    35b4:	stc2	0, cr15, [r4], #40	; 0x28
    35b8:	ldmib	r3, {r2, r3, r8, r9, fp, ip, pc}^
    35bc:	strbmi	r8, [r0, #-2316]	; 0xfffff6f4
    35c0:	bl	1c54de0 <setlogin@@Base+0x1c48fd8>
    35c4:	strmi	r0, [pc], -r9, lsl #6
    35c8:	addshi	pc, r3, r0, lsl #5
    35cc:			; <UNDEFINED> instruction: 0x463b4632
    35d0:	tstcs	r0, r8, lsr #12
    35d4:	ldc2	0, cr15, [r4], {10}
    35d8:	ldrdcs	pc, [r4], -sl
    35dc:	bl	1e54be4 <setlogin@@Base+0x1e48ddc>
    35e0:	svclt	0x00b80301
    35e4:	streq	lr, [r6, #-2984]	; 0xfffff458
    35e8:	bicsle	r2, r0, r0, lsl #24
    35ec:			; <UNDEFINED> instruction: 0x462b487f
    35f0:	bne	fe43ee58 <setlogin@@Base+0xfe433050>
    35f4:	stmdals	r9, {r2, r7, r9, sl, lr}
    35f8:	andeq	pc, ip, r0, asr r8	; <UNPREDICTABLE>
    35fc:	cdp2	0, 14, cr15, cr12, cr2, {0}
    3600:	strmi	r4, [r0], r5, lsl #5
    3604:			; <UNDEFINED> instruction: 0xf7fed00f
    3608:	bl	fe97e808 <setlogin@@Base+0xfe972a00>
    360c:	strtmi	r0, [r1], -r8, lsl #4
    3610:	ldrdls	pc, [r0], -r0
    3614:	ldrdeq	pc, [r4], -sl
    3618:			; <UNDEFINED> instruction: 0xf7fe4440
    361c:			; <UNDEFINED> instruction: 0xf1b9ea0e
    3620:			; <UNDEFINED> instruction: 0xf0400f00
    3624:	stmdbls	r8, {r0, r2, r6, r7, pc}
    3628:			; <UNDEFINED> instruction: 0xf8da462b
    362c:	cdp	0, 1, cr2, cr8, cr4, {0}
    3630:			; <UNDEFINED> instruction: 0xf8d10a10
    3634:	stmdbls	r7, {lr, pc}
    3638:	stmdbls	sp, {r0, r8, ip, pc}
    363c:	strbtmi	r9, [r1], -r0, lsl #2
    3640:	cdp2	0, 5, cr15, cr4, cr2, {0}
    3644:	adcle	r4, pc, r8, lsr #5
    3648:	mrrc	7, 15, pc, ip, cr14	; <UNPREDICTABLE>
    364c:	str	r6, [fp, r4, lsl #16]!
    3650:	bls	2563f4 <setlogin@@Base+0x24a5ec>
    3654:	ldmdavs	fp, {r0, r1, r4, r6, r7, fp, ip, lr}
    3658:	stmdami	r6!, {r0, r1, r3, r4, r5, r6, r7, r8, fp, ip, sp, pc}^
    365c:	ldrbtmi	r4, [r8], #-1569	; 0xfffff9df
    3660:	ldc2l	7, cr15, [r6, #-1020]	; 0xfffffc04
    3664:			; <UNDEFINED> instruction: 0xf7fe4628
    3668:	blls	2be2b0 <setlogin@@Base+0x2b24a8>
    366c:	addsmi	r9, r3, #24576	; 0x6000
    3670:	mcrge	4, 6, pc, cr4, cr15, {3}	; <UNPREDICTABLE>
    3674:			; <UNDEFINED> instruction: 0xf50d4960
    3678:	bmi	1418290 <setlogin@@Base+0x140c488>
    367c:	ldrbtmi	r3, [r9], #-812	; 0xfffffcd4
    3680:	ldmdavs	r1, {r1, r3, r7, fp, ip, lr}
    3684:	subsmi	r6, r1, sl, lsl r8
    3688:	addshi	pc, r0, r0, asr #32
    368c:	cfstr32pl	mvfx15, [r4, #-52]	; 0xffffffcc
    3690:	ldc	0, cr11, [sp], #52	; 0x34
    3694:	pop	{r1, r2, r8, r9, fp, pc}
    3698:			; <UNDEFINED> instruction: 0x46498ff0
    369c:			; <UNDEFINED> instruction: 0xf0004620
    36a0:	bfi	pc, r5, #22, #10	; <UNPREDICTABLE>
    36a4:			; <UNDEFINED> instruction: 0x46214a55
    36a8:	ldrbtmi	r4, [sl], #-2133	; 0xfffff7ab
    36ac:			; <UNDEFINED> instruction: 0xf7ff4478
    36b0:	ldrb	pc, [r7, pc, lsr #26]	; <UNPREDICTABLE>
    36b4:	stc	7, cr15, [r6], #-1016	; 0xfffffc08
    36b8:			; <UNDEFINED> instruction: 0xf7fe6800
    36bc:			; <UNDEFINED> instruction: 0x4621e93e
    36c0:	cfmsub32	mvax0, mvfx4, mvfx9, mvfx2
    36c4:			; <UNDEFINED> instruction: 0xf7ff0a90
    36c8:	strb	pc, [lr, r3, lsr #26]	; <UNPREDICTABLE>
    36cc:	stmdami	r1, {r0, r3, r8, r9, sl, fp, ip, pc}^
    36d0:	bls	2d5c08 <setlogin@@Base+0x2c9e00>
    36d4:	ldrbtmi	r5, [r9], #-2104	; 0xfffff7c8
    36d8:	stmvs	r9, {r0, r1, r4, r9, sl, lr}
    36dc:			; <UNDEFINED> instruction: 0x33209008
    36e0:	andscc	r6, r8, #0, 16
    36e4:	stc2	7, cr15, [ip], {255}	; 0xff
    36e8:	blle	feecd6f0 <setlogin@@Base+0xfeec18e8>
    36ec:			; <UNDEFINED> instruction: 0x8010f8d9
    36f0:	blls	23d2a8 <setlogin@@Base+0x2314a0>
    36f4:	cfmsub32	mvax1, mvfx4, mvfx10, mvfx6
    36f8:	ldmdavs	r8, {r4, r9, fp, lr}
    36fc:			; <UNDEFINED> instruction: 0xf8a6f003
    3700:	beq	fe43ef68 <setlogin@@Base+0xfe433160>
    3704:	b	ff041704 <setlogin@@Base+0xff0358fc>
    3708:	andsle	r3, pc, r1
    370c:	blls	231f0c <setlogin@@Base+0x226104>
    3710:			; <UNDEFINED> instruction: 0xee184a3d
    3714:	ldmdavs	r9, {r4, r9, fp}
    3718:	movwcs	r4, #5242	; 0x147a
    371c:	cdp2	0, 5, cr15, cr12, cr2, {0}
    3720:	blx	ff3c1726 <setlogin@@Base+0xff3b591e>
    3724:	ldrbtmi	r4, [fp], #-2873	; 0xfffff4c7
    3728:	blcs	1d99c <setlogin@@Base+0x11b94>
    372c:			; <UNDEFINED> instruction: 0xf002d09d
    3730:			; <UNDEFINED> instruction: 0xe79af913
    3734:	ldrtmi	r9, [sl], -r9, lsl #16
    3738:	ldmdbmi	r6!, {r0, r2, r4, r5, r8, r9, fp, lr}
    373c:	ldrbtmi	r5, [r9], #-2243	; 0xfffff73d
    3740:			; <UNDEFINED> instruction: 0xf0056818
    3744:	strbt	pc, [r0], fp, asr #31	; <UNPREDICTABLE>
    3748:	ldrt	r4, [r1], r6, lsr #12
    374c:			; <UNDEFINED> instruction: 0x4630b1de
    3750:	ldm	r2!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    3754:	strmi	r4, [r2], -r1, lsr #12
    3758:	ldrbtmi	r4, [r8], #-2095	; 0xfffff7d1
    375c:	ldc2l	7, cr15, [r8], {255}	; 0xff
    3760:	blls	33d6e0 <setlogin@@Base+0x3318d8>
    3764:	blls	1dd7cc <setlogin@@Base+0x1d19c4>
    3768:	ldmib	r9, {r8, r9, ip, pc}^
    376c:			; <UNDEFINED> instruction: 0xf002230c
    3770:			; <UNDEFINED> instruction: 0xe6eef8bb
    3774:	ldmdavs	r8, {r3, r8, r9, fp, ip, pc}
    3778:			; <UNDEFINED> instruction: 0xf868f003
    377c:			; <UNDEFINED> instruction: 0xf7fe4628
    3780:	andcc	lr, r1, r4, lsl #21
    3784:			; <UNDEFINED> instruction: 0xf7fed1c3
    3788:	stmdavs	r3, {r1, r2, r3, r4, r5, r7, r8, r9, fp, sp, lr, pc}
    378c:	mcrcs	6, 0, r4, cr0, cr14, {0}
    3790:			; <UNDEFINED> instruction: 0xe7dcd0bd
    3794:	bl	fedc1794 <setlogin@@Base+0xfedb598c>
    3798:			; <UNDEFINED> instruction: 0xf7fe6800
    379c:	strtmi	lr, [r1], -lr, asr #17
    37a0:	ldmdami	lr, {r1, r9, sl, lr}
    37a4:			; <UNDEFINED> instruction: 0xf7ff4478
    37a8:			; <UNDEFINED> instruction: 0xe75bfcb3
    37ac:	b	fe9417ac <setlogin@@Base+0xfe9359a4>
    37b0:	ldrdcs	pc, [r4], -sl
    37b4:	strbt	r4, [sl], ip, asr #12
    37b8:			; <UNDEFINED> instruction: 0x0001d9be
    37bc:	andeq	r0, r0, ip, asr #4
    37c0:	andeq	sp, r1, r2, lsr #19
    37c4:	muleq	r1, lr, ip
    37c8:	andeq	fp, r0, r6, lsl lr
    37cc:	andeq	r0, r0, r4, asr r2
    37d0:	andeq	r0, r0, r8, ror #4
    37d4:	andeq	r0, r0, r8, ror r2
    37d8:	andeq	fp, r0, r2, lsr #32
    37dc:	andeq	sp, r1, ip, ror fp
    37e0:	andeq	r0, r0, r0, lsr r2
    37e4:			; <UNDEFINED> instruction: 0x0001dabc
    37e8:			; <UNDEFINED> instruction: 0xfffff201
    37ec:	andeq	r0, r0, r8, lsr #4
    37f0:	andeq	r0, r0, r8, asr r2
    37f4:	muleq	r0, r2, lr
    37f8:	strdeq	sp, [r1], -r2
    37fc:	andeq	sl, r0, r2, lsr lr
    3800:	andeq	fp, r0, ip, asr #22
    3804:	andeq	sp, r1, r6, lsr #19
    3808:	andeq	fp, r0, r4, lsr #12
    380c:	ldrdeq	sp, [r1], -lr
    3810:	andeq	r0, r0, ip, ror #4
    3814:	ldrdeq	sl, [r0], -sl	; <UNPREDICTABLE>
    3818:	muleq	r0, lr, sl
    381c:	andeq	fp, r0, r4, asr sl
    3820:	svcmi	0x00f0e92d
    3824:	strmi	pc, [r0], r0, lsl #2
    3828:	blhi	13ece4 <setlogin@@Base+0x132edc>
    382c:			; <UNDEFINED> instruction: 0xf8df3e01
    3830:	strmi	ip, [r5], -r4, lsl #8
    3834:	strmi	pc, [r0], #-2271	; 0xfffff721
    3838:	ldrbtmi	r4, [ip], #1672	; 0x688
    383c:	mvnsls	pc, #14614528	; 0xdf0000
    3840:			; <UNDEFINED> instruction: 0xf851b097
    3844:	blge	4c38e4 <setlogin@@Base+0x4b7adc>
    3848:	movwls	sl, #27150	; 0x6a0e
    384c:	bleq	d3fc88 <setlogin@@Base+0xd33e80>
    3850:			; <UNDEFINED> instruction: 0xf10d9203
    3854:			; <UNDEFINED> instruction: 0xf8cd0a3c
    3858:	ldrmi	sl, [pc], -r0
    385c:	andmi	pc, r4, ip, asr r8	; <UNPREDICTABLE>
    3860:			; <UNDEFINED> instruction: 0x4659ab11
    3864:	ldclcc	0, cr15, [pc], #316	; 39a8 <fputs@plt+0x1a74>
    3868:	ldrls	r6, [r5], #-2084	; 0xfffff7dc
    386c:	streq	pc, [r0], #-79	; 0xffffffb1
    3870:	rsbsvs	r2, ip, r0, lsl #8
    3874:	strls	r4, [r9], #-1273	; 0xfffffb07
    3878:	strmi	lr, [sl], #-2509	; 0xfffff633
    387c:	ldrmi	lr, [r2], #-2509	; 0xfffff633
    3880:			; <UNDEFINED> instruction: 0xcc10e9cd
    3884:			; <UNDEFINED> instruction: 0xf8c2f7ff
    3888:	bls	ca998 <setlogin@@Base+0xbeb90>
    388c:			; <UNDEFINED> instruction: 0x81bef000
    3890:			; <UNDEFINED> instruction: 0xf0402800
    3894:	stmdals	sp, {r0, r1, r2, r3, r4, r7, r8, pc}
    3898:			; <UNDEFINED> instruction: 0xf7ffb120
    389c:	stmdacs	r0, {r0, r1, r4, r5, r6, r7, sl, fp, ip, sp, lr, pc}
    38a0:			; <UNDEFINED> instruction: 0x81abf000
    38a4:			; <UNDEFINED> instruction: 0xf04f4628
    38a8:			; <UNDEFINED> instruction: 0xf00a31ff
    38ac:	vmovne.32	d3[0], pc
    38b0:	vcgt.u8	d25, d0, d4
    38b4:	blmi	ff8a3bf0 <setlogin@@Base+0xff897de8>
    38b8:	beq	a3fcf4 <setlogin@@Base+0xa33eec>
    38bc:	ldrbtmi	r2, [fp], #-1280	; 0xfffffb00
    38c0:	bcc	43f0ec <setlogin@@Base+0x4332e4>
    38c4:	vmov.32	d8[0], sl
    38c8:	blmi	ff792310 <setlogin@@Base+0xff786508>
    38cc:	movwls	r4, #29819	; 0x747b
    38d0:	vmla.f64	d10, d8, d9
    38d4:	blge	2d211c <setlogin@@Base+0x2c6314>
    38d8:	stmdals	r9, {r0, r1, r8, r9, ip, pc}
    38dc:			; <UNDEFINED> instruction: 0xf7fe4646
    38e0:	stmdals	sl, {r1, r2, r3, r4, r5, r6, r7, fp, sp, lr, pc}
    38e4:	ldm	sl!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    38e8:			; <UNDEFINED> instruction: 0xf7fe980b
    38ec:	blls	fdcd4 <setlogin@@Base+0xf1ecc>
    38f0:	bne	43f158 <setlogin@@Base+0x433350>
    38f4:			; <UNDEFINED> instruction: 0xf1084652
    38f8:	movwls	r0, #2052	; 0x804
    38fc:	bcc	fe43f164 <setlogin@@Base+0xfe43335c>
    3900:	stceq	8, cr15, [r4], {88}	; 0x58
    3904:			; <UNDEFINED> instruction: 0xf882f7ff
    3908:			; <UNDEFINED> instruction: 0xf0001c43
    390c:	stmdacs	r0, {r1, r3, r6, r7, pc}
    3910:	adcshi	pc, lr, r0, asr #32
    3914:			; <UNDEFINED> instruction: 0xb1209809
    3918:	ldc2	7, cr15, [r4], #1020	; 0x3fc
    391c:			; <UNDEFINED> instruction: 0xf0002800
    3920:	blls	2a3c50 <setlogin@@Base+0x297e48>
    3924:			; <UNDEFINED> instruction: 0xf0002b00
    3928:	blmi	ff1e3d9c <setlogin@@Base+0xff1d7f94>
    392c:	ldmibvs	fp, {r0, r1, r3, r4, r5, r6, sl, lr}
    3930:			; <UNDEFINED> instruction: 0xf0402b00
    3934:	ldcls	0, cr8, [r1], {201}	; 0xc9
    3938:	svccc	0x00fff1b4
    393c:	ldccs	15, cr11, [r6], {24}
    3940:	strcs	fp, [r1], #-3860	; 0xfffff0ec
    3944:			; <UNDEFINED> instruction: 0xf0402400
    3948:	mrcge	1, 0, r8, cr2, cr1, {3}
    394c:	rscslt	pc, ip, #14614528	; 0xdf0000
    3950:	ldrbtmi	r4, [fp], #1584	; 0x630
    3954:	stc2	0, cr15, [r6], #-12
    3958:			; <UNDEFINED> instruction: 0x46304bbd
    395c:	ldrbtmi	r4, [fp], #-1625	; 0xfffff9a7
    3960:			; <UNDEFINED> instruction: 0xf003681a
    3964:	ldmibmi	fp!, {r0, r1, r2, r7, r8, r9, fp, ip, sp, lr, pc}
    3968:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    396c:	blx	fe0bf982 <setlogin@@Base+0xfe0b3b7a>
    3970:			; <UNDEFINED> instruction: 0x463049b9
    3974:			; <UNDEFINED> instruction: 0xf0034479
    3978:	ldmibmi	r8!, {r0, r2, r3, r4, r5, r6, r8, r9, fp, ip, sp, lr, pc}
    397c:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    3980:	blx	1e3f996 <setlogin@@Base+0x1e33b8e>
    3984:			; <UNDEFINED> instruction: 0xf8594bb6
    3988:	ldmdavs	fp!, {r0, r1, ip, sp, lr}^
    398c:	ldmdavs	fp!, {r0, r1, r4, r6, r8, ip, sp, pc}
    3990:			; <UNDEFINED> instruction: 0x46304659
    3994:	eorcs	pc, r4, r3, asr r8	; <UNPREDICTABLE>
    3998:			; <UNDEFINED> instruction: 0xf0033401
    399c:	ldmdavs	fp!, {r0, r1, r3, r5, r6, r8, r9, fp, ip, sp, lr, pc}^
    39a0:	ldmle	r4!, {r0, r1, r5, r7, r9, lr}^
    39a4:	movwcc	r9, #6928	; 0x1b10
    39a8:	stmibmi	lr!, {r1, r3, ip, lr, pc}
    39ac:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    39b0:	blx	183f9c6 <setlogin@@Base+0x1833bbe>
    39b4:	bls	41606c <setlogin@@Base+0x40a264>
    39b8:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    39bc:	blx	16bf9d2 <setlogin@@Base+0x16b3bca>
    39c0:	cmplt	r3, r9, lsl #22
    39c4:	ldrtmi	r4, [r0], -r9, lsr #19
    39c8:			; <UNDEFINED> instruction: 0xf0034479
    39cc:	stmibmi	r8!, {r0, r1, r4, r6, r8, r9, fp, ip, sp, lr, pc}
    39d0:	ldrtmi	r9, [r0], -r9, lsl #20
    39d4:			; <UNDEFINED> instruction: 0xf0034479
    39d8:	stmibmi	r6!, {r0, r2, r3, r6, r8, r9, fp, ip, sp, lr, pc}
    39dc:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    39e0:	blx	123f9f6 <setlogin@@Base+0x1233bee>
    39e4:	bls	29687c <setlogin@@Base+0x28aa74>
    39e8:	ldrbtmi	r4, [fp], #-1584	; 0xfffff9d0
    39ec:	ldrmi	r9, [r9], -r5, lsl #6
    39f0:	blx	103fa06 <setlogin@@Base+0x1033bfe>
    39f4:	stmdbls	r5, {r0, r5, r7, r8, r9, fp, lr}
    39f8:			; <UNDEFINED> instruction: 0xf8594630
    39fc:			; <UNDEFINED> instruction: 0xf0032003
    3a00:	bls	3026ec <setlogin@@Base+0x2f68e4>
    3a04:	ldrtmi	r9, [r0], -r5, lsl #18
    3a08:	blx	d3fa1e <setlogin@@Base+0xd33c16>
    3a0c:	bcs	2a248 <setlogin@@Base+0x1e440>
    3a10:	sbcshi	pc, sl, r0
    3a14:	ldrbtmi	r4, [fp], #-2970	; 0xfffff466
    3a18:	ldrdmi	lr, [lr], -sp
    3a1c:	mulls	r1, r9, r9
    3a20:			; <UNDEFINED> instruction: 0x46304479
    3a24:			; <UNDEFINED> instruction: 0xf0039400
    3a28:	stmdbls	r6, {r0, r2, r5, r8, r9, fp, ip, sp, lr, pc}
    3a2c:			; <UNDEFINED> instruction: 0xf7fe4630
    3a30:	msrlt	R8_usr, fp
    3a34:	andcs	r4, r1, #148, 22	; 0x25000
    3a38:	andcc	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    3a3c:			; <UNDEFINED> instruction: 0x4628601a
    3a40:			; <UNDEFINED> instruction: 0xf00a2101
    3a44:	blls	142370 <setlogin@@Base+0x136568>
    3a48:			; <UNDEFINED> instruction: 0x46054298
    3a4c:	svcge	0x0045f47f
    3a50:			; <UNDEFINED> instruction: 0xf7fe980d
    3a54:	stmdals	lr, {r2, r6, fp, sp, lr, pc}
    3a58:	stmda	r0, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    3a5c:			; <UNDEFINED> instruction: 0xf7fe980f
    3a60:	stmdals	r9, {r1, r2, r3, r4, r5, fp, sp, lr, pc}
    3a64:	ldmda	sl!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    3a68:			; <UNDEFINED> instruction: 0xf7fe980a
    3a6c:	stmdals	fp, {r3, r4, r5, fp, sp, lr, pc}
    3a70:	ldmda	r4!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    3a74:	blmi	1c16490 <setlogin@@Base+0x1c0a688>
    3a78:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    3a7c:	blls	55daec <setlogin@@Base+0x551ce4>
    3a80:			; <UNDEFINED> instruction: 0xf040405a
    3a84:	ldrsblt	r8, [r7], -r1
    3a88:	blhi	13ed84 <setlogin@@Base+0x132f7c>
    3a8c:	svchi	0x00f0e8bd
    3a90:	bne	43f2f8 <setlogin@@Base+0x4334f0>
    3a94:	blls	d53e4 <setlogin@@Base+0xc95dc>
    3a98:	stceq	8, cr15, [r4], {88}	; 0x58
    3a9c:	blx	1bfab0 <setlogin@@Base+0x1b3ca8>
    3aa0:	blmi	1efd788 <setlogin@@Base+0x1ef1980>
    3aa4:			; <UNDEFINED> instruction: 0xf858497b
    3aa8:			; <UNDEFINED> instruction: 0xf8592c04
    3aac:	ldrbtmi	r3, [r9], #-3
    3ab0:			; <UNDEFINED> instruction: 0xf0056818
    3ab4:	blmi	1d43308 <setlogin@@Base+0x1d37500>
    3ab8:			; <UNDEFINED> instruction: 0xf8592101
    3abc:	stmdavs	r0!, {r0, r1, lr}
    3ac0:	blx	2bfaf0 <setlogin@@Base+0x2b3ce8>
    3ac4:	ldr	r6, [sl, r0, lsr #32]!
    3ac8:	stmdavc	r3!, {r0, r1, r3, sl, fp, ip, pc}
    3acc:	rsbsle	r2, r8, sp, lsr #22
    3ad0:	ldrbtmi	r4, [fp], #-2929	; 0xfffff48f
    3ad4:	svcge	0x000c4a69
    3ad8:			; <UNDEFINED> instruction: 0x46384970
    3adc:	andlt	pc, r2, r9, asr r8	; <UNPREDICTABLE>
    3ae0:	strls	r4, [r0], #-1145	; 0xfffffb87
    3ae4:			; <UNDEFINED> instruction: 0xf002465a
    3ae8:	bmi	1b82a5c <setlogin@@Base+0x1b76c54>
    3aec:	blls	315ca8 <setlogin@@Base+0x309ea0>
    3af0:	andvs	pc, r2, r9, asr r8	; <UNPREDICTABLE>
    3af4:	bls	429f20 <setlogin@@Base+0x41e118>
    3af8:			; <UNDEFINED> instruction: 0xf8599601
    3afc:	stmdals	sl, {lr}
    3b00:			; <UNDEFINED> instruction: 0xf7fe9400
    3b04:	stmdacs	r0, {r0, r1, r5, r7, r8, r9, sl, fp, ip, sp, lr, pc}
    3b08:	addhi	pc, fp, r0, asr #5
    3b0c:			; <UNDEFINED> instruction: 0xf7fd980c
    3b10:	bls	3ffab0 <setlogin@@Base+0x3f3ca8>
    3b14:	blcs	b61b68 <setlogin@@Base+0xb55d60>
    3b18:	blmi	18f7c60 <setlogin@@Base+0x18ebe58>
    3b1c:	stmdbmi	r3!, {r0, r1, r3, r4, r5, r6, sl, lr}^
    3b20:	andls	r4, r0, #56, 12	; 0x3800000
    3b24:	ldrbtmi	r4, [r9], #-1626	; 0xfffff9a6
    3b28:	blx	feebfb3a <setlogin@@Base+0xfeeb3d32>
    3b2c:	blls	31dbf8 <setlogin@@Base+0x311df0>
    3b30:	tstls	r1, r1, lsl sl
    3b34:	ldmib	sp, {r0, r1, r2, r5, fp, sp, lr}^
    3b38:	strls	r1, [r0, -sp]
    3b3c:			; <UNDEFINED> instruction: 0xf8c8f7ff
    3b40:	blle	1b8db48 <setlogin@@Base+0x1b81d40>
    3b44:			; <UNDEFINED> instruction: 0xf7fd980c
    3b48:	stmdavs	r0!, {r1, r3, r6, r7, r8, r9, sl, fp, sp, lr, pc}
    3b4c:	ldm	ip, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    3b50:			; <UNDEFINED> instruction: 0xf7fe6830
    3b54:			; <UNDEFINED> instruction: 0xf04fe89a
    3b58:	ldrshtvs	r3, [r3], -pc
    3b5c:	strb	r6, [lr, -r3, lsr #32]!
    3b60:			; <UNDEFINED> instruction: 0xf8594b50
    3b64:	stmdavs	r3!, {r0, r1, lr}
    3b68:			; <UNDEFINED> instruction: 0xd1223301
    3b6c:	ldmdavc	fp!, {r0, r1, r2, r3, r8, r9, sl, fp, ip, pc}
    3b70:	eorle	r2, ip, sp, lsr #22
    3b74:	ldrbtmi	r4, [fp], #-2894	; 0xfffff4b2
    3b78:	stmdage	ip, {r6, r9, fp, lr}
    3b7c:	bne	43f3e8 <setlogin@@Base+0x4335e0>
    3b80:	andcs	pc, r2, r9, asr r8	; <UNPREDICTABLE>
    3b84:			; <UNDEFINED> instruction: 0xf0029700
    3b88:	stmdbmi	r5, {r0, r1, r3, r7, r8, r9, fp, ip, sp, lr, pc}^
    3b8c:	bls	46a7c4 <setlogin@@Base+0x45e9bc>
    3b90:	andeq	pc, r1, r9, asr r8	; <UNPREDICTABLE>
    3b94:	stmib	sp, {r0, r2, r3, r8, fp, ip, pc}^
    3b98:	stmdals	lr, {lr}
    3b9c:			; <UNDEFINED> instruction: 0xff56f7fe
    3ba0:	blle	f8dba8 <setlogin@@Base+0xf81da0>
    3ba4:			; <UNDEFINED> instruction: 0xf98cf7ff
    3ba8:	blle	e8dbb0 <setlogin@@Base+0xe81da8>
    3bac:			; <UNDEFINED> instruction: 0xf7fd980c
    3bb0:	shadd8mi	lr, r1, r6
    3bb4:			; <UNDEFINED> instruction: 0xf7ff2001
    3bb8:			; <UNDEFINED> instruction: 0xe740fbf3
    3bbc:	ldrbtmi	r4, [fp], #-2877	; 0xfffff4c3
    3bc0:	blmi	f7da7c <setlogin@@Base+0xf71c74>
    3bc4:			; <UNDEFINED> instruction: 0xe785447b
    3bc8:	ldrmi	r9, [sl], -r7, lsl #22
    3bcc:	blmi	efd864 <setlogin@@Base+0xef1a5c>
    3bd0:			; <UNDEFINED> instruction: 0xe7d1447b
    3bd4:	eoreq	pc, r6, r8, asr r8	; <UNPREDICTABLE>
    3bd8:			; <UNDEFINED> instruction: 0x46594653
    3bdc:			; <UNDEFINED> instruction: 0xf966f003
    3be0:			; <UNDEFINED> instruction: 0xf47f3001
    3be4:	blmi	aaf54c <setlogin@@Base+0xaa3744>
    3be8:			; <UNDEFINED> instruction: 0xf8584935
    3bec:			; <UNDEFINED> instruction: 0xf8592026
    3bf0:	ldrbtmi	r3, [r9], #-3
    3bf4:			; <UNDEFINED> instruction: 0xf0056818
    3bf8:	blmi	9031c4 <setlogin@@Base+0x8f73bc>
    3bfc:			; <UNDEFINED> instruction: 0xf8592101
    3c00:	stmdavs	r0!, {r0, r1, lr}
    3c04:			; <UNDEFINED> instruction: 0xf968f00a
    3c08:	str	r6, [r1, -r0, lsr #32]!
    3c0c:	pushmi	{r5, r8, r9, fp, lr}
    3c10:	eorcs	pc, r6, r8, asr r8	; <UNPREDICTABLE>
    3c14:	andcc	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    3c18:	ldmdavs	r8, {r0, r3, r4, r5, r6, sl, lr}
    3c1c:	ldc2l	0, cr15, [lr, #-20]	; 0xffffffec
    3c20:	andcs	lr, r1, fp, ror #15
    3c24:	stmdb	r2!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    3c28:	stmda	r6!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    3c2c:	ldrbtmi	r4, [r8], #-2086	; 0xfffff7da
    3c30:	cdp2	0, 12, cr15, cr2, cr1, {0}
    3c34:	andeq	sp, r1, r6, lsr r5
    3c38:	andeq	r0, r0, ip, asr #4
    3c3c:	strdeq	sp, [r1], -ip
    3c40:	andeq	sl, r0, lr, lsr #25
    3c44:	andeq	fp, r0, r0, ror r4
    3c48:	andeq	sp, r1, r0, asr r7
    3c4c:	andeq	fp, r0, r6, asr r4
    3c50:			; <UNDEFINED> instruction: 0x0001d6b2
    3c54:	andeq	sl, r0, r6, asr ip
    3c58:	andeq	sl, r0, r0, asr ip
    3c5c:	andeq	sl, r0, r2, ror #24
    3c60:	andeq	r0, r0, r0, lsr #4
    3c64:	muleq	r0, r2, r9
    3c68:	andeq	sl, r0, sl, lsl #19
    3c6c:	andeq	sl, r0, r0, lsl #19
    3c70:	ldrdeq	fp, [r0], -r4
    3c74:	andeq	sl, r0, lr, ror #18
    3c78:			; <UNDEFINED> instruction: 0x0000b3be
    3c7c:	andeq	r0, r0, ip, lsl r2
    3c80:	andeq	sl, r0, lr, lsl fp
    3c84:	andeq	sl, r0, r4, asr #23
    3c88:	andeq	r0, r0, r4, ror #4
    3c8c:	strdeq	sp, [r1], -r8
    3c90:	andeq	r0, r0, ip, ror #4
    3c94:	andeq	sl, r0, sl, lsl #21
    3c98:	andeq	fp, r0, sl, ror #4
    3c9c:	andeq	sl, r0, r0, lsl #21
    3ca0:	andeq	r0, r0, r8, ror r2
    3ca4:	andeq	r0, r0, r4, lsl #4
    3ca8:	andeq	fp, r0, r0, lsr #4
    3cac:	andeq	sl, r0, r6, asr #20
    3cb0:	andeq	fp, r0, r6, asr #3
    3cb4:	andeq	sl, r0, r2, ror r9
    3cb8:	andeq	sl, r0, ip, ror #18
    3cbc:	andeq	sl, r0, r0, ror #18
    3cc0:	andeq	sl, r0, sl, asr r9
    3cc4:	andeq	sl, r0, r0, lsr #18
    3cc8:	andeq	sl, r0, sl, asr #18
    3ccc:	svcmi	0x00f0e92d
    3cd0:	ldmdbmi	sl!, {r1, r2, r3, r9, sl, lr}^
    3cd4:	cfstr32pl	mvfx15, [r1, #692]	; 0x2b4
    3cd8:	addlt	r4, r3, r9, ror sl
    3cdc:			; <UNDEFINED> instruction: 0xf50d4479
    3ce0:	movwcc	r5, #17281	; 0x4381
    3ce4:	stmpl	sl, {r0, r2, r9, sl, lr}
    3ce8:	ldrsbhi	pc, [r8, #143]	; 0x8f	; <UNPREDICTABLE>
    3cec:	andsvs	r6, sl, r2, lsl r8
    3cf0:	andeq	pc, r0, #79	; 0x4f
    3cf4:	mcr	7, 2, pc, cr10, cr13, {7}	; <UNPREDICTABLE>
    3cf8:	stmdacs	r0, {r3, r4, r5, r6, r7, sl, lr}
    3cfc:	sbchi	pc, pc, r0
    3d00:			; <UNDEFINED> instruction: 0x212f4604
    3d04:			; <UNDEFINED> instruction: 0xf7fd4628
    3d08:			; <UNDEFINED> instruction: 0xf100eea6
    3d0c:	stmdacs	r0, {r0, r9, fp}
    3d10:	sbchi	pc, r3, r0
    3d14:			; <UNDEFINED> instruction: 0xf8584b6c
    3d18:	ldmdavs	fp, {r0, r1, ip, sp}
    3d1c:			; <UNDEFINED> instruction: 0xf0402b00
    3d20:	blmi	1aa3f44 <setlogin@@Base+0x1a9813c>
    3d24:	andls	pc, r3, r8, asr r8	; <UNPREDICTABLE>
    3d28:	ldmdbvs	r0!, {r1, r3, r8, r9, sl, fp, sp, pc}
    3d2c:	svcne	0x003e4968
    3d30:	orrpl	pc, r0, #1325400064	; 0x4f000000
    3d34:	rscspl	pc, pc, #64, 12	; 0x4000000
    3d38:	andmi	r4, r2, r9, ror r4
    3d3c:	ldrtmi	r9, [r0], -r0, lsl #2
    3d40:	andls	r4, r1, #26214400	; 0x1900000
    3d44:	andge	pc, ip, sp, asr #17
    3d48:	andls	r2, r2, #0, 4
    3d4c:			; <UNDEFINED> instruction: 0xf7fd2201
    3d50:	blmi	183fb60 <setlogin@@Base+0x1833d58>
    3d54:	ldmvs	fp, {r0, r1, r3, r4, r5, r6, sl, lr}
    3d58:			; <UNDEFINED> instruction: 0xf0402b00
    3d5c:			; <UNDEFINED> instruction: 0x46308094
    3d60:	svc	0x0004f7fd
    3d64:	ldrsbgt	pc, [r0, #-143]!	; 0xffffff71	; <UNPREDICTABLE>
    3d68:	ldrdne	pc, [r0], -r9
    3d6c:			; <UNDEFINED> instruction: 0x46034632
    3d70:	andeq	pc, ip, r8, asr r8	; <UNPREDICTABLE>
    3d74:			; <UNDEFINED> instruction: 0xf0029006
    3d78:			; <UNDEFINED> instruction: 0xf7fffb2f
    3d7c:	stmdacs	r0, {r0, r5, r7, fp, ip, sp, lr, pc}
    3d80:	blmi	15bab24 <setlogin@@Base+0x15aed1c>
    3d84:	ldmvc	lr!, {r6, r9, sl, ip, sp, lr, pc}^
    3d88:	movwls	r4, #21627	; 0x547b
    3d8c:	ldrbtmi	r4, [fp], #-2900	; 0xfffff4ac
    3d90:	strtmi	r9, [r0], -r7, lsl #6
    3d94:	stmda	sl!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    3d98:	ldmib	r0, {r3, r5, r6, r8, r9, ip, sp, pc}^
    3d9c:	tstmi	r3, #0, 6
    3da0:	stclvc	0, cr13, [r3], {247}	; 0xf7
    3da4:	bleq	5001ac <setlogin@@Base+0x4f43a4>
    3da8:	subsle	r2, r6, lr, lsr #22
    3dac:	blcs	ba30c0 <setlogin@@Base+0xb972b8>
    3db0:			; <UNDEFINED> instruction: 0x4628d05a
    3db4:	mrc	7, 6, APSR_nzcv, cr10, cr13, {7}
    3db8:	ldrbmi	r4, [r8], -r2, lsl #13
    3dbc:	mrc	7, 6, APSR_nzcv, cr6, cr13, {7}
    3dc0:	andcc	r4, r1, r0, asr r4
    3dc4:	ldmdale	r8, {r6, r8, sl, lr}^
    3dc8:	vst1.8	{d25-d26}, [pc], r5
    3dcc:	ldrmi	r5, [r9], -r0, lsl #7
    3dd0:	stmib	sp, {r4, r5, r9, sl, lr}^
    3dd4:	andls	r5, r0, #1024	; 0x400
    3dd8:			; <UNDEFINED> instruction: 0xf7fd2201
    3ddc:	andcs	lr, r1, ip, lsr pc
    3de0:	smlatbeq	r8, r7, r1, pc	; <UNPREDICTABLE>
    3de4:	stcvs	8, cr15, [r8], {71}	; 0x47
    3de8:	blx	ff6c1dec <setlogin@@Base+0xff6b5fe4>
    3dec:			; <UNDEFINED> instruction: 0xf7fd4620
    3df0:	stmdacs	r0, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr, pc}
    3df4:			; <UNDEFINED> instruction: 0x4620d1d1
    3df8:	svc	0x0052f7fd
    3dfc:			; <UNDEFINED> instruction: 0xf8d94a39
    3e00:	movwcs	r1, #8192	; 0x2000
    3e04:	stmdals	r6, {r1, r3, r4, r5, r6, sl, lr}
    3e08:	blx	ff9bfe18 <setlogin@@Base+0xff9b4010>
    3e0c:			; <UNDEFINED> instruction: 0xf858f7ff
    3e10:			; <UNDEFINED> instruction: 0xf50d4935
    3e14:	bmi	a98c20 <setlogin@@Base+0xa8ce18>
    3e18:	ldrbtmi	r3, [r9], #-772	; 0xfffffcfc
    3e1c:	ldmdavs	r1, {r1, r3, r7, fp, ip, lr}
    3e20:	subsmi	r6, r1, sl, lsl r8
    3e24:			; <UNDEFINED> instruction: 0xf50dd147
    3e28:	andlt	r5, r3, r1, lsl #27
    3e2c:	svchi	0x00f0e8bd
    3e30:			; <UNDEFINED> instruction: 0xf1064826
    3e34:	pushmi	{r4, r6, r8, r9}
    3e38:	subeq	pc, r8, #-2147483647	; 0x80000001
    3e3c:	andls	pc, r0, r8, asr r8	; <UNPREDICTABLE>
    3e40:	stmvs	r9, {r0, r3, r4, r5, r6, sl, lr}
    3e44:	ldrdeq	pc, [r0], -r9
    3e48:			; <UNDEFINED> instruction: 0xf8daf7ff
    3e4c:			; <UNDEFINED> instruction: 0xf6bf2800
    3e50:	strtmi	sl, [r0], -fp, ror #30
    3e54:	svc	0x0024f7fd
    3e58:			; <UNDEFINED> instruction: 0xf89be7da
    3e5c:	blcs	fe68 <setlogin@@Base+0x4060>
    3e60:	stclvc	0, cr13, [r3], {151}	; 0x97
    3e64:			; <UNDEFINED> instruction: 0xd1a42b2e
    3e68:	mulcc	r1, fp, r8
    3e6c:	lsrle	r2, lr, #22
    3e70:	mulcc	r2, fp, r8
    3e74:	addle	r2, ip, r0, lsl #22
    3e78:	stmdals	r7, {r0, r1, r3, r4, r7, r8, r9, sl, sp, lr, pc}
    3e7c:			; <UNDEFINED> instruction: 0x4629465a
    3e80:			; <UNDEFINED> instruction: 0xf946f7ff
    3e84:	blmi	6bdca0 <setlogin@@Base+0x6b1e98>
    3e88:	ldmdbmi	sl, {r1, r4, r5, r9, sl, lr}
    3e8c:	andcc	pc, r3, r8, asr r8	; <UNPREDICTABLE>
    3e90:	ldmdavs	r8, {r0, r3, r4, r5, r6, sl, lr}
    3e94:	stc2	0, cr15, [r2], #-20	; 0xffffffec
    3e98:	strtmi	lr, [sl], r1, ror #14
    3e9c:			; <UNDEFINED> instruction: 0xf7fee73a
    3ea0:	stmdavs	r0, {r1, r4, r5, fp, sp, lr, pc}
    3ea4:	stcl	7, cr15, [r8, #-1012]	; 0xfffffc0c
    3ea8:	strmi	r4, [r2], -r9, lsr #12
    3eac:	ldrbtmi	r4, [r8], #-2066	; 0xfffff7ee
    3eb0:			; <UNDEFINED> instruction: 0xf92ef7ff
    3eb4:			; <UNDEFINED> instruction: 0xf7fde7ac
    3eb8:	svclt	0x0000ef20
    3ebc:	muleq	r1, r4, r0
    3ec0:	andeq	r0, r0, ip, asr #4
    3ec4:	andeq	sp, r1, r8, ror r0
    3ec8:	andeq	r0, r0, r8, ror #4
    3ecc:	andeq	r0, r0, r8, ror r2
    3ed0:			; <UNDEFINED> instruction: 0x0000a8b8
    3ed4:	andeq	sp, r1, r8, lsr #6
    3ed8:	andeq	r0, r0, r0, lsr r2
    3edc:			; <UNDEFINED> instruction: 0x0000a8b0
    3ee0:	muleq	r0, r2, r8
    3ee4:	andeq	sl, r0, ip, lsr r8
    3ee8:	andeq	ip, r1, r6, asr pc
    3eec:	andeq	sp, r1, ip, lsr r2
    3ef0:	andeq	r0, r0, ip, ror #4
    3ef4:	andeq	sl, r0, r4, ror r7
    3ef8:	andeq	fp, r0, sl, asr #6
    3efc:	svcmi	0x00f0e92d
    3f00:	stc	6, cr4, [sp, #-48]!	; 0xffffffd0
    3f04:	strmi	r8, [r5], -r4, lsl #22
    3f08:	stcne	8, cr15, [ip], #-892	; 0xfffffc84
    3f0c:	ldrbtmi	r2, [r9], #-0
    3f10:	cfstr32pl	mvfx15, [r8, #692]	; 0x2b4
    3f14:			; <UNDEFINED> instruction: 0xf50db085
    3f18:	andsls	r5, r9, #136, 6	; 0x20000002
    3f1c:			; <UNDEFINED> instruction: 0xf8df330c
    3f20:	stmpl	sl, {r2, r3, r4, sl, fp, sp}
    3f24:	andsvs	r6, sl, r2, lsl r8
    3f28:	andeq	pc, r0, #79	; 0x4f
    3f2c:	ldccc	8, cr15, [r0], {223}	; 0xdf
    3f30:	movwls	r4, #50299	; 0xc47b
    3f34:			; <UNDEFINED> instruction: 0xf7fd461e
    3f38:			; <UNDEFINED> instruction: 0xf8dfedfc
    3f3c:	andsls	r3, r8, r8, lsl #24
    3f40:	tstls	r4, #15925248	; 0xf30000
    3f44:	blcs	1dfb8 <setlogin@@Base+0x121b0>
    3f48:	strhi	pc, [ip], #0
    3f4c:			; <UNDEFINED> instruction: 0xf0412d01
    3f50:	stmdavs	r2!, {r1, r3, pc}
    3f54:	blcc	ffc422d8 <setlogin@@Base+0xffc364d0>
    3f58:	bls	3287a0 <setlogin@@Base+0x31c998>
    3f5c:	ldmdavs	fp, {r0, r1, r4, r6, r7, fp, ip, lr}
    3f60:			; <UNDEFINED> instruction: 0xf0402b00
    3f64:	mcrls	4, 0, r8, cr12, cr10, {3}
    3f68:			; <UNDEFINED> instruction: 0xf8dfac24
    3f6c:	movwcs	r0, #7136	; 0x1be0
    3f70:			; <UNDEFINED> instruction: 0xf8df9412
    3f74:	ldmdapl	r5!, {r2, r3, r4, r6, r7, r8, r9, fp, ip}
    3f78:	blcs	ff6422fc <setlogin@@Base+0xff6364f4>
    3f7c:	ldrbtmi	r9, [sl], #-1299	; 0xfffffaed
    3f80:	stmdavs	r9!, {r4, r5, r6, fp, ip, lr}
    3f84:	beq	fe43f7ac <setlogin@@Base+0xfe4339a4>
    3f88:	blx	9bff98 <setlogin@@Base+0x9b4190>
    3f8c:			; <UNDEFINED> instruction: 0x46229910
    3f90:			; <UNDEFINED> instruction: 0xf7fd2003
    3f94:	stmdacs	r0, {r3, r4, r7, r9, sl, fp, sp, lr, pc}
    3f98:	tsthi	r7, r0	; <UNPREDICTABLE>
    3f9c:	tstls	r6, #0, 6
    3fa0:	blcs	2ac0c <setlogin@@Base+0x1ee04>
    3fa4:	tsthi	lr, r0	; <UNPREDICTABLE>
    3fa8:	blcs	feb4232c <setlogin@@Base+0xfeb36524>
    3fac:	blcc	feb42330 <setlogin@@Base+0xfeb36528>
    3fb0:	stmpl	r1, {r2, r3, fp, ip, pc}
    3fb4:	stmdavs	fp, {r1, r6, r7, fp, ip, lr}
    3fb8:	tstmi	r3, #1179648	; 0x120000
    3fbc:	ldrbhi	pc, [r1], #0	; <UNPREDICTABLE>
    3fc0:	bleq	fe1403fc <setlogin@@Base+0xfe1345f4>
    3fc4:	tstls	r1, #0, 6
    3fc8:	movwcs	r9, #791	; 0x317
    3fcc:	movwls	r9, #54043	; 0xd31b
    3fd0:	beq	fe04040c <setlogin@@Base+0xfe034604>
    3fd4:	blcc	fe242358 <setlogin@@Base+0xfe236550>
    3fd8:			; <UNDEFINED> instruction: 0xf8df2501
    3fdc:	stmdals	ip, {r3, r7, r8, r9, fp, ip}
    3fe0:			; <UNDEFINED> instruction: 0xf8df447b
    3fe4:			; <UNDEFINED> instruction: 0x33242b84
    3fe8:	andhi	pc, r1, r0, asr r8	; <UNPREDICTABLE>
    3fec:	bcc	fe43f818 <setlogin@@Base+0xfe433a10>
    3ff0:	blge	10ee508 <setlogin@@Base+0x10e2700>
    3ff4:			; <UNDEFINED> instruction: 0xf850910a
    3ff8:	movwls	r9, #28674	; 0x7002
    3ffc:	movwcs	r9, #6663	; 0x1a07
    4000:	ldrdne	pc, [r0], -r8
    4004:			; <UNDEFINED> instruction: 0xf8cb4648
    4008:			; <UNDEFINED> instruction: 0xf0022000
    400c:	stmdacs	r1, {r0, r2, r5, r6, r7, r8, fp, ip, sp, lr, pc}
    4010:			; <UNDEFINED> instruction: 0x83a6f040
    4014:	ldrdcc	pc, [r0], -fp
    4018:			; <UNDEFINED> instruction: 0xf8cb1c5a
    401c:	ldmdavc	fp, {sp}
    4020:			; <UNDEFINED> instruction: 0xf0002b0a
    4024:	blls	2a5f58 <setlogin@@Base+0x29a150>
    4028:	ldrbtvc	pc, [fp], #515	; 0x203	; <UNPREDICTABLE>
    402c:			; <UNDEFINED> instruction: 0xf89ae003
    4030:	bcs	28c038 <setlogin@@Base+0x280230>
    4034:			; <UNDEFINED> instruction: 0xf8d8d015
    4038:	movwcs	r1, #4096	; 0x1000
    403c:			; <UNDEFINED> instruction: 0x46484652
    4040:			; <UNDEFINED> instruction: 0xf9caf002
    4044:			; <UNDEFINED> instruction: 0xf0402801
    4048:			; <UNDEFINED> instruction: 0xf8db8711
    404c:			; <UNDEFINED> instruction: 0xf89a3000
    4050:	mrane	r2, r9, acc0
    4054:	andne	pc, r0, fp, asr #17
    4058:			; <UNDEFINED> instruction: 0xf8db701a
    405c:	adcmi	r3, r3, #0
    4060:			; <UNDEFINED> instruction: 0xf8dfd3e5
    4064:	tstcs	r0, r8, lsl #22
    4068:	ldrbtmi	r7, [sl], #-25	; 0xffffffe7
    406c:	blcs	1e2c0 <setlogin@@Base+0x124b8>
    4070:	sbcshi	pc, r2, r0, asr #32
    4074:	ldmdavc	fp, {r0, r1, r2, r8, r9, fp, ip, pc}
    4078:	bcs	4b9e8 <setlogin@@Base+0x3fbe0>
    407c:	adcshi	pc, r7, r0, asr #4
    4080:			; <UNDEFINED> instruction: 0xf0002b45
    4084:			; <UNDEFINED> instruction: 0xf89a8363
    4088:	bcs	28c090 <setlogin@@Base+0x280288>
    408c:			; <UNDEFINED> instruction: 0xf8dbd106
    4090:	andcs	r3, r0, #0
    4094:	stccs	8, cr15, [r1], {3}
    4098:	ldmdavc	fp, {r0, r1, r2, r8, r9, fp, ip, pc}
    409c:	blcs	152bcc0 <setlogin@@Base+0x151feb8>
    40a0:	andvc	pc, r0, fp, asr #17
    40a4:	sbchi	pc, r4, r0, asr #32
    40a8:	vfnmsne.f64	d25, d12, d10
    40ac:	andmi	pc, r0, fp, asr #17
    40b0:	mcr	7, 0, pc, cr2, cr13, {7}	; <UNPREDICTABLE>
    40b4:	stmdavs	r3, {r1, r3, r4, r5, r6, fp, ip, sp, lr}
    40b8:			; <UNDEFINED> instruction: 0xf8334606
    40bc:	ldreq	r3, [r8, #-18]	; 0xffffffee
    40c0:	ldrhi	pc, [ip, -r0, asr #2]!
    40c4:	strtmi	r2, [r0], -sl, lsl #4
    40c8:			; <UNDEFINED> instruction: 0xf7fd4659
    40cc:			; <UNDEFINED> instruction: 0xf8dbed00
    40d0:	stmib	sp, {sp}^
    40d4:	bcs	44ec <fputs@plt+0x25b8>
    40d8:	ldrhi	pc, [r3, -r0]!
    40dc:			; <UNDEFINED> instruction: 0xf8cb1c55
    40e0:	ldmdavc	r2, {ip, lr}
    40e4:			; <UNDEFINED> instruction: 0xf0402a20
    40e8:	ldmib	sp, {r2, r3, r5, r8, r9, sl, pc}^
    40ec:	cfstrscs	mvf3, [r0], {4}
    40f0:			; <UNDEFINED> instruction: 0xf1b3bf08
    40f4:	svclt	0x00244f00
    40f8:	movwls	r2, #54016	; 0xd300
    40fc:	stmdals	sp, {r2, r9, ip, lr, pc}
    4100:			; <UNDEFINED> instruction: 0xf0092101
    4104:	andls	pc, sp, r9, ror #29
    4108:	strtmi	r9, [r8], -sl, lsl #22
    410c:	ldrbmi	r2, [r9], -sl, lsl #4
    4110:	ldreq	pc, [r4], #-419	; 0xfffffe5d
    4114:	adcvs	r9, r3, r4, lsl #22
    4118:	stcl	7, cr15, [sl, #-1012]!	; 0xfffffc0c
    411c:	ldrdcc	pc, [r0], -fp
    4120:	blcs	1c4a8 <setlogin@@Base+0x106a0>
    4124:	ldrhi	pc, [r0, -r0]
    4128:			; <UNDEFINED> instruction: 0xf8cb1c5a
    412c:	ldmdavc	r9, {sp}
    4130:	ldrcs	pc, [pc, #-580]!	; 3ef4 <fputs@plt+0x1fc0>
    4134:	streq	pc, [pc, #-704]	; 3e7c <fputs@plt+0x1f48>
    4138:	svclt	0x009842a8
    413c:			; <UNDEFINED> instruction: 0xf0402920
    4140:	ldmdavc	r9, {r0, r1, r8, r9, sl, pc}^
    4144:			; <UNDEFINED> instruction: 0xf8336833
    4148:	ldreq	r3, [r9, #-17]	; 0xffffffef
    414c:	ldrhi	pc, [fp, -r0, asr #2]
    4150:			; <UNDEFINED> instruction: 0x46594610
    4154:			; <UNDEFINED> instruction: 0xf7fd220a
    4158:			; <UNDEFINED> instruction: 0xf8dbecba
    415c:	strmi	r3, [r6], -r0
    4160:			; <UNDEFINED> instruction: 0xf0002b00
    4164:	mrrcne	7, 2, r8, r8, cr5	; <UNPREDICTABLE>
    4168:	andeq	pc, r0, fp, asr #17
    416c:	blcs	8221e0 <setlogin@@Base+0x8163d8>
    4170:	ldrhi	pc, [lr, -r0, asr #32]
    4174:	addmi	r2, fp, #0, 6
    4178:			; <UNDEFINED> instruction: 0xf06f9b0d
    417c:	svclt	0x00084200
    4180:			; <UNDEFINED> instruction: 0x465942b2
    4184:	andeq	pc, sl, #79	; 0x4f
    4188:	svclt	0x00386026
    418c:	movwls	r2, #54016	; 0xd300
    4190:	stc	7, cr15, [lr, #-1012]!	; 0xfffffc0c
    4194:	ldrdcc	pc, [r0], -fp
    4198:	blcs	1c320 <setlogin@@Base+0x10518>
    419c:	strhi	pc, [fp, -r0]
    41a0:			; <UNDEFINED> instruction: 0xf8cb1c5a
    41a4:	ldmdavc	fp, {sp}
    41a8:	svclt	0x009842a8
    41ac:			; <UNDEFINED> instruction: 0xf0402b00
    41b0:	ldmdbls	r3, {r1, r8, r9, sl, pc}
    41b4:			; <UNDEFINED> instruction: 0xf8df2301
    41b8:			; <UNDEFINED> instruction: 0xee1829b8
    41bc:	stmdavs	r9, {r4, r7, r9, fp}
    41c0:			; <UNDEFINED> instruction: 0xf002447a
    41c4:	strcs	pc, [r0, #-2313]	; 0xfffff6f7
    41c8:	stmdbvs	r3!, {r3, r4, r8, r9, sl, sp, lr, pc}
    41cc:	cmnmi	r0, #50331648	; 0x3000000	; <UNPREDICTABLE>
    41d0:	orrmi	pc, r0, #683671552	; 0x28c00000
    41d4:			; <UNDEFINED> instruction: 0xf383fab3
    41d8:	tstls	r6, #1490944	; 0x16c000
    41dc:	blcs	2ae48 <setlogin@@Base+0x1f040>
    41e0:	mcrge	4, 7, pc, cr2, cr15, {3}	; <UNPREDICTABLE>
    41e4:	bleq	fe140620 <setlogin@@Base+0xfe134818>
    41e8:	tstls	r1, #1543503872	; 0x5c000000
    41ec:			; <UNDEFINED> instruction: 0xf8dfe6ed
    41f0:	stmdbls	ip, {r2, r7, r8, fp, sp}
    41f4:	ldmdavs	r2, {r1, r3, r7, fp, ip, lr}
    41f8:			; <UNDEFINED> instruction: 0xf0002a00
    41fc:	blcs	a45f0 <setlogin@@Base+0x987e8>
    4200:	strbhi	pc, [r6], -r0	; <UNPREDICTABLE>
    4204:	ldmdbcc	r0!, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}^
    4208:	bls	30c614 <setlogin@@Base+0x30080c>
    420c:	stmdavs	r0!, {r2, r4, r6, r7, fp, ip, lr}
    4210:	cdp2	0, 6, cr15, cr2, cr9, {0}
    4214:	ldrb	r6, [r6, r0, lsr #32]
    4218:			; <UNDEFINED> instruction: 0xf8df980c
    421c:			; <UNDEFINED> instruction: 0xf8df3960
    4220:	bls	1ca7a8 <setlogin@@Base+0x1be9a0>
    4224:	ldrbtmi	r5, [r9], #-2243	; 0xfffff73d
    4228:			; <UNDEFINED> instruction: 0xf0056818
    422c:			; <UNDEFINED> instruction: 0xe721fa57
    4230:	blcs	52f44 <setlogin@@Base+0x4713c>
    4234:	strthi	pc, [r3], -r0, lsl #4
    4238:	tstcs	r0, sl, lsl #20
    423c:	cdpne	6, 13, cr4, cr3, cr15, {0}
    4240:			; <UNDEFINED> instruction: 0xf8cb1c55
    4244:	ldrmi	r3, [lr], -r0
    4248:			; <UNDEFINED> instruction: 0x4634461a
    424c:	bleq	822ac <setlogin@@Base+0x764a4>
    4250:	teqeq	r0, #160, 2	; 0x28	; <UNPREDICTABLE>
    4254:	vqdmulh.s<illegal width 8>	d2, d0, d7
    4258:			; <UNDEFINED> instruction: 0xf06f8666
    425c:	rscseq	r0, pc, pc, lsr #2
    4260:	cdp2	0, 3, cr15, cr10, cr9, {0}
    4264:			; <UNDEFINED> instruction: 0x463242b5
    4268:	tsteq	r1, pc, asr #32	; <UNPREDICTABLE>
    426c:	streq	lr, [r0, -r7, asr #20]
    4270:	blls	538a24 <setlogin@@Base+0x52cc1c>
    4274:	ldmdblt	r3, {r0, r1, r3, r4, fp, sp, lr}
    4278:	b	9eaee0 <setlogin@@Base+0x9df0d8>
    427c:	ldmdavc	r3!, {r0, r1, r8, r9, sl}
    4280:			; <UNDEFINED> instruction: 0xf8cb3402
    4284:	blcs	81428c <setlogin@@Base+0x808484>
    4288:	ldrbthi	pc, [sl], -r0, asr #32	; <UNPREDICTABLE>
    428c:	ldc	7, cr15, [r4, #-1012]	; 0xfffffc0c
    4290:	stmdavs	r3, {r1, r4, r5, r6, fp, ip, sp, lr}
    4294:	andscc	pc, r2, r3, lsr r8	; <UNPREDICTABLE>
    4298:			; <UNDEFINED> instruction: 0xf140051b
    429c:	strtmi	r8, [r0], -fp, ror #12
    42a0:	ldrbmi	r2, [r9], -sl, lsl #4
    42a4:	ldc	7, cr15, [r2], {253}	; 0xfd
    42a8:	ldrdmi	pc, [r0], -fp
    42ac:	stccs	0, cr9, [r0], {14}
    42b0:	strbthi	pc, [r3], -r0	; <UNPREDICTABLE>
    42b4:			; <UNDEFINED> instruction: 0xf8cb1c62
    42b8:	stmdavc	r3!, {sp}
    42bc:	andls	r4, r4, #22020096	; 0x1500000
    42c0:			; <UNDEFINED> instruction: 0xf0402b20
    42c4:	blls	3a5c34 <setlogin@@Base+0x399e2c>
    42c8:	smlabtcc	r8, sp, r9, lr
    42cc:	ldrdeq	lr, [r8, -sp]
    42d0:			; <UNDEFINED> instruction: 0xf1712800
    42d4:	vsubw.s8	q8, q0, d0
    42d8:	stmdavc	r3!, {r0, r3, r4, r6, r9, sl, pc}^
    42dc:			; <UNDEFINED> instruction: 0xf0002b00
    42e0:			; <UNDEFINED> instruction: 0x212f8658
    42e4:			; <UNDEFINED> instruction: 0xf7fd4610
    42e8:	stmdacs	r0, {r2, r3, r4, r5, r6, r8, r9, fp, sp, lr, pc}
    42ec:	ldrbhi	pc, [r1], -r0, asr #32	; <UNPREDICTABLE>
    42f0:	blcs	ba2484 <setlogin@@Base+0xb9667c>
    42f4:	stmdavc	fp!, {r0, r1, r8, ip, lr, pc}^
    42f8:			; <UNDEFINED> instruction: 0xf0002b00
    42fc:	stmdavc	r3!, {r1, r3, r6, r9, sl, pc}^
    4300:	tstle	r7, lr, lsr #22
    4304:	ldmdavc	r3, {r2, r9, fp, ip, pc}^
    4308:	tstle	r3, lr, lsr #22
    430c:	blcs	22560 <setlogin@@Base+0x16758>
    4310:	ldrthi	pc, [pc], -r0	; <UNPREDICTABLE>
    4314:	blcs	2af60 <setlogin@@Base+0x1f158>
    4318:	orrshi	pc, r0, r0, asr #32
    431c:	blcs	2af7c <setlogin@@Base+0x1f174>
    4320:	addhi	pc, r2, r0
    4324:			; <UNDEFINED> instruction: 0xf7fd9810
    4328:			; <UNDEFINED> instruction: 0xf8dfec22
    432c:	ldrbtmi	r5, [sp], #-2136	; 0xfffff7a8
    4330:	stmdals	r4, {r2, r9, sl, lr}
    4334:	ldc	7, cr15, [sl], {253}	; 0xfd
    4338:	strmi	r6, [r4], #-2603	; 0xfffff5d5
    433c:	ldrbtcc	r6, [sl], #2536	; 0x9e8
    4340:			; <UNDEFINED> instruction: 0xf0c042a3
    4344:	bls	424b2c <setlogin@@Base+0x418d24>
    4348:	blcs	be239c <setlogin@@Base+0xbd6594>
    434c:			; <UNDEFINED> instruction: 0x81acf040
    4350:	blcs	224a4 <setlogin@@Base+0x1669c>
    4354:			; <UNDEFINED> instruction: 0x81a8f040
    4358:	stmdacc	ip!, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}
    435c:	bls	115550 <setlogin@@Base+0x109748>
    4360:			; <UNDEFINED> instruction: 0xf8df4621
    4364:	stmib	sp, {r3, r5, fp, ip, lr}^
    4368:	ldrbtmi	r3, [sp], #-514	; 0xfffffdfe
    436c:			; <UNDEFINED> instruction: 0xf04f9a10
    4370:	strls	r3, [r0, #-1023]	; 0xfffffc01
    4374:	andcs	r9, r1, #268435456	; 0x10000000
    4378:	stcl	7, cr15, [ip], #-1012	; 0xfffffc0c
    437c:	ldmdacc	r0, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}
    4380:	ldrdcs	pc, [r0], -fp
    4384:	ldmibvs	fp, {r0, r1, r3, r4, r5, r6, sl, lr}^
    4388:	cdp	2, 0, cr9, cr8, cr4, {0}
    438c:			; <UNDEFINED> instruction: 0xf8df3a10
    4390:	andcs	r3, r3, r4, lsl #16
    4394:	cdpls	13, 1, cr9, cr2, cr12, {0}
    4398:	bne	43fc00 <setlogin@@Base+0x433df8>
    439c:	blls	11a754 <setlogin@@Base+0x10e94c>
    43a0:	eorvs	r4, r3, r2, lsr r6
    43a4:	stc	7, cr15, [lr], {253}	; 0xfd
    43a8:	ldmdavc	fp, {r0, r1, r2, r8, r9, fp, ip, pc}
    43ac:	andsls	r2, r5, r4, asr #22
    43b0:			; <UNDEFINED> instruction: 0xf8dfd13e
    43b4:	stmiapl	fp!, {r2, r5, r7, r8, r9, sl, ip, sp}^
    43b8:	blcs	1e42c <setlogin@@Base+0x12624>
    43bc:	strbhi	pc, [r7]	; <UNPREDICTABLE>
    43c0:			; <UNDEFINED> instruction: 0xf0402800
    43c4:	ldmdbvs	r3!, {r0, r1, r2, r4, r7, r8, pc}
    43c8:	cmnmi	r0, #50331648	; 0x3000000	; <UNPREDICTABLE>
    43cc:	svcmi	0x0080f5b3
    43d0:	cmnhi	r2, r0	; <UNPREDICTABLE>
    43d4:	ldc	7, cr15, [r6, #1012]	; 0x3f4
    43d8:	andvs	r2, r3, r4, lsl r3
    43dc:			; <UNDEFINED> instruction: 0xf7fd4618
    43e0:	vnmls.f32	s28, s17, s25
    43e4:			; <UNDEFINED> instruction: 0x46021a10
    43e8:	sbfxeq	pc, pc, #17, #13
    43ec:			; <UNDEFINED> instruction: 0xf7fe4478
    43f0:	strbt	pc, [r8], pc, lsl #29	; <UNPREDICTABLE>
    43f4:			; <UNDEFINED> instruction: 0xf60d9b0a
    43f8:	cdpne	4, 13, cr1, cr9, cr12, {0}
    43fc:			; <UNDEFINED> instruction: 0x379cf8df
    4400:	strtmi	r9, [r0], -r0, lsl #2
    4404:	vst3.16	{d20-d22}, [pc :256], fp
    4408:			; <UNDEFINED> instruction: 0xf0056100
    440c:			; <UNDEFINED> instruction: 0x4620f8f5
    4410:	bl	feb4240c <setlogin@@Base+0xfeb36604>
    4414:	tstcs	r2, r2, lsr #12
    4418:	cfmsub32	mvax0, mvfx4, mvfx8, mvfx3
    441c:			; <UNDEFINED> instruction: 0xf0010a90
    4420:	blls	204394 <setlogin@@Base+0x1f858c>
    4424:	usat	r7, #10, fp, lsl #16
    4428:	vmov.32	d8[0], r9
    442c:			; <UNDEFINED> instruction: 0xe7ae3a10
    4430:	orreq	pc, r0, #71	; 0x47
    4434:	beq	43fc9c <setlogin@@Base+0x433e94>
    4438:	tstls	sl, #1073741840	; 0x40000010
    443c:			; <UNDEFINED> instruction: 0xf7fd461a
    4440:	strmi	lr, [r3], -sl, ror #23
    4444:	cdp	3, 0, cr3, cr9, cr1, {0}
    4448:			; <UNDEFINED> instruction: 0xf0000a10
    444c:	ldmdbls	r3, {r0, r4, r5, r8, pc}
    4450:			; <UNDEFINED> instruction: 0xf8df2301
    4454:	cdp	7, 1, cr2, cr8, cr12, {2}
    4458:	stmdavs	r9, {r4, r7, r9, fp}
    445c:			; <UNDEFINED> instruction: 0xf001447a
    4460:	mrc	15, 0, APSR_nzcv, cr9, cr11, {5}
    4464:	vmov	r1, s18
    4468:	vst1.32	{d16-d17}, [pc :64], r0
    446c:			; <UNDEFINED> instruction: 0xf7fe4280
    4470:	andls	pc, fp, r5, asr #30
    4474:			; <UNDEFINED> instruction: 0xf0002800
    4478:			; <UNDEFINED> instruction: 0xf8df8221
    447c:	andcs	r3, r0, r8, lsr #14
    4480:	tstcs	r0, fp, lsl #20
    4484:	cfldrsls	mvf4, [r2, #-492]	; 0xfffffe14
    4488:	stccc	8, cr6, [r8, #-328]	; 0xfffffeb8
    448c:	stmib	r5, {r0, r1, r3, r4, r7, fp, sp, lr}^
    4490:			; <UNDEFINED> instruction: 0xf8cb0100
    4494:	blcs	c49c <setlogin@@Base+0x694>
    4498:	bicshi	pc, r8, r0, asr #32
    449c:	ldrdeq	pc, [r0], -r8
    44a0:			; <UNDEFINED> instruction: 0xf990f002
    44a4:	strcc	lr, [r8], #-2525	; 0xfffff623
    44a8:			; <UNDEFINED> instruction: 0xf0004323
    44ac:	blls	2e4ce4 <setlogin@@Base+0x2d8edc>
    44b0:	ldrls	r2, [ip, -r0, lsl #8]
    44b4:	rsbsge	pc, r4, sp, asr #17
    44b8:	movwcs	r6, #2078	; 0x81e
    44bc:	strcc	lr, [r4], #-2509	; 0xfffff633
    44c0:			; <UNDEFINED> instruction: 0xf8df2301
    44c4:	movwls	r4, #63204	; 0xf6e4
    44c8:	ldrbtmi	r2, [ip], #-768	; 0xfffffd00
    44cc:	ldmib	sp, {r0, r1, r2, r3, r4, r9, sl, lr}^
    44d0:	ldrbne	r2, [r1, r4, lsl #6]!
    44d4:			; <UNDEFINED> instruction: 0x46b24630
    44d8:	ldc2	0, cr15, [r2, #-36]	; 0xffffffdc
    44dc:	movwcs	lr, #35293	; 0x89dd
    44e0:	orrmi	r4, fp, r2, lsl #5
    44e4:	bls	1343e4 <setlogin@@Base+0x1285dc>
    44e8:	bne	fe7ab128 <setlogin@@Base+0xfe79f320>
    44ec:	ldrdcs	pc, [r0], -fp
    44f0:	svclt	0x00b84437
    44f4:			; <UNDEFINED> instruction: 0xf8d846b2
    44f8:	ldrbmi	r1, [r3], -r0
    44fc:	strls	r4, [r1, #-1608]	; 0xfffff9b8
    4500:			; <UNDEFINED> instruction: 0xf0019400
    4504:	stmdacs	r0, {r0, r1, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}
    4508:	andshi	pc, lr, #0
    450c:	beq	3f3bc <setlogin@@Base+0x335b4>
    4510:	ldrdcs	pc, [r0], -fp
    4514:	svceq	0x0000f1ba
    4518:			; <UNDEFINED> instruction: 0xf8cb4402
    451c:	stclle	0, cr2, [sl]
    4520:	ldmdavs	lr, {r0, r1, r3, r8, r9, fp, ip, pc}
    4524:	ldrhtle	r4, [pc], #-46
    4528:	ldrdeq	lr, [r4, -sp]
    452c:	movwcs	r4, #1586	; 0x632
    4530:	stc2l	0, cr15, [r6], #36	; 0x24
    4534:	smlabteq	r4, sp, r9, lr
    4538:	ldrdeq	lr, [r8, -sp]
    453c:	movwcs	lr, #18909	; 0x49dd
    4540:	orrmi	r4, fp, r2, lsl #5
    4544:			; <UNDEFINED> instruction: 0xf8d8dbc3
    4548:	ldrtmi	r0, [ip], -r0
    454c:	bvc	73ecc8 <setlogin@@Base+0x732ec0>
    4550:			; <UNDEFINED> instruction: 0xf97cf002
    4554:			; <UNDEFINED> instruction: 0xf0039b0f
    4558:	stccs	3, cr0, [r0], {1}
    455c:	movwcs	fp, #3848	; 0xf08
    4560:			; <UNDEFINED> instruction: 0xf0402b00
    4564:	blls	3e4b78 <setlogin@@Base+0x3d8d70>
    4568:			; <UNDEFINED> instruction: 0xf0002b01
    456c:	blls	524c34 <setlogin@@Base+0x518e2c>
    4570:	blls	69e5e0 <setlogin@@Base+0x6927d8>
    4574:	svclt	0x00181afb
    4578:	bcs	d184 <setlogin@@Base+0x137c>
    457c:	msrhi	CPSR_fs, r0
    4580:	bcs	2addc <setlogin@@Base+0x1efd4>
    4584:	movwcs	fp, #7944	; 0x1f08
    4588:			; <UNDEFINED> instruction: 0xf0402b00
    458c:	mnf<illegal precision>m	f0, f3
    4590:			; <UNDEFINED> instruction: 0xf7fd0a10
    4594:	andcc	lr, r1, sl, ror fp
    4598:	cmnhi	sl, r0	; <UNPREDICTABLE>
    459c:	ldc2	7, cr15, [r0], {254}	; 0xfe
    45a0:			; <UNDEFINED> instruction: 0x3608f8df
    45a4:	stmdbls	sp, {r0, r1, r2, r3, r9, fp, ip, pc}
    45a8:			; <UNDEFINED> instruction: 0xf1a2447b
    45ac:	blx	fec84db8 <setlogin@@Base+0xfec78fb0>
    45b0:	stmdbcs	r0, {r1, r7, r9, ip, sp, lr, pc}
    45b4:	b	13de828 <setlogin@@Base+0x13d2a20>
    45b8:	svclt	0x00081252
    45bc:	ldrmi	r2, [r4], -r0, lsl #4
    45c0:	stmiblt	ip!, {r0, r1, r4, r7, r8, fp, ip, sp, pc}
    45c4:	blcs	2b208 <setlogin@@Base+0x1f400>
    45c8:	msrhi	SPSR_fsc, r0
    45cc:			; <UNDEFINED> instruction: 0xf47f2b01
    45d0:	ldmdbls	r3, {r1, r3, r4, r5, r6, r7, r8, sl, fp, sp, pc}
    45d4:			; <UNDEFINED> instruction: 0xf8df2301
    45d8:	mrc	5, 0, r2, cr8, cr8, {6}
    45dc:	stmdavs	r9, {r4, r7, r9, fp}
    45e0:			; <UNDEFINED> instruction: 0xf001447a
    45e4:	strb	pc, [lr, #3833]!	; 0xef9	; <UNPREDICTABLE>
    45e8:			; <UNDEFINED> instruction: 0xf9b6f001
    45ec:	rscle	r2, r9, r0, lsl #24
    45f0:	vnmls.f64	d9, d8, d10
    45f4:			; <UNDEFINED> instruction: 0xf1a30a10
    45f8:			; <UNDEFINED> instruction: 0xf7fd0114
    45fc:	andcc	lr, r1, r0, lsr ip
    4600:	movwcs	fp, #3868	; 0xf1c
    4604:	mvnle	r9, sp, lsl #6
    4608:	ldcl	7, cr15, [ip], #-1012	; 0xfffffc0c
    460c:	movwls	r2, #54016	; 0xd300
    4610:			; <UNDEFINED> instruction: 0xf7fd6800
    4614:			; <UNDEFINED> instruction: 0xee18e992
    4618:			; <UNDEFINED> instruction: 0x46021a10
    461c:	ldreq	pc, [r4, #2271]	; 0x8df
    4620:			; <UNDEFINED> instruction: 0xf7fe4478
    4624:	strb	pc, [lr, #3445]	; 0xd75	; <UNPREDICTABLE>
    4628:	blls	3de798 <setlogin@@Base+0x3d2990>
    462c:	eorle	r2, r9, r1, lsl #22
    4630:	strcs	r9, [r0, -fp, lsl #22]
    4634:	andcs	pc, r0, fp, asr #17
    4638:			; <UNDEFINED> instruction: 0xe775681e
    463c:	strcs	r9, [r0], #-2839	; 0xfffff4e9
    4640:	svcne	0x001e9904
    4644:	andsge	pc, r0, sp, asr #17
    4648:	ldrtmi	r4, [r8], r2, asr #13
    464c:	svcls	0x00114635
    4650:	strcc	lr, [r1], #-5
    4654:			; <UNDEFINED> instruction: 0xf00042bc
    4658:			; <UNDEFINED> instruction: 0xf8db80a6
    465c:			; <UNDEFINED> instruction: 0xf8551000
    4660:	andcs	r0, r0, #4, 30
    4664:	bl	1cc2660 <setlogin@@Base+0x1cb6858>
    4668:	mvnsle	r2, r0, lsl #16
    466c:			; <UNDEFINED> instruction: 0x46479b11
    4670:			; <UNDEFINED> instruction: 0xf8dd46d0
    4674:	addsmi	sl, ip, #16
    4678:	ldrhi	pc, [r4], #128	; 0x80
    467c:	ldrdcc	pc, [r0], -fp
    4680:	strb	r9, [fp], -r4, lsl #6
    4684:	bne	43fef0 <setlogin@@Base+0x4340e8>
    4688:	mrc	6, 0, r4, cr8, cr11, {1}
    468c:			; <UNDEFINED> instruction: 0xf0010a90
    4690:	adcsmi	pc, r8, #2608	; 0xa30
    4694:			; <UNDEFINED> instruction: 0xf7fdd005
    4698:	stmdavs	r3, {r1, r2, r4, r5, sl, fp, sp, lr, pc}
    469c:	movwcs	r9, #795	; 0x31b
    46a0:	blls	2e92e4 <setlogin@@Base+0x2dd4dc>
    46a4:			; <UNDEFINED> instruction: 0xe7c3685a
    46a8:	strcc	pc, [ip, #-2271]	; 0xfffff721
    46ac:			; <UNDEFINED> instruction: 0xe656447b
    46b0:	stc	7, cr15, [r8], #-1012	; 0xfffffc0c
    46b4:	ldr	r6, [r2], r0, lsl #16
    46b8:	ldmdavs	sp, {r2, r4, r8, r9, fp, ip, pc}
    46bc:			; <UNDEFINED> instruction: 0xf0402d00
    46c0:	mrc	1, 0, r8, cr8, cr5, {0}
    46c4:	vmovls	s20, r0
    46c8:	stc2l	0, cr15, [r6, #4]
    46cc:			; <UNDEFINED> instruction: 0xf1a69a19
    46d0:			; <UNDEFINED> instruction: 0x46210418
    46d4:	andcs	r4, r1, r3, lsl #12
    46d8:	ldccc	8, cr15, [r8], {70}	; 0x46
    46dc:	stc2	7, cr15, [lr], {255}	; 0xff
    46e0:	blcs	2b31c <setlogin@@Base+0x1f514>
    46e4:	bicshi	pc, r7, #64	; 0x40
    46e8:	movwcs	r6, #2080	; 0x820
    46ec:			; <UNDEFINED> instruction: 0xf7fd930d
    46f0:	strb	lr, [r8, #-2550]!	; 0xfffff60a
    46f4:	beq	43ff5c <setlogin@@Base+0x434154>
    46f8:	mvnvc	pc, r7, asr #8
    46fc:	stmdb	r2!, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    4700:	svclt	0x00183001
    4704:	sbcsle	r2, r3, r1, lsl #10
    4708:	beq	43ff70 <setlogin@@Base+0x434168>
    470c:			; <UNDEFINED> instruction: 0xf0019e0a
    4710:	bls	683da4 <setlogin@@Base+0x677f9c>
    4714:	ldreq	pc, [r8], #-422	; 0xfffffe5a
    4718:	strmi	r4, [r3], -r1, lsr #12
    471c:			; <UNDEFINED> instruction: 0xf8462001
    4720:			; <UNDEFINED> instruction: 0xf7ff3c18
    4724:	blls	3836d8 <setlogin@@Base+0x3778d0>
    4728:	cmnle	r5, r0, lsl #22
    472c:	ldrtmi	r6, [r9], -r0, lsr #16
    4730:	stmib	r8!, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    4734:			; <UNDEFINED> instruction: 0xf7fde7d8
    4738:			; <UNDEFINED> instruction: 0x4620e9d2
    473c:	ldc2	0, cr15, [r6, #-4]!
    4740:	ldrdcc	pc, [r0], -fp
    4744:	stmib	r5, {r2, r8, r9, ip, pc}^
    4748:	ldrb	r0, [ip, #1031]!	; 0x407
    474c:			; <UNDEFINED> instruction: 0xf8df9b13
    4750:	cdp	4, 1, cr2, cr8, cr12, {3}
    4754:	ldmdavs	r9, {r4, r7, r9, fp}
    4758:	movwcs	r4, #5242	; 0x147a
    475c:	cdp2	0, 3, cr15, cr12, cr1, {0}
    4760:	cmplt	fp, r1, lsl fp
    4764:			; <UNDEFINED> instruction: 0x9c179a11
    4768:	streq	lr, [r2, #2820]	; 0xb04
    476c:	bleq	1428c4 <setlogin@@Base+0x136abc>
    4770:	ldmib	r4!, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    4774:	mvnsle	r4, r5, lsr #5
    4778:			; <UNDEFINED> instruction: 0xf7fd9817
    477c:			; <UNDEFINED> instruction: 0xf8dfe9b0
    4780:	bmi	ffb89888 <setlogin@@Base+0xffb7da80>
    4784:	orrpl	pc, r8, #54525952	; 0x3400000
    4788:	movwcc	r4, #50297	; 0xc479
    478c:	ldmdavs	r1, {r1, r3, r7, fp, ip, lr}
    4790:	subsmi	r6, r1, sl, lsl r8
    4794:	strhi	pc, [sl], #-64	; 0xffffffc0
    4798:	cfstr32pl	mvfx15, [r8, #52]	; 0x34
    479c:	ldc	0, cr11, [sp], #20
    47a0:	pop	{r2, r8, r9, fp, pc}
    47a4:			; <UNDEFINED> instruction: 0xf8df8ff0
    47a8:			; <UNDEFINED> instruction: 0x4633541c
    47ac:	mrcls	4, 0, r4, cr1, cr13, {3}
    47b0:	strcs	r4, [r0], #-1688	; 0xfffff968
    47b4:	svceq	0x0004f858
    47b8:			; <UNDEFINED> instruction: 0xf7fd3401
    47bc:	adcsmi	lr, r4, #144, 18	; 0x240000
    47c0:	ldmdals	r7, {r3, r4, r5, r6, r7, r8, r9, ip, lr, pc}
    47c4:	stmib	sl, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    47c8:			; <UNDEFINED> instruction: 0x462948ff
    47cc:			; <UNDEFINED> instruction: 0xf7fe4478
    47d0:	mulcs	r1, pc, ip	; <UNPREDICTABLE>
    47d4:	bl	fe2c27d0 <setlogin@@Base+0xfe2b69c8>
    47d8:	bcs	2b034 <setlogin@@Base+0x1f22c>
    47dc:	movwcs	fp, #3848	; 0xf08
    47e0:			; <UNDEFINED> instruction: 0xf43f2b00
    47e4:	blls	63033c <setlogin@@Base+0x624534>
    47e8:	beq	440054 <setlogin@@Base+0x43424c>
    47ec:	tsteq	r3, r7, lsr #20
    47f0:	bl	1c427ec <setlogin@@Base+0x1c369e4>
    47f4:			; <UNDEFINED> instruction: 0xf43f2800
    47f8:			; <UNDEFINED> instruction: 0xf7fdaeca
    47fc:	movwcs	lr, #11140	; 0x2b84
    4800:	stmdavs	r0, {r0, r1, r2, r3, r8, r9, ip, pc}
    4804:	ldm	r8, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    4808:	bne	440070 <setlogin@@Base+0x434268>
    480c:	stmiami	pc!, {r1, r9, sl, lr}^	; <UNPREDICTABLE>
    4810:			; <UNDEFINED> instruction: 0xf7fe4478
    4814:	sxtah	pc, sl, sp, ror #24	; <UNPREDICTABLE>
    4818:			; <UNDEFINED> instruction: 0xf1a39b0a
    481c:			; <UNDEFINED> instruction: 0xf8530114
    4820:			; <UNDEFINED> instruction: 0xf7fd0c18
    4824:	andcc	lr, r1, ip, lsl fp
    4828:			; <UNDEFINED> instruction: 0xf7fdd180
    482c:	stmdavs	r1!, {r2, r3, r5, r6, r8, r9, fp, sp, lr, pc}
    4830:	stmdavs	r0, {r2, r8, ip, pc}
    4834:	stm	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    4838:	strmi	r9, [r2], -r4, lsl #18
    483c:	ldrbtmi	r4, [r8], #-2276	; 0xfffff71c
    4840:	stc2l	7, cr15, [r6], #-1016	; 0xfffffc08
    4844:			; <UNDEFINED> instruction: 0xf43f2d00
    4848:	strb	sl, [pc, -pc, asr #30]!
    484c:	ldmib	sp, {r5, fp, sp, lr}^
    4850:	strls	r2, [r0, #-776]	; 0xfffffcf8
    4854:			; <UNDEFINED> instruction: 0xf848f001
    4858:	ldmdals	r0, {r5, r9, sl, sp, lr, pc}
    485c:	ldc2l	7, cr15, [r2], {254}	; 0xfe
    4860:	bllt	fe082864 <setlogin@@Base+0xfe076a5c>
    4864:	stmdb	r4!, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    4868:	bllt	1c4286c <setlogin@@Base+0x1c36a64>
    486c:	vnmls.f64	d9, d9, d11
    4870:	vmov	r1, s16
    4874:	ldmdavs	sl, {r4, r7, r9, fp}^
    4878:			; <UNDEFINED> instruction: 0xf0014623
    487c:	adcmi	pc, r0, #11072	; 0x2b40
    4880:			; <UNDEFINED> instruction: 0xf7fdd025
    4884:	stmdavs	r3, {r6, r8, r9, fp, sp, lr, pc}
    4888:	movwcs	r9, #795	; 0x31b
    488c:	strbt	r9, [lr], -pc, lsl #6
    4890:	bl	e4288c <setlogin@@Base+0xe36a84>
    4894:	tstls	fp, #196608	; 0x30000
    4898:	blx	4c289a <setlogin@@Base+0x4b6a92>
    489c:	ldrbtmi	r4, [fp], #-3021	; 0xfffff433
    48a0:	blcs	1eb14 <setlogin@@Base+0x12d0c>
    48a4:	ldmdals	fp, {r0, r2, r3, r6, r8, ip, lr, pc}
    48a8:	stmda	r6, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    48ac:	bne	440114 <setlogin@@Base+0x43430c>
    48b0:	stmiami	r9, {r1, r9, sl, lr}^
    48b4:			; <UNDEFINED> instruction: 0xf7fe4478
    48b8:	str	pc, [r4], #3115	; 0xc2b
    48bc:	beq	440128 <setlogin@@Base+0x434320>
    48c0:	stmib	r2!, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    48c4:			; <UNDEFINED> instruction: 0xf8d8e47f
    48c8:			; <UNDEFINED> instruction: 0xf0010000
    48cc:	blls	5847d0 <setlogin@@Base+0x5789c8>
    48d0:	blls	4b2f24 <setlogin@@Base+0x4a711c>
    48d4:	vst2.8	{d6,d8}, [r3 :64], fp
    48d8:			; <UNDEFINED> instruction: 0xf5b34370
    48dc:	andle	r4, fp, r0, lsl #30
    48e0:	ldmdavs	fp, {r2, r4, r8, r9, fp, ip, pc}
    48e4:	movwcs	fp, #6563	; 0x19a3
    48e8:	ldrb	r9, [r0], -pc, lsl #6
    48ec:	beq	440154 <setlogin@@Base+0x43434c>
    48f0:			; <UNDEFINED> instruction: 0xf7fd4639
    48f4:	str	lr, [r7, -r8, asr #17]
    48f8:	beq	440164 <setlogin@@Base+0x43435c>
    48fc:	movwcs	lr, #35293	; 0x89dd
    4900:	b	fee428fc <setlogin@@Base+0xfee36af4>
    4904:			; <UNDEFINED> instruction: 0xf0402800
    4908:	movwcs	r8, #4817	; 0x12d1
    490c:	strt	r9, [lr], -pc, lsl #6
    4910:	movwls	r2, #62209	; 0xf301
    4914:	beq	440180 <setlogin@@Base+0x434378>
    4918:			; <UNDEFINED> instruction: 0xf7fd4639
    491c:	stmdacs	r0, {r2, r3, r4, r6, r7, r9, fp, sp, lr, pc}
    4920:	mrcge	4, 1, APSR_nzcv, cr5, cr15, {1}
    4924:	b	ffbc2920 <setlogin@@Base+0xffbb6b18>
    4928:	movwls	r2, #62210	; 0xf302
    492c:			; <UNDEFINED> instruction: 0xf7fd6800
    4930:	cdp	8, 1, cr14, cr8, cr4, {0}
    4934:			; <UNDEFINED> instruction: 0x46021a10
    4938:	ldrbtmi	r4, [r8], #-2216	; 0xfffff758
    493c:	blx	ffa4293e <setlogin@@Base+0xffa36b36>
    4940:			; <UNDEFINED> instruction: 0xf001e625
    4944:	str	pc, [lr, r9, lsl #16]!
    4948:	b	ff742944 <setlogin@@Base+0xff736b3c>
    494c:			; <UNDEFINED> instruction: 0xf7fc6800
    4950:			; <UNDEFINED> instruction: 0x4601eff4
    4954:	ldrbtmi	r4, [r8], #-2210	; 0xfffff75e
    4958:	blx	ff6c295a <setlogin@@Base+0xff6b6b52>
    495c:			; <UNDEFINED> instruction: 0xf7fd2001
    4960:	bls	4bf480 <setlogin@@Base+0x4b3678>
    4964:			; <UNDEFINED> instruction: 0xf1a29819
    4968:			; <UNDEFINED> instruction: 0xf1a20514
    496c:	stmdb	r2, {r2, r3, r8, r9, fp}^
    4970:	strls	r3, [fp, #-773]	; 0xfffffcfb
    4974:	stccc	8, cr15, [ip], {66}	; 0x42
    4978:	stccc	8, cr15, [r8], {66}	; 0x42
    497c:	stmib	sl!, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    4980:	stmdacs	r0, {r2, r9, sl, lr}
    4984:	sbchi	pc, r7, r0
    4988:			; <UNDEFINED> instruction: 0x4629465a
    498c:			; <UNDEFINED> instruction: 0xff20f7fd
    4990:	stmdacs	r0, {r0, r2, r3, ip, pc}
    4994:	rschi	pc, r3, #64	; 0x40
    4998:	ldrdcc	pc, [r0], -fp
    499c:			; <UNDEFINED> instruction: 0xf0002b00
    49a0:			; <UNDEFINED> instruction: 0xf8cd8091
    49a4:	bls	2f0a4c <setlogin@@Base+0x2e4c44>
    49a8:	orrmi	pc, r0, r3, lsl #2
    49ac:			; <UNDEFINED> instruction: 0xf04f3901
    49b0:	strbmi	r0, [pc], -r0, lsl #18
    49b4:	ldmdavs	r2, {r2, r3, r6, r9, sl, lr}
    49b8:	ldmcc	pc!, {r0, r1, r2, r3, r6, ip, sp, lr, pc}^	; <UNPREDICTABLE>
    49bc:	strmi	pc, [r0, #-111]	; 0xffffff91
    49c0:			; <UNDEFINED> instruction: 0xf8523b01
    49c4:	bls	29ca50 <setlogin@@Base+0x290c48>
    49c8:	ldcpl	0, cr6, [r3, #-76]!	; 0xffffffb4
    49cc:	subsle	r2, r3, r0, lsl #22
    49d0:	blcs	893744 <setlogin@@Base+0x88793c>
    49d4:	msrhi	R12_usr, r0
    49d8:			; <UNDEFINED> instruction: 0xf013e8df
    49dc:	tsteq	ip, r8, lsl r1
    49e0:	smulwbeq	r2, r4, r0
    49e4:			; <UNDEFINED> instruction: 0x01220122
    49e8:			; <UNDEFINED> instruction: 0x01220122
    49ec:			; <UNDEFINED> instruction: 0x01220122
    49f0:			; <UNDEFINED> instruction: 0x01220122
    49f4:			; <UNDEFINED> instruction: 0x01220122
    49f8:			; <UNDEFINED> instruction: 0x01220122
    49fc:			; <UNDEFINED> instruction: 0x01220122
    4a00:			; <UNDEFINED> instruction: 0x01220122
    4a04:			; <UNDEFINED> instruction: 0x01220122
    4a08:			; <UNDEFINED> instruction: 0x01220122
    4a0c:			; <UNDEFINED> instruction: 0x01220122
    4a10:			; <UNDEFINED> instruction: 0x01220122
    4a14:			; <UNDEFINED> instruction: 0x01220122
    4a18:			; <UNDEFINED> instruction: 0x01220122
    4a1c:			; <UNDEFINED> instruction: 0x01220034
    4a20:	svccs	0x00000023
    4a24:	mrshi	pc, (UNDEF: 14)	; <UNPREDICTABLE>
    4a28:	tstcs	r1, r0, lsr #12
    4a2c:	blx	1540a58 <setlogin@@Base+0x1534c50>
    4a30:	strmi	r4, [r4], -r8, lsr #5
    4a34:	stmdbmi	fp!, {r0, r3, r6, r7, r8, ip, lr, pc}^
    4a38:	stmdami	fp!, {r1, r4, r5, r9, sl, lr}^
    4a3c:	ldrbtmi	r4, [r8], #-1145	; 0xfffffb87
    4a40:			; <UNDEFINED> instruction: 0xffbaf000
    4a44:	strtmi	r2, [r0], -r1, lsl #2
    4a48:	blx	11c0a74 <setlogin@@Base+0x11b4c6c>
    4a4c:	stmdblt	pc!, {r1, r7, r9, sl, lr}^	; <UNPREDICTABLE>
    4a50:	ldmdavc	fp, {r0, r1, r4, r5, r8, fp, ip}^
    4a54:			; <UNDEFINED> instruction: 0xf0002b7d
    4a58:	strbmi	r8, [r8], -ip, ror #1
    4a5c:			; <UNDEFINED> instruction: 0xf0092101
    4a60:			; <UNDEFINED> instruction: 0xf1b8fa3b
    4a64:	svclt	0x00083fff
    4a68:	strmi	r4, [r1], r0, lsr #13
    4a6c:	rscle	r4, r2, sl, lsr #11
    4a70:	ldcpl	6, cr4, [r3, #-336]!	; 0xfffffeb0
    4a74:			; <UNDEFINED> instruction: 0xd1ab2b00
    4a78:	svccc	0x00fff1b8
    4a7c:			; <UNDEFINED> instruction: 0xf047bf18
    4a80:	svccs	0x00000701
    4a84:	ldrdcs	sp, [pc, -r7]!
    4a88:			; <UNDEFINED> instruction: 0xf7fc4630
    4a8c:	stmdacs	r0, {r2, r5, r6, r7, r8, r9, sl, fp, sp, lr, pc}
    4a90:	mvnhi	pc, r0
    4a94:	blvc	82a9c <setlogin@@Base+0x76c94>
    4a98:	blx	ff7c0aa6 <setlogin@@Base+0xff7b4c9e>
    4a9c:			; <UNDEFINED> instruction: 0xf1a39b12
    4aa0:			; <UNDEFINED> instruction: 0xf1a30208
    4aa4:			; <UNDEFINED> instruction: 0xf7fd0110
    4aa8:	stmdacs	r0, {r0, r1, r4, r7, r9, sl, fp, ip, sp, lr, pc}
    4aac:	andhi	pc, lr, #64	; 0x40
    4ab0:			; <UNDEFINED> instruction: 0xf7fd4630
    4ab4:	blls	2beb0c <setlogin@@Base+0x2b2d04>
    4ab8:	blcs	1eb2c <setlogin@@Base+0x12d24>
    4abc:	svcge	0x0073f47f
    4ac0:	ldrdlt	pc, [r8], -sp	; <UNPREDICTABLE>
    4ac4:			; <UNDEFINED> instruction: 0xf8529a12
    4ac8:			; <UNDEFINED> instruction: 0xf8523c10
    4acc:	tstls	r7, #8, 24	; 0x800
    4ad0:	tstls	r1, r0, lsl #6
    4ad4:	ldccc	8, cr15, [r0], {66}	; 0x42
    4ad8:	stccc	8, cr15, [r8], {66}	; 0x42
    4adc:	mcrge	12, 1, r9, cr2, cr2, {0}
    4ae0:			; <UNDEFINED> instruction: 0xf854ad20
    4ae4:			; <UNDEFINED> instruction: 0xf7fc0c14
    4ae8:			; <UNDEFINED> instruction: 0xf854effa
    4aec:	strcs	r3, [r0], #-3080	; 0xfffff3f8
    4af0:	stmdavs	fp!, {r0, r1, r6, r8, ip, sp, pc}
    4af4:	eoreq	pc, r4, r3, asr r8	; <UNPREDICTABLE>
    4af8:			; <UNDEFINED> instruction: 0xf7fc3401
    4afc:	ldmdavs	r3!, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr, pc}
    4b00:	mvnsle	r4, #156, 4	; 0xc0000009
    4b04:			; <UNDEFINED> instruction: 0xf8539b12
    4b08:			; <UNDEFINED> instruction: 0xf7fc0c10
    4b0c:	blls	380ab4 <setlogin@@Base+0x374cac>
    4b10:			; <UNDEFINED> instruction: 0xf43f2b00
    4b14:	ldmdbmi	r5!, {r1, r3, r4, r6, r9, fp, sp, pc}
    4b18:	ldrbtmi	r4, [r9], #-2101	; 0xfffff7cb
    4b1c:	tstcc	r0, r8, ror r4
    4b20:			; <UNDEFINED> instruction: 0xff4af000
    4b24:	tstcs	r1, r0, lsr #12
    4b28:			; <UNDEFINED> instruction: 0xf9d6f009
    4b2c:	adcmi	r2, r8, #0, 14
    4b30:			; <UNDEFINED> instruction: 0xf47f4604
    4b34:	ldr	sl, [pc, sl, asr #30]
    4b38:	andeq	ip, r1, r2, ror #28
    4b3c:	andeq	r0, r0, ip, asr #4
    4b40:	andeq	ip, r1, r0, asr #28
    4b44:	andeq	r0, r0, r8, ror #4
    4b48:	andeq	r0, r0, r4, lsl r2
    4b4c:	andeq	r0, r0, r8, ror r2
    4b50:	andeq	r0, r0, r0, lsr r2
    4b54:			; <UNDEFINED> instruction: 0x0000adbe
    4b58:	andeq	r0, r0, r8, asr r2
    4b5c:	andeq	r0, r0, r4, asr #4
    4b60:	muleq	r1, ip, r0
    4b64:	andeq	r0, r0, r4, lsl #4
    4b68:	andeq	r0, r0, r8, lsr #4
    4b6c:	andeq	sp, r1, r2, lsl r0
    4b70:	andeq	sl, r0, ip, ror fp
    4b74:	andeq	r0, r0, ip, lsr r2
    4b78:	andeq	r0, r0, r4, ror #4
    4b7c:	andeq	r0, r0, ip, ror #4
    4b80:	andeq	sl, r0, sl, ror #11
    4b84:	andeq	ip, r1, lr, asr #26
    4b88:	andeq	sl, r0, r0, ror #19
    4b8c:	ldrdeq	sl, [r0], -r2
    4b90:	strdeq	ip, [r1], -r8
    4b94:	andeq	r0, r0, r4, asr r2
    4b98:	andeq	sl, r0, ip, lsl #28
    4b9c:	andeq	sl, r0, r4, lsr #19
    4ba0:	andeq	sl, r0, r0, ror #17
    4ba4:	andeq	ip, r1, r0, lsl #23
    4ba8:			; <UNDEFINED> instruction: 0xffffe2b3
    4bac:	andeq	ip, r1, ip, asr sl
    4bb0:	andeq	sl, r0, ip, asr r7
    4bb4:	andeq	sl, r0, r4, lsr #4
    4bb8:	muleq	r0, r8, pc	; <UNPREDICTABLE>
    4bbc:	andeq	sl, r0, r4, ror #11
    4bc0:	andeq	ip, r1, r8, ror #11
    4bc4:	strdeq	r9, [r0], -r0
    4bc8:	strheq	sl, [r0], -r4
    4bcc:	andeq	sl, r0, ip, asr r0
    4bd0:	andeq	sl, r0, r6
    4bd4:	andeq	ip, r1, r6, ror #14
    4bd8:	andeq	sl, r0, r4, asr #18
    4bdc:	andeq	r9, r0, r2, lsr pc
    4be0:	andeq	sl, r0, r2, asr r4
    4be4:	muleq	r0, r8, pc	; <UNPREDICTABLE>
    4be8:	muleq	r0, r2, sp
    4bec:			; <UNDEFINED> instruction: 0x00009eba
    4bf0:	ldrdeq	r9, [r0], -r4
    4bf4:	strtmi	r2, [r0], -r1, lsl #2
    4bf8:			; <UNDEFINED> instruction: 0xf96ef009
    4bfc:	ldmdavc	fp, {r0, r1, r4, r5, r8, fp, ip}^
    4c00:	adcmi	fp, r8, #3063808	; 0x2ec000
    4c04:	svcge	0x0038f43f
    4c08:	ldrb	r4, [lr], r4, lsl #12
    4c0c:	tstcs	r1, r0, lsr #12
    4c10:			; <UNDEFINED> instruction: 0xf962f009
    4c14:	strmi	r4, [r4], -r8, lsr #5
    4c18:	svcge	0x000df43f
    4c1c:	ldrb	r2, [r4], r1, lsl #14
    4c20:	tstcs	r1, r0, lsr #12
    4c24:			; <UNDEFINED> instruction: 0xf958f009
    4c28:	strmi	r4, [r4], -r8, lsr #5
    4c2c:	mcrge	4, 6, pc, cr13, cr15, {3}	; <UNPREDICTABLE>
    4c30:	strtmi	lr, [r0], -r2, lsr #14
    4c34:			; <UNDEFINED> instruction: 0xf0092102
    4c38:	adcmi	pc, r8, #1294336	; 0x13c000
    4c3c:			; <UNDEFINED> instruction: 0xf47f4604
    4c40:	ldr	sl, [r9, -r4, asr #29]
    4c44:	svccc	0x00fff1b8
    4c48:	mrcge	4, 7, APSR_nzcv, cr5, cr15, {1}
    4c4c:			; <UNDEFINED> instruction: 0xf04f4648
    4c50:			; <UNDEFINED> instruction: 0xf00931ff
    4c54:	tstcs	r1, r1, asr #18	; <UNPREDICTABLE>
    4c58:	strtmi	r4, [r0], -r1, lsl #13
    4c5c:			; <UNDEFINED> instruction: 0xf93cf009
    4c60:	svceq	0x0000f1b9
    4c64:	adcmi	sp, r8, #4, 26	; 0x100
    4c68:	mcrge	4, 7, pc, cr5, cr15, {1}	; <UNPREDICTABLE>
    4c6c:	strt	r4, [ip], r4, lsl #12
    4c70:	strbmi	r2, [r0], -r1, lsl #2
    4c74:			; <UNDEFINED> instruction: 0xf930f009
    4c78:	strmi	r4, [r5], -r0, lsr #5
    4c7c:	svcge	0x0018f6bf
    4c80:	strtmi	r1, [fp], r3, ror #24
    4c84:			; <UNDEFINED> instruction: 0x970818f3
    4c88:	cdp	7, 0, cr9, cr8, cr4, {0}
    4c8c:	vldmdbpl	r2!, {s7-s22}
    4c90:	cmpeq	fp, #-2147483608	; 0x80000028	; <UNPREDICTABLE>
    4c94:	stmdale	r2!, {r1, r5, r8, r9, fp, sp}
    4c98:			; <UNDEFINED> instruction: 0xf003e8df
    4c9c:			; <UNDEFINED> instruction: 0x21a612ca
    4ca0:			; <UNDEFINED> instruction: 0x21212121
    4ca4:			; <UNDEFINED> instruction: 0x21212121
    4ca8:			; <UNDEFINED> instruction: 0x21212121
    4cac:			; <UNDEFINED> instruction: 0x21212121
    4cb0:			; <UNDEFINED> instruction: 0x21212121
    4cb4:			; <UNDEFINED> instruction: 0x21212121
    4cb8:			; <UNDEFINED> instruction: 0x21212121
    4cbc:	umlalseq	r2, fp, r0, r1
    4cc0:	mvnscc	pc, pc, asr #32
    4cc4:			; <UNDEFINED> instruction: 0xf0094620
    4cc8:	adcmi	pc, r8, #114688	; 0x1c000
    4ccc:	vmax.u8	d20, d0, d7
    4cd0:	strtmi	r8, [r8], -r3, lsl #1
    4cd4:			; <UNDEFINED> instruction: 0xf0092101
    4cd8:	ldcpl	8, cr15, [r2], #-1020	; 0xfffffc04
    4cdc:	bcs	b164f8 <setlogin@@Base+0xb0a6f0>
    4ce0:	adcshi	pc, sp, r0, asr #32
    4ce4:	bls	22b8fc <setlogin@@Base+0x21faf4>
    4ce8:	svclt	0x00c82a00
    4cec:	movweq	pc, #4163	; 0x1043	; <UNPREDICTABLE>
    4cf0:			; <UNDEFINED> instruction: 0xf0402b00
    4cf4:			; <UNDEFINED> instruction: 0xf04f80a9
    4cf8:			; <UNDEFINED> instruction: 0x462031ff
    4cfc:			; <UNDEFINED> instruction: 0xf8ecf009
    4d00:	svclt	0x00144285
    4d04:	strtmi	r4, [r1], r9, lsr #13
    4d08:	beq	440570 <setlogin@@Base+0x434768>
    4d0c:	svc	0x002ef7fc
    4d10:			; <UNDEFINED> instruction: 0x46074659
    4d14:			; <UNDEFINED> instruction: 0xf0094648
    4d18:			; <UNDEFINED> instruction: 0x4641f911
    4d1c:			; <UNDEFINED> instruction: 0xf0099007
    4d20:	pkhtbmi	pc, r2, fp, asr #17	; <UNPREDICTABLE>
    4d24:			; <UNDEFINED> instruction: 0x46514638
    4d28:			; <UNDEFINED> instruction: 0xf8d6f009
    4d2c:			; <UNDEFINED> instruction: 0xf0092101
    4d30:			; <UNDEFINED> instruction: 0xf7fcf8d3
    4d34:	pkhtbmi	lr, r1, r6, asr #31
    4d38:			; <UNDEFINED> instruction: 0xf0002800
    4d3c:			; <UNDEFINED> instruction: 0xf1b880fb
    4d40:	andle	r0, r3, r0, lsl #30
    4d44:	ldrtmi	r4, [r1], -r2, asr #12
    4d48:	svc	0x001cf7fc
    4d4c:	bl	26b570 <setlogin@@Base+0x25f768>
    4d50:	bcs	4d78 <fputs@plt+0x2e44>
    4d54:			; <UNDEFINED> instruction: 0x46c2bfd8
    4d58:	bllt	9fbdd4 <setlogin@@Base+0x9effcc>
    4d5c:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    4d60:	ldrdcs	lr, [sl, -sp]
    4d64:	strbmi	r7, [r8], -r3
    4d68:	ldc2	7, cr15, [r2, #-1012]!	; 0xfffffc0c
    4d6c:			; <UNDEFINED> instruction: 0xf0402800
    4d70:	strtmi	r8, [r8], -ip, asr #1
    4d74:			; <UNDEFINED> instruction: 0xf0092101
    4d78:	strmi	pc, [r5], -pc, lsr #17
    4d7c:	adcmi	r4, r5, #137363456	; 0x8300000
    4d80:	blls	13bb9c <setlogin@@Base+0x12fd94>
    4d84:	bcs	2b5ac <setlogin@@Base+0x1f7a4>
    4d88:			; <UNDEFINED> instruction: 0xf043bfc8
    4d8c:	blcs	5998 <fputs@plt+0x3a64>
    4d90:	mcrge	4, 4, pc, cr14, cr15, {1}	; <UNPREDICTABLE>
    4d94:	bl	1be6d8 <setlogin@@Base+0x1b28d0>
    4d98:			; <UNDEFINED> instruction: 0xf7fc010b
    4d9c:	bl	280974 <setlogin@@Base+0x274b6c>
    4da0:	svccs	0x0000000a
    4da4:	mrc	0, 0, sp, cr8, cr10, {6}
    4da8:			; <UNDEFINED> instruction: 0x463a1a10
    4dac:	mcr	7, 7, pc, cr10, cr12, {7}	; <UNPREDICTABLE>
    4db0:			; <UNDEFINED> instruction: 0x46384651
    4db4:			; <UNDEFINED> instruction: 0xf890f009
    4db8:	strb	r4, [pc, r8, asr #8]
    4dbc:	mvnscc	pc, pc, asr #32
    4dc0:			; <UNDEFINED> instruction: 0xf0094620
    4dc4:	blls	142ff0 <setlogin@@Base+0x1371e8>
    4dc8:	blcs	165ec <setlogin@@Base+0xa7e4>
    4dcc:	stmdals	r8, {r1, r2, r4, r5, r8, ip, lr, pc}
    4dd0:			; <UNDEFINED> instruction: 0xf0092101
    4dd4:	andls	pc, r8, r1, lsl #17
    4dd8:	andle	r4, pc, pc, lsr #5
    4ddc:	tstcs	r1, r8, lsr #12
    4de0:			; <UNDEFINED> instruction: 0xf87af009
    4de4:	strb	r4, [sl, r5, lsl #12]
    4de8:	mvnscc	pc, pc, asr #32
    4dec:			; <UNDEFINED> instruction: 0xf0094620
    4df0:	movwcs	pc, #2163	; 0x873	; <UNPREDICTABLE>
    4df4:	strmi	r9, [r7], -r4, lsl #6
    4df8:	mvnle	r4, pc, lsr #5
    4dfc:	bls	22ba14 <setlogin@@Base+0x21fc0c>
    4e00:	svclt	0x00c82a00
    4e04:	movweq	pc, #4163	; 0x1043	; <UNPREDICTABLE>
    4e08:			; <UNDEFINED> instruction: 0xf47f2b00
    4e0c:	ssatmi	sl, #2, r4, lsl #28
    4e10:			; <UNDEFINED> instruction: 0xf04fe77a
    4e14:			; <UNDEFINED> instruction: 0x462031ff
    4e18:			; <UNDEFINED> instruction: 0xf85ef009
    4e1c:	strmi	r9, [r7], -r4, lsl #22
    4e20:	stmdals	r8, {r0, r1, r5, r6, r8, fp, ip, sp, pc}
    4e24:	mvnscc	pc, pc, asr #32
    4e28:			; <UNDEFINED> instruction: 0xf856f009
    4e2c:	ldrb	r9, [r3, r8]
    4e30:	mvnscc	pc, pc, asr #32
    4e34:			; <UNDEFINED> instruction: 0xf0094620
    4e38:	strmi	pc, [r7], -pc, asr #16
    4e3c:			; <UNDEFINED> instruction: 0xf43f42bd
    4e40:	movwcs	sl, #7674	; 0x1dfa
    4e44:	strb	r9, [r9, r4, lsl #6]
    4e48:	tstcs	r1, r8, lsr #12
    4e4c:			; <UNDEFINED> instruction: 0xf844f009
    4e50:	strmi	r4, [r5], -r4, lsl #5
    4e54:	svcge	0x001bf73f
    4e58:	ldrtmi	lr, [r0], -sp, ror #11
    4e5c:			; <UNDEFINED> instruction: 0xf04fe61c
    4e60:			; <UNDEFINED> instruction: 0x462031ff
    4e64:			; <UNDEFINED> instruction: 0xf838f009
    4e68:	ldr	r4, [r5, r7, lsl #12]!
    4e6c:	ldrbtmi	r4, [sp], #-3413	; 0xfffff2ab
    4e70:	blcs	2babc <setlogin@@Base+0x1fcb4>
    4e74:	cfstrsge	mvf15, [r5], #252	; 0xfc
    4e78:	blcc	12badc <setlogin@@Base+0x11fcd4>
    4e7c:	ldmdblt	r5, {r0, r1, r2, r4, r7, sl, sp, lr, pc}
    4e80:	ldrbtmi	r4, [sp], #-3409	; 0xfffff2af
    4e84:	ldmdami	r1, {r2, r4, r5, r6, r7, r8, r9, sl, sp, lr, pc}^
    4e88:	ldrbtmi	r9, [r8], #-2311	; 0xfffff6f9
    4e8c:			; <UNDEFINED> instruction: 0xf940f7fe
    4e90:			; <UNDEFINED> instruction: 0xf7fd2001
    4e94:	blls	2bef4c <setlogin@@Base+0x2b3144>
    4e98:	tsteq	r4, r3, lsr #3	; <UNPREDICTABLE>
    4e9c:	ldceq	8, cr15, [r8], {83}	; 0x53
    4ea0:	svc	0x00dcf7fc
    4ea4:			; <UNDEFINED> instruction: 0xf47f3001
    4ea8:	ldrt	sl, [lr], #3103	; 0xc1f
    4eac:	stmda	sl!, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    4eb0:	movwls	r2, #62210	; 0xf302
    4eb4:			; <UNDEFINED> instruction: 0xf7fc6800
    4eb8:	cdp	13, 1, cr14, cr8, cr0, {2}
    4ebc:			; <UNDEFINED> instruction: 0x46021a10
    4ec0:	ldrbtmi	r4, [r8], #-2115	; 0xfffff7bd
    4ec4:			; <UNDEFINED> instruction: 0xf924f7fe
    4ec8:	bllt	1482ecc <setlogin@@Base+0x14770c4>
    4ecc:			; <UNDEFINED> instruction: 0xf8dd4630
    4ed0:			; <UNDEFINED> instruction: 0xf7fcb028
    4ed4:	blls	4c06ec <setlogin@@Base+0x4b48e4>
    4ed8:	stccc	8, cr15, [ip], {83}	; 0x53
    4edc:	blls	469b28 <setlogin@@Base+0x45dd20>
    4ee0:	cfstrsls	mvf2, [fp, #-0]
    4ee4:	eorsle	r2, r5, r0, lsl #22
    4ee8:			; <UNDEFINED> instruction: 0xf853682b
    4eec:	strcc	r0, [r1], #-36	; 0xffffffdc
    4ef0:	ldcl	7, cr15, [r4, #1008]!	; 0x3f0
    4ef4:	ldrdcc	pc, [r0], -fp
    4ef8:	mvnsle	r4, #156, 4	; 0xc0000009
    4efc:			; <UNDEFINED> instruction: 0xf04f2300
    4f00:	tstls	r1, #-268435441	; 0xf000000f
    4f04:	tstls	r7, #-805306368	; 0xd0000000
    4f08:	strbmi	lr, [r8], -r8, ror #11
    4f0c:	ldrdlt	pc, [r8], -sp	; <UNPREDICTABLE>
    4f10:			; <UNDEFINED> instruction: 0xf7fc4634
    4f14:	strtmi	lr, [r0], -r4, ror #27
    4f18:	stcl	7, cr15, [r0, #1008]!	; 0x3f0
    4f1c:			; <UNDEFINED> instruction: 0xf8539b12
    4f20:	tstls	r1, #12, 24	; 0xc00
    4f24:			; <UNDEFINED> instruction: 0xb111e7db
    4f28:			; <UNDEFINED> instruction: 0xf8439b12
    4f2c:	stcmi	12, cr2, [r9, #-48]!	; 0xffffffd0
    4f30:			; <UNDEFINED> instruction: 0xe79d447d
    4f34:	ldrdlt	pc, [r8], -sp	; <UNPREDICTABLE>
    4f38:			; <UNDEFINED> instruction: 0xe7ec4634
    4f3c:	ldrbtmi	r4, [sp], #-3366	; 0xfffff2da
    4f40:	stcmi	7, cr14, [r6, #-600]!	; 0xfffffda8
    4f44:			; <UNDEFINED> instruction: 0xe793447d
    4f48:	ldrbtmi	r4, [sp], #-3365	; 0xfffff2db
    4f4c:	stcmi	7, cr14, [r5, #-576]!	; 0xfffffdc0
    4f50:			; <UNDEFINED> instruction: 0xe78d447d
    4f54:			; <UNDEFINED> instruction: 0xf04f9317
    4f58:	movwls	r3, #54271	; 0xd3ff
    4f5c:			; <UNDEFINED> instruction: 0x4620e5be
    4f60:	ldc	7, cr15, [ip, #1008]!	; 0x3f0
    4f64:	stmdami	r0!, {r0, r1, r2, r4, r6, r7, r8, sl, sp, lr, pc}
    4f68:			; <UNDEFINED> instruction: 0xf7fe4478
    4f6c:	ldrdcs	pc, [r1], -r1
    4f70:	svc	0x00bcf7fc
    4f74:	ldrbtmi	r4, [sp], #-3357	; 0xfffff2e3
    4f78:	ldcmi	7, cr14, [sp, #-488]	; 0xfffffe18
    4f7c:			; <UNDEFINED> instruction: 0xe777447d
    4f80:	ldrbtmi	r4, [sp], #-3356	; 0xfffff2e4
    4f84:	ldcmi	7, cr14, [ip, #-464]	; 0xfffffe30
    4f88:			; <UNDEFINED> instruction: 0xe771447d
    4f8c:	ldrbtmi	r4, [sp], #-3355	; 0xfffff2e5
    4f90:	svcls	0x0004e76e
    4f94:			; <UNDEFINED> instruction: 0x4639481a
    4f98:			; <UNDEFINED> instruction: 0xf7fe4478
    4f9c:			; <UNDEFINED> instruction: 0x2001f8b9
    4fa0:	svc	0x00a4f7fc
    4fa4:			; <UNDEFINED> instruction: 0x46334d17
    4fa8:	str	r4, [r0], #-1149	; 0xfffffb83
    4fac:	mcr	7, 5, pc, cr4, cr12, {7}	; <UNPREDICTABLE>
    4fb0:	ldrbtmi	r4, [sp], #-3349	; 0xfffff2eb
    4fb4:	ldcmi	7, cr14, [r5, #-368]	; 0xfffffe90
    4fb8:			; <UNDEFINED> instruction: 0xe759447d
    4fbc:	ldrbtmi	r4, [sp], #-3348	; 0xfffff2ec
    4fc0:	svclt	0x0000e756
    4fc4:	andeq	r9, r0, r2, ror r8
    4fc8:	andeq	r9, r0, r2, ror #17
    4fcc:	andeq	r9, r0, lr, lsl pc
    4fd0:	muleq	r0, r6, r9
    4fd4:	andeq	r9, r0, r8, lsl r7
    4fd8:	strdeq	r9, [r0], -r6
    4fdc:	andeq	r9, r0, r0, lsl r7
    4fe0:	andeq	r9, r0, sl, ror r7
    4fe4:	andeq	r9, r0, ip, lsr #16
    4fe8:	andeq	r9, r0, r4, asr r8
    4fec:	andeq	r9, r0, sl, ror r7
    4ff0:	andeq	r9, r0, r4, lsl #14
    4ff4:	andeq	r9, r0, sl, ror #13
    4ff8:	andeq	r9, r0, r4, asr #15
    4ffc:	muleq	r0, r2, r7
    5000:	andeq	r9, r0, r4, lsl #17
    5004:	strdeq	r9, [r0], -r4
    5008:	strdeq	r9, [r0], -sl
    500c:	andeq	r9, r0, ip, asr #14
    5010:	ldrdeq	r9, [r0], -r6
    5014:	svcmi	0x00f0e92d
    5018:	mvnscc	pc, #79	; 0x4f
    501c:	blhi	c04d8 <setlogin@@Base+0xb46d0>
    5020:	stcmi	6, cr4, [r2, #60]	; 0x3c
    5024:	stcmi	6, cr4, [r2], {25}
    5028:	ldrbtmi	r2, [sp], #-1536	; 0xfffffa00
    502c:	bge	3f1280 <setlogin@@Base+0x3e5478>
    5030:	stmdbpl	ip!, {r0, r2, r9, ip, pc}
    5034:	stmdavs	r4!, {r0, r1, r2, r3, r4, r5, r6, r8, sl, fp, lr}
    5038:			; <UNDEFINED> instruction: 0xf04f9411
    503c:	strmi	r0, [r4], -r0, lsl #8
    5040:	ldrbtmi	r9, [sp], #-781	; 0xfffffcf3
    5044:	stmib	sp, {r4, r9, sl, ip, pc}^
    5048:	strls	r6, [ip], -sl, lsl #12
    504c:	strvs	lr, [lr], -sp, asr #19
    5050:			; <UNDEFINED> instruction: 0xff42f008
    5054:	vsub.i8	d18, d0, d0
    5058:	bmi	1de53f0 <setlogin@@Base+0x1dd95e8>
    505c:	orrmi	pc, r0, #4, 2
    5060:			; <UNDEFINED> instruction: 0xf10d3b01
    5064:	ldrbtmi	r0, [sl], #-2868	; 0xfffff4cc
    5068:	beq	a414a4 <setlogin@@Base+0xa3569c>
    506c:	orreq	lr, r3, #7168	; 0x1c00
    5070:	ldmdbeq	r0!, {r0, r2, r3, r8, ip, sp, lr, pc}
    5074:	bcs	44089c <setlogin@@Base+0x434a94>
    5078:			; <UNDEFINED> instruction: 0xee084a70
    507c:			; <UNDEFINED> instruction: 0xf10d3a90
    5080:	ldrbtmi	r0, [sl], #-2092	; 0xfffff7d4
    5084:	bmi	1ba9898 <setlogin@@Base+0x1b9da90>
    5088:	orreq	lr, r0, #7168	; 0x1c00
    508c:			; <UNDEFINED> instruction: 0x4630463c
    5090:	movwls	r4, #9338	; 0x247a
    5094:	eors	r9, r9, r4, lsl #4
    5098:	tstlt	r8, ip, lsl #16
    509c:			; <UNDEFINED> instruction: 0xf8f2f7fe
    50a0:	subsle	r2, r2, r0, lsl #16
    50a4:	blcs	2bcd4 <setlogin@@Base+0x1fecc>
    50a8:	mcrls	0, 0, sp, cr11, cr9, {3}
    50ac:	blmi	196f0d8 <setlogin@@Base+0x19632d0>
    50b0:	bne	440918 <setlogin@@Base+0x434b10>
    50b4:	stmiapl	sl!, {r0, r1, r2, r4, r5, fp, ip, sp, lr}^
    50b8:	svccs	0x002d9600
    50bc:			; <UNDEFINED> instruction: 0x3603e9dd
    50c0:	shadd16mi	fp, r3, r8
    50c4:			; <UNDEFINED> instruction: 0xf8ecf001
    50c8:	stmdami	r0!, {r0, r1, r2, r3, r4, r6, r9, fp, lr}^
    50cc:	stmiapl	pc!, {r0, r3, r8, r9, fp, ip, pc}	; <UNPREDICTABLE>
    50d0:	andne	lr, ip, #3620864	; 0x374000
    50d4:	stmdapl	lr!, {r0, r8, r9, sl, ip, pc}
    50d8:	strls	r9, [r0], -sl, lsl #16
    50dc:	ldc2	7, cr15, [r6], #1012	; 0x3f4
    50e0:	stmdals	r9, {fp, sp}
    50e4:			; <UNDEFINED> instruction: 0xf7fcdb2f
    50e8:	mrc	12, 0, lr, cr8, cr10, {7}
    50ec:	bls	2cbb34 <setlogin@@Base+0x2bfd2c>
    50f0:			; <UNDEFINED> instruction: 0xf7fe2001
    50f4:	ldmdavs	r0!, {r0, r1, r8, r9, sl, fp, ip, sp, lr, pc}
    50f8:	stcl	7, cr15, [r6, #1008]	; 0x3f0
    50fc:	mvnscc	pc, #79	; 0x4f
    5100:	eorsvs	r6, r3, fp, lsr r0
    5104:	stmdals	ip, {r1, r8, r9, fp, ip, pc}
    5108:	mlale	r9, ip, r2, r4
    510c:	stcl	7, cr15, [r6], #1008	; 0x3f0
    5110:			; <UNDEFINED> instruction: 0xf7fc980a
    5114:	stmdals	fp, {r2, r5, r6, r7, sl, fp, sp, lr, pc}
    5118:	stcl	7, cr15, [r0], #1008	; 0x3f0
    511c:			; <UNDEFINED> instruction: 0xf8cd465b
    5120:	ldrbmi	r8, [r2], -r0
    5124:	bleq	14327c <setlogin@@Base+0x137474>
    5128:			; <UNDEFINED> instruction: 0xf7fd4649
    512c:	mcrrne	12, 6, pc, r3, cr15	; <UNPREDICTABLE>
    5130:	stmdacs	r0, {r0, r1, r3, r5, ip, lr, pc}
    5134:			; <UNDEFINED> instruction: 0xf854d0b0
    5138:	strbmi	r0, [r3], -r4, lsl #24
    513c:			; <UNDEFINED> instruction: 0x46494652
    5140:	cdp2	0, 11, cr15, cr4, cr1, {0}
    5144:			; <UNDEFINED> instruction: 0xf7fce7a8
    5148:	blmi	1080478 <setlogin@@Base+0x1074670>
    514c:	stmiapl	lr!, {r0, r8, sp}^
    5150:			; <UNDEFINED> instruction: 0xf0086830
    5154:	blls	c4c60 <setlogin@@Base+0xb8e58>
    5158:	mlasvs	r0, ip, r2, r4
    515c:	bicsle	r9, r5, ip, lsl #16
    5160:	ldc	7, cr15, [ip], #1008	; 0x3f0
    5164:			; <UNDEFINED> instruction: 0xf7fc980a
    5168:	stmdals	fp, {r1, r3, r4, r5, r7, sl, fp, sp, lr, pc}
    516c:	ldc	7, cr15, [r6], #1008	; 0x3f0
    5170:	blmi	bd7a58 <setlogin@@Base+0xbcbc50>
    5174:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    5178:	blls	45f1e8 <setlogin@@Base+0x4533e0>
    517c:	cmple	r2, sl, asr r0
    5180:	ldc	0, cr11, [sp], #76	; 0x4c
    5184:	pop	{r1, r8, r9, fp, pc}
    5188:	blmi	ce9150 <setlogin@@Base+0xcdd348>
    518c:			; <UNDEFINED> instruction: 0xf8544933
    5190:	stmiapl	fp!, {r2, sl, fp, sp}^
    5194:	ldmdavs	r8, {r0, r3, r4, r5, r6, sl, lr}
    5198:	blx	fe8411b0 <setlogin@@Base+0xfe8353a8>
    519c:	stmdage	lr, {r0, r2, r4, r6, r7, r8, r9, sl, sp, lr, pc}
    51a0:			; <UNDEFINED> instruction: 0xf0019006
    51a4:	bmi	bc51a8 <setlogin@@Base+0xbb93a0>
    51a8:	stmdals	r6, {r1, r2, r3, r5, r8, fp, lr}
    51ac:	ldrbtmi	r4, [r9], #-1146	; 0xfffffb86
    51b0:			; <UNDEFINED> instruction: 0xff60f001
    51b4:	stmdals	r6, {r2, r3, r5, r8, r9, fp, lr}
    51b8:	ldmdavs	fp, {r0, r1, r3, r5, r6, r7, fp, ip, lr}
    51bc:	blmi	af3e90 <setlogin@@Base+0xae8088>
    51c0:	ldmdavs	fp, {r0, r1, r3, r5, r6, r7, fp, ip, lr}
    51c4:			; <UNDEFINED> instruction: 0x4e2ab9db
    51c8:	ldrbtmi	r4, [lr], #-2346	; 0xfffff6d6
    51cc:	ldrbtmi	r9, [r9], #-6
    51d0:			; <UNDEFINED> instruction: 0xff50f001
    51d4:	stccs	8, cr15, [r4], {84}	; 0x54
    51d8:	ldrtmi	r9, [r1], -r6, lsl #16
    51dc:			; <UNDEFINED> instruction: 0xf0019607
    51e0:	cdp	15, 1, cr15, cr8, cr9, {2}
    51e4:	stmdbls	r7, {r4, r7, r9, fp, ip, sp}
    51e8:	ldmdavs	sl, {r1, r2, fp, ip, pc}
    51ec:			; <UNDEFINED> instruction: 0xff42f001
    51f0:	ldrdne	lr, [r5], -sp
    51f4:	blx	2431f2 <setlogin@@Base+0x2373ea>
    51f8:	addle	r2, r3, r0, lsl #16
    51fc:	ldmdbmi	lr, {r0, r2, r5, r7, r8, r9, sl, sp, lr, pc}
    5200:	ldrbtmi	r9, [r9], #-6
    5204:			; <UNDEFINED> instruction: 0xff36f001
    5208:	ldrb	r9, [ip, r6, lsl #16]
    520c:	ldrbtmi	r4, [r9], #-2331	; 0xfffff6e5
    5210:			; <UNDEFINED> instruction: 0xff30f001
    5214:	stmdals	r6, {r0, r2, r4, r8, r9, fp, lr}
    5218:	ldmdavs	fp, {r0, r1, r3, r5, r6, r7, fp, ip, lr}
    521c:	sbcsle	r2, r2, r0, lsl #22
    5220:	ldrtmi	lr, [r0], -sp, ror #15
    5224:			; <UNDEFINED> instruction: 0xf7fce79c
    5228:	svclt	0x0000ed68
    522c:	andeq	fp, r1, r6, asr #26
    5230:	andeq	r0, r0, ip, asr #4
    5234:	andeq	fp, r1, lr, lsr #26
    5238:	strdeq	r9, [r0], -sl
    523c:	andeq	r9, r0, lr, lsr #9
    5240:	andeq	r9, r0, ip, lsr #25
    5244:	andeq	r0, r0, ip, lsl r2
    5248:	andeq	r0, r0, r8, ror r2
    524c:	andeq	r0, r0, r4, lsl #4
    5250:	andeq	r0, r0, r4, ror #4
    5254:	strdeq	fp, [r1], -ip
    5258:	andeq	r0, r0, ip, ror #4
    525c:	andeq	r9, r0, r4, lsr #7
    5260:	andeq	r9, r0, r8, ror #13
    5264:	strdeq	r9, [r0], -sl
    5268:	andeq	r0, r0, r8, asr r2
    526c:	andeq	r0, r0, r8, ror #4
    5270:	ldrdeq	r9, [r0], -lr
    5274:	andeq	r9, r0, lr, ror r1
    5278:	andeq	r9, r0, lr, lsr r1
    527c:	andeq	r9, r0, sl, lsl #13
    5280:	andcs	r4, r1, #2048	; 0x800
    5284:	andsvs	r4, sl, fp, ror r4
    5288:	svclt	0x00004770
    528c:	andeq	fp, r1, r8, lsr #28
    5290:	ldrdgt	pc, [r0], #-143	; 0xffffff71	; <UNPREDICTABLE>
    5294:	tstmi	r3, r5, asr #4	; <UNPREDICTABLE>
    5298:	andcs	r4, r1, r7, lsl fp
    529c:	strlt	r4, [r0, #-1276]	; 0xfffffb04
    52a0:			; <UNDEFINED> instruction: 0xf85cb085
    52a4:	bge	512b8 <setlogin@@Base+0x454b0>
    52a8:	movwls	r6, #14363	; 0x381b
    52ac:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    52b0:	mcrr	7, 15, pc, sl, cr12	; <UNPREDICTABLE>
    52b4:	andle	r3, r2, r1
    52b8:			; <UNDEFINED> instruction: 0x0006f8bd
    52bc:	subscs	fp, r1, r0, ror r9
    52c0:	bmi	3d7f00 <setlogin@@Base+0x3cc0f8>
    52c4:	ldrbtmi	r4, [sl], #-1147	; 0xfffffb85
    52c8:	blmi	2dd430 <setlogin@@Base+0x2d1628>
    52cc:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    52d0:	subsmi	r9, sl, r3, lsl #22
    52d4:	andlt	sp, r5, ip, lsl #2
    52d8:	blx	143456 <setlogin@@Base+0x13764e>
    52dc:	svcvc	0x0000f5b0
    52e0:	vmax.f32	d27, d16, d8
    52e4:	stmiale	fp!, {r0, sp}^
    52e8:			; <UNDEFINED> instruction: 0xf0082101
    52ec:			; <UNDEFINED> instruction: 0xe7e7fdf5
    52f0:	stc	7, cr15, [r2, #-1008]	; 0xfffffc10
    52f4:	ldrdeq	fp, [r1], -r4
    52f8:	andeq	r0, r0, ip, asr #4
    52fc:	andeq	fp, r1, r8, ror #27
    5300:	andeq	fp, r1, sl, lsr #21
    5304:	andcs	r4, r1, r2, lsl #22
    5308:	addsvs	r4, r8, fp, ror r4
    530c:	mrrclt	7, 15, pc, sl, cr12	; <UNPREDICTABLE>
    5310:	andeq	fp, r1, r4, lsr #27
    5314:	svcmi	0x00f0e92d
    5318:	cfstr32	mvfx2, [sp, #-0]
    531c:	bmi	ff867f3c <setlogin@@Base+0xff85c134>
    5320:	ldrbtmi	r4, [sl], #-3041	; 0xfffff41f
    5324:			; <UNDEFINED> instruction: 0xf5ad4ce1
    5328:			; <UNDEFINED> instruction: 0xf8df7d13
    532c:	ldmpl	r3, {r2, r7, r8, r9, sp, pc}^
    5330:	ldrbtmi	r4, [sl], #1148	; 0x47c
    5334:	orrsls	r6, r1, #1769472	; 0x1b0000
    5338:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    533c:	stmdavs	r3!, {r0, r2, r5, r7, sp, lr}
    5340:			; <UNDEFINED> instruction: 0xf0402b00
    5344:	blmi	ff6e5d5c <setlogin@@Base+0xff6d9f54>
    5348:	msrlt	SPSR_fs, #14614528	; 0xdf0000
    534c:	ldrbtmi	r4, [fp], #1147	; 0x47b
    5350:	strmi	lr, [r4, #-2515]	; 0xfffff62d
    5354:	b	151f6c4 <setlogin@@Base+0x15138bc>
    5358:	ldmib	r2, {r0, r2, r8}^
    535c:	svclt	0x00088900
    5360:	strmi	lr, [r6, #-2515]	; 0xfffff62d
    5364:	movwcs	lr, #2514	; 0x9d2
    5368:	movwcs	lr, #18891	; 0x49cb
    536c:	stc2	0, cr15, [r2], #-8
    5370:			; <UNDEFINED> instruction: 0x6708e9db
    5374:	movwcs	lr, #18907	; 0x49db
    5378:			; <UNDEFINED> instruction: 0x46394630
    537c:	blls	1040e44 <setlogin@@Base+0x103503c>
    5380:	ldc2l	0, cr15, [r0, #32]!
    5384:	smlabteq	r8, sp, r9, lr
    5388:	movwcs	lr, #35293	; 0x89dd
    538c:			; <UNDEFINED> instruction: 0xf1732a01
    5390:	vsubw.s8	q8, q0, d0
    5394:	strtmi	r8, [r2], -r2, asr #4
    5398:	strbmi	r4, [r0], -fp, lsr #12
    539c:			; <UNDEFINED> instruction: 0xf0084649
    53a0:	ldc	13, cr15, [fp, #900]	; 0x384
    53a4:			; <UNDEFINED> instruction: 0xf8db8b0a
    53a8:	mrc	0, 1, r4, cr9, cr0, {1}
    53ac:	andls	r8, sl, r8, asr #22
    53b0:	asns	f1, #3.0
    53b4:	vneg.f64	d24, d0
    53b8:	svclt	0x0008fa10
    53bc:	bvc	2c0a38 <setlogin@@Base+0x2b4c30>
    53c0:	ldmib	sp, {r0, r3, ip, lr, pc}^
    53c4:			; <UNDEFINED> instruction: 0xf008010a
    53c8:	mcrr	11, 13, pc, r1, cr13	; <UNPREDICTABLE>
    53cc:	vdup.32	d7, r0
    53d0:	vmov.f64	d7, #216	; 0xbec00000 -0.375
    53d4:	cmnlt	ip, r7, asr #23
    53d8:	blvs	feb80a5c <setlogin@@Base+0xfeb74c54>
    53dc:	blpl	febc0a60 <setlogin@@Base+0xfebb4c58>
    53e0:	blvc	ff200ec8 <setlogin@@Base+0xff1f50c0>
    53e4:	blvc	1c0c88 <setlogin@@Base+0x1b4e80>
    53e8:	bmi	fe440c08 <setlogin@@Base+0xfe434e00>
    53ec:	blvs	ff9c0ed4 <setlogin@@Base+0xff9b50cc>
    53f0:	blvc	180c10 <setlogin@@Base+0x174e08>
    53f4:	blvc	ff200ef0 <setlogin@@Base+0xff1f50e8>
    53f8:	sbchi	pc, r0, #14614528	; 0xdf0000
    53fc:	movwcs	sl, #3088	; 0xc10
    5400:	msreq	CPSR_xc, pc, rrx
    5404:	strdvc	r4, [r3], -r8	; <UNPREDICTABLE>
    5408:	ldrdpl	pc, [r4], -r8
    540c:	bvc	340a34 <setlogin@@Base+0x334c2c>
    5410:			; <UNDEFINED> instruction: 0xf0084628
    5414:	bge	4049a0 <setlogin@@Base+0x3f8b98>
    5418:	andsvs	r2, r0, r0, lsl #16
    541c:			; <UNDEFINED> instruction: 0xf8d8dd11
    5420:	vst4.16	{d21-d24}, [pc], r0
    5424:	blmi	fe9a182c <setlogin@@Base+0xfe995a24>
    5428:			; <UNDEFINED> instruction: 0xf10d9000
    542c:	strls	r0, [r1, #-65]	; 0xffffffbf
    5430:	strcs	r4, [sp, #-1147]	; 0xfffffb85
    5434:			; <UNDEFINED> instruction: 0xf0047025
    5438:	ldmib	r8, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}^
    543c:			; <UNDEFINED> instruction: 0xf8d86708
    5440:	b	1599458 <setlogin@@Base+0x158d650>
    5444:	andsle	r0, sp, r7, lsl #6
    5448:	ldrbtmi	r4, [fp], #-2974	; 0xfffff462
    544c:	ldrdeq	lr, [r4, -r3]
    5450:	svclt	0x000842b9
    5454:			; <UNDEFINED> instruction: 0xd01542b0
    5458:	ldc2	0, cr15, [r2], {8}
    545c:			; <UNDEFINED> instruction: 0x46034639
    5460:	mcr	6, 0, r4, cr10, cr0, {1}
    5464:			; <UNDEFINED> instruction: 0xf0083a10
    5468:	ldc	12, cr15, [pc, #556]	; 569c <fputs@plt+0x3768>
    546c:	vmla.f32	s14, s15, s26
    5470:			; <UNDEFINED> instruction: 0xeeca0a90
    5474:	vmul.f32	s15, s14, s15
    5478:			; <UNDEFINED> instruction: 0xeefd7a87
    547c:	vnmla.f32	s14, s15, s15
    5480:	mul	r0, r0, sl
    5484:	strtmi	r2, [r0], -r4, ror #12
    5488:	bl	1c43480 <setlogin@@Base+0x1c37678>
    548c:			; <UNDEFINED> instruction: 0xf04f4a8e
    5490:			; <UNDEFINED> instruction: 0x960133ff
    5494:	andls	r4, r0, #2046820352	; 0x7a000000
    5498:	bne	a4dca4 <setlogin@@Base+0xa41e9c>
    549c:			; <UNDEFINED> instruction: 0xf7fc4420
    54a0:			; <UNDEFINED> instruction: 0x4620ebda
    54a4:	bl	18c349c <setlogin@@Base+0x18b7694>
    54a8:	vmla.i8	d20, d18, d8
    54ac:	movwcs	r7, #527	; 0x20f
    54b0:	ldmib	r1, {r0, r3, r4, r5, r6, sl, lr}^
    54b4:	stmdavs	sp, {r2, r8, r9, sl, sp, lr}^
    54b8:	bl	1cd5f88 <setlogin@@Base+0x1cca180>
    54bc:	bl	1058e0 <setlogin@@Base+0xf9ad8>
    54c0:	bl	fe9480c8 <setlogin@@Base+0xfe93c2c0>
    54c4:	vqdmlal.s<illegal width 8>	q0, d0, d0
    54c8:	stfmid	f0, [r1, #888]	; 0x378
    54cc:	stmdaeq	fp, {r0, r1, r2, r3, r6, ip, sp, lr, pc}^
    54d0:	movwcs	lr, #51661	; 0xc9cd
    54d4:	strcc	r4, [r2, #-1149]	; 0xfffffb83
    54d8:			; <UNDEFINED> instruction: 0xf815e001
    54dc:	ldrtmi	r8, [r0], -r1, lsl #22
    54e0:	vst1.8	{d20-d22}, [pc :256], r9
    54e4:	movwcs	r7, #512	; 0x200
    54e8:	stc2	0, cr15, [sl, #-32]	; 0xffffffe0
    54ec:	movwcs	lr, #51677	; 0xc9dd
    54f0:	addne	r0, pc, #548864	; 0x86000
    54f4:	strpl	lr, [r1], r6, asr #20
    54f8:			; <UNDEFINED> instruction: 0x41bb42b2
    54fc:	orrhi	pc, r9, r0, lsl #5
    5500:	svceq	0x0054f1b8
    5504:	blmi	1cf9cb0 <setlogin@@Base+0x1cedea8>
    5508:	ldrbtmi	r4, [fp], #-1602	; 0xfffff9be
    550c:	ldrdgt	pc, [r8, #143]	; 0x8f
    5510:	ldclmi	6, cr4, [r2, #-292]!	; 0xfffffedc
    5514:	ldrbtmi	r4, [ip], #1624	; 0x658
    5518:	strvs	lr, [r2, -sp, asr #19]
    551c:	andgt	pc, r0, sp, asr #17
    5520:	movwls	r4, #21629	; 0x547d
    5524:	mvnscc	pc, #79	; 0x4f
    5528:	andcs	r9, r1, #4, 4	; 0x40000000
    552c:	bl	fe4c3524 <setlogin@@Base+0xfe4b771c>
    5530:	stmdavs	sl!, {r0, r1, r3, r5, r6, r8, fp, lr}^
    5534:	ldrbtmi	r4, [r9], #-1568	; 0xfffff9e0
    5538:			; <UNDEFINED> instruction: 0xf0072700
    553c:	strtmi	pc, [r0], -r9, asr #18
    5540:	bl	543538 <setlogin@@Base+0x537730>
    5544:	stmdavs	lr!, {r0, r3, r5, r8, r9, fp, sp, lr}^
    5548:	movwcs	r2, #612	; 0x264
    554c:	strmi	r4, [r8], -r5, lsl #12
    5550:	bl	10b47c <setlogin@@Base+0xff674>
    5554:			; <UNDEFINED> instruction: 0xf0080805
    5558:	blne	1d84a14 <setlogin@@Base+0x1d78c0c>
    555c:	ldrvs	pc, [pc], r8, asr #4
    5560:	streq	pc, [r1], -r0, asr #5
    5564:	strmi	r4, [r2], -r6, lsl #5
    5568:			; <UNDEFINED> instruction: 0x0c01eb77
    556c:	vsubhn.i16	d4, q0, <illegal reg q5.5>
    5570:	ldmdbmi	ip, {r0, r1, r2, r5, r8, pc}^
    5574:	strvs	lr, [ip, -sp, asr #19]
    5578:	ldrbtmi	r2, [r9], #-1867	; 0xfffff8b5
    557c:	strcc	r4, [r2], -lr, lsl #12
    5580:			; <UNDEFINED> instruction: 0xf816e001
    5584:	ldrmi	r7, [r0], -r1, lsl #22
    5588:	vst1.8	{d20-d22}, [pc :64], r9
    558c:	movwcs	r7, #512	; 0x200
    5590:	ldc2	0, cr15, [r6], #32
    5594:	addne	r0, fp, #532480	; 0x82000
    5598:	addpl	lr, r1, #270336	; 0x42000
    559c:	ldrdeq	lr, [ip, -sp]
    55a0:			; <UNDEFINED> instruction: 0x41994290
    55a4:	svccs	0x0054da01
    55a8:	ldrmi	sp, [r0], -fp, ror #3
    55ac:	andcs	r4, r5, #26214400	; 0x1900000
    55b0:			; <UNDEFINED> instruction: 0xf0082300
    55b4:	rsbcs	pc, r4, #42240	; 0xa500
    55b8:	strmi	r2, [r6], -r0, lsl #6
    55bc:			; <UNDEFINED> instruction: 0xf008468b
    55c0:	andcs	pc, sl, #7424	; 0x1d00
    55c4:	strmi	r2, [ip], r0, lsl #6
    55c8:	ldrbmi	r4, [r9], -r1, lsl #13
    55cc:			; <UNDEFINED> instruction: 0x46664630
    55d0:	ldc2	0, cr15, [r4], {8}
    55d4:	movwcs	r2, #522	; 0x20a
    55d8:	ldc2	0, cr15, [r0], {8}
    55dc:			; <UNDEFINED> instruction: 0x4629469e
    55e0:	ldrdgt	pc, [r4, -pc]
    55e4:			; <UNDEFINED> instruction: 0xf04f4d41
    55e8:			; <UNDEFINED> instruction: 0x970633ff
    55ec:	svcmi	0x004044fc
    55f0:	andls	r4, r4, #2097152000	; 0x7d000000
    55f4:	andcs	r4, r1, #64, 12	; 0x4000000
    55f8:	ands	pc, r4, sp, asr #17
    55fc:	andsgt	pc, ip, sp, asr #17
    5600:			; <UNDEFINED> instruction: 0xf8cd447f
    5604:	strls	r9, [r3], -r8
    5608:			; <UNDEFINED> instruction: 0xf7fc9500
    560c:	ldmdbmi	r9!, {r2, r5, r8, r9, fp, sp, lr, pc}
    5610:			; <UNDEFINED> instruction: 0x4620687a
    5614:			; <UNDEFINED> instruction: 0xf0074479
    5618:	ldmib	sp, {r0, r1, r3, r4, r6, r7, fp, ip, sp, lr, pc}^
    561c:	tstmi	r3, #671088640	; 0x28000000
    5620:	ldfp	f5, [r7, #456]	; 0x1c8
    5624:	ldmdavs	lr!, {r0, r4, r9, fp, ip, sp, lr}^
    5628:	blvc	ffa01110 <setlogin@@Base+0xff9f5308>
    562c:	blvc	240f10 <setlogin@@Base+0x235108>
    5630:	blvc	ff20122c <setlogin@@Base+0xff1f5424>
    5634:	bcc	fe440e98 <setlogin@@Base+0xfe435090>
    5638:	bvc	480d5c <setlogin@@Base+0x474f54>
    563c:	vstmdble	r6!, {d18-d19}
    5640:	ldrtmi	r4, [r2], -sp, lsr #18
    5644:	ldrbtmi	r4, [r9], #-1568	; 0xfffff9e0
    5648:			; <UNDEFINED> instruction: 0xf8c2f007
    564c:			; <UNDEFINED> instruction: 0xf04f4d2b
    5650:	mcrmi	1, 1, r3, cr11, cr15, {7}
    5654:	stmdavs	r8!, {r0, r2, r3, r4, r5, r6, sl, lr}^
    5658:	ldc2	0, cr15, [lr], #-32	; 0xffffffe0
    565c:	tstcs	r1, r2, lsr #12
    5660:			; <UNDEFINED> instruction: 0xf85a4603
    5664:			; <UNDEFINED> instruction: 0xf0000006
    5668:	stc	14, cr15, [r5, #732]	; 0x2dc
    566c:	bmi	96c29c <setlogin@@Base+0x960494>
    5670:	ldrbtmi	r4, [sl], #-2829	; 0xfffff4f3
    5674:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    5678:			; <UNDEFINED> instruction: 0x405a9b91
    567c:	tsthi	r7, r0, asr #32	; <UNPREDICTABLE>
    5680:	cfldr32vc	mvfx15, [r3, #-52]	; 0xffffffcc
    5684:	blhi	1c0980 <setlogin@@Base+0x1b4b78>
    5688:	svchi	0x00f0e8bd
    568c:	andhi	pc, r0, pc, lsr #7
    5690:	ldmibls	r9, {r3, r4, r7, r8, fp, ip, pc}
    5694:	svccc	0x00b99999
    5698:	stclgt	12, cr12, [ip], {205}	; 0xcd
    569c:	svccc	0x00eccccc
    56a0:	sbcmi	r0, r8, #0
    56a4:	andeq	fp, r1, lr, asr #20
    56a8:	andeq	r0, r0, ip, asr #4
    56ac:	andeq	fp, r1, ip, ror sp
    56b0:	andeq	fp, r1, lr, lsr sl
    56b4:	andeq	fp, r1, r0, ror #26
    56b8:	andeq	fp, r1, lr, asr sp
    56bc:	andeq	fp, r1, r8, lsr #25
    56c0:	andeq	r9, r0, r0, asr #11
    56c4:	andeq	fp, r1, r2, ror #24
    56c8:	andeq	r9, r0, r4, ror #10
    56cc:	strdeq	fp, [r1], -ip
    56d0:	muleq	r0, r0, r5
    56d4:	andeq	r9, r0, r2, ror #9
    56d8:	andeq	r9, r0, sl, ror #9
    56dc:	andeq	fp, r1, ip, lsl #23
    56e0:	andeq	r8, r0, lr, ror pc
    56e4:	andeq	r9, r0, sl, ror #9
    56e8:	andeq	r9, r0, r0, lsl #8
    56ec:	andeq	r9, r0, ip, lsl r4
    56f0:	andeq	fp, r1, ip, lsr #21
    56f4:	andeq	r9, r0, r8, lsl #8
    56f8:	ldrdeq	r9, [r0], -sl
    56fc:	andeq	fp, r1, r8, asr sl
    5700:	andeq	r0, r0, r0, lsr r2
    5704:	strdeq	fp, [r1], -lr
    5708:	movwcs	r6, #2174	; 0x87e
    570c:	blmi	185e900 <setlogin@@Base+0x1852af8>
    5710:	blvs	696904 <setlogin@@Base+0x68aafc>
    5714:			; <UNDEFINED> instruction: 0xf0402a00
    5718:	ldmib	sp, {r1, r2, r3, r7, pc}^
    571c:	tstmi	r3, #8, 6	; 0x20000000
    5720:	adchi	pc, sl, r0, asr #32
    5724:	blvc	ff241320 <setlogin@@Base+0xff235518>
    5728:	bpl	fe440f8c <setlogin@@Base+0xfe435184>
    572c:	biccc	pc, r5, #-1342177276	; 0xb0000004
    5730:			; <UNDEFINED> instruction: 0x13a2f2c9
    5734:	vabd.s8	<illegal reg q8.5>, <illegal reg q15.5>, <illegal reg q15.5>
    5738:	blx	fe0c9f02 <setlogin@@Base+0xfe0be0fa>
    573c:			; <UNDEFINED> instruction: 0xf6cf2305
    5740:	strtmi	r7, [fp], #-511	; 0xfffffe01
    5744:	strbcs	lr, [r3, r7, asr #23]!
    5748:			; <UNDEFINED> instruction: 0xf0084638
    574c:	strtmi	pc, [r9], -r9, lsr #24
    5750:	blx	ff0c177a <setlogin@@Base+0xff0b5972>
    5754:	orreq	pc, r9, #72, 12	; 0x4800000
    5758:	orreq	pc, r8, #200, 12	; 0xc800000
    575c:	teqeq	fp, pc, rrx	; <UNPREDICTABLE>
    5760:	movwcs	pc, #2947	; 0xb83	; <UNPREDICTABLE>
    5764:	stmiavc	r0!, {r0, r1, r2, r3, r6, r9, fp, sp, lr, pc}^
    5768:	strmi	r4, [r3], #-1541	; 0xfffff9fb
    576c:	stmdane	r3!, {r3, r6, r7, r8, r9, fp, sp, lr, pc}^
    5770:			; <UNDEFINED> instruction: 0xf0084640
    5774:			; <UNDEFINED> instruction: 0x4629fc15
    5778:	blx	febc17a2 <setlogin@@Base+0xfebb599a>
    577c:	strtmi	r4, [r0], -r5, lsl #12
    5780:	ldmib	r4!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    5784:	strtmi	r1, [r0], #-2609	; 0xfffff5cf
    5788:	rsble	r2, r4, r0, lsl #30
    578c:			; <UNDEFINED> instruction: 0xf04f4e42
    5790:	andcs	r3, r1, #-67108861	; 0xfc000003
    5794:	strhi	lr, [r2, #-2509]	; 0xfffff633
    5798:	smlsdxls	r1, lr, r4, r4
    579c:			; <UNDEFINED> instruction: 0xf7fc9600
    57a0:	blmi	fc0110 <setlogin@@Base+0xfb4308>
    57a4:	ldrdeq	lr, [r8, -sp]
    57a8:	stmdacs	r1, {r0, r1, r3, r4, r5, r6, sl, lr}
    57ac:			; <UNDEFINED> instruction: 0xf171685a
    57b0:	blle	16c63b8 <setlogin@@Base+0x16ba5b0>
    57b4:			; <UNDEFINED> instruction: 0x4620493a
    57b8:			; <UNDEFINED> instruction: 0xf0074479
    57bc:	strb	pc, [r5, -r9, lsl #16]	; <UNPREDICTABLE>
    57c0:	andvc	pc, r0, #1325400064	; 0x4f000000
    57c4:			; <UNDEFINED> instruction: 0xf0082300
    57c8:			; <UNDEFINED> instruction: 0x2700fb9b
    57cc:	movwcs	r2, #517	; 0x205
    57d0:			; <UNDEFINED> instruction: 0xf3c617ce
    57d4:	ldmdane	r0!, {r0, r3, r9, sl}
    57d8:	tsteq	r1, r7, asr #22
    57dc:	b	10081e4 <setlogin@@Base+0xffc3dc>
    57e0:	addne	r5, r9, #129	; 0x81
    57e4:	blx	fe34180e <setlogin@@Base+0xfe335a06>
    57e8:	movwcs	r2, #612	; 0x264
    57ec:	strmi	r4, [r3], pc, lsl #12
    57f0:	blx	14181a <setlogin@@Base+0x135a12>
    57f4:	movwcs	r2, #522	; 0x20a
    57f8:	strmi	r4, [lr], -r1, lsl #13
    57fc:			; <UNDEFINED> instruction: 0x46394658
    5800:	blx	fff41828 <setlogin@@Base+0xfff35a20>
    5804:	movwcs	r2, #522	; 0x20a
    5808:			; <UNDEFINED> instruction: 0xf008274b
    580c:			; <UNDEFINED> instruction: 0x469efaf7
    5810:	blmi	93f3ac <setlogin@@Base+0x9335a4>
    5814:	ldrbtmi	r4, [fp], #-1602	; 0xfffff9be
    5818:	ldmib	fp, {r3, r4, r5, r6, r9, sl, sp, lr, pc}^
    581c:	ldrtmi	r2, [r0], -r6, lsl #6
    5820:	ldc	6, cr4, [fp, #228]	; 0xe4
    5824:			; <UNDEFINED> instruction: 0xf0088b0e
    5828:	strcs	pc, [r0], #-2973	; 0xfffff463
    582c:	blhi	1241118 <setlogin@@Base+0x1235310>
    5830:	smlabteq	sl, sp, r9, lr
    5834:	ldmib	sp, {r0, r2, r3, r4, r5, r7, r8, sl, sp, lr, pc}^
    5838:	stmdacs	r1, {r3, r8}
    583c:	movweq	pc, #369	; 0x171	; <UNPREDICTABLE>
    5840:	svcge	0x0070f6ff
    5844:			; <UNDEFINED> instruction: 0xf00817d3
    5848:			; <UNDEFINED> instruction: 0x4605fad9
    584c:			; <UNDEFINED> instruction: 0xf7ffe76e
    5850:	eorvs	pc, r5, pc, lsl sp	; <UNPREDICTABLE>
    5854:	bmi	53ee38 <setlogin@@Base+0x533030>
    5858:	mvnscc	pc, #79	; 0x4f
    585c:	strhi	lr, [r1, #-2509]	; 0xfffff633
    5860:	andls	r4, r0, #2046820352	; 0x7a000000
    5864:			; <UNDEFINED> instruction: 0xf7fc2201
    5868:			; <UNDEFINED> instruction: 0xe79ae9f6
    586c:	strtmi	r4, [r0], -pc, lsl #18
    5870:			; <UNDEFINED> instruction: 0xf0064479
    5874:	strbt	pc, [r9], sp, lsr #31	; <UNPREDICTABLE>
    5878:	ldrtmi	r4, [r2], -sp, lsl #18
    587c:	ldrbtmi	r4, [r9], #-1568	; 0xfffff9e0
    5880:			; <UNDEFINED> instruction: 0xffa6f006
    5884:	blmi	2ff414 <setlogin@@Base+0x2f360c>
    5888:	ldrbtmi	r2, [fp], #-544	; 0xfffffde0
    588c:			; <UNDEFINED> instruction: 0xf7fce63e
    5890:	svclt	0x0000ea34
    5894:	muleq	r1, ip, r9
    5898:	andeq	r9, r0, r0, lsr #5
    589c:	andeq	fp, r1, r4, lsl #18
    58a0:	muleq	r0, ip, r2
    58a4:	ldrdeq	r9, [r0], -r6
    58a8:	andeq	r9, r0, r8, ror #3
    58ac:	andeq	r9, r0, ip, ror #3
    58b0:	andeq	r9, r0, lr, lsr #3
    58b4:	andeq	r8, r0, sl, lsr #24
    58b8:	blmi	2b3d60 <setlogin@@Base+0x2a7f58>
    58bc:	ldmvs	sl, {r0, r1, r3, r4, r5, r6, sl, lr}
    58c0:	ldmdavs	fp, {r1, r3, r8, fp, ip, sp, pc}
    58c4:	ldrlt	fp, [r0, #-355]	; 0xfffffe9d
    58c8:	stmda	lr!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    58cc:	andcs	r4, r1, r4, lsl #12
    58d0:	stmia	r4!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    58d4:	andle	r4, r0, r4, lsl #5
    58d8:	pop	{r4, r8, sl, fp, ip, sp, pc}
    58dc:	ldr	r4, [r9, #-16]
    58e0:	svclt	0x00004770
    58e4:	strdeq	fp, [r1], -r0
    58e8:	mvnsmi	lr, #737280	; 0xb4000
    58ec:			; <UNDEFINED> instruction: 0x46074615
    58f0:	ldrmi	r9, [ip], -r8, lsl #28
    58f4:			; <UNDEFINED> instruction: 0xf95ef002
    58f8:	movwcs	r4, #2324	; 0x914
    58fc:	stmdbhi	r0, {r1, r2, r4, r6, r7, r8, fp, sp, lr, pc}
    5900:	strbvs	r4, [fp], #-1145	; 0xfffffb87
    5904:	stmib	r1, {r0, r1, r3, r8, r9, sp, lr}^
    5908:	strcs	r5, [r0], #-1032	; 0xfffffbf8
    590c:	strcs	r6, [r0, #-1039]	; 0xfffffbf1
    5910:	stmib	r1, {r1, r2, r3, r6, r7, sp, lr}^
    5914:	stmib	r1, {r1, r2, r8, fp, pc}^
    5918:	cfstr32	mvfx4, [r1, #16]
    591c:	vstr	d0, [r1, #40]	; 0x28
    5920:			; <UNDEFINED> instruction: 0xf7ff0b0e
    5924:			; <UNDEFINED> instruction: 0x2001fcb5
    5928:			; <UNDEFINED> instruction: 0xffc6f7ff
    592c:	andcs	r4, lr, r8, lsl #18
    5930:			; <UNDEFINED> instruction: 0xf0034479
    5934:	stmdbmi	r7, {r0, r1, r3, r5, sl, fp, ip, sp, lr, pc}
    5938:	ldrbtmi	r2, [r9], #-28	; 0xffffffe4
    593c:	stc2	0, cr15, [r6], #-12
    5940:	mvnsmi	lr, #12386304	; 0xbd0000
    5944:			; <UNDEFINED> instruction: 0xf7fc2001
    5948:	svclt	0x0000b93d
    594c:	andeq	fp, r1, ip, lsr #15
    5950:			; <UNDEFINED> instruction: 0xfffff9d1
    5954:			; <UNDEFINED> instruction: 0xfffff943
    5958:	andcs	fp, r0, r0, ror r5
    595c:	ldmdb	r4!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    5960:			; <UNDEFINED> instruction: 0xf7fb4d11
    5964:	ldrbtmi	lr, [sp], #-4066	; 0xfffff01e
    5968:	andcs	r4, r1, r4, lsl #12
    596c:	ldm	r6, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    5970:	tstle	r7, r4, lsl #5
    5974:	ldrbtmi	r4, [fp], #-2829	; 0xfffff4f3
    5978:	ldrdeq	lr, [r4, -r3]
    597c:	movwcs	lr, #35283	; 0x89d3
    5980:	svclt	0x00084299
    5984:			; <UNDEFINED> instruction: 0xd1094290
    5988:	movwcs	r4, #6153	; 0x1809
    598c:	ldrmi	r4, [r9], -r9, lsl #20
    5990:	ldrbtmi	r5, [sl], #-2088	; 0xfffff7d8
    5994:	ldrhtmi	lr, [r0], #-141	; 0xffffff73
    5998:	ldclt	0, cr15, [lr, #-0]
    599c:			; <UNDEFINED> instruction: 0xf7ff2001
    59a0:	ldrb	pc, [r1, fp, lsl #31]!	; <UNPREDICTABLE>
    59a4:	svclt	0x0000bd70
    59a8:	andeq	fp, r1, sl, lsl #8
    59ac:	andeq	fp, r1, r6, lsr r7
    59b0:	andeq	r0, r0, r0, lsr r2
    59b4:	andeq	r9, r0, r2, asr r7
    59b8:	andcs	fp, r1, pc, lsl #8
    59bc:	addlt	fp, r3, r0, lsl #10
    59c0:	ldrdgt	pc, [r4], -pc	; <UNPREDICTABLE>
    59c4:	blmi	2701dc <setlogin@@Base+0x2643d4>
    59c8:			; <UNDEFINED> instruction: 0xf85244fc
    59cc:			; <UNDEFINED> instruction: 0xf85c1b04
    59d0:	ldmdavs	fp, {r0, r1, ip, sp}
    59d4:			; <UNDEFINED> instruction: 0xf04f9301
    59d8:	andls	r0, r0, #0, 6
    59dc:			; <UNDEFINED> instruction: 0xf99cf000
    59e0:			; <UNDEFINED> instruction: 0xf00520ff
    59e4:	svclt	0x0000fe83
    59e8:	andeq	fp, r1, r8, lsr #7
    59ec:	andeq	r0, r0, ip, asr #4
    59f0:	ldrbtmi	r4, [fp], #-2817	; 0xfffff4ff
    59f4:			; <UNDEFINED> instruction: 0x47706818
    59f8:	andeq	fp, r1, r2, lsr #12
    59fc:	ldrblt	fp, [r0, #-496]!	; 0xfffffe10
    5a00:	cfmsub32mi	mvax0, mvfx4, mvfx0, mvfx5
    5a04:	ldmdami	r0, {sl, sp}
    5a08:	ldrbtmi	r4, [r8], #-1150	; 0xfffffb82
    5a0c:			; <UNDEFINED> instruction: 0xf008e005
    5a10:	strmi	pc, [r4], -r3, ror #20
    5a14:	eorseq	pc, r0, r6, asr r8	; <UNPREDICTABLE>
    5a18:	strtmi	fp, [r9], -r8, ror #2
    5a1c:	svc	0x00e6f7fb
    5a20:	strmi	r2, [r3], -r1, lsl #2
    5a24:	blcs	172ac <setlogin@@Base+0xb4a4>
    5a28:	blmi	23a1f4 <setlogin@@Base+0x22e3ec>
    5a2c:	bl	d6c20 <setlogin@@Base+0xcae18>
    5a30:	stmdavs	r0!, {r2, r6, r7, sl}^
    5a34:			; <UNDEFINED> instruction: 0xf04fbd70
    5a38:	ldcllt	0, cr3, [r0, #-1020]!	; 0xfffffc04
    5a3c:	rscscc	pc, pc, pc, asr #32
    5a40:	svclt	0x00004770
    5a44:	andeq	fp, r1, r8, asr #1
    5a48:	andeq	r9, r0, r2, rrx
    5a4c:	andeq	fp, r1, r4, lsr #1
    5a50:	tstcs	r0, r6, lsl #22
    5a54:	ldrbtmi	r4, [fp], #-2566	; 0xfffff5fa
    5a58:	and	r4, r3, sl, ror r4
    5a5c:	svccs	0x0008f853
    5a60:	ldmdavs	r9, {r1, r4, r8, ip, sp, pc}^
    5a64:	mvnsle	r4, r8, lsl #5
    5a68:			; <UNDEFINED> instruction: 0x47704610
    5a6c:	andeq	fp, r1, sl, ror r0
    5a70:	andeq	r9, r0, r4, lsl r0
    5a74:	ldrblt	fp, [r0, #-504]!	; 0xfffffe08
    5a78:	ldcmi	6, cr4, [r0, #-24]	; 0xffffffe8
    5a7c:	ldmdami	r0, {sl, sp}
    5a80:	ldrbtmi	r4, [r8], #-1149	; 0xfffffb83
    5a84:	and	r3, r5, r8, ror #10
    5a88:	blx	9c1ab0 <setlogin@@Base+0x9b5ca8>
    5a8c:			; <UNDEFINED> instruction: 0xf8554604
    5a90:	cmnlt	r8, r0, lsr r0
    5a94:			; <UNDEFINED> instruction: 0xf7fb4631
    5a98:	smlatbcs	r1, sl, pc, lr	; <UNPREDICTABLE>
    5a9c:	strtmi	r4, [r0], -r3, lsl #12
    5aa0:	mvnsle	r2, r0, lsl #22
    5aa4:	ldrbtmi	r4, [fp], #-2823	; 0xfffff4f9
    5aa8:	strbeq	lr, [r4], #2819	; 0xb03
    5aac:	ldcllt	14, cr6, [r0, #-896]!	; 0xfffffc80
    5ab0:	rscscc	pc, pc, pc, asr #32
    5ab4:			; <UNDEFINED> instruction: 0xf04fbd70
    5ab8:			; <UNDEFINED> instruction: 0x477030ff
    5abc:	andeq	fp, r1, r0, asr r0
    5ac0:	strdeq	r8, [r0], -r2
    5ac4:	andeq	fp, r1, sl, lsr #32
    5ac8:	tstcs	r0, r7, lsl #22
    5acc:	ldrbtmi	r4, [fp], #-2567	; 0xfffff5f9
    5ad0:	cmncc	r8, #2046820352	; 0x7a000000
    5ad4:			; <UNDEFINED> instruction: 0xf853e003
    5ad8:	tstlt	r2, r8, lsl #30
    5adc:	addmi	r6, r8, #5832704	; 0x590000
    5ae0:			; <UNDEFINED> instruction: 0x4610d1f9
    5ae4:	svclt	0x00004770
    5ae8:	andeq	fp, r1, r2
    5aec:	andeq	r8, r0, r4, lsr #31
    5af0:	andcs	fp, r1, pc, lsl #8
    5af4:			; <UNDEFINED> instruction: 0xf7fbb508
    5af8:	svclt	0x0000efde
    5afc:	cfstr64mi	mvdx11, [r5], {112}	; 0x70
    5b00:	ldrbtmi	r4, [ip], #-3653	; 0xfffff1bb
    5b04:	eorvs	r4, r0, lr, ror r4
    5b08:	stmdbcs	r7, {r5, r8, ip, sp, pc}
    5b0c:	mcrrmi	8, 7, sp, r3, cr0
    5b10:	eorvs	r4, r1, ip, ror r4
    5b14:	strcs	r4, [r0, #-2370]	; 0xfffff6be
    5b18:	ldrbtmi	r4, [r9], #-3138	; 0xfffff3be
    5b1c:	stmib	r1, {r2, r3, r4, r5, r6, sl, lr}^
    5b20:	rsbvs	r5, r3, r1, lsl #10
    5b24:	bcs	2f4058 <setlogin@@Base+0x2e8250>
    5b28:	ldm	pc, {r1, r2, r3, r5, r6, fp, ip, lr, pc}^	; <UNPREDICTABLE>
    5b2c:	ldrcs	pc, [r4, #-2]
    5b30:	ldfccs	f3, [r7, #-172]!	; 0xffffff54
    5b34:	strbpl	r4, [pc, #-2371]	; 51f9 <fputs@plt+0x32c5>
    5b38:	ldcllt	7, cr0, [r0, #-364]!	; 0xfffffe94
    5b3c:			; <UNDEFINED> instruction: 0x21b84b3a
    5b40:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    5b44:			; <UNDEFINED> instruction: 0xb1686099
    5b48:			; <UNDEFINED> instruction: 0xf7fb2101
    5b4c:	pop	{r2, r4, r6, r7, r8, r9, sl, fp, sp, lr, pc}
    5b50:			; <UNDEFINED> instruction: 0xf7fc4070
    5b54:	blmi	d74020 <setlogin@@Base+0xd68218>
    5b58:			; <UNDEFINED> instruction: 0x460a2118
    5b5c:	addsvs	r4, r9, fp, ror r4
    5b60:	mvnsle	r2, r0, lsl #16
    5b64:	tstcs	r1, r2, lsr fp
    5b68:	ldmdavs	r8, {r0, r1, r4, r5, r6, r7, fp, ip, lr}
    5b6c:	svc	0x00c2f7fb
    5b70:	ldrhtmi	lr, [r0], #-141	; 0xffffff73
    5b74:	stmdblt	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    5b78:	tstcs	r8, lr, lsr #22
    5b7c:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    5b80:			; <UNDEFINED> instruction: 0xe7e06099
    5b84:			; <UNDEFINED> instruction: 0x21204b2c
    5b88:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    5b8c:	bfi	r6, r9, #1, #26
    5b90:	cmpcs	r0, sl, lsr #22
    5b94:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    5b98:	bfi	r6, r9, #1, #20
    5b9c:	orrcs	r4, r0, r8, lsr #22
    5ba0:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    5ba4:	bfi	r6, r9, #1, #14
    5ba8:	orrcs	r4, r8, r6, lsr #22
    5bac:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    5bb0:	bfi	r6, r9, #1, #8
    5bb4:	orrscs	r4, r0, r4, lsr #22
    5bb8:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    5bbc:	bfi	r6, r9, #1, #2
    5bc0:	orrscs	r4, r8, r2, lsr #22
    5bc4:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    5bc8:			; <UNDEFINED> instruction: 0xe7bc6099
    5bcc:	lsrcs	r4, r0, #22
    5bd0:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    5bd4:			; <UNDEFINED> instruction: 0xe7b66099
    5bd8:			; <UNDEFINED> instruction: 0x21a84b1e
    5bdc:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    5be0:			; <UNDEFINED> instruction: 0xe7b06099
    5be4:	lslscs	r4, ip, fp
    5be8:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    5bec:			; <UNDEFINED> instruction: 0xe7aa6099
    5bf0:			; <UNDEFINED> instruction: 0x460b4a1a
    5bf4:	ldrbtmi	r4, [sl], #-2074	; 0xfffff7e6
    5bf8:	tstcs	r1, r0, lsr r8
    5bfc:			; <UNDEFINED> instruction: 0xf7fc6800
    5c00:	andcs	lr, r1, r8, lsl #17
    5c04:	ldmdb	r2!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    5c08:	bmi	59745c <setlogin@@Base+0x58b654>
    5c0c:	ldrbtmi	r4, [sl], #-2068	; 0xfffff7ec
    5c10:	svclt	0x0000e7f2
    5c14:	strdeq	fp, [r1], -r2
    5c18:	andeq	fp, r1, ip, ror #4
    5c1c:	andeq	fp, r1, r4, lsl #10
    5c20:	ldrdeq	fp, [r1], -sl
    5c24:	strdeq	fp, [r1], -r8
    5c28:	ldrdeq	fp, [r1], -r2
    5c2c:			; <UNDEFINED> instruction: 0x0001b4b8
    5c30:	andeq	r0, r0, r0, lsl r2
    5c34:	muleq	r1, r6, r4
    5c38:	andeq	fp, r1, sl, lsl #9
    5c3c:	andeq	fp, r1, lr, ror r4
    5c40:	andeq	fp, r1, r2, ror r4
    5c44:	andeq	fp, r1, r6, ror #8
    5c48:	andeq	fp, r1, sl, asr r4
    5c4c:	andeq	fp, r1, lr, asr #8
    5c50:	andeq	fp, r1, r2, asr #8
    5c54:	andeq	fp, r1, r6, lsr r4
    5c58:	andeq	fp, r1, sl, lsr #8
    5c5c:	andeq	r8, r0, r6, lsl #29
    5c60:	andeq	r0, r0, ip, ror #4
    5c64:	muleq	r0, sl, lr
    5c68:	strmi	r4, [r3], -r7, lsl #20
    5c6c:	ldmdavs	r0, {r1, r3, r4, r5, r6, sl, lr}
    5c70:	blcs	1f2178 <setlogin@@Base+0x1e6370>
    5c74:	bmi	17bc8c <setlogin@@Base+0x16fe84>
    5c78:	ldrbtmi	r2, [sl], #-0
    5c7c:			; <UNDEFINED> instruction: 0x47706013
    5c80:	rscscc	pc, pc, pc, asr #32
    5c84:	svclt	0x00004770
    5c88:	andeq	fp, r1, r8, lsl #9
    5c8c:	muleq	r1, sl, r3
    5c90:	ldrbtmi	r4, [fp], #-2821	; 0xfffff4fb
    5c94:			; <UNDEFINED> instruction: 0xb1286858
    5c98:			; <UNDEFINED> instruction: 0xf1a068d8
    5c9c:	blx	fec05cac <setlogin@@Base+0xfebf9ea4>
    5ca0:	stmdbeq	r0, {r7, ip, sp, lr, pc}^
    5ca4:	svclt	0x00004770
    5ca8:	andeq	fp, r1, r2, lsl #7
    5cac:	vst3.8	{d27,d29,d31}, [pc :256], r0
    5cb0:	addlt	r7, r3, r0, asr #5
    5cb4:	cmpmi	r1, r0, asr #4	; <UNPREDICTABLE>
    5cb8:			; <UNDEFINED> instruction: 0xf7fb4604
    5cbc:	blmi	3c1b74 <setlogin@@Base+0x3b5d6c>
    5cc0:	cfstrdne	mvd4, [r2], {123}	; 0x7b
    5cc4:	blmi	379cdc <setlogin@@Base+0x36ded4>
    5cc8:	sbcsvs	r4, r8, fp, ror r4
    5ccc:	ldclt	0, cr11, [r0, #-12]!
    5cd0:	ldmpl	fp, {r0, r1, r3, r9, fp, lr}
    5cd4:			; <UNDEFINED> instruction: 0xf7fc681d
    5cd8:	stmdavs	r0, {r1, r2, r4, r8, fp, sp, lr, pc}
    5cdc:	mcr	7, 1, pc, cr12, cr11, {7}	; <UNPREDICTABLE>
    5ce0:	tstcs	r1, r3, lsr #12
    5ce4:	andls	r4, r0, #2097152	; 0x200000
    5ce8:	strtmi	r4, [r8], -r6, lsl #20
    5cec:			; <UNDEFINED> instruction: 0xf7fc447a
    5cf0:	andcs	lr, r1, r0, lsl r8
    5cf4:	ldm	sl!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    5cf8:	strheq	fp, [r1], -r0
    5cfc:	andeq	fp, r1, ip, asr #6
    5d00:	andeq	r0, r0, ip, ror #4
    5d04:	andeq	r8, r0, ip, ror #27
    5d08:	ldrbtmi	r4, [fp], #-2818	; 0xfffff4fe
    5d0c:	smlabteq	r1, r3, r9, lr
    5d10:	svclt	0x00004770
    5d14:	andeq	fp, r1, sl, ror #7
    5d18:	push	{r4, r5, r6, r8, r9, fp, lr}
    5d1c:	ldrbtmi	r4, [fp], #-4080	; 0xfffff010
    5d20:	stmdbmi	pc!, {r1, r3, r7, r9, sl, lr}^	; <UNPREDICTABLE>
    5d24:	bmi	1bd7584 <setlogin@@Base+0x1bcb77c>
    5d28:	ldmdavs	fp, {r0, r3, r4, r5, r6, sl, lr}
    5d2c:			; <UNDEFINED> instruction: 0x91b8f8df
    5d30:	stceq	6, cr15, [r4, #-692]!	; 0xfffffd4c
    5d34:	addmi	r5, r3, #9043968	; 0x8a0000
    5d38:	ldmdavs	r2, {r0, r3, r4, r5, r6, r7, sl, lr}
    5d3c:	ldmdacs	ip, {r0, r2, r3, r6, r7, fp, ip, sp, lr, pc}
    5d40:	andeq	pc, r0, #79	; 0x4f
    5d44:			; <UNDEFINED> instruction: 0x4604db3d
    5d48:	ldm	ip, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    5d4c:			; <UNDEFINED> instruction: 0xf8d01e63
    5d50:	strmi	fp, [r5], -r0
    5d54:	vqdmulh.s<illegal width 8>	d2, d0, d6
    5d58:	ldm	pc, {r0, r1, r3, r4, r5, r7, pc}^	; <UNPREDICTABLE>
    5d5c:	strbvc	pc, [fp, #-3]!	; <UNPREDICTABLE>
    5d60:	eorsvs	r0, pc, #4, 8	; 0x4000000
    5d64:	movwcs	r0, #24679	; 0x6067
    5d68:	svcge	0x00079305
    5d6c:	orrvs	pc, r0, #1325400064	; 0x4f000000
    5d70:	andcs	r4, r1, #26214400	; 0x1900000
    5d74:			; <UNDEFINED> instruction: 0x96014638
    5d78:	andge	pc, r0, sp, asr #17
    5d7c:	ldmdami	ip, {r0, r2, r3, r9, ip, sp, lr, pc}
    5d80:	svc	0x0042f7fb
    5d84:	ldrdge	pc, [r4, #-143]!	; 0xffffff71
    5d88:	addvs	pc, r0, #1325400064	; 0x4f000000
    5d8c:			; <UNDEFINED> instruction: 0x46394e58
    5d90:			; <UNDEFINED> instruction: 0x464044fa
    5d94:			; <UNDEFINED> instruction: 0xf8da447e
    5d98:	blcs	11db0 <setlogin@@Base+0x5fa8>
    5d9c:			; <UNDEFINED> instruction: 0x2321bf14
    5da0:			; <UNDEFINED> instruction: 0xf006231b
    5da4:	ldmdavs	r3!, {r0, r3, r4, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
    5da8:	subsle	r2, r6, r0, lsl #22
    5dac:	ldmvs	r2!, {r5, r9, sl, lr}
    5db0:	movwls	r4, #22081	; 0x5641
    5db4:	rsbsvs	r2, r4, r0, lsl #8
    5db8:	blls	157c20 <setlogin@@Base+0x14be18>
    5dbc:			; <UNDEFINED> instruction: 0xf8c56073
    5dc0:	bmi	1331dc8 <setlogin@@Base+0x1325fc0>
    5dc4:	ldrbtmi	r4, [sl], #-2887	; 0xfffff4b9
    5dc8:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    5dcc:	ldmdacc	ip, {r0, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}
    5dd0:	cmnle	fp, sl, asr r0
    5dd4:	stceq	6, cr15, [r4, #-52]!	; 0xffffffcc
    5dd8:	svchi	0x00f0e8bd
    5ddc:	movwcs	r4, #31302	; 0x7a46
    5de0:	ldrbtmi	r9, [sl], #-773	; 0xfffffcfb
    5de4:	ldrbtmi	r4, [fp], #-2885	; 0xfffff4bb
    5de8:	blcs	1ff5c <setlogin@@Base+0x14154>
    5dec:	vand	d13, d29, d29
    5df0:	stmdbmi	r3, {r2, r3, r4, fp, lr}^
    5df4:	orrvs	pc, r0, #1325400064	; 0x4f000000
    5df8:	bcs	80534 <setlogin@@Base+0x7472c>
    5dfc:	svcge	0x00074479
    5e00:	strbmi	r9, [r0], -r0, lsl #2
    5e04:	andcs	r4, r1, #26214400	; 0x1900000
    5e08:	svc	0x0024f7fb
    5e0c:	orrvs	pc, r0, #1325400064	; 0x4f000000
    5e10:			; <UNDEFINED> instruction: 0x46194638
    5e14:			; <UNDEFINED> instruction: 0xf8cd2201
    5e18:	strls	r8, [r1], -r0
    5e1c:	mrc	7, 7, APSR_nzcv, cr4, cr11, {7}
    5e20:	bmi	e3fce8 <setlogin@@Base+0xe33ee0>
    5e24:	movwls	r2, #21255	; 0x5307
    5e28:			; <UNDEFINED> instruction: 0xe7db447a
    5e2c:	strls	r4, [r5], #-2614	; 0xfffff5ca
    5e30:			; <UNDEFINED> instruction: 0xe7d7447a
    5e34:	ldrbtmi	r4, [fp], #-2869	; 0xfffff4cb
    5e38:	blcs	1ffac <setlogin@@Base+0x141a4>
    5e3c:	bmi	d3a33c <setlogin@@Base+0xd2e534>
    5e40:	movwls	r2, #21250	; 0x5302
    5e44:			; <UNDEFINED> instruction: 0xe7cd447a
    5e48:	ldrbtmi	r4, [fp], #-2866	; 0xfffff4ce
    5e4c:	bllt	fe4dffc0 <setlogin@@Base+0xfe4d41b8>
    5e50:	movwcs	r4, #14897	; 0x3a31
    5e54:	ldrbtmi	r9, [sl], #-773	; 0xfffffcfb
    5e58:			; <UNDEFINED> instruction: 0xf8dae7c4
    5e5c:	stmiblt	fp, {r2, ip, sp}
    5e60:	cmnlt	r0, #48, 16	; 0x300000
    5e64:	tstcs	r1, sp, lsr #22
    5e68:	ldmvs	sl, {r0, r1, r3, r4, r5, r6, sl, lr}
    5e6c:	mcr	7, 2, pc, cr2, cr11, {7}	; <UNPREDICTABLE>
    5e70:	stmdals	r5, {r0, r1, r3, r5, r9, fp, lr}
    5e74:	ldrbtmi	r4, [sl], #-1603	; 0xfffff9bd
    5e78:			; <UNDEFINED> instruction: 0xf7fb2101
    5e7c:			; <UNDEFINED> instruction: 0xf7fbeefe
    5e80:			; <UNDEFINED> instruction: 0xe79cef9e
    5e84:	vst1.8	{d20-d21}, [pc :128], r7
    5e88:	ldrmi	r6, [r9], -r0, lsl #7
    5e8c:	rscscc	pc, sp, r0, asr #4
    5e90:			; <UNDEFINED> instruction: 0xf8cd447a
    5e94:	stmib	sp, {r3, pc}^
    5e98:	andcs	r2, r1, #0
    5e9c:			; <UNDEFINED> instruction: 0xf7fb4638
    5ea0:			; <UNDEFINED> instruction: 0x4638eeda
    5ea4:	mcr	7, 3, pc, cr2, cr11, {7}	; <UNPREDICTABLE>
    5ea8:			; <UNDEFINED> instruction: 0x46024639
    5eac:	ldrdeq	pc, [ip], -sl
    5eb0:	mrc	7, 0, APSR_nzcv, cr10, cr11, {7}
    5eb4:	movwcs	lr, #14211	; 0x3783
    5eb8:	ldrb	r9, [r6, -r5, lsl #6]
    5ebc:	movwls	r2, #21250	; 0x5302
    5ec0:	blmi	67fc14 <setlogin@@Base+0x673e0c>
    5ec4:	andcc	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    5ec8:	bfi	r6, r8, (invalid: 16:11)
    5ecc:	svc	0x0014f7fb
    5ed0:	movwcs	r4, #14870	; 0x3a16
    5ed4:	ldrbtmi	r9, [sl], #-773	; 0xfffffcfb
    5ed8:	svclt	0x0000e784
    5edc:	strdeq	fp, [r1], -r6
    5ee0:	andeq	fp, r1, r8, asr #32
    5ee4:	andeq	r0, r0, ip, asr #4
    5ee8:	andeq	fp, r1, r8, lsr r0
    5eec:	andeq	fp, r1, r4, lsl #5
    5ef0:	andeq	fp, r1, r0, ror #6
    5ef4:	andeq	sl, r1, sl, lsr #31
    5ef8:	andeq	r8, r0, r6, lsl sp
    5efc:	andeq	fp, r1, lr, lsl #6
    5f00:	strdeq	r9, [r0], -ip
    5f04:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    5f08:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    5f0c:	ldrdeq	fp, [r1], -lr
    5f10:	ldrdeq	r8, [r0], -ip
    5f14:	andeq	fp, r1, sl, asr #3
    5f18:	andeq	r9, r0, lr, asr #30
    5f1c:	andeq	fp, r1, ip, lsr #3
    5f20:			; <UNDEFINED> instruction: 0x00008cba
    5f24:	muleq	r0, r8, ip
    5f28:	andeq	r0, r0, r0, lsl r2
    5f2c:	andeq	r8, r0, sl, lsr ip

00005f30 <error@@Base>:
    5f30:	push	{r0, r1, r2, r3}
    5f32:	movs	r0, #2
    5f34:	push	{lr}
    5f36:	sub	sp, #12
    5f38:	ldr.w	ip, [pc, #60]	; 5f78 <error@@Base+0x48>
    5f3c:	add	r2, sp, #16
    5f3e:	ldr	r3, [pc, #60]	; (5f7c <error@@Base+0x4c>)
    5f40:	add	ip, pc
    5f42:	ldr.w	r1, [r2], #4
    5f46:	ldr.w	r3, [ip, r3]
    5f4a:	ldr	r3, [r3, #0]
    5f4c:	str	r3, [sp, #4]
    5f4e:	mov.w	r3, #0
    5f52:	str	r2, [sp, #0]
    5f54:	bl	5d18 <fputs@plt+0x3de4>
    5f58:	ldr	r2, [pc, #36]	; (5f80 <error@@Base+0x50>)
    5f5a:	ldr	r3, [pc, #32]	; (5f7c <error@@Base+0x4c>)
    5f5c:	add	r2, pc
    5f5e:	ldr	r3, [r2, r3]
    5f60:	ldr	r2, [r3, #0]
    5f62:	ldr	r3, [sp, #4]
    5f64:	eors	r2, r3
    5f66:	bne.n	5f72 <error@@Base+0x42>
    5f68:	add	sp, #12
    5f6a:	ldr.w	lr, [sp], #4
    5f6e:	add	sp, #16
    5f70:	bx	lr
    5f72:	blx	1cf8 <__stack_chk_fail@plt>
    5f76:	nop
    5f78:	add	r6, sp, #192	; 0xc0
    5f7a:	movs	r1, r0
    5f7c:	lsls	r4, r1, #9
    5f7e:	movs	r0, r0
    5f80:	add	r6, sp, #80	; 0x50
    5f82:	movs	r1, r0
    5f84:	push	{r0, r1, r2, r3}
    5f86:	movs	r0, #3
    5f88:	push	{lr}
    5f8a:	sub	sp, #12
    5f8c:	ldr.w	ip, [pc, #36]	; 5fb4 <error@@Base+0x84>
    5f90:	add	r2, sp, #16
    5f92:	ldr	r3, [pc, #36]	; (5fb8 <error@@Base+0x88>)
    5f94:	add	ip, pc
    5f96:	ldr.w	r1, [r2], #4
    5f9a:	ldr.w	r3, [ip, r3]
    5f9e:	ldr	r3, [r3, #0]
    5fa0:	str	r3, [sp, #4]
    5fa2:	mov.w	r3, #0
    5fa6:	str	r2, [sp, #0]
    5fa8:	bl	5d18 <fputs@plt+0x3de4>
    5fac:	movs	r0, #255	; 0xff
    5fae:	bl	b6ec <error@@Base+0x57bc>
    5fb2:	nop
    5fb4:	add	r5, sp, #880	; 0x370
    5fb6:	movs	r1, r0
    5fb8:	lsls	r4, r1, #9
    5fba:	movs	r0, r0
    5fbc:	push	{r0, r1, r2, r3}
    5fbe:	movs	r0, #3
    5fc0:	push	{lr}
    5fc2:	sub	sp, #12
    5fc4:	ldr.w	ip, [pc, #60]	; 6004 <error@@Base+0xd4>
    5fc8:	add	r2, sp, #16
    5fca:	ldr	r3, [pc, #60]	; (6008 <error@@Base+0xd8>)
    5fcc:	add	ip, pc
    5fce:	ldr.w	r1, [r2], #4
    5fd2:	ldr.w	r3, [ip, r3]
    5fd6:	ldr	r3, [r3, #0]
    5fd8:	str	r3, [sp, #4]
    5fda:	mov.w	r3, #0
    5fde:	str	r2, [sp, #0]
    5fe0:	bl	5d18 <fputs@plt+0x3de4>
    5fe4:	ldr	r2, [pc, #36]	; (600c <error@@Base+0xdc>)
    5fe6:	ldr	r3, [pc, #32]	; (6008 <error@@Base+0xd8>)
    5fe8:	add	r2, pc
    5fea:	ldr	r3, [r2, r3]
    5fec:	ldr	r2, [r3, #0]
    5fee:	ldr	r3, [sp, #4]
    5ff0:	eors	r2, r3
    5ff2:	bne.n	5ffe <error@@Base+0xce>
    5ff4:	add	sp, #12
    5ff6:	ldr.w	lr, [sp], #4
    5ffa:	add	sp, #16
    5ffc:	bx	lr
    5ffe:	blx	1cf8 <__stack_chk_fail@plt>
    6002:	nop
    6004:	add	r5, sp, #656	; 0x290
    6006:	movs	r1, r0
    6008:	lsls	r4, r1, #9
    600a:	movs	r0, r0
    600c:	add	r5, sp, #544	; 0x220
    600e:	movs	r1, r0
    6010:	push	{r0, r1, r2, r3}
    6012:	movs	r0, #4
    6014:	push	{lr}
    6016:	sub	sp, #12
    6018:	ldr.w	ip, [pc, #60]	; 6058 <error@@Base+0x128>
    601c:	add	r2, sp, #16
    601e:	ldr	r3, [pc, #60]	; (605c <error@@Base+0x12c>)
    6020:	add	ip, pc
    6022:	ldr.w	r1, [r2], #4
    6026:	ldr.w	r3, [ip, r3]
    602a:	ldr	r3, [r3, #0]
    602c:	str	r3, [sp, #4]
    602e:	mov.w	r3, #0
    6032:	str	r2, [sp, #0]
    6034:	bl	5d18 <fputs@plt+0x3de4>
    6038:	ldr	r2, [pc, #36]	; (6060 <error@@Base+0x130>)
    603a:	ldr	r3, [pc, #32]	; (605c <error@@Base+0x12c>)
    603c:	add	r2, pc
    603e:	ldr	r3, [r2, r3]
    6040:	ldr	r2, [r3, #0]
    6042:	ldr	r3, [sp, #4]
    6044:	eors	r2, r3
    6046:	bne.n	6052 <error@@Base+0x122>
    6048:	add	sp, #12
    604a:	ldr.w	lr, [sp], #4
    604e:	add	sp, #16
    6050:	bx	lr
    6052:	blx	1cf8 <__stack_chk_fail@plt>
    6056:	nop
    6058:	add	r5, sp, #320	; 0x140
    605a:	movs	r1, r0
    605c:	lsls	r4, r1, #9
    605e:	movs	r0, r0
    6060:	add	r5, sp, #208	; 0xd0
    6062:	movs	r1, r0
    6064:	push	{r0, r1, r2, r3}
    6066:	movs	r0, #5
    6068:	push	{lr}
    606a:	sub	sp, #12
    606c:	ldr.w	ip, [pc, #60]	; 60ac <error@@Base+0x17c>
    6070:	add	r2, sp, #16
    6072:	ldr	r3, [pc, #60]	; (60b0 <error@@Base+0x180>)
    6074:	add	ip, pc
    6076:	ldr.w	r1, [r2], #4
    607a:	ldr.w	r3, [ip, r3]
    607e:	ldr	r3, [r3, #0]
    6080:	str	r3, [sp, #4]
    6082:	mov.w	r3, #0
    6086:	str	r2, [sp, #0]
    6088:	bl	5d18 <fputs@plt+0x3de4>
    608c:	ldr	r2, [pc, #36]	; (60b4 <error@@Base+0x184>)
    608e:	ldr	r3, [pc, #32]	; (60b0 <error@@Base+0x180>)
    6090:	add	r2, pc
    6092:	ldr	r3, [r2, r3]
    6094:	ldr	r2, [r3, #0]
    6096:	ldr	r3, [sp, #4]
    6098:	eors	r2, r3
    609a:	bne.n	60a6 <error@@Base+0x176>
    609c:	add	sp, #12
    609e:	ldr.w	lr, [sp], #4
    60a2:	add	sp, #16
    60a4:	bx	lr
    60a6:	blx	1cf8 <__stack_chk_fail@plt>
    60aa:	nop
    60ac:	add	r4, sp, #1008	; 0x3f0
    60ae:	movs	r1, r0
    60b0:	lsls	r4, r1, #9
    60b2:	movs	r0, r0
    60b4:	add	r4, sp, #896	; 0x380
    60b6:	movs	r1, r0
    60b8:	push	{r0, r1, r2, r3}
    60ba:	movs	r0, #6
    60bc:	push	{lr}
    60be:	sub	sp, #12
    60c0:	ldr.w	ip, [pc, #60]	; 6100 <error@@Base+0x1d0>
    60c4:	add	r2, sp, #16
    60c6:	ldr	r3, [pc, #60]	; (6104 <error@@Base+0x1d4>)
    60c8:	add	ip, pc
    60ca:	ldr.w	r1, [r2], #4
    60ce:	ldr.w	r3, [ip, r3]
    60d2:	ldr	r3, [r3, #0]
    60d4:	str	r3, [sp, #4]
    60d6:	mov.w	r3, #0
    60da:	str	r2, [sp, #0]
    60dc:	bl	5d18 <fputs@plt+0x3de4>
    60e0:	ldr	r2, [pc, #36]	; (6108 <error@@Base+0x1d8>)
    60e2:	ldr	r3, [pc, #32]	; (6104 <error@@Base+0x1d4>)
    60e4:	add	r2, pc
    60e6:	ldr	r3, [r2, r3]
    60e8:	ldr	r2, [r3, #0]
    60ea:	ldr	r3, [sp, #4]
    60ec:	eors	r2, r3
    60ee:	bne.n	60fa <error@@Base+0x1ca>
    60f0:	add	sp, #12
    60f2:	ldr.w	lr, [sp], #4
    60f6:	add	sp, #16
    60f8:	bx	lr
    60fa:	blx	1cf8 <__stack_chk_fail@plt>
    60fe:	nop
    6100:	add	r4, sp, #672	; 0x2a0
    6102:	movs	r1, r0
    6104:	lsls	r4, r1, #9
    6106:	movs	r0, r0
    6108:	add	r4, sp, #560	; 0x230
    610a:	movs	r1, r0
    610c:	push	{r0, r1, r2, r3}
    610e:	movs	r0, #7
    6110:	push	{lr}
    6112:	sub	sp, #12
    6114:	ldr.w	ip, [pc, #60]	; 6154 <error@@Base+0x224>
    6118:	add	r2, sp, #16
    611a:	ldr	r3, [pc, #60]	; (6158 <error@@Base+0x228>)
    611c:	add	ip, pc
    611e:	ldr.w	r1, [r2], #4
    6122:	ldr.w	r3, [ip, r3]
    6126:	ldr	r3, [r3, #0]
    6128:	str	r3, [sp, #4]
    612a:	mov.w	r3, #0
    612e:	str	r2, [sp, #0]
    6130:	bl	5d18 <fputs@plt+0x3de4>
    6134:	ldr	r2, [pc, #36]	; (615c <error@@Base+0x22c>)
    6136:	ldr	r3, [pc, #32]	; (6158 <error@@Base+0x228>)
    6138:	add	r2, pc
    613a:	ldr	r3, [r2, r3]
    613c:	ldr	r2, [r3, #0]
    613e:	ldr	r3, [sp, #4]
    6140:	eors	r2, r3
    6142:	bne.n	614e <error@@Base+0x21e>
    6144:	add	sp, #12
    6146:	ldr.w	lr, [sp], #4
    614a:	add	sp, #16
    614c:	bx	lr
    614e:	blx	1cf8 <__stack_chk_fail@plt>
    6152:	nop
    6154:	add	r4, sp, #336	; 0x150
    6156:	movs	r1, r0
    6158:	lsls	r4, r1, #9
    615a:	movs	r0, r0
    615c:	add	r4, sp, #224	; 0xe0
    615e:	movs	r1, r0
    6160:	push	{r1, r2, r3}
    6162:	ldr	r1, [pc, #60]	; (61a0 <error@@Base+0x270>)
    6164:	push	{lr}
    6166:	sub	sp, #8
    6168:	ldr	r3, [pc, #56]	; (61a4 <error@@Base+0x274>)
    616a:	add	r2, sp, #12
    616c:	add	r1, pc
    616e:	ldr	r3, [r1, r3]
    6170:	ldr.w	r1, [r2], #4
    6174:	ldr	r3, [r3, #0]
    6176:	str	r3, [sp, #4]
    6178:	mov.w	r3, #0
    617c:	str	r2, [sp, #0]
    617e:	bl	5d18 <fputs@plt+0x3de4>
    6182:	ldr	r2, [pc, #36]	; (61a8 <error@@Base+0x278>)
    6184:	ldr	r3, [pc, #28]	; (61a4 <error@@Base+0x274>)
    6186:	add	r2, pc
    6188:	ldr	r3, [r2, r3]
    618a:	ldr	r2, [r3, #0]
    618c:	ldr	r3, [sp, #4]
    618e:	eors	r2, r3
    6190:	bne.n	619c <error@@Base+0x26c>
    6192:	add	sp, #8
    6194:	ldr.w	lr, [sp], #4
    6198:	add	sp, #12
    619a:	bx	lr
    619c:	blx	1cf8 <__stack_chk_fail@plt>
    61a0:	add	r4, sp, #16
    61a2:	movs	r1, r0
    61a4:	lsls	r4, r1, #9
    61a6:	movs	r0, r0
    61a8:	add	r3, sp, #936	; 0x3a8
    61aa:	movs	r1, r0
    61ac:	push	{r4, lr}
    61ae:	cbz	r0, 61ba <error@@Base+0x28a>
    61b0:	mov	r4, r0
    61b2:	blx	1ce0 <malloc@plt>
    61b6:	cbz	r0, 61c2 <error@@Base+0x292>
    61b8:	pop	{r4, pc}
    61ba:	ldr	r0, [pc, #16]	; (61cc <error@@Base+0x29c>)
    61bc:	add	r0, pc
    61be:	bl	59b8 <fputs@plt+0x3a84>
    61c2:	ldr	r0, [pc, #12]	; (61d0 <error@@Base+0x2a0>)
    61c4:	mov	r1, r4
    61c6:	add	r0, pc
    61c8:	bl	59b8 <fputs@plt+0x3a84>
    61cc:	ldrh	r0, [r4, #16]
    61ce:	movs	r0, r0
    61d0:	ldrh	r2, [r5, #16]
    61d2:	movs	r0, r0
    61d4:	cmp	r0, #0
    61d6:	it	ne
    61d8:	cmpne	r1, #0
    61da:	push	{r3, r4, r5, lr}
    61dc:	beq.n	61f8 <error@@Base+0x2c8>
    61de:	umull	r2, r3, r0, r1
    61e2:	mov	r5, r0
    61e4:	mov	r4, r1
    61e6:	cbnz	r3, 61f0 <error@@Base+0x2c0>
    61e8:	blx	1a20 <calloc@plt+0x4>
    61ec:	cbz	r0, 6200 <error@@Base+0x2d0>
    61ee:	pop	{r3, r4, r5, pc}
    61f0:	ldr	r0, [pc, #24]	; (620c <error@@Base+0x2dc>)
    61f2:	add	r0, pc
    61f4:	bl	59b8 <fputs@plt+0x3a84>
    61f8:	ldr	r0, [pc, #20]	; (6210 <error@@Base+0x2e0>)
    61fa:	add	r0, pc
    61fc:	bl	59b8 <fputs@plt+0x3a84>
    6200:	ldr	r0, [pc, #16]	; (6214 <error@@Base+0x2e4>)
    6202:	mul.w	r1, r5, r4
    6206:	add	r0, pc
    6208:	bl	59b8 <fputs@plt+0x3a84>
    620c:	ldrh	r2, [r0, #18]
    620e:	movs	r0, r0
    6210:	ldrh	r6, [r4, #16]
    6212:	movs	r0, r0
    6214:	ldrh	r2, [r2, #18]
    6216:	movs	r0, r0
    6218:	push	{r3, r4, r5, lr}
    621a:	mov	r4, r1
    621c:	mov	r5, r2
    621e:	blx	1a04 <reallocarray@plt>
    6222:	cbz	r0, 6226 <error@@Base+0x2f6>
    6224:	pop	{r3, r4, r5, pc}
    6226:	ldr	r0, [pc, #12]	; (6234 <error@@Base+0x304>)
    6228:	mov	r2, r5
    622a:	mov	r1, r4
    622c:	add	r0, pc
    622e:	bl	59b8 <fputs@plt+0x3a84>
    6232:	nop
    6234:	ldrh	r4, [r3, #18]
    6236:	movs	r0, r0
    6238:	push	{r3, r4, r5, lr}
    623a:	mov	r4, r2
    623c:	mov	r5, r3
    623e:	bl	c6ec <setlogin@@Base+0x8e4>
    6242:	cbz	r0, 6246 <error@@Base+0x316>
    6244:	pop	{r3, r4, r5, pc}
    6246:	ldr	r0, [pc, #12]	; (6254 <error@@Base+0x324>)
    6248:	mov	r2, r5
    624a:	mov	r1, r4
    624c:	add	r0, pc
    624e:	bl	59b8 <fputs@plt+0x3a84>
    6252:	nop
    6254:	ldrh	r0, [r7, #18]
    6256:	movs	r0, r0
    6258:	push	{r4, lr}
    625a:	sub	sp, #8
    625c:	str	r0, [sp, #4]
    625e:	blx	1b6c <strlen@plt>
    6262:	adds	r2, r0, #1
    6264:	str	r2, [sp, #0]
    6266:	mov	r0, r2
    6268:	bl	61ac <error@@Base+0x27c>
    626c:	ldrd	r2, r1, [sp]
    6270:	mov	r4, r0
    6272:	bl	c840 <setlogin@@Base+0xa38>
    6276:	mov	r0, r4
    6278:	add	sp, #8
    627a:	pop	{r4, pc}
    627c:	mov	r3, r2
    627e:	mov	r2, r1
    6280:	push	{r4, lr}
    6282:	movs	r1, #1
    6284:	mov	r4, r0
    6286:	blx	1ef8 <__vasprintf_chk@plt>
    628a:	cmp	r0, #0
    628c:	blt.n	6294 <error@@Base+0x364>
    628e:	ldr	r3, [r4, #0]
    6290:	cbz	r3, 6294 <error@@Base+0x364>
    6292:	pop	{r4, pc}
    6294:	ldr	r0, [pc, #4]	; (629c <error@@Base+0x36c>)
    6296:	add	r0, pc
    6298:	bl	59b8 <fputs@plt+0x3a84>
    629c:	ldrh	r2, [r5, #18]
    629e:	movs	r0, r0
    62a0:	push	{r1, r2, r3}
    62a2:	ldr	r1, [pc, #60]	; (62e0 <error@@Base+0x3b0>)
    62a4:	push	{lr}
    62a6:	sub	sp, #8
    62a8:	ldr	r3, [pc, #56]	; (62e4 <error@@Base+0x3b4>)
    62aa:	add	r2, sp, #12
    62ac:	add	r1, pc
    62ae:	ldr	r3, [r1, r3]
    62b0:	ldr.w	r1, [r2], #4
    62b4:	ldr	r3, [r3, #0]
    62b6:	str	r3, [sp, #4]
    62b8:	mov.w	r3, #0
    62bc:	str	r2, [sp, #0]
    62be:	bl	627c <error@@Base+0x34c>
    62c2:	ldr	r2, [pc, #36]	; (62e8 <error@@Base+0x3b8>)
    62c4:	ldr	r3, [pc, #28]	; (62e4 <error@@Base+0x3b4>)
    62c6:	add	r2, pc
    62c8:	ldr	r3, [r2, r3]
    62ca:	ldr	r2, [r3, #0]
    62cc:	ldr	r3, [sp, #4]
    62ce:	eors	r2, r3
    62d0:	bne.n	62dc <error@@Base+0x3ac>
    62d2:	add	sp, #8
    62d4:	ldr.w	lr, [sp], #4
    62d8:	add	sp, #12
    62da:	bx	lr
    62dc:	blx	1cf8 <__stack_chk_fail@plt>
    62e0:	add	r2, sp, #784	; 0x310
    62e2:	movs	r1, r0
    62e4:	lsls	r4, r1, #9
    62e6:	movs	r0, r0
    62e8:	add	r2, sp, #680	; 0x2a8
    62ea:	movs	r1, r0
    62ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    62f0:	mov	r7, r1
    62f2:	ldr	r6, [pc, #208]	; (63c4 <error@@Base+0x494>)
    62f4:	sub	sp, #28
    62f6:	ldr	r1, [pc, #208]	; (63c8 <error@@Base+0x498>)
    62f8:	mov	r8, r2
    62fa:	add	r6, pc
    62fc:	ldr	r4, [pc, #204]	; (63cc <error@@Base+0x49c>)
    62fe:	ldr	r5, [pc, #208]	; (63d0 <error@@Base+0x4a0>)
    6300:	ldr	r1, [r6, r1]
    6302:	add	r4, pc
    6304:	ldrd	r9, sl, [sp, #64]	; 0x40
    6308:	ldr	r1, [r1, #0]
    630a:	str	r1, [sp, #20]
    630c:	mov.w	r1, #0
    6310:	mov	r1, r4
    6312:	str	r7, [sp, #12]
    6314:	ldr	r4, [r4, r5]
    6316:	cmp	r0, r4
    6318:	ite	eq
    631a:	moveq	r2, #1
    631c:	movne	r2, #4
    631e:	strh.w	r2, [sp, #16]
    6322:	cbz	r3, 6388 <error@@Base+0x458>
    6324:	add.w	fp, sp, #12
    6328:	mov	r6, r0
    632a:	mov	r5, r3
    632c:	movs	r4, #0
    632e:	add.w	r1, r8, r4
    6332:	subs	r2, r5, r4
    6334:	mov	r0, r7
    6336:	blx	r6
    6338:	adds	r3, r0, #1
    633a:	mov	r1, r0
    633c:	beq.n	6376 <error@@Base+0x446>
    633e:	cbz	r0, 636c <error@@Base+0x43c>
    6340:	add	r4, r0
    6342:	cmp.w	r9, #0
    6346:	beq.n	6350 <error@@Base+0x420>
    6348:	mov	r0, sl
    634a:	blx	r9
    634c:	adds	r0, #1
    634e:	beq.n	63a8 <error@@Base+0x478>
    6350:	cmp	r5, r4
    6352:	bhi.n	632e <error@@Base+0x3fe>
    6354:	ldr	r2, [pc, #124]	; (63d4 <error@@Base+0x4a4>)
    6356:	ldr	r3, [pc, #112]	; (63c8 <error@@Base+0x498>)
    6358:	add	r2, pc
    635a:	ldr	r3, [r2, r3]
    635c:	ldr	r2, [r3, #0]
    635e:	ldr	r3, [sp, #20]
    6360:	eors	r2, r3
    6362:	bne.n	63be <error@@Base+0x48e>
    6364:	mov	r0, r4
    6366:	add	sp, #28
    6368:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    636c:	blx	1f04 <__errno_location@plt>
    6370:	movs	r3, #32
    6372:	str	r3, [r0, #0]
    6374:	b.n	6354 <error@@Base+0x424>
    6376:	str	r0, [sp, #0]
    6378:	blx	1f04 <__errno_location@plt>
    637c:	ldr	r1, [sp, #0]
    637e:	ldr	r2, [r0, #0]
    6380:	cmp	r2, #4
    6382:	beq.n	638c <error@@Base+0x45c>
    6384:	cmp	r2, #11
    6386:	beq.n	63b2 <error@@Base+0x482>
    6388:	movs	r4, #0
    638a:	b.n	6354 <error@@Base+0x424>
    638c:	strd	r0, r2, [sp]
    6390:	cmp.w	r9, #0
    6394:	beq.n	6350 <error@@Base+0x420>
    6396:	movs	r1, #0
    6398:	mov	r0, sl
    639a:	blx	r9
    639c:	ldrd	r3, r2, [sp]
    63a0:	adds	r0, #1
    63a2:	bne.n	6350 <error@@Base+0x420>
    63a4:	str	r2, [r3, #0]
    63a6:	b.n	6354 <error@@Base+0x424>
    63a8:	blx	1f04 <__errno_location@plt>
    63ac:	movs	r3, #4
    63ae:	str	r3, [r0, #0]
    63b0:	b.n	6354 <error@@Base+0x424>
    63b2:	mov	r2, r1
    63b4:	mov	r0, fp
    63b6:	movs	r1, #1
    63b8:	blx	1d1c <poll@plt>
    63bc:	b.n	6350 <error@@Base+0x420>
    63be:	blx	1cf8 <__stack_chk_fail@plt>
    63c2:	nop
    63c4:	add	r2, sp, #472	; 0x1d8
    63c6:	movs	r1, r0
    63c8:	lsls	r4, r1, #9
    63ca:	movs	r0, r0
    63cc:	add	r2, sp, #440	; 0x1b8
    63ce:	movs	r1, r0
    63d0:	lsls	r0, r5, #8
    63d2:	movs	r0, r0
    63d4:	add	r2, sp, #96	; 0x60
    63d6:	movs	r1, r0
    63d8:	push	{r4, lr}
    63da:	sub	sp, #8
    63dc:	movs	r4, #0
    63de:	strd	r4, r4, [sp]
    63e2:	bl	62ec <error@@Base+0x3bc>
    63e6:	add	sp, #8
    63e8:	pop	{r4, pc}
    63ea:	nop
    63ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    63f0:	mov	r7, r0
    63f2:	ldr	r0, [pc, #392]	; (657c <error@@Base+0x64c>)
    63f4:	mov	r8, r1
    63f6:	ldr	r1, [pc, #392]	; (6580 <error@@Base+0x650>)
    63f8:	sub.w	sp, sp, #8192	; 0x2000
    63fc:	add	r0, pc
    63fe:	sub	sp, #36	; 0x24
    6400:	mov	r4, r3
    6402:	add.w	r3, sp, #8192	; 0x2000
    6406:	ldr	r1, [r0, r1]
    6408:	adds	r3, #28
    640a:	ldr	r5, [pc, #376]	; (6584 <error@@Base+0x654>)
    640c:	cmp.w	r4, #1024	; 0x400
    6410:	ldr	r1, [r1, #0]
    6412:	str	r1, [r3, #0]
    6414:	mov.w	r1, #0
    6418:	add.w	r3, sp, #8256	; 0x2040
    641c:	add.w	r3, r3, #8
    6420:	add	r5, pc
    6422:	ldr	r3, [r3, #0]
    6424:	str	r3, [sp, #4]
    6426:	add.w	r3, sp, #8256	; 0x2040
    642a:	add.w	r3, r3, #12
    642e:	ldr	r3, [r3, #0]
    6430:	str	r3, [sp, #8]
    6432:	bls.n	6464 <error@@Base+0x534>
    6434:	blx	1f04 <__errno_location@plt>
    6438:	mov.w	r9, #0
    643c:	movs	r3, #22
    643e:	str	r3, [r0, #0]
    6440:	ldr	r1, [pc, #324]	; (6588 <error@@Base+0x658>)
    6442:	add.w	r3, sp, #8192	; 0x2000
    6446:	ldr	r2, [pc, #312]	; (6580 <error@@Base+0x650>)
    6448:	adds	r3, #28
    644a:	add	r1, pc
    644c:	ldr	r2, [r1, r2]
    644e:	ldr	r1, [r2, #0]
    6450:	ldr	r2, [r3, #0]
    6452:	eors	r1, r2
    6454:	bne.w	656e <error@@Base+0x63e>
    6458:	mov	r0, r9
    645a:	add.w	sp, sp, #8192	; 0x2000
    645e:	add	sp, #36	; 0x24
    6460:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6464:	add	r6, sp, #32
    6466:	mov	r1, r2
    6468:	sub.w	sl, r6, #4
    646c:	mov.w	r3, #8192	; 0x2000
    6470:	lsls	r2, r4, #3
    6472:	mov.w	r9, #0
    6476:	mov	r0, sl
    6478:	blx	1b18 <__memcpy_chk@plt>
    647c:	ldr	r3, [pc, #268]	; (658c <error@@Base+0x65c>)
    647e:	str.w	r8, [r6, #-12]!
    6482:	ldr	r3, [r5, r3]
    6484:	cmp	r7, r3
    6486:	ite	eq
    6488:	moveq	r3, #1
    648a:	movne	r3, #4
    648c:	strh	r3, [r6, #4]
    648e:	cmp	r4, #0
    6490:	beq.n	6500 <error@@Base+0x5d0>
    6492:	ldr.w	r2, [sl, #4]
    6496:	cmp	r2, #0
    6498:	beq.n	6440 <error@@Base+0x510>
    649a:	mov	r2, r4
    649c:	mov	r1, sl
    649e:	mov	r0, r8
    64a0:	blx	r7
    64a2:	adds	r3, r0, #1
    64a4:	mov	r5, r0
    64a6:	beq.n	64f0 <error@@Base+0x5c0>
    64a8:	cbz	r0, 6506 <error@@Base+0x5d6>
    64aa:	add	r9, r0
    64ac:	mov	fp, r0
    64ae:	ldr.w	r3, [sl, #4]
    64b2:	cmp	r3, fp
    64b4:	bhi.n	652a <error@@Base+0x5fa>
    64b6:	mov	r0, r4
    64b8:	mov.w	r1, #4294967295	; 0xffffffff
    64bc:	sub.w	fp, fp, r3
    64c0:	bl	ded8 <setlogin@@Base+0x20d0>
    64c4:	add.w	sl, sl, #8
    64c8:	mov	r4, r0
    64ca:	cmp	r0, #0
    64cc:	bne.n	64ae <error@@Base+0x57e>
    64ce:	cmp.w	fp, #0
    64d2:	bne.n	6562 <error@@Base+0x632>
    64d4:	ldr	r3, [sp, #4]
    64d6:	cmp	r3, #0
    64d8:	beq.n	6440 <error@@Base+0x510>
    64da:	ldrd	r3, r0, [sp, #4]
    64de:	mov	r1, r5
    64e0:	blx	r3
    64e2:	adds	r0, #1
    64e4:	bne.n	6440 <error@@Base+0x510>
    64e6:	blx	1f04 <__errno_location@plt>
    64ea:	movs	r3, #4
    64ec:	str	r3, [r0, #0]
    64ee:	b.n	6440 <error@@Base+0x510>
    64f0:	blx	1f04 <__errno_location@plt>
    64f4:	ldr	r3, [r0, #0]
    64f6:	mov	fp, r0
    64f8:	cmp	r3, #4
    64fa:	beq.n	6510 <error@@Base+0x5e0>
    64fc:	cmp	r3, #11
    64fe:	beq.n	6556 <error@@Base+0x626>
    6500:	mov.w	r9, #0
    6504:	b.n	6440 <error@@Base+0x510>
    6506:	blx	1f04 <__errno_location@plt>
    650a:	movs	r3, #32
    650c:	str	r3, [r0, #0]
    650e:	b.n	6440 <error@@Base+0x510>
    6510:	str	r3, [sp, #12]
    6512:	ldr	r3, [sp, #4]
    6514:	cmp	r3, #0
    6516:	beq.n	6492 <error@@Base+0x562>
    6518:	ldr	r0, [sp, #8]
    651a:	movs	r1, #0
    651c:	blx	r3
    651e:	ldr	r3, [sp, #12]
    6520:	adds	r0, #1
    6522:	bne.n	6492 <error@@Base+0x562>
    6524:	str.w	r3, [fp]
    6528:	b.n	6440 <error@@Base+0x510>
    652a:	cmp.w	fp, #0
    652e:	beq.n	6572 <error@@Base+0x642>
    6530:	sub.w	r3, r3, fp
    6534:	str.w	r3, [sl, #4]
    6538:	ldr	r3, [sp, #4]
    653a:	ldr.w	r1, [sl]
    653e:	add	r1, fp
    6540:	str.w	r1, [sl]
    6544:	cmp	r3, #0
    6546:	beq.n	6492 <error@@Base+0x562>
    6548:	ldrd	r3, r0, [sp, #4]
    654c:	mov	r1, r5
    654e:	blx	r3
    6550:	adds	r0, #1
    6552:	bne.n	6492 <error@@Base+0x562>
    6554:	b.n	64e6 <error@@Base+0x5b6>
    6556:	mov	r2, r5
    6558:	movs	r1, #1
    655a:	mov	r0, r6
    655c:	blx	1d1c <poll@plt>
    6560:	b.n	6492 <error@@Base+0x562>
    6562:	blx	1f04 <__errno_location@plt>
    6566:	mov	r9, r4
    6568:	movs	r3, #14
    656a:	str	r3, [r0, #0]
    656c:	b.n	6440 <error@@Base+0x510>
    656e:	blx	1cf8 <__stack_chk_fail@plt>
    6572:	ldr	r3, [sp, #4]
    6574:	cmp	r3, #0
    6576:	beq.n	6492 <error@@Base+0x562>
    6578:	b.n	6548 <error@@Base+0x618>
    657a:	nop
    657c:	add	r1, sp, #464	; 0x1d0
    657e:	movs	r1, r0
    6580:	lsls	r4, r1, #9
    6582:	movs	r0, r0
    6584:	add	r1, sp, #320	; 0x140
    6586:	movs	r1, r0
    6588:	add	r1, sp, #152	; 0x98
    658a:	movs	r1, r0
    658c:	lsls	r4, r6, #9
    658e:	movs	r0, r0
    6590:	push	{r4, lr}
    6592:	sub	sp, #8
    6594:	movs	r4, #0
    6596:	strd	r4, r4, [sp]
    659a:	bl	63ec <error@@Base+0x4bc>
    659e:	add	sp, #8
    65a0:	pop	{r4, pc}
    65a2:	nop
    65a4:	movs	r0, r0
    65a6:	movs	r0, r0
    65a8:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    65ac:	sub	sp, #8
    65ae:	ldr	r7, [r0, #0]
    65b0:	cmp	r7, #0
    65b2:	beq.n	665c <error@@Base+0x72c>
    65b4:	mov	r4, r0
    65b6:	mov	r6, r1
    65b8:	cbnz	r1, 6614 <error@@Base+0x6e4>
    65ba:	ldr	r1, [pc, #184]	; (6674 <error@@Base+0x744>)
    65bc:	add	r1, pc
    65be:	mov	r0, r7
    65c0:	blx	1ebc <strpbrk@plt>
    65c4:	mov	r5, r0
    65c6:	str	r0, [r4, #0]
    65c8:	cbz	r0, 660c <error@@Base+0x6dc>
    65ca:	ldrb.w	r8, [r0]
    65ce:	cmp.w	r8, #34	; 0x22
    65d2:	beq.n	6636 <error@@Base+0x706>
    65d4:	cbz	r6, 661a <error@@Base+0x6ea>
    65d6:	movs	r3, #0
    65d8:	ldr	r1, [pc, #156]	; (6678 <error@@Base+0x748>)
    65da:	strb	r3, [r0, #0]
    65dc:	ldr	r5, [r4, #0]
    65de:	add	r1, pc
    65e0:	str	r1, [sp, #4]
    65e2:	adds	r0, r5, #1
    65e4:	blx	1dd4 <strspn@plt>
    65e8:	cmp.w	r8, #61	; 0x3d
    65ec:	ldr	r1, [sp, #4]
    65ee:	add.w	r0, r0, #1
    65f2:	add.w	r6, r5, r0
    65f6:	str	r6, [r4, #0]
    65f8:	ldrb	r3, [r5, r0]
    65fa:	sub.w	r3, r3, #61	; 0x3d
    65fe:	clz	r3, r3
    6602:	mov.w	r3, r3, lsr #5
    6606:	it	eq
    6608:	moveq	r3, #0
    660a:	cbnz	r3, 6666 <error@@Base+0x736>
    660c:	mov	r0, r7
    660e:	add	sp, #8
    6610:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    6614:	ldr	r1, [pc, #100]	; (667c <error@@Base+0x74c>)
    6616:	add	r1, pc
    6618:	b.n	65be <error@@Base+0x68e>
    661a:	ldr	r1, [pc, #100]	; (6680 <error@@Base+0x750>)
    661c:	strb	r6, [r0, #0]
    661e:	ldr	r5, [r4, #0]
    6620:	add	r1, pc
    6622:	adds	r0, r5, #1
    6624:	blx	1dd4 <strspn@plt>
    6628:	adds	r0, #1
    662a:	add	r5, r0
    662c:	mov	r0, r7
    662e:	str	r5, [r4, #0]
    6630:	add	sp, #8
    6632:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    6636:	blx	1b6c <strlen@plt>
    663a:	adds	r1, r5, #1
    663c:	mov	r2, r0
    663e:	mov	r0, r5
    6640:	blx	1d40 <memmove@plt>
    6644:	ldr	r0, [r4, #0]
    6646:	mov	r1, r8
    6648:	blx	19e0 <strchr@plt>
    664c:	str	r0, [r4, #0]
    664e:	cbz	r0, 665c <error@@Base+0x72c>
    6650:	ldr	r1, [pc, #48]	; (6684 <error@@Base+0x754>)
    6652:	movs	r3, #0
    6654:	strb	r3, [r0, #0]
    6656:	add	r1, pc
    6658:	ldr	r5, [r4, #0]
    665a:	b.n	6622 <error@@Base+0x6f2>
    665c:	movs	r7, #0
    665e:	mov	r0, r7
    6660:	add	sp, #8
    6662:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    6666:	adds	r0, r6, #1
    6668:	blx	1dd4 <strspn@plt>
    666c:	adds	r0, #1
    666e:	add	r6, r0
    6670:	str	r6, [r4, #0]
    6672:	b.n	660c <error@@Base+0x6dc>
    6674:	strh	r4, [r6, #58]	; 0x3a
    6676:	movs	r0, r0
    6678:	strh	r2, [r3, #58]	; 0x3a
    667a:	movs	r0, r0
    667c:	strh	r2, [r2, #56]	; 0x38
    667e:	movs	r0, r0
    6680:	strh	r0, [r3, #56]	; 0x38
    6682:	movs	r0, r0
    6684:	strh	r2, [r4, #54]	; 0x36
    6686:	movs	r0, r0
    6688:	ldr	r2, [pc, #268]	; (6798 <error@@Base+0x868>)
    668a:	ldr	r3, [pc, #272]	; (679c <error@@Base+0x86c>)
    668c:	add	r2, pc
    668e:	push	{r4, r5, r6, r7, lr}
    6690:	sub	sp, #12
    6692:	ldr	r3, [r2, r3]
    6694:	mov	r4, r0
    6696:	ldr	r3, [r3, #0]
    6698:	str	r3, [sp, #4]
    669a:	mov.w	r3, #0
    669e:	blx	1b6c <strlen@plt>
    66a2:	adds	r0, #1
    66a4:	bl	61ac <error@@Base+0x27c>
    66a8:	ldrb	r3, [r4, #0]
    66aa:	mov	r7, r0
    66ac:	cmp	r3, #0
    66ae:	beq.n	6790 <error@@Base+0x860>
    66b0:	adds	r5, r0, #1
    66b2:	movs	r6, #32
    66b4:	b.n	66c6 <error@@Base+0x796>
    66b6:	mov	r2, r4
    66b8:	mov	r1, r5
    66ba:	strb.w	r6, [r5, #-1]
    66be:	ldrb	r3, [r2, #1]
    66c0:	adds	r5, #1
    66c2:	adds	r4, r2, #1
    66c4:	cbz	r3, 66e0 <error@@Base+0x7b0>
    66c6:	cmp	r3, #37	; 0x25
    66c8:	beq.n	66fa <error@@Base+0x7ca>
    66ca:	cmp	r3, #43	; 0x2b
    66cc:	beq.n	66b6 <error@@Base+0x786>
    66ce:	mov	r2, r4
    66d0:	strb.w	r3, [r5, #-1]
    66d4:	ldrb	r3, [r2, #1]
    66d6:	mov	r1, r5
    66d8:	adds	r4, r2, #1
    66da:	adds	r5, #1
    66dc:	cmp	r3, #0
    66de:	bne.n	66c6 <error@@Base+0x796>
    66e0:	movs	r3, #0
    66e2:	strb	r3, [r1, #0]
    66e4:	ldr	r2, [pc, #184]	; (67a0 <error@@Base+0x870>)
    66e6:	ldr	r3, [pc, #180]	; (679c <error@@Base+0x86c>)
    66e8:	add	r2, pc
    66ea:	ldr	r3, [r2, r3]
    66ec:	ldr	r2, [r3, #0]
    66ee:	ldr	r3, [sp, #4]
    66f0:	eors	r2, r3
    66f2:	bne.n	6794 <error@@Base+0x864>
    66f4:	mov	r0, r7
    66f6:	add	sp, #12
    66f8:	pop	{r4, r5, r6, r7, pc}
    66fa:	blx	1cb8 <__ctype_b_loc@plt>
    66fe:	ldrb	r3, [r4, #1]
    6700:	ldr	r2, [r0, #0]
    6702:	ldrh.w	r1, [r2, r3, lsl #1]
    6706:	lsls	r1, r1, #19
    6708:	bpl.n	6786 <error@@Base+0x856>
    670a:	ldrb	r1, [r4, #2]
    670c:	ldrh.w	r2, [r2, r1, lsl #1]
    6710:	lsls	r2, r2, #19
    6712:	bpl.n	6786 <error@@Base+0x856>
    6714:	sub.w	r2, r3, #48	; 0x30
    6718:	uxtb	r2, r2
    671a:	cmp	r2, #9
    671c:	bls.n	6778 <error@@Base+0x848>
    671e:	sub.w	r2, r3, #97	; 0x61
    6722:	cmp	r2, #5
    6724:	bls.n	677e <error@@Base+0x84e>
    6726:	sub.w	r2, r3, #65	; 0x41
    672a:	cmp	r2, #5
    672c:	bhi.n	6786 <error@@Base+0x856>
    672e:	subs	r3, #55	; 0x37
    6730:	strb.w	r3, [sp]
    6734:	sub.w	r3, r1, #48	; 0x30
    6738:	adds	r2, r4, #2
    673a:	uxtb	r3, r3
    673c:	cmp	r3, #9
    673e:	it	ls
    6740:	strbls.w	r3, [sp, #1]
    6744:	bls.n	6764 <error@@Base+0x834>
    6746:	sub.w	r3, r1, #97	; 0x61
    674a:	cmp	r3, #5
    674c:	itt	ls
    674e:	subls	r1, #87	; 0x57
    6750:	strbls.w	r1, [sp, #1]
    6754:	bls.n	6764 <error@@Base+0x834>
    6756:	sub.w	r3, r1, #65	; 0x41
    675a:	cmp	r3, #5
    675c:	bhi.n	6786 <error@@Base+0x856>
    675e:	subs	r1, #55	; 0x37
    6760:	strb.w	r1, [sp, #1]
    6764:	ldrb.w	r0, [sp]
    6768:	mov	r1, r5
    676a:	ldrb.w	r3, [sp, #1]
    676e:	orr.w	r3, r3, r0, lsl #4
    6772:	strb.w	r3, [r5, #-1]
    6776:	b.n	66be <error@@Base+0x78e>
    6778:	strb.w	r2, [sp]
    677c:	b.n	6734 <error@@Base+0x804>
    677e:	subs	r3, #87	; 0x57
    6780:	strb.w	r3, [sp]
    6784:	b.n	6734 <error@@Base+0x804>
    6786:	mov	r0, r7
    6788:	movs	r7, #0
    678a:	blx	1adc <free@plt+0x4>
    678e:	b.n	66e4 <error@@Base+0x7b4>
    6790:	mov	r1, r0
    6792:	b.n	66e0 <error@@Base+0x7b0>
    6794:	blx	1cf8 <__stack_chk_fail@plt>
    6798:	add	r6, pc, #912	; (adr r6, 6b2c <error@@Base+0xbfc>)
    679a:	movs	r1, r0
    679c:	lsls	r4, r1, #9
    679e:	movs	r0, r0
    67a0:	add	r6, pc, #544	; (adr r6, 69c4 <error@@Base+0xa94>)
    67a2:	movs	r1, r0
    67a4:	ldrb	r3, [r0, #0]
    67a6:	cbz	r3, 67c0 <error@@Base+0x890>
    67a8:	mov	r2, r0
    67aa:	b.n	67b2 <error@@Base+0x882>
    67ac:	ldrb.w	r3, [r2, #1]!
    67b0:	cbz	r3, 67c0 <error@@Base+0x890>
    67b2:	cmp	r3, #13
    67b4:	it	ne
    67b6:	cmpne	r3, #10
    67b8:	bne.n	67ac <error@@Base+0x87c>
    67ba:	movs	r3, #0
    67bc:	strb	r3, [r2, #0]
    67be:	bx	lr
    67c0:	bx	lr
    67c2:	nop
    67c4:	push	{r4, r5, r6, lr}
    67c6:	movs	r1, #3
    67c8:	mov	r5, r0
    67ca:	blx	1c48 <fcntl64@plt>
    67ce:	mov	r4, r0
    67d0:	adds	r0, #1
    67d2:	beq.n	6808 <error@@Base+0x8d8>
    67d4:	ands.w	r6, r4, #2048	; 0x800
    67d8:	mov	r1, r5
    67da:	bne.n	67fa <error@@Base+0x8ca>
    67dc:	ldr	r0, [pc, #92]	; (683c <error@@Base+0x90c>)
    67de:	add	r0, pc
    67e0:	bl	60b8 <error@@Base+0x188>
    67e4:	orr.w	r2, r4, #2048	; 0x800
    67e8:	movs	r1, #4
    67ea:	mov	r0, r5
    67ec:	blx	1c48 <fcntl64@plt>
    67f0:	adds	r3, r0, #1
    67f2:	mov	r4, r0
    67f4:	beq.n	6822 <error@@Base+0x8f2>
    67f6:	mov	r0, r6
    67f8:	pop	{r4, r5, r6, pc}
    67fa:	ldr	r0, [pc, #68]	; (6840 <error@@Base+0x910>)
    67fc:	movs	r6, #0
    67fe:	add	r0, pc
    6800:	bl	610c <error@@Base+0x1dc>
    6804:	mov	r0, r6
    6806:	pop	{r4, r5, r6, pc}
    6808:	blx	1f04 <__errno_location@plt>
    680c:	mov	r6, r4
    680e:	ldr	r0, [r0, #0]
    6810:	blx	1938 <strerror@plt+0x4>
    6814:	mov	r1, r5
    6816:	mov	r2, r0
    6818:	ldr	r0, [pc, #40]	; (6844 <error@@Base+0x914>)
    681a:	add	r0, pc
    681c:	bl	5f30 <error@@Base>
    6820:	b.n	67f6 <error@@Base+0x8c6>
    6822:	blx	1f04 <__errno_location@plt>
    6826:	mov	r6, r4
    6828:	ldr	r0, [r0, #0]
    682a:	blx	1938 <strerror@plt+0x4>
    682e:	mov	r1, r5
    6830:	mov	r2, r0
    6832:	ldr	r0, [pc, #20]	; (6848 <error@@Base+0x918>)
    6834:	add	r0, pc
    6836:	bl	6064 <error@@Base+0x134>
    683a:	b.n	67f6 <error@@Base+0x8c6>
    683c:	strh	r6, [r1, #44]	; 0x2c
    683e:	movs	r0, r0
    6840:	strh	r2, [r3, #42]	; 0x2a
    6842:	movs	r0, r0
    6844:	strh	r6, [r4, #40]	; 0x28
    6846:	movs	r0, r0
    6848:	strh	r4, [r2, #42]	; 0x2a
    684a:	movs	r0, r0
    684c:	push	{r4, r5, r6, lr}
    684e:	movs	r1, #3
    6850:	mov	r6, r0
    6852:	blx	1c48 <fcntl64@plt>
    6856:	mov	r4, r0
    6858:	adds	r0, #1
    685a:	beq.n	6892 <error@@Base+0x962>
    685c:	ands.w	r5, r4, #2048	; 0x800
    6860:	mov	r1, r6
    6862:	beq.n	6886 <error@@Base+0x956>
    6864:	ldr	r0, [pc, #92]	; (68c4 <error@@Base+0x994>)
    6866:	add	r0, pc
    6868:	bl	6064 <error@@Base+0x134>
    686c:	bic.w	r2, r4, #2048	; 0x800
    6870:	movs	r1, #4
    6872:	mov	r0, r6
    6874:	blx	1c48 <fcntl64@plt>
    6878:	adds	r3, r0, #1
    687a:	mov	r5, r0
    687c:	it	ne
    687e:	movne	r5, #0
    6880:	beq.n	68ac <error@@Base+0x97c>
    6882:	mov	r0, r5
    6884:	pop	{r4, r5, r6, pc}
    6886:	ldr	r0, [pc, #64]	; (68c8 <error@@Base+0x998>)
    6888:	add	r0, pc
    688a:	bl	610c <error@@Base+0x1dc>
    688e:	mov	r0, r5
    6890:	pop	{r4, r5, r6, pc}
    6892:	blx	1f04 <__errno_location@plt>
    6896:	mov	r5, r4
    6898:	ldr	r0, [r0, #0]
    689a:	blx	1938 <strerror@plt+0x4>
    689e:	mov	r1, r6
    68a0:	mov	r2, r0
    68a2:	ldr	r0, [pc, #40]	; (68cc <error@@Base+0x99c>)
    68a4:	add	r0, pc
    68a6:	bl	5f30 <error@@Base>
    68aa:	b.n	6882 <error@@Base+0x952>
    68ac:	blx	1f04 <__errno_location@plt>
    68b0:	ldr	r0, [r0, #0]
    68b2:	blx	1938 <strerror@plt+0x4>
    68b6:	mov	r1, r6
    68b8:	mov	r2, r0
    68ba:	ldr	r0, [pc, #20]	; (68d0 <error@@Base+0x9a0>)
    68bc:	add	r0, pc
    68be:	bl	6064 <error@@Base+0x134>
    68c2:	b.n	6882 <error@@Base+0x952>
    68c4:	strh	r6, [r3, #42]	; 0x2a
    68c6:	movs	r0, r0
    68c8:	strh	r4, [r4, #40]	; 0x28
    68ca:	movs	r0, r0
    68cc:	strh	r4, [r3, #36]	; 0x24
    68ce:	movs	r0, r0
    68d0:	strh	r4, [r4, #40]	; 0x28
    68d2:	movs	r0, r0
    68d4:	push	{r4, lr}
    68d6:	mov	r4, r0
    68d8:	adds	r0, #11
    68da:	bne.n	68e4 <error@@Base+0x9b4>
    68dc:	blx	1f04 <__errno_location@plt>
    68e0:	ldr	r0, [r0, #0]
    68e2:	cbnz	r0, 68ee <error@@Base+0x9be>
    68e4:	mov	r0, r4
    68e6:	ldmia.w	sp!, {r4, lr}
    68ea:	b.w	1a44 <gai_strerror@plt>
    68ee:	ldmia.w	sp!, {r4, lr}
    68f2:	b.w	1934 <strerror@plt>
    68f6:	nop
    68f8:	push	{r4, r5, r6, lr}
    68fa:	sub	sp, #32
    68fc:	ldr	r5, [pc, #160]	; (69a0 <error@@Base+0xa70>)
    68fe:	add	r3, sp, #20
    6900:	ldr	r4, [pc, #160]	; (69a4 <error@@Base+0xa74>)
    6902:	add	r1, sp, #24
    6904:	add	r5, pc
    6906:	str	r3, [sp, #12]
    6908:	str	r1, [sp, #0]
    690a:	movs	r2, #1
    690c:	ldr	r4, [r5, r4]
    690e:	movs	r1, #6
    6910:	movs	r5, #4
    6912:	ldr	r4, [r4, #0]
    6914:	str	r4, [sp, #28]
    6916:	mov.w	r4, #0
    691a:	mov	r4, r0
    691c:	str	r5, [sp, #24]
    691e:	blx	1e8c <getsockopt@plt>
    6922:	ldr	r3, [sp, #12]
    6924:	adds	r0, #1
    6926:	beq.n	6986 <error@@Base+0xa56>
    6928:	ldr	r2, [sp, #20]
    692a:	cmp	r2, #1
    692c:	beq.n	6964 <error@@Base+0xa34>
    692e:	ldr	r0, [pc, #120]	; (69a8 <error@@Base+0xa78>)
    6930:	movs	r6, #1
    6932:	mov	r1, r4
    6934:	str	r3, [sp, #12]
    6936:	add	r0, pc
    6938:	str	r6, [sp, #20]
    693a:	bl	60b8 <error@@Base+0x188>
    693e:	ldr	r3, [sp, #12]
    6940:	mov	r2, r6
    6942:	mov	r0, r4
    6944:	movs	r1, #6
    6946:	str	r5, [sp, #0]
    6948:	blx	1ea4 <setsockopt@plt>
    694c:	adds	r0, #1
    694e:	beq.n	6970 <error@@Base+0xa40>
    6950:	ldr	r2, [pc, #88]	; (69ac <error@@Base+0xa7c>)
    6952:	ldr	r3, [pc, #80]	; (69a4 <error@@Base+0xa74>)
    6954:	add	r2, pc
    6956:	ldr	r3, [r2, r3]
    6958:	ldr	r2, [r3, #0]
    695a:	ldr	r3, [sp, #28]
    695c:	eors	r2, r3
    695e:	bne.n	699c <error@@Base+0xa6c>
    6960:	add	sp, #32
    6962:	pop	{r4, r5, r6, pc}
    6964:	ldr	r0, [pc, #72]	; (69b0 <error@@Base+0xa80>)
    6966:	mov	r1, r4
    6968:	add	r0, pc
    696a:	bl	60b8 <error@@Base+0x188>
    696e:	b.n	6950 <error@@Base+0xa20>
    6970:	blx	1f04 <__errno_location@plt>
    6974:	ldr	r0, [r0, #0]
    6976:	blx	1938 <strerror@plt+0x4>
    697a:	mov	r1, r0
    697c:	ldr	r0, [pc, #52]	; (69b4 <error@@Base+0xa84>)
    697e:	add	r0, pc
    6980:	bl	5f30 <error@@Base>
    6984:	b.n	6950 <error@@Base+0xa20>
    6986:	blx	1f04 <__errno_location@plt>
    698a:	ldr	r0, [r0, #0]
    698c:	blx	1938 <strerror@plt+0x4>
    6990:	mov	r1, r0
    6992:	ldr	r0, [pc, #36]	; (69b8 <error@@Base+0xa88>)
    6994:	add	r0, pc
    6996:	bl	6064 <error@@Base+0x134>
    699a:	b.n	6950 <error@@Base+0xa20>
    699c:	blx	1cf8 <__stack_chk_fail@plt>
    69a0:	add	r4, pc, #432	; (adr r4, 6b54 <error@@Base+0xc24>)
    69a2:	movs	r1, r0
    69a4:	lsls	r4, r1, #9
    69a6:	movs	r0, r0
    69a8:	strh	r6, [r0, #40]	; 0x28
    69aa:	movs	r0, r0
    69ac:	add	r4, pc, #112	; (adr r4, 6a20 <error@@Base+0xaf0>)
    69ae:	movs	r1, r0
    69b0:	strh	r4, [r7, #36]	; 0x24
    69b2:	movs	r0, r0
    69b4:	strh	r2, [r3, #38]	; 0x26
    69b6:	movs	r0, r0
    69b8:	strh	r0, [r6, #34]	; 0x22
    69ba:	movs	r0, r0
    69bc:	push	{r4, r5, lr}
    69be:	sub	sp, #20
    69c0:	ldr	r5, [pc, #92]	; (6a20 <error@@Base+0xaf0>)
    69c2:	movs	r3, #4
    69c4:	ldr	r4, [pc, #92]	; (6a24 <error@@Base+0xaf4>)
    69c6:	movs	r1, #1
    69c8:	add	r5, pc
    69ca:	str	r3, [sp, #0]
    69cc:	movs	r2, #2
    69ce:	add	r3, sp, #8
    69d0:	ldr	r4, [r5, r4]
    69d2:	mov	r5, r0
    69d4:	ldr	r4, [r4, #0]
    69d6:	str	r4, [sp, #12]
    69d8:	mov.w	r4, #0
    69dc:	str	r1, [sp, #8]
    69de:	blx	1ea4 <setsockopt@plt>
    69e2:	adds	r3, r0, #1
    69e4:	it	ne
    69e6:	movne	r4, #0
    69e8:	beq.n	6a00 <error@@Base+0xad0>
    69ea:	ldr	r2, [pc, #60]	; (6a28 <error@@Base+0xaf8>)
    69ec:	ldr	r3, [pc, #52]	; (6a24 <error@@Base+0xaf4>)
    69ee:	add	r2, pc
    69f0:	ldr	r3, [r2, r3]
    69f2:	ldr	r2, [r3, #0]
    69f4:	ldr	r3, [sp, #12]
    69f6:	eors	r2, r3
    69f8:	bne.n	6a1a <error@@Base+0xaea>
    69fa:	mov	r0, r4
    69fc:	add	sp, #20
    69fe:	pop	{r4, r5, pc}
    6a00:	mov	r4, r0
    6a02:	blx	1f04 <__errno_location@plt>
    6a06:	ldr	r0, [r0, #0]
    6a08:	blx	1938 <strerror@plt+0x4>
    6a0c:	mov	r1, r5
    6a0e:	mov	r2, r0
    6a10:	ldr	r0, [pc, #24]	; (6a2c <error@@Base+0xafc>)
    6a12:	add	r0, pc
    6a14:	bl	5f30 <error@@Base>
    6a18:	b.n	69ea <error@@Base+0xaba>
    6a1a:	blx	1cf8 <__stack_chk_fail@plt>
    6a1e:	nop
    6a20:	add	r3, pc, #672	; (adr r3, 6cc4 <error@@Base+0xd94>)
    6a22:	movs	r1, r0
    6a24:	lsls	r4, r1, #9
    6a26:	movs	r0, r0
    6a28:	add	r3, pc, #520	; (adr r3, 6c34 <error@@Base+0xd04>)
    6a2a:	movs	r1, r0
    6a2c:	strh	r6, [r4, #34]	; 0x22
    6a2e:	movs	r0, r0
    6a30:	b.w	cf44 <setlogin@@Base+0x113c>
    6a34:	b.w	cfd0 <setlogin@@Base+0x11c8>
    6a38:	movs	r1, #1
    6a3a:	b.n	65a8 <error@@Base+0x678>
    6a3c:	movs	r1, #0
    6a3e:	b.n	65a8 <error@@Base+0x678>
    6a40:	push	{r3, r4, r5, lr}
    6a42:	movs	r1, #28
    6a44:	mov	r5, r0
    6a46:	movs	r0, #1
    6a48:	bl	61d4 <error@@Base+0x2a4>
    6a4c:	mov	r4, r0
    6a4e:	ldr	r0, [r5, #0]
    6a50:	bl	6258 <error@@Base+0x328>
    6a54:	str	r0, [r4, #0]
    6a56:	ldr	r0, [r5, #4]
    6a58:	bl	6258 <error@@Base+0x328>
    6a5c:	str	r0, [r4, #4]
    6a5e:	ldr	r0, [r5, #16]
    6a60:	bl	6258 <error@@Base+0x328>
    6a64:	str	r0, [r4, #16]
    6a66:	ldr	r3, [r5, #8]
    6a68:	str	r3, [r4, #8]
    6a6a:	ldr	r3, [r5, #12]
    6a6c:	str	r3, [r4, #12]
    6a6e:	ldr	r0, [r5, #20]
    6a70:	bl	6258 <error@@Base+0x328>
    6a74:	str	r0, [r4, #20]
    6a76:	ldr	r0, [r5, #24]
    6a78:	bl	6258 <error@@Base+0x328>
    6a7c:	mov	r3, r0
    6a7e:	mov	r0, r4
    6a80:	str	r3, [r4, #24]
    6a82:	pop	{r3, r4, r5, pc}
    6a84:	push	{r4, r5, lr}
    6a86:	sub	sp, #28
    6a88:	movw	r4, #65535	; 0xffff
    6a8c:	movs	r5, #0
    6a8e:	strd	r4, r5, [sp]
    6a92:	add	r3, sp, #16
    6a94:	ldr	r4, [pc, #76]	; (6ae4 <error@@Base+0xbb4>)
    6a96:	movs	r2, #0
    6a98:	ldr	r1, [pc, #76]	; (6ae8 <error@@Base+0xbb8>)
    6a9a:	add	r4, pc
    6a9c:	str	r3, [sp, #8]
    6a9e:	movs	r3, #0
    6aa0:	ldr	r1, [r4, r1]
    6aa2:	mov	r4, r0
    6aa4:	ldr	r1, [r1, #0]
    6aa6:	str	r1, [sp, #20]
    6aa8:	mov.w	r1, #0
    6aac:	bl	c894 <setlogin@@Base+0xa8c>
    6ab0:	ldr	r3, [sp, #16]
    6ab2:	cbz	r3, 6ac6 <error@@Base+0xb96>
    6ab4:	ldr	r1, [pc, #52]	; (6aec <error@@Base+0xbbc>)
    6ab6:	mov	r0, r4
    6ab8:	add	r1, pc
    6aba:	blx	1e80 <getservbyname@plt>
    6abe:	cbz	r0, 6ada <error@@Base+0xbaa>
    6ac0:	ldr	r0, [r0, #8]
    6ac2:	rev16	r0, r0
    6ac4:	uxth	r0, r0
    6ac6:	ldr	r2, [pc, #40]	; (6af0 <error@@Base+0xbc0>)
    6ac8:	ldr	r3, [pc, #28]	; (6ae8 <error@@Base+0xbb8>)
    6aca:	add	r2, pc
    6acc:	ldr	r3, [r2, r3]
    6ace:	ldr	r2, [r3, #0]
    6ad0:	ldr	r3, [sp, #20]
    6ad2:	eors	r2, r3
    6ad4:	bne.n	6ae0 <error@@Base+0xbb0>
    6ad6:	add	sp, #28
    6ad8:	pop	{r4, r5, pc}
    6ada:	mov.w	r0, #4294967295	; 0xffffffff
    6ade:	b.n	6ac6 <error@@Base+0xb96>
    6ae0:	blx	1cf8 <__stack_chk_fail@plt>
    6ae4:	add	r2, pc, #856	; (adr r2, 6e40 <error@@Base+0xf10>)
    6ae6:	movs	r1, r0
    6ae8:	lsls	r4, r1, #9
    6aea:	movs	r0, r0
    6aec:	strh	r4, [r4, #30]
    6aee:	movs	r0, r0
    6af0:	add	r2, pc, #664	; (adr r2, 6d8c <error@@Base+0xe5c>)
    6af2:	movs	r1, r0
    6af4:	ldr	r2, [pc, #204]	; (6bc4 <error@@Base+0xc94>)
    6af6:	ldr	r3, [pc, #208]	; (6bc8 <error@@Base+0xc98>)
    6af8:	add	r2, pc
    6afa:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    6afe:	sub	sp, #24
    6b00:	ldr	r3, [r2, r3]
    6b02:	movs	r6, #0
    6b04:	mov	r8, r0
    6b06:	ldr	r3, [r3, #0]
    6b08:	str	r3, [sp, #20]
    6b0a:	mov.w	r3, #0
    6b0e:	str	r6, [sp, #16]
    6b10:	cbz	r1, 6b6e <error@@Base+0xc3e>
    6b12:	mvn.w	r3, #2147483648	; 0x80000000
    6b16:	str	r3, [r1, #0]
    6b18:	mov	r4, r1
    6b1a:	bl	6258 <error@@Base+0x328>
    6b1e:	movs	r1, #58	; 0x3a
    6b20:	mov	r7, r0
    6b22:	blx	19e0 <strchr@plt>
    6b26:	mov	r5, r0
    6b28:	cmp	r0, #0
    6b2a:	beq.n	6bac <error@@Base+0xc7c>
    6b2c:	mov	r1, r6
    6b2e:	strb.w	r6, [r0], #1
    6b32:	bl	6af4 <error@@Base+0xbc4>
    6b36:	mov	r1, r6
    6b38:	str	r0, [r4, #0]
    6b3a:	mov	r0, r7
    6b3c:	bl	6af4 <error@@Base+0xbc4>
    6b40:	mov	r5, r0
    6b42:	mov	r0, r7
    6b44:	blx	1adc <free@plt+0x4>
    6b48:	ldr	r2, [r4, #0]
    6b4a:	movw	r3, #65534	; 0xfffe
    6b4e:	movt	r3, #32767	; 0x7fff
    6b52:	cmp	r2, r3
    6b54:	beq.n	6ba2 <error@@Base+0xc72>
    6b56:	ldr	r2, [pc, #116]	; (6bcc <error@@Base+0xc9c>)
    6b58:	ldr	r3, [pc, #108]	; (6bc8 <error@@Base+0xc98>)
    6b5a:	add	r2, pc
    6b5c:	ldr	r3, [r2, r3]
    6b5e:	ldr	r2, [r3, #0]
    6b60:	ldr	r3, [sp, #20]
    6b62:	eors	r2, r3
    6b64:	bne.n	6bbe <error@@Base+0xc8e>
    6b66:	mov	r0, r5
    6b68:	add	sp, #24
    6b6a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    6b6e:	ldr	r1, [pc, #96]	; (6bd0 <error@@Base+0xca0>)
    6b70:	mvn.w	r5, #2147483648	; 0x80000000
    6b74:	add	r1, pc
    6b76:	blx	19ec <strcasecmp@plt>
    6b7a:	cmp	r0, #0
    6b7c:	beq.n	6b56 <error@@Base+0xc26>
    6b7e:	add	r3, sp, #16
    6b80:	movs	r5, #0
    6b82:	str	r3, [sp, #8]
    6b84:	mov	r0, r8
    6b86:	movs	r3, #0
    6b88:	movw	r4, #65533	; 0xfffd
    6b8c:	movs	r2, #0
    6b8e:	movt	r4, #32767	; 0x7fff
    6b92:	strd	r4, r5, [sp]
    6b96:	bl	c894 <setlogin@@Base+0xa8c>
    6b9a:	ldr	r3, [sp, #16]
    6b9c:	mov	r5, r0
    6b9e:	cmp	r3, #0
    6ba0:	beq.n	6b56 <error@@Base+0xc26>
    6ba2:	movw	r5, #65534	; 0xfffe
    6ba6:	movt	r5, #32767	; 0x7fff
    6baa:	b.n	6b56 <error@@Base+0xc26>
    6bac:	mov	r0, r7
    6bae:	blx	1adc <free@plt+0x4>
    6bb2:	mov	r1, r5
    6bb4:	mov	r0, r8
    6bb6:	bl	6af4 <error@@Base+0xbc4>
    6bba:	mov	r5, r0
    6bbc:	b.n	6b56 <error@@Base+0xc26>
    6bbe:	blx	1cf8 <__stack_chk_fail@plt>
    6bc2:	nop
    6bc4:	add	r2, pc, #480	; (adr r2, 6da8 <error@@Base+0xe78>)
    6bc6:	movs	r1, r0
    6bc8:	lsls	r4, r1, #9
    6bca:	movs	r0, r0
    6bcc:	add	r2, pc, #88	; (adr r2, 6c28 <error@@Base+0xcf8>)
    6bce:	movs	r1, r0
    6bd0:	strh	r4, [r5, #24]
    6bd2:	movs	r0, r0
    6bd4:	ldr	r2, [pc, #340]	; (6d2c <error@@Base+0xdfc>)
    6bd6:	ldr	r3, [pc, #344]	; (6d30 <error@@Base+0xe00>)
    6bd8:	add	r2, pc
    6bda:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6bde:	sub	sp, #20
    6be0:	ldr	r3, [r2, r3]
    6be2:	mov	r9, r0
    6be4:	movs	r4, #0
    6be6:	ldr	r3, [r3, #0]
    6be8:	str	r3, [sp, #12]
    6bea:	mov.w	r3, #0
    6bee:	blx	1f04 <__errno_location@plt>
    6bf2:	str	r4, [r0, #0]
    6bf4:	cmp.w	r9, #0
    6bf8:	beq.n	6ce2 <error@@Base+0xdb2>
    6bfa:	ldrb.w	r2, [r9]
    6bfe:	cmp	r2, #0
    6c00:	beq.n	6ce2 <error@@Base+0xdb2>
    6c02:	movw	r7, #6699	; 0x1a2b
    6c06:	mov.w	sl, #14976	; 0x3a80
    6c0a:	movt	r7, #9
    6c0e:	movt	sl, #9
    6c12:	add.w	r8, sp, #8
    6c16:	mov	r6, r0
    6c18:	movs	r5, #1
    6c1a:	mov.w	r3, #20864	; 0x5180
    6c1e:	movt	r3, #1
    6c22:	str	r3, [sp, #4]
    6c24:	movs	r2, #10
    6c26:	mov	r1, r8
    6c28:	mov	r0, r9
    6c2a:	blx	1bf0 <strtol@plt>
    6c2e:	ldr	r2, [sp, #8]
    6c30:	cmp	r2, r9
    6c32:	mov	fp, r0
    6c34:	beq.n	6ce2 <error@@Base+0xdb2>
    6c36:	ldr	r3, [r6, #0]
    6c38:	cmp	r3, #34	; 0x22
    6c3a:	beq.n	6cd8 <error@@Base+0xda8>
    6c3c:	cmp.w	fp, #0
    6c40:	blt.n	6ce2 <error@@Base+0xdb2>
    6c42:	adds	r3, r2, #1
    6c44:	str	r3, [sp, #8]
    6c46:	ldrb	r3, [r2, #0]
    6c48:	cmp	r3, #0
    6c4a:	beq.n	6d1a <error@@Base+0xdea>
    6c4c:	subs	r3, #68	; 0x44
    6c4e:	uxtb	r2, r3
    6c50:	cmp	r2, #51	; 0x33
    6c52:	bhi.n	6ce2 <error@@Base+0xdb2>
    6c54:	cmp	r3, #51	; 0x33
    6c56:	bhi.n	6ce2 <error@@Base+0xdb2>
    6c58:	tbb	[pc, r3]
    6c5c:	muls	r5, r2
    6c5e:	muls	r3, r0
    6c60:	orrs	r2, r7
    6c62:	muls	r3, r0
    6c64:	subs	r3, r0, r1
    6c66:	muls	r3, r0
    6c68:	muls	r3, r0
    6c6a:	ldr	r3, [r0, r5]
    6c6c:	muls	r3, r0
    6c6e:	str	r3, [r0, r5]
    6c70:	muls	r3, r0
    6c72:	muls	r3, r0
    6c74:	muls	r3, r0
    6c76:	muls	r3, r0
    6c78:	muls	r3, r0
    6c7a:	muls	r3, r0
    6c7c:	muls	r5, r2
    6c7e:	muls	r3, r0
    6c80:	orrs	r2, r7
    6c82:	muls	r3, r0
    6c84:	subs	r3, r0, r1
    6c86:	muls	r3, r0
    6c88:	muls	r3, r0
    6c8a:	ldr	r3, [r0, r5]
    6c8c:	muls	r3, r0
    6c8e:	str	r3, [r0, r5]
    6c90:	movw	r0, #8738	; 0x2222
    6c94:	movt	r0, #546	; 0x222
    6c98:	movs	r5, #60	; 0x3c
    6c9a:	cmp	r0, fp
    6c9c:	ble.n	6ce2 <error@@Base+0xdb2>
    6c9e:	mov	r1, fp
    6ca0:	mov	r0, r5
    6ca2:	bl	dfa0 <setlogin@@Base+0x2198>
    6ca6:	mov	r1, r0
    6ca8:	mvn.w	r0, #2147483648	; 0x80000000
    6cac:	str	r1, [sp, #0]
    6cae:	bl	df3c <setlogin@@Base+0x2134>
    6cb2:	cmp	r0, r4
    6cb4:	ble.n	6ce2 <error@@Base+0xdb2>
    6cb6:	mov	r0, r4
    6cb8:	ldr	r1, [sp, #0]
    6cba:	bl	ded8 <setlogin@@Base+0x20d0>
    6cbe:	subs	r4, r0, #0
    6cc0:	blt.n	6ce2 <error@@Base+0xdb2>
    6cc2:	ldr.w	r9, [sp, #8]
    6cc6:	ldrb.w	r2, [r9]
    6cca:	cmp	r2, #0
    6ccc:	bne.n	6c24 <error@@Base+0xcf4>
    6cce:	b.n	6ce6 <error@@Base+0xdb6>
    6cd0:	mov	r0, r7
    6cd2:	mov.w	r5, #3600	; 0xe10
    6cd6:	b.n	6c9a <error@@Base+0xd6a>
    6cd8:	add.w	r3, r0, #2147483648	; 0x80000000
    6cdc:	subs	r3, #1
    6cde:	adds	r3, #3
    6ce0:	bls.n	6c3c <error@@Base+0xd0c>
    6ce2:	mov.w	r4, #4294967295	; 0xffffffff
    6ce6:	ldr	r2, [pc, #76]	; (6d34 <error@@Base+0xe04>)
    6ce8:	ldr	r3, [pc, #68]	; (6d30 <error@@Base+0xe00>)
    6cea:	add	r2, pc
    6cec:	ldr	r3, [r2, r3]
    6cee:	ldr	r2, [r3, #0]
    6cf0:	ldr	r3, [sp, #12]
    6cf2:	eors	r2, r3
    6cf4:	bne.n	6d28 <error@@Base+0xdf8>
    6cf6:	mov	r0, r4
    6cf8:	add	sp, #20
    6cfa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6cfe:	movw	r0, #3550	; 0xdde
    6d02:	mov	r5, sl
    6d04:	b.n	6c9a <error@@Base+0xd6a>
    6d06:	ldr	r5, [sp, #4]
    6d08:	movw	r0, #24855	; 0x6117
    6d0c:	b.n	6c9a <error@@Base+0xd6a>
    6d0e:	mov	r1, r5
    6d10:	mvn.w	r0, #2147483648	; 0x80000000
    6d14:	bl	d5b8 <setlogin@@Base+0x17b0>
    6d18:	b.n	6c9a <error@@Base+0xd6a>
    6d1a:	mov	r1, r5
    6d1c:	mvn.w	r0, #2147483648	; 0x80000000
    6d20:	str	r2, [sp, #8]
    6d22:	bl	d5b8 <setlogin@@Base+0x17b0>
    6d26:	b.n	6c9a <error@@Base+0xd6a>
    6d28:	blx	1cf8 <__stack_chk_fail@plt>
    6d2c:	add	r1, pc, #608	; (adr r1, 6f90 <error@@Base+0x1060>)
    6d2e:	movs	r1, r0
    6d30:	lsls	r4, r1, #9
    6d32:	movs	r0, r0
    6d34:	add	r0, pc, #536	; (adr r0, 6f50 <error@@Base+0x1020>)
    6d36:	movs	r1, r0
    6d38:	ldr	r2, [pc, #108]	; (6da8 <error@@Base+0xe78>)
    6d3a:	cmp	r1, #22
    6d3c:	it	ne
    6d3e:	cmpne	r1, #0
    6d40:	ldr	r3, [pc, #104]	; (6dac <error@@Base+0xe7c>)
    6d42:	add	r2, pc
    6d44:	push	{lr}
    6d46:	sub	sp, #20
    6d48:	ldr	r3, [r2, r3]
    6d4a:	ldr	r3, [r3, #0]
    6d4c:	str	r3, [sp, #12]
    6d4e:	mov.w	r3, #0
    6d52:	beq.n	6d8a <error@@Base+0xe5a>
    6d54:	ldr	r2, [pc, #88]	; (6db0 <error@@Base+0xe80>)
    6d56:	mov	r3, r0
    6d58:	str	r1, [sp, #0]
    6d5a:	add	r0, sp, #8
    6d5c:	add	r2, pc
    6d5e:	movs	r1, #1
    6d60:	blx	1b0c <__asprintf_chk@plt>
    6d64:	adds	r0, #1
    6d66:	beq.n	6d94 <error@@Base+0xe64>
    6d68:	ldr	r0, [pc, #72]	; (6db4 <error@@Base+0xe84>)
    6d6a:	ldr	r1, [sp, #8]
    6d6c:	add	r0, pc
    6d6e:	bl	610c <error@@Base+0x1dc>
    6d72:	ldr	r0, [sp, #8]
    6d74:	ldr	r2, [pc, #64]	; (6db8 <error@@Base+0xe88>)
    6d76:	ldr	r3, [pc, #52]	; (6dac <error@@Base+0xe7c>)
    6d78:	add	r2, pc
    6d7a:	ldr	r3, [r2, r3]
    6d7c:	ldr	r2, [r3, #0]
    6d7e:	ldr	r3, [sp, #12]
    6d80:	eors	r2, r3
    6d82:	bne.n	6d90 <error@@Base+0xe60>
    6d84:	add	sp, #20
    6d86:	ldr.w	pc, [sp], #4
    6d8a:	bl	6258 <error@@Base+0x328>
    6d8e:	b.n	6d74 <error@@Base+0xe44>
    6d90:	blx	1cf8 <__stack_chk_fail@plt>
    6d94:	blx	1f04 <__errno_location@plt>
    6d98:	ldr	r0, [r0, #0]
    6d9a:	blx	1938 <strerror@plt+0x4>
    6d9e:	mov	r1, r0
    6da0:	ldr	r0, [pc, #24]	; (6dbc <error@@Base+0xe8c>)
    6da2:	add	r0, pc
    6da4:	bl	59b8 <fputs@plt+0x3a84>
    6da8:	add	r0, pc, #184	; (adr r0, 6e64 <error@@Base+0xf34>)
    6daa:	movs	r1, r0
    6dac:	lsls	r4, r1, #9
    6dae:	movs	r0, r0
    6db0:	strh	r0, [r1, #10]
    6db2:	movs	r0, r0
    6db4:	strh	r4, [r3, #10]
    6db6:	movs	r0, r0
    6db8:	ldr	r7, [sp, #992]	; 0x3e0
    6dba:	movs	r1, r0
    6dbc:	strh	r2, [r1, #8]
    6dbe:	movs	r0, r0
    6dc0:	push	{r4, r5, r6, lr}
    6dc2:	mov	r4, r0
    6dc4:	cbz	r0, 6dec <error@@Base+0xebc>
    6dc6:	ldr	r5, [r0, #0]
    6dc8:	cbz	r5, 6dee <error@@Base+0xebe>
    6dca:	ldrb	r3, [r5, #0]
    6dcc:	mov	r6, r1
    6dce:	cmp	r3, #91	; 0x5b
    6dd0:	beq.n	6df8 <error@@Base+0xec8>
    6dd2:	ldr	r1, [pc, #84]	; (6e28 <error@@Base+0xef8>)
    6dd4:	mov	r0, r5
    6dd6:	add	r1, pc
    6dd8:	blx	1ebc <strpbrk@plt>
    6ddc:	mov	r3, r0
    6dde:	cbz	r0, 6e1e <error@@Base+0xeee>
    6de0:	ldrb	r2, [r3, #0]
    6de2:	cmp	r2, #47	; 0x2f
    6de4:	beq.n	6e0e <error@@Base+0xede>
    6de6:	cmp	r2, #58	; 0x3a
    6de8:	beq.n	6e0e <error@@Base+0xede>
    6dea:	cbz	r2, 6df2 <error@@Base+0xec2>
    6dec:	movs	r5, #0
    6dee:	mov	r0, r5
    6df0:	pop	{r4, r5, r6, pc}
    6df2:	mov	r0, r5
    6df4:	str	r2, [r4, #0]
    6df6:	pop	{r4, r5, r6, pc}
    6df8:	movs	r1, #93	; 0x5d
    6dfa:	mov	r0, r5
    6dfc:	blx	19e0 <strchr@plt>
    6e00:	mov	r3, r0
    6e02:	cmp	r0, #0
    6e04:	beq.n	6dec <error@@Base+0xebc>
    6e06:	ldrb	r2, [r3, #1]
    6e08:	adds	r3, #1
    6e0a:	cmp	r2, #47	; 0x2f
    6e0c:	bne.n	6de6 <error@@Base+0xeb6>
    6e0e:	cbz	r6, 6e12 <error@@Base+0xee2>
    6e10:	strb	r2, [r6, #0]
    6e12:	movs	r2, #0
    6e14:	mov	r0, r5
    6e16:	strb.w	r2, [r3], #1
    6e1a:	str	r3, [r4, #0]
    6e1c:	pop	{r4, r5, r6, pc}
    6e1e:	mov	r0, r5
    6e20:	blx	1b6c <strlen@plt>
    6e24:	adds	r3, r5, r0
    6e26:	b.n	6de0 <error@@Base+0xeb0>
    6e28:	strh	r6, [r0, #8]
    6e2a:	movs	r0, r0
    6e2c:	movs	r1, #0
    6e2e:	b.w	6dc0 <error@@Base+0xe90>
    6e32:	nop
    6e34:	push	{r4, lr}
    6e36:	mov	r4, r0
    6e38:	ldrb	r3, [r0, #0]
    6e3a:	cmp	r3, #91	; 0x5b
    6e3c:	bne.n	6e50 <error@@Base+0xf20>
    6e3e:	blx	1b6c <strlen@plt>
    6e42:	subs	r0, #1
    6e44:	ldrb	r3, [r4, r0]
    6e46:	cmp	r3, #93	; 0x5d
    6e48:	ittt	eq
    6e4a:	moveq	r3, #0
    6e4c:	strbeq	r3, [r4, r0]
    6e4e:	addeq	r4, #1
    6e50:	mov	r0, r4
    6e52:	pop	{r4, pc}
    6e54:	ldrb	r3, [r0, #0]
    6e56:	cmp	r3, #58	; 0x3a
    6e58:	beq.n	6e8e <error@@Base+0xf5e>
    6e5a:	sub.w	r2, r3, #91	; 0x5b
    6e5e:	clz	r2, r2
    6e62:	lsrs	r2, r2, #5
    6e64:	cbnz	r3, 6e78 <error@@Base+0xf48>
    6e66:	b.n	6e8e <error@@Base+0xf5e>
    6e68:	cmp	r3, #93	; 0x5d
    6e6a:	bne.n	6e92 <error@@Base+0xf62>
    6e6c:	ldrb	r3, [r0, #1]
    6e6e:	cmp	r3, #58	; 0x3a
    6e70:	beq.n	6e9c <error@@Base+0xf6c>
    6e72:	ldrb	r3, [r0, #1]
    6e74:	adds	r0, #1
    6e76:	cbz	r3, 6e8e <error@@Base+0xf5e>
    6e78:	cmp	r3, #64	; 0x40
    6e7a:	bne.n	6e68 <error@@Base+0xf38>
    6e7c:	ldrb	r3, [r0, #1]
    6e7e:	cmp	r3, #91	; 0x5b
    6e80:	bne.n	6e72 <error@@Base+0xf42>
    6e82:	ldrb	r3, [r0, #2]
    6e84:	adds	r0, #1
    6e86:	adds	r0, #1
    6e88:	movs	r2, #1
    6e8a:	cmp	r3, #0
    6e8c:	bne.n	6e78 <error@@Base+0xf48>
    6e8e:	movs	r0, #0
    6e90:	bx	lr
    6e92:	cmp	r3, #58	; 0x3a
    6e94:	bne.n	6ea4 <error@@Base+0xf74>
    6e96:	cmp	r2, #0
    6e98:	bne.n	6e72 <error@@Base+0xf42>
    6e9a:	bx	lr
    6e9c:	cmp	r2, #0
    6e9e:	beq.n	6e72 <error@@Base+0xf42>
    6ea0:	adds	r0, #1
    6ea2:	bx	lr
    6ea4:	cmp	r3, #47	; 0x2f
    6ea6:	bne.n	6e72 <error@@Base+0xf42>
    6ea8:	movs	r0, #0
    6eaa:	bx	lr
    6eac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    6eb0:	mov	r6, r2
    6eb2:	mov	r5, r3
    6eb4:	mov	r7, r1
    6eb6:	cbz	r1, 6ebc <error@@Base+0xf8c>
    6eb8:	movs	r3, #0
    6eba:	str	r3, [r1, #0]
    6ebc:	cbz	r6, 6ec2 <error@@Base+0xf92>
    6ebe:	movs	r3, #0
    6ec0:	str	r3, [r6, #0]
    6ec2:	cbz	r5, 6ec8 <error@@Base+0xf98>
    6ec4:	movs	r3, #0
    6ec6:	str	r3, [r5, #0]
    6ec8:	bl	6258 <error@@Base+0x328>
    6ecc:	mov	r8, r0
    6ece:	bl	6e54 <error@@Base+0xf24>
    6ed2:	mov	r4, r0
    6ed4:	cmp	r0, #0
    6ed6:	beq.n	6f64 <error@@Base+0x1034>
    6ed8:	ldrb	r3, [r0, #1]
    6eda:	movs	r2, #0
    6edc:	adds	r0, #1
    6ede:	strb.w	r2, [r0, #-1]
    6ee2:	cbz	r3, 6f46 <error@@Base+0x1016>
    6ee4:	bl	6258 <error@@Base+0x328>
    6ee8:	movs	r1, #64	; 0x40
    6eea:	mov	r9, r0
    6eec:	mov	r0, r8
    6eee:	blx	1a54 <strrchr@plt>
    6ef2:	mov	r4, r0
    6ef4:	cbz	r0, 6f56 <error@@Base+0x1026>
    6ef6:	movs	r3, #0
    6ef8:	strb.w	r3, [r0], #1
    6efc:	bl	6e34 <error@@Base+0xf04>
    6f00:	bl	6258 <error@@Base+0x328>
    6f04:	ldrb.w	r4, [r8]
    6f08:	mov	sl, r0
    6f0a:	cbnz	r4, 6f4c <error@@Base+0x101c>
    6f0c:	cbz	r7, 6f12 <error@@Base+0xfe2>
    6f0e:	str	r4, [r7, #0]
    6f10:	movs	r4, #0
    6f12:	cbz	r6, 6f1c <error@@Base+0xfec>
    6f14:	str.w	sl, [r6]
    6f18:	mov.w	sl, #0
    6f1c:	cbz	r5, 6f28 <error@@Base+0xff8>
    6f1e:	str.w	r9, [r5]
    6f22:	mov.w	r9, #0
    6f26:	mov	r5, r9
    6f28:	mov	r0, r8
    6f2a:	blx	1adc <free@plt+0x4>
    6f2e:	mov	r0, r4
    6f30:	blx	1adc <free@plt+0x4>
    6f34:	mov	r0, sl
    6f36:	blx	1adc <free@plt+0x4>
    6f3a:	mov	r0, r9
    6f3c:	blx	1adc <free@plt+0x4>
    6f40:	mov	r0, r5
    6f42:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    6f46:	ldr	r0, [pc, #40]	; (6f70 <error@@Base+0x1040>)
    6f48:	add	r0, pc
    6f4a:	b.n	6ee4 <error@@Base+0xfb4>
    6f4c:	mov	r0, r8
    6f4e:	bl	6258 <error@@Base+0x328>
    6f52:	mov	r4, r0
    6f54:	b.n	6f0c <error@@Base+0xfdc>
    6f56:	mov	r0, r8
    6f58:	bl	6e34 <error@@Base+0xf04>
    6f5c:	bl	6258 <error@@Base+0x328>
    6f60:	mov	sl, r0
    6f62:	b.n	6f0c <error@@Base+0xfdc>
    6f64:	mov	r9, r0
    6f66:	mov	sl, r0
    6f68:	mov.w	r5, #4294967295	; 0xffffffff
    6f6c:	b.n	6f28 <error@@Base+0xff8>
    6f6e:	nop
    6f70:	strb	r4, [r4, #14]
    6f72:	movs	r0, r0
    6f74:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    6f78:	mov	r7, r2
    6f7a:	ldr	r2, [pc, #236]	; (7068 <error@@Base+0x1138>)
    6f7c:	mov	r5, r3
    6f7e:	ldr	r3, [pc, #236]	; (706c <error@@Base+0x113c>)
    6f80:	sub	sp, #12
    6f82:	add	r2, pc
    6f84:	mov	r8, r1
    6f86:	ldr	r3, [r2, r3]
    6f88:	ldr	r3, [r3, #0]
    6f8a:	str	r3, [sp, #4]
    6f8c:	mov.w	r3, #0
    6f90:	cbz	r1, 6f96 <error@@Base+0x1066>
    6f92:	movs	r3, #0
    6f94:	str	r3, [r1, #0]
    6f96:	cbz	r7, 6f9c <error@@Base+0x106c>
    6f98:	movs	r3, #0
    6f9a:	str	r3, [r7, #0]
    6f9c:	cbz	r5, 6fa4 <error@@Base+0x1074>
    6f9e:	mov.w	r3, #4294967295	; 0xffffffff
    6fa2:	str	r3, [r5, #0]
    6fa4:	blx	1cd4 <strdup@plt+0x4>
    6fa8:	mov	r4, r0
    6faa:	str	r0, [sp, #0]
    6fac:	cmp	r0, #0
    6fae:	beq.n	7062 <error@@Base+0x1132>
    6fb0:	movs	r1, #64	; 0x40
    6fb2:	blx	1a54 <strrchr@plt>
    6fb6:	mov	r6, r0
    6fb8:	cmp	r0, #0
    6fba:	beq.n	705a <error@@Base+0x112a>
    6fbc:	movs	r3, #0
    6fbe:	strb	r3, [r0, #0]
    6fc0:	ldrb	r3, [r4, #0]
    6fc2:	cbnz	r3, 6ff6 <error@@Base+0x10c6>
    6fc4:	movs	r6, #0
    6fc6:	mov.w	r5, #4294967295	; 0xffffffff
    6fca:	mov	r9, r6
    6fcc:	mov	r0, r4
    6fce:	blx	1adc <free@plt+0x4>
    6fd2:	mov	r0, r9
    6fd4:	blx	1adc <free@plt+0x4>
    6fd8:	mov	r0, r6
    6fda:	blx	1adc <free@plt+0x4>
    6fde:	ldr	r2, [pc, #144]	; (7070 <error@@Base+0x1140>)
    6fe0:	ldr	r3, [pc, #136]	; (706c <error@@Base+0x113c>)
    6fe2:	add	r2, pc
    6fe4:	ldr	r3, [r2, r3]
    6fe6:	ldr	r2, [r3, #0]
    6fe8:	ldr	r3, [sp, #4]
    6fea:	eors	r2, r3
    6fec:	bne.n	705e <error@@Base+0x112e>
    6fee:	mov	r0, r5
    6ff0:	add	sp, #12
    6ff2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    6ff6:	mov	r0, r4
    6ff8:	blx	1cd4 <strdup@plt+0x4>
    6ffc:	mov	r9, r0
    6ffe:	cmp	r0, #0
    7000:	beq.n	6fc4 <error@@Base+0x1094>
    7002:	adds	r6, #1
    7004:	str	r6, [sp, #0]
    7006:	movs	r1, #0
    7008:	mov	r0, sp
    700a:	bl	6dc0 <error@@Base+0xe90>
    700e:	mov	r6, r0
    7010:	cbz	r0, 7054 <error@@Base+0x1124>
    7012:	ldrb	r6, [r0, #0]
    7014:	cbz	r6, 7054 <error@@Base+0x1124>
    7016:	bl	6e34 <error@@Base+0xf04>
    701a:	bl	6258 <error@@Base+0x328>
    701e:	ldr	r3, [sp, #0]
    7020:	mov	r6, r0
    7022:	cbz	r3, 7028 <error@@Base+0x10f8>
    7024:	ldrb	r2, [r3, #0]
    7026:	cbnz	r2, 704a <error@@Base+0x111a>
    7028:	mov.w	r0, #4294967295	; 0xffffffff
    702c:	cmp.w	r8, #0
    7030:	beq.n	703a <error@@Base+0x110a>
    7032:	str.w	r9, [r8]
    7036:	mov.w	r9, #0
    703a:	cbz	r7, 7040 <error@@Base+0x1110>
    703c:	str	r6, [r7, #0]
    703e:	movs	r6, #0
    7040:	cmp	r5, #0
    7042:	beq.n	6fcc <error@@Base+0x109c>
    7044:	str	r0, [r5, #0]
    7046:	movs	r5, #0
    7048:	b.n	6fcc <error@@Base+0x109c>
    704a:	mov	r0, r3
    704c:	bl	6a84 <error@@Base+0xb54>
    7050:	cmp	r0, #0
    7052:	bgt.n	702c <error@@Base+0x10fc>
    7054:	mov.w	r5, #4294967295	; 0xffffffff
    7058:	b.n	6fcc <error@@Base+0x109c>
    705a:	mov	r9, r0
    705c:	b.n	7006 <error@@Base+0x10d6>
    705e:	blx	1cf8 <__stack_chk_fail@plt>
    7062:	mov.w	r5, #4294967295	; 0xffffffff
    7066:	b.n	6fde <error@@Base+0x10ae>
    7068:	ldr	r5, [sp, #952]	; 0x3b8
    706a:	movs	r1, r0
    706c:	lsls	r4, r1, #9
    706e:	movs	r0, r0
    7070:	ldr	r5, [sp, #568]	; 0x238
    7072:	movs	r1, r0
    7074:	push	{r1, r2, r3}
    7076:	movs	r1, #1
    7078:	push	{r4, r5, r6, lr}
    707a:	sub	sp, #20
    707c:	ldr	r6, [pc, #128]	; (7100 <error@@Base+0x11d0>)
    707e:	add	r3, sp, #36	; 0x24
    7080:	ldr	r5, [pc, #128]	; (7104 <error@@Base+0x11d4>)
    7082:	mov	r4, r0
    7084:	add	r6, pc
    7086:	ldr.w	r2, [r3], #4
    708a:	add	r0, sp, #8
    708c:	ldr	r5, [r6, r5]
    708e:	ldr	r5, [r5, #0]
    7090:	str	r5, [sp, #12]
    7092:	mov.w	r5, #0
    7096:	str	r3, [sp, #4]
    7098:	blx	1ef8 <__vasprintf_chk@plt>
    709c:	adds	r0, #1
    709e:	beq.n	70f4 <error@@Base+0x11c4>
    70a0:	ldr	r0, [r4, #0]
    70a2:	ldr	r1, [r4, #8]
    70a4:	cbz	r0, 70ee <error@@Base+0x11be>
    70a6:	ldr	r3, [r4, #4]
    70a8:	adds	r3, #2
    70aa:	cmp	r3, r1
    70ac:	ite	cs
    70ae:	lslcs	r5, r1, #1
    70b0:	movcc	r5, r1
    70b2:	movs	r3, #4
    70b4:	mov	r2, r5
    70b6:	bl	6238 <error@@Base+0x308>
    70ba:	ldr	r3, [r4, #4]
    70bc:	ldr	r2, [sp, #8]
    70be:	movs	r1, #0
    70c0:	adds	r6, r3, #1
    70c2:	strd	r6, r5, [r4, #4]
    70c6:	str	r0, [r4, #0]
    70c8:	str.w	r2, [r0, r3, lsl #2]
    70cc:	ldrd	r3, r2, [r4]
    70d0:	str.w	r1, [r3, r2, lsl #2]
    70d4:	ldr	r2, [pc, #48]	; (7108 <error@@Base+0x11d8>)
    70d6:	ldr	r3, [pc, #44]	; (7104 <error@@Base+0x11d4>)
    70d8:	add	r2, pc
    70da:	ldr	r3, [r2, r3]
    70dc:	ldr	r2, [r3, #0]
    70de:	ldr	r3, [sp, #12]
    70e0:	eors	r2, r3
    70e2:	bne.n	70fc <error@@Base+0x11cc>
    70e4:	add	sp, #20
    70e6:	ldmia.w	sp!, {r4, r5, r6, lr}
    70ea:	add	sp, #12
    70ec:	bx	lr
    70ee:	movs	r5, #32
    70f0:	str	r0, [r4, #4]
    70f2:	b.n	70b2 <error@@Base+0x1182>
    70f4:	ldr	r0, [pc, #20]	; (710c <error@@Base+0x11dc>)
    70f6:	add	r0, pc
    70f8:	bl	59b8 <fputs@plt+0x3a84>
    70fc:	blx	1cf8 <__stack_chk_fail@plt>
    7100:	ldr	r4, [sp, #944]	; 0x3b0
    7102:	movs	r1, r0
    7104:	lsls	r4, r1, #9
    7106:	movs	r0, r0
    7108:	ldr	r4, [sp, #608]	; 0x260
    710a:	movs	r1, r0
    710c:	ldrb	r2, [r5, #23]
    710e:	movs	r0, r0
    7110:	push	{r2, r3}
    7112:	push	{r4, r5, lr}
    7114:	sub	sp, #20
    7116:	ldr.w	lr, [pc, #120]	; 7190 <error@@Base+0x1260>
    711a:	add	r3, sp, #32
    711c:	ldr.w	ip, [pc, #116]	; 7194 <error@@Base+0x1264>
    7120:	mov	r5, r0
    7122:	add	lr, pc
    7124:	ldr.w	r2, [r3], #4
    7128:	add	r0, sp, #8
    712a:	mov	r4, r1
    712c:	ldr.w	ip, [lr, ip]
    7130:	movs	r1, #1
    7132:	ldr.w	ip, [ip]
    7136:	str.w	ip, [sp, #12]
    713a:	mov.w	ip, #0
    713e:	str	r3, [sp, #4]
    7140:	blx	1ef8 <__vasprintf_chk@plt>
    7144:	adds	r0, #1
    7146:	beq.n	717a <error@@Base+0x124a>
    7148:	ldr	r2, [r5, #4]
    714a:	cmp	r2, r4
    714c:	bls.n	7186 <error@@Base+0x1256>
    714e:	ldr	r3, [r5, #0]
    7150:	ldr.w	r0, [r3, r4, lsl #2]
    7154:	blx	1adc <free@plt+0x4>
    7158:	ldr	r3, [r5, #0]
    715a:	ldr	r2, [sp, #8]
    715c:	str.w	r2, [r3, r4, lsl #2]
    7160:	ldr	r2, [pc, #52]	; (7198 <error@@Base+0x1268>)
    7162:	ldr	r3, [pc, #48]	; (7194 <error@@Base+0x1264>)
    7164:	add	r2, pc
    7166:	ldr	r3, [r2, r3]
    7168:	ldr	r2, [r3, #0]
    716a:	ldr	r3, [sp, #12]
    716c:	eors	r2, r3
    716e:	bne.n	7182 <error@@Base+0x1252>
    7170:	add	sp, #20
    7172:	ldmia.w	sp!, {r4, r5, lr}
    7176:	add	sp, #8
    7178:	bx	lr
    717a:	ldr	r0, [pc, #32]	; (719c <error@@Base+0x126c>)
    717c:	add	r0, pc
    717e:	bl	59b8 <fputs@plt+0x3a84>
    7182:	blx	1cf8 <__stack_chk_fail@plt>
    7186:	ldr	r0, [pc, #24]	; (71a0 <error@@Base+0x1270>)
    7188:	mov	r1, r4
    718a:	add	r0, pc
    718c:	bl	59b8 <fputs@plt+0x3a84>
    7190:	ldr	r4, [sp, #312]	; 0x138
    7192:	movs	r1, r0
    7194:	lsls	r4, r1, #9
    7196:	movs	r0, r0
    7198:	ldr	r4, [sp, #48]	; 0x30
    719a:	movs	r1, r0
    719c:	ldrb	r0, [r0, #22]
    719e:	movs	r0, r0
    71a0:	ldrb	r2, [r2, #22]
    71a2:	movs	r0, r0
    71a4:	push	{r3, r4, r5, lr}
    71a6:	mov	r5, r0
    71a8:	ldr	r0, [r0, #0]
    71aa:	cbz	r0, 71d0 <error@@Base+0x12a0>
    71ac:	ldr	r3, [r5, #4]
    71ae:	cbz	r3, 71c4 <error@@Base+0x1294>
    71b0:	movs	r4, #0
    71b2:	ldr.w	r0, [r0, r4, lsl #2]
    71b6:	adds	r4, #1
    71b8:	blx	1adc <free@plt+0x4>
    71bc:	ldrd	r0, r3, [r5]
    71c0:	cmp	r3, r4
    71c2:	bhi.n	71b2 <error@@Base+0x1282>
    71c4:	blx	1adc <free@plt+0x4>
    71c8:	movs	r3, #0
    71ca:	strd	r3, r3, [r5, #4]
    71ce:	str	r3, [r5, #0]
    71d0:	pop	{r3, r4, r5, pc}
    71d2:	nop
    71d4:	push	{r4, r5, r6, r7, lr}
    71d6:	mov	r6, r1
    71d8:	ldr	r1, [pc, #280]	; (72f4 <error@@Base+0x13c4>)
    71da:	sub	sp, #156	; 0x9c
    71dc:	ldr	r2, [pc, #280]	; (72f8 <error@@Base+0x13c8>)
    71de:	add	r1, pc
    71e0:	ldrb	r3, [r0, #0]
    71e2:	ldr	r2, [r1, r2]
    71e4:	cmp	r3, #126	; 0x7e
    71e6:	ldr	r2, [r2, #0]
    71e8:	str	r2, [sp, #148]	; 0x94
    71ea:	mov.w	r2, #0
    71ee:	bne.n	7272 <error@@Base+0x1342>
    71f0:	mov	r4, r0
    71f2:	adds	r4, #1
    71f4:	movs	r1, #47	; 0x2f
    71f6:	mov	r0, r4
    71f8:	blx	19e0 <strchr@plt>
    71fc:	cmp	r0, #0
    71fe:	it	ne
    7200:	cmpne	r4, r0
    7202:	mov	r5, r0
    7204:	bcs.n	7252 <error@@Base+0x1322>
    7206:	mov	r1, r4
    7208:	bl	df3c <setlogin@@Base+0x2134>
    720c:	cmp	r0, #127	; 0x7f
    720e:	mov	r6, r0
    7210:	bhi.n	72e0 <error@@Base+0x13b0>
    7212:	add	r7, sp, #20
    7214:	movs	r3, #128	; 0x80
    7216:	mov	r2, r0
    7218:	mov	r1, r4
    721a:	mov	r0, r7
    721c:	blx	1b18 <__memcpy_chk@plt>
    7220:	add	r3, sp, #152	; 0x98
    7222:	add	r6, r3
    7224:	mov	r0, r7
    7226:	movs	r3, #0
    7228:	strb.w	r3, [r6, #-132]
    722c:	blx	1f1c <getpwnam@plt>
    7230:	cmp	r0, #0
    7232:	beq.n	72d6 <error@@Base+0x13a6>
    7234:	ldr	r2, [r0, #20]
    7236:	mov	r0, r2
    7238:	str	r2, [sp, #12]
    723a:	blx	1b6c <strlen@plt>
    723e:	ldr	r2, [sp, #12]
    7240:	cbz	r0, 728a <error@@Base+0x135a>
    7242:	add	r0, r2
    7244:	ldrb.w	r3, [r0, #-1]
    7248:	cmp	r3, #47	; 0x2f
    724a:	beq.n	72c2 <error@@Base+0x1392>
    724c:	ldr	r3, [pc, #172]	; (72fc <error@@Base+0x13cc>)
    724e:	add	r3, pc
    7250:	b.n	728e <error@@Base+0x135e>
    7252:	mov	r0, r6
    7254:	blx	1ba0 <getpwuid@plt>
    7258:	cmp	r0, #0
    725a:	beq.n	72e8 <error@@Base+0x13b8>
    725c:	ldr	r2, [r0, #20]
    725e:	mov	r0, r2
    7260:	str	r2, [sp, #12]
    7262:	blx	1b6c <strlen@plt>
    7266:	ldr	r2, [sp, #12]
    7268:	cbnz	r0, 72ae <error@@Base+0x137e>
    726a:	ldr	r3, [pc, #148]	; (7300 <error@@Base+0x13d0>)
    726c:	add	r3, pc
    726e:	cbz	r5, 7290 <error@@Base+0x1360>
    7270:	b.n	728e <error@@Base+0x135e>
    7272:	bl	6258 <error@@Base+0x328>
    7276:	ldr	r2, [pc, #140]	; (7304 <error@@Base+0x13d4>)
    7278:	ldr	r3, [pc, #124]	; (72f8 <error@@Base+0x13c8>)
    727a:	add	r2, pc
    727c:	ldr	r3, [r2, r3]
    727e:	ldr	r2, [r3, #0]
    7280:	ldr	r3, [sp, #148]	; 0x94
    7282:	eors	r2, r3
    7284:	bne.n	72d2 <error@@Base+0x13a2>
    7286:	add	sp, #156	; 0x9c
    7288:	pop	{r4, r5, r6, r7, pc}
    728a:	ldr	r3, [pc, #124]	; (7308 <error@@Base+0x13d8>)
    728c:	add	r3, pc
    728e:	adds	r4, r5, #1
    7290:	ldr	r1, [pc, #120]	; (730c <error@@Base+0x13dc>)
    7292:	add	r0, sp, #16
    7294:	str	r4, [sp, #0]
    7296:	add	r1, pc
    7298:	bl	62a0 <error@@Base+0x370>
    729c:	cmp.w	r0, #4096	; 0x1000
    72a0:	it	lt
    72a2:	ldrlt	r0, [sp, #16]
    72a4:	blt.n	7276 <error@@Base+0x1346>
    72a6:	ldr	r0, [pc, #104]	; (7310 <error@@Base+0x13e0>)
    72a8:	add	r0, pc
    72aa:	bl	59b8 <fputs@plt+0x3a84>
    72ae:	add	r0, r2
    72b0:	ldrb.w	r3, [r0, #-1]
    72b4:	cmp	r3, #47	; 0x2f
    72b6:	beq.n	72c8 <error@@Base+0x1398>
    72b8:	ldr	r3, [pc, #88]	; (7314 <error@@Base+0x13e4>)
    72ba:	add	r3, pc
    72bc:	cmp	r5, #0
    72be:	beq.n	7290 <error@@Base+0x1360>
    72c0:	b.n	728e <error@@Base+0x135e>
    72c2:	ldr	r3, [pc, #84]	; (7318 <error@@Base+0x13e8>)
    72c4:	add	r3, pc
    72c6:	b.n	728e <error@@Base+0x135e>
    72c8:	ldr	r3, [pc, #80]	; (731c <error@@Base+0x13ec>)
    72ca:	add	r3, pc
    72cc:	cmp	r5, #0
    72ce:	beq.n	7290 <error@@Base+0x1360>
    72d0:	b.n	728e <error@@Base+0x135e>
    72d2:	blx	1cf8 <__stack_chk_fail@plt>
    72d6:	ldr	r0, [pc, #72]	; (7320 <error@@Base+0x13f0>)
    72d8:	mov	r1, r7
    72da:	add	r0, pc
    72dc:	bl	59b8 <fputs@plt+0x3a84>
    72e0:	ldr	r0, [pc, #64]	; (7324 <error@@Base+0x13f4>)
    72e2:	add	r0, pc
    72e4:	bl	59b8 <fputs@plt+0x3a84>
    72e8:	ldr	r0, [pc, #60]	; (7328 <error@@Base+0x13f8>)
    72ea:	mov	r1, r6
    72ec:	add	r0, pc
    72ee:	bl	59b8 <fputs@plt+0x3a84>
    72f2:	nop
    72f4:	ldr	r3, [sp, #584]	; 0x248
    72f6:	movs	r1, r0
    72f8:	lsls	r4, r1, #9
    72fa:	movs	r0, r0
    72fc:	strb	r6, [r6, #15]
    72fe:	movs	r0, r0
    7300:	strb	r0, [r3, #15]
    7302:	movs	r0, r0
    7304:	ldr	r2, [sp, #984]	; 0x3d8
    7306:	movs	r1, r0
    7308:	strb	r0, [r7, #14]
    730a:	movs	r0, r0
    730c:	strb	r6, [r4, #22]
    730e:	movs	r0, r0
    7310:	ldrb	r4, [r4, #20]
    7312:	movs	r0, r0
    7314:	strb	r2, [r1, #14]
    7316:	movs	r0, r0
    7318:	ldrb	r0, [r7, #9]
    731a:	movs	r0, r0
    731c:	ldrb	r2, [r6, #9]
    731e:	movs	r0, r0
    7320:	ldrb	r2, [r4, #18]
    7322:	movs	r0, r0
    7324:	ldrb	r6, [r5, #17]
    7326:	movs	r0, r0
    7328:	ldrb	r0, [r7, #18]
    732a:	movs	r0, r0
    732c:	push	{r0, r1, r2, r3}
    732e:	ldr	r2, [pc, #380]	; (74ac <error@@Base+0x157c>)
    7330:	ldr	r3, [pc, #380]	; (74b0 <error@@Base+0x1580>)
    7332:	add	r2, pc
    7334:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7338:	sub	sp, #148	; 0x94
    733a:	ldr	r3, [r2, r3]
    733c:	ldr	r7, [sp, #184]	; 0xb8
    733e:	ldr	r3, [r3, #0]
    7340:	str	r3, [sp, #140]	; 0x8c
    7342:	mov.w	r3, #0
    7346:	bl	9c6c <error@@Base+0x3d3c>
    734a:	cmp	r0, #0
    734c:	beq.w	7470 <error@@Base+0x1540>
    7350:	add	r4, sp, #188	; 0xbc
    7352:	add.w	r9, sp, #12
    7356:	mov	sl, r0
    7358:	movs	r5, #0
    735a:	mov	r0, r4
    735c:	mov	r3, r9
    735e:	str	r4, [sp, #8]
    7360:	b.n	7364 <error@@Base+0x1434>
    7362:	mov	r0, r1
    7364:	ldr.w	r2, [r4, r5, lsl #3]
    7368:	str	r2, [r3, #0]
    736a:	cbz	r2, 738a <error@@Base+0x145a>
    736c:	ldr	r2, [r0, #4]
    736e:	add.w	r1, r0, #8
    7372:	str	r2, [r3, #4]
    7374:	cmp	r2, #0
    7376:	beq.n	7464 <error@@Base+0x1534>
    7378:	adds	r5, #1
    737a:	adds	r3, #8
    737c:	cmp	r5, #16
    737e:	bne.n	7362 <error@@Base+0x1432>
    7380:	ldr	r3, [r0, #8]
    7382:	adds	r0, #12
    7384:	str	r0, [sp, #8]
    7386:	cmp	r3, #0
    7388:	bne.n	7458 <error@@Base+0x1528>
    738a:	ldrb	r3, [r7, #0]
    738c:	cbnz	r3, 73aa <error@@Base+0x147a>
    738e:	b.n	741a <error@@Base+0x14ea>
    7390:	ldrb	r1, [r7, #0]
    7392:	mov	r8, r7
    7394:	mov	r0, sl
    7396:	bl	aca8 <error@@Base+0x4d78>
    739a:	cmp	r0, #0
    739c:	bne.n	7446 <error@@Base+0x1516>
    739e:	ldrb.w	r3, [r8, #1]
    73a2:	add.w	r7, r8, #1
    73a6:	cmp	r3, #0
    73a8:	beq.n	741a <error@@Base+0x14ea>
    73aa:	cmp	r3, #37	; 0x25
    73ac:	bne.n	7390 <error@@Base+0x1460>
    73ae:	ldrb	r1, [r7, #1]
    73b0:	add.w	r8, r7, #1
    73b4:	cmp	r1, #37	; 0x25
    73b6:	beq.n	7394 <error@@Base+0x1464>
    73b8:	cmp	r1, #0
    73ba:	beq.n	749e <error@@Base+0x156e>
    73bc:	mov	fp, r1
    73be:	cbz	r5, 740c <error@@Base+0x14dc>
    73c0:	movs	r4, #1
    73c2:	b.n	73ce <error@@Base+0x149e>
    73c4:	cmp	r4, r5
    73c6:	add.w	r3, r4, #1
    73ca:	beq.n	740c <error@@Base+0x14dc>
    73cc:	mov	r4, r3
    73ce:	add.w	r3, r9, r4, lsl #3
    73d2:	str	r1, [sp, #4]
    73d4:	subs	r6, r4, #1
    73d6:	ldr.w	r0, [r3, #-8]
    73da:	blx	19e0 <strchr@plt>
    73de:	ldr	r1, [sp, #4]
    73e0:	cmp	r0, #0
    73e2:	beq.n	73c4 <error@@Base+0x1494>
    73e4:	add	r3, sp, #144	; 0x90
    73e6:	add.w	r3, r3, r6, lsl #3
    73ea:	ldr.w	r1, [r3, #-128]
    73ee:	mov	r0, r1
    73f0:	str	r1, [sp, #4]
    73f2:	blx	1b6c <strlen@plt>
    73f6:	ldr	r1, [sp, #4]
    73f8:	mov	r2, r0
    73fa:	mov	r0, sl
    73fc:	bl	aa08 <error@@Base+0x4ad8>
    7400:	cmp	r0, #0
    7402:	bne.n	748c <error@@Base+0x155c>
    7404:	cmp	r6, r5
    7406:	bcc.n	739e <error@@Base+0x146e>
    7408:	ldrb.w	fp, [r7, #1]
    740c:	ldr	r1, [pc, #164]	; (74b4 <error@@Base+0x1584>)
    740e:	mov	r2, fp
    7410:	ldr	r0, [pc, #164]	; (74b8 <error@@Base+0x1588>)
    7412:	add	r1, pc
    7414:	add	r0, pc
    7416:	bl	59b8 <fputs@plt+0x3a84>
    741a:	mov	r0, sl
    741c:	bl	b530 <error@@Base+0x5600>
    7420:	mov	r4, r0
    7422:	cbz	r0, 7480 <error@@Base+0x1550>
    7424:	mov	r0, sl
    7426:	bl	9d88 <error@@Base+0x3e58>
    742a:	ldr	r2, [pc, #144]	; (74bc <error@@Base+0x158c>)
    742c:	ldr	r3, [pc, #128]	; (74b0 <error@@Base+0x1580>)
    742e:	add	r2, pc
    7430:	ldr	r3, [r2, r3]
    7432:	ldr	r2, [r3, #0]
    7434:	ldr	r3, [sp, #140]	; 0x8c
    7436:	eors	r2, r3
    7438:	bne.n	747c <error@@Base+0x154c>
    743a:	mov	r0, r4
    743c:	add	sp, #148	; 0x94
    743e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7442:	add	sp, #16
    7444:	bx	lr
    7446:	bl	9934 <error@@Base+0x3a04>
    744a:	ldr	r1, [pc, #116]	; (74c0 <error@@Base+0x1590>)
    744c:	add	r1, pc
    744e:	mov	r2, r0
    7450:	ldr	r0, [pc, #112]	; (74c4 <error@@Base+0x1594>)
    7452:	add	r0, pc
    7454:	bl	59b8 <fputs@plt+0x3a84>
    7458:	ldr	r1, [pc, #108]	; (74c8 <error@@Base+0x1598>)
    745a:	ldr	r0, [pc, #112]	; (74cc <error@@Base+0x159c>)
    745c:	add	r1, pc
    745e:	add	r0, pc
    7460:	bl	59b8 <fputs@plt+0x3a84>
    7464:	ldr	r1, [pc, #104]	; (74d0 <error@@Base+0x15a0>)
    7466:	ldr	r0, [pc, #108]	; (74d4 <error@@Base+0x15a4>)
    7468:	add	r1, pc
    746a:	add	r0, pc
    746c:	bl	59b8 <fputs@plt+0x3a84>
    7470:	ldr	r1, [pc, #100]	; (74d8 <error@@Base+0x15a8>)
    7472:	ldr	r0, [pc, #104]	; (74dc <error@@Base+0x15ac>)
    7474:	add	r1, pc
    7476:	add	r0, pc
    7478:	bl	59b8 <fputs@plt+0x3a84>
    747c:	blx	1cf8 <__stack_chk_fail@plt>
    7480:	ldr	r1, [pc, #92]	; (74e0 <error@@Base+0x15b0>)
    7482:	ldr	r0, [pc, #96]	; (74e4 <error@@Base+0x15b4>)
    7484:	add	r1, pc
    7486:	add	r0, pc
    7488:	bl	59b8 <fputs@plt+0x3a84>
    748c:	bl	9934 <error@@Base+0x3a04>
    7490:	ldr	r1, [pc, #84]	; (74e8 <error@@Base+0x15b8>)
    7492:	add	r1, pc
    7494:	mov	r2, r0
    7496:	ldr	r0, [pc, #84]	; (74ec <error@@Base+0x15bc>)
    7498:	add	r0, pc
    749a:	bl	59b8 <fputs@plt+0x3a84>
    749e:	ldr	r1, [pc, #80]	; (74f0 <error@@Base+0x15c0>)
    74a0:	ldr	r0, [pc, #80]	; (74f4 <error@@Base+0x15c4>)
    74a2:	add	r1, pc
    74a4:	add	r0, pc
    74a6:	bl	59b8 <fputs@plt+0x3a84>
    74aa:	nop
    74ac:	ldr	r2, [sp, #248]	; 0xf8
    74ae:	movs	r1, r0
    74b0:	lsls	r4, r1, #9
    74b2:	movs	r0, r0
    74b4:	strh	r2, [r3, #16]
    74b6:	movs	r0, r0
    74b8:	ldrb	r4, [r4, #17]
    74ba:	movs	r0, r0
    74bc:	ldr	r1, [sp, #264]	; 0x108
    74be:	movs	r1, r0
    74c0:	strh	r0, [r4, #14]
    74c2:	movs	r0, r0
    74c4:	ldrb	r6, [r4, #15]
    74c6:	movs	r0, r0
    74c8:	strh	r0, [r2, #14]
    74ca:	movs	r0, r0
    74cc:	ldrb	r6, [r0, #15]
    74ce:	movs	r0, r0
    74d0:	strh	r4, [r0, #14]
    74d2:	movs	r0, r0
    74d4:	ldrb	r2, [r4, #14]
    74d6:	movs	r0, r0
    74d8:	strh	r0, [r7, #12]
    74da:	movs	r0, r0
    74dc:	ldrb	r6, [r7, #13]
    74de:	movs	r0, r0
    74e0:	strh	r0, [r5, #12]
    74e2:	movs	r0, r0
    74e4:	ldrb	r2, [r1, #16]
    74e6:	movs	r0, r0
    74e8:	strh	r2, [r3, #12]
    74ea:	movs	r0, r0
    74ec:	ldrb	r4, [r1, #15]
    74ee:	movs	r0, r0
    74f0:	strh	r2, [r1, #12]
    74f2:	movs	r0, r0
    74f4:	ldrb	r4, [r5, #14]
    74f6:	movs	r0, r0
    74f8:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    74fc:	mov	r6, r0
    74fe:	ldr	r0, [r0, #24]
    7500:	mov	r7, r1
    7502:	bl	992c <error@@Base+0x39fc>
    7506:	cbnz	r0, 7514 <error@@Base+0x15e4>
    7508:	ldr	r3, [r6, #24]
    750a:	cmp	r3, r7
    750c:	beq.n	7514 <error@@Base+0x15e4>
    750e:	movs	r0, #0
    7510:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    7514:	ldr	r3, [r6, #16]
    7516:	ands.w	r5, r3, #2
    751a:	bne.n	750e <error@@Base+0x15de>
    751c:	lsls	r3, r3, #27
    751e:	it	pl
    7520:	movpl	r0, #1
    7522:	bpl.n	7510 <error@@Base+0x15e0>
    7524:	ldr	r0, [r6, #28]
    7526:	blx	1d34 <getgrgid@plt>
    752a:	mov	r8, r0
    752c:	cmp	r0, #0
    752e:	beq.n	750e <error@@Base+0x15de>
    7530:	blx	1e38 <getpwent@plt>
    7534:	mov	r4, r0
    7536:	cbz	r0, 755c <error@@Base+0x162c>
    7538:	ldr	r2, [r4, #12]
    753a:	ldr.w	r3, [r8, #8]
    753e:	cmp	r2, r3
    7540:	bne.n	7530 <error@@Base+0x1600>
    7542:	mov	r0, r5
    7544:	movs	r1, #1
    7546:	bl	ded8 <setlogin@@Base+0x20d0>
    754a:	ldr	r3, [r4, #8]
    754c:	cmp	r7, r3
    754e:	mov	r5, r0
    7550:	bne.n	750e <error@@Base+0x15de>
    7552:	blx	1e38 <getpwent@plt>
    7556:	mov	r4, r0
    7558:	cmp	r0, #0
    755a:	bne.n	7538 <error@@Base+0x1608>
    755c:	blx	1da0 <endpwent@plt>
    7560:	ldr	r0, [r6, #24]
    7562:	blx	1ba0 <getpwuid@plt>
    7566:	cmp	r0, #0
    7568:	beq.n	750e <error@@Base+0x15de>
    756a:	ldr.w	r4, [r8, #12]
    756e:	ldr	r1, [r4, #0]
    7570:	cbz	r1, 7586 <error@@Base+0x1656>
    7572:	ldr	r0, [r0, #0]
    7574:	blx	1ee0 <strcmp@plt>
    7578:	cmp	r0, #0
    757a:	bne.n	750e <error@@Base+0x15de>
    757c:	ldr	r0, [r4, #4]
    757e:	clz	r0, r0
    7582:	lsrs	r0, r0, #5
    7584:	b.n	7510 <error@@Base+0x15e0>
    7586:	subs	r0, r5, #0
    7588:	it	ne
    758a:	movne	r0, #1
    758c:	b.n	7510 <error@@Base+0x15e0>
    758e:	nop
    7590:	b.w	d06c <setlogin@@Base+0x1264>
    7594:	ldr	r0, [pc, #168]	; (7640 <error@@Base+0x1710>)
    7596:	movs	r1, #2
    7598:	push	{r3, r4, r5, r6, r7, lr}
    759a:	add	r0, pc
    759c:	blx	1c14 <open64@plt>
    75a0:	ldr	r7, [pc, #160]	; (7644 <error@@Base+0x1714>)
    75a2:	add	r7, pc
    75a4:	adds	r3, r0, #1
    75a6:	beq.n	761a <error@@Base+0x16ea>
    75a8:	movs	r1, #1
    75aa:	mov	r6, r0
    75ac:	bl	ded8 <setlogin@@Base+0x20d0>
    75b0:	cmp	r0, #2
    75b2:	mov	r4, r0
    75b4:	ble.n	75c6 <error@@Base+0x1696>
    75b6:	b.n	760a <error@@Base+0x16da>
    75b8:	mov	r0, r4
    75ba:	movs	r1, #1
    75bc:	bl	ded8 <setlogin@@Base+0x20d0>
    75c0:	cmp	r0, #3
    75c2:	mov	r4, r0
    75c4:	beq.n	760a <error@@Base+0x16da>
    75c6:	movs	r1, #3
    75c8:	mov	r0, r4
    75ca:	blx	1c48 <fcntl64@plt>
    75ce:	adds	r0, #1
    75d0:	bne.n	75b8 <error@@Base+0x1688>
    75d2:	blx	1f04 <__errno_location@plt>
    75d6:	ldr	r3, [r0, #0]
    75d8:	mov	r5, r0
    75da:	cmp	r3, #9
    75dc:	bne.n	75b8 <error@@Base+0x1688>
    75de:	mov	r1, r4
    75e0:	mov	r0, r6
    75e2:	blx	1d64 <dup2@plt>
    75e6:	adds	r0, #1
    75e8:	bne.n	75b8 <error@@Base+0x1688>
    75ea:	ldr	r3, [pc, #92]	; (7648 <error@@Base+0x1718>)
    75ec:	ldr	r0, [r5, #0]
    75ee:	ldr	r3, [r7, r3]
    75f0:	ldr	r4, [r3, #0]
    75f2:	blx	1938 <strerror@plt+0x4>
    75f6:	ldr	r2, [pc, #84]	; (764c <error@@Base+0x171c>)
    75f8:	movs	r1, #1
    75fa:	add	r2, pc
    75fc:	mov	r3, r0
    75fe:	mov	r0, r4
    7600:	blx	1d10 <__fprintf_chk@plt>
    7604:	movs	r0, #1
    7606:	blx	1eec <exit@plt>
    760a:	cmp	r6, #2
    760c:	bgt.n	7610 <error@@Base+0x16e0>
    760e:	pop	{r3, r4, r5, r6, r7, pc}
    7610:	mov	r0, r6
    7612:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    7616:	b.w	1c84 <close@plt>
    761a:	ldr	r3, [pc, #44]	; (7648 <error@@Base+0x1718>)
    761c:	ldr	r3, [r7, r3]
    761e:	ldr	r4, [r3, #0]
    7620:	blx	1f04 <__errno_location@plt>
    7624:	ldr	r0, [r0, #0]
    7626:	blx	1938 <strerror@plt+0x4>
    762a:	ldr	r2, [pc, #36]	; (7650 <error@@Base+0x1720>)
    762c:	movs	r1, #1
    762e:	add	r2, pc
    7630:	mov	r3, r0
    7632:	mov	r0, r4
    7634:	blx	1d10 <__fprintf_chk@plt>
    7638:	movs	r0, #1
    763a:	blx	1eec <exit@plt>
    763e:	nop
    7640:	ldrb	r6, [r2, #12]
    7642:	movs	r0, r0
    7644:	str	r7, [sp, #824]	; 0x338
    7646:	movs	r1, r0
    7648:	lsls	r4, r5, #9
    764a:	movs	r0, r0
    764c:	ldrb	r2, [r4, #11]
    764e:	movs	r0, r0
    7650:	ldrb	r6, [r1, #10]
    7652:	movs	r0, r0
    7654:	ldr	r2, [pc, #140]	; (76e4 <error@@Base+0x17b4>)
    7656:	cmp.w	r1, #65536	; 0x10000
    765a:	ldr	r3, [pc, #140]	; (76e8 <error@@Base+0x17b8>)
    765c:	add	r2, pc
    765e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    7662:	sub	sp, #20
    7664:	ldr	r3, [r2, r3]
    7666:	ldr	r3, [r3, #0]
    7668:	str	r3, [sp, #12]
    766a:	mov.w	r3, #0
    766e:	bhi.n	76d2 <error@@Base+0x17a2>
    7670:	mov.w	r8, r1, lsl #1
    7674:	mov	r4, r0
    7676:	movs	r0, #1
    7678:	add	r8, r0
    767a:	mov	r5, r1
    767c:	mov	r1, r8
    767e:	bl	61d4 <error@@Base+0x2a4>
    7682:	mov	r7, r0
    7684:	cbz	r5, 76ba <error@@Base+0x178a>
    7686:	ldr.w	r9, [pc, #100]	; 76ec <error@@Base+0x17bc>
    768a:	subs	r5, #1
    768c:	add	r5, r4
    768e:	add	r6, sp, #8
    7690:	add	r9, pc
    7692:	subs	r4, #1
    7694:	ldrb.w	ip, [r4, #1]!
    7698:	movs	r3, #3
    769a:	mov	r1, r3
    769c:	movs	r2, #1
    769e:	mov	r0, r6
    76a0:	str.w	r9, [sp]
    76a4:	str.w	ip, [sp, #4]
    76a8:	blx	1c54 <__snprintf_chk@plt>
    76ac:	mov	r2, r8
    76ae:	mov	r1, r6
    76b0:	mov	r0, r7
    76b2:	bl	c7d0 <setlogin@@Base+0x9c8>
    76b6:	cmp	r4, r5
    76b8:	bne.n	7694 <error@@Base+0x1764>
    76ba:	ldr	r2, [pc, #52]	; (76f0 <error@@Base+0x17c0>)
    76bc:	ldr	r3, [pc, #40]	; (76e8 <error@@Base+0x17b8>)
    76be:	add	r2, pc
    76c0:	ldr	r3, [r2, r3]
    76c2:	ldr	r2, [r3, #0]
    76c4:	ldr	r3, [sp, #12]
    76c6:	eors	r2, r3
    76c8:	bne.n	76de <error@@Base+0x17ae>
    76ca:	mov	r0, r7
    76cc:	add	sp, #20
    76ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    76d2:	ldr	r0, [pc, #32]	; (76f4 <error@@Base+0x17c4>)
    76d4:	add	r0, pc
    76d6:	bl	6258 <error@@Base+0x328>
    76da:	mov	r7, r0
    76dc:	b.n	76ba <error@@Base+0x178a>
    76de:	blx	1cf8 <__stack_chk_fail@plt>
    76e2:	nop
    76e4:	str	r7, [sp, #80]	; 0x50
    76e6:	movs	r1, r0
    76e8:	lsls	r4, r1, #9
    76ea:	movs	r0, r0
    76ec:	ldrb	r0, [r6, #9]
    76ee:	movs	r0, r0
    76f0:	str	r6, [sp, #712]	; 0x2c8
    76f2:	movs	r1, r0
    76f4:	ldrb	r4, [r2, #8]
    76f6:	movs	r0, r0
    76f8:	push	{r2, r3}
    76fa:	push	{r4, r5, r6, lr}
    76fc:	sub	sp, #24
    76fe:	ldr	r6, [pc, #124]	; (777c <error@@Base+0x184c>)
    7700:	add	r2, sp, #40	; 0x28
    7702:	mov	r5, r1
    7704:	ldr	r1, [pc, #120]	; (7780 <error@@Base+0x1850>)
    7706:	add	r6, pc
    7708:	ldr.w	r3, [r2], #4
    770c:	mov	r4, r0
    770e:	add	r0, sp, #12
    7710:	ldr	r1, [r6, r1]
    7712:	ldr	r1, [r1, #0]
    7714:	str	r1, [sp, #20]
    7716:	mov.w	r1, #0
    771a:	mov	r1, r3
    771c:	str	r2, [sp, #8]
    771e:	bl	627c <error@@Base+0x34c>
    7722:	ldr	r2, [r4, #0]
    7724:	cbz	r2, 7766 <error@@Base+0x1836>
    7726:	ldrb	r3, [r2, #0]
    7728:	cbz	r3, 7766 <error@@Base+0x1836>
    772a:	cbz	r5, 7772 <error@@Base+0x1842>
    772c:	ldr	r6, [sp, #12]
    772e:	mov	r3, r5
    7730:	ldr	r1, [pc, #80]	; (7784 <error@@Base+0x1854>)
    7732:	add	r0, sp, #16
    7734:	add	r1, pc
    7736:	str	r6, [sp, #0]
    7738:	bl	62a0 <error@@Base+0x370>
    773c:	ldr	r0, [sp, #12]
    773e:	blx	1adc <free@plt+0x4>
    7742:	ldr	r0, [r4, #0]
    7744:	blx	1adc <free@plt+0x4>
    7748:	ldr	r3, [sp, #16]
    774a:	str	r3, [r4, #0]
    774c:	ldr	r2, [pc, #56]	; (7788 <error@@Base+0x1858>)
    774e:	ldr	r3, [pc, #48]	; (7780 <error@@Base+0x1850>)
    7750:	add	r2, pc
    7752:	ldr	r3, [r2, r3]
    7754:	ldr	r2, [r3, #0]
    7756:	ldr	r3, [sp, #20]
    7758:	eors	r2, r3
    775a:	bne.n	7778 <error@@Base+0x1848>
    775c:	add	sp, #24
    775e:	ldmia.w	sp!, {r4, r5, r6, lr}
    7762:	add	sp, #8
    7764:	bx	lr
    7766:	mov	r0, r2
    7768:	blx	1adc <free@plt+0x4>
    776c:	ldr	r3, [sp, #12]
    776e:	str	r3, [r4, #0]
    7770:	b.n	774c <error@@Base+0x181c>
    7772:	ldr	r5, [pc, #24]	; (778c <error@@Base+0x185c>)
    7774:	add	r5, pc
    7776:	b.n	772c <error@@Base+0x17fc>
    7778:	blx	1cf8 <__stack_chk_fail@plt>
    777c:	str	r6, [sp, #424]	; 0x1a8
    777e:	movs	r1, r0
    7780:	lsls	r4, r1, #9
    7782:	movs	r0, r0
    7784:	strb	r0, [r1, #4]
    7786:	movs	r0, r0
    7788:	str	r6, [sp, #128]	; 0x80
    778a:	movs	r1, r0
    778c:	strb	r0, [r1, #23]
    778e:	movs	r0, r0
    7790:	ldr	r1, [r0, #0]
    7792:	ldr	r0, [r0, #4]
    7794:	rev	r1, r1
    7796:	rev	r0, r0
    7798:	bx	lr
    779a:	nop
    779c:	ldr	r0, [r0, #0]
    779e:	rev	r0, r0
    77a0:	bx	lr
    77a2:	nop
    77a4:	ldr	r0, [r0, #0]
    77a6:	bx	lr
    77a8:	ldrh	r0, [r0, #0]
    77aa:	rev16	r0, r0
    77ac:	uxth	r0, r0
    77ae:	bx	lr
    77b0:	push	{r4}
    77b2:	lsrs	r1, r3, #16
    77b4:	lsrs	r4, r3, #24
    77b6:	strb	r3, [r0, #3]
    77b8:	strb	r2, [r0, #7]
    77ba:	lsrs	r3, r3, #8
    77bc:	strb	r4, [r0, #0]
    77be:	strb	r1, [r0, #1]
    77c0:	lsrs	r1, r2, #24
    77c2:	strb	r3, [r0, #2]
    77c4:	lsrs	r3, r2, #16
    77c6:	ldr.w	r4, [sp], #4
    77ca:	lsrs	r2, r2, #8
    77cc:	strb	r1, [r0, #4]
    77ce:	strb	r3, [r0, #5]
    77d0:	strb	r2, [r0, #6]
    77d2:	bx	lr
    77d4:	lsrs	r2, r1, #24
    77d6:	lsrs	r3, r1, #16
    77d8:	strb	r1, [r0, #3]
    77da:	lsrs	r1, r1, #8
    77dc:	strb	r2, [r0, #0]
    77de:	strb	r3, [r0, #1]
    77e0:	strb	r1, [r0, #2]
    77e2:	bx	lr
    77e4:	lsrs	r2, r1, #8
    77e6:	lsrs	r3, r1, #16
    77e8:	strb	r1, [r0, #0]
    77ea:	lsrs	r1, r1, #24
    77ec:	strb	r2, [r0, #1]
    77ee:	strb	r3, [r0, #2]
    77f0:	strb	r1, [r0, #3]
    77f2:	bx	lr
    77f4:	strb	r1, [r0, #1]
    77f6:	lsrs	r1, r1, #8
    77f8:	strb	r1, [r0, #0]
    77fa:	bx	lr
    77fc:	bic.w	r2, r1, r1, asr #31
    7800:	movw	r3, #19923	; 0x4dd3
    7804:	movt	r3, #4194	; 0x1062
    7808:	mov.w	r1, #1000	; 0x3e8
    780c:	push	{r4, lr}
    780e:	umull	r4, r3, r3, r2
    7812:	mov	r4, r0
    7814:	lsrs	r3, r3, #6
    7816:	str	r3, [r0, #0]
    7818:	mls	r0, r1, r3, r2
    781c:	bl	dfa0 <setlogin@@Base+0x2198>
    7820:	str	r0, [r4, #4]
    7822:	pop	{r4, pc}
    7824:	push	{r4, r5, r6, lr}
    7826:	sub	sp, #16
    7828:	ldr	r6, [pc, #132]	; (78b0 <error@@Base+0x1980>)
    782a:	mov	r4, r0
    782c:	ldr	r2, [pc, #132]	; (78b4 <error@@Base+0x1984>)
    782e:	ldr	r3, [pc, #136]	; (78b8 <error@@Base+0x1988>)
    7830:	add	r6, pc
    7832:	add	r2, pc
    7834:	ldr	r5, [r6, #0]
    7836:	ldr	r3, [r2, r3]
    7838:	ldr	r3, [r3, #0]
    783a:	str	r3, [sp, #12]
    783c:	mov.w	r3, #0
    7840:	cbnz	r5, 7890 <error@@Base+0x1960>
    7842:	mov	r1, r0
    7844:	movs	r0, #7
    7846:	blx	19a4 <clock_gettime@plt>
    784a:	cbnz	r0, 7860 <error@@Base+0x1930>
    784c:	ldr	r2, [pc, #108]	; (78bc <error@@Base+0x198c>)
    784e:	ldr	r3, [pc, #104]	; (78b8 <error@@Base+0x1988>)
    7850:	add	r2, pc
    7852:	ldr	r3, [r2, r3]
    7854:	ldr	r2, [r3, #0]
    7856:	ldr	r3, [sp, #12]
    7858:	eors	r2, r3
    785a:	bne.n	78aa <error@@Base+0x197a>
    785c:	add	sp, #16
    785e:	pop	{r4, r5, r6, pc}
    7860:	mov	r1, r4
    7862:	movs	r0, #1
    7864:	blx	19a4 <clock_gettime@plt>
    7868:	cmp	r0, #0
    786a:	beq.n	784c <error@@Base+0x191c>
    786c:	mov	r0, r5
    786e:	mov	r1, r4
    7870:	blx	19a4 <clock_gettime@plt>
    7874:	cmp	r0, #0
    7876:	beq.n	784c <error@@Base+0x191c>
    7878:	blx	1f04 <__errno_location@plt>
    787c:	ldr	r0, [r0, #0]
    787e:	blx	1938 <strerror@plt+0x4>
    7882:	mov	r1, r0
    7884:	ldr	r0, [pc, #56]	; (78c0 <error@@Base+0x1990>)
    7886:	add	r0, pc
    7888:	bl	610c <error@@Base+0x1dc>
    788c:	movs	r3, #1
    788e:	str	r3, [r6, #0]
    7890:	movs	r1, #0
    7892:	add	r0, sp, #4
    7894:	blx	1b00 <gettimeofday@plt>
    7898:	ldr	r3, [sp, #4]
    789a:	ldr	r0, [sp, #8]
    789c:	mov.w	r1, #1000	; 0x3e8
    78a0:	str	r3, [r4, #0]
    78a2:	bl	dfa0 <setlogin@@Base+0x2198>
    78a6:	str	r0, [r4, #4]
    78a8:	b.n	784c <error@@Base+0x191c>
    78aa:	blx	1cf8 <__stack_chk_fail@plt>
    78ae:	nop
    78b0:	ldr	r0, [sp, #832]	; 0x340
    78b2:	movs	r1, r0
    78b4:	str	r5, [sp, #248]	; 0xf8
    78b6:	movs	r1, r0
    78b8:	lsls	r4, r1, #9
    78ba:	movs	r0, r0
    78bc:	str	r5, [sp, #128]	; 0x80
    78be:	movs	r1, r0
    78c0:	ldrb	r2, [r0, #2]
    78c2:	movs	r0, r0
    78c4:	ldr	r2, [pc, #164]	; (796c <error@@Base+0x1a3c>)
    78c6:	ldr	r3, [pc, #168]	; (7970 <error@@Base+0x1a40>)
    78c8:	add	r2, pc
    78ca:	push	{r4, r5, r6, r7, lr}
    78cc:	sub	sp, #20
    78ce:	ldr	r3, [r2, r3]
    78d0:	mov	r7, r0
    78d2:	add	r0, sp, #4
    78d4:	mov	r5, r1
    78d6:	ldr	r3, [r3, #0]
    78d8:	str	r3, [sp, #12]
    78da:	mov.w	r3, #0
    78de:	bl	7824 <error@@Base+0x18f4>
    78e2:	ldr	r3, [sp, #8]
    78e4:	movw	r4, #19923	; 0x4dd3
    78e8:	movt	r4, #4194	; 0x1062
    78ec:	ldr	r1, [r7, #0]
    78ee:	ldr	r0, [sp, #4]
    78f0:	smull	r2, r4, r4, r3
    78f4:	asrs	r3, r3, #31
    78f6:	rsb	r4, r3, r4, asr #6
    78fa:	bl	df3c <setlogin@@Base+0x2134>
    78fe:	ldr	r1, [r7, #4]
    7900:	mov	r6, r0
    7902:	mov	r0, r4
    7904:	bl	df3c <setlogin@@Base+0x2134>
    7908:	subs	r4, r0, #0
    790a:	bge.n	7928 <error@@Base+0x19f8>
    790c:	mov	r0, r6
    790e:	mov.w	r1, #4294967295	; 0xffffffff
    7912:	bl	ded8 <setlogin@@Base+0x20d0>
    7916:	movw	r1, #16960	; 0x4240
    791a:	movt	r1, #15
    791e:	mov	r6, r0
    7920:	mov	r0, r4
    7922:	bl	ded8 <setlogin@@Base+0x20d0>
    7926:	mov	r4, r0
    7928:	mov.w	r1, #1000	; 0x3e8
    792c:	mov	r0, r6
    792e:	bl	dfa0 <setlogin@@Base+0x2198>
    7932:	movw	r3, #19923	; 0x4dd3
    7936:	movt	r3, #4194	; 0x1062
    793a:	asrs	r1, r4, #31
    793c:	smull	r3, r4, r3, r4
    7940:	rsb	r1, r1, r4, asr #6
    7944:	bl	ded8 <setlogin@@Base+0x20d0>
    7948:	mov	r1, r0
    794a:	ldr	r0, [r5, #0]
    794c:	bl	df3c <setlogin@@Base+0x2134>
    7950:	ldr	r2, [pc, #32]	; (7974 <error@@Base+0x1a44>)
    7952:	ldr	r3, [pc, #28]	; (7970 <error@@Base+0x1a40>)
    7954:	add	r2, pc
    7956:	str	r0, [r5, #0]
    7958:	ldr	r3, [r2, r3]
    795a:	ldr	r2, [r3, #0]
    795c:	ldr	r3, [sp, #12]
    795e:	eors	r2, r3
    7960:	bne.n	7966 <error@@Base+0x1a36>
    7962:	add	sp, #20
    7964:	pop	{r4, r5, r6, r7, pc}
    7966:	blx	1cf8 <__stack_chk_fail@plt>
    796a:	nop
    796c:	str	r4, [sp, #672]	; 0x2a0
    796e:	movs	r1, r0
    7970:	lsls	r4, r1, #9
    7972:	movs	r0, r0
    7974:	str	r4, [sp, #112]	; 0x70
    7976:	movs	r1, r0
    7978:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    797c:	mov	r6, r2
    797e:	ldr	r2, [pc, #172]	; (7a2c <error@@Base+0x1afc>)
    7980:	sub	sp, #28
    7982:	ldr	r3, [pc, #172]	; (7a30 <error@@Base+0x1b00>)
    7984:	add.w	r8, sp, #12
    7988:	add	r2, pc
    798a:	mov	r5, r0
    798c:	mov	r0, r8
    798e:	mov	r7, r1
    7990:	ldr	r3, [r2, r3]
    7992:	add.w	r9, sp, #4
    7996:	ldr	r3, [r3, #0]
    7998:	str	r3, [sp, #20]
    799a:	mov.w	r3, #0
    799e:	bl	7824 <error@@Base+0x18f4>
    79a2:	ldr	r3, [sp, #16]
    79a4:	movw	r1, #19923	; 0x4dd3
    79a8:	movt	r1, #4194	; 0x1062
    79ac:	ldr	r4, [sp, #12]
    79ae:	strh.w	r6, [sp, #16]
    79b2:	smull	r2, r1, r1, r3
    79b6:	asrs	r3, r3, #31
    79b8:	str	r5, [sp, #12]
    79ba:	str	r4, [sp, #4]
    79bc:	rsb	r3, r3, r1, asr #6
    79c0:	str	r3, [sp, #8]
    79c2:	blx	1f04 <__errno_location@plt>
    79c6:	mov	r6, r0
    79c8:	b.n	79fa <error@@Base+0x1aca>
    79ca:	movs	r1, #1
    79cc:	mov	r0, r8
    79ce:	blx	1d1c <poll@plt>
    79d2:	ldr	r5, [r6, #0]
    79d4:	mov	r1, r7
    79d6:	mov	r4, r0
    79d8:	mov	r0, r9
    79da:	bl	78c4 <error@@Base+0x1994>
    79de:	cmp	r4, #0
    79e0:	str	r5, [r6, #0]
    79e2:	bgt.n	7a1e <error@@Base+0x1aee>
    79e4:	sub.w	r3, r4, #4294967295	; 0xffffffff
    79e8:	cmp	r5, #11
    79ea:	clz	r3, r3
    79ee:	mov.w	r3, r3, lsr #5
    79f2:	it	eq
    79f4:	moveq	r3, #0
    79f6:	cbnz	r3, 7a22 <error@@Base+0x1af2>
    79f8:	cbz	r4, 7a00 <error@@Base+0x1ad0>
    79fa:	ldr	r2, [r7, #0]
    79fc:	cmp	r2, #0
    79fe:	bge.n	79ca <error@@Base+0x1a9a>
    7a00:	mov.w	r0, #4294967295	; 0xffffffff
    7a04:	movs	r3, #110	; 0x6e
    7a06:	str	r3, [r6, #0]
    7a08:	ldr	r2, [pc, #40]	; (7a34 <error@@Base+0x1b04>)
    7a0a:	ldr	r3, [pc, #36]	; (7a30 <error@@Base+0x1b00>)
    7a0c:	add	r2, pc
    7a0e:	ldr	r3, [r2, r3]
    7a10:	ldr	r2, [r3, #0]
    7a12:	ldr	r3, [sp, #20]
    7a14:	eors	r2, r3
    7a16:	bne.n	7a28 <error@@Base+0x1af8>
    7a18:	add	sp, #28
    7a1a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    7a1e:	movs	r0, #0
    7a20:	b.n	7a08 <error@@Base+0x1ad8>
    7a22:	mov.w	r0, #4294967295	; 0xffffffff
    7a26:	b.n	7a08 <error@@Base+0x1ad8>
    7a28:	blx	1cf8 <__stack_chk_fail@plt>
    7a2c:	str	r3, [sp, #928]	; 0x3a0
    7a2e:	movs	r1, r0
    7a30:	lsls	r4, r1, #9
    7a32:	movs	r0, r0
    7a34:	str	r3, [sp, #400]	; 0x190
    7a36:	movs	r1, r0
    7a38:	movs	r2, #1
    7a3a:	b.n	7978 <error@@Base+0x1a48>
    7a3c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    7a40:	mov	r5, r1
    7a42:	ldr	r1, [pc, #192]	; (7b04 <error@@Base+0x1bd4>)
    7a44:	mov	r6, r2
    7a46:	ldr	r2, [pc, #192]	; (7b08 <error@@Base+0x1bd8>)
    7a48:	sub	sp, #24
    7a4a:	add	r1, pc
    7a4c:	mov	r4, r3
    7a4e:	movs	r7, #4
    7a50:	movs	r3, #0
    7a52:	ldr	r2, [r1, r2]
    7a54:	mov	r8, r0
    7a56:	ldr	r2, [r2, #0]
    7a58:	str	r2, [sp, #20]
    7a5a:	mov.w	r2, #0
    7a5e:	strd	r3, r7, [sp, #12]
    7a62:	cmp	r4, #0
    7a64:	beq.n	7ad0 <error@@Base+0x1ba0>
    7a66:	ldr	r3, [r4, #0]
    7a68:	cmp	r3, #0
    7a6a:	ble.n	7ad0 <error@@Base+0x1ba0>
    7a6c:	bl	67c4 <error@@Base+0x894>
    7a70:	mov	r2, r6
    7a72:	mov	r1, r5
    7a74:	mov	r0, r8
    7a76:	blx	1968 <connect@plt>
    7a7a:	cbz	r0, 7ab0 <error@@Base+0x1b80>
    7a7c:	blx	1f04 <__errno_location@plt>
    7a80:	ldr	r3, [r0, #0]
    7a82:	mov	r5, r0
    7a84:	cmp	r3, #115	; 0x73
    7a86:	bne.n	7ade <error@@Base+0x1bae>
    7a88:	mov	r1, r4
    7a8a:	movs	r2, #5
    7a8c:	mov	r0, r8
    7a8e:	bl	7978 <error@@Base+0x1a48>
    7a92:	adds	r0, #1
    7a94:	beq.n	7ade <error@@Base+0x1bae>
    7a96:	add	r3, sp, #12
    7a98:	add	r1, sp, #16
    7a9a:	mov	r2, r7
    7a9c:	str	r1, [sp, #0]
    7a9e:	mov	r0, r8
    7aa0:	movs	r1, #1
    7aa2:	blx	1e8c <getsockopt@plt>
    7aa6:	adds	r3, r0, #1
    7aa8:	mov	r4, r0
    7aaa:	beq.n	7aec <error@@Base+0x1bbc>
    7aac:	ldr	r3, [sp, #12]
    7aae:	cbnz	r3, 7ae4 <error@@Base+0x1bb4>
    7ab0:	mov	r0, r8
    7ab2:	movs	r4, #0
    7ab4:	bl	684c <error@@Base+0x91c>
    7ab8:	ldr	r2, [pc, #80]	; (7b0c <error@@Base+0x1bdc>)
    7aba:	ldr	r3, [pc, #76]	; (7b08 <error@@Base+0x1bd8>)
    7abc:	add	r2, pc
    7abe:	ldr	r3, [r2, r3]
    7ac0:	ldr	r2, [r3, #0]
    7ac2:	ldr	r3, [sp, #20]
    7ac4:	eors	r2, r3
    7ac6:	bne.n	7afe <error@@Base+0x1bce>
    7ac8:	mov	r0, r4
    7aca:	add	sp, #24
    7acc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    7ad0:	mov	r2, r6
    7ad2:	mov	r1, r5
    7ad4:	mov	r0, r8
    7ad6:	blx	1968 <connect@plt>
    7ada:	mov	r4, r0
    7adc:	b.n	7ab8 <error@@Base+0x1b88>
    7ade:	mov.w	r4, #4294967295	; 0xffffffff
    7ae2:	b.n	7ab8 <error@@Base+0x1b88>
    7ae4:	mov.w	r4, #4294967295	; 0xffffffff
    7ae8:	str	r3, [r5, #0]
    7aea:	b.n	7ab8 <error@@Base+0x1b88>
    7aec:	ldr	r0, [r5, #0]
    7aee:	blx	1938 <strerror@plt+0x4>
    7af2:	mov	r1, r0
    7af4:	ldr	r0, [pc, #24]	; (7b10 <error@@Base+0x1be0>)
    7af6:	add	r0, pc
    7af8:	bl	6064 <error@@Base+0x134>
    7afc:	b.n	7ab8 <error@@Base+0x1b88>
    7afe:	blx	1cf8 <__stack_chk_fail@plt>
    7b02:	nop
    7b04:	str	r3, [sp, #152]	; 0x98
    7b06:	movs	r1, r0
    7b08:	lsls	r4, r1, #9
    7b0a:	movs	r0, r0
    7b0c:	str	r2, [sp, #720]	; 0x2d0
    7b0e:	movs	r1, r0
    7b10:	strb	r6, [r4, #24]
    7b12:	movs	r0, r0
    7b14:	ldr	r2, [pc, #76]	; (7b64 <error@@Base+0x1c34>)
    7b16:	ldr	r3, [pc, #80]	; (7b68 <error@@Base+0x1c38>)
    7b18:	add	r2, pc
    7b1a:	push	{r4, lr}
    7b1c:	sub	sp, #16
    7b1e:	ldr	r3, [r2, r3]
    7b20:	mov	r4, r0
    7b22:	add	r0, sp, #4
    7b24:	ldr	r3, [r3, #0]
    7b26:	str	r3, [sp, #12]
    7b28:	mov.w	r3, #0
    7b2c:	bl	7824 <error@@Base+0x18f4>
    7b30:	ldr	r3, [sp, #8]
    7b32:	movw	r2, #19923	; 0x4dd3
    7b36:	movt	r2, #4194	; 0x1062
    7b3a:	ldr	r1, [sp, #4]
    7b3c:	smull	r0, r2, r2, r3
    7b40:	asrs	r3, r3, #31
    7b42:	str	r1, [r4, #0]
    7b44:	rsb	r3, r3, r2, asr #6
    7b48:	ldr	r2, [pc, #32]	; (7b6c <error@@Base+0x1c3c>)
    7b4a:	str	r3, [r4, #4]
    7b4c:	ldr	r3, [pc, #24]	; (7b68 <error@@Base+0x1c38>)
    7b4e:	add	r2, pc
    7b50:	ldr	r3, [r2, r3]
    7b52:	ldr	r2, [r3, #0]
    7b54:	ldr	r3, [sp, #12]
    7b56:	eors	r2, r3
    7b58:	bne.n	7b5e <error@@Base+0x1c2e>
    7b5a:	add	sp, #16
    7b5c:	pop	{r4, pc}
    7b5e:	blx	1cf8 <__stack_chk_fail@plt>
    7b62:	nop
    7b64:	str	r2, [sp, #352]	; 0x160
    7b66:	movs	r1, r0
    7b68:	lsls	r4, r1, #9
    7b6a:	movs	r0, r0
    7b6c:	str	r2, [sp, #136]	; 0x88
    7b6e:	movs	r1, r0
    7b70:	ldr	r2, [pc, #52]	; (7ba8 <error@@Base+0x1c78>)
    7b72:	ldr	r3, [pc, #56]	; (7bac <error@@Base+0x1c7c>)
    7b74:	add	r2, pc
    7b76:	push	{lr}
    7b78:	sub	sp, #20
    7b7a:	ldr	r3, [r2, r3]
    7b7c:	add	r0, sp, #4
    7b7e:	ldr	r3, [r3, #0]
    7b80:	str	r3, [sp, #12]
    7b82:	mov.w	r3, #0
    7b86:	bl	7824 <error@@Base+0x18f4>
    7b8a:	ldr	r2, [pc, #36]	; (7bb0 <error@@Base+0x1c80>)
    7b8c:	ldr	r3, [pc, #28]	; (7bac <error@@Base+0x1c7c>)
    7b8e:	add	r2, pc
    7b90:	ldr	r0, [sp, #4]
    7b92:	ldr	r3, [r2, r3]
    7b94:	ldr	r2, [r3, #0]
    7b96:	ldr	r3, [sp, #12]
    7b98:	eors	r2, r3
    7b9a:	bne.n	7ba2 <error@@Base+0x1c72>
    7b9c:	add	sp, #20
    7b9e:	ldr.w	pc, [sp], #4
    7ba2:	blx	1cf8 <__stack_chk_fail@plt>
    7ba6:	nop
    7ba8:	str	r1, [sp, #1008]	; 0x3f0
    7baa:	movs	r1, r0
    7bac:	lsls	r4, r1, #9
    7bae:	movs	r0, r0
    7bb0:	str	r1, [sp, #904]	; 0x388
    7bb2:	movs	r1, r0
    7bb4:	ldr	r2, [pc, #88]	; (7c10 <error@@Base+0x1ce0>)
    7bb6:	ldr	r3, [pc, #92]	; (7c14 <error@@Base+0x1ce4>)
    7bb8:	add	r2, pc
    7bba:	push	{lr}
    7bbc:	sub	sp, #20
    7bbe:	ldr	r3, [r2, r3]
    7bc0:	add	r0, sp, #4
    7bc2:	ldr	r3, [r3, #0]
    7bc4:	str	r3, [sp, #12]
    7bc6:	mov.w	r3, #0
    7bca:	bl	7824 <error@@Base+0x18f4>
    7bce:	vldr	s15, [sp, #8]
    7bd2:	ldr	r2, [pc, #68]	; (7c18 <error@@Base+0x1ce8>)
    7bd4:	ldr	r3, [pc, #60]	; (7c14 <error@@Base+0x1ce4>)
    7bd6:	vldr	d5, [pc, #48]	; 7c08 <error@@Base+0x1cd8>
    7bda:	add	r2, pc
    7bdc:	ldr	r3, [r2, r3]
    7bde:	vcvt.f64.s32	d7, s15
    7be2:	ldr	r2, [r3, #0]
    7be4:	ldr	r3, [sp, #12]
    7be6:	eors	r2, r3
    7be8:	vdiv.f64	d6, d7, d5
    7bec:	vldr	s15, [sp, #4]
    7bf0:	vcvt.f64.s32	d0, s15
    7bf4:	vadd.f64	d0, d6, d0
    7bf8:	bne.n	7c00 <error@@Base+0x1cd0>
    7bfa:	add	sp, #20
    7bfc:	ldr.w	pc, [sp], #4
    7c00:	blx	1cf8 <__stack_chk_fail@plt>
    7c04:	nop.w
    7c08:	movs	r0, r0
    7c0a:	movs	r0, r0
    7c0c:	ldmia	r5, {r0, r2, r5, r6}
    7c0e:	rors	r5, r1
    7c10:	str	r1, [sp, #736]	; 0x2e0
    7c12:	movs	r1, r0
    7c14:	lsls	r4, r1, #9
    7c16:	movs	r0, r0
    7c18:	str	r1, [sp, #600]	; 0x258
    7c1a:	movs	r1, r0
    7c1c:	push	{r4, r5}
    7c1e:	mov	r5, r3
    7c20:	ldr	r1, [sp, #8]
    7c22:	movs	r3, #0
    7c24:	mov	r4, r2
    7c26:	strd	r3, r3, [r0, #32]
    7c2a:	strd	r4, r5, [r0, #8]
    7c2e:	movs	r4, #0
    7c30:	movs	r5, #0
    7c32:	str	r1, [r0, #0]
    7c34:	strd	r4, r5, [r0, #24]
    7c38:	strd	r1, r3, [r0, #16]
    7c3c:	pop	{r4, r5}
    7c3e:	strd	r3, r3, [r0, #40]	; 0x28
    7c42:	bx	lr
    7c44:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7c48:	mov	r4, r0
    7c4a:	vpush	{d8}
    7c4e:	ldr	r2, [pc, #568]	; (7e88 <error@@Base+0x1f58>)
    7c50:	ldr	r3, [pc, #568]	; (7e8c <error@@Base+0x1f5c>)
    7c52:	add	r2, pc
    7c54:	sub	sp, #44	; 0x2c
    7c56:	ldrd	r6, r7, [r0, #24]
    7c5a:	ldr	r3, [r2, r3]
    7c5c:	adds	r6, r6, r1
    7c5e:	ldr	r3, [r3, #0]
    7c60:	str	r3, [sp, #36]	; 0x24
    7c62:	mov.w	r3, #0
    7c66:	ldr	r3, [r0, #32]
    7c68:	adc.w	r7, r7, #0
    7c6c:	strd	r6, r7, [r0, #24]
    7c70:	cbnz	r3, 7c7a <error@@Base+0x1d4a>
    7c72:	ldr	r3, [r0, #36]	; 0x24
    7c74:	add	r0, sp, #28
    7c76:	cmp	r3, #0
    7c78:	beq.n	7d60 <error@@Base+0x1e30>
    7c7a:	ldrd	r2, r3, [r4, #16]
    7c7e:	cmp	r7, r3
    7c80:	it	eq
    7c82:	cmpeq	r6, r2
    7c84:	bcs.n	7ca2 <error@@Base+0x1d72>
    7c86:	ldr	r2, [pc, #520]	; (7e90 <error@@Base+0x1f60>)
    7c88:	ldr	r3, [pc, #512]	; (7e8c <error@@Base+0x1f5c>)
    7c8a:	add	r2, pc
    7c8c:	ldr	r3, [r2, r3]
    7c8e:	ldr	r2, [r3, #0]
    7c90:	ldr	r3, [sp, #36]	; 0x24
    7c92:	eors	r2, r3
    7c94:	bne.w	7e7c <error@@Base+0x1f4c>
    7c98:	add	sp, #44	; 0x2c
    7c9a:	vpop	{d8}
    7c9e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7ca2:	add	r7, sp, #28
    7ca4:	movw	r5, #19923	; 0x4dd3
    7ca8:	movt	r5, #4194	; 0x1062
    7cac:	mov	r0, r7
    7cae:	bl	7824 <error@@Base+0x18f4>
    7cb2:	ldr	r3, [sp, #32]
    7cb4:	ldr	r1, [r4, #32]
    7cb6:	ldr	r0, [sp, #28]
    7cb8:	smull	r2, r5, r5, r3
    7cbc:	asrs	r3, r3, #31
    7cbe:	rsb	r5, r3, r5, asr #6
    7cc2:	bl	df3c <setlogin@@Base+0x2134>
    7cc6:	ldr	r1, [r4, #36]	; 0x24
    7cc8:	mov	r3, r0
    7cca:	mov	r0, r5
    7ccc:	str	r3, [r4, #40]	; 0x28
    7cce:	mov	r5, r3
    7cd0:	bl	df3c <setlogin@@Base+0x2134>
    7cd4:	cmp	r0, #0
    7cd6:	mov	r6, r0
    7cd8:	str	r0, [r4, #44]	; 0x2c
    7cda:	blt.w	7dfc <error@@Base+0x1ecc>
    7cde:	cbnz	r5, 7ce6 <error@@Base+0x1db6>
    7ce0:	ldr	r3, [r4, #44]	; 0x2c
    7ce2:	cmp	r3, #0
    7ce4:	beq.n	7c86 <error@@Base+0x1d56>
    7ce6:	ldrd	r0, r1, [r4, #24]
    7cea:	lsls	r1, r1, #3
    7cec:	orr.w	r1, r1, r0, lsr #29
    7cf0:	lsls	r0, r0, #3
    7cf2:	strd	r0, r1, [r4, #24]
    7cf6:	bl	db74 <setlogin@@Base+0x1d6c>
    7cfa:	vldr	d7, [pc, #388]	; 7e80 <error@@Base+0x1f50>
    7cfe:	vmov	d8, r0, r1
    7d02:	ldrd	r0, r1, [r4, #8]
    7d06:	vmul.f64	d8, d8, d7
    7d0a:	bl	db74 <setlogin@@Base+0x1d6c>
    7d0e:	vmov	d7, r0, r1
    7d12:	vdiv.f64	d7, d8, d7
    7d16:	vmov	r0, r1, d7
    7d1a:	bl	e0c8 <setlogin@@Base+0x22c0>
    7d1e:	movs	r3, #0
    7d20:	movw	r2, #16960	; 0x4240
    7d24:	movt	r2, #15
    7d28:	mov	sl, r1
    7d2a:	mov	fp, r0
    7d2c:	bl	de9c <setlogin@@Base+0x2094>
    7d30:	mov	r1, sl
    7d32:	movw	r2, #16960	; 0x4240
    7d36:	movs	r3, #0
    7d38:	movt	r2, #15
    7d3c:	mov	r6, r0
    7d3e:	mov	r0, fp
    7d40:	str	r6, [r4, #32]
    7d42:	bl	de9c <setlogin@@Base+0x2094>
    7d46:	cmp	r6, r5
    7d48:	mov	sl, r2
    7d4a:	str	r2, [r4, #36]	; 0x24
    7d4c:	beq.n	7e3e <error@@Base+0x1f0e>
    7d4e:	ite	gt
    7d50:	movgt	r3, #1
    7d52:	movle	r3, #0
    7d54:	cbnz	r3, 7d80 <error@@Base+0x1e50>
    7d56:	mov	r0, r7
    7d58:	movs	r2, #0
    7d5a:	movs	r3, #0
    7d5c:	strd	r2, r3, [r4, #24]
    7d60:	bl	7824 <error@@Base+0x18f4>
    7d64:	ldr	r3, [sp, #32]
    7d66:	movw	r2, #19923	; 0x4dd3
    7d6a:	movt	r2, #4194	; 0x1062
    7d6e:	ldr	r1, [sp, #28]
    7d70:	smull	r0, r2, r2, r3
    7d74:	asrs	r3, r3, #31
    7d76:	str	r1, [r4, #32]
    7d78:	rsb	r3, r3, r2, asr #6
    7d7c:	str	r3, [r4, #36]	; 0x24
    7d7e:	b.n	7c86 <error@@Base+0x1d56>
    7d80:	mov	r1, r5
    7d82:	mov	r0, r6
    7d84:	bl	df3c <setlogin@@Base+0x2134>
    7d88:	ldr	r1, [r4, #44]	; 0x2c
    7d8a:	mov	r6, r0
    7d8c:	mov	r0, sl
    7d8e:	str	r6, [r4, #40]	; 0x28
    7d90:	bl	df3c <setlogin@@Base+0x2134>
    7d94:	cmp	r0, #0
    7d96:	mov	r5, r0
    7d98:	str	r0, [r4, #44]	; 0x2c
    7d9a:	blt.n	7e1c <error@@Base+0x1eec>
    7d9c:	cmp	r6, #0
    7d9e:	beq.n	7e4e <error@@Base+0x1f1e>
    7da0:	ldr	r0, [r4, #0]
    7da2:	ldr	r1, [r4, #20]
    7da4:	str	r0, [sp, #4]
    7da6:	ldr	r0, [r4, #16]
    7da8:	lsrs	r3, r1, #1
    7daa:	lsrs	r2, r0, #1
    7dac:	ldr	r0, [sp, #4]
    7dae:	orr.w	r2, r2, r1, lsl #31
    7db2:	movs	r1, #0
    7db4:	cmp	r3, r1
    7db6:	strd	r2, r3, [r4, #16]
    7dba:	mov.w	r0, r0, lsr #2
    7dbe:	it	eq
    7dc0:	cmpeq	r2, r0
    7dc2:	it	cc
    7dc4:	strdcc	r0, r1, [r4, #16]
    7dc8:	mov	r0, r5
    7dca:	mov.w	r1, #1000	; 0x3e8
    7dce:	str	r6, [sp, #12]
    7dd0:	bl	dfa0 <setlogin@@Base+0x2198>
    7dd4:	add	r6, sp, #20
    7dd6:	add	r5, sp, #12
    7dd8:	str	r0, [sp, #16]
    7dda:	b.n	7dee <error@@Base+0x1ebe>
    7ddc:	blx	1f04 <__errno_location@plt>
    7de0:	ldr	r3, [r0, #0]
    7de2:	cmp	r3, #4
    7de4:	bne.n	7d56 <error@@Base+0x1e26>
    7de6:	ldmia.w	r6, {r0, r1}
    7dea:	stmia.w	r5, {r0, r1}
    7dee:	mov	r1, r6
    7df0:	mov	r0, r5
    7df2:	blx	1e50 <nanosleep@plt>
    7df6:	adds	r0, #1
    7df8:	beq.n	7ddc <error@@Base+0x1eac>
    7dfa:	b.n	7d56 <error@@Base+0x1e26>
    7dfc:	mov	r0, r5
    7dfe:	mov.w	r1, #4294967295	; 0xffffffff
    7e02:	bl	ded8 <setlogin@@Base+0x20d0>
    7e06:	movw	r1, #16960	; 0x4240
    7e0a:	movt	r1, #15
    7e0e:	mov	r5, r0
    7e10:	mov	r0, r6
    7e12:	str	r5, [r4, #40]	; 0x28
    7e14:	bl	ded8 <setlogin@@Base+0x20d0>
    7e18:	str	r0, [r4, #44]	; 0x2c
    7e1a:	b.n	7cde <error@@Base+0x1dae>
    7e1c:	mov	r0, r6
    7e1e:	mov.w	r1, #4294967295	; 0xffffffff
    7e22:	bl	ded8 <setlogin@@Base+0x20d0>
    7e26:	movw	r1, #16960	; 0x4240
    7e2a:	movt	r1, #15
    7e2e:	mov	r6, r0
    7e30:	mov	r0, r5
    7e32:	str	r6, [r4, #40]	; 0x28
    7e34:	bl	ded8 <setlogin@@Base+0x20d0>
    7e38:	mov	r5, r0
    7e3a:	str	r0, [r4, #44]	; 0x2c
    7e3c:	b.n	7d9c <error@@Base+0x1e6c>
    7e3e:	ldr	r3, [r4, #44]	; 0x2c
    7e40:	cmp	sl, r3
    7e42:	ite	le
    7e44:	movle	r3, #0
    7e46:	movgt	r3, #1
    7e48:	cmp	r3, #0
    7e4a:	bne.n	7d80 <error@@Base+0x1e50>
    7e4c:	b.n	7d56 <error@@Base+0x1e26>
    7e4e:	movw	r3, #9999	; 0x270f
    7e52:	cmp	r5, r3
    7e54:	bgt.n	7dc8 <error@@Base+0x1e98>
    7e56:	ldrd	r3, r1, [r4, #16]
    7e5a:	ldr	r2, [r4, #0]
    7e5c:	adds.w	r8, r3, r3
    7e60:	mov.w	r3, #0
    7e64:	adc.w	r9, r1, r1
    7e68:	strd	r8, r9, [r4, #16]
    7e6c:	lsls	r2, r2, #3
    7e6e:	cmp	r3, r9
    7e70:	it	eq
    7e72:	cmpeq	r2, r8
    7e74:	it	cc
    7e76:	strdcc	r2, r3, [r4, #16]
    7e7a:	b.n	7dc8 <error@@Base+0x1e98>
    7e7c:	blx	1cf8 <__stack_chk_fail@plt>
    7e80:	movs	r0, r0
    7e82:	movs	r0, r0
    7e84:	strh	r0, [r0, #36]	; 0x24
    7e86:	asrs	r6, r5
    7e88:	str	r1, [sp, #120]	; 0x78
    7e8a:	movs	r1, r0
    7e8c:	lsls	r4, r1, #9
    7e8e:	movs	r0, r0
    7e90:	str	r0, [sp, #920]	; 0x398
    7e92:	movs	r1, r0
    7e94:	push	{r4, r5, r6, lr}
    7e96:	mov	r5, r0
    7e98:	ldr	r0, [pc, #96]	; (7efc <error@@Base+0x1fcc>)
    7e9a:	sub	sp, #8
    7e9c:	mov	r4, r1
    7e9e:	add	r0, pc
    7ea0:	blx	19d4 <getenv@plt>
    7ea4:	cbz	r0, 7ed0 <error@@Base+0x1fa0>
    7ea6:	ldr	r6, [pc, #88]	; (7f00 <error@@Base+0x1fd0>)
    7ea8:	mov.w	r3, #4294967295	; 0xffffffff
    7eac:	str	r0, [sp, #4]
    7eae:	movs	r2, #1
    7eb0:	add	r6, pc
    7eb2:	mov	r1, r4
    7eb4:	mov	r0, r5
    7eb6:	str	r6, [sp, #0]
    7eb8:	blx	1c54 <__snprintf_chk@plt>
    7ebc:	cmp	r0, #0
    7ebe:	ite	gt
    7ec0:	movgt	r3, #1
    7ec2:	movle	r3, #0
    7ec4:	cmp	r0, r4
    7ec6:	ite	cs
    7ec8:	movcs	r0, #0
    7eca:	andcc.w	r0, r3, #1
    7ece:	cbnz	r0, 7eea <error@@Base+0x1fba>
    7ed0:	ldr	r2, [pc, #48]	; (7f04 <error@@Base+0x1fd4>)
    7ed2:	mov	r1, r4
    7ed4:	mov	r0, r5
    7ed6:	add	r2, pc
    7ed8:	blx	1df8 <snprintf@plt>
    7edc:	cmp	r0, r4
    7ede:	ite	cc
    7ee0:	movcc	r4, #0
    7ee2:	movcs	r4, #1
    7ee4:	orrs.w	r3, r4, r0, lsr #31
    7ee8:	bne.n	7eee <error@@Base+0x1fbe>
    7eea:	add	sp, #8
    7eec:	pop	{r4, r5, r6, pc}
    7eee:	ldr	r1, [pc, #24]	; (7f08 <error@@Base+0x1fd8>)
    7ef0:	ldr	r0, [pc, #24]	; (7f0c <error@@Base+0x1fdc>)
    7ef2:	add	r1, pc
    7ef4:	add	r0, pc
    7ef6:	adds	r1, #16
    7ef8:	bl	59b8 <fputs@plt+0x3a84>
    7efc:	strb	r6, [r1, #10]
    7efe:	movs	r0, r0
    7f00:	strb	r4, [r3, #10]
    7f02:	movs	r0, r0
    7f04:	strb	r6, [r3, #9]
    7f06:	movs	r0, r0
    7f08:	strb	r2, [r7, #28]
    7f0a:	movs	r0, r0
    7f0c:	strb	r4, [r5, #9]
    7f0e:	movs	r0, r0
    7f10:	ldr	r2, [pc, #116]	; (7f88 <error@@Base+0x2058>)
    7f12:	ldr	r3, [pc, #120]	; (7f8c <error@@Base+0x205c>)
    7f14:	add	r2, pc
    7f16:	push	{r4, r5, r6, lr}
    7f18:	sub	sp, #8
    7f1a:	ldr	r3, [r2, r3]
    7f1c:	ldr	r3, [r3, #0]
    7f1e:	str	r3, [sp, #4]
    7f20:	mov.w	r3, #0
    7f24:	cbz	r0, 7f7c <error@@Base+0x204c>
    7f26:	ldr	r1, [pc, #104]	; (7f90 <error@@Base+0x2060>)
    7f28:	mov	r5, r0
    7f2a:	ldr	r6, [pc, #104]	; (7f94 <error@@Base+0x2064>)
    7f2c:	movs	r4, #0
    7f2e:	add	r1, pc
    7f30:	add	r6, pc
    7f32:	b.n	7f3c <error@@Base+0x200c>
    7f34:	adds	r4, #1
    7f36:	ldr.w	r1, [r6, r4, lsl #3]
    7f3a:	cbz	r1, 7f64 <error@@Base+0x2034>
    7f3c:	mov	r0, r5
    7f3e:	blx	19ec <strcasecmp@plt>
    7f42:	cmp	r0, #0
    7f44:	bne.n	7f34 <error@@Base+0x2004>
    7f46:	ldr	r3, [pc, #80]	; (7f98 <error@@Base+0x2068>)
    7f48:	add	r3, pc
    7f4a:	add.w	r4, r3, r4, lsl #3
    7f4e:	ldr	r0, [r4, #4]
    7f50:	ldr	r2, [pc, #72]	; (7f9c <error@@Base+0x206c>)
    7f52:	ldr	r3, [pc, #56]	; (7f8c <error@@Base+0x205c>)
    7f54:	add	r2, pc
    7f56:	ldr	r3, [r2, r3]
    7f58:	ldr	r2, [r3, #0]
    7f5a:	ldr	r3, [sp, #4]
    7f5c:	eors	r2, r3
    7f5e:	bne.n	7f82 <error@@Base+0x2052>
    7f60:	add	sp, #8
    7f62:	pop	{r4, r5, r6, pc}
    7f64:	mov	r2, r1
    7f66:	mov	r0, r5
    7f68:	mov	r1, sp
    7f6a:	blx	1bf0 <strtol@plt>
    7f6e:	ldrb	r3, [r5, #0]
    7f70:	cbz	r3, 7f7c <error@@Base+0x204c>
    7f72:	ldr	r3, [sp, #0]
    7f74:	ldrb	r3, [r3, #0]
    7f76:	cbnz	r3, 7f7c <error@@Base+0x204c>
    7f78:	cmp	r0, #255	; 0xff
    7f7a:	bls.n	7f50 <error@@Base+0x2020>
    7f7c:	mov.w	r0, #4294967295	; 0xffffffff
    7f80:	b.n	7f50 <error@@Base+0x2020>
    7f82:	blx	1cf8 <__stack_chk_fail@plt>
    7f86:	nop
    7f88:	ldrh	r4, [r3, #50]	; 0x32
    7f8a:	movs	r1, r0
    7f8c:	lsls	r4, r1, #9
    7f8e:	movs	r0, r0
    7f90:	ldr	r2, [r7, #24]
    7f92:	movs	r0, r0
    7f94:	ldrh	r0, [r4, #34]	; 0x22
    7f96:	movs	r1, r0
    7f98:	ldrh	r0, [r1, #34]	; 0x22
    7f9a:	movs	r1, r0
    7f9c:	ldrh	r4, [r3, #48]	; 0x30
    7f9e:	movs	r1, r0
    7fa0:	push	{r4, r5, lr}
    7fa2:	mvn.w	r1, #2147483648	; 0x80000000
    7fa6:	ldr	r3, [pc, #60]	; (7fe4 <error@@Base+0x20b4>)
    7fa8:	sub	sp, #12
    7faa:	ldr	r4, [pc, #60]	; (7fe8 <error@@Base+0x20b8>)
    7fac:	add	r3, pc
    7fae:	add	r4, pc
    7fb0:	b.n	7fba <error@@Base+0x208a>
    7fb2:	ldr.w	r4, [r3, #8]!
    7fb6:	cbz	r4, 7fc4 <error@@Base+0x2094>
    7fb8:	ldr	r1, [r3, #4]
    7fba:	cmp	r0, r1
    7fbc:	bne.n	7fb2 <error@@Base+0x2082>
    7fbe:	mov	r0, r4
    7fc0:	add	sp, #12
    7fc2:	pop	{r4, r5, pc}
    7fc4:	ldr	r2, [pc, #36]	; (7fec <error@@Base+0x20bc>)
    7fc6:	movs	r3, #5
    7fc8:	ldr	r5, [pc, #36]	; (7ff0 <error@@Base+0x20c0>)
    7fca:	mov	r1, r3
    7fcc:	add	r2, pc
    7fce:	str	r0, [sp, #4]
    7fd0:	adds	r4, r2, #4
    7fd2:	add	r5, pc
    7fd4:	movs	r2, #1
    7fd6:	str	r5, [sp, #0]
    7fd8:	mov	r0, r4
    7fda:	blx	1c54 <__snprintf_chk@plt>
    7fde:	mov	r0, r4
    7fe0:	add	sp, #12
    7fe2:	pop	{r4, r5, pc}
    7fe4:	ldrh	r4, [r4, #30]
    7fe6:	movs	r1, r0
    7fe8:	ldr	r2, [r7, #16]
    7fea:	movs	r0, r0
    7fec:	str	r1, [sp, #208]	; 0xd0
    7fee:	movs	r1, r0
    7ff0:	strb	r6, [r5, #6]
    7ff2:	movs	r0, r0
    7ff4:	push	{r3, r4, r5, lr}
    7ff6:	ldrb	r5, [r0, #0]
    7ff8:	cbz	r5, 8010 <error@@Base+0x20e0>
    7ffa:	mov	r4, r0
    7ffc:	blx	1bac <__ctype_tolower_loc@plt>
    8000:	ldr	r3, [r0, #0]
    8002:	ldr.w	r3, [r3, r5, lsl #2]
    8006:	strb	r3, [r4, #0]
    8008:	ldrb.w	r5, [r4, #1]!
    800c:	cmp	r5, #0
    800e:	bne.n	8000 <error@@Base+0x20d0>
    8010:	pop	{r3, r4, r5, pc}
    8012:	nop
    8014:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    8018:	sub	sp, #120	; 0x78
    801a:	ldr	r4, [pc, #340]	; (8170 <error@@Base+0x2240>)
    801c:	add.w	r8, sp, #4
    8020:	ldr	r3, [pc, #336]	; (8174 <error@@Base+0x2244>)
    8022:	mov	r5, r0
    8024:	add	r4, pc
    8026:	mov	r7, r1
    8028:	mov	r6, r2
    802a:	movs	r1, #0
    802c:	ldr	r3, [r4, r3]
    802e:	movs	r2, #110	; 0x6e
    8030:	mov	r0, r8
    8032:	movs	r4, #1
    8034:	ldr	r3, [r3, #0]
    8036:	str	r3, [sp, #116]	; 0x74
    8038:	mov.w	r3, #0
    803c:	blx	1a38 <memset@plt>
    8040:	add.w	r0, sp, #6
    8044:	mov	r1, r5
    8046:	movs	r2, #108	; 0x6c
    8048:	strh.w	r4, [sp, #4]
    804c:	bl	c840 <setlogin@@Base+0xa38>
    8050:	cmp	r0, #107	; 0x6b
    8052:	bhi.n	80c4 <error@@Base+0x2194>
    8054:	mov	r1, r4
    8056:	mov	r0, r4
    8058:	movs	r2, #0
    805a:	blx	1b24 <socket@plt>
    805e:	adds	r1, r0, #1
    8060:	mov	r4, r0
    8062:	beq.n	8148 <error@@Base+0x2218>
    8064:	cmp	r6, #1
    8066:	beq.n	809e <error@@Base+0x216e>
    8068:	movs	r2, #110	; 0x6e
    806a:	mov	r1, r8
    806c:	mov	r0, r4
    806e:	blx	1c60 <bind@plt>
    8072:	adds	r2, r0, #1
    8074:	mov	r6, r0
    8076:	beq.n	80e2 <error@@Base+0x21b2>
    8078:	mov	r1, r7
    807a:	mov	r0, r4
    807c:	blx	1a10 <listen@plt>
    8080:	adds	r3, r0, #1
    8082:	mov	r6, r0
    8084:	beq.n	8112 <error@@Base+0x21e2>
    8086:	ldr	r2, [pc, #240]	; (8178 <error@@Base+0x2248>)
    8088:	ldr	r3, [pc, #232]	; (8174 <error@@Base+0x2244>)
    808a:	add	r2, pc
    808c:	ldr	r3, [r2, r3]
    808e:	ldr	r2, [r3, #0]
    8090:	ldr	r3, [sp, #116]	; 0x74
    8092:	eors	r2, r3
    8094:	bne.n	816a <error@@Base+0x223a>
    8096:	mov	r0, r4
    8098:	add	sp, #120	; 0x78
    809a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    809e:	mov	r0, r5
    80a0:	blx	1b78 <unlink@plt>
    80a4:	cmp	r0, #0
    80a6:	beq.n	8068 <error@@Base+0x2138>
    80a8:	blx	1f04 <__errno_location@plt>
    80ac:	ldr	r0, [r0, #0]
    80ae:	cmp	r0, #2
    80b0:	beq.n	8068 <error@@Base+0x2138>
    80b2:	blx	1938 <strerror@plt+0x4>
    80b6:	mov	r1, r5
    80b8:	mov	r2, r0
    80ba:	ldr	r0, [pc, #192]	; (817c <error@@Base+0x224c>)
    80bc:	add	r0, pc
    80be:	bl	5f30 <error@@Base>
    80c2:	b.n	8068 <error@@Base+0x2138>
    80c4:	ldr	r1, [pc, #184]	; (8180 <error@@Base+0x2250>)
    80c6:	mov	r2, r5
    80c8:	ldr	r0, [pc, #184]	; (8184 <error@@Base+0x2254>)
    80ca:	mov.w	r4, #4294967295	; 0xffffffff
    80ce:	add	r1, pc
    80d0:	add	r0, pc
    80d2:	adds	r1, #32
    80d4:	bl	5f30 <error@@Base>
    80d8:	blx	1f04 <__errno_location@plt>
    80dc:	movs	r3, #36	; 0x24
    80de:	str	r3, [r0, #0]
    80e0:	b.n	8086 <error@@Base+0x2156>
    80e2:	blx	1f04 <__errno_location@plt>
    80e6:	ldr.w	r8, [r0]
    80ea:	mov	r7, r0
    80ec:	mov	r0, r8
    80ee:	blx	1938 <strerror@plt+0x4>
    80f2:	ldr	r1, [pc, #148]	; (8188 <error@@Base+0x2258>)
    80f4:	mov	r2, r5
    80f6:	add	r1, pc
    80f8:	adds	r1, #32
    80fa:	mov	r3, r0
    80fc:	ldr	r0, [pc, #140]	; (818c <error@@Base+0x225c>)
    80fe:	add	r0, pc
    8100:	bl	5f30 <error@@Base>
    8104:	mov	r0, r4
    8106:	blx	1c88 <close@plt+0x4>
    810a:	mov	r4, r6
    810c:	str.w	r8, [r7]
    8110:	b.n	8086 <error@@Base+0x2156>
    8112:	blx	1f04 <__errno_location@plt>
    8116:	ldr.w	r8, [r0]
    811a:	mov	r7, r0
    811c:	mov	r0, r8
    811e:	blx	1938 <strerror@plt+0x4>
    8122:	ldr	r1, [pc, #108]	; (8190 <error@@Base+0x2260>)
    8124:	mov	r2, r5
    8126:	add	r1, pc
    8128:	adds	r1, #32
    812a:	mov	r3, r0
    812c:	ldr	r0, [pc, #100]	; (8194 <error@@Base+0x2264>)
    812e:	add	r0, pc
    8130:	bl	5f30 <error@@Base>
    8134:	mov	r0, r4
    8136:	blx	1c88 <close@plt+0x4>
    813a:	mov	r0, r5
    813c:	blx	1b78 <unlink@plt>
    8140:	mov	r4, r6
    8142:	str.w	r8, [r7]
    8146:	b.n	8086 <error@@Base+0x2156>
    8148:	blx	1f04 <__errno_location@plt>
    814c:	ldr	r6, [r0, #0]
    814e:	mov	r5, r0
    8150:	mov	r0, r6
    8152:	blx	1938 <strerror@plt+0x4>
    8156:	ldr	r1, [pc, #64]	; (8198 <error@@Base+0x2268>)
    8158:	add	r1, pc
    815a:	adds	r1, #32
    815c:	mov	r2, r0
    815e:	ldr	r0, [pc, #60]	; (819c <error@@Base+0x226c>)
    8160:	add	r0, pc
    8162:	bl	5f30 <error@@Base>
    8166:	str	r6, [r5, #0]
    8168:	b.n	8086 <error@@Base+0x2156>
    816a:	blx	1cf8 <__stack_chk_fail@plt>
    816e:	nop
    8170:	ldrh	r4, [r1, #42]	; 0x2a
    8172:	movs	r1, r0
    8174:	lsls	r4, r1, #9
    8176:	movs	r0, r0
    8178:	ldrh	r6, [r4, #38]	; 0x26
    817a:	movs	r1, r0
    817c:	strb	r0, [r2, #4]
    817e:	movs	r0, r0
    8180:	strb	r6, [r3, #21]
    8182:	movs	r0, r0
    8184:	strb	r0, [r7, #2]
    8186:	movs	r0, r0
    8188:	strb	r6, [r6, #20]
    818a:	movs	r0, r0
    818c:	strb	r2, [r4, #3]
    818e:	movs	r0, r0
    8190:	strb	r6, [r0, #20]
    8192:	movs	r0, r0
    8194:	strb	r2, [r2, #3]
    8196:	movs	r0, r0
    8198:	strb	r4, [r2, #19]
    819a:	movs	r0, r0
    819c:	strb	r0, [r3, #1]
    819e:	movs	r0, r0
    81a0:	ldr.w	ip, [pc, #108]	; 8210 <error@@Base+0x22e0>
    81a4:	ldr	r3, [pc, #108]	; (8214 <error@@Base+0x22e4>)
    81a6:	add	ip, pc
    81a8:	ldr	r1, [pc, #108]	; (8218 <error@@Base+0x22e8>)
    81aa:	push	{r4, lr}
    81ac:	mov	r4, r0
    81ae:	ldr	r0, [pc, #108]	; (821c <error@@Base+0x22ec>)
    81b0:	sub	sp, #16
    81b2:	ldr.w	r3, [ip, r3]
    81b6:	add	r1, pc
    81b8:	add	r0, pc
    81ba:	adds	r1, #48	; 0x30
    81bc:	mov	r2, r4
    81be:	ldr	r3, [r3, #0]
    81c0:	str	r3, [sp, #12]
    81c2:	mov.w	r3, #0
    81c6:	movs	r3, #1
    81c8:	str	r3, [sp, #8]
    81ca:	bl	610c <error@@Base+0x1dc>
    81ce:	movs	r2, #4
    81d0:	add	r3, sp, #8
    81d2:	str	r2, [sp, #0]
    81d4:	mov	r0, r4
    81d6:	movs	r2, #26
    81d8:	movs	r1, #41	; 0x29
    81da:	blx	1ea4 <setsockopt@plt>
    81de:	adds	r0, #1
    81e0:	beq.n	81f6 <error@@Base+0x22c6>
    81e2:	ldr	r2, [pc, #60]	; (8220 <error@@Base+0x22f0>)
    81e4:	ldr	r3, [pc, #44]	; (8214 <error@@Base+0x22e4>)
    81e6:	add	r2, pc
    81e8:	ldr	r3, [r2, r3]
    81ea:	ldr	r2, [r3, #0]
    81ec:	ldr	r3, [sp, #12]
    81ee:	eors	r2, r3
    81f0:	bne.n	820c <error@@Base+0x22dc>
    81f2:	add	sp, #16
    81f4:	pop	{r4, pc}
    81f6:	blx	1f04 <__errno_location@plt>
    81fa:	ldr	r0, [r0, #0]
    81fc:	blx	1938 <strerror@plt+0x4>
    8200:	mov	r1, r0
    8202:	ldr	r0, [pc, #32]	; (8224 <error@@Base+0x22f4>)
    8204:	add	r0, pc
    8206:	bl	5f30 <error@@Base>
    820a:	b.n	81e2 <error@@Base+0x22b2>
    820c:	blx	1cf8 <__stack_chk_fail@plt>
    8210:	ldrh	r2, [r1, #30]
    8212:	movs	r1, r0
    8214:	lsls	r4, r1, #9
    8216:	movs	r0, r0
    8218:	strb	r6, [r6, #17]
    821a:	movs	r0, r0
    821c:	strb	r4, [r5, #1]
    821e:	movs	r0, r0
    8220:	ldrh	r2, [r1, #28]
    8222:	movs	r1, r0
    8224:	strb	r0, [r0, #1]
    8226:	movs	r0, r0
    8228:	push	{r3, r4, r6, lr}
    822a:	mov	r6, r0
    822c:	mov	r4, r1
    822e:	ldr	r0, [r0, #0]
    8230:	ldr	r1, [r1, #0]
    8232:	clz	r3, r0
    8236:	clz	r2, r1
    823a:	lsrs	r3, r3, #5
    823c:	lsrs	r2, r2, #5
    823e:	cmp	r2, r3
    8240:	bne.n	82b4 <error@@Base+0x2384>
    8242:	cbz	r0, 824a <error@@Base+0x231a>
    8244:	blx	1ee0 <strcmp@plt>
    8248:	cbnz	r0, 82b4 <error@@Base+0x2384>
    824a:	ldr	r2, [r6, #4]
    824c:	ldr	r3, [r4, #4]
    824e:	cmp	r2, r3
    8250:	bne.n	82b4 <error@@Base+0x2384>
    8252:	ldr	r0, [r6, #8]
    8254:	ldr	r1, [r4, #8]
    8256:	clz	r2, r0
    825a:	clz	r3, r1
    825e:	lsrs	r2, r2, #5
    8260:	lsrs	r3, r3, #5
    8262:	cmp	r2, r3
    8264:	bne.n	82b4 <error@@Base+0x2384>
    8266:	cbz	r0, 826e <error@@Base+0x233e>
    8268:	blx	1ee0 <strcmp@plt>
    826c:	cbnz	r0, 82b4 <error@@Base+0x2384>
    826e:	ldr	r0, [r6, #12]
    8270:	ldr	r1, [r4, #12]
    8272:	clz	r2, r0
    8276:	clz	r3, r1
    827a:	lsrs	r2, r2, #5
    827c:	lsrs	r3, r3, #5
    827e:	cmp	r2, r3
    8280:	bne.n	82b4 <error@@Base+0x2384>
    8282:	cbz	r0, 828a <error@@Base+0x235a>
    8284:	blx	1ee0 <strcmp@plt>
    8288:	cbnz	r0, 82b4 <error@@Base+0x2384>
    828a:	ldr	r2, [r6, #16]
    828c:	ldr	r3, [r4, #16]
    828e:	cmp	r2, r3
    8290:	bne.n	82b4 <error@@Base+0x2384>
    8292:	ldr	r0, [r6, #20]
    8294:	ldr	r1, [r4, #20]
    8296:	clz	r2, r0
    829a:	clz	r3, r1
    829e:	lsrs	r2, r2, #5
    82a0:	lsrs	r3, r3, #5
    82a2:	cmp	r2, r3
    82a4:	bne.n	82b4 <error@@Base+0x2384>
    82a6:	cbz	r0, 82b8 <error@@Base+0x2388>
    82a8:	blx	1ee0 <strcmp@plt>
    82ac:	clz	r0, r0
    82b0:	lsrs	r0, r0, #5
    82b2:	pop	{r3, r4, r6, pc}
    82b4:	movs	r0, #0
    82b6:	pop	{r3, r4, r6, pc}
    82b8:	movs	r0, #1
    82ba:	pop	{r3, r4, r6, pc}
    82bc:	ldr	r0, [pc, #68]	; (8304 <error@@Base+0x23d4>)
    82be:	mov.w	r1, #256	; 0x100
    82c2:	push	{r3, r4, r5, lr}
    82c4:	add	r0, pc
    82c6:	blx	1c14 <open64@plt>
    82ca:	cmp	r0, #0
    82cc:	bge.n	82de <error@@Base+0x23ae>
    82ce:	blx	1bb8 <getppid@plt>
    82d2:	cmp	r0, #1
    82d4:	mov	r4, r0
    82d6:	beq.n	82e8 <error@@Base+0x23b8>
    82d8:	movs	r4, #0
    82da:	mov	r0, r4
    82dc:	pop	{r3, r4, r5, pc}
    82de:	movs	r4, #0
    82e0:	blx	1c88 <close@plt+0x4>
    82e4:	mov	r0, r4
    82e6:	pop	{r3, r4, r5, pc}
    82e8:	movs	r0, #0
    82ea:	blx	1eb0 <getsid@plt>
    82ee:	mov	r5, r0
    82f0:	blx	1d88 <getpid@plt>
    82f4:	cmp	r5, r0
    82f6:	bne.n	82d8 <error@@Base+0x23a8>
    82f8:	ldr	r0, [pc, #12]	; (8308 <error@@Base+0x23d8>)
    82fa:	add	r0, pc
    82fc:	bl	610c <error@@Base+0x1dc>
    8300:	b.n	82da <error@@Base+0x23aa>
    8302:	nop
    8304:	ldr	r4, [r3, #120]	; 0x78
    8306:	movs	r0, r0
    8308:	ldr	r2, [r6, #116]	; 0x74
    830a:	movs	r0, r0
    830c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8310:	sub	sp, #12
    8312:	mov	r6, r0
    8314:	mov	r5, r1
    8316:	str	r1, [sp, #4]
    8318:	movs	r0, #1
    831a:	movs	r1, #4
    831c:	mov	fp, r2
    831e:	bl	61d4 <error@@Base+0x2a4>
    8322:	movs	r4, #0
    8324:	str.w	r4, [fp]
    8328:	str	r4, [r5, #0]
    832a:	ldrb	r7, [r6, #0]
    832c:	mov	r9, r0
    832e:	cmp	r7, #0
    8330:	beq.n	8432 <error@@Base+0x2502>
    8332:	mov	r5, r4
    8334:	mov	r3, r4
    8336:	b.n	834c <error@@Base+0x241c>
    8338:	mov	r0, r4
    833a:	movs	r1, #1
    833c:	bl	ded8 <setlogin@@Base+0x20d0>
    8340:	mov	r4, r0
    8342:	ldrb	r7, [r6, r4]
    8344:	mov	r3, r4
    8346:	cmp	r7, #0
    8348:	beq.w	8454 <error@@Base+0x2524>
    834c:	cmp	r7, #9
    834e:	it	ne
    8350:	cmpne	r7, #32
    8352:	ite	eq
    8354:	moveq.w	r8, #1
    8358:	movne.w	r8, #0
    835c:	beq.n	8338 <error@@Base+0x2408>
    835e:	cmp	r7, #92	; 0x5c
    8360:	beq.n	8460 <error@@Base+0x2530>
    8362:	cmp	r7, #34	; 0x22
    8364:	it	ne
    8366:	cmpne	r7, #39	; 0x27
    8368:	ite	eq
    836a:	moveq.w	r8, #1
    836e:	movne.w	r8, #0
    8372:	bne.n	8380 <error@@Base+0x2450>
    8374:	mov	r0, r4
    8376:	movs	r1, #1
    8378:	bl	ded8 <setlogin@@Base+0x20d0>
    837c:	mov	r8, r7
    837e:	mov	r4, r0
    8380:	movs	r1, #2
    8382:	mov	r0, r5
    8384:	bl	ded8 <setlogin@@Base+0x20d0>
    8388:	movs	r2, #4
    838a:	mov	r1, r0
    838c:	mov	r0, r9
    838e:	bl	6218 <error@@Base+0x2e8>
    8392:	mov	r9, r0
    8394:	adds	r0, r6, r4
    8396:	blx	1b6c <strlen@plt>
    839a:	movs	r1, #1
    839c:	add.w	sl, r9, r5, lsl #2
    83a0:	mov	r7, r0
    83a2:	mov	r0, r5
    83a4:	bl	ded8 <setlogin@@Base+0x20d0>
    83a8:	adds	r1, r7, #1
    83aa:	mov	r3, r0
    83ac:	movs	r0, #1
    83ae:	mov	r7, r3
    83b0:	bl	61d4 <error@@Base+0x2a4>
    83b4:	movs	r3, #0
    83b6:	str.w	r0, [r9, r5, lsl #2]
    83ba:	str.w	r3, [sl, #4]
    83be:	ldrb	r5, [r6, r4]
    83c0:	cbz	r5, 842c <error@@Base+0x24fc>
    83c2:	mov	sl, r0
    83c4:	b.n	83e2 <error@@Base+0x24b2>
    83c6:	mov	r4, r0
    83c8:	cmp.w	r8, #0
    83cc:	bne.n	8442 <error@@Base+0x2512>
    83ce:	cmp	r5, #9
    83d0:	it	ne
    83d2:	cmpne	r5, #32
    83d4:	beq.n	8446 <error@@Base+0x2516>
    83d6:	strb.w	r5, [sl]
    83da:	ldrb	r5, [r6, r4]
    83dc:	add.w	sl, sl, #1
    83e0:	cbz	r5, 842c <error@@Base+0x24fc>
    83e2:	movs	r1, #1
    83e4:	mov	r0, r4
    83e6:	bl	ded8 <setlogin@@Base+0x20d0>
    83ea:	cmp	r5, #92	; 0x5c
    83ec:	mov	r2, r0
    83ee:	bne.n	83c6 <error@@Base+0x2496>
    83f0:	add.w	ip, r6, r4
    83f4:	mov	r0, r4
    83f6:	movs	r1, #2
    83f8:	ldrb.w	r4, [ip, #1]
    83fc:	cmp	r4, #34	; 0x22
    83fe:	it	ne
    8400:	cmpne	r4, #39	; 0x27
    8402:	ite	eq
    8404:	moveq.w	ip, #1
    8408:	movne.w	ip, #0
    840c:	cmp	r4, #92	; 0x5c
    840e:	ite	ne
    8410:	movne	r3, ip
    8412:	orreq.w	r3, ip, #1
    8416:	cbz	r3, 8458 <error@@Base+0x2528>
    8418:	strb.w	r4, [sl]
    841c:	add.w	sl, sl, #1
    8420:	bl	ded8 <setlogin@@Base+0x20d0>
    8424:	mov	r4, r0
    8426:	ldrb	r5, [r6, r4]
    8428:	cmp	r5, #0
    842a:	bne.n	83e2 <error@@Base+0x24b2>
    842c:	cmp.w	r8, #0
    8430:	bne.n	848a <error@@Base+0x255a>
    8432:	ldr	r3, [sp, #4]
    8434:	movs	r0, #0
    8436:	str	r7, [r3, #0]
    8438:	str.w	r9, [fp]
    843c:	add	sp, #12
    843e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8442:	cmp	r5, r8
    8444:	bne.n	83d6 <error@@Base+0x24a6>
    8446:	mov	r4, r2
    8448:	mov	r5, r7
    844a:	ldrb	r7, [r6, r4]
    844c:	mov	r3, r4
    844e:	cmp	r7, #0
    8450:	bne.w	834c <error@@Base+0x241c>
    8454:	mov	r7, r5
    8456:	b.n	8432 <error@@Base+0x2502>
    8458:	mov	r4, r2
    845a:	strb.w	r5, [sl]
    845e:	b.n	83da <error@@Base+0x24aa>
    8460:	add	r3, r6
    8462:	ldrb	r3, [r3, #1]
    8464:	cmp	r3, #34	; 0x22
    8466:	it	ne
    8468:	cmpne	r3, #39	; 0x27
    846a:	ite	eq
    846c:	moveq	r7, #1
    846e:	movne	r7, #0
    8470:	cmp	r3, #92	; 0x5c
    8472:	it	eq
    8474:	orreq.w	r7, r7, #1
    8478:	cbz	r7, 8486 <error@@Base+0x2556>
    847a:	mov	r0, r4
    847c:	movs	r1, #1
    847e:	bl	ded8 <setlogin@@Base+0x20d0>
    8482:	mov	r4, r0
    8484:	b.n	8380 <error@@Base+0x2450>
    8486:	mov	r8, r7
    8488:	b.n	8380 <error@@Base+0x2450>
    848a:	cmp.w	r9, #0
    848e:	beq.n	84b2 <error@@Base+0x2582>
    8490:	add.w	r7, r9, r7, lsl #2
    8494:	mov	r4, r9
    8496:	ldr.w	r0, [r4], #4
    849a:	blx	1adc <free@plt+0x4>
    849e:	cmp	r7, r4
    84a0:	bne.n	8496 <error@@Base+0x2566>
    84a2:	mov	r0, r9
    84a4:	blx	1adc <free@plt+0x4>
    84a8:	mvn.w	r0, #3
    84ac:	add	sp, #12
    84ae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    84b2:	mvn.w	r0, #3
    84b6:	b.n	843c <error@@Base+0x250c>
    84b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    84bc:	sub	sp, #12
    84be:	mov	fp, r0
    84c0:	mov	r7, r1
    84c2:	bl	9c6c <error@@Base+0x3d3c>
    84c6:	cmp	r0, #0
    84c8:	beq.w	8650 <error@@Base+0x2720>
    84cc:	mov	sl, r0
    84ce:	bl	9c6c <error@@Base+0x3d3c>
    84d2:	mov	r6, r0
    84d4:	cmp	r0, #0
    84d6:	beq.w	8650 <error@@Base+0x2720>
    84da:	cmp.w	fp, #0
    84de:	itt	gt
    84e0:	subgt	r7, #4
    84e2:	movgt.w	r9, #0
    84e6:	ble.n	8594 <error@@Base+0x2664>
    84e8:	mov	r0, r6
    84ea:	bl	9f00 <error@@Base+0x3fd0>
    84ee:	ldr.w	r3, [r7, #4]!
    84f2:	ldrb	r4, [r3, #0]
    84f4:	cmp	r4, #0
    84f6:	beq.w	8630 <error@@Base+0x2700>
    84fa:	mov.w	r8, #0
    84fe:	mov	r5, r8
    8500:	cmp	r4, #39	; 0x27
    8502:	bhi.n	8534 <error@@Base+0x2604>
    8504:	cmp	r4, #8
    8506:	bls.n	8538 <error@@Base+0x2608>
    8508:	sub.w	r3, r4, #9
    850c:	cmp	r3, #30
    850e:	bhi.n	8538 <error@@Base+0x2608>
    8510:	tbb	[pc, r3]
    8514:	asrs	r6, r6, #9
    8516:	asrs	r2, r2, #8
    8518:	asrs	r2, r2, #8
    851a:	asrs	r2, r2, #8
    851c:	asrs	r2, r2, #8
    851e:	asrs	r2, r2, #8
    8520:	asrs	r2, r2, #8
    8522:	asrs	r2, r2, #8
    8524:	asrs	r2, r2, #8
    8526:	asrs	r2, r2, #8
    8528:	asrs	r2, r2, #8
    852a:	strb	r2, [r2, #24]
    852c:	str	r2, [r2, #80]	; 0x50
    852e:	asrs	r2, r2, #8
    8530:	asrs	r2, r2, #8
    8532:	lsls	r5, r4, #1
    8534:	cmp	r4, #92	; 0x5c
    8536:	beq.n	85de <error@@Base+0x26ae>
    8538:	mov	r1, r4
    853a:	mov	r0, r6
    853c:	bl	aca8 <error@@Base+0x4d78>
    8540:	cmp	r0, #0
    8542:	bne.n	85ea <error@@Base+0x26ba>
    8544:	mov	r0, r5
    8546:	movs	r1, #1
    8548:	bl	ded8 <setlogin@@Base+0x20d0>
    854c:	ldr	r3, [r7, #0]
    854e:	ldrb	r4, [r3, r0]
    8550:	mov	r5, r0
    8552:	cmp	r4, #0
    8554:	bne.n	8500 <error@@Base+0x25d0>
    8556:	cmp.w	r9, #0
    855a:	bne.n	860e <error@@Base+0x26de>
    855c:	cmp.w	r8, #0
    8560:	beq.n	8642 <error@@Base+0x2712>
    8562:	movs	r1, #34	; 0x22
    8564:	mov	r0, sl
    8566:	bl	aca8 <error@@Base+0x4d78>
    856a:	cmp	r0, #0
    856c:	bne.n	861a <error@@Base+0x26ea>
    856e:	mov	r1, r6
    8570:	mov	r0, sl
    8572:	bl	aa68 <error@@Base+0x4b38>
    8576:	cmp	r0, #0
    8578:	bne.n	861a <error@@Base+0x26ea>
    857a:	movs	r1, #34	; 0x22
    857c:	mov	r0, sl
    857e:	bl	aca8 <error@@Base+0x4d78>
    8582:	cmp	r0, #0
    8584:	bne.n	861a <error@@Base+0x26ea>
    8586:	mov	r0, r9
    8588:	movs	r1, #1
    858a:	bl	ded8 <setlogin@@Base+0x20d0>
    858e:	cmp	fp, r0
    8590:	mov	r9, r0
    8592:	bne.n	84e8 <error@@Base+0x25b8>
    8594:	mov	r0, sl
    8596:	bl	a07c <error@@Base+0x414c>
    859a:	adds	r0, #1
    859c:	blx	1ce0 <malloc@plt>
    85a0:	mov	r4, r0
    85a2:	cmp	r0, #0
    85a4:	beq.n	865e <error@@Base+0x272e>
    85a6:	mov	r0, sl
    85a8:	bl	a144 <error@@Base+0x4214>
    85ac:	str	r0, [sp, #4]
    85ae:	mov	r0, sl
    85b0:	bl	a07c <error@@Base+0x414c>
    85b4:	ldr	r1, [sp, #4]
    85b6:	mov	r2, r0
    85b8:	mov	r0, r4
    85ba:	blx	1b84 <memcpy@plt>
    85be:	mov	r0, sl
    85c0:	bl	a07c <error@@Base+0x414c>
    85c4:	movs	r2, #0
    85c6:	mov	r3, r0
    85c8:	mov	r0, sl
    85ca:	strb	r2, [r4, r3]
    85cc:	bl	9d88 <error@@Base+0x3e58>
    85d0:	mov	r0, r6
    85d2:	bl	9d88 <error@@Base+0x3e58>
    85d6:	mov	r0, r4
    85d8:	add	sp, #12
    85da:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    85de:	movs	r1, #92	; 0x5c
    85e0:	mov	r0, r6
    85e2:	bl	aca8 <error@@Base+0x4d78>
    85e6:	cmp	r0, #0
    85e8:	beq.n	8538 <error@@Base+0x2608>
    85ea:	bl	9934 <error@@Base+0x3a04>
    85ee:	ldr	r3, [pc, #124]	; (866c <error@@Base+0x273c>)
    85f0:	add	r3, pc
    85f2:	add.w	r1, r3, #64	; 0x40
    85f6:	mov	r2, r0
    85f8:	ldr	r0, [pc, #116]	; (8670 <error@@Base+0x2740>)
    85fa:	add	r0, pc
    85fc:	bl	59b8 <fputs@plt+0x3a84>
    8600:	mov	r1, r4
    8602:	mov	r0, r6
    8604:	bl	aca8 <error@@Base+0x4d78>
    8608:	mov.w	r8, #1
    860c:	b.n	8540 <error@@Base+0x2610>
    860e:	movs	r1, #32
    8610:	mov	r0, sl
    8612:	bl	aca8 <error@@Base+0x4d78>
    8616:	cmp	r0, #0
    8618:	beq.n	855c <error@@Base+0x262c>
    861a:	bl	9934 <error@@Base+0x3a04>
    861e:	ldr	r3, [pc, #84]	; (8674 <error@@Base+0x2744>)
    8620:	add	r3, pc
    8622:	add.w	r1, r3, #64	; 0x40
    8626:	mov	r2, r0
    8628:	ldr	r0, [pc, #76]	; (8678 <error@@Base+0x2748>)
    862a:	add	r0, pc
    862c:	bl	59b8 <fputs@plt+0x3a84>
    8630:	cmp.w	r9, #0
    8634:	beq.n	8642 <error@@Base+0x2712>
    8636:	movs	r1, #32
    8638:	mov	r0, sl
    863a:	bl	aca8 <error@@Base+0x4d78>
    863e:	cmp	r0, #0
    8640:	bne.n	861a <error@@Base+0x26ea>
    8642:	mov	r1, r6
    8644:	mov	r0, sl
    8646:	bl	aa68 <error@@Base+0x4b38>
    864a:	cmp	r0, #0
    864c:	beq.n	8586 <error@@Base+0x2656>
    864e:	b.n	861a <error@@Base+0x26ea>
    8650:	ldr	r1, [pc, #40]	; (867c <error@@Base+0x274c>)
    8652:	ldr	r0, [pc, #44]	; (8680 <error@@Base+0x2750>)
    8654:	add	r1, pc
    8656:	add	r0, pc
    8658:	adds	r1, #64	; 0x40
    865a:	bl	59b8 <fputs@plt+0x3a84>
    865e:	ldr	r1, [pc, #36]	; (8684 <error@@Base+0x2754>)
    8660:	ldr	r0, [pc, #36]	; (8688 <error@@Base+0x2758>)
    8662:	add	r1, pc
    8664:	add	r0, pc
    8666:	adds	r1, #64	; 0x40
    8668:	bl	59b8 <fputs@plt+0x3a84>
    866c:	strb	r4, [r7, #0]
    866e:	movs	r0, r0
    8670:	ldr	r6, [r7, #32]
    8672:	movs	r0, r0
    8674:	strb	r4, [r1, #0]
    8676:	movs	r0, r0
    8678:	ldr	r6, [r2, #68]	; 0x44
    867a:	movs	r0, r0
    867c:	ldr	r0, [r3, #124]	; 0x7c
    867e:	movs	r0, r0
    8680:	ldr	r6, [r3, #24]
    8682:	movs	r0, r0
    8684:	ldr	r2, [r1, #124]	; 0x7c
    8686:	movs	r0, r0
    8688:	ldr	r4, [r6, #64]	; 0x40
    868a:	movs	r0, r0
    868c:	stmdb	sp!, {r4, r6, r7, r8, r9, sl, lr}
    8690:	mov	r9, r2
    8692:	ldr	r2, [pc, #172]	; (8740 <error@@Base+0x2810>)
    8694:	mov	sl, r3
    8696:	ldr	r3, [pc, #172]	; (8744 <error@@Base+0x2814>)
    8698:	sub	sp, #20
    869a:	add	r2, pc
    869c:	add	r7, sp, #8
    869e:	mov	r6, r0
    86a0:	mov	r8, r1
    86a2:	ldr	r3, [r2, r3]
    86a4:	ldr	r3, [r3, #0]
    86a6:	str	r3, [sp, #12]
    86a8:	mov.w	r3, #0
    86ac:	b.n	86b8 <error@@Base+0x2788>
    86ae:	blx	1f04 <__errno_location@plt>
    86b2:	ldr	r0, [r0, #0]
    86b4:	cmp	r0, #4
    86b6:	bne.n	86fa <error@@Base+0x27ca>
    86b8:	movs	r2, #0
    86ba:	mov	r1, r7
    86bc:	mov	r0, r6
    86be:	blx	1bfc <waitpid@plt>
    86c2:	adds	r3, r0, #1
    86c4:	mov	r4, r0
    86c6:	beq.n	86ae <error@@Base+0x277e>
    86c8:	ldr	r1, [sp, #8]
    86ca:	and.w	r3, r1, #127	; 0x7f
    86ce:	adds	r2, r3, #1
    86d0:	sbfx	r2, r2, #1, #7
    86d4:	cmp	r2, #0
    86d6:	bgt.n	872a <error@@Base+0x27fa>
    86d8:	tst.w	r1, #65280	; 0xff00
    86dc:	ubfx	r4, r1, #8, #8
    86e0:	bne.n	870c <error@@Base+0x27dc>
    86e2:	ldr	r2, [pc, #100]	; (8748 <error@@Base+0x2818>)
    86e4:	ldr	r3, [pc, #92]	; (8744 <error@@Base+0x2814>)
    86e6:	add	r2, pc
    86e8:	ldr	r3, [r2, r3]
    86ea:	ldr	r2, [r3, #0]
    86ec:	ldr	r3, [sp, #12]
    86ee:	eors	r2, r3
    86f0:	bne.n	873c <error@@Base+0x280c>
    86f2:	mov	r0, r4
    86f4:	add	sp, #20
    86f6:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, pc}
    86fa:	blx	1938 <strerror@plt+0x4>
    86fe:	mov	r1, r8
    8700:	mov	r2, r0
    8702:	ldr	r0, [pc, #72]	; (874c <error@@Base+0x281c>)
    8704:	add	r0, pc
    8706:	bl	5f30 <error@@Base>
    870a:	b.n	86e2 <error@@Base+0x27b2>
    870c:	cmp.w	sl, #0
    8710:	ldr	r1, [pc, #60]	; (8750 <error@@Base+0x2820>)
    8712:	str	r4, [sp, #0]
    8714:	mov	r3, r9
    8716:	add	r1, pc
    8718:	mov	r2, r8
    871a:	ite	ne
    871c:	movne	r0, #5
    871e:	moveq	r0, #3
    8720:	bl	6160 <error@@Base+0x230>
    8724:	mov.w	r4, #4294967295	; 0xffffffff
    8728:	b.n	86e2 <error@@Base+0x27b2>
    872a:	ldr	r0, [pc, #40]	; (8754 <error@@Base+0x2824>)
    872c:	mov	r2, r9
    872e:	mov	r1, r8
    8730:	mov.w	r4, #4294967295	; 0xffffffff
    8734:	add	r0, pc
    8736:	bl	5f30 <error@@Base>
    873a:	b.n	86e2 <error@@Base+0x27b2>
    873c:	blx	1cf8 <__stack_chk_fail@plt>
    8740:	strh	r6, [r2, #54]	; 0x36
    8742:	movs	r1, r0
    8744:	lsls	r4, r1, #9
    8746:	movs	r0, r0
    8748:	strh	r2, [r1, #52]	; 0x34
    874a:	movs	r1, r0
    874c:	ldr	r0, [r5, #56]	; 0x38
    874e:	movs	r0, r0
    8750:	ldr	r2, [r0, #60]	; 0x3c
    8752:	movs	r0, r0
    8754:	ldr	r0, [r1, #56]	; 0x38
    8756:	movs	r0, r0
    8758:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    875c:	sub.w	sp, sp, #8320	; 0x2080
    8760:	ldr.w	lr, [pc, #344]	; 88bc <error@@Base+0x298c>
    8764:	sub	sp, #4
    8766:	ldr.w	ip, [pc, #344]	; 88c0 <error@@Base+0x2990>
    876a:	mov	r7, r3
    876c:	add	lr, pc
    876e:	add.w	r3, sp, #8256	; 0x2040
    8772:	adds	r3, #60	; 0x3c
    8774:	add	r4, sp, #124	; 0x7c
    8776:	ldr.w	ip, [lr, ip]
    877a:	mov	r5, r1
    877c:	mov	r6, r2
    877e:	mov	r1, r4
    8780:	ldr.w	ip, [ip]
    8784:	str.w	ip, [r3]
    8788:	mov.w	ip, #0
    878c:	add.w	r3, sp, #8320	; 0x2080
    8790:	mov.w	r2, #4096	; 0x1000
    8794:	adds	r3, #32
    8796:	mov	r9, r0
    8798:	ldr.w	r8, [r3]
    879c:	blx	1de0 <__realpath_chk@plt>
    87a0:	cmp	r0, #0
    87a2:	beq.n	8886 <error@@Base+0x2956>
    87a4:	cbz	r6, 87bc <error@@Base+0x288c>
    87a6:	add.w	r1, sp, #4192	; 0x1060
    87aa:	mov	r0, r6
    87ac:	adds	r1, #28
    87ae:	mov.w	r2, #4096	; 0x1000
    87b2:	blx	1de0 <__realpath_chk@plt>
    87b6:	subs	r6, r0, #0
    87b8:	it	ne
    87ba:	movne	r6, #1
    87bc:	ldr	r3, [r5, #16]
    87be:	and.w	r3, r3, #61440	; 0xf000
    87c2:	cmp.w	r3, #32768	; 0x8000
    87c6:	bne.n	887a <error@@Base+0x294a>
    87c8:	mov	r0, r5
    87ca:	mov	r1, r7
    87cc:	bl	74f8 <error@@Base+0x15c8>
    87d0:	cmp	r0, #0
    87d2:	beq.n	8880 <error@@Base+0x2950>
    87d4:	add	r5, sp, #16
    87d6:	mov	r0, r4
    87d8:	blx	19f8 <dirname@plt>
    87dc:	mov	r1, r0
    87de:	cmp	r0, #0
    87e0:	beq.n	8862 <error@@Base+0x2932>
    87e2:	mov.w	r2, #4096	; 0x1000
    87e6:	mov	r0, r4
    87e8:	bl	c840 <setlogin@@Base+0xa38>
    87ec:	mov	r2, r5
    87ee:	mov	r1, r4
    87f0:	movs	r0, #3
    87f2:	blx	1cc4 <__xstat64@plt>
    87f6:	adds	r0, #1
    87f8:	beq.n	8840 <error@@Base+0x2910>
    87fa:	mov	r1, r7
    87fc:	mov	r0, r5
    87fe:	bl	74f8 <error@@Base+0x15c8>
    8802:	cbz	r0, 8840 <error@@Base+0x2910>
    8804:	cbz	r6, 8814 <error@@Base+0x28e4>
    8806:	add.w	r0, sp, #4192	; 0x1060
    880a:	mov	r1, r4
    880c:	adds	r0, #28
    880e:	blx	1ee0 <strcmp@plt>
    8812:	cbz	r0, 8820 <error@@Base+0x28f0>
    8814:	ldrh	r3, [r4, #0]
    8816:	cmp	r3, #47	; 0x2f
    8818:	beq.n	881e <error@@Base+0x28ee>
    881a:	cmp	r3, #46	; 0x2e
    881c:	bne.n	87d6 <error@@Base+0x28a6>
    881e:	movs	r0, #0
    8820:	ldr	r1, [pc, #160]	; (88c4 <error@@Base+0x2994>)
    8822:	add.w	r3, sp, #8256	; 0x2040
    8826:	ldr	r2, [pc, #152]	; (88c0 <error@@Base+0x2990>)
    8828:	adds	r3, #60	; 0x3c
    882a:	add	r1, pc
    882c:	ldr	r2, [r1, r2]
    882e:	ldr	r1, [r2, #0]
    8830:	ldr	r2, [r3, #0]
    8832:	eors	r1, r2
    8834:	bne.n	88b8 <error@@Base+0x2988>
    8836:	add.w	sp, sp, #8320	; 0x2080
    883a:	add	sp, #4
    883c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    8840:	ldr	r5, [pc, #132]	; (88c8 <error@@Base+0x2998>)
    8842:	add	r5, pc
    8844:	add.w	r1, sp, #8320	; 0x2080
    8848:	str	r4, [sp, #4]
    884a:	adds	r1, #36	; 0x24
    884c:	mov	r0, r8
    884e:	mov.w	r3, #4294967295	; 0xffffffff
    8852:	movs	r2, #1
    8854:	ldr	r1, [r1, #0]
    8856:	str	r5, [sp, #0]
    8858:	blx	1c54 <__snprintf_chk@plt>
    885c:	mov.w	r0, #4294967295	; 0xffffffff
    8860:	b.n	8820 <error@@Base+0x28f0>
    8862:	add.w	r3, sp, #8320	; 0x2080
    8866:	ldr	r2, [pc, #100]	; (88cc <error@@Base+0x299c>)
    8868:	mov	r0, r8
    886a:	adds	r3, #36	; 0x24
    886c:	add	r2, pc
    886e:	ldr	r1, [r3, #0]
    8870:	blx	1df8 <snprintf@plt>
    8874:	mov.w	r0, #4294967295	; 0xffffffff
    8878:	b.n	8820 <error@@Base+0x28f0>
    887a:	ldr	r5, [pc, #84]	; (88d0 <error@@Base+0x29a0>)
    887c:	add	r5, pc
    887e:	b.n	8844 <error@@Base+0x2914>
    8880:	ldr	r5, [pc, #80]	; (88d4 <error@@Base+0x29a4>)
    8882:	add	r5, pc
    8884:	b.n	8844 <error@@Base+0x2914>
    8886:	blx	1f04 <__errno_location@plt>
    888a:	ldr	r0, [r0, #0]
    888c:	blx	1938 <strerror@plt+0x4>
    8890:	ldr	r1, [pc, #68]	; (88d8 <error@@Base+0x29a8>)
    8892:	str.w	r9, [sp, #4]
    8896:	movs	r2, #1
    8898:	add	r1, pc
    889a:	str	r1, [sp, #0]
    889c:	add.w	r1, sp, #8320	; 0x2080
    88a0:	adds	r1, #36	; 0x24
    88a2:	mov	r3, r0
    88a4:	mov	r0, r8
    88a6:	str	r3, [sp, #8]
    88a8:	mov.w	r3, #4294967295	; 0xffffffff
    88ac:	ldr	r1, [r1, #0]
    88ae:	blx	1c54 <__snprintf_chk@plt>
    88b2:	mov.w	r0, #4294967295	; 0xffffffff
    88b6:	b.n	8820 <error@@Base+0x28f0>
    88b8:	blx	1cf8 <__stack_chk_fail@plt>
    88bc:	strh	r4, [r0, #48]	; 0x30
    88be:	movs	r1, r0
    88c0:	lsls	r4, r1, #9
    88c2:	movs	r0, r0
    88c4:	strh	r6, [r0, #42]	; 0x2a
    88c6:	movs	r1, r0
    88c8:	ldr	r2, [r3, #48]	; 0x30
    88ca:	movs	r0, r0
    88cc:	ldr	r4, [r3, #44]	; 0x2c
    88ce:	movs	r0, r0
    88d0:	ldr	r4, [r1, #40]	; 0x28
    88d2:	movs	r0, r0
    88d4:	ldr	r2, [r4, #40]	; 0x28
    88d6:	movs	r0, r0
    88d8:	ldr	r0, [r3, #36]	; 0x24
    88da:	movs	r0, r0
    88dc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    88e0:	mov	r6, r3
    88e2:	ldr	r4, [pc, #124]	; (8960 <error@@Base+0x2a30>)
    88e4:	sub	sp, #128	; 0x80
    88e6:	ldr	r3, [pc, #124]	; (8964 <error@@Base+0x2a34>)
    88e8:	add	r7, sp, #16
    88ea:	add	r4, pc
    88ec:	mov	r8, r1
    88ee:	mov	r5, r2
    88f0:	mov	r1, r0
    88f2:	ldr	r3, [r4, r3]
    88f4:	mov	r2, r7
    88f6:	movs	r0, #3
    88f8:	ldr	r3, [r3, #0]
    88fa:	str	r3, [sp, #124]	; 0x7c
    88fc:	mov.w	r3, #0
    8900:	blx	1a90 <__fxstat64@plt>
    8904:	adds	r3, r0, #1
    8906:	beq.n	8934 <error@@Base+0x2a04>
    8908:	ldr	r3, [sp, #152]	; 0x98
    890a:	mov	r1, r7
    890c:	str	r6, [sp, #0]
    890e:	mov	r0, r8
    8910:	str	r3, [sp, #4]
    8912:	ldr	r3, [r5, #8]
    8914:	ldr	r2, [r5, #20]
    8916:	bl	8758 <error@@Base+0x2828>
    891a:	mov	r4, r0
    891c:	ldr	r2, [pc, #72]	; (8968 <error@@Base+0x2a38>)
    891e:	ldr	r3, [pc, #68]	; (8964 <error@@Base+0x2a34>)
    8920:	add	r2, pc
    8922:	ldr	r3, [r2, r3]
    8924:	ldr	r2, [r3, #0]
    8926:	ldr	r3, [sp, #124]	; 0x7c
    8928:	eors	r2, r3
    892a:	bne.n	895c <error@@Base+0x2a2c>
    892c:	mov	r0, r4
    892e:	add	sp, #128	; 0x80
    8930:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    8934:	mov	r4, r0
    8936:	blx	1f04 <__errno_location@plt>
    893a:	ldr	r0, [r0, #0]
    893c:	blx	1938 <strerror@plt+0x4>
    8940:	ldr	r1, [pc, #40]	; (896c <error@@Base+0x2a3c>)
    8942:	movs	r2, #1
    8944:	str.w	r8, [sp, #4]
    8948:	add	r1, pc
    894a:	str	r1, [sp, #0]
    894c:	ldr	r1, [sp, #152]	; 0x98
    894e:	mov	r3, r0
    8950:	mov	r0, r6
    8952:	str	r3, [sp, #8]
    8954:	mov	r3, r4
    8956:	blx	1c54 <__snprintf_chk@plt>
    895a:	b.n	891c <error@@Base+0x29ec>
    895c:	blx	1cf8 <__stack_chk_fail@plt>
    8960:	strh	r6, [r0, #36]	; 0x24
    8962:	movs	r1, r0
    8964:	lsls	r4, r1, #9
    8966:	movs	r0, r0
    8968:	strh	r0, [r2, #34]	; 0x22
    896a:	movs	r1, r0
    896c:	ldr	r4, [r7, #32]
    896e:	movs	r0, r0
    8970:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8974:	sub	sp, #28
    8976:	mov	sl, r1
    8978:	mov	r9, r0
    897a:	movs	r1, #61	; 0x3d
    897c:	mov	r0, r2
    897e:	mov	r6, r2
    8980:	mov	r8, r3
    8982:	str.w	sl, [sp, #20]
    8986:	blx	19e0 <strchr@plt>
    898a:	cmp	r0, #0
    898c:	bne.n	8a2e <error@@Base+0x2afe>
    898e:	ldr.w	r7, [r9]
    8992:	cmp	r7, #0
    8994:	beq.n	8a46 <error@@Base+0x2b16>
    8996:	mov	r0, r6
    8998:	blx	1b6c <strlen@plt>
    899c:	ldr.w	fp, [r7]
    89a0:	mov	sl, r0
    89a2:	cmp.w	fp, #0
    89a6:	beq.n	8aa4 <error@@Base+0x2b74>
    89a8:	movs	r4, #0
    89aa:	mov	r2, sl
    89ac:	mov	r1, r6
    89ae:	mov	r0, fp
    89b0:	lsls	r5, r4, #2
    89b2:	blx	1e2c <strncmp@plt>
    89b6:	cbnz	r0, 89c0 <error@@Base+0x2a90>
    89b8:	ldrb.w	r3, [fp, sl]
    89bc:	cmp	r3, #61	; 0x3d
    89be:	beq.n	8a3e <error@@Base+0x2b0e>
    89c0:	adds	r4, #1
    89c2:	adds	r5, #4
    89c4:	ldr.w	fp, [r7, r4, lsl #2]
    89c8:	cmp.w	fp, #0
    89cc:	bne.n	89aa <error@@Base+0x2a7a>
    89ce:	ldr	r3, [sp, #20]
    89d0:	ldr	r1, [r3, #0]
    89d2:	subs	r3, r1, #1
    89d4:	cmp	r4, r3
    89d6:	itt	cc
    89d8:	addcc	r4, #1
    89da:	lslcc	r4, r4, #2
    89dc:	bcs.n	8a7c <error@@Base+0x2b4c>
    89de:	movs	r3, #0
    89e0:	str	r3, [r7, r4]
    89e2:	mov	r0, r6
    89e4:	blx	1b6c <strlen@plt>
    89e8:	mov	r4, r0
    89ea:	mov	r0, r8
    89ec:	blx	1b6c <strlen@plt>
    89f0:	add	r0, r4
    89f2:	adds	r0, #2
    89f4:	bl	61ac <error@@Base+0x27c>
    89f8:	mov	r9, r0
    89fa:	mov	r0, r6
    89fc:	str.w	r9, [r7, r5]
    8a00:	blx	1b6c <strlen@plt>
    8a04:	ldr	r5, [pc, #172]	; (8ab4 <error@@Base+0x2b84>)
    8a06:	add	r5, pc
    8a08:	mov	r4, r0
    8a0a:	mov	r0, r8
    8a0c:	blx	1b6c <strlen@plt>
    8a10:	mov.w	r3, #4294967295	; 0xffffffff
    8a14:	movs	r2, #1
    8a16:	str.w	r8, [sp, #8]
    8a1a:	str	r6, [sp, #4]
    8a1c:	str	r5, [sp, #0]
    8a1e:	adds	r1, r4, r0
    8a20:	mov	r0, r9
    8a22:	adds	r1, #2
    8a24:	blx	1c54 <__snprintf_chk@plt>
    8a28:	add	sp, #28
    8a2a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8a2e:	ldr	r0, [pc, #136]	; (8ab8 <error@@Base+0x2b88>)
    8a30:	mov	r1, r6
    8a32:	add	r0, pc
    8a34:	add	sp, #28
    8a36:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8a3a:	b.w	5f30 <error@@Base>
    8a3e:	mov	r0, fp
    8a40:	blx	1adc <free@plt+0x4>
    8a44:	b.n	89e2 <error@@Base+0x2ab2>
    8a46:	ldr	r3, [sp, #20]
    8a48:	ldr	r5, [r3, #0]
    8a4a:	cmp	r5, #0
    8a4c:	bne.n	8996 <error@@Base+0x2a66>
    8a4e:	movs	r0, #4
    8a50:	movs	r4, #1
    8a52:	bl	61ac <error@@Base+0x27c>
    8a56:	ldr	r3, [sp, #20]
    8a58:	str.w	r0, [r9]
    8a5c:	str	r5, [r0, #0]
    8a5e:	mov	r0, r6
    8a60:	str	r4, [r3, #0]
    8a62:	blx	1b6c <strlen@plt>
    8a66:	ldr.w	r7, [r9]
    8a6a:	mov	r1, r4
    8a6c:	movs	r4, #4
    8a6e:	ldr.w	fp, [r7]
    8a72:	mov	sl, r0
    8a74:	cmp.w	fp, #0
    8a78:	bne.n	89a8 <error@@Base+0x2a78>
    8a7a:	b.n	8a88 <error@@Base+0x2b58>
    8a7c:	cmp.w	r1, #1000	; 0x3e8
    8a80:	itt	cc
    8a82:	addcc	r4, #1
    8a84:	lslcc	r4, r4, #2
    8a86:	bcs.n	8aaa <error@@Base+0x2b7a>
    8a88:	add.w	fp, r1, #50	; 0x32
    8a8c:	mov	r0, r7
    8a8e:	movs	r2, #4
    8a90:	mov	r1, fp
    8a92:	bl	6218 <error@@Base+0x2e8>
    8a96:	ldr	r3, [sp, #20]
    8a98:	str.w	r0, [r9]
    8a9c:	mov	r7, r0
    8a9e:	str.w	fp, [r3]
    8aa2:	b.n	89de <error@@Base+0x2aae>
    8aa4:	mov	r4, fp
    8aa6:	mov	r5, fp
    8aa8:	b.n	89ce <error@@Base+0x2a9e>
    8aaa:	ldr	r0, [pc, #16]	; (8abc <error@@Base+0x2b8c>)
    8aac:	add	r0, pc
    8aae:	bl	59b8 <fputs@plt+0x3a84>
    8ab2:	nop
    8ab4:	ldr	r2, [r4, #28]
    8ab6:	movs	r0, r0
    8ab8:	ldr	r2, [r5, #20]
    8aba:	movs	r0, r0
    8abc:	ldr	r0, [r3, #16]
    8abe:	movs	r0, r0
    8ac0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8ac4:	sub	sp, #12
    8ac6:	mov	r9, r1
    8ac8:	mov	r8, r2
    8aca:	mov	r6, r0
    8acc:	blx	1b6c <strlen@plt>
    8ad0:	cmp	r0, #0
    8ad2:	beq.n	8b96 <error@@Base+0x2c66>
    8ad4:	mov	r7, r0
    8ad6:	blx	1cb8 <__ctype_b_loc@plt>
    8ada:	ldrb.w	fp, [r6]
    8ade:	ldr	r3, [r0, #0]
    8ae0:	mov	sl, r0
    8ae2:	ldrh.w	r3, [r3, fp, lsl #1]
    8ae6:	and.w	r3, r3, #3072	; 0xc00
    8aea:	cmp	r3, #0
    8aec:	beq.n	8baa <error@@Base+0x2c7a>
    8aee:	blx	1bac <__ctype_tolower_loc@plt>
    8af2:	subs	r1, r6, #1
    8af4:	add	r1, r7
    8af6:	mov	r4, r6
    8af8:	movs	r5, #0
    8afa:	b.n	8b00 <error@@Base+0x2bd0>
    8afc:	ldrb.w	fp, [r4, #1]!
    8b00:	ldr	r3, [r0, #0]
    8b02:	ldrb.w	r3, [r3, fp, lsl #2]
    8b06:	cmp.w	r9, #0
    8b0a:	beq.n	8b0e <error@@Base+0x2bde>
    8b0c:	strb	r3, [r4, #0]
    8b0e:	cmp	r5, #46	; 0x2e
    8b10:	it	eq
    8b12:	cmpeq	r3, #46	; 0x2e
    8b14:	sub.w	r2, r3, #45	; 0x2d
    8b18:	mov	r5, r3
    8b1a:	beq.n	8b62 <error@@Base+0x2c32>
    8b1c:	cmp	r2, #1
    8b1e:	bls.n	8b3c <error@@Base+0x2c0c>
    8b20:	ldr.w	r2, [sl]
    8b24:	subs.w	ip, r3, #95	; 0x5f
    8b28:	it	ne
    8b2a:	movne.w	ip, #1
    8b2e:	ldrh.w	r3, [r2, r3, lsl #1]
    8b32:	eor.w	r3, r3, #8
    8b36:	ands.w	r3, ip, r3, lsr #3
    8b3a:	bne.n	8bb8 <error@@Base+0x2c88>
    8b3c:	cmp	r1, r4
    8b3e:	bne.n	8afc <error@@Base+0x2bcc>
    8b40:	subs	r7, #1
    8b42:	movs	r0, #1
    8b44:	ldrb	r3, [r6, r7]
    8b46:	cmp	r3, #46	; 0x2e
    8b48:	itt	eq
    8b4a:	moveq	r3, #0
    8b4c:	strbeq	r3, [r6, r7]
    8b4e:	cmp.w	r8, #0
    8b52:	beq.n	8b5c <error@@Base+0x2c2c>
    8b54:	movs	r0, #1
    8b56:	movs	r3, #0
    8b58:	str.w	r3, [r8]
    8b5c:	add	sp, #12
    8b5e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8b62:	ldr	r4, [pc, #100]	; (8bc8 <error@@Base+0x2c98>)
    8b64:	mov.w	r3, #256	; 0x100
    8b68:	ldr	r0, [pc, #96]	; (8bcc <error@@Base+0x2c9c>)
    8b6a:	add	r4, pc
    8b6c:	add	r0, pc
    8b6e:	adds	r0, #12
    8b70:	mov	r1, r3
    8b72:	movs	r2, #1
    8b74:	str	r6, [sp, #4]
    8b76:	str	r4, [sp, #0]
    8b78:	blx	1c54 <__snprintf_chk@plt>
    8b7c:	mov	r0, r8
    8b7e:	cmp.w	r8, #0
    8b82:	beq.n	8b5c <error@@Base+0x2c2c>
    8b84:	ldr	r3, [pc, #72]	; (8bd0 <error@@Base+0x2ca0>)
    8b86:	movs	r0, #0
    8b88:	add	r3, pc
    8b8a:	adds	r3, #12
    8b8c:	str.w	r3, [r8]
    8b90:	add	sp, #12
    8b92:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8b96:	ldr	r0, [pc, #60]	; (8bd4 <error@@Base+0x2ca4>)
    8b98:	mov.w	r2, #256	; 0x100
    8b9c:	ldr	r1, [pc, #56]	; (8bd8 <error@@Base+0x2ca8>)
    8b9e:	add	r0, pc
    8ba0:	add	r1, pc
    8ba2:	adds	r0, #12
    8ba4:	bl	c840 <setlogin@@Base+0xa38>
    8ba8:	b.n	8b7c <error@@Base+0x2c4c>
    8baa:	ldr	r4, [pc, #48]	; (8bdc <error@@Base+0x2cac>)
    8bac:	mov.w	r3, #256	; 0x100
    8bb0:	ldr	r0, [pc, #44]	; (8be0 <error@@Base+0x2cb0>)
    8bb2:	add	r4, pc
    8bb4:	add	r0, pc
    8bb6:	b.n	8b6e <error@@Base+0x2c3e>
    8bb8:	ldr	r4, [pc, #40]	; (8be4 <error@@Base+0x2cb4>)
    8bba:	mov.w	r3, #256	; 0x100
    8bbe:	ldr	r0, [pc, #40]	; (8be8 <error@@Base+0x2cb8>)
    8bc0:	add	r4, pc
    8bc2:	add	r0, pc
    8bc4:	b.n	8b6e <error@@Base+0x2c3e>
    8bc6:	nop
    8bc8:	ldr	r6, [r1, #12]
    8bca:	movs	r0, r0
    8bcc:	strh	r4, [r2, #44]	; 0x2c
    8bce:	movs	r1, r0
    8bd0:	strh	r0, [r7, #42]	; 0x2a
    8bd2:	movs	r1, r0
    8bd4:	strh	r2, [r4, #42]	; 0x2a
    8bd6:	movs	r1, r0
    8bd8:	ldr	r0, [r2, #4]
    8bda:	movs	r0, r0
    8bdc:	ldr	r2, [r2, #4]
    8bde:	movs	r0, r0
    8be0:	strh	r4, [r1, #42]	; 0x2a
    8be2:	movs	r1, r0
    8be4:	ldr	r0, [r6, #8]
    8be6:	movs	r0, r0
    8be8:	strh	r6, [r7, #40]	; 0x28
    8bea:	movs	r1, r0
    8bec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8bf0:	mov	r6, r2
    8bf2:	ldr	r2, [pc, #484]	; (8dd8 <error@@Base+0x2ea8>)
    8bf4:	mov	r7, r3
    8bf6:	ldr	r3, [pc, #484]	; (8ddc <error@@Base+0x2eac>)
    8bf8:	sub	sp, #28
    8bfa:	add	r2, pc
    8bfc:	mov	r4, r1
    8bfe:	ldr	r3, [r2, r3]
    8c00:	ldr	r3, [r3, #0]
    8c02:	str	r3, [sp, #20]
    8c04:	mov.w	r3, #0
    8c08:	str	r0, [sp, #0]
    8c0a:	blx	1b6c <strlen@plt>
    8c0e:	ldr	r1, [sp, #0]
    8c10:	ldr.w	r9, [sp, #64]	; 0x40
    8c14:	mov	r5, r0
    8c16:	mov	r0, r4
    8c18:	mov	r2, r5
    8c1a:	blx	1e2c <strncmp@plt>
    8c1e:	ldr.w	sl, [sp, #68]	; 0x44
    8c22:	cbnz	r0, 8c2c <error@@Base+0x2cfc>
    8c24:	ldrb	r3, [r4, r5]
    8c26:	adds	r2, r4, r5
    8c28:	cmp	r3, #58	; 0x3a
    8c2a:	beq.n	8c4a <error@@Base+0x2d1a>
    8c2c:	mov.w	r8, #1
    8c30:	ldr	r2, [pc, #428]	; (8de0 <error@@Base+0x2eb0>)
    8c32:	ldr	r3, [pc, #424]	; (8ddc <error@@Base+0x2eac>)
    8c34:	add	r2, pc
    8c36:	ldr	r3, [r2, r3]
    8c38:	ldr	r2, [r3, #0]
    8c3a:	ldr	r3, [sp, #20]
    8c3c:	eors	r2, r3
    8c3e:	bne.w	8dd2 <error@@Base+0x2ea2>
    8c42:	mov	r0, r8
    8c44:	add	sp, #28
    8c46:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8c4a:	ldrb	r3, [r2, #1]
    8c4c:	cmp	r3, #47	; 0x2f
    8c4e:	bne.n	8c2c <error@@Base+0x2cfc>
    8c50:	ldrb.w	r8, [r2, #2]
    8c54:	subs.w	r8, r8, #47	; 0x2f
    8c58:	bne.n	8c2c <error@@Base+0x2cfc>
    8c5a:	adds	r0, r5, #3
    8c5c:	add	r0, r4
    8c5e:	cbz	r6, 8c64 <error@@Base+0x2d34>
    8c60:	str.w	r8, [r6]
    8c64:	cbz	r7, 8c6a <error@@Base+0x2d3a>
    8c66:	movs	r3, #0
    8c68:	str	r3, [r7, #0]
    8c6a:	cmp.w	r9, #0
    8c6e:	beq.n	8c78 <error@@Base+0x2d48>
    8c70:	mov.w	r3, #4294967295	; 0xffffffff
    8c74:	str.w	r3, [r9]
    8c78:	cmp.w	sl, #0
    8c7c:	beq.n	8c84 <error@@Base+0x2d54>
    8c7e:	movs	r3, #0
    8c80:	str.w	r3, [sl]
    8c84:	bl	6258 <error@@Base+0x328>
    8c88:	movs	r1, #64	; 0x40
    8c8a:	mov	fp, r0
    8c8c:	str	r0, [sp, #16]
    8c8e:	blx	19e0 <strchr@plt>
    8c92:	mov	r5, r0
    8c94:	cbz	r0, 8cc2 <error@@Base+0x2d92>
    8c96:	movs	r3, #0
    8c98:	strb	r3, [r0, #0]
    8c9a:	ldr	r4, [sp, #16]
    8c9c:	movs	r1, #59	; 0x3b
    8c9e:	mov	r0, r4
    8ca0:	blx	19e0 <strchr@plt>
    8ca4:	cbz	r0, 8cac <error@@Base+0x2d7c>
    8ca6:	movs	r3, #0
    8ca8:	strb	r3, [r0, #0]
    8caa:	ldr	r4, [sp, #16]
    8cac:	ldrb	r3, [r4, #0]
    8cae:	cmp	r3, #0
    8cb0:	beq.n	8d3e <error@@Base+0x2e0e>
    8cb2:	mov	r0, r4
    8cb4:	bl	6688 <error@@Base+0x758>
    8cb8:	cmp	r0, #0
    8cba:	beq.n	8d3e <error@@Base+0x2e0e>
    8cbc:	adds	r3, r5, #1
    8cbe:	mov	r5, r0
    8cc0:	str	r3, [sp, #16]
    8cc2:	add.w	r1, sp, #15
    8cc6:	add	r0, sp, #16
    8cc8:	bl	6dc0 <error@@Base+0xe90>
    8ccc:	mov	r3, r0
    8cce:	cmp	r0, #0
    8cd0:	beq.n	8d90 <error@@Base+0x2e60>
    8cd2:	ldrb	r4, [r0, #0]
    8cd4:	cmp	r4, #0
    8cd6:	beq.n	8d66 <error@@Base+0x2e36>
    8cd8:	bl	6e34 <error@@Base+0xf04>
    8cdc:	bl	6258 <error@@Base+0x328>
    8ce0:	movs	r2, #0
    8ce2:	mov	r1, r2
    8ce4:	str	r0, [sp, #0]
    8ce6:	bl	8ac0 <error@@Base+0x2b90>
    8cea:	ldr	r3, [sp, #0]
    8cec:	cmp	r0, #0
    8cee:	beq.n	8d98 <error@@Base+0x2e68>
    8cf0:	ldr	r4, [sp, #16]
    8cf2:	cmp	r4, #0
    8cf4:	beq.n	8d70 <error@@Base+0x2e40>
    8cf6:	ldrb	r2, [r4, #0]
    8cf8:	cbz	r2, 8d6e <error@@Base+0x2e3e>
    8cfa:	ldrb.w	r2, [sp, #15]
    8cfe:	cmp	r2, #58	; 0x3a
    8d00:	it	ne
    8d02:	movne.w	r2, #4294967295	; 0xffffffff
    8d06:	beq.n	8da0 <error@@Base+0x2e70>
    8d08:	mov	r0, r4
    8d0a:	strd	r3, r2, [sp]
    8d0e:	bl	6688 <error@@Base+0x758>
    8d12:	ldrd	r3, r2, [sp]
    8d16:	mov	r4, r0
    8d18:	cbz	r0, 8d8a <error@@Base+0x2e5a>
    8d1a:	cbz	r6, 8d20 <error@@Base+0x2df0>
    8d1c:	str	r5, [r6, #0]
    8d1e:	movs	r5, #0
    8d20:	cbz	r7, 8d26 <error@@Base+0x2df6>
    8d22:	str	r3, [r7, #0]
    8d24:	movs	r3, #0
    8d26:	cmp.w	r9, #0
    8d2a:	beq.n	8d30 <error@@Base+0x2e00>
    8d2c:	str.w	r2, [r9]
    8d30:	cmp.w	sl, #0
    8d34:	beq.n	8d48 <error@@Base+0x2e18>
    8d36:	str.w	r4, [sl]
    8d3a:	movs	r4, #0
    8d3c:	b.n	8d48 <error@@Base+0x2e18>
    8d3e:	movs	r4, #0
    8d40:	mov.w	r8, #4294967295	; 0xffffffff
    8d44:	mov	r3, r4
    8d46:	mov	r5, r4
    8d48:	mov	r0, fp
    8d4a:	str	r3, [sp, #0]
    8d4c:	blx	1adc <free@plt+0x4>
    8d50:	mov	r0, r5
    8d52:	blx	1adc <free@plt+0x4>
    8d56:	ldr	r3, [sp, #0]
    8d58:	mov	r0, r3
    8d5a:	blx	1adc <free@plt+0x4>
    8d5e:	mov	r0, r4
    8d60:	blx	1adc <free@plt+0x4>
    8d64:	b.n	8c30 <error@@Base+0x2d00>
    8d66:	mov.w	r8, #4294967295	; 0xffffffff
    8d6a:	mov	r3, r4
    8d6c:	b.n	8d48 <error@@Base+0x2e18>
    8d6e:	mov	r4, r2
    8d70:	mov.w	r2, #4294967295	; 0xffffffff
    8d74:	b.n	8d1a <error@@Base+0x2dea>
    8d76:	strd	r3, r0, [sp]
    8d7a:	mov	r0, r4
    8d7c:	bl	6a84 <error@@Base+0xb54>
    8d80:	ldrd	r3, r1, [sp]
    8d84:	subs	r2, r0, #0
    8d86:	bgt.n	8dce <error@@Base+0x2e9e>
    8d88:	mov	r4, r1
    8d8a:	mov.w	r8, #4294967295	; 0xffffffff
    8d8e:	b.n	8d48 <error@@Base+0x2e18>
    8d90:	mov	r4, r0
    8d92:	mov.w	r8, #4294967295	; 0xffffffff
    8d96:	b.n	8d48 <error@@Base+0x2e18>
    8d98:	mov	r4, r0
    8d9a:	mov.w	r8, #4294967295	; 0xffffffff
    8d9e:	b.n	8d48 <error@@Base+0x2e18>
    8da0:	movs	r1, #47	; 0x2f
    8da2:	mov	r0, r4
    8da4:	blx	19e0 <strchr@plt>
    8da8:	ldr	r3, [sp, #0]
    8daa:	cmp	r0, #0
    8dac:	beq.n	8d76 <error@@Base+0x2e46>
    8dae:	movs	r4, #0
    8db0:	strb	r4, [r0, #0]
    8db2:	str	r0, [sp, #0]
    8db4:	ldr	r0, [sp, #16]
    8db6:	str	r3, [sp, #4]
    8db8:	bl	6a84 <error@@Base+0xb54>
    8dbc:	ldr	r3, [sp, #4]
    8dbe:	subs	r2, r0, #0
    8dc0:	ble.n	8d8a <error@@Base+0x2e5a>
    8dc2:	ldr	r1, [sp, #0]
    8dc4:	adds	r4, r1, #1
    8dc6:	str	r4, [sp, #16]
    8dc8:	ldrb	r1, [r1, #1]
    8dca:	cmp	r1, #0
    8dcc:	bne.n	8d08 <error@@Base+0x2dd8>
    8dce:	mov	r4, r1
    8dd0:	b.n	8d1a <error@@Base+0x2dea>
    8dd2:	blx	1cf8 <__stack_chk_fail@plt>
    8dd6:	nop
    8dd8:	strh	r6, [r6, #10]
    8dda:	movs	r1, r0
    8ddc:	lsls	r4, r1, #9
    8dde:	movs	r0, r0
    8de0:	strh	r4, [r7, #8]
    8de2:	movs	r1, r0
    8de4:	push	{r3, r4, r5, lr}
    8de6:	ldrb	r4, [r0, #0]
    8de8:	cbz	r4, 8e12 <error@@Base+0x2ee2>
    8dea:	mov	r5, r0
    8dec:	blx	1cb8 <__ctype_b_loc@plt>
    8df0:	ldr	r2, [r0, #0]
    8df2:	ldrh.w	r3, [r2, r4, lsl #1]
    8df6:	subs	r4, #95	; 0x5f
    8df8:	eor.w	r3, r3, #8
    8dfc:	it	ne
    8dfe:	movne	r4, #1
    8e00:	ands.w	r3, r4, r3, lsr #3
    8e04:	bne.n	8e12 <error@@Base+0x2ee2>
    8e06:	ldrb.w	r4, [r5, #1]!
    8e0a:	cmp	r4, #0
    8e0c:	bne.n	8df2 <error@@Base+0x2ec2>
    8e0e:	movs	r0, #1
    8e10:	pop	{r3, r4, r5, pc}
    8e12:	movs	r0, #0
    8e14:	pop	{r3, r4, r5, pc}
    8e16:	nop
    8e18:	ldr	r2, [pc, #96]	; (8e7c <error@@Base+0x2f4c>)
    8e1a:	ldr	r3, [pc, #100]	; (8e80 <error@@Base+0x2f50>)
    8e1c:	add	r2, pc
    8e1e:	push	{r4, r6, r7, lr}
    8e20:	sub	sp, #24
    8e22:	ldr	r3, [r2, r3]
    8e24:	movs	r2, #0
    8e26:	ldr	r3, [r3, #0]
    8e28:	str	r3, [sp, #20]
    8e2a:	mov.w	r3, #0
    8e2e:	str	r2, [sp, #16]
    8e30:	cbz	r0, 8e72 <error@@Base+0x2f42>
    8e32:	ldrb	r3, [r0, #0]
    8e34:	cbnz	r3, 8e50 <error@@Base+0x2f20>
    8e36:	ldr	r3, [pc, #76]	; (8e84 <error@@Base+0x2f54>)
    8e38:	add	r3, pc
    8e3a:	ldr	r1, [pc, #76]	; (8e88 <error@@Base+0x2f58>)
    8e3c:	ldr	r2, [pc, #64]	; (8e80 <error@@Base+0x2f50>)
    8e3e:	add	r1, pc
    8e40:	ldr	r2, [r1, r2]
    8e42:	ldr	r1, [r2, #0]
    8e44:	ldr	r2, [sp, #20]
    8e46:	eors	r1, r2
    8e48:	bne.n	8e78 <error@@Base+0x2f48>
    8e4a:	mov	r0, r3
    8e4c:	add	sp, #24
    8e4e:	pop	{r4, r6, r7, pc}
    8e50:	add	r3, sp, #16
    8e52:	mvn.w	r6, #2147483648	; 0x80000000
    8e56:	str	r3, [sp, #8]
    8e58:	movs	r7, #0
    8e5a:	movs	r3, #0
    8e5c:	movs	r2, #0
    8e5e:	strd	r6, r7, [sp]
    8e62:	mov	r4, r1
    8e64:	bl	c894 <setlogin@@Base+0xa8c>
    8e68:	ldr	r3, [sp, #16]
    8e6a:	cmp	r3, #0
    8e6c:	bne.n	8e3a <error@@Base+0x2f0a>
    8e6e:	str	r0, [r4, #0]
    8e70:	b.n	8e3a <error@@Base+0x2f0a>
    8e72:	ldr	r3, [pc, #24]	; (8e8c <error@@Base+0x2f5c>)
    8e74:	add	r3, pc
    8e76:	b.n	8e3a <error@@Base+0x2f0a>
    8e78:	blx	1cf8 <__stack_chk_fail@plt>
    8e7c:	ldrb	r4, [r2, #29]
    8e7e:	movs	r1, r0
    8e80:	lsls	r4, r1, #9
    8e82:	movs	r0, r0
    8e84:	str	r4, [r5, #100]	; 0x64
    8e86:	movs	r0, r0
    8e88:	ldrb	r2, [r6, #28]
    8e8a:	movs	r1, r0
    8e8c:	str	r0, [r6, #96]	; 0x60
    8e8e:	movs	r0, r0
    8e90:	ldr	r2, [pc, #256]	; (8f94 <error@@Base+0x3064>)
    8e92:	ldr	r3, [pc, #260]	; (8f98 <error@@Base+0x3068>)
    8e94:	add	r2, pc
    8e96:	push	{r4, r5, r6, r7, lr}
    8e98:	sub	sp, #116	; 0x74
    8e9a:	ldr	r3, [r2, r3]
    8e9c:	movs	r2, #0
    8e9e:	mov	r5, r1
    8ea0:	mov	r4, r0
    8ea2:	ldr	r3, [r3, #0]
    8ea4:	str	r3, [sp, #108]	; 0x6c
    8ea6:	mov.w	r3, #0
    8eaa:	movs	r3, #0
    8eac:	strd	r2, r3, [r1]
    8eb0:	blx	1b6c <strlen@plt>
    8eb4:	cmp	r0, #12
    8eb6:	beq.n	8ed8 <error@@Base+0x2fa8>
    8eb8:	cmp	r0, #14
    8eba:	beq.n	8f5a <error@@Base+0x302a>
    8ebc:	cmp	r0, #8
    8ebe:	beq.n	8f36 <error@@Base+0x3006>
    8ec0:	mvn.w	r0, #3
    8ec4:	ldr	r2, [pc, #212]	; (8f9c <error@@Base+0x306c>)
    8ec6:	ldr	r3, [pc, #208]	; (8f98 <error@@Base+0x3068>)
    8ec8:	add	r2, pc
    8eca:	ldr	r3, [r2, r3]
    8ecc:	ldr	r2, [r3, #0]
    8ece:	ldr	r3, [sp, #108]	; 0x6c
    8ed0:	eors	r2, r3
    8ed2:	bne.n	8f90 <error@@Base+0x3060>
    8ed4:	add	sp, #116	; 0x74
    8ed6:	pop	{r4, r5, r6, r7, pc}
    8ed8:	ldr	r2, [pc, #196]	; (8fa0 <error@@Base+0x3070>)
    8eda:	add	r6, sp, #76	; 0x4c
    8edc:	movs	r3, #32
    8ede:	str	r4, [sp, #4]
    8ee0:	add	r2, pc
    8ee2:	mov	r0, r6
    8ee4:	str	r2, [sp, #0]
    8ee6:	mov	r1, r3
    8ee8:	add.w	r2, r4, #10
    8eec:	str	r2, [sp, #20]
    8eee:	add.w	r2, r4, #8
    8ef2:	str	r2, [sp, #16]
    8ef4:	adds	r2, r4, #6
    8ef6:	adds	r4, #4
    8ef8:	strd	r4, r2, [sp, #8]
    8efc:	movs	r2, #1
    8efe:	blx	1c54 <__snprintf_chk@plt>
    8f02:	ldr	r7, [pc, #160]	; (8fa4 <error@@Base+0x3074>)
    8f04:	add	r7, pc
    8f06:	add	r4, sp, #32
    8f08:	movs	r2, #44	; 0x2c
    8f0a:	movs	r1, #0
    8f0c:	mov	r0, r4
    8f0e:	blx	1a38 <memset@plt>
    8f12:	mov	r2, r4
    8f14:	mov	r1, r7
    8f16:	mov	r0, r6
    8f18:	blx	19c8 <strptime@plt>
    8f1c:	cmp	r0, #0
    8f1e:	beq.n	8ec0 <error@@Base+0x2f90>
    8f20:	mov	r0, r4
    8f22:	blx	1a2c <mktime@plt>
    8f26:	cmp	r0, #0
    8f28:	blt.n	8ec0 <error@@Base+0x2f90>
    8f2a:	asrs	r3, r0, #31
    8f2c:	mov	r2, r0
    8f2e:	movs	r0, #0
    8f30:	strd	r2, r3, [r5]
    8f34:	b.n	8ec4 <error@@Base+0x2f94>
    8f36:	ldr	r2, [pc, #112]	; (8fa8 <error@@Base+0x3078>)
    8f38:	add	r6, sp, #76	; 0x4c
    8f3a:	movs	r3, #32
    8f3c:	ldr	r7, [pc, #108]	; (8fac <error@@Base+0x307c>)
    8f3e:	add	r2, pc
    8f40:	str	r4, [sp, #4]
    8f42:	str	r2, [sp, #0]
    8f44:	mov	r0, r6
    8f46:	adds	r2, r4, #6
    8f48:	mov	r1, r3
    8f4a:	adds	r4, #4
    8f4c:	strd	r4, r2, [sp, #8]
    8f50:	movs	r2, #1
    8f52:	add	r7, pc
    8f54:	blx	1c54 <__snprintf_chk@plt>
    8f58:	b.n	8f06 <error@@Base+0x2fd6>
    8f5a:	ldr	r2, [pc, #84]	; (8fb0 <error@@Base+0x3080>)
    8f5c:	add	r6, sp, #76	; 0x4c
    8f5e:	movs	r3, #32
    8f60:	ldr	r7, [pc, #80]	; (8fb4 <error@@Base+0x3084>)
    8f62:	add	r2, pc
    8f64:	str	r4, [sp, #4]
    8f66:	str	r2, [sp, #0]
    8f68:	mov	r0, r6
    8f6a:	add.w	r2, r4, #12
    8f6e:	mov	r1, r3
    8f70:	str	r2, [sp, #24]
    8f72:	add.w	r2, r4, #10
    8f76:	str	r2, [sp, #20]
    8f78:	add.w	r2, r4, #8
    8f7c:	str	r2, [sp, #16]
    8f7e:	adds	r2, r4, #6
    8f80:	adds	r4, #4
    8f82:	strd	r4, r2, [sp, #8]
    8f86:	movs	r2, #1
    8f88:	add	r7, pc
    8f8a:	blx	1c54 <__snprintf_chk@plt>
    8f8e:	b.n	8f06 <error@@Base+0x2fd6>
    8f90:	blx	1cf8 <__stack_chk_fail@plt>
    8f94:	ldrb	r4, [r3, #27]
    8f96:	movs	r1, r0
    8f98:	lsls	r4, r1, #9
    8f9a:	movs	r0, r0
    8f9c:	ldrb	r0, [r5, #26]
    8f9e:	movs	r1, r0
    8fa0:	str	r4, [r1, #96]	; 0x60
    8fa2:	movs	r0, r0
    8fa4:	str	r4, [r6, #88]	; 0x58
    8fa6:	movs	r0, r0
    8fa8:	str	r6, [r3, #88]	; 0x58
    8faa:	movs	r0, r0
    8fac:	str	r2, [r3, #84]	; 0x54
    8fae:	movs	r0, r0
    8fb0:	str	r6, [r4, #88]	; 0x58
    8fb2:	movs	r0, r0
    8fb4:	str	r0, [r0, #84]	; 0x54
    8fb6:	movs	r0, r0
    8fb8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    8fbc:	mov	r6, r2
    8fbe:	ldr	r2, [pc, #96]	; (9020 <error@@Base+0x30f0>)
    8fc0:	mov	r7, r3
    8fc2:	ldr	r3, [pc, #96]	; (9024 <error@@Base+0x30f4>)
    8fc4:	sub	sp, #68	; 0x44
    8fc6:	add	r2, pc
    8fc8:	mov.w	r9, #0
    8fcc:	cmp	r9, r1
    8fce:	mvn.w	r8, #2147483648	; 0x80000000
    8fd2:	ldr	r3, [r2, r3]
    8fd4:	it	eq
    8fd6:	cmpeq	r8, r0
    8fd8:	ldr	r3, [r3, #0]
    8fda:	str	r3, [sp, #60]	; 0x3c
    8fdc:	mov.w	r3, #0
    8fe0:	add	r3, sp, #16
    8fe2:	it	cs
    8fe4:	movcs	r4, r0
    8fe6:	add	r0, sp, #12
    8fe8:	mov	r1, r3
    8fea:	it	cc
    8fec:	movcc	r4, r8
    8fee:	str	r3, [sp, #4]
    8ff0:	str	r4, [sp, #12]
    8ff2:	blx	1950 <localtime_r@plt>
    8ff6:	ldr	r2, [pc, #48]	; (9028 <error@@Base+0x30f8>)
    8ff8:	mov	r1, r7
    8ffa:	ldr	r3, [sp, #4]
    8ffc:	mov	r0, r6
    8ffe:	add	r2, pc
    9000:	blx	1d70 <strftime@plt>
    9004:	ldr	r2, [pc, #36]	; (902c <error@@Base+0x30fc>)
    9006:	ldr	r3, [pc, #28]	; (9024 <error@@Base+0x30f4>)
    9008:	add	r2, pc
    900a:	ldr	r3, [r2, r3]
    900c:	ldr	r2, [r3, #0]
    900e:	ldr	r3, [sp, #60]	; 0x3c
    9010:	eors	r2, r3
    9012:	bne.n	901a <error@@Base+0x30ea>
    9014:	add	sp, #68	; 0x44
    9016:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    901a:	blx	1cf8 <__stack_chk_fail@plt>
    901e:	nop
    9020:	ldrb	r2, [r5, #22]
    9022:	movs	r1, r0
    9024:	lsls	r4, r1, #9
    9026:	movs	r0, r0
    9028:	str	r2, [r1, #76]	; 0x4c
    902a:	movs	r0, r0
    902c:	ldrb	r0, [r5, #21]
    902e:	movs	r1, r0
    9030:	ldrb	r0, [r0, #0]
    9032:	sub.w	r0, r0, #47	; 0x2f
    9036:	clz	r0, r0
    903a:	lsrs	r0, r0, #5
    903c:	bx	lr
    903e:	nop
    9040:	ldr	r2, [r0, #0]
    9042:	ldrb	r3, [r2, #0]
    9044:	cmp	r3, #9
    9046:	it	ne
    9048:	cmpne	r3, #32
    904a:	bne.n	9058 <error@@Base+0x3128>
    904c:	ldrb.w	r3, [r2, #1]!
    9050:	cmp	r3, #9
    9052:	it	ne
    9054:	cmpne	r3, #32
    9056:	beq.n	904c <error@@Base+0x311c>
    9058:	str	r2, [r0, #0]
    905a:	bx	lr
    905c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9060:	mov	r6, r2
    9062:	mov	r4, r1
    9064:	mov	r8, r0
    9066:	blx	1b6c <strlen@plt>
    906a:	ldr	r5, [r6, #0]
    906c:	mov	r7, r0
    906e:	cbz	r4, 9080 <error@@Base+0x3150>
    9070:	ldr	r1, [pc, #48]	; (90a4 <error@@Base+0x3174>)
    9072:	movs	r2, #3
    9074:	mov	r0, r5
    9076:	movs	r4, #0
    9078:	add	r1, pc
    907a:	blx	1cac <strncasecmp@plt>
    907e:	cbz	r0, 9098 <error@@Base+0x3168>
    9080:	mov	r1, r8
    9082:	mov	r2, r7
    9084:	mov	r0, r5
    9086:	blx	1cac <strncasecmp@plt>
    908a:	cbnz	r0, 909e <error@@Base+0x316e>
    908c:	eor.w	r0, r4, #1
    9090:	add	r5, r7
    9092:	str	r5, [r6, #0]
    9094:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9098:	adds	r5, #3
    909a:	movs	r4, #1
    909c:	b.n	9080 <error@@Base+0x3150>
    909e:	mov.w	r0, #4294967295	; 0xffffffff
    90a2:	b.n	9094 <error@@Base+0x3164>
    90a4:	str	r0, [r6, #72]	; 0x48
    90a6:	movs	r0, r0
    90a8:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    90ac:	mov	r7, r0
    90ae:	ldr	r5, [r0, #0]
    90b0:	movs	r0, #0
    90b2:	str	r0, [r1, #0]
    90b4:	mov	r8, r1
    90b6:	ldrb	r3, [r5, #0]
    90b8:	cmp	r3, #34	; 0x22
    90ba:	bne.n	911e <error@@Base+0x31ee>
    90bc:	adds	r4, r5, #1
    90be:	mov	r0, r4
    90c0:	blx	1b6c <strlen@plt>
    90c4:	adds	r0, #1
    90c6:	blx	1ce0 <malloc@plt>
    90ca:	cmp	r0, #0
    90cc:	beq.n	9138 <error@@Base+0x3208>
    90ce:	ldrb	r5, [r5, #1]
    90d0:	cmp	r5, #34	; 0x22
    90d2:	it	ne
    90d4:	cmpne	r5, #0
    90d6:	ittte	ne
    90d8:	addne.w	r2, r0, #4294967295	; 0xffffffff
    90dc:	rsbne	r1, r0, #2
    90e0:	movne	r6, #1
    90e2:	moveq	r6, #0
    90e4:	bne.n	9114 <error@@Base+0x31e4>
    90e6:	cbz	r5, 9128 <error@@Base+0x31f8>
    90e8:	adds	r4, #1
    90ea:	movs	r3, #0
    90ec:	str	r4, [r7, #0]
    90ee:	strb	r3, [r0, r6]
    90f0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    90f4:	ldrb	r5, [r4, #1]
    90f6:	cmp	r5, #34	; 0x22
    90f8:	it	eq
    90fa:	addeq	r4, #2
    90fc:	beq.n	9104 <error@@Base+0x31d4>
    90fe:	ldrb	r5, [r4, #0]
    9100:	mov	r3, r4
    9102:	mov	r4, r6
    9104:	adds	r6, r1, r2
    9106:	strb.w	r5, [r2, #1]!
    910a:	ldrb	r5, [r3, #1]
    910c:	cmp	r5, #0
    910e:	it	ne
    9110:	cmpne	r5, #34	; 0x22
    9112:	beq.n	90e6 <error@@Base+0x31b6>
    9114:	adds	r3, r4, #1
    9116:	cmp	r5, #92	; 0x5c
    9118:	mov	r6, r3
    911a:	bne.n	90fe <error@@Base+0x31ce>
    911c:	b.n	90f4 <error@@Base+0x31c4>
    911e:	ldr	r3, [pc, #36]	; (9144 <error@@Base+0x3214>)
    9120:	add	r3, pc
    9122:	str	r3, [r1, #0]
    9124:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9128:	ldr	r3, [pc, #28]	; (9148 <error@@Base+0x3218>)
    912a:	add	r3, pc
    912c:	str.w	r3, [r8]
    9130:	blx	1adc <free@plt+0x4>
    9134:	mov	r0, r5
    9136:	b.n	90f0 <error@@Base+0x31c0>
    9138:	ldr	r3, [pc, #16]	; (914c <error@@Base+0x321c>)
    913a:	add	r3, pc
    913c:	str.w	r3, [r8]
    9140:	b.n	90f0 <error@@Base+0x31c0>
    9142:	nop
    9144:	str	r4, [r1, #64]	; 0x40
    9146:	movs	r0, r0
    9148:	str	r2, [r6, #64]	; 0x40
    914a:	movs	r0, r0
    914c:	str	r6, [r0, #64]	; 0x40
    914e:	movs	r0, r0
    9150:	push	{r4, r5, r6, lr}
    9152:	sub	sp, #8
    9154:	mov	r5, r0
    9156:	mov	r0, r1
    9158:	str	r1, [sp, #4]
    915a:	blx	1b6c <strlen@plt>
    915e:	ldr	r6, [r5, #0]
    9160:	ldr	r1, [sp, #4]
    9162:	mov	r4, r0
    9164:	mov	r0, r6
    9166:	mov	r2, r4
    9168:	blx	1cac <strncasecmp@plt>
    916c:	cbnz	r0, 9178 <error@@Base+0x3248>
    916e:	ldrb	r3, [r6, r4]
    9170:	cmp	r3, #61	; 0x3d
    9172:	beq.n	917e <error@@Base+0x324e>
    9174:	add	sp, #8
    9176:	pop	{r4, r5, r6, pc}
    9178:	movs	r0, #0
    917a:	add	sp, #8
    917c:	pop	{r4, r5, r6, pc}
    917e:	adds	r4, #1
    9180:	movs	r0, #1
    9182:	add	r4, r6
    9184:	str	r4, [r5, #0]
    9186:	add	sp, #8
    9188:	pop	{r4, r5, r6, pc}
    918a:	nop
    918c:	push	{r4, r5, r6, lr}
    918e:	sub	sp, #296	; 0x128
    9190:	add	r3, sp, #16
    9192:	ldr.w	ip, [pc, #132]	; 9218 <error@@Base+0x32e8>
    9196:	mov	r5, r0
    9198:	add	r6, sp, #12
    919a:	mov	r0, r3
    919c:	ldr	r3, [pc, #124]	; (921c <error@@Base+0x32ec>)
    919e:	add	ip, pc
    91a0:	mov	r4, r1
    91a2:	movs	r2, #136	; 0x88
    91a4:	movs	r1, #0
    91a6:	ldr.w	r3, [ip, r3]
    91aa:	ldr	r3, [r3, #0]
    91ac:	str	r3, [sp, #292]	; 0x124
    91ae:	mov.w	r3, #0
    91b2:	blx	1a38 <memset@plt>
    91b6:	str	r4, [r6, #0]
    91b8:	blx	1d58 <sigfillset@plt>
    91bc:	cmp	r5, #14
    91be:	add	r2, sp, #152	; 0x98
    91c0:	mov	r1, r6
    91c2:	mov	r0, r5
    91c4:	itt	ne
    91c6:	movne.w	r3, #268435456	; 0x10000000
    91ca:	strne.w	r3, [r6, #132]	; 0x84
    91ce:	blx	1d04 <sigaction@plt>
    91d2:	adds	r3, r0, #1
    91d4:	mov	r4, r0
    91d6:	it	ne
    91d8:	ldrne	r0, [sp, #152]	; 0x98
    91da:	beq.n	91f0 <error@@Base+0x32c0>
    91dc:	ldr	r2, [pc, #64]	; (9220 <error@@Base+0x32f0>)
    91de:	ldr	r3, [pc, #60]	; (921c <error@@Base+0x32ec>)
    91e0:	add	r2, pc
    91e2:	ldr	r3, [r2, r3]
    91e4:	ldr	r2, [r3, #0]
    91e6:	ldr	r3, [sp, #292]	; 0x124
    91e8:	eors	r2, r3
    91ea:	bne.n	9212 <error@@Base+0x32e2>
    91ec:	add	sp, #296	; 0x128
    91ee:	pop	{r4, r5, r6, pc}
    91f0:	mov	r0, r5
    91f2:	blx	1b60 <strsignal@plt>
    91f6:	str	r0, [sp, #4]
    91f8:	blx	1f04 <__errno_location@plt>
    91fc:	ldr	r0, [r0, #0]
    91fe:	blx	1938 <strerror@plt+0x4>
    9202:	ldr	r1, [sp, #4]
    9204:	mov	r2, r0
    9206:	ldr	r0, [pc, #28]	; (9224 <error@@Base+0x32f4>)
    9208:	add	r0, pc
    920a:	bl	610c <error@@Base+0x1dc>
    920e:	mov	r0, r4
    9210:	b.n	91dc <error@@Base+0x32ac>
    9212:	blx	1cf8 <__stack_chk_fail@plt>
    9216:	nop
    9218:	ldrb	r2, [r2, #15]
    921a:	movs	r1, r0
    921c:	lsls	r4, r1, #9
    921e:	movs	r0, r0
    9220:	ldrb	r0, [r2, #14]
    9222:	movs	r1, r0
    9224:	str	r0, [r5, #52]	; 0x34
    9226:	movs	r0, r0
    9228:	push	{r4, lr}
    922a:	movs	r0, #14
    922c:	blx	1cec <nl_langinfo@plt>
    9230:	ldr	r1, [pc, #68]	; (9278 <error@@Base+0x3348>)
    9232:	add	r1, pc
    9234:	mov	r4, r0
    9236:	blx	1ee0 <strcmp@plt>
    923a:	cbz	r0, 9274 <error@@Base+0x3344>
    923c:	ldr	r1, [pc, #60]	; (927c <error@@Base+0x334c>)
    923e:	mov	r0, r4
    9240:	add	r1, pc
    9242:	blx	1ee0 <strcmp@plt>
    9246:	cbz	r0, 9274 <error@@Base+0x3344>
    9248:	ldr	r1, [pc, #52]	; (9280 <error@@Base+0x3350>)
    924a:	mov	r0, r4
    924c:	add	r1, pc
    924e:	blx	1ee0 <strcmp@plt>
    9252:	cbz	r0, 9274 <error@@Base+0x3344>
    9254:	ldr	r1, [pc, #44]	; (9284 <error@@Base+0x3354>)
    9256:	mov	r0, r4
    9258:	add	r1, pc
    925a:	blx	1ee0 <strcmp@plt>
    925e:	cbz	r0, 9274 <error@@Base+0x3344>
    9260:	ldr	r1, [pc, #36]	; (9288 <error@@Base+0x3358>)
    9262:	mov	r0, r4
    9264:	add	r1, pc
    9266:	blx	1ee0 <strcmp@plt>
    926a:	cbz	r0, 9274 <error@@Base+0x3344>
    926c:	ldrb	r0, [r4, #0]
    926e:	subs	r0, #0
    9270:	it	ne
    9272:	movne	r0, #1
    9274:	pop	{r4, pc}
    9276:	nop
    9278:	str	r6, [r4, #68]	; 0x44
    927a:	movs	r0, r0
    927c:	str	r0, [r4, #68]	; 0x44
    927e:	movs	r0, r0
    9280:	str	r0, [r4, #68]	; 0x44
    9282:	movs	r0, r0
    9284:	str	r4, [r4, #68]	; 0x44
    9286:	movs	r0, r0
    9288:	str	r4, [r4, #68]	; 0x44
    928a:	movs	r0, r0
    928c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9290:	mov	r5, r0
    9292:	vpush	{d8-d9}
    9296:	mov	r4, r2
    9298:	mov	r6, r3
    929a:	mov	r9, r1
    929c:	mov	r2, r6
    929e:	movs	r1, #1
    92a0:	sub	sp, #44	; 0x2c
    92a2:	add	r0, sp, #28
    92a4:	str	r5, [sp, #16]
    92a6:	ldr	r5, [pc, #836]	; (95ec <error@@Base+0x36bc>)
    92a8:	str	r4, [sp, #8]
    92aa:	ldr	r4, [pc, #836]	; (95f0 <error@@Base+0x36c0>)
    92ac:	add	r5, pc
    92ae:	ldr	r3, [sp, #96]	; 0x60
    92b0:	ldr	r4, [r5, r4]
    92b2:	movs	r5, #0
    92b4:	ldr	r4, [r4, #0]
    92b6:	str	r4, [sp, #36]	; 0x24
    92b8:	mov.w	r4, #0
    92bc:	str	r5, [sp, #28]
    92be:	blx	1ef8 <__vasprintf_chk@plt>
    92c2:	subs	r4, r0, #0
    92c4:	ble.w	94ec <error@@Base+0x35bc>
    92c8:	ldr.w	r8, [sp, #28]
    92cc:	mov	r0, r8
    92ce:	blx	1b6c <strlen@plt>
    92d2:	adds	r3, r0, #1
    92d4:	str	r3, [sp, #12]
    92d6:	mov	r0, r3
    92d8:	blx	1ce0 <malloc@plt>
    92dc:	mov	fp, r0
    92de:	cmp	r0, #0
    92e0:	beq.w	9588 <error@@Base+0x3658>
    92e4:	mov	r3, r9
    92e6:	cmp	r3, #0
    92e8:	it	lt
    92ea:	mvnlt.w	r3, #2147483648	; 0x80000000
    92ee:	vmov	s16, r3
    92f2:	ldr	r3, [sp, #8]
    92f4:	cmp	r3, #0
    92f6:	beq.w	953c <error@@Base+0x360c>
    92fa:	ldr	r3, [r3, #0]
    92fc:	ldrb.w	r4, [r8]
    9300:	vmov	s17, r3
    9304:	cmp	r4, #0
    9306:	beq.w	956c <error@@Base+0x363c>
    930a:	add	r3, sp, #32
    930c:	mov	r7, fp
    930e:	mov.w	r9, #1
    9312:	movs	r4, #0
    9314:	vmov	s18, r3
    9318:	str	r4, [sp, #4]
    931a:	blx	19bc <__ctype_get_mb_cur_max@plt>
    931e:	mov	r1, r8
    9320:	mov	r2, r0
    9322:	vmov	r0, s18
    9326:	blx	1dac <mbtowc@plt>
    932a:	adds	r2, r0, #1
    932c:	mov	r6, r0
    932e:	beq.w	9524 <error@@Base+0x35f4>
    9332:	ldr	r3, [sp, #8]
    9334:	ldr	r0, [sp, #32]
    9336:	cmp	r3, #0
    9338:	beq.w	94d2 <error@@Base+0x35a2>
    933c:	blx	1e20 <wcwidth@plt>
    9340:	adds	r3, r0, #1
    9342:	mov	r5, r0
    9344:	beq.n	940c <error@@Base+0x34dc>
    9346:	cmp	r0, #0
    9348:	blt.n	9416 <error@@Base+0x34e6>
    934a:	cmp.w	r9, #0
    934e:	beq.n	93a6 <error@@Base+0x3476>
    9350:	mov	r1, fp
    9352:	mov	r0, r7
    9354:	bl	df3c <setlogin@@Base+0x2134>
    9358:	mov	r1, r6
    935a:	mov	sl, r0
    935c:	vmov	r0, s16
    9360:	bl	df3c <setlogin@@Base+0x2134>
    9364:	cmp	sl, r0
    9366:	bge.w	94e6 <error@@Base+0x35b6>
    936a:	vmov	r0, s17
    936e:	mov	r1, r5
    9370:	bl	df3c <setlogin@@Base+0x2134>
    9374:	ldr	r3, [sp, #4]
    9376:	cmp	r0, r3
    9378:	blt.w	94e6 <error@@Base+0x35b6>
    937c:	ldr	r1, [sp, #12]
    937e:	adds	r3, r7, r6
    9380:	add.w	r2, fp, r1
    9384:	cmp	r3, r2
    9386:	bcs.w	94fe <error@@Base+0x35ce>
    938a:	mov	r1, r5
    938c:	ldr	r0, [sp, #4]
    938e:	str	r3, [sp, #20]
    9390:	bl	ded8 <setlogin@@Base+0x20d0>
    9394:	ldr	r3, [sp, #20]
    9396:	mov	r2, r6
    9398:	mov	r1, r8
    939a:	mov	r5, r0
    939c:	mov	r0, r7
    939e:	str	r5, [sp, #4]
    93a0:	mov	r7, r3
    93a2:	blx	1b84 <memcpy@plt>
    93a6:	cmp	r4, #0
    93a8:	add	r8, r6
    93aa:	blt.n	93b6 <error@@Base+0x3486>
    93ac:	mov	r0, r4
    93ae:	mov	r1, r6
    93b0:	bl	ded8 <setlogin@@Base+0x20d0>
    93b4:	mov	r4, r0
    93b6:	ldrb.w	r3, [r8]
    93ba:	cmp	r3, #0
    93bc:	bne.n	931a <error@@Base+0x33ea>
    93be:	ldr	r0, [sp, #28]
    93c0:	eor.w	r9, r9, #1
    93c4:	blx	1adc <free@plt+0x4>
    93c8:	vmov	r3, s16
    93cc:	movs	r2, #0
    93ce:	strb	r2, [r7, #0]
    93d0:	ldr	r2, [sp, #16]
    93d2:	str.w	fp, [r2]
    93d6:	ldr	r2, [sp, #8]
    93d8:	cmp	r4, r3
    93da:	ite	ge
    93dc:	movge	r3, #0
    93de:	andlt.w	r3, r9, #1
    93e2:	cbz	r2, 93e8 <error@@Base+0x34b8>
    93e4:	ldr	r1, [sp, #4]
    93e6:	str	r1, [r2, #0]
    93e8:	cmp	r3, #0
    93ea:	bne.w	9566 <error@@Base+0x3636>
    93ee:	ldr	r2, [pc, #516]	; (95f4 <error@@Base+0x36c4>)
    93f0:	ldr	r3, [pc, #508]	; (95f0 <error@@Base+0x36c0>)
    93f2:	add	r2, pc
    93f4:	ldr	r3, [r2, r3]
    93f6:	ldr	r2, [r3, #0]
    93f8:	ldr	r3, [sp, #36]	; 0x24
    93fa:	eors	r2, r3
    93fc:	bne.w	95e6 <error@@Base+0x36b6>
    9400:	mov	r0, r4
    9402:	add	sp, #44	; 0x2c
    9404:	vpop	{d8-d9}
    9408:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    940c:	bl	9228 <error@@Base+0x32f8>
    9410:	cmp	r0, #0
    9412:	bne.w	9562 <error@@Base+0x3632>
    9416:	cmp	r6, #0
    9418:	ble.n	93b6 <error@@Base+0x3486>
    941a:	mov	r3, r6
    941c:	mov	r5, r8
    941e:	mov	r6, r9
    9420:	mov	r9, r3
    9422:	cmp	r6, #0
    9424:	beq.n	94cc <error@@Base+0x359c>
    9426:	mov	r1, fp
    9428:	mov	r0, r7
    942a:	bl	df3c <setlogin@@Base+0x2134>
    942e:	mvn.w	r1, #3
    9432:	mov	sl, r0
    9434:	vmov	r0, s16
    9438:	bl	ded8 <setlogin@@Base+0x20d0>
    943c:	cmp	sl, r0
    943e:	bge.n	94ca <error@@Base+0x359a>
    9440:	vmov	r0, s17
    9444:	mvn.w	r1, #3
    9448:	bl	ded8 <setlogin@@Base+0x20d0>
    944c:	ldr	r3, [sp, #4]
    944e:	cmp	r0, r3
    9450:	blt.n	94ca <error@@Base+0x359a>
    9452:	ldr	r1, [sp, #12]
    9454:	adds	r3, r7, #4
    9456:	add.w	r2, fp, r1
    945a:	cmp	r3, r2
    945c:	bcc.n	9486 <error@@Base+0x3556>
    945e:	vmov	r3, s16
    9462:	add.w	r2, r1, #128	; 0x80
    9466:	mov	r0, fp
    9468:	cmp	r2, r3
    946a:	it	cs
    946c:	movcs	r2, r3
    946e:	movs	r3, #1
    9470:	str	r2, [sp, #12]
    9472:	bl	c6ec <setlogin@@Base+0x8e4>
    9476:	ldr	r2, [sp, #12]
    9478:	cmp	r0, #0
    947a:	beq.w	95a6 <error@@Base+0x3676>
    947e:	add.w	r7, r0, sl
    9482:	mov	fp, r0
    9484:	str	r2, [sp, #12]
    9486:	movs	r3, #0
    9488:	movw	r2, #1025	; 0x401
    948c:	ldrb	r1, [r5, #0]
    948e:	mov	r0, r7
    9490:	bl	c9f4 <setlogin@@Base+0xbec>
    9494:	mov	r1, r7
    9496:	mov	r7, r0
    9498:	bl	df3c <setlogin@@Base+0x2134>
    949c:	mov	sl, r0
    949e:	ldr	r0, [sp, #4]
    94a0:	mov	r1, sl
    94a2:	bl	ded8 <setlogin@@Base+0x20d0>
    94a6:	str	r0, [sp, #4]
    94a8:	cmp	r4, #0
    94aa:	add.w	r5, r5, #1
    94ae:	blt.n	94ba <error@@Base+0x358a>
    94b0:	mov	r0, r4
    94b2:	mov	r1, sl
    94b4:	bl	ded8 <setlogin@@Base+0x20d0>
    94b8:	mov	r4, r0
    94ba:	add.w	r3, r8, r9
    94be:	subs	r3, r3, r5
    94c0:	cmp	r3, #0
    94c2:	bgt.n	9422 <error@@Base+0x34f2>
    94c4:	mov	r9, r6
    94c6:	mov	r8, r5
    94c8:	b.n	93b6 <error@@Base+0x3486>
    94ca:	movs	r6, #0
    94cc:	mov.w	sl, #4
    94d0:	b.n	94a8 <error@@Base+0x3578>
    94d2:	sub.w	r3, r0, #9
    94d6:	cmp	r0, #13
    94d8:	it	ne
    94da:	cmpne	r3, #1
    94dc:	it	ls
    94de:	ldrls	r5, [sp, #8]
    94e0:	bls.w	934a <error@@Base+0x341a>
    94e4:	b.n	933c <error@@Base+0x340c>
    94e6:	mov.w	r9, #0
    94ea:	b.n	93a6 <error@@Base+0x3476>
    94ec:	ldr	r3, [sp, #8]
    94ee:	cbz	r3, 94f2 <error@@Base+0x35c2>
    94f0:	str	r5, [r3, #0]
    94f2:	cmp	r4, #0
    94f4:	bne.n	9596 <error@@Base+0x3666>
    94f6:	ldr	r3, [sp, #28]
    94f8:	ldr	r2, [sp, #16]
    94fa:	str	r3, [r2, #0]
    94fc:	b.n	93ee <error@@Base+0x34be>
    94fe:	vmov	r3, s16
    9502:	add.w	r2, r1, #128	; 0x80
    9506:	mov	r0, fp
    9508:	cmp	r2, r3
    950a:	it	cs
    950c:	movcs	r2, r3
    950e:	movs	r3, #1
    9510:	str	r2, [sp, #12]
    9512:	bl	c6ec <setlogin@@Base+0x8e4>
    9516:	cmp	r0, #0
    9518:	beq.n	95c4 <error@@Base+0x3694>
    951a:	add.w	r7, r0, sl
    951e:	mov	fp, r0
    9520:	adds	r3, r7, r6
    9522:	b.n	938a <error@@Base+0x345a>
    9524:	blx	19bc <__ctype_get_mb_cur_max@plt>
    9528:	movs	r1, #0
    952a:	mov	r2, r0
    952c:	mov	r0, r1
    952e:	blx	1dac <mbtowc@plt>
    9532:	bl	9228 <error@@Base+0x32f8>
    9536:	cbnz	r0, 95a2 <error@@Base+0x3672>
    9538:	movs	r6, #1
    953a:	b.n	941a <error@@Base+0x34ea>
    953c:	ldrb.w	r5, [r8]
    9540:	mvn.w	r3, #2147483648	; 0x80000000
    9544:	vmov	s17, r3
    9548:	cmp	r5, #0
    954a:	bne.w	930a <error@@Base+0x33da>
    954e:	mov	r0, r8
    9550:	mov	r4, r5
    9552:	blx	1adc <free@plt+0x4>
    9556:	ldr	r3, [sp, #16]
    9558:	strb.w	r5, [fp]
    955c:	str.w	fp, [r3]
    9560:	b.n	93ee <error@@Base+0x34be>
    9562:	mov	r4, r5
    9564:	b.n	93be <error@@Base+0x348e>
    9566:	mov.w	r4, #4294967295	; 0xffffffff
    956a:	b.n	93ee <error@@Base+0x34be>
    956c:	mov	r0, r8
    956e:	str	r4, [sp, #4]
    9570:	blx	1adc <free@plt+0x4>
    9574:	ldr	r3, [sp, #16]
    9576:	strb.w	r4, [fp]
    957a:	str.w	fp, [r3]
    957e:	ldr	r3, [sp, #8]
    9580:	mov	r2, r3
    9582:	ldr	r3, [sp, #4]
    9584:	str	r3, [r2, #0]
    9586:	b.n	93ee <error@@Base+0x34be>
    9588:	mov	r0, r8
    958a:	blx	1adc <free@plt+0x4>
    958e:	ldr	r3, [sp, #8]
    9590:	cbz	r3, 9596 <error@@Base+0x3666>
    9592:	str.w	fp, [r3]
    9596:	ldr	r2, [sp, #16]
    9598:	movs	r3, #0
    959a:	mov.w	r4, #4294967295	; 0xffffffff
    959e:	str	r3, [r2, #0]
    95a0:	b.n	93ee <error@@Base+0x34be>
    95a2:	mov	r4, r6
    95a4:	b.n	93be <error@@Base+0x348e>
    95a6:	str	r0, [sp, #12]
    95a8:	mov.w	r4, #4294967295	; 0xffffffff
    95ac:	ldr	r0, [sp, #28]
    95ae:	blx	1adc <free@plt+0x4>
    95b2:	ldr	r3, [sp, #12]
    95b4:	strb	r3, [r7, #0]
    95b6:	ldr	r3, [sp, #16]
    95b8:	str.w	fp, [r3]
    95bc:	ldr	r3, [sp, #8]
    95be:	cmp	r3, #0
    95c0:	bne.n	957e <error@@Base+0x364e>
    95c2:	b.n	93ee <error@@Base+0x34be>
    95c4:	str	r0, [sp, #12]
    95c6:	ldr	r0, [sp, #28]
    95c8:	blx	1adc <free@plt+0x4>
    95cc:	ldr	r3, [sp, #12]
    95ce:	strb	r3, [r7, #0]
    95d0:	ldr	r3, [sp, #16]
    95d2:	str.w	fp, [r3]
    95d6:	ldr	r3, [sp, #8]
    95d8:	cmp	r3, #0
    95da:	beq.n	9566 <error@@Base+0x3636>
    95dc:	ldr	r2, [sp, #4]
    95de:	mov.w	r4, #4294967295	; 0xffffffff
    95e2:	str	r2, [r3, #0]
    95e4:	b.n	93ee <error@@Base+0x34be>
    95e6:	blx	1cf8 <__stack_chk_fail@plt>
    95ea:	nop
    95ec:	ldrb	r4, [r0, #11]
    95ee:	movs	r1, r0
    95f0:	lsls	r4, r1, #9
    95f2:	movs	r0, r0
    95f4:	ldrb	r6, [r7, #5]
    95f6:	movs	r1, r0
    95f8:	push	{r3}
    95fa:	ldr.w	ip, [pc, #100]	; 9660 <error@@Base+0x3730>
    95fe:	push	{r4, r5, r6, lr}
    9600:	sub	sp, #28
    9602:	add	r4, sp, #44	; 0x2c
    9604:	ldr	r6, [pc, #92]	; (9664 <error@@Base+0x3734>)
    9606:	add	ip, pc
    9608:	mov	r5, r0
    960a:	ldr.w	r3, [r4], #4
    960e:	add	r0, sp, #16
    9610:	ldr.w	r6, [ip, r6]
    9614:	ldr	r6, [r6, #0]
    9616:	str	r6, [sp, #20]
    9618:	mov.w	r6, #0
    961c:	str	r4, [sp, #0]
    961e:	mov	r6, r1
    9620:	str	r4, [sp, #12]
    9622:	bl	928c <error@@Base+0x335c>
    9626:	ldr	r1, [sp, #16]
    9628:	mov	r4, r0
    962a:	cbz	r1, 9656 <error@@Base+0x3726>
    962c:	mov	r2, r6
    962e:	mov	r0, r5
    9630:	bl	c840 <setlogin@@Base+0xa38>
    9634:	ldr	r0, [sp, #16]
    9636:	blx	1adc <free@plt+0x4>
    963a:	ldr	r2, [pc, #44]	; (9668 <error@@Base+0x3738>)
    963c:	ldr	r3, [pc, #36]	; (9664 <error@@Base+0x3734>)
    963e:	add	r2, pc
    9640:	ldr	r3, [r2, r3]
    9642:	ldr	r2, [r3, #0]
    9644:	ldr	r3, [sp, #20]
    9646:	eors	r2, r3
    9648:	bne.n	965a <error@@Base+0x372a>
    964a:	mov	r0, r4
    964c:	add	sp, #28
    964e:	ldmia.w	sp!, {r4, r5, r6, lr}
    9652:	add	sp, #4
    9654:	bx	lr
    9656:	strb	r1, [r5, #0]
    9658:	b.n	963a <error@@Base+0x370a>
    965a:	blx	1cf8 <__stack_chk_fail@plt>
    965e:	nop
    9660:	strb	r2, [r5, #29]
    9662:	movs	r1, r0
    9664:	lsls	r4, r1, #9
    9666:	movs	r0, r0
    9668:	strb	r2, [r6, #28]
    966a:	movs	r1, r0
    966c:	ldr.w	ip, [pc, #96]	; 96d0 <error@@Base+0x37a0>
    9670:	mov	r3, r1
    9672:	push	{r4, r5, lr}
    9674:	add	ip, pc
    9676:	ldr	r4, [pc, #92]	; (96d4 <error@@Base+0x37a4>)
    9678:	sub	sp, #20
    967a:	mov	r5, r0
    967c:	mvn.w	r1, #2147483648	; 0x80000000
    9680:	str	r2, [sp, #0]
    9682:	add	r0, sp, #8
    9684:	ldr.w	r4, [ip, r4]
    9688:	movs	r2, #0
    968a:	ldr	r4, [r4, #0]
    968c:	str	r4, [sp, #12]
    968e:	mov.w	r4, #0
    9692:	bl	928c <error@@Base+0x335c>
    9696:	subs	r4, r0, #0
    9698:	blt.n	96c6 <error@@Base+0x3796>
    969a:	ldr	r0, [sp, #8]
    969c:	mov	r1, r5
    969e:	blx	1f34 <fputs@plt>
    96a2:	adds	r0, #1
    96a4:	ldr	r0, [sp, #8]
    96a6:	it	eq
    96a8:	moveq.w	r4, #4294967295	; 0xffffffff
    96ac:	blx	1adc <free@plt+0x4>
    96b0:	ldr	r2, [pc, #36]	; (96d8 <error@@Base+0x37a8>)
    96b2:	ldr	r3, [pc, #32]	; (96d4 <error@@Base+0x37a4>)
    96b4:	add	r2, pc
    96b6:	ldr	r3, [r2, r3]
    96b8:	ldr	r2, [r3, #0]
    96ba:	ldr	r3, [sp, #12]
    96bc:	eors	r2, r3
    96be:	bne.n	96cc <error@@Base+0x379c>
    96c0:	mov	r0, r4
    96c2:	add	sp, #20
    96c4:	pop	{r4, r5, pc}
    96c6:	mov.w	r4, #4294967295	; 0xffffffff
    96ca:	b.n	96b0 <error@@Base+0x3780>
    96cc:	blx	1cf8 <__stack_chk_fail@plt>
    96d0:	strb	r4, [r7, #27]
    96d2:	movs	r1, r0
    96d4:	lsls	r4, r1, #9
    96d6:	movs	r0, r0
    96d8:	strb	r4, [r7, #26]
    96da:	movs	r1, r0
    96dc:	push	{r1, r2, r3}
    96de:	ldr	r1, [pc, #60]	; (971c <error@@Base+0x37ec>)
    96e0:	push	{lr}
    96e2:	sub	sp, #8
    96e4:	ldr	r3, [pc, #56]	; (9720 <error@@Base+0x37f0>)
    96e6:	add	r2, sp, #12
    96e8:	add	r1, pc
    96ea:	ldr	r3, [r1, r3]
    96ec:	ldr.w	r1, [r2], #4
    96f0:	ldr	r3, [r3, #0]
    96f2:	str	r3, [sp, #4]
    96f4:	mov.w	r3, #0
    96f8:	str	r2, [sp, #0]
    96fa:	bl	966c <error@@Base+0x373c>
    96fe:	ldr	r2, [pc, #36]	; (9724 <error@@Base+0x37f4>)
    9700:	ldr	r3, [pc, #28]	; (9720 <error@@Base+0x37f0>)
    9702:	add	r2, pc
    9704:	ldr	r3, [r2, r3]
    9706:	ldr	r2, [r3, #0]
    9708:	ldr	r3, [sp, #4]
    970a:	eors	r2, r3
    970c:	bne.n	9718 <error@@Base+0x37e8>
    970e:	add	sp, #8
    9710:	ldr.w	lr, [sp], #4
    9714:	add	sp, #12
    9716:	bx	lr
    9718:	blx	1cf8 <__stack_chk_fail@plt>
    971c:	strb	r0, [r1, #26]
    971e:	movs	r1, r0
    9720:	lsls	r4, r1, #9
    9722:	movs	r0, r0
    9724:	strb	r6, [r5, #25]
    9726:	movs	r1, r0
    9728:	ldr.w	ip, [pc, #76]	; 9778 <error@@Base+0x3848>
    972c:	push	{r0, r1, r2, r3}
    972e:	add	ip, pc
    9730:	ldr	r0, [pc, #72]	; (977c <error@@Base+0x384c>)
    9732:	push	{lr}
    9734:	sub	sp, #12
    9736:	ldr.w	r0, [ip, r0]
    973a:	add	r2, sp, #16
    973c:	ldr	r3, [pc, #64]	; (9780 <error@@Base+0x3850>)
    973e:	ldr	r0, [r0, #0]
    9740:	str	r0, [sp, #4]
    9742:	mov.w	r0, #0
    9746:	ldr.w	r1, [r2], #4
    974a:	ldr	r0, [pc, #56]	; (9784 <error@@Base+0x3854>)
    974c:	add	r3, pc
    974e:	str	r2, [sp, #0]
    9750:	ldr	r3, [r3, r0]
    9752:	ldr	r0, [r3, #0]
    9754:	bl	966c <error@@Base+0x373c>
    9758:	ldr	r2, [pc, #44]	; (9788 <error@@Base+0x3858>)
    975a:	ldr	r3, [pc, #32]	; (977c <error@@Base+0x384c>)
    975c:	add	r2, pc
    975e:	ldr	r3, [r2, r3]
    9760:	ldr	r2, [r3, #0]
    9762:	ldr	r3, [sp, #4]
    9764:	eors	r2, r3
    9766:	bne.n	9772 <error@@Base+0x3842>
    9768:	add	sp, #12
    976a:	ldr.w	lr, [sp], #4
    976e:	add	sp, #16
    9770:	bx	lr
    9772:	blx	1cf8 <__stack_chk_fail@plt>
    9776:	nop
    9778:	strb	r2, [r0, #25]
    977a:	movs	r1, r0
    977c:	lsls	r4, r1, #9
    977e:	movs	r0, r0
    9780:	strb	r4, [r4, #24]
    9782:	movs	r1, r0
    9784:	lsls	r0, r4, #9
    9786:	movs	r0, r0
    9788:	strb	r4, [r2, #24]
    978a:	movs	r1, r0
    978c:	ldr	r1, [pc, #208]	; (9860 <error@@Base+0x3930>)
    978e:	ldr	r2, [pc, #212]	; (9864 <error@@Base+0x3934>)
    9790:	add	r1, pc
    9792:	ldr	r3, [pc, #212]	; (9868 <error@@Base+0x3938>)
    9794:	push	{r4, r5, r6, lr}
    9796:	add	r3, pc
    9798:	ldr	r2, [r1, r2]
    979a:	sub	sp, #24
    979c:	ldr	r5, [pc, #204]	; (986c <error@@Base+0x393c>)
    979e:	add	r4, sp, #4
    97a0:	ldr	r2, [r2, #0]
    97a2:	str	r2, [sp, #20]
    97a4:	mov.w	r2, #0
    97a8:	add	r6, sp, #8
    97aa:	ldmia	r3, {r0, r1, r2, r3}
    97ac:	add	r5, pc
    97ae:	stmia.w	r4, {r0, r1, r2, r3}
    97b2:	mov	r0, r5
    97b4:	blx	19d4 <getenv@plt>
    97b8:	mov	r4, r0
    97ba:	cbz	r0, 97f6 <error@@Base+0x38c6>
    97bc:	ldr	r1, [pc, #176]	; (9870 <error@@Base+0x3940>)
    97be:	movs	r2, #2
    97c0:	add	r1, pc
    97c2:	blx	1cac <strncasecmp@plt>
    97c6:	cbnz	r0, 97fe <error@@Base+0x38ce>
    97c8:	ldr	r1, [pc, #168]	; (9874 <error@@Base+0x3944>)
    97ca:	mov	r0, r4
    97cc:	add	r1, pc
    97ce:	blx	1980 <strcasestr@plt>
    97d2:	cbz	r0, 981e <error@@Base+0x38ee>
    97d4:	ldr	r1, [pc, #160]	; (9878 <error@@Base+0x3948>)
    97d6:	movs	r0, #0
    97d8:	add	r1, pc
    97da:	blx	1b94 <setlocale@plt+0x4>
    97de:	cmp	r0, #0
    97e0:	beq.n	984c <error@@Base+0x391c>
    97e2:	ldr	r2, [pc, #152]	; (987c <error@@Base+0x394c>)
    97e4:	ldr	r3, [pc, #124]	; (9864 <error@@Base+0x3934>)
    97e6:	add	r2, pc
    97e8:	ldr	r3, [r2, r3]
    97ea:	ldr	r2, [r3, #0]
    97ec:	ldr	r3, [sp, #20]
    97ee:	eors	r2, r3
    97f0:	bne.n	985a <error@@Base+0x392a>
    97f2:	add	sp, #24
    97f4:	pop	{r4, r5, r6, pc}
    97f6:	ldr.w	r5, [r6], #4
    97fa:	cmp	r5, #0
    97fc:	bne.n	97b2 <error@@Base+0x3882>
    97fe:	ldr	r2, [pc, #128]	; (9880 <error@@Base+0x3950>)
    9800:	ldr	r3, [pc, #96]	; (9864 <error@@Base+0x3934>)
    9802:	add	r2, pc
    9804:	ldr	r3, [r2, r3]
    9806:	ldr	r2, [r3, #0]
    9808:	ldr	r3, [sp, #20]
    980a:	eors	r2, r3
    980c:	bne.n	985a <error@@Base+0x392a>
    980e:	ldr	r1, [pc, #116]	; (9884 <error@@Base+0x3954>)
    9810:	movs	r0, #0
    9812:	add	r1, pc
    9814:	add	sp, #24
    9816:	ldmia.w	sp!, {r4, r5, r6, lr}
    981a:	b.w	1b90 <setlocale@plt>
    981e:	ldr	r1, [pc, #104]	; (9888 <error@@Base+0x3958>)
    9820:	mov	r0, r4
    9822:	add	r1, pc
    9824:	blx	1980 <strcasestr@plt>
    9828:	cmp	r0, #0
    982a:	bne.n	97d4 <error@@Base+0x38a4>
    982c:	ldr	r2, [pc, #92]	; (988c <error@@Base+0x395c>)
    982e:	ldr	r3, [pc, #52]	; (9864 <error@@Base+0x3934>)
    9830:	add	r2, pc
    9832:	ldr	r3, [r2, r3]
    9834:	ldr	r2, [r3, #0]
    9836:	ldr	r3, [sp, #20]
    9838:	eors	r2, r3
    983a:	bne.n	985a <error@@Base+0x392a>
    983c:	ldr	r1, [pc, #80]	; (9890 <error@@Base+0x3960>)
    983e:	movs	r0, #0
    9840:	add	r1, pc
    9842:	add	sp, #24
    9844:	ldmia.w	sp!, {r4, r5, r6, lr}
    9848:	b.w	1b90 <setlocale@plt>
    984c:	ldr	r1, [pc, #68]	; (9894 <error@@Base+0x3964>)
    984e:	add	r1, pc
    9850:	blx	1b94 <setlocale@plt+0x4>
    9854:	cmp	r0, #0
    9856:	bne.n	97e2 <error@@Base+0x38b2>
    9858:	b.n	982c <error@@Base+0x38fc>
    985a:	blx	1cf8 <__stack_chk_fail@plt>
    985e:	nop
    9860:	strb	r0, [r4, #23]
    9862:	movs	r1, r0
    9864:	lsls	r4, r1, #9
    9866:	movs	r0, r0
    9868:	ldrb	r6, [r1, #2]
    986a:	movs	r1, r0
    986c:	ldrsh	r0, [r2, r3]
    986e:	movs	r0, r0
    9870:	ldrsh	r4, [r1, r4]
    9872:	movs	r0, r0
    9874:	ldrsh	r4, [r1, r3]
    9876:	movs	r0, r0
    9878:	ldrsh	r4, [r0, r4]
    987a:	movs	r0, r0
    987c:	strb	r2, [r1, #22]
    987e:	movs	r1, r0
    9880:	strb	r6, [r5, #21]
    9882:	movs	r1, r0
    9884:	strb	r2, [r5, r4]
    9886:	movs	r0, r0
    9888:	ldrsh	r6, [r5, r2]
    988a:	movs	r0, r0
    988c:	strb	r0, [r0, #21]
    988e:	movs	r1, r0
    9890:	ldrsh	r0, [r3, r2]
    9892:	movs	r0, r0
    9894:	ldrsh	r6, [r2, r2]
    9896:	movs	r0, r0
    9898:	ldr	r2, [pc, #124]	; (9918 <error@@Base+0x39e8>)
    989a:	ldr	r3, [pc, #128]	; (991c <error@@Base+0x39ec>)
    989c:	add	r2, pc
    989e:	push	{lr}
    98a0:	sub	sp, #68	; 0x44
    98a2:	ldr	r3, [r2, r3]
    98a4:	ldr	r3, [r3, #0]
    98a6:	str	r3, [sp, #60]	; 0x3c
    98a8:	mov.w	r3, #0
    98ac:	bl	be4c <setlogin@@Base+0x44>
    98b0:	blx	1aa8 <OpenSSL_version_num@plt>
    98b4:	mov	r1, r0
    98b6:	movw	r0, #4207	; 0x106f
    98ba:	movt	r0, #4112	; 0x1010
    98be:	bl	be10 <setlogin@@Base+0x8>
    98c2:	cbz	r0, 98f6 <error@@Base+0x39c6>
    98c4:	blx	1e04 <RAND_status@plt>
    98c8:	cmp	r0, #1
    98ca:	bne.n	9910 <error@@Base+0x39e0>
    98cc:	add	r0, sp, #12
    98ce:	movs	r1, #48	; 0x30
    98d0:	str	r0, [sp, #4]
    98d2:	bl	bce8 <error@@Base+0x5db8>
    98d6:	movs	r2, #48	; 0x30
    98d8:	ldr	r0, [sp, #4]
    98da:	mov	r1, r2
    98dc:	blx	1bd8 <__explicit_bzero_chk@plt+0x4>
    98e0:	ldr	r2, [pc, #60]	; (9920 <error@@Base+0x39f0>)
    98e2:	ldr	r3, [pc, #56]	; (991c <error@@Base+0x39ec>)
    98e4:	add	r2, pc
    98e6:	ldr	r3, [r2, r3]
    98e8:	ldr	r2, [r3, #0]
    98ea:	ldr	r3, [sp, #60]	; 0x3c
    98ec:	eors	r2, r3
    98ee:	bne.n	990c <error@@Base+0x39dc>
    98f0:	add	sp, #68	; 0x44
    98f2:	ldr.w	pc, [sp], #4
    98f6:	blx	1aa8 <OpenSSL_version_num@plt>
    98fa:	movw	r1, #4207	; 0x106f
    98fe:	movt	r1, #4112	; 0x1010
    9902:	mov	r2, r0
    9904:	ldr	r0, [pc, #28]	; (9924 <error@@Base+0x39f4>)
    9906:	add	r0, pc
    9908:	bl	59b8 <fputs@plt+0x3a84>
    990c:	blx	1cf8 <__stack_chk_fail@plt>
    9910:	ldr	r0, [pc, #20]	; (9928 <error@@Base+0x39f8>)
    9912:	add	r0, pc
    9914:	bl	59b8 <fputs@plt+0x3a84>
    9918:	strb	r4, [r2, #19]
    991a:	movs	r1, r0
    991c:	lsls	r4, r1, #9
    991e:	movs	r0, r0
    9920:	strb	r4, [r1, #18]
    9922:	movs	r1, r0
    9924:	ldrb	r2, [r5, r7]
    9926:	movs	r0, r0
    9928:	ldrsh	r2, [r3, r0]
    992a:	movs	r0, r0
    992c:	clz	r0, r0
    9930:	lsrs	r0, r0, #5
    9932:	bx	lr
    9934:	adds	r0, #60	; 0x3c
    9936:	push	{r3, lr}
    9938:	cmp	r0, #60	; 0x3c
    993a:	bhi.w	9b32 <error@@Base+0x3c02>
    993e:	tbh	[pc, r0, lsl #1]
    9942:	lsls	r3, r3, #2
    9944:	lsls	r1, r4, #2
    9946:	lsls	r6, r3, #2
    9948:	lsls	r5, r5, #2
    994a:	lsls	r2, r5, #2
    994c:	lsls	r7, r4, #2
    994e:	lsls	r4, r4, #2
    9950:	lsls	r5, r0, #3
    9952:	lsls	r2, r0, #3
    9954:	lsls	r7, r7, #2
    9956:	lsls	r4, r7, #2
    9958:	lsls	r1, r7, #2
    995a:	lsls	r6, r6, #2
    995c:	lsls	r3, r6, #2
    995e:	lsls	r0, r6, #2
    9960:	lsls	r5, r6, #3
    9962:	lsls	r2, r6, #3
    9964:	lsls	r7, r5, #3
    9966:	lsls	r4, r5, #3
    9968:	lsls	r1, r5, #3
    996a:	lsls	r6, r4, #3
    996c:	lsls	r3, r4, #3
    996e:	lsls	r0, r4, #3
    9970:	lsls	r5, r3, #3
    9972:	lsls	r2, r3, #3
    9974:	lsls	r7, r2, #3
    9976:	lsls	r4, r2, #3
    9978:	lsls	r1, r2, #3
    997a:	lsls	r4, r6, #1
    997c:	lsls	r1, r6, #1
    997e:	lsls	r6, r5, #1
    9980:	lsls	r3, r5, #1
    9982:	lsls	r0, r5, #1
    9984:	lsls	r5, r4, #1
    9986:	lsls	r2, r4, #1
    9988:	lsls	r7, r3, #1
    998a:	lsls	r0, r3, #1
    998c:	lsls	r5, r2, #1
    998e:	lsls	r2, r2, #1
    9990:	lsls	r7, r1, #1
    9992:	lsls	r4, r1, #1
    9994:	lsls	r1, r1, #1
    9996:	lsls	r6, r0, #1
    9998:	lsls	r3, r0, #1
    999a:	lsls	r4, r1, #2
    999c:	lsls	r1, r1, #2
    999e:	lsls	r6, r0, #2
    99a0:	lsls	r3, r0, #2
    99a2:	lsls	r0, r0, #2
    99a4:	lsls	r5, r7, #1
    99a6:	lsls	r2, r7, #1
    99a8:	lsls	r7, r6, #1
    99aa:	lsls	r0, r3, #2
    99ac:	lsls	r5, r2, #2
    99ae:	lsls	r2, r2, #2
    99b0:	lsls	r7, r1, #2
    99b2:	lsls	r3, r1, #3
    99b4:	lsls	r0, r1, #3
    99b6:	lsls	r6, r1, #3
    99b8:	lsls	r0, r0, #1
    99ba:	movs	r5, r7
    99bc:	ldr	r0, [pc, #376]	; (9b38 <error@@Base+0x3c08>)
    99be:	add	r0, pc
    99c0:	pop	{r3, pc}
    99c2:	ldr	r0, [pc, #376]	; (9b3c <error@@Base+0x3c0c>)
    99c4:	add	r0, pc
    99c6:	pop	{r3, pc}
    99c8:	ldr	r0, [pc, #372]	; (9b40 <error@@Base+0x3c10>)
    99ca:	add	r0, pc
    99cc:	pop	{r3, pc}
    99ce:	ldr	r0, [pc, #372]	; (9b44 <error@@Base+0x3c14>)
    99d0:	add	r0, pc
    99d2:	pop	{r3, pc}
    99d4:	ldr	r0, [pc, #368]	; (9b48 <error@@Base+0x3c18>)
    99d6:	add	r0, pc
    99d8:	pop	{r3, pc}
    99da:	ldr	r0, [pc, #368]	; (9b4c <error@@Base+0x3c1c>)
    99dc:	add	r0, pc
    99de:	pop	{r3, pc}
    99e0:	ldr	r0, [pc, #364]	; (9b50 <error@@Base+0x3c20>)
    99e2:	add	r0, pc
    99e4:	pop	{r3, pc}
    99e6:	ldr	r0, [pc, #364]	; (9b54 <error@@Base+0x3c24>)
    99e8:	add	r0, pc
    99ea:	pop	{r3, pc}
    99ec:	ldr	r0, [pc, #360]	; (9b58 <error@@Base+0x3c28>)
    99ee:	add	r0, pc
    99f0:	pop	{r3, pc}
    99f2:	blx	1f04 <__errno_location@plt>
    99f6:	ldmia.w	sp!, {r3, lr}
    99fa:	ldr	r0, [r0, #0]
    99fc:	b.w	1934 <strerror@plt>
    9a00:	ldr	r0, [pc, #344]	; (9b5c <error@@Base+0x3c2c>)
    9a02:	add	r0, pc
    9a04:	pop	{r3, pc}
    9a06:	ldr	r0, [pc, #344]	; (9b60 <error@@Base+0x3c30>)
    9a08:	add	r0, pc
    9a0a:	pop	{r3, pc}
    9a0c:	ldr	r0, [pc, #340]	; (9b64 <error@@Base+0x3c34>)
    9a0e:	add	r0, pc
    9a10:	pop	{r3, pc}
    9a12:	ldr	r0, [pc, #340]	; (9b68 <error@@Base+0x3c38>)
    9a14:	add	r0, pc
    9a16:	pop	{r3, pc}
    9a18:	ldr	r0, [pc, #336]	; (9b6c <error@@Base+0x3c3c>)
    9a1a:	add	r0, pc
    9a1c:	pop	{r3, pc}
    9a1e:	ldr	r0, [pc, #336]	; (9b70 <error@@Base+0x3c40>)
    9a20:	add	r0, pc
    9a22:	pop	{r3, pc}
    9a24:	ldr	r0, [pc, #332]	; (9b74 <error@@Base+0x3c44>)
    9a26:	add	r0, pc
    9a28:	pop	{r3, pc}
    9a2a:	ldr	r0, [pc, #332]	; (9b78 <error@@Base+0x3c48>)
    9a2c:	add	r0, pc
    9a2e:	pop	{r3, pc}
    9a30:	ldr	r0, [pc, #328]	; (9b7c <error@@Base+0x3c4c>)
    9a32:	add	r0, pc
    9a34:	pop	{r3, pc}
    9a36:	ldr	r0, [pc, #328]	; (9b80 <error@@Base+0x3c50>)
    9a38:	add	r0, pc
    9a3a:	pop	{r3, pc}
    9a3c:	ldr	r0, [pc, #324]	; (9b84 <error@@Base+0x3c54>)
    9a3e:	add	r0, pc
    9a40:	pop	{r3, pc}
    9a42:	ldr	r0, [pc, #324]	; (9b88 <error@@Base+0x3c58>)
    9a44:	add	r0, pc
    9a46:	pop	{r3, pc}
    9a48:	ldr	r0, [pc, #320]	; (9b8c <error@@Base+0x3c5c>)
    9a4a:	add	r0, pc
    9a4c:	pop	{r3, pc}
    9a4e:	ldr	r0, [pc, #320]	; (9b90 <error@@Base+0x3c60>)
    9a50:	add	r0, pc
    9a52:	pop	{r3, pc}
    9a54:	ldr	r0, [pc, #316]	; (9b94 <error@@Base+0x3c64>)
    9a56:	add	r0, pc
    9a58:	pop	{r3, pc}
    9a5a:	ldr	r0, [pc, #316]	; (9b98 <error@@Base+0x3c68>)
    9a5c:	add	r0, pc
    9a5e:	pop	{r3, pc}
    9a60:	ldr	r0, [pc, #312]	; (9b9c <error@@Base+0x3c6c>)
    9a62:	add	r0, pc
    9a64:	pop	{r3, pc}
    9a66:	ldr	r0, [pc, #312]	; (9ba0 <error@@Base+0x3c70>)
    9a68:	add	r0, pc
    9a6a:	pop	{r3, pc}
    9a6c:	ldr	r0, [pc, #308]	; (9ba4 <error@@Base+0x3c74>)
    9a6e:	add	r0, pc
    9a70:	pop	{r3, pc}
    9a72:	ldr	r0, [pc, #308]	; (9ba8 <error@@Base+0x3c78>)
    9a74:	add	r0, pc
    9a76:	pop	{r3, pc}
    9a78:	ldr	r0, [pc, #304]	; (9bac <error@@Base+0x3c7c>)
    9a7a:	add	r0, pc
    9a7c:	pop	{r3, pc}
    9a7e:	ldr	r0, [pc, #304]	; (9bb0 <error@@Base+0x3c80>)
    9a80:	add	r0, pc
    9a82:	pop	{r3, pc}
    9a84:	ldr	r0, [pc, #300]	; (9bb4 <error@@Base+0x3c84>)
    9a86:	add	r0, pc
    9a88:	pop	{r3, pc}
    9a8a:	ldr	r0, [pc, #300]	; (9bb8 <error@@Base+0x3c88>)
    9a8c:	add	r0, pc
    9a8e:	pop	{r3, pc}
    9a90:	ldr	r0, [pc, #296]	; (9bbc <error@@Base+0x3c8c>)
    9a92:	add	r0, pc
    9a94:	pop	{r3, pc}
    9a96:	ldr	r0, [pc, #296]	; (9bc0 <error@@Base+0x3c90>)
    9a98:	add	r0, pc
    9a9a:	pop	{r3, pc}
    9a9c:	ldr	r0, [pc, #292]	; (9bc4 <error@@Base+0x3c94>)
    9a9e:	add	r0, pc
    9aa0:	pop	{r3, pc}
    9aa2:	ldr	r0, [pc, #292]	; (9bc8 <error@@Base+0x3c98>)
    9aa4:	add	r0, pc
    9aa6:	pop	{r3, pc}
    9aa8:	ldr	r0, [pc, #288]	; (9bcc <error@@Base+0x3c9c>)
    9aaa:	add	r0, pc
    9aac:	pop	{r3, pc}
    9aae:	ldr	r0, [pc, #288]	; (9bd0 <error@@Base+0x3ca0>)
    9ab0:	add	r0, pc
    9ab2:	pop	{r3, pc}
    9ab4:	ldr	r0, [pc, #284]	; (9bd4 <error@@Base+0x3ca4>)
    9ab6:	add	r0, pc
    9ab8:	pop	{r3, pc}
    9aba:	ldr	r0, [pc, #284]	; (9bd8 <error@@Base+0x3ca8>)
    9abc:	add	r0, pc
    9abe:	pop	{r3, pc}
    9ac0:	ldr	r0, [pc, #280]	; (9bdc <error@@Base+0x3cac>)
    9ac2:	add	r0, pc
    9ac4:	pop	{r3, pc}
    9ac6:	ldr	r0, [pc, #280]	; (9be0 <error@@Base+0x3cb0>)
    9ac8:	add	r0, pc
    9aca:	pop	{r3, pc}
    9acc:	ldr	r0, [pc, #276]	; (9be4 <error@@Base+0x3cb4>)
    9ace:	add	r0, pc
    9ad0:	pop	{r3, pc}
    9ad2:	ldr	r0, [pc, #276]	; (9be8 <error@@Base+0x3cb8>)
    9ad4:	add	r0, pc
    9ad6:	pop	{r3, pc}
    9ad8:	ldr	r0, [pc, #272]	; (9bec <error@@Base+0x3cbc>)
    9ada:	add	r0, pc
    9adc:	pop	{r3, pc}
    9ade:	ldr	r0, [pc, #272]	; (9bf0 <error@@Base+0x3cc0>)
    9ae0:	add	r0, pc
    9ae2:	pop	{r3, pc}
    9ae4:	ldr	r0, [pc, #268]	; (9bf4 <error@@Base+0x3cc4>)
    9ae6:	add	r0, pc
    9ae8:	pop	{r3, pc}
    9aea:	ldr	r0, [pc, #268]	; (9bf8 <error@@Base+0x3cc8>)
    9aec:	add	r0, pc
    9aee:	pop	{r3, pc}
    9af0:	ldr	r0, [pc, #264]	; (9bfc <error@@Base+0x3ccc>)
    9af2:	add	r0, pc
    9af4:	pop	{r3, pc}
    9af6:	ldr	r0, [pc, #264]	; (9c00 <error@@Base+0x3cd0>)
    9af8:	add	r0, pc
    9afa:	pop	{r3, pc}
    9afc:	ldr	r0, [pc, #260]	; (9c04 <error@@Base+0x3cd4>)
    9afe:	add	r0, pc
    9b00:	pop	{r3, pc}
    9b02:	ldr	r0, [pc, #260]	; (9c08 <error@@Base+0x3cd8>)
    9b04:	add	r0, pc
    9b06:	pop	{r3, pc}
    9b08:	ldr	r0, [pc, #256]	; (9c0c <error@@Base+0x3cdc>)
    9b0a:	add	r0, pc
    9b0c:	pop	{r3, pc}
    9b0e:	ldr	r0, [pc, #256]	; (9c10 <error@@Base+0x3ce0>)
    9b10:	add	r0, pc
    9b12:	pop	{r3, pc}
    9b14:	ldr	r0, [pc, #252]	; (9c14 <error@@Base+0x3ce4>)
    9b16:	add	r0, pc
    9b18:	pop	{r3, pc}
    9b1a:	ldr	r0, [pc, #252]	; (9c18 <error@@Base+0x3ce8>)
    9b1c:	add	r0, pc
    9b1e:	pop	{r3, pc}
    9b20:	ldr	r0, [pc, #248]	; (9c1c <error@@Base+0x3cec>)
    9b22:	add	r0, pc
    9b24:	pop	{r3, pc}
    9b26:	ldr	r0, [pc, #248]	; (9c20 <error@@Base+0x3cf0>)
    9b28:	add	r0, pc
    9b2a:	pop	{r3, pc}
    9b2c:	ldr	r0, [pc, #244]	; (9c24 <error@@Base+0x3cf4>)
    9b2e:	add	r0, pc
    9b30:	pop	{r3, pc}
    9b32:	ldr	r0, [pc, #244]	; (9c28 <error@@Base+0x3cf8>)
    9b34:	add	r0, pc
    9b36:	pop	{r3, pc}
    9b38:	ldrb	r2, [r2, r6]
    9b3a:	movs	r0, r0
    9b3c:	str	r4, [r1, #60]	; 0x3c
    9b3e:	movs	r0, r0
    9b40:	ldrsh	r2, [r5, r3]
    9b42:	movs	r0, r0
    9b44:	ldrsh	r0, [r0, r4]
    9b46:	movs	r0, r0
    9b48:	ldrsh	r2, [r4, r4]
    9b4a:	movs	r0, r0
    9b4c:	ldrsh	r4, [r7, r4]
    9b4e:	movs	r0, r0
    9b50:	ldrsh	r6, [r2, r5]
    9b52:	movs	r0, r0
    9b54:	ldrsh	r4, [r4, r5]
    9b56:	movs	r0, r0
    9b58:	ldrsh	r2, [r6, r5]
    9b5a:	movs	r0, r0
    9b5c:	ldrsh	r6, [r0, r6]
    9b5e:	movs	r0, r0
    9b60:	ldrsh	r4, [r2, r6]
    9b62:	movs	r0, r0
    9b64:	ldrsh	r6, [r5, r6]
    9b66:	movs	r0, r0
    9b68:	ldrsh	r0, [r0, r7]
    9b6a:	movs	r0, r0
    9b6c:	ldrsh	r6, [r2, r7]
    9b6e:	movs	r0, r0
    9b70:	ldrsh	r0, [r4, r7]
    9b72:	movs	r0, r0
    9b74:	str	r2, [r0, #0]
    9b76:	movs	r0, r0
    9b78:	str	r0, [r3, #0]
    9b7a:	movs	r0, r0
    9b7c:	ldrb	r2, [r3, r6]
    9b7e:	movs	r0, r0
    9b80:	ldrb	r0, [r6, r6]
    9b82:	movs	r0, r0
    9b84:	ldrb	r6, [r7, r6]
    9b86:	movs	r0, r0
    9b88:	ldrb	r0, [r2, r7]
    9b8a:	movs	r0, r0
    9b8c:	ldrb	r2, [r4, r7]
    9b8e:	movs	r0, r0
    9b90:	ldrb	r4, [r6, r7]
    9b92:	movs	r0, r0
    9b94:	ldrsh	r6, [r1, r0]
    9b96:	movs	r0, r0
    9b98:	ldrsh	r0, [r5, r0]
    9b9a:	movs	r0, r0
    9b9c:	ldrb	r2, [r1, r4]
    9b9e:	movs	r0, r0
    9ba0:	ldrb	r0, [r3, r4]
    9ba2:	movs	r0, r0
    9ba4:	ldrb	r6, [r4, r4]
    9ba6:	movs	r0, r0
    9ba8:	ldrb	r4, [r6, r4]
    9baa:	movs	r0, r0
    9bac:	str	r2, [r0, #48]	; 0x30
    9bae:	movs	r0, r0
    9bb0:	str	r0, [r7, #40]	; 0x28
    9bb2:	movs	r0, r0
    9bb4:	str	r6, [r2, #44]	; 0x2c
    9bb6:	movs	r0, r0
    9bb8:	str	r4, [r3, #36]	; 0x24
    9bba:	movs	r0, r0
    9bbc:	str	r6, [r5, #36]	; 0x24
    9bbe:	movs	r0, r0
    9bc0:	str	r0, [r7, #36]	; 0x24
    9bc2:	movs	r0, r0
    9bc4:	str	r6, [r0, #40]	; 0x28
    9bc6:	movs	r0, r0
    9bc8:	str	r4, [r7, #20]
    9bca:	movs	r0, r0
    9bcc:	str	r6, [r0, #24]
    9bce:	movs	r0, r0
    9bd0:	str	r4, [r2, #24]
    9bd2:	movs	r0, r0
    9bd4:	str	r6, [r5, #24]
    9bd6:	movs	r0, r0
    9bd8:	str	r4, [r1, #28]
    9bda:	movs	r0, r0
    9bdc:	str	r2, [r5, #28]
    9bde:	movs	r0, r0
    9be0:	str	r4, [r6, #28]
    9be2:	movs	r0, r0
    9be4:	str	r2, [r0, #32]
    9be6:	movs	r0, r0
    9be8:	ldrb	r4, [r0, r2]
    9bea:	movs	r0, r0
    9bec:	strb	r2, [r7, r5]
    9bee:	movs	r0, r0
    9bf0:	ldrh	r0, [r4, r1]
    9bf2:	movs	r0, r0
    9bf4:	ldrsh	r6, [r6, r5]
    9bf6:	movs	r0, r0
    9bf8:	ldrsh	r0, [r3, r6]
    9bfa:	movs	r0, r0
    9bfc:	ldrsh	r2, [r7, r6]
    9bfe:	movs	r0, r0
    9c00:	str	r0, [r2, #0]
    9c02:	movs	r0, r0
    9c04:	ldrsh	r6, [r1, r7]
    9c06:	movs	r0, r0
    9c08:	ldrsh	r4, [r4, r7]
    9c0a:	movs	r0, r0
    9c0c:	str	r6, [r2, #0]
    9c0e:	movs	r0, r0
    9c10:	str	r0, [r6, #0]
    9c12:	movs	r0, r0
    9c14:	str	r6, [r3, #4]
    9c16:	movs	r0, r0
    9c18:	str	r4, [r6, #4]
    9c1a:	movs	r0, r0
    9c1c:	str	r6, [r2, #8]
    9c1e:	movs	r0, r0
    9c20:	str	r0, [r1, #12]
    9c22:	movs	r0, r0
    9c24:	str	r2, [r2, #12]
    9c26:	movs	r0, r0
    9c28:	ldrb	r4, [r1, r0]
    9c2a:	movs	r0, r0
    9c2c:	ldr	r3, [r0, #8]
    9c2e:	cbz	r3, 9c50 <error@@Base+0x3d20>
    9c30:	push	{r4, lr}
    9c32:	mov	r4, r0
    9c34:	ldr	r2, [r0, #24]
    9c36:	cbnz	r2, 9c4e <error@@Base+0x3d1e>
    9c38:	ldr	r2, [r0, #32]
    9c3a:	cmp	r2, #1
    9c3c:	bhi.n	9c4e <error@@Base+0x3d1e>
    9c3e:	cbnz	r1, 9c52 <error@@Base+0x3d22>
    9c40:	cmp.w	r3, #8192	; 0x2000
    9c44:	bcc.n	9c4e <error@@Base+0x3d1e>
    9c46:	ldr	r2, [r0, #12]
    9c48:	cmp.w	r3, r2, lsr #1
    9c4c:	bcs.n	9c54 <error@@Base+0x3d24>
    9c4e:	pop	{r4, pc}
    9c50:	bx	lr
    9c52:	ldr	r2, [r0, #12]
    9c54:	ldr	r0, [r4, #0]
    9c56:	subs	r2, r2, r3
    9c58:	adds	r1, r0, r3
    9c5a:	blx	1d40 <memmove@plt>
    9c5e:	ldrd	r2, r3, [r4, #8]
    9c62:	movs	r1, #0
    9c64:	str	r1, [r4, #8]
    9c66:	subs	r3, r3, r2
    9c68:	str	r3, [r4, #12]
    9c6a:	pop	{r4, pc}
    9c6c:	push	{r4, lr}
    9c6e:	movs	r1, #1
    9c70:	movs	r0, #40	; 0x28
    9c72:	blx	1a20 <calloc@plt+0x4>
    9c76:	mov	r4, r0
    9c78:	cbz	r0, 9c9c <error@@Base+0x3d6c>
    9c7a:	movs	r3, #0
    9c7c:	mov.w	r1, #256	; 0x100
    9c80:	movs	r0, #1
    9c82:	mov.w	r2, #134217728	; 0x8000000
    9c86:	str	r3, [r4, #24]
    9c88:	str	r3, [r4, #36]	; 0x24
    9c8a:	str	r1, [r4, #20]
    9c8c:	str	r0, [r4, #32]
    9c8e:	str	r2, [r4, #16]
    9c90:	blx	1a20 <calloc@plt+0x4>
    9c94:	mov	r3, r0
    9c96:	strd	r0, r0, [r4]
    9c9a:	cbz	r0, 9ca0 <error@@Base+0x3d70>
    9c9c:	mov	r0, r4
    9c9e:	pop	{r4, pc}
    9ca0:	mov	r0, r4
    9ca2:	mov	r4, r3
    9ca4:	blx	1adc <free@plt+0x4>
    9ca8:	b.n	9c9c <error@@Base+0x3d6c>
    9caa:	nop
    9cac:	cmp.w	r1, #134217728	; 0x8000000
    9cb0:	push	{r4, r5, r6, lr}
    9cb2:	ite	ls
    9cb4:	movls	r5, #0
    9cb6:	movhi	r5, #1
    9cb8:	cmp	r0, #0
    9cba:	it	eq
    9cbc:	moveq	r5, #1
    9cbe:	cbnz	r5, 9ce2 <error@@Base+0x3db2>
    9cc0:	mov	r4, r1
    9cc2:	mov	r6, r0
    9cc4:	movs	r1, #1
    9cc6:	movs	r0, #40	; 0x28
    9cc8:	blx	1a20 <calloc@plt+0x4>
    9ccc:	cbz	r0, 9ce0 <error@@Base+0x3db0>
    9cce:	movs	r3, #1
    9cd0:	str	r4, [r0, #16]
    9cd2:	str	r4, [r0, #12]
    9cd4:	str	r4, [r0, #20]
    9cd6:	str	r5, [r0, #36]	; 0x24
    9cd8:	strd	r5, r6, [r0]
    9cdc:	str	r3, [r0, #24]
    9cde:	str	r3, [r0, #32]
    9ce0:	pop	{r4, r5, r6, pc}
    9ce2:	movs	r0, #0
    9ce4:	pop	{r4, r5, r6, pc}
    9ce6:	nop
    9ce8:	push	{r3, lr}
    9cea:	cbz	r0, 9cfa <error@@Base+0x3dca>
    9cec:	ldr	r3, [r0, #24]
    9cee:	cbz	r3, 9d0e <error@@Base+0x3dde>
    9cf0:	ldr	r3, [r0, #32]
    9cf2:	subs	r3, #1
    9cf4:	cmp.w	r3, #1048576	; 0x100000
    9cf8:	bcc.n	9d20 <error@@Base+0x3df0>
    9cfa:	movs	r1, #0
    9cfc:	movs	r0, #11
    9cfe:	bl	918c <error@@Base+0x325c>
    9d02:	movs	r0, #11
    9d04:	blx	1c3c <raise@plt+0x4>
    9d08:	mov.w	r0, #4294967295	; 0xffffffff
    9d0c:	pop	{r3, pc}
    9d0e:	ldrd	r2, r3, [r0]
    9d12:	cmp	r2, r3
    9d14:	bne.n	9cfa <error@@Base+0x3dca>
    9d16:	ldr	r3, [r0, #32]
    9d18:	subs	r3, #1
    9d1a:	cmp.w	r3, #1048576	; 0x100000
    9d1e:	bcs.n	9cfa <error@@Base+0x3dca>
    9d20:	ldr	r3, [r0, #4]
    9d22:	cmp	r3, #0
    9d24:	beq.n	9cfa <error@@Base+0x3dca>
    9d26:	ldr	r3, [r0, #16]
    9d28:	cmp.w	r3, #134217728	; 0x8000000
    9d2c:	bhi.n	9cfa <error@@Base+0x3dca>
    9d2e:	ldr	r2, [r0, #20]
    9d30:	cmp	r3, r2
    9d32:	bcc.n	9cfa <error@@Base+0x3dca>
    9d34:	ldr	r3, [r0, #12]
    9d36:	cmp	r2, r3
    9d38:	bcc.n	9cfa <error@@Base+0x3dca>
    9d3a:	ldr	r2, [r0, #8]
    9d3c:	cmp	r3, r2
    9d3e:	bcc.n	9cfa <error@@Base+0x3dca>
    9d40:	cmp	r1, #0
    9d42:	beq.n	9cfa <error@@Base+0x3dca>
    9d44:	ldr	r3, [r1, #24]
    9d46:	cbnz	r3, 9d50 <error@@Base+0x3e20>
    9d48:	ldrd	r2, r3, [r1]
    9d4c:	cmp	r2, r3
    9d4e:	bne.n	9cfa <error@@Base+0x3dca>
    9d50:	ldr	r3, [r1, #32]
    9d52:	subs	r3, #1
    9d54:	cmp.w	r3, #1048576	; 0x100000
    9d58:	bcs.n	9cfa <error@@Base+0x3dca>
    9d5a:	ldr	r3, [r1, #4]
    9d5c:	cmp	r3, #0
    9d5e:	beq.n	9cfa <error@@Base+0x3dca>
    9d60:	ldr	r3, [r1, #16]
    9d62:	cmp.w	r3, #134217728	; 0x8000000
    9d66:	bhi.n	9cfa <error@@Base+0x3dca>
    9d68:	ldr	r2, [r1, #20]
    9d6a:	cmp	r3, r2
    9d6c:	bcc.n	9cfa <error@@Base+0x3dca>
    9d6e:	ldr	r3, [r1, #12]
    9d70:	cmp	r2, r3
    9d72:	bcc.n	9cfa <error@@Base+0x3dca>
    9d74:	ldr	r2, [r1, #8]
    9d76:	cmp	r3, r2
    9d78:	bcc.n	9cfa <error@@Base+0x3dca>
    9d7a:	str	r1, [r0, #36]	; 0x24
    9d7c:	movs	r0, #0
    9d7e:	ldr	r3, [r1, #32]
    9d80:	adds	r3, #1
    9d82:	str	r3, [r1, #32]
    9d84:	pop	{r3, pc}
    9d86:	nop
    9d88:	cbz	r0, 9db8 <error@@Base+0x3e88>
    9d8a:	push	{r3, r4, r5, lr}
    9d8c:	mov	r4, r0
    9d8e:	ldr	r3, [r0, #24]
    9d90:	cbz	r3, 9dae <error@@Base+0x3e7e>
    9d92:	ldr	r5, [r4, #32]
    9d94:	subs	r5, #1
    9d96:	cmp.w	r5, #1048576	; 0x100000
    9d9a:	bcc.n	9dba <error@@Base+0x3e8a>
    9d9c:	movs	r1, #0
    9d9e:	movs	r0, #11
    9da0:	bl	918c <error@@Base+0x325c>
    9da4:	ldmia.w	sp!, {r3, r4, r5, lr}
    9da8:	movs	r0, #11
    9daa:	b.w	1c38 <raise@plt>
    9dae:	ldrd	r2, r3, [r0]
    9db2:	cmp	r2, r3
    9db4:	bne.n	9d9c <error@@Base+0x3e6c>
    9db6:	b.n	9d92 <error@@Base+0x3e62>
    9db8:	bx	lr
    9dba:	ldr	r3, [r4, #4]
    9dbc:	cmp	r3, #0
    9dbe:	beq.n	9d9c <error@@Base+0x3e6c>
    9dc0:	ldr	r3, [r4, #16]
    9dc2:	cmp.w	r3, #134217728	; 0x8000000
    9dc6:	bhi.n	9d9c <error@@Base+0x3e6c>
    9dc8:	ldr	r2, [r4, #20]
    9dca:	cmp	r3, r2
    9dcc:	bcc.n	9d9c <error@@Base+0x3e6c>
    9dce:	ldr	r3, [r4, #12]
    9dd0:	cmp	r2, r3
    9dd2:	bcc.n	9d9c <error@@Base+0x3e6c>
    9dd4:	ldr	r2, [r4, #8]
    9dd6:	cmp	r3, r2
    9dd8:	bcc.n	9d9c <error@@Base+0x3e6c>
    9dda:	str	r5, [r4, #32]
    9ddc:	cbnz	r5, 9e00 <error@@Base+0x3ed0>
    9dde:	ldr	r0, [r4, #36]	; 0x24
    9de0:	bl	9d88 <error@@Base+0x3e58>
    9de4:	ldr	r3, [r4, #24]
    9de6:	str	r5, [r4, #36]	; 0x24
    9de8:	cbz	r3, 9e02 <error@@Base+0x3ed2>
    9dea:	mov	r0, r4
    9dec:	mov.w	r2, #4294967295	; 0xffffffff
    9df0:	movs	r1, #40	; 0x28
    9df2:	blx	1bd8 <__explicit_bzero_chk@plt+0x4>
    9df6:	mov	r0, r4
    9df8:	ldmia.w	sp!, {r3, r4, r5, lr}
    9dfc:	b.w	1ad8 <free@plt>
    9e00:	pop	{r3, r4, r5, pc}
    9e02:	ldr	r0, [r4, #0]
    9e04:	mov.w	r2, #4294967295	; 0xffffffff
    9e08:	ldr	r1, [r4, #20]
    9e0a:	blx	1bd8 <__explicit_bzero_chk@plt+0x4>
    9e0e:	ldr	r0, [r4, #0]
    9e10:	blx	1adc <free@plt+0x4>
    9e14:	b.n	9dea <error@@Base+0x3eba>
    9e16:	nop
    9e18:	push	{r4, r5, r6, lr}
    9e1a:	cbz	r0, 9e2c <error@@Base+0x3efc>
    9e1c:	ldr	r1, [r0, #24]
    9e1e:	mov	r4, r0
    9e20:	cbz	r1, 9e40 <error@@Base+0x3f10>
    9e22:	ldr	r3, [r4, #32]
    9e24:	subs	r3, #1
    9e26:	cmp.w	r3, #1048576	; 0x100000
    9e2a:	bcc.n	9e52 <error@@Base+0x3f22>
    9e2c:	movs	r1, #0
    9e2e:	movs	r0, #11
    9e30:	bl	918c <error@@Base+0x325c>
    9e34:	movs	r0, #11
    9e36:	blx	1c3c <raise@plt+0x4>
    9e3a:	movs	r5, #0
    9e3c:	mov	r0, r5
    9e3e:	pop	{r4, r5, r6, pc}
    9e40:	ldrd	r2, r3, [r0]
    9e44:	cmp	r2, r3
    9e46:	bne.n	9e2c <error@@Base+0x3efc>
    9e48:	ldr	r3, [r4, #32]
    9e4a:	subs	r3, #1
    9e4c:	cmp.w	r3, #1048576	; 0x100000
    9e50:	bcs.n	9e2c <error@@Base+0x3efc>
    9e52:	ldr	r3, [r4, #4]
    9e54:	cmp	r3, #0
    9e56:	beq.n	9e2c <error@@Base+0x3efc>
    9e58:	ldr	r2, [r4, #16]
    9e5a:	cmp.w	r2, #134217728	; 0x8000000
    9e5e:	bhi.n	9e2c <error@@Base+0x3efc>
    9e60:	ldr	r0, [r4, #20]
    9e62:	cmp	r2, r0
    9e64:	bcc.n	9e2c <error@@Base+0x3efc>
    9e66:	ldr	r6, [r4, #12]
    9e68:	cmp	r0, r6
    9e6a:	bcc.n	9e2c <error@@Base+0x3efc>
    9e6c:	ldr	r5, [r4, #8]
    9e6e:	cmp	r6, r5
    9e70:	bcc.n	9e2c <error@@Base+0x3efc>
    9e72:	cbz	r1, 9ec2 <error@@Base+0x3f92>
    9e74:	add	r5, r3
    9e76:	cmp.w	r2, #134217728	; 0x8000000
    9e7a:	bhi.n	9e92 <error@@Base+0x3f62>
    9e7c:	ldr	r3, [r4, #20]
    9e7e:	cmp	r2, r3
    9e80:	bcc.n	9e92 <error@@Base+0x3f62>
    9e82:	ldr	r1, [r4, #12]
    9e84:	cmp	r3, r1
    9e86:	bcc.n	9e92 <error@@Base+0x3f62>
    9e88:	ldr	r3, [r4, #8]
    9e8a:	cmp	r1, r3
    9e8c:	it	cs
    9e8e:	subcs	r1, r1, r3
    9e90:	bcs.n	9ea2 <error@@Base+0x3f72>
    9e92:	movs	r1, #0
    9e94:	movs	r0, #11
    9e96:	bl	918c <error@@Base+0x325c>
    9e9a:	movs	r0, #11
    9e9c:	blx	1c3c <raise@plt+0x4>
    9ea0:	movs	r1, #0
    9ea2:	mov	r0, r5
    9ea4:	bl	9cac <error@@Base+0x3d7c>
    9ea8:	mov	r5, r0
    9eaa:	cmp	r0, #0
    9eac:	beq.n	9e3c <error@@Base+0x3f0c>
    9eae:	mov	r1, r4
    9eb0:	bl	9ce8 <error@@Base+0x3db8>
    9eb4:	cmp	r0, #0
    9eb6:	beq.n	9e3c <error@@Base+0x3f0c>
    9eb8:	mov	r0, r5
    9eba:	movs	r5, #0
    9ebc:	bl	9d88 <error@@Base+0x3e58>
    9ec0:	b.n	9e3c <error@@Base+0x3f0c>
    9ec2:	ldr	r2, [r4, #0]
    9ec4:	cmp	r3, r2
    9ec6:	beq.n	9ee4 <error@@Base+0x3fb4>
    9ec8:	movs	r0, #11
    9eca:	bl	918c <error@@Base+0x325c>
    9ece:	movs	r0, #11
    9ed0:	blx	1c3c <raise@plt+0x4>
    9ed4:	ldr	r3, [r4, #24]
    9ed6:	cbnz	r3, 9eee <error@@Base+0x3fbe>
    9ed8:	ldrd	r2, r3, [r4]
    9edc:	cmp	r3, r2
    9ede:	beq.n	9eee <error@@Base+0x3fbe>
    9ee0:	movs	r5, #0
    9ee2:	b.n	9e92 <error@@Base+0x3f62>
    9ee4:	add	r5, r3
    9ee6:	cmp	r3, #0
    9ee8:	beq.n	9e92 <error@@Base+0x3f62>
    9eea:	ldr	r2, [r4, #16]
    9eec:	b.n	9e76 <error@@Base+0x3f46>
    9eee:	ldr	r3, [r4, #32]
    9ef0:	subs	r3, #1
    9ef2:	cmp.w	r3, #1048576	; 0x100000
    9ef6:	bcs.n	9ee0 <error@@Base+0x3fb0>
    9ef8:	ldr	r3, [r4, #4]
    9efa:	movs	r5, #0
    9efc:	b.n	9ee6 <error@@Base+0x3fb6>
    9efe:	nop
    9f00:	push	{r4, lr}
    9f02:	mov	r4, r0
    9f04:	ldr	r3, [r0, #24]
    9f06:	cbnz	r3, 9f0e <error@@Base+0x3fde>
    9f08:	ldr	r3, [r0, #32]
    9f0a:	cmp	r3, #1
    9f0c:	bls.n	9f14 <error@@Base+0x3fe4>
    9f0e:	ldr	r3, [r4, #12]
    9f10:	str	r3, [r4, #8]
    9f12:	pop	{r4, pc}
    9f14:	ldrd	r0, r2, [r0]
    9f18:	eor.w	r3, r3, #1
    9f1c:	and.w	r3, r3, #1
    9f20:	cmp	r0, r2
    9f22:	it	ne
    9f24:	orrne.w	r3, r3, #1
    9f28:	cbz	r3, 9f74 <error@@Base+0x4044>
    9f2a:	movs	r1, #0
    9f2c:	movs	r0, #11
    9f2e:	bl	918c <error@@Base+0x325c>
    9f32:	movs	r0, #11
    9f34:	blx	1c3c <raise@plt+0x4>
    9f38:	ldr	r1, [r4, #20]
    9f3a:	ldr	r0, [r4, #0]
    9f3c:	cmp.w	r1, #256	; 0x100
    9f40:	mov.w	r3, #0
    9f44:	strd	r3, r3, [r4, #8]
    9f48:	beq.n	9f60 <error@@Base+0x4030>
    9f4a:	movs	r3, #1
    9f4c:	mov.w	r2, #256	; 0x100
    9f50:	bl	c6ec <setlogin@@Base+0x8e4>
    9f54:	cbz	r0, 9f70 <error@@Base+0x4040>
    9f56:	mov.w	r3, #256	; 0x100
    9f5a:	str	r0, [r4, #0]
    9f5c:	str	r0, [r4, #4]
    9f5e:	str	r3, [r4, #20]
    9f60:	ldmia.w	sp!, {r4, lr}
    9f64:	mov.w	r2, #4294967295	; 0xffffffff
    9f68:	mov.w	r1, #256	; 0x100
    9f6c:	b.w	1bd4 <__explicit_bzero_chk@plt>
    9f70:	ldr	r0, [r4, #0]
    9f72:	b.n	9f60 <error@@Base+0x4030>
    9f74:	cmp	r2, #0
    9f76:	beq.n	9f2a <error@@Base+0x3ffa>
    9f78:	ldr	r3, [r4, #16]
    9f7a:	cmp.w	r3, #134217728	; 0x8000000
    9f7e:	bhi.n	9f2a <error@@Base+0x3ffa>
    9f80:	ldr	r1, [r4, #20]
    9f82:	cmp	r3, r1
    9f84:	bcc.n	9f2a <error@@Base+0x3ffa>
    9f86:	ldr	r3, [r4, #12]
    9f88:	cmp	r1, r3
    9f8a:	bcc.n	9f2a <error@@Base+0x3ffa>
    9f8c:	ldr	r2, [r4, #8]
    9f8e:	cmp	r3, r2
    9f90:	bcs.n	9f3c <error@@Base+0x400c>
    9f92:	b.n	9f2a <error@@Base+0x3ffa>
    9f94:	ldr	r0, [r0, #16]
    9f96:	bx	lr
    9f98:	ldr	r0, [r0, #20]
    9f9a:	bx	lr
    9f9c:	ldr	r0, [r0, #36]	; 0x24
    9f9e:	bx	lr
    9fa0:	ldr	r0, [r0, #32]
    9fa2:	bx	lr
    9fa4:	push	{r3, r4, r5, r6, r7, lr}
    9fa6:	cbz	r0, 9fba <error@@Base+0x408a>
    9fa8:	ldr	r5, [r0, #24]
    9faa:	mov	r6, r1
    9fac:	mov	r4, r0
    9fae:	cbz	r5, 9fd0 <error@@Base+0x40a0>
    9fb0:	ldr	r3, [r4, #32]
    9fb2:	subs	r2, r3, #1
    9fb4:	cmp.w	r2, #1048576	; 0x100000
    9fb8:	bcc.n	9fe2 <error@@Base+0x40b2>
    9fba:	movs	r1, #0
    9fbc:	movs	r0, #11
    9fbe:	bl	918c <error@@Base+0x325c>
    9fc2:	movs	r0, #11
    9fc4:	blx	1c3c <raise@plt+0x4>
    9fc8:	mov.w	r5, #4294967295	; 0xffffffff
    9fcc:	mov	r0, r5
    9fce:	pop	{r3, r4, r5, r6, r7, pc}
    9fd0:	ldrd	r2, r3, [r0]
    9fd4:	cmp	r2, r3
    9fd6:	bne.n	9fba <error@@Base+0x408a>
    9fd8:	ldr	r3, [r4, #32]
    9fda:	subs	r2, r3, #1
    9fdc:	cmp.w	r2, #1048576	; 0x100000
    9fe0:	bcs.n	9fba <error@@Base+0x408a>
    9fe2:	ldr	r2, [r4, #4]
    9fe4:	cmp	r2, #0
    9fe6:	beq.n	9fba <error@@Base+0x408a>
    9fe8:	ldr	r2, [r4, #16]
    9fea:	cmp.w	r2, #134217728	; 0x8000000
    9fee:	bhi.n	9fba <error@@Base+0x408a>
    9ff0:	ldr	r0, [r4, #20]
    9ff2:	cmp	r2, r0
    9ff4:	bcc.n	9fba <error@@Base+0x408a>
    9ff6:	ldr	r1, [r4, #12]
    9ff8:	cmp	r0, r1
    9ffa:	bcc.n	9fba <error@@Base+0x408a>
    9ffc:	ldr	r0, [r4, #8]
    9ffe:	cmp	r1, r0
    a000:	bcc.n	9fba <error@@Base+0x408a>
    a002:	cmp	r6, r2
    a004:	beq.n	a060 <error@@Base+0x4130>
    a006:	cbnz	r5, a06e <error@@Base+0x413e>
    a008:	cmp	r3, #1
    a00a:	bne.n	a06e <error@@Base+0x413e>
    a00c:	cmp.w	r6, #134217728	; 0x8000000
    a010:	bhi.n	a066 <error@@Base+0x4136>
    a012:	cmp	r6, r1
    a014:	mov	r0, r4
    a016:	ite	cs
    a018:	movcs	r1, #0
    a01a:	movcc	r1, #1
    a01c:	bl	9c2c <error@@Base+0x3cfc>
    a020:	ldr	r1, [r4, #20]
    a022:	cmp	r1, r6
    a024:	bls.n	a05a <error@@Base+0x412a>
    a026:	ldr	r7, [r4, #12]
    a028:	cmp	r7, r6
    a02a:	bcs.n	a066 <error@@Base+0x4136>
    a02c:	cmp	r7, #255	; 0xff
    a02e:	ldr	r0, [r4, #0]
    a030:	it	hi
    a032:	addhi	r7, #255	; 0xff
    a034:	mov.w	r3, #1
    a038:	ite	hi
    a03a:	bichi.w	r7, r7, #255	; 0xff
    a03e:	movls.w	r7, #256	; 0x100
    a042:	cmp	r7, r6
    a044:	it	cs
    a046:	movcs	r7, r6
    a048:	mov	r2, r7
    a04a:	bl	c6ec <setlogin@@Base+0x8e4>
    a04e:	cbz	r0, a074 <error@@Base+0x4144>
    a050:	cmp	r7, r6
    a052:	strd	r0, r0, [r4]
    a056:	str	r7, [r4, #20]
    a058:	bhi.n	a066 <error@@Base+0x4136>
    a05a:	mov	r0, r5
    a05c:	str	r6, [r4, #16]
    a05e:	pop	{r3, r4, r5, r6, r7, pc}
    a060:	movs	r5, #0
    a062:	mov	r0, r5
    a064:	pop	{r3, r4, r5, r6, r7, pc}
    a066:	mvn.w	r5, #8
    a06a:	mov	r0, r5
    a06c:	pop	{r3, r4, r5, r6, r7, pc}
    a06e:	mvn.w	r5, #48	; 0x30
    a072:	b.n	9fcc <error@@Base+0x409c>
    a074:	mvn.w	r5, #1
    a078:	b.n	9fcc <error@@Base+0x409c>
    a07a:	nop
    a07c:	push	{r3, lr}
    a07e:	cbz	r0, a08e <error@@Base+0x415e>
    a080:	ldr	r3, [r0, #24]
    a082:	cbz	r3, a0a0 <error@@Base+0x4170>
    a084:	ldr	r3, [r0, #32]
    a086:	subs	r3, #1
    a088:	cmp.w	r3, #1048576	; 0x100000
    a08c:	bcc.n	a0b2 <error@@Base+0x4182>
    a08e:	movs	r1, #0
    a090:	movs	r0, #11
    a092:	bl	918c <error@@Base+0x325c>
    a096:	movs	r0, #11
    a098:	blx	1c3c <raise@plt+0x4>
    a09c:	movs	r0, #0
    a09e:	pop	{r3, pc}
    a0a0:	ldrd	r2, r3, [r0]
    a0a4:	cmp	r2, r3
    a0a6:	bne.n	a08e <error@@Base+0x415e>
    a0a8:	ldr	r3, [r0, #32]
    a0aa:	subs	r3, #1
    a0ac:	cmp.w	r3, #1048576	; 0x100000
    a0b0:	bcs.n	a08e <error@@Base+0x415e>
    a0b2:	ldr	r3, [r0, #4]
    a0b4:	cmp	r3, #0
    a0b6:	beq.n	a08e <error@@Base+0x415e>
    a0b8:	ldr	r3, [r0, #16]
    a0ba:	cmp.w	r3, #134217728	; 0x8000000
    a0be:	bhi.n	a08e <error@@Base+0x415e>
    a0c0:	ldr	r2, [r0, #20]
    a0c2:	cmp	r3, r2
    a0c4:	bcc.n	a08e <error@@Base+0x415e>
    a0c6:	ldr	r3, [r0, #12]
    a0c8:	cmp	r2, r3
    a0ca:	bcc.n	a08e <error@@Base+0x415e>
    a0cc:	ldr	r0, [r0, #8]
    a0ce:	cmp	r3, r0
    a0d0:	it	cs
    a0d2:	subcs	r0, r3, r0
    a0d4:	bcc.n	a08e <error@@Base+0x415e>
    a0d6:	pop	{r3, pc}
    a0d8:	push	{r3, r4, r5, lr}
    a0da:	cbz	r0, a0ea <error@@Base+0x41ba>
    a0dc:	ldr	r3, [r0, #24]
    a0de:	cbz	r3, a0fc <error@@Base+0x41cc>
    a0e0:	ldr	r2, [r0, #32]
    a0e2:	subs	r1, r2, #1
    a0e4:	cmp.w	r1, #1048576	; 0x100000
    a0e8:	bcc.n	a10e <error@@Base+0x41de>
    a0ea:	movs	r1, #0
    a0ec:	movs	r0, #11
    a0ee:	bl	918c <error@@Base+0x325c>
    a0f2:	movs	r0, #11
    a0f4:	blx	1c3c <raise@plt+0x4>
    a0f8:	movs	r0, #0
    a0fa:	pop	{r3, r4, r5, pc}
    a0fc:	ldrd	r1, r2, [r0]
    a100:	cmp	r1, r2
    a102:	bne.n	a0ea <error@@Base+0x41ba>
    a104:	ldr	r2, [r0, #32]
    a106:	subs	r1, r2, #1
    a108:	cmp.w	r1, #1048576	; 0x100000
    a10c:	bcs.n	a0ea <error@@Base+0x41ba>
    a10e:	ldr	r1, [r0, #4]
    a110:	cmp	r1, #0
    a112:	beq.n	a0ea <error@@Base+0x41ba>
    a114:	ldr	r1, [r0, #16]
    a116:	cmp.w	r1, #134217728	; 0x8000000
    a11a:	bhi.n	a0ea <error@@Base+0x41ba>
    a11c:	ldr	r5, [r0, #20]
    a11e:	cmp	r1, r5
    a120:	bcc.n	a0ea <error@@Base+0x41ba>
    a122:	ldr	r4, [r0, #12]
    a124:	cmp	r5, r4
    a126:	bcc.n	a0ea <error@@Base+0x41ba>
    a128:	ldr	r0, [r0, #8]
    a12a:	cmp	r4, r0
    a12c:	bcc.n	a0ea <error@@Base+0x41ba>
    a12e:	cbnz	r3, a13e <error@@Base+0x420e>
    a130:	cmp	r2, #1
    a132:	itt	eq
    a134:	addeq	r0, r0, r1
    a136:	subeq	r0, r0, r4
    a138:	beq.n	a0fa <error@@Base+0x41ca>
    a13a:	mov	r0, r3
    a13c:	pop	{r3, r4, r5, pc}
    a13e:	movs	r0, #0
    a140:	pop	{r3, r4, r5, pc}
    a142:	nop
    a144:	push	{r3, lr}
    a146:	cbz	r0, a156 <error@@Base+0x4226>
    a148:	ldr	r3, [r0, #24]
    a14a:	cbz	r3, a168 <error@@Base+0x4238>
    a14c:	ldr	r3, [r0, #32]
    a14e:	subs	r3, #1
    a150:	cmp.w	r3, #1048576	; 0x100000
    a154:	bcc.n	a17a <error@@Base+0x424a>
    a156:	movs	r1, #0
    a158:	movs	r0, #11
    a15a:	bl	918c <error@@Base+0x325c>
    a15e:	movs	r0, #11
    a160:	blx	1c3c <raise@plt+0x4>
    a164:	movs	r0, #0
    a166:	pop	{r3, pc}
    a168:	ldrd	r2, r3, [r0]
    a16c:	cmp	r2, r3
    a16e:	bne.n	a156 <error@@Base+0x4226>
    a170:	ldr	r3, [r0, #32]
    a172:	subs	r3, #1
    a174:	cmp.w	r3, #1048576	; 0x100000
    a178:	bcs.n	a156 <error@@Base+0x4226>
    a17a:	ldr	r3, [r0, #4]
    a17c:	cmp	r3, #0
    a17e:	beq.n	a156 <error@@Base+0x4226>
    a180:	ldr	r2, [r0, #16]
    a182:	cmp.w	r2, #134217728	; 0x8000000
    a186:	bhi.n	a156 <error@@Base+0x4226>
    a188:	ldr	r1, [r0, #20]
    a18a:	cmp	r2, r1
    a18c:	bcc.n	a156 <error@@Base+0x4226>
    a18e:	ldr	r2, [r0, #12]
    a190:	cmp	r1, r2
    a192:	bcc.n	a156 <error@@Base+0x4226>
    a194:	ldr	r0, [r0, #8]
    a196:	cmp	r2, r0
    a198:	it	cs
    a19a:	addcs	r0, r0, r3
    a19c:	bcc.n	a156 <error@@Base+0x4226>
    a19e:	pop	{r3, pc}
    a1a0:	push	{r3, r4, r5, lr}
    a1a2:	cbz	r0, a1b2 <error@@Base+0x4282>
    a1a4:	ldr	r3, [r0, #24]
    a1a6:	cbz	r3, a1c4 <error@@Base+0x4294>
    a1a8:	ldr	r2, [r0, #32]
    a1aa:	subs	r1, r2, #1
    a1ac:	cmp.w	r1, #1048576	; 0x100000
    a1b0:	bcc.n	a1d6 <error@@Base+0x42a6>
    a1b2:	movs	r1, #0
    a1b4:	movs	r0, #11
    a1b6:	bl	918c <error@@Base+0x325c>
    a1ba:	movs	r0, #11
    a1bc:	blx	1c3c <raise@plt+0x4>
    a1c0:	movs	r0, #0
    a1c2:	pop	{r3, r4, r5, pc}
    a1c4:	ldrd	r1, r2, [r0]
    a1c8:	cmp	r1, r2
    a1ca:	bne.n	a1b2 <error@@Base+0x4282>
    a1cc:	ldr	r2, [r0, #32]
    a1ce:	subs	r1, r2, #1
    a1d0:	cmp.w	r1, #1048576	; 0x100000
    a1d4:	bcs.n	a1b2 <error@@Base+0x4282>
    a1d6:	ldr	r1, [r0, #4]
    a1d8:	cmp	r1, #0
    a1da:	beq.n	a1b2 <error@@Base+0x4282>
    a1dc:	ldr	r1, [r0, #16]
    a1de:	cmp.w	r1, #134217728	; 0x8000000
    a1e2:	bhi.n	a1b2 <error@@Base+0x4282>
    a1e4:	ldr	r4, [r0, #20]
    a1e6:	cmp	r1, r4
    a1e8:	bcc.n	a1b2 <error@@Base+0x4282>
    a1ea:	ldr	r5, [r0, #12]
    a1ec:	cmp	r4, r5
    a1ee:	bcc.n	a1b2 <error@@Base+0x4282>
    a1f0:	ldr	r1, [r0, #8]
    a1f2:	cmp	r5, r1
    a1f4:	bcc.n	a1b2 <error@@Base+0x4282>
    a1f6:	cbnz	r3, a206 <error@@Base+0x42d6>
    a1f8:	cmp	r2, #1
    a1fa:	it	ne
    a1fc:	movne	r0, r3
    a1fe:	bne.n	a1c2 <error@@Base+0x4292>
    a200:	ldr	r0, [r0, #0]
    a202:	add	r0, r1
    a204:	pop	{r3, r4, r5, pc}
    a206:	movs	r0, #0
    a208:	pop	{r3, r4, r5, pc}
    a20a:	nop
    a20c:	push	{r4, r5, r6, lr}
    a20e:	cbz	r0, a21e <error@@Base+0x42ee>
    a210:	ldr	r3, [r0, #24]
    a212:	cbz	r3, a234 <error@@Base+0x4304>
    a214:	ldr	r5, [r0, #32]
    a216:	subs	r2, r5, #1
    a218:	cmp.w	r2, #1048576	; 0x100000
    a21c:	bcc.n	a246 <error@@Base+0x4316>
    a21e:	movs	r1, #0
    a220:	movs	r0, #11
    a222:	bl	918c <error@@Base+0x325c>
    a226:	movs	r0, #11
    a228:	blx	1c3c <raise@plt+0x4>
    a22c:	mov.w	r3, #4294967295	; 0xffffffff
    a230:	mov	r0, r3
    a232:	pop	{r4, r5, r6, pc}
    a234:	ldrd	r4, r2, [r0]
    a238:	cmp	r4, r2
    a23a:	bne.n	a21e <error@@Base+0x42ee>
    a23c:	ldr	r5, [r0, #32]
    a23e:	subs	r2, r5, #1
    a240:	cmp.w	r2, #1048576	; 0x100000
    a244:	bcs.n	a21e <error@@Base+0x42ee>
    a246:	ldr	r2, [r0, #4]
    a248:	cmp	r2, #0
    a24a:	beq.n	a21e <error@@Base+0x42ee>
    a24c:	ldr	r2, [r0, #16]
    a24e:	cmp.w	r2, #134217728	; 0x8000000
    a252:	bhi.n	a21e <error@@Base+0x42ee>
    a254:	ldr	r6, [r0, #20]
    a256:	cmp	r2, r6
    a258:	bcc.n	a21e <error@@Base+0x42ee>
    a25a:	ldr	r4, [r0, #12]
    a25c:	cmp	r6, r4
    a25e:	bcc.n	a21e <error@@Base+0x42ee>
    a260:	ldr	r0, [r0, #8]
    a262:	cmp	r4, r0
    a264:	bcc.n	a21e <error@@Base+0x42ee>
    a266:	cbnz	r3, a280 <error@@Base+0x4350>
    a268:	cmp	r5, #1
    a26a:	bne.n	a280 <error@@Base+0x4350>
    a26c:	cmp	r1, r2
    a26e:	bhi.n	a286 <error@@Base+0x4356>
    a270:	subs	r1, r2, r1
    a272:	subs	r2, r4, r0
    a274:	cmp	r1, r2
    a276:	it	cc
    a278:	mvncc.w	r3, #8
    a27c:	mov	r0, r3
    a27e:	pop	{r4, r5, r6, pc}
    a280:	mvn.w	r3, #48	; 0x30
    a284:	b.n	a230 <error@@Base+0x4300>
    a286:	mvn.w	r3, #8
    a28a:	b.n	a230 <error@@Base+0x4300>
    a28c:	push	{r4, r5, r6, lr}
    a28e:	mov	r4, r0
    a290:	mov	r6, r1
    a292:	bl	a20c <error@@Base+0x42dc>
    a296:	mov	r5, r0
    a298:	cbz	r0, a29e <error@@Base+0x436e>
    a29a:	mov	r0, r5
    a29c:	pop	{r4, r5, r6, pc}
    a29e:	ldr	r3, [r4, #12]
    a2a0:	mov	r0, r4
    a2a2:	ldr	r1, [r4, #16]
    a2a4:	add	r3, r6
    a2a6:	cmp	r3, r1
    a2a8:	ite	ls
    a2aa:	movls	r1, #0
    a2ac:	movhi	r1, #1
    a2ae:	bl	9c2c <error@@Base+0x3cfc>
    a2b2:	ldr	r3, [r4, #12]
    a2b4:	ldr	r1, [r4, #20]
    a2b6:	add	r3, r6
    a2b8:	cmp	r3, r1
    a2ba:	bls.n	a29a <error@@Base+0x436a>
    a2bc:	ldr	r2, [r4, #16]
    a2be:	add.w	r5, r3, #255	; 0xff
    a2c2:	bic.w	r5, r5, #255	; 0xff
    a2c6:	ldr	r0, [r4, #0]
    a2c8:	cmp	r5, r2
    a2ca:	it	hi
    a2cc:	movhi	r5, r3
    a2ce:	movs	r3, #1
    a2d0:	mov	r2, r5
    a2d2:	bl	c6ec <setlogin@@Base+0x8e4>
    a2d6:	mov	r3, r0
    a2d8:	cbz	r0, a2f0 <error@@Base+0x43c0>
    a2da:	str	r5, [r4, #20]
    a2dc:	mov	r1, r6
    a2de:	str	r0, [r4, #0]
    a2e0:	mov	r0, r4
    a2e2:	str	r3, [r4, #4]
    a2e4:	bl	a20c <error@@Base+0x42dc>
    a2e8:	and.w	r5, r0, r0, asr #31
    a2ec:	mov	r0, r5
    a2ee:	pop	{r4, r5, r6, pc}
    a2f0:	mvn.w	r5, #1
    a2f4:	b.n	a29a <error@@Base+0x436a>
    a2f6:	nop
    a2f8:	push	{r4, r5, r6, lr}
    a2fa:	mov	r5, r0
    a2fc:	mov	r6, r1
    a2fe:	cbz	r2, a31a <error@@Base+0x43ea>
    a300:	movs	r3, #0
    a302:	str	r3, [r2, #0]
    a304:	mov	r4, r2
    a306:	bl	a28c <error@@Base+0x435c>
    a30a:	cbnz	r0, a318 <error@@Base+0x43e8>
    a30c:	ldr	r2, [r5, #12]
    a30e:	ldr	r3, [r5, #0]
    a310:	add	r6, r2
    a312:	str	r6, [r5, #12]
    a314:	add	r3, r2
    a316:	str	r3, [r4, #0]
    a318:	pop	{r4, r5, r6, pc}
    a31a:	bl	a28c <error@@Base+0x435c>
    a31e:	cmp	r0, #0
    a320:	bne.n	a318 <error@@Base+0x43e8>
    a322:	ldr	r1, [r5, #12]
    a324:	add	r1, r6
    a326:	str	r1, [r5, #12]
    a328:	pop	{r4, r5, r6, pc}
    a32a:	nop
    a32c:	push	{r4, r5, r6, lr}
    a32e:	cbz	r0, a342 <error@@Base+0x4412>
    a330:	ldr	r6, [r0, #24]
    a332:	mov	r5, r1
    a334:	mov	r4, r0
    a336:	cbz	r6, a356 <error@@Base+0x4426>
    a338:	ldr	r3, [r4, #32]
    a33a:	subs	r3, #1
    a33c:	cmp.w	r3, #1048576	; 0x100000
    a340:	bcc.n	a368 <error@@Base+0x4438>
    a342:	movs	r1, #0
    a344:	movs	r0, #11
    a346:	bl	918c <error@@Base+0x325c>
    a34a:	movs	r0, #11
    a34c:	blx	1c3c <raise@plt+0x4>
    a350:	mov.w	r0, #4294967295	; 0xffffffff
    a354:	pop	{r4, r5, r6, pc}
    a356:	ldrd	r2, r3, [r0]
    a35a:	cmp	r2, r3
    a35c:	bne.n	a342 <error@@Base+0x4412>
    a35e:	ldr	r3, [r4, #32]
    a360:	subs	r3, #1
    a362:	cmp.w	r3, #1048576	; 0x100000
    a366:	bcs.n	a342 <error@@Base+0x4412>
    a368:	ldr	r3, [r4, #4]
    a36a:	cmp	r3, #0
    a36c:	beq.n	a342 <error@@Base+0x4412>
    a36e:	ldr	r2, [r4, #16]
    a370:	cmp.w	r2, #134217728	; 0x8000000
    a374:	bhi.n	a342 <error@@Base+0x4412>
    a376:	ldr	r0, [r4, #20]
    a378:	cmp	r2, r0
    a37a:	bcc.n	a342 <error@@Base+0x4412>
    a37c:	ldr	r1, [r4, #12]
    a37e:	cmp	r0, r1
    a380:	bcc.n	a342 <error@@Base+0x4412>
    a382:	ldr	r2, [r4, #8]
    a384:	cmp	r1, r2
    a386:	bcc.n	a342 <error@@Base+0x4412>
    a388:	cbz	r5, a3b0 <error@@Base+0x4480>
    a38a:	cbnz	r6, a3b4 <error@@Base+0x4484>
    a38c:	ldr	r0, [r4, #0]
    a38e:	cmp	r3, r0
    a390:	beq.n	a3b4 <error@@Base+0x4484>
    a392:	mov	r1, r6
    a394:	movs	r0, #11
    a396:	bl	918c <error@@Base+0x325c>
    a39a:	movs	r0, #11
    a39c:	blx	1c3c <raise@plt+0x4>
    a3a0:	cmp	r5, r6
    a3a2:	bhi.n	a3c0 <error@@Base+0x4490>
    a3a4:	ldrd	r1, r3, [r4, #8]
    a3a8:	add	r5, r1
    a3aa:	str	r5, [r4, #8]
    a3ac:	cmp	r5, r3
    a3ae:	beq.n	a3b8 <error@@Base+0x4488>
    a3b0:	movs	r0, #0
    a3b2:	pop	{r4, r5, r6, pc}
    a3b4:	subs	r6, r1, r2
    a3b6:	b.n	a3a0 <error@@Base+0x4470>
    a3b8:	movs	r0, #0
    a3ba:	strd	r0, r0, [r4, #8]
    a3be:	pop	{r4, r5, r6, pc}
    a3c0:	mvn.w	r0, #2
    a3c4:	pop	{r4, r5, r6, pc}
    a3c6:	nop
    a3c8:	push	{r4, r5, r6, lr}
    a3ca:	cbz	r0, a3de <error@@Base+0x44ae>
    a3cc:	ldr	r6, [r0, #24]
    a3ce:	mov	r5, r1
    a3d0:	mov	r4, r0
    a3d2:	cbz	r6, a3f2 <error@@Base+0x44c2>
    a3d4:	ldr	r3, [r4, #32]
    a3d6:	subs	r3, #1
    a3d8:	cmp.w	r3, #1048576	; 0x100000
    a3dc:	bcc.n	a404 <error@@Base+0x44d4>
    a3de:	movs	r1, #0
    a3e0:	movs	r0, #11
    a3e2:	bl	918c <error@@Base+0x325c>
    a3e6:	movs	r0, #11
    a3e8:	blx	1c3c <raise@plt+0x4>
    a3ec:	mov.w	r0, #4294967295	; 0xffffffff
    a3f0:	pop	{r4, r5, r6, pc}
    a3f2:	ldrd	r2, r3, [r0]
    a3f6:	cmp	r2, r3
    a3f8:	bne.n	a3de <error@@Base+0x44ae>
    a3fa:	ldr	r3, [r4, #32]
    a3fc:	subs	r3, #1
    a3fe:	cmp.w	r3, #1048576	; 0x100000
    a402:	bcs.n	a3de <error@@Base+0x44ae>
    a404:	ldr	r3, [r4, #4]
    a406:	cmp	r3, #0
    a408:	beq.n	a3de <error@@Base+0x44ae>
    a40a:	ldr	r2, [r4, #16]
    a40c:	cmp.w	r2, #134217728	; 0x8000000
    a410:	bhi.n	a3de <error@@Base+0x44ae>
    a412:	ldr	r0, [r4, #20]
    a414:	cmp	r2, r0
    a416:	bcc.n	a3de <error@@Base+0x44ae>
    a418:	ldr	r1, [r4, #12]
    a41a:	cmp	r0, r1
    a41c:	bcc.n	a3de <error@@Base+0x44ae>
    a41e:	ldr	r2, [r4, #8]
    a420:	cmp	r1, r2
    a422:	bcc.n	a3de <error@@Base+0x44ae>
    a424:	mov	r0, r5
    a426:	cmp	r5, #0
    a428:	beq.n	a3f0 <error@@Base+0x44c0>
    a42a:	cbnz	r6, a454 <error@@Base+0x4524>
    a42c:	ldr	r0, [r4, #0]
    a42e:	cmp	r3, r0
    a430:	beq.n	a454 <error@@Base+0x4524>
    a432:	mov	r1, r6
    a434:	movs	r0, #11
    a436:	bl	918c <error@@Base+0x325c>
    a43a:	movs	r0, #11
    a43c:	blx	1c3c <raise@plt+0x4>
    a440:	cmp	r5, r6
    a442:	ittet	ls
    a444:	ldrls	r1, [r4, #12]
    a446:	movls	r0, #0
    a448:	mvnhi.w	r0, #2
    a44c:	subls	r1, r1, r5
    a44e:	it	ls
    a450:	strls	r1, [r4, #12]
    a452:	pop	{r4, r5, r6, pc}
    a454:	subs	r6, r1, r2
    a456:	b.n	a440 <error@@Base+0x4510>
    a458:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a45c:	movs	r7, #0
    a45e:	str	r7, [r3, #0]
    a460:	mov	r6, r3
    a462:	mov	r5, r1
    a464:	mov	r4, r2
    a466:	mov	r8, r0
    a468:	bl	a144 <error@@Base+0x4214>
    a46c:	cbz	r0, a49e <error@@Base+0x456e>
    a46e:	mvns	r3, r4
    a470:	cmp	r5, r3
    a472:	bcs.n	a498 <error@@Base+0x4568>
    a474:	mov	r0, r8
    a476:	add	r4, r5
    a478:	bl	a07c <error@@Base+0x414c>
    a47c:	cmp	r4, r0
    a47e:	it	hi
    a480:	mvnhi.w	r0, #2
    a484:	bhi.n	a494 <error@@Base+0x4564>
    a486:	mov	r0, r8
    a488:	bl	a144 <error@@Base+0x4214>
    a48c:	mov	r1, r0
    a48e:	mov	r0, r7
    a490:	add	r5, r1
    a492:	str	r5, [r6, #0]
    a494:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    a498:	mvn.w	r0, #9
    a49c:	b.n	a494 <error@@Base+0x4564>
    a49e:	mov.w	r0, #4294967295	; 0xffffffff
    a4a2:	b.n	a494 <error@@Base+0x4564>
    a4a4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a4a8:	mov.w	r8, #0
    a4ac:	str.w	r8, [r3]
    a4b0:	mov	r7, r3
    a4b2:	mov	r5, r1
    a4b4:	mov	r4, r2
    a4b6:	mov	r6, r0
    a4b8:	bl	a144 <error@@Base+0x4214>
    a4bc:	cbz	r0, a4fc <error@@Base+0x45cc>
    a4be:	mvns	r3, r4
    a4c0:	cmp	r5, r3
    a4c2:	bcs.n	a4f0 <error@@Base+0x45c0>
    a4c4:	mov	r0, r6
    a4c6:	add	r4, r5
    a4c8:	bl	a07c <error@@Base+0x414c>
    a4cc:	cmp	r4, r0
    a4ce:	it	hi
    a4d0:	mvnhi.w	r0, #8
    a4d4:	bhi.n	a4ec <error@@Base+0x45bc>
    a4d6:	mov	r0, r6
    a4d8:	bl	a1a0 <error@@Base+0x4270>
    a4dc:	cbz	r0, a4f6 <error@@Base+0x45c6>
    a4de:	mov	r0, r6
    a4e0:	bl	a1a0 <error@@Base+0x4270>
    a4e4:	mov	r1, r0
    a4e6:	mov	r0, r8
    a4e8:	add	r5, r1
    a4ea:	str	r5, [r7, #0]
    a4ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    a4f0:	mvn.w	r0, #9
    a4f4:	b.n	a4ec <error@@Base+0x45bc>
    a4f6:	mvn.w	r0, #48	; 0x30
    a4fa:	b.n	a4ec <error@@Base+0x45bc>
    a4fc:	mov.w	r0, #4294967295	; 0xffffffff
    a500:	b.n	a4ec <error@@Base+0x45bc>
    a502:	nop
    a504:	push	{r4, r5, r6, lr}
    a506:	mov	r4, r2
    a508:	mov	r5, r0
    a50a:	mov	r6, r1
    a50c:	bl	a144 <error@@Base+0x4214>
    a510:	mov	r1, r4
    a512:	mov	r3, r0
    a514:	mov	r0, r5
    a516:	mov	r5, r3
    a518:	bl	a32c <error@@Base+0x43fc>
    a51c:	cmp	r0, #0
    a51e:	blt.n	a530 <error@@Base+0x4600>
    a520:	subs	r3, r4, #0
    a522:	it	ne
    a524:	movne	r3, #1
    a526:	cmp	r6, #0
    a528:	ite	ne
    a52a:	movne	r0, r3
    a52c:	moveq	r0, #0
    a52e:	cbnz	r0, a532 <error@@Base+0x4602>
    a530:	pop	{r4, r5, r6, pc}
    a532:	mov	r2, r4
    a534:	mov	r1, r5
    a536:	mov	r0, r6
    a538:	blx	1b84 <memcpy@plt>
    a53c:	movs	r0, #0
    a53e:	pop	{r4, r5, r6, pc}
    a540:	push	{r4, r5, r6, lr}
    a542:	mov	r6, r0
    a544:	mov	r4, r1
    a546:	bl	a144 <error@@Base+0x4214>
    a54a:	movs	r1, #8
    a54c:	mov	r5, r0
    a54e:	mov	r0, r6
    a550:	bl	a32c <error@@Base+0x43fc>
    a554:	cmp	r0, #0
    a556:	blt.n	a56a <error@@Base+0x463a>
    a558:	mov	r0, r4
    a55a:	cbz	r4, a56a <error@@Base+0x463a>
    a55c:	ldr	r2, [r5, #0]
    a55e:	movs	r0, #0
    a560:	ldr	r3, [r5, #4]
    a562:	rev	r2, r2
    a564:	str	r2, [r4, #4]
    a566:	rev	r3, r3
    a568:	str	r3, [r4, #0]
    a56a:	pop	{r4, r5, r6, pc}
    a56c:	push	{r3, r4, r5, lr}
    a56e:	mov	r5, r0
    a570:	mov	r4, r1
    a572:	bl	a144 <error@@Base+0x4214>
    a576:	movs	r1, #4
    a578:	mov	r3, r0
    a57a:	mov	r0, r5
    a57c:	mov	r5, r3
    a57e:	bl	a32c <error@@Base+0x43fc>
    a582:	cmp	r0, #0
    a584:	blt.n	a592 <error@@Base+0x4662>
    a586:	mov	r0, r4
    a588:	cbz	r4, a592 <error@@Base+0x4662>
    a58a:	ldr	r3, [r5, #0]
    a58c:	movs	r0, #0
    a58e:	rev	r3, r3
    a590:	str	r3, [r4, #0]
    a592:	pop	{r3, r4, r5, pc}
    a594:	push	{r4, r5, r6, lr}
    a596:	mov	r6, r0
    a598:	mov	r4, r1
    a59a:	bl	a144 <error@@Base+0x4214>
    a59e:	movs	r1, #2
    a5a0:	mov	r5, r0
    a5a2:	mov	r0, r6
    a5a4:	bl	a32c <error@@Base+0x43fc>
    a5a8:	cmp	r0, #0
    a5aa:	blt.n	a5bc <error@@Base+0x468c>
    a5ac:	mov	r0, r4
    a5ae:	cbz	r4, a5bc <error@@Base+0x468c>
    a5b0:	ldrb	r2, [r5, #0]
    a5b2:	movs	r0, #0
    a5b4:	ldrb	r3, [r5, #1]
    a5b6:	orr.w	r3, r3, r2, lsl #8
    a5ba:	strh	r3, [r4, #0]
    a5bc:	pop	{r4, r5, r6, pc}
    a5be:	nop
    a5c0:	push	{r3, r4, r5, lr}
    a5c2:	mov	r5, r0
    a5c4:	mov	r4, r1
    a5c6:	bl	a144 <error@@Base+0x4214>
    a5ca:	movs	r1, #1
    a5cc:	mov	r3, r0
    a5ce:	mov	r0, r5
    a5d0:	mov	r5, r3
    a5d2:	bl	a32c <error@@Base+0x43fc>
    a5d6:	cmp	r0, #0
    a5d8:	blt.n	a5e4 <error@@Base+0x46b4>
    a5da:	mov	r0, r4
    a5dc:	cbz	r4, a5e4 <error@@Base+0x46b4>
    a5de:	ldrb	r3, [r5, #0]
    a5e0:	movs	r0, #0
    a5e2:	strb	r3, [r4, #0]
    a5e4:	pop	{r3, r4, r5, pc}
    a5e6:	nop
    a5e8:	push	{r4, lr}
    a5ea:	sub	sp, #8
    a5ec:	ldr	r4, [pc, #88]	; (a648 <error@@Base+0x4718>)
    a5ee:	ldr	r3, [pc, #92]	; (a64c <error@@Base+0x471c>)
    a5f0:	add	r4, pc
    a5f2:	ldr	r3, [r4, r3]
    a5f4:	ldr	r3, [r3, #0]
    a5f6:	str	r3, [sp, #4]
    a5f8:	mov.w	r3, #0
    a5fc:	movs	r3, #0
    a5fe:	str	r3, [sp, #0]
    a600:	cbz	r2, a638 <error@@Base+0x4708>
    a602:	mov	r4, r2
    a604:	movs	r3, #0
    a606:	movs	r2, #0
    a608:	strd	r2, r3, [r4]
    a60c:	mov	r3, sp
    a60e:	movs	r2, #8
    a610:	bl	a458 <error@@Base+0x4528>
    a614:	cbnz	r0, a624 <error@@Base+0x46f4>
    a616:	ldr	r3, [sp, #0]
    a618:	ldr	r2, [r3, #0]
    a61a:	ldr	r3, [r3, #4]
    a61c:	rev	r2, r2
    a61e:	str	r2, [r4, #4]
    a620:	rev	r3, r3
    a622:	str	r3, [r4, #0]
    a624:	ldr	r2, [pc, #40]	; (a650 <error@@Base+0x4720>)
    a626:	ldr	r3, [pc, #36]	; (a64c <error@@Base+0x471c>)
    a628:	add	r2, pc
    a62a:	ldr	r3, [r2, r3]
    a62c:	ldr	r2, [r3, #0]
    a62e:	ldr	r3, [sp, #4]
    a630:	eors	r2, r3
    a632:	bne.n	a642 <error@@Base+0x4712>
    a634:	add	sp, #8
    a636:	pop	{r4, pc}
    a638:	mov	r3, sp
    a63a:	movs	r2, #8
    a63c:	bl	a458 <error@@Base+0x4528>
    a640:	b.n	a624 <error@@Base+0x46f4>
    a642:	blx	1cf8 <__stack_chk_fail@plt>
    a646:	nop
    a648:	str	r0, [r0, #120]	; 0x78
    a64a:	movs	r1, r0
    a64c:	lsls	r4, r1, #9
    a64e:	movs	r0, r0
    a650:	str	r0, [r1, #116]	; 0x74
    a652:	movs	r1, r0
    a654:	push	{r4, lr}
    a656:	sub	sp, #8
    a658:	ldr	r4, [pc, #76]	; (a6a8 <error@@Base+0x4778>)
    a65a:	ldr	r3, [pc, #80]	; (a6ac <error@@Base+0x477c>)
    a65c:	add	r4, pc
    a65e:	ldr	r3, [r4, r3]
    a660:	ldr	r3, [r3, #0]
    a662:	str	r3, [sp, #4]
    a664:	mov.w	r3, #0
    a668:	movs	r3, #0
    a66a:	str	r3, [sp, #0]
    a66c:	cbz	r2, a698 <error@@Base+0x4768>
    a66e:	str	r3, [r2, #0]
    a670:	mov	r4, r2
    a672:	mov	r3, sp
    a674:	movs	r2, #4
    a676:	bl	a458 <error@@Base+0x4528>
    a67a:	cbnz	r0, a684 <error@@Base+0x4754>
    a67c:	ldr	r3, [sp, #0]
    a67e:	ldr	r3, [r3, #0]
    a680:	rev	r3, r3
    a682:	str	r3, [r4, #0]
    a684:	ldr	r2, [pc, #40]	; (a6b0 <error@@Base+0x4780>)
    a686:	ldr	r3, [pc, #36]	; (a6ac <error@@Base+0x477c>)
    a688:	add	r2, pc
    a68a:	ldr	r3, [r2, r3]
    a68c:	ldr	r2, [r3, #0]
    a68e:	ldr	r3, [sp, #4]
    a690:	eors	r2, r3
    a692:	bne.n	a6a2 <error@@Base+0x4772>
    a694:	add	sp, #8
    a696:	pop	{r4, pc}
    a698:	mov	r3, sp
    a69a:	movs	r2, #4
    a69c:	bl	a458 <error@@Base+0x4528>
    a6a0:	b.n	a684 <error@@Base+0x4754>
    a6a2:	blx	1cf8 <__stack_chk_fail@plt>
    a6a6:	nop
    a6a8:	str	r4, [r2, #112]	; 0x70
    a6aa:	movs	r1, r0
    a6ac:	lsls	r4, r1, #9
    a6ae:	movs	r0, r0
    a6b0:	str	r0, [r5, #108]	; 0x6c
    a6b2:	movs	r1, r0
    a6b4:	push	{r4, lr}
    a6b6:	sub	sp, #8
    a6b8:	ldr	r4, [pc, #80]	; (a70c <error@@Base+0x47dc>)
    a6ba:	ldr	r3, [pc, #84]	; (a710 <error@@Base+0x47e0>)
    a6bc:	add	r4, pc
    a6be:	ldr	r3, [r4, r3]
    a6c0:	ldr	r3, [r3, #0]
    a6c2:	str	r3, [sp, #4]
    a6c4:	mov.w	r3, #0
    a6c8:	movs	r3, #0
    a6ca:	str	r3, [sp, #0]
    a6cc:	cbz	r2, a6fc <error@@Base+0x47cc>
    a6ce:	strh	r3, [r2, #0]
    a6d0:	mov	r4, r2
    a6d2:	mov	r3, sp
    a6d4:	movs	r2, #2
    a6d6:	bl	a458 <error@@Base+0x4528>
    a6da:	cbnz	r0, a6e8 <error@@Base+0x47b8>
    a6dc:	ldr	r2, [sp, #0]
    a6de:	ldrb	r1, [r2, #0]
    a6e0:	ldrb	r3, [r2, #1]
    a6e2:	orr.w	r3, r3, r1, lsl #8
    a6e6:	strh	r3, [r4, #0]
    a6e8:	ldr	r2, [pc, #40]	; (a714 <error@@Base+0x47e4>)
    a6ea:	ldr	r3, [pc, #36]	; (a710 <error@@Base+0x47e0>)
    a6ec:	add	r2, pc
    a6ee:	ldr	r3, [r2, r3]
    a6f0:	ldr	r2, [r3, #0]
    a6f2:	ldr	r3, [sp, #4]
    a6f4:	eors	r2, r3
    a6f6:	bne.n	a706 <error@@Base+0x47d6>
    a6f8:	add	sp, #8
    a6fa:	pop	{r4, pc}
    a6fc:	mov	r3, sp
    a6fe:	movs	r2, #2
    a700:	bl	a458 <error@@Base+0x4528>
    a704:	b.n	a6e8 <error@@Base+0x47b8>
    a706:	blx	1cf8 <__stack_chk_fail@plt>
    a70a:	nop
    a70c:	str	r4, [r6, #104]	; 0x68
    a70e:	movs	r1, r0
    a710:	lsls	r4, r1, #9
    a712:	movs	r0, r0
    a714:	str	r4, [r0, #104]	; 0x68
    a716:	movs	r1, r0
    a718:	push	{r4, lr}
    a71a:	sub	sp, #8
    a71c:	ldr	r4, [pc, #72]	; (a768 <error@@Base+0x4838>)
    a71e:	ldr	r3, [pc, #76]	; (a76c <error@@Base+0x483c>)
    a720:	add	r4, pc
    a722:	ldr	r3, [r4, r3]
    a724:	ldr	r3, [r3, #0]
    a726:	str	r3, [sp, #4]
    a728:	mov.w	r3, #0
    a72c:	movs	r3, #0
    a72e:	str	r3, [sp, #0]
    a730:	cbz	r2, a75a <error@@Base+0x482a>
    a732:	strb	r3, [r2, #0]
    a734:	mov	r4, r2
    a736:	mov	r3, sp
    a738:	movs	r2, #1
    a73a:	bl	a458 <error@@Base+0x4528>
    a73e:	cbnz	r0, a746 <error@@Base+0x4816>
    a740:	ldr	r3, [sp, #0]
    a742:	ldrb	r3, [r3, #0]
    a744:	strb	r3, [r4, #0]
    a746:	ldr	r2, [pc, #40]	; (a770 <error@@Base+0x4840>)
    a748:	ldr	r3, [pc, #32]	; (a76c <error@@Base+0x483c>)
    a74a:	add	r2, pc
    a74c:	ldr	r3, [r2, r3]
    a74e:	ldr	r2, [r3, #0]
    a750:	ldr	r3, [sp, #4]
    a752:	eors	r2, r3
    a754:	bne.n	a764 <error@@Base+0x4834>
    a756:	add	sp, #8
    a758:	pop	{r4, pc}
    a75a:	mov	r3, sp
    a75c:	movs	r2, #1
    a75e:	bl	a458 <error@@Base+0x4528>
    a762:	b.n	a746 <error@@Base+0x4816>
    a764:	blx	1cf8 <__stack_chk_fail@plt>
    a768:	str	r0, [r2, #100]	; 0x64
    a76a:	movs	r1, r0
    a76c:	lsls	r4, r1, #9
    a76e:	movs	r0, r0
    a770:	str	r6, [r4, #96]	; 0x60
    a772:	movs	r1, r0
    a774:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a778:	mov	r5, r1
    a77a:	mov	r4, r2
    a77c:	mov	r8, r0
    a77e:	bl	a144 <error@@Base+0x4214>
    a782:	mov	r6, r0
    a784:	cbz	r5, a78a <error@@Base+0x485a>
    a786:	movs	r3, #0
    a788:	str	r3, [r5, #0]
    a78a:	cbz	r4, a790 <error@@Base+0x4860>
    a78c:	movs	r3, #0
    a78e:	str	r3, [r4, #0]
    a790:	mov	r0, r8
    a792:	bl	a07c <error@@Base+0x414c>
    a796:	cmp	r0, #3
    a798:	bls.n	a7ce <error@@Base+0x489e>
    a79a:	ldr	r7, [r6, #0]
    a79c:	movw	r3, #65532	; 0xfffc
    a7a0:	movt	r3, #2047	; 0x7ff
    a7a4:	rev	r7, r7
    a7a6:	cmp	r7, r3
    a7a8:	bhi.n	a7c8 <error@@Base+0x4898>
    a7aa:	mov	r0, r8
    a7ac:	bl	a07c <error@@Base+0x414c>
    a7b0:	subs	r0, #4
    a7b2:	cmp	r0, r7
    a7b4:	bcc.n	a7ce <error@@Base+0x489e>
    a7b6:	cbz	r5, a7bc <error@@Base+0x488c>
    a7b8:	adds	r6, #4
    a7ba:	str	r6, [r5, #0]
    a7bc:	mov	r0, r4
    a7be:	cbz	r4, a7c4 <error@@Base+0x4894>
    a7c0:	movs	r0, #0
    a7c2:	str	r7, [r4, #0]
    a7c4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    a7c8:	mvn.w	r0, #5
    a7cc:	b.n	a7c4 <error@@Base+0x4894>
    a7ce:	mvn.w	r0, #2
    a7d2:	b.n	a7c4 <error@@Base+0x4894>
    a7d4:	push	{r4, r5, r6, lr}
    a7d6:	mov	r4, r2
    a7d8:	ldr	r2, [pc, #100]	; (a840 <error@@Base+0x4910>)
    a7da:	sub	sp, #16
    a7dc:	ldr	r3, [pc, #100]	; (a844 <error@@Base+0x4914>)
    a7de:	mov	r6, r0
    a7e0:	add	r2, pc
    a7e2:	mov	r5, r1
    a7e4:	ldr	r3, [r2, r3]
    a7e6:	ldr	r3, [r3, #0]
    a7e8:	str	r3, [sp, #12]
    a7ea:	mov.w	r3, #0
    a7ee:	cbz	r1, a7f4 <error@@Base+0x48c4>
    a7f0:	movs	r3, #0
    a7f2:	str	r3, [r1, #0]
    a7f4:	cbz	r4, a7fa <error@@Base+0x48ca>
    a7f6:	movs	r3, #0
    a7f8:	str	r3, [r4, #0]
    a7fa:	add	r2, sp, #4
    a7fc:	add	r1, sp, #8
    a7fe:	mov	r0, r6
    a800:	bl	a774 <error@@Base+0x4844>
    a804:	cmp	r0, #0
    a806:	blt.n	a826 <error@@Base+0x48f6>
    a808:	cbz	r5, a80e <error@@Base+0x48de>
    a80a:	ldr	r3, [sp, #8]
    a80c:	str	r3, [r5, #0]
    a80e:	ldr	r1, [sp, #4]
    a810:	cbz	r4, a814 <error@@Base+0x48e4>
    a812:	str	r1, [r4, #0]
    a814:	adds	r1, #4
    a816:	mov	r0, r6
    a818:	bl	a32c <error@@Base+0x43fc>
    a81c:	subs	r0, #0
    a81e:	it	ne
    a820:	movne	r0, #1
    a822:	bl	e0a4 <setlogin@@Base+0x229c>
    a826:	ldr	r2, [pc, #32]	; (a848 <error@@Base+0x4918>)
    a828:	ldr	r3, [pc, #24]	; (a844 <error@@Base+0x4914>)
    a82a:	add	r2, pc
    a82c:	ldr	r3, [r2, r3]
    a82e:	ldr	r2, [r3, #0]
    a830:	ldr	r3, [sp, #12]
    a832:	eors	r2, r3
    a834:	bne.n	a83a <error@@Base+0x490a>
    a836:	add	sp, #16
    a838:	pop	{r4, r5, r6, pc}
    a83a:	blx	1cf8 <__stack_chk_fail@plt>
    a83e:	nop
    a840:	str	r0, [r2, #88]	; 0x58
    a842:	movs	r1, r0
    a844:	lsls	r4, r1, #9
    a846:	movs	r0, r0
    a848:	str	r6, [r0, #84]	; 0x54
    a84a:	movs	r1, r0
    a84c:	push	{r4, r5, r6, r7, lr}
    a84e:	mov	r4, r2
    a850:	ldr	r2, [pc, #112]	; (a8c4 <error@@Base+0x4994>)
    a852:	sub	sp, #20
    a854:	ldr	r3, [pc, #112]	; (a8c8 <error@@Base+0x4998>)
    a856:	mov	r5, r1
    a858:	add	r2, pc
    a85a:	ldr	r3, [r2, r3]
    a85c:	ldr	r3, [r3, #0]
    a85e:	str	r3, [sp, #12]
    a860:	mov.w	r3, #0
    a864:	cbz	r1, a86a <error@@Base+0x493a>
    a866:	movs	r3, #0
    a868:	str	r3, [r1, #0]
    a86a:	cbz	r4, a870 <error@@Base+0x4940>
    a86c:	movs	r3, #0
    a86e:	str	r3, [r4, #0]
    a870:	add	r2, sp, #8
    a872:	add	r1, sp, #4
    a874:	bl	a7d4 <error@@Base+0x48a4>
    a878:	cmp	r0, #0
    a87a:	blt.n	a89c <error@@Base+0x496c>
    a87c:	cbz	r5, a892 <error@@Base+0x4962>
    a87e:	ldr	r7, [sp, #8]
    a880:	adds	r0, r7, #1
    a882:	blx	1ce0 <malloc@plt>
    a886:	mov	r6, r0
    a888:	str	r0, [r5, #0]
    a88a:	cbz	r0, a8be <error@@Base+0x498e>
    a88c:	cbnz	r7, a8b0 <error@@Base+0x4980>
    a88e:	movs	r3, #0
    a890:	strb	r3, [r6, r7]
    a892:	mov	r0, r4
    a894:	cbz	r4, a89c <error@@Base+0x496c>
    a896:	ldr	r3, [sp, #8]
    a898:	movs	r0, #0
    a89a:	str	r3, [r4, #0]
    a89c:	ldr	r2, [pc, #44]	; (a8cc <error@@Base+0x499c>)
    a89e:	ldr	r3, [pc, #40]	; (a8c8 <error@@Base+0x4998>)
    a8a0:	add	r2, pc
    a8a2:	ldr	r3, [r2, r3]
    a8a4:	ldr	r2, [r3, #0]
    a8a6:	ldr	r3, [sp, #12]
    a8a8:	eors	r2, r3
    a8aa:	bne.n	a8ba <error@@Base+0x498a>
    a8ac:	add	sp, #20
    a8ae:	pop	{r4, r5, r6, r7, pc}
    a8b0:	ldr	r1, [sp, #4]
    a8b2:	mov	r2, r7
    a8b4:	blx	1b84 <memcpy@plt>
    a8b8:	b.n	a88e <error@@Base+0x495e>
    a8ba:	blx	1cf8 <__stack_chk_fail@plt>
    a8be:	mvn.w	r0, #1
    a8c2:	b.n	a89c <error@@Base+0x496c>
    a8c4:	str	r0, [r3, #80]	; 0x50
    a8c6:	movs	r1, r0
    a8c8:	lsls	r4, r1, #9
    a8ca:	movs	r0, r0
    a8cc:	str	r0, [r2, #76]	; 0x4c
    a8ce:	movs	r1, r0
    a8d0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    a8d4:	mov	r5, r2
    a8d6:	ldr	r2, [pc, #184]	; (a990 <error@@Base+0x4a60>)
    a8d8:	sub	sp, #20
    a8da:	ldr	r3, [pc, #184]	; (a994 <error@@Base+0x4a64>)
    a8dc:	mov	r8, r0
    a8de:	add	r2, pc
    a8e0:	mov	r6, r1
    a8e2:	ldr	r3, [r2, r3]
    a8e4:	ldr	r3, [r3, #0]
    a8e6:	str	r3, [sp, #12]
    a8e8:	mov.w	r3, #0
    a8ec:	cbz	r1, a8f2 <error@@Base+0x49c2>
    a8ee:	movs	r3, #0
    a8f0:	str	r3, [r1, #0]
    a8f2:	cbz	r5, a8f8 <error@@Base+0x49c8>
    a8f4:	movs	r3, #0
    a8f6:	str	r3, [r5, #0]
    a8f8:	add	r2, sp, #4
    a8fa:	add	r1, sp, #8
    a8fc:	mov	r0, r8
    a8fe:	bl	a774 <error@@Base+0x4844>
    a902:	mov	r4, r0
    a904:	cbnz	r0, a956 <error@@Base+0x4a26>
    a906:	ldr	r7, [sp, #4]
    a908:	cbz	r7, a922 <error@@Base+0x49f2>
    a90a:	ldr.w	r9, [sp, #8]
    a90e:	mov	r1, r0
    a910:	mov	r2, r7
    a912:	mov	r0, r9
    a914:	blx	1ec8 <memchr@plt>
    a918:	cbz	r0, a922 <error@@Base+0x49f2>
    a91a:	subs	r7, #1
    a91c:	add	r7, r9
    a91e:	cmp	r0, r7
    a920:	bcc.n	a978 <error@@Base+0x4a48>
    a922:	movs	r2, #0
    a924:	mov	r0, r8
    a926:	mov	r1, r2
    a928:	bl	a7d4 <error@@Base+0x48a4>
    a92c:	mov	r4, r0
    a92e:	cbnz	r0, a97e <error@@Base+0x4a4e>
    a930:	cbz	r6, a950 <error@@Base+0x4a20>
    a932:	ldr.w	r8, [sp, #4]
    a936:	add.w	r0, r8, #1
    a93a:	blx	1ce0 <malloc@plt>
    a93e:	mov	r7, r0
    a940:	str	r0, [r6, #0]
    a942:	cbz	r0, a988 <error@@Base+0x4a58>
    a944:	cmp.w	r8, #0
    a948:	bne.n	a96e <error@@Base+0x4a3e>
    a94a:	movs	r3, #0
    a94c:	strb.w	r3, [r7, r8]
    a950:	cbz	r5, a956 <error@@Base+0x4a26>
    a952:	ldr	r3, [sp, #4]
    a954:	str	r3, [r5, #0]
    a956:	ldr	r2, [pc, #64]	; (a998 <error@@Base+0x4a68>)
    a958:	ldr	r3, [pc, #56]	; (a994 <error@@Base+0x4a64>)
    a95a:	add	r2, pc
    a95c:	ldr	r3, [r2, r3]
    a95e:	ldr	r2, [r3, #0]
    a960:	ldr	r3, [sp, #12]
    a962:	eors	r2, r3
    a964:	bne.n	a984 <error@@Base+0x4a54>
    a966:	mov	r0, r4
    a968:	add	sp, #20
    a96a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    a96e:	ldr	r1, [sp, #8]
    a970:	mov	r2, r8
    a972:	blx	1b84 <memcpy@plt>
    a976:	b.n	a94a <error@@Base+0x4a1a>
    a978:	mvn.w	r4, #3
    a97c:	b.n	a956 <error@@Base+0x4a26>
    a97e:	mov.w	r4, #4294967295	; 0xffffffff
    a982:	b.n	a956 <error@@Base+0x4a26>
    a984:	blx	1cf8 <__stack_chk_fail@plt>
    a988:	mvn.w	r4, #1
    a98c:	b.n	a956 <error@@Base+0x4a26>
    a98e:	nop
    a990:	str	r2, [r2, #72]	; 0x48
    a992:	movs	r1, r0
    a994:	lsls	r4, r1, #9
    a996:	movs	r0, r0
    a998:	str	r6, [r2, #64]	; 0x40
    a99a:	movs	r1, r0
    a99c:	push	{r4, r5, lr}
    a99e:	movs	r2, #0
    a9a0:	ldr	r4, [pc, #88]	; (a9fc <error@@Base+0x4acc>)
    a9a2:	sub	sp, #20
    a9a4:	ldr	r3, [pc, #88]	; (aa00 <error@@Base+0x4ad0>)
    a9a6:	mov	r5, r1
    a9a8:	add	r4, pc
    a9aa:	mov	r1, r2
    a9ac:	ldr	r3, [r4, r3]
    a9ae:	mov	r4, r0
    a9b0:	ldr	r3, [r3, #0]
    a9b2:	str	r3, [sp, #12]
    a9b4:	mov.w	r3, #0
    a9b8:	bl	a774 <error@@Base+0x4844>
    a9bc:	cbz	r0, a9d2 <error@@Base+0x4aa2>
    a9be:	ldr	r2, [pc, #68]	; (aa04 <error@@Base+0x4ad4>)
    a9c0:	ldr	r3, [pc, #60]	; (aa00 <error@@Base+0x4ad0>)
    a9c2:	add	r2, pc
    a9c4:	ldr	r3, [r2, r3]
    a9c6:	ldr	r2, [r3, #0]
    a9c8:	ldr	r3, [sp, #12]
    a9ca:	eors	r2, r3
    a9cc:	bne.n	a9f8 <error@@Base+0x4ac8>
    a9ce:	add	sp, #20
    a9d0:	pop	{r4, r5, pc}
    a9d2:	add	r1, sp, #4
    a9d4:	mov	r0, r4
    a9d6:	bl	a56c <error@@Base+0x463c>
    a9da:	cmp	r0, #0
    a9dc:	bne.n	a9be <error@@Base+0x4a8e>
    a9de:	ldr	r1, [sp, #4]
    a9e0:	add	r2, sp, #8
    a9e2:	mov	r0, r5
    a9e4:	bl	a2f8 <error@@Base+0x43c8>
    a9e8:	cmp	r0, #0
    a9ea:	bne.n	a9be <error@@Base+0x4a8e>
    a9ec:	ldrd	r2, r1, [sp, #4]
    a9f0:	mov	r0, r4
    a9f2:	bl	a504 <error@@Base+0x45d4>
    a9f6:	b.n	a9be <error@@Base+0x4a8e>
    a9f8:	blx	1cf8 <__stack_chk_fail@plt>
    a9fc:	str	r0, [r1, #60]	; 0x3c
    a9fe:	movs	r1, r0
    aa00:	lsls	r4, r1, #9
    aa02:	movs	r0, r0
    aa04:	str	r6, [r5, #56]	; 0x38
    aa06:	movs	r1, r0
    aa08:	ldr.w	ip, [pc, #80]	; aa5c <error@@Base+0x4b2c>
    aa0c:	ldr	r3, [pc, #80]	; (aa60 <error@@Base+0x4b30>)
    aa0e:	add	ip, pc
    aa10:	push	{r4, r5, lr}
    aa12:	sub	sp, #12
    aa14:	ldr.w	r3, [ip, r3]
    aa18:	mov	r4, r2
    aa1a:	mov	r5, r1
    aa1c:	mov	r2, sp
    aa1e:	mov	r1, r4
    aa20:	ldr	r3, [r3, #0]
    aa22:	str	r3, [sp, #4]
    aa24:	mov.w	r3, #0
    aa28:	bl	a2f8 <error@@Base+0x43c8>
    aa2c:	cmp	r0, #0
    aa2e:	blt.n	aa34 <error@@Base+0x4b04>
    aa30:	mov	r0, r4
    aa32:	cbnz	r4, aa48 <error@@Base+0x4b18>
    aa34:	ldr	r2, [pc, #44]	; (aa64 <error@@Base+0x4b34>)
    aa36:	ldr	r3, [pc, #40]	; (aa60 <error@@Base+0x4b30>)
    aa38:	add	r2, pc
    aa3a:	ldr	r3, [r2, r3]
    aa3c:	ldr	r2, [r3, #0]
    aa3e:	ldr	r3, [sp, #4]
    aa40:	eors	r2, r3
    aa42:	bne.n	aa56 <error@@Base+0x4b26>
    aa44:	add	sp, #12
    aa46:	pop	{r4, r5, pc}
    aa48:	ldr	r0, [sp, #0]
    aa4a:	mov	r2, r4
    aa4c:	mov	r1, r5
    aa4e:	blx	1b84 <memcpy@plt>
    aa52:	movs	r0, #0
    aa54:	b.n	aa34 <error@@Base+0x4b04>
    aa56:	blx	1cf8 <__stack_chk_fail@plt>
    aa5a:	nop
    aa5c:	str	r2, [r4, #52]	; 0x34
    aa5e:	movs	r1, r0
    aa60:	lsls	r4, r1, #9
    aa62:	movs	r0, r0
    aa64:	str	r0, [r7, #48]	; 0x30
    aa66:	movs	r1, r0
    aa68:	push	{r4, r5, lr}
    aa6a:	mov	r5, r0
    aa6c:	sub	sp, #12
    aa6e:	mov	r0, r1
    aa70:	mov	r4, r1
    aa72:	bl	a144 <error@@Base+0x4214>
    aa76:	str	r0, [sp, #4]
    aa78:	mov	r0, r4
    aa7a:	bl	a07c <error@@Base+0x414c>
    aa7e:	ldr	r1, [sp, #4]
    aa80:	mov	r2, r0
    aa82:	mov	r0, r5
    aa84:	add	sp, #12
    aa86:	ldmia.w	sp!, {r4, r5, lr}
    aa8a:	b.w	aa08 <error@@Base+0x4ad8>
    aa8e:	nop
    aa90:	ldr.w	ip, [pc, #148]	; ab28 <error@@Base+0x4bf8>
    aa94:	mov.w	r3, #4294967295	; 0xffffffff
    aa98:	push	{r4, r5, r6, r7, lr}
    aa9a:	add	ip, pc
    aa9c:	ldr	r4, [pc, #140]	; (ab2c <error@@Base+0x4bfc>)
    aa9e:	sub	sp, #36	; 0x24
    aaa0:	mov	r6, r1
    aaa2:	mov	r5, r2
    aaa4:	strd	r6, r2, [sp]
    aaa8:	movs	r1, #0
    aaaa:	str	r5, [sp, #20]
    aaac:	mov	r7, r0
    aaae:	ldr.w	r4, [ip, r4]
    aab2:	mov	r0, r1
    aab4:	movs	r2, #1
    aab6:	ldr	r4, [r4, #0]
    aab8:	str	r4, [sp, #28]
    aaba:	mov.w	r4, #0
    aabe:	blx	1c08 <__vsnprintf_chk@plt>
    aac2:	subs	r4, r0, #0
    aac4:	blt.n	ab1e <error@@Base+0x4bee>
    aac6:	bne.n	aade <error@@Base+0x4bae>
    aac8:	ldr	r2, [pc, #100]	; (ab30 <error@@Base+0x4c00>)
    aaca:	ldr	r3, [pc, #96]	; (ab2c <error@@Base+0x4bfc>)
    aacc:	add	r2, pc
    aace:	ldr	r3, [r2, r3]
    aad0:	ldr	r2, [r3, #0]
    aad2:	ldr	r3, [sp, #28]
    aad4:	eors	r2, r3
    aad6:	bne.n	ab24 <error@@Base+0x4bf4>
    aad8:	mov	r0, r4
    aada:	add	sp, #36	; 0x24
    aadc:	pop	{r4, r5, r6, r7, pc}
    aade:	adds	r1, r4, #1
    aae0:	add	r2, sp, #24
    aae2:	mov	r0, r7
    aae4:	str	r5, [sp, #20]
    aae6:	str	r1, [sp, #12]
    aae8:	bl	a2f8 <error@@Base+0x43c8>
    aaec:	subs	r3, r0, #0
    aaee:	it	lt
    aaf0:	movlt	r4, r3
    aaf2:	blt.n	aac8 <error@@Base+0x4b98>
    aaf4:	ldr	r5, [sp, #20]
    aaf6:	mov.w	r3, #4294967295	; 0xffffffff
    aafa:	ldr	r1, [sp, #12]
    aafc:	movs	r2, #1
    aafe:	ldr	r0, [sp, #24]
    ab00:	str	r6, [sp, #0]
    ab02:	str	r5, [sp, #4]
    ab04:	blx	1c08 <__vsnprintf_chk@plt>
    ab08:	cmp	r4, r0
    ab0a:	bne.n	ab18 <error@@Base+0x4be8>
    ab0c:	mov	r0, r7
    ab0e:	movs	r1, #1
    ab10:	bl	a3c8 <error@@Base+0x4498>
    ab14:	mov	r4, r0
    ab16:	b.n	aac8 <error@@Base+0x4b98>
    ab18:	mov.w	r4, #4294967295	; 0xffffffff
    ab1c:	b.n	aac8 <error@@Base+0x4b98>
    ab1e:	mvn.w	r4, #9
    ab22:	b.n	aac8 <error@@Base+0x4b98>
    ab24:	blx	1cf8 <__stack_chk_fail@plt>
    ab28:	str	r6, [r2, #44]	; 0x2c
    ab2a:	movs	r1, r0
    ab2c:	lsls	r4, r1, #9
    ab2e:	movs	r0, r0
    ab30:	str	r4, [r4, #40]	; 0x28
    ab32:	movs	r1, r0
    ab34:	push	{r1, r2, r3}
    ab36:	ldr	r1, [pc, #60]	; (ab74 <error@@Base+0x4c44>)
    ab38:	push	{lr}
    ab3a:	sub	sp, #8
    ab3c:	ldr	r3, [pc, #56]	; (ab78 <error@@Base+0x4c48>)
    ab3e:	add	r2, sp, #12
    ab40:	add	r1, pc
    ab42:	ldr	r3, [r1, r3]
    ab44:	ldr.w	r1, [r2], #4
    ab48:	ldr	r3, [r3, #0]
    ab4a:	str	r3, [sp, #4]
    ab4c:	mov.w	r3, #0
    ab50:	str	r2, [sp, #0]
    ab52:	bl	aa90 <error@@Base+0x4b60>
    ab56:	ldr	r2, [pc, #36]	; (ab7c <error@@Base+0x4c4c>)
    ab58:	ldr	r3, [pc, #28]	; (ab78 <error@@Base+0x4c48>)
    ab5a:	add	r2, pc
    ab5c:	ldr	r3, [r2, r3]
    ab5e:	ldr	r2, [r3, #0]
    ab60:	ldr	r3, [sp, #4]
    ab62:	eors	r2, r3
    ab64:	bne.n	ab70 <error@@Base+0x4c40>
    ab66:	add	sp, #8
    ab68:	ldr.w	lr, [sp], #4
    ab6c:	add	sp, #12
    ab6e:	bx	lr
    ab70:	blx	1cf8 <__stack_chk_fail@plt>
    ab74:	str	r0, [r6, #32]
    ab76:	movs	r1, r0
    ab78:	lsls	r4, r1, #9
    ab7a:	movs	r0, r0
    ab7c:	str	r6, [r2, #32]
    ab7e:	movs	r1, r0
    ab80:	push	{r4, r5, r6, lr}
    ab82:	mov	r5, r3
    ab84:	ldr	r6, [pc, #92]	; (abe4 <error@@Base+0x4cb4>)
    ab86:	sub	sp, #8
    ab88:	ldr	r3, [pc, #92]	; (abe8 <error@@Base+0x4cb8>)
    ab8a:	mov	r4, r2
    ab8c:	add	r6, pc
    ab8e:	mov	r2, sp
    ab90:	movs	r1, #8
    ab92:	ldr	r3, [r6, r3]
    ab94:	ldr	r3, [r3, #0]
    ab96:	str	r3, [sp, #4]
    ab98:	mov.w	r3, #0
    ab9c:	bl	a2f8 <error@@Base+0x43c8>
    aba0:	cmp	r0, #0
    aba2:	blt.n	abcc <error@@Base+0x4c9c>
    aba4:	ldr	r3, [sp, #0]
    aba6:	lsrs	r0, r5, #24
    aba8:	lsrs	r1, r5, #16
    abaa:	lsrs	r2, r5, #8
    abac:	lsrs	r6, r4, #24
    abae:	strb	r0, [r3, #0]
    abb0:	movs	r0, #0
    abb2:	ldr	r3, [sp, #0]
    abb4:	strb	r1, [r3, #1]
    abb6:	lsrs	r1, r4, #16
    abb8:	ldr	r3, [sp, #0]
    abba:	strb	r2, [r3, #2]
    abbc:	lsrs	r2, r4, #8
    abbe:	ldr	r3, [sp, #0]
    abc0:	strb	r5, [r3, #3]
    abc2:	ldr	r3, [sp, #0]
    abc4:	strb	r4, [r3, #7]
    abc6:	strb	r6, [r3, #4]
    abc8:	strb	r1, [r3, #5]
    abca:	strb	r2, [r3, #6]
    abcc:	ldr	r2, [pc, #28]	; (abec <error@@Base+0x4cbc>)
    abce:	ldr	r3, [pc, #24]	; (abe8 <error@@Base+0x4cb8>)
    abd0:	add	r2, pc
    abd2:	ldr	r3, [r2, r3]
    abd4:	ldr	r2, [r3, #0]
    abd6:	ldr	r3, [sp, #4]
    abd8:	eors	r2, r3
    abda:	bne.n	abe0 <error@@Base+0x4cb0>
    abdc:	add	sp, #8
    abde:	pop	{r4, r5, r6, pc}
    abe0:	blx	1cf8 <__stack_chk_fail@plt>
    abe4:	str	r4, [r4, #28]
    abe6:	movs	r1, r0
    abe8:	lsls	r4, r1, #9
    abea:	movs	r0, r0
    abec:	str	r0, [r4, #24]
    abee:	movs	r1, r0
    abf0:	push	{r4, r5, lr}
    abf2:	sub	sp, #12
    abf4:	ldr	r5, [pc, #76]	; (ac44 <error@@Base+0x4d14>)
    abf6:	mov	r4, r1
    abf8:	ldr	r3, [pc, #76]	; (ac48 <error@@Base+0x4d18>)
    abfa:	mov	r2, sp
    abfc:	add	r5, pc
    abfe:	movs	r1, #4
    ac00:	ldr	r3, [r5, r3]
    ac02:	ldr	r3, [r3, #0]
    ac04:	str	r3, [sp, #4]
    ac06:	mov.w	r3, #0
    ac0a:	bl	a2f8 <error@@Base+0x43c8>
    ac0e:	cmp	r0, #0
    ac10:	blt.n	ac2a <error@@Base+0x4cfa>
    ac12:	ldr	r3, [sp, #0]
    ac14:	lsrs	r5, r4, #24
    ac16:	lsrs	r1, r4, #16
    ac18:	lsrs	r2, r4, #8
    ac1a:	movs	r0, #0
    ac1c:	strb	r5, [r3, #0]
    ac1e:	ldr	r3, [sp, #0]
    ac20:	strb	r1, [r3, #1]
    ac22:	ldr	r3, [sp, #0]
    ac24:	strb	r2, [r3, #2]
    ac26:	ldr	r3, [sp, #0]
    ac28:	strb	r4, [r3, #3]
    ac2a:	ldr	r2, [pc, #32]	; (ac4c <error@@Base+0x4d1c>)
    ac2c:	ldr	r3, [pc, #24]	; (ac48 <error@@Base+0x4d18>)
    ac2e:	add	r2, pc
    ac30:	ldr	r3, [r2, r3]
    ac32:	ldr	r2, [r3, #0]
    ac34:	ldr	r3, [sp, #4]
    ac36:	eors	r2, r3
    ac38:	bne.n	ac3e <error@@Base+0x4d0e>
    ac3a:	add	sp, #12
    ac3c:	pop	{r4, r5, pc}
    ac3e:	blx	1cf8 <__stack_chk_fail@plt>
    ac42:	nop
    ac44:	str	r4, [r6, #20]
    ac46:	movs	r1, r0
    ac48:	lsls	r4, r1, #9
    ac4a:	movs	r0, r0
    ac4c:	str	r2, [r0, #20]
    ac4e:	movs	r1, r0
    ac50:	ldr.w	ip, [pc, #72]	; ac9c <error@@Base+0x4d6c>
    ac54:	ldr	r3, [pc, #72]	; (aca0 <error@@Base+0x4d70>)
    ac56:	add	ip, pc
    ac58:	push	{r4, lr}
    ac5a:	sub	sp, #8
    ac5c:	ldr.w	r3, [ip, r3]
    ac60:	mov	r4, r1
    ac62:	mov	r2, sp
    ac64:	movs	r1, #2
    ac66:	ldr	r3, [r3, #0]
    ac68:	str	r3, [sp, #4]
    ac6a:	mov.w	r3, #0
    ac6e:	bl	a2f8 <error@@Base+0x43c8>
    ac72:	cmp	r0, #0
    ac74:	blt.n	ac82 <error@@Base+0x4d52>
    ac76:	ldr	r3, [sp, #0]
    ac78:	lsrs	r2, r4, #8
    ac7a:	movs	r0, #0
    ac7c:	strb	r2, [r3, #0]
    ac7e:	ldr	r3, [sp, #0]
    ac80:	strb	r4, [r3, #1]
    ac82:	ldr	r2, [pc, #32]	; (aca4 <error@@Base+0x4d74>)
    ac84:	ldr	r3, [pc, #24]	; (aca0 <error@@Base+0x4d70>)
    ac86:	add	r2, pc
    ac88:	ldr	r3, [r2, r3]
    ac8a:	ldr	r2, [r3, #0]
    ac8c:	ldr	r3, [sp, #4]
    ac8e:	eors	r2, r3
    ac90:	bne.n	ac96 <error@@Base+0x4d66>
    ac92:	add	sp, #8
    ac94:	pop	{r4, pc}
    ac96:	blx	1cf8 <__stack_chk_fail@plt>
    ac9a:	nop
    ac9c:	str	r2, [r3, #16]
    ac9e:	movs	r1, r0
    aca0:	lsls	r4, r1, #9
    aca2:	movs	r0, r0
    aca4:	str	r2, [r5, #12]
    aca6:	movs	r1, r0
    aca8:	ldr.w	ip, [pc, #64]	; acec <error@@Base+0x4dbc>
    acac:	ldr	r3, [pc, #64]	; (acf0 <error@@Base+0x4dc0>)
    acae:	add	ip, pc
    acb0:	push	{r4, lr}
    acb2:	sub	sp, #8
    acb4:	ldr.w	r3, [ip, r3]
    acb8:	mov	r4, r1
    acba:	mov	r2, sp
    acbc:	movs	r1, #1
    acbe:	ldr	r3, [r3, #0]
    acc0:	str	r3, [sp, #4]
    acc2:	mov.w	r3, #0
    acc6:	bl	a2f8 <error@@Base+0x43c8>
    acca:	ldr	r2, [pc, #40]	; (acf4 <error@@Base+0x4dc4>)
    accc:	add	r2, pc
    acce:	cmp	r0, #0
    acd0:	ittt	ge
    acd2:	ldrge	r3, [sp, #0]
    acd4:	movge	r0, #0
    acd6:	strbge	r4, [r3, #0]
    acd8:	ldr	r3, [pc, #20]	; (acf0 <error@@Base+0x4dc0>)
    acda:	ldr	r3, [r2, r3]
    acdc:	ldr	r2, [r3, #0]
    acde:	ldr	r3, [sp, #4]
    ace0:	eors	r2, r3
    ace2:	bne.n	ace8 <error@@Base+0x4db8>
    ace4:	add	sp, #8
    ace6:	pop	{r4, pc}
    ace8:	blx	1cf8 <__stack_chk_fail@plt>
    acec:	str	r2, [r0, #12]
    acee:	movs	r1, r0
    acf0:	lsls	r4, r1, #9
    acf2:	movs	r0, r0
    acf4:	str	r4, [r4, #8]
    acf6:	movs	r1, r0
    acf8:	ldr.w	ip, [pc, #100]	; ad60 <error@@Base+0x4e30>
    acfc:	push	{r4, r5, r6, lr}
    acfe:	add	ip, pc
    ad00:	ldr	r6, [pc, #96]	; (ad64 <error@@Base+0x4e34>)
    ad02:	sub	sp, #8
    ad04:	mov	r4, r2
    ad06:	mov	r5, r3
    ad08:	movs	r2, #8
    ad0a:	mov	r3, sp
    ad0c:	ldr.w	r6, [ip, r6]
    ad10:	ldr	r6, [r6, #0]
    ad12:	str	r6, [sp, #4]
    ad14:	mov.w	r6, #0
    ad18:	movs	r6, #0
    ad1a:	str	r6, [sp, #0]
    ad1c:	bl	a4a4 <error@@Base+0x4574>
    ad20:	cbnz	r0, ad48 <error@@Base+0x4e18>
    ad22:	ldr	r3, [sp, #0]
    ad24:	lsrs	r6, r5, #24
    ad26:	lsrs	r1, r5, #16
    ad28:	lsrs	r2, r5, #8
    ad2a:	strb	r6, [r3, #0]
    ad2c:	lsrs	r6, r4, #24
    ad2e:	ldr	r3, [sp, #0]
    ad30:	strb	r1, [r3, #1]
    ad32:	lsrs	r1, r4, #16
    ad34:	ldr	r3, [sp, #0]
    ad36:	strb	r2, [r3, #2]
    ad38:	lsrs	r2, r4, #8
    ad3a:	ldr	r3, [sp, #0]
    ad3c:	strb	r5, [r3, #3]
    ad3e:	ldr	r3, [sp, #0]
    ad40:	strb	r4, [r3, #7]
    ad42:	strb	r6, [r3, #4]
    ad44:	strb	r1, [r3, #5]
    ad46:	strb	r2, [r3, #6]
    ad48:	ldr	r2, [pc, #28]	; (ad68 <error@@Base+0x4e38>)
    ad4a:	ldr	r3, [pc, #24]	; (ad64 <error@@Base+0x4e34>)
    ad4c:	add	r2, pc
    ad4e:	ldr	r3, [r2, r3]
    ad50:	ldr	r2, [r3, #0]
    ad52:	ldr	r3, [sp, #4]
    ad54:	eors	r2, r3
    ad56:	bne.n	ad5c <error@@Base+0x4e2c>
    ad58:	add	sp, #8
    ad5a:	pop	{r4, r5, r6, pc}
    ad5c:	blx	1cf8 <__stack_chk_fail@plt>
    ad60:	str	r2, [r6, #4]
    ad62:	movs	r1, r0
    ad64:	lsls	r4, r1, #9
    ad66:	movs	r0, r0
    ad68:	str	r4, [r4, #0]
    ad6a:	movs	r1, r0
    ad6c:	ldr.w	ip, [pc, #84]	; adc4 <error@@Base+0x4e94>
    ad70:	push	{r4, r5, lr}
    ad72:	add	ip, pc
    ad74:	ldr	r5, [pc, #80]	; (adc8 <error@@Base+0x4e98>)
    ad76:	sub	sp, #12
    ad78:	mov	r4, r2
    ad7a:	movs	r2, #4
    ad7c:	mov	r3, sp
    ad7e:	ldr.w	r5, [ip, r5]
    ad82:	ldr	r5, [r5, #0]
    ad84:	str	r5, [sp, #4]
    ad86:	mov.w	r5, #0
    ad8a:	movs	r5, #0
    ad8c:	str	r5, [sp, #0]
    ad8e:	bl	a4a4 <error@@Base+0x4574>
    ad92:	cbnz	r0, adaa <error@@Base+0x4e7a>
    ad94:	ldr	r3, [sp, #0]
    ad96:	lsrs	r5, r4, #24
    ad98:	lsrs	r1, r4, #16
    ad9a:	lsrs	r2, r4, #8
    ad9c:	strb	r5, [r3, #0]
    ad9e:	ldr	r3, [sp, #0]
    ada0:	strb	r1, [r3, #1]
    ada2:	ldr	r3, [sp, #0]
    ada4:	strb	r2, [r3, #2]
    ada6:	ldr	r3, [sp, #0]
    ada8:	strb	r4, [r3, #3]
    adaa:	ldr	r2, [pc, #32]	; (adcc <error@@Base+0x4e9c>)
    adac:	ldr	r3, [pc, #24]	; (adc8 <error@@Base+0x4e98>)
    adae:	add	r2, pc
    adb0:	ldr	r3, [r2, r3]
    adb2:	ldr	r2, [r3, #0]
    adb4:	ldr	r3, [sp, #4]
    adb6:	eors	r2, r3
    adb8:	bne.n	adbe <error@@Base+0x4e8e>
    adba:	add	sp, #12
    adbc:	pop	{r4, r5, pc}
    adbe:	blx	1cf8 <__stack_chk_fail@plt>
    adc2:	nop
    adc4:	ldrsh	r6, [r7, r7]
    adc6:	movs	r1, r0
    adc8:	lsls	r4, r1, #9
    adca:	movs	r0, r0
    adcc:	ldrsh	r2, [r0, r7]
    adce:	movs	r1, r0
    add0:	ldr.w	ip, [pc, #72]	; ae1c <error@@Base+0x4eec>
    add4:	push	{r4, r5, lr}
    add6:	add	ip, pc
    add8:	ldr	r5, [pc, #68]	; (ae20 <error@@Base+0x4ef0>)
    adda:	sub	sp, #12
    addc:	mov	r4, r2
    adde:	movs	r2, #2
    ade0:	mov	r3, sp
    ade2:	ldr.w	r5, [ip, r5]
    ade6:	ldr	r5, [r5, #0]
    ade8:	str	r5, [sp, #4]
    adea:	mov.w	r5, #0
    adee:	movs	r5, #0
    adf0:	str	r5, [sp, #0]
    adf2:	bl	a4a4 <error@@Base+0x4574>
    adf6:	cbnz	r0, ae02 <error@@Base+0x4ed2>
    adf8:	ldr	r3, [sp, #0]
    adfa:	lsrs	r2, r4, #8
    adfc:	strb	r2, [r3, #0]
    adfe:	ldr	r3, [sp, #0]
    ae00:	strb	r4, [r3, #1]
    ae02:	ldr	r2, [pc, #32]	; (ae24 <error@@Base+0x4ef4>)
    ae04:	ldr	r3, [pc, #24]	; (ae20 <error@@Base+0x4ef0>)
    ae06:	add	r2, pc
    ae08:	ldr	r3, [r2, r3]
    ae0a:	ldr	r2, [r3, #0]
    ae0c:	ldr	r3, [sp, #4]
    ae0e:	eors	r2, r3
    ae10:	bne.n	ae16 <error@@Base+0x4ee6>
    ae12:	add	sp, #12
    ae14:	pop	{r4, r5, pc}
    ae16:	blx	1cf8 <__stack_chk_fail@plt>
    ae1a:	nop
    ae1c:	ldrsh	r2, [r3, r6]
    ae1e:	movs	r1, r0
    ae20:	lsls	r4, r1, #9
    ae22:	movs	r0, r0
    ae24:	ldrsh	r2, [r5, r5]
    ae26:	movs	r1, r0
    ae28:	ldr.w	ip, [pc, #64]	; ae6c <error@@Base+0x4f3c>
    ae2c:	push	{r4, r5, lr}
    ae2e:	add	ip, pc
    ae30:	ldr	r5, [pc, #60]	; (ae70 <error@@Base+0x4f40>)
    ae32:	sub	sp, #12
    ae34:	mov	r4, r2
    ae36:	movs	r2, #1
    ae38:	mov	r3, sp
    ae3a:	ldr.w	r5, [ip, r5]
    ae3e:	ldr	r5, [r5, #0]
    ae40:	str	r5, [sp, #4]
    ae42:	mov.w	r5, #0
    ae46:	movs	r5, #0
    ae48:	str	r5, [sp, #0]
    ae4a:	bl	a4a4 <error@@Base+0x4574>
    ae4e:	cbnz	r0, ae54 <error@@Base+0x4f24>
    ae50:	ldr	r3, [sp, #0]
    ae52:	strb	r4, [r3, #0]
    ae54:	ldr	r2, [pc, #28]	; (ae74 <error@@Base+0x4f44>)
    ae56:	ldr	r3, [pc, #24]	; (ae70 <error@@Base+0x4f40>)
    ae58:	add	r2, pc
    ae5a:	ldr	r3, [r2, r3]
    ae5c:	ldr	r2, [r3, #0]
    ae5e:	ldr	r3, [sp, #4]
    ae60:	eors	r2, r3
    ae62:	bne.n	ae68 <error@@Base+0x4f38>
    ae64:	add	sp, #12
    ae66:	pop	{r4, r5, pc}
    ae68:	blx	1cf8 <__stack_chk_fail@plt>
    ae6c:	ldrsh	r2, [r0, r5]
    ae6e:	movs	r1, r0
    ae70:	lsls	r4, r1, #9
    ae72:	movs	r0, r0
    ae74:	ldrsh	r0, [r3, r4]
    ae76:	movs	r1, r0
    ae78:	ldr.w	ip, [pc, #76]	; aec8 <error@@Base+0x4f98>
    ae7c:	push	{r4, r5, lr}
    ae7e:	add	ip, pc
    ae80:	ldr	r4, [pc, #72]	; (aecc <error@@Base+0x4f9c>)
    ae82:	sub	sp, #20
    ae84:	mov	r5, r2
    ae86:	mov	r2, r3
    ae88:	str	r2, [sp, #4]
    ae8a:	add	r3, sp, #8
    ae8c:	ldr.w	r4, [ip, r4]
    ae90:	ldr	r4, [r4, #0]
    ae92:	str	r4, [sp, #12]
    ae94:	mov.w	r4, #0
    ae98:	movs	r4, #0
    ae9a:	str	r4, [sp, #8]
    ae9c:	bl	a4a4 <error@@Base+0x4574>
    aea0:	mov	r4, r0
    aea2:	cbnz	r0, aeae <error@@Base+0x4f7e>
    aea4:	ldr	r2, [sp, #4]
    aea6:	mov	r1, r5
    aea8:	ldr	r0, [sp, #8]
    aeaa:	blx	1b84 <memcpy@plt>
    aeae:	ldr	r2, [pc, #32]	; (aed0 <error@@Base+0x4fa0>)
    aeb0:	ldr	r3, [pc, #24]	; (aecc <error@@Base+0x4f9c>)
    aeb2:	add	r2, pc
    aeb4:	ldr	r3, [r2, r3]
    aeb6:	ldr	r2, [r3, #0]
    aeb8:	ldr	r3, [sp, #12]
    aeba:	eors	r2, r3
    aebc:	bne.n	aec4 <error@@Base+0x4f94>
    aebe:	mov	r0, r4
    aec0:	add	sp, #20
    aec2:	pop	{r4, r5, pc}
    aec4:	blx	1cf8 <__stack_chk_fail@plt>
    aec8:	ldrsh	r2, [r6, r3]
    aeca:	movs	r1, r0
    aecc:	lsls	r4, r1, #9
    aece:	movs	r0, r0
    aed0:	ldrsh	r6, [r7, r2]
    aed2:	movs	r1, r0
    aed4:	push	{r4, r5, lr}
    aed6:	mov	r5, r1
    aed8:	ldr	r1, [pc, #112]	; (af4c <error@@Base+0x501c>)
    aeda:	mov	r4, r2
    aedc:	ldr	r2, [pc, #112]	; (af50 <error@@Base+0x5020>)
    aede:	movw	r3, #65532	; 0xfffc
    aee2:	add	r1, pc
    aee4:	movt	r3, #2047	; 0x7ff
    aee8:	cmp	r4, r3
    aeea:	sub	sp, #12
    aeec:	ldr	r2, [r1, r2]
    aeee:	ldr	r2, [r2, #0]
    aef0:	str	r2, [sp, #4]
    aef2:	mov.w	r2, #0
    aef6:	bhi.n	af42 <error@@Base+0x5012>
    aef8:	adds	r1, r4, #4
    aefa:	mov	r2, sp
    aefc:	bl	a2f8 <error@@Base+0x43c8>
    af00:	cmp	r0, #0
    af02:	blt.n	af1e <error@@Base+0x4fee>
    af04:	ldr	r0, [sp, #0]
    af06:	lsrs	r1, r4, #24
    af08:	lsrs	r2, r4, #16
    af0a:	lsrs	r3, r4, #8
    af0c:	strb	r1, [r0, #0]
    af0e:	mov	r0, r4
    af10:	ldr	r1, [sp, #0]
    af12:	strb	r2, [r1, #1]
    af14:	ldr	r2, [sp, #0]
    af16:	strb	r3, [r2, #2]
    af18:	ldr	r3, [sp, #0]
    af1a:	strb	r4, [r3, #3]
    af1c:	cbnz	r4, af32 <error@@Base+0x5002>
    af1e:	ldr	r2, [pc, #52]	; (af54 <error@@Base+0x5024>)
    af20:	ldr	r3, [pc, #44]	; (af50 <error@@Base+0x5020>)
    af22:	add	r2, pc
    af24:	ldr	r3, [r2, r3]
    af26:	ldr	r2, [r3, #0]
    af28:	ldr	r3, [sp, #4]
    af2a:	eors	r2, r3
    af2c:	bne.n	af48 <error@@Base+0x5018>
    af2e:	add	sp, #12
    af30:	pop	{r4, r5, pc}
    af32:	ldr	r0, [sp, #0]
    af34:	mov	r2, r4
    af36:	mov	r1, r5
    af38:	adds	r0, #4
    af3a:	blx	1b84 <memcpy@plt>
    af3e:	movs	r0, #0
    af40:	b.n	af1e <error@@Base+0x4fee>
    af42:	mvn.w	r0, #8
    af46:	b.n	af1e <error@@Base+0x4fee>
    af48:	blx	1cf8 <__stack_chk_fail@plt>
    af4c:	ldrsh	r6, [r1, r2]
    af4e:	movs	r1, r0
    af50:	lsls	r4, r1, #9
    af52:	movs	r0, r0
    af54:	ldrsh	r6, [r1, r1]
    af56:	movs	r1, r0
    af58:	push	{r3, r4, r5, lr}
    af5a:	mov	r2, r1
    af5c:	mov	r5, r0
    af5e:	mov	r4, r1
    af60:	cbz	r1, af6a <error@@Base+0x503a>
    af62:	mov	r0, r1
    af64:	blx	1b6c <strlen@plt>
    af68:	mov	r2, r0
    af6a:	mov	r1, r4
    af6c:	mov	r0, r5
    af6e:	ldmia.w	sp!, {r3, r4, r5, lr}
    af72:	b.w	aed4 <error@@Base+0x4fa4>
    af76:	nop
    af78:	push	{r4, r5, lr}
    af7a:	mov	r2, r1
    af7c:	sub	sp, #12
    af7e:	mov	r4, r1
    af80:	cbz	r1, af98 <error@@Base+0x5068>
    af82:	mov	r5, r0
    af84:	mov	r0, r1
    af86:	bl	a144 <error@@Base+0x4214>
    af8a:	str	r0, [sp, #4]
    af8c:	mov	r0, r4
    af8e:	bl	a07c <error@@Base+0x414c>
    af92:	ldr	r1, [sp, #4]
    af94:	mov	r2, r0
    af96:	mov	r0, r5
    af98:	add	sp, #12
    af9a:	ldmia.w	sp!, {r4, r5, lr}
    af9e:	b.w	aed4 <error@@Base+0x4fa4>
    afa2:	nop
    afa4:	push	{r4, r5, r6, r7, lr}
    afa6:	clz	r3, r1
    afaa:	ldr	r4, [pc, #132]	; (b030 <error@@Base+0x5100>)
    afac:	sub	sp, #20
    afae:	ldr	r2, [pc, #132]	; (b034 <error@@Base+0x5104>)
    afb0:	lsrs	r3, r3, #5
    afb2:	add	r4, pc
    afb4:	cmp	r0, #0
    afb6:	it	eq
    afb8:	moveq	r3, #1
    afba:	ldr	r2, [r4, r2]
    afbc:	ldr	r2, [r2, #0]
    afbe:	str	r2, [sp, #12]
    afc0:	mov.w	r2, #0
    afc4:	cbnz	r3, b020 <error@@Base+0x50f0>
    afc6:	str	r3, [r1, #0]
    afc8:	add	r2, sp, #8
    afca:	mov	r5, r1
    afcc:	add	r1, sp, #4
    afce:	mov	r6, r0
    afd0:	bl	a774 <error@@Base+0x4844>
    afd4:	mov	r4, r0
    afd6:	cbz	r0, afee <error@@Base+0x50be>
    afd8:	ldr	r2, [pc, #92]	; (b038 <error@@Base+0x5108>)
    afda:	ldr	r3, [pc, #88]	; (b034 <error@@Base+0x5104>)
    afdc:	add	r2, pc
    afde:	ldr	r3, [r2, r3]
    afe0:	ldr	r2, [r3, #0]
    afe2:	ldr	r3, [sp, #12]
    afe4:	eors	r2, r3
    afe6:	bne.n	b02c <error@@Base+0x50fc>
    afe8:	mov	r0, r4
    afea:	add	sp, #20
    afec:	pop	{r4, r5, r6, r7, pc}
    afee:	ldrd	r0, r1, [sp, #4]
    aff2:	bl	9cac <error@@Base+0x3d7c>
    aff6:	mov	r7, r0
    aff8:	cbz	r0, b026 <error@@Base+0x50f6>
    affa:	ldr	r1, [sp, #8]
    affc:	mov	r0, r6
    affe:	adds	r1, #4
    b000:	bl	a32c <error@@Base+0x43fc>
    b004:	mov	r4, r0
    b006:	cbnz	r0, b018 <error@@Base+0x50e8>
    b008:	mov	r1, r6
    b00a:	mov	r0, r7
    b00c:	bl	9ce8 <error@@Base+0x3db8>
    b010:	mov	r4, r0
    b012:	cbnz	r0, b018 <error@@Base+0x50e8>
    b014:	str	r7, [r5, #0]
    b016:	b.n	afd8 <error@@Base+0x50a8>
    b018:	mov	r0, r7
    b01a:	bl	9d88 <error@@Base+0x3e58>
    b01e:	b.n	afd8 <error@@Base+0x50a8>
    b020:	mvn.w	r4, #9
    b024:	b.n	afd8 <error@@Base+0x50a8>
    b026:	mvn.w	r4, #1
    b02a:	b.n	afd8 <error@@Base+0x50a8>
    b02c:	blx	1cf8 <__stack_chk_fail@plt>
    b030:	ldrb	r6, [r7, r6]
    b032:	movs	r1, r0
    b034:	lsls	r4, r1, #9
    b036:	movs	r0, r0
    b038:	ldrb	r4, [r2, r6]
    b03a:	movs	r1, r0
    b03c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    b040:	mov	r5, r1
    b042:	ldr	r1, [pc, #164]	; (b0e8 <error@@Base+0x51b8>)
    b044:	mov	r4, r2
    b046:	ldr	r2, [pc, #164]	; (b0ec <error@@Base+0x51bc>)
    b048:	movw	r3, #65531	; 0xfffb
    b04c:	add	r1, pc
    b04e:	movt	r3, #2047	; 0x7ff
    b052:	cmp	r4, r3
    b054:	sub	sp, #8
    b056:	ldr	r2, [r1, r2]
    b058:	ldr	r2, [r2, #0]
    b05a:	str	r2, [sp, #4]
    b05c:	mov.w	r2, #0
    b060:	bhi.n	b0de <error@@Base+0x51ae>
    b062:	cbz	r4, b082 <error@@Base+0x5152>
    b064:	mov	r3, r5
    b066:	b.n	b06e <error@@Base+0x513e>
    b068:	subs	r4, #1
    b06a:	mov	r5, r3
    b06c:	beq.n	b082 <error@@Base+0x5152>
    b06e:	ldrb	r6, [r3, #0]
    b070:	mov	r5, r3
    b072:	adds	r3, #1
    b074:	cmp	r6, #0
    b076:	beq.n	b068 <error@@Base+0x5138>
    b078:	lsrs	r6, r6, #7
    b07a:	adds	r7, r6, r4
    b07c:	adds	r1, r7, #4
    b07e:	mov	r8, r6
    b080:	b.n	b08a <error@@Base+0x515a>
    b082:	mov	r7, r4
    b084:	mov	r8, r4
    b086:	movs	r1, #4
    b088:	mov	r6, r4
    b08a:	mov	r2, sp
    b08c:	bl	a2f8 <error@@Base+0x43c8>
    b090:	cmp	r0, #0
    b092:	blt.n	b0b6 <error@@Base+0x5186>
    b094:	ldr	r3, [sp, #0]
    b096:	lsrs	r0, r7, #24
    b098:	lsrs	r1, r7, #16
    b09a:	lsrs	r2, r7, #8
    b09c:	strb	r0, [r3, #0]
    b09e:	ldr	r3, [sp, #0]
    b0a0:	strb	r1, [r3, #1]
    b0a2:	ldr	r3, [sp, #0]
    b0a4:	strb	r2, [r3, #2]
    b0a6:	ldr	r3, [sp, #0]
    b0a8:	strb	r7, [r3, #3]
    b0aa:	cbz	r6, b0b2 <error@@Base+0x5182>
    b0ac:	ldr	r3, [sp, #0]
    b0ae:	movs	r2, #0
    b0b0:	strb	r2, [r3, #4]
    b0b2:	cbnz	r4, b0cc <error@@Base+0x519c>
    b0b4:	movs	r0, #0
    b0b6:	ldr	r2, [pc, #56]	; (b0f0 <error@@Base+0x51c0>)
    b0b8:	ldr	r3, [pc, #48]	; (b0ec <error@@Base+0x51bc>)
    b0ba:	add	r2, pc
    b0bc:	ldr	r3, [r2, r3]
    b0be:	ldr	r2, [r3, #0]
    b0c0:	ldr	r3, [sp, #4]
    b0c2:	eors	r2, r3
    b0c4:	bne.n	b0e4 <error@@Base+0x51b4>
    b0c6:	add	sp, #8
    b0c8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    b0cc:	ldr	r0, [sp, #0]
    b0ce:	add.w	r8, r8, #4
    b0d2:	mov	r2, r4
    b0d4:	mov	r1, r5
    b0d6:	add	r0, r8
    b0d8:	blx	1b84 <memcpy@plt>
    b0dc:	b.n	b0b4 <error@@Base+0x5184>
    b0de:	mvn.w	r0, #8
    b0e2:	b.n	b0b6 <error@@Base+0x5186>
    b0e4:	blx	1cf8 <__stack_chk_fail@plt>
    b0e8:	ldrb	r4, [r4, r4]
    b0ea:	movs	r1, r0
    b0ec:	lsls	r4, r1, #9
    b0ee:	movs	r0, r0
    b0f0:	ldrb	r6, [r6, r2]
    b0f2:	movs	r1, r0
    b0f4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b0f8:	sub	sp, #20
    b0fa:	ldr	r4, [pc, #160]	; (b19c <error@@Base+0x526c>)
    b0fc:	mov	r7, r1
    b0fe:	ldr	r3, [pc, #160]	; (b1a0 <error@@Base+0x5270>)
    b100:	add	r1, sp, #4
    b102:	add	r4, pc
    b104:	mov	r8, r2
    b106:	add	r2, sp, #8
    b108:	mov	r9, r0
    b10a:	ldr	r3, [r4, r3]
    b10c:	ldr	r3, [r3, #0]
    b10e:	str	r3, [sp, #12]
    b110:	mov.w	r3, #0
    b114:	bl	a774 <error@@Base+0x4844>
    b118:	cmp	r0, #0
    b11a:	blt.n	b170 <error@@Base+0x5240>
    b11c:	ldr	r1, [sp, #8]
    b11e:	cmp	r1, #0
    b120:	beq.n	b186 <error@@Base+0x5256>
    b122:	ldr	r5, [sp, #4]
    b124:	ldrb	r4, [r5, #0]
    b126:	lsls	r3, r4, #24
    b128:	bmi.n	b190 <error@@Base+0x5260>
    b12a:	movw	r3, #2049	; 0x801
    b12e:	cmp	r1, r3
    b130:	bhi.n	b18a <error@@Base+0x525a>
    b132:	bne.n	b136 <error@@Base+0x5206>
    b134:	cbnz	r4, b18a <error@@Base+0x525a>
    b136:	adds	r3, r5, #1
    b138:	add	r5, r1
    b13a:	adds	r2, r3, r1
    b13c:	b.n	b148 <error@@Base+0x5218>
    b13e:	cmp	r3, r5
    b140:	str	r3, [sp, #4]
    b142:	beq.n	b186 <error@@Base+0x5256>
    b144:	ldrb.w	r4, [r3], #1
    b148:	subs	r6, r2, r3
    b14a:	cmp	r4, #0
    b14c:	beq.n	b13e <error@@Base+0x520e>
    b14e:	cbz	r7, b154 <error@@Base+0x5224>
    b150:	ldr	r3, [sp, #4]
    b152:	str	r3, [r7, #0]
    b154:	cmp.w	r8, #0
    b158:	beq.n	b15e <error@@Base+0x522e>
    b15a:	str.w	r6, [r8]
    b15e:	adds	r1, #4
    b160:	mov	r0, r9
    b162:	bl	a32c <error@@Base+0x43fc>
    b166:	subs	r0, #0
    b168:	it	ne
    b16a:	movne	r0, #1
    b16c:	bl	e0a4 <setlogin@@Base+0x229c>
    b170:	ldr	r2, [pc, #48]	; (b1a4 <error@@Base+0x5274>)
    b172:	ldr	r3, [pc, #44]	; (b1a0 <error@@Base+0x5270>)
    b174:	add	r2, pc
    b176:	ldr	r3, [r2, r3]
    b178:	ldr	r2, [r3, #0]
    b17a:	ldr	r3, [sp, #12]
    b17c:	eors	r2, r3
    b17e:	bne.n	b196 <error@@Base+0x5266>
    b180:	add	sp, #20
    b182:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b186:	movs	r6, #0
    b188:	b.n	b14e <error@@Base+0x521e>
    b18a:	mvn.w	r0, #6
    b18e:	b.n	b170 <error@@Base+0x5240>
    b190:	mvn.w	r0, #4
    b194:	b.n	b170 <error@@Base+0x5240>
    b196:	blx	1cf8 <__stack_chk_fail@plt>
    b19a:	nop
    b19c:	ldrb	r6, [r5, r1]
    b19e:	movs	r1, r0
    b1a0:	lsls	r4, r1, #9
    b1a2:	movs	r0, r0
    b1a4:	ldrh	r4, [r7, r7]
    b1a6:	movs	r1, r0
    b1a8:	cmp	r1, #0
    b1aa:	beq.n	b280 <error@@Base+0x5350>
    b1ac:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b1b0:	mov	sl, r0
    b1b2:	ldr	r3, [pc, #208]	; (b284 <error@@Base+0x5354>)
    b1b4:	mov	r6, r2
    b1b6:	ldr.w	r9, [pc, #208]	; b288 <error@@Base+0x5358>
    b1ba:	mov	r8, r1
    b1bc:	ldr.w	fp, [pc, #204]	; b28c <error@@Base+0x535c>
    b1c0:	add	r3, pc
    b1c2:	vpush	{d8}
    b1c6:	add	r9, pc
    b1c8:	add	fp, pc
    b1ca:	movs	r7, #0
    b1cc:	vmov	s16, r3
    b1d0:	mov	r3, r7
    b1d2:	mov	r5, r7
    b1d4:	vmov	r2, s16
    b1d8:	adds	r7, #16
    b1da:	movs	r1, #1
    b1dc:	mov	r0, r6
    b1de:	blx	1d10 <__fprintf_chk@plt>
    b1e2:	cmp	r5, r7
    b1e4:	bcs.n	b26a <error@@Base+0x533a>
    b1e6:	mov	r4, r5
    b1e8:	b.n	b1fc <error@@Base+0x52cc>
    b1ea:	ldrb.w	r3, [sl, r4]
    b1ee:	mov	r2, fp
    b1f0:	adds	r4, #1
    b1f2:	mov	r0, r6
    b1f4:	blx	1d10 <__fprintf_chk@plt>
    b1f8:	cmp	r4, r7
    b1fa:	beq.n	b216 <error@@Base+0x52e6>
    b1fc:	cmp	r8, r4
    b1fe:	mov	r3, r6
    b200:	mov.w	r2, #3
    b204:	mov.w	r1, #1
    b208:	mov	r0, r9
    b20a:	bhi.n	b1ea <error@@Base+0x52ba>
    b20c:	adds	r4, #1
    b20e:	blx	1c94 <fwrite@plt>
    b212:	cmp	r4, r7
    b214:	bne.n	b1fc <error@@Base+0x52cc>
    b216:	mov	r1, r6
    b218:	movs	r0, #32
    b21a:	blx	1d28 <fputc@plt>
    b21e:	b.n	b22e <error@@Base+0x52fe>
    b220:	mov	r1, r6
    b222:	movs	r0, #46	; 0x2e
    b224:	blx	1d28 <fputc@plt>
    b228:	adds	r5, #1
    b22a:	cmp	r5, r7
    b22c:	beq.n	b256 <error@@Base+0x5326>
    b22e:	cmp	r8, r5
    b230:	bls.n	b228 <error@@Base+0x52f8>
    b232:	ldrb.w	r4, [sl, r5]
    b236:	lsls	r2, r4, #24
    b238:	bmi.n	b220 <error@@Base+0x52f0>
    b23a:	blx	1cb8 <__ctype_b_loc@plt>
    b23e:	ldr	r3, [r0, #0]
    b240:	ldrh.w	r3, [r3, r4, lsl #1]
    b244:	lsls	r3, r3, #17
    b246:	bpl.n	b220 <error@@Base+0x52f0>
    b248:	adds	r5, #1
    b24a:	mov	r0, r4
    b24c:	mov	r1, r6
    b24e:	blx	1d28 <fputc@plt>
    b252:	cmp	r5, r7
    b254:	bne.n	b22e <error@@Base+0x52fe>
    b256:	mov	r1, r6
    b258:	movs	r0, #10
    b25a:	blx	1d28 <fputc@plt>
    b25e:	cmp	r8, r7
    b260:	bhi.n	b1d0 <error@@Base+0x52a0>
    b262:	vpop	{d8}
    b266:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b26a:	mov	r1, r6
    b26c:	movs	r0, #32
    b26e:	blx	1d28 <fputc@plt>
    b272:	mov	r1, r6
    b274:	movs	r0, #10
    b276:	blx	1d28 <fputc@plt>
    b27a:	cmp	r8, r7
    b27c:	bhi.n	b1d0 <error@@Base+0x52a0>
    b27e:	b.n	b262 <error@@Base+0x5332>
    b280:	bx	lr
    b282:	nop
    b284:	ldr	r3, [pc, #944]	; (b638 <error@@Base+0x5708>)
    b286:	movs	r0, r0
    b288:	ldr	r3, [pc, #984]	; (b664 <error@@Base+0x5734>)
    b28a:	movs	r0, r0
    b28c:	ldr	r3, [pc, #944]	; (b640 <error@@Base+0x5710>)
    b28e:	movs	r0, r0
    b290:	push	{r4, r5, r6, lr}
    b292:	sub	sp, #8
    b294:	mov	r5, r1
    b296:	mov	r4, r0
    b298:	bl	a07c <error@@Base+0x414c>
    b29c:	ldr	r2, [pc, #44]	; (b2cc <error@@Base+0x539c>)
    b29e:	mov	r3, r4
    b2a0:	movs	r1, #1
    b2a2:	add	r2, pc
    b2a4:	str	r0, [sp, #0]
    b2a6:	mov	r0, r5
    b2a8:	blx	1d10 <__fprintf_chk@plt>
    b2ac:	mov	r0, r4
    b2ae:	bl	a144 <error@@Base+0x4214>
    b2b2:	mov	r6, r0
    b2b4:	mov	r0, r4
    b2b6:	bl	a07c <error@@Base+0x414c>
    b2ba:	mov	r2, r5
    b2bc:	mov	r1, r0
    b2be:	mov	r0, r6
    b2c0:	add	sp, #8
    b2c2:	ldmia.w	sp!, {r4, r5, r6, lr}
    b2c6:	b.w	b1a8 <error@@Base+0x5278>
    b2ca:	nop
    b2cc:	ldr	r3, [pc, #120]	; (b348 <error@@Base+0x5418>)
    b2ce:	movs	r0, r0
    b2d0:	ldr	r2, [pc, #176]	; (b384 <error@@Base+0x5454>)
    b2d2:	ldr	r3, [pc, #180]	; (b388 <error@@Base+0x5458>)
    b2d4:	add	r2, pc
    b2d6:	push	{r4, r5, r6, r7, lr}
    b2d8:	sub	sp, #28
    b2da:	ldr	r3, [r2, r3]
    b2dc:	mov	r5, r0
    b2de:	ldr	r6, [pc, #172]	; (b38c <error@@Base+0x545c>)
    b2e0:	ldr	r3, [r3, #0]
    b2e2:	str	r3, [sp, #20]
    b2e4:	mov.w	r3, #0
    b2e8:	bl	a07c <error@@Base+0x414c>
    b2ec:	add	r6, pc
    b2ee:	mov	r4, r0
    b2f0:	mov	r0, r5
    b2f2:	bl	a144 <error@@Base+0x4214>
    b2f6:	mov	r5, sp
    b2f8:	mov	r7, r0
    b2fa:	ldmia	r6!, {r0, r1, r2, r3}
    b2fc:	ldr	r6, [r6, #0]
    b2fe:	stmia	r5!, {r0, r1, r2, r3}
    b300:	strb	r6, [r5, #0]
    b302:	cbz	r4, b362 <error@@Base+0x5432>
    b304:	mvn.w	r3, #2147483648	; 0x80000000
    b308:	cmp	r4, r3
    b30a:	bcs.n	b35e <error@@Base+0x542e>
    b30c:	lsls	r5, r4, #1
    b30e:	adds	r0, r5, #1
    b310:	blx	1ce0 <malloc@plt>
    b314:	cbz	r0, b35e <error@@Base+0x542e>
    b316:	subs	r1, r7, #1
    b318:	add	r5, r0
    b31a:	mov	r2, r0
    b31c:	ldrb.w	r3, [r1, #1]!
    b320:	add	r6, sp, #24
    b322:	adds	r2, #2
    b324:	add.w	r3, r6, r3, lsr #4
    b328:	ldrb.w	r3, [r3, #-24]
    b32c:	strb.w	r3, [r2, #-2]
    b330:	ldrb	r3, [r1, #0]
    b332:	and.w	r3, r3, #15
    b336:	add	r3, r6
    b338:	ldrb.w	r3, [r3, #-24]
    b33c:	strb.w	r3, [r2, #-1]
    b340:	cmp	r5, r2
    b342:	bne.n	b31c <error@@Base+0x53ec>
    b344:	movs	r3, #0
    b346:	strb.w	r3, [r0, r4, lsl #1]
    b34a:	ldr	r2, [pc, #68]	; (b390 <error@@Base+0x5460>)
    b34c:	ldr	r3, [pc, #56]	; (b388 <error@@Base+0x5458>)
    b34e:	add	r2, pc
    b350:	ldr	r3, [r2, r3]
    b352:	ldr	r2, [r3, #0]
    b354:	ldr	r3, [sp, #20]
    b356:	eors	r2, r3
    b358:	bne.n	b380 <error@@Base+0x5450>
    b35a:	add	sp, #28
    b35c:	pop	{r4, r5, r6, r7, pc}
    b35e:	movs	r0, #0
    b360:	b.n	b34a <error@@Base+0x541a>
    b362:	ldr	r2, [pc, #48]	; (b394 <error@@Base+0x5464>)
    b364:	ldr	r3, [pc, #32]	; (b388 <error@@Base+0x5458>)
    b366:	add	r2, pc
    b368:	ldr	r3, [r2, r3]
    b36a:	ldr	r2, [r3, #0]
    b36c:	ldr	r3, [sp, #20]
    b36e:	eors	r2, r3
    b370:	bne.n	b380 <error@@Base+0x5450>
    b372:	ldr	r0, [pc, #36]	; (b398 <error@@Base+0x5468>)
    b374:	add	r0, pc
    b376:	add	sp, #28
    b378:	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    b37c:	b.w	1cd0 <strdup@plt>
    b380:	blx	1cf8 <__stack_chk_fail@plt>
    b384:	ldrh	r4, [r3, r2]
    b386:	movs	r1, r0
    b388:	lsls	r4, r1, #9
    b38a:	movs	r0, r0
    b38c:	ldr	r2, [pc, #944]	; (b740 <error@@Base+0x5810>)
    b38e:	movs	r0, r0
    b390:	ldrh	r2, [r4, r0]
    b392:	movs	r1, r0
    b394:	ldrh	r2, [r1, r0]
    b396:	movs	r1, r0
    b398:	subs	r1, #200	; 0xc8
    b39a:	movs	r0, r0
    b39c:	cmp	r1, #0
    b39e:	it	ne
    b3a0:	cmpne	r0, #0
    b3a2:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b3a6:	vpush	{d8}
    b3aa:	beq.w	b4b4 <error@@Base+0x5584>
    b3ae:	mov	r8, r2
    b3b0:	mov	r5, r1
    b3b2:	mov	r4, r0
    b3b4:	bl	a07c <error@@Base+0x414c>
    b3b8:	mvn.w	r3, #2147483648	; 0x80000000
    b3bc:	cmp	r0, r3
    b3be:	bcs.n	b4b4 <error@@Base+0x5584>
    b3c0:	mov	r0, r4
    b3c2:	bl	a07c <error@@Base+0x414c>
    b3c6:	mov	fp, r0
    b3c8:	cbnz	r0, b3d4 <error@@Base+0x54a4>
    b3ca:	vpop	{d8}
    b3ce:	mov	r0, fp
    b3d0:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b3d4:	mov	r0, r4
    b3d6:	bl	a07c <error@@Base+0x414c>
    b3da:	movw	r3, #43691	; 0xaaab
    b3de:	movt	r3, #43690	; 0xaaaa
    b3e2:	adds	r6, r0, #2
    b3e4:	umull	r3, r6, r3, r6
    b3e8:	lsrs	r6, r6, #1
    b3ea:	lsls	r6, r6, #2
    b3ec:	adds	r3, r6, #1
    b3ee:	mov	r0, r3
    b3f0:	vmov	s16, r3
    b3f4:	mov	r6, r3
    b3f6:	blx	1ce0 <malloc@plt>
    b3fa:	mov	r7, r0
    b3fc:	cmp	r0, #0
    b3fe:	beq.n	b4ba <error@@Base+0x558a>
    b400:	mov	r0, r4
    b402:	bl	a144 <error@@Base+0x4214>
    b406:	mov	r9, r0
    b408:	mov	r0, r4
    b40a:	bl	a07c <error@@Base+0x414c>
    b40e:	mov	r3, r6
    b410:	mov	r2, r7
    b412:	mov	r1, r0
    b414:	mov	r0, r9
    b416:	bl	be70 <setlogin@@Base+0x68>
    b41a:	cmp.w	r0, #4294967295	; 0xffffffff
    b41e:	mov	fp, r0
    b420:	beq.n	b472 <error@@Base+0x5542>
    b422:	cmp.w	r8, #0
    b426:	beq.n	b486 <error@@Base+0x5556>
    b428:	ldrb	r1, [r7, #0]
    b42a:	cbz	r1, b4a8 <error@@Base+0x5578>
    b42c:	movw	r8, #41195	; 0xa0eb
    b430:	adds	r6, r7, #1
    b432:	movt	r8, #59918	; 0xea0e
    b436:	mvn.w	r9, r7
    b43a:	mov.w	sl, #70	; 0x46
    b43e:	b.n	b446 <error@@Base+0x5516>
    b440:	ldrb.w	r1, [r6], #1
    b444:	cbz	r1, b4a4 <error@@Base+0x5574>
    b446:	mov	r0, r5
    b448:	bl	aca8 <error@@Base+0x4d78>
    b44c:	add.w	r2, r9, r6
    b450:	mov	fp, r0
    b452:	cbnz	r0, b472 <error@@Base+0x5542>
    b454:	lsrs	r4, r2, #1
    b456:	umull	r3, r4, r8, r4
    b45a:	lsrs	r4, r4, #5
    b45c:	mls	r4, sl, r4, r2
    b460:	cmp	r4, #69	; 0x45
    b462:	bne.n	b440 <error@@Base+0x5510>
    b464:	movs	r1, #10
    b466:	mov	r0, r5
    b468:	bl	aca8 <error@@Base+0x4d78>
    b46c:	cmp	r0, #0
    b46e:	beq.n	b440 <error@@Base+0x5510>
    b470:	mov	fp, r0
    b472:	vmov	r1, s16
    b476:	mov	r0, r7
    b478:	bl	c26c <setlogin@@Base+0x464>
    b47c:	vpop	{d8}
    b480:	mov	r0, fp
    b482:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b486:	mov	r0, r7
    b488:	blx	1b6c <strlen@plt>
    b48c:	mov	r1, r7
    b48e:	mov	r2, r0
    b490:	mov	r0, r5
    b492:	bl	aa08 <error@@Base+0x4ad8>
    b496:	vmov	r1, s16
    b49a:	mov	fp, r0
    b49c:	mov	r0, r7
    b49e:	bl	c26c <setlogin@@Base+0x464>
    b4a2:	b.n	b47c <error@@Base+0x554c>
    b4a4:	cmp	r4, #69	; 0x45
    b4a6:	beq.n	b472 <error@@Base+0x5542>
    b4a8:	mov	r0, r5
    b4aa:	movs	r1, #10
    b4ac:	bl	aca8 <error@@Base+0x4d78>
    b4b0:	mov	fp, r0
    b4b2:	b.n	b472 <error@@Base+0x5542>
    b4b4:	mvn.w	fp, #9
    b4b8:	b.n	b3ca <error@@Base+0x549a>
    b4ba:	mvn.w	fp, #1
    b4be:	b.n	b3ca <error@@Base+0x549a>
    b4c0:	push	{r3, r4, r5, r6, r7, lr}
    b4c2:	mov	r7, r0
    b4c4:	mov	r0, r1
    b4c6:	mov	r5, r1
    b4c8:	blx	1b6c <strlen@plt>
    b4cc:	mov	r4, r0
    b4ce:	cbnz	r0, b4d6 <error@@Base+0x55a6>
    b4d0:	mov	r5, r0
    b4d2:	mov	r0, r5
    b4d4:	pop	{r3, r4, r5, r6, r7, pc}
    b4d6:	blx	1ce0 <malloc@plt>
    b4da:	mov	r6, r0
    b4dc:	cbz	r0, b528 <error@@Base+0x55f8>
    b4de:	mov	r2, r4
    b4e0:	mov	r0, r5
    b4e2:	mov	r1, r6
    b4e4:	bl	bfb8 <setlogin@@Base+0x1b0>
    b4e8:	subs	r2, r0, #0
    b4ea:	blt.n	b510 <error@@Base+0x55e0>
    b4ec:	mov	r1, r6
    b4ee:	mov	r0, r7
    b4f0:	bl	aa08 <error@@Base+0x4ad8>
    b4f4:	mov	r1, r4
    b4f6:	mov.w	r2, #4294967295	; 0xffffffff
    b4fa:	subs	r5, r0, #0
    b4fc:	mov	r0, r6
    b4fe:	it	ge
    b500:	movge	r5, #0
    b502:	blx	1bd8 <__explicit_bzero_chk@plt+0x4>
    b506:	mov	r0, r6
    b508:	blx	1adc <free@plt+0x4>
    b50c:	mov	r0, r5
    b50e:	pop	{r3, r4, r5, r6, r7, pc}
    b510:	mov	r0, r6
    b512:	mov	r1, r4
    b514:	mov.w	r2, #4294967295	; 0xffffffff
    b518:	mvn.w	r5, #3
    b51c:	blx	1bd8 <__explicit_bzero_chk@plt+0x4>
    b520:	mov	r0, r6
    b522:	blx	1adc <free@plt+0x4>
    b526:	b.n	b4d2 <error@@Base+0x55a2>
    b528:	mvn.w	r5, #1
    b52c:	b.n	b4d2 <error@@Base+0x55a2>
    b52e:	nop
    b530:	push	{r4, r5, r6, lr}
    b532:	mov	r4, r0
    b534:	bl	a144 <error@@Base+0x4214>
    b538:	mov	r5, r0
    b53a:	mov	r0, r4
    b53c:	bl	a07c <error@@Base+0x414c>
    b540:	cbz	r5, b57c <error@@Base+0x564c>
    b542:	mov	r4, r0
    b544:	cbz	r0, b570 <error@@Base+0x5640>
    b546:	mov	r2, r0
    b548:	movs	r1, #0
    b54a:	mov	r0, r5
    b54c:	blx	1ec8 <memchr@plt>
    b550:	cbz	r0, b582 <error@@Base+0x5652>
    b552:	subs	r6, r4, #1
    b554:	adds	r3, r5, r6
    b556:	cmp	r0, r3
    b558:	bne.n	b57c <error@@Base+0x564c>
    b55a:	mov	r0, r4
    b55c:	blx	1ce0 <malloc@plt>
    b560:	mov	r3, r0
    b562:	cbz	r0, b57c <error@@Base+0x564c>
    b564:	cbnz	r6, b59e <error@@Base+0x566e>
    b566:	mov	r4, r3
    b568:	movs	r2, #0
    b56a:	mov	r0, r3
    b56c:	strb	r2, [r4, #0]
    b56e:	pop	{r4, r5, r6, pc}
    b570:	movs	r0, #1
    b572:	blx	1ce0 <malloc@plt>
    b576:	mov	r3, r0
    b578:	cmp	r0, #0
    b57a:	bne.n	b566 <error@@Base+0x5636>
    b57c:	movs	r3, #0
    b57e:	mov	r0, r3
    b580:	pop	{r4, r5, r6, pc}
    b582:	adds	r0, r4, #1
    b584:	blx	1ce0 <malloc@plt>
    b588:	mov	r3, r0
    b58a:	cmp	r0, #0
    b58c:	beq.n	b57c <error@@Base+0x564c>
    b58e:	mov	r2, r4
    b590:	mov	r0, r3
    b592:	mov	r1, r5
    b594:	blx	1b84 <memcpy@plt>
    b598:	add	r4, r0
    b59a:	mov	r3, r0
    b59c:	b.n	b568 <error@@Base+0x5638>
    b59e:	mov	r4, r6
    b5a0:	b.n	b58e <error@@Base+0x565e>
    b5a2:	nop
    b5a4:	push	{r4, r5, r6, lr}
    b5a6:	mov	r5, r0
    b5a8:	mov	r6, r1
    b5aa:	bl	9c6c <error@@Base+0x3d3c>
    b5ae:	mov	r4, r0
    b5b0:	cbz	r0, b5ce <error@@Base+0x569e>
    b5b2:	mov	r2, r6
    b5b4:	mov	r0, r5
    b5b6:	mov	r1, r4
    b5b8:	bl	b39c <error@@Base+0x546c>
    b5bc:	cbnz	r0, b5d2 <error@@Base+0x56a2>
    b5be:	mov	r0, r4
    b5c0:	bl	b530 <error@@Base+0x5600>
    b5c4:	mov	r1, r0
    b5c6:	mov	r0, r4
    b5c8:	mov	r4, r1
    b5ca:	bl	9d88 <error@@Base+0x3e58>
    b5ce:	mov	r0, r4
    b5d0:	pop	{r4, r5, r6, pc}
    b5d2:	mov	r0, r4
    b5d4:	movs	r4, #0
    b5d6:	bl	9d88 <error@@Base+0x3e58>
    b5da:	mov	r0, r4
    b5dc:	pop	{r4, r5, r6, pc}
    b5de:	nop
    b5e0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    b5e4:	mov	r4, r1
    b5e6:	mov	r7, r2
    b5e8:	mov	r5, r3
    b5ea:	mov	r6, r0
    b5ec:	bl	a144 <error@@Base+0x4214>
    b5f0:	cbz	r0, b636 <error@@Base+0x5706>
    b5f2:	subs	r3, r5, #1
    b5f4:	cmp.w	r4, #134217728	; 0x8000000
    b5f8:	it	ls
    b5fa:	cmpls.w	r3, #134217728	; 0x8000000
    b5fe:	bcs.n	b62a <error@@Base+0x56fa>
    b600:	mov	r0, r6
    b602:	add.w	r8, r4, r5
    b606:	bl	a07c <error@@Base+0x414c>
    b60a:	cmp	r8, r0
    b60c:	bhi.n	b630 <error@@Base+0x5700>
    b60e:	mov	r0, r6
    b610:	bl	a144 <error@@Base+0x4214>
    b614:	mov	r2, r5
    b616:	mov	r1, r7
    b618:	add	r0, r4
    b61a:	bl	c9c8 <setlogin@@Base+0xbc0>
    b61e:	cmp	r0, #0
    b620:	it	ne
    b622:	mvnne.w	r0, #3
    b626:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    b62a:	mvn.w	r0, #9
    b62e:	b.n	b626 <error@@Base+0x56f6>
    b630:	mvn.w	r0, #2
    b634:	b.n	b626 <error@@Base+0x56f6>
    b636:	mov.w	r0, #4294967295	; 0xffffffff
    b63a:	b.n	b626 <error@@Base+0x56f6>
    b63c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    b640:	mov	r5, r0
    b642:	ldr.w	r8, [sp, #32]
    b646:	mov	r4, r1
    b648:	mov	r9, r2
    b64a:	mov	r7, r3
    b64c:	cmp.w	r8, #0
    b650:	beq.n	b658 <error@@Base+0x5728>
    b652:	movs	r3, #0
    b654:	str.w	r3, [r8]
    b658:	mov	r0, r5
    b65a:	bl	a144 <error@@Base+0x4214>
    b65e:	cmp	r0, #0
    b660:	beq.n	b6de <error@@Base+0x57ae>
    b662:	subs	r6, r7, #1
    b664:	cmp.w	r4, #134217728	; 0x8000000
    b668:	it	ls
    b66a:	cmpls.w	r6, #134217728	; 0x8000000
    b66e:	ite	cs
    b670:	movcs	r6, #1
    b672:	movcc	r6, #0
    b674:	bcs.n	b6d8 <error@@Base+0x57a8>
    b676:	mov	r0, r5
    b678:	bl	a07c <error@@Base+0x414c>
    b67c:	cmp	r0, r4
    b67e:	bcc.n	b6d2 <error@@Base+0x57a2>
    b680:	mov	r0, r5
    b682:	add.w	sl, r4, r7
    b686:	bl	a07c <error@@Base+0x414c>
    b68a:	cmp	sl, r0
    b68c:	bhi.n	b6d2 <error@@Base+0x57a2>
    b68e:	mov	r0, r5
    b690:	bl	a144 <error@@Base+0x4214>
    b694:	add.w	sl, r0, r4
    b698:	mov	r0, r5
    b69a:	bl	a07c <error@@Base+0x414c>
    b69e:	mov	r3, r7
    b6a0:	mov	r2, r9
    b6a2:	mov	r1, r0
    b6a4:	mov	r0, sl
    b6a6:	subs	r1, r1, r4
    b6a8:	blx	1c20 <memmem@plt>
    b6ac:	mov	r4, r0
    b6ae:	cbz	r0, b6e4 <error@@Base+0x57b4>
    b6b0:	mov	r0, r8
    b6b2:	cmp.w	r8, #0
    b6b6:	beq.n	b6ce <error@@Base+0x579e>
    b6b8:	mov	r0, r5
    b6ba:	bl	a144 <error@@Base+0x4214>
    b6be:	mov	r1, r0
    b6c0:	mov	r0, r4
    b6c2:	bl	df3c <setlogin@@Base+0x2134>
    b6c6:	mov	r3, r0
    b6c8:	mov	r0, r6
    b6ca:	str.w	r3, [r8]
    b6ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    b6d2:	mvn.w	r0, #2
    b6d6:	b.n	b6ce <error@@Base+0x579e>
    b6d8:	mvn.w	r0, #9
    b6dc:	b.n	b6ce <error@@Base+0x579e>
    b6de:	mov.w	r0, #4294967295	; 0xffffffff
    b6e2:	b.n	b6ce <error@@Base+0x579e>
    b6e4:	mvn.w	r0, #3
    b6e8:	b.n	b6ce <error@@Base+0x579e>
    b6ea:	nop
    b6ec:	push	{r3, lr}
    b6ee:	blx	1ab4 <_exit@plt>
    b6f2:	nop
    b6f4:	ldr	r3, [pc, #80]	; (b748 <error@@Base+0x5818>)
    b6f6:	movw	r1, #11570	; 0x2d32
    b6fa:	push	{r4, r5, r6}
    b6fc:	add	r3, pc
    b6fe:	ldr	r2, [r0, #0]
    b700:	movt	r1, #31074	; 0x7962
    b704:	movw	r5, #30821	; 0x7865
    b708:	movw	r4, #25710	; 0x646e
    b70c:	movt	r5, #24944	; 0x6170
    b710:	movt	r4, #13088	; 0x3320
    b714:	str	r2, [r3, #16]
    b716:	movw	r2, #25972	; 0x6574
    b71a:	ldr	r6, [r0, #4]
    b71c:	movt	r2, #27424	; 0x6b20
    b720:	str	r6, [r3, #20]
    b722:	ldr	r6, [r0, #8]
    b724:	str	r6, [r3, #24]
    b726:	ldr	r6, [r0, #12]
    b728:	str	r6, [r3, #28]
    b72a:	ldr	r6, [r0, #16]
    b72c:	str	r6, [r3, #32]
    b72e:	ldr	r6, [r0, #20]
    b730:	str	r6, [r3, #36]	; 0x24
    b732:	ldr	r6, [r0, #24]
    b734:	str	r6, [r3, #40]	; 0x28
    b736:	ldr	r0, [r0, #28]
    b738:	strd	r5, r4, [r3]
    b73c:	strd	r1, r2, [r3, #8]
    b740:	str	r0, [r3, #44]	; 0x2c
    b742:	pop	{r4, r5, r6}
    b744:	bx	lr
    b746:	nop
    b748:	ldrh	r0, [r2, r4]
    b74a:	movs	r1, r0
    b74c:	ldr	r1, [pc, #848]	; (baa0 <error@@Base+0x5b70>)
    b74e:	ldr	r2, [pc, #852]	; (baa4 <error@@Base+0x5b74>)
    b750:	add	r1, pc
    b752:	ldr	r3, [pc, #852]	; (baa8 <error@@Base+0x5b78>)
    b754:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b758:	sub	sp, #188	; 0xbc
    b75a:	ldr	r2, [r1, r2]
    b75c:	add	r3, pc
    b75e:	ldr	r2, [r2, #0]
    b760:	str	r2, [sp, #180]	; 0xb4
    b762:	mov.w	r2, #0
    b766:	mov.w	r2, #1024	; 0x400
    b76a:	str	r2, [sp, #48]	; 0x30
    b76c:	add.w	r2, r3, #64	; 0x40
    b770:	str	r2, [sp, #36]	; 0x24
    b772:	ldr	r2, [r3, #48]	; 0x30
    b774:	ldr	r1, [r3, #0]
    b776:	str	r2, [sp, #108]	; 0x6c
    b778:	str	r2, [sp, #40]	; 0x28
    b77a:	ldr	r2, [r3, #8]
    b77c:	str	r1, [sp, #52]	; 0x34
    b77e:	ldr	r1, [r3, #4]
    b780:	str	r2, [sp, #60]	; 0x3c
    b782:	ldr	r2, [r3, #12]
    b784:	str	r1, [sp, #56]	; 0x38
    b786:	str	r2, [sp, #64]	; 0x40
    b788:	ldr	r2, [r3, #16]
    b78a:	str	r2, [sp, #68]	; 0x44
    b78c:	ldr	r2, [r3, #20]
    b78e:	str	r2, [sp, #72]	; 0x48
    b790:	ldr	r2, [r3, #24]
    b792:	str	r2, [sp, #76]	; 0x4c
    b794:	ldr	r2, [r3, #28]
    b796:	str	r2, [sp, #80]	; 0x50
    b798:	ldr	r2, [r3, #32]
    b79a:	str	r2, [sp, #84]	; 0x54
    b79c:	ldr	r2, [r3, #36]	; 0x24
    b79e:	str	r2, [sp, #88]	; 0x58
    b7a0:	ldr	r2, [r3, #40]	; 0x28
    b7a2:	str	r2, [sp, #92]	; 0x5c
    b7a4:	ldr	r2, [r3, #44]	; 0x2c
    b7a6:	str	r2, [sp, #96]	; 0x60
    b7a8:	ldr	r2, [r3, #52]	; 0x34
    b7aa:	str	r2, [sp, #44]	; 0x2c
    b7ac:	ldr	r2, [r3, #56]	; 0x38
    b7ae:	ldr	r3, [r3, #60]	; 0x3c
    b7b0:	str	r2, [sp, #100]	; 0x64
    b7b2:	str	r3, [sp, #104]	; 0x68
    b7b4:	ldr	r3, [sp, #104]	; 0x68
    b7b6:	movs	r1, #10
    b7b8:	ldr	r2, [sp, #76]	; 0x4c
    b7ba:	ldr	r7, [sp, #92]	; 0x5c
    b7bc:	str	r3, [sp, #20]
    b7be:	ldr	r6, [sp, #96]	; 0x60
    b7c0:	ldr	r3, [sp, #80]	; 0x50
    b7c2:	ldr.w	ip, [sp, #88]	; 0x58
    b7c6:	str	r2, [sp, #32]
    b7c8:	ldr.w	r8, [sp, #64]	; 0x40
    b7cc:	ldr.w	lr, [sp, #84]	; 0x54
    b7d0:	str	r3, [sp, #4]
    b7d2:	str	r1, [sp, #28]
    b7d4:	strd	r7, r6, [sp, #8]
    b7d8:	ldr	r0, [sp, #100]	; 0x64
    b7da:	ldr.w	r9, [sp, #60]	; 0x3c
    b7de:	ldr	r4, [sp, #44]	; 0x2c
    b7e0:	ldr	r2, [sp, #72]	; 0x48
    b7e2:	ldr.w	sl, [sp, #56]	; 0x38
    b7e6:	ldr	r5, [sp, #40]	; 0x28
    b7e8:	ldr	r3, [sp, #68]	; 0x44
    b7ea:	ldr.w	fp, [sp, #52]	; 0x34
    b7ee:	ldr	r1, [sp, #20]
    b7f0:	ldr	r7, [sp, #32]
    b7f2:	str.w	ip, [sp, #24]
    b7f6:	mov	ip, r8
    b7f8:	str.w	lr, [sp, #16]
    b7fc:	add.w	r8, r9, r7
    b800:	add	fp, r3
    b802:	eor.w	r0, r8, r0
    b806:	eor.w	r5, fp, r5
    b80a:	add	sl, r2
    b80c:	ldr	r6, [sp, #4]
    b80e:	mov.w	r0, r0, ror #16
    b812:	str	r0, [sp, #20]
    b814:	ldr	r0, [sp, #16]
    b816:	mov.w	r5, r5, ror #16
    b81a:	eor.w	r4, sl, r4
    b81e:	add	ip, r6
    b820:	add	r0, r5
    b822:	str	r0, [sp, #16]
    b824:	ldr	r0, [sp, #24]
    b826:	mov.w	r4, r4, ror #16
    b82a:	str	r4, [sp, #24]
    b82c:	eor.w	r1, ip, r1
    b830:	mov	r9, r0
    b832:	ldr	r0, [sp, #12]
    b834:	add	r9, r4
    b836:	ldr	r4, [sp, #8]
    b838:	mov.w	r1, r1, ror #16
    b83c:	mov	lr, r0
    b83e:	ldr	r0, [sp, #16]
    b840:	mov	r6, r4
    b842:	ldr	r4, [sp, #20]
    b844:	add	lr, r1
    b846:	add	r6, r4
    b848:	eor.w	r4, r0, r3
    b84c:	ldr	r3, [sp, #4]
    b84e:	eor.w	r0, r9, r2
    b852:	str	r6, [sp, #12]
    b854:	eors	r7, r6
    b856:	mov.w	r0, r0, ror #20
    b85a:	eor.w	r6, lr, r3
    b85e:	ldr	r3, [sp, #24]
    b860:	add	sl, r0
    b862:	mov.w	r4, r4, ror #20
    b866:	ldr	r2, [sp, #20]
    b868:	add	fp, r4
    b86a:	eor.w	r3, r3, sl
    b86e:	eor.w	r5, r5, fp
    b872:	mov.w	r7, r7, ror #20
    b876:	mov.w	r3, r3, ror #24
    b87a:	str	r3, [sp, #8]
    b87c:	ldr	r3, [sp, #16]
    b87e:	mov.w	r5, r5, ror #24
    b882:	add	r8, r7
    b884:	mov.w	r6, r6, ror #20
    b888:	add	r3, r5
    b88a:	str	r3, [sp, #4]
    b88c:	ldr	r3, [sp, #8]
    b88e:	eor.w	r2, r2, r8
    b892:	add	ip, r6
    b894:	add	r9, r3
    b896:	ldr	r3, [sp, #12]
    b898:	mov.w	r2, r2, ror #24
    b89c:	eor.w	r1, r1, ip
    b8a0:	add	r3, r2
    b8a2:	str	r3, [sp, #16]
    b8a4:	ldr	r3, [sp, #4]
    b8a6:	mov.w	r1, r1, ror #24
    b8aa:	add	lr, r1
    b8ac:	eor.w	r0, r0, r9
    b8b0:	eors	r4, r3
    b8b2:	eor.w	r6, r6, lr
    b8b6:	ldr	r3, [sp, #16]
    b8b8:	mov.w	r4, r4, ror #25
    b8bc:	mov.w	r6, r6, ror #25
    b8c0:	add	ip, r4
    b8c2:	eors	r7, r3
    b8c4:	eor.w	r2, r2, ip
    b8c8:	mov.w	r3, r0, ror #25
    b8cc:	add	r8, r6
    b8ce:	add	fp, r3
    b8d0:	mov.w	r2, r2, ror #16
    b8d4:	eor.w	r1, r1, fp
    b8d8:	ldr	r0, [sp, #8]
    b8da:	mov.w	r7, r7, ror #25
    b8de:	str	r3, [sp, #12]
    b8e0:	mov	r3, r8
    b8e2:	str.w	r8, [sp, #24]
    b8e6:	add.w	r8, r9, r2
    b8ea:	str	r2, [sp, #32]
    b8ec:	mov.w	r1, r1, ror #16
    b8f0:	ldr	r2, [sp, #16]
    b8f2:	add	sl, r7
    b8f4:	eors	r0, r3
    b8f6:	eor.w	r5, r5, sl
    b8fa:	add	r2, r1
    b8fc:	str.w	r8, [sp, #8]
    b900:	mov.w	r3, r0, ror #16
    b904:	mov.w	r5, r5, ror #16
    b908:	mov	r0, r2
    b90a:	ldr	r2, [sp, #4]
    b90c:	add	lr, r5
    b90e:	str	r0, [sp, #20]
    b910:	add	r2, r3
    b912:	str.w	lr, [sp, #16]
    b916:	str	r2, [sp, #4]
    b918:	mov	r2, r8
    b91a:	eors	r4, r2
    b91c:	mov	r2, r0
    b91e:	ldr	r0, [sp, #12]
    b920:	eors	r0, r2
    b922:	mov	r2, lr
    b924:	eors	r7, r2
    b926:	ldr	r2, [sp, #4]
    b928:	mov.w	r8, r0, ror #20
    b92c:	eor.w	r9, r6, r2
    b930:	ldr	r2, [sp, #24]
    b932:	mov.w	lr, r7, ror #20
    b936:	mov.w	r6, r4, ror #20
    b93a:	mov.w	r7, r9, ror #20
    b93e:	add	ip, r6
    b940:	add.w	r9, r2, r7
    b944:	ldr	r2, [sp, #32]
    b946:	add	fp, r8
    b948:	eor.w	r3, r3, r9
    b94c:	eor.w	r2, r2, ip
    b950:	eor.w	r1, r1, fp
    b954:	add	sl, lr
    b956:	mov.w	r4, r3, ror #24
    b95a:	mov.w	r0, r2, ror #24
    b95e:	ldr	r2, [sp, #8]
    b960:	eor.w	r5, r5, sl
    b964:	mov.w	r1, r1, ror #24
    b968:	adds	r3, r2, r0
    b96a:	ldr	r2, [sp, #20]
    b96c:	mov.w	r5, r5, ror #24
    b970:	str	r3, [sp, #24]
    b972:	add	r2, r1
    b974:	str	r2, [sp, #8]
    b976:	ldr	r2, [sp, #16]
    b978:	eors	r3, r6
    b97a:	add	r2, r5
    b97c:	str	r2, [sp, #12]
    b97e:	ldr	r2, [sp, #4]
    b980:	mov.w	r3, r3, ror #25
    b984:	add	r2, r4
    b986:	str	r2, [sp, #16]
    b988:	ldr	r2, [sp, #8]
    b98a:	eor.w	r8, r8, r2
    b98e:	ldr	r2, [sp, #12]
    b990:	eor.w	lr, lr, r2
    b994:	ldr	r2, [sp, #16]
    b996:	eor.w	r6, r7, r2
    b99a:	mov.w	r2, r8, ror #25
    b99e:	mov.w	r7, lr, ror #25
    b9a2:	mov.w	r6, r6, ror #25
    b9a6:	str	r6, [sp, #4]
    b9a8:	ldr	r6, [sp, #28]
    b9aa:	subs	r6, #1
    b9ac:	str	r6, [sp, #28]
    b9ae:	bne.w	b7fc <error@@Base+0x58cc>
    b9b2:	str	r1, [sp, #20]
    b9b4:	mov	r8, ip
    b9b6:	ldr	r1, [sp, #52]	; 0x34
    b9b8:	str	r7, [sp, #32]
    b9ba:	add	r1, fp
    b9bc:	ldr	r7, [sp, #8]
    b9be:	str	r1, [sp, #8]
    b9c0:	ldr	r1, [sp, #56]	; 0x38
    b9c2:	ldrd	r6, lr, [sp, #12]
    b9c6:	add	r1, sl
    b9c8:	str	r1, [sp, #12]
    b9ca:	ldr	r1, [sp, #60]	; 0x3c
    b9cc:	ldr.w	ip, [sp, #24]
    b9d0:	add	r9, r1
    b9d2:	ldr	r1, [sp, #64]	; 0x40
    b9d4:	add	r8, r1
    b9d6:	ldr	r1, [sp, #68]	; 0x44
    b9d8:	add	r3, r1
    b9da:	str	r3, [sp, #16]
    b9dc:	ldr	r3, [sp, #72]	; 0x48
    b9de:	ldr	r1, [sp, #76]	; 0x4c
    b9e0:	adds	r3, r2, r3
    b9e2:	str	r3, [sp, #24]
    b9e4:	ldr	r3, [sp, #32]
    b9e6:	ldr	r2, [sp, #20]
    b9e8:	mov	sl, r3
    b9ea:	ldr	r3, [sp, #4]
    b9ec:	add	sl, r1
    b9ee:	ldr	r1, [sp, #80]	; 0x50
    b9f0:	add	r3, r1
    b9f2:	ldr	r1, [sp, #44]	; 0x2c
    b9f4:	mov	fp, r3
    b9f6:	ldr	r3, [sp, #84]	; 0x54
    b9f8:	add	r4, r1
    b9fa:	ldr	r1, [sp, #100]	; 0x64
    b9fc:	add	lr, r3
    b9fe:	ldr	r3, [sp, #88]	; 0x58
    ba00:	add	r1, r0
    ba02:	str	r1, [sp, #4]
    ba04:	add	ip, r3
    ba06:	ldr	r3, [sp, #92]	; 0x5c
    ba08:	ldr	r1, [sp, #104]	; 0x68
    ba0a:	add	r7, r3
    ba0c:	ldr	r3, [sp, #96]	; 0x60
    ba0e:	add	r2, r1
    ba10:	add	r6, r3
    ba12:	ldr	r3, [sp, #40]	; 0x28
    ba14:	mov	r1, r2
    ba16:	add	r5, r3
    ba18:	adds	r3, #1
    ba1a:	str	r3, [sp, #40]	; 0x28
    ba1c:	ittt	eq
    ba1e:	ldreq	r3, [sp, #44]	; 0x2c
    ba20:	addeq	r3, #1
    ba22:	streq	r3, [sp, #44]	; 0x2c
    ba24:	ldr	r0, [sp, #36]	; 0x24
    ba26:	ldr	r3, [sp, #8]
    ba28:	ldr	r2, [sp, #16]
    ba2a:	str.w	r9, [r0, #8]
    ba2e:	str	r3, [r0, #0]
    ba30:	str	r2, [r0, #16]
    ba32:	ldr	r3, [sp, #12]
    ba34:	ldr	r2, [sp, #24]
    ba36:	str.w	r8, [r0, #12]
    ba3a:	str	r3, [r0, #4]
    ba3c:	mov	r3, r0
    ba3e:	strd	r2, sl, [r0, #20]
    ba42:	strd	fp, lr, [r0, #28]
    ba46:	strd	ip, r7, [r0, #36]	; 0x24
    ba4a:	strd	r6, r5, [r0, #44]	; 0x2c
    ba4e:	str	r4, [r0, #52]	; 0x34
    ba50:	ldr	r0, [sp, #4]
    ba52:	str	r1, [r3, #60]	; 0x3c
    ba54:	str	r0, [r3, #56]	; 0x38
    ba56:	ldr	r3, [sp, #48]	; 0x30
    ba58:	cmp	r3, #64	; 0x40
    ba5a:	beq.n	ba76 <error@@Base+0x5b46>
    ba5c:	ldr	r3, [sp, #48]	; 0x30
    ba5e:	ldr	r2, [sp, #36]	; 0x24
    ba60:	subs	r3, #64	; 0x40
    ba62:	str	r3, [sp, #48]	; 0x30
    ba64:	cmp	r3, #63	; 0x3f
    ba66:	add.w	r2, r2, #64	; 0x40
    ba6a:	it	ls
    ba6c:	addls	r3, sp, #116	; 0x74
    ba6e:	str	r2, [sp, #36]	; 0x24
    ba70:	it	ls
    ba72:	strls	r3, [sp, #36]	; 0x24
    ba74:	b.n	b7b4 <error@@Base+0x5884>
    ba76:	ldr	r2, [pc, #52]	; (baac <error@@Base+0x5b7c>)
    ba78:	ldr	r1, [sp, #44]	; 0x2c
    ba7a:	add	r2, pc
    ba7c:	ldr	r3, [sp, #108]	; 0x6c
    ba7e:	adds	r3, #16
    ba80:	strd	r3, r1, [r2, #48]	; 0x30
    ba84:	ldr	r2, [pc, #40]	; (bab0 <error@@Base+0x5b80>)
    ba86:	ldr	r3, [pc, #28]	; (baa4 <error@@Base+0x5b74>)
    ba88:	add	r2, pc
    ba8a:	ldr	r3, [r2, r3]
    ba8c:	ldr	r2, [r3, #0]
    ba8e:	ldr	r3, [sp, #180]	; 0xb4
    ba90:	eors	r2, r3
    ba92:	bne.n	ba9a <error@@Base+0x5b6a>
    ba94:	add	sp, #188	; 0xbc
    ba96:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ba9a:	blx	1cf8 <__stack_chk_fail@plt>
    ba9e:	nop
    baa0:	ldrsb	r0, [r4, r0]
    baa2:	movs	r1, r0
    baa4:	lsls	r4, r1, #9
    baa6:	movs	r0, r0
    baa8:	ldrh	r0, [r6, r2]
    baaa:	movs	r1, r0
    baac:	ldrsb	r2, [r2, r6]
    baae:	movs	r1, r0
    bab0:	strh	r0, [r5, r3]
    bab2:	movs	r1, r0
    bab4:	ldr	r3, [pc, #16]	; (bac8 <error@@Base+0x5b98>)
    bab6:	movs	r2, #0
    bab8:	add	r3, pc
    baba:	strd	r2, r2, [r3, #48]	; 0x30
    babe:	ldr	r2, [r0, #0]
    bac0:	str	r2, [r3, #56]	; 0x38
    bac2:	ldr	r2, [r0, #4]
    bac4:	str	r2, [r3, #60]	; 0x3c
    bac6:	bx	lr
    bac8:	ldrsb	r4, [r2, r5]
    baca:	movs	r1, r0
    bacc:	ldr	r2, [pc, #208]	; (bba0 <error@@Base+0x5c70>)
    bace:	movs	r1, #40	; 0x28
    bad0:	ldr	r3, [pc, #208]	; (bba4 <error@@Base+0x5c74>)
    bad2:	push	{r4, r5, r6, lr}
    bad4:	add	r2, pc
    bad6:	sub	sp, #48	; 0x30
    bad8:	add	r5, sp, #4
    bada:	ldr	r3, [r2, r3]
    badc:	mov	r0, r5
    bade:	ldr	r3, [r3, #0]
    bae0:	str	r3, [sp, #44]	; 0x2c
    bae2:	mov.w	r3, #0
    bae6:	blx	1d94 <RAND_bytes@plt>
    baea:	cmp	r0, #0
    baec:	ble.n	bb92 <error@@Base+0x5c62>
    baee:	ldr	r4, [pc, #184]	; (bba8 <error@@Base+0x5c78>)
    baf0:	add	r4, pc
    baf2:	ldr.w	r3, [r4, #1088]	; 0x440
    baf6:	cmp	r3, #0
    baf8:	beq.n	bb7a <error@@Base+0x5c4a>
    bafa:	bl	b74c <error@@Base+0x581c>
    bafe:	add.w	r3, r4, #63	; 0x3f
    bb02:	add.w	r1, sp, #3
    bb06:	adds	r4, #103	; 0x67
    bb08:	ldrb.w	r2, [r3, #1]!
    bb0c:	ldrb.w	r0, [r1, #1]!
    bb10:	cmp	r3, r4
    bb12:	eor.w	r2, r2, r0
    bb16:	strb	r2, [r3, #0]
    bb18:	bne.n	bb08 <error@@Base+0x5bd8>
    bb1a:	ldr	r6, [pc, #144]	; (bbac <error@@Base+0x5c7c>)
    bb1c:	add	r6, pc
    bb1e:	add.w	r4, r6, #64	; 0x40
    bb22:	mov	r0, r4
    bb24:	bl	b6f4 <error@@Base+0x57c4>
    bb28:	add.w	r0, r6, #96	; 0x60
    bb2c:	bl	bab4 <error@@Base+0x5b84>
    bb30:	mov	r0, r4
    bb32:	movs	r2, #40	; 0x28
    bb34:	movs	r1, #0
    bb36:	blx	1a38 <memset@plt>
    bb3a:	ldr	r4, [pc, #116]	; (bbb0 <error@@Base+0x5c80>)
    bb3c:	movs	r2, #40	; 0x28
    bb3e:	mov	r1, r2
    bb40:	mov	r0, r5
    bb42:	add	r4, pc
    bb44:	blx	1bd8 <__explicit_bzero_chk@plt+0x4>
    bb48:	movs	r1, #0
    bb4a:	mov.w	r2, #1024	; 0x400
    bb4e:	add.w	r0, r4, #64	; 0x40
    bb52:	str.w	r1, [r4, #1092]	; 0x444
    bb56:	blx	1a38 <memset@plt>
    bb5a:	ldr	r2, [pc, #88]	; (bbb4 <error@@Base+0x5c84>)
    bb5c:	mov.w	r3, #27136	; 0x6a00
    bb60:	movt	r3, #24
    bb64:	str.w	r3, [r4, #1096]	; 0x448
    bb68:	add	r2, pc
    bb6a:	ldr	r3, [pc, #56]	; (bba4 <error@@Base+0x5c74>)
    bb6c:	ldr	r3, [r2, r3]
    bb6e:	ldr	r2, [r3, #0]
    bb70:	ldr	r3, [sp, #44]	; 0x2c
    bb72:	eors	r2, r3
    bb74:	bne.n	bb8e <error@@Base+0x5c5e>
    bb76:	add	sp, #48	; 0x30
    bb78:	pop	{r4, r5, r6, pc}
    bb7a:	mov	r0, r5
    bb7c:	movs	r3, #1
    bb7e:	str.w	r3, [r4, #1088]	; 0x440
    bb82:	bl	b6f4 <error@@Base+0x57c4>
    bb86:	add	r0, sp, #36	; 0x24
    bb88:	bl	bab4 <error@@Base+0x5b84>
    bb8c:	b.n	bb3a <error@@Base+0x5c0a>
    bb8e:	blx	1cf8 <__stack_chk_fail@plt>
    bb92:	blx	1974 <ERR_get_error@plt>
    bb96:	mov	r1, r0
    bb98:	ldr	r0, [pc, #28]	; (bbb8 <error@@Base+0x5c88>)
    bb9a:	add	r0, pc
    bb9c:	bl	59b8 <fputs@plt+0x3a84>
    bba0:	strh	r4, [r3, r2]
    bba2:	movs	r1, r0
    bba4:	lsls	r4, r1, #9
    bba6:	movs	r0, r0
    bba8:	ldrsb	r4, [r3, r4]
    bbaa:	movs	r1, r0
    bbac:	ldrsb	r0, [r6, r3]
    bbae:	movs	r1, r0
    bbb0:	ldrsb	r2, [r1, r3]
    bbb2:	movs	r1, r0
    bbb4:	strh	r0, [r1, r0]
    bbb6:	movs	r1, r0
    bbb8:	negs	r2, r2
    bbba:	movs	r0, r0
    bbbc:	b.n	bacc <error@@Base+0x5b9c>
    bbbe:	nop
    bbc0:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    bbc4:	mov	r5, r0
    bbc6:	ldr	r3, [pc, #128]	; (bc48 <error@@Base+0x5d18>)
    bbc8:	mov	r4, r1
    bbca:	add	r3, pc
    bbcc:	ldr.w	r3, [r3, #1088]	; 0x440
    bbd0:	cbz	r3, bc42 <error@@Base+0x5d12>
    bbd2:	cmp	r4, #0
    bbd4:	ble.n	bc3e <error@@Base+0x5d0e>
    bbd6:	ldr	r6, [pc, #116]	; (bc4c <error@@Base+0x5d1c>)
    bbd8:	ldr.w	r8, [pc, #116]	; bc50 <error@@Base+0x5d20>
    bbdc:	add	r6, pc
    bbde:	add	r8, pc
    bbe0:	add.w	r7, r6, #64	; 0x40
    bbe4:	cmp	r4, #40	; 0x28
    bbe6:	mov	r9, r4
    bbe8:	it	ge
    bbea:	movge.w	r9, #40	; 0x28
    bbee:	bl	b74c <error@@Base+0x581c>
    bbf2:	cbz	r5, bc10 <error@@Base+0x5ce0>
    bbf4:	subs	r3, r5, #1
    bbf6:	add.w	r1, r8, #63	; 0x3f
    bbfa:	add.w	ip, r3, r9
    bbfe:	ldrb.w	r0, [r3, #1]!
    bc02:	ldrb.w	r2, [r1, #1]!
    bc06:	cmp	r3, ip
    bc08:	eor.w	r2, r2, r0
    bc0c:	strb	r2, [r1, #0]
    bc0e:	bne.n	bbfe <error@@Base+0x5cce>
    bc10:	mov	r0, r7
    bc12:	add	r5, r9
    bc14:	bl	b6f4 <error@@Base+0x57c4>
    bc18:	add.w	r0, r6, #96	; 0x60
    bc1c:	bl	bab4 <error@@Base+0x5b84>
    bc20:	movs	r2, #40	; 0x28
    bc22:	movs	r1, #0
    bc24:	mov	r0, r7
    bc26:	blx	1a38 <memset@plt>
    bc2a:	mov	r0, r4
    bc2c:	mov.w	r3, #984	; 0x3d8
    bc30:	mov	r1, r9
    bc32:	str.w	r3, [r6, #1092]	; 0x444
    bc36:	bl	df3c <setlogin@@Base+0x2134>
    bc3a:	subs	r4, r0, #0
    bc3c:	bgt.n	bbe4 <error@@Base+0x5cb4>
    bc3e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    bc42:	bl	bacc <error@@Base+0x5b9c>
    bc46:	b.n	bbd2 <error@@Base+0x5ca2>
    bc48:	ldrsb	r2, [r0, r1]
    bc4a:	movs	r1, r0
    bc4c:	ldrsb	r0, [r6, r0]
    bc4e:	movs	r1, r0
    bc50:	ldrsb	r6, [r5, r0]
    bc52:	movs	r1, r0
    bc54:	push	{r3, r4, r5, lr}
    bc56:	blx	1d88 <getpid@plt>
    bc5a:	ldr	r3, [pc, #124]	; (bcd8 <error@@Base+0x5da8>)
    bc5c:	add	r3, pc
    bc5e:	ldr.w	r2, [r3, #1096]	; 0x448
    bc62:	cmp	r2, #4
    bc64:	bls.n	bc6c <error@@Base+0x5d3c>
    bc66:	ldr.w	r1, [r3, #1088]	; 0x440
    bc6a:	cbnz	r1, bc9e <error@@Base+0x5d6e>
    bc6c:	ldr	r3, [pc, #108]	; (bcdc <error@@Base+0x5dac>)
    bc6e:	add	r3, pc
    bc70:	str.w	r0, [r3, #1100]	; 0x44c
    bc74:	bl	bacc <error@@Base+0x5b9c>
    bc78:	ldr	r4, [pc, #100]	; (bce0 <error@@Base+0x5db0>)
    bc7a:	add	r4, pc
    bc7c:	ldr.w	r3, [r4, #1092]	; 0x444
    bc80:	cmp	r3, #3
    bc82:	bls.n	bcae <error@@Base+0x5d7e>
    bc84:	rsb	r1, r3, #1024	; 0x400
    bc88:	subs	r3, #4
    bc8a:	ldr	r2, [pc, #88]	; (bce4 <error@@Base+0x5db4>)
    bc8c:	movs	r5, #0
    bc8e:	add	r2, pc
    bc90:	add.w	r4, r2, #64	; 0x40
    bc94:	str.w	r3, [r2, #1092]	; 0x444
    bc98:	ldr	r0, [r4, r1]
    bc9a:	str	r5, [r4, r1]
    bc9c:	pop	{r3, r4, r5, pc}
    bc9e:	ldr.w	r1, [r3, #1100]	; 0x44c
    bca2:	cmp	r0, r1
    bca4:	bne.n	bc6c <error@@Base+0x5d3c>
    bca6:	subs	r2, #4
    bca8:	str.w	r2, [r3, #1096]	; 0x448
    bcac:	b.n	bc78 <error@@Base+0x5d48>
    bcae:	add.w	r5, r4, #64	; 0x40
    bcb2:	bl	b74c <error@@Base+0x581c>
    bcb6:	mov	r0, r5
    bcb8:	bl	b6f4 <error@@Base+0x57c4>
    bcbc:	add.w	r0, r4, #96	; 0x60
    bcc0:	bl	bab4 <error@@Base+0x5b84>
    bcc4:	movs	r1, #0
    bcc6:	mov	r0, r5
    bcc8:	movs	r2, #40	; 0x28
    bcca:	blx	1a38 <memset@plt>
    bcce:	mov.w	r3, #980	; 0x3d4
    bcd2:	movs	r1, #40	; 0x28
    bcd4:	b.n	bc8a <error@@Base+0x5d5a>
    bcd6:	nop
    bcd8:	strb	r0, [r6, r6]
    bcda:	movs	r1, r0
    bcdc:	strb	r6, [r3, r6]
    bcde:	movs	r1, r0
    bce0:	strb	r2, [r2, r6]
    bce2:	movs	r1, r0
    bce4:	strb	r6, [r7, r5]
    bce6:	movs	r1, r0
    bce8:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bcec:	mov	r4, r1
    bcee:	mov	r6, r0
    bcf0:	blx	1d88 <getpid@plt>
    bcf4:	ldr	r3, [pc, #168]	; (bda0 <error@@Base+0x5e70>)
    bcf6:	add	r3, pc
    bcf8:	ldr.w	r2, [r3, #1096]	; 0x448
    bcfc:	cmp	r4, r2
    bcfe:	bcs.n	bd08 <error@@Base+0x5dd8>
    bd00:	ldr.w	r1, [r3, #1088]	; 0x440
    bd04:	cmp	r1, #0
    bd06:	bne.n	bd90 <error@@Base+0x5e60>
    bd08:	ldr	r3, [pc, #152]	; (bda4 <error@@Base+0x5e74>)
    bd0a:	add	r3, pc
    bd0c:	str.w	r0, [r3, #1100]	; 0x44c
    bd10:	bl	bacc <error@@Base+0x5b9c>
    bd14:	cbz	r4, bd54 <error@@Base+0x5e24>
    bd16:	ldr.w	r9, [pc, #144]	; bda8 <error@@Base+0x5e78>
    bd1a:	ldr.w	r8, [pc, #144]	; bdac <error@@Base+0x5e7c>
    bd1e:	add	r9, pc
    bd20:	add	r8, pc
    bd22:	add.w	sl, r9, #64	; 0x40
    bd26:	ldr.w	r5, [r8, #1092]	; 0x444
    bd2a:	cbnz	r5, bd58 <error@@Base+0x5e28>
    bd2c:	bl	b74c <error@@Base+0x581c>
    bd30:	mov	r0, sl
    bd32:	bl	b6f4 <error@@Base+0x57c4>
    bd36:	add.w	r0, r9, #96	; 0x60
    bd3a:	bl	bab4 <error@@Base+0x5b84>
    bd3e:	movs	r2, #40	; 0x28
    bd40:	movs	r1, #0
    bd42:	mov	r0, sl
    bd44:	blx	1a38 <memset@plt>
    bd48:	mov.w	r3, #984	; 0x3d8
    bd4c:	str.w	r3, [r9, #1092]	; 0x444
    bd50:	cmp	r4, #0
    bd52:	bne.n	bd26 <error@@Base+0x5df6>
    bd54:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bd58:	cmp	r5, r4
    bd5a:	sub.w	fp, r8, r5
    bd5e:	add.w	fp, fp, #1088	; 0x440
    bd62:	mov	r7, r5
    bd64:	it	cs
    bd66:	movcs	r7, r4
    bd68:	mov	r0, r6
    bd6a:	mov	r2, r7
    bd6c:	mov	r1, fp
    bd6e:	subs	r5, r5, r7
    bd70:	blx	1b84 <memcpy@plt>
    bd74:	mov	r2, r7
    bd76:	mov	r0, fp
    bd78:	movs	r1, #0
    bd7a:	subs	r4, r4, r7
    bd7c:	blx	1a38 <memset@plt>
    bd80:	add	r6, r7
    bd82:	str.w	r5, [r8, #1092]	; 0x444
    bd86:	cmp	r5, #0
    bd88:	beq.n	bd2c <error@@Base+0x5dfc>
    bd8a:	cmp	r4, #0
    bd8c:	bne.n	bd26 <error@@Base+0x5df6>
    bd8e:	b.n	bd54 <error@@Base+0x5e24>
    bd90:	ldr.w	r1, [r3, #1100]	; 0x44c
    bd94:	cmp	r0, r1
    bd96:	bne.n	bd08 <error@@Base+0x5dd8>
    bd98:	subs	r2, r2, r4
    bd9a:	str.w	r2, [r3, #1096]	; 0x448
    bd9e:	b.n	bd14 <error@@Base+0x5de4>
    bda0:	strb	r6, [r2, r4]
    bda2:	movs	r1, r0
    bda4:	strb	r2, [r0, r4]
    bda6:	movs	r1, r0
    bda8:	strb	r6, [r5, r3]
    bdaa:	movs	r1, r0
    bdac:	strb	r4, [r5, r3]
    bdae:	movs	r1, r0
    bdb0:	cmp	r0, #1
    bdb2:	bls.n	bdd4 <error@@Base+0x5ea4>
    bdb4:	push	{r3, r4, r5, lr}
    bdb6:	mov	r1, r0
    bdb8:	mov	r5, r0
    bdba:	negs	r0, r0
    bdbc:	bl	d59c <setlogin@@Base+0x1794>
    bdc0:	mov	r4, r1
    bdc2:	bl	bc54 <error@@Base+0x5d24>
    bdc6:	cmp	r4, r0
    bdc8:	bhi.n	bdc2 <error@@Base+0x5e92>
    bdca:	mov	r1, r5
    bdcc:	bl	d59c <setlogin@@Base+0x1794>
    bdd0:	mov	r0, r1
    bdd2:	pop	{r3, r4, r5, pc}
    bdd4:	movs	r0, #0
    bdd6:	bx	lr
    bdd8:	push	{r3, lr}
    bdda:	ldr	r3, [pc, #32]	; (bdfc <error@@Base+0x5ecc>)
    bddc:	ldr	r2, [pc, #32]	; (be00 <error@@Base+0x5ed0>)
    bdde:	add	r3, pc
    bde0:	ldr	r3, [r3, r2]
    bde2:	ldr	r0, [r3, #0]
    bde4:	blx	1cd4 <strdup@plt+0x4>
    bde8:	cbz	r0, bdec <error@@Base+0x5ebc>
    bdea:	pop	{r3, pc}
    bdec:	ldr	r0, [pc, #20]	; (be04 <error@@Base+0x5ed4>)
    bdee:	add	r0, pc
    bdf0:	blx	1a6c <perror@plt>
    bdf4:	movs	r0, #1
    bdf6:	blx	1eec <exit@plt>
    bdfa:	nop
    bdfc:	ldr	r7, [pc, #584]	; (c048 <setlogin@@Base+0x240>)
    bdfe:	movs	r1, r0
    be00:	lsls	r0, r2, #8
    be02:	movs	r0, r0
    be04:	ands	r2, r5
	...

0000be08 <setlogin@@Base>:
    be08:	movs	r0, #0
    be0a:	bx	lr
    be0c:	movs	r0, #0
    be0e:	bx	lr
    be10:	cmp	r0, r1
    be12:	beq.n	be48 <setlogin@@Base+0x40>
    be14:	movs	r2, #14
    be16:	movt	r2, #4096	; 0x1000
    be1a:	cmp	r0, r2
    be1c:	eor.w	r3, r0, r1
    be20:	ble.n	be3c <setlogin@@Base+0x34>
    be22:	lsrs	r3, r3, #20
    be24:	ubfx	r0, r0, #12, #8
    be28:	ubfx	r1, r1, #12, #8
    be2c:	lsls	r3, r3, #20
    be2e:	cmp	r0, r1
    be30:	it	le
    be32:	cmple	r3, #0
    be34:	ite	eq
    be36:	moveq	r0, #1
    be38:	movne	r0, #0
    be3a:	bx	lr
    be3c:	bics.w	r3, r3, #4080	; 0xff0
    be40:	ite	eq
    be42:	moveq	r0, #1
    be44:	movne	r0, #0
    be46:	bx	lr
    be48:	movs	r0, #1
    be4a:	bx	lr
    be4c:	movs	r2, #0
    be4e:	movs	r1, #0
    be50:	push	{r3, lr}
    be52:	movs	r0, #12
    be54:	blx	1e14 <OPENSSL_init_crypto@plt+0x4>
    be58:	blx	1be4 <ENGINE_load_builtin_engines@plt>
    be5c:	blx	1d7c <ENGINE_register_all_complete@plt>
    be60:	ldmia.w	sp!, {r3, lr}
    be64:	movs	r2, #0
    be66:	movs	r0, #76	; 0x4c
    be68:	movs	r1, #0
    be6a:	b.w	1e10 <OPENSSL_init_crypto@plt>
    be6e:	nop
    be70:	cmp	r1, #2
    be72:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    be76:	bls.w	bfa2 <setlogin@@Base+0x19a>
    be7a:	ldrb	r6, [r0, #1]
    be7c:	add.w	ip, r0, #3
    be80:	ldrb	r7, [r0, #0]
    be82:	cmp	r3, #3
    be84:	ldrb	r4, [r0, #2]
    be86:	sub.w	r1, r1, #3
    be8a:	mov.w	r5, r6, lsl #2
    be8e:	mov.w	r0, r7, lsl #4
    be92:	and.w	r5, r5, #60	; 0x3c
    be96:	and.w	r0, r0, #48	; 0x30
    be9a:	add.w	r5, r5, r4, lsr #6
    be9e:	mov.w	r7, r7, lsr #2
    bea2:	add.w	r0, r0, r6, lsr #4
    bea6:	and.w	r4, r4, #63	; 0x3f
    beaa:	bls.n	bf9a <setlogin@@Base+0x192>
    beac:	ldr.w	lr, [pc, #256]	; bfb0 <setlogin@@Base+0x1a8>
    beb0:	mov	r6, r2
    beb2:	mov.w	r8, #4
    beb6:	add	lr, pc
    beb8:	b.n	bef6 <setlogin@@Base+0xee>
    beba:	ldrb.w	r7, [ip]
    bebe:	add.w	ip, ip, #3
    bec2:	ldrb.w	r9, [ip, #-2]
    bec6:	add.w	r8, r8, #4
    beca:	cmp	r3, r8
    becc:	sub.w	r1, r1, #3
    bed0:	mov.w	r0, r7, lsl #4
    bed4:	mov.w	r7, r7, lsr #2
    bed8:	ldrb.w	r4, [ip, #-1]
    bedc:	mov.w	r5, r9, lsl #2
    bee0:	and.w	r0, r0, #48	; 0x30
    bee4:	and.w	r5, r5, #60	; 0x3c
    bee8:	add.w	r0, r0, r9, lsr #4
    beec:	add.w	r5, r5, r4, lsr #6
    bef0:	and.w	r4, r4, #63	; 0x3f
    bef4:	bcc.n	bf9a <setlogin@@Base+0x192>
    bef6:	ldrb.w	r9, [lr, r7]
    befa:	cmp	r1, #2
    befc:	ldrb.w	r7, [lr, r0]
    bf00:	add.w	r6, r6, #4
    bf04:	ldrb.w	r5, [lr, r5]
    bf08:	ldrb.w	r0, [lr, r4]
    bf0c:	strb.w	r9, [r6, #-4]
    bf10:	strb.w	r7, [r6, #-3]
    bf14:	strb.w	r5, [r6, #-2]
    bf18:	strb.w	r0, [r6, #-1]
    bf1c:	bhi.n	beba <setlogin@@Base+0xb2>
    bf1e:	cbnz	r1, bf30 <setlogin@@Base+0x128>
    bf20:	cmp	r8, r3
    bf22:	bcs.n	bf9a <setlogin@@Base+0x192>
    bf24:	movs	r3, #0
    bf26:	mov	r0, r8
    bf28:	strb.w	r3, [r2, r8]
    bf2c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    bf30:	cmp	r1, #2
    bf32:	ldrb.w	r4, [ip]
    bf36:	add.w	r6, r8, #4
    bf3a:	ite	eq
    bf3c:	ldrbeq.w	r0, [ip, #1]
    bf40:	movne	r7, #0
    bf42:	mov.w	r5, r4, lsl #4
    bf46:	it	ne
    bf48:	movne	r0, r7
    bf4a:	and.w	r5, r5, #48	; 0x30
    bf4e:	mov.w	r4, r4, lsr #2
    bf52:	ittt	eq
    bf54:	lsleq	r7, r0, #2
    bf56:	lsreq	r0, r0, #4
    bf58:	andeq.w	r7, r7, #60	; 0x3c
    bf5c:	cmp	r6, r3
    bf5e:	add	r0, r5
    bf60:	bhi.n	bf9a <setlogin@@Base+0x192>
    bf62:	ldr	r5, [pc, #80]	; (bfb4 <setlogin@@Base+0x1ac>)
    bf64:	cmp	r1, #1
    bf66:	add.w	lr, r2, r8
    bf6a:	add.w	ip, r8, #2
    bf6e:	add	r5, pc
    bf70:	it	eq
    bf72:	moveq	r1, #61	; 0x3d
    bf74:	ldrb.w	r9, [r5, r4]
    bf78:	it	ne
    bf7a:	ldrbne	r1, [r5, r7]
    bf7c:	ldrb	r4, [r5, r0]
    bf7e:	add.w	r0, r8, #3
    bf82:	strb.w	r9, [r2, r8]
    bf86:	ite	eq
    bf88:	moveq	r8, r6
    bf8a:	movne	r8, r6
    bf8c:	strb.w	r4, [lr, #1]
    bf90:	strb.w	r1, [r2, ip]
    bf94:	movs	r1, #61	; 0x3d
    bf96:	strb	r1, [r2, r0]
    bf98:	b.n	bf20 <setlogin@@Base+0x118>
    bf9a:	mov.w	r0, #4294967295	; 0xffffffff
    bf9e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    bfa2:	mov	ip, r0
    bfa4:	mov.w	r8, #0
    bfa8:	cmp	r1, #0
    bfaa:	beq.n	bf20 <setlogin@@Base+0x118>
    bfac:	b.n	bf30 <setlogin@@Base+0x128>
    bfae:	nop
    bfb0:	subs	r7, #106	; 0x6a
    bfb2:	movs	r0, r0
    bfb4:	subs	r6, #178	; 0xb2
    bfb6:	movs	r0, r0
    bfb8:	ldr	r3, [pc, #652]	; (c248 <setlogin@@Base+0x440>)
    bfba:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bfbe:	add	r3, pc
    bfc0:	vpush	{d8-d11}
    bfc4:	mov.w	r8, #0
    bfc8:	mov	r9, r0
    bfca:	mov	r7, r1
    bfcc:	mov	r6, r8
    bfce:	vmov	s16, r3
    bfd2:	ldr	r3, [pc, #632]	; (c24c <setlogin@@Base+0x444>)
    bfd4:	sub	sp, #12
    bfd6:	add	r3, pc
    bfd8:	str	r2, [sp, #0]
    bfda:	vmov	s21, r3
    bfde:	ldr	r3, [pc, #624]	; (c250 <setlogin@@Base+0x448>)
    bfe0:	add	r3, pc
    bfe2:	vmov	s17, r3
    bfe6:	ldr	r3, [pc, #620]	; (c254 <setlogin@@Base+0x44c>)
    bfe8:	add	r3, pc
    bfea:	vmov	s22, r3
    bfee:	ldr	r3, [pc, #616]	; (c258 <setlogin@@Base+0x450>)
    bff0:	add	r3, pc
    bff2:	vmov	s18, r3
    bff6:	ldr	r3, [pc, #612]	; (c25c <setlogin@@Base+0x454>)
    bff8:	add	r3, pc
    bffa:	vmov	s23, r3
    bffe:	ldr	r3, [pc, #608]	; (c260 <setlogin@@Base+0x458>)
    c000:	add	r3, pc
    c002:	vmov	s19, r3
    c006:	ldr	r3, [pc, #604]	; (c264 <setlogin@@Base+0x45c>)
    c008:	add	r3, pc
    c00a:	vmov	s20, r3
    c00e:	ldr	r3, [pc, #600]	; (c268 <setlogin@@Base+0x460>)
    c010:	add	r3, pc
    c012:	str	r3, [sp, #4]
    c014:	mov	r4, r9
    c016:	ldrb.w	sl, [r4], #1
    c01a:	cmp.w	sl, #0
    c01e:	beq.w	c19c <setlogin@@Base+0x394>
    c022:	blx	1cb8 <__ctype_b_loc@plt>
    c026:	ldr.w	fp, [r0]
    c02a:	mov	r5, r0
    c02c:	ldrh.w	r3, [fp, sl, lsl #1]
    c030:	lsls	r3, r3, #18
    c032:	bmi.w	c18c <setlogin@@Base+0x384>
    c036:	cmp.w	sl, #61	; 0x3d
    c03a:	beq.w	c1f8 <setlogin@@Base+0x3f0>
    c03e:	vmov	r0, s16
    c042:	mov	r1, sl
    c044:	blx	19e0 <strchr@plt>
    c048:	cmp	r0, #0
    c04a:	beq.w	c17e <setlogin@@Base+0x376>
    c04e:	cmp.w	r8, #2
    c052:	beq.w	c1ae <setlogin@@Base+0x3a6>
    c056:	cmp.w	r8, #3
    c05a:	beq.n	c0fc <setlogin@@Base+0x2f4>
    c05c:	cmp.w	r8, #1
    c060:	bne.n	c13a <setlogin@@Base+0x332>
    c062:	add.w	r8, r6, #1
    c066:	cbz	r7, c086 <setlogin@@Base+0x27e>
    c068:	ldr	r3, [sp, #0]
    c06a:	cmp	r3, r8
    c06c:	bls.w	c17e <setlogin@@Base+0x376>
    c070:	vmov	r1, s19
    c074:	bl	df3c <setlogin@@Base+0x2134>
    c078:	ldrb	r3, [r7, r6]
    c07a:	lsls	r2, r0, #4
    c07c:	orr.w	r0, r3, r0, asr #4
    c080:	strb	r0, [r7, r6]
    c082:	strb.w	r2, [r7, r8]
    c086:	mov	r9, r4
    c088:	ldrb.w	r1, [r9], #1
    c08c:	cmp	r1, #0
    c08e:	beq.n	c17e <setlogin@@Base+0x376>
    c090:	ldr.w	fp, [r5]
    c094:	ldrh.w	r3, [fp, r1, lsl #1]
    c098:	lsls	r2, r3, #18
    c09a:	bmi.w	c1ba <setlogin@@Base+0x3b2>
    c09e:	cmp	r1, #61	; 0x3d
    c0a0:	beq.w	c240 <setlogin@@Base+0x438>
    c0a4:	vmov	r0, s23
    c0a8:	blx	19e0 <strchr@plt>
    c0ac:	cmp	r0, #0
    c0ae:	beq.n	c17e <setlogin@@Base+0x376>
    c0b0:	add.w	r6, r8, #1
    c0b4:	cbz	r7, c0d4 <setlogin@@Base+0x2cc>
    c0b6:	ldr	r3, [sp, #0]
    c0b8:	cmp	r3, r6
    c0ba:	bls.n	c17e <setlogin@@Base+0x376>
    c0bc:	vmov	r1, s18
    c0c0:	bl	df3c <setlogin@@Base+0x2134>
    c0c4:	ldrb.w	r3, [r7, r8]
    c0c8:	lsls	r2, r0, #6
    c0ca:	orr.w	r0, r3, r0, asr #2
    c0ce:	strb.w	r0, [r7, r8]
    c0d2:	strb	r2, [r7, r6]
    c0d4:	mov	r4, r9
    c0d6:	ldrb.w	r1, [r4], #1
    c0da:	cmp	r1, #0
    c0dc:	beq.n	c17e <setlogin@@Base+0x376>
    c0de:	ldr.w	fp, [r5]
    c0e2:	ldrh.w	r3, [fp, r1, lsl #1]
    c0e6:	lsls	r3, r3, #18
    c0e8:	bmi.n	c1c2 <setlogin@@Base+0x3ba>
    c0ea:	cmp	r1, #61	; 0x3d
    c0ec:	beq.w	c236 <setlogin@@Base+0x42e>
    c0f0:	vmov	r0, s22
    c0f4:	blx	19e0 <strchr@plt>
    c0f8:	cmp	r0, #0
    c0fa:	beq.n	c17e <setlogin@@Base+0x376>
    c0fc:	cbz	r7, c112 <setlogin@@Base+0x30a>
    c0fe:	ldr	r3, [sp, #0]
    c100:	cmp	r3, r6
    c102:	bls.n	c17e <setlogin@@Base+0x376>
    c104:	vmov	r1, s17
    c108:	bl	df3c <setlogin@@Base+0x2134>
    c10c:	ldrb	r3, [r7, r6]
    c10e:	orrs	r0, r3
    c110:	strb	r0, [r7, r6]
    c112:	mov	r9, r4
    c114:	adds	r6, #1
    c116:	ldrb.w	r1, [r9], #1
    c11a:	cmp	r1, #0
    c11c:	beq.n	c1a2 <setlogin@@Base+0x39a>
    c11e:	ldr.w	fp, [r5]
    c122:	ldrh.w	r3, [fp, r1, lsl #1]
    c126:	lsls	r0, r3, #18
    c128:	bmi.n	c1b4 <setlogin@@Base+0x3ac>
    c12a:	cmp	r1, #61	; 0x3d
    c12c:	beq.n	c17e <setlogin@@Base+0x376>
    c12e:	vmov	r0, s21
    c132:	blx	19e0 <strchr@plt>
    c136:	cbz	r0, c17e <setlogin@@Base+0x376>
    c138:	mov	r4, r9
    c13a:	cmp	r7, #0
    c13c:	beq.n	c1ca <setlogin@@Base+0x3c2>
    c13e:	ldr	r3, [sp, #0]
    c140:	cmp	r3, r6
    c142:	bls.n	c17e <setlogin@@Base+0x376>
    c144:	vmov	r1, s20
    c148:	mov	r9, r4
    c14a:	bl	df3c <setlogin@@Base+0x2134>
    c14e:	lsls	r0, r0, #2
    c150:	strb	r0, [r7, r6]
    c152:	ldrb.w	r1, [r9], #1
    c156:	cbz	r1, c17e <setlogin@@Base+0x376>
    c158:	ldr	r3, [r5, #0]
    c15a:	ldrh.w	r3, [r3, r1, lsl #1]
    c15e:	lsls	r0, r3, #18
    c160:	bmi.n	c1dc <setlogin@@Base+0x3d4>
    c162:	cmp	r1, #61	; 0x3d
    c164:	beq.n	c17e <setlogin@@Base+0x376>
    c166:	vmov	r0, s20
    c16a:	blx	19e0 <strchr@plt>
    c16e:	cbz	r0, c17e <setlogin@@Base+0x376>
    c170:	add.w	r8, r6, #1
    c174:	mov	r4, r9
    c176:	b.n	c068 <setlogin@@Base+0x260>
    c178:	cbz	r7, c1a2 <setlogin@@Base+0x39a>
    c17a:	ldrb	r3, [r7, r6]
    c17c:	cbz	r3, c1a2 <setlogin@@Base+0x39a>
    c17e:	mov.w	r0, #4294967295	; 0xffffffff
    c182:	add	sp, #12
    c184:	vpop	{d8-d11}
    c188:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c18c:	mov	r9, r4
    c18e:	mov	r4, r9
    c190:	ldrb.w	sl, [r4], #1
    c194:	cmp.w	sl, #0
    c198:	bne.w	c022 <setlogin@@Base+0x21a>
    c19c:	cmp.w	r8, #0
    c1a0:	bne.n	c17e <setlogin@@Base+0x376>
    c1a2:	mov	r0, r6
    c1a4:	add	sp, #12
    c1a6:	vpop	{d8-d11}
    c1aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c1ae:	mov	r9, r4
    c1b0:	mov	r8, r6
    c1b2:	b.n	c0b0 <setlogin@@Base+0x2a8>
    c1b4:	mov.w	r8, #0
    c1b8:	b.n	c014 <setlogin@@Base+0x20c>
    c1ba:	mov	r6, r8
    c1bc:	mov.w	r8, #2
    c1c0:	b.n	c014 <setlogin@@Base+0x20c>
    c1c2:	mov	r9, r4
    c1c4:	mov.w	r8, #3
    c1c8:	b.n	c014 <setlogin@@Base+0x20c>
    c1ca:	mov	r9, r4
    c1cc:	ldrb.w	r1, [r9], #1
    c1d0:	cmp	r1, #0
    c1d2:	beq.n	c17e <setlogin@@Base+0x376>
    c1d4:	ldrh.w	r3, [fp, r1, lsl #1]
    c1d8:	lsls	r4, r3, #18
    c1da:	bpl.n	c1e2 <setlogin@@Base+0x3da>
    c1dc:	mov.w	r8, #1
    c1e0:	b.n	c014 <setlogin@@Base+0x20c>
    c1e2:	cmp	r1, #61	; 0x3d
    c1e4:	beq.n	c17e <setlogin@@Base+0x376>
    c1e6:	ldr	r0, [sp, #4]
    c1e8:	blx	19e0 <strchr@plt>
    c1ec:	cmp	r0, #0
    c1ee:	beq.n	c17e <setlogin@@Base+0x376>
    c1f0:	add.w	r8, r6, #1
    c1f4:	mov	r4, r9
    c1f6:	b.n	c086 <setlogin@@Base+0x27e>
    c1f8:	cmp.w	r8, #2
    c1fc:	ldrb	r3, [r4, #0]
    c1fe:	add.w	r1, r9, #2
    c202:	bne.n	c21e <setlogin@@Base+0x416>
    c204:	cbnz	r3, c210 <setlogin@@Base+0x408>
    c206:	b.n	c17e <setlogin@@Base+0x376>
    c208:	ldrb.w	r3, [r1], #1
    c20c:	cmp	r3, #0
    c20e:	beq.n	c17e <setlogin@@Base+0x376>
    c210:	ldrh.w	r2, [fp, r3, lsl #1]
    c214:	lsls	r2, r2, #18
    c216:	bmi.n	c208 <setlogin@@Base+0x400>
    c218:	cmp	r3, #61	; 0x3d
    c21a:	beq.n	c230 <setlogin@@Base+0x428>
    c21c:	b.n	c17e <setlogin@@Base+0x376>
    c21e:	cmp.w	r8, #3
    c222:	bne.n	c17e <setlogin@@Base+0x376>
    c224:	cmp	r3, #0
    c226:	beq.n	c178 <setlogin@@Base+0x370>
    c228:	ldrh.w	r3, [fp, r3, lsl #1]
    c22c:	lsls	r3, r3, #18
    c22e:	bpl.n	c17e <setlogin@@Base+0x376>
    c230:	ldrb.w	r3, [r1], #1
    c234:	b.n	c224 <setlogin@@Base+0x41c>
    c236:	ldrb.w	r3, [r9, #1]
    c23a:	add.w	r1, r9, #2
    c23e:	b.n	c224 <setlogin@@Base+0x41c>
    c240:	ldrb	r3, [r4, #1]
    c242:	adds	r1, r4, #2
    c244:	mov	r6, r8
    c246:	b.n	c204 <setlogin@@Base+0x3fc>
    c248:	subs	r6, #98	; 0x62
    c24a:	movs	r0, r0
    c24c:	subs	r6, #74	; 0x4a
    c24e:	movs	r0, r0
    c250:	subs	r6, #64	; 0x40
    c252:	movs	r0, r0
    c254:	subs	r6, #56	; 0x38
    c256:	movs	r0, r0
    c258:	subs	r6, #48	; 0x30
    c25a:	movs	r0, r0
    c25c:	subs	r6, #40	; 0x28
    c25e:	movs	r0, r0
    c260:	subs	r6, #32
    c262:	movs	r0, r0
    c264:	subs	r6, #24
    c266:	movs	r0, r0
    c268:	subs	r6, #16
    c26a:	movs	r0, r0
    c26c:	cbz	r0, c284 <setlogin@@Base+0x47c>
    c26e:	push	{r4, lr}
    c270:	mov.w	r2, #4294967295	; 0xffffffff
    c274:	mov	r4, r0
    c276:	blx	1bd8 <__explicit_bzero_chk@plt+0x4>
    c27a:	mov	r0, r4
    c27c:	ldmia.w	sp!, {r4, lr}
    c280:	b.w	1ad8 <free@plt>
    c284:	bx	lr
    c286:	nop
    c288:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c28c:	mov	r8, r1
    c28e:	vpush	{d8}
    c292:	mov	r1, r0
    c294:	mov	r7, r0
    c296:	mov	r0, r8
    c298:	mov	r6, r2
    c29a:	mov	r5, r3
    c29c:	sub	sp, #12
    c29e:	bl	df3c <setlogin@@Base+0x2134>
    c2a2:	mov	r1, r8
    c2a4:	mov	sl, r0
    c2a6:	mov	r0, r6
    c2a8:	bl	df3c <setlogin@@Base+0x2134>
    c2ac:	vmov	s16, sl
    c2b0:	mov	r9, r0
    c2b2:	mov	r0, sl
    c2b4:	mov	r1, r9
    c2b6:	bl	d84c <setlogin@@Base+0x1a44>
    c2ba:	cmp	r1, #0
    c2bc:	beq.n	c34c <setlogin@@Base+0x544>
    c2be:	mov	r0, r9
    c2c0:	mov	r4, r1
    c2c2:	bl	d84c <setlogin@@Base+0x1a44>
    c2c6:	mov	r0, r4
    c2c8:	cmp	r1, #0
    c2ca:	bne.n	c2c0 <setlogin@@Base+0x4b8>
    c2cc:	mov	r1, r7
    c2ce:	mov	r0, r6
    c2d0:	bl	df3c <setlogin@@Base+0x2134>
    c2d4:	mov	r1, r4
    c2d6:	bl	d5b8 <setlogin@@Base+0x17b0>
    c2da:	cmp	r4, #0
    c2dc:	mov	r7, r0
    c2de:	ble.n	c342 <setlogin@@Base+0x53a>
    c2e0:	add.w	r6, r5, r8, lsl #2
    c2e4:	add.w	r3, r4, r8
    c2e8:	str.w	r8, [sp]
    c2ec:	str	r3, [sp, #4]
    c2ee:	cmp	r7, #0
    c2f0:	ldr.w	sl, [sp]
    c2f4:	itt	gt
    c2f6:	ldrgt	r4, [r6, #0]
    c2f8:	movgt.w	fp, #0
    c2fc:	bgt.n	c324 <setlogin@@Base+0x51c>
    c2fe:	b.n	c334 <setlogin@@Base+0x52c>
    c300:	vmov	r1, s16
    c304:	bl	df3c <setlogin@@Base+0x2134>
    c308:	mov	sl, r0
    c30a:	ldr.w	r3, [r5, sl, lsl #2]
    c30e:	mov	r0, fp
    c310:	str.w	r4, [r5, sl, lsl #2]
    c314:	movs	r1, #1
    c316:	str	r3, [r6, #0]
    c318:	mov	r4, r3
    c31a:	bl	ded8 <setlogin@@Base+0x20d0>
    c31e:	cmp	r7, r0
    c320:	mov	fp, r0
    c322:	beq.n	c334 <setlogin@@Base+0x52c>
    c324:	cmp	r8, sl
    c326:	mov	r1, r9
    c328:	mov	r0, sl
    c32a:	ble.n	c300 <setlogin@@Base+0x4f8>
    c32c:	bl	ded8 <setlogin@@Base+0x20d0>
    c330:	mov	sl, r0
    c332:	b.n	c30a <setlogin@@Base+0x502>
    c334:	ldr	r3, [sp, #0]
    c336:	adds	r6, #4
    c338:	ldr	r2, [sp, #4]
    c33a:	adds	r3, #1
    c33c:	str	r3, [sp, #0]
    c33e:	cmp	r2, r3
    c340:	bne.n	c2ee <setlogin@@Base+0x4e6>
    c342:	add	sp, #12
    c344:	vpop	{d8}
    c348:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c34c:	mov	r4, r9
    c34e:	b.n	c2cc <setlogin@@Base+0x4c4>
    c350:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c354:	sub	sp, #20
    c356:	ldr	r6, [pc, #788]	; (c66c <setlogin@@Base+0x864>)
    c358:	str	r0, [sp, #4]
    c35a:	add	r6, pc
    c35c:	cmp	r2, #0
    c35e:	beq.n	c3de <setlogin@@Base+0x5d6>
    c360:	ldr	r3, [pc, #780]	; (c670 <setlogin@@Base+0x868>)
    c362:	mov	r8, r1
    c364:	mov	r5, r2
    c366:	ldr.w	r9, [r6, r3]
    c36a:	ldr.w	r3, [r9]
    c36e:	cmp	r3, #0
    c370:	beq.n	c3ea <setlogin@@Base+0x5e2>
    c372:	ldr	r3, [pc, #768]	; (c674 <setlogin@@Base+0x86c>)
    c374:	add	r3, pc
    c376:	ldr	r3, [r3, #0]
    c378:	adds	r3, #1
    c37a:	ldr	r3, [pc, #764]	; (c678 <setlogin@@Base+0x870>)
    c37c:	ldr	r7, [r6, r3]
    c37e:	beq.n	c3f6 <setlogin@@Base+0x5ee>
    c380:	ldr	r2, [r7, #0]
    c382:	cmp	r2, #0
    c384:	bne.n	c3f6 <setlogin@@Base+0x5ee>
    c386:	ldrb	r3, [r5, #0]
    c388:	cmp	r3, #45	; 0x2d
    c38a:	beq.n	c412 <setlogin@@Base+0x60a>
    c38c:	cmp	r3, #43	; 0x2b
    c38e:	mov.w	fp, #0
    c392:	beq.n	c416 <setlogin@@Base+0x60e>
    c394:	ldr	r3, [pc, #740]	; (c67c <setlogin@@Base+0x874>)
    c396:	movs	r1, #0
    c398:	ldr	r3, [r6, r3]
    c39a:	str	r3, [sp, #12]
    c39c:	str	r1, [r3, #0]
    c39e:	cmp	r2, #0
    c3a0:	beq.n	c438 <setlogin@@Base+0x630>
    c3a2:	ldr	r3, [pc, #732]	; (c680 <setlogin@@Base+0x878>)
    c3a4:	mov.w	r2, #4294967295	; 0xffffffff
    c3a8:	add	r3, pc
    c3aa:	strd	r2, r2, [r3, #4]
    c3ae:	movs	r3, #0
    c3b0:	ldr.w	sl, [r9]
    c3b4:	str	r3, [r7, #0]
    c3b6:	ldr	r3, [sp, #4]
    c3b8:	cmp	r3, sl
    c3ba:	ble.w	c4d6 <setlogin@@Base+0x6ce>
    c3be:	ldr.w	r7, [r8, sl, lsl #2]
    c3c2:	ldr	r3, [pc, #704]	; (c684 <setlogin@@Base+0x87c>)
    c3c4:	ldrb	r1, [r7, #0]
    c3c6:	add	r3, pc
    c3c8:	cmp	r1, #45	; 0x2d
    c3ca:	str	r7, [r3, #0]
    c3cc:	beq.n	c48a <setlogin@@Base+0x682>
    c3ce:	ldr	r3, [pc, #696]	; (c688 <setlogin@@Base+0x880>)
    c3d0:	ldr	r1, [pc, #696]	; (c68c <setlogin@@Base+0x884>)
    c3d2:	add	r3, pc
    c3d4:	add	r1, pc
    c3d6:	str	r1, [r3, #0]
    c3d8:	cmp.w	fp, #0
    c3dc:	bne.n	c41a <setlogin@@Base+0x612>
    c3de:	mov.w	r4, #4294967295	; 0xffffffff
    c3e2:	mov	r0, r4
    c3e4:	add	sp, #20
    c3e6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c3ea:	ldr	r3, [pc, #652]	; (c678 <setlogin@@Base+0x870>)
    c3ec:	movs	r2, #1
    c3ee:	ldr	r7, [r6, r3]
    c3f0:	str.w	r2, [r9]
    c3f4:	str	r2, [r7, #0]
    c3f6:	ldr	r0, [pc, #664]	; (c690 <setlogin@@Base+0x888>)
    c3f8:	add	r0, pc
    c3fa:	blx	19d4 <getenv@plt>
    c3fe:	ldr	r3, [pc, #660]	; (c694 <setlogin@@Base+0x88c>)
    c400:	ldr	r2, [r7, #0]
    c402:	add	r3, pc
    c404:	subs	r0, #0
    c406:	it	ne
    c408:	movne	r0, #1
    c40a:	str	r0, [r3, #0]
    c40c:	ldrb	r3, [r5, #0]
    c40e:	cmp	r3, #45	; 0x2d
    c410:	bne.n	c38c <setlogin@@Base+0x584>
    c412:	mov.w	fp, #2
    c416:	adds	r5, #1
    c418:	b.n	c394 <setlogin@@Base+0x58c>
    c41a:	movs	r1, #1
    c41c:	mov	r0, sl
    c41e:	bl	ded8 <setlogin@@Base+0x20d0>
    c422:	ldr	r2, [sp, #12]
    c424:	movs	r4, #1
    c426:	str.w	r0, [r9]
    c42a:	mov	r0, r4
    c42c:	ldr.w	r3, [r8, sl, lsl #2]
    c430:	str	r3, [r2, #0]
    c432:	add	sp, #20
    c434:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c438:	ldr	r3, [pc, #604]	; (c698 <setlogin@@Base+0x890>)
    c43a:	add	r3, pc
    c43c:	ldr	r1, [r3, #0]
    c43e:	ldrb	r4, [r1, #0]
    c440:	cmp	r4, #0
    c442:	beq.n	c3ae <setlogin@@Base+0x5a6>
    c444:	ldrb	r3, [r1, #1]
    c446:	ldr	r2, [pc, #596]	; (c69c <setlogin@@Base+0x894>)
    c448:	cmp	r4, #58	; 0x3a
    c44a:	add.w	r7, r1, #1
    c44e:	add	r2, pc
    c450:	str	r7, [r2, #0]
    c452:	beq.n	c52e <setlogin@@Base+0x726>
    c454:	cmp	r4, #45	; 0x2d
    c456:	beq.w	c58a <setlogin@@Base+0x782>
    c45a:	mov	r1, r4
    c45c:	mov	r0, r5
    c45e:	str	r3, [sp, #8]
    c460:	blx	19e0 <strchr@plt>
    c464:	ldr	r3, [sp, #8]
    c466:	mov	fp, r0
    c468:	cmp	r0, #0
    c46a:	beq.n	c52e <setlogin@@Base+0x726>
    c46c:	ldrb.w	r2, [fp, #1]
    c470:	cmp	r2, #58	; 0x3a
    c472:	beq.w	c5ac <setlogin@@Base+0x7a4>
    c476:	cmp	r3, #0
    c478:	bne.n	c3e2 <setlogin@@Base+0x5da>
    c47a:	ldr.w	r0, [r9]
    c47e:	movs	r1, #1
    c480:	bl	ded8 <setlogin@@Base+0x20d0>
    c484:	str.w	r0, [r9]
    c488:	b.n	c3e2 <setlogin@@Base+0x5da>
    c48a:	ldrb	r4, [r7, #1]
    c48c:	str	r3, [sp, #8]
    c48e:	cmp	r4, #0
    c490:	bne.n	c55c <setlogin@@Base+0x754>
    c492:	mov	r0, r5
    c494:	blx	19e0 <strchr@plt>
    c498:	ldr	r3, [sp, #8]
    c49a:	cmp	r0, #0
    c49c:	beq.n	c3ce <setlogin@@Base+0x5c6>
    c49e:	ldr	r1, [pc, #512]	; (c6a0 <setlogin@@Base+0x898>)
    c4a0:	add	r1, pc
    c4a2:	ldr.w	fp, [r1, #8]
    c4a6:	cmp.w	fp, #4294967295	; 0xffffffff
    c4aa:	beq.w	c5d0 <setlogin@@Base+0x7c8>
    c4ae:	ldr	r3, [r1, #4]
    c4b0:	adds	r3, #1
    c4b2:	beq.n	c59e <setlogin@@Base+0x796>
    c4b4:	ldr	r3, [pc, #492]	; (c6a4 <setlogin@@Base+0x89c>)
    c4b6:	adds	r7, #1
    c4b8:	add	r3, pc
    c4ba:	str	r7, [r3, #0]
    c4bc:	movs	r1, #45	; 0x2d
    c4be:	mov	r0, r5
    c4c0:	blx	19e0 <strchr@plt>
    c4c4:	mov	fp, r0
    c4c6:	cmp	r0, #0
    c4c8:	beq.n	c3de <setlogin@@Base+0x5d6>
    c4ca:	ldrb	r3, [r0, #1]
    c4cc:	cmp	r3, #58	; 0x3a
    c4ce:	beq.w	c5d6 <setlogin@@Base+0x7ce>
    c4d2:	movs	r4, #45	; 0x2d
    c4d4:	b.n	c47a <setlogin@@Base+0x672>
    c4d6:	ldr	r3, [pc, #464]	; (c6a8 <setlogin@@Base+0x8a0>)
    c4d8:	ldr	r1, [pc, #464]	; (c6ac <setlogin@@Base+0x8a4>)
    c4da:	add	r3, pc
    c4dc:	ldr	r5, [pc, #464]	; (c6b0 <setlogin@@Base+0x8a8>)
    c4de:	add	r1, pc
    c4e0:	ldrd	r4, r6, [r3, #4]
    c4e4:	add	r5, pc
    c4e6:	str	r5, [r1, #0]
    c4e8:	adds	r1, r4, #1
    c4ea:	bne.n	c50a <setlogin@@Base+0x702>
    c4ec:	adds	r2, r6, #1
    c4ee:	it	ne
    c4f0:	strne.w	r6, [r9]
    c4f4:	ldr	r3, [pc, #444]	; (c6b4 <setlogin@@Base+0x8ac>)
    c4f6:	mov.w	r2, #4294967295	; 0xffffffff
    c4fa:	mov	r4, r2
    c4fc:	add	r3, pc
    c4fe:	mov	r0, r4
    c500:	strd	r2, r2, [r3, #4]
    c504:	add	sp, #20
    c506:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c50a:	mov	r1, r4
    c50c:	mov	r3, r8
    c50e:	mov	r2, sl
    c510:	mov	r0, r6
    c512:	bl	c288 <setlogin@@Base+0x480>
    c516:	mov	r1, r6
    c518:	mov	r0, r4
    c51a:	bl	df3c <setlogin@@Base+0x2134>
    c51e:	mov	r1, r0
    c520:	ldr.w	r0, [r9]
    c524:	bl	df3c <setlogin@@Base+0x2134>
    c528:	str.w	r0, [r9]
    c52c:	b.n	c4f4 <setlogin@@Base+0x6ec>
    c52e:	cbnz	r3, c53e <setlogin@@Base+0x736>
    c530:	ldr.w	r0, [r9]
    c534:	movs	r1, #1
    c536:	bl	ded8 <setlogin@@Base+0x20d0>
    c53a:	str.w	r0, [r9]
    c53e:	ldr	r3, [pc, #376]	; (c6b8 <setlogin@@Base+0x8b0>)
    c540:	ldr	r3, [r6, r3]
    c542:	ldr	r3, [r3, #0]
    c544:	cbz	r3, c54c <setlogin@@Base+0x744>
    c546:	ldrb	r3, [r5, #0]
    c548:	cmp	r3, #58	; 0x3a
    c54a:	bne.n	c592 <setlogin@@Base+0x78a>
    c54c:	ldr	r3, [pc, #364]	; (c6bc <setlogin@@Base+0x8b4>)
    c54e:	ldr	r3, [r6, r3]
    c550:	str	r4, [r3, #0]
    c552:	movs	r4, #63	; 0x3f
    c554:	mov	r0, r4
    c556:	add	sp, #20
    c558:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c55c:	ldr	r3, [pc, #352]	; (c6c0 <setlogin@@Base+0x8b8>)
    c55e:	add	r3, pc
    c560:	ldr.w	fp, [r3, #8]
    c564:	cmp.w	fp, #4294967295	; 0xffffffff
    c568:	beq.n	c570 <setlogin@@Base+0x768>
    c56a:	ldr	r3, [r3, #4]
    c56c:	adds	r3, #1
    c56e:	beq.n	c59e <setlogin@@Base+0x796>
    c570:	ldr	r2, [pc, #336]	; (c6c4 <setlogin@@Base+0x8bc>)
    c572:	cmp	r4, #45	; 0x2d
    c574:	add.w	r1, r7, #1
    c578:	ldrb	r3, [r7, #2]
    c57a:	add	r2, pc
    c57c:	str	r1, [r2, #0]
    c57e:	bne.w	c446 <setlogin@@Base+0x63e>
    c582:	cmp	r3, #0
    c584:	beq.n	c63a <setlogin@@Base+0x832>
    c586:	adds	r7, #2
    c588:	str	r7, [r2, #0]
    c58a:	cmp	r3, #0
    c58c:	beq.n	c4bc <setlogin@@Base+0x6b4>
    c58e:	movs	r4, #45	; 0x2d
    c590:	b.n	c53e <setlogin@@Base+0x736>
    c592:	ldr	r0, [pc, #308]	; (c6c8 <setlogin@@Base+0x8c0>)
    c594:	mov	r1, r4
    c596:	add	r0, pc
    c598:	bl	5fbc <error@@Base+0x8c>
    c59c:	b.n	c54c <setlogin@@Base+0x744>
    c59e:	ldr	r3, [pc, #300]	; (c6cc <setlogin@@Base+0x8c4>)
    c5a0:	add	r3, pc
    c5a2:	str.w	sl, [r3, #4]
    c5a6:	cmp	r4, #0
    c5a8:	beq.n	c4b4 <setlogin@@Base+0x6ac>
    c5aa:	b.n	c570 <setlogin@@Base+0x768>
    c5ac:	ldr.w	r0, [r9]
    c5b0:	movs	r1, #1
    c5b2:	str	r3, [sp, #8]
    c5b4:	bl	ded8 <setlogin@@Base+0x20d0>
    c5b8:	ldr	r3, [sp, #8]
    c5ba:	cbz	r3, c5e2 <setlogin@@Base+0x7da>
    c5bc:	ldr	r3, [sp, #12]
    c5be:	str	r7, [r3, #0]
    c5c0:	ldr	r3, [pc, #268]	; (c6d0 <setlogin@@Base+0x8c8>)
    c5c2:	ldr	r2, [pc, #272]	; (c6d4 <setlogin@@Base+0x8cc>)
    c5c4:	add	r3, pc
    c5c6:	str.w	r0, [r9]
    c5ca:	add	r2, pc
    c5cc:	str	r2, [r3, #0]
    c5ce:	b.n	c3e2 <setlogin@@Base+0x5da>
    c5d0:	adds	r7, #1
    c5d2:	str	r7, [r3, #0]
    c5d4:	b.n	c4bc <setlogin@@Base+0x6b4>
    c5d6:	ldr.w	r0, [r9]
    c5da:	movs	r1, #1
    c5dc:	bl	ded8 <setlogin@@Base+0x20d0>
    c5e0:	movs	r4, #45	; 0x2d
    c5e2:	ldrb.w	r3, [fp, #2]
    c5e6:	cmp	r3, #58	; 0x3a
    c5e8:	beq.n	c5c0 <setlogin@@Base+0x7b8>
    c5ea:	ldr	r3, [sp, #4]
    c5ec:	str.w	r0, [r9]
    c5f0:	cmp	r3, r0
    c5f2:	ble.n	c604 <setlogin@@Base+0x7fc>
    c5f4:	ldr.w	r3, [r8, r0, lsl #2]
    c5f8:	movs	r1, #1
    c5fa:	ldr	r2, [sp, #12]
    c5fc:	str	r3, [r2, #0]
    c5fe:	bl	ded8 <setlogin@@Base+0x20d0>
    c602:	b.n	c5c0 <setlogin@@Base+0x7b8>
    c604:	ldr	r2, [pc, #208]	; (c6d8 <setlogin@@Base+0x8d0>)
    c606:	ldr	r3, [pc, #176]	; (c6b8 <setlogin@@Base+0x8b0>)
    c608:	ldr	r1, [pc, #208]	; (c6dc <setlogin@@Base+0x8d4>)
    c60a:	add	r2, pc
    c60c:	add	r1, pc
    c60e:	str	r1, [r2, #0]
    c610:	ldr	r3, [r6, r3]
    c612:	ldr	r3, [r3, #0]
    c614:	cbz	r3, c628 <setlogin@@Base+0x820>
    c616:	ldrb	r3, [r5, #0]
    c618:	cmp	r3, #58	; 0x3a
    c61a:	beq.n	c628 <setlogin@@Base+0x820>
    c61c:	ldr	r0, [pc, #192]	; (c6e0 <setlogin@@Base+0x8d8>)
    c61e:	mov	r1, r4
    c620:	add	r0, pc
    c622:	adds	r0, #24
    c624:	bl	5fbc <error@@Base+0x8c>
    c628:	ldr	r3, [pc, #144]	; (c6bc <setlogin@@Base+0x8b4>)
    c62a:	ldr	r3, [r6, r3]
    c62c:	str	r4, [r3, #0]
    c62e:	ldrb	r3, [r5, #0]
    c630:	cmp	r3, #58	; 0x3a
    c632:	ite	eq
    c634:	moveq	r4, #58	; 0x3a
    c636:	movne	r4, #63	; 0x3f
    c638:	b.n	c3e2 <setlogin@@Base+0x5da>
    c63a:	movs	r1, #1
    c63c:	mov	r0, sl
    c63e:	str	r2, [sp, #4]
    c640:	bl	ded8 <setlogin@@Base+0x20d0>
    c644:	ldr	r1, [pc, #156]	; (c6e4 <setlogin@@Base+0x8dc>)
    c646:	ldr	r2, [sp, #4]
    c648:	add	r1, pc
    c64a:	ldr	r3, [pc, #156]	; (c6e8 <setlogin@@Base+0x8e0>)
    c64c:	ldr	r4, [r1, #4]
    c64e:	add	r3, pc
    c650:	str	r3, [r2, #0]
    c652:	adds	r3, r4, #1
    c654:	str.w	r0, [r9]
    c658:	beq.w	c4f4 <setlogin@@Base+0x6ec>
    c65c:	mov	r2, r0
    c65e:	mov	r1, r4
    c660:	mov	r3, r8
    c662:	mov	r0, fp
    c664:	bl	c288 <setlogin@@Base+0x480>
    c668:	mov	r1, fp
    c66a:	b.n	c518 <setlogin@@Base+0x710>
    c66c:	ldr	r2, [pc, #88]	; (c6c8 <setlogin@@Base+0x8c0>)
    c66e:	movs	r1, r0
    c670:	lsls	r4, r7, #9
    c672:	movs	r0, r0
    c674:	ldr	r4, [pc, #768]	; (c978 <setlogin@@Base+0xb70>)
    c676:	movs	r1, r0
    c678:	lsls	r4, r3, #9
    c67a:	movs	r0, r0
    c67c:	lsls	r4, r6, #8
    c67e:	movs	r0, r0
    c680:	ldr	r4, [pc, #560]	; (c8b4 <setlogin@@Base+0xaac>)
    c682:	movs	r1, r0
    c684:	ldr	r4, [pc, #536]	; (c8a0 <setlogin@@Base+0xa98>)
    c686:	movs	r1, r0
    c688:	ldr	r4, [pc, #488]	; (c874 <setlogin@@Base+0xa6c>)
    c68a:	movs	r1, r0
    c68c:	cmp	r1, #104	; 0x68
    c68e:	movs	r0, r0
    c690:	subs	r2, #108	; 0x6c
    c692:	movs	r0, r0
    c694:	ldr	r4, [pc, #200]	; (c760 <setlogin@@Base+0x958>)
    c696:	movs	r1, r0
    c698:	ldr	r4, [pc, #72]	; (c6e4 <setlogin@@Base+0x8dc>)
    c69a:	movs	r1, r0
    c69c:	ldr	r3, [pc, #1016]	; (ca98 <setlogin@@Base+0xc90>)
    c69e:	movs	r1, r0
    c6a0:	ldr	r3, [pc, #592]	; (c8f4 <setlogin@@Base+0xaec>)
    c6a2:	movs	r1, r0
    c6a4:	ldr	r3, [pc, #592]	; (c8f8 <setlogin@@Base+0xaf0>)
    c6a6:	movs	r1, r0
    c6a8:	ldr	r3, [pc, #360]	; (c814 <setlogin@@Base+0xa0c>)
    c6aa:	movs	r1, r0
    c6ac:	ldr	r3, [pc, #440]	; (c868 <setlogin@@Base+0xa60>)
    c6ae:	movs	r1, r0
    c6b0:	cmp	r0, #88	; 0x58
    c6b2:	movs	r0, r0
    c6b4:	ldr	r3, [pc, #224]	; (c798 <setlogin@@Base+0x990>)
    c6b6:	movs	r1, r0
    c6b8:	lsls	r4, r1, #8
    c6ba:	movs	r0, r0
    c6bc:	lsls	r0, r0, #9
    c6be:	movs	r0, r0
    c6c0:	ldr	r2, [pc, #856]	; (ca1c <setlogin@@Base+0xc14>)
    c6c2:	movs	r1, r0
    c6c4:	ldr	r2, [pc, #840]	; (ca10 <setlogin@@Base+0xc08>)
    c6c6:	movs	r1, r0
    c6c8:	subs	r0, #222	; 0xde
    c6ca:	movs	r0, r0
    c6cc:	ldr	r2, [pc, #592]	; (c920 <setlogin@@Base+0xb18>)
    c6ce:	movs	r1, r0
    c6d0:	ldr	r2, [pc, #544]	; (c8f4 <setlogin@@Base+0xaec>)
    c6d2:	movs	r1, r0
    c6d4:	movs	r7, #114	; 0x72
    c6d6:	movs	r0, r0
    c6d8:	ldr	r2, [pc, #264]	; (c7e4 <setlogin@@Base+0x9dc>)
    c6da:	movs	r1, r0
    c6dc:	movs	r7, #48	; 0x30
    c6de:	movs	r0, r0
    c6e0:	subs	r0, #84	; 0x54
    c6e2:	movs	r0, r0
    c6e4:	ldr	r1, [pc, #944]	; (ca98 <setlogin@@Base+0xc90>)
    c6e6:	movs	r1, r0
    c6e8:	movs	r6, #238	; 0xee
    c6ea:	movs	r0, r0
    c6ec:	cmp	r0, #0
    c6ee:	beq.n	c7c8 <setlogin@@Base+0x9c0>
    c6f0:	push	{r3, r4, r5, r6, r7, lr}
    c6f2:	movw	r6, #65535	; 0xffff
    c6f6:	cmp	r3, r6
    c6f8:	mov	r5, r0
    c6fa:	ite	ls
    c6fc:	movls	r4, #0
    c6fe:	movhi	r4, #1
    c700:	cmp	r2, r6
    c702:	ite	ls
    c704:	movls	r6, r4
    c706:	orrhi.w	r6, r4, #1
    c70a:	cmp	r2, #0
    c70c:	it	eq
    c70e:	moveq	r6, #0
    c710:	cmp	r6, #0
    c712:	bne.n	c79a <setlogin@@Base+0x992>
    c714:	cmp.w	r1, #65536	; 0x10000
    c718:	it	cs
    c71a:	orrcs.w	r4, r4, #1
    c71e:	cmp	r1, #0
    c720:	it	eq
    c722:	moveq	r4, #0
    c724:	mul.w	r7, r3, r2
    c728:	cmp	r4, #0
    c72a:	bne.n	c7ae <setlogin@@Base+0x9a6>
    c72c:	mul.w	r4, r1, r3
    c730:	cmp	r7, r4
    c732:	bhi.n	c77c <setlogin@@Base+0x974>
    c734:	subs	r6, r4, r7
    c736:	cmp.w	r6, r4, lsr #1
    c73a:	bcc.n	c766 <setlogin@@Base+0x95e>
    c73c:	mov	r0, r7
    c73e:	blx	1ce0 <malloc@plt>
    c742:	mov	r6, r0
    c744:	cmp	r0, #0
    c746:	beq.n	c7c2 <setlogin@@Base+0x9ba>
    c748:	mov	r2, r7
    c74a:	mov	r1, r5
    c74c:	blx	1b84 <memcpy@plt>
    c750:	mov	r0, r5
    c752:	mov	r1, r4
    c754:	mov.w	r2, #4294967295	; 0xffffffff
    c758:	blx	1bd8 <__explicit_bzero_chk@plt+0x4>
    c75c:	mov	r0, r5
    c75e:	blx	1adc <free@plt+0x4>
    c762:	mov	r0, r6
    c764:	pop	{r3, r4, r5, r6, r7, pc}
    c766:	blx	1f28 <getpagesize@plt>
    c76a:	cmp	r0, r6
    c76c:	bls.n	c73c <setlogin@@Base+0x934>
    c76e:	mov	r2, r6
    c770:	adds	r0, r5, r7
    c772:	movs	r1, #0
    c774:	mov	r6, r5
    c776:	blx	1a38 <memset@plt>
    c77a:	b.n	c762 <setlogin@@Base+0x95a>
    c77c:	mov	r0, r7
    c77e:	blx	1ce0 <malloc@plt>
    c782:	mov	r6, r0
    c784:	cbz	r0, c7c2 <setlogin@@Base+0x9ba>
    c786:	mov	r2, r4
    c788:	mov	r1, r5
    c78a:	blx	1b84 <memcpy@plt>
    c78e:	subs	r2, r7, r4
    c790:	adds	r0, r6, r4
    c792:	movs	r1, #0
    c794:	blx	1a38 <memset@plt>
    c798:	b.n	c750 <setlogin@@Base+0x948>
    c79a:	umull	r6, r0, r2, r3
    c79e:	cmp	r0, #0
    c7a0:	beq.n	c714 <setlogin@@Base+0x90c>
    c7a2:	blx	1f04 <__errno_location@plt>
    c7a6:	movs	r6, #0
    c7a8:	movs	r3, #12
    c7aa:	str	r3, [r0, #0]
    c7ac:	b.n	c762 <setlogin@@Base+0x95a>
    c7ae:	umull	r0, r2, r1, r3
    c7b2:	cmp	r2, #0
    c7b4:	beq.n	c72c <setlogin@@Base+0x924>
    c7b6:	blx	1f04 <__errno_location@plt>
    c7ba:	movs	r6, #0
    c7bc:	movs	r3, #22
    c7be:	str	r3, [r0, #0]
    c7c0:	b.n	c762 <setlogin@@Base+0x95a>
    c7c2:	movs	r6, #0
    c7c4:	mov	r0, r6
    c7c6:	pop	{r3, r4, r5, r6, r7, pc}
    c7c8:	mov	r1, r3
    c7ca:	mov	r0, r2
    c7cc:	b.w	1a1c <calloc@plt>
    c7d0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    c7d4:	mov	r7, r1
    c7d6:	mov	r5, r2
    c7d8:	cbz	r2, c830 <setlogin@@Base+0xa28>
    c7da:	adds	r6, r2, r0
    c7dc:	mov	r3, r0
    c7de:	b.n	c7e6 <setlogin@@Base+0x9de>
    c7e0:	cmp	r6, r3
    c7e2:	mov	r4, r3
    c7e4:	beq.n	c7f0 <setlogin@@Base+0x9e8>
    c7e6:	mov	r4, r3
    c7e8:	adds	r3, #1
    c7ea:	ldrb	r2, [r4, #0]
    c7ec:	cmp	r2, #0
    c7ee:	bne.n	c7e0 <setlogin@@Base+0x9d8>
    c7f0:	mov	r1, r0
    c7f2:	mov	r0, r4
    c7f4:	bl	df3c <setlogin@@Base+0x2134>
    c7f8:	subs	r2, r5, r0
    c7fa:	mov	r8, r0
    c7fc:	beq.n	c832 <setlogin@@Base+0xa2a>
    c7fe:	ldrb	r5, [r7, #0]
    c800:	mov	r0, r7
    c802:	cbz	r5, c826 <setlogin@@Base+0xa1e>
    c804:	mov	r3, r4
    c806:	cmp	r2, #1
    c808:	itt	ne
    c80a:	strbne.w	r5, [r3], #1
    c80e:	addne.w	r2, r2, #4294967295	; 0xffffffff
    c812:	ldrb.w	r5, [r0, #1]!
    c816:	it	ne
    c818:	movne	r4, r3
    c81a:	cmp	r5, #0
    c81c:	bne.n	c804 <setlogin@@Base+0x9fc>
    c81e:	mov	r1, r7
    c820:	bl	df3c <setlogin@@Base+0x2134>
    c824:	add	r8, r0
    c826:	movs	r3, #0
    c828:	mov	r0, r8
    c82a:	strb	r3, [r4, #0]
    c82c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    c830:	mov	r8, r2
    c832:	mov	r0, r7
    c834:	blx	1b6c <strlen@plt>
    c838:	add	r8, r0
    c83a:	mov	r0, r8
    c83c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    c840:	push	{r4, lr}
    c842:	cbz	r2, c87c <setlogin@@Base+0xa74>
    c844:	subs	r2, #1
    c846:	mov	r3, r0
    c848:	mov	r0, r1
    c84a:	adds	r4, r3, r2
    c84c:	b.n	c858 <setlogin@@Base+0xa50>
    c84e:	ldrb.w	r2, [r0, #-1]
    c852:	strb.w	r2, [r3], #1
    c856:	cbz	r2, c86e <setlogin@@Base+0xa66>
    c858:	cmp	r4, r3
    c85a:	mov	r2, r0
    c85c:	add.w	r0, r0, #1
    c860:	bne.n	c84e <setlogin@@Base+0xa46>
    c862:	mov	r0, r2
    c864:	movs	r3, #0
    c866:	strb	r3, [r4, #0]
    c868:	ldrb.w	r3, [r0], #1
    c86c:	cbnz	r3, c87e <setlogin@@Base+0xa76>
    c86e:	bl	df3c <setlogin@@Base+0x2134>
    c872:	mov.w	r1, #4294967295	; 0xffffffff
    c876:	bl	ded8 <setlogin@@Base+0x20d0>
    c87a:	pop	{r4, pc}
    c87c:	mov	r0, r1
    c87e:	ldrb.w	r3, [r0], #1
    c882:	cmp	r3, #0
    c884:	bne.n	c87e <setlogin@@Base+0xa76>
    c886:	bl	df3c <setlogin@@Base+0x2134>
    c88a:	mov.w	r1, #4294967295	; 0xffffffff
    c88e:	bl	ded8 <setlogin@@Base+0x20d0>
    c892:	pop	{r4, pc}
    c894:	ldr.w	ip, [pc, #288]	; c9b8 <setlogin@@Base+0xbb0>
    c898:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c89c:	add	ip, pc
    c89e:	ldr.w	r9, [pc, #284]	; c9bc <setlogin@@Base+0xbb4>
    c8a2:	mov	lr, r3
    c8a4:	mov	r6, r2
    c8a6:	ldr.w	r8, [pc, #280]	; c9c0 <setlogin@@Base+0xbb8>
    c8aa:	mov	r5, r0
    c8ac:	add	r9, pc
    c8ae:	ldmia.w	ip!, {r0, r1, r2, r3}
    c8b2:	sub	sp, #44	; 0x2c
    c8b4:	ldr.w	r8, [r9, r8]
    c8b8:	add	r4, sp, #4
    c8ba:	mov	r7, lr
    c8bc:	ldrd	sl, fp, [sp, #80]	; 0x50
    c8c0:	ldr.w	r8, [r8]
    c8c4:	str.w	r8, [sp, #36]	; 0x24
    c8c8:	mov.w	r8, #0
    c8cc:	ldr.w	r8, [sp, #88]	; 0x58
    c8d0:	stmia	r4!, {r0, r1, r2, r3}
    c8d2:	ldmia.w	ip, {r0, r1, r2, r3}
    c8d6:	stmia.w	r4, {r0, r1, r2, r3}
    c8da:	blx	1f04 <__errno_location@plt>
    c8de:	cmp	sl, r6
    c8e0:	mov.w	r3, #0
    c8e4:	ldr.w	r9, [r0]
    c8e8:	mov	r4, r0
    c8ea:	str	r3, [r0, #0]
    c8ec:	sbcs.w	r3, fp, r7
    c8f0:	bge.n	c92c <setlogin@@Base+0xb24>
    c8f2:	movs	r3, #1
    c8f4:	add	r2, sp, #40	; 0x28
    c8f6:	add.w	r3, r2, r3, lsl #3
    c8fa:	ldr.w	r1, [r3, #-32]
    c8fe:	cmp.w	r8, #0
    c902:	beq.n	c978 <setlogin@@Base+0xb70>
    c904:	ldr.w	r0, [r3, #-36]
    c908:	movs	r2, #0
    c90a:	movs	r3, #0
    c90c:	str.w	r0, [r8]
    c910:	str	r1, [r4, #0]
    c912:	ldr	r0, [pc, #176]	; (c9c4 <setlogin@@Base+0xbbc>)
    c914:	ldr	r1, [pc, #168]	; (c9c0 <setlogin@@Base+0xbb8>)
    c916:	add	r0, pc
    c918:	ldr	r1, [r0, r1]
    c91a:	ldr	r0, [r1, #0]
    c91c:	ldr	r1, [sp, #36]	; 0x24
    c91e:	eors	r0, r1
    c920:	bne.n	c9b2 <setlogin@@Base+0xbaa>
    c922:	mov	r0, r2
    c924:	mov	r1, r3
    c926:	add	sp, #44	; 0x2c
    c928:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c92c:	movs	r2, #10
    c92e:	mov	r1, sp
    c930:	mov	r0, r5
    c932:	blx	1a78 <strtoll@plt>
    c936:	ldr.w	ip, [sp]
    c93a:	cmp	ip, r5
    c93c:	mov	r2, r0
    c93e:	mov	r3, r1
    c940:	beq.n	c8f2 <setlogin@@Base+0xaea>
    c942:	ldrb.w	r1, [ip]
    c946:	cmp	r1, #0
    c948:	bne.n	c8f2 <setlogin@@Base+0xaea>
    c94a:	cmp.w	r3, #2147483648	; 0x80000000
    c94e:	it	eq
    c950:	cmpeq	r2, #0
    c952:	beq.n	c980 <setlogin@@Base+0xb78>
    c954:	cmp	r2, r6
    c956:	sbcs.w	r1, r3, r7
    c95a:	blt.n	c98e <setlogin@@Base+0xb86>
    c95c:	mvn.w	r1, #2147483648	; 0x80000000
    c960:	cmp	r3, r1
    c962:	mov.w	r0, #4294967295	; 0xffffffff
    c966:	it	eq
    c968:	cmpeq	r2, r0
    c96a:	beq.n	c9a4 <setlogin@@Base+0xb9c>
    c96c:	cmp	sl, r2
    c96e:	sbcs.w	r1, fp, r3
    c972:	bge.n	c992 <setlogin@@Base+0xb8a>
    c974:	movs	r3, #3
    c976:	b.n	c8f4 <setlogin@@Base+0xaec>
    c978:	movs	r2, #0
    c97a:	movs	r3, #0
    c97c:	str	r1, [r4, #0]
    c97e:	b.n	c912 <setlogin@@Base+0xb0a>
    c980:	ldr	r1, [r4, #0]
    c982:	cmp	r1, #34	; 0x22
    c984:	beq.n	c98e <setlogin@@Base+0xb86>
    c986:	cmp	r7, r3
    c988:	it	eq
    c98a:	cmpeq	r6, r2
    c98c:	beq.n	c992 <setlogin@@Base+0xb8a>
    c98e:	movs	r3, #2
    c990:	b.n	c8f4 <setlogin@@Base+0xaec>
    c992:	cmp.w	r8, #0
    c996:	beq.n	c9ac <setlogin@@Base+0xba4>
    c998:	ldr	r1, [sp, #4]
    c99a:	str.w	r1, [r8]
    c99e:	str.w	r9, [r4]
    c9a2:	b.n	c912 <setlogin@@Base+0xb0a>
    c9a4:	ldr	r1, [r4, #0]
    c9a6:	cmp	r1, #34	; 0x22
    c9a8:	bne.n	c96c <setlogin@@Base+0xb64>
    c9aa:	b.n	c974 <setlogin@@Base+0xb6c>
    c9ac:	str.w	r9, [r4]
    c9b0:	b.n	c912 <setlogin@@Base+0xb0a>
    c9b2:	blx	1cf8 <__stack_chk_fail@plt>
    c9b6:	nop
    c9b8:	blxns	r6
    c9ba:	movs	r1, r0
    c9bc:	add	ip, r8
    c9be:	movs	r1, r0
    c9c0:	lsls	r4, r1, #9
    c9c2:	movs	r0, r0
    c9c4:	add	r2, fp
    c9c6:	movs	r1, r0
    c9c8:	cbz	r2, c9ee <setlogin@@Base+0xbe6>
    c9ca:	push	{r4, r5}
    c9cc:	adds	r5, r0, r2
    c9ce:	movs	r2, #0
    c9d0:	ldrb.w	r3, [r0], #1
    c9d4:	ldrb.w	r4, [r1], #1
    c9d8:	cmp	r0, r5
    c9da:	eor.w	r3, r3, r4
    c9de:	orr.w	r2, r2, r3
    c9e2:	bne.n	c9d0 <setlogin@@Base+0xbc8>
    c9e4:	subs	r0, r2, #0
    c9e6:	pop	{r4, r5}
    c9e8:	it	ne
    c9ea:	movne	r0, #1
    c9ec:	bx	lr
    c9ee:	mov	r0, r2
    c9f0:	bx	lr
    c9f2:	nop
    c9f4:	cmp	r1, #92	; 0x5c
    c9f6:	push	{r3, r4, r5, r6, r7, lr}
    c9f8:	mov	r6, r0
    c9fa:	mov	r4, r1
    c9fc:	mov	r5, r2
    c9fe:	mov	r7, r3
    ca00:	beq.w	cbd0 <setlogin@@Base+0xdc8>
    ca04:	lsls	r1, r2, #21
    ca06:	bmi.n	ca72 <setlogin@@Base+0xc6a>
    ca08:	cmp	r4, #255	; 0xff
    ca0a:	bls.w	cbac <setlogin@@Base+0xda4>
    ca0e:	sub.w	r3, r4, #32
    ca12:	eor.w	r2, r5, #4
    ca16:	clz	r3, r3
    ca1a:	lsrs	r3, r3, #5
    ca1c:	ands.w	r3, r3, r2, lsr #2
    ca20:	bne.w	cbee <setlogin@@Base+0xde6>
    ca24:	sub.w	r3, r4, #9
    ca28:	eor.w	r2, r5, #8
    ca2c:	clz	r3, r3
    ca30:	lsrs	r3, r3, #5
    ca32:	ands.w	r3, r3, r2, lsr #3
    ca36:	bne.w	cbee <setlogin@@Base+0xde6>
    ca3a:	sub.w	r3, r4, #10
    ca3e:	eor.w	r2, r5, #16
    ca42:	clz	r3, r3
    ca46:	lsrs	r3, r3, #5
    ca48:	ands.w	r3, r3, r2, lsr #4
    ca4c:	bne.w	cbee <setlogin@@Base+0xde6>
    ca50:	lsls	r3, r5, #26
    ca52:	bpl.n	ca72 <setlogin@@Base+0xc6a>
    ca54:	subs	r3, r4, #7
    ca56:	cmp	r4, #13
    ca58:	it	ne
    ca5a:	cmpne	r3, #1
    ca5c:	bls.w	cbe0 <setlogin@@Base+0xdd8>
    ca60:	blx	1cb8 <__ctype_b_loc@plt>
    ca64:	uxtb	r2, r4
    ca66:	ldr	r3, [r0, #0]
    ca68:	ldrsh.w	r3, [r3, r2, lsl #1]
    ca6c:	cmp	r3, #0
    ca6e:	blt.w	cbe0 <setlogin@@Base+0xdd8>
    ca72:	lsls	r0, r5, #30
    ca74:	bmi.n	caf6 <setlogin@@Base+0xcee>
    ca76:	and.w	r7, r4, #127	; 0x7f
    ca7a:	cmp	r7, #32
    ca7c:	beq.w	cb88 <setlogin@@Base+0xd80>
    ca80:	lsls	r1, r5, #31
    ca82:	bmi.w	cb88 <setlogin@@Base+0xd80>
    ca86:	lsls	r3, r5, #23
    ca88:	bpl.n	cab2 <setlogin@@Base+0xcaa>
    ca8a:	sub.w	r3, r4, #35	; 0x23
    ca8e:	sub.w	r2, r4, #91	; 0x5b
    ca92:	clz	r2, r2
    ca96:	cmp	r3, #28
    ca98:	mov.w	r2, r2, lsr #5
    ca9c:	bhi.n	caae <setlogin@@Base+0xca6>
    ca9e:	movs	r1, #129	; 0x81
    caa0:	movt	r1, #4096	; 0x1000
    caa4:	lsr.w	r3, r1, r3
    caa8:	and.w	r3, r3, #1
    caac:	orrs	r2, r3
    caae:	cmp	r2, #0
    cab0:	bne.n	cb88 <setlogin@@Base+0xd80>
    cab2:	lsls	r5, r5, #25
    cab4:	itt	pl
    cab6:	movpl	r3, #92	; 0x5c
    cab8:	strbpl.w	r3, [r6], #1
    cabc:	lsls	r0, r4, #24
    cabe:	iteet	pl
    cac0:	uxtbpl	r5, r4
    cac2:	movmi	r3, #77	; 0x4d
    cac4:	strbmi.w	r3, [r6], #1
    cac8:	movpl	r7, r4
    caca:	it	mi
    cacc:	movmi	r5, r7
    cace:	blx	1cb8 <__ctype_b_loc@plt>
    cad2:	uxtb	r3, r7
    cad4:	ldr	r2, [r0, #0]
    cad6:	adds	r0, r6, #2
    cad8:	ldrh.w	r2, [r2, r5, lsl #1]
    cadc:	lsls	r1, r2, #30
    cade:	bpl.w	cc0c <setlogin@@Base+0xe04>
    cae2:	cmp	r7, #127	; 0x7f
    cae4:	mov.w	r2, #94	; 0x5e
    cae8:	it	ne
    caea:	addne	r3, #64	; 0x40
    caec:	strb	r2, [r6, #0]
    caee:	it	eq
    caf0:	moveq	r3, #63	; 0x3f
    caf2:	strb	r3, [r6, #1]
    caf4:	b.n	cba6 <setlogin@@Base+0xd9e>
    caf6:	cmp	r4, #32
    caf8:	bhi.n	ca76 <setlogin@@Base+0xc6e>
    cafa:	add	r3, pc, #8	; (adr r3, cb04 <setlogin@@Base+0xcfc>)
    cafc:	ldr.w	r2, [r3, r4, lsl #2]
    cb00:	add	r3, r2
    cb02:	bx	r3
    cb04:	lsls	r1, r0, #6
    cb06:	movs	r0, r0
    cb08:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb0c:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb10:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb14:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb18:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb1c:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb20:	lsls	r3, r6, #5
    cb22:	movs	r0, r0
    cb24:	lsls	r5, r4, #5
    cb26:	movs	r0, r0
    cb28:	lsls	r7, r2, #5
    cb2a:	movs	r0, r0
    cb2c:	lsls	r1, r1, #5
    cb2e:	movs	r0, r0
    cb30:	lsls	r3, r7, #4
    cb32:	movs	r0, r0
    cb34:	lsls	r5, r5, #4
    cb36:	movs	r0, r0
    cb38:	lsls	r7, r3, #4
    cb3a:	movs	r0, r0
    cb3c:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb40:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb44:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb48:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb4c:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb50:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb54:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb58:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb5c:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb60:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb64:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb68:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb6c:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb70:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb74:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb78:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb7c:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb80:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
    cb84:	lsls	r1, r2, #4
    cb86:	movs	r0, r0
    cb88:	adds	r0, r6, #4
    cb8a:	ubfx	r2, r4, #6, #2
    cb8e:	ubfx	r3, r4, #3, #3
    cb92:	and.w	r4, r4, #7
    cb96:	adds	r3, #48	; 0x30
    cb98:	adds	r2, #48	; 0x30
    cb9a:	adds	r4, #48	; 0x30
    cb9c:	strb	r3, [r6, #2]
    cb9e:	strb	r2, [r6, #1]
    cba0:	movs	r3, #92	; 0x5c
    cba2:	strb	r4, [r6, #3]
    cba4:	strb	r3, [r6, #0]
    cba6:	movs	r3, #0
    cba8:	strb	r3, [r0, #0]
    cbaa:	pop	{r3, r4, r5, r6, r7, pc}
    cbac:	lsls	r2, r4, #24
    cbae:	bmi.w	ca0e <setlogin@@Base+0xc06>
    cbb2:	subs.w	r3, r4, #91	; 0x5b
    cbb6:	sub.w	r2, r4, #35	; 0x23
    cbba:	it	ne
    cbbc:	movne	r3, #1
    cbbe:	cmp	r2, #28
    cbc0:	itttt	ls
    cbc2:	movls	r1, #129	; 0x81
    cbc4:	movtls	r1, #4096	; 0x1000
    cbc8:	lsrls.w	r2, r1, r2
    cbcc:	bicls	r3, r2
    cbce:	cbz	r3, cc04 <setlogin@@Base+0xdfc>
    cbd0:	blx	1cb8 <__ctype_b_loc@plt>
    cbd4:	ldr	r3, [r0, #0]
    cbd6:	ldrsh.w	r3, [r3, r4, lsl #1]
    cbda:	cmp	r3, #0
    cbdc:	bge.w	ca0e <setlogin@@Base+0xc06>
    cbe0:	cmp	r4, #34	; 0x22
    cbe2:	bne.n	cbfa <setlogin@@Base+0xdf2>
    cbe4:	lsls	r7, r5, #22
    cbe6:	bpl.n	cbee <setlogin@@Base+0xde6>
    cbe8:	movs	r3, #92	; 0x5c
    cbea:	strb.w	r3, [r6], #1
    cbee:	mov	r0, r6
    cbf0:	movs	r3, #0
    cbf2:	strb.w	r4, [r0], #1
    cbf6:	strb	r3, [r6, #1]
    cbf8:	pop	{r3, r4, r5, r6, r7, pc}
    cbfa:	cmp	r4, #92	; 0x5c
    cbfc:	bne.n	cbee <setlogin@@Base+0xde6>
    cbfe:	lsls	r5, r5, #25
    cc00:	bmi.n	cbee <setlogin@@Base+0xde6>
    cc02:	b.n	cbe8 <setlogin@@Base+0xde0>
    cc04:	lsls	r2, r5, #23
    cc06:	bmi.w	ca0e <setlogin@@Base+0xc06>
    cc0a:	b.n	cbd0 <setlogin@@Base+0xdc8>
    cc0c:	strb	r3, [r6, #1]
    cc0e:	movs	r3, #45	; 0x2d
    cc10:	strb	r3, [r6, #0]
    cc12:	b.n	cba6 <setlogin@@Base+0xd9e>
    cc14:	mov	r0, r6
    cc16:	movs	r2, #92	; 0x5c
    cc18:	movs	r3, #115	; 0x73
    cc1a:	strb.w	r2, [r0], #2
    cc1e:	strb	r3, [r6, #1]
    cc20:	b.n	cba6 <setlogin@@Base+0xd9e>
    cc22:	mov	r0, r6
    cc24:	movs	r2, #92	; 0x5c
    cc26:	movs	r3, #114	; 0x72
    cc28:	strb.w	r2, [r0], #2
    cc2c:	strb	r3, [r6, #1]
    cc2e:	b.n	cba6 <setlogin@@Base+0xd9e>
    cc30:	mov	r0, r6
    cc32:	movs	r2, #92	; 0x5c
    cc34:	movs	r3, #102	; 0x66
    cc36:	strb.w	r2, [r0], #2
    cc3a:	strb	r3, [r6, #1]
    cc3c:	b.n	cba6 <setlogin@@Base+0xd9e>
    cc3e:	mov	r0, r6
    cc40:	movs	r2, #92	; 0x5c
    cc42:	movs	r3, #118	; 0x76
    cc44:	strb.w	r2, [r0], #2
    cc48:	strb	r3, [r6, #1]
    cc4a:	b.n	cba6 <setlogin@@Base+0xd9e>
    cc4c:	mov	r0, r6
    cc4e:	movs	r2, #92	; 0x5c
    cc50:	movs	r3, #110	; 0x6e
    cc52:	strb.w	r2, [r0], #2
    cc56:	strb	r3, [r6, #1]
    cc58:	b.n	cba6 <setlogin@@Base+0xd9e>
    cc5a:	mov	r0, r6
    cc5c:	movs	r2, #92	; 0x5c
    cc5e:	movs	r3, #116	; 0x74
    cc60:	strb.w	r2, [r0], #2
    cc64:	strb	r3, [r6, #1]
    cc66:	b.n	cba6 <setlogin@@Base+0xd9e>
    cc68:	mov	r0, r6
    cc6a:	movs	r2, #92	; 0x5c
    cc6c:	movs	r3, #98	; 0x62
    cc6e:	strb.w	r2, [r0], #2
    cc72:	strb	r3, [r6, #1]
    cc74:	b.n	cba6 <setlogin@@Base+0xd9e>
    cc76:	mov	r0, r6
    cc78:	movs	r2, #92	; 0x5c
    cc7a:	movs	r3, #97	; 0x61
    cc7c:	strb.w	r2, [r0], #2
    cc80:	strb	r3, [r6, #1]
    cc82:	b.n	cba6 <setlogin@@Base+0xd9e>
    cc84:	sub.w	r3, r7, #48	; 0x30
    cc88:	movs	r2, #48	; 0x30
    cc8a:	movs	r1, #92	; 0x5c
    cc8c:	strb	r2, [r6, #1]
    cc8e:	uxtb	r3, r3
    cc90:	strb	r1, [r6, #0]
    cc92:	cmp	r3, #7
    cc94:	itett	ls
    cc96:	strbls	r2, [r6, #2]
    cc98:	addhi	r0, r6, #2
    cc9a:	addls	r0, r6, #4
    cc9c:	strbls	r2, [r6, #3]
    cc9e:	b.n	cba6 <setlogin@@Base+0xd9e>
    cca0:	push	{r3, r4, r5, r6, r7, lr}
    cca2:	mov	r5, r1
    cca4:	ldrb	r1, [r1, #0]
    cca6:	mov	r7, r0
    cca8:	cbz	r1, ccce <setlogin@@Base+0xec6>
    ccaa:	mov	r6, r2
    ccac:	mov	r4, r0
    ccae:	ldrb.w	r3, [r5, #1]!
    ccb2:	mov	r0, r4
    ccb4:	mov	r2, r6
    ccb6:	bl	c9f4 <setlogin@@Base+0xbec>
    ccba:	ldrb	r1, [r5, #0]
    ccbc:	mov	r4, r0
    ccbe:	cmp	r1, #0
    ccc0:	bne.n	ccae <setlogin@@Base+0xea6>
    ccc2:	mov	r1, r7
    ccc4:	bl	df3c <setlogin@@Base+0x2134>
    ccc8:	movs	r3, #0
    ccca:	strb	r3, [r4, #0]
    cccc:	pop	{r3, r4, r5, r6, r7, pc}
    ccce:	mov	r4, r0
    ccd0:	movs	r3, #0
    ccd2:	mov	r0, r1
    ccd4:	strb	r3, [r4, #0]
    ccd6:	pop	{r3, r4, r5, r6, r7, pc}
    ccd8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ccdc:	sub	sp, #36	; 0x24
    ccde:	add.w	sl, r2, #4294967295	; 0xffffffff
    cce2:	mov	r6, r3
    cce4:	str	r2, [sp, #12]
    cce6:	add	sl, r0
    cce8:	ldr	r2, [pc, #424]	; (ce94 <setlogin@@Base+0x108c>)
    ccea:	mov	r7, r1
    ccec:	ldr	r3, [pc, #424]	; (ce98 <setlogin@@Base+0x1090>)
    ccee:	add	r2, pc
    ccf0:	ldrb	r4, [r1, #0]
    ccf2:	str	r0, [sp, #8]
    ccf4:	ldr	r3, [r2, r3]
    ccf6:	cmp	r4, #0
    ccf8:	it	ne
    ccfa:	cmpne	r0, sl
    ccfc:	ldr	r3, [r3, #0]
    ccfe:	str	r3, [sp, #28]
    cd00:	mov.w	r3, #0
    cd04:	bcs.w	ce82 <setlogin@@Base+0x107a>
    cd08:	eor.w	fp, r6, #4
    cd0c:	mov	r5, r0
    cd0e:	ubfx	r3, fp, #2, #1
    cd12:	mov	r8, r1
    cd14:	str	r3, [sp, #4]
    cd16:	b.n	cdb4 <setlogin@@Base+0xfac>
    cd18:	lsls	r1, r6, #21
    cd1a:	bmi.n	cd74 <setlogin@@Base+0xf6c>
    cd1c:	lsls	r3, r4, #24
    cd1e:	bpl.n	ce1e <setlogin@@Base+0x1016>
    cd20:	ldr	r3, [sp, #4]
    cd22:	cmp	r4, #32
    cd24:	ite	ne
    cd26:	movne	r3, #0
    cd28:	andeq.w	r3, r3, #1
    cd2c:	cmp	r3, #0
    cd2e:	bne.n	cdda <setlogin@@Base+0xfd2>
    cd30:	sub.w	r2, r4, #9
    cd34:	eor.w	r3, r6, #8
    cd38:	clz	r2, r2
    cd3c:	lsrs	r2, r2, #5
    cd3e:	ands.w	r3, r2, r3, lsr #3
    cd42:	bne.n	cdda <setlogin@@Base+0xfd2>
    cd44:	sub.w	r2, r4, #10
    cd48:	eor.w	r3, r6, #16
    cd4c:	clz	r2, r2
    cd50:	lsrs	r2, r2, #5
    cd52:	ands.w	r3, r2, r3, lsr #4
    cd56:	bne.n	cdda <setlogin@@Base+0xfd2>
    cd58:	lsls	r0, r6, #26
    cd5a:	bpl.n	cd74 <setlogin@@Base+0xf6c>
    cd5c:	subs	r3, r4, #7
    cd5e:	cmp	r4, #13
    cd60:	it	ne
    cd62:	cmpne	r3, #1
    cd64:	bls.n	cdc6 <setlogin@@Base+0xfbe>
    cd66:	blx	1cb8 <__ctype_b_loc@plt>
    cd6a:	ldr	r3, [r0, #0]
    cd6c:	ldrsh.w	r3, [r3, r4, lsl #1]
    cd70:	cmp	r3, #0
    cd72:	blt.n	cdc6 <setlogin@@Base+0xfbe>
    cd74:	add.w	r9, sp, #20
    cd78:	mov	r1, r4
    cd7a:	ldrb.w	r3, [r8, #1]
    cd7e:	mov	r2, r6
    cd80:	mov	r0, r9
    cd82:	add.w	r7, r8, #1
    cd86:	bl	c9f4 <setlogin@@Base+0xbec>
    cd8a:	mov	r1, r9
    cd8c:	bl	df3c <setlogin@@Base+0x2134>
    cd90:	str	r7, [sp, #0]
    cd92:	adds	r4, r5, r0
    cd94:	mov	fp, r0
    cd96:	cmp	r4, sl
    cd98:	bhi.n	ce4e <setlogin@@Base+0x1046>
    cd9a:	mov	r0, r5
    cd9c:	mov	r1, r9
    cd9e:	mov	r2, fp
    cda0:	mov	r5, r4
    cda2:	blx	1b84 <memcpy@plt>
    cda6:	ldr	r3, [sp, #0]
    cda8:	ldrb	r4, [r3, #0]
    cdaa:	mov	r8, r3
    cdac:	cmp	r4, #0
    cdae:	it	ne
    cdb0:	cmpne	r5, sl
    cdb2:	bcs.n	cdf4 <setlogin@@Base+0xfec>
    cdb4:	cmp	r4, #92	; 0x5c
    cdb6:	bne.n	cd18 <setlogin@@Base+0xf10>
    cdb8:	blx	1cb8 <__ctype_b_loc@plt>
    cdbc:	ldr	r3, [r0, #0]
    cdbe:	ldrsh.w	r3, [r3, r4, lsl #1]
    cdc2:	cmp	r3, #0
    cdc4:	bge.n	cd20 <setlogin@@Base+0xf18>
    cdc6:	cmp	r4, #34	; 0x22
    cdc8:	bne.n	ce44 <setlogin@@Base+0x103c>
    cdca:	lsls	r1, r6, #22
    cdcc:	bpl.n	cdda <setlogin@@Base+0xfd2>
    cdce:	adds	r3, r5, #1
    cdd0:	cmp	r3, sl
    cdd2:	bcs.n	ce88 <setlogin@@Base+0x1080>
    cdd4:	movs	r2, #92	; 0x5c
    cdd6:	strb	r2, [r5, #0]
    cdd8:	mov	r5, r3
    cdda:	add.w	r3, r8, #1
    cdde:	strb.w	r4, [r5], #1
    cde2:	mov.w	fp, #1
    cde6:	ldrb	r4, [r3, #0]
    cde8:	mov	r7, r3
    cdea:	mov	r8, r3
    cdec:	cmp	r4, #0
    cdee:	it	ne
    cdf0:	cmpne	r5, sl
    cdf2:	bcc.n	cdb4 <setlogin@@Base+0xfac>
    cdf4:	add.w	r4, r5, fp
    cdf8:	ldr	r3, [sp, #12]
    cdfa:	cbnz	r3, ce54 <setlogin@@Base+0x104c>
    cdfc:	cmp	sl, r4
    cdfe:	bcc.n	ce5e <setlogin@@Base+0x1056>
    ce00:	ldr	r1, [sp, #8]
    ce02:	mov	r0, r5
    ce04:	bl	df3c <setlogin@@Base+0x2134>
    ce08:	ldr	r2, [pc, #144]	; (ce9c <setlogin@@Base+0x1094>)
    ce0a:	ldr	r3, [pc, #140]	; (ce98 <setlogin@@Base+0x1090>)
    ce0c:	add	r2, pc
    ce0e:	ldr	r3, [r2, r3]
    ce10:	ldr	r2, [r3, #0]
    ce12:	ldr	r3, [sp, #28]
    ce14:	eors	r2, r3
    ce16:	bne.n	ce8e <setlogin@@Base+0x1086>
    ce18:	add	sp, #36	; 0x24
    ce1a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ce1e:	subs.w	r3, r4, #91	; 0x5b
    ce22:	sub.w	r1, r4, #35	; 0x23
    ce26:	it	ne
    ce28:	movne	r3, #1
    ce2a:	cmp	r1, #28
    ce2c:	itttt	ls
    ce2e:	movls	r2, #129	; 0x81
    ce30:	movtls	r2, #4096	; 0x1000
    ce34:	lsrls	r2, r1
    ce36:	bicls	r3, r2
    ce38:	cmp	r3, #0
    ce3a:	bne.n	cdb8 <setlogin@@Base+0xfb0>
    ce3c:	lsls	r7, r6, #23
    ce3e:	bmi.w	cd20 <setlogin@@Base+0xf18>
    ce42:	b.n	cdb8 <setlogin@@Base+0xfb0>
    ce44:	cmp	r4, #92	; 0x5c
    ce46:	bne.n	cdda <setlogin@@Base+0xfd2>
    ce48:	lsls	r3, r6, #25
    ce4a:	bmi.n	cdda <setlogin@@Base+0xfd2>
    ce4c:	b.n	cdce <setlogin@@Base+0xfc6>
    ce4e:	ldr	r3, [sp, #12]
    ce50:	mov	r7, r8
    ce52:	cbz	r3, ce5e <setlogin@@Base+0x1056>
    ce54:	cmp	sl, r4
    ce56:	mov.w	r3, #0
    ce5a:	strb	r3, [r5, #0]
    ce5c:	bcs.n	ce00 <setlogin@@Base+0xff8>
    ce5e:	ldrb	r1, [r7, #0]
    ce60:	cmp	r1, #0
    ce62:	beq.n	ce00 <setlogin@@Base+0xff8>
    ce64:	add	r4, sp, #20
    ce66:	ldrb.w	r3, [r7, #1]!
    ce6a:	mov	r2, r6
    ce6c:	mov	r0, r4
    ce6e:	bl	c9f4 <setlogin@@Base+0xbec>
    ce72:	mov	r1, r4
    ce74:	bl	df3c <setlogin@@Base+0x2134>
    ce78:	ldrb	r1, [r7, #0]
    ce7a:	add	r5, r0
    ce7c:	cmp	r1, #0
    ce7e:	bne.n	ce66 <setlogin@@Base+0x105e>
    ce80:	b.n	ce00 <setlogin@@Base+0xff8>
    ce82:	ldr	r5, [sp, #8]
    ce84:	mov	r4, r5
    ce86:	b.n	cdf8 <setlogin@@Base+0xff0>
    ce88:	adds	r4, r5, #2
    ce8a:	mov	r7, r8
    ce8c:	b.n	cdf8 <setlogin@@Base+0xff0>
    ce8e:	blx	1cf8 <__stack_chk_fail@plt>
    ce92:	nop
    ce94:	lsls	r2, r0
    ce96:	movs	r1, r0
    ce98:	lsls	r4, r1, #9
    ce9a:	movs	r0, r0
    ce9c:	subs	r7, #100	; 0x64
    ce9e:	movs	r1, r0
    cea0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    cea4:	mov	r6, r0
    cea6:	mov	r0, r1
    cea8:	mov	r5, r1
    ceaa:	mov	r7, r2
    ceac:	blx	1b6c <strlen@plt>
    ceb0:	movs	r1, #4
    ceb2:	adds	r2, r0, #1
    ceb4:	movs	r0, #0
    ceb6:	blx	1a04 <reallocarray@plt>
    ceba:	cbz	r0, ceec <setlogin@@Base+0x10e4>
    cebc:	mov	r2, r7
    cebe:	mov	r1, r5
    cec0:	mov	r4, r0
    cec2:	bl	cca0 <setlogin@@Base+0xe98>
    cec6:	mov	r5, r0
    cec8:	blx	1f04 <__errno_location@plt>
    cecc:	movs	r1, #1
    cece:	mov	r7, r0
    ced0:	mov	r0, r5
    ced2:	bl	ded8 <setlogin@@Base+0x20d0>
    ced6:	ldr.w	r8, [r7]
    ceda:	mov	r1, r0
    cedc:	mov	r0, r4
    cede:	blx	1e68 <realloc@plt>
    cee2:	str	r0, [r6, #0]
    cee4:	cbz	r0, cef2 <setlogin@@Base+0x10ea>
    cee6:	mov	r0, r5
    cee8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ceec:	mov.w	r5, #4294967295	; 0xffffffff
    cef0:	b.n	cee6 <setlogin@@Base+0x10de>
    cef2:	str	r4, [r6, #0]
    cef4:	str.w	r8, [r7]
    cef8:	b.n	cee6 <setlogin@@Base+0x10de>
    cefa:	nop
    cefc:	cmp	r2, #1
    cefe:	push	{r3, r4, r5, r6, r7, lr}
    cf00:	mov	r6, r0
    cf02:	mov	r4, r1
    cf04:	mov	r7, r3
    cf06:	bls.n	cf34 <setlogin@@Base+0x112c>
    cf08:	subs	r5, r2, #1
    cf0a:	add	r5, r1
    cf0c:	ldrb	r1, [r4, #0]
    cf0e:	mov	r2, r7
    cf10:	ldrb.w	r3, [r4, #1]!
    cf14:	bl	c9f4 <setlogin@@Base+0xbec>
    cf18:	cmp	r5, r4
    cf1a:	bne.n	cf0c <setlogin@@Base+0x1104>
    cf1c:	ldrb	r1, [r5, #0]
    cf1e:	mov	r2, r7
    cf20:	movs	r3, #0
    cf22:	bl	c9f4 <setlogin@@Base+0xbec>
    cf26:	mov	r1, r6
    cf28:	mov	r6, r0
    cf2a:	bl	df3c <setlogin@@Base+0x2134>
    cf2e:	movs	r3, #0
    cf30:	strb	r3, [r6, #0]
    cf32:	pop	{r3, r4, r5, r6, r7, pc}
    cf34:	mov	r0, r2
    cf36:	cbnz	r2, cf3e <setlogin@@Base+0x1136>
    cf38:	movs	r3, #0
    cf3a:	strb	r3, [r6, #0]
    cf3c:	pop	{r3, r4, r5, r6, r7, pc}
    cf3e:	mov	r5, r1
    cf40:	mov	r0, r6
    cf42:	b.n	cf1c <setlogin@@Base+0x1114>
    cf44:	push	{r4, r5, r6, lr}
    cf46:	sub	sp, #40	; 0x28
    cf48:	ldr	r6, [pc, #112]	; (cfbc <setlogin@@Base+0x11b4>)
    cf4a:	add	r5, sp, #16
    cf4c:	ldr	r4, [pc, #112]	; (cfc0 <setlogin@@Base+0x11b8>)
    cf4e:	add	r1, sp, #12
    cf50:	add	r6, pc
    cf52:	str	r1, [sp, #0]
    cf54:	movs	r2, #25
    cf56:	mov	r3, r5
    cf58:	ldr	r4, [r6, r4]
    cf5a:	movs	r1, #1
    cf5c:	movs	r6, #16
    cf5e:	ldr	r4, [r4, #0]
    cf60:	str	r4, [sp, #36]	; 0x24
    cf62:	mov.w	r4, #0
    cf66:	mov	r4, r0
    cf68:	str	r6, [sp, #12]
    cf6a:	blx	1e8c <getsockopt@plt>
    cf6e:	adds	r0, #1
    cf70:	beq.n	cf98 <setlogin@@Base+0x1190>
    cf72:	ldr	r2, [sp, #12]
    cf74:	add	r1, sp, #40	; 0x28
    cf76:	mov	r0, r5
    cf78:	movs	r3, #0
    cf7a:	add	r2, r1
    cf7c:	strb.w	r3, [r2, #-24]
    cf80:	blx	1cd4 <strdup@plt+0x4>
    cf84:	ldr	r2, [pc, #60]	; (cfc4 <setlogin@@Base+0x11bc>)
    cf86:	ldr	r3, [pc, #56]	; (cfc0 <setlogin@@Base+0x11b8>)
    cf88:	add	r2, pc
    cf8a:	ldr	r3, [r2, r3]
    cf8c:	ldr	r2, [r3, #0]
    cf8e:	ldr	r3, [sp, #36]	; 0x24
    cf90:	eors	r2, r3
    cf92:	bne.n	cfb6 <setlogin@@Base+0x11ae>
    cf94:	add	sp, #40	; 0x28
    cf96:	pop	{r4, r5, r6, pc}
    cf98:	blx	1f04 <__errno_location@plt>
    cf9c:	ldr	r0, [r0, #0]
    cf9e:	blx	1938 <strerror@plt+0x4>
    cfa2:	ldr	r1, [pc, #36]	; (cfc8 <setlogin@@Base+0x11c0>)
    cfa4:	mov	r2, r4
    cfa6:	add	r1, pc
    cfa8:	mov	r3, r0
    cfaa:	ldr	r0, [pc, #32]	; (cfcc <setlogin@@Base+0x11c4>)
    cfac:	add	r0, pc
    cfae:	bl	5f30 <error@@Base>
    cfb2:	movs	r0, #0
    cfb4:	b.n	cf84 <setlogin@@Base+0x117c>
    cfb6:	blx	1cf8 <__stack_chk_fail@plt>
    cfba:	nop
    cfbc:	subs	r6, #32
    cfbe:	movs	r1, r0
    cfc0:	lsls	r4, r1, #9
    cfc2:	movs	r0, r0
    cfc4:	subs	r5, #232	; 0xe8
    cfc6:	movs	r1, r0
    cfc8:	adds	r0, #74	; 0x4a
    cfca:	movs	r0, r0
    cfcc:	cmp	r7, #24
    cfce:	movs	r0, r0
    cfd0:	push	{r4, r5, r6, lr}
    cfd2:	mov	r6, r0
    cfd4:	sub	sp, #8
    cfd6:	mov	r0, r1
    cfd8:	mov	r5, r1
    cfda:	blx	1b6c <strlen@plt>
    cfde:	mov	r3, r5
    cfe0:	movs	r2, #25
    cfe2:	movs	r1, #1
    cfe4:	str	r0, [sp, #0]
    cfe6:	mov	r0, r6
    cfe8:	blx	1ea4 <setsockopt@plt>
    cfec:	adds	r3, r0, #1
    cfee:	it	ne
    cff0:	movne	r4, #0
    cff2:	beq.n	cffa <setlogin@@Base+0x11f2>
    cff4:	mov	r0, r4
    cff6:	add	sp, #8
    cff8:	pop	{r4, r5, r6, pc}
    cffa:	mov	r4, r0
    cffc:	blx	1f04 <__errno_location@plt>
    d000:	ldr	r0, [r0, #0]
    d002:	blx	1938 <strerror@plt+0x4>
    d006:	ldr	r1, [pc, #20]	; (d01c <setlogin@@Base+0x1214>)
    d008:	mov	r3, r5
    d00a:	mov	r2, r6
    d00c:	add	r1, pc
    d00e:	adds	r1, #16
    d010:	str	r0, [sp, #0]
    d012:	ldr	r0, [pc, #12]	; (d020 <setlogin@@Base+0x1218>)
    d014:	add	r0, pc
    d016:	bl	5f30 <error@@Base>
    d01a:	b.n	cff4 <setlogin@@Base+0x11ec>
    d01c:	cmp	r7, #228	; 0xe4
    d01e:	movs	r0, r0
    d020:	cmp	r6, #216	; 0xd8
    d022:	movs	r0, r0
    d024:	push	{r4, r5, lr}
    d026:	movs	r2, #0
    d028:	sub	sp, #12
    d02a:	mov	r5, r0
    d02c:	movs	r1, #1
    d02e:	movs	r0, #2
    d030:	blx	1b24 <socket@plt>
    d034:	adds	r3, r0, #1
    d036:	it	eq
    d038:	moveq	r0, #0
    d03a:	beq.n	d05e <setlogin@@Base+0x1256>
    d03c:	mov	r4, r0
    d03e:	mov	r0, r5
    d040:	blx	1b6c <strlen@plt>
    d044:	mov	r3, r5
    d046:	movs	r2, #25
    d048:	movs	r1, #1
    d04a:	str	r0, [sp, #0]
    d04c:	mov	r0, r4
    d04e:	blx	1ea4 <setsockopt@plt>
    d052:	adds	r0, #1
    d054:	mov	r0, r4
    d056:	beq.n	d062 <setlogin@@Base+0x125a>
    d058:	blx	1c88 <close@plt+0x4>
    d05c:	movs	r0, #1
    d05e:	add	sp, #12
    d060:	pop	{r4, r5, pc}
    d062:	blx	1c88 <close@plt+0x4>
    d066:	movs	r0, #0
    d068:	add	sp, #12
    d06a:	pop	{r4, r5, pc}
    d06c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d070:	mov	r7, r1
    d072:	ldr	r1, [pc, #356]	; (d1d8 <setlogin@@Base+0x13d0>)
    d074:	sub	sp, #48	; 0x30
    d076:	ldr	r3, [pc, #356]	; (d1dc <setlogin@@Base+0x13d4>)
    d078:	mov	r6, r0
    d07a:	add	r1, pc
    d07c:	mov	r5, r2
    d07e:	ldr	r3, [r1, r3]
    d080:	ldr	r3, [r3, #0]
    d082:	str	r3, [sp, #44]	; 0x2c
    d084:	mov.w	r3, #0
    d088:	cbz	r2, d08e <setlogin@@Base+0x1286>
    d08a:	movs	r3, #0
    d08c:	str	r3, [r2, #0]
    d08e:	ldr.w	r8, [pc, #336]	; d1e0 <setlogin@@Base+0x13d8>
    d092:	movs	r1, #2
    d094:	add	r8, pc
    d096:	mov	r0, r8
    d098:	blx	1c14 <open64@plt>
    d09c:	adds	r3, r0, #1
    d09e:	mov	r4, r0
    d0a0:	beq.n	d196 <setlogin@@Base+0x138e>
    d0a2:	add.w	r8, sp, #12
    d0a6:	movs	r2, #32
    d0a8:	movs	r1, #0
    d0aa:	mov	r0, r8
    d0ac:	blx	1a38 <memset@plt>
    d0b0:	cmp	r7, #2
    d0b2:	beq.n	d132 <setlogin@@Base+0x132a>
    d0b4:	movw	r3, #4097	; 0x1001
    d0b8:	ldr	r2, [pc, #296]	; (d1e4 <setlogin@@Base+0x13dc>)
    d0ba:	strh.w	r3, [sp, #28]
    d0be:	mvn.w	r3, #2147483648	; 0x80000000
    d0c2:	cmp	r6, r3
    d0c4:	add	r2, pc
    d0c6:	beq.n	d146 <setlogin@@Base+0x133e>
    d0c8:	movw	r3, #65534	; 0xfffe
    d0cc:	movt	r3, #32767	; 0x7fff
    d0d0:	cmp	r6, r3
    d0d2:	beq.n	d1b4 <setlogin@@Base+0x13ac>
    d0d4:	movs	r3, #16
    d0d6:	strd	r2, r6, [sp]
    d0da:	mov	r1, r3
    d0dc:	movs	r2, #1
    d0de:	mov	r0, r8
    d0e0:	blx	1c54 <__snprintf_chk@plt>
    d0e4:	mov	r2, r8
    d0e6:	movw	r1, #21706	; 0x54ca
    d0ea:	mov	r0, r4
    d0ec:	movt	r1, #16388	; 0x4004
    d0f0:	blx	1b48 <ioctl@plt>
    d0f4:	adds	r0, #1
    d0f6:	beq.n	d16e <setlogin@@Base+0x1366>
    d0f8:	ldr	r1, [pc, #236]	; (d1e8 <setlogin@@Base+0x13e0>)
    d0fa:	mov	r3, r7
    d0fc:	ldr	r0, [pc, #236]	; (d1ec <setlogin@@Base+0x13e4>)
    d0fe:	mov	r2, r8
    d100:	add	r1, pc
    d102:	str	r4, [sp, #0]
    d104:	adds	r1, #32
    d106:	add	r0, pc
    d108:	bl	6064 <error@@Base+0x134>
    d10c:	cbz	r5, d11a <setlogin@@Base+0x1312>
    d10e:	mov	r0, r8
    d110:	blx	1cd4 <strdup@plt+0x4>
    d114:	str	r0, [r5, #0]
    d116:	cmp	r0, #0
    d118:	beq.n	d18a <setlogin@@Base+0x1382>
    d11a:	ldr	r2, [pc, #212]	; (d1f0 <setlogin@@Base+0x13e8>)
    d11c:	ldr	r3, [pc, #188]	; (d1dc <setlogin@@Base+0x13d4>)
    d11e:	add	r2, pc
    d120:	ldr	r3, [r2, r3]
    d122:	ldr	r2, [r3, #0]
    d124:	ldr	r3, [sp, #44]	; 0x2c
    d126:	eors	r2, r3
    d128:	bne.n	d1d2 <setlogin@@Base+0x13ca>
    d12a:	mov	r0, r4
    d12c:	add	sp, #48	; 0x30
    d12e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d132:	movw	r3, #4098	; 0x1002
    d136:	ldr	r2, [pc, #188]	; (d1f4 <setlogin@@Base+0x13ec>)
    d138:	strh.w	r3, [sp, #28]
    d13c:	mvn.w	r3, #2147483648	; 0x80000000
    d140:	cmp	r6, r3
    d142:	add	r2, pc
    d144:	bne.n	d0c8 <setlogin@@Base+0x12c0>
    d146:	movw	r1, #21706	; 0x54ca
    d14a:	mov	r2, r8
    d14c:	movt	r1, #16388	; 0x4004
    d150:	mov	r0, r4
    d152:	blx	1b48 <ioctl@plt>
    d156:	adds	r0, #1
    d158:	beq.n	d16e <setlogin@@Base+0x1366>
    d15a:	ldr	r1, [pc, #156]	; (d1f8 <setlogin@@Base+0x13f0>)
    d15c:	mov	r2, r7
    d15e:	ldr	r0, [pc, #156]	; (d1fc <setlogin@@Base+0x13f4>)
    d160:	mov	r3, r4
    d162:	add	r1, pc
    d164:	add	r0, pc
    d166:	adds	r1, #32
    d168:	bl	6064 <error@@Base+0x134>
    d16c:	b.n	d10c <setlogin@@Base+0x1304>
    d16e:	blx	1f04 <__errno_location@plt>
    d172:	ldr	r0, [r0, #0]
    d174:	blx	1938 <strerror@plt+0x4>
    d178:	ldr	r1, [pc, #132]	; (d200 <setlogin@@Base+0x13f8>)
    d17a:	mov	r2, r7
    d17c:	add	r1, pc
    d17e:	adds	r1, #32
    d180:	mov	r3, r0
    d182:	ldr	r0, [pc, #128]	; (d204 <setlogin@@Base+0x13fc>)
    d184:	add	r0, pc
    d186:	bl	6064 <error@@Base+0x134>
    d18a:	mov	r0, r4
    d18c:	mov.w	r4, #4294967295	; 0xffffffff
    d190:	blx	1c88 <close@plt+0x4>
    d194:	b.n	d11a <setlogin@@Base+0x1312>
    d196:	blx	1f04 <__errno_location@plt>
    d19a:	ldr	r0, [r0, #0]
    d19c:	blx	1938 <strerror@plt+0x4>
    d1a0:	ldr	r1, [pc, #100]	; (d208 <setlogin@@Base+0x1400>)
    d1a2:	mov	r2, r8
    d1a4:	add	r1, pc
    d1a6:	adds	r1, #32
    d1a8:	mov	r3, r0
    d1aa:	ldr	r0, [pc, #96]	; (d20c <setlogin@@Base+0x1404>)
    d1ac:	add	r0, pc
    d1ae:	bl	6064 <error@@Base+0x134>
    d1b2:	b.n	d11a <setlogin@@Base+0x1312>
    d1b4:	blx	1f04 <__errno_location@plt>
    d1b8:	ldr	r0, [r0, #0]
    d1ba:	blx	1938 <strerror@plt+0x4>
    d1be:	ldr	r1, [pc, #80]	; (d210 <setlogin@@Base+0x1408>)
    d1c0:	mov	r2, r6
    d1c2:	add	r1, pc
    d1c4:	adds	r1, #32
    d1c6:	mov	r3, r0
    d1c8:	ldr	r0, [pc, #72]	; (d214 <setlogin@@Base+0x140c>)
    d1ca:	add	r0, pc
    d1cc:	bl	6064 <error@@Base+0x134>
    d1d0:	b.n	d18a <setlogin@@Base+0x1382>
    d1d2:	blx	1cf8 <__stack_chk_fail@plt>
    d1d6:	nop
    d1d8:	subs	r4, #246	; 0xf6
    d1da:	movs	r1, r0
    d1dc:	lsls	r4, r1, #9
    d1de:	movs	r0, r0
    d1e0:	cmp	r6, #148	; 0x94
    d1e2:	movs	r0, r0
    d1e4:	cmp	r6, #84	; 0x54
    d1e6:	movs	r0, r0
    d1e8:	cmp	r6, #240	; 0xf0
    d1ea:	movs	r0, r0
    d1ec:	cmp	r6, #210	; 0xd2
    d1ee:	movs	r0, r0
    d1f0:	subs	r4, #82	; 0x52
    d1f2:	movs	r1, r0
    d1f4:	cmp	r5, #222	; 0xde
    d1f6:	movs	r0, r0
    d1f8:	cmp	r6, #142	; 0x8e
    d1fa:	movs	r0, r0
    d1fc:	cmp	r6, #88	; 0x58
    d1fe:	movs	r0, r0
    d200:	cmp	r6, #116	; 0x74
    d202:	movs	r0, r0
    d204:	cmp	r6, #8
    d206:	movs	r0, r0
    d208:	cmp	r6, #76	; 0x4c
    d20a:	movs	r0, r0
    d20c:	cmp	r5, #140	; 0x8c
    d20e:	movs	r0, r0
    d210:	cmp	r6, #46	; 0x2e
    d212:	movs	r0, r0
    d214:	cmp	r5, #162	; 0xa2
    d216:	movs	r0, r0
    d218:	ldr	r0, [pc, #200]	; (d2e4 <setlogin@@Base+0x14dc>)
    d21a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    d21e:	mov	r8, r1
    d220:	ldr	r1, [pc, #196]	; (d2e8 <setlogin@@Base+0x14e0>)
    d222:	add	r0, pc
    d224:	sub.w	sp, sp, #16384	; 0x4000
    d228:	mov	r4, r2
    d22a:	sub	sp, #28
    d22c:	subs	r7, r3, #0
    d22e:	add.w	r2, sp, #16384	; 0x4000
    d232:	ldr	r1, [r0, r1]
    d234:	add.w	r2, r2, #20
    d238:	ldr	r1, [r1, #0]
    d23a:	str	r1, [r2, #0]
    d23c:	mov.w	r1, #0
    d240:	blt.n	d2c2 <setlogin@@Base+0x14ba>
    d242:	sub.w	r2, r7, #21
    d246:	movw	r3, #16359	; 0x3fe7
    d24a:	cmp	r2, r3
    d24c:	bhi.n	d2c2 <setlogin@@Base+0x14ba>
    d24e:	ldr	r0, [r4, #0]
    d250:	mov	r6, sp
    d252:	ldr	r1, [r4, #4]
    d254:	add	r5, sp, #24
    d256:	ldr	r2, [r4, #8]
    d258:	add.w	r9, sp, #20
    d25c:	ldr	r3, [r4, #12]
    d25e:	stmia	r6!, {r0, r1, r2, r3}
    d260:	mov	r1, r4
    d262:	ldr	r0, [r4, #16]
    d264:	movw	r3, #16380	; 0x3ffc
    d268:	mov	r2, r7
    d26a:	str	r0, [r6, #0]
    d26c:	mov	r0, r5
    d26e:	ldrb.w	r4, [r5, #-24]
    d272:	and.w	r4, r4, #240	; 0xf0
    d276:	cmp	r4, #96	; 0x60
    d278:	ite	eq
    d27a:	moveq	r4, #24
    d27c:	movne	r4, #2
    d27e:	blx	1b18 <__memcpy_chk@plt>
    d282:	ldr.w	r0, [r8, #68]	; 0x44
    d286:	adds	r2, r7, #4
    d288:	mov	r1, r9
    d28a:	movs	r3, #0
    d28c:	strb.w	r4, [r5, #-1]
    d290:	strh.w	r3, [r5, #-4]
    d294:	strb.w	r3, [r5, #-2]
    d298:	bl	aed4 <error@@Base+0x4fa4>
    d29c:	mov	r3, r0
    d29e:	cbnz	r0, d2cc <setlogin@@Base+0x14c4>
    d2a0:	ldr	r0, [pc, #72]	; (d2ec <setlogin@@Base+0x14e4>)
    d2a2:	add.w	r2, sp, #16384	; 0x4000
    d2a6:	ldr	r1, [pc, #64]	; (d2e8 <setlogin@@Base+0x14e0>)
    d2a8:	adds	r2, #20
    d2aa:	add	r0, pc
    d2ac:	ldr	r1, [r0, r1]
    d2ae:	ldr	r0, [r1, #0]
    d2b0:	ldr	r1, [r2, #0]
    d2b2:	eors	r0, r1
    d2b4:	bne.n	d2c8 <setlogin@@Base+0x14c0>
    d2b6:	mov	r0, r3
    d2b8:	add.w	sp, sp, #16384	; 0x4000
    d2bc:	add	sp, #28
    d2be:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    d2c2:	mov.w	r3, #4294967295	; 0xffffffff
    d2c6:	b.n	d2a0 <setlogin@@Base+0x1498>
    d2c8:	blx	1cf8 <__stack_chk_fail@plt>
    d2cc:	bl	9934 <error@@Base+0x3a04>
    d2d0:	ldr	r3, [pc, #28]	; (d2f0 <setlogin@@Base+0x14e8>)
    d2d2:	add	r3, pc
    d2d4:	add.w	r1, r3, #48	; 0x30
    d2d8:	mov	r2, r0
    d2da:	ldr	r0, [pc, #24]	; (d2f4 <setlogin@@Base+0x14ec>)
    d2dc:	add	r0, pc
    d2de:	bl	59b8 <fputs@plt+0x3a84>
    d2e2:	nop
    d2e4:	subs	r3, #78	; 0x4e
    d2e6:	movs	r1, r0
    d2e8:	lsls	r4, r1, #9
    d2ea:	movs	r0, r0
    d2ec:	subs	r2, #198	; 0xc6
    d2ee:	movs	r1, r0
    d2f0:	cmp	r5, #30
    d2f2:	movs	r0, r0
    d2f4:	subs	r4, r4, #6
    d2f6:	movs	r0, r0
    d2f8:	push	{r3, r4, r5, lr}
    d2fa:	mov	r5, r2
    d2fc:	ldr	r0, [r1, #72]	; 0x48
    d2fe:	mov	r2, r3
    d300:	mov	r1, r5
    d302:	mov	r4, r3
    d304:	bl	a84c <error@@Base+0x491c>
    d308:	cbnz	r0, d320 <setlogin@@Base+0x1518>
    d30a:	ldr	r3, [r4, #0]
    d30c:	cmp	r3, #3
    d30e:	ittte	hi
    d310:	subhi	r3, #4
    d312:	strhi	r3, [r4, #0]
    d314:	ldrhi	r0, [r5, #0]
    d316:	movls	r1, r0
    d318:	ite	ls
    d31a:	movls	r0, r1
    d31c:	addhi	r0, #4
    d31e:	pop	{r3, r4, r5, pc}
    d320:	bl	9934 <error@@Base+0x3a04>
    d324:	ldr	r3, [pc, #16]	; (d338 <setlogin@@Base+0x1530>)
    d326:	add	r3, pc
    d328:	add.w	r1, r3, #68	; 0x44
    d32c:	mov	r2, r0
    d32e:	ldr	r0, [pc, #12]	; (d33c <setlogin@@Base+0x1534>)
    d330:	add	r0, pc
    d332:	bl	59b8 <fputs@plt+0x3a84>
    d336:	nop
    d338:	cmp	r4, #202	; 0xca
    d33a:	movs	r0, r0
    d33c:	subs	r0, r2, #5
    d33e:	movs	r0, r0
    d340:	subs	r2, r1, #1
    d342:	it	eq
    d344:	bxeq	lr
    d346:	bcc.w	d592 <setlogin@@Base+0x178a>
    d34a:	cmp	r0, r1
    d34c:	bls.w	d57c <setlogin@@Base+0x1774>
    d350:	tst	r1, r2
    d352:	beq.w	d584 <setlogin@@Base+0x177c>
    d356:	clz	r3, r0
    d35a:	clz	r2, r1
    d35e:	sub.w	r3, r2, r3
    d362:	rsb	r3, r3, #31
    d366:	add	r2, pc, #16	; (adr r2, d378 <setlogin@@Base+0x1570>)
    d368:	add.w	r3, r2, r3, lsl #4
    d36c:	mov.w	r2, #0
    d370:	mov	pc, r3
    d372:	nop
    d374:	nop.w
    d378:	cmp.w	r0, r1, lsl #31
    d37c:	nop
    d37e:	adc.w	r2, r2, r2
    d382:	it	cs
    d384:	subcs.w	r0, r0, r1, lsl #31
    d388:	cmp.w	r0, r1, lsl #30
    d38c:	nop
    d38e:	adc.w	r2, r2, r2
    d392:	it	cs
    d394:	subcs.w	r0, r0, r1, lsl #30
    d398:	cmp.w	r0, r1, lsl #29
    d39c:	nop
    d39e:	adc.w	r2, r2, r2
    d3a2:	it	cs
    d3a4:	subcs.w	r0, r0, r1, lsl #29
    d3a8:	cmp.w	r0, r1, lsl #28
    d3ac:	nop
    d3ae:	adc.w	r2, r2, r2
    d3b2:	it	cs
    d3b4:	subcs.w	r0, r0, r1, lsl #28
    d3b8:	cmp.w	r0, r1, lsl #27
    d3bc:	nop
    d3be:	adc.w	r2, r2, r2
    d3c2:	it	cs
    d3c4:	subcs.w	r0, r0, r1, lsl #27
    d3c8:	cmp.w	r0, r1, lsl #26
    d3cc:	nop
    d3ce:	adc.w	r2, r2, r2
    d3d2:	it	cs
    d3d4:	subcs.w	r0, r0, r1, lsl #26
    d3d8:	cmp.w	r0, r1, lsl #25
    d3dc:	nop
    d3de:	adc.w	r2, r2, r2
    d3e2:	it	cs
    d3e4:	subcs.w	r0, r0, r1, lsl #25
    d3e8:	cmp.w	r0, r1, lsl #24
    d3ec:	nop
    d3ee:	adc.w	r2, r2, r2
    d3f2:	it	cs
    d3f4:	subcs.w	r0, r0, r1, lsl #24
    d3f8:	cmp.w	r0, r1, lsl #23
    d3fc:	nop
    d3fe:	adc.w	r2, r2, r2
    d402:	it	cs
    d404:	subcs.w	r0, r0, r1, lsl #23
    d408:	cmp.w	r0, r1, lsl #22
    d40c:	nop
    d40e:	adc.w	r2, r2, r2
    d412:	it	cs
    d414:	subcs.w	r0, r0, r1, lsl #22
    d418:	cmp.w	r0, r1, lsl #21
    d41c:	nop
    d41e:	adc.w	r2, r2, r2
    d422:	it	cs
    d424:	subcs.w	r0, r0, r1, lsl #21
    d428:	cmp.w	r0, r1, lsl #20
    d42c:	nop
    d42e:	adc.w	r2, r2, r2
    d432:	it	cs
    d434:	subcs.w	r0, r0, r1, lsl #20
    d438:	cmp.w	r0, r1, lsl #19
    d43c:	nop
    d43e:	adc.w	r2, r2, r2
    d442:	it	cs
    d444:	subcs.w	r0, r0, r1, lsl #19
    d448:	cmp.w	r0, r1, lsl #18
    d44c:	nop
    d44e:	adc.w	r2, r2, r2
    d452:	it	cs
    d454:	subcs.w	r0, r0, r1, lsl #18
    d458:	cmp.w	r0, r1, lsl #17
    d45c:	nop
    d45e:	adc.w	r2, r2, r2
    d462:	it	cs
    d464:	subcs.w	r0, r0, r1, lsl #17
    d468:	cmp.w	r0, r1, lsl #16
    d46c:	nop
    d46e:	adc.w	r2, r2, r2
    d472:	it	cs
    d474:	subcs.w	r0, r0, r1, lsl #16
    d478:	cmp.w	r0, r1, lsl #15
    d47c:	nop
    d47e:	adc.w	r2, r2, r2
    d482:	it	cs
    d484:	subcs.w	r0, r0, r1, lsl #15
    d488:	cmp.w	r0, r1, lsl #14
    d48c:	nop
    d48e:	adc.w	r2, r2, r2
    d492:	it	cs
    d494:	subcs.w	r0, r0, r1, lsl #14
    d498:	cmp.w	r0, r1, lsl #13
    d49c:	nop
    d49e:	adc.w	r2, r2, r2
    d4a2:	it	cs
    d4a4:	subcs.w	r0, r0, r1, lsl #13
    d4a8:	cmp.w	r0, r1, lsl #12
    d4ac:	nop
    d4ae:	adc.w	r2, r2, r2
    d4b2:	it	cs
    d4b4:	subcs.w	r0, r0, r1, lsl #12
    d4b8:	cmp.w	r0, r1, lsl #11
    d4bc:	nop
    d4be:	adc.w	r2, r2, r2
    d4c2:	it	cs
    d4c4:	subcs.w	r0, r0, r1, lsl #11
    d4c8:	cmp.w	r0, r1, lsl #10
    d4cc:	nop
    d4ce:	adc.w	r2, r2, r2
    d4d2:	it	cs
    d4d4:	subcs.w	r0, r0, r1, lsl #10
    d4d8:	cmp.w	r0, r1, lsl #9
    d4dc:	nop
    d4de:	adc.w	r2, r2, r2
    d4e2:	it	cs
    d4e4:	subcs.w	r0, r0, r1, lsl #9
    d4e8:	cmp.w	r0, r1, lsl #8
    d4ec:	nop
    d4ee:	adc.w	r2, r2, r2
    d4f2:	it	cs
    d4f4:	subcs.w	r0, r0, r1, lsl #8
    d4f8:	cmp.w	r0, r1, lsl #7
    d4fc:	nop
    d4fe:	adc.w	r2, r2, r2
    d502:	it	cs
    d504:	subcs.w	r0, r0, r1, lsl #7
    d508:	cmp.w	r0, r1, lsl #6
    d50c:	nop
    d50e:	adc.w	r2, r2, r2
    d512:	it	cs
    d514:	subcs.w	r0, r0, r1, lsl #6
    d518:	cmp.w	r0, r1, lsl #5
    d51c:	nop
    d51e:	adc.w	r2, r2, r2
    d522:	it	cs
    d524:	subcs.w	r0, r0, r1, lsl #5
    d528:	cmp.w	r0, r1, lsl #4
    d52c:	nop
    d52e:	adc.w	r2, r2, r2
    d532:	it	cs
    d534:	subcs.w	r0, r0, r1, lsl #4
    d538:	cmp.w	r0, r1, lsl #3
    d53c:	nop
    d53e:	adc.w	r2, r2, r2
    d542:	it	cs
    d544:	subcs.w	r0, r0, r1, lsl #3
    d548:	cmp.w	r0, r1, lsl #2
    d54c:	nop
    d54e:	adc.w	r2, r2, r2
    d552:	it	cs
    d554:	subcs.w	r0, r0, r1, lsl #2
    d558:	cmp.w	r0, r1, lsl #1
    d55c:	nop
    d55e:	adc.w	r2, r2, r2
    d562:	it	cs
    d564:	subcs.w	r0, r0, r1, lsl #1
    d568:	cmp.w	r0, r1
    d56c:	nop
    d56e:	adc.w	r2, r2, r2
    d572:	it	cs
    d574:	subcs.w	r0, r0, r1
    d578:	mov	r0, r2
    d57a:	bx	lr
    d57c:	ite	eq
    d57e:	moveq	r0, #1
    d580:	movne	r0, #0
    d582:	bx	lr
    d584:	clz	r2, r1
    d588:	rsb	r2, r2, #31
    d58c:	lsr.w	r0, r0, r2
    d590:	bx	lr
    d592:	cbz	r0, d598 <setlogin@@Base+0x1790>
    d594:	mov.w	r0, #4294967295	; 0xffffffff
    d598:	b.w	decc <setlogin@@Base+0x20c4>
    d59c:	cmp	r1, #0
    d59e:	beq.n	d592 <setlogin@@Base+0x178a>
    d5a0:	stmdb	sp!, {r0, r1, lr}
    d5a4:	bl	d340 <setlogin@@Base+0x1538>
    d5a8:	ldmia.w	sp!, {r1, r2, lr}
    d5ac:	mul.w	r3, r2, r0
    d5b0:	sub.w	r1, r1, r3
    d5b4:	bx	lr
    d5b6:	nop
    d5b8:	cmp	r1, #0
    d5ba:	beq.w	d83a <setlogin@@Base+0x1a32>
    d5be:	eor.w	ip, r0, r1
    d5c2:	it	mi
    d5c4:	negmi	r1, r1
    d5c6:	subs	r2, r1, #1
    d5c8:	beq.w	d80a <setlogin@@Base+0x1a02>
    d5cc:	movs	r3, r0
    d5ce:	it	mi
    d5d0:	negmi	r3, r0
    d5d2:	cmp	r3, r1
    d5d4:	bls.w	d814 <setlogin@@Base+0x1a0c>
    d5d8:	tst	r1, r2
    d5da:	beq.w	d824 <setlogin@@Base+0x1a1c>
    d5de:	clz	r2, r3
    d5e2:	clz	r0, r1
    d5e6:	sub.w	r2, r0, r2
    d5ea:	rsb	r2, r2, #31
    d5ee:	add	r0, pc, #16	; (adr r0, d600 <setlogin@@Base+0x17f8>)
    d5f0:	add.w	r2, r0, r2, lsl #4
    d5f4:	mov.w	r0, #0
    d5f8:	mov	pc, r2
    d5fa:	nop
    d5fc:	nop.w
    d600:	cmp.w	r3, r1, lsl #31
    d604:	nop
    d606:	adc.w	r0, r0, r0
    d60a:	it	cs
    d60c:	subcs.w	r3, r3, r1, lsl #31
    d610:	cmp.w	r3, r1, lsl #30
    d614:	nop
    d616:	adc.w	r0, r0, r0
    d61a:	it	cs
    d61c:	subcs.w	r3, r3, r1, lsl #30
    d620:	cmp.w	r3, r1, lsl #29
    d624:	nop
    d626:	adc.w	r0, r0, r0
    d62a:	it	cs
    d62c:	subcs.w	r3, r3, r1, lsl #29
    d630:	cmp.w	r3, r1, lsl #28
    d634:	nop
    d636:	adc.w	r0, r0, r0
    d63a:	it	cs
    d63c:	subcs.w	r3, r3, r1, lsl #28
    d640:	cmp.w	r3, r1, lsl #27
    d644:	nop
    d646:	adc.w	r0, r0, r0
    d64a:	it	cs
    d64c:	subcs.w	r3, r3, r1, lsl #27
    d650:	cmp.w	r3, r1, lsl #26
    d654:	nop
    d656:	adc.w	r0, r0, r0
    d65a:	it	cs
    d65c:	subcs.w	r3, r3, r1, lsl #26
    d660:	cmp.w	r3, r1, lsl #25
    d664:	nop
    d666:	adc.w	r0, r0, r0
    d66a:	it	cs
    d66c:	subcs.w	r3, r3, r1, lsl #25
    d670:	cmp.w	r3, r1, lsl #24
    d674:	nop
    d676:	adc.w	r0, r0, r0
    d67a:	it	cs
    d67c:	subcs.w	r3, r3, r1, lsl #24
    d680:	cmp.w	r3, r1, lsl #23
    d684:	nop
    d686:	adc.w	r0, r0, r0
    d68a:	it	cs
    d68c:	subcs.w	r3, r3, r1, lsl #23
    d690:	cmp.w	r3, r1, lsl #22
    d694:	nop
    d696:	adc.w	r0, r0, r0
    d69a:	it	cs
    d69c:	subcs.w	r3, r3, r1, lsl #22
    d6a0:	cmp.w	r3, r1, lsl #21
    d6a4:	nop
    d6a6:	adc.w	r0, r0, r0
    d6aa:	it	cs
    d6ac:	subcs.w	r3, r3, r1, lsl #21
    d6b0:	cmp.w	r3, r1, lsl #20
    d6b4:	nop
    d6b6:	adc.w	r0, r0, r0
    d6ba:	it	cs
    d6bc:	subcs.w	r3, r3, r1, lsl #20
    d6c0:	cmp.w	r3, r1, lsl #19
    d6c4:	nop
    d6c6:	adc.w	r0, r0, r0
    d6ca:	it	cs
    d6cc:	subcs.w	r3, r3, r1, lsl #19
    d6d0:	cmp.w	r3, r1, lsl #18
    d6d4:	nop
    d6d6:	adc.w	r0, r0, r0
    d6da:	it	cs
    d6dc:	subcs.w	r3, r3, r1, lsl #18
    d6e0:	cmp.w	r3, r1, lsl #17
    d6e4:	nop
    d6e6:	adc.w	r0, r0, r0
    d6ea:	it	cs
    d6ec:	subcs.w	r3, r3, r1, lsl #17
    d6f0:	cmp.w	r3, r1, lsl #16
    d6f4:	nop
    d6f6:	adc.w	r0, r0, r0
    d6fa:	it	cs
    d6fc:	subcs.w	r3, r3, r1, lsl #16
    d700:	cmp.w	r3, r1, lsl #15
    d704:	nop
    d706:	adc.w	r0, r0, r0
    d70a:	it	cs
    d70c:	subcs.w	r3, r3, r1, lsl #15
    d710:	cmp.w	r3, r1, lsl #14
    d714:	nop
    d716:	adc.w	r0, r0, r0
    d71a:	it	cs
    d71c:	subcs.w	r3, r3, r1, lsl #14
    d720:	cmp.w	r3, r1, lsl #13
    d724:	nop
    d726:	adc.w	r0, r0, r0
    d72a:	it	cs
    d72c:	subcs.w	r3, r3, r1, lsl #13
    d730:	cmp.w	r3, r1, lsl #12
    d734:	nop
    d736:	adc.w	r0, r0, r0
    d73a:	it	cs
    d73c:	subcs.w	r3, r3, r1, lsl #12
    d740:	cmp.w	r3, r1, lsl #11
    d744:	nop
    d746:	adc.w	r0, r0, r0
    d74a:	it	cs
    d74c:	subcs.w	r3, r3, r1, lsl #11
    d750:	cmp.w	r3, r1, lsl #10
    d754:	nop
    d756:	adc.w	r0, r0, r0
    d75a:	it	cs
    d75c:	subcs.w	r3, r3, r1, lsl #10
    d760:	cmp.w	r3, r1, lsl #9
    d764:	nop
    d766:	adc.w	r0, r0, r0
    d76a:	it	cs
    d76c:	subcs.w	r3, r3, r1, lsl #9
    d770:	cmp.w	r3, r1, lsl #8
    d774:	nop
    d776:	adc.w	r0, r0, r0
    d77a:	it	cs
    d77c:	subcs.w	r3, r3, r1, lsl #8
    d780:	cmp.w	r3, r1, lsl #7
    d784:	nop
    d786:	adc.w	r0, r0, r0
    d78a:	it	cs
    d78c:	subcs.w	r3, r3, r1, lsl #7
    d790:	cmp.w	r3, r1, lsl #6
    d794:	nop
    d796:	adc.w	r0, r0, r0
    d79a:	it	cs
    d79c:	subcs.w	r3, r3, r1, lsl #6
    d7a0:	cmp.w	r3, r1, lsl #5
    d7a4:	nop
    d7a6:	adc.w	r0, r0, r0
    d7aa:	it	cs
    d7ac:	subcs.w	r3, r3, r1, lsl #5
    d7b0:	cmp.w	r3, r1, lsl #4
    d7b4:	nop
    d7b6:	adc.w	r0, r0, r0
    d7ba:	it	cs
    d7bc:	subcs.w	r3, r3, r1, lsl #4
    d7c0:	cmp.w	r3, r1, lsl #3
    d7c4:	nop
    d7c6:	adc.w	r0, r0, r0
    d7ca:	it	cs
    d7cc:	subcs.w	r3, r3, r1, lsl #3
    d7d0:	cmp.w	r3, r1, lsl #2
    d7d4:	nop
    d7d6:	adc.w	r0, r0, r0
    d7da:	it	cs
    d7dc:	subcs.w	r3, r3, r1, lsl #2
    d7e0:	cmp.w	r3, r1, lsl #1
    d7e4:	nop
    d7e6:	adc.w	r0, r0, r0
    d7ea:	it	cs
    d7ec:	subcs.w	r3, r3, r1, lsl #1
    d7f0:	cmp.w	r3, r1
    d7f4:	nop
    d7f6:	adc.w	r0, r0, r0
    d7fa:	it	cs
    d7fc:	subcs.w	r3, r3, r1
    d800:	cmp.w	ip, #0
    d804:	it	mi
    d806:	negmi	r0, r0
    d808:	bx	lr
    d80a:	teq	ip, r0
    d80e:	it	mi
    d810:	negmi	r0, r0
    d812:	bx	lr
    d814:	it	cc
    d816:	movcc	r0, #0
    d818:	itt	eq
    d81a:	moveq.w	r0, ip, asr #31
    d81e:	orreq.w	r0, r0, #1
    d822:	bx	lr
    d824:	clz	r2, r1
    d828:	rsb	r2, r2, #31
    d82c:	cmp.w	ip, #0
    d830:	lsr.w	r0, r3, r2
    d834:	it	mi
    d836:	negmi	r0, r0
    d838:	bx	lr
    d83a:	cmp	r0, #0
    d83c:	it	gt
    d83e:	mvngt.w	r0, #2147483648	; 0x80000000
    d842:	it	lt
    d844:	movlt.w	r0, #2147483648	; 0x80000000
    d848:	b.w	decc <setlogin@@Base+0x20c4>
    d84c:	cmp	r1, #0
    d84e:	beq.n	d83a <setlogin@@Base+0x1a32>
    d850:	stmdb	sp!, {r0, r1, lr}
    d854:	bl	d5be <setlogin@@Base+0x17b6>
    d858:	ldmia.w	sp!, {r1, r2, lr}
    d85c:	mul.w	r3, r2, r0
    d860:	sub.w	r1, r1, r3
    d864:	bx	lr
    d866:	nop
    d868:	eor.w	r1, r1, #2147483648	; 0x80000000
    d86c:	b.n	d874 <setlogin@@Base+0x1a6c>
    d86e:	nop
    d870:	eor.w	r3, r3, #2147483648	; 0x80000000
    d874:	push	{r4, r5, lr}
    d876:	mov.w	r4, r1, lsl #1
    d87a:	mov.w	r5, r3, lsl #1
    d87e:	teq	r4, r5
    d882:	it	eq
    d884:	teqeq	r0, r2
    d888:	itttt	ne
    d88a:	orrsne.w	ip, r4, r0
    d88e:	orrsne.w	ip, r5, r2
    d892:	mvnsne.w	ip, r4, asr #21
    d896:	mvnsne.w	ip, r5, asr #21
    d89a:	beq.w	da62 <setlogin@@Base+0x1c5a>
    d89e:	mov.w	r4, r4, lsr #21
    d8a2:	rsbs	r5, r4, r5, lsr #21
    d8a6:	it	lt
    d8a8:	neglt	r5, r5
    d8aa:	ble.n	d8c6 <setlogin@@Base+0x1abe>
    d8ac:	add	r4, r5
    d8ae:	eor.w	r2, r0, r2
    d8b2:	eor.w	r3, r1, r3
    d8b6:	eor.w	r0, r2, r0
    d8ba:	eor.w	r1, r3, r1
    d8be:	eor.w	r2, r0, r2
    d8c2:	eor.w	r3, r1, r3
    d8c6:	cmp	r5, #54	; 0x36
    d8c8:	it	hi
    d8ca:	pophi	{r4, r5, pc}
    d8cc:	tst.w	r1, #2147483648	; 0x80000000
    d8d0:	mov.w	r1, r1, lsl #12
    d8d4:	mov.w	ip, #1048576	; 0x100000
    d8d8:	orr.w	r1, ip, r1, lsr #12
    d8dc:	beq.n	d8e4 <setlogin@@Base+0x1adc>
    d8de:	negs	r0, r0
    d8e0:	sbc.w	r1, r1, r1, lsl #1
    d8e4:	tst.w	r3, #2147483648	; 0x80000000
    d8e8:	mov.w	r3, r3, lsl #12
    d8ec:	orr.w	r3, ip, r3, lsr #12
    d8f0:	beq.n	d8f8 <setlogin@@Base+0x1af0>
    d8f2:	negs	r2, r2
    d8f4:	sbc.w	r3, r3, r3, lsl #1
    d8f8:	teq	r4, r5
    d8fc:	beq.w	da4e <setlogin@@Base+0x1c46>
    d900:	sub.w	r4, r4, #1
    d904:	rsbs	lr, r5, #32
    d908:	blt.n	d926 <setlogin@@Base+0x1b1e>
    d90a:	lsl.w	ip, r2, lr
    d90e:	lsr.w	r2, r2, r5
    d912:	adds	r0, r0, r2
    d914:	adc.w	r1, r1, #0
    d918:	lsl.w	r2, r3, lr
    d91c:	adds	r0, r0, r2
    d91e:	asr.w	r3, r3, r5
    d922:	adcs	r1, r3
    d924:	b.n	d944 <setlogin@@Base+0x1b3c>
    d926:	sub.w	r5, r5, #32
    d92a:	add.w	lr, lr, #32
    d92e:	cmp	r2, #1
    d930:	lsl.w	ip, r3, lr
    d934:	it	cs
    d936:	orrcs.w	ip, ip, #2
    d93a:	asr.w	r3, r3, r5
    d93e:	adds	r0, r0, r3
    d940:	adcs.w	r1, r1, r3, asr #31
    d944:	and.w	r5, r1, #2147483648	; 0x80000000
    d948:	bpl.n	d95a <setlogin@@Base+0x1b52>
    d94a:	mov.w	lr, #0
    d94e:	rsbs	ip, ip, #0
    d952:	sbcs.w	r0, lr, r0
    d956:	sbc.w	r1, lr, r1
    d95a:	cmp.w	r1, #1048576	; 0x100000
    d95e:	bcc.n	d998 <setlogin@@Base+0x1b90>
    d960:	cmp.w	r1, #2097152	; 0x200000
    d964:	bcc.n	d980 <setlogin@@Base+0x1b78>
    d966:	lsrs	r1, r1, #1
    d968:	movs.w	r0, r0, rrx
    d96c:	mov.w	ip, ip, rrx
    d970:	add.w	r4, r4, #1
    d974:	mov.w	r2, r4, lsl #21
    d978:	cmn.w	r2, #4194304	; 0x400000
    d97c:	bcs.w	dab4 <setlogin@@Base+0x1cac>
    d980:	cmp.w	ip, #2147483648	; 0x80000000
    d984:	it	eq
    d986:	movseq.w	ip, r0, lsr #1
    d98a:	adcs.w	r0, r0, #0
    d98e:	adc.w	r1, r1, r4, lsl #20
    d992:	orr.w	r1, r1, r5
    d996:	pop	{r4, r5, pc}
    d998:	movs.w	ip, ip, lsl #1
    d99c:	adcs	r0, r0
    d99e:	adc.w	r1, r1, r1
    d9a2:	subs	r4, #1
    d9a4:	it	cs
    d9a6:	cmpcs.w	r1, #1048576	; 0x100000
    d9aa:	bcs.n	d980 <setlogin@@Base+0x1b78>
    d9ac:	teq	r1, #0
    d9b0:	itt	eq
    d9b2:	moveq	r1, r0
    d9b4:	moveq	r0, #0
    d9b6:	clz	r3, r1
    d9ba:	it	eq
    d9bc:	addeq	r3, #32
    d9be:	sub.w	r3, r3, #11
    d9c2:	subs.w	r2, r3, #32
    d9c6:	bge.n	d9e2 <setlogin@@Base+0x1bda>
    d9c8:	adds	r2, #12
    d9ca:	ble.n	d9de <setlogin@@Base+0x1bd6>
    d9cc:	add.w	ip, r2, #20
    d9d0:	rsb	r2, r2, #12
    d9d4:	lsl.w	r0, r1, ip
    d9d8:	lsr.w	r1, r1, r2
    d9dc:	b.n	d9f8 <setlogin@@Base+0x1bf0>
    d9de:	add.w	r2, r2, #20
    d9e2:	it	le
    d9e4:	rsble	ip, r2, #32
    d9e8:	lsl.w	r1, r1, r2
    d9ec:	lsr.w	ip, r0, ip
    d9f0:	itt	le
    d9f2:	orrle.w	r1, r1, ip
    d9f6:	lslle	r0, r2
    d9f8:	subs	r4, r4, r3
    d9fa:	ittt	ge
    d9fc:	addge.w	r1, r1, r4, lsl #20
    da00:	orrge	r1, r5
    da02:	popge	{r4, r5, pc}
    da04:	mvn.w	r4, r4
    da08:	subs	r4, #31
    da0a:	bge.n	da46 <setlogin@@Base+0x1c3e>
    da0c:	adds	r4, #12
    da0e:	bgt.n	da2e <setlogin@@Base+0x1c26>
    da10:	add.w	r4, r4, #20
    da14:	rsb	r2, r4, #32
    da18:	lsr.w	r0, r0, r4
    da1c:	lsl.w	r3, r1, r2
    da20:	orr.w	r0, r0, r3
    da24:	lsr.w	r3, r1, r4
    da28:	orr.w	r1, r5, r3
    da2c:	pop	{r4, r5, pc}
    da2e:	rsb	r4, r4, #12
    da32:	rsb	r2, r4, #32
    da36:	lsr.w	r0, r0, r2
    da3a:	lsl.w	r3, r1, r4
    da3e:	orr.w	r0, r0, r3
    da42:	mov	r1, r5
    da44:	pop	{r4, r5, pc}
    da46:	lsr.w	r0, r1, r4
    da4a:	mov	r1, r5
    da4c:	pop	{r4, r5, pc}
    da4e:	teq	r4, #0
    da52:	eor.w	r3, r3, #1048576	; 0x100000
    da56:	itte	eq
    da58:	eoreq.w	r1, r1, #1048576	; 0x100000
    da5c:	addeq	r4, #1
    da5e:	subne	r5, #1
    da60:	b.n	d900 <setlogin@@Base+0x1af8>
    da62:	mvns.w	ip, r4, asr #21
    da66:	it	ne
    da68:	mvnsne.w	ip, r5, asr #21
    da6c:	beq.n	dac2 <setlogin@@Base+0x1cba>
    da6e:	teq	r4, r5
    da72:	it	eq
    da74:	teqeq	r0, r2
    da78:	beq.n	da86 <setlogin@@Base+0x1c7e>
    da7a:	orrs.w	ip, r4, r0
    da7e:	itt	eq
    da80:	moveq	r1, r3
    da82:	moveq	r0, r2
    da84:	pop	{r4, r5, pc}
    da86:	teq	r1, r3
    da8a:	ittt	ne
    da8c:	movne	r1, #0
    da8e:	movne	r0, #0
    da90:	popne	{r4, r5, pc}
    da92:	movs.w	ip, r4, lsr #21
    da96:	bne.n	daa4 <setlogin@@Base+0x1c9c>
    da98:	lsls	r0, r0, #1
    da9a:	adcs	r1, r1
    da9c:	it	cs
    da9e:	orrcs.w	r1, r1, #2147483648	; 0x80000000
    daa2:	pop	{r4, r5, pc}
    daa4:	adds.w	r4, r4, #4194304	; 0x400000
    daa8:	itt	cc
    daaa:	addcc.w	r1, r1, #1048576	; 0x100000
    daae:	popcc	{r4, r5, pc}
    dab0:	and.w	r5, r1, #2147483648	; 0x80000000
    dab4:	orr.w	r1, r5, #2130706432	; 0x7f000000
    dab8:	orr.w	r1, r1, #15728640	; 0xf00000
    dabc:	mov.w	r0, #0
    dac0:	pop	{r4, r5, pc}
    dac2:	mvns.w	ip, r4, asr #21
    dac6:	itte	ne
    dac8:	movne	r1, r3
    daca:	movne	r0, r2
    dacc:	mvnseq.w	ip, r5, asr #21
    dad0:	itt	ne
    dad2:	movne	r3, r1
    dad4:	movne	r2, r0
    dad6:	orrs.w	r4, r0, r1, lsl #12
    dada:	itte	eq
    dadc:	orrseq.w	r5, r2, r3, lsl #12
    dae0:	teqeq	r1, r3
    dae4:	orrne.w	r1, r1, #524288	; 0x80000
    dae8:	pop	{r4, r5, pc}
    daea:	nop
    daec:	teq	r0, #0
    daf0:	itt	eq
    daf2:	moveq	r1, #0
    daf4:	bxeq	lr
    daf6:	push	{r4, r5, lr}
    daf8:	mov.w	r4, #1024	; 0x400
    dafc:	add.w	r4, r4, #50	; 0x32
    db00:	mov.w	r5, #0
    db04:	mov.w	r1, #0
    db08:	b.n	d9ac <setlogin@@Base+0x1ba4>
    db0a:	nop
    db0c:	teq	r0, #0
    db10:	itt	eq
    db12:	moveq	r1, #0
    db14:	bxeq	lr
    db16:	push	{r4, r5, lr}
    db18:	mov.w	r4, #1024	; 0x400
    db1c:	add.w	r4, r4, #50	; 0x32
    db20:	ands.w	r5, r0, #2147483648	; 0x80000000
    db24:	it	mi
    db26:	negmi	r0, r0
    db28:	mov.w	r1, #0
    db2c:	b.n	d9ac <setlogin@@Base+0x1ba4>
    db2e:	nop
    db30:	lsls	r2, r0, #1
    db32:	mov.w	r1, r2, asr #3
    db36:	mov.w	r1, r1, rrx
    db3a:	mov.w	r0, r2, lsl #28
    db3e:	itttt	ne
    db40:	andsne.w	r3, r2, #4278190080	; 0xff000000
    db44:	teqne	r3, #4278190080	; 0xff000000
    db48:	eorne.w	r1, r1, #939524096	; 0x38000000
    db4c:	bxne	lr
    db4e:	bics.w	r2, r2, #4278190080	; 0xff000000
    db52:	it	eq
    db54:	bxeq	lr
    db56:	teq	r3, #4278190080	; 0xff000000
    db5a:	itt	eq
    db5c:	orreq.w	r1, r1, #524288	; 0x80000
    db60:	bxeq	lr
    db62:	push	{r4, r5, lr}
    db64:	mov.w	r4, #896	; 0x380
    db68:	and.w	r5, r1, #2147483648	; 0x80000000
    db6c:	bic.w	r1, r1, #2147483648	; 0x80000000
    db70:	b.n	d9ac <setlogin@@Base+0x1ba4>
    db72:	nop
    db74:	orrs.w	r2, r0, r1
    db78:	it	eq
    db7a:	bxeq	lr
    db7c:	push	{r4, r5, lr}
    db7e:	mov.w	r5, #0
    db82:	b.n	db9a <setlogin@@Base+0x1d92>
    db84:	orrs.w	r2, r0, r1
    db88:	it	eq
    db8a:	bxeq	lr
    db8c:	push	{r4, r5, lr}
    db8e:	ands.w	r5, r1, #2147483648	; 0x80000000
    db92:	bpl.n	db9a <setlogin@@Base+0x1d92>
    db94:	negs	r0, r0
    db96:	sbc.w	r1, r1, r1, lsl #1
    db9a:	mov.w	r4, #1024	; 0x400
    db9e:	add.w	r4, r4, #50	; 0x32
    dba2:	movs.w	ip, r1, lsr #22
    dba6:	beq.w	d95a <setlogin@@Base+0x1b52>
    dbaa:	mov.w	r2, #3
    dbae:	movs.w	ip, ip, lsr #3
    dbb2:	it	ne
    dbb4:	addne	r2, #3
    dbb6:	movs.w	ip, ip, lsr #3
    dbba:	it	ne
    dbbc:	addne	r2, #3
    dbbe:	add.w	r2, r2, ip, lsr #3
    dbc2:	rsb	r3, r2, #32
    dbc6:	lsl.w	ip, r0, r3
    dbca:	lsr.w	r0, r0, r2
    dbce:	lsl.w	lr, r1, r3
    dbd2:	orr.w	r0, r0, lr
    dbd6:	lsr.w	r1, r1, r2
    dbda:	add	r4, r2
    dbdc:	b.n	d95a <setlogin@@Base+0x1b52>
    dbde:	nop
    dbe0:	eor.w	r0, r0, #2147483648	; 0x80000000
    dbe4:	b.n	dbec <setlogin@@Base+0x1de4>
    dbe6:	nop
    dbe8:	eor.w	r1, r1, #2147483648	; 0x80000000
    dbec:	lsls	r2, r0, #1
    dbee:	itttt	ne
    dbf0:	movsne.w	r3, r1, lsl #1
    dbf4:	teqne	r2, r3
    dbf8:	mvnsne.w	ip, r2, asr #24
    dbfc:	mvnsne.w	ip, r3, asr #24
    dc00:	beq.n	dcd8 <setlogin@@Base+0x1ed0>
    dc02:	mov.w	r2, r2, lsr #24
    dc06:	rsbs	r3, r2, r3, lsr #24
    dc0a:	itttt	gt
    dc0c:	addgt	r2, r2, r3
    dc0e:	eorgt	r1, r0
    dc10:	eorgt	r0, r1
    dc12:	eorgt	r1, r0
    dc14:	it	lt
    dc16:	neglt	r3, r3
    dc18:	cmp	r3, #25
    dc1a:	it	hi
    dc1c:	bxhi	lr
    dc1e:	tst.w	r0, #2147483648	; 0x80000000
    dc22:	orr.w	r0, r0, #8388608	; 0x800000
    dc26:	bic.w	r0, r0, #4278190080	; 0xff000000
    dc2a:	it	ne
    dc2c:	negne	r0, r0
    dc2e:	tst.w	r1, #2147483648	; 0x80000000
    dc32:	orr.w	r1, r1, #8388608	; 0x800000
    dc36:	bic.w	r1, r1, #4278190080	; 0xff000000
    dc3a:	it	ne
    dc3c:	negne	r1, r1
    dc3e:	teq	r2, r3
    dc42:	beq.n	dcc4 <setlogin@@Base+0x1ebc>
    dc44:	sub.w	r2, r2, #1
    dc48:	asr.w	ip, r1, r3
    dc4c:	adds.w	r0, r0, ip
    dc50:	rsb	r3, r3, #32
    dc54:	lsl.w	r1, r1, r3
    dc58:	and.w	r3, r0, #2147483648	; 0x80000000
    dc5c:	bpl.n	dc64 <setlogin@@Base+0x1e5c>
    dc5e:	negs	r1, r1
    dc60:	sbc.w	r0, r0, r0, lsl #1
    dc64:	cmp.w	r0, #8388608	; 0x800000
    dc68:	bcc.n	dc92 <setlogin@@Base+0x1e8a>
    dc6a:	cmp.w	r0, #16777216	; 0x1000000
    dc6e:	bcc.n	dc7e <setlogin@@Base+0x1e76>
    dc70:	lsrs	r0, r0, #1
    dc72:	mov.w	r1, r1, rrx
    dc76:	add.w	r2, r2, #1
    dc7a:	cmp	r2, #254	; 0xfe
    dc7c:	bcs.n	dd22 <setlogin@@Base+0x1f1a>
    dc7e:	cmp.w	r1, #2147483648	; 0x80000000
    dc82:	adc.w	r0, r0, r2, lsl #23
    dc86:	it	eq
    dc88:	biceq.w	r0, r0, #1
    dc8c:	orr.w	r0, r0, r3
    dc90:	bx	lr
    dc92:	lsls	r1, r1, #1
    dc94:	adc.w	r0, r0, r0
    dc98:	subs	r2, #1
    dc9a:	it	cs
    dc9c:	cmpcs.w	r0, #8388608	; 0x800000
    dca0:	bcs.n	dc7e <setlogin@@Base+0x1e76>
    dca2:	clz	ip, r0
    dca6:	sub.w	ip, ip, #8
    dcaa:	subs.w	r2, r2, ip
    dcae:	lsl.w	r0, r0, ip
    dcb2:	itet	ge
    dcb4:	addge.w	r0, r0, r2, lsl #23
    dcb8:	neglt	r2, r2
    dcba:	orrge	r0, r3
    dcbc:	itt	lt
    dcbe:	lsrlt	r0, r2
    dcc0:	orrlt	r0, r3
    dcc2:	bx	lr
    dcc4:	teq	r2, #0
    dcc8:	eor.w	r1, r1, #8388608	; 0x800000
    dccc:	itte	eq
    dcce:	eoreq.w	r0, r0, #8388608	; 0x800000
    dcd2:	addeq	r2, #1
    dcd4:	subne	r3, #1
    dcd6:	b.n	dc44 <setlogin@@Base+0x1e3c>
    dcd8:	mov.w	r3, r1, lsl #1
    dcdc:	mvns.w	ip, r2, asr #24
    dce0:	it	ne
    dce2:	mvnsne.w	ip, r3, asr #24
    dce6:	beq.n	dd2c <setlogin@@Base+0x1f24>
    dce8:	teq	r2, r3
    dcec:	beq.n	dcf8 <setlogin@@Base+0x1ef0>
    dcee:	teq	r2, #0
    dcf2:	it	eq
    dcf4:	moveq	r0, r1
    dcf6:	bx	lr
    dcf8:	teq	r0, r1
    dcfc:	itt	ne
    dcfe:	movne	r0, #0
    dd00:	bxne	lr
    dd02:	tst.w	r2, #4278190080	; 0xff000000
    dd06:	bne.n	dd12 <setlogin@@Base+0x1f0a>
    dd08:	lsls	r0, r0, #1
    dd0a:	it	cs
    dd0c:	orrcs.w	r0, r0, #2147483648	; 0x80000000
    dd10:	bx	lr
    dd12:	adds.w	r2, r2, #33554432	; 0x2000000
    dd16:	itt	cc
    dd18:	addcc.w	r0, r0, #8388608	; 0x800000
    dd1c:	bxcc	lr
    dd1e:	and.w	r3, r0, #2147483648	; 0x80000000
    dd22:	orr.w	r0, r3, #2130706432	; 0x7f000000
    dd26:	orr.w	r0, r0, #8388608	; 0x800000
    dd2a:	bx	lr
    dd2c:	mvns.w	r2, r2, asr #24
    dd30:	itet	ne
    dd32:	movne	r0, r1
    dd34:	mvnseq.w	r3, r3, asr #24
    dd38:	movne	r1, r0
    dd3a:	lsls	r2, r0, #9
    dd3c:	itte	eq
    dd3e:	movseq.w	r3, r1, lsl #9
    dd42:	teqeq	r0, r1
    dd46:	orrne.w	r0, r0, #4194304	; 0x400000
    dd4a:	bx	lr
    dd4c:	mov.w	r3, #0
    dd50:	b.n	dd5c <setlogin@@Base+0x1f54>
    dd52:	nop
    dd54:	ands.w	r3, r0, #2147483648	; 0x80000000
    dd58:	it	mi
    dd5a:	negmi	r0, r0
    dd5c:	movs.w	ip, r0
    dd60:	it	eq
    dd62:	bxeq	lr
    dd64:	orr.w	r3, r3, #1258291200	; 0x4b000000
    dd68:	mov	r1, r0
    dd6a:	mov.w	r0, #0
    dd6e:	b.n	ddaa <setlogin@@Base+0x1fa2>
    dd70:	orrs.w	r2, r0, r1
    dd74:	it	eq
    dd76:	bxeq	lr
    dd78:	mov.w	r3, #0
    dd7c:	b.n	dd94 <setlogin@@Base+0x1f8c>
    dd7e:	nop
    dd80:	orrs.w	r2, r0, r1
    dd84:	it	eq
    dd86:	bxeq	lr
    dd88:	ands.w	r3, r1, #2147483648	; 0x80000000
    dd8c:	bpl.n	dd94 <setlogin@@Base+0x1f8c>
    dd8e:	negs	r0, r0
    dd90:	sbc.w	r1, r1, r1, lsl #1
    dd94:	movs.w	ip, r1
    dd98:	ittt	eq
    dd9a:	moveq	ip, r0
    dd9c:	moveq	r1, r0
    dd9e:	moveq	r0, #0
    dda0:	orr.w	r3, r3, #1526726656	; 0x5b000000
    dda4:	it	eq
    dda6:	subeq.w	r3, r3, #268435456	; 0x10000000
    ddaa:	sub.w	r3, r3, #8388608	; 0x800000
    ddae:	clz	r2, ip
    ddb2:	subs	r2, #8
    ddb4:	sub.w	r3, r3, r2, lsl #23
    ddb8:	blt.n	dddc <setlogin@@Base+0x1fd4>
    ddba:	lsl.w	ip, r1, r2
    ddbe:	add	r3, ip
    ddc0:	lsl.w	ip, r0, r2
    ddc4:	rsb	r2, r2, #32
    ddc8:	cmp.w	ip, #2147483648	; 0x80000000
    ddcc:	lsr.w	r2, r0, r2
    ddd0:	adc.w	r0, r3, r2
    ddd4:	it	eq
    ddd6:	biceq.w	r0, r0, #1
    ddda:	bx	lr
    dddc:	add.w	r2, r2, #32
    dde0:	lsl.w	ip, r1, r2
    dde4:	rsb	r2, r2, #32
    dde8:	orrs.w	r0, r0, ip, lsl #1
    ddec:	lsr.w	r2, r1, r2
    ddf0:	adc.w	r0, r3, r2
    ddf4:	it	eq
    ddf6:	biceq.w	r0, r0, ip, lsr #31
    ddfa:	bx	lr
    ddfc:	cbnz	r3, de1e <setlogin@@Base+0x2016>
    ddfe:	cbnz	r2, de1e <setlogin@@Base+0x2016>
    de00:	cmp	r1, #0
    de02:	ittt	lt
    de04:	movlt	r0, #0
    de06:	movlt.w	r1, #2147483648	; 0x80000000
    de0a:	blt.n	de1a <setlogin@@Base+0x2012>
    de0c:	it	eq
    de0e:	cmpeq	r0, #0
    de10:	itt	ne
    de12:	mvnne.w	r1, #2147483648	; 0x80000000
    de16:	movne.w	r0, #4294967295	; 0xffffffff
    de1a:	b.w	decc <setlogin@@Base+0x20c4>
    de1e:	sub.w	ip, sp, #8
    de22:	strd	ip, lr, [sp, #-16]!
    de26:	cmp	r1, #0
    de28:	blt.n	de3e <setlogin@@Base+0x2036>
    de2a:	cmp	r3, #0
    de2c:	blt.n	de64 <setlogin@@Base+0x205c>
    de2e:	bl	e108 <setlogin@@Base+0x2300>
    de32:	ldr.w	lr, [sp, #4]
    de36:	ldrd	r2, r3, [sp, #8]
    de3a:	add	sp, #16
    de3c:	bx	lr
    de3e:	negs	r0, r0
    de40:	sbc.w	r1, r1, r1, lsl #1
    de44:	cmp	r3, #0
    de46:	blt.n	de80 <setlogin@@Base+0x2078>
    de48:	bl	e108 <setlogin@@Base+0x2300>
    de4c:	ldr.w	lr, [sp, #4]
    de50:	ldrd	r2, r3, [sp, #8]
    de54:	add	sp, #16
    de56:	negs	r0, r0
    de58:	sbc.w	r1, r1, r1, lsl #1
    de5c:	negs	r2, r2
    de5e:	sbc.w	r3, r3, r3, lsl #1
    de62:	bx	lr
    de64:	negs	r2, r2
    de66:	sbc.w	r3, r3, r3, lsl #1
    de6a:	bl	e108 <setlogin@@Base+0x2300>
    de6e:	ldr.w	lr, [sp, #4]
    de72:	ldrd	r2, r3, [sp, #8]
    de76:	add	sp, #16
    de78:	negs	r0, r0
    de7a:	sbc.w	r1, r1, r1, lsl #1
    de7e:	bx	lr
    de80:	negs	r2, r2
    de82:	sbc.w	r3, r3, r3, lsl #1
    de86:	bl	e108 <setlogin@@Base+0x2300>
    de8a:	ldr.w	lr, [sp, #4]
    de8e:	ldrd	r2, r3, [sp, #8]
    de92:	add	sp, #16
    de94:	negs	r2, r2
    de96:	sbc.w	r3, r3, r3, lsl #1
    de9a:	bx	lr
    de9c:	cbnz	r3, deb4 <setlogin@@Base+0x20ac>
    de9e:	cbnz	r2, deb4 <setlogin@@Base+0x20ac>
    dea0:	cmp	r1, #0
    dea2:	it	eq
    dea4:	cmpeq	r0, #0
    dea6:	itt	ne
    dea8:	movne.w	r1, #4294967295	; 0xffffffff
    deac:	movne.w	r0, #4294967295	; 0xffffffff
    deb0:	b.w	decc <setlogin@@Base+0x20c4>
    deb4:	sub.w	ip, sp, #8
    deb8:	strd	ip, lr, [sp, #-16]!
    debc:	bl	e108 <setlogin@@Base+0x2300>
    dec0:	ldr.w	lr, [sp, #4]
    dec4:	ldrd	r2, r3, [sp, #8]
    dec8:	add	sp, #16
    deca:	bx	lr
    decc:	push	{r1, lr}
    dece:	mov.w	r0, #8
    ded2:	blx	1c3c <raise@plt+0x4>
    ded6:	pop	{r1, pc}
    ded8:	cmp	r1, #0
    deda:	add.w	r2, r0, r1
    dede:	blt.n	deee <setlogin@@Base+0x20e6>
    dee0:	cmp	r0, r2
    dee2:	ite	le
    dee4:	movle	r0, #0
    dee6:	movgt	r0, #1
    dee8:	cbnz	r0, def8 <setlogin@@Base+0x20f0>
    deea:	mov	r0, r2
    deec:	bx	lr
    deee:	cmp	r0, r2
    def0:	ite	ge
    def2:	movge	r0, #0
    def4:	movlt	r0, #1
    def6:	b.n	dee8 <setlogin@@Base+0x20e0>
    def8:	push	{r3, lr}
    defa:	blx	195c <abort@plt>
    defe:	nop
    df00:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    df04:	adds.w	r8, r0, r2
    df08:	adc.w	r9, r1, r3
    df0c:	cmp	r2, #0
    df0e:	sbcs.w	r3, r3, #0
    df12:	blt.n	df2a <setlogin@@Base+0x2122>
    df14:	cmp	r8, r0
    df16:	sbcs.w	r3, r9, r1
    df1a:	ite	lt
    df1c:	movlt	r3, #1
    df1e:	movge	r3, #0
    df20:	cbnz	r3, df38 <setlogin@@Base+0x2130>
    df22:	mov	r0, r8
    df24:	mov	r1, r9
    df26:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    df2a:	cmp	r0, r8
    df2c:	sbcs.w	r3, r1, r9
    df30:	ite	lt
    df32:	movlt	r3, #1
    df34:	movge	r3, #0
    df36:	b.n	df20 <setlogin@@Base+0x2118>
    df38:	blx	195c <abort@plt>
    df3c:	cmp	r1, #0
    df3e:	sub.w	r2, r0, r1
    df42:	blt.n	df52 <setlogin@@Base+0x214a>
    df44:	cmp	r0, r2
    df46:	ite	ge
    df48:	movge	r0, #0
    df4a:	movlt	r0, #1
    df4c:	cbnz	r0, df5c <setlogin@@Base+0x2154>
    df4e:	mov	r0, r2
    df50:	bx	lr
    df52:	cmp	r0, r2
    df54:	ite	le
    df56:	movle	r0, #0
    df58:	movgt	r0, #1
    df5a:	b.n	df4c <setlogin@@Base+0x2144>
    df5c:	push	{r3, lr}
    df5e:	blx	195c <abort@plt>
    df62:	nop
    df64:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    df68:	subs.w	r8, r0, r2
    df6c:	sbc.w	r9, r1, r3
    df70:	cmp	r2, #0
    df72:	sbcs.w	r3, r3, #0
    df76:	blt.n	df8e <setlogin@@Base+0x2186>
    df78:	cmp	r0, r8
    df7a:	sbcs.w	r3, r1, r9
    df7e:	ite	lt
    df80:	movlt	r3, #1
    df82:	movge	r3, #0
    df84:	cbnz	r3, df9c <setlogin@@Base+0x2194>
    df86:	mov	r0, r8
    df88:	mov	r1, r9
    df8a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    df8e:	cmp	r8, r0
    df90:	sbcs.w	r3, r9, r1
    df94:	ite	lt
    df96:	movlt	r3, #1
    df98:	movge	r3, #0
    df9a:	b.n	df84 <setlogin@@Base+0x217c>
    df9c:	blx	195c <abort@plt>
    dfa0:	smull	r0, r1, r0, r1
    dfa4:	cmp.w	r1, r0, asr #31
    dfa8:	bne.n	dfac <setlogin@@Base+0x21a4>
    dfaa:	bx	lr
    dfac:	push	{r3, lr}
    dfae:	blx	195c <abort@plt>
    dfb2:	nop
    dfb4:	cmp.w	r1, r0, asr #31
    dfb8:	push	{r3, r4, r5, r6, r7, lr}
    dfba:	mov.w	r4, r2, asr #31
    dfbe:	bne.n	dfca <setlogin@@Base+0x21c2>
    dfc0:	cmp	r4, r3
    dfc2:	bne.n	dffe <setlogin@@Base+0x21f6>
    dfc4:	smull	r0, r1, r0, r2
    dfc8:	pop	{r3, r4, r5, r6, r7, pc}
    dfca:	cmp	r4, r3
    dfcc:	bne.n	e02e <setlogin@@Base+0x2226>
    dfce:	umull	r4, r5, r1, r2
    dfd2:	cmp	r1, #0
    dfd4:	umull	r6, r7, r0, r2
    dfd8:	itt	lt
    dfda:	sublt.w	lr, r5, r2
    dfde:	movlt	r5, lr
    dfe0:	cmp	r2, #0
    dfe2:	mov	r3, r6
    dfe4:	bge.n	dfec <setlogin@@Base+0x21e4>
    dfe6:	subs	r4, r4, r0
    dfe8:	sbc.w	r5, r5, r1
    dfec:	adds	r4, r4, r7
    dfee:	adc.w	r5, r5, #0
    dff2:	cmp.w	r5, r4, asr #31
    dff6:	bne.n	e046 <setlogin@@Base+0x223e>
    dff8:	mov	r0, r3
    dffa:	mov	r1, r4
    dffc:	pop	{r3, r4, r5, r6, r7, pc}
    dffe:	umull	r4, r5, r3, r0
    e002:	cmp	r3, #0
    e004:	umull	r6, r7, r2, r0
    e008:	itt	lt
    e00a:	sublt.w	lr, r5, r0
    e00e:	movlt	r5, lr
    e010:	cmp	r0, #0
    e012:	mov	ip, r6
    e014:	bge.n	e01c <setlogin@@Base+0x2214>
    e016:	subs	r4, r4, r2
    e018:	sbc.w	r5, r5, r3
    e01c:	adds	r4, r4, r7
    e01e:	adc.w	r5, r5, #0
    e022:	cmp.w	r5, r4, asr #31
    e026:	bne.n	e046 <setlogin@@Base+0x223e>
    e028:	mov	r0, ip
    e02a:	mov	r1, r4
    e02c:	pop	{r3, r4, r5, r6, r7, pc}
    e02e:	cmp	r1, #0
    e030:	blt.n	e04a <setlogin@@Base+0x2242>
    e032:	cmp	r3, #0
    e034:	blt.n	e072 <setlogin@@Base+0x226a>
    e036:	orrs	r3, r1
    e038:	bne.n	e046 <setlogin@@Base+0x223e>
    e03a:	umull	r0, r1, r0, r2
    e03e:	cmp	r0, #0
    e040:	sbcs.w	r3, r1, #0
    e044:	bge.n	dfc8 <setlogin@@Base+0x21c0>
    e046:	blx	195c <abort@plt>
    e04a:	cmp	r3, #0
    e04c:	blt.n	e08a <setlogin@@Base+0x2282>
    e04e:	ite	eq
    e050:	moveq	r3, #1
    e052:	movne	r3, #0
    e054:	cmp.w	r1, #4294967295	; 0xffffffff
    e058:	ite	ne
    e05a:	movne	r1, #0
    e05c:	andeq.w	r1, r3, #1
    e060:	cmp	r1, #0
    e062:	beq.n	e046 <setlogin@@Base+0x223e>
    e064:	umull	r4, r5, r0, r2
    e068:	subs	r3, r5, r2
    e06a:	bpl.n	e046 <setlogin@@Base+0x223e>
    e06c:	mov	r0, r4
    e06e:	mov	r1, r3
    e070:	pop	{r3, r4, r5, r6, r7, pc}
    e072:	cmp.w	r3, #4294967295	; 0xffffffff
    e076:	it	eq
    e078:	cmpeq	r1, #0
    e07a:	bne.n	e046 <setlogin@@Base+0x223e>
    e07c:	umull	r2, r3, r0, r2
    e080:	subs	r4, r3, r0
    e082:	bpl.n	e046 <setlogin@@Base+0x223e>
    e084:	mov	r0, r2
    e086:	mov	r1, r4
    e088:	pop	{r3, r4, r5, r6, r7, pc}
    e08a:	ands	r1, r3
    e08c:	adds	r1, #1
    e08e:	bne.n	e046 <setlogin@@Base+0x223e>
    e090:	orrs.w	r3, r0, r2
    e094:	beq.n	e046 <setlogin@@Base+0x223e>
    e096:	umull	r4, r5, r0, r2
    e09a:	subs	r3, r5, r0
    e09c:	subs	r3, r3, r2
    e09e:	bpl.n	e06c <setlogin@@Base+0x2264>
    e0a0:	b.n	e046 <setlogin@@Base+0x223e>
    e0a2:	nop
    e0a4:	cmp	r0, #0
    e0a6:	push	{r3, lr}
    e0a8:	rsb	r3, r0, #0
    e0ac:	it	lt
    e0ae:	lsrlt	r2, r3, #31
    e0b0:	blt.n	e0ba <setlogin@@Base+0x22b2>
    e0b2:	cmp	r3, #0
    e0b4:	ite	le
    e0b6:	movle	r2, #0
    e0b8:	movgt	r2, #1
    e0ba:	cbnz	r2, e0c0 <setlogin@@Base+0x22b8>
    e0bc:	mov	r0, r3
    e0be:	pop	{r3, pc}
    e0c0:	blx	195c <abort@plt>
    e0c4:	movs	r0, r0
    e0c6:	movs	r0, r0
    e0c8:	vldr	d6, [pc, #44]	; e0f8 <setlogin@@Base+0x22f0>
    e0cc:	vmov	d7, r0, r1
    e0d0:	vmul.f64	d6, d7, d6
    e0d4:	vldr	d5, [pc, #40]	; e100 <setlogin@@Base+0x22f8>
    e0d8:	vcvt.u32.f64	s12, d6
    e0dc:	vcvt.f64.u32	d4, s12
    e0e0:	vmov	r1, s12
    e0e4:	vmls.f64	d7, d4, d5
    e0e8:	vcvt.u32.f64	s15, d7
    e0ec:	vmov	r0, s15
    e0f0:	bx	lr
    e0f2:	nop
    e0f4:	nop.w
    e0f8:	movs	r0, r0
    e0fa:	movs	r0, r0
    e0fc:	movs	r0, r0
    e0fe:	subs	r5, #240	; 0xf0
    e100:	movs	r0, r0
    e102:	movs	r0, r0
    e104:	movs	r0, r0
    e106:	rors	r0, r6
    e108:	cmp	r1, r3
    e10a:	it	eq
    e10c:	cmpeq	r0, r2
    e10e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e112:	mov	r4, r0
    e114:	it	cc
    e116:	movcc	r0, #0
    e118:	mov	r5, r1
    e11a:	ldr.w	ip, [sp, #36]	; 0x24
    e11e:	it	cc
    e120:	movcc	r1, r0
    e122:	bcc.n	e1fc <setlogin@@Base+0x23f4>
    e124:	mov	r8, r2
    e126:	mov	r9, r3
    e128:	clz	r2, r3
    e12c:	cmp	r3, #0
    e12e:	beq.n	e212 <setlogin@@Base+0x240a>
    e130:	clz	r3, r5
    e134:	cmp	r5, #0
    e136:	beq.n	e20a <setlogin@@Base+0x2402>
    e138:	subs	r2, r2, r3
    e13a:	sub.w	lr, r2, #32
    e13e:	lsl.w	fp, r9, r2
    e142:	lsl.w	r3, r8, lr
    e146:	rsb	r7, r2, #32
    e14a:	orr.w	fp, fp, r3
    e14e:	lsr.w	r3, r8, r7
    e152:	orr.w	fp, fp, r3
    e156:	lsl.w	sl, r8, r2
    e15a:	cmp	r5, fp
    e15c:	it	eq
    e15e:	cmpeq	r4, sl
    e160:	itt	cc
    e162:	movcc	r0, #0
    e164:	movcc	r1, r0
    e166:	bcc.n	e17e <setlogin@@Base+0x2376>
    e168:	movs	r0, #1
    e16a:	subs.w	r4, r4, sl
    e16e:	lsl.w	r1, r0, lr
    e172:	lsr.w	r3, r0, r7
    e176:	sbc.w	r5, r5, fp
    e17a:	orrs	r1, r3
    e17c:	lsls	r0, r2
    e17e:	cmp	r2, #0
    e180:	beq.n	e1fc <setlogin@@Base+0x23f4>
    e182:	mov.w	r8, sl, lsr #1
    e186:	mov.w	r9, fp, lsr #1
    e18a:	orr.w	r8, r8, fp, lsl #31
    e18e:	mov	r6, r2
    e190:	b.n	e1aa <setlogin@@Base+0x23a2>
    e192:	subs.w	r3, r4, r8
    e196:	sbc.w	sl, r5, r9
    e19a:	adds	r3, r3, r3
    e19c:	adc.w	sl, sl, sl
    e1a0:	adds	r4, r3, #1
    e1a2:	adc.w	r5, sl, #0
    e1a6:	subs	r6, #1
    e1a8:	beq.n	e1ba <setlogin@@Base+0x23b2>
    e1aa:	cmp	r5, r9
    e1ac:	it	eq
    e1ae:	cmpeq	r4, r8
    e1b0:	bcs.n	e192 <setlogin@@Base+0x238a>
    e1b2:	adds	r4, r4, r4
    e1b4:	adcs	r5, r5
    e1b6:	subs	r6, #1
    e1b8:	bne.n	e1aa <setlogin@@Base+0x23a2>
    e1ba:	lsl.w	r7, r5, r7
    e1be:	lsr.w	r3, r4, r2
    e1c2:	orrs	r3, r7
    e1c4:	lsr.w	lr, r5, lr
    e1c8:	adds	r0, r0, r4
    e1ca:	lsr.w	r8, r5, r2
    e1ce:	orr.w	r4, r3, lr
    e1d2:	sub.w	r7, r2, #32
    e1d6:	rsb	r6, r2, #32
    e1da:	lsl.w	r3, r8, r2
    e1de:	lsl.w	r7, r4, r7
    e1e2:	lsl.w	r2, r4, r2
    e1e6:	orr.w	r3, r3, r7
    e1ea:	lsr.w	r6, r4, r6
    e1ee:	adc.w	r1, r5, r1
    e1f2:	orrs	r3, r6
    e1f4:	subs	r0, r0, r2
    e1f6:	mov	r5, r8
    e1f8:	sbc.w	r1, r1, r3
    e1fc:	cmp.w	ip, #0
    e200:	beq.n	e206 <setlogin@@Base+0x23fe>
    e202:	strd	r4, r5, [ip]
    e206:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e20a:	clz	r3, r4
    e20e:	adds	r3, #32
    e210:	b.n	e138 <setlogin@@Base+0x2330>
    e212:	clz	r2, r8
    e216:	clz	r3, r5
    e21a:	adds	r2, #32
    e21c:	cmp	r5, #0
    e21e:	bne.n	e138 <setlogin@@Base+0x2330>
    e220:	b.n	e20a <setlogin@@Base+0x2402>
    e222:	nop
    e224:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    e228:	mov	r7, r0
    e22a:	ldr	r6, [pc, #48]	; (e25c <setlogin@@Base+0x2454>)
    e22c:	mov	r8, r1
    e22e:	ldr	r5, [pc, #48]	; (e260 <setlogin@@Base+0x2458>)
    e230:	mov	r9, r2
    e232:	add	r6, pc
    e234:	blx	1908 <getpgrp@plt-0x20>
    e238:	add	r5, pc
    e23a:	subs	r6, r6, r5
    e23c:	asrs	r6, r6, #2
    e23e:	beq.n	e256 <setlogin@@Base+0x244e>
    e240:	subs	r5, #4
    e242:	movs	r4, #0
    e244:	ldr.w	r3, [r5, #4]!
    e248:	adds	r4, #1
    e24a:	mov	r2, r9
    e24c:	mov	r1, r8
    e24e:	mov	r0, r7
    e250:	blx	r3
    e252:	cmp	r6, r4
    e254:	bne.n	e244 <setlogin@@Base+0x243c>
    e256:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    e25a:	nop
    e25c:	cmp	r0, #154	; 0x9a
    e25e:	movs	r1, r0
    e260:	cmp	r0, #144	; 0x90
    e262:	movs	r1, r0
    e264:	bx	lr
    e266:	nop

Disassembly of section .fini:

0000e268 <.fini>:
    e268:	push	{r3, lr}
    e26c:	pop	{r3, pc}
