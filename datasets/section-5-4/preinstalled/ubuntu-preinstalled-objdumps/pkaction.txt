
ubuntu-preinstalled/pkaction:     file format elf32-littlearm


Disassembly of section .init:

00000bf8 <.init>:
 bf8:	push	{r3, lr}
 bfc:	bl	107c <_start@@Base+0x48>
 c00:	pop	{r3, pc}

Disassembly of section .plt:

00000c04 <g_free@plt-0x14>:
 c04:	push	{lr}		; (str lr, [sp, #-4]!)
 c08:	ldr	lr, [pc, #4]	; c14 <g_free@plt-0x4>
 c0c:	add	lr, pc, lr
 c10:	ldr	pc, [lr, #8]!
 c14:	andeq	r1, r1, r8, lsr r3

00000c18 <g_free@plt>:
 c18:	add	ip, pc, #0, 12
 c1c:	add	ip, ip, #69632	; 0x11000
 c20:	ldr	pc, [ip, #824]!	; 0x338

00000c24 <polkit_action_description_get_icon_name@plt>:
 c24:	add	ip, pc, #0, 12
 c28:	add	ip, ip, #69632	; 0x11000
 c2c:	ldr	pc, [ip, #816]!	; 0x330

00000c30 <g_spawn_command_line_sync@plt>:
 c30:	add	ip, pc, #0, 12
 c34:	add	ip, ip, #69632	; 0x11000
 c38:	ldr	pc, [ip, #808]!	; 0x328

00000c3c <abort@plt>:
 c3c:	add	ip, pc, #0, 12
 c40:	add	ip, ip, #69632	; 0x11000
 c44:	ldr	pc, [ip, #800]!	; 0x320

00000c48 <polkit_action_description_get_implicit_any@plt>:
 c48:	add	ip, pc, #0, 12
 c4c:	add	ip, ip, #69632	; 0x11000
 c50:	ldr	pc, [ip, #792]!	; 0x318

00000c54 <polkit_action_description_get_vendor_name@plt>:
 c54:	add	ip, pc, #0, 12
 c58:	add	ip, ip, #69632	; 0x11000
 c5c:	ldr	pc, [ip, #784]!	; 0x310

00000c60 <__libc_start_main@plt>:
 c60:	add	ip, pc, #0, 12
 c64:	add	ip, ip, #69632	; 0x11000
 c68:	ldr	pc, [ip, #776]!	; 0x308

00000c6c <polkit_action_description_get_annotation@plt>:
 c6c:	add	ip, pc, #0, 12
 c70:	add	ip, ip, #69632	; 0x11000
 c74:	ldr	pc, [ip, #768]!	; 0x300

00000c78 <g_print@plt>:
 c78:			; <UNDEFINED> instruction: 0x46c04778
 c7c:	add	ip, pc, #0, 12
 c80:	add	ip, ip, #69632	; 0x11000
 c84:	ldr	pc, [ip, #756]!	; 0x2f4

00000c88 <__gmon_start__@plt>:
 c88:	add	ip, pc, #0, 12
 c8c:	add	ip, ip, #69632	; 0x11000
 c90:	ldr	pc, [ip, #748]!	; 0x2ec

00000c94 <polkit_action_description_get_action_id@plt>:
 c94:	add	ip, pc, #0, 12
 c98:	add	ip, ip, #69632	; 0x11000
 c9c:	ldr	pc, [ip, #740]!	; 0x2e4

00000ca0 <g_object_unref@plt>:
 ca0:	add	ip, pc, #0, 12
 ca4:	add	ip, ip, #69632	; 0x11000
 ca8:	ldr	pc, [ip, #732]!	; 0x2dc

00000cac <g_strcmp0@plt>:
 cac:			; <UNDEFINED> instruction: 0x46c04778
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #69632	; 0x11000
 cb8:	ldr	pc, [ip, #720]!	; 0x2d0

00000cbc <g_strdup@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #69632	; 0x11000
 cc4:	ldr	pc, [ip, #712]!	; 0x2c8

00000cc8 <polkit_action_description_get_vendor_url@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #69632	; 0x11000
 cd0:	ldr	pc, [ip, #704]!	; 0x2c0

00000cd4 <g_list_foreach@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #69632	; 0x11000
 cdc:	ldr	pc, [ip, #696]!	; 0x2b8

00000ce0 <g_list_free@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #69632	; 0x11000
 ce8:	ldr	pc, [ip, #688]!	; 0x2b0

00000cec <polkit_action_description_get_implicit_inactive@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #69632	; 0x11000
 cf4:	ldr	pc, [ip, #680]!	; 0x2a8

00000cf8 <polkit_implicit_authorization_to_string@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #69632	; 0x11000
 d00:	ldr	pc, [ip, #672]!	; 0x2a0

00000d04 <g_printerr@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #69632	; 0x11000
 d0c:	ldr	pc, [ip, #664]!	; 0x298

00000d10 <polkit_action_description_get_message@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #69632	; 0x11000
 d18:	ldr	pc, [ip, #656]!	; 0x290

00000d1c <polkit_action_description_get_type@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #69632	; 0x11000
 d24:	ldr	pc, [ip, #648]!	; 0x288

00000d28 <polkit_action_description_get_annotation_keys@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #69632	; 0x11000
 d30:	ldr	pc, [ip, #640]!	; 0x280

00000d34 <polkit_action_description_get_implicit_active@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #69632	; 0x11000
 d3c:	ldr	pc, [ip, #632]!	; 0x278

00000d40 <polkit_authority_get_sync@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #69632	; 0x11000
 d48:	ldr	pc, [ip, #624]!	; 0x270

00000d4c <g_type_init@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #69632	; 0x11000
 d54:	ldr	pc, [ip, #616]!	; 0x268

00000d58 <polkit_action_description_get_description@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #69632	; 0x11000
 d60:	ldr	pc, [ip, #608]!	; 0x260

00000d64 <g_list_sort@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #69632	; 0x11000
 d6c:	ldr	pc, [ip, #600]!	; 0x258

00000d70 <g_type_check_instance_cast@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #69632	; 0x11000
 d78:	ldr	pc, [ip, #592]!	; 0x250

00000d7c <__stack_chk_fail@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #69632	; 0x11000
 d84:	ldr	pc, [ip, #584]!	; 0x248

00000d88 <polkit_authority_enumerate_actions_sync@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #69632	; 0x11000
 d90:	ldr	pc, [ip, #576]!	; 0x240

00000d94 <g_error_free@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #69632	; 0x11000
 d9c:	ldr	pc, [ip, #568]!	; 0x238

00000da0 <__cxa_finalize@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #69632	; 0x11000
 da8:	ldr	pc, [ip, #560]!	; 0x230

Disassembly of section .text:

00000dac <main@@Base>:
     dac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     db0:	mov	r6, r0
     db2:	vpush	{d8}
     db6:	mov	r5, r1
     db8:	ldr	r2, [pc, #564]	; (ff0 <main@@Base+0x244>)
     dba:	ldr	r3, [pc, #568]	; (ff4 <main@@Base+0x248>)
     dbc:	add	r2, pc
     dbe:	sub	sp, #28
     dc0:	ldr	r3, [r2, r3]
     dc2:	ldr	r3, [r3, #0]
     dc4:	str	r3, [sp, #20]
     dc6:	mov.w	r3, #0
     dca:	ldr	r3, [pc, #556]	; (ff8 <main@@Base+0x24c>)
     dcc:	add	r3, pc
     dce:	str	r3, [sp, #8]
     dd0:	blx	d4c <g_type_init@plt>
     dd4:	cmp	r6, #1
     dd6:	bls.w	fba <main@@Base+0x20e>
     dda:	ldr	r2, [pc, #544]	; (ffc <main@@Base+0x250>)
     ddc:	movs	r3, #0
     dde:	ldr	r7, [pc, #544]	; (1000 <main@@Base+0x254>)
     de0:	mov	r8, r3
     de2:	ldr.w	sl, [pc, #544]	; 1004 <main@@Base+0x258>
     de6:	add	r2, pc
     de8:	add	r7, pc
     dea:	movs	r4, #1
     dec:	add	sl, pc
     dee:	vmov	s16, r2
     df2:	str	r3, [sp, #12]
     df4:	str	r3, [sp, #0]
     df6:	str	r3, [sp, #4]
     df8:	b.n	e04 <main@@Base+0x58>
     dfa:	mov.w	r8, #1
     dfe:	adds	r4, #1
     e00:	cmp	r4, r6
     e02:	bcs.n	e32 <main@@Base+0x86>
     e04:	ldr.w	r0, [r5, r4, lsl #2]
     e08:	mov	r1, r7
     e0a:	blx	cb0 <g_strcmp0@plt+0x4>
     e0e:	mov.w	r9, r4, lsl #2
     e12:	add.w	fp, r5, r9
     e16:	cmp	r0, #0
     e18:	beq.n	dfa <main@@Base+0x4e>
     e1a:	ldr.w	r0, [r5, r4, lsl #2]
     e1e:	mov	r1, sl
     e20:	blx	cb0 <g_strcmp0@plt+0x4>
     e24:	cmp	r0, #0
     e26:	bne.n	ed0 <main@@Base+0x124>
     e28:	adds	r4, #1
     e2a:	movs	r3, #1
     e2c:	cmp	r4, r6
     e2e:	str	r3, [sp, #0]
     e30:	bcc.n	e04 <main@@Base+0x58>
     e32:	cmp.w	r8, #0
     e36:	bne.w	f64 <main@@Base+0x1b8>
     e3a:	ldr	r3, [sp, #0]
     e3c:	cmp	r3, #0
     e3e:	bne.n	f16 <main@@Base+0x16a>
     e40:	add	r2, sp, #16
     e42:	movs	r4, #0
     e44:	mov	r0, r4
     e46:	str	r2, [sp, #0]
     e48:	mov	r1, r2
     e4a:	str	r4, [sp, #16]
     e4c:	blx	d40 <polkit_authority_get_sync@plt>
     e50:	ldr	r2, [sp, #0]
     e52:	mov	r7, r0
     e54:	cmp	r0, #0
     e56:	beq.w	f80 <main@@Base+0x1d4>
     e5a:	mov	r1, r4
     e5c:	str	r4, [sp, #16]
     e5e:	blx	d88 <polkit_authority_enumerate_actions_sync@plt>
     e62:	ldr	r3, [sp, #16]
     e64:	mov	r6, r0
     e66:	cmp	r3, #0
     e68:	bne.w	f6e <main@@Base+0x1c2>
     e6c:	ldr	r5, [sp, #4]
     e6e:	cmp	r5, #0
     e70:	beq.w	fc2 <main@@Base+0x216>
     e74:	cmp	r0, #0
     e76:	beq.n	f58 <main@@Base+0x1ac>
     e78:	blx	d1c <polkit_action_description_get_type@plt>
     e7c:	mov	r4, r6
     e7e:	mov	r9, r5
     e80:	mov	r8, r0
     e82:	b.n	e8a <main@@Base+0xde>
     e84:	ldr	r4, [r4, #4]
     e86:	cmp	r4, #0
     e88:	beq.n	f58 <main@@Base+0x1ac>
     e8a:	mov	r1, r8
     e8c:	ldr	r0, [r4, #0]
     e8e:	blx	d70 <g_type_check_instance_cast@plt>
     e92:	mov	r5, r0
     e94:	blx	c94 <polkit_action_description_get_action_id@plt>
     e98:	mov	r1, r9
     e9a:	blx	cb0 <g_strcmp0@plt+0x4>
     e9e:	cmp	r0, #0
     ea0:	bne.n	e84 <main@@Base+0xd8>
     ea2:	ldr	r1, [sp, #12]
     ea4:	mov	r0, r5
     ea6:	bl	11d8 <_start@@Base+0x1a4>
     eaa:	ldr	r3, [pc, #348]	; (1008 <main@@Base+0x25c>)
     eac:	movs	r2, #0
     eae:	ldr	r1, [sp, #8]
     eb0:	mov	r0, r6
     eb2:	mov.w	r8, #1
     eb6:	ldr	r1, [r1, r3]
     eb8:	blx	cd4 <g_list_foreach@plt>
     ebc:	mov	r0, r6
     ebe:	blx	ce0 <g_list_free@plt>
     ec2:	ldr	r0, [sp, #4]
     ec4:	blx	c18 <g_free@plt>
     ec8:	mov	r0, r7
     eca:	blx	ca0 <g_object_unref@plt>
     ece:	b.n	f3c <main@@Base+0x190>
     ed0:	vmov	r1, s16
     ed4:	ldr.w	r0, [r5, r9]
     ed8:	blx	cb0 <g_strcmp0@plt+0x4>
     edc:	cbnz	r0, ef0 <main@@Base+0x144>
     ede:	adds	r4, #1
     ee0:	cmp	r4, r6
     ee2:	bcs.n	f98 <main@@Base+0x1ec>
     ee4:	ldr.w	r0, [fp, #4]
     ee8:	blx	cbc <g_strdup@plt>
     eec:	str	r0, [sp, #4]
     eee:	b.n	dfe <main@@Base+0x52>
     ef0:	ldr	r1, [pc, #280]	; (100c <main@@Base+0x260>)
     ef2:	ldr.w	r0, [r5, r9]
     ef6:	add	r1, pc
     ef8:	blx	cb0 <g_strcmp0@plt+0x4>
     efc:	cmp	r0, #0
     efe:	beq.n	ede <main@@Base+0x132>
     f00:	ldr	r1, [pc, #268]	; (1010 <main@@Base+0x264>)
     f02:	ldr.w	r0, [r5, r9]
     f06:	add	r1, pc
     f08:	blx	cb0 <g_strcmp0@plt+0x4>
     f0c:	cmp	r0, #0
     f0e:	bne.n	fa2 <main@@Base+0x1f6>
     f10:	movs	r3, #1
     f12:	str	r3, [sp, #12]
     f14:	b.n	dfe <main@@Base+0x52>
     f16:	ldr	r1, [pc, #252]	; (1014 <main@@Base+0x268>)
     f18:	ldr	r0, [pc, #252]	; (1018 <main@@Base+0x26c>)
     f1a:	add	r1, pc
     f1c:	add	r0, pc
     f1e:	blx	c7c <g_print@plt+0x4>
     f22:	ldr	r3, [pc, #228]	; (1008 <main@@Base+0x25c>)
     f24:	movs	r2, #0
     f26:	ldr	r1, [sp, #8]
     f28:	mov	r0, r2
     f2a:	ldr	r1, [r1, r3]
     f2c:	blx	cd4 <g_list_foreach@plt>
     f30:	movs	r0, #0
     f32:	blx	ce0 <g_list_free@plt>
     f36:	ldr	r0, [sp, #4]
     f38:	blx	c18 <g_free@plt>
     f3c:	ldr	r2, [pc, #220]	; (101c <main@@Base+0x270>)
     f3e:	ldr	r3, [pc, #180]	; (ff4 <main@@Base+0x248>)
     f40:	add	r2, pc
     f42:	ldr	r3, [r2, r3]
     f44:	ldr	r2, [r3, #0]
     f46:	ldr	r3, [sp, #20]
     f48:	eors	r2, r3
     f4a:	bne.n	fec <main@@Base+0x240>
     f4c:	mov	r0, r8
     f4e:	add	sp, #28
     f50:	vpop	{d8}
     f54:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f58:	ldr	r0, [pc, #196]	; (1020 <main@@Base+0x274>)
     f5a:	ldr	r1, [sp, #4]
     f5c:	add	r0, pc
     f5e:	blx	d04 <g_printerr@plt>
     f62:	b.n	eaa <main@@Base+0xfe>
     f64:	bl	1160 <_start@@Base+0x12c>
     f68:	mov.w	r8, #0
     f6c:	b.n	f22 <main@@Base+0x176>
     f6e:	ldr	r0, [pc, #180]	; (1024 <main@@Base+0x278>)
     f70:	ldr	r1, [r3, #8]
     f72:	add	r0, pc
     f74:	blx	d04 <g_printerr@plt>
     f78:	ldr	r0, [sp, #16]
     f7a:	blx	d94 <g_error_free@plt>
     f7e:	b.n	eaa <main@@Base+0xfe>
     f80:	ldr	r3, [sp, #16]
     f82:	mov.w	r8, #1
     f86:	ldr	r0, [pc, #160]	; (1028 <main@@Base+0x27c>)
     f88:	ldr	r1, [r3, #8]
     f8a:	add	r0, pc
     f8c:	blx	d04 <g_printerr@plt>
     f90:	ldr	r0, [sp, #16]
     f92:	blx	d94 <g_error_free@plt>
     f96:	b.n	f22 <main@@Base+0x176>
     f98:	bl	1160 <_start@@Base+0x12c>
     f9c:	mov.w	r8, #1
     fa0:	b.n	f22 <main@@Base+0x176>
     fa2:	ldr	r1, [pc, #136]	; (102c <main@@Base+0x280>)
     fa4:	ldr.w	r0, [r5, r9]
     fa8:	add	r1, pc
     faa:	blx	cb0 <g_strcmp0@plt+0x4>
     fae:	ldr	r3, [sp, #12]
     fb0:	cmp	r0, #0
     fb2:	it	eq
     fb4:	moveq	r3, #1
     fb6:	str	r3, [sp, #12]
     fb8:	b.n	dfe <main@@Base+0x52>
     fba:	movs	r3, #0
     fbc:	str	r3, [sp, #12]
     fbe:	str	r3, [sp, #4]
     fc0:	b.n	e40 <main@@Base+0x94>
     fc2:	ldr	r1, [pc, #108]	; (1030 <main@@Base+0x284>)
     fc4:	add	r1, pc
     fc6:	blx	d64 <g_list_sort@plt>
     fca:	ldr	r5, [sp, #12]
     fcc:	mov	r4, r0
     fce:	mov	r6, r0
     fd0:	cbz	r4, fe8 <main@@Base+0x23c>
     fd2:	blx	d1c <polkit_action_description_get_type@plt>
     fd6:	mov	r1, r0
     fd8:	ldr	r0, [r4, #0]
     fda:	blx	d70 <g_type_check_instance_cast@plt>
     fde:	mov	r1, r5
     fe0:	bl	11d8 <_start@@Base+0x1a4>
     fe4:	ldr	r4, [r4, #4]
     fe6:	b.n	fd0 <main@@Base+0x224>
     fe8:	str	r4, [sp, #4]
     fea:	b.n	eaa <main@@Base+0xfe>
     fec:	blx	d7c <__stack_chk_fail@plt>
     ff0:	asrs	r4, r1, #6
     ff2:	movs	r1, r0
     ff4:	lsls	r0, r5, #2
     ff6:	movs	r0, r0
     ff8:	asrs	r4, r7, #5
     ffa:	movs	r1, r0
     ffc:	lsls	r6, r6, #26
     ffe:	movs	r0, r0
    1000:	lsls	r0, r4, #26
    1002:	movs	r0, r0
    1004:	lsls	r4, r4, #26
    1006:	movs	r0, r0
    1008:	lsls	r0, r3, #2
    100a:	movs	r0, r0
    100c:	lsls	r2, r6, #22
    100e:	movs	r0, r0
    1010:	lsls	r6, r4, #22
    1012:	movs	r0, r0
    1014:	lsls	r2, r4, #22
    1016:	movs	r0, r0
    1018:	lsls	r0, r5, #22
    101a:	movs	r0, r0
    101c:	asrs	r0, r1, #32
    101e:	movs	r1, r0
    1020:	lsls	r0, r0, #23
    1022:	movs	r0, r0
    1024:	lsls	r2, r1, #22
    1026:	movs	r0, r0
    1028:	lsls	r2, r2, #21
    102a:	movs	r0, r0
    102c:	lsls	r0, r2, #20
    102e:	movs	r0, r0
    1030:	lsls	r5, r7, #5
	...

00001034 <_start@@Base>:
    1034:	mov.w	fp, #0
    1038:	mov.w	lr, #0
    103c:	pop	{r1}
    103e:	mov	r2, sp
    1040:	push	{r2}
    1042:	push	{r0}
    1044:	ldr.w	sl, [pc, #36]	; 106c <_start@@Base+0x38>
    1048:	add	r3, pc, #32	; (adr r3, 106c <_start@@Base+0x38>)
    104a:	add	sl, r3
    104c:	ldr.w	ip, [pc, #32]	; 1070 <_start@@Base+0x3c>
    1050:	ldr.w	ip, [sl, ip]
    1054:	str.w	ip, [sp, #-4]!
    1058:	ldr	r3, [pc, #24]	; (1074 <_start@@Base+0x40>)
    105a:	ldr.w	r3, [sl, r3]
    105e:	ldr	r0, [pc, #24]	; (1078 <_start@@Base+0x44>)
    1060:	ldr.w	r0, [sl, r0]
    1064:	blx	c60 <__libc_start_main@plt>
    1068:	blx	c3c <abort@plt>
    106c:	lsrs	r0, r4, #27
    106e:	movs	r1, r0
    1070:	lsls	r0, r2, #2
    1072:	movs	r0, r0
    1074:	lsls	r4, r4, #2
    1076:	movs	r0, r0
    1078:	lsls	r0, r6, #2
    107a:	movs	r0, r0
    107c:	adds	r0, #20
    107e:	b.n	bc0 <g_free@plt-0x58>
    1080:	movs	r0, #20
    1082:	b.n	bc4 <g_free@plt-0x54>
    1084:	adds	r0, #3
    1086:	b.n	11a8 <_start@@Base+0x174>
    1088:	movs	r0, #2
    108a:	b.n	fb4 <main@@Base+0x208>
    108c:	movs	r0, r0
    108e:	b.n	1736 <_IO_stdin_used@@Base+0x3ee>
    1090:	vrhadd.u16	d0, d14, d31
    1094:	mrc2	10, 7, lr, cr11, cr15, {7}	; <UNPREDICTABLE>
    1098:	lsrs	r0, r0, #27
    109a:	movs	r1, r0
    109c:	lsls	r4, r2, #2
    109e:	movs	r0, r0
    10a0:	ldr	r0, [pc, #24]	; (10bc <_start@@Base+0x88>)
    10a2:	ldr	r3, [pc, #28]	; (10c0 <_start@@Base+0x8c>)
    10a4:	add	r0, pc
    10a6:	ldr	r2, [pc, #28]	; (10c4 <_start@@Base+0x90>)
    10a8:	add	r3, pc
    10aa:	cmp	r3, r0
    10ac:	add	r2, pc
    10ae:	beq.n	10b8 <_start@@Base+0x84>
    10b0:	ldr	r3, [pc, #20]	; (10c8 <_start@@Base+0x94>)
    10b2:	ldr	r3, [r2, r3]
    10b4:	cbz	r3, 10b8 <_start@@Base+0x84>
    10b6:	bx	r3
    10b8:	bx	lr
    10ba:	nop
    10bc:	lsrs	r0, r4, #29
    10be:	movs	r1, r0
    10c0:	lsrs	r4, r3, #29
    10c2:	movs	r1, r0
    10c4:	lsrs	r4, r3, #26
    10c6:	movs	r1, r0
    10c8:	lsls	r4, r3, #2
    10ca:	movs	r0, r0
    10cc:	ldr	r0, [pc, #32]	; (10f0 <_start@@Base+0xbc>)
    10ce:	ldr	r1, [pc, #36]	; (10f4 <_start@@Base+0xc0>)
    10d0:	add	r0, pc
    10d2:	ldr	r2, [pc, #36]	; (10f8 <_start@@Base+0xc4>)
    10d4:	add	r1, pc
    10d6:	subs	r1, r1, r0
    10d8:	add	r2, pc
    10da:	lsrs	r3, r1, #31
    10dc:	add.w	r1, r3, r1, asr #2
    10e0:	asrs	r1, r1, #1
    10e2:	beq.n	10ec <_start@@Base+0xb8>
    10e4:	ldr	r3, [pc, #20]	; (10fc <_start@@Base+0xc8>)
    10e6:	ldr	r3, [r2, r3]
    10e8:	cbz	r3, 10ec <_start@@Base+0xb8>
    10ea:	bx	r3
    10ec:	bx	lr
    10ee:	nop
    10f0:	lsrs	r4, r6, #28
    10f2:	movs	r1, r0
    10f4:	lsrs	r0, r6, #28
    10f6:	movs	r1, r0
    10f8:	lsrs	r0, r6, #25
    10fa:	movs	r1, r0
    10fc:	lsls	r0, r4, #2
    10fe:	movs	r0, r0
    1100:	push	{r3, lr}
    1102:	ldr	r3, [pc, #40]	; (112c <_start@@Base+0xf8>)
    1104:	ldr	r2, [pc, #40]	; (1130 <_start@@Base+0xfc>)
    1106:	add	r3, pc
    1108:	add	r2, pc
    110a:	ldrb	r3, [r3, #0]
    110c:	cbnz	r3, 112a <_start@@Base+0xf6>
    110e:	ldr	r3, [pc, #36]	; (1134 <_start@@Base+0x100>)
    1110:	ldr	r3, [r2, r3]
    1112:	cbz	r3, 111e <_start@@Base+0xea>
    1114:	ldr	r3, [pc, #32]	; (1138 <_start@@Base+0x104>)
    1116:	add	r3, pc
    1118:	ldr	r0, [r3, #0]
    111a:	blx	da0 <__cxa_finalize@plt>
    111e:	bl	10a0 <_start@@Base+0x6c>
    1122:	ldr	r3, [pc, #24]	; (113c <_start@@Base+0x108>)
    1124:	movs	r2, #1
    1126:	add	r3, pc
    1128:	strb	r2, [r3, #0]
    112a:	pop	{r3, pc}
    112c:	lsrs	r6, r7, #27
    112e:	movs	r1, r0
    1130:	lsrs	r0, r0, #25
    1132:	movs	r1, r0
    1134:	lsls	r4, r5, #2
    1136:	movs	r0, r0
    1138:	lsrs	r2, r5, #27
    113a:	movs	r1, r0
    113c:	lsrs	r6, r3, #27
    113e:	movs	r1, r0
    1140:	b.n	10cc <_start@@Base+0x98>
    1142:	nop
    1144:	push	{r3, r4, r5, lr}
    1146:	mov	r5, r1
    1148:	blx	c94 <polkit_action_description_get_action_id@plt>
    114c:	mov	r4, r0
    114e:	mov	r0, r5
    1150:	blx	c94 <polkit_action_description_get_action_id@plt>
    1154:	mov	r1, r0
    1156:	mov	r0, r4
    1158:	ldmia.w	sp!, {r3, r4, r5, lr}
    115c:	b.w	cac <g_strcmp0@plt>
    1160:	push	{lr}
    1162:	sub	sp, #20
    1164:	ldr.w	lr, [pc, #92]	; 11c4 <_start@@Base+0x190>
    1168:	add	r0, sp, #8
    116a:	ldr.w	ip, [pc, #92]	; 11c8 <_start@@Base+0x194>
    116e:	movs	r3, #0
    1170:	add	lr, pc
    1172:	str	r0, [sp, #0]
    1174:	ldr	r0, [pc, #84]	; (11cc <_start@@Base+0x198>)
    1176:	mov	r2, r3
    1178:	ldr.w	ip, [lr, ip]
    117c:	mov	r1, r3
    117e:	add	r0, pc
    1180:	ldr.w	ip, [ip]
    1184:	str.w	ip, [sp, #12]
    1188:	mov.w	ip, #0
    118c:	str	r3, [sp, #8]
    118e:	blx	c30 <g_spawn_command_line_sync@plt>
    1192:	cbz	r0, 11aa <_start@@Base+0x176>
    1194:	ldr	r2, [pc, #56]	; (11d0 <_start@@Base+0x19c>)
    1196:	ldr	r3, [pc, #48]	; (11c8 <_start@@Base+0x194>)
    1198:	add	r2, pc
    119a:	ldr	r3, [r2, r3]
    119c:	ldr	r2, [r3, #0]
    119e:	ldr	r3, [sp, #12]
    11a0:	eors	r2, r3
    11a2:	bne.n	11be <_start@@Base+0x18a>
    11a4:	add	sp, #20
    11a6:	ldr.w	pc, [sp], #4
    11aa:	ldr	r3, [sp, #8]
    11ac:	ldr	r0, [pc, #36]	; (11d4 <_start@@Base+0x1a0>)
    11ae:	ldr	r1, [r3, #8]
    11b0:	add	r0, pc
    11b2:	blx	d04 <g_printerr@plt>
    11b6:	ldr	r0, [sp, #8]
    11b8:	blx	d94 <g_error_free@plt>
    11bc:	b.n	1194 <_start@@Base+0x160>
    11be:	blx	d7c <__stack_chk_fail@plt>
    11c2:	nop
    11c4:	lsrs	r0, r3, #23
    11c6:	movs	r1, r0
    11c8:	lsls	r0, r5, #2
    11ca:	movs	r0, r0
    11cc:	lsls	r2, r1, #7
    11ce:	movs	r0, r0
    11d0:	lsrs	r0, r6, #22
    11d2:	movs	r1, r0
    11d4:	lsls	r0, r5, #6
    11d6:	movs	r0, r0
    11d8:	push	{r3, r4, r5, r6, r7, lr}
    11da:	cbnz	r1, 11ee <_start@@Base+0x1ba>
    11dc:	blx	c94 <polkit_action_description_get_action_id@plt>
    11e0:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    11e4:	mov	r1, r0
    11e6:	ldr	r0, [pc, #228]	; (12cc <_start@@Base+0x298>)
    11e8:	add	r0, pc
    11ea:	b.w	c78 <g_print@plt>
    11ee:	mov	r5, r0
    11f0:	blx	c54 <polkit_action_description_get_vendor_name@plt>
    11f4:	mov	r7, r0
    11f6:	mov	r0, r5
    11f8:	blx	cc8 <polkit_action_description_get_vendor_url@plt>
    11fc:	mov	r6, r0
    11fe:	mov	r0, r5
    1200:	blx	c24 <polkit_action_description_get_icon_name@plt>
    1204:	mov	r4, r0
    1206:	mov	r0, r5
    1208:	blx	c94 <polkit_action_description_get_action_id@plt>
    120c:	mov	r1, r0
    120e:	ldr	r0, [pc, #192]	; (12d0 <_start@@Base+0x29c>)
    1210:	add	r0, pc
    1212:	blx	c7c <g_print@plt+0x4>
    1216:	mov	r0, r5
    1218:	blx	d58 <polkit_action_description_get_description@plt>
    121c:	mov	r1, r0
    121e:	ldr	r0, [pc, #180]	; (12d4 <_start@@Base+0x2a0>)
    1220:	add	r0, pc
    1222:	blx	c7c <g_print@plt+0x4>
    1226:	mov	r0, r5
    1228:	blx	d10 <polkit_action_description_get_message@plt>
    122c:	mov	r1, r0
    122e:	ldr	r0, [pc, #168]	; (12d8 <_start@@Base+0x2a4>)
    1230:	add	r0, pc
    1232:	blx	c7c <g_print@plt+0x4>
    1236:	cbz	r7, 1242 <_start@@Base+0x20e>
    1238:	ldr	r0, [pc, #160]	; (12dc <_start@@Base+0x2a8>)
    123a:	mov	r1, r7
    123c:	add	r0, pc
    123e:	blx	c7c <g_print@plt+0x4>
    1242:	cbz	r6, 124e <_start@@Base+0x21a>
    1244:	ldr	r0, [pc, #152]	; (12e0 <_start@@Base+0x2ac>)
    1246:	mov	r1, r6
    1248:	add	r0, pc
    124a:	blx	c7c <g_print@plt+0x4>
    124e:	cbz	r4, 125a <_start@@Base+0x226>
    1250:	ldr	r0, [pc, #144]	; (12e4 <_start@@Base+0x2b0>)
    1252:	mov	r1, r4
    1254:	add	r0, pc
    1256:	blx	c7c <g_print@plt+0x4>
    125a:	mov	r0, r5
    125c:	blx	c48 <polkit_action_description_get_implicit_any@plt>
    1260:	blx	cf8 <polkit_implicit_authorization_to_string@plt>
    1264:	mov	r1, r0
    1266:	ldr	r0, [pc, #128]	; (12e8 <_start@@Base+0x2b4>)
    1268:	add	r0, pc
    126a:	blx	c7c <g_print@plt+0x4>
    126e:	mov	r0, r5
    1270:	blx	cec <polkit_action_description_get_implicit_inactive@plt>
    1274:	blx	cf8 <polkit_implicit_authorization_to_string@plt>
    1278:	mov	r1, r0
    127a:	ldr	r0, [pc, #112]	; (12ec <_start@@Base+0x2b8>)
    127c:	add	r0, pc
    127e:	blx	c7c <g_print@plt+0x4>
    1282:	mov	r0, r5
    1284:	blx	d34 <polkit_action_description_get_implicit_active@plt>
    1288:	blx	cf8 <polkit_implicit_authorization_to_string@plt>
    128c:	mov	r1, r0
    128e:	ldr	r0, [pc, #96]	; (12f0 <_start@@Base+0x2bc>)
    1290:	add	r0, pc
    1292:	blx	c7c <g_print@plt+0x4>
    1296:	mov	r0, r5
    1298:	blx	d28 <polkit_action_description_get_annotation_keys@plt>
    129c:	ldr	r4, [r0, #0]
    129e:	cbz	r4, 12c0 <_start@@Base+0x28c>
    12a0:	ldr	r7, [pc, #80]	; (12f4 <_start@@Base+0x2c0>)
    12a2:	mov	r6, r0
    12a4:	add	r7, pc
    12a6:	mov	r1, r4
    12a8:	mov	r0, r5
    12aa:	blx	c6c <polkit_action_description_get_annotation@plt>
    12ae:	mov	r1, r4
    12b0:	mov	r2, r0
    12b2:	mov	r0, r7
    12b4:	blx	c7c <g_print@plt+0x4>
    12b8:	ldr.w	r4, [r6, #4]!
    12bc:	cmp	r4, #0
    12be:	bne.n	12a6 <_start@@Base+0x272>
    12c0:	ldr	r0, [pc, #52]	; (12f8 <_start@@Base+0x2c4>)
    12c2:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    12c6:	add	r0, pc
    12c8:	b.w	c78 <g_print@plt>
    12cc:	lsls	r0, r2, #6
    12ce:	movs	r0, r0
    12d0:	lsls	r4, r5, #5
    12d2:	movs	r0, r0
    12d4:	lsls	r4, r4, #5
    12d6:	movs	r0, r0
    12d8:	lsls	r0, r6, #5
    12da:	movs	r0, r0
    12dc:	lsls	r0, r0, #6
    12de:	movs	r0, r0
    12e0:	lsls	r0, r2, #6
    12e2:	movs	r0, r0
    12e4:	lsls	r0, r4, #6
    12e6:	movs	r0, r0
    12e8:	lsls	r0, r5, #6
    12ea:	movs	r0, r0
    12ec:	lsls	r0, r6, #6
    12ee:	movs	r0, r0
    12f0:	lsls	r0, r7, #6
    12f2:	movs	r0, r0
    12f4:	lsls	r0, r0, #7
    12f6:	movs	r0, r0
    12f8:	lsls	r6, r7, #6
	...

000012fc <__libc_csu_init@@Base>:
    12fc:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    1300:	mov	r7, r0
    1302:	ldr	r6, [pc, #48]	; (1334 <__libc_csu_init@@Base+0x38>)
    1304:	mov	r8, r1
    1306:	ldr	r5, [pc, #48]	; (1338 <__libc_csu_init@@Base+0x3c>)
    1308:	mov	r9, r2
    130a:	add	r6, pc
    130c:	blx	bf8 <g_free@plt-0x20>
    1310:	add	r5, pc
    1312:	subs	r6, r6, r5
    1314:	asrs	r6, r6, #2
    1316:	beq.n	132e <__libc_csu_init@@Base+0x32>
    1318:	subs	r5, #4
    131a:	movs	r4, #0
    131c:	adds	r4, #1
    131e:	ldr.w	r3, [r5, #4]!
    1322:	mov	r2, r9
    1324:	mov	r1, r8
    1326:	mov	r0, r7
    1328:	blx	r3
    132a:	cmp	r6, r4
    132c:	bne.n	131c <__libc_csu_init@@Base+0x20>
    132e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    1332:	nop
    1334:	lsrs	r2, r4, #12
    1336:	movs	r1, r0
    1338:	lsrs	r0, r3, #12
    133a:	movs	r1, r0

0000133c <__libc_csu_fini@@Base>:
    133c:	bx	lr
    133e:	nop

Disassembly of section .fini:

00001340 <.fini>:
    1340:	push	{r3, lr}
    1344:	pop	{r3, pc}
