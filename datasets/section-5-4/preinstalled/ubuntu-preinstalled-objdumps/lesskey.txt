
ubuntu-preinstalled/lesskey:     file format elf32-littlearm


Disassembly of section .init:

000008f0 <.init>:
 8f0:	push	{r3, lr}
 8f4:	bl	cf4 <abort@plt+0x318>
 8f8:	pop	{r3, pc}

Disassembly of section .plt:

000008fc <calloc@plt-0x14>:
 8fc:	push	{lr}		; (str lr, [sp, #-4]!)
 900:	ldr	lr, [pc, #4]	; 90c <calloc@plt-0x4>
 904:	add	lr, pc, lr
 908:	ldr	pc, [lr, #8]!
 90c:	andeq	r1, r1, r0, ror #12

00000910 <calloc@plt>:
 910:	add	ip, pc, #0, 12
 914:	add	ip, ip, #69632	; 0x11000
 918:	ldr	pc, [ip, #1632]!	; 0x660

0000091c <strcmp@plt>:
 91c:	add	ip, pc, #0, 12
 920:	add	ip, ip, #69632	; 0x11000
 924:	ldr	pc, [ip, #1624]!	; 0x658

00000928 <__cxa_finalize@plt>:
 928:	add	ip, pc, #0, 12
 92c:	add	ip, ip, #69632	; 0x11000
 930:	ldr	pc, [ip, #1616]!	; 0x650

00000934 <fgets@plt>:
 934:	add	ip, pc, #0, 12
 938:	add	ip, ip, #69632	; 0x11000
 93c:	ldr	pc, [ip, #1608]!	; 0x648

00000940 <memcpy@plt>:
 940:	add	ip, pc, #0, 12
 944:	add	ip, ip, #69632	; 0x11000
 948:	ldr	pc, [ip, #1600]!	; 0x640

0000094c <__stack_chk_fail@plt>:
 94c:	add	ip, pc, #0, 12
 950:	add	ip, ip, #69632	; 0x11000
 954:	ldr	pc, [ip, #1592]!	; 0x638

00000958 <perror@plt>:
 958:	add	ip, pc, #0, 12
 95c:	add	ip, ip, #69632	; 0x11000
 960:	ldr	pc, [ip, #1584]!	; 0x630

00000964 <fwrite@plt>:
 964:	add	ip, pc, #0, 12
 968:	add	ip, ip, #69632	; 0x11000
 96c:	ldr	pc, [ip, #1576]!	; 0x628

00000970 <getenv@plt>:
 970:	add	ip, pc, #0, 12
 974:	add	ip, ip, #69632	; 0x11000
 978:	ldr	pc, [ip, #1568]!	; 0x620

0000097c <__libc_start_main@plt>:
 97c:	add	ip, pc, #0, 12
 980:	add	ip, ip, #69632	; 0x11000
 984:	ldr	pc, [ip, #1560]!	; 0x618

00000988 <__gmon_start__@plt>:
 988:	add	ip, pc, #0, 12
 98c:	add	ip, ip, #69632	; 0x11000
 990:	ldr	pc, [ip, #1552]!	; 0x610

00000994 <exit@plt>:
 994:	add	ip, pc, #0, 12
 998:	add	ip, ip, #69632	; 0x11000
 99c:	ldr	pc, [ip, #1544]!	; 0x608

000009a0 <strlen@plt>:
 9a0:	add	ip, pc, #0, 12
 9a4:	add	ip, ip, #69632	; 0x11000
 9a8:	ldr	pc, [ip, #1536]!	; 0x600

000009ac <__printf_chk@plt>:
 9ac:	add	ip, pc, #0, 12
 9b0:	add	ip, ip, #69632	; 0x11000
 9b4:	ldr	pc, [ip, #1528]!	; 0x5f8

000009b8 <__fprintf_chk@plt>:
 9b8:	add	ip, pc, #0, 12
 9bc:	add	ip, ip, #69632	; 0x11000
 9c0:	ldr	pc, [ip, #1520]!	; 0x5f0

000009c4 <fopen64@plt>:
 9c4:	add	ip, pc, #0, 12
 9c8:	add	ip, ip, #69632	; 0x11000
 9cc:	ldr	pc, [ip, #1512]!	; 0x5e8

000009d0 <strncmp@plt>:
 9d0:	add	ip, pc, #0, 12
 9d4:	add	ip, ip, #69632	; 0x11000
 9d8:	ldr	pc, [ip, #1504]!	; 0x5e0

000009dc <abort@plt>:
 9dc:	add	ip, pc, #0, 12
 9e0:	add	ip, ip, #69632	; 0x11000
 9e4:	ldr	pc, [ip, #1496]!	; 0x5d8

Disassembly of section .text:

000009e8 <error@@Base-0x784>:
     9e8:	blmi	fe61344c <error@@Base+0xfe6122e0>
     9ec:	push	{r1, r3, r4, r5, r6, sl, lr}
     9f0:			; <UNDEFINED> instruction: 0xf2ad4ff0
     9f4:	ldmpl	r3, {r2, r3, r8, sl, fp, lr}^
     9f8:			; <UNDEFINED> instruction: 0xf8df2400
     9fc:	ldmdavs	fp, {r2, r4, r6, r9, sp, pc}
     a00:	strcc	pc, [r4], #-2253	; 0xfffff733
     a04:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
     a08:	blx	e3ca10 <error@@Base+0xe3b8a4>
     a0c:	ldrbtmi	r4, [sl], #2705	; 0xa91
     a10:	blmi	fe49305c <error@@Base+0xfe491ef0>
     a14:	andhi	pc, r2, sl, asr r8	; <UNPREDICTABLE>
     a18:	bmi	fe451c0c <error@@Base+0xfe450aa0>
     a1c:	strvc	pc, [r0, #-1283]	; 0xfffffafd
     a20:			; <UNDEFINED> instruction: 0xf8404640
     a24:			; <UNDEFINED> instruction: 0xf8c83b08
     a28:			; <UNDEFINED> instruction: 0xf85a0004
     a2c:	blmi	fe35ca38 <error@@Base+0xfe35b8cc>
     a30:	ldrbtmi	r4, [fp], #-1593	; 0xfffff9c7
     a34:	blpl	23eb40 <error@@Base+0x23d9d4>
     a38:			; <UNDEFINED> instruction: 0xf85a6079
     a3c:	ldmdavs	r8, {r1, sp, lr}^
     a40:			; <UNDEFINED> instruction: 0xf8434633
     a44:	rsbsvs	r4, r3, r8, lsl #22
     a48:	blcs	b5ea5c <error@@Base+0xb5d8f0>
     a4c:	sbchi	pc, r6, r0
     a50:	ldrbtmi	r4, [r9], #-2437	; 0xfffff67b
     a54:	svc	0x00b6f7ff
     a58:	stmdacs	r0, {r0, r7, r9, sl, lr}
     a5c:	rschi	pc, sl, r0
     a60:	smlabbcs	r0, r2, sl, r4
     a64:	vstrge	d4, [r1, #-520]	; 0xfffffdf8
     a68:	andlt	pc, r2, sl, asr r8	; <UNPREDICTABLE>
     a6c:	andne	pc, r0, fp, asr #17
     a70:	andmi	pc, r3, sl, asr r8	; <UNPREDICTABLE>
     a74:	and	r6, r5, r1, lsr #32
     a78:	strtmi	r6, [r8], -r3, lsr #16
     a7c:	eorvs	r3, r3, r1, lsl #6
     a80:	cdp2	0, 7, cr15, cr2, cr0, {0}
     a84:	vst1.16	{d20-d22}, [pc], sl
     a88:	strtmi	r6, [r8], -r0, lsl #3
     a8c:	svc	0x0052f7ff
     a90:	mvnsle	r2, r0, lsl #16
     a94:	ldrdcc	pc, [r0], -fp
     a98:	vqrdmulh.s<illegal width 8>	d2, d0, d0
     a9c:	ldclmi	0, cr8, [r5], #-764	; 0xfffffd04
     aa0:	stmdavs	r0!, {r2, r3, r4, r5, r6, sl, lr}
     aa4:			; <UNDEFINED> instruction: 0xf0002800
     aa8:	ldmdbmi	r3!, {r0, r1, r5, r7, pc}^
     aac:			; <UNDEFINED> instruction: 0xf7ff4479
     ab0:	strmi	lr, [r4], -sl, lsl #31
     ab4:			; <UNDEFINED> instruction: 0xf0002800
     ab8:			; <UNDEFINED> instruction: 0xf8df80a9
     abc:	ldrbtmi	r9, [r9], #448	; 0x1c0
     ac0:	streq	pc, [r8, #-265]	; 0xfffffef7
     ac4:	beq	33cef0 <error@@Base+0x33bd84>
     ac8:	strtmi	r2, [r8], -r1, lsl #4
     acc:	ldrmi	r4, [r5], #-1571	; 0xfffff9dd
     ad0:			; <UNDEFINED> instruction: 0xf7ff4611
     ad4:	ldrbmi	lr, [r5, #-3912]	; 0xfffff0b8
     ad8:	andcs	sp, r1, #-2147483587	; 0x8000003d
     adc:	ldrmi	r4, [r1], -r3, lsr #12
     ae0:	andseq	pc, r0, r9, lsl #2
     ae4:	svc	0x003ef7ff
     ae8:	ldrdne	pc, [r4], -r8
     aec:	streq	pc, [r8, #-264]	; 0xfffffef8
     af0:	blne	1252378 <error@@Base+0x125120c>
     af4:	blx	ffb3cafc <error@@Base+0xffb3b990>
     af8:	ldrdcc	pc, [r4], -r8
     afc:	blcs	7870 <error@@Base+0x6704>
     b00:	movwcc	fp, #36804	; 0x8fc4
     b04:	cfstrsle	mvf4, [r8, #-608]	; 0xfffffda0
     b08:	strtmi	r2, [r8], -r1, lsl #4
     b0c:	ldrmi	r4, [r5], #-1571	; 0xfffff9dd
     b10:			; <UNDEFINED> instruction: 0xf7ff4611
     b14:	strbmi	lr, [r5, #-3880]	; 0xfffff0d8
     b18:	ldmdami	r9, {r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}^
     b1c:	ldrmi	r2, [r1], -r1, lsl #4
     b20:	ldrbtmi	r4, [r8], #-1571	; 0xfffff9dd
     b24:	streq	pc, [r8, #-263]	; 0xfffffef9
     b28:			; <UNDEFINED> instruction: 0xf7ff3014
     b2c:	ldmdavs	r9!, {r2, r3, r4, r8, r9, sl, fp, sp, lr, pc}^
     b30:	blne	12523b8 <error@@Base+0x125124c>
     b34:	blx	ff33cb3c <error@@Base+0xff33b9d0>
     b38:	blne	16dad2c <error@@Base+0x16d9bc0>
     b3c:	svclt	0x00c42b00
     b40:	ldmne	pc!, {r3, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     b44:	andcs	sp, r1, #8, 26	; 0x200
     b48:	strtmi	r4, [r3], -r8, lsr #12
     b4c:			; <UNDEFINED> instruction: 0x46114415
     b50:	svc	0x0008f7ff
     b54:	mvnsle	r4, pc, lsr #5
     b58:	andcs	r4, r1, #4849664	; 0x4a0000
     b5c:			; <UNDEFINED> instruction: 0x46234611
     b60:			; <UNDEFINED> instruction: 0xf1064478
     b64:	andscc	r0, r8, r8, lsl #10
     b68:	mrc	7, 7, APSR_nzcv, cr12, cr15, {7}
     b6c:			; <UNDEFINED> instruction: 0x46206871
     b70:			; <UNDEFINED> instruction: 0xf0001b49
     b74:	ldmdavs	r3!, {r0, r2, r3, r5, r7, r9, fp, ip, sp, lr, pc}^
     b78:	blcs	78ec <error@@Base+0x6780>
     b7c:	movwcc	fp, #36804	; 0x8fc4
     b80:	stcle	8, cr1, [r8, #-984]	; 0xfffffc28
     b84:	strtmi	r2, [r8], -r1, lsl #4
     b88:	ldrmi	r4, [r5], #-1571	; 0xfffff9dd
     b8c:			; <UNDEFINED> instruction: 0xf7ff4611
     b90:	adcmi	lr, lr, #3744	; 0xea0
     b94:	ldfmid	f5, [ip, #-984]!	; 0xfffffc28
     b98:	ldrmi	r2, [r1], -r1, lsl #4
     b9c:	ldrbtmi	r4, [sp], #-1571	; 0xfffff9dd
     ba0:	andseq	pc, ip, r5, lsl #2
     ba4:	streq	pc, [ip], -r5, lsl #2
     ba8:	mrc	7, 6, APSR_nzcv, cr12, cr15, {7}
     bac:	andcs	r3, r1, #62914560	; 0x3c00000
     bb0:			; <UNDEFINED> instruction: 0x46234630
     bb4:			; <UNDEFINED> instruction: 0x46114416
     bb8:	mrc	7, 6, APSR_nzcv, cr4, cr15, {7}
     bbc:	mvnsle	r4, lr, lsr #5
     bc0:	blmi	893490 <error@@Base+0x892324>
     bc4:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
     bc8:			; <UNDEFINED> instruction: 0xf8dd681a
     bcc:	subsmi	r3, sl, r4, lsl #8
     bd0:	andcs	sp, r0, r7, lsr r1
     bd4:	sfmmi	f7, 1, [ip, #-52]	; 0xffffffcc
     bd8:	svchi	0x00f0e8bd
     bdc:	blcs	1ecf0 <error@@Base+0x1db84>
     be0:	svcge	0x0036f47f
     be4:			; <UNDEFINED> instruction: 0xf85a4b2a
     be8:			; <UNDEFINED> instruction: 0xf8d33003
     bec:	ldr	r9, [r7, -r0]!
     bf0:	ldrbtmi	r4, [r8], #-2088	; 0xfffff7d8
     bf4:	mrc	7, 5, APSR_nzcv, cr12, cr15, {7}
     bf8:	stmdacs	r0, {r5, sp, lr}
     bfc:	svcge	0x0055f47f
     c00:	ldrbtmi	r4, [r8], #-2085	; 0xfffff7db
     c04:			; <UNDEFINED> instruction: 0xf910f000
     c08:	strb	r6, [lr, -r0, lsr #32]
     c0c:	ldrbtmi	r4, [fp], #-2851	; 0xfffff4dd
     c10:			; <UNDEFINED> instruction: 0xf7ff6818
     c14:	andcs	lr, r1, r2, lsr #29
     c18:	mrc	7, 5, APSR_nzcv, cr12, cr15, {7}
     c1c:	tstcs	r1, r0, lsr #16
     c20:			; <UNDEFINED> instruction: 0xf85a4a20
     c24:	ldrbtmi	r0, [sl], #-0
     c28:			; <UNDEFINED> instruction: 0xf7ff6800
     c2c:	andcs	lr, r1, r6, asr #29
     c30:	mrc	7, 5, APSR_nzcv, cr0, cr15, {7}
     c34:	ldrbtmi	r4, [fp], #-2844	; 0xfffff4e4
     c38:			; <UNDEFINED> instruction: 0xf7ff6858
     c3c:			; <UNDEFINED> instruction: 0xf000ee8e
     c40:			; <UNDEFINED> instruction: 0xf7fff8bd
     c44:	svclt	0x0000ee84
     c48:	andeq	r1, r1, ip, ror r5
     c4c:	andeq	r0, r0, r0, rrx
     c50:	andeq	r1, r1, sl, asr r5
     c54:	andeq	r0, r0, ip, ror r0
     c58:	andeq	r0, r0, r4, rrx
     c5c:	andeq	r1, r1, r0, lsl r6
     c60:	andeq	r0, r0, ip, lsl #1
     c64:	andeq	r1, r1, r6, lsr #17
     c68:	andeq	r0, r0, sl, lsl pc
     c6c:	andeq	r0, r0, r8, lsl #1
     c70:	andeq	r0, r0, r0, lsl #1
     c74:	andeq	r1, r1, r8, lsr r8
     c78:	strdeq	r0, [r0], -r4
     c7c:	andeq	r1, r1, r6, asr #10
     c80:	andeq	r1, r1, r2, ror #9
     c84:	andeq	r1, r1, r4, lsr #9
     c88:	andeq	r1, r1, r6, ror #8
     c8c:	andeq	r1, r1, r4, lsr #7
     c90:	andeq	r0, r0, r4, ror r0
     c94:	muleq	r0, lr, sp
     c98:	muleq	r0, r6, sp
     c9c:	andeq	r1, r1, sl, asr #13
     ca0:	andeq	r0, r0, r8, rrx
     ca4:	andeq	r0, r0, sl, asr #26
     ca8:	andeq	r1, r1, r2, lsr #13
     cac:	bleq	3cdf0 <error@@Base+0x3bc84>
     cb0:	cdpeq	0, 0, cr15, cr0, cr15, {2}
     cb4:	strbtmi	fp, [sl], -r2, lsl #24
     cb8:	strlt	fp, [r1], #-1028	; 0xfffffbfc
     cbc:	ldrdge	pc, [r4], -pc	; <UNPREDICTABLE>
     cc0:	ldrmi	sl, [sl], #776	; 0x308
     cc4:	ldrdgt	pc, [r0], -pc	; <UNPREDICTABLE>
     cc8:	andgt	pc, ip, sl, asr r8	; <UNPREDICTABLE>
     ccc:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
     cd0:			; <UNDEFINED> instruction: 0xf85a4b06
     cd4:	stmdami	r6, {r0, r1, ip, sp}
     cd8:	andeq	pc, r0, sl, asr r8	; <UNPREDICTABLE>
     cdc:	mcr	7, 2, pc, cr14, cr15, {7}	; <UNPREDICTABLE>
     ce0:	mrc	7, 3, APSR_nzcv, cr12, cr15, {7}
     ce4:	andeq	r1, r1, r8, lsl #5
     ce8:	andeq	r0, r0, r4, asr r0
     cec:	andeq	r0, r0, r8, ror r0
     cf0:	andeq	r0, r0, r4, lsl #1
     cf4:	ldr	r3, [pc, #20]	; d10 <abort@plt+0x334>
     cf8:	ldr	r2, [pc, #20]	; d14 <abort@plt+0x338>
     cfc:	add	r3, pc, r3
     d00:	ldr	r2, [r3, r2]
     d04:	cmp	r2, #0
     d08:	bxeq	lr
     d0c:	b	988 <__gmon_start__@plt>
     d10:	andeq	r1, r1, r8, ror #4
     d14:	andeq	r0, r0, ip, rrx
     d18:	blmi	1d2d38 <error@@Base+0x1d1bcc>
     d1c:	bmi	1d1f04 <error@@Base+0x1d0d98>
     d20:	addmi	r4, r3, #2063597568	; 0x7b000000
     d24:	andle	r4, r3, sl, ror r4
     d28:	ldmpl	r3, {r0, r2, r8, r9, fp, lr}^
     d2c:	ldrmi	fp, [r8, -r3, lsl #2]
     d30:	svclt	0x00004770
     d34:			; <UNDEFINED> instruction: 0x000115b8
     d38:			; <UNDEFINED> instruction: 0x000115b4
     d3c:	andeq	r1, r1, r4, asr #4
     d40:	andeq	r0, r0, ip, asr r0
     d44:	stmdbmi	r9, {r3, fp, lr}
     d48:	bmi	251f30 <error@@Base+0x250dc4>
     d4c:	bne	251f38 <error@@Base+0x250dcc>
     d50:	svceq	0x00cb447a
     d54:			; <UNDEFINED> instruction: 0x01a1eb03
     d58:	andle	r1, r3, r9, asr #32
     d5c:	ldmpl	r3, {r0, r2, r8, r9, fp, lr}^
     d60:	ldrmi	fp, [r8, -r3, lsl #2]
     d64:	svclt	0x00004770
     d68:	andeq	r1, r1, ip, lsl #11
     d6c:	andeq	r1, r1, r8, lsl #11
     d70:	andeq	r1, r1, r8, lsl r2
     d74:	muleq	r0, r0, r0
     d78:	blmi	2ae1a0 <error@@Base+0x2ad034>
     d7c:	ldrbtmi	r4, [fp], #-2570	; 0xfffff5f6
     d80:	ldmdavc	fp, {r1, r3, r4, r5, r6, sl, lr}
     d84:	blmi	26f338 <error@@Base+0x26e1cc>
     d88:	ldrdlt	r5, [r3, -r3]!
     d8c:	ldrbtmi	r4, [fp], #-2824	; 0xfffff4f8
     d90:			; <UNDEFINED> instruction: 0xf7ff6818
     d94:			; <UNDEFINED> instruction: 0xf7ffedca
     d98:	blmi	1c0c9c <error@@Base+0x1bfb30>
     d9c:	ldrbtmi	r2, [fp], #-513	; 0xfffffdff
     da0:	stclt	0, cr7, [r8, #-104]	; 0xffffff98
     da4:	andeq	r1, r1, r6, asr r5
     da8:	andeq	r1, r1, r8, ror #3
     dac:	andeq	r0, r0, r8, asr r0
     db0:	andeq	r1, r1, r2, ror r2
     db4:	andeq	r1, r1, r6, lsr r5
     db8:	svclt	0x0000e7c4
     dbc:	eorcs	fp, r3, #8, 10	; 0x2000000
     dc0:	tstcs	r1, r6, lsl #22
     dc4:	ldrbtmi	r4, [fp], #-3078	; 0xfffff3fa
     dc8:	ldmdbpl	fp, {r1, r2, fp, lr}
     dcc:	ldmdavs	fp, {r3, r4, r5, r6, sl, lr}
     dd0:	stcl	7, cr15, [r8, #1020]	; 0x3fc
     dd4:			; <UNDEFINED> instruction: 0xf7ff2001
     dd8:	svclt	0x0000edde
     ddc:	andeq	r1, r1, r2, lsr #3
     de0:	andeq	r0, r0, r8, rrx
     de4:	andeq	r0, r0, r0, lsr sl
     de8:	strdlt	fp, [r3], r0
     dec:	andls	r4, r1, lr, lsl #12
     df0:	ldcl	7, cr15, [r6, #1020]	; 0x3fc
     df4:	ldrtmi	r4, [r0], -r4, lsl #12
     df8:	ldcl	7, cr15, [r2, #1020]	; 0x3fc
     dfc:	strmi	r2, [r7], -r1, lsl #2
     e00:	andcc	r1, r2, r0, lsr #16
     e04:	stc	7, cr15, [r4, #1020]	; 0x3fc
     e08:	strtmi	r9, [r2], -r1, lsl #18
     e0c:			; <UNDEFINED> instruction: 0xf7ff4605
     e10:	stclne	13, cr14, [r0], #-608	; 0xfffffda0
     e14:	strtmi	r1, [r8], #-3194	; 0xfffff386
     e18:			; <UNDEFINED> instruction: 0x232f4631
     e1c:			; <UNDEFINED> instruction: 0xf7ff552b
     e20:			; <UNDEFINED> instruction: 0x4628ed90
     e24:	ldcllt	0, cr11, [r0, #12]!
     e28:			; <UNDEFINED> instruction: 0x4604b538
     e2c:	stcmi	8, cr4, [pc, #-56]	; dfc <abort@plt+0x420>
     e30:			; <UNDEFINED> instruction: 0xf7ff4478
     e34:	ldrbtmi	lr, [sp], #-3486	; 0xfffff262
     e38:	stmdavc	r3, {r3, r8, ip, sp, pc}
     e3c:	blmi	32f430 <error@@Base+0x32e2c4>
     e40:	stmdami	ip, {r0, r8, sp}
     e44:	stmiapl	fp!, {r2, r3, r5, r9, sp}^
     e48:	ldmdavs	fp, {r3, r4, r5, r6, sl, lr}
     e4c:	stc	7, cr15, [sl, #1020]	; 0x3fc
     e50:	strtmi	r4, [r1], -r9, lsl #16
     e54:	pop	{r3, r4, r5, r6, sl, lr}
     e58:			; <UNDEFINED> instruction: 0xf7ff4038
     e5c:	strtmi	fp, [r1], -r5, asr #31
     e60:	ldrhtmi	lr, [r8], -sp
     e64:	svclt	0x00c0f7ff
     e68:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     e6c:	andeq	r1, r1, r2, lsr r1
     e70:	andeq	r0, r0, r8, rrx
     e74:	andeq	r0, r0, r0, ror #19
     e78:	andeq	r0, r0, r4, lsl #20
     e7c:	andcs	r4, r0, #63488	; 0xf800
     e80:	svcmi	0x00f0e92d
     e84:	addlt	r4, r5, fp, ror r4
     e88:	ldrsbtge	pc, [r0], #143	; 0x8f	; <UNPREDICTABLE>
     e8c:			; <UNDEFINED> instruction: 0x4604601a
     e90:	ldrbtmi	r4, [sl], #2875	; 0xb3b
     e94:	ldrdlt	pc, [ip], #143	; 0x8f	; <UNPREDICTABLE>
     e98:	ldrbtmi	r4, [fp], #-1550	; 0xfffff9f2
     e9c:	blmi	ea5aa8 <error@@Base+0xea493c>
     ea0:			; <UNDEFINED> instruction: 0xf8df44fb
     ea4:	ldrbtmi	r8, [fp], #-232	; 0xffffff18
     ea8:	blmi	e65ab8 <error@@Base+0xe6494c>
     eac:	ldrbtmi	r4, [fp], #-1272	; 0xfffffb08
     eb0:	strtmi	r9, [r1], r3, lsl #6
     eb4:	stccs	12, cr3, [r0], {1}
     eb8:	ldmdavs	r5!, {r2, r3, r6, r8, sl, fp, ip, lr, pc}^
     ebc:	stmdavc	fp!, {r0, r1, r2, r4, r5, r8, sl, fp, ip}
     ec0:	teqle	sp, sp, lsr #22
     ec4:	bcs	1f074 <error@@Base+0x1df08>
     ec8:	bcs	b74fb8 <error@@Base+0xb73e4c>
     ecc:	bcs	1bf4f2c <error@@Base+0x1bf3dc0>
     ed0:	stfned	f5, [fp], #24
     ed4:	andcc	pc, r0, sl, asr #17
     ed8:			; <UNDEFINED> instruction: 0xb32378ab
     edc:			; <UNDEFINED> instruction: 0xe7e8463e
     ee0:	bcs	15b7004 <error@@Base+0x15b5e98>
     ee4:	blmi	af5400 <error@@Base+0xaf4294>
     ee8:	stmdbmi	fp!, {r0, sp}
     eec:	andcs	pc, r3, r8, asr r8	; <UNPREDICTABLE>
     ef0:			; <UNDEFINED> instruction: 0xf7ff4479
     ef4:	andcs	lr, r0, ip, asr sp
     ef8:	stcl	7, cr15, [ip, #-1020]	; 0xfffffc04
     efc:	bicslt	r7, fp, fp, lsr #17
     f00:	ldrbmi	r2, [r9], -r8, lsl #4
     f04:			; <UNDEFINED> instruction: 0xf7ff4628
     f08:	bllt	163c4a0 <error@@Base+0x163b334>
     f0c:	teqlt	fp, fp, lsr #20
     f10:			; <UNDEFINED> instruction: 0xd12e2b3d
     f14:			; <UNDEFINED> instruction: 0xf1059901
     f18:	bvc	1ac1744 <error@@Base+0x1ac05d8>
     f1c:	ldrb	r6, [ip, sl]
     f20:	strcc	r9, [r8, #-2818]	; 0xfffff4fe
     f24:			; <UNDEFINED> instruction: 0xf1a9601d
     f28:	cfstrscs	mvf0, [r0], {2}
     f2c:	ldmdavs	fp!, {r0, r5, r8, sl, fp, ip, lr, pc}^
     f30:	bls	ce758 <error@@Base+0xcd5ec>
     f34:			; <UNDEFINED> instruction: 0xe7bc6013
     f38:	streq	pc, [r2], #-425	; 0xfffffe57
     f3c:	streq	pc, [r8, -r6, lsl #2]
     f40:	ldcle	12, cr2, [r6], {1}
     f44:	blmi	575364 <error@@Base+0x5741f8>
     f48:	ldrbtmi	r6, [fp], #-2106	; 0xfffff7c6
     f4c:	andlt	r6, r5, sl, asr r0
     f50:	svchi	0x00f0e8bd
     f54:	ldrbtmi	r4, [r8], #-2066	; 0xfffff7ee
     f58:			; <UNDEFINED> instruction: 0xff66f7ff
     f5c:	ldrbtmi	r4, [fp], #-2833	; 0xfffff4ef
     f60:	ubfx	r6, r8, #0, #21
     f64:			; <UNDEFINED> instruction: 0x46284910
     f68:			; <UNDEFINED> instruction: 0xf7ff4479
     f6c:	stmdacs	r0, {r3, r4, r6, r7, sl, fp, sp, lr, pc}
     f70:			; <UNDEFINED> instruction: 0xf7ffd0b9
     f74:	svclt	0x0000ff23
     f78:	andeq	r1, r1, r4, asr r4
     f7c:	andeq	r1, r1, r6, asr #8
     f80:	andeq	r1, r1, lr, lsr r4
     f84:			; <UNDEFINED> instruction: 0x000009bc
     f88:	andeq	r1, r1, r2, lsr r4
     f8c:	strheq	r1, [r1], -ip
     f90:	andeq	r1, r1, sl, lsr #8
     f94:	andeq	r0, r0, r0, ror r0
     f98:	andeq	r0, r0, r4, lsl #19
     f9c:	andeq	r1, r1, lr, lsl #7
     fa0:	andeq	r0, r0, r6, lsr r9
     fa4:	andeq	r1, r1, sl, ror r3
     fa8:	andeq	r0, r0, r0, lsl #18
     fac:	stmdami	lr, {r0, r2, r3, r8, r9, fp, lr}
     fb0:	stmdbmi	lr, {r0, r1, r3, r4, r5, r6, sl, lr}
     fb4:	strcs	fp, [r0], #-1136	; 0xfffffb90
     fb8:	bmi	357034 <error@@Base+0x355ec8>
     fbc:	ldrbtmi	r4, [sl], #-1576	; 0xfffff9d8
     fc0:	blcs	23f0c8 <error@@Base+0x23df5c>
     fc4:	strvc	pc, [r0], -r2, lsl #10
     fc8:	ldmdapl	r8, {r3, r5, r6, sp, lr}^
     fcc:	strmi	r4, [r1], -r9, lsl #20
     fd0:	blvs	23f0dc <error@@Base+0x23df70>
     fd4:	ldmpl	sl, {r0, r6, sp, lr}
     fd8:			; <UNDEFINED> instruction: 0xf8434613
     fdc:			; <UNDEFINED> instruction: 0xbc704b08
     fe0:			; <UNDEFINED> instruction: 0x47706053
     fe4:			; <UNDEFINED> instruction: 0x00010fb8
     fe8:	andeq	r0, r0, ip, ror r0
     fec:	andeq	r0, r0, r4, rrx
     ff0:	andeq	r1, r1, sl, rrx
     ff4:	andeq	r0, r0, ip, lsl #1
     ff8:	blcs	25f00c <error@@Base+0x25dea0>
     ffc:	blcs	830c64 <error@@Base+0x82faf8>
    1000:			; <UNDEFINED> instruction: 0xf810d105
    1004:	blcs	250c10 <error@@Base+0x24faa4>
    1008:	blcs	830c70 <error@@Base+0x82fb04>
    100c:			; <UNDEFINED> instruction: 0x4770d0f9
    1010:			; <UNDEFINED> instruction: 0xf0037803
    1014:	blcs	241b98 <error@@Base+0x240a2c>
    1018:	bcs	30c80 <error@@Base+0x2fb14>
    101c:			; <UNDEFINED> instruction: 0xf810d007
    1020:			; <UNDEFINED> instruction: 0xf0033f01
    1024:	blcs	241ba8 <error@@Base+0x240a3c>
    1028:	bcs	30c90 <error@@Base+0x2fb24>
    102c:			; <UNDEFINED> instruction: 0x4770d1f7
    1030:	blcs	25f044 <error@@Base+0x25ded8>
    1034:	blcs	830c9c <error@@Base+0x82fb30>
    1038:			; <UNDEFINED> instruction: 0xf810d105
    103c:	blcs	250c48 <error@@Base+0x24fadc>
    1040:	blcs	830ca8 <error@@Base+0x82fb3c>
    1044:	blcs	375430 <error@@Base+0x3742c4>
    1048:	vtst.8	d29, d2, d12
    104c:	sbcsmi	r4, sl, r1, lsl #4
    1050:	svceq	0x0001f012
    1054:	tstle	ip, r2, lsl #12
    1058:	vqdmulh.s<illegal width 8>	d18, d2, d19
    105c:	andsle	r4, r6, r1, lsl #2
    1060:			; <UNDEFINED> instruction: 0xf812b410
    1064:	blcs	350c70 <error@@Base+0x34fb04>
    1068:	vst1.8	{d15-d16}, [r3 :128], r1
    106c:	strbeq	sp, [r4, r1, lsl #16]!
    1070:	blcs	8f6084 <error@@Base+0x8f4f18>
    1074:	addmi	sp, r2, #1073741885	; 0x4000003d
    1078:	movwcs	sp, #275	; 0x113
    107c:			; <UNDEFINED> instruction: 0xf85d7013
    1080:	ldrbmi	r4, [r0, -r4, lsl #22]!
    1084:	strmi	r2, [r2], -r3, lsr #22
    1088:	tstmi	r1, r2, asr #4	; <UNPREDICTABLE>
    108c:	addmi	sp, r2, #232, 2	; 0x3a
    1090:	movwcs	sp, #258	; 0x102
    1094:			; <UNDEFINED> instruction: 0x47707013
    1098:	stccc	8, cr15, [r1], {18}
    109c:	sbcsle	r2, pc, ip, asr fp	; <UNPREDICTABLE>
    10a0:			; <UNDEFINED> instruction: 0xf812e7f7
    10a4:	blcs	17100b0 <error@@Base+0x170ef44>
    10a8:	ubfx	sp, fp, #1, #7
    10ac:	vstrle	s4, [sp, #-0]
    10b0:	stmne	sp, {r4, r5, r6, r8, sl, ip, sp, pc}
    10b4:	strmi	r4, [ip], -r6, lsl #12
    10b8:	strtmi	r2, [r0], -r1, lsl #4
    10bc:	ldrmi	r4, [r4], #-1587	; 0xfffff9cd
    10c0:			; <UNDEFINED> instruction: 0xf7ff4611
    10c4:	adcmi	lr, r5, #80, 24	; 0x5000
    10c8:	ldfltp	f5, [r0, #-984]!	; 0xfffffc28
    10cc:	svclt	0x00004770
    10d0:			; <UNDEFINED> instruction: 0x460cb570
    10d4:			; <UNDEFINED> instruction: 0x4603491f
    10d8:			; <UNDEFINED> instruction: 0xf5b44a1f
    10dc:	ldrbtmi	r5, [r9], #-3968	; 0xfffff080
    10e0:	addlt	r4, r6, lr, lsl r8
    10e4:	ldrbtmi	r5, [r8], #-2186	; 0xfffff776
    10e8:	andls	r6, r5, #1179648	; 0x120000
    10ec:	andeq	pc, r0, #79	; 0x4f
    10f0:			; <UNDEFINED> instruction: 0xf10dd21e
    10f4:	andcs	r0, r1, #79691776	; 0x4c00000
    10f8:			; <UNDEFINED> instruction: 0xf0044611
    10fc:			; <UNDEFINED> instruction: 0x4628063f
    1100:			; <UNDEFINED> instruction: 0xf88d9303
    1104:			; <UNDEFINED> instruction: 0xf7ff6013
    1108:	andcs	lr, r1, #11776	; 0x2e00
    110c:	ldrmi	r9, [r1], -r3, lsl #22
    1110:	stmibeq	r4!, {r3, r5, r9, sl, lr}
    1114:	andsmi	pc, r3, sp, lsl #17
    1118:	stc	7, cr15, [r4], #-1020	; 0xfffffc04
    111c:	blmi	393964 <error@@Base+0x3927f8>
    1120:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    1124:	blls	15b194 <error@@Base+0x15a028>
    1128:	tstle	r0, sl, asr r0
    112c:	ldcllt	0, cr11, [r0, #-24]!	; 0xffffffe8
    1130:	strtmi	r4, [r3], -ip, lsl #26
    1134:	vst1.8	{d20-d21}, [pc], ip
    1138:	smlabbcs	r1, r0, r6, r5
    113c:	ldrbtmi	r5, [sl], #-2368	; 0xfffff6c0
    1140:	stmdavs	r0, {r9, sl, ip, pc}
    1144:	ldc	7, cr15, [r8], #-1020	; 0xfffffc04
    1148:			; <UNDEFINED> instruction: 0xf7ff2001
    114c:			; <UNDEFINED> instruction: 0xf7ffec24
    1150:	svclt	0x0000ebfe
    1154:	andeq	r0, r1, sl, lsl #29
    1158:	andeq	r0, r0, r0, rrx
    115c:	andeq	r0, r1, r2, lsl #29
    1160:	andeq	r0, r1, r8, asr #28
    1164:	andeq	r0, r0, r8, rrx
    1168:	andeq	r0, r0, sl, asr r7

0000116c <error@@Base>:
    116c:	push	{r4, r5, r6, lr}
    116e:	sub	sp, #8
    1170:	ldr	r4, [pc, #40]	; (119c <error@@Base+0x30>)
    1172:	movs	r1, #1
    1174:	ldr	r5, [pc, #40]	; (11a0 <error@@Base+0x34>)
    1176:	ldr	r3, [pc, #44]	; (11a4 <error@@Base+0x38>)
    1178:	add	r4, pc
    117a:	ldr	r2, [pc, #44]	; (11a8 <error@@Base+0x3c>)
    117c:	ldr	r6, [r4, r5]
    117e:	ldr	r5, [r4, r3]
    1180:	add	r2, pc
    1182:	str	r0, [sp, #0]
    1184:	ldr	r3, [r6, #0]
    1186:	ldr	r0, [r5, #0]
    1188:	blx	9b8 <__fprintf_chk@plt>
    118c:	ldr	r3, [pc, #28]	; (11ac <error@@Base+0x40>)
    118e:	ldr	r2, [r4, r3]
    1190:	ldr	r3, [r2, #0]
    1192:	adds	r3, #1
    1194:	str	r3, [r2, #0]
    1196:	add	sp, #8
    1198:	pop	{r4, r5, r6, pc}
    119a:	nop
    119c:	lsrs	r0, r6, #23
    119e:	movs	r1, r0
    11a0:	lsls	r0, r0, #2
    11a2:	movs	r0, r0
    11a4:	lsls	r0, r5, #1
    11a6:	movs	r0, r0
    11a8:	lsls	r4, r7, #28
    11aa:	movs	r0, r0
    11ac:	lsls	r0, r1, #2
    11ae:	movs	r0, r0
    11b0:	ldr	r3, [r0, #0]
    11b2:	push	{r4, r5, r6, lr}
    11b4:	mov	r4, r0
    11b6:	ldrb	r2, [r3, #0]
    11b8:	cmp	r2, #92	; 0x5c
    11ba:	beq.n	11ec <error@@Base+0x80>
    11bc:	cmp	r2, #94	; 0x5e
    11be:	beq.n	1216 <error@@Base+0xaa>
    11c0:	adds	r2, r3, #1
    11c2:	str	r2, [r0, #0]
    11c4:	ldrb	r2, [r3, #0]
    11c6:	movs	r4, #0
    11c8:	ldr	r3, [pc, #432]	; (137c <error@@Base+0x210>)
    11ca:	add	r3, pc
    11cc:	sub.w	r0, r2, #11
    11d0:	cmp	r1, r4
    11d2:	clz	r0, r0
    11d6:	strb	r2, [r3, #8]
    11d8:	strb	r4, [r3, #9]
    11da:	mov.w	r0, r0, lsr #5
    11de:	it	eq
    11e0:	moveq	r0, #0
    11e2:	cbnz	r0, 122e <error@@Base+0xc2>
    11e4:	ldr	r0, [pc, #408]	; (1380 <error@@Base+0x214>)
    11e6:	add	r0, pc
    11e8:	adds	r0, #8
    11ea:	pop	{r4, r5, r6, pc}
    11ec:	ldrb	r2, [r3, #1]
    11ee:	cmp	r2, #55	; 0x37
    11f0:	bls.n	1234 <error@@Base+0xc8>
    11f2:	subs	r2, #98	; 0x62
    11f4:	uxtb	r0, r2
    11f6:	cmp	r0, #18
    11f8:	bhi.n	1238 <error@@Base+0xcc>
    11fa:	cmp	r2, #18
    11fc:	bhi.n	1238 <error@@Base+0xcc>
    11fe:	tbb	[pc, r2]
    1202:	subs	r7, r4, r4
    1204:	cmp	r4, #27
    1206:	subs	r3, r3, r4
    1208:	subs	r3, r3, r4
    120a:	adds	r4, #27
    120c:	subs	r3, r3, r4
    120e:	subs	r0, r3, r5
    1210:	subs	r3, r3, r4
    1212:	subs	r5, r3, r5
    1214:	movs	r2, r4
    1216:	adds	r1, r3, #2
    1218:	str	r1, [r0, #0]
    121a:	ldrb	r3, [r3, #1]
    121c:	movs	r1, #0
    121e:	ldr	r2, [pc, #356]	; (1384 <error@@Base+0x218>)
    1220:	and.w	r3, r3, #31
    1224:	add	r2, pc
    1226:	cmp	r3, #11
    1228:	strb	r1, [r2, #9]
    122a:	strb	r3, [r2, #8]
    122c:	bne.n	11e4 <error@@Base+0x78>
    122e:	ldr	r0, [pc, #344]	; (1388 <error@@Base+0x21c>)
    1230:	add	r0, pc
    1232:	pop	{r4, r5, r6, pc}
    1234:	cmp	r2, #47	; 0x2f
    1236:	bhi.n	131c <error@@Base+0x1b0>
    1238:	adds	r2, r3, #2
    123a:	str	r2, [r4, #0]
    123c:	ldrb	r2, [r3, #1]
    123e:	movs	r4, #0
    1240:	ldr	r3, [pc, #328]	; (138c <error@@Base+0x220>)
    1242:	add	r3, pc
    1244:	b.n	11cc <error@@Base+0x60>
    1246:	ldr	r0, [pc, #328]	; (1390 <error@@Base+0x224>)
    1248:	adds	r3, #2
    124a:	str	r3, [r4, #0]
    124c:	add	r0, pc
    124e:	pop	{r4, r5, r6, pc}
    1250:	ldr	r0, [pc, #320]	; (1394 <error@@Base+0x228>)
    1252:	adds	r3, #2
    1254:	str	r3, [r4, #0]
    1256:	add	r0, pc
    1258:	pop	{r4, r5, r6, pc}
    125a:	ldr	r0, [pc, #316]	; (1398 <error@@Base+0x22c>)
    125c:	adds	r3, #2
    125e:	movs	r2, #27
    1260:	str	r3, [r4, #0]
    1262:	add	r0, pc
    1264:	strh.w	r2, [r0, #8]!
    1268:	pop	{r4, r5, r6, pc}
    126a:	cmp	r1, #0
    126c:	beq.n	1364 <error@@Base+0x1f8>
    126e:	ldrb	r2, [r3, #2]
    1270:	adds	r5, r3, #3
    1272:	subs	r2, #68	; 0x44
    1274:	cmp	r2, #52	; 0x34
    1276:	bhi.n	12c6 <error@@Base+0x15a>
    1278:	tbb	[pc, r2]
    127c:	movs	r5, #64	; 0x40
    127e:	movs	r5, #37	; 0x25
    1280:	movs	r5, #37	; 0x25
    1282:	movs	r5, #37	; 0x25
    1284:	movs	r5, #37	; 0x25
    1286:	movs	r5, #37	; 0x25
    1288:	movs	r5, #37	; 0x25
    128a:	movs	r5, #37	; 0x25
    128c:	cmp	r6, #37	; 0x25
    128e:	movs	r5, #37	; 0x25
    1290:	movs	r5, #37	; 0x25
    1292:	movs	r5, #37	; 0x25
    1294:	movs	r5, #37	; 0x25
    1296:	movs	r5, #37	; 0x25
    1298:	movs	r5, #37	; 0x25
    129a:	movs	r5, #37	; 0x25
    129c:	ldr	r2, [pc, #312]	; (13d8 <error@@Base+0x26c>)
    129e:	movs	r5, #37	; 0x25
    12a0:	movs	r5, #72	; 0x48
    12a2:	movs	r5, #37	; 0x25
    12a4:	movs	r5, #70	; 0x46
    12a6:	movs	r5, #37	; 0x25
    12a8:	movs	r5, #37	; 0x25
    12aa:	movs	r5, #76	; 0x4c
    12ac:	add	r5, r4
    12ae:	movs	r5, #37	; 0x25
    12b0:	lsls	r2, r0, #1
    12b2:	ldr	r0, [pc, #232]	; (139c <error@@Base+0x230>)
    12b4:	adds	r3, #2
    12b6:	str	r3, [r4, #0]
    12b8:	add	r0, pc
    12ba:	pop	{r4, r5, r6, pc}
    12bc:	ldr	r0, [pc, #224]	; (13a0 <error@@Base+0x234>)
    12be:	adds	r3, #2
    12c0:	str	r3, [r4, #0]
    12c2:	add	r0, pc
    12c4:	pop	{r4, r5, r6, pc}
    12c6:	ldr	r0, [pc, #220]	; (13a4 <error@@Base+0x238>)
    12c8:	movs	r1, #0
    12ca:	add	r0, pc
    12cc:	bl	116c <error@@Base>
    12d0:	ldr	r0, [pc, #212]	; (13a8 <error@@Base+0x23c>)
    12d2:	str	r5, [r4, #0]
    12d4:	add	r0, pc
    12d6:	pop	{r4, r5, r6, pc}
    12d8:	movs	r0, #5
    12da:	ldr	r3, [pc, #208]	; (13ac <error@@Base+0x240>)
    12dc:	movs	r6, #11
    12de:	str	r5, [r4, #0]
    12e0:	movw	r1, #257	; 0x101
    12e4:	add	r3, pc
    12e6:	mov.w	r4, #262	; 0x106
    12ea:	movs	r2, #0
    12ec:	strb	r0, [r3, #9]
    12ee:	add.w	r0, r3, #8
    12f2:	strb	r6, [r3, #8]
    12f4:	strh	r4, [r3, #10]
    12f6:	strh	r1, [r3, #12]
    12f8:	strb	r2, [r3, #14]
    12fa:	pop	{r4, r5, r6, pc}
    12fc:	movs	r0, #6
    12fe:	b.n	12da <error@@Base+0x16e>
    1300:	movs	r0, #9
    1302:	b.n	12da <error@@Base+0x16e>
    1304:	movs	r0, #3
    1306:	b.n	12da <error@@Base+0x16e>
    1308:	movs	r0, #2
    130a:	b.n	12da <error@@Base+0x16e>
    130c:	movs	r0, #7
    130e:	b.n	12da <error@@Base+0x16e>
    1310:	movs	r0, #8
    1312:	b.n	12da <error@@Base+0x16e>
    1314:	movs	r0, #1
    1316:	b.n	12da <error@@Base+0x16e>
    1318:	movs	r0, #4
    131a:	b.n	12da <error@@Base+0x16e>
    131c:	adds	r0, r3, #1
    131e:	adds	r3, #4
    1320:	movs	r5, #0
    1322:	add.w	r5, r2, r5, lsl #3
    1326:	ldrb.w	r2, [r0, #1]!
    132a:	subs	r5, #48	; 0x30
    132c:	sub.w	r6, r2, #48	; 0x30
    1330:	and.w	r5, r5, #255	; 0xff
    1334:	cmp	r6, #7
    1336:	bhi.n	1378 <error@@Base+0x20c>
    1338:	cmp	r0, r3
    133a:	bne.n	1322 <error@@Base+0x1b6>
    133c:	sub.w	r2, r5, #11
    1340:	str	r3, [r4, #0]
    1342:	clz	r2, r2
    1346:	lsrs	r2, r2, #5
    1348:	cmp	r1, #0
    134a:	ite	ne
    134c:	movne	r1, r2
    134e:	moveq	r1, #0
    1350:	cmp	r1, #0
    1352:	bne.w	122e <error@@Base+0xc2>
    1356:	ldr	r3, [pc, #88]	; (13b0 <error@@Base+0x244>)
    1358:	add	r3, pc
    135a:	add.w	r0, r3, #8
    135e:	strb	r5, [r3, #8]
    1360:	strb	r1, [r3, #9]
    1362:	pop	{r4, r5, r6, pc}
    1364:	ldr	r2, [pc, #76]	; (13b4 <error@@Base+0x248>)
    1366:	adds	r0, r3, #2
    1368:	str	r0, [r4, #0]
    136a:	ldrb	r4, [r3, #1]
    136c:	add	r2, pc
    136e:	add.w	r0, r2, #8
    1372:	strb	r1, [r2, #9]
    1374:	strb	r4, [r2, #8]
    1376:	pop	{r4, r5, r6, pc}
    1378:	mov	r3, r0
    137a:	b.n	133c <error@@Base+0x1d0>
    137c:	asrs	r6, r1, #4
    137e:	movs	r1, r0
    1380:	asrs	r2, r6, #3
    1382:	movs	r1, r0
    1384:	asrs	r4, r6, #2
    1386:	movs	r1, r0
    1388:	lsrs	r4, r2, #23
    138a:	movs	r1, r0
    138c:	asrs	r6, r2, #2
    138e:	movs	r1, r0
    1390:	lsls	r0, r1, #26
    1392:	movs	r0, r0
    1394:	lsls	r6, r6, #25
    1396:	movs	r0, r0
    1398:	asrs	r6, r6, #1
    139a:	movs	r1, r0
    139c:	lsls	r0, r0, #24
    139e:	movs	r0, r0
    13a0:	lsls	r6, r1, #24
    13a2:	movs	r0, r0
    13a4:	lsls	r6, r1, #24
    13a6:	movs	r0, r0
    13a8:	lsls	r4, r6, #23
    13aa:	movs	r0, r0
    13ac:	lsrs	r4, r6, #31
    13ae:	movs	r1, r0
    13b0:	lsrs	r0, r0, #30
    13b2:	movs	r1, r0
    13b4:	lsrs	r4, r5, #29
    13b6:	movs	r1, r0
    13b8:	ldr	r0, [pc, #16]	; (13cc <error@@Base+0x260>)
    13ba:	movs	r1, #0
    13bc:	push	{r3, lr}
    13be:	add	r0, pc
    13c0:	bl	116c <error@@Base>
    13c4:	movs	r0, #1
    13c6:	blx	994 <exit@plt>
    13ca:	nop
    13cc:	lsls	r2, r6, #20
    13ce:	movs	r0, r0
    13d0:	push	{r3, lr}
    13d2:	ldr	r3, [pc, #28]	; (13f0 <error@@Base+0x284>)
    13d4:	add	r3, pc
    13d6:	ldr	r3, [r3, #0]
    13d8:	add.w	r1, r3, #1008	; 0x3f0
    13dc:	ldr	r2, [r3, #4]
    13de:	cmp	r2, r1
    13e0:	bcs.n	13ea <error@@Base+0x27e>
    13e2:	adds	r1, r2, #1
    13e4:	str	r1, [r3, #4]
    13e6:	strb	r0, [r2, #0]
    13e8:	pop	{r3, pc}
    13ea:	bl	13b8 <error@@Base+0x24c>
    13ee:	nop
    13f0:	lsrs	r0, r2, #17
    13f2:	movs	r1, r0
    13f4:	ldrb	r1, [r0, #0]
    13f6:	cbz	r1, 141a <error@@Base+0x2ae>
    13f8:	push	{r3, r4, r5, lr}
    13fa:	ldr	r5, [pc, #36]	; (1420 <error@@Base+0x2b4>)
    13fc:	add	r5, pc
    13fe:	ldr	r3, [r5, #0]
    1400:	add.w	r4, r3, #1008	; 0x3f0
    1404:	ldr	r2, [r3, #4]
    1406:	cmp	r2, r4
    1408:	bcs.n	141c <error@@Base+0x2b0>
    140a:	adds	r4, r2, #1
    140c:	str	r4, [r3, #4]
    140e:	strb	r1, [r2, #0]
    1410:	ldrb.w	r1, [r0, #1]!
    1414:	cmp	r1, #0
    1416:	bne.n	13fe <error@@Base+0x292>
    1418:	pop	{r3, r4, r5, pc}
    141a:	bx	lr
    141c:	bl	13b8 <error@@Base+0x24c>
    1420:	lsrs	r0, r5, #16
    1422:	movs	r1, r0
    1424:	ldr	r1, [pc, #156]	; (14c4 <error@@Base+0x358>)
    1426:	movs	r2, #10
    1428:	push	{r3, r4, r5, lr}
    142a:	add	r1, pc
    142c:	mov	r4, r0
    142e:	blx	9d0 <strncmp@plt>
    1432:	ldr	r5, [pc, #148]	; (14c8 <error@@Base+0x35c>)
    1434:	add	r5, pc
    1436:	cmp	r0, #0
    1438:	beq.n	14a0 <error@@Base+0x334>
    143a:	ldr	r1, [pc, #144]	; (14cc <error@@Base+0x360>)
    143c:	movs	r2, #8
    143e:	mov	r0, r4
    1440:	add	r1, pc
    1442:	blx	9d0 <strncmp@plt>
    1446:	cbz	r0, 1492 <error@@Base+0x326>
    1448:	ldr	r1, [pc, #132]	; (14d0 <error@@Base+0x364>)
    144a:	movs	r2, #4
    144c:	mov	r0, r4
    144e:	add	r1, pc
    1450:	blx	9d0 <strncmp@plt>
    1454:	cbz	r0, 14b2 <error@@Base+0x346>
    1456:	ldr	r1, [pc, #124]	; (14d4 <error@@Base+0x368>)
    1458:	mov	r0, r4
    145a:	movs	r2, #5
    145c:	add	r1, pc
    145e:	blx	9d0 <strncmp@plt>
    1462:	cbnz	r0, 14ae <error@@Base+0x342>
    1464:	ldr	r1, [pc, #112]	; (14d8 <error@@Base+0x36c>)
    1466:	add	r1, pc
    1468:	ldr	r2, [r1, #0]
    146a:	add.w	r4, r2, #1008	; 0x3f0
    146e:	ldr	r3, [r2, #4]
    1470:	cmp	r3, r4
    1472:	bcs.n	14c0 <error@@Base+0x354>
    1474:	adds	r4, r3, #1
    1476:	str	r4, [r2, #4]
    1478:	strb	r0, [r3, #0]
    147a:	ldr	r2, [r1, #0]
    147c:	add.w	r1, r2, #1008	; 0x3f0
    1480:	ldr	r3, [r2, #4]
    1482:	cmp	r3, r1
    1484:	bcs.n	14c0 <error@@Base+0x354>
    1486:	adds	r0, r3, #1
    1488:	movs	r1, #103	; 0x67
    148a:	str	r0, [r2, #4]
    148c:	movs	r0, #1
    148e:	strb	r1, [r3, #0]
    1490:	pop	{r3, r4, r5, pc}
    1492:	ldr	r2, [pc, #72]	; (14dc <error@@Base+0x370>)
    1494:	movs	r0, #1
    1496:	ldr	r3, [pc, #72]	; (14e0 <error@@Base+0x374>)
    1498:	ldr	r2, [r5, r2]
    149a:	add	r3, pc
    149c:	str	r2, [r3, #0]
    149e:	pop	{r3, r4, r5, pc}
    14a0:	ldr	r2, [pc, #64]	; (14e4 <error@@Base+0x378>)
    14a2:	movs	r0, #1
    14a4:	ldr	r3, [pc, #64]	; (14e8 <error@@Base+0x37c>)
    14a6:	ldr	r2, [r5, r2]
    14a8:	add	r3, pc
    14aa:	str	r2, [r3, #0]
    14ac:	pop	{r3, r4, r5, pc}
    14ae:	movs	r0, #0
    14b0:	pop	{r3, r4, r5, pc}
    14b2:	ldr	r2, [pc, #56]	; (14ec <error@@Base+0x380>)
    14b4:	movs	r0, #1
    14b6:	ldr	r3, [pc, #56]	; (14f0 <error@@Base+0x384>)
    14b8:	ldr	r2, [r5, r2]
    14ba:	add	r3, pc
    14bc:	str	r2, [r3, #0]
    14be:	pop	{r3, r4, r5, pc}
    14c0:	bl	13b8 <error@@Base+0x24c>
    14c4:	lsls	r2, r3, #19
    14c6:	movs	r0, r0
    14c8:	lsrs	r4, r6, #12
    14ca:	movs	r1, r0
    14cc:	lsls	r0, r2, #19
    14ce:	movs	r0, r0
    14d0:	lsls	r6, r1, #19
    14d2:	movs	r0, r0
    14d4:	lsls	r0, r1, #19
    14d6:	movs	r0, r0
    14d8:	lsrs	r6, r7, #14
    14da:	movs	r1, r0
    14dc:	lsls	r4, r7, #1
    14de:	movs	r0, r0
    14e0:	lsrs	r2, r1, #14
    14e2:	movs	r1, r0
    14e4:	lsls	r4, r4, #1
    14e6:	movs	r0, r0
    14e8:	lsrs	r4, r7, #13
    14ea:	movs	r1, r0
    14ec:	lsls	r4, r1, #2
    14ee:	movs	r0, r0
    14f0:	lsrs	r2, r5, #13
    14f2:	movs	r1, r0
    14f4:	push	{r3, r4, r5, lr}
    14f6:	mov	r5, r0
    14f8:	ldr	r3, [pc, #44]	; (1528 <error@@Base+0x3bc>)
    14fa:	add	r3, pc
    14fc:	ldr	r3, [r3, #0]
    14fe:	ldr	r4, [r3, #0]
    1500:	ldr	r0, [r4, #0]
    1502:	cbnz	r0, 150c <error@@Base+0x3a0>
    1504:	b.n	151a <error@@Base+0x3ae>
    1506:	ldr.w	r0, [r4, #8]!
    150a:	cbz	r0, 151a <error@@Base+0x3ae>
    150c:	mov	r1, r5
    150e:	blx	91c <strcmp@plt>
    1512:	cmp	r0, #0
    1514:	bne.n	1506 <error@@Base+0x39a>
    1516:	ldr	r0, [r4, #4]
    1518:	pop	{r3, r4, r5, pc}
    151a:	ldr	r0, [pc, #16]	; (152c <error@@Base+0x3c0>)
    151c:	movs	r1, #0
    151e:	add	r0, pc
    1520:	bl	116c <error@@Base>
    1524:	movs	r0, #100	; 0x64
    1526:	pop	{r3, r4, r5, pc}
    1528:	lsrs	r2, r5, #12
    152a:	movs	r1, r0
    152c:	lsls	r6, r1, #16
    152e:	movs	r0, r0
    1530:	push	{r4, r5, r6, r7, lr}
    1532:	sub	sp, #12
    1534:	ldr	r7, [pc, #300]	; (1664 <error@@Base+0x4f8>)
    1536:	add	r6, sp, #4
    1538:	movs	r5, #0
    153a:	str	r0, [sp, #4]
    153c:	add	r7, pc
    153e:	b.n	155e <error@@Base+0x3f2>
    1540:	movs	r1, #0
    1542:	mov	r0, r7
    1544:	bl	116c <error@@Base>
    1548:	ldr	r3, [sp, #4]
    154a:	ldrb	r3, [r3, #0]
    154c:	and.w	r2, r3, #223	; 0xdf
    1550:	cmp	r3, #9
    1552:	it	ne
    1554:	cmpne	r2, #0
    1556:	ite	ne
    1558:	movne	r3, #1
    155a:	moveq	r3, #0
    155c:	beq.n	157a <error@@Base+0x40e>
    155e:	movs	r1, #1
    1560:	mov	r0, r6
    1562:	bl	11b0 <error@@Base+0x44>
    1566:	mov	r4, r0
    1568:	blx	9a0 <strlen@plt>
    156c:	add	r5, r0
    156e:	cmp	r5, #16
    1570:	bgt.n	1540 <error@@Base+0x3d4>
    1572:	mov	r0, r4
    1574:	bl	13f4 <error@@Base+0x288>
    1578:	b.n	1548 <error@@Base+0x3dc>
    157a:	ldr	r2, [pc, #236]	; (1668 <error@@Base+0x4fc>)
    157c:	add	r2, pc
    157e:	ldr	r2, [r2, #0]
    1580:	add.w	r0, r2, #1008	; 0x3f0
    1584:	ldr	r1, [r2, #4]
    1586:	cmp	r1, r0
    1588:	bcs.n	1654 <error@@Base+0x4e8>
    158a:	adds	r0, r1, #1
    158c:	str	r0, [r2, #4]
    158e:	strb	r3, [r1, #0]
    1590:	ldr	r0, [sp, #4]
    1592:	ldrb	r3, [r0, #0]
    1594:	cmp	r3, #32
    1596:	it	ne
    1598:	cmpne	r3, #9
    159a:	bne.n	15a8 <error@@Base+0x43c>
    159c:	ldrb.w	r3, [r0, #1]!
    15a0:	cmp	r3, #9
    15a2:	it	ne
    15a4:	cmpne	r3, #32
    15a6:	beq.n	159c <error@@Base+0x430>
    15a8:	str	r0, [sp, #4]
    15aa:	ldrb	r1, [r0, #0]
    15ac:	cmp	r1, #0
    15ae:	beq.n	1658 <error@@Base+0x4ec>
    15b0:	cmp	r1, #32
    15b2:	it	ne
    15b4:	cmpne	r1, #9
    15b6:	mov	r2, r0
    15b8:	beq.n	15ca <error@@Base+0x45e>
    15ba:	ldrb.w	r3, [r2, #1]!
    15be:	and.w	r1, r3, #223	; 0xdf
    15c2:	cmp	r3, #9
    15c4:	it	ne
    15c6:	cmpne	r1, #0
    15c8:	bne.n	15ba <error@@Base+0x44e>
    15ca:	str	r2, [sp, #4]
    15cc:	movs	r3, #0
    15ce:	ldrb	r4, [r2, #0]
    15d0:	strb	r3, [r2, #0]
    15d2:	bl	14f4 <error@@Base+0x388>
    15d6:	ldr	r3, [sp, #4]
    15d8:	strb	r4, [r3, #0]
    15da:	ldr	r2, [sp, #4]
    15dc:	ldrb	r3, [r2, #0]
    15de:	cmp	r3, #32
    15e0:	it	ne
    15e2:	cmpne	r3, #9
    15e4:	bne.n	15f2 <error@@Base+0x486>
    15e6:	ldrb.w	r3, [r2, #1]!
    15ea:	cmp	r3, #9
    15ec:	it	ne
    15ee:	cmpne	r3, #32
    15f0:	beq.n	15e6 <error@@Base+0x47a>
    15f2:	ldr	r3, [pc, #120]	; (166c <error@@Base+0x500>)
    15f4:	str	r2, [sp, #4]
    15f6:	add	r3, pc
    15f8:	ldrb	r1, [r2, #0]
    15fa:	ldr	r3, [r3, #0]
    15fc:	add.w	r4, r3, #1008	; 0x3f0
    1600:	ldr	r2, [r3, #4]
    1602:	cbnz	r1, 1612 <error@@Base+0x4a6>
    1604:	cmp	r2, r4
    1606:	bcs.n	1654 <error@@Base+0x4e8>
    1608:	adds	r1, r2, #1
    160a:	str	r1, [r3, #4]
    160c:	strb	r0, [r2, #0]
    160e:	add	sp, #12
    1610:	pop	{r4, r5, r6, r7, pc}
    1612:	cmp	r2, r4
    1614:	orr.w	r0, r0, #128	; 0x80
    1618:	bcs.n	1654 <error@@Base+0x4e8>
    161a:	adds	r1, r2, #1
    161c:	str	r1, [r3, #4]
    161e:	strb	r0, [r2, #0]
    1620:	ldr	r3, [sp, #4]
    1622:	ldrb	r3, [r3, #0]
    1624:	cbz	r3, 163a <error@@Base+0x4ce>
    1626:	movs	r1, #0
    1628:	mov	r0, r6
    162a:	bl	11b0 <error@@Base+0x44>
    162e:	bl	13f4 <error@@Base+0x288>
    1632:	ldr	r3, [sp, #4]
    1634:	ldrb	r3, [r3, #0]
    1636:	cmp	r3, #0
    1638:	bne.n	1626 <error@@Base+0x4ba>
    163a:	ldr	r3, [pc, #52]	; (1670 <error@@Base+0x504>)
    163c:	add	r3, pc
    163e:	ldr	r2, [r3, #0]
    1640:	add.w	r1, r2, #1008	; 0x3f0
    1644:	ldr	r3, [r2, #4]
    1646:	cmp	r3, r1
    1648:	itttt	cc
    164a:	addcc	r0, r3, #1
    164c:	strcc	r0, [r2, #4]
    164e:	movcc	r1, #0
    1650:	strbcc	r1, [r3, #0]
    1652:	bcc.n	160e <error@@Base+0x4a2>
    1654:	bl	13b8 <error@@Base+0x24c>
    1658:	ldr	r0, [pc, #24]	; (1674 <error@@Base+0x508>)
    165a:	add	r0, pc
    165c:	bl	116c <error@@Base>
    1660:	add	sp, #12
    1662:	pop	{r4, r5, r6, r7, pc}
    1664:	lsls	r0, r0, #16
    1666:	movs	r0, r0
    1668:	lsrs	r0, r5, #10
    166a:	movs	r1, r0
    166c:	lsrs	r6, r5, #8
    166e:	movs	r1, r0
    1670:	lsrs	r0, r5, #7
    1672:	movs	r1, r0
    1674:	lsls	r6, r6, #11
    1676:	movs	r0, r0
    1678:	push	{r4, lr}
    167a:	sub	sp, #8
    167c:	add	r4, sp, #4
    167e:	str	r0, [sp, #4]
    1680:	movs	r1, #0
    1682:	mov	r0, r4
    1684:	bl	11b0 <error@@Base+0x44>
    1688:	bl	13f4 <error@@Base+0x288>
    168c:	ldr	r3, [sp, #4]
    168e:	ldrb	r2, [r3, #0]
    1690:	cmp	r2, #9
    1692:	it	ne
    1694:	cmpne	r2, #61	; 0x3d
    1696:	ite	ne
    1698:	movne	r3, #1
    169a:	moveq	r3, #0
    169c:	tst.w	r2, #223	; 0xdf
    16a0:	it	eq
    16a2:	moveq	r3, #0
    16a4:	cmp	r3, #0
    16a6:	bne.n	1680 <error@@Base+0x514>
    16a8:	ldr	r2, [pc, #172]	; (1758 <error@@Base+0x5ec>)
    16aa:	add	r2, pc
    16ac:	ldr	r1, [r2, #0]
    16ae:	add.w	r0, r1, #1008	; 0x3f0
    16b2:	ldr	r2, [r1, #4]
    16b4:	cmp	r2, r0
    16b6:	bcs.n	1754 <error@@Base+0x5e8>
    16b8:	adds	r0, r2, #1
    16ba:	str	r0, [r1, #4]
    16bc:	strb	r3, [r2, #0]
    16be:	ldr	r2, [sp, #4]
    16c0:	ldrb	r3, [r2, #0]
    16c2:	cmp	r3, #9
    16c4:	it	ne
    16c6:	cmpne	r3, #32
    16c8:	bne.n	16d6 <error@@Base+0x56a>
    16ca:	ldrb.w	r3, [r2, #1]!
    16ce:	cmp	r3, #9
    16d0:	it	ne
    16d2:	cmpne	r3, #32
    16d4:	beq.n	16ca <error@@Base+0x55e>
    16d6:	adds	r3, r2, #1
    16d8:	str	r3, [sp, #4]
    16da:	ldrb	r3, [r2, #0]
    16dc:	cmp	r3, #61	; 0x3d
    16de:	bne.n	1746 <error@@Base+0x5da>
    16e0:	ldr	r3, [pc, #120]	; (175c <error@@Base+0x5f0>)
    16e2:	add	r3, pc
    16e4:	ldr	r2, [r3, #0]
    16e6:	add.w	r1, r2, #1008	; 0x3f0
    16ea:	ldr	r3, [r2, #4]
    16ec:	cmp	r3, r1
    16ee:	bcs.n	1754 <error@@Base+0x5e8>
    16f0:	adds	r0, r3, #1
    16f2:	movs	r1, #129	; 0x81
    16f4:	str	r0, [r2, #4]
    16f6:	strb	r1, [r3, #0]
    16f8:	ldr	r2, [sp, #4]
    16fa:	ldrb	r3, [r2, #0]
    16fc:	cmp	r3, #32
    16fe:	it	ne
    1700:	cmpne	r3, #9
    1702:	bne.n	1710 <error@@Base+0x5a4>
    1704:	ldrb.w	r3, [r2, #1]!
    1708:	cmp	r3, #9
    170a:	it	ne
    170c:	cmpne	r3, #32
    170e:	beq.n	1704 <error@@Base+0x598>
    1710:	str	r2, [sp, #4]
    1712:	ldrb	r3, [r2, #0]
    1714:	cbz	r3, 172a <error@@Base+0x5be>
    1716:	movs	r1, #0
    1718:	mov	r0, r4
    171a:	bl	11b0 <error@@Base+0x44>
    171e:	bl	13f4 <error@@Base+0x288>
    1722:	ldr	r3, [sp, #4]
    1724:	ldrb	r3, [r3, #0]
    1726:	cmp	r3, #0
    1728:	bne.n	1716 <error@@Base+0x5aa>
    172a:	ldr	r3, [pc, #52]	; (1760 <error@@Base+0x5f4>)
    172c:	add	r3, pc
    172e:	ldr	r2, [r3, #0]
    1730:	add.w	r1, r2, #1008	; 0x3f0
    1734:	ldr	r3, [r2, #4]
    1736:	cmp	r3, r1
    1738:	bcs.n	1754 <error@@Base+0x5e8>
    173a:	adds	r0, r3, #1
    173c:	movs	r1, #0
    173e:	str	r0, [r2, #4]
    1740:	strb	r1, [r3, #0]
    1742:	add	sp, #8
    1744:	pop	{r4, pc}
    1746:	ldr	r0, [pc, #28]	; (1764 <error@@Base+0x5f8>)
    1748:	movs	r1, #0
    174a:	add	r0, pc
    174c:	bl	116c <error@@Base>
    1750:	add	sp, #8
    1752:	pop	{r4, pc}
    1754:	bl	13b8 <error@@Base+0x24c>
    1758:	lsrs	r2, r7, #5
    175a:	movs	r1, r0
    175c:	lsrs	r2, r0, #5
    175e:	movs	r1, r0
    1760:	lsrs	r0, r7, #3
    1762:	movs	r1, r0
    1764:	lsls	r6, r2, #8
    1766:	movs	r0, r0
    1768:	push	{r3, r4, r5, lr}
    176a:	mov	r4, r0
    176c:	ldr	r5, [pc, #52]	; (17a4 <error@@Base+0x638>)
    176e:	add	r5, pc
    1770:	bl	1424 <error@@Base+0x2b8>
    1774:	cbz	r0, 1778 <error@@Base+0x60c>
    1776:	pop	{r3, r4, r5, pc}
    1778:	mov	r0, r4
    177a:	bl	1030 <abort@plt+0x654>
    177e:	ldrb	r3, [r0, #0]
    1780:	cmp	r3, #0
    1782:	beq.n	1776 <error@@Base+0x60a>
    1784:	ldr	r2, [pc, #32]	; (17a8 <error@@Base+0x63c>)
    1786:	ldr	r3, [pc, #36]	; (17ac <error@@Base+0x640>)
    1788:	add	r2, pc
    178a:	ldr	r3, [r5, r3]
    178c:	ldr	r2, [r2, #0]
    178e:	cmp	r2, r3
    1790:	beq.n	179a <error@@Base+0x62e>
    1792:	ldmia.w	sp!, {r3, r4, r5, lr}
    1796:	b.w	1530 <error@@Base+0x3c4>
    179a:	ldmia.w	sp!, {r3, r4, r5, lr}
    179e:	b.w	1678 <error@@Base+0x50c>
    17a2:	nop
    17a4:	lsls	r2, r7, #31
    17a6:	movs	r1, r0
    17a8:	lsrs	r4, r3, #2
    17aa:	movs	r1, r0
    17ac:	lsls	r4, r1, #2
    17ae:	movs	r0, r0
    17b0:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    17b4:	mov	r7, r0
    17b6:	ldr	r6, [pc, #48]	; (17e8 <error@@Base+0x67c>)
    17b8:	mov	r8, r1
    17ba:	ldr	r5, [pc, #48]	; (17ec <error@@Base+0x680>)
    17bc:	mov	r9, r2
    17be:	add	r6, pc
    17c0:	blx	8f0 <calloc@plt-0x20>
    17c4:	add	r5, pc
    17c6:	subs	r6, r6, r5
    17c8:	asrs	r6, r6, #2
    17ca:	beq.n	17e2 <error@@Base+0x676>
    17cc:	subs	r5, #4
    17ce:	movs	r4, #0
    17d0:	ldr.w	r3, [r5, #4]!
    17d4:	adds	r4, #1
    17d6:	mov	r2, r9
    17d8:	mov	r1, r8
    17da:	mov	r0, r7
    17dc:	blx	r3
    17de:	cmp	r6, r4
    17e0:	bne.n	17d0 <error@@Base+0x664>
    17e2:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    17e6:	nop
    17e8:	lsls	r6, r4, #26
    17ea:	movs	r1, r0
    17ec:	lsls	r4, r3, #26
    17ee:	movs	r1, r0
    17f0:	bx	lr
    17f2:	nop

Disassembly of section .fini:

000017f4 <.fini>:
    17f4:	push	{r3, lr}
    17f8:	pop	{r3, pc}
